push
mov
sub
push
push
push
movl
mov
pusha
call
push
push
call
push
push
call
movl
movl
movl
movl
movl
call
mov
mov
mov
movzbl
cmp
je
mov
movzbl
cmp
je
mov
movzbl
cmp
jne
mov
mov
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
push
call
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
push
push
call
test
je
int
call
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
add
mov
popa
push
mov
mov
xor
ret
jmp
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
sub
shr
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
movzwl
mov
pop
ret
push
mov
sub
push
lea
push
call
movl
jmp
mov
add
mov
mov
cmp
jge
mov
add
mov
add
mov
mov
cmpl
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
push
push
push
push
push
push
lea
push
call
mov
cmpl
je
cmpl
jne
jmp
mov
push
call
jmp
mov
pop
ret
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
movl
mov
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
movl
movl
mov
add
jmp
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
mov
mov
push
lea
push
call
mov
mov
mov
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
add
mov
cmpl
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
push
push
push
push
push
push
lea
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
mov
push
call
mov
mov
add
mov
mov
mov
mov
xor
mov
mov
jmp
mov
pop
ret
push
mov
sub
mov
cmpl
je
mov
add
mov
mov
mov
mov
call
movl
jmp
mov
add
mov
mov
cmp
jae
mov
push
mov
push
call
add
sar
cmp
jne
movl
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
mov
mov
push
lea
push
call
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jb
add
jae
addr16
outsb
dec
gs
add
jbe
jo
xor
inc
add
add
inc
add
add
add
add
add
inc
add
sub
add
xor
add
add
inc
add
add
add
add
add
inc
add
add
add
inc
add
inc
add
add
jge
pop
add
xor
add
arpl
push
add
jb
jbe
add
xor
xor
add
inc
add
jns
jae
je
xor
xor
xor
xor
pop
add
inc
add
jb
imul
add
js
add
add
push
dec
inc
push
push
push
dec
dec
add
add
add
rolb
add
jns
jae
je
xor
xor
xor
xor
pop
add
inc
add
jb
imul
add
js
add
add
add
add
add
add
add
add
nop
xor
cwtl
xor
mov
xor
add
pop
add
add
sub
aaa
cmp
cmp
dec
cmp
pop
cmp
cmp
cmp
adc
push
aas
xor
gs
jae
popf
aas
cmp
add
out
add
mov
xor
xor
xor
fdivs
xor
add
add
mov
xor
xor
xor
xor
xor
xor
xor
xor
mov
push
ss
xor
ss
xor
aaa
dec
xor
aaa
xor
jnp
outsb
ss
xor
ss
mov
cli
xor
das
dec
xor
xor
push
xor
arpl
mov
das
sahf
xor
das
lods
xor
das
les
das
fnstenv
das
in
push
das
clc
xor
das
add
xchg
xor
xor
xor
xor
push
xor
fidivs
adc
jecxz
sub
ss
ss
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
adc
add
insb
arpl
addr16
je
add
mov
push
jb
jbe
inc
pop
inc
add
and
sbb
jb
jbe
inc
aas
push
add
sub
dec
cmp
insb
or
add
inc
out
add
and
gs
sti
pusha
inc
imul
ja
jb
gs
out
add
mov
add
add
jbe
imul
add
add
pop
jne
orb
mov
push
out
add
jmp
inc
add
push
inc
add
push
inc
add
pop
inc
add
pop
inc
add
inc
add
inc
add
popa
je
xor
pusha
jb
xor
add
xor
sub
jb
jbe
inc
cmovne
add
jb
add
xor
pop
insb
insb
out
add
shlb
arpl
outsl
cs
add
mov
outsl
add
lret
arpl
add
xchg
pusha
insl
arpl
insb
jb
xchg
fs
inc
xchg
outsl
arpl
add
add
fs
inc
push
push
add
cmp
popa
push
push
imul
add
add
dec
inc
dec
push
jb
xor
push
adc
jo
add
pop
popa
jo
push
add
or
jb
or
xor
add
add
push
dec
gs
jae
add
add
add
lahf
pop
add
ljmp
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
in
add
in
add
in
add
in
add
in
add
jmp
add
in
add
in
add
jmp
add
in
add
mov
add
jmp
cmp
add
les
add
in
add
aam
add
ljmp
call
in
add
in
add
and
add
jo
jmp
in
addl
adc
add
add
add
add
dec
add
add
add
add
add
add
add
add
test
add
incb
add
push
add
add
add
add
add
add
add
add
add
add
adc
pop
sbb
add
add
add
add
add
add
add
add
add
add
jle
add
mov
add
mov
add
jle
add
out
adc
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
outsl
gs
mov
add
sbb
add
add
add
ljmp
out
clc
ljmp
out
add
out
add
inc
or
add
out
and
out
jecxz
out
or
out
lret
add
ljmp
out
add
out
add
cmpsl
mov
bound
out
lods
sub
add
adc
add
daa
out
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
jle
add
jle
add
mov
add
mov
add
jle
add
jle
add
dec
push
add
dec
push
add
ds
add
ds
add
dec
push
add
dec
push
add
ds
add
ds
add
push
push
add
push
push
add
incb
add
push
push
add
push
push
add
incb
add
into
add
add
mov
add
add
into
add
add
mov
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
sub
add
jo
add
pusha
mov
add
inc
mov
add
mov
lret
add
loopne
add
fidivrs
add
xor
out
mov
mov
in
push
mov
in
movsl
mov
in
sarl
add
mov
in
jne
in
xchg
mov
in
sbb
mov
in
idivl
in
lods
mov
out
dec
ret
in
gs
in
xchg
in
ret
sub
ret
in
in
in
movsl
ret
jmp
ret
add
cmpsb
add
jns
add
cmpsl
add
loope
add
add
add
jnp
add
xchg
add
mov
cmpsl
add
aad
add
add
daa
add
jmp
sbb
add
in
add
addb
mov
push
add
xchg
dec
add
jns
add
cmp
add
add
xor
add
inc
add
mov
xchg
add
jecxz
add
repz
add
addl
add
adc
add
cli
sahf
add
ds
add
data16
add
cmp
add
pop
sahf
add
sahf
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
sahf
add
aam
add
into
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
sub
add
inc
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
ret
add
mov
ret
add
or
add
mov
add
mov
add
ret
out
ret
add
add
add
jle
add
dec
aam
out
aam
out
aam
out
aam
out
aam
out
scas
add
into
scas
add
adc
out
lods
add
add
stos
in
popa
stos
in
dec
stos
in
push
stos
in
pop
stos
in
daa
stos
in
imull
in
out
stos
in
xchg
stos
in
jg
in
cmpsl
stos
in
lods
stos
in
xor
in
mov
in
shrl
in
popf
test
in
add
in
out
test
in
or
in
pop
lods
in
aas
lods
in
add
add
pop
cmp
add
pop
add
pop
add
pop
add
jp
add
xchg
pop
add
mov
add
addb
aad
pop
add
push
pop
add
cmp
add
dec
pop
add
pop
add
pop
add
cmp
add
mov
add
addl
std
jl
add
mov
add
jno
add
jns
add
jno
add
pop
add
pop
add
push
pop
add
jb
add
dec
mov
add
mov
add
add
loop
add
shrb
add
add
into
push
add
lcall
add
add
mov
add
addb
cmpb
xchg
add
mov
add
mov
stos
add
out
add
dec
push
add
mov
add
mov
lods
add
add
add
lcall
add
lods
add
out
mov
add
mov
add
scas
mov
add
into
mov
add
mov
add
mov
mov
add
pushf
mov
add
cmp
add
mov
add
and
add
pop
mov
add
sarb
out
add
out
rolb
rol
out
rolb
mov
rolb
out
add
add
shl
arpl
in
and
in
aaa
shl
or
in
idivl
in
iret
in
sbb
in
das
shl
dec
shl
imul
in
test
in
jge
in
addr16
in
pop
in
popf
rolb
add
in
stc
shl
ret
shl
add
shl
or
in
stc
shl
imul
add
in
ja
in
cltd
shl
sub
in
cltd
ret
add
and
add
sti
and
add
sbb
add
pop
and
dec
sub
inc
and
pop
cmpsl
add
mov
cmpsb
add
addl
add
cmpsb
add
mov
add
andl
add
movsb
add
in
add
in
stos
add
xlat
mov
add
in
add
insl
sub
add
add
cmp
and
add
sub
add
mov
roll
xchg
rolb
ret
add
add
je
add
dec
roll
inc
roll
roll
adc
add
adc
add
ret
add
ret
add
adc
add
sub
add
and
add
and
add
sub
add
add
add
nop
les
add
les
add
cmpsb
add
push
add
pop
cmpsb
add
cld
ret
mov
ret
outsb
ret
out
ret
add
sub
add
add
add
cmp
add
sub
add
fadd
add
faddl
add
in
aam
out
aam
out
add
faddl
add
xor
add
roll
out
roll
out
rolb
out
roll
out
roll
out
roll
out
rolb
out
roll
out
roll
out
roll
out
roll
out
roll
out
roll
out
mov
add
in
roll
out
roll
out
roll
out
aam
out
int
in
in
jmp
add
sbb
out
xlat
add
sub
out
popa
mov
in
clc
add
sbbl
in
fildl
out
or
in
pop
mov
out
stc
add
sub
out
testb
cmpl
in
cmp
add
add
sub
out
fiaddl
out
out
add
sub
out
or
in
call
add
addl
cltd
add
in
add
in
add
scas
push
add
rcll
add
mov
add
popa
xor
add
xorl
add
cmp
adc
add
add
pop
add
mov
add
in
add
jle
add
outsb
pop
add
outsl
pop
add
pop
pop
add
pop
pop
add
cmp
add
pop
add
jle
add
jle
add
jne
mov
xlat
arpl
dec
pop
sub
lahf
cmp
into
adc
dec
imul
jae
les
sbb
add
add
and
mov
aaa
cwtl
mov
repz
dec
or
inc
lea
addr16
sti
and
insb
pop
lods
fcomps
fs
jno
dec
test
rclb
sub
mov
inc
test
rclb
sub
mov
out
je
jb
mov
add
test
push
mov
dec
test
or
mov
pop
sbb
call
jno
sub
mov
mov
idivl
sbb
in
sub
adc
ja
cld
mov
fsub
jns
shlb
mov
adc
mov
movsl
jmp
sub
sbb
mov
fisttpl
push
fsubs
add
sub
add
add
movsb
negl
lea
repz
xchg
out
cs
push
jo
repz
out
jmp
daa
repnz
ret
repz
popf
out
scas
lods
outsl
and
popf
cmc
mov
jo
out
jmp
xchg
jbe
andl
lods
jmp
popf
cmc
mov
jo
out
jmp
add
sub
pop
bound
push
mov
lods
jmp
enter
clc
dec
rcll
dec
int3
add
jmp
dec
scas
inc
lea
add
jge,pn
and
mov
adc
pop
mov
gs
fstpl
cs
xchg
mov
shrb
push
xor
xchg
movsb
mov
cli
push
push
add
adc
add
scas
jle
and
icebp
jge
bound
add
inc
in
add
cmpsb
cmp
dec
add
mov
jbe
pushl
and
lods
add
sarl
and
leave
add
adc
add
dec
in
rcll
jo
add
xchg
jge
and
mov
add
aam
rclb
mov
add
mov
dec
lods
aam
adc
fwait
std
jmp
and
adc
lcall
jno
rcll
imul
std
out
jns
inc
divb
rcl
jbe
add
push
jecxz
jl
adc
add
scas
push
sahf
stos
popa
mov
add
outsl
mov
and
push
sub
cmp
divb
add
lods
mov
sbb
cmp
mov
lea
fwait
inc
adc
mov
mov
shl
dec
add
xlat
ret
popf
mov
mov
dec
std
push
mov
js
inc
xchg
xor
testb
lret
cs
jmp
std
and
add
add
add
and
in
add
add
add
add
add
in
loope
leave
add
add
add
flds
testl
icebp
add
add
add
add
add
imul
movsb
add
add
add
out
jns
movsb
add
add
jmp
out
pop
add
leave
add
add
add
add
jmp
add
pop
out
add
in
add
in
add
add
jmp
in
repz
in
push
add
jmp
push
add
in
adc
jmp
jmp
arpl
jmp
jmp
add
faddl
add
faddl
add
jmp
add
jmp
cmp
jmp
jmp
add
jmp
pop
add
in
sbb
jmp
jmp
imul
into
movaps
into
or
add
cmovs
into
or
add
andps
mov
adc
mov
jecxz
lods
add
add
je
mov
xor
mov
enter
or
add
and
dec
or
add
je
add
call
add
subps
push
nopl
push
or
add
push
jl
push
add
or
add
fiadds
pop
out
or
or
in
or
out
or
in
or
in
or
out
add
out
or
in
or
out
or
out
or
add
add
in
or
out
or
out
add
out
or
in
or
out
or
in
or
out
or
out
add
out
or
in
or
out
or
in
or
add
or
add
add
add
or
jmp
or
add
or
jmp
add
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
or
jmp
or
stc
add
add
or
add
or
add
or
add
jecxz
add
in
pop
add
in
sbb
jmp
fnsave
call
in
sub
jmp
fmull
add
in
mov
jmp
jecxz
add
add
jmp
in
bnd
faddl
call
in
adc
jmp
in
add
in
bound
jmp
jecxz
add
faddl
add
in
addb
in
inc
add
jecxz
add
in
add
in
cmp
add
or
add
push
xchg
add
or
add
or
add
push
rolb
out
add
add
or
into
or
add
or
add
or
add
add
mov
push
add
or
add
or
mov
xor
add
or
add
add
and
add
or
add
inc
add
or
add
faddl
or
in
or
in
or
out
add
in
or
in
or
out
add
out
or
in
or
out
or
out
or
in
or
out
add
out
or
add
add
in
or
out
or
out
add
out
or
in
or
out
or
out
add
out
or
in
or
out
or
out
or
movsb
add
or
stc
add
add
or
jmp
add
jmp
or
add
add
add
or
or
add
add
add
or
add
or
or
jmp
add
add
or
add
or
add
or
add
add
jmp
or
add
or
add
or
add
or
add
in
cld
call
fdivrl
jmp
out
add
in
xor
jmp
fnsave
fucom
pusha
add
in
push
add
fcoml
jmp
out
call
fsubl
jmp
in
add
jmp
faddl
fcmovnbe
add
aam
jmp
fdiv
call
fcoml
fildl
push
add
fcoml
add
fcmovnb
add
popa
or
jmp
or
add
pop
mov
add
add
dec
or
add
pop
loope
push
aad
add
or
incb
sbb
incb
xchg
add
or
incb
cmp
incb
roll
adc
into
jmp
mov
add
add
incl
add
rolb
add
call
add
shrb
add
pushl
add
leave
add
lret
decb
fmull
fs
or
fmull
out
or
fmull
test
fmull
inc
out
or
out
incb
out
or
or
fmull
out
push
out
or
or
fmull
out
push
out
or
or
fmull
out
or
fmull
mov
add
add
fmull
dec
out
or
out
cld
add
fmull
push
out
or
out
or
out
or
add
or
add
cld
in
add
or
add
or
add
or
add
or
jmp
or
add
cld
loope
jmp
or
add
or
movsl
add
or
jmp
add
add
cld
cmc
add
or
add
or
jmp
or
jmp
or
add
or
add
or
add
or
add
fidivrl
add
fcompl
jmp
in
mov
add
fsubrl
jmp
in
sahf
add
in
or
jmp
fmull
jmp
in
fiadds
stc
sbb
call
fdiv
call
sti
gs
fcoml
jmp
in
scas
add
fucomi
call
fsubl
add
in
mov
jmp
faddl
add
mov
add
jmp
jle
adc
fwait
int3
addb
std
push
add
jo
jle
xor
dec
iret
ret
add
add
or
ds
pusha
add
int3
and
dec
iret
mov
add
int3
addb
int3
inc
add
iret
loop
push
std
add
add
lret
sbb
push
iret
xchg
add
lret
js
dec
cmp
into
rcl
add
cli
adc
mov
lret
sub
into
shlb
add
lret
dec
add
int3
or
add
add
fdivr
push
out
sti
adc
lods
sti
add
test
sti
je
fdivr
xor
fdivr
lret
or
out
sti
and
fdivr
stos
out
sti
add
fdivr
test
fdivr
inc
out
cld
ljmp
sti
pop
out
sti
sbb
fdivr
lcall
sti
jl
fdivr
cmp
fdivr
lret
out
sti
insb
out
sti
sub
fdivr
mov
out
sti
mov
add
sti
xor
cli
popf
add
or
add
sti
xor
add
sti
movsl
add
or
add
sti
cmc
add
sti
adc
add
or
add
sti
lds
jmp
cli
addl
jmp
sti
movsl
add
cli
add
stc
or
add
sti
lods
add
sti
fldl
jmp
or
jmp
cli
mov
sti
or
add
sti
cmp
add
cli
jno
add
lods
cli
call
pushf
cmp
jmp
filds
add
mov
add
jl
ljmp
jnp
fcmovu
adc
jmp
pop
push
add
pop
mov
call
cmp
add
cmp
push
add
sub
add
sbb
add
sbb
cli
call
cld
in
call
fbld
jmp
fmull
add
fucomip
call
into
enter
leave
mov
add
enter
iret
incb
mov
add
xchg
sti
add
popf
sti
adc
test
add
sti
add
xchg
sti
add
sti
inc
add
add
sti
add
push
sti
add
and
and
sbb
add
or
or
adc
add
and
addb
sti
decl
sti
add
adc
addb
sti
sbb
add
sti
push
add
sti
add
jecxz
pusha
add
cld
add
int3
or
aam
add
test
xor
test
add
scas
or
out
or
repz
out
or
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
jmp
out
jmp
out
jmp
out
jmp
out
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
repnz
add
add
push
in
push
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
push
add
add
incb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
pop
add
incl
add
pop
add
add
add
incl
add
incl
add
add
add
add
add
incl
add
add
add
add
add
add
pushf
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
out
add
add
filds
scas
add
add
add
add
add
add
add
add
add
add
out
add
add
add
filds
mov
add
add
add
add
out
add
add
add
add
add
filds
daa
add
add
add
add
add
add
add
add
filds
aaa
add
add
add
add
add
add
add
add
mul
sti
ljmp
sti
jmp
in
jmp
sti
jmp
jecxz
incl
jmp
incl
in
incl
sti
push
in
pushl
sti
pushl
jecxz
pushl
jecxz
pushl
sti
push
in
out
in
ljmp
sti
lcall
jmp
lcall
jmp
decl
in
aas
jmp
mov
jmp
jg
sti
ljmp
jmp
ljmp
daa
add
add
add
add
add
add
add
add
add
add
incl
add
or
mov
or
and
or
roll
or
push
add
add
add
add
or
repz
add
add
add
add
add
incl
add
incl
add
pop
add
incl
add
pop
add
incl
add
incl
add
incl
add
or
xchg
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
or
imul
out
add
or
fldl
out
add
out
add
or
cmp
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
rolb
fiadds
rolb
add
out
add
fiadds
adc
add
add
out
add
add
add
add
add
add
out
add
fiadds
mov
add
add
add
add
add
add
add
add
add
add
out
add
fiadds
addb
add
add
add
add
add
add
add
add
add
out
add
fiadds
cs
add
add
add
scas
jecxz
add
in
add
in
add
or
inc
in
add
jecxz
add
in
add
in
add
in
add
in
add
or
jbe
or
sahf
in
add
jecxz
add
in
add
in
add
in
add
or
push
in
add
or
jbe
or
in
add
in
add
in
add
in
add
or
pop
in
add
mov
or
adc
or
jno
or
xor
or
mov
add
or
icebp
add
add
or
xchg
add
or
add
or
jno
or
addl
or
icebp
add
add
add
or
mov
add
add
add
or
popa
add
add
push
or
xchg
add
or
jle
pop
add
pop
pop
add
or
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
loopne
add
out
push
pop
loope
or
loope
or
lock
add
in
or
lock
or
jecxz
or
jecxz
or
repz
repz
loop
or
repnz
bnd
or
loopne
or
fmuls
or
lock
in
call
fstp
cmc
lock
in
call
push
or
hlt
icebp
push
or
in
push
or
add
add
add
adc
push
test
push
push
js
push
push
mov
push
push
mov
push
push
mov
push
push
pop
adc
push
dec
adc
push
dec
adc
push
sub
push
push
cmp
push
push
dec
adc
push
dec
adc
push
or
push
push
sbb
push
push
or
push
push
or
movaps
psubw
wbinvd
adc
wbinvd
adc
wbinvd
adc
psubusw
bswap
adc
sldt
add
leave
adc
pop
adc
ud1
bswap
adc
movntq
adc
lock
psubsb
add
neg
adc
adc
mov
adc
shll
pop
lock
pop
clc
rcrb
sbb
rcrb
sbb
add
filds
sbb
iret
mov
sbb
mov
sbb
mov
sbb
out
rcrb
sbb
add
add
rcrb
sbb
add
sbb
add
sbb
mov
sbb
mov
sbb
cmpsb
sbb
std
cmpsb
sbb
in
aad
sbb
aad
sbb
add
sbb
push
add
int3
push
repnz
push
repnz
push
loop
cld
push
loop
in
push
aad
jmp
int
jecxz
add
pop
rcll
cmc
pop
lret
pop
in
pop
add
in
sti
pop
fstpl
repz
aad
jmp
int
jecxz
add
pop
rcll
cmc
pop
lret
pop
in
pop
add
in
sti
pop
fstpl
repz
aam
ljmp
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
aam
sbb
add
sbb
hlt
pop
sbb
in
sbb
jmp
out
add
icebp
in
or
repz
or
fadds
or
icebp
or
out
jecxz
psubusw
adc
adc
clc
aad
adc
aad
adc
adc
adc
notl
adc
notl
adc
lock
fmuls
adc
rorb
adc
fmuls
adc
rcll
adc
add
adc
push
cwtl
movhps
mov
add
add
adc
pop
cltd
adc
pop
mov
adc
pop
mov
sbb
xchg
sbb
sbb
out
sbb
jbe
sbb
push
sbb
sbb
inc
sbb
sbb
pop
push
sbb
out
sbb
out
sbb
aaa
push
sbb
pop
push
sbb
pop
push
sbb
pop
push
sbb
xor
sbb
adc
sbb
in
sbb
in
sbb
out
sbb
std
mov
sbb
movsb
sbb
in
movsb
sbb
in
aad
sbb
aad
sbb
add
sbb
int3
mov
sbb
mov
sbb
movsl
sbb
in
movsl
sbb
jmp
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
test
add
add
out
add
ljmp
jmp
out
add
in
add
jmp
hlt
add
jmp
les
jmp
add
add
in
add
std
jbe
lret
add
cltd
rolb
pop
pop
dec
sub
adc
jmp
sbb
push
test
xlat
jns
jge
loopne
sub
xchg
add
je
out
dec
outsb
out
shlb
or
add
add
repnz
test
gs
insl
das
and
roll
push
sub
movsb
jp
std
sbb
mov
jmp
arpl
push
cli
sar
pop
lahf
insl
cmp
imul
data16
inc
lds
mov
or
movsl
xor
mov
sbb
mov
lods
sub
pop
filds
aad
cmpsl
lods
shrb
rcl
fidivs
int
rolb
add
add
scas
mov
leave
mov
mov
lahf
sub
add
mov
fimull
stos
or
aaa
outsl
or
inc
push
cmpsb
xlat
out
pop
cmp
adc
jecxz
outsl
rclb
aad
and
test
mov
xchg
mov
fisttps
mov
or
fwait
push
inc
xor
push
add
add
add
ret
xchg
call
push
mov
or
cmpl
test
repnz
out
sub
lock
mov
jl
jg
mov
push
sbb
sbb
cmp
mov
push
inc
pop
push
pop
out
jl
dec
addr16
cmp
ds
xchg
icebp
push
rclb
inc
lods
into
inc
int
shl
mov
pusha
cltd
jnp
int
cmp
inc
iret
push
xor
std
test
aad
or
stos
add
mov
int3
ja
push
cmp
and
sbb
mov
out
rcrl
mov
shll
fidivrs
ja
loop
add
add
jno
dec
enter
gs
adc
jns
arpl
fsubr
ds
cld
mov
add
icebp
iret
jae
out
es
dec
es
add
dec
push
inc
push
in
js
xchg
sbb
add
mov
xchg
dec
and
xchg
jne
push
add
imul
adc
push
imul
add
add
mov
outsb
mov
fwait
rorb
adc
frstor
fdivrs
mov
mov
fisttpl
pusha
xchg
shll
pop
jae
dec
jg
mov
cmpsb
mov
mov
call
or
dec
add
cmp
add
pop
movsb
pusha
adc
aad
jg
test
jecxz
imul
add
add
mov
dec
cmp
outsl
lret
push
and
or
add
cltd
clc
mov
xchg
dec
pop
mov
cmpsl
sub
movsl
stos
shlb
xchg
scas
fidivrs
shll
arpl
pusha
push
mov
insl
in
std
or
in
or
call
push
imul
add
add
movsl
xchg
fbstp
add
jno
push
adcb
pop
mov
cmp
mov
cmpsb
xor
ja
xor
dec
cmp
or
dec
fistpll
sbb
ljmp
xchg
dec
jg
popa
inc
lods
cmp
or
xchg
movsl
frstor
aad
add
add
popf
xchg
cmp
incl
into
and
xor
sbb
ret
ds
aam
lods
lcall
mov
lds
movsb
push
imul
and
inc
nop
push
jns
cmc
pop
jno
arpl
push
mov
xorl
pop
int
cmp
push
sahf
or
es
or
add
icebp
sbb
cltd
sbb
mov
inc
add
sub
test
or
add
xor
sub
jbe
jge
sbb
push
orl
ret
out
cli
jne
hlt
jecxz
inc
mov
lret
icebp
lods
mov
into
sbbb
adc
fcoms
div
js
add
add
scas
adc
and
addl
dec
add
inc
outsl
ss
lcall
aam
add
out
call
lahf
jae
dec
mov
jl
test
jbe
aam
dec
incl
sub
rcll
enter
mov
insl
dec
sub
cli
push
in
jmp
cmc
mov
inc
sub
pop
sub
imul
mov
sub
les
test
xchg
sbb
push
fs
ja
outsl
lahf
lock
jle
icebp
ret
shrl
repz
sub
xor
cmp
or
inc
fstp
mov
in
inc
push
mov
xor
ret
sbb
call
add
xchg
test
pushf
add
stos
int
insl
in
xchg
sbb
jl
jne
push
stc
scas
xchg
bound
loopne
sbb
cmc
cmp
and
xor
push
dec
imul
out
imul
pop
xchg
sbb
ret
cmp
int
mov
inc
ss
movsl
ds
daa
jns
inc
pop
mov
dec
add
test
cmovae
jmp
subb
cmp
in
test
pop
sub
mov
dec
dec
or
sbb
daa
arpl
dec
xchg
push
lods
mov
fs
lahf
dec
mov
test
call
shlb
and
lahf
mov
fbstp
mov
adc
dec
cmp
push
flds
add
add
sub
xchg
mov
incb
mov
es
int3
hlt
mov
adcl
mov
test
jle
cmp
mov
imulb
adc
out
pop
inc
or
inc
xchg
cwtl
fsubrs
test
pop
repz
mov
imul
inc
ja
stc
shlb
xchg
or
mov
add
mov
mov
mov
pop
push
inc
mov
sub
icebp
fnstenv
daa
adc
ds
add
xchg
scas
pop
or
mov
leave
hlt
ret
out
mov
lock
fsts
inc
jg
xor
pushf
sub
sub
out
jo
push
or
stc
flds
add
add
cmc
jp
lds
cld
es
test
xlat
shlb
push
pop
lds
xchg
mov
cli
les
call
addr16
dec
mov
add
sti
jno
fsubrp
fs
cltd
out
xlat
push
push
loopne
cli
inc
std
or
mov
or
filds
sub
add
jge
fisubs
mov
mov
loop
imul
xchg
das
dec
add
out
decl
arpl
fcmovu
sub
sub
mov
mov
mov
je
xchg
rcrb
shl
dec
in
shlb
cld
orb
xlat
inc
xor
dec
mov
add
add
stos
push
pop
mov
jnp
fbstp
sub
js
imul
lcall
cmp
and
pop
cmp
into
add
jne
push
adc
and
filds
adc
out
int
pop
xchg
test
addr16
dec
loopne
movsb
push
or
leave
mov
jmp
sbb
sahf
fsts
adc
adc
or
add
jle
es
iret
jo
adc
imul
add
jle
mov
push
out
jo
inc
negl
dec
or
lods
outsb
aas
mov
xchg
mov
add
xchg
or
add
test
inc
sbb
add
dec
or
in
lret
push
insb
fisttpl
push
push
adc
cltd
cwtl
rorb
push
es
or
pop
mov
mov
sbb
std
nop
fmuls
adc
popf
or
inc
pop
or
or
es
mov
mov
add
std
cs
push
and
in
fmul
stos
out
dec
outsl
imul
xor
loop
dec
cmp
dec
cmp
stc
repz
sti
pusha
jns
icebp
push
lahf
jp
cli
inc
dec
mov
sub
leave
lods
inc
lods
or
add
add
mov
in
mov
add
adc
in
pushf
clc
movsb
fwait
pop
sbb
push
push
xchg
xlat
add
add
lock
mov
inc
js
filds
dec
adc
and
inc
loope
loopne
loope
mov
jecxz
mov
jecxz
jo
leave
insl
fsubrs
std
loop
cmp
push
xlat
sub
push
xlat
cmpb
aam
jbe
xor
mov
leave
xor
cmp
aad
jne
ret
sub
and
sbb
push
enter
outsb
pushf
and
sti
or
xor
add
jmp
jns
cmp
push
insl
cmpsl
cmp
sahf
outsb
add
outsl
sbb
ss
adc
xchg
imul
xor
or
lods
pusha
sbb
daa
fs
in
insb
loop
addr16
cmp
stc
dec
mov
ss
adcb
dec
cmc
add
decl
mov
jl
jno
enter
or
push
ret
addl
cmovo
add
add
dec
inc
add
mov
push
push
jmp
sub
xlat
shlb
push
adc
adc
call
loope
add
and
jl
pop
pop
and
jge
sub
outsl
pop
jae
lods
pop
push
push
xor
loopne
pop
mov
pop
and
jecxz
adc
out
add
add
jns
out
cmp
inc
shl
cmp
xchg
or
mov
in
adc
dec
imul
sub
xchg
loope
push
fadd
adc
int
sub
int3
insl
mov
pop
mov
rolb
adcl
inc
or
in
lea
movsb
dec
jno
inc
js
pop
in
mov
cmp
xlat
scas
jno
test
cmp
mov
mov
mov
push
pop
test
adc
mov
or
mov
movsl
xchg
mov
dec
enter
leave
xor
movsl
dec
cmp
jb
jae
mov
ret
adcl
add
and
outsb
mov
scas
lret
cmp
in
lret
and
stos
push
popa
into
add
cmpsl
ror
push
shrl
cmpsl
cli
jae
inc
or
loopne
dec
je
push
dec
xchg
inc
cwtl
daa
xchg
fistl
mov
lahf
sahf
mov
sahf
pop
sbb
fwait
mov
popf
popf
or
fistps
cltd
xor
xchg
lcall
add
add
adc
test
mov
xor
mov
jns
mov
cmp
sbb
sbbl
jl
xchg
sarb
test
add
or
stos
out
mov
scas
test
outsl
lods
jecxz
lods
lods
ss
cmpsl
sub
cmpsb
loopne
je
iret
mov
mull
xchg
arpl
sbb
mov
mov
inc
mov
mov
mov
pop
int
xchg
aaa
btr
mov
jns
adc
mov
adc
sbb
and
pop
mov
out
add
out
sub
add
add
jge
bound
xchg
fdivrp
enter
fs
push
and
push
or
stos
mov
cmp
popf
mov
filds
repz
jb
movsb
iret
mov
fwait
lods
and
loopne
dec
push
jb
add
and
rolb
movsb
fdivrs
sbb
add
add
lods
iret
in
push
push
in
push
xor
or
jo
arpl
sub
sbb
push
sbb
in
faddl
jne
xchg
sahf
xchg
dec
fbstp
mov
push
adc
repz
lret
xor
mov
xchg
fwait
dec
fwait
mov
dec
rcl
push
cmp
cmp
jg
push
sbb
in
daa
mov
les
add
mov
jb
mov
mov
lahf
mov
jnp
xchg
adc
cmp
test
lods
negl
aas
aam
xor
outsl
bound
fmulp
leave
lods
enter
gs
push
mov
sbb
in
mov
testb
rcl
imul
adc
push
lret
cmpsb
adc
shlb
pop
fnstcw
inc
pop
pusha
mov
out
and
add
pop
push
add
add
movsb
pop
mov
mov
fildl
push
shrl
ficompl
cmp
lcall
xlat
xchg
sub
inc
mov
add
or
add
add
das
dec
push
test
icebp
cmpsb
and
incb
xchg
lcall
dec
lock
stos
dec
leave
push
xchg
fstpt
es
imul
sarl
or
in
xlat
loopne
mov
dec
jmp
call
mov
scas
aaa
icebp
inc
inc
sub
out
dec
or
call
pop
xor
add
pop
mov
push
pop
push
push
in
fcompl
test
sti
jmp
and
lds
stos
xor
mov
iret
jnp
push
ja
xor
push
int
or
fcoms
cmp
dec
mov
cld
loop
ljmp
push
push
and
xor
popf
insl
add
pop
cld
jnp
mov
push
in
lret
ljmp
les
add
cs
pop
xchg
mov
into
dec
jle
push
aaa
sbb
int
mov
lds
fwait
out
lds
inc
out
popf
loop
mov
rolb
pop
xor
cmp
in
jge
je
inc
add
sub
fucomip
jb
push
testl
mov
jge
xchg
inc
sbb
scas
mov
aaa
or
pop
sbb
rcr
in
pusha
inc
add
jb
popf
adc
or
cmpsb
repnz
out
push
lea
sub
xchg
inc
jbe
insl
xchg
into
je
inc
fcoml
movsl
fwait
fs
fucomp
clc
mov
jne
ret
lcall
shlb
add
cmpb
dec
fstl
mov
xchg
adc
jne
cmp
sub
lea
lock
mov
xchg
loopne
mov
mov
andl
fiadds
loopne
popf
jne
pop
sub
call
icebp
out
add
aam
lret
mov
inc
jg
mov
add
or
imul
pop
inc
xor
repz
call
ja
lret
mov
mov
and
adc
ss
sbb
popa
push
ficoml
mov
outsl
sti
rcrl
sbb
add
das
mov
or
cld
fs
and
cmp
mov
nop
fildl
add
add
je
push
scas
insb
mov
push
leave
or
sbb
add
add
out
add
jns
or
and
jge
sub
ficomps
movsl
repnz
and
aad
mov
jmp
outsl
mov
push
jl
add
pop
add
push
negl
add
jp
push
dec
gs
es
mov
lret
test
push
push
cli
daa
jg
lds
les
sbb
scas
test
add
inc
lret
mov
insb
or
mov
sub
int3
popf
sub
xor
dec
and
mov
call
test
dec
lcall
push
scas
lea
inc
add
cmp
jecxz
cmp
ss
iret
push
xchg
pop
iret
popf
shrl
mov
xor
enter
pop
sbb
and
or
mov
loope
sahf
scas
xchg
jl
das
loopne
mov
rep
and
into
pop
xchg
push
push
out
lahf
nop
inc
nop
call
xchg
jecxz
push
xchg
repz
jle
out
add
add
lahf
movsl
rol
scas
xor
lret
mov
add
std
xchg
sbb
jmp
sub
push
ficoms
ret
bound
in
fdivrs
decl
xchg
xchg
in
xchg
or
sarl
les
aaa
fld
mov
push
adc
xor
fistps
add
add
push
jl
add
xor
push
into
popf
sub
je
cs
test
inc
orl
pop
pop
les
popa
hlt
sti
out
sub
jge
and
mov
loope
sub
lea
sbb
inc
push
or
add
lret
jge
or
xlat
push
pop
and
sub
je
sbb
add
loop
in
pop
mov
loope
mov
cwtl
test
jae
cmp
xor
sbb
pop
insb
mov
pop
addl
push
mov
popf
dec
loop
sbb
push
mov
out
aas
mov
js
in
mov
icebp
xchg
and
cmc
je
int3
xchg
es
roll
popf
pop
int
and
pop
or
outsl
repz
add
add
cltd
add
test
adc
cmpsb
xchg
jle
sbb
imul
fsts
iret
sub
test
mov
sbb
mov
sub
xor
and
js
decb
mov
mov
scas
test
mov
xor
sub
inc
cmp
mov
fnsave
mov
dec
mov
add
add
jle
in
dec
jmp
cmp
pusha
xchg
les
push
fmuls
sub
or
jns
add
test
int3
or
movsl
call
dec
add
in
mov
sub
int
fwait
xor
daa
adc
cs
popf
pop
push
add
inc
nop
cmpsl
je
shlb
popf
jno
ret
sbb
std
call
fisubl
or
push
ss
mov
add
adc
aas
jp
movsl
sub
mov
fwait
and
or
aad
fbld
inc
push
rcl
outsl
dec
loop
push
mov
cltd
popa
subl
push
int
inc
es
mov
sub
push
nop
pop
out
add
mov
cmp
lahf
or
pop
or
popf
pushl
out
rcll
into
inc
out
loope
aad
rclb
pop
adcl
sub
in
and
sbb
sbb
stos
out
and
xchg
and
mov
adcl
dec
sahf
stos
fstl
pop
lods
pop
mov
bound
insl
jmp
add
test
mov
loop
mov
push
into
stc
lods
addr16
imul
dec
aas
sbb
in
and
pop
adc
mov
xchg
ret
or
ljmp
out
lock
testl
xchg
ret
and
insb
sbb
dec
aas
cs
test
inc
jns
mov
cmp
ret
mov
push
mov
jae
popa
aas
xchg
repz
cmp
aaa
mov
mov
nop
aaa
mov
mov
add
push
mov
test
imul
sub
dec
in
js
jle
nop
ficompl
cs
cs
and
add
popf
jl
call
loop
xchg
inc
and
mov
clc
dec
mov
out
push
andl
mov
insb
jmp
fidivrl
imul
shrl
repnz
cli
sub
rcl
mov
repnz
adc
jno
shll
xor
mov
mov
mov
jns
arpl
pop
push
sti
fildll
mov
jns
ss
cmp
add
add
dec
mov
es
sub
stc
dec
add
or
sub
mov
mov
xorl
ret
lds
hlt
adc
xchg
into
rol
add
or
dec
lock
mov
pusha
push
lret
pop
push
sub
test
movlps
xchg
push
push
cwtl
push
dec
les
add
popa
cli
sarb
jle
xchg
out
and
and
or
ficompl
xchg
fs
std
adc
mov
loop
insb
js
imul
mov
cmp
fwait
je
inc
mov
lahf
add
testb
jg
loopne
jno
iret
or
icebp
add
cld
mov
arpl
and
insb
xor
jle
ja
ret
mov
lahf
cld
sbb
mov
xor
add
sub
aam
movsl
je
dec
nop
movsl
dec
sbb
push
pop
sub
jns
mov
loopne
pop
dec
mov
int3
roll
mov
out
pop
sub
jnp
sahf
ret
xchg
mov
push
stos
sarb
add
fnstenv
sub
inc
ret
inc
les
mov
mov
add
mov
sbb
out
add
jl
sub
mov
push
fnsave
fcomps
nop
adc
mov
push
jb
es
pop
adc
push
and
and
jb
inc
ljmp
gs
imul
and
or
sbb
cmp
mov
shl
dec
and
mov
sub
pop
and
ss
in
cmp
jb
sarb
fs
push
int3
cmp
std
jnp
imul
or
jne
cmp
xchg
and
sar
adc
mov
jbe
xchg
loopne
jg
iret
cmc
test
xorl
fnstenv
dec
cld
gs
out
mov
fimuls
lea
or
or
jo
cmpb
mov
mov
ds
lea
inc
or
test
adc
stc
sar
lret
sbb
fcoms
repz
add
adc
stc
cmpsb
dec
xor
xchg
ret
js
add
sbb
xor
xlat
or
lahf
movsb
dec
rorb
sbb
mov
push
mov
jns
hlt
nop
jno
mov
dec
call
pop
dec
or
dec
pop
and
xorb
mov
push
cmc
xor
ds
fists
mov
fs
push
bound
es
dec
dec
jns
sbb
add
add
dec
mov
lea
and
mov
dec
fsubl
xchg
jge
mov
mov
dec
add
and
rorl
push
and
or
into
xor
cld
mov
jno
jae
sbb
jns
inc
adc
add
add
lds
adc
add
popa
sub
cld
inc
cmpsl
out
and
push
in
flds
fidivs
bound
add
lret
loope
jno
repz
or
or
jo
push
mov
push
ffreep
out
sarb
and
add
dec
cmc
sti
test
insb
fcoms
aaa
xchg
faddl
add
add
sub
pushf
jne
div
lahf
dec
shl
cmp
ret
mov
and
cmp
data16
and
push
sbb
xor
int
push
push
jg
outsl
add
push
ret
ficompl
mov
mov
dec
imul
xchg
add
stos
out
nop
stos
sub
test
pop
leave
lods
fimuls
add
add
cltd
and
mov
mov
in
ficomps
xlat
jnp
inc
idivb
sbb
push
das
jbe
xor
lcall
rorb
imull
pop
xor
cwtl
rorl
stos
xchg
lock
push
fwait
inc
out
jge
outsl
xor
stc
pop
stc
inc
mov
push
xor
je
xor
add
je
add
mov
addb
rcll
nop
mov
push
xchg
pop
paddsb
xchg
cmp
dec
sbb
leave
dec
pushf
shll
pop
mov
jge
mov
lret
pop
movsb
lock
mov
je
sahf
test
out
sbb
xor
add
xchg
sub
sbb
es
clc
mov
inc
xor
addb
sub
xor
sub
imul
xchg
aas
aam
shl
ljmp
mov
sbb
mov
mov
mov
adc
mov
lcall
push
stos
fnstsw
add
icebp
pop
ror
orl
mov
or
or
inc
pop
add
sub
imul
ljmp
adc
aaa
mov
inc
mov
popa
sarl
rcll
mov
lea
xchg
lock
jle
or
jb
sbb
dec
inc
popa
iret
mov
pop
jmp
dec
pop
movsl
test
addr16
cmp
fsts
cmp
mov
cli
pop
repnz
jecxz
pop
xor
mov
cmp
adc
mov
sub
dec
in
sbb
fdivs
fisubs
adcb
subl
int
jge
jo
jl
sbb
es
adc
add
add
stos
sub
insb
aas
dec
cmp
push
int3
cmp
mov
mov
lds
scas
test
test
pop
jl
icebp
or
je
insb
inc
stc
inc
rcrl
or
mov
xchg
cmpsl
cli
adc
inc
leave
fstpl
ds
push
dec
jmp
subb
mov
lods
mov
cmp
jno
jge
xchg
mov
add
xorl
xor
call
out
push
mov
loop
popf
jnp
hlt
pop
dec
gs
dec
and
ljmp
mov
in
pop
fidivl
icebp
xchg
int3
mov
aam
les
outsb
sbb
cmp
mov
inc
popw
movsb
inc
and
xchg
push
ljmp
add
in
push
test
jl
outsl
cmp
repnz
adc
je
sbb
ss
cs
clc
xor
cmpl
inc
mov
mov
mov
push
or
data16
ret
inc
mov
cmp
cmp
mov
fsts
sbb
add
add
jae
add
mov
sbb
fstps
aaa
in
jmp
pusha
out
push
jmp
mov
dec
scas
out
data16
xor
fstp
jl
cmp
dec
repz
mov
fs
in
add
sub
push
fisttpll
lret
cmp
aam
orl
adc
push
jl
xchg
mov
lods
fdivl
inc
sub
in
and
cld
cmc
sbb
sti
leave
pop
rcrb
insb
ja
inc
sahf
leave
pop
lods
ss
leave
sahf
xor
enter
addr16
mov
shlb
push
aaa
imul
in
xchg
loopne,pt
xchg
xchg
dec
pop
sbb
sub
movsb
in
xchg
add
add
pop
jbe
push
in
xlat
or
dec
das
clc
mov
les
push
dec
xchg
dec
outsb
testb
xchg
mov
cld
mov
shlb
out
sbb
add
jge
fisubrs
pop
mov
ror
out
icebp
push
pop
loop
stos
aas
mov
repz
into
lea
dec
test
add
add
movsb
incl
push
fs
pusha
arpl
jo
inc
and
nop
mov
sbb
or
jg
es
das
loope
testl
push
mov
mov
mov
out
xchg
jp
push
call
push
out
cli
mov
mov
out
or
xchg
or
inc
fisttpll
pop
cmpsl
push
out
sti
rcll
add
add
outsl
shlb
ja
push
das
rorb
cmp
jnp
xor
rorl
xchg
xlat
xchg
shlb
lahf
mov
es
push
cmp
mov
jl
xor
leave
rcl
aas
inc
xchg
mov
xor
fdiv
decl
aam
mov
jns
push
cld
fwait
and
notl
imul
retw
idivl
and
push
pop
repnz
jb
push
scas
fimull
stos
lret
mov
mov
push
pop
scas
xor
scas
jns
aad
mov
rorl
mov
out
pop
mov
jns
jl
imul
pop
add
or
hlt
push
or
insl
push
stos
movsb
in
add
mov
sub
sbb
dec
dec
cmp
jbe
add
adc
fimuls
enter
lods
cs
clc
add
xor
movsl
add
cmp
cwtl
xchg
xchg
jecxz
icebp
repnz
insb
sbb
loope
rorb
int3
or
push
je
jmp
fldcw
mov
xor
bound
clc
popa
inc
imul
dec
push
rcr
mov
ss
or
outsl
icebp
dec
jge
dec
sub
imul
inc
scas
mov
and
movsl
jbe
xor
rorb
add
mov
lock
icebp
add
pop
scas
cmp
adc
cwtl
into
in
loope
jb
test
and
sub
stos
nop
push
mov
push
sahf
mov
shlb
mov
push
jns
and
mov
xchg
dec
xor
sub
popf
outsl
insb
mov
jne
pop
adc
xor
inc
fmuls
add
dec
fs
mov
pop
adc
add
pushf
lds
mov
lahf
xor
aas
sti
cmpsl
cmp
leave
fadds
adc
sbb
out
movsl
ss
bswap
pop
xor
dec
xor
mov
inc
xchg
out
stos
cmp
push
mov
add
test
insl
outsl
xchg
cmpsl
iret
xor
rcl
pop
sub
sbb
lock
jp
lcall
push
fldt
test
xchg
cmpsb
and
call
in
aas
out
lock
in
in
add
in
add
in
add
in
add
in
add
jmp
add
jecxz
add
jmp
add
std
call
sub
add
add
mov
add
add
sahf
add
add
add
add
add
add
add
add
add
adc
dec
add
add
add
sbb
adc
sbb
adc
add
add
add
add
sgdtl
add
add
sti
add
add
add
add
add
add
add
add
imul
out
add
add
imul
jmp
adc
iret
imul
imull
add
imul
out
add
out
add
out
add
out
add
out
add
out
add
ja
adc
out
add
out
add
out
add
out
add
out
add
out
add
add
add
incl
sbb
out
jmp
arpl
cli
loope
xchg
and
stc
repz
lock
and
and
stc
inc
lock
loope
and
stc
push
jecxz
fisttpll
or
call
pop
and
sub
jmp
andl
test
jmp
jle
test
add
enter
mov
add
add
add
xor
aam
test
sti
call
into
rolb
add
xor
shll
and
subl
add
add
jmp
sti
in
sti
nop
repz
mov
jmp
in
or
faddl
pop
icebp
in
add
jne
ljmp
push
ret
pushl
mov
lcall
mov
add
add
ret
inc
pop
ret
mov
pop
ret
decl
test
gs
jnp
push
dec
loopne
fcoms
jae
inc
cli
jns
inc
fldt
inc
jb
cmpsb
in
inc
in
inc
in
inc
in
add
in
jl
iret
decl
push
add
jge
inc
add
add
inc
add
xchg
inc
add
jle
add
inc
add
pushf
inc
add
xchg
inc
add
inc
add
xchg
inc
add
mov
fimull
inc
add
sahf
inc
add
add
cs
pop
insb
add
add
pop
sti
or
dec
add
or
rep
decl
pushl
add
scas
add
add
add
add
add
movl
pop
out
add
les
pop
out
add
add
addb
out
add
mov
add
in
add
out
add
out
add
roll
in
add
aam
pop
out
add
movb
out
add
in
add
and
jl
sbb
push
out
add
out
add
out
add
out
add
xor
sbb
add
out
add
out
cmp
testl
cmp
mov
add
add
add
add
lar
leave
add
in
int3
add
call
add
add
int3
add
add
testb
sub
xchg
add
push
add
jb
testb
les
add
or
addb
add
push
flds
js
add
sub
pusha
loope
add
push
add
cmp
and
stc
add
loope
add
and
adc
sidtl
filds
loop
add
ljmp
aam
and
shl
add
add
add
loopne
mov
rolb
mov
sub
dec
loope
add
add
sub
inc
jmp
and
dec
jmp
add
sbb
lahf
loope
add
loope
add
arpl
dec
add
add
cs
add
sub
iret
add
dec
add
add
jb
roll
push
scas
pop
add
test
pop
pop
add
pop
inc
add
add
aaa
add
jae
inc
pop
imul
lock
cmp
xor
or
sbb
cld
add
stos
sti
cli
xor
icebp
xor
mov
mov
notl
or
xlat
out
pop
in
aam
out
mov
pop
cld
mov
pop
mov
mov
or
pop
cmp
stos
pop
lea
stos
pop
xchg
pop
lods
pop
xchg
pop
scas
notl
pop
mov
addl
mov
filds
mov
xlat
int
mov
mov
pop
shll
pop
mov
pop
enter
lret
add
pop
add
pop
sbb
es
sbb
and
xor
and
sub
xor
and
xor
adc
xor
aas
xor
pop
sub
cs
sub
cmp
and
cmp
pop
xor
pop
push
xor
pop
add
xor
pop
shll
mov
xor
or
xor
or
xor
or
xor
or
xor
or
add
insb
xor
or
inc
or
add
faddl
inc
or
add
stos
out
and
push
sub
fisubs
push
das
out
and
es
and
xor
sbb
xor
sbb
and
sbb
push
xor
ficomps
push
daa
out
sbb
push
out
sbb
sbb
xor
sbb
xor
sbb
xor
push
mov
fbstp
push
mov
out
xor
mov
fildll
xchg
out
sub
add
mov
lds
test
mov
inc
push
pusha
sti
inc
push
jno
inc
push
data16
inc
push
mov
dec
push
mov
dec
push
movsl
sti
dec
push
cli
sti
dec
push
fwait
sti
dec
push
cwtl
sti
dec
push
test
sti
dec
push
out
sti
push
push
in
sti
push
push
scas
add
lods
add
popf
add
mov
call
call
popa
add
jbe
pop
add
add
add
push
add
pop
add
add
add
add
add
and
lret
add
add
sub
push
add
daa
push
add
jmp
push
pop
jecxz
push
or
xchg
push
or
add
add
xchg
push
or
test
or
out
or
out
add
push
jmp
add
dec
jmp
push
xor
sbb
xor
sbb
push
xor
pop
push
xor
jmp
add
inc
jmp
add
cmp
mov
cmp
xchg
add
cmp
mov
add
sar
add
daa
add
add
movsb
call
add
mov
das
add
clc
jmp
add
mov
adc
test
inc
add
sar
pop
add
decl
add
sti
decl
add
or
into
add
call
add
add
add
inc
add
call
add
add
add
dec
add
inc
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
jnp
dec
in
add
jns
inc
in
add
ja
inc
in
add
in
add
in
and
das
add
sbb
add
add
add
add
add
add
add
add
into
add
xchg
add
add
add
add
clc
add
add
add
add
add
add
add
add
add
mov
sahf
add
add
add
add
add
movsb
add
cmpsl
add
in
add
in
add
in
add
in
add
je
mov
jge
mov
addb
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
mov
jns
mov
in
push
mov
mov
test
enter
and
sti
inc
and
add
push
sti
inc
and
inc
and
dec
and
sti
andb
sti
js
inc
sti
mov
cmp
jl
movsl
sti
les
pushf
sti
cwtl
and
sti
std
and
sti
aam
sub
sti
and
sti
repnz
loope
xor
mov
and
adc
pop
sti
push
and
sti
inc
es
sti
and
and
int3
xchg
lds
add
add
sub
mov
mov
and
mov
jne
mov
xchg
and
xorl
jnp
and
push
and
mov
and
push
test
and
inc
or
and
xor
and
sub
and
and
and
inc
adc
and
or
and
sbb
add
add
popf
and
repnz
ljmp
and
pop
sbb
rcrb
and
pop
add
pop
pop
add
insl
pop
add
bound
arpl
pusha
pop
pop
and
pop
or
push
pop
or
daa
pop
adc
and
adc
mov
pop
and
and
pop
push
and
push
and
and
add
add
push
and
push
and
pop
pop
and
pop
add
test
lcall
sub
add
stc
pop
push
daa
stc
pop
push
xor
pop
push
sub
pop
push
xchg
cli
and
xchg
cli
adc
cmpsl
cli
rolb
cli
mov
cwtl
cli
lret
cli
scas
lret
pop
jnp
sbb
pushf
cli
sbb
popf
cli
sbb
sahf
cli
sbb
cwtl
cli
xor
cmp
pop
movsb
cli
sbb
jbe
stos
add
stc
mov
and
into
or
cli
lods
add
stc
in
lret
stc
stos
ret
lods
lret
mov
stc
mov
loop
pop
cli
and
cli
ds
add
xchg
es
pushf
es
in
sub
cli
ljmp
stc
inc
sub
stc
dec
sub
stc
enter
add
stc
and
stc
icebp
sub
or
xchg
stc
sub
stc
repnz
stc
stc
and
adc
stc
fisubs
addr16
fisubl
mov
in
add
clc
enter
shll
sub
cmpsl
and
ljmp
and
out
sar
out
mull
sbb
fbld
and
pop
mov
andb
loopne
and
lock
pop
leave
divl
add
lret
xlat
xor
test
aaa
add
xchg
xor
add
xor
add
push
xlat
cmp
inc
xlat
inc
add
add
add
add
repz
mov
repz
jecxz
lret
repz
clc
repz
out
out
out
xlat
push
jmp
add
pop
repz
pop
repz
push
add
imul
push
push
repz
push
repz
push
pop
hlt
or
adc
or
and
hlt
or
mov
or
mov
add
add
repz
pop
repz
dec
repz
out
adc
icebp
js
adc
fisttps
adc
icebp
aam
sbb
jecxz
sbb
loop
sbb
mov
sbb
into
nop
nop
sbb
push
fsts
adc
jmp
test
and
test
mov
scas
loope
mov
lods
icebp
mov
movaps
nop
cvtpi2ps
mov
cvttps2pi
xchg
cvtps2pi
lods
ucomiss
movsl
comiss
jp
xor
add
psadbw
cmp
aam
xor
pminub
push
or
inc
fxrstor
aaa
mov
prefetcht0
or
daa
push
or
es
or
and
add
add
int
sub
les
and
iret
push
sub
push
and
rorl
pop
push
rorb
push
push
ret
push
sub
push
xchg
push
and
mov
sbb
cltd
push
mov
cwtl
push
mov
jnp
mov
jp
mov
add
mov
je
mov
pop
loope
or
push
icebp
mov
or
mov
adc
mov
adc
test
pop
xor
add
push
xor
adc
xor
sbb
push
negb
push
negb
xor
loope
xor
icebp
sbb
cltd
jmp
les
jnp
lds
jp
xor
mov
xor
shll
icebp
ret
jmp
or
movsb
or
cmc
or
or
dec
xor
add
add
dec
xor
dec
xor
or
mov
or
int
push
xor
or
or
rorb
xor
or
push
or
pop
or
adc
pop
xor
or
or
js
pop
xor
pop
xor
pusha
xor
popa
xor
xor
arpl
push
or
adc
or
add
cltd
or
lods
mulb
or
scas
mov
mov
sbb
mov
int3
or
test
mov
into
or
int
mov
rorb
pop
or
mov
testb
mov
div
or
add
or
das
push
rcl
push
ret
push
insl
cmp
jno
fwait
push
js
pushf
push
jg
popf
push
xorl
adc
push
imul
jg
push
repz
repz
mov
icebp
xchg
add
nop
add
and
and
and
and
and
and
and
and
and
and
and
and
andb
and
add
add
push
and
and
lea
inc
and
and
pop
out
icebp
add
add
pop
out
loopne
out
repnz
out
in
add
add
in
add
fsub
add
cli
or
cli
in
add
mov
add
xchg
add
sbb
add
mov
in
add
in
add
stos
add
push
in
add
in
add
add
mov
in
add
in
add
in
add
add
or
cmp
add
jmp
add
sbb
add
add
pushl
add
aad
decl
add
into
mov
add
xlat
mov
add
aaa
add
add
mov
add
scas
mov
add
pushf
mov
add
lods
mov
add
lcall
add
ljmp
mov
add
sub
add
push
mov
add
addr16
jmp
rcrb
out
add
out
pop
add
or
out
pop
add
or
out
pop
add
push
pop
add
xchg
add
out
pop
add
inc
add
out
pop
add
add
out
pop
add
xor
add
sbbb
cwtl
add
out
pop
add
inc
add
out
pop
add
xchg
add
out
pop
add
test
out
pop
add
mov
add
sbb
out
add
out
pop
add
mov
add
add
add
add
add
add
add
add
out
inc
add
add
out
push
add
add
out
add
add
out
adc
add
pop
out
stc
add
add
add
add
pop
out
fildl
out
sub
add
pop
out
mov
out
sub
add
out
xchg
add
add
out
jbe
out
add
push
add
jno
add
scas
aas
add
pusha
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
add
cmpsl
popl
add
add
add
add
mov
add
cmp
add
sbb
add
sbb
add
cmp
add
fs
add
in
add
jecxz
incl
add
fildll
add
lods
mov
add
popf
mov
add
mov
ljmp
add
cmpsl
mov
add
je
incl
add
add
mov
add
pop
mov
add
loope
fildl
add
push
pop
add
push
pop
add
incb
add
incl
add
sahf
fdivrs
add
push
add
incl
add
jle
aas
add
push
add
jbe
add
out
je
out
add
out
add
out
je
out
add
out
add
out
je
out
add
out
add
out
je
out
add
out
add
out
add
out
xchg
lea
or
xchg
xchg
lods
add
out
xchg
mov
add
les
add
sbb
add
addb
out
test
cld
add
out
add
out
add
or
add
add
add
add
xchg
add
add
add
xchg
add
add
add
test
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
cmpsl
add
add
add
cmpsl
add
loope
jne
cmpsl
add
fiadds
popa
xchg
add
add
add
cmpsl
add
sub
push
incl
push
decl
push
incl
jecxz
add
in
lcall
adc
add
in
in
add
push
jmp
jmp
push
call
jecxz
pushl
jecxz
incl
and
test
in
add
ret
call
imul
add
imul
add
filds
add
mov
dec
add
add
add
add
add
add
xchg
pop
add
add
add
add
xchg
pop
or
dec
test
jno
adc
jb
inc
add
add
push
test
rolb
pop
add
inc
add
push
add
addl
add
into
addl
add
out
inc
add
add
add
iret
aas
add
iret
aas
add
add
out
jg
out
add
out
jg
out
add
out
jg
out
add
out
jg
out
add
out
jg
out
add
out
jg
out
add
out
jle
out
add
out
jle
out
add
out
jle
out
add
out
jle
out
add
out
jle
out
add
out
jge
out
add
les
out
add
out
jge
out
add
out
jge
out
xchg
add
add
cmpsl
add
cmpsl
add
add
add
cmpsl
add
push
add
jl
add
add
add
daa
add
add
add
add
add
daa
add
add
add
add
add
jnp
add
add
add
jnp
add
add
add
jl
add
add
add
add
add
add
add
add
add
pop
jmp
add
add
add
push
add
ret
call
in
add
ret
decl
jmp
add
ret
pushl
hlt
inc
pop
jmp
dec
inc
in
add
jmp
inc
sub
call
in
call
sbb
pushl
or
repz
outsl
ret
lcall
pop
ret
pushl
jmp
add
in
add
in
incl
ret
pushl
add
add
add
add
jnp
add
add
and
add
jnp
add
jnp
add
or
mov
pop
add
jl
add
add
into
jl
add
push
or
scas
jl
add
jl
add
add
add
addb
pop
or
push
inc
add
call
add
inc
add
addl
adc
add
out
xchg
or
or
inc
test
adc
test
rolb
pop
out
test
fwait
add
test
pushf
add
pop
test
fadds
add
adc
inc
out
add
out
mov
add
add
mov
mov
scas
add
and
inc
out
add
in
mov
popa
add
out
mov
add
out
mov
add
out
xchg
push
push
out
xchg
add
add
add
cmpsl
add
add
add
cmpsl
add
add
add
mov
add
add
add
mov
add
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
xchg
add
add
add
add
add
add
add
jle
idiv
dec
pop
decl
jecxz
ljmp
dec
in
ljmp
add
add
jmp
ljmp
jecxz
decl
cmp
hlt
pushl
jecxz
call
pop
call
incl
ret
decl
jecxz
call
push
repz
call
jecxz
cld
addr16
pushl
jecxz
call
ret
inc
in
ljmp
ret
decl
ret
ljmp
addr16
incl
add
add
call
add
addl
add
add
addb
add
add
addl
add
add
addl
lcall
add
incl
add
incl
add
add
add
addb
lcall
add
inc
add
pop
add
inc
add
inc
add
dec
add
inc
add
and
pop
test
push
add
add
inc
add
add
mov
out
test
imul
cwtl
test
pop
add
out
test
xlat
add
out
add
out
test
cmpsb
add
out
add
pushf
test
or
out
add
out
test
testl
inc
out
add
out
add
out
addl
add
inc
addl
add
out
addl
add
out
addl
ret
add
add
andl
cmp
add
lret
stos
add
add
lret
xor
lret
adc
add
clc
add
lret
outsb
add
add
fadds
ret
add
add
add
lret
cmpsb
add
add
lret
add
aad
leave
lret
sbb
or
lret
sbb
lret
or
add
add
lret
sbb
loop
jmp
add
add
clc
in
decl
sahf
add
ljmp
in
call
add
jns
add
add
in
add
add
mov
ret
ljmp
add
ret
ljmp
add
fimuls
add
popa
cld
ret
jmp
add
jmp
add
jmp
add
jmp
add
add
enter
jmp
add
ret
sbb
add
cmp
or
add
jae
inc
add
add
add
inc
add
add
add
push
inc
add
pop
inc
add
inc
add
push
inc
add
push
inc
add
add
add
inc
add
push
inc
add
push
inc
add
add
sbb
add
add
ds
add
pop
xor
add
test
add
mov
out
inc
out
add
out
out
inc
out
js
out
add
out
add
out
test
pop
xchg
sub
add
jmp
inc
out
xchg
sub
out
add
out
add
out
add
in
add
out
add
out
add
out
add
in
add
in
incl
jmp
add
jecxz
add
in
add
sub
add
xor
add
add
jmp
incl
in
incl
out
call
add
in
add
or
add
push
ljmp
or
add
push
ljmp
push
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
in
and
jmp
sub
fcomip
fcom
cmc
xor
xlat
stc
ss
add
jmp
andl
subl
mov
push
mov
mov
add
in
pop
dec
inc
mov
inc
sub
push
sbb
jb
and
decl
sar
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
into
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
dec
add
add
add
ds
add
add
add
add
dec
add
add
add
add
add
add
add
add
call
call
call
flds
loopne
inc
fadd
inc
incl
add
add
incb
enter
shr
mov
sub
add
mov
push
stc
or
das
cmc
push
mov
inc
incl
es
pushl
inc
ljmp
inc
jmp
inc
lcall
push
or
das
adc
dec
jbe
incl
inc
cmp
pushl
sahf
inc
ljmp
xchg
inc
jmp
mov
sbb
add
out
add
out
add
out
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
in
add
in
add
in
add
in
add
in
add
jmp
add
jecxz
add
jmp
add
jecxz
add
jmp
add
jecxz
add
jmp
add
jecxz
add
jmp
add
jecxz
add
jmp
add
jecxz
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
incb
add
incb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jle
add
mov
add
mov
add
jle
add
jle
add
dec
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
sub
add
sub
add
test
jg
pop
mov
sahf
mov
mov
jg
rorl
test
sub
cmpsb
ljmp
pushf
in
iret
xor
mov
or
inc
cmp
testl
mov
jbe
lea
dec
in
ljmp
mov
lds
push
ror
push
pop
xchg
push
mov
in
mov
pop
and
cmp
add
sti
pop
mov
add
mov
pushf
jp
test
imul
repz
in
xchg
iret
in
std
cmp
jo
pop
adc
in
and
or
call
inc
push
xor
dec
mov
aaa
cmp
pusha
aas
mov
ja
jge
xchg
jno
dec
jne
mov
adc
mov
lahf
jecxz
repnz
add
add
push
fidivl
push
stos
adc
add
xor
or
pop
frstor
in
ret
adc
adc
fistpl
inc
repz
add
xor
or
movl
nop
in
add
add
or
add
and
add
add
add
add
in
add
icebp
add
int3
in
add
add
add
add
imul
add
xor
add
imul
add
lahf
jmp
add
add
add
add
add
add
cs
add
ljmp
add
push
add
or
push
pop
push
push
or
xor
push
ucomiss
adc
sbb
push
pop
push
push
sbb
and
push
pop
fisubs
and
and
sub
sub
add
xor
xor
cmp
cmp
arpl
gs
imul
jbe
jae
jno
ja
jge
pop
bound
pop
push
gs
arpl
ret
mov
cli
mov
mov
mov
mov
mov
jge
stos
addl
pop
lea
push
into
xchg
xchg
push
rcrb
sahf
dec
mov
test
push
jl
insl
scas
js
jno
je
jne
jo
jns
insb
test
inc
ret
inc
mov
sbb
cwtl
sbb
push
nop
adc
pop
fimuls
and
and
shrl
daa
mov
xor
add
add
das
mov
sub
aaa
jmp
add
loopne
fisttpll
fisttpll
flds
fsts
push
rcrl
push
or
push
jecxz
loope
filds
in
ljmp
div
hlt
lock
lock
out
cli
in
clc
ljmp
mov
stos
jl
cli
cmpsb
js
divb
pushl
add
add
mov
pop
dec
sub
inc
and
and
dec
sbb
sbb
push
adc
adc
jp
outsb
mov
andl
xchg
mov
pop
pop
xchg
xchg
push
push
lea
dec
dec
xchg
lahf
mov
mov
addl
scas
jns
jb
jne
outsb
mov
xor
insl
das
jbe
sub
inc
ret
and
and
sbb
fmulp
rcl
rcl
aad
xlat
fcmovu
fstp
loope,pn
jecxz
adc
jmp
out
jle
icebp
repz
cmc
divl
stc
sti
jp
std
decl
cmp
decl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
cmp
loopne
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
cmp
call
sub
add
sub
add
sub
add
sbb
add
sbb
jmp
fidivl
jmp
aaa
call
sbb
add
sbb
add
sbb
add
add
add
add
cmp
xor
cmp
add
add
add
add
add
add
add
add
add
aaa
push
xor
aaa
dec
xor
aaa
inc
mov
add
add
add
add
add
add
add
add
add
add
add
sub
add
stos
call
add
add
add
add
add
add
fdivs
jmp
add
add
add
sub
out
jmp
jmp
in
add
add
jmp
jecxz
add
jmp
add
in
add
in
add
in
add
in
add
in
add
add
imul
in
nop
fmuls
sbb
rolb
add
in
sub
or
adc
notb
adc
adc
adc
adc
adc
decb
adc
notb
add
adc
adc
mov
adc
mov
adc
mov
add
jle
add
mov
add
jle
add
jle
add
dec
add
add
ds
add
dec
add
add
ds
add
push
add
add
incb
add
add
add
add
add
push
add
add
incb
add
add
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
xchg
cmp
cmc
xor
jno
bound
mov
cli
xchg
scas
test
je
scas
ret
iret
add
repz
add
sysret
mov
add
rcrl
lods
dec
push
fbld
lock
or
sbb
andb
lock
in
daa
mov
add
mov
js
test
sub
sbb
xor
push
cld
rorb
adcl
aam
popa
sahf
icebp
mov
push
jecxz
pop
dec
ja
jno
ret
cmp
add
add
push
lods
mov
push
addr16
aad
rorl
mov
and
shl
mov
lods
in
push
jne
dec
xchg
andl
dec
push
imul
in
mov
jp
repz
out
lcall
add
sbb
insl
daa
push
ja
or
add
push
add
jge
add
fistl
pop
lods
or
add
cltd
outsb
and
ret
sbb
cmp
sbb
xchg
mov
xchg
sbb
into
sub
shrb
mov
inc
movsb
call
xorl
cvttps2pi
xchg
outsb
inc
mov
clc
dec
sub
fldl
cltd
shrb
lahf
or
jns
add
add
ja
xor
inc
push
loop
mov
mov
xchg
xchg
scas
sub
lds
mov
xor
bnd
shlb
sti
xor
scas
ds
shl
jecxz,pt
add
jb
push
sbb
xor
mov
xchg
ss
xor
stos
xor
add
add
inc
mov
test
inc
pop
ss
mull
nop
js
adc
das
mov
sub
ja
cmp
pop
testl
imull
cltd
mov
add
adc
loopne
jno
mov
or
xor
and
neg
mov
push
clc
sti
mov
push
negb
sbb
pop
fistpl
adc
imul
add
add
fidivl
push
dec
je
push
pop
xlat
add
cli
xchg
repnz
cmc
mov
rcrb
mov
xor
mov
loopne
push
pop
inc
mov
jmp
xchg
shlb
fs
inc
cmp
add
add
add
clc
enter
mov
sbb
sub
fidivrl
scas
mov
mov
add
add
stc
pop
mov
not
jmp
jmp
jmp
in
jo
insb
in
pop
jmp
in
push
jmp
sub
mov
pop
and
cwtl
movsl
lods
sub
mov
mov
std
loop
aad
inc
cmp
notl
cmp
fdivp
mov
mov
xchg
and
add
out
daa
aaa
ljmp
add
add
sahf
cmp
mov
cmp
xchg
stos
cmp
sub
fwait
cmp
imul
insb
shll
or
cmp
push
mov
dec
ret
inc
mov
cmp
or
xor
ficomps
imull
fistpl
dec
jns
xchg
mov
cli
xor
xor
xor
xor
add
add
xor
xor
xor
dec
mov
cmp
xchg
mov
pop
jnp
mov
sbb
cmp
cmp
sbb
clc
cmp
push
out
mov
adc
add
lahf
bound
cmp
xor
cmp
xor
cmp
repnz
data16
add
cmp
sbb
dec
nop
rcl
fwait
test
mov
sti
in
addr16
mov
arpl
mov
adc
xorb
hlt
loop
push
push
push
out
std
inc
testl
shl
psrld
sub
aad
mov
push
sub
add
add
cmp
movsb
add
scas
jno
lcall
jmp
jmp
ljmp
ds
sbb
sub
mov
rcll
jno
js
push
jae
repz
out
jae
add
out
or
xor
pop
repz
cmc
stc
icebp
mov
out
shl
mov
add
rep
lock
push
lock
repz
imull
lock
notl
lock
or
jnp
repz
test
outsl
lock
testl
dec
xor
aaa
pop
xor
aaa
sub
aaa
stc
xor
aaa
jg
bound
pop
cmp
or
cmp
test
jge
pusha
cmp
push
cmp
cli
mov
cmp
enter
mov
imul
pop
mov
pushf
daa
leave
inc
sub
leave
pop
or
or
jns
xor
scas
arpl
adc
xchg
sbb
cld
push
mov
mov
cmp
jns
call
mov
insl
mov
cmp
push
adc
add
push
add
push
add
push
add
push
rolb
test
mov
inc
mov
scas
push
jmp
in
rolb
push
addb
push
addb
push
addb
push
lcall
mov
iret
sbb
mov
mov
add
add
mov
add
mov
add
sbb
inc
jg
shl
jg
add
or
add
mov
add
sbb
add
cmp
add
sbb
add
adc
add
or
add
or
add
push
add
push
add
fiaddl
mov
iret
add
add
add
add
add
add
icebp
adc
jp
lds
or
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
add
jl
sub
sub
push
xchg
dec
mov
lds
or
xor
add
add
leave
mov
xchg
mov
scas
es
movsb
std
add
mov
in
call
icebp
decl
add
ret
js
or
sub
or
add
or
in
inc
js
outsb
or
decl
movsb
cmp
add
sub
addr16
add
and
add
or
add
add
das
ret
in
cli
jmp
in
decl
jecxz
incl
jmp
decl
jecxz
add
mov
push
add
add
subb
push
jb
push
imul
subb
push
jb
fisubl
je
push
jns
push
push
xchg
push
jae
mov
arpl
int
fs
fisubl
fidivrl
mov
inc
dec
push
mov
dec
add
arpl
mov
push
fs
repz
add
arpl
or
dec
xchg
push
bound
dec
mov
jns
sub
add
imul
data16
bound
xchg
add
imul
add
jge
jne
push
cwtl
pusha
rorb
fs
mov
add
ja
pop
lret
sub
push
cld
out
hlt
aam
out
mov
fwait
sub
add
icebp
mov
push
xchg
dec
repnz
out
mov
sub
or
data16
add
add
mov
fsubp
test
add
xchg
ret
neg
add
lret
xchg
jo
scas
mov
mov
test
xchg
aam
je
mov
add
add
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jecxz
decl
jmp
add
ds
push
ret
inc
push
ret
lcall
in
add
faddp
lcall
ret
incl
rol
decl
ret
out
bnd
ljmp
bnd
incl
rol
jmp
decl
inc
rol
mov
rol
dec
jmp
pushl
rol
cmp
cmp
xchg
incl
jecxz
push
pop
je
add
push
add
or
add
add
add
pop
insl
add
pop
sub
add
pop
insl
add
pop
jo
repz
jae
mov
add
push
add
dec
add
add
or
sbb
inc
add
or
add
add
add
or
jne
inc
add
inc
add
add
add
add
add
add
add
add
add
aas
das
add
add
sbb
out
hlt
inc
out
cmc
inc
out
cli
inc
out
pop
dec
jb
test
stos
pop
add
lods
mov
mov
andl
fiadds
test
incl
add
add
push
cmp
pop
xchg
lods
mov
call
clc
fiadds
test
pushl
cmp
je
or
cmp
shl
mov
pop
push
adc
jbe
or
rcl
mov
ss
xchg
adc
add
add
sbb
add
sub
daa
add
sbb
add
add
add
rolb
add
and
sbb
add
add
add
add
add
add
add
add
add
add
add
add
cmpsb
xchg
mov
out
cmpsl
les
stos
mov
scas
lds
stos
sub
xchg
add
lds
xchg
push
fwait
or
sbb
add
lret
ret
jmp
iret
ret
mov
dec
jle
jno
test
js
test
ja
in
add
dec
mov
jno
inc
xchg
push
mov
dec
sbb
jecxz
mov
call
in
add
add
in
jns
xchg
incl
leave
incl
test
inc
jmp
add
in
add
decl
popa
inc
add
insb
jae
lods
push
inc
fisubrl
gs
jbe
incl
imul
push
js
into
push
add
add
jmp
jae
push
jno
scas
incl
inc
jb
pop
jae
imul
pop
je
arpl
jb
jne
je
dec
jo
outsb
jb
pop
jae
shrl
jb
gs
push
add
pop
jb
push
lods
imul
jne
popa
stos
push
jae
out
xchg
call
clc
cmpsl
jno
mov
arpl
fbld
inc
jnp
lret
pusha
push
ljmp
fs
add
out
add
out
add
out
add
loopne
push
out
add
pop
add
dec
add
inc
add
add
add
pop
add
pop
add
dec
add
add
jae
outsb
out
add
jns
jae
dec
add
jbe
pop
out
add
pushf
add
jg
outsb
out
pop
add
add
add
jle
ds
add
add
add
jle
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
mov
out
mov
fwait
cld
inc
aaa
fwait
cli
loopne
mov
sahf
xchg
enter
lods
stos
test
cmpsl
ret
xchg
lcall
in
add
xchg
outsl
and
jmp
popa
inc
cmp
cs
in
add
xchg
outsl
repz
call
pushw
mov
outsb
cld
mov
xlat
jmp
xlat
lcall
js
inc
and
add
mov
in
add
ret
cmpsb
sar
xor
push
stos
ss
inc
movsb
in
add
popf
pop
jmp
ret
dec
add
add
add
add
dec
inc
inc
aad
push
push
push
add
add
inc
inc
inc
rorb
dec
loop
faddl
int3
push
call
dec
dec
dec
or
inc
inc
push
std
inc
decl
dec
dec
push
fiadds
inc
idiv
dec
dec
dec
push
add
inc
mov
add
dec
dec
push
inc
jle
add
imul
cmp
add
dec
dec
inc
dec
jle
add
cmp
add
add
add
out
mov
scas
dec
leave
push
out
lret
addr16
push
out
mov
out
rolb
add
out
rorb
sar
leave
stos
insl
mov
test
outsb
pop
in
bound
stos
fs
imull
out
stos
insl
xor
stos
jae
jmp
incl
add
add
cmp
insl
add
lahf
push
out
xchg
data16
dec
lahf
fs
stos
je
add
mov
mov
adc
addl
add
jbe
add
jnp
add
add
add
add
add
jo
add
es
imul
add
add
add
mov
add
es
push
es
push
es
pop
es
shll
mov
es
add
add
add
jmp
dec
es
xor
add
xor
add
in
add
iret
and
lcall
ret
lcall
or
call
add
pushl
in
jmp
ret
jmp
ret
out
jmp
rol
decl
ret
mov
ret
scas
ret
scas
ret
add
incl
incl
jmp
ljmp
jecxz
cld
in
ljmp
jecxz
incl
jmp
call
mov
cli
in
call
in
dec
in
fsub
pushf
mov
mov
add
push
pop
push
add
pop
jb
daa
pop
outsb
add
inc
add
insb
add
dec
add
push
data16
pop
add
pop
xor
push
js
sub
xor
cli
pop
js
rolb
and
add
pop
pop
add
pop
add
loopne
je
mov
je
into
push
add
clc
repnz
add
icebp
inc
add
repz
add
jge
add
jge
add
filds
call
inc
add
xchg
es
out
es
out
sbb
mov
push
inc
out
push
inc
out
add
dec
add
dec
add
ja
je
addb
out
add
insb
add
addl
out
add
add
mov
in
out
add
sbb
add
lds
js
repnz
jl
out
add
ja
int3
ret
fldl
add
add
outsb
inc
in
pusha
dec
shrl
cs
mov
add
sbbb
jns
sub
outsl
pop
add
cmp
dec
pop
pop
sub
push
xor
or
out
dec
pop
xchg
je
dec
gs
jl
add
add
inc
pop
push
test
jb
pusha
jno
jnp
jg
test
fwait
add
add
rolb
add
add
xchg
dec
jmp
in
add
add
cwtl
addr16
dec
adcb
mov
push
mov
addr16
push
imul
pop
scas
push
add
xlat
cmpsl
mov
dec
sarb
dec
xchg
sub
jmp
adc
sarb
pop
scas
dec
stos
push
enter
mov
dec
loopne
mov
add
add
push
mov
mov
push
movsb
pushf
xchg
jmp
out
sbb
out
sub
rolb
add
mov
sub
lods
out
shrl
sbb
mov
adc
sub
and
pop
sub
xor
or
sub
sub
cmp
lods
mov
push
mov
mov
dec
add
add
cmp
and
sub
mov
mov
cmp
adc
adc
or
sbb
outsl
popf
mov
bound
test
xchg
lea
xchg
into
add
add
cmp
cmovne
mov
out
out
sub
push
dec
loopne
xchg
int
xchg
or
pushf
nop
sbb
lods
mov
out
mov
cmp
stos
iret
cmp
lods
out
sti
xchg
fildl
add
sbb
stos
and
sbb
add
movl
dec
mov
fldt
loope
cltd
mov
jbe
adc
and
movsb
mov
ret
cmc
mov
add
xchg
mov
jae
addb
mov
xchg
add
add
add
add
repz
fld
out
xchg
loop
jmp
or
nop
out
xlat
or
loope
loopne
fmul
int
out
cmc
lock
in
loop
in
cwtl
test
fiadds
call
call
test
jl
jecxz
andl
add
add
scas
or
in
scas
rcrl
fidivl
push
jl
fisubl
add
ss
lahf
adc
push
sub
adc
pop
inc
sbb
jge
push
in
sbb
pushf
shrb
rclb
and
mov
es
and
data16
lds
push
out
test
dec
mov
sahf
dec
stos
xorl
jmp
movsb
cmp
sub
pusha
test
shrl
shrl
and
aam
inc
loopne
fcompl
std
add
add
add
inc
dec
inc
or
sub
inc
pop
inc
and
jmp
inc
jnp
data16
insb
jle
loopne
ljmp
jl
mov
test
scas
pop
xchg
mov
lock
add
mov
add
pop
mov
mov
jo
scas
lods
push
fwait
mov
mov
pop
add
pop
jg
jg
jnp
jp
jb
pusha
cltd
pop
jle
xchg
data16
lret
jg
aas
inc
push
out
mov
lret
insl
mov
call
pop
jbe
lcall
flds
add
add
jns
sahf
insl
pop
mov
bound
cmpsb
test
out
add
out
clc
jle
and
push
pop
push
lods
push
mov
pop
lahf
negb
enter
lds
pushf
push
sbb
aas
stos
cmp
jo
sub
scas
jae
jnp
cmp
xor
stos
cmp
imul
add
repnz
idiv
xchg
stos
and
into
stos
call
add
add
das
mov
sub
sub
sub
ss
adc
sub
or
in
sub
mov
lods
call
fadd
fsts
jmp
pop
scas
fwait
cmc
add
add
add
add
add
out
loop
jmp
out
sti
jmp
cli
mov
stc
clc
lret
stos
cltd
add
add
add
mov
jns
add
jns
dec
xchg
jno
sub
outsl
push
adc
ja
fcomi
pop
ljmp
inc
xor
cli
pop
xor
mov
dec
cmp
push
loope
scas
push
sbb
inc
sub
pop
or
call
xor
xor
inc
iret
xor
ja
sbb
inc
shll
add
add
aas
rcrb
lods
mov
dec
mov
enter
add
jg
dec
add
pop
push
push
add
add
stos
test
pop
movsl
jmp
mov
das
into
ret
ror
jns
ffree
xchg
into
fldenv
rcl
and
inc
inc
dec
repz
push
dec
int
inc
push
out
push
pop
dec
jle
add
mov
stos
mov
scas
imul
mov
fidivrl
lahf
mov
scas
fwait
mov
stos
add
add
call
adc
or
cld
pop
in
or
mov
fwait
sahf
mov
test
loop
call
test
jle
jno
jp
ja
jb
add
out
mov
push
loop
inc
sbb
lods
je
in
jmp
xchg
dec
mov
cmp
outsl
push
movsl
out
aam
mov
loopne
mov
sub
add
out
pop
mov
addl
jmp
scas
cmpsl
scas
mov
scas
add
out
loop
mov
cmc
in
ljmp
std
ds
sub
add
pusha
dec
jbe
xchg
jp
data16
jle
cmpl
js
dec
pusha
je
jne
bound
subb
push
cmp
js
fs
pop
cwtl
push
aaa
inc
xchg
pop
dec
jg
xchg
add
add
inc
sub
add
add
ret
sub
add
add
or
xor
incl
add
in
xor
sbb
stc
adc
in
add
les
rcl
fsubrl
add
jmp
incl
add
repnz
add
dec
xchg
data16
and
add
mov
jl
insb
addr16
jbe
bound
jp
jo
outsl
xchg
jl
in
add
push
clc
cmp
add
add
pop
jecxz
in
add
lds
mov
add
ja
jo
imul
jbe
push
adc
dec
mov
incl
in
out
clc
loope
or
ljmp
nop
pushw
mov
fmull
js
ret
test
add
add
inc
fstp
adc
fdivrs
lret
xchg
or
add
pop
add
es
fdivrl
gs
fbld
js
pop
push
jge
out
jge
pop
in
add
out
cmp
add
std
notb
out
rcrl
test
xor
enter
int
sub
bswap
cmp
test
roll
add
add
or
out
cmp
into
pushf
cwtl
inc
aad
in
add
out
inc
in
leave
test
sub
shr
add
push
adc
mov
adc
xchg
out
pusha
out
cwtl
add
cmp
push
push
mov
dec
push
inc
mov
xchg
dec
test
sbb
test
pop
pushf
sub
inc
cld
add
add
add
add
pop
push
stos
xor
scas
dec
pop
repnz
lcall
faddl
jg
out
cmpsl
inc
lods
loop
cmp
in
les
lahf
leave
ret
pop
mov
xchg
push
out
xor
push
push
pop
movsb
or
add
add
popl
gs
pop
jno
icebp
imul
dec
add
pop
and
loop
ds
add
add
int3
push
in
add
loopne
adc
aam
jmp
hlt
mov
jmp
add
push
jmp
cmpsl
faddp
sbb
xlat
mov
test
jb
mov
js
mov
subb
mov
sbb
xchg
arpl
out
dec
xor
add
xchg
or
scas
call
add
decb
fwait
add
sub
call
std
push
xor
inc
add
or
stc
adc
xor
add
or
pop
add
add
add
add
push
in
hlt
adc
mov
or
out
and
out
push
aaa
add
pop
rolb
add
or
inc
dec
mov
testl
add
add
dec
mov
mov
mov
adc
mov
out
pop
movsl
dec
aas
andl
cmp
cmp
inc
lcall
inc
mov
addb
push
xchg
cltd
es
mov
push
mov
adc
dec
or
out
mov
jnp
stos
xchg
insb
cltd
nop
fwait
jb
in
add
out
repz
in
shll
out
aam
pop
mov
lret
fdivrp
ror
add
rcl
std
shrb
int
ret
pushl
fwait
je
outsb
fistpl
ja
jbe
rclw
data16
add
add
add
inc
daa
add
add
adc
pop
loop
in
hlt
sbb
add
jecxz
int
fistpl
push
fisttpl
or
add
sarb
sarl
add
push
fildl
sub
add
add
adc
inc
push
or
loop
das
ds
fists
fstpl
in
sbb
add
fcomps
sbb
daa
jbe
push
lret
add
cli
sub
adc
fiaddl
add
and
sarb
or
add
sbb
add
sub
add
add
add
pop
sub
aam
push
xlat
mov
sbb
sub
int
xor
loope
xor
iret
xlat
add
sbb
jmp
add
jmp
decb
lods
sar
fucom
call
idivl
xchg
jmp
add
jle
std
bound
hlt
js
popa
mov
mov
add
sub
mov
and
cmpsl
mov
mov
mov
mov
mov
mov
out
adc
xchg
test
jle
les
add
cmp
and
xlat
and
adc
add
mov
xchg
mov
scas
mov
cmpsl
iret
lods
mov
cmpsl
lods
jg
mov
mov
hlt
push
fwait
xchg
out
mov
mov
cmpsl
xchg
pushf
mov
dec
inc
push
sub
adc
inc
pop
add
inc
pushf
nop
imul
push
cwtl
xchg
xchg
mov
push
outsb
mov
imul
add
out
dec
pop
mov
dec
dec
fwait
pushf
pop
push
cwtl
lods
pop
inc
movsl
mov
add
mov
push
or
add
add
cmpl
mov
leave
sbb
add
xor
popa
outsb
dec
and
push
je
ja
adc
pop
icebp
push
ljmp
push
or
inc
cmp
out
fnstenv
lds
out
xor
and
adc
int
mov
xor
jb
xor
push
add
fistl
mov
mov
test
push
aad
incb
out
add
or
adc
push
popl
test
popa
mov
pusha
add
imul
and
jbe
sub
sbb
xor
je
and
inc
add
sub
and
cmc
dec
pop
xor
pusha
dec
inc
dec
test
scas
dec
cmp
stos
cmp
jge
xlat
xchg
xchg
mov
mov
gs
insl
pop
mov
andl
addr16
cwtl
xchg
dec
jnp
test
rorb
sti
fsub
add
loopne
out
mov
in
loopne
repz
mov
mov
fmuls
add
add
fmul
push
fadd
jmp
test
lret
cltd
fsubl
jp
dec
cmpsb
aaa
sub
cmp
das
sub
xor
and
sub
jo
cmp
xor
push
adc
or
sbb
xor
sbb
push
lcall
sbb
sbb
call
push
sbb
out
popa
cs
add
add
xlat
and
add
out
mov
mov
fsubrs
ja
inc
inc
insl
add
add
pop
sahf
subb
dec
movsl
mov
out
add
add
ss
push
sbb
daa
sbb
repnz
jns
out
aad
cmp
add
out
pop
or
xlat
jl
rcr
and
pop
jo
filds
out
mov
and
lcall
sbb
or
sub
adc
and
xor
or
sbb
idivb
outsl
movsl
push
dec
push
inc
inc
cmp
xor
xor
adc
faddl
arpl
cmpsw
test
andb
add
add
subb
out
out
movsb
cmp
or
add
add
jnp
sbb
sbb
add
add
out
jmp
in
xor
xor
or
movlhps
hlt
inc
lahf
popa
fs
movsb
inc
pop
sahf
cmpsl
push
add
sahf
dec
inc
jmp
pusha
sbbl
arpl
push
push
sub
sbb
xor
xchg
sahf
cmpsb
xchg
mov
add
add
add
xchg
lods
test
mov
cltd
aam
mov
add
push
xor
mov
cwtl
nop
mov
outsb
andb
jmp
loopne
decl
imul
add
mov
xchg
mov
inc
push
and
pusha
outsb
fs
imul
stos
pop
jnp
clc
xor
add
sti
cmp
sub
es
das
xor
fucom
cld
fwait
cmc
in
cmpsb
scas
mov
add
les
popa
mov
inc
mov
pop
pop
dec
mov
dec
add
dec
dec
dec
dec
add
add
out
repz
cmp
adc
int3
mov
or
jb
rol
sub
fidivs
add
add
mov
lock
lods
scas
out
xor
sub
add
cmp
dec
push
jns
or
and
sub
std
cld
es
out
mov
add
in
sub
ret
out
fsubs
das
lret
and
divb
and
mov
jl
add
das
adc
ss
push
jmp
add
add
jmp
adc
push
push
or
mov
arpl
add
adc
push
hlt
jne
add
sub
push
shll
fnstcw
add
add
inc
sub
xchg
pop
add
inc
sbb
cmp
dec
loopne
shll
jnp
cmp
push
push
ss
ss
jecxz
and
inc
into
outsl
pop
sti
and
sbb
add
add
add
leave
pop
cmp
in
add
jle
jmp
call
test
mov
dec
pop
repnz
in
loope
psubsw
sbb
add
test
js
test
in
add
push
add
adc
pop
pop
aaa
call
inc
dec
out
aad
sbb
rolb
add
xchg
les
inc
inc
shlb
les
add
stos
sub
daa
cmpsb
add
sti
jmp
adc
leave
mov
add
add
test
repnz
mov
mov
cmpsb
mov
shl
xchg
incb
add
jno
rorl
xchg
ret
rol
incl
add
add
out
cmp
add
add
push
dec
add
add
xor
outsb
and
xor
jmp
inc
jbe
sbb
cmp
and
xor
add
insb
out
dec
push
sub
jl
push
sub
out
or
and
mov
adc
ffreep
inc
dec
mov
pushf
dec
push
xchg
mov
jp
mov
pop
push
lods
ret
pusha
arpl
mov
lret
jg
push
andb
test
imul
add
xor
fistpl
cltd
mov
lret
cmpl
sbb
fldl
add
pop
pushf
call
leave
call
iret
cmpsl
les
mov
mov
mov
test
lods
xchg
add
test
mov
cmpb
imul
push
mov
outsl
scas
pop
iret
fs
pop
and
add
add
add
sub
out
xchg
das
out
xchg
xor
add
xor
add
push
add
push
out
inc
jbe
add
out
jmp
in
add
loop
add
ljmp
repz
jecxz
cld
or
or
stc
lock
bswap
jb
mov
add
sub
jb
lret
add
in
add
sahf
inc
dec
mov
cmp
ds
cwtl
mov
push
xchg
scas
push
pop
rcrb
data16
outsb
xchg
je
jb
pop
ja
jle
imul
xor
sbb
push
ss
and
sbb
jmp
in
add
and
and
jne
je
imul
lcall
aas
into
inc
inc
inc
lret
inc
mov
dec
dec
adc
dec
push
push
push
cli
dec
push
push
ficompl
and
ljmp
pop
adcb
sbb
fs
imul
jo
incb
add
adc
add
imul
add
dec
add
jae
pop
add
add
sub
xor
faddl
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
or
out
add
out
add
out
add
call
add
out
add
out
add
mov
add
out
add
add
roll
outsb
out
add
lods
add
scas
add
mov
jae
fiaddl
add
mov
add
out
add
out
add
out
add
insl
add
add
inc
add
add
add
add
add
cmp
cmp
out
push
loope
add
lcall
cmp
and
xor
add
mov
call
dec
movsl
and
add
add
push
mov
push
dec
scas
dec
mov
push
cwtl
cmp
add
add
popa
lea
ja
add
xchg
add
xlat
add
add
iret
add
add
add
add
add
add
add
in
add
loopne
add
out
inc
add
out
inc
add
mov
add
add
add
inc
add
inc
add
xor
pop
push
sub
push
outsl
or
je
in
add
adc
ja
jmp
mov
push
push
push
add
mov
push
int3
lret
pop
add
xchg
outsl
gs
sbb
add
in
add
in
add
in
add
in
add
into
add
add
add
add
add
inc
aas
or
jle
pop
push
test
decl
add
mov
push
jp
add
push
lea
outsb
push
test
or
adc
incl
jae
push
push
adc
push
call
and
and
adc
add
add
inc
add
add
shr
mov
pop
cmp
add
out
jns
xchg
stos
jns
repz
jecxz
add
push
ja
cmp
sub
mov
rclb
or
sbb
sbb
inc
clc
aas
loope
add
inc
cmpsb
xchg
add
movsb
das
jns
mov
int3
mov
xchg
pushf
incb
add
add
sub
rcr
xor
dec
test
push
cmp
cli
out
inc
add
pop
dec
xchg
lcall
inc
icebp
xor
int3
sub
insl
add
jnp
cld
jb
pop
adc
faddl
adc
sub
jb
pop
jmp
pushl
out
pop
xlat
inc
jmp
enter
out
movsl
fdivl
shlb
adc
in
inc
add
add
add
add
add
jo
punpckhbw
icebp
adc
add
jmp
mov
ret
es
call
add
inc
or
repnz
fs
mov
out
bound
dec
ret
jp
mov
aas
and
mov
outsb
sbb
in
push
insb
push
notb
or
xor
call
data16
jae
je
jmp
fcmovb
shl
pop
add
mul
mov
ljmp
cmp
in
inc
lds
out
outsb
inc
jmp
test
call
out
push
jb
and
loop
add
js
rclb
jnp
push
gs
add
xor
stos
cmp
and
add
add
and
dec
add
add
mov
data16
cli
and
add
roll
push
mov
psubd
add
inc
and
push
push
hlt
je
add
decl
mov
jge
add
sbb
jge
push
or
add
loopne
inc
add
fiaddl
and
inc
mov
rcr
outsl
add
add
fidivl
add
scas
ljmp
fildl
lea
sbb
arpl
fiaddl
push
push
ja
ret
shl
jae
out
push
mov
add
add
lret
push
lea
mov
rclb
lcall
out
jmp
add
outsb
icebp
jg
outsb
movsl
call
lret
pop
add
or
outsl
jecxz
mov
lret
js
fdiv
pop
jmp
or
pop
fnstcw
fucomp
cmp
bound
sub
enter
out
test
ljmp
outsl
lret
not
cmp
hlt
daa
int
daa
in
call
clc
push
add
fiaddl
mov
call
andb
jmp
test
flds
jmp
inc
daa
lods
jmp
jns
add
in
push
in
jmp
iret
push
and
push
xchg
in
add
cltd
push
inc
and
adc
inc
data16
add
and
out
add
jmp
bound
decb
insb
jle
add
sar
insl
mov
pop
and
in
test
aad
push
lea
push
push
mov
dec
add
inc
and
ret
ja
mov
push
cmp
add
pop
add
cmpl
or
andl
incb
adc
mov
test
fldenv
dec
ljmp
inc
jg
mov
add
and
cmp
mov
add
loop
jle
mov
add
add
sbb
dec
push
scas
add
push
repz
add
add
push
mov
cmp
and
jne
push
cmp
pop
in
dec
pushl
cmpsl
push
adc
decl
jns
or
jmp
cmpb
pushl
inc
jecxz
push
out
inc
lea
movl
bound
testb
lahf
pop
add
and
add
out
jns
ret
push
lods
out
add
xchg
hlt
mov
add
add
insl
in
jle
cmp
imul
call
add
int3
orl
hlt
pop
les
inc
xchg
lea
dec
pop
out
shr
mov
orb
add
add
loopne
add
xchg
jo
adc
sub
or
ret
sarl
js
xor
adc
add
add
fildl
mov
pop
add
ret
rcll
xor
outsb
divl
sbb
sti
or
mov
repz
jmp
ret
daa
xchg
in
sbb
mov
push
cmp
pusha
shlb
cmp
xor
push
bound
mov
ss
or
sbb
fidivs
cmp
or
cli
and
cmp
mov
add
push
pop
dec
adc
push
ds
push
or
jge
mov
push
or
mov
adc
ret
inc
cmc
pop
sahf
jae
jl
push
mov
pop
pop
rol
push
add
mov
test
inc
adc
xchg
or
test
add
jle
das
cmp
push
push
mov
or
loope,pt
or
add
add
fmull
adc
test
xor
cmpl
repz
lea
add
adc
inc
push
arpl
xor
or
fwait
mov
mov
add
jne
div
cmp
call
mov
mov
jg
idivb
jmp
xor
xlat
iret
add
insb
fwait
xchg
repz
lea
loop
add
dec
mul
pop
es
fnclex
cmp
pop
nop
add
dec
jnp
lds
ljmp
xchg
and
add
outsl
push
add
insb
push
jmp
jne
add
stos
push
adc
jae
cmp
jecxz
add
insb
sub
add
divb
push
sbb
je
cltd
mov
imull
push
stc
loopne
add
add
adc
push
fbstp
cmp
lcall
aad
pop
dec
sbb
and
adc
repz
stos
xor
loope
outsl
incl
andb
inc
and
imul
imul
inc
bound
mov
pop
jnp
sar
imul
xchg
outsl
roll
test
pusha
dec
cmp
push
dec
adc
push
sti
popa
sub
loopne
add
movsl
insl
adc
scas
daa
lea
daa
xor
es
hlt
cld
icebp
aas
jmp
es
pop
adc
jmp
adc
mov
sti
mov
xchg
loop
or
fisttpl
push
bnd
pop
xor
jo
xlat
push
pop
mov
fcoml
add
fcomp
je
pop
push
cld
ds
in
in
add
and
add
add
jmp
in
push
add
pop
and
gs
out
loope
mov
divb
xorl
cmp
nop
lret
mov
inc
ret
inc
rorb
push
cmp
add
enter
call
add
decl
or
push
xor
roll
enter
mov
jmp
in
mov
ja
mov
je
cmc
call
cmpb
call
out
les
pop
push
push
iret
xlat
popf
ret
jbe
roll
mov
mov
out
sbb
sbb
sbb
adc
nop
nop
scas
jmp
add
push
sarl
lahf
adc
or
insb
mov
add
jns
push
add
gs
and
sub
jmp
dec
and
jmp
add
subl
adc
push
ret
dec
decl
call
add
push
outsb
test
imul
jmp
fidivs
or
inc
sub
mov
mov
jmp
fcompl
or
xor
mov
mov
jb
xlat
fdivrs
hlt
mov
xchg
scas
xlat
add
in
jmp
test
inc
iret
mov
jbe
add
shrb
bound
xor
and
int3
fdivs
sbb
add
add
xchg
inc
add
scas
out
imul
out
add
pop
cs
pusha
iret
std
xchg
add
jmp
repnz
imul
add
in
loop
fwait
push
ja
aas
je
sbb
adc
pushw
out
je
daa
mov
roll
test
xor
inc
jmp
cmpsl
add
adc
icebp
sub
stc
xor
int
pusha
jmp
add
mov
ret
repz
repnz
into
ss
shr
repnz
mov
scas
inc
add
pop
mov
dec
repz
adc
aam
inc
jle
add
in
shll
add
jmp
shll
jle
add
add
add
add
cmp
inc
mov
push
jmp
incl
call
sarb
add
add
in
mov
push
hlt
ljmp
and
flds
mov
push
xchg
dec
les
dec
sbb
xor
out
clc
mov
testl
inc
out
les
mov
pushf
ljmp
sti
out
out
push
add
mov
ljmp
dec
sub
test
inc
out
sarb
adc
lods
mov
in
push
pop
mov
and
dec
fisubl
in
push
pop
mov
les
repnz
les
xor
fiaddl
add
add
xlat
cli
inc
out
mov
or
inc
jmp
flds
call
shrb
out
test
add
out
mov
test
dec
mov
out
cmp
out
lea
sar
inc
out
xlat
cltd
push
into
sub
aam
popf
imul
je
add
fcoml
fcoml
sub
add
add
into
inc
jmp
incl
sub
xchg
mov
inc
add
sahf
sar
mov
sbb
pop
lahf
jmp
cmp
lret
inc
and
inc
mov
sbb
xor
lahf
sar
cli
cmp
cmc
jb
push
inc
or
in
xor
mov
push
out
dec
and
testl
std
incl
rorb
lds
and
sub
pop
pop
int3
or
push
test
sub
push
fistps
lock
inc
clc
call
aaa
pop
add
into
inc
adc
sub
dec
jle
movl
fisttps
inc
ljmp
scas
xchg
dec
inc
mov
cld
mov
add
add
xlat
cmp
jns
sbb
dec
push
mov
test
adc
inc
hlt
push
mov
out
and
jle
add
out
repnz
stos
mov
inc
pop
inc
inc
inc
out
push
stos
dec
loopne
cmpsl
fdivrl
inc
out
popa
adc
pop
pop
hlt
out
and
movsb
mov
cld
and
std
mov
faddl
add
mov
icebp
mov
scas
push
add
push
cmp
mov
add
mov
adc
stos
loop
jae
ret
pop
push
add
imul
shrl
mov
cmp
sub
mov
push
ret
shrb
scas
fmul
mov
loopne
inc
jecxz
add
mov
addr16
add
add
jbe
imul
test
add
jg
mov
imul
mov
push
int
and
ljmp
jl
or
test
and
jns
icebp
or
repnz
sar
mov
add
mov
jmp
outsl
push
clc
sub
inc
adc
jp
cmpb
push
xor
flds
add
add
push
sbb
adc
lods
xchg
shll
fsubl
jne
fildl
mov
xlat
ljmp
flds
imul
adc
push
dec
ja
addr16
filds
sarl
call
cltd
inc
add
xchg
clc
mull
add
add
pop
push
call
lds
add
in
ss
mov
stc
pop
add
fisubrs
incb
add
xchg
jp
call
xchg
or
lea
fildl
mov
lea
adc
mov
mov
dec
fcoms
popl
into
add
and
jmp
mov
add
xorl
add
cmpsb
sub
loope
out
pop
std
jo
add
imul
add
std
dec
movsl
add
and
sar
sub
cltd
mov
popa
addb
popa
lret
sbb
add
jne
add
fdivrl
push
imul
add
lea
outsl
xor
push
maxps
add
add
push
mov
fidivrl
mov
nop
pop
push
daa
fstpt
adc
mov
out
cmp
out
into
mov
out
stos
pop
int
xor
pop
add
add
rcrl
andl
inc
add
add
add
xor
xor
add
sarb
cld
out
out
outsb
add
add
xor
inc
push
out
cltd
fstpt
jmp
or
add
add
mov
jmp
std
shr
xchg
ljmp
stos
lods
punpcklbw
shrb
add
out
xchg
int
out
mov
and
sub
add
fildl
mov
add
jmp
lock
sub
add
add
xor
idivl
xor
pop
add
bound
cmc
aas
jmp
in
push
jno
jg
in
push
je
ret
call
xor
add
in
cmpb
add
in
push
push
outsb
xchg
add
pop
add
inc
xchg
mov
cmpb
cmp
add
scas
jge
add
sub
push
mov
or
inc
add
lret
add
pop
adc
jae
clc
les
lock
or
add
ja
ljmp
jg
add
push
push
lea
add
into
push
call
cmp
jno
dec
scas
iret
push
test
out
adc
add
add
add
fdivl
push
push
xchg
add
fdivl
push
xchg
fcmovbe
icebp
aas
out
les
pop
addb
add
leave
pop
dec
out
std
cmp
wbinvd
xor
inc
jge
insb
pop
mov
test
fiaddl
add
fildl
add
faddl
push
or
ret
repz
jnp
out
add
out
push
shl
fiaddl
add
cmp
pusha
adc
fiaddl
push
dec
add
pop
out
repz
inc
jmp
sbb
popl
fimuls
push
loop
sub
add
mov
jmp
out
loopne
jmp
fbld
lock
add
push
lret
inc
add
out
cmp
sub
or
out
push
jmp
cmc
hlt
pop
das
in
fwait
sti
pop
mov
leave
gs
add
out
sub
call
filds
int3
movntq
out
add
adc
in
call
push
and
jmp
jmp
add
lods
out
lret
call
outsb
add
in
inc
add
in
pop
bound
ret
jl
add
jb
add
in
jg
in
xor
faddp
jnp
divb
cmc
fidivl
std
shlb
sbb
out
pminub
cmc
aam
pop
pop
popl
adcl
sub
pop
or
and
adc
andl
into
dec
inc
and
dec
xchg
lret
add
ret
cmc
mov
and
add
add
jne
jle
pop
sarb
xor
cmc
les
std
adc
adc
ud0
push
push
xchg
into
push
adc
add
ret
shr
mov
sti
pop
cli
add
mov
sub
adc
mov
decl
adc
adc
out
inc
and
fs
out
add
sub
or
lret
mov
aas
and
mov
out
xchg
shl
fmull
fcmovne
sbb
xor
pop
adc
insl
lret
jae
cld
ss
jo
repnz
fisttpll
or
add
test
repz
xchg
dec
add
push
pushf
fdivp
pop
jg
fwait
loop
push
shl
out
and
or
push
add
scas
inc
adc
add
add
push
in
daa
jl
xchg
out
in
pushf
jle
orl
repz
hlt
test
js
int3
mov
ss
xchg
sti
pusha
daa
push
pop
out
jmp
sti
xor
inc
out
cmp
call
push
repz
in
loope
rcll
dec
lds
jns
iret
sbb
int
cmp
xchg
les
clc
sub
lret
test
in
sti
iret
adc
add
add
inc
loope
dec
or
lcall
call
xchg
and
pop
xor
pop
and
arpl
iret
jmp
add
cmc
adc
fs
mov
push
cltd
xor
push
mov
jns
add
jae
loopne
adc
jecxz
test
sub
cmp
scas
mov
repnz
jmp
xchg
scas
repz
cmp
insb
test
cld
xchg
cs
hlt
pop
icebp
aas
add
inc
mov
movsb
jnp
std
push
mov
lods
push
jnp
mov
call
inc
mov
jge
push
jne
stc
push
jl
push
mov
cmp
int3
adc
mov
add
add
push
add
jg
or
int3
jae
out
fadds
mov
pop
mov
jg
add
repnz
iret
ficompl
add
pop
push
push
icebp
popa
adc
add
mov
fwait
stc
out
push
push
push
fadds
ds
inc
lock
adc
insb
fimull
mov
not
inc
adc
mov
jl
loop
adc
inc
sub
testl
cmp
add
add
dec
and
push
leave
mov
jmp
add
or
sbb
enter
mov
inc
rol
mov
or
pop
out
push
ljmp
out
pop
xchg
and
jge,pt
add
js
adc
nop
sub
test
repz
cli
inc
jmp
add
add
ret
pop
call
rclb
add
mov
add
shl
xchg
jp
push
lcall
or
daa
roll
jmp
add
jmp
sub
out
test
out
jecxz
sti
or
hlt
test
insb
dec
stc
jnp
jae
mov
pop
mov
filds
add
add
test
les
push
push
bound
pop
lea
sub
jb
mov
or
cli
jmp
test
add
out
ss
and
adc
adc
ja
sar
adc
adc
dec
xorl
mov
cmp
jmp
movsb
push
call
imul
jnp
das
mov
dec
dec
sar
test
call
add
into
cmpsl
pop
add
inc
add
es
push
add
cmp
ss
or
push
add
setne
lds
add
and
data16
pop
add
xchg
inc
cli
add
mov
mov
or
mov
adc
fimuls
mov
std
out
mov
cmp
pop
add
mov
push
mov
mov
out
pop
cmp
xchg
dec
sbb
sbb
push
and
mov
mov
ljmp
daa
mov
lods
add
mov
stos
add
jecxz
daa
and
and
and
adc
pushl
ljmp
add
add
sub
or
fnstcw
out
add
iret
pop
pop
add
das
ret
jae
pushf
fiaddl
xchg
lods
add
adc
add
out
stos
add
addr16
jmp
lods
jne
ret
add
lret
stc
add
cld
add
sub
mov
stos
dec
push
out
les
push
incl
negb
movsb
out
sbbl
adc
sbb
add
inc
xorl
pop
call
mov
mov
mov
add
out
inc
jmp
add
add
mov
pop
jmp
out
movsb
out
mov
lods
mov
dec
pop
scas
out
scas
test
xor
mov
add
shrl
mov
dec
in
fwait
daa
stos
add
add
xchg
ret
mov
add
or
cltd
adc
addb
add
xor
and
daa
pusha
sub
aas
pop
and
and
lods
inc
and
mov
inc
and
in
inc
lds
add
add
stos
pop
jmp
movsb
adc
inc
movsb
and
dec
inc
add
aad
and
dec
and
push
ret
xor
dec
inc
add
adc
inc
ds
je
fldenv
pop
mov
ret
push
rorl
jl
push
sti
adc
jns
and
add
push
out
inc
add
fdivr
incl
add
add
les
or
push
xor
pop
push
push
les
fmull
cmc
mov
pop
push
ja
mov
imul
add
and
add
std
sub
sbb
mov
mov
test
mov
add
std
sub
sbb
sbb
xor
ret
push
imul
add
cmp
sbb
xlat
fimuls
cmpsl
lods
mov
jae
insb
add
cs
push
js
adc
sahf
je
dec
fistpll
cmpl
adc
adc
pusha
popa
sub
mov
adc
inc
out
cmp
adc
add
shll
jmp
inc
repz
jo
rorl
add
lods
cmp
mov
stc
push
mov
adc
cmpsl
add
sti
std
test
cmp
push
andl
sbb
or
das
cmc
mov
out
stos
mov
cmpsb
sbb
jmp
fsts
out
cwtl
dec
inc
jmp
in
int
and
add
xor
icebp
jmp
push
lahf
cmp
shr
in
lds
add
add
push
xor
mov
pop
in
cmp
or
dec
mov
jmp
jne
testl
in
lret
jg
xchg
xchg
pop
pusha
xchg
pop
pop
gs
add
hlt
mov
or
and
push
cmp
add
lds
sar
lea
data16
add
out
xchg
add
mov
cmp
ljmp
inc
ss
sub
add
inc
sub
clc
sub
ds
mov
mov
push
pop
leave
dec
or
push
xchg
jae
push
sub
testl
sbb
add
movb
add
push
push
inc
mov
adc
push
pushl
mov
sub
mov
xor
sub
add
mov
push
adc
push
push
fdivrl
jmp
cmp
jae
popf
xor
decl
ljmp
or
pop
loopne
mov
add
add
pop
add
inc
lret
rcr
xchg
movsb
stos
lock
add
daa
orb
mov
or
add
out
stos
mov
leave
mov
or
push
bound
mov
dec
ja
in
jmp
cmp
mov
or
xorb
out
xor
addb
mov
push
mov
mov
dec
or
add
sub
mov
lods
cmpsl
mov
sub
mov
mov
sbb
sub
mov
es
movsl
sti
lret
insl
cmc
call
in
pop
out
push
decl
call
sbb
call
cmp
leave
sub
add
aas
test
loope
add
mov
jne
call
pop
mov
add
and
data16
rorl
or
aas
icebp
push
call
push
jmp
notl
loopne
dec
shr
scas
int3
mov
inc
icebp
mov
add
jb
lea
out
movl
ret
addr16
outsl
into
add
and
arpl
incl
add
add
add
call
mov
add
add
push
test
pop
cmp
rorb
push
mov
lcall
jle
push
push
iret
ja
add
jb
fisttpl
std
mov
mov
aad
jne
mov
add
call
pop
andl
jl
call
jp
add
out
mov
mov
ret
out
cmpl
sbb
xor
push
lea
mov
lock
add
jg
mov
je
sti
je
fwait
xor
test
mov
insb
mov
jmp
xor
xor
insb
icebp
sbb
and
add
cld
lds
xchg
sbb
sub
ds
pop
add
add
push
adc
in
jae
lea
pop
push
sub
hlt
stc
adc
in
sbb
pop
in
jno
mov
ds
jge
push
xlat
repz
or
mov
cs
stos
mov
jecxz
inc
xchg
lods
mov
cs
xchg
or
or
daa
add
sub
pop
aaa
iret
out
pop
mov
jmp
or
push
sbb
in
mov
icebp
out
push
in
xlat
fwait
jle
mov
sub
daa
ds
cmp
out
push
bound
cmp
mov
stc
in
jl
xorl
das
add
xchg
sub
add
mul
psrlq
fwait
mov
pop
mov
mov
xlat
out
xlat
out
push
xlat
adc
in
mov
std
push
adc
pop
testb
pop
xchg
cltd
xor
fdivr
movsb
add
out
add
add
js
call
adc
and
push
mov
test
adc
sti
pushf
repz
scas
xor
add
inc
add
jo
cmp
cld
sub
lea
push
js
lret
ljmp
add
jb
add
add
or
inc
add
xchg
jo
aad
mov
ja
xchg
dec
add
inc
pop
jae
fmul
mov
add
out
adc
out
jle
fmull
add
cmpsl
out
movsb
lcall
clc
cltd
cmp
xchg
inc
add
dec
push
iret
cmp
inc
and
imul
jbe
xor
mov
mov
add
outsb
cli
out
inc
add
cmp
rolb
xor
sbb
mov
jle
sti
lahf
xchg
xor
cmc
in
sub
das
or
xor
cmp
lock
hlt
jmp
loop
sbb
stos
insl
shr
arpl
cmp
pop
inc
in
imul
sub
cld
popa
inc
fistpll
test
dec
pop
sarl
notl
adc
mov
mov
or
jecxz
aaa
cli
or
ljmp
xor
sub
add
and
xchg
ret
enter
jp
out
out
mov
out
out
mov
xor
cltd
jl
daa
jmp
std
decl
sbb
and
aas
out
fwait
ret
pushf
jecxz
lcall
or
lcall
adc
push
ds
mov
out
ljmp
popa
loop
xchg
in
add
mov
mov
sbb
call
popa
sar
xor
add
sahf
cmpsl
lods
ficompl
jmp
mov
lods
add
out
cmp
pop
adc
push
int
add
mov
jl
je
sub
sub
add
push
add
lea
add
add
jb
cmp
jmp
xorl
jne
xchg
pop
jb
push
jb
push
jl
pop
int
add
cmp
xor
outsl
xchg
jle
mov
call
divl
add
pusha
dec
ret
mov
ds
call
sbb
pop
divl
incl
dec
call
bound
sub
sub
cmpsb
enter
mov
out
jnp
xchg
aaa
xchg
mov
leave
out
test
out
sbb
bound
xchg
add
xor
sub
mov
push
lea
test
lods
popf
add
out
add
jns
mov
inc
out
adc
icebp
jg
add
add
dec
aas
fsts
sbb
inc
pushf
push
nop
out
mov
dec
rcrl
jae
jmp
add
push
je
das
push
adc
lea
rolb
lret
out
and
lcall
stos
shrl
jae
jg
push
test
and
gs
cmp
call
xor
add
in
lea
decb
mov
cmc
lahf
fnstcw
lock
sarl
fcompl
movsb
add
fs
test
mov
push
test
addl
das
push
inc
mov
pushaw
add
das
adc
test
call
pop
cmpsl
incb
jl
sbb
push
jbe
stos
dec
push
stos
mov
jae
addr16
push
push
stos
ljmp
pop
std
mov
out
mov
or
dec
pop
jle
rcrl
andb
pop
leave
cld
sti
call
jg
ret
add
push
push
ret
jmp
pop
dec
hlt
mov
lea
xchg
syscall
mov
out
push
lea
stos
pop
std
fiadds
test
add
xor
sbb
addb
add
add
or
add
jl
cld
inc
pop
dec
mov
lcall
call
lcall
sbb
fwait
push
fwait
add
cmpsb
adc
mov
out
add
pop
std
inc
cltd
push
pushl
pop
aaa
xor
dec
lods
je
sbb
loopne
lcall
add
xlat
stos
dec
cwtl
mov
hlt
call
and
jae
ret
sub
add
scas
rolb
xor
aaa
stos
cmpsl
sti
pop
hlt
inc
jmp
jmp
push
mov
cmpsl
cwtl
fwait
ret
add
add
add
je
dec
sahf
ret
mov
jl
add
addr16
call
mov
jge
add
add
lods
fcmovne
cli
inc
out
test
fs
add
cmpb
or
xor
adc
pop
push
jmp
adc
rolb
xchg
js
fwait
call
or
add
cmp
lock
add
add
repnz
add
mov
pop
cmpsb
insl
lahf
xor
jns
push
sub
xchg
pop
in
lcall
aas
cld
mov
in
ret
cmc
imul
jno
add
jg
out
jl
pop
dec
sahf
shll
repnz
xchg
aas
movsl
push
lods
dec
leave
stos
xchg
jp
push
push
push
aaa
xchg
repnz
fbstp
mov
lret
leave
repz
mov
cmp
adc
es
or
repz
mov
inc
or
pop
repnz
jle
inc
adc
repnz
mov
inc
adc
mov
inc
jle
inc
sbb
hlt
add
push
mov
mov
nop
dec
add
xor
or
push
add
repnz
push
sub
lock
ficomps
add
ds
xor
cmp
out
sub
aas
cmpl
aaa
es
mov
add
mov
pop
lcall
and
dec
nop
cmpsl
add
and
test
inc
out
pop
lock
add
pop
or
add
add
hlt
roll
in
pop
pop
add
incl
cmp
add
fldcw
push
pop
push
movsb
lcall
out
jl
fs
pop
push
mov
inc
push
ucomiss
mov
pop
dec
pushl
jns
out
fidivl
les
pushf
and
out
pop
sbb
jl
adc
xor
push
sbb
push
cmpsb
xchg
insl
enter
sbb
fbstp
jb
xchg
mov
stc
imul
add
nop
mov
push
mov
push
arpl
add
xor
ljmp
adc
out
jmp
push
out
ss
jnp
out
pop
dec
lods
jle
adc
insl
jo
add
imul
jmp
in
lea
push
lea
push
push
push
imul
call
cmp
gs
add
lock
in
lea
cmp
scas
add
lret
test
outsl
xchg
in
addl
xchg
mov
xchg
add
je
dec
out
call
movsb
xchg
adc
jge
testl
adc
push
add
push
push
mov
outsl
mov
jg
insl
iret
add
aad
cld
cmc
pushl
push
jne
inc
inc
in
or
sbb
add
testl
in
lcall
dec
popf
lds
mov
adc
jns
inc
loopne
add
mov
adc
xchg
inc
faddl
add
add
jb
lods
mov
dec
call
mov
out
imul
push
add
push
das
or
lcall
xlat
adc
lods
add
das
ret
jae
jb
jnp
fbld
ret
je
adc
add
out
stos
mov
dec
fwait
mov
sub
jns
out
jp
je
add
add
jge
out
ljmp
mov
adc
jns
out
lock
add
sub
mov
jb
jmp
and
mov
fnstsw
mov
clc
insl
dec
loope
mov
mov
aam
lods
jbe,pn
add
xor
mov
rcrb
fwait
lret
jg
add
hlt
push
pop
sbb
lcall
xchg
add
jp
hlt
outsl
xor
mov
push
cli
punpckhdq
jg
pushf
std
sub
add
cmp
mov
daa
dec
add
jle
sahf
push
mov
inc
shl
sub
je
addr16
shll
add
cltd
inc
clc
cmp
repz
xor
cmpsb
mov
add
sbb
add
add
dec
mov
in
inc
in
adc
jb
cmpsl
mov
mov
add
popf
mov
dec
and
daa
in
imul
jle
call
adc
cltd
inc
pop
adc
adc
call
bound
jl
out
jbe
lret
inc
xor
inc
sub
cmp
testl
lar
ss
fcoms
mov
add
nop
inc
add
sbb
jns
stc
inc
leave
ret
push
mov
ljmp
cwtl
add
pusha
cmc
or
mov
incl
or
rclb
decl
jecxz
pop
es
mov
dec
je
cld
sahf
mov
push
out
mov
popf
out
mov
les
orb
lcall
outsl
push
lea
data16
aas
out
cmp
mov
xlat
or
loope
fcomp
nop
dec
ret
fistl
insb
stos
stos
add
mov
mov
clc
xor
popl
fstps
push
stos
stos
add
and
push
test
push
sahf
out
xchg
out
sub
out
sub
dec
push
fnsave
dec
out
sub
out
mov
lret
in
add
mov
aaa
bound
mov
sbb
mov
cmp
sub
sub
lahf
movb
add
in
push
mov
fcmovnu
jnp
out
jo
push
fsubr
sbb
in
and
stos
jbe
sbbb
popa
fcoml
call
js
aas
jmp
xchg
adc
cmpsb
push
xchg
arpl
and
out
lcall
pop
cmp
ret
test
lock
in
nop
inc
jmp
shr
out
lcall
push
inc
pmaddwd
jecxz
push
js
aas
jmp
xchg
call
push
xchg
neg
and
pop
imul
sub
mov
jnp
js
pushf
fnstsw
ljmp
jl
repz
fistl
jp
push
call
aas
ja
xchg
cmp
icebp
add
add
pushl
out
or
dec
push
call
xor
call
std
mov
call
jge
std
je
outsb
sbb
xchg
jns
adc
outsl
mov
add
movsb
into
add
add
mov
inc
mov
mov
mov
incl
insb
dec
out
insl
mov
jg
test
add
addr16
jne
jmp
xchg
fiaddl
ret
push
mov
lcall
add
jge
mov
jno
mov
push
lock
out
inc
and
and
out
pop
loope
imul
inc
lods
iret
pop
stos
add
insb
popa
pop
sahf
xor
icebp
and
and
add
add
and
and
add
jae
jmp
add
aas
add
mov
or
xlat
mov
adc
insl
xor
add
nop
movsb
fcomip
xor
int
out
sub
imul
add
sub
lods
cmp
adc
add
mov
or
decb
mov
or
add
add
and
popf
push
loopne
pushf
repz
inc
out
movsb
adc
jae
or
and
mov
fdivs
mov
fistl
add
lods
mov
push
jo,pt
adc
out
stos
mov
sub
jg
jmp
inc
aaa
push
jb
inc
mov
mov
mov
jo
add
add
stos
mov
and
mov
inc
pop
roll
add
pop
inc
and
sbb
mov
pop
push
and
add
add
add
inc
ret
jb
add
leave
mov
adc
push
ret
test
xchg
ljmp
cmc
add
dec
push
out
incl
add
add
add
out
dec
mov
push
push
ljmp
and
incl
add
push
or
and
addr16
push
add
cmp
cmpsl
out
aas
decl
out
inc
sub
mov
imul
movsl
movsl
stos
add
cmpsl
out
cmp
cmpb
jmp
das
mov
test
adc
lea
sbb
jne
test
add
add
add
icebp
dec
stos
jmp
pop
and
clc
push
adc
cmc
ljmp
aaa
sbb
scas
mov
xchg
stos
sub
jb
les
mov
inc
aam
push
paddb
mov
into
ss
aaa
mov
xor
add
add
jb
lcall
sbb
push
rcr
pop
push
inc
cmp
sub
mov
xchg
mov
add
mov
lahf
mov
adc
add
out
push
fdivrl
mov
mov
xor
xchg
add
jle
adc
inc
add
test
out
ljmp
jecxz
dec
mov
orl
pusha
sti
pop
mov
lret
sub
in
rorl
call
in
pop
popa
dec
and
push
pop
sub
stc
in
call
jb
mov
out
idiv
outsb
orb
add
in
lea
fcoml
add
cmp
ljmp
add
insb
cmp
or
fptan
imul
scas
inc
add
inc
cmpb
rcrb
repnz
imul
jne
jne
jg
push
in
pop
call
into
cmp
cld
cmp
insb
std
mov
or
or
imul
aas
push
push
rorl
sbb
dec
rolb
add
or
dec
mov
decl
les
sbb
inc
or
roll
mov
andl
mov
addb
push
jl,pt
pushf
add
push
pop
or
insb
push
fmul
filds
sti
andb
add
lahf
xchg
ret
loop
add
out
mov
fs
push
xor
xchg
mov
mov
inc
jecxz
mov
inc
cld
in
test
add
fs
out
fistpl
ds
sahf
push
aas
mov
dec
inc
aad
add
mov
dec
sub
mov
adc
daa
add
sbb
movups
mov
jge
cwtl
xchg
fwait
insl
xchg
icebp
nop
fs
jae
imul
in
icebp
cmp
add
add
push
rorb
dec
and
inc
out
test
enter
out
test
mov
inc
in
xchg
sbb
mul
jl
xchg
cmpb
xchg
jno
sub
cmpsb
aam
shrl
in
lcall
dec
in
mov
sub
std
adcl
mov
popf
mov
inc
add
gs
adc
in
push
call
clc
test
ds
mov
out
push
in
sub
or
shll
scas
addr16
jae
xchg
dec
pop
cmp
roll
pop
inc
sbb
pop
add
test
in
jp
int
ss
icebp
test
subl
cmpsl
xor
icebp
dec
je
addr16
push
in
mov
jle
clc
mov
jmp
add
xor
mov
js,pt
add
jl
adc
add
outsb
sti
out
inc
add
xor
push
mov
test
adc
mov
cmc
or
loopne
test
int
add
push
mov
add
pop
test
add
or
add
jle
jae
inc
pop
aas
stc
sbb
rorb
mov
gs
cmc
inc
ds
xlat
cmpsb
sub
decl
jp
cld
int
std
movntq
call
shrb
add
cmpsl
ljmp
pushf
or
add
xchg
je
mov
or
jbe
loopne
out
add
lcall
mov
data16
mov
ret
add
add
xchg
mov
inc
aaa
adc
aam
iret
lds
mov
jmp
xchg
clc
dec
xorb
imul
test
pusha
sahf
ljmp
mov
dec
fwait
int
mov
repz
inc
xchg
repz
add
mov
add
out
stos
lahf
mov
add
or
xchg
mov
into
sbb
notl
out
xor
mov
mov
mov
sahf
xlat
js
xorl
lock
pushf
adc
mov
sbbl
add
sti
mov
inc
jmp
sbb
mov
sti
popa
idiv
cwtl
movsl
add
gs
jmp
pop
test
add
decb
inc
xchg
add
insb
jnp
add
push
cmpb
xor
push
inc
add
jns
inc
sub
call
inc
cltd
mov
mov
add
jb
sbb
jno
add
ljmp
push
xchg
testl
ret
stos
mov
jb
jl
popa
mov
sbb
add
mov
ljmp
icebp
jmp
mov
cmp
jmp
das
mov
jp
pop
inc
in
test
addl
pop
test
lcall
add
push
push
push
push
out
push
pop
add
mov
je
cmpb
incl
cmp
jle
hlt
mov
inc
lock
push
jl
adc
or
daa
add
cmpsb
fwait
pushf
add
out
add
aas
lods
cwtl
gs
outsl
xchg
push
popa
and
add
mov
push
arpl
add
inc
mov
cmp
mov
clc
lock
inc
mull
sub
mov
lret
jp
xlat
push
inc
sub
add
add
mov
iret
jp
lret
adc
js
loopne
lds
out
add
call
mov
xchg
and
sub
andb
leave
popa
jle
add
jl
xchg
pop
adc
pushf
arpl
add
shr
inc
cmpb
jp
xchg
xchg
mull
cld
xor
sbb
out
and
sti
xchg
cmpsl
add
add
addr16
lret
add
sub
inc
lret
or
dec
ss
jbe
mov
mov
sti
fildl
test
lds
loopne
add
fdivrl
fistpl
pop
jge
xchg
insl
inc
aad
and
ljmp
inc
jnp
icebp
std
aas
in
das
and
add
cwtl
cmp
popa
je
popa
mov
jnp
adc
inc
inc
xchg
add
add
pop
pop
std
es
jge
sbb
jno
or
movsl
add
fcompl
jmp
fdiv
hlt
stos
in
adc
cmc
call
pop
nop
shll
hlt
fcoml
xorl
lock
and
lcall
xchg
adc
xchg
cwtl
shl
sub
add
lcall
dec
out
aam
push
add
add
add
negl
jp
inc
add
js
clc
sub
add
or
and
sar
adc
mov
add
sbb
call
outsl
adc
push
jmp
js
clc
stc
in
adc
jmp
call
or
pop
pop
movsl
mov
rclb
add
add
fcomip
nop
mov
push
outsl
pop
dec
mov
cmp
xor
add
inc
add
jl
add
push
cmp
aas
push
jo
mov
daa
popf
sub
and
pop
and
adc
mov
dec
loope
mov
xchg
xlat
ret
sbb
jmp
test
push
or
xchg
imul
movsb
cmc
aas
out
adc
push
cli
inc
aam
mov
mov
xor
rorb
inc
out
jb
gs
popf
test
xor
jmp
mov
jne
aam
loope
push
pushf
gs
stos
pop
icebp
call
sub
mov
add
add
sub
xor
out
and
call
shll
loopne
mov
cld
orb
cwtl
fs
add
lret
sar
fildl
hlt
fs
loopne
call
add
cmc
jg
add
add
es
mov
add
inc
mov
lea
add
idiv
push
adc
inc
push
gs
jmp
jmp
cld
pop
repnz
jmp
insl
jns
pusha
loopne
pop
push
test
jecxz
xchg
in
add
or
inc
jmp
sbb
out
pop
test
adc
icebp
mov
mov
fildll
ljmp
daa
dec
add
jg
icebp
mov
sbb
adc
jle
jmp
ret
add
add
mov
clc
pushf
jnp
std
jne
mov
shll
lea
add
sub
pop
aad
pop
ret
add
pop
xor
dec
pop
and
jl
inc
cmp
add
out
sub
std
inc
and
jae
cli
inc
and
lahf
hlt
ss
push
push
jmp
adc
aaa
push
shlb
hlt
and
sub
add
add
ljmp
es
aam
packssdw
add
out
test
push
addl
lock
cmpl
imul
je
add
insb
call
add
imul
add
out
and
filds
and
adc
xchg
out
ds
cmc
jle
outsl
insb
add
movlhps
add
in
push
and
add
mulb
add
in
aad
push
sub
inc
out
xor
add
mov
lods
adc
xor
icebp
hlt
adc
add
add
xlat
imul
add
les
cmp
hlt
pop
enter
outsb
std
loopne
in
ljmp
out
out
pop
xorb
xor
fadds
pop
add
jl
daa
icebp
adcb
xchg
add
add
les
call
rcrb
jmp
loopne
push
bound
sub
adc
add
cmp
pop
bound
and
mov
lahf
lea
jmp
xchg
jnp
lods
fsub
aas
loop
add
lea
add
mov
out
ljmp
lods
xor
push
dec
notl
mov
mov
add
sbb
sbb
jl
jge
in
mov
add
insl
add
std
lea
ss
out
jle
into
cld
lds
mov
ficomps
mov
hlt
inc
loop
add
jp
xchg
std
jne
add
add
daa
adc
cmp
and
testb
xor
je
jnp
je
lahf
out
lock
mov
je
sbb
xchg
jo
add
jae
cmp
cmovp
sub
jmp
dec
jnp
out
cld
push
lcall
pop
and
out
jae
out
and
add
xor
insb
ja
add
jns
aas
loop
and
repz
insb
daa
hlt
lds
leave
add
or
inc
lret
and
add
sub
rcrb
and
cmp
icebp
xchg
jg
jno
inc
out
das
mov
mov
packssdw
scas
idivb
add
add
jmp
add
mov
fstpt
add
sbb
lock
std
stos
lea
jb
fsubrl
sarl
jl
clc
add
orb
mov
clc
call
add
not
mov
jge
inc
hlt
push
jg
out
lret
in
sub
fdivrl
add
pop
adc
addb
add
rorl
mov
cmp
call
lahf
sar
jnp
test
decb
adc
mov
insl
lcall
adc
pop
push
lods
imul
stos
xor
repz
adc
or
outsl
xor
mov
fs
adc
or
call
add
pop
mov
in
pop
shll
push
push
push
ja
stc
jne
add
xor
add
sub
cmp
jns
test
cmp
jle
adc
pop
stc
orl
xchg
lea
lock
cmp
xor
push
mov
pop
jns
mov
jns
sbb
call
pop
pop
dec
or
push
pop
cmp
in
add
rorb
sbb
mov
sub
cmp
jbe
xor
pop
or
jl
ljmp
testb
add
add
add
jae
mov
mov
push
sub
push
dec
je
mov
dec
clc
add
add
icebp
aas
inc
pop
sub
stos
loopne
loop
cmp
repz
add
clc
in
and
or
xor
push
jae
mov
pusha
hlt
add
jl
xor
or
inc
push
insb
clc
sub
add
fstps
jno
loopne
pop
cmp
mov
cmp
add
mov
xchg
jnp
test
adc
loope
dec
sub
out
cli
xorb
mov
xor
jns
mul
cmp
repnz
in
jb
loop
and
add
mov
cmc
add
movsb
sub
jl
jg
jg
stc
in
js
adc
cmp
js
cli
lret
jns
fnsave
popa
mov
ljmp
bound
push
arpl
sti
insb
cs
push
inc
xor
add
aad
mov
add
cmp
cmp
jge
jb
enter
dec
call
in
andl
js
into
mov
js
jb
or
sub
add
ljmp
add
scas
jo
sub
pop
insb
push
aas
push
mov
incl
jae
xor
jmp
add
jne
in
out
ds
lock
jb
int
or
jb
lea
push
push
push
stc
jae
leave
sbb
ds
shlb
call
sub
clc
adc
pop
mov
add
lcall
push
imul
inc
mov
stc
cmp
shrb
lea
push
push
mov
insb
add
sarb
adc
xchg
pop
mov
std
cmp
ja
inc
push
push
movsb
cmc
lods
add
cmp
adc
xchg
dec
shr
aad
or
outsl
pop
mov
testl
add
add
dec
jnp
xor
jmp
lods
add
and
imul
js
inc
out
inc
je
sbb
lock
insb
add
insb
add
add
out
jmp
adc
add
inc
hlt
and
rcll
shlb
push
jbe
cmp
ret
call
jl
add
add
mov
sub
out
out
mov
cmp
add
xchg
dec
es
call
rclb
jmp
and
fld
loopne
sub
nop
call
cmp
adc
add
mov
inc
sbb
xchg
jg
icebp
push
jne
fildl
jmp
test
jae
xchg
pop
sbbb
mov
jo
sbb
sti
sbb
out
sti
pop
inc
sbb
fmul
jne
fs
lock
je
add
ret
incl
mov
cmp
mov
and
fisttps
jne
sub
or
and
in
add
ljmp
jmp
loope
out
jp
aaa
cmp
test
xlat
movlps
lcall
dec
push
mov
std
arpl
add
imul
stc
adc
jl
incb
jae
add
clc
adc
cmp
incb
in
dec
push
stc
into
test
je
xor
mov
push
mov
test
adc
push
xor
sub
cli
cmp
jae
push
mov
dec
push
std
adc
dec
xor
mov
lea
mov
out
out
pop
cmp
dec
fcomip
into
jmp
or
in
call
xor
push
cmpb
daa
pop
jge
sti
inc
cmp
jo
push
fistpll
xorb
mov
insl
ret
cmp
cmp
push
mov
add
add
sbb
enter
push
pop
sbb
xor
fistpll
jne
add
pop
jg
out
aas
out
push
cmp
stos
push
imul
add
clc
lock
clc
sub
pop
fs
add
lock
stc
std
jb
sbb
enter
adc
out
in
pop
fdivrs
jb
out
fdivrl
imul
push
xlat
es
jmp
addr16
jns
mov
ret
cmp
jae
sbb
cmpsl
add
adc
or
call
mov
inc
cli
ret
add
sub
mov
out
test
push
out
aam
and
jnp
stos
dec
cs
dec
xchg
call
cmp
call
fstpt
sarl
test
xchg
push
mov
fildl
mov
push
pop
push
sti
cmpsb
cltd
push
cmp
pop
insb
fbld
mov
test
in
clc
xchg
pusha
dec
xchg
cmp
ss
lea
addb
inc
inc
xor
mulb
cld
inc
and
adc
fsub
add
in
adc
push
mov
pushf
fdivl
ret
call
jb
fnstenv
mov
add
add
int3
std
xor
clc
aaa
jge
pusha
add
jecxz
std
push
stos
stc
jae
pop
adc
cmc
inc
out
pop
aaa
ret
add
sub
adc
or
pushl
add
jle
add
shrl
fmull
ds
ret
jae
ljmp
stc
jae
fnstenv
call
imul
leave
adc
shl
push
push
call
pop
mov
add
cmpsl
cwtl
inc
or
xchg
mov
pop
repz
pop
int3
push
loopne
std
test
sar
sbb
adc
pop
ret
loopne
std
mov
in
aas
out
out
out
test
rcl
out
aas
or
pop
test
add
add
pop
jle
mov
mov
or
xor
sbb
add
mov
incl
add
int3
imul
jmp
cmc
test
iret
xchg
mov
out
sub
out
arpl
mov
rcrl
imul
clc
loopne
and
inc
xor
ret
call
add
add
add
subb
lcall
call
outsb
insl
rorl
sbb
out
rorl
pop
dec
inc
or
cmp
outsb
call
xor
clc
aas
jmp
in
mov
add
add
mov
out
gs
mov
push
mov
add
add
insl
inc
add
add
jmp
shrb
aaa
dec
cmpsb
adc
in
inc
gs
cs
push
je
test
xchg
jae
insl
dec
pop
outsb
mov
data16
movsb
add
call
ljmp
std
shl
cmc
fdivs
add
ljmp
leave
xor
xchg
cmp
push
mov
push
dec
push
push
inc
outsb
push
add
mov
inc
mov
xor
subl
decb
out
hlt
je
addl
dec
dec
outsl
std
ror
shlb
imul
mov
jae
popw
add
dec
icebp
jae
mov
idiv
clc
in
inc
clc
out
int
and
add
add
jmp
mov
mov
push
adc
testl
push
adc
out
jno
dec
adc
aas
out
cmp
jmp
ret
or
mov
pop
xor
lcall
into
das
je
arpl
add
out
dec
push
arpl
add
out
repz
loopne
sti
mov
div
outsb
push
add
jo
bound
add
insb
add
ja
inc
in
xchg
add
add
lock
add
call
lahf
or
dec
mov
add
add
adc
cmp
push
sub
mov
dec
xor
cmp
lock
mov
ret
mov
test
ffree
imul
pop
rcll
cld
jno
fiadds
add
add
push
mov
roll
xchg
jo
xor
cmp
outsl
loope
outsl
add
add
sub
mov
mov
mov
sub
lock
mov
jo
sbb
aaa
ret
aam
sbb
inc
mov
bound
inc
inc
in
xor
add
in
inc
xor
add
add
add
jb
mov
test
and
mov
sahf
mov
insb
sahf
push
dec
mov
jno
xor
push
xchg
pop
test
or
mov
je
data16
mov
dec
push
xor
dec
std
push
xor
inc
clc
xchg
add
pop
leave
int3
addr16
push
xchg
jecxz
mov
add
out
lds
ffree
sub
incb
rclb
shl
push
pushl
mov
mov
imul
test
or
cmp
jbe
out
add
mov
or
lock
out
push
in
push
jbe
in
dec
or
inc
std
test
or
cs
jns
dec
pop
jns
mov
pop
xchg
out
sub
xchg
sbb
aad
sub
in
lcall
pop
jns
fildll
xor
add
daa
add
pop
jns
xchg
lods
sar
jb
sar
cli
rclb
inc
out
jnp
mov
inc
or
jmp
inc
ljmp
inc
inc
fbld
add
ret
and
fdivrs
push
inc
out
inc
pop
js
cld
je
add
roll
add
add
add
shll
clc
insb
shl
lea
push
adc
in
stos
imul
jp
pop
fiadds
jmp
add
lret
call
je
and
add
js
jmp
aas
adc
add
xor
add
js
subb
ljmp
int3
and
loopne
sub
fst
in
outsl
adc
add
add
add
add
loopne
out
sbb
outsl
sar
addr16
jmp
jns
data16
or
mov
inc
call
addr16
imul
data16
call
xor
add
gs
push
ds
rcrl
jmp
sti
and
push
cs
add
cld
nop
cmovo
pop
mov
add
and
adcl
add
xchg
fisttpl
rolb
in
add
push
adc
jmp
cltd
pop
loop
mov
adc
jle
decl
push
lret
incl
dec
add
lea
push
cld
jmp
lds
add
add
adc
jb
mov
testl
add
push
jp
stc
inc
fdivr
mov
dec
std
adc
push
inc
push
test
je
push
jmp
call
jbe
add
adc
inc
decb
xchg
dec
push
out
add
imul
mov
adc
pop
adc
inc
adc
lock
popa
test
pop
add
cmp
out
out
adc
int
ficompl
sbb
mov
loop
jne
out
prefetchnta
imul
jb
adc
dec
ret
xor
loopne
xchg
std
loopne
xor
enter
push
pop
stc
rcll
jnp
out
adc
jo
loope
cli
imul
out
test
xchg
dec
add
add
add
add
mov
jmp
stc
fs
xchg
adc
xlat
cli
fstl
adc
stc
nop
push
cmpsl
add
nop
and
mov
hlt
loopne
shll
stc
sub
cmpsl
add
int3
jno
cld
mov
lock
shll
sub
bound
stos
pop
shl
add
imul
bound
add
add
add
rcrl
jecxz
add
mov
ret
jmp
pop
andb
xchg
push
sarl
stos
call
xchg
push
push
in
test
lods
pop
test
in
shlb
mov
push
bound
mov
jg
in
push
cmp
add
in
add
and
faddl
add
add
idivb
jmp
dec
adc
jle
push
jmp
stc
mov
repnz
jo
mov
aaa
pop
sahf
jno
push
mov
mov
add
mov
out
push
add
push
repnz
pop
std
adc
ret
jb
lds
cmp
lock
mov
add
jb,pt
push
fwait
lcall
push
ljmp
into
push
adc
stos
push
mov
adc
add
add
stc
lock
andl
adc
gs
xor
inc
nop
sbb
enter
push
insb
ss
cli
cmp
jnp
jl
out
jle
rcrl
test
out
add
dec
outsb
andl
out
pop
sub
lcall
cli
adc
gs
aad
pop
clc
xchg
push
mov
sbb
out
incl
inc
push
or
mov
frndint
pop
mov
call
pop
mov
inc
mov
scas
inc
add
xor
pop
in
enter
arpl
sub
leave
sarb
ljmp
sub
adc
ret
dec
mov
fsub
repz
das
or
adc
pop
fcompl
mov
mov
gs
mov
mov
sub
or
daa
fcmovb
lds
out
add
shll
lahf
dec
fdiv
neg
lahf
adc
scas
dec
ret
imul
pop
pushl
pop
mov
movsb
pop
push
insb
xor
inc
jecxz
and
fstps
sti
sbb
ret
ljmp
fdivl
sti
sub
adc
jns
pop
jb
xchg
aad
nop
inc
push
xor
imul
mov
insb
push
mov
push
add
pop
mov
fiaddl
mov
mov
mov
pop
sbbb
or
test
mov
xor
fnstenv
cld
into
insl
sbb
jne
loop
test
cmp
cmp
or
mov
jecxz
rolb
add
dec
xor
pushl
pop
mov
xchg
push
cmp
aam
out
add
jmp
dec
ljmp
add
daa
jbe
enter
push
insb
divb
xor
aas
popa
adc
cmp
pushl
cs
aas
out
cmp
outsl
mov
push
xorb
add
sahf
negl
pop
adc
push
insb
das
pusha
cmp
insl
leave
ret
leave
out
movl
test
push
sbb
xchg
aad
or
add
nop
mov
pop
mov
jae
inc
cmp
out
xlat
mov
or
mov
mov
fdivrs
pop
mov
add
mov
call
outsl
in
mov
fisttpl
inc
or
and
mov
pop
and
shll
or
pop
pop
xchg
lea
pushf
sti
ret
push
outsb
add
mov
pop
iret
cmp
jae
xor
adc
cwtl
mov
sub
mov
xor
mov
xor
xor
mov
add
add
add
push
cwtl
aas
rorb
in
pusha
popf
call
test
mov
sarb
adc
in
ljmp
push
dec
fs
dec
out
mov
lcall
aad
and
inc
jns
adc
jecxz
testl
sbb
hlt
mov
insb
adc
sub
jecxz
inc
xchg
je
adc
pop
je
ss
andl
adc
add
add
xor
mov
xchg
xchg
mov
adc
xchg
mov
sub
push
xor
mov
cmp
je
subl
jne
mov
ret
outsl
add
int3
or
call
push
or
call
xor
mov
cmp
add
add
add
imul
push
je
clc
out
enter
aam
out
and
jg
add
outsb
and
sub
jne
push
lea
imul
incl
add
aad
test
popa
xchg
push
adcl
pcmpgtw
enter
jg
out
xchg
out
cmpl
add
cmp
insb
add
cli
pop
adc
js
push
out
mov
add
xor
mov
dec
dec
add
out
cmpsb
fcoms
pusha
dec
in
xlat
add
pop
adc
mov
out
jb
sbb
test
bound
ud0
add
mov
or
xchg
push
test
mov
add
aam
cmpsb
daa
insb
rcll
sub
enter
das
mov
adc
push
adc
enter
fsubrp
mov
and
scas
sbb
pop
cli
ret
jo
sbb
sbb
mov
push
adc
push
pop
add
cmpsb
sbb
push
adcl
scas
dec
jecxz
push
arpl
in
push
in
push
adc
adc
add
add
mov
fistpll
jae
pusha
enter
push
adc
aad
add
adc
incb
call
and
cld
mov
aas
jmp
xchg
sub
out
mov
xchg
jl
jecxz
call
icebp
add
gs
or
adc
call
push
jmp
xor
add
push
push
cld
mov
add
mov
jne
ljmp
sub
pop
and
push
mov
test
mov
and
adc
xchg
and
inc
sub
les
inc
xchg
cli
jbe
mov
cs
scas
je
pop
cs
add
test
cmp
pop
je
out
lock
add
add
sub
and
loopne
pop
add
sar
and
mov
lock
ljmp
mov
rol
das
mov
in
push
mov
rolb
or
adc
jmp
shl
lock
pop
adc
push
mov
repnz
aas
out
inc
pop
sub
inc
add
jmp
repz
sbb
add
out
lock
stos
add
aaa
in
out
mov
cld
dec
ret
call
pop
scas
mov
shr
mov
or
inc
in
mov
mov
and
cmp
dec
xchg
lock
in
sub
aas
hlt
andb
mov
sub
out
hlt
push
cs
mov
push
das
iret
in
jle
cs
xor
jmp
test
dec
or
mov
or
pushl
cld
pop
fneni(8087
jl
decl
add
das
cmpsl
push
add
dec
pop
mov
xchg
xchg
ror
daa
pop
pusha
push
je
mov
push
mov
mov
mov
jb
addb
push
mov
add
jmp
loopne
inc
mov
jl
int
xor
daa
sbb
or
aas
jmp
in
or
add
test
jmp
in
shlb
inc
pusha
lds
add
adc
mov
pop
add
sub
je
xchg
dec
call
add
jle
and
sar
jne
add
add
jle
sub
jmp
mov
and
int
std
std
add
xor
std
je
xchg
out
std
add
cmp
xchg
out
push
push
add
repnz
push
push
xor
lret
in
add
or
testb
sahf
out
add
out
push
js
add
sub
incb
add
add
adc
xor
pusha
pop
movsb
push
mov
bound
pusha
dec
push
xor
es
add
in
lods
mov
mov
or
ret
stc
pop
push
adcb
lret
jb
sahf
out
call
ljmp
sub
mov
pop
call
jmp
xchg
iret
clc
xor
icebp
div
lcall
and
inc
adc
test
mov
insl
into
lock
jl
jl
add
adc
in
and
and
dec
int
fs
cmc
jg
add
add
int3
imul
imul
pop
in
subb
adc
out
and
adc
mov
dec
jmp
mov
test
fs
in
fstpl
mov
lcall
imul
mov
arpl
out
test
cmp
jl
inc
ret
cld
push
dec
je
mov
mov
xchg
movsl
rol
sbb
jmp
sub
add
data16
jmp
test
subb
jb
data16
lcall
popf
ja
aas
jmp
in
inc
jbe
sar
ljmp
xor
cmp
add
jle
cmc
call
and
add
add
testb
add
mov
sbb
or
cmc
jmp
fs
mov
mov
out
sub
add
add
add
mov
jmp
pop
out
mov
inc
cmp
subl
std
lea
orb
and
jb
adc
mov
aas
jb
jge
adc
repz
lea
mov
mov
jecxz
out
push
add
imul
push
pop
loopne
inc
push
mov
and
mov
push
push
test
push
mov
mov
push
je
call
int
js
mov
pop
cmc
add
pop
js
std
pusha
jge,pt
dec
mov
fadds
mov
jmp
inc
cmp
dec
inc
sbb
inc
sub
pop
jl
pop
push
decb
lock
iretw
movl
dec
repz
aam
call
leave
int3
js
push
subb
out
fwait
pop
dec
adc
add
fldlg2
stos
enter
out
sub
jmp
add
add
fsub
js
test
add
xchg
dec
in
adc
int
jmp
push
rcll
enter
orb
outsl
mov
and
jbe
xor
imul
sbbb
jno
add
out
arpl
pushl
dec
dec
bound
push
sub
add
int
add
cmp
shr
out
xchg
pop
pop
mov
in
out
ret
shlb
xlat
add
cmp
je
push
frstor
sbb
imul
jns
pop
in
nop
clc
push
bound
dec
mov
pop
daa
jb
add
add
dec
push
inc
int3
dec
jmp
incl
cmp
call
jbe
and
mov
add
mov
out
push
add
fstps
lock
call
jle
iret
push
add
adc
decl
push
sete
xchg
pop
leave
mov
scas
fcmovb
mov
push
lea
push
pushl
adc
jle
ret
jb
cld
mov
add
sarl
sbb
lock
push
mov
enter
movl
sbb
pop
add
testb
xchg
mov
add
cmc
jae
or
jno
jle
jecxz
lret
add
daa
in
mov
filds
clc
fldl
cmp
xor
add
xchg
clc
aas
out
inc
or
xlat
je
fiadds
fmull
pusha
lcall
adc
add
mov
gs
fsubr
add
pop
xlat
inc
mov
pop
add
call
jle
add
scas
in
and
add
repz
jle
fdivr
test
subl
add
add
test
bound
sub
int
cmp
enter
and
xchg
pop
insb
call
push
cmp
orl
jnp
dec
jb
out
cmp
fucompp
jnp
dec
sqrtps
jns
fucomp
sbb
pop
push
sti
outsl
enter
sub
ret
cmp
in
mov
call
addr16
xlat
scas
pop
push
psubsw
add
mov
mov
ljmp
enter
clc
sarl
jg
sti
xor
mov
decl
ja
jle
fcomps
inc
inc
push
cmpsl
dec
je
cltd
xchg
ret
adc
jb
ljmp
aad
pop
adc
ficomps
add
stos
add
jecxz
subb
ds
push
hlt
rcrl
mov
sar
inc
lds
fsubrl
js
jne
mov
imul
add
pop
insl
orb
sub
add
shl
mov
test
jo
into
stos
adc
mov
je
mov
ljmp
jg
add
mov
mov
add
mov
rcrl
roll
mov
or
lds
dec
stos
push
pushf
jle
test
mov
push
add
leave
repz
out
push
jge
dec
in
dec
adc
sub
decl
mov
sub
in
out
vaddsd
int
out
pop
add
adc
dec
cli
shlb
add
pop
aad
pop
mov
pop
add
pop
push
lock
pop
mov
lret
mov
fs
dec
andl
ja
jg
cmp
sbb
push
xor
inc
outsl
add
leave
pop
pop
jmp
push
daa
movsl
cs
out
mov
insl
pop
pop
mov
jbe
dec
xchg
frstor
inc
adc
outsl
mov
sub
enter
jnp
adc
out
jmp
mov
into
hlt
js
dec
push
sub
inc
call
xchg
iret
mov
fisubs
loopne
xor
imul
arpl
fwait
add
inc
xchg
cwtl
xor
jbe
dec
add
jae
sub
sub
incl
jmp
adc
mov
and
add
add
pop
jmp
push
push
shrl
add
mov
repz
jmp
add
push
inc
adc
stc
add
movsb
iret
add
inc
push
add
inc
ljmp
dec
shl
fmuls
les
inc
mov
inc
std
pushf
pushf
mov
inc
adc
xchg
add
fs
sbb
pusha
popa
add
inc
lret
dec
lea
dec
push
cmp
add
pop
jmp
mov
mov
push
inc
or
add
inc
jp
rorb
jb
in
sarl
jae
jge
std
incl
cmp
jns
push
pushl
int3
adc
inc
incb
ret
mov
call
cs
inc
mov
enter
mov
add
dec
pop
fistl
jnp
push
pop
pusha
add
ja
jne
and
add
sub
dec
outsb
outsl
inc
shrb
aas
out
inc
je
xor
pop
pusha
fucomip
sarb
fisubrl
inc
je
push
in
inc
xlat
in
add
out
int
sub
xcrypt-ofb
cmpsl
sub
ret
inc
adc
jl
fs
mov
inc
push
xchg
mov
cmp
in
add
mov
jle
je
mov
sti
xor
int
enter
push
int
insb
push
std
mov
repz
ds
fldl
jg
jge
out
mov
pop
push
cld
mov
inc
jnp
adc
stc
in
arpl
pop
xbegin
cld
insl
mov
cld
xor
call
add
stc
movsl
icebp
lock
add
nop
cmpsb
lods
dec
stos
clc
add
mov
mov
mov
jmp
stc
insl
icebp
sbb
test
sub
pop
repnz
inc
dec
icebp
fcoms
test
inc
in
add
xchg
call
or
call
lds
jle
dec
inc
xor
push
roll
add
add
loope
jmp
cs
test
add
push
adc
data16
jmp
rolb
jb
or
andb
aas
in
mov
jne
popa
add
adcb
mov
aad
imulb
or
add
aas
cmc
sbb
enter
sti
cld
jmp
orb
ja
inc
xchg
aas
jb
orl
aaa
ud1
jmp
ss
xchg
fisubrl
nopl
add
add
ljmp
into
jmp
cmp
add
inc
or
call
xchg
push
inc
cli
rcll
fnstsw
add
fidivrs
add
add
add
add
hlt
pop
aas
out
pop
aas
out
pop
aas
out
pop
aas
out
pop
aas
out
pop
aas
out
pop
aas
out
pop
aas
out
pop
aas
out
pop
aas
out
pop
aas
out
pop
aas
out
ja
fs
mov
mov
adc
mov
mov
adc
add
arpl
add
out
xorl
mov
cli
push
mov
add
sub
add
cmp
pop
jno
push
imul
add
add
jbe
pop
mov
mov
sub
arpl
out
out
cltd
mov
push
shrl
call
mov
jg
add
add
cmp
call
inc
icebp
xchg
rolb
jmp
stos
inc
mov
add
xchg
cmp
pop
aam
call
inc
xchg
jecxz
rorl
cmp
jae
ret
or
and
cmp
outsl
aam
call
jmp
fimuls
in
pop
mov
push
imul
and
dec
inc
outsb
sub
movsb
add
fmul
or
jmp
sub
pop
in
xchg
mov
add
add
fisubs
in
aas
lcall
je
xor
pop
add
adc
aam
ljmp
mov
add
jae
jo
lret
add
jo
sub
cmp
lret
je
and
jnp
call
mov
inc
into
jae
cmp
mov
out
and
std
mov
jae
sub
rol
jae
fstps
fcoml
dec
pop
pushl
lds
int3
mov
push
fstps
int3
adc
cmp
jb
push
pop
jae
pushl
ret
adc
cmp
je
les
sbb
std
jne
lds
mov
add
pop
pop
cmc
into
rolb
mov
jge
push
push
hlt
push
push
jmp
aaa
lret
sub
mov
xchg
sbb
add
cmp
add
pop
pop
ds
dec
sub
mov
insl
add
ficompl
jae
lahf
repz
fadd
divl
mov
out
aaa
sbb
shlb
inc
out
inc
jae
cmp
sarb
cli
les
inc
out
inc
je
push
mov
cmp
stos
adc
jns
repnz
and
jmp
add
pop
add
or
lock
inc
xor
shlb
xchg
shll
or
sub
xchg
inc
and
out
cmp
pop
arpl
mov
mov
push
scas
add
inc
adc
adc
jmp
mov
xchg
aas
adc
negb
inc
je
pop
inc
rorl
sub
xchg
inc
cmp
inc
cltd
fstps
mov
jmp
cmp
pop
jns
in
gs
xchg
icebp
lods
add
lret
mov
imull
setno
call
pop
decb
push
cmp
outsl
cmp
cltd
and
jecxz
mov
dec
add
cli
and
shr
add
add
into
mov
outsb
je,pn
jbe
ljmp
cmp
sub
jmp
popa
add
jno
cmp
cli
adc
push
in
stc
add
fwait
inc
jle
std
add
pop
mov
aam
mov
push
adc
inc
popa
pop
mov
popf
ret
rcll
imul
jle
push
xchg
add
adc
inc
sti
cmp
or
into
rcll
mov
popa
ret
out
ljmp
stos
or
je
push
out
or
add
dec
mov
add
ja
incl
out
cmp
fildll
mov
and
adc
cmc
add
testl
add
out
aad
jge
aad
cli
aam
inc
out
inc
jae
sbb
out
mov
cmc
in
sub
adc
sbb
sub
add
mov
hlt
clc
std
sbb
lock
cli
sub
adc
cmp
lcall
mov
lods
fidivs
pop
adc
jecxz
pop
out
je
cmp
ss
xchg
int
xchg
into
int
fmull
cmp
sti
neg
ret
or
sbb
jp
fbstp
lcall
stos
out
xor
aas
xor
pop
mov
lock
mov
jae
sub
std
add
mov
loopne
out
mov
pop
xor
add
scas
pushl
or
cld
fdivrp
out
push
xor
inc
jb
add
aas
rep
sbb
or
cmc
mov
xchg
rolb
jmp
and
pop
imul
sub
call
inc
fadds
dec
in
cmpl
add
add
sub
loopne
bound
cld
mov
mov
je
xor
inc
addb
stc
add
jo
out
mov
lds
and
add
jb
add
adc
add
add
inc
loop
add
add
jne
push
fs
push
popl
incb
mov
and
push
lock
mov
dec
std
je
sti
out
rorb
add
int
std
adc
adc
test
add
lea
push
out
incb
add
push
mov
mov
sbbl
or
xchg
incl
inc
pop
pushf
pop
ljmp
adc
jnp
into
mov
sahf
pop
mull
xor
add
add
push
rorb
mov
and
mov
and
adc
or
sbb
outsl
lock
sub
adc
aas
pop
add
decl
adc
sbb
add
push
mov
out
fimuls
xlat
les
mov
cwtl
jmp
repnz
mov
pop
pop
mov
sbb
add
aas
xchg
bound
out
nop
or
add
sub
bound
inc
add
call
scas
xor
fstpl
sub
jge
inc
loop
add
shrb
fadds
out
outsb
mov
dec
out
adc
call
add
inc
mov
xchg
test
pop
out
loop
aad
out
dec
or
jae
add
mov
and
scas
imul
jg
sub
outsb
in
orl
add
sub
imul
and
push
adc
add
jl
in
in
jmp
in
xor
jmp
in
mov
sbb
pop
loope
in
out
call
add
add
add
sbb
jmp
inc
add
jns
jb
pop
push
mov
filds
pop
int3
add
mov
add
jge
lea
mov
rcll
orl
inc
jnp
add
fistps
int3
movl
or
in
push
es
pop
ret
push
mov
add
add
add
push
stc
hlt
inc
stos
sti
add
out
inc
add
mov
rolb
push
mov
std
jne
test
je
adc
add
xchg
cmpsl
inc
jae
les
out
mov
bound
scas
and
dec
scas
ljmp
mov
cmp
out
jne
add
scas
or
sbb
mov
ja
daa
sbb
add
add
divb
ret
push
sub
mov
mov
xor
pop
and
mov
or
decb
jmp
and
inc
iret
add
fstpt
adc
scas
in
movsl
pop
mov
and
push
jb
inc
aam
mov
out
arpl
push
leave
mov
mov
cmp
adc
loopne
push
mov
pop
push
inc
sub
out
test
es
call
add
inc
pop
sub
jge
add
popa
daa
xchg
sarb
jg
mov
lock
cld
ss
mov
xor
add
jmp
jge
push
push
fidivrl
call
in
cltd
add
add
dec
sub
addr16
or
or
mov
add
inc
fucomip
xchg
and
mov
inc
jle
push
adc
xchg
jge
jp
cli
into
pop
mov
clc
pushl
test
add
jle
fnstenv
cs
stc
ret
ljmp
sbb
add
mov
rcll
push
xor
push
adcb
add
inc
cli
push
sti
jg
dec
data16
incb
cmp
call
xlat
lds
add
ljmp
pop
push
mov
push
cmc
ficoms
push
push
mov
push
call
mov
out
in
add
fadds
jb
lods
inc
adc
add
add
cmp
jmp
test
mov
das
mov
jne
mov
out
add
sub
ret
xor
leave
pop
pop
pusha
dec
cli
aam
inc
out
jns
pop
jne
push
fs
je
sub
movl
sub
add
add
jge
lret
sbb
sbb
data16
add
outsb
pop
mov
sbb
daa
incb
mov
popf
adc
fs
pop
push
jge
jnp
sets
clc
movsl
xor
inc
xchg
insl
shl
adc
sbb
dec
call
divb
jmp
inc
xor
pop
add
scas
add
sub
popa
call
out
sub
loopne
xorl
add
and
popa
add
jae
add
add
jbe
add
jge
lret
pop
inc
lock
mov
add
xchg
jl
shlb
inc
nop
add
out
imul
adc
call
add
call
sub
inc
jmp
lds
sahf
in
sahf
jno
add
cmc
popa
imul
aas
roll
test
add
sub
aaa
push
outsb
sbb
jmp
pusha
cmp
in
pop
aaa
mov
lods
mov
jns
jmp
add
cwtl
leave
ja
add
sub
mov
insl
mov
sub
mov
sti
xor
add
es
mov
repnz
sbb
add
add
test
add
adcl
cmp
in
push
pushl
lods
test
pop
mov
mov
ss
mov
out
adc
decl
jl
pop
pop
push
out
add
dec
mov
iret
jecxz
add
push
mov
icebp
push
inc
les
mov
and
adc
decl
ret
rorl
add
loop
jae
repnz
jae
popf
sbb
jnp
lock
out
movl
pop
sbb
add
hlt
js
add
int
add
mov
cli
mov
sbb
out
add
in
movsb
cmpb
lds
mov
icebp
shrl
sub
push
mov
imulb
xor
and
std
mov
cmp
push
mov
leave
xchg
cltd
inc
add
add
mov
aad
add
sub
insl
in
jno
add
nop
sbb
jp
add
mov
add
ljmp
mov
jge
sbb
add
add
jle
adc
mov
xor
scas
xchg
es
bnd
call
dec
in
mov
mov
dec
jp
add
xchg
hlt
push
jnp
and
mov
outsl
movl
mov
cld
jb
jle
mov
sub
call
fstpt
int
scas
out
rcrl
test
or
addl
add
add
call
mov
mov
es
insl
das
mov
push
in
sbb
and
lods
lock
xchg
dec
xchg
sbb
push
push
jle
call
out
mov
mov
push
int
or
sub
mov
movsl
jmp
pop
lods
add
lods
jnp
mov
jge
push
je
push
xchg
push
es
cmpsl
incl
add
add
repnz
mov
push
movsb
jge
jnp
fscale
call
loopne
inc
push
cmp
shrl
or
xchg
jae
mov
icebp
sbb
sbb
fdivr
mov
cmc
flds
push
mov
dec
jge
add
sbb
movsl
out
sub
repnz
mov
dec
xchg
jnp
xor
in
sub
ljmp
sbb
jo
add
cmp
jl
lock
inc
ljmp
pop
cli
fadds
inc
pop
out
jle
data16
add
sub
mov
and
jge
mov
sub
push
fwait
inc
call
add
fcomp
sub
test
add
add
sub
mov
add
fwait
je
test
mov
xchg
insb
inc
mov
xchg
add
cld
lcall
mov
inc
loope
jle
out
pop
jg
and
sub
sti
call
jg
add
add
pop
call
push
adc
add
test
cmp
push
inc
mov
add
add
insl
sub
hlt
imul
push
sub
lods
mov
stc
test
fs
jmp
mov
sbb
or
bound
call
ret
mov
lea
or
movsb
cld
adc
jecxz
jl
xchg
dec
push
insl
adc
add
iret
push
xchg
call
shll
call
std
incl
jmp
push
jns
jmp
ljmp
in
test
in
push
adc
repz
mov
and
xor
jmp
add
les
orl
dec
lret
xor
push
cld
and
aas
add
dec
mov
xor
out
mov
add
mov
jnp
sbb
xor
incb
pop
shr
ds
incl
incb
hlt
out
testb
prefetcht2
push
dec
pop
xchg
xchg
add
add
sub
int3
push
push
sub
scas
cmp
jae
cmc
inc
jae
cmc
inc
je
cmpsb
rolb
sub
xchg
scas
add
out
sub
dec
stc
sbb
add
inc
fists
add
out
sbb
int3
xchg
mov
jg
sub
add
in
call
leave
jp
out
xchg
add
out
std
sub
adc
cld
xor
add
cmp
lret
in
xor
addr16
mov
jmp
cltd
push
sub
pop
pop
jno
call
pop
pusha
mov
adc
loopne
mov
xor
mov
add
or
pop
int3
jmp
pushf
out
js
mov
adc
enter
dec
xor
pop
add
lods
scas
in
sub
fsubrl
fs
leave
push
ds
add
add
call
sti
enter
out
ljmp
and
sub
lcall
imul
jns
in
push
jmp
jmp
pop
in
aaa
sbb
jmp
xchg
in
loopne
jl
push
inc
in
addr16
add
inc
adc
fcompp
sbb
sub
test
add
add
or
cmp
movsl
stos
pop
xchg
ljmp
hlt
xchg
adc
rcrb
mov
add
add
xor
addr16
or
xor
mov
out
add
add
dec
pushf
leave
push
call
mov
cmp
add
dec
adc
push
push
pushf
out
mov
cmp
xchg
or
adc
xchg
push
je
lock
in
add
push
push
mov
adc
std
out
lret
loopne
clc
pop
out
cwtl
xor
clc
fwait
sub
mov
sbb
and
fistpl
fisttpll
jg
testb
dec
test
sarl
in
mov
add
add
es
dec
sub
inc
loopne
hlt
imulb
mov
add
out
and
in
sub
add
xchg
imull
add
pop
test
out
test
sbb
out
adc
mov
outsb
loope
sbb
ret
mov
add
mov
lea
leave
dec
and
testb
mov
add
outsl
mov
les
out
jecxz
pop
add
cltd
add
xchg
or
jo
call
nop
movsb
filds
mov
rcr
push
lods
call
arpl
popa
adc
fldl
mov
sbb
add
and
cwtl
out
sub
inc
shr
lcall
out
add
add
add
add
push
call
je
adc
mov
incl
xchg
pop
mov
mov
aas
push
sbb
and
fs
and
jmp
sbb
sbb
inc
nop
jmp
in
mov
aaa
out
jb
or
das
aaa
xchg
cld
insb
adc
in
adcb
or
roll
add
add
jae
sub
fdivr
pop
adc
jbe
aad
inc
and
hlt
mov
int
cmp
lret
jbe
insl
cmp
push
push
shrb
push
lea
sub
call
adc
lds
dec
inc
and
jg
sbb
lcall
ljmp
jg
and
add
jp
adc
in
mov
adc
adc
push
mov
pop
jo
mov
arpl
addb
cli
jb
out
sub
sub
xor
sub
mov
insb
jb
inc
jecxz
push
inc
xchg
inc
xchg
enter
cwtl
add
push
jl
repz
out
sub
cmpsl
push
or
out
cwtl
sti
js
sbb
in
push
test
push
xor
mov
mov
movsl
adcl
xchg
enter
push
mov
cltd
movsl
dec
out
cmp
xchg
and
pop
mov
add
or
pop
and
clc
mov
out
mov
pop
insb
inc
pop
or
cmp
hlt
flds
add
add
add
adc
jmp
mov
scas
popa
pop
jo
jmp
mov
xchg
icebp
call
fsubs
cmp
shl
addr16
in
dec
mov
push
mov
add
mov
push
xchg
rorb
lock
incl
sub
call
cmp
fldt
add
test
xor
mov
mov
insl
shrl
jmp
in
lea
pop
push
incb
fistpll
and
xchg
test
sbb
adc
loop
jmp
mov
push
dec
jo
adc
push
mov
add
loop
fs
add
sbb
push
inc
shl
add
add
or
mov
pushl
divl
add
adc
adc
shrl
loop
test
mov
and
add
mov
subl
push
inc
fnstenv
div
cmp
movlps
push
pop
mov
inc
out
pop
push
add
xchg
add
shlb
incl
add
add
push
push
jle
cld
add
mov
clc
and
add
xchg
pop
sbb
insb
sub
nop
imull
add
insb
sub
push
jg
repnz
out
sbb
push
nop
pop
push
das
dec
pop
xlat
sbb
repnz
aas
out
push
pop
inc
xchg
rcl
push
cmp
jmp
lea
andl
and
in
dec
lea
andl
mov
fs
repz
nop
negl
movsb
mov
ret
add
sub
push
inc
add
sbb
xlat
stc
ret
sub
push
mov
mov
loopne
or
int3
sbb
ret
stc
ret
lock
sub
adc
sbb
lock
add
add
lcall
pop
enter
daa
call
sub
xorl
add
push
out
mov
sbbb
ss
sbb
call
mov
sub
ret
pusha
mov
nop
in
test
mov
adc
pop
xor
pop
push
out
dec
add
cmp
mov
add
xchg
jle
aas
faddp
pop
jb
bswap
stos
cmp
cmp
push
je
push
push
sbb
xchg
movsl
push
lea
mov
sbb
mov
cmp
jle
icebp
mov
jge
bound
mov
xor
push
icebp
arpl
and
pop
add
push
test
push
je
push
adc
push
adc
andl
add
dec
push
mov
lret
jb
outsb
jmp
adc
inc
incb
ds
add
jbe
mov
fucom
nop
or
xor
ja
fimuls
lods
pop
mov
push
std
jne
in
xor
mov
xorb
pushf
inc
js
mov
jmp
in
push
push
adc
push
adc
incb
pop
std
incl
add
add
pop
xor
out
add
ror
out
add
cli
xor
aas
out
sbb
mov
lods
add
add
out
lea
and
das
fistps
add
mov
sbb
data16
add
and
ret
mov
inc
movsb
mov
insb
inc
sub
test
mov
jb
and
cwtl
mov
je
popa
or
mov
jmp
add
jl
mov
dec
pop
pop
sbb
xchg
out
daa
rcr
push
cmp
bound
mov
adc
cmpsl
cli
ret
call
scas
adc
faddp
add
in
std
hlt
sbb
add
test
popa
mov
out
xor
sarl
cmp
sbb
xchg
rorb
shr
mov
or
mov
rolb
add
scas
arpl
sbb
sahf
call
jl
add
pop
inc
imul
dec
iret
ljmp
sti
test
pop
add
test
jno
xchg
sub
ret
add
jmp
dec
mov
stos
in
jo
out
xor
pop
mov
fs
xor
or
hlt
cmp
aas
jmp
incb
add
jbe
lahf
push
out
jmp
mov
sub
mov
hlt
adc
aas
add
mov
add
ja
call
add
jae
cmc
dec
test
jg
inc
cmc
push
sarb
add
adc
inc
incb
ret
decl
cmpl
or
adc
jmp
inc
jle
add
test
pop
test
and
push
xor
pop
push
mov
jmp
jp
faddl
jb
cmp
int3
mov
cwtl
sbb
add
sbb
fistl
adc
push
adc
push
sbb
pop
mov
ret
dec
sub
mov
out
pop
aam
add
fisubs
jae
insl
xchg
cwtl
add
sbb
push
lock
sti
shlb
inc
or
add
arpl
or
iret
and
shlb
cmc
aas
out
pop
add
mov
in
inc
inc
jbe
notb
inc
lcall
or
ljmp
call
int3
ret
hlt
sbb
in
mov
fucomp
mov
mov
mov
cltd
testl
lret
fildll
pop
cmp
dec
mov
data16
lock
inc
push
push
aas
stc
dec
bound
arpl
dec
inc
es
clc
sub
dec
enter
test
dec
push
dec
es
add
popa
mov
or
adc
lret
shlb
scas
dec
or
das
nop
xor
test
stc
and
mov
inc
mov
cmpsl
sbb
test
pop
jae
js
mov
xchg
mov
sub
mov
lcall
jae
mov
jl
adc
pop
ficoms
add
dec
sub
xor
stc
cltd
push
dec
sbb
jns
clc
sbb
dec
in
pusha
mov
mov
aam
or
jb
dec
in
pushf
xor
outsb
movsb
mov
xchg
outsl
jne
andb
dec
cli
outsl
sbb
xchg
and
repz
hlt
dec
cmp
xor
dec
inc
fimuls
loope
shlb
and
or
insl
jns
mov
add
push
mov
jg
stos
add
add
popf
or
sub
inc
ret
push
gs
call
clc
or
xor
adc
adc
jmp
push
cmp
fwait
add
sbb
mov
arpl
sbb
add
ljmp
xor
cmp
push
mov
pushf
add
aad
add
mov
jg
sbb
mov
je
add
mov
and
mov
mov
inc
add
mov
mov
pushf
inc
mov
add
subl
inc
out
nopl
out
push
hlt
jle
cltd
cmpsb
popf
sub
xor
add
aam
jge
and
mov
fcompl
stos
pop
mov
mov
popf
in
out
cltd
subb
mov
cltd
call
add
add
out
pusha
repnz
add
fadds
insb
inc
fwait
clc
pop
cltd
adc
and
add
jb
jnp
je
ja
fstl
subl
add
ljmp
add
pushl
jns
std
xchg
lcall
loope
ljmp
incl
jmp
and
cmc
push
pop
mov
jae
clc
movb
in
adc
jmp
jno
pop
adc
sbb
push
mov
add
add
outsl
add
into
jmp
je
cmpb
repz
jne
mov
and
test
clc
sti
jns
data16
aas
inc
rorl
out
idiv
incl
shlb
add
add
push
mov
fsubp
mov
shlb
ds
or
push
lret
jle
std
cltd
clc
dec
call
mov
or
stc
dec
out
pop
add
push
idivb
add
sbb
inc
fcoms
pop
cs
call
or
add
outsb
ja
out
fwait
mov
notb
add
cmp
xchg
add
sbb
out
sbb
push
cmp
cmc
aas
out
xchg
insb
subb
les
icebp
negb
shl
mov
sbb
sbb
mov
cwtl
cmp
ficomps
pop
mov
add
out
jb
sub
add
sub
out
xor
jle
add
add
add
add
add
mov
xor
hlt
fwait
out
jmp
add
add
jns
sub
add
mov
xor
in
in
jmp
add
pop
daa
out
out
movsl
sbb
xchg
out
bound
andb
jne
incb
pop
push
lock
orl
inc
sub
add
jg
xchg
aad
dec
add
out
add
ds
call
cli
loopne
push
fdivl
sub
add
lcall
xchg
add
xchg
xchg
push
mov
push
push
jb
cld
rclb
inc
jmp
ds
inc
inc
push
or
cmpsb
outsl
insb
xor
cmpsl
loope
push
or
jmp
mov
mov
or
jmp
xor
adc
push
inc
add
movzwl
add
fs
dec
in
enter
dec
jne
xorl
pop
push
lea
add
add
or
pushl
cld
pop
incb
xchg
jle
pop
pop
xchg
dec
add
ja
add
into
jns
adc
push
inc
dec
jmp
call
add
xor
int
hlt
cld
mov
fcom
lds
xor
or
sti
mov
jl
clc
js
add
push
scas
add
out
clc
mov
pop
test
or
rclb
or
jne
pop
xchg
test
ljmp
lock
mov
or
add
inc
add
add
add
aad
pop
dec
push
cmp
outsb
sbb
push
clflush
gs
idiv
cmp
bound
ret
loopne
insb
and
mov
sbb
dec
jmp
cmp
jb
pop
shl
out
aam
jecxz
lahf
sbb
xchg
add
inc
loope
sub
add
jmp
add
pop
add
cmp
outsb
daa
or
jl
sbb
loopne
xlat
aam
xchg
vpinsrw
add
bound
mov
rcl
lahf
xchg
lds
dec
jp
add
in
mov
arpl
test
daa
add
push
leave
add
jo
or
data16
add
roll
pusha
push
scas
add
mov
dec
cmp
out
add
push
cmp
in
add
scas
and
push
test
enter
push
aas
jmp
loop
add
popa
rcr
and
jp
out
scas
ret
sub
ja
pop
rorl
jmp
and
and
je
das
std
adc
je
call
add
std
scas
jg
lods
add
call
xchg
daa
mov
adc
mov
mov
ret
std
mov
mov
sbb
dec
cmp
jb
inc
lea
adc
out
aam
pop
dec
inc
lods
add
packuswb
cli
lea
sbb
mov
mov
mov
add
cltd
dec
inc
adc
mov
cmp
je
cltd
lcall
int3
cmc
jae
jl
pop
out
js
nopl
adc
fcmovnb
ljmp
nop
add
ja
je
imul
aas
and
popf
out
mov
hlt
sub
inc
push
fcompl
call
insb
scas
icebp
mov
pusha
test
popl
andb
add
imul
or
xor
test
add
outsb
adc
mov
add
or
sbb
cli
mov
cltd
fsubrs
add
pop
pop
xlat
add
mov
gs
mov
mov
xchg
test
in
pusha
xchg
or
sub
mov
mov
gs
xor
out
in
ljmp
xchg
in
pop
mov
mov
cmp
out
jo
outsb
jle
add
call
jmp
addl
call
sub
mov
orb
xor
xor
lldt
iret
imul
test
call
bound
fnstenv
decl
sbb
inc
push
xchg
mov
pop
cmp
movsb
add
xchg
mov
jo
jmp
or
leave
jne
push
push
lahf
imul
out
les
push
std
pop
stc
jae
in
or
mov
push
fadds
add
add
dec
jecxz
jmp
call
aaa
mov
jno
out
jg
jle
sti
jne
push
je
rcrl
inc
adc
incl
mov
adc
sarb
gs
orl
int
add
mov
addr16
jns
add
mov
andl
int
jg
dec
mov
test
add
add
jno
addl
jbe
add
mov
push
faddl
pop
sub
add
arpl
push
js
pop
add
add
daa
loopne
in
les
pop
and
add
cmp
add
fs
push
inc
iret
loope
xchg
loopne
sarb
add
add
in
shlb
jmp
inc
insl
dec
cld
add
ljmp
call
adc
in
add
fucomip
imul
add
nop
es
fsubl
out
mov
mov
aaa
jb
out
and
out
lcall
add
add
jno
mov
in
cmp
jo
mov
or
dec
testl
jle
add
add
ja
mov
pop
dec
repz
shll
test
ret
cmpsl
les
inc
movsb
call
loop
movsb
call
ljmp
aad
push
in
add
adc
in
std
aam
adc
cltd
fistpl
test
movsb
mulb
add
add
add
inc
add
jecxz
cmp
pop
inc
add
fistpll
push
ss
inc
jmp
aad
add
imul
in
jae
cmp
std
inc
and
mov
mov
add
fidivrs
add
out
imul
in
push
push
into
sti
adc
xchg
pop
add
mov
cli
andl
mov
pop
mov
mov
ret
add
movb
mov
add
inc
loop
std
jae
push
call
mov
ret
pop
xchg
jmp
js
jle
ret
push
and
add
inc
push
push
push
xor
push
cltd
sbb
adc
cmpb
jl
call
add
adc
or
add
or
movb
add
add
jmp
std
cli
add
inc
out
dec
cld
aaa
pusha
mov
dec
jmp
sti
std
out
cld
jae
test
mov
mov
cmp
sub
andl
mov
js
push
pop
mov
subl
jbe
std
jmp
daa
call
or
or
mov
inc
or
test
adc
std
adc
or
andb
out
mov
mov
ret
popf
mov
mov
out
dec
add
add
shrl
hlt
push
add
stos
or
fmull
pop
das
js
xor
push
call
adc
insl
ds
jg
call
push
bound
lret
adc
cmpsl
add
mov
shrl
add
add
jne
or
les
cld
hlt
sub
inc
out
movsl
or
mov
jp
cld
cld
lock
imul
adc
ret
in
notb
cltd
cli
inc
add
or
mov
out
clc
fidivs
push
push
adc
adc
adc
add
add
or
add
jo
or
or
insb
adc
and
addl
push
dec
mov
hlt
testl
add
push
in
and
dec
add
add
mov
cmp
inc
push
cmp
daa
pushl
data16
add
jl
mov
addb
sub
add
mov
jne
testb
and
inc
int3
or
testb
je
or
mov
adc
inc
add
dec
dec
pop
mov
gs
jne
loop
push
aad
jge
out
add
ret
inc
cld
push
mov
in
push
push
out
cli
std
out
cli
jae
and
fildl
add
sarb
push
cmpsl
faddl
sbbl
cli
std
clc
add
out
add
cmpsl
xor
add
loope
rcrb
or
fidivs
shlb
pop
movsb
and
je
pop
in
adc
fidivs
shlb
or
repz
int
sar
pop
ror
pop
shr
add
lahf
clc
add
add
pushf
ret
push
add
add
add
les
aas
lret
sbb
inc
push
jge
outsl
fistpll
add
mov
shl
movsb
notl
jp
clc
hlt
repz
clc
pop
sbb
jmp
xchg
mov
push
jb
mov
push
inc
add
ja
mov
push
add
daa
add
enter
lock
stc
hlt
sti
movsl
jno
add
add
lock
dec
roll
lock
or
jmp
push
js
decl
add
aas
je
outsb
jmp
neg
add
inc
ret
push
mov
mov
mov
pop
int3
call
gs
ss
mov
out
std
insl
movsb
ja
ficoms
je
xchg
hlt
dec
jmp
icebp
call
xor
push
add
add
cmp
dec
push
sub
test
xor
icebp
inc
add
in
xchg
sub
sbb
push
out
std
add
sti
adc
mov
xor
or
out
nop
inc
rclb
inc
add
jne
jnp
shrb
inc
or
adc
and
into
jae
jmp
test
pop
aad
or
adc
mov
pop
pop
test
ret
inc
xchg
jge
cmpb
push
rdpmc
ret
mov
and
cmp
out
idiv
incl
ret
je
cmpsb
and
decl
shlb
add
ljmp
mov
pop
stc
adc
cmpsb
jne
loopne
or
std
mov
testl
addr16
divb
divb
xor
add
out
or
cli
test
inc
out
stc
call
xor
or
xor
fmull
mov
faddl
push
xor
pop
lods
test
or
xor
add
or
jmp
sub
js
pop
push
out
add
xchg
mov
int
je
pop
cmc
and
add
sbb
lods
pop
sub
jmp
mov
dec
adcl
out
out
shll
popf
hlt
ljmp
jp
add
fistpll
pop
enterw
out
div
inc
jnp
jo
in
out
xlat
and
add
pop
add
fcmovnb
xchg
add
add
data16
jmp
test
cld
gs
jne
sahf
pop
jnp
loope
pop
mov
std
xchg
jle
mov
cld
or
adc
mov
or
lods
sbb
jnp
aam
add
jp
lds
out
inc
xor
in
aaa
movsb
shlb
lods
call
enter
movsl
fistpl
in
mov
xchg
jp
icebp
popf
lret
sbb
test
out
cld
jno
icebp
adc
inc
add
lret
add
pop
push
lcall
adc
dec
push
jbe
imul
push
dec
xchg
pop
cli
inc
insb
lock
xor
notb
jmp
pop
call
mov
je
test
pop
push
dec
sti
adc
cltd
notb
xor
notb
dec
cwtl
inc
add
mov
push
sti
adc
out
les
and
add
sub
xor
or
or
std
cli
call
stc
mov
rcll
cwtl
jne
mov
lretw
jmp
xchg
gs
push
xchg
jne
std
mov
mov
cltd
fiaddl
fdivrs
repnz
in
sub
out
inc
push
jb
aad
insb
xchg
stc
imul
fmull
inc
xchg
mov
fnsave
add
inc
mov
push
fs
or
and
hlt
and
add
add
add
rcrl
cmpsl
add
ret
dec
fstl
icebp
aam
xchg
loopne
jle
push
outsb
les
cs
out
repnz
or
mov
lock
sti
rolb
add
lock
xor
out
aam
out
movsl
clc
out
out
fwait
daa
jecxz
xchg
daa
fucomi
js
ret
sbb
add
sub
sub
cmp
jb
jnp
bound
stos
add
in
cmp
out
lds
sbb
scas
adc
subb
jmp
fsubrs
inc
jmp
in
sub
sti
mov
push
mov
add
jmp
push
inc
aam
js
aaa
movsb
sub
insb
mull
jns
inc
pop
ret
or
adc
jmp
push
icebp
pop
push
add
call
push
mov
add
je
idiv
je
idiv
jno
fsts
in
inc
add
aaa
test
decl
add
mov
in
sub
insl
lock
fsts
dec
push
inc
add
xor
rolb
add
push
adc
mov
add
jp
jne
out
inc
aam
jo
cmp
jno
mov
fnstenv
push
cmpsb
sti
jne
push
adc
pop
les
add
in
std
jbe
mov
rorb
ret
daa
jns
fs
add
mov
or
adc
fucomp
jbe
popa
leave
std
icebp
loopne
aad
popf
jne
fs
out
fldl
add
scas
out
inc
hlt
bound
in
daa
mov
outsb
cwtl
stc
cld
xchg
in
addb
add
sar
cld
fcmovb
cmovo
jno
orl
std
jb
jp
iret
add
ret
pop
std
popa
dec
fldt
ja
fcmove
subb
call
out
xchg
out
mov
addr16
adc
movsl
inc
xorl
add
out
adc
insl
fucomip
icebp
ljmp
add
sahf
or
out
lock
adc
adc
es
mov
jns
adcb
ret
mov
pop
cmp
push
mov
sar
inc
cmp
out
dec
out
mov
in
add
mov
add
cs
mov
in
std
faddl
add
add
inc
jmp
and
mov
xor
jns
aad
inc
push
inc
jmp
inc
cld
mov
jecxz
fcom
and
stos
loopne
push
xor
lret
push
sub
push
push
mov
mov
pop
cmp
hlt
inc
jmp
aad
std
dec
push
rolb
mov
inc
add
into
dec
sti
adc
inc
cmp
cmc
jmp
imul
cwtl
inc
add
imul
jns
push
inc
add
enter
fdivrs
mov
add
insb
mov
xor
sti
fcom
push
adc
mov
push
in
sbb
fcmovnu
pop
sbb
add
add
lcall
sbb
adc
fisubrl
sbb
loopne
test
and
test
cmpsb
adc
ljmp
ds
jmp
scas
add
sbb
psubb
lods
add
in
jno
mov
adc
inc
out
inc
clc
fs
jae
std
ret
jmp
fldcw
push
adc
jbe
arpl
push
mov
inc
verr
and
push
outsb
xor
xchg
test
jae
pop
adc
add
stc
add
add
pop
adc
jnp
aas
lret
out
movsb
or
jae
lcall
pop
and
push
or
push
xor
pushf
jmp
mov
push
jo
jmp
pop
out
pusha
dec
out
loop
jmp
add
add
add
aas
filds
dec
test
jecxz
adc
roll
adc
cmpsl
fdivrl
fisubrl
add
mov
filds
out
and
out
cld
out
pop
pop
jg
sti
imul
in
jnp
addr16
je
cwtl
inc
hlt
mov
fidivs
jmp
mov
aaa
and
subb
add
mov
push
push
test
popf
mov
add
mov
hlt
cmc
aas
jmp
sub
sarl
dec
imul
add
adc
add
mov
jmp
cmp
inc
add
sar
aaa
push
insl
and
cmp
add
pop
cmp
incl
movb
xor
adc
dec
pop
inc
cld
ds
jno
test
or
ret
inc
cld
out
add
add
aaa
repz
xor
adc
inc
add
push
insl
inc
add
jno
call
push
shr
xchg
std
enter
push
adc
int3
push
push
or
mov
cmpsl
icebp
inc
dec
dec
sti
adc
inc
or
std
pop
jno
out
shl
cmp
mov
add
in
add
out
rep
ljmp
cmpsl
ljmp
bound
stc
mov
xor
cld
pop
fnstcw
dec
andl
push
std
cmp
jl
stos
jp
adc
mov
les
push
std
adc
out
adc
inc
add
xor
std
inc
pop
cs
stc
pushl
add
pop
out
out
dec
cld
or
hlt
fs
cld
idivb
cmc
es
ret
or
push
pop
inc
out
xor
ss
inc
out
add
push
outsb
inc
fistpll
jb
repz
movsb
add
add
stc
imul
add
add
outsl
testl
aaa
in
out
aas
jp
into
pxor
es
add
add
push
add
jmp
dec
mov
rol
cli
addr16
fnsave
mov
jo
jmp
hlt
or
jmp
pop
nop
pop
clc
insb
shrb
xlat
lock
inc
fadds
fs
jae
aaa
adc
add
in
inc
pop
cmp
or
jmp
pushf
testb
mov
mov
jo
out
subl
push
xchg
stos
icebp
les
pop
std
mov
mov
sti
jne
dec
sti
push
cmp
bswap
mov
add
xlat
bswap
jge
add
pop
inc
in
mov
jle
fldl
jne
pop
push
lock
mov
sti
test
add
mov
cmp
or
pop
into
jle
xchg
pop
sarb
sarb
adc
add
sbb
inc
jb
je
cmc
dec
les
scas
in
adc
push
popf
push
add
add
add
in
adc
inc
lret
push
clc
out
or
lahf
test
jb
mov
jae
insl
divl
stos
add
in
add
call
dec
leave
inc
repz
sub
out
sub
test
int3
or
xchg
test
lcall
xchg
fldz
pop
outsb
mov
inc
std
out
pop
lock
inc
imul
add
inc
push
push
loopne
hlt
iret
xabort
repnz
inc
mov
and
aad
or
pop
daa
add
sub
sub
add
or
add
mov
jecxz
mov
push
test
or
add
ss
loop
or
out
out
fidivl
add
or
out
out
sbb
fs
out
syscall
xor
push
cli
push
je
adc
add
pop
out
xchg
call
mov
bound
fdivr
shrl
sbb
cmp
loope
dec
mov
lret
lret
add
in
xchg
add
push
xor
call
js
in
xchg
or
cs
mov
shl
test
add
pushf
mov
push
xchg
in
into
push
mov
cmp
add
pop
add
jle
xlat
je
insl
addb
add
add
shrb
mov
add
ss
out
lcall
adc
xlat
int
or
sub
jno
lret
dec
push
push
pop
pushf
jg
sbb
push
push
icebp
xchg
call
aad
stc
xchg
add
mov
test
push
inc
mov
push
inc
mov
arpl
mov
add
inc
adc
pop
inc
dec
pop
mov
mov
cmpsl
je
pop
in
loopne
imull
push
sbb
mov
lret
xor
addl
add
add
push
idivb
out
enter
ds
and
int3
push
gs
pop
jmp
pop
push
jb
and
jmp
lcall
inc
out
xor
jmp
add
xchg
jmp
aad
inc
out
shrl
mov
push
outsb
ficoms
inc
mov
push
add
add
adc
lea
add
dec
xchg
or
push
out
add
out
rolb
cmpsl
fsubs
add
pop
mov
sahf
mov
push
shl
and
and
push
fsubrp
int
scas
fisubrs
sbb
and
fldenv
inc
xchg
inc
out
push
fcomip
fcmovnu
inc
out
lds
cs
dec
scas
dec
cld
mov
mov
hlt
out
inc
out
cmc
mov
dec
add
ds
cs
xor
dec
mov
sub
mov
dec
pop
adc
ret
jae
ret
jmp
sbb
push
sbb
loope
lds
push
adc
jecxz
jmp
ljmp
std
sbb
fdivs
mov
pop
adc
jecxz
shl
jle
andb
std
hlt
lock
sbb
std
hlt
xor
jmp
movsb
inc
jmp
xor
add
or
sbb
push
xor
and
mov
pop
das
add
js
inc
jle
aaa
dec
xorb
mov
sbb
ret
push
mov
xchg
pop
push
je
mov
dec
jno
mov
cld
adc
add
jmp
rolb
add
add
mov
rcrb
add
push
fldcw
push
or
jg
out
push
add
mov
je
fld
jmp
fbld
cmc
xchg
arpl
out
lret
push
in
cmpl
std
nop
dec
or
add
js
les
ret
lods
fscale
imul
add
ret
inc
movsl
cmp
fucomip
xor
in
add
mov
sbb
mov
addr16
lsl
sub
shrl
repz
jecxz
mov
jmp
cmpl
arpl
mov
add
pop
sub
cmp
add
add
sarb
pusha
mov
out
jmp
add
cmp
xchg
fucomi
fists
add
add
xor
push
mov
pusha
pop
or
dec
mov
cmpsl
or
out
out
and
out
bound
imul
add
xchg
in
out
cmp
mov
cld
mov
jmp
fildl
mov
mov
mov
in
mov
repz
push
shr
shlb
fnclex
jmp
lahf
fsubrl
mov
cmp
loope
push
out
cmc
stos
mov
daa
sbb
addb
call
in
into
push
add
add
inc
call
rcr
daa
adc
and
dec
push
pop
add
xchg
and
data16
add
mov
fstl
out
add
push
mov
sbb
add
test
pusha
clc
inc
add
jo
push
push
lea
sbb
add
lea
ds
je
data16
add
xlat
cmp
add
lds
push
sti
adc
lock
adc
push
mov
in
xor
popa
pop
rcll
sub
sbb
jmp
pop
imul
push
lock
or
jb
jmp
andl
in
add
lret
fisubrl
mov
pop
data16
out
das
push
add
add
xchg
jmp
mov
mov
or
ljmp
inc
and
or
mov
aad
daa
push
sbb
jb
and
and
bound
sub
fistpll
and
jl
xor
inc
ret
repz
sti
in
out
sub
and
iret
out
sub
and
add
add
cmp
add
sub
pushf
mov
add
mov
xlat
mov
movups
pop
loop
insb
int3
or
xchg
fdivl
ret
adc
add
pop
pop
out
mov
ss
pop
andl
pop
stos
push
xlat
mov
jl
adc
rcll
les
jmp
cmp
mov
add
add
pop
or
mov
xor
rcr
jns
jmp
insl
sti
mov
lock
inc
push
rolb
in
sarb
call
jb
loopne
xchg
in
orb
inc
push
mov
push
add
sbbl
ja
cmp
xor
bound
add
add
int
dec
je
lds
xor
cmp
into
pop
inc
call
lods
pop
incb
sti
inc
cmpb
les
lret
fbstp
jne
lock
sbb
dec
sub
clc
mov
mov
push
ljmp
cld
jne
jl
push
mov
push
push
sti
or
add
add
or
es
adc
into
push
push
fisubrl
std
mov
jle
shlb
inc
out
or
mov
addr16
or
or
push
cmpsl
shll
add
out
dec
add
dec
xor
bound
in
mov
fisttps
out
cmp
std
pop
lahf
icebp
mov
push
dec
out
popa
add
xchg
or
mov
std
adc
mov
xor
xor
movsl
cmp
movsl
stos
add
push
sub
faddl
add
cmp
inc
out
repz
cmpsl
add
jle
adc
and
out
xchg
jp
shrb
xor
les
jg
xchg
pop
jmp
mov
add
add
push
pop
pop
jmp
cmpsl
add
filds
fisttpl
ror
int3
push
iret
mov
xor
orl
and
mov
adc
jb
outsb
mov
out
out
insb
insb
or
add
mov
sti
out
xchg
jge
ds
or
lret
mov
adc
dec
loope
add
hlt
sti
out
fmul
std
test
add
cmp
out
jge
call
cs
stos
mov
dec
add
in
push
push
pop
add
call
pusha
into
std
push
sbb
jae
dec
aam
out
dec
push
aad
ret
je
imul
xchg
enter
mov
xchg
push
lret
pop
orl
jns
sbb
add
add
adc
cmp
jns
and
addb
or
jns
inc
sbb
jnp
jns
sti
jne
or
push
and
sti
lea
rcpps
repnz
call
xchg
dec
or
push
sbb
adc
adc
test
sub
andl
dec
clc
pop
mov
adc
add
add
push
adc
push
les
gs
out
push
mov
pop
sub
mov
add
std
push
jle
dec
inc
fsubl
add
add
iret
sbb
inc
push
rorl
loopne
mov
stos
xchg
add
stos
jb
jnp
fidivl
or
jp
xor
iret
int
lock
stc
mov
mulb
cmc
lcall
scas
gs
call
fs
in
cld
xor
flds
adc
add
xor
out
xor
and
add
out
subb
xlat
arpl
adc
cmpsl
add
filds
add
add
sbb
ss
xor
out
loope
call
int3
sbb
daa
mov
clc
imul
add
or
out
jmp
pop
in
xor
daa
clc
arpl
loopne
out
js
out
pop
inc
push
jnp
js
xlat
adc
andb
addl
in
aaa
mov
add
jb
enter
add
call
arpl
std
mov
lock
subb
fstl
inc
sbb
imul
add
add
leave
std
sbb
fcmovne
xor
leave
xchg
jge
lods
popf
sti
push
je
cmp
and
push
cmp
aaa
adc
and
add
and
lsl
jnp
imul
enter
push
mov
push
and
js
mov
add
adc
lds
xchg
mov
or
add
add
sbb
jns
add
jle
inc
test
push
sti
adc
lds
xor
les
mov
lock
call
jne
add
cmp
jmp
jle
pop
push
inc
jp
je
aam
mov
pop
call
lea
add
add
pop
repz
repnz
add
mov
or
xchg
cmc
popa
push
insb
cwtl
int
sbb
cwtl
aad
sti
test
mov
jg
pop
ljmp
inc
clc
mov
roll
and
pop
lock
lock
fidivl
aam
aam
sub
inc
cld
shrd
sbb
hlt
fucomip
push
push
pop
push
fcompl
fidivrl
out
ljmp
in
cmc
xlat
fstps
adc
add
add
lock
push
sti
pop
mov
push
outsl
mov
dec
stos
stos
les
js
fdivr
test
and
xor
xor
js
fildll
pop
ss
xchg
int3
and
arpl
fidivrl
int
les
dec
js
xor
out
jle
sub
sub
int
pop
fsub
lret
mov
mov
es
fcomps
add
xor
inc
enter
cld
negl
pop
pop
mov
cmp
outsb
lods
lods
dec
out
jmp
push
shlb
or
or
mov
cli
mov
fwait
hlt
rorb
mov
adc
imul
hlt
mov
sub
push
jb
inc
in
sub
push
pop
mov
mov
push
jb,pn
and
push
push
xchg
mov
cld
stos
xorb
cmp
sbb
std
ds
jno
cmpsl
stos
pop
add
sti
ljmp
push
push
aas
inc
fdiv
fists
dec
into
das
fildl
in
jmp
xchg
into
or
sub
add
and
pop
call
jb
mov
cmp
out
or
mov
pop
hlt
cmpsl
jmp
je
pusha
push
jecxz
pop
call
dec
push
lock
cmp
es
push
add
in
push
lea
test
xlat
es
or
push
pop
xlat
push
iret
xchg
out
scas
aaa
lcall
jle
xor
add
addr16
inc
fs
leave
aas
push
int3
push
movsl
cld
lret
xchg
sti
dec
add
ljmp
out
cmp
inc
pop
repz
adc
add
stos
jge
repz
lahf
fwait
xor
adc
dec
or
jo
push
mov
out
lahf
imul
add
inc
pusha
mov
sbb
stos
add
mov
jp
sbb
addr16
ljmp
int3
pop
out
lea
mov
stos
jg
jmp
ss
sub
scas
into
add
mov
xchg
jnp
dec
daa
add
aas
xchg
cld
xor
and
add
mov
jmp
repz
mov
adc
insb
jle
rclb
jp
sti
hlt
or
jl
mov
add
add
aam
iret
stos
lcall
add
daa
add
fnstcw
lahf
and
scas
inc
mov
std
adc
mov
pop
das
mov
push
mov
in
mov
test
jecxz
rorb
orl
rcll
mov
daa
add
insb
mov
add
je
dec
sti
push
test
push
incl
add
add
add
sar
push
les
gs
mov
jae
int
mov
dec
push
fidivs
rcr
jae
add
sti
mov
sbb
lsl
push
mov
pop
call
push
cld
pop
push
cmp
push
in
push
call
and
rorl
cmovo
add
add
enter
out
jle
popa
or
outsb
lea
pop
call
add
cmp
jl
push
jle
lea
dec
or
out
ret
std
pop
out
jmp
out
push
mov
into
add
pop
out
testl
xchg
lea
out
add
cmpsl
mov
fsubrl
and
xlat
add
enter
pop
dec
ret
std
rcpps
push
out
js
lahf
and
adcl
hlt
inc
jbe
mov
sub
jle
jecxz
cmp
rcl
pop
orl
add
dec
cmpsl
add
xor
mov
out
xor
aas
jecxz
out
stos
out
adc
mov
pop
mov
sahf
lods
fs
add
xchg
add
dec
insb
mov
adc
add
js
mov
ds
push
push
fists
pop
mov
lcall
pop
jg
and
jns
fs
js
push
jb
rep
add
mov
add
and
add
mov
jne
cmpsl
pop
rol
sbb
call
mov
or
mov
ret
je
es
mov
mov
push
mov
or
inc
pop
mov
mov
mov
mov
out
push
mov
or
mov
mov
xor
dec
loope
add
add
add
aaa
cmp
jno
add
fisubl
or
adc
cli
cmp
inc
call
int
callw
cld
jmp
call
mov
mov
mov
xchg
incl
sti
xor
les
inc
rolb
mov
add
add
push
push
dec
cld
ret
pop
inc
inc
in
call
or
movsb
call
add
cli
dec
push
dec
mov
jle
jge
sbb
adc
mov
aaa
adc
pop
mov
mov
daa
mov
std
hlt
fldcw
xchg
notl
push
daa
inc
lock
rolb
fs
add
andb
xchg
popl
outsb
call
mov
and
xchg
testl
test
push
mov
sbb
inc
mov
jmp
add
test
lods
cmpsl
in
out
jg
movsl
add
mov
out
or
les
shlb
out
pop
test
scas
pop
push
out
mov
push
cs
stos
xlat
pop
or
lods
push
insb
ja
mov
out
stos
inc
jle
shlb
adc
jmp
adc
jmp
push
mov
jg
daa
add
inc
mov
sub
arpl
add
sbb
in
lds
sarl
shl
mov
push
fs
mov
pop
mov
dec
out
test
out
pop
jb
call
insb
or
adc
push
push
pusha
xchg
shl
cmp
inc
mov
xor
push
mov
push
push
xor
xor
sbb
or
push
les
outsl
out
decl
mov
lea
push
push
jbe,pt
cmp
rorb
jno
add
lds
push
xchg
push
enter
ljmp
add
mov
add
xchg
mov
jmp
push
push
xor
push
and
test
push
and
lret
mov
adc
add
xchg
inc
push
in
add
mov
add
mov
add
out
in
xor
mov
movsl
daa
inc
pop
out
test
insb
add
lock
or
push
push
clc
dec
ja
add
xor
jmp
int
push
std
rolb
je
inc
mov
add
sbb
add
xor
fs
add
stos
add
xor
mov
xor
stos
inc
mov
xor
mov
push
mov
push
xchg
adc
inc
jecxz
imul
scas
mov
out
push
es
iret
mov
mov
aas
xor
inc
or
or
xorl
add
bound
mov
push
test
cmp
aas
iret
mov
push
push
out
mov
outsb
or
mov
or
pop
mov
pop
mov
push
ljmp
or
mov
or
push
jg
cs
add
jnp
shlb
ja
test
lods
ret
dec
xor
sub
xor
cltd
fildl
shll
jmp
and
call
pop
xor
xchg
mov
call
negb
call
push
add
cltd
mov
std
sbb
add
addr16
call
sahf
mov
and
addl
or
add
call
sti
incl
add
add
pop
push
mov
orl
cmp
jmp
sbb
push
outsb
outsb
dec
adc
enter
pop
add
cmc
inc
in
mov
push
lock
fistps
mov
push
ljmp
test
movnti
add
inc
decl
mov
dec
push
mov
fsubp
xor
sub
ljmp
outsb
call
pop
xlat
test
jle
addb
add
add
jecxz
lea
daa
nop
inc
flds
mov
xor
movsb
push
std
push
roll
inc
pop
daa
inc
mov
test
inc
out
shll
inc
cmp
mov
inc
jo
add
test
jbe
pushf
inc
mov
pushf
add
in
sbb
test
out
or
stos
frndint
pop
sbb
jg
adc
mov
mov
jns
or
mov
push
sahf
push
out
jl
mov
and
les
jg
out
add
mov
push
out
mov
pop
pop
push
out
jl
scas
or
mov
mov
dec
fiadds
out
in
cmc
sub
bound
push
lods
fstpl
invd
inc
mov
stos
mov
add
fldcw
pop
bound
jecxz
jmp
jecxz
lods
add
leave
adc
jbe
add
add
dec
jae
mov
aad
dec
rcll
ret
or
push
ret
push
sbb
aad
pushl
ljmp
dec
fdivl
rolb
testl
movb
pop
ljmp
sbb
add
mov
xor
xor
xchg
mov
add
inc
jecxz
xchg
or
mov
shl
push
ds
rcr
lds
cmp
cltd
jnp
cmp
add
add
mov
mov
add
add
mov
pop
pusha
lds
cmpsl
ret
or
jle
inc
xor
jo
add
das
ljmp
or
jo
add
jno
loope,pt
or
insl
or
dec
add
sarl
or
add
rcll
sub
fbld
add
mov
dec
out
jge
jnp
mov
adc
dec
mov
or
pushf
mov
mov
jns
and
sub
or
mov
or
mov
mull
shll
mov
scas
ret
int3
or
pushf
add
pusha
or
or
movsb
or
out
xor
cld
add
sbb
fbld
jl
inc
out
repnz
mov
cmpsb
add
test
push
mov
aam
stc
inc
out
sbb
push
out
out
dec
add
add
mov
hlt
adc
cld
mov
cld
dec
lret
push
jg
aaa
divl
lods
jg,pt
add
add
add
lods
and
call
xchg
jle
loopne
out
call
je
in
xor
add
incl
xchg
in
add
or
mov
sar
mov
jmp
daa
jne
in
in
cmp
repnz
fidivrs
decb
adcl
fidivrl
add
jmp
push
sbb
or
arpl
mov
add
iret
in
jmp
notb
decb
cmp
inc
es
jecxz
push
xchg
in
call
insb
and
fucomip
mov
add
xor
inc
ds
sti
adc
test
jo
clc
or
add
lds
add
cmpb
jmp
cmp
add
add
add
add
push
adc
or
into
or
push
data16
xchg
cmp
jne
push
mov
inc
jle
sti
adc
or
jmp
pushl
mov
sti
call
mov
lock
dec
pop
pop
std
fiaddl
inc
out
ret
add
add
cmp
pushf
test
fstpl
pop
mov
adc
out
cmovbe
xor
push
call
fs
jecxz
add
dec
xor
push
out
pushf
add
fidivs
mov
adc
sbb
cmc
pop
add
dec
call
push
pop
call
mov
xlat
jmp
stc
cld
shlb
jb
fs
sbb
scas
rolb
out
daa
aaa
icebp
sbb
jmp
mov
sbb
stos
out
jge
dec
inc
testl
bound
repz
into
aaa
jle
add
das
je
push
mov
cld
movsl
pop
repz
add
aas
xrelease
xor
fwait
ja
out
imul
hlt
pop
repnz
mov
in
mov
add
loopne
or
sarl
jo
add
cmpsb
jae
jl
sti
push
xchg
inc
sub
inc
sbb
xchg
dec
ret
push
mov
push
xor
cld
push
adc
add
test
inc
add
test
sbb
cld
sbb
mov
jmp
add
add
stc
idiv
cld
mov
cmpsb
mov
in
mov
push
mov
clc
dec
std
faddl
sbb
and
pop
push
mov
xorps
adc
inc
dec
sub
jno
mov
jno
add
shlb
xor
xor
adc
es
and
shll
add
add
pop
jno
xor
fiaddl
ljmp
or
into
out
cmp
push
adc
add
stos
adc
cmpsl
push
add
test
jmp
mov
dec
lods
std
insb
pusha
or
ret
push
push
out
xor
adc
xor
pushf
add
outsl
mov
add
xor
shll
and
and
test
lods
add
out
xor
or
std
rcl
sbb
pop
shll
mov
out
push
cmp
shl
out
jge
adc
faddl
jmp
sti
faddl
mov
add
push
dec
mov
jne
inc
scas
stc
lret
pop
lods
sbb
cmpsl
add
idivl
sti
out
out
pop
adc
out
cmp
jo
das
cmpsb
fmull
cmc
inc
out
movsb
fwait
aaa
lods
xchg
cmpsl
ficoms
fists
daa
add
ret
fiadds
mov
aam
pop
adc
outsb
out
out
incb
call
mov
or
xchg
add
add
fisubrl
push
cmp
lret
pop
je
int3
cmp
cmp
pushf
push
aad
cmp
xor
jle
inc
jle
addb
push
mov
push
dec
xchg
dec
cmp
hlt
pusha
or
jo
fwait
jmp
add
jl
fwait
push
fldcw
sub
add
mov
lock
xor
inc
jmp
and
sbb
in
inc
adcl
jo
xchg
inc
add
cli
adc
add
test
popf
add
push
add
mov
xor
jmp
or
add
ss
leave
std
dec
xchg
jg
inc
or
and
add
push
push
je
or
pop
and
add
add
xor
pop
sub
push
sub
subb
pop
add
push
add
mov
out
cmpsl
add
lods
add
mov
lods
add
mov
add
out
add
and
add
lods
jbe
jns
std
adc
lods
jle
pop
push
add
out
cmp
popa
jne
add
movsl
cmp
mov
int
inc
and
xor
add
cwtl
jge
xchg
mov
adc
in
add
daa
and
push
popa
dec
add
out
jg
out
add
out
mov
outsl
push
jecxz
imul
inc
pop
test
out
imul
and
xor
xor
filds
mov
xchg
xor
push
adc
push
add
rep
loop
out
fisttpl
push
add
fildll
out
pop
out
adcb
add
pop
scas
cli
pop
push
divl
lahf
aaa
push
mov
sahf
rorl
test
xchg
sub
add
jmp
rcrb
add
add
push
test
in
add
mov
call
in
add
pop
cmp
mov
hlt
aas
jmp
stos
xor
mov
add
cld
mov
imul
jmp
pop
mov
jae
das
pop
rcrb
or
test
lahf
std
cmp
jmp
dec
adc
std
add
push
inc
sbb
or
inc
idiv
mov
add
addl
add
cmp
xchg
add
adc
cmc
add
add
je
test
add
add
jle
sub
lcall
jne
jge
add
xchg
cld
imul
add
add
call
adc
ja
sti
incl
imul
out
xor
jne
mov
add
out
cli
imul
movsl
lcall
jmp
imul
mov
xor
outsl
or
das
and
ffree
push
mov
das
or
in
sbb
maxps
out
testb
mov
out
cmpl
lods
add
mov
lods
add
out
fs
lods
xor
insb
js
imul
add
push
add
lcall
fwait
into
cmpsb
pop
add
out
out
fidivs
clc
roll
add
add
das
pop
pop
mov
add
das
loope
insl
cmp
sahf
jbe
mov
in
jno
lcall
ljmp
out
out
add
cmpsb
pop
pop
addr16
add
dec
sahf
es
ljmp
in
sahf
push
insb
and
add
in
jae
lea
jb
out
jmp
jo
cld
into
inc
loop
call
out
ret
and
aam
add
mov
fisubl
xlat
sahf
std
xchg
pop
mov
lahf
std
pop
jle
or
pop
inc
adc
push
rorb
rorb
incb
xor
lcall
push
fimull
aam
stc
in
add
push
add
fmull
mov
add
add
mov
out
idiv
or
or
in
sub
dec
push
xor
addr16
inc
orl
inc
bound
jns
gs
xor
into
call
mov
rorb
sbb
cmc
inc
or
jle
inc
adc
pushf
decl
fmull
ret
add
sbb
int
out
add
addr16
add
cmc
and
sub
mov
repnz
pop
sti
sub
in
or
mov
mulb
pop
or
mov
dec
out
mov
cs
call
out
or
movsb
popf
adc
mov
lods
mov
sbb
lods
add
out
add
or
fiaddl
add
inc
pop
cs
imulb
popf
orl
cmp
fiaddl
ret
clc
clc
add
out
cmpsl
pop
add
add
add
mov
mov
mov
repnz
add
jmp
xlat
xor
clc
mov
es
les
pusha
inc
lret
mov
add
or
iret
xchg
and
out
daa
adc
fistpll
add
add
mov
out
call
ret
andb
lcall
jae
inc
pop
lods
ss
clc
shl
cmpsb
add
jmp
mov
push
mov
inc
inc
in
femms
jo
xchg
lds
mov
add
sbb
jecxz
add
clc
push
push
mov
mov
std
add
add
inc
or
sub
scas
inc
test
in
add
jmp
shl
aad
call
mov
mov
negl
fldpi
mov
je
iret
stos
dec
and
add
bound
mov
dec
clc
add
inc
or
mov
mov
rolb
add
jne
je
add
add
push
push
jbe
add
addr16
cmp
push
push
xchg
add
add
arpl
inc
inc
test
mov
insb
sub
xchg
arpl
addb
std
fisubl
mov
jmp
repz
xchg
inc
je
in
fisubl
jle
add
incl
repnz
sub
cli
pop
inc
test
stos
adc
movsb
out
add
lods
add
cmp
xchg
inc
fistps
sub
ljmp
mov
sahf
mov
pushl
std
call
xor
push
xor
sub
in
add
cmp
inc
fstpl
dec
jae
std
cwtl
loopne
add
lods
add
add
cmpsl
and
call
call
push
xchg
les
lds
out
lret
mov
add
cmp
out
lea
and
testl
cmpsb
add
pop
stos
xchg
rcrl
xchg
imul
stc
jno
ja
stos
add
dec
push
push
cmp
test
testl
cmpsb
testl
add
add
add
or
pushf
sub
pxor
imul
out
pop
aas
lret
pop
fs
adc
outsl
or
sub
mov
add
jmp
xlat
jae
lods
in
xchg
jecxz
add
pushl
sub
jmp
frstor
inc
jmp
xchg
call
xorl
in
dec
lds
add
add
jle
jmp
mov
jae
and
in
add
mov
xchg
and
aad
mov
jecxz
push
aas
cli
cmovae
push
cmp
scas
mov
cmp
adc
int
fcmovne
jg
inc
jle
or
or
pop
xchg
ret
add
test
add
aad
sti
adc
mov
jns
add
icebp
mov
jmp
pop
pop
jmp
add
add
adc
cmp
pusha
mov
incl
mov
or
out
or
mov
int
rcr
dec
xor
add
stos
out
pushf
std
aam
cmp
push
add
stos
sarb
movsb
and
add
loop
lcall
inc
imulb
out
test
shrl
adc
mov
jno
stos
stos
fidivrl
stos
add
lcall
add
push
and
push
andl
notb
fidivl
xor
test
sub
cltd
pop
adc
cmp
pop
imul
and
arpl
faddl
addl
add
add
add
ljmp
call
arpl
xchg
lea
add
pop
int3
stos
dec
aam
add
fcomi
dec
je
aas
out
addr16
xchg
out
test
inc
out
addr16
add
jl
sti
es
xor
ret
or
xchg
xchg
xchg
jnp
lock
lock
clc
cmpsb
add
xchg
stos
push
xchg
out
pop
lret
cmp
pop
add
xchg
cmp
lock
xor
fcoms
push
scas
mov
adc
jecxz
clc
ss
pop
std
xchg
jge
lds
int
adc
xlat
jl
pop
jo
or
pop
push
sbb
idiv
fdivl
in
push
xchg
adc
insb
cmp
mov
nop
std
jb
xor
and
call
xlat
sti
push
push
imul
cld
pushf
or
or
insl
testb
add
out
dec
nop
mov
xlat
xchg
mov
fs
sbb
add
aad
enter
ret
and
gs
cs
add
ret
add
cld
test
jmp
add
jnp
jg
ret
addb
jne
add
add
mov
and
pop
call
adc
inc
push
vmovmskps
sbb
adc
or
jno
addl
out
aas
add
jg
mov
xor
jnp
push
jmp
adc
or
pusha
std
sbb
enter
out
add
daa
fwait
add
cmpsl
fcmovb
mov
sbbl
mov
test
adc
mov
out
std
call
push
movsl
orl
das
push
bound
mov
call
imul
test
add
icebp
xchg
jae
lods
cwtl
push
pop
xchg
and
or
std
clc
and
cmp
mov
mov
cmp
insb
inc
add
mov
add
add
pop
lods
iret
movb
out
sahf
sbb
mov
call
push
mov
xor
add
insb
sbb
dec
pop
jge
fnstsw
fwait
sti
imul
xor
push
bound
add
push
xacquire
pop
inc
add
cltd
mov
je
add
add
or
out
lea
insb
adc
iret
call
in
cmp
and
mov
jns
rclb
je
mov
cmpsb
outsb
ja
nop
xchg
jae
and
into
pop
mov
insl
add
push
insb
call
and
outsb
call
pop
and
insl
inc
and
or
dec
jno
inc
or
shl
pop
ret
out
je
fwait
sub
xor
std
jb
xor
nop
std
add
into
and
scas
dec
incl
adc
adc
xor
xchg
in
cmp
mov
inc
and
jl
push
dec
roll
xor
fdivrs
jbe
dec
data16
jno
cmpsl
int
adc
ss
mov
lea
call
lds
and
in
push
aaa
lret
push
jns
add
inc
push
test
or
lods
sbb
dec
push
push
out
sub
out
add
sbb
fs
mov
xchg
or
cmp
fiaddl
std
mov
or
push
enter
or
fists
pop
mov
add
push
mov
test
mov
icebp
cld
fcmovb
lock
out
mov
sti
push
push
shl
pop
cmp
add
and
push
insb
ds
sbb
xchg
pop
add
mov
dec
inc
mov
xchg
stc
inc
out
les
je
imul
out
in
jg
inc
out
or
jnp
inc
out
sbb
inc
out
mov
in
stos
mov
out
imul
mov
add
stc
scas
lea
add
aaa
insb
cmp
pop
jge
lahf
pusha
or
aas
mov
pmuludq
jle
iret
pop
add
out
out
dec
and
add
jle
addl
jmp
cli
add
push
or
test
xor
je
mov
add
push
jecxz
add
push
je
nop
push
push
and
inc
jmp
inc
pop
lock
mov
int3
sarb
inc
mov
add
hlt
test
add
add
push
xchg
std
into
jle
xor
loopne
std
pop
ljmp
add
in
cmc
adc
xchg
addr16
mov
pop
jne
mov
cmp
push
cmpsb
dec
mov
je
orl
or
call
mov
je
dec
mov
out
dec
outsb
sarl
xchg
dec
dec
je
in
mov
or
xchg
aas
add
leave
andb
cmpsl
aas
add
jno
jmp
dec
mov
jmp
aas
add
mov
lds
dec
in
push
int
cli
jne
mov
push
testl
jmp
xor
scas
aad
add
jo
std
mov
cltd
pushf
int
add
lahf
mov
add
pop
add
dec
push
sbb
add
insl
cmp
shlb
inc
or
adc
dec
lret
iret
mov
mov
scas
hlt
aas
out
inc
std
out
jmp
sbb
add
ss
repnz
aas
out
mov
shrl
inc
std
or
mov
mov
push
add
inc
out
xchg
aam
leave
movsb
mov
jp
pusha
push
pop
xor
add
rolb
jo
pop
jp
lahf
mov
add
out
out
fs
in
xchg
xor
adc
fs
in
rcr
call
not
inc
out
mov
jns
xchg
stos
xchg
mov
out
loop
or
mov
ret
mov
jg
aad
adc
mov
ljmp
add
in
inc
and
pushf
xchg
add
add
testb
add
push
mov
xchg
cld
add
in
adc
jmp
int
fisubs
add
in
inc
add
pop
mov
xchg
pop
mov
mov
dec
inc
in
out
add
sub
adc
xchg
cmp
mov
sub
adc
ss
xchg
pop
inc
add
fwait
not
in
addl
jmp
mov
add
add
decl
jno
mov
cmp
jle,pt
je
or
lds
std
test
jne
call
inc
test
jne
mov
inc
js
incl
cmp
add
in
into
add
dec
in
out
lea
sti
push
cltd
in
out
pushl
jle
cmovae
incl
add
add
jno
dec
push
xor
mov
ja
jmp
out
call
pop
fmuls
shll
add
lret
fimull
xchg
std
lcall
pop
pop
std
push
xchg
insl
pop
add
adc
inc
xchg
mov
xlat
pop
les
out
add
lcall
mov
lcall
out
add
popf
les
lcall
pop
lcall
out
jmp
out
cmpsl
or
pmaxub
jo
out
repz
mov
pop
sbb
out
out
fsubl
add
int
mov
aam
out
out
mov
add
invd
leave
es
pop
rolb
add
add
inc
xchg
sti
stos
sub
test
idivl
push
loop
lods
repz
jae
push
or
mov
adc
andb
ret
inc
jb
fildl
addr16
sbb
mov
out
rcrb
inc
stc
addr16
je
cli
cmp
int3
int3
addl
in
imul
testb
cmc
push
cmp
and
add
insl
sub
adc
fadd
adc
mov
xorl
or
ss
and
pop
lahf
adc
in
xchg
jne
cmp
fdivrs
add
cmpl
mov
mov
mov
xor
je
xchg
lea
add
add
call
test
movhps
cmp
adc
incl
je
inc
push
push
dec
push
add
xor
lock
inc
jg
rcll
cmp
jle
inc
push
sub
je
add
push
cmp
jno
std
call
push
lea
adc
call
out
adc
out
iret
sti
jae
cmc
or
fdivrl
popa
adc
imul
jl
lds
les
add
out
add
mov
in
dec
mov
jl
push
cmovge
je
in
fwait
add
mov
cmp
call
insb
aam
xchg
cmc
cmp
pop
mov
add
jmp
push
rcrb
ss
mov
movsl
bound
add
cmpsl
pmulhuw
mov
sbb
out
dec
adc
sar
cmpb
stos
or
add
add
and
insb
xchg
sti
and
mov
in
outsb
inc
fs
push
sarb
out
out
dec
jmp
dec
sbb
add
xor
sub
add
add
xchg
psubsw
xor
add
test
subb
pop
outsl
push
add
xchg
jg
mov
ds
imul
out
add
clc
adc
ficoml
mov
std
fisubs
or
push
cmp
into
pusha
inc
shll
subl
add
jmp
movsb
lea
frndint
sbb
xchg
std
std
inc
psubsb
popa
cmp
lds
cld
frstor
adc
fstl
psubsb
bound
inc
add
xor
call
and
mov
xlat
cld
xchg
or
mov
push
adc
jns
push
mov
xchg
or
add
lea
stc
lcall
stc
inc
or
add
add
sti
cmp
test
push
push
lea
add
push
mov
call
xchg
adc
add
cs
mov
daa
push
jbe
movsl
push
cltd
test
adc
jmp
inc
mov
test
jno
out
adc
cld
imul
sti
fdivrs
call
icebp
pushf
xchg
aaa
loopne
clc
pop
in
mov
push
mov
std
adc
imul
je
xchg
rolb
hlt
sub
scas
clc
jl
jp
addl
cmp
repz
or
cmpsb
xchg
stc
imul
and
ret
push
xchg
mov
push
xor
push
xchg
int
pmuludq
xlat
cmp
add
fstpt
push
add
std
mov
sbb
inc
out
jl
fistl
in
adc
ret
inc
fildl
add
les
fiadds
cmpsb
xor
shlb
orb
shrb
test
out
out
hlt
or
js
andb
data16
bsr
sbb
idivl
jmp
mul
js
sbb
lods
sbb
inc
subb
push
cmp
xor
mov
mov
adc
and
movlhps
adc
cmc
adc
adc
cmp
bound
inc
mov
cmp
in
pop
fimuls
arpl
adc
popl
or
add
inc
jb
mov
test
stos
mov
jmp
cmp
inc
jmp
sub
aas
jmp
mov
add
jmp
add
mov
sub
inc
mov
call
push
pop
jbe
pop
cld
jnp
jo
inc
dec
add
sarb
push
jns
push
push
mov
add
add
add
add
add
test
jle
mov
fcoms
push
scas
pop
addr16
cli
adc
lret
jge
ret
mov
roll
sti
add
pop
aaa
adc
das
shl
mov
jae
js
sbb
rorb
fbld
add
insb
sar
jb
imul
daa
popa
mov
or
movsl
jae
push
adc
cmp
jmp
mov
inc
in
ljmp
imul
ja
add
call
or
out
or
mov
add
out
adc
xchg
push
xlat
mov
lahf
push
inc
out
cld
jbe
push
cmp
lea
ret
out
loopne
dec
cmp
push
jb
call
add
call
lea
ret
call
xor
pop
outsb
leave
out
mov
adc
lret
scas
fnsetpm(287
out
aad
pop
or
push
clc
fucomi
neg
cmp
adc
or
inc
daa
mov
insb
and
out
push
js
mov
leave
xor
and
add
add
shl
add
in
cld
aam
or
imul
push
in
add
add
push
in
or
in
subl
popa
mov
addr16
xchg
call
xor
jmp
xchg
xor
jo
cmp
jmp
jae
cmp
in
mov
jecxz
cwtl
sub
add
bound
add
jmp
pop
mov
add
add
lds
xchg
dec
add
push
inc
add
mov
inc
std
add
ljmp
adc
std
mov
push
es
jbe
decb
push
or
add
jecxz
adc
mov
jo
mov
rolb
push
data16
inc
inc
into
push
inc
jmp
add
addr16
add
push
inc
inc
jle
aaa
inc
mov
inc
std
xlat
inc
ds
inc
inc
inc
jle
dec
or
add
inc
cmpsb
insb
aam
mov
mov
repz
repz
push
xchg
daa
mov
add
loope
add
pop
mov
jmp
add
jnp
jle
clc
fwait
adc
out
inc
push
insb
incl
cld
pop
outsl
jle
add
ljmp
das
fldcw
jle
adc
pop
stos
sbb
out
or
je
add
pop
sub
jmp
andl
inc
adc
mov
mov
es
andb
out
out
mov
mov
rorb
hlt
mov
mov
push
push
cmp
and
rorb
movsl
and
out
xchg
ret
popf
jmp
sti
cmpsb
add
andb
cmpsb
cmp
sbb
add
shll
in
rcll
sub
jmp
cs
mov
enter
in
subb
sar
aam
mov
mov
aam
add
and
or
sti
decl
push
arpl
mov
std
push
mov
icebp
pop
dec
jno
gs
add
movsb
or
sub
add
add
mov
push
xor
inc
fistpll
add
dec
mov
xlat
test
sbbl
mov
jl
rol
dec
in
mov
cli
mov
pop
add
mov
add
mov
pop
add
test
lea
push
cmp
stos
jns
pop
test
sbbb
adc
adc
pop
test
add
add
xor
jl
in
pop
je
inc
xchg
out
jb
inc
inc
jmp
call
dec
icebp
jbe
jp
inc
scas
les
sub
push
js
jp
jecxz
cmp
mov
pushf
lock
or
inc
cmp
aas
out
or
cmp
lea
and
add
les
pop
add
mov
in
push
or
adc
out
or
add
sti
loopne
mov
mov
or
push
and
negl
aaa
sbb
in
push
mov
push
std
rolb
mov
inc
cmp
lahf
inc
jmp
xor
jnp
sub
pushaw
jmp
adc
inc
or
imull
jns
xor
or
int3
outsl
or
in
jmp
hlt
jnp
pop
rcrl
mov
jno
call
sti
mov
fisttpll
mov
add
pop
dec
sbb
jne
test
insb
ljmp
jno
pop
lret
adc
add
fisubl
add
icebp
add
ljmp
insb
jge
cmpb
lods
lret
stos
in
add
daa
in
loopne
jecxz
jmp
mov
movsb
testl
and
ret
pop
orl
mov
outsb
std
sar
aam
inc
adc
std
mov
outsb
jae
outsl
adc
fisubl
andb
repz
and
and
xchg
pop
add
fs
add
pop
adc
cmp
mov
push
dec
push
xor
call
mov
dec
mov
lret
rcll
sarl
push
iret
jl
clc
into
jp
or
sbb
ret
jo
sub
out
mov
cmc
mov
inc
cld
lods
add
push
push
mov
fisttpl
andl
call
imul
mov
mov
sti
cli
jne
imull
call
add
rclb
ror
mov
repz
mov
jne
inc
jecxz
add
lcall
std
pop
jbe
ret
insb
jbe
lret
dec
jbe
js
add
daa
pop
outsb
fmul
pushf
outsb
fsubs
and
arpl
adc
dec
pop
adc
stos
je
jae
in
xor
fisubl
out
inc
jae
or
mov
mov
or
test
fptan
movsb
pop
lock
movsb
pop
lret
cld
cli
add
adc
add
sbb
ja
add
sbb
imul
es
sbb
ja
add
add
int
pop
iret
adc
add
mov
mov
fistpll
les
add
add
aam
cmc
ret
out
es
repz
jmp
add
insb
hlt
aas
aad
out
sbb
add
inc
cld
push
inc
orb
rorb
lea
pop
lock
mov
insl
pop
or
insl
pop
leave
sub
sar
stc
sub
xchg
push
ret
lcall
inc
ret
mov
movsb
insb
xor
jmp
inc
jne
jmp
insl
or
loopne
insb
mov
mov
add
cmpsl
insb
add
repnz
inc
jmp
dec
fdivs
jmp
adc
cmpsl
notl
adc
outsl
adc
test
filds
in
inc
jmp
loope
and
add
or
push
mov
sti
shrb
iret
push
ret
add
pop
push
mov
sub
mov
mov
jl
test
pop
call
jb
outsl
pop
inc
stos
rcll
mov
shrb
xor
movsl
pop
cmpb
xchg
and
pop
je
dec
mov
push
cld
jne
not
cmpl
jge
pop
je
flds
or
int
les
xlat
je
dec
mov
add
add
sub
inc
or
pop
jmp
test
enter
testl
adc
pop
adc
pushf
add
mov
adc
out
repnz
inc
out
inc
or
pop
rcrb
sahf
std
call
negb
stos
clc
pop
push
pop
xchg
pop
or
andb
add
inc
insb
inc
loopne
sub
add
pop
fcos
xor
mov
addb
jbe
sbb
xchg
out
pop
fimuls
fsub
jb
negl
dec
insb
rolb
push
jb
inc
mov
pop
lcall
std
pop
mov
push
jb
inc
mov
fcomps
push
lahf
test
push
out
add
lock
pop
outsb
jno
add
add
add
lcall
insl
rorb
and
into
mov
imul
jl
fdiv
ret
dec
cmc
in
call
ror
xchg
push
ljmp
std
push
out
pop
data16
mov
popf
add
arpl
psubsw
imull
ja
pcmpgtb
push
subl
or
push
sbb
shlb
xchg
shl
adc
addr16
add
data16
pop
cmc
or
xchg
add
sbb
adc
clc
movsb
push
cmc
mov
test
add
jmp
xlat
adc
stc
and
adc
adc
or
sbb
xlat
ret
push
mov
test
orb
add
add
add
inc
add
add
sbbb
add
roll
outsb
pop
lea
repz
ljmp
xor
sbb
adc
or
mov
cmp
jmp
add
bnd
rol
movsb
sub
test
push
ret
or
dec
dec
jmp
pop
jo
shlb
out
inc
je
add
add
icebp
movb
xchg
testl
repz
imul
add
insl
call
mov
into
pop
push
sbb
add
jl
jecxz
sti
mov
int3
add
into
cmpsl
jp
pushw
out
rorl
mov
push
addb
shl
cld
mov
pop
test
cs
add
out
inc
jae
add
add
xchg
add
cmpsl
and
notb
cmp
sbb
sahf
push
add
pop
xchg
or
rcrb
ja
add
xchg
dec
insb
enter
mov
addr16
insb
enter
out
sub
out
cmpsl
lock
mov
pop
inc
adc
sti
add
out
out
std
pop
jmp
cmpsl
add
add
add
pop
enter
xchg
cld
out
out
cld
outsl
rol
out
cmpsl
lock
mov
mov
loop
sub
ljmp
inc
std
cld
sub
inc
jmp
mov
xchg
jl
sbbb
push
data16
test
mov
ret
xchg
inc
push
bound
add
add
call
mov
xchg
jnp
push
adc
xchg
add
adc
andb
jge
call
and
inc
shlb
mov
pop
xchg
pop
mov
pop
xchg
in
cld
inc
pop
mov
popa
add
test
jnp
add
int3
push
call
add
add
in
cld
ds
incl
dec
and
jns
mov
call
stc
push
out
mov
mov
jns,pn
jle
inc
jge
push
fsubrl
jle
mov
cmp
out
add
jg
mov
out
jg
fstpt
xchg
pop
repz
in
mov
mov
push
insl
add
and
jge
data16
add
insb
push
mov
insl
mov
addr16
or
xor
cmpsl
insb
jle
sbbl
pop
mov
andl
addr16
sarb
jae
hlt
out
jge
xor
or
dec
push
jl
aad
sub
cld
bnd
inc
out
jae
mov
cld
pop
aad
out
out
out
scas
inc
xor
mov
out
imul
inc
clc
pop
dec
adc
bound
sarb
pop
cmpb
push
in
call
adc
mulb
add
inc
fistl
insb
mov
jle
pop
pop
lock
push
out
arpl
xadd
pop
movl
dec
jmp
and
mov
and
mov
and
xchg
js
cwtl
xchg
fstpl
adc
addr16
jae
mov
les
jmp
add
jg
imul
add
popa
scas
xor
out
or
add
mov
ljmp
and
mov
andb
jmp
faddl
add
test
aad
add
add
inc
add
stos
in
inc
call
in
pop
sti
cmp
add
call
jmp
jne
xchg
bound
push
pop
inc
or
mov
or
mov
or
push
cltd
jno
push
cltd
mov
mov
pop
add
cmp
or
pop
jno
push
pop
mov
mov
add
add
idivl
or
mov
pop
cld
jne
pop
mov
pop
xchg
shr
lea
jmp
decl
fucomp
sbb
sahf
add
pop
out
int3
movsl
imul
push
out
xchg
repnz
jl
xchg
cmp
pushl
jge
repz
sub
push
cmp
fcomi
int3
cld
xor
add
icebp
inc
pop
out
out
jge
mov
jl
pop
add
and
rep
insb
add
sbb
imul
int
mov
add
mov
out
mov
repz
lock
xor
dec
cmp
mov
or
pushf
add
add
xchg
lock
cmp
cwtl
add
add
pop
fld
mov
inc
es
out
popa
inc
push
out
pusha
vpcmpgtd
daa
fadd
pop
mov
loope
daa
mov
lahf
test
jmp
iret
sub
mov
dec
pusha
mov
xlat
inc
subb
add
fistpl
add
add
push
xor
add
and
add
add
idiv
rolb
add
repz
jmp
sbb
popf
sub
test
push
add
jmp
add
call
adc
and
add
push
fisubl
mov
jae
jmp
fdiv
aas
jmp
sub
ja
jecxz
inc
add
shl
aas
jmp
jnp
add
in
ja
jecxz
mov
in
inc
lds
add
add
and
jmp
iret
test
mov
test
testl
test
cmp
mov
out
add
aad
pop
adc
and
push
pop
or
into
cmp
xchg
mov
push
or
adc
pop
dec
dec
inc
fadd
add
dec
sldt
add
lret
add
cwtl
or
popf
add
add
push
adcl
inc
inc
sub
mov
push
inc
and
add
out
add
imul
insb
add
jle
push
adc
mov
adc
pop
sar
sub
add
aam
fildl
out
jbe
ret
faddl
add
sbb
adc
sar
sub
xor
add
insb
add
push
daa
xchg
out
add
pop
adc
rclb
cmp
movsb
ljmp
stos
pop
in
repz
sub
outsb
icebp
inc
stos
daa
faddl
push
adc
insb
mov
pop
sub
adc
cmpsl
insb
mov
enter
outsb
in
mov
inc
mov
ds
mov
and
stos
mov
xchg
stos
pop
pushl
adc
inc
shl
popa
movl
sub
repz
ret
imul
sub
les
add
sub
or
adc
pop
cmp
lock
hlt
push
inc
add
aam
or
xchg
push
std
es
inc
loope
enter
or
lock
pusha
and
in
lds
xor
jmp
iret
pop
cmpl
and
and
sbb
daa
and
and
das
and
add
jecxz
add
jbe
jbe
mov
shlb
and
mov
cmp
shlb
add
mov
push
test
adc
push
out
ja
incl
push
cmp
jns
sbb
mov
sbb
cmc
dec
cmp
test
add
jmp
add
ds
add
cmp
decb
ret
fdivrp
ds
cli
out
ds
add
cld
or
mov
push
or
add
test
push
test
push
add
les
pop
xchg
mov
push
test
int3
jbe
inc
jmp
inc
je
ror
pcmpgtb
jb
xchg
and
incb
add
add
inc
adc
popa
jmp
pop
rol
and
fsubs
shr
adc
add
inc
or
mov
add
add
hlt
cwtl
mov
sub
mov
xor
fisttpl
xchg
mov
or
mov
add
sbb
and
mov
sbb
add
sbbb
add
ret
in
movl
or
mov
nop
and
xlat
mov
iret
lret
xlat
ret
das
jle
jp
daa
fsub
push
sub
rorb
out
push
push
into
pop
push
iret
or
inc
or
adc
xchg
dec
push
in
push
pop
std
jb
sbb
adc
adc
push
paddsb
add
pop
cmc
mov
outsl
inc
je
incb
subl
or
aad
sub
into
mov
rolb
aas
test
sbb
mov
and
push
or
out
dec
xor
push
pop
hlt
lret
in
push
cld
adc
mov
rolb
xor
adc
imul
adcl
add
push
test
or
mov
and
add
add
test
jmp
add
or
inc
sub
sbb
inc
sub
ret
push
cld
add
push
xchg
aad
add
push
lea
test
mov
out
jbe
mov
inc
ljmp
add
cmp
add
xchg
pop
pop
adc
add
loop
in
jo
mov
adc
push
lcall
adc
push
cmpsl
mov
add
sub
lods
inc
out
add
ficoml
aas
out
inc
je
rol
mov
pop
xchg
or
pushl
xor
push
add
push
dec
into
repz
push
lret
imul
push
daa
pop
cltd
std
rcrb
and
lea
ss
cmc
xchg
ds
fildl
add
add
aam
add
add
out
cwtl
out
pop
mov
lds
scas
jle
add
movsb
jae
pushf
in
out
aas
xchg
pop
pop
dec
jg
add
ret
out
test
add
cmp
pusha
lret
icebp
pop
cmp
sub
mov
add
push
xor
in
mov
sti
add
mov
int3
mov
add
add
xchg
dec
pusha
sti
add
add
pop
mov
pop
andl
pop
cmp
push
lea
sub
jne
out
pop
xchg
cmp
xor
in
mov
add
jmp
in
inc
or
jecxz
pop
int
mov
push
jg
add
add
add
jmp
in
call
bound
adc
xchg
jg
push
push
inc
jae
pop
mov
outsl
enter
imul
sub
xchg
in
mov
movsb
hlt
aas
jmp
addb
inc
and
addb
inc
and
jl
and
mov
jl
and
add
add
inc
and
add
inc
and
push
add
addb
mov
mov
fdivr
add
call
daa
cltd
and
gs
push
jge
and
out
mov
mov
or
add
pop
and
stos
rorb
cltd
jg
and
jg
lea
rsqrtps
jmp
xor
shlb
sbb
dec
pop
call
mov
xlat
js
adc
dec
sar
and
pop
push
and
or
or
push
xchg
mov
xchg
push
sbb
lea
xadd
push
adc
hlt
andb
mov
jae
mov
mov
xchg
in
test
mov
dec
push
fstpt
out
pop
dec
mul
inc
jae
aas
test
add
add
mov
je
add
mov
enter
adc
dec
sbbb
add
rcll
ret
pusha
jp
and
jnp
mov
mov
mov
mov
mov
andb
roll
push
add
loop
mov
roll
fs
popf
push
adc
mov
rol
and
add
add
mov
inc
stos
pop
pop
and
ret
shlb
add
add
cmp
jb
add
jb
pop
mov
or
mov
cs
out
subb
sti
gs
and
push
loopne
rolb
adc
insl
and
pop
cmpsl
and
call
aaa
and
roll
add
pop
mov
and
outsb
scas
lock
add
addr16
in
push
jmp
icebp
sbb
bound
inc
int
jl
adc
push
add
dec
ret
out
jns
or
pop
enter
movl
add
cmp
dec
inc
xchg
add
mov
add
xlat
cmpl
and
xchg
cld
cmpl
inc
dec
mov
and
add
pop
jle
ljmp
int
add
movsb
orl
cli
and
gs
test
pop
rorb
add
cmp
mov
fldt
mov
mov
cmp
mov
mov
mov
gs
sub
add
ror
or
call
sbb
cli
das
cmpb
sbb
addl
cs
mov
and
inc
or
out
inc
std
mov
or
mov
popf
jecxz
sbb
mov
jb
inc
out
mov
out
add
lea
pop
lock
xor
adc
sar
add
iret
testb
and
cmpsl
add
pop
add
and
in
lcall
stc
xor
out
in
adcb
imul
out
sar
inc
mov
lret
xchg
clc
imul
xor
jp
dec
mov
pop
xorl
add
add
add
cmp
add
adc
shr
loope
add
addb
pshufw
push
pusha
sahf
push
lds
addb
sbb
call
sbb
mov
xor
push
adc
dec
pop
pop
sahf
push
call
jb
test
call
or
aas
jmp
in
inc
add
outsb
bound
add
jmp
mov
lea
mov
sbbb
jnp
and
or
jl
push
ss
push
xchg
mov
and
mov
add
cmp
add
push
push
jno
in
xchg
sbb
shrl
push
movb
add
dec
and
jmp
push
decb
jl
icebp
out
movsl
pop
insb
inc
and
add
shl
dec
call
mov
mov
cmpxchg
and
xchg
out
pop
adc
out
mov
pop
sub
cltd
sbb
mov
mov
add
xor
mov
adc
ret
xor
mov
dec
push
jae
in
movhps
mov
push
test
rcrl
shlb
ret
and
aad
and
sub
out
jle
lret
cli
inc
inc
ret
cli
xchg
js
add
pop
mov
sahf
push
outsb
iret
lret
dec
mov
out
jno
out
imul
and
fldl
pop
rolb
and
sub
out
jno
mov
dec
stos
daa
out
add
or
pop
es
mov
dec
and
add
fimuls
pop
add
out
jp
mov
mov
test
sti
out
sbb
out
cmp
dec
mov
subl
call
add
addl
stos
add
fwait
lock
jmp
jmp
add
cltd
pop
dec
je
insl
std
addb
mov
mov
outsb
fwait
ljmp
xor
or
push
cltd
sbb
add
dec
add
dec
mov
push
inc
dec
icebp
std
std
push
push
xor
mov
add
mov
movsb
rcll
addb
loope
mov
cmp
dec
add
jl
je
andl
inc
rcll
dec
cmp
inc
push
stos
cmpl
mov
pop
stc
mov
and
mov
inc
lods
inc
std
mov
sti
je
enter
mov
and
jo
mov
dec
and
lret
js
dec
cmp
add
add
shll
sub
adc
push
ds
add
inc
mov
push
add
jle
add
dec
mov
js
dec
or
lods
push
cmp
push
inc
out
js
nop
adc
or
out
in
mov
les
mov
pop
pop
adc
push
je
ftst
sti
out
add
cld
jb
cld
mov
sub
andl
add
inc
filds
mov
mov
loope
sti
pop
stos
test
xor
or
imul
pop
mov
aaa
push
adc
push
cli
xchg
cmpsl
add
xlat
std
aam
dec
cmp
std
pop
loope
adcl
xor
add
adc
out
mov
push
aad
xor
xchg
into
ljmp
lods
sbb
mov
bound
pop
std
cmp
xchg
sti
arpl
ljmp
mov
jns
test
loop
inc
testl
adc
push
cld
fiadds
mov
sbb
daa
pop
or
and
mov
dec
lcall
cmp
add
adc
das
mov
movsl
test
or
js
out
popa
xchg
pop
mov
jl
mov
in
mov
mov
sub
xor
das
sub
and
mov
pop
adc
add
lods
fcoms
mov
xor
jae
popf
mov
adc
and
push
add
mov
je
cld
aam
aas
adc
mov
mov
adc
jecxz
push
sahf
push
aas
jae
sbb
cmc
mov
sub
add
add
push
mov
test
add
add
dec
rcll
jns
mov
push
mov
dec
push
add
sbb
shrb
mov
loop
xchg
pop
lcall
adc
lock
pop
dec
jae
in
jge
adc
xchg
int
ljmp
test
jne
pop
shr
or
add
inc
add
fsubrs
add
xchg
cmp
add
cli
sahf
add
dec
std
test
dec
cmp
rcr
int
mov
push
stc
stc
and
mov
cmpsl
test
incl
inc
std
push
cmpsb
testl
dec
inc
mov
jae
sbb
out
sub
add
jno
add
inc
ja
out
jl
xchg
imul
stc
movsb
sub
out
jl
mov
sbb
aas
out
inc
dec
dec
lret
aas
out
or
lods
insl
add
mov
imul
fisubl
dec
inc
out
lock
and
out
xchg
stos
jbe
mov
push
pand
add
pop
inc
adc
add
fimull
add
dec
sbb
into
push
repz
add
inc
jecxz
les
inc
popf
movsb
ret
cmp
testb
adc
mov
add
in
sbb
fisttps
add
repz
dec
es
sti
incl
decl
inc
mov
cmovge
jmp
and
into
loopne
add
inc
std
gs
add
jno
imull
pop
clc
stc
stos
in
sub
and
in
imul
or
stos
in
subb
inc
xorl
call
movsb
std
cld
mov
in
add
xchg
mov
or
mov
xorl
add
arpl
add
ljmp
jmp
jle
cld
lcall
hlt
inc
jle
shlb
xor
xor
adc
add
sarb
add
lds
mov
fs
call
pop
pop
pop
ret
int3
mov
in
push
add
add
add
push
push
inc
std
imul
add
gs
pop
jb
std
imul
add
iret
add
lea
clc
call
jno
add
aad
das
imulb
mov
inc
std
nop
pushf
pop
aam
sub
andl
notb
out
jp
data16
push
out
dec
inc
fildll
mov
mov
jge
out
add
out
hlt
test
add
aam
paddw
ljmp
add
fiadds
add
add
sub
out
lahf
inc
std
xchg
pop
inc
push
aaa
mov
push
rclb
adc
sub
cmp
pop
add
jg
ds
inc
pop
aam
xor
add
jle
mov
inc
aam
inc
rorl
cs
push
jg
mov
fs
repz
repz
mov
pop
or
or
add
decb
sub
add
add
adc
cmp
sub
mov
sub
rol
pop
out
add
fcoml
add
lahf
inc
jecxz
cmp
add
out
cmp
popa
push
fistl
daa
add
lods
jmp
sahf
xlat
pop
push
xlat
inc
push
cmpsl
mov
inc
jmp
out
inc
inc
mov
mov
pop
mov
add
cmp
imul
add
add
mov
scas
cmp
adc
lock
rol
jnp
aam
inc
jmp
in
jno
ret
inc
pop
loope
mov
fdivrs
std
roll
cld
mov
in
mov
in
rcrb
dec
dec
cmp
sbb
adc
pushl
ret
mov
shlb
cmpsl
les
cmp
add
add
xor
inc
out
dec
gs
lret
mov
enter
dec
in
insl
push
add
xor
jo
cmp
xbegin
add
mov
mov
inc
dec
xchg
stc
shlb
or
ljmp
push
cld
adc
lea
fstl
add
add
xchg
fimull
aas
out
add
fimull
inc
out
xor
adc
sti
aaa
shlb
sti
nop
ret
mov
sub
inc
jae
notl
sbb
adc
push
mov
mov
test
scas
add
daa
sbb
xor
orl
and
call
bound
sub
lods
jno
push
pop
add
jl
out
cld
dec
nop
mov
cmpsl
sbb
add
shrb
aad
out
cmpsl
scas
out
mov
cmp
aad
adc
add
testl
repz
inc
add
dec
cmpsb
into
jno
popw
jae
out
pushf
fadds
add
add
out
hlt
pop
test
add
adc
add
push
xlat
cmp
sub
cmp
cmp
xchg
add
inc
or
jmp
in
push
inc
jmp
or
adc
adc
cmp
jmp
daa
adc
movsb
aaa
mov
pusha
roll
rep
in
add
stos
in
fmull
cld
repnz
in
xchg
imul
das
mov
mov
inc
jmp
in
sbbl
mov
ljmp
call
in
inc
jmp
movsl
cmp
into
pop
inc
je
jge
clc
jne
push
push
push
imul
ret
add
rolb
or
sti
mov
movsl
rorl
loop
cli
incl
add
add
cld
incl
rorb
inc
cld
incl
jo
es
jmp
mov
psubd
cld
inc
notb
pusha
lahf
inc
std
mov
test
jo
aad
add
lea
call
cmp
push
test
dec
stc
inc
mov
ss
mov
or
sub
out
in
add
mov
add
add
add
cs
js
fiadds
push
cwtl
cmp
cmp
mov
jae
sub
mov
test
fsubs
xor
sub
std
mov
scas
out
inc
or
or
daa
pop
movsl
daa
add
pop
and
lods
sub
call
scas
jl
sub
add
add
out
mov
mov
iret
mov
addr16
call
mov
jbe
out
sbb
les
aas
lods
ljmp
cmp
out
movsl
inc
out
daa
lret
xor
or
stos
mov
mov
pop
push
adc
sbb
dec
pop
inc
adc
add
scas
jae
rcll
daa
add
xor
ret
fisubrs
mov
jmp
mov
cmp
lret
push
out
add
cld
xor
jae
outsl
enter
loopne
cmp
lock
shlb
mov
stos
addr16
xor
shr
std
inc
outsb
daa
pop
stos
call
test
add
xchg
sbb
mov
addl
xchg
mov
ffree
call
jae
test
mov
frndint
fdivrl
je
popa
mov
call
adc
adc
and
xor
push
push
mov
pop
xchg
in
push
mov
push
dec
mov
xor
inc
push
pop
push
call
in
rolb
add
mov
add
add
or
add
add
cld
push
out
adc
std
test
out
cld
mov
or
or
repz
cmovo
mov
daa
dec
std
sub
pusha
add
inc
out
mov
push
dec
push
stc
aad
shl
push
mov
push
sub
stc
movsb
sbb
add
cmp
aam
mov
dec
pop
push
mov
or
cmp
mov
test
stos
sbb
jae
sbb
fsubrs
test
lcall
js
add
scas
negl
or
test
jl
sbb
aaa
inc
cwtl
jecxz
cld
sbb
test
push
xorb
js
rcll
sbb
stos
add
fisubs
inc
out
add
add
add
add
add
unpckhps
inc
pop
xlat
pop
cmpsl
les
sub
add
sub
cwtl
jle
sub
dec
sub
rolb
add
push
pop
adc
pushl
shrb
out
jg
mov
out
hlt
lahf
fadd
mov
add
add
cmc
insl
xchg
cmp
test
or
cmp
add
add
cmp
add
cwtl
add
loope
jae
xor
cltd
push
das
std
add
fwait
jmp
in
mov
std
pop
sar
bound
pop
push
jl
test
or
jmp
movsl
add
jmp
in
sbb
mov
pop
add
jmp
mov
cld
xchg
pop
ret
pop
pop
xchg
divl
xchg
sti
pop
add
popa
ret
outsl
sbb
xor
jp
insl
mov
xchg
inc
xchg
insl
mov
add
aas
adc
add
inc
es
push
lea
jae
mov
dec
mov
dec
ljmp
or
jne
xchg
mov
pop
call
xor
call
jne
imul
mov
add
mov
test
jno
dec
push
jnp
jo
loopne
lods
xor
imul
in
mov
dec
in
arpl
cli
jmp
dec
movsl
mov
lds
testl
mov
out
out
add
insl
mov
jno
clc
out
pop
mov
aas
js
add
xchg
add
add
add
out
jne
ljmp
aas
out
xor
dec
sar
pop
dec
add
jo
jmp
add
mov
sbb
or
rorb
in
add
inc
add
out
iret
mov
cmp
sbbb
pop
jns
or
cmc
bound
add
add
add
add
andb
ret
cmp
shrl
sti
xor
idivb
mov
stos
aam
mov
jmp
inc
jecxz
sbb
add
out
cmp
jno
fsubrs
rcrb
cmovl
out
fs
lea
mov
sbb
mov
add
mov
lahf
add
sbb
lret
push
mov
pop
jae
ja
inc
add
ret
mov
das
addl
jnp
adc
cld
test
je
outsl
inc
call
jb
test
mov
jbe
push
cs
movb
and
sbb
sbb
test
jecxz
add
add
pusha
scas
out
jnp
cld
mov
inc
je
mov
and
cmc
jmp
xorb
les
ljmp
xor
push
or
imul
nop
inc
std
adcb
pop
mov
push
pop
leave
cld
sub
push
aad
jl
push
sub
jge
push
push
or
push
les
test
out
ljmp
add
sub
ds
ret
sub
add
pop
lock
inc
into
fisttps
into
push
or
add
add
sbb
sub
add
out
orb
sbb
rcrb
xor
stos
sbb
lcall
sbb
sbb
add
mull
xor
ljmp
or
push
cli
dec
or
inc
adc
cmc
loop
sub
sbb
add
mov
mov
add
inc
out
addr16
stos
ret
push
scas
out
aaa
add
push
pushl
push
fisttpl
out
jb
sub
add
movsb
add
add
outsb
lret
in
das
cld
outsl
xor
add
mov
out
dec
stos
jne
or
add
out
cmpsl
mov
jl
inc
cmpsl
pop
js
scas
sti
pop
xor
add
pop
arpl
push
sub
add
in
or
scas
jle
pop
add
and
sub
pop
sbb
out
pop
in
test
add
sub
add
call
pop
clc
add
in
inc
icebp
xchg
daa
jae
cs
notl
flds
add
add
push
push
mov
xor
sub
jmp
in
mov
inc
ja
add
popf
roll
mov
sahf
shll
adc
mov
push
pusha
inc
je
imul
jge
jnp
cltd
xlat
adc
fisubl
push
out
pop
cld
mov
fld
jmp
js
cld
adc
les
add
push
push
pop
push
ds
leave
mov
std
push
inc
pop
jg
push
mov
call
or
jae
in
out
add
cli
call
pop
add
add
mov
out
and
cli
test
outsl
and
hlt
adc
sub
std
mov
push
test
cmp
push
decb
add
jne
test
add
add
add
add
fildll
mov
jmp
xor
push
pop
imul
icebp
dec
sbb
xor
adc
out
xchg
sub
push
mov
mov
add
rcl
in
add
inc
pop
insb
sbb
sbb
test
pushf
sub
aad
int
push
fnstenv
cmp
cltd
daa
clc
data16
or
sbb
push
nop
std
testb
add
stos
inc
adc
incl
movsl
addb
arpl
aad
mov
or
adc
add
mov
jp
jnp
call
in
sub
loopne
and
rcrb
sarl
and
lret
test
adc
add
add
out
bnd
add
jl
call
xchg
out
int
movl
ja
dec
jg
cmp
out
roll
ret
aam
call
xor
jmp
add
hlt
test
inc
jmp
and
cmp
jmp
add
int
lcall
aas
jmp
add
add
add
mov
lret
mov
push
adc
sub
adc
jmp
outsl
add
insl
sub
jmp
mov
addr16
out
add
cwtl
fisubrs
leave
and
out
add
aaa
add
mov
cld
adc
mov
xor
mov
std
xor
add
add
jmp
or
lret
ljmp
inc
std
movlps
add
lock
mov
std
imul
inc
daa
call
or
pusha
out
jge
imul
sti
je
cmp
adc
jno
into
push
incl
cld
stc
out
push
xchg
sub
add
mov
jl
add
add
push
adc
add
maskmovq
divl
xchg
sub
push
test
lahf
lock
sub
daa
inc
jge
out
add
out
shll
lods
inc
inc
mov
imul
inc
out
adc
xlat
mov
je
in
add
jg
xchg
adcb
jo
cmp
out
fdivr
fcomps
jle
jecxz
call
cltd
inc
out
add
fadds
loopne
cmp
xchg
sti
pop
ja
daa
out
out
jae
ljmp
and
push
mov
and
ljmp
mov
mov
faddp
out
push
or
test
lods
sub
sub
add
sbb
enter
add
add
add
xorb
add
fistps
aad
or
jg
or
add
mov
js
and
daa
adc
adc
icebp
and
or
pop
stos
jae
in
mov
or
jnp
int
mov
jb
sarl
adc
jecxz
je
pop
mov
mov
lods
cld
add
add
add
xchg
push
pop
hlt
out
movsb
and
fistps
shrb
push
ja
movsb
and
jmp
inc
push
std
std
test
cld
xchg
into
xchg
and
into
ss
pop
push
mov
push
je
sti
sub
test
add
inc
jmp
dec
hlt
inc
std
out
dec
cld
jns
je
ds
inc
sub
pop
pop
inc
lahf
loopne
mov
sti
dec
push
pop
pop
repz
fmul
out
or
sbb
push
ss
adc
std
mov
in
dec
xor
inc
std
dec
push
push
push
adc
pop
xchg
movsl
in
jae
cmpsl
inc
stc
jle
mov
jae
test
cmp
out
add
fs
jae
stos
sbb
shll
jb
stos
cmp
dec
dec
test
jmp
test
out
adc
sbb
cmpsl
sub
mov
std
and
leave
xlat
add
sub
mov
mov
xor
add
imul
or
sub
push
movsl
sub
mul
jl
inc
out
ja
xor
lcall
add
out
or
sub
push
pop
imul
jmp
push
and
add
insl
cmpsl
inc
push
add
test
repnz
sub
inc
or
pop
subb
fldt
cmp
idivl
icebp
cmpsb
add
mov
imul
daa
aam
clc
sahf
adc
add
shrl
push
iret
mov
dec
xchg
mov
shrl
pusha
xabort
es
mov
mov
imul
add
add
out
sbb
mov
mulb
add
mov
pusha
mov
xor
mov
aaa
std
push
dec
inc
or
jmp
xchg
arpl
das
mov
shl
jb
add
mov
adc
jmp
or
jne
or
sub
bound
sub
sahf
or
test
lret
sbb
jae
data16
jmp
push
mov
add
inc
sub
cs
out
hlt
add
add
xlat
or
add
lock
aaa
test
add
add
dec
mov
sbb
add
leave
push
or
jmp
add
stc
dec
in
add
add
mov
sub
incl
jae
push
push
and
sbb
addl
cld
sbb
incl
out
or
cltd
test
jae
pop
inc
jmp
xlat
movsl
and
push
add
add
sub
xchg
pop
lret
dec
xchg
cmp
arpl
or
ja
in
push
cltd
mov
or
aad
cld
xchg
and
and
sub
call
add
sub
add
cmp
loopne
inc
or
out
mov
xor
aad
push
mov
xor
mov
add
enter
daa
cmc
ret
out
and
popa
lret
clc
mov
leave
nop
mov
pop
scas
jmp
and
pop
and
sbb
cwtl
adc
inc
cltd
loopne
mov
inc
shlb
jmp
movsl
pop
xchg
add
movb
test
or
sub
rolb
cwtl
in
sub
add
loop
and
dec
fimull
add
shrb
and
sarl
sub
push
jae
cld
fadds
jmp
pusha
inc
ret
mov
jge
sub
sbb
adc
jo
jb
lahf
adc
mov
cmp
jg
mov
int
sti
push
icebp
mov
jmp
adc
jae
mull
sbb
add
add
movsb
xchg
adc
scas
sub
push
push
xor
push
out
pusha
popf
add
inc
rorb
adc
xor
repz
lods
aad
push
std
stc
cli
je
jle
add
mov
mov
cmp
add
add
push
mov
daa
je
mov
push
add
dec
xchg
test
jnp
test
jl
push
jecxz
xor
std
add
out
pop
dec
push
call
and
add
mov
jne
out
lcall
divps
rclb
dec
adc
add
cmc
insb
mov
add
xchg
sub
and
mov
dec
inc
push
test
or
arpl
jae
mov
shll
test
shll
fcompl
cs
jno
xchg
lds
cld
pop
adc
test
movsl
repz
add
lcall
call
arpl
xchg
push
lea
mov
jl
out
icebp
pop
std
fs
or
cltd
rcl
pop
cld
pop
mov
jb
call
add
push
adc
in
mov
shlb
xor
into
mov
xchg
fimuls
arpl
shr
lea
dec
and
pop
call
cwtl
dec
mov
mov
jo
in
mov
inc
mov
sti
mov
mov
jecxz
addb
sti
cmp
push
vpshaq
mov
icebp
jg
push
jnp
add
push
pop
or
mov
cmp
dec
mov
aaa
mov
lret
fisttpl
push
loope
or
jecxz
jbe
xchg
inc
mov
mov
push
ret
pop
pusha
inc
je
jge
mov
shl
fxch
cld
fmull
repnz
jmp
gs
sti
in
or
fcomip
lds
push
cmovns
add
mov
mov
xor
mov
xor
and
sbb
xor
mov
push
test
add
sbb
repz
add
adc
lds
dec
cld
adc
add
jnp
dec
xchg
insb
and
add
adc
je
dec
or
add
add
imul
and
fdivl
push
cmc
sbb
out
sub
dec
or
aas
out
std
call
cmpsl
sub
inc
out
rclb
out
pop
fldl
std
repnz
out
aas
out
aas
je
mov
jns
sbb
out
aas
out
cmp
and
add
sbb
or
mov
sub
inc
add
sbb
repz
rcr
mov
dec
mov
out
add
mov
xor
xchg
adc
dec
jecxz
add
pop
sbb
cltd
out
mov
adc
push
icebp
ret
out
negl
std
cmc
xor
cmpsb
add
add
repnz
mov
mov
add
add
adc
mov
cmpsl
push
mov
mov
xor
xchg
mov
nop
testb
add
fsubrs
ljmp
jg
or
mov
imul
add
jle
pop
aas
stos
dec
add
jle
pop
jmp
out
xor
xchg
add
in
dec
fxch
shl
jmp
xor
push
add
jmp
addr16
icebp
addr16
or
jmp
rcll
add
mov
pop
fistpll
aas
jmp
int3
hlt
mov
lahf
int3
adc
jmp
rclb
sbb
jl
loop
test
scas
or
cmpsl
add
test
xlat
inc
add
xchg
dec
adc
or
add
add
push
dec
jnp
cli
adc
rorb
add
jg
add
add
push
dec
arpl
test
lea
orb
incb
jg
mov
push
cmp
add
mov
les
jmp
call
or
jg
addl
add
aas
add
orb
dec
push
std
pop
pop
push
inc
out
sub
xchg
inc
or
repnz
inc
out
in
arpl
pop
add
daa
fisttpll
orl
jns
add
popf
loope
std
dec
mov
loopne
faddl
bound
or
cs
loopne
std
fcmovb
lock
out
or
sbb
add
mov
popf
push
daa
sbb
sarl
aaa
sbb
add
cltd
inc
add
repz
mov
add
in
testb
add
sbb
in
fdivr
testl
add
add
add
stc
mov
call
sbbb
add
push
into
or
mov
repnz
add
and
fdivrs
push
out
gs
adc
xor
pop
mov
mov
mov
mov
mov
mov
mov
xchg
ret
mov
and
fs
std
push
mov
mov
icebp
mov
jl
out
insb
repz
jno
add
orb
add
clc
adc
add
je
stc
xchg
and
icebp
xchg
and
push
movlps
cmpsl
decl
jmp
repz
rcrl
std
fimuls
je
insl
add
je
je
fbstp
aas
jmp
xchg
jl
xchg
out
mov
aas
push
aam
rclb
or
jo
mov
xchg
icebp
mov
jnp
cmp
add
jle
jns
cmp
xor
push
pop
ret
or
aad
out
fnstcw
and
sti
je
add
cmp
ret
push
push
daa
push
and
and
pop
mov
das
incl
dec
pushl
and
push
test
or
lcall
cmp
and
jbe
xor
add
add
add
jmp
ljmp
mov
addr16
fiaddl
subl
sbb
mov
insb
into
jle
xlat
imul
outsl
sbb
jae
pushf
arpl
movsb
sbb
aas
out
imulb
pop
add
fdivr
add
test
and
and
mov
push
xor
incl
add
add
sbb
sbb
daa
sbb
mov
outsb
clc
sbb
push
rcrl
js
cmp
pop
shll
sbb
inc
aam
fs
in
cs
push
call
mov
inc
xchg
dec
es
daa
data16
mov
cs
fstl
add
clc
iret
push
inc
adc
pmaddwd
out
std
xchg
repz
in
aam
rorb
or
add
add
mov
add
call
add
jmp
push
cmpsb
mov
adc
jmp
punpcklbw
push
xchg
sbbb
scas
cld
pop
in
inc
jbe
fucomip
sub
push
mov
push
inc
inc
jo
out
insl
pop
std
insl
mov
negl
outsb
adc
in
inc
push
pop
push
std
cld
mov
or
jl
pop
inc
fs
cld
jmp
dec
push
lcall
adc
in
add
jmp
xchg
scas
push
jmp
xchg
cmc
mov
jle
jl
jp
push
mov
mov
cmp
jno
addl
add
addr16
pop
adc
ret
jae
test
inc
insb
add
pop
call
mov
cmp
add
xor
stc
add
xor
jge
or
cmc
test
add
cmc
daa
push
add
cmc
sub
mov
add
xchg
cs
or
popl
mov
add
add
cld
jmp
sahf
and
sbb
mov
out
cmpb
push
mov
xor
out
movsb
in
add
out
mov
pop
and
cmp
push
test
fisubl
fnstsw
lahf
add
out
jmp
ljmp
inc
in
push
repz
sbb
in
add
out
loope
daa
and
and
and
cmpsl
add
add
out
in
xor
add
add
inc
stc
jne
add
ret
stc
push
pop
dec
add
sbb
popa
add
inc
daa
inc
jmp
insb
mov
test
add
jae
addr16
js
adc
call
xorl
mov
pusha
repz
add
add
idivl
add
icebp
nop
inc
jno
cmp
test
add
add
ret
out
out
and
jmp
fiadds
out
xor
adc
arpl
flds
add
jb
push
sub
imulb
call
and
divl
dec
add
dec
inc
mov
jne
cmp
jno
jg
fwait
mov
imul
push
cs
popa
sub
sarb
test
add
add
jecxz
enter
jecxz
push
adcb
add
into
jge
imul
mov
xor
outsl
sub
xchg
icebp
or
imul
push
cmp
add
add
xchg
imul
insb
add
push
rolb
clc
xor
mov
mov
jb
xor
cmc
cmp
add
add
sarl
push
sbbl
into
out
adc
je
in
push
ret
cmp
addr16
add
mov
push
pop
int
mov
jle
push
adc
pop
int
cmc
and
data16
cwtl
xor
or
mov
lcall
push
pop
xchg
and
pop
test
add
jecxz
scas
in
xchg
pop
mov
lcall
sbb
xor
jle
xchg
add
add
data16
or
add
fildl
and
add
gs
add
pop
add
pop
add
gs
add
gs
add
gs
add
add
add
add
add
subb
lret
cld
imul
aaa
xchg
sti
xor
sub
rorb
call
hlt
lea
adc
stc
or
mov
ja
sarb
in
sbb
jo
insb
cmp
dec
popa
mov
or
or
ja
cmpl
fldt
std
sbb
gs
shlb
outsb
rolb
les
fiadds
mov
out
dec
adc
in
in
mov
pop
ret
aas
add
dec
mov
pop
es
xchg
jne
jo
es
mov
push
pop
out
jnp
mov
and
adc
or
pop
verw
fs
stc
fisttpll
push
insl
push
add
loop
or
jmp
xchg
dec
pushl
and
jmp
and
xchg
or
incb
adcb
add
jg
push
or
mov
dec
adc
dec
cmp
mov
inc
inc
add
cld
or
adc
sldt
add
or
add
jle
inc
add
cld
or
adc
psubq
or
dec
mov
cmp
jo
test
loope
mov
and
mov
push
xor
test
out
js
fsubs
ret
test
stc
andb
fs
adc
adc
cld
rolb
cmp
ljmp
mov
cmc
add
mov
incb
std
cwtl
push
or
scas
add
ljmp
out
stc
jge
fsubr
add
and
enter
jg
loopne
jae
mov
inc
inc
daa
mov
or
dec
idivb
insb
inc
fwait
adc
cmp
shrl
out
icebp
mov
fildl
addr16
js
lods
lock
out
mov
or
repz
sbb
out
outsb
dec
fcmovnu
and
idivl
ljmp
dec
add
outsl
inc
out
int3
mov
cmp
loopne
jb
jl
lea
loopne
ljmp
jecxz
roll
or
add
add
add
add
sbb
mov
xchg
stos
inc
and
cltd
inc
adc
inc
and
xchg
inc
or
movsl
xchg
incl
scas
in
aaa
movsl
or
or
push
pop
jnp
jb
adc
popf
mov
push
sub
loopne
subb
and
push
inc
adc
add
jo
xorl
add
push
and
jmp
loopne
clc
add
addb
add
ja
cld
pushl
push
jmp
sarb
stc
jge
or
leave
cs
icebp
fnstsw
iret
jns
pop
inc
mov
inc
and
testb
sbb
sub
add
add
cld
cmp
sub
cld
decl
or
jnp
and
cmc
std
xchg
les
test
cli
cld
fdivrp
mov
inc
out
add
and
hlt
decl
fildl
fs
clc
cld
addr16
divl
imul
fwait
insl
cmp
loop
add
mov
xor
lods
or
ja
add
and
ljmp
stc
cmp
jg
out
add
sub
std
out
filds
add
mov
bound
add
lods
mov
or
ljmp
out
add
and
stc
out
add
add
mov
xor
or
mov
or
inc
leave
orb
sub
stc
inc
cmp
add
andl
or
add
or
in
add
orl
ret
bound
frstor
inc
push
gs
lea
out
ret
xor
mov
fucomip
into
mull
cmp
mov
testb
push
mov
add
adc
out
outsl
sti
cld
imul
add
add
inc
fucomi
rorb
in
clc
mov
sub
inc
adc
dec
mov
enter
gs
xor
dec
adc
shl
std
outsl
adc
sti
mov
das
xchg
adc
lcall
jmp
inc
jns
jmp
nop
mov
cmc
mov
mov
daa
add
std
mov
stos
insb
shlb
mov
sub
decl
test
insb
aaa
sar
in
push
push
add
into
cli
or
mull
or
in
add
adc
or
pop
pop
add
xchg
or
mov
or
add
in
lds
je
push
dec
adc
adc
jmp
ds
or
cmp
push
add
loope
call
shr
dec
out
mov
mov
jecxz
inc
pop
fsubrs
out
cmp
call
ljmp
out
inc
add
insl
stc
dec
mov
js
fs
inc
je
mov
sub
inc
push
je
mov
add
add
mov
adc
add
sub
movb
in
push
mov
mov
in
dec
test
test
in
mov
in
and
pop
jo
dec
pop
jo
dec
sti
adc
js
dec
out
mov
inc
std
adc
movsl
dec
icebp
add
sbb
adc
push
and
add
jmp
and
push
or
push
mov
or
fiadds
out
mov
out
mov
mov
cld
jbe
mov
or
out
loopne
lods
add
in
roll
out
add
add
sbb
idivl
call
jmp
divb
fs
inc
xor
mov
add
fcmovu
add
in
andb
add
imul
add
cs
push
icebp
dec
fdivrp
call
mov
andb
xor
sbb
loopne
inc
push
loop
in
stc
call
test
or
cld
jmp
testb
add
add
add
stc
decb
inc
jno
add
mov
jle
movb
in
mov
add
stc
std
push
add
add
testl
add
inc
push
or
jae
stc
std
je
xor
xor
cmp
jl
push
adc
pop
xor
xor
movb
out
mov
cmp
add
mov
inc
addb
add
add
jno
dec
testl
clc
xor
aad
jmp
cmp
cmp
jo
sub
adc
add
addr16
pop
out
xor
in
xchg
ljmp
sbb
add
sub
mov
or
out
cmp
out
test
out
ljmp
mov
mov
cli
mov
add
add
or
and
inc
ljmp
jmp
xchg
add
add
mov
or
add
add
cmpl
jecxz
mov
iret
sbb
lock
adc
adc
addr16
loopne
test
and
or
fdivs
cmpsl
pushaw
cmp
addr16
in
pop
jo
cmc
add
in
pop
inc
inc
mov
sub
jg
or
out
in
pop
fs
fisubrl
outsb
aas
add
shll
inc
outsl
icebp
mov
add
popa
mov
daa
jge
das
sub
push
lret
lds
out
in
add
imul
in
inc
mulb
or
in
inc
call
shr
out
add
mov
and
and
cmp
add
fs
push
out
imul
inc
call
in
addb
lock
cmpsl
stos
repnz
jmp
popa
movsl
sti
dec
add
inc
add
pop
in
or
add
roll
wrmsr
les
out
mov
add
add
sbb
add
sub
decl
std
sub
jnp
shl
add
xchg
repz
ljmp
mov
xor
inc
std
sub
add
ds
or
dec
sub
inc
dec
push
add
sub
sti
pushl
xchg
or
jmp
stc
mov
add
add
fsubr
adc
sub
xor
icebp
loope
add
pop
lds
out
les
pop
add
out
js
lret
fisubrl
insb
sbb
outsb
aaa
and
nop
rolb
fidivrl
sub
roll
je
pop
jmp
or
out
ds
add
out
mov
rolb
add
jmp
fdivr
out
jmp
lods
add
out
out
daa
jle
lret
addb
xor
arpl
cltd
inc
jmp
or
in
out
lret
lcall
inc
add
mov
jmp
add
dec
icebp
sahf
and
ficompl
push
out
lds
das
dec
jo
add
add
das
cmp
je
lods
int3
add
nop
cmp
add
shll
out
cmp
lea
add
outsb
pusha
lock
jmp
imul
add
or
jmp
int
push
jmp
bound
imul
out
cld
jmp
push
jnp
in
subl
add
jmp
add
add
mov
dec
add
add
jbe
ss
inc
jmp
jmp
out
cld
scas
cmpsb
add
nop
xor
add
ds
add
add
add
jae
cmp
js
push
pop
aas
addb
cld
call
inc
add
cmpsl
lcall
je
jg
add
add
add
mov
out
inc
mov
add
test
cld
incl
inc
add
addb
mov
je
jle
movb
in
xchg
add
adcb
std
cs
push
and
rcl
or
jbe
test
sub
or
push
mov
test
andb
push
mov
add
jb
adc
lret
in
or
cmc
cld
rcrb
push
and
out
cmp
mov
lds
fsubrl
jmp
lock
mov
out
mov
sahf
add
or
cwtl
pop
stc
push
loopne
in
add
fidivl
sarb
mov
lret
ret
mov
inc
in
cli
or
add
and
xor
sub
and
cld
lret
in
out
stos
inc
sti
xchg
pop
bound
pop
bound
lret
adc
ret
sub
sbb
movsb
push
lret
xchg
jmp
mov
adc
add
loop
jge
lret
in
imul
pop
out
addr16
movsb
add
fadds
cmp
push
addl
add
add
js
dec
repz
mov
fs
jecxz
out
jmp
movsb
in
in
add
loop
mov
xor
inc
mov
sbb
add
jmp
shrb
xchg
pusha
sar
xchg
in
cmp
mov
cmpsl
out
out
out
add
inc
stc
xchg
sub
ret
and
pop
inc
add
idiv
call
in
inc
call
test
cld
jb
clc
xor
xor
out
fwait
clc
mov
in
shr
test
in
js
jmp
cli
addr16
decl
in
inc
imul
ds
jg
push
add
inc
bswap
mov
test
push
pop
cmp
add
test
or
jmp
sldt
add
xchg
and
jnp
or
or
cwtl
add
scas
lea
push
jl
call
mov
push
or
or
add
mov
cmp
decl
addb
ret
out
in
cld
loopne
filds
out
jnp
out
jae
or
syscall
add
lcall
loope,pt
test
lock
loopne
sarl
gs
xchg
sbb
jg
loop
adc
add
sub
add
out
jmp
jae
test
lock
sbb
in
xchg
mov
add
out
out
inc
in
inc
add
pop
or
nop
lret
int
imul
fs
bnd
iret
pop
fidivrl
add
out
movsl
dec
in
ror
add
icebp
mov
sbbl
xor
fnstsw
pushf
inc
out
fs
je
adc
add
in
inc
lahf
out
out
out
std
cmc
mov
cmp
add
and
fdivs
cmp
jg
add
sbb
adc
ljmp
jmp
incl
incl
in
vpcmpgtd
jae
sar
and
out
mov
push
repz
sub
loope
out
insl
xlat
add
cld
ds
hlt
cld
push
jno
adc
push
push
cld
ds
or
imul
inc
mulb
inc
jmp
jns
add
cmpsl
scas
outsb
adc
jg
xor
shl
xchg
push
jnp
dec
add
jecxz
add
ret
and
je
mov
movl
or
incl
add
add
std
cmp
scas
std
decl
push
incl
repz
ffree
sbb
lea
push
jmp
dec
fpatan
sti
and
and
out
clc
mov
mov
or
pop
mov
add
out
mov
pop
pop
mov
std
lock
cmp
out
std
mov
fbld
or
add
add
push
add
sub
add
pop
jmp
inc
out
fildl
faddl
or
pop
std
inc
add
in
jb
pop
jmp
clc
mov
add
and
aaa
out
fildl
add
mov
add
jp
cmc
inc
vcmpeq_uqps
pop
int3
idivl
push
cld
mov
add
add
call
and
or
add
fistpll
add
out
out
mov
add
add
cmpsl
jnp
sbb
cld
addr16
jmp
fidivrs
hlt
and
mov
repz
jg
out
jb
jmp
mov
cmpsb
enter
fnstsw
cmp
cmp
jno
std
lret
jo
sbb
push
add
clc
pop
sbb
lods
jns
out
mov
add
cmpsb
sti
mov
aaa
out
arpl
lcall
pushf
dec
out
sbb
mov
jp
frstor
jae
push
and
popl
rorl
out
sub
arpl
add
add
or
inc
mov
sub
cmovnp
out
incl
test
out
out
ds
push
ud2
icebp
lock
test
jle
inc
add
inc
and
pop
inc
and
pop
cmc
cmp
sub
sti
jp
pushl
pop
pop
or
jb
sbb
loopne
jmp
or
mov
add
pop
xchg
xchg
and
pop
lret
ljmp
mov
pop
sub
testb
movntq
jmp
in
ja
into
push
cld
rclb
adc
into
cmp
add
push
inc
adc
mov
inc
adc
jl
jbe
lock
mov
loop
xchg
jecxz
frstor
xor
and
sar
mov
mov
addb
in
jg
mov
jp
or
stc
mov
or
lock
adc
in
sarb
xor
mov
add
cmc
loope
jg
loop
andl
stc
add
shl
mov
daa
jbe
shr
in
jge
stc
ret
cli
outsb
inc
cli
lea
nop
aam
ljmp
imul
lea
clc
les
and
add
pop
roll
cmp
clc
pop
jg
loope
xorb
jge
clc
lret
pop
pop
inc
repnz
xchg
adc
loope
jne
pop
and
in
jb,pn
pop
subl
mov
stc
dec
and
cmp
add
mov
mov
fadds
adc
out
mov
jnp
faddl
je
or
movsb
push
and
sub
jb
sub
cmp
into
cld
mov
fiaddl
or
movsl
div
das
pop
or
cmpsb
mov
adc
popf
cmp
jmp
mov
pop
mov
add
pop
int3
xchg
pop
out
xchg
add
xchg
add
xchg
add
xchg
push
xchg
mov
xchg
add
mov
pop
mov
jg
dec
add
aas
add
mov
add
mov
pop
add
mov
or
mov
pop
sbb
invd
sbb
incl
sbb
insb
sub
sbb
sbb
mov
movsl
insb
sub
mov
lods
add
pop
lods
add
insb
stos
add
insb
stos
add
pop
stos
add
jae
add
stos
add
pop
stos
add
arpl
add
ja
add
stos
add
push
sub
push
sub
push
add
jbe
add
jne
add
je
add
push
sub
bound
add
push
add
add
jne
add
nop
daa
add
nop
daa
add
nop
daa
add
nop
daa
add
nop
daa
add
nop
daa
add
nop
cmpsl
add
nop
cmpsl
add
lea
add
lea
add
mov
in
cmpsl
add
sldt
add
adc
mov
fwait
cmp
stos
pushf
add
add
sbb
jo
andb
or
scas
outsl
int3
mov
and
idivl
aam
jno
fbld
and
mov
add
test
and
shll
in
gs
repz
sti
addl
adc
adc
sti
adc
mov
add
outsl
leave
pop
lods
sti
mov
jb
cld
imul
xlat
outsl
push
test
call
or
aam
orl
out
setno
pop
and
in
xchg
test
fs
inc
jl
add
into
loope
je
xor
lret
push
jg
sub
cld
push
lcall
xor
fidivrs
mov
push
sbb
add
fistpl
adcl
data16
sbb
push
cwtl
cmp
adc
push
and
mov
sbb
add
cld
jo
adc
imul
leave
inc
pop
leave
cmp
mov
push
out
in
mov
add
add
outsb
clc
aas
jne
cld
inc
outsb
jmp
pushl
in
jne
sub
dec
push
jb
xor
add
daa
sarb
in
add
pop
ds
cmp
std
shlb
mov
mov
adc
cmp
mov
hlt
addl
data16
push
mov
out
or
or
pusha
push
add
out
hlt
jg
add
addr16
jb
add
in
out
mov
cs
push
inc
call
or
scas
sbb
add
movsl
pop
sub
inc
daa
cs
pop
pop
in
add
jo
mov
adc
jecxz
pop
movsl
dec
mov
dec
adc
insl
push
jecxz
jg
pop
clc
mov
add
lds
in
mov
mov
mov
mov
jmp
and
xor
jae
fwait
xor
insl
jp
lcall
pop
cltd
jae
pop
pop
clc
inc
jbe
cld
cmp
inc
in
push
inc
idivb
movsb
add
stos
loopne
push
bound
test
mov
in
push
aas
int3
mov
jmp
in
dec
int
loopne
cmp
aam
pop
icebp
lds
bound
lret
out
sbb
cld
movsb
push
cmp
movsb
sbb
mov
and
dec
icebp
pop
inc
add
pop
add
mov
jnp
inc
and
repz
inc
mov
jle
and
pushl
in
mov
mov
dec
add
rclb
std
incl
add
add
sbb
decl
adc
test
test
adc
aaa
push
loop
cmp
xlat
mov
sub
stc
das
add
in
lret
cmp
cmp
mov
add
dec
adc
mov
jle
jns
in
dec
nop
inc
add
out
jp
jns
ja
push
and
pop
bound
std
lret
mov
dec
loope
std
pop
pusha
rorl
dec
les
inc
mov
add
sub
insb
int
fidivrs
sbb
and
popa
aaa
add
fwait
push
sbb
fdiv
mov
push
or
out
call
imul
sub
loopne
cmp
aad
call
dec
ljmp
pop
push
and
add
add
add
mov
add
add
cmp
add
mov
sub
push
inc
add
add
add
fildll
add
push
xlat
mov
cmp
orb
outsb
mov
lea
out
insb
mov
out
daa
inc
out
insb
jmp
es
xor
jmp
adc
push
test
inc
jmp
lahf
icebp
mov
adc
mov
xchg
cmp
jo
faddl
jl
add
cmpsb
xchg
jae
jbe
mov
jbe
hlt
cmp
push
sbb
jb
or
shl
call
lahf
shl
fiadds
iret
xchg
jle
jge
add
or
dec
pop
das
rorb
rolb
test
shl
add
mov
hlt
mov
in
sub
lods
test
xchg
icebp
cmp
call
push
fmuls
jnp
add
mov
pop
jp
ds
inc
enter
add
adc
push
and
mov
jo
sti
mov
mov
adc
jno
cld
jge
adc
jmp
xchg
data16
jmp
jno
push
test
ficompl
pop
mov
mov
mov
and
cld
outsl
in
dec
cmp
pop
or
mov
jmp
pop
gs
out
xchg
pop
fisttpl
add
add
add
out
gs
out
data16
inc
lock
add
outsb
dec
lock
fldl
aas
bound
add
push
inc
hlt
pop
mov
add
mov
fisttpl
mov
in
mov
gs
lock
sub
cmp
or
add
xor
or
add
xor
clc
shl
add
movl
add
add
mov
push
loop
mov
imul
rcl
fcoms
shr
fdivrs
shrb
fsubl
add
fistl
push
fisttpl
arpl
fisttpl
ss
cmp
outsl
lret
in
out
push
sti
push
in
push
pop
out
fs
pop
cmc
mov
lods
in
mov
ret
sti
add
push
add
iret
inc
push
mov
adc
rcr
add
inc
pop
adc
call
mov
fbld
lods
or
xchg
in
das
pusha
sbb
mov
data16
jae
arpl
xchg
cmp
sarb
sub
sar
aas
push
push
mov
sahf
mov
mov
rol
pop
pop
loopne
shlb
mov
fnstcw
push
sbb
insb
and
sub
add
dec
call
inc
mov
not
shrb
shlb
add
inc
in
cmpsb
add
push
xor
in
pop
scas
sti
mov
loope
push
pop
xchg
add
das
shl
add
addl
test
add
add
lret
xor
test
jle
jle
cmpl
int
add
nop
cld
xchg
fisttpll
inc
orl
and
pop
pop
cmp
push
push
xor
jns
fldcw
xlat
ss
push
sub
lds
pop
xor
stc
imul
cs
or
rclb
fldl
jb
or
mov
add
jle
jnp
push
cmp
shr
mov
call
inc
sbb
pop
fdivr
pusha
pusha
les
ret
push
dec
and
mov
cld
inc
mov
mov
cmp
adc
cmpsl
out
lds
out
cmp
and
add
jecxz
das
add
ret
test
fldcw
xchg
push
inc
out
scas
fadds
add
add
adc
subb
cmpsl
jp
pop
jecxz
mov
fbstp
xor
xor
out
jmp
add
add
jmp
sbb
rcrb
orb
mov
pop
xchg
mov
sti
jmp
sbb
cmc
mov
cmp
out
out
and
mov
add
into
xlat
ss
out
jae
mov
lods
mov
in
clc
jo
iret
ss
dec
sub
jp
ljmp
or
and
andl
insb
inc
cld
push
adc
fdivrs
cltd
sar
insl
mov
or
ljmp
xchg
cmp
add
cmp
sub
jl
loope
inc
hlt
add
or
jl
jns
add
mov
sti
lcall
mov
inc
cld
jnp
je
hlt
pop
push
call
gs
add
jns
mov
cmp
sti
pushl
push
add
enter
shll
cs
xchg
inc
addr16
xchg
fsubrs
fsubp
mov
shr
xchg
jns
imul
incb
push
jns
add
fsubl
sbb
sub
ret
testl
out
flds
add
push
popa
mov
cld
mov
sub
stos
in
sar
pop
lcall
mov
add
add
shll
out
fisttpll
push
jno
std
repnz
ljmp
fdivl
pop
movsb
nop
xchg
push
inc
or
sbb
add
jp
jl
push
insb
cmc
mov
pop
mov
out
inc
aaa
aad
inc
cmc
inc
out
stos
pop
les
sub
fisttps
or
imul
push
jg
push
fcomps
movsb
notl
hlt
jle
jae
add
pop
aad
pop
fldl
xchg
add
xchg
movsl
and
stos
and
cli
push
fildl
mov
and
xchg
imul
inc
lret
sub
roll
andb
ret
aam
add
add
cld
out
mov
and
inc
fisttpll
add
add
and
inc
and
xor
xlat
movsb
add
sahf
loop
mov
iret
popa
aaa
sub
dec
push
imul
popa
xchg
out
roll
jge
data16
sub
sub
xor
fucomp
jp
in
les
ljmp
dec
loope
fstpt
jmp
ret
subl
cli
cld
add
add
add
lds
out
fdivr
cmp
mov
dec
ss
in
or
push
jbe
scas
add
add
add
or
dec
dec
or
add
mov
in
call
in
mov
adc
inc
xchg
adc
cmp
cmp
xor
js
jl
cmp
xchg
jmp
add
add
adc
pop
add
sbb
push
cli
imul
mov
jae
cmpsl
rcll
std
andb
hlt
inc
fs
or
cltd
fimuls
mov
pop
add
hlt
aam
or
push
daa
data16
ljmp
mov
ljmp
in
add
pop
icebp
or
pop
dec
test
rep
jne
and
push
shlb
sub
test
clc
add
sub
push
insb
add
jge
clc
imul
xorb
ljmp
out
jle
xlat
dec
dec
in
pop
fstpt
loopne
js
lods
mov
inc
out
and
scas
adc
cld
test
iret
or
out
lcall
fistl
xchg
shlb
rorb
jle
sti
je
lret
xor
add
cmpsb
add
ret
mov
gs
push
shrb
hlt
mov
add
add
insl
movsb
push
cmp
je
subb
cld
mov
sbb
cld
gs
sub
fimuls
mov
mov
sbb
ja
sub
mov
cld
into
sub
cld
sub
push
idivl
fdivrl
inc
subps
push
xor
imul
add
addl
repnz
add
movsl
ret
jp
jge
dec
js
mov
in
call
ffreep
cld
push
mov
push
testl
xlat
sarb
aas
add
mov
add
jle
sti
adc
into
bnd
lea
add
test
add
jg
lret
add
mov
add
fdivs
pop
data16
inc
inc
data16
insb
sti
incl
sti
je
vunpckhps
int
add
or
xchg
mov
push
in
imul
mov
sub
inc
out
push
adc
pushf
add
xchg
clc
dec
nop
jmp
add
hlt
faddp
inc
mov
bound
rolb
xor
xor
jns
out
pop
lds
leave
arpl
xor
jae
cmp
jge
ficoml
lret
cld
ljmp
andl
outsb
adc
pop
sub
xor
cli
shl
out
in
addr16
in
add
daa
inc
or
pusha
inc
ljmp
add
mov
enter
sti
out
out
faddl
add
pop
jecxz
lods
out
xor
cmp
dec
movl
fcomi
out
in
sub
xchg
jle
push
xchg
int3
pop
sub
sti
xchg
gs
add
add
push
sbb
xor
mov
testb
js
sub
inc
out
scas
call
pop
lds
clc
sub
add
hlt
rcl
and
aam
ret
add
mov
xchg
loop
dec
mov
xor
flds
dec
or
mov
push
or
sub
sub
push
sub
sub
mov
in
in
dec
add
scas
inc
sbb
sbb
bound
add
test
or
test
mov
pop
sarl
jle
mov
repz
jmp
adc
sarb
lods
jg
add
jno
push
xchg
scas
add
push
pop
mov
push
lea
cli
incl
add
add
fistps
mov
sbb
pop
mov
add
mov
sahf
inc
les
inc
adc
divb
rclb
mov
call
inc
inc
or
int3
insb
or
mov
adc
call
mov
jno
es
aad
dec
repz
daa
into
sti
pop
out
pop
scas
insb
lock
cmp
aad
mov
add
add
fidivl
aas
out
dec
insl
fs
xor
into
add
fidivs
dec
shrb
push
jne
and
xor
xchg
jp
or
imul
imul
cmp
cmp
add
mov
faddl
daa
push
pusha
adcl
out
sti
imul
add
add
sbb
std
icebp
add
jle
cmp
pop
out
adc
or
add
jl
mov
nop
jecxz
adc
push
jmp
and
enter
sti
sbb
call
repz
inc
jmp
out
pushf
sti
into
or
leave
stos
pop
xor
in
pushf
jl
addl
addr16
xor
and
cmpsb
dec
xchg
nop
sub
fistl
in
insl
dec
add
mov
adc
sbb
movsb
ss
push
call
addl
add
inc
les
dec
std
aad
in
lcall
cld
bound
fdivrs
pushf
push
ss
cmpl
add
sub
lock
mov
fstpt
mov
in
mov
add
cmp
adc
movsb
add
push
mov
jno
inc
push
sbb
push
adc
mov
les
adc
loop
jl
call
jge
xchg
add
add
les
inc
jmp
decl
add
add
les
xor
mov
jno
rcll
cmp
testb
inc
sub
or
clc
inc
and
push
cmp
sbb
add
xor
or
ret
adc
jl
fsubrs
xchg
add
je
cmpsl
stos
jg
fsubrs
xchg
jmp
stos
xor
adc
cld
pop
out
andl
add
and
push
sbb
aaa
mov
xor
bound
mov
stos
jns
repz
xorb
cmc
lds
mov
lds
daa
or
add
stos
lds
arpl
inc
add
dec
inc
insb
das
aad
xor
loope
out
sbb
in
iret
inc
out
push
xlat
jbe
movl
mov
cmc
jp
cmpsl
mov
adc
mov
out
cmc
mov
inc
out
cmpsb
dec
aad
out
mov
add
xor
repz
cmc
inc
out
adc
push
cmpsl
add
pop
jb
lret
pop
and
mov
lods
push
aad
mov
add
add
add
push
popf
js
setbe
mov
std
je
mov
add
and
adc
mov
or
adc
cli
sub
mov
insb
sub
push
fs
xor
mov
dec
push
add
cmp
mov
pop
mov
add
in
mov
and
fmuls
jmp
and
subl
add
add
add
call
movsb
xchg
stc
in
add
add
decl
loope
adc
cmp
or
dec
and
pop
xchg
sti
ss
or
rorb
mov
sti
decl
cld
add
push
ret
jp
dec
mov
js
inc
jbe
push
push
cmp
or
add
std
mov
call
add
add
inc
or
je
push
or
add
add
or
aad
or
repz
inc
cmp
mov
std
fisubrl
pop
inc
out
enter
adc
push
dec
std
or
clc
jb
scas
xor
sbb
add
ret
out
mov
movsl
jb
ffree
call
mov
in
sbb
cmp
bound
adc
sub
hlt
xor
sbb
add
adc
inc
jg
in
add
add
push
addr16
add
out
ljmp
jle
aaa
clc
mov
xorl
jge
pop
or
adc
in
mov
mov
cmp
mov
fdivs
popa
loope
fcmovnb
add
add
add
mov
repz
shrb
insl
xor
sti
pop
out
aad
mov
cs
adc
mov
dec
out
add
mov
inc
add
into
inc
adc
or
xor
ret
and
jle
in
pop
inc
or
daa
xor
dec
insb
inc
pop
push
or
icebp
sub
sub
test
cmc
arpl
mov
xor
dec
push
xchg
sbb
mov
pop
mov
add
adc
mov
xor
cmpsb
mov
sbb
add
add
andl
pop
test
add
jbe
fcompl
dec
mov
jnp
in
or
jb
jbe
add
mov
jbe
mov
push
dec
lea
dec
call
mov
addr16
and
jge
or
xchg
ds
je
in
ficoms
push
inc
dec
cld
push
data16
add
mov
mov
jnp
mov
ljmp
pop
dec
call
and
or
rolb
push
aaa
inc
pop
or
pop
scas
jne
fidivs
dec
or
or
es
dec
shrb
xorb
sbb
aaa
insb
mov
add
add
add
push
or
stos
mov
add
pop
clc
mov
lcall
rcr
pop
xchg
cmc
pop
pop
sahf
push
lods
dec
push
sbb
lock
sbb
jb
adc
cmp
sahf
add
dec
jg
lcall
repz
inc
fdivs
stos
ljmp
mov
add
add
stos
mov
cmp
add
mov
sub
test
mov
or
add
insb
add
add
mov
cmpsb
cmp
mov
rol
xchg
mov
mov
add
add
bound
cld
outsl
stos
add
in
add
movsb
in
mov
push
mov
add
hlt
mov
xchg
mov
push
mov
in
push
mov
xchg
fwait
testb
mov
jl
in
hlt
je
cmc
mov
jmp
and
push
bound
stos
sbb
inc
in
les
pop
call
xchg
mov
jp
stos
push
ret
jge
popa
adc
filds
or
add
clc
and
sbb
push
dec
outsl
adc
add
xor
inc
add
stos
divl
pop
decl
nop
fmulp
add
push
ret
push
sti
jmp
push
mov
mov
stos
outsb
sti
incl
les
push
jg
int3
xchg
out
inc
incb
add
add
pop
fadds
aam
add
shlb
das
shl
add
call
push
jl
insl
mov
lcall
xchg
mov
das
rolb
sub
or
xchg
add
out
sti
dec
push
stos
jg
out
add
mull
add
jmp
add
push
lcall
fwait
pop
cmc
cld
into
dec
test
xchg
mov
adc
negl
push
daa
fwait
test
jecxz
insb
ret
push
add
test
in
or
inc
mov
add
add
mov
pop
inc
push
sub
int3
out
out
sub
out
dec
dec
xchg
mov
scas
out
es
add
add
lahf
jno
cmp
mov
mov
mov
inc
and
add
add
push
mov
aad
loope
jg
add
icebp
scas
out
in
inc
mov
dec
sub
inc
and
pop
repnz
gs
clc
pop
mov
lret
sbb
mov
lea
xor
or
pop
insl
inc
lods
out
dec
cmp
arpl
iret
movsl
into
pop
rep
gs
sbb
cmpsl
cmp
inc
mov
jg
push
push
lock
subb
push
std
imul
jne
cltd
imul
cld
bound
inc
or
lea
clc
call
scas
sub
add
out
stos
push
inc
mov
sti
test
cmp
fwait
adc
push
mov
push
sti
push
sti
call
xchg
call
lret
sbb
fimuls
mov
xchg
mov
sti
push
rcll
test
sti
addb
add
mov
cmpb
xor
call
add
jbe
test
pop
add
sub
xor
or
hlt
mov
xor
cmp
mov
adc
mov
mov
sahf
push
std
repnz
inc
out
rorb
fldt
push
sub
fsub
lcall
jl
mov
out
sbb
or
insb
loop
push
adc
add
cltd
mov
mov
add
add
pushf
add
in
xchg
add
adc
cmpsl
jg
cmp
mov
mov
inc
notl
loop
add
push
iret
aas
scas
mov
jle
mov
lds
add
orb
sarb
sub
ret
xor
adc
mov
mov
mov
das
aad
out
sub
fs
rorl
pop
sbb
stos
sahf
push
out
pop
cmp
insb
jbe
mov
sti
add
mov
fwait
jno
dec
call
mov
pusha
and
mov
loopne
inc
jmp
xchg
ljmp
mov
jl
push
idivl
out
push
std
aam
adc
addr16
or
push
sub
call
in
cmp
xor
jge
in
or
lods
aam
inc
icebp
in
data16
add
aam
fwait
aaa
lcall
pushf
in
push
pusha
inc
mov
add
inc
jmp
daa
incl
adc
addb
jo
push
push
add
pop
mov
decl
add
add
pop
es
mov
pop
cmp
jne
pop
xor
inc
push
dec
pop
pop
push
les
add
jl
call
adc
and
fiaddl
lcall
jl
pop
mov
aaa
xchg
pop
popa
das
fildl
test
jge
push
xor
push
mov
pop
add
pop
cmpb
mov
ljmp
add
sub
test
sbb
cwtl
fisubrl
leave
mov
fs
fstpt
mov
xor
inc
ret
mov
fildl
call
and
rcll
mov
subl
add
jecxz
in
push
divl
jl
js
cmc
or
shll
shr
imull
mov
add
add
bound
mov
add
sbb
fwait
xlat
xchg
push
bound
out
push
push
in
je
out
bound
ret
sarl
test
pop
roll
xchg
add
jp
test
std
addr16
sarl
fistpl
testl
daa
add
in
cmp
nop
xor
sub
add
add
fldt
push
imull
push
dec
lods
mov
outsb
xchg
imul
in
xchg
jmp
aam
andl
add
mov
adc
popa
les
out
mov
mov
add
dec
int
jmp
pop
inc
fsubrl
test
cmpsb
adc
pusha
sub
loop
xor
orl
fwait
ss
cwtl
xor
mov
mov
adc
jmp
adc
add
push
jg
dec
mov
sarb
add
cmc
cli
jne
xchg
shll
rolb
sti
jne
xchg
adc
jno
mov
add
dec
xchg
jge
adc
mov
jg
cmpsb
add
lcall
push
xchg
je
test
jns
push
je
test
and
popa
in
adc
fwait
outsb
sti
jne
jae
or
sti
incl
je
hlt
hlt
mov
scas
cld
pusha
iret
cwtl
out
lock
cld
pop
cmc
in
xor
cld
cmp
xor
add
loope
cld
sub
rol
lods
add
daa
aam
mov
loope
cld
arpl
mov
cwtl
sub
pop
out
or
and
add
insl
aaa
and
or
add
mov
mov
fildl
loope
jp
filds
add
and
jmp
sbb
iret
add
sti
inc
incb
out
jmp
cli
pop
cmp
push
dec
mov
call
cmp
movsb
movsl
sti
outsl
and
popf
fwait
add
sub
out
mov
cld
ja
jo
fistps
cmpsl
fstpt
push
pop
xor
fwait
cwtl
mov
in
sbb
int3
add
addr16
or
leave
popf
inc
fildl
add
mov
dec
jb
adc
cs
fiadds
pop
sbbb
jmp
addb
ret
xchg
call
out
inc
pop
insb
adc
das
inc
lea
jmp
add
xor
movsb
pushf
ret
jmp
mov
cmc
scas
mov
fbstp
cltd
cltd
js
xchg
jmp
pop
jmp
xchg
jecxz
dec
mov
inc
add
jmp
add
in
push
insb
pop
call
std
mov
jae
lea
and
sbb
and
jg
mov
loop
aaa
mov
xchg
push
std
mov
testl
push
jns
dec
lods
ret
jbe
sbb
and
push
inc
and
jo
add
sub
jmp
add
add
jo
and
add
stc
loop
adc
sti
je
sti
out
xor
sti
lea
lods
sbb
push
sti
dec
xor
xchg
mov
push
stos
adc
leave
pop
sti
cmp
sbb
test
lds
jmp
mov
mov
add
out
cmc
pop
inc
push
xchg
dec
jp
inc
and
lock
pop
mov
shr
jns
sub
ss
adc
ljmp
lods
jg
in
adc
pop
lods
add
or
std
mov
mov
call
pop
in
decl
out
aaa
lock
fcomps
int3
lods
stc
xchg
cmpsb
and
test
add
add
inc
xchg
stos
fwait
lods
ss
xchg
jg
mov
add
popf
insl
stos
stos
inc
push
adc
add
js
cmp
pop
lods
lds
pop
leave
imul
lods
enter
imul
mov
mov
in
out
gs
bts
cs
or
mov
cmpsl
add
in
aam
sbb
cwtl
mov
cld
outsl
inc
jmp
int3
std
out
sbb
mov
cmp
lea
cld
cmpsb
push
lods
cmp
jnp
add
in
jb
or
call
jbe
inc
mov
inc
add
push
cs
cmpsl
dec
inc
xor
push
mov
inc
insl
xchg
sahf
adc
inc
add
or
movsb
dec
mov
jnp
cltd
inc
hlt
add
sub
shlb
scas
ss
jle
add
add
jb
stos
push
mov
jmp
out
iret
nop
dec
and
inc
dec
add
pushf
adc
add
enter
push
add
add
push
jg
data16
data16
mov
dec
or
insb
adc
add
jp
sti
inc
mulb
inc
clc
mov
add
add
outsb
ficoms
imul
push
or
add
jne
decl
pushf
jg
or
add
and
mov
inc
or
aas
inc
or
adc
fsub
gs
std
rolb
out
mov
subb
sub
cmp
loopne
pop
insb
out
jno
cld
bound
lea
into
jmp
add
add
jge
call
lods
jnp
mov
out
inc
test
arpl
testl
fs
xor
and
out
repnz
cld
outsb
insb
andb
js
out
add
and
jb
pop
add
add
rcrl
add
pop
outsl
jns
adc
cmpsl
mov
add
add
out
xchg
idiv
or
in
sub
sbb
mov
andb
or
push
rolb
pushf
push
cmpsl
mov
sub
jp
lods
push
mov
gs
out
mov
mul
add
imul
clc
pushf
incl
test
fisttpll
insb
movsb
adc
mov
add
adc
out
aaa
popf
cld
notb
xorb
mov
mov
adc
test
dec
adc
pusha
daa
pushf
mov
cld
jle
cltd
call
popa
sub
in
addl
lock
jb
call
mov
cld
jmp
pop
xchg
cld
push
lea
or
dec
cmpb
mov
xchg
xchg
rorl
idiv
shrl
inc
mov
jmp
add
add
jbe
pop
inc
mov
idivb
add
jecxz
add
fstpt
cmp
sub
add
cmp
dec
pushl
jne
popa
jno
cmpsb
mov
test
fcmovbe
test
out
or
adc
testb
stc
jl
out
mov
cld
imul
es
adc
lds
adc
cld
pop
gs
push
into
mov
repz
int
or
shll
sub
jp
imul
cmp
jns
mov
mov
jb
add
add
lds
js
aaa
and
rolb
pop
sbb
push
add
jl
xchg
and
rcrb
lds
add
add
xchg
packuswb
or
cmpsl
sti
cltd
std
sub
jmp
xchg
fwait
sarl
lods
mov
xsaves
push
xchg
adc
add
add
adc
or
jb,pn
addr16
jl
cmp
xor
bound
mov
inc
lret
lcall
jecxz
jl
out
out
mov
cmc
clc
inc
out
inc
cmpsl
inc
cltd
jno
gs
mov
mov
pop
out
sbbl
mov
adc
sub
lock
add
add
add
andl
ljmp
adc
into
jle
inc
or
test
jae
outsl
xchg
or
add
out
aas
xchg
cld
fiaddl
pop
int
sbbb
mov
subl
clc
call
loopne
mov
out
inc
and
mov
add
and
cld
incl
add
add
add
add
pushf
mov
aam
cmpsl
xlat
gs
test
mov
xchg
push
dec
and
cmpsb
hlt
jecxz
mov
into
mov
jns
xchg
xchg
jge
data16
dec
in
push
data16
cmp
jno
mov
jle
inc
and
cmpl
add
mov
mov
clc
sub
xor
and
iret
out
inc
lahf
cld
lods
sub
and
movsb
movb
add
insb
mov
adc
mov
lahf
cld
insb
pop
add
out
stos
repz
lods
add
add
cmp
adc
mov
gs
mov
add
je
jp
sub
aad
loopne
sbb
mov
push
mov
roll
stos
dec
lcall
rolb
shlb
stos
adc
or
add
sbb
stos
out
xchg
aad
or
add
jmp
popa
inc
jmp
dec
add
add
lahf
cmc
fwait
clc
inc
out
sub
outsb
pop
outsb
add
xchg
mov
sbb
add
pop
out
add
aaa
mov
jle
rolb
jmp
in
popf
jae
xchg
add
mov
out
mov
sbb
cwtl
mov
repnz
movsb
add
cmpsl
cmp
movsl
add
mov
dec
adc
fdivr
push
add
ret
pop
mov
push
bound
add
cmp
das
push
cld
xchg
lods
jp
mov
shll
xchg
fcmovnu
shl
call
jb
cld
xchg
dec
mov
into
push
cwtl
cld
add
add
xchg
inc
or
mov
jg
cmp
add
add
je
adc
add
add
inc
cld
xchg
push
mov
jmp
es
decl
jae
cld
dec
jae
lock
mov
mov
hlt
jno
jge
fiadds
add
mov
xor
aad
inc
stos
pusha
jne
cltd
jno
rclb
sti
jne
jno
cld
mov
test
push
ret
arpl
jle
jno
mov
out
test
jp
lcall
add
add
fmull
insl
jbe
mov
push
dec
cld
push
dec
test
mov
fwait
cmp
loope
dec
pusha
add
out
inc
cld
aas
push
outsb
cld
and
sbb
lcall
mulb
mov
xchg
fwait
mov
fwait
add
push
add
shrb
adc
ja
cmpsl
sbb
lahf
out
cs
cld
outsb
ret
out
xchg
lcall
dec
adc
fadd
and
xor
cmpsb
pop
out
pop
lahf
scas
je
out
mov
xchg
xor
mov
fisubrl
lock
push
pushf
inc
bound
xor
mov
aas
cmp
fmuls
cmp
mov
mov
jmp
add
out
out
imul
xchg
std
mov
add
add
inc
mov
femms
xchg
pop
add
jnp
or
fisttps
call
pushf
bound
xchg
jmp
cld
cmp
repnz
call
mov
xor
xchg
bound
push
pop
xor
pop
xor
jo
jmp
sbb
push
call
int
call
cmp
jnp
ret
mov
inc
push
mov
xor
cld
loopne
aas
jmp
pop
cmp
push
imul
std
xor
or
xchg
outsl
inc
fdivrs
or
sub
jl
add
outsb
sti
test
nop
rclb
mov
add
test
push
mov
pop
outsb
pop
mov
add
add
xchg
out
jnp
call
in
ds
add
mov
or
xlat
rclb
inc
mov
cmp
xlat
xchg
jp
call
adc
jp
and
lds
mov
insb
sti
mov
insl
sti
test
pop
packsswb
mov
insb
jmp
add
dec
jg
pop
cld
mov
les
adc
and
daa
sbb
and
and
je
xchg
pusha
push
cmpb
scas
xchg
xor
inc
push
test
daa
ss
or
or
cmp
mov
daa
les
and
pop
fs
or
push
or
pop
pop
cld
call
negl
mov
mov
add
add
mov
xchg
out
shll
jno
lret
lcall
in
adc
jl
mov
adc
jg
xchg
lea
add
jp
jle
push
push
mov
xchg
out
mov
push
cwtl
fs
fnstsw
add
add
loopne
jge
cwtl
adc
or
xchg
fwait
int
clc
lea
jecxz
push
add
add
xor
insb
movsb
add
xlat
out
roll
clc
mov
push
mov
out
push
call
je
call
bound
cmc
adc
push
aaa
push
adc
add
cmpsl
out
push
mov
or
in
subl
add
sti
pushl
cmp
cld
jb
xor
repnz
jae
hlt
ss
mov
mov
push
push
inc
and
out
mov
and
add
cmc
and
pop
cwtl
lcall
shrb
std
pop
jns
jle
test
shlb
dec
call
add
add
add
xchg
sti
je
nop
push
push
shl
pop
lds
add
int3
and
xchg
xchg
mov
and
add
shl
test
jne
push
cmpsb
mov
pop
sub
xchg
cmp
add
out
mov
fs
cltd
jle
mov
sbb
out
pusha
pushl
add
out
repz
sub
insb
gs
cld
fsubrl
test
pushf
add
pop
loope
adc
adc
and
je
nop
jo
jg
fsubs
jmp
inc
add
xchg
cld
pop
or
xchg
jae
lea
push
dec
test
pop
popf
add
pop
fcoml
movhps
adc
add
js
fwait
push
push
outsb
rcll
dec
aaa
pcmpeqd
out
mov
bound
jecxz
aas
pop
daa
add
movhps
ret
jmp
test
out
inc
add
xor
jle
add
in
cmp
out
sbb
fisttps
push
adc
sub
ss
insl
add
jg
cli
bound
mov
fisubrl
adc
sub
add
add
add
mov
lods
sbb
mov
mov
jl
call
popa
or
and
in
sub
push
mov
cmp
out
popa
mov
insl
mov
in
jmp
add
inc
push
xchg
neg
xor
iret
jmp
add
push
push
mov
push
addl
in
mov
or
jnp
inc
mov
cld
sbb
mov
add
cmp
movsl
add
xor
shl
jl
je
xor
pop
pop
ret
push
mov
or
and
dec
push
decl
xor
lds
add
add
add
mov
pop
push
in
aaa
push
pop
cmp
call
cmc
jl
sti
lret
push
ret
inc
clc
push
popa
jmp
push
clc
je
or
les
shr
notl
jmp
push
adc
out
out
xchg
cld
insl
sarb
call
mov
pop
push
faddl
lcall
cltd
xor
std
pop
xchg
jg
fildll
inc
shrl
aad
popf
add
cmpsl
mov
mov
movsl
fiaddl
sbb
hlt
out
mov
rorb
call
js
dec
mov
fisttpl
adc
push
nop
lock
shlb
data16
cmp
jle
xchg
lahf
inc
insb
xchg
xchg
and
sub
cld
orb
cs
out
js
xchg
mov
push
sub
add
add
sbb
nop
push
mov
cs
jnp
pop
inc
out
nop
push
hlt
in
and
xchg
sbb
mov
fstl
mov
scas
fwait
xor
jp
sub
shr
xor
ret
out
loop
out
jge,pt
js
lahf
outsl
xchg
add
shlb
inc
out
add
sub
pop
hlt
xor
mov
inc
add
clc
inc
ja
std
aam
icebp
aas
jmp
jns
repz
xchg
xchg
ja
push
push
xor
ja
dec
adc
jnp
imulb
jae
push
adc
jb
add
pop
xchg
cli
jo
call
jae
jp
mov
mov
sbb
lea
mov
xor
add
and
in
push
add
addr16
enter
jge
push
idivl
mov
aaa
mov
add
movsl
pop
inc
cmpsb
sti
imul
decl
add
jnp
out
push
add
xchg
push
data16
test
addb
inc
cmp
or
out
addb
xor
add
int
push
push
push
xchg
adc
add
shl
sti
cmp
push
mov
loope
out
lea
fisttps
dec
lock
cmc
aas
out
lds
xor
xor
scas
clc
out
cmp
shl
xor
nop
daa
dec
mov
fwait
add
pop
xchg
xchg
pop
jae
decb
lea
fs
add
cmpsl
mov
call
ret
xor
mul
insb
add
cmp
aas
sbb
cwtl
mov
repnz
fwait
mov
jmpw
outsb
bound
inc
out
lcall
nop
imul
movsl
arpl
loopne
out
sub
inc
add
leave
push
pop
mov
out
movsl
dec
outsl
inc
jg
bound
mov
pop
imul
test
jle
dec
xchg
sbb
adc
add
in
add
sbbb
ret
add
mov
cmp
inc
out
cmpsb
push
hlt
nop
and
xor
adc
jbe
add
andl
add
arpl
jb
ja
aaa
movsb
orb
iret
cld
outsb
push
test
and
xor
lret
das
mov
cmp
dec
popf
jg
insb
and
adc
and
pop
aad
mov
arpl
dec
jb
imul
stc
push
add
imull
or
incl
fldt
pop
cmc
sub
adc
aaa
push
incl
add
add
push
add
ret
mov
pminub
sar
xchg
in
push
out
push
repz
rol
stc
mov
cwtl
or
push
add
sbb
sbb
ja
pop
adc
mov
lahf
dec
rorl
xor
out
sti
test
adc
mov
lea
jmp
add
adc
dec
xor
pushf
mov
andl
hlt
cld
add
dec
rep
test
fidivl
add
pusha
mov
stc
mov
in
lock
lds
in
lock
daa
pushf
mov
push
movsb
gs
insl
push
xchg
out
or
hlt
add
out
decb
lock
fadds
daa
lahf
in
gs
sarl
xchg
clc
mov
xchg
add
popf
aam
and
or
pop
add
cmp
adc
fistps
ljmp
push
mov
pop
add
int
xor
xchg
jle
roll
sub
jle
lahf
pop
leave
jbe
jae
mov
sub
imul
aam
lds
dec
jge
pop
popw
std
add
add
loope
mov
pop
push
movl
addr16
roll
out
test
mov
sub
push
or
push
jge
jmp
in
mov
in
call
fdivrs
adc
add
jb
call
inc
jge
jmp
in
mov
jge
sub
sbb
call
insl
xorb
imul
in
adc
fisubrl
jp
incl
data16
ds
dec
ds
mov
pop
jg
mov
inc
mov
add
add
sbb
stos
sub
test
pop
add
adc
sub
ret
push
push
aad
das
pushl
pop
add
add
loope
push
push
mov
pop
test
lds
add
pop
pop
mov
fwait
sub
scas
xchg
xchg
fisttpl
into
test
push
ja
or
sbb
test
sub
add
out
jnp
gs
repz
sub
sbb
mov
insb
add
lock
sbb
js
jns
sbb
pop
pop
mov
pop
push
cmc
loopne
decb
jns
out
out
shlb
add
xor
adc
out
fdivr
sbb
inc
adc
inc
or
mov
add
add
icebp
sub
adc
aas
in
bound
testb
lea
pop
mov
or
ret
jmp
push
add
add
dec
sbb
bound
aaa
jnp
xchg
pop
dec
aad
idivl
adc
xchg
js
and
aad
aam
out
daa
fstpl
loope
shll
sbb
pop
dec
frstor
out
mov
imul
or
fcmovnb
outsl
rorl
shr
cwtl
imul
jnp
fwait
dec
jg
test
mov
xchg
in
add
rolb
sub
jmp
mov
cmp
je
mov
test
loope
call
inc
inc
xlat
in
inc
aad
add
sub
js
mov
fs
cld
jmp
test
and
add
stc
iret
rolb
and
cmp
in
jmp
jmp
hlt
add
jl
mov
in
cmpb
jnp
add
idiv
ljmp
jo
inc
xor
mov
std
push
inc
mov
cmp
cmp
std
mov
add
add
sahf
dec
add
test
clc
mov
pop
rcrb
ret
fisttpl
push
push
add
mov
ds
aas
sbb
push
test
dec
add
jg
data16
enter
lea
push
test
test
hlt
out
sar
mov
clc
push
or
out
mov
add
add
push
mov
and
repz
clc
dec
insb
mov
imul
pop
sar
sub
aaa
insb
sub
xchg
pop
xchg
xlat
in
rep
push
cmc
xchg
gs
ja
pop
mov
add
cld
cli
push
sbb
in
inc
or
testl
test
daa
jl
stos
repnz
add
cmc
jns
xlat
mov
jae
inc
popa
dec
add
xor
movsb
or
push
data16
add
ja
mov
ret
out
push
jo
add
mov
out
out
stos
jnp
and
outsb
shr
fsub
add
out
jecxz
pop
add
add
jnp
ret
jo
cli
js
mov
sbb
inc
or
int3
jmp
add
adc
pop
scas
bound
out
push
in
mov
lock
cmp
imul
push
std
pop
pop
mov
loope
mov
inc
add
add
pop
fld
sub
mov
in
jbe
scas
mov
jae
or
arpl
nop
jo
mov
stos
jecxz
push
call
mov
iret
push
cmc
jle
xor
add
inc
sub
out
cmp
pop
and
push
bound
call
fsts
sti
mov
scas
out
fistpll
jecxz
dec
add
add
add
mov
incb
dec
push
cltd
fwait
mov
incb
dec
push
test
adc
mov
orl
add
nop
std
out
and
add
mov
add
push
mov
mov
into
xchg
mov
pop
std
jle
lcall
mov
cmp
add
out
rolb
out
popf
and
add
out
popf
mov
push
xchg
add
out
popf
xchg
out
add
sbb
or
cmp
jp
hlt
push
add
cmpsb
and
out
add
xchg
mov
mov
data16
xchg
add
call
xlat
mov
out
add
fs
sti
fs
push
insb
jge
movsb
add
repnz
cmp
roll
mov
xchg
fwait
addr16
mul
mov
imul
add
jns
out
cmpsb
cmp
and
push
mov
nop
arpl
call
push
sti
stos
mov
out
dec
or
imul
add
mov
imul
shll
add
add
add
lahf
test
pop
cmc
mov
add
cwtl
jge
shlb
add
inc
xor
imul
mov
test
loop
outsl
subl
cmp
or
testb
gs
jbe
mov
in
inc
sub
cmp
in
push
das
and
pop
sub
fdivl
inc
jmp
in
std
cs
jne
pop
inc
out
cmp
testl
in
imul
lahf
fmuls
jmp
or
inc
in
xchg
outsl
adc
cmc
xchg
push
xchg
adc
fsts
ds
sbbl
add
cmp
inc
ds
push
sti
jne
out
adc
cmp
cld
mov
lock
jnp
xorl
push
mov
push
jg
or
fistpl
and
lea
add
add
std
mov
add
inc
hlt
rcrl
hlt
adc
das
divb
jp
cmp
dec
std
decl
pop
std
jle
add
out
shll
arpl
pop
pop
sbb
andl
lcall
jecxz
sar
fimull
adc
fnstsw
or
out
push
pop
fmulp
and
xor
sub
out
lea
testb
loop
stos
roll
mulb
mov
out
add
cld
out
add
mov
add
clc
aad
add
scas
sbb
add
out
cmpb
xlat
sbb
into
mov
jo
mov
dec
cmp
adc
jo
xchg
adc
mov
add
add
pop
lods
rolb
or
imul
pop
mov
shl
sti
adc
pop
add
add
sub
out
sti
lock
mov
jno
out
ds
fsubrs
pop
sar
into
jp
sbb
lock
xchg
pop
iret
add
jns
jnp
xorb
jno
adcb
sub
sub
add
add
insl
in
xor
cld
bound
ss
xor
icebp
mov
jns
outsl
push
shll
cld
ds
add
mov
loop
jmp
fdivrl
xchg
call
push
pop
pusha
xor
lea
cld
insl
sub
push
ds
int3
adc
jmp
push
mov
add
aas
pop
adcb
repnz
cli
jmp
push
xchg
in
jno
add
ljmp
adc
sti
xlat
fildl
add
push
aaa
lds
shll
inc
clc
push
mov
add
out
sti
inc
lods
clc
pop
cmc
mov
xchg
out
push
lock
rclb
fsub
mov
es
add
adc
cmpsb
mov
mov
jmp
sub
mov
fldenv
and
pusha
pushl
pop
add
ret
xor
pop
in
or
mov
fists
cmp
roll
repz
pop
data16
daa
jo
sub
mov
shlb
test
add
xchg
pushf
mov
mul
xchg
push
nop
sbb
daa
jbe
inc
sbb
testb
insl
pop
add
push
dec
dec
pop
lret
adc
inc
rorl
imul
and
mov
ja
xchg
jbe
jp
ljmp
push
cmp
pop
lret
insb
outsb
sarb
jmp
cwtl
insb
int
movsl
push
clc
loopne
adc
xorl
ljmp
jle
pop
insb
lea
div
mov
pop
orb
push
xchg
pop
movsl
sar
data16
jle
or
pop
outsb
out
in
js
xchg
shrl
call
ret
ljmp
insb
call
imul
fs
imul
loope
sbb
outsb
jl
cld
jmp
repz
mov
jle
dec
in
add
outsb
je
test
addr16
insb
mov
fcomi
loope
xor
jmp
mov
addb
cmp
jle
addl
stos
addr16
push
fcomp
imul
mov
jnp
int3
dec
pop
addl
test
lods
cmpl
nop
std
shlb
sti
decl
cli
adc
adc
negl
dec
push
push
mov
cmp
add
push
or
cld
mov
lock
adc
lds
inc
movzbl
ds
pusha
aas
push
add
stc
jle
clc
xchg
test
add
std
jp
hlt
test
mov
jl
or
in
mov
fs
in
sub
sbb
and
push
arpl
xor
mov
lcall
mov
mov
pop
add
lods
xor
sbb
sub
dec
out
in
push
std
pop
shl
push
mov
testl
pop
sub
aaa
leave
push
cmc
add
add
add
or
mov
mov
push
cld
and
fdivp
fbstp
imul
or
adc
add
into
sub
add
push
mov
add
add
push
dec
push
daa
add
dec
out
inc
cmp
es
movsl
sub
pop
push
imul
add
xor
mov
xchg
push
out
xor
jg
out
iret
stos
dec
add
jle
jl
jo
ret
out
imul
daa
iret
add
add
dec
ss
pop
outsl
add
add
les
add
inc
push
imul
add
xchg
ljmp
jmp
aad
cltd
add
jmp
jecxz
add
inc
pushl
and
add
jmp
push
add
ds
lods
shl
call
rcr
jne
jecxz
leave
loope
add
flds
sbb
jp
or
in
mov
jae
cld
jmp
mov
add
outsb
mov
ret
push
push
test
test
test
sti
jne
insb
push
add
std
mov
dec
push
sub
jg
mov
push
inc
push
pop
repz
sbbb
mov
push
mov
pop
call
sti
cmp
sbb
jmp
add
or
sti
call
in
push
sti
cmp
cmpsb
jns
ds
out
cmp
jp
ds
out
outsl
andl
sti
mov
xchg
xchg
std
or
test
or
aad
call
sub
fcomps
cld
cli
inc
adc
fldcw
cmp
add
pop
add
mov
out
pop
add
fcompl
repz
add
out
nop
jge
ret
loop
add
add
pop
pop
mov
out
add
jo
add
out
test
pop
add
out
cmp
jno
jae
add
inc
push
xchg
outsl
and
inc
movsb
pop
testl
idivl
xchg
add
add
mov
mov
daa
idiv
fsubs
and
add
hlt
je
add
bound
out
sbb
fs
out
out
push
pop
add
add
add
add
gs
mov
loop
aad
fcmovnb
js
jmp
out
out
bound
mov
out
and
out
out
cwtl
cmpb
cmp
jmp
xchg
in
add
push
jg
call
gs
outsb
andb
in
add
push
popa
cld
bound
fdivrs
add
add
pop
addl
xlat
imul
shr
add
out
jg
subl
loopne
out
xchg
add
in
mov
nop
push
add
xchg
mov
jmp
cmp
mov
pusha
pop
jge
rolb
add
push
cmpsb
das
pushl
mov
and
or
add
loop
and
or
add
fadd
call
jne
xor
test
in
mov
sti
call
std
int3
repnz
xchg
cld
mov
lock
pushl
push
add
sub
add
mov
je
testb
xorl
sti
xor
mov
mov
insb
pop
xor
add
stos
adc
mov
cmp
inc
out
push
std
mov
in
in
and
add
push
adc
pop
popa
in
loope
mov
mov
imul
aaa
and
iret
inc
add
out
hlt
and
lret
inc
imul
jmp
add
jp
aam
cmpsl
and
out
add
adc
cld
mov
test
ljmp
add
bound
xor
incb
add
add
inc
add
imul
add
push
mov
jns
sub
out
iret
sub
lret
popa
popa
lea
or
mov
add
sarl
mov
insb
add
or
cmpsl
add
faddl
sbb
add
shl
pop
dec
dec
scas
pop
pusha
cmp
inc
xor
xchg
push
add
add
pusha
sbb
mull
xchg
mov
andb
xor
jmp
sub
or
sub
shlb
in
add
push
lea
xor
leave
jmp
icebp
add
bound
inc
cmc
ss
xchg
test
arpl
xchg
dec
lea
cmpl
add
add
pop
mov
cld
push
mov
inc
fucomp
ret
data16
in
mov
xor
sti
fs
pop
add
mov
cmc
adc
clc
std
pop
call
call
in
jns
jg
jp
push
ret
mov
cmp
cld
dec
sbb
insb
push
push
or
or
xor
dec
add
lds
pop
mov
add
add
pop
in
shr
mov
jmp
pop
aaa
movb
push
or
mov
imull
mov
inc
cld
addb
mov
or
inc
dec
mov
add
add
jns
stc
in
das
shl
inc
add
xchg
jnp
push
jl
add
jo
rcll
clc
mov
fs
sub
addl
add
daa
shlb
inc
pop
insb
cld
mov
pop
int
insb
add
mov
jnp
pcmpgtw
mov
imul
cwtl
je
and
fdivl
shrb
pushf
daa
or
add
iret
sub
lcall
sbb
out
xor
sti
cmp
add
fisttpl
add
out
mov
add
incb
jmp
add
jl
mov
jno
out
sbb
icebp
loopne
lock
push
pop
popa
insb
gs
push
adc
pop
mov
fldcw
mov
pop
fimull
out
out
sbb
mov
xor
test
mov
addr16
fimull
fcmovbe
ljmp
insb
out
add
add
add
add
loopne
notl
incl
test
cs
xor
mov
add
addb
mov
ja
mov
in
rorl
in
pop
or
leave
pop
xchg
aaa
add
mov
gs
in
mov
lret
adc
push
mov
icebp
repz
and
or
adc
fs
pop
jb
sbb
shlb
xlat
jns
jmp
repnz
gs
dec
add
add
xchg
fiadds
mov
xchg
test
sti
je
push
in
pushf
pop
add
push
xchg
aas
movb
pop
call
cmpl
call
movsb
out
mov
push
push
jno
push
fisttpl
loopne
clc
or
cld
imul
pop
jg
sub
add
jle
add
fisttpl
sti
je
out
cli
je
out
out
out
arpl
int3
arpl
add
fnsave
or
cld
fld
andl
pop
js
adc
out
pop
add
aad
pop
adc
add
or
clc
push
adc
inc
rcll
jecxz
mov
cmp
jne
out
fistpll
jb
pop
inc
call
xchg
in
and
jecxz
or
pop
sub
mov
fisttps
aad
pop
lods
stos
jmp
mov
sub
push
in
aaa
rcl
rolb
adc
push
push
dec
repnz
add
repnz
out
add
inc
call
mov
hlt
pop
lret
jmp
out
lock
jecxz
daa
pop
dec
add
add
pop
out
jbe
outsl
or
jmp
pop
fwait
outsb
add
add
es
ret
pusha
rcr
bound
mov
mov
cld
mov
stc
clc
cmc
es
xlat
pushl
mov
popf
lea
scas
cmc
add
pop
sbb
mov
cld
sti
and
inc
ja
aam
call
cli
cmp
cli
jmp
cld
insl
sub
and
pop
mov
scas
out
cld
push
cld
mov
add
fistpll
sbb
les
mov
sbb
pop
adc
add
add
sub
push
scas
push
bound
mov
add
and
pop
lock
add
or
repnz
mov
das
and
ret
jo
xchg
add
ret
jmp
inc
mov
add
jno
lods
push
cld
je
push
sti
adc
hlt
mov
rorb
add
mov
movb
add
hlt
add
pop
lcall
sub
out
imul
cmp
lea
add
add
add
mov
out
bound
mov
repnz
jae
and
loopne
call
inc
or
jmp
out
add
adc
leave
aaa
pop
ds
rorb
aas
out
iret
and
jmp
fcomps
ljmp
out
mov
xor
or
or
in
sub
mov
xor
adc
dec
aam
and
loop
out
stc
pop
cld
xchg
sti
mov
shlb
inc
ret
pop
add
add
fdiv
lret
adc
mov
out
repz
adc
test
push
in
push
sub
leave
push
out
subb
outsb
mov
jno
push
add
add
scas
mov
jmp
push
out
add
jle
out
push
hlt
cld
pop
add
scas
push
insl
xchg
addl
add
in
dec
inc
testb
rorb
cmp
cmp
call
imul
inc
pop
cld
bound
adc
sub
push
stos
cwtl
adc
add
ljmp
sbb
rcrb
push
int
mov
cwtl
fsubrl
movsb
push
std
call
pop
pop
fs
add
and
rcl
mov
and
add
cmp
pop
sub
mov
bound
pop
dec
mov
sbb
ja
push
addl
add
stos
dec
std
outsl
xchg
jb
inc
call
add
mov
add
and
repz
enter
mov
out
mov
stos
push
mov
mov
and
mov
add
jge
and
aam
add
add
in
mov
inc
dec
jns
sbb
push
jbe
dec
inc
mov
repz
loope
mov
jmp
add
add
lret
dec
pop
add
inc
cmp
adc
xor
lcall
call
xor
mov
push
pop
xchg
imul
test
add
sbb
pop
test
in
out
add
aaa
pusha
add
out
inc
pop
movsb
xchg
xchg
mov
adc
and
pop
aam
xor
test
sub
or
cmpb
loope
fdivrl
out
shlb
addr16
jmp
jns
not
add
mov
jmp
lds
mov
insb
das
iret
out
fmulp
push
fsub
fimull
mov
mov
cld
mov
push
std
pop
iret
insb
je
fildl
add
in
out
cmpsl
push
daa
mov
sub
or
jge
mov
aad
sbb
or
add
add
sbb
add
add
push
js
out
and
jl
idivl
xlat
jmp
pop
inc
out
decb
notb
and
ret
loopne
pop
sbb
addr16
call
leave
dec
xchg
test
fiadds
add
add
jp
cmp
leave
jae
and
or
pop
push
cld
jmp
pop
mov
call
fmull
stc
sbb
push
mov
add
in
imul
and
test
add
xchg
jecxz
jge
jl
jp
in
je
push
cmc
pop
lods
add
sub
add
dec
cmp
xor
xor
sbb
mov
add
cmpl
incb
add
ljmp
sub
push
dec
sti
xchg
stos
outsl
or
xor
pop
iret
mov
mov
in
test
andb
stos
sti
mov
jg
sub
jns
add
imul
add
add
xchg
cli
mov
mov
mov
pop
jo
jmp
imul
jp
pop
push
xor
fmuls
inc
call
mov
inc
xlat
pop
mov
jecxz
divps
lock
int3
sbb
lock
std
cld
push
test
lea
cmpsb
mov
xor
cmp
xchg
dec
inc
negl
add
mov
test
inc
ljmp
add
add
lret
shl
mov
fildl
dec
jp
mov
cmp
repnz
jmp
push
les
cmp
add
add
cmp
and
inc
mov
iret
insl
ret
out
daa
mov
jno
in
mov
mov
add
out
sbb
outsl
push
outsl
into
mov
dec
popa
loopne
mov
scas
insl
enter
lods
fcoml
inc
add
es
mov
psrld
lret
dec
jb
jae
push
pop
add
cmc
mov
testl
lock
stc
add
insb
ret
fadds
or
gs
pop
push
add
out
sbb
jo
cmc
scas
call
mull
cmp
test
das
xchg
pop
ficoms
pop
jge
shr
mov
pop
mov
jmp
add
add
push
call
pop
into
and
mov
add
rcll
push
mov
xor
add
add
push
dec
in
or
xor
sahf
sub
mov
sarb
jge
pop
test
jg
sbb
decl
push
jg
sub
add
popf
xchg
push
cld
dec
mov
je
call
mov
mov
jns
add
pop
add
jmp
mov
popf
nop
or
std
xorb
out
lock
pop
add
in
push
mulb
int3
daa
pop
cltd
sbb
push
int
fs
decl
and
out
int3
add
or
push
imul
sbb
out
lods
add
outsb
subb
out
mov
jecxz
stos
push
loopne
pop
adc
jae
sub
add
push
rclb
mov
add
or
out
in
clc
jle
iret
fmull
sub
jno
addb
out
and
add
mov
rol
out
popa
push
arpl
ret
iret
lret
mov
jg
leave
mov
bound
jmp
sub
add
andb
sbb
test
dec
imul
add
add
mov
inc
mov
outsl
inc
jle
imul
xor
mov
xchg
jl
sbb
fsubr
scas
mov
andb
in
lcall
dec
or
push
dec
or
add
jmp
sbb
gs
add
inc
call
jmp
add
jmp
outsb
or
pushl
call
in
mov
add
lds
sbb
js
call
xchg
and
in
mov
imul
clc
inc
cmp
call
cmp
dec
xchg
adc
dec
in
or
add
ja
sti
jne
lods
divl
stc
mov
pop
pop
ret
jae
call
mov
push
push
mov
stos
subl
add
add
jp
jle
enter
mov
incl
add
add
stc
out
lea
add
incb
lock
jg
sti
pop
add
ss
sti
pop
and
out
filds
add
mov
add
add
rorl
xchg
mov
inc
test
push
jb
rol
jg
loop
negl
push
push
add
das
pop
imulb
jb
inc
aam
dec
push
adc
cmp
and
cmp
push
mov
add
or
pop
call
jge
add
pop
orb
add
add
sub
push
fs
sbb
dec
push
notl
shll
ret
out
cmc
pop
fadd
mov
outsb
cmc
test
mov
cwtl
inc
xor
out
out
jle
dec
call
jnp
sbb
add
cmp
pop
ror
inc
flds
movsl
mov
inc
in
pushf
jle
pop
pop
cmpl
add
mov
sub
test
mov
lock
repnz
popl
cmp
jb
cld
jo
fidivrl
stos
mov
pop
adc
in
push
sbb
sbbl
and
lret
pop
pop
stos
pusha
pop
dec
mov
xchg
mov
jnp
add
jb
pop
out
pop
in
cmp
test
imul
xor
push
mov
and
cmp
adc
rorb
adc
rorb
mov
mov
cmp
leave
cli
add
mov
call
mov
mov
push
jnp
std
jno
mov
mov
idiv
inc
enter
sub
lea
stc
incl
sti
adc
add
std
and
add
stos
sbb
inc
mov
inc
jo
movl
jne
ja
add
call
mov
jns
add
dec
jnp
std
inc
ds
lea
cmpsl
adc
out
jnp
ja
xlat
outsl
push
int3
cli
lock
mov
out
movl
rclb
add
add
out
xor
mov
cmp
out
and
stos
pop
fs
movsl
sub
push
pop
fnstenv
cmp
adc
arpl
out
jns
dec
xor
mov
ja
call
and
scas
cld
mov
out
or
mov
jmp
scas
scas
dec
test
pusha
sub
add
imul
popf
mov
out
and
sub
jnp
inc
jae
pop
jnp
add
add
inc
add
adc
subl
inc
push
dec
and
inc
idivl
push
cmpsl
add
rorb
out
out
sti
xlat
test
jle
aas
mov
push
lods
out
movsl
fwait
xchg
mov
sar
aad
fadds
add
add
subl
adc
ficoms
aad
mov
add
movsb
xchg
imul
dec
rcrb
hlt
cmp
sub
jmp
xor
push
out
or
mov
ljmp
popf
dec
ret
neg
out
push
inc
cld
push
sbb
lods
je
mov
add
add
mov
inc
das
push
pop
mov
testl
addl
insl
vcmpnltpd
push
mov
ja
mov
mov
data16
clc
add
add
cmovo
sarb
enter
jmp
lret
loopne
push
je
cmp
sub
cmc
pop
mov
push
cmpsl
and
gs
jne
loope
push
insb
in
scas
add
pop
enter
mov
clc
iret
dec
add
push
out
adc
aas
out
js
add
adc
sar
data16
fsubrl
andl
xcrypt-ofb
cmpsl
sub
aad
insl
int3
seta
and
jmp
iret
repz
add
sbb
iret
or
xor
shrb
and
movsb
movsb
and
mov
popa
pop
out
fiaddl
xor
ds
mov
aas
out
ja
ret
or
cld
sti
adc
imul
out
jb
add
rolb
pop
fiaddl
or
mov
std
jnp
out
push
packsswb
in
imul
add
add
out
ja
out
mov
mov
arpl
push
add
add
and
out
mov
sarb
add
jl
roll
add
lret
aas
rcl
test
fstpl
fstpt
test
fs
add
add
jb
pushl
add
or
daa
loop
mov
not
mov
mov
call
pop
mov
call
pop
lods
cmp
stc
in
add
in
call
movsb
rcrb
and
adc
aas
jae
iret
int
int
std
call
jmp
inc
subl
ud0
mov
inc
push
data16
adc
xchg
pop
in
inc
add
jle
pop
add
loope
mov
fdiv
andl
js
mov
push
ljmp
sti
jne
jae
adc
mov
and
mov
add
add
inc
or
incb
adc
jnp
std
decl
test
jp
cmpl
add
add
lret
test
add
data16
sldt
add
dec
in
cld
mov
jo
adc
mov
mov
sub
add
ss
push
xchg
add
jb
pop
add
sub
call
fcomp
mov
mov
dec
sbb
cmc
mov
lds
sub
add
sub
add
pop
pop
pushl
call
insl
ret
call
rolb
pop
push
xor
repnz
iret
jns
cld
mov
inc
jae
cmpsb
iret
or
mov
push
add
push
sbb
imul
ret
js
out
fstpt
stos
mov
pop
cmp
cmp
mov
pop
filds
stos
add
jg
iret
into
cmp
add
pop
and
shll
sub
movsl
add
js
movsb
mov
popa
pop
cmp
sarb
ret
enter
fwait
mov
bt
and
add
jbe
push
std
xchg
incb
cwtl
mov
pop
cltd
add
sbb
cmp
and
call
jmp
add
mov
pop
fcomps
cmpsl
rorb
es
bnd
in
xchg
cmp
maskmovq
imull
pop
call
and
jo
inc
and
mov
inc
add
stos
and
in
mov
stos
cmp
mov
aas
jg
cmp
jmp
xor
jb
push
sbb
loopne
add
add
xchg
decl
shlb
in
sti
decl
movsb
pop
pop
mov
aas
cmp
pop
in
push
mov
test
clc
inc
add
dec
cmp
data16
inc
dec
mov
adc
pop
sbb
xor
inc
adc
lds
sub
inc
cld
mov
add
cld
pushl
and
and
cld
movb
add
add
add
cmc
inc
push
insb
xchg
sub
out
add
and
or
adc
inc
iret
inc
cld
pop
jmp
xlat
mov
movl
push
mov
sub
pop
pop
outsl
cmp
adc
cli
push
out
nop
sbb
jecxz
testl
movsl
or
int3
ret
push
movsl
testb
es
add
enter
fmuls
sub
jp
cmpsb
inc
lret
rcrl
in
mov
ficomps
loop
clc
loopne
add
add
mov
je
pop
dec
jmp
aam
js
pop
inc
adc
pop
dec
sub
cwtl
mov
xchg
or
dec
inc
fistl
aas
add
sub
push
sbb
popf
mov
mov
or
add
mov
aaa
sub
int
fs
cmp
pop
push
push
or
mov
mov
add
adc
movsb
mov
xlat
mov
cmc
testb
loopne
incb
pop
subb
adc
filds
add
add
inc
ljmp
xchg
cld
ds
aaa
xor
inc
cmp
orb
rclb
mov
call
stos
pop
mov
add
bound
incb
imul
jmp
sti
jne
add
push
cmpsl
lea
test
add
out
mov
ror
inc
dec
mov
add
mov
mov
jbe
xor
dec
add
add
popl
add
repz
mov
loope
jo
xchg
ljmp
les
lock
mov
mov
sbb
stc
adc
mov
and
push
add
push
sti
add
lock
jmp
or
dec
cmc
cld
ficoml
inc
out
mov
cld
adc
or
sub
adc
sar
pop
jae
stc
xorb
jge
and
lcall
or
andb
add
sub
mov
cmpsl
inc
jae
cmpsl
mov
push
ss
mov
adc
xchg
sub
add
cmp
rolb
add
push
mov
and
andl
pop
sbb
jmp
subl
dec
pop
cmp
sbb
xlat
aaa
xor
stos
shll
add
sbb
jge
les
adc
enter
in
sub
adc
popa
enter
adc
out
mov
jnp
mov
cld
cmpsb
stos
xor
xchg
jbe
cmp
add
andb
into
inc
xchg
loope
adc
add
out
mov
lahf
das
mov
in
mov
cmp
mov
iret
cld
mov
sub
test
and
pushf
pop
pop
cmpsb
xor
sub
cld
push
ljmp
push
jmp
or
in
jmp
add
add
add
jno
mov
jb
pop
or
and
or
jl
cld
jmp
addr16
call
repnz
cltd
call
cmpl
sti
outsb
pop
or
mov
adc
cmp
inc
or
pop
xchg
sbb
add
pop
xor
sti
je
add
add
and
inc
or
dec
lcall
mov
mov
mov
out
jno
add
xchg
sti
incl
lds
sbb
jmp
test
push
jns
mov
roll
decl
lock
sub
or
out
push
std
mov
cmp
xor
pop
aas
mov
add
add
push
cmc
mov
call
mov
or
test
sbb
push
xor
or
aaa
dec
iret
cli
sar
mov
inc
or
addb
out
mov
push
out
jg
fsubs
mov
lahf
mov
sti
pop
ret
lods
push
out
jg
call
sbb
shll
sub
add
add
xor
inc
fisttpl
jns
cwtl
sub
cmp
jle
pop
ljmp
xchg
push
add
ja
jecxz
sahf
cmpb
popa
ss
add
add
ljmp
sub
rcrb
mov
mov
cmpsb
mov
add
cmp
sub
jmp
rorl
add
add
mov
repz
icebp
pushl
or
aam
es
xor
insb
daa
sub
lock
call
push
decb
insl
ss
cld
movsb
incl
push
sub
pop
fdivrl
int
es
sbb
add
push
sub
xor
jp
movsl
xchg
es
jmp
xor
mov
pop
mov
push
orb
das
push
push
push
add
out
call
loopne
xlat
pusha
cwtl
xchg
and
sti
adc
outsb
lock
jo
jle
inc
hlt
outsb
fisubrl
cmpsb
shr
add
dec
sti
jne
jmp
adc
inc
cld
cmp
pop
clc
sti
and
inc
sub
mov
cli
jne
add
add
inc
cld
cmp
hlt
jo
cmp
clc
cli
jne
in
adc
dec
pop
pop
inc
movl
pop
and
inc
jle
inc
or
jbe
je
in
jno
adc
sti
jne
es
push
int
aaa
jb
or
xchg
xorb
pop
imul
fists
call
jb
mov
add
xor
add
mov
lods
add
mov
mov
jnp
cmpl
xlat
das
cld
mov
inc
call
jne
sub
fiaddl
mov
ficoml
bound
or
push
adc
pop
ret
movsb
or
fidivrl
adc
add
out
pop
xorl
pop
sub
mov
jmp
adc
add
add
adc
adc
shlb
xchg
inc
loop
pop
lret
mov
je
in
lock
ds
out
mov
jne
jo
aam
add
int3
call
mov
popf
sbb
xor
mov
jecxz
jns
xchg
es
call
add
jne
mov
cmp
add
add
sbb
in
add
sbb
test
dec
or
lcall
mov
out
jmp
in
jb
outsl
leave
sub
and
push
push
push
add
loope
and
shll
subb
mov
test
in
mul
cmp
or
rcrl
shll
popa
and
xchg
daa
jae
rcrl
jmp
cli
daa
call
stc
mov
jae
hlt
jl
add
stc
decl
test
mov
std
sar
or
mov
dec
xchg
mov
add
jo
in
call
lock
andl
cld
andb
pop
std
jl
and
sub
mov
mov
jno
fsubp
lea
add
add
out
pop
ret
xchg
push
imul
or
add
push
int
inc
mov
outsb
or
cmp
insb
mov
out
daa
add
pop
jl
sbb
xor
mov
or
mov
cld
jo
rol
jecxz
xchg
pop
idivl
out
dec
adc
nop
rorb
push
xor
add
add
adc
out
inc
sbbb
push
mov
mov
inc
out
out
jae
pop
jg
mov
popf
cmp
movsb
in
mov
incl
xor
test
loop
cmp
cmp
mov
rcll
ljmp
shr
mov
sbb
jle
add
add
push
fsub
xor
cmpsl
sahf
sub
test
dec
out
sub
xor
les
mov
or
xor
rorl
out
enter
xchg
jp
jnp
jmp
sbb
daa
add
mov
xor
fidivrs
outsl
rcr
jl
sbb
call
cmp
pop
pusha
xchg
jecxz
scas
xchg
enter
add
add
add
aas
sbb
push
sbb
mov
pop
push
daa
std
aam
adc
jmp
bnd
push
adc
adc
jmp
es
jle,pt
call
bound
sbbb
add
hlt
sbb
push
adc
movsb
in
imull
inc
jb
sar
lods
in
movl
jmp
add
add
fimuls
in
testl
sti
add
mov
dec
add
jmp
unpckhps
addr16
cmpsb
mov
add
jmp
out
adc
dec
std
inc
mov
ret
fldt
mov
rolb
push
stos
inc
clc
cmpsb
mov
mov
mov
inc
ds
push
xor
xlat
inc
je
jg
add
add
jp
jg
jo
insb
mov
jg
repnz
push
add
inc
ret
jne
xor
out
inc
add
bound
dec
sbb
movntq
sbb
push
outsl
aaa
out
add
xor
daa
sbb
xor
lcall
pop
sbb
std
pop
fdivs
or
add
repz
cmc
pop
add
and
das
adc
dec
sar
xchg
dec
pop
mov
jbe
mov
or
xchg
es
jb
cmc
mov
mov
aad
mov
mov
push
pop
adc
ljmp
cmpsb
sbb
aas
adc
enter
ret
out
and
loope
clc
cli
add
add
or
push
add
cmc
scas
test
sub
dec
jmp
mov
add
inc
and
punpckldq
pop
add
jmp
add
ret
icebp
inc
mov
xchg
sbb
ljmp
shl
push
jns
das
fs
cmc
xchg
out
pop
out
jmp
sub
fdiv
and
jmp
movsb
and
les
xor
test
push
mov
mov
and
cld
sbb
enter
test
std
mov
xor
jl
in
imul
and
dec
and
and
mov
cmpsl
out
stos
les
in
inc
rep
sub
sub
movsl
inc
hlt
adc
and
idivl
lods
decl
push
pop
sti
aad
jge
incb
add
add
inc
std
inc
icebp
sar
fistpl
std
inc
into
dec
pop
push
cltd
cli
notl
push
or
pop
xlat
les
push
call
xor
sarl
mov
mov
aaa
mov
aaa
add
sahf
jns
stc
mov
xchg
mov
je
cmpsb
cltd
lock
jns
inc
divb
adc
add
dec
popf
jns
leave
mov
jg
out
add
int3
testl
jo
xchg
jp
and
jge
or
add
xor
jbe
lret
sbb
sub
sub
lcall
jns
pop
sub
ljmp
aam
and
sub
std
dec
sarl
mov
subl
add
add
add
jmp
sub
cmp
mov
int
jge
xchg
jb
int
sub
push
add
mov
out
or
ret
add
add
cwtl
mov
inc
xor
xor
pop
xchg
stos
int3
sarb
out
xor
mov
out
cmp
mov
add
sub
js
mov
movsb
jge
mov
mov
dec
and
pop
add
jns
inc
mov
pop
and
sbbl
test
and
adcb
popf
in
ljmp
cmp
ljmp
push
dec
xchg
aaa
dec
imul
lods
dec
pop
xchg
lret
push
rol
into
call
dec
ret
imul
inc
popf
xchg
mov
adc
rol
jmp
xchg
or
iret
mov
daa
sbbl
pop
subl
iret
mov
iret
mov
or
test
dec
ret
inc
mov
jb
mov
xor
lock
dec
xchg
push
mov
add
orb
push
call
push
cmp
lods
jle
add
or
test
lds
lret
add
add
jo
sti
mov
mov
jbe
xor
jle
push
test
cmp
xchg
jns
shlb
add
shr
dec
mov
mov
jmp
out
jl
mov
sub
add
xchg
dec
mov
sub
cld
sbb
add
andb
mov
cs
mov
inc
jge
pop
fs
stos
movsb
js
jmp
aaa
mov
lret
sub
cld
cmp
jne
ret
xor
out
jl
fsubrs
jnp
ficompl
jb
test
repz
cli
repz
add
add
xor
outsl
and
out
cmp
add
jg
add
add
mov
xor
imul
inc
add
add
aad
lahf
inc
lret
add
add
test
scas
sbb
out
mov
outsl
into
call
cmp
add
mov
jnp
mov
mov
pop
out
out
add
loop
lea
add
push
xchg
add
adc
xacquire
out
jb
push
xchg
popa
jmp
add
sbb
insl
gs
jmp
push
mov
inc
into
sar
call
scas
shl
xor
aaa
loope
add
push
jmp
xor
in
push
push
pop
jae
insl
dec
dec
insb
cs
jmp
and
mov
push
cmpsl
xor
int3
add
jmp
add
out
xchg
sbb
push
push
andl
iret
and
mov
imul
ret
pop
add
rcll
sub
ljmp
jecxz
adc
loope
andl
cld
mov
add
add
sbb
pop
xchg
inc
clc
pop
xlat
les
add
call
in
testb
push
xchg
cmp
mov
notl
test
jns
inc
ret
dec
cmp
dec
call
pop
pop
or
out
sar
shrb
inc
out
mov
pop
fs
out
sub
add
inc
lahf
and
imul
adc
jmp
pop
and
mov
loopne
inc
and
jb
les
pop
adc
je
jne
incl
and
xchg
hlt
ficompl
sbb
mov
out
inc
aas
movsl
lldt
inc
jg
mov
sub
push
cmp
pop
enter
add
insb
popa
jne
lret
add
shll
ret
inc
ss
jecxz
cmp
ljmp
jp
ffreep
jp
fisttps
and
inc
andb
lret
jbe
lret
inc
das
stos
add
xchg
xchg
xchg
ffreep
xchg
mov
clc
sub
add
add
add
out
out
scas
enter
add
add
stc
sub
mov
in
sbb
clc
push
pop
subb
rorb
in
jo
in
xchg
cli
xchg
call
pop
mov
push
mov
jae
mov
loopne
cmpsb
pop
and
imulb
popa
sub
out
or
add
pop
push
add
cld
push
pusha
ds
sub
add
pop
test
lea
sbb
lahf
adc
jmp
sbb
sbb
int
add
inc
lock
fistpl
cld
push
pop
mov
pop
in
ret
mov
xlat
je
xchg
push
in
imul
push
loop
orl
dec
call
cmp
leave
std
pop
xchg
out
push
js
fs
add
mov
test
lea
cld
subb
push
loope
fadds
cmp
sti
adc
inc
fildl
jne
xor
out
xchg
or
sub
mov
ret
test
pop
lods
adc
stos
test
add
pop
out
mov
addr16
hlt
call
cmp
cld
sarb
hlt
mov
fcmovb
xchg
pop
pop
addr16
imul
mov
jl
cmpsl
sub
mov
inc
sbb
pushl
xchg
loope
sub
mov
fwait
mov
add
insb
cmp
icebp
fstl
enter
stos
jg
xchg
cmpb
sbb
mov
bound
mov
mov
shlb
imul
dec
es
pop
sub
push
adcl
cmp
cmpsb
add
shl
adc
call
sbb
add
out
fnsave
es
add
add
out
aam
cmpsb
fadds
xchg
in
add
lock
push
mov
inc
stc
xchg
mov
inc
or
loop
add
add
test
add
sahf
call
add
in
jmp
aaa
call
pop
loopne
outsb
dec
or
test
push
shlb
rclb
and
stc
iret
out
repnz
cld
xchg
pop
shlb
loope
mov
int3
mov
push
rorb
or
push
je
dec
xchg
lods
pop
or
cli
and
rcll
inc
mov
push
ret
pop
sti
aaa
mov
fdivr
pop
je
and
pop
test
xchg
aam
push
call
pop
dec
and
aad
or
add
mov
or
fcmovnb
dec
and
inc
and
dec
mov
inc
loop
dec
call
add
test
sub
aaa
push
fsin
fnstcw
cmp
cmc
xchg
push
xorl
xchg
and
adc
fsub
sbb
push
iret
dec
cmp
or
xchg
and
into
sub
dec
sbb
movsb
shlb
add
sub
add
out
xchg
cmp
insb
clc
mov
xchg
and
bound
push
out
add
ficoml
inc
jae
movsl
ret
fstl
jae
rcll
and
insb
sub
add
add
adc
xchg
adc
sub
cmc
sbb
cwtl
ret
add
add
movsb
push
call
pop
enter
lret
and
imul
and
popa
sbb
lret
imul
out
out
pusha
adc
mov
add
lahf
in
test
or
xchg
stc
mov
mov
dec
leave
adc
popa
and
subl
add
add
add
jmp
in
adc
sar
jno
in
xchg
mov
adc
mov
cli
in
sbb
push
in
rcr
cld
pusha
push
cld
xor
dec
adc
xchg
inc
inc
out
js
addl
std
cmc
das
jmp
push
add
daa
mov
inc
or
pop
int3
jnp
loope
push
call
dec
adc
ret
pushl
xorl
add
jno
scas
loopne
add
sbbb
inc
xchg
rcr
adc
ljmp
jmp
jl
or
push
in
inc
in
sti
mov
incl
shlb
inc
adc
test
sldt
add
sti
mov
pop
add
sti
jne
fistl
mov
sbb
inc
mov
sub
sub
push
out
add
cli
call
sbb
jnp
fildl
outsb
or
insb
cltd
xchg
sti
jmp
xchg
and
test
enter
cmp
push
xchg
adc
cld
xor
cld
call
filds
sbbl
mov
repnz
cli
adc
enter
mov
cmpsl
cmp
incb
imul
xlat
cmp
inc
mov
les
lods
cli
mov
cwtl
out
sub
mov
sbbl
jecxz
or
add
jmp
sbb
inc
lods
sti
rcrb
mov
test
sbb
sbb
test
add
mov
les
cmp
daa
sub
nop
jno
aam
cmp
arpl
popa
mov
movsl
jge
loopne
jmp
push
loope
push
orb
push
mov
add
jmp
arpl
pop
push
and
shll
imul
sbbb
icebp
dec
push
jo
mov
mov
pusha
loopne
jmp
in
add
sub
arpl
push
inc
inc
add
xchg
and
fs
add
pop
int3
mov
inc
loopne
add
push
std
incl
add
add
jo
lret
inc
and
icebp
pop
ds
je
pop
in
cmp
sti
pushl
sub
pushl
sbb
inc
js
and
jle
and
cmpl
fsubs
jp
or
jae
ret
add
jmp
pop
and
cmp
and
out
inc
add
inc
cld
mov
add
test
pop
daa
lea
add
add
aam
add
cld
jle
dec
push
jno
les
imul
lahf
test
out
mov
xor
or
cmp
add
adc
incl
sub
sbb
mov
sub
xlat
icebp
adc
push
mov
inc
inc
jae
cmpsb
adc
pop
sbb
cmp
in
xrelease
in
out
out
aaa
add
inc
in
add
popl
js
pusha
dec
out
sub
lahf
in
pusha
arpl
add
jecxz
bound
cmpsl
in
negl
out
xor
fbstp
fs
mov
xchg
loop
xchg
mov
add
add
xchg
fistps
push
pop
add
add
test
lock
mov
xchg
mov
out
cwtl
mulb
add
decl
or
hlt
mov
popa
cmp
arpl
stc
xchg
pop
lds
adc
adc
insb
or
hlt
loopne
aas
jmp
dec
sbb
jbe
inc
jb
andb
pop
roll
cmp
jo
mov
mov
cmc
adc
xchg
add
sarl
add
in
ljmp
testb
repz
idiv
movsb
or
jge
or
bound
adc
jbe
psubsw
jmp
lret
into
pop
dec
jae
mov
push
je
aaa
jno
mov
add
incl
add
add
psubq
cmc
jno
popa
or
jne
xchg
ret
cmp
xchg
cmp
push
push
in
mov
sti
pop
jge
sti
jne
push
sti
and
push
mov
call
decl
jo
cwtl
repnz
jo
cmpsl
insb
or
cld
dec
mov
jno
shrl
fistl
inc
out
jnp
mull
jmp
jb
testl
arpl
imulb
adc
adc
iret
adc
xor
sar
pop
hlt
lcall
xchg
test
add
sbb
mov
xor
mov
adc
adc
loope
les
sbb
jmp
aaa
add
lret
jae
xor
cmp
cwtl
ljmp
popl
in
fwait
nop
ficoms
cmc
ja
ret
cmpb
call
js
call
add
ss
sub
add
dec
push
imul
sbb
jp
add
nop
adc
mov
xchg
call
add
add
ret
out
outsl
and
jl
addl
enter
fildl
adc
add
out
lret
xor
or
jge
sub
les
in
jmp
sbb
jge
mov
outsl
xchg
and
push
loope
sbb
in
cld
sbb
aas
in
cld
cld
cmp
adc
pop
loope
pusha
push
loope
je
loope
mov
pop
scas
cld
aam
aam
push
scas
or
arpl
inc
add
test
pop
jb
notl
pop
add
or
pop
mov
push
mov
mov
or
or
cmpsb
lret
test
add
add
dec
mov
push
cmp
lock
add
mov
jbe
jo
data16
ljmp
adc
fsts
ret
aad
add
arpl
sti
incl
mov
push
cmp
jb
idivl
adc
dec
incl
adc
out
cltd
or
outsb
or
xor
mov
or
inc
movntq
ja
xor
mov
nop
fidivl
fldt
jae
outsl
adc
adc
xchg
sbb
out
outsl
cmp
repnz
scas
dec
mov
enter
adc
cmp
cld
mov
jno
ud1
pop
sbb
imul
in
lods
pop
and
pop
pop
jge
shr
jb
addb
popl
fidivrl
cltd
shrb
lahf
stc
or
addr16
add
push
sbb
add
aad
mov
ret
pop
ret
mov
addl
repnz
pop
xchg
loopne
cmpsl
and
addr16
ja
cwtl
nop
sub
push
mov
and
add
lock
out
jecxz
loopne
jo
loopne
pop
negl
adc
lods
or
fadd
clc
jmp
add
jbe
bound
out
sti
push
loop
nop
cld
movsb
add
xchg
pop
add
insl
and
jb
and
sti
out
repz
push
jb
cmpl
je
push
adc
dec
push
loop
test
pop
jmp
add
jmp
pop
sahf
dec
rcll
jge
in
inc
jmp
add
jp
jmp
push
rcrb
add
sbb
test
pop
add
mov
inc
add
into
sbb
or
lea
adc
push
jns
icebp
subl
jno
add
ret
xor
push
fidivs
add
mov
pop
adc
aad
dec
lret
das
gs
or
out
mov
jne
dec
lds
ds
jge
or
lea
xor
mov
cld
decl
rol
jne
fnstcw
movsb
ljmp
push
or
call
mov
add
add
bound
loope
out
andb
add
jmp
lea
inc
out
pop
adc
adc
fcom
hlt
cld
push
fiadds
call
add
sub
lcall
push
mov
sub
rolb
outsb
adc
fucomp
mov
mov
aad
xlat
ret
lock
lret
inc
imul
xor
cld
out
testl
inc
xor
pop
mov
or
ja
push
add
pop
ret
daa
lcall
out
stc
or
fadd
cmp
mov
xor
mov
sbb
sar
es
js
sbb
std
xchg
or
cli
sub
xstore-rng
cmpsl
add
inc
in
add
add
out
adc
sti
and
imul
jecxz
adc
icebp
icebp
lea
jmp
in
push
bound
jmp
push
inc
or
inc
call
je
stc
xchg
lret
or
imul
push
out
imul
add
or
movb
add
fistps
mov
or
sbb
call
add
cmp
and
add
jne
xchg
jle
push
add
add
jmp
xchg
decb
or
or
or
incl
mov
cli
inc
into
cwtl
cli
mov
clc
cmp
loope
sbb
call
add
mov
add
add
inc
cli
decl
outsb
stc
out
sti
jle
sahf
enter
add
sbbl
add
lea
inc
idiv
sub
cmc
push
cmp
ret
aas
idiv
imul
jle
ljmp
in
pop
pop
aam
jg
jecxz
jo
jge
movsl
mov
sar
sub
inc
xchg
stc
dec
repz
ret
out
add
pop
cmc
js
out
pushf
js
cmpsl
es
aaa
jbe
mov
loope
mov
push
add
mov
jbe
sbbb
jmp
das
cli
mov
cmp
jb
in
jo
jbe
pop
pusha
cmp
mov
add
lods
dec
inc
jmp
push
outsb
fmul
nop
fsubrl
lods
inc
sub
push
and
add
out
pop
andb
bound
and
ret
test
pop
stos
stos
sub
icebp
add
push
add
push
mov
add
add
je
stc
or
and
mov
jo
jp
push
add
cltd
cli
ljmp
add
sub
mov
inc
lods
jno
jmp
loopne
push
add
pop
cmp
insb
mov
es
mov
and
je
inc
int
dec
std
inc
push
call
and
enter
and
addr16
out
lea
jmp
push
cmpb
je
xchg
clc
je
aam
pop
mov
mov
jmp
out
add
in
add
arpl
jmp
psubsw
inc
jno
sti
pusha
push
lea
dec
mov
inc
ljmp
insl
fcos
decl
pop
mov
shl
pop
mov
aas
and
pop
xchg
push
xor
shlb
mov
cmpl
incl
mov
lds
and
aas
and
sbb
mov
push
jns
pusha
iret
add
mov
sarl
in
inc
add
jnp
out
js
ds
into
imul
jmp
les
insl
cmp
pop
sbb
leave
shlb
or
aas
popa
jns
inc
fnstsw
xchg
push
push
pop
daa
add
in
out
sbb
xchg
pop
divb
dec
cld
dec
jmp
sbb
add
add
push
jge
aam
mov
insl
out
pop
call
xchg
in
ljmp
push
xor
sbb
pop
xchg
or
add
sbb
out
mov
add
push
xor
js
or
cmc
inc
add
xor
jb
add
bound
rcll
add
add
int
leave
add
add
fildl
andb
push
add
pop
pusha
call
in
add
inc
push
jne
dec
nop
mov
in
aas
add
negb
push
mov
stc
ret
push
and
inc
sbb
push
dec
or
or
add
pop
push
add
add
mov
cmp
push
cmp
add
add
push
push
rcrl
test
out
add
jmp
lret
inc
add
jae
test
add
cmp
ret
sub
jne
loope
inc
jne
jp
push
cli
movsb
in
cmp
clc
pop
aas
or
out
or
mov
add
popa
les
xchg
das
shr
add
or
add
jle
push
cld
mov
jne
xchg
call
add
push
pop
mov
call
push
push
movsb
sub
jns
or
inc
gs
inc
dec
add
lret
cmp
call
mov
das
shr
mov
clc
and
or
pop
divl
add
push
add
idiv
dec
add
or
call
jnp
out
test
ljmp
out
addr16
fdivl
out
adc
jle
out
nop
inc
fwait
cmp
std
push
pop
out
inc
add
leave
stc
mov
sti
push
test
add
je
xor
cmc
stos
mov
data16
xor
in
sti
jno
or
add
add
popa
cld
mov
ljmp
cmc
sti
loopne
les
arpl
dec
or
add
push
out
push
mov
imul
jg
in
pop
pop
jmp
or
repz
test
push
les
rorl
sbb
sbb
cmp
add
adc
cmpsl
sub
mov
and
inc
das
cmpsb
jle
repnz
jb
xchg
jmp
pop
jmp
inc
or
jns
stos
fbld
fstpt
stc
in
repnz
fistpl
inc
jmp
push
jmp
jmp
in
add
leave
mov
cmc
adc
adc
insb
movsb
ja
pop
das
fsubr
pop
in
add
movsl
js
add
jne
mov
call
sbbl
push
shrb
pop
leave
stos
jmp
push
jb
push
push
sbb
push
push
xchg
jl
sti
xchg
pop
repz
add
sub
imul
push
cli
cmc
test
jo
std
mov
cli
adc
popa
pop
ret
clc
in
jne
cmpb
outsb
lock
orl
test
pop
jp
out
repz
fiaddl
dec
lock
popa
push
xchg
jnp
pushl
push
leave
int3
sti
call
jnp
jbe
dec
push
or
jnp
inc
add
or
sbb
call
mov
out
jne
xor
jmp
jl
or
pop
cwtl
add
add
notl
int3
call
mov
push
push
pop
cwtl
add
add
shl
enter
pop
push
cmp
jmp
ss
mov
mov
out
jmp
mov
and
inc
fwait
xchg
adc
mov
hlt
repnz
or
jne
or
mov
jl
push
call
adc
push
leave
and
and
out
dec
push
mov
add
int3
push
shlb
push
and
and
movntq
adc
test
out
sti
sub
popl
addb
outsb
ret
cmp
pop
fmul
xchg
mov
out
fstpl
imul
add
les
aaa
scas
out
sbb
dec
mov
jmp
mov
mov
push
bound
push
decl
xchg
std
jl
outsb
repz
push
and
dec
aad
cmp
outsb
cld
push
mull
std
out
dec
inc
jb
mov
mov
xchg
fcmovnu
je
out
ret
mov
add
xchg
ds
push
ja
test
cmpb
sub
add
push
dec
dec
sub
push
pop
jne
ds
repz
aaa
or
sub
and
push
add
jmp
pushf
ljmp
push
call
jae
out
and
xchg
jmp
cmpl
outsb
dec
pop
xor
in
sbb
push
shll
bound
xchg
gs
xor
add
sub
cld
clc
adcb
cli
mov
lea
cmp
rcrb
add
jae
in
push
outsl
push
lea
push
bound
stc
decl
jg
test
jae
mov
bound
mov
outsb
lret
sub
cld
stc
adcb
cli
mov
loopne
push
xchg
dec
jo
cmp
rcrb
add
repz
andl
push
cmp
call
push
je
ret
shlb
xor
xchg
loop
fwait
xchg
test
xchg
add
add
push
mov
fs
push
out
lock
clc
push
insl
xor
adc
movsb
push
or
out
pop
das
cmpsl
inc
mov
pop
or
ficompl
out
dec
aam
aaa
sbb
jecxz
jb
adc
imul
sti
mov
jecxz
pop
jecxz
mov
mov
ljmp
xor
pop
jns
in
xor
pop
add
lock
icebp
js
sub
or
add
push
mov
out
stos
sti
loope
daa
sbbb
xlat
stc
inc
add
push
les
pop
popa
iret
xchg
push
test
add
sub
mov
cld
ffree
sbb
int3
fists
xchg
pop
iret
push
call
inc
lret
jl
mov
fucomip
inc
addb
inc
out
pusha
cmp
sbbb
icebp
mov
fiadds
add
repnz
pop
and
pop
je
ljmp
xchg
stos
jl
cmc
mov
jne
mov
ret
mov
jno
clc
mov
out
jmp
lcall
and
xchg
sarb
ret
out
sub
loope
sub
aas
jmp
fmul
xchg
mov
addr16
je
push
out
je
sti
push
sti
cld
int3
adc
or
xlat
push
add
lock
add
cmp
add
jmp
addl
push
push
add
dec
cli
push
divl
push
lcall
pop
push
inc
incb
add
decl
mov
add
add
daa
add
jns
orb
add
add
es
mov
add
aaa
add
sub
decl
std
or
fcomip
pushl
lock
cld
test
or
shlb
or
cmc
sbb
cwtl
sbbb
sti
cs
xorb
add
or
add
add
lock
pop
jmp
inc
add
xchg
add
test
je
jno
call
fs
add
xor
call
sti
rorb
sti
lcall
jbe
in
rcrl
hlt
je
out
push
insb
scas
sbb
and
aas
mov
data16
xchg
hlt
shrb
sti
cli
add
add
add
add
add
data16
push
xor
outsb
cmc
jle
call
or
or
push
lds
cmpsl
add
int3
loop
push
mov
cld
jae
lds
xchg
call
xor
pop
out
adc
les
pop
jmp
add
out
pminub
mov
fisttpl
xchg
xor
add
add
repz
daa
jecxz
adc
fildl
frstor
or
cmp
repz
fidivrs
dec
and
push
jno
jb
and
rcrl
repz
xor
adc
jmp
cmp
pop
sti
sahf
and
test
in
out
xchg
dec
xchg
stos
sti
pushl
mov
add
add
push
push
cli
mov
jge
jecxz
jl
jecxz
jge
jecxz
add
sbb
xchg
jg
fisubs
add
mov
sub
dec
addr16
and
pop
inc
adc
jl
add
sbbl
adc
hlt
divl
dec
call
mov
je
ficomps
out
setb
add
push
cmpb
insl
push
push
pop
outsb
or
xlat
idiv
push
lds
add
inc
or
clc
decl
inc
and
inc
and
push
mov
out
std
repnz
sbb
and
testb
out
jge
ret
ret
lret
cmpsb
dec
xchg
fidivl
ret
xchg
jbe
or
fdivrl
lock
fiadds
push
sub
sub
out
aam
bound
sub
pop
sub
outsb
pop
sub
dec
jmp
adc
aaa
adc
gs
add
dec
push
lock
xor
lcall
cmpsl
into
or
pop
notl
lea
aaa
call
arpl
jae
mov
and
mov
add
lock
aas
lds
mov
adc
lds
pop
add
sub
add
add
sub
fiaddl
fistl
loop
add
dec
or
js
and
xchg
ret
pop
stc
call
add
out
sbb
adc
pop
or
pop
dec
lret
pop
sub
pop
lds
stos
psrad
jb
or
out
int3
xchg
call
daa
fucomip
fdiv
mov
inc
add
sub
add
xchg
and
test
in
dec
mov
xor
lcall
add
mov
test
push
push
data16
push
or
daa
sub
sub
test
push
push
data16
dec
push
or
test
xor
or
test
nop
daa
xor
mov
gs
in
pop
int
push
test
ljmp
push
ljmp
cmc
rcll
mov
pop
addb
push
sbb
sbb
add
aaa
mov
call
mov
pop
jl
xchg
sub
add
jle
je
cmpsb
sbbl
je
ljmp
je
sub
ljmp
add
flds
test
add
movsl
fnstenv
mov
add
add
dec
cmp
jnp
cli
cmp
mov
sub
mov
sub
call
pop
add
call
cmp
fiadds
dec
data16
jmp
decl
les
es
fists
inc
push
or
dec
and
mov
sub
shlb
push
inc
out
dec
and
gs
and
jp
inc
add
in
adc
xor
aas
add
sub
daa
sub
sub
ljmp
out
mov
and
cld
incl
insb
test
in
sti
mov
into
aam
cmp
add
jmp
movsl
inc
or
daa
fisttps
daa
xlat
add
sub
sub
std
adc
in
mov
xchg
jge
int
jg
add
insb
lea
fsubs
push
in
shll
add
jmp
push
or
jmp
loopne
and
in
scas
pop
sub
mov
lret
sub
mov
mov
fisttpl
xchg
jmp
inc
pop
nop
mov
pusha
out
add
fdivrl
faddl
xchg
pop
or
stc
push
int3
out
sbb
or
xchg
sub
jg
xchg
pop
jge
cwtl
xchg
adc
fidivs
sub
call
sti
jne
pop
dec
sub
add
mov
or
fidivrs
add
sbb
cld
cmp
xchg
push
in
das
ret
or
mov
mulb
fimull
add
add
mov
add
pop
aas
add
xor
rsqrtps
add
into
xor
call
orb
mov
adcl
ret
in
fwait
imul
loope
incl
ret
pop
test
add
sbb
fldl2t
push
call
add
je
imul
add
shlb
repz
dec
ret
lret
std
lcall
aaa
push
call
ret
je
int
dec
push
pop
outsb
in
ret
xlat
dec
push
xchg
inc
lock
rorl
pusha
es
test
loopne
sti
mov
add
out
jnp
fisubrl
push
bound
mov
sti
push
out
call
adc
jp
mov
inc
bound
out
fsubl
jmp
jmp
addr16
jp
jmp
cli
rorb
and
out
pushl
lods
cmp
out
inc
sti
mov
stc
in
jg
jmp
jmp
push
packsswb
out
outsb
repz
adc
push
imul
ljmp
push
aaa
icebp
sub
fmull
stc
insl
inc
pop
sub
fstp
adc
xor
out
fcompl
add
xor
fimull
mov
sbb
cmp
adc
fdivr
mov
shr
test
jmp
inc
aas
pop
enter
cmpsb
dec
jns
jmp
out
pop
jmp
or
jmp
xlat
cmpsb
idivb
sub
test
insb
add
xor
cs
movsb
add
jmp
nopl
add
add
icebp
xchg
and
test
push
pop
push
pop
ja
test
xchg
xor
mov
stos
add
imulb
test
push
fwait
push
sub
add
popf
fdivr
dec
sub
add
mov
sti
add
test
add
scas
add
sub
neg
dec
lcall
sbb
add
pop
dec
push
stc
pop
mov
push
loop
mov
add
add
mov
lea
test
pushl
inc
cs
lea
enter
ss
dec
rorb
inc
into
sub
dec
inc
idivb
cmp
imul
or
popf
pop
mov
inc
fmuls
pop
cld
dec
push
lea
cs
test
push
jae
cmp
cmp
add
mov
add
in
jb
inc
mov
sti
pop
in
dec
lcall
lea
jecxz
or
add
add
js
jecxz
daa
sbb
dec
sti
repnz
adc
in
mov
mov
jecxz
mov
jmp
out
dec
jnp
mov
stos
sub
nop
mov
sahf
sub
add
sbb
jg
repz
push
adc
jb
ret
rcl
push
in
ljmp
out
jnp
roll
fistl
out
ftst
mov
fs
or
pop
loope
jmp
jns
aaa
cmpsl
call
adc
std
std
fcomps
cmp
jmp
in
add
xlat
pop
call
call
dec
ret
mov
data16
add
adc
sub
or
jle
add
add
inc
stos
addr16
add
aam
out
and
ds
cmp
dec
lret
pop
imul
add
mov
sti
mov
dec
adc
popa
xlat
les
movsb
push
inc
jmp
stos
add
jmp
ret
das
mov
fisttpl
adc
fwait
sub
in
call
jb
xor
and
jg
in
mov
add
push
sbb
push
pusha
aam
push
psubw
in
lods
inc
add
pop
inc
add
fstl
dec
test
test
mov
mov
rolb
mov
xchg
shl
sub
pop
inc
push
leave
mov
call
jnp
push
sub
add
subl
xor
mov
pusha
or
cs
sbb
cli
mov
sub
mov
sub
fiaddl
and
callw
mov
cmp
mov
fninit
fadd
add
jmp
mov
push
call
add
je
leave
cs
or
and
out
push
and
add
add
dec
lods
jbe
pop
pusha
mov
out
lcall
lcall
jg
mov
cmp
lcall
into
sbb
pop
or
push
inc
hlt
pop
daa
loopne
movl
jne
shlb
jne
gs
hlt
iret
jle
sti
mov
and
add
cltd
loopne
fwait
ds
or
add
add
psraw
inc
and
addb
repnz
outsl
mov
insb
mov
cmp
dec
xor
filds
xchg
cmp
addr16
add
adc
sbb
fdivrl
add
add
add
inc
loope
sbb
or
add
popa
cmpsl
add
jmp
sub
sbb
add
jmp
add
jle
push
inc
addl
or
xchg
adc
popa
xor
mov
fcoms
call
fadds
repnz
fs
shlb
in
imul
push
in
xchg
dec
jb
xor
in
shrb
ret
call
daa
jecxz
movsl
mov
mov
lock
sub
xchg
add
fnstsw
ljmp
ds
leave
stos
filds
das
test
cmpsb
or
pop
fs
std
cmp
xchg
add
decl
push
push
cld
add
insb
aad
add
xchg
jle
and
or
add
adc
sarl
xchg
call
cmc
add
add
sub
mov
add
add
or
dec
jo
testl
cmp
lcall
outsb
divl
fistpll
cmp
ljmp
sahf
pop
push
pop
movsl
jle
pop
cmp
add
jecxz
in
add
add
jle
mov
sti
dec
test
push
add
out
mov
imul
push
aas
or
dec
fistps
add
cwtl
fadds
scas
jo
iretw
hlt
mov
rcr
xchg
and
repz
jle
lods
inc
cmpsl
aam
ja
fadd
inc
rcr
xchg
gs
in
aad
sbb
lea
add
gs
lock
adc
sti
aaa
push
dec
insb
sub
add
subb
add
xchg
add
add
idiv
lock
cltd
add
add
mov
test
sub
mov
fsubl
fldl
out
add
in
in
sub
cmp
add
pop
call
sub
xor
push
jmp
hlt
outsl
jmp
pop
mov
imulb
inc
lret
and
fldl
add
add
jae
inc
out
push
repz
rcl
jmp
std
aad
lock
fldcw
aad
bound
loopne
pop
fnstenv
cld
mov
jg
imul
pop
pop
or
test
mov
jp
je
daa
or
add
jmp
in
test
hlt
mov
cmp
add
add
and
out
add
xor
shll
jmp
sub
test
or
sti
enter
push
sub
mov
addb
inc
or
add
add
jle
and
xchg
outsb
xchg
or
inc
and
adc
mov
mov
sti
ljmp
jl
and
fldt
movsl
jmp
push
rcrb
pop
ret
pop
addl
add
gs
leave
add
test
test
add
push
xchg
push
jle
or
pop
bound
out
out
jle
in
mov
mov
jmp
inc
or
aam
push
pop
push
out
aas
mov
ds
nop
aad
fsubs
add
faddl
gs
mov
push
mov
push
in
xchg
out
ljmp
daa
push
inc
clc
push
test
or
add
out
inc
lock
lcall
in
bound
add
addl
fmull
insb
rolb
xchg
les
jle
push
out
jmp
call
loope
jmp
fldlg2
xchg
add
add
xchg
add
add
fldlg2
xchg
and
or
add
cmp
fnstcw
sub
add
pusha
push
or
leave
cmp
or
std
insb
shl
jmp
cld
lret
jecxz
add
mov
jns
sbb
push
cmc
or
push
in
test
add
add
cmp
dec
shr
mov
pop
int3
daa
mov
sub
mov
jmp
popa
jg
jmp
or
hlt
ljmp
lods
mov
int3
sti
jmp
leave
lret
call
insl
movsb
push
push
fs
push
adc
sbb
xchg
dec
movl
jo
jae
sub
add
add
test
push
mov
add
or
xchg
sbb
sti
into
cmpsb
iret
cmp
ret
scas
pop
adcb
cld
call
or
inc
mov
sahf
into
pop
add
inc
add
add
cld
jecxz
call
jmp
add
cmp
inc
add
inc
decl
fdivs
pop
mov
orl
inc
clc
pop
add
add
add
add
je
lds
jae
mov
add
add
out
push
incl
inc
call
out
inc
lock
cmc
inc
cld
fcomps
cli
add
fcompl
mov
je
pop
fdivs
xchg
jne
add
out
xor
sahf
pop
add
data16
mov
push
adc
pushf
ljmp
cmpsl
and
out
pop
aad
jne
cmpsl
add
pop
cmpsb
pop
xchg
stos
push
pusha
adc
dec
fdivrl
jecxz
inc
in
mov
jle
inc
leave
jp
mov
mov
add
in
add
pushf
inc
add
add
jo
add
js
mov
fcmovnb
jmp
jae
arpl
in
leave
popa
jne
add
add
add
ljmp
cltd
add
aas
jns
iret
or
loop
hlt
sarl
fistpl
add
add
xor
aas
sub
mov
shr
xorl
pop
jb
out
add
leave
or
push
ljmp
sbbb
jmp
mov
xor
cwtl
add
in
fnsave
add
push
add
jmp
and
sbbb
jne
lock
xor
aam
idivb
jmp
movsb
dec
pop
jb
xchg
call
out
ds
jge
mov
or
sbb
cmp
cmp
sbb
daa
and
mov
lret
push
int
pushl
pop
push
inc
ds
mov
push
sub
stos
and
in
sub
addb
cmpl
add
adc
and
cmp
idiv
push
shlb
sub
idiv
addr16
decl
or
pushf
pop
mov
push
sbb
inc
scas
lea
adc
cli
pop
mov
mov
test
decb
mov
jne
inc
inc
hlt
out
push
xchg
out
jmp
or
into
sti
xchg
push
lods
call
pop
push
iret
call
arpl
pop
or
loopne
xor
jmp
mov
mov
xlat
ret
add
into
das
cmpsl
cmp
add
cmp
test
add
add
imul
fmuls
inc
je
pop
int3
pop
sbb
xlat
adc
movsb
push
scas
call
adc
adc
std
in
mov
add
xor
int
fmull
jge
or
mov
inc
and
lretw
scas
push
in
pop
jecxz
out
mov
jns
push
cltd
push
lret
filds
xchg
jg
mov
fldl
ja
xchg
inc
orl
mov
dec
pop
data16
dec
fildl
ja
mov
cmc
xchg
mov
mov
ret
xchg
add
jp
and
data16
jp
rcll
test
scas
xor
pop
dec
arpl
sub
sub
add
pop
nop
or
jle
add
imul
fisttpll
dec
lret
cmp
pop
bnd
or
and
or
inc
stc
fnstenv
fbld
lea
imul
leave
jle
add
cvttps2pi
pop
stos
sti
ret
data16
push
jnp
shrl
add
and
lahf
push
add
add
mov
call
clc
cmp
or
sub
push
out
push
jmp
inc
mov
push
lds
mov
sub
or
lret
into
jp
or
add
mov
xchg
je
mov
add
ds
sti
xor
push
mov
jp
xor
lea
add
add
clc
divb
pop
add
bound
out
pop
or
lods
mov
out
test
les
mov
call
xor
jne
and
stc
and
insb
incl
jb
std
outsl
lock
subl
scas
jmp
incl
push
cmp
call
arpl
rclb
add
jb
inc
dec
pop
mov
jnp
in
add
sub
push
rcrl
sub
mov
adc
mov
fidivrl
xor
or
sahf
mov
mov
mov
jmp
sbb
cli
fcomip
inc
out
adc
test
add
arpl
push
notl
mov
sbb
test
add
ret
test
lret
pop
inc
icebp
mov
les
fs
mov
or
fmul
xchg
cld
mov
scas
in
jbe
add
pushf
pop
and
add
in
add
xor
out
or
or
iret
loop
inc
fsubrp
xorb
out
bound
and
add
out
mov
jecxz
cmp
movsb
add
sub
mov
call
sbb
in
addl
in
mov
adc
sbb
lods
js
lcall
in
inc
jl
mov
adc
jmp
cmp
xchg
mov
notl
inc
inc
xor
sbb
test
in
idiv
rol
je
jo
je
pop
hlt
out
and
negl
or
subl
add
lock
adc
jmp
xor
xchg
shl
loop
notb
test
lea
add
and
xchg
pop
sub
test
and
or
into
pop
ljmp
mov
push
insb
pushf
das
xchg
xor
and
in
add
cs
or
cli
jp
sbbb
iret
insb
cmc
js
lods
aaa
cmp
in
mov
rcl
js
adc
add
sbb
mov
push
dec
sub
xor
add
in
mov
add
sub
jmp
xor
xor
xchg
add
add
sub
sti
jb
je
ffree
shrl
xor
add
jmp
stos
sbb
mov
adc
sbb
stos
xor
jae
fimuls
pop
daa
js
dec
lock
test
push
mov
idivb
loop
xchg
repz
cmp
xchg
or
add
add
add
jp
add
add
inc
movsl
cli
fmuls
ljmp
cld
xchg
adc
sbb
push
or
imul
jmp
xchg
aaa
add
in
cmp
daa
cli
hlt
shl
lahf
mov
negl
dec
push
push
cmp
fcmove
bound
inc
mov
test
lods
cs
lahf
repz
bound
rcrb
mov
xchg
xor
push
addb
cmp
out
into
aaa
sbb
mov
enter
sbb
jno
js
add
adc
dec
iret
and
repnz
mov
decl
and
rcr
add
xlat
cmpsb
xor
test
test
mov
add
add
fbld
add
push
jp
add
testl
pop
add
cli
push
push
add
push
mov
mov
mov
mov
jecxz
xchg
lock
mov
ja
mov
test
lcall
jmp
shl
out
add
std
jg
test
clc
ljmp
out
sub
sbb
fdivrs
mov
popa
cld
out
pop
add
sub
or
and
clc
int3
ljmp
jle
scas
jl
jnp
cli
xchg
mov
jne
cs
hlt
out
inc
lock
jbe
or
dec
or
mov
add
sbb
pop
add
clc
cmpsb
xor
or
das
lea
add
add
add
add
outsb
cmp
mov
js
add
add
shll
mov
and
push
mov
mov
mov
mov
test
clc
out
fnstsw
lea
pop
pushl
mov
sti
inc
inc
insl
mov
inc
inc
arpl
mov
dec
mov
ret
mov
addl
pop
lret
mov
sub
xor
or
add
in
push
jb
cmp
jmp
insb
inc
cld
pusha
mov
cmp
jmp
fs
stc
lock
jg
mov
pop
out
lret
adcl
fdivs
aaa
stos
xchg
cmp
add
add
add
cmp
imul
mov
ds
test
fs
stc
lock
jg
xor
adc
push
adcl
push
dec
add
filds
pop
cmp
mov
div
jmp
inc
dec
adc
jae
mov
divl
cli
or
xor
adc
testl
lret
orl
add
push
xor
jbe
push
lcall
cmp
je
cmp
jne
adc
push
dec
fildl
ret
es
idiv
test
int3
mov
cmp
je
mov
repz
mov
cld
mov
jmp
les
insb
pop
movl
add
push
cs
pop
xchg
sub
add
fs
mov
out
incl
repz
mov
imul
add
popf
jbe
fs
in
sti
sub
stc
loop
or
decl
loop
jne
sub
pop
push
fnsave
and
xorb
movsl
nop
js
sub
xchg
loop
jmp
sub
add
push
pop
mov
fiadds
mov
add
add
sub
ljmp
fldcw
add
into
repnz
std
fnstcw
cmc
repnz
nop
and
mov
adcl
xor
ljmp
scas
mov
addl
loop
pop
pop
mov
mov
call
stos
mov
ret
add
repnz
xchg
nop
cmp
movsb
sahf
add
sub
push
and
mov
shlb
inc
loope
pop
hlt
push
mov
push
daa
jle
shl
sti
push
clc
shl
jl
mov
cli
out
pop
mov
pop
aas
adc
mov
jge
inc
push
mov
pop
push
hlt
pusha
sub
pushf
jecxz
add
mov
add
jb
ret
les
mov
loop
xor
outsl
and
clc
or
adc
outsb
pop
mov
add
push
jmp
lcall
add
shlb
add
lret
ret
adc
and
push
add
or
test
inc
ds
dec
shll
testl
xchg
pop
pop
call
jg
jle
pop
push
pop
pop
mov
divl
out
inc
lock
cmp
sti
in
scas
or
jae
shl
shll
ja
fnstcw
sti
stos
adc
loopne
dec
sti
or
add
mov
mov
cli
jp
lods
fsts
mov
insb
fsts
pop
les
test
adc
jg
xchg
lods
pushf
out
incl
cmpsl
test
xchg
add
daa
add
mov
loop
dec
cmp
jge
push
cmc
jmp
cmp
add
daa
cmp
jge
in
loope
aaa
fists
cmp
xlat
outsb
push
fistpll
addb
loop
push
lcall
repz
cmp
mov
aaa
out
imulb
push
jge
icebp
jge
ficoms
inc
fadd
or
mov
mov
add
ffree
push
je
add
add
std
cli
or
sti
pushl
pop
lods
xchg
cmp
jns
adc
sbb
jmp
insb
popa
cmp
fisubl
jmp
mov
in
dec
out
sub
xor
fidivs
lods
jne
ljmp
mov
or
ret
jmp
je
out
xor
cmp
push
cmp
andb
sti
add
dec
or
jo
or
outsb
lret
mov
std
mov
jl
or
jne
and
ret
aad
sbb
js
pop
mov
add
bsr
cli
adc
inc
cmp
inc
jecxz
cld
fwait
in
xor
mov
setns
add
int3
adc
movsl
orb
rcrb
add
sbb
or
pop
sub
jp
or
cld
test
add
xchg
ret
lock
push
call
sti
push
nop
scas
mov
jl
fiaddl
das
scas
or
jg
push
xor
mov
pop
dec
and
bound
inc
leave
and
mov
cmp
lahf
or
vrcpps
add
add
add
dec
mov
mov
add
data16
cli
out
mov
sti
cli
js
inc
out
ret
lods
call
sbb
cld
out
mov
add
mov
jb
xchg
lods
shll
insb
mov
cli
jns
sbbl
push
cld
outsl
add
cwtl
pop
pop
test
add
add
jp
mov
sti
pop
push
scas
sbb
sbb
out
cmpb
hlt
orb
mov
cld
scas
enter
incb
fdivrl
mov
cmp
push
dec
sub
sub
push
sti
xor
addb
fdivp
sahf
pop
xchg
insb
push
sub
mov
scas
call
add
stos
sti
xchg
in
xchg
imul
fwait
outsb
sti
pop
xchg
or
push
popf
and
dec
inc
lea
jb
cs
ss
cli
mov
push
sti
cld
or
inc
jmp
gs
hlt
sbb
cld
in
call
pusha
out
rcrb
mov
test
mov
inc
add
cld
scas
add
add
add
pusha
sub
cmp
jecxz
clc
test
jo
je
jecxz
rorb
mov
or
add
jl
mov
push
jns
pop
test
fmul
xor
loope
add
pusha
add
aaa
mov
je
inc
xor
jl
add
in
and
push
add
fdiv
or
jle
add
inc
out
or
mov
adc
pop
adc
notl
pop
in
addb
stos
jne
xchg
mov
das
lods
imul
ljmp
pop
sub
inc
shrb
lahf
call
arpl
sub
test
adc
add
add
and
cmp
mov
cltd
rorb
dec
out
imul
cmp
add
add
imulb
lea
lods
pop
inc
jecxz
in
stc
or
lock
push
push
jmp
sbb
ret
cmp
mov
fidivrl
add
add
jg
or
fimull
sbb
mov
or
inc
pop
in
mov
xor
cmpl
dec
insb
test
sbb
sahf
les
fsubrl
push
or
sbb
cmpsl
add
in
imul
aam
adc
insb
inc
sti
jb
mov
cmp
icebp
aad
xor
xchg
add
imul
mov
popf
cmp
out
gs
xchg
pop
orb
dec
cmp
jmp
scas
inc
jbe
lods
out
fs
mulb
sti
pop
xchg
xor
jmp
scas
xchg
sub
scas
xchg
jmp
test
push
scas
sti
test
push
inc
clc
add
inc
hlt
ja
lock
push
test
jno
std
mov
add
fiaddl
mov
fnstenv
sbb
pop
xchg
mov
jns
sbbl
inc
add
add
test
imul
add
jae
stos
mov
adc
idiv
stc
fstpl
push
or
push
data16
leave
add
aam
call
jecxz
add
jge
fdivl
orl
aaa
outsl
idiv
xchg
inc
call
add
loope
dec
out
push
les
push
mov
clc
popa
clc
jns
sub
jmp
daa
aam
cli
fmul
dec
xchg
sbb
or
mov
add
sub
rorl
push
push
stos
movsb
aad
mov
and
hlt
lock
sub
in
add
sbb
or
and
cmp
cmp
xchg
add
add
and
add
lcall
pop
or
inc
loope
out
mov
add
push
pusha
add
push
scas
out
fildl
and
sbb
push
test
push
or
dec
out
lcall
sar
jg
sbb
out
cmpsl
add
stc
mov
cmp
add
add
ret
mov
mov
repnz
out
lcall
dec
cli
pop
adc
push
lretw
sub
lock
xor
sub
loope
mov
leave
sub
add
inc
test
dec
jmp
add
lock
add
cmp
jmp
das
mov
call
imul
call
enter
popf
inc
hlt
jmp
add
bound
mov
inc
repz
or
das
pop
int3
push
stos
add
imul
sti
jbe
stos
jne
jecxz
in
jo
mov
mov
sbb
stos
cmp
dec
add
lcall
push
adc
jne
mov
jmp
xchg
stos
fists
add
mov
idiv
loope
lea
add
add
push
not
jnp
pop
xchg
or
push
cli
add
je
push
inc
add
cmp
idiv
mov
sarb
rorb
jge
call
xor
ret
cld
and
pop
cmp
jnp
mov
inc
mov
or
add
sahf
in
add
repz
jecxz
cltd
test
notl
pop
inc
aam
xor
xchg
inc
aam
dec
sldt
add
mov
jge
jmp
cmpl
mov
mov
daa
es
in
jl
jae
mov
lods
fldt
push
mov
add
pop
int
divl
sub
mov
adc
adc
fcmovnu
add
imul
adc
xor
jl
subb
out
loopne
jecxz
push
add
add
adc
bound
das
adc
in
subl
xor
pop
sub
xor
stos
test
sub
inc
add
call
ljmp
dec
jl
into
inc
sbb
addr16
cmp
mov
insb
out
jmp
subl
xchg
inc
out
sbb
pop
inc
test
out
and
out
fdivrl
add
sub
pop
mov
add
outsl
les
mov
adc
jo
xchg
cmp
xchg
je
xchg
sahf
jne
js
in
lahf
push
stc
movsb
add
lods
and
and
test
in
sti
je
mov
nop
mov
mov
adc
add
add
xor
add
decl
sti
hlt
mov
inc
jmp
loop
dec
lods
jl
cld
scas
dec
sahf
jne
cmp
add
adc
fisubrs
add
jle
cmp
fildl
mov
idivb
pop
fiaddl
movb
mov
inc
xchg
scas
pop
adc
dec
pushl
divl
cmp
adc
xchg
dec
or
add
add
aam
ja
idiv
cmp
fisttpl
call
jno
hlt
loope
adc
mov
mov
outsl
adc
cmp
bnd
std
outsb
jne
test
stc
fists
into
pop
dec
push
and
divb
sbb
cmp
push
xor
or
lods
ljmp
sti
cli
cli
adc
inc
out
inc
or
xor
sti
inc
cmp
repnz
adc
test
push
dec
cmp
pop
scas
je
pop
lods
jne
adc
in
cltd
or
loopne
push
dec
jb
ret
xchg
test
adc
jne
rcll
clc
aam
add
das
cmp
insb
jno
jecxz
jno
sti
sbb
push
mov
rclb
add
lods
ror
stc
inc
out
sub
or
push
mov
mov
fcmovb
lahf
rolb
and
pop
jecxz
cmp
pop
lods
mov
mov
fs
lods
cwtl
cmp
repz
jmp
jnp
pushf
push
pop
aad
stc
test
push
aaa
outsb
sub
clc
pop
cmp
mov
stos
lods
mov
xor
lahf
add
sbb
fwait
clc
and
xchg
mov
inc
push
dec
jle
jle
xchg
fildl
xchg
fisttps
cmpsl
cmp
cmp
call
jb
or
out
cmpsb
or
loopne
add
sahf
ss
sbb
jmp
xchg
xchg
add
add
adc
adc
negb
je
jge
sub
add
hlt
push
ret
je
shrl
add
add
ror
add
fisubl
call
mov
add
bound
push
inc
add
xor
call
lret
rcll
adc
lds
imulb
xor
add
add
rorl
testb
je
imul
dec
add
add
fwait
divb
imul
mov
dec
mov
lock
je
mov
icebp
cli
mov
push
jmp
in
add
xacquire
inc
out
les
das
add
mov
inc
or
sti
repnz
inc
out
ret
cmp
out
ds
add
mov
out
sahf
test
imul
sbb
movsb
stos
test
imul
mov
in
add
out
je
adc
xor
call
add
mov
inc
jmp
loopne
pop
push
pushf
adc
shrl
insb
add
add
add
add
push
imul
add
ret
adc
cs
test
repnz
fldl
cmp
outsb
xchg
xor
add
push
push
sub
adc
pushf
cmp
pop
lret
test
xchg
aas
out
cld
xchg
inc
jmp
das
fsubrs
repz
inc
hlt
jmp
or
or
push
shr
dec
sti
fisubs
jmp
stc
or
fsubl
sti
aas
xchg
cmp
testl
jmp
and
inc
in
icebp
ret
fldenv
mov
insl
or
sahf
jne
xchg
sahf
adc
scas
popf
cmp
dec
dec
add
xor
or
rclb
call
insl
sub
arpl
testb
adc
inc
push
test
push
xor
pop
rcl
dec
call
or
jbe
popa
outsb
adc
fwait
notb
std
jmp
add
mov
notb
in
divb
sbb
notl
ror
adc
icebp
bound
mov
ds
add
add
push
push
push
pop
incb
inc
jge
call
divb
xor
aas
add
dec
pop
ret
push
mov
add
stos
jmp
sahf
add
stos
dec
das
lods
jns
mov
rcrb
std
out
decl
arpl
insl
jl
stos
jmp
bound
mov
testb
movsl
lea
add
add
sbb
mov
jnp
lcall
sub
mov
dec
pop
cld
push
push
xchg
pop
movsb
adc
in
in
and
pop
ja
enter
cli
xchg
xchg
cmp
dec
loopne
daa
shll
add
mov
mov
fs
xchg
or
fcompl
sub
mov
loopne
andb
jle
xchg
fisubl
add
add
xchg
cwtl
ret
inc
xor
cltd
xor
jle
cwtl
stos
movsb
pop
sub
cmp
xchg
sbb
cmp
ja
adcl
pop
out
or
cmpsl
add
fistpl
add
mov
out
jo
cmpsl
add
xor
xor
lcall
test
inc
pushf
sti
mov
inc
jle
xchg
loopne
mov
insb
adc
jmp
sub
xchg
sti
jmp
sahf
lahf
push
sub
add
fwait
inc
sti
incl
mov
insl
std
cltd
sti
xchg
mov
int3
mov
lea
in
leave
push
xor
test
mov
movsb
add
jae,pt
test
loopne
add
jg
add
not
xchg
mov
jecxz
mov
and
add
add
dec
in
adc
cld
and
add
je
xchg
add
iret
add
push
cmpsb
pop
out
pushl
add
jle
xor
cmp
ljmp
call
adc
pop
jnp
popa
sti
test
xchg
mov
pop
inc
push
rcrb
pop
ret
jnp
in
andl
scas
pop
xchg
xor
inc
out
push
mov
and
dec
stos
push
test
pop
xchg
push
call
inc
repz
out
mov
lea
jnp
sti
cmp
mov
sub
call
push
sbb
nop
push
xor
pop
or
outsl
loopne
out
fs
sti
out
sbb
out
rcll
scas
adc
hlt
testl
inc
or
add
hlt
loope
loop
call
jmp
movsb
testl
loope
jp
sub
aam
test
push
xchg
hlt
sbbb
sbb
xchg
hlt
stos
jmp
add
push
out
jmp
add
ljmp
cmp
sub
out
jmp
mov
mov
lods
mov
pop
add
add
hlt
and
ret
rcr
adc
pop
add
pushf
push
sub
jle
fdivl
pop
and
in
add
sbb
inc
inc
cmp
pop
push
jl
in
sti
testl
add
add
mov
sub
sti
bound
add
test
and
xor
cltd
jno
in
xchg
jecxz
and
out
dec
in
adcb
in
sti
fsubl
aas
jmp
push
dec
in
pop
push
push
call
pop
clc
aas
jmp
sub
add
int3
sub
pop
clc
subl
push
lds
inc
xor
mov
add
stos
or
mov
ds
test
or
addl
dec
and
enter
inc
je
cmp
add
ret
jge
addl
out
ror
add
xor
sbb
icebp
xchg
adc
je
and
not
add
pop
xchg
ds
jne
jle
adc
adc
dec
mov
add
lock
jg
mov
sti
dec
inc
insl
mov
call
out
ret
test
mov
xchg
sbb
cmpsb
out
rcrl
and
and
fistl
jecxz
loopne
mov
daa
fwait
mov
pop
xchg
das
lea
repz
iret
repnz
mov
inc
mov
or
xchg
add
add
lcall
xor
sub
bound
or
or
xchg
xchg
popf
push
jge
dec
xchg
sbb
fistps
pop
xchg
push
fldl
push
stc
add
nop
aam
or
add
xlat
xor
sarl
fwait
mov
popl
jg
jmp
sti
rolb
int3
xchg
pop
lock
aam
icebp
inc
jmp
add
pop
jmp
popf
pusha
or
or
xchg
bound
stos
loopne
mov
pop
mov
xchg
mov
fwait
enter
mov
jb
xchg
fisubs
mov
pop
ret
dec
fwait
mov
orb
in
dec
inc
mov
xor
das
xor
jmp
loopne
add
or
sub
and
scas
inc
and
repz
insl
rep
dec
and
lahf
inc
and
fisttpl
das
test
stos
dec
adc
xlat
xchg
push
aam
add
rorb
stos
fmuls
jbe
pop
fdivl
or
jno
rorb
insb
add
jle,pt
or
popl
mov
lahf
mov
cmp
push
cmp
jne
cmc
or
cmp
icebp
mov
jmp
mov
push
push
add
pop
test
or
add
xor
inc
call
cmp
outsl
push
shl
add
les
lds
sti
mov
stos
incb
add
add
inc
mov
pop
dec
faddl
stc
jb
mov
xchg
jne
cltd
xchg
sti
shrb
rclb
xchg
out
dec
mov
xchg
adc
push
cwtl
cmpsl
fdivl
repnz
jp
add
clc
dec
stos
insb
xor
loope
xchg
sti
int3
cltd
aad
arpl
or
pop
push
jle
lea
add
xchg
dec
add
je
fwait
pushf
jae
pushf
lea
testl
insl
ret
xor
jge
inc
repnz
data16
inc
or
inc
xchg
xor
xor
lods
and
mov
addl
push
add
ljmp
or
loope
mov
cmp
cld
insb
roll
add
out
jmp
or
jmp
pop
int3
rorb
jg
push
fadds
mov
adc
test
mov
lea
ljmp
sub
in
mov
mov
out
je
sti
insl
and
js
sbb
sub
out
xor
sbb
sti
insl
and
pusha
push
add
add
xchg
sti
fcoml
or
and
push
aam
jne
pop
testb
movsb
add
movsb
pop
xor
imul
cli
push
push
les
adc
jmp
pop
jnp
lret
inc
mov
incl
clc
incl
test
inc
or
testl
jecxz
or
call
or
idiv
cmp
push
pop
adc
jle
xor
leave
xor
xor
xor
jnp
add
mov
mov
pop
clc
push
jne
sub
push
mov
mov
cmp
out
unpckhps
pop
call
mov
mov
in
decl
mov
add
add
mov
pop
cmpsl
pop
dec
clc
les
push
sbb
xor
dec
xchg
push
sbb
hlt
imul
mov
jno
pop
icebp
faddl
jg
fwait
adc
xchg
or
or
xchg
push
sub
rcrl
inc
or
scas
add
lea
xchg
daa
jb
mov
int3
add
xor
mov
add
in
adc
idivl
mov
jbe
xchg
pop
pushf
lcall
mull
jmp
push
mov
dec
clc
call
sub
mov
loopne
mov
iret
testb
movsb
add
les
std
xchg
sbb
jb
add
sub
xchg
xchg
sbb
add
push
and
or
jae
scas
test
js
fnsave
xchg
xor
ss
sub
test
out
xor
aas
jmp
subl
bound
mov
fdivr
je
sti
dec
ss
loope
push
cld
pusha
aas
jmp
addr16
add
or
xchg
out
clc
jmp
add
add
repz
pushl
cmp
jp
insl
dec
clc
jle
or
or
repz
fisttps
jle
pop
mov
jbe
stos
out
jne
outsl
jne
adc
addl
pushl
imul
add
testl
or
fisttpll
pushl
add
add
mov
pushl
in
imul
lea
push
pop
movsl
dec
mov
mov
scas
pop
aam
popa
add
jb
and
inc
add
cmp
sub
sub
add
popf
js
scas
sbb
cwtl
outsb
mov
push
sbb
cli
test
aas
out
les
clc
dec
rcrl
pop
add
adc
cmp
add
movsl
xchg
enter
mov
add
pushf
cmp
notl
cmpsl
pushf
shl
dec
idivl
mov
mov
and
insb
sbb
aaa
and
testl
pop
sub
cmp
in
add
js
daa
lock
xchg
xchg
out
inc
jmp
mov
pop
mov
daa
rolb
jge
ror
fiaddl
enter
icebp
inc
pop
jns
adc
jle
xchg
mov
push
cmp
test
cmp
inc
xchg
insb
test
cmp
inc
xchg
pop
test
add
add
mov
lods
mov
hlt
jae
sub
jp
lea
add
mov
xchg
cwtl
or
in
dec
sar
push
bound
inc
cmc
jno
add
inc
outsl
mov
ret
je
mov
mov
ljmp
loope
mov
ljmp
push
std
lret
fs
xor
fisubrs
push
jle
push
jo
ret
test
shl
mov
sti
scas
adc
jl
ja
das
test
add
add
jmp
mov
jae
push
jae
or
inc
add
dec
fwait
sti
ljmp
add
test
cmp
push
xchg
je
lods
popf
divl
xchg
imul
stos
xchg
idiv
inc
inc
jne
orb
add
add
add
sub
sbb
add
adc
idiv
std
divl
dec
or
sbb
or
out
aaa
adc
insb
jle
sub
gs
mov
mov
lods
mov
lea
mov
lods
incl
push
or
mov
fincstp
ret
dec
fs
jg
jo
push
sbb
stc
pop
shrl
push
cwtl
push
iret
adc
insl
jle
mov
rcrl
cld
cmp
add
cmc
pop
or
sbb
mov
add
add
dec
xchg
add
cmp
jmp
sarl
out
rcrb
arpl
add
mov
or
add
add
fimull
clc
adc
add
cmp
sub
adc
call
xor
imul
fwait
std
adc
add
cld
add
pusha
out
sarb
and
xchg
adcl
jbe
insb
jbe
out
cmpsl
cld
jo
lock
xchg
es
lret
jmp
in
jg
ja
xchg
jle
xchg
adc
add
pop
add
xchg
add
jb
inc
loope
and
add
or
roll
jmp
call
push
jg
jb
or
stc
jl
jmp
in
inc
or
sub
xchg
jge
push
data16
sti
pop
jecxz
test
add
cmpsb
pop
add
jmp
outsb
daa
add
mov
add
push
add
add
jg
add
leave
pop
lcall
push
add
add
inc
sub
mov
inc
push
idiv
popa
orl
sti
inc
in
cmpsb
inc
add
inc
add
in
push
out
cmp
add
std
jl
dec
aaa
dec
push
jns
lea
xor
call
aaa
jecxz
orl
inc
std
sti
fs
dec
cmpsl
jnp
orb
cmp
test
lods
push
testl
pop
pusha
adc
cmpsl
insb
add
push
jnp
outsl
pop
jge
shl
mov
jecxz
inc
icebp
inc
nop
mov
cmp
xchg
mov
cmp
mov
in
adc
mov
add
add
scas
push
mov
push
and
sub
xchg
loope
mov
dec
and
sub
xchg
cmp
mov
inc
and
outsb
lds
jg
dec
pusha
inc
ret
mov
mov
cmp
xor
jle
sti
fcmovb
call
cmp
add
sbb
mov
add
out
or
out
call
rorl
in
add
mov
cmpsl
inc
outsb
and
inc
movsb
lahf
jg
xor
pusha
or
jle
out
jns
jmp
jp
add
sbb
add
xchg
addb
adc
pop
out
mov
xor
and
or
stos
les
sub
pushf
sti
mov
pop
test
imul
call
fimull
push
adcl
out
jmp
loopne
xchg
jp
push
lret
jmp
jae
adc
cld
fs
jmp
pshufw
out
mov
out
add
push
outsb
js
movsb
push
imul
add
ret
pop
mov
hlt
add
into
sub
fnsave
dec
add
add
mov
adc
pop
jo
sar
call
mov
cwtl
push
setno
stc
lds
sti
ret
mov
pop
into
pop
sub
dec
mov
cmp
add
cmpl
mov
or
shll
cmp
mov
repnz
add
mov
data16
add
aaa
inc
dec
lds
cli
jno
xor
push
fcom
ds
aad
and
cmpsb
out
sarl
incl
divb
out
movsl
adc
fwait
stos
sahf
or
scas
mov
xchg
div
out
lcall
xchg
adc
cs
xchg
add
out
sub
fstl
ja
hlt
xchg
jecxz
pop
sti
lock
cmp
mov
out
cmp
or
add
lcall
jmp
sti
mov
outsl
cs
xor
testl
icebp
cli
xchg
loope
sub
push
mov
fs
cli
aaa
loope
sub
fisttpl
mov
add
add
fs
pop
loope
sub
cmc
mov
mov
fs
pop
loope
sub
iret
mov
les
or
mov
arpl
cli
mov
outsl
sub
or
bound
lret
loope
lods
push
bound
adc
push
fstl
xchg
or
sbb
out
aas
popl
jge
into
add
jbe
movsl
jb
popa
fstpt
push
mov
jmp
mov
icebp
incl
das
cmp
ret
mov
push
pushw
stos
ret
std
lods
in
ret
jp
add
pusha
add
mov
incl
add
push
sub
inc
add
stc
cld
add
cmp
xor
dec
add
in
add
jp
mov
sbb
cmc
inc
jne
mov
add
add
jmp
cmp
cli
add
rcr
mov
sbb
or
pop
mov
and
jns
add
incl
jmp
cmp
sbb
mov
inc
out
cwtl
inc
sbb
push
cmp
jmp
or
imul
xor
add
in
loopne
pop
or
inc
movsl
add
shll
or
in
add
jl
cmp
iret
push
ret
add
movsb
dec
in
add
inc
cmpsb
add
cld
mov
leave
cmp
add
decb
mov
push
in
add
cmp
xchg
add
lock
in
mov
xorl
jmp
cli
aaa
out
enter
pop
ja
pop
ret
call
ljmp
call
aaa
cmpsl
jmp
add
add
add
mov
xor
jle
aas
pop
ret
jno
out
dec
jne
out
ret
call
inc
lea
ljmp
cmp
add
xor
add
and
jnp
push
jo
jmp
out
jnp
push
push
pop
xchg
cmp
jne
daa
fists
push
fistpll
test
loop
ljmp
fs
nop
adc
jne
jl
sarl
lahf
gs
movsb
jne
and
outsl
aas
jmp
adc
sti
into
outsl
inc
je
imul
mov
jne
scas
call
add
fdivrs
sub
fstps
test
out
dec
sub
es
nop
cmc
int
je
rolb
cmc
cmp
in
or
cmp
je
call
test
addb
add
in
cmp
add
cmc
jge
add
or
adc
push
push
pop
push
idiv
mov
aaa
mov
mov
mov
mov
cld
out
adc
add
adc
add
xorb
sbb
std
movsb
push
shlb
repnz
outsl
jo
enter
add
mov
data16
or
out
flds
jecxz
push
rol
or
insb
test
xchg
jecxz
or
rol
or
outsb
mov
xchg
pop
call
inc
test
jnp
out
jmp
pop
or
out
xchg
pop
lcall
lahf
or
lcall
jle
add
add
add
add
jle
sbb
test
fldenv
lock
jle
sbb
rclb
push
jb
mov
jle
pop
shlb
fsubp
mov
clc
aad
mov
loope
fidivl
fcomps
jle
jb
loope
jle
or
hlt
mov
leave
in
add
add
outsb
push
call
add
add
add
sbb
adc
fdivr
popa
enter
adc
enter
rorl
lea
xchg
outsb
jne
mov
das
outsb
jno
mov
jmp
fbstp
aam
insb
jne
cmp
cli
ds
mov
inc
sbb
add
adc
mov
add
jle
jmp
mov
jb
sub
bound
cmp
pop
xchg
jo
adc
int
jmp
inc
mov
pop
mov
xor
je
lds
incl
sub
and
jns
mov
sbb
cwtl
out
idiv
mov
je
dec
adc
push
test
push
mov
add
dec
enter
enter
add
add
jbe
jmp
jnp
mov
dec
icebp
inc
lret
pop
scas
js
js
out
mov
mov
je
out
sub
jne
fdivrl
incb
jnp
or
jbe
mov
pop
or
bound
or
mov
cmc
push
call
fs
je
xchg
and
jmp
adc
lcall
add
mov
adc
enter
cli
mov
in
sti
loopne
int3
or
ret
incl
out
pop
jmp
fwait
aam
cmp
sbb
test
repz
or
and
nop
incb
pop
cmp
or
mov
sti
jo
jbe
push
dec
push
add
in
push
jp
fldt
add
add
add
add
jne
or
sarb
shrl
lock
jmp
sbb
dec
jp
outsb
outsb
je
jbe
stc
cmp
add
and
loop
ret
jmp
fildl
outsl
inc
je
jl
flds
rcr
and
jp
ds
clc
repnz
or
dec
fadd
fdiv
fdivl
incl
add
add
adc
push
add
out
mov
push
mov
add
and
jb
jmp
out
pop
jmp
lods
push
cmpsb
jae
add
popa
inc
xchg
jge
lock
addb
in
outsb
mov
add
repz
jmp
jnp
frstor
or
add
jmp
out
add
in
or
adc
or
or
add
mov
add
aas
or
or
lea
loopne
xor
jmp
pop
cmp
mov
addb
in
adc
or
add
or
pop
mov
out
enter
add
or
mov
push
jp
ficoms
adc
cmp
hlt
add
xor
loopne
std
stc
ljmp
adc
pop
lcall
cmpsl
or
mov
iret
mov
cmp
jg
dec
cli
pusha
fidivrs
je
rolb
data16
sub
cmp
jg
dec
incl
sub
push
sub
add
and
sti
xchg
pop
mov
pop
mov
sti
sbb
pcmpgtb
decb
aad
and
pop
jp
push
dec
mov
insb
addb
fistps
adc
add
mov
mov
sub
push
iret
das
inc
xlat
add
sub
inc
fildl
data16
add
add
jle
imul
adcl
lock
inc
jmp
jmp
ret
call
lock
jle
and
inc
sub
xlat
add
add
jo
fdivrl
imul
sbbb
mov
sub
xchg
call
push
adc
imul
cmp
sbbl
add
je
cmp
add
popl
out
inc
add
in
inc
cmc
arpl
jo
je
cltd
aam
sbb
outsl
sti
jb
xor
rcrb
jl
in
inc
aaa
add
mov
js
rcrl
add
outsb
je
pop
push
xchg
jno
call
scas
addr16
cli
outsb
pop
add
jmp
jmp
add
add
ja
inc
cmp
add
andl
mov
sub
or
cmpsl
sub
insb
jmp
mov
icebp
add
xor
adc
cmpsl
sbb
sub
cmp
inc
dec
test
or
mov
call
test
jmp
add
add
jge
add
mov
jno
sub
rcll
testb
mov
inc
sti
mov
call
ss
mov
sbb
or
aad
cli
fidivl
inc
out
repnz
pop
mov
push
add
je
outsl
dec
mov
add
sub
add
repnz
adc
dec
lods
sbb
ret
pop
mov
pop
in
add
inc
xor
mov
jmp
and
or
je,pt
dec
lods
or
pop
lahf
sub
mov
mov
jmp
rcrb
pop
mov
mov
add
shrl
pop
ljmp
mov
repz
xor
data16
add
add
in
pusha
js
xor
negb
add
lock
jb
sub
inc
clc
adc
fisubrs
ret
add
sbb
imul
call
inc
jmp
xor
xchg
data16
fld
call
push
xor
lods
in
sahf
leave
loope
incl
sbb
dec
lock
cmp
mov
mov
in
mov
xor
mov
idivb
jmp
jge
push
imul
xor
push
jb
incb
in
call
insl
movsb
cli
cmp
add
bound
add
negb
add
in
addr16
aas
add
pop
jp
fdivrp
inc
add
add
into
add
mov
mov
cmp
and
push
add
add
into
repz
fxam
mov
dec
out
and
jl
je
test
cltd
lahf
add
call
loop
adc
ss
hlt
ljmp
mov
test
xchg
std
xor
or
dec
jmp
pop
stc
inc
push
out
and
dec
dec
mov
out
scas
and
pop
jmp
dec
sti
call
fiaddl
insb
popf
aam
add
sti
pop
pop
fsqrt
pop
arpl
inc
xlat
and
jo
scas
dec
mov
add
pop
pushl
lock
in
mov
mov
aaa
out
js
sti
adc
pop
add
into
arpl
add
mov
add
add
xchg
out
iret
or
pop
call
dec
add
pop
add
addr16
out
sbb
mov
lock
jnp
add
ret
call
jmp
pop
xlat
xor
ljmp
add
mov
jo
arpl
adc
ret
call
inc
inc
in
add
cmp
fadds
add
add
arpl
sti
aam
call
sti
mov
jo
mov
mul
mov
pop
insl
add
add
repnz
add
add
popa
call
add
fdivs
mov
add
jl
aas
jmp
psubsb
push
add
add
fisttpl
cli
sbb
pop
sti
jb
imul
push
shll
sbb
xchg
mov
test
push
ss
push
push
test
mov
pop
sti
mov
add
inc
jmp
xor
ret
sti
pop
dec
pop
adc
xor
mov
mov
aaa
dec
push
test
push
inc
sti
fistl
mov
xchg
add
adc
push
mov
sbbl
shrl
shrl
or
or
jne
test
add
inc
mov
mov
leave
sti
pop
je
cmc
dec
testl
xor
push
into
outsl
mulb
fstpt
je
or
or
adc
cmp
stos
repz
add
add
sub
in
inc
xchg
test
lret
lods
cld
call
dec
rclb
inc
int3
push
adc
jnp
mov
pop
adc
inc
fs
mov
scas
inc
push
xor
insb
jne
jecxz
ret
nop
aaa
ja
daa
imul
mov
push
jg
sbb
pusha
popa
repnz
call
pop
add
sub
mov
addr16
mul
pusha
xor
sbb
mov
pop
push
push
je
call
sbb
mul
adc
pop
loop
test
fcompl
cmpsb
neg
pop
mov
push
sub
enter
mov
push
test
inc
mov
sbb
movsb
ja
fnstenv
jle
or
rorl
mov
js
or
in
movsb
ja
mov
scas
dec
in
movsb
cwtl
loope
das
aas
xchg
pusha
insb
lcall
jae
lods
mov
inc
out
loop
add
and
mov
add
outsl
jg
fcmovne
push
ss
pop
je
outsb
das
mov
adc
cmpb
arpl
push
xchg
add
dec
mov
sti
fcoml
jmp
mov
mov
xor
test
or
xchg
shrb
mov
add
add
jo
adc
sub
push
push
push
xor
jmp
jp
stc
inc
ljmp
pop
push
jmp
roll
cmp
call
jne
push
pop
mov
mov
lock
sub
test
call
notb
inc
shll
cmp
push
xchg
cmp
insb
add
insl
cmp
inc
lock
insb
pop
push
sub
mov
inc
ljmp
adc
into
cs
aam
rep
xor
mov
ja
das
hlt
mov
lock
sub
out
pop
cmp
or
jb
push
add
push
xor
sar
cmp
outsb
jp
out
incl
mov
mov
ljmp
push
inc
clc
imul
fs
or
add
out
imul
add
test
enter
push
fs
jmp
push
push
add
add
add
sub
cmpsl
add
pop
mov
daa
xlat
filds
pop
call
add
xchg
and
in
xchg
inc
pop
ja
call
push
add
mov
enter
out
dec
imul
mov
pop
sub
xchg
jae
jmp
clc
rorb
dec
pop
add
or
jge
pop
or
sbb
pop
fiadds
jg
out
push
inc
out
dec
pop
and
and
imulb
sub
add
incb
add
fs
stos
call
leave
cmp
leave
divl
cld
cli
sub
cmpl
mov
or
pop
out
dec
cli
push
inc
mov
ret
add
lds
add
out
push
jge
sub
xchg
jle
jle
dec
mov
push
jnp
push
push
add
cmp
and
imul
add
pop
lock
mov
inc
jae
xchg
cmp
cmc
mov
xchg
add
mov
insb
jno
test
loope
dec
jmp
wrmsr
cmc
lret
ds
jg
adc
or
xor
cmc
lret
pusha
add
das
ret
and
mov
ret
loop
das
in
decb
mov
or
gs
sti
pop
cmpsb
ret
pusha
lcall
arpl
xchg
outsb
mov
mov
pop
loopne
je
inc
lock
cltd
lock
inc
sub
add
xor
xchg
lods
cld
call
cmpb
in
or
dec
psubq
outsb
push
inc
out
mov
orb
js
or
mov
mov
jbe
add
add
or
hlt
test
add
cmp
cmp
repnz
adc
pop
adc
adc
sub
scas
sub
scas
fsubr
xchg
test
iret
sub
out
mov
stc
leave
out
sbb
shr
pop
aam
fadd
call
js
push
imul
pop
add
add
nop
sub
add
add
inc
add
in
jl
out
lock
dec
xchg
pop
jecxz
cwtl
cli
xchg
mov
or
imul
or
jmp
addr16
jns
mov
adc
aam
xchg
push
jno
pusha
jmp
adc
cmc
imul
add
das
or
repz
dec
aas
xchg
loopne
inc
popf
jo
adc
and
sti
cli
cmp
inc
cmp
mov
aaa
or
cmp
into
and
add
in
mov
and
pop
clc
add
mov
dec
pushf
sub
push
push
stc
cmp
call
or
test
xlat
dec
repz
add
add
cmc
out
jae
mov
push
pushf
notb
jge
or
ret
or
jge
in
inc
jecxz
pop
dec
and
add
sub
pop
pop
push
lds
out
cmp
imul
sbb
in
das
sub
scas
xlat
sets
imul
xorl
jnp
pop
adc
mov
bound
or
mov
inc
push
outsb
insl
jb
inc
jmp
ror
dec
call
test
negl
mov
xchg
dec
mov
or
jne
jecxz
sti
clc
insb
lea
add
clc
mov
jb
loope
mov
repnz
jmp
fbstp
add
lods
push
jo
mov
sub
imul
push
fdivrs
fdivl
push
fdivl
ret
call
subl
movsb
pop
pop
dec
mov
mov
xor
push
roll
clc
mov
imul
mov
pusha
or
ss
mov
in
xchg
imul
rcrb
adc
pop
out
pop
jne
or
leave
inc
fsts
es
or
sbb
frstor
jle
push
jl
imul
ret
repnz
ljmp
repz
dec
sti
xchg
imul
xor
stc
in
xchg
icebp
das
push
test
fmuls
sbb
xchg
cwtl
xor
test
rcr
push
jnp
sub
mov
add
mov
push
ja
add
pop
addl
jnp
jae
jbe
sbb
jno
fadds
popa
sub
push
push
jmp
ss
mov
push
cmp
inc
sub
xchg
shlb
and
adc
xor
jg
mov
mov
fisubs
leave
shll
jne
add
add
mov
incl
add
push
in
push
pop
add
in
cltd
dec
push
jge
pop
out
enter
enter
jbe
out
scas
addr16
lods
mov
insb
sbb
mov
pop
decl
test
je
ficompl
cmp
stc
loop
push
or
test
mov
pop
mov
add
push
nop
pop
out
js
mov
or
jo
mov
imul
jmp
cmc
push
lcall
xlat
roll
xor
aam
incl
add
inc
mov
lcall
stos
or
jge
adc
jp
imul
clc
mov
dec
and
out
adcb
add
add
dec
and
out
pop
jo
pusha
leave
mov
jge
mov
xchg
fistl
out
mov
or
add
not
imull
subl
sbb
mov
test
stos
arpl
fsubl
mov
hlt
aas
jmp
pop
jg
leave
push
dec
shrl
add
movsb
rcl
push
dec
je
fisttps
testb
cmpsb
or
push
sub
dec
je
call
add
jmp
movsb
dec
test
mov
push
test
out
shrb
add
clc
mov
push
push
add
dec
xchg
pop
sbb
std
and
mov
dec
push
and
jne
ss
test
add
add
ss
shlb
pop
call
test
mov
xchg
divb
xchg
add
xor
shlb
jecxz
scas
test
add
sarb
mov
or
push
fisttps
adc
jae
xchg
fidivrl
stos
xor
mov
adc
xchg
notb
push
push
cmp
add
je
or
dec
call
out
addr16
push
pop
mov
push
cli
mov
mov
aas
out
insb
cmpsl
sbb
add
sti
ficompl
aas
out
je,pt
dec
aas
inc
and
ja
in
or
scas
lods
push
mov
mov
add
pop
xchg
jae
call
out
out
push
xor
inc
push
cwtl
pop
repz
pop
mov
repnz
jne
imul
aas
out
mov
or
jmp
adc
ret
call
shlb
pop
sub
insl
inc
faddl
outsb
mov
fadds
negb
mov
stos
sti
insl
push
aas
cmpsb
jmp
insb
in
dec
adc
xor
or
test
adc
push
adc
lock
hlt
or
pop
push
fcoms
adc
mov
ret
xorb
pop
imul
fidivs
aas
jmp
stos
xlat
add
mov
mov
mulb
frstor
xor
push
je
mov
add
add
not
stc
adc
jmp
inc
aas
stos
push
mov
pop
add
pop
cmpl
xchg
dec
adc
push
dec
je
mov
jae
arpl
call
and
out
xor
gs
rorl
lea
repz
pushl
pop
lea
sahf
lods
adc
dec
inc
sti
mov
mov
dec
pop
add
cmpsb
jecxz
inc
leave
jecxz
xor
mov
std
xor
or
je
pop
add
xor
adc
jnp
in
mov
push
data16
ljmp
xor
push
push
mov
mov
adc
cmp
push
out
sbb
out
lock
pushf
stc
movsb
mov
cli
push
pop
adc
mov
pop
mov
cmp
addr16
pop
decl
imul
pop
dec
call
arpl
jmp
add
pop
push
add
push
jne
aad
or
push
push
sti
pop
mov
fldenv
mov
adcl
add
add
pop
data16
add
mov
dec
call
insb
lret
xchg
add
cld
jb
jmp
jmp
call
ret
jo
imul
imul
call
mov
dec
insb
inc
mov
dec
add
dec
je
jo
call
enter
inc
repz
fdivs
sarb
add
std
dec
ret
dec
adc
mov
imul
xor
mov
add
cmpb
addl
xchg
inc
mov
mov
insb
push
dec
sti
pop
push
dec
jne
ret
mov
add
jp
add
punpckhdq
add
push
cmp
test
xchg
lcall
mov
mov
sub
mov
and
add
jp
dec
sti
inc
in
test
lcall
sbb
sbb
mov
xor
sbb
fimuls
pop
cmp
cli
add
dec
lea
loopne
roll
add
jmp
add
idiv
jle,pt
lock
mov
adc
xchg
dec
mov
xchg
jecxz
sub
add
inc
rsqrtps
inc
cld
cmp
add
aad
mov
inc
sbb
decl
jge
adc
test
mov
mov
inc
push
stos
add
cltd
mov
inc
mov
add
test
push
mov
or
test
mov
pushf
call
add
add
enter
pop
pushl
jp
out
test
sti
mov
adc
fnstenv
fldl
push
dec
push
pop
push
jge
inc
hlt
pop
fldl
xchg
call
pop
pop
pop
sub
cmpl
pop
decl
push
lahf
dec
dec
mov
xchg
xchg
xor
clc
fistpll
or
add
inc
faddl
inc
pop
mov
xchg
roll
push
push
pop
fiadds
push
inc
mov
out
inc
or
push
lods
test
push
out
out
in
mov
add
push
pop
lods
xor
inc
fdivrl
add
add
or
pop
mov
aaa
out
jmp
dec
cmp
incb
ftst
subb
pushf
pop
shrd
sbb
sub
imul
ljmp
pop
stos
arpl
xlat
fdivrs
mov
add
jmp
jmp
cli
ret
inc
sti
jmp
scas
inc
sti
jmp
arpl
add
or
add
jmp
cmp
test
in
add
cld
dec
rcll
aad
dec
sti
cltd
lods
push
fsubl
mov
shr
mov
pop
subl
and
fidivrs
adc
test
gs
add
sub
pop
inc
jl
gs
jns
sbb
xchg
dec
jg
ds
call
mov
inc
dec
push
ret
push
loopne
fsubl
add
mov
pop
sub
cld
mov
add
fmuls
push
out
ret
add
add
add
rcr
adc
jle
scas
inc
sbb
idiv
mov
ret
push
lea
test
shl
jle
pop
enter
adc
lcall
cltd
incb
add
dec
mov
jae
out
xchg
pop
and
je
mov
sbb
fpatan
shrl
mul
push
sub
sub
add
xor
adc
mov
rcl
pop
jmp
nop
mov
fadds
test
mul
jle
cmp
rcrb
out
mov
ja
dec
mov
jl
in
sbb
dec
test
mov
idiv
bnd
xor
mov
adc
call
lods
xchg
add
nop
sbb
push
sub
ljmp
add
test
enter
mov
inc
adc
mov
imulb
inc
jmp
mov
mov
adc
add
in
sub
pop
lret
jl
add
mov
add
lret
icebp
xchg
push
jmp
inc
stos
cmp
pop
xor
jmp
add
mov
lods
je
inc
cmp
addb
mov
inc
test
in
lea
rorl
jnp
cli
hlt
jo
inc
jmp
pop
pop
add
mov
mov
fimuls
cmp
popf
movsl
sub
cli
dec
sbb
add
mov
sti
push
mov
out
fwait
cmp
insl
mov
inc
sti
call
rcrb
add
notl
test
xor
xchg
cmp
jmp
call
jae
jne
jns
lea
add
test
pop
add
xor
movsb
testb
rorb
faddl
add
add
outsb
ffreep
add
stc
stc
add
add
shl
mov
das
stc
lcall
fcmovbe
add
divl
mov
imul
imul
call
ret
jge
idiv
out
call
cwtl
idiv
cli
sub
aas
out
or
jmp
sub
out
stc
clc
pop
aas
inc
imull
aad
inc
add
test
incb
add
add
sub
inc
xlat
sbb
test
inc
sti
pop
cli
mov
call
pop
pop
sti
cli
mov
aas
out
push
mov
mov
jnp
subb
loope
test
sub
popa
pop
cmpsl
pop
sti
pusha
bound
sti
push
and
jmp
add
push
mov
outsb
or
mov
dec
sbb
push
out
xchg
jg
pop
mov
js
aas
fimull
pop
out
dec
in
xchg
add
cmpl
out
insb
call
lcall
adc
jmp
sar
cmp
push
jb
aad
pushf
cmp
je
mov
subb
jle
dec
insb
cmp
insb
xchg
bound
cmp
dec
mov
lods
mov
inc
inc
sbb
call
popf
cmp
mov
push
std
push
jbe
imul
aaa
add
in
inc
pop
jmp
add
jmp
pop
insb
add
in
adc
lds
sti
inc
mov
popl
cmp
out
in
in
add
mov
jmp
arpl
add
add
outsl
call
and
or
rcrb
jo,pt
dec
cmp
lea
fdivrs
test
lods
sti
push
pop
lea
pop
rorb
mov
xchg
cld
add
dec
sti
cmp
inc
mov
add
into
adc
xor
lds
mov
mov
cmp
add
add
add
inc
pop
cmp
out
decb
add
add
xor
divb
mov
sub
roll
mov
mov
jle
or
dec
pop
lret
mov
cli
cmp
jne
negl
dec
sti
sub
icebp
aas
out
sbb
aaa
clc
mov
decl
test
sti
lock
add
add
add
decl
lahf
adc
fadds
ret
hlt
dec
sub
add
imul
jmp
jle
in
enter
jge
leave
addl
out
decl
add
add
cmp
xlat
ret
call
inc
pop
cmp
jl
inc
dec
or
sarb
js
inc
sub
movsb
daa
aas
push
cs
sbb
movsb
push
cwtl
cmp
mull
add
imulb
addl
xor
loope
sub
push
xlat
mov
add
jp
add
mov
rcr
cmp
push
aad
lods
cmp
jnp
push
incl
enter
jecxz
sbb
sub
test
add
jmp
jl
and
add
sub
sti
dec
mov
jg
out
enter
in
jne
mov
jle
push
mov
enter
add
rcl
rorl
cwtl
cmp
in
or
jmp
cmpsb
mov
sub
sub
jae
or
int
dec
data16
scas
and
cli
mov
and
xchg
and
jl
mov
add
jge
add
xor
mov
jge
jl
inc
push
mov
xor
outsb
call
std
or
mov
adc
decl
jne
dec
adc
idiv
stc
dec
fisttps
jmp
outsl
dec
incl
sub
add
jns
xor
cmpsb
rorb
add
add
scas
adc
mov
orb
mov
dec
shl
out
pop
mov
inc
sti
nop
sbb
stc
subb
adc
sub
cmc
sti
pusha
into
ja
dec
push
mov
inc
jne
out
repnz
incl
sub
inc
sti
insb
cwtl
push
jmp
sub
add
cmp
incl
add
add
jns
bound
popa
pop
out
jne
rclb
lea
and
ds
mov
mov
call
insb
jl
jne
add
lods
push
gs
add
inc
adc
fidivl
outsb
cmp
aaa
call
or
mov
pop
ss
mov
rorb
pusha
cs
xchg
sub
outsb
sub
xorb
mov
mov
ja
add
jp
repnz
std
rolb
push
pop
iret
pop
mov
faddl
push
inc
int3
xor
lcall
sub
mov
rcrb
cmp
push
mov
push
xchg
das
pop
cli
jbe
scas
fistps
lea
jne
mov
mov
call
out
lods
cmp
push
mov
ss
ret
add
ljmp
sti
push
movsl
scas
xlat
add
psubq
pop
mov
test
mov
xor
mulb
stc
fisubs
cmp
es
repnz
cmp
call
test
rorl
incl
add
add
xchg
xorl
jge
ret
jae
js
lar
cmp
fists
insb
pop
lret
ret
jle
je
rorl
mov
test
cmp
lcall
lock
dec
out
mov
push
inc
call
clc
pushl
mov
xchg
jbe
hlt
push
test
dec
ret
je
cmp
add
mov
aad
out
hlt
enter
xchg
cmpsb
mov
leave
movsl
dec
call
jle
out
sbb
call
flds
cmp
aam
jecxz
inc
sti
aam
sti
std
fnop
cmp
add
daa
push
pop
mov
dec
jnp
nop
aam
rolb
mov
out
mov
xchg
lods
add
cmp
aas
lcall
clts
pusha
xchg
sbb
cli
out
dec
rorl
jle
out
loop
out
enter
test
filds
loopne
xor
cmp
add
mov
out
or
pop
cmp
mov
mov
and
outsl
xchg
cmpsl
mov
lds
pop
add
add
push
lods
dec
aas
dec
subb
subb
sub
pop
mov
aas
cli
pop
repz
sbb
movsb
ss
mov
jp
push
or
out
or
push
aaa
ficomps
pop
inc
fbstp
inc
into
xchg
sub
cmp
sub
fst
ret
jmp
fnstenv
push
scas
lahf
cmp
fiadds
add
add
add
in
scas
inc
jmpw
adc
imul
cld
mov
add
jmp
pop
ss
inc
call
iret
adc
sti
push
pop
xor
xchg
aam
stc
add
js
pushl
popa
pop
push
push
jecxz
clc
out
testb
pop
mov
push
mov
push
jecxz
pusha
out
testb
jno
call
or
jnp
or
out
pop
addr16
decl
repnz
or
sahf
pop
push
push
popf
fmul
std
mov
out
add
out
je
xchg
xor
stc
jp
loopne
xlat
int
leave
xor
or
cmp
add
pop
cmp
insl
cmp
xchg
inc
mov
sub
mov
imul
pop
call
cmp
insb
insl
cmp
xorl
pop
cmp
popl
cli
cwtl
mov
dec
jg
cmp
sbbb
out
xchg
cmp
jl
cmp
push
add
out
faddp
mul
les
jge
sbb
fwait
addr16
push
mov
cmp
add
mov
lcall
or
sub
inc
push
xchg
pop
cmp
jmp
leave
fnstsw
add
sbb
fs
cmp
test
lea
cld
adc
sub
bnd
das
outsl
adc
add
fdivl
cmp
call
adc
cmp
in
xor
cmp
rcll
dec
cmp
add
fildl
or
jnp
ret
lock
int
xchg
pop
sar
jae
add
in
dec
pop
arpl
call
test
sub
xor
je
adc
xchg
rcrl
pop
add
mov
loope
cmp
fmul
sub
mov
add
xchg
enter
filds
or
add
jmp
xchg
out
push
pop
sub
cmpsb
cli
jmp
imul
dec
add
jmp
pushl
pop
add
je
cmp
mov
loope
test
pop
mov
lock
std
jge
rcr
shr
std
lock
add
add
mov
xchg
add
hlt
jbe
sti
lods
dec
movsb
xchg
movq
stc
shlb
pusha
nop
mov
xor
outsb
mov
cli
std
loopne
mov
push
stc
mov
mov
ds
and
out
xor
mov
out
or
shll
add
add
add
out
mov
mov
mov
std
push
push
test
sbb
sbbl
cmp
xor
fsubl
and
lret
sahf
and
adc
pop
insb
xchg
xchg
es
or
jmp
ljmp
hlt
repnz
enter
xor
add
stos
add
add
add
cmpsb
push
adc
jno
jle
mov
call
jg
mov
sbbl
jae
push
sti
je
or
dec
xchg
arpl
xor
popa
cs
mov
sub
popa
ror
sbb
roll
jmp
jnp
cmp
test
cmp
add
add
outsl
mov
mov
pop
sarb
test
repz
idiv
data16
addr16
jmp
or
mov
xchg
ror
sub
add
roll
cmc
call
jmp
lock
sbb
xlat
dec
out
insb
adc
xor
mov
in
nop
push
into
mov
pop
pop
clc
push
push
lods
call
inc
je
pop
mov
das
and
xor
add
dec
xor
aaa
dec
mov
icebp
xchg
xchg
add
hlt
mov
dec
add
inc
in
imul
or
add
cld
mov
scas
dec
call
add
add
inc
testb
xchg
dec
call
out
mov
dec
pop
pop
xchg
pop
add
push
add
mov
add
out
adc
nop
inc
sti
addb
add
sbb
jle
push
iret
cli
repz
cli
add
inc
out
aas
or
push
incl
mov
mov
pop
mov
xchg
popf
inc
add
ret
sbb
inc
xchg
popf
add
popf
pushl
mov
and
es
loopne
sub
fsubrs
scas
add
ror
cmp
sti
mov
sbb
xchg
outsb
outsl
add
inc
dec
jnp
orb
ret
push
xor
push
inc
andl
lcall
xchg
jp
sub
sub
push
xor
and
push
addb
popa
dec
pop
inc
jmp
xor
jp
inc
push
cld
xchg
lret
insl
xor
adc
mov
stos
js
push
push
das
mov
add
add
cli
xor
jmp
xor
test
es
xchg
jno
cli
xchg
clc
sub
sub
adc
sti
insb
mov
loop
insb
or
ret
inc
cmp
out
out
sti
cli
movsb
lret
and
push
repnz
mov
push
outsl
in
repnz
sub
xchg
lret
cli
stc
adc
mov
bound
add
add
sub
dec
inc
xchg
cmc
sbb
push
add
xor
repnz
stc
movsb
jnp
xchg
cmpsb
lock
pushl
dec
push
dec
mov
sub
sub
insb
add
or
push
idiv
xchg
xor
movsl
popa
add
mov
cld
loope
loop
shll
mov
icebp
outsl
add
add
add
icebp
imul
add
rorb
into
mov
repnz
push
mov
mov
sbb
dec
imulb
out
fsts
mov
sti
test
sub
adc
incl
cwtl
mov
call
bound
add
pop
sbb
xor
out
push
xor
adc
sarl
repz
adc
cmc
fidivl
pop
push
add
and
fadds
leave
test
xchg
or
incl
cmp
ljmp
xor
fs
push
enter
icebp
ret
call
aad
fnstcw
adc
jnp
call
xlat
ret
nop
ljmp
mov
ficomps
in
push
lds
xchg
int
pop
and
adc
push
and
adc
add
in
add
jl
pop
pusha
pushl
stos
in
into
xchg
and
outsl
add
es
adc
jmp
xchg
dec
int3
sbb
incl
mov
push
cmp
add
add
mov
push
adc
stc
sbb
xchg
cmp
push
test
add
jae
addr16
pusha
mov
call
insl
stos
xchg
insb
mov
aam
jne
stc
cwtl
pop
lcall
xchg
cld
xor
mov
std
mov
dec
sbb
add
mov
repz
add
je
frndint
lahf
adc
push
push
leave
cld
daa
adc
or
mov
or
sahf
push
mov
rol
loope
std
jle
pop
repnz
add
sahf
or
mov
adc
insb
inc
sti
mov
bnd
fsincos
notl
incb
push
mov
enter
push
push
mov
repz
push
push
mov
push
test
cmp
adc
or
and
cmp
push
sub
fs
push
insb
jo
data16
dec
rcrb
or
cmp
lds
neg
insl
mov
pop
std
cmp
sti
sbb
aam
fisubl
inc
out
and
fxch
push
push
outsb
aad
pop
sti
aam
xchg
sub
ljmp
lods
jo
jl
add
or
dec
push
mov
out
sub
dec
push
mov
pop
jns
add
into
mov
sub
or
test
pop
bound
aad
fdivr
pop
push
daa
add
dec
negl
in
fs
aas
nopl
or
add
sbb
mov
sbb
mov
in
popa
cmp
add
push
popf
in
lahf
cltd
out
js
call
out
scas
mov
push
aad
sbb
aad
icebp
out
out
call
sub
test
clc
inc
push
cmp
xchg
test
in
jl
jmp
fs
dec
popa
dec
pop
add
loopne
push
xor
adc
dec
lahf
mov
adc
imul
add
add
hlt
mov
insb
and
pop
in
lock
fsqrt
and
mov
push
cmp
or
xor
add
insb
stos
xchg
std
pop
push
mov
test
cld
sbb
shlb
data16
call
xor
inc
fdiv
mov
aam
pop
push
add
add
test
outsl
add
int3
mov
push
add
push
jmp
test
test
add
push
jnp
mov
sub
jbe
xor
das
cmp
roll
push
hlt
test
mov
or
jae
or
ja
xchg
mov
gs
jnp
dec
sahf
mov
push
add
test
add
add
pop
mov
je
and
cmp
into
and
push
out
jg
into
sub
ja
sub
jnp
jl
and
aas
cmp
inc
sti
je
inc
mov
orb
cli
shrb
jmp
fxch
push
or
push
xor
lea
sub
add
imul
pop
sbb
test
add
ret
loope
cmp
and
add
add
mov
mov
or
xchg
shll
testb
in
mov
jae
loope
sti
or
mov
leave
ret
movsl
mov
mov
in
test
add
add
sbb
in
push
inc
add
or
inc
adc
pusha
or
lods
leave
adc
sti
jo
insl
pop
push
andl
scas
dec
sub
sub
pop
rolb
arpl
stos
addb
pop
push
clc
mov
and
das
sub
pop
push
insb
cmp
call
jns
je
imul
addb
add
add
push
jne
mov
icebp
incl
pop
test
mov
test
mov
mov
sbb
sbb
fldl
mulb
in
and
ret
push
fmull
dec
jb
add
xchg
or
jnp
in
push
sti
add
mov
in
fisttps
inc
lret
or
lock
mov
add
lcall
add
pop
testl
into
addr16
leave
push
pop
cmp
jae
inc
pop
add
sub
sarl
sbb
dec
std
adc
inc
mov
addb
into
mov
mov
test
loop
add
cwtl
aas
enter
adcl
inc
out
pop
out
fisttps
pop
out
or
andl
inc
outsb
jbe
add
js
or
iret
cli
mov
testl
and
jbe
mov
jle
out
sub
add
lods
xchg
lock
insb
sarb
dec
sub
out
jg
and
mov
mov
pop
xor
jl
xchg
dec
ret
add
and
mov
xor
sbb
jmp
inc
adc
js
xrelease
pusha
dec
xchg
lods
cmp
jb
aaa
subb
add
lret
sbb
out
nop
and
in
inc
jns
mov
call
orl
insb
jb,pn
outsb
mov
outsb
or
inc
enter
mov
add
add
jmp
add
or
popa
leave
clc
rorb
mov
imul
orl
add
fs
add
in
test
or
sti
push
jg
mov
or
jnp
jns
add
mov
add
pop
mov
nop
adc
pop
sti
mov
jg
call
add
sbb
bound
adcb
mov
orl
sti
jb
mov
ljmp
jle
add
sub
xlat
jle
xchg
jle
loope
add
add
out
lret
push
xor
adc
pop
adc
pop
adc
idiv
jno
push
mov
sub
cmp
add
inc
add
notl
add
decl
mov
dec
xor
sar
mov
push
add
push
jae
lods
ret
loop
push
jae
movsb
sti
add
dec
inc
or
addr16
ljmp
cld
inc
jmp
test
out
mov
out
incl
pop
xchg
sti
js
mov
pop
pop
mov
repz
add
sub
test
or
push
mov
mov
sbb
add
cmpsb
je,pt
mov
ja
add
sbb
pop
push
xchg
mov
pop
jne
test
pop
nop
test
repz
mov
and
add
add
add
test
popf
sub
and
xor
xchg
add
insl
adc
xor
dec
mov
and
nop
cmp
les
and
loopne
xchg
push
pop
and
add
xchg
lock
adc
insb
ja
push
xor
mov
jle
xchg
cli
andb
add
ficoml
adc
inc
fadd
rorb
testb
out
xchg
cmp
loope
xchg
test
lea
cltd
jae
sub
mov
insb
cwtl
pop
push
add
pop
pop
scas
push
or
cld
movsb
hlt
aas
jmp
pop
sar
popa
lahf
scas
pop
and
jne
inc
lret
adc
jae
and
insl
mov
add
and
std
call
in
cs
pop
sub
jmp
jae
pushf
xchg
ljmp
jg
or
cmp
call
jnp
jne
dec
xor
je
jmp
jle
or
outsl
pop
jmp
push
divb
notb
rol
je
aad
pop
call
xor
mov
add
sarl
subl
lods
lahf
std
mov
icebp
idiv
inc
add
or
sub
add
loop
stc
lock
out
enter
or
cwtl
or
loope
adc
and
lea
sbb
cwtl
xor
notb
out
movsl
adc
add
add
pop
push
pop
mov
sbb
out
sbb
sbb
out
mov
xor
rorl
fisubrs
daa
add
push
popl
aas
out
xchg
pushl
sti
add
fdivrs
andl
sbbl
repnz
ret
rcrb
add
and
sub
scas
fldl
adc
add
add
stc
dec
and
add
jle
adcb
mov
ret
das
xchg
jp
test
mov
jmp
mov
xchg
pushf
stos
hlt
lods
pop
lahf
jo
and
dec
jecxz
jno
faddl
outsb
inc
mov
fs
adc
pop
xchg
cld
setns
das
add
sbb
push
add
pusha
addl
in
mov
in
add
in
lea
sti
je
adc
popa
sti
mov
out
in
cli
hlt
add
aas
jmp
cmp
inc
lds
sti
shl
add
cmp
bound
or
repnz
idivl
ljmp
test
fiadds
hlt
enter
popa
push
push
adc
push
test
adc
aas
jmp
cmp
mov
dec
jne
add
out
mov
lea
cld
jmp
enter
cmp
inc
add
dec
enter
push
mov
add
push
mov
in
idiv
xchg
fs
xor
xchg
ljmp
sub
cmp
mov
jl
inc
mov
notb
push
notb
xor
fcompl
cmp
push
mov
popf
mov
cmpsl
shrb
sbb
sti
aaa
add
sar
shr
inc
movsb
cwtl
or
cmpsl
jge
test
push
sti
push
xor
cs
cli
repnz
push
jp
inc
push
data16
rorl
inc
push
leave
pusha
pop
test
adc
hlt
cli
mov
push
mov
xlat
mov
push
sti
fcomps
mov
mov
je
arpl
pop
sbb
or
mov
mov
sub
arpl
fs
aad
and
arpl
mov
ret
mov
jp
adc
or
or
out
out
xor
mov
movsb
xchg
or
mov
xchg
jl
sbb
insb
mov
add
jg
cld
insb
push
out
jmp
add
add
add
add
add
subb
add
jg
jno
popf
iret
addr16
xchg
out
mov
jmp
xor
dec
sbb
sti
insl
sub
xchg
loop
out
xchg
mov
xchg
push
fwait
in
test
jmp
cmpsl
js
jmp
inc
je
int3
in
cmp
out
xor
or
ss
adc
imul
mov
mov
cmpsl
adc
sti
loop
nop
pop
aas
jbe
test
push
sti
add
and
test
mov
scas
add
xor
notb
lea
incl
mov
call
dec
jb
add
mov
fildll
test
jmp
lock
push
test
mov
repnz
rcl
fdivr
cwtl
repnz
sbb
call
sub
inc
adc
cmpsl
in
ds
lea
out
add
cmpsl
jecxz
clc
pop
xlat
movntq
out
ret
and
out
mov
sub
aas
sahf
das
sbb
daa
push
mov
cs
stc
push
fildl
out
xchg
test
call
cmp
xchg
cli
leave
ljmp
adc
add
pop
add
lret
pop
incl
jmp
or
cld
gs
inc
sti
xlat
movsl
cmp
rolb
std
push
ret
out
mov
dec
mov
nop
call
ret
call
xchg
add
jns
push
or
cmpsl
mov
pushf
ret
js
pop
add
push
mov
inc
inc
sbb
inc
addb
add
daa
nop
andb
mov
add
xor
daa
inc
popf
adc
inc
jge
xchg
push
call
daa
popw
pop
cwtl
or
add
mov
inc
jl
rclb
jo
es
or
test
vpsubsb
fdiv
aas
pusha
mov
cwtl
popa
sbb
jge
or
sub
mov
aam
add
add
aas
jmp
rorb
inc
cmp
call
je
test
mov
add
call
movsb
pop
mov
inc
sahf
add
push
xchg
fbstp
int3
adc
inc
gs
mov
out
push
adc
jmp
aas
std
lahf
inc
je
ds
add
mov
add
es
cmpl
xchg
jle
dec
push
pop
push
cmp
or
jp
cmp
test
notb
push
add
adc
std
inc
sti
cmp
incl
mov
add
push
inc
inc
adc
mov
dec
loop
inc
into
jns
hlt
xchg
enter
add
add
add
jle
imul
add
pop
je
decl
add
inc
out
psrlq
dec
push
ds
rep
cli
repnz
aas
out
dec
je
int3
mov
jb
jecxz
push
adc
out
pop
call
or
sarb
movsb
cmp
aas
out
xchg
sbb
cwtl
clc
add
sbb
dec
divl
inc
call
loopne
inc
or
add
add
fisttpl
xor
and
lcall
jb
cli
cwtl
fwait
nop
pop
out
enter
repnz
inc
inc
or
add
rcrl
push
push
mov
adc
add
or
nop
lea
lcall
sbb
icebp
cs
jmp
dec
std
add
add
sub
out
scas
cwtl
lcall
pop
mov
or
adc
ja
mov
sbb
adc
add
add
mov
push
imul
imul
xor
rorb
cwtl
push
adc
in
add
cs
and
or
ss
out
and
xchg
lea
adc
outsl
push
add
in
ret
sahf
add
in
cli
fmul
repz
jmp
in
aaa
cmpsb
outsl
in
dec
lcallw
or
pop
bound
ret
mov
lds
push
push
cs
adc
jbe
leave
sub
add
mov
pop
dec
mov
mov
shl
int3
push
mov
sti
or
add
add
mov
xlat
aad
incb
out
adc
aam
cli
mov
cld
add
or
jno
ds
inc
je
adc
and
mov
xlat
mov
ja
subb
je
mov
mov
add
rclb
jle
addl
inc
je
out
bswap
pop
push
add
in
add
cli
sub
aas
out
mov
in
incb
shll
jmp
ljmp
xchg
sbb
cli
in
aas
out
add
out
xchg
or
mov
jmp
jmp
fistps
xcrypt-ofb
cmpsl
in
add
jmp
incl
sar
leave
lods
push
and
cld
dec
and
incb
cmpsl
mov
or
xor
jb
xor
aaa
or
sbb
xchg
mov
std
push
pop
aad
cmp
fs
and
jne
add
add
je
add
add
pop
push
inc
addb
inc
outsl
inc
xlat
sbb
mov
out
jmp
out
jmp
sbb
mov
in
fs
dec
add
add
add
add
jmp
add
add
pop
rol
dec
add
jo
loopne
sub
daa
mov
cmp
test
xchg
loopne
ljmp
adc
in
pop
test
fmull
mov
or
call
push
sti
cld
test
inc
jmp
outsl
inc
add
gs
and
sbb
add
add
lea
in
sti
cld
inc
adc
jmp
data16
in
ja
adc
mov
adc
fs
xor
stc
pop
dec
lea
add
out
stc
cli
add
jne
outsb
dec
addb
add
xchg
cmc
adc
test
pushf
pop
add
stc
inc
mov
add
call
add
add
mov
and
dec
cli
mov
scas
jecxz
push
ljmp
push
idivb
add
adcl
dec
mov
in
mov
jle
lods
in
xchg
jle
and
jle
in
out
jp
call
sbbl
cli
cli
pusha
repz
out
cli
cli
sbb
aas
out
aas
je
add
add
pushf
jns
iret
mov
or
movsb
mov
lds
cwtl
cmp
add
in
ja
out
call
andl
jg
jp
push
int
and
sbb
ret
aas
insl
jge
out
cmpsb
mov
add
jns
xor
loopne
sub
loopne
mov
in
sbb
jnp
fs
or
fildl
mov
xchg
andb
xchg
add
add
sbbl
cld
cmp
gs
add
cld
mov
mov
add
std
loope
inc
add
add
push
int
lea
lock
test
rol
mov
andb
lret
pop
sub
les
hlt
mov
sbb
mov
pop
sub
add
add
cmp
fs
sub
add
add
jbe
add
jmp
in
stc
adc
clc
cmp
bound
imul
in
push
lcall
add
and
loopne
and
nop
cmp
andl
je
stc
adc
nop
cmp
push
or
div
call
in
inc
or
test
inc
and
push
jo
sbb
adc
aaa
cmp
jb
xchg
out
test
call
or
dec
add
or
mov
and
sbb
jmp
mov
pushl
cli
pushl
adc
ljmp
or
mov
add
add
sbb
js
cli
and
je
fs
pop
mov
scas
bound
jg
add
adc
cmc
adc
and
inc
call
sbb
push
shrl
jne
mov
push
sub
adc
insb
add
out
mov
and
jae
and
imul
movsb
in
pop
adc
js
and
pop
adc
and
sbb
hlt
push
pop
or
sahf
lods
incb
sbb
push
lock
fisubl
push
mov
dec
mov
sbb
dec
rolb
sti
sar
ja
jae
nop
or
cld
dec
inc
xlat
rclb
cmpsl
in
adc
hlt
sub
or
add
add
add
adc
add
in
jmp
push
in
stc
insb
inc
jae
push
inc
daa
in
add
pop
movsl
lock
jp
repnz
mov
lea
test
cli
sbb
rorl
flds
adc
mov
subb
push
repnz
nop
lock
rclb
loopne
jmp
add
mov
ljmp
lods
outsb
or
or
ss
loop
subl
clc
ds
hlt
orl
clc
cli
pop
std
adc
fmul
std
je
cmp
icebp
loope
cmp
movsb
clc
pop
xchg
es
xchg
sub
cli
ds
nop
je
add
fdivrp
push
or
jae
lods
das
mov
cmp
jae
jmp
adc
push
arpl
sub
loop
out
jmp
adc
and
add
sbb
inc
ds
pop
ret
push
mov
add
add
jp
or
in
scas
imul
test
adc
cmp
decb
orl
and
adc
jnp
cmc
jne
add
add
add
pop
arpl
add
in
testb
push
mov
repnz
and
lcall
out
xor
out
add
popa
mov
dec
cmp
out
mov
add
movsl
mov
xchg
popf
mov
and
cld
cli
repnz
aas
out
mov
xchg
outsl
cli
out
sub
cltd
popa
mov
jae
sbb
lret
test
add
out
cli
cmp
ja
fildll
add
test
lock
sbb
add
add
data16
in
movsb
pop
movsl
fdivr
push
pop
clc
or
out
xor
aas
into
les
dec
jg
js
cmp
mov
inc
jmp
adc
add
add
std
add
notb
sbb
fstps
outsl
icebp
add
inc
faddl
push
or
fadds
mov
repz
pop
xor
and
idivb
mov
sarl
cli
mov
inc
out
stc
add
adc
push
repz
fwait
or
or
add
psubd
dec
add
out
or
aam
cmovo
push
mov
lds
lock
jo
xor
out
subl
idivb
jmp
out
jl
icebp
in
or
gs
cli
jle
push
sti
cld
int3
clc
je
mov
je
in
or
dec
adc
in
pop
sub
add
shl
add
mov
jge
fnstenv
and
jmp
cli
cli
add
add
movsb
jo
ror
mov
movsb
in
adc
jmp
sbb
jne
call
jecxz
dec
insb
sbb
mov
dec
pushl
add
pop
fstpt
notl
pushl
addr16
push
mov
inc
add
or
ret
and
pushl
or
and
xor
adc
xor
and
dec
add
push
and
sub
out
add
xchg
dec
xorl
es
mov
jae
pop
divb
jne
add
pop
add
push
push
sub
push
fcoml
outsb
repz
dec
fs
fdivl
fmull
fcompl
fidivrl
inc
out
mov
or
daa
sbb
out
clc
movsb
faddl
push
insb
lock
je
xchg
sub
icebp
jns
mov
pop
cld
mov
push
push
sti
rcrb
mov
sbb
fcoms
push
dec
hlt
mov
xchg
inc
fdivs
add
add
inc
jmp
add
jg
test
movsl
add
pop
pop
jbe
ja
in
cmp
fs
pop
sub
push
add
add
shlb
js
jg
or
lock
sub
pop
fsts
inc
mov
decb
dec
cltd
push
add
faddl
push
mov
mov
test
pop
pop
std
or
ja
fsubrl
scas
icebp
ljmp
es
jne
push
xor
pop
inc
or
cmp
cli
push
outsb
mov
faddl
add
add
xor
insb
push
aam
add
stc
out
jae
fdivs
dec
shr
push
sti
cld
aam
inc
jmp
in
xchg
fwait
push
push
inc
sarl
mov
fcmovne
arpl
out
xchg
mov
cmp
mov
popl
mov
jle
add
lret
in
fcompl
fwait
sahf
in
cli
jb
cld
xchg
xor
lcall
insb
pushl
lock
cli
jmp
mov
sub
sub
dec
icebp
adc
add
sbbb
inc
or
out
cmc
dec
jb
lret
aad
add
dec
addl
jno
xor
adc
add
add
xor
xchg
jmp
cmpl
je,pn
test
ljmp
mov
ja
and
pop
jne
popa
lret
cmc
mov
cmp
add
sahf
xchg
test
shlb
addr16
push
loopne
rorb
call
jae
cmp
popa
jmp
inc
lds
imul
call
add
insb
fimull
mov
cmp
and
push
outsb
sbb
adc
icebp
and
mov
enter
bound
lods
clc
cmp
add
gs
aas
add
dec
inc
jnp
dec
inc
lds
inc
sti
xor
outsb
aas
add
pop
or
jmp
cld
jge
movsb
daa
shrl
sub
inc
out
out
add
pop
jg
sbb
jp
dec
mov
dec
mov
out
pop
inc
add
rcr
push
push
out
sbb
rolb
adc
pop
cli
or
add
out
repnz
sbb
jmp
rcl
dec
call
insl
stos
cli
addl
add
clc
mov
and
cli
ss
je
sub
push
add
add
pop
sub
das
sub
fidivs
add
in
jae
aam
add
cmc
push
xchg
cmp
mov
dec
cmpl
icebp
xchg
fistpl
in
imul
add
fistpl
std
jmp
sti
add
pop
add
ret
pushf
or
into
push
notl
mov
lea
push
push
call
or
nop
mov
add
scas
insb
mov
add
or
call
test
cli
andl
add
call
adc
dec
insl
mov
cvtps2pi
xor
push
test
outsb
lea
pop
call
out
andb
fdivr
call
jg
cli
imul
lea
xchg
enter
iret
das
out
mov
xlat
cmp
pop
inc
and
mov
repnz
inc
out
rorb
popa
and
and
dec
lea
mov
sbb
push
lea
xchg
std
push
fisttpll
roll
pop
call
bound
adc
out
push
add
add
fwait
add
pop
pusha
xor
adc
add
sbb
shrl
push
xor
add
sti
xor
inc
out
fcompl
in
add
pop
mov
ljmp
out
xor
out
lods
pop
xlat
js
pop
mov
adc
pop
and
lret
daa
push
test
inc
push
add
inc
jl
or
inc
or
cmp
mov
jg
add
cld
cwtl
sub
cmpsb
cmpsl
pop
push
jnp
sub
xchg
adc
jmp
out
call
fsubr
xchg
xorb
fucomi
lcall
call
mov
mov
pop
cli
movsb
push
xchg
add
aaa
sub
call
imulb
cli
jb
cld
popa
push
aaa
add
cmpsb
in
fst
jp
jmp
jb
call
inc
pop
sub
push
into
stos
jmp
repnz
out
incl
and
std
incl
test
jmp
ja
add
icebp
xor
sub
incl
add
add
sub
add
add
push
push
mov
adc
call
lea
mov
sahf
adc
icebp
mov
dec
jnp
fmull
mov
incl
inc
testb
jae
lds
and
add
rcl
add
out
push
push
ja
out
mov
mov
add
sbb
cltd
pushf
adc
decb
xchg
add
cmpsl
and
scas
das
repnz
add
out
add
out
cmp
aaa
or
out
mov
cli
cld
xchg
testb
test
add
jno
clc
paddsw
out
stc
mov
sub
cmc
cli
imul
lock
push
jb
loop
movsl
hlt
cli
pop
js
out
add
les
jb
lods
sub
test
push
or
inc
mov
adcl
in
hlt
std
pop
in
rcl
call
pop
fadds
jp
jle
outsl
rorb
jge
mov
add
add
add
xchg
lods
outsl
cmp
out
ret
adc
mov
hlt
jge
add
hlt
call
jg
hlt
pop
out
popa
shr
mov
mov
call
hlt
out
xorb
jmp
out
add
cli
mov
push
call
cmp
cmpsl
in
lahf
hlt
jl
adc
push
shlb
cmpsl
add
aas
jge
push
jno
pop
sub
push
je
add
add
mov
cli
push
xor
push
call
data16
jo
ret
hlt
jbe
in
ja
and
stc
ljmp
into
or
push
lret
jb
mov
arpl
adc
push
lea
dec
cmp
bnd
fwait
cmp
call
jmp
jge
icebp
jae
out
inc
and
leave
xchg
incl
add
add
mov
jae
gs
sub
pushl
addr16
or
add
add
or
adc
cmp
jne
icebp
jae
mov
add
jbe
jnp
out
jae
addb
std
aaa
fsub
sahf
cli
cli
adcb
out
out
inc
inc
dec
xchg
push
push
inc
out
adc
mov
dec
sti
xor
push
data16
or
into
jns
sti
adc
inc
or
bound
add
push
je
insl
jno
out
punpckldq
add
add
inc
add
in
incb
out
insl
cmp
adc
scas
add
call
addb
xorb
icebp
insl
push
sub
add
add
add
shr
test
jg
iret
and
das
mov
stc
int
jecxz
inc
add
fs
fwait
or
fisttpl
aam
push
push
imulb
add
loop
xchg
xlat
inc
jmp
lock
flds
into
sub
add
mov
notl
sbb
or
data16
adc
mov
sub
add
xor
and
sub
in
call
jb
sub
push
push
jg
or
add
lret
cli
mov
clc
leave
mov
dec
and
cmc
mov
shrb
or
sahf
mov
mov
in
int3
out
addr16
fwait
imul
lods
xorl
add
add
xor
xchg
call
add
call
mov
pop
and
pop
sub
call
and
mov
cmc
ja
test
xchg
mov
mov
push
call
lds
or
pop
loop
push
test
and
xor
cmc
test
repnz
cli
sub
push
es
jmp
pop
roll
inc
pop
aas
mov
sub
test
cmp
push
add
and
in
push
call
cmp
cmpl
jbe
push
mov
test
and
lcall
test
jge
add
xor
addr16
pushl
mov
adc
fdivrl
add
in
add
out
xorb
add
dec
fldlg2
cli
mov
xchg
in
cli
hlt
stos
dec
pop
mov
pop
and
mov
jmp
std
push
push
or
add
out
push
hlt
out
jns
cli
fs
jae
lock
iret
jmp
int3
mov
in
cmp
jns
jnp
mov
inc
xor
push
jp
xchg
shr
xor
in
lea
fwait
jns
cmp
ret
add
call
orl
mov
lea
push
xor
pop
addr16
in
arpl
jnp
lds
xlat
jbe
outsb
inc
sub
inc
sbb
in
mov
sbb
add
cmp
mov
imul
jle
or
jbe
jmp
fxch
fisubs
push
bnd
loopne
fwait
mov
cli
fsubrl
xchg
repz
orl
ss
dec
call
fistpl
fsts
push
xchg
fisubs
add
in
adc
push
jl
test
das
pop
fadds
ja
out
cmc
xor
std
sbb
mov
jg
cli
push
adc
in
fwait
int
add
ljmp
sub
pop
dec
mov
add
lock
gs
adc
push
or
xorb
mov
lea
pop
mov
inc
jecxz
movsl
pop
int
dec
xchg
add
add
lea
add
movb
ret
dec
std
jp
sbb
cld
dec
jecxz
jle
and
inc
dec
xor
mov
ja
aad
add
out
test
inc
ljmp
nop
push
inc
xchg
push
das
cmp
add
dec
call
out
out
pusha
mov
jl
cmpsl
shl
outsb
in
mov
jnp
push
push
dec
rorb
pop
or
out
dec
push
testl
aaa
inc
ja
xor
push
sti
repnz
inc
out
cmp
enter
aaa
lcall
outsl
stc
mov
call
jmp
js
fimuls
jno
in
and
pop
xor
sub
in
sub
push
ss
add
add
in
in
out
hlt
jl
iret
imul
ss
aaa
jae
mov
cli
out
and
in
add
inc
out
stos
clc
lods
cmp
call
test
mov
mov
add
leave
imul
daa
or
ja
not
mov
mov
lcall
hlt
popa
repnz
jmp
sbb
and
mov
or
jb
aam
out
inc
cld
pusha
add
jo
or
sahf
cmp
push
push
jmp
sub
cli
jg
pop
add
and
ja
pop
ljmp
ret
popf
clc
repz
mov
push
xor
aam
cmc
aas
jmp
and
pop
idivb
and
int3
fldt
popf
xor
imul
add
add
shll
push
ljmp
adc
dec
mov
and
jle
mov
shll
adcb
leave
adc
or
je
out
mov
dec
lcall
xchg
ret
add
ds
pop
clc
mov
pop
outsb
add
sar
sarb
add
add
call
jmp
adc
test
pop
jmp
and
xchg
stc
fcmovne
or
cli
lcall
and
sub
outsb
notb
or
push
aaa
cmp
sbb
stc
sar
add
fs
inc
addr16
add
shrl
std
sbb
sub
out
push
add
out
jge
out
aaa
xor
add
add
inc
ss
popf
add
mov
push
out
pushf
xor
loop
jecxz
dec
xchg
push
or
testb
cs
fadds
lcall
dec
jecxz
icebp
lods
xor
sub
xchg
jp
fisttpl
pop
leave
loope
in
in
cmpsb
xchg
cmc
jge
pop
aaa
iret
pop
cmp
stc
vhaddpd
jmp
add
mov
inc
sti
add
cwtl
add
adcl
mov
add
xor
mov
insl
pop
pop
cmp
in
lea
js
pop
mov
jns
sti
jmp
inc
lcall
idivb
stc
out
out
mov
aaa
mov
iret
aad
fisubrl
adc
daa
fiadds
jae
mov
sub
psubusb
rcr
int
dec
adc
hlt
test
sub
inc
sub
mov
clc
ljmp
lret
insl
sti
inc
mov
xor
ljmp
pop
cs
sbb
shlb
mov
pop
jl
daa
inc
adc
enter
ds
dec
or
add
add
roll
clc
cmc
lds
add
in
mov
mov
or
mov
les
cmovb
add
mov
dec
loopne
into
add
mov
cmc
inc
adc
pop
cmpl
jnp
adc
mov
mov
repz
or
xor
aas
cmp
shll
cltd
imul
jne
add
add
jnp
out
popa
lock
into
jl
push
popa
lock
mov
sbb
add
andl
pop
hlt
mov
insl
mov
push
call
pop
sub
mov
xchg
clc
pop
psubsb
xlat
mov
fsubs
inc
aad
xchg
int3
push
xchg
jg
dec
xchg
or
xchg
sbb
aaa
dec
sti
jmp
cmp
loopne
aaa
adc
and
mov
aam
mov
pusha
dec
fstpl
mov
dec
imul
lret
push
jecxz
lret
push
loop
mov
lods
jo
mov
leavew
repnz
call
inc
mov
les
outsb
aaa
jg
faddl
add
add
mov
aaa
fwait
jg
shrb
in
fidivrl
fadd
stc
gs
fwait
rcr
mull
dec
lea
cld
pop
aas
out
push
cmp
mov
add
xchg
call
xor
dec
cmp
mov
lods
sub
dec
stc
fldl
imulb
stc
incb
into
call
adc
aaa
sub
decb
bound
add
add
pop
jb
cs
and
pop
jmp
sbb
xchg
mov
push
aaa
mov
mov
fadds
ljmp
ljmp
and
ljmp
mov
inc
jecxz
or
repz
jle
enter
int3
jmp
jg
adc
dec
rorb
addl
add
jg
shlb
mov
out
sarb
inc
hlt
test
cmp
sti
mov
ret
sbbl
add
or
sub
call
mov
xor
or
jnp
outsb
or
pop
jle
jae
out
inc
fsubrs
mov
dec
add
sub
add
stos
push
add
jg
push
add
loop
hlt
xchg
lahf
fnstenv
inc
in
mov
jl
fistl
and
loopne
push
rcll
add
in
mov
sbb
pand
out
mov
dec
in
and
jno
fs
sti
insl
out
repnz
push
dec
adc
add
add
fidivrl
pusha
incl
ljmp
push
orl
and
add
xchg
out
imul
dec
jp
push
faddl
fwait
divb
rorb
jmp
loope
hlt
add
aaa
adc
or
repz
add
in
mov
stos
iret
xor
fstpl
xor
pop
cltd
in
jle
xchg
ffree
fbld
xor
adcb
xor
iret
sti
mov
lret
pop
pop
mov
aam
jnp
dec
imul
addr16
cli
ds
dec
or
inc
pop
lock
cli
ljmp
inc
std
addr16
rcr
iret
dec
shr
push
cli
testb
add
add
add
xchg
pusha
int3
stc
out
dec
mov
into
sbb
pop
jb
sub
push
rorb
std
pop
xor
xchg
sbb
mov
jnp
xchg
insl
aaa
faddl
aaa
cs
mov
add
add
loop
dec
jl,pn
adc
push
cld
cmp
incl
mov
scas
adcl
mov
add
pop
cmp
add
add
mov
incl
inc
in
push
add
mov
testb
orl
dec
clc
test
mov
stc
je
jne
cld
mov
stc
orb
cmp
xor
inc
out
push
adc
insb
inc
aaa
mov
add
fwait
xchg
push
hlt
sbb
mov
pop
in
add
add
lods
push
aaa
add
jmp
inc
add
aas
add
sbb
inc
sbb
ljmp
mov
sub
cmpsb
cwtl
mov
xor
cld
ja
xchg
add
lock
xor
and
dec
in
fmull
in
pop
clc
ljmp
add
add
js
hlt
in
pushf
cmp
mov
jl
add
add
ret
xor
cwtl
jns
pop
sbb
insl
dec
mov
in
adc
sbb
and
sub
in
xor
inc
int
ret
inc
pop
je
dec
stc
cs
pop
jnp
adc
andb
pop
dec
adc
or
pop
mov
ds
ss
mov
xchg
out
clc
imul
cmp
fstl
fildll
in
bound
jb
cld
mov
jge
cmp
dec
mov
loopne
xor
into
inc
and
int3
ss
dec
lret
movl
dec
mov
cs
cmp
ljmp
inc
aad
ja
daa
cs
xchg
add
add
sub
mov
imul
std
aam
dec
icebp
pop
cmp
aaa
mov
dec
adc
adc
enter
in
or
cli
mov
jo
jge
jle
in
xchg
lds
add
mov
add
imul
adc
decl
ret
cmc
or
push
or
dec
fcoms
jnp
xlat
or
mov
decl
fdivs
jae
in
adc
lock
or
cmp
ljmp
mov
movntq
pop
xchg
fstpt
fstpt
mov
fildl
add
arpl
pop
sbb
inc
mov
mov
adc
jle
jg
dec
add
jno
mov
lsl
mov
out
fs
fninit
test
and
fisubs
xchg
fidivs
inc
in
cwtl
mov
mov
out
inc
les
shll
clc
jge
in
mov
clc
jns
ret
clc
jno
fsub
push
xchg
ds
push
xchg
lds
adc
and
xor
push
add
mov
pusha
aas
fldl
sub
add
cmpsl
test
add
repnz
jle
add
add
out
xorl
push
test
pop
pusha
cs
dec
clc
cmp
inc
mul
mov
jl
stos
pop
addb
and
pop
jno
std
add
rorb
cmc
aam
inc
mov
and
test
sub
dec
xchg
and
out
mov
mov
xchg
ljmp
divb
lock
sub
xchg
pusha
lds
call
and
xchg
lret
loopne
aad
sbb
ljmp
cli
ljmp
addl
in
inc
mov
or
addl
jmp
mov
jle
cltd
scas
push
pop
inc
mov
jl
cli
push
xor
adc
lea
mov
mov
push
adc
faddl
cs
cmp
roll
add
add
cmp
xchg
jl
adc
adc
xchg
imul
add
loopne
aaa
lcall
ljmp
mov
jmp
push
aam
mov
pop
lods
xchg
or
in
pop
cmp
or
hlt
jl
popa
inc
clc
dec
mov
add
loope
or
out
rorl
push
add
aam
sbb
jge
rolb
mov
dec
cmpl
or
flds
fs
insl
shr
inc
xor
push
adc
cmpb
add
inc
aaa
sbb
pop
das
std
jle
iret
int
sbb
shl
mov
pop
cmc
xchg
aad
movsl
pop
cld
imul
mov
jl
fsubrl
repz
dec
out
sub
hlt
dec
cmp
ret
lock
jmp
adcl
call
out
imul
outsl
inc
jns
les
out
pushf
sbb
mov
pusha
aaa
repnz
sarb
sub
push
xor
stc
and
add
add
add
add
lods
in
add
loop
jl
jl
clc
jo
scas
ss
mov
jge
int
aam
sbb
mov
pop
call
lods
mov
mov
call
sub
ret
call
jnp
or
outsb
sub
popa
loop
aam
xor
inc
dec
loop
adc
out
cld
cmpps
add
mov
loopne
adc
inc
inc
push
icebp
aam
inc
adc
fcoml
cmc
push
leave
int3
scas
cli
xor
repz
jne
jns
scas
inc
dec
or
sbb
ds
lock
add
mov
stc
stc
popf
fadd
inc
push
push
mov
dec
ds
pop
dec
call
out
push
add
inc
cmp
adcl
inc
shl
xor
sbb
decl
out
jne
sbb
xchg
xor
hlt
pop
outsl
ss
add
das
lds
clc
or
or
lahf
cli
jb
cli
mov
ror
je
and
or
int3
xlat
cli
fdivs
dec
clc
loopne
dec
hlt
fs
lods
jmp
mov
gs
jmp
call
mov
mov
ret
jnp
dec
xor
mov
lock
sub
testb
fidivrl
fiaddl
pop
add
and
mov
dec
inc
lods
roll
in
mov
scas
flds
pop
test
out
dec
adc
add
push
sbb
mov
pop
add
dec
add
sub
push
or
dec
mov
or
stos
mov
lods
inc
aas
stos
add
pop
fimuls
aaa
rolb
std
mov
aaa
in
add
cmpsl
lods
fadds
dec
les
cmpb
lods
xor
jg
loopne
jl
in
test
inc
or
out
cwtl
hlt
jg
sbb
outsb
in
in
dec
mov
jno
mov
fisttps
xchg
jecxz
shrb
ret
call
jmp
dec
sbb
stos
dec
sti
call
ret
or
cmpsl
and
je
sub
sbb
stos
mov
divb
loopne
cld
stc
sar
out
add
jae
or
sqrtps
out
inc
xlat
add
jne
cmp
add
or
call
sub
leave
cmp
mov
cmpsl
cld
dec
jmp
mov
call
or
mov
inc
sbb
ror
inc
test
mov
inc
mov
imul
or
cltd
ds
mov
push
mov
test
push
insb
inc
js
jecxz
inc
adc
and
das
push
insb
mov
sti
mov
bnd
and
or
pop
in
fstl
lret
or
cmp
mov
fdivr
xlat
in
jg
insl
pop
and
ja
test
test
enter
pop
out
je
jp
pop
add
inc
sbb
push
repnz
add
aad
out
fisubs
in
aas
es
insl
mov
mov
xchg
push
loope
out
jnp
inc
sub
mov
adc
inc
jmp
and
mov
cmp
pop
pop
scas
movsb
in
push
movsl
add
mov
psrad
movsb
push
mov
int3
xchg
xor
add
or
push
in
mov
push
out
ficoml
fnsave
cmp
dec
jg
add
mov
jp
pop
push
movsl
jl
loopne
pop
cmpxchg
jb
int3
es
popf
jno
add
pop
mov
and
jns
pop
mov
xchg
movsl
add
push
jl
and
and
mov
ljmp
add
lock
in
or
mov
jg
repz
mov
jno
ljmp
xchg
rorl
and
pusha
xchg
xchg
iret
jp
mov
add
xchg
stos
mov
repz
into
cmp
add
hlt
add
cmp
add
roll
mov
mov
add
pop
xor
popa
mov
mov
mov
pop
sti
inc
push
add
push
pushf
rorb
cmp
push
add
mov
jle
ds
add
cmovp
mov
or
aaa
sbb
out
enter
push
xor
lea
enter
jl
out
hlt
or
add
add
jmp
in
or
cmpsl
fdivr
cmp
or
xor
test
lods
jg
scas
dec
inc
pop
or
out
jnp
fbld
add
lods
out
push
sbb
push
lods
int
jnp
daa
lret
jmp
xchg
cmpl
lods
aaa
or
cmc
push
lret
std
jmp
sub
add
daa
adc
out
jnp
mov
stos
lcall
in
imul
or
adc
aam
mov
push
cmpsl
lea
les
loop
imull
testb
test
popf
dec
mov
jns
out
ljmp
in
add
cmp
inc
pop
gs
stos
add
cli
popa
inc
inc
jns
add
jl
add
add
lea
divl
cmp
fs
fnstcw
add
add
or
mov
loopne
and
dec
bound
bound
mov
bound
mov
popa
test
add
hlt
jmp
imull
bound
add
dec
loope
cmp
or
jno
je
mov
je
mov
loop
sub
inc
test
xor
mov
mov
jg
and
fsubs
iret
cli
pushf
sub
inc
cmp
sbb
subb
add
shll
inc
rclb
fdivl
leave
shl
mov
je
jne
cmp
out
jl
cmc
mov
int3
add
add
add
scas
orl
inc
add
imul
mov
sar
inc
jb
dec
or
fmulp
jmp
add
shl
pop
mov
inc
add
cmp
scas
fs
testb
stc
inc
or
les
xchg
fiadds
cli
or
les
std
dec
in
clc
das
mov
mov
ret
addl
add
cmpsl
pop
sti
cs
fdivr
adc
les
rol
mov
xadd
movaps
movsl
movsb
sub
xchg
mov
xchg
sar
outsb
stos
ja
ret
mov
pop
movsl
movsb
push
pop
cmp
push
int
pop
or
test
movsb
lods
ja
insb
jecxz
adc
fstpt
add
icebp
fsubs
push
add
add
addb
add
fwait
or
jp
sbb
mov
jmp
inc
cli
add
jg
add
add
jp
or
push
and
jmp
push
dec
in
out
out
cmp
ds
jb
icebp
push
sub
push
mov
jle
adc
call
or
insb
mov
pop
pop
sbb
xchg
fnstenv
mov
or
jne
pusha
lods
pop
xchg
pop
mov
scas
testb
jmp
fmull
xchg
sub
pop
lods
jmp
data16
or
add
popf
aas
or
add
scas
das
mov
ret
sub
sbb
jmp
pop
adc
hlt
popf
aas
or
in
jmp
in
ret
and
mov
inc
ret
mov
inc
or
jl
stc
push
and
xchg
call
push
mov
push
lea
push
addl
scas
icebp
shll
inc
xor
daa
aad
roll
cs
or
xor
or
ds
cmp
outsb
add
cmpsb
gs
mov
enter
out
ud0
inc
add
ljmp
call
repnz
push
divl
les
fcompl
add
xchg
into
out
cmc
icebp
insb
jmp
pop
pushf
repz
icebp
xor
adc
int
add
xchg
push
sti
cli
lock
sbb
sbb
mov
stc
clc
or
sbb
xchg
sar
call
jge
stc
fdiv
stos
pop
mov
es
push
sbb
xor
iret
fimull
add
rol
mov
loopne
cltd
ljmp
fst
mov
sarb
loopne
movsl
mov
add
add
aas
dec
jl
cmp
mov
aaa
xlat
pop
cmp
push
rcrb
out
or
sub
xchg
jle
cmp
out
out
pop
pop
repz
xchg
mov
dec
adc
insb
ja
out
rorl
mov
mov
insl
mov
daa
cmp
add
add
push
xchg
out
je
cltd
mov
insl
cmpsl
in
jmp
xchg
and
add
fwait
lret
scas
test
loopne
int3
out
add
cmp
sti
je
mov
add
mov
add
push
sahf
cmpsb
or
lods
popa
sub
sub
mov
fisubrs
jmp
stos
std
subb
add
xor
in
cli
je
pushf
inc
sbb
in
pusha
daa
mov
inc
xchg
pop
enter
cmpsb
punpckhbw
cli
mov
or
add
aam
add
add
and
aam
add
cmp
shll
divl
std
rorl
jno
test
jmp
cmpl
mov
jns
incb
test
adc
dec
sbb
pop
incb
push
push
inc
inc
or
subl
sbb
add
add
testb
std
push
xchg
jl
dec
or
enter
push
add
adc
or
lea
jge
dec
jecxz
int3
test
pushf
cli
ror
mov
xor
dec
dec
mov
push
or
and
sahf
cli
rclb
push
inc
out
je
out
and
pop
pop
push
bound
std
or
mov
mov
mov
mov
rol
and
cmpsb
xchg
and
pushf
mov
call
mov
xchg
in
bound
pop
faddl
test
and
jb
leave
push
push
dec
push
jg
xchg
mov
mov
or
mov
dec
xchg
or
add
add
or
push
push
ss
fwait
cmpsl
nop
sub
xchg
push
out
insb
mov
fwait
mov
iret
nop
std
lods
insb
ret
in
xchg
add
jl
test
add
insl
jmp
int3
ss
cwtl
jg
mov
push
stos
inc
popl
lea
lret
pushl
pop
mov
cmp
add
add
jle
fstpt
xchg
bound
in
push
stos
in
data16
call
aas
add
jmp
cmp
pop
push
stos
cli
push
stos
or
cli
jmp
movsb
add
mulb
add
in
jge
in
pop
subl
call
lods
loopne
pop
out
xor
xchg
gs
in
cli
pop
repnz
shl
sti
add
cmp
lea
add
jbe
loope
jle
add
mov
loop
jmp
imul
test
add
int
pushl
inc
adc
inc
clc
imul
dec
cmpsb
test
or
pop
xor
or
call
loope
adc
div
xor
lock
cmp
jae
out
or
sarl
daa
ljmp
mov
stos
sub
mov
shr
decb
xor
mov
test
cwtl
lcall
lahf
ljmp
pushf
incb
and
add
pushf
inc
or
add
out
pop
test
jg
das
pop
out
add
or
or
pop
das
pop
out
cli
mov
add
push
iret
mov
mov
imul
add
jle
shrb
add
stos
call
adc
lds
cmpsl
movsl
clc
addb
mov
cmp
movsl
call
mov
in
out
push
enter
mov
mov
jg
call
sbb
stos
mov
mov
mov
ret
fnstsw
incl
stos
insl
ds
mov
mov
sarl
push
cwtl
scas
xchg
inc
pop
faddl
data16
inc
lock
test
call
in
shrl
bound
lock
pop
jecxz
call
and
test
loopne
inc
ljmp
cmpsb
shlb
cmpsb
cwtl
jae
mov
addl
sub
call
push
xor
adc
sub
dec
cli
jmp
movsb
add
dec
mov
cmp
add
add
ss
mov
outsl
test
jp
sbbb
les
je
mov
cmp
adc
xchg
dec
aaa
jnp
inc
test
leave
xchg
cmp
cmpps
shrl
lock
outsl
jp
dec
enter
fmuls
xor
sub
les
scas
fs
dec
std
out
testb
je
add
add
fidivl
mov
push
out
inc
out
pcmpeqb
test
add
test
add
pop
pusha
dec
iret
add
stc
mov
out
or
scas
dec
insb
fadds
xchg
xor
cli
aaa
aad
or
add
add
call
test
mov
jg
call
popf
jle
jae
add
daa
scas
insb
mov
pop
in
mov
es
adc
add
mov
xchg
fcompl
incl
add
lret
popa
inc
in
ret
daa
stos
loopne
aaa
mov
cmpsb
cwtl
bswap
insb
cld
mov
jp
or
inc
jb
out
lock
mov
shll
add
add
sbb
inc
ret
sub
lock
cmpsb
inc
mov
sub
nop
test
das
repnz
mov
sbb
in
out
sti
fmull
movsb
subb
fsubrs
inc
xor
ljmp
leave
stos
xchg
das
in
adc
mov
push
push
add
jmp
sbb
int3
cltd
xor
adc
add
add
cli
inc
and
pop
jmp
fwait
popf
lds
stos
subl
add
push
loopne
data16
inc
in
and
xchg
add
in
mov
es
mov
jl
add
movsl
cli
jmp
cmp
add
rolb
mov
push
add
mov
mov
inc
mov
add
add
xchg
rcl
ja
mov
idiv
push
shrl
lret
lea
jl
add
add
shlb
jle
xor
in
dec
mov
mov
call
mov
mov
sbb
inc
imul
or
mov
add
and
insb
addr16
gs
mov
jns
xlat
jl
inc
lahf
mov
ljmp
and
mov
mov
cld
leave
insb
mov
mov
jno
inc
roll
jbe
aaa
lods
add
or
test
gs
ljmp
cld
cli
sbb
inc
out
adc
in
add
lock
mov
fwait
jg
jmp
fwait
jnp
dec
mov
es
mov
test
add
sbb
fwait
jns
sbb
addr16
add
icebp
sbb
sbb
add
arpl
xor
insb
mov
dec
test
pop
or
repz
pop
jmp
adc
ss
test
jns
push
pop
sub
lds
outsb
loopne
test
mov
add
adc
js
jnp
pop
jmp
push
dec
pop
mov
push
add
iret
stc
push
mov
mov
pop
inc
push
popf
jle
fadds
je
aaa
pop
adc
fcos
or
and
repz
cmp
incb
add
add
je
pop
test
out
mov
dec
js
out
push
sbb
into
fimuls
call
push
sbb
leave
stos
fildl
push
bound
mov
sbb
mov
out
sub
incl
add
mov
sub
cmp
icebp
btr
loope
iret
mov
jp
push
aam
pop
xchg
pop
outsb
add
lock
std
push
into
sbb
mov
push
mov
pop
into
dec
mov
or
sbb
mov
add
push
cmp
add
dec
jge
test
or
lods
fldt
test
adc
push
shll
adc
pop
mov
or
mov
xchg
mov
out
mov
and
and
dec
cmpsb
jo
mov
sbb
loope
ljmp
sti
xchg
add
out
push
xchg
push
xchg
adc
call
insb
jo
and
add
mov
jecxz
insl
lock
pop
lock
scas
and
int3
outsb
call
add
loopne
data16
ja
data16
push
add
jne
lea
mov
fwait
cli
cld
gs
add
push
cmp
call
jmp
cld
push
dec
out
xor
ret
out
outsb
dec
arpl
add
and
jecxz
jmp
add
add
jne
or
cmp
in
and
aas
jmp
jp
add
add
insb
insl
ds
ljmp
inc
mov
inc
ljmp
jns
push
dec
out
outsl
ret
or
or
sub
or
icebp
dec
ret
mov
test
in
cwtl
jl
inc
popf
scas
test
lods
mov
add
ret
add
jmp
inc
testl
add
mov
lcall
insb
sbb
dec
stc
xor
jmp
pushf
sbb
add
outsl
arpl
imull
repz
mov
push
pop
mov
push
shl
sahf
mov
add
add
push
cmp
or
push
adc
rorb
incl
add
add
cltd
loop
mov
push
pop
test
add
mov
outsb
or
or
inc
cwtl
addl
or
inc
mov
inc
add
clc
xor
ret
xor
jmp
mov
fwait
jns
out
decl
bound
and
out
lods
fs
stos
jns
mov
pop
cmpsb
jle
lret
stos
jp
dec
cmp
or
cmc
mov
stos
ret
mov
sub
in
mov
and
in
int3
insb
fidivrs
adc
mov
sub
inc
in
outsb
pusha
scas
ss
xor
scas
es
jnp
mov
mov
in
fs
add
test
cld
xor
jmp
das
ret
mov
mov
add
add
push
out
ss
faddp
jno
in
xlat
sbb
jl
pop
callw
loop
out
jmp
add
dec
shll
jae
sub
mov
fisubs
aas
add
push
jge
xchg
in
ret
mov
push
in
adc
inc
out
mov
nop
adc
jl
xchg
icebp
jno
add
add
or
cmp
decl
mov
shr
roll
or
push
in
add
mov
xlat
rolb
mov
add
push
pop
lcall
jl
jge
in
or
or
cli
jmp
leave
xchg
pop
out
cltd
das
sbb
in
inc
add
dec
nopl
add
add
popf
je
xchg
sahf
je
imul
pushf
fcomps
sti
push
jg
test
and
int
inc
cmpsb
clc
mov
xchg
mov
add
or
stos
cmc
decl
add
add
add
add
arpl
dec
xchg
loope
xorl
cmc
mov
mov
jnp
push
add
sbb
sbbb
loope
sahf
les
imul
or
or
in
cmc
into
pop
jl
sbb
pop
movntq
out
cli
enter
rcll
inc
lock
pusha
jno
es
lock
pusha
fimull
in
jbe
subl
sbb
add
and
lock
add
fcoms
adc
cltd
jmp
roll
mov
dec
stos
aad
jmp
push
daa
ljmp
cltd
ret
insb
addr16
cli
mov
and
fimuls
jb
movsb
cli
clc
adc
in
fs
xlat
add
cmp
push
out
int3
adc
movsl
fildl
mov
popa
scas
xchg
jmp
add
xchg
icebp
insl
daa
add
cld
loope
pop
jbe
add
add
inc
in
cwtl
sti
test
pop
inc
mov
hlt
xchg
sub
pusha
inc
cmc
call
aas
adc
movsl
cmp
add
add
add
fwait
mov
dec
test
add
movsb
loopne
daa
mov
add
cmp
sub
out
lcall
and
add
in
jmp
bound
or
or
mov
xor
adc
inc
adc
testl
adc
sub
and
fildl
mov
in
jg
out
inc
fnstcw
add
in
mov
fimull
mov
dec
in
jg
aam
add
jmp
hlt
fucomip
mov
jb
dec
adc
add
add
or
jnp
ret
sbb
xchg
icebp
push
mov
iret
sbb
pop
cld
call
add
in
imul
cli
push
mov
jnp
xor
pop
call
int
pushl
movsb
pop
cld
jno
outsb
and
mov
add
jmp
test
call
xor
shrb
jp
out
adc
ja
dec
or
aaa
or
jmp
int3
dec
and
lea
or
jne
rol
or
in
test
adc
stos
xchg
add
out
pop
fcomip
call
insb
aas
pop
xor
out
pop
sbb
add
iret
xrelease
or
adc
cli
fs
or
sti
pushl
push
sti
sti
sub
fiaddl
add
lret
clc
push
mov
rclb
arpl
je
hlt
add
xchg
sub
bound
int
out
push
dec
out
pop
push
rol
or
add
add
in
xor
xchg
pop
push
lahf
fcoml
push
dec
call
ret
in
ret
push
lcall
faddl
out
test
mov
out
push
push
dec
les
mov
mov
faddl
out
call
add
xlat
pusha
movsl
or
aas
push
xchg
mov
jns
call
in
dec
int
mov
xchg
test
sbb
jg
push
xchg
jo
push
sti
testb
insl
inc
cli
jb
jmp
cmpsl
inc
or
ss
pusha
test
pop
rorl
ja
sub
imul
jne
mov
add
ret
add
push
sti
incb
cmc
xchg
fdivp
ljmp
jl
mov
add
mov
mov
cmpsb
cli
decl
add
js
cmc
pushl
repnz
mov
push
push
fs
sbb
cli
xor
jae
test
jmp
enter
addl
add
xchg
pop
je
ret
outsb
or
idiv
imul
call
rorb
daa
jnp
pop
es
xchg
jg
notb
mov
mov
dec
or
ficompl
ficoml
pop
or
out
or
sub
ret
rcrb
fistl
pop
test
adc
cmpb
incb
imull
add
cltd
mov
or
loope
jg
xchg
mov
or
test
jge
pop
movsl
ret
mov
out
test
cmp
test
fs
add
mov
push
aad
xchg
jmp
lahf
fwait
repz
sbb
nop
rorl
maskmovq
notl
std
test
push
push
push
add
jl
test
jb
out
pop
dec
leave
les
or
in
cmp
mov
ret
popf
into
fwait
lods
insl
dec
lret
inc
test
pop
repz
popf
adc
insl
leave
push
pop
hlt
jge
fstpl
mov
imul
inc
call
and
mov
imul
movsb
cld
jle
inc
xchg
jecxz
dec
jmp
add
add
mov
cmp
mov
add
clc
out
mov
pop
lds
lock
xchg
lock
adc
push
push
xchg
jmp
jnp
inc
fidivrs
inc
add
xor
cmpsl
inc
push
pop
test
mov
scas
pop
in
add
ljmp
inc
cmp
fisttps
push
mov
add
adc
jp
adc
xchg
orl
stc
mov
jns
sbb
push
jnp
scas
add
jp
xor
sbb
add
mov
add
addb
push
test
mov
decl
pop
cmovp
negl
cli
jg
insb
add
punpckhbw
push
pop
dec
add
out
or
lahf
xor
or
add
out
xor
mov
jmp
jno
xchg
aad
es
push
mov
ja
lock
xchg
inc
push
insb
pusha
mov
mov
mov
outsb
xchg
out
incb
lahf
sysenter
insb
loopne
or
jo
mov
mov
or
or
sti
cli
xor
out
outsb
inc
fstpt
or
inc
stc
mov
pushf
gs
dec
test
lock
adc
sub
mov
jg
popl
lcall
mov
int
jo
cld
arpl
roll
jmp
xor
add
add
jns
push
xor
adc
jle
lcall
adc
fldl
mov
xor
or
xor
call
call
incb
mov
or
jae
sub
pop
jmp
mov
jae
or
add
repz
call
push
mov
test
out
jg
icebp
in
out
pop
inc
sbb
lods
rcr
out
bound
movb
adcb
not
or
call
loopne
inc
add
or
pop
jle
aas
jmp
vpackuswb
test
push
add
rcl
fdivs
add
add
fdecstp
add
dec
insb
inc
dec
imul
jle
push
push
mov
ja
call
gs
inc
sbb
jle
icebp
add
dec
sub
or
into
add
lcall
jmp
add
push
jp
mov
out
ljmp
pop
push
xchg
ja
fadds
add
add
sbb
inc
out
pop
mov
or
pushl
add
pop
shl
xchg
mov
loopne
rclb
out
movsl
sub
es
cmpsb
mov
ljmp
and
add
adc
add
xchg
jmp
insb
mov
inc
xchg
cli
sbb
and
gs
jmp
add
inc
std
cli
rolb
mov
sbb
mov
lods
mov
jle
adc
int3
pop
adc
sbb
int
inc
fwait
inc
jle
arpl
sti
adc
mov
call
notb
pop
cmp
pop
adc
call
out
loope
loope
mov
mov
int3
nop
adc
add
add
lcall
jg
in
rcrb
pushf
in
fidivrl
or
std
imul
es
out
cli
bound
rorb
pop
loopne
rclb
push
loope
lea
inc
test
jae
lods
sub
jg
int
jae
pop
and
add
sbb
test
in
out
cmpsl
add
inc
andb
add
add
adc
fidivl
shl
dec
out
aaa
mov
mov
out
cmpsb
out
outsb
pop
pushf
inc
push
mov
lds
jae
mov
fcos
dec
inc
sbb
adc
shlb
loope
inc
sbb
lods
xlat
ja
jl
cmp
jae
std
decl
cmc
incl
add
add
lds
cli
imul
xor
inc
in
imul
popa
sti
call
ret
push
cmc
incl
pop
dec
clc
pushl
movl
incl
push
lret
subb
xor
push
out
dec
insl
gs
xchg
push
add
inc
xchg
cli
enter
xor
add
in
inc
xor
in
cli
pop
jecxz
jp
mov
add
inc
sahf
dec
insl
gs
xchg
testb
jo
cli
push
pushl
movsb
dec
pop
or
sarl
mov
mov
loopne
add
jmp
out
call
int3
in
or
cli
add
mov
mov
in
fcomps
add
sbb
lods
in
subb
leave
inc
mov
hlt
fs
mov
loop
xchg
lods
adcb
adc
paddq
imul
add
out
mov
loopne
jmp
xchg
insl
pmulhuw
loope
pop
xchg
xchg
or
decl
hlt
arpl
xchg
xchg
cltd
xchg
test
fiadds
push
mov
sbb
test
scas
pop
add
imul
pop
jmp
std
xor
gs
jnp
out
pusha
lods
cld
ss
add
or
xchg
in
add
push
inc
sbb
add
stc
ja
cli
mov
and
jmp
push
jle
repz
cld
into
jbe
sub
jmp
or
cmp
jmp
pusha
jle
fsub
xor
jmp
jbe
pop
add
add
bound
or
inc
lds
sub
cmp
test
sub
add
dec
out
mov
xchg
cmc
cmp
out
cld
jmp
add
add
pop
orb
sbb
jle
jle
test
cli
cmp
cmp
pop
add
shlb
cli
das
ds
jmp
cmp
cmp
or
cli
adc
movsl
in
xchg
clc
lock
jns
mov
push
call
lret
pop
imul
imul
aad
out
incl
mov
mov
cwtl
push
xor
cld
mov
xor
popa
test
outsl
jo
adc
call
andb
mov
or
call
add
sar
and
add
mov
sbb
addl
les
add
add
or
icebp
shlb
mov
adc
mov
jnp
xchg
or
mov
add
push
fbstp
ss
jl
js
inc
faddl
mov
cmc
lods
inc
fmull
ljmp
iret
fsts
add
sub
loop
loopne
sub
cmpb
cmpsl
jg
and
testl
incb
ja
cmpsb
fildll
notb
loopne
pop
shr
fisubs
xchg
jg
sbb
in
mov
mov
cli
push
jmp
push
or
outsl
cli
xchg
push
cmp
and
sub
pop
jnp
push
aad
clc
out
bound
xchg
shr
cli
add
xchg
add
pop
hlt
add
xor
push
fmuls
jbe
ret
lcall
push
cmpb
add
mov
popl
and
stc
inc
and
cltd
adcb
divl
sti
push
hlt
icebp
push
lock
std
shr
lahf
cmc
incl
add
add
dec
add
jge
hlt
jmp
adc
add
jp
std
cmp
push
cmp
gs
xor
mov
dec
lock
loopne
mov
imul
push
sub
idivl
stos
test
or
cmc
mov
jo
inc
clc
fs
push
mov
push
dec
jle
insb
jne
mov
pushf
ds
hlt
jle
adc
mov
adc
cli
nop
push
or
fistpll
jbe
jnp
inc
clc
mov
inc
mov
add
into
sub
adc
mov
jns
mov
mov
jle
xor
mov
mov
nop
daa
insb
in
in
subb
insl
das
sbb
mov
cmp
jle
pop
inc
out
cmp
mov
sbb
fmuls
and
enter
or
outsl
inc
add
aas
jno
add
jle
lock
leave
inc
cmpsl
into
cmpsl
or
int3
sti
add
jge
rol
out
fs
jb
push
push
repnz
out
pop
test
cmp
stos
mov
adc
add
or
out
xchg
leave
add
jle
icebp
cmp
out
sbb
mov
jmp
pop
pop
loop
mov
inc
xchg
rolb
jns
add
jmp
fnsave
sti
jmp
mov
and
push
inc
push
push
jle
pusha
jnp
lods
je
add
in
out
mov
je
add
loope
or
inc
cmp
icebp
repnz
loope
cmpsb
decl
dec
pop
inc
dec
jl
orb
inc
add
decl
cmp
test
or
xchg
clc
cmpxchg
shll
mov
xchg
add
add
jnp
xor
dec
hlt
inc
xor
inc
inc
sub
hlt
or
add
dec
int3
inc
mov
insb
and
mov
adc
add
lock
clc
js
xchg
xor
scas
xchg
ljmp
repnz
cli
push
in
add
out
jns
fldt
lcall
dec
shll
insb
xchg
push
stc
mov
cmc
cmp
loopne
repnz
lret
inc
roll
adc
add
add
fwait
adc
cmpsl
push
repz
or
mov
cmpsl
lret
shl
mov
jl
imul
call
add
xchg
test
lea
ds
ret
pop
ds
js
fbld
mov
insb
out
aam
mov
js
hlt
pop
out
in
xchg
or
mov
jns
cmp
icebp
adcb
jmp
adc
add
add
imul
jns
cmp
inc
and
out
jmp
pop
cmp
sbb
test
in
js
dec
loope
scas
cmp
or
js
xchg
adc
lret
cmp
in
jg
cwtl
lods
js
imul
ud2
insb
dec
or
jmp
dec
imull
fidivl
push
shrb
inc
aad
add
add
mov
adc
test
inc
repnz
jnp
mov
pushl
shl
pop
stc
scas
imul
test
outsl
jge
sarb
jne
xchg
and
jb
and
pop
xchg
sarb
negl
push
push
notl
sti
aam
jp
add
jge
test
insl
orl
add
cmp
add
add
fucomp
push
dec
pop
insb
mov
jge
mov
ret
xchg
add
cmp
vmread
add
cmp
push
add
testb
and
cmc
push
cmp
orl
shll
mov
add
mov
add
loopne
jl
mov
mov
std
cltd
addl
add
mov
add
mov
add
add
add
xor
shl
idivl
hlt
insl
push
pop
xchg
out
jmp
cmp
out
ljmp
adc
das
cmpsl
lods
jne
ja
cmp
mov
fs
iret
mov
test
aas
or
and
inc
inc
fs
jmp
jno
out
fbstp
aam
dec
std
mov
dec
and
out
inc
jg
es
add
pop
mov
out
jp
add
mov
lods
icebp
cmp
mov
push
hlt
fs
call
rcr
lods
in
rcll
ss
mov
out
rorl
mov
mov
cmp
repnz
mov
or
fnstsw
jp
add
add
mov
sub
aam
adc
mov
sbbl
sub
fdivrl
push
out
pusha
loope
cmp
lock
add
sahf
add
mov
loop
dec
push
iret
pop
aas
push
scas
adc
movsb
shl
ficoms
jl
mov
loope
pop
mov
and
test
lret
and
mov
out
push
pop
pushf
in
gs
or
gs
sub
ret
mov
js
or
gs
sbb
jns
loope
jns
fldenv
or
cmpb
movsb
or
and
lret
out
jae
cmc
mov
test
add
sub
pop
stos
push
jnp
adc
add
xor
cmp
jnp
add
dec
cmp
mov
aaa
dec
xchg
add
test
in
cmc
subl
mov
sbb
test
add
arpl
cmp
je
adc
add
fucomi
outsb
and
out
push
jl
loope
mov
add
pop
push
insl
or
out
mov
shl
test
call
pop
jne
or
jp
gs
jno
shl
and
in
and
push
cli
sbb
cwtl
mov
push
nop
push
sti
adc
je
add
call
loopne
icebp
push
out
lret
ss
rorl
jno
push
jns
dec
out
mov
pop
in
movsb
mov
sub
jo
out
decb
stos
mov
nop
call
add
adc
out
xor
sti
fisttpll
rolb
sbb
add
push
dec
in
sbb
into
mov
je
add
add
inc
pop
cmp
mov
cmc
inc
fdivrs
jae
jbe
dec
daa
xor
pop
jl
std
rcr
mov
fdivrl
loopne
daa
dec
mov
add
cmp
test
add
insl
andl
loopne
add
pop
jl
movntps
jo
insl
mov
xchg
sbb
stos
cli
mov
mov
std
mov
test
mov
pop
enter
gs
cmc
push
decb
outsb
cmp
add
xor
add
ss
aaa
sub
jg
ljmp
add
in
mov
das
xchg
gs
jns
in
sbb
ja
sbb
push
test
mov
xchg
sti
and
xchg
push
push
sub
ja
jp
cmp
xor
ljmp
popa
jp
add
sub
dec
mov
dec
clc
std
out
inc
adc
add
add
cmp
fadds
into
add
cmp
jle
cmc
add
ffreep
add
mov
add
jg
add
xor
jp
pop
icebp
cmc
prefetcht1
cmp
push
cmpl
push
or
jne
out
decb
leave
jo
adc
stc
pop
out
sbbl
add
add
lea
jo
inc
inc
call
sbb
lock
leave
fdivrl
push
pop
test
out
sbb
jmp
or
add
out
fisubrl
fld
repz
xor
jg
fidivs
sbb
jge
or
add
ljmp
cmp
pop
or
out
stos
aam
jmp
add
jg
add
add
fnstsw
jnp
insl
mov
xor
imul
mov
bound
jbe
int
and
push
cld
std
fwait
pop
dec
add
add
aam
jmp
add
jg
add
add
cld
gs
xor
cli
xchg
push
lock
jnp
cmp
pop
insl
call
int3
imul
cmc
ds
call
cmpsb
adc
jmp
loop
mov
add
repnz
push
pop
cli
sahf
in
mov
sub
add
xchg
in
fdivrp
xorb
cli
jmp
cmp
cli
movsb
call
push
call
add
add
cli
cmp
mov
movb
in
fstps
das
aaa
mov
filds
add
ss
orb
jp
inc
stc
test
dec
jmp
cmp
push
jmp
int
cmp
add
ret
or
jmp
add
pop
add
decl
mov
mov
add
add
incb
incl
adc
inc
ret
jmp
int
cmp
jae
xor
cltd
or
mov
jecxz
sarl
pop
arpl
add
stos
sub
inc
pop
add
cli
push
cwtl
or
mov
jl
add
or
adc
and
pop
out
add
add
insl
push
cmp
fs
mov
insb
xor
xchg
imul
push
pop
pop
test
in
js
fcomps
adc
sub
fdivrs
lret
push
clc
pusha
mov
push
imul
out
out
pop
mov
in
xor
or
adc
or
insl
push
mov
fisttpll
or
mov
add
add
pop
incb
push
es
hlt
imul
add
mov
mov
push
insb
clc
imul
mov
jg
pop
test
ljmp
iret
je
subb
mov
or
out
dec
pop
jp
and
cwtl
jl
psubusb
mov
add
add
outsb
mov
orb
jmp
lods
ja
in
stos
out
lcall
bound
jno
add
rcrl
adc
cmp
hlt
outsl
add
into
lds
xlat
sub
clc
cltd
out
mov
or
divl
in
test
mov
ss
in
cmc
or
and
mov
imul
jns
into
incl
test
testb
and
inc
and
ja
and
jb
mov
pop
cli
fistl
or
jae
push
push
jae
lcall
fcoml
adc
inc
test
test
add
repz
aam
fucom
call
fldpi
lahf
ja
adc
mov
cmp
adc
ret
je
inc
xchg
lret
imul
inc
std
jae
out
hlt
pop
out
jp
popf
jb
adc
je
fstpt
out
decb
bound
jno
rcll
adc
mov
pop
pop
jno
mov
add
outsb
je
lock
jg
je
test
add
add
and
imul
cli
sbb
jne
out
decb
arpl
cli
add
les
and
test
cs
cli
fsubrs
push
addb
neg
jne
cmp
cmc
xchg
jmp
or
sub
mov
inc
jbe
data16
aad
mulb
jle
sub
ljmp
add
adc
cmp
jne
imul
je
sub
in
jg
jne
data16
add
add
jg
jne
and
inc
cmp
ljmp
or
in
cmpb
jmp
or
data16
out
fiaddl
dec
push
jecxz
stc
xorb
cli
jmp
xor
test
filds
pop
or
jl
aad
inc
or
cli
cs
mov
push
repz
mov
outsl
shll
pop
pop
cmc
add
ror
stc
aam
sti
lods
lock
xor
aaa
mov
cli
jo
adc
test
jbe
iret
xchg
imul
or
test
mov
clc
adc
imul
rolb
add
add
push
decb
xchg
adc
idiv
dec
adc
call
mov
in
xor
sti
invlpg
repnz
mov
or
dec
jb
fsubr
aam
cmc
inc
cmp
cmp
add
cmp
add
lcall
stos
stc
mov
sub
add
incl
test
cmc
dec
lock
adc
add
add
inc
push
jl
mov
cmp
xchg
adc
sti
decl
push
insb
out
addl
adc
add
xlat
imul
cmp
pop
ljmp
in
adc
sub
mov
outsb
cli
mov
jne
cli
jo
mov
bnd
push
or
outsl
cli
push
scas
insl
inc
repz
mov
push
cmp
or
or
jno
add
pop
gs
shrb
std
pop
pushl
mov
cmp
clc
add
xchg
xlat
mov
addr16
jno
cltd
sbb
cmpsb
fs
stos
mov
js
dec
lods
rcl
jne
test
call
cli
movsl
enter
add
pop
sbb
add
add
outsb
lahf
jl
sub
add
adc
or
test
dec
fsub
add
mov
sbb
imul
imul
xchg
push
adc
sbb
add
in
add
adc
out
add
pusha
mov
ljmp
mov
loope
roll
cld
mov
inc
imul
jmp
out
popf
ljmp
mov
aam
aas
jmp
adc
je
not
pop
lahf
not
ucomiss
sti
pushf
insb
imul
sub
xchg
jecxz
add
jb
and
push
cltd
mov
sbb
pop
je
cmp
stc
mov
or
push
or
add
cmc
decl
pop
cli
incl
add
add
stc
sbb
add
jno
pop
orb
out
mov
add
mov
orl
mov
popl
mov
icebp
jae
pop
dec
push
cmp
lret
pop
icebp
jae
dec
popa
mov
jno
jp
push
pop
stc
cmp
lock
mov
xchg
sbb
and
jo
inc
pop
push
lcall
test
inc
out
lret
pop
push
testl
test
pop
dec
in
push
jle
into
jmp
push
or
mov
jmp
loope
call
insb
sub
inc
pop
negl
loopne
add
xor
sti
mov
std
loope
out
notl
in
aad
adc
cli
cli
repnz
add
push
xchg
in
insb
mov
clc
imul
dec
rol
and
data16
xor
or
jno
jns
test
call
push
mov
push
adc
dec
shl
pop
xor
add
insl
in
mov
add
fwait
std
outsl
fstpl
iret
leave
pop
mov
sub
mov
add
enter
push
int3
push
fwait
test
in
add
add
add
dec
neg
add
insl
sti
movd
jge
loopne
sub
inc
icebp
xchg
jmp
insl
dec
andb
pop
popf
fs
add
fsubrp
add
jmp
adc
je
and
lahf
je
bound
jecxz
je
out
push
mov
adc
scas
icebp
add
cli
fs
test
int
cli
pusha
lcall
nop
adc
enter
mov
test
lcall
xchg
fs
je
out
push
ss
lcall
sti
xlat
or
pop
je
mov
xchg
add
jnp
dec
fidivrl
testb
or
add
pushl
add
add
ljmp
mov
psubq
shr
jae
push
sbb
jae
xchg
fdivr
pop
cmpb
into
test
cld
cmp
out
fs
push
mov
pop
inc
push
cmp
pshufw
jne
pop
mov
jle
cmp
mov
xor
jne
add
or
aas
fisttpll
inc
out
inc
or
idiv
xor
push
cld
sub
call
mov
loope
add
ja
stos
dec
jns
xlat
add
mov
aam
pop
outsb
sub
jmp
mov
insb
xchg
sbb
out
out
inc
in
je
mov
decl
jns
ret
lods
jnp
lret
shr
call
or
mov
pop
loopne
out
and
cld
push
xor
sti
pop
ds
xchg
adc
hlt
push
or
popa
adc
jg
rcr
sub
push
loope
in
cmpb
add
call
clc
ss
inc
pop
or
cmp
xor
dec
jge
or
hlt
mov
je
pop
fdivrs
outsb
out
add
add
sbb
enter
or
cwtl
mov
lret
stc
dec
imul
jo
dec
add
jmp
gs
and
dec
xchg
add
push
decb
aas
push
sub
in
je
jecxz
push
out
adc
xchg
add
call
movsb
or
add
jne
cli
mov
add
add
sbb
enter
mov
cmp
adc
pop
cmc
arpl
jg
in
xchg
rorb
data16
call
and
rcrb
mov
jmp
pop
lcall
xor
inc
out
cmp
decl
clc
xor
mov
pop
mov
add
fldl
lds
into
add
add
mov
add
loope
pop
ret
mov
xchg
add
add
lret
mov
xchg
add
inc
lcall
xchg
inc
loopne
call
mov
add
cmc
mov
loope
out
cmp
xchg
aas
leave
mov
test
ret
addb
add
add
push
inc
inc
sub
icebp
jmp
cli
shlb
inc
out
rorb
lahf
sbb
aam
jle
data16
xor
add
cmp
cmpsl
shll
or
stos
icebp
mov
pop
fdivrl
out
iret
pop
cmp
sbb
je
push
arpl
out
or
jno
cli
outsb
and
jg
add
testb
add
fs
add
sbb
addr16
fnstcw
add
add
mov
stos
cmc
xor
pop
rol
js
xor
je
jmp
inc
and
mov
in
fcoml
fcmovnbe
ret
call
lods
mov
add
add
lea
and
add
inc
fcoml
adc
fisttpll
les
outsl
call
add
mov
mov
push
insl
rol
push
jns
rcll
out
cmp
jb
cmp
into
dec
jae
add
mov
movsb
fsubrs
in
xchg
test
insb
mov
dec
jae
lret
out
mov
sub
imul
sbbb
jle
cmc
and
cli
pop
lret
pop
je
or
shlb
cmp
mov
aad
call
dec
mov
out
aas
shl
jns
or
cmp
sbb
roll
mov
loopne
test
dec
jle
mov
add
dec
in
inc
xchg
loopne
and
add
jne
fmul
pushl
or
loopne
adc
gs
incl
add
add
loop
add
cmc
test
lods
jmp
xchg
xor
stos
xor
jne
test
sub
ljmp
adc
outsb
adc
inc
out
incl
pop
addl
out
aas
out
loope
jnp
xchg
xlat
pop
in
hlt
out
insl
hlt
xchg
mov
shlb
lds
adc
mov
lds
mov
add
add
push
and
and
rclb
movb
push
cmp
cli
mov
repnz
and
mov
out
sub
and
sti
je
imul
inc
pop
xchg
fisubrs
loopne
sbb
xor
adc
mov
pop
test
pop
lahf
pop
jnp
popf
push
pop
enter
clc
fldl
sbb
dec
xchg
adc
xor
adc
inc
dec
pop
outsl
pop
ffreep
fs
xchg
push
or
aam
jnp
roll
xlat
cld
jle
bound
push
pop
hlt
or
sti
shlb
push
leave
xchg
fmuls
add
add
add
pushl
lods
imul
mov
jae
cs
cli
xor
ljmp
daa
sub
enter
divb
movsb
sbb
aam
jns
inc
int
xchg
jae
lret
mov
mov
and
test
mov
mov
orl
push
and
cmp
xchg
or
je
mov
out
cli
push
ficomps
add
pop
xlat
dec
je
jl
fadds
and
add
mov
into
add
imul
popa
addb
lds
jmp
mov
call
fsubrp
in
in
inc
orb
call
lock
or
in
push
xor
jmp
lds
inc
xlat
inc
push
mov
addb
dec
push
btr
fdivrp
and
push
insb
add
add
xor
ja
pop
out
sbb
jno
dec
pop
cli
sub
pop
je
lds
sti
pop
aas
test
enter
lods
sbb
xlat
jns
or
mov
xlat
lods
mov
std
jmp
in
and
add
add
aam
and
mov
xchg
mov
inc
xor
or
rcrb
fdivr
ds
mov
cli
cmp
enter
and
or
sbb
je
in
push
adc
out
cli
xchg
add
pop
jnp
shlb
xor
insb
xchg
add
add
outsl
leave
or
leave
pop
pop
enter
clc
in
orb
cmp
gs
orl
enter
ffreep
scas
enter
inc
mov
clc
push
fadd
fld1
pop
repz
insl
ss
fchs
mov
mov
fsub
dec
mov
dec
f2xm1
imul
sbb
inc
pushf
xchg
aas
dec
out
out
stos
daa
cmpsl
jl
daa
mov
inc
pop
enter
repz
cli
fiadds
add
add
test
jecxz
mov
mov
cmpsl
or
ljmp
and
dec
je
into
dec
stc
adc
xchg
xchg
cwtl
testb
inc
fmuls
jle
push
call
fs
mov
jmp
in
add
dec
mov
jnp
or
in
xchg
sbbb
add
add
adc
sbb
sbb
je
test
test
or
push
cli
jp
call
push
roll
movsl
addl
enter
push
mov
push
jns
mov
mov
mov
add
inc
stos
add
cmp
mov
sldt
add
mov
cmc
and
daa
xlat
inc
ds
or
test
add
pop
xchg
fsts
mov
jg
repnz
idivl
pop
jmp
filds
sarb
popa
cli
lock
cmpsl
call
push
sbbl
insl
pop
jmp
outsl
mov
gs
lds
jle
add
add
jns
cli
sarb
sarb
push
lret
loop
je
mull
test
mov
xor
dec
das
add
pop
cmp
add
int3
test
testb
sbb
ret
or
js,pn
adc
push
icebp
decl
inc
pop
leave
mov
in
jmp
push
popl
add
add
adc
xchg
popa
mov
out
call
add
repz
or
cli
fs
xchg
pop
and
imul
repz
xor
lock
dec
mov
imul
pushl
rol
es
popa
xchg
xchg
mov
mov
cmp
leave
in
mov
and
cmp
add
add
dec
fwait
xor
dec
test
sub
cmpsl
and
sahf
sub
xchg
and
test
mov
dec
inc
test
test
dec
pop
test
mov
dec
mov
stos
test
dec
gs
test
dec
pop
pushf
test
dec
jae
sub
add
inc
cli
add
inc
cli
sbb
add
add
inc
cli
aam
inc
cli
mov
or
add
inc
cli
or
inc
cli
int
inc
cli
scas
leave
inc
cli
push
mov
inc
cli
outsl
dec
inc
cli
jge
inc
cli
mov
inc
cli
xchg
mov
cli
sbb
xchg
aas
cli
xchg
xchg
cli
loopne
aas
cli
out
ja
cli
divl
cli
add
dec
aas
cli
dec
dec
aas
cli
add
cli
pop
xlat
ds
repnz
add
mov
cli
lods
inc
aas
cli
adc
cli
mov
sbb
loopne
pushl
jmp
jmp
in
jmp
or
call
in
pushl
pushl
out
fsubrp
call
lea
cmp
pushl
mov
dec
pop
add
in
incl
loopne
or
fcoml
dec
push
pusha
add
testl
adc
sti
adc
fnsave
add
shlb
or
add
adc
sbb
sub
sbb
sub
pop
sti
int3
scas
mov
scas
es
mov
aad
rorl
mov
sbb
or
sbb
mov
add
lods
or
lds
add
int3
push
mov
movsb
rol
fwait
sarl
stos
shrl
sahf
rcrl
popf
rorl
hlt
mov
cmpsb
inc
lcall
inc
push
sbb
es
push
sbb
inc
dec
sbb
inc
jp
es
mov
es
fidivrs
es
in
es
aas
pop
es
aas
aaa
es
pop
and
inc
pop
adc
inc
mov
es
xor
and
inc
test
movsl
inc
fistps
movsl
inc
lcall
inc
mov
movsl
inc
mov
movsl
inc
mov
mov
inc
iret
lods
movsl
inc
iret
add
cli
pop
inc
inc
cli
pop
push
inc
cli
lock
inc
cli
cmp
inc
cli
push
stos
inc
cli
insb
sbb
orl
fstpt
push
add
add
ds
dec
ds
jnp
or
leave
push
test
push
loopne
xchg
ret
push
mov
jns
call
adc
icebp
rsqrtps
dec
in
rorl
inc
dec
std
mov
stc
cmp
add
cmp
push
jnp
out
dec
call
jecxz
jmp
add
test
or
cli
push
push
test
fwait
rorb
sarl
inc
push
push
mov
push
cli
xor
mov
mov
pop
cmp
out
out
adc
cltd
scas
jae
cmpsl
jns
icebp
pop
dec
dec
jge
jg
fildll
cli
aaa
loop
out
add
add
mov
cli
pop
mov
sti
into
test
xor
test
xor
pop
in
mov
gs
and
in
mov
out
outsl
mov
add
gs
arpl
pop
inc
dec
add
jmp
mov
add
pop
mov
pop
mov
js
sti
daa
pop
jmp
push
ret
outsl
jle
push
std
inc
pop
lret
sar
leave
inc
outsl
enter
inc
leave
jle
or
pop
jmp
cmpsl
jl
mov
xchg
mov
out
add
fs
cli
xchg
sbb
mull
xchg
add
outsb
repz
addr16
je
ds
push
fcmovnbe
jg
mov
push
and
ret
xlat
mov
cs
mov
stos
fisttps
push
in
sub
or
add
mov
ljmp
and
push
loope
jae
lock
stc
in
dec
or
add
add
push
xor
cli
cmp
add
adc
add
pop
je
in
out
mov
add
idivl
add
icebp
aam
jle
add
rol
aas
xchg
mov
jmp
shl
jmp
push
fcomip
mov
inc
cmc
push
loopne
mov
loopne
mov
mov
cmc
mov
mov
pop
out
sbbl
mov
jp
or
icebp
add
add
lods
leave
cmpb
push
jg
pop
test
lret
add
data16
lret
add
addr16
mov
mov
je
inc
dec
call
sub
add
sub
out
movsl
rorl
mov
sti
and
jl
push
setns
movsl
repnz
scas
mov
jmp
lcall
add
add
add
jge
adc
add
mov
pusha
stc
aam
mov
pop
xor
pusha
xchg
insl
leave
inc
aad
mov
es
pop
pop
orl
data16
insl
test
mov
aad
imul
aam
push
leave
hlt
add
pop
pop
cmp
and
add
add
pop
call
into
sbb
stos
dec
xchg
add
mov
xchg
in
add
xor
cmpsl
call
jb
negl
rol
test
into
in
add
add
and
test
jne
loope
add
jmp
scas
dec
xchg
xchg
enter
mov
jb
sub
push
mov
sub
cmpsl
gs
cli
bound
push
mov
jle
outsb
xchg
cmpb
cltd
cmp
pushf
cmp
iret
xchg
push
outsl
cli
push
cltd
xchg
add
cmc
pushl
loop
fwait
shl
mov
add
adc
mov
inc
dec
cmc
lcall
mov
cmc
jns
push
cmpl
cmc
decl
je
adc
cmp
add
add
ja
lcall
add
dec
mov
mov
aaa
inc
repnz
inc
cmp
sub
pop
cltd
shl
xadd
or
adc
test
or
add
cld
add
fidivrl
or
pop
inc
sti
xor
lods
out
cmp
xchg
pusha
shl
into
jmp
jecxz
and
push
dec
or
add
add
jmp
add
pushl
mov
cli
mov
and
je
mov
outsb
mov
dec
cli
jo
xchg
aas
push
xchg
js
test
pusha
push
out
mov
dec
xchg
sbb
sbb
mov
and
js
jmp
clc
orb
add
push
fwait
dec
std
cmp
mov
pop
xlat
in
pop
cmp
push
insl
pop
mov
mov
cmp
out
xchg
mov
cli
icebp
out
sbb
adc
daa
jge
inc
pop
leave
nop
lock
jge
adc
mov
and
test
and
push
daa
cli
mov
pop
cmp
add
mov
mov
flds
push
add
jmp
loope
out
popf
ret
sbb
adc
out
loope
or
add
jmp
call
bnd
and
and
inc
or
add
jmp
lahf
aas
xchg
ljmp
les
cli
xchg
js
push
adc
rcll
lods
mov
mov
pusha
jcxz
lods
and
das
popf
cmp
cmp
jl
jne
mov
loop
aad
idiv
sarl
xor
dec
adc
jmp
mov
cmp
xor
xor
sarl
jge
inc
sub
out
into
je
add
add
mov
cmp
inc
int3
outsb
xor
int3
jae
add
aas
cmc
push
mov
inc
icebp
int3
cmc
call
lret
mov
jmp
lds
cmp
mov
mov
jno
mov
cld
lahf
mov
rcll
dec
cli
iret
and
adc
cli
clc
add
jae
mov
push
call
add
add
daa
push
inc
out
fimull
scas
fsubs
push
addr16
cmp
or
and
leave
and
jmp
cmpl
bnd
jmp
cli
jo
lret
lock
jne
add
cmpsl
and
jae
cmp
dec
pop
adc
inc
dec
add
repnz
pop
cmc
dec
movsl
cld
or
mov
sbb
iret
cwtl
test
jl
lock
cmp
xchg
push
or
outsb
inc
mov
mov
pop
arpl
and
mov
add
mov
out
mov
pop
or
and
outsl
int
pop
cli
add
add
dec
jns
jmp
sti
push
sti
dec
mov
cli
jle
out
sbb
push
test
dec
bound
cli
inc
test
mov
fldenv
pop
cltd
mov
cmp
psubq
add
push
insb
xchg
mov
and
jmp
sub
call
mov
orl
stc
jmp
add
test
or
push
jns
enter
add
add
rorb
add
clc
pop
leave
pop
push
leave
mov
cli
xchg
sbb
xchg
test
sub
insl
sbb
add
inc
ja
ret
out
ficoml
mov
mov
fimuls
out
dec
adc
out
mov
mov
pop
mov
mov
enter
shl
mov
cli
push
inc
fdivrl
xchg
andl
cmpl
push
rolb
je
adc
pop
dec
jmp
iret
adc
xchg
test
pop
pop
fisttps
stos
movsb
int
pop
dec
out
mov
push
orb
incb
lock
dec
lcall
sub
inc
sbb
incb
jmp
jp
out
repnz
jmp
sub
jg
push
jae
dec
cmp
or
jmp
mov
add
jmp
add
and
inc
jecxz
xor
and
adc
das
int3
sbb
clc
sub
iret
les
pop
lock
jg
xor
lods
add
mov
ss
enter
imul
mov
pop
xlat
mov
pop
mov
leave
cld
pop
mov
sti
cmc
inc
call
negl
je
aad
call
ljmp
loopne
and
pop
sbb
cmp
mov
cmpl
pop
sti
scas
and
mov
inc
in
xchg
in
xorl
add
add
lods
or
sub
xorl
mov
sub
xor
fisubrs
stc
inc
movsb
mov
ds
add
movsb
sti
inc
cmp
sub
xor
sbb
adcb
aad
bound
mov
shlb
add
mov
cli
jmp
lret
pop
add
add
add
and
call
pop
cmp
test
jnp
and
add
call
addl
add
in
sti
incl
inc
decl
mov
adcl
adc
movsl
xchg
jg
call
loope
mov
inc
jae
jne
add
adc
add
add
cmc
test
adc
add
sbb
adc
out
cmp
test
xchg
cwtl
sbb
je
movsl
push
gs
add
mov
adc
jmp
test
pop
js
or
adc
cs
mov
insb
lods
cs
dec
sbb
and
dec
incl
add
add
inc
push
pop
hlt
inc
inc
daa
sbb
inc
das
add
and
add
je
adc
je
cmpsb
mov
inc
and
xor
fsubrl
jmp
xor
xor
xor
pop
loop
call
lea
xor
adc
sbb
out
xor
arpl
sti
pop
dec
ja
mov
add
add
xor
cmp
call
paddusb
inc
adc
push
adc
call
inc
add
call
add
add
faddl
imul
jmp
out
cmp
jmp
outsl
jo
icebp
icebp
inc
clc
in
jne
test
or
add
roll
or
add
gs
add
jmp
fs
imul
jmp
add
lea
push
sbb
ja
jbe
and
add
sub
shl
fadds
jmp
insl
sub
ret
jp
call
push
test
push
mov
aad
hlt
fadds
inc
add
sub
inc
data16
cmc
jmp
ja
and
jp
mov
arpl
jle
xchg
cmp
xchg
mov
pop
out
cmc
mov
cmpsb
cli
push
decl
subl
cmc
push
add
xor
arpl
lea
push
cli
ds
pop
leave
in
mov
outsb
jp
jmp
xchg
subl
cmc
push
fldcw
lea
push
loop
jg
cmc
test
std
xchg
rolb
add
out
je,pt
dec
ds
outsb
lahf
lcall
sbb
mov
cmp
rcrb
daa
hlt
mov
pop
divl
shll
incb
aaa
mov
mov
shlb
addb
iret
mov
popa
test
push
mov
xor
test
jle
and
xlat
dec
sub
daa
test
pop
push
push
lea
rorl
mov
jmp
pushf
into
dec
sub
lods
pop
in
jmp
sbbl
adc
add
jae
arpl
adc
pop
xor
adc
fnstcw
sub
or
mov
xchg
cmp
or
ret
addb
mov
out
jmp
add
mov
lods
dec
fldl
mov
es
dec
add
add
adc
and
mov
jmp
addr16
cs
test
jo
out
sub
cli
xchg
movsb
jg
sbb
or
pusha
cltd
sbb
and
xchg
cmp
fidivrs
hlt
jno
jg
in
sbb
cmp
add
in
ljmp
out
pop
ret
add
xor
pop
cmp
and
cli
xchg
test
mov
cli
pop
adc
mov
add
cmp
fildl
movsb
xchg
cs
movsb
dec
add
pop
cli
je
cmp
add
add
loop
scas
pop
add
jns
pop
hlt
sbb
orl
jl
cmp
stos
mov
cmp
shlb
add
inc
idivl
dec
mov
fucomip
cmc
jmp
jp
or
inc
fimuls
dec
inc
fiadds
mov
shrl
inc
and
xchg
sbb
add
add
out
lahf
mov
cmp
nop
xchg
stc
lock
aaa
lods
out
mov
lahf
mov
add
es
sbb
cli
cmp
mov
inc
inc
or
sbb
pop
fbstp
ja
lahf
int3
xor
inc
mov
jmp
mov
in
push
pop
das
push
xchg
add
add
dec
jp
in
jmp
add
jg
push
out
roll
add
stos
adc
call
pop
or
dec
lock
lea
inc
mov
inc
pop
cmpsl
sbb
in
cmp
jg
add
add
inc
arpl
xor
push
ret
sbb
and
out
das
incl
add
add
test
dec
out
jmp
sub
ja
dec
dec
push
enter
ljmp
pop
cmpb
in
jno
pop
call
stc
xlat
in
mov
mov
xor
cli
mov
sub
je
or
orb
loop
jmp
mov
pop
xchg
sbb
push
mov
cli
jo
dec
jle
fdivr
orl
add
sahf
std
mov
mov
push
xchg
mov
inc
lea
hlt
add
ds
inc
ss
add
xchg
pop
test
mov
hlt
std
int3
xchg
es
sbb
mov
es
sbb
cmpl
add
fidivrl
dec
sub
add
add
test
incl
xor
push
pop
inc
add
das
xorb
xchg
sub
rclb
push
jl
cmp
cli
jae
jp
jg
push
jae
mov
jnp
rcrl
add
inc
mov
decb
add
add
xlat
mov
push
jbe
stos
fdivr
jmp
sbb
scas
shr
xchg
and
inc
ret
push
mov
pop
xor
cli
decb
pop
test
jmp
or
xchg
in
xor
pop
mov
into
out
xchg
xor
in
xchg
stos
pop
jo
sub
popa
rorb
add
add
mov
add
sbbb
imul
loope
shrl
or
lret
das
imul
outsl
enter
out
mov
sub
jne
xor
pop
xor
xchg
add
fisubs
mov
sub
or
mov
or
fidivl
inc
xor
xor
cmpsb
incl
add
add
sbb
or
add
push
sub
addr16
imul
cli
xchg
jmp
bound
in
mov
inc
jmp
in
clc
out
pop
add
call
adc
add
cmp
outsb
in
ret
or
aaa
std
cs
mov
sbb
test
popf
movb
adc
jl
jmp
inc
xchg
and
hlt
int3
idivb
jmp
sub
addl
call
add
add
add
and
loop
movsl
lock
mov
les
xchg
mov
dec
or
cmp
mov
jmp
xorb
dec
lock
decl
add
pop
jno
cmc
mov
pop
ss
add
ss
push
mov
add
pop
add
rcl
incl
pop
add
out
pop
lea
cs
mov
rcll
cli
cs
cmp
mov
pop
cltd
outsl
pusha
subb
repz
mov
mov
sub
decl
int
cli
adc
xchg
lret
insb
jmp
out
lods
scas
out
in
or
loopne
inc
fsubrs
mov
bound
ror
jg
aaa
xor
cli
pop
add
mov
nop
arpl
and
aam
adc
lea
fs
repz
inc
push
lea
jb
mov
add
mov
dec
and
mov
mov
sbb
or
faddl
jae
js
sub
in
push
xor
lds
mov
std
and
cmp
sti
mov
xor
xor
enter
test
adc
xor
inc
inc
mov
sbb
add
outsl
xbegin
stos
hlt
shlb
sub
dec
insb
popa
cmp
out
rcrl
cli
rorl
movsb
stc
mov
xchg
in
test
adc
and
or
ss
add
fwait
sub
cmp
sub
cmp
sub
cmp
les
in
xlat
xchg
pop
mov
and
dec
cli
movsb
mov
push
mov
cli
ss
pop
mov
add
and
fwait
or
add
into
add
dec
xor
dec
jne
xchg
mov
test
add
and
sbb
lock
or
call
add
lock
ret
or
add
popf
imul
sbb
call
rorb
ds
ljmp
add
add
add
lea
dec
push
jp
test
test
sahf
dec
fmuls
ret
mov
mov
adc
cli
arpl
cli
test
ljmp
push
out
xor
cli
mov
mov
pop
xor
sub
fsubrl
adc
aas
mov
mov
sub
push
sub
add
add
xchg
decl
decl
cmp
mov
sub
sub
sbb
or
sub
add
sub
loope
loop
call
add
fnsave
adc
push
or
cmpsb
enter
or
sub
loopne
jmp
add
shrl
xor
add
add
bnd
xchg
sub
or
sub
push
xor
mov
sub
dec
pop
out
sub
sbbb
out
std
jecxz
xchg
leave
cltd
add
xor
push
imul
sbb
in
inc
popa
dec
inc
aad
sbb
jmp
hlt
call
add
adc
cs
dec
mov
add
sub
jae
das
fisubrs
mov
xchg
and
or
call
cli
pushf
and
cli
cmp
sarl
sub
xchg
aad
cmpsb
addr16
setb
xchg
fnstsw
inc
jae
imul
cld
adc
cli
jbe
mov
jge
sbb
push
roll
inc
xor
inc
adc
sbb
lret
xor
mov
inc
outsb
fisubrs
dec
loop
test
in
add
cmp
cmc
jne
clc
out
mov
jns
mov
pop
repnz
add
jnp
mov
push
andb
jno
jle
or
or
sbb
add
cmp
inc
clc
sbb
aas
add
mov
aas
rolb
test
cmp
popa
push
subl
out
fcoml
int
ret
std
out
aam
not
pop
jmp
mov
loop
xchg
fcomip
sbbl
push
in
in
notrack
jle
leave
popl
ret
cld
out
lods
sub
adc
inc
add
or
ss
mov
jl
xorl
add
sub
test
sub
dec
add
jg
sbb
mov
and
or
lcall
out
jp
out
jmp
add
in
add
test
test
mov
cmpsl
jle
mov
mov
adc
sub
fnstcw
out
jmp
mov
mov
sub
push
adc
inc
test
lret
or
push
fdivrl
imul
and
ret
call
mov
lods
call
sub
arpl
fnstsw
cmp
add
add
mov
stc
pop
mov
out
imul
sbb
out
xchg
sbbb
mov
rorb
push
xchg
add
cld
cmp
aas
jmp
jl
sbb
cmp
cld
test
out
mov
cli
push
mov
cli
xor
cli
dec
into
iret
cltd
jl
in
push
shr
rorl
xor
or
sub
iret
insb
std
popl
pop
nop
aas
add
roll
aas
imul
decl
add
add
dec
push
push
xchg
orl
push
fnstsw
cmc
incl
ja
push
inc
lds
push
sbb
icebp
clc
cmp
pop
dec
call
jmp
cmp
cltd
ljmpw
push
add
add
gs
call
iret
xchg
je
std
testl
repnz
xchg
adc
cmpsb
cmp
pop
sti
xchg
scas
or
jg
xchg
push
jge
jmp
cs
jo
cli
pop
pop
es
inc
jb
mov
ret
xchg
rclb
or
dec
sbb
jne
sbb
flds
out
jle
ret
sbb
sub
test
sub
cmc
mov
orb
sub
jg
add
and
ljmp
xchg
sbb
test
and
mov
dec
adc
ss
out
arpl
call
repz
pushl
rorb
mov
mov
add
fcompl
add
xchg
add
add
shl
data16
enter
xor
incl
add
add
add
sub
aam
aaa
sub
jle
push
pop
rcrb
test
fs
call
dec
mov
and
push
jge
int
push
mov
repz
popa
sti
pop
outsl
repz
shl
mov
out
bound
mov
in
fldcw
subl
cmpsl
xchg
jle
roll
add
add
sti
mov
mov
mov
add
mov
mov
clc
xchg
or
jmp
mov
mov
lret
int3
mov
aam
repz
jmp
push
or
cli
bound
stc
mov
out
inc
sbb
add
jl
loopne
cmp
jl
pusha
loopne
mov
inc
pop
pop
xchg
adc
insb
shl
mov
xchg
clc
jmp
push
mov
push
add
sbb
enter
cmp
inc
dec
repnz
xor
inc
dec
clc
incb
dec
int3
add
add
loopne
je
jp
lea
fcoms
xor
cmc
jmp
lahf
enter
outsl
punpckhbw
add
xchg
cli
test
cmpsl
dec
mov
cwtl
or
pop
bound
std
aad
mov
dec
jle
cs
pushf
pop
popl
loopne
scas
mov
or
jmp
rcpps
dec
xor
clc
addr16
pop
incb
jb
sub
loope
adc
daa
sbb
add
lahf
inc
inc
push
std
aaa
mov
add
stos
bound
jge
mov
cltd
add
adc
lea
cmp
or
mov
clc
mov
mov
pop
cmp
popa
inc
mov
rcl
adc
je
hlt
test
arpl
jnp
in
scas
mov
sub
add
add
add
add
loop
into
ficomps
dec
sub
call
mov
sub
mov
ljmp
aas
sbb
imul
inc
push
sbb
pop
jnp
inc
aad
jg
rcrl
xchg
xchg
xor
jmp
and
add
bound
lea
ret
add
cli
cli
adc
je
dec
or
add
mov
xchg
jmp
mov
movsl
jle
aam
or
cli
jmp
in
je
or
pop
push
xchg
notl
push
cvtps2pi
into
mov
jle
inc
or
mov
add
subb
in
incb
fadds
jge
pop
mov
add
add
sbb
jns
inc
adc
add
add
les
add
cmc
jae
push
cmc
adc
xchg
cli
cli
inc
mov
jmp
in
dec
push
pop
adc
jg
add
aas
push
sub
mov
adc
jp
add
or
jg
cmc
adc
out
inc
or
popf
and
pop
out
mov
dec
inc
sbbb
pop
fs
sbb
sti
add
xchg
inc
push
aas
jb
imull
xchg
cmp
aam
cli
pop
out
xchg
xchg
rclb
sbb
iret
aaa
out
and
test
test
in
mov
jb
mov
cli
xor
aas
out
aad
jmp
sub
push
sub
fstpt
add
add
adcl
leave
or
hlt
add
sbb
arpl
leave
les
bound
out
jmp
xchg
clc
add
stc
sub
adc
sti
xor
pop
xchg
push
fs
flds
sbb
lock
sbb
inc
in
xchg
out
pop
lds
add
add
in
adc
mov
mov
hlt
outsl
enter
xor
cli
jge
in
add
mov
out
lea
movsb
add
subb
add
cmp
add
and
jae
and
notb
cmp
shrb
enter
or
push
enter
jle
loope
dec
push
sbb
sub
cwtl
inc
cmpsb
push
repnz
jmp
idivl
rcrl
imul
jo
xchg
orb
dec
pop
xor
je
pop
inc
dec
push
push
push
xchg
out
cmc
test
imul
jnp
cmc
jne
scas
cli
jg
add
jl
out
cmc
mov
addb
inc
testb
cmpb
add
xchg
lock
adcl
cli
jne
out
insl
add
cmp
xchg
add
call
aad
sbb
or
jne
lock
movsb
pop
dec
push
push
xor
xor
out
cmc
lcall
icebp
loop
jl
cmc
idiv
add
test
adc
inc
out
adc
out
mov
cli
fcoms
push
mov
xlat
jg
repz
cmpsb
xchg
cltd
push
or
insl
mov
shl
pop
sbb
neg
mov
icebp
cmpsb
sbb
add
sbb
enter
inc
out
repz
mov
pop
daa
out
stos
sbb
or
xchg
lret
push
adc
or
ljmp
add
ljmp
dec
out
adc
cwtd
in
aad
xor
mov
ljmp
roll
add
rolb
imul
test
sbb
rorb
inc
stos
adc
add
or
or
mov
pop
clc
dec
mov
sbb
cmp
dec
mov
cmp
dec
shlb
or
rorb
sbb
jg
les
adc
sbb
nop
jmp
add
jmp
add
add
or
add
cmp
int
pop
inc
cmp
std
xchg
sqrtps
test
and
jae
jbe
repnz
repnz
xchg
mov
jle
pushf
and
push
std
or
pop
adc
sub
sub
mov
cmp
jnp
lea
shl
ficoml
std
adcl
add
sti
movsb
ret
idiv
out
scas
and
int3
fmuls
lods
ds
sti
mov
adc
dec
push
fisttpll
push
mov
inc
push
xchg
loop
dec
out
cmc
cmp
cs
dec
push
dec
push
push
dec
call
dec
call
inc
incl
mov
ds
sub
decl
add
add
add
js
add
xor
aas
cli
jae
stos
xor
ljmp
leave
mov
push
add
loope
add
cli
mul
push
jp
mov
mov
jg
aas
out
mov
mov
sbb
ficompl
adc
or
out
lock
push
fcomps
lods
sbb
das
mov
inc
rcl
mov
xchg
aas
dec
adc
jmp
gs
cmpsl
xchg
and
arpl
jg
or
xchg
and
jno
and
inc
mov
mov
jnp
inc
adc
push
jg
shll
xor
mov
pop
sti
sub
ret
sbb
adc
in
sbb
push
or
std
xchg
rclb
fists
aaa
rol
call
add
add
movsb
mov
rolb
stos
icebp
add
jecxz
aas
movsb
fucomip
call
push
sti
aas
repz
call
or
jmp
push
fisttpl
ret
push
pop
sti
pop
repz
call
push
repz
rol
inc
or
sub
idivb
inc
idiv
cmc
data16
sahf
stc
or
sub
xor
stc
or
std
sub
out
pop
or
mov
sub
push
stc
aad
shl
jno
cli
dec
pusha
loop
push
loop
stc
ds
mov
fwait
scas
out
push
cli
insb
pusha
loop
mov
push
jge
cltd
cmp
lds
or
sahf
pop
mov
gs
add
inc
push
ltr
lock
push
mov
loop
lock
cmc
xorl
aaa
or
and
mov
test
add
adc
adc
decl
lret
dec
cmpsl
loop
lock
inc
cmc
ljmp
push
ret
loop
sub
lea
inc
push
and
ds
push
push
call
add
add
add
and
xor
dec
push
dec
push
xchg
int
xchg
lock
add
sub
mov
dec
nop
mov
xchg
xchg
cld
cli
shrb
aas
out
mov
dec
mov
outsb
xchg
pop
call
aad
jnp
scas
dec
nop
add
cld
movsl
sbb
or
jmp
inc
jae
push
out
mov
add
repz
adc
cmc
fidivl
mov
dec
cmpsb
jg
sbb
gs
test
lcall
jmp
push
mov
js
repnz
daa
sbb
adc
int
mov
in
int3
mov
push
cli
cltd
jbe
hlt
mov
xor
cmp
out
imul
add
add
mov
sti
mul
ret
call
sti
std
lock
add
add
jns
scas
mov
add
dec
mov
pop
push
adc
outsb
call
cmpl
ret
test
test
cwtl
or
or
fcoml
add
jae
mov
push
test
jae
fstpt
jmp
jl
adc
xor
pusha
fidivrs
shll
push
stc
pop
out
push
stc
pop
adc
adc
adc
insb
movsb
jbe
jb
or
cmp
ljmp
popf
std
xor
fimuls
test
aad
adc
movsb
add
sub
mov
sbb
add
push
and
stc
add
subl
push
adc
stc
pop
lea
or
push
dec
push
loope
test
and
sbb
adc
pop
stc
inc
cmp
stc
lcall
push
sub
js
vpackuswb
cmp
test
dec
cmpb
loope
decl
or
inc
dec
dec
lea
repnz
add
add
mov
jne
sbb
je
out
jge
js
fwait
add
ljmp
daa
ljmp
cmpsl
ljmp
leavew
xor
xchg
cmc
stos
mov
mov
unpcklps
std
mov
jmp
adc
add
out
mov
bound
imul
jno
addr16
std
incl
add
add
testl
cmp
insb
cld
mov
xchg
ja
stos
std
addr16
jne
cwtl
mov
fs
nop
decb
adc
test
push
sti
repnz
rorl
pop
add
pand
mov
mov
add
cmc
call
adc
sbbl
adc
add
ret
xor
out
call
cwtl
int
data16
mov
dec
in
arpl
sar
push
std
add
in
mov
inc
add
add
je
test
pop
xor
push
mov
test
fnstenv
jno
or
jge
jle
mov
movsb
ja
jb
sub
add
orl
mov
outsl
cli
adc
movsb
in
push
adc
or
pop
cli
je
dec
mov
push
add
cmp
add
mov
mov
faddl
add
push
ret
stc
mov
mov
inc
dec
call
or
jp
xchg
push
and
sbb
mov
outsb
test
fisubl
sti
sbb
pushl
adc
fwait
aad
test
sar
ds
cli
jmp
push
es
jno
inc
xchg
and
add
add
xchg
add
jbe
idiv
gs
mov
dec
call
inc
mov
call
mov
adc
add
add
sub
mov
addr16
cmp
icebp
div
stos
std
push
cmp
adc
jmp
mov
or
pop
and
js
data16
pop
std
push
jmp
xchg
out
ds
mov
bound
std
jmp
rcl
pushf
loop
jae
ja
pop
adc
or
add
cld
xchg
sbb
aas
jge
cli
jge
lods
mov
iret
add
cld
inc
fadds
imul
mov
cmp
cwtl
test
popf
jmp
push
cld
mov
fimuls
or
jbe
jp
xchg
cld
fs
out
out
movsb
mov
or
or
inc
pop
inc
fistpl
dec
rorl
fs
push
xchg
ret
lods
mov
out
pop
add
add
mov
sahf
fdivr
push
clc
mov
out
out
mov
or
std
cmpsl
popa
add
cmpsb
call
adc
stc
jmp
cmpsb
stc
and
je
mov
stc
fmul
or
push
mov
mov
in
xor
add
mov
adc
jmp
mov
stc
jne
in
fnsave
jb,pt
stc
aaa
fistl
rcrb
push
stos
sbb
test
aas
nop
repz
jb
pop
shr
mov
addr16
je
sti
or
idiv
add
and
dec
push
out
inc
loop
add
shlb
inc
into
mov
push
es
js
sub
std
call
push
add
or
sbb
push
popf
sub
out
cli
mov
sub
xorl
and
inc
cmp
inc
dec
inc
cmp
inc
movsb
mov
mov
mov
call
sub
or
out
jnp
clc
jmp
xchg
xchg
incb
js
xlat
push
nop
jbe
orl
shlb
dec
add
pop
popa
outsb
cmpsl
fldenv
outsb
cmpsl
fldcw
dec
push
mov
dec
push
in
dec
call
add
mov
pop
lea
adc
add
xorb
ret
sbb
push
fldcw
mov
mov
rorl
cli
cmp
sahf
mov
inc
push
cli
jb
loopne
movzwl
cli
adc
add
ret
out
mov
sbb
mov
clc
push
sbb
jnp
or
fstpl
add
pop
xchg
in
sub
cmc
mov
icebp
cld
fidivrl
stc
inc
or
outsl
nop
jbe
and
mov
push
lret
out
orb
mov
clc
cmp
mov
fcomip
push
jge
leave
ds
clc
flds
cmp
xorb
test
adc
inc
out
mov
add
in
data16
pop
and
loopne
hlt
cmc
and
mov
ljmp
jae
cld
ret
or
in
inc
or
arpl
test
fdivrp
test
in
sbbb
jne
call
push
inc
stc
hlt
push
add
add
adc
movsl
nop
jge
pop
add
in
data16
pmuludq
and
mov
psubsb
push
cli
stc
orl
add
jp
push
sbb
sub
jmp
enter
lret
jns
inc
data16
jne
leave
bnd
push
add
sarl
dec
out
call
xor
aad
add
add
add
adc
mov
jmp
sarl
mov
test
clc
pop
add
xor
leave
bnd
aam
jmp
pushf
add
or
insl
or
adc
out
sbb
cmc
lods
mov
cmpxchg
les
jno
out
mov
cli
mov
pop
std
cli
rcr
lock
out
aas
pop
cmp
aas
push
pop
ja
jmp
and
stc
out
inc
jae
mov
cmc
mov
aaa
ja
outsb
mov
lahf
xchg
xor
mov
out
shrl
jae
jo
or
cmc
movsl
jb
pop
fwait
xchg
aas
int
stos
gs
out
jg
add
add
les
ret
inc
cmp
mov
dec
dec
add
sbb
add
jmp
mov
lock
out
push
jbe
add
test
cmp
hlt
mov
cmp
lods
add
popa
stc
outsb
adc
jecxz
flds
lcall
xor
lret
sbb
jp
adc
jmp
cli
fists
inc
push
add
xchg
inc
push
jb
pop
sub
fisubrl
jbe
cmc
jecxz
hlt
xor
arpl
aas
push
adc
cmpsl
mov
sbb
jmp
cmp
jle
das
push
sub
mov
mov
js
jo
lock
jo
loope
dec
clc
rorl
in
jb
adcl
das
in
rcrb
in
inc
adc
push
lock
adc
xor
jns
mov
insb
or
mov
add
sbb
divb
dec
push
pop
push
leave
or
pop
sbb
inc
jnp
je
mov
add
inc
add
or
mov
add
pushf
cmp
sbb
cmpsl
and
lea
fwait
jo
dec
add
insl
xchg
inc
mov
fwait
nop
sbb
or
add
fsubl
xchg
std
inc
add
cmp
movsb
rcr
add
pop
mov
adc
jge
frstor
add
pop
mov
adc
add
add
cmp
sahf
nop
ficompl
popf
xlat
mov
xchg
adc
cmp
sahf
shl
sbb
xchg
push
inc
out
inc
in
fistpl
pushf
aaa
inc
inc
add
pop
inc
out
fs
add
mov
push
je
inc
out
negl
cmpsl
add
inc
inc
out
jae
cmpsl
add
add
mov
add
cmpsl
add
mov
xorb
cmpsl
add
mov
pop
aam
inc
out
and
cmpsl
add
lret
inc
out
aaa
sbb
add
repz
dec
pop
daa
add
add
inc
out
daa
pop
cmpsl
add
inc
inc
out
iret
pop
daa
add
and
adc
in
xor
add
mov
fadds
dec
and
cmp
test
stos
add
dec
in
jmp
jmp
jo
movsb
add
mov
cmp
sub
mov
jmp
dec
in
jmp
jmp
mov
and
lahf
mov
inc
add
jecxz
jmp
in
rolb
lahf
dec
iret
inc
add
mov
fwait
lock
mov
sub
test
adc
add
mov
popf
daa
fiadds
test
adc
sub
mov
pop
inc
fiadds
test
adc
pop
fwait
push
sub
mov
insl
arpl
inc
push
test
adc
pop
inc
add
lret
add
cmpsl
push
adc
push
or
pop
mov
movsb
adc
pushf
std
pushf
push
ds
adc
jns
loop
frstor
xchg
push
add
push
inc
out
fucom
movsb
fsubl
or
fcompl
call
and
push
test
test
inc
out
xor
xor
cmpsl
fcoml
jge
add
mov
dec
push
sbb
push
test
in
out
shrb
dec
inc
add
cmp
and
cld
rorb
ret
xchg
daa
add
mov
sahf
mov
inc
out
cmpsl
in
add
lahf
sub
mov
in
aam
xchg
mov
in
aam
inc
inc
out
adc
add
in
mov
cld
hlt
sti
leave
inc
out
je
sub
xor
daa
pop
adc
out
mov
jle
push
lret
lds
add
add
jnp
sbb
push
or
daa
add
push
incl
mov
icebp
inc
or
xor
adc
sub
or
loop
mov
jecxz
stc
cld
clc
aas
jmp
inc
pop
cli
and
add
add
pop
aad
add
incl
ljmp
movsl
sti
subb
inc
mov
push
push
jno
mov
mov
push
shlb
mov
in
and
add
add
push
cmp
movl
mov
cmc
incl
inc
cld
lea
push
pushl
test
jne
and
adc
pop
addl
xchg
idiv
outsb
jl
in
pop
push
cmp
je
pop
or
add
call
test
push
push
jl
cld
out
jl
in
inc
push
incb
add
add
shlb
in
int3
push
out
jns
push
fldt
cmp
clc
or
mov
insl
dec
jge
lock
stc
rcl
cmovo
pop
mov
call
sub
mov
repz
sti
jo
scas
rorb
add
fmull
mov
ja
testl
cmp
and
add
add
jne
push
test
in
test
outsl
ds
sahf
cmpl
xchg
add
clc
jae
call
shll
jmp
in
out
cmp
adc
push
cmp
iret
push
scas
shll
fisttpl
data16
jne
test
add
cld
push
jno
popa
push
lea
add
add
call
call
icebp
nop
add
add
jbe
xor
and
pcmpgtb
out
mov
add
cmp
sub
ret
pop
stos
xchg
insb
push
inc
jmp
sarb
ss
jmp
test
jno
dec
int3
in
add
mov
add
add
daa
lret
jno
inc
add
sbb
pop
ljmp
jg
jmp
loopne
mov
popf
pop
ljmp
dec
adc
aad
add
aaa
and
loopne
fildl
loope
repnz
xorl
jle
sbb
js
pop
mov
ret
xchg
pop
mov
les
push
add
pop
clc
pop
or
mov
cmp
push
push
test
decb
popl
add
mov
rorb
roll
mov
insl
cld
pop
push
divl
out
or
notl
or
notl
andb
jae
fcmovnb
xor
pop
mov
inc
jge
mov
orl
cmp
out
imul
data16
add
fcompl
push
cld
fwait
das
rorb
push
test
pop
loope
in
std
mov
clc
stc
rorb
out
stc
gs
jo
cmp
inc
repnz
cmp
cmp
aad
daa
fldl
sarb
repz
cmp
or
std
incl
add
add
mov
dec
jecxz
stc
xor
or
cmpsl
lret
popa
sti
out
xlat
fs
jecxz
lret
out
or
ret
xor
out
or
xchg
imul
jns
jg
jo
cmc
push
adc
sub
daa
add
les
push
adc
xor
pop
outsl
jecxz
and
aas
mov
inc
out
dec
leave
sti
in
subl
add
add
dec
dec
fs
sti
ds
and
fistpl
outsl
jecxz
hlt
pminub
push
pushf
rcl
xchg
js
add
popa
jno
mov
or
xor
sbb
cmp
adc
and
add
jo
add
in
push
je
mov
mov
add
sbbl
add
cmpsb
adc
jae
mov
push
add
mov
sarl
jl
cmp
enter
add
jl
xor
pop
jle
mov
and
repnz
add
insb
xor
push
outsl
cmp
push
imul
inc
add
dec
mov
cmp
or
mov
jecxz
clc
sub
pushl
add
add
push
dec
call
pop
dec
clc
push
dec
dec
hlt
push
in
dec
push
pop
mov
sub
cmpsl
pop
clc
jbe
bound
mov
jle
mov
jnp
sbbb
xor
jne
insl
or
call
inc
int
or
fwait
out
push
out
jbe
dec
cwtl
in
stc
mov
mov
dec
movl
add
add
pop
popf
push
push
into
mov
mov
mov
lcall
cmp
outsb
pop
mov
sbb
sub
sahf
jle
iret
mov
sbb
and
out
xor
repnz
pop
jne
cmpsb
into
rorb
repnz
jmp
pop
leave
pop
sahf
mov
outsb
push
into
and
cmpsl
or
mov
xchg
add
out
int3
dec
es
push
or
xor
adc
ret
loope
adc
insb
ja
xor
ret
shrl
inc
and
mov
sub
loopne
lds
sbb
ja
xchg
insl
ret
jl
subl
orb
pushf
idiv
insb
ret
push
pushf
idiv
pop
fwait
push
xchg
test
xchg
les
dec
push
lds
inc
adc
loopne
imul
dec
add
bound
into
shll
aam
bound
fadd
out
rcrl
fs
rcll
jae
bound
rol
jns
rep
or
dec
aaa
mov
lret
push
das
mov
dec
dec
jp
aaa
das
mov
pop
pop
adc
dec
dec
dec
sarb
or
add
add
aad
lret
and
xchg
dec
sarb
mov
ss
push
shlb
out
add
mov
fwait
ljmp
or
cmpsb
sarb
add
add
les
lods
in
aam
call
fs
test
cmpsl
cmp
inc
ds
jge
lcall
inc
rcrl
ds
test
push
sbbl
add
adc
adc
pushl
push
push
cmp
or
mov
test
data16
add
je
std
out
adc
out
sub
mov
add
inc
cmp
cmc
pusha
cs
call
push
stc
xchg
daa
jno
jae
add
add
mov
shl
xor
ljmp
push
dec
stc
cli
test
inc
out
mov
stc
clc
and
ret
cmp
loopnew
ljmp
movsb
lods
ljmp
pop
mov
test
imul
jmp
lcall
stos
add
add
mov
jle
and
add
add
mov
daa
add
dec
jae
es
mov
movsb
lahf
shl
add
jmp
xor
ficomps
xchg
fidivrs
clc
and
cmpsl
add
inc
pop
xor
jg
loopne
in
cwtl
sub
jmp
out
mov
in
lock
sbb
jnp
in
fidivs
add
fiaddl
xchg
movsb
test
scas
xor
pop
add
ljmp
jmp
xchg
mov
mov
xchg
fistl
shlb
shlb
inc
push
dec
mov
nop
jl
push
push
in
neg
dec
fcmovnb
lods
inc
je
fistl
xor
test
ret
out
in
add
fiaddl
pop
movsb
add
add
xor
sub
xor
cmpsb
push
inc
clc
cmp
cmp
mov
das
or
inc
pop
sub
add
add
add
dec
clc
movlps
out
cmp
pop
xchg
add
inc
hlt
push
lds
push
out
xor
out
or
test
loopne
xchg
add
mov
add
add
test
lea
idiv
iret
call
push
sub
jge
and
test
push
jbe
pop
imul
in
pop
jne
ljmp
ja
ja
in
aaa
mov
add
loopne
mov
out
js
push
call
bound
jg
pop
sub
push
mov
add
cli
jg
mov
hlt
in
xchg
push
aas
hlt
sub
ret
add
adc
out
adc
lock
repnz
adc
sub
jae
mov
out
jb
out
pop
mov
fsub
out
out
fidivrs
jmp
pop
fimuls
pop
scas
imul
out
push
jmp
cmp
inc
out
daa
jo
mov
ficoml
je
je
dec
fidivrs
ljmp
sub
pop
xorb
fidivl
ljmp
movsb
ljmp
mov
out
stc
add
ss
xchg
mov
jg
mov
jnp
roll
add
dec
adc
sub
and
lock
dec
push
insb
and
dec
sbb
xor
lods
rorl
jecxz
fcoml
ret
es
fmuls
inc
pop
add
icebp
push
dec
xor
pop
vpsubw
xchg
sub
xchg
jae
fcmovnb
bound
add
out
jle
mov
inc
add
add
addl
stc
mov
mov
add
in
imul
icebp
pop
idiv
aad
jl
and
test
xor
idiv
push
xor
push
popa
mov
ret
loopne
test
pop
cmp
in
je
std
in
adc
fisttpll
shlb
test
xor
pop
and
sti
hlt
icebp
jmp
xor
testl
sbb
add
add
hlt
icebp
jmp
push
jge
in
notl
enter
add
add
jmp
sti
pop
or
ljmp
out
shlb
xchg
push
stc
repnz
inc
out
hlt
int3
leave
sahf
ja
out
loope
iret
pop
fdivr
mov
ja
lods
jle
call
push
out
cli
nop
data16
movsb
mov
aaa
mov
add
add
popf
js
jne
loope
mov
dec
stc
xor
mov
inc
xchg
xchg
inc
jno
jl
fldcw
hlt
sub
xchg
dec
scas
pusha
and
loop
and
std
lcall
je
aaa
xor
mov
sti
lret
mov
andb
push
or
insb
jmp
lcall
xor
add
add
add
add
hlt
inc
out
mov
js
or
jle
insb
and
push
out
xlat
xor
sti
inc
out
xor
fnstenv
out
adc
repz
ds
dec
add
add
jnp
or
sti
add
push
xor
faddl
testb
mov
stc
out
mov
cmp
push
mov
call
pop
xchg
cmpb
push
lock
in
sub
enter
xchg
add
jmp
xor
fsubs
mov
in
add
sti
pop
orb
and
sub
iret
cmp
mov
ret
mov
call
rolb
push
call
add
add
pop
inc
or
xor
adc
add
punpckhbw
out
clc
jbe
stc
outsb
adc
or
sbb
xor
mov
out
push
pop
lea
int3
repz
in
push
inc
data16
mov
add
test
add
xchg
jl
in
sub
sbb
je
int
inc
je
xor
xchg
std
jp
and
or
adc
fists
jae
movsl
movsl
cli
and
jecxz
mov
stos
cmc
andb
repnz
repnz
push
imul
test
loopne
dec
or
mov
in
fmul
mov
mov
daa
pusha
les
dec
and
push
inc
sub
push
mov
stos
in
push
jmp
inc
cmp
pop
or
push
pop
mov
add
insb
stos
and
push
dec
in
add
add
ret
mov
les
add
add
inc
push
or
fwait
or
xor
iret
and
pop
dec
jecxz
pop
fistpl
int
push
int3
fs
or
ret
cs
dec
push
cmp
aaa
mov
jle
add
filds
nop
push
fimull
xor
fstpt
out
call
mov
data16
jmp
sahf
adc
popa
add
jo
adc
fsubrp
dec
or
sub
sbb
sub
int3
pushf
pop
fisttps
jno
sub
insb
cs
shr
mov
bound
daa
jno
push
insb
jb
and
scas
daa
lock
bound
push
or
xlat
jmp
cmp
xchg
bound
shlb
daa
push
testl
insb
xlat
xor
push
shlb
add
fdivrp
xor
inc
pop
mov
loope
jno
adc
add
add
repz
nop
inc
insb
cmp
fdivr
cmp
cmp
mov
inc
pop
mov
cmp
add
sti
decl
jp
add
into
jg
je
inc
insb
mov
mov
jmp
or
inc
fidivrl
mov
add
lea
ss
mov
push
sbbl
inc
pop
movsl
mov
mov
xlat
addb
loopne
out
dec
or
mov
xlat
je
gs
dec
insb
jno
test
lret
mov
inc
sub
pop
pop
adc
jmp
and
adcl
test
and
mov
cbtw
adc
faddl
ds
std
insl
jmp
les
pop
pop
je
add
add
call
xchg
add
add
pop
pop
test
out
stos
pop
mov
pushw
roll
pop
inc
ret
into
bound
out
mov
pop
add
iret
out
cmpsb
or
lds
add
subb
in
lods
jl
aad
out
jmp
in
out
push
ret
roll
add
add
in
out
push
int3
adc
cmp
push
pop
dec
incl
scas
xor
out
data16
out
add
ret
cmc
add
cmp
dec
mov
dec
pop
insb
push
or
add
lea
lods
inc
int3
stc
jmp
in
insl
ljmp
jge
jecxz
push
jb
fisttpl
pop
or
test
pusha
fwait
add
in
inc
lea
pop
bound
les
jmp
add
pop
pop
lcall
rcrb
shlb
pop
xchg
push
add
icebp
out
in
xlat
mov
push
cmp
fildl
cmp
add
ds
mov
call
mov
jb
jle
inc
mov
jl
sub
nop
and
add
add
cmp
jns
or
decl
in
sub
add
jo
mov
dec
push
ss
orb
lret
mov
push
dec
sub
add
scas
push
xor
and
ret
lcall
mov
add
add
jmp
jae
push
dec
pop
bound
add
insb
sbb
std
cmpsl
cmp
insb
std
fldt
iret
mov
xor
into
mov
lcall
test
pop
rcll
pushf
cmp
mov
aam
shr
in
pop
lock
mov
test
cmpsl
rolb
xchg
mov
js
push
inc
cmp
nop
jmp
add
xor
cmp
mov
pushw
jge
add
add
add
pop
mov
lcall
cli
bound
lret
cmpb
add
pop
loope
fwait
enter
enter
enter
mov
mov
aam
cltd
sahf
dec
lret
out
push
pop
inc
mov
loope
out
xchg
es
lret
and
adc
adc
out
loope
jl
out
push
stc
lret
daa
sti
push
jmp
push
push
push
sbb
jg
adc
or
ja
sti
std
fldenv
cmp
push
sub
dec
addps
ds
jb
jne
cs
sbb
test
jno
dec
bound
inc
bound
push
bound
inc
subl
in
test
add
add
lret
add
jno
aam
call
push
sti
xchg
loope
jge
jmp
add
cmp
jo
push
movsb
adc
in
inc
add
ja
movsb
cwtl
add
pop
mov
stc
call
add
xor
add
lods
rolb
add
push
mov
dec
add
cwtl
add
add
add
data16
decl
xor
insl
add
mov
cli
lods
sbbl
add
mov
jae
adc
jle
pop
add
push
add
out
shrb
popf
push
addb
or
es
xor
test
bndstx
sbb
xor
add
add
in
xor
and
out
mov
push
aaa
dec
insb
and
and
add
inc
push
inc
inc
adc
and
mov
cwtl
inc
or
ds
leave
arpl
push
fsubrs
aas
insb
insb
cwtl
inc
test
movsb
fmuls
inc
jmp
fimull
push
pop
std
jmp
fstpt
insb
pop
add
sbb
xor
sub
add
add
out
out
js
push
idivl
mov
test
and
fstpt
xor
jns
add
inc
out
add
outsb
inc
out
out
ret
lea
out
out
bound
out
push
pop
add
add
movsb
aad
out
jne
leave
add
jle
add
add
sub
add
jo
add
adc
add
add
sbb
sbb
out
lcall
dec
jne
into
incl
cmp
pop
mov
dec
sub
insl
inc
cmp
mov
adcb
add
mov
popa
cmp
jmp
repnz
fnstenv
pop
xchg
icebp
lret
stc
jbe
stc
jl
je
or
stc
pop
adc
sub
bound
pop
test
gs
mov
in
jge
loopne
xchg
icebp
call
fadds
dec
add
add
jmp
icebp
rclb
push
push
push
fisubrl
dec
into
add
addl
ds
test
mov
pop
xchg
jg
push
iret
add
or
add
je
jl
pop
adc
add
cmc
cmp
cli
xor
add
or
dec
push
mov
inc
add
jl
insb
les
jp
pop
xchg
scas
out
stc
jp
xorb
push
xchg
pop
idiv
stc
push
push
mov
sbb
pop
and
int3
xor
enter
enter
mov
xchg
insb
mov
add
std
test
popa
inc
je
mov
inc
ficoml
insb
test
pop
scas
aam
sbb
jge
jmp
roll
test
xchg
add
xchg
fdivr
pushl
inc
test
push
sub
or
inc
popa
inc
cmp
inc
inc
pmulhw
mov
dec
mov
add
mov
inc
mov
xchg
and
add
lcall
popf
cmp
sub
outsb
push
dec
sub
sub
push
xchg
rol
add
aas
jge
sub
inc
mov
test
add
push
rorl
mov
or
out
mov
lods
pop
cmp
add
out
mov
pop
in
cld
push
push
ljmp
in
das
and
add
stc
xchg
jmp
inc
js
xor
or
ret
jecxz
pusha
out
sub
call
inc
es
inc
dec
dec
je
loopne
test
adc
or
leave
test
adc
or
or
test
push
add
rol
sub
jno
stc
jmp
in
fwait
mov
stc
out
xchg
adc
stos
add
dec
xor
lea
push
jns
rcl
add
sub
enter
mov
add
inc
add
add
mov
loop
rcrl
add
xor
movl
mov
mov
enter
aas
aas
lret
sub
dec
je
enter
dec
orl
repz
adc
pop
out
cs
dec
jnp
mov
adc
add
xor
scas
mov
stos
test
je
mov
xchg
jl
lahf
xor
or
stos
std
jmp
test
pop
cmp
dec
or
and
pop
add
stos
std
shlb
add
out
add
clc
das
xorl
add
mov
mov
ficomps
add
insb
add
testl
flds
outsb
xor
push
pusha
mov
pop
les
xchg
out
pop
dec
mov
shlb
inc
stc
loopne
pop
addl
push
pop
jbe
push
out
bound
outsl
or
add
movsb
cmc
add
push
aam
add
out
mov
out
out
imul
std
ljmp
adc
jmp
add
inc
adc
jle
jmp
add
add
ret
test
jb
push
lahf
cmp
inc
jmp
stc
jl
adc
hlt
push
sub
stc
scas
nop
inc
ja
in
push
out
test
mov
push
into
cmp
sbb
pop
inc
mov
push
dec
lods
sbb
add
jmp
call
add
add
arpl
add
xchg
inc
mov
popf
pop
mov
shlb
jle
dec
add
ret
add
add
insb
test
clc
cld
push
std
mov
lea
add
inc
mov
incb
insl
cmp
cld
dec
decl
mov
sub
or
cmc
out
add
and
add
repz
push
iret
testl
out
les
sub
adc
mov
out
add
into
iret
lods
js
rsm
mov
in
mov
out
mov
ficomps
js
fs
xchg
push
lret
test
sub
out
andl
xor
add
mov
int3
mov
outsb
mov
in
insb
pop
cld
push
hlt
jl
lret
ja
add
dec
sbb
add
clc
popa
xor
jp
sbb
xor
clc
mov
in
test
pusha
push
mov
outsl
repz
out
mov
xlat
pop
jo
fisttpl
mov
and
add
out
scas
pop
push
add
add
sbb
add
mov
sub
clc
mov
mov
lea
pop
out
icebp
lret
fidivrs
out
fwait
enter
enter
sbb
add
mov
add
ljmp
fucomi
xchg
out
adcb
pop
stc
xchg
lods
pop
mov
xchg
int3
sbb
cmpsl
test
add
add
xorl
das
test
dec
xchg
fstpl
pop
cmpl
add
in
cltd
fnstsw
daa
repz
imul
add
or
mov
mov
jns
jmp
movsb
das
sbb
adc
jae
hlt
cmpb
cmp
dec
leave
mov
mov
les
add
add
add
mov
push
and
mov
idiv
shr
pop
mov
idiv
loope
mov
int3
adc
int3
jnp
in
mov
or
add
push
sbb
xorl
jne
or
fisttpll
mov
sbbb
mov
and
mov
idiv
and
add
add
cmp
out
pop
int3
int3
stos
std
gs
shrb
jmp
int3
jae
or
mov
sbb
rcll
and
inc
sbb
xor
xor
stos
enter
lods
subl
test
jb
stc
push
rorb
popa
loope
sub
ret
push
mov
cmc
stc
or
and
sub
inc
dec
mov
add
imul
out
std
shlb
sbb
inc
das
add
add
add
jge
push
xor
sbb
fildl
adc
cs
jl
loopne
xor
jnp
add
add
pop
jo
cmp
cltd
test
jle
fisubrs
popl
out
out
outsb
ficomps
decl
add
add
mov
add
aam
jp
repz
inc
ret
mov
jl
jmp
lret
mov
pop
cmp
mov
xor
lods
push
cmp
add
bound
in
jl
sarb
adc
jecxz
add
aad
pop
pop
mov
and
icebp
sarb
jle
lods
or
test
jg
push
aad
push
xor
int3
int3
dec
cmp
add
add
orb
rorb
xor
movsb
pop
test
repz
call
stc
jmp
sub
sarl
hlt
ret
pop
bound
pop
mov
scas
aam
inc
fsts
add
add
add
jae
add
mov
push
xor
ret
repz
mov
mov
add
sahf
in
rorb
cmpl
testl
mov
jge
insl
add
andl
insl
or
dec
add
dec
adcl
xor
scas
stc
cmp
lds
dec
adc
fnsave
mov
addl
inc
cmp
out
int
xchg
adc
dec
out
fadds
add
add
stos
std
jmp
or
hlt
inc
sahf
and
pop
out
andb
std
jmp
rorl
cli
idiv
sbb
or
out
pushl
mov
imul
in
fs
cld
xchg
and
cmp
in
add
scas
js
out
or
sar
gs
repz
out
jbe
out
sar
mov
adc
push
or
sbb
add
mov
out
lock
mov
out
cmp
mov
mov
out
fs
cmp
cmpsl
inc
test
es
hlt
fs
out
out
push
shlb
fistpll
ret
arpl
mov
nop
adc
add
lods
js
sbb
bnd
addl
mov
lods
sti
arpl
mov
cmpsl
add
testl
and
pop
incl
sbb
jl
in
add
out
mov
outsb
mov
jmp
sub
and
push
std
mov
inc
jmp
pop
push
clc
test
cld
lock
xchg
jmp
aas
stc
jae
sub
dec
fildl
add
pushf
ss
bound
add
jb
sti
shrb
jecxz
sub
mov
mov
cli
stc
icebp
adc
pusha
add
add
adc
cld
mov
inc
lea
sti
xlat
jge
adc
adcl
dec
push
adc
mov
pop
add
add
mov
cmp
and
add
icebp
pop
add
adc
cli
add
or
insl
aas
adc
add
lret
pop
loop
jecxz
hlt
or
in
lds
sahf
dec
dec
push
adcl
aas
sbb
or
add
in
sbb
cmpb
push
test
add
add
pop
add
lcall
jge
mov
push
iret
sahf
aad
leave
mov
fldl
mov
add
push
out
xchg
xlat
mov
pop
mov
adc
aaa
inc
in
pop
loopne
mov
mov
mov
lods
mov
xor
sub
xor
add
inc
pop
retw
add
adc
ljmp
sub
jb
out
mov
divl
gs
jae
bound
add
out
mov
in
les
fisttps
testl
out
sbb
outsl
pop
jl
and
push
jg
stos
add
mov
popf
hlt
push
enter
add
jmp
call
das
cli
stc
fistl
jge
pop
add
insl
xchg
call
mov
test
adc
xchg
adc
das
imul
inc
inc
subl
mov
xchg
fdivs
jmp
ja
in
into
lods
mov
add
add
pop
aam
push
sbb
xor
add
add
xchg
cmp
test
dec
add
loopne
inc
add
add
add
incl
add
testl
add
test
inc
inc
mov
addl
jp
mov
jge
sbb
orl
shll
adc
aam
pop
in
xor
mov
push
sbb
add
dec
in
dec
jns
clc
out
jp
aam
cmp
push
ficomps
dec
mov
addl
dec
clc
std
or
out
adc
in
std
jae
xor
pop
out
test
test
out
xchg
xor
insb
pop
mov
mov
pop
cmp
add
pushf
or
sub
add
pushf
std
shr
std
jmp
adc
std
fsubs
addb
lcall
divl
inc
out
jae
neg
test
xor
pop
loopne
andl
xchg
add
lret
repz
dec
cmpsl
call
pop
push
cmp
test
or
mov
cmpsb
inc
pop
push
aas
sub
mov
xchg
mov
adc
add
add
mov
xchg
push
incl
lods
add
js
mov
and
rolb
pop
orl
xchg
add
std
insl
inc
pop
xchg
and
add
add
add
out
add
in
icebp
fildl
adc
in
xorl
add
mov
fisubrs
or
in
mov
in
decl
sub
jb
jecxz
lods
dec
add
add
cmp
insb
sbb
inc
xor
bound
jnp
repz
lods
jge
mov
icebp
pop
inc
hlt
ret
outsb
ss
adc
out
add
orb
push
clc
bound
dec
cmp
pushf
push
add
decl
xchg
jp
hlt
out
cld
add
xorl
js
clc
inc
test
or
pop
jecxz
aad
and
push
movsb
stc
ds
mov
add
pop
add
notb
dec
lahf
xchg
in
sti
add
sub
or
add
add
push
pop
mov
insl
inc
cld
inc
mov
mov
add
xor
cmp
pop
mov
push
xor
mov
repz
shrl
out
scas
test
std
jle
adc
mov
pop
mov
xchg
test
inc
xor
pushf
std
dec
pushf
sub
mov
pushf
std
test
and
sbb
repz
std
incl
add
add
push
add
pushf
cmp
int
jl
inc
std
or
add
out
outsl
icebp
xchg
ds
xchg
adc
fsubs
insl
test
fcompl
out
add
pop
add
ret
cld
cmpsl
mov
out
out
bound
out
ret
out
pusha
inc
iret
mov
mov
add
add
add
add
add
sub
add
jg
or
leave
add
add
jl
or
inc
decl
pop
shr
out
out
mov
jmp
imul
add
test
loop
out
pop
add
das
repz
test
mov
add
add
add
dec
add
in
jge
jecxz
es
jl
jmp
fldenv
add
jmp
cmp
bound
lds
jo
stos
std
shlb
sbb
jle
push
test
mov
orb
stos
std
cmc
xchg
stos
and
pop
icebp
cmp
and
cld
call
dec
stos
push
jmp
arpl
or
cmpsl
add
jae
movsl
mov
add
jle
call
decl
pop
cli
mov
add
mov
rolb
add
inc
sbb
xor
add
xchg
or
add
pop
sti
call
aad
jnp
inc
lcall
in
mov
pop
test
decl
cli
dec
imul
shl
push
mov
fadds
jne
add
rcrb
shlb
adc
stc
outsb
sub
out
stos
jge
leave
sti
xchg
pop
mov
jmp
sbb
out
mov
ljmp
xchg
leave
add
and
dec
jnp
ret
jb
and
xchg
jno
dec
push
mov
les
fsubs
jg
out
xchg
add
add
xor
pop
xlat
stos
dec
xchg
or
ret
std
test
add
cld
mov
push
xchg
sbb
out
mov
and
or
cmp
add
jg
cli
out
out
insl
in
sbb
pop
lds
cld
outsl
dec
lahf
add
bound
into
stc
ret
out
pop
shll
ret
dec
ljmp
fisubl
orl
and
push
xor
pusha
inc
ret
hlt
imul
clts
loop
mov
cmp
out
out
add
in
test
pop
ss
imul
lret
addr16
jmp
in
or
in
dec
in
outsl
mov
ret
push
clc
ljmp
test
lret
cli
mov
mov
push
sub
jle
push
add
mov
sbb
es
fs
addr16
std
shll
call
push
in
popa
pop
and
in
add
sbb
xchg
call
aas
add
int3
push
adcl
add
cmpsb
sahf
inc
push
scas
mov
insb
mov
mov
dec
xor
dec
lea
push
push
leave
push
decl
dec
jo
and
call
mov
outsl
jnp
xchg
cmp
test
stc
call
dec
push
and
fs
dec
pusha
cmp
add
sbbl
add
inc
push
mov
frstor
dec
inc
fistps
ret
out
add
in
ret
cltd
ja
pop
jo
xor
add
arpl
sti
call
mov
dec
addr16
test
addl
outsl
stos
std
jmp
std
mov
push
aam
mov
cmpsb
imul
and
shl
jp
les
jge
add
add
xor
es
jns
shl
or
jp
mov
pushf
scas
inc
popl
out
jle
sub
decl
loop
daa
xchg
add
pop
jle
add
add
jecxz
fiaddl
ficomps
mov
mov
pop
inc
mov
leavew
filds
add
retw
mov
xchg
push
fisubrl
dec
add
add
add
mov
lret
out
xchg
out
ljmp
test
add
dec
push
jo
inc
mov
ret
lcall
cld
mov
pusha
mov
rolb
test
out
fisubrl
lahf
add
pusha
roll
in
mov
aaa
dec
cld
bound
sarb
popf
or
inc
dec
loope
pop
sbb
adc
pop
jge
ficomps
shr
inc
hlt
sub
mov
push
lcall
xchg
mov
push
bound
jmp
in
or
lcall
rorl
lds
ljmp
clc
add
jg
ret
lea
dec
lahf
addb
jecxz
inc
insl
idiv
cltd
mov
add
sahf
pop
cmp
add
add
mov
dec
add
mov
add
add
rolb
je
xor
push
inc
add
push
pop
mov
fisubrs
sar
jge
or
add
out
inc
push
lahf
jnp
cwtl
outsl
testl
loopne
mov
out
std
jmp
mov
add
jmp
pop
or
out
cmp
jl
mov
lods
std
dec
insb
pop
sbb
dec
sub
dec
mov
pop
dec
data16
icebp
dec
out
jle
out
adc
push
clc
cmpb
stc
pop
jge
mov
xchg
jl
aaa
sub
dec
in
dec
push
adc
pusha
test
add
out
jbe
or
jle
sbb
dec
in
cmpsb
inc
out
jle
out
add
das
mov
scas
orb
mov
es
add
add
xchg
sti
add
add
add
push
add
popf
out
test
aas
jp
xchg
pusha
cmp
mov
mov
push
push
cmp
add
push
loopne
lods
and
jp
or
push
fisttpl
vmwrite
fistps
jg
xlat
js
or
out
addb
pop
xchg
int3
xor
jo
lahf
or
add
and
stc
xchg
out
call
aaa
mov
cmp
andl
pop
pusha
test
outsb
inc
dec
jb
mov
add
xchg
xchg
push
mov
add
in
mov
push
dec
cld
bound
loopne
shlb
ds
or
rorb
bound
outsl
dec
and
pop
mov
leave
xlat
inc
hlt
cmp
lahf
jge
add
test
lahf
jle
push
add
mov
loope
xchg
rorl
push
lahf
scas
enter
mov
mov
shrb
sbb
in
movsb
mov
hlt
jge
add
sbb
mov
cwtl
scas
dec
lret
hlt
iret
jle
psubusb
sti
rclb
pop
mov
test
out
daa
cld
out
jns
loop
std
or
int
dec
xor
cld
movsl
lods
lds
jns
jnp
inc
mov
insb
ljmp
lods
std
int3
pop
push
aaa
in
imul
mov
ficomps
std
daa
es
xchg
test
cltd
xor
xchg
dec
enter
shl
or
jp
stos
xchg
std
lcall
out
test
rclb
add
jl
add
add
outsb
mov
push
inc
arpl
hlt
push
stos
add
add
add
ljmp
ret
fiaddl
out
ds
out
enter
dec
inc
xchg
or
ffreep
daa
or
sbb
jecxz
out
cltd
mov
sahf
dec
sub
hlt
add
add
lahf
andb
sarb
loopne
add
add
add
add
mov
fidivrl
jmp
add
push
in
sub
add
loopne
popa
or
pushf
std
rorb
dec
and
cwtl
stc
jmp
xchg
dec
sbb
lcall
add
inc
xchg
out
call
in
test
stos
pop
call
lret
idivb
jnp
xchg
add
add
pop
out
out
push
jo
nop
xor
push
cwtl
add
dec
leave
std
call
dec
cld
bound
loopne
out
cmp
add
daa
stc
jle
lret
loopne
fisttpl
ret
addr16
and
add
add
fwait
scas
leave
xlat
fpatan
cmp
fwait
jle
ds
mov
loope
mov
rorl
nop
pop
orl
add
add
scas
enter
mov
lret
mov
rcrl
inc
in
lahf
mov
hlt
mov
pop
enter
addl
scas
dec
repnz
mov
sti
rol
outsb
push
out
and
out
jns
in
std
or
jl
mov
jl
stos
cmpsb
xor
and
pusha
jnp
mov
insb
incl
add
add
std
int3
inc
adc
in
addr16
xchg
pop
pushf
or
sar
and
push
pop
mov
ret
call
in
lahf
xor
cmp
test
cmp
mov
xchg
std
ljmp
out
movsl
imul
sbb
into
in
add
jge
mov
pop
inc
fistpll
cmpsl
add
add
add
mov
notl
sub
popa
inc
and
dec
stos
xlat
add
add
das
andl
adc
mulb
add
push
push
add
dec
xchg
jp
mov
inc
mov
fwait
out
fimull
pop
xor
add
add
mov
fiaddl
dec
push
ret
call
add
repnz
mov
out
call
je
or
xchg
stc
jmp
out
xchg
test
fcmovnu
mov
scas
mov
or
les
call
adc
or
and
dec
cmc
out
sub
nop
and
ss
loopne
ljmp
dec
mov
dec
inc
jo
mov
test
lock
outsb
or
jb
inc
xchg
inc
hlt
bound
xchg
xor
mov
sbb
dec
sbb
xchg
pop
addl
inc
inc
inc
int
sub
jp
jmp
or
rorl
xchg
sbb
inc
xchg
int
mov
fistpll
add
aaa
add
add
add
movsb
cli
decl
jne
ds
jge
aas
add
mov
ja
dec
into
pop
or
int
mov
add
add
xorb
stos
hlt
adcl
sbb
sbb
jns
out
std
or
movsb
dec
stos
es
xchg
ret
dec
clc
in
jg
push
ret
test
std
xlat
inc
ja
dec
or
fcomi
and
les
dec
call
cld
cmpl
mov
std
in
test
cmp
pushf
mov
adc
sti
xchg
pushf
mov
add
pop
jg
sbb
call
pop
iret
cwtl
movsb
xlat
push
nop
jle
movsl
out
out
js
out
push
jo
cs
in
fimull
pop
jmp
lods
or
inc
out
sbb
or
jo
out
out
sti
out
imul
hlt
push
add
out
out
cmp
adc
add
add
pop
and
xchg
mov
pusha
cmp
jno
stos
jge
add
fisubl
movsb
out
jae
pop
or
sub
pop
shll
shr
add
jmp
out
orl
xchg
pop
bound
mov
icebp
popa
cmp
test
popl
in
adc
insb
sub
xor
sub
jmp
add
in
shll
stc
jmp
in
add
imul
dec
data16
or
inc
lock
jg
cld
ja
adc
out
sbbl
mov
jb
test
cmp
xchg
sbb
jp
mov
dec
loopne
imul
or
into
jmp
movl
arpl
incl
add
add
jg
pop
jl
decl
pop
lahf
aas
add
rcr
sub
add
inc
sbb
add
pop
fbstp
je
sbb
pop
subps
test
dec
movsl
xchg
sbb
std
in
adc
pop
jbe
and
insb
xor
push
xchg
std
lcall
cmc
xchg
lods
mov
fs
repz
in
or
add
add
pushf
std
jmp
jae
fldl
out
std
lcall
icebp
mov
lret
sub
fs
or
std
dec
sbb
popf
std
jmp
imul
repz
pop
add
rcrl
jmp
xor
loope
mov
ljmp
mov
lea
lahf
fwait
out
mov
push
mov
out
add
scas
sub
add
bound
outsl
sahf
mov
test
rcr
cli
out
add
jmp
add
in
ret
add
ljmp
cmp
and
out
sbb
icebp
adc
icebp
or
icebp
add
icebp
dec
iret
call
iret
incl
adc
lcall
or
jmp
cmp
lcall
push
iret
incl
push
iret
decl
mov
sar
sub
sar
add
sar
dec
xchg
sar
inc
mov
decl
xchg
sar
in
sar
jmp
sar
xor
ror
mov
int3
pushf
insl
mov
sbb
enter
add
xor
je
icebp
jp
xor
je
fidivrs
sub
outsb
leave
cmpl
dec
and
test
push
int3
outsb
rolb
and
add
push
mov
pop
jecxz
add
inc
outsb
idiv
inc
into
push
ret
int3
int3
repnz
int3
adc
int3
pop
jnp
push
inc
ds
push
inc
notl
shl
sar
mov
insl
setno
cmp
mov
add
add
mov
mov
add
inc
out
xor
push
dec
add
dec
mov
daa
adc
in
xchg
jmp
mov
adc
add
lcall
insb
out
lahf
jge
sahf
add
mov
dec
movsl
mov
sub
pop
xchg
mov
push
dec
or
fcompl
xchg
jne
jecxz
add
add
fiadds
shl
std
jmp
push
mov
sub
enter
enter
mov
push
outsb
xor
add
mov
sub
out
out
aas
inc
ret
jg
cwtl
mov
andl
lcall
mov
cmpsb
out
pushf
andl
xchg
lods
aad
bound
push
pop
xchg
das
andl
mov
fwait
xor
jecxz
cmpsl
adc
mov
outsb
dec
out
sub
cmpsb
out
push
cmp
popf
mov
call
in
add
cmpsb
pop
stos
and
jge
loopne
push
push
jo
mov
sub
and
cld
jmp
mov
add
add
test
jb
movsl
or
jo
mov
and
cmp
push
dec
mov
push
add
jo
pop
mov
sub
jae
pop
xor
cli
es
in
mov
or
hlt
push
add
mov
test
repz
call
int
add
xchg
cld
xlat
cli
mov
clc
pusha
sbb
push
or
jne
addb
push
sub
jns
jnp
add
mov
imul
repz
test
shl
sbb
testl
lcall
or
cli
test
iret
out
sti
push
addl
or
leave
sti
cltd
iret
pop
adc
out
xchg
addl
add
sahf
outsl
aam
xor
sub
xchg
add
pop
lds
push
cmp
jle
lods
test
lods
mov
clc
cwtl
adc
pop
pop
ljmp
ret
inc
out
leave
xor
jmp
popa
cmp
ljmp
test
out
ret
ror
rol
int3
stos
fld
int3
mov
leave
fmuls
add
insb
pusha
add
adc
or
sub
adc
push
test
lods
sahf
xchg
add
jp
pushf
sbb
out
mov
daa
psrad
mov
mov
mov
mov
mov
subl
adc
movsb
xchg
repnz
sti
addr16
push
xchg
add
jge
pushf
push
sldt
add
add
add
sub
sbb
xchg
aam
jo
out
sub
pusha
inc
pop
andl
add
vmovq
add
add
bound
nop
outsb
int3
mov
add
jmp
into
cmpsl
test
cmp
jb
mov
mov
push
add
in
sub
inc
in
jo
xchg
in
arpl
in
pusha
lahf
xchg
test
sub
notl
lock
shlb
in
push
mul
lock
jmp
add
jmp
stos
test
add
hlt
xor
add
inc
add
cmp
repz
inc
xchg
rorb
adc
lea
or
repz
lea
add
add
mov
dec
inc
cmp
adc
add
idiv
add
xchg
inc
add
jae
push
sarb
pop
cltd
std
inc
or
xchg
jecxz
dec
jns
call
test
add
outsl
or
cmp
pop
and
xchg
stc
shlb
cld
adc
xor
in
add
add
jge
xchg
xor
sub
cltd
pop
movsb
inc
mov
fs
dec
insb
pop
add
or
test
mov
xlat
stc
push
lcall
dec
and
call
out
mov
add
aam
cmp
mov
sbb
out
adc
push
pop
pop
scas
jno
jle
jg
add
add
add
xchg
out
or
pop
mov
pop
xchg
dec
or
add
in
out
out
fcompl
mov
mov
rcpps
and
add
add
add
add
cli
adc
aas
pop
add
outsl
out
out
cmc
andb
push
mov
sarb
jae
dec
xor
out
sub
roll
add
adcl
sbb
imul
mov
push
jae
mulb
and
mov
adc
outsl
test
mov
sbb
mov
add
in
add
mov
in
in
mov
test
add
mov
out
sub
push
pop
subl
repnz
rorb
lahf
or
in
jl
push
adc
sub
shrb
xchg
int3
cmpl
notb
imul
or
sti
add
or
jae
mov
jg
mov
or
inc
int3
jecxz
or
dec
call
es
lock
outsl
or
repz
mov
add
jp
idiv
add
xchg
dec
push
xchg
or
mov
dec
addl
test
sub
add
cmp
push
decl
add
push
das
nop
push
insb
stos
jnp
ljmp
movl
icebp
mov
bound
jnp
iret
xchg
add
sub
andb
stc
fisubrs
stc
nop
divl
fdivl
add
hlt
js
add
out
ret
or
stc
pusha
out
cld
mov
movb
popa
test
jmp
mov
stc
xor
or
out
cmp
mov
jl
xor
aaa
xor
ffree
out
jp
xrelease
add
add
adc
jg
jle
adcb
adc
dec
jecxz
cmpsl
sarl
cmp
add
xor
sub
imul
and
insl
push
fcmovnbe
insl
leave
push
loop
es
mov
insb
idivl
mov
bound
push
or
fmulp
outsl
or
mov
xor
or
cmpsb
adc
loope
bound
out
add
cmc
insl
mov
clc
repnz
pusha
and
stos
lock
mov
push
jge
mov
inc
pop
jo
or
sbb
cmpsl
dec
int3
sub
std
outsl
jge
fcom
push
sahf
in
jae
incb
add
add
add
pop
inc
int3
bound
mov
lret
test
notl
dec
add
cli
dec
xor
cmp
clc
lahf
and
add
or
ret
jmp
xchg
xor
call
dec
inc
add
jle
std
adcb
hlt
push
test
cli
jae
lret
and
inc
mov
add
add
vmovhps
add
into
adc
add
addl
dec
nop
dec
cli
mov
dec
inc
add
adc
adcb
addl
ja
aas
jecxz
stc
sub
movl
mov
jp
outsl
cmp
lret
mov
clc
jmp
sbb
gs
test
mov
ja
mov
jmp
sbb
and
push
pop
lahf
mov
stc
insb
lods
int
and
outsl
clc
sbbb
je
jmp
int
mov
add
clc
push
insl
add
add
add
mov
pop
into
lret
cmpsl
outsb
inc
xlat
shrb
pusha
jle
mov
add
add
mul
andb
pop
repz
xchg
mov
aam
dec
jo
mov
jb
into
xchg
pop
fs
roll
cmp
js
xor
outsl
aad
mov
sahf
xchg
pop
fs
mov
or
js
xor
ss
pop
mov
outsb
xchg
pop
fs
jae
fimull
not
mov
jb
add
add
insb
jge
lods
out
rclb
mov
aas
dec
bound
ja
pop
jge
lods
out
rclb
lds
pop
mov
dec
jb
imul
out
shl
clc
les
sti
mov
insl
imul
out
shlb
iret
sti
pusha
fisubrs
movsb
xor
add
cli
sti
insb
inc
or
dec
jecxz
add
aad
jne
mov
stc
int
sbbl
add
je
test
je
stc
dec
cld
xchg
cmp
push
test
push
test
add
mov
addl
inc
pop
or
addb
jge
clc
je
inc
stos
insl
jne
or
add
push
addl
je
add
add
add
jnp
sbb
sti
mov
arpl
aaa
das
push
push
jo
fidivrs
jb
shlb
jl
imul
jge
add
es
sarb
jp
fcomip
cmp
push
xchg
in
add
cmp
sub
push
mov
xor
sub
jnp
aas
idivb
cld
cld
bound
imul
insb
lods
jns
loopne
mov
enter
lock
mov
jecxz
hlt
xor
jnp
mov
fwait
jl
xlat
lcall
add
lock
dec
sbb
out
jmp
and
incb
push
push
add
int3
mov
out
out
sub
insl
xor
mov
test
add
add
ljmp
xchg
add
divb
jnp
jge
imul
jmp
cmpsl
psubsw
push
pop
cmp
pushw
xchg
add
lock
rcll
popf
insb
xchg
xchg
scas
ja
mov
cltd
mov
lret
add
repnz
xor
lods
adc
test
dec
mov
push
outsl
stc
ret
in
flds
jmp
pop
aaa
je
repz
imul
dec
addb
shl
cmp
stc
push
add
xchg
sbb
mov
xchg
mov
inc
fldcw
call
push
jmp
fcompl
divl
xor
call
adc
jecxz
jge
mov
rcr
sbb
es
add
test
add
xchg
jbe
inc
lret
mov
sarl
addl
je
aad
mov
clc
int
test
mov
je
adc
xorl
lret
mov
mov
push
xor
adc
inc
je
jge
testl
mov
je
inc
cmp
mov
dec
test
and
mov
int
jge
jnp
rclb
and
and
and
adc
inc
jle
fildll
or
mov
push
ljmp
jo
mov
aas
or
sub
add
stos
push
jne
pop
xor
pop
mov
mov
mov
and
ja
insb
and
test
cmp
iret
cmp
sti
cmp
negl
ja
jecxz
cs
ja
out
sbb
mov
and
xchg
int
pxor
pandn
and
out
mov
sbb
jmp
out
out
mov
outsb
das
add
add
add
xor
add
add
jo
xchg
cmp
xor
add
add
mov
out
and
test
test
aas
pop
jg
add
ret
pop
mov
and
int
jns
shrb
ret
mov
mov
inc
add
pusha
push
jmp
sti
mov
mov
or
loope
mov
xchg
leave
mov
jmp
out
in
cmp
insl
stc
jmp
arpl
sbb
aam
scas
clc
lock
mov
testl
imul
stos
out
add
jmp
in
test
add
jmp
push
enter
lds
jecxz
cmp
ds
add
pop
bound
dec
dec
dec
add
xchg
fadds
mov
mov
add
sbb
dec
or
into
mov
and
roll
mov
data16
mov
add
aam
int3
cli
ror
int3
arpl
orb
in
or
cmp
mov
cmpb
add
mov
aas
cld
xchg
push
push
add
test
incb
add
out
aam
cmp
pop
std
jl
push
mov
cmp
enter
jecxz
push
mov
sti
xor
int
stc
fs
add
mov
push
data16
add
fwait
stc
pusha
sbb
inc
pop
testb
insl
jg
fs
add
and
inc
neg
enter
dec
call
outsb
dec
jg
fs
or
xor
sar
xchg
add
push
xchg
sbb
inc
adc
push
inc
subb
jp
fidivrs
out
out
and
fcoml
fs
rcll
and
loop
dec
or
pop
sbbb
jo
mov
xchg
adc
or
add
inc
or
movsl
xor
aam
mov
jo
fistpll
test
pop
mov
xchg
div
jl
adc
push
add
add
cmp
stc
add
andb
insb
test
pop
test
addr16
ret
in
inc
je
arpl
dec
arpl
aad
cmp
clc
and
adc
add
in
pop
add
add
in
add
in
cmpsl
xchg
stc
push
mov
imul
stc
push
pop
subl
add
imul
loopne
negl
insb
cwtl
repnz
stos
cmp
add
or
add
imul
addr16
idiv
inc
inc
sub
nop
fistps
inc
out
sbbb
les
enter
mov
divl
sub
je
lods
xchg
inc
out
addb
sbb
cmp
or
push
jmp
add
jae
mov
incb
add
adc
and
sbb
pop
mov
pop
xor
test
add
add
jecxz
out
test
mov
addr16
movsb
lahf
dec
int3
stos
xor
test
jae
into
outsb
sbb
mov
sbb
add
repnz
loopne
pop
std
xor
pop
or
and
addr16
movsl
addr16
fnstenv
jp
shl
pop
and
mov
push
push
hlt
sbb
test
aas
or
add
add
loope
or
sub
into
repnz
out
out
in
hlt
loopne
popa
test
add
cmc
jmp
add
mul
js
test
add
mov
cld
aad
bound
int
adc
add
push
cmc
adc
xor
add
add
cld
pop
sbb
xor
aam
ljmp
in
fiadds
fiadds
outsb
fdivrl
sti
gs
xchg
or
xchg
out
jle
add
xor
insl
in
fistpll
insl
repnz
jmp
andl
add
inc
add
in
inc
sub
jmp
scas
adcb
jmp
dec
cmp
mov
in
push
xchg
jmp
add
addr16
adc
and
add
add
add
add
jb
adcb
bound
dec
jb
js
jmp
adc
inc
or
stc
jmp
in
aas
add
decb
inc
sbbb
js
inc
jne
nop
cmpsl
add
push
test
jb
xorl
clc
or
and
push
add
ficomps
mov
add
mov
hlt
orb
dec
fidivrl
out
addb
sarb
jbe
mov
movl
sbbb
rorb
mov
sarl
mov
addb
ds
aad
or
lods
aam
dec
inc
std
decl
ret
addl
pop
mov
jecxz
outsl
into
sarb
out
sub
cmc
mov
add
das
js
cvtdq2ps
je
pushf
lock
aad
inc
cmp
ja
xor
jae
div
adc
repz
pop
xchg
xor
push
jmp
inc
out
into
add
or
adc
lcall
mul
outsl
sbb
cli
push
int
nop
loope
pop
add
push
add
and
out
movsl
repz
cltd
arpl
add
ljmp
loopne
jno
sub
into
add
addr16
hlt
add
xorb
lret
leave
insl
pop
pushf
inc
jmp
mov
cmc
inc
lea
mov
test
xlat
mov
out
mov
mov
stos
aaa
stos
dec
mov
aam
lea
adc
or
ja
popf
xor
and
out
insl
mov
add
add
mov
cmp
pushl
addl
in
andl
xor
jl
jle
jns
mov
pop
jbe
adc
adc
jge
add
sti
jl
and
shr
add
jmp
out
out
dec
insl
stc
aas
mov
addr16
jmp
in
adc
call
fs
in
add
in
test
stos
lret
in
int3
add
mov
in
andl
push
dec
push
aad
mov
add
lea
out
pushf
mov
jle
hlt
adc
notb
lret
fsubrp
idiv
imul
dec
cld
addb
add
add
out
idiv
cmc
and
add
push
jge
hlt
jo
notb
sub
pushl
ljmp
rolb
popl
add
xor
dec
push
out
mov
pop
push
mov
jg
sub
out
aas
adc
sbb
cld
xor
bound
jb
inc
mov
hlt
xor
call
stos
pushl
and
andl
cld
jl
inc
xchg
jb
push
cli
lock
gs
add
pop
jle
rcr
mov
and
jbe
mov
jb
mov
push
in
test
jge
jmp
cmp
in
dec
mov
pop
mov
mov
mov
jbe
pop
daa
outsb
gs
jmp
daa
out
pop
subb
push
ret
jbe
gs
pop
mov
data16
add
subl
add
outsl
aaa
mov
jne
jbe
jo
fs
pop
mov
jle
out
in
mov
gs
cmp
scas
pop
pop
scas
add
add
add
jg
add
mov
dec
pop
pusha
outsl
cli
inc
cli
pop
das
dec
repnz
sub
out
les
pop
shl
leave
pop
stc
push
mov
push
stc
cmp
ss
lock
dec
mov
ficoms
push
pop
imul
mov
stc
mov
push
scas
push
loope
in
push
inc
je
addr16
stc
fs
lock
mov
mov
add
idiv
sub
imul
inc
jmp
std
and
mov
pop
je
jle
test
fdiv
push
mov
fmuls
fsubrp
idiv
enter
or
lea
lret
sbb
notb
aaa
dec
lea
add
add
cmp
xor
push
jnp
adc
incl
and
mov
test
cmp
stc
mov
mov
je
in
cmp
insb
out
stc
nop
jmp
orb
movsb
pop
stc
jo
inc
add
sub
cld
gs
aam
push
outsb
stc
dec
out
jle
inc
stc
insb
call
xor
andl
add
pop
jp
ret
jno
stc
bound
jo
pop
out
jo
add
push
push
or
outsb
jge
jo
shlb
xlat
sti
push
jo
pop
add
daa
into
popa
lcall
mov
popa
cmpb
jb
insb
xchg
pop
sahf
popa
inc
jmp
daa
testl
add
add
popa
inc
clc
ficompl
xor
xor
loop
lods
ja
push
loopne
cmp
jecxz
pop
popa
adc
xchg
jb
popa
je
sub
imul
pop
std
jno
test
add
xchg
pop
pop
in
mov
xchg
pusha
mov
mov
js
clc
cmpsb
push
mov
cmp
add
add
add
and
cld
imul
xchg
je
pop
stc
pop
testb
mov
negb
jl
pop
stc
ss
faddp
in
popa
inc
je
imul
push
out
clc
push
mov
mov
jb
sar
notb
push
adcl
stc
and
or
fs
ret
mov
add
clc
push
sarl
push
sbb
and
notb
aam
or
testb
ret
push
mov
mov
mov
lea
aam
sub
jge
push
xchg
add
ret
cs
adc
mov
aam
mov
fldcw
push
mov
dec
push
aam
in
add
add
inc
stc
mov
xchg
or
iret
jae
inc
adc
add
test
stc
pop
xor
in
inc
xor
leave
pop
insb
test
cmp
int3
mov
inc
int3
stos
pop
jne
fs
push
pop
pop
stc
sub
inc
insl
je
std
stos
or
insb
std
mov
and
outsb
cmpsl
xchg
mov
movsl
ljmp
std
mov
add
add
jge
push
iret
mov
out
fwait
movsl
pushl
insb
std
sub
hlt
fdiv
and
jecxz
sub
lcall
mov
xor
aas
sub
jnp
mov
clc
loopne
mov
mov
subb
add
add
push
xor
xchg
outsb
push
jp
add
hlt
mov
outsl
test
add
add
add
xlat
adc
int
inc
jmp
mov
push
xor
xor
aas
sub
jp
cmpl
sub
sti
xchg
stc
insl
lds
lods
inc
roll
cltd
jp
or
bound
mov
or
jbe
fimuls
lahf
adc
mov
add
sbb
fcmovne
mov
into
mov
mov
and
pop
adc
inc
insb
pop
stc
jbe
xchg
or
clc
mov
in
mov
cmpsb
pop
xchg
inc
or
stos
xlat
cmp
in
call
fsubs
stos
in
dec
sbb
outsb
int3
test
pop
or
adc
lret
or
ja
pop
mov
add
add
insb
sbb
xor
adc
cmp
cmpsl
cwtl
decl
dec
mov
or
insb
inc
cmp
add
jle
pop
mov
out
xor
mov
pop
add
add
pop
jnp
push
test
add
push
push
andl
stc
incl
add
add
jecxz
out
std
sub
in
sub
push
out
std
test
cld
jmp
jecxz
outsl
outsb
out
xchg
cmp
out
std
xchg
add
aad
das
pop
in
scas
add
insb
jp
jb
jnp
out
lods
add
and
inc
outsb
aad
add
insb
jp
and
add
out
call
add
insb
xor
das
xlat
xor
xchg
fcmovnb
fs
add
imul
out
jnp
out
out
pusha
into
sahf
jle
ja
add
mov
add
add
addr16
add
inc
add
add
cld
mov
out
out
sbb
pop
dec
out
out
ja
out
out
test
fidivl
pusha
out
call
mov
jge
fs
out
pop
stos
mov
add
pop
adc
repz
out
into
jge
xchg
iret
jno
aam
push
push
pop
mov
lock
test
cmpb
mov
xchg
cmp
call
jb
push
icebp
je
addb
push
dec
loope
add
rclb
pop
stc
ficomps
mov
cld
mov
jmp
imul
and
pop
push
push
gs
stos
testl
int3
mov
inc
int3
lods
out
inc
int3
cmp
push
dec
icebp
mov
call
jmp
call
sub
outsb
push
mov
int3
sub
jmp
dec
mov
faddl
add
add
add
add
add
add
and
dec
rolb
add
add
add
add
inc
outsb
adc
add
add
cmpl
dec
add
incb
push
ret
or
clc
dec
add
mov
ds
or
add
add
add
add
ror
push
bswap
int3
inc
bswap
int3
dec
ret
jl
jp
jnp
add
push
cmp
add
out
mov
or
pop
stos
std
test
add
add
cmp
pop
ljmp
lods
std
test
xchg
int3
mov
loope
int3
mov
and
xor
sbb
in
insb
jo
jge
pop
lret
push
bound
insb
push
pop
mov
ja
fistpl
call
pop
pop
clc
jl
pusha
add
je
mov
inc
je
loope
idivl
sbb
xchg
cli
je
xchg
in
int
ss
push
sbb
sub
test
dec
rep
push
pop
push
mov
inc
sbb
sub
cmp
inc
sub
sbb
jp
mov
jp
pop
inc
push
iret
xlat
jp
andb
ret
mov
mov
lods
adc
or
ret
lock
lock
mov
fistps
cmp
add
in
sub
sbb
dec
mov
mov
dec
cmp
xchg
mov
jnp
or
adcb
andl
mov
movsb
add
mov
and
test
push
add
inc
jmp
out
shlb
test
cwtl
int3
xor
rolb
pushf
jge
jge
std
mov
pop
out
mov
fisubs
stc
push
pop
xor
idiv
dec
je
scas
push
mov
mov
sbb
divl
pop
stc
hlt
in
inc
jmp
or
add
inc
stc
popa
aam
je
mov
pop
xorl
test
mov
addb
dec
cld
imul
lret
int3
ficompl
int3
int3
cli
sbb
int3
cli
sbb
int3
arpl
jmp
test
in
or
and
add
and
xchg
repz
je
cwtl
outsb
xor
add
into
lods
add
mov
sub
push
mov
es
inc
adc
xchg
or
adc
out
fs
sbb
adc
mov
jge
loop
pop
movsb
out
inc
pop
or
xor
xor
js
jecxz
xor
bound
jmp
shlb
adc
sub
adc
hlt
mov
pop
pop
sub
pop
and
js
insb
jo
jl
push
jae
mov
jmp
inc
int3
stos
jo
int3
mov
mov
mov
insb
daa
or
out
idivl
in
cmp
cwtl
dec
daa
or
mov
ljmp
hlt
mov
sub
aam
mov
pusha
dec
cmpsl
sti
call
ret
loop
out
out
addb
dec
sub
sbb
aas
xor
aas
sub
aas
xchg
out
pop
icebp
out
out
imul
add
xchg
pop
xor
cmc
jg
mov
add
pushf
std
add
add
pop
dec
lea
test
mov
in
mov
in
add
add
ds
fldcw
add
scas
push
mov
punpckhdq
xchg
in
add
mul
add
call
in
xchg
idiv
call
mov
aas
int3
sub
imul
add
push
jb
or
jmp
pop
lods
sti
and
sti
mov
clc
xchg
into
jg
mov
call
imul
out
lret
cmp
mov
push
adc
add
mov
inc
add
mov
xchg
push
dec
stc
decl
jg
or
adcl
scas
adc
add
add
pop
xor
jl
outsb
adc
cwtl
cmc
mov
pop
adc
add
pushf
or
mov
xorb
nop
push
sbb
mov
pop
rorl
mov
test
inc
xchg
out
mov
test
mov
test
adc
pushf
push
sub
add
out
mov
int3
mov
sbb
xor
dec
int3
sub
and
test
rol
pop
outsb
jo
test
jecxz
fistpl
push
outsb
cwtl
pop
test
dec
adc
pop
jo
or
in
mov
es
in
add
in
cmp
add
add
daa
or
add
sub
out
pusha
jnp
or
add
sub
out
push
add
cmp
out
pusha
jnp
or
add
xor
out
push
outsl
shl
out
test
pop
rcrb
outsb
mov
push
test
lods
sub
dec
jl
pop
rorb
add
nop
cltd
add
add
shr
out
mov
dec
and
dec
out
sbb
sub
rorl
jae
bound
add
add
push
test
fsts
sub
and
add
pop
cmp
sub
inc
lret
inc
popa
bound
in
sub
jecxz
pop
and
jb
xchg
or
sarb
sahf
fstps
adc
in
dec
xor
fsts
shr
mov
lcall
repnz
call
pop
leave
sti
jb
push
jge
mov
stc
movsb
adc
fs
addl
add
add
add
mov
inc
dec
movsb
dec
cmp
add
add
inc
cmp
add
jne
jge
and
add
add
xorl
add
aaa
or
cli
mov
lock
add
and
shll
cmc
test
mov
faddl
mov
js
hlt
ret
scas
jae
lds
lea
add
add
loope
sti
or
jge
pop
xchg
inc
lret
inc
or
imul
mov
xor
mov
test
out
xlat
lock
or
js
repz
adc
sbb
jae
fcomps
dec
out
jmp
jb
inc
outsb
dec
imul
cmpb
sub
dec
int3
and
in
dec
cltd
imul
into
and
and
push
mov
andb
call
add
xchg
repnz
out
orl
out
out
cmpsb
add
lea
outsb
fchs
jl
push
push
mov
push
or
out
xchg
inc
shll
add
inc
sbb
shll
or
add
std
out
mov
insb
inc
repz
lods
rcrb
loope
jg
fsubr
add
loope
orb
mov
loope
xor
in
add
in
sub
add
mull
add
jmp
cmc
push
mov
jmp
cs
or
outsl
fsqrt
push
dec
add
lahf
push
jae
insl
stos
push
bound
lods
mov
lods
sub
int3
cmp
pop
jge
js
push
jb
sti
mov
jmp
push
shll
stc
mov
push
pop
ret
daa
push
add
in
addl
xor
mov
stc
inc
icebp
add
add
xchg
mov
mov
jge
imul
incl
out
xorb
lret
in
jge
jl
cld
aad
jne
in
push
test
add
mov
icebp
cmovae
add
add
add
stc
incl
add
add
ja
push
jle
mov
jle
add
jns
sarl
scas
mov
sub
add
pop
filds
xchg
add
adc
pop
or
sbb
mov
pop
inc
out
clc
cmpsl
inc
or
clc
aam
adc
mov
sub
xchg
dec
pushf
call
pop
std
xor
dec
mov
sub
push
bound
add
add
xchg
adc
pop
mov
inc
jmp
jl
pop
std
popa
mov
filds
push
mov
js
dec
daa
adc
test
lock
clc
pop
add
push
jmp
add
jg
add
push
or
out
out
jns
push
faddl
out
testl
pusha
mov
icebp
add
or
add
add
enter
jl
addr16
xor
mov
cld
outsl
rol
fbstp
in
out
bound
roll
out
jmp
imul
add
hlt
jp
or
jae
out
addb
out
jp
cwtl
aad
out
in
push
add
pushf
repnz
bound
enter
pop
scas
add
mul
add
orl
add
out
bound
jl
in
bound
test
mov
inc
stc
xchg
mov
stos
mov
xor
adc
xchg
mov
mov
stc
jmp
adc
jge
inc
stc
repnz
pusha
fisubrs
mov
xor
loope
mov
pop
pusha
cmpsl
popa
bound
ja
mov
jle
adcl
cmpb
add
add
add
mov
test
call
lds
or
nop
addr16
stc
pushl
insb
push
add
jp
in
decl
ret
fldl
or
js
mov
subl
mov
push
pop
shll
push
stc
mov
insb
push
add
add
add
lods
jp
out
rcrl
punpckhbw
js
dec
mov
mov
mov
xchg
outsl
push
out
test
rcr
adc
xchg
adc
pop
mov
loop
or
adc
pop
mov
pop
mov
ss
daa
mov
bound
dec
xchg
inc
movsb
fwait
mov
aaa
das
std
decl
pop
out
mov
cmpb
sub
std
jl
add
add
sbb
pop
mov
push
out
lret
jo
outsl
xchg
cmc
add
sbb
ret
xchg
xchg
daa
or
add
dec
stos
xor
mov
roll
out
xchg
out
bound
add
add
cli
mov
pop
lret
call
add
mov
adc
fwait
sbb
add
rolb
or
aaa
into
mov
pop
xlat
in
push
pusha
xchg
jnp
mov
bound
jnp
jmp
add
in
bound
insl
inc
stc
pop
bound
add
sbb
inc
stc
jb
jg
jmp
in
mov
js
push
dec
or
or
jns
adc
adc
jnp
jmp
imul
test
xchg
jb
or
xchg
mov
sub
stos
adc
add
mov
mov
push
jle
pop
mov
lea
add
add
add
pop
rcrl
nop
cmpsb
cmp
dec
cli
call
push
sahf
mov
xor
add
xchg
mov
mov
iret
pusha
or
mov
ljmp
pushl
or
add
mov
fldl
es
js
mov
jae
fldcw
std
xchg
add
add
cmp
pop
std
ljmp
cmp
adc
mov
imull
stc
out
pop
mov
jl
arpl
jne
lahf
pusha
std
cmp
out
out
stc
incl
xor
insb
mov
out
outsl
xor
and
adc
sub
inc
std
jmp
jge
and
push
pop
ja
bound
jnp
out
mov
jecxz
and
mov
aaa
add
jge
jl
add
mov
repnz
add
sbb
hlt
mov
cmc
add
jl
or
neg
mov
aad
out
cld
das
call
sbb
loop
jb
ja
flds
out
pop
mov
adc
xor
cmpsb
fbstp
push
out
stos
inc
ljmp
add
add
mov
cld
mov
out
jl
add
add
xabort
out
out
loope
sarb
add
in
inc
icebp
in
add
sbb
add
scas
sahf
ss
in
jge
cmp
daa
sbb
or
stc
push
cmp
test
push
int3
cmp
das
dec
bound
adc
jmp
mov
add
jmp
jb
test
dec
dec
fisubs
adc
push
imul
jmp
popa
jnp
jmp
jecxz
adc
jbe
jmp
ret
or
cmc
mov
xor
or
insw
fnstcw
xchg
rorb
pop
xchg
adc
add
add
icebp
fbld
xchg
roll
add
sbb
stc
incl
xor
mov
es
loop
jle
mov
mov
add
mov
mov
add
or
je
mov
push
add
dec
fbld
cli
test
bnd
sub
movb
add
dec
jp
jge
push
jne
jae
std
incl
cmpl
or
mov
cmpsb
das
jbe
cmp
test
icebp
jmp
inc
cld
addl
mov
cltd
pop
test
inc
notb
pop
je
test
repnz
mov
xchg
icebp
test
icebp
incl
add
aam
test
jl
or
jbe
adc
add
xchg
imul
sbb
fwait
sub
inc
mov
add
in
orb
push
push
in
cmpl
jecxz
pop
aad
out
jle
sbb
fisttps
pop
jge
adc
add
cmp
int
or
je
out
add
jb
jne
or
add
lds
pop
mov
pop
adc
add
jno
push
pop
push
add
jg
pop
jno
or
cmpsl
clc
or
jmp
xchg
add
xor
mov
lds
sub
call
cmp
add
adc
in
jl
and
lock
add
stc
pop
sbb
lock
jnp
jmp
lret
lea
call
fprem
push
pushf
orb
lea
call
into
testb
mov
add
mov
idiv
xchg
push
in
ret
add
lret
int3
imul
mov
cmp
clc
je
mov
stc
incl
add
add
mov
jecxz
add
add
cltd
push
add
mov
add
mov
jnp
mov
orb
ds
push
test
add
inc
xchg
jl
out
mov
out
std
and
push
cmp
sub
rorb
xor
push
push
mov
cwtl
lahf
xor
incl
add
add
xchg
pop
inc
inc
repz
ljmp
test
xor
movsl
jae
stc
sub
clc
daa
push
jl
fistpll
xor
jb
or
add
in
or
xchg
add
faddp
xor
stc
sub
cld
sbb
std
test
arpl
add
or
pop
cmp
push
jl
incl
add
add
cmp
dec
adc
add
adc
add
in
cmp
jmp
jae
fdivs
mov
adc
loope
xchg
das
repnz
jl
add
mov
lock
adc
xchg
outsl
jge
add
mov
lock
jnp
adc
jae
push
out
outsb
cli
xchg
imul
pushf
loope
es
sbb
jnp
add
add
add
in
bound
jl
jmp
mov
mov
add
aaa
or
jo
in
add
add
jle
and
pop
loop
mov
mov
fdivs
stc
jo
bound
inc
orl
mov
stc
mulb
mov
cmp
les
mulb
mov
in
test
ja
push
loope
pop
sti
ja
jmp
test
adc
loopne
add
repnz
sti
movl
and
add
adc
add
push
int3
loop
aaa
mov
pop
lret
mov
mov
lods
inc
stc
mov
test
je
sbb
inc
mov
mov
mov
or
jle
push
test
and
fimuls
testb
cwtl
push
daa
stc
push
dec
or
stc
cmpsl
cs
ljmp
xor
xchg
push
jbe
jae
std
ljmp
imul
testl
jne
pop
mov
add
cmp
std
decl
fcmovne
or
std
jmp
loope
mov
mov
sti
data16
inc
sub
push
call
ljmp
mov
pop
inc
out
mov
fsubrs
jnp
shrl
std
mov
add
add
call
into
cmp
mov
cmp
jns
insl
sub
scas
or
sti
pusha
jnp
add
add
add
add
insb
pop
or
bnd
adc
hlt
mov
mov
add
js
or
out
daa
sbb
or
mov
mov
fcomp
push
pusha
xchg
sub
mov
outsb
scas
lods
stos
outsl
mov
out
orb
out
stos
xchg
pusha
add
push
add
out
xchg
push
add
fucomip
mov
push
jmp
or
jl
sub
sub
jmp
mov
adc
stc
jmp
sbb
inc
mov
movsl
int3
dec
jg
pop
in
bound
push
dec
insb
adc
in
jo
dec
adc
push
movsb
push
or
dec
jnp
jmp
das
mov
test
and
jmp
loope
notl
test
sbbb
nop
mov
pop
ret
idiv
call
push
add
jmp
or
pop
and
mov
test
push
ret
repnz
int3
rcl
lret
int3
rcl
lret
int3
je
mov
lea
add
into
xchg
inc
add
leave
clc
jae
add
add
pop
jl
mov
movl
pop
inc
fistps
subb
xor
rolb
out
jmp
add
sbb
jb
mov
ljmp
nop
mov
sbb
pushl
xorl
fs
add
out
std
mov
repz
out
inc
int3
xor
dec
int3
sub
inc
push
pop
int3
and
out
inc
inc
push
aam
shlb
out
push
ret
fidivrs
fimuls
stos
movsl
test
add
cwtl
jg
std
lcall
test
add
mov
adc
hlt
add
add
fimull
xor
sbb
cmp
pop
imul
out
outsl
xor
out
xchg
test
aam
add
add
jl
sbb
das
sbb
add
loope
cltd
xchg
pop
sbb
add
ret
cli
test
icebp
add
sub
mov
roll
out
and
push
sbb
xor
inc
sub
inc
pop
mov
addl
cmp
insb
add
in
test
insb
adc
fisubs
push
loope
jno
sbb
add
aam
aaa
adc
insb
adc
in
sbb
cmpsl
ret
adc
popf
mov
add
insl
jl
add
cwtl
aas
int3
xor
test
int3
mov
pop
push
test
int3
jge
cmpsl
mov
loope
mov
bound
test
daa
les
bound
test
cmc
shl
decl
incl
add
add
cmpl
push
or
in
rcll
adc
mov
jns
or
mov
pop
mov
dec
jle
add
xchg
lds
or
mov
add
mov
push
inc
adc
fildl
push
pop
pop
ror
push
jns
or
dec
lea
sub
data16
add
sbb
lea
add
add
inc
pop
mov
clc
pop
add
or
mov
test
mov
sub
aad
inc
or
mov
adc
pop
fistps
popa
outsb
fisttps
mov
hlt
in
loope
fildl
lock
fs
add
stos
xor
push
insb
inc
xchg
mov
jle
and
inc
xchg
fiadds
jmp
sbb
shlb
add
aaa
jmp
cmpsl
dec
jp
add
sbbb
out
repnz
shl
add
mov
fiaddl
out
arpl
pusha
ljmp
add
mov
movsl
pop
fsubs
daa
stc
and
insl
pop
sbb
add
mov
faddl
sub
mov
aam
add
mov
rolb
out
imul
add
add
movsl
outsl
sbb
imul
pop
out
out
jno
aad
out
sbb
inc
push
loop
push
icebp
add
push
aam
jmp
insb
mov
xchg
rolb
add
imul
add
cmpsl
push
cmp
call
xor
add
scas
sub
mull
xor
out
imul
bound
adc
in
mov
add
jmp
in
dec
pusha
push
adc
in
jno
orb
fistpl
stc
add
push
add
jp
add
push
jns
adc
push
sbbl
add
add
add
into
add
add
mov
sti
ljmp
jnp
xchg
add
add
adc
mov
push
pop
adc
push
orb
les
iret
push
mov
jb
push
test
orb
mov
adc
push
pop
mov
adcb
mov
cli
mov
sbb
add
add
out
cmp
mov
jmp
cmpb
xor
stc
pop
or
out
jge
rcrl
std
test
or
out
movb
iret
jge
in
sbb
test
push
mov
enter
sbb
out
push
mov
ret
int3
sub
int3
and
int3
sbb
mov
insb
mov
add
out
mov
xchg
orb
and
out
add
jbe
mov
add
rorl
sub
cmp
jbe
repz
out
add
xor
fiadds
add
sbb
mov
add
jno
out
ret
mov
test
jl
out
jno
sti
ret
out
adc
mov
hlt
jmp
jno
in
add
add
gs
test
xor
out
jno
sti
repz
out
lret
addr16
ljmp
sub
test
lods
jae
fs
call
adc
in
mov
clc
in
test
in
pop
sub
imul
push
call
in
mov
lods
movsb
idiv
push
adc
jmp
pop
cmp
sub
pop
cmp
pushf
jae
test
add
push
cli
jns
lcall
lahf
inc
cmp
jb
jmp
je
adc
in
mov
int3
adc
jmp
fdiv
or
outsl
adc
ds
inc
adc
adc
push
add
dec
adc
or
mov
dec
push
cmpb
into
add
mov
adc
arpl
out
repnz
jmp
mov
pop
shr
jg
add
jnp
push
jle
orl
add
add
fisubrl
les
mov
int3
lcall
int3
out
test
insb
fisttps
pop
ds
dec
int3
xor
test
mov
test
data16
cltd
jno
out
std
call
sbb
ljmp
xchg
outsb
loope
push
and
xchg
aaa
mov
pop
add
sti
mov
xchg
ss
sti
cwtl
push
jle
fbstp
xor
insb
movsl
fs
sbb
jmp
jge
and
pop
sub
pop
add
cmp
cmp
decl
fs
mov
inc
mov
outsb
shr
cmpsl
scas
hlt
js
movzbl
mov
add
incb
out
out
orl
out
out
dec
fidivrs
add
add
orl
mov
add
fsubl
mov
js
syscall
sti
push
add
add
add
test
mov
outsb
mov
add
add
bound
jnp
icebp
outsl
cmpl
pushf
mov
in
pusha
cltd
addr16
in
xchg
adc
jmp
lds
add
addr16
outsl
imul
sub
in
test
add
add
or
jmp
cmpsb
shl
cmp
and
pop
ja
add
mov
ret
pop
stc
addr16
adc
pop
add
add
xchg
hlt
test
test
or
jle
int3
loop
dec
or
push
ds
pop
mov
sahf
or
or
adc
mov
popf
or
add
mov
test
mov
testb
adc
mov
sub
or
ret
mov
mov
jecxz
push
mov
jnp
jge
test
xchg
fstpt
out
or
sub
aaa
stc
pop
lods
inc
or
inc
aas
imul
testb
add
xor
es
and
inc
int3
sub
js
pop
sti
dec
pop
inc
or
jmp
lock
jl
sub
or
aam
stc
out
mov
data16
xor
out
add
data16
stc
out
mov
data16
stc
out
jp
cmpsb
or
faddl
test
sbb
lea
sbb
add
add
out
mov
add
notl
orb
loop
in
lahf
leave
sub
mov
push
add
mov
addb
nop
and
imulb
sub
pop
or
inc
loop
cltd
inc
repz
xchg
mov
push
add
test
bound
add
add
inc
or
in
es
in
mov
insb
dec
in
in
cmc
cld
mov
jmp
std
mov
push
push
jmp
sbb
mov
jmp
std
mov
push
push
in
jmp
std
mov
jmp
std
mov
push
push
out
jmp
std
mov
jmp
std
xor
push
push
loope
sbb
and
push
push
lock
std
xor
add
add
push
push
jecxz
push
std
and
push
push
bnd
std
xor
push
push
in
push
std
and
push
push
add
add
push
mov
icebp
add
add
push
jns
icebp
add
icebp
addl
lsl
sub
out
loope
add
imul
mov
push
in
mov
femms
aam
add
or
add
add
xchg
jns
jl
stc
xchg
add
add
out
add
incb
add
dec
addr16
add
scas
push
iret
pop
icebp
add
add
mul
loop
mov
sub
in
pushl
in
pushl
in
stc
mov
das
mul
stc
mov
sub
stc
mov
and
testb
add
in
stc
mov
adc
mul
push
stc
mov
and
mul
stc
mov
adc
mul
push
stc
mov
sub
mul
stc
mov
pop
mul
sar
mov
es
mul
loop
mov
push
mul
sarb
sub
push
fwait
cs
or
jne
add
mov
pop
js
out
cli
and
sub
pushf
mov
out
jle
lods
imul
ljmp
stos
xchg
pop
push
mov
int
and
into
jmp
sarl
out
and
jnp
adc
lret
addb
add
add
or
adc
add
add
sbb
shl
cwtl
out
cmpsb
add
into
mov
and
or
push
stc
jmp
cmp
xchg
xchg
sub
repz
and
or
sbb
jmp
in
add
jo
sbb
add
sub
xchg
test
sti
sub
popa
add
sub
loopne
jmp
popa
add
sub
out
dec
in
scas
pop
mov
jmp
imul
test
or
lret
jmp
idiv
lcall
pop
in
adc
pushf
mov
out
add
pop
sub
add
inc
mov
mov
ljmp
jp
xchg
pop
add
jmp
testb
pop
adcl
sub
adc
popf
jle
cmp
jmp
adc
popf
cmp
add
call
or
add
add
add
adc
call
add
test
mov
decl
pop
add
or
std
test
sub
jle
sar
jmp
sbb
mov
test
aam
in
stos
push
stc
out
std
test
mov
cs
sub
std
pushl
add
aas
imul
adc
mov
add
add
dec
sub
push
xor
sub
test
and
add
in
add
lea
mul
js
lock
pop
dec
mov
jbe
fcoms
add
es
add
add
add
ret
out
jo
aad
mov
add
imul
pop
xlat
inc
mov
mov
add
push
add
ret
out
xchg
sbb
add
aam
mov
into
es
cmp
push
out
aam
mov
out
add
sbb
add
aam
and
es
mov
jle
inc
jg
les
out
out
jecxz
out
ljmp
jmp
test
or
mov
add
jmp
sub
loope
add
add
add
jmp
or
add
in
add
aas
jmp
iret
sbb
push
ljmp
adc
mov
mov
stc
sbb
fsubp
add
bound
add
and
xchg
add
add
in
cmp
aas
jmp
cmp
aas
jmp
incb
sub
add
add
jg
add
xchg
mov
test
xchg
or
push
sbb
mov
sbb
and
and
jne
aam
pop
std
fcmovne
int3
arpl
jle
adc
or
add
sbb
and
cmp
stc
lret
and
or
sti
pop
test
add
add
rorl
pop
outsb
imul
ds
in
insb
clc
testl
out
std
jmp
jmp
xor
mov
rclb
stos
adc
js
aaa
pop
push
movsl
test
cld
jmp
and
xor
jno
mov
test
xlat
pop
cmp
test
cld
incl
add
add
mov
test
pop
inc
jnp
or
scas
and
xchg
xchg
imul
ljmp
fistps
insb
pop
sub
add
punpckhdq
ret
add
add
sub
add
mov
loopne
add
jnp
out
divb
imulb
add
loope
cmp
dec
jge
loopne
jp
les
or
aam
and
cmp
add
add
dec
repz
inc
ljmp
sub
add
add
add
dec
stos
hlt
jg
and
loopne
add
jmp
sub
call
fildll
add
outsb
cmpsl
add
jmp
xlat
dec
clc
cmpsl
add
mov
std
call
or
stc
jmp
add
jb
jge
sub
in
aaa
add
sub
xchg
out
xchg
xchg
mov
jmp
es
rolb
imul
jg
lds
stc
jmp
test
test
inc
pop
test
cld
test
jg
add
cld
leave
clc
into
or
add
pop
addl
mov
and
add
mov
add
add
and
ud1
incl
and
and
testb
xor
add
pop
add
ljmp
inc
jp
sarl
mov
pop
mov
lret
lret
int3
mov
inc
add
inc
add
pop
add
jg
add
jge
add
dec
pop
add
out
std
jmp
and
jmp
or
out
add
out
std
jmp
popa
jmp
imul
lcall
jp
call
addb
mov
incl
xchg
mov
add
mov
and
loopne
and
out
and
out
and
out
and
out
and
fldenv
stc
out
and
out
and
in
and
loopne
and
loopne
and
call
adc
stc
jo
lret
push
adc
addl
out
int
pop
mov
pop
xchg
punpcklbw
or
imul
testb
xor
mov
add
add
dec
pusha
scas
lret
lahf
ret
mov
stos
mov
mov
enter
rolb
add
add
jg
out
out
cs
jecxz
jo
out
out
stos
mov
sub
loop
fsubrl
sarb
popa
enter
mov
mov
mov
push
in
bound
in
add
push
and
call
and
lcall
cmpsb
pop
jo
sbb
add
add
adc
in
add
hlt
fistpll
xor
or
add
call
or
add
ljmp
jno
push
mov
add
imul
jmp
or
cmp
xorl
xor
stos
js
xorl
and
dec
add
add
mov
jge
jmp
add
addl
cld
fimuls
adc
push
push
add
fiadds
movl
or
add
push
push
pop
xchg
loopne
nop
ds
push
ja
cmp
cmp
int3
loopne
fildl
and
sub
mov
and
fwait
inc
cmp
xchg
mov
sub
cmp
sub
std
rorl
clc
jo
inc
mov
shlb
xor
test
jne
or
std
jmp
pushf
sbb
xchg
or
stos
pop
bound
xlat
imul
call
inc
int
sbb
jg
sub
cmpsb
stos
insl
sarl
jmp
add
mov
add
inc
ss
js
mov
std
repnz
int
stos
and
aas
repz
cmp
out
addr16
xchg
xchg
loope
rcl
movsl
jnp
sub
out
sub
outsl
add
pop
mov
mov
adc
jle
pusha
xchg
ret
inc
into
mov
sbbl
add
insl
pop
add
sub
jmp
add
mov
andb
add
cmc
test
out
icebp
or
push
or
dec
mov
push
dec
jb
loope
arpl
mov
ljmp
andl
cmc
gs
loop
stc
xchg
and
sub
add
jno
add
jmp
scas
push
mov
loopne
out
loop
stc
push
and
orb
add
jmp
movswl
loopne
loopne
out
loope
stc
add
sub
flds
sbb
andb
add
jge
jp
lcall
add
inc
and
sub
rep
jns
sub
dec
cmp
add
add
dec
sub
mov
jmp
jp
and
sub
jbe
add
add
sub
rorl
jne
sub
mov
mov
sbb
cmp
jne
sub
sbb
lock
stos
xchg
fdivrs
mov
xchg
cld
into
xchg
xchg
addl
test
add
add
loopne
in
jb
and
mov
or
and
lock
or
mov
sub
pop
and
mov
aad
stos
repnz
fnstcw
or
and
inc
or
pushf
fldt
or
push
or
push
ss
or
mov
pop
add
hlt
filds
adc
add
rcrl
hlt
in
out
pop
inc
shl
repz
jg
add
add
fimuls
loop
test
mov
sbb
pcmpgtb
shrb
or
inc
pushw
pop
xchg
hlt
or
xchg
xchg
icebp
cs
loopne
cli
lea
mov
add
sub
or
add
add
jg
add
add
push
sti
jae
in
ss
fbld
or
test
pop
bound
and
sub
mov
xor
and
in
add
or
ljmp
jle
jmp
in
bound
pop
rorb
movb
add
pop
sar
leave
or
lea
add
dec
jb
addl
cs
jge
add
xchg
jns
and
xlat
decb
cmp
inc
or
dec
in
paddw
add
add
fmul
dec
in
cmp
inc
or
or
mov
add
mov
jne
add
dec
sbb
add
fcoml
lcall
ljmp
loop
lock
mov
std
mov
jl
xor
je
cmp
mov
jns
ljmp
mov
dec
sbb
mov
lret
adc
pop
mov
fcmovb
cmp
add
add
int3
lret
ljmp
lret
adc
popa
fldcw
mov
jmp
movsb
pop
push
in
in
dec
sub
fmul
fsts
into
push
orl
or
mov
es
dec
sbb
dec
add
add
add
or
add
add
dec
out
add
add
les
add
add
dec
int
out
dec
repz
fcmovb
mov
add
bound
mov
mov
call
data16
shlb
add
in
mov
fists
jnp
mov
fincstp
inc
xor
push
cmp
cltd
pop
dec
insb
cmpsl
add
stc
cmpsl
or
mov
or
pop
pop
loop
ljmp
add
cmc
sbbb
and
pusha
adc
call
sbb
cmp
or
ljmp
jns
loopne
sbb
jb
aaa
bound
adc
stc
xchg
add
bnd
add
fsubrp
flds
add
loope
shlb
test
mov
adc
push
push
jmp
in
xchg
mov
sub
dec
int3
add
lret
int3
push
mov
in
adcl
push
push
xor
rorl
or
push
addb
cmp
mov
mov
inc
sbb
mov
mov
sub
jns
jne
dec
shll
adc
add
add
in
inc
dec
sbb
sub
ret
xorb
push
mov
in
mov
dec
add
nop
push
add
push
cmp
popf
icebp
addb
xlat
mov
xchg
dec
andl
in
mov
fcomip
aas
out
std
test
sbb
test
mov
mov
jmp
mov
mov
xor
cld
jmp
in
xlat
mov
xor
lcall
lock
xor
xor
push
decl
jo
and
jmp
dec
mov
insl
adc
jae
addr16
add
or
cmp
mov
lea
cmpsl
popf
popa
dec
imul
or
pop
lret
add
add
xchg
or
mov
dec
in
pop
in
popa
dec
in
jg
cld
enter
mov
xor
xor
xor
out
enter
adc
sub
imul
es
mov
call
inc
mov
cmp
lods
cld
clc
out
hlt
ja
xor
shll
dec
sub
les
mov
dec
in
xor
sub
loop
add
fidivs
ljmp
jmp
out
inc
aad
inc
fsubl
in
xchg
adc
jo
cmc
xchg
add
jmp
ds
stc
pusha
push
aad
movsb
mov
add
add
mov
add
or
add
inc
mov
add
add
stc
orb
mov
inc
add
sbb
in
dec
and
xchg
or
xchg
pop
or
inc
jne
or
add
jle
adc
jbe
xor
add
dec
push
or
mov
addl
mov
jg
adc
lret
or
jg
adc
cmp
loop
dec
lcall
cld
int3
inc
gs
add
dec
jae
push
jno
out
cld
cld
xor
mov
inc
hlt
mov
jmp
add
lds
jbe
clc
aas
jmp
jmp
mov
cmpb
in
cld
incl
add
add
fwait
sbb
cmpsl
loope
mov
pop
jecxz
in
jne
scas
inc
pop
shrl
add
out
addl
inc
stc
mov
cld
popa
out
stos
scas
inc
jns
int3
or
add
add
testl
fmull
cmp
cwtl
cmp
ljmp
sbb
pop
or
jns
int3
xchg
shl
xchg
mov
xchg
add
add
jns
jl
ljmp
hlt
mov
mov
push
int
pusha
dec
dec
sar
out
lret
and
pop
push
xchg
fstl
loope
in
sub
xchg
andb
xchg
mov
insl
inc
add
jb
test
add
push
jmp
xchg
sti
jnp
jge
xchg
jmp
add
cmp
clc
jmp
push
jg
jae
stc
jmp
pushf
jb
jb
mov
pop
mov
xchg
mov
loop
add
out
mov
sahf
int
jo
std
popl
inc
clc
sub
adc
sub
mov
call
add
mov
mov
orl
mov
add
jb
jle
addl
or
xlat
imull
shlb
pop
std
test
mov
mov
cmp
in
mov
incl
adc
repz
mov
add
inc
cmp
add
push
ret
dec
ret
push
sahf
mov
sarb
cmp
int3
repnz
int3
add
jne
insb
lahf
hlt
test
fildl
push
out
popa
mov
adc
jb
or
es
pop
and
enter
mov
jge
in
mov
pop
cmp
dec
insb
daa
add
sub
dec
adc
aas
int3
xor
aas
int3
and
add
sbb
ja
insb
and
jl
test
jmp
scas
jae
les
mov
or
inc
bound
mov
and
sbb
inc
xchg
out
daa
andl
sti
mov
xor
sti
out
stos
jecxz
add
shrl
lea
dec
sti
icebp
jp
fsubr
or
lea
sub
fnstcw
rcl
or
add
add
lea
jp
enter
bound
clc
test
pop
in
cli
cltd
movsl
pop
cltd
sahf
push
fdivrp
add
into
popa
imul
pushl
mov
clc
inc
lea
bound
clc
inc
adc
es
xor
ss
clc
call
loope
clc
jb
addr16
popa
push
jecxz
adc
push
cmp
bound
adc
mov
lds
dec
into
in
cld
lret
mov
lret
lods
iret
lret
repnz
sub
jbe
stos
jmp
out
in
add
push
test
mov
in
je
mov
incl
adc
inc
mov
xchg
jmp
int3
cli
cmp
int3
fidivrl
int3
int3
mov
or
adcl
cmp
pop
outsb
outsb
lds
dec
mov
jl
add
xchg
hlt
mov
enter
jp
and
add
or
shrb
ret
or
inc
jbe
test
sti
je
lret
popa
jp
or
mov
mov
fwait
jns
sbb
mov
push
mov
add
add
enter
test
jmp
sbb
mov
adc
pusha
xchg
gs
and
add
test
mov
mov
es
xor
push
insb
idivb
jmp
pushl
mov
bound
and
out
cwtl
adc
ljmp
and
out
incl
ljmp
sub
sti
test
mov
xchg
out
add
enter
aam
fld
mov
insl
out
test
out
out
out
out
xchg
or
push
lcall
mul
xchg
je
repnz
insl
add
inc
movsb
out
out
out
pusha
cmpsl
dec
lea
add
add
add
mov
ss
test
or
jmp
inc
out
jl
getsec
mov
push
outsb
inc
inc
mov
lods
hlt
fstpl
cmp
aas
ret
pop
hlt
push
cmp
mov
or
mov
test
fdivrp
clc
jb
push
push
mov
imul
jb
push
test
sti
mov
add
fdivrp
clc
jb
push
push
mov
sti
push
std
arpl
or
jns
test
ret
shl
out
cld
clc
mov
jno
ljmp
test
push
dec
cmp
push
adc
jge
or
dec
jge
cmp
out
xor
xchg
push
push
std
dec
adc
inc
or
jle
loopne
int
inc
add
xchg
mov
add
add
dec
push
pop
decb
inc
or
mov
test
mov
add
loop
lret
in
inc
mov
adc
mov
add
adc
repz
push
or
dec
lock
btc
jmp
out
add
adc
xchg
int3
mov
and
ja
out
xchg
lods
movsb
mov
pop
sub
push
cmp
add
imul
out
jbe
sbb
jmp
xchg
pop
pop
or
xor
stos
push
ss
mov
fs
icebp
andb
jbe
jg
aaa
test
xor
jl
loop
insl
repnz
mov
js
std
add
cmp
mov
aad
add
jns
sti
insl
popl
add
add
mov
or
push
add
aad
sub
pusha
xchg
arpl
xchg
add
repz
jnp
clc
int
inc
add
int3
jg
repz
add
and
gs
jl
pmaxsw
add
fs
inc
add
out
xor
and
insl
sub
pmaddwd
adc
and
mov
mov
lcall
jle
movsb
adc
push
fwait
je
dec
push
pop
mov
js
xor
in
add
pop
movl
jmp
mov
push
icebp
pop
inc
and
mov
test
iret
outsl
cli
xchg
test
ljmp
je
je
mov
or
add
add
add
add
in
add
jb
or
push
push
repnz
add
add
dec
add
pop
test
ret
lds
add
push
push
add
mov
addl
dec
idivb
enter
idiv
roll
or
pop
divl
fnsave
lcall
jnp
mov
std
adcb
add
or
add
sub
mov
add
sbb
ja
aas
sbb
testl
mov
lds
int
sub
into
std
clc
push
cmpsb
pop
pop
lcall
mov
jmp
cld
sub
push
fldcw
push
shrb
ret
insb
xlat
push
push
nop
push
add
out
mov
call
cmp
pop
pop
movsb
das
mov
jecxz
dec
shr
adc
ss
clc
mov
rorl
popf
add
mov
leave
lret
stos
push
leave
lret
mov
cs
jne
or
pusha
adc
data16
mov
push
test
add
dec
pop
add
dec
pop
add
add
jle
adc
jmp
ja
jl
pop
xor
mov
out
lock
punpckhdq
mov
decl
mov
pop
inc
xlat
stc
or
out
out
popf
fistpl
jecxz
cmp
lea
orl
insb
mov
add
add
jnp
lcall
mov
inc
fstpt
in
loopne
cmp
movsl
dec
add
in
mov
jb
jmp
inc
push
stc
pushf
outsl
jnp
jmp
and
jo
mov
lock
mov
testl
or
out
or
mov
mov
adc
les
in
add
lret
mov
cmp
push
pop
loopne
or
cmp
inc
add
cmp
gs
add
and
clc
jmp
movsb
jb
bound
adc
call
repnz
add
adc
mov
jbe
mov
xlat
or
mov
pushl
jp
adc
cmp
addb
out
divb
inc
add
mov
dec
or
cmp
cli
into
in
std
xor
sti
adc
add
inc
or
loopne
jo
idivl
cmpsl
push
or
dec
push
idiv
xor
or
push
or
popa
idiv
xor
push
jmp
push
stc
clc
lret
inc
out
daa
jo
lcall
adc
test
out
add
test
push
jl
fisttpl
push
add
test
mov
inc
test
add
add
into
jl
fisttpl
push
lret
loop
shlb
dec
or
test
out
sub
xlat
pop
push
sub
mov
sbb
sbb
adc
sub
mov
dec
aam
rorb
clc
sub
mov
js
mov
iret
testb
jno
sub
jno
add
add
sub
dec
or
insl
lds
hlt
push
cmpb
mov
shl
push
xor
add
out
or
and
in
stos
add
iret
fsubl
in
adc
aaa
fsubl
in
sti
add
nop
aad
popl
popa
add
out
sub
mov
jecxz
jmp
xchg
sub
push
add
insl
mov
xchg
jmp
dec
jecxz
jmp
cmp
cmp
popa
inc
or
loop
jmp
sbb
shr
fstpt
in
call
jecxz
sti
into
cmpsl
add
in
jecxz
jmp
mov
add
call
lret
daa
add
add
add
sti
add
cltd
dec
pop
inc
add
or
call
pop
xor
dec
push
notl
xchg
std
add
mov
inc
add
adc
cli
mov
cmp
xor
mov
and
jnp
and
xor
negl
adc
ret
imull
jp
mov
pop
and
js
mov
add
add
pop
and
add
jmp
jns
mov
and
mov
and
mov
and
shl
adc
xchg
test
xlat
fdivl
mov
cwtl
negl
adc
mov
in
loope
sub
mov
loop
or
inc
and
mov
cvtps2pi
cmp
add
pop
pop
pop
xor
add
pop
and
insb
sbb
neg
ror
cs
mov
mov
push
dec
cmp
in
out
inc
and
jae
or
add
aaa
add
pop
sub
ds
in
xchg
sarl
lcall
mov
lods
mov
cli
xor
cld
sahf
dec
xor
popa
mov
ret
stos
imul
sub
add
movsb
add
jo
xor
mov
lds
scas
sbb
and
jp
es
sbb
xor
sbb
sub
sub
pop
cli
mov
cli
lea
add
or
inc
sti
push
xchg
clc
xchg
jae
xor
push
pop
aas
out
sbb
ds
cmpb
aas
or
int
pop
jb
cld
cld
scas
cli
lock
jecxz
imul
xchg
fcmovb
pop
pop
cmp
add
pop
cmp
add
jne
add
push
call
inc
jmp
pop
in
push
insb
and
bound
cld
and
mov
call
mov
cmpb
and
push
cld
out
paddsb
rol
addb
out
jmp
in
rolb
jbe
mov
ret
cmp
add
ret
into
add
ret
inc
daa
and
inc
aas
and
mov
orl
or
loop
adc
out
loope
lret
ljmp
xlat
cmc
es
sbb
sti
shlb
or
es
divl
lds
and
pop
and
mov
and
xor
mov
sub
add
add
xor
jmp
inc
cld
test
mov
aas
clc
push
hlt
arpl
test
decl
decl
push
push
pop
or
fistps
lcall
sbb
icebp
jb
pop
outsl
or
rolb
mov
cmp
cmp
push
insl
mulb
jge
decl
adc
jno
mov
push
xchg
les
out
cld
call
jae
and
pop
push
dec
mov
cmp
andps
repz
shl
ds
mov
mov
hlt
inc
jnp
add
add
pop
push
inc
cs
roll
stos
mov
dec
push
ret
sbb
ret
fistpl
push
add
bound
or
rcll
arpl
insl
aas
or
xor
arpl
cmp
push
add
outsb
dec
or
aas
add
aaa
in
and
aaa
jmp
xchg
out
icebp
icebp
arpl
std
mov
sbb
jg
or
adc
pop
adc
push
add
daa
sub
in
sub
adc
fdivr
jmp
mov
add
xchg
and
inc
push
add
data16
clc
fdivrs
and
jmp
pop
fdivr
or
and
or
in
add
cmp
clc
add
cmpsl
and
jmp
jmp
and
add
and
add
push
add
or
idiv
push
inc
cmp
push
inc
cmp
incb
add
test
inc
cmp
sbb
add
xlat
idiv
or
inc
cmp
mov
xlat
idiv
cli
or
add
or
add
add
or
idiv
sbb
cmp
jle
cmp
jle
add
test
or
cmp
ds
add
or
idiv
sbb
roll
in
cld
incl
add
add
or
clc
sbb
ds
cld
jmp
jmp
fdivrs
out
fdivrs
out
cld
jmp
leave
in
clc
fmul
sti
ds
sti
ds
cld
jmp
test
inc
ds
inc
ds
cld
jmp
mov
clc
cwtl
inc
das
aas
out
das
aas
out
cld
jmp
imul
aas
out
in
aas
out
cld
jmp
dec
in
clc
pop
aas
out
aas
out
in
aas
out
cld
jmp
add
add
add
add
add
mov
cltd
fistpl
repnz
stos
repnz
lahf
repnz
xchg
repnz
mov
out
dec
repz
outsl
repnz
arpl
out
daa
repz
or
out
push
out
repz
sub
out
sub
out
psllq
add
std
out
repnz
jmp
out
fcomip
out
shl
out
lret
repnz
or
out
scas
repnz
mov
repnz
call
in
psubsw
xlat
psubsw
pop
psubsw
pop
psubsw
sub
jmp
in
psubsw
mov
psubsw
mov
jmp
in
push
jmp
in
psubsw
ret
psubsw
add
add
lahf
psubsw
fwait
psubsw
xchg
psubsw
psubsw
fisttps
jmp
in
psubsw
mov
psubsw
jnp
jmp
in
psubsw
mov
str
les
add
adc
js
dec
add
add
push
add
adc
add
incb
or
push
add
adc
add
incb
add
incb
cld
adc
add
adc
add
adc
add
adc
add
mov
add
adc
add
adc
sub
mov
sub
mov
and
jle
and
out
cld
sbb
in
cld
pop
imul
cld
adc
in
cld
maskmovq
cld
or
in
cld
pop
xlat
in
cld
add
in
cld
call
in
cld
sti
lock
cld
imul
in
cld
repz
cld
out
fsubr
cld
jmp
in
cld
or
in
cld
shl
in
cld
test
imul
cld
mov
clc
ljmp
ljmp
xlat
ljmp
lock
loopne
cld
mov
ljmp
call
add
add
or
out
xchg
out
outsl
or
out
push
or
out
pop
or
out
addr16
out
or
add
or
out
sub
out
push
or
out
xor
out
sub
out
add
out
sti
or
add
add
add
or
add
or
add
or
add
or
jmp
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
psubsw
pop
or
in
or
in
or
in
or
in
or
in
adc
in
adc
in
adc
in
adc
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
jle
mov
jle
mov
mov
mov
mov
lods
push
jle
test
jle
movsb
push
dec
pop
mov
push
ds
cwtl
push
ds
loopne
dec
pop
fmull
dec
pop
fmuls
ds
aam
ds
rorb
push
pop
int3
push
push
pop
enter
les
incb
rorl
push
pop
iret
push
push
pop
scas
paddd
fs
incb
jle
into
push
jp
into
push
mov
movsbl
insb
bswap
push
dec
push
into
push
movsbl
inc
push
mov
in
cld
aas
jmp
in
cld
xor
in
cld
pop
icebp
in
cld
sbb
in
cld
pop
loope
cld
adc
in
cld
and
in
cld
and
in
cld
pop
loope
cld
adc
in
cld
test
in
cld
mov
iret
in
cld
test
in
cld
and
in
cld
fldz
in
cld
cs
in
cld
repz
cld
out
ljmp
out
in
cld
jecxz
ljmp
loop
cld
xlat
cld
psllw
cld
or
ljmp
lahf
pop
out
cmpsl
pop
out
pop
pop
out
dec
pop
out
push
pop
out
std
or
add
out
sub
add
pop
out
jnp
out
add
out
mov
out
push
pop
out
imul
add
out
arpl
out
addr16
out
fwait
push
out
aas
hlt
out
and
out
and
out
repz
popl
out
xchg
push
out
popf
or
add
pop
out
das
pop
out
xor
out
pop
pop
add
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
adc
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
mov
add
or
add
mov
add
or
add
or
add
or
add
or
add
or
add
push
ds
push
dec
add
ds
adc
push
add
push
push
add
push
incb
into
push
incb
lret
add
push
add
add
incb
push
or
add
out
cld
dec
jecxz
cld
inc
fucomi
cld
inc
repz
cld
aas
jmp
cld
cmp
in
cld
aaa
fucomi
cld
xor
in
cld
das
jmp
cld
sub
in
cld
daa
fucomi
cld
and
in
cld
pop
jmp
cld
sbb
in
cld
pop
fucomi
cld
adc
in
cld
por
cld
or
in
cld
pop
fucomi
cld
add
in
cld
jmp
cld
sti
fsubr
cld
neg
in
cld
repz
in
cld
out
in
in
cld
jmp
in
cld
out
in
cld
jecxz
in
cld
fucomip
in
cld
fcmovnu
in
cld
xlat
faddl
out
mov
or
add
or
add
or
add
out
outsl
or
add
add
add
out
mov
or
add
or
add
out
inc
or
add
out
aam
out
xor
add
out
arpl
out
pop
or
add
out
addr16
add
pop
out
inc
pop
out
xchg
or
add
or
add
or
jmp
in
or
in
or
in
or
in
or
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
jmp
in
add
jmp
in
add
in
add
in
add
jmp
in
add
jmp
in
add
jmp
in
add
add
add
or
add
or
jmp
jmp
or
pop
aam
into
pop
inc
or
pop
cs
into
pop
rorb
mov
pop
enter
mov
mov
and
jle
lods
or
push
or
pop
pushf
or
cwtl
or
xchg
or
nop
or
pop
mov
ds
mov
dec
pop
test
dec
pop
orb
pop
mov
ds
in
push
push
pop
je
push
pop
jo
out
cld
imul
cld
addr16
fdivr
arpl
fdivr
pop
fstp
cld
pop
fstp
cld
push
in
fdivr
push
in
fdivr
dec
fstp
cld
dec
fstp
cld
inc
in
fdivr
jmp
fdivr
dec
fstp
cld
inc
in
fdivr
inc
in
fdivr
aas
fstp
cld
cmp
fdivr
aaa
in
fdivr
xor
fdivr
pop
fstp
cld
sbb
fdivr
pop
in
fdivr
adc
fdivr
paddusw
cld
or
fdivr
cmpsb
in
fdivr
add
fdivr
fstp
cld
sti
cld
imul
add
add
cld
out
pop
cld
out
sti
sti
out
paddb
add
cld
out
pop
cld
out
or
out
mov
sti
out
mov
out
fwait
sti
out
dec
std
out
mov
sti
out
imul
add
out
push
sti
out
push
sti
out
cmp
out
dec
sti
out
inc
sti
out
jae
out
dec
sti
out
jg
out
jae
out
ja
out
pop
sti
out
outsl
sti
out
arpl
out
addr16
call
in
pop
jmp
in
pop
jmp
in
pop
jmp
in
pop
jmp
in
pop
jmp
in
pop
jmp
in
pop
jmp
in
pop
jmp
in
pop
jmp
in
add
in
add
in
add
in
add
in
pop
jmp
in
add
in
add
jmp
in
add
or
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
push
or
adc
mov
push
or
add
or
add
add
test
or
add
mov
in
fdivr
lcall
cld
xchg
out
fdivr
mov
fdivr
mov
fdivr
xchg
fdivr
sub
cld
jle
fdivr
jp
fdivr
jbe
fdivr
jb
fdivr
shr
cld
mov
fstp
cld
mov
fdivr
mov
fdivr
lods
fstp
cld
test
in
fdivr
mov
in
fdivr
popf
fstp
cld
cltd
fstp
cld
xchg
in
fdivr
xchg
in
fdivr
fstp
cld
mov
fdivr
test
fdivr
sub
stc
out
int
out
mov
stc
out
sar
add
stc
out
test
out
mov
out
lods
stc
out
cltd
stc
out
xchg
stc
out
mov
stc
out
sub
out
and
add
add
cli
out
or
stc
out
cmc
stc
out
add
out
std
stc
out
leave
stc
out
vcvttpd2dqx
icebp
stc
out
in
stc
out
fyl2xp1
out
aad
out
loope
out
call
in
push
jmp
in
push
jmp
in
push
jmp
in
push
jmp
in
push
jmp
in
push
jmp
in
push
jmp
in
push
jmp
in
push
jmp
in
push
jmp
in
push
jmp
in
push
jmp
in
push
jmp
in
push
jmp
in
push
add
mov
jle
xchg
dec
add
or
add
add
dec
add
dec
add
add
add
push
add
push
add
lcall
call
push
add
push
add
decl
incl
into
pop
inc
or
pop
or
pop
ss
pop
xor
into
pop
or
pop
or
pop
push
or
sbb
jle
push
or
fdivr
adc
out
fdivr
adc
fdivr
or
out
fdivr
add
cld
std
cld
stc
out
fdivr
cmc
out
fdivr
icebp
cld
in
cld
jmp
out
fdivr
loope
fdivr
fstp
fdivr
fdivr
aad
fdivr
rcr
fdivr
int
fdivr
leave
out
fdivr
cld
rcr
cld
mov
out
fdivr
mov
fdivr
mov
add
add
fdivr
lods
cld
test
out
fdivr
mov
imul
out
push
sti
out
push
sti
out
pop
sti
out
insl
sti
out
popa
sti
out
gs
out
leave
sti
out
mov
sti
out
mov
out
mov
sti
out
cmp
out
test
sti
out
xchg
sti
out
xchg
sti
out
cltd
sti
out
sub
cld
out
and
cld
out
std
sti
out
icebp
sti
out
cmc
sti
out
stc
sti
out
int
call
in
or
in
pop
jmp
in
pop
jmp
in
pop
jmp
in
add
in
or
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
mov
add
add
jle
pop
add
mov
add
jle
dec
add
dec
add
pop
dec
add
pop
ds
pop
ds
pop
dec
add
add
ds
add
push
add
pop
push
add
pop
incb
pop
pop
incb
pop
pop
push
add
pop
push
add
pop
incb
dec
pop
incb
dec
pop
into
add
add
mov
add
pop
into
add
pop
out
cld
xor
loopne
cld
sub
loopne
cld
and
call
fdivr
sbb
loopne
cld
adc
loopne
cld
or
loopne
cld
add
loopne
cld
std
jmp
fdivr
cmc
jmp
fdivr
in
jmp
fdivr
in
fdivr
loope
fdivr
fucomp
fdivr
fabs
fdivr
aad
fdivr
shl
fdivr
int
fdivr
test
fdivr
sub
cld
jl
add
add
add
add
std
out
jns
out
jne
out
push
std
out
dec
std
out
dec
std
out
inc
std
out
popa
std
out
pop
std
out
pop
std
out
push
std
out
jno
out
insl
std
out
imul
out
sar
add
std
out
mov
out
xchg
std
out
std
out
mov
out
test
out
mov
std
out
cltd
std
out
xchg
std
out
xor
out
loop
call
in
cld
call
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
into
add
add
mov
add
add
mov
add
add
jle
mov
add
mov
xchg
add
jle
xchg
add
dec
add
add
add
dec
add
dec
add
add
add
push
add
push
add
jmp
lcall
push
add
push
add
out
cld
push
loop
cld
push
ljmp
dec
ljmp
inc
ljmp
cmp
lods
cld
xor
loop
cld
xor
lods
cld
sub
ljmp
and
lods
cld
sbb
ljmp
adc
lods
cld
or
ljmp
add
lods
cld
std
jecxz
cld
stc
jmp
cld
cmc
jecxz
cld
icebp
jmp
cld
in
jecxz
cld
jmp
jecxz
cld
loope
add
add
or
add
or
add
add
add
pop
out
popf
pop
out
mov
pop
out
jns
out
insl
pop
out
jno
out
push
pop
out
dec
pop
out
cmp
pop
out
inc
pop
out
pop
pop
out
dec
pop
out
push
pop
out
jne
out
imul
out
popa
pop
out
gs
out
mov
pop
out
mov
out
xchg
pop
out
mov
out
jge
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
cld
call
in
cld
call
push
add
out
incb
add
add
fiaddl
incb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stc
add
cmc
add
add
add
ljmp
add
add
fldl
ds
add
add
add
roll
dec
add
add
add
add
stos
cld
lret
cld
out
cld
ret
cld
mov
out
cld
mov
stos
cld
mov
stos
cld
scas
out
cld
stos
out
cld
cmpsb
out
cld
mov
enter
sub
movb
movl
insl
inc
add
lods
cld
jmp
inc
sbb
add
out
inc
sbb
jmp
add
fs
pop
stc
aaa
sub
clc
shrl
inc
sub
sub
movsl
sbb
add
add
add
xchg
inc
sbb
sub
add
adc
mov
jnp
add
add
aaa
jecxz
movsl
sbb
test
add
push
or
shl
add
add
nop
ljmp
mov
push
add
call
fisttpl
ret
in
and
repnz
std
add
movb
inc
in
cmp
jo
loope
sti
cmc
in
add
imul
jmp
inc
add
aad
inc
inc
repz
jl
ficoms
jae
arpl
jmp
cmpsb
pop
cs
mov
inc
lret
sbb
lret
inc
lret
jl
loop
jae
pushf
fprem
out
test
out
in
add
aas
add
clc
push
pop
mov
jmp
and
add
movsl
mov
jnp
add
add
mov
cmpl
add
std
xorb
pop
std
addb
ret
sbb
mov
int3
testl
inc
insl
and
dec
cli
aas
into
add
incl
mov
xchg
into
cmpl
mov
add
add
sarb
inc
insl
and
loope
jge
mov
stc
jle
addl
scas
or
daa
add
jmp
lods
mov
and
out
xorb
dec
jmp
stos
mov
mov
aaa
add
jmp
lods
mov
jae
aam
jmp
into
add
iret
pop
lret
clc
shrb
dec
sbb
hlt
insb
push
add
add
out
jle
add
mov
mov
movsb
cs
sub
shrb
test
jo
mov
int
xchg
cli
pop
xor
fisttpl
lods
add
add
shlb
inc
add
jecxz
xchg
cmp
repz
add
loop
cmpl
stos
and
gs
add
call
int
mov
out
jp
imul
das
jmp
int3
arpl
loope
sub
cmp
xlat
xor
out
pushf
stc
scas
mov
add
stos
addr16
call
stos
addr16
jge
push
add
add
daa
aaa
jnp
adc
adc
mov
push
call
movl
push
call
pop
add
xchg
ljmp
push
mov
inc
lret
jl
add
clc
pusha
ds
aaa
push
call
incl
add
add
add
adc
jnp
cmp
jge
in
add
jge
cmp
jge
add
data16
idiv
rol
add
add
idiv
mov
inc
insl
push
xchg
fdiv
pushl
int3
testl
jb
loopne
jecxz
testl
mov
cmp
mov
mov
idiv
out
dec
adc
dec
stc
test
movsl
add
sub
cmpl
inc
xabort
insl
jns
std
stos
aas
sbb
and
mov
call
aas
fs
sub
stc
test
sub
cmpl
mov
add
lock
jns
int
aas
sbb
movsl
add
aad
lret
inc
jl
iret
cld
jb
and
out
and
add
add
pop
repnz
xor
fcmovnu
mov
leave
dec
mov
out
addl
les
lods
or
pop
mov
inc
cmc
add
add
sbb
insl
aas
flds
and
jb
sbb
das
mov
inc
cmc
std
fadds
ud1
movnti
aam
mov
jge
sbb
fiaddl
ds
mov
faddl
sbb
pop
cmp
decb
mov
mov
lds
fldl
and
ljmp
sbb
sub
sahf
cld
fsubrl
mov
repz
push
ljmp
jge
insl
add
pop
inc
mov
jmp
cmp
stc
sahf
das
ja
adc
mov
repz
push
ljmp
jge
cs
pop
bound
cli
pop
das
ja
aam
mov
push
ljmp
call
sub
adc
xor
jge
fidivrl
cli
push
lahf
js
add
cld
je
xorb
inc
dec
call
dec
xorl
adcl
mov
jne
nop
push
or
mov
xlat
and
cmp
pushl
jne
cmp
adc
cmp
or
dec
mov
std
mov
inc
fldl
loopne
movsb
mov
idiv
jge
push
add
mov
in
mov
adc
out
sbb
mov
mov
lods
jge
shrl
xbegin
stc
test
add
xbegin
shrl
xbegin
stc
cmpsb
dec
add
enter
jge
icebp
lahf
dec
add
enter
jge
fldenv
enter
jne
std
stos
aas
sbb
and
cmp
dec
add
mov
jge
stc
add
push
in
xchg
iret
mov
orb
push
lock
mov
mov
push
jnp
mov
gs
cmc
push
push
decb
gs
aad
cmp
sbb
lds
xor
imul
fildl
mov
lds
cmp
fcomi
mov
lds
add
add
cmp
lods
jno
stos
xor
add
mov
rorl
push
lds
pop
aas
flds
and
push
add
pushf
incl
sbb
push
add
stos
mov
xchg
ret
add
sub
jnp
stos
mov
fs
scas
insb
cmp
outsl
jl
xchg
scas
jae
pushf
pusha
sti
mov
jns
jae
cmp
mulb
out
sub
daa
das
jnp
cmp
clc
jbe
das
jnp
and
clc
pop
addr16
out
sub
push
mov
mov
inc
in
cmpb
pop
enter
lahf
clc
je
int
cld
loope
mov
add
lahf
stc
je
int
cld
xchg
lds
je
pop
das
stc
mov
jnp
test
pop
test
mov
pushl
leave
jnp
cmp
insl
sbb
sti
push
call
xor
sti
jae
pusha
or
mov
mov
decl
jne
or
std
out
jo
jmp
fldl
add
out
mov
jp
add
add
mov
mov
push
in
jmp
stos
adc
aas
adc
das
push
jge
popf
or
add
mull
popf
xor
pop
mov
mov
sarl
sub
addb
shl
jb
clc
fs
add
mov
nop
dec
cltd
mov
or
std
jmp
xchg
hlt
sub
ret
add
add
add
cmpxchg
std
in
fs
add
fwait
mov
xchg
in
hlt
fwait
mov
jmp
add
add
dec
push
ret
gs
aad
je
mov
subl
cmp
lods
shrb
push
sbb
cmp
stos
mov
rol
cmpl
in
fsubrs
in
add
repz
push
scas
xchg
icebp
or
jns
lods
stc
jmp
pop
lods
clc
sub
adc
cmpsl
add
pop
lods
clc
inc
in
fwait
repnz
lods
mov
stos
lret
das
inc
or
jo
iret
mov
add
stos
jl
loop
jae
jl
cmc
mulb
scas
jae
cmp
lock
xor
sar
clc
stos
das
jnp
loop
xadd
mov
scas
arpl
push
ljmp
clc
stos
imul
ljmp
idiv
mov
out
xchg
ret
test
test
add
add
inc
cli
bswap
add
incb
adc
push
mulb
repnz
fld
addl
scas
or
add
mov
inc
mov
testl
inc
sbb
adc
call
ret
cmc
push
shlb
jg
push
lds
sbb
mov
test
add
and
pop
stc
pop
and
push
jl
dec
loope
mov
push
addr16
lcall
mov
insb
pusha
fisttpll
xor
clc
mov
pop
mov
clc
or
movsl
add
pop
fisttpll
jno
popl
popa
cltd
cld
jl
cmpsb
mov
jmp
fnstsw
stc
or
ret
js
mov
mov
scas
mov
mov
jae
lahf
addr16
add
gs
fisubl
fst
imul
add
add
ret
loope
jo
or
stos
outsb
xchg
adc
sbb
jnp
adc
jae
or
jnp
add
jae
dec
pop
movsl
inc
call
setne
jae
pop
pop
out
addb
shll
stos
stos
loop
inc
lds
in
sahf
mov
and
js
mov
out
jb
gs
in
xchg
rcrl
or
or
sbb
fwait
push
mov
mov
jle
ja
sti
call
out
lods
iret
stos
push
inc
sbb
faddl
cld
jb
dec
mov
dec
xor
lods
pop
cld
mov
jno
mov
call
sub
in
mov
add
in
test
add
add
out
mov
fmuls
out
push
daa
jnp
jecxz
add
add
lods
aam
stos
test
mov
test
inc
xor
add
jnp,pt
and
cmp
adc
stc
ds
call
jmp
jp
cmp
jne
mov
lock
push
add
mov
roll
add
dec
popw
adcl
or
pop
pop
clc
loope
mov
aaa
cmp
pop
dec
clc
mov
test
clc
incl
hlt
std
out
push
mov
mul
out
out
ret
mov
and
mov
and
mov
dec
add
clc
cmp
aas
push
out
loopne
mov
loopne
add
lcall
cmpsl
fwait
idivl
inc
div
lock
cs
ljmp
out
cld
jnp
xor
mov
fs
add
lods
enter
add
je
adc
lock
mov
jl
leave
das
add
stos
mov
test
stos
aaa
scas
sarl
and
gs
add
cmpsb
ret
out
out
pop
inc
ljmp
add
add
sbb
int3
xchg
mov
jmp
jmp
das
filds
scas
rcrl
clc
xor
out
imul
lds
addl
stos
fdivs
hlt
sbbb
cmp
gs
mov
push
cli
mov
out
xor
loop
scas
pop
insl
out
inc
fidivrs
lods
mov
bound
call
dec
test
add
in
test
cld
mov
in
mov
clc
jl
hlt
mov
jnp
out
push
xchg
out
mov
jbe
ljmp
insl
imul
push
loopne
add
mov
mov
stos
test
add
add
sbb
repz
add
pop
inc
sbb
add
stc
jle
adc
test
decl
clc
jp
jo
ja
movsl
mov
mov
imul
pop
ret
ds
sbb
jl
loop
mov
jnp
dec
jg
or
clc
jp
inc
out
or
ret
decl
repnz
add
mov
out
ljmp
add
add
in
addl
ret
adc
into
add
mov
add
jg
pop
cwtl
repz
mov
jns
adc
cmpsb
mov
decl
roll
xchg
roll
jae
sbb
sub
aas
clc
lods
clc
dec
and
push
out
fdivrl
mov
sub
adc
test
fwait
idivl
testb
jp
popf
xor
dec
scas
clc
call
lcall
mov
cmp
jge
add
xor
fwait
push
mov
movsb
and
std
mov
sti
mov
shlb
xlat
adcb
out
cmp
fwait
cmpsb
mov
movsb
movsl
addb
add
jb
push
or
stos
out
aaa
in
jbe
dec
movsb
movsl
stos
imul
add
loopne
inc
rolb
cmpsb
sbb
fidivl
out
out
out
out
push
ret
or
jb
mov
out
out
lds
out
fbstp
mov
add
in
add
aam
add
in
add
in
add
test
clc
mov
add
xor
add
jmp
lahf
mov
add
lahf
clc
jmp
in
add
mov
add
lahf
clc
jmp
in
add
and
add
in
add
in
add
roll
add
mov
add
into
push
add
mov
sti
ljmp
adc
add
sbb
mov
push
add
ror
sti
call
clc
lcall
xor
jle
add
mov
add
mov
adc
add
push
add
dec
push
add
ss
call
decl
adc
add
ds
add
and
sti
jmp
decl
adc
add
incb
add
fidivs
call
xor
jmp
lods
cld
jmp
stos
cld
jmp
cmp
cld
rol
or
out
push
shrb
jmp
mov
or
out
cld
jmp
stos
cld
jmp
stos
cld
jmp
stos
cld
jmp
stos
cld
jmp
pop
cld
jo
xor
cld
pusha
adc
cld
push
and
cld
dec
iret
cld
inc
pop
cld
cmp
mov
sub
mov
and
mov
cld
adc
mov
cld
clc
add
mov
jecxz
dec
mov
shll
ret
mov
cmpb
mov
sub
xchg
mov
loopne
andl
mov
out
test
arpl
push
ret
push
mov
sub
inc
mov
bnd
mov
add
add
rcrl
dec
rclb
aam
or
clc
gs
lahf
clc
icebp
es
clc
pop
daa
lahf
clc
pop
cmpsl
mov
clc
pop
cmpsl
mov
clc
jae
mov
add
cmpsl
mov
clc
ret
cmpsl
mov
add
mov
clc
jmp
clc
lahf
clc
lahf
adc
clc
negl
clc
ja
lahf
clc
adc
clc
adc
clc
mov
lahf
clc
lahf
mov
clc
mov
lahf
clc
repz
rcll
lahf
clc
add
cs
call
cs
decl
cs
incl
add
add
cld
pushl
cld
ds
cld
mov
adc
push
adc
mov
adc
pushl
cld
ljmp
lcall
adc
cld
cli
adc
ljmp
sub
ds
pushl
adc
jmp
adc
ljmp
adc
lcall
cld
jmp
adc
pushl
cld
incl
adc
cld
incl
add
add
adc
jmp
hlt
outsb
cld
sbb
jo
adc
jo
or
cld
add
outsl
cld
clc
imul
call
cmp
fsubs
cld
enter
rcrb
cld
mov
mov
cld
mov
cld
nop
cmp
cld
mov
aam
sbbb
cld
js
sar
jo
int3
cld
push
add
add
push
cld
push
jge
cld
dec
addr16
inc
test
dec
gs
xor
imul
sbb
popf
cld
push
popf
sub
popf
xor
popf
mov
add
fsubrs
pushf
pusha
push
pushf
dec
push
pushf
xor
pushf
sbb
pushf
jl
lret
pushf
mov
pushf
test
pushf
push
push
pushf
sahf
imul
add
add
pushf
into
imul
pushf
lock
jae
les
jl
arpl
insb
push
pushf
nop
insb
dec
pushf
push
insb
inc
pushf
ljmp
lahf
clc
aaa
ret
lahf
clc
aaa
xchg
lahf
clc
das
mov
clc
sarl
clc
aad
lahf
clc
jmp
lahf
clc
jne
lahf
clc
inc
jl
clc
xor
cltd
dec
cwtl
clc
insl
cmp
clc
outsl
cmp
clc
rorl
lahf
dec
cwtl
clc
mov
cmp
clc
int
cwtl
clc
decl
clc
sbb
cwtl
clc
and
cwtl
clc
sub
xchg
clc
inc
icebp
xchg
clc
pop
stc
xchg
clc
int
xchg
clc
pop
ficoml
clc
pop
ficoml
cld
call
adc
lcall
adc
decl
cld
decl
cld
pushl
pop
add
add
add
push
mov
js
sti
decl
pop
add
or
add
push
add
mov
pop
sti
push
ret
sti
call
push
add
enter
call
pop
sti
dec
pop
sti
dec
pop
sti
jmp
pop
sti
incl
pop
sti
pop
sti
decl
sti
jmp
in
cld
push
mov
dec
mov
add
inc
mov
mov
xor
cld
sub
and
mov
adc
cld
or
cld
add
mov
clc
dec
mov
lock
mov
loopne
mov
fcoms
cld
shrb
mov
cld
mov
stos
cld
jmp
js
cld
mov
dec
mov
cld
mov
mov
cld
js
mov
cld
push
cltd
mov
pop
cltd
push
cltd
rol
dec
cltd
in
mov
cmp
sbb
sub
data16
jp
adc
cmp
add
mov
repz
push
jmp
test
cwtl
or
fistpl
cwtl
ror
mov
cwtl
mov
mov
add
add
cwtl
add
cwtl
push
rcrl
mov
mov
fisubl
xchg
clc
fldenv
xchg
clc
lret
es
clc
jge
xchg
clc
mov
xchg
clc
xchg
sub
clc
fwait
es
clc
outsl
es
clc
push
es
clc
dec
es
clc
inc
and
clc
push
and
clc
mov
xchg
clc
xchg
and
clc
mov
clc
jns
add
add
clc
cmc
stos
cwtl
clc
std
mov
cwtl
clc
cpuid
cwtl
clc
cmc
test
cwtl
clc
inc
stos
cwtl
clc
or
stos
cwtl
clc
xor
cwtl
clc
inc
mov
sar
or
sti
clc
sar
fs
and
sti
push
mov
sti
decl
sti
decl
sti
dec
ret
fcmovb
sti
incl
add
add
ret
mov
sti
push
sar
loopne
sti
mov
sub
sti
lcall
sti
incl
sti
jmp
push
sti
call
push
sti
decl
lcall
sti
lcall
ljmp
ret
sti
dec
ret
fadd
sti
jmp
or
cld
mov
mov
cld
js
cld
jmp
mov
sar
pusha
mov
add
pop
lods
cld
jmp
fs
dec
push
into
cld
inc
cmp
cld
cmp
xor
cld
sub
int3
cld
and
cld
adc
cld
or
cld
add
clc
inc
int
lock
int
call
xor
cld
rcrb
aam
rolb
cld
mov
int3
cld
test
int3
cld
mov
add
add
add
add
cmp
out
lock
sub
out
outsb
mov
imul
add
adc
push
xchg
hlt
add
add
inc
xchg
sahf
mov
xchg
test
xor
add
and
out
icebp
add
sbbl
or
in
out
aad
out
jmp
add
add
fistl
add
add
add
cmpl
mov
cmp
jno
clc
in
add
mov
mov
clc
fwait
xchg
xchg
clc
test
xchg
clc
addr16
xchg
clc
push
xor
xchg
clc
lea
xchg
clc
popf
ss
clc
push
xchg
clc
mov
xchg
clc
xchg
push
xchg
clc
int
xchg
clc
mov
in
add
dec
xchg
clc
iret
dec
xchg
clc
cmc
aas
xchg
clc
jmp
cmp
clc
movsl
cwtl
nop
clc
fwait
nop
nop
clc
mov
add
mov
ds
add
popa
gs
pop
inc
cmpsl
sti
pop
add
xchg
dec
outsb
jae
outsl
push
ja
outsb
dec
pop
shll
imul
add
pop
popa
cli
jecxz
imul
cmp
out
gs
imul
outsl
jo
stc
pop
push
dec
pop
dec
add
jmp
jae
iret
pop
outsb
stos
jmp
add
xchg
dec
imul
aad
outsl
jecxz
imul
je
pop
pop
add
loop
je
inc
jno
stos
inc
addr16
mov
pop
inc
out
sbb
dec
xor
ja,pn
enter
dec
adc
mov
adc
cld
mov
popa
sbb
pop
gs
sub
add
add
pushf
cld
fucom
arpl
fildl
into
sbb
les
sbb
cmp
add
in
sbb
aas
aas
outsb
mov
adc
xchg
dec
arpl
cld
jmp
orb
pop
xchg
dec
arpl
imul
mov
push
add
shrb
and
das
inc
and
add
mov
pop
adc
test
push
push
mov
or
xchg
push
sbb
je
repz
add
cmp
mov
pop
inc
push
cltd
sbb
add
xchg
adc
inc
xor
adc
xor
and
sub
push
or
jae
add
push
push
aas
jmp
call
dec
into
add
push
or
std
movsl
call
push
mov
iret
xor
mov
pop
outsb
xorb
lods
mov
and
jge
and
call
arpl
add
ss
insb
pop
fcomps
inc
inc
mull
cmp
and
add
ljmp
add
and
lret
cmp
sbb
mov
inc
call
xor
add
or
repnz
in
dec
fs
push
mov
fdivl
test
pusha
jb
aad
gs
testl
stos
fmull
lods
or
jb
fmull
pop
stc
pop
jb
add
popa
repnz
pop
out
jae
leave
incl
or
add
add
mov
insl
jb
out
je
loopne
gs
mov
rorl
test
pop
mov
gs
sub
out
and
je
add
in
cs
and
pop
push
cld
adc
popf
cld
ret
jmp
and
inc
mov
and
popf
cld
std
out
and
adc
adc
popf
cld
cmp
pop
das
pop
add
pop
cmc
jnp
ja
popf
cld
inc
ljmp
jo
insl
cld
mov
xor
push
mov
dec
adc
cmc
leave
sub
imul
fsubs
push
jg
adc
add
adc
adc
sbb
or
push
inc
out
cmp
mov
push
inc
shll
dec
sbb
add
add
sub
inc
lret
cmp
add
adc
and
mov
repz
add
lcall
jl,pt
rcrl
ja
les
adc
add
sub
xor
cwtl
adc
cmp
and
add
inc
js
lret
sub
add
add
adc
rcrb
or
pop
dec
cmc
mulb
push
hlt
xor
and
aas
imul
mov
xchg
out
ja,pt
fsubs
imul
inc
addr16
addr16
in
arpl
mov
sbb
sbb
adc
push
in
movsl
call
dec
push
add
insb
xor
in
add
aam
outsb
add
add
lock
popf
shrb
mov
fidivl
loope
fs
lock
imul
pop
inc
jne
fucomip
pop
dec
lahf
fldenv
stos
pop
or
fsubrl
jae
push
push
mov
out
add
cmp
aad
popa
pop
xlat
jae
mov
in
cmp
imul
add
in
fistpl
pop
loop
js
imul
data16
call
add
inc
sbb
into
sub
int
dec
cmpb
outsb
mov
je
sti
sub
inc
push
mov
imul
cld
insb
jecxz
and
push
je
scas
push
imul
mov
cld
mov
jmp
and
les
pop
sbb
xor
js
fs
add
push
insb
or
xor
out
cld
inc
lret
jae
push
and
jo
outsb
ret
sub
push
xor
adc
cmp
test
out
inc
add
adc
adc
jnp
xor
and
sub
add
xchg
adc
not
or
adc
adc
add
les
dec
aad
dec
inc
or
xor
add
add
sbb
cmp
mov
pop
add
nop
cs
add
pop
xchg
aaa
add
ja
enter
mov
add
add
cmpsl
sub
and
negl
inc
inc
jmp
push
into
and
fs
arpl
xlat
and
cmp
sub
add
addr16
das
imul
pop
and
jecxz
add
pop
adc
add
addr16
xlat
packsswb
cwtl
aaa
arpl
movb
movl
arpl
mov
add
pop
jb
in
jmp
add
add
rolb
insb
mov
pusha
insl
mov
loop
fs
imul
jmp
inc
cmpsl
fistpl
jmp
jmp
inc
out
pop
push
out
pop
add
in
gs
imul
jmp
xchg
in
inc
xchg
fistps
in
jb
loopne
imul
in
jmp
std
ds
add
bound
pop
push
out
adc
dec
push
insl
cld
int3
out
pop
je
or
ret
jo
lds
push
fstpl
je
xor
je
aas
arpl
out
inc
dec
xchg
pop
jae
cmp
add
lock
imul
clc
adc
out
add
mov
cmp
sbb
dec
and
add
cld
adc
push
sbb
sbb
mov
inc
pop
add
stc
imul
fwait
adc
out
daa
push
sbb
rclb
push
int3
push
jne
mov
adc
cmpsb
and
ret
inc
les
sbb
stos
and
and
cltd
add
adc
inc
andl
push
pop
and
sbb
add
pop
pop
add
push
pop
add
dec
push
rclb
ds
mov
sbb
adc
adc
add
xchg
mov
arpl
sarb
imul
stos
sbb
jmp
and
mov
add
inc
ljmp
pop
add
push
lret
xor
push
out
insl
cmp
rolb
cmp
cmp
leave
inc
jb
rorl
jmp
adc
adc
outsb
push
add
insl
cli
sbb
add
aam
arpl
in
std
mov
dec
fsubrl
popf
add
add
pop
jo
repnz
mov
inc
add
jae
dec
fstpl
jge
inc
outsl
lock
incl
add
pop
lock
fbstp
dec
add
add
imul
imul
add
lahf
jecxz
jb
loopne
jae
cmp
loope
jo
dec
test
cld
adc
repnz
push
fisubl
je
pop
add
dec
add
push
inc
out
and
or
out
clc
dec
or
and
and
or
out
incb
mov
pop
insl
aam
sbb
out
stc
push
aad
aas
push
xchg
cmp
lret
daa
dec
ret
addr16
inc
add
jecxz
sbb
or
outsb
mov
addr16
add
jmp
sbb
and
jb
orl
out
call
add
add
cmp
and
enter
daa
inc
xlat
ret
unpckhps
ret
add
add
jmp
aam
and
jmp
popa
add
lock
or
mov
add
xchg
mov
andb
out
pop
add
adc
in
pop
pushf
clc
pop
pop
lahf
add
sub
xchg
call
inc
add
or
movsb
sti
cmp
add
sub
sub
inc
cmc
repnz
adc
mov
sarb
insb
into
xlat
in
stos
in
mov
loopne
data16
sar
inc
out
imul
sbb
in
bound
add
adc
enter
icebp
imul
add
add
out
test
in
pop
in
bound
add
lods
out
xlat
imul
imul
add
lods
icebp
bound
add
ftst
pop
adc
push
fbstp
repnz
push
add
push
push
ret
daa
insb
inc
mov
or
imul
add
jge
dec
gs
and
push
lods
sbb
inc
cmp
dec
push
popf
int
je
sub
sub
outsl
pop
sbb
jae
pop
jae
pop
outsb
imull
add
cmc
lret
rol
sub
sbb
insb
insb
incb
cmp
mov
and
gs
pop
aas
gs
insb
jb
sbb
add
mov
cmp
pop
cmp
jle
rolb
add
out
adc
mov
imul
mov
adc
mov
add
mov
sbb
arpl
nop
sub
enter
aam
and
out
add
add
mov
and
cmp
insl
out
add
fdivl
addr16
push
jno
aad
push
cmp
in
and
pop
and
add
sub
add
add
xor
adc
push
stc
hlt
es
mov
and
adc
cmp
add
add
sub
aad
xor
lret
aaa
add
ret
and
negl
es
and
out
xchg
xor
repnz
or
mov
ljmp
out
or
xchg
es
ljmp
test
out
jecxz
and
fwait
les
test
xor
xchg
add
pop
in
bound
hlt
dec
push
add
test
cmp
clc
cmp
repnz
push
jmp
or
cmp
aam
jb
leave
add
stc
in
aad
lock
mov
iret
sar
pop
in
bound
repnz
push
jmp
mov
add
add
ret
adc
insl
mov
clc
pushl
ror
bound
fsubl
lock
imul
fsubrl
out
in
bound
incb
push
add
sub
adc
test
pop
aas
gs
xor
outsb
ljmp
add
pop
aas
gs
daa
pop
incl
jbe
jns
je
xchg
je
mov
add
add
cmp
dec
scas
adc
adc
aaa
push
pop
outsl
dec
add
lea
pop
jb
adc
int3
xor
cmp
imul
pop
cmp
lret
or
outsb
mov
cld
mov
and
sbb
add
in
daa
je
adc
fs
sbb
inc
add
add
pop
decb
or
pop
xor
dec
cmp
inc
pop
inc
cmp
push
inc
and
mov
sbb
mov
call
or
add
filds
inc
ret
imul
xchg
adc
out
cld
cmp
mov
dec
shl
outsb
cmpsb
add
add
sarb
push
mov
push
xor
ljmp
out
std
add
sarb
push
sub
add
add
push
in
xor
add
push
pop
sbb
dec
loope
sub
cmc
adc
jecxz
xor
add
inc
rol
into
add
sbb
add
mov
add
stos
es
xchg
daa
mov
out
add
add
xor
add
add
add
sub
mov
arpl
add
lds
leave
bound
add
pop
in
bound
lret
sub
mov
and
fdivs
adc
push
jmp
dec
or
in
jae
in
std
mov
ljmp
shr
aad
repz
into
vpacksswb
vdivsd
in
ljmp
in
fldcw
neg
dec
xchg
add
add
pop
outsb
lods
sbb
arpl
pop
jae
push
pop
gs
add
imul
pop
push
scas
and
push
incb
add
adc
out
push
je
jmp
adc
lret
aam
pop
je
add
add
adc
rcll
fs
je
or
test
add
add
xor
cmp
pop
push
and
and
jnp
je
imul
add
mov
push
mov
orl
xchg
rcll
arpl
rcll
out
add
adc
je
cmp
inc
dec
sbb
dec
or
insl
push
sbb
jbe
dec
cmp
addr16
pop
add
out
adc
jno
push
push
dec
sbb
mov
adc
dec
out
adc
aas
sub
jno
mov
je
add
add
loopne
das
mov
mov
mov
out
cmp
xor
add
add
filds
lcall
add
add
push
test
cmp
mov
out
xor
add
add
loope
xor
push
in
adc
dec
out
out
sub
adc
repnz
pop
cmp
aad
out
jp
and
rolb
rcrl
pop
repnz
and
add
xlat
in
pop
mov
clc
in
jo
cli
in
pop
mov
dec
mov
repnz
fnsetpm(287
cmp
rcl
data16
in
jo
icebp
in
pop
sub
leave
std
cmp
in
pop
xlat
loop
sub
insb
cmp
lret
cmp
bound
jmp
push
in
jmp
loope
sub
iret
fisttps
iret
ds
stc
loope
int
shrl
ret
xor
mov
cmp
pop
outsb
cmp
je
mov
add
dec
ja
add
imul
jo
movl
inc
dec
jge
popa
insb
push
push
lods
and
add
inc
gs
and
outsb
stos
or
push
mov
add
mov
push
insl
push
cli
push
je
mov
and
add
add
pop
imul
gs
jmp
int
imul
popa
mov
and
out
adc
scas
cld
lock
push
pop
add
sub
divl
cmovae
push
push
out
pop
je
xchg
jae
mov
imul
decb
test
insl
fwait
jg
cmp
stos
loop
add
and
inc
mov
arpl
add
add
daa
pop
push
and
arpl
push
imul
add
in
adc
push
and
jo
jno
arpl
adc
pop
cld
xchg
out
pop
bound
add
and
call
cmpsl
add
and
test
push
add
add
call
mov
mov
push
mov
mov
loop
adc
add
add
jb
mov
out
mov
mov
push
xchg
mov
sub
add
xor
sbb
inc
or
cmp
or
sbb
or
push
clc
add
cli
filds
adc
incb
add
loope
mov
insl
fucom
shrb
jmp
dec
movsb
mov
cs
fildll
in
ljmp
or
insl
nop
repnz
dec
nop
jmp
pop
popf
icebp
loope
mov
inc
ljmp
jmp
jae
add
dec
mov
shrb
in
ljmp
cmc
cli
outsl
pop
mov
testl
xor
sti
testl
fadd
bound
jecxz
ljmp
aad
outsl
adc
mov
addr16
and
push
mov
pop
inc
lods
adc
mov
std
dec
add
add
imul
inc
gs
add
pop
outsb
mov
arpl
imul
outsb
dec
add
je
push
adc
insb
insb
je
sbb
mov
clc
ljmp
pop
inc
jo
jne
push
shlb
cwtl
pop
pop
add
pop
insb
push
daa
pop
dec
jne
inc
insl
je
je
imul
sbb
jae
and
inc
inc
ja
push
or
in
insl
add
data16
inc
cld
jnp
popf
repnz
push
out
cmc
pop
loope
hlt
lods
ret
insb
mov
pop
cld
nop
out
in
push
mov
mulb
xchg
bound
cltd
cld
sbb
fwait
loopne
xchg
in
lock
adc
imul
int
push
or
pusha
xchg
aaa
out
pop
pavgw
enter
add
add
add
jmp
and
add
clc
ss
clc
add
outsl
roll
fidivrs
in
cli
call
mov
aam
stos
call
shl
cmc
dec
outsl
push
add
cmc
leave
idivl
cmc
mov
jp
mov
xchg
jl
push
add
fimuls
test
pop
aad
icebp
aas
repnz
dec
in
icebp
dec
clc
pop
enter
iret
insl
inc
fcomi
push
add
icebp
insl
add
iret
insl
adc
outsb
clc
and
les
mov
in
loopne
add
add
in
aad
loopne
enter
sub
bound
pop
in
mov
cmp
outsl
popf
aaa
loopne
mov
ljmp
xor
adc
inc
mov
pop
jp
mov
call
repz
ds
hlt
lock
pop
js
dec
clc
incl
js
push
jmp
pop
popa
frstor
mov
pop
js
add
jo
dec
push
fildll
dec
lahf
js
add
jno
dec
lahf
js
inc
lahf
jne
add
aas
gs
push
ja
clc
dec
add
jns
fs
test
ja
pop
popa
fs
add
je
jbe
ja
push
mov
dec
outsl
mov
loopne
jle
sar
call
aam
inc
das
out
dec
sub
bound
sub
jb
pop
jmp
push
out
add
jo
imul
lcall
or
sub
adc
imul
cld
test
stos
jecxz
ljmp
out
into
ds
xlat
aas
fstl
push
dec
mov
ds
xchg
imul
in
out
add
mul
dec
addb
pop
jl
push
lock
imul
jl
cmp
ss
stc
inc
shl
add
loope
jmp
xor
out
cmc
add
clc
cmp
and
add
add
clc
add
sti
repz
out
fildl
testl
add
add
lock
int
test
pop
imul
mov
repz
xchg
add
add
out
xchg
ret
cwtl
sub
add
out
je
xor
cmpsl
in
lcall
sti
mov
cmp
addr16
cld
fsubl
int3
fisubs
frstor
jmp
lcall
mulb
enter
int3
hlt
bound
mov
sar
add
mov
dec
stc
test
ficompl
rcrl
jl
mov
ja
dec
fsubrl
fcoml
in
lcall
aaa
aad
lods
adc
cltd
in
jno
aaa
fisubrl
ja
insb
data16
add
jae
je
outsb
mov
decl
xchg
push
inc
jae
pop
push
sub
dec
clc
incl
add
add
add
cmp
jo
jecxz
imul
dec
add
add
jb
push
gs
fs
jo
inc
clc
call
pop
inc
popa
xchg
fs
push
mov
push
jle
mov
jle
insb
push
insb
pop
addr16
add
insb
push
out
lock
sar
sbb
int3
inc
mov
popf
add
and
jae
shl
or
pop
pop
ror
fsubs
cmp
shl
cmp
iret
push
sbb
sbb
adc
mov
jae
or
mov
es
cld
movntq
in
jae
aaa
icebp
insb
movb
push
inc
cld
inc
mov
add
add
hlt
xchg
in
fsubp
add
add
loopne
mov
outsb
rorb
push
push
aaa
leave
sbb
jl
filds
stos
mov
int
mov
xor
dec
dec
add
add
adc
es
daa
rcrl
sar
popa
add
icebp
or
adc
adc
jmp
or
in
add
add
movb
mov
hlt
rcl
ljmp
int
aam
add
in
imul
inc
loop
clc
in
imul
add
imul
or
fstpl
cld
lock
jmp
into
mov
pop
inc
mov
jb
int3
bnd
in
add
mov
fstpl
mov
bound
data16
push
jg
sub
into
fildll
in
add
mov
imul
pop
insb
insl
pop
jb
ljmp
inc
insb
andl
inc
add
gs
add
cmp
popa
insb
gs
push
stos
pusha
insb
imul
add
add
cmp
popa
insb
gs
pop
gs
je
bound
inc
cmp
into
add
in
inc
fs
in
pop
je
add
add
inc
cmp
fcos
ret
inc
insb
inc
stos
jae
arpl
aaa
ret
pop
xlat
dec
cld
fsub
xchg
fldcw
scas
flds
pop
cld
or
cwtl
in
movsl
mov
pushl
xchg
add
mov
push
xchg
jg
cmp
ljmp
movsb
pop
cld
lahf
in
fnstenv
mov
jae
mov
add
les
call
xchg
std
dec
inc
daa
lret
cs
push
dec
and
ljmp
dec
and
add
out
int
xor
out
adc
iret
push
add
aad
pop
add
add
add
add
fbstp
fwait
out
mov
into
fsubl
shl
rclb
fidivrs
sbb
mov
cmpsl
rclb
jp
fwait
out
out
movb
shrl
rolb
push
repz
and
xlat
out
cmc
add
sar
int3
adc
xor
out
rolb
cmp
loope
cli
out
jmp
add
add
add
push
xchg
and
and
dec
test
out
mov
push
out
enter
rolb
push
lds
pop
lea
icebp
data16
mov
sub
clc
and
and
hlt
push
jg
lock
and
in
add
mov
out
bound
test
arpl
mov
popa
inc
mov
or
lock
sbb
clc
xor
and
mov
jo
imul
fstl
jb
dec
clc
ljmp
gs
cmp
pop
push
xchg
addr16
ds
lidtl
push
dec
jnp
addr16
inc
pop
jb
xor
inc
clc
lcall
cmp
jb
outsb
xchg
imul
add
data16
mov
push
addr16
or
je
jno
insb
aaa
arpl
xor
jb
insb
pop
imul
data16
paddb
pop
std
dec
sub
mov
jae
adc
jae
push
jecxz
or
into
push
mov
das
or
imul
cld
inc
mov
dec
call
add
dec
fadds
jbe
ljmp
inc
cld
inc
fwait
jle
dec
xchg
xchg
jbe
js
push
out
loop
sbb
bound
loopne
es
out
fidivs
sbb
mulb
adc
outsl
xor
fsubrl
add
add
xor
adc
adc
add
shl
testl
pusha
sbb
fdiv
repz
add
pop
aam
loope
out
clc
les
mov
lahf
xlat
mov
aad
sarb
call
mov
add
call
jns
xor
ret
push
add
loop
xlat
sub
inc
out
daa
add
add
loop
jmp
and
dec
jnp
imul
add
add
imul
cltd
dec
stc
nop
out
rsm
pop
clc
dec
in
imul
jo
aad
in
push
jmp
push
shrl
dec
in
arpl
cmp
inc
mov
in
jae
adc
bound
shll
psrad
xlat
push
jmp
push
shll
add
add
add
rorb
shlb
stos
mov
pop
arpl
or
cli
pushw
fistpl
jne
push
jno
out
pop
pop
inc
clc
bound
fbld
mov
mov
gs
fs
je
gs
mov
fs
add
push
dec
xor
gs
pop
jae
cmp
jp
aas
gs
push
dec
popa
pop
push
mov
outsb
push
pop
inc
outsb
jp
push
fwait
pop
dec
cmp
insb
popa
out
lock
and
fildll
int3
loop
sbb
dec
out
clc
jae
sub
arpl
cli
testl
cli
decl
push
loope
or
clc
cmp
or
adc
fdivrs
out
mov
scas
movsb
rcll
add
add
imul
mov
sub
add
imul
cld
clc
out
loope
mov
lock
addl
outsl
mov
repnz
jne
dec
jmp
sub
out
leave
xlat
push
add
adc
sub
cmc
xor
out
loopne
pop
loopne
es
lds
push
clc
add
add
add
hlt
call
js
pop
aam
rclb
lds
lret
adc
lods
iret
out
mov
mov
ret
fimuls
dec
or
out
loop
add
rorb
add
loopne
fistpll
pop
mov
add
xchg
out
out
jle
pop
clc
shr
out
bound
outsl
jmp
iret
jmp
add
mov
mov
decl
mov
jo
in
add
out
pop
add
mov
outsl
sti
xchg
in
jae
jecxz
cld
lds
imul
dec
pop
clc
cmp
inc
in
jno
in
insb
mov
inc
out
imul
add
inc
xorb
push
test
call
inc
outsb
pusha
cmp
or
dec
gs
das
insl
gs
dec
popa
sub
push
mov
arpl
fs
push
and
imul
cmp
les
add
inc
dec
push
cwtl
inc
loop,pn
fs
or
jb
popa
insb
jecxz
imul
addl
xor
gs
pop
push
adcb
inc
clc
incl
add
add
add
push
data16
cmp
push
aas
gs
mov
imul
out
insb
out
pop
push
jns
scas
loopne
and
fisubs
mov
push
cmp
in
mov
pop
shrl
int3
fldenv
or
inc
pop
push
loope
sbb
imul
pop
cld
push
out
loopne
add
hlt
jae
add
add
add
imul
imul
out
cld
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
add
add
add
add
add
daa
cmpsl
add
and
add
add
add
add
add
daa
add
daa
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rcrb
out
movl
out
out
out
out
out
out
dec
pop
out
aas
pop
sti
add
add
add
add
test
call
add
push
in
add
in
add
in
add
add
jmp
in
add
test
jmp
in
add
cld
add
in
add
in
add
cmp
aas
jmp
in
add
pop
or
in
add
in
add
and
jmp
in
add
rorb
inc
jmp
in
cmpb
aas
jmp
dec
add
and
add
add
push
mov
in
sub
incb
add
int3
lods
inc
inc
rcll
lods
mov
dec
cmc
and
out
jnp
das
jb
xchg
or
jl
inc
cmpsl
lods
cwtl
inc
mov
jle
inc
add
pop
idivb
fmuls
jno
inc
mov
arpl
sub
inc
jb
xchg
out
xor
inc
lcall
sub
clc
call
adc
dec
and
pop
inc
cmc
mov
in
pop
fisubrs
jg
rclb
test
and
adc
scas
jl
push
mov
inc
xor
ret
mov
mov
adc
lahf
loop
push
xchg
xchg
int3
sbb
sbb
jo
push
jl
test
in
aam
rorb
jb
mov
cmp
push
jle
mov
aas
add
add
sub
dec
xor
sbb
inc
repz
adc
fistpll
out
test
adc
push
or
jmp
in
xchg
push
mov
jg
or
add
add
test
lahf
mov
ljmp
adcl
push
rcrl
outsl
push
dec
xchg
and
stos
fwait
test
cwtl
scas
ficomps
lcall
cmpsl
xor
orb
insl
stos
cmp
adc
sbb
jo
add
cmp
into
cmp
xor
jnp
cmp
sub
aam
cmp
xchg
push
arpl
cmp
jecxz
nop
iret
inc
cltd
pop
mov
dec
mov
jl
jnp
cmp
sbb
adc
cmp
lahf
ror
cmp
xchg
mov
push
push
or
cwtl
loopne
shlb
adc
cmp
jne
mov
add
sub
mov
push
cmp
mov
lods
xor
cs
adc
mov
fsubrl
js
fs
mov
mov
push
dec
mov
pop
shll
mov
clc
mov
dec
test
adc
adcb
pop
jb
jmp
cltd
xlat
fstpl
out
cld
jmp
xorl
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
cwtl
fwait
ds
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
cmp
out
cld
jmp
pop
cld
jmp
cld
cmp
out
cld
jmp
pop
cld
jmp
movsl
cld
cmp
out
cld
jmp
pop
cld
incl
add
add
or
cmp
out
out
out
out
out
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
icebp
add
add
add
add
add
add
add
roll
out
out
out
out
out
out
icebp
add
add
add
add
add
add
adc
add
add
add
add
add
add
icebp
add
add
add
add
add
jmp
call
add
jmp
in
add
adc
jmp
in
add
in
add
in
add
in
add
in
add
fistl
add
in
add
in
add
in
add
adc
jmp
in
add
in
add
in
add
ficoml
add
in
add
in
add
in
add
pop
adc
jmp
in
add
in
add
pop
adc
add
add
add
jp
add
add
mov
add
mov
add
mov
cmp
jle
add
dec
add
add
add
fidivrl
add
add
add
dec
add
add
jp
add
add
add
add
add
add
add
cmp
incb
add
push
add
add
add
add
jns
add
add
add
add
add
add
add
add
into
add
add
pop
cld
jmp
adc
cmp
out
cld
jmp
pop
cld
jmp
mov
cld
jmp
pop
cld
incl
add
add
pop
cld
jmp
test
jmp
pop
cld
jmp
pop
cld
jmp
push
test
out
cld
jmp
pop
cld
jmp
jae
cmp
out
cld
jmp
pop
cld
jmp
data16
out
cld
jmp
pop
cld
jmp
xchg
mov
out
cld
jmp
pop
cld
jmp
sub
ds
out
out
out
out
out
out
dec
sbb
add
add
add
add
add
add
add
leave
add
add
add
add
add
add
add
push
test
add
add
add
add
add
pop
or
add
add
add
add
add
add
jmp
add
add
add
add
add
push
leave
add
add
add
add
add
add
add
test
add
add
add
jmp
ljmp
jmp
in
add
or
jmp
in
add
in
add
in
add
in
add
in
add
int
add
in
add
in
add
in
add
or
jmp
in
add
in
add
int3
or
jmp
in
add
in
add
in
add
in
add
in
add
in
add
or
add
pop
add
into
pop
add
mov
and
add
pop
add
into
pop
add
mov
jmp
add
pop
add
jle
add
pop
xchg
cmp
mov
add
mov
add
jle
add
dec
nop
cmp
dec
pop
add
dec
pop
add
ds
add
lret
fstpt
add
add
dec
pop
add
ds
add
sbb
pop
add
push
pop
add
incb
add
sbbb
add
pop
add
out
cld
jmp
movsb
fwait
aas
out
cld
jmp
pop
cld
jmp
pop
cld
jmp
in
aas
out
cld
jmp
pop
cld
jmp
pop
cld
jmp
xchg
inc
aas
out
cld
jmp
pop
cld
incl
add
add
pop
cld
jmp
mov
cld
jmp
pop
cld
jmp
pop
cld
jmp
loopne
aas
out
cld
jmp
pop
cld
jmp
mov
sarl
out
fistpll
out
sarb
out
fistpll
out
fistpll
out
fistpll
out
fdivrs
out
fdivrs
out
fdivrs
out
mov
mov
add
fbld
add
fistps
add
fists
add
filds
add
add
add
filds
add
add
fcomip
add
fucomip
add
fsub
add
fcomp
add
fcom
add
fadd
add
add
mov
mov
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
mov
add
jmp
in
add
in
add
in
add
hlt
dec
clc
in
in
add
ss
aaa
ss
pop
ss
fiadds
icebp
xor
sub
std
or
gs
mov
cmp
fisttpll
cmp
int
cmp
std
out
cmp
std
out
leave
in
pop
cmp
in
pop
cmp
faddl
cmp
je
clc
shl
add
ss
mov
mov
ds
ds
in
jmp
cli
jmp
or
mov
ljmp
or
dec
aas
cli
ljmp
cmp
jnp
or
mov
cmp
fwait
aas
pop
ljmp
dec
ljmp
cmp
fstpt
pop
ljmp
dec
arpl
mov
repz
sbb
sbb
ljmp
xor
cwtl
or
xlat
nop
or
xlat
cmp
xlat
nop
or
xlat
fmuls
mov
or
mov
or
mov
or
mov
or
fcoml
stc
or
pop
push
or
or
xor
sbb
clc
or
div
or
negb
or
pop
mov
or
mov
mov
or
mov
or
push
xchg
or
push
jns
in
push
rorl
push
pop
adc
add
push
add
adc
jmp
stos
adc
mov
adc
push
jae
push
push
pop
adc
inc
adc
sub
sub
mov
xor
mov
adc
adc
repz
adc
adc
adc
jmp
sub
cmp
dec
adc
or
imul
push
adc
adc
inc
adc
sub
stos
adc
adc
adc
adc
dec
adc
in
lock
aad
out
or
xlat
pop
xor
lock
mov
add
add
cmpsl
xor
loopne
xor
lock
push
call
xchg
xor
xchg
sub
call
push
xor
flds
in
icebp
divl
aad
out
or
mov
xor
test
cmp
outsl
xor
lahf
xor
xor
aas
xor
negb
add
repz
dec
testb
sub
pop
ss
cmc
sub
ds
call
dec
hlt
fbstp
mov
hlt
divl
mov
call
out
cmp
pop
and
mov
pop
xor
xchg
pop
cmp
dec
and
cs
xchg
cmp
pushf
cmp
pop
sarb
pop
enter
add
mov
and
pop
mov
adc
mov
cmp
dec
push
enter
adc
popa
pop
sbb
popa
pop
and
push
pop
sub
adcb
repnz
cmp
and
inc
loop
pop
dec
fisubl
pop
fs
insb
ret
js
jo
xorb
pop
nop
and
pop
cwtl
sbb
pop
test
rcll
mov
add
add
add
cmp
jo
inc
icebp
lock
lock
add
pop
f2xm1
adc
rclb
push
roll
movsb
mov
add
out
out
xchg
hlt
push
adc
cmc
loop
pop
test
psadbw
adc
cmc
add
push
mulb
adc
negb
or
sub
cld
mov
sar
sbb
cld
xor
sbb
pop
sbb
std
out
cld
inc
pop
cld
mov
pop
and
jns
bound
push
sbb
xchg
pop
jp
mov
pop
nop
add
pop
call
decb
pop
sar
push
sar
cmp
fmul
cmp
test
push
clc
mov
cmp
cli
sbb
sbb
fstpt
or
stos
cmp
fildl
jmp
in
add
hlt
mov
mov
outsb
loope,pn
mov
sub
xlat
pop
sub
loopne
xor
adc
repz
les
xchg
sbb
shl
les
xchg
ljmp
xchg
fstpt
shl
aaa
xlat
jmp
aaa
push
loop
ss
push
jae
or
mov
pop
push
sarb
lret
cmp
add
add
adc
mov
or
lock
mov
ds
cmp
ds
clc
jmp
add
das
adc
xor
in
lods
pop
divb
and
in
sbb
sbb
xor
pop
xor
lea
gs
mov
pop
inc
xor
pop
dec
xor
pop
pop
xor
pop
insl
xor
pop
xorl
pop
mov
add
iret
xor
inc
adc
fistl
cli
shrl
pop
or
roll
scas
cmp
dec
scas
enter
sbb
jle
rorl
push
xlat
or
std
and
inc
std
sbb
pushf
in
insl
or
or
loop
push
rcrl
mov
shrb
clc
call
or
mov
or
pop
add
add
push
les
std
adc
and
adc
hlt
cwtl
adc
mov
adcl
hlt
imul
pop
shl
sub
sbb
negl
mov
divl
pop
mov
clc
leave
sbb
testb
or
adc
sti
or
sti
in
or
stc
jmp
or
add
add
cli
insb
or
adc
adc
sar
xlat
cmovnp
sahf
jne
add
adc
cltd
push
outsl
call
push
cmp
icebp
pop
cmp
cmc
xchg
js
insl
cmp
xlat
out
add
mov
cmp
cmp
add
hlt
push
xor
hlt
mov
popa
aam
das
jns
cmp
loope
push
das
push
aad
cs
cmc
mov
add
repz
sub
fistpl
inc
shrl
sub
fistl
xor
lock
xor
dec
xor
lock
xor
jbe
fs
lahf
sbb
pop
sbb
adc
adc
aaa
stc
adc
aaa
adc
aaa
jno
les
xchg
cmp
adc
cmp
push
das
cmp
push
lcall
or
fimull
jns
nop
or
cmp
push
cmp
adc
xchg
adc
cmp
ret
adc
ds
into
ds
cmp
mov
pop
push
xor
hlt
xor
jge
test
hlt
push
add
repz
dec
cli
mov
mov
ret
fidivl
ss
adc
cwtl
adc
sar
adc
adc
adc
adc
adc
adc
adc
test
adc
and
out
jne
inc
fistpll
outsl
fistps
movsb
iret
filds
iret
aad
mov
add
aas
scas
sahf
or
inc
or
cld
sub
cld
ja
push
xor
std
fmuls
or
stos
or
decl
or
clc
jle
push
idivl
maskmovq
jnp
mov
add
push
push
add
adc
or
push
out
mov
icebp
lock
shl
pop
adc
adc
add
dec
repnz
adc
jg
sub
and
push
adc
mull
push
testl
cmp
call
mov
cmp
repz
cmp
inc
cmp
repz
jmp
in
add
hlt
out
das
popa
aam
das
jle
push
das
cmp
mov
mov
outsb
cs
cmc
sub
cs
sub
fcmovbe
outsl
sub
xlat
cwtl
xor
shrl
imul
xor
cltd
xor
or
mov
xor
or
cwtl
cmp
or
mov
dec
cmp
or
pop
or
dec
or
cmp
or
cmp
or
cmp
add
add
or
cmp
or
cmp
add
jecxz
aaa
cmp
or
fisttpll
jmp
cmp
mov
push
ds
or
or
add
inc
or
stc
jmp
xor
stos
adc
mov
adc
mov
adc
sahf
adc
push
pop
adc
adc
add
add
adc
hlt
lock
hlt
jecxz
in
std
adc
aam
adc
fucomi
cvtdq2ps
leave
pcmpeqb
cmpsb
or
mov
packsswb
fmuls
lcall
cmpps
cli
je
cmc
repnz
or
ds
sub
js
ss
or
adc
add
outsb
out
and
adc
sti
testl
xor
cwtl
or
cld
test
cld
lret
cli
mov
mov
cmp
jnp
and
or
cmp
pop
push
mov
push
pop
or
clc
mov
dec
clc
mov
or
add
and
ds
add
adc
hlt
cmp
repz
adc
hlt
cli
adc
fdiv
jnp
in
repnz
repz
vmwrite
decl
cmc
scas
xor
fucomp
ss
in
xor
xor
cmp
xor
out
pop
cmp
loope
cmp
fisubs
cmp
jbe
and
pop
cmp
fisttpll
cmp
hlt
xor
popf
in
add
hlt
wrmsr
not
fsubrs
inc
rorl
das
xchg
aam
das
mov
cmc
xor
cs
mov
push
bnd
mov
rolb
xor
movswl
jle
hlt
xor
adc
xor
jp
js
je
mov
pushf
or
cmp
pop
jl
dec
pop
test
pop
pop
enter
out
repz
cmp
dec
cmp
add
add
jo
inc
or
aam
lds
push
or
cmp
cld
adc
fmull
inc
cmp
or
clc
or
cmp
repz
aas
out
add
clc
xchg
add
sub
out
or
xlat
pop
or
xlat
call
sbb
mov
adc
mov
or
mov
adc
mov
adc
push
arpl
adcb
adc
mul
adc
notb
pop
cmc
inc
push
jl
mov
or
fistpl
roll
nopl
popf
or
sub
pop
or
imul
and
in
jg
sub
in
or
in
into
or
in
xor
xchg
in
in
or
in
xchg
or
in
int
xchg
in
or
js
push
out
xchg
inc
out
mov
ds
jb
cwtl
in
daa
or
out
or
insl
or
rolb
dec
lock
pop
test
cmp
lahf
out
adc
iret
lock
or
icebp
imul
icebp
xlat
push
jg
rolb
in
fiaddl
repnz
repnz
jecxz
cmp
leave
cmp
ljmp
insb
ljmp
inc
ljmp
xchg
ljmp
jge
add
add
add
nop
jle,pn
dec
lods
idiv
sub
div
sub
idivl
mov
xlat
cwtl
xor
xlat
add
xchg
fldenv
xor
ljmp
add
fnsave
es
xor
mov
xor
xorb
icebp
decb
sub
out
ss
add
aaa
xchg
push
aaa
xor
cmp
cmpsb
cld
xchg
cmp
sti
mov
imul
cmp
or
cmp
or
mov
fdivrl
ret
aas
pop
or
std
pop
fidivrl
daa
or
add
add
add
add
les
xor
push
pushl
fwait
adc
xor
adc
xor
add
xor
sub
xor
sub
xor
and
or
mov
notl
adc
pop
adc
imulb
clc
idivb
popf
testb
mov
lahf
cli
enter
in
divb
rorb
testb
sub
and
add
add
cmp
push
push
idivb
lahf
cmc
mov
jle
mov
sbb
and
clc
xchg
cmc
ja
lods
hlt
xchg
clc
sahf
hlt
mov
fsub
hlt
hlt
jmp
sub
not
add
sti
sub
dec
cld
pop
in
cmp
in
mov
cld
sbb
stc
cld
mov
in
push
cld
insb
in
cld
sub
add
sub
mov
cld
xor
in
aad
icebp
jmp
test
movsb
jmp
fdivr
imul
mov
das
ljmp
inc
jmp
incb
ljmp
shr
test
incl
xchg
jmp
imul
out
incl
outsl
cmp
mov
cmp
addl
cmp
add
add
cmp
in
cmp
out
add
xchg
sub
add
xor
das
cmp
mov
das
pop
sbb
das
mov
adc
das
cld
cmc
ret
cmc
popf
cs
mov
fwait
hlt
push
cs
xchg
aam
adc
push
mov
and
xor
mov
xor
xor
xor
cmp
cmp
xor
subl
fsubrl
xor
adc
imul
sub
aaa
cmp
test
cwtl
sub
pop
das
cmp
xor
cmp
sub
xor
cmp
cs
cmp
cs
adc
das
mov
js
pushf
cmp
lods
cmp
mov
add
xor
cmp
sub
cmp
sub
cmp
sub
dec
cmp
out
stc
cltd
ljmp
iret
ficoml
jmp
leave
dec
incb
mov
clc
jb
mov
clc
mov
fdivr
xchg
adc
or
jl
cmp
add
out
in
or
sub
adc
cmp
and
add
add
ds
sub
xlat
fwait
repz
mov
repnz
add
cmp
adc
in
dec
adc
in
push
adc
in
pop
adc
in
gs
add
repnz
nop
repnz
lock
cld
and
or
cltd
call
aas
add
add
xchg
jns
stos
add
add
hlt
push
hlt
lahf
repz
adc
stc
sahf
lock
mov
or
sahf
lock
lock
mov
lock
sahf
lock
data16
insb
clc
pop
icebp
push
clc
jbe
dec
clc
pop
icebp
test
inc
icebp
mov
ds
xchg
clc
ss
mov
sahf
lock
cmpsb
lock
sahf
lock
iret
push
xor
mov
and
adc
xor
adc
add
repz
add
or
or
xor
jns
xor
jno
xor
pop
in
xor
push
les
xor
xor
push
aam
adc
int3
xor
xor
add
push
xor
sbb
jmp
cmovp
add
cmp
cli
xchg
cmp
repz
cmp
inc
sub
add
add
add
xor
add
outsl
xor
das
xor
xor
or
nop
xor
ss
xor
ss
xor
inc
xor
xor
int3
xor
xor
xor
inc
das
xor
sbb
test
ss
xor
aaa
loope
aas
aaa
repz
aaa
mov
das
shlb
xor
aaa
jae
xchg
das
cld
aaa
int
mov
movsb
sub
cmp
cmp
icebp
imull
sbb
sti
xor
push
sti
inc
sbb
push
cld
jmp
cmp
sahf
not
in
or
push
out
mov
sub
pop
icebp
inc
rorl
aaa
mov
sar
scas
lahf
cli
adc
pusha
sbb
pushf
negl
dec
sbb
inc
testb
out
repnz
add
add
ja
popf
cmc
push
cmp
push
pushf
aam
lock
fsubr
xchg
rorl
in
cli
mov
add
jmp
cld
sub
dec
cld
pop
in
xchg
std
lcall
shr
sar
dec
jmp
jns
xor
mov
callw
loop
adc
repz
sti
cmp
out
mov
jle
out
cwtl
repz
ja
inc
hlt
test
test
sub
mov
mov
mulb
repz
pushf
out
or
fwait
lock
icebp
push
out
adc
int3
sti
mov
in
loop
in
mov
mov
in
jmp
cli
shll
pop
call
iret
cmp
or
iretw
imul
mov
es
and
mov
add
fwait
lret
cs
xchg
test
push
fwait
sub
leave
xchg
lret
jp
sub
jns
sub
push
pop
jnp
mov
sub
push
xorb
push
test
int
icebp
xor
dec
shll
popa
inc
dec
xor
shlb
mov
shlb
fbstp
aaa
or
mov
test
xor
aaa
in
cmp
int3
cmp
sub
cmp
add
add
sub
sub
cmp
daa
sbb
shll
cmp
sub
mov
lret
sub
cmp
jb
repz
stc
inc
decl
das
cmp
xor
xor
xor
cli
xor
xor
xor
inc
xor
xor
xor
xor
cmp
es
repnz
add
add
repnz
push
aad
icebp
jp
popf
repnz
mov
repnz
mov
repnz
xor
pop
adc
repnz
rep
hlt
test
repz
repz
lret
fdivs
shl
out
jbe
adc
or
aas
cmc
ss
xchg
cmc
icebp
cmc
push
sbb
sbb
pop
adc
clc
inc
or
testl
stc
ds
in
add
testb
shl
loopne
sbb
stos
in
idivl
pusha
testl
outsb
idiv
and
add
and
out
out
es
repz
and
cmc
inc
aad
cmc
lods
aad
icebp
stc
icebp
not
mov
pop
cmp
out
lret
repnz
movsb
repnz
mov
push
repz
add
xlat
sbb
sahf
xlat
repnz
xlat
inc
lock
fdivrs
jg
mov
xchg
fmuls
out
sbb
sahf
out
inc
fdivr
scas
dec
cld
xor
ss
aaa
lret
xor
push
mov
jne
pop
xor
stc
pop
xor
adc
xor
repz
sti
out
push
xor
pop
rolb
cmp
shrl
jmp
in
add
mov
das
imul
xor
xchg
repnz
xchg
ret
xor
cmpb
jecxz
in
xor
push
shlb
or
aaa
pop
push
xchg
aaa
add
and
xor
adc
scas
sbb
cmp
sbb
pusha
sbb
aas
push
es
inc
pop
add
das
push
fdivl
push
push
rdmsr
sub
add
and
push
adc
xor
xor
push
das
icebp
cmp
cmp
sbb
cmp
sbb
cmp
sbb
aas
jle
cli
jle
add
jecxz
divb
and
mov
cmp
shlb
ss
pop
xor
std
in
cmp
fsubrp
mov
cmc
pop
out
adc
and
dec
hlt
push
out
gs
out
mov
aam
out
aam
call
jae
stos
call
mov
in
call
cmc
adc
jmp
aaa
adc
push
cli
pop
jmp
xchg
cli
lcall
jmp
fldenv
pop
sarl
cmpl
adc
repz
add
mov
fmul
sti
inc
fadds
in
sti
fistl
in
fildl
scas
fistpl
dec
fisttpl
push
fnclex
in
fcmovu
sbb
fisubl
in
xlat
in
mov
jmp
fistl
icebp
push
cmp
icebp
mov
sbb
stc
ficoms
mov
xor
test
out
mov
add
add
add
repz
hlt
push
aam
hlt
aam
in
jnp
cs
jb
sub
push
push
mov
lcall
sub
iret
cmp
sub
xor
mov
adc
in
pandn
jne
dec
xor
cld
mov
xor
je
dec
in
push
xor
fnstsw
xor
add
add
pop
xor
mov
out
bswap
ret
aaa
cmpsl
mov
mov
aaa
sahf
mov
aaa
inc
jl
aaa
add
sub
cmp
sub
cmp
sub
cmp
hlt
cmp
add
pop
sub
cmp
sub
cmp
sub
cmp
sub
fldt
pop
cmp
sub
mov
sub
cmp
add
add
into
cmp
adc
adc
adc
loope
data16
ret
aas
push
adc
aas
popa
adc
aas
and
repz
mov
or
add
adc
xor
xor
inc
xlat
jg
push
mov
in
je
stos
repz
mov
hlt
sbb
icebp
in
cs
enter
mov
stos
push
insb
in
loop
add
add
inc
in
cs
mov
insl
cmc
xchg
into
repnz
add
and
bnd
add
mov
outsb
lock
mov
mov
icebp
idivb
cli
imulb
pop
enter
push
in
push
sub
sbb
std
sub
push
in
inc
jmp
in
mov
mov
add
mov
fcoms
out
popf
fcomip
out
jns
mov
out
or
jae
fiadds
icebp
icebp
fstpl
out
fstpl
inc
fstl
mov
sbb
add
add
cmc
push
shrl
repz
repnz
call
pop
stc
in
adc
push
aad
divb
idivl
in
pop
ficomps
lock
cld
lock
dec
icebp
mov
std
mov
sbb
jno
add
mov
xchg
insb
cs
jbe
sub
pop
jne
sub
mov
cmp
sub
push
mov
popa
xor
push
xor
cmp
aaa
push
adc
test
push
xor
jns
jle
stos
or
mov
cld
clc
jp
ljmp
cmp
shrl
cmp
xor
add
sub
aas
subl
aas
imul
sarl
sub
jle
cli
ljmp
xor
test
orb
xor
addps
mov
push
stos
xor
adc
xor
adc
xor
mov
add
add
adc
xor
sbb
xor
sbb
xor
adc
xor
loope
jg
adc
xor
out
repnz
insb
repnz
icebp
inc
repnz
lods
icebp
mov
fld
icebp
not
adc
fdivrs
repz
sarb
cmpb
repnz
adc
adc
mov
insb
pop
cwtl
in
pcmpgtb
aas
in
incl
in
incb
in
out
loope
dec
out
mul
pop
faddp
in
fidivrs
in
int
in
mov
dec
out
mov
call
lods
and
jmp
in
loopne
in
call
fimull
out
cmpsl
fnstenv
in
movsl
fsubrs
xchg
mov
add
lahf
shll
repz
sbb
ljmp
repnz
sarb
repnz
psllw
in
add
gs
xor
jmp
push
rorb
inc
sbb
arpl
sbb
add
add
mov
repz
pop
in
xlat
fidivrl
in
sbb
in
inc
in
scas
out
loop
adc
imul
call
push
sbb
shl
add
ror
sub
mov
out
xor
mov
xor
mov
xor
pop
clc
jmp
in
add
jns
sub
int3
ja
xor
push
call
cmp
mov
clc
adc
add
imul
cs
xor
movsl
cmp
sub
xor
iret
sbb
xor
pop
movsb
xor
push
xor
cmc
lret
xor
hlt
jg
add
cmp
sub
cmp
mov
pop
cmp
cmc
sub
cmp
aad
aaa
cmp
jne
inc
cmp
jne
push
cmp
jne
addr16
push
sub
std
sub
cmc
sub
cmp
pop
push
lahf
cmp
pop
push
scas
cmp
push
push
mov
jge
mov
cmp
jne
xlat
cmp
jne
out
out
loopne
mov
sub
add
cmp
adc
xor
sbb
or
and
repnz
add
in
icebp
and
shl
in
fyl2xp1
in
rol
in
leave
or
loopne
add
call
mov
out
test
and
or
cmp
adc
add
sbb
or
and
add
sub
stc
out
lock
cmp
jmp
out
fdivr
out
rolb
ds
add
into
add
add
repz
jmp
push
into
push
icebp
mov
xchg
int
icebp
mov
mov
xchg
fisubrl
data16
out
add
add
aam
call
nop
adc
xor
add
repz
cmp
xchg
rclb
cmc
not
ljmp
iret
shl
push
iret
jmp
icebp
fwait
into
addr16
or
lret
cmp
jge
aaa
add
cli
adc
adc
in
cmp
or
cmp
iret
lods
cmp
mov
cmp
into
or
cmp
je
mov
push
cmp
cmpb
jmp
loop
add
je
das
test
mov
das
sub
pop
or
ficoms
cs
pop
mov
test
cs
xor
sub
add
push
pop
xor
add
add
push
jbe
mov
mov
xor
adc
and
aaa
cmp
movsb
aaa
mov
in
inc
and
aaa
nop
push
popa
cmp
mov
popa
push
mov
cmp
push
sarb
icebp
push
fdivrl
daa
pop
out
in
push
lock
push
cli
cmp
pop
push
cmp
pop
and
and
sub
xchg
pop
ss
push
inc
cmp
pop
dec
cmp
shl
pop
out
mov
in
in
fcompp
in
into
mov
in
mov
shl
scas
stos
in
scas
push
push
in
push
je
mov
in
mov
sti
out
sbb
add
adc
out
fnstsw
out
int
out
int
out
mov
popa
out
lods
dec
out
lods
gs
sbb
mov
jae
xchg
out
or
into
imul
into
jns
dec
into
xchg
xchg
jmp
push
into
jno
and
lahf
jmp
sbb
mov
jmp
test
jmp
loop
xlat
call
add
pop
jmp
test
popf
call
push
int
call
gs
pop
call
dec
int3
xor
jbe
out
out
iret
lret
iret
mov
pushf
iret
and
cli
into
pop
out
into
decl
dec
pop
cmp
inc
sbb
cmp
inc
test
xchg
jmp
jecxz
add
xor
das
bound
cmp
negb
jns
jle
add
add
push
sbbl
leave
sub
pop
mov
sub
pop
mov
sub
cwtl
fs
nop
or
jne
pop
xor
fdivs
mov
mov
ljmp
popf
xor
mov
bound
and
jmp
add
add
aaa
add
xor
sub
aaa
push
sub
mov
and
decl
xor
cli
pop
add
jo
jle
jnp
fstpt
fisubrl
cmpb
xor
cmp
xor
cmp
xor
cmp
mov
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
and
dec
test
sbb
cld
jmp
and
inc
sbb
cld
cmp
add
out
rcl
cmc
mov
rcr
shll
xlat
jmp
rclb
dec
mov
test
out
mov
pop
les
adc
adc
cmp
fstp
dec
maskmovq
push
cmp
mov
incl
add
enter
add
add
mov
aad
fdivr
mov
ret
add
faddp
into
jo
out
imul
roll
rol
aam
shrb
int3
rcrb
pop
roll
aam
shll
aam
xlat
rcl
ret
xlat
stos
xlat
inc
fadds
fadds
fmuls
xlat
xchg
int3
xlat
jg
repz
mov
xlat
push
xlat
push
lret
mov
jmp
iret
neg
push
into
xor
mov
into
call
in
add
xchg
loope
into
xchg
enter
or
fnstsw
fidivs
in
mov
xor
sub
sbb
cmpsb
xor
sbb
xor
cmp
xor
cmp
xor
sub
xor
sub
xor
sbb
xor
sbb
xor
or
xor
or
xor
mov
xor
lods
daa
xor
lods
adc
cmp
stc
cmp
ret
add
sub
sub
sub
sub
sub
push
sub
push
sub
aas
out
sub
aas
fisubrs
in
ds
aas
dec
xchg
sti
call
ds
add
push
aaa
adc
out
das
and
push
aaa
xor
mov
das
push
xor
das
fs
das
clc
out
ljmp
add
into
ss
das
mov
ss
xor
ss
xor
mov
jecxz
mov
add
sub
and
adc
inc
shrl
arpl
add
add
mov
mov
mov
shl
sbb
rolb
adc
xlat
and
push
xlat
inc
adc
arpl
nop
xlat
xor
shlb
repnz
shl
fidivl
rolb
shrl
shlb
fsts
rolb
call
roll
mov
dec
shl
sbb
add
daa
shll
sbb
inc
adc
rclb
repnz
add
add
add
aam
ror
aam
rcl
aam
ror
aam
shll
shrl
pop
rcll
push
rorl
pop
roll
inc
rorl
cmp
push
aad
rorl
pushf
shll
aad
shrl
aad
rcll
aad
rorl
aad
rol
aam
ror
aam
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
mov
add
add
add
add
add
add
add
add
add
add
add
jle
add
mov
add
mov
add
jle
add
jle
add
dec
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
incl
add
add
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
decl
add
add
add
add
dec
pop
add
into
pop
add
mov
pop
add
into
pop
add
into
pop
add
mov
pop
add
mov
add
mov
add
jle
add
jle
add
mov
add
mov
add
jle
add
jle
add
dec
pop
add
dec
pop
add
ds
add
ds
add
dec
pop
add
dec
pop
add
ds
add
ds
add
push
pop
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
dec
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jle
add
mov
add
mov
add
jle
add
jle
add
dec
add
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
mov
add
jle
add
jle
add
dec
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
decl
add
add
add
add
dec
pop
add
into
pop
add
mov
pop
add
into
pop
add
into
pop
add
mov
add
add
pop
add
mov
add
jle
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
mov
add
add
add
add
add
jle
add
mov
add
add
add
add
dec
add
add
add
ds
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
incb
add
into
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jle
add
mov
add
mov
add
jle
add
jle
add
dec
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
decl
add
add
ljmp
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
push
add
add
incb
add
add
add
add
add
incb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jle
add
mov
add
add
add
add
dec
add
add
add
ds
add
add
add
add
dec
add
add
out
fistpl
mov
pushf
hlt
sbbb
push
dec
pop
mov
push
xor
rcrl
adc
add
add
mov
sbb
dec
cmp
and
sub
jae
push
cli
and
jbe
cmp
mov
and
mov
xchg
test
ja
pop
inc
inc
dec
lea
push
cwtl
or
inc
pushf
test
jns
add
lret
dec
mov
roll
jge
and
jge
sahf
fcomps
add
add
stc
push
and
in
enter
cmp
ljmp
outsl
xchg
popa
cmp
loope
out
jge
filds
fisubrl
mov
add
fnsave
jg
loop
out
ret
or
mov
xor
or
test
adc
jl
iret
mov
jo
aad
and
sbb
dec
bound
int3
lahf
push
sbb
hlt
add
pop
inc
sbb
mov
sub
mov
and
adc
mov
mov
rep
mov
or
test
adc
cs
scas
in
jns
xchg
pop
cmp
pop
inc
sbb
push
mov
divl
push
add
add
add
dec
inc
mov
sbbl
mov
mov
sahf
xchg
add
mov
cmp
adc
rolw
iret
mov
jg
fldenv
inc
fists
mov
cmp
nop
imul
stos
jno
dec
rcll
cmp
dec
mov
pop
mov
out
or
das
mov
clc
mov
add
insb
push
add
insb
xor
je
cmp
xchg
xchg
pushl
push
shr
mov
pop
insl
push
cltd
dec
out
das
fdivrl
iret
pop
dec
push
xor
mov
sbb
testb
test
dec
ret
sbb
in
loope
mov
int3
mov
in
pop
inc
or
fistpll
ljmp
ret
xchg
js
push
cltd
push
xor
cmpl
insb
jb
mov
mov
jl
cld
pop
push
mov
xorl
xor
cmpb
jo
jmp
dec
push
mov
jg
addl
cmp
mov
in
push
mov
dec
in
inc
fmull
out
jl
clc
pop
push
clc
mov
add
add
jl
call
xchg
and
push
fistpll
insb
inc
clc
mov
jl
cld
and
add
add
jmp
jle
hlt
movb
xchg
out
mov
jle
hlt
sbb
sbb
jg
lock
add
cmp
lods
in
add
aaa
add
add
cmpsl
jo
mov
lock
cli
scas
or
add
add
jge
in
pop
push
in
and
mov
push
cmp
dec
push
xchg
add
cmp
jmp
rorb
mov
int3
sbb
int3
mov
in
add
call
mov
push
call
andl
mov
push
pop
aaa
call
push
sub
mov
aas
add
add
add
pop
add
add
mov
and
inc
jg
cmp
add
ret
dec
hlt
sub
or
jge
cld
insb
clc
jl
in
add
dec
call
push
mov
jnp
mov
cmp
or
mov
mov
mov
int3
xor
in
pop
adc
test
or
outsb
cmp
pop
movsb
mov
int3
fwait
mov
int3
mov
int3
adc
mov
clc
dec
mov
cld
push
cli
jg
inc
out
ret
int3
mov
mov
int3
mov
int3
adc
addl
push
push
jnp
inc
out
cmp
inc
out
cmp
pushl
call
cmp
add
push
insb
dec
add
pop
or
dec
hlt
mov
inc
ret
int3
xchg
jl
push
sub
hlt
add
add
jmp
jp
cld
les
mov
call
inc
adc
mov
add
loopne
add
mov
shrl
add
out
cld
ljmp
ret
int3
mov
mov
int3
mov
in
out
add
add
jp
mov
jecxz
inc
out
ret
int3
and
int3
xor
in
add
inc
filds
jnp
out
add
jecxz
ljmp
jp
or
mov
hlt
mov
add
fimull
mov
call
inc
cld
insb
push
hlt
cmp
lock
pop
inc
hlt
mov
hlt
pop
mov
inc
sar
cmp
cli
xor
lock
or
data16
movntq
mov
jp
or
add
jp
clc
pop
call
add
jp
or
adc
dec
cld
or
fwait
mov
jp
or
inc
cld
mov
in
mov
inc
ret
int3
xor
add
mov
add
add
jp
in
aaa
fmull
repz
call
outsl
test
add
jp
lock
jg
add
add
lock
dec
loopne
and
cmpl
pop
test
add
mov
aaa
loopne
lcall
adc
pop
aas
hlt
mov
outsl
sbb
filds
adc
lcall
or
cmp
mov
dec
loopne
and
add
jp
hlt
pop
ss
sbb
add
outsb
dec
in
sub
add
out
mov
cmpb
outsl
pop
mov
in
cmp
outsl
inc
sub
add
out
mov
cmpb
repz
addl
adc
mov
mov
or
idiv
mov
push
call
subl
mov
fcoms
mov
or
insb
ds
push
decl
mov
mov
lock
lea
mov
fadds
hlt
insb
push
in
cmpsb
or
mov
in
ret
dec
loopne
adc
decl
rol
int3
adc
add
orl
in
add
cli
jae
inc
out
cmp
inc
out
cmp
std
cmp
add
mov
push
insb
cmp
insb
dec
or
cmp
mov
inc
ret
int3
xor
int3
xchg
mov
mov
and
mov
out
inc
out
push
add
inc
ret
int3
mov
int3
adc
mov
add
inc
add
insb
inc
xor
pop
dec
add
xchg
mov
insb
dec
in
mov
adc
clc
outsb
cmp
mov
push
insb
inc
fs
clc
add
pop
mov
mov
in
cmp
jne
mov
mov
mov
mov
cld
cli
mov
lea
mov
add
add
fmull
cld
pop
or
sarb
in
mov
rol
int3
mov
int3
xor
mov
add
imul
daa
add
int3
flds
push
jg
hlt
jmp
mov
push
mov
mov
or
mov
loopne
hlt
test
xor
add
inc
add
lcall
jmp
mov
mov
pop
add
add
add
push
sub
ret
add
adc
loopne
add
add
add
add
mov
cmpsl
push
inc
out
enter
push
inc
out
or
push
inc
cmpsl
push
inc
out
mov
xor
popf
pop
loopne
addl
add
sub
mov
in
or
aas
loopne
mov
ret
int3
xor
int3
mov
in
stos
or
inc
fistl
stos
or
add
jecxz
ret
int3
sbb
int3
mov
int3
xor
mov
add
mov
mov
mov
push
cmp
cmp
mov
in
mov
clc
mov
add
add
mov
aas
out
add
push
dec
dec
sti
lcall
mov
push
imul
out
push
push
fimuls
pop
dec
fmull
mov
mov
xor
push
add
call
andl
mov
add
ljmp
out
cmp
seto
cmp
add
add
fdivs
insb
dec
call
jae
mov
fs
adc
adc
mov
mov
pop
push
loopne
push
and
dec
xchg
shl
negb
mov
push
cmpsl
inc
sbb
inc
aas
mov
in
or
insb
cmp
mov
xor
push
sub
testl
pop
push
call
in
jmp
cld
clc
fldl
add
add
push
iret
mov
call
cmpl
out
insl
or
push
and
cmp
cmpl
push
adc
daa
insb
add
out
mov
xor
xor
fisttpll
test
or
xor
add
add
aaa
lock
mov
cmp
fs
pushf
push
stos
add
jne
imul
pop
inc
hlt
push
lea
notl
mov
mov
mov
insb
fmuls
adc
loopne
push
xor
mov
call
push
inc
out
call
andl
mov
add
sbb
fsub
mov
add
add
loopne
cmpsl
push
inc
out
inc
xor
mov
inc
out
add
push
pop
negb
mov
fincstp
jmp
mov
cmc
cmp
in
sub
out
xor
add
mov
push
pop
or
push
sub
mov
ret
push
inc
out
call
addl
add
stos
or
push
jg
stc
decl
fs
mov
push
inc
out
call
andl
mov
or
push
insb
inc
loopne
ljmp
sub
aas
add
das
hlt
call
xchg
out
and
add
lea
outsb
decb
repnz
inc
out
notl
jmp
sti
rcr
add
add
mov
cmp
add
mov
int3
xor
mov
cmp
int3
mov
int3
adc
mov
insb
clc
mov
mov
icebp
cmp
test
pop
pop
and
int3
xchg
mov
push
mov
movsb
les
stos
add
dec
fcomi
incl
add
add
mov
xor
add
push
stos
add
xchg
xlat
mov
inc
xor
mov
add
sarb
test
in
add
add
sub
add
out
mov
add
mov
outsb
pop
rclb
add
test
cmpsl
repnz
or
testl
ljmp
add
add
add
in
or
loop
push
inc
out
add
out
xor
add
repnz
out
add
fs
enter
add
insl
add
shlb
inc
out
rclb
add
or
pop
inc
call
inc
out
cmp
mov
in
mov
mov
push
mov
push
sub
int3
sarl
add
ljmp
aas
out
pusha
add
add
add
fadds
push
stos
add
adc
inc
jmp
inc
out
aam
stos
add
push
fincstp
jmp
mov
xor
aad
xlat
testl
cmp
push
push
movsb
mov
call
pop
iret
idiv
rolb
aam
dec
xchg
lock
mov
fcoml
in
cmpsb
sti
js
add
mov
mov
mov
aam
stos
add
inc
inc
xor
or
in
hlt
push
aas
scas
stc
ljmp
cmpl
mov
push
or
hlt
add
mov
mov
add
and
add
out
jmp
pop
xor
andl
cmp
jae
mov
add
fmull
mov
in
clc
mov
mov
data16
jmp
adc
in
clc
xor
movsb
mov
inc
aas
mov
jmp
mov
mov
add
add
xchg
push
inc
out
leave
mov
stos
push
inc
out
leave
mov
xchg
push
inc
out
inc
idiv
aad
or
pop
dec
clc
mov
data16
add
add
mov
fwait
push
inc
out
mov
call
fs
ljmp
aad
aad
test
jmp
push
inc
out
mov
add
push
mov
mov
mov
call
mov
fisttps
inc
out
ret
xor
mov
pop
and
int3
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
adc
pop
cmpsl
or
pop
or
aad
jl
ljmp
xchg
jg
sub
stos
dec
mov
popf
or
fcomp
popf
add
add
pop
mov
mov
lods
mov
nop
sub
pop
shlb
mov
rcl
es
jb
lret
inc
cmp
or
push
dec
scas
push
ret
dec
cs
or
sti
daa
or
ret
inc
and
add
loop
scas
int
mov
lds
mov
pop
jno
inc
aad
add
fcoms
xorl
xchg
fcoml
out
mov
les
movsl
sub
sbb
ja
cwtl
addr16
jns
or
repz
dec
or
xchg
in
add
jne
cmp
xchg
addb
call
xchg
es
mov
push
add
sbb
insb
stc
pop
nop
rolb
inc
xlat
ja
pop
ss
imull
stc
out
adc
sar
xchg
adc
jae
std
je
and
lods
mov
fisubrs
xchg
popa
pop
addr16
sahf
cmc
xchg
pop
arpl
cmpsl
jne
js
sbb
repz
les
sub
lret
and
test
repnz
jl
mov
push
stos
inc
inc
mov
in
xor
inc
icebp
and
push
in
xchg
ret
lret
cmp
mov
scas
cmpl
and
stos
push
and
dec
xchg
add
xchg
lds
push
adc
jns
jp
hlt
stos
jns
popa
rorl
mov
in
into
hlt
bound
nop
sti
cld
dec
pushf
icebp
jp
push
adc
pushf
inc
inc
lcall
mov
or
xlat
test
out
mov
int3
mov
mov
mov
ret
add
add
add
xlat
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xlat
add
add
xlat
add
add
add
add
xlat
add
add
add
add
add
add
add
add
xlat
add
add
xlat
add
add
add
add
xlat
add
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
dec
outsl
popa
fs
imul
add
and
inc
gs
jb
arpl
fs
jae
add
inc
add
outsl
jae
dec
popa
outsb
fs
add
push
imul
imul
jns
add
cmpsl
add
jae
jb
popa
je
add
jg
inc
jb
popa
je
inc
imul
imul
insb
insb
outsl
arpl
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
fs
arpl
inc
add
add
fs
jne
jae
jb
add
inc
push
xor
cs
insb
add
sub
push
gs
insb
outsl
jae
dec
gs
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
test
add
adc
sbb
pop
xor
cmp
push
xor
imul
xor
jmp
add
xor
xor
std
xor
loope
xor
sub
xor
xor
xor
xor
xor
xor
xor
out
xor
popa
ss
ss
movsb
ss
or
sbb
and
daa
aaa
sub
xor
imul
aaa
out
aaa
or
aaa
cmp
xchg
cmp
cmp
cmp
cmp
mov
add
add
add
ss
sbb
and
es
xor
cmp
ds
ss
add
add
add
or
add
aam
