push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
mov
push
lea
push
call
mov
movb
mov
mov
mov
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
add
mov
cmpl
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
push
push
push
push
push
push
lea
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
xor
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
mov
push
call
add
mov
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
mov
add
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
push
mov
sub
push
push
push
movl
mov
pusha
call
movl
movl
movl
movl
movl
mov
mov
mov
movzbl
cmp
je
mov
movzbl
cmp
je
mov
movzbl
cmp
jne
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
call
mov
mov
lea
push
mov
push
push
call
test
je
call
call
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
add
mov
popa
push
mov
mov
sub
mov
mov
ret
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
shr
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
lea
push
call
movl
jmp
mov
add
mov
mov
cmp
jge
cmpl
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
push
push
push
push
push
push
lea
push
call
mov
cmpl
je
cmpl
jne
jmp
mov
push
call
mov
add
mov
add
mov
mov
jmp
mov
cmp
jne
mov
sub
push
mov
push
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
movl
mov
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
push
mov
push
call
add
sar
cmp
jne
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
mov
mov
push
lea
push
call
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
add
mov
jmp
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
mov
mov
mov
pop
ret
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
imul
outsb
gs
xor
add
add
xor
jae
jns
jae
je
xor
xor
xor
xor
pop
add
xor
arpl
jb
imul
add
js
add
add
xor
add
jbe
addr16
xor
xor
add
add
xor
xor
inc
add
jns
jae
je
xor
xor
xor
xor
pop
add
inc
add
jb
imul
add
js
add
add
pop
add
push
add
dec
add
add
jb
jb
add
je
inc
add
outsb
add
add
insb
add
add
add
outsl
add
je
jb
outsl
add
add
add
jae
imul
and
dec
add
outsb
add
add
jb
pop
add
js
add
jne
je
imul
add
add
push
push
push
dec
inc
push
push
push
dec
dec
add
add
add
clc
loopne
add
add
cld
loope
add
add
fs
add
loop
add
add
cwtl
loope
add
loope
add
loope
add
loope
add
loope
add
add
add
loop
add
loop
add
add
add
loope
add
add
fsub
add
ljmp
add
loop
add
loop
add
add
add
push
imul
imul
jns
add
cmpsl
add
jae
jb
popa
je
add
jg
inc
jb
popa
je
inc
imul
insb
outsl
jae
dec
popa
outsb
fs
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
imul
insb
insb
outsl
arpl
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
sub
push
gs
insb
outsl
jae
dec
gs
pop
add
addr16
jo
outsb
dec
gs
add
push
inc
push
dec
xor
cs
insb
add
add
add
dec
icebp
add
iret
ret
mov
ret
scas
ret
push
icebp
add
cmp
add
mov
int
cmp
int
cmp
int
cmp
int
cmp
int3
mov
cmp
int
cmp
xchg
gs
int
aas
fmul
add
push
loope
add
icebp
add
rcll
sarl
rorl
add
mov
shll
ror
cmpsb
shr
and
push
xor
sbb
retw
xor
ret
pop
xor
ret
jp
rol
xor
ret
push
ret
pop
ret
sub
xor
sub
dec
xor
shll
sarl
rcll
and
sar
popa
lds
mov
gs
lds
add
xlat
lds
xor
lds
xor
iret
xor
fnstenv
faddp
add
and
insb
xor
mov
fdivl
stos
movb
dec
ret
adc
aaa
ret
sub
ss
ret
pop
ss
ret
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
add
add
inc
add
je
and
jb
add
popa
sets
repnz
scas
add
pop
sahf
popa
sets
repnz
cmpsb
add
mov
insb
scas
mov
gs
push
icebp
add
nop
andl
xchg
inc
imul
je
jo
je
push
icebp
add
xchg
xchg
je
add
jp
outsl
addb
arpl
jns
push
icebp
add
adc
je
and
jne
ss
gs
push
icebp
add
dec
repnz
add
inc
add
repnz
add
inc
add
repnz
add
repnz
add
icebp
inc
add
icebp
inc
add
je
rcrl
rolb
fs
lcall
add
fwait
mov
add
popf
xor
xor
icebp
add
data16
test
fs
add
outsb
xchg
insl
jae
test
add
xorb
test
fs
popf
add
es
insl
arpl
mov
add
cltd
jb
es
insb
inc
daa
popf
outsl
arpl
add
sbb
xchg
insb
inc
out
outsl
arpl
add
lcall
add
fdivrl
add
xchg
insb
push
rcrl
fwait
xchg
popa
jo
popf
insb
outsl
mov
add
js
jb
outsb
popf
xor
sub
icebp
add
xchg
xchg
je
popa
pushf
arpl
orb
addl
add
pop
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
icebp
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
jmp
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
dec
out
add
push
icebp
add
push
icebp
add
dec
out
add
push
testl
jmp
push
icebp
add
out
add
inc
icebp
add
xor
add
push
mov
jmp
add
dec
icebp
add
push
repnz
push
icebp
add
push
repnz
push
icebp
add
nop
in
add
add
jmp
push
icebp
addl
cli
in
add
hlt
adc
ljmp
add
hlt
add
stos
hlt
add
stos
hlt
add
jle
add
mov
hlt
add
stos
hlt
add
jp
add
jp
add
push
add
push
jp
add
fucompp
add
push
add
push
add
cmp
add
cmp
add
sub
add
sub
add
cmp
add
cmp
add
sub
add
sub
add
cli
repz
cli
repz
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
xor
cmp
add
les
add
push
sbb
add
mov
decl
add
push
sbb
add
add
repz
fistpll
and
push
sbb
add
or
push
sbb
add
add
push
sbb
add
add
push
fadds
adc
jno
cmpsl
pop
bound
push
icebp
lods
sub
jmp
daa
push
icebp
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
cmp
add
sub
add
sub
add
cli
lock
cli
lock
ljmp
add
lock
cli
lock
ljmp
add
lock
stos
lock
stos
lock
mov
lock
stos
lock
stos
lock
jp
jp
add
push
add
push
add
jp
add
jp
add
push
add
push
add
cmp
add
cmp
add
sub
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
add
push
enter
test
push
nop
mov
add
mov
add
lret
add
mov
add
mov
add
mov
add
ja
push
icebp
inc
mov
push
icebp
mov
mov
push
icebp
sarl
icebp
aad
push
icebp
jno
add
push
icebp
jne
push
icebp
xchg
mov
push
icebp
sbb
mov
push
icebp
idivl
push
icebp
lods
mov
push
icebp
dec
ret
push
icebp
gs
push
icebp
xchg
push
icebp
ret
sub
ret
push
icebp
in
push
icebp
movsl
ret
jmp
ret
add
adc
add
out
add
out
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
push
icebp
add
std
in
add
push
icebp
add
hlt
in
add
in
add
hlt
in
add
in
add
in
add
mov
in
add
ret
in
add
mov
add
push
add
es
add
fs
add
jle
add
stos
push
add
rclb
add
push
add
enter
lcall
add
inc
add
dec
inc
add
pop
inc
add
inc
inc
add
sahf
inc
add
or
add
add
add
add
inc
add
cmpsb
push
add
orb
inc
add
pop
inc
add
add
inc
inc
add
xchg
inc
add
jbe
add
mov
add
inc
add
inc
inc
add
push
shlb
push
mov
add
mov
push
mov
mov
push
sahf
mov
push
dec
mov
push
ds
push
push
add
mov
push
add
add
ret
add
ret
add
les
push
inc
ret
add
ret
add
ret
add
ret
add
add
aam
push
lcall
push
pop
aam
push
xor
add
aam
push
or
add
lods
add
lods
add
lods
add
xchg
stos
push
icebp
jg
push
icebp
popa
stos
push
icebp
dec
stos
push
icebp
push
stos
push
icebp
pop
stos
push
icebp
daa
stos
push
icebp
imull
push
icebp
out
stos
push
icebp
xchg
stos
push
icebp
jg
push
icebp
cmpsl
stos
push
icebp
lods
stos
add
push
icebp
xor
push
icebp
mov
push
icebp
shrl
push
icebp
popf
test
push
icebp
add
push
icebp
out
test
push
icebp
or
push
icebp
pop
lods
push
icebp
aas
lods
push
icebp
add
repnz
repnz
repnz
repnz
repnz
scas
repnz
cmpsb
repnz
push
add
add
div
add
out
icebp
add
out
add
clc
icebp
add
call
icebp
add
icebp
add
scas
icebp
add
mov
icebp
add
test
add
test
add
add
icebp
add
add
icebp
add
icebp
add
in
add
movb
mov
inc
add
add
nop
inc
add
jbe
add
je
add
xchg
add
dec
add
push
add
and
add
and
add
add
sub
add
xor
add
xor
add
cli
lock
cmp
add
mov
xor
add
lock
test
add
xchg
cmp
add
cmp
add
add
dec
cmp
add
cmp
add
add
add
cmp
add
push
pop
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
xchg
mov
add
mov
add
mov
add
mov
add
add
add
push
sbb
add
rolb
push
rolb
push
rolb
add
add
mov
rcll
rclb
rclb
rclb
rclb
mov
push
icebp
iret
push
icebp
sbb
push
icebp
das
rclb
rclb
rclb
rclb
rclb
rclb
push
icebp
pop
push
icebp
popf
rolb
push
icebp
stc
rclb
rclb
rclb
rcll
rcll
rclb
rcll
rcll
rcll
rcll
rcll
ret
add
xchg
out
add
nop
out
add
xchg
out
add
xchg
out
add
xchg
out
add
xchg
out
add
out
add
out
add
out
add
xchg
out
add
xchg
out
add
add
xchg
out
add
adc
add
adc
add
adc
add
pop
out
add
pmaxsw
xlat
pop
out
add
adc
out
add
out
add
push
out
add
push
out
add
dec
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
add
es
clc
sub
add
nop
xor
add
add
and
add
add
add
xor
add
xor
add
cmp
add
cmp
add
cmp
add
add
cwtl
xor
add
xor
add
xor
add
ret
add
ret
add
add
ret
add
ret
add
lds
push
or
add
roll
push
sub
add
add
add
push
ret
push
test
add
roll
push
adc
push
cmpsb
roll
push
enter
fcmovbe
add
roll
push
roll
push
xor
add
roll
push
adc
push
lods
roll
push
jl
add
mov
add
roll
add
push
sub
add
roll
push
fcmovbe
add
int
push
icebp
push
icebp
jmp
add
faddl
push
jno
add
out
add
popa
mov
push
icebp
clc
add
lcall
icebp
fildl
push
jno
mov
push
icebp
pop
mov
push
jno
add
jmp
push
jno
add
aas
mov
icebp
cmp
add
ljmp
jno
add
in
add
or
push
icebp
call
add
jno
aaa
mov
icebp
sbbb
icebp
sub
icebp
add
mov
repnz
xor
add
xor
add
mov
add
repnz
xor
mov
repnz
push
icebp
add
or
add
or
add
sti
icebp
add
sti
icebp
add
fdiv
add
fdiv
add
icebp
add
cli
icebp
add
ljmp
arpl
jecxz
pop
sbbb
cmp
testb
push
jae
xor
sbb
add
mov
mov
popf
cwtl
mov
add
repnz
sub
fiadds
and
jo
pop
cwtl
sti
pop
inc
rorb
ljmp
dec
xor
fs
adc
sti
mov
xchg
dec
xor
and
rclb
mov
mov
push
sbb
mov
stos
add
add
push
mov
add
outsl
mov
mov
dec
call
add
outsl
mov
mov
inc
sahf
sbb
push
stos
sub
jecxz
pushf
push
movsb
into
ja
fidivl
mov
xor
sub
movsl
pop
jne
insb
cltd
imul
ds
add
xchg
icebp
jge
add
fcmovu
movsl
idivl
jae
jae
loop
xchg
push
xor
int3
div
addr16
inc
adc
jno
push
inc
jmp
daa
xchg
xchg
popf
push
xor
popf
inc
adc
jno
push
inc
jmp
and
loope
gs
inc
jmp
popf
inc
adc
jno
push
inc
jmp
add
add
jne
push
adc
jno
push
inc
jmp
enter
clc
jmp
icebp
add
push
icebp
add
inc
inc
mull
adc
icebp
shrb
imul
insl
mull
adc
mov
negl
or
and
xchg
push
icebp
shrb
jle
mov
xor
push
push
add
jbe
jmp
pop
pop
adc
icebp
shrb
push
les
pop
adc
adc
outsb
add
adc
dec
add
les
jbe
shlb
adc
mov
jb
add
adc
cmpsb
add
xor
xorl
mov
add
movsl
push
mov
lret
adc
pusha
lock
inc
out
add
add
rclb
pop
popf
add
in
std
call
clc
iret
adc
xchg
add
movsl
xor
gs
add
and
js
mov
xor
bound
fwait
mov
loop
cmp
adc
inc
dec
lret
and
sahf
andps
add
add
mov
adcl
adc
inc
test
std
int3
gs
dec
mov
in
fwait
cmp
cmc
and
mov
lds
add
add
les
shll
cld
incl
push
or
xor
inc
icebp
xchg
lret
das
lcall
out
push
icebp
xchg
std
add
xchg
icebp
jecxz
push
icebp
filds
dec
icebp
inc
add
icebp
testl
nop
icebp
jecxz
push
icebp
movl
nop
icebp
jmp
dec
icebp
xlat
add
ja
nop
icebp
out
add
pop
add
icebp
ja
adc
out
add
addr16
lock
add
icebp
filds
jae
add
ja
adc
movl
push
cmc
push
add
icebp
movl
add
push
repnz
push
icebp
adc
xor
jmp
push
icebp
add
icebp
add
dec
inc
add
dec
add
aad
bound
fisttpl
add
dec
popa
add
dec
and
jmp
dec
sti
add
dec
push
add
dec
adc
jmp
pop
icebp
add
dec
jno
jmp
pop
roll
stc
dec
testl
jmp
pop
addl
add
add
add
dec
imul
jmp
dec
add
jmp
push
sub
jp
mov
jp
or
push
mov
push
dec
add
std
lock
add
sub
push
add
cli
adc
pop
cli
loope
or
sub
sub
je
sub
xor
cli
cld
enter
or
ljmp
add
cld
test
cli
stc
add
add
ljmp
add
testb
stos
stc
pop
add
cld
cwtl
add
stc
jl
stos
stc
cmp
jp
fadds
push
ljmp
push
fmuls
sub
fmuls
or
fmuls
mov
or
or
push
ljmp
push
fimull
adc
or
push
fimull
jb
add
or
push
fimull
les
add
bound
or
push
fimull
movsb
push
fimull
add
or
push
fimull
in
ljmp
push
fimull
sbb
or
fimull
jp
icebp
out
dec
icebp
out
lahf
icebp
stc
add
icebp
out
jmp
icebp
out
lahf
icebp
out
dec
icebp
out
leave
icebp
out
add
cltd
icebp
out
aas
icebp
testl
icebp
out
inc
icebp
daa
or
icebp
fiaddl
icebp
out
popf
icebp
out
inc
icebp
out
pop
icebp
clc
add
icebp
out
insl
icebp
out
xor
lock
push
icebp
out
int
out
adc
lock
icebp
out
dec
icebp
out
lock
push
push
add
dec
imul
pop
sub
jmp
add
pop
int
sti
push
or
jmp
pop
sbb
jmp
dec
sti
add
dec
jnp
jmp
push
in
add
icebp
add
dec
inc
add
pop
add
aam
outsb
add
push
or
jmp
pop
and
jmp
push
testl
jmp
push
popl
jmp
dec
jo
jmp
push
iret
add
add
push
repz
dec
dec
add
mov
std
xchg
add
cmp
stos
divb
jp
aaa
add
rolb
jnp
verw
add
daa
add
mov
push
pop
add
xchg
cmp
inc
add
std
repnz
out
add
sub
push
add
notb
add
testb
stc
out
sub
sub
jae
cli
cmc
xor
cli
cld
lret
out
or
add
ljmp
add
cld
stos
add
cmc
add
ljmp
add
call
or
fmuls
sbb
push
int3
add
fmuls
jge
fmuls
cmp
push
out
pop
push
fmuls
insl
push
fmuls
sub
push
fmuls
or
push
fimull
dec
push
fimull
cli
push
ljmp
add
push
fimull
adc
or
push
lret
add
push
fimull
jae
fimull
xor
or
push
jmp
or
fimull
and
or
push
fimull
adcl
or
icebp
out
mov
testl
or
out
dec
icebp
out
vpand
adc
out
or
out
dec
icebp
out
movsl
icebp
stc
add
out
clc
lock
add
cmp
out
movsl
icebp
out
dec
icebp
out
fdiv
out
cwtl
icebp
out
inc
icebp
testl
test
out
cmp
daa
or
icebp
fiaddl
pusha
icebp
out
test
out
cmp
out
or
icebp
out
je
out
sub
out
lods
lock
dec
lock
pop
jo
jmp
dec
xlat
add
push
cli
add
pop
dec
add
pop
or
jmp
add
dec
xchg
fstl
add
pop
push
add
dec
movl
jmp
pop
sbb
jmp
dec
clc
add
pop
jbe
jmp
dec
out
dec
xor
jmp
pop
add
aad
bound
fistl
popa
add
pop
and
jmp
cmc
clc
add
pop
push
add
cli
cli
and
ljmp
add
add
cli
add
mov
cli
inc
add
out
add
cli
sbb
stos
cmc
popl
jns
cmp
jp
js
jp
cmp
push
iret
add
adc
jp
push
add
scas
add
or
cmp
mov
cmp
dec
add
cmc
out
add
out
add
cli
push
add
cli
adc
pop
cli
loope
stc
out
add
add
stc
je
cli
stc
xor
ljmp
or
fmuls
fs
fmuls
and
fmuls
add
fmuls
test
or
or
pop
push
fmuls
pop
push
fmuls
sbb
fmuls
push
push
fmuls
jl
fmuls
cmp
fmuls
push
push
fmuls
insb
push
fmuls
sub
fmuls
or
fimull
mov
add
or
or
push
ljmp
push
fimull
adc
or
push
fimull
jb
icebp
out
inc
icebp
out
push
repnz
cld
pop
icebp
out
jno
out
xor
out
scas
icebp
out
push
icebp
out
shl
out
adc
out
scas
icebp
idiv
push
icebp
out
or
out
cmp
out
mov
icebp
out
or
out
add
cmp
out
sahf
icebp
stc
cld
inc
icebp
out
stc
lock
sub
out
sahf
icebp
out
pop
icebp
out
f2xm1
out
mov
out
ds
idiv
push
icebp
out
jge
out
inc
icebp
daa
or
icebp
add
nopl
jmp
dec
sbb
jmp
out
repnz
pop
dec
add
dec
or
jmp
pop
jmp
jmp
dec
sub
jmp
add
dec
add
scas
clc
add
pop
inc
add
dec
add
jmp
dec
add
pop
arpl
jmp
dec
movb
outsl
push
add
pop
push
add
dec
adc
jmp
pop
repz
pop
jae
jmp
aaa
out
dec
pop
icebp
add
sub
add
out
add
out
add
clc
sbb
add
out
add
in
add
add
testl
add
out
add
in
add
out
add
in
add
out
add
in
add
out
add
cmp
push
roll
imul
add
imul
push
mov
cmp
or
cmp
mov
sub
dec
add
in
add
or
add
cli
push
push
fdivr
adc
enter
or
push
fdivr
je
fdivr
xor
fdivr
lret
or
push
fdivr
and
fdivr
stos
push
fdivr
add
fdivr
test
cli
inc
push
fdivr
ljmp
cli
pop
push
fdivr
sbb
fdivr
lcall
cli
jl
fdivr
cmp
fdivr
ficoml
or
push
fdivr
insb
add
push
fdivr
sub
fdivr
mov
push
lret
push
icebp
out
xchg
out
sub
testl
xor
aam
adc
fimull
xor
out
xor
out
adc
icebp
out
jno
out
xor
out
cmc
icebp
out
push
icebp
out
shl
out
adc
out
mov
testl
stc
lock
add
cmp
out
in
fisttpl
adc
out
stc
lock
cmp
out
test
stc
or
out
jmp
icebp
out
add
jmp
jmp
cmp
add
sub
add
pop
testb
sbb
jmp
pavgb
ficompl
add
clc
add
clc
es
jmp
lock
fcoms
jmp
add
leave
mov
jmp
mov
ss
test
ljmp
cwtl
incb
jmp
pop
push
add
js
add
js
add
imul
add
push
das
add
fdivrl
add
fisttpl
add
fdivrp
add
ljmp
stc
jmp
decl
add
sub
add
and
incl
imul
aas
add
jmp
add
loop
incl
imul
pop
add
jmp
incl
mov
jg
cli
jmp
add
movsl
jmp
pop
add
call
stos
jmp
incl
outsl
jmp
or
loopne
add
or
push
mov
or
add
push
ret
inc
fimuls
rcll
add
add
push
fiaddl
add
add
push
loope
push
push
rolb
add
push
in
add
add
push
add
push
mov
add
push
enter
enter
enter
enter
enter
enter
enter
leave
add
push
leave
add
push
leave
add
push
leave
add
add
push
icebp
jmp
add
jmp
add
ljmp
icebp
ljmp
icebp
jmp
push
icebp
jecxz
push
icebp
jmp
push
icebp
jecxz
push
icebp
in
add
in
push
icebp
in
add
in
push
icebp
out
push
icebp
div
inc
icebp
filds
repz
dec
cmc
repz
in
add
add
out
push
icebp
out
add
push
icebp
out
push
icebp
call
add
jmp
add
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
jp
add
jp
add
push
add
push
add
jp
add
jp
add
push
add
push
add
cmp
add
cmp
add
sub
out
add
es
or
mov
or
add
jbe
or
mov
or
data16
or
cmc
or
xchg
cmc
or
mov
or
push
cmc
or
data16
or
es
or
cmpsb
cmc
or
xchg
out
or
xchg
or
out
or
es
or
mov
cmc
or
push
xchg
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
push
fiadds
or
add
push
push
add
or
add
push
jle
or
add
or
add
push
outsb
add
push
push
add
or
add
push
add
push
fiadds
or
add
push
icebp
in
add
add
lods
add
and
add
add
or
add
int
dec
icebp
inc
add
std
add
jne
dec
icebp
mov
add
mov
add
jge
dec
icebp
cmc
add
cmc
add
insl
add
icebp
and
add
icebp
adc
add
icebp
inc
add
icebp
mov
add
icebp
jge
dec
icebp
xor
add
icebp
lds
add
pop
icebp
cmp
notl
add
jmp
add
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
push
jmp
add
jmp
add
dec
jmp
push
jmp
add
push
jmp
add
dec
jmp
add
xchg
repz
adc
or
ret
repz
and
or
mov
or
aaa
hlt
or
out
or
aaa
hlt
or
push
in
or
xlat
repz
xchg
or
pop
hlt
or
repz
out
or
xchg
repz
xchg
or
pop
repz
xchg
or
add
mov
or
daa
hlt
or
pop
repz
scas
in
or
outsl
in
or
out
in
or
pop
in
or
iret
in
or
in
or
scas
in
or
dec
in
or
pop
in
or
push
sbb
add
or
add
or
add
or
add
or
add
push
jnp
or
add
or
add
add
push
mov
add
or
add
push
pop
add
push
pop
add
or
add
or
add
or
add
or
add
push
xchg
add
push
xchg
add
add
rolb
icebp
inc
add
inc
add
icebp
adc
icebp
adc
pop
icebp
addb
pop
icebp
add
icebp
add
pop
icebp
jb
pop
icebp
mov
add
icebp
adc
pop
icebp
adc
icebp
loop
dec
icebp
loop
dec
icebp
push
add
push
add
icebp
addb
icebp
addb
repnz
repnz
out
add
out
dec
icebp
outsb
add
icebp
add
cs
icebp
add
add
push
ljmp
add
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
push
ljmp
add
push
ljmp
push
ljmp
and
out
pop
add
out
pop
add
out
pop
add
out
pop
add
pop
add
pop
add
out
pop
add
in
pop
add
lock
add
out
pop
add
out
pop
add
pop
add
pop
add
pop
add
pop
add
add
out
pop
add
out
pop
add
lock
add
out
add
add
add
push
sub
pop
push
clc
add
push
fadds
pop
push
sbb
pop
push
and
pop
push
lock
push
rolb
pop
push
adc
pop
push
loopne
pop
push
les
pop
push
mov
pop
push
in
pop
add
push
lods
add
push
mov
pop
push
jl
pop
push
aam
pop
push
pushf
add
push
movl
or
add
push
pop
add
or
add
or
add
push
icebp
out
dec
icebp
testl
dec
icebp
out
add
jmp
dec
icebp
roll
push
icebp
jecxz
dec
icebp
lret
add
jmp
add
loope
dec
icebp
icebp
add
add
in
add
aad
push
icebp
in
dec
icebp
int
push
icebp
call
add
loopne
dec
icebp
lock
in
add
aam
push
icebp
in
dec
icebp
int3
add
ljmp
icebp
loop
dec
icebp
repnz
out
add
add
add
dec
repz
push
testb
dec
testl
loope
stc
or
dec
stc
or
add
dec
cli
pop
lock
cli
pop
jecxz
sti
or
dec
sti
or
inc
sti
or
pop
sti
or
push
cld
or
dec
cld
or
inc
cld
or
pop
cld
or
push
std
or
dec
std
or
inc
std
or
pop
std
or
push
std
or
dec
std
or
inc
std
or
pop
std
or
push
decb
fmull
or
inc
decb
in
pop
decb
in
decb
fmull
or
aas
decl
or
add
aas
decl
or
cld
loope
push
sbb
push
push
cld
loope
push
in
loope
push
sbb
push
push
cld
loope
push
cld
loope
push
in
loope
push
cld
loope
push
fsub
push
push
mov
loope
push
pushf
loope
push
mov
loope
push
lods
loopne
loopne
setge
or
loopne
setge
or
loopne
sldt
insl
loopne
loopne
minps
or
rcpps
adc
dec
scas
adc
inc
adc
pop
fists
andps
add
inc
stos
adc
inc
int3
push
adc
lds
adc
gs
adc
pop
scas
pop
pop
inc
cmpsl
pop
pop
cmp
sbb
cmp
sbb
imul
sbb
sbb
sbb
sbb
sbb
sbb
add
cmp
sbb
imul
sbb
pop
ret
pop
rcrb
sbb
sbb
dec
mov
sbb
cmp
add
push
ljmp
pop
ljmp
dec
ljmp
aaa
in
add
outsl
in
sti
pop
addr16
repz
pop
in
jmp
push
in
jecxz
dec
in
fistpl
inc
in
rcrl
aas
in
lret
pop
add
aaa
in
add
outsl
in
sti
pop
addr16
repz
pop
in
jmp
push
in
jecxz
dec
in
fistpl
inc
in
aam
ds
int3
and
in
add
outsb
in
cld
and
hlt
and
in
and
in
dec
in
fsubl
inc
in
add
xor
sbb
xor
sbb
out
sbb
jae
sbb
jae
sbb
jae
sbb
jae
sbb
jae
sbb
push
out
add
dec
repz
add
add
pop
repz
clc
or
dec
std
or
inc
decb
negl
push
out
push
cld
or
flds
adc
popa
loop
clc
popa
loop
sti
fists
sti
fists
fiaddl
adc
inc
loopne
fldl
aad
in
std
fs
cmc
pop
in
cld
gs
hlt
pop
out
add
jecxz
adc
jl
push
push
dec
out
push
add
cmp
push
push
cmp
in
pop
or
in
pop
add
sbb
add
sbb
push
in
sbb
push
in
sbb
add
sbb
add
sbb
repnz
sbb
out
sbb
out
sbb
out
sbb
pop
sbb
pop
sbb
out
sbb
out
sbb
out
sbb
jmp
sbb
push
out
sbb
add
sbb
pop
rcrb
dec
rcrb
sbb
sbb
cmp
sbb
push
out
pop
sbb
sbb
pop
mov
sbb
dec
iret
sbb
aas
fadds
add
add
push
add
push
xlat
add
push
faddl
add
add
push
fiaddl
add
add
push
rolb
add
add
push
les
add
add
push
enter
add
add
push
rolb
add
add
push
mov
add
push
icebp
pop
add
icebp
pop
add
icebp
cmpsl
add
mov
push
icebp
movl
push
icebp
addr16
icebp
xchg
icebp
daa
add
icebp
pop
add
icebp
out
push
icebp
out
push
icebp
out
push
icebp
call
add
ljmp
icebp
in
push
icebp
filds
push
icebp
fildl
add
push
icebp
xlat
add
filds
push
icebp
pop
add
icebp
testl
push
icebp
pop
add
icebp
add
cmpsl
add
out
push
icebp
addr16
icebp
add
dec
icebp
add
push
icebp
add
test
jmp
dec
icebp
add
push
icebp
add
inc
icebp
add
cmp
add
jo
jmp
nop
icebp
add
jo
add
push
icebp
add
lock
add
outsl
imul
inc
xchg
xchg
rcl
push
push
pop
mov
push
call
sbb
lods
jne
mov
mov
or
jg
lods
and
mov
fwait
mov
imul
add
repz
mov
fsubrl
push
aad
xor
insb
insl
adc
push
push
nop
mov
add
push
mov
add
sbb
arpl
mov
or
cld
jecxz
dec
push
xor
aad
add
cmp
add
shlb
pop
mov
cs
les
mov
xor
out
fcoml
rcl
push
repnz
add
add
xlat
mov
aam
scas
mov
mov
mov
mov
rorb
or
in
test
outsl
jl
inc
push
adc
inc
fsubl
sub
sarl
push
jg
xorb
mov
jmp
int3
pop
imul
add
or
rcrb
push
add
insb
pop
icebp
jle
aaa
pusha
jmp
push
cmp
and
aaa
insb
cs
ret
test
push
ljmp
inc
mov
mov
jl
jp
mov
push
mov
cmp
jne
inc
pop
lret
loope
push
push
fimuls
jl
fists
test
xchg
add
sub
scas
sbb
xor
fdivl
sub
jnp
stos
add
mov
repnz
sti
stos
mov
hlt
fcmovnbe
addr16
push
inc
psllq
addr16
int3
add
cmp
push
and
mov
jle
dec
iret
out
cmpsb
pop
jno
cmpsl
sub
mov
popf
fimuls
pop
push
add
movsb
xchg
leave
rorl
fwait
cmc
bnd
arpl
xorl
sahf
jmp
xor
test
push
movsl
jb
pop
push
loop
ljmp
or
mov
pmulhuw
jle
xchg
lea
or
pop
push
jge
bound
lock
jg
push
adc
pop
imul
arpl
add
or
jmp
rorl
es
fsubl
popf
mov
mov
cmp
mov
push
push
xlat
aam
shlb
mov
in
ror
xor
cmpsb
pop
mov
inc
shll
or
out
or
cmp
xchg
movsl
pusha
movsb
addr16
test
adc
add
adc
mov
shrb
jl
push
xchg
cmp
add
repz
pop
stc
mov
mov
into
sub
adc
inc
xchg
fldenv
fimuls
stos
mov
das
dec
popa
push
mov
cld
or
xchg
in
or
dec
aas
sti
pop
push
in
imul
add
movsb
pop
hlt
sub
mov
notb
mov
int3
pop
mov
mov
mov
cmpsb
xchg
xorb
push
xchg
jo
ljmp
xlat
dec
movsb
jmp
fcomps
dec
dec
pushf
push
loopne
xchg
scas
jb
popa
mov
cmp
mov
xchg
aad
add
pushf
xchg
sub
or
mov
dec
cmpsb
negb
shll
pop
dec
ret
aas
and
scas
lods
mov
inc
mov
xor
fbld
nop
jle
nop
loope
xor
fiadds
lret
mov
cmc
jl
in
mov
int3
adc
mov
and
xor
push
add
pop
push
sub
in
mov
shr
roll
negl
icebp
repz
push
icebp
add
test
aaa
xor
daa
sub
imulb
jbe
fs
pop
push
mov
inc
dec
repnz
xor
shll
out
cli
add
mov
pop
add
sahf
std
loope
xchg
ret
aad
push
mov
add
xor
popa
addr16
xor
push
sbb
xor
aaa
test
push
loopne
decl
repz
int
sub
add
adc
mov
push
mov
repz
sbb
xor
pusha
pop
jle
xchg
inc
loop
imul
jo
add
jg
sub
sti
push
pop
in
in
sbb
clc
inc
jl
or
mov
daa
imul
sub
pushf
xchg
sbb
in
pop
ret
and
inc
fs
inc
mov
test
xchg
sub
rorb
test
xor
fldl
sbb
inc
lcall
ficomps
lcall
add
data16
inc
insb
imul
in
mov
sbb
in
lods
xchg
loop
add
xor
and
inc
cmp
fdivrs
pop
repz
sahf
out
fildll
fisubs
mov
cmp
imul
in
movsl
fimull
jns
xor
xchg
sbb
xchg
out
push
rolb
add
in
inc
addr16
and
mov
cmp
cmp
int3
bts
clc
lods
dec
dec
popf
pusha
add
les
or
xchg
xor
jl
xchg
mov
shl
popf
dec
inc
call
enter
rcl
push
aas
cli
adc
lahf
outsl
sub
std
pop
call
add
in
and
shrl
push
flds
add
ds
push
mov
mov
rcl
inc
push
lret
mov
repnz
mov
or
cmp
push
cltd
and
mov
xorb
mov
out
pop
adc
hlt
inc
cmpsl
into
fldcw
mov
pop
repz
add
jbe
insl
cmpsb
aaa
xchg
lods
xchg
sub
incl
add
imul
jno
dec
pop
push
mov
insl
pop
movsb
std
sub
pushf
sbb
daa
loope
ds
mov
repz
and
loope
hlt
push
arpl
ret
xchg
fldenv
xor
les
xor
lahf
popf
sub
hlt
sub
cmp
add
or
jmp
inc
add
repnz
add
call
push
lods
mov
push
jbe
test
arpl
lds
scas
mov
call
rorl
lret
sti
lds
jmp
xchg
push
push
add
inc
jns
mov
mov
mov
aaa
xchg
jno
dec
cmpsb
aam
add
cmpsl
fbld
pop
mov
mov
loopne
xorl
cwtl
jne
dec
xor
out
mov
stos
jmp
add
dec
or
mov
jmp
pop
cmp
mov
pop
jo
mov
pop
arpl
pushf
xchg
xchg
rclb
in
sub
subb
iret
sbb
dec
mov
add
push
pop
sub
arpl
mov
sub
mov
jne
cmp
xchg
pop
add
adc
sub
jo
je
add
cmp
call
or
xor
bswap
daa
xchg
xchg
test
pusha
movsl
push
popf
addr16
mov
mov
ror
rcr
push
out
jl
lea
add
inc
nop
aas
inc
lcall
xor
out
jo
sti
pop
mov
arpl
cmpsb
es
inc
mov
out
add
inc
idivl
imul
or
and
add
test
add
sbb
pop
push
scas
lret
or
ret
push
sub
cmp
add
add
mov
or
mov
xor
push
fisubl
outsl
bt
shlb
mov
push
cs
cs
and
in
dec
or
stos
cmp
mov
popa
daa
mull
jecxz
bound
cmp
xchg
dec
cmp
jmp
std
aas
xchg
js
inc
test
dec
dec
fmuls
cmp
lods
or
add
jle
inc
sub
jle
and
sub
adc
mull
fiaddl
inc
imul
icebp
xchg
sbb
add
sahf
clc
or
js
or
mov
es
aaa
icebp
adc
loopne
adc
mov
cmc
mov
adc
jo
or
leave
or
scas
and
or
pop
add
mov
add
dec
gs
push
sub
inc
pop
mov
pop
inc
popa
hlt
sbb
sarl
cmp
cmp
push
enter
outsb
sbb
fdivrp
dec
xor
and
js
dec
xor
aaa
in
jp
fldcw
insl
adc
insb
cmpsl
test
mov
push
add
lret
ds
add
addr16
push
push
bound
cltd
or
bswap
popa
sbb
mov
adc
shll
leave
popf
dec
imulb
inc
mov
and
inc
pusha
dec
cmc
xor
dec
jnp
sbb
or
jno
lods
inc
jle
out
inc
add
sti
inc
inc
jmp
addb
inc
imul
adcb
xchg
cmp
out
push
dec
repz
dec
je
andl
push
and
cmp
out
push
pop
or
push
xchg
vcvtps2pd
and
pop
addr16
mov
pop
ljmp
xor
fwait
lods
pop
jp
xor
popf
std
cmc
loopne
jnp
loop
push
jb
aas
cmp
out
mov
add
add
mov
cmp
mov
loop
lods
aam
mov
mov
push
jge
stos
inc
out
stos
test
dec
imul
rcl
jg
sbb
insb
scas
adc
imul
push
pop
dec
xchg
fwait
add
add
inc
cltd
dec
inc
and
inc
or
addr16
adc
dec
add
add
jnp
mov
sbb
lods
jno
dec
test
fists
mov
cmp
lret
movsb
pushf
imul
mov
adc
lahf
clc
movsl
and
lods
push
ficompl
lods
movsb
dec
cld
scas
jae
scas
mov
bound
xchg
cmpsb
outsl
mov
or
mov
push
aad
add
adc
test
mov
xchg
cmpsl
outsb
popa
inc
sub
pop
add
mov
rcll
sahf
inc
xor
mov
pushf
or
dec
cmp
sbb
mov
mov
add
adc
lea
scas
in
adc
mov
mov
push
in
xchg
push
orb
roll
popf
adc
test
stos
and
pushfw
xchg
into
test
popf
adc
stos
push
jmp
mov
sub
push
cmpsl
lods
lods
ret
cmpsl
mov
add
movsb
jnp
mov
test
mov
add
mov
mov
mov
mov
inc
inc
mov
mov
int3
mov
sbb
mov
fiadds
pop
fimull
mov
and
push
mov
cmpsb
jle
mov
nop
xor
pop
enter
lcall
mov
add
jnp
int3
insb
xchg
ficomps
inc
imul
out
in
mov
adc
or
movsl
mov
jl
pusha
or
push
lret
sbb
jae
hlt
bound
daa
cmp
and
adc
lcall
in
addr16
in
pop
or
clc
das
into
push
lret
out
cli
adc
pop
movsb
insb
push
mov
add
int3
lods
iret
cmp
icebp
lock
in
popa
xor
stc
aad
inc
push
mov
lds
cmp
add
bound
inc
out
lret
jbe
js
in
mov
mov
fdivrl
outsb
repz
lret
sbb
inc
cmc
mov
and
movsb
sbb
rcl
xor
cmp
xchg
jle
add
or
pop
or
in
xchg
les
les
cmpsb
mov
in
pop
jo
sub
and
add
mov
jnp
movsl
adc
mov
add
and
pusha
or
sbb
push
mov
push
cs
mov
mov
pop
cmc
std
in
dec
insb
hlt
mov
leave
add
iret
das
push
adc
es
cld
leave
cmpsb
daa
pusha
jb
xchg
cmc
pop
sub
fistps
std
out
pop
out
add
push
movsb
xor
hlt
mov
jl
mov
fnstcw
add
and
or
insb
xchg
jmp
and
xchg
push
in
xchg
sub
idiv
or
add
mov
xchg
xor
inc
sbb
add
in
and
icebp
jno
sahf
dec
leave
stos
jno
fstpt
push
inc
arpl
adc
imul
adc
fnstenv
shrl
jns
pop
in
loop
pop
cli
mov
dec
sub
mov
inc
xor
dec
dec
out
std
call
ljmp
add
add
loopne
pop
inc
mov
mov
xchg
sbb
add
in
jno
inc
xchg
sbb
in
imul
in
lock
pop
or
insb
mov
data16
mov
cld
push
ret
jmp
cmp
dec
cmc
lods
daa
pop
and
inc
repnz
f2xm1
fistps
mov
mov
add
in
mov
insl
fwait
mov
add
mov
aam
mov
cmp
jbe
dec
sbb
imul
jbe
jno
adc
dec
lcall
daa
roll
pushf
loop
rol
xchg
js
xor
jge
jecxz
sub
pop
push
insb
fisubrs
dec
push
jb
add
add
flds
xchg
sti
add
pop
sub
gs
sbb
push
daa
popa
inc
mov
jae
or
lret
or
push
push
cmpsb
xchg
out
push
sub
sub
cmpsb
cmp
mov
mov
fstl
xchg
test
divl
push
rcll
add
mov
add
ss
dec
pop
mov
mov
xchg
mov
jg
cmp
fldt
jo
inc
daa
lea
add
loope
lods
xchg
xor
xchg
cmp
adc
dec
add
cmpb
sbbb
in
out
mov
push
icebp
dec
out
subb
aam
mov
sub
xor
ret
outsb
add
sub
inc
push
lret
int
sbb
mov
mov
repz
leave
adc
divl
outsb
adc
mov
sub
adc
cmpl
lock
adc
outsl
das
loope
sarl
cmp
dec
or
pop
push
fcom
nop
movsl
cmp
fildl
add
jno
cmpb
gs
and
add
push
jg
xor
adc
les
sub
aam
and
xchg
and
popa
inc
mov
jmp
lret
xchg
push
dec
cmp
push
jl
icebp
mov
ja
push
xor
inc
or
jnp
loop
fs
add
adc
sarb
das
pushf
pop
mov
inc
imul
les
mov
sbb
jb
or
lret
add
and
ds
or
sahf
shrl
xor
sbb
and
mov
mov
mov
push
movsl
test
sti
stos
sub
adc
pop
mov
add
add
enter
lret
int
shl
iret
test
lock
mov
popf
mov
sahf
lods
and
sahf
jl
mov
push
imul
js
cwtl
and
xchg
cmp
stos
push
xor
cmp
cmpsl
and
popa
cmpsb
sarl
and
add
and
and
movsb
rcll
mov
mov
add
repz
mov
cwtl
sbb
or
sti
shrb
rcrb
fimull
jbe
pop
out
iret
xor
fcom
add
cmpsl
xchg
in
and
mov
rcrl
fadd
sub
call
ljmp
sbb
pop
push
xchg
repz
gs
pusha
pop
add
into
mov
je
dec
xor
lock
movsb
inc
imull
xlat
into
pop
lds
push
cmc
sti
push
fldt
jmp
lahf
jl
mov
roll
sub
jbe
or
or
pushl
scas
add
sub
push
and
add
test
push
sbb
add
dec
aam
in
pop
mov
push
icebp
mov
cwtl
jno
scas
test
adcl
rolb
pop
cmp
push
insb
mov
and
movsl
xchg
dec
loop
push
push
shr
lock
mov
jmp
insl
pop
mov
pop
pushl
pop
insl
cmc
es
inc
sub
pop
int3
push
xchg
clc
pop
or
add
add
bound
or
mov
adc
adc
push
sub
into
sub
push
mov
sbb
push
inc
mov
mov
pop
and
pop
push
in
test
mov
mov
dec
mov
and
mov
sarl
sbb
or
inc
sbb
es
add
dec
mov
add
fidivrl
or
push
aaa
imull
push
daa
popa
xchg
xor
fsubrs
jae
daa
cmp
mov
jo,pt
int3
das
mov
aaa
movsl
dec
sbb
push
sti
mov
sub
out
fwait
test
sub
addl
mov
mov
xor
mov
push
sbb
inc
scas
mov
add
cmp
daa
add
mov
or
testl
aas
sbb
test
ds
orb
sub
sub
fwait
xchg
push
out
mov
push
fisubs
hlt
pop
rcl
mov
pusha
mov
sub
aas
pop
int
xor
pop
sbb
inc
inc
ja
movsl
pop
out
out
push
add
add
cmp
sub
or
sahf
incl
scas
imul
add
inc
push
cmp
loope
shl
pop
push
andl
pop
mov
xor
xor
and
inc
push
add
ja
imul
or
lcall
and
sahf
mov
push
iret
in
pop
jp
push
repnz
dec
dec
ret
push
xchg
add
xorl
ss
jge
push
loopne
mov
jp
stos
addr16
sub
and
fistl
sbb
and
fistps
mov
mov
rorl
std
int3
add
push
icebp
lock
and
mov
loopne
mov
pop
xchg
cmc
insb
sbb
ja
inc
mov
jmp
ret
imul
add
stos
lods
test
in
je
cmc
sub
insb
inc
mov
movb
stos
xor
add
xchg
add
and
mov
sub
in
iret
xchg
les
jae
ljmp
ficompl
jnp
dec
pop
ds
xor
aam
pop
bound
loop
and
sub
add
fcoms
out
loop
and
xor
dec
stos
and
outsb
lods
sub
pop
sahf
push
or
ljmp
or
icebp
cmpsl
and
inc
jo
addr16
xor
movsb
testb
mov
cmp
je
pop
push
xor
insb
mov
jns
inc
out
cmp
add
jnp
mov
adc
cmp
jmp
add
js
sub
jno
sbb
push
cmpsl
mov
pop
lock
add
fld
inc
adc
cmc
dec
andb
test
mov
or
data16
imul
push
push
lret
pop
push
or
ds
stos
daa
seta
gs
push
in
mov
adc
add
imul
push
mov
or
mov
push
aas
test
mov
stc
and
lret
mov
xchg
imul
or
mov
aaa
mov
lock
gs
jb
push
std
xor
loopne
or
jge
lock
std
mov
push
cmp
ja
adc
add
cmp
ja
mov
js
add
std
sbb
iret
xor
icebp
loopne
add
jecxz
movsl
and
mov
sbb
push
cmp
pop
pop
dec
jg
push
data16
rolb
cli
out
pop
leave
stos
fcomps
imul
stos
fs
push
ret
dec
insl
fldt
inc
xor
inc
xor
test
add
pop
popf
xor
fbstp
dec
add
mov
jmp
leave
idiv
sub
cmp
adc
sbb
pop
fldl
push
pop
push
cmp
pushf
pop
push
std
fistl
shl
push
jb
setno
inc
rclb
mov
and
adc
test
aam
add
dec
pop
call
mov
mov
and
in
sbb
lods
loope
clc
insl
enter
dec
in
fisttps
repz
sub
adc
in
or
data16
push
daa
lea
jp
add
or
jnp
aaa
push
addl
enter
shll
dec
mov
addr16
adc
in
mov
ja
mov
fbstp
xor
ss
lret
mov
xor
dec
mov
rcpps
int3
dec
test
sbb
or
adc
inc
mov
cmpsb
push
mov
or
add
loope
add
in
cli
shrb
leave
adcl
out
add
movsl
xlat
cli
cmpsb
fidivrs
xor
dec
or
xor
leave
or
push
movsl
dec
fs
mov
scas
mov
out
mov
pop
cmc
ja
inc
movsb
jo
xor
flds
bound
repz
cmpl
sub
pop
hlt
xor
cli
lahf
ficoms
cltd
lret
fs
cmp
scas
imul
add
sbb
sub
mov
lea
push
shll
push
frstor
xchg
into
jge
fdivrs
mov
pop
add
xchg
fadd
mov
and
ss
loopne
cmp
pop
jo
mov
mov
jp
xlat
and
add
call
jg
pop
ljmp
add
cmp
cld
hlt
mov
mov
pop
arpl
cmp
pop
fbstp
mov
add
jle
gs
test
ljmp
cmc
xor
in
in
inc
out
and
fbstp
daa
rorb
jmp
sarl
mov
hlt
sti
sbb
js
fsubs
and
adc
adc
decl
lea
das
loope
dec
vcmppd
pop
mov
mov
scas
shrb
xchg
ficoml
dec
inc
fs
cmp
pop
push
sti
adc
ret
mov
test
aam
js
push
jns
add
push
mul
nop
mov
or
pop
leave
sbb
dec
dec
add
sbb
es
push
cwtl
and
repz
push
daa
fistps
arpl
inc
bound
sbb
ret
add
leave
lcall
mov
jmp
in
cmp
xor
sbb
dec
sub
test
jb
pop
lcall
daa
cmp
pop
aam
bound
loope
je
loopne
push
add
rcl
mov
dec
in
dec
add
int3
stc
adc
repz
xchg
rcl
push
rcll
pop
stos
sbb
insl
test
roll
push
mov
cltd
outsb
mov
lret
jae
icebp
mov
add
dec
movsb
arpl
lock
add
faddl
cs
daa
insb
inc
sub
xorb
sub
add
sub
fcomip
cmp
push
or
adc
rcll
mov
data16
ljmp
inc
lea
mov
mov
imul
ret
lock
mov
mov
add
add
shrb
or
test
add
mov
push
mov
xor
pop
out
movsl
sub
mov
icebp
jb
int3
aaa
popf
pusha
sarl
rol
rclb
push
pop
icebp
lea
mov
lahf
jle
jmp
jae
in
jb
push
sbb
lods
inc
popa
cmp
pop
add
dec
mov
adc
cmp
aad
cmp
xor
push
pop
jle
pop
xchg
xor
fcoml
jo
mov
jno
jecxz
cmp
hlt
mov
bound
ror
movsb
dec
in
clc
or
les
addr16
jl
mov
mov
movsb
add
bswap
xor
mov
pop
test
testb
daa
in
sub
xchg
dec
clc
lds
jmp
popa
andl
fldt
lahf
inc
push
jp
and
add
inc
sbb
lock
push
sbb
adc
pop
cld
cmp
flds
aaa
fwait
sub
pop
ds
adc
orb
add
add
test
jns
inc
mov
add
outsl
xor
cltd
outsb
jbe
or
into
pop
dec
sbb
loope
add
mov
rdrand
clc
and
dec
rcrl
dec
and
add
and
add
int3
xchg
outsb
sbb
gs
inc
in
mov
jns
ljmp
push
mov
inc
outsl
sbb
xchg
repnz
lret
mov
test
push
sbb
jnp
lods
mov
dec
pop
dec
rcr
pop
inc
shlb
ret
cmc
dec
aaa
test
jnp
push
clc
std
cmp
loop
cwtl
int3
pop
adc
pop
xor
xchg
sbb
testl
add
add
ret
jb
mov
xor
andb
fistpl
push
icebp
add
sbb
mov
out
data16
push
mov
xorl
jl
leave
mov
mov
inc
mov
xchg
gs
push
js
and
dec
mov
mov
add
pop
sub
addl
sub
mov
add
push
push
leave
push
mov
faddl
clc
inc
sub
and
jl
cld
popa
jmp
mov
insl
in
rcrb
enter
sub
and
lods
ds
pop
mov
jp
rclb
add
ljmp
xchg
xchg
jnp
shll
pusha
dec
pop
sbb
pop
adc
add
cmp
fcmovu
clc
mov
jo
xor
fcoms
dec
and
pop
or
pop
xadd
push
in
lahf
rolb
pop
cwtl
sbb
clc
jg,pn
add
cmp
jbe
loope
lret
add
pop
jbe
stos
aas
or
nop
fldl
mov
into
sub
dec
test
add
push
jb
inc
pusha
xlat
movsb
jo
mov
pop
movsb
dec
lods
mov
pop
imul
xor
dec
das
push
pop
testb
adc
icebp
ljmp
jp
mov
xchg
push
sbb
jmp
lock
out
movzbl
ljmp
xchg
bswap
push
imul
or
dec
pusha
jnp
pop
test
and
ret
push
pop
das
fs
xchg
sti
fwait
cmp
hlt
and
jnp
rolb
mov
xchg
xchg
pushf
es
ja
fwait
cmp
int3
es
cmp
mov
jl
rorl
xor
insl
mov
xor
dec
incl
lea
leave
or
sbb
inc
push
add
push
jns
mull
xor
jge
aam
or
and
stos
add
jb
movsb
scas
ficompl
cmp
push
mov
sub
shrb
xor
mov
lcall
in
aad
orb
add
cmp
sbbl
hlt
into
mov
push
jns
insb
push
add
setno
add
add
dec
fcom
jbe
jo
adc
dec
data16
cmp
add
add
pop
sbb
fnstenv
jns
insb
xchg
xchg
push
shr
repnz
cwtl
sbb
push
rorl
push
inc
call
fnstcw
sub
ljmp
dec
xchg
push
pop
and
popa
lock
pushf
add
dec
cmpsl
mov
lahf
inc
outsl
ss
testl
dec
leave
xor
clc
test
inc
loope
es
push
scas
scas
mov
xchg
sbb
data16
inc
inc
dec
scas
fnstsw
cmpsb
icebp
jno
sbb
ljmp
in
push
ljmp
add
xor
lds
stos
subl
push
aas
and
mov
jl
jp
shll
js
push
or
icebp
jge
fcmovb
int
xor
outsb
insb
add
fbstp
xor
push
jmp
cmc
xor
fs
xlat
mov
add
jp
cmp
push
imul
cmp
xor
sahf
xor
mov
jge
insl
sub
icebp
lret
cmp
xchg
sbb
neg
minps
sti
dec
cli
mov
addl
movl
add
lock
outsl
outsl
xor
movsl
iret
xchg
ret
aad
cmpsl
sub
add
add
dec
loopne
jb
cmp
xchg
mov
jp
mov
dec
push
cli
sub
jge
ret
popa
cmpsl
and
dec
mov
call
xchg
aas
push
out
out
ljmp
add
push
stc
add
push
sti
add
push
testb
push
loop
cli
push
loopne
add
add
push
faddl
sbb
add
sub
push
add
in
jno
add
mov
in
loope
sub
add
sub
add
sub
adc
sub
adc
cli
repz
cli
repz
sub
verw
hlt
clc
repz
clc
repz
jmp
repz
repz
repz
scas
repz
lahf
repz
mov
repz
mov
repz
scas
repz
add
add
in
pop
add
repz
adcl
incb
dec
cltd
or
pop
cltd
adc
imul
add
mov
adc
add
push
test
add
push
stos
add
push
pushf
add
test
adc
push
xchg
pop
push
addb
push
xchg
add
push
xchg
add
push
mov
add
add
add
push
pop
add
push
call
arpl
jecxz
xor
jae
or
jo
or
fs
pop
lock
sub
sti
inc
lock
adc
cmc
sti
push
jecxz
pop
dec
out
sti
out
push
icebp
mov
nop
icebp
daa
insb
nop
icebp
out
push
icebp
in
adc
push
adc
push
add
and
add
add
pop
xor
and
push
stc
out
xor
xchg
into
push
icebp
out
test
not
adc
call
or
push
jecxz
sbb
sti
and
ja
cld
clc
add
push
icebp
or
dec
icebp
add
mov
shll
scas
shll
and
xor
mov
xor
cmpsl
inc
xor
lahf
xor
mov
xor
mov
add
xor
xchg
shll
ret
int3
xor
mov
call
adc
out
sbb
jmp
jno
loop
je
cmc
cld
jp
repz
xlat
test
cmpsb
push
adc
add
push
adc
add
push
adc
jge
and
add
or
add
arpl
pop
arpl
cmp
add
ja
add
add
icebp
inc
add
pop
inc
add
bound
jecxz
inc
add
inc
add
inc
add
inc
add
inc
add
lock
sbb
jb
out
add
insb
add
out
add
stc
or
cli
out
add
dec
in
or
inc
test
mov
iret
add
stos
out
add
or
add
sbb
fadds
push
aaa
add
add
add
push
and
pusha
push
xor
pop
push
das
add
add
je
jge
imul
push
imul
fistl
add
add
add
and
push
adc
popa
push
push
add
pop
add
sub
jp
lds
fstl
add
roll
jl
fadds
push
push
xlat
add
push
aad
cmp
add
add
push
rolb
push
mov
add
push
jecxz
push
push
icebp
aaa
add
cmp
adc
cmp
adc
xor
add
pop
add
lock
cmc
out
adc
add
or
add
push
lock
add
dec
lock
add
push
ret
add
inc
lock
add
lock
add
xor
add
add
stos
lock
lock
add
or
mov
sub
lock
lock
push
insl
lock
jg
add
lret
dec
int3
lcall
sar
dec
loop
push
push
mov
ljmp
push
stc
call
dec
sar
adc
decl
dec
adc
add
dec
idiv
into
push
clc
call
dec
sar
rclb
mov
add
dec
push
add
dec
mov
add
decl
mov
call
sar
dec
dec
pop
add
push
sub
xor
lret
push
mov
call
dec
sbb
add
testl
push
add
insl
imull
add
push
add
sub
pop
testl
imul
jb
add
imull
inc
imull
lcall
add
imulb
add
testb
testb
cmc
xor
add
cmc
addr16
cmc
imul
mov
add
cwtl
jmp
or
mov
ljmp
fsubr
repnz
call
or
andl
arpl
test
add
cmp
in
sub
out
das
or
arpl
or
arpl
or
inc
mov
or
and
stos
and
lods
and
scas
and
mov
jb
mov
jae
mov
add
mov
or
push
mov
arpl
mov
inc
dec
push
les
push
movb
enter
lret
and
sub
pop
cmpordps
push
ret
popf
shll
xchg
shll
mov
rcrl
shll
jge
aaa
pop
je
cmp
jae
sbb
jb
sbb
jno
sbb
outsl
rcll
sarl
push
scas
or
mov
cmp
mov
or
rcll
and
lds
add
enter
mov
notl
push
imull
stos
dec
roll
stos
pop
rolb
sub
dec
aam
das
dec
xlat
push
es
push
xor
push
xor
push
and
push
and
push
xor
dec
int3
push
daa
dec
iret
push
push
pop
into
push
sbb
push
sbb
push
sbb
push
sbb
push
mov
add
dec
les
mov
pop
les
mov
dec
mov
push
leave
pop
xor
mov
pop
mov
pop
mov
pop
test
pop
add
jmp
inc
push
push
shr
dec
push
sub
push
sub
push
xchg
jmp
dec
push
pop
jmp
dec
push
or
jmp
dec
push
cmp
push
push
add
or
push
add
notb
sbb
dec
add
notb
notb
adc
push
add
repz
add
repz
add
repz
add
repnz
add
repnz
add
repnz
add
repnz
repz
add
repz
add
repz
and
pop
add
pop
add
push
add
push
add
mov
push
push
dec
pop
pop
pop
push
push
pop
or
pop
or
add
pop
or
pop
or
push
or
add
pop
push
dec
adc
xorps
push
dec
dec
leave
push
xor
push
xor
push
inc
push
push
xor
int
xor
dec
dec
add
push
inc
add
dec
push
add
push
dec
add
dec
aas
add
push
dec
add
dec
push
add
push
pop
add
dec
icebp
mov
pop
cmc
mov
push
cmc
mov
add
add
xchg
cmc
lcall
cmc
pushf
add
sbb
cmc
aas
add
sbb
xor
or
sbb
sbb
or
add
gs
or
cmc
or
pop
cmc
or
inc
cmc
add
add
iret
add
cmc
rolb
cmc
roll
cmc
rolb
add
pop
cmc
lret
add
add
push
fldl
push
faddl
push
fildl
push
fiaddl
push
lret
push
roll
push
rolb
push
into
add
push
jecxz
pop
push
filds
push
int
push
push
movb
loop
inc
push
leave
add
push
int3
add
push
enter
rolb
push
movl
push
imul
dec
push
add
add
add
insl
add
imul
push
inc
add
push
outsb
add
fisubs
add
rep
add
rep
add
lret
pause
add
repz
add
repz
and
into
add
repz
add
repz
add
xchg
add
xchg
add
add
xchg
add
add
cwtl
add
xchg
add
lcall
repz
add
fwait
add
add
repz
add
repnz
add
add
push
push
add
push
popa
add
push
insb
add
push
data16
push
add
add
push
jno
mov
push
and
mov
push
mov
mov
push
daa
add
push
mov
inc
push
rcll
ret
push
les
add
push
jg
push
addb
push
addl
sti
popf
rorl
sti
inc
into
cmp
rorb
push
int3
mov
repz
add
icebp
rclb
lock
mov
inc
sti
jmp
rclb
rorb
int3
rolb
lods
shlb
sti
test
mov
sti
sub
xchg
sti
das
rorl
sti
adc
sti
dec
shrl
sti
inc
shll
push
shrl
sti
pop
shll
sti
adc
and
mov
shlb
sti
repz
adc
and
pop
jae
lds
add
and
iret
and
aaa
lock
daa
data16
pop
pusha
and
push
shlb
stos
and
negb
mov
call
and
fsubp
and
out
push
into
shll
ljmp
mov
and
jmp
and
sahf
mov
and
add
mov
and
xchg
sbb
and
jns
mov
and
fs
and
xor
and
enter
leave
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
add
jp
and
jp
and
jp
and
pop
and
jp
and
jp
and
jp
and
clc
sub
xor
negl
into
negl
vsubsd
int3
negl
inc
sti
and
sti
adc
sti
shlb
mov
cmp
lret
sti
scas
outsb
pop
sti
pop
jae
sti
sbb
sti
sbb
aaa
sti
sbb
ss
sbb
add
xor
xor
push
sti
xor
push
sti
sbb
pop
sti
stos
ss
mov
jbe
cli
into
outsb
mov
sti
in
sub
stos
jbe
sti
lods
outsb
daa
sti
mov
cs
mov
push
lret
add
cli
stos
int
stc
ret
cli
test
adc
dec
lret
add
ds
sti
stc
icebp
lret
mov
int
scas
lret
xlat
stc
pop
lret
add
push
sarl
stc
inc
lret
inc
lret
movsl
lret
popf
stc
jg
xchg
stc
xchg
lret
stc
cmp
nop
stc
inc
lret
cmp
cmp
shrl
shll
outsb
rorl
clc
jle
jg
insb
iret
nop
clc
jne
daa
clc
cmc
icebp
add
fwait
dec
and
fwait
leave
and
mov
add
jnp
and
add
imul
imul
pop
pop
enter
outsb
and
push
outsl
and
inc
dec
and
inc
mov
add
inc
lahf
add
arpl
add
arpl
mov
add
inc
cltd
add
inc
cwtl
add
inc
xchg
add
arpl
add
arpl
add
add
loopne
pop
loope
add
imul
in
pop
loope
add
insl
loope
add
arpl
out
pusha
loope
add
fadds
add
leave
add
push
into
add
push
int3
add
push
int
push
push
rolb
or
mov
add
push
xchg
add
push
add
push
xchg
add
push
add
xchg
add
push
sbb
adc
jmp
adc
call
mov
adc
adc
call
adc
inc
loop
sbb
adc
push
aam
sbb
adc
inc
mov
adc
dec
daa
adc
inc
sbb
and
push
and
push
and
push
and
push
and
popf
push
and
dec
lahf
push
daa
add
inc
xchg
push
sub
push
sub
push
sub
push
sub
push
sub
movsl
push
sub
dec
xchg
push
das
inc
mov
xor
cmp
cmp
jno
pushl
packuswb
sbb
pop
call
subps
cmovnp
inc
cmovp
inc
pushl
cvttps2pi
pop
decl
movhlps
or
adc
or
add
nop
dec
push
inc
push
xchg
dec
push
inc
push
xchg
dec
push
fwait
call
push
mov
rorl
inc
push
cwtl
call
push
mov
xchg
push
mov
jns
cmp
add
lds
je
les
pop
push
push
push
dec
push
push
inc
leave
push
push
pop
enter
and
mov
xor
bound
bound
inc
bound
xor
xor
sub
push
inc
sub
push
inc
sub
inc
inc
sub
cmp
push
sub
dec
das
xor
pop
mov
js
mov
jnp
mov
jp
mov
jne
mov
pop
push
mov
push
dec
mov
pop
inc
mov
push
pop
mov
inc
xor
decl
jle
dec
xor
decb
add
fdivr
dec
xor
decb
jp
push
xor
dec
xor
push
xor
push
xor
call
call
xor
push
xor
lcall
and
push
xor
lcall
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pusha
xor
pop
xor
popa
xor
test
cmpsl
adc
stos
adc
add
or
inc
mov
or
inc
nop
or
inc
jg
scas
bound
mov
mov
mov
sub
mov
and
inc
mov
or
inc
mov
mov
mov
mov
hlt
or
inc
repnz
add
inc
out
or
bound
shll
ret
add
bound
jno
test
movq
jno
inc
icebp
pushf
push
aad
xchg
push
and
push
clc
add
push
fiaddl
ja
cli
adc
adc
and
xchg
icebp
and
xchg
adc
and
adc
and
adc
mov
inc
and
adc
mov
inc
and
add
adc
test
adc
notl
lock
push
icebp
out
add
loopne
push
icebp
loopne
push
icebp
repnz
push
icebp
jmp
push
icebp
add
scas
icebp
add
push
icebp
add
lahf
icebp
add
push
icebp
add
icebp
add
push
icebp
add
push
icebp
add
cs
add
push
icebp
add
push
icebp
add
push
icebp
add
add
push
add
push
icebp
add
push
icebp
add
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
icebp
add
mov
add
dec
icebp
add
mov
add
inc
hlt
add
nop
movb
add
movb
jmp
movb
sbb
add
arpl
jecxz
add
aaa
movb
cmpsl
hlt
add
cmp
add
lcall
add
lds
add
in
add
movb
leave
in
add
inc
add
mov
add
in
lds
add
lds
add
add
or
lret
add
in
add
push
ficomps
push
sti
add
push
aam
add
add
add
push
ret
pop
add
add
push
insl
pop
add
add
push
loopne
add
add
push
iret
pop
add
add
push
mov
add
add
push
sbbl
inc
add
push
outsb
pop
add
add
push
jge
add
add
push
jo
add
add
push
mov
add
add
add
push
sub
push
jns
add
pop
add
add
add
push
icebp
lcall
icebp
fwait
pop
push
icebp
inc
add
icebp
jl
push
icebp
inc
add
icebp
jge
push
icebp
inc
add
icebp
pop
pop
push
icebp
push
add
icebp
dec
pop
push
icebp
incl
push
icebp
inc
pop
push
icebp
adc
icebp
xor
add
cmpsb
pop
push
icebp
fadds
push
icebp
daa
pop
push
icebp
flds
push
icebp
sub
icebp
mov
pop
push
icebp
mov
add
push
icebp
sub
icebp
xchg
add
sub
icebp
xchg
add
sub
push
icebp
jbe
push
icebp
add
stos
icebp
add
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
icebp
add
push
icebp
add
add
sbb
add
icebp
add
or
add
icebp
add
sti
lock
icebp
add
sub
add
icebp
add
sbb
add
add
push
icebp
add
aaa
leave
add
mov
add
pop
leave
add
mov
add
or
add
sbb
add
push
mov
add
adc
add
loopne
xchg
in
add
sarl
add
mov
in
add
push
mov
add
stos
icebp
incl
mov
icebp
add
stos
in
add
cli
fildl
xor
add
add
ljmp
add
icebp
add
push
mov
add
push
push
add
push
sahf
jne
push
dec
add
push
inc
add
push
cli
jae
push
popa
add
add
push
bound
add
jne
push
pop
add
push
dec
add
push
xor
rcpps
inc
push
cmpsl
add
push
mov
add
push
lcall
push
mov
inc
push
xchg
add
push
push
xchg
add
add
jbe
inc
push
mov
xchg
cli
add
push
jle
inc
push
add
push
icebp
add
cmp
sti
xchg
icebp
out
add
add
xrelease
icebp
xchg
add
jmp
xchg
icebp
cld
add
jmp
xchg
icebp
mov
xchg
icebp
scas
xchg
icebp
xchg
xchg
icebp
lahf
xchg
icebp
mov
add
icebp
push
xchg
icebp
inc
xchg
icebp
testb
icebp
dec
xchg
icebp
and
push
icebp
jae
adc
or
dec
icebp
pop
xchg
add
icebp
testl
adc
add
into
mov
xchg
add
push
lock
push
in
add
push
clc
add
push
and
add
mov
in
push
ljmp
push
clc
add
into
mov
sbb
add
push
incl
test
mov
and
add
add
push
in
add
mov
push
push
adc
push
int
add
int
add
push
sidtl
imul
add
inc
add
out
sbb
lcall
add
inc
add
or
ds
add
in
add
push
push
add
push
add
in
adc
ljmp
add
jo
add
in
sldt
add
jo
add
add
add
in
push
add
inc
add
or
push
inc
add
jno
add
loope
add
in
or
lcall
or
jle
push
lret
add
push
mov
add
inc
push
push
add
inc
push
ja
or
jle
push
sub
jle
add
push
test
jg
push
add
push
cmp
push
sub
inc
push
cwtl
add
push
jp
inc
push
inc
add
push
mov
push
incl
push
sarb
push
js
or
mov
inc
push
push
add
push
mov
add
push
mov
xchg
add
outsl
jle
icebp
lods
add
icebp
add
jl
icebp
cmp
add
sub
imul
add
push
jl
icebp
add
icebp
mov
adc
dec
icebp
jae
xchg
icebp
test
dec
icebp
jg
xchg
icebp
mov
jnp
icebp
lock
jp
icebp
mov
icebp
jl
icebp
mov
jl
icebp
or
icebp
mov
xchg
icebp
repnz
mov
add
cmp
add
dec
pop
add
add
mov
jo
testb
pop
mov
xlat
push
clc
add
mov
or
add
mov
jbe
or
shr
add
fdivs
add
dec
add
add
incl
shrl
testb
cwtl
mov
loopne
add
int
mov
lahf
push
testl
xor
add
add
push
push
add
push
push
add
mov
add
repnz
imul
mov
repnz
xchg
imul
mov
inc
add
imul
mov
add
imul
cmp
add
imul
pop
push
push
add
add
jbe
add
repnz
fidivs
add
adc
loop
inc
add
ja
add
inc
add
add
push
adc
or
xor
push
xor
push
call
add
push
test
mov
add
dec
test
int3
add
push
and
add
clc
xchg
add
add
push
xacquire
lds
push
adc
add
cli
xchg
push
add
push
jp
inc
push
dec
add
push
jb
inc
push
loopne
rcpps
mov
jl
push
push
mov
or
icebp
outsl
mov
icebp
mov
icebp
faddl
dec
icebp
xrelease
icebp
cmpsl
add
add
dec
icebp
mov
add
add
lahf
mov
icebp
inc
add
sti
mov
icebp
dec
add
testl
adc
add
xrelease
icebp
jecxz
xchg
icebp
inc
add
sti
xchg
icebp
mov
xchg
icebp
roll
icebp
mov
dec
icebp
mov
push
in
add
mov
adc
add
mov
iret
push
call
add
int3
mov
sub
add
push
add
mov
mov
or
add
add
push
jmp
aad
mov
push
int3
mov
and
add
shll
add
push
add
add
shll
add
mov
add
add
sbb
jo,pt
add
out
pop
add
inc
add
out
and
jno
add
jno
add
add
jo
add
add
es
add
add
add
jo
add
sbb
imulb
add
in
add
add
jo
add
in
dec
add
jo
add
add
outsl
inc
add
in
add
jo
add
hlt
add
xor
push
xchg
add
inc
push
jns
adc
mov
push
faddl
sbb
push
xor
and
addl
add
push
inc
test
add
inc
push
sbb
inc
push
cmpsb
add
push
jo
inc
push
in
add
push
sub
inc
add
push
movl
push
inc
addb
add
push
addb
add
inc
push
aad
or
addb
roll
icebp
out
xchg
icebp
cmp
icebp
ror
cmp
stos
add
ret
lret
xor
icebp
jae
sbb
adc
icebp
dec
lret
mov
arpl
jae
jl
outsb
add
outsl
lret
ret
add
jmp
pop
icebp
cmpsb
add
lret
add
popa
icebp
lret
sbb
sub
icebp
stos
add
dec
sbb
sbb
ds
test
push
icebp
out
jl
pop
add
or
insb
icebp
add
push
in
add
or
add
sbb
add
push
ljmp
push
hlt
add
sbb
jmp
add
push
icebp
add
icebp
add
dec
icebp
add
mov
insb
dec
icebp
add
mov
icebp
add
mov
outsb
dec
icebp
add
dec
icebp
add
dec
icebp
add
dec
icebp
add
icebp
add
dec
icebp
add
mov
add
popa
inc
add
inc
add
add
inc
inc
add
inc
inc
add
dec
inc
add
dec
inc
add
add
pop
inc
inc
add
add
mov
inc
add
repnz
mov
add
add
xchg
pusha
inc
add
arpl
add
add
lea
add
icebp
add
or
add
repnz
lret
pusha
inc
add
repnz
add
icebp
pusha
inc
add
add
push
mov
add
push
or
inc
push
loopne
inc
push
dec
add
push
dec
add
push
and
inc
push
dec
add
push
or
inc
push
dec
add
add
add
add
add
add
add
push
dec
add
push
dec
add
push
dec
incb
dec
dec
add
push
dec
add
add
push
dec
add
dec
add
push
inc
add
push
dec
add
dec
inc
incb
push
dec
incb
push
icebp
call
add
call
add
ljmp
out
ljmp
lock
add
call
add
call
add
jmp
add
call
add
jmp
add
add
in
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
adc
sub
pop
sub
cmp
add
addr16
xor
arpl
rorl
add
push
icebp
add
aaa
shlb
xor
gs
lds
and
jno
adc
jne
or
add
add
push
mov
dec
lock
add
gs
clc
leave
imul
xchg
fnsave
mov
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
jp
add
jp
add
push
add
push
add
cmp
add
cmp
add
sub
add
sub
cmp
add
cmp
add
sub
add
sub
add
cli
out
add
cli
out
add
ljmp
add
out
add
cli
out
add
ljmp
add
out
add
stos
out
add
stos
out
add
aad
std
jmp
lods
std
jmp
lods
std
jmp
mov
inc
ljmp
incl
add
lcall
call
decl
add
incl
xor
inc
ljmp
testl
sbb
inc
call
inc
decl
inc
incl
inc
cld
cmp
hlt
and
in
sub
or
adc
fcompl
inc
dec
mov
les
mov
bound
lods
inc
add
push
dec
add
add
push
dec
add
push
dec
add
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
add
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
dec
repnz
push
bnd
dec
bnd
push
bnd
dec
bnd
push
bnd
dec
bnd
push
repnz
dec
bnd
push
bnd
dec
bnd
add
push
bnd
push
bnd
push
bnd
push
bnd
push
bnd
push
bnd
push
bnd
push
bnd
push
bnd
push
bnd
push
bnd
push
bnd
push
repnz
mov
repz
stos
repz
jp
add
jp
add
push
add
push
add
jp
add
jp
add
push
add
push
add
cmp
cmp
add
sub
add
sub
add
cmp
add
cmp
add
sub
add
sub
add
cli
repnz
cli
repnz
ljmp
add
repnz
cli
repnz
ljmp
add
repnz
stos
repnz
push
pop
add
push
pop
add
push
ja
mov
sub
xor
add
jmp
rorl
fdiv
sub
xchg
pop
lods
mov
js
iret
xor
sbb
sbb
or
lock
and
mov
lds
shll
mov
jmp
hlt
sbb
mov
push
sarl
pop
xchg
sub
push
xchg
clc
jo
mov
push
and
std
jl
cmp
lock
roll
add
jns
sbb
push
test
mov
test
sbb
push
in
jno
iret
jns
aas
rol
push
jo
sub
rcrl
clc
call
inc
jecxz
dec
sub
in
aaa
test
popa
aas
sbb
or
jge
fcmovb
mov
sbb
add
mov
addr16
add
pop
add
les
fs
es
ret
cmc
add
loope
fmull
pusha
enter
dec
mov
lea
stos
lods
adc
pop
ficompl
repnz
add
jp
mov
out
jg
rcrl
push
icebp
add
push
icebp
add
icebp
add
pop
icebp
add
icebp
add
icebp
add
inc
icebp
add
push
icebp
add
add
add
icebp
add
push
icebp
add
icebp
add
icebp
add
icebp
add
push
icebp
add
icebp
add
aad
add
or
add
pop
cmc
add
mov
out
add
scas
repnz
pop
mov
or
xchg
push
ficoms
adc
push
pop
mov
ljmp
dec
push
and
push
pop
sub
pop
sub
add
pop
xor
pop
inc
xor
inc
dec
cmp
ss
cmp
ljmp
rclb
cmpsb
fwait
insb
outsl
lcall
ja
xchg
sub
mov
mov
test
insl
insb
or
jne
add
jge
fadds
xchg
rorb
mov
test
xchg
add
shlb
call
js
mov
mov
imul
enter
les
add
jp
or
jle
cld
pop
inc
ret
inc
adc
dec
lret
dec
into
or
push
rolb
in
and
pop
fisubrl
cld
pop
ficomps
and
cmc
push
shrb
pop
mov
xor
add
inc
mov
leave
inc
lods
cmp
out
jecxz
push
repnz
neg
or
xlat
adc
adc
iret
sbb
out
sbb
pop
in
push
add
adc
in
cmp
cld
call
and
xrelease
lock
mov
clc
jle
test
mov
andl
fdivrl
scas
fdivs
mov
rolb
add
lret
sbb
inc
and
push
mov
dec
sbb
mov
push
adc
jge
iret
jae
shrl
popa
xlat
jnp
pop
lret
ja
pop
mov
pop
xchg
push
out
lcall
xchg
mov
xor
xchg
scas
jns
xorb
mov
add
add
xor
and
xchg
cmp
sbb
cmp
xlat
bound
or
jecxz
call
jmp
sahf
pxor
lcall
testl
ljmp
repz
mov
repz
stos
repz
jp
add
jp
add
push
push
add
jp
std
add
add
add
cmp
add
cmp
add
sub
add
sub
add
cmp
std
add
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
push
cmp
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
add
push
pop
add
push
pop
add
push
jbe
decl
add
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
sahf
cmp
aam
cmp
dec
pop
add
push
pop
add
push
pop
add
push
pop
add
push
icebp
out
push
icebp
sbb
cmp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
fidivs
add
in
xlat
aaa
faddl
aaa
aam
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
popf
aaa
push
inc
jmp
add
out
push
icebp
out
push
icebp
out
push
icebp
out
push
icebp
data16
insb
inc
call
add
out
push
jno
add
out
push
icebp
add
push
icebp
add
push
icebp
add
icebp
add
push
icebp
add
add
push
repnz
dec
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
icebp
add
jno
jmp
fs
fstpl
aad
icebp
add
push
icebp
sub
out
add
adc
inc
fists
sti
inc
fists
adc
fists
subb
adc
dec
out
add
adc
inc
fists
sti
add
inc
fists
add
loop
adc
loop
adc
loop
subb
add
cmp
add
sub
add
sub
add
cli
out
add
cli
out
add
ljmp
add
out
add
cli
out
add
ljmp
add
out
add
stos
out
add
stos
out
add
mov
out
add
stos
out
add
stos
out
jp
add
jp
add
push
add
push
add
jp
add
jp
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
cmp
inc
inc
adc
dec
arpl
inc
cmpsb
stc
lea
mov
shll
movsb
add
push
stos
pop
es
sub
in
push
pop
clc
lret
add
gs
shrd
fisubs
inc
jge
or
inc
sbb
ss
cld
aad
xlat
out
daa
inc
sub
outsb
hlt
mov
push
cmp
xlat
js
jo
sbb
lock
sub
or
and
or
inc
outsl
adc
pusha
add
inc
mov
pop
dec
add
jb
repz
add
mov
xor
lods
mov
sub
or
roll
jbe
in
jecxz
decb
fdivrl
jne
inc
icebp
push
pop
push
jo
mov
jb
push
fadds
sahf
pop
mov
cmc
xor
pop
sbb
leave
dec
emms
fldcw
add
push
popf
jb
add
addb
outsl
and
pop
or
add
xchg
das
or
lret
insl
and
aaa
dec
pop
sbb
addr16
stc
dec
test
push
sub
into
inc
cmp
xor
dec
jecxz
lret
aas
movsb
jl
mov
mov
xor
test
jmp
or
add
fsubl
jns
add
xchg
xor
pop
enter
fldl
lcall
push
scas
pusha
or
mov
xor
fidivl
inc
inc
ljmp
or
jp
je
nop
push
ss
ret
repnz
out
cmp
xor
inc
jp
ss
mov
es
lcall
inc
jns
add
vpsubsb
push
pop
inc
or
jmp
jns
xchg
fldcw
dec
imulb
daa
xchg
cmp
mov
dec
daa
xchg
pop
pop
imulb
and
xchg
sbb
stc
and
pop
scas
test
clc
fistpl
clc
jmp
in
sti
aas
dec
testl
ds
in
jnp
pop
in
or
daa
mov
add
add
call
inc
aas
mov
mov
mov
data16
test
icebp
mov
addb
sbb
or
rorl
xor
jns
adc
push
into
ss
sahf
and
aas
add
cmp
je
dec
clc
cmp
push
clc
cmp
inc
clc
adc
mov
jmp
jbe
jmp
push
addb
add
out
loopne
jmp
stc
addr16
clc
outsl
jmp
clc
push
jmp
clc
dec
jmp
push
cli
roll
mov
sub
lds
and
mov
add
mov
xor
cmp
and
xor
sbb
call
aaa
adc
mov
enter
cmp
cmp
add
inc
sarl
roll
mov
inc
mov
rcrb
xor
adc
cmp
mov
fs
ds
mov
popf
imulb
cmp
cmp
and
push
or
or
xchg
pop
std
mov
push
ja
inc
mov
sahf
inc
push
xor
add
aas
test
xor
cmp
fidivrs
test
inc
fwait
pop
mov
jne
iret
dec
sub
lock
add
ja
sarl
imul
sub
push
dec
sub
cmp
dec
popa
cmp
dec
mov
dec
xchg
cmp
dec
mov
and
mov
inc
or
xchg
out
xor
add
in
inc
jbe
out
push
outsb
lods
in
push
pop
dec
in
or
inc
in
sbb
stc
out
push
inc
jmp
out
fwait
xor
jmp
sub
bound
push
dec
add
push
pop
repnz
test
mov
inc
lock
pop
icebp
je
mov
testb
divb
mov
cmc
sub
testl
hlt
inc
inc
mov
je
add
enter
mov
mov
sbb
in
inc
clc
push
jmp
clc
das
jmp
clc
gs
and
xor
xor
cmc
movsl
out
push
sti
and
in
xchg
sti
mov
jle
in
sub
cli
out
push
icebp
dec
add
or
mov
fwait
repz
pop
repz
add
repnz
sti
icebp
pop
call
lock
mov
imul
std
push
lock
test
mov
mov
outsl
add
xchg
lret
add
divl
jne
pop
in
xor
xlat
ret
cmp
lock
jno
bound
stos
aaa
adc
scas
outsl
cmp
xchg
cmp
jl
mov
outsb
cmpsb
cmp
gs
cmp
add
insb
fnstcw
popa
push
cmp
push
aas
in
cmp
popf
daa
pop
xor
push
faddp
lret
adc
sahf
addr16
ja
test
mov
mov
xchg
mov
push
sub
add
and
incb
mov
xor
cmp
mov
sub
shl
push
push
fsubs
xor
add
repnz
sbb
push
lahf
adc
push
and
sbb
je
aas
mov
repnz
push
xor
pop
push
xor
dec
push
xor
mov
push
push
sbb
imul
imul
mov
imul
add
imul
mov
cmp
sub
inc
sub
push
cmp
inc
cmp
out
push
add
fbld
mov
sti
lods
jmp
add
dec
add
push
sub
add
add
push
dec
add
push
fsubrs
add
lods
pushl
add
push
and
gs
jp
outsb
push
sub
fiaddl
add
inc
icebp
int
outsl
icebp
addl
icebp
out
push
icebp
mov
test
jbe
and
jp
aam
or
icebp
pop
add
icebp
out
push
icebp
or
icebp
cmp
icebp
pop
add
icebp
cmp
icebp
xor
das
ret
or
push
pop
add
clc
lock
rdseed
lcall
sti
or
sarl
add
add
lods
lds
cmpsl
int3
aad
xchg
mov
leave
add
push
lds
xchg
push
add
fistl
add
push
icebp
add
int3
in
test
leave
and
std
ret
enter
mov
and
adc
inc
fadd
insl
or
xor
add
repnz
ja
popw
mov
and
add
jp
fs
aad
das
ja
and
jb
or
push
icebp
add
push
sgdtl
rolb
push
icebp
add
pop
icebp
push
add
lock
or
add
or
xorl
lods
push
imul
lea
pop
cmp
lods
push
imul
xorb
test
xchg
imul
add
gs
outsb
xchg
inc
imul
outsl
insl
jb
dec
push
inc
cs
add
push
jae
jne
gs
inc
mov
jp
add
sub
xchg
jb
daa
lea
out
pop
arpl
mov
jns
dec
add
push
mov
jae
jne
data16
xchg
bound
jno
dec
add
push
mov
add
add
movsl
jne
sbbl
xor
and
adc
sub
loopne
std
out
sub
mov
decl
add
mov
push
and
repz
push
or
sub
jmp
fwait
fs
pop
add
icebp
stos
xchg
scas
ret
int3
mov
push
stos
xchg
add
mov
testb
mov
les
xchg
add
scas
mov
lahf
mov
mov
imul
add
cmpsb
mov
push
icebp
aaa
mov
popf
pop
add
icebp
and
icebp
sbb
icebp
sub
icebp
adc
icebp
sbb
icebp
iret
add
icebp
sub
icebp
rolb
add
icebp
push
add
icebp
pop
add
add
icebp
add
push
lcall
stos
mov
sarl
add
push
icebp
add
cmp
add
pop
mov
les
add
inc
mov
scas
ds
inc
inc
mov
cmpl
mov
xorb
les
mov
je
add
mov
mov
add
cmp
add
mov
cmp
add
dec
leave
add
push
iret
add
inc
in
je
ss
push
add
in
add
cmp
add
pop
cmc
imul
cmc
add
dec
cmc
sub
adc
add
aas
cmc
imul
cmc
jo
inc
cmc
jno
cli
hlt
add
out
imul
hlt
add
xor
aas
add
add
aas
add
aas
add
sti
aas
add
add
add
sti
aas
add
cli
aas
add
hlt
add
mov
hlt
lcall
aas
add
and
add
inc
add
hlt
inc
push
dec
hlt
inc
push
in
stc
inc
push
jns
dec
imul
add
cmp
cltd
mov
ss
test
jae
add
inc
rorl
fiadds
pushf
mov
add
les
pop
push
mov
jmp
fiadds
pushf
mov
add
cmp
pop
xorl
inc
xchg
jne
xchg
out
push
mov
fs
shlb
jne
xchg
lock
and
add
push
sbb
icebp
jl
adc
xor
adc
push
sbb
icebp
les
push
icebp
scas
mov
das
daa
rolb
xchg
icebp
push
lret
xor
lret
add
icebp
aad
mov
mov
gs
lret
add
mov
les
movsl
mov
push
icebp
movsl
les
cwtl
mov
sbb
sub
inc
icebp
sub
xchg
and
dec
sbb
icebp
add
aas
mov
mov
pop
mov
add
lods
mov
inc
mov
mov
ja
lock
fs
in
mov
jmp
in
mov
inc
mov
icebp
mov
ja
mov
fs
push
int
jmp
push
pusha
add
icebp
add
push
mov
add
mov
add
add
add
push
icebp
add
mov
add
push
inc
add
pop
jb
dec
pop
arpl
pop
jo
pop
cmp
ss
popa
fs
pop
pusha
jb
cmpl
icebp
add
je
inc
jb
push
jb
pop
jo
or
push
test
orps
mov
subb
xorb
test
iret
cmpb
push
outsl
jb
push
jb
add
gs
dec
jb
dec
gs
lock
call
pop
jo
and
popa
push
pusha
jb
push
enter
push
test
arpl
mov
test
or
cwtl
inc
out
add
mov
push
xor
fs
stc
add
push
sbb
add
add
push
pop
add
push
push
imul
push
push
add
xor
arpl
add
add
add
cmp
je
jle
push
push
addl
outsl
push
mov
jae
cmp
dec
push
mov
pop
push
push
add
test
jb
jne
outsb
push
icebp
pop
add
icebp
inc
add
icebp
pop
add
icebp
ds
icebp
and
icebp
cmp
lock
add
lock
lock
lock
lock
icebp
sbb
icebp
pop
add
add
lock
add
icebp
add
icebp
add
mov
aam
mov
movb
icebp
mov
mov
roll
stos
icebp
out
push
icebp
out
inc
or
xchg
ds
inc
and
stc
loopne
dec
mov
enter
lods
mov
add
push
icebp
add
sahf
jo
mov
fsubl
in
xchg
cs
out
sub
add
add
add
sahf
jo
outsl
gs
mov
insl
cld
outsl
sub
cmp
jmp
inc
and
icebp
add
push
icebp
add
scas
push
mov
mov
lcall
inc
movsb
push
icebp
add
test
mov
dec
add
in
add
pushl
push
inc
add
imul
add
jmp
ss
push
mov
cmp
data16
dec
ss
ljmp
dec
dec
push
aaa
dec
dec
sub
ljmp
xor
cmp
dec
push
cmp
inc
sub
add
dec
push
je
dec
inc
sub
add
cmp
cmc
add
mov
hlt
add
mov
hlt
test
hlt
add
cmpsb
pop
inc
inc
push
push
add
push
xchg
push
push
pop
lret
dec
adc
mov
inc
pop
sbb
add
mov
call
movsl
jae
scas
stos
jl
xchg
outsb
sti
shl
cld
imull
outsb
in
sbb
add
test
jae
out
lahf
insl
mov
stos
incl
add
xchg
pusha
mov
in
lahf
insl
mov
sahf
push
push
pop
xchg
cmpw
push
cmp
mov
outsl
mov
xchg
mov
cmp
icebp
adc
jnp
icebp
mov
adc
lods
add
icebp
movsl
add
icebp
popf
add
icebp
mov
adc
lods
add
icebp
add
icebp
dec
add
icebp
mov
add
adc
jle
adc
aaa
push
adc
pop
push
xchg
icebp
cli
pop
xchg
icebp
dec
rcll
push
add
icebp
leave
add
icebp
mov
xor
icebp
add
push
icebp
add
ss
add
mov
xor
mov
rcll
mov
aaa
push
mov
push
jge
add
push
mov
sub
add
add
mov
test
mov
sub
add
mov
cwtl
cmp
add
mov
add
push
cwtl
add
push
mov
xor
add
dec
xchg
add
push
nop
add
push
mov
add
push
cwtl
add
cli
icebp
add
out
push
add
repnz
add
icebp
inc
add
icebp
insb
add
add
icebp
inc
add
add
icebp
pop
add
icebp
js
icebp
xor
dec
in
js
in
and
stc
in
add
aaa
in
push
add
add
push
in
je
inc
in
je
push
add
dec
push
inc
add
inc
add
add
push
inc
add
inc
add
inc
add
aas
add
into
aas
add
aas
add
int3
aas
add
and
add
add
and
inc
push
mov
inc
push
sbb
inc
push
mov
add
add
add
jge
je
jbe
outsl
push
fwait
add
mov
jb
jno
jbe
roll
lods
add
push
mov
add
in
push
std
add
push
sbb
add
xchg
insb
push
jmp
sarl
add
push
jge
int3
push
pop
cmp
add
add
dec
aas
in
xchg
adc
dec
rorl
sub
or
cs
pushl
xor
and
imul
dec
outsl
fdiv
and
in
adc
xor
icebp
dec
pop
mov
addr16
addr16
js
add
dec
pop
repz
push
test
jg
jnp
orl
movb
rolb
add
lret
imul
add
out
push
icebp
addr16
pushf
dec
dec
dec
mov
outsl
jns
pop
jae
cli
fs
std
test
popa
add
rorb
push
shl
add
adc
dec
sarb
dec
xchg
or
and
cmp
cmp
or
inc
stos
shrl
dec
push
inc
mov
add
add
dec
movsb
ss
bound
mov
mov
push
icebp
add
push
pop
sbb
jmp
out
add
sbb
mov
sarl
adc
jecxz
loopne
add
and
inc
sub
cmp
push
in
or
xor
in
cmp
cmp
out
add
aam
scas
lods
loop
mov
lods
add
ljmp
xor
cmp
jp
orl
mov
test
adc
cmpsl
adc
pop
andb
add
xchg
mov
mov
icebp
popf
mov
mov
mov
inc
aaa
pop
sbb
lcall
divl
push
and
xor
or
add
sub
and
sbb
cmp
push
fidivs
int3
sbb
sbb
es
push
paddb
dec
stos
and
mov
xchg
add
movb
in
sbb
pop
mov
pop
aas
ret
adc
xchg
add
mov
and
and
xchg
mov
push
pop
movsl
jbe
or
xchg
mov
dec
mov
add
mov
push
add
out
push
icebp
in
pop
ljmp
andl
xchg
mov
lds
sbb
sahf
xchg
add
notb
int
sti
fimull
push
mov
loope
push
jmp
test
dec
icebp
call
call
bound
jnp
ja
andb
pop
incb
add
push
mov
sbb
pop
fiaddl
cwtl
ss
gs
jle
add
add
lahf
es
mov
mov
jmp
stos
lea
pushf
fs
aad
outsb
inc
rcll
xchg
inc
mov
xchg
sub
and
mov
addr16
jmp
imul
add
xchg
dec
mov
fwait
rolb
add
adc
ret
push
test
lods
clc
sub
movb
aam
xor
fistpl
cld
add
ss
inc
cmp
daa
sub
xor
sub
dec
pusha
dec
push
jnp
push
bound
js
outsl
push
jge
decl
imul
mov
xchg
scas
lock
cli
icebp
add
fldt
mov
les
mov
add
icebp
add
ljmp
jp
xchg
cmp
push
gs
dec
jg
xor
mov
ficoms
jl
ljmp
fistl
ja
jle
bound
add
push
scas
jp
or
mov
push
sub
adc
add
add
push
pusha
stc
jle
adc
push
stos
out
stos
push
cmp
pop
dec
dec
sahf
bound
leave
dec
daa
push
les
cwtl
jl
sbb
xor
shrb
dec
sbb
xor
push
sub
imul
div
cmp
mov
out
add
push
icebp
sub
or
cs
sub
cmp
inc
jne
ss
mov
test
lods
lahf
mov
jecxz
popf
mov
add
test
mov
mov
paddusb
adc
inc
icebp
fld
mov
pushf
les
in
jbe
repnz
lock
push
stos
in
sti
dec
jmp
idiv
sub
sti
clc
pop
mov
sbb
scas
pushf
xor
jp
mov
jp
out
mov
jae
loopne
jo
cmpsl
mov
js
outsl
in
pop
ljmp
inc
xor
jmp
dec
sub
dec
cmp
mov
push
sbb
roll
mov
or
cli
add
inc
shlb
xor
xor
das
shlb
add
xor
pop
dec
icebp
add
cmpsb
jmp
inc
scas
sti
icebp
inc
cmpsb
jmp
inc
add
dec
pop
push
mov
mov
cmpsl
mov
mov
add
mov
ret
faddp
mov
int
xchg
mov
fimull
popa
dec
pop
addr16
inc
dec
xchg
imul
dec
add
cmp
add
outsl
test
mov
jecxz
lahf
scas
iret
lea
mov
outsb
test
mov
movsl
mov
add
push
cld
adc
ret
fstl
cmc
test
call
add
push
js
inc
call
mov
jl
push
lcall
mov
add
rolb
fnsave
inc
sahf
fisubrs
pushl
fs
mov
push
mov
jecxz
push
movsl
push
add
and
loope
sub
in
cmp
frstor
sub
add
push
jno
mov
xchg
icebp
pop
fs
arpl
add
mov
mov
sbb
fucomi
push
stc
mov
cmc
add
dec
cld
out
push
icebp
mov
xor
or
add
jae
aam
ja
mov
pop
push
pop
or
cmpl
dec
jne
loope
arpl
insb
imul
call
dec
in
movsb
fs
cltd
push
ret
push
xchg
pop
rcrb
arpl
icebp
cs
or
add
xor
fistpl
add
jl
xor
imul
loop
clc
xor
test
jmp
jmp
jo
rcl
push
icebp
add
jge
xor
fldenv
or
push
icebp
add
pop
xchg
data16
adcl
je
dec
mov
imul
xor
test
push
icebp
add
or
cmp
add
loop
push
icebp
add
jno
mov
mov
fwait
xorb
ja
repnz
xchg
and
jns
jmp
repnz
pop
test
mov
jne
loope
fwait
ljmp
xchg
add
add
gs
je
add
test
mov
stos
roll
add
cmpsl
int3
fmul
pushf
leave
xchg
scas
test
add
in
adc
sub
add
xchg
leave
lret
mov
ficoms
inc
fists
or
add
js
frstor
jnp
mov
aam
incl
add
push
sbb
adc
push
fs
inc
sub
xor
icebp
pop
outsb
sub
sub
in
cmp
add
push
jae
roll
add
mov
out
jne
into
mov
aad
pop
add
push
xchg
inc
in
sub
jne
xlat
adc
mov
adc
xor
pusha
out
sub
inc
test
or
push
test
dec
push
repnz
xor
mov
inc
push
loope
sbb
shrb
je
jp
sub
add
or
push
inc
pop
loope
xor
pop
xchg
fsubl
jl
dec
lds
js
jle
push
icebp
movsl
inc
mov
xchg
cmp
les
jnp
lds
inc
or
push
push
icebp
xor
mov
mov
add
sbb
mov
popf
imul
adc
pop
xchg
sub
sub
xor
outsb
add
dec
sub
add
xor
xchg
sbb
inc
jmp
pusha
inc
clc
jmp
mov
push
jmp
adc
rcrb
or
add
inc
mov
jb
inc
cmpsb
js
pop
scas
cmp
mov
push
mov
lods
sbb
arpl
insl
sub
and
push
pop
add
add
xor
push
add
adc
adc
out
pop
pop
xor
cmc
adc
or
and
in
sbb
or
out
add
xchg
jmp
pop
idivb
repz
xchg
out
add
jge
sbb
adc
fs
add
jp
pop
or
cmc
movsl
mov
testl
add
movsl
mov
pushf
mov
cmpsb
mov
xchg
call
jg
out
stos
push
mov
out
dec
mov
fbstp
mov
outsb
inc
mov
lods
lret
adc
subb
push
lods
dec
push
mov
outsl
add
mov
jnp
inc
xchg
insb
sbb
or
add
cmc
push
add
push
pop
aad
push
pop
aam
mov
lret
fdivrp
sub
loop
inc
call
js
int
xchg
aam
dec
out
incl
fwait
loope
je
lret
xchg
ret
ja
test
and
sarb
add
jmp
lods
mov
add
icebp
add
pop
sti
cmc
adc
loop
push
mov
sbb
aas
adc
clc
sub
add
xchg
sub
xchg
ds
cltd
icebp
xchg
icebp
mov
std
mov
sub
cltd
paddb
push
icebp
mov
push
cmc
jmp
pop
mov
or
push
out
ds
fstl
dec
in
jecxz
jmp
add
insb
in
sbb
xchg
xchg
pop
icebp
add
mov
adc
outsb
icebp
add
xchg
mov
into
aaa
or
icebp
add
test
icebp
add
add
adc
vmovmskpd
add
ss
sbb
sarl
xor
sbb
cltd
sbb
push
cmpsl
aas
adc
xor
and
jmp
jns
out
cmpsb
or
ret
cli
outsb
das
std
fstl
les
xchg
xor
jmp
xor
jo
orb
add
add
gs
nop
dec
test
mov
mov
cmpsl
sarl
test
push
jle
jo
popf
xchg
repnz
out
shlb
inc
shlb
adc
repz
inc
jns
mov
jl
add
push
stos
mov
and
pop
pop
mov
adc
xchg
dec
inc
mov
hlt
cld
pop
mov
sahf
add
push
outsl
mov
mov
pushf
movsl
xchg
sbbl
aam
bound
mov
nop
rcrl
mov
mov
lcall
jecxz
mov
int
test
mov
sahf
mov
push
add
dec
pop
test
and
sbb
pop
inc
adc
add
dec
pop
or
add
insl
push
inc
add
jns
inc
cmp
cmp
icebp
lock
andl
iret
or
lcall
dec
in
out
push
pop
cli
sysret
pop
push
lahf
mov
pop
add
icebp
xlat
ss
in
xor
shlb
ror
aas
dec
into
ds
lods
ds
pop
jb
ret
and
push
add
add
dec
loope
inc
test
out
popa
cmc
std
add
add
sti
repnz
call
jl
xor
jnp
cld
xchg
add
std
mov
in
xor
in
xchg
push
sti
sbb
sub
pop
and
lahf
push
and
popa
mov
dec
inc
out
pop
scas
ds
scas
dec
add
fcompl
xchg
hlt
push
lods
cmp
jmp
dec
lods
addr16
xor
xchg
insl
mov
push
xchg
fildll
dec
fbld
jge
and
add
sbb
ljmp
dec
scas
call
ds
cwtl
pushf
push
pmuludq
test
in
sti
lea
mov
sub
mov
add
fmul
loop
ret
jmp
or
int
shrl
fcoml
xlat
xor
push
mov
adc
sub
aaa
das
leave
mov
mov
and
es
daa
xor
in
add
notl
or
jmp
psraw
sbb
sbb
out
push
xchg
in
sbb
push
push
cs
sub
add
into
xlat
xchg
sbb
add
add
mov
mov
insb
ret
lock
imul
add
push
xchg
sahf
sbb
test
pop
add
push
push
pop
adc
sbb
push
lret
mov
in
ja
xchg
jnp
push
xlat
clc
lods
ja
cld
test
add
or
jl
fs
and
popa
jo
adc
mov
add
xchg
stos
sbbl
test
sub
mov
sub
fildll
or
sti
mov
inc
push
icebp
sbb
jecxz
add
icebp
popa
popf
in
xchg
mov
push
je
aam
pop
stos
jecxz
inc
add
icebp
stos
sub
iret
icebp
jle
sti
adc
call
jp
add
out
push
out
add
cmp
icebp
pop
dec
out
sbb
add
add
icebp
add
arpl
push
out
in
add
sub
add
movsl
add
sub
add
jno
pop
shll
nop
xlat
jns
je
or
push
and
das
sbb
movl
pop
xlat
js
cmpsb
bnd
pusha
int
mov
add
add
cli
aaa
fildll
sub
icebp
add
push
lahf
xor
inc
imull
push
mov
jmp
mov
ljmp
repz
sbb
xchg
and
xchg
xchg
push
lds
outsb
fs
bound
fwait
mov
jns
dec
xor
add
aas
mov
es
les
add
adc
cld
invd
out
adc
cld
scas
cmp
add
jo
fs
sbb
aas
inc
pop
stos
push
dec
insl
test
dec
add
lods
dec
inc
das
mov
or
mov
lods
icebp
icebp
fcompl
int3
mov
pushf
fstp
xlat
test
rolb
adcb
add
call
out
js
stos
scas
jnp
xchg
pushl
sub
aaa
out
cmp
bnd
sub
arpl
jo
pop
fs
sub
imul
add
push
inc
mov
add
sub
addr16
das
cs
sub
jl
and
jne
sub
push
das
daa
rorl
jp
out
add
push
icebp
pcmpgtb
loope
pop
mov
movsb
push
and
lds
icebp
cwtl
jge
out
adc
loop
jne
icebp
push
lret
pushf
sbb
rcll
icebp
lds
sahf
xchg
pop
cmp
add
mov
insb
jmp
loopne
addr16
or
movsl
mov
push
push
mov
xlat
loope
xchg
mov
sbb
sbb
add
out
push
icebp
mov
leave
inc
mov
add
js
jmp
dec
clc
add
cld
sbb
dec
cli
add
dec
out
jecxz
stos
or
cmpl
add
repz
push
add
sbb
pop
aaa
dec
icebp
add
fwait
mov
out
add
popa
loope
sub
xchg
es
cli
scas
and
mov
inc
divb
push
loop
add
xor
add
push
int
daa
adc
add
jp
std
jmp
es
mov
lock
inc
jae
subl
jmp
mov
inc
cmpsb
mov
and
xchg
mov
add
sub
roll
fs
incl
add
cmp
out
add
rcll
add
pop
xchg
imul
enter
lods
jbe
mov
outsb
push
or
bound
repz
dec
push
popf
enter
lret
push
decb
xor
adc
add
dec
push
addb
dec
das
inc
dec
jne
dec
inc
sub
push
daa
push
aas
sbb
jp
add
add
pop
push
sbb
pusha
arpl
imul
and
cld
outsb
jp
std
jns
jle
inc
add
push
rorl
enter
test
orl
add
push
fcompl
sbb
add
pushf
jmp
mov
push
sub
add
mov
adc
mov
and
pop
mov
cmp
pushl
lods
add
mov
jo
jge
outsb
jl
mov
lock
pop
aas
mov
lret
xchg
int
push
icebp
push
and
movl
push
icebp
jg
push
icebp
jg
push
icebp
das
push
icebp
xor
jg
push
icebp
jg
push
icebp
dec
pop
in
push
push
push
icebp
aas
jbe
icebp
dec
jbe
icebp
jmp
ljmp
dec
repz
push
jmp
repz
jmp
jecxz
jmp
sbb
stc
test
add
insl
test
push
icebp
add
outsb
test
xor
add
push
icebp
add
sbb
dec
lods
adc
push
xchg
or
bound
sub
outsb
xchg
add
jbe
clc
jns
mov
add
sbb
xor
jmp
push
icebp
add
xchg
leave
and
ja
jno
outsl
jnp
js
jns
push
fsubs
push
fdivrs
aas
cmp
inc
inc
inc
mov
dec
dec
dec
cmpsb
push
push
ds
dec
leave
pop
pop
add
pusha
popa
mov
push
insl
in
jo
stos
repz
add
xor
add
addl
stc
repz
add
repz
out
repz
add
repz
std
hlt
xor
cmp
add
push
aad
inc
push
roll
push
movsb
add
push
mov
outsb
push
mov
add
push
jmp
gs
fiaddl
push
mov
add
push
in
add
push
cli
add
cmc
add
push
or
add
add
add
add
add
add
and
outsb
push
xor
outsl
push
aas
add
cmp
popa
push
pop
add
or
add
add
push
sbb
aaa
push
add
push
or
add
add
jnp
push
push
icebp
dec
add
lock
add
icebp
pop
add
icebp
and
add
icebp
dec
loope
icebp
aaa
lcall
cmp
rcl
xor
xlat
xor
add
out
push
icebp
sbb
shl
add
lret
push
andl
inc
andl
add
icebp
shlb
xchg
lret
icebp
or
and
add
arpl
filds
sbb
int
ss
lcall
icebp
int3
add
mov
jmp
push
mov
add
pop
mov
cmp
mov
push
mov
jp
mov
sbb
mov
mov
je
push
icebp
add
mov
andb
icebp
add
sbbl
int3
outsl
xchg
add
daa
test
push
icebp
add
mov
xchg
add
push
mov
add
push
xchg
add
add
push
add
pushf
lock
loop
arpl
push
add
push
add
cmp
add
mov
or
ljmp
adc
mov
adc
mov
sub
xchg
cli
jae
je
mov
push
test
fsts
adc
cmc
cmpl
push
mov
out
add
cmpsb
rcrl
mov
adc
add
add
jns
and
aas
add
xor
add
jnp
and
jnp
inc
lret
dec
cld
push
or
add
leave
jne
jmp
mov
pop
or
enter
mov
or
popl
jmp
jbe
pusha
dec
mov
adc
leave
adc
ja
mov
popa
pushf
incb
add
andl
addr16
shr
push
push
int3
and
add
enter
ds
sarb
ja
pop
mov
clc
jnp
out
adc
loopne
push
dec
mov
adc
mov
jb
xchg
pop
push
cli
jle
add
cld
pop
arpl
fmulp
pop
push
ss
adc
aaa
fisubrl
jno
xchg
push
icebp
inc
add
icebp
adc
out
adc
test
paddb
out
adc
cmc
jo
dec
mov
push
ret
adc
out
push
das
in
add
mov
arpl
std
or
out
jp
std
bound
inc
mov
mov
loope
icebp
add
sbbb
jg
and
in
push
mul
aam
out
add
loopne
call
sarb
jne
add
jmp
icebp
push
mov
imul
repnz
xor
jb
clc
jbe
daa
cmp
jmp
clc
icebp
vaddsubps
push
xorl
icebp
push
jb
jae
push
or
loop
icebp
push
add
mov
jns
lcall
add
add
les
mov
jp
andl
jo
mov
add
mov
hlt
add
sub
mov
ja
lea
rcrl
mov
add
cmp
inc
and
in
std
push
out
ja
movd
inc
and
mov
std
je
fsubr
push
sbb
xlat
adc
add
out
xlat
sbb
push
xchg
ds
stc
jle
mov
push
fiaddl
or
orl
adc
push
mov
or
and
mov
jmp
add
repnz
mov
or
ja
add
cmp
fisubl
or
out
push
add
fisubl
or
jmp
and
jae
cld
push
mov
add
jne
das
sbb
xchg
and
push
sti
push
out
push
mov
pop
into
dec
clc
xchg
xchg
icebp
mov
jl
das
call
ljmp
mov
inc
outsl
int
inc
aaa
fldenv
outsl
push
push
pop
pop
push
faddl
out
xlat
xor
jl
jl
int
call
ja
jb
sub
bound
insl
test
add
dec
das
and
pop
lock
outsl
outsl
cmp
mov
or
add
je
clc
cld
out
push
icebp
out
mov
out
fdiv
add
push
jge
push
rcrl
out
cmp
incl
jo
push
push
shrl
or
ss
push
icebp
jmp
stc
add
in
and
cltd
in
and
add
test
data16
icebp
cmp
dec
repnz
stos
mov
push
jae
je
je
or
jmp
pop
cmc
std
jmp
push
in
xchg
push
icebp
add
popa
repz
lea
sbb
ljmp
add
mov
adc
sub
dec
push
cli
lock
add
push
in
add
aaa
push
ljmp
jno
cwtl
jp
add
mov
push
sbb
jl
lock
je
lcall
xor
stos
jno
movzwl
cmp
and
lock
mov
and
cltd
decl
sub
xchg
je
and
lock
push
mov
scas
add
icebp
test
add
std
push
mov
cmp
rorb
jne
jg
adc
or
adc
xor
mov
pop
fimull
lods
or
orb
cmc
incl
inc
out
push
mov
push
push
inc
lea
cs
call
leave
testb
ss
add
mov
add
push
mov
lods
push
or
pushw
mov
add
xor
sbb
mov
add
icebp
cmp
std
repnz
jbe
add
cmp
out
mov
icebp
out
and
or
rorl
in
int
subb
out
pushf
jge
adc
stos
filds
jnp
fiaddl
push
insl
sub
mov
bnd
sbb
js
sahf
mov
adc
add
mov
jmp
add
sahf
into
outsb
inc
fwait
pop
in
in
in
jmp
adc
dec
mov
daa
repz
mov
and
cmp
je
jno
xchg
pop
stos
icebp
push
bound
push
scas
jl
sbb
push
incb
data16
fs
jb
cli
nop
push
cmp
add
pop
or
or
icebp
mov
cmc
sti
je
jmp
adc
in
std
out
call
mov
or
das
into
jecxz
push
and
ret
inc
cmc
adc
pop
addr16
add
jmp
mov
add
pushf
cmpsl
testb
mov
loopne
push
push
inc
dec
or
or
add
hlt
add
flds
adc
add
sub
add
cmp
push
shll
cmp
adc
jg
mov
hlt
std
jne
pop
idiv
iret
cld
call
mov
jns
jg
pop
shr
clc
dec
lea
xor
arpl
mov
xchg
loop
dec
xchg
pop
or
add
add
push
pop
shlb
call
call
or
push
fidivl
push
enter
inc
pop
or
sbb
lds
call
enter
add
add
psadbw
add
loopne
call
fcomps
inc
pop
xchg
aad
push
enter
std
xchg
je
stos
mov
idivl
pop
clc
xor
add
inc
cmp
push
repnz
enter
subb
movsb
adc
imul
cmp
inc
pop
incb
jb
adc
pop
push
aaa
and
add
ds
out
imul
arpl
js
dec
xor
xor
fbstp
pushf
xor
out
aam
gs
test
push
popa
dec
add
std
push
dec
es
jae
pop
push
sub
push
push
add
adc
xchg
xor
or
mov
xchg
inc
push
pusha
xchg
dec
hlt
test
inc
jmp
xchg
pop
pop
bound
dec
pop
adc
sbb
cmp
mov
aas
ret
adcl
mov
or
push
je
leave
inc
stc
jo
in
push
pop
add
aas
aam
add
icebp
mov
std
ds
icebp
add
xchg
std
add
lock
pop
stos
fs
icebp
push
add
push
imul
add
jle
xor
fldl
shlb
dec
inc
cli
push
mov
push
mov
js
test
sbb
je
pop
leave
add
lock
add
add
cmc
add
test
lock
gs
mov
cmp
add
ret
mov
jns
je
ja
call
divb
call
push
pop
lds
push
push
pop
into
arpl
int3
shll
dec
jae
mov
push
ficompl
enter
lret
cmpsl
pop
nop
nop
or
add
add
pop
arpl
cmp
and
push
or
fcoms
add
popf
cltd
add
add
push
and
adc
jmp
sbb
and
fistl
shll
inc
adc
arpl
dec
jnp
loopne
jl
inc
adc
lock
push
fisubrl
or
hlt
imul
push
inc
push
fcomp
stc
insb
inc
add
popl
mov
mov
xorb
cld
fcompl
inc
iret
mov
mov
faddl
ljmp
das
jl
mulb
nop
scas
arpl
out
pop
or
push
dec
push
test
push
cli
xor
cmc
test
out
out
and
xor
xor
adc
cmp
mov
push
ljmp
add
dec
mov
and
add
and
fistl
add
mov
loope
daa
out
add
push
je
jne
jbe
stc
fnsave
pop
jmp
mov
psubusw
das
jmp
ja
xor
mov
xchg
inc
addr16
add
jge
sub
jl
xor
rcl
jmp
add
adc
push
jb
jbe
sub
jecxz
pusha
dec
pop
add
dec
ja
add
lods
add
mov
loopne
addr16
inc
jp
ret
ret
xchg
mov
fldl
sarl
mov
loope
inc
sub
add
add
xor
fucomp
inc
ljmp
add
add
jmp
add
out
jns
icebp
sub
inc
mov
in
jg
leave
in
add
cmpsb
scas
cmp
out
add
xchg
mov
gs
ljmp
std
and
pop
loop
enter
jo
add
stos
jle
pop
sub
xor
sbb
adc
test
pop
fiadds
mov
fiadds
bnd
push
or
and
test
push
add
or
inc
push
call
add
ficoml
ror
orb
sbb
inc
push
arpl
shrb
and
xchg
shl
push
mov
and
dec
ficoml
jnp
les
les
inc
nop
mov
xor
fiaddl
add
stc
inc
push
jbe
fistpl
call
ficompl
fiaddl
mov
out
xchg
push
mov
sub
std
mov
cmp
stos
test
cmp
lea
stc
inc
push
aas
aas
lea
inc
push
pop
cltd
in
sub
and
add
cmpsb
into
xchg
pop
jp
test
add
add
in
faddl
test
xchg
in
dec
cmp
icebp
call
xorl
mov
mov
std
mov
sbb
scas
pop
lahf
jg
cmp
jg
and
imul
pusha
sub
std
cli
mov
repz
or
push
aas
xor
adcb
out
imul
add
add
icebp
add
jge
pushl
cs
inc
jno
and
pop
push
int
in
cmpsb
pop
jne
fstps
repz
call
add
ljmp
adc
test
lds
les
sub
or
test
lds
popf
dec
inc
sub
xor
jae
std
mov
add
fnstsw
repz
sbb
ljmp
adc
cmc
push
imul
call
cli
fiaddl
push
fdivp
push
outsb
mov
adc
mov
inc
push
aas
pop
push
loope,pn
adc
mov
inc
push
push
pusha
adc
pop
hlt
push
sahf
and
rclb
add
das
repnz
dec
repz
or
add
add
push
mov
cmp
lock
xor
add
cmp
sub
add
inc
or
adc
mov
xorl
lock
imul
insb
mov
or
push
dec
nop
sarl
out
in
dec
imul
dec
jno
sti
xlat
lret
add
aam
inc
push
jbe
cmp
mov
aad
add
daa
imul
daa
add
adc
or
notl
dec
pop
int3
int
stc
jmp
push
dec
jbe
or
adc
sub
or
loop
mov
icebp
je
enter
push
dec
add
lret
pop
stc
sub
repz
std
push
test
imul
xchg
pop
adc
pop
cmc
mov
push
flds
mov
fucomp
ljmp
inc
loope
dec
mov
add
out
ljmp
sub
out
shll
mov
gs
out
call
std
add
es
push
add
lock
jno
ret
add
sub
and
out
add
lea
push
aad
imul
cmpsb
push
add
jbe
call
and
or
cli
in
add
lret
add
mov
push
jmp
push
push
fsub
arpl
call
xchg
sub
mov
js
xor
add
inc
add
push
mov
std
add
add
int
add
push
xor
mov
cmp
fcoml
add
xchg
mov
btc
sar
mov
mov
mov
je
add
lret
pop
mov
add
push
and
loop
push
lret
push
jnp
adc
movl
or
popa
push
pop
add
mov
mov
test
lret
enter
xchg
lret
cmpsl
je
mov
lock
add
aaa
adc
inc
iret
mov
push
outsb
gs
in
xor
jae
add
aaa
sar
jae
jmp
cmpsb
addl
icebp
pop
mov
outsb
gs
push
icebp
out
fcomp
jg
push
icebp
out
fsubrp
in
add
push
outsb
insl
add
out
into
jbe
push
push
icebp
xchg
fcmovne
repnz
jbe
or
mov
xchg
enter
icebp
push
rolb
out
push
push
fcmovnbe
rcrl
add
movswl
pusha
mov
push
xchg
mov
dec
and
std
out
sahf
or
inc
mov
icebp
add
outsl
je
loope
icebp
xchg
icebp
add
push
mov
stos
test
sub
add
imul
insb
dec
xor
jmp
add
pop
mov
je
jmp
add
icebp
push
je
mov
jmp
pop
repz
call
dec
icebp
add
push
icebp
push
push
cli
jb
add
pop
mov
icebp
movsl
add
outsl
jmp
mov
mov
add
and
add
dec
aas
add
rclb
xor
test
sub
add
ret
std
jae
in
ret
jge
add
xor
mov
and
add
push
out
je
add
push
in
add
jp
xlat
stc
mov
icebp
addl
push
loopne
cmp
add
adcb
into
cmp
add
add
xor
inc
xchg
add
xor
jo
ds
aas
push
push
lds
push
addl
inc
dec
push
es
cmp
or
adc
mov
test
add
sub
addb
dec
xchg
dec
lret
pushf
addl
push
lret
add
push
rcll
mov
add
jmp
aaa
push
add
rcll
add
lock
push
fdiv
jmp
call
cmpb
subb
sub
lretw
cmp
out
movsb
push
out
push
icebp
out
adc
int3
out
add
icebp
push
in
scas
into
aam
ja
push
icebp
aaa
or
enter
icebp
push
pop
icebp
repz
add
flds
jp
jmp
data16
je
sub
push
stos
sub
jl
arpl
rcl
aas
test
out
push
inc
add
adc
push
icebp
call
push
adc
and
dec
icebp
add
or
dec
loope
int3
call
pop
rorl
icebp
pop
in
cmp
dec
add
add
movb
mov
pop
scas
jl
cmpb
cmc
jle
std
je
push
sbb
icebp
cmp
pusha
sbb
sub
adcl
dec
or
adc
jae
add
push
jg
pop
inc
cmp
and
push
xchg
outsb
icebp
mov
hlt
or
or
add
jmp
pop
dec
and
add
and
in
jg
add
mov
shr
in
xor
popa
mov
dec
dec
and
cmp
je
adc
or
ret
add
pop
hlt
cmp
mov
or
sahf
adc
add
adc
push
dec
inc
and
push
test
push
enter
lret
xchg
add
jle
or
shr
add
and
fwait
xor
push
repnz
rclb
adc
push
jnp
adc
jp
jae
ljmp
xchg
lret
jne
js
and
sub
pop
iret
xchg
inc
sbb
add
sub
test
cmpb
scas
idivb
push
dec
and
pushf
sbb
adc
icebp
out
add
les
adc
dec
mov
pushf
jle
je
hlt
add
arpl
push
add
js
fnstenv
mov
xor
out
sbb
inc
xchg
jle
stc
testl
in
push
inc
dec
in
push
cmp
adc
xlat
mov
jns
fstl
aaa
cmp
cmp
and
adc
add
mov
insl
cmpsl
push
pop
fdivr
iret
movsl
mov
add
xchg
inc
loope
push
or
push
mov
in
sub
call
mov
xor
add
lret
push
icebp
push
mov
and
fs
inc
push
cltd
xchg
adc
adc
jb
lods
adc
push
orl
add
std
cmp
mov
inc
jmp
mov
std
scas
xchg
adc
cmp
sti
xchg
mov
hlt
call
push
mov
movsb
pop
test
push
std
mov
lods
push
out
push
mov
jmp
push
cmpb
je
sbb
push
mov
pop
inc
sar
adc
xor
add
add
jp
add
push
test
jl
add
add
or
mov
lcall
jnp
sbb
cli
icebp
push
push
inc
aaa
adc
pop
aad
fldcw
pop
icebp
push
loop
flds
stos
add
out
inc
cmpsl
mov
cvtps2pi
adc
push
push
mov
push
push
push
inc
cmpl
inc
mov
fdivrl
add
out
dec
and
into
das
enter
xchg
inc
or
out
and
add
cli
jbe
cmp
enter
mov
inc
scas
shlb
push
or
cmp
inc
add
fiaddl
stos
scas
ss
push
inc
lcall
dec
mov
jge
icebp
out
pop
pop
adc
data16
sbb
hlt
ret
ds
add
std
aaa
mov
inc
icebp
jge
aaa
in
call
fs
add
ljmp
fsubrs
xchg
jp
inc
fwait
js
aad
js
jmp
out
xchg
pusha
add
dec
pop
sub
cmp
push
pop
loop
dec
and
inc
enter
push
mov
out
enter
add
fsubrl
push
bound
dec
add
push
enter
test
xchg
data16
xchg
push
jmp
insl
nop
pop
adc
in
ja
sar
daa
and
adc
fcoml
and
fst
pop
sub
mov
and
sub
add
or
mov
std
subl
add
clc
cmp
dec
ljmp
cs
add
xor
int
add
cs
add
push
add
mov
out
or
add
xor
add
add
outsb
out
or
call
jle
xor
sub
ret
ret
mov
js
add
mov
test
cmp
mov
mov
jno,pn
add
and
dec
jg
push
xchg
xchg
inc
and
sar
call
mov
ljmp
sub
pop
in
or
add
pop
movsb
jmp
jmp
dec
es
dec
ds
add
incl
movsb
jmp
incl
add
and
enter
loopne
ds
enter
in
dec
imul
add
ret
push
add
mov
jmp
fiaddl
jmp
rcll
lcall
lahf
incl
jbe
aaa
icebp
daa
lret
sti
add
adc
add
pop
call
push
push
icebp
arpl
inc
out
bound
cmp
negb
add
adc
sti
add
adc
mov
lods
sbb
lock
das
xor
out
clc
adc
add
mull
jnp
out
push
jle
call
adc
or
out
lea
call
add
and
icebp
pop
mov
ljmp
jle
lods
in
adc
cmp
xor
add
add
fdivrp
into
cs
mov
mov
icebp
call
xchg
pop
rclb
in
xor
bound
stc
andl
mov
daa
in
dec
hlt
xchg
dec
shlb
xor
adc
sub
adc
and
cmc
sbb
and
jmp
push
mov
lds
dec
test
add
push
fsts
adc
mov
out
adc
mov
and
lods
xor
subb
add
mov
add
cmp
int3
ljmp
inc
mov
repnz
ljmp
pop
mov
cs
jl
push
jg
or
or
add
inc
and
repz
push
and
xchg
push
call
add
lods
jge
pop
sub
add
adcl
repnz
mov
fdivrl
add
push
add
push
add
add
mov
test
das
add
jmp
je
fadds
fadds
push
sbb
outsl
ss
in
or
test
add
iret
pop
add
push
dec
aaa
sbb
lods
fisttpll
adc
shlb
pushl
cwtl
add
cli
push
lret
popf
maskmovq
imull
orl
sub
xor
pop
cmpsb
loop
jecxz
cli
pusha
popa
jae
loopne
jbe
mov
adc
in
movsb
mov
xor
ljmp
movsb
bound
sub
add
addr16
adc
enter
add
cmp
sbb
lods
inc
clc
push
std
lret
sbb
pushf
out
adc
icebp
jo
dec
or
and
icebp
out
paddsw
or
inc
hlt
mov
push
js
mov
adc
add
cmpsb
js
jge,pn
vcvttsd2si
inc
jmp
push
js
add
call
add
dec
inc
pop
lahf
test
shr
push
js
inc
adc
add
xlat
add
jge
divl
int3
xchg
or
xchg
or
and
jae
rorl
inc
in
mov
inc
xchg
push
gs
or
js
pop
sarl
std
filds
jbe
xchg
inc
or
xchg
add
push
mov
add
ja
and
mov
push
jne
or
sub
add
scas
in
and
add
jle
movb
mov
sahf
inc
sub
out
std
inc
js
hlt
imul
or
inc
add
stc
add
adcl
lcall
sbb
sub
mov
rcll
push
push
add
icebp
leave
or
push
test
enter
xchg
jmp
sbb
mov
inc
sub
fsts
mov
add
cmp
insb
sbb
adcb
test
je
addr16
xlat
add
sbb
ret
jae
shll
cld
sti
cs
fsub
ljmp
or
pop
enter
or
mov
add
add
das
lret
fmuls
lock
xor
ret
in
insb
lock
pop
fnstenv
or
arpl
cmp
call
add
out
push
lcall
rcll
push
arpl
jnp
add
mov
pop
xchg
out
add
in
cli
stos
add
or
mov
enter
lods
call
inc
sbb
leave
call
or
pop
ljmp
pop
call
adc
add
outsl
xor
push
icebp
data16
push
out
loope
mov
xor
cltd
popf
fxch
sbb
mov
in
xor
mov
enter
push
jb
add
jo
loope
icebp
add
push
icebp
mov
int
data16
ds
mulb
push
fisubs
stc
mov
inc
and
pop
cmpsl
std
push
dec
sbb
push
push
mov
rorl
scas
js
call
add
shufps
rcpps
movb
pop
inc
push
aaa
xchg
sub
repz
add
incl
add
repz
mov
inc
incb
sub
mov
inc
add
add
mov
or
and
add
repnz
push
imul
outsb
pop
jns
add
mov
mov
jp
hlt
popa
mov
pop
cmp
or
inc
xrelease
add
jmp
andl
push
pop
mov
add
jnp
roll
loop
pop
into
adc
mov
ret
push
fadds
push
push
movsl
pop
inc
rolb
fisubrs
mov
lock
fiaddl
add
ja
sbb
lds
cld
je
pop
arpl
adc
add
fadd
test
push
inc
aas
or
inc
xor
xor
push
aaa
or
add
add
and
push
mov
inc
pop
add
je
fwait
and
inc
xchg
cmp
mov
jae
daa
add
mov
stc
inc
mov
sbb
jno
jb
dec
jnp
push
arpl
hlt
or
inc
cmpl
lods
mov
push
aas
inc
xchg
leave
push
cs
les
add
xchg
icebp
sub
in
cmp
iret
dec
jp
out
jne
test
fisttpl
and
sub
mov
popl
mov
cmp
bound
add
inc
idiv
stc
dec
js
addl
add
sub
push
bound
fnstenv
add
cld
ret
or
push
arpl
adc
test
push
sbb
and
sbb
cmp
sbb
movsb
cli
nop
icebp
mov
rol
jae
jp
call
incl
pop
pop
clc
filds
test
adc
mov
mov
adc
jg
hlt
inc
push
das
je
das
add
add
out
add
mov
mov
ret
loope
sub
stc
out
push
push
cld
outsl
int3
cmp
add
mov
shll
test
cs
and
mov
jecxz
test
cli
out
add
jno
je
sub
enter
add
push
mov
into
push
fdivrs
aas
push
mov
test
add
add
mov
sub
decl
aas
add
mov
push
imul
ljmp
and
xchg
inc
jmp
inc
cld
mov
add
cmp
mov
pop
mov
xchg
add
dec
adc
lock
jle
jg
mov
aas
iret
cmc
push
or
sbb
repz
call
add
mov
adc
repz
cmp
out
xlat
mov
sbb
sub
cmpsl
repz
add
push
js
adc
mull
dec
js
add
and
sar
clc
adc
mov
jle
cmp
mov
cmc
bound
insb
cmp
mov
hlt
jmp
shll
sub
add
xchg
ret
cmp
sub
push
inc
mov
push
inc
out
mov
inc
xor
push
int3
sub
mov
mov
pop
leave
lds
mov
int3
lods
push
icebp
std
aas
dec
leave
les
fdivrs
cmpsl
fdivs
sbb
lahf
scas
push
icebp
out
dec
mov
adc
daa
mov
rorb
add
push
icebp
add
lds
inc
int
mov
lods
lods
add
loope
jno
aad
add
loope
sub
icebp
call
fimull
cli
adc
push
adc
in
ss
rcrb
sub
push
int
repz
sub
add
dec
inc
adc
mov
fadd
mov
add
add
out
in
dec
addb
ret
cmp
jp
je
mov
xorb
sbb
cmp
pop
cmp
mov
jle
add
repz
call
add
cmc
push
mov
pop
popf
lea
sahf
inc
sahf
cmp
cli
jmp
pop
sbb
add
dec
call
dec
sub
add
mov
mov
test
push
enter
inc
xchg
pop
scas
dec
and
leave
push
enter
dec
out
add
sbb
mov
xchg
add
lret
dec
ficoms
inc
daa
push
mov
sbb
add
push
enter
lock
stos
or
mov
cmpxchg
add
add
inc
inc
and
push
add
sub
inc
cmpl
add
xor
ss
sbb
sbb
out
out
lea
mov
add
jne
xchg
and
fwait
and
sub
je
adc
push
sbb
test
jg
lock
into
jae
stos
push
mov
movsb
jae
push
pop
adc
add
sarl
jmp
test
add
insb
pop
mov
negl
gs
aam
nop
icebp
subl
mov
mov
add
add
addr16
xchg
outsl
shr
cli
xor
outsl
std
call
xor
addl
add
jne
jbe
mov
add
fstpt
repz
in
jmp
insb
addr16
mov
lock
mov
xchg
adcb
pushl
jmp
sub
out
add
mov
inc
aaa
stc
in
xor
cmc
mov
out
mov
dec
and
test
add
mov
cmp
leave
jp
add
jae
add
xor
cmp
addb
out
push
cmp
jmp
out
add
push
dec
aas
jmp
inc
push
enter
dec
stos
pop
dec
jge
and
push
push
push
jno
adc
das
lcall
popf
movsl
adc
pop
outsb
inc
push
enter
dec
mov
add
aam
push
incl
stos
aad
mov
xor
and
cs
push
cld
push
test
add
enter
or
xor
popf
push
lds
mov
clc
jo
push
lds
adc
mov
call
call
jae
mov
mov
out
add
lods
sub
js
insl
add
sti
xchg
jge
jae
dec
jae
add
icebp
jg
sbb
call
inc
push
je
cld
shlb
add
mov
in
pushf
cmp
add
adc
je
into
out
out
push
and
js
jae
aaa
out
gs
js
enter
lock
int3
cmp
or
add
ljmp
rcll
leave
xchg
pop
push
icebp
std
pushf
shrb
jge
std
mov
push
je
cmc
int
or
jno
icebp
test
test
std
pop
sti
shr
fucomp
mov
pop
jmp
aam
push
icebp
jmp
xchg
jmp
std
push
or
stos
and
jmp
push
aaa
add
and
add
inc
jmp
outsl
pushf
hlt
inc
push
sbb
jmp
nop
cmovo
aaa
inc
or
shl
inc
sub
inc
or
test
inc
cmp
inc
adc
mov
inc
sub
inc
adc
shl
cli
ss
sbb
les
fistps
mov
pop
stc
nop
jmp
mov
ljmp
add
add
xor
mov
push
fstl
cmp
inc
aad
mov
push
dec
sub
or
push
lret
add
icebp
lcall
add
mov
into
xchg
cltd
push
sub
add
ret
dec
and
add
nop
enter
mov
or
decl
or
decb
inc
mov
add
add
mov
add
in
add
adc
dec
pop
sbb
jnp
rcrb
push
stos
cmp
decl
pop
dec
imul
add
mov
pushf
adc
add
cmp
jl
in
aas
xor
add
popf
push
push
cmpsb
repz
out
hlt
in
enter
sbb
add
pop
and
xor
sub
mov
stc
iret
scas
jmp
xchg
test
push
test
push
arpl
jo
pop
insb
daa
stc
rolb
insb
xchg
out
pop
push
icebp
out
bswap
aaa
push
push
pop
aaa
pushf
mov
sub
add
add
iret
xor
jmp
push
icebp
mov
and
push
push
add
mov
push
or
jmp
cmp
jmp
icebp
mov
sbb
scas
mov
add
test
inc
jmp
icebp
addl
jo
call
subb
and
call
adc
rcll
test
push
icebp
add
sub
stc
or
add
lock
mov
test
imul
jge
cmp
call
add
or
add
orl
add
cmc
jmp
outsl
jl
cmp
add
clc
out
add
jno
adc
loopne
out
add
movsb
jo
jle
pop
adc
mov
inc
faddl
add
lods
jno
ror
mov
daa
jmp
mov
leave
imul
add
into
mov
or
sarl
add
jp
cmpl
in
pop
adc
push
inc
ret
bound
inc
pop
dec
ret
aas
inc
hlt
sub
stos
mov
leave
add
pop
pop
cmpsb
je
add
enter
push
cmc
out
or
add
cmc
mov
aas
inc
or
mov
decb
je
aas
or
icebp
sub
add
jae
pop
out
and
add
fidivrs
data16
fldenv
loopne
aas
stos
jecxz
jl
and
sbb
sub
aas
imul
mov
push
cmp
fwait
aas
push
call
push
add
enter
ds
aas
xchg
loope
xor
data16
mov
lock
jle
push
jmp
pushf
std
push
add
clc
fcmovbe
cmp
insb
mov
fnsave
out
jle
mov
imul
stos
inc
rcll
xor
pop
rol
fs
call
sbb
std
xor
leave
mov
icebp
subl
add
and
call
fnstcw
and
xchg
mov
out
jno
outsb
idiv
add
cmp
test
fldcw
movsb
sub
mov
push
jle
xor
and
call
bound
jae
add
jbe
aas
xor
push
das
xor
mov
pop
jo
add
mov
add
fadds
testb
cmp
in
push
add
cmpb
ret
sub
mov
xor
ret
push
mov
ja
and
adc
ja
add
hlt
pop
or
add
test
pop
sti
xor
andl
cli
ljmp
xchg
stos
mov
ljmp
push
add
push
imul
push
lcall
je,pn
lea
scas
xor
ds
mov
add
pop
or
ds
repz
push
and
clc
cmp
or
imul
ljmp
dec
ja
or
jmp
add
inc
mov
sub
pushf
dec
clc
mov
push
add
add
xchg
cmp
push
fwait
sahf
push
movsl
inc
push
sahf
push
cwtl
mov
push
icebp
sub
push
loop
scas
dec
scas
pushf
repz
xor
push
jp
neg
loope
lret
in
add
or
arpl
das
jne
mov
jne
mov
sub
sub
dec
insl
out
daa
fisttpl
jge
push
and
push
icebp
push
mov
pop
aad
inc
push
jp
cmp
lods
fucomi
lods
in
jecxz
xchg
icebp
out
ja
jne
adc
imul
or
stos
push
inc
aam
incl
sub
push
push
in
adc
adc
and
icebp
fdivl
add
dec
test
cmp
in
in
movsb
inc
jmp
add
fs
das
push
scas
std
insl
nop
and
sub
hlt
mov
pushf
hlt
mov
imul
push
stos
std
push
repnz
pop
fildll
js
das
and
jl
pop
add
jl
add
dec
ret
dec
xchg
or
jmp
jns
mov
cmp
add
addb
rorb
add
or
jmp
lahf
cmp
js
cmc
push
je
ja
call
stc
mov
je
pop
sbb
movsl
mov
adc
add
jl
mov
adc
push
lcall
mov
inc
sub
mov
adc
testb
enter
fxch
icebp
jg
popf
adc
add
add
fisttps
jne
fisttpl
mov
bound
add
mov
shl
pushf
cmpb
xor
dec
xorl
pop
incb
outsb
out
aas
push
adc
aaa
cmove
fcmovu
call
imul
push
and
xor
lea
mov
nop
pop
imul
xor
push
cmc
incb
add
push
and
icebp
dec
and
lock
cwtl
aad
add
xor
lock
mov
out
cli
imul
out
nop
aad
xor
je
add
daa
push
iret
ljmp
cmp
stos
cmp
jbe
xor
lods
aas
insl
add
std
mov
stos
mov
ljmp
add
add
adc
rcrl
outsb
mov
and
pop
lods
js
add
push
jl
lds
cs
stos
xor
xchg
fdivl
icebp
subl
out
lods
in
dec
push
ds
adc
pop
cltd
mov
sub
leave
jmp
mov
push
jb
cmp
mov
xor
add
xchg
jo
add
mov
and
mov
cmp
mov
call
aas
jl
add
and
sub
imul
add
cmp
or
mov
jle
or
fsubs
pop
scas
ret
add
fisttpll
filds
mov
call
test
add
add
jmp
fcompl
cli
hlt
push
call
xor
addl
lods
add
ret
cmp
or
incl
in
stos
in
add
push
jbe
sub
out
xchg
pop
mov
push
loopne
movsl
adc
push
xor
cmp
insb
aaa
ret
xor
add
subb
pop
sbb
or
xchg
test
lcall
jbe
add
mov
xor
inc
pusha
test
mov
rorb
pop
sbb
add
inc
sbb
or
xchg
xchg
sub
cmp
push
jnp
mov
push
sbb
adc
and
mov
add
aaa
aaa
imul
push
inc
gs
add
dec
jns
cwtl
sub
test
mov
mov
add
arpl
fcmove
and
cmp
pop
pop
add
sbb
mov
jns
add
scas
xchg
mov
lea
adc
icebp
push
pop
insb
daa
setbe
mov
movsb
fwait
lods
pop
test
adc
xor
icebp
inc
add
add
je
pushf
je
test
test
push
jp
mov
xchg
outsb
sbb
fldcw
mov
pop
js
in
out
call
push
jp
popa
call
or
call
jb
insb
insb
std
std
cs
cmc
and
add
push
icebp
mov
pop
cmpsb
adc
add
lods
in
push
lock
out
iret
and
jmp
pop
inc
imul
je
add
xchg
pop
push
repnz
mov
add
std
jne
je
push
push
movsb
pop
call
jae
cmp
mov
insw
movsb
adc
add
add
je
xchg
addr16
sbb
roll
out
inc
or
jecxz
out
test
in
mov
mov
sbb
mov
jecxz
mov
in
andl
jne
je
fs
mov
shll
pop
mov
add
fiaddl
push
insb
out
pop
loop
adcb
add
sub
ret
add
rclb
add
ret
push
arpl
rolb
add
mov
jg
daa
ficomps
sti
mov
dec
inc
inc
push
mov
stos
xor
sbb
adc
stos
jns
add
rorl
fsts
adc
lock
jl
and
and
arpl
pop
shrb
jne
sti
sub
lock
add
rorl
in
adc
inc
push
outsb
cmpsl
out
sub
dec
add
cmpsl
stos
sbb
cwtl
fnstenv
in
xchg
lahf
test
cmpsl
notl
movsb
xchg
hlt
cmp
add
fbld
ss
inc
xor
push
icebp
lcall
sub
mov
insb
daa
jns
pop
ljmp
or
jmp
add
cmp
jmp
mov
mov
jns
in
inc
and
rcl
std
scas
shll
mov
scas
add
sbb
in
add
xor
in
jbe
int
cmp
das
mov
sahf
push
icebp
pop
mov
bound
shrl
shrb
icebp
or
test
cmp
add
add
add
lds
test
mov
lcall
adc
out
mov
in
add
mov
jo
adc
mov
add
aam
test
lock
xchg
loop
add
mov
add
jb
or
testb
movsl
std
push
lods
rolb
add
push
or
dec
inc
stc
add
lods
test
add
hlt
mov
sar
repz
cli
loope
xlat
xchg
cmp
ljmp
jl
rcpps
jmp
ror
add
push
xchg
jmp
ja
mov
push
rcll
adc
pop
lcall
imul
add
jle
fcoms
pop
outsl
mov
out
push
push
jnp
inc
mov
fcmove
cwtl
mov
and
pusha
sub
lds
cmpsb
testl
adc
test
dec
popf
ljmp
mov
fmull
mov
inc
add
add
jl
mov
cmp
push
insb
lods
lahf
imul
push
icebp
jb
jg
outsl
xchg
mov
out
push
mov
push
fs
bound
imul
arpl
addl
into
in
out
xor
mov
push
sub
jb
aaa
mov
push
dec
movsb
sub
xor
xchg
jg
push
sbb
aam
cmc
add
cwtl
xchg
icebp
jb
shll
or
jmp
imul
inc
repz
std
bound
add
imul
int3
lahf
call
push
push
adc
xor
push
jne
int
mov
repnz
shl
mov
mov
xchg
out
test
sbb
shll
add
or
jge
movsb
push
xchg
test
xchg
icebp
call
jb
push
jae
pop
jp
add
add
lods
in
aas
cmc
add
inc
stc
pop
mov
cmc
add
mov
cmc
add
push
inc
mov
ucomiss
add
sbb
or
cltd
mov
pop
cmpsb
adc
lahf
out
add
jbe
add
mov
add
pop
inc
pushl
je
incl
add
repz
sbb
jno
xor
push
movsl
add
adcb
pushf
cmpsb
scas
mov
test
mov
mov
mov
mov
add
push
mov
add
push
xor
cmp
cmpsb
adc
and
and
test
inc
sub
std
mov
inc
arpl
inc
sub
add
aad
mov
out
inc
aas
and
lds
push
lret
lds
and
adc
adcb
andl
cwtl
lret
out
push
push
or
xor
inc
orb
out
pop
xchg
not
mov
xor
mov
xchg
movsl
fwait
jb
scas
mov
shll
add
mov
ss
mov
sti
pop
das
call
mov
repz
adc
fnstsw
leave
pusha
inc
ret
data16
fnstenv
aam
xchg
lea
cmpsl
data16
imul
nop
sbb
cmp
cmc
jle
popa
xchg
sbb
lods
shrb
pop
and
std
add
out
or
inc
sbb
lds
or
add
sbb
rep
push
lcall
jg
xchg
rol
std
hlt
push
cmp
sbb
add
std
sbb
fwait
jae
iret
and
xchg
cmp
repz
les
push
int
pop
jecxz
mov
loopne
push
jno
pop
push
add
sub
inc
add
insb
adc
or
add
sbb
jecxz
adc
inc
dec
add
jo
call
enter
orl
jmp
insb
cmp
add
push
cmc
nop
call
popf
mov
push
pop
xchg
mov
add
imul
cmp
xchg
outsb
pop
add
fnstsw
add
mov
xor
add
mov
cmp
inc
push
add
mov
xchg
mov
xchg
adc
pop
adc
xchg
jg
cmpsb
add
adc
xchg
ret
sbb
dec
mov
xorb
cmp
adc
mov
hlt
adc
idivb
add
push
adc
push
pusha
clc
mov
xchg
jle
das
ret
pop
nop
inc
push
icebp
jb
shrl
into
test
call
mov
cwtl
jbe
pusha
or
sbb
mov
dec
mov
stos
add
mov
add
icebp
ljmp
cmp
xor
std
pop
idivb
sub
mov
lds
add
jle
jae
mov
test
push
icebp
lcall
in
faddl
call
out
add
out
iret
mov
jg
lock
sbb
add
dec
jae
jmp
inc
call
add
jmp
std
xchg
std
jmp
dec
ds
cld
int3
add
fadd
out
fldcw
pusha
add
push
int
push
xchg
je
aaa
lahf
mov
push
icebp
add
test
inc
jmp
mov
lods
call
adc
pop
xchg
inc
add
fldl
mov
xchg
jmp
pop
cmp
dec
add
xchg
in
adc
xchg
sbb
shll
sbb
lcall
add
push
cmp
xor
jmp
je
xchg
xchg
hlt
mov
leave
pop
pop
popa
jbe
ret
adc
stos
pop
and
cwtl
addl
mov
push
push
daa
add
cmp
je
push
inc
and
jns
ss
push
jg
cmovo
push
fs
stc
hlt
adc
rcrb
ljmp
es
inc
add
iret
add
add
test
loop
mov
enter
inc
push
dec
decl
test
push
mov
test
mov
add
push
fidivrs
mov
sbbl
bswap
or
add
ds
xor
je
push
mov
add
ds
pop
jle
lret
mov
add
add
rolb
push
or
and
icebp
out
shr
call
xchg
int3
adc
push
xchg
xor
je
scas
dec
inc
xchg
scas
adc
cmpsb
icebp
pusha
add
add
adc
xlat
iret
xchg
fidivrs
lock
sub
cmp
fnstcw
hlt
leave
sub
call
ficoml
loopne
push
repnz
add
xchg
add
sbb
sets
lock
adc
out
and
lock
int3
addr16
icebp
jb
xor
jmp
mov
add
sti
xchg
std
jmp
push
int
bound
add
iret
das
or
into
sub
icebp
xchg
cmp
lds
xchg
daa
data16
or
jmp
add
data16
add
sbb
jmp
jb
and
inc
add
mov
inc
icebp
add
pushf
fcomps
int
rcr
jle
push
lds
mov
outsb
add
in
add
pop
mov
pop
push
add
push
push
sub
pop
jne
xchg
imul
inc
inc
mov
add
jp
and
pushl
add
jge
mov
sbb
sbb
xor
std
je
loop
ret
jge
and
lock
insb
je
stc
xchg
in
in
add
pop
popf
cmp
loope
mov
mov
mov
test
or
je
push
stos
jbe
call
test
or
xor
js
add
aaa
xchg
andb
jp
jmp
ds
and
fcom
hlt
lds
loop
inc
scas
popa
inc
std
sub
jbe
outsl
rcrb
mov
add
sbb
xchg
mov
jmp
xchg
xchg
jg
sahf
mov
lcall
inc
dec
sar
mov
or
jge
icebp
lar
icebp
out
add
in
mov
dec
xchg
lock
icebp
rolb
rsm
lea
mov
add
lds
push
nop
push
pop
add
out
push
hlt
in
ds
xchg
add
pop
add
mov
imul
jge
push
push
lret
in
mov
icebp
sbb
loop
add
add
addr16
mov
int3
jb
adc
add
cmp
add
dec
mov
test
stos
js
adc
lds
sti
je
jne
jns
insl
push
add
mov
push
push
mov
jae
mov
add
push
adc
clc
or
testl
jb
adc
add
dec
jb
call
mov
push
sbb
rcll
push
push
hlt
jne
sbb
popa
inc
jmp
rorb
stos
fidivs
cmp
mov
add
pop
jle
jecxz
shl
pop
pop
jge
mov
jbe
xor
xchg
mov
or
jg
shrb
jge
pop
add
or
sub
shrb
xor
pop
pop
clc
clc
add
stos
cmp
cmp
xor
jmp
jnp
cmp
test
sub
int
jbe
rcrb
push
push
ja
add
push
xchg
mov
icebp
testl
sbb
es
adc
mov
imul
add
rcrl
jae
fidivrs
repz
cmp
out
mov
sub
clc
push
enter
pop
insb
or
pushf
cmp
cmp
jno
adc
xchg
repz
clc
cwtl
xor
popf
filds
enter
daa
icebp
mov
push
and
fcompl
jb
lods
cmp
mov
push
fiaddl
cmpsb
loope
push
stc
mov
cli
addb
out
pop
lea
dec
je
out
push
enter
js
jl
push
in
mov
cmp
lea
add
xor
out
push
js
adc
xor
mov
stc
pop
mov
fdivs
add
add
outsl
mov
push
xchg
mov
dec
icebp
std
aam
ja
bound
icebp
push
xlat
xor
insb
mov
push
add
popa
lahf
mov
jb
cli
out
mov
push
lods
fwait
xchg
adc
mov
pop
fists
andl
dec
xchg
add
sub
out
shr
add
and
movsb
mov
xor
xchg
dec
aas
ret
cmp
repnz
add
divl
idivb
sbb
sub
add
xor
jne
push
jmp
lock
es
or
push
iret
mov
sahf
addr16
mov
push
or
insl
jmp
add
notb
imul
jne
or
mov
enter
out
push
mov
movsb
xor
test
cmovo
jns
xor
cmp
retw
movsb
push
ja
sbb
push
cwtl
add
data16
adc
pop
sbb
dec
lea
inc
push
movsb
inc
pop
add
int3
test
sbb
dec
rorl
mov
add
add
jl
movl
add
push
adc
xor
jl
inc
mov
inc
push
sbb
inc
ljmp
testb
insb
add
add
repnz
push
icebp
out
adc
fistl
xchg
icebp
fs
adc
shll
and
mul
mov
cmp
call
jl
add
push
stc
ret
int3
insl
daa
notb
call
push
pop
in
add
mov
dec
xchg
in
out
leave
xchg
mov
jnp
sbb
jmp
addr16
ret
je
daa
or
pop
out
push
and
das
loope
add
cs
mov
mov
icebp
ret
fdiv
loope
jmp
xor
popf
push
mov
or
add
nop
jg
dec
icebp
mov
test
sub
sbb
cld
pop
cmc
call
aad
popl
push
orl
das
jae
lret
sarl
aaa
fistps
frstor
stc
nop
xchg
sub
icebp
and
push
add
cmp
or
lods
subb
xchg
aaa
enter
add
arpl
adc
push
pop
mov
cmpsl
enter
jmp
add
je
sub
test
cmpl
test
push
push
or
test
add
jp
ret
adcl
leave
ret
iret
ja
andl
xor
mulb
mov
pop
push
jns
test
add
mov
inc
add
lds
scas
pop
inc
add
mov
outsb
dec
cld
push
loope
pop
mov
std
int
mov
out
jmp
std
push
test
rcll
jge
adc
mov
jne
test
push
adc
in
psubq
fsubl
adc
xor
mov
inc
mov
push
mov
add
mov
fcmove
xchg
mov
shlb
popf
adc
or
add
pop
jmp
out
aas
push
push
add
pop
lock
or
jmp
daa
add
cltd
arpl
push
icebp
push
inc
enter
test
fsubrs
aam
cmpsl
loope
out
dec
cltd
xlat
js
test
imul
add
stos
sbb
add
add
fsubp
into
fsts
sbb
cmp
aam
adc
ror
or
scas
out
push
and
ret
xchg
or
out
dec
icebp
mov
sahf
sbb
out
cmp
push
out
cmpb
xchg
lods
in
fstp
fcompl
jmp
int3
ja
jmp
dec
jbe
rcrl
jnp
movsb
lahf
subl
add
out
xchg
sbb
pusha
mov
pop
fisubrs
cmp
mov
jo
in
cld
cwtl
pusha
fisubl
ss
mov
je
jno
jbe
inc
test
mulb
dec
mov
jmp
push
icebp
add
sbbb
mov
sbb
pushf
pop
test
fldenv
add
out
jb
insl
sbb
cmpsl
repz
add
sar
imull
call
shll
jge
xchg
add
ja
call
cld
je
fucom
mov
pop
mov
xor
add
add
leave
adc
sub
add
out
push
inc
ja
test
xor
add
or
mov
js
out
push
push
sti
je
pop
orl
add
add
nop
adc
fs
adc
cwtl
mov
pushl
xchg
pop
aas
or
mov
rcrb
push
adc
std
cmp
aam
mov
fwait
sar
adc
std
sbb
aam
stos
sub
push
and
add
xchg
xor
add
inc
or
xchg
add
and
add
jge
inc
mov
rcrb
imul
fildll
ja
xorl
add
daa
add
push
je
mov
and
jbe
xorl
ret
xor
insb
mov
cmpl
xor
cwtl
cmp
add
push
je
adc
jns
add
dec
out
push
and
dec
outsb
insb
scas
filds
pop
add
aam
fstps
out
cltd
lock
inc
add
jg
roll
call
cli
jle
add
sbb
jmp
sbbw
jne
in
jg
push
cmp
inc
jmp
add
shl
sti
adc
add
sub
imul
es
cmpsb
push
pop
sub
in
mov
pusha
or
push
shlb
pusha
jg
pop
lret
inc
xor
movsb
hlt
xor
jmp
dec
icebp
add
mov
add
fadds
repz
lret
subl
movsl
scas
enter
push
mov
push
push
mov
mov
fidivrl
add
inc
jae
sub
mov
add
orl
fidivl
repz
jb
cld
dec
lahf
std
pop
jge
shrl
jne
aad
or
shl
add
ljmp
jl
inc
clc
push
inc
into
enter
push
add
fsubs
jmp
pop
xlat
mov
adc
addr16
sti
mov
aas
push
fistpll
push
hlt
lldt
jb
sti
jecxz
aas
push
jg
mov
pop
addr16
pop
ret
fistpll
inc
lahf
pop
xor
out
dec
incl
push
je
xlat
icebp
add
push
addl
test
repz
adc
neg
jl
mov
add
jo
inc
incl
lock
ja
mov
xchg
lock
jp
dec
add
mov
add
lahf
lahf
pushf
jge
dec
pop
lahf
fiadds
and
ja
add
pop
andl
push
mov
fld
idivb
push
add
jo
pop
stc
ret
inc
jbe
testl
push
jo
mov
push
mov
add
fld
ss
shl
std
push
add
add
cld
mov
cmp
push
mov
jo
push
icebp
add
push
mov
inc
in
notl
push
cmp
cmp
jo
popf
inc
aaa
mov
add
sbb
lods
mov
jmp
bound
mov
in
add
add
push
push
ja
sbb
cmp
int3
jb
inc
imul
mov
inc
push
insb
or
xor
jnp
xchg
fidivrl
mov
add
imull
cmp
push
or
adc
xor
push
testb
xor
std
lods
pop
leave
js
std
push
and
push
mov
test
add
imul
xor
push
push
inc
fisttps
jmp
jnp
pushl
adc
jo
or
stos
add
pop
add
xor
pop
jg
or
inc
imul
push
push
mov
dec
or
mov
test
iret
ret
dec
jp
clc
xchg
jl
mov
push
mov
jge
mov
and
aaa
mov
mov
pop
ja
xor
sub
mov
and
sar
push
test
pop
and
inc
push
inc
jl
jnp
xchg
lcall
jne
ss
ljmp
inc
inc
dec
xchg
add
push
or
pop
mov
incl
adc
pop
or
cld
je
lock
add
push
cmp
cmc
add
insb
addr16
mov
in
scas
pop
xchg
icebp
jo
push
mov
negl
movsl
pop
pop
icebp
out
test
xchg
add
mov
pop
icebp
mov
flds
out
push
cmc
bound
lret
jecxz
add
mov
add
jp
sub
je
clc
dec
and
push
rcl
out
imulb
daa
clc
pop
and
push
sti
fisubs
add
add
pavgb
adc
arpl
test
add
sbb
lret
add
pop
insb
out
push
js
gs
in
mov
inc
dec
std
push
push
push
cmp
nop
js
call
mov
std
push
mov
rcrl
gs
lahf
mov
push
jle,pn
std
cld
and
inc
jmp
add
adc
test
icebp
add
orl
or
push
icebp
add
bound
lcall
fldl
sub
ljmp
push
cmp
jp
lret
add
repz
outsl
push
cld
call
pushf
movb
mov
mov
test
push
add
add
add
add
mov
cs
push
or
mov
add
adc
add
inc
push
clc
test
push
or
push
ljmp
mov
add
fwait
imul
lea
mov
ds
inc
push
adc
pop
mov
std
and
push
push
in
cld
cld
or
sti
add
push
jne
push
imul
push
rclb
add
shrd
jmp
popf
sar
rolb
loopne
std
je
xor
or
into
enter
push
enter
add
out
movsb
add
stc
imul
test
jae
clc
rorl
rolb
lock
add
add
rcrb
sbb
xchg
stc
shrb
add
sbb
push
std
stc
fucom
jbe
adc
fisttpl
add
xor
or
lods
sti
sbb
push
daa
icebp
insb
inc
and
jae
mov
lock
movsb
imul
and
jle
stos
fldenv
in
mov
arpl
ror
divb
sub
push
inc
xor
in
andl
into
dec
add
shl
fisubl
lea
push
icebp
adcl
mov
shlb
sbb
stos
les
sbb
in
aad
sbb
inc
lahf
or
jmp
jg
add
push
icebp
add
xchg
jae
faddl
add
jmp
jmp
test
add
push
sbb
add
xor
cmp
je
iret
pop
cmp
test
push
or
sbb
inc
sub
add
sub
jae
jg
in
push
jno
add
lcall
adc
ja
jb
jno
in
cmp
add
add
add
stos
subb
aas
cmp
push
ljmp
in
scas
std
test
adc
mov
cmp
andl
add
incb
push
fucomi
repz
push
push
data16
xchg
sar
inc
enter
data16
mov
ja
and
leave
enter
push
enter
xlat
into
jle
js
out
mov
jnp
add
jge
addr16
lock
call
outsl
data16
psllw
mov
sbb
je
and
movsb
sbb
daa
jg
je
inc
pop
mov
lock
imul
je
imul
pop
add
out
cld
sti
pop
arpl
add
pop
cmp
add
lods
lret
add
add
or
pop
icebp
into
movzwl
daa
add
sub
jg
sti
jmp
fdivrl
daa
add
mov
stc
ret
fsubl
jg
cld
sub
push
loope
add
jmp
and
fcmovne
adc
icebp
jb
iret
jno
sbb
sbb
flds
shll
push
jb
jne
daa
add
pop
cs
das
push
ljmp
out
jo
lahf
scas
in
testb
test
sbb
shll
dec
push
insb
add
lcall
insb
lds
push
scas
in
std
mov
cmp
adc
mov
push
ljmp
ret
and
jns
jo
jb
jne
aad
jle
push
add
add
or
in
add
pop
or
sarb
add
push
push
fisubs
hlt
sub
or
aas
mov
cld
sub
mov
pop
addb
std
jg
jne
rcl
test
shll
movsl
imul
mov
roll
add
add
inc
es
inc
int
mov
movsl
push
decl
rcl
adcl
jne
rorl
pop
pop
add
xchg
xchg
push
fadds
pop
incl
mov
fimuls
adc
dec
sar
out
mov
sarl
xchg
push
mov
sahf
pop
mov
push
adc
or
add
and
scas
clc
lahf
popa
sbb
push
fcomps
lret
or
out
mov
add
sbb
sbb
out
or
mov
cmpsl
add
mov
pop
imul
fsubs
lods
repz
xor
mov
pop
imul
sbb
add
movsl
iret
mov
mov
pop
ret
pop
movsl
hlt
ret
sbb
inc
or
and
pushf
jl
pop
xchg
fcmovnbe
pusha
xchg
pusha
mov
das
test
add
pusha
adc
enter
sarb
sub
js
insl
xor
pop
js
popa
xor
aam
insl
je
xchg
lret
pop
xor
add
pop
dec
cwtl
sbb
pusha
popf
dec
and
adc
arpl
dec
ret
fs
add
push
fs
push
out
add
insb
fs
in
sbb
jo
inc
sbb
mov
sub
cld
push
js
insb
daa
loopne
adc
inc
xchg
mov
insb
jae
ret
adc
jae
add
xor
or
mov
enter
mov
or
fcoms
jp
xor
lods
lods
enter
push
mov
jne
adc
stos
push
xor
clc
je
xchg
pop
lds
cmp
std
jne
jnp
cld
bound
inc
hlt
loope
push
test
cmc
add
mov
fs
orb
xor
xor
lock
sti
sbbl
add
out
add
pop
jne
sbbb
sti
mov
jg
lea
out
mov
fldt
pop
cmp
add
jmp
add
jnp
sub
test
dec
push
pop
add
rcll
mull
mov
push
pop
cmpb
xor
add
imul
imul
or
pop
out
ja
add
mov
cli
cmp
push
icebp
cmpsb
fsub
jbe
pusha
in
fadds
push
pop
sbb
icebp
jb
mov
xor
btc
push
js
or
xor
or
push
push
jl
pop
and
push
bound
out
add
jb
add
pusha
js
daa
enter
xchg
sbb
dec
js
das
sub
sub
push
sbb
insl
enter
fidivrs
js
and
ret
addr16
sbb
xor
push
cmpsb
push
sub
adc
std
push
and
push
mov
push
icebp
push
negl
jmp
dec
push
jno
sub
insb
add
aad
mov
imul
or
mov
adc
sub
insb
pop
ficoms
push
push
icebp
je
negl
cld
inc
add
jmp
and
mov
push
xchg
cmp
fildll
push
flds
jmp
test
add
fisttpll
add
hlt
add
fsts
inc
mov
add
or
add
add
arpl
jne
fsubrl
stos
hlt
push
call
cmp
ret
push
mov
mov
jnp
fnstsw
clc
xor
hlt
xor
arpl
inc
sub
jno
mov
stc
jbe
lds
shrl
xor
jae
mov
sub
push
inc
js
cmp
je
push
aas
out
add
add
add
loopne
dec
add
lahf
mov
cmp
cld
pop
ljmp
mov
jecxz
das
sub
jmp
add
iret
pop
pushf
fs
ret
pop
mov
pop
adc
pop
xchg
add
mov
inc
and
aas
push
insb
inc
pop
clc
and
push
popf
mov
shr
hlt
push
pushf
push
sar
add
out
add
add
adc
out
sbb
cld
dec
inc
mov
push
sub
pop
dec
call
jge
sub
shlb
jecxz
xchg
pop
pusha
mov
imul
aaa
pop
inc
pop
xchg
lock
jmp
add
sub
es
push
adc
in
pop
push
fdiv
push
mov
mov
add
add
dec
jp
xorb
inc
icebp
out
aas
cmpsw
ljmp
inc
stc
pusha
fistl
ljmp
in
push
push
icebp
add
adc
in
fcompl
sub
jae
icebp
push
jb
scas
sub
data16
lcall
sub
pop
mov
pop
addl
aas
icebp
add
add
lds
add
mov
js
lds
add
sbb
cwtl
incl
pop
repz
call
pop
icebp
or
jmp
push
and
sub
or
add
leave
adc
or
std
mov
pop
test
cmpsb
push
mov
in
je
mov
std
pushl
mov
js
and
jecxz
jne
add
mov
clc
lock
or
mov
push
inc
enter
jecxz
je
popf
in
mov
xor
push
popf
in
jp
add
add
push
mov
std
xor
ljmp
xor
sar
sahf
push
add
push
subl
pop
add
lea
incb
add
fxch
adc
pop
lods
fistps
adc
mov
push
imul
push
pop
scas
mov
cli
xchg
daa
push
adc
addr16
sti
and
test
sahf
push
pop
push
jne
subb
sti
mov
decl
or
cmp
pop
out
sbb
call
mov
lock
cmc
lock
jbe
test
xchg
call
scas
leave
in
mov
addr16
icebp
out
clc
js
pop
push
lods
out
nop
je
fs
jbe
imul
shlb
idivb
icebp
out
fldcw
add
popa
push
push
fsub
jmp
mov
add
test
xlat
lods
dec
jmp
sub
cmpsl
add
add
sub
mov
push
andb
fsqrt
add
outsl
roll
xchg
xchg
push
cs
push
test
mov
jns
inc
push
ja
cld
loop
jae
push
xor
loope
fmul
xchg
lods
cmpsb
shll
push
add
lahf
fs
icebp
add
dec
mov
dec
icebp
test
xchg
inc
push
jb
dec
cmp
add
arpl
popf
jecxz
inc
jmp
push
arpl
xlat
in
ljmp
xor
mov
ljmp
lret
call
adc
cmpl
jae
jne
cmc
out
mov
add
mov
push
jmp
rorb
jge
pushf
in
hlt
add
add
pushf
sti
call
enter
das
or
hlt
outsl
insl
dec
call
cs
movsl
insl
inc
mov
jno
sub
adc
lods
add
add
call
mov
push
shlb
add
or
push
into
int
push
lss
xor
cmp
imul
add
dec
add
and
push
je
aad
lret
stos
lcall
filds
add
std
hlt
jle,pn
sti
les
in
xlat
pop
imul
inc
iret
xchg
push
mov
mov
mov
inc
sub
jnp
mov
cld
jge
rcr
enter
out
sbb
mov
jle
jmp
js
in
push
mov
call
pop
in
and
stos
sub
flds
push
jne
sub
repnz
fdiv
fcoms
test
out
lahf
pop
out
cmpsl
popa
iret
sbb
out
mov
lods
push
addr16
jb
loopne
aas
sbb
cli
cs
mov
push
nop
out
jne
les
cmp
xchg
push
mov
mov
lods
pop
jb
add
mov
call
jb
pop
push
bound
push
or
icebp
mov
pop
je
in
testb
dec
mov
mov
mov
ss
push
call
rclb
jmp
fs
js
imul
sbb
pop
std
sbb
and
push
bound
pop
xchg
dec
sub
add
pop
push
inc
cmp
jmp
imul
cmp
and
add
push
and
stos
test
clc
stos
icebp
add
std
imul
mov
and
cltd
add
je
adc
cltd
add
add
cmpsl
test
jge
cmp
add
movsl
dec
std
lcall
mov
jge
lock
leave
js
add
mov
sub
push
lea
sub
rorl
jno
dec
mov
cli
lock
sub
push
aaa
push
in
push
adc
ret
je
fimuls
mov
inc
sbbb
dec
add
add
call
enter
pop
mov
jle
push
int3
add
out
mov
inc
jae
movl
or
mov
add
mov
aas
push
movl
mov
inc
pop
push
add
push
dec
add
jne
inc
jae
ffreep
and
sti
gs
out
add
fadds
pop
adc
dec
add
mov
jle
icebp
je
push
jo
or
hlt
jp
jbe
fdivrs
add
orl
add
shl
pshufw
sub
int3
cmp
dec
jbe
pop
pop
stc
inc
idivb
xchg
pop
shll
add
icebp
adc
add
movsb
xor
mov
push
ret
dec
imul
outsl
cmp
pop
int3
mov
jp
jmp
add
stos
xor
add
push
jne
out
int3
xor
jmp
rcr
fsubrs
push
icebp
mov
or
orb
xor
outsl
sbb
fnstsw
not
jge
or
sti
push
das
cmp
and
jb
fmuls
bound
sub
and
jb
repnz
inc
aas
pop
cmpsb
pop
rcr
add
add
icebp
jb
push
icebp
subb
xor
pop
or
pop
movb
ss
loope
mov
jne
jne
mov
imul
sub
xor
push
testb
cmp
addr16
adc
scas
push
add
mov
outsb
popl
ljmp
std
jg
repnz
xor
add
fcmovnb
pop
cmc
sbb
add
mov
dec
push
in
xlat
inc
call
ljmp
fistl
add
insl
add
out
fs
jmp
dec
adc
cmp
ljmp
out
push
loope
sti
in
sahf
push
add
into
pop
push
not
pop
xchg
cmp
pop
je
ret
push
cmc
add
push
dec
cmp
add
fmuls
pop
add
push
lock
out
cmovge
xor
dec
adcl
in
mov
js
sub
pop
incl
ss
inc
sti
lock
add
mov
adc
out
push
dec
mov
flds
push
data16
and
call
cld
fldt
daa
hlt
add
pop
icebp
insb
inc
pop
cli
paddb
out
xlat
lods
fbstp
call
insb
push
out
jl
ljmp
fdivl
aam
add
out
push
dec
repz
stos
xlat
cmp
push
dec
xchg
xor
gs
dec
jbe
add
mov
in
call
es
xchg
adc
add
mov
jbe
aam
or
mov
pop
add
xor
add
dec
icebp
add
loope
adc
adc
add
push
push
xorl
xor
ljmp
ret
mov
add
cwtl
shrl
push
pushf
cmp
and
push
adc
nop
fstl
add
mov
dec
lea
pop
mov
mov
add
icebp
pop
jmp
insb
movsl
add
ljmp
in
mov
sbb
or
fiadds
test
adc
sbb
call
es
cmp
xor
push
mov
jmp
or
pop
scas
stos
or
push
add
jmp
pushf
stc
push
stc
call
popf
jne
push
mov
push
dec
orl
dec
icebp
aas
push
lds
inc
into
pop
hlt
mov
pop
mov
pop
dec
dec
je
and
inc
inc
or
mov
fwait
into
sti
mov
dec
jnp
or
jl
rcl
cmc
addb
dec
push
and
or
add
add
mov
cwtl
xchg
dec
je
loope
sti
add
inc
aad
or
dec
fmuls
mov
lock
ljmp
xchg
or
jle,pn
push
push
dec
pop
xor
fisubs
jl
mov
sbb
xlat
xor
lods
idivl
pop
pusha
cld
leave
lods
ret
jge
pop
sar
pop
xchg
jnp
add
add
sub
lods
cmpsb
stc
sub
inc
sbb
pop
mov
fmul
jmp
sbb
cmp
test
insb
sbb
pop
aaa
icebp
sub
dec
icebp
cmp
test
fldcw
mov
pushf
mov
insl
shl
es
push
insb
mul
pushf
cs
push
jo
lods
ret
jne
gs
inc
enter
cmp
add
arpl
jae
cli
push
out
push
icebp
add
jecxz
inc
push
std
jmp
adc
add
ljmp
xchg
addr16
in
fadds
out
aad
adc
addl
push
je
gs
inc
cmc
stc
mov
in
mov
outsb
or
xchg
lcall
add
xor
in
or
dec
cs
jmp
pop
mov
es
xchg
adc
jmp
adc
cmp
pop
mov
movsb
int
stos
pop
mov
mov
in
xchg
push
push
mov
pop
shr
jo
add
push
xor
repz
addr16
loope
push
xor
ret
nop
inc
mov
add
mov
add
mov
add
add
pop
aas
push
or
push
adc
push
push
pop
aas
push
push
pop
aas
push
sub
pop
pop
aas
push
dec
pop
aas
push
cmp
pop
aas
push
nop
pop
aas
push
dec
pop
aas
push
insl
js
rorb
push
test
adc
jnp
into
aas
push
shll
adc
pop
jp
lahf
repz
push
xlat
lar
push
mov
jne
pop
mov
ds
out
aas
push
lahf
mov
add
add
add
ficoml
jp
mov
adc
add
mov
jbe
sub
hlt
xlat
pop
jmp
mov
xchg
mov
das
pop
mov
js
jp
arpl
out
adc
out
movsb
push
fcoml
xchg
dec
mov
inc
jne
add
dec
les
sbb
out
add
and
pop
pusha
mov
mov
inc
repnz
inc
adc
cld
mov
repz
pushf
je
mov
sbb
fsubrl
mov
mov
hlt
bound
adc
adc
push
jns
inc
pop
nop
and
inc
or
movsb
je
std
fsubrl
jmp
ret
sbb
adc
dec
dec
jo
add
sub
sub
cmp
std
pop
cmp
flds
dec
adc
adc
aaa
add
mov
mov
dec
jae
inc
mov
or
add
mov
jmp
mov
or
xor
incl
mov
mov
mov
mov
fmull
add
in
jge
fcoml
cli
icebp
std
jne
mov
int3
sbb
std
push
cmp
icebp
aaa
pop
data16
add
test
incl
mov
inc
cli
dec
ret
mov
fdivr
movsb
jne
mov
mov
ja
pop
pop
popa
mov
mov
cmp
push
push
inc
repnz
call
leave
movlps
mov
and
scas
add
add
adc
test
xchg
cmp
mov
lcall
push
aad
jae
aad
repz
out
sub
sti
lret
data16
inc
push
fldl
dec
mov
hlt
int
dec
fdivr
ds
inc
push
aad
je
and
adc
pop
test
cld
repnz
push
dec
add
add
pop
pop
add
and
mov
dec
addb
cmpsb
jb
and
daa
add
jle
inc
adc
out
pop
inc
push
pop
xlat
xor
std
inc
out
adc
mov
dec
fs
mov
lock
sbb
push
mov
jle
aas
xchg
dec
jl
movsl
xlat
call
pop
xlat
xor
add
fdivs
rorb
pop
ret
dec
sbb
mov
mov
lock
add
dec
push
in
mov
sarl
std
xchg
inc
xlat
add
aas
leave
jg
push
js
insb
cmp
adc
aam
je
fprem1
mov
sbb
or
dec
je
fisttpl
out
push
inc
mov
ljmp
cli
nop
lods
ret
add
mov
fiaddl
add
je
stos
dec
push
cmp
dec
in
aad
add
dec
jmp
ret
nop
dec
add
in
or
cmp
incb
aas
std
mov
inc
hlt
mov
in
mov
sub
ret
out
add
mov
cmc
push
cmp
and
add
add
loopne
add
cmc
mov
and
mov
fimuls
mov
push
adc
sub
testb
jae
and
lock
out
add
cli
jbe
or
cmc
add
testl
pop
push
xor
adc
pop
mov
mov
or
lock
add
and
add
push
jmp
mov
inc
jae
popf
sbb
push
fdivrs
xor
test
call
fadds
clc
std
sahf
dec
out
mov
sahf
push
cmp
xchg
dec
sar
add
or
inc
roll
and
fcomps
adc
push
icebp
je
fsubs
cmp
add
add
mov
sub
enter
sbb
sbb
pushf
or
mov
mov
ljmp
dec
hlt
aas
insl
fisubrs
adc
leave
scas
arpl
dec
mov
pushf
or
mov
jae
pop
xor
xor
add
icebp
mov
psrld
push
icebp
mov
add
leave
inc
mov
add
add
mov
sti
fimuls
inc
std
fs
les
add
aaa
aas
inc
mov
std
cmc
sbb
mov
fs
add
roll
jg
mov
mov
inc
jmp
nop
inc
testb
orl
movsl
sub
add
xor
pop
pop
repz
or
out
std
popf
hlt
out
mov
dec
mov
out
xchg
xor
add
add
lods
add
mov
cmp
push
xor
push
loop
dec
ret
add
cmc
inc
mov
jbe
stos
xchg
add
inc
nop
add
ret
pop
test
std
mov
push
add
add
mov
add
sub
je
stc
call
mov
push
adc
mov
jno
add
repnz
and
jg
repnz
mov
mov
adc
mov
repz
cli
xchg
call
jmp
add
or
adc
out
lcall
shlb
loopne
add
xchg
ljmp
aas
rol
imul
and
shlb
rol
add
shlb
loopne
or
jns
inc
pop
add
pmuludq
lret
lcall
imul
enter
xchg
pop
sar
pop
push
add
mov
push
pop
fisttpll
popf
ret
sbb
xor
in
lret
pop
add
into
lods
ret
adc
mov
sbb
lods
add
mov
mov
icebp
out
xchg
inc
xchg
mov
cmp
movsb
xor
inc
push
js
inc
push
icebp
inc
fs
xlat
add
outsb
mov
sub
adc
mov
sub
out
popf
xor
pop
push
mov
add
jbe
add
lods
add
cld
jnp
and
inc
std
scas
inc
or
in
dec
in
outsb
push
icebp
orl
popf
jbe
imul
and
in
mov
push
inc
xor
ja
jmp
rorl
mov
xchg
mov
jmp
push
mov
push
jb
pop
pop
loope
push
sub
add
sbb
out
std
sbb
dec
icebp
inc
add
add
mov
add
out
pop
pop
cmp
add
mov
inc
mov
loopew
mov
inc
shlb
jns
add
adc
jmp
rcrb
std
dec
mov
push
add
mov
add
out
push
mov
add
push
add
in
repz
mov
pushl
xor
sub
in
add
push
push
mov
jno
je
fsubp
add
fidivrl
cmpsl
inc
mov
int
jae
mov
lea
mov
loope
and
mov
cld
orb
jae
add
iret
pop
mov
test
sbb
mov
pop
sub
add
sub
lods
pushl
sub
adc
add
mov
cltd
rcrl
dec
add
imul
xlat
mov
push
repnz
mov
add
jmp
mov
pop
lret
hlt
fldt
xlat
pusha
mov
xchg
dec
xchg
rorl
mov
aam
out
sub
xor
add
add
adc
ds
inc
je
fadd
fildll
shll
incl
add
dec
xchg
in
out
mov
jbe
push
xor
sub
outsl
out
nop
cmpsb
bound
and
lock
add
mov
jmp
xlat
xor
in
lea
add
lret
push
xorl
push
push
pop
outsl
add
imul
pop
add
std
cmp
roll
ds
xorb
cld
cmpsl
mov
xor
jmp
pop
fsubs
mov
insl
sbb
mov
jbe
jge
push
bound
in
add
dec
add
xchg
adc
cmp
dec
push
rorl
jmp
xor
push
xchg
mov
loope
add
add
inc
clc
loope
stc
push
call
gs
std
cmpb
bound
jmp
add
mov
andb
push
mov
aas
push
lea
sbb
fsubp
clc
add
add
outsl
sub
push
jae
icebp
call
inc
jmp
xchg
push
testl
jb
mov
je
add
dec
sub
jmp
ja
sub
sub
mov
cmp
lea
push
dec
add
push
jo
adc
sbb
dec
paddw
mov
inc
xor
lret
xchg
dec
pop
mov
jp
fwait
xorb
dec
cmp
imul
cmpsl
mov
cmp
std
mov
ret
sbbl
add
lret
mov
sbb
xlat
add
sbb
and
push
rolb
jl
stos
int3
pop
decb
sbb
inc
xor
jl
push
sbb
pop
out
leave
sbb
jl
cmp
pop
add
lds
jge
in
les
or
shll
adc
add
subb
icebp
pcmpeqd
lods
int3
sbb
out
add
shr
push
mov
jb
mov
add
push
shrl
push
in
imul
mul
add
jbe
pop
ds
inc
dec
mov
std
sahf
push
dec
popf
jno
icebp
mov
aas
jo
cmc
aad
je
iret
jl
out
mov
das
add
lock
add
mov
cs
jmp
aam
add
push
or
dec
mov
mov
imul
push
outsb
mov
cmp
cwtl
pop
insl
nop
add
cmp
std
aaa
call
insl
pop
rclb
cmp
aas
inc
fadds
mov
mov
dec
rolb
add
sbb
add
outsl
mov
nop
rorb
push
stc
mov
push
mov
addr16
lds
sbb
mov
mov
in
cmpsb
hlt
add
or
mov
in
imul
add
out
push
mov
add
push
icebp
scas
push
lea
and
movsl
les
mov
add
mov
call
mov
jae
add
sub
push
out
mov
push
mov
cs
fisttpl
add
push
sbb
pushf
dec
add
cmp
add
mov
mov
sbb
push
dec
add
push
dec
mov
pop
incl
xor
lret
cmp
add
pop
lock
inc
adcb
mov
daa
inc
imulb
movl
sub
iret
mov
cmp
jns
jae
mov
leave
clc
jb
je
sahf
add
addr16
sbb
callw
mov
test
sbb
repnz
sub
sbb
cmp
inc
push
icebp
out
xlat
loope
sub
xchg
scas
add
and
hlt
lahf
inc
mov
js
in
push
pop
test
mov
call
jno
hlt
in
xchg
and
je
dec
mov
add
daa
cmp
gs
mov
jno
lret
scas
and
mov
jmp
outsl
imul
mov
add
sti
das
xorl
imul
add
rorl
or
std
inc
mov
aaa
dec
insl
mov
add
lods
inc
mov
dec
es
adc
icebp
push
push
or
jmp
jnp
lock
cmp
fs
xor
or
lods
aas
mov
push
cmp
jmp
dec
scas
add
jo
add
addb
mov
mov
lea
add
inc
jecxz
add
fisttpll
jnp
or
call
push
mov
push
jmp
mov
jg
mov
xorb
cmp
sbb
inc
fdivrl
ss
xor
push
pop
and
fsubrs
add
dec
lret
fidivl
movsl
push
fildll
mov
int
je
out
scas
out
add
mov
icebp
in
mov
ret
jmp
aad
dec
jnp
stos
cmpl
mov
jnp
jl
test
inc
ljmp
pop
cli
insb
push
lret
xchg
inc
pop
push
std
jge
rcrb
push
dec
mov
mov
mov
push
dec
js
pop
xor
pop
enter
cmp
test
inc
jge
add
push
dec
add
push
icebp
xchg
fildll
cmpsl
add
in
inc
inc
fsts
lcall
mov
inc
push
insb
jge
push
icebp
pop
jg
ss
sub
mov
cmp
out
xlat
xor
jg
out
out
cmc
jno
call
out
addr16
xchg
int
push
inc
cmp
push
test
add
cmc
outsb
sub
loope
jg
xor
sub
inc
jg
sub
sbb
sub
out
test
ljmp
ljmp
mov
in
lds
push
fldenv
icebp
add
imul
sub
mov
add
add
pop
aad
call
loopne
call
mov
pop
jb
dec
hlt
jecxz
icebp
test
push
icebp
push
movsl
lods
hlt
mov
imul
notl
xor
add
insb
movsb
xor
or
add
add
jg
sti
incl
and
out
push
mov
mov
inc
or
pop
inc
out
add
add
ds
std
mov
cmp
xor
jns
call
pop
jb
mov
dec
lea
out
add
cld
jns
push
sub
xchg
and
add
mov
sub
sbbl
js
cmp
push
push
mov
shlb
inc
jae
filds
je
mov
mov
add
sub
sbb
gs
inc
pop
mov
add
push
pop
sbb
push
dec
jp
ret
dec
add
and
mov
jl
loopne
push
jns
pop
mov
add
push
aam
sub
inc
sbb
fcmovnbe
cld
inc
push
into
out
popa
add
mov
das
jecxz
add
xchg
xorb
push
add
fs
filds
push
in
xor
dec
in
xchg
in
pusha
mov
in
mov
lds
fisttps
not
rcr
add
movsb
or
fldcw
std
js
data16
adc
lods
or
daa
xor
leave
out
inc
add
scas
push
fs
pop
dec
arpl
pop
xor
add
add
movsl
lret
sti
sub
xchg
in
test
xchg
hlt
add
enter
testl
call
jg
call
dec
jle
in
add
adc
int
sarb
jbe
shr
add
xor
shll
add
hlt
and
dec
sub
sub
jnp
add
adc
add
mov
mov
jne
cmp
xchg
lcall
fcmovne
or
jne
adc
lods
sbb
mov
xchg
add
hlt
push
addr16
or
xchg
sbb
mov
or
hlt
add
stc
test
push
aam
pop
pushf
cmp
ret
push
mov
scas
jmp
add
add
and
push
in
lock
fstpt
ret
incl
movsl
jge
add
cmp
push
addb
add
push
mov
std
push
push
dec
mov
jno
jb
push
xchg
clc
pop
sbb
mov
fcomp
pop
pop
and
mov
leave
sub
cmc
add
xchg
gs
out
mov
add
sbb
inc
push
iret
repz
repz
xchg
adc
push
mov
je
add
fists
mov
mov
mov
mov
push
fsubrs
mov
call
gs
call
mov
push
or
dec
nop
aad
add
int3
ret
repz
lret
int3
lret
notl
mov
adc
in
enter
std
lock
int3
std
arpl
push
fwait
in
nop
aad
mov
mov
lods
in
out
push
sbb
arpl
sub
fiadds
sub
add
mov
add
sub
push
lods
lock
je
add
xor
aaa
lea
icebp
add
add
and
add
push
jl
in
adc
and
insl
xchg
sub
inc
push
sub
jb
and
shrb
sbb
sub
inc
stos
sub
jmp
push
cld
mov
add
sbb
sar
pop
mov
jge
in
pop
adc
push
xchg
adcl
fldcw
int
je
jns
je
into
out
add
xchg
cmp
iret
jne
popa
jle
and
add
add
std
jbe
push
test
ds
lea
adc
call
rorl
in
xor
push
sub
mov
adc
call
or
inc
and
jne
and
out
jae
sbb
jns
pop
add
add
add
decb
negl
mov
xor
adc
ret
pop
les
xlat
mov
add
or
push
sub
aam
sbb
xor
cmp
mov
push
pushl
call
sti
xlat
pop
xchg
add
add
add
sub
adc
xchg
sti
add
sub
sub
or
sbb
push
pop
push
test
insl
add
mov
test
andl
mov
sbb
inc
add
iret
fcomps
dec
pop
outsb
add
lods
sub
divl
test
lret
sub
bound
jmp
add
inc
add
cmp
bound
lret
adc
out
leave
sbb
mov
and
jge
bound
out
out
jl
jecxz
ffreep
push
sub
add
add
xor
add
push
arpl
mov
shl
out
mov
adc
pop
leave
mov
add
ss
jae
ficoms
fsubrl
icebp
xor
add
lret
stos
dec
icebp
mov
jns
in
fidivs
jmp
push
icebp
mov
std
add
call
gs
notl
mov
jmp
in
hlt
dec
dec
add
adc
and
add
aad
fs
xchg
sub
inc
sbb
fadd
adc
mov
ret
add
movl
xchg
lock
jb
mov
adc
mov
mov
inc
push
stc
or
lahf
mov
lea
and
jp
sbb
push
push
mov
xor
test
cmpsl
int3
std
cmp
jp
push
out
or
cmp
daa
in
xor
xchg
and
add
add
js
push
lret
cld
cli
repz
lcall
mov
mov
and
sbb
add
sbb
nop
inc
sbb
add
sbb
push
sti
or
aas
push
ljmp
fmulp
xor
in
incb
cmc
aas
push
add
pop
mov
mov
cmp
jo
mov
add
lahf
sbb
mov
lea
shlb
test
jne
movsb
in
leave
les
push
sbb
push
aam
mov
sbb
cli
ret
mov
or
fcmovb
movsb
cwtl
fistpll
lret
lods
lret
sbb
cli
ret
test
sub
das
fidivrs
es
sbb
mov
fmuls
cmp
leave
repnz
enter
daa
pop
jp
mov
roll
out
push
sbb
mov
sbb
add
sbb
in
call
mov
mov
cmp
cwtl
call
loop
test
or
pop
xor
out
add
je
add
clc
insb
sarb
pushf
jb
in
push
jp
aas
push
or
sub
stos
lods
jp
cmp
in
push
je
sub
jle
std
sbb
jp
movsl
fsubrp
mov
mov
std
cmp
outsb
sar
js
icebp
js
std
jbe
ja
aam
mov
shlb
icebp
xlat
cs
and
icebp
addl
orl
adc
add
lock
aas
lods
jno
or
adc
orb
add
pop
lea
fsub
nop
test
xor
add
mov
add
pop
mov
pusha
jne
or
imul
mov
mov
add
push
push
cmpsl
arpl
push
movsl
jae
std
inc
sub
incl
add
je
pop
xor
push
sbb
push
mov
fistl
add
ds
repnz
push
sbb
inc
stos
add
add
add
mov
xchg
push
std
das
pop
sbb
adc
loopne
xchg
sbb
pop
sbb
mov
cmp
fcmovnu
rol
mov
xor
neg
xor
add
icebp
adcl
lea
sti
sub
notrack
lret
je
push
jg
adc
icebp
out
enter
push
jbe
mov
inc
dec
pop
in
sbb
xchg
push
icebp
and
mov
push
and
mov
cld
cmpsl
pop
mov
adcb
jecxz
inc
cltd
ffree
xchg
outsl
and
shlb
inc
add
cmp
bound
push
outsb
xor
gs
cmp
sbb
xchg
push
and
pop
sbb
or
bound
rcll
add
sbb
sbb
xchg
add
fstps
jmp
shlb
mov
and
andl
out
xchg
add
aaa
add
cmp
xchg
pushf
lock
add
call
sbb
push
icebp
xor
iret
loopne
xchg
cmp
adc
dec
sar
lods
incb
leave
lods
fcoml
adc
test
push
icebp
add
movsb
cmp
fsubl
mov
jmp
enter
std
hlt
movsb
add
cmp
push
add
mov
call
ja
je
andl
inc
add
inc
push
add
ds
adc
sub
std
push
ss
jl
pop
testb
and
pushl
mov
add
test
adc
push
add
pop
push
popf
outsl
ja
adc
imul
jno
test
loopne
push
sub
test
add
add
mov
adc
and
in
cld
roll
out
scas
sub
enter
xchg
adc
dec
add
pop
pusha
dec
add
push
std
jae
jg
pop
dec
add
xlat
js
mov
test
aas
push
mov
mov
mov
add
add
push
cwtl
or
fsubl
inc
idivb
push
icebp
push
add
sub
gs
push
xor
add
movsb
sbb
es
fistpll
int
frstor
dec
fadds
outsl
xor
jo
daa
jb
fidivs
mov
mov
pop
dec
pusha
popl
jo
scas
or
stos
iret
dec
stos
repnz
outsl
push
pushf
ficoms
jb
shll
add
xchg
jns
or
lock
xchg
in
jbe
lods
xchg
andl
sbb
mov
push
dec
stos
sbb
cmp
or
nop
jmp
movsl
leave
add
lret
dec
bound
jecxz
mov
pop
outsb
loopne
push
mov
sub
mov
sub
aam
bswap
cs
in
mov
push
filds
add
sub
pop
loopne
mov
mov
xchg
jns
push
jecxz
adc
inc
shrl
sbb
xchg
dec
notl
jecxz
sbb
cmp
sbb
dec
lahf
sbb
xchg
shr
sub
lret
mov
sbb
pop
or
sub
sti
das
cmp
inc
lahf
sbb
add
ret
loop
test
rolb
fwait
aad
push
fld
pop
adc
fwait
jno
xor
mov
jecxz
pop
sub
lcall
add
mov
in
jmp
test
push
push
fistpl
sub
jmp
dec
dec
lcall
push
or
add
push
adc
and
call
dec
std
push
jge
pushf
add
stc
mov
dec
fists
add
cld
sbb
adc
inc
adc
push
xorb
jl
idiv
popa
dec
add
inc
icebp
jge
mov
add
lahf
icebp
lods
cli
pushf
repnz
xchg
adc
mov
inc
icebp
inc
add
add
cmc
lahf
mov
std
mov
mov
sbb
dec
ret
stos
or
push
icebp
push
pusha
je
cltd
adc
cmp
fisubs
xchg
in
inc
push
dec
inc
xchg
orl
xchg
cltd
push
mov
ds
shll
dec
xor
mov
pusha
repnz
insb
icebp
insb
inc
pop
ljmp
xchg
sbb
jnp
add
push
sbb
je
insl
inc
ffree
adc
jecxz
sbb
aas
sbb
xor
add
sbb
icebp
std
xor
addr16
inc
fiaddl
sahf
sbb
push
inc
jmp
jb
bnd
or
add
rol
mov
sti
mov
call
add
cmp
add
push
icebp
adc
pop
shll
je
mov
jbe
cmp
mov
icebp
subl
aaa
addl
addl
cmp
std
je
outsb
cmp
push
jne
cwtl
jnp
xchg
cmp
push
aad
mov
fisttpll
std
pop
gs
sub
std
out
call
jno
add
bound
push
mov
rolb
cmpb
push
xchg
sar
mov
std
out
call
inc
xor
lea
in
ljmp
in
cld
hlt
add
imul
or
dec
inc
stos
pop
mov
cld
jmp
mov
add
push
cmpb
mov
add
mov
xor
add
dec
das
pop
or
push
mov
idivb
push
mov
stc
orb
jp
dec
mov
or
add
pop
fsubp
hlt
mov
mov
or
cmp
sarb
dec
enter
jle
xchg
pop
xchg
cmp
dec
fmul
sbb
or
mov
xchg
add
jb
xor
cmpsl
add
jae
add
xor
add
push
icebp
xchg
jle
sub
add
out
xor
sub
fwait
push
repnz
outsb
mov
jns
cmp
add
mov
dec
push
lock
shrb
mov
jns
xor
cmpsb
sbb
mov
out
adcb
push
inc
pop
or
mov
sub
add
insl
daa
xchg
popa
pop
dec
add
add
push
icebp
add
sub
jmp
dec
sar
push
pop
gs
sub
arpl
ljmp
add
mov
icebp
add
adc
push
cld
add
rcll
ds
inc
int3
xchg
jmp
lret
mov
test
adc
push
in
add
mov
mov
cmpsb
mov
out
add
add
rclb
add
add
ljmp
shl
decb
sub
add
xchg
je
aaa
jo
add
and
add
mov
jl
add
mov
test
incl
jo
pop
push
xchg
lret
pop
mov
cli
add
push
test
adc
inc
cmp
inc
dec
jg
call
add
add
ljmp
inc
sbb
je
pop
xor
jns
sub
dec
call
adc
push
dec
add
push
push
clc
mov
mov
iret
xor
and
into
push
adc
test
jne
in
fs
dec
jnp
add
out
testl
adc
jae
mov
roll
push
aas
inc
pop
in
mov
jae
xchg
add
sti
stos
ret
jp
stos
inc
jl
pop
popl
jmp
cmp
enter
mul
add
shr
mov
pop
dec
dec
push
cmp
enter
icebp
out
pusha
int
jl
stc
bound
adcl
inc
push
jle
jbe
adc
pushl
mov
add
fyl2x
mov
cmp
xor
outsb
xchg
gs
xchg
in
out
or
bound
je
xlat
aam
insb
cmpsl
idivl
das
nop
xor
bound
inc
ret
or
neg
xor
xor
add
test
jp
adc
in
popa
sub
pop
jl
jns
adc
incb
sub
imul
ljmp
add
addr16
pusha
int3
lret
mov
sub
adc
stos
cmp
push
mov
cs
icebp
in
adc
scas
nop
in
test
sub
jo
aas
jmp
jbe
add
mov
fbld
out
scas
push
xchg
js
push
popf
push
pop
movsl
jne
push
data16
pop
xchg
out
add
call
ljmp
add
and
call
add
scas
lods
add
call
andb
lcall
mov
aas
adc
mov
add
mov
test
lods
cmp
sbb
sub
adc
pop
inc
mov
add
addr16
adc
pop
xchg
xor
dec
stc
mov
sub
ret
sub
dec
add
sub
nop
mov
pop
push
cmp
jae
mov
push
sbb
mov
lock
sub
dec
pop
nop
add
mov
out
fwait
mov
faddl
inc
aas
nop
xchg
popf
out
inc
add
inc
int3
sbb
ret
cmp
cltd
not
pop
add
sahf
cwtl
add
enter
adcl
sarb
dec
imul
ljmp
bswap
js
add
or
fdiv
test
pop
jge
push
sbb
mov
cld
cld
mov
call
loopne
jl
cli
inc
fcompl
clc
leave
lods
xlat
add
jp
and
lret
out
cmpb
or
xchg
lea
or
je
pop
add
mov
sub
mov
xchg
insb
xor
push
add
ljmp
jbe
push
int3
pop
mov
insb
idivl
lret
jb
push
pshufw
testl
push
stos
jmp
divl
add
sti
xor
das
jno
popf
push
ret
test
jmp
pop
cltd
sub
add
add
rcr
jb
mov
daa
jns
inc
xor
icebp
add
push
in
fistl
icebp
xchg
mov
add
aad
xchg
mov
loopne
test
std
out
xor
mov
jae
push
test
add
cmc
repz
add
xor
fdivs
adc
cmp
cmc
add
inc
sbb
push
cmc
addb
cmpsb
sti
jne
bnd
gs
test
ja
cld
jne
inc
loopne
loope
sar
xchg
ja
cld
jne
shr
jns
add
add
popf
call
jns
repz
push
inc
cmp
cmp
cli
jle
test
add
xor
adc
adc
xrelease
faddl
enter
or
call
xchg
inc
loopne
pop
js
enter
enter
adc
inc
in
fucom
mov
les
pop
and
addl
adc
push
push
aam
loope
es
xchg
aas
clc
mov
addl
inc
mov
in
rcl
aam
jmp
add
hlt
xchg
dec
cld
xchg
stos
add
pop
daa
roll
gs
inc
and
sbb
ret
imul
lock
out
out
sub
jmp
je
jb
pop
jno
add
lcall
lock
subl
aas
mull
sbb
cmp
test
mov
stc
bound
lock
nop
sub
repz
ja
js
or
movsl
repz
movsb
call
shlb
jecxz
jge
sub
ret
adc
bound
xor
jbe
movsb
call
dec
icebp
ret
mov
clc
push
push
jbe
add
push
icebp
std
aam
jecxz
jmp
xchg
js
inc
adc
gs
scas
dec
inc
js
push
jno
adc
mov
jmp
scas
incb
test
pop
inc
mov
imul
icebp
jae
test
std
inc
mov
shlb
mov
repz
lret
dec
cltd
rep
push
or
push
adc
cmpsb
rolb
mov
testb
mov
mov
mov
ja
ret
xor
push
mov
push
fiadds
sub
testb
jae
movsb
call
mov
stos
ret
test
in
jnp
js
ljmp
add
push
push
out
mov
push
sub
in
cmpb
mov
call
ss
jne
insb
cmc
jmp
in
movb
add
push
std
pop
lock
dec
cld
add
sti
push
jmp
and
push
mov
cld
jae
ja
pushl
mov
dec
adc
adcl
andnps
xchg
mov
or
push
mov
fiaddl
ud0
testl
call
or
outsl
sbb
inc
dec
mov
movb
or
fdivrp
std
movsb
mov
lcall
out
adc
jp
pop
lret
ret
popf
mov
mov
mov
jmp
lock
cmc
xor
push
or
add
stos
or
scas
fmull
imulb
js
ret
cmpsl
sarb
in
or
adc
fldcw
call
push
neg
lret
adc
add
xchg
icebp
mov
mov
xor
jge
icebp
roll
xchg
or
xor
cld
pusha
inc
push
jp
or
xor
mov
push
in
std
cld
test
inc
jmp
leave
xchg
pop
push
xor
jg
push
adc
idiv
add
push
jo
faddp
fildll
mov
mov
mov
add
inc
jmp
les
or
or
push
call
icebp
rcrl
orl
aam
adc
mov
popl
and
dec
add
cmp
push
scas
jno
jg
addl
jp
das
daa
jp
jno
shl
and
push
inc
mov
ja
or
int
add
add
insb
repnz
jg
and
inc
int3
lahf
int
inc
fsubrp
je
mov
aas
sti
jne
or
sub
mov
xor
icebp
mov
roll
sti
jne
push
ljmp
in
add
ja
cld
push
ja
mov
xor
roll
add
cli
std
push
sbb
jae
xlat
inc
cld
pop
sbb
add
adc
add
std
lea
imul
add
add
xchg
rol
push
pop
scas
rorb
or
sbb
rclb
addps
mov
dec
je
xchg
in
adc
mov
shl
les
xchg
dec
je
daa
rol
pop
shrl
rcrl
fwait
incb
jmp
insl
add
pop
ret
push
add
mov
les
js
push
lret
lret
scas
add
push
cmp
outsl
dec
jp
notl
icebp
push
push
jbe
mull
add
or
jecxz
inc
add
inc
push
cld
push
sbb
dec
icebp
xchg
mov
mov
fdivrp
mov
fisttps
mov
daa
add
sub
xchg
stc
cmpsb
jno
add
hlt
dec
gs
lock
cmpsl
inc
adc
jmp
out
ret
filds
add
pop
or
test
xchg
mov
in
push
mov
xor
iret
sub
lea
jl
xchg
aas
cmpsb
call
insl
nop
jl
fisubs
addb
inc
test
xor
fcmovb
std
push
add
out
cmp
add
inc
movsl
push
sub
shlb
mov
scas
sbb
xor
push
icebp
xchg
enter
sbb
mov
add
add
cli
cli
adc
pop
xor
ret
mov
out
and
rclb
xchg
repz
jne
jns
ror
ja
or
fsubrp
and
cmp
jns
push
aad
add
xlat
and
adc
test
pop
pop
mov
ret
mov
lock
cmpb
push
xsaves
mov
outsl
jecxz
jnp
out
stc
cli
pushl
iret
stc
mov
ljmp
push
adc
add
sbb
les
outsl
call
notb
jae
inc
add
xlat
jo
add
shll
or
pop
sub
je
adc
jbe
mov
add
push
fisttps
std
pop
dec
or
stc
call
add
or
xor
jo
ret
dec
mov
mov
test
add
mov
data16
test
test
ret
add
fyl2x
cs
xor
xchg
cmc
out
xchg
pop
add
int3
jbe
cmc
fiadds
add
xchg
dec
add
fidivrl
int
add
add
scas
add
add
insb
dec
andl
shll
popf
hlt
jle
xchg
add
or
aas
pop
imul
fscale
cmc
hlt
mov
fs
add
imul
add
rcrb
movb
add
icebp
jo
sbb
gs
jmp
std
sahf
ljmp
loope
in
insb
je
cld
xchg
xor
jle
je
cld
jge
adc
pop
add
and
jg
push
pusha
test
jmp
cwtl
loopne
jmp
enter
push
xchg
aaa
movsb
subb
ljmp
add
insb
scas
push
bound
or
in
inc
std
xchg
imul
shlb
std
add
sti
jno
add
dec
sub
add
pop
push
pusha
cmc
push
out
push
adc
cwtl
push
ret
add
imul
lock
lock
mov
push
das
sti
jae
adc
call
add
xor
sbb
sub
loopne,pn
push
push
fwait
sti
adc
popf
add
xor
jmp
add
dec
sub
add
sub
cmp
sbb
fcmovnb
pop
jge
mov
add
sub
les
or
fmuls
std
pop
cld
push
inc
push
dec
stc
jg
fldl
jl
jmp
jmp
add
and
mov
shrb
fidivrs
daa
inc
repnz
es
add
sub
push
inc
inc
push
push
aad
fmuls
xor
cmp
pop
mov
fisubrs
testl
push
fnsave
icebp
fldl
repz
or
jle
add
shlb
dec
ja
jbe
and
adc
add
add
out
sbb
pop
xchg
ja
or
loopne
push
jg
lret
jnp
std
jno
dec
add
or
jb
mov
and
roll
xchg
xchg
lock
ss
cld
shr
pusha
mov
mov
push
cld
lcall
cld
ja
push
out
sbb
cld
push
bound
jb
adc
add
sahf
mov
out
bound
or
cmp
icebp
push
icebp
cmp
push
stos
lds
sahf
push
scas
cmpsb
in
subl
stc
call
hlt
sbb
inc
jmp
push
subb
cmp
mov
add
lock
int
jae
lcall
movsb
pushf
jg
insb
cmpl
push
sahf
pop
ret
or
add
es
sbb
jg
push
inc
int
add
das
call
push
sub
cmc
sti
je
in
sti
je
in
sti
jno
or
in
scas
add
ret
outsb
clc
in
pop
rol
out
push
mov
outsb
in
sub
jbe
jmp
or
dec
in
add
scas
push
lea
push
mov
loop
add
ret
add
mov
add
aam
addb
mov
jno
cmp
or
add
sti
jne
or
push
mov
je
cwtl
add
dec
repz
dec
and
das
rcrb
jns
shrb
std
subb
js
enter
xchg
or
jbe
adc
aad
inc
jne
sarb
out
out
pop
add
add
enter
push
addl
in
xchg
sbb
cld
es
jg
lahf
sub
stc
cld
xor
inc
push
jg
subl
jp
imul
jmp
bound
mov
leave
sbbb
adc
sar
out
push
xor
cmp
push
add
add
cmpsb
push
add
clc
xor
push
sbb
test
scas
aad
xor
add
sub
subl
adc
adc
xchg
pushf
mov
jns
je
add
mov
fsubs
sar
scas
cmp
out
jmp
mov
push
icebp
add
xchg
mov
stc
das
icebp
add
adc
xchg
push
icebp
std
faddl
add
sbb
sub
movsb
mov
orl
push
inc
dec
divb
mov
sub
xlat
rclb
mov
stos
push
icebp
push
xor
sbb
xlat
mov
add
inc
les
pop
scas
jecxz
fistl
icebp
andb
inc
jmp
popa
cld
dec
int3
xor
sub
insb
add
aas
mov
cmp
add
jp
sti
adc
lock
and
push
icebp
cmc
call
xor
mov
push
jp
push
fldl
add
adc
jg
add
or
or
xchg
pop
or
push
mov
pop
pop
daa
ja
pop
test
add
sbb
scas
lahf
das
fistpl
push
add
aas
scas
add
dec
mov
lcall
or
sbb
popf
inc
add
adc
test
mov
test
xor
inc
push
adc
ds
into
jmp
dec
add
out
clc
popa
dec
add
push
lock
xor
push
std
inc
in
inc
push
addl
dec
fcmovnb
jmp
pop
enter
add
neg
push
mov
xchg
lldt
push
push
lret
xchg
insb
ljmp
jg
dec
pop
enter
icebp
push
add
jl
jg
cmc
adc
pop
lds
lret
out
adc
add
pop
rcrb
push
outsb
jnp
ljmp
fwait
jmp
push
fs
call
adc
icebp
pusha
dec
dec
hlt
jae
add
fists
adc
xchg
xor
add
in
push
cmpsb
mov
lods
jmp
ficompl
cmpsb
aas
out
filds
push
sub
push
hlt
sti
out
fdivrs
fsubrl
add
push
push
jno
xor
mov
mov
cmp
inc
jmp
sbb
jg
jnp
jb
add
xchg
push
or
popf
pop
popf
call
mov
sbb
jmp
lahf
sub
cmp
add
repz
jae
mov
icebp
push
mov
dec
jno
inc
cld
mov
jmp
jecxz
cld
insl
adc
cmpsb
int
repz
cmp
imul
add
mov
fiadds
add
fdivrl
cld
fimull
jno
icebp
mov
push
xor
jp
add
adc
sti
jne
or
inc
fs
add
stos
xchg
dec
orl
mov
jmp
aas
std
enter
push
mov
es
push
call
jno
jl
icebp
inc
ljmp
add
jmp
jno
add
push
jo
icebp
int3
arpl
add
jge
add
inc
add
or
pushf
std
call
cmp
cli
inc
add
inc
in
jl
stc
mov
add
cld
fdivrp
jnp
pop
ror
adcl
push
std
mov
push
push
adc
add
les
push
std
cmpsb
add
adc
add
dec
cmc
xor
pop
ljmp
or
incl
lock
out
jmp
push
add
push
cld
imulb
jmp
daa
add
xor
push
lret
xor
clc
and
mov
xchg
jp
jmp
lods
lret
fisubrl
jb
inc
sub
shlb
int
or
push
icebp
repnz
inc
je
out
push
pop
ljmp
aad
aas
push
repnz
add
add
repz
insl
daa
lock
jmp
fistpll
in
push
mov
cli
shr
add
inc
sbb
jmp
or
mov
mov
insb
push
popf
push
push
std
clc
sti
xlat
test
push
inc
add
dec
xor
fs
incb
aaa
and
add
fmull
inc
pop
int3
mov
fs
lock
jmp
cmp
cld
idivb
inc
add
test
pop
xchg
stos
test
cld
mov
dec
ljmp
in
jne
ds
push
out
outsl
rorl
roll
mov
popl
add
add
mov
pop
shr
sbb
add
jne
push
adc
and
incb
repz
jp
std
jne
imul
inc
push
outsl
sarl
sarl
adc
add
lahf
push
repz
adc
lds
dec
xlat
pop
adc
sbb
push
add
add
int
adc
xor
add
push
or
push
je
ja
adc
adc
loopne
scas
pop
cli
ja
cwtl
add
push
flds
add
incb
daa
add
daa
xor
jmp
sbbl
test
fildl
add
sbb
xchg
xchg
aam
push
push
dec
std
add
push
fistps
sub
inc
imul
xor
gs
and
clc
sub
sub
xor
cmp
fildll
add
push
xchg
add
out
sub
std
or
icebp
pop
leave
add
jp
test
inc
mov
loop
addr16
icebp
jmp
add
pop
mov
add
jmp
mov
push
jo
add
pop
data16
mov
jmp
add
push
jo
push
bound
bound
jns
shl
out
cld
rorl
sub
cmp
push
js
mov
aas
mov
xchg
add
int3
jecxz
fidivrl
and
cmpsb
dec
mov
push
push
mov
test
inc
cld
mov
fs
int
icebp
mov
popa
jns
xchg
push
jp
push
aas
and
scas
xchg
dec
lret
std
add
cmp
je
pop
addl
inc
pop
add
jecxz
push
sub
mov
jne
or
push
lcall
and
xlat
imul
add
add
cmp
push
int
add
jl
jmp
and
icebp
jmp
add
inc
adc
sbb
stos
out
addl
mov
pop
test
je
adc
shrl
add
aam
inc
adc
push
inc
dec
into
xchg
dec
push
mov
jg
data16
loope
inc
push
lret
sarl
addl
add
xor
data16
aas
push
push
leave
and
or
adc
int
dec
dec
pop
stos
fsts
sbbb
rolb
jmp
orb
push
sbb
add
xor
add
fisubrs
push
fcom
push
mov
fistl
xrelease
xor
jmp
adc
lods
or
add
adc
xorb
in
shrl
stos
fcoms
inc
fwait
mov
incb
icebp
xor
imul
push
fs
pop
ljmp
rclb
fsts
icebp
jmp
inc
push
lock
inc
jmp
pop
lds
xor
dec
sbb
mov
repnz
add
add
fiaddl
jbe
mov
add
ljmp
test
push
mov
mov
dec
mov
pop
pop
adc
mov
in
mov
fsubl
sbb
and
addr16
loope
mov
cmc
cwtl
adc
push
icebp
out
sysexit
std
ljmp
cld
sbb
out
mov
push
je
hlt
dec
jo
adcb
jbe
scas
push
cld
hlt
hlt
add
or
fptan
nop
xor
add
xor
add
cmp
clc
jb
icebp
pop
or
lods
jmp
sub
add
push
cmc
xor
test
inc
cmp
cmp
inc
fmull
xchg
sub
ret
dec
mov
and
jmp
pop
jne
add
jns
add
jo
lods
cs
adc
repz
lods
lods
inc
cld
mov
xor
mov
in
add
aaa
std
push
cmp
ficomps
mov
fsts
cmp
shr
in
shr
push
add
adcl
push
scas
mov
das
int
push
jge
call
and
or
add
adc
in
or
lds
mov
std
iret
cwtl
push
add
fldpi
add
xchg
mov
mov
aam
aaa
mov
fdivs
mov
fadds
push
xchg
push
inc
sub
sahf
mov
jnp
shrl
out
popa
xchg
popaw
ja
mov
adc
lcall
mov
lock
push
pop
cs
adc
icebp
mov
add
push
jge
cmp
add
add
icebp
jmp
divl
fstpt
add
xor
and
in
mov
stos
or
mov
add
es
push
icebp
pop
mov
int
repz
mov
flds
or
cmp
add
lock
push
jo
add
inc
or
lcall
js
push
icebp
lea
xchg
add
in
rolb
mov
jl
jmp
sti
fisubrl
repz
aaa
add
push
jb
shl
or
stos
xchg
pusha
xor
sbb
mov
add
call
jp
push
add
in
sarb
adc
xchg
loopne
push
push
add
sbb
and
add
jne
xchg
sbb
push
pop
pop
dec
lods
pop
mov
sbb
add
jo
pusha
sbb
add
add
push
push
sub
push
push
add
out
push
push
pop
aam
adc
out
mov
adc
jne
shlb
add
and
adc
add
ja
jne
xor
fstpt
inc
lret
stc
das
add
scas
push
mov
insl
in
xor
pop
call
lods
jb
or
inc
flds
pop
iret
cltd
dec
sbb
or
push
test
or
push
loop
push
adc
mov
in
add
sbb
ret
sub
sar
sub
push
fdivs
push
add
mov
add
mov
mov
sbbb
push
inc
and
sub
mov
mov
test
and
or
adc
push
fimull
adc
icebp
sub
and
lods
xor
sub
into
sti
push
icebp
jmp
and
push
and
jmp
add
add
pop
loope
scas
popf
mov
dec
or
icebp
jmp
xlat
inc
inc
adc
loop,pt
adcb
fisttps
fnstenv
ret
xorb
incl
sub
push
cmp
pushl
or
loop
or
push
xlat
imul
add
jecxz
sbb
mov
insb
add
add
leave
ljmp
add
pop
pop
or
clc
dec
cmp
sbb
outsb
rcr
jnp
jmp
leave
clc
lea
add
inc
out
add
push
outsb
sarl
jmp
jb
int
xchg
push
std
test
xchg
xor
insl
ficoms
popa
and
add
xor
call
imul
push
and
add
imul
jne
xor
adc
jns
cmc
inc
call
pop
int
pop
stos
hlt
std
inc
push
push
cld
stc
mov
cmp
int
movsb
add
icebp
mov
psubsw
lds
pop
stc
mov
push
xor
jo
mov
push
cli
iret
std
jne
imul
or
les
scas
mov
test
add
add
or
js
sbb
cs
cmpl
inc
dec
and
mov
inc
or
pop
jne
sbb
push
adc
jae
push
add
push
ja
add
pop
xor
mov
test
in
mov
ds
shrl
out
das
aad
enter
dec
jp
dec
add
pop
push
add
cmpsb
or
cltd
cmp
adc
mov
sub
dec
jl
cmp
adc
jle
ja
add
mov
or
testb
and
jecxz
lahf
cmpps
adcl
and
ror
divl
roll
in
insb
les
push
pop
or
sub
xor
mov
mov
add
pop
stos
add
int3
loop
push
leave
dec
add
sbb
mov
xor
jae
rolb
lcall
fldcw
fisubrl
ljmp
fdivrp
jmp
fiadds
jmp
and
and
jb
loope
notl
and
call
bound
add
mov
out
leave
mov
adc
lret
push
add
push
inc
push
push
int3
lock
push
inc
mov
cld
push
pop
fdivl
fucom
mov
sbb
push
aad
mov
out
int
or
shll
sbb
fists
push
leave
jp
add
mov
out
mov
jmp
ret
in
inc
sbb
add
and
shll
sbb
in
lcall
test
or
push
jbe
in
pop
inc
sbb
push
lea
imul
jne
sbb
push
jbe
shll
decb
in
and
call
loope
mov
out
sbb
push
or
and
add
mov
dec
clc
sti
shlb
add
rclb
dec
lds
fs
push
orb
push
sub
ljmp
jnp
jmp
frstor
aaa
leave
add
pop
or
or
push
push
mov
mov
add
jnp
lret
push
adc
ss
mov
int3
push
test
clc
mov
push
xor
cmp
mov
mov
add
iret
call
or
fadds
cmpsl
enter
rcr
cwtl
icebp
jmp
sub
icebp
mov
jp
sub
adc
outsl
fisttps
xchg
cmp
icebp
push
shrb
fstpt
icebp
call
stos
int3
rorb
ret
rol
jp
inc
jmp
int3
scas
inc
sub
add
pushf
jp
insb
xor
xor
xchg
ljmp
int3
lock
jnp
insb
mov
add
xor
shrl
call
sbb
test
lcall
jmp
xlat
incb
icebp
ljmp
xchg
inc
cmovae
xchg
add
fdivr
sbb
fisttpl
lods
cmp
push
je
jno
sahf
xchg
imul
nop
fs
add
cld
mov
xchg
fisttpl
aam
cmp
add
cld
call
and
sub
addl
lock
xlat
inc
enter
or
add
in
je
insb
cmp
push
fidivl
test
pop
adc
jno
mov
mov
or
movsl
jo
xor
add
addr16
add
jmp
repnz
push
repz
pusha
sub
jne
add
add
cld
icebp
xchg
adc
rolb
mov
push
out
add
cmp
imul
sbb
cwtl
popa
push
ret
push
fadds
std
and
mov
mov
sti
popf
and
cld
dec
inc
clc
mov
fistpl
push
icebp
addr16
mov
pusha
inc
aad
mov
inc
cld
stos
mov
inc
hlt
pop
adc
dec
push
fdivr
jno
pop
push
lret
mov
pop
testb
push
mov
addr16
adc
lock
add
push
pop
arpl
add
fldt
push
stos
aas
xlat
xor
leave
imull
pop
inc
sbb
dec
push
jmp
lcall
insl
mov
inc
ljmp
xor
inc
bnd
aas
shll
push
int3
cmp
fcoml
mov
mov
add
xchg
cmp
fsubrs
xor
fs
add
std
neg
scas
sbb
cmp
fs
outsb
cwtl
leave
inc
out
dec
icebp
pop
rcl
jnp
aam
or
imul
push
xchg
pop
dec
icebp
add
pop
jb
in
imul
and
scas
cmp
lret
push
jb
push
in
sub
add
and
fs
mov
and
xor
imul
push
and
int
leave
xorl
jg
jmp
ds
dec
jo
adc
pop
add
dec
std
and
jbe
inc
faddl
push
in
stos
xor
xor
in
mov
cmpsl
cmp
xlat
xorb
icebp
add
xchg
in
call
add
rorl
in
inc
or
cli
push
pop
hlt
adc
icebp
je
aaa
lea
pop
call
in
and
mov
js
xchg
sub
add
int
xlat
xchg
xor
add
movsl
mov
push
jnp
aaa
adcb
jb
jle
pop
mov
add
loope
inc
shlb
aas
add
out
sub
xchg
or
add
xchg
sub
push
push
cmp
push
and
sbb
sub
push
lret
xchg
xor
or
test
lahf
inc
or
adc
push
xchg
fcomps
xchg
mov
or
fistpl
ljmp
add
bound
dec
aam
enter
call
enter
jnp
lret
add
mov
or
cwtl
mov
aas
and
das
clc
nop
test
call
repz
mov
rclb
enter
movl
addr16
cwtl
jmp
add
lods
push
pusha
fst
stos
jle
jmp
add
add
pop
adc
mov
add
cmc
aam
lds
shll
aam
das
cmp
mov
push
icebp
xchg
jno
gs
jo
or
lret
outsb
dec
dec
or
push
jo
loope
daa
xor
insb
pop
in
sub
icebp
add
push
or
addr16
add
pop
mov
or
movsb
sar
jmp
imul
push
fisubs
add
push
outsb
rcr
popf
add
stos
in
mov
push
or
cmc
sbb
test
fidivrl
stos
in
add
aaa
push
call
add
or
push
ret
push
push
fistl
sar
push
inc
or
cmp
add
jno
fcos
pop
mov
movsbl
cld
cmp
sub
imul
sti
pushl
or
fcomp
dec
rcll
mov
xchg
cli
hlt
add
jg
jmp
std
ficoml
pop
hlt
push
and
mov
sub
dec
sbb
sub
and
push
and
xchg
push
fiaddl
addl
xchg
out
push
push
fiaddl
mov
add
aas
std
fwait
and
push
push
fidivrl
sub
hlt
fcoms
js
inc
add
or
push
inc
cmp
enter
rcrl
sub
dec
add
icebp
xor
sbb
insl
xor
iret
lret
xor
xor
out
add
push
je
out
cmpsl
inc
mov
mov
leave
fwait
lods
rol
adc
inc
lods
data16
jne
add
cmovnp
inc
mov
and
js
shrb
and
pop
es
mov
sub
les
jbe
dec
push
iret
daa
pop
fwait
jl
fistpll
es
iret
gs
and
ds
fnstcw
out
into
add
add
inc
out
pushf
pop
je
sbb
pop
shll
add
jecxz
or
sbb
sbb
xor
mov
mov
jmp
mov
ret
sti
adc
js
mov
mov
add
xchg
inc
or
icebp
daa
mov
js
mov
mov
mov
stos
int3
push
loope
fmuls
jb
int
sub
xchg
or
loope
add
icebp
push
jb
dec
in
jno
icebp
add
adc
inc
add
daa
push
xchg
cmp
push
lea
or
in
mov
inc
add
mov
call
adc
jmp
mov
and
lcall
cld
jp
mov
icebp
mov
bound
mov
xor
into
lds
divb
incl
add
mov
imul
in
sti
mov
notb
mov
ljmp
push
mov
mov
xchg
lret
into
sbb
adc
xchg
mov
jl
lret
pop
mov
std
subb
xchg
stos
xchg
mov
adc
lock
jmp
inc
add
sahf
adc
add
pop
xor
sub
sbb
fimull
mov
bound
insb
pop
pop
ret
push
mov
inc
inc
pop
xor
cmp
push
mov
aad
add
inc
loopne
fiaddl
add
lods
cmpsl
push
icebp
jmp
add
lods
scas
inc
mov
inc
pop
cld
push
shlb
jmp
jbe
aas
lret
xchg
hlt
jmp
add
add
fsubrl
iret
out
jmp
movd
pop
pushf
lret
neg
add
push
fmuls
push
add
xacquire
adc
mul
add
cmpsl
adc
out
out
push
jbe
push
inc
in
adc
and
daa
adc
fucompp
add
add
gs
push
js
mov
add
gs
test
aam
add
push
and
int
pop
test
push
out
outsb
shr
addb
push
js
leave
enter
pop
mov
pop
push
pusha
xor
cld
sbb
shl
inc
add
push
js
mov
stc
lea
pop
mov
pop
flds
int3
jbe
pushf
ds
xchg
cmp
insb
pop
cld
test
xchg
mov
fiadds
add
add
add
out
mov
jbe
lea
out
and
lret
cmp
push
test
cmp
mov
pusha
push
enter
mov
js
add
jbe
lea
dec
push
test
leave
push
xchg
and
test
cli
jg
stos
in
add
ljmp
add
pop
in
and
lea
add
add
inc
mov
outsb
cli
sbbb
cltd
mov
hlt
ja
push
in
xlat
mov
add
xor
fwait
jge
mov
sbb
adc
std
test
jg
hlt
and
mov
jmp
imul
lds
mov
add
add
or
xchg
mov
add
pop
lods
mov
fiaddl
test
loop
ja
fiaddl
push
inc
lods
in
icebp
jmp
mov
loope
inc
push
clc
addr16
es
jnp
mov
pop
and
push
imul
mov
sub
addr16
div
mov
mov
add
faddp
pop
dec
xlat
jnp
push
sbb
cmp
sub
rcll
jl
fcomp
clc
sbb
lahf
cmp
mov
jae
repnz
jle
loop
adc
pop
or
enter
and
add
cmovae
pop
test
test
or
in
sub
xchg
cltd
add
aas
xor
roll
jmp
push
js
pusha
xor
insl
pop
call
int
rcll
push
pop
popa
je
int
shll
add
inc
jecxz
xchg
push
sbb
sbb
rcr
in
jmp
or
push
ds
hlt
test
pop
in
add
inc
or
mov
mov
incl
add
sbb
repnz
jbe
push
popf
sbb
jmp
lahf
and
push
mov
lods
push
test
xor
mov
jns
lock
icebp
push
decl
jno
emms
push
add
ljmp
inc
lods
and
jp
xor
decl
icebp
add
jo
jle
jbe
lock
pusha
adc
inc
xchg
dec
push
push
dec
xchg
inc
insl
jbe
push
stc
xlat
mov
add
call
mov
movntps
dec
inc
xor
push
std
inc
jb
inc
push
push
shlb
inc
adc
adc
inc
add
add
jae
jbe
fiaddl
mov
add
pop
push
mov
clc
add
push
sbb
std
pop
lods
mov
mov
or
jnp
or
adc
xchg
lea
fwait
push
dec
js
mov
adc
insb
lret
lea
insl
adc
inc
and
mov
pop
push
dec
js
scas
mov
roll
jle
lahf
lret
inc
dec
push
jmp
sub
add
test
pop
in
ret
or
faddp
adc
xlat
ret
rep
dec
mov
rcr
mov
sbb
rcrb
call
jecxz
enter
loopne
jbe
out
jg
cmp
jbe
mov
and
add
sti
mov
into
push
push
or
stos
mov
sbb
or
aad
hlt
mov
add
jb
lret
aad
add
push
push
jbe
out
pop
inc
arpl
add
out
xor
loopne
fisubs
pop
hlt
mov
int
or
xlat
scas
in
arpl
jg
roll
inc
stos
jne
sarl
add
test
add
sub
mov
xor
rcrb
je
ja
mov
lods
jbe
cmp
add
rorl
jne
outsl
sti
lcall
inc
cmp
mov
pop
hlt
scas
add
or
out
add
cmpl
in
xor
decl
scas
or
mov
inc
add
cmpb
add
inc
imul
rorl
or
lods
or
stos
in
add
inc
xchg
push
sbb
pop
rolb
add
add
outsl
mov
dec
push
fdivrs
testl
or
mov
jg
aas
add
js
adc
sub
fmuls
loope
fcmovbe
xchg
pushf
mov
int3
notl
push
shlb
mov
sbb
add
hlt
fistpll
in
pop
or
add
xor
add
sbb
sub
fcoms
sub
add
xor
stos
inc
das
ljmp
icebp
and
outsl
test
jl
mov
pusha
push
je
or
lock
int
icebp
jmp
add
scas
ljmp
lock
mov
jmp
push
jg
inc
cli
mov
jmp
cmp
add
lock
pop
push
icebp
jmp
dec
sahf
inc
in
xchg
outsb
pop
push
icebp
jmp
flds
cld
push
loope
jb
in
mov
inc
jb
push
repz
cltd
and
cmp
mov
addr16
mov
dec
xchg
ljmp
aaa
test
jecxz
test
sbb
fsubrp
out
push
ljmp
add
add
dec
test
sbb
inc
or
mull
jmp
iret
push
out
stc
ds
add
cmpsl
out
push
ljmp
add
push
test
xchg
push
and
cmp
mov
loop
test
sub
scas
loop
xchg
adc
inc
mov
loope
add
adcb
test
add
mov
add
in
bound
hlt
call
push
mov
data16
sub
lds
pop
in
dec
push
or
add
fdivr
push
sar
xchg
ljmp
and
push
int
hlt
inc
cmp
adc
test
stc
adc
aad
call
addr16
or
mov
fmull
adc
pop
movb
sbb
rolb
aas
or
in
pop
lods
inc
push
ljmp
add
mov
test
addl
scas
std
ror
scas
xor
aam
add
inc
mov
pop
lret
pop
inc
scas
std
movsb
dec
sbb
popa
mov
pop
lea
jmp
push
enter
sahf
sahf
scas
jae
sti
cmp
jle
cld
data16
sbb
icebp
outsb
mov
add
ret
pushf
sbb
mov
sub
inc
inc
jmp
mov
jmp
jmp
lea
inc
movb
jge
and
inc
and
aaa
jae
inc
add
fstps
mov
loope
mov
jmp
sub
testb
inc
fwait
add
jmp
hlt
lret
add
cmc
sbb
cmp
adc
add
imul
push
add
add
mov
push
mov
ds
push
xor
fstl
mov
add
out
in
sti
push
cmpsl
mov
add
outsl
repz
je
dec
add
test
cmp
rcrl
out
add
icebp
push
mov
rcrl
add
mov
push
xchg
mov
cmp
cld
fdivl
push
fucom
ds
push
inc
add
push
inc
add
lcall
fists
inc
cli
aaa
inc
sbb
scas
jo
outsl
js
pop
push
xorl
mov
cmp
repz
int
adc
cld
mov
mov
add
add
clc
and
mov
vpaddusw
cmp
and
mov
jne
mov
dec
sub
add
aas
in
cmpsl
add
add
mov
clc
push
and
or
lods
push
ret
push
push
add
adc
movsb
cwtl
adc
aas
insl
or
add
add
fcmovnb
add
adc
push
lea
push
enter
mov
add
adc
pushf
or
adc
push
std
data16
shlb
mov
push
enter
mov
jae
outsl
sbb
or
enter
mov
ret
icebp
mov
das
jne
jb
dec
inc
scas
add
jge
outsb
lret
lret
sbb
jecxz
add
das
cli
jp
jmp
pop
addl
add
aas
fidivrs
jno
mov
xor
adcb
cmp
dec
fisubrs
add
mov
xchg
jae
lods
push
ds
std
loopne
insl
push
bnd
add
call
mov
test
add
dec
addb
out
stc
fdivrl
je
push
sub
ror
add
imulb
jne
dec
inc
xor
outsl
jle
fimull
addb
sbb
fldt
jbe
pop
sbb
pusha
jl
call
jo
leave
call
add
jle
sub
cmp
je
cmp
dec
icebp
mov
add
add
inc
jmp
adc
inc
addl
loop
add
xor
push
pusha
in
std
adc
mov
cmc
sub
push
imul
das
icebp
sub
push
jne
fadds
pushl
fiadds
or
pop
mov
fwait
cmp
andps
add
fadds
pop
xchg
mov
cmp
add
xchg
mov
xor
daa
cld
ljmp
add
sub
repnz
aaa
mov
push
fistl
repz
ljmp
repnz
push
add
add
cmp
add
sub
add
lds
enter
mov
jnp
enter
int
add
mov
add
pop
add
or
popf
jnp
js
and
movl
fldenv
xchg
push
out
iret
adc
or
xor
enter
sub
add
subb
mov
icebp
movsl
sahf
cmp
cld
lret
and
jl
dec
jmp
pop
cmp
ljmp
push
xor
add
dec
icebp
mov
daa
and
pminub
imul
push
out
jmp
stos
push
out
jmp
add
pusha
sbb
inc
push
push
jmp
cli
fbld
cli
jbe
mov
push
das
in
sar
test
arpl
test
and
test
pop
aad
sub
rcrl
add
test
push
icebp
add
mov
idivb
fwait
stc
push
icebp
add
mov
scas
mov
loopne
jmp
mov
mov
push
adc
mov
iret
aaa
adc
sub
jae
daa
out
cwtl
dec
call
mov
aas
adc
test
mov
cmp
mov
icebp
add
mov
mov
add
test
pmaddwd
sti
jp
sub
out
add
test
add
mov
outsb
cli
add
mov
repz
mov
dec
lret
cli
out
je
push
dec
add
ljmp
add
out
add
push
pop
add
out
mov
aam
imul
add
jecxz
adc
out
push
call
xor
sbb
dec
push
in
push
fwait
movsb
std
inc
imul
std
in
xchg
and
push
fildll
fisubs
add
xor
sti
out
add
xor
pop
repz
xchg
add
or
inc
pop
test
mov
add
add
repz
add
imul
add
ljmp
cld
add
push
lods
add
xor
fcomps
push
ret
xor
sub
jmp
icebp
cmp
jnp
bound
jmp
cmpsb
gs
xor
add
jmp
mov
icebp
jle
shrb
add
add
insb
cmp
mov
subb
in
jno
lods
das
xor
jbe
cmpsl
push
mov
bound
jmp
cmpsb
out
imul
fidivs
jmp
movsl
mov
in
mov
insb
mov
ljmp
icebp
jne
sbb
jmp
add
sti
into
mov
add
push
mov
mov
add
pop
mov
mov
pusha
mov
rcll
icebp
or
cld
xchg
incb
sub
insb
mov
and
push
xor
data16
sahf
sti
inc
scas
inc
mov
pushf
pop
lcall
push
fisubrl
call
add
ret
adc
lock
add
out
cmpsl
mov
push
xor
ljmp
pop
inc
or
sub
xor
push
ljmp
repz
lds
sub
in
add
ljmp
cmp
push
mov
sub
mov
repnz
cli
sub
jno
adc
cli
cltd
fisttpll
jbe
incl
add
sub
imul
push
push
repz
cmc
nop
xchg
sub
sbb
decb
push
cwtl
ja
scas
sbb
in
jae
or
ret
pop
notb
mov
mov
cwtl
lea
sbb
call
push
addl
adc
add
push
cwtl
mov
das
push
add
cwtl
add
add
push
cltd
add
jns
cmp
add
aas
mov
sbb
neg
insb
pushf
sub
call
icebp
push
add
icebp
test
add
sarb
push
cmc
imul
cld
add
add
mov
or
xor
mov
ret
pop
cmp
xchg
adc
jmp
movsb
push
stc
add
mov
insl
incb
pop
jmp
ret
andl
sub
outsl
inc
pop
ja
pop
dec
inc
push
clc
fs
stos
add
mov
call
lods
mov
sub
add
dec
and
les
jp
add
jno
jmp
outsb
icebp
jmpw
jmp
add
mov
test
push
icebp
add
push
push
lcall
mov
sbb
sub
shl
filds
jmp
inc
std
mov
arpl
pop
leave
cmp
stos
jne
pop
cltd
dec
and
icebp
test
imul
bound
flds
bound
add
or
out
add
add
or
add
mov
push
push
ret
mov
testl
fsubr
add
and
ljmp
jo
pop
xor
mov
cmpb
je
mov
push
push
shll
sbb
sub
add
cmc
add
jne
stc
lea
int
mov
add
xor
push
orb
push
mov
test
sbb
arpl
mov
dec
xchg
add
pushf
sub
xor
push
xchg
mov
jnp
xchg
std
jl
dec
or
add
inc
add
sub
push
cwtl
add
ficomps
inc
sti
out
jae
pop
ret
call
cmp
or
add
pop
cwtl
add
add
adc
lret
call
pop
icebp
lcall
mov
hlt
dec
mov
jmp
lahf
inc
add
mov
xchg
scas
cli
add
icebp
in
pop
jb
xchg
shrl
outsl
adc
in
lods
add
imul
mov
icebp
test
arpl
test
outsb
shrl
add
add
mov
arpl
repnz
xchg
jecxz
add
mov
out
lret
sub
push
jecxz
negb
icebp
outsb
mov
add
push
jo
bound
add
push
icebp
add
in
das
sub
imul
fstl
mov
sub
repz
jmp
aaa
addl
lds
add
jmp
adc
or
addl
in
push
icebp
add
xchg
xor
dec
fs
cli
sub
dec
aas
jle
inc
xchg
pushf
fadds
jmp
fildl
or
idivb
mov
fbstp
fstpt
push
negl
mov
add
repz
push
popa
test
adc
add
pop
test
jo
add
push
jmp
ret
jg
pop
pop
pop
nop
or
cli
repz
cmpsb
cmp
aam
cld
push
mov
cmp
in
mov
push
je
add
outsl
sbb
fbstp
shrb
xor
inc
addl
push
xchg
inc
mov
add
rclb
xchg
cwtl
sarl
add
adc
jecxz
pop
pop
add
push
dec
xchg
inc
push
xchg
ss
xor
cs
cwtl
test
addr16
popf
adc
lret
fadd
jo
sets
jle
cltd
add
ds
scas
pop
cltd
add
into
cmpsb
adc
add
pop
add
and
xor
cwtl
xchg
inc
gs
pop
and
ror
aaa
shl
loop
data16
add
icebp
int
cmp
loope
mov
in
lcall
jnp
and
int
mov
mov
neg
and
push
jp
add
movsl
ljmp
sub
call
sti
xchg
in
jmp
or
cmpsb
sahf
filds
fistpll
jle
inc
aas
sti
lock
cld
test
stos
out
jecxz
add
lret
cmp
sbb
or
movsl
loopne,pt
cmpsb
ss
cmpsb
add
inc
icebp
adc
ss
cld
xchg
leave
jp
imul
or
call
std
sti
faddl
cmpsb
jbe
inc
cmpsb
push
mov
enter
mov
inc
pop
xchg
xchg
std
add
stc
push
push
add
arpl
cld
pushf
mov
and
aam
icebp
xchg
inc
cltd
sbb
ljmp
stos
andl
sbb
je
loopne
enter
ret
nop
mov
add
push
pushl
stc
addb
push
add
push
cmpb
hlt
push
adc
and
add
imul
out
pop
call
add
inc
push
xor
adc
insb
lds
lods
jo
aaa
cs
dec
push
fildl
stos
je
mov
test
push
push
jg
adc
insb
lds
push
cld
sbb
pop
add
mov
add
mov
sub
adc
lds
add
das
jno
aas
push
cwtl
test
and
mov
push
push
cld
jmp
adc
push
mov
movsb
add
ret
xor
add
fmuls
test
add
push
lret
and
seto
jl
jl
push
icebp
jmp
inc
aaa
rol
jae
mov
leave
leave
rol
push
icebp
jmp
mov
repnz
jge
mov
xchg
xor
push
icebp
lar
sbb
dec
stos
js
fists
std
mov
filds
das
and
mov
outsb
les
cwtl
add
icebp
pop
fnstenv
clc
or
cmp
je
lock
sbbb
add
add
out
insb
adc
in
xchg
mov
js
cmp
sbb
cmc
mov
insb
rcll
jne
pop
js
add
fstpl
call
cmc
jp
lea
mov
mov
insb
pop
aad
cmpl
mov
cli
frstor
and
dec
lds
or
add
fs
ret
push
insb
jne
jmp
jb
inc
mov
jae
cld
add
mov
and
icebp
jmp
push
xchg
rclb
xchg
adc
and
add
jg
pop
ljmp
iret
xchg
mov
push
and
imul
xor
ret
ret
add
and
pop
sahf
xor
push
xchg
jo
push
lahf
xchg
pop
call
jno
and
lret
push
jns
repz
and
loop
inc
out
sbb
pop
push
push
push
pop
sub
push
mov
call
rcl
clc
mov
cmpsl
or
addr16
cmp
add
test
scas
push
pop
addr16
je
mov
loopne
fcoms
mov
mov
add
cmpsl
mov
cld
ds
aas
push
mov
je
adc
push
cld
clc
or
xchg
aam
and
add
and
xor
js
fwait
pop
adc
sub
dec
add
sbb
pop
dec
mov
icebp
mov
inc
push
jno
mov
stc
data16
push
mov
jg
xor
repnz
ljmp
lock
push
loop
int
mov
insb
nop
push
icebp
jmp
add
jmp
lea
sub
mov
sbb
sbb
ljmp
cmpsl
ljmp
icebp
jmp
ss
jne
jmp
add
dec
icebp
dec
push
stos
sbb
xlat
stos
test
insl
mov
push
icebp
add
push
je
movsl
push
push
pop
sbb
sbb
mov
dec
and
mov
mov
bnd
lods
sbb
test
out
mov
mov
fld
jo
std
cmp
xor
push
pushf
cld
pop
pop
lds
call
add
push
loop
adc
popf
jae
shll
mov
ljmp
push
adc
add
jno
aam
sbb
call
das
mov
or
ljmp
lock
call
or
rcrb
or
xorl
jmp
jne
fcoms
add
add
sar
xchg
push
or
repz
imul
fsubs
mov
and
push
in
push
pop
jne
fsts
out
add
cli
pop
pop
call
hlt
scas
inc
dec
add
xor
pushf
imul
add
inc
add
push
add
add
push
and
std
retw
push
adc
inc
adc
sti
cltd
jmp
adc
add
inc
add
cld
pop
cmc
aas
push
dec
inc
std
push
scas
add
or
add
enter
jecxz
adc
inc
add
pushl
mov
icebp
push
add
xor
cmp
fiadds
adc
popa
push
mov
add
cmc
fs
jo
mov
cltd
or
add
xlat
in
add
gs
js
repz
cli
shlb
data16
add
std
testl
jmp
xchg
ds
push
icebp
fiadds
scas
fwait
daa
add
jne
add
icebp
ret
inc
sbb
push
popa
adc
in
add
insl
mov
and
mov
call
add
inc
add
push
pushf
mov
loop
cld
xchg
dec
icebp
add
push
pushf
push
pop
mov
xlat
repz
add
push
inc
add
clc
fwait
cld
xchg
jmp
fwait
jne
fsubrs
imulb
push
and
sbb
flds
repnz
cltd
cli
sub
push
jb
sub
bound
cli
rclb
test
mov
add
mov
lock
cli
jno
hlt
or
add
jo
je
sbb
clc
xor
std
or
addr16
jge
stc
push
js
add
addr16
aas
addr16
call
divb
incb
in
in
push
xor
jge
jmp
mov
data16
push
jge
icebp
incl
adc
outsl
rorl
insb
sti
incl
add
gs
std
popa
xor
mov
gs
call
cwtl
call
fld
lea
shll
add
or
jmp
lret
aaa
mov
shll
mov
push
and
jmp
cmpl
mov
lds
push
movl
add
xchg
dec
mov
push
mov
jmp
push
mov
inc
cmp
add
shll
inc
or
mov
mov
icebp
in
add
test
outsl
sbb
xlat
into
add
jmp
add
jmp
add
fsubl
repz
add
scas
cwtl
pusha
aam
push
push
icebp
mov
add
or
xchg
sbb
rolb
add
cmp
jmp
push
push
push
repz
adc
jmp
mov
and
jmp
xchg
mov
cmp
roll
rorl
mov
push
jb
sbb
imul
mov
out
push
inc
addr16
call
insl
add
pop
sbb
sub
add
fdivl
add
aaa
in
xchg
rcll
jmp
mov
sbb
jmp
push
xchg
pop
lahf
and
jb
jne
jo
out
fstpt
jae
add
jb
add
sub
push
push
push
add
or
and
push
and
call
test
in
lcall
adc
inc
cli
adc
repz
scas
add
lock
mov
loop
lock
roll
cmp
lret
jno
add
fistl
add
ret
mov
in
cmp
adc
pop
xor
test
add
adc
mov
or
js
adc
sub
pusha
adc
cltd
jge
sub
lds
add
orl
dec
std
jg
cltd
dec
adcb
cmp
dec
sarb
mov
popf
add
cmp
or
dec
xchg
rolb
aad
add
cmp
ljmp
add
add
repnz
push
mov
mov
ficoms
call
xlat
lock
mov
imull
std
lret
ljmp
add
ljmp
push
jmp
add
icebp
mov
mov
push
icebp
insb
xchg
jg
mov
sbb
mov
pop
sar
jecxz
push
cmp
sbb
jmp
add
fisubrs
sub
add
stos
ljmp
xchg
daa
cs
xchg
dec
out
jmp
xchg
stc
outsb
ds
mov
add
nop
sbb
lea
cld
sbb
std
into
aam
shlb
test
jne
add
shrl
inc
lds
cld
sbb
repz
sti
std
add
adc
call
pop
adc
cld
std
xchg
lods
std
sti
frstor
cld
cmpsb
xchg
addr16
add
test
call
xchg
addr16
lds
cld
xchg
pushf
in
add
mov
call
mov
insb
in
or
add
sbb
or
or
add
cmp
shll
clc
out
ja
push
ret
add
adc
je
mov
leave
inc
mov
mov
jne
adc
hlt
add
loopne
add
clc
pop
mov
insl
movsb
push
or
jae
add
loope
xor
addl
inc
adc
cmpb
outsl
add
push
sbb
das
call
add
inc
jo
std
add
mov
push
inc
cld
adc
daa
je
and
std
addl
inc
fiaddl
or
xchg
xchg
jns
inc
add
rclb
orl
xchg
push
and
push
les
punpcklbw
cmp
inc
testb
add
enter
popf
std
dec
mov
jg
jmp
xchg
inc
push
nop
jge
outsl
in
in
and
mov
shlb
les
ret
test
shlb
adc
push
add
ljmp
xchg
js
jae
out
roll
jnp
jns
in
jbe
mov
test
add
mov
jmp
xor
jle
add
js
jmp
inc
sbbb
add
pusha
jp
adc
push
sbb
nop
add
lea
mov
in
into
add
mov
pushf
fs
push
cmp
push
cmc
add
jl
movsl
repz
xlat
or
imul
xchg
add
lock
stos
sub
push
push
daa
mov
jns
add
push
inc
jmp
pop
add
test
push
icebp
push
add
fisttpll
inc
stos
inc
cld
call
loop
jae
jp
std
out
xor
or
mov
mov
push
fldcw
cltd
push
jns
icebp
push
decl
adc
add
jp
jne
je
add
testb
cli
mov
testb
cmp
mov
mov
push
dec
test
add
std
adc
jg
jnp
ja
inc
clc
outsl
imul
cmpsl
fdivs
rclb
inc
adc
rorb
dec
popf
sub
lcall
inc
lcall
add
xchg
xchg
mov
sti
jle
xchg
push
loop
xchg
addb
and
cmp
dec
stos
mov
mov
lea
push
push
cltd
add
stos
loop
add
or
inc
push
imul
fiaddl
lea
push
repnz
jbe
lcall
adc
xor
mov
add
cmp
sbb
pop
icebp
pusha
ret
dec
mov
andb
mov
pcmpeqd
or
cmp
mov
outsb
lret
mov
push
add
pop
push
jl
out
testl
push
inc
xchg
js
or
int3
sub
addb
mov
pop
mov
and
add
xchg
lret
pop
push
icebp
sbb
push
lock
push
and
aam
sti
inc
jmp
xchg
add
xacquire
adc
call
push
icebp
test
jge
mov
rorl
push
xlat
cmp
jo
lds
jmp
daa
rcl
out
add
push
js
loope
push
xchg
add
push
jb
sub
add
bnd
imul
icebp
add
leave
xor
pusha
xlat
cmp
jmp
loop
ret
data16
push
ljmp
push
mov
add
mov
repnz
lret
jl
lods
cld
mov
cmc
add
clc
dec
or
push
pushl
cmovo
inc
or
pusha
mov
add
je
add
aaa
inc
inc
cmp
push
addr16
scas
cmp
xchg
mov
cmp
in
push
arpl
bound
dec
or
repnz
inc
xchg
lcall
dec
add
les
mov
xchg
xchg
inc
inc
add
adc
add
sahf
incl
cmpsb
xchg
sbb
add
add
mov
mov
mov
mov
push
enter
pop
dec
sar
fidivrs
adc
lods
sar
xorb
fimuls
xchg
in
add
or
add
mov
call
adcl
icebp
call
add
sub
and
insb
stos
clc
imul
add
push
bnd
aam
std
in
shrb
push
mov
pushf
lock
scas
stos
pop
test
push
clc
xor
movsb
or
icebp
andl
jmp
mov
jmp
or
rcll
and
mov
xchg
adc
dec
js
out
sbb
jmp
mov
add
push
jnp
xchg
dec
test
push
ret
shrb
mov
icebp
push
and
push
push
sbb
sub
aam
jp
push
sub
jle
mov
icebp
add
pop
bound
repnz
jle
push
mull
mov
cld
push
orb
gs
push
adc
das
sub
scas
mov
add
add
mov
int3
xchg
xor
inc
pop
jp
add
popf
dec
mov
sbb
pop
fdivs
in
add
jae
in
lods
or
ljmp
push
test
addb
or
ljmp
sub
add
xor
push
out
or
addl
pop
hlt
xor
icebp
addl
xor
shll
cmpl
addl
jbe
mov
call
call
jae
lock
jl
inc
or
movsb
inc
xchg
lcall
or
ja
push
pop
cmp
adc
pop
icebp
add
mov
aas
inc
out
mov
aas
push
bound
dec
sti
mov
shl
add
movsl
or
xor
add
bound
jmp
pushf
inc
push
std
ds
push
inc
push
adc
or
mov
loop
sti
je
mov
push
in
add
pop
or
out
addr16
lcall
inc
std
dec
std
data16
movsl
push
xchg
icebp
pop
inc
lea
mov
lea
js
or
xchg
out
aam
sbb
or
std
lods
mov
lcall
add
or
lret
sub
cmc
jnp
cltd
lcall
outsl
mov
and
scas
imul
jns
lods
mov
add
fisubrl
repz
mov
out
push
jbe
add
pop
adc
mov
jge
add
pop
ds
ljmp
jl
ss
add
stc
sub
stos
dec
icebp
or
hlt
mov
push
inc
loope
push
inc
call
mov
nop
std
add
pop
ficoms
adc
orb
sbb
jb
js
add
sub
cld
aam
pop
add
repnz
mov
test
or
sbb
nop
cmpb
std
add
adc
add
shl
mov
add
imul
and
sahf
dec
push
sub
ljmp
mov
outsl
das
adc
push
imul
pop
jbe
or
faddl
ja
jo
clc
sub
hlt
mov
add
stos
mov
adc
cmp
hlt
stos
add
ljmp
hlt
mov
cli
xor
addr16
or
cwtl
add
push
add
mov
mov
cld
ljmp
mov
ja
jae
outsl
lcall
xchg
mov
pop
dec
imul
xchg
push
fsubrs
call
int
push
fsub
adc
mov
das
std
add
pop
xchg
adc
jae
or
mov
inc
inc
or
cmp
fstps
fdiv
adc
mov
cld
pop
icebp
sbb
sbb
xchg
sbb
cmpsl
add
fstpl
sbb
testb
icebp
call
adc
jns
add
mov
sub
or
cld
jle
pop
popa
xor
cmp
add
sub
xor
inc
xor
mov
mov
bswap
sub
or
leave
pop
lock
mov
insb
cmpb
jnp
sub
sbb
or
and
cli
sbb
add
xor
mov
nop
jg
in
test
xor
xchg
add
leave
fcmovu
loopne
jg
cld
cld
addl
repnz
aam
jg
pop
xchg
clc
fistl
jg
mov
inc
jmp
clc
or
dec
jl
mov
xor
rclb
push
inc
jmp
bound
add
xchg
imul
cld
lret
sub
sti
add
ficoms
push
inc
ret
std
sarb
sbb
add
jno
sub
lods
mov
imul
call
push
jle
pop
xchg
aas
rclb
sbb
test
jg
rclb
cmpl
fildl
nop
jge
je
fwait
xchg
movsb
std
jne
add
subl
je
insl
jo
fsubrl
jo
inc
sbb
je
lcall
add
push
movsl
push
call
add
inc
addl
mov
dec
mov
stc
or
cld
and
dec
add
inc
pop
adc
push
push
xlat
cld
inc
and
inc
push
pop
inc
or
mov
pop
or
jmp
cmp
pop
cld
popf
push
adc
faddp
adcb
repz
loopne
mov
fdivr
les
addl
icebp
bound
pushf
or
jb
in
push
dec
fdivs
inc
pop
push
jl
jb
mov
dec
ss
scas
jge
jb
repnz
std
leave
ss
pop
mov
mov
cmp
jmp
addr16
push
sar
std
add
popa
pop
mov
add
push
hlt
fnstenv
cld
xchg
and
mov
jnp
mov
add
jmp
ret
fdivr
loop
dec
jl
cld
fnstenv
adc
jl
test
out
cmc
push
pop
or
out
movsl
je
push
push
stc
jno
fst
notl
jmp
add
adc
and
push
pop
or
fisttps
push
add
test
xor
jmp
add
jbe
mov
repz
sbb
jnp
mov
and
adc
loope
inc
xlat
icebp
add
arpl
clc
stc
adc
adc
cmpsl
loop
inc
stos
stc
fcomps
ljmp
mov
je
adc
cmp
fstps
add
add
add
out
add
mov
jmp
test
sbbb
push
out
call
test
dec
xor
push
hlt
movsl
aaa
mov
jg
cmp
cmpl
aas
stc
jne
push
jb
fs
addl
jne,pn
sub
or
mov
jo
xchg
adc
je
add
leave
pop
js
cli
add
rorb
jmp
mov
dec
insb
call
inc
enter
lds
add
mov
lret
xchg
addr16
pop
pop
push
jmp
shlb
add
mov
jmp
std
xor
add
subl
imul
and
cld
pop
mov
notl
test
lret
add
inc
jae
add
add
xchg
sar
mulb
icebp
test
add
push
sbb
or
pop
repz
add
or
mov
ja
icebp
insl
inc
daa
pushf
insl
enter
mov
shl
sbb
enter
out
rolb
icebp
jmp
mov
push
and
insb
incb
push
pop
sti
pop
dec
in
add
add
sbbb
and
add
std
outsl
addr16
xchg
std
in
js
int3
and
int3
sub
out
or
push
scas
adc
add
xchg
cld
cld
pushf
loope
jmp
pop
nop
popf
jle
jo
subb
outsb
ss
inc
adc
test
pushl
ret
mov
xchg
push
bound
test
add
and
loope
xchg
jno
add
adc
and
xor
xor
cmp
inc
add
ljmp
inc
decl
inc
in
idivl
cld
sbb
mov
test
jle
mov
cmp
mov
int
dec
cli
dec
or
add
in
add
sbb
sarb
int
mov
xor
call
out
clc
push
push
or
add
outsl
shll
cld
fidivl
lea
sub
xacquire
pushf
fs
push
mov
add
dec
mov
push
iret
add
out
ja
add
mov
push
mov
sub
jnp
shl
int3
add
rcll
xor
ljmp
imul
xchg
jl
movlps
sar
inc
push
mov
imul
pop
jns
xchg
xlat
push
mov
fimuls
dec
dec
push
pop
addr16
into
clc
cld
inc
pop
push
inc
push
pcmpeqw
repnz
pop
inc
xor
lods
add
push
bnd
jns
test
mov
push
icebp
insl
inc
pusha
in
clc
lret
stos
adc
je
xchg
and
out
jbe
push
pop
call
adc
mov
adc
outsb
mov
je
jle
jns
lock
mov
push
icebp
gs
loopne
mov
fstpl
push
shrb
mov
add
add
xor
lcall
in
jmp
pop
jnp
or
cmp
std
jae
test
or
cwtl
xor
pop
scas
add
jge
out
add
push
orl
mov
aas
jo
cld
push
ret
shl
add
pop
mov
shrl
add
outsl
cld
aad
add
add
mov
sti
stos
push
insb
inc
call
push
push
push
push
pop
mov
test
push
push
add
mov
hlt
das
push
mov
or
xor
xorw
data16
or
jne
or
adc
popf
and
mov
jns
fcomp
inc
inc
push
cmp
call
mov
add
add
jne
std
jne
in
rcll
mov
insb
lds
adc
sbb
add
incl
add
out
sbb
or
add
loope
add
push
hlt
lds
cmp
adc
push
push
loopne
repnz
mov
daa
xchg
sar
scas
jge
push
push
movsl
pause
mov
sbb
pushf
sar
loopne
cld
add
push
lock
inc
mov
out
push
mov
test
fists
xchg
mov
push
lods
pushf
push
sahf
pop
xchg
jnp
outsl
add
mov
repz
push
cmp
jb
push
cmp
sbb
jne
lock
jp
popl
jmp
ret
xchg
data16
inc
imul
es
mov
fst
mov
pop
mov
ljmp
adc
sbb
int
fmulp
adc
pop
push
rclb
test
les
iret
mov
icebp
mov
aam
lds
push
std
arpl
subl
stos
bnd
xor
mov
and
icebp
jmp
roll
inc
mov
call
jl
add
and
dec
adcl
call
mov
pop
ficoml
jo
test
xor
sti
hlt
jl
inc
jmp
or
sub
inc
add
add
cmp
cltd
add
push
pop
jp
push
icebp
xchg
push
ss
lds
add
adc
jmp
imul
inc
jns
add
pop
add
xor
stos
shl
scas
sysexit
movsbl
cmp
inc
and
aad
add
call
and
mov
or
sarb
addl
inc
dec
stc
push
adc
adc
cmc
dec
dec
cmc
out
mov
sldt
mov
or
add
adcb
out
test
inc
mov
scas
jnp
inc
and
repnz
push
push
jl
push
pop
add
pop
add
aam
xchg
push
pop
add
mov
push
mov
test
adc
pop
cmc
sbb
add
pusha
sbb
xchg
cmp
test
call
push
sub
sti
imul
lret
sbb
xor
xchg
xchg
inc
das
hlt
insb
push
push
pop
add
sub
insb
adc
adc
shlb
mov
pop
scas
cmp
insb
push
mov
fisubs
add
sbb
adc
sub
xor
in
inc
aaa
scas
daa
pop
repnz
adc
pop
mov
insl
sub
jo
call
add
add
pop
mov
enter
outsb
push
xor
inc
sub
or
sub
shll
adc
sub
and
fs
addr16
popa
leave
push
js
sub
mov
ret
int
fisttps
or
sti
add
mov
push
bound
cmp
add
inc
jno
cmpsl
push
imul
outsb
inc
add
inc
pop
or
daa
outsb
cld
es
and
push
jp
loope
mov
jne
mov
and
test
and
mov
leave
xchg
les
add
push
imul
mov
or
sbb
jo
mov
xchg
scas
mov
sub
add
push
icebp
add
ret
lcall
jae
je
jl
and
idivb
cmp
inc
pop
push
adc
and
jp
shr
cmc
add
pop
scas
xchg
test
inc
push
arpl
out
mov
pushl
pop
cmp
sub
out
mov
cmpl
or
add
add
add
cli
add
sbbl
push
aaa
aam
add
out
cmp
push
push
or
adc
pop
insl
or
push
add
dec
test
pop
adc
sbb
add
and
push
test
push
aad
je
adc
jb
jp
cmp
clc
mov
add
in
adc
adc
mov
aas
es
xlat
sbb
pop
push
mov
pop
inc
das
data16
inc
dec
jg
pop
icebp
pmuludq
sub
xchg
xor
xor
mov
stc
insb
pop
and
lea
adc
mov
sbb
push
and
xor
sbbl
add
jmp
das
mov
fwait
or
fucomi
nop
xchg
or
int
enter
sub
jnp
push
outsl
sub
push
sub
push
or
pop
jecxz
loope
lret
pop
out
or
add
and
xchg
mov
data16
jb
sub
adc
mov
jl
in
shr
add
jnp
mov
add
jne
jp
jg
push
sar
sub
mov
xor
jmp
insb
adc
add
mov
ss
adc
adc
push
stc
aaa
out
cmp
xor
dec
cmc
lret
push
icebp
data16
and
jbe
icebp
mov
fisttpll
les
adc
std
in
insb
mov
jg
pop
add
test
stos
dec
sbb
jo
or
je
add
push
js
and
ja
lds
dec
stc
cli
inc
mov
inc
mov
inc
mov
ret
jb
add
ficoml
out
add
add
mov
jbe
and
jl
and
aad
jbe
les
dec
inc
mov
and
cmp
and
cmpsb
pop
pop
mov
repz
mov
in
jo
pushf
push
add
mov
push
push
inc
push
pop
add
adcl
inc
push
pop
add
pop
pusha
out
aas
push
aad
je
jecxz
mov
or
hlt
mov
push
dec
xor
lcall
inc
jg
int3
fists
cld
push
adc
std
push
pop
add
xchg
cld
mov
inc
inc
cmc
and
ret
fildl
add
stos
call
cwtl
out
pop
mov
mov
add
push
mov
cmpl
cmp
bound
jns
add
jmp
add
ds
lret
out
pop
popf
fisubrl
mov
mov
push
pop
sahf
lock
mov
scas
xor
clc
add
push
idivl
add
add
jno
pop
fcoml
push
icebp
xchg
mov
and
pop
sub
pop
mov
pop
xchg
mov
jg
mov
jnp
dec
lea
mov
adc
jne
int
pop
and
cmp
adc
xchg
js
jmp
shl
add
mov
cs
or
push
insb
pop
int
imul
dec
add
add
push
icebp
lea
xchg
add
push
test
call
bound
rorl
mov
xor
lret
insl
and
cltd
fldt
pop
cltd
test
dec
insl
inc
call
adc
inc
jmp
loop
inc
and
jns
and
je
and
jns
and
js
and
insb
inc
and
js
and
add
mov
and
out
jbe
mov
out
add
stos
je
and
dec
mov
aas
andl
add
pop
fs
in
inc
and
add
psadbw
test
in
add
mov
lret
mov
je
jbe
and
jne
out
adc
cmpsl
out
das
test
shlb
add
jg
pop
dec
mov
sarl
adc
addr16
or
adc
adc
sbb
xchg
or
pusha
adcl
mov
in
sbb
sub
pcmpeqb
push
movsb
sub
adcb
in
pop
cld
lea
lea
and
test
mov
sti
pop
fidivrs
push
test
dec
inc
int
jae
xor
add
add
or
iret
mov
je
icebp
mov
dec
fucomp
mov
lods
int
lret
and
push
pop
and
icebp
insb
mov
pusha
mov
and
jbe
mov
mov
repnz
ret
outsb
and
data16
push
pop
or
pushf
push
cmpsb
jae
and
mov
shlb
adc
add
add
or
scas
pop
xor
xchg
add
gs
fists
shlb
or
lds
or
incb
xchg
add
bound
adc
roll
and
insl
xchg
in
adc
add
and
repz
add
fldcw
and
enter
fidivrl
and
add
sarl
jbe
popa
pop
call
icebp
popf
pusha
cld
clc
jae
adc
pusha
push
adc
add
pop
out
imul
js
in
mov
mov
mov
arpl
add
dec
test
and
add
jne
push
mov
lock
xor
je
fisubs
inc
pop
mov
add
in
je
jbe
rcll
mov
add
or
int
xrelease
in
xlat
hlt
add
shll
add
mov
lcall
icebp
sub
test
jmp
dec
jbe
xor
mov
sub
cwtl
cld
mov
mov
or
mov
add
push
loope
or
outsl
pop
setle
int3
or
inc
xorl
inc
mov
adc
or
xor
push
push
dec
inc
std
inc
in
or
pop
add
nop
sti
jecxz
or
lds
push
inc
push
scas
mov
push
mov
ljmp
dec
push
adc
cmp
call
icebp
sub
add
inc
jb
sub
stos
and
mov
sahf
cmpsb
mov
inc
lret
inc
mov
test
or
add
in
hlt
mov
mov
hlt
sti
jmp
xorb
inc
subb
out
in
jmpw
jmpw
sbb
mov
jae
fcomps
lret
loope
inc
fldt
add
add
pusha
cmp
mov
xor
adc
mov
jl
push
sub
jbe
in
mov
jo
jmp
push
pusha
jp
les
je
fstps
push
aad
out
xchg
test
push
adc
pop
pop
pop
sub
mov
mov
add
sub
inc
jmp
add
push
arpl
iret
pop
jo
or
fcoml
xchg
jmp
in
push
pop
orb
dec
xor
outsb
stos
inc
and
lock
jle
out
cmp
lock
pushf
pop
add
xor
cmp
lock
push
aad
push
push
lds
std
mov
adc
cmp
add
add
mov
lock
loopne
xchg
mov
movsl
fnstsw
and
mov
pop
inc
jg
xchg
incl
rorb
js
syscall
sub
xor
popf
jo
push
pop
adc
push
ljmp
adc
pop
lret
push
or
out
sbb
jbe
push
std
mov
add
push
inc
mov
and
je
inc
test
lahf
sub
mov
fs
jae
iret
mov
inc
das
mov
mov
arpl
xchg
aas
push
xor
loope
and
mov
add
inc
cmp
dec
jnp
outsl
call
cwtl
js
icebp
jmp
push
lret
out
inc
pop
mov
xor
xor
ret
in
fiaddl
leave
mov
add
mov
daa
pop
push
ret
outsb
push
sub
jmp
daa
pop
lock
jge
and
sbb
outsl
dec
jne
out
add
mov
dec
dec
or
sub
dec
data16
out
mov
jmp
push
icebp
cmp
mov
jmp
jmp
add
add
icebp
push
inc
pop
add
jmp
dec
dec
add
push
icebp
xchg
stc
bnd
and
lea
stos
push
outsb
lahf
cmc
test
jp
mov
push
pop
or
cltd
lea
add
cmp
bound
pop
mov
loopne
push
icebp
cltd
out
push
push
lock
hlt
mov
add
nop
xor
xchg
imul
inc
xor
loope
cld
cmp
push
push
add
jae
cld
mov
mov
push
inc
lea
inc
jp
test
out
mov
je
jbe
cmovo
push
add
cmpsl
push
and
jg
and
fildl
push
int3
cmpsb
push
cmp
add
inc
and
out
push
dec
add
push
loopne
push
fidivl
jg
outsb
pop
mov
mov
mov
adc
dec
jns
and
aas
or
cmc
jns
and
ret
pop
add
xchg
mov
lret
jecxz
push
roll
mov
data16
push
ss
mov
cmp
adcl
test
mov
dec
push
pop
rol
sti
fdivrs
jns
test
js
clc
fmuls
cld
andl
into
idiv
xchg
adc
mov
jae
out
rorl
jmp
dec
std
in
rorl
fldl
xor
repnz
adc
lods
icebp
mov
pusha
aam
push
xchg
fsubr
adc
mov
pop
sub
out
cmp
add
jmp
cmpsl
js
mov
cmpsl
test
mov
inc
inc
icebp
pop
les
ret
out
loop
pop
and
or
in
push
xchg
adc
dec
fisttpll
cmp
dec
rolb
icebp
fs
xchg
cmpsb
or
xor
xchg
or
in
in
in
dec
push
push
add
dec
in
cmp
adc
xor
inc
sub
mov
inc
jmp
fdivr
inc
jmp
or
stc
rclb
loop
adc
push
shll
es
inc
stc
mov
push
push
adc
fldl
dec
dec
adc
push
mov
jbe
mov
or
popa
pop
sarl
add
push
push
mov
int
add
add
add
rorl
jno
adc
ljmp
lods
pop
dec
js
mov
jmp
loop
insl
pop
push
xchg
push
push
push
pop
pop
mov
mov
std
decl
pop
cli
inc
jp
shll
shr
in
add
hlt
xor
or
pop
fmuls
cld
push
add
daa
pop
push
lea
mov
test
sub
es
mov
cmpsl
std
mov
clc
stc
nop
dec
mov
xchg
jo
push
or
in
clc
add
xchg
push
jmp
cmpsb
std
int3
int
jae
clc
inc
out
dec
add
sbb
addl
push
dec
jge
add
clc
stc
adc
lds
add
add
jge
xchg
aaa
sar
stc
lret
cli
dec
jmp
into
aas
push
mov
or
mov
mov
xor
mov
std
pop
dec
dec
inc
push
addr16
stc
nop
icebp
jmp
into
inc
icebp
adc
dec
push
cmpsl
add
push
adc
mov
test
dec
xchg
icebp
xchg
lret
dec
popf
leave
cltd
int
icebp
lret
push
daa
add
add
adc
les
daa
add
adc
dec
adc
adc
cmp
icebp
adc
dec
adc
cmc
repz
icebp
cmc
sti
sbb
fdivrp
cld
out
dec
add
fwait
sub
pushl
outsb
sub
dec
jmp
jne
push
cld
gs
fldl
push
inc
cli
stos
push
push
push
mov
push
xchg
sub
pop
push
in
add
iret
push
cld
xchg
mov
imulb
mov
xor
inc
or
adc
mov
push
adc
mov
or
ficoms
andl
out
sahf
or
fiadds
dec
stos
mov
jmp
lret
fldenv
sub
je
mov
insb
adc
mov
repz
cli
mov
mov
shl
pop
call
ljmp
push
xor
add
in
xor
pop
adc
loopne
cld
imul
icebp
cs
push
imul
test
pop
test
add
add
add
movsl
test
push
cmpsl
lock
bound
dec
std
and
pop
aam
pop
add
nop
pop
repz
adc
inc
add
lea
rorb
add
pop
dec
inc
pop
pop
scas
push
test
xchg
add
push
pop
cmc
test
pop
add
addb
loopne
sbb
std
xchg
xor
add
push
pop
jae
mov
and
inc
push
and
call
fs
adc
pop
jnp
fidivs
jns
mov
dec
pop
inc
mov
icebp
jmp
inc
pusha
mov
insl
dec
sbb
mov
in
repnz
icebp
fs
xchg
cmp
inc
xchg
arpl
ficompl
clc
lret
jb
ficoml
loopne
mov
add
dec
daa
add
ret
pop
inc
rol
cs
push
scas
adc
icebp
cmp
ja
mov
push
icebp
jmp
push
outsl
jecxz
add
fsub
mov
inc
sub
arpl
push
cmpsl
inc
repz
jmp
push
mov
repz
lods
push
xlat
lahf
leave
push
mov
pusha
sub
dec
push
xchg
testb
add
add
mov
lcall
fs
dec
inc
repnz
jmp
push
js
jno
mov
pop
jne
mov
insb
dec
cld
shl
add
mov
push
icebp
xchg
push
or
sbb
mov
mov
or
sub
cmp
pop
inc
xchg
bound
adc
adc
add
add
mov
inc
dec
and
cld
mov
and
add
and
mov
idiv
ljmp
or
incl
inc
dec
daa
or
and
idiv
lea
std
adc
sub
hlt
ljmp
push
dec
fwait
sti
addr16
add
add
outsb
jnp
push
mov
add
ds
iret
das
addl
enter
mov
sti
and
iret
push
sbb
or
xchg
pop
mov
xchg
pop
ror
movsl
jmp
adc
lcall
in
add
adc
daa
xor
cmpb
and
rolb
add
fmull
mov
push
fcomi
add
test
xchg
lds
sub
jmp
sub
push
dec
fstpl
mov
cld
adc
lock
pop
sub
dec
aas
push
popa
xor
inc
lahf
repnz
movsl
add
mulb
mov
mov
xor
push
adc
push
sahf
fadds
add
int3
icebp
hlt
sti
outsb
or
aam
adc
or
in
fnstcw
adc
shlb
cmpsb
dec
outsb
inc
and
testl
icebp
dec
inc
dec
icebp
or
cmpsl
dec
push
adc
or
inc
jmp
adc
jo
nop
dec
lahf
xchg
push
mov
popa
gs
cmc
stos
push
pop
add
dec
out
cmc
stos
push
dec
push
test
imulb
add
iret
xor
mov
inc
filds
test
imulb
sub
inc
jmp
hlt
stc
push
xchg
dec
out
add
fxam
adc
mov
cld
push
jecxz
jmp
adc
into
jne
sub
jne
push
push
push
xchg
and
cmp
std
adc
jmp
cmc
std
mov
xchg
scas
or
incl
add
cld
cld
pushl
cmp
call
dec
clc
call
dec
std
call
adc
xor
inc
add
or
sub
call
cmp
clc
test
mov
ror
add
cmp
pop
pop
xchg
pop
sub
push
pop
add
into
jecxz
push
pop
add
add
jge
push
push
add
lcall
push
cmp
jae
jb
sti
inc
xlat
add
dec
xor
xor
add
or
push
hlt
aas
or
test
sub
push
add
cmc
jle
jmp
sub
test
add
mov
movsl
mov
add
inc
icebp
sarl
rorl
add
out
iret
or
add
sbb
xor
inc
lods
jle
jmp
cmp
push
jl
inc
push
icebp
sub
loope
insl
enter
stos
inc
iret
sarl
icebp
bound
add
test
ss
fisttps
repz
add
ljmp
fst
adc
add
dec
mov
dec
icebp
mov
out
jb
cmp
push
into
push
push
icebp
add
push
inc
jbe
fstpt
pop
cmp
std
rclb
push
sarb
inc
lret
stos
pop
icebp
push
bound
in
add
mov
sbb
inc
cld
outsb
int
cwtl
mov
add
imul
icebp
insb
pop
mov
sti
fdivrl
jecxz
jmp
cmc
lds
jmp
daa
loop
cli
adc
add
and
ret
mov
push
std
dec
mov
inc
cli
inc
mov
imul
inc
xchg
inc
shll
mov
add
out
push
push
ljmp
add
and
add
daa
std
push
or
dec
js
cld
test
addb
ja
cld
mov
test
in
push
mov
adc
sbb
lock
sub
sub
inc
cli
inc
cli
xchg
add
mov
mov
sbb
jg
push
gs
xchg
repz
jns
cld
stc
adc
add
cmp
add
push
pop
into
lcall
add
popf
or
add
inc
add
pop
aaa
jae
fldt
jl
aaa
test
pop
aaa
xor
push
inc
push
ret
mov
pushf
jb
hlt
cmp
jnp
mov
adc
cld
lahf
inc
test
pushf
pop
add
test
push
or
rclb
pop
sub
mov
das
repnz
adc
or
movsl
add
add
fstl
adc
push
sti
pop
xchg
popf
pop
cmpsl
jo
imul
std
jne
mov
add
add
icebp
fs
add
je
je
movsl
add
icebp
cmpl
dec
mov
jmp
xchg
shll
fwait
mov
or
insb
fidivrl
push
inc
lcall
add
sarl
push
inc
add
or
inc
jmp
pop
js
cltd
sub
dec
flds
call
roll
mov
sub
mov
shrl
mov
add
cmp
fsubr
push
js
sbb
scas
mov
cli
out
add
sarb
xchg
test
pop
pop
movsl
cli
mov
xchg
add
jg
add
aad
jo
in
das
pop
add
insl
add
jle
leave
mov
inc
adc
faddl
lea
jge
mov
jmp
push
je
inc
jbe
sbb
js
add
pop
call
test
call
add
push
jne
add
push
call
push
imull
inc
stc
push
push
js
jo
or
or
push
push
xrelease
sbb
call
movsb
mov
pop
xchg
fadds
xlat
mov
mov
mov
inc
jg
inc
ja
jg
push
insl
or
mov
push
aas
adc
add
add
dec
dec
add
mov
xor
sti
pop
sar
dec
dec
add
dec
decl
dec
test
mov
lock
loopne
hlt
lods
mov
mov
leave
and
push
dec
add
xor
add
sarl
rolb
push
dec
sub
push
icebp
outsb
add
jmp
repz
in
add
push
icebp
jmp
mov
inc
adc
mov
ss
aas
adc
inc
repz
fnsave
gs
cmpsl
aam
stos
ljmp
fwait
mov
mov
into
cld
jge
ljmp
aas
ljmp
mov
xchg
sub
xor
cmp
xorl
icebp
add
add
sbb
clc
sbb
add
push
pop
cmp
push
cmc
jne
add
add
call
mov
dec
add
test
lea
cld
push
cmpsl
imul
cmp
jne
lret
aaa
jmp
jb
jbe
loope
inc
jnp
lcall
mov
lea
dec
dec
cmpb
test
push
push
aam
call
mov
xor
ds
pushl
ja
call
jge
notb
mov
addr16
add
insb
and
cld
andb
pop
mov
pop
leave
cmp
cld
push
popa
push
jl
cli
ds
decl
sub
push
or
or
add
jmp
jmp
inc
mov
add
add
mov
test
hlt
inc
push
loopne
jp
or
add
cmc
or
push
dec
mov
mov
bound
push
dec
jmp
mov
dec
fstps
add
add
dec
sbb
sti
das
testb
inc
push
ljmp
sbb
aad
das
cmc
add
push
fisubrl
add
adc
push
push
shll
mov
stos
push
dec
cmp
andl
incl
imul
outsl
or
or
add
stc
jno
push
push
cld
fildl
add
inc
mov
sbb
mov
addl
pop
xor
sti
add
fildl
add
cld
scas
jmp
xor
cmc
sbb
icebp
imul
dec
orb
mov
sub
lods
cmp
pushf
scas
jmp
mov
mov
xor
xchg
in
jmp
cmp
push
call
cmpb
lcall
flds
add
cmp
push
bound
cld
jmp
push
mov
cmp
inc
add
jmp
sar
mov
lcall
adc
sti
push
aam
jne
iret
cmp
jge
imul
ficoml
out
scas
cmpb
and
sti
adc
rolb
scas
mov
add
jecxz
adc
cmc
pop
pop
loopne
std
leave
test
cld
push
mov
and
movsl
stc
std
ljmp
cmc
call
call
mov
mov
in
mov
aam
add
test
andb
cli
add
fmuls
cs
mov
int3
inc
add
into
mov
sti
dec
out
in
add
mov
xchg
hlt
enter
mov
pushl
mov
push
fdivrs
in
jmp
shlb
cwtl
dec
jbe
stc
inc
addl
jecxz
aas
push
pop
repz
popa
sub
or
sbb
jae
hlt
add
cld
mov
addl
dec
add
lret
daa
add
lret
add
or
jmp
lret
sub
shr
call
push
and
stc
dec
mov
es
ucomiss
add
cmp
pop
pop
pop
xor
lret
fnstenv
fnsave
xor
rcll
cmp
call
push
adc
call
fs
sarb
cmp
pop
movsb
mov
adc
add
outsb
add
clc
push
jmp
xchg
bnd
xor
cltd
fwait
sub
jns
in
insl
and
into
gs
out
mov
add
mov
aad
pop
mov
jmp
sahf
jae
jmp
icebp
sti
hlt
lock
jmp
nop
aaa
cmp
xor
lahf
sti
lcall
inc
jmp
add
call
inc
das
ret
add
inc
cli
sub
lea
sub
jmp
mov
ret
orl
sbb
xor
iret
shll
aad
icebp
add
pushf
or
aam
pop
and
insb
xchg
adc
add
lock
cmp
and
adc
das
xor
xor
mov
jmp
pop
cld
xor
add
pusha
add
xchg
push
into
decl
xor
ss
subb
adc
inc
xor
imul
sbb
sub
data16
std
ljmp
pop
cld
imul
xor
mov
sbb
adc
lds
push
fcos
sti
sub
dec
adc
insl
mov
push
and
out
dec
add
shrb
cmovae
push
dec
add
jo
xor
sbb
test
sub
xchg
push
jl
push
dec
add
push
dec
shlb
js
inc
mov
rol
sub
repnz
cs
push
lock
std
subl
inc
or
or
adc
shlb
mov
cmp
add
frndint
jl
jnp
push
mov
jmp
xor
call
into
xor
sti
fstps
daa
push
icebp
jmp
push
push
icebp
adc
xor
push
outsb
dec
pusha
sub
outsb
test
push
icebp
shlb
jp
jmp
xchg
inc
mov
sbb
stos
sub
gs
sub
jmp
add
lods
add
repnz
jmp
fisttps
pop
or
insb
jg
jmp
inc
js
xor
adcb
push
mov
adc
or
mov
adc
call
dec
jle
imul
push
lcall
add
inc
mov
sub
jne
jae
inc
or
dec
sti
add
add
rorb
cmp
call
fistpll
inc
int
mov
js
adc
xchg
inc
loopne
jmp
hlt
in
sti
std
cld
xchg
push
and
cmp
pop
mov
xor
add
pushf
in
add
icebp
or
dec
and
out
es
std
jae
stos
out
xchg
pop
pop
icebp
mov
pop
add
js
cld
push
xor
dec
push
mov
movsb
call
test
out
add
lock
or
dec
jnp
cld
mov
or
adc
adc
cs
dec
in
push
adc
mov
adc
jne
adc
clc
jle
mov
mov
scas
je
sbb
cmp
push
nop
push
sub
mov
push
add
add
addr16
mov
cs
cmp
mov
push
cmp
adc
cmp
push
adc
mov
test
out
add
cwtl
aas
mov
mov
sbb
push
gs
jae
and
push
dec
sbb
xchg
inc
add
push
mov
inc
push
push
jp
ss
sub
push
sbb
push
enter
add
dec
test
and
icebp
repnz
adc
dec
add
addr16
aam
incl
out
and
push
and
ret
int3
repnz
idivl
xor
adc
stos
add
xor
push
test
aam
push
mov
rcr
sbb
push
dec
and
cmp
dec
jp
loopne
rclb
sbb
dec
mov
iret
xor
jg
add
icebp
jmp
sbb
lcall
rclb
add
sbb
jge
repz
xchg
ljmp
push
popl
push
jmp
lock
shrl
push
mov
js
xor
mov
arpl
loop
jb
repnz
sbb
mov
cli
jecxz
subb
jb
jmp
lods
mov
je
add
insb
das
cld
mov
sub
dec
bound
sbb
cs
outsl
mov
jbe
popf
rol
and
outsb
mov
call
jg
jb
mov
scas
xor
cmp
outsl
hlt
jno
std
jne
or
test
push
add
aaa
popf
cld
adc
lods
add
cmp
ret
inc
das
cmp
add
pop
popa
or
pop
dec
adc
repnz
inc
dec
lcall
repnz
inc
mov
push
das
cld
push
mov
push
loope
and
sub
xorl
std
xorl
sbbl
orl
mov
or
and
xor
imul
xchg
mov
xchg
addr16
cld
into
jnp
add
jle
sbb
out
mov
inc
or
jns
shr
pop
push
sbb
bts
and
cld
adc
and
add
inc
pushf
pop
add
lcall
xchg
ss
je
inc
or
push
setb
aas
in
aad
mov
fisttpll
enter
daa
popa
mov
mov
add
shlb
jg
and
and
cmp
adc
in
cwtl
and
roll
sub
in
cmp
xor
fcoml
sub
leave
add
in
ret
stos
jmp
push
notb
cwtl
pop
sbb
add
shll
and
sbb
shrl
add
and
mov
sub
jbe
js
add
aas
hlt
xor
jge
sbb
sbb
lret
les
add
mov
xor
in
lret
jecxz
movsb
dec
loop
loope
mov
sti
add
cltd
pop
je
cmp
mov
fs
jmp
andl
sub
add
add
adc
push
bound
sbb
test
xchg
enter
scas
lock
cltd
xrelease
das
or
mov
adc
sarl
mov
mov
sbb
push
push
mov
je
add
cli
pop
dec
mov
rolb
ljmp
push
sbbb
add
ljmp
test
push
rorl
xor
shr
or
gs
call
xchg
mov
std
je
es
add
add
ficompl
add
sbb
imul
add
sbbl
add
adc
pop
dec
aaa
inc
push
shrb
or
add
xlat
nop
call
mov
rcl
hlt
lret
addr16
fstpl
inc
cltd
jno
lahf
ret
push
adc
xchg
mov
repz
jle
std
ds
lds
and
xlat
xlat
xchg
push
sub
mov
std
shl
loope
add
pop
cld
fidivl
outsl
mov
sbb
add
sahf
mov
xchg
sbb
mov
cltd
dec
jl
sbb
cmc
xchg
cmp
adc
scas
jge
xchg
cmc
repnz
adcl
shrb
jmp
cwtl
loop
xor
mov
mov
mov
jo
dec
jp
repz
repnz
jl
mov
jl
jecxz
je
add
add
in
jmpw
xchg
inc
insl
rcll
add
pop
jg
aam
gs
in
mov
dec
xchg
pop
mov
ret
and
xor
es
and
mov
jp
push
xchg
inc
cld
pop
aam
jne
mov
shll
mov
cltd
insl
fsubrl
jmp
add
shrl
sti
filds
sub
fwait
cmp
add
repz
inc
mov
shlb
dec
mov
xor
xor
xor
sbb
inc
add
pop
mov
push
lea
lock
cmp
xchg
sbbl
es
cmc
jns
ret
incb
sub
adc
jno
add
test
jle
dec
add
push
daa
inc
je
cmp
add
in
adc
jmp
lock
ljmp
adc
xor
adc
clc
repnz
push
cmp
push
out
push
adc
stos
sbb
scas
fld
out
lods
out
add
inc
pusha
repnz
push
repz
je
rolb
dec
repnz
push
mov
fld
add
sahf
jno
add
dec
add
pop
std
xchg
fld
jg
mov
imul
adcl
rorl
xor
mov
lock
mov
mov
fsubs
cmc
cli
cmc
les
stos
add
out
stc
ja
cmc
test
ret
add
add
cmc
mov
adc
mov
mov
mov
cmpsb
stc
add
mov
js
in
xchg
js
or
ds
leave
push
add
js
pop
dec
bnd
xchg
jp
fldcw
stc
jmp
test
add
add
rorl
icebp
shll
or
or
add
shll
jbe
xchg
lahf
or
gs
add
sti
pop
dec
mov
inc
jmp
push
and
lahf
push
js
daa
je
test
dec
js
loop
jo
out
push
or
das
test
arpl
add
mov
je
add
les
push
std
adc
sub
or
iret
testl
sub
imul
xor
lea
jae
push
test
fs
sub
add
cli
sbb
add
scas
jmp
pop
popa
mov
or
movsb
ret
jne
or
call
test
jne
addl
mov
jb
push
or
fdivr
cld
fists
inc
push
sbb
std
xchg
add
push
jecxz
arpl
add
xchg
xlat
xchg
jecxz
inc
sbbl
inc
sbb
jnp
add
push
xchg
fdivrp
imul
add
pop
mov
inc
lret
fistl
add
ds
aas
push
aas
or
sbb
xor
add
sbb
xchg
sbb
sahf
or
mov
jecxz
inc
add
xchg
aas
add
decb
push
xchg
ljmp
outsb
push
icebp
fdivr
and
aas
cmc
iret
pushf
or
into
cwtl
lock
add
icebp
daa
jmp
popf
cmc
xchg
pushf
lock
test
movsl
add
test
add
xor
daa
ljmp
adc
and
rcrl
pop
repz
and
dec
cmp
pop
inc
ja
xchg
inc
leave
sarl
and
mov
movsl
popf
int
lret
lods
push
and
shrb
add
in
xchg
or
in
pop
lret
packssdw
push
add
sbb
imul
add
shlb
jne
cmp
movsl
and
out
push
cmpl
xchg
lds
or
leave
out
push
bound
rcr
push
cld
xor
leave
out
adc
pop
sti
aam
add
or
xchg
push
loop
aas
xchg
cmc
add
in
sti
shl
rorl
add
mov
and
or
imul
inc
add
mov
sub
ret
or
shll
icebp
jge
and
nop
repz
je
idiv
adc
sub
or
jb
push
push
xchg
and
clc
adc
pop
xchg
xor
icebp
add
push
adc
push
jge
js
sub
add
cmp
adc
jbe
inc
mov
add
add
pop
and
sti
stc
cmp
or
jae
inc
aas
push
mov
cmpsl
jmp
inc
enter
and
sarb
fcomp
sub
and
dec
add
mov
or
aas
push
inc
rep
xchg
jae
into
sti
add
mov
dec
jns
or
incl
add
or
push
inc
cmp
xchg
xchg
mov
sbb
xchg
mov
mov
ljmp
push
mov
mov
or
inc
pusha
ljmp
push
mov
jmp
mov
push
cmp
xchg
ret
pop
daa
rorb
mov
cmp
add
mov
add
mov
fisttpl
hlt
mov
push
not
push
push
stos
or
repnz
add
xor
scas
pop
mov
push
cmpsb
sbb
adc
or
jge
mov
inc
jbe
call
dec
mov
into
push
call
add
add
push
cld
insl
pop
movsl
sbb
inc
mov
imul
mov
add
int
add
push
inc
rcrb
push
lcall
adc
dec
jb
in
out
scas
call
and
mov
inc
fidivrs
and
notb
mov
adc
addl
shl
outsl
pop
and
jae
outsl
jns
lock
imul
mov
mov
hlt
add
stos
inc
mov
stc
mov
andl
jmp
in
pop
je
jne
test
add
hlt
daa
mov
add
je
sub
cmpsb
incb
push
add
cmpsb
inc
mov
or
inc
sub
xchg
inc
std
call
add
sbb
xchg
push
inc
dec
xchg
push
add
add
push
jg
sub
xchg
cmp
popa
test
dec
adc
jle
xchg
add
push
cmp
jle
repz
mov
add
ljmp
add
push
fidivs
xchg
adc
and
jae
adc
in
push
or
add
ljmp
add
xor
jne
icebp
imul
push
fisubrs
inc
xchg
das
out
add
rol
sub
fimull
push
aad
jmp
bnd
rclb
insb
sbb
add
xchg
call
lea
mov
idivl
jo,pn
shll
or
add
mov
aad
call
int
je
add
jg
and
push
es
movb
sub
and
lret
cmc
add
push
mov
xor
hlt
data16
xor
dec
shl
xor
add
imul
sub
cmc
jae
jmp
mov
add
cmp
ret
jecxz
or
imul
sub
lret
cmp
xor
xchg
inc
push
cld
imul
cmp
lret
dec
add
push
popw
mov
data16
mov
stc
iret
jns
push
inc
roll
in
jle
lcall
sub
xor
std
push
sub
sbb
pop
sbbb
es
jp
xor
push
and
mov
push
pop
sub
and
jp
pop
jns
mov
cmp
je
jns
pop
cmp
push
jbe
cmpb
xor
mov
mov
sti
dec
add
out
lcall
add
in
dec
add
and
add
sahf
or
cld
jg
adc
roll
ror
add
ror
add
ror
add
ror
add
ror
add
rorl
xchg
rorl
jno
dec
add
dec
add
rorl
mov
rorl
jmp
dec
add
shl
test
push
jb
add
add
jb
add
push
subb
and
push
repz
sti
push
push
rclb
es
pop
push
sub
aam
add
stc
lahf
mov
ljmp
push
insl
cmp
jno
xchg
aas
jno
add
push
push
popf
test
rcll
sbb
jmp
add
xor
xor
es
xor
xor
fidivs
adc
pop
int
in
mov
mov
out
jmp
xchg
sbb
andb
or
push
insb
jge
das
push
and
cmpsl
lods
and
or
or
mov
xchg
add
xchg
jae
dec
stos
add
add
leave
lock
push
icebp
or
out
jmp
subb
out
shl
adc
push
push
and
add
xchg
sbb
sti
mov
adcb
lock
jb
orl
jecxz
pmaxsw
sti
ljmp
clc
mov
add
mov
xor
or
add
add
mov
add
sbb
jp
push
movq
push
add
push
and
lock
cmp
or
push
xor
mov
xor
push
shlb
xchg
push
decb
dec
push
js
cmp
rcll
js
das
add
adc
add
shrb
adc
mov
add
add
stc
xor
jl
inc
or
orb
addl
add
adc
or
add
jle
adc
add
pop
or
xchg
or
cmpsl
arpl
cli
jg
xor
jae
push
inc
jmp
adc
or
icebp
or
jl
add
aas
pop
cmp
popf
out
mov
add
dec
insb
jg
xchg
adc
or
lods
lock
loop
test
or
fisubrl
in
sbb
lods
fstp
nop
int
jl
in
mov
int3
lods
add
int3
pop
lcall
insb
sahf
loope
and
loopne
push
bnd
int
jp
int
test
loope
pusha
jmp
add
add
int
ret
dec
or
aas
lods
and
cmp
lods
and
daa
stos
or
adc
in
outsb
xchg
fcoml
ret
sarl
movsl
pushf
stc
or
adc
push
out
xchg
or
std
test
int3
movb
sub
sub
push
and
daa
cmp
xor
jns
lcall
add
add
add
test
dec
push
cld
push
aam
jmp
push
jno
add
pop
addb
add
add
cld
incl
adc
jmp
je
sti
add
cmp
lods
nop
sbb
into
cmp
or
or
mov
lock
adc
and
pop
cmp
hlt
add
add
ja
cmp
mov
sti
push
jne
mov
and
or
xchg
inc
and
or
jp
clc
xor
add
push
loopne
add
pop
hlt
fcompl
cld
cld
shr
clc
cld
rcll
push
or
lahf
jg
sbb
orl
adc
movl
or
test
add
push
fdivrs
or
sbb
jp
sbb
or
sub
add
adc
call
mov
or
cmp
pop
jnp
push
sbb
xchg
sbb
out
icebp
cmc
add
daa
xor
clc
sbb
insl
jb
aam
js
hlt
push
mov
fldl
push
jno
inc
clc
and
add
mov
inc
fcomps
jmp
fstps
add
pop
xchg
mov
inc
mov
add
divb
repz
push
out
push
xchg
mov
clc
dec
push
pusha
mov
dec
sbb
divl
rcrb
inc
adc
add
ffreep
daa
push
std
jmp
imul
cs
fmull
or
push
jno
mov
cltd
mov
pop
dec
mov
iret
fisttpl
mov
dec
arpl
shll
pusha
sbb
test
rcrl
xor
scas
push
push
add
testl
out
aam
pop
jmp
and
or
jmp
xchg
hlt
jae
add
mov
lcall
mov
add
mov
jae
add
ljmp
sarl
add
cmp
je
jo
and
cs
add
insb
mov
lsl
or
jp
stc
or
lock
shl
jno
add
add
loopne
adc
jmp
mov
add
add
jo
or
test
pop
sbb
xorb
dec
dec
dec
orl
mov
push
cli
inc
pop
dec
cwtl
inc
or
cmp
pop
fwait
or
movsbl
pop
dec
push
push
push
dec
add
testl
mov
je
shlb
je
shlb
inc
inc
jae
lea
or
lret
add
push
xchg
pop
sbb
js
lret
sbb
dec
lea
add
pop
lret
adc
sub
pusha
push
pop
test
pop
ss
test
dec
mov
xor
mov
jmp
adc
in
mov
sbb
loope
dec
cmp
add
cmc
mov
dec
mov
push
or
cli
gs
dec
icebp
jmp
mov
adc
cmpsl
add
push
lret
ja
add
inc
adc
xor
push
icebp
add
lock
cmp
jne
call
dec
jle
imul
or
pop
xor
add
pop
adc
mov
pop
icebp
add
mov
add
or
jmp
inc
movsl
andb
xor
scas
mov
adc
test
jno
call
or
jecxz
adc
pop
add
icebp
ret
out
jmp
mov
add
jne
inc
cmp
cmc
ret
fsubp
nop
sub
add
jp
sti
push
ja
push
add
je
inc
std
jns
or
hlt
ret
imul
jae
or
je
je
add
flds
in
or
in
je
push
xchg
ret
lock
maskmovq
push
add
inc
push
mov
add
rep
and
add
cmp
pop
cmp
or
lcall
mov
or
jmp
push
xchg
pop
pop
push
sbb
push
pop
sbb
orb
or
or
pop
mov
jno
pop
push
sbb
rcrb
addl
xchg
or
add
add
test
adc
add
fcmovb
out
jge
cli
xchg
icebp
insb
xchg
push
icebp
jmp
lea
add
icebp
jmp
out
les
in
sub
and
or
ja
jno
cli
imul
xchg
lock
jmp
aam
fldcw
test
jo
add
inc
idivb
aad
inc
aam
push
sub
cwtl
or
push
jp
pop
rolb
fisubrs
fisubrl
mov
xchg
jge
mov
fiadds
popa
adc
int
jno
int
out
int
notl
pop
jno
lds
icebp
jmp
imul
add
rorb
dec
not
cmpsl
or
push
das
inc
call
add
je
out
push
icebp
add
hlt
test
xchg
push
and
jmp
int
std
xchg
fildll
inc
call
push
icebp
addb
add
cmpsl
push
push
and
in
add
rorb
sub
aad
std
dec
xchg
sub
jnp
jecxz
insl
icebp
add
xchg
insb
lcall
xor
push
ret
add
lods
loope
inc
cmp
jecxz
sub
or
cld
scas
sti
sub
jle
add
jp
rolb
or
decl
in
mov
adc
add
or
mov
lock
mov
cld
incl
lcall
push
or
mov
mov
add
push
in
adc
or
adc
add
mov
rcrb
push
mov
or
cwtl
call
js
pop
sbb
enter
fidivrl
rolb
sbb
inc
push
fdivl
shlb
or
out
jg
dec
or
push
dec
inc
add
les
push
adc
rolb
dec
sbb
adc
or
add
sbb
mov
jbe
lret
divb
gs
mov
or
or
pop
in
push
add
mov
pop
test
aaa
mov
push
ret
ds
add
push
add
faddl
mov
push
push
icebp
ret
inc
push
lds
add
dec
lds
int3
xor
nop
cmp
icebp
jmp
ljmp
out
push
out
imul
hlt
add
jmp
int
jge
push
hlt
test
mov
or
add
xchg
lods
fildll
add
push
add
mov
push
les
cld
jmp
into
cmp
test
add
add
cmc
out
sub
rorb
jb
ret
imul
inc
jmp
dec
hlt
test
xchg
out
push
nop
add
add
fisubrl
addb
fidivs
lods
aas
lret
cmp
es
mov
fimuls
jmp
or
push
jp
inc
add
mov
jne
add
lea
lret
cmp
or
push
sbb
mov
sti
pushl
or
ljmp
jne
and
cmc
ret
cmc
jecxz
daa
cmc
add
mov
sti
andl
add
popa
mov
test
into
and
js
push
mov
push
or
pop
or
add
add
cmp
outsl
pop
add
shrb
sbb
push
mov
cmp
inc
inc
or
mov
or
add
mov
sahf
shl
and
iret
add
ljmp
testl
push
or
rcrb
adc
adc
dec
aaa
es
inc
push
mov
or
xor
add
push
mov
xor
sub
lret
push
icebp
jmp
sti
inc
int
dec
ja
pop
aas
outsl
loope
ret
sub
jg
sub
imul
mov
mov
call
add
out
pop
jmp
das
in
in
fcomi
jmp
jo
aaa
movsb
add
or
scas
out
adc
or
add
mov
and
rclb
add
nop
push
push
in
icebp
cmp
push
or
mov
mov
add
dec
aas
shrb
cltd
pusha
gs
das
in
icebp
cmp
std
cmc
ret
out
jmp
std
repz
sub
and
cmovae
add
sarl
std
add
push
aaa
inc
call
cmp
sti
jb
in
test
cmp
sti
out
pop
in
mov
push
imul
jo
cli
in
insb
mov
add
sti
ljmp
add
icebp
sub
jmp
jmp
add
stos
or
sti
lcall
xorb
or
add
clc
xor
add
and
push
or
lcall
dec
mov
imul
cmp
adc
adc
cmp
or
add
xchg
cld
push
xchg
loope
push
or
dec
orl
push
dec
inc
add
les
sbb
incl
movsb
aad
add
sarl
inc
push
or
jg
adc
andb
add
cmc
add
push
xchg
or
inc
inc
pop
adcl
shr
mov
push
icebp
add
push
or
inc
push
cmpb
shl
or
and
mov
sti
cltd
mov
add
adc
pop
jno
pop
dec
jbe
add
add
push
icebp
mov
iret
push
icebp
jmp
inc
push
jno
std
pop
je
icebp
sti
fidivrl
cmp
je
cmpsl
jo
cld
dec
jbe
add
push
loop
lahf
push
icebp
jmp
mov
add
repnz
inc
lods
add
push
repnz
test
insb
jg
icebp
jmp
xchg
jmp
add
add
add
mov
add
shr
add
fwait
out
add
sbb
call
shr
add
aad
jne
data16
and
push
inc
rcrl
add
ficoml
push
or
out
add
pop
sub
ds
cmp
add
out
push
pop
sti
xlat
stc
push
out
add
loopne
bound
in
push
add
shr
test
icebp
add
rolb
sbb
adc
cmp
jg
sub
add
jl
or
adcb
mov
adc
es
jl
stc
lock
adc
imul
inc
add
in
and
orl
add
jo,pn
add
hlt
cmpsl
sti
cmp
inc
sti
jp
repnz
imull
std
ljmp
sbb
bound
sub
jecxz
insl
add
adcl
sbb
clc
mov
or
lret
adc
xchg
add
rcr
mov
std
inc
xchg
add
sti
mov
dec
xchg
push
or
add
mov
out
inc
adc
inc
push
cmp
inc
push
or
or
mov
inc
add
xchg
jmp
fs
cmp
adc
or
adc
or
add
dec
cld
mov
call
or
lret
lods
adc
lret
inc
sub
add
pop
xchg
icebp
incb
add
jg
add
cmpsl
and
push
add
pop
push
add
sbb
add
lahf
add
mov
cmpb
shll
and
rorl
fnstsw
jno
and
out
xchg
lods
add
or
dec
pop
insb
mov
cmpsl
pop
push
add
add
sbb
mov
jp
loope
addb
int
ret
inc
out
ljmp
add
adc
shll
mov
push
andb
idivb
ret
clc
jae
pushf
mov
flds
scas
adc
push
je
sub
and
cmp
push
jb
cmc
shll
push
arpl
add
out
mov
mov
into
jge
scas
into
or
pushl
pusha
and
in
jmp
imul
call
data16
sub
add
add
and
js
and
jns
cmp
leave
and
outsl
pop
in
incl
xchg
cli
hlt
jg
ljmp
rol
fiadds
mov
in
iret
add
xchg
mov
sbb
js
dec
outsb
mov
pop
mov
add
lods
adc
rcpps
les
out
cld
addl
push
call
inc
adc
sub
inc
adc
cmp
inc
inc
es
or
out
jno
xchg
repz
leave
les
and
push
add
add
xchg
adc
push
loop
call
add
cmpl
xchg
push
int
xchg
xchg
lock
jmp
lret
les
cld
pop
icebp
insl
xor
hlt
cmp
popa
hlt
inc
jle
faddl
inc
ds
cmc
dec
hlt
outsl
inc
pop
int
clc
addr16
jge
fadd
mov
jno
add
movsb
adc
jae
andb
ljmp
addr16
fucomp
outsl
and
xor
and
pushf
add
aaa
das
fstpl
jg
repz
jge
fmul
jg
in
popa
inc
inc
sti
sub
es
setle
add
ja
leave
push
jge
jb
in
test
in
int
mov
dec
movsl
and
imul
add
add
imul
enter
xchg
fdivrl
rcll
jge
pop
icebp
je
popf
mov
insb
adc
bound
cmp
cld
mov
outsb
lods
adc
xchg
fdiv
das
inc
je
fs
sti
cmpsb
inc
scas
adc
or
or
add
arpl
add
int3
xchg
in
icebp
xchg
out
adc
xchg
out
push
xchg
out
mov
xchg
in
sbb
jmp
orl
jmp
mov
mov
in
add
sub
add
cmp
push
mov
in
push
mov
in
add
add
jnp
push
mov
push
mov
push
mov
add
fmul
add
fmul
add
enter
enter
fmul
add
fmuls
leave
enter
enter
fmuls
or
iret
dec
add
dec
add
cltd
lcall
iret
cltd
decl
xlat
cltd
decl
into
cltd
jmp
ret
cltd
lcall
rcrl
mov
add
sbb
sub
sbb
call
rcrb
add
add
std
loop
sub
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
add
add
add
add
add
jnp
in
adc
mov
push
test
sldt
cmpsb
jl
pop
scas
mov
in
and
icebp
jmp
jo
je
pusha
insl
sub
outsl
pop
jnp
ret
in
repnz
pusha
add
dec
adc
clc
shr
add
adc
ficoml
loopne
push
add
pop
aas
push
addb
icebp
jb
cmpsb
cmc
adc
and
seto
add
in
in
outsl
add
insl
in
sti
pop
cwtl
or
test
testb
or
lock
arpl
test
jl
adc
ljmp
add
or
pop
adc
shrl
in
push
cld
xchg
test
rclb
addr16
add
cld
xchg
cmp
jl
scas
jb
sbb
cmpl
cs
lret
sbb
mov
ret
lods
mov
lcall
call
push
add
imul
dec
xor
xor
test
and
sub
outsl
pop
pop
cs
add
repnz
or
mov
pop
add
mov
ds
imul
jmp
add
adc
clc
jmp
in
aam
call
inc
xlat
jb
mov
out
push
push
xchg
addb
adcl
ljmp
push
cmp
stc
inc
push
std
les
or
and
push
jmp
lret
aas
add
sbb
xor
jmp
mov
lock
add
add
add
data16
push
pusha
cmc
jg
repnz
loope
jb
icebp
data16
repnz
sbb
insl
push
jo
or
insl
pusha
add
in
sbb
call
pop
fdivrs
xchg
sbb
xchg
adc
add
mov
popl
clc
inc
push
push
push
jecxz
jbe
pop
sub
lods
or
add
mov
in
push
jo
repz
mov
mov
jp
mov
pop
js
jecxz
add
dec
incl
insl
push
in
add
fisubrl
stc
inc
loop
std
cmp
pop
std
inc
push
inc
addr16
icebp
incb
and
dec
lret
icebp
push
bound
int3
lock
icebp
dec
aas
push
in
sti
jmp
add
push
je
int
shll
faddl
pop
or
mov
mov
sti
adc
cli
adc
mov
ret
in
sti
es
adc
add
push
add
sub
jl
mov
sbb
inc
push
jmp
jae
je
and
cmc
je
dec
mov
sar
xchg
add
out
shlb
mov
mov
ljmp
outsb
sti
mov
push
jmp
cmp
outsb
and
inc
add
cmp
dec
inc
mov
add
push
xchg
pop
mov
jge
add
jns
rorb
dec
and
add
push
test
sbb
xchg
and
mov
add
mov
jmp
push
std
in
push
rorb
loop
fdivl
xchg
push
fdivr
mov
insb
pop
cwtl
loope
stos
stc
loope
lods
pop
push
and
dec
cmp
movsl
push
sbb
push
or
fdivl
call
iret
pop
adc
ljmp
mov
mov
pop
pop
add
pop
and
add
push
icebp
jmp
add
sub
push
icebp
adc
push
icebp
jmp
push
data16
pop
enter
sub
icebp
jmp
inc
push
icebp
xor
add
insl
add
xor
or
fbstp
subl
or
insb
mov
push
fldcw
inc
push
icebp
insb
add
pop
jle
aas
add
mov
add
jl
test
sub
add
xor
sti
adc
repz
push
inc
lret
shlb
lods
add
adc
xchg
jmp
ljmp
mov
mov
ret
cmp
cld
adc
lods
jae
xor
popf
cmc
shll
jmp
add
sbb
call
pusha
adc
mov
outsb
pop
jge
jb
je
in
pop
or
push
push
je
sti
pop
int3
cmpsl
je
jge
std
dec
sti
fsubr
add
incl
jecxz
mov
cld
mov
mov
push
cld
inc
dec
cmc
call
loopne
xchg
sub
jnp
repnz
mov
ja
cli
cmc
inc
enter
add
add
icebp
push
cmc
das
inc
lock
scas
cmp
in
sbb
push
call
cmp
mov
rolb
outsb
in
loop
loope
add
mov
mov
mov
mov
fcmovnbe
ds
mov
adc
push
enter
inc
pop
fs
push
lahf
mov
push
fimuls
add
pop
add
clc
push
mov
cwtl
pop
inc
lock
fdivr
fisubrl
mov
inc
clc
jmp
add
push
dec
shlb
inc
hlt
fcoms
cld
push
pushf
fmull
sarb
jp
fucomp
adc
inc
lock
cmp
mov
pop
flds
push
icebp
mov
xor
aad
adc
movw
add
add
sub
js
mov
imul
into
fsubs
das
push
mov
sub
pop
adc
arpl
fcoml
repnz
and
push
xor
adc
aam
lods
rcr
push
icebp
jmp
mov
stc
sbb
out
jmp
cmc
push
js
in
pop
bnd
add
add
sub
xchg
and
test
jnp
push
mov
daa
fnstcw
push
inc
mov
jno
call
cmp
or
ret
xchg
push
insb
xor
in
xchg
rcr
je
xlat
and
fcomi
sbb
jg
in
loop
repz
jmp
aas
in
xchg
sbb
sti
mov
add
gs
pop
je
mov
lock
cmp
pop
xor
sub
xchg
sbb
call
icebp
mov
xor
add
push
push
icebp
scas
jecxz
adc
add
cmpsb
jecxz
mov
cld
mov
or
add
out
xor
inc
xchg
arpl
sub
pop
pop
cmp
push
cmpl
add
add
or
xor
jno
jle
je
subl
add
sbb
cmp
xchg
inc
sub
dec
jne
and
pop
stc
adc
xor
adc
ss
lret
in
push
pop
xor
imul
dec
or
push
xchg
fadds
push
and
nop
push
ret
add
sti
jnp
pop
cmp
jl
mov
fmuls
add
sbb
pop
frndint
hlt
push
lds
mov
and
shlb
mov
adc
mov
add
add
cmp
pop
dec
inc
and
icebp
outsb
inc
push
jbe
add
sbb
inc
mov
cld
les
fnstcw
jmp
push
inc
push
push
mov
add
hlt
in
bound
imul
add
sub
pop
push
insb
mov
dec
inc
outsl
dec
outsl
jmp
loope
shlb
jmp
add
mov
mov
je
repz
insb
stc
mov
jmp
mov
jmp
mov
iret
jne
pop
iret
test
add
and
and
xchg
fidivs
icebp
pusha
push
cmp
add
jbe
pop
jmp
mov
stc
jo
fnstsw
sbb
pop
sub
imul
adc
mov
nop
icebp
jg
pop
je
mov
enter
adc
cmp
mov
call
pop
arpl
bound
mov
ljmp
mov
in
pop
add
add
jge
fnstenv
cmc
add
xor
cmp
add
add
scas
xor
ja
cld
cli
hlt
pop
pop
inc
scas
roll
ds
out
mov
lods
pusha
cmc
push
call
shrl
push
popf
push
mov
and
inc
pop
add
std
gs
jg
xor
inc
or
leave
add
and
xor
push
jg
jle
mov
imul
sar
cmp
push
add
into
arpl
push
or
sbb
add
inc
push
or
dec
or
mov
cld
sbb
mov
mov
shl
mov
aad
lret
mov
inc
cmpl
add
mov
lret
adc
xchg
aas
push
dec
rorl
enter
movsl
mov
mov
or
jl
enter
mov
pop
imul
insb
inc
outsl
inc
cmp
popa
pop
hlt
inc
push
jb
pop
shlb
loop
mov
sbb
lahf
jle
jg
arpl
sbb
in
adc
add
ljmp
aad
dec
faddl
jb
pop
xchg
xor
inc
cmpsb
mov
and
icebp
mov
and
jo
rcpps
imul
into
sub
gs
adcb
fs
pusha
or
lahf
fistpl
add
fdivr
out
pushf
or
jo
pop
imul
fstpl
add
add
shll
and
xlat
adc
jg
push
mov
sahf
push
out
mov
imul
pop
or
in
add
push
push
mov
dec
mov
outsb
push
addr16
and
lret
fsubl
push
inc
mov
out
fisttpll
inc
in
mov
ljmp
inc
loope
leave
mov
jmp
mov
sub
xrelease
add
cmp
cmp
xlat
in
and
push
popa
mov
out
mov
mov
mov
xor
push
pop
add
mov
push
or
sbb
call
push
flds
inc
mov
adc
jmp
sub
inc
mov
bnd
test
popf
roll
shr
add
fcmovnb
in
pop
add
or
incl
push
inc
add
das
mov
aas
add
or
adcb
cmc
inc
rorb
dec
fcmovnbe
nop
rcrl
or
enter
pusha
jbe
push
dec
sbb
pop
clc
and
dec
ljmp
lcall
or
pop
iret
mov
fists
testb
inc
mov
adc
adc
repz
out
aam
leave
mov
stc
add
jl
les
lock
loopne
insb
mov
shl
lods
fldt
bnd
int
leave
ljmp
insb
and
adc
cld
dec
gs
test
icebp
adc
mov
fldl2t
cmp
add
imul
lcall
mov
jg
in
xchg
in
jp
shr
jae
pop
inc
imul
ljmp
jle
jmp
pop
leave
sub
rcl
cltd
inc
add
gs
insl
and
sti
mov
mov
sti
adc
jb
rorl
sub
js
add
pushf
lahf
ljmp
xlat
sti
into
fdivr
sub
cli
jns
lret
fwait
dec
add
test
insl
call
icebp
data16
shll
xchg
mov
push
test
imul
ja
inc
jge
pop
jns
test
lea
sti
push
adc
fs
add
mov
pop
arpl
add
cmp
push
je
out
inc
add
cli
sbb
cmp
push
xor
std
mov
jg
pop
andb
lods
jg
xor
add
clc
mov
add
iret
sti
inc
stos
mov
adc
js
pushl
xlat
cld
adc
jmp
lret
mov
in
add
xor
mov
adc
add
pop
adc
mov
fiadds
jle
cmp
push
jmp
leave
addl
mov
jbe
cmp
or
inc
and
movb
gs
push
adc
dec
clc
jnp
outsl
clc
int
xor
mov
data16
sbb
sbb
jmp
add
cmc
aas
push
arpl
addr16
dec
inc
or
xor
bound
mov
jno
add
pop
rcrl
fs
out
test
pushf
data16
mov
clc
addl
dec
fidivrl
or
cltd
int3
mov
jb
cmp
out
int3
ljmp
add
xchg
inc
sbb
imul
lret
imulb
ljmp
add
cs
js
dec
hlt
inc
push
fidivs
divb
mov
ret
cmp
xor
sub
iret
pop
xchg
sub
pusha
jb
add
mov
pop
jae
or
dec
jb
aam
sub
xchg
or
pop
ret
xchg
out
or
repnz
lock
jg
add
in
or
jbe
inc
mov
dec
cs
cmp
out
or
scas
in
jg
fwait
dec
or
cmp
sarb
orl
pop
cmp
jne
mov
jmp
adc
push
in
cmp
fistl
je
incl
add
pop
mov
scas
sub
pop
ficomps
test
push
lds
xor
add
push
adc
push
jmp
enter
push
aas
or
imul
loopne
adc
stos
inc
decl
xchg
sub
jmp
pop
push
push
ret
pop
lcall
subb
inc
add
dec
mov
cmc
aas
push
xchg
dec
insl
shlb
roll
pop
pop
dec
sarb
lahf
push
enter
dec
mov
std
and
mov
cli
mov
iret
or
fidivrs
filds
decl
inc
in
faddl
xchg
cmp
andl
cmp
std
imul
add
fdivr
test
mov
jle
pop
and
rclb
hlt
cli
in
push
rcll
add
push
jl
dec
pop
mov
dec
fs
movsb
leave
or
data16
sahf
jmp
sar
jl
and
mov
jmp
repz
sub
pop
push
rcrb
ss
push
icebp
pushf
jl
insl
add
add
add
les
xor
mov
pop
inc
inc
insl
test
and
push
in
leave
sub
or
inc
aam
add
pop
pusha
push
or
addb
aam
int
fnstcw
les
into
test
lea
cld
aad
adc
in
int
clc
jae
mov
clc
lock
je
mov
sbb
in
add
push
xor
in
pop
inc
jmp
icebp
adc
jns
fnstsw
push
mov
push
icebp
xchg
icebp
add
mov
adc
adc
sti
push
jae
jne
dec
mov
sbb
and
aas
leave
cld
jne
mov
adc
dec
fistps
adc
jp
cmpsb
repz
imul
std
jne
add
outsb
and
and
call
cld
jne
mov
adc
and
dec
push
lcall
loopne
inc
ljmp
mov
add
cmp
and
add
repz
mov
add
repz
add
sub
movsb
mov
cmp
fld
xor
cmpb
fldcw
call
add
and
ret
adc
adcl
call
push
pop
push
call
ret
mov
push
and
cs
jle
in
cli
nop
fdivs
inc
pop
xorl
add
test
cmc
imul
out
call
ret
test
dec
inc
fcomps
cli
fisttps
add
filds
inc
sbb
push
rcl
add
push
loope
arpl
jg
int3
mov
adc
bnd
aad
lds
adc
xchg
add
jmp
inc
push
je
dec
popa
pop
ljmp
inc
push
lds
xor
les
loop
add
outsl
aas
aas
sub
ret
xchg
js
fsubs
test
mov
xor
adc
add
pushf
js
in
sub
sub
sti
je
int3
adc
aaa
xchg
inc
adc
int3
jne
xchg
inc
or
movsl
in
imulb
push
js
insb
popl
fs
inc
push
insb
xchg
push
icebp
je
rorb
jmp
push
xor
hlt
fistl
int3
aas
jmp
insb
ds
jmp
nop
icebp
test
add
test
xchg
pop
pusha
call
adc
popf
divl
stc
push
xor
adc
add
adc
and
dec
dec
and
sub
cmp
or
pusha
mov
cli
cs
mul
mov
mov
es
mov
lea
adc
add
testb
add
int
or
incb
call
xorl
ret
dec
mov
ds
adcl
push
in
mov
xchg
add
popa
cmp
adcl
push
mov
int3
lret
pop
inc
sbb
push
leave
or
cltd
push
test
fcos
mov
push
dec
clc
sbb
xor
add
fimull
push
cmpsl
mov
in
sarb
jb
loopne
pop
mov
cs
loopne
push
pop
cmp
mov
cwtl
incl
cmpsl
lods
dec
jg
adc
jno
das
or
loopne
add
out
out
inc
cltd
testb
adc
sub
movsb
mov
inc
cmc
out
xor
jp
add
lret
int3
inc
fbld
dec
stos
inc
in
mov
leave
ficompl
lock
adc
sahf
add
out
fadds
movsb
pop
loope
movsl
mov
lea
inc
mov
mov
sbb
jbe
icebp
movsb
push
leave
inc
pop
lods
dec
es
mov
lods
mov
jnp
add
push
icebp
jmpw
lcall
out
push
adc
div
xor
mov
lods
or
in
iret
cs
dec
fdivs
or
clc
push
inc
pop
adc
dec
jo
cmc
xlat
int3
add
test
mov
xchg
int3
xchg
and
xchg
sub
sti
sahf
iret
int3
adc
push
icebp
add
imul
jne
je
mov
adc
jl
add
nop
icebp
jg
push
je
out
mov
cmc
mov
testl
mov
test
sar
iret
mov
cld
sub
jecxz
mov
fwait
push
inc
mov
push
and
mov
add
add
das
lods
outsb
add
out
ret
ret
pop
xchg
lret
mov
xchg
stos
mov
push
icebp
addb
add
idivl
std
push
ror
popa
add
xrelease
jle
aas
lock
mov
jl
adc
push
jmp
adcl
jb
mov
pop
adc
cmp
push
xchg
mov
push
or
fistpll
clc
imul
stos
std
les
add
sbb
push
rolb
test
incl
add
xchg
and
add
stos
push
fadds
cld
push
jle
ret
sbb
inc
shrl
inc
inc
pop
pop
pop
mov
lods
dec
mov
fiadds
test
adc
and
imul
sbb
popf
and
lret
cmp
mov
inc
mov
inc
shrb
es
dec
jb
out
aad
push
mov
add
fidivrl
cmp
divb
mov
pop
ljmp
leave
call
or
icebp
pop
pushf
fdiv
jmp
shlb
push
insl
test
mov
je
xchg
mov
dec
cmp
gs
shl
push
testb
pop
cmc
mov
jg
inc
in
hlt
mov
push
and
add
add
xor
out
jmp
fwait
scas
mov
adc
push
icebp
dec
mov
daa
fyl2xp1
mov
xchg
ret
les
je
add
sarb
sub
adc
or
int
fwait
mov
les
pop
jmp
xchg
test
mov
enter
jp
popa
mov
add
add
and
adc
sub
jl
xor
xorl
jg
repz
xorl
clc
jb
cltd
add
movsb
sbb
add
lock
lea
and
decl
fisubl
lock
ja
enter
test
mov
pushl
jne
int3
repz
cmp
imul
push
fdiv
xor
add
xchg
xor
lds
push
lock
fimull
push
in
lock
mov
scas
fcoms
incl
sahf
mov
shrl
insb
push
xor
jne
into
or
popa
add
push
lods
cld
dec
cmp
sbbb
cli
cld
or
xorb
xorb
add
dec
stos
add
push
notb
add
pop
fsub
sbb
pop
and
ret
sbb
mov
mov
mov
push
adc
add
icebp
insb
ret
loopne
and
push
push
or
repnz
sahf
add
icebp
out
imul
sbb
sub
sub
cmpsl
call
mov
cmpsb
call
dec
and
cmp
add
lods
cmp
outsb
inc
out
push
adc
ja
jmp
mov
mov
xchg
add
or
push
icebp
pop
inc
mov
mov
dec
jg
repnz
ret
push
sub
xchg
add
loop
sub
xor
seto
bound
xchg
lea
cs
add
xchg
sub
sub
or
add
fcompl
leave
lods
out
sub
xlat
xor
iret
adc
bound
xchg
lea
aad
mov
fisubrs
adc
or
xchg
jg
dec
push
add
lret
negb
rcrb
call
bound
sti
sbb
xor
and
pop
test
inc
in
les
add
add
outsb
adc
add
pushl
jp
test
adc
xor
cmc
add
fsts
lahf
sub
jmp
jns
call
outsb
mov
sbb
clc
mov
popf
ja
sub
jns
push
gs
test
jg
stos
hlt
add
pop
je
add
hlt
call
add
add
mov
test
add
or
mov
hlt
jnp
push
add
fnstsw
je
xor
data16
adc
mov
dec
std
inc
or
or
or
push
mov
fcoms
cmp
mov
or
in
in
add
cmp
pop
sbb
add
push
fisubrl
call
mov
repnz
iret
movsb
into
cmpsb
add
test
mov
rcrl
and
loop
icebp
jmp
mov
insl
cmp
insb
mov
add
je
mov
insb
and
pushf
leave
mov
icebp
gs
rcr
adc
inc
xchg
inc
cmp
sub
or
add
sub
add
inc
ds
and
add
test
mov
xchg
leave
outsb
inc
mov
jae
mov
mov
jmp
mov
push
leave
imul
mov
stc
cs
lea
push
inc
out
and
aam
out
jmp
pop
inc
or
shlb
push
icebp
aaa
and
inc
loope
pop
jno
loope
inc
or
insb
jmp
inc
icebp
push
leave
imul
mov
push
pushf
push
icebp
add
mov
je
inc
jmp
xchg
jmp
data16
jbe
cwtl
lret
push
out
xchg
and
pop
inc
cmc
add
add
lea
sti
jnp
sub
jp
std
jne
mov
into
lods
test
jne
mov
into
fldl
pop
pop
add
ljmp
cld
and
sub
lret
imul
push
xlat
sub
xor
xor
lock
push
sub
or
cmpb
ret
add
sahf
mov
cmpsl
loop
lret
scas
cld
sbb
fwait
scas
inc
rorb
xor
or
add
cld
hlt
xor
shll
add
cmp
xor
shlb
jae
hlt
jnp
push
in
jmp
inc
les
xor
and
or
repnz
insl
jne
mov
dec
arpl
xchg
sti
add
add
add
aaa
mov
lock
inc
repz
out
popf
xlat
es
xor
addr16
push
leave
jae
push
icebp
pop
mov
ret
popa
mov
cmp
or
sbb
xor
xchg
icebp
bnd
jo
decl
ds
ror
aam
aas
inc
push
lahf
push
inc
cli
orb
add
xchg
icebp
data16
pop
jno
mov
aas
fisubrl
add
lret
sub
xor
sub
xor
sub
xor
je
sbb
fcmove
data16
sub
add
mov
jne
jmp
pusha
in
test
icebp
add
or
cld
aam
jecxz
jmp
pop
in
jg
ret
rcll
jmp
push
mov
mov
add
add
cmp
inc
adc
or
add
adc
xchg
leave
cmp
or
and
clc
ss
dec
cmp
xchg
clc
inc
add
and
popl
ljmp
add
std
jne
pop
jb
gs
pop
push
push
cmp
dec
pop
int3
movsl
xorb
lds
adc
add
mov
stc
pop
adc
pop
icebp
andl
in
xchg
sbb
cld
test
fldl
jecxz
cld
test
add
aad
adc
pop
cmp
or
in
pushl
outsb
hlt
subb
hlt
popf
xchg
out
mov
dec
jmp
jmp
mov
call
add
mov
pushf
mov
mov
aas
imul
adc
add
mov
pop
push
push
or
sarb
add
and
fisubrl
add
lea
mov
faddl
push
or
pop
fdivrs
and
loopne
sarb
icebp
mov
sti
add
imul
push
mov
mov
leave
sub
push
jmp
sbb
icebp
add
sub
dec
mov
loop
scas
or
scas
call
sub
push
insb
movsl
out
cld
sub
add
jo
dec
dec
stos
fistpl
and
push
leave
xchg
mov
push
icebp
sbb
push
lds
inc
dec
jno
cld
add
xor
push
outsl
mov
in
stos
mov
add
cmp
pop
sub
sti
jmp
hlt
pop
inc
xchg
pusha
add
xchg
cltd
dec
xor
or
add
pop
push
xchg
jne
das
sub
into
jmp
add
sbb
or
inc
lds
mov
cli
mov
imul
dec
add
jb
sti
insl
imul
test
icebp
add
push
icebp
push
insb
mov
sti
mov
jne
add
test
push
cmp
pop
sarl
push
in
sbb
mov
sub
push
imull
enter
cmp
out
enter
cmp
cmp
mov
dec
jmp
je
add
jo
sub
pop
cld
je
fld1
pop
rolb
fsubp
std
ljmp
xor
or
incl
jnp
ljmp
jb
sbb
fs
test
mov
rcll
jle
addr16
jmp
xor
jle
ja
notl
lock
xchg
add
ja
rsqrtps
aam
in
dec
push
cmp
mov
pop
adc
sbb
lcall
xchg
icebp
jp
cmpsl
call
enter
roll
add
cmp
pusha
sbbb
xchg
xchg
push
cmp
mov
imul
das
enter
rolb
add
pop
mov
jno
mov
push
adc
jmp
stos
out
enter
mov
add
stos
insb
cmp
enter
mov
ret
mov
inc
rclb
js
rclb
cmpsl
inc
ljmp
icebp
data16
sbb
or
and
lret
xor
fwait
js
jmp
xor
sbb
cmp
add
stc
aas
icebp
rorl
cmp
jmp
dec
add
push
push
movsl
lahf
aas
jmp
jbe
das
mov
mov
jne
mov
gs
inc
pop
lret
cli
dec
fldl
mov
shll
push
out
movsb
fdivl
jl
sub
inc
add
jo
lds
jl
in
cmp
add
add
leave
fisubs
jge
call
add
add
rorl
in
add
cmp
add
add
jmp
add
jge
gs
cmpl
pop
mov
stos
imul
mov
jl
sub
jle
sahf
mov
inc
xorb
cmp
out
push
jno
inc
bnd
test
jmp
add
mov
add
xchg
push
cwtl
xchg
mov
push
adc
push
adc
cmp
push
mov
data16
inc
push
sbb
or
jbe
sbb
sub
loopne
cmc
insb
out
subl
sub
lret
jmp
add
dec
jl
pop
sbb
jl
andl
out
aaa
test
orb
call
gs
lea
jb
adc
out
add
cld
lret
adcb
decl
xor
outsb
insb
in
icebp
jmp
cmpsb
pop
in
insl
mov
ljmp
es
shll
mov
jb
add
add
add
push
add
xchg
icebp
data16
sbb
sub
xchg
cltd
or
imul
ljmp
cltd
push
mov
ror
fidivrl
bnd
fwait
in
push
ljmp
sub
jp
cwtl
idivb
or
out
adc
add
arpl
add
fucomp
pop
add
test
inc
rcrl
je
sbb
mov
and
pop
pusha
xchg
test
sti
jle
stos
out
lods
sbb
bound
cmpsb
jecxz
mov
ret
cmp
aam
jns
push
mov
jmp
in
scas
or
scas
sti
jmp
stos
mov
or
add
fbstp
add
xor
jp
mov
pop
aam
push
add
clc
jmp
adc
jno
or
push
orl
jbe
insb
ljmp
cmp
inc
add
out
clc
out
mov
aaa
aaa
sbb
jno
add
jae
cli
ljmp
jne
push
outsb
fcoms
add
out
fadds
stos
es
loopne
cmp
decl
add
xchg
mulb
fsubs
lds
cmpsb
incb
decb
push
jp
movsb
adcb
xchg
or
movsb
xorb
js
or
enter
xchg
pop
out
mov
movsb
cld
pusha
sub
jb
add
sbb
add
jns
ret
enter
xchg
pop
loope
pop
ljmp
mov
push
ljmp
lret
lds
icebp
push
add
jo
psrlq
or
inc
jne
cmpsl
lods
cli
sub
jg
xchg
fwait
xchg
mov
mov
jge
shlb
test
xchg
adc
add
mov
inc
lcall
mov
xchg
mov
cmp
in
testb
int
into
dec
xor
jmp
mov
push
cltd
cmpsl
xlat
stos
outsb
pushf
shrl
add
lods
sti
insl
xchg
push
sub
adc
test
push
mov
add
add
and
add
adc
lcall
lret
xchg
lret
lods
or
stos
sti
jmp
jmp
sti
fcmovbe
jae
int
jb
lds
xchg
aaa
js
lods
test
hlt
or
jmp
push
cld
mov
pop
xor
call
add
cs
or
sub
movl
inc
mov
call
test
or
scas
xchg
adc
scas
repnz
jecxz
and
incb
incl
add
jge
inc
dec
xchg
mov
jp
ror
sti
ljmp
sti
push
rorb
inc
jno
jae
dec
aas
and
outsb
ja
sbb
add
jns
je
movsl
mov
xor
nop
push
shl
scas
cmp
and
nop
leave
inc
outsl
mov
divl
enter
adc
adc
push
add
jmp
repz
incl
pmuludq
dec
cs
mov
clc
jecxz
pop
mov
cmp
cld
add
and
dec
add
adc
pop
sbb
aad
into
call
xor
xchg
iret
add
cltd
dec
lcall
rolb
in
stos
movsb
stos
cmp
sub
xchg
sub
popf
test
mov
cmp
add
jg
pop
inc
dec
out
dec
add
cmp
add
push
jl
or
imul
xor
stc
sbb
mov
lods
mov
pop
dec
icebp
aaa
aaa
push
incb
les
jmp
pop
test
add
mov
mov
pop
scas
inc
push
dec
nop
push
pop
mov
repnz
fistl
icebp
pop
lahf
adc
dec
adc
add
fcompl
jmp
add
cmp
push
add
sti
push
fsubrs
push
push
icebp
add
sbb
mov
clc
roll
and
mov
dec
call
add
push
jp
jmp
fistl
lret
push
movsl
sti
add
repnz
ret
ja
loop
add
repz
sub
or
xchg
jge
mov
mov
subl
cmp
daa
cld
jp
push
hlt
add
repz
mov
loopne
inc
jle
jb
jge
jg
cmpsb
idiv
jne
test
cld
sbb
add
ja
jecxz
test
cld
mov
push
or
popf
xchg
add
inc
jae
subb
mov
jb
sbb
cmpsl
cmp
mov
sbb
jno
mov
stos
lods
xchg
mov
lret
out
inc
inc
push
add
mov
in
lods
sub
cmpsb
pushf
mov
cwtl
fimuls
pop
adc
adc
mov
int
out
dec
popf
cld
add
cli
mov
call
cmp
push
pushf
xchg
sub
cmpsl
xlat
ret
ja
das
lret
adc
jmp
scas
add
jmp
xor
jl
les
pusha
fsubrl
mov
inc
popf
ljmp
popf
sbb
mov
cmc
pop
inc
jge
mov
jbe
movsb
mov
push
jbe
repz
cli
mov
add
push
imul
add
lahf
fwait
push
jp
or
jbe
hlt
mov
add
stc
aaa
stos
inc
in
push
xchg
inc
xchg
jmp
dec
lods
mov
xchg
xchg
sbb
push
icebp
dec
pop
add
lea
inc
or
cmc
call
pop
pop
bound
jmp
imul
add
lea
lea
inc
cld
cld
push
add
movsl
mov
mov
aaa
inc
and
fcompl
pop
idivl
je
cmp
call
jg
std
sub
jae
sbb
call
test
testl
mov
out
add
out
xchg
andb
mov
add
sahf
call
sbbl
jp
mov
xor
xor
ret
jnp
decb
inc
js
jmp
mov
ljmp
outsl
and
mov
and
out
call
mov
clc
call
test
adc
or
xor
das
mov
push
pop
cld
add
sbb
lds
pop
adc
or
adc
adc
hlt
and
cmc
pop
lds
cld
aam
cmpsl
xchg
xchg
cmp
add
or
dec
or
push
out
dec
pop
inc
or
pop
pop
xchg
inc
or
push
sti
call
arpl
mov
jnp
cltd
cld
pop
lock
add
add
jmp
roll
rcrb
cmp
xchg
adc
push
icebp
adc
sub
fwait
rorl
andb
mov
pop
add
mov
jecxz
mov
stc
mov
stc
stos
out
test
shlb
jmp
loopne
outsl
pop
cwtl
cmpsl
or
lea
mov
xchg
add
or
push
icebp
outsb
rolb
outsb
outsl
mov
test
push
icebp
add
adc
repnz
jns
xchg
out
xchg
push
jne
out
bound
jmp
and
jmp
fbstp
adc
add
push
and
push
popa
xchg
aad
push
pop
pop
sti
pop
xlat
sbb
add
add
test
icebp
add
jmp
inc
or
sbb
repnz
xchg
jg
mov
loop
and
ljmp
ja
pop
repz
mov
dec
xchg
decl
loop
jo
dec
jbe
cmp
test
retw
xchg
dec
call
jno
jle
add
cmpsw
cld
je
mov
call
push
jb
and
andb
lods
bnd
xor
jecxz
sub
pushf
mov
pop
mov
mov
iret
mov
call
xchg
shl
xchg
jle
lods
sti
ljmp
sbb
pop
incl
xchg
or
push
shl
inc
xor
ss
add
add
dec
sar
push
mov
dec
shl
adc
cmpb
dec
adc
hlt
xchg
call
enter
pop
ljmp
aaa
pop
cmpsl
leave
xchg
push
lret
dec
fistl
mov
pop
sbb
mov
pushf
lock
fistps
outsb
jg
jg
lret
sub
add
inc
adc
lock
mov
push
or
xchg
icebp
aas
cpuid
mov
xor
insl
ret
pop
jne
add
aas
add
ss
test
addr16
jg
icebp
jmp
or
out
fisubrs
inc
subb
in
gs
pushf
jmp
add
imulb
xor
push
push
add
add
sbb
je
jns
adc
cmp
push
add
imul
nop
aad
and
out
mov
in
rcrb
dec
aad
sti
insl
pop
and
pop
fwait
rolb
push
icebp
call
bound
xor
lret
iret
shr
push
icebp
push
cmp
dec
mov
loopne
inc
lds
ljmp
pushf
sti
sub
add
and
add
jl
mov
bound
pushf
sti
sbb
jle
dec
loopne
jmp
jmp
sub
xor
jae
pushl
cmp
sub
pop
pop
icebp
dec
push
ret
dec
mov
push
adcl
push
shl
xchg
in
xor
orb
scas
outsb
inc
mov
mov
cmp
mov
pop
mov
add
inc
std
incl
mov
stc
push
aad
clc
push
cmp
dec
or
scas
outsb
adc
clc
push
xor
hlt
call
cld
leave
loopne
call
add
ret
pop
mov
add
decb
pushf
cmpb
bound
mov
addb
addb
xchg
aad
mov
adcb
adc
fldl
pop
and
push
pop
and
push
jns
dec
and
nop
mov
scas
mov
or
nop
mov
orb
orb
out
adc
in
out
cld
xchg
nop
jb
jo
cli
int3
lock
cltd
aam
mov
xchg
xchg
mov
es
mov
inc
xor
dec
insb
lods
xchg
inc
mov
sub
add
cltd
sbb
add
jl
repnz
loope
jecxz
adc
cltd
sbb
inc
cltd
ficoml
inc
insb
mov
mov
imul
subb
in
push
inc
cmp
data16
sti
cwtl
xchg
xor
jmp
nop
inc
sbb
inc
push
sub
mov
cwtl
sti
jmp
fcompl
addb
inc
xor
pop
aad
testl
add
int
je
or
xchg
push
adc
gs
push
int3
pop
je
in
jb
add
xchg
push
adc
sti
test
je
jecxz
or
in
push
insb
lret
les
jmp
jae
push
mov
xchg
sti
sbb
xor
stos
cmp
mov
add
into
mov
push
icebp
push
add
loopne
pop
push
push
testl
dec
je
scas
ds
movsb
repz
adc
add
stos
jp
out
add
jp
add
sub
push
loopne
add
jnp
fistpl
cs
addl
jle
pop
data16
push
mov
stc
or
jp
ds
daa
push
cld
add
jns
push
push
jnp
js
repz
cmpsl
outsb
add
mov
das
jg
icebp
push
inc
jne
lea
mov
pop
sbb
das
std
ds
repnz
push
or
or
mov
mov
cmp
push
enter
stc
sub
rcll
or
and
dec
mov
mov
dec
xchg
cli
mov
add
add
cmpsl
pushl
xchg
ja
xchg
sbb
decb
ret
xor
push
mov
push
test
jnp
sti
test
mov
xchg
movsl
icebp
jmp
add
mov
inc
pop
lds
inc
push
mov
das
dec
fs
int
jmp
adcl
add
sub
cs
jp
add
test
lods
feni(8087
pop
inc
jg
mov
pop
int
sbb
adc
cltd
sbb
ljmp
xchg
pop
or
das
movb
icebp
jmp
inc
push
outsb
test
enter
aas
setbe
insb
adc
test
icebp
add
xlat
xchg
sti
jb
popf
or
add
nop
xchg
push
xor
push
jne
jne
cmp
mov
xchg
call
outsb
insb
add
adc
xchg
sti
jmp
sbb
adc
xor
in
mov
rorb
in
das
test
xchg
sti
jmp
xchg
xchg
add
sub
mov
fstl
add
push
jle
aas
mov
aaa
pop
cld
movd
mov
push
push
hlt
fdiv
scas
std
shlb
testl
stos
out
bound
jnp
push
mov
mov
adc
inc
jne
dec
xor
loope
pop
and
out
data16
test
add
mov
mov
or
pop
in
cmpsl
jo
pushl
ja
dec
push
mov
out
in
hlt
cld
adc
aaa
dec
xchg
decl
or
and
in
sub
jne
lret
lds
movaps
fmul
pushf
mov
sub
enter
fadds
xchg
or
push
add
push
pop
add
test
addb
xchg
jne
shlb
cld
pop
adc
cmp
testl
xchg
xchg
stc
mov
push
or
mov
pop
cmp
add
add
loopne
inc
stos
sub
dec
icebp
jmp
push
in
arpl
push
loop
add
jns
ja,pn
addl
or
cld
lahf
fldt
jp
pop
icebp
mov
add
add
inc
inc
kmovb
and
mov
fucomi
mov
iret
lret
xor
mov
test
jnp
data16
jae
data16
addr16
ljmp
jns
or
mov
push
fisubs
jg
sti
nop
xchg
sti
jmp
push
icebp
xchg
push
icebp
add
add
insb
push
je
jmp
jg
push
icebp
add
sub
jmp
mov
sti
jmp
push
icebp
xchg
popl
inc
add
push
jp
loope
je
or
add
iret
enter
jb
in
es
imul
imul
iret
mov
sub
cmc
add
add
push
pop
push
fucomi
test
add
mov
fadd
ret
push
push
popa
gs
add
pop
add
rep
sbb
xorb
cmc
addl
push
outsb
add
mov
add
cmc
pop
pop
imul
daa
push
add
xorl
add
xor
mov
mov
jp
addl
jns
add
pop
cltd
cld
dec
lea
add
add
inc
sub
add
sahf
mov
incl
decl
jbe
lahf
cltd
dec
in
mov
in
cwtl
xor
sbb
fcompl
shlb
add
les
cmpb
cwtl
mov
inc
pushf
cwtl
repnz
add
aaa
add
cmpsl
adc
ljmp
push
jnp
neg
mov
or
insb
ret
pop
jne
add
loop
mov
pop
cmp
orl
sub
dec
jb
nop
or
and
add
cmp
sub
in
faddp
addr16
cs
fwait
cmp
jmp
add
add
addr16
pop
insl
inc
mov
cld
ffree
dec
cmc
fidivs
mov
mov
test
icebp
add
fs
test
adc
add
push
movsb
cmp
xchg
inc
push
icebp
je
adc
add
push
sub
inc
aad
icebp
cli
sub
mov
add
rolb
cld
jmp
jae
scas
iret
lea
stc
imul
insb
adc
cmpsb
push
std
cmp
push
icebp
out
rolb
sti
jmp
pusha
icebp
jne
enter
push
jp
mov
pop
mov
pop
or
inc
or
scas
outsl
or
movsb
test
pop
or
inc
push
ds
icebp
lret
mov
test
add
add
mov
push
add
lock
jne
jo
clc
sbb
ret
jl
adcl
push
push
jno
mov
jns
movd
inc
sbb
fiadds
jns
andl
mov
cld
mov
jo
hlt
push
mov
decb
add
push
js
add
add
decl
fildl
cli
repz
jmp
dec
enter
adc
jle
sub
stc
aaa
fcomp
hlt
xchg
repnz
bswap
repz
cmc
and
das
sbb
nop
out
aam
ds
push
inc
push
pop
inc
or
pop
clc
pop
jg
or
fnstsw
add
test
add
icebp
call
outsb
arpl
jae
mov
dec
je
cltd
addb
mov
add
mov
mov
ljmp
icebp
jmp
add
lods
jnp
aam
add
xor
cmp
push
add
jmp
andl
std
js
jl
sbb
push
inc
fidivrl
out
add
in
mov
add
inc
push
and
xchg
add
rcrl
icebp
add
sar
pop
lret
dec
je
jnp
mov
jmp
inc
mov
sbb
jl
call
mov
mov
icebp
add
loopne
outsl
out
xlat
in
nop
jo
jns
stos
ja
pop
call
pop
lret
add
inc
jo
xor
add
add
je
test
pop
xchg
and
adc
xlat
adc
jl
icebp
push
icebp
add
push
and
inc
push
pop
add
hlt
add
cmp
jp
add
sub
das
jp
add
push
push
cmp
xchg
js
jp
insb
fdivrs
add
add
sub
cmp
hlt
add
and
add
popf
push
sub
add
cli
je
pop
jmp
add
aad
aas
and
jne
cwtl
sti
repz
push
lcall
push
add
xchg
adc
add
fwait
mov
incl
push
adc
add
add
cld
pushf
dec
xchg
sbb
or
sbb
jle
inc
lcall
push
pop
add
cld
dec
adc
pop
adc
add
dec
je
inc
push
and
lcall
xchg
mov
lahf
xchg
xchg
jp
jp
rclb
dec
xchg
jmp
xchg
je
fwait
ror
jmp
imul
std
inc
jmp
jp
jae
xor
nop
xlat
push
and
ds
push
icebp
push
or
iret
and
sub
dec
and
sbb
test
add
icebp
mov
lahf
cmp
lahf
repnz
lock
jge
daa
mov
add
mov
mov
pop
sbb
add
jp
insb
jge
add
pop
cltd
cwtl
loop
test
fstpt
sti
insb
pop
add
xchg
ror
sti
jbe
inc
je
bound
cmp
push
icebp
push
das
xchg
test
pusha
mov
faddl
inc
jmp
push
icebp
sti
cs
icebp
jae
lret
lods
call
insl
xchg
add
sbb
jmp
add
cmp
mov
or
out
jo
push
push
aas
in
and
add
subl
push
jae
jnp
pop
movsb
cli
ljmp
dec
js
inc
mov
cmpsb
cld
jne
add
sti
mov
ret
ret
fistpll
addl
mov
sahf
push
mov
std
fcompl
xor
add
ret
sti
jp
lds
lock
gs
adc
out
xor
ret
jnp
cmp
cli
cmp
mov
jns
scas
mov
es
pop
enter
adc
mov
push
lret
ds
inc
push
pop
inc
or
pop
icebp
push
enter
mov
mov
jecxz
es
add
mov
incb
xorb
add
mov
out
mov
push
lcall
push
data16
dec
fdivl
aas
hlt
adc
popa
pop
decl
sbb
add
jle
imul
pop
adc
sbb
sub
shll
rorb
imul
pop
in
stos
rcl
adc
fsubrs
imul
call
mov
loope
rclb
fiaddl
add
icebp
push
add
lahf
xchg
mov
mov
jl
push
push
sub
in
insb
cmpl
fsubl
lock
adcb
jbe
addb
mov
loopne
imull
out
ret
add
cmp
and
mov
mov
jns
test
xchg
push
sti
cmpsb
lds
cld
ds
icebp
push
bound
jno
cmc
iret
push
std
jmp
pop
js
pop
add
push
push
push
fidivs
or
jns
lea
push
jl,pt
xchg
push
orl
add
lret
movsl
jg
push
add
push
in
add
mov
mov
stc
outsb
or
mov
mov
cld
imul
mov
idiv
ljmp
jmp
loope
outsl
add
notl
cmpsl
add
push
sti
cld
pushl
aas
negl
sub
or
sbb
inc
outsb
jmp
je
cmc
fcoms
xchg
aad
push
add
stc
xor
adc
sar
or
mov
add
xchg
aad
stc
adcl
incl
and
push
xor
jae
mov
or
loop
xchg
cli
repz
push
or
aad
jno
xor
dec
out
mov
xchg
mov
push
sar
pop
shl
adc
lret
xchg
xchg
int
push
mov
bound
test
mov
ficoms
fcomps
insl
mov
mov
mov
insl
aaa
push
jnp
jp
mov
and
mov
enter
stos
repnz
mov
inc
pop
jg
rorb
out
jmp
or
lret
add
mov
test
jmp
add
cld
add
int
and
fldt
mov
add
test
jle
inc
and
mov
xor
mov
and
scas
jle
cmp
jmp
xchg
gs
jmp
inc
xor
imul
add
mov
cli
stc
jmp
add
push
jne
lcall
jg
jmp
xchg
hlt
sti
adc
sub
imul
fiaddl
sti
insb
xchg
push
and
or
loope
shlb
push
test
jbe,pt
cmpb
and
ja
in
lret
mov
cmc
push
jge
push
insb
or
insb
les
int3
dec
jne
add
jno
je
add
icebp
add
xor
shrl
loopne
push
std
fucomip
std
adc
mov
cltd
ret
icebp
dec
mov
jb
adc
mov
ja
arpl
ljmp
mov
add
inc
add
pop
add
lock
cmovb
mov
lock
dec
push
out
jmp
add
mov
mov
push
or
xchg
xchg
iret
out
mov
mulb
out
mov
rolb
xor
aas
jmp
int
dec
sti
xor
jmp
sbb
je
iret
leave
jmp
sub
jo
add
mov
out
push
outsl
cld
iret
dec
clc
add
mov
repnz
add
lret
or
push
push
add
shrb
loop
imul
out
pushf
pushf
adc
mov
mov
ret
into
lea
push
mov
icebp
jmp
push
adc
xor
cmp
xlat
mov
lea
inc
jno
jo
icebp
jmp
mov
jmp
testl
rcl
add
shrl
push
addr16
inc
xor
jl
gs
daa
imul
add
aad
add
icebp
pusha
jo
call
daa
iret
lock
sub
rolb
sub
outsb
and
push
icebp
add
dec
xor
je
into
je
push
icebp
mov
jp
jmp
add
int3
int
jmp
lcall
call
je
mov
adc
leave
push
icebp
add
pop
lcall
xchg
addr16
or
push
icebp
lea
jp
jmp
dec
jne
call
imul
outsb
aaa
jnp
jmp
lcall
jl
in
jl
int
add
insb
push
add
stos
in
data16
xchg
push
push
or
fwait
or
ljmp
not
and
rcrb
fdivrs
scas
test
test
add
jmp
add
cmp
cmp
ljmp
add
cli
xchg
sbb
sbb
add
jo
xchg
mov
cmpl
mov
push
pop
and
jl
iret
or
pop
sub
insb
mov
cld
ds
inc
push
or
fistps
pushl
jg
mov
js
cmc
adc
jp
ja
add
push
bnd
push
mov
std
sbbl
mov
cmp
add
add
add
subl
decl
push
xorl
pop
cmpl
pop
icebp
outsb
inc
mov
xchg
outsl
mov
jns
adc
stc
add
sub
xchg
add
cmc
or
repnz
daa
inc
in
xlat
arpl
call
enter
mov
push
mov
call
sub
icebp
jmp
add
add
add
outsb
inc
jns
ret
or
sub
rorl
gs
mov
jmp
sub
push
icebp
ljmp
jae
jmp
shlb
xchg
push
icebp
add
int3
ss
sbb
call
rcl
sti
outsb
shll
push
push
icebp
add
and
sbb
mov
add
sbb
jbe
jmp
hlt
rol
jmp
xchg
or
jmp
and
add
daa
imul
imul
jnp
adc
add
in
add
add
incl
idivb
jb
add
jp
jg
in
add
push
scas
cld
incl
add
std
jle
mov
fdivp
sub
int
add
call
dec
sub
test
sti
ljmp
or
incl
pop
les
icebp
add
mov
insl
mov
inc
push
std
je
loope
filds
in
call
push
std
xor
xor
mov
gs
call
push
xor
mov
ss
fmuls
add
push
mov
std
aas
out
fdivr
mov
mov
add
movsb
aaa
jp
ja
push
popa
dec
rep
mov
adc
adc
insb
aam
sahf
and
mov
call
hlt
and
and
push
mov
ja
add
push
pop
insb
aam
dec
and
add
cld
add
incl
movsl
cmp
add
inc
xorl
insl
add
sub
rcll
lret
int3
popa
add
icebp
shrl
call
sbb
sbb
lea
icebp
jmp
fstpl
or
inc
pop
jno
sti
jl
sbb
out
aaa
outsb
push
lock
lret
stos
push
scas
mov
jne
inc
fists
add
add
in
pop
in
jb
jg
imul
adc
jmp
loope
decb
mov
sti
and
push
icebp
add
out
inc
fldl
or
jmp
test
add
outsl
repnz
mov
jne
sub
outsl
rorb
sbb
mov
sti
xchg
mov
je
subl
add
js
push
subb
cmp
mov
push
icebp
xchg
idiv
fs
ljmp
cmpsl
icebp
je
test
push
cld
jmp
adc
andl
in
add
std
xchg
sti
dec
or
in
mov
insb
mov
add
lods
add
add
dec
jns
mov
ja
pop
pop
jecxz
add
or
push
cld
call
data16
sti
xorb
rclb
pop
or
ss
hlt
xor
mov
sbb
call
hlt
int3
jbe
dec
fidivl
rclb
add
jl
orb
incb
aam
cld
in
mov
dec
push
add
add
iret
xor
data16
aam
insl
cld
inc
pop
push
int
pop
cld
inc
mov
xchg
cld
lods
jecxz
mov
push
jl
rcrl
cld
and
ror
clc
pushf
xchg
dec
xchg
call
mov
jl
dec
mov
mov
popa
mov
pop
and
lds
icebp
sbb
sub
push
add
stos
icebp
add
bnd
addl
cwtl
push
push
pop
out
pop
out
pop
insb
shrl
adc
outsl
mov
fnstcw
jnp
pop
outsb
jl
jp
jno
add
sbb
add
jo
sti
adc
cmpsb
pop
or
imul
fisttpll
outsb
in
jp
outsl
fdivr
add
add
add
inc
icebp
push
je
mul
xor
inc
mov
scas
sub
add
jno
in
lds
add
xchg
jns
adc
aaa
pop
cltd
fsubrl
mov
jecxz
jg
xor
icebp
lea
pop
and
push
aaa
lret
xor
outsb
or
testb
mov
shlb
jb
sub
dec
loopne
outsb
cmp
lods
inc
fxch
jmp
inc
icebp
add
loop
add
or
and
lret
daa
subl
xor
je
data16
clc
icebp
add
data16
dec
leave
add
icebp
call
test
xlat
cld
call
stc
push
push
add
add
cmc
xor
sub
push
clc
test
sti
imul
std
add
ljmp
je
add
jmp
cld
push
push
push
fldl
data16
clc
cld
jge
jle
sub
lret
out
mov
cld
into
mov
adc
push
sbb
push
filds
movsl
js
add
sahf
sbb
incl
std
inc
bound
fnstsw
dec
dec
aad
jb
push
into
add
rorl
or
add
lods
aad
jae
fbstp
sbb
xchg
sub
inc
sbb
push
icebp
cmp
addr16
adc
and
push
jmp
stos
add
xor
pop
push
jo
add
repnz
inc
add
dec
icebp
xchg
js
ret
fidivrs
mov
out
push
pop
sub
lock
pop
push
jle
sti
jmpw
ss
push
icebp
pop
mov
sar
add
mov
mov
in
bound
stc
cmp
lcall
stc
pusha
leave
mov
sub
in
add
jp
loope
add
jg
cld
imul
imul
push
leave
call
sti
nop
pop
aas
ja
fiadds
jmp
ds
call
insl
fisubs
pushf
test
dec
icebp
mov
insb
sti
gs
ficoms
jb
repz
push
dec
leave
lea
pop
sbb
xor
mov
mov
pop
adc
add
in
in
in
push
divl
ror
fadds
add
adc
push
mov
or
test
sti
mov
mov
mov
pop
adc
scas
outsl
dec
and
push
call
adc
adc
add
out
outsl
xor
sub
je
pop
cld
adc
xorb
or
testb
stc
or
test
ret
add
ljmp
cmp
enter
std
push
adc
cmp
add
hlt
add
ret
call
out
sbb
std
pop
xor
push
je
out
adc
inc
das
repz
jg
pop
decl
cmpsl
rol
aaa
fidivl
sbb
data16
aas
push
rcl
and
dec
pop
into
and
pop
mov
fldl
add
push
mov
fmuls
or
dec
sbb
mov
dec
cwtl
in
adc
fsub
ret
and
sarl
out
or
and
mov
retw
push
dec
cltd
inc
ja
test
push
icebp
xor
inc
mov
jmp
mov
adc
inc
dec
pop
in
jmp
dec
jl
ja
push
jmp
add
add
les
fwait
loopne
jmp
in
mov
jmp
push
addb
insl
inc
xor
add
arpl
pusha
mov
repnz
add
loop
fnsave
stc
add
lods
or
push
out
cmp
push
sbb
fs
bound
and
sub
es
stos
sub
imul
add
push
jb
jno
sbb
sbb
jns
out
pushf
iret
insb
mov
addr16
dec
pop
add
lods
gs
fs
jecxz
sti
nop
les
fsts
icebp
add
in
stos
sti
push
mov
jns
bound
push
dec
mov
sub
ret
in
xor
fldl
mov
out
add
push
scas
inc
push
test
add
xchg
push
inc
dec
add
daa
xor
mov
inc
dec
repz
jp
pop
mov
mov
jle
outsl
and
je
add
cmc
mov
rcrl
scas
add
fdivrl
mov
mov
sbb
cmpl
sub
je
push
push
hlt
push
jns
jne
inc
jmp
add
scas
inc
push
stc
icebp
add
cmc
ds
adc
dec
jle
adc
push
or
adc
pop
cld
les
mov
push
fsubs
pop
xor
sbb
inc
sbb
lds
push
in
push
pop
incl
add
call
inc
pop
adc
call
leave
and
roll
add
test
mov
jge
or
adc
mov
push
fstpt
push
repnz
mov
shll
call
fcomp
pop
push
jnp
mull
pop
mov
xor
pop
lds
sbb
mov
jmp
fcoms
pop
mov
leave
outsb
int3
inc
outsb
mov
pusha
js
cld
adc
or
imul
xlat
add
push
mov
sub
js
or
fisttps
sbb
lahf
pop
add
data16
adc
or
jmp
push
js
negl
fldl
loope
sub
sti
test
and
in
loopne
pop
pop
push
add
push
fs
icebp
jge
mov
outsl
leave
fiadds
add
add
push
jp
cmp
stos
or
sti
jmp
in
test
sti
hlt
dec
data16
stc
push
lods
xor
cmp
xrelease
xor
aad
gs
gs
cmc
test
icebp
add
clc
sarb
push
fs
out
shl
in
jle
inc
cld
jae
jae
pop
add
in
cmp
mov
jae
or
fsubrs
decl
push
add
jae
cld
cmc
xor
stos
out
add
dec
jb
add
adc
pop
stc
mov
jo
ret
fucom
mov
mov
cld
test
cld
mov
popf
cmp
dec
or
mov
mov
xchg
add
add
in
cmp
mov
mov
cwtl
and
push
cmpsb
aas
call
addb
pop
xchg
dec
sarl
pop
or
xor
pop
aas
mov
into
mov
inc
arpl
inc
dec
shll
xchg
add
sti
cld
out
addb
addb
pop
cmpsb
add
inc
enter
inc
add
xchg
lcall
fcmove
lcall
mov
mov
sahf
insb
adc
jmp
or
in
mov
leave
dec
pop
fildll
adc
jmp
inc
dec
fstl
pop
movsb
mov
je
fdiv
jmp
pop
lahf
outsb
xor
xor
or
xchg
pop
addr16
les
mov
in
push
add
sbb
lret
popa
jo
dec
dec
pop
jo
pusha
pop
push
push
pop
shll
scas
fnstenv
fucom
push
sti
mov
cld
bound
jne
and
adc
and
jge
test
clc
xchg
jecxz
push
repnz
insl
icebp
jge
add
enter
insb
cmc
or
push
bnd
or
jo
pop
mov
stc
pop
cld
push
adcl
sbb
das
test
or
mov
fsubp
lahf
pop
or
mov
pop
rcrb
add
adc
and
add
or
fistps
add
bnd
fcomip
data16
daa
push
stos
repnz
mov
stos
add
mov
lcall
or
fcmovb
outsl
and
lret
movsl
xor
in
pop
lahf
jge
cmc
addl
test
repnz
stos
insl
test
js
add
push
mov
shlb
jp
aas
and
cmc
je
cmp
push
lahf
in
mov
adc
jmp
dec
inc
dec
je
aas
push
rolb
add
and
xchg
sub
rclb
imul
lcall
clc
addr16
ret
inc
push
adc
daa
enter
into
pop
int3
or
push
icebp
out
fadds
test
addr16
nop
ss
imul
push
icebp
out
mov
sub
push
dec
mov
push
dec
lods
push
je
and
fcomp
push
jae
cmp
add
and
push
mov
push
jge
icebp
pop
jle
out
jmp
jle
out
mov
add
pop
add
push
icebp
add
add
in
out
in
cwtl
mov
jg
push
out
push
sub
outsb
xchg
daa
push
icebp
jmp
mov
pop
insb
cmp
add
out
pop
xor
xchg
movsl
int3
icebp
jmp
mov
icebp
jmp
mov
movsl
imul
fmull
pusha
mov
jmp
icebp
add
pop
or
pop
sti
jmp
xchg
pop
sti
jmp
sahf
pop
sti
gs
filds
mov
insb
sub
push
icebp
lea
pop
sti
jmp
add
fisubrl
add
cmp
icebp
mov
add
in
dec
mov
adc
or
pushf
insb
add
add
movsl
and
push
icebp
xchg
int
addb
ret
mov
pop
call
test
data16
mov
pop
jecxz
lods
cmc
add
add
add
clc
xor
pop
pop
xor
out
dec
icebp
push
mov
push
mov
mov
add
inc
inc
out
je
push
call
ss
outsl
fs
or
jp
lock
std
stc
ljmp
inc
lock
pop
addb
sar
adc
fsubr
add
add
push
filds
xchg
mov
lea
dec
jb
movntps
or
enter
push
push
cld
aaa
dec
jb
lock
das
in
ljmp
dec
pop
roll
jmp
push
std
int3
push
xchg
arpl
push
enter
mov
scas
jmp
sbb
pop
stos
lret
xchg
into
pop
cmpb
inc
js
xor
mov
add
xor
mull
pop
aam
inc
mov
jl
dec
xlat
ret
inc
pushf
jno
cmp
mov
andl
jmp
call
nopl
add
icebp
and
cmp
xchg
popa
mov
pop
inc
xchg
pushf
inc
push
icebp
pushf
jle
or
in
add
push
sub
add
inc
mov
mov
pop
repnz
icebp
dec
add
repnz
push
push
sti
jo
int3
aaa
stos
popf
lock
test
push
icebp
push
sbb
mov
sbb
or
mov
push
lea
movsb
mov
jnp
icebp
add
push
lock
push
icebp
aaa
sub
data16
stos
inc
mov
mov
pop
sub
add
and
shrb
adc
outsl
and
dec
ds
mov
cmpsl
push
pop
fcmovu
std
add
leave
cld
ljmp
jne
add
add
std
lds
add
aad
adc
cmp
lea
popf
cld
adc
mov
ja
xchg
cmpsb
dec
incl
add
push
cmovo
jo,pt
aam
pushl
mov
mov
cli
bnd
mov
imul
mov
push
cld
inc
stos
cmpsl
aad
xor
cmp
push
mov
mov
mov
jl
and
lret
cli
test
enter
enter
mov
cld
es
incl
add
xor
pop
inc
pop
and
incl
add
adc
enter
jge
jbe
jmp
mov
push
imul
ds
fwait
jbe
sti
pop
jp
in
scas
addr16
call
enter
jp
les
icebp
or
dec
out
xchg
mov
scas
sti
daa
cmpsb
mov
inc
push
add
add
adc
jl
insb
adc
push
lcall
dec
int
pop
push
je
mov
icebp
sbb
sbb
insb
xchg
dec
xchg
data16
imul
add
xor
push
push
cld
xlat
bound
mov
jle
jns
mov
std
dec
popa
mov
flds
add
jecxz
insb
pusha
push
sti
fsubp
addr16
or
int
dec
cli
adc
xor
sbb
outsb
xchg
pop
inc
stos
sub
cmp
inc
xchg
jb
or
test
push
out
scas
or
pop
dec
jge
push
movl
ret
inc
mov
sti
push
cld
test
and
movsb
lea
add
mov
xchg
fistl
add
cmp
mov
push
call
ret
dec
mov
fnstcw
cld
push
imul
stos
out
add
cmpsl
pop
adc
sarl
cld
out
outsl
sub
xor
je
push
mov
mov
insb
repnz
inc
icebp
data16
add
push
orb
lods
add
in
jne
mov
push
xchg
push
sbb
add
stos
dec
mov
push
clc
imul
push
push
xchg
adc
imul
push
ja
pop
ja
inc
adc
cmp
adc
testb
cmc
js
adc
dec
pusha
sub
dec
xchg
mov
lret
and
dec
aad
xchg
repz
sub
and
push
dec
fnstsw
pop
sbb
stos
shll
and
pop
pop
push
dec
fldl
or
mov
out
aas
push
js
inc
aaa
call
and
and
lock
outsb
mov
popa
in
inc
jmp
adc
adc
mov
insb
rolb
jo
cmp
or
or
inc
push
insl
dec
add
icebp
inc
and
mov
test
orl
cmp
sub
mov
sbb
mov
test
jmp
add
push
lahf
push
push
add
cli
test
mov
sub
add
inc
mov
add
push
mov
add
push
mov
cmp
mov
push
icebp
add
push
mov
jmp
adc
and
adc
add
lcall
mov
dec
test
jae
add
sub
push
mov
data16
adc
test
add
sbb
ficomps
lahf
mov
imul
push
mov
inc
cld
jne
cmp
add
pop
adc
mov
test
xor
add
icebp
sti
ljmp
mov
cmp
add
cmpl
hlt
add
sarb
inc
jo
sldt
mov
lret
or
cmp
add
xchg
pop
cmpsl
out
lahf
jns
js
das
inc
cmpsl
out
addr16
inc
aam
add
jmp
mov
scas
shlb
mov
mov
cmp
push
push
pop
shll
push
andb
pop
incl
fnstsw
xchg
incl
mov
pop
fidivs
add
add
mov
pop
into
cwtl
lds
sbb
iret
add
lahf
scas
xor
add
mov
cld
inc
aam
jae
rcl
or
lret
push
mov
and
lahf
mov
mov
ret
or
icebp
fstpt
iret
test
mov
out
dec
cmp
js
sti
xchg
cmp
inc
mov
lods
add
sub
add
pop
dec
jge
push
jl
pop
pop
dec
pop
and
xor
push
pop
mov
xchg
dec
rcll
adc
pop
pop
sbb
fldl
add
test
jp
inc
jg
mov
sahf
cmc
orb
repnz
jbe
lock
xchg
dec
xor
scas
sbb
adc
cmc
sti
sbb
dec
aas
jmp
adc
jmp
icebp
add
add
inc
lods
pop
xchg
xchg
cmpsb
xchg
push
add
fldl
test
into
jns
xchg
push
dec
adc
cld
adc
call
nop
dec
outsl
out
notb
pop
dec
xchg
push
mov
in
push
mov
inc
aaa
dec
outsl
out
push
inc
jg
dec
xchg
cmpsb
movsl
in
faddl
insl
mov
shl
xchg
mov
add
adc
call
test
rcrl
add
add
sbb
fldl
pop
fimuls
add
mov
inc
mov
xchg
pop
mov
je
sub
or
push
sub
das
sti
mov
inc
mov
jp
add
repnz
sti
incl
mov
pop
repz
and
xor
add
out
mov
push
incl
fsubs
adc
push
xchg
xor
inc
pop
out
movsl
aas
cld
fcomps
loopne
push
pop
fmuls
jbe
add
test
adc
iret
jge
pop
mov
pop
fadds
mov
pop
bound
aas
push
push
enter
ds
lods
iret
push
orl
add
or
stos
iret
stc
addb
inc
add
insb
sbb
ds
mov
mov
dec
into
lret
cmp
fld
in
insb
adc
add
ret
xchg
cmc
fnstcw
rorb
dec
mov
ret
or
and
jbe
aam
std
push
sub
lods
xchg
jmp
add
add
movsl
xchg
ret
int3
js
aas
mov
lock
mov
or
jmp
sub
gs
xor
or
mov
mov
js
fst
in
cmpl
nop
dec
xchg
arpl
push
cld
cmc
rorl
mov
arpl
push
addl
gs
pop
test
fnsetpm(287
sti
filds
add
lods
adc
add
fs
sbb
pop
xchg
inc
cs
das
mov
or
cmpsl
sahf
push
add
mov
pmaddwd
bound
or
inc
sti
jmp
jg
lea
pop
xchg
test
and
imul
imul
les
ds
cmp
cld
add
add
hlt
std
jne
jne
clc
loop
xor
cmp
mov
mov
outsl
sarb
test
test
repz
xchg
add
ret
jp
je
cmp
and
mov
lock
sti
mov
dec
lcall
je
and
addb
fdivrp
ss
lock
in
jmp
cld
pop
and
inc
add
push
fcmovb
cld
push
in
and
mov
adc
inc
mov
adcl
adc
jge
outsb
nop
cmp
jg
push
fninit
ljmp
push
cmp
cmpsb
xlat
or
adc
mov
add
pop
decl
xchg
aad
das
fcomps
push
add
push
cmpsb
out
xchg
mov
enter
add
into
adc
and
pop
incl
bound
fs
push
sbb
mov
mov
mov
dec
clc
cmp
sbb
sbb
add
stos
jne
jmp
cmp
shll
adc
pop
out
inc
push
inc
sub
mov
jp
adc
mov
mov
stc
test
mov
mov
cmp
add
lods
mov
movsb
fwait
mov
or
mov
push
mov
test
mov
add
push
testl
call
out
xchg
int
inc
cs
adc
add
fstps
pop
xchg
inc
jecxz
repnz
sti
push
dec
add
and
bound
dec
in
pop
jb
jmp
add
push
icebp
xchg
dec
js
jno
scas
aam
inc
imul
in
xchg
int3
sub
gs
jmp
fcomp
rol
add
push
jp
xchg
xchg
push
push
jno
add
jno
mov
push
mov
adc
fisttpll
xchg
lea
mov
jle
sbb
std
je
add
dec
cld
jne
jns
or
sub
jne
jns
mov
or
outsl
adc
cld
pushl
outsb
add
lret
outsl
jbe
out
or
cmpsl
mov
mov
pop
jne
sub
inc
fcoml
pop
orl
fists
std
push
cli
xor
inc
mov
add
and
mov
jl
or
push
mov
test
pop
rclb
xchg
mov
adc
dec
cmp
into
incl
or
jo
add
sar
pusha
or
pop
cmpb
pop
xchg
aad
mov
int
sti
mov
pop
cmpb
pop
mov
rol
rcl
icebp
sub
add
inc
sbb
dec
push
add
icebp
ja
sub
jmp
mov
lods
sbb
push
insb
test
push
je
js
ja
mov
movsb
icebp
flds
push
push
mov
or
stos
shrl
and
insb
test
cmp
jno
xchg
dec
jecxz
roll
dec
add
cmp
push
inc
aad
push
xorb
or
add
aaa
sbb
movsb
dec
mov
sti
insb
xchg
inc
push
add
or
jecxz
lea
inc
sti
fs
test
dec
inc
sti
push
inc
add
jbe
int
dec
cld
sbb
icebp
xchg
pop
adc
inc
add
daa
pop
call
test
add
sbb
add
dec
jg
pop
mov
push
push
in
push
rcll
add
push
jno
fcoml
pusha
mov
or
adc
jae
out
andl
outsl
xor
js
hlt
or
jg
fbstp
cld
jne
stc
push
adc
xor
cmp
or
movsl
idiv
push
adc
cmp
push
in
std
jne
add
xor
cmp
add
jmp
in
std
jne
clc
push
adc
xor
xor
sbb
repz
add
push
adc
imul
jecxz
divl
outsb
cld
movsl
mov
rclb
cmp
mov
add
incl
pop
jb
jo
jp
jb
loop
cli
mov
rcll
add
test
ljmp
inc
stos
add
mov
jp
es
je
xor
test
aas
call
bound
add
xor
or
mov
lods
pop
jne
fimuls
pcmpgtd
mov
dec
mov
or
sub
push
icebp
data16
lds
addl
pop
sarb
out
push
stc
stos
adc
add
cmp
sarl
iret
mov
add
xlat
es
add
mov
pop
enter
adc
je
dec
add
ds
jmp
scas
inc
add
jo
pusha
dec
add
dec
add
popf
sbb
xlat
lock
or
mov
call
add
sbbb
jb
cmp
add
icebp
add
sbb
mov
dec
or
scas
fnstsw
mov
cli
add
push
icebp
outsb
rcr
sub
jge
test
nop
cmp
xchg
and
test
in
xchg
cmp
jmp
lods
fisttpl
sahf
mov
jg
scas
roll
aad
and
add
cmpb
addr16
in
movsl
jle
out
aad
and
and
je
inc
push
add
cli
idiv
popf
jno
je
and
push
mov
es
mov
sbb
add
imul
mov
adcl
pop
imul
or
fists
sti
call
xchg
or
lea
add
pop
ret
mov
push
imul
inc
or
mov
lea
lahf
add
inc
lahf
jno
mov
js
call
sub
popa
mov
lahf
inc
xor
dec
mov
lahf
push
sti
mov
cld
add
aad
push
dec
mov
dec
clc
ds
pop
push
xchg
fs
mov
daa
xchg
or
add
add
gs
inc
push
pop
aas
sbbb
incb
xor
sarl
inc
jno
cmp
nop
neg
mov
cmc
add
add
sub
push
dec
decl
xchg
icebp
inc
sahf
negb
shll
stc
xor
test
add
jle
add
push
fcoml
pop
sub
push
test
aam
scas
jmp
xor
xor
add
icebp
sbb
pop
lock
add
inc
jle
insb
out
mov
mov
sahf
xchg
and
jnp
cmc
loop
fisubrs
add
stos
cmc
xor
mov
jl
in
jo
dec
push
add
iret
pushf
and
push
mov
add
out
add
lods
dec
addr16
or
xor
push
pusha
les
push
cmp
aam
loopne
jmp
inc
data16
push
and
adc
fsubrp
jmp
cmp
ds
bound
push
xchg
add
push
adc
cli
push
aaa
sahf
add
adc
add
inc
adc
and
add
add
dec
push
sbb
clc
add
dec
jle
pop
out
dec
call
pop
dec
dec
add
jmp
leave
adc
dec
add
call
mov
and
inc
cli
and
pop
mov
push
mov
cs
sub
call
lods
or
cmp
xor
xorl
aaa
sub
repz
mov
jg
mov
loopne
gs
andl
and
inc
xchg
and
jne
inc
push
push
call
mov
rcpps
inc
mov
push
add
adc
xor
clc
lret
lahf
push
jl
mov
mov
aaa
lahf
inc
add
mov
pop
lahf
adc
add
adc
adc
sbb
pop
aas
push
test
data16
mov
pop
std
es
out
or
add
push
pop
aam
fsub
hlt
ljmp
stos
sbb
sti
fsubr
pop
fdivl
inc
mov
inc
nop
or
incb
icebp
sbb
mov
in
jmp
ret
sbb
aad
add
icebp
mov
add
icebp
pop
add
lods
add
push
inc
data16
and
movsl
add
jmp
inc
inc
inc
xchg
orb
add
pop
hlt
lods
mov
sbb
imul
shlb
repnz
icebp
jmp
call
xorb
jmp
nop
ss
inc
jo
sbb
sub
ss
mov
add
dec
or
sub
push
enter
add
mov
inc
aaa
jl
or
adc
outsl
mov
xor
mov
cmpsb
lds
dec
popf
icebp
test
das
inc
repz
dec
cmpsb
test
test
cld
jecxz
movsl
mov
add
mov
inc
lds
movl
add
icebp
std
aad
push
sti
incb
add
adc
iret
jg
cli
inc
jp
pop
push
adc
in
xchg
push
pop
arpl
out
jns
mov
gs
decl
into
sbb
imul
insl
fwait
jle
push
loope
dec
xchg
repz
rclb
xchg
sbb
fnstenv
jle
xor
add
dec
iret
lret
imull
dec
outsl
and
pop
jp
das
ret
out
incl
hlt
jns
pop
cmp
mov
fldenv
cmp
dec
sar
nop
dec
sub
mov
dec
ret
jge
adc
add
cld
and
add
xchg
pop
int3
pop
in
sbb
cmp
pop
int
dec
ljmp
icebp
je
test
jmp
adc
icebp
je
mov
cltd
sar
icebp
fs
or
pop
inc
add
cmp
fnstcw
cmp
jns,pn
popf
and
mov
pop
mov
cltd
xchg
addl
popf
icebp
jmp
shll
mov
sub
push
icebp
jmp
jns
sub
jmp
test
xor
xchg
mov
jmp
lods
add
inc
sub
jns
jg
push
xor
xchg
jecxz
data16
mov
push
jmp
ret
shll
add
add
jmp
je
mov
addr16
popf
and
adc
fs
mov
lea
dec
test
push
jb
test
lret
mov
xchg
cmp
aad
movl
aam
inc
add
push
xchg
push
sbbb
jne
fs
push
daa
sbbl
add
add
inc
push
call
loopne
xchg
and
add
cs
mov
jne
pop
scas
jo,pt
cmc
add
add
xchg
dec
push
xchg
ret
add
cmp
test
pop
ss
cmpsl
jbe
fs
sbb
ja
fimull
sti
hlt
add
push
jnp
add
pop
and
push
xchg
dec
sub
aam
into
push
sub
lods
push
in
mov
sub
mov
mov
jb
rolb
pop
push
sbb
ficoms
jb
aaa
inc
push
or
jnp
dec
sahf
xor
jl
cmp
lcall
xchg
ret
or
incl
add
das
mov
jno
or
test
in
lock
bnd
hlt
add
and
jbe
add
mov
lret
mov
mov
push
fwait
mov
sbb
sbb
mov
jo
dec
in
div
dec
jmp
sti
jo
insb
jne
not
push
add
add
mov
icebp
pop
test
cmc
pusha
test
rclb
add
rolb
inc
jne
add
icebp
outsb
enter
dec
dec
jne
bound
add
or
cs
jmp
add
inc
cmp
add
shrl
clc
cmp
cmp
push
icebp
lea
sti
push
aas
pushf
xor
push
sub
push
insb
add
mov
cs
gs
mov
xchg
push
fs
inc
push
mov
testb
lret
arpl
cmc
inc
cs
push
cli
jg
insl
mov
lea
push
int
push
icebp
test
mov
sub
mov
mov
sbb
jge
or
not
jecxz
xor
aad
mov
add
add
sbb
and
negl
mov
call
stos
out
mov
jp
sub
add
jb
sub
outsb
or
jno
std
insl
rorl
jae
adc
cmpsb
mov
inc
ss
scas
lods
repz
std
dec
call
mov
popa
aaa
push
push
in
aam
pop
push
inc
push
lahf
mov
enter
dec
pop
cmp
add
icebp
xchg
and
adc
dec
addr16
pop
push
adc
dec
mov
adc
mov
test
sti
and
jb
mov
and
pop
jl
lock
push
addr16
aas
xchg
call
ds
cltd
adc
sbb
push
mov
cs
out
aam
add
push
jb
add
outsl
icebp
xor
aad
xor
aam
sarb
cmp
jle
jmp
jp
aad
jp
aad
and
aam
sub
inc
aad
lret
mov
lods
add
lods
fists
fistpll
lods
fists
movsl
fistpll
jle
fists
movsl
fbstp
jle
fists
insb
mov
or
in
push
icebp
stos
enter
add
add
fucomp
add
stos
enter
add
sar
mov
ret
sbb
dec
sbb
adc
push
sub
mov
and
sbb
or
and
dec
xor
hlt
fidivrs
or
sub
pushf
push
jb
cmpsl
int
pop
sub
repnz
mov
add
pushf
mov
mov
outsl
sti
push
aam
pop
sub
push
jb
jno
lea
es
je
push
push
push
dec
enter
sub
pop
add
pop
dec
movq
out
lea
push
call
inc
push
jecxz
ss
add
call
cmp
add
call
subl
push
call
add
int
cld
push
das
pop
leave
imul
push
int3
data16
in
add
sub
sti
sbbb
xlat
add
and
add
in
pop
pop
jno
jne
inc
mov
add
xchg
or
push
xchg
sbb
inc
pop
mov
push
or
es
adc
pop
pushf
dec
or
add
aad
mov
shll
mov
or
jb
repz
pop
mov
pop
into
push
dec
imul
xchg
jecxz
cmp
cmpb
sub
incl
add
mov
push
scas
out
jns
js
lea
icebp
insb
cmp
add
xchg
inc
jl
hlt
sub
and
add
outsb
test
sbb
sub
and
jno
sbb
xchg
add
and
jp
sbb
adc
jmp
daa
in
push
xlat
shll
inc
add
daa
push
mov
out
lahf
daa
sbb
icebp
jmp
jl
sub
add
leave
fdiv
aam
jmp
addb
icebp
add
add
push
inc
jp
stc
daa
scas
add
dec
js
or
push
icebp
add
divl
test
lock
shll
call
dec
das
inc
in
dec
addr16
adc
push
pusha
sbb
sbb
ficompl
push
test
loop
and
mov
and
loop
and
add
dec
fucomp
mov
enter
xor
sahf
cmc
push
fs
push
and
cli
jp
ja
mov
or
add
jmp
add
cli
inc
cmp
lds
repnz
aaa
add
xlat
fldl
addb
pop
pusha
in
push
call
jae
pop
sub
sbb
mov
add
xor
jae
pop
cmp
xor
and
icebp
xchg
dec
call
ss
test
repnz
nop
or
aaa
inc
and
insl
jnp
cmp
xchg
push
cmc
inc
cli
jae
out
xchg
and
daa
xchg
and
xchg
fcoml
call
jle
dec
inc
cwtl
and
cwtl
and
sub
sub
xchg
out
mov
add
dec
call
cld
add
sbb
clc
mov
mov
add
cld
cmpsb
repz
push
lea
pop
pop
js
cwtl
adc
jecxz
and
cwtl
and
daa
js
icebp
call
addl
and
sbb
in
outsb
repnz
popf
add
sbb
js
call
lret
lods
add
mov
popf
sbb
xchg
rcrl
mov
icebp
adc
insb
icebp
stc
add
jmp
inc
int
jp
xchg
cmc
mov
dec
hlt
daa
lahf
dec
jo
or
testb
mov
push
leave
shlb
cmp
and
repz
mov
add
mov
cmc
push
icebp
add
test
add
add
iret
adc
sahf
enter
xor
shlb
pop
jecxz
xor
jge
sti
aam
sti
xor
fsubl
data16
sub
jle
repz
add
aam
jmp
adc
out
mov
repnz
add
mov
jle
add
push
in
add
push
icebp
mov
cld
and
fidivrs
cmc
ret
stos
sbbl
sbb
inc
arpl
fsubrp
outsl
adc
shrb
mov
push
push
jne
or
sub
lea
stc
call
jmp
jns
or
pop
jecxz
lock
std
mov
rcrb
rclb
cld
cli
js
adc
jo
sldt
outsl
xchg
sti
ljmp
jne
aad
fsubl
mov
xchg
pop
imul
push
sbb
cld
ds
lock
push
xchg
pop
pop
cmp
inc
popl
mov
clc
xchg
cwtl
sti
dec
jge
xchg
mov
cld
fimuls
daa
push
das
sbb
xchg
xchg
int3
cld
add
rolb
cld
pop
or
orl
incb
cmp
cld
jle
daa
enter
mov
xchg
cmp
cmp
scas
imul
in
std
int3
icebp
insb
inc
inc
ffree
test
std
mov
loope
fisubs
cmp
sbb
mov
inc
push
stc
jmp
adc
lock
out
and
test
add
sbb
or
aam
sbb
stos
sti
push
or
dec
and
sub
jno
sbb
and
nop
pop
icebp
jmp
add
cmpsl
pop
push
pop
daa
rcll
test
pushf
outsb
mov
mul
pop
mov
xchg
in
jp
push
je
mov
dec
jo
shll
push
hlt
sbb
or
icebp
add
add
xlat
mov
push
xchg
and
ss
fbstp
add
leave
mov
icebp
call
cmpsl
sub
push
push
adc
push
rcll
jns
add
push
dec
in
mov
jo
add
in
inc
add
xor
and
shlb
lea
repz
add
hlt
sti
incl
add
outsl
outsl
xor
xor
out
pop
mov
or
std
incl
push
adc
imul
dec
insb
aas
and
jno
je
insl
outsl
and
lret
pop
sbb
or
pop
lds
add
les
fidivrs
inc
add
imul
inc
xor
addr16
add
or
inc
sub
add
pop
adc
pop
adc
inc
add
mov
push
push
xchg
pop
in
test
daa
jnp
pop
inc
push
or
dec
mov
mov
in
incl
adc
fisttpl
push
or
mov
and
testl
cmp
pop
xor
jae
xchg
setle
add
cmp
cld
cli
hlt
mov
cs
repnz
incl
pop
nop
add
or
pop
dec
push
icebp
sub
sti
hlt
push
cmp
xchg
icebp
data16
mov
and
imul
shr
les
filds
std
inc
push
mov
enter
enter
mov
mov
mov
aad
mov
add
repz
pop
sbb
insl
loopne
lock
add
jo
filds
or
vcvttsd2si
cmp
sub
testb
nop
aad
jmp
iret
bound
scas
and
lret
fcomps
cli
hlt
push
add
lret
sahf
or
stos
xor
notb
inc
pop
add
addr16
xchg
lods
add
inc
mov
jp
imul
push
mov
jo
in
or
inc
clc
sti
nop
sbb
cmp
sti
bound
adc
mov
adc
sti
imul
into
fistpl
add
xor
push
js
je
outsb
or
or
ljmp
add
add
cld
jne
ljmp
aad
xchg
cli
popf
outsb
or
sub
push
daa
sub
push
cld
ljmp
pop
fsub
push
pop
cld
pop
cmp
cld
jne
popa
cld
and
out
ltr
fwait
out
call
mov
inc
lods
inc
cmc
cmp
jns
je
jbe
cmp
outsb
or
jns
aas
push
inc
add
push
or
xchg
cwtl
or
int3
in
dec
aam
dec
movsl
arpl
idiv
push
push
pop
rorb
jb
in
and
and
repz
jg
sbb
ja
sbb
adcl
xlat
mov
hlt
add
es
adc
ja
adc
cmp
les
sub
daa
push
or
call
add
add
loope
pop
repnz
jae
inc
xchg
and
sub
arpl
sahf
add
in
daa
lahf
loope
inc
gs
adc
xor
call
pop
shll
cmp
or
sbb
xlat
sahf
fnstsw
int
sbb
insb
and
mov
std
pop
xchg
pop
rcll
sbb
pop
add
inc
mov
mov
push
pushf
inc
pusha
icebp
pushf
jl
je
or
add
mov
outsl
insl
sub
xor
lods
out
fidivl
incb
lahf
add
add
in
ret
and
push
icebp
out
inc
mov
jl
arpl
je
or
sbb
push
push
sti
sbb
jmp
sti
cld
add
fcoms
pusha
adc
rcll
mov
and
fistpll
leave
push
or
sti
xlat
pop
sti
mov
jg
pushl
jmp
xchg
js
jne
inc
mov
or
dec
pop
cmpsl
adc
push
inc
rcll
push
mov
sbb
fcoms
fldcw
or
add
mov
push
lods
sbb
adc
in
call
add
outsl
add
int
cld
adc
pop
inc
mov
popa
mov
push
fwait
out
sub
cld
pushl
lods
outsl
sub
lods
xor
jle
cmp
sub
je
bound
xlat
push
xchg
out
adc
cltd
or
adc
push
mov
cmpxchg
add
outsb
enter
gs
rcpps
ja
test
imul
aas
jae
test
adc
jns
sbb
dec
test
inc
ja
adc
scas
dec
xorl
pop
cld
cmp
jb
xchg
pop
lods
sbb
adc
or
push
enter
stc
or
add
push
cmp
inc
dec
icebp
popl
outsb
fwait
in
cltd
fs
sbb
sbb
cwtl
push
mov
out
test
add
mov
or
xchg
mov
pushl
xchg
push
or
or
popf
sti
cwtl
movsb
leave
out
xor
add
cltd
fldl
inc
in
mov
push
popf
jecxz
add
je
jo
push
mov
test
or
sub
imul
mov
or
loop
sti
push
push
iret
nop
cld
nop
adc
xchg
mov
mov
or
lret
out
inc
iret
movsb
cld
adc
jb
jno
in
mov
add
add
push
push
adc
xchg
or
add
pop
adc
adc
jge
pop
inc
jmp
icebp
dec
pop
decb
das
xchg
add
call
popf
xchg
test
mov
out
inc
add
testl
incl
cwtl
incb
stos
shrb
add
cmp
cmp
pop
imul
pop
push
push
add
add
in
cmp
test
xchg
cmp
out
or
push
cmp
jne
movsl
lds
ljmp
lea
dec
mov
pop
push
call
das
lods
or
jp
shlb
mov
adc
dec
in
push
or
mov
or
jl
in
aas
or
pop
or
jnp
add
enter
lock
push
or
cmp
jp
xor
adc
fiaddl
adc
push
mov
repnz
or
jb
inc
hlt
cld
cld
pop
jnp
jg
andb
jne
jmp
dec
add
movb
arpl
mull
add
xchg
or
daa
mov
icebp
cltd
hlt
fs
outsb
adc
sbb
out
add
sub
mov
popa
or
ret
test
pop
aam
add
mov
push
adc
out
inc
mov
pushf
mov
inc
loopne
pop
mov
cmc
jo
add
push
add
aaa
pop
xorb
ljmp
outsb
sbb
sbb
fadd
adc
xor
add
mov
fs
es
xchg
sbb
or
xor
add
add
add
inc
push
mov
jl
adc
pop
pop
jecxz
sti
nop
adc
call
out
dec
pop
jns
icebp
test
out
icebp
push
bound
sbb
in
mov
mov
cmp
or
testb
out
sti
pop
pop
or
add
cld
xchg
add
pop
lods
pop
mov
cld
add
sbb
mov
ror
pusha
lahf
pop
adc
cmp
hlt
cs
ljmp
cld
call
mov
sub
clc
outsb
or
mov
call
neg
outsb
sub
xchg
pop
cli
inc
jp
cli
jp
cld
adc
xor
mov
out
cmp
add
add
insb
mov
jmp
outsb
stc
push
int3
sti
cmp
idiv
add
testl
mov
repnz
mov
lea
idiv
mov
sbb
jle
sbb
inc
push
add
out
pop
pop
adcb
push
das
jo
cmp
movsl
mov
mov
xchg
lea
test
push
fwait
add
add
pushl
pop
push
add
add
jl
adc
add
cmp
adc
cmp
sbb
call
pushf
das
cli
sbb
cmp
jb
xor
cld
add
jbe
dec
subl
push
xor
lods
fnsave
xchg
push
fisubrl
into
nop
pop
test
lods
mov
repnz
mov
addl
push
icebp
pop
adcb
ret
or
lods
stos
stos
lea
icebp
add
jp
xorb
pop
sbb
jmp
js
aam
add
icebp
add
or
aad
mov
xchg
jp
mov
ljmp
repnz
sub
jno
lods
add
mov
loopne
lods
add
add
add
push
insb
adc
or
inc
mov
in
add
int
mov
call
adcb
data16
sti
out
ja
jmp
cld
outsb
add
push
jb
or
mov
ja
lds
int
lock
xchg
mov
push
icebp
add
xlat
xchg
add
dec
andb
add
or
pusha
fmul
or
cmp
add
cli
ljmp
pop
dec
pop
jecxz
dec
cmc
add
jmp
adc
mov
cmpb
jb
xchg
push
xchg
shlb
mov
testl
inc
jne
mov
and
call
add
out
pop
pusha
add
imul
mov
inc
jne
and
in
mov
add
mov
push
mov
fwait
add
loopne
cld
call
les
cmp
inc
call
incl
jmp
jns
aam
mov
xchg
fldl
push
sub
out
lods
cmp
mov
jg
cld
jmp
js
add
fcoms
push
stc
add
call
push
sbb
fisttpl
sti
mov
loopne
jne
jmp
shrb
xchg
xchg
call
add
sahf
adc
mov
into
xor
mov
add
jne
or
mov
and
xor
xchg
outsb
icebp
jmp
add
mov
sldt
sub
popf
fildl
outsb
movsl
invd
jbe
pusha
in
jmp
push
add
inc
push
add
dec
nop
push
or
aas
add
pop
repz
add
int3
mov
xchg
fwait
push
lods
cmc
mov
mov
fists
push
notb
ss
out
repnz
mov
out
add
adc
cltd
movsb
lea
mov
add
pushf
push
sti
scas
into
add
and
nop
add
dec
jo
sbbl
test
repz
cmp
xor
mov
jb
mov
push
mov
push
cli
nop
sbb
clc
int
or
push
jg
add
movb
aad
jne
add
es
jb
sarb
add
sub
cld
sub
jbe
call
jo
push
pop
test
add
sbb
nop
fldenv
lods
jle
call
xchg
push
inc
mov
scas
cld
push
push
fwait
call
mov
outsl
out
jne
mov
inc
cld
sub
jbe
xchg
and
lret
jne
lock
mov
addl
ss
dec
call
push
leave
sub
add
push
jnp
push
xor
jge
sbb
test
xchg
inc
faddl
pop
jle
std
popl
leave
bound
pop
out
mov
insw
or
sti
sbb
add
xor
dec
sarb
pop
mov
add
enter
dec
orl
add
dec
push
add
popa
cld
pop
lock
push
sti
push
imul
sti
je
les
xlat
bound
push
xchg
dec
or
sti
sti
push
icebp
je
pop
mov
add
push
or
cmpb
fcomi
jmp
or
push
push
divb
push
lret
mov
jo
jecxz
sbb
sbb
cmp
add
add
out
push
xchg
leave
inc
add
mov
cmpsb
jle
push
adc
movb
add
xor
inc
cwtl
jnp
mov
adc
cmp
mov
inc
jmp
bnd
jmp
pop
add
pop
outsb
mov
cmc
mov
mov
insb
adc
pop
mov
call
ret
loop
out
jne
add
sub
call
negl
cs
pushf
leave
stos
pop
icebp
push
jb
mov
lea
mov
add
lret
and
icebp
test
lds
mov
sahf
add
std
inc
insb
cli
adc
or
bound
add
add
add
add
out
idivb
push
lret
dec
sbb
out
add
push
inc
xchg
push
and
movsl
push
leave
push
adc
jge
lock
push
sahf
mov
outsb
das
adc
cmc
call
mov
rol
mov
xchg
cwtl
add
add
push
and
call
mov
sbb
push
xchg
cwtl
add
add
sub
push
mov
stc
je
pop
push
push
fadds
add
jle
push
add
push
imul
cmp
cld
sti
enter
mov
pop
adc
add
repnz
out
or
sti
outsb
pop
jg
or
push
mov
call
stos
idiv
and
leave
adc
and
push
out
push
inc
and
rolb
fs
cld
push
mov
and
mov
jg
test
outsl
pop
push
sti
lock
outsb
ret
imul
jnp
mov
out
dec
xchg
jmp
add
aaa
dec
add
pop
cltd
cmpsb
mov
dec
icebp
mov
aas
mov
std
push
stos
addr16
std
or
outsb
repz
cli
push
and
stos
aad
add
sbb
jmp
cld
loopne
arpl
repz
xlat
jle
mov
stc
jo
int3
sub
je
add
ret
or
sbb
push
mov
push
add
test
hlt
mov
add
lds
push
dec
cld
int3
sbb
jg
ds
test
jecxz
sub
icebp
add
int
call
mov
add
sbb
push
mov
sbb
adcl
jmp
imull
fdivrp
pushf
pop
xor
js
sbb
mov
add
add
cli
cmpsb
sub
sub
xchg
cmp
xchg
lret
mov
adcl
cli
mov
push
or
pop
jo
sbb
aaa
add
add
insl
in
push
mov
movsl
bound
stc
ljmp
enter
sbb
out
bound
or
push
mull
lret
mov
adcl
cli
mov
sahf
jo
sbb
xor
in
adcl
push
sbbl
add
mov
je
popa
xor
push
sti
es
fwait
and
xchg
add
cmp
out
call
out
test
out
jecxz
clc
xchg
and
das
xchg
mov
repz
rcrb
test
ficompl
adc
aaa
sbb
loopne
imul
sbb
data16
mov
mov
dec
mov
out
rorl
ljmp
add
je
mov
add
push
xor
sub
test
or
in
dec
pop
lock
push
sbb
out
push
jmp
sbb
mov
stc
inc
je
push
les
xor
jnp
pushf
imull
sub
or
add
mov
mov
fst
int3
imul
pop
imul
inc
outsl
cmc
jge
add
dec
or
xor
or
inc
hlt
icebp
outsb
inc
dec
xor
add
test
sbbb
icebp
mov
or
add
mov
and
enter
ret
aaa
and
xchg
punpckhbw
sbb
jne
pop
loopne
loop
push
mov
jb
in
mov
out
xor
jb
icebp
add
inc
out
fildl
add
and
in
xor
pushf
sahf
outsb
jae
shll
aas
jmp
or
xchg
xor
clc
jae
pop
mov
inc
jmp
arpl
aas
add
test
push
jno
jne
ret
mov
incl
sti
dec
scas
mov
push
ljmp
jno
or
add
add
lods
cld
orl
adc
cld
orl
test
push
ret
push
mov
aaa
add
sti
sub
push
nop
dec
lcall
adc
lock
test
lahf
icebp
sub
and
or
inc
lret
mov
sbbb
sti
js,pn
xorb
add
or
add
es
dec
popl
dec
add
jo
je
subl
shr
add
add
call
sti
fs
pop
inc
sti
jle
in
addr16
call
or
je
cld
out
enter
fcom
out
jns
incl
push
arpl
rcr
add
jle
push
pop
adc
icebp
add
add
stc
gs
sahf
xor
test
jle
cli
xor
fildl
add
sbb
icebp
outsb
int3
push
loop
int3
icebp
jmp
cld
mov
or
cli
cld
daa
pop
ljmp
jae
out
les
xchg
pop
iret
icebp
jmp
mov
mov
test
ss
lea
aad
xchg
cli
xchg
inc
aam
mov
add
xchg
icebp
jg
mov
daa
aaa
cli
adc
or
fstl
icebp
or
xchg
add
or
je
movsl
and
loopne
or
aad
shrl
idiv
mov
add
xor
rcrl
sahf
mov
add
adc
jne
test
sti
xchg
and
in
mov
add
jns
adc
add
add
push
cli
popa
jns
aad
push
or
push
icebp
add
sbb
and
lcall
mov
movb
imul
hlt
sbbl
mov
divl
lcall
or
and
out
mov
add
mov
addb
int
or
add
rolb
add
jp
inc
or
daa
clc
in
jnp
and
ja
and
movsb
mov
call
test
test
test
push
insl
jns
and
cmc
call
jge
ja
jbe
outsl
ss
xchg
rorb
aas
or
aaa
inc
jbe
das
lret
out
push
lock
jae
push
or
add
aam
int
xor
int
xor
int
adc
cwtl
jmp
movsb
xchg
out
aaa
movsb
frstor
xchg
pop
jl
aaa
sub
test
and
dec
xlat
adc
sbb
adc
fucomip
cmp
les
or
adc
icebp
lock
int
into
movsl
lds
sub
stc
sub
add
jge
cmpl
add
loop
aaa
mov
sarb
rol
xchg
test
inc
int
fistl
jge
sbb
notb
jae
pop
pop
cwtl
negb
outsl
int
jge
int
sub
fucom
adcl
xlat
push
out
push
fs
cmp
fdiv
dec
div
ret
test
add
add
mov
icebp
push
jb
jbe
and
add
jmp
jge
xlat
lcall
add
sbb
out
orb
mov
sub
inc
test
in
data16
mov
int
sbb
insl
lock
int
loopne
int
out
popl
jmp
push
icebp
add
add
dec
icebp
add
add
je
jne
and
insb
jl
add
cmp
sbb
mov
inc
and
popf
mov
call
mov
jl
es
fldl
add
add
jb
and
add
adc
xorl
fs
in
jle
pop
add
sti
push
test
in
add
adc
xor
add
std
je
cmp
lcall
ds
adc
dec
jp
and
in
add
dec
insb
shlb
inc
cmp
addl
mov
ljmp
and
inc
jnp
pop
lea
lret
dec
and
sbb
mov
into
push
inc
push
orl
arpl
inc
aaa
in
adc
add
pop
clc
ds
int
xor
int
inc
xchg
lds
push
dec
or
ljmp
mov
and
fadds
xchg
adc
dec
xlat
outsb
clc
push
sti
pop
and
pop
es
addb
jmp
xchg
lods
or
daa
imul
outsl
lock
daa
arpl
xchg
daa
pop
out
sub
movsb
sbb
add
sbb
daa
dec
icebp
xchg
decb
jle
psubq
in
clc
addr16
cmc
rorb
addr16
faddl
mov
jmp
jge
sbb
fldpi
enter
jae
scas
pop
mov
leave
rol
repnz
fcmovnu
mov
and
mov
in
jmp
push
stc
jle
push
out
call
add
push
push
movsb
push
in
add
jb
loope
imul
and
cli
push
hlt
repnz
mov
jne
in
dec
orl
add
add
insb
int
cmp
callw
cld
mov
push
push
push
mov
or
add
popa
or
or
add
add
jp
aas
add
les
roll
add
push
jmp
or
push
add
xchg
add
cmc
cmc
ja
push
in
lods
imul
jne
add
mov
push
test
testb
scas
jno
std
cmp
enter
mov
gs
pusha
in
adc
add
xor
xchg
ja
cld
std
inc
push
call
add
aaa
mov
aas
pop
inc
dec
push
std
pusha
in
ja
dec
push
and
icebp
mov
mov
sbb
xchg
sub
xchg
out
pop
sti
inc
sahf
add
fsubrl
call
push
imul
sti
ficoms
sti
movsl
inc
jnp
xor
jb
aaa
xor
push
fcmovu
and
push
jp
push
jmp
push
add
cli
cli
add
data16
inc
push
xchg
and
push
jb
mov
inc
sti
pop
and
out
jg
rcrb
notb
push
adc
repz
dec
dec
xchg
faddl
push
and
jle
jnp
add
jae
add
add
call
pop
sub
out
fstl
pushf
inc
mov
je
out
out
cwtl
fildl
add
cmpsb
xor
mov
mov
push
sbb
jns
lods
call
dec
icebp
punpckhwd
mov
add
call
out
jnp
dec
or
mov
out
and
or
dec
pop
cmpsb
inc
mov
sub
stc
insb
je
xor
fsts
icebp
push
adc
push
pop
add
je
mov
adc
subl
icebp
push
pop
inc
lea
test
and
insb
sub
sahf
add
inc
test
test
lcall
popf
insb
cmc
dec
orl
adc
adc
add
jl
add
jmp
in
scas
add
push
stos
icebp
dec
push
pop
push
testb
add
leave
fisttpll
clc
hlt
add
icebp
mov
add
mov
mov
lea
mov
dec
lcall
or
sbb
inc
orb
xchg
pop
add
sub
inc
fcomp
dec
pop
cld
jmp
fdecstp
dec
enter
roll
cmp
xor
dec
mov
add
lcall
add
jae
mov
in
lret
sarb
dec
ds
shrb
add
sti
pushf
sub
adc
rolb
jns
push
cld
and
sti
inc
mov
mov
mov
sub
sti
dec
stos
mov
out
gs
ss
push
cmp
inc
push
or
add
add
jle
fnstcw
add
mov
loop
push
dec
xchg
fidivrl
addr16
std
fildl
push
fnsetpm(287
cld
icebp
fs
outsl
stc
mov
inc
int
pop
jns
dec
cmpsb
jmp
cltd
jmp
add
hlt
out
in
mov
ret
icebp
movsl
pushl
xlat
in
and
call
dec
push
ja
hlt
add
rcrb
dec
sub
stc
bnd
icebp
out
fisubs
shl
out
sub
and
xor
js
cmc
pushl
sbb
add
gs
flds
cs
cli
mov
gs
ja
xchg
scas
inc
in
adc
mov
and
psllw
jmp
mov
mov
dec
notb
adc
test
push
icebp
call
jb
inc
xchg
jb
in
js
fildll
je
fdivrl
push
adc
push
aam
ss
fwait
or
dec
js
in
sbb
add
es
sub
xchg
pop
icebp
in
scas
add
fstps
sbb
add
mov
xchg
rclb
ror
push
leave
test
add
fidivrl
mov
add
std
call
es
int
pusha
cltd
lods
cmp
inc
pop
subl
mov
sbb
mov
sbb
or
cmp
ljmp
jl
imul
dec
push
jmp
add
hlt
lock
push
call
mov
jne
insl
inc
and
sbb
call
notl
add
jmp
ja
in
dec
mov
out
lods
mov
in
pushf
or
push
push
icebp
jg
movb
fsubrs
rcrb
je
pop
pop
or
inc
hlt
ficoml
push
adc
adc
je
fs
lds
push
push
hlt
imul
dec
or
pop
movsl
adc
add
stos
loope
aas
das
push
or
add
add
dec
xor
loope
sti
push
daa
cmp
incl
pop
pop
repnz
cmp
mull
push
icebp
out
shrl
or
insl
jbe
push
icebp
dec
hlt
mov
inc
loope
sub
or
lock
icebp
jo
dec
mov
or
adc
add
push
call
add
add
jp
lock
or
je
or
adc
aad
in
mov
push
xchg
pop
out
mov
push
inc
rclb
call
iret
fs
lcall
add
add
inc
cmc
cmp
jmp
daa
push
fldenv
sbb
push
stos
add
sub
add
add
dec
outsb
add
outsb
lret
cmpsb
xchg
ds
ds
sub
call
sar
cmp
add
push
jmp
mov
enter
ds
jmp
jb
add
dec
and
in
add
bound
pop
jmp
shll
call
inc
repz
arpl
add
mov
add
dec
add
testb
cmp
cmp
ljmp
fnstcw
cmp
push
sub
push
pop
adc
pop
test
add
aad
in
out
add
dec
jp
mov
stc
dec
test
icebp
add
push
push
mov
iret
push
call
ds
ljmp
mov
sbb
mov
sarb
inc
push
adc
repz
lcall
jae
inc
adc
ja
fcmovb
inc
flds
dec
aad
push
out
test
mov
addr16
test
je
and
sti
add
call
cld
push
pusha
add
jb
lret
dec
icebp
bound
add
adc
xor
sti
lock
xchg
add
outsb
push
lods
repnz
into
sbb
test
dec
and
push
icebp
mov
aam
add
pop
out
cltd
mov
in
push
pop
sub
fdivp
out
cmp
call
sub
rcll
in
outsl
pop
xor
xchg
or
cmpsl
lock
icebp
je
das
adc
fldl
add
testl
je
sub
call
std
inc
insb
icebp
bound
or
iret
rcr
sub
inc
push
jle
je
push
rcr
aaa
mov
sub
push
call
fucomip
or
dec
test
popf
mov
add
or
icebp
add
call
je
or
subb
add
lret
adc
add
inc
mov
rcl
add
aad
adc
subl
out
enter
push
or
add
inc
and
jne
and
jae
or
xor
add
jae
and
imul
lret
or
and
test
loop
mov
aad
movsl
add
pop
movb
popa
rcrb
in
pop
xorl
cli
gs
add
stos
stos
add
test
xor
mov
push
add
jb
or
mov
or
in
bound
push
jnp
jle
iret
mov
outsl
aas
add
push
pop
das
xchg
inc
or
loop
push
enter
fwait
lret
fwait
das
test
add
and
decl
add
andl
andl
mov
fadds
adc
clc
sbb
add
lock
lret
lret
rolb
add
add
lea
arpl
enter
popf
mov
pop
push
icebp
out
xchg
lock
outsb
xor
mov
add
out
jnp
outsl
fstps
adc
push
icebp
insb
mov
push
icebp
push
fstps
and
hlt
sub
mov
call
leave
pushf
sub
outsb
ret
or
dec
inc
add
push
fisttps
jg
lock
icebp
out
jno
repz
ds
add
push
icebp
out
fnstenv
cmpsl
imul
loopne
data16
in
test
add
pusha
shr
mov
mov
sbb
mov
dec
sub
cli
dec
push
jle
dec
or
sbb
hlt
dec
jbe
push
loopne
lods
sbb
or
jmp
pop
fldl2t
mov
insl
adc
sub
es
int
es
jbe
adc
faddl
xchg
add
mov
icebp
je
leave
sbb
xchg
lods
fdivrp
into
adc
cmp
ja
push
addb
idiv
stc
aaa
std
jmp
mov
jmp
icebp
das
std
lea
jmp
jmp
cmc
lods
mov
ret
cmp
xor
test
adc
pop
roll
roll
add
fdiv
add
xor
adcl
xor
mov
cmc
mov
add
insb
add
push
inc
push
pushl
movb
inc
lock
inc
cld
dec
dec
push
cli
xchg
sahf
out
xchg
or
lcall
xchg
jg
pop
insb
xchg
and
fwait
daa
call
xor
mov
add
add
mov
adc
mov
adc
pop
aad
jg
cmpsl
jne
push
cmpsb
into
lea
gs
jg
push
cmp
jle
aam
jnp
inc
mov
pop
in
icebp
loop
repnz
out
mov
outsb
and
jmp
pop
jmp
leave
and
jne
add
out
loope
out
in
cwtl
add
ss
imul
aad
jne
dec
push
outsb
cmc
shrl
cmovge
cmp
sbb
push
icebp
mov
xor
xor
rcrb
mov
fsubl
mov
dec
jae
push
icebp
lcall
fisttpl
mov
imul
nop
lock
push
je
cmc
sub
sub
add
xorl
jmp
gs
test
shl
add
aad
sbb
flds
lret
cli
add
and
inc
mov
push
inc
cli
aam
incl
shll
push
jb
popf
mov
out
xor
call
cmp
jge
test
or
mov
cmp
sbb
jb
adc
add
push
jo
fldenv
sub
dec
incl
dec
jmp
jno
or
int
sub
and
push
lods
sub
jb
clc
mov
mov
mov
aas
add
inc
mov
and
sbb
jo
hlt
out
daa
jmp
jmp
mov
cs
jmp
call
stos
idiv
lods
pop
jmp
push
push
push
mov
add
rorl
mov
out
jne
mov
xorb
inc
hlt
push
lcall
cs
int
and
test
sti
into
fs
call
xlat
scas
pop
or
cmp
call
fistl
call
cld
mov
mov
ret
jo
iret
das
xchg
xor
push
lcall
test
add
and
fwait
pop
adc
rcll
je
dec
int
sahf
adc
adc
jmp
push
xor
pushf
bound
fisubrl
stos
jl
jl
mov
inc
fidivrl
inc
mov
loope
daa
out
lretw
or
pop
push
cmp
roll
jp
add
fidivrs
cwtl
push
fsub
pop
dec
hlt
xchg
jg
ret
xor
xchg
icebp
jae
pop
loopne
out
and
insb
sub
dec
addr16
pusha
fiaddl
out
mov
scas
out
pop
cmp
xchg
pop
out
sbb
sarl
add
data16
loope
push
shll
test
mov
pop
fstl
and
cs
fldcw
add
dec
dec
call
push
pop
imul
fnstcw
push
pushf
dec
repz
movsb
lock
or
push
clc
flds
into
arpl
imul
dec
enter
add
mov
mov
icebp
mov
push
add
push
mov
test
fistps
inc
add
out
push
mov
call
cmp
and
push
push
mov
mov
push
xor
addb
jmp
cli
cmp
sub
or
in
jns
outsb
cmpsl
push
ret
icebp
sub
test
in
je
xchg
incl
ljmp
sarb
mov
sbb
in
mov
add
cmp
inc
cmp
bound
push
aas
pop
or
mov
mov
ja
incl
push
fstpt
push
fsub
xor
xchg
lret
jne
push
int
ret
and
incb
mov
std
fildl
orl
enter
lret
shlb
push
cmp
or
call
add
xlat
xchg
fs
add
lret
inc
dec
mov
or
lea
icebp
sub
sub
adc
dec
popa
lcall
xor
test
lahf
mov
mov
push
testb
adc
jb
add
call
add
jle
pop
add
outsl
aam
sub
pop
sub
lret
push
mov
aas
icebp
inc
icebp
fs
sti
shll
sbb
lds
out
pop
outsl
mov
cld
dec
outsb
mov
in
add
and
add
push
jecxz
shrl
or
outsb
sbb
loop
push
fucomip
rcll
arpl
dec
mov
add
push
aaa
mov
jecxz
pop
and
fistl
icebp
std
sub
jne
test
jmp
sbb
dec
mov
inc
xchg
add
cmp
jne
dec
fcoms
sahf
pop
and
inc
mov
ret
in
dec
icebp
mov
add
jmp
jne
add
jmp
jb
jmp
fincstp
je
jmp
cmp
add
aam
xor
test
cmp
jmp
jne
les
jmp
pop
sub
add
in
icebp
jne
add
jmp
jno
jmp
shl
je
aad
adc
xor
shll
pop
mov
rclb
adc
mov
enter
add
js
xchg
iret
je
pop
call
jg
inc
push
or
sbb
sbb
jp
adc
pop
js
dec
pop
cmp
push
inc
mov
shlb
add
cwtl
jnp
fdivrl
adc
ret
es
mov
pop
add
push
xchg
mov
add
inc
dec
and
enter
pop
cmpsb
xchg
test
aas
add
push
inc
lret
sti
push
loopne
je
mov
xor
jle
arpl
push
leave
sbb
ret
mov
shl
pop
pop
hlt
stos
xor
push
adc
sub
sub
jns
decl
dec
lock
cmpsl
add
mov
push
test
idivl
adc
xchg
inc
dec
addr16
inc
cld
xchg
cli
xchg
add
push
add
push
mov
add
mov
pushf
inc
loop
adc
dec
jle
test
cmp
jbe
dec
xor
jnp
adc
in
push
cli
outsb
in
lret
or
pop
xchg
jmp
daa
inc
add
daa
outsb
or
idivl
jne
imull
jge
jmp
in
sub
pop
ds
mov
fistl
add
mov
add
push
jbe
lahf
jmp
adc
xchg
rorl
adc
addb
dec
add
fidivrl
aas
das
dec
sarl
mov
sbb
add
dec
adc
je
jae
or
sarb
addr16
push
hlt
test
shrl
dec
dec
arpl
xor
cmp
test
xor
dec
push
add
dec
lods
pusha
pop
mov
push
cs
add
add
icebp
paddusw
mov
push
jp
add
add
insl
mov
push
xchg
mov
imul
push
daa
add
ja
iret
test
fistpl
icebp
or
imul
jmp
mov
add
push
add
push
pop
mov
test
or
push
mov
sub
incb
jg
enter
pop
pusha
cld
push
pop
push
add
push
push
clc
push
xlat
dec
pushf
bnd
fnstcw
pushl
sti
xchg
pop
dec
hlt
push
push
inc
lock
mov
dec
or
enter
insb
add
out
dec
hlt
enter
adc
or
rcl
iret
add
push
icebp
out
int3
enter
jnp
js
icebp
out
aam
shlb
into
mov
subl
outsl
mov
dec
jns
jp
int
jmp
jbe
dec
gs
and
jp
js
enter
sbbb
aad
inc
inc
or
dec
jp
stc
inc
inc
testl
mov
call
sub
mov
add
xchg
std
out
push
int
lret
mov
mov
fcoms
add
push
cmp
jb
dec
and
add
ss
pusha
sub
ss
jle
shr
push
icebp
xchg
ror
and
or
andb
mov
add
test
inc
jo
int
stos
subl
xchg
add
test
imul
ret
pop
mov
or
xchg
ror
and
mov
andb
dec
adc
into
mov
add
stos
cmp
xchg
mov
and
push
in
cmp
test
imul
js
dec
andb
stc
mov
add
xor
sub
xor
daa
repnz
dec
scas
dec
sub
add
inc
or
add
and
dec
shll
jne
loop
push
mov
mov
ret
xchg
fdiv
decl
mov
add
dec
shll
clc
popa
sbb
inc
inc
xor
mov
xlat
and
fmuls
lock
fstpt
xchg
xor
lcall
or
add
xor
mov
shl
add
inc
adc
push
pushf
mov
iret
ret
or
pusha
add
or
pusha
in
pop
push
mov
stc
push
lret
sbb
ljmp
push
pushf
mov
aaa
adc
xorl
iret
xchg
js
push
mov
xchg
push
xchg
jmp
mov
add
cli
mov
filds
sbb
fnstsw
inc
xchg
add
inc
decl
out
push
mov
xor
iret
repnz
fstpt
inc
mov
pop
xchg
je
add
mov
jmp
adc
mov
mov
pop
hlt
outsb
loop
es
mov
in
out
push
mov
xchg
sbb
add
inc
sbb
xchg
and
inc
jmp
jnp
xchg
call
jo
jb
leave
mov
outsb
shll
inc
loope
es
push
mov
ret
int3
cli
fisubrs
stc
rclb
mov
or
mov
lret
cli
push
int3
pop
aas
cmpsb
mov
jle
pop
cmp
jle,pn
add
and
cmp
cld
sbbb
xchg
loopne
add
xchg
or
adc
and
outsb
and
insb
stc
or
stc
pop
andl
pop
add
add
mov
idivl
test
lods
add
outsb
shll
add
push
movsl
fisubs
sub
mov
js
or
je
add
repz
call
mov
pop
stc
add
adc
add
ljmp
decl
push
sub
incb
divb
push
push
inc
lock
fdivrl
call
push
test
jae
mov
push
xor
stos
mov
sti
push
loopne
inc
stos
mov
or
pop
dec
sti
pushf
mov
hlt
jne
leave
xchg
sar
fwait
lods
fldenv
lahf
mov
push
fcomps
dec
dec
push
mov
mov
adc
sbb
pushf
push
fdivr
test
lods
nop
push
fdivr
adc
add
dec
xchg
inc
adc
cmp
xorl
cmp
jmp
test
sbb
cmp
add
in
ljmp
sbb
cmp
mov
clc
adcb
ljmp
xor
mov
cmc
pop
pop
inc
or
cmp
insb
mov
aaa
cmp
test
test
push
or
repz
sbb
inc
jl
or
xor
into
mov
mov
add
imul
xchg
cli
stc
or
sub
adc
add
lret
dec
insb
icebp
insb
pop
aas
or
push
enter
icebp
add
or
nop
xor
pop
push
icebp
add
push
icebp
dec
bound
or
sti
fiadds
push
arpl
je
pop
addb
filds
es
sub
inc
ret
addb
add
std
aaa
ret
in
adcb
or
test
xchg
mov
js
or
jg
and
ja
jne
fldcw
add
pop
mov
mov
andb
cmp
loop
mov
insb
out
paddw
adc
adc
popf
rol
pop
add
cmp
mov
in
dec
jp
or
sub
test
add
xor
enter
xor
sub
fimuls
mov
jl
sbb
dec
inc
dec
pop
jg
and
or
dec
adc
lret
leave
adc
pop
ja
cmp
aad
enter
push
sbb
add
dec
dec
add
mov
add
push
mov
sti
pop
jl
inc
push
inc
ret
push
nop
fisttpll
cld
push
fiaddl
mov
xor
int3
shrb
idivl
pop
or
jg
int3
sub
stc
jo
int3
stos
mov
lods
sbb
add
sbbb
mov
jbe
mov
stc
pop
int3
mov
mov
push
lds
test
out
cmpb
cwtl
cmp
mov
mov
leave
stc
xlat
xor
add
js
sub
jne
push
fmull
add
je
sub
and
xor
outsb
inc
movsl
call
js
insb
loop
pop
mov
jmp
add
add
js
jne
or
js
jno
dec
push
test
repz
inc
cltd
adcb
inc
cli
ss
mov
clc
stc
cld
pushf
out
inc
jmp
push
addr16
inc
dec
call
ss
rcrl
mov
mov
add
jmp
sti
xor
add
lea
je
adc
or
jge
je
adc
jb
mov
jns
sti
gs
pop
mov
je
add
sti
push
int
pop
test
adc
xor
adc
and
mov
mov
or
into
enter
xchg
jmp
xchg
test
add
add
insb
push
or
pop
ljmp
inc
push
push
or
outsl
dec
mov
icebp
inc
nopl
pushf
add
data16
addl
addr16
das
clc
jnp
cmp
xor
fmuls
or
or
mov
daa
or
inc
rcr
lea
sti
xlat
or
or
xchg
add
pop
sbb
lret
rorl
sbb
out
jnp
das
xchg
inc
inc
adc
lea
test
out
push
add
lea
mov
in
sbb
aas
fadds
into
stos
call
sbb
mov
push
test
fidivrl
icebp
out
pop
aas
fsubrs
sti
imul
mov
add
sub
xor
pop
inc
in
mov
out
or
gs
or
sbb
jae
lds
pop
jg
push
cwtl
jecxz
adc
icebp
insl
fcompl
add
in
jmp
adc
xchg
push
xlat
push
add
inc
xchg
hlt
jae
iret
ret
or
fs
mov
add
cmp
adc
roll
xchg
fnsave
sbb
cmp
dec
jbe
jle
mov
out
rol
pop
not
sbb
pop
movsl
jno
in
jbe
dec
movsl
mov
dec
icebp
push
cmp
ss
mov
push
call
in
cli
test
in
stc
add
addl
icebp
cmp
idiv
pop
mov
inc
add
outsb
out
xchg
or
cmp
pop
decl
push
add
mov
pop
xor
cli
jae
mov
aas
adc
inc
idiv
lea
and
xor
push
shlb
inc
aam
cld
fmuls
jno
or
and
sti
adc
jne
dec
shlb
cld
loopne
mov
xor
add
add
xchg
push
lds
into
jno
sti
mov
shr
mov
mov
adc
dec
xchg
mov
dec
enter
fdivs
mov
out
iret
or
js
stos
adc
mov
push
sub
inc
and
jae
dec
xor
push
push
dec
clc
jg
mov
inc
cmp
clc
lret
add
dec
dec
sub
daa
cs
stos
and
add
or
lods
arpl
cmpsl
add
xor
notl
mov
jmp
add
into
jmp
scas
mov
outsl
out
and
sbb
push
test
and
outsl
dec
pop
fnstsw
mov
inc
jg
push
jno
lods
mov
xchg
out
into
les
add
out
sub
inc
scas
not
in
or
dec
jle
mov
pop
adc
loop
lret
sub
test
add
lea
movb
enter
push
dec
icebp
add
test
add
add
push
jle
jo
lds
call
push
or
dec
add
cmp
je
sbb
cmc
jmp
icebp
add
mov
or
cmp
add
int
or
mov
cli
jbe
mov
in
jo
rorl
or
dec
mov
hlt
add
lahf
fcoms
inc
stos
imul
jmp
and
dec
lea
adc
call
mov
add
and
out
mov
xchg
sub
cli
xor
add
incl
xchg
rorl
jo
jmp
xorl
shll
jp
sub
inc
mov
outsb
in
add
or
add
inc
fsubp
inc
lods
test
notb
dec
inc
aam
daa
xlat
test
repnz
sldt
inc
bnd
dec
push
cmpb
mov
xchg
push
add
xchg
push
inc
in
xchg
jge
pop
out
scas
sti
dec
or
push
sub
jbe
imul
mov
mov
divb
mov
mov
mov
or
or
lds
adc
test
jnp
adc
mov
out
push
dec
loop
cld
aas
jge
add
dec
inc
cmp
loop
add
sub
in
xchg
cmp
pop
enter
adc
push
pop
mov
mov
fs
inc
jmp
dec
sub
jl
xchg
iret
inc
lahf
push
cmp
mov
insb
push
icebp
out
lret
orl
insl
out
push
push
test
add
push
jno
stos
push
push
mov
xchg
fs
fsubs
xor
jmp
test
add
mov
add
and
jne
and
in
lahf
in
loopne
adc
test
enter
mov
test
push
icebp
stc
je
insl
pop
push
movsb
mov
adc
add
imul
sbb
stc
hlt
clc
in
jmp
push
dec
lods
fcom
std
scas
std
mov
adc
inc
xor
imul
add
cli
lock
pop
loop
or
cld
add
mov
call
fld
adc
enter
mov
incl
divb
push
notb
and
or
add
xor
call
leave
push
arpl
xorl
adc
mov
xchg
pop
xor
cmp
loop
push
mov
call
adc
dec
push
nop
mov
jne
cmp
popf
cmp
xor
jns
push
push
cld
mov
adc
dec
inc
or
jnp
pop
and
sti
add
aam
push
sti
xchg
inc
push
sub
mov
or
jle
cmp
fidivs
add
inc
ja
jne
loop
in
sbb
mov
dec
mov
xchg
sbb
add
leave
lods
jne
mov
add
enter
sub
push
sbb
mov
lods
add
movsw
clc
inc
push
addr16
mov
xchg
mov
les
jecxz
loop
enter
lds
inc
push
push
gs
and
or
sbb
inc
mov
mov
xor
xchg
mov
pop
sub
jecxz
int3
adc
outsl
sub
fstpl
cmp
dec
insl
test
xchg
insb
mov
cld
lods
mov
jmp
nop
icebp
test
std
pop
add
push
fists
jle
imul
pop
push
mov
iret
push
jmp
jb
jmp
or
push
xor
or
mov
sbb
push
int
add
push
adc
stc
imul
mov
sarl
icebp
stc
hlt
int3
filds
shll
add
shrb
ljmp
push
push
cmc
add
adc
cmc
push
ret
push
mov
bound
jecxz
add
inc
cmpb
sub
ljmp
jne
jne
jle
scas
hlt
cmc
adc
xor
clc
xor
add
add
je
pop
je
jne
fstl
ljmp
add
divl
pop
je
fstpl
call
aam
mov
lock
add
lock
outsl
xchg
sub
sub
je
addr16
jbe
inc
push
adc
cs
xchg
rolb
and
call
add
adc
add
add
push
cli
out
ficompl
add
loopne
loopne
test
sbb
adc
ds
fnstenv
or
pop
fadds
enter
dec
mov
add
lock
mov
xor
jmp
and
ret
mov
push
sub
imul
icebp
stos
push
mov
mov
incb
loopne
dec
loop
inc
hlt
cli
sbb
inc
xchg
faddl
dec
cmpsb
sti
faddl
xchg
loope
push
stos
mov
jmp
int3
dec
loopne
inc
push
push
adc
and
out
push
scas
std
xchg
call
das
pop
ljmp
inc
icebp
jae
testb
fs
push
pop
add
sbb
cmp
sub
jmp
insl
stc
stc
fcoml
add
dec
icebp
stc
aas
daa
ja
inc
inc
ds
cld
fadds
jmp
xchg
stos
jae
nop
js
in
add
fsts
xor
faddl
je
and
add
push
inc
xchg
xrelease
icebp
add
sbb
add
fs
lahf
jle
cli
insl
and
push
xorb
cmpsb
icebp
cmc
adc
icebp
fs
out
xor
loopne
jmp
outsl
adc
test
inc
add
lret
xor
notl
push
cmc
cmc
jbe
daa
stc
push
inc
notb
gs
outsl
or
add
lock
push
outsb
incl
xacquire
out
divb
aas
notb
mov
pop
ret
push
mov
jbe
rcrl
sahf
add
lcall
out
dec
push
push
lods
xchg
push
xchg
lcall
xlat
mov
insb
jl
lcall
into
and
notb
popf
pop
jnp
movsb
lea
add
daa
call
mov
fbstp
sub
into
jae
or
push
push
andb
pop
cmpsl
add
lea
enter
cli
daa
mov
loope
xchg
mov
add
lock
mov
inc
icebp
fs
scas
or
push
xchg
ljmp
jno
arpl
add
add
gs
stos
ret
jnp
xor
das
sbb
stos
stos
movsb
sbbl
cmp
pop
xor
xchg
sbb
jno
push
call
icebp
mov
repz
stos
jno
sarl
jnp
add
adc
icebp
je
mov
inc
add
push
jl
stc
mov
cli
mov
mov
rcll
je
rclb
adc
insb
and
sub
jmp
cltd
cmpsb
cli
push
imull
or
sub
shll
add
insl
mov
add
cmp
mov
iret
sub
leave
sub
addr16
nop
icebp
push
lretw
test
push
xor
sldt
add
in
cmc
xlat
and
push
adc
das
mov
push
add
and
add
shlb
push
or
mov
shl
cmc
je
test
add
out
inc
add
addr16
incl
xor
mov
push
xor
sub
add
int
add
cmc
lea
cltd
adc
push
clc
aad
test
add
mov
and
pop
jno
pop
ret
vmread
adcl
lcall
stos
inc
push
inc
push
lcall
jmp
jne
dec
xchg
push
jl
push
sti
pop
ss
push
adc
add
adc
cs
fisubs
mov
adc
mov
sti
ficoms
call
add
enter
lret
int3
lahf
out
pop
inc
sti
push
sbb
sti
push
adc
xchg
fiaddl
lcall
sti
mov
or
icebp
lcall
mov
pop
dec
inc
fistpl
in
sub
pop
loopne
push
stc
sub
pusha
cmpsl
add
mov
hlt
testb
inc
test
stos
pop
xor
xchg
icebp
out
add
jmp
jmp
xlat
mov
sub
cs
sub
push
icebp
out
cmp
mov
sbb
mov
dec
sbb
fcomi
out
clc
cld
xor
icebp
fs
addr16
call
jbe
mov
sub
rcr
outsl
inc
stc
shrb
call
scas
insb
inc
inc
testl
call
add
mov
movsb
clc
adc
call
bound
cmpsb
cli
jmp
xlat
mov
cltd
lds
cli
nop
icebp
out
sub
cmp
popa
push
call
aam
inc
jmp
ret
sub
sbb
popa
push
call
enter
mov
or
cli
call
stc
or
dec
push
xor
fidivrs
add
lea
push
or
icebp
add
insl
xchg
add
addl
lods
add
push
jne
sysret
add
xorl
add
xor
add
addb
loope
shll
insb
shll
aas
adc
mov
push
lods
test
sub
add
push
das
xchg
xchg
lea
xchg
out
or
test
cmpsb
xchg
lods
mov
movsl
out
jecxz
xchg
adc
adc
pop
pop
inc
adc
dec
loop
je
mov
adc
lea
scas
repnz
imul
sti
dec
jae
mov
das
mov
sahf
push
xor
add
daa
sbb
jle
mov
dec
test
sub
push
pushf
push
add
sbb
jne
aas
lods
mov
xchg
popf
fisubrs
lahf
call
cmc
jp
cmp
pop
xchg
into
lcall
aas
add
inc
movsb
aad
test
icebp
les
fnsave
pop
addr16
fwait
in
icebp
lea
jmp
out
xchg
mov
je
negb
movsb
aad
inc
xor
orb
add
pop
call
popf
hlt
jno
daa
mov
sub
stos
push
mov
pop
dec
mov
xchg
cwtl
es
loopne
cltd
leave
or
cmpsb
mov
jb
sahf
fbld
test
mov
cmpsb
and
stc
ret
add
push
repnz
inc
push
inc
push
inc
fwait
inc
add
push
out
or
jo
in
sub
sub
and
repz
sub
and
test
packsswb
jmp
sti
loopne
add
mov
fmull
inc
faddl
fsub
inc
or
lds
movd
ljmp
js
jb
mov
add
xchg
mov
cmp
jge
sbb
aaa
jne
sti
or
fistpll
icebp
inc
add
adc
fisttpll
out
test
jmp
sub
lods
push
test
in
add
loope
xor
xor
jb
add
cmp
add
add
jl
in
fwait
lds
mov
sti
sbb
stos
incb
add
jp
xchg
mov
fcomps
inc
repz
cli
jb
xchg
adc
popa
fwait
xchg
jne
mov
orl
sub
daa
xchg
out
pop
mov
xchg
adc
sbb
fnsave
repz
push
rolb
out
mov
setb
call
push
lret
fcoms
test
lahf
test
add
dec
add
pop
mov
icebp
je
aas
mov
sub
push
repz
outsb
ret
xor
repnz
icebp
data16
or
xor
cmp
aas
pop
lret
xchg
in
out
aam
imul
ds
insb
jg
popf
push
cltd
test
loopne
stos
stos
add
sub
push
icebp
out
cld
fsubp
or
pop
call
pop
push
and
std
cwtl
dec
inc
add
xor
je
pop
xor
add
push
lahf
dec
inc
dec
pop
add
icebp
add
int3
je
mov
inc
in
call
insl
adc
jns
sub
and
mov
mov
inc
jmp
insl
nop
and
movsl
cli
fsubl
and
mov
pusha
lcall
adc
subl
add
int
or
push
in
jne
mov
push
adc
icebp
jns
jns,pn
inc
sub
cmc
add
jmp
cmpl
lcall
div
decl
xor
add
add
div
decl
mov
pop
and
xor
mov
xor
mov
jp
mov
shll
ret
mov
mov
dec
stc
push
add
in
outsb
hlt
add
in
lock
sub
push
pop
adc
push
mov
repnz
xorb
xchg
mov
inc
adc
add
push
dec
clc
jo
cs
jge
xor
popf
dec
xor
push
mov
mov
xor
inc
lret
fisttpl
adc
popf
push
push
mov
mov
shrl
inc
or
add
xchg
mov
xchg
xchg
test
mov
push
lea
add
add
adc
lea
pop
cs
sub
movsl
xchg
mov
pushf
fs
mov
icebp
push
mov
fucomp
out
aam
mov
loopne
pushf
cmp
dec
pushf
xor
inc
pushf
std
iret
inc
xor
fcoms
mov
or
cmp
and
loop
push
inc
jae
jo
sub
mov
add
in
addr16
add
jo
nop
or
fdivl
and
ss
aaa
adc
pop
aas
cli
hlt
addb
jmp
xchg
ss
cwtl
cmpl
sub
ljmp
insl
jmp
je
leave
sbb
pusha
cmp
add
test
cli
rcl
add
jb,pt
icebp
mov
sbb
jmp
add
cli
inc
xchg
jae
clc
jle
jbe
push
jge
mov
add
fistps
xchg
mov
mov
mov
je
and
out
addl
pop
jne
icebp
jne
mov
out
call
mov
jb
clc
scas
test
mov
enter
jbe
incl
add
mov
clc
call
popa
cmpsl
push
pop
xchg
pop
mov
mov
in
lods
pop
pusha
out
add
adc
pushf
sub
idiv
mov
sub
mov
add
jns
or
movsl
hlt
rol
lock
sbb
adc
into
pop
or
ds
lds
testl
add
repnz
pushf
xchg
sub
add
adc
loope
push
call
add
mov
push
enter
xchg
mov
icebp
clc
in
jne
xchg
pop
fdivrl
jb
adc
fadds
mov
pop
aaa
nop
xchg
testb
icebp
dec
push
fidivl
int3
cmp
icebp
jmp
push
pop
daa
test
aad
add
bound
call
mov
mov
daa
fs
adc
pop
push
jl
data16
inc
push
fsubl
ret
insb
movsl
adc
xchg
sub
push
cmp
cwtl
ret
cmp
insl
inc
xchg
clc
xchg
sbb
adc
xchg
call
icebp
jo
imul
mov
je
enter
sbb
add
pop
stos
mov
push
rolb
bound
out
inc
cmc
add
xor
int
jne
xchg
add
outsl
pop
loope
cmpsl
jmp
lods
fsubrs
std
pop
in
dec
fs
cltd
sti
out
ret
inc
mov
cli
fidivrs
insb
repz
add
ret
test
xchg
dec
mov
les
and
cs
adc
mov
add
bound
das
outsl
cmc
cmp
adcl
push
adc
out
mov
lcall
bnd
cmp
xchg
cli
andb
jne
mov
xor
push
test
cmp
imul
pop
data16
mov
je
hlt
insb
testl
mov
test
add
add
xlat
sub
ljmp
call
imul
or
sti
add
daa
or
call
adc
mov
mov
mov
testb
std
push
clc
das
inc
dec
mov
stc
cwtl
sbb
adc
clc
and
incb
out
int
in
or
std
add
dec
sbb
cwtl
jg
xchg
push
pushf
jmp
pop
gs
incb
mov
jg
sbb
ret
pop
adc
frstor
sbb
add
jp
add
sbb
inc
jg
sbb
pop
aas
add
fmuls
sahf
daa
add
xchg
std
xchg
pop
xor
lret
addr16
jge
push
push
rcrb
xlat
mov
add
idivb
or
add
sahf
cmpsl
add
dec
clc
jl
cmpsl
add
ss
push
test
call
xor
in
fwait
sbb
call
cld
jne
test
aam
adc
sbb
repnz
daa
xchg
pop
les
ljmp
icebp
movsl
cld
add
lock
sub
and
jge
ret
lock
xchg
xor
add
jmp
sub
or
adc
imul
add
xchg
in
add
xchg
or
cmc
dec
repnz
xchg
add
jmp
out
push
or
andps
add
shlb
add
sub
jmp
push
or
mov
lock
add
sub
cli
jbe
add
out
xchg
jp
xor
jne
inc
fiadds
idiv
aad
dec
cld
aad
inc
in
dec
inc
add
cmc
push
call
icebp
cli
or
adc
fisttpll
fstp
mov
fldl
call
jecxz
in
mull
jmp
sarl
add
imul
pop
mov
dec
jp
ss
mov
xchg
test
dec
mov
ljmp
sub
adc
loop
inc
lret
jmp
inc
mov
pop
inc
nop
sub
cmovo
inc
bound
mov
aas
adc
dec
pop
mov
add
inc
push
mov
cmp
mov
cs
mov
xor
mov
push
mov
icebp
cmpsl
and
aaa
adc
mov
inc
aaa
jl
insb
inc
mov
clc
xor
nop
aad
dec
xor
xchg
cltd
xchg
cmp
icebp
movsl
sti
les
fcompl
cmp
xor
add
push
je
mov
call
shrl
lods
lahf
insb
call
les
mov
and
movsl
lahf
lret
nop
xor
aam
or
lcall
sbb
jl
bndldx
lea
jmp
add
xchg
xchg
or
rdtsc
mov
sub
push
dec
mov
add
ja
lds
dec
add
xor
add
iret
adc
adc
std
test
mov
push
outsb
idiv
call
pop
ds
dec
dec
cwtl
push
jo
xchg
out
jg
inc
sub
adc
cltd
push
fimull
xchg
hlt
add
or
add
lds
add
inc
add
inc
sub
xchg
mov
push
mov
icebp
add
xor
subb
or
inc
add
push
xor
lds
and
lea
cmc
sub
jmp
imull
fld
cmpl
and
popfw
cmp
imul
add
jl
data16
jecxz
dec
xor
cli
jno
shrl
dec
daa
incb
push
lds
sub
add
xor
pop
movsb
adc
call
pop
pop
mov
xchg
add
out
outsb
cmp
aas
and
stc
cs
pusha
add
push
cwtl
sub
fadds
out
mov
add
pop
sti
test
jbe
dec
adc
add
inc
mul
int3
into
cmp
movsb
push
xacquire
mov
cld
cld
mov
add
aaa
sti
and
cs
cld
xor
inc
js
lds
xchg
lock
and
sub
dec
js
in
stc
push
mov
xchg
lock
add
sub
aas
js
les
add
adc
pop
cld
cmp
inc
js
les
xchg
loopne
adcl
sub
imul
jne
push
mov
xchg
lock
adcl
sub
sbb
test
xchg
or
add
arpl
jecxz
push
jns
test
clc
sbb
loop
push
mov
sti
je
push
push
jae
stc
add
pop
hlt
push
fwait
movsb
jb
xchg
fidivrl
out
add
cmc
call
jo
cmc
test
lahf
xchg
ret
xchg
icebp
outsl
je
pop
push
mov
push
rcrb
lods
push
pop
ret
mov
add
add
jp
adc
jnp
add
cmp
add
fdivs
or
add
adc
out
mov
xor
mov
inc
add
cmc
jns
out
sti
sbb
popa
scas
je
mov
cmc
ljmp
xor
outsl
loopne
or
shr
jns
lods
sti
pop
mov
xchg
mov
or
mov
add
add
into
jno
add
loopne
inc
push
xchg
cltd
inc
add
sub
or
xchg
or
mov
add
xchg
fwait
xchg
cmp
mov
add
push
fnstsw
jle
xchg
or
repnz
add
shlb
or
push
aam
add
push
and
add
movsl
dec
push
faddl
aam
add
leave
mov
bound
or
add
cs
push
push
faddl
repnz
test
mov
aad
in
insb
xchg
ljmp
jl
pop
add
call
ljmp
jmp
aaa
adc
faddl
icebp
mov
popf
dec
jecxz
push
icebp
xor
jo
aas
in
xor
jmp
add
faddl
call
inc
sub
popf
mov
adc
js
icebp
adc
nop
mov
loopne
ds
jnp
cli
push
int3
mov
into
xchg
cmp
mov
daa
dec
popa
hlt
stos
push
repnz
imul
loope
sub
nop
adc
mov
jl
and
lahf
add
rcr
hlt
fistl
mov
fistpll
jmp
inc
mov
into
xchg
mov
mov
scas
dec
popa
hlt
sub
push
cmpsb
pop
mov
sub
mov
stos
test
add
sub
xchg
out
cmc
imul
mov
incl
lret
sbb
test
jmp
rclb
cmpsb
cmp
je
nop
cmc
jmp
fdivrp
adc
repnz
push
mov
sub
inc
cli
lds
push
or
lds
cld
cmp
lods
or
imul
or
jnp
xor
push
lcall
adc
repz
fldl
enter
add
add
xor
add
fadds
push
add
jb
or
xchg
ret
or
inc
sbb
xor
or
daa
out
cmp
or
cli
adc
inc
test
xchg
jp
push
cwtl
call
or
push
cwtl
data16
cwtl
pop
or
add
jno
mov
aam
inc
icebp
repz
add
xor
das
jp
sbb
mov
add
mov
sub
fidivs
adc
jge
pusha
sub
cld
cmpsb
mov
fcoms
fs
jno
push
insb
pop
clc
inc
xchg
loope
sbb
decb
jle
test
inc
js
or
cs
mov
sub
add
out
test
mov
add
add
out
adc
mov
cmpsb
adc
add
add
frstor
cs
ficompl
and
lea
andb
insl
shl
mov
int
outsb
add
inc
or
push
imul
icebp
call
push
inc
lods
outsb
shll
inc
fwait
insl
add
flds
add
jbe
jmp
insb
adc
int3
bound
loopne
sub
pop
dec
pop
xchg
test
adc
jae
and
loop
popa
cmc
xor
jae
xor
add
pop
enter
jnp
mov
add
or
idiv
das
sub
add
add
lods
repz
push
out
sub
push
sub
dec
add
adc
call
add
lock
jnp
fdiv
call
mov
divb
das
mov
div
jne
push
cmp
cmc
add
aas
or
jge
mov
or
int
call
jl
push
call
sarb
pushl
and
pop
in
sti
push
je
xor
add
jge
xchg
jecxz
enter
cli
cmp
or
sti
je
lret
or
push
jp
dec
nop
incb
dec
cltd
out
aad
mov
lret
icebp
and
icebp
and
and
and
mov
xor
or
cmp
add
jbe
cld
lock
or
aam
in
in
mov
add
add
int3
test
jnp
or
cmp
int
lock
jae
add
cmpsl
jp
subl
mov
outsb
and
push
outsl
ret
call
addb
ja
ljmp
popa
rcrl
outsl
pop
insb
lock
push
repnz
cs
dec
mov
add
add
icebp
test
outsl
sbb
out
jbe
push
mov
test
push
test
jmp
push
add
jmp
cmp
sub
jmp
sub
cli
xchg
js
add
addb
pop
or
popf
add
inc
xor
bound
push
fst
mov
insl
inc
repnz
fildl
adc
add
add
add
push
js
jb
call
or
faddl
add
mov
or
jns
cli
hlt
enter
xchg
or
xor
inc
sub
add
loope
push
test
stos
decb
mov
dec
or
stos
push
mov
orl
add
mov
notl
jmp
pop
add
shll
std
insl
clc
cmp
mov
mov
lahf
push
addr16
jle
mov
test
shr
dec
cli
hlt
or
je
and
adc
cwtl
incb
mov
cli
incl
add
rcr
pop
addl
and
add
ljmp
paddd
and
and
jnp
out
ror
mov
js
cmp
pop
add
mov
mov
mov
aam
jns
js
ret
jp
xor
icebp
xchg
in
push
mov
sub
jge
inc
jg
data16
add
fsubrs
ret
loope
adc
and
lock
popf
call
jmp
xor
mov
test
inc
push
and
sub
arpl
out
int3
divb
push
and
into
insb
push
adc
shll
cmpsb
hlt
out
aad
imul
push
add
test
dec
icebp
add
cmp
add
pushf
pop
add
popf
mov
jmp
rcll
jae
or
js
jb
jbe
out
fs
add
push
cld
jnp
push
add
jge
cmp
mov
outsb
test
js,pt
xchg
mov
js
out
mov
jmp
pop
das
icebp
add
std
hlt
add
push
jbe
aad
je
bound
add
outsb
test
ja
add
addr16
adc
mov
rcll
sub
jns
xor
hlt
int3
inc
add
adc
sbb
mov
adc
jo
or
xor
call
test
addb
mov
icebp
xchg
shl
jge
out
jae
pop
or
lds
leave
ret
push
push
pop
push
jne
lcall
mov
inc
jmp
ss
stos
xor
sahf
mov
cli
jle
add
repnz
jg
jg
mov
push
jne
loope
nop
mov
sti
xchg
mov
add
in
addr16
aam
sti
inc
pushf
adc
fwait
lods
sbb
add
aaa
xchg
pop
push
int3
add
xchg
ret
orl
sti
pushf
or
je
fwait
lods
or
fsts
ret
sub
adc
sub
adc
out
xlat
in
scas
rorb
mov
pop
jp
push
scas
out
stos
add
hlt
cli
sarl
add
jmp
sub
mov
out
sbb
flds
jp,pt
jg
add
add
out
hlt
insb
in
sub
or
and
add
or
hlt
sub
mov
adc
adc
aaa
out
sub
or
lods
jp
imul
into
stc
sbb
mov
in
sub
jp
ja
xor
jmp
sub
lods
push
setle
push
xor
stc
dec
test
je
add
push
jl
mov
pop
sub
or
jmp
jns
cld
test
inc
jmp
sub
push
jns
add
add
lock
insl
cmp
push
icebp
call
insl
adc
test
push
icebp
add
hlt
cmp
push
icebp
add
fisttpl
jmp
mov
hlt
add
inc
add
jnp
dec
lock
add
add
jle
jp
add
xchg
in
add
mov
mov
shlb
jecxz
add
mov
idivl
insl
cmc
inc
and
imul
and
dec
sahf
add
repz
lea
adc
add
std
push
xor
shlb
xor
push
push
pushl
add
fwait
dec
mov
push
or
jnp
dec
sti
jl
stc
and
dec
adc
dec
aad
xor
jno
enter
add
nop
mov
cmp
sub
push
mov
je
or
pop
cmp
movsb
out
or
cli
adc
pop
fdivr
push
jnp
aaa
mov
iret
in
add
into
or
jmp
scas
stc
pop
mov
mov
clc
push
icebp
sbb
sbb
call
call
jmp
xor
fnstenv
punpcklwd
xor
mov
out
push
jo
jbe
adc
call
xchg
mov
add
sti
out
fadds
add
xor
jl
push
fidivs
insb
sub
push
push
pop
f2xm1
out
into
jne
xchg
add
notl
lret
in
data16
push
cld
xor
and
fmul
filds
sub
xchg
das
repz
rorl
notb
mov
call
jb
lea
roll
add
and
xchg
dec
outsb
cli
mov
or
push
ss
jge
test
pop
jne
das
mov
test
cli
fsubrl
inc
jmp
add
js
pop
fbstp
lea
xor
xor
or
xchg
adc
push
mov
jns
push
cmc
adc
xchg
jo
add
add
mov
xor
in
fstpt
and
add
test
outsb
fildl
and
add
sub
add
jmp
xor
jns
mov
scas
jle
fistps
je
mov
in
cmpb
jns
cmp
ja
push
push
mull
outsl
push
mov
bound
sbb
adc
fldcw
repnz
add
lret
push
filds
push
mov
fmuls
popa
dec
lret
push
mov
jmp
punpcklwd
movsl
rcll
lods
int
inc
dec
jp
xchg
aam
jbe,pt
inc
push
xlat
inc
inc
ror
add
aas
adc
sti
into
inc
inc
push
mov
adc
ret
and
jbe
xchg
mov
sar
add
push
add
jmp
sbb
hlt
jae
rcr
inc
inc
call
lret
sub
sub
notb
xor
sub
jge
pop
int3
sub
js
jge
out
dec
lock
les
cmpsb
notb
cmpsl
pop
push
mov
push
mov
negb
mov
xor
bound
pop
testb
divb
inc
mov
add
mov
movsw
ja
cld
das
jle
jmp
int
or
pop
adc
mov
movsw
ja
push
xchg
push
mov
leave
sub
cmp
or
mov
inc
out
push
mov
js
push
push
mov
in
add
test
pop
and
call
subl
add
add
jmp
gs
std
fs
jge
lods
mov
or
cli
faddl
add
jge
jne
js
pushl
pop
test
js
xchg
xor
jne
sbb
add
cmc
dec
push
fistl
insb
or
pop
push
inc
jmp
aaa
clc
pushl
fmull
jge
idiv
in
popa
ljmp
add
idiv
in
popa
out
call
add
mov
lock
lea
inc
inc
fdivl
inc
notl
mov
jae
mov
cmp
popa
push
cmp
data16
cmp
popa
push
cmp
pusha
add
pusha
cmp
icebp
add
pop
pop
incb
enter
roll
add
and
iret
cs
mov
fistpl
mov
jbe
mov
loopne
add
shl
push
imul
push
cmpsb
icebp
or
push
or
push
bound
jg
repnz
jae
push
in
cmp
pop
jnp
push
pop
incb
pop
faddl
lret
push
shr
pop
push
pop
jae
dec
pop
ljmp
add
add
add
addr16
fs
push
icebp
out
nop
subl
push
shrb
sub
add
cmp
icebp
popa
fldcw
xchg
adc
iret
push
outsb
mov
xchg
in
inc
push
outsl
jmp
add
cmpsl
and
pop
ret
mov
sub
out
push
adc
outsb
mov
add
cmp
movsb
or
dec
imul
cli
inc
mov
push
jecxz
sbb
or
push
imul
mov
movsb
insb
in
imul
sub
adc
or
sub
inc
icebp
imul
sbb
pop
xchg
insl
lea
inc
test
sub
rcrl
inc
mov
add
shlb
sbb
sbb
xchg
jmp
or
sub
jne
jns
js
pop
js
or
shlb
sti
push
mov
test
xor
pop
arpl
lock
sbb
push
adc
out
jge
ljmp
mov
arpl
sbb
out
and
jmp
jo
xor
addr16
push
popa
add
add
add
fnstsw
jae
jo
cmp
mov
jo
add
adc
pop
jo
lock
shr
jo
psubd
pop
scas
test
into
std
jg
and
fnstcw
mov
lret
pop
add
pop
cs
and
add
shrl
ror
das
push
xlat
cmp
or
xchg
mov
or
add
jle
sti
in
mov
rorl
pop
adc
xchg
push
mov
mov
ret
aam
je
xor
and
icebp
and
sub
xchg
lcall
and
iret
pop
jg
dec
cmpl
fs
sti
inc
xchg
inc
push
sarl
subb
pop
mov
mov
addr16
outsb
mov
outsb
or
dec
fwait
jp
imul
jbe
imul
jns
push
ss
in
sub
xlat
out
subl
push
in
addl
push
push
test
ret
push
dec
mov
jle
in
js
insl
push
jg
icebp
out
int3
int3
push
xor
add
das
add
push
ljmp
add
adc
pusha
adcl
cmp
outsb
sbb
jo
adc
clc
jl
shlb
lahf
sti
idivb
jmp
shll
jns
js
pop
sub
inc
fcmovnbe
push
imul
jmp
jmp
cmpsl
lock
int
adc
add
jnp
test
sub
fstp
lret
hlt
jb
popa
ds
push
jb
popf
les
add
rcrl
out
xor
add
icebp
cmp
inc
pop
or
icebp
cmp
sbb
add
add
cmc
jae
stc
xlat
jecxz
mull
sti
mov
add
lahf
idiv
sub
popf
push
push
pop
dec
or
out
or
ja
or
repnz
add
pop
out
jae
mov
push
push
stos
notl
cmp
add
cli
xchg
xlat
stc
aaa
roll
adcl
je
fistpl
fists
dec
pop
les
push
mov
sbb
jns
sub
mov
jb
xchg
pop
mov
cmpsb
inc
sub
xchg
add
jo
mov
xchg
add
pop
loope
clc
pop
mov
xor
leave
orb
xchg
pop
push
enter
arpl
mov
es
lea
popf
jg
jne
rol
sti
mov
dec
push
icebp
jo
insb
jnp
or
sbb
mov
das
repz
filds
aad
add
dec
addr16
inc
insl
sub
iret
je
add
int
pop
cs
xlat
inc
fnsaves
mov
xchg
fstl
jb
movsl
pop
in
cmp
mov
inc
jl
fisubrs
dec
shrb
mov
pusha
lods
cmc
ss
add
out
add
push
push
push
push
pop
add
jp
je
or
sbb
repz
aam
sbb
out
xlat
and
repz
fildll
repz
pop
leave
fisttpl
xor
push
xlat
ret
hlt
add
push
xchg
fildll
mov
or
inc
inc
pop
push
ret
dec
push
in
test
sub
test
mov
subl
add
or
stos
jge
sub
roll
test
add
in
jae
cld
daa
cmp
add
lods
je
loop
sbb
lds
test
inc
push
push
ret
inc
push
aaa
aas
cmc
cmc
adc
xchg
dec
add
xchg
mov
sbb
jne
mov
fsubs
leave
xor
div
jne
add
ja
call
mov
push
leave
sub
add
loope
in
stos
in
add
jns
dec
push
ja
pop
push
xchg
leave
notb
enter
jne
push
pop
scas
addr16
lret
flds
test
pop
decb
jno
je
ficompl
push
jle
push
push
pop
or
and
jmp
add
out
push
jmp
jl
mov
sub
or
push
pop
out
fs
fsubs
mov
addr16
xchg
pusha
lcall
je
push
inc
and
cltd
imul
or
cwtl
ja
adc
jp
imul
testl
inc
mov
add
push
push
cmpsb
adc
pop
jo
push
enter
and
adc
ficoml
push
icebp
mov
or
std
cmpsl
add
lods
sub
int3
lods
sbb
push
outsb
lea
mov
add
fstl
sar
mov
icebp
push
aas
fnsave
leave
loopne
shrb
adc
rcl
loope
jne
pop
data16
andb
cmpsb
sub
data16
dec
lret
add
push
icebp
adc
idiv
mov
adc
test
inc
decb
push
push
adc
sub
bound
add
pop
fisttpll
lret
sbb
std
adc
movsb
mov
push
fs
data16
loop
into
test
add
sub
test
jp
test
push
call
xor
cmp
bound
jne
popf
add
outsl
shll
loop
fwait
cmc
xor
mov
add
lcall
loope
mov
lods
mov
je
in
je
es
decl
ret
je
in
notl
add
mov
mov
add
dec
call
push
lahf
data16
out
push
pop
je
inc
push
xchg
cli
aas
cs
cli
lcallw
insl
cmpsl
lods
aas
push
test
testb
ds
aas
push
aad
je
pop
ds
xchg
push
push
enter
aas
sbb
jne
ret
push
dec
xchg
adcb
out
add
add
out
push
mov
repnz
add
cmp
scas
dec
fcoms
scas
cli
pop
mov
shl
icebp
es
xchg
call
adc
out
pop
pop
jno
rorb
enter
dec
jne
add
outsb
mov
pop
xor
test
mov
push
jmp
call
insb
js
adc
add
add
add
pop
push
and
adc
mov
pop
cmc
or
sub
jl
pop
push
jl
fcoml
sub
mov
inc
sbb
xchg
imul
pop
iret
xor
mov
push
add
stc
fs
in
das
pushf
pop
add
nop
pop
xor
arpl
sbb
hlt
roll
add
pop
cli
fimuls
in
lods
es
lret
mov
add
dec
cmpb
shrb
mov
push
add
pop
jne
incl
jne
xlat
sub
in
add
xchg
gs
in
rcrl
jmp
xchg
sti
incl
ljmp
ljmp
add
xor
mov
icebp
add
adc
cmc
pushl
sti
push
insb
mov
std
test
push
lcall
jo
je
inc
add
lds
inc
jp
test
mov
cmc
push
rclb
inc
lds
aad
add
xchg
mov
jne
stc
inc
adc
repnz
sub
push
pop
sbb
push
stos
out
jae
mov
stc
adc
enter
xchg
add
dec
adc
lea
dec
mov
out
leave
push
dec
and
lock
call
xlat
mov
test
lds
lea
push
jne
or
sti
cltd
repnz
xchg
push
mov
jnp
inc
arpl
sahf
add
push
dec
addr16
push
push
inc
gs
call
enter
and
dec
cld
lock
and
mov
add
rol
add
gs
xor
in
out
subl
adc
vcvttps2dq
pop
or
mov
pop
jne
add
jmp
enter
inc
pop
add
iret
dec
les
dec
ret
mov
add
add
pop
adc
mov
int
stos
mov
mov
xor
outsl
jno
lods
push
icebp
out
into
in
addb
arpl
sub
pop
lea
rorl
out
je
push
mov
imul
adc
out
sbb
insb
in
push
push
call
push
in
dec
adc
push
push
in
xchg
pushf
pop
push
add
push
push
pushl
roll
xor
stc
out
pop
rorl
push
lock
inc
push
insb
test
push
push
cli
sbb
mov
sbb
outsl
sbb
rcrb
sbb
rcll
pop
int
stc
add
les
ja
push
addr16
add
pop
arpl
incl
lock
fidivl
lock
push
vunpckhpd
add
bound
stc
sbb
cmc
divb
sbb
sbb
cld
enter
popa
jmp
mov
mov
sub
or
jo
fmull
inc
or
cmpsl
inc
push
push
add
mov
jno
add
jo
fcompl
mov
imul
iret
mov
xchg
adc
inc
leave
add
adc
push
fcom
sub
inc
incl
xchg
mov
sti
inc
and
decb
inc
das
sbb
fimuls
jl
repz
aam
mov
pop
into
ret
dec
push
pop
mov
dec
decb
in
dec
dec
add
mov
xchg
sti
mov
cmp
add
cwtl
inc
js
cld
inc
add
sub
mov
inc
fisubs
inc
inc
cmp
inc
outsb
icebp
call
push
push
icebp
out
pop
mov
into
add
orb
or
inc
pop
insl
and
icebp
rorl
mov
aaa
push
icebp
out
xlat
in
jae
fcoms
inc
sbb
jecxz
push
sub
popf
pop
stos
mov
sub
add
iret
mov
pop
dec
dec
call
out
push
push
jmp
mov
add
push
xor
insl
dec
icebp
add
ljmp
push
xor
push
cli
jmp
imull
add
pop
add
or
repnz
fsubrs
or
icebp
add
out
dec
roll
data16
sbbl
mov
add
subb
int3
test
call
enter
push
lods
add
jp
inc
adc
or
icebp
add
jle
pop
inc
sbb
data16
or
pop
jle
stos
pop
jmp
mov
push
dec
push
xlat
inc
negb
mov
fdivl
outsb
add
cmp
cmp
icebp
test
sub
add
insb
das
lock
dec
adcl
cmc
push
add
adc
jmp
int3
add
ljmp
add
xchg
ret
pushf
lea
or
pop
enter
adc
ds
rolb
out
mov
flds
jno
je
push
dec
xchg
fdiv
jg
cmp
or
les
sub
test
push
cli
sub
push
jg
sti
add
xchg
dec
adc
sub
dec
jo
rcl
pop
cmp
ljmp
pop
fadds
or
sbb
lret
mov
popf
testb
addl
repz
test
jo
cli
xchg
add
mov
add
mov
movsb
icebp
call
lods
repnz
add
add
sbb
mov
dec
arpl
imul
into
scas
cmpsl
mov
test
fsubs
adc
dec
cmp
test
mov
mov
mov
in
and
out
int
daa
jp
cmp
jl
out
ljmp
xor
add
xacquire
out
sbb
loopne
push
pop
jecxz
add
shr
add
jo
add
add
lods
mov
adc
sub
ds
lock
nop
push
test
push
icebp
mov
rorb
lahf
mov
inc
jmp
int
add
cs
int
push
cli
fisubrs
push
mov
adc
pushf
movsl
lahf
push
cli
pusha
je
cli
dec
mov
add
xchg
push
lea
cli
ss
push
or
in
add
test
cli
call
fs
cmc
adc
xor
rolb
out
jbe
add
daa
int
jne
mov
loop
xchg
movsl
cmc
andl
add
loope
loop
jg
cmc
subl
xchg
pop
faddl
add
pop
clc
ljmp
xlat
mov
lods
movsl
cmc
mov
clc
decl
in
cmc
jne
rolb
call
data16
je
or
idiv
push
dec
push
mov
dec
hlt
aas
push
int
or
or
add
aam
mov
stc
mov
ds
add
add
jmp
rcrb
add
fs
jns
arpl
ja
daa
mov
mov
pop
push
cmp
pop
sti
pop
jbe
aas
push
ret
push
mov
mov
call
cmp
pop
test
pop
popa
enter
hlt
mov
cmp
es
sti
in
sbbl
pop
push
inc
ljmp
imul
test
dec
mov
je
repz
in
jge
add
iret
jbe
dec
cwtl
push
jne
outsl
dec
fisttpl
out
in
dec
js
test
iret
sbb
add
cmp
push
add
pop
push
call
andb
add
push
adc
dec
sub
jns
fs
sbb
arpl
lea
sti
rorb
insl
xchg
testb
into
push
add
add
iret
add
push
jle
int
dec
cli
mov
ret
test
std
imul
jmp
pop
mov
add
xlat
dec
adc
cli
cwtl
add
push
xlat
adc
jno
test
pop
jl
in
add
aad
dec
cli
cmp
icebp
add
add
icebp
add
repz
add
or
call
xchg
jl
out
inc
or
fs
cli
orb
jle
cmc
decl
stos
mov
gs
cld
incl
mov
in
testl
inc
int3
test
push
jg
adc
iret
rorb
ljmp
pushf
int
int3
popa
mov
adc
ret
mov
add
xor
cmp
ds
clc
jno
add
sbb
ljmp
repnz
mov
subl
dec
sti
mov
mov
jle
sti
inc
sti
fsubrl
lret
or
les
mov
out
dec
sti
mov
sub
aas
push
jecxz
jg
inc
stc
mov
push
ljmp
pop
cmpsb
popa
fcmovu
sbb
test
xlat
add
add
push
add
aam
sti
insb
ss
push
mov
lcall
add
lahf
inc
pop
scas
fiaddl
push
xlat
jmp
cmc
jnp
jge
inc
sti
sahf
in
jg
pop
decb
repnz
mov
mov
jbe
inc
call
in
inc
fdivr
jp
push
xor
and
enter
stos
sub
mov
dec
add
rcrb
sub
out
xor
push
jp
xor
scas
mov
xor
dec
mov
sarb
dec
xor
inc
dec
dec
cmp
and
cmp
in
pop
inc
sahf
pop
jnp
xor
add
dec
int3
jnp
xchg
clc
test
and
insb
in
cli
dec
add
mov
out
pop
cltd
add
push
je
sbb
lock
adc
mov
add
mov
stc
jl
inc
adc
jl
add
adc
or
iret
jge
push
dec
cmp
je
sub
xchg
fdivs
sub
divb
push
xchg
nop
lret
jae,pt
add
add
cmp
push
ret
mov
jb
fdivr
cmp
test
xor
test
push
addb
lcall
jecxz
jge
lea
dec
call
pop
cmp
lea
sar
dec
jle
add
call
cmpsb
cmc
adc
mov
mov
xor
fstpt
incl
add
ret
std
mov
dec
inc
mov
fdivl
mov
pop
inc
sti
and
scas
dec
into
aam
stc
adc
lods
dec
or
notb
xchg
pop
jnp
dec
fcomi
sti
hlt
mov
fst
in
pop
or
scas
inc
jne
sbb
mov
shrd
mov
insb
push
jmp
lea
incl
add
ds
rcrb
add
sahf
adc
or
inc
aas
sti
js
lea
mov
ds
fmuls
inc
cmp
arpl
cmpsb
push
aaa
fiaddl
dec
outsl
cmp
dec
jmp
or
jbe
push
mov
dec
pop
mov
sbb
cli
dec
cmp
add
and
outsb
leave
dec
outsl
leave
pushf
je
push
and
jbe
dec
add
push
cld
repnz
jnp
mov
pop
imul
inc
pop
insl
pop
inc
pop
dec
addr16
push
mov
cmc
jmp
push
jo
push
dec
je
lcall
xchg
mov
loopne
add
sub
icebp
sub
clc
call
pop
mov
cli
push
inc
enter
bnd
repnz
enter
mov
cli
push
adc
stc
push
into
lods
cmc
mov
dec
dec
cli
imul
dec
je
adc
je
bound
pop
notb
pusha
shr
or
incl
add
in
add
jnp
ss
cmp
notb
ficoms
jle
das
mov
add
bnd
xchg
ficoms
repnz
idivl
xchg
adc
incl
adc
mov
sbb
inc
dec
adc
sbb
add
jp
mov
je
adc
cs
push
ja
hlt
ljmp
add
add
pop
cmc
enter
xchg
xchg
ret
ds
xchg
sub
push
fsubrs
jg
mov
jmp
call
out
mov
cli
std
dec
movsb
ds
sbb
adc
push
fadd
xchg
lahf
aam
cmpsb
add
cli
insl
call
mov
xchg
lods
add
mov
sti
mov
cmp
add
add
out
mov
jbe
cli
push
ret
dec
sarl
mov
push
icebp
loop
push
xor
adc
and
or
xor
inc
push
ds
add
out
pop
insb
fs
icebp
or
leave
and
push
mov
sbb
mov
fldt
dec
or
mov
mov
pop
add
icebp
rcll
add
dec
aas
fdivs
xor
jbe
push
leave
inc
sub
lret
pop
aas
pop
in
icebp
ret
lods
insl
sub
add
mov
push
inc
prefetchw
add
push
mov
xor
sti
fldcw
shl
jne
into
orb
dec
cli
cmp
dec
adc
data16
loop
mov
push
scas
sbb
add
add
lret
or
jmp
sbb
jmp
data16
push
cmc
data16
rolb
movsb
xor
or
icebp
add
cwtl
mov
push
inc
jl
add
jecxz
rclb
nop
sbb
push
flds
xchg
pusha
cli
add
in
pop
adc
pop
in
loop
insb
add
testb
sbb
inc
jp
loop
add
mov
testb
sbb
sbb
divb
jp
or
sub
pop
rol
add
sub
loop
mov
add
add
push
iret
std
jge
cmp
add
jne
add
aad
jge
je
adc
idiv
mov
fstpt
jg
pop
mov
lea
inc
mov
push
xor
mov
int
iret
lret
call
fadds
xorb
xchg
cmp
cli
sub
mov
mov
call
xor
out
fs
clc
hlt
and
ret
fsub
dec
adc
notb
popf
rcl
stos
jge
enter
add
sarl
inc
lcall
mov
sti
adc
cwtl
imul
mov
jbe
shlb
lcall
push
icebp
outsl
leave
imul
mov
inc
gs
fbstp
stos
xlat
fldt
adc
mov
jno
inc
outsb
adc
cmp
dec
xchg
mov
outsl
adc
cmp
add
push
lock
sub
in
dec
cmp
out
dec
repnz
ret
out
mov
lahf
add
icebp
call
xlat
imul
and
cmp
xor
cmp
enter
sti
gs
xchg
push
js
add
xchg
js
adc
adc
sub
vmovhpd
mov
add
add
test
insb
in
jge
dec
icebp
or
icebp
add
and
pop
push
int3
cmp
xchg
mov
jmp
int
or
mov
cmp
add
stc
inc
incl
loope
insb
cmc
add
and
or
repnz
loop
xor
nop
ljmp
loope
outsb
jmp
dec
inc
shr
out
out
mov
add
xchg
mov
je
add
xchg
add
aaa
cmc
jbe
ljmp
jmp
sti
rclb
add
mov
cmc
loope
js
jp
syscall
rorl
adc
mov
mov
or
jl
cli
mov
rcpps
lret
mov
std
pop
mov
dec
jo
xor
rcl
add
add
or
xchg
in
pop
push
rcl
int3
addb
inc
dec
or
add
push
push
inc
mov
aas
lret
and
out
cmp
sarl
inc
daa
push
dec
or
scas
std
call
repz
pusha
jp
fiaddl
subb
leave
push
stos
add
lock
add
xchg
and
leave
popa
ljmp
aam
out
mov
faddl
in
jae
cltd
daa
dec
pop
push
xchg
xlat
daa
jl
adc
xor
cmc
cmp
mov
jae
mov
imul
aaa
test
dec
jge
add
outsb
leave
inc
push
cmp
xor
cmp
push
in
sub
fldl
add
scas
mov
add
leave
hlt
arpl
out
cld
data16
out
sub
add
int
add
not
lods
stc
test
inc
loope
mov
push
jb
jae
popa
dec
mov
mov
mov
xchg
jbe
push
out
fsub
inc
xor
shlb
add
wbinvd
pop
jl
push
lods
dec
outsb
inc
scas
shll
jne
fisubrl
and
inc
mov
add
and
xor
sub
mov
pop
mov
popa
add
mov
push
inc
add
pushl
sbb
mov
test
scas
dec
pop
push
add
add
mov
dec
jmp
std
inc
ljmp
inc
jne
and
or
mov
push
jne
xor
add
add
push
imul
mov
std
push
dec
jle
dec
into
cli
xchg
sti
pop
lock
movl
dec
and
je
shll
add
and
inc
add
mov
cli
lods
or
pop
and
jae
and
mov
xchg
loopne
cli
je
sub
insb
mov
scas
add
xchg
mov
imul
dec
das
or
dec
int3
xchg
subl
aad
jne
icebp
inc
fsubl
subb
sbb
fwait
and
mov
test
sub
add
and
aam
andb
arpl
and
out
aad
call
sub
cmp
mov
and
cwtl
cmp
push
adc
in
rcl
and
jnp
pushl
js
and
lods
lret
call
out
lret
outsb
xor
fidivs
mov
push
and
mov
add
add
inc
lock
cmp
xchg
mov
test
jmp
call
insb
xchg
mov
adc
outsl
dec
jo
inc
iret
mov
cli
cli
adc
bound
or
icebp
je
ffreep
adc
cmp
xchg
sub
in
cli
incb
in
and
or
add
xor
adcl
add
mov
pop
adc
divb
cmp
mov
test
dec
mov
outsb
call
je
jne
adc
jns
dec
dec
call
addl
cld
mov
mov
add
and
add
add
and
imul
ja
jnp
outsb
mov
mov
cli
jne
add
and
es
add
cmp
push
xor
push
cmp
cmp
sub
xor
psubq
in
add
lahf
push
xor
mov
std
lret
dec
jge
call
dec
xor
and
jnp
add
inc
js
adc
orl
add
nop
push
flds
pop
push
ja
lret
fists
adc
mov
inc
cmp
mov
je
add
sti
dec
xor
rorb
add
icebp
cld
xor
out
stos
xor
aad
push
jle
in
jnp
or
ret
and
sbb
jg
ljmp
push
aam
int
jecxz
jno
imul
popf
in
ss
adc
int3
scas
jecxz
pop
ss
enter
adc
outsb
leave
push
jb
insb
push
dec
jmp
push
jns
inc
mov
in
push
and
fcmovnbe
pop
cmp
dec
out
xchg
in
pandn
sti
int
mov
adc
inc
mov
inc
mov
push
cmp
add
inc
frstor
movsl
xchg
cmp
cltd
cli
pop
loope
outsb
mov
push
icebp
aaa
cmp
call
add
gs
shl
mov
push
icebp
add
cmp
mov
aaa
cli
insl
mov
stc
fsubl
je
insl
mov
nop
fistl
inc
jne
scas
xchg
adc
stos
into
mov
ljmp
add
add
loop
add
lods
jae
pop
fldenv
push
insl
fldcw
adc
dec
incl
or
mov
mov
shl
fdivrs
fldl
loop
mov
orl
insl
testb
add
dec
clc
das
cli
mov
add
fprem
adc
in
push
mov
out
dec
push
inc
loope
adc
out
push
push
pop
xchg
push
add
or
sbb
adc
cltd
adc
cmp
xlat
shl
mov
push
fadds
add
dec
push
xor
or
mov
insl
sbb
add
xchg
in
sti
jge
push
sti
lea
cli
ds
cmovo
enter
leave
push
lcall
out
add
mov
add
call
inc
dec
into
adc
dec
into
stos
mov
jmp
incb
shrl
add
aad
mov
adc
and
pop
push
adc
dec
inc
js
add
gs
fndisi(8087
push
inc
shl
pop
fcmovnbe
adc
dec
data16
dec
imul
sub
add
int3
sub
jecxz
sti
mov
in
xchg
mov
sub
icebp
push
aad
cmp
aad
add
add
mov
xchg
mov
call
pop
mov
ds
ljmp
add
sub
dec
popa
mov
hlt
push
push
les
dec
lahf
xchg
adc
ds
push
add
mov
push
out
subb
and
js
ret
fdivr
nop
xchg
xchg
loope
cmp
test
push
jb
aam
insb
movsl
pop
out
push
stos
out
xor
jbe
sub
push
push
inc
data16
ljmp
xorl
add
popa
or
sub
add
ljmp
push
jmp
pushf
dec
add
test
shl
xor
idivb
push
or
pop
mov
xor
les
decl
rolb
cmc
test
pusha
add
jg
loop
or
and
jns
ljmp
push
cli
repnz
pusha
sti
addb
pop
cmc
mov
je
sbb
jnp
and
push
pop
jle
pop
sbb
or
jmp
lcall
jge
nop
dec
cmp
ss
je
xor
sbb
idiv
push
push
test
push
push
sar
dec
cwtl
inc
or
into
push
test
pop
hlt
test
cs
les
xchg
xchg
push
je
mov
iret
push
add
sub
test
sub
stos
call
add
mov
cmp
repz
sbb
scas
inc
dec
icebp
mov
mov
icebp
xchg
rcl
and
dec
into
daa
mov
and
imull
add
cmpl
add
pop
mov
mov
inc
movsb
out
test
repz
add
xchg
sub
pop
inc
mov
jmp
inc
cmpsl
repz
or
mov
leave
movsl
cmp
pop
mov
loop
cmp
cmpsb
sub
sub
jne
xlat
cmp
xor
jbe
pop
jns
push
bound
and
icebp
sub
insb
in
sub
sahf
push
cli
or
cmp
xor
jbe
adc
add
cmp
bound
icebp
adcl
sbbl
cmc
mov
imul
add
xchg
ljmp
push
movsl
pop
mov
jbe
mov
sub
dec
jb
cmc
mov
mov
jp
pop
sub
add
cmp
cmp
mov
test
or
xor
call
add
aaa
mov
dec
pop
push
sub
push
cmp
test
aam
xor
sbbl
imul
or
in
cli
push
mov
sub
addl
int
int3
pop
mov
or
shll
in
pop
mov
leave
ret
adcl
push
push
in
add
fcomp
loopne
jmp
and
aam
ja
ja
jns
outsl
sub
cli
inc
idiv
xchg
clc
out
mov
ja
add
mov
lret
cmp
sar
scas
xchg
sub
out
add
sti
fsub
adc
sbb
push
adc
notl
sar
ljmp
sti
inc
and
lods
decl
lahf
dec
ret
xchg
imul
dec
aas
into
mov
icebp
mov
icebp
stc
movsb
sti
js
add
sub
ss
lods
fsubrs
jae
ret
jo
stos
repz
pop
jno
and
movsl
and
push
sub
xchg
lret
sahf
cmp
add
gs
sbb
push
adc
mov
inc
insb
push
popf
js
rcrb
add
clc
out
push
imul
shrb
mov
cld
cmpsl
ljmp
lret
in
and
cmpsl
lds
add
shrb
call
mov
jg
das
es
push
stos
clc
mov
das
es
or
movsb
clc
push
xor
stc
pop
xor
jne
jbe
adc
xchg
stc
stc
mov
sbb
jmp
add
add
es
bound
sti
mov
dec
jno
push
push
movsl
mov
mov
jmp
jb
push
and
sub
imul
sub
jo
loope
repnz
lea
or
mov
adc
mov
adc
cmp
inc
mov
mov
in
pusha
out
hlt
add
xor
push
insl
push
notb
add
jp
dec
lea
cltd
icebp
call
fdivrp
adc
push
sti
push
add
add
test
jp
sti
push
aam
ljmp
cmovo
inc
or
add
jne
push
ljmp
sti
pushl
hlt
test
push
jns
xchg
add
mov
or
cli
mov
add
adcl
mov
pop
sti
inc
pop
addb
add
jo
mov
mov
and
je
xchg
ja
xchg
out
dec
and
lods
pop
into
fstps
add
xchg
sti
add
test
add
decb
add
or
into
add
add
insb
test
sbb
out
and
daa
outsl
sbb
es
lea
jmp
push
xchg
xor
call
cmc
data16
mov
jae
shrl
xchg
sbb
push
icebp
arpl
outsl
adc
lock
ja
and
and
insb
sub
add
outsb
adc
sub
sub
lock
jae
out
daa
cmp
dec
cli
xchg
test
cmpsl
call
sbb
outsb
icebp
insb
jae
or
divl
icebp
pop
scas
in
stc
cld
nop
add
stos
sub
fsubp
add
lret
mov
jmp
mov
adc
sarl
mov
in
mov
nop
add
call
push
ret
test
icebp
sub
mov
rcll
pushf
jmp
add
aas
or
cmp
inc
or
jmp
pop
or
jp
jne
sub
jle
and
mov
test
jmp
pusha
divl
notb
lods
jae
popa
sub
call
add
add
add
add
addr16
cmpl
pop
push
push
aas
lret
std
add
das
push
add
call
hlt
cmpl
sti
sub
push
aad
add
sub
push
xchg
negl
xlat
or
popf
or
shrl
imul
out
sti
sub
fdiv
and
xlat
mov
add
fcompl
xchg
mov
pop
sbb
pop
sbb
sub
sub
jne
mov
clc
addr16
mov
into
int3
pop
push
sub
sbb
push
xchg
mov
stos
addl
out
xlat
mov
cmc
nop
mov
fisubrs
sbb
mov
ret
push
cltd
icebp
nop
add
adc
sbb
mov
into
stc
jmp
jmp
fs
and
mov
xor
push
repnz
int3
movsb
fwait
mov
pushf
fwait
mov
cmp
les
and
addr16
push
outsb
jo
dec
insl
dec
add
icebp
outsb
inc
add
pushf
and
iret
insb
js
cwtl
and
sbb
add
into
xor
out
jno
jmp
mov
mov
mov
push
xor
add
adc
inc
loop
bound
cli
out
or
hlt
mov
inc
jmp
fbld
inc
cld
rcll
add
lret
or
aad
dec
je
es
ss
pushf
clc
aas
ds
in
adc
test
pop
lock
hlt
add
pop
popf
std
pusha
cmc
ljmp
push
mov
inc
jmp
iret
icebp
mov
fcmovbe
mov
and
divb
sti
add
mov
out
sti
call
add
cli
sub
mov
add
pop
leave
ret
push
mov
ja
shlb
cmc
add
lea
and
inc
push
inc
add
movsl
cld
cmc
call
or
xor
inc
sub
sub
inc
inc
cld
cmc
push
pop
push
cmp
jno
jbe
aaa
sub
push
xor
pop
xchg
inc
or
mov
cltd
push
inc
lret
push
xchg
mov
sti
adc
mov
add
push
sti
push
out
jg
pop
mov
or
adc
test
and
sti
add
fimuls
cli
inc
push
repz
push
xchg
pop
jp
aaa
pop
push
lea
leave
hlt
dec
test
and
cli
jl
aas
push
imul
and
pop
sub
mov
push
or
adc
pop
sbb
outsb
insl
jg
pop
dec
mov
stos
inc
sbb
mov
gs
popa
pop
and
add
xlat
jne
sbb
pop
mov
ret
dec
je
rcpps
adc
call
sbb
insl
movsb
and
shll
pop
sbb
clc
sarl
adc
imul
out
pop
icebp
out
insl
repnz
add
icebp
out
shrl
mov
insl
inc
jno
shlb
jne
out
add
sbb
add
push
insb
inc
push
insl
je
popf
inc
jmp
insl
shld
fcoml
xchg
push
mov
xchg
mov
mov
sti
jmp
adc
jmp
xor
js
add
dec
jbe
cmp
or
sbb
fldl
push
sbb
loop
ret
dec
shr
and
cli
loop
movsb
pop
aas
add
mov
sbb
add
cmp
inc
mov
xchg
cmc
adc
sub
repnz
fdivl
sahf
test
cmp
in
stc
xchg
add
or
iret
cmp
mov
ljmp
adc
lock
pushf
sti
sub
int
cld
add
mov
add
mov
mov
mov
inc
cli
mov
mov
push
dec
add
clc
fmul
adc
addr16
add
mov
lea
aas
or
das
xchg
arpl
jge
fiaddl
push
test
nop
adc
mov
std
add
ret
add
movsb
mov
mov
dec
incb
pop
xchg
or
sti
gs
lahf
inc
sti
inc
cmp
in
in
rolb
std
cld
or
add
mov
fadd
lcall
mov
mov
loopne
rol
sbb
cmpsl
or
rol
insb
gs
xchg
sbb
aad
inc
sbb
xchg
movsb
aad
xchg
in
stos
subb
cmp
xor
mov
sub
call
pop
mov
arpl
lds
rorb
xchg
scas
lods
insl
jmp
inc
sbb
adc
add
daa
add
push
filds
test
push
lret
aam
test
cmpsl
add
jge
push
mov
sar
add
incb
or
push
insb
inc
fists
jmp
je
outsb
push
xchg
stos
icebp
mov
xchg
aas
add
sti
nop
sbb
popf
mov
lcall
outsb
push
xchg
xor
js
push
insb
inc
fistpll
adc
dec
push
jne
mov
jno
push
add
adc
inc
test
dec
and
mov
adc
cli
cmp
hlt
test
notb
dec
fs
add
add
cmc
test
add
add
push
repz
scas
clc
add
pop
int
inc
push
inc
hlt
and
add
add
aas
lret
hlt
bound
lret
and
add
ja
jg
xchg
out
or
dec
mov
lret
aam
inc
es
aas
push
and
inc
fidivl
dec
faddp
adc
std
sbb
jae
adc
test
sarl
adc
mov
aas
push
rcll
add
jnp
subl
inc
inc
xor
push
xchg
shll
mov
lods
dec
fimull
rorb
loopne
mov
mov
adc
sub
popl
push
rol
notb
repnz
lock
ficoms
or
sbb
push
out
mov
adc
pop
sbb
xlat
push
fwait
addb
xchg
adc
or
xorl
and
icebp
out
aam
sub
add
push
mov
cwtl
mov
pop
mov
cmpsw
mov
or
add
lods
imul
or
dec
pop
pop
enter
adc
icebp
add
sbb
adc
push
icebp
add
lcall
ss
cld
loopne
adc
xchg
test
add
mov
push
faddp
sbb
push
ret
stc
fsubrl
jmp
push
icebp
xor
data16
mov
adc
jg
add
mov
shll
ret
push
cs
and
mov
dec
bound
adc
ljmp
sbb
outsb
shll
shll
sbb
inc
add
cli
outsb
shll
xlat
subl
jne
dec
add
sti
xor
mov
test
data16
push
incl
mov
pop
pop
add
mov
cli
mov
not
sub
adc
jns
hlt
dec
add
push
shll
mov
repnz
sbb
icebp
addl
push
pop
adc
add
enter
push
or
cli
ds
in
aas
push
popl
test
mov
jbe
rorl
dec
dec
cltd
sbb
ds
aas
push
add
xchg
or
cmp
or
mov
sbb
adc
test
daa
or
ljmp
sub
sbb
dec
adcb
addl
xchg
push
cltd
jg
in
or
add
jb
add
icebp
pop
loop
imul
arpl
rol
bound
movsb
imul
out
sahf
in
je
lock
jle
push
inc
hlt
out
pop
inc
lret
mov
sbb
insl
pop
popa
push
icebp
out
dec
insl
pop
bound
out
push
loopne
sbb
data16
jnp
add
rolb
push
icebp
hlt
call
orl
xor
aam
jo
push
loopne
xchg
repnz
insl
cltd
add
out
cmp
add
sbb
test
mov
test
js
mov
or
cmp
add
push
mov
inc
jmp
sti
rolb
fs
popf
arpl
add
add
leave
mov
inc
push
sar
mov
inc
jmp
rclb
inc
adc
inc
lds
daa
cmpl
mov
je
call
add
lods
jae
lret
add
in
test
or
sub
loope
shr
add
and
add
mov
add
cltd
inc
and
lods
cli
mov
cmp
and
xchg
adc
inc
xchg
push
add
outsl
push
add
in
mov
in
cmp
pop
mov
xchg
dec
lods
push
sbb
push
and
xchg
dec
in
cmp
hlt
cmc
ja
push
and
or
cli
pop
mov
aas
push
ds
cli
ds
icebp
aas
push
test
add
add
jnp
cmp
in
fsubr
or
adc
xchg
ret
cvttps2pi
add
push
sbb
push
sbb
incl
in
xor
adc
sti
cld
popf
inc
je
aas
xchg
and
jns
sti
lahf
jnp
push
out
mov
ja
jnp
out
or
in
lods
ja
or
in
in
sarb
xchg
cs
add
mov
and
dec
jne
add
icebp
fiaddl
in
cmp
rol
call
sti
dec
out
lock
outsb
or
pavgw
repnz
lods
mov
cli
lock
out
add
shlb
mov
adcb
or
and
daa
add
xor
andb
xor
daa
add
add
lods
ret
out
jge
xor
inc
lea
add
inc
in
push
icebp
add
icebp
call
mov
adc
insb
iret
add
nop
cmc
dec
imul
lcall
add
rcll
loopne
rclb
and
add
frstor
adc
and
add
cli
cli
testb
add
add
inc
or
popf
icebp
add
inc
mov
fchs
addb
or
ret
into
add
je
out
cmp
add
push
jl
lds
clc
jae
sbb
cmc
add
mov
add
cs
xor
inc
stc
adc
xor
ljmp
or
sub
xor
add
or
clc
adc
xor
adcb
push
shl
add
adc
icebp
add
cmpsl
or
cmp
adc
pop
mov
mov
adc
push
sbb
mov
jae
inc
dec
push
sub
ljmp
push
lods
mov
and
mov
arpl
cmpsb
mov
je
adc
or
add
insl
in
call
sbb
adc
cmc
gs
test
sbb
add
push
enter
scas
in
cli
out
sub
add
or
fisubl
lods
mov
dec
inc
loope
pop
out
and
sti
data16
xor
dec
aam
rclb
adc
pop
or
icebp
sbb
mov
stc
xchg
icebp
enter
add
lcall
or
pop
sbb
mov
inc
pop
repz
inc
adc
in
add
mov
jp
add
adc
out
mov
rorb
test
or
adcb
out
lret
out
and
xlat
push
cmpsb
loope
mov
hlt
inc
in
push
or
clc
push
xchg
ficoml
push
or
or
movsl
add
jg
fadds
jle
add
pop
div
mov
or
cmp
ss
push
or
mov
ret
sti
stc
cld
xorb
dec
xchg
push
in
cli
pop
pop
loope
fdivrl
stc
mov
je
push
out
aam
or
loope
xchg
leave
sbb
ds
and
pop
add
sti
push
pushf
xor
add
or
mov
int3
or
dec
test
jb
fdivrp
push
notl
sub
push
push
out
dec
test
adc
jp
ljmp
push
pop
ret
push
mov
sti
add
ret
xor
add
or
psrad
mov
xchg
inc
push
or
lahf
incb
or
sar
call
sbb
jne
add
pop
divl
cmc
adc
cli
pop
imull
in
imulb
fdivp
inc
sub
push
mov
in
cmc
mov
je
cmp
je
or
pop
fmul
cld
out
dec
add
jne
pop
mov
and
in
cli
inc
enter
fisubl
xchg
add
add
sbb
stc
sbb
outsb
test
out
push
nop
add
out
cli
fisubs
jns
imul
sti
cmp
lock
mov
dec
add
pop
sbb
data16
sbb
fadds
or
inc
push
in
xor
sti
and
add
insl
test
cmp
hlt
mov
mov
js
or
add
add
mov
add
stc
imul
xchg
out
push
or
pop
cwtl
jle
add
faddl
cmpsl
or
dec
icebp
mov
repz
out
dec
xchg
jo
cmp
jle
out
push
jle
add
or
add
sbb
add
lahf
add
mov
stc
aam
fldl
add
jb
mov
lock
jl
xor
push
or
test
enter
sub
stc
sbb
jo
icebp
push
jle
xchg
sar
stc
jle
idiv
cld
push
or
cmc
push
jle
pop
dec
popf
adc
push
stos
pop
sub
jb
add
dec
enter
outsb
je
shr
jmp
or
add
adc
movsb
push
jl
add
adc
mov
sbb
sti
in
lock
in
jle
incl
loope
jne
icebp
adc
add
das
push
add
out
clc
adc
jae
xor
xor
inc
sti
mov
ret
xchg
out
inc
adc
inc
fisttps
add
add
add
sbb
add
out
out
mov
out
add
es
jne
jle
call
sbb
les
xchg
divb
addl
fwait
cli
cld
mov
jae
mov
fcoml
mov
stc
fcoml
fmull
sbb
pop
mov
lds
mov
adc
clc
add
adc
add
add
je
pusha
sub
test
mov
clc
mov
mov
cmpb
jl
fsubs
mov
inc
fsubs
add
dec
aas
mov
popa
or
in
jle
adc
clc
shl
add
cmpsl
add
pop
jbe
jge
in
or
shlb
pop
sub
sti
push
add
push
ret
idivl
js
or
push
mov
mov
xchg
xlat
push
fidivs
xchg
cltd
jp
fadd
scas
xchg
push
je
adc
pop
int
inc
push
mov
mov
xor
out
push
std
sbb
jle
ja
sbb
dec
add
insl
pop
andb
cmp
shll
mov
add
or
push
lret
faddl
add
push
insb
mov
adc
out
lods
fdivs
push
rorb
stc
cld
pusha
fldl
jbe
mov
int
mov
jl
sbb
into
arpl
insb
ret
inc
jno
xchg
insb
sar
dec
cli
jle
icebp
in
ljmp
fwait
stos
push
cli
jb
stc
test
add
lcall
mov
mov
add
sub
lds
sub
flds
adc
mov
bnd
negb
dec
call
jg
jb
outsl
pop
jne
ror
inc
ljmp
jmp
jle
cmpb
jp
xorb
mov
mov
jmp
jae
ss
cli
insl
cs
test
add
jle
cmp
jnp
mov
add
dec
std
cmp
push
xchg
shl
push
adc
decl
xchg
enter
adc
dec
push
jae
shrl
incl
or
pop
or
cli
insl
addl
jle
jmp
jmp
or
jmp
pop
or
add
push
or
jg
bound
push
lret
adc
add
adc
cs
bound
mov
cmp
push
icebp
shlb
add
cmp
dec
mov
dec
or
aad
gs
sbb
mov
pop
test
out
sub
movsb
daa
addr16
in
push
mov
ljmp
add
insl
xor
insb
sub
or
add
ja
inc
pop
jne
push
push
icebp
pop
in
adc
stos
sti
test
out
cli
cltd
insb
out
xchg
icebp
adc
or
in
out
xchg
cmpsl
mov
cld
je
dec
inc
shlb
aas
cmc
cli
stc
insl
jmp
inc
push
icebp
add
in
mov
xchg
into
cli
ss
icebp
je
cwtl
test
add
mov
aad
add
inc
cli
push
xor
jmp
pusha
xchg
add
inc
mov
mov
fnstenv
pop
cmp
add
and
sahf
lcall
and
lods
test
aas
mov
fstpl
cltd
cli
jge
xor
stc
add
jo
add
xchg
dec
or
jp
cmc
adc
add
xor
test
cli
cmp
daa
call
scas
jle
nop
cmp
add
cmp
mov
cli
mov
mov
cld
add
bnd
test
jmp
es
repnz
out
adc
ljmp
bswap
sbb
add
add
jl
je
pop
call
add
push
xchg
andb
or
jmp
loop
call
iret
dec
jno
fcoms
iret
in
mov
pop
or
imul
jae
and
pop
movsl
lea
xchg
sti
inc
cmp
inc
push
mov
or
xchg
and
xchg
xor
lea
push
sbb
push
xlat
xor
mov
pop
call
add
inc
push
cmp
push
push
inc
or
inc
enter
icebp
lret
pop
aam
repz
icebp
xchg
rorl
es
aas
aaa
out
call
add
icebp
out
aas
sar
push
jno
pop
dec
lock
inc
add
inc
std
out
rcl
cmp
push
icebp
xor
push
push
pop
arpl
pop
arpl
and
add
das
mov
and
das
mov
add
mov
sbbl
mov
orl
out
jle
mov
cld
sub
add
sarb
add
cli
icebp
mov
std
add
push
or
adc
je
lds
jmp
testl
mov
add
inc
xchg
pop
cli
adc
add
push
push
lods
push
cmpb
cmp
idiv
jb
jmp
add
xchg
clc
add
fs
jmp
mov
les
add
repnz
jp
cmc
andb
hlt
add
add
or
jp
xor
incl
add
mov
out
imul
push
add
movsl
stos
call
lea
push
sahf
adc
test
idiv
fisubrl
fsubrl
pop
idiv
jb
testb
jne
jno
in
sti
repz
sar
adc
addr16
and
push
push
add
out
xor
hlt
mov
pop
lea
lods
xor
jmp
into
inc
repnz
mov
add
shrl
cmp
repnz
dec
add
push
popf
cmp
add
out
pop
hlt
cli
mov
or
outsl
add
clc
stos
clc
push
push
cs
mov
mov
jo
jne
jno
dec
adc
les
pop
loop
xchg
arpl
cli
add
fsubrs
push
icebp
adc
jb
inc
sub
or
test
mov
andl
insb
sub
hlt
mov
aam
jl
out
pop
mov
inc
push
data16
bound
add
push
xchg
push
repz
mov
jno
push
or
loop
stc
arpl
add
cmpsl
out
mov
hlt
or
jmp
push
or
jl
add
dec
insl
test
jmp
stc
call
imul
out
outsb
ja
sar
je
cmp
xchg
mov
stc
mov
mov
stc
cmp
in
lahf
subb
fs
mov
enter
ss
push
test
clc
mov
je
add
and
push
mov
cli
push
les
push
cmc
add
dec
bnd
jge
ret
inc
inc
in
data16
xchg
aaa
jmp
fs
verw
xor
cmp
dec
lea
push
lea
add
cmp
aas
test
mov
add
cmp
xchg
incl
add
outsb
mov
maskmovq
idivl
cli
ljmp
mov
sub
scas
add
xchg
inc
push
inc
or
repnz
fldenv
mov
repz
add
or
adc
ljmp
jge
adc
jae
jb
dec
out
cmp
push
dec
cli
jo,pt
inc
push
xchg
in
aam
dec
xchg
push
inc
add
push
mov
lea
add
sti
addb
jg
sbb
inc
aas
mov
sti
mov
inc
or
add
push
je
mov
push
hlt
adc
pop
cmp
fucomip
push
push
mov
mov
cmp
cmpsl
or
add
sbb
xlat
mov
cli
adc
pushf
sti
hlt
lds
push
add
cltd
lcall
clc
jno
in
gs
jge
imul
das
inc
or
int
cmc
pusha
inc
ja
fs
aas
out
daa
fstpt
lock
sub
loop
add
idiv
xchg
arpl
xchg
lock
fildl
jp
call
sub
adc
aas
or
xchg
dec
cmc
jo
outsl
in
jmp
in
cmpsl
add
xor
out
mov
pop
add
mov
sub
push
mov
stc
jb
int
push
jmp
add
jle
xor
ds
clc
leave
pop
xchg
add
shll
in
sub
out
shll
in
sub
repz
push
dec
test
add
pop
ret
aad
dec
xor
in
fdiv
lods
call
pop
jge
sbb
cs
and
push
icebp
add
xchg
jl
mov
repz
jno
and
sbb
xor
rclb
xor
idiv
jno
and
inc
ja
in
ds
lahf
call
test
repnz
movsl
add
lea
sbb
inc
je
xchg
jbe
test
add
jnp
mov
sbb
jmp
out
bound
stos
and
push
in
push
call
stc
sub
push
jo
and
popf
push
decl
push
inc
cmp
or
lea
jae
pop
lods
ljmp
pop
add
ret
ljmp
push
mov
adc
idivb
add
xorb
fdivr
jmp
pop
sub
call
orb
sbb
push
fcomps
jmp
xlat
push
push
pushf
mov
testb
out
pop
in
cli
shl
in
inc
int
dec
jnp
push
mov
jae
inc
psllw
inc
vrsqrtss
fs
xor
mov
jns
xchg
and
add
dec
icebp
pop
ja
outsb
incl
xor
fisubs
stc
in
xlat
xor
jno
jecxz
test
inc
mov
jl
in
pop
in
les
xor
sub
fs
dec
jae
jle
jmp
pusha
jbe
or
ret
loopne
add
cmc
sub
add
add
stc
fmull
loopne
in
mov
add
inc
aaa
ja
out
stc
popa
cli
ss
inc
jmp
fistpl
fisubl
jmp
bound
jbe
outsb
add
push
ja
add
sahf
and
xor
push
call
push
jno
xor
repz
int
sbb
add
arpl
sldt
mov
ljmp
sub
fistpll
mov
shl
insl
adc
sar
aad
cmp
loop
scas
aas
xchg
addb
mov
imul
sub
push
mov
xor
mov
jo
je
jbe
add
insb
add
cltd
lods
arpl
les
fdivl
orl
add
lods
insl
dec
pop
mov
stc
scas
pusha
add
mov
frstor
jne
xor
push
xorb
add
xlat
cmpsl
enter
popa
rolb
inc
xchg
in
das
into
jp
enter
push
fildll
add
fcomps
dec
mov
adc
inc
mov
out
call
jmp
dec
cli
in
pushl
shlb
testb
out
jl
xor
mov
push
sti
inc
les
inc
push
arpl
pusha
scas
jns
pop
in
jl
outsl
push
adc
jo
je
outsl
pop
jp
call
dec
jp
fisttpll
pop
add
jo
push
js
lock
inc
mov
arpl
jg
add
movl
lahf
in
repnz
inc
pop
aaa
pop
sub
aas
dec
icebp
mov
inc
jmp
lods
clc
jns
xor
dec
icebp
pusha
cmp
jo
mov
adc
mov
leave
fildll
jmp
ja
or
add
pop
das
and
push
repz
dec
pop
sbb
sub
add
gs
sbb
xor
pusha
xchg
cmc
add
in
stc
jo
stc
in
lahf
inc
push
push
pop
in
test
sub
or
push
or
adc
icebp
sbb
add
push
jle
mov
insb
incl
xlat
mov
fs
pusha
push
imul
xor
cmpsl
sub
imul
add
scas
adcl
add
adc
cmc
push
mov
push
and
stos
in
shlb
cltd
int
adcl
cld
cmc
je
add
push
lcall
dec
cmovo
outsl
mov
ret
jno
and
or
data16
mov
push
cli
shr
mov
roll
add
mov
inc
jmp
jmp
and
test
pop
push
call
std
xchg
push
sti
dec
or
iret
lods
stos
loop
sub
adc
std
outsb
bound
or
cltd
icebp
push
add
add
daa
fdivr
push
or
inc
shll
je
pop
in
std
mov
push
clc
out
pop
in
add
pop
xor
add
cwtl
inc
sbb
stos
mov
pop
cmpsb
aad
in
cli
loop
push
fcoms
out
push
or
cmc
dec
fnstcw
push
dec
icebp
lcall
gs
pop
lcall
xchg
in
mov
jp
dec
cli
pop
leave
jne
out
pop
lcall
pop
cli
cmp
sbb
lock
add
pop
mov
outsl
inc
pop
outsb
imull
xor
jno
lods
test
inc
pop
mov
stc
stc
pop
cmp
pop
mov
fdivrl
std
mov
jns
or
arpl
and
inc
stc
push
stos
in
sub
mov
adc
mov
cmp
je
or
xchg
rolb
jae
jns
sub
and
sbb
adc
pop
adc
add
test
enter
push
outsb
pop
mov
cmc
xchg
pop
cli
inc
das
dec
push
xor
std
add
cmp
inc
mov
push
das
sbb
pusha
xchg
flds
add
imul
aaa
adc
add
add
fisttpll
stos
jne
clc
inc
mov
mov
out
add
add
mov
orl
dec
pushl
sbb
notb
add
jp
dec
pushl
hlt
add
aas
cmpb
jl
shll
mov
int3
xor
dec
aas
mov
pop
adc
add
cmp
stc
cmp
repnz
add
je
call
sbb
jl
popa
pusha
lock
inc
rcrb
jge
push
add
test
andb
jl
fldenv
adc
jg
jl
bound
cmp
inc
mov
jbe
push
arpl
cmp
fcomps
es
scas
fcoms
popa
pop
aam
aaa
aam
and
insb
mov
or
add
xor
sbb
inc
dec
lahf
fistl
adc
adc
adc
mov
out
mov
aam
fcompl
jnp
loop
cmc
mov
int
lock
int3
cmc
sbb
in
jmp
or
mov
leavew
xchg
call
pop
rcr
out
xor
jae
and
add
pop
shll
jp
rcr
mov
pop
jp
fdivl
out
not
cmp
lahf
stc
pop
aas
cmp
cmp
mov
add
repz
call
add
dec
cmp
stc
lods
clc
outsb
dec
stc
cmp
neg
xchg
mov
iret
call
movsb
and
mov
ljmp
add
xlat
insl
or
dec
pop
and
mov
mov
outsb
in
push
sub
inc
cmc
sbb
sbb
outsb
dec
fstp
fiadds
ljmp
add
xchg
out
jo
test
inc
inc
aaa
mov
add
adc
int
jmp
sub
mov
jae
add
lock
add
inc
sub
jmp
jne
rcl
loopne
mov
mov
sarb
inc
hlt
xor
int
jmp
cli
mov
mov
pop
out
lods
dec
xchg
hlt
lods
push
mov
jl
sub
je
lds
call
jne
pop
hlt
roll
outsl
mov
jns
lret
cmp
cs
mov
lret
rcll
mov
add
mov
add
or
jne
push
cmc
xchg
xchg
mov
dec
in
les
mov
pop
add
or
xor
xchg
or
xchg
mov
jle
push
xchg
dec
aam
pop
dec
in
adc
dec
sti
flds
dec
adc
add
add
incb
dec
daa
movsl
mov
imul
adc
and
shll
dec
insb
popa
add
addr16
pop
jno
mov
js
push
cmp
js
testb
cmp
pop
rorl
dec
jns
mov
test
aaa
movsb
sub
inc
mov
outsl
add
push
repz
add
loop
shrb
xor
pop
cwtl
in
stos
in
fstl
fs
sbb
dec
sub
add
sbb
mov
and
jae
ficompl
push
lock
dec
jns
dec
fildll
push
rcr
stc
ds
lcall
jmp
ljmp
inc
std
rcll
imul
int3
pop
sti
notb
add
push
int
cmp
out
ss
into
scas
cmp
mov
stos
and
bound
std
and
push
fisubl
mov
cmp
js
xchg
flds
add
aas
jmp
mov
das
or
jp
dec
adc
in
xchg
hlt
add
cmp
mov
pushf
push
mov
add
ljmp
xchg
repz
xor
dec
pushl
in
stos
hlt
add
das
push
orb
dec
clc
xor
outsb
jmp
dec
add
std
mov
in
orl
inc
incl
ret
pop
adc
jns
aaa
inc
mov
mov
mov
pop
in
add
add
call
cs
leave
push
xchg
aad
sub
pop
call
xchg
sub
adc
hlt
push
repnz
pop
pop
mov
or
mov
mov
dec
in
iret
mov
xor
shll
add
icebp
je
push
insb
xor
add
dec
nop
cmp
dec
ror
pop
outsb
cmpsl
add
jp
pop
jb
imull
hlt
pop
sahf
in
outsb
dec
pop
push
adc
dec
sbb
xchg
frstor
in
jmp
mov
pop
dec
neg
and
repz
je
fsubr
sub
adc
and
pop
fnstenv
lahf
sbb
pop
push
push
sub
add
int
enter
daa
aad
clc
int
in
popa
jb
fdivrl
add
filds
inc
sbb
jmp
xor
nop
es
mov
aad
xor
fildl
push
sub
bound
lret
pop
fldl
push
pop
insl
test
fldt
ljmp
inc
aad
insl
pop
daa
cli
fiaddl
xor
add
mov
push
xor
repz
jge
pusha
jbe
icebp
iret
sub
fstp
sub
bound
hlt
enter
out
aas
mov
stc
mov
test
in
and
add
and
loop
mov
adc
jp
rorb
cmpsl
ja
add
or
loop
add
sbbl
mov
addr16
fsub
scas
jl
arpl
stc
mov
cmc
xchg
insl
pop
fadd
orl
inc
or
cs
inc
loope
mov
testb
jae
clc
fdivr
or
xchg
lret
jae
jle
jnp
jle
ja
mov
inc
adc
add
push
mov
or
mov
add
leave
mov
movsl
out
jge
sub
push
add
mov
mov
inc
pop
popf
add
mov
pop
shlb
iret
adc
movsb
frstor
fnsave
aas
in
mov
mov
push
push
inc
les
mov
mov
data16
cmp
in
jp
xchg
jmp
xor
add
filds
mov
inc
les
cmpsl
mov
and
push
xor
mov
pop
aas
dec
lock
icebp
jo
adc
add
pop
repz
pop
add
addr16
pop
jno
mov
push
movsb
aam
out
pop
aam
xor
jl
push
dec
push
cmp
xchg
in
jecxz
push
data16
add
jb
fists
out
cmpsb
dec
lcall
cltd
jge
push
rorb
cmc
xorb
mov
rorl
jle
fstps
xchg
in
push
sbb
stc
ljmp
jae
dec
sahf
dec
jge
gs
test
icebp
pop
pushf
in
scas
add
lret
pop
or
xlat
mov
test
add
mov
push
sub
pop
std
xlat
stc
ljmp
addb
insb
int3
mov
inc
mov
lods
les
sahf
fldl
enter
mov
jno
lods
les
icebp
fwait
push
leave
test
stc
push
loope
jp
push
and
sub
rorl
imul
in
cmp
push
mov
add
repz
subl
mov
imul
in
xchg
mov
mov
add
push
loop
test
std
fiaddl
mov
stos
leave
std
call
aad
push
ficoms
fmuls
or
adc
jns
sub
inc
clc
sbb
mov
push
jge
rorb
jp
add
in
aam
scas
pop
or
fldl
mov
lret
dec
mov
jnp
mov
add
lods
aad
leave
lods
in
shl
inc
incl
je
jl
lock
inc
ret
or
inc
lret
jle
cmp
loope
mov
jnp
xchg
aad
mov
cld
add
int
les
mov
jl
leave
addr16
inc
icebp
fs
pop
pop
out
or
outsb
cmp
dec
cmp
test
pop
repnz
sub
out
cmpsl
in
out
int
pusha
jnp
push
outsb
inc
std
imul
sbb
push
repz
fs
add
pop
and
push
xor
xor
leave
cli
and
add
fiaddl
xor
mov
push
push
stc
jo
mov
xchg
outsl
dec
int
rolb
call
outsl
dec
lods
jbe
jge
pop
cmp
test
xlat
shlb
data16
ret
jl
sahf
and
pushl
push
and
aad
fiaddl
add
jbe
adc
push
push
std
pcmpeqd
jmp
int
loope
repnz
loopne
in
adc
push
push
incb
addb
dec
fsubl
aad
mov
mov
mov
in
cmp
icebp
sbb
lock
adc
imul
mov
dec
lcall
add
add
icebp
mov
sub
add
repnz
dec
enter
push
notb
rclb
in
cmp
add
cmp
ja
wrmsr
add
adc
popa
cmp
fiaddl
add
push
jl
fwait
scas
mov
clc
pushf
push
or
jne
cli
push
mov
mov
cmpsb
leave
je
dec
push
or
fdivr
insb
pop
dec
clc
add
push
arpl
shlb
mov
shl
in
shr
call
mov
inc
ret
jl
jmp
dec
mov
add
rorl
testb
fnstcw
jle
pop
add
sub
movsl
stos
addr16
xor
aam
dec
int
pop
push
stos
movsb
repnz
cs
inc
aam
out
and
fsubrp
push
jg
push
jne
test
dec
ja
sub
dec
mov
mov
ljmp
aam
stos
add
in
fimuls
pop
roll
pop
data16
ss
adc
add
xchg
sub
mov
out
rol
lods
push
bnd
push
jno
ficoml
orl
add
ljmp
sbb
sbbl
in
jno
imul
cwtl
push
iret
push
push
test
loop
sub
mov
icebp
clc
sub
sbb
mov
add
push
out
cmpsl
xchg
add
jae
mov
lods
stc
adc
xlat
jae
cmpsb
sbb
fs
popf
movsb
cli
out
add
ja
je
insl
cmp
pmulhw
jmp
mov
mov
jne
pop
jne
xor
decl
jl
inc
jmp
ljmp
int
dec
pop
cmp
lea
xchg
ljmp
fldl
int3
jp
inc
shrb
popf
movsb
jp
sbb
inc
xorb
jp
inc
mov
push
sbb
add
in
mov
enter
std
push
fmuls
inc
push
mov
adc
call
xor
icebp
jg
adc
cmp
xor
adc
pop
fucom
bswap
or
sar
mov
stos
add
js
icebp
insl
mov
inc
sbb
test
test
add
add
stos
or
add
jp
add
lret
repnz
inc
cmp
notb
cmc
ss
or
test
push
in
aas
xchg
ret
mov
idivl
xchg
push
push
jnp
jnp
xor
unpckhps
jg
std
out
pop
jp
clc
cmp
inc
pop
lret
stc
cs
movsb
pop
mulb
add
std
loop
and
data16
and
push
movsb
daa
outsl
int3
add
xor
sti
rclb
out
push
add
push
push
push
mov
push
push
icebp
ficoml
dec
mov
jg
hlt
inc
pop
cmp
movsb
jl
lods
add
fldl
jb
mov
rolb
sub
jns
hlt
xchg
add
add
loope
xchg
push
ss
dec
icebp
add
add
aad
icebp
jmp
push
icebp
or
rorl
adc
or
jns
adc
and
test
mov
ss
push
popa
xchg
repnz
push
fstpl
jns
add
sub
push
xor
sbb
cmp
add
mov
int
mov
scas
jne
add
inc
push
adc
cmpsb
fsubs
mov
stc
inc
jb
pop
clc
in
mov
scas
xor
dec
or
cli
add
inc
enter
icebp
add
stos
ds
mov
add
push
jmp
mov
mov
rcrl
orb
enter
jnp
push
loop
or
add
ja
call
or
adc
fdivr
mov
mov
test
std
jg
fcoms
push
add
jl
imul
push
cltd
add
cmp
push
sbb
jecxz
into
mov
jge
adc
or
inc
pop
test
scas
xlat
cmp
decl
mov
pop
movl
add
push
fidivrl
pop
stc
xorb
std
dec
icebp
sub
int
rolb
xchg
lock
movsl
inc
out
jp
in
aam
shll
js
int
loop
addl
hlt
hlt
faddp
mov
or
add
icebp
ljmp
adc
add
add
call
add
cmp
clc
jl
add
int
inc
mov
pushf
iret
cmp
test
mov
fidivrl
lock
int3
xor
add
xchg
lea
dec
idiv
bound
aad
test
repz
lret
arpl
shll
repz
cmc
bound
lds
adc
bound
out
test
pop
js
loope
inc
dec
in
fwait
xor
addl
add
jae
inc
fabs
gs
addb
inc
cmp
test
jge
xchg
lret
lea
bound
jae
cmp
xlat
add
stc
push
jns
cli
add
xchg
adcb
je
icebp
xor
push
in
outsl
imulb
loop
lea
orb
cmp
xchg
mov
mov
test
add
xchg
orb
inc
int3
mov
or
mov
add
inc
dec
or
adc
jmp
jno
loope
mov
call
test
cmp
call
lods
pop
mov
shll
or
imul
call
pushf
push
lds
repz
in
mov
dec
aad
in
les
add
xchg
sub
cs
std
and
das
rclb
js
cmp
adc
movsb
loopne
leave
adc
std
sub
cmp
cmpsl
push
out
xchg
fdivrl
aaa
ret
adc
std
push
enter
inc
mov
push
jns
push
or
in
call
adc
adc
test
jnp
dec
dec
push
add
out
add
das
stc
out
dec
dec
pop
cld
xor
sti
dec
subb
icebp
jns
stc
dec
insl
cmpsb
add
bnd
stc
aaa
push
adc
cld
cmpsl
dec
xor
mov
jmp
or
cs
sub
into
add
enter
mov
dec
inc
outsb
cmpsl
adc
hlt
call
or
and
dec
xorb
add
fldt
sbb
mov
jp
psubq
mov
inc
roll
xor
or
xchg
fadd
xchg
mov
pop
jmp
pop
cld
xchg
sub
xor
lods
dec
ds
xor
push
divl
mov
jmp
fwait
leave
loopne
push
icebp
shrl
add
push
into
push
push
out
hlt
sbb
or
add
push
lret
mov
add
lret
lret
add
push
je
ret
mov
outsb
inc
icebp
mov
jbe
add
inc
add
inc
adc
mov
and
ds
fldenv
xor
lcall
mov
dec
inc
or
inc
or
cmp
add
add
xchg
nop
int
adc
lods
insl
push
add
mov
fsubrs
xor
mov
sarb
mov
call
jp
testb
loop
jbe
mov
fsubr
xor
push
andb
push
pop
hlt
icebp
enter
sub
ret
add
aaa
add
vunpcklps
gs
inc
push
fbstp
sbb
push
stc
add
mov
sbb
sar
jl
aaa
inc
imul
insb
add
sarb
mov
or
cmpsb
jbe
std
cli
push
dec
rol
cmp
or
fcoms
dec
jl
frstor
lret
sar
mov
mov
icebp
lods
mov
jmp
jge
fldcw
aaa
imul
add
arpl
cmp
dec
les
test
sub
popa
mov
adc
push
and
inc
sbb
adc
mov
push
sbb
or
hlt
imul
cmp
add
and
mov
repz
sub
xchg
xchg
mov
adc
add
dec
fxch
out
lods
movb
push
icebp
mov
inc
cli
je
mov
sub
fs
mov
icebp
or
into
or
enter
jmp
repnz
divb
divb
icebp
bound
mov
subl
inc
rcll
je
flds
loop
in
pusha
add
xchg
aad
sbb
inc
xchg
fldcw
adc
ret
push
ljmp
jge
add
aam
fsts
icebp
sahf
arpl
cmp
roll
divb
test
cmp
xor
push
add
mov
xchg
jp
stos
repz
movsl
out
add
jns
pop
jp
push
push
icebp
xor
lea
add
pusha
idiv
imulb
add
clc
add
or
ljmp
lret
inc
push
push
push
lea
aas
int
or
adc
data16
inc
fistpl
xor
fsubl
mov
into
decb
test
test
inc
push
lret
jae
pop
dec
mov
add
add
xchg
add
bound
and
adc
and
jae
and
xchg
imul
dec
mov
xchg
sahf
bswap
loopnew
dec
xchg
mov
pop
pop
icebp
test
xchg
orl
push
sti
dec
xchg
mov
scas
jmp
fbld
add
jne
insb
inc
mov
push
ss
leave
test
leave
shrb
jne
push
push
icebp
insb
mov
pop
shll
ss
leave
rclb
pop
jne
add
call
shl
push
jg
add
outsb
int3
add
inc
jl
insb
mov
lret
and
lea
and
mov
je
movsb
fdivrs
fsubs
jae
inc
in
push
mov
add
push
push
add
sti
lock
lret
xor
mov
jecxz
stc
push
mov
stc
jmp
adc
cmp
shrl
jmp
push
inc
push
or
jae
mov
icebp
test
loope
fs
ds
push
jbe
pop
add
xchg
rcll
add
inc
in
shrl
lea
negb
je
add
adc
sub
jp
or
loope
jge
testb
repnz
outsl
mov
test
icebp
add
imul
adc
mov
cmc
dec
adc
or
stos
mov
mov
shlb
or
in
dec
call
add
push
xor
mov
in
xor
add
add
out
lret
idiv
jne
je
push
cmpsl
or
or
cli
enter
xchg
lcall
add
clc
lods
sub
pop
mov
adc
jns
dec
enter
or
jle
or
adc
test
lret
mov
jns
push
enter
push
ret
add
inc
or
push
add
or
sub
add
push
cmp
outsl
aaa
mov
test
sar
sti
xchg
pop
push
jb
mov
icebp
stos
push
imul
iret
push
in
push
push
add
push
mov
mov
rclb
shl
xor
xchg
add
mov
movsl
add
dec
call
daa
or
or
add
push
enter
mov
ret
loop
pop
cmc
out
sub
mov
mov
test
jne
call
mov
mov
lods
stc
mov
push
add
pushf
mov
insb
dec
dec
inc
pop
cmp
data16
xor
cmp
xor
into
add
shl
cltd
std
call
add
push
dec
shrb
bound
inc
or
pop
push
jno
jmp
nop
icebp
subl
inc
fiaddl
inc
js
repz
movsb
bound
adc
je
ds
sub
jae
and
sub
jae
cmp
call
mov
and
aas
adc
lahf
add
gs
add
mov
ljmp
scas
fiadds
loope
outsb
rolb
orl
leave
orb
jns
es
enter
enter
add
loope
outsl
rorb
repz
and
or
xchg
mov
sbb
jp
or
out
mov
test
call
or
xor
leave
cmovbe
jp
cli
out
div
jle
je
add
out
or
jp
out
inc
push
fmuls
addb
daa
add
into
xchg
aad
imul
stc
dec
lret
insb
inc
inc
sti
push
or
or
andl
xchg
out
add
dec
push
cmp
jb
mov
in
jge
mov
adc
imul
testl
cli
push
mov
sahf
pcmpeqd
mov
xchg
lock
lret
aad
in
ret
sub
dec
mov
sti
mov
gs
jmp
jae
push
inc
icebp
xchg
push
fidivrl
repz
mov
and
dec
dec
test
ret
mov
adc
mov
shll
movsb
add
cmpsl
lock
rolb
into
mov
dec
and
in
mov
fisttpl
adc
jl
inc
xor
fiaddl
ss
mov
enter
in
adc
ja
gs
mov
data16
sub
sbb
add
add
push
jmp
das
rol
outsl
loopne
test
push
icebp
test
push
inc
push
push
icebp
data16
sub
cmp
adc
out
int3
jl
call
stos
ss
mov
jo
add
mov
or
out
add
inc
loop
test
mov
xchg
stos
repz
add
incl
add
test
outsl
js
jp
push
push
gs
int3
lea
outsl
pusha
add
repz
or
sub
shl
cmc
add
or
inc
jb
dec
mov
rep
dec
or
jmp
mov
fists
popa
mov
cli
icebp
jnp
mov
out
mov
or
jnp
ret
lods
mov
add
jne
gs
xchg
in
or
add
arpl
dec
arpl
inc
or
out
and
cli
push
enter
inc
mov
jb
jp
xor
mov
or
sar
leave
pop
xorb
dec
lods
add
in
xorl
add
jnp
add
push
repnz
cli
test
add
push
outsl
adc
or
mov
int3
lock
mov
movsb
dec
mov
push
in
mov
dec
test
cmp
mov
fwait
std
arpl
mov
mov
xchg
lock
aam
lock
filds
cmc
loopne
inc
lahf
and
fdivs
test
jno
js
cmp
cmpsl
jge
ss
xor
adc
push
sub
das
pusha
sti
jb
and
push
dec
test
mov
pop
cmpsl
jnp
jnp
lea
pop
pop
add
or
movsl
cli
push
ss
subl
cmp
je
ret
cmp
push
test
push
leave
hlt
and
sbb
incb
add
lret
add
dec
in
mov
loop
cmp
into
push
call
push
lea
stos
aas
icebp
push
insb
repnz
pop
inc
inc
fisubl
clc
sub
dec
pushl
pop
std
cmp
stc
incl
mov
sarb
sub
cmp
mov
loop
jnp
sub
mov
stc
lcall
add
add
jbe
add
jbe
lods
out
ret
push
jp
decl
bound
mov
push
mov
and
test
hlt
mov
adcl
addl
xor
push
and
ss
or
dec
stc
sub
push
or
es
jae
push
repnz
leave
xchg
decb
orb
add
inc
mov
out
mov
xchg
sar
test
add
adc
mov
adc
xchg
loope
or
subb
add
push
xchg
mov
int
das
xchg
std
dec
test
ss
sar
jle
jmp
add
in
leave
add
mov
add
mov
push
dec
int3
fimull
xchg
add
daa
add
data16
out
loop
adc
mov
mov
rolb
push
loop
xchg
jns
and
add
add
jmp
ret
out
ret
out
lret
cld
xlat
pop
out
push
outsb
in
push
sub
insb
add
icebp
fidivl
in
outsb
ds
movsb
int
in
xchg
push
pop
inc
mov
add
fcompl
idivl
adc
jb
dec
mov
leave
or
jns
arpl
sti
mov
push
aaa
stc
xchg
cld
mov
dec
mov
icebp
inc
xlat
mov
popf
cmp
jmp
cmp
jno
icebp
add
shll
inc
insl
mov
mov
adc
subl
add
fwait
jecxz
icebp
or
fadds
jmp
ljmp
dec
stc
les
call
sub
push
icebp
jge
adc
je
test
js
push
sub
idivl
add
lea
ljmp
push
or
or
adc
add
pop
testb
clc
add
pushl
pushl
repz
jmp
inc
jnp
add
sbb
add
rcrl
ret
xor
fimull
mov
cmp
sbb
or
pop
add
push
sbb
hlt
push
sbb
add
jp
sub
and
imul
add
add
mul
or
cltd
fistps
ret
ss
dec
sub
push
pop
fsqrt
push
lods
jp
aas
adc
in
pop
pop
fnstsw
and
dec
pop
fisttpll
pop
call
inc
in
lret
ss
push
lods
es
sbb
in
rcl
add
icebp
cld
andl
dec
mov
ja
sbb
add
dec
addr16
ret
faddp
add
sub
jl
std
callw
loop
push
repz
pop
adc
add
aas
shlb
pop
jp
cwtl
leave
xor
jp
mov
mov
aas
mov
daa
push
lret
jge
mov
lods
mov
mov
push
js
adc
pop
jno
inc
push
dec
mov
movsb
and
jl
mov
push
xor
push
mov
or
mov
stc
insl
incb
push
push
icebp
add
movsl
add
arpl
inc
or
pop
or
repnz
stos
rorb
sub
or
inc
or
stc
jmp
insl
lods
pop
out
sub
je
add
jmp
sbb
add
add
test
fcos
mov
pushf
jl
jae
enter
mov
icebp
test
hlt
jnp
cmp
int3
movzbl
scas
inc
mov
xor
idiv
sub
add
add
xor
add
outsb
fs
cli
outsb
jl
push
movsb
test
push
testb
out
jns
add
lcall
paddq
loope
cmpsb
ret
cmp
in
and
mov
orl
in
jl
sub
jno
and
push
adc
jne
and
mov
jno
cmovo
push
enter
call
mov
cmpb
mov
lock
dec
and
shl
idivb
fcompl
push
xchg
fdivrs
mov
mov
mov
push
movsb
jl
mov
push
fisttpll
fbld
in
rcr
decl
xor
cmp
in
in
pop
and
movsl
aas
jno
inc
push
dec
mov
popa
cmp
xchg
ljmp
mov
jbe
lock
xor
in
sbb
test
lret
das
pusha
stos
sub
aam
hlt
call
jmp
mov
push
icebp
out
sub
stos
push
dec
arpl
add
jnp
add
inc
cmp
je
add
add
xor
add
out
push
icebp
add
std
mov
inc
adc
and
pop
mov
stc
test
sub
adc
mov
fucomip
inc
flds
jl
call
push
jp
sbb
mov
ficompl
xchg
sbb
push
ljmp
push
icebp
test
cmp
jmp
add
inc
mov
jmp
lods
jno
out
and
push
mov
sub
repz
mov
sub
push
mov
scas
inc
cmp
inc
sbb
pop
idiv
mov
and
push
add
push
je
mov
stc
push
add
push
je
lds
or
test
test
je
xchg
sbb
lds
and
add
outsl
lods
insl
or
repnz
call
add
jl
add
jl
sti
rcrb
add
mov
adc
add
dec
or
cmpsb
cmp
xlat
in
add
inc
and
mov
std
or
xchg
shll
or
push
lock
cmpsl
and
xchg
sbb
fcmovne
hlt
call
add
enter
mov
sbb
into
pop
add
xchg
push
sbb
std
or
daa
sbbb
xlat
or
cld
sti
mov
mov
ljmp
add
pop
or
sbb
inc
mov
add
hlt
add
sub
in
lret
add
push
dec
push
negb
push
mov
or
add
fwait
out
pop
out
fistl
add
jmp
ret
out
ret
loopew
sbb
call
add
stos
add
jmp
notb
fnsave
mov
adc
faddl
push
ljmp
adc
out
into
in
in
icebp
add
int3
jnp
jmp
add
push
outsb
dec
int
insb
insb
ss
test
mov
stc
jb
sbb
and
je
push
repnz
test
and
div
jns
insl
repz
stc
jb
int3
enter
jmp
xlat
divl
out
lcall
ja
in
mov
jo
jge
sub
mov
add
addb
add
lock
xor
mov
mov
push
test
fdiv
lcall
ja
mov
lock
sbbl
jmp
xchg
inc
add
inc
push
xor
cmp
sbb
fdivr
incb
test
or
enter
addl
ret
and
out
movsl
cmc
mov
mov
inc
add
xchg
jns
pop
xchg
xchg
xchg
jg
sbb
and
dec
or
xchg
fstps
fsts
adc
or
sbb
fistps
fs
push
fucomip
test
cmpsb
jae
xchg
mov
add
add
enter
ret
sar
jg
mov
or
mov
mov
int
test
cmp
sbb
jmp
out
daa
rorl
sahf
daa
or
lahf
pop
add
dec
mov
dec
sahf
mov
into
std
add
imull
fildl
push
bnd
add
push
repnz
dec
pop
mov
or
fwait
int3
loop
pop
aaa
cwtl
int
cmp
test
mov
ljmp
or
andb
pushf
jg
iret
lret
mov
insb
sbb
add
push
pop
inc
call
adc
or
xchg
mov
jne
call
xchg
push
pop
push
jmp
add
mov
jne
fidivl
ds
add
jae
fldt
cli
xchg
inc
cmpsb
jae
clc
and
push
out
shl
and
jmp
iret
fwait
inc
fidivrs
add
xchg
jmp
push
cltd
orb
and
cld
pushl
in
scas
inc
clc
mov
or
lods
add
add
mov
cmp
inc
adc
movsl
orb
push
add
jmp
push
sub
sbb
clc
jns
cli
repz
jnp
paddd
clc
pop
test
sbb
cmp
in
test
xor
add
mov
sbb
add
je
pop
mov
in
sbbl
sub
push
mov
add
or
sbb
nop
mov
adc
das
adc
xchg
mov
call
out
adc
out
es
mov
jecxz
icebp
xchg
decl
xchg
dec
mov
enter
push
xchg
faddl
jle
mov
push
mov
test
mov
xor
rorl
incl
add
inc
arpl
movsb
std
test
add
jo,pt
aas
push
icebp
outsb
inc
aas
push
or
xor
mov
push
mov
jmp
ficoms
cmp
arpl
iret
sahf
xchg
fisubs
mov
sbbb
jb
cltd
and
inc
jno
jae
fs
addr16
out
pmullw
add
add
lock
adc
xchg
push
add
adc
push
lcall
adc
pop
je
cli
cmp
rolb
addl
adc
jmp
pop
call
test
lcall
xor
jbe
inc
push
mov
insl
notb
jmp
inc
pop
je
lahf
mov
mov
icebp
dec
sbb
aas
sbb
sub
jne
icebp
push
icebp
in
iret
das
sbb
out
mov
lds
jae
jecxz
int
fs
incl
jmp
push
jae
add
mov
iret
pop
cmp
cmp
pushl
push
mov
lock
xor
xor
and
pop
add
loop
aaa
popf
sti
jae
outsb
inc
insb
icebp
push
push
inc
xor
test
in
add
push
scas
insl
mov
call
addb
sarl
jmp
add
popf
sbb
push
jns
jnp
cltd
mov
stc
inc
add
jnp
cli
out
add
cmp
sbb
sbb
add
lahf
or
jae
iret
mov
incl
add
xchg
ret
in
pop
jg
push
push
rcll
push
mov
es
mov
mov
movb
dec
ret
std
call
and
dec
adc
add
call
incl
icebp
call
sub
rcr
ljmp
add
cli
push
lock
pop
jne
xchg
cmp
daa
adc
and
inc
pop
call
mov
mov
ret
fs
jg
push
aad
fmull
mov
mul
lcall
sti
and
call
push
and
mov
mov
or
adc
add
lcall
mov
mov
mov
sbb
out
bound
in
pop
push
jmp
loopne
sbb
insl
fwait
jae,pt
test
pop
je
or
into
stos
aas
pop
and
out
lcall
adc
xchg
mov
push
mov
in
sarl
andl
add
int3
and
fiaddl
jecxz
out
pop
in
mov
test
out
mov
inc
data16
test
std
pop
je
fwait
mov
add
lret
sub
shll
rolb
jmp
loop
mov
sbb
jb
fdivs
imul
hlt
nop
je
test
xchg
idiv
cmc
push
add
add
xlat
sub
outsb
jns
incl
xlat
insb
vmread
jmp
mov
test
jle
pushl
pop
idiv
inc
and
pop
cmp
in
xchg
and
imulb
fsub
hlt
jl
cmp
shrb
push
dec
dec
js
ds
cli
pop
mov
add
xor
add
pop
add
push
jns
xor
in
xchg
cli
push
mov
leave
ja
ds
jl
cli
cld
add
insb
xorb
mov
and
xor
pusha
or
push
mov
ss
std
jle
dec
cli
push
inc
add
dec
xchg
in
call
push
cld
cli
xchg
mov
f2xm1
mov
inc
lahf
jecxz
dec
mov
add
or
lods
xchg
imul
arpl
dec
xchg
and
rcl
sbb
rcl
mov
aad
iret
icebp
out
cmpsl
pushl
shr
loope
or
adc
cld
xchg
loop
xchg
lret
mov
dec
jae
fs
fists
stos
xchg
test
lcall
stos
mov
add
test
xchg
jp
cli
add
out
mov
mov
pop
call
xor
or
pop
out
aam
sti
rcll
or
mov
dec
push
icebp
add
int3
jnp
push
rcl
fists
out
ret
lcall
push
pop
jb
loop
cmp
lock
stc
out
sbb
into
ret
or
add
or
xchg
stc
mov
cmp
jmp
aam
stc
fcoml
add
fstps
mov
ficomps
lock
sbb
testb
in
mov
mov
mov
sub
sbb
lock
push
xor
adc
idiv
aas
adc
cmp
test
pop
xor
stos
xchg
stc
call
cld
decl
stc
pop
add
sub
add
mov
icebp
jle
icebp
xor
decl
cmpb
in
add
inc
repnz
std
mov
out
filds
and
shlb
cli
movsb
fwait
push
adc
xchg
mov
test
push
fwait
xchg
into
mov
lcall
sti
fs
and
mov
or
add
cmp
cli
dec
test
pop
push
mov
xor
nop
cli
sub
insb
push
pop
cld
sbb
stc
mov
inc
test
pop
mov
addl
test
andl
add
andl
ljmp
lock
add
xor
pushf
xchg
cmp
sub
loop
out
add
lods
call
data16
jge
movsb
xchg
cmp
push
push
or
push
add
xor
mov
loopw
jg
ret
inc
dec
outsl
sbb
cmp
push
add
ljmp
and
push
xchg
out
bnd
imul
push
mov
loope
add
stos
or
xchg
rorb
xchg
xchg
sbb
stc
pop
sub
jge
pop
mov
mulb
push
mov
out
and
ficoms
push
cmpsl
adc
or
cld
pop
test
aam
inc
and
push
jae
mov
inc
adc
mov
stc
incb
movsb
ds
dec
std
xor
pop
add
out
push
aad
sbb
bound
xchg
add
cli
adc
mov
sub
inc
loop
mov
addb
rorl
jbe
call
xchg
jge
sahf
in
add
jle
inc
and
push
inc
and
jbe
adc
in
cmc
jne
sbb
test
lock
call
add
scas
mov
test
mov
cmp
hlt
jmp
cmpsl
add
decb
cmp
imul
cmp
aad
gs
push
leave
dec
inc
or
pop
cs
mov
cltd
mov
or
shlb
nop
mov
jb
or
pop
cli
add
inc
clc
rcr
add
cmp
push
mov
add
ficoms
jle
cltd
jbe
outsl
xchg
inc
jo
add
adc
lret
mov
mov
and
or
dec
dec
mov
enter
movups
inc
in
aas
mov
or
jecxz
int
lret
inc
out
or
xchg
xchg
jnp
nop
xchg
cwtl
out
push
stc
sbbb
add
add
in
cmp
mov
lahf
sti
shrb
fcoml
pop
jne
lock
outsb
inc
das
xor
ja
inc
jno
icebp
out
xchg
sbb
test
adc
arpl
aas
icebp
out
sbb
fs
push
popl
mul
add
out
leave
ja
push
sbb
and
out
jecxz
jmp
add
push
cli
mov
push
xor
out
and
add
mov
icebp
lods
icebp
in
mov
inc
dec
jmp
scas
or
xchg
jns
test
mov
xchg
data16
jns
icebp
add
jns
inc
call
aad
std
jmp
xchg
imul
jns
inc
in
jge
aam
ret
lock
push
xor
sar
dec
inc
pusha
xchg
addl
add
add
jne
bnd
cld
add
mov
mov
push
inc
loope
push
add
jb
push
inc
ljmp
add
dec
cld
xor
clc
test
std
or
xor
clc
cmpb
addr16
add
hlt
add
icebp
lret
aam
adc
sub
dec
hlt
icebp
kandnw
fstl
and
sub
add
cmp
insb
pop
aam
add
mov
rcpps
add
inc
sbb
mov
xor
cmp
jns
sarb
in
add
push
stos
jp
aas
lcall
inc
xchg
addr16
insb
inc
lock
push
sub
add
outsb
xlat
xchg
cmp
add
ja
adc
xchg
scas
hlt
ss
orb
and
mov
add
jl
lcall
js
les
sub
outsl
mov
mov
aam
adc
mov
add
mov
cmp
mov
andb
mov
add
cmpsl
cltd
aas
mov
mov
lock
icebp
out
sbb
call
sbb
or
push
xor
inc
imul
cmp
pushf
out
fisubrl
and
dec
popf
add
in
insb
cld
sti
add
cmpsl
sub
das
shrb
outsb
fiaddl
test
xchg
xchg
add
pop
ss
jb
or
xor
cli
rdmsr
mov
jnp
mov
scas
int
jl
push
testb
imul
xchg
xor
and
xchg
pop
icebp
stc
fdivl
pop
inc
jmp
stc
aam
xchg
inc
data16
test
test
test
sbb
add
add
pop
jb
aam
adc
incl
push
insb
cmc
outsb
sahf
clc
push
jae
mov
das
out
inc
and
je
jno
xor
int3
mov
test
call
or
in
xchg
jae
jno
jae
int3
incl
shll
insl
out
add
loopne
mov
mov
jns
jns
test
push
add
mov
out
jns
add
push
cmc
mov
mov
cmpb
ficompl
out
sbb
cld
push
iret
cmp
push
lcall
adc
inc
and
cmp
clc
mov
mov
mov
cmp
or
sahf
std
shl
mov
call
mov
aam
mov
hlt
mov
add
push
popl
pop
fadds
add
cld
fcmove
mov
pop
test
icebp
lods
mov
repnz
cs
push
push
hlt
rorb
rorl
jecxz
mov
mov
data16
out
gs
mov
int3
mov
repnz
xchg
dec
inc
jl
rcrl
repz
dec
insl
push
jp
add
xchg
leave
pusha
jl
orb
lahf
adc
xchg
jo
js
sbb
or
push
icebp
pusha
loope
lret
scas
add
sbb
in
ljmp
daa
cld
mov
push
lret
pop
int3
cmp
movsb
fs
inc
mov
jne
or
xlat
cmp
xchg
sti
mov
add
push
addl
sarl
or
rorl
mov
mov
les
sbb
adc
mov
sar
or
stos
out
call
fs
adc
icebp
add
dec
and
add
jae
mov
jno
inc
xchg
add
jp
clc
add
xor
jecxz
lret
testb
add
idivl
cmp
std
push
test
or
jge
or
dec
es
jb
test
push
jae
or
cli
mov
loope
add
cmc
cmp
subl
outsl
or
jns
inc
adc
scas
or
mov
rolb
pop
mov
push
mov
rcll
add
jl
test
adc
sub
jb
push
adc
and
inc
and
mov
ds
sti
cmpsb
xchg
xorb
call
push
adc
int3
ss
jle
sar
xchg
jb
in
mov
push
xchg
mov
push
pop
pop
pop
pop
push
mov
mov
jo
push
lcall
add
push
ds
push
mov
jmp
jmp
inc
jae
fimuls
xorb
cmpsl
cmpl
popa
push
stos
out
setne
pop
cwtl
rorb
call
inc
lret
sub
testl
jg
dec
xchg
shlb
xchg
inc
pop
cmp
add
add
adc
add
xchg
cmp
add
stc
jno
fidivs
out
js
jg
xchg
sbb
dec
stc
mov
mov
divb
jge
inc
or
cmp
roll
push
testb
iret
repnz
mov
les
ljmp
push
icebp
xchg
les
ss
push
add
push
std
sbb
push
xchg
ret
and
xchg
push
xchg
fiaddl
test
outsl
jno
and
lock
xlat
ja
js
cmp
adc
es
aad
inc
add
xor
jmp
jbe
clc
cmp
inc
adc
add
mov
fadds
cmp
adcl
repz
jle
testl
cmp
mov
add
outsl
icebp
add
jno
add
in
xor
bnd
incb
testl
loopne
je
in
jnp
cmc
add
push
mov
adc
popf
or
ja
push
cwtl
std
or
sub
movsb
push
sti
pop
push
jnp
pop
add
mov
test
inc
pop
repnz
call
cmp
lock
jge
cmp
fidivs
out
rol
adc
std
call
and
or
inc
call
fisubrl
or
repz
or
dec
xchg
jle
stos
or
push
jnp
shl
movsb
push
mov
pop
jnp
cli
in
adc
xchg
icebp
sti
std
pop
mov
add
add
stos
pusha
repnz
push
je
add
xlat
add
out
fnstsw
lock
andb
xchg
sbb
add
testl
out
scas
jne
imul
inc
add
sub
pusha
repnz
push
je
add
pop
add
out
fnstsw
andb
loope
cmpsb
addb
xchg
push
add
test
or
gs
jnp
jno
test
jg
jmp
pop
jnp
sub
mov
out
dec
icebp
add
push
icebp
jge
push
in
mov
icebp
add
jp
or
mov
sahf
pop
inc
or
and
xchg
imul
push
jg
sarb
jmp
fdivrs
movsb
pop
mov
out
add
push
icebp
add
sahf
mov
mov
jmp
jle
xor
mov
ret
add
into
orb
jns
imul
orl
sti
idiv
daa
loope
inc
js
jmp
pop
daa
cmp
push
loope
ret
pop
add
and
cmp
push
addl
mov
or
add
jmp
int
cli
idiv
aaa
loope
inc
push
js
jmp
imul
xor
cmp
repnz
sub
cmp
xchg
push
adcl
add
dec
jns
jg
mov
test
js
cli
in
or
xchg
movsb
neg
ljmp
cmp
xchg
sahf
adcl
add
push
jnp
cmp
shrb
scas
push
fadd
xor
jb
or
aam
cmp
pushf
neg
push
add
adc
mov
xchg
imul
push
mov
mov
bswap
xor
sahf
push
aas
shl
or
jbe
jb
jge
mov
jns
push
xor
add
jg
scas
inc
pop
int
add
lahf
and
test
inc
fimuls
xor
push
in
imul
js
in
mov
pop
jns
inc
dec
jne
pop
jns
data16
ljmp
es
xchg
ja
dec
jo
or
rolb
push
icebp
dec
pop
ficoms
movsb
subps
sbb
mov
xlat
stc
sbb
hlt
in
jmp
mov
in
cmp
inc
sahf
jns
insb
nop
add
in
fsubs
sbb
pop
arpl
adc
jae
roll
cmp
xor
arpl
in
sub
rcl
add
testl
add
xor
sbb
les
add
cmc
add
jmp
lcall
gs
and
insl
inc
and
sbbb
pop
loop
lret
in
adc
orl
jne
push
push
in
add
ljmp
cmp
push
xchg
pop
out
in
xlat
jmp
add
insl
inc
adc
xor
gs
jg
cvttps2pi
jns
ja
add
xchg
ljmp
xorl
hlt
pop
push
movsl
jns
sub
adc
sub
js
push
mov
or
popa
jb
add
jb
addr16
ja
insl
pop
in
bnd
test
push
xorl
ret
leave
addb
add
fwait
jae
rcrb
jae
lods
or
push
mov
or
jns
cli
xchg
mov
xchg
rcll
pop
jae
cmp
call
cli
insb
subb
inc
pop
ja
fistps
out
push
call
push
shll
add
inc
jbe
jns
aad
call
sub
dec
call
cli
js
cmp
js
jne
jnp
add
mov
in
push
pop
insl
mov
leave
js
jns
icebp
out
dec
insl
movsl
jne
js
les
cmp
cltd
mov
jnp
mov
lods
dec
je
or
push
std
flds
fdivrl
in
in
jg
int
stc
jmp
jnp
test
add
jnp
jl
mov
imul
and
sbb
shll
mov
lret
and
mulb
sti
pusha
mov
lods
inc
mov
out
inc
jnp
jo
jecxz
test
cmp
jnp
daa
mov
jge
and
out
jbe
pop
dec
addl
in
test
add
sub
sub
xchg
jecxz
add
mov
mov
ljmp
jo
std
popf
add
mov
clc
dec
xor
jmp
icebp
std
pop
add
pushl
xchg
jmp
jae
or
fisttps
idivl
mov
add
ljmp
mov
add
jns
inc
adc
add
or
std
fldl
mov
mov
ffree
push
insb
push
popl
or
incb
adc
mov
inc
inc
adc
mov
sub
jno
sub
leave
adc
decb
pop
rcrb
cli
add
mov
leave
cmp
or
cli
in
outsb
inc
add
inc
mov
adc
pop
push
into
xchg
std
or
add
cld
rcr
or
mov
mov
mov
mov
fistps
ds
jl
xor
std
mov
mov
add
xchg
out
cld
mov
js
stos
scas
shll
das
cmp
out
cmp
aam
adc
or
push
icebp
out
mov
and
add
mov
rorl
inc
add
in
sbb
pop
in
xchg
cmp
test
call
sbb
testb
inc
in
testb
mov
call
lret
sbb
jno
push
in
jg
jbe
leave
mov
mov
es
call
loopne
addr16
lds
sbb
and
add
push
outsb
sahf
ljmp
mov
orb
jmp
cmpsl
sbb
jae
mov
std
adc
std
out
pushf
clc
mov
or
outsb
clc
jecxz
icebp
test
iret
test
std
sbb
js
jae
popf
jbe
stc
cmp
jmp
add
or
ljmp
sub
stc
incl
add
sub
orb
mov
add
ljmp
inc
add
add
adc
or
out
orl
scas
push
decl
iret
mov
add
sbb
test
or
ljmp
xor
scas
stc
dec
jbe
stc
push
loop
dec
add
mov
negb
xchg
add
add
mov
add
inc
push
mov
pop
into
dec
clc
push
lret
mov
pop
dec
pop
mov
jle
and
call
clc
or
int
mov
cld
std
call
inc
call
enter
mov
mov
stc
mov
xlat
loop
push
sbb
pop
push
mov
jbe
adc
stc
cli
xchg
push
adc
add
add
std
mov
fsubrl
cli
std
push
cli
fdivr
enter
push
jae
mov
cld
or
add
xor
insb
daa
push
add
adc
movsl
ret
jb
cld
je
xchg
insl
mov
std
xlat
lods
lock
outsl
imul
jns
int
mov
lock
aam
out
cld
add
push
pop
add
add
add
out
add
enter
hlt
pop
insl
lahf
std
outsb
cmp
out
pop
rcll
insl
xlat
xor
xchg
cli
out
stos
or
insl
jmp
scas
arpl
icebp
adc
pop
icebp
add
dec
mov
test
mov
add
movsl
or
lahf
shlb
sub
jae
push
inc
push
mov
mul
or
test
call
fs
adc
add
stc
pusha
mov
mov
nop
mov
mov
fiadds
ret
ljmp
mov
or
push
insb
jae
push
xor
ss
std
sbb
or
cmp
icebp
mov
push
ja
rcr
or
ljmp
jo
cld
ljmp
repz
adc
mov
je
popf
mov
stc
incb
stc
fdivl
xor
jne
fidivl
cmpsb
xlat
dec
jno
movntq
pop
cld
mov
mov
push
push
mov
cmc
inc
push
jge
sbb
repnz
jne
insb
scas
orb
cmp
cmp
inc
divb
not
inc
data16
pop
lock
jmp
inc
cli
add
aam
inc
or
jg
inc
and
cld
mov
push
data16
rorl
add
or
stc
mov
cmp
dec
arpl
mov
lret
mov
jp
ficompl
std
call
mov
dec
mov
shl
je
xchg
rcrb
pop
std
cmp
jae
jp
ja
jl
outsl
mov
and
add
cli
jle
cmc
mov
fistpll
push
icebp
and
dec
repnz
or
subb
fsub
repz
stc
punpcklwd
in
sub
loop
pop
je
add
pop
mov
ja
adcb
clc
ret
inc
jae
fidivrs
pop
in
jge
std
pop
mov
jp
je
sub
jl
std
outsb
out
add
jnp
adc
sbb
mov
outsb
out
jnp
jle
or
out
jl
std
jo
call
sbb
inc
shr
add
outsl
mov
test
or
out
arpl
push
inc
push
out
movsl
cld
test
mov
call
fs
sbbl
icebp
add
add
add
das
into
or
sub
jl
aaa
das
xchg
loopne
push
insb
inc
adc
or
xlat
jb
fnstcw
icebp
test
mov
pusha
rolb
inc
add
or
cld
inc
add
out
add
cmp
call
xor
jl
dec
shl
insb
mov
add
add
inc
and
je
cmp
add
lock
loope
rorw
cmc
add
jecxz
leave
lea
lds
add
stos
or
repnz
inc
loopne
fstl
jg
ljmp
divl
cmp
xor
adc
mov
inc
test
scas
cli
gs
mov
add
add
jbe
repz
mov
jmp
aam
inc
cli
data16
push
fistpll
mov
hlt
jne
jae
std
jle
pop
and
inc
jle
xchg
xlat
cmp
adc
mov
or
cwtl
repnz
push
rcrb
cld
mov
sbb
bound
bound
lock
out
test
lret
jg
icebp
call
add
add
test
add
icebp
sbb
jg
lock
into
xor
data16
jecxz
js
inc
jo
shl
add
mov
inc
hlt
out
mov
inc
dec
add
pop
push
out
movups
lods
adc
repnz
adc
test
push
negb
and
lock
pop
sub
mov
jns
and
aad
ret
jnp
test
add
add
insb
je
imul
movsl
add
mov
jb
dec
mov
stc
push
push
je
ja
mov
movsb
dec
pop
mov
push
icebp
test
jb
jmp
pop
push
push
jp
je
das
std
mov
sub
imul
nop
mov
outsl
insb
jae
neg
call
mov
mul
add
push
jo
icebp
jmp
fsub
cmpsl
fldt
add
int
sbb
in
mov
int
test
jge
cli
repz
scas
xlat
testb
je
adc
cmc
jne
jmp
or
cmp
add
imul
jo
testb
push
cmc
mov
xor
incl
jne
jbe
hlt
popf
dec
jmp
call
out
insl
adc
in
pushl
imul
out
ror
jnp
mov
icebp
insl
pusha
mov
adc
xchg
loope
pop
pop
and
mov
xchg
pop
or
add
fs
cld
jecxz
and
popf
and
data16
aam
cmc
push
int3
jge
cli
ds
pop
je
add
aad
pop
mov
push
pop
sub
adc
sti
and
pop
xchg
int3
outsb
in
lahf
sbb
inc
and
icebp
mov
adc
inc
mov
and
pop
add
or
imul
sub
push
test
dec
repnz
adc
icebp
outsb
dec
sub
mov
gs
xor
insl
pop
dec
mov
xor
jae
leave
gs
pusha
data16
xor
jp
bound
or
add
hlt
cltd
fucomi
pusha
pop
stc
mov
xchg
fmull
add
add
ret
add
inc
lret
insb
sbb
cli
mov
sub
add
jle
test
xor
ljmp
sub
mov
adc
adc
movsb
js
roll
insb
inc
int
movsb
je
pop
or
fnstcw
mov
xchg
push
stc
push
lods
and
leave
lods
and
popf
adc
add
add
imul
test
push
fidivrs
stc
pop
arpl
loope
mov
add
imul
inc
cmp
push
ret
int
pushl
mov
test
int3
idiv
adc
movsl
xlat
jmp
mov
addb
mov
jmp
jp
in
rorl
jmp
add
jno
sbb
mov
je
clc
mov
fstp
pushl
insb
xchg
in
ret
push
mov
jbe
xor
pop
sbb
jg
mov
sub
push
ds
je
mov
sti
fidivs
std
xchg
jnp
or
call
into
cwtl
fsubrs
push
iret
and
add
mov
sbb
inc
nop
xor
stos
pop
ss
xor
jg
mov
cli
push
sbb
popa
cli
int3
sti
adc
jge
push
jmp
sbb
sti
pop
je
iret
inc
push
movsb
fucomp
cli
es
repz
pop
stc
iret
mov
mov
fstl
add
lods
add
fldt
enter
clc
add
dec
je
bound
into
mov
xor
push
add
outsb
int
repnz
pop
scas
mov
and
imul
pop
pop
xchg
std
push
fdivs
xlat
out
xchg
fisttps
push
bound
fstpt
sbb
xor
add
lods
daa
adc
daa
add
rcr
clc
mov
std
or
stc
fiadds
add
insb
out
push
into
push
divl
mov
insl
imul
addr16
and
data16
push
cli
adc
js
xchg
sbb
xchg
xchg
in
jle
stc
call
fs
in
push
icebp
icebp
add
cli
dec
out
push
icebp
add
pop
xchg
push
or
push
icebp
test
outsb
sbb
add
es
test
mov
mov
jae
xor
adc
jp
mov
imul
test
pop
addb
leave
cmp
cli
inc
sub
push
test
enter
jns
xor
in
test
enter
ffreep
push
mov
jo
cli
mov
add
mov
inc
cli
jo
or
ja
add
repz
call
push
or
xor
fdivrp
cmp
dec
std
call
fstpl
in
lret
cli
test
test
jl
sbb
data16
push
push
test
xorl
pop
push
jns
xor
jle
add
sub
test
test
add
iret
jle
leave
jno
shlb
addb
test
stos
push
cli
clc
xor
negl
mov
fstpt
add
add
icebp
dec
cmp
add
pop
test
mov
sbbb
adc
xor
leave
inc
jcxz
dec
dec
add
add
add
and
mov
push
push
jmp
sub
inc
cmc
fcomip
xor
addr16
inc
out
arpl
pop
jb
xchg
add
out
xchg
outsb
xor
in
mov
pop
mov
imul
ss
rcr
sub
xchg
and
sub
ds
pop
xchg
cmp
add
pop
cmpsl
sub
pop
aad
xchg
pop
sahf
lea
xchg
xchg
pop
push
test
xchg
pop
das
test
xchg
pop
push
outsb
lea
adc
test
adc
pop
mov
stos
or
pop
data16
or
pop
sbb
pop
je
or
xor
add
add
xor
aam
xor
mov
outsb
xor
add
stc
or
stc
int
xor
scas
insl
xor
push
insl
xor
cmp
stc
outsl
mov
ss
mov
ss
sbb
mov
ss
loopne
ss
out
add
stc
testl
xor
stc
dec
clc
xor
stc
pop
arpl
stc
repnz
pusha
ss
lods
mov
stc
adc
add
cmp
jo
incl
stc
ret
pushl
ret
lcall
ret
call
iret
ret
jmp
sbb
decl
call
test
incl
push
jmp
xchg
mov
lcall
cmpl
push
dec
push
push
add
add
push
pusha
or
pop
dec
add
push
add
arpl
or
cmp
cld
adc
cmp
negb
outsb
icebp
add
adc
and
push
push
add
xor
adc
or
sub
or
sub
or
int3
sbb
mov
push
push
aam
addr16
adc
rcrb
mov
sbb
add
sub
ds
sub
adc
and
fmul
mov
mov
rcll
dec
lds
cmp
popf
shll
shrl
shll
xchg
adc
mov
adc
xor
pop
fldenv
adc
sbb
adc
sbb
pop
dec
sbb
pop
jns
xchg
pop
scas
cmp
add
pop
inc
pop
xchg
pop
inc
aaa
xchg
pop
pop
and
pop
mov
mov
pop
pop
scas
xchg
pop
cmpsl
cmpsb
xchg
pop
loopne
xchg
pop
xchg
movsl
xchg
pop
cltd
popf
xchg
pop
test
xchg
pop
scas
lea
pop
mov
adc
mov
adc
lods
adc
add
xor
pop
icebp
xor
pop
shll
lock
stc
cmp
xor
push
ds
insb
add
ds
cmpl
leave
sub
repz
imul
jmp
stc
imul
mov
inc
dec
insb
push
loopne
mov
mov
imul
leave
mov
idiv
jp
rorb
negb
ljmp
push
adc
in
aaa
push
es
test
xor
popa
jl
push
hlt
dec
call
add
push
dec
std
call
pop
push
popl
cli
pop
pop
mov
cli
cld
mov
mov
xchg
mov
sub
push
push
mov
pop
push
cli
lret
mov
add
mov
stos
xor
aas
push
leave
adc
add
jp
test
dec
jmp
aas
dec
cli
add
inc
out
add
cli
enter
fiadds
sti
cmp
xor
or
jg
adc
xchg
gs
push
sub
inc
jmp
gs
push
dec
add
sub
lcall
mov
lds
out
lret
lods
imul
pusha
mov
push
sti
xchg
dec
in
push
add
mov
outsl
push
mov
lret
iret
pop
xor
jo
insb
fildll
lret
jmp
test
mov
pop
test
inc
xor
add
and
xchg
lods
lods
clc
pusha
fstpt
inc
ljmp
stc
outsb
xchg
mov
pop
stc
push
outsl
mov
xchg
add
mov
and
icebp
aas
mov
push
push
icebp
sub
jmp
add
insl
in
pop
mov
and
push
loope
push
push
mov
add
push
fisttpll
dec
icebp
and
push
ds
mov
cmp
stc
jae
in
add
je
push
mov
add
mov
add
lock
rol
push
mov
jb
dec
call
shl
adc
or
mov
push
mov
mov
sub
or
call
add
incl
shl
sub
cmpb
flds
push
roll
xchg
inc
or
repz
dec
lods
cmpl
lret
push
pop
imulb
leave
sub
lock
data16
jl
adc
sti
pop
and
push
fbld
cli
in
les
dec
xor
repz
std
decl
std
out
iret
ret
les
sti
mov
jl
fiadds
cltd
cmp
repnz
call
mov
sti
add
jl
loop
iret
adc
dec
imul
and
scas
ror
dec
push
pusha
iret
xor
aam
xchg
insl
insl
das
xor
pop
and
xor
in
pop
subl
mov
std
or
or
push
int
adc
push
sar
icebp
aam
loope
repz
jmp
adc
pop
cmp
push
sub
icebp
sub
dec
outsb
pop
add
movaps
dec
cltd
push
ljmp
pop
repnz
jl
je
je
inc
imul
sub
into
push
icebp
add
lock
imul
mov
add
mov
lock
test
push
lea
ficomps
jb
inc
mov
rcrl
fdivr
decb
mov
dec
cmpsl
add
shrl
stc
bound
add
or
xchg
rcll
popf
jb
jae
sub
cli
push
or
mov
loope
pop
movsb
testb
add
sub
sub
decl
xlat
cmp
sub
in
hlt
je
mov
add
sub
inc
adc
jb
int3
jl
leave
mov
inc
xchg
inc
cmp
pop
push
mov
leave
mov
mov
or
imull
add
call
xchg
add
std
or
pop
or
inc
subl
es
out
jle
call
andb
daa
dec
or
add
ret
push
repz
pop
fdivrs
pop
pop
pop
rcr
mov
jae
push
mov
popf
or
rol
sti
adc
insl
mov
adc
xchg
aas
cld
fimuls
jne
cli
fadds
out
rorl
xchg
stos
add
mov
iret
sbb
lods
mov
mov
and
sbb
or
testl
add
into
jge
dec
mov
mov
lret
movsl
jmp
push
std
push
insl
in
lret
fists
mov
push
lret
lss
cli
test
std
cmpsl
cmc
and
leave
and
mov
mov
xchg
inc
repz
aaa
pop
out
push
int3
mov
adc
movsl
dec
dec
insb
daa
pop
xchg
or
add
add
add
dec
xor
push
icebp
add
test
mov
dec
sbb
movsl
pop
in
push
xor
push
icebp
add
jns
or
pop
mov
ret
push
jmp
inc
xor
push
lock
mov
bound
dec
test
pop
sarl
mov
stc
xchg
fwait
jge
mov
mov
dec
jns
push
jg
mov
cwtd
push
sbb
cltd
dec
sub
pushf
push
ret
push
mov
jne
into
inc
mov
sbbl
mov
pop
cmc
incl
push
mov
xchg
sbb
jne
roll
push
jg
push
mov
xor
jne
ret
add
cmpl
xchg
int
add
xchg
into
inc
cld
inc
aam
push
mov
lea
mov
decl
idiv
test
xchg
inc
test
idiv
jg
push
test
add
push
scas
or
push
ret
fdivs
mov
push
sbb
and
jnp
ljmp
sarb
std
jae
sarb
inc
dec
xchg
add
pop
add
mov
sub
mov
push
shll
or
pop
sbb
and
dec
test
out
jle
sbb
add
leave
or
add
cli
hlt
fiaddl
jne
icebp
stos
jp
dec
or
fmuls
pop
cmpsl
dec
inc
dec
jne
dec
repnz
sub
dec
adc
or
add
add
push
ljmp
xchg
arpl
add
dec
aam
jno
out
subb
sub
rep
inc
imul
pop
xlat
cmp
and
int3
roll
jnp
add
icebp
mov
fcomi
outsb
mov
lret
mov
pop
mov
out
test
jp
jg
add
in
dec
mov
or
add
push
int
insb
push
test
push
mov
or
shl
je
mov
cltd
adc
dec
jle
fwait
or
lock
stc
push
or
adc
dec
cmp
out
inc
add
sbb
ret
inc
cmpl
out
sub
adc
adc
mov
daa
jae
jne
movsb
nop
pusha
in
in
stc
daa
negl
xchg
push
leave
test
stc
cmpsl
in
inc
cli
movsl
sbb
jl
sub
leave
in
inc
mov
in
cltd
xor
mov
ret
in
outsb
ljmp
and
mov
dec
adc
mov
addl
dec
pop
sub
inc
pop
mov
aaa
mov
test
add
test
lock
or
xchg
dec
mov
mov
pop
mov
cmc
dec
call
lcall
xchg
cmp
leave
pop
in
or
into
ljmp
jg
pop
daa
jg
push
pop
std
xchg
dec
or
ljmp
jl
push
pop
std
xchg
add
jns
push
pop
std
repnz
pop
std
call
pop
std
jg
dec
std
jae
pop
notrack
or
push
xorb
std
call
add
js
push
icebp
das
rclb
sbb
mov
iret
xor
and
pop
inc
clc
insb
jg
inc
out
xor
stos
add
out
into
pop
outsb
xor
repz
int
fistpl
jl
sti
int
das
pop
arpl
int3
mov
cmpsb
repz
sti
pop
xor
jmp
xor
xor
repz
jl
sub
je
popa
xor
jecxz
inc
push
dec
mov
mov
dec
repz
jb
sbb
sbb
push
inc
aaa
pop
aas
mov
inc
in
add
cli
add
lds
insb
add
xchg
mov
add
push
jno
ret
stc
call
sbb
jmp
fmulp
inc
cli
inc
adc
jnp
dec
mov
inc
cmp
inc
sub
cli
add
adc
mov
pop
jg
lahf
in
add
popf
mov
test
dec
pop
rcl
repnz
clc
inc
stc
jmp
pop
in
add
add
idiv
mov
mov
ljmp
mov
sbb
sbbb
add
out
addl
cli
add
add
and
xor
mov
ja
andl
and
rorl
call
xor
mov
je
add
call
add
add
test
jecxz
mov
icebp
add
call
push
mov
push
xor
cld
cmp
mov
sub
inc
je
rclb
push
loopne
call
xlat
lcall
enter
mov
inc
jecxz
pop
js
ljmp
leave
mov
dec
out
inc
mov
sub
sti
mov
leave
iret
shlb
push
enter
xchg
pop
xchg
xchg
and
mov
test
je
iret
xchg
icebp
sub
push
cs
dec
jns
cmp
inc
fldt
jge
out
test
addb
mov
shll
pop
xlat
or
jg
pop
mov
inc
outsb
xor
cmp
pop
in
jge
mov
add
push
sub
inc
out
lds
cmovs
add
mov
inc
out
adc
inc
out
pop
insl
xor
push
icebp
cmp
imul
icebp
add
int3
aaa
call
lret
xorl
xor
stc
push
icebp
jae
cmp
or
add
xor
or
or
icebp
add
add
rol
cmc
jmp
push
icebp
ljmpw
cmp
xchg
sbb
jbe
push
call
and
push
lcall
leave
cmp
mov
insl
sti
shl
js
jmp
ret
push
dec
mov
stc
hlt
dec
repnz
add
mov
inc
rolb
idiv
aam
js
div
jns
add
inc
xor
mov
je
popa
mov
in
add
mov
adc
push
in
pusha
test
add
push
jno
dec
jmp
outsl
repnz
out
mov
add
jmp
stos
stc
ljmp
test
ja
jmp
popa
test
add
push
insl
mov
lea
cmc
ljmp
loope
sbb
test
repz
rolb
push
aam
je
daa
cmp
sti
insb
inc
jne
push
pop
std
mov
add
cli
push
xchg
add
xchg
add
rcll
sub
or
or
mov
arpl
addl
cmc
ja
cs
enter
cs
iret
ret
dec
cmp
sbb
cs
xor
add
add
pop
sbb
mov
sahf
inc
cli
movsb
ret
push
lret
mov
lods
pop
push
icebp
out
fidivl
or
adc
cmpsl
add
xor
mov
aam
mov
aam
test
xchg
fidivrl
inc
pop
and
out
adc
icebp
ret
jbe
or
xchg
cmp
ret
adc
mov
mov
push
icebp
out
add
xchg
cmpl
js
add
outsb
mov
xchg
mov
add
repz
shl
subb
jmp
pop
inc
add
rcll
cs
ja
or
mov
scas
stc
xchg
nop
insb
pop
sbb
sub
pusha
lea
and
scas
jmp
mov
inc
in
vhsubpd
add
push
iret
sbb
jl
push
mov
inc
push
xlat
ljmp
in
lret
mov
pusha
adc
sub
sub
and
jmp
test
lods
mov
pop
mov
mov
inc
dec
outsl
cli
add
sub
xor
dec
push
cmp
movsb
fcomip
aaa
pop
pop
cmp
cmp
loope
jp
add
popf
cmp
orb
leave
inc
imul
adc
outsb
inc
cmp
mov
rolb
incb
sub
mov
jnp
imul
stc
outsb
jl
popa
xor
mov
dec
inc
in
jmp
fldl
cmp
sub
es
xchg
sub
push
dec
std
add
cmp
rcrb
fs
stc
test
mov
add
xchg
icebp
out
lds
add
sbb
fisubs
std
cli
mov
xor
push
dec
xchg
rcl
and
jns
or
sti
inc
dec
out
inc
repnz
push
or
sub
adc
push
fadds
xchg
add
sbb
inc
push
icebp
out
inc
mov
or
add
xlat
stos
mov
outsb
xchg
pop
lods
mov
mov
addr16
lea
sbb
dec
insb
imul
shlb
fidivrl
repnz
je
fs
in
addr16
xor
loop
lods
mov
and
push
jno
incl
add
fs
push
icebp
out
cmp
sub
outsb
sub
in
pop
cmp
imul
fimuls
call
iret
cld
fdivr
nop
cmp
xlat
pop
lods
stc
push
orb
jb
push
sti
xor
test
mov
push
popf
leave
cmp
test
cmc
and
cmp
dec
shrl
ret
and
add
stc
jo
sbb
jl
test
icebp
add
aad
mov
pop
vsubps
and
sahf
inc
imul
insb
cli
out
addl
addb
or
or
xchg
hlt
pop
xchg
mov
cmp
hlt
popf
mov
xchg
cmp
loopne
mov
cmpl
add
inc
lock
mov
addl
repnz
and
add
repnz
sub
inc
in
push
orb
std
cmpb
jae
addr16
jg
and
jae
iret
enter
jl
jne
shlb
lret
popa
mov
mov
pusha
mov
add
fdivs
push
or
call
and
xchg
mov
mov
lahf
xchg
loope
adc
aas
xchg
cli
xchg
mov
ss
or
inc
sti
xor
ljmp
out
xor
push
bound
pop
add
sub
aad
mov
push
loop
add
and
mov
xor
in
xor
cmp
push
push
cmp
das
lods
pop
popa
ss
scas
cmp
insb
das
lods
cmp
movsb
pop
int
aas
sub
sbb
int
pop
mov
inc
incl
out
cmp
repnz
mov
fidivl
xor
test
movsl
incl
add
pop
or
icebp
add
aas
add
adc
mov
cmpsl
mov
stc
xchg
pop
cmp
sub
pushf
aaa
xchg
lods
lock
in
in
lret
popa
dec
sub
pushl
add
in
filds
in
mov
cs
out
sub
push
cmp
xchg
test
jns
lock
and
jae
add
test
aaa
cli
hlt
push
testl
and
add
sub
add
pop
ljmp
mov
mov
add
mov
mov
gs
xchg
sbb
enter
add
sub
ljmp
lods
push
test
add
adc
add
mov
add
movl
add
add
jp
call
mov
ss
push
add
add
jmp
inc
dec
out
add
push
mov
mov
test
stos
push
mov
mov
xchg
sub
push
jl
sub
decl
scas
js
mov
cs
sub
jae,pn
lret
and
mov
add
dec
mov
js
mov
inc
std
mov
xchg
mov
scas
cs
enter
cmp
mov
push
jge
xchg
xor
je
inc
ljmp
mov
mov
cli
push
push
jp
cmp
addb
loop
dec
fs
es
pop
xor
outsl
cmpsl
add
ljmp
add
jb
fs
push
xor
out
fisubrs
cmp
xor
add
mov
mov
push
sbb
cmpsl
add
mov
sub
pop
push
xor
xor
mov
cltd
xor
cmp
lods
cld
mov
xor
inc
push
jo
adc
inc
inc
repnz
xor
scas
negl
andb
add
mov
aaa
push
insb
aad
not
arpl
shrl
cmp
cli
mov
outsb
add
icebp
mov
adc
adc
or
add
add
dec
or
dec
dec
push
cmp
add
dec
dec
cmp
test
mov
ret
arpl
fdivr
nop
xor
adc
push
inc
inc
stc
ss
jae
add
mov
add
add
insl
add
icebp
add
push
add
in
dec
jne
outsb
dec
clc
sub
repnz
aad
sbb
add
xchg
mov
mov
cmc
pushl
add
daa
add
cli
mov
or
add
push
ss
jmp
mov
test
xchg
add
mov
sahf
dec
push
aad
adc
add
loopne
mov
fcomp
mov
cmpsl
lcall
push
aas
sub
xlat
or
test
mov
sub
sub
add
push
sahf
lock
test
mov
and
sub
clc
sub
adc
mov
push
sub
cld
rorb
mov
sbb
cli
add
in
xchg
fstp
add
int3
mov
pop
mov
mov
mov
dec
sub
cmp
call
lahf
add
fsubrs
cli
xchg
jo
mov
sub
push
ret
jl
addl
xor
sbb
xor
cs
stos
cli
add
cld
cli
sub
push
enter
add
add
in
jns
sbb
add
add
xor
lahf
add
and
xor
sub
xor
jmp
mov
pop
in
insb
in
sub
je
sub
je
jecxz
mov
xor
mov
in
sub
jl
cvtps2pi
pop
inc
aad
aas
aad
das
inc
xchg
cmpsb
ljmp
movsb
add
shld
lods
sub
jb
fsubrl
rolb
add
movsb
xor
lret
out
xor
sub
je
leave
aam
xchg
insb
sub
or
sbb
sub
cmp
ja
mov
adc
out
cmpsb
shll
adc
jmp
je
iret
out
std
cmpsl
xchg
and
cli
jbe
enter
sub
data16
test
cmpb
pop
inc
adc
jge
add
xor
mov
fdivl
pop
cmp
cld
mov
testb
divb
or
mov
gs
loope
mov
and
sub
testl
ja
sub
arpl
imulb
fstpl
je
sldt
out
ja
clc
repnz
clc
ret
roll
add
dec
mov
rorb
lods
pop
push
mov
push
xchg
mov
out
out
mull
ljmp
xlat
and
out
ljmp
sbb
jnp,pt
ret
test
jge
insl
movsl
inc
push
sub
out
cwtl
sub
cmpsb
sbb
add
les
nop
add
jbe
add
sbb
test
jns
ja
mov
xchg
xchg
lcall
scas
jl
ret
lcall
push
icebp
out
and
dec
add
cwtl
out
xchg
ret
dec
adc
dec
ret
push
pop
icebp
leave
xorb
mov
and
pop
inc
add
dec
insb
inc
rcl
jb
xchg
out
add
xor
and
insb
push
mov
mov
pop
into
jb
fstpt
std
mov
ret
xor
sub
out
insl
std
xchg
mov
xchg
out
adcb
int
sub
add
mov
dec
cli
pop
push
add
nop
sub
sub
sub
stc
cltd
sub
mov
add
fs
or
daa
stc
push
cmpsb
hlt
stc
cld
fadds
jmp
clc
xchg
sbb
sti
imulb
call
push
das
jge
std
imul
xor
or
cmp
push
sarl
adc
movsb
inc
jmp
mov
cmpl
movsl
add
movsb
inc
add
pop
decl
fnstenv
add
inc
push
push
in
test
notb
mov
mov
jbe
stc
push
push
mov
cmpl
dec
call
jmp
sub
call
dec
pop
loope
popa
jno
cmp
jno
mov
icebp
jns
add
divb
or
out
inc
adc
jae
pop
or
jge
inc
icebp
jns
add
mov
out
inc
push
adcb
xchg
movsl
cmp
cld
xchg
xor
dec
sbb
icebp
movsb
xchg
cmpb
sbb
je
sub
cli
enter
adc
sbb
xchg
mov
dec
std
mov
xchg
movsl
test
cmp
fildl
push
sbb
jbe
sbbb
sbb
test
add
jg
push
sbb
jg
icebp
icebp
adcb
enter
pop
daa
inc
mov
jno
loopne
repz
ret
not
adc
add
insl
repz
cmc
mov
lods
shll
rcrb
jns
daa
xchg
mov
add
cltd
and
dec
jge
add
out
rclb
pop
sub
jp
std
incl
add
jge
jp
in
into
sub
mov
into
mov
sub
sbb
loop
push
outsb
cmpsl
cmc
rorb
add
pop
dec
in
adc
int3
add
bound
sub
inc
jo
bound
add
rolb
popf
lock
cld
add
jne
test
jecxz
test
or
std
roll
add
cmc
jmp
idiv
mov
jne
jmp
jne
cli
adcb
outsl
xor
sti
test
jne
mov
outsl
mov
jl
ret
enter
shll
or
in
call
lds
mov
push
stos
inc
sbb
int
jl
int3
aas
cmp
int3
divb
repz
add
add
mov
cmc
xor
movsl
idiv
shl
push
mov
jno
pop
and
mov
dec
mov
lock
cmp
repz
icebp
sub
inc
arpl
push
incb
scas
mov
add
rorl
cmpsl
int
je
mov
lea
inc
idiv
push
out
xor
cld
das
mov
add
jg
push
mov
sub
xchg
stos
das
jl
xchg
cmpsl
jmp
sar
int3
xchg
xchg
or
cmpb
andl
mov
or
lods
mov
les
call
aam
push
dec
gs
add
mull
pop
std
xchg
and
add
ja
dec
subb
add
sub
inc
push
mov
icebp
loop
sub
scas
mov
and
sbb
test
movsl
or
pop
das
pop
adc
outsb
adc
out
pop
cmp
aad
mov
shll
cmc
cld
pop
pushf
jae
inc
outsb
mov
push
pushf
clc
in
lcall
dec
cmp
sub
out
out
add
in
loope
pop
fstps
mov
sahf
fidivrl
sub
and
jnp
lods
dec
or
jmp
add
inc
push
sbb
pop
pushl
aad
jne
sarl
test
insl
stc
xor
dec
clc
test
push
icebp
add
in
mov
mov
sub
mov
cli
mov
daa
jae
add
outsl
sti
sti
data16
shr
cld
call
and
mov
stc
and
jmp
push
sub
jg
dec
pop
jb
clc
adc
and
mov
cmp
or
insb
flds
sub
cmpl
dec
std
add
hlt
std
imul
cli
out
add
lods
jbe
adc
add
push
test
lock
fisttpll
jae
pop
notb
and
stc
inc
mov
sub
pop
dec
incl
je
add
xor
sub
mov
adc
addb
jp
add
notb
push
xchg
inc
or
in
out
cwtl
pop
cli
fisubl
inc
inc
adc
es
add
rol
sbb
jg
test
enter
mov
testl
test
lahf
cmp
cltd
ficomps
cli
lret
xchg
pop
xchg
shlb
push
jo
jge
mov
add
mov
push
shlb
pop
xchg
dec
or
icebp
jo
dec
pushf
pop
sub
add
outsb
adc
stos
or
inc
icebp
xchg
mov
outsb
add
lea
fs
stos
ret
mov
repnz
xor
out
xchg
adc
cmp
sub
jbe
adc
adc
fiaddl
test
out
mov
cmc
std
repz
push
xor
insl
jo
push
icebp
pop
lds
add
lods
adc
les
mov
add
push
idivb
push
icebp
add
mov
nop
jmp
push
jmp
outsb
push
icebp
add
jge
add
nop
add
jl
adc
cmpsb
sub
rorb
jge
das
lahf
mov
jo
inc
jge
push
mov
aaa
sub
inc
cmpsb
out
mov
dec
sbb
stc
int
clc
cmp
add
hlt
test
clc
call
dec
outsb
dec
jne
insl
dec
pop
rcrb
dec
fidivl
push
push
in
test
testb
divb
mov
call
mov
jmp
add
aaa
cmc
add
jl
sub
jns
and
or
jne
outsb
add
inc
popa
jmp
ret
incl
add
test
push
sbb
jne
cld
je
nop
cmc
dec
push
loop
mov
xor
idiv
scas
add
sub
div
lods
repnz
add
cld
adc
push
sbb
ljmp
cli
insb
mov
add
testl
adc
inc
aas
cmpb
push
or
pop
add
lahf
push
xor
sahf
fdiv
adc
xchg
xor
mov
xor
sub
cmpb
adc
add
and
adc
dec
or
sub
aam
xchg
adc
movsb
icebp
cwtd
mov
jnp
add
mov
pop
mov
sbb
or
add
je
lods
daa
cmp
mov
sbb
inc
test
adc
xor
icebp
xchg
mov
jns
sub
pop
hlt
in
mov
pop
clc
in
les
jmp
lods
push
aam
mov
sbb
sbb
push
iret
adc
test
jp
mov
add
add
sbb
imul
or
jo
dec
dec
mov
cli
ds
sbb
je
xchg
bound
xchg
sbb
jge
cmp
dec
jl
mov
cli
mul
jae
push
and
sub
pushf
in
cmp
fcomip
mov
in
fisubl
out
push
push
icebp
add
add
xchg
shrl
mov
xlat
mov
lock
jmp
dec
push
imul
inc
push
mov
loope
cli
div
cmp
add
push
dec
push
gs
jmp
cmp
out
inc
call
cmp
inc
cmp
and
cmp
add
cli
insb
inc
or
add
lock
xchg
xor
xor
cmc
sub
push
sbb
xchg
sti
es
out
addb
cmpsl
stc
notb
jns
add
pop
cmp
nop
aas
push
fwait
mov
pop
cld
pop
jae
lret
lahf
sbb
dec
mov
dec
ljmp
sbb
sti
shll
loop
decl
gs
mov
movsl
sti
ljmp
mov
and
xchg
sbb
aas
adc
mov
fsubrs
xor
or
movsl
dec
or
icebp
mov
pop
pop
cmp
ret
lods
sbb
loopne
or
lcall
push
cld
aam
mov
sbb
aaa
addr16
addb
jl
sbb
shll
xchg
stos
inc
icebp
out
mov
cmc
out
push
push
cld
aas
inc
mov
sbbb
or
pushf
ret
jecxz
icebp
out
xchg
cld
ret
cld
sbb
xor
cld
pop
inc
mov
push
pusha
aad
push
inc
pop
aam
aam
add
mov
cmc
rcrb
je
add
pushf
adc
cmp
loope
sarb
lret
fcoms
sub
aad
fucomp
inc
pop
stc
dec
aam
cmp
xchg
cli
ds
cli
xchg
pop
shr
sbb
insb
hlt
aam
mov
loopne
rcrl
adc
imul
icebp
sub
je
lret
std
stos
int3
ljmpw
add
repz
add
notb
aad
enter
addl
insl
aaa
cltd
std
test
pop
aaa
addb
add
jb
add
or
adc
in
push
mov
adc
icebp
jo
testb
imul
js
sbb
mov
test
testb
xor
and
fs
call
mov
test
add
lahf
insl
call
push
jno
push
push
jmp
fimull
add
aas
lea
sti
add
jle
aas
push
xchg
mov
dec
sbb
jle
add
hlt
sbb
pop
sub
dec
and
in
cld
adc
mov
jl
insl
or
pop
add
dec
jp
out
scas
lret
out
add
adc
or
stos
xchg
pop
stos
sbb
push
or
gs
pop
cmpsl
add
pop
mov
or
icebp
push
xchg
or
adc
popf
out
int3
xchg
push
cli
lea
test
xor
leave
pushf
jecxz
leave
cld
ret
idivb
inc
inc
repz
add
push
mov
andl
out
sbb
add
shlb
imul
push
push
mov
mov
mov
fwait
push
push
out
dec
pushf
fists
pop
cmc
ret
cmp
test
cwtl
mov
rorl
dec
add
stos
dec
xchg
add
jmp
test
xor
outsl
fsub
sbb
icebp
push
sbb
aad
pusha
add
pop
faddp
xor
mov
stc
pop
pop
sar
cmpsl
sbb
loope
aad
insb
adc
xor
cmp
pop
rcll
add
test
cmp
test
inc
std
adc
adc
mov
sbb
ljmp
push
sar
test
outsl
or
insl
pop
add
in
adc
stc
xor
pop
mov
rorl
add
lock
push
xor
add
push
adc
stc
ljmp
xor
inc
sti
stc
mov
add
ret
std
or
xor
addr16
lahf
cmp
mov
jp
mov
call
jmp
add
mov
dec
lea
add
divb
clc
lods
jp
cld
je
push
cmpb
or
add
std
call
or
push
xchg
or
shrb
xor
xchg
orl
pop
push
fimull
adc
pop
mov
jmp
cmpsl
cmp
add
mov
test
addr16
std
incl
add
adc
or
fdivl
cmp
cld
inc
jns
ja
dec
std
addr16
icebp
jne
sub
jecxz
push
icebp
fs
and
or
sub
rclb
or
incl
data16
jmp
jmp
lret
popf
repnz
int3
adc
leave
cld
cmc
jl
fs
aas
loop
subl
jbe
xor
push
popa
call
cwtl
imul
in
xlat
sub
jmp
pop
add
push
icebp
mov
inc
jne
add
add
push
mov
sub
lock
out
out
sbb
xchg
clc
mov
nop
popf
sub
pop
ret
sarb
mov
add
push
sub
clc
mov
sti
push
adc
adc
push
mov
push
je
out
push
out
and
pop
pop
ret
adc
out
add
jno
mov
icebp
add
stos
xor
mov
add
idiv
mov
js
adc
cmc
add
add
sbb
mov
cli
jb
jle
mov
in
sub
add
daa
mov
inc
dec
lea
or
add
cmc
js
je
out
and
repnz
lcall
call
rorl
mov
dec
call
idivl
adc
std
incl
dec
or
add
pop
sub
mov
bound
rcrl
std
jl
icebp
testl
and
xchg
sbb
mov
adc
jmp
and
mov
cli
push
push
ds
enter
pop
xchg
add
jbe
call
sarl
adc
arpl
or
mov
or
xchg
ljmp
add
mov
sbb
jnp
pop
xchg
imul
daa
xchg
inc
dec
imul
in
xor
test
cmp
lock
movzwl
pop
mov
jecxz
push
je
cld
shrb
add
movsb
ljmp
cmc
pop
mov
jl
or
xor
ss
dec
lods
inc
mov
fwait
add
mov
out
mov
push
mov
sahf
dec
push
push
clc
sub
out
push
push
mov
or
xor
std
xchg
xchg
add
xchg
or
es
stc
jmp
xchg
or
gs
subb
rclb
ds
mov
inc
jmp
pop
or
mov
push
or
add
stc
push
rorl
repz
adc
add
dec
lock
dec
in
pop
sar
jae
dec
shr
movb
aaa
outsl
mov
rcrb
cmpsb
stos
mov
repnz
and
push
jb
icebp
shr
jnp
jmp
jg
cs
push
in
and
cld
cli
out
inc
push
or
je
outsb
inc
push
call
push
js
lea
fdivl
lcall
add
jae
clc
test
fisttpl
mov
inc
push
xor
rcl
inc
and
mov
ljmp
inc
ljmp
inc
mov
sbb
mov
call
cmpl
jnp
mov
scas
xchg
inc
jl
jnp
into
pop
nop
jbe
jb
sbb
add
dec
aaa
incb
popa
lret
daa
ficompl
das
lods
popf
inc
je
jg
or
mov
dec
ficoms
dec
mov
loop
lea
jecxz
out
jecxz
or
xchg
add
push
je
inc
das
xor
ficoms
sub
lret
jmp
out
cli
int3
ret
sahf
mov
fsub
lss
cli
int
pop
mov
lock
add
add
mov
out
add
sbb
dec
sbb
xchg
push
sbb
mov
and
in
xchg
push
js
jl
sbb
mov
test
fidivrl
or
inc
mov
in
inc
test
mov
lods
lret
out
xor
sbb
sbb
add
pop
js
fbld
stos
filds
jge
insl
cmc
aas
sbb
or
pop
add
flds
xor
leave
outsb
hlt
adc
icebp
add
push
jno
aad
cmpsb
and
push
in
cmc
nop
or
dec
or
xchg
mov
bnd
dec
xor
jmp
outsl
or
mov
jp
push
sbb
and
pop
test
push
icebp
sbbb
mov
call
loope
stc
hlt
int3
stc
inc
jmp
add
imul
add
sti
xchg
add
push
jno
fstl
hlt
aad
or
out
stc
ss
mov
dec
add
push
mov
sub
xchg
cmp
push
ss
inc
shrb
cmp
jne
ss
popf
add
addr16
push
dec
call
loope
xor
sub
add
xchg
loop
xchg
cmp
jmp
and
cmp
decl
and
clc
in
out
divb
push
cmp
jne
and
call
mov
in
adc
sub
xchg
push
sbb
sbbl
xor
out
les
adcl
jnp
cli
dec
pop
nop
or
stos
std
cli
add
data16
push
test
pop
or
xchg
inc
fdivrs
jae
dec
stos
push
and
mov
dec
or
xchg
js
or
leave
jae
add
or
adcl
aas
jns
stos
gs
ljmp
xor
ss
inc
mov
sahf
dec
add
add
mov
icebp
insb
inc
and
mov
mov
test
mov
cld
loope
add
test
out
test
cmp
or
movsl
jnp
add
aad
outsb
adc
hlt
jecxz
insl
icebp
lcall
ret
xor
jecxz
sbb
jp
loope
sar
sub
jne
fists
add
mulb
test
mov
cmc
sub
fimull
test
test
cmc
ja
hlt
xor
xlat
jmp
xor
cmpsl
cld
xor
jmp
sbb
stc
jle
lds
sub
clc
mov
jge
jo
add
pop
leave
roll
int
clc
shrl
cmp
xor
add
aaa
in
das
push
insl
rcrb
or
xlat
mov
bound
fnsave
inc
jnp
mov
mov
mov
push
push
xor
push
add
mov
divb
ljmp
add
inc
stos
js
je
cmp
arpl
scas
add
lods
add
popf
dec
adc
sub
mov
add
pop
cmp
add
or
and
stc
lock
jo
stos
add
leave
jo
inc
cmp
adc
mov
inc
add
sbb
ret
testl
push
mov
fstl
fiaddl
bnd
inc
push
ja
fstl
sbb
popf
mov
dec
adc
add
add
adc
sahf
nop
pop
fiaddl
mov
adc
mov
in
sbb
popf
and
push
inc
push
ja
in
sbb
pushf
subl
inc
push
ja
in
icebp
out
outsl
inc
push
push
negl
xchg
icebp
inc
test
scas
out
fsubl
inc
push
push
sub
add
adc
xchg
mov
inc
lret
inc
push
push
sti
push
adc
xchg
mov
out
iret
fsubl
add
and
pop
adc
inc
jecxz
scas
out
add
daa
add
add
pop
adc
xchg
xor
cmpsl
add
loope
inc
push
push
iret
pop
xchg
icebp
xchg
xor
adc
push
xor
icebp
lahf
mov
add
pop
mov
dec
nop
push
cmp
test
icebp
lahf
movsl
inc
mov
dec
jo
cmp
sub
jo
adc
lahf
pop
pop
mov
mov
push
cmp
sub
nop
les
icebp
lahf
jmp
scas
push
cmp
sub
mov
adc
lahf
mov
add
push
cmp
test
nop
icebp
lahf
dec
add
pop
mov
mov
push
cmp
adc
in
fwait
lock
scas
add
cltd
in
fiadds
dec
rclb
fwait
adc
mov
cltd
int
inc
ljmp
xor
inc
add
lods
fiadds
dec
int3
adc
in
fwait
push
mov
inc
add
fiadds
dec
or
cmp
fwait
jo
scas
add
add
outsb
call
fiadds
dec
push
adc
int3
scas
add
fsts
push
or
jecxz
ds
add
inc
push
imul
arpl
pushf
and
add
stos
fucom
nop
or
sbb
fstl
lret
add
rcrb
stc
nop
mov
push
inc
add
push
mov
push
stc
test
push
popf
push
outsl
aas
add
add
mov
jecxz
push
ja
push
add
and
adc
cld
sarb
icebp
mov
sbbl
add
daa
mov
inc
push
push
cmpsl
in
icebp
aas
lahf
pop
add
mov
jne
js
add
dec
repnz
mov
add
cmp
mov
cld
add
and
add
add
sub
inc
push
or
pushl
mov
fwait
cmpsb
xor
mov
mov
in
pusha
inc
inc
outsb
and
sub
lds
cmc
call
add
icebp
imul
push
adc
add
in
test
cmp
add
push
add
insb
out
or
mov
add
jle
add
lret
mov
es
mov
xchg
push
mov
inc
jmp
testb
pop
nop
icebp
mov
pop
popa
xchg
add
xchg
incl
clc
adc
mov
jo
jmp
mov
faddp
mov
jno
inc
xor
push
and
dec
mov
jbe
and
add
cmp
xor
daa
push
call
call
mov
cld
testl
or
jno
jne
aad
hlt
sub
icebp
addl
pusha
idiv
lret
in
mov
fnstsw
je
mov
lea
push
lea
call
test
lea
push
push
cmp
incb
add
push
push
push
addr16
out
imul
dec
stc
inc
in
push
inc
push
repnz
xchg
jp
jge
pop
dec
stc
data16
inc
push
xchg
call
jl
int3
mov
sti
add
rcr
testb
or
mov
ret
std
testb
lret
int3
nop
cmp
add
xor
lret
or
cli
test
test
add
dec
cmpl
xchg
lock
clc
pop
aad
push
jp
data16
jmp
cld
cmp
sar
push
into
xor
push
dec
and
rorb
lds
data16
jae
in
sub
or
jae
clc
sbb
gs
stos
test
popa
into
xor
lea
add
out
push
cld
roll
push
icebp
call
icebp
movsb
repz
push
outsb
jmp
in
and
js
inc
push
mov
push
add
test
cmp
jge
xchg
inc
xor
bnd
insb
test
push
bound
ss
clc
sub
sbb
dec
int3
push
icebp
add
pop
jmp
jns
lret
jno
mov
aad
idivl
cli
testl
stc
pushf
push
jae
jb
or
jmp
or
xchg
add
nop
icebp
subl
repnz
nop
cmp
stc
dec
scas
cld
jb
loope
sub
je
mov
verw
sbbb
stos
pop
sbb
or
pop
mov
xor
mov
xor
add
cmp
pop
rcr
pop
or
push
sub
or
push
test
shll
add
push
jp
movq
cli
add
fstpl
or
mull
shl
push
xor
add
inc
add
mov
fwait
jge
push
orl
cmp
push
mov
add
rcr
clc
add
sbb
push
js
das
rcrb
mov
jg
loope
push
or
mov
outsl
clc
stc
push
xlat
insb
adcb
gs
xchg
test
xchg
repnz
push
push
xchg
cmp
mov
push
adc
aad
xchg
or
shr
bnd
test
push
add
imul
push
pop
add
stc
les
cmpsl
lret
cmc
jmp
fs
push
mov
sbb
xor
pop
and
cmp
jnp
idivl
lahf
jg
jge
cmc
loopne
xchg
sub
adc
insb
ffreep
adc
rcr
outsl
push
data16
stos
pop
faddl
mov
push
orl
loop
outsl
add
dec
lahf
dec
fs
cmc
xor
sub
subb
push
mov
notl
outsl
push
clc
repz
xlat
add
insb
add
aad
xchg
mov
mov
insl
ret
jecxz
fistl
icebp
xchg
jae
out
push
add
push
cmpsb
push
je
inc
mov
sbbl
icebp
test
add
mov
and
xchg
aad
fsubl
cmp
push
pop
insl
sarl
outsl
inc
cmp
jp
jno
repnz
call
insb
sarl
fdivrs
jne
xchg
mov
pusha
inc
add
add
mov
jnp
lea
incl
divl
add
dec
call
jmp
hlt
push
push
in
dec
push
int
jge
push
sub
adc
jbe
ja
hlt
lahf
icebp
decb
push
jmp
adc
sub
cmp
jne
add
ljmp
inc
imul
push
push
fbstp
fdivrl
adc
sbb
movl
add
lcall
aaa
jg
das
pop
push
pop
cmp
jg
sub
sti
push
stos
xor
push
stos
aad
pop
sti
jbe
adc
aas
dec
movsb
jmp
jecxz
daa
mov
pop
rcr
fcompl
addr16
andl
cwtl
js
mov
loope
adc
fimuls
dec
dec
push
and
shll
fdiv
and
test
push
mov
push
leave
lea
movsl
sbb
push
push
stos
outsl
xchg
mov
fisttpll
adc
icebp
and
test
sbb
jle
pop
popa
xor
adc
arpl
pop
idivl
pop
pop
idivl
jnp
add
xchg
insl
adc
psubsb
mov
shlb
fistps
fldt
push
dec
inc
pop
in
mov
xchg
xor
scas
cmp
lds
cmp
adc
push
and
pusha
notb
in
cmpb
sbb
adcb
adc
inc
mov
add
into
dec
sahf
xor
push
fdivr
scas
popa
test
add
in
or
mov
ljmp
jmp
cmp
inc
fldt
stos
out
jnp
push
je
in
add
call
rcr
test
adc
cmpsb
insb
les
jge
fiadds
inc
jne
icebp
xor
add
adc
add
add
jmp
push
adc
daa
sbb
mull
inc
add
push
add
das
repnz
imul
inc
fimuls
je
mov
out
shrb
push
push
into
test
cmc
hlt
ret
test
jmp
into
stc
xchg
adc
add
add
mov
cmc
bnd
add
mov
cmc
lods
or
jo,pt
inc
push
test
stc
mov
cmp
addr16
ljmp
push
lods
std
mov
pop
test
pop
fdivs
add
movsl
stos
lret
push
in
mov
push
jns
out
sub
sbb
sbb
push
add
or
xchg
adc
sub
ljmp
mov
fs
lock
and
jne
lret
adc
icebp
mov
aas
push
insl
jg
out
xlat
in
or
and
add
sbb
mov
add
out
adc
push
lock
dec
dec
xor
xchg
nop
jge
add
dec
inc
ja
ja
add
dec
inc
mov
jl
cmpl
je
push
es
push
je
mov
jbe
xor
push
cli
jmp
clc
insb
movsb
mov
push
out
cli
fidivrs
out
divl
push
xor
sbb
mov
pop
push
icebp
add
ljmp
adc
test
add
inc
xchg
inc
imul
out
push
cmp
dec
stc
mov
adc
jp
jg
into
sbb
add
repz
jae
stc
lods
add
cli
and
cmp
repnz
outsl
aaa
in
push
jno
stc
push
xor
xor
test
adcl
out
ret
add
lods
jbe
add
fdivr
lcall
jno
xchg
jmp
shll
cwtl
xchg
push
out
outsl
mov
push
ret
mov
jp,pn
repz
stc
mov
outsl
add
ret
pusha
in
stc
add
add
push
mov
ja
stc
or
dec
call
pop
jno
mov
add
push
in
push
addb
inc
fmull
add
jecxz
in
stc
and
hlt
mov
out
out
loope
stc
movsb
dec
icebp
stc
inc
or
inc
push
push
sub
into
jle
test
jmp
inc
lret
inc
add
sbb
out
icebp
jmp
jmp
jmp
xchg
mov
pop
filds
inc
dec
fildl
add
sub
jle
xchg
sbb
dec
push
jnp
ljmp
call
inc
sbb
in
daa
adcb
clc
push
enter
mov
ljmp
popf
ljmp
xchg
mov
sbb
pop
stc
xchg
in
cmp
jle
and
in
mov
jmp
jns
clc
shll
ficomps
add
mov
scas
jne
movsl
add
push
insb
mov
divl
inc
push
sbb
mov
xchg
cwtl
out
jecxz
call
rol
in
test
sub
out
push
ljmp
fs
stc
lea
insl
scas
outsb
lock
pop
pusha
sub
out
out
mov
xor
insb
add
adc
inc
clc
mov
ja
add
cli
jmp
jne
adc
mov
ds
out
in
inc
push
aad
cs
push
and
inc
xlat
insl
or
and
mov
imul
out
pushl
fsqrt
test
jmp
je
stc
scas
arpl
add
aas
out
call
test
push
fsqrt
push
mov
cli
xor
cmp
call
lahf
popw
inc
push
fcomps
jl
mov
pop
jmp
mov
inc
push
mov
int3
pop
xchg
jp
push
and
cmp
inc
dec
jp
cmp
call
ficoms
and
aad
jl
loopne
adc
inc
addr16
cmp
add
mov
xor
stc
mov
ffreep
jp
dec
cmp
jns
push
aad
cli
jl
jmp
das
sbbb
xchg
mov
mov
fistpll
mov
lock
inc
jecxz
jae
and
jg
push
imul
jp
stos
test
hlt
ret
cli
ret
icebp
ja
jmp
jmp
xchg
out
inc
add
add
push
icebp
imul
push
jl
fwait
aas
xor
js
stc
pusha
out
inc
adcb
out
call
ds
inc
addb
out
call
pop
out
test
add
pop
js
or
in
inc
sbbb
imulb
in
out
jnp
icebp
jns
clc
cmp
mov
mov
in
add
add
std
mov
jmp
push
std
jge
in
clc
mov
sub
test
and
cmp
das
add
ss
fcoms
icebp
add
negb
js
test
xchg
mov
lds
imul
sbb
mov
pop
outsb
inc
stc
shrl
add
test
add
es
inc
mov
or
inc
dec
call
jnp
add
jbe
or
jmp
add
inc
or
test
sahf
push
or
cmp
add
std
data16
sub
push
mov
out
call
and
daa
imul
cli
pop
add
cmpsb
out
jne
adc
arpl
cmp
popl
push
fadds
dec
xchg
lods
cli
mov
fcompl
sbb
fstps
out
test
add
or
push
add
out
xchg
or
iret
rclb
ds
push
mov
and
arpl
andl
xchg
add
push
aas
cmp
pop
pop
or
xchg
and
xchg
sub
cld
sub
sbb
lea
fmull
add
icebp
fcmovb
dec
out
adc
mov
lret
ljmp
shl
inc
in
jmp
loop
inc
lods
pop
push
mov
iret
xchg
mov
dec
push
ds
ds
pop
loop
in
cli
ret
cli
mov
lret
add
int3
cs
push
cmp
aaa
cmp
cs
js
add
xor
xchg
imulb
and
xlat
mov
cmp
call
mov
mov
fucomi
pop
call
sahf
and
icebp
add
and
fisttps
or
dec
les
pushf
mov
sub
int
push
lcall
fmuls
rorb
bound
jo
fidivs
gs
adc
imull
push
push
push
jb
sub
or
daa
aas
push
jmp
xor
push
mov
dec
push
insb
arpl
out
and
push
loop
add
cmp
sub
divl
sub
arpl
add
add
add
mov
cmp
sub
idivl
jns
std
sub
divl
push
arpl
test
clc
add
out
jg
add
pop
je
xor
mov
pop
cmp
mov
cli
add
jle
pop
je
mov
out
add
cmp
jle
loop
dec
pop
adc
jg
ret
sldt
push
orb
pop
les
fwait
dec
fidivl
pop
dec
enter
adc
adc
sbb
lods
loop
addl
mov
push
fcomps
xchg
push
dec
cltd
sbb
insl
fcoms
inc
test
pop
xchg
fmuls
fmuls
adc
mov
int3
rclb
mov
je
add
add
mov
in
or
dec
push
int3
cli
adc
mov
push
jbe
pop
inc
mov
data16
pop
into
add
add
jbe
adc
imul
inc
in
bound
adc
jmp
push
inc
add
push
icebp
jmp
mov
inc
icebp
jmp
ret
fdivrs
add
icebp
adc
out
add
add
in
stos
in
add
icebp
adc
es
add
fbld
mov
mov
xchg
leave
ljmp
repnz
ret
inc
icebp
jmp
inc
fisubrs
push
pop
fsubs
mov
subl
inc
shrb
clc
inc
push
icebp
jae
iret
xor
bound
bound
jb
leave
adc
popf
fimull
aam
add
add
push
loopne
leave
sub
or
mov
dec
icebp
add
int
add
rcrl
push
shll
mov
jecxz
lret
jbe
icebp
push
mov
jmp
scas
imul
mov
or
push
icebp
mov
pop
popa
jle
test
xor
sbb
cli
mov
outsl
adc
inc
mov
inc
sub
movsb
sub
add
jmp
add
cmp
jbe
jge
cli
test
sti
cmc
rclb
rcl
inc
push
lret
mov
stos
repz
into
push
jg
push
int
sti
popf
mov
adc
lea
decl
sbb
jle
js,pn
je
mov
mov
repz
push
enter
addb
xchg
arpl
mov
enter
adc
adc
imul
cs
fmuls
rclb
mov
call
fsub
adc
jp
hlt
pop
inc
pop
les
or
test
insb
mov
mov
mov
dec
arpl
push
mov
add
mov
dec
push
enter
push
sbb
add
mov
xchg
pop
inc
ficoms
hlt
sub
pop
gs
jg
fucomi
jmp
loope
mov
enter
enter
enter
mov
inc
mov
pusha
jmp
ljmp
sbb
add
icebp
lcall
fisttpll
adc
add
jne
push
out
gs
fucomp
addb
xchg
in
gs
jge
ljmp
and
out
imul
bound
in
add
pop
ds
push
ja
sub
das
dec
bswap
cmc
inc
pop
cmc
jp
lcall
test
lds
dec
bound
xor
pop
jo
xor
test
mov
jne
adcb
add
clc
jmp
pusha
aas
jmp
push
jmp
ja
push
ljmp
into
daa
gs
es
jno
loope
psubsw
aas
add
outsb
mov
bswap
test
mov
and
rcr
clc
inc
ja
push
cmp
and
mov
add
mov
cmc
adcl
cwtl
add
out
out
add
cli
out
ja
xchg
mov
idiv
mov
hlt
or
mov
hlt
or
movsl
xorl
jnp
orl
arpl
add
shrb
xchg
xorb
pop
or
dec
fildl
ror
add
mov
add
cs
ficoml
pop
jle
xchg
pop
cmp
adc
mov
dec
lock
dec
inc
and
sbb
xor
mov
aam
sbb
sub
cmp
enter
add
mov
dec
xor
add
push
enter
inc
add
push
leave
inc
insb
enter
jbe
inc
mov
cmp
add
add
lock
add
xor
mov
ljmp
xchg
inc
jno
mov
xor
imul
push
out
adc
jae
mov
ljmp
daa
jae
mov
ljmp
fldenv
dec
lock
movsb
inc
icebp
jmp
add
jb
add
icebp
jb
xlat
add
add
je
jo
icebp
jmp
add
add
nop
rolb
push
ljmp
leave
loop
inc
jmp
clc
out
in
cmpsb
not
jge
inc
sub
leave
cs
pop
iret
add
adc
cmp
addb
aad
add
fnstenv
bound
mov
xchg
test
clc
jbe
jmp
lock
pop
insb
sbb
xor
sub
bound
inc
mov
add
rcr
add
push
icebp
subl
add
add
mov
popf
insl
inc
add
add
push
xchg
mov
push
in
xor
hlt
jge
push
push
xorl
inc
clc
lea
xor
sbb
dec
lea
pop
ret
mov
hlt
add
push
pop
cmpsl
mov
subl
divl
mov
add
sub
dec
add
push
jne
cli
push
pop
and
add
es
cli
decl
pop
mov
cmp
cmc
enter
leave
int3
lahf
add
mov
and
lcall
push
je,pt
shl
push
leave
push
and
xchg
in
pop
add
dec
mov
test
dec
leave
add
mov
enter
lret
into
mov
add
inc
mov
test
arpl
insb
fdivrs
cmp
sqrtps
ret
sbb
pop
jmp
test
sub
mov
arpl
adc
add
in
mov
add
add
sub
cmovg
decl
adc
aas
pop
xchg
push
ljmp
dec
popa
push
mov
stos
pop
lea
jo
push
icebp
jmp
pusha
es
add
or
ljmp
leave
bound
push
icebp
push
pop
push
in
cmp
push
push
pop
jb
pop
inc
add
bound
sub
add
and
jmp
dec
outsb
ja
sbb
roll
imul
clc
jmp
leave
dec
add
push
push
mov
repz
sub
sti
imul
fsubrl
insl
inc
xor
mov
incl
jmp
mov
stos
mov
incl
jmp
pushf
ja
notl
mov
incl
jmp
out
jmp
clc
jmp
add
push
aam
mov
aam
out
adcl
add
lock
stos
lock
jne
add
xor
idiv
stos
dec
cs
mov
out
mov
stos
cmc
inc
add
or
gs
adc
add
inc
orl
popa
adc
cmp
mov
repz
mov
jl
or
add
push
sub
out
push
je
lods
sti
mov
inc
add
and
pop
push
xlat
or
push
dec
pop
push
dec
xor
sub
mov
lcall
test
test
fistpl
test
mov
jne
sbb
inc
cmc
push
or
enter
lret
inc
js
jbe
pop
add
out
inc
inc
or
dec
insb
adc
push
add
add
xchg
sub
call
add
sbb
addl
or
clc
or
mov
jp
cld
fdiv
scas
pop
into
adc
inc
push
dec
ror
data16
test
adc
ss
add
jnp
add
push
icebp
bound
gs
int
repnz
jnp
stc
je
arpl
rolb
pop
inc
arpl
sti
jmp
testb
push
lock
movsb
popa
icebp
jmp
add
push
icebp
pop
mov
jl
add
push
sbb
incb
jmp
xor
lret
insb
aas
adc
in
jmp
add
mov
push
and
cwtl
mov
aas
xchg
sub
test
js
in
push
pushf
imul
ss
clc
scas
and
jp
push
lret
popf
xlat
add
xlat
inc
push
fidivs
imul
rorl
jmp
mov
aas
icebp
mov
jnp
call
mov
jecxz
jmp
pop
aaa
mov
add
movsb
xchg
adc
ljmp
mov
fcmovb
clc
in
shlw
adcl
lea
stos
hlt
jg
xchg
dec
inc
insb
xor
mov
sub
add
push
jp
jae
add
push
test
add
xor
mov
sbb
jmp
mov
add
test
add
cmp
mov
sarb
lds
push
dec
mov
cmpsl
fwait
cmpb
into
or
test
jg
imul
dec
sbb
mov
push
repz
jo
fimuls
fiaddl
rclb
fsubr
mov
pop
dec
adc
andb
lds
inc
ret
add
sbb
int3
lahf
in
ror
test
int3
xchg
in
fsubr
hlt
push
orb
aas
push
ret
mov
sbb
icebp
sbb
aad
bnd
jmp
mov
push
jb
add
and
add
mov
push
dec
js
and
inc
adc
or
imul
int3
cmp
add
add
cmp
jmp
add
into
pop
int3
mov
mov
pop
push
mov
lret
push
mov
movsl
cmc
jmp
mov
aas
jp
cld
ja
add
push
or
stos
cmp
pusha
pop
sbb
fprem
sub
xchg
sbb
ret
in
mov
xchg
enter
icebp
les
fisttpll
add
out
jle
addl
in
jb
cmp
bound
std
jge
push
repz
mov
stos
ret
or
daa
inc
dec
add
mov
jge
and
orl
dec
imul
xbegin
jmp
nop
inc
adc
testb
inc
and
mov
jne
xor
sub
add
pop
dec
pop
or
sbb
pushl
pop
pop
test
clc
mov
mov
call
mov
ljmp
int3
cmovl
mov
rolb
sti
mov
jbe,pn
add
jae
adc
and
and
or
imul
pop
jb
mov
outsl
std
pop
and
lret
je
cli
call
adc
adc
add
dec
sub
push
int3
push
jmp
jle
pop
mov
sub
js
mov
or
push
dec
sbb
inc
sub
fxch
stc
in
dec
movsl
orl
call
dec
das
xorl
push
rorl
xchg
loopne
mov
aas
mov
fdivr
leave
stc
pushf
scas
pop
mov
add
lahf
sbb
add
add
adc
push
adc
roll
in
push
icebp
stos
mov
mov
xor
in
push
jg
push
jge
inc
add
adc
jmp
jecxz
ss
cmp
leave
or
xor
sub
sub
js
sbb
test
add
add
cwtl
pop
add
sahf
dec
jp
add
ja
nop
sbb
cli
jl
sbb
lret
std
sbb
push
jbe
mov
xor
add
icebp
add
sbb
sub
aas
sbb
add
popa
mov
bound
les
jne
mov
add
aas
push
jb
lods
cwtl
mov
xor
jne
aad
pop
xor
push
add
pop
dec
jmp
shlb
bound
and
xchg
jmp
bound
test
jne
dec
add
mov
les
sbb
scas
pusha
add
fldenv
lock
add
jge
sahf
not
jae
out
mov
loope
xor
mov
int3
xchg
ja
jne
add
cmp
test
cmp
cmc
jge
push
jb
arpl
add
jae
or
mov
add
jns
std
in
jno
adc
hlt
jne
loope
add
mov
clc
mov
les
and
adc
xor
push
xor
cmp
pop
dec
add
aaa
xor
xchg
loop
dec
jae
inc
fadds
add
add
rol
fisttpll
aam
in
call
or
inc
add
push
cmc
adcb
cli
rorb
push
mov
cmp
xchg
mov
or
ret
add
xchg
std
in
test
cmc
xchg
add
rclb
insl
cmc
daa
or
jle
mov
push
push
movsb
add
push
and
dec
add
push
fidivrl
cmp
pop
aam
push
jns
jmp
xchg
add
xchg
lret
lods
jno
dec
add
mov
push
fidivrl
repz
jae
jae
daa
hlt
cmp
ljmp
xor
les
scas
int
stc
call
add
dec
rol
loop
push
mov
sti
divl
jmp
jle
add
jb
hlt
dec
lret
repnz
push
jp
sti
xlat
sbb
mov
adc
push
int
icebp
add
sbb
sbb
xor
cmpsb
or
in
subl
jae
xchg
dec
outsb
dec
int
xabort
push
dec
add
jb
add
clc
push
dec
jmp
int
stc
test
clc
out
lcall
mov
aas
outsb
inc
stc
add
out
ret
ljmp
inc
mov
pop
inc
icebp
add
stc
mov
sub
dec
popa
insl
adc
push
inc
idiv
test
or
lock
add
rcll
add
and
mov
loope
stc
mov
not
jmp
je
adc
test
pxor
adc
push
mov
dec
in
add
inc
je
or
xor
and
fldl
add
cld
decb
test
mov
cli
out
add
pop
jns
or
mov
js
in
jno
sbb
xchg
mov
push
xor
sbb
xlat
sub
lods
fiaddl
and
jg
xchg
ficoml
test
lret
add
push
sbb
clc
push
fiadds
jge
ret
imul
jge
mov
in
adc
incb
arpl
call
xrelease
data16
out
cltd
cmpsl
adc
scas
adc
in
fistl
mov
dec
push
sbb
fiaddl
cmp
es
ret
ljmp
add
inc
or
sub
ljmp
hlt
ja
lcall
inc
push
stos
repnz
leave
jmp
test
xor
shll
imul
lcall
mov
dec
inc
icebp
jmp
push
cmp
test
mov
jbe
sbb
and
add
add
leave
jno
dec
mov
out
dec
icebp
add
or
adc
dec
icebp
add
jno
idiv
jg
or
icebp
pop
insl
xor
add
inc
jg
ss
roll
lcall
push
loope
das
fbstp
and
xor
and
mov
push
ret
clc
jmp
add
test
add
js
aam
pop
sbb
sbb
mov
imul
test
mov
out
outsb
rcll
out
add
ljmp
divl
add
in
or
sub
iret
addl
mov
jns
shrb
jge
mov
je
jbe
adc
pop
int
add
and
sub
dec
jbe
dec
inc
mov
sbb
jno
jae
push
sbb
mov
imul
inc
aam
sub
push
cmp
jge
out
push
clc
imul
add
dec
inc
pop
hlt
enter
test
pop
inc
push
lret
mov
lea
sarb
inc
xchg
add
xor
andl
add
mov
add
dec
rolb
push
out
adc
add
dec
push
jg
push
lret
dec
lret
or
add
xlat
outsb
or
or
lret
adcl
jecxz
fwait
scas
mov
icebp
fs
xchg
jb
xchg
cld
and
jg
bound
push
test
hlt
repz
add
xchg
xor
lret
jae
cmpsl
push
inc
repnz
lds
inc
mov
mov
loope
add
mov
sub
arpl
and
push
insb
lods
mov
adc
roll
sbb
add
jmp
inc
jae
stos
aaa
push
mov
and
jmp
add
icebp
jmp
jmp
add
push
icebp
out
es
icebp
adc
push
call
add
mov
push
jmp
sub
add
inc
in
adc
fdivs
in
jb
adc
fnsave
sub
insb
mov
jb
xor
js
or
movsl
mov
xor
add
icebp
insb
icebp
lret
xor
ret
jae
pop
xor
jmp
add
push
icebp
add
je
aad
and
bound
leave
dec
add
add
and
hlt
push
xor
add
insb
push
clc
cmc
jo
or
popa
xor
test
sar
mov
icebp
add
sbb
icebp
add
sti
adc
leave
mov
stc
div
add
add
or
icebp
stos
loopne
jbe
or
pop
stc
add
jbe
adc
lcall
inc
jb
sti
adc
xlat
mov
mov
add
inc
mov
xchg
mov
xor
add
jns
add
lods
mov
lret
xchg
xchg
push
inc
sbb
or
rclb
add
push
and
or
lret
jae
fidivrs
add
iret
popl
add
jb
test
test
adc
xchg
loop
xlat
shr
jecxz
jge
movl
push
lret
enter
sub
test
pop
push
ljmp
sub
ljmp
add
fsubrl
ret
cmpsl
add
jmp
add
add
fiadds
pop
jne
or
insl
icebp
adc
mov
or
mov
jae
stos
mov
or
icebp
jmp
or
pushf
repz
lods
pop
push
in
pop
push
icebp
jmp
das
inc
push
cmp
cmp
sbb
loop
icebp
sub
dec
sub
push
pushfw
jmp
add
pop
mov
or
push
call
cmc
bound
lods
loope
scas
or
mov
add
or
mov
mov
orl
mov
sbb
jmp
push
out
jmp
jmp
je
inc
xlat
sar
xlat
ss
jmp
xchg
aam
push
add
in
add
jnp
test
sub
add
movsl
cmp
or
xor
and
flds
add
mov
add
imul
xchg
add
xorl
sti
and
iret
jne
into
hlt
or
dec
idiv
pop
jns
into
jns
aaa
xorl
add
fadds
add
and
and
cmp
in
sarl
cli
dec
andb
push
xchg
cmpsb
jge
fwait
testb
lret
push
inc
addr16
push
lret
inc
lret
fmuls
cmp
rorb
push
lret
pmuludq
xchg
aam
jb
inc
mov
rorb
push
lret
add
movl
dec
and
movsb
ret
add
push
push
std
inc
stos
icebp
inc
cld
push
mov
mov
push
mov
or
xchg
roll
shl
pop
add
das
icebp
push
pop
icebp
jg
jmp
add
in
mov
mov
lds
shrl
sub
roll
stos
imul
mov
add
add
ret
out
in
jb
outsb
shl
addb
sbbl
or
les
popa
inc
pop
call
push
subl
das
rolb
push
icebp
jmp
jmp
sub
inc
lds
daa
in
ljmp
jae
sarl
cmc
jmp
push
icebp
pop
aas
add
push
mov
aam
xchg
xor
icebp
fldenv
stc
ljmp
mov
aas
call
and
push
insb
int3
push
lock
jo
xor
daa
dec
mov
das
jbe
ljmp
jae
dec
in
jmp
adc
out
aad
sbb
bound
dec
or
pop
sub
jg
mov
cli
inc
add
xchg
mov
mov
imull
dec
gs
add
repnz
in
and
add
cmp
pop
adc
in
call
mov
jbe
repnz
fsubrs
or
arpl
imul
ljmp
cmp
or
xor
dec
mov
add
imul
add
or
rcr
mov
xchg
jne
jl
add
or
hlt
jmp
pop
mov
test
call
sti
leave
add
push
xlat
pushf
test
loopne
enter
adc
les
test
adc
xchg
jbe
jge
add
mov
cld
or
cmp
cmp
jne
or
mov
sub
ljmp
sub
stos
jmp
sub
fstps
add
push
ja
xchg
jmp
mov
mov
roll
imul
lock
add
lea
into
sub
add
loope
mov
les
jns
push
icebp
out
sub
jge
outsl
lret
mov
ret
jo
imull
mov
lock
mov
hlt
imul
xor
fidivrl
clc
push
mov
xchg
add
push
ljmp
xchg
movsl
loope
sub
inc
push
call
add
add
mov
aam
je
or
shr
cs
sub
mov
in
mov
inc
out
daa
ret
je
ss
jmp
push
icebp
pop
jg
mov
aam
addr16
scas
or
or
out
push
stc
add
push
jle
sub
jg
push
scas
fiadds
repnz
std
xchg
mov
add
sub
fldl
push
add
icebp
sub
mov
cs
add
jne
data16
insb
sbb
sub
jmp
xor
mov
imul
jbe
jo
jne
jne
imul
jae
jno
pop
add
mov
sbb
std
loopne
test
outsb
mov
add
orb
add
add
aam
or
push
dec
cmp
jne
pop
cmp
add
enter
adc
push
dec
mov
cmc
jl
push
mov
push
push
xor
dec
push
enter
inc
dec
fmul
pop
clc
orb
test
fmuls
jne
mov
lcall
andb
pusha
or
call
jnp
outsl
or
add
add
stos
inc
push
lcall
sti
jbe
rorl
add
lods
xchg
clc
fiaddl
push
icebp
fiadds
xchg
clc
cmc
add
push
xchg
neg
sbb
test
popf
sti
iret
ds
jp
mov
lods
stos
aam
jb
jae
mov
push
int3
inc
out
aam
ret
add
in
add
nop
stc
jb
dec
jl
adc
dec
adc
in
pusha
push
sti
jnp
js
cmc
push
dec
je
imul
jbe
mov
xchg
lods
or
add
xchg
jno
repnz
icebp
testl
outsb
inc
mov
cmp
mov
and
push
icebp
add
cli
xor
dec
jns
and
add
mov
lods
movsb
in
xchg
adc
push
lods
add
int3
outsb
call
out
cmc
in
mov
inc
push
cli
add
test
clc
jmp
inc
cmp
dec
and
push
jmp
arpl
in
cmp
test
mov
lods
cmpl
mov
or
add
out
int3
bsf
dec
push
lods
mov
jns
fmull
push
add
or
dec
in
xchg
mov
adc
dec
hlt
sub
leave
mov
in
jge
mov
mov
pop
sub
mov
mov
shl
jae
add
mov
push
sbb
cld
push
iret
js
push
cwtl
add
mov
mov
cmp
add
xchg
fwait
int3
or
xchg
jb
push
push
gs
mov
and
in
pop
cmc
xchg
pop
xor
or
pop
lret
adc
fcoms
mov
rclb
xor
movsl
fs
test
add
in
or
push
add
enter
dec
fwait
jb
push
adc
adc
push
add
lcall
cmp
add
add
out
add
or
inc
mov
mov
lret
ret
jmp
pushl
bound
mov
or
daa
stos
add
xchg
mov
or
daa
add
jmp
adcb
sarl
aad
add
add
push
inc
icebp
jg
cmc
jmp
stos
cwtl
lods
add
mov
or
test
dec
pop
sbb
and
clc
jmp
mov
xor
mov
icebp
add
xor
jmp
push
icebp
mov
pop
imul
mov
les
jne
mov
add
imul
jnp
lret
movsl
cmp
and
xchg
push
lods
add
fdivrl
scas
jmp
ss
bound
mov
inc
add
sbb
call
dec
and
mov
test
in
cmp
xorl
scas
loopne
inc
jecxz
orb
test
fmull
mov
sub
mov
and
adc
sub
jle
loop
mov
inc
daa
inc
hlt
sub
test
mov
push
push
pop
pop
cld
push
lret
js
push
cwtl
add
in
jne
add
je
lcall
int3
or
push
jbe
out
xchg
data16
push
push
incl
add
xchg
add
repz
cmp
rcrb
xchg
addr16
or
xor
xchg
jge
push
sub
call
push
frstor
or
fs
test
inc
aam
cmp
mov
fistpll
push
adc
adc
sub
sbb
lea
mov
mov
or
stos
add
add
in
add
and
loop
sub
aad
push
jge
cmp
add
xor
adcl
and
sbbl
not
sub
add
mov
les
jl
test
and
jns
pop
cmp
bnd
fidivl
or
jl
sahf
shrb
outsb
mov
add
push
or
jmp
mov
cmpsl
clc
jmp
jnp
mov
outsl
into
shll
cmp
add
push
push
mov
jmp
jnp
clc
jmp
adc
or
adc
cmc
push
cmp
pusha
sbb
sub
mov
int3
enter
mov
jo
mov
cmp
lds
jne
mov
add
mov
int
jb
xor
xor
cmp
cmp
cmp
add
push
orb
dec
fsubl
imul
sub
mov
int3
sub
mov
jmp
and
mov
int3
mov
repz
and
or
loopne
mov
test
int
add
daa
cmp
cli
repnz
repnz
add
adc
jl
mov
repnz
jp
or
fcomip
mov
ret
repnz
and
clc
jp
jp
push
cwtl
in
add
add
shrb
in
sub
sbb
cld
push
js
push
cwtl
add
std
cltd
popf
dec
aas
adc
ret
inc
clc
push
rolb
test
add
and
push
fprem
xchg
pushf
test
or
je
and
fdivr
hlt
dec
sub
jns
cwtl
sub
xchg
or
push
cwtl
xchg
and
clc
fcmove
hlt
xchg
push
xchg
lock
jae
sub
pop
int3
jmp
iret
lods
fiaddl
movsb
jns
lds
movsl
push
cmpsb
ljmp
add
xor
xor
jmp
jle
repnz
pop
js
or
xor
jecxz
xor
scas
jg
adc
add
ljmp
jae
add
aas
hlt
in
pop
xchg
jmp
out
es
add
jae
push
icebp
ficomps
mov
fwait
mov
aam
add
leave
test
push
xlat
and
add
int
or
wbinvd
and
adc
mov
jmp
push
cli
jle
add
clc
push
xchg
ds
jmp
ret
loope
outsb
ds
aad
jmp
movsb
shrb
dec
movsl
mov
ljmp
in
and
xor
dec
mov
sbb
or
mov
adc
push
icebp
mov
jmp
add
push
mov
cmpsb
adc
testb
push
cli
mov
jge
shlb
or
xor
mov
xor
jne
push
in
jg
push
js
cmp
movsl
jge
or
inc
adc
mov
sbb
or
stc
sbb
clc
jne
push
jmp
and
imul
or
cmp
or
add
xor
push
push
cli
incl
add
testb
daa
cmc
jge
mov
jecxz
sub
pop
adc
cltd
inc
sbb
repz
fcmovbe
lods
je
or
and
push
pop
sbb
fsubs
test
in
and
xchg
sub
push
or
jnp
and
mov
call
ficoml
xchg
in
jae
lret
or
add
add
shr
adc
sarl
or
add
fcomp
or
sbb
lds
sarb
add
dec
fidivrs
rcll
add
xchg
push
mov
sbb
mov
cmc
in
inc
jbe
mov
mov
addr16
sub
fwait
jp
push
aas
into
mov
dec
mov
add
mov
sahf
dec
mov
mov
out
icebp
scas
jmp
icebp
cmc
jmp
icebp
mov
pop
icebp
or
push
icebp
lcall
icebp
lcall
icebp
enter
pop
icebp
daa
icebp
inc
icebp
pop
icebp
inc
icebp
pop
icebp
add
mov
fldl
subb
add
mov
fldl
lahf
sbb
popf
add
sbb
xchg
add
sahf
fldl
nop
test
add
fldl
add
add
daa
fldl
inc
inc
fldl
cmovae
add
fldl
in
fldl
xor
add
lds
jmp
mov
push
je
pop
add
mov
add
inc
xor
mov
or
add
inc
sub
enter
jge
mov
push
sub
aaa
sbb
sub
roll
add
jp
mov
pushl
fistps
jle
int3
inc
rol
es
es
out
imul
mov
negb
cmpsl
ss
push
in
jecxz
sarb
bnd
and
or
add
sti
sarl
cmp
jge
push
mov
add
adc
pop
nop
std
mov
and
cs
enter
mov
xchg
push
xchg
int
add
add
divb
stc
enter
xchg
mov
mov
dec
jg
lods
mov
jge
mov
fisubs
inc
or
enter
sti
xor
jecxz
add
pop
rcll
add
mov
jle
int3
pop
int3
int3
pop
jge
in
mov
lock
nop
popf
jae
xorl
add
xor
cwtl
dec
mov
mov
sub
lcall
sahf
add
mov
mov
mov
popf
sbb
add
sub
xchg
hlt
sub
xchg
and
mov
popf
cltd
stos
dec
pushf
das
fwait
mov
adcb
testb
cmp
cmpsb
dec
lock
aam
mov
mov
mov
jmp
les
lds
lea
les
repnz
icebp
add
add
test
arpl
test
sub
push
ficompl
mov
fnsave
cmc
jo
push
ret
loope
inc
stc
sub
mov
out
aas
cmc
fwait
call
sbb
mov
add
add
jmp
test
add
lea
ja
jns
std
mov
add
ljmp
sti
push
sbb
loop
shlb
dec
cld
jnp
daa
dec
jns
les
jns
or
test
xchg
mov
loop
sbb
jns
andl
jge
loope
hlt
cltd
cmp
or
jmp
call
xorl
enter
cltd
jnp
adc
push
dec
pushf
addl
or
xor
repnz
cltd
stc
fcom
jge
push
adc
aaa
cld
lret
test
mov
fidivrs
lahf
daa
clc
sub
aam
add
push
inc
test
fstpt
rcll
add
inc
add
mov
fmuls
test
mov
int3
xchg
mov
int3
xchg
pop
test
rcr
xlat
dec
add
enter
movsb
pop
invd
sbb
cmpsb
subb
sub
adc
sub
push
pop
je
orps
mov
mov
mov
ret
xchg
inc
ret
icebp
jmp
or
mov
sub
bnd
ljmp
addr16
add
add
jmp
xchg
pusha
xchg
jno
push
outsb
es
xor
xchg
and
rcll
icebp
add
pop
jo
add
icebp
add
popf
jae
sbb
add
stc
out
bound
mov
sub
jb
xchg
mov
cwtl
clc
push
icebp
cmp
stc
test
loope
xor
jo
mov
xlat
inc
in
or
hlt
rolb
mov
xchg
mov
pop
sbb
in
cwtl
clc
jge
std
in
icebp
jmp
jns
mov
icebp
dec
mov
sub
add
pop
or
mov
jg
inc
es
push
mov
lahf
jge
cs
sarb
adc
cmp
push
lea
add
test
dec
mulb
cmp
jecxz
adc
xor
or
jg
js
mov
add
sarl
or
xor
fmull
call
cltd
jge
sarb
pop
jmp
jge
or
das
in
cmp
sahf
stc
push
adc
cld
mov
inc
pushf
cmp
add
enter
pop
mov
cwtl
pop
adc
in
rclb
push
pushf
and
or
xchg
sub
sahf
jle
dec
adc
nop
stc
in
add
data16
mov
or
add
pusha
pop
cmp
add
cmp
pop
and
jae
mov
popa
lcall
add
push
icebp
fimull
aam
push
mov
cltd
arpl
push
or
sub
aad
cmp
ljmp
insb
sub
out
and
icebp
jmp
jl
lock
adc
sbb
test
add
cld
adcb
mov
cmp
jg
mov
lods
add
icebp
jmp
roll
xor
rcrl
int
jbe
add
xchg
mov
mov
imul
dec
test
xchg
sti
mov
mov
push
icebp
add
push
icebp
jmp
add
outsb
inc
loope
icebp
dec
mov
and
popf
mov
add
jge
pop
add
xchg
fsubrl
cmc
sbb
add
insl
push
in
lcall
pop
inc
xchg
loop
shrl
insl
inc
movsl
push
and
imul
add
testb
jmp
je
imul
cltd
imul
push
call
xchg
movsl
inc
lock
jg
or
xor
cmp
jae
addb
push
jg
pushl
add
push
jle
call
mov
jle
add
roll
in
imul
cmc
add
ficoml
into
das
add
cmp
xorl
lea
nop
push
fmuls
lret
xchg
jl
leave
add
dec
add
pop
mov
lret
imul
add
dec
or
add
enter
rclb
or
lahf
xchg
stc
and
xor
sbbl
in
or
jge
dec
add
xchg
stc
hlt
or
lret
rorl
dec
add
xchg
stc
les
pop
cld
push
cmpl
pop
xchg
test
test
dec
xchg
cmp
cmp
ljmp
add
xchg
ja
and
cwtl
fwait
and
fiadds
dec
xchg
inc
or
lcall
xchg
das
nop
sub
xor
mov
jl
gs
sti
xchg
cmp
dec
cmp
into
xchg
fistps
add
movsb
mov
jl
jmp
xor
mov
push
add
dec
and
arpl
xor
call
loopne
scas
mov
push
icebp
roll
push
mov
rcll
mov
xchg
xchg
mov
daa
in
hlt
orl
loop
push
mov
mov
jns
les
adc
lds
ds
sahf
jns
xor
add
and
test
pop
xchg
push
stos
pop
xor
push
cmp
xchg
xor
push
push
dec
insl
pop
inc
mov
jns
je
jae
call
lods
mov
les
mov
jle
stc
mov
test
jg
push
jmp
in
push
icebp
hlt
divb
cmp
inc
cmp
mov
add
or
call
test
call
jle
sub
nop
fmuls
lret
call
jns
std
test
call
mov
lds
push
ljmp
mov
pop
sbb
rcll
test
enter
jmp
leave
add
pop
sbb
roll
test
jmp
lret
jnp
test
pop
sbb
add
fstps
std
rcl
test
into
insl
mov
stc
fcomps
mov
loope
clc
adc
add
push
sbb
mov
icebp
or
in
add
pop
repnz
lret
nop
fdivrs
jp
push
jae
andl
mov
std
mov
add
add
mov
xchg
mov
xchg
and
aam
mov
in
push
jnp
outsl
mov
es
shlb
dec
js
rcll
jae
sub
es
shlb
pop
js
shll
arpl
cli
jno
pop
shlb
add
data16
cltd
pop
xor
jb
add
xchg
push
or
xor
xor
push
jmp
xchg
push
or
xchg
add
xor
push
jb
cwtl
ret
xchg
push
or
data16
cmc
mov
or
test
push
push
int3
movsb
cmp
pusha
dec
cltd
mov
add
cli
jge
push
icebp
add
xorl
aaa
mov
mov
cld
mov
jno
je
jb
je
or
lret
xor
adc
xor
std
push
pop
js
xorl
cmc
xorb
jl
negl
jne
clc
sbb
out
inc
mov
jl
jno
data16
add
lock
and
xor
mov
lahf
pop
add
jcxz
sub
jne
push
jno
jne
popf
jne
out
jl
repz
stos
cltd
adc
rolb
jmp
ja
cmp
inc
xor
fucomi
push
and
xor
leave
mov
rcrb
sub
out
shll
les
mov
inc
lret
mov
xchg
cwtl
das
cld
add
push
cwtl
daa
cld
fcoms
aad
sbb
ja
inc
push
fdivr
dec
cltd
fildl
adc
hlt
cmc
jne
aaa
adc
incl
push
add
shl
and
jg
add
add
into
stos
adc
push
mov
add
sub
fnstcw
xor
mov
movl
add
out
jb
into
xor
jbe
mov
mov
stos
ja
test
sub
jmp
jmp
push
mov
xor
xor
xor
jge
cltd
mov
dec
je
cvtps2pi
lret
add
decb
jb
roll
fsubs
push
lret
or
add
add
insl
jmp
test
je
std
adc
pop
mov
push
fnstsw
cmp
clc
push
hlt
jge
inc
mov
xor
jbe
xchg
inc
je
mov
movsl
loop
clc
push
hlt
jmp
jmp
shrl
icebp
push
sbb
icebp
andl
outsb
fsubs
jge
add
jl
inc
add
and
inc
mov
xor
jno
add
hlt
jne
or
insb
jno
cli
mov
scas
test
clc
pop
cmpb
inc
std
push
mov
repz
sahf
jae
cld
stos
clc
adc
jg
nop
push
ret
insb
popf
dec
push
xchg
cmpsl
cmp
jp
mov
add
dec
cli
test
clc
sub
orb
hlt
add
icebp
enter
popf
jge
push
fadds
hlt
xchg
push
pop
lods
jge
mov
shlb
sbb
jecxz
fildl
jnp
lcall
pop
lcall
scas
add
flds
add
push
mov
add
adc
push
enter
lahf
cmp
mov
in
add
enter
push
mov
jns
pop
leave
jns
pop
int3
jns
inc
ljmp
push
ljmp
dec
repnz
orl
icebp
mov
daa
and
pop
insb
cmp
pop
je
imul
mov
sbb
ljmp
js
sub
insb
outsb
or
jmp
test
jmp
add
add
scas
jno
daa
scas
and
icebp
jmp
add
icebp
jmp
test
mov
or
divb
fdivrl
and
pop
push
jns
daa
and
mov
mov
mov
mov
sbb
xchg
dec
bound
jge
push
stc
test
xor
mov
push
out
mov
xchg
insl
inc
std
call
add
mov
xor
jmp
xlat
cld
pop
jb
and
shll
or
and
or
jmp
shrb
push
stos
pop
icebp
mov
lock
push
jnp
jmp
mov
test
jecxz
adc
dec
xor
push
sgdtl
stc
stos
pop
add
mov
pop
add
pop
flds
add
sub
inc
lea
jge
sbb
lcall
leave
xor
mov
xchg
cmp
jg
jae
pop
mov
and
int3
cs
int3
mov
in
idiv
jge
lret
or
je
or
enter
jne
mov
xchg
ret
add
mov
add
push
dec
xor
add
int3
dec
add
jge
sahf
mov
fists
xchg
cmpsb
xlat
xchg
adc
push
call
rcl
incl
add
data16
push
js
cwtl
xchg
add
xchg
stc
hlt
ficoml
inc
and
push
call
rcl
incl
xchg
mov
mull
rcpps
add
fisubl
or
test
xchg
and
jb
imul
cmpl
push
pop
out
jg
cmp
js
nop
push
icebp
jmp
adc
mov
adc
outsb
push
or
in
jle
sbb
lcall
pop
sbb
cli
outsb
push
or
mov
add
mov
lea
add
push
cltd
mov
lcall
mov
mov
pop
ss
insb
inc
insb
testb
andb
add
add
jge
mov
rorl
push
bound
cs
add
in
mov
in
xlat
mov
cmpb
xlat
jns
aad
outsb
clc
fmull
adc
push
push
decb
add
fs
push
std
or
stc
insl
in
adc
push
shrl
xor
jmp
push
in
jge
out
sbbl
mov
jb
test
sub
adc
bsf
add
sub
add
div
ret
orb
push
stos
sub
movsb
adc
icebp
add
aad
jle
ret
add
xor
cli
jmp
push
jne
mov
add
nop
call
jle
repnz
sbb
lods
les
shl
incl
mov
add
cli
mov
ret
mov
add
hlt
add
orb
test
mov
dec
add
pop
adc
call
mov
sbb
imul
mov
jne
lret
xor
xchg
and
jecxz
int3
pop
add
mov
mov
add
adc
or
xchg
add
adc
adc
stc
cld
or
lret
mov
inc
or
add
leave
or
lock
adc
push
out
cmp
je
add
repz
push
mov
jmp
dec
push
icebp
jmp
test
jmp
mov
call
jmp
fsub
pop
add
cmc
mov
shl
xchg
or
jmp
pushf
repnz
icebp
out
ret
lock
add
add
addl
jb
push
mov
or
test
xchg
icebp
jmp
test
out
jb
jnp
je
js
daa
call
add
mov
jmp
fisubrl
jmp
mov
push
push
icebp
add
dec
cs
cmp
jae
jmp
pop
rolb
shll
les
add
add
je
popf
push
icebp
add
push
add
push
and
fisubrs
push
das
push
mov
mov
sub
jmp
push
sti
inc
add
add
dec
ljmp
mov
cmp
rorl
insl
add
stos
jbe
enter
add
jne
outsb
ljmp
and
jge
add
push
testb
orb
inc
fcmove
clc
jg
xor
js
je
sbb
lea
imul
sti
jge
jge
and
rorb
sub
pusha
mov
cmpb
out
insb
popa
mov
push
push
cmp
out
mov
add
xor
add
xchg
adc
outsl
pop
and
add
daa
pop
cmpsl
inc
pop
add
push
lds
fwait
mov
je
dec
icebp
jne
pop
mov
or
lret
clc
jae
stc
adc
out
std
leave
bound
ror
call
inc
push
psrld
leave
movsl
adc
test
adc
dec
aaa
shll
lret
ja
decl
fs
lret
ljmp
icebp
pop
adcl
mov
add
lock
sub
in
stc
push
repnz
mov
jge
cli
inc
icebp
out
add
jns
xor
jae
sub
sti
inc
sbb
xlat
mov
jmp
jns
push
jmp
dec
pop
scas
cmpsb
dec
pop
scas
adc
lea
jp
or
sbb
add
add
jae
repz
jmp
mov
sbb
pop
les
jno
jmp
dec
icebp
add
xchg
xor
add
inc
jns
daa
insl
pop
push
pop
jbe
fists
push
js
rcrl
add
jmp
mov
jmp
push
and
cmp
ja
aas
insl
jp
daa
xchg
jmp
add
push
js
xchg
leave
mov
push
cmpsb
rcll
add
push
sbb
push
lods
lds
inc
xor
int3
ss
int3
fildll
ss
cli
movsb
push
push
popa
add
or
in
add
push
add
pop
add
movsb
add
push
dec
push
addb
jne
add
call
dec
add
incl
out
add
sub
hlt
les
cli
push
shlb
out
add
or
addb
jl
sub
add
test
mov
mov
mov
jmp
sub
push
or
lret
rol
outsl
test
cmpsb
outsl
stc
aam
lret
std
mov
lds
call
add
ds
outsl
stc
ror
add
cwtl
xchg
mov
mov
addr16
test
insb
ljmp
add
fs
andl
cmc
insl
stc
inc
bound
cmp
add
or
push
sub
sbb
mov
jl
jbe
mov
addr16
ja
aas
add
dec
outsb
sub
out
jb
jbe
insl
mov
shl
and
jbe
jne
icebp
add
mov
mov
add
lods
filds
ror
into
jne
gs
jo
ja
insb
movsl
test
jle
cld
ljmp
js
jne
gs
xchg
jge
jne
mov
cmp
push
in
jge
add
and
xor
js
fs
push
pop
aam
testl
js
sub
push
hlt
lret
fidivl
stc
loop
pop
add
bound
clc
lods
in
cmp
scas
movsl
xchg
jmp
clc
fisubs
insb
jle
push
js
pop
fisttpll
xchg
clc
mov
mov
scas
out
mov
add
add
mov
ljmp
clc
mov
and
mov
std
stc
call
mov
xchg
xorb
mov
mov
push
stc
push
addr16
sub
psubd
jno
jle
cmp
inc
in
icebp
jne
mov
add
push
fs
inc
lea
add
stc
cli
jge
jg
mov
icebp
jne
cmpsb
push
mov
ljmp
fwait
mov
dec
jae
in
insb
add
or
cmp
fmuls
adcb
orl
add
dec
add
lret
ror
jae
xchg
mov
jae
faddl
aad
jae
jp
jae
rol
or
mov
xorl
stc
mov
jo
xchg
fwait
pop
push
js
jae
popl
jg
je
fsincos
fmulp
jo
fdiv
fs
pop
je
or
nop
jb
push
pop
dec
je
jl
shlb
mov
inc
dec
outsb
sub
pop
outsl
xor
sub
adc
pop
pop
or
dec
mov
das
clc
push
mov
loopne
in
cld
fsubrl
insl
mov
sarb
out
jno
jns
jb
outsl
cmpsb
or
mov
add
and
mov
jae
aaa
je
jno
add
mov
imul
mov
into
lods
std
imul
mov
insb
jle
mov
mov
xchg
cmpl
test
inc
cmpb
jns
ss
mov
mov
ljmp
clc
push
inc
insb
mov
inc
js
jb
add
mulb
insb
lret
ljmp
clc
and
add
bound
xor
add
insb
mov
sbb
mov
mov
mov
cli
push
sbb
xchg
or
add
sub
pop
pop
stc
sub
mov
ret
mov
cli
sub
xchg
push
stos
out
add
and
inc
mov
notl
mov
stc
pushl
add
mov
sbb
in
add
clc
mov
mov
adc
stos
jo
hlt
push
lcall
mov
xor
je
enter
int3
test
inc
int3
cmp
xchg
int3
pop
jl,pn
shr
and
insl
clc
sub
xor
je
xsha1
cmpsb
or
add
sahf
je,pn
lret
xchg
stos
lods
cld
pop
add
sahf
push
push
jp
add
daa
push
pop
enter
dec
pop
jnp
pop
test
add
mov
outsl
add
mov
push
sbb
decl
cmp
xor
clc
push
jbe
clc
dec
jle
mov
into
stos
pop
push
je
arpl
jmp
pop
fldcw
outsb
into
mov
jp
or
sbb
movl
add
add
push
subb
inc
inc
and
int
xor
add
cmp
cs
pop
cmp
xchg
jp
jae
incl
or
into
iret
push
movsl
inc
addr16
xchg
jp
stc
ret
stc
add
iret
or
out
clc
fdivrp
leave
mov
xchg
lods
or
jmp
xchg
mov
imul
add
add
test
mov
call
push
std
jge
cmp
push
inc
fsubrs
jbe
jbe
or
add
add
push
xlat
add
adc
and
xor
inc
rcll
jmp
cmp
cli
stos
push
je
sbb
cli
mov
jg
jmp
add
test
add
pop
pop
mov
pop
jg
mov
add
popa
mov
sbb
stc
adc
stc
mov
pop
dec
popf
cltd
ljmp
ds
cmp
inc
or
pop
inc
cmp
add
cmp
or
mulb
add
jno
mov
ljmp
add
or
and
add
pop
add
mov
pop
add
push
pop
add
int
add
push
shr
outsl
lret
xchg
mov
jp
push
pop
add
enter
push
jecxz
das
fcmovu
mov
push
pop
ja
shlb
pop
movsl
add
test
inc
lret
add
ja
xchg
cmpsl
imul
loope
pop
fsub
js
add
push
pop
jg
dec
inc
fidivl
scas
rcl
std
call
add
push
iret
je
push
icebp
jmp
jle
ljmp
jns
add
icebp
jo
shl
jmp
add
icebp
jb
mov
jg
icebp
jmp
dec
push
icebp
jmp
add
test
out
dec
jp
aad
sbb
add
add
pusha
stos
das
icebp
jmp
lret
or
insb
dec
out
cs
outsb
jle
push
push
cld
fsts
jge
adc
jmp
test
pop
cs
xchg
inc
rorl
lods
repz
jb
es
je
loope
cs
loope
icebp
add
mov
shl
sbb
add
iret
xor
and
cs
push
out
push
stos
inc
icebp
les
mov
lds
pop
mov
jbe
icebp
add
add
dec
roll
sbb
imulb
mov
push
cmp
lds
out
add
out
jge
sub
out
and
cmp
push
mov
fdiv
stos
out
mov
out
add
stos
outsb
ret
out
add
mov
out
pop
ret
pushf
mov
jae
mov
jp
rol
cmc
add
push
mov
test
je
std
out
add
cmp
add
addr16
int3
out
and
int3
fldcw
jbe
jne
sbb
xor
mov
xchg
add
add
jecxz
aaa
or
sub
or
adc
cwtl
add
lea
clc
xchg
lds
sbb
int3
mov
enter
jg
push
adc
push
into
int3
insb
mov
inc
jp
outsl
pop
call
enter
push
add
inc
into
cmp
pop
rcl
negl
jl
and
rorl
add
sbb
test
repnz
repz
lcall
cmp
ss
ss
ss
jp
ret
inc
cmc
fiaddl
scas
adc
jp
outsb
and
ja
xchg
lsl
add
adc
stc
clc
ret
test
lock
push
jmp
add
xor
push
jl
push
add
stc
jnp
enter
aaa
pop
xor
xor
jnp
cmc
mov
andb
add
cld
or
mov
je
mov
add
fistl
push
neg
mov
inc
jmp
push
push
shll
mov
movsb
lds
fs
test
add
mov
mov
xor
sarb
clc
push
push
arpl
insl
jp
test
rorb
ljmp
push
testl
mov
ljmp
mov
shlb
mov
jne
popf
das
jge
mov
call
jge
mov
sub
int3
add
jle
sub
int3
imul
in
xor
xor
leave
pushl
xlat
insb
add
idivl
mov
add
subb
add
mov
xor
insb
es
adc
inc
stc
adc
push
fldt
sahf
pop
pop
adc
dec
dec
adc
mov
pop
add
sahf
sbb
int3
pop
movsl
jns
test
sub
adc
push
ja
inc
push
aam
pop
adc
dec
push
sub
adc
adc
pop
enter
nop
test
fadds
movl
sbb
push
int3
xchg
fwait
push
int3
xchg
push
int3
xchg
in
fmuls
stc
mov
add
push
loope
sub
sub
mov
in
xorl
mov
pusha
push
scas
hlt
sub
add
mov
add
jmp
dec
lahf
xor
cs
xor
pop
xchg
icebp
jmp
add
fs
icebp
jns
xchg
jbe
mov
pushf
add
dec
icebp
jmp
lea
jo
pop
or
add
icebp
mov
insb
sub
add
mov
mov
int
std
das
cli
pop
mov
pmaxub
mov
push
icebp
xor
iret
loop
notl
mov
incb
jmp
push
icebp
mov
incb
jmp
adc
lds
add
lds
add
rorl
mov
jb
jmp
push
loopne
or
push
js
pop
enter
add
icebp
add
lods
add
dec
std
ljmp
xchg
mov
add
and
mov
jb
cmp
mov
out
jge
mov
add
push
bound
lcall
jne
or
out
jge
xchg
add
add
add
mov
pop
push
sub
adc
lcall
stos
out
cs
mov
dec
sub
cli
xor
jp
xchg
push
sahf
out
add
pop
cmc
sub
test
xor
mov
add
test
stos
mov
pop
xchg
xchg
push
add
add
mov
idiv
cmp
int3
nopl
pop
adc
int3
pop
movsl
test
shlb
sub
adcb
pop
fiaddl
fcmovne
test
push
lret
test
push
mov
lret
or
or
add
rorb
add
js
or
pusha
mov
imul
add
js
or
jo
add
lahf
in
jmp
or
jo
lahf
in
jmp
or
bound
test
push
icebp
jmp
ror
repz
lahf
add
test
loope
push
pop
push
pop
cmc
add
ficoms
enter
dec
icebp
jmp
and
hlt
xor
jl
add
add
mov
scas
sub
adc
es
not
mov
mov
aas
bound
push
pop
cmpsb
int3
test
repnz
icebp
xor
leave
dec
sub
leave
fneni(8087
jb
mov
add
dec
mov
call
push
jbe
xor
dec
mov
into
out
std
inc
add
add
jmp
add
leave
fcomi
jb
test
mull
ljmp
jg
cmp
repz
jmp
repz
out
fmuls
jno
add
outsb
popf
and
repz
mov
jo
add
bound
cmp
idivb
inc
repnz
jmp
bound
sbb
add
jns
popa
cmpsb
cld
test
cmp
bswap
or
aaa
mov
call
or
repnz
push
rol
sti
pushf
jge
jge
dec
mov
xor
out
aaa
add
mov
loop
xor
mov
xor
xlat
inc
filds
test
cld
outsl
out
cmp
mov
xor
pop
test
add
int
jae
rcl
jmp
xchg
inc
ficompl
fldl
mov
enter
pop
and
int3
pop
or
int3
pop
popf
mov
rcrb
hlt
dec
jge
mov
fmuls
add
into
xchg
xchg
pop
stc
mov
push
pop
aam
sbb
push
je
dec
cwtl
je
push
icebp
roll
icebp
jg
movd
addb
push
icebp
jmp
fcomps
push
push
push
into
mov
add
addr16
adc
loop
inc
add
orl
gs
xchg
mov
cld
in
loope
jne
fmuls
jmp
push
push
icebp
push
icebp
dec
push
hlt
fimull
add
shlb
or
push
push
add
push
icebp
xor
add
into
mov
fs
loopne
inc
add
fcmovne
add
andl
test
push
or
lret
int3
cmc
push
pop
std
mov
stc
mov
ret
mov
sub
lds
dec
test
lods
dec
jb
ljmp
int3
arpl
and
pop
clc
mov
std
call
add
push
icebp
jge
jno
or
inc
lock
insl
xor
add
out
xor
insb
repnz
mov
jnp
jp
jge
icebp
cmp
idivl
mov
lds
jle
push
cld
inc
and
rorb
std
icebp
add
inc
mov
seta
add
je
and
out
add
xor
jmp
add
add
out
scas
adc
out
add
mov
mov
cmp
call
loop
std
xor
bound
xchg
adc
or
lods
fildll
adc
mov
ffreep
adc
js
mov
test
mov
dec
add
add
es
in
xchg
push
lahf
out
dec
bound
add
xlat
fwait
adc
test
das
call
jl
dec
add
add
push
ret
mov
dec
daa
cmpsb
fmull
add
clc
in
lock
push
cmc
jmp
jg
lock
or
xchg
add
jbe
add
jecxz
push
lcall
aam
adc
push
das
fldlg2
jmp
ret
fsub
add
lea
cmp
jo
jo
loopne
fwait
add
add
rcl
rcrl
out
iret
scas
mov
faddl
xor
pop
lock
insb
pop
cwtl
popa
icebp
jmp
call
cmp
pop
cmp
popa
lret
pop
movb
pushf
sbb
mov
add
sub
pop
lret
mov
pop
cmp
insl
mov
pop
clc
xchg
mov
lods
sbb
xor
and
in
mov
add
jns
mov
outsb
mov
pop
clc
repnz
fistpl
fldl
mov
rcl
mov
test
pusha
adc
add
mov
push
push
push
mov
add
add
add
xchg
in
pop
adc
cmp
mov
jmp
nop
roll
incl
or
mov
fwait
adc
lcall
dec
bound
or
repz
and
jp
push
data16
mov
push
mov
inc
clc
ljmp
xor
mov
push
mov
add
and
add
push
dec
into
pop
ficompl
mov
loope
jecxz
push
je
inc
dec
add
adcl
pop
add
lret
inc
repz
lods
add
jecxz
adc
mov
mov
shl
or
fcomps
jnp
dec
mov
in
cli
pop
jge
pop
mov
cmc
rclb
add
add
add
lcall
push
dec
cmpl
push
dec
add
sub
repz
imul
add
push
mov
ljmp
add
jb
popa
icebp
jmp
add
subb
push
icebp
jo
call
test
mov
dec
enter
rolb
push
push
out
jo
in
movsb
push
jb
dec
push
pop
add
xchg
mov
lret
dec
imul
icebp
jmp
jae
jmp
add
sub
cmp
dec
fdivrs
jbe
xor
add
pop
pop
pusha
xlat
cltd
psubsw
and
xchg
cltd
shl
icebp
pop
mov
stc
push
clc
pop
negb
sbb
insb
mov
push
xchg
psubsw
add
ret
pop
push
in
imul
and
mov
incl
jmp
xlat
cltd
psubsw
std
xlat
std
scas
fsubr
test
mov
outsb
xchg
xor
clc
jb
in
mov
push
outsb
xchg
xchg
dec
push
clc
bound
dec
add
jb
cmpsl
adc
arpl
adc
loopne
push
sub
bound
cli
mov
add
add
out
enter
xchg
pop
clc
jns
cmc
call
in
mov
loopne
add
and
dec
clc
xor
mov
stos
out
sub
mov
lods
mov
sbb
mov
push
jg
pop
dec
decl
add
adc
jp
cld
adc
sub
add
pop
jge
pop
aam
or
insb
mov
dec
add
add
addr16
jne
idivl
add
fcomps
xchg
adc
jmp
and
mov
ficoms
out
fcmovu
nop
adc
jne
imul
jnp
stos
xor
clc
sub
test
sub
adc
ljmp
inc
mov
fcmovbe
nop
adc
jne
fists
add
push
push
jge
push
rclb
popf
pop
bound
add
mov
mov
add
cmc
jge
cltd
lock
out
iret
stos
mov
lret
pusha
addr16
mov
jmp
testl
jmp
stos
pusha
mov
lcall
xchg
fadds
push
lret
pusha
mov
std
mov
jae
sti
jmp
jp
xchg
rolb
add
push
popfw
push
jbe
popa
test
xor
dec
cwtl
je
push
icebp
es
jl
jmp
or
mov
add
push
xor
icebp
push
icebp
add
stc
in
out
icebp
add
push
icebp
subl
sub
cli
jge
cltd
dec
clc
push
in
movsl
mov
cmp
push
bound
stc
mov
jecxz
jmp
add
xchg
dec
push
xor
add
rorl
filds
rorl
std
in
lods
add
or
jecxz
jmp
aad
psubsw
std
notl
or
std
xchg
jmp
xchg
lret
dec
or
cmp
mov
inc
clc
ljmp
adc
dec
ljmp
daa
int
mov
mov
hlt
fstl
add
xchg
add
and
push
cli
repz
test
add
cs
clc
pushl
je
or
test
sbb
loop
mov
idivl
adc
stos
lret
and
push
mov
hlt
pop
adc
scas
push
jp
jge
push
dec
jnp
dec
ror
sti
lret
sub
out
jmp
adc
add
mov
adc
jl
pop
dec
add
mov
jle
pop
pop
add
inc
mov
loopne
push
jle
inc
pop
add
adc
mov
inc
add
fcomps
out
push
fstpt
shlb
jp
jns
jne
arpl
iret
ss
xchg
or
add
xchg
test
jo
ljmp
lock
shr
xchg
icebp
jb
add
pusha
jp
sti
iret
mov
jl
bound
out
add
xchg
inc
sbb
pop
imul
js
popa
icebp
jmp
cmc
cmp
ret
lock
lret
ja
cmc
and
imul
pop
popl
jmp
hlt
pop
jg
add
bound
out
add
in
jb
aaa
je
adc
add
xchg
dec
sti
jmp
add
add
jp
in
push
arpl
jmp
jmp
push
enter
sbb
mull
leave
loop
jmp
cmpsb
cmc
mov
popa
je
xor
pusha
adc
dec
test
call
ljmp
outsl
add
cmpsl
pop
mov
push
icebp
jmp
sbb
add
test
pop
add
std
dec
clc
pop
cmp
pop
lock
shr
ja
xlat
push
icebp
add
enter
stos
notl
jbe
loope
ja
add
cmc
add
and
stc
mov
int
jp
ret
mov
jge
mov
int3
ss
int3
mov
inc
inc
mov
subb
lret
incl
add
lock
mov
and
mov
hlt
mov
adc
cli
inc
mov
inc
int3
mov
cld
out
add
pushf
cld
daa
inc
arpl
adc
ljmp
test
pop
jne
push
pop
xchg
push
pop
add
test
ss
pop
xchg
xor
cmp
sub
inc
loop
jecxz
icebp
jl
xchg
cwtl
mov
add
imul
inc
inc
push
xchg
cwtl
lcall
test
iret
insb
mov
xchg
sub
pop
pop
leave
in
and
in
push
lock
mov
arpl
jne
shl
fidivs
je
cmp
shlb
pop
add
push
icebp
push
or
push
cli
imul
xchg
incl
add
jmp
add
aaa
or
jge
ljmp
dec
mov
sbb
mov
xor
dec
dec
out
xchg
jmp
lock
cmp
int3
in
clc
dec
xchg
in
xchg
lret
xchg
add
and
iret
mov
jb
loop
add
mov
xchg
arpl
movsb
loope
pop
insl
mov
inc
pop
jnp
add
mov
fists
pop
pusha
loopne
psubsw
pop
jb
cmpsb
ret
out
xchg
add
test
in
icebp
mov
add
sahf
or
aas
popa
out
fs
jo
pop
pop
sbb
jae
loope
repnz
xor
clc
not
imul
clc
xchg
mov
not
imul
add
add
outsb
push
loope
in
jb
test
jmp
mov
lret
add
mov
mov
push
lock
jg
jle
clc
call
add
shll
xchg
shl
mov
inc
mov
out
mov
clc
incl
pop
mov
mov
jno
je
jmp
mov
add
mov
mov
cmp
mov
sub
sti
leave
jle
daa
jge
xchg
add
mov
bound
mov
ds
jb
clc
incl
ds
mov
mov
fadd
mov
xchg
jnp
pop
dec
add
mov
hlt
cmp
pop
jnp
mov
das
jne
add
js
int3
add
insl
ja
scas
mov
adc
scas
aas
add
sbb
mov
shl
add
push
pop
roll
pop
xchg
adc
std
in
ret
cmp
loop
sbb
ret
scas
or
scas
push
shll
pop
add
arpl
jmp
jnp
inc
sarl
imul
or
and
aam
clc
add
add
insb
sti
fucomip
add
mov
les
mov
dec
jg
mov
jmp
call
popa
icebp
jmp
hlt
cmp
push
enter
aam
es
inc
inc
jae
cmp
jo
sti
fsubrp
add
call
jb
out
into
lcall
loop
jmp
aam
add
add
jnp
scas
cmp
mov
bound
jno
jl
dec
sub
fnstsw
sub
mov
rolb
dec
inc
cmp
lahf
ja
inc
pop
dec
pop
jb
rcl
dec
or
mov
push
call
insb
jno
call
loope
aaa
call
outsb
jno
lret
mov
mov
add
xchg
mov
cwtl
aas
or
add
mov
push
add
jle
add
mov
call
je
add
lock
or
sub
adc
mov
jne
mov
xor
pop
ret
inc
mov
int3
mov
mov
lea
add
push
inc
add
jae
add
cmp
inc
inc
jmp
insb
stc
pop
mov
arpl
sub
jae
push
mov
mov
push
add
dec
add
add
xor
jecxz
cld
pop
xchg
mov
add
ret
repz
push
fstl
inc
rcrb
add
dec
imul
nop
add
call
aas
int3
xchg
cmp
fsubrs
push
aas
dec
inc
andb
out
mov
std
inc
int3
xchg
mov
lock
push
jp
or
add
fsubrs
test
loopne
les
xchg
pushf
jmp
mov
inc
sub
cmp
lret
mov
add
jb
inc
icebp
jmp
or
or
add
dec
jbe
sbb
imul
and
xchg
xchg
cld
fucomi
add
test
add
enter
rolb
push
cmpsb
sub
xor
cs
xchg
arpl
outsb
add
push
out
jmp
add
push
icebp
mov
enter
adc
mov
dec
insb
push
loope
jg
cmpb
add
add
pusha
outsb
lret
insb
dec
loope
mov
psubsw
adc
fimull
filds
jmp
push
icebp
pop
stos
or
lds
sbb
lds
sbb
adc
jne
push
mov
mov
adc
dec
bound
scas
fisttps
ret
incl
add
call
push
or
lods
repnz
fnstcw
es
push
or
push
or
and
fwait
cli
hlt
add
jno
adc
sbb
cmp
push
inc
adc
mov
stc
inc
cmpsb
ss
push
pop
pop
out
mov
int3
out
in
pop
push
push
xlat
adc
leave
shl
add
jp
rorb
add
xchg
bound
jns
arpl
push
loopne
mov
js
dec
push
ljmp
addb
mov
pop
add
fmull
les
or
ss
add
test
pop
cld
in
jne
test
cld
inc
int3
pop
std
mov
sarb
rcll
xor
or
and
add
add
test
push
jle
inc
dec
add
push
dec
add
aad
adc
push
inc
add
push
aad
jp
icebp
xchg
inc
inc
push
mov
mov
pop
xchg
cmpsl
ljmp
iret
add
push
icebp
jmp
lock
fsubs
shl
sub
xchg
cmp
dec
xchg
sbb
jmp
test
add
add
sub
pushf
ds
aam
icebp
jmp
add
xchg
pop
ljmp
push
xlat
jo
shlb
pushw
sti
in
add
jo
popa
icebp
jmp
loop
cmpb
inc
icebp
add
mov
jl
enter
and
mov
fs
add
jl
roll
push
mov
jmp
xor
xor
imul
clc
pusha
or
xchg
sbb
mov
test
hlt
add
fistpl
loop
icebp
dec
pusha
into
mov
add
jbe
leave
dec
icebp
add
dec
clc
add
icebp
add
fsubp
add
loope
dec
adc
icebp
jg
add
hlt
sbb
xchg
push
cs
add
sub
mov
jmp
or
lahf
mov
lock
mov
cli
lock
in
sbb
ljmp
mov
test
push
jl
jge
ret
mov
out
adc
lock
sub
push
testl
add
push
iret
inc
xchg
mov
mov
cmp
dec
jg
and
add
push
inc
mov
fstpt
stc
int
or
push
iret
adcb
test
imul
pop
lret
pop
pop
dec
add
or
and
cmp
dec
add
ret
stc
pushf
filds
int3
pop
xchg
pop
mov
paddb
add
add
push
dec
mov
and
lret
jnp
repnz
push
shrl
push
shll
cmp
push
pop
stos
fsubrp
add
jmp
adc
fidivs
cld
lret
aad
ja
mov
je
dec
sbbl
mov
mov
push
icebp
jmp
jno
testl
add
add
jecxz
push
icebp
sub
pop
cmpl
mov
mov
dec
icebp
jmp
sub
outsb
addb
cli
adc
fimull
ret
mov
lods
inc
clc
push
addr16
sub
dec
add
adc
lret
jmp
aaa
cmp
lods
nop
jmp
addr16
add
sub
xor
add
mov
mov
icebp
add
out
inc
lahf
mov
mov
or
pop
loopne
js
jmp
push
mov
pop
push
call
in
stc
inc
cmpsb
insb
dec
adc
push
add
out
filds
add
sub
mov
dec
stos
je
repz
push
add
push
jge
mov
add
pushf
sbb
add
in
lcall
mov
mov
call
mov
push
cmp
jge
sbb
pop
out
add
or
sti
or
sti
mov
sbb
int3
sahf
test
int3
push
cmc
mov
fmuls
cmp
mov
aad
in
add
add
mov
js
jae
lret
outsb
test
add
and
ret
dec
add
std
pop
mov
sarb
std
out
sub
push
xor
cmp
add
out
mov
mov
inc
add
ret
xor
stc
enter
push
dec
mov
rorb
cmp
std
add
fcomi
and
sub
out
repz
lret
mov
inc
inc
fdivl
dec
outsb
stos
scas
inc
insb
in
add
ss
add
orb
insl
jne
push
icebp
repnz
pop
insl
dec
add
jb
xchg
fsubrp
add
mov
mov
mov
popf
iret
xor
cmpxchg
addr16
add
jmp
push
push
icebp
bound
cli
scas
int
rcll
pop
icebp
add
loop
aaa
dec
imul
daa
arpl
rcll
sub
rorl
jmp
xor
or
jecxz
jmp
int
psubsw
ds
push
icebp
mov
add
in
add
adc
call
insb
mov
or
push
mov
add
add
shrl
clc
shrl
add
push
add
clc
jo
or
lcall
data16
mov
mov
mov
push
or
fiadds
in
in
mov
mov
jp
dec
adc
and
mov
jge
mul
add
and
inc
mov
ret
xchg
mov
mov
mov
adc
mov
mov
shrl
mov
ret
push
mov
and
dec
ja
jmp
cmp
in
dec
or
pop
adc
adc
or
add
les
pop
sbb
inc
int3
lahf
aad
in
fcom
hlt
dec
enter
enter
arpl
sbb
jge
dec
mov
or
add
stc
push
dec
scas
add
loope
stc
push
dec
push
shl
sub
add
loop
stc
push
dec
ja
adc
or
dec
icebp
test
jns
out
mov
cmp
add
leave
stos
call
inc
pop
icebp
push
inc
shrb
push
mov
ljmp
lock
mov
stos
lock
xor
lock
addl
sub
jae
adc
sub
movsl
xchg
test
icebp
push
add
cmp
push
icebp
push
hlt
ret
lahf
cmp
add
xor
aad
add
iret
dec
mov
push
icebp
mov
insb
mov
filds
mov
dec
cmp
push
jg
jmp
cmp
push
jg
ljmp
dec
in
dec
cmp
push
jg
in
dec
cmp
push
jg
out
dec
cmp
push
jg
out
dec
cmp
push
jg
loope
cmp
push
jg
lock
cmp
add
push
jg
jecxz
cmp
push
jg
repnz
cmp
push
jg
in
cmp
push
jg
add
in
out
add
mov
sub
out
add
mov
sbb
in
out
xorl
decl
insl
repnz
rorl
imul
insl
add
popf
push
rsm
add
add
add
add
add
jp
jne
mov
jbe
push
add
decl
adc
xor
mov
imul
add
sbb
notb
add
push
in
mov
push
std
notb
add
push
fs
mov
and
notl
clc
mov
pop
add
push
fs
mov
adc
testl
add
clc
mov
and
notl
clc
mov
adc
notl
clc
mov
and
notl
clc
mov
adc
clc
mov
and
notl
divl
push
aam
mov
daa
add
push
in
in
sbb
or
icebp
xchg
cs
xor
mov
hlt
and
aaa
sub
adcl
and
sbb
pushf
add
push
add
cs
mov
je
out
add
test
in
cs
fnstsw
int
adc
into
dec
xor
push
std
jmp
jnp
daa
mov
xor
jmp
inc
sahf
mov
sbb
push
add
sub
dec
in
cwtl
push
fisubrs
and
enter
roll
imul
jmp
add
leave
sub
push
pop
je
ficoml
shrl
pop
add
jno
add
push
scas
loop
push
icebp
add
addb
comiss
std
int
sub
test
or
push
shl
jmp
aad
cmp
dec
fcoml
cmp
sbbl
mov
int
xor
push
je
test
stc
orl
add
out
add
outsb
in
add
add
jp
cmp
jmp
stc
add
and
inc
cmp
aaa
or
test
ja
and
sar
add
bnd
repnz
inc
cli
and
jno
mov
repnz
dec
faddl
add
and
test
add
mov
adc
test
test
mov
jp
add
outsb
jle
xor
cltd
fcomps
sbb
sbb
add
pop
add
jno
add
push
sub
xchg
push
adc
incl
ficompl
adc
loop
in
cltd
and
push
sbb
xchg
sbb
add
mov
inc
test
add
pop
sbb
and
add
and
sbb
and
add
es
xchg
jb
and
addl
jns
sbb
shlb
add
jmp
lock
bound
sbb
notb
ljmp
icebp
jmp
add
mov
xchg
fcmovb
inc
jo
in
inc
arpl
in
push
fiaddl
push
add
add
add
mov
test
sub
add
cmc
mov
sub
dec
test
mov
sub
sub
add
cmc
adcb
add
ret
cmc
xor
add
fiadds
dec
jbe
test
stc
orl
out
xchg
jmp
push
insb
in
loope
add
xchg
jmp
sub
jmp
push
loop
jmp
imul
push
cmc
jb
movsl
aas
ret
je
mov
lea
ret
stos
push
icebp
add
add
pop
sub
push
push
fdivl
push
fiadds
inc
dec
ret
fdivl
dec
inc
jmp
mov
add
cmc
das
inc
stos
jne
add
lods
shll
dec
test
push
nop
insl
mov
xlat
jp
add
add
sub
das
dec
jne
loopne
pop
imul
in
iret
and
sarb
or
out
fdivr
pop
test
clc
lret
aaa
lods
in
jno
or
das
sub
out
dec
rorb
addr16
jl
mov
push
in
jne
fmuls
sbbb
outsl
inc
push
pop
add
adc
cmpsl
mulb
xlat
das
int3
fldt
int3
xchg
add
fdivs
enter
enter
jmp
adc
push
mov
std
mov
xor
xlat
lret
test
lret
add
push
xchg
lds
xor
pop
das
and
sub
lcall
fsubp
pop
fmuls
fcom
icebp
mov
aam
mov
fcoms
jmp
add
jae
sbb
es
hlt
jns
dec
icebp
test
jno
xor
fildll
jmp
in
jp
mov
adc
sbb
js
icebp
or
add
pop
pusha
out
mov
ss
xor
jmp
add
out
jnp
icebp
jmp
hlt
or
sub
push
clc
mov
cmc
ljmp
aas
int
scas
xor
jb
xor
add
xchg
add
jne
xchg
out
add
push
jl
fldcw
in
xor
or
cmp
add
ret
lock
mov
ret
sub
jmp
adc
roll
add
icebp
test
sub
lds
into
mov
jmp
cld
fimuls
sub
out
mov
outsb
push
add
dec
mov
push
add
jg
dec
stc
jg
mov
mov
test
lock
add
add
or
pop
cmp
jle
fbld
add
adc
scas
inc
sbb
imul
mov
adc
jge
sahf
sbb
jg
test
dec
pop
adc
jmp
aas
add
lahf
aas
add
lahf
aas
add
lahf
aas
add
icebp
add
sti
icebp
add
jmp
icebp
push
add
add
push
out
cld
call
cld
call
add
push
push
add
push
dec
add
push
xchg
ljmp
std
call
xchg
cmpsb
pushf
decl
sbb
jl
sbb
je
sbb
push
mov
sbb
push
scas
sbb
push
out
jns
fistpl
push
rcrl
push
lret
sbb
push
add
stc
add
push
repz
cmp
sbb
push
and
mov
and
add
push
mov
mov
addr16
mov
add
paddq
std
not
xchg
lds
or
ret
inc
jmp
sbb
jmp
dec
aam
xchg
mov
hlt
iret
lods
movsl
mov
shll
stc
pusha
rolb
add
cmc
addl
fwait
jp
out
bnd
mov
int
mov
js
xlat
aad
add
sbb
inc
lds
imul
insl
push
bound
or
andl
add
push
into
shll
lcall
stos
pop
iret
adc
add
mov
and
cmc
adc
jae
scas
mov
aad
or
xor
call
or
jo
add
popa
insl
mov
push
icebp
outsl
xchg
add
std
int3
iret
fstpl
push
roll
add
jp
xor
call
outsb
xchg
jp
xor
jp
addl
jp
mov
add
mov
mov
movaps
mov
mov
aad
cmpsl
fadds
in
add
jp
inc
ja
fadds
in
add
jp
dec
pop
mov
add
ja
cmp
mov
loopne
jge
push
jne
and
or
jae
ucomiss
int
xchg
cmp
push
and
add
mov
inc
mov
sbb
addr16
clc
jo
xor
rclb
ds
test
arpl
push
cwtl
and
aas
xor
xchg
pusha
pop
stos
stos
leave
dec
test
jnp
inc
mov
mov
idivb
int
push
xor
push
hlt
jg
inc
cltd
or
fsubrs
mov
add
sub
iret
jo
lret
cmc
js
add
add
into
sub
je
mov
icebp
jmp
xchg
jno
rclb
xchg
je
push
jb
hlt
lahf
adc
sub
jb,pn
push
icebp
jmp
cmp
ss
add
movsl
mov
xor
ret
jae
add
icebp
rolb
add
stc
jb
and
pushw
mov
mov
adcb
jno
inc
js
sahf
push
sahf
mov
popf
xor
jmp
push
and
negb
dec
jb
aam
arpl
ljmp
andb
sahf
mov
shll
clc
xchg
nop
call
add
icebp
add
adcl
sbb
ret
rorl
bound
push
ss
push
nop
call
add
push
icebp
add
inc
adc
sbb
ret
roll
push
lahf
jmp
add
stos
jge
dec
cmp
fnstenv
mov
adcb
jl
inc
clc
je
or
add
imul
repz
sub
leave
push
cmp
add
add
jmp
push
shlb
insb
and
icebp
lock
or
mov
adc
jmp
sub
jmp
popf
mov
or
cmp
add
jmp
icebp
lock
mov
fnstcw
inc
je
icebp
push
je
je
inc
sub
and
add
lea
movsl
aad
in
xchg
and
or
loopne
inc
pusha
mov
sub
int3
push
xor
popa
daa
cmpsb
repnz
scas
jl
or
and
or
push
xchg
fcmovne
adc
push
inc
sub
aaa
push
out
lock
add
adc
add
xor
in
add
sbb
add
add
push
pop
movsl
in
or
xor
lods
or
xchg
or
subl
push
xor
xor
test
dec
and
xchg
push
xchg
sub
fwait
rorl
inc
jae
es
dec
dec
cmp
or
add
sub
pop
jne
add
icebp
add
ljmp
mov
call
adc
movsb
sbb
int3
xor
pop
fwait
test
xor
and
int3
adc
push
imul
xchg
push
sahf
mov
popa
mov
push
popf
jb
iret
and
pushf
iret
or
mov
add
mov
push
sbb
jno
xchg
sbb
ret
dec
dec
jb
jae
push
push
subb
imul
stc
scas
cld
repnz
and
int3
add
std
idivb
ret
test
add
jmp
mov
jle
adc
sub
insl
idivl
subb
test
or
imul
sub
or
lcall
or
lods
jge
ud0
clc
jge
xor
icebp
flds
and
shll
add
ds
je
sub
mov
std
iret
in
xorb
sub
inc
cmp
or
in
push
clc
aad
mov
and
out
add
push
stc
xchg
and
enter
enter
dec
fsts
movsb
enter
call
sbb
into
pop
and
into
loopne
test
sub
test
shlb
outsl
add
pop
ja
sub
loop
ljmp
out
rclb
add
repz
xchg
idivl
add
add
push
repz
movsb
std
out
insb
xlat
les
add
push
add
lods
std
mov
aam
rorl
repnz
push
adc
mov
insl
cmpsb
fbld
sub
out
lret
clc
inc
add
adc
jge
bound
mov
idivl
add
adc
stc
add
aam
ljmp
inc
outsb
pop
in
rorl
or
or
cmpsl
pop
add
push
icebp
rorl
das
add
ret
lock
lcall
and
cmp
aam
adc
or
test
cld
inc
pop
into
repz
xchg
mov
jno
rcll
rolb
add
call
mov
jmp
stc
sbb
push
into
xor
call
add
push
icebp
mov
xchg
mov
das
cld
push
lds
push
mov
int3
out
int3
dec
insb
in
out
jge
lcall
sarl
jg
push
gs
test
xor
push
gs
mov
scas
mov
rorb
insb
sbb
repz
xor
add
dec
add
mov
sub
jne
insb
or
ljmp
inc
mov
jae
and
add
addb
fcmovb
cmp
mov
jmp
push
xor
adc
add
push
sbb
test
or
add
rorb
add
inc
pop
fsubrs
mov
push
or
mov
add
lds
pop
add
add
adc
xchg
pop
lcall
add
or
inc
je
lods
add
sub
xchg
adc
out
mov
lea
jp
icebp
fs
int3
mov
mov
mov
loope
popf
aad
addr16
movsl
adc
insb
pop
outsl
icebp
jmp
mov
add
in
pop
popf
jg
in
divb
in
popf
aad
in
out
enter
mov
daa
xor
mov
jmp
pop
xchg
in
cltd
insl
arpl
mov
push
pop
xchg
mov
mov
dec
xchg
shlb
jae
outsb
or
jmp
inc
popf
xor
jno
sub
ds
add
pop
test
jmp
xchg
adc
jmp
icebp
add
cmp
les
clc
jmp
dec
icebp
add
out
aam
mov
adc
push
icebp
mov
jecxz
sub
and
xor
push
es
fimull
mov
shrb
mov
add
insb
sti
add
cmp
add
lock
add
cmp
out
add
cmp
idiv
stos
xchg
push
sbb
pop
call
add
adc
dec
mov
stos
push
ret
pop
in
jge
xchg
mov
or
inc
adc
xor
call
dec
lcall
dec
sbb
add
add
cld
pop
adc
inc
adc
sub
pusha
aam
dec
adc
ss
jbe
inc
in
or
add
dec
jmp
mov
add
add
les
in
mov
or
push
out
inc
and
fwait
popf
mov
lret
or
push
push
sbb
mov
aaa
or
add
push
jns
adcl
clc
mov
fdivrs
cmp
cld
call
jge
and
dec
stc
sbb
add
push
icebp
movsl
scas
mov
out
int3
test
icebp
jmp
add
loop
lock
test
dec
imul
lret
xchg
cwtl
int
or
fwait
popf
int3
inc
inc
out
xchg
mov
lea
jno
andb
adc
arpl
into
and
xchg
dec
fs
add
fwait
and
mov
into
mov
popa
fistps
fcompl
xchg
nop
in
lds
and
in
jae
xchg
test
or
jmp
dec
and
and
or
jl
cli
xchg
add
dec
icebp
add
enter
jmp
adc
loope
mov
dec
jns
pop
sbb
mov
jns
js
jbe
jno
sbb
push
or
pusha
mov
addb
mov
clc
jbe
mov
fs
xor
in
jbe
sti
mov
add
mov
add
test
inc
fdivs
add
jns
add
repz
hlt
or
arpl
jecxz
sub
jmp
add
adc
jecxz
stc
iret
int3
jg
in
outsl
or
insb
adc
dec
or
aas
icebp
inc
push
mov
jne
jbe
mov
aaa
add
jge
jbe
jge
lcall
pop
test
into
int3
add
jbe
int3
push
dec
jnp
enter
xchg
sub
push
cmp
mov
pop
cmpl
rcl
out
pop
adc
mov
aas
test
jge
pop
test
fadd
in
enter
enter
fcomp
aam
movsb
push
inc
int3
xchg
lahf
inc
inc
int3
xchg
pop
inc
int3
add
int
in
enter
jmp
add
push
sbb
push
aas
jmp
mov
orl
mov
or
scas
or
xchg
push
cli
sub
and
js
outsl
push
xor
or
stos
add
xor
call
or
in
lret
sub
or
int
add
mov
or
mov
lcall
or
jl
pop
mov
mov
adc
jge
push
gs
or
jbe
xchg
test
or
data16
jle
dec
or
bound
or
inc
movsl
mov
and
inc
or
call
push
or
jb
or
mov
add
add
adc
push
std
loop
add
or
push
xor
jb
mov
dec
into
pop
or
mov
cmp
mov
sub
add
push
icebp
add
lahf
mov
test
je
inc
jge
lock
dec
mov
aaa
test
int3
dec
leave
int3
add
pop
leave
int3
outsb
leave
int3
mov
push
mov
jge
add
jge
icebp
std
jb
jno
or
testb
jmp
mov
add
cld
mov
icebp
ja
mov
xor
push
fs
stc
push
mov
or
mov
add
je
cmp
jbe
mov
add
mov
ja
sub
sbb
inc
mov
add
xlat
enter
test
jl
push
inc
jl
xchg
xchg
adc
nop
mov
and
lock
jno
push
pop
enter
pop
in
das
int3
pop
lds
int3
paddusw
int3
pop
nop
or
or
in
push
sbb
cmpb
jl
mov
fists
and
xchg
cmp
xchg
cmp
xchg
call
add
or
icebp
cmc
test
jbe
cmpsl
mov
bound
push
outsb
std
out
pop
test
dec
cwtl
jmp
popf
cmp
jmp
add
mov
sub
imul
xchg
lods
iret
adc
xchg
add
and
add
pusha
cmpsl
call
gs
add
mov
test
mov
jl
in
mov
sahf
jb
stos
das
mov
lods
adcb
call
outsl
cmp
out
sbb
add
out
add
popf
or
xlat
xor
adc
mov
dec
or
jb
loopne
mov
iret
sub
add
in
mov
popl
mov
add
pop
or
jb
loopne
mov
or
xlat
sub
add
lods
clc
mov
push
xor
lds
clc
mov
sbbl
jmp
cmp
mov
movsb
or
sub
fistpll
leave
js
add
sub
mov
adc
sub
push
adc
mov
test
mov
add
jns
cmp
pop
sbb
push
sti
out
push
adc
mov
test
fistpll
jne
das
mov
adc
push
sarb
mov
in
mov
mov
jb
testl
cli
mov
cli
jo
jne
cmp
comiss
call
stos
clc
movsb
sbb
and
xrelease
dec
pop
xchg
enter
add
sbb
call
fwait
aaa
or
pop
mov
sbb
jns
push
xor
xor
xchg
cmpsb
push
sbbb
adcb
push
test
xchg
cmp
add
insl
inc
xchg
mov
js
out
incb
int3
inc
xchg
cld
leave
aad
icebp
and
or
add
pop
js
or
mov
adc
gs
mov
je
add
push
sub
std
sarb
mulb
pop
jp
repz
sbbl
into
jnp
js
std
push
xor
popf
cvtps2pd
add
rorb
pop
jg
push
das
add
nop
or
into
or
cmc
ljmp
add
add
xor
xchg
filds
fbld
add
add
inc
jmp
push
icebp
add
xorl
and
movsl
add
cmp
icebp
jmp
sbb
sbb
sbb
testb
roll
bound
je
addl
test
add
lock
icebp
mov
push
icebp
mov
jb
in
call
add
lock
mov
dec
dec
ret
xor
add
scas
cld
add
mov
mov
jge
cmpb
jmp
pusha
sbb
jo
sbb
dec
lock
add
pop
xchg
jge
push
clc
jge
push
loopne
add
sub
dec
or
lea
fcmovnbe
call
xorl
pop
ret
push
push
mov
jge
or
and
sub
es
add
pop
xlat
xchg
fmuls
xchg
dec
sbb
lcall
push
enter
add
and
cld
gs
mov
xchg
sbb
mov
les
nop
les
dec
push
add
add
inc
cwtl
mov
add
mov
lret
pop
nop
add
les
cmp
or
outsb
or
pop
test
daa
dec
ljmp
add
xchg
adc
add
jbe
pop
add
xor
bswap
mov
mov
stc
ljmp
cmc
bound
sti
sub
icebp
icebp
pop
push
test
ljmp
jbe
adc
lods
xchg
lea
jmp
xchg
add
nop
xchg
or
gs
jbe
lcall
popf
repz
lock
inc
sbb
aas
jbe
in
push
add
add
lods
add
add
push
outsb
shrl
or
add
and
test
cmp
mov
inc
leave
idivl
insb
inc
in
xlat
lahf
or
adc
adc
add
adc
insb
ficoms
xor
mov
icebp
add
jg
mov
cmpb
out
loopne
sub
jmp
push
mov
addl
add
xor
arpl
test
bound
cli
or
add
add
and
stc
mov
mov
mov
and
cli
inc
insb
inc
adc
scas
clc
mov
lock
cmp
stc
je
imul
das
and
or
scas
add
pop
in
cmc
into
jns
lcall
jge
add
lret
or
daa
loopne
les
stc
mov
adc
stc
inc
insb
dec
or
jge
adcb
push
cmpsl
idiv
outsb
ds
inc
push
mov
jo
dec
add
maxps
inc
iret
mov
decb
shlb
test
out
jl
or
push
ja
mov
cs
cs
test
add
cmc
adc
jnp
fidivrl
test
push
test
adc
rolb
mov
and
into
pop
pop
mov
enter
pop
pop
mov
cmp
mov
fmul
sub
enter
enter
add
push
aam
and
jmp
js
pop
pop
mov
push
daa
addr16
mov
repnz
mov
icebp
jno
add
movsl
daa
inc
xchg
dec
jle
jae
sbb
sbbb
cli
add
sub
test
mov
mov
int3
in
icebp
pusha
pop
imul
add
faddl
aaa
jae
sub
mov
pop
nop
popa
jmp
add
std
call
add
push
inc
jmp
add
daa
mov
rclb
icebp
pop
insl
sub
jmp
in
push
inc
jmp
fistl
cld
dec
iret
adc
or
push
inc
jmp
scas
clc
mov
jmp
icebp
add
cmc
into
adc
mov
jmp
xchg
repnz
mov
icebp
add
push
icebp
mov
pusha
add
aad
cmc
add
std
xchg
dec
lret
mov
mov
jmp
or
sub
ljmp
add
call
adc
sbb
pushf
adc
sub
int3
xchg
imul
imul
rol
stos
je
mov
or
jnp
call
and
imul
add
mov
fs
repz
jmp
insb
rorb
roll
rorl
rcll
into
aam
jo
xlat
pop
inc
jb
inc
ja
out
cmp
and
push
mov
cli
repnz
mov
sbb
adc
dec
dec
sbb
test
dec
and
xchg
adc
dec
out
push
and
fcmovnbe
lock
xchg
fnstcw
enter
enter
inc
or
lret
xchg
mov
mov
sub
add
mov
aas
and
addl
clc
sbb
inc
pop
clc
cltd
inc
push
icebp
mov
ucomiss
or
cmpsb
or
arpl
andl
dec
test
jmp
aas
xor
push
mov
add
mov
jmp
sbb
sub
push
popf
sub
cwtl
sub
es
mov
testb
out
mov
loop
cmc
push
and
mov
mov
icebp
sbb
add
aas
dec
je
fst
mov
loop
mov
jb
call
jae
mov
jg
jae
jle
pop
pop
add
mov
cmp
icebp
call
push
std
add
mov
clc
pop
insb
pop
jle
bound
sub
xchg
divl
ja
inc
int
adc
mulb
scas
hlt
out
stos
clc
not
jo
ds
stc
mov
inc
xor
in
icebp
rolb
imul
cld
add
mov
clc
jns
loopne
push
add
mov
sbb
mov
sbb
inc
sub
jae
mov
sbb
popf
adc
loope
sbb
inc
pop
in
fs
loope
xlat
cmpl
or
adc
stc
xor
xor
sbb
inc
nop
sbb
mov
push
inc
loopne
hlt
daa
inc
add
mov
ret
push
and
hlt
test
es
clc
je
inc
clc
faddp
in
arpl
dec
mov
out
test
push
or
stos
dec
pop
cwtl
and
mov
xchg
call
jb
jno
adc
or
inc
xchg
jnp
in
push
mov
add
pop
ret
clc
cs
push
add
add
ret
popa
int3
mov
or
push
or
and
push
and
xor
dec
add
stc
jo
jnp
bound
das
sbb
test
rorl
imul
add
imul
pop
stos
xchg
xor
lea
jg
xlat
fildll
add
sbb
lods
mov
sbb
movsl
std
sldt
lods
add
hlt
xlat
sbb
das
in
hlt
xlat
and
into
sub
aaa
fnsave
das
loope
aas
ja
cmp
xchg
sbb
jmp
inc
std
out
icebp
xlat
add
incb
insl
cmp
ljmp
adc
xchg
add
int
aaa
push
stos
xor
xchg
out
cmpsl
pop
stc
imul
push
icebp
add
add
ds
imul
push
icebp
add
aam
add
mov
jmp
push
stc
neg
dec
mov
faddl
add
push
icebp
add
clc
testl
and
add
push
icebp
add
fdivrp
testl
push
icebp
add
dec
cld
clc
pushl
mov
add
cld
clc
jmp
mov
add
mov
add
add
add
cld
clc
call
mov
add
icebp
add
lods
cld
clc
jns
add
add
icebp
add
int
clc
decl
add
add
icebp
add
lods
std
clc
ljmp
ljmp
std
clc
jp
aaa
add
aaa
add
lock
sub
call
or
push
or
add
push
jmp
clc
lods
push
ds
data16
ds
or
push
or
clc
mov
xlat
ds
hlt
xlat
ds
or
push
sub
clc
insb
sub
ds
and
ds
or
push
dec
hlt
clc
dec
or
ds
adc
ds
or
push
imul
sub
xor
push
mov
add
push
mov
clc
or
repz
push
scas
repz
push
or
push
stos
repz
add
in
xchg
repnz
push
push
aas
push
or
push
icebp
jmp
add
mov
test
pusha
jmp
sub
jmp
add
loope
add
loope
add
loop
add
loope
add
loope
add
loope
add
loope
add
loop
add
loop
add
loop
add
loopne
add
loopne
add
add
add
jmp
add
loopne
add
jmp
add
loopne
add
loopne
jmp
push
stc
adc
push
std
adc
push
in
adc
push
mov
jmp
push
int
jmp
push
adc
adc
push
sbb
adc
push
aad
jmp
push
in
adc
push
xor
jmp
add
push
xor
adc
push
cmp
adc
push
cmc
adc
push
outsl
adc
push
or
adc
push
push
adc
push
pop
adc
push
pop
adc
push
dec
adc
push
adc
adc
cli
in
mov
adc
in
je
ljmp
adc
in
mov
stos
in
inc
adc
in
adc
stos
in
add
add
stos
in
or
jp
cld
adc
add
push
hlt
adc
clc
adc
in
adc
mov
adc
mov
cmp
mov
adc
cmc
mov
sub
movsb
adc
cmc
test
cmp
xor
sub
and
sub
sub
cli
hlt
sbb
cli
hlt
and
push
fiaddl
sbb
fiaddl
sbb
add
fiaddl
adc
add
fiaddl
or
add
add
fiaddl
add
add
inc
fiaddl
clc
pop
fiaddl
hlt
push
fiaddl
lock
fiaddl
in
inc
fiaddl
or
add
push
fiaddl
stos
arpl
add
inc
fiaddl
in
cmp
add
inc
fiaddl
movsb
inc
fiaddl
int3
pop
fiaddl
sub
add
dec
fiaddl
mov
pop
fiaddl
mov
fiaddl
mov
fiaddl
mov
fiaddl
lods
pop
icebp
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
jmp
add
incb
jmp
push
sbb
jmp
push
adc
jmp
push
or
jmp
push
add
jmp
push
lods
adc
push
cmc
pop
jmp
push
in
push
jmp
push
in
jmp
push
inc
adc
push
sub
adc
push
roll
jmp
add
push
int
jmp
push
lds
jmp
push
std
pop
jmp
push
mov
jmp
push
lods
push
jmp
cmp
lods
push
sub
lods
push
sub
mov
cli
icebp
movsb
push
cli
icebp
test
ljmp
push
cli
icebp
xchg
push
cli
icebp
cwtl
push
ljmp
push
mov
icebp
int3
push
stos
icebp
rorb
stos
icebp
les
add
mov
icebp
mov
push
stos
icebp
rorl
jp
mov
jp
pop
push
push
orb
icebp
jbe
jp
mov
jp
inc
punpckhdq
fs
inc
push
cmp
xchg
cmp
sub
inc
push
push
fiaddl
inc
pop
fiaddl
push
dec
fiaddl
and
add
fiaddl
adc
fiaddl
and
pop
fiaddl
sbb
add
add
fiaddl
mov
imul
test
pop
fiaddl
js
fiaddl
fimull
add
cmp
add
inc
fiaddl
lock
fiaddl
in
push
fiaddl
call
inc
fiaddl
loopne
fiaddl
fcoml
add
dec
fiaddl
adc
add
icebp
jmp
add
jmp
add
std
jmp
add
add
std
jmp
add
add
ljmp
std
jmp
add
std
jmp
add
std
jmp
add
std
jmp
add
add
add
add
add
jmp
add
jmp
add
jmp
add
add
incb
jmp
push
popl
jmp
push
xchg
jmp
push
sub
jmp
push
adc
jmp
push
or
jmp
push
add
jmp
push
stc
add
jmp
push
in
add
push
jmp
add
push
loope
jmp
push
flds
push
aad
jmp
add
push
adc
pop
jmp
push
daa
or
push
and
jmp
push
es
rorb
mov
cmp
mov
or
out
mov
cmp
movsb
or
out
test
sub
pushf
or
out
mov
cli
in
movsb
or
in
test
ljmp
or
in
xchg
or
in
repnz
ljmp
adc
add
mov
in
push
stos
in
fimull
mov
in
rorb
stos
in
push
stos
in
pusha
or
in
push
or
in
pop
or
in
dec
or
in
push
or
fadds
dec
push
fadds
dec
dec
fadds
inc
inc
fadds
inc
pop
fiaddl
cmp
fiaddl
cmp
add
fiaddl
xor
add
fiaddl
sub
add
fiaddl
and
add
fiaddl
sbb
add
add
fiaddl
adc
add
fiaddl
or
add
fiaddl
add
add
pop
fiaddl
clc
dec
fiaddl
hlt
dec
fiaddl
lock
fiaddl
in
pop
fiaddl
call
dec
fiaddl
loopne
fiaddl
fcompl
add
dec
icebp
jmp
add
cld
jmp
add
cld
jmp
add
sti
jmp
add
add
sti
jmp
add
cld
jmp
add
sti
jmp
add
add
add
ljmp
sti
jmp
add
sti
jmp
add
sti
jmp
add
cmc
jmp
add
cld
jmp
add
cld
jmp
jmp
push
jo
jmp
add
push
push
add
jmp
push
orl
jmp
push
insl
or
push
jno
jmp
push
imul
push
adc
push
add
or
push
std
or
push
add
push
cmc
or
push
stc
or
push
in
or
push
icebp
or
push
in
jmp
push
fisttpll
jmp
add
push
aad
jmp
stos
repnz
jp
lock
in
push
call
or
cmp
or
xor
cmp
rorb
cmp
les
sub
enter
lods
or
repnz
or
repnz
or
icebp
mov
or
icebp
cwtl
or
icebp
mov
cli
icebp
nop
or
icebp
test
add
ljmp
or
icebp
test
stos
icebp
in
stos
icebp
insb
or
fadds
insb
dec
fadds
push
pop
fadds
pusha
pop
fadds
pop
dec
fadds
pop
dec
fadds
push
pop
fadds
push
pop
fadds
dec
dec
fadds
dec
dec
fadds
xlat
pop
fiaddl
push
pop
fiaddl
dec
dec
fiaddl
dec
dec
fiaddl
inc
pop
fiaddl
inc
pop
fiaddl
cmp
fiaddl
cmp
add
add
fiaddl
and
add
fiaddl
sbb
add
fiaddl
adc
add
fiaddl
cmpsl
dec
fiaddl
add
fiaddl
add
add
dec
fiaddl
clc
dec
icebp
jmp
add
cli
jmp
add
jmp
add
cli
jmp
add
cli
jmp
add
add
cli
jmp
add
stc
jmp
add
stc
jmp
add
stc
jmp
add
clc
jmp
add
stc
jmp
add
stc
jmp
add
stc
jmp
add
stc
add
push
gs
push
imul
jmp
push
push
or
push
pop
or
push
mov
jmp
add
push
push
or
push
inc
or
push
dec
or
push
cmp
or
push
xor
or
push
sub
or
push
and
or
push
sbb
or
push
jnp
jmp
push
jae
jmp
push
imul
push
outsl
or
push
arpl
push
or
jmp
push
pop
or
mov
out
push
add
stos
out
pop
or
out
push
or
out
in
stos
out
call
or
out
or
repz
out
jp
jmp
jp
fisttps
push
jecxz
push
xor
cmp
or
out
iret
or
out
rorl
sub
or
out
lret
or
out
sbb
sub
push
or
out
adc
cli
in
push
or
in
scas
or
in
mov
add
ljmp
or
in
lahf
or
add
pop
fadds
fwait
pop
fadds
xchg
dec
fadds
xchg
dec
fadds
pop
fadds
mov
add
dec
fadds
jg
fadds
jnp
fadds
ja
fadds
jae
fadds
ret
add
dec
fadds
mov
fadds
mov
lret
pop
lret
dec
lret
dec
lret
add
pop
lret
pop
lret
dec
lret
dec
lret
pop
lret
pop
lret
dec
lret
dec
lret
pop
icebp
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
ljmp
and
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
push
repz
push
fisttps
jmp
push
out
jmp
push
iret
or
push
lret
or
push
xlat
or
push
rorl
jmp
add
push
mov
or
push
ret
or
push
scas
or
push
stos
or
push
mov
jmp
push
lahf
or
push
fwait
or
push
cmpsl
or
push
mov
or
push
mov
jmp
push
xchg
or
push
jg
jmp
push
xchg
jmp
cli
xacquire
ljmp
or
repnz
bnd
ljmp
add
add
repnz
or
repnz
repnz
or
repnz
or
repnz
or
push
or
inc
or
dec
or
or
inc
or
or
cmp
push
or
repnz
cmp
or
repnz
sub
push
or
repnz
cmp
push
or
repnz
push
enter
add
add
pop
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
lret
add
pop
lret
dec
lret
dec
lret
pop
lret
pop
icebp
jmp
add
jmp
jmp
add
jmp
jmp
add
jmp
add
jmp
add
jmp
jmp
add
call
jmp
add
jmp
or
jmp
jmp
add
jmp
jmp
add
jmp
jmp
push
wbinvd
jmp
push
testl
jmp
push
jmp
jmp
push
push
add
push
out
or
push
call
push
jecxz
call
push
lret
call
add
push
call
push
iret
call
push
mov
call
push
mov
call
push
mov
call
push
fwait
call
push
mov
ljmp
out
cmpsb
pop
sub
pop
add
cmp
push
add
sub
dec
add
cli
out
inc
add
ljmp
add
add
out
jle
cli
out
addb
out
jbe
ljmp
add
stos
out
sub
mov
out
bound
stos
out
push
pop
stos
out
pop
pop
jp
dec
pop
jp
push
pop
push
inc
pop
push
std
add
out
add
push
ss
push
cmp
push
enter
enter
enter
enter
enter
add
and
push
dec
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
add
jmp
add
lock
add
lock
add
out
jmp
add
out
jmp
add
out
jmp
add
out
jmp
add
out
jmp
add
out
jmp
add
jmp
add
jmp
add
out
jmp
add
out
jmp
add
add
out
jmp
add
out
jmp
add
add
push
repnz
call
push
fiaddl
jmp
push
pop
call
push
pop
call
push
ud0
push
adc
call
push
sti
call
push
add
call
push
jmp
call
push
repz
call
add
push
call
push
jecxz
call
push
lret
std
call
push
sar
call
push
mov
std
call
push
movb
repz
add
cmp
mov
add
sub
cmpsb
add
cmp
sahf
add
sub
xchg
add
add
cli
repnz
ljmp
add
ljmp
add
mov
bnd
stos
repnz
push
mov
repnz
jp
pop
add
push
enter
enter
enter
enter
enter
enter
enter
enter
add
add
dec
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
icebp
jmp
add
in
jmp
add
add
in
jmp
add
in
jmp
add
out
jmp
add
out
jmp
add
in
jmp
add
in
jmp
add
in
jmp
add
in
jmp
add
in
jmp
add
in
jmp
add
jmp
add
jmp
add
add
in
add
push
dec
std
call
push
xor
call
push
cmp
call
push
and
call
push
sub
call
push
adc
call
push
sbb
call
push
add
call
push
or
call
push
repz
call
push
sti
cld
call
push
jecxz
call
add
push
out
call
push
out
cld
call
push
xlat
add
push
fildl
jmp
mov
out
ljmp
out
loop
jp
add
fiaddl
push
into
add
rolb
jp
movb
out
pop
add
sbb
push
invlpg
out
adc
cmp
push
add
out
xor
sub
cmp
cmp
add
cmp
testl
add
sub
sti
add
out
out
add
out
repz
out
out
ljmp
add
out
jecxz
cli
out
xlat
add
out
fildl
ljmp
add
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
push
and
add
push
cmpsl
leave
inc
jno
enter
cld
call
aas
add
add
shrb
inc
sahf
lret
enter
std
call
inc
sbb
dec
inc
call
xchg
stc
and
clc
addr16
xor
sub
stos
es
adc
jmp
inc
push
loop
inc
lods
or
add
icebp
addb
adc
add
out
int3
test
adc
call
pop
out
sub
pop
int3
cmp
ret
call
add
in
inc
shrl
push
sarb
add
xor
test
test
cli
xlat
mov
dec
push
adc
and
ss
add
xor
test
jo
push
je
cmc
push
inc
add
iret
dec
or
and
add
repz
dec
dec
ds
mov
in
xor
jmp
fsubs
mov
iret
cmp
xlat
xor
xchg
dec
ds
cmpl
out
js
imul
sbb
call
stos
rorb
stc
fwait
clc
call
lcall
jmp
nop
inc
call
add
adc
cmp
jmp
dec
jns
push
add
jmp
xor
cmp
or
jp
dec
sub
notl
add
cmp
push
add
ja
pop
sar
pop
mov
jge
xor
cmp
aas
push
add
mov
jle
cltd
into
mov
out
clc
mov
push
mov
cmp
adc
add
mov
inc
add
dec
mov
jge
xor
push
ja
cmpl
cwtl
idiv
cli
mov
inc
or
mov
push
push
add
dec
ja
mov
adc
sbb
inc
cli
divl
and
mov
ret
sti
divl
push
fadds
mov
pop
ret
jge
jl
mov
jnp
pop
dec
sbb
and
cld
call
addl
sti
or
adc
sub
data16
add
mov
stc
add
sahf
shl
xchg
int
jno
cli
out
inc
loopne
lods
into
jle
lahf
fcomp
add
stos
adcl
dec
call
inc
push
clc
sub
add
daa
dec
call
inc
repnz
push
jb
and
push
push
clc
sub
flds
fmull
jb
add
jno
add
loopne
mov
mov
add
add
sub
imull
push
icebp
add
test
call
stos
add
roll
leave
jge
subl
ret
push
out
std
sub
inc
adc
enter
das
sbb
adc
out
ret
inc
hlt
imull
or
sbb
adc
cmc
ret
push
push
inc
xchg
dec
push
icebp
ret
push
lret
pop
jl
dec
ds
subl
ret
ror
not
aam
psubsw
mov
jmp
out
mov
aaa
in
jne
jb
and
mov
jge
pcmpeqb
test
mov
jge
hlt
jae
rcrb
pushl
out
add
ret
call
das
je
add
fistpll
mov
clc
ret
negl
int
imul
subl
cld
incl
add
inc
and
mov
mov
sub
dec
adc
clc
test
push
inc
sbb
pop
fsts
jmp
lret
clc
hlt
xchg
jbe
dec
flds
rclb
dec
xor
or
clc
mov
push
dec
adc
testb
inc
sbb
cmp
mov
clc
add
test
ja
pop
flds
rclb
daa
cld
fs
fistl
mov
inc
push
push
xchg
push
jge
icebp
or
imulb
repnz
lret
fbstp
out
adc
push
in
in
push
cmpsb
leave
sti
fadds
enter
inc
inc
lock
out
leave
fldt
sbb
dec
xor
add
add
mov
repz
add
lods
inc
aam
leave
jge,pt
out
outsb
outsb
movsb
and
scas
inc
in
leave
push
fdivl
int
leave
out
dec
clc
ljmp
iret
xor
add
out
sub
mov
out
roll
fstpl
lret
and
insb
repz
dec
or
sbb
push
icebp
xorl
pop
pop
mov
imul
add
sbb
sahf
sbb
insb
repz
dec
or
jmp
lret
pop
enter
inc
negl
test
stc
xlat
dec
or
fwait
jae
jmp
lcall
ljmp
insb
mov
push
testl
iret
ret
ds
jp
cmp
dec
call
jmp
add
and
call
jmp
and
je
movsl
sbb
subl
add
jb
or
and
orl
jne
jb
push
mov
lods
clc
jmp
mov
mov
fdecstp
inc
pop
je
and
mov
call
stc
cmp
add
das
mov
ret
loope
sgdtl
add
and
mov
lret
loope
hlt
inc
rolb
sub
cmpb
push
add
popa
enter
cmpb
push
add
insb
enter
cmpb
push
add
cmp
clc
in
cmpb
push
add
and
clc
int3
fwait
cmpb
cmp
clc
mov
jnp
dec
flds
rclb
xchg
xor
jp
fcoms
jnp
enter
cmpl
call
enter
sbb
jmp
inc
fldcw
dec
bnd
sub
in
cmp
dec
sub
int
sbb
xor
hlt
sbb
lds
jb
cli
incl
les
out
push
cmp
fildl
xchg
add
xchg
jno
in
push
cmp
fistl
outsb
lds
inc
in
aas
cmc
push
add
ret
dec
lds
lock
and
sub
add
fadds
pop
mov
imull
jecxz
pushf
outsb
int
sbb
adc
add
lret
mov
add
ret
lret
sub
jae
pop
mov
pop
xchg
out
add
sub
xorl
stc
cmpsb
pop
inc
jbe
push
cmp
testl
aas
enter
inc
jbe
mov
adc
mov
or
or
call
add
test
cld
inc
lods
mov
scas
inc
dec
jb
and
fbld
divl
push
cld
push
lods
mov
add
divb
cmp
xorl
xor
add
jmp
test
sar
lds
jae
jns
testl
ret
scas
clc
addl
jae
xchg
add
call
jmp
or
call
push
pop
cmpb
cmp
jnp
mov
jp
add
cmp
imul
clc
insb
push
inc
push
push
pop
in
jle
ret
clc
nop
push
inc
adc
jge
adc
lock
jle
pop
xlat
das
or
cltd
mov
sbb
stos
mov
mov
mov
idivl
xor
mov
clc
rorb
stos
nop
fistpl
jl
into
decb
cmp
push
pusha
xchg
hlt
mov
add
lcall
stos
ret
sbb
ljmp
fnstenv
xchg
cmp
enter
push
dec
out
out
div
jmp
ret
push
popa
out
insb
adc
sub
sarl
fs
data16
rcr
dec
sbb
loopne
inc
mov
sbb
fldcw
add
outsl
inc
hlt
add
add
lds
lock
xchg
adc
shll
testl
loope
enter
inc
adc
call
inc
pop
fldln2
inc
xchg
enter
fildl
lods
outsl
inc
or
call
push
filds
pushf
inc
push
adc
insb
cwtl
call
jle
insb
dec
shrb
clc
test
ficoms
jbe,pt
dec
inc
cmp
mov
test
push
inc
adc
insb
shl
xlat
cmp
ljmp
imull
test
call
ljmp
incb
mov
call
ret
add
std
mov
inc
mov
ss
add
mov
and
hlt
add
mov
ja
cwtl
loope
push
add
inc
push
out
cmp
loope
or
jne
add
mov
idiv
cmp
inc
and
imul
xor
andl
pop
push
jno
push
je
hlt
add
mov
push
mov
jo
dec
push
ror
loope
push
shrb
mov
add
enter
vmaskmovdqu
leave
mull
pop
shl
test
out
testl
xchg
xchg
add
leave
mov
or
lret
add
aad
iret
or
rorb
and
ljmp
or
ret
jmp
mov
mov
pop
jae
int3
push
gs
add
pushaw
bswap
imul
add
push
pop
mov
jo
fildll
outsb
and
sbb
xor
out
or
das
push
std
push
pop
repz
pop
xchg
xor
add
xor
pop
jmp
jmp
rcll
xor
add
mov
int3
cmpl
mov
mov
insb
mov
jmp
add
add
mov
cltd
sar
add
lods
xor
imul
and
adc
pop
push
push
push
ja
jmp
subl
xor
adc
sbb
call
clc
dec
jl
lods
jae
scas
icebp
lds
jmp
push
cmp
in
lahf
lods
ret
es
add
push
icebp
mov
add
mov
push
icebp
ja
clc
call
jbe
push
aaa
call
xchg
not
adc
mov
mov
testl
rolb
add
ljmp
add
std
adc
faddl
adc
scas
pop
jbe
jl
jp
add
push
mov
sarb
jl
addr16
and
jg
add
jmp
jmp
or
jbe
jae
mov
xor
out
jae
mov
mov
xor
mov
stc
pushl
add
call
add
jg
push
std
add
inc
mov
clc
adc
or
stos
and
xchg
mov
clc
int3
dec
inc
push
push
adc
std
mov
add
push
lret
push
cmpsl
or
push
lret
bound
cli
repnz
cmpb
cmp
imul
clc
insb
push
cli
mov
ss
mov
mov
dec
fwait
xor
loopne
lock
mov
add
repnz
mov
mov
into
mov
nop
push
imul
stos
ret
jmp
add
add
bound
ljmp
push
icebp
push
sbb
outsb
cld
adc
call
das
pop
outsb
in
push
cmp
scas
push
leave
imul
incl
lds
outsb
dec
or
mov
xor
and
fcoms
imul
lea
sub
mov
pop
inc
add
int
or
add
cmp
rorl
mov
sbb
cmp
mov
add
push
icebp
mov
call
mov
push
icebp
ja
clc
adc
jbe
push
aaa
and
mov
shr
icebp
je
leave
jnp
push
push
jb
push
call
call
mov
fidivrs
stos
mov
cmp
add
iret
cs
pop
mov
repz
icebp
add
iret
xor
cmp
cmp
cmp
psubsb
mov
ljmp
in
jge
bnd
adc
clc
ret
out
mov
cli
add
test
fldl
mov
loope
insl
in
or
out
stc
mov
or
push
cmp
stc
insl
in
bnd
ret
add
out
add
sub
notl
ret
push
add
add
stos
repz
dec
mov
jl
rolb
insb
loop
repnz
ret
cmp
lret
lahf
movsb
mov
adc
or
mov
mov
jg
stos
sub
sti
in
clc
fcoml
push
push
add
add
add
mov
add
add
adc
clc
mov
inc
jb
in
xchg
dec
test
iret
sub
clc
jl
cli
mov
push
inc
ret
mov
shrb
add
lock
xor
or
inc
in
std
sub
hlt
mov
mov
mov
and
mov
test
addb
push
out
or
icebp
aaa
push
leave
jns
jmp
stos
stos
mov
sub
add
data16
mov
jmp
add
dec
ret
lahf
mov
adc
popa
jb
mov
add
jmp
mov
push
icebp
loope
addr16
jmp
push
icebp
add
pusha
icebp
add
add
push
icebp
add
push
icebp
add
or
testl
push
icebp
add
push
icebp
add
or
add
bound
add
push
icebp
add
mov
mov
xor
icebp
add
push
icebp
add
xchg
mov
inc
push
icebp
add
push
icebp
add
push
icebp
add
addr16
add
mov
add
add
add
jp
add
push
hlt
decl
out
add
icebp
add
sub
add
data16
hlt
jmp
inc
cmc
ljmp
icebp
add
sub
add
push
mov
add
ds
cmc
ljmp
add
mov
add
cs
cmc
mov
lock
nop
mov
add
mov
add
lock
cmp
add
cmpsb
inc
cmc
call
add
push
lret
push
sbb
cld
fs
add
cld
push
lret
push
lret
push
xchg
sar
cmp
push
add
add
push
lret
push
lret
push
lret
push
lret
push
js
cld
add
int3
cld
cld
inc
int3
cld
hlt
aas
int3
cld
in
pop
lret
cld
in
int3
cld
add
fsubl
lret
cld
int3
ret
mov
cld
mov
adc
cld
movsb
mov
mov
xchg
sub
mov
jg
sub
mov
addr16
mov
push
mov
mov
inc
mov
mov
aaa
mov
mov
daa
mov
mov
add
pop
mov
mov
pop
mov
add
mov
divl
dec
ret
out
adc
ret
xlat
mov
ret
iret
mov
ret
popf
ret
jmp
shrl
fcmovnb
lahf
mov
pop
xchg
mov
gs
mov
icebp
xchg
mov
pop
xchg
mov
pop
xchg
mov
inc
xchg
mov
pop
xchg
mov
xor
mov
mov
add
mov
aad
mov
ret
adc
add
push
mov
jmp
lods
mov
lahf
movsb
mov
jge
mov
xorl
ja
mov
andl
andl
mov
mov
lahf
arpl
div
xor
mov
shll
mov
add
jmp
inc
cmc
jmp
inc
cmc
incl
add
inc
cmc
incl
cmc
decl
inc
cmc
decl
inc
cmc
jp
cmc
incl
aas
cmc
decl
cmc
ljmp
cmc
incl
and
dec
and
ljmp
cmc
ljmp
and
pushl
sbb
mov
and
call
and
lcall
and
fisubs
cmc
call
jmp
and
pushl
cmc
incl
push
and
call
jb
lods
sbb
movsb
push
jno
pushf
cmp
xchg
out
jo
mov
test
jo
jl
jno
je
jno
insb
xchg
ret
cld
fs
mov
cld
push
mov
cld
dec
push
ret
cld
inc
mov
cld
cmp
ret
cld
xor
ret
cld
sub
int3
cld
and
int
sbb
int
adc
int
or
int3
cld
add
sar
cld
cltd
addr16
add
hlt
lods
addr16
in
mov
cld
in
imul
push
imul
ja
cld
int3
aas
insb
cld
lock
mov
scas
add
scas
daa
imul
scas
push
scas
leave
push
scas
xlat
push
scas
pop
push
scas
inc
push
scas
das
push
scas
adc
push
scas
xchg
scas
mov
scas
pop
push
scas
mov
imul
add
scas
shrl
scas
shrl
scas
leave
imul
scas
out
insb
pop
scas
lret
insb
ljmp
mov
out
scas
xchg
insb
fildll
add
lods
divl
lods
testl
lods
imull
lods
not
aaa
lods
not
das
lods
not
daa
lods
imul
ljmp
inc
call
lods
negl
add
clc
lods
imull
lods
not
call
lods
mull
test
test
mov
lods
mull
movsl
lods
imull
popf
lods
testl
lods
test
jle
testl
lods
testl
inc
and
ljmp
and
fisubs
cmc
incl
pop
cmc
mov
mov
mov
ret
jp
add
insb
icebp
add
xor
xorb
cmpb
add
mov
jmp
insl
hlt
cmp
add
pop
push
decl
ljmp
hlt
ljmp
hlt
lcall
hlt
pushl
hlt
pushl
jp
hlt
lcall
push
call
mov
cld
fcoml
add
add
enter
xchg
mov
cld
mov
jbe
cld
lods
pusha
mov
cld
pushf
pop
mov
cld
mov
mov
add
and
cld
insb
fs
add
mov
cld
dec
test
add
sar
je
cld
sub
sar
push
sar
mov
cld
adc
sar
add
sar
loopne
cld
cld
lock
imull
lret
out
iret
fildll
xlat
mov
stos
pop
sarb
imul
cmpsl
stos
cmp
rclb
xchg
xchg
stc
shlb
shrl
shll
rcrb
rclb
rorb
roll
inc
stos
push
sarl
jg
aaa
stos
pop
shrl
sub
daa
stos
mov
ret
lret
ret
add
adc
neg
adc
idivl
scas
testl
or
negl
xchg
lods
notl
lods
testl
lods
notl
lods
divl
nop
lods
testl
add
nop
lods
div
lods
idiv
xchg
lods
testl
xchg
lods
div
lea
testl
lods
idivl
push
lods
negl
lods
testl
mov
jle
hlt
jl
hlt
call
mov
pushl
hlt
jmp
mov
incl
hlt
call
hlt
out
mov
mov
scas
hlt
decl
hlt
incl
add
hlt
ds
hlt
incl
hlt
call
lcall
dec
scas
hlt
decl
hlt
incl
imul
jmp
hlt
call
mov
fdivs
ljmp
hlt
ljmp
hlt
call
ret
cld
sbb
cld
adc
mov
add
int3
cld
cld
mov
int
add
in
lcall
fsubrl
sar
aam
sar
int3
xor
cld
les
aam
mov
lret
lods
lods
sar
movsb
jle
cld
pushf
jo
cld
xchg
mov
cld
mov
aam
test
cld
jl
aam
je
mov
cld
fs
sar
pop
cld
int3
cld
push
hlt
int3
cld
dec
mov
cld
inc
mov
cld
cmp
sar
xor
jmp
add
add
hlt
add
out
add
out
push
jno
mov
jmp
pop
add
jno
mov
cmpsl
sti
add
lret
mov
cmpsl
mov
mov
cmpsl
xor
add
jmp
push
jno
add
pop
mov
cmpsl
sbb
jno
add
fiaddl
push
jno
add
aam
push
jno
mov
cmpsl
mov
cmpsl
call
add
add
mov
push
jno
mov
cmpsl
faddl
push
jno
jnp
cmpsb
mul
push
icebp
sub
icebp
add
add
testl
and
testl
add
divl
mov
movsl
mull
push
icebp
add
jmp
test
add
idivl
movsl
notl
mov
movsl
testl
push
cmp
or
gs
fisubs
adc
arpl
pop
cmpsb
push
outsb
int3
jo
ret
shlb
int3
jecxz
insb
iret
icebp
mov
mov
roll
rclb
xchg
repnz
gs
gs
shlb
xchg
jmp
add
mov
or
pmulhw
push
or
cmpsb
push
imul
dec
outsl
aaa
fs
xor
dec
in
popa
add
fs
xor
lahf
xor
fs
push
mov
outsb
push
outsl
add
mov
ja
lods
xor
push
push
cmp
scas
mov
lea
push
je
jno
gs
jnp
push
add
add
push
push
or
insb
jp
sbb
jo
sbb
aaa
xor
cmp
ss
pop
pop
inc
xor
sbb
push
arpl
sbb
lcall
mulb
sbb
in
push
arpl
popf
sbb
lock
push
out
or
shrl
adc
pop
xchg
push
lret
das
add
mov
rolb
out
sahf
push
cmpsl
cmp
xor
stos
pop
mov
jg
lea
cwtl
adc
adc
imul
and
insl
inc
inc
xor
cmp
daa
aas
icebp
cld
or
pop
inc
sbb
sub
xor
mov
add
sbb
and
xor
sbb
add
add
add
sub
inc
jmp
cmp
gs
or
jl
push
jmp
imul
mov
inc
jae
jp
test
jae
bound
push
jmp
cmp
inc
jge
adc
dec
sbb
add
push
das
gs
cmp
aas
inc
orl
cmp
divps
fs
add
dec
xor
add
adc
outsb
sbb
pop
add
dec
jmp
add
jmp
gs
outsw
dec
sub
fs
out
aam
mov
insb
inc
mov
pusha
jb
loopne
gs
push
popa
clc
aam
bound
fsts
sbb
inc
jb
fadds
sti
push
jb
in
test
mov
fsts
int
arpl
out
add
in
inc
add
xchg
jb
lret
push
aad
gs
add
cmp
dec
jo
fists
or
in
mov
data16
gs
fldenv
outsb
add
cld
cmp
xor
shrl
pop
add
push
ja
cwtl
add
dec
sub
mov
push
js
mov
push
dec
push
je
test
or
cmp
data16
add
imul
je
imul
push
add
jb
and
xor
ss
pop
inc
inc
mov
mov
lret
push
arpl
out
push
cmp
sbb
cld
adc
add
and
adc
push
sub
testb
in
ljmp
xor
jmp
repnz
es
xor
daa
mov
ret
adc
adc
nop
daa
test
xchg
add
cmc
xchg
and
xor
jne
or
jo
dec
sub
dec
adc
fwait
or
or
add
push
xor
add
bound
add
xor
sbb
pop
sub
add
or
sub
sbb
inc
inc
add
push
sub
aas
fldt
adc
xchg
pop
sub
ficompl
popf
outsl
or
xor
jnp
push
jnp
add
pop
push
data16
test
xchg
bound
bound
or
push
pushf
add
xor
gs
push
fdivrp
cmp
add
jae
or
jo
stos
repnz
push
add
sbb
jo
imul
add
insb
inc
push
loopne
popa
test
inc
imul
jne
into
pop
arpl
arpl
int3
pop
insb
repnz
jne
leave
dec
push
sub
icebp
add
add
popa
push
loopne
popa
into
loope
jb
bnd
int3
int3
data16
aam
inc
add
js
arpl
icebp
fiadds
int3
data16
aad
inc
xchg
imul
idiv
push
inc
xor
arpl
fisubl
dec
ss
add
push
iret
pop
je
jmp
dec
push
sahf
adc
fwait
sub
xchg
insl
push
sti
pop
je
jmp
adc
xchg
dec
push
mov
je
cmpsl
adc
mov
mov
add
dec
xchg
outsb
mov
mov
push
push
dec
imul
sub
inc
outsb
es
jae
sbb
push
xchg
outsb
jbe
dec
sub
cmp
aaa
push
dec
adc
cs
add
icebp
sub
xor
cs
or
push
cs
adc
outsl
add
pop
mov
pop
sti
rolb
add
xor
adc
and
add
lock
adc
sbb
xor
icebp
or
xchg
or
xchg
mov
sub
xor
xchg
jo,pn
push
xchg
push
mov
jo
jp
insb
or
add
xor
insl
inc
adcl
orl
inc
imul
push
push
add
pop
cmp
add
arpl
cmp
insl
adc
add
push
das
push
xor
cld
xor
xor
adc
add
cmp
mov
je
inc
fstl
lret
arpl
add
xchg
pop
pop
sahf
jb
push
jae
add
xchg
adc
inc
or
fsubr
arpl
testb
rcrb
data16
xchg
pop
insl
pop
cmc
rolb
rclb
je
fs
out
out
jne
insb
inc
adc
arpl
sti
arpl
cmc
out
xor
leave
arpl
arpl
aam
cmp
pop
shrb
int3
fs
cmc
in
movsl
shrl
shlb
or
imul
enter
aam
fs
roll
add
inc
add
mov
pop
je
jmp
push
orl
push
addl
push
push
and
and
jo
imul
push
je
fldl
sub
add
and
xor
add
std
inc
testb
imul
rorl
addr16
in
or
inc
out
fwait
xor
out
insl
loopne
sub
add
inc
push
je
push
pop
jae
movsl
inc
addr16
movsl
xor
push
dec
imulb
icebp
xchg
adc
push
icebp
sub
xchg
add
lods
push
js
jl
xchg
sbb
popf
sbb
jg
adc
dec
das
ss
pop
inc
xor
dec
sbb
dec
and
adc
push
icebp
xchg
add
push
push
inc
hlt
and
inc
add
cmc
or
or
adc
pop
add
repz
pop
fistpll
jmp
loopne
std
dec
jmp
adc
sub
repnz
sbb
mov
xchg
sbb
pop
mov
pop
jae
data16
test
add
xor
pop
sbb
data16
icebp
add
xor
jge
jae
jbe
addr16
add
add
push
add
bound
push
sub
insl
xor
or
sbb
add
xor
pop
pop
inc
inc
jae
xor
cli
prefetch
fwait
push
sub
pusha
daa
pop
test
add
add
sti
into
outsl
sbb
leave
add
rcll
in
add
repnz
iret
push
add
flds
dec
fildl
add
aaa
repz
gs
add
jb
int
gs
les
pop
int3
fs
pop
shlb
jg
add
stc
repz
gs
push
jb
shlb
imul
jo
ficoml
je
inc
frstor
pop
rcll
das
cmc
add
in
out
inc
gs
push
inc
push
scas
sbb
add
add
clc
dec
scas
pop
daa
push
nop
push
sbb
add
add
je
outsb
imul
pusha
popa
pop
add
notl
and
pop
insl
adc
xor
sub
sub
addr16
cld
xchg
push
sti
pop
je
aas
adc
and
outsb
sub
adc
sar
or
pop
insl
div
aaa
jb
xchg
pop
add
add
negl
and
cld
push
icebp
mov
mov
mov
push
mov
sub
xchg
mov
cmpxchg
and
push
mov
add
add
ljmp
jns
and
or
add
icebp
sub
xor
dec
pop
or
push
pop
cmp
add
lock
add
add
add
push
xor
sbb
pop
adc
push
pop
adc
aaa
add
repnz
sub
or
sub
pop
out
cmp
es
add
fs
fs
arpl
add
daa
pop
rcll
cmp
sub
mov
add
xor
pop
test
or
pop
icebp
add
push
sub
jne
add
add
xor
pop
test
pop
dec
pop
icebp
add
add
add
or
pop
inc
push
adc
sub
bound
sub
insl
incb
push
add
in
inc
mulb
push
int3
fs
dec
lret
mov
sti
jae
push
cs
in
lret
add
cmp
inc
gs
jb
out
data16
sbb
imul
jmp
fs
lret
insb
imul
insb
dec
cmc
imul
sub
xor
lret
mov
cmc
push
jb
into
dec
gs
add
lcall
jb
mull
outsb
add
cld
inc
negb
xor
roll
push
inc
or
imul
cmpsl
cmovae
fs
inc
jbe
cmp
and
orb
jl
sub
popa
pop
add
cld
inc
outsb
adc
arpl
sbb
insl
push
mov
cmp
sub
jno
cmp
daa
xlat
cld
jnp
negl
push
hlt
pop
insl
add
or
add
lock
add
out
cmp
decl
or
out
cld
es
icebp
xchg
add
iret
sbb
loop
xchg
shlb
push
fistl
sbb
aaa
mov
mov
add
hlt
lcall
and
add
sbb
outsb
add
sub
ljmp
sbb
daa
cs
sub
add
sub
add
push
daa
pop
xor
xor
and
xor
dec
sbb
xor
inc
push
xor
push
jmp
sub
inc
cld
inc
push
push
jmp
insb
add
outsb
fldt
add
push
xor
sbb
push
pop
push
xor
dec
sbb
xor
dec
lea
add
pop
xchg
and
jae
xor
push
jp
xor
test
add
ds
pop
adc
jno
dec
pop
pop
add
fisubrl
in
popa
or
cmc
inc
gs
enter
lock
dec
aam
add
testb
xor
popa
gs
jp
in
fldcw
in
gs
xor
add
out
push
jae
repz
add
fldcw
in
dec
ret
in
bound
repnz
mov
loop
gs
movl
js
out
imul
add
push
xor
sub
cwtl
add
and
pop
fs
cld
ret
push
lret
sub
push
fs
out
inc
imul
add
add
sti
sub
std
dec
cmp
mov
aas
cmp
mov
push
adc
push
add
push
push
push
pop
outsl
push
and
jge
add
std
inc
jbe
das
imul
push
add
add
xor
sub
icebp
jmp
daa
xor
inc
push
das
push
dec
xor
push
dec
xor
add
push
icebp
add
and
inc
push
jmp
pop
add
lock
loopne
xor
adc
add
repz
mov
push
sti
adc
or
xchg
push
inc
data16
fdiv
mov
lahf
push
mov
xor
scas
add
repnz
es
lcall
adc
es
mov
add
sub
add
push
xor
pop
inc
je
add
push
das
push
jae
pop
dec
cmp
add
xor
ds
inc
pop
add
es
dec
sbb
sub
add
adc
push
lods
add
pop
insl
jmp
push
and
jae
pop
int3
push
filds
cmpsb
jne
inc
aad
add
xor
pop
lods
add
xor
add
pop
sub
inc
adc
pop
add
out
hlt
add
loope
outsb
dec
in
push
je
lret
sbb
popa
gs
out
gs
loope
push
sbb
arpl
out
adc
pop
in
push
dec
out
insb
inc
pop
jecxz
jne
loope
jo
rorb
inc
rclb
dec
out
sub
insl
in
outsb
add
gs
push
sbb
sti
pop
outsl
or
add
mov
inc
gs
shll
push
push
aam
dec
mov
aad
imul
push
decl
daa
push
pop
jne
gs
jae
add
add
pop
xor
or
dec
and
pop
je
xor
push
xor
inc
add
out
jmp
outsb
cld
mulb
insl
loopne
adc
dec
adc
cli
cld
outsl
push
xlat
push
arpl
mov
pop
pop
lahf
mov
push
cwtl
add
push
punpckhwd
mov
sbb
push
mov
push
icebp
imul
xchg
das
imul
and
xor
xchg
push
icebp
inc
add
and
add
sbb
adc
dec
adc
push
add
icebp
sub
lock
pop
pop
adc
sbb
push
icebp
and
adc
xor
add
adc
mov
repz
mov
sti
cmpxchg
stos
pop
mov
inc
push
icebp
jbe
xchg
push
rolb
int
mov
icebp
add
push
popa
mov
dec
sbb
add
sbb
sahf
add
add
fcoml
popa
test
jg
sbb
inc
sbb
cmp
cmp
push
inc
adc
sub
je
inc
icebp
add
pop
std
pop
xor
sbb
inc
adc
jmp
xor
inc
sub
imul
jmp
dec
adc
movb
ja
add
into
mov
insb
gs
sub
add
inc
out
inc
ja
notl
scas
out
imul
cmp
int3
mov
pop
insb
into
ret
outsw
sbb
add
shr
cmp
or
pop
outsb
push
loopne
push
dec
loopne
inc
jp
push
add
fbstp
dec
into
insb
gs
push
add
add
gs
int3
imul
in
pop
hlt
gs
call
imul
data16
push
or
icebp
push
adc
mov
adc
inc
adc
cwtl
add
dec
and
or
imul
and
add
ja
insl
aas
insl
adc
push
adc
add
std
inc
cs
arpl
add
cld
add
push
rcll
arpl
int
imul
and
in
push
jo
test
arpl
jecxz
imul
int3
and
icebp
or
adc
lock
and
into
push
mov
icebp
mov
xchg
or
xor
lods
and
jmp
and
jge
sub
add
and
inc
or
add
xor
push
and
dec
pop
sub
es
repnz
repnz
cmp
lock
sbb
or
or
or
add
add
cld
cld
adc
add
icebp
add
push
cmp
jle
jae
push
and
mov
cld
dec
jmp
inc
xor
xor
push
lahf
add
adc
inc
cld
push
nop
aas
pop
bound
push
mov
stos
cld
jo
jg
insl
mov
inc
and
jmp
inc
cld
jo
pop
sbb
popa
std
dec
dec
pop
icebp
add
jb
pop
std
cmp
inc
std
jb
pop
cs
and
add
inc
cld
jo
xchg
adc
loop
jns
shlb
add
sub
das
add
popa
inc
or
push
je
leave
arpl
notl
push
inc
gs
loop
gs
out
icebp
add
fbld
stos
loope
arpl
loopne
push
int
arpl
out
push
add
loop
push
jecxz
inc
jne
je,pn
rcr
imul
jle
dec
jo
jg
push
data16
pop
add
add
cltd
inc
jne
scas
jb
inc
andb
out
cmp
jae
into
std
inc
mov
iret
push
mov
mov
add
in
bound
call
bound
inc
call
xchg
push
cmp
push
popa
jno
data16
insl
ljmp
pop
add
push
pop
fbld
pop
lock
add
xor
ljmp
sub
pusha
mulb
std
imul
jmp
imul
lret
lock
jmp
mov
or
add
out
sbb
mov
add
clc
mov
loop
sbb
into
add
adc
divl
mov
jle
fwait
call
orb
call
je
mov
add
faddl
xchg
xor
cmc
sub
decb
repnz
pop
add
adc
xor
push
aad
incl
repz
push
clc
std
sub
dec
data16
inc
pop
std
sbb
push
add
jb
dec
or
adc
push
and
xor
call
fsubl
sbb
add
or
je
push
sbb
add
push
enter
orl
mov
ficoms
insl
mov
ficoms
jno
ret
push
push
mov
mov
inc
mov
bound
or
cwtl
push
mov
inc
dec
addb
add
cwtl
xor
add
bound
lcall
xor
bound
add
xor
inc
mov
ds
movsl
add
outsb
jo
mov
gs
jns
dec
or
xor
dec
sbb
push
add
repnz
gs
scas
bound
mov
ret
xchg
idiv
insl
repz
jae
xchg
imul
ja
movsb
pop
fs
repz
subb
test
add
imul
cli
xor
incb
and
repnz
ljmp
jb
cmc
out
mov
xchg
cld
inc
ret
imul
enter
lds
out
imul
fdivl
cmp
push
ds
dec
arpl
add
pop
jmp
outsl
je
pop
xor
imul
jmp
add
push
or
in
dec
ss
jno
dec
fcompl
pop
lock
add
mov
add
sub
jmp
and
inc
stc
icebp
and
sbb
adc
jmp
lds
ljmp
and
in
cmpsb
xor
add
clc
mov
cmc
repz
es
xor
icebp
mov
add
imul
or
imul
lret
add
add
cwtl
mov
add
add
movsb
or
daa
dec
sub
add
jo
imul
push
or
dec
and
sbb
imul
cmp
pop
daa
cmp
arpl
and
push
dec
and
add
cmp
push
sub
push
stc
xor
pop
jl
cmpsb
push
and
clc
xor
hlt
das
jns
in
or
or
push
push
add
jecxz
push
lods
cmpsl
jl
cltd
push
add
ret
or
add
mov
add
sbbb
xchg
add
cmc
push
popa
lea
jae
mov
or
jb
cmpsb
idiv
add
push
lea
fs
mov
je
mov
mov
push
lock
jb
movsb
imul
mov
jmp
lock
popa
testb
push
sub
test
fimull
pop
jo
mov
add
mov
push
jae
bound
pop
loop
cs
dec
cld
dec
roll
add
out
push
inc
cld
dec
sbb
loope
or
pop
int
jmp
aam
insb
xchg
add
in
xor
shrb
jecxz
pushf
mov
push
push
mov
bound
out
jae
dec
mov
enter
sub
add
push
dec
loopne
andl
loopne
in
add
cmpsl
in
jbe
add
xchg
enter
in
adc
add
sahf
loopne
and
loopne
sub
rcrb
pop
aaa
cmp
lock
ds
cmp
stc
sbb
inc
add
out
sbb
out
adc
xchg
incl
jmp
outsb
icebp
pop
add
add
mov
adc
jmp
test
int3
in
add
lret
or
ljmp
shl
pusha
icebp
add
push
mov
insb
mov
push
aas
fwait
mov
add
push
mov
bound
xor
mov
mov
jge
mov
addr16
adcl
inc
push
xor
sub
addr16
arpl
bound
add
je
outsb
sbb
add
push
mov
add
bound
daa
jns
push
sub
mov
push
lret
adc
sbb
sbb
add
jae
or
cmp
out
jae
cmc
mov
leave
mov
pushl
inc
gs
inc
ret
mov
hlt
xor
gs
xor
imul
add
in
xor
cmp
pop
bound
cwtl
inc
inc
cmp
jno
mov
dec
bound
push
je
hlt
add
bound
xchg
inc
inc
cmp
xchg
jae
jb
mov
fstl
imul
inc
nop
mov
or
adc
inc
pusha
std
dec
ss
out
add
inc
insl
mov
push
cli
std
dec
xor
xlat
inc
adc
jae
and
jl
incb
xor
jmp
dec
divb
in
push
lods
int
cmp
rolb
sbb
push
push
xorb
out
shrb
icebp
or
repnz
and
add
add
mov
out
std
mov
add
mov
test
pushf
loopne
std
test
inc
or
out
lods
jbe
add
and
out
pop
or
loopne
std
jmp
sarl
es
jmp
cmp
loopne
ljmp
sub
jecxz
add
shll
mul
mov
add
icebp
add
add
add
and
fists
add
loop
pop
enter
shl
punpckhbw
push
outsb
add
mov
bound
sahf
or
mov
lret
pop
xchg
lods
jne
and
jb
mov
add
movsb
adc
and
push
add
mov
insl
sub
add
jl
pop
cmp
pop
inc
xor
or
add
adc
divl
push
mov
add
test
push
mov
test
imul
xor
insb
lods
andl
ljmp
dec
jno
bound
mov
idiv
out
lock
outsb
daa
mov
add
sbb
je
cmpb
cmp
and
cmp
insb
add
bound
mov
pop
nop
jae
imul
add
shlb
jae
in
jae
jle
insl
outsb
inc
sti
cld
inc
rcll
xor
cmp
or
insl
ds
insl
movsl
out
add
ss
mov
push
repz
es
icebp
jbe
pop
aad
adc
fnsave
neg
inc
jecxz
in
sub
jae
mov
lcall
loop
out
stc
rol
xor
imul
sbb
mov
cmp
mov
add
lds
push
add
std
in
repz
fwait
add
loope
or
clc
jno
aad
in
jb
add
or
mov
aas
std
mov
cmc
das
xor
add
icebp
mov
call
sub
xor
add
icebp
mov
loop
cld
es
icebp
add
add
lock
loopne
cmp
icebp
cld
sub
jmp
add
addr16
xor
add
add
addr16
sub
outsb
add
sti
inc
stc
and
push
dec
push
sub
sti
add
add
pop
aad
or
cmovb
push
adc
jo
jmp
pop
fwait
mov
std
cmp
mov
mov
and
fwait
push
je
mov
dec
jmp
jb
pop
pop
jno
insl
cmp
add
pop
jo
insl
pop
mov
add
mov
add
aas
outsb
jle
outsb
dec
imul
pop
imul
dec
push
imul
mov
or
je
push
push
lods
dec
imul
add
inc
gs
inc
or
jae
dec
idiv
out
hlt
inc
fiadds
insb
add
stc
push
push
push
sbb
outsb
int3
push
push
add
aas
outsb
push
outsb
punpckhwd
inc
jae
push
into
out
insb
adc
frstor
add
adc
jae
sbb
arpl
or
inc
mov
call
lcall
add
data16
std
clc
cmp
stc
frstor
xlat
ds
cmpsl
mov
push
add
xor
cmpsl
mov
xchg
test
sub
clc
call
stc
push
test
jae
mov
insl
adc
out
inc
xor
jl
dec
cs
outsl
cli
fwait
out
popa
in
je
inc
add
inc
jmp
sbb
push
fincstp
aad
leave
ljmp
lds
xor
add
rcrb
clc
mov
sbb
add
mov
sti
call
or
and
mov
bswap
mov
scas
call
fsubrl
or
jmp
call
mov
adc
icebp
xor
mov
sub
jbe
hlt
sarb
out
repnz
ja
not
dec
ficompl
jo
jo
push
add
arpl
pop
outsb
notl
enter
xlat
add
enter
fldcw
push
pop
cld
add
and
mov
enter
loope
sti
daa
fsubrs
cmp
fsubl
loop
data16
insl
idivl
repz
push
fidivl
mov
insb
pushl
add
test
dec
test
dec
outsb
add
aam
push
add
gs
inc
jb
sbb
popa
push
bound
icebp
add
xor
push
bound
pop
imul
push
push
add
push
jae
dec
cs
push
imul
stc
inc
gs
aaa
pop
insb
push
inc
push
jb
lock
mov
gs
or
xchg
bound
xchg
das
idiv
add
mov
inc
imul
lock
gs
mov
jb
mov
imul
je
insb
push
pop
or
jno
imul
shl
in
adc
imul
repnz
dec
scas
shrb
mov
call
outsl
lahf
icebp
aad
xchg
icebp
loopne
scas
push
loopne
jo
in
jae
add
fisubrs
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
icebp
jmp
add
icebp
daa
adc
and
adc
call
add
fiadds
push
icebp
push
sbb
icebp
cmp
adc
jmp
add
add
jmp
daa
xchg
icebp
jmp
add
add
out
push
icebp
jmp
add
pop
bound
or
push
icebp
leave
add
or
add
jmp
add
jmp
fldt
add
repnz
add
dec
icebp
add
icebp
add
imul
loope
icebp
add
push
icebp
add
icebp
add
push
icebp
add
push
icebp
add
add
mov
aaa
jmp
push
icebp
add
sbb
inc
jmp
push
icebp
add
scas
repnz
jmp
push
icebp
add
fcomi
inc
jmp
push
icebp
add
xchg
stc
inc
jmp
push
icebp
add
fs
inc
jmp
push
icebp
cmpb
inc
jmp
mov
cwtl
push
inc
stos
in
add
stos
imul
add
add
and
sbb
dec
inc
lcall
lods
das
jns
inc
pop
cmp
and
push
int3
je
sti
jle
xchg
sub
lea
cltd
inc
adc
add
inc
mov
aam
cmc
fidivrl
pop
inc
scas
les
mov
mov
insl
mov
inc
inc
call
mov
or
jnp
mov
fiadds
add
jg
call
jns
jno
push
outsl
es
andl
repnz
stc
adc
cmc
pop
repz
ficomps
je
enter
shl
mov
pushf
adc
mov
cmp
and
xor
mov
push
ss
push
xchg
rolb
jg
outsl
xor
pop
test
shrl
insb
mov
mul
lock
test
pop
xlat
popf
cmp
ror
jno
jmp
aaa
mov
aaa
lahf
daa
cltd
es
inc
dec
repz
sti
movsb
test
movsb
fistpll
dec
cmpsb
jbe
fildl
into
add
decl
divl
insl
push
or
add
daa
sub
push
movsb
out
jge
daa
fldt
out
and
jle
dec
xor
lods
imul
fisubs
mov
test
jl
das
aaa
jnp
mov
fcoml
aaa
daa
movsb
pushf
mov
xchg
fwait
push
js
xorb
jo
loop
stc
sbb
aaa
mov
mov
fildl
add
sbb
aam
mov
or
mov
jmp
mov
cmp
faddl
mov
ss
sub
les
add
andl
sbb
adc
adc
lcall
push
fcom
cmp
jmp
je
hlt
cmp
inc
inc
mov
mov
mov
mov
mov
dec
cmp
mov
addb
xor
movsl
adc
xchg
pop
sub
movsb
jecxz
movsb
adc
pop
and
stos
scas
mov
and
rcrl
jg
cmpb
pop
jb
sbb
out
jb
scas
xor
jp
push
jbe
test
dec
lea
add
add
add
push
jae
pop
lret
aas
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
sahf
xchg
ds
pop
add
push
pop
add
push
pop
add
push
push
add
push
pop
add
push
pop
add
push
pop
add
push
fiadds
ds
pop
add
push
pop
add
push
pop
add
push
popl
ds
pop
add
push
pop
add
push
pop
add
add
push
sub
push
icebp
jmp
add
jmp
add
jmp
add
jmp
add
icebp
jmp
add
jno
test
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
icebp
jmp
add
push
test
jmp
add
add
push
icebp
add
and
jmp
push
icebp
add
push
icebp
add
and
jmp
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
pop
and
jmp
push
icebp
add
push
icebp
add
and
jmp
add
push
icebp
add
push
icebp
add
push
icebp
add
pop
and
jmp
push
icebp
add
push
icebp
add
jmp
push
icebp
add
push
icebp
add
fldenv
add
sub
add
sub
add
cmp
add
xchg
ja
add
out
add
sub
add
cli
in
add
inc
js
add
in
add
ljmp
add
xor
add
add
in
add
mov
jbe
add
in
add
mov
ja
add
in
add
jp
add
xor
add
add
push
add
jp
add
mov
add
add
push
add
push
dec
add
push
and
add
add
push
dec
add
push
mov
cmp
push
dec
add
add
push
dec
add
push
ja
cmp
push
dec
add
push
dec
add
push
pop
mov
push
dec
add
push
dec
add
push
orl
add
add
push
pop
test
push
dec
add
push
dec
add
push
mov
add
push
dec
add
push
dec
add
push
inc
push
icebp
jmp
add
jmp
add
add
inc
sbb
jmp
add
jmp
pop
pop
icebp
jmp
add
jmp
push
cmp
icebp
jmp
add
adc
sbb
icebp
jmp
add
outsb
push
jge
jmp
add
jmp
push
pop
icebp
jmp
add
jmp
sbb
add
icebp
jmp
jmp
and
jmp
push
icebp
add
push
icebp
add
push
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
pop
push
add
push
icebp
add
push
icebp
add
push
icebp
add
push
add
push
icebp
add
push
icebp
add
push
icebp
add
pop
push
add
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
add
push
add
jp
add
jp
add
xor
cmp
push
add
cmp
add
cmp
add
es
aaa
add
repnz
cmp
add
cmp
add
mov
xor
add
icebp
add
cli
icebp
add
fsubs
add
add
icebp
add
cli
icebp
add
pop
leave
ss
icebp
add
mov
icebp
add
mov
add
mov
icebp
add
xor
aaa
add
icebp
add
push
dec
add
push
nop
xchg
aas
push
dec
add
push
dec
add
push
dec
add
push
rcll
push
dec
add
push
dec
add
push
lahf
cmp
add
add
add
push
dec
add
push
lods
xchg
aas
push
dec
add
push
dec
add
push
dec
add
push
dec
aas
push
dec
add
push
dec
add
push
stos
loopne
push
mov
loopne
push
cli
int
push
fsubp
aas
push
mov
loopne
push
sahf
xlat
aas
push
sahf
xlat
aas
push
sahf
xlat
aas
push
icebp
test
dec
icebp
mov
inc
icebp
mov
fbstp
mov
fbld
mov
add
add
leave
fists
cmc
fisttps
jmp
fdivs
fsubrs
fsubs
fcomps
fcoms
insb
dec
icebp
inc
insb
inc
icebp
shll
mov
jae
icebp
aad
and
shll
icebp
int
adc
stc
jae
icebp
in
test
loope
jl
fnsave
icebp
jmp
mov
jmp
add
push
icebp
add
push
icebp
add
push
icebp
add
sbbb
push
icebp
add
movsl
cmp
dec
sub
cmp
cmp
icebp
outsb
add
imull
pop
sbb
gs
xchg
test
test
mov
ss
movsl
pop
in
aaa
stc
pop
add
aaa
leave
dec
adc
cmp
add
push
icebp
add
add
rcll
add
testl
ds
ds
mul
ds
div
jle,pt
add
jle
adc
mov
and
sahf
divl
jle
inc
aas
jle
push
aas
mov
fs
sahf
divb
testl
sahf
divl
add
mov
mul
aas
fdivp
hlt
aas
cli
dec
idiv
jle
add
out
std
add
std
adc
pop
add
xor
dec
andl
arpl
mov
adc
les
mov
inc
and
fsubl
in
adc
and
and
and
and
sub
adc
add
push
adc
bound
adc
adc
cmpsb
adc
xchg
int3
inc
sahf
adc
and
in
and
adc
and
or
ds
push
ja
push
push
jg
cmpsb
adc
mov
adc
pop
and
and
out
and
mov
dec
push
mov
add
and
push
ja
out
adc
inc
and
adc
and
adc
jg
es
and
adc
lahf
and
adc
and
out
and
mov
dec
adc
and
adc
and
adc
and
fbld
add
inc
in
aad
cmc
sub
arpl
sub
mov
add
int
lds
inc
gs
pop
jne
dec
push
test
inc
and
sub
push
inc
sub
dec
push
sub
inc
in
aad
cmc
sub
sbb
bound
sub
cmp
inc
jge
dec
bound
sub
movsl
bound
sub
add
add
add
xor
sahf
in
ss
out
ss
inc
idiv
sub
add
loopne
push
out
aaa
data16
aaa
pop
out
cmp
or
jle
adc
xchg
sbb
jle
and
xchg
cli
sub
jle
xor
cmpsb
cli
cmp
ljmp
cmp
cli
mov
sar
xchg
cmp
stc
mov
cmp
stc
enter
push
cmp
jb
inc
cmp
cmc
mov
cmp
sbb
sub
es
sbb
xor
and
and
sub
hlt
sbb
jle
sbb
test
dec
outsb
je
push
data16
fs
inc
sbb
sbb
test
addb
mov
les
nop
ss
cwtl
les
mov
push
movsb
sbb
add
push
adc
cmp
push
cmovs
jne
addps
punpcklbw
push
push
push
push
shld
incl
inc
add
icebp
jmp
adc
pop
ficoms
xor
mov
adc
pop
cwtl
adc
and
adc
sbb
movsb
sbb
negl
and
test
add
xor
xchg
sbb
sbb
jl
ljmp
adc
mov
hlt
adc
pop
adc
sbb
adc
pop
out
adc
pop
cmc
adc
pop
and
pop
dec
push
fistl
jno
push
pop
pushw
add
gs
and
or
int3
xor
out
inc
call
sbb
or
jne
dec
add
pop
das
aaa
jmp
push
icebp
add
inc
push
xor
inc
fdivs
scas
inc
loopne
jg
xor
sub
dec
ret
sub
inc
add
repz
or
rcll
sub
roll
cs
pop
fidivrs
imul
cmp
inc
inc
cmp
pop
call
cmp
jb
insl
cmp
into
cmp
jecxz
cmp
add
jecxz
cmp
lea
cmp
ds
repnz
sub
ss
mov
in
add
mov
mov
xor
std
cli
xor
cld
jnp
sub
loop
push
xor
stc
xchg
xor
cli
lods
xor
cli
push
xor
cli
arpl
cli
jae
vmovdqu
stc
xchg
xor
stc
mov
add
in
shll
xor
lock
cmp
cli
addr16
sbb
pop
push
sbb
dec
push
add
cmp
jle
aam
mov
sbb
push
sbb
inc
mov
push
pushf
mov
pop
and
adc
gs
adc
push
dec
inc
decl
adc
inc
mov
call
add
and
push
push
and
and
xchg
push
andb
add
addl
rcll
add
and
sbb
push
xchg
sbb
push
das
pop
cltd
push
adcl
sbb
or
or
or
or
or
or
or
or
or
push
mov
or
or
add
or
or
mov
or
pcmpgtw
mov
adc
or
xchg
push
fisttpl
xor
in
cmc
ss
jne
js
lahf
cmpsl
inc
inc
ss
inc
push
cmp
iret
aaa
mov
aaa
mov
icebp
add
inc
push
mull
icebp
add
inc
out
xor
add
inc
jle
popa
inc
jo
jns
dec
xor
popa
xor
xor
xorb
inc
in
add
inc
xor
xor
xor
pop
out
add
mov
sub
inc
imul
out
add
out
xor
leave
call
and
push
out
aaa
cmp
out
aaa
add
aaa
repnz
xor
jne
nop
cmp
cmp
xor
je
xchg
cmp
sti
adc
cmp
cli
ja
and
ljmp
loope
cmp
loope
cmp
loope
cmp
ja
sub
ds
incl
jp
idiv
sub
add
stos
loop
xor
in
xor
adc
and
add
add
jns
mov
xchg
ss
punpckldq
or
push
pop
adc
pop
inc
mov
inc
or
je
adc
jl
fmuls
test
push
mov
push
mov
test
repz
or
jnp
or
mov
outsl
imul
movsb
imul
pop
inc
add
dec
testl
add
add
add
cmp
add
cmp
orl
pop
jns
mov
or
or
cmpsb
or
cmp
and
cmp
orb
adc
push
jne
push
pop
rcpps
jmp
add
icebp
rcll
nop
add
adc
add
push
pop
xor
push
push
add
flds
adc
lret
or
or
or
jae
out
dec
adc
or
xor
cmp
or
dec
push
ss
fbstp
in
pop
cmp
xor
repz
icebp
add
push
dec
negl
inc
add
xor
and
cmp
xor
add
popa
push
xor
inc
call
xor
mov
fiaddl
xor
pop
movsl
cs
cs
pop
imul
jns
imul
inc
cld
das
mov
shl
cmp
test
cmp
xor
mov
stc
pop
cmp
outsb
cmp
clc
sarl
fs
fdivrl
cmp
out
cmp
add
cld
or
push
cli
cmp
sti
out
cmp
repz
push
stc
cmp
stc
jae
jns
out
dec
clc
cmpl
cli
clc
inc
ds
aas
mov
int3
aas
stos
ds
adc
add
push
in
xor
or
arpl
or
inc
lock
ret
inc
push
or
mov
add
mov
push
xchg
or
mov
adcb
in
repz
sbbb
call
adc
mov
je
mov
pop
cwtl
aas
pop
pop
into
inc
and
arpl
lods
adc
push
movsb
adc
mov
rcrb
adcb
xchg
jge
adc
test
dec
gs
mov
or
lret
adc
add
add
adc
stc
or
or
enter
lea
or
movl
inc
or
push
or
or
or
push
cwtl
or
push
add
push
pusha
pop
mov
push
lahf
or
add
push
icebp
jmp
add
icebp
rclb
xor
cmp
add
add
adc
add
cmp
jne
pop
add
adc
decb
in
incb
mov
mov
das
addl
cmp
inc
cmp
jmp
cmp
dec
inc
cmp
dec
xor
push
sbb
loop
aad
popf
dec
cltd
ss
dec
xchg
and
adc
aaa
lds
cmp
inc
dec
negl
inc
fnsave
testb
inc
add
addr16
gs
data16
pusha
pushl
mov
xor
cmp
xorl
fwait
data16
xor
lods
fcoml
xor
fsubr
xor
mov
idiv
xor
add
mov
cmp
cmc
test
in
cmc
enter
jmp
cmp
and
sub
push
cmp
add
cmc
jo
mov
test
pushf
cmc
pushf
cmp
lret
cmp
cli
aam
or
out
sbb
stc
ds
stc
pop
cmp
stc
mov
or
std
cmp
clc
xor
inc
out
xchg
aas
push
nop
in
mov
push
pop
ret
mov
pop
adc
arpl
adc
arpl
or
arpl
or
arpl
or
inc
adcl
cmpsb
add
inc
sti
or
pop
and
or
shlb
push
filds
xor
jl
mov
adc
pop
pop
lret
repz
pop
jbe
pop
inc
ljmp
inc
xchg
push
clc
cmp
or
jmp
and
or
or
or
or
or
or
add
daa
or
or
pop
lea
or
or
or
les
js
out
mov
mov
xchg
or
or
or
imul
int
rolb
in
add
pop
lock
push
pop
pop
push
jb
adc
sti
pop
outsl
add
clc
add
push
sbb
push
push
add
add
add
add
add
add
add
push
pop
cmp
stos
aaa
sbb
dec
insb
aaa
js
bound
insb
dec
data16
push
push
xchg
aaa
inc
dec
xor
mov
dec
icebp
add
loopne
idivl
icebp
add
pop
xchg
xor
pusha
xor
sub
lods
inc
divl
or
xor
inc
jp
mov
arpl
arpl
sub
jg
jp
ficompl
cs
push
pop
das
es
mov
sub
mov
dec
pop
shrl
push
jb
add
cmc
mov
ss
and
add
das
aaa
xor
aaa
cmp
clc
mov
aaa
stc
lods
cmp
clc
pop
cmp
in
idivl
ljmp
cltd
in
dec
ds
cmpsb
aas
fsubr
mov
sub
lret
aas
pop
in
aas
adc
add
jp
idiv
add
stos
out
add
jo
xor
loope
xor
loopne
xor
repz
xor
repnz
xor
dec
divb
push
clc
or
inc
call
stc
pop
es
stc
outsl
push
std
stc
jnp
stc
sbbb
stc
xchg
xchg
stc
lahf
jle
stc
movsb
xchg
cli
mov
cwtl
stc
pushw
pop
push
stc
add
stc
and
add
cli
dec
inc
cmp
push
push
stc
jg
aad
mov
mov
repnz
xchg
cli
dec
sbb
cli
ja
enter
sar
mov
jl
cld
fbld
jmp
inc
cli
mull
sti
mov
push
cld
jmp
jle
adc
mov
cli
or
cld
cmp
or
std
outsb
or
mov
pop
mov
add
pushf
pop
mov
cld
roll
cld
mov
inc
pop
mov
std
adc
iret
std
and
fdivr
fldl
js
roll
std
mov
push
movsb
repnz
ja
js
or
gs
cmpsb
jmp
std
mov
sar
fs
std
add
xor
sbb
xor
adc
mov
pop
add
add
xor
xchg
push
mov
mov
push
icebp
add
mov
icebp
add
rorb
cmp
je
pop
mov
mov
mov
cmpsl
cmc
xor
mov
shlb
data16
dec
xor
jge
xor
addr16
aam
fnsave
cmpsl
insb
xor
test
inc
inc
pop
xor
add
inc
into
sub
xchg
stos
xor
cmp
xor
in
inc
inc
xor
mov
mov
idivl
cld
xor
cmp
cmp
aaa
out
cmp
cmp
cmp
adc
nop
cmp
cmp
ds
cmp
cmp
cmp
mov
cmp
cmp
cmp
add
cmp
and
aas
test
sbb
cmp
cmovo
push
jbe
cltd
jle
imulb
outsb
out
jmp
pop
sbb
test
idiv
dec
testb
divl
lods
idivl
ret
sub
notl
iret
idiv
adc
cmp
call
repz
sub
and
add
repz
arpl
in
xchg
arpl
repnz
repz
inc
xchg
dec
and
push
and
pop
and
repnz
repnz
add
cld
mov
add
sub
sti
inc
add
lock
jmp
add
and
in
mov
repnz
add
stc
add
lcall
stc
jp
or
xor
stc
cmp
stc
inc
add
stc
cmp
clc
rolb
je
fiaddl
pop
clc
ret
clc
mov
add
ret
clc
mov
add
lcall
adc
sub
adc
sub
adc
cmp
repz
jmp
fildl
add
jecxz
rcrl
fldt
or
or
sbb
cli
cs
mov
xor
stos
cs
mov
cs
shrb
adc
jle
mov
push
das
and
lds
rcrb
sub
incl
sub
jmp
or
add
outsl
inc
and
cmp
xor
add
inc
shll
inc
xor
in
inc
addr16
inc
ja
lods
aas
xor
aas
mov
cmp
inc
cmp
xor
inc
shll
inc
out
xor
cmc
inc
sub
pop
inc
cmpsb
ss
ss
inc
adc
push
inc
inc
aaa
xchg
aaa
sub
aaa
adc
aaa
in
shlb
movl
imul
adc
outsl
cmp
sarb
push
add
scas
aaa
sub
dec
sub
jge
mov
hlt
call
decb
add
repz
orl
andb
mov
out
pop
pop
clc
out
inc
gs
in
inc
dec
mov
fwait
dec
aad
adc
or
pusha
cmp
clc
popf
daa
pushf
sti
fmull
aam
cld
call
in
filds
add
js
cmp
cmc
out
pushf
pusha
cld
out
adc
repz
gs
repnz
inc
repnz
inc
icebp
sti
sub
data16
mov
clc
fwait
std
scas
clc
lock
aam
or
test
cmc
jge
or
not
not
cld
cwtl
clc
jbe
or
sti
clc
stc
jmp
add
cwtl
repz
jns
mov
test
add
lock
notb
aad
mov
jae
jp
jecxz
cmpsb
add
sti
push
stc
lahf
sti
movsl
clc
jo
mov
std
call
dec
cmp
mov
cmp
jl
cmp
movsb
xor
fs
xor
out
mov
ss
push
icebp
add
add
aas
lcall
pop
cmp
leave
es
xor
push
xor
std
inc
xor
pop
iret
xor
imul
adc
je
outsb
jecxz
sub
jecxz
and
sub
mov
dec
shlb
inc
pusha
aaa
pushf
inc
test
or
inc
divb
push
xor
sarl
cmp
add
arpl
adc
cmp
and
push
ss
cmp
imul
inc
lods
cmp
xor
and
sub
pushl
add
cli
inc
or
xor
outsl
xor
mov
xor
inc
xor
sub
popa
inc
mov
das
inc
enter
fdivl
push
sub
es
push
in
cmp
add
out
push
popa
in
out
jp
iret
in
xchg
inc
mov
in
mov
inc
dec
in
push
and
pop
and
in
cmp
imul
and
in
lds
cwtl
out
jl
lock
fs
jbe
inc
cli
or
cli
ss
pop
cli
jb
cli
fisttpll
cmc
cld
cmp
sti
push
cmp
out
pop
daa
inc
add
pop
and
or
sub
in
icebp
cli
divb
divb
negl
testb
cmp
pop
div
negb
mov
jmp
add
icebp
ljmp
add
hlt
jnp
pop
cmc
icebp
decl
mov
in
push
div
addb
icebp
int3
add
bnd
lods
repnz
xchg
fwait
add
add
fiaddl
pop
repz
add
push
dec
lock
cld
sub
mov
std
mov
push
std
mov
mov
fsubrs
ffreep
lods
sub
jne
jl
cwtl
mov
jle
les
jmp
cmp
jp
cmp
jns
ss
data16
aaa
mov
gs
aaa
jmp
add
push
icebp
add
inc
int3
xor
push
std
aas
insl
xor
sbb
popf
and
sbb
add
cs
jecxz,pn
or
and
movsb
das
or
adc
pop
out
cmp
sarb
sbb
cmp
cmp
cmp
push
ds
cmp
aas
mov
in
add
jnp
jecxz
rolb
pushf
inc
bound
add
lock
xor
inc
cmpsl
xor
inc
sbb
inc
mov
xor
fdivs
dec
cmp
leave
cmp
or
cmp
cmp
cmp
lahf
cmp
aas
sub
lcall
lock
push
cmp
lods
xor
aas
and
push
xlat
repnz
aad
push
and
repnz
xorl
dec
add
and
gs
mov
pusha
outsl
lock
pusha
sbb
cs
jnp
jae
lret
aas
movsl
out
inc
pop
call
cmc
daa
dec
out
push
fsub
aaa
es
out
push
jns
jo
lret
out
jle
out
xchg
out
jle
out
xor
ss
in
gs
in
pop
in
inc
cld
in
cmp
icebp
add
add
lahf
cli
push
sti
sbb
cli
jmp
stc
sbb
jle
dec
in
xor
aas
in
dec
stc
push
in
fdivr
inc
in
out
fucomp
outsb
clc
pop
in
sar
test
in
inc
not
in
dec
testl
out
jge
shr
leave
negb
icebp
fdivp
inc
icebp
dec
repz
icebp
sahf
repz
sbb
repnz
repnz
icebp
das
repz
jmp
add
add
sahf
repz
add
ret
hlt
stc
add
out
jmp
xor
push
repz
std
fwait
xor
imul
ficoms
out
xor
pop
xor
mov
pop
xor
movsb
das
sub
stos
icebp
sub
daa
cwtl
into
das
push
mov
das
dec
jns
das
movsl
jns
das
cmp
das
pop
add
imul
jecxz
or
mov
cmpsl
cmp
cmp
sub
jbe
push
cmp
pusha
cmp
lea
cmp
sbb
cmp
sti
cmp
sbb
cmp
sbb
cmp
and
cmp
push
cmp
push
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
add
sbb
cmp
and
mov
and
push
and
xchg
and
jecxz
mov
loopne
xchg
aas
aad
test
aas
xchg
and
aas
cmp
scas
cmc
add
cmp
and
xor
repz
arpl
repz
cltd
in
mov
inc
in
sbb
hlt
and
repnz
and
loop
add
xor
out
insl
sub
in
mov
repz
and
in
jb
icebp
clc
mov
out
jge
ret
inc
xchg
idivb
aas
stc
sub
cmp
jmp
sub
jmp
sbb
test
push
in
mov
in
js
in
js
arpl
pop
jmp
in
and
cltd
out
shr
out
stc
in
stc
out
add
or
in
out
lahf
in
insb
out
shr
mov
lods
in
loop
inc
out
adc
jb
out
repz
dec
out
dec
out
jmp
add
icebp
sbb
int3
loopne
icebp
outsl
jecxz
repnz
loop
repnz
push
repz
in
clc
push
in
stc
push
out
testb
xor
or
in
fucomip
xchg
ljmp
add
popf
in
push
icebp
add
out
out
add
sub
sub
jno
icebp
add
es
xor
add
xor
add
mov
inc
xor
loop
xor
loopne
xor
inc
xor
les
sub
mov
jo
mov
add
aad
pusha
cmp
test
inc
cmp
add
insb
lea
adcl
arpl
sbb
arpl
cmp
add
sbb
aas
negl
addr16
std
sbb
aas
jae
idiv
cmp
lock
xor
daa
xor
and
xor
mov
push
xor
movsb
xor
and
xor
and
xor
jp
add
and
jecxz
and
xor
mov
xor
sub
xor
and
xor
push
and
xor
adc
xor
push
sbb
cs
ds
push
xchg
out
mov
jge
out
mulb
in
cs
dec
in
push
fs
sbbb
inc
in
jecxz
and
adc
xor
jmp
add
sub
jmp
sbb
jmp
sbb
jmp
mov
jmp
mov
jmp
jp
in
pop
jp
jmp
push
ljmp
shr
pop
pop
mov
call
sbb
cs
ss
shrb
icebp
icebp
in
push
jmp
out
cmp
add
and
adc
adc
sub
adc
xor
sbb
jmp
add
repz
sbb
sub
xor
pop
repz
loopne
repnz
loopne
repnz
fists
icebp
stc
fucomip
lock
push
push
in
icebp
and
inc
repnz
jmp
add
icebp
dec
lock
enter
or
arpl
ss
aaa
call
repnz
or
cmc
out
push
in
push
call
aas
jmp
jmp
push
icebp
add
add
mov
pop
mov
cs
cs
adc
xchg
daa
sbb
push
cmp
imul
nop
sub
leave
push
icebp
add
sbb
sbb
int3
add
sub
cmp
subb
push
icebp
add
inc
xor
xchg
movsl
mov
mov
iret
mov
sbb
jno,pn
pop
cs
add
je
add
sbb
cmp
cltd
sbb
cmp
pop
sbb
cmp
cmp
xor
stc
sbb
add
dec
cmp
rcrl
cmp
rcrl
cmp
loope
js
jns
cmpb
sbb
cmp
rcll
cmp
add
loope
mov
cmp
fsts
sarb
fsts
loopne
rcll
cmp
dec
sbb
inc
sbb
add
dec
jmp
sbb
add
mov
lea
ljmp
shr
enter
shlb
ljmp
repz
add
ljmp
adc
or
call
sbb
jmp
sub
jmp
inc
je
jmp
push
fs
inc
jmp
xchg
daa
jmp
add
icebp
repz
fistps
sbb
push
icebp
sbb
ljmp
jge
imul
push
out
add
call
sub
adc
adc
and
jmp
add
div
imul
cwtl
cmc
mov
and
fldl
out
repnz
lock
out
sub
adc
das
fsubrl
cmc
fsubl
pop
jmp
cmp
mov
cmp
scas
cmp
test
pushl
insb
xlat
xor
je
xor
add
imul
or
mov
xor
ss
xor
push
xor
push
aaa
sbb
aaa
jmp
push
icebp
add
and
xor
lcall
sub
out
xor
out
xor
out
xor
aad
dec
rorl
ds
xor
and
add
push
and
xor
and
xor
mov
pop
test
jo
aas
aaa
or
stos
aaa
lods
push
jmp
icebp
push
hlt
aaa
movsb
sbb
jmp
lods
cmp
sbb
cmp
sbb
cmp
jecxz
xchg
sbb
cmp
sbb
cmp
sbb
cmp
adc
adc
icebp
adc
sbb
cmp
add
sbb
cmp
sbb
push
jecxz
pop
mov
jmp
jp
jmp
push
jmp
push
jmp
pop
cmpsl
jmp
pop
movsl
jmp
dec
mov
stos
dec
leave
jmp
cmp
jmp
sub
shrl
sub
out
mov
in
mov
jmp
mov
jmp
vmwrite
jmp
sub
add
jmp
cmp
dec
imul
pop
cmp
sub
jae
mov
push
int3
out
jmp
call
out
jmp
out
outsb
jmp
mov
mov
jmp
js
cwtl
jmp
je
fsubr
push
call
mov
jmp
add
and
pop
jmp
xchg
out
call
test
mov
shl
call
fsubp
sub
out
in
out
in
out
out
out
in
out
in
or
in
ss
call
ss
mov
aaa
ds
aaa
xchg
and
add
orb
bound
jnp
jle
add
sbb
loopne
stos
xor
popf
jns
pop
test
xor
jge
xor
test
xor
and
xor
pop
sub
sbb
sub
dec
or
fisttps
pop
das
or
shrl
xor
xor
movsb
sub
xor
add
or
add
pop
cmp
je
pop
dec
or
mov
add
pop
aas
test
idiv
mov
in
add
les
xorl
outsb
inc
ja
testb
push
inc
xchg
push
inc
cmp
inc
xchg
cmp
inc
lahf
cmp
inc
cmpsl
cmp
ds
jbe
mov
cmp
iret
cmp
xlat
cmp
ds
ss
cmp
idivl
push
push
dec
add
cmp
or
cld
in
cmp
add
int3
mov
aam
mov
int3
cld
call
int
subl
fsubr
pop
jmp
iret
dec
pop
lahf
ficompl
cmp
dec
fld
cmp
frndint
and
fstpt
sub
aam
sbb
aad
sbb
decl
cld
inc
out
cld
call
int
add
jg
iret
js
mov
fnstcw
push
icebp
hlt
fidivs
fsubp
fiadds
jmp
add
leave
shll
loope
aad
in
aam
in
aam
in
aad
in
aad
jecxz
aam
jecxz
aam
jecxz
aam
jecxz
aam
in
xlat
jbe
out
xlat
push
in
fdiv
in
fsub
in
xlat
stos
in
xlat
mov
mov
add
js
adc
out
sbb
in
fistl
fildll
fdivrp
fsubp
fsubrl
fimuls
fnsave
ficomps
sbb
add
daa
aam
into
and
xor
pop
xor
sbb
sub
add
push
das
cmp
cmp
stc
push
cmp
xchg
cmp
test
cmp
cwtl
out
sets
cmp
add
mov
cmp
fwait
cmp
cmp
cwtl
dec
cmp
pop
cmp
mov
cmp
jae
xor
xor
ss
xchg
ss
fwait
add
dec
aas
lret
aas
or
imul
jnp,pt
jp
mov
mov
fwait
aas
mov
stos
aas
lcall
aas
dec
fstpt
add
dec
ds
fidivrl
sti
aas
mov
cmc
add
stos
inc
or
mov
inc
sub
stos
inc
cmp
push
dec
xor
inc
pop
xor
imul
inc
idiv
push
hlt
dec
icebp
add
jp
add
jle
wrmsr
xchg
inc
dec
xor
xorl
aas
mov
xor
shl
add
add
iret
and
iret
inc
addr16
arpl
add
iret
addl
mov
inc
fmulp
jecxz
push
rolb
es
push
data16
jle
arpl
cmpsb
fadds
jle
iret
ret
xchg
jecxz
inc
iret
add
int
pop
es
gs
arpl
into
addl
mov
inc
pop
into
jecxz
xchg
add
int3
and
int3
inc
and
int
sbb
into
pop
add
test
leave
aam
in
aam
in
aam
in
aam
in
aad
jecxz
aad
jecxz
aad
jecxz
aad
jecxz
aad
jecxz
aad
jecxz
aad
jecxz
aad
jecxz
aad
in
aad
in
aad
in
aad
jecxz
aam
jecxz
aam
jecxz
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
jmp
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
jp
add
push
add
push
add
cmp
add
cmp
add
sub
add
sub
add
cmp
add
cmp
add
sub
add
sub
add
cli
in
add
cli
in
add
ljmp
add
add
in
add
cli
in
add
cli
in
add
ljmp
add
in
add
stos
in
add
stos
in
add
mov
in
add
stos
in
add
stos
in
add
jp
add
jp
add
push
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
add
add
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
add
add
push
icebp
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
jmp
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
stos
repnz
stos
repnz
jp
add
jp
add
push
add
push
add
jp
add
jp
add
push
add
push
add
cmp
add
cmp
add
sub
add
sub
add
cmp
add
cmp
add
sub
add
sub
cli
icebp
add
cli
icebp
add
ljmp
add
icebp
add
cli
icebp
add
ljmp
add
icebp
add
stos
icebp
add
stos
icebp
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
add
add
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
add
add
push
icebp
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
push
icebp
add
push
icebp
add
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
add
push
icebp
add
push
icebp
add
push
icebp
add
ljmp
add
out
add
stos
out
add
mov
out
add
stos
out
add
stos
out
add
jp
add
jp
add
push
add
push
add
jp
add
jp
add
push
add
push
add
cmp
add
cmp
add
sub
add
sub
add
cmp
cmp
add
sub
add
sub
add
cli
in
add
cli
in
add
ljmp
add
in
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
add
add
add
push
or
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
icebp
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
cli
repnz
add
cli
repnz
ljmp
add
repnz
cli
repnz
ljmp
add
repnz
stos
repnz
stos
repnz
mov
repnz
stos
repnz
stos
repnz
jp
add
jp
add
push
add
push
add
jp
add
jp
add
push
add
push
add
cmp
add
cmp
sub
add
sub
add
cmp
add
cmp
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
icebp
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
cmp
add
sub
add
sub
add
cmp
add
cmp
sub
add
sub
add
cli
out
add
cli
out
add
ljmp
add
out
add
cli
out
add
ljmp
add
out
add
stos
out
add
stos
out
add
mov
out
add
stos
out
add
stos
out
add
jp
add
jp
add
push
add
push
add
jp
add
jp
add
push
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
add
push
sbb
add
add
push
sbb
add
add
push
icebp
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
add
push
add
jp
add
jp
add
push
add
push
add
cmp
add
cmp
add
sub
sub
add
cmp
add
cmp
add
sub
add
sub
add
cli
repnz
cli
repnz
ljmp
add
repnz
cli
repnz
ljmp
add
repnz
stos
repnz
stos
repnz
mov
repnz
stos
repnz
stos
repnz
push
sbb
add
add
push
sbb
add
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
add
push
icebp
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
stos
out
add
mov
out
add
stos
out
add
stos
out
add
jp
add
jp
add
push
add
push
add
jp
add
jp
add
push
add
push
cmp
add
cmp
add
sub
add
sub
add
cmp
add
cmp
add
sub
add
sub
add
cli
out
add
cli
out
add
ljmp
add
out
add
cli
out
add
ljmp
add
aas
cli
fdiv
das
ret
cmpsl
bound
cmpsl
roll
sub
pop
sbb
inc
adc
in
mov
add
add
pop
loopne
or
xchg
jo
std
decb
push
dec
mov
les
mov
loop
lods
jge
or
ja
outsb
ss
lret
xchg
add
mov
pop
jae
lret
cmp
ljmp
aaa
aam
repnz
pop
add
xchg
loope
dec
icebp
fisubrl
xor
mov
add
cwtl
mov
jge
cli
jmp
nop
mov
add
stc
jae
rcrb
pop
or
xlat
mov
xor
sbb
cltd
push
scas
pop
inc
add
or
sbb
or
popf
sub
stos
mov
in
mov
inc
lds
pop
ds
adc
repnz
adc
pop
subb
sub
in
test
sbb
ficoms
rol
xchg
test
inc
xor
inc
adcl
rol
jae
in
cld
adc
das
out
aas
loope
out
call
mov
jl
adc
xor
push
divb
leave
das
and
push
in
test
mov
inc
mov
add
push
in
mov
jp
mov
pop
or
icebp
pop
push
fldl
push
push
fidivrl
imul
xchg
adc
jmp
std
out
inc
xor
outsl
lock
fwait
sbbb
xchg
xor
je
call
or
mov
sub
rolb
std
ficoms
out
push
add
out
mov
and
mov
jp
xor
sub
adc
adc
adc
dec
andl
cmp
pop
push
movsl
jnp
push
in
push
add
in
mov
xor
sahf
fs
mov
jmp
int3
xchg
in
fdivs
add
add
inc
dec
adc
ret
es
push
sbb
imul
in
mov
push
and
testb
sub
ret
int3
xchg
xorl
mov
push
loopne
cmpsb
adc
push
inc
push
fmull
pop
push
clc
mov
add
cmp
mov
roll
push
dec
push
clc
mov
fldl
dec
pop
push
in
add
add
pop
push
hlt
shlb
add
jnp
inc
hlt
sub
dec
lock
dec
push
push
mov
repnz
shlb
sbb
sub
scas
or
add
cmpsb
in
xchg
std
mov
lock
dec
jecxz
roll
lock
rol
mov
ret
int3
xchg
sub
int3
xchg
in
mov
call
mov
or
sub
mov
push
fsubrs
jl
psllw
push
add
add
lock
add
mov
xchg
icebp
mov
xor
cld
push
icebp
add
sub
mov
jo
add
movsl
hlt
cmpl
jae
push
jge
push
mov
push
enter
aam
jl
pop
icebp
mov
imul
add
xor
int3
xchg
sub
int3
sub
int3
xchg
int3
es
cmp
add
cmp
lods
or
fisubrl
int3
sub
int3
xchg
int3
cmpsb
data16
mov
push
mov
jne
inc
push
pushf
ret
int3
pop
cs
int3
ucomiss
int3
pop
cs
int3
cmpsb
data16
imul
push
imul
add
inc
imul
clc
imul
inc
push
cmp
or
les
cmp
add
add
lods
adc
movsb
add
fdivs
mov
data16
mov
jmp
cmp
xor
mov
std
mov
mov
adc
cld
push
inc
add
aaa
ljmp
jmp
add
push
push
cld
ljmp
ret
int3
pop
sub
int3
pop
sub
xchg
mov
ja
or
push
pushf
ret
int3
xchg
sub
int3
sub
int3
xchg
int3
push
data16
mov
mov
outsb
js
push
ljmp
push
jmp
ljmp
gs
mov
add
add
or
push
push
cld
enter
xchg
jb
add
fsubrs
pop
mov
mov
cli
pop
je
add
mov
insb
inc
lock
inc
or
rclb
testl
fldt
enter
pop
insb
dec
clc
fsubr
adc
push
loope
dec
dec
insb
dec
or
loop
dec
stos
push
or
insb
cmp
mov
jmp
testb
insb
in
ja
mov
add
cmp
mov
push
call
lret
jo
add
inc
lock
add
add
mov
hlt
dec
lock
cmpl
pop
test
lock
jns
push
enter
jle
add
mov
cmp
lret
mov
adc
mov
adc
mov
add
cld
mov
imul
test
jmp
enter
push
jmp
cmp
mov
call
in
mov
call
mov
jae
adc
pop
mov
jge
mov
add
push
icebp
mov
jb
add
push
xor
jge
mov
div
incl
add
dec
mov
testb
or
cld
mov
enter
call
hlt
push
jnp
cmc
jl
mov
mov
add
adc
dec
push
in
adc
mov
or
ret
dec
loopne
out
lcall
fstpl
and
in
add
imul
push
lcall
push
inc
push
push
add
push
clc
orl
std
int3
cmc
add
push
adc
fwait
add
fsubrs
hlt
mov
and
int3
es
mov
xchg
lock
inc
push
push
mov
xchg
ret
int3
xchg
int3
cmpsb
push
mov
add
add
add
fdivs
sarb
enter
add
hlt
fsubrs
mov
push
hlt
mov
into
xor
jbe
add
xor
mov
push
or
push
add
sbb
mov
push
sbb
js
mov
push
push
stc
mov
mov
xor
push
xor
int3
pop
and
int3
pop
and
in
aaa
fnstcw
add
cld
add
lods
add
lahf
hlt
push
outsl
mov
push
push
or
mov
mov
dec
hlt
lock
push
inc
push
jo
movsb
add
inc
lods
add
push
in
mov
jmp
push
add
addr16
add
lock
add
fstpl
push
lock
add
xchg
decb
les
add
xchg
icebp
and
mov
push
inc
push
enter
push
inc
push
or
lods
add
dec
push
inc
push
mov
call
addl
mov
push
pushf
or
mov
xchg
ret
int3
xchg
in
push
jmp
decl
js
mov
xchg
ret
int3
and
int3
push
data16
ja
mov
add
cmp
stos
fmuls
dec
out
push
cmp
fwait
loopne
xchg
adc
mov
fisttpll
add
add
fs
cmp
call
push
add
lods
add
mov
mov
push
mov
xor
push
push
repnz
lock
mov
adc
dec
pop
mov
call
adcl
add
push
push
or
push
push
loopne
movsb
lahf
cmp
add
cld
jb
fdivs
jmp
je
jl
call
cmpsl
sub
inc
adc
loope,pt
subb
dec
repz
testl
inc
mov
jl
or
or
mov
aad
inc
push
inc
jmp
orl
shrb
ds
in
flds
cld
add
mov
add
pop
sbb
int3
pop
xor
sti
jmp
or
ss
push
mov
imul
std
rclb
icebp
dec
lcall
pop
cmp
push
pop
add
push
icebp
mov
inc
mov
jnp
xor
lock
lock
cmove
or
xchg
pop
add
push
icebp
mov
inc
imul
inc
icebp
mov
add
out
push
cmp
push
psllw
jne
pop
inc
push
enter
sub
cmc
push
adcl
dec
ja
inc
fmul
inc
daa
jp
loopne
cmp
push
mov
xchg
cmove
jmp
adcl
mov
jae
movsb
push
icebp
add
lahf
sub
fcoms
mov
add
add
xchg
jp
loopne
xchg
cmove
inc
xor
lds
inc
push
jp
aam
xor
popf
push
pop
icebp
push
mov
fstl
das
jmp
call
mov
mov
rorl
add
sub
push
jb
enter
add
sbb
movsb
cmp
cld
fcoml
psllw
data16
inc
push
inc
jmp
addl
paddw
push
cmp
clc
lcall
mov
xor
xor
mov
cmove
jmp
adcl
xchg
jns
movsb
inc
xor
loope
pop
xchg
cmove
dec
sub
jp
rcrb
push
mov
jno
or
mov
inc
push
hlt
and
icebp
mov
lea
jmp
decl
add
inc
fisttpll
inc
push
inc
notb
fsub
sti
push
in
mov
mov
dec
ret
add
mov
js
mov
dec
ret
mov
in
popf
inc
mov
enter
xchg
icebp
mov
jl
pop
pop
adc
in
cmp
lds
psllw
jmp
shlb
mov
inc
imul
push
jmp
jmp
in
mov
push
mov
int3
push
js
xorl
inc
pop
icebp
add
push
mov
fmul
icebp
add
or
in
add
add
mov
add
push
icebp
mov
add
inc
or
std
rclb
icebp
call
mov
cs
testb
gs
inc
add
push
icebp
add
push
fmuls
push
mov
add
push
jo
rcrb
add
idivl
add
add
shrb
add
push
add
orw
nop
rcll
icebp
mov
lret
mov
mov
inc
push
jbe
call
xchg
lods
inc
xor
inc
add
icebp
mov
dec
int
inc
push
fs
aas
push
pop
popa
add
icebp
mov
sbb
add
mov
push
psllw
adc
lock
inc
push
nop
aad
psllw
out
idiv
shlb
mov
inc
jmp
orl
add
push
nop
mov
call
add
out
loope
call
mov
mov
jbe
cld
push
jbe
loopne
jbe
faddl
ljmp
xchg
icebp
mov
adcl
mov
push
cmp
push
mov
insl
mov
add
int
push
scas
ja
in
xor
add
int
inc
jne
loopne
add
cld
rclb
pop
icebp
xchg
aad
push
jmp
jmp
adcl
cmp
mov
icebp
jae
jl
les
add
sahf
jmp
stc
mov
push
cs
mov
inc
clc
shlb
mov
push
ds
xor
mov
inc
fstpt
jmp
jnp
mov
sub
jle
cmove
enter
cmove
enter
cmove
inc
testl
stc
mov
rcr
add
push
icebp
mov
sbb
mov
test
mov
call
shrb
inc
push
inc
jmp
test
pop
std
xor
fsubrl
mov
popf
cmove
mov
add
add
and
add
popf
push
xchg
icebp
xchg
call
mov
cmove
ret
jnp
pop
nop
mov
int3
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
pop
or
mov
xchg
mov
push
into
scas
sahf
into
cmp
fistpll
adc
pop
push
loopne
add
xchg
jecxz
add
fldl
push
mov
push
inc
fdivrs
dec
pushf
lea
fiadds
xchg
sub
xor
lret
cwtl
add
aad
pusha
mov
sub
pop
mov
dec
push
out
sahf
jbe
cwtl
cs
jecxz
inc
pop
add
sbb
pop
xor
ja
test
decb
out
mov
addl
lea
adc
or
js
sbb
cld
jns
sub
out
rclb
test
pop
in
cld
inc
incb
ljmp
mov
fistps
adc
inc
adc
dec
dec
xlat
mov
push
outsl
out
mov
test
add
mov
xchg
push
jg
sub
test
outsb
ret
jle
int
mov
jp
sbb
in
jl
mov
lcall
punpckhbw
aad
dec
fidivs
outsb
scas
clc
xor
xor
out
lds
sarl
cmpsb
jns
sub
je
adc
or
jle
jp
ja
dec
shr
pcmpeqd
hlt
xchg
adc
in
repnz
mov
pop
xchg
push
sub
inc
or
xor
lds
fcmovnu
mov
arpl
mov
xchg
aaa
mov
testb
sub
stos
mov
std
mov
fimull
test
add
pop
cmc
lret
sbb
cmp
rolb
and
loop
sub
add
mov
call
sahf
pop
std
js
push
xor
jmp
scas
outsl
cs
dec
inc
xor
fsubl
loope
.byte
inc
add
add
les
add
cmp
xor
push
xor
xor
jne
mov
xlat
xor
xor
xor
xor
xor
xor
jb
xorb
xor
xor
xor
xor
xor
xor
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
mov
xor
fidivl
divb
inc
ss
ss
mov
aaa
pop
aaa
jge
test
nop
aaa
xchg
aaa
fnstenv
clc
aaa
adc
push
cmp
dec
cmp
jae
inc
cmp
pop
cmp
imul
xchg
cmp
cmp
cmp
cmp
cmp
rolb
add
add
add
js
jle
test
xchg
cmp
add
or
add
or
