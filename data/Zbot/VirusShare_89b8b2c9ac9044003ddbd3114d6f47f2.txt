pop
stos
stos
xchg
add
in
cmpl
lea
push
push
lea
push
add
push
or
pop
add
jne
std
outsl
mov
sbb
push
push
call
pop
call
ret
mov
incl
addl
push
push
push
lea
fwait
in
lock
inc
hlt
clc
push
push
call
int
pop
incl
lea
push
push
add
cld
cld
sti
cmp
add
adc
fmuls
push
in
imul
ja
jo
push
hlt
xchg
push
inc
sahf
jnp
dec
inc
xor
add
ljmp
jle
and
leave
push
sub
outsl
bound
std
jne
lock
call
lods
dec
in
in
fwait
lret
call
inc
add
arpl
cmp
push
ja
arpl
outsb
push
data16
mov
loope
jbe
test
dec
clc
push
push
push
pop
call
mov
pop
dec
aaa
cmp
popa
insl
aaa
pusha
push
push
push
call
cmp
insb
mov
cmp
dec
arpl
sub
fadd
sbb
push
movsb
outsb
lods
jne
js
outsb
cld
xor
push
loope
inc
rolb
push
jno
mov
fsubl
pop
jnp
lods
testl
iret
adc
jb
mov
push
bound
jno
xchg
dec
push
dec
push
push
mov
incl
mov
mov
loopne
js
inc
dec
jne
jae
cmovs
push
pop
adc
add
sbb
pop
aam
fs
mov
pop
xor
xchg
out
in
js
add
push
leave
ret
inc
mov
jnp
imul
mov
fldt
push
addr16
test
sbb
gs
insl
push
add
adc
mov
jb
push
push
mov
cld
mov
neg
not
jmp
pop
sbb
not
jmp
mov
sbb
hlt
in
add
xchg
loopne
inc
out
sbb
xchg
js
push
fdivs
js
gs
in
gs
push
jo
jne
pop
outsb
jg
xor
inc
inc
lret
pop
ja
sbb
xor
pop
xor
push
push
fistpll
lods
arpl
pop
ja
imul
outsb
call
in
xor
je
xor
mov
jns
shrl
addr16
and
or
sbb
inc
pushl
sbb
add
hlt
adc
neg
not
add
or
sti
jnp
jmp
and
data16
xor
mov
push
inc
cs
sub
testl
dec
mov
inc
push
jbe
mov
fsubrs
and
inc
add
jo
in
test
ret
fiadds
idivl
jl
adc
add
sub
dec
adc
add
add
adc
dec
neg
push
std
idivb
dec
pop
adc
push
adc
sbb
inc
lret
sbb
pop
insb
jmp
lock
sti
outsl
inc
push
dec
push
xchg
push
push
xchg
cwtl
leave
or
sbb
pop
add
xor
cld
pop
pop
mov
xor
push
dec
ja
call
xor
nop
push
inc
inc
jns
ja
lock
push
jae
lock
in
call
negb
adc
add
int
cli
jmp
out
cmc
jo
iret
inc
jo
sub
sarb
or
cmp
call
push
mov
xor
mov
fistpl
or
mov
xor
mov
mov
sar
cmpsl
sub
insb
insb
jecxz
dec
outsl
dec
imul
push
add
push
sbb
push
sub
mov
lahf
faddl
loopne
pop
sbb
jmp
negl
sub
addr16
xor
mov
xor
dec
dec
imul
and
push
fs
shll
mov
inc
pop
rolw
filds
lahf
call
dec
mov
push
xor
aaa
dec
jne
outsb
popa
jb
or
push
dec
jb
inc
es
ret
xlat
cs
imul
cmpsl
fbstp
xor
loopne
dec
cmp
mov
xor
bsf
push
push
jo
add
jmp
inc
sub
inc
ljmp
andl
ja
push
push
sbb
jns
cmp
inc
int3
negb
in
push
push
arpl
pop
incb
and
sbb
sbb
and
test
jp
and
je
clc
or
insl
sbb
mov
andb
dec
movsb
xor
jbe
pop
rcrl
xor
xor
sti
addr16
call
enter
adc
or
repnz
or
in
or
mov
sahf
insb
sbb
push
adc
jb
dec
jmp
data16
cli
sbb
xchg
mov
lret
xor
lods
ret
jbe
cmp
div
fsubrs
mov
dec
fs
icebp
aaa
sbb
insl
push
ss
das
iret
pop
dec
sbb
in
js
bound
out
push
imul
gs
mov
xor
sbb
mov
in
cmp
test
ror
push
mov
mov
push
call
push
jbe
xor
mov
xchg
mov
mov
or
call
cld
mov
arpl
push
xor
add
jae
mov
push
outsb
mov
mov
test
insl
imul
sbb
xor
or
push
mov
jnp
int
xor
cmp
dec
sub
nop
icebp
pop
sub
lcall
pop
sbb
scas
push
xor
jo
mov
popf
sub
inc
adc
jno
call
ss
call
push
xchg
data16
adc
arpl
cmc
xor
pop
adc
gs
mov
out
in
inc
jle
mov
loope
repz
xor
pop
sbb
lods
adc
lahf
lcall
test
jbe
pop
lret
vsqrtps
stos
fs
sbb
aam
ss
add
incb
mov
cmp
stc
xor
imul
outsb
add
mov
test
xor
fwait
pop
mov
inc
outsl
ja
iret
push
jmp
insl
in
push
jne
fnstenv
push
adc
lock
pop
dec
xchg
call
in
orb
ret
fcomps
add
negl
pop
in
lret
inc
push
push
dec
dec
ljmp
ficomps
xor
pop
test
cmpsb
idivl
inc
lock
xchg
cld
and
sub
inc
test
outsb
or
loopne
dec
xchg
push
in
cmp
pushf
inc
sbb
xorl
jb
adc
mov
pop
aaa
ja
fadds
jl
adc
add
mov
not
or
fistps
sti
push
sbb
add
cli
rorl
fisubrl
mov
push
arpl
fmuls
enter
xchg
push
cmp
fcomp
sub
dec
neg
sbb
or
shrl
inc
movsb
data16
arpl
mov
push
add
or
sbb
mov
xor
jne
jo
dec
sti
cmpsb
pop
call
loope
push
jne
xor
xor
cmpsb
notb
sbb
jnp
inc
ja
ret
sbbl
insb
pop
ss
push
mov
call
loop
data16
mov
lock
push
int3
jg
pop
sub
lret
pop
aaa
xchg
test
bound
aaa
fdivrs
cmc
into
pop
inc
outsl
insl
inc
mov
xor
enter
mov
cmpsl
testl
xor
xor
fcoml
pop
test
test
add
mov
int3
fstpl
incl
push
in
cld
cmp
push
rcrb
shl
call
xchg
sbb
xor
adc
and
data16
sub
push
inc
int
push
mov
xor
lcall
dec
add
jno
add
or
fsubrs
test
dec
jmp
sbb
inc
mov
or
out
jb
jae
dec
mov
ss
test
fcomps
sub
and
sbb
pop
sarb
call
push
inc
loop
mov
fisttps
push
cmp
push
lahf
in
add
lods
insl
push
push
fs
addr16
add
lods
push
add
push
das
loopne
mov
or
push
push
pop
mov
shrl
lock
subb
sub
imul
mov
dec
pop
js
sarl
and
mov
jmp
fs
add
pop
mov
sbb
in
loopne
cmp
jb
push
push
jo
xchg
mov
inc
push
pop
mov
js
sub
xor
arpl
dec
xor
fisubs
adc
hlt
push
mov
push
xor
call
enter
mov
jae
push
xor
push
dec
bound
sar
call
mov
mov
inc
xchg
aaa
jg
rcll
sbb
scas
jbe
js
jno
stc
and
insb
popf
inc
cmp
jbe
lock
popf
push
sbb
or
cmpsl
sbb
cmpsw
in
shr
shrb
insl
pop
jae
addr16
and
add
std
sub
popa
arpl
push
jns
fildl
xchg
push
xor
data16
inc
icebp
in
push
test
lcall
cwtl
fstpl
xor
mov
xchg
pop
inc
xchg
into
test
fdivs
xlat
inc
cli
sub
push
add
sub
icebp
outsl
imul
jno
arpl
dec
popa
imul
rcrb
sbb
mov
inc
dec
cmp
mov
pop
aad
add
add
push
movsl
pop
lock
ja
sbb
mov
idivb
mov
add
mov
sarl
inc
outsl
fs
mov
dec
xor
or
jmp
lods
or
je
push
pop
cmp
push
push
cli
lock
js
push
cwtl
jp
mov
sbbb
neg
outsl
fwait
pop
sbb
mov
arpl
xor
jb
inc
jmp
enter
addr16
insb
loopne
or
popf
js
adc
sub
xor
and
lods
dec
bound
shl
sarl
sub
cs
and
add
movl
fsubrs
in
popa
icebp
mov
out
push
inc
mov
inc
jne
outsb
dec
dec
leave
loop
pusha
movsb
dec
push
adc
vshufps
mov
or
xor
adc
adc
wbinvd
inc
adc
je
gs
decl
inc
add
mov
sub
jmp
cwtl
mov
outsl
dec
jmp
jns
dec
cld
outsl
push
sbb
sub
call
dec
add
shl
jno
and
loope
aam
and
sub
sbb
flds
inc
add
jmp
jo
mov
jne
clc
lods
inc
cmp
iret
jle
or
call
roll
inc
mov
ds
mov
stos
adc
mov
add
clc
shl
popa
jae
inc
call
pop
pop
cmp
jmp
push
dec
jno
fwait
or
mov
jb
push
aas
cld
sbb
aam
aaa
addr16
push
shlb
push
ljmp
jne
push
loope
loope
adc
mov
jae
inc
jne
add
je
gs
addr16
and
dec
jmp
mov
sub
scas
ja
push
scas
adc
cmp
add
sti
mov
nop
jg
sbbb
push
test
sbb
and
bound
jnp
cltd
sbb
in
ss
fsubrl
in
roll
adcl
xor
lock
lahf
inc
cmp
xor
imul
and
inc
scas
or
inc
jo
mov
in
pcmpeqd
lahf
add
xor
dec
jecxz
flds
mov
xchg
dec
out
inc
jmp
fbstp
sbb
scas
je
in
mov
dec
and
adc
mov
dec
insb
sahf
iret
xor
test
add
or
mov
dec
adc
dec
jp
push
sbb
push
mov
sarb
push
sub
pop
inc
dec
mov
in
sub
cli
add
rcrb
inc
hlt
or
push
xor
ret
test
daa
xor
aaa
insl
hlt
dec
sub
adcb
out
jb
lods
push
push
inc
mov
inc
add
push
cli
shrb
fdiv
pusha
add
pusha
jl
push
xchg
notl
cmp
push
mov
sub
cmp
push
mov
imul
jge
push
pop
int3
push
ss
inc
cmp
testl
test
insl
add
enter
lret
pusha
das
inc
jmp
clc
imul
mov
mov
loopnew
sbb
jo
insl
push
push
pop
mov
cld
test
inc
arpl
inc
fbstp
add
sbb
mov
out
in
inc
push
dec
fisubl
push
out
pop
popa
adc
call
push
cmp
shll
mov
js
call
dec
dec
push
dec
mov
in
sub
xchg
movsl
add
mov
pop
inc
call
and
jg
dec
xor
mov
pusha
clc
add
dec
enter
adc
add
insl
leave
pop
xor
jbe
lds
add
hlt
mov
cld
vxorps
popa
push
push
je
sbb
insl
inc
push
cmp
pop
das
in
dec
push
push
xor
jmp
ja
push
push
pusha
lods
mov
push
xlat
fbstp
pusha
rclb
cli
add
rcrb
sbb
mov
mov
in
mov
or
nop
addl
push
sbb
sbb
enter
dec
daa
loopne
inc
sbb
mov
inc
cs
adc
add
or
leave
dec
fneni(8087
sbb
cmc
dec
jp
out
mov
fs
vpunpcklqdq
addl
dec
js
dec
clc
adc
xor
pushf
hlt
js
mov
sub
movsb
jmp
mov
outsl
mov
cld
sarb
pop
andb
loopne
repz
inc
inc
out
dec
imul
arpl
jg
hlt
ja
adc
adc
int
addl
js
out
outsb
push
sbb
xor
sbb
dec
movsl
cmp
jne
xchg
jmp
sbb
jle
push
gs
mov
jnp
js
inc
jne
mov
cmp
loop
add
dec
fsubrl
icebp
xor
outsl
pop
sbb
repnz
in
or
popa
outsl
outsb
je
in
jno
clc
out
pop
xor
dec
insl
or
or
or
mov
cld
inc
mov
pop
js
push
dec
out
pop
ss
lret
push
fs
push
pop
outsl
call
and
nop
push
add
movsl
ret
imul
mov
ficoml
mov
hlt
pop
shrl
adc
xorl
push
inc
mov
data16
punpckhdq
ds
jo
and
or
inc
inc
nop
add
cmp
mov
dec
arpl
test
movsl
lods
addr16
cmp
xor
pop
fdivrl
fistpll
push
movsb
insb
insb
xor
bound
xchg
or
jmp
xor
loope
inc
lea
push
mov
in
xor
add
lock
aam
push
mov
in
sub
push
fisubrs
or
clc
sbb
mov
inc
dec
ret
adc
add
jbe
in
or
mov
popa
andl
pop
sub
hlt
xchg
movb
aaa
xor
pop
push
mov
mov
outsb
mull
in
push
or
ret
shl
lods
imul
jnp
adc
or
pop
mov
inc
and
push
inc
inc
xor
push
xor
lods
ljmp
outsl
popa
in
dec
mov
xor
add
loop
popa
add
inc
and
imul
rol
imul
pop
or
enter
push
sbb
pop
xor
out
push
or
mov
dec
xchg
jnp
pop
add
push
adc
xor
adc
push
test
xor
call
mov
les
cltd
sbb
dec
movl
in
ljmp
push
addr16
push
or
mov
mov
cs
popa
ljmp
test
pop
mov
outsb
loop
shlb
pop
outsl
push
dec
xor
dec
cmp
enter
arpl
dec
cli
sbb
add
roll
call
lock
hlt
lcall
xor
shlb
mov
cld
cmc
sub
test
es
pusha
outsl
dec
imul
jno
and
clc
jb
cmp
jb
outsl
hlt
dec
clc
jo
add
dec
aam
call
jb
je
and
pop
xor
outsb
ss
out
lds
in
inc
dec
dec
adc
lods
mov
imul
mov
inc
aas
sti
xor
fldt
fcomps
repnz
push
jle
push
adc
push
jmp
jb
test
mov
insb
sbb
or
push
ljmp
mov
add
subl
test
jmp
or
xchg
cmp
xor
dec
fildl
inc
jns
dec
add
adcb
and
ss
push
inc
rol
outsl
push
mov
sbb
icebp
sub
mov
add
dec
jmp
mov
xor
add
inc
int3
je
loop
mov
scas
call
lds
xchg
add
aam
bound
or
shlb
jb
dec
dec
cmp
loop
xchg
das
fidivs
je
aad
pop
lock
call
loopne
test
sub
sahf
dec
jae
rclb
mov
pop
jno
in
xor
sbb
and
mov
mov
sarb
enter
jp
mov
push
dec
arpl
cld
push
or
jno
or
and
das
add
je
int3
mov
les
popf
inc
mov
xchg
mov
dec
or
imul
imul
sbb
stos
or
jne
xor
push
ja
jo
mov
mov
ss
jns
fs
in
outsb
aam
cmpsl
in
addr16
into
add
hlt
fcompl
pop
call
stc
cmc
xchg
push
mov
jne
dec
test
xor
pop
push
sbb
cmp
sar
mov
stc
mov
dec
sbb
sub
inc
pop
push
jne
loopne
add
lret
inc
pop
push
aas
popf
roll
shlb
add
add
push
add
mov
insl
sub
push
pusha
sub
rcl
std
ljmp
sub
outsl
je
and
adc
xlat
ret
cs
add
sub
cmp
pusha
xor
hlt
pop
dec
lret
cli
inc
call
add
out
or
push
sbb
rorb
cmpsl
cmpsl
lcall
rclb
out
je
int3
fcompl
ja
dec
xlat
fs
add
je
inc
jecxz
dec
sbb
cmp
and
pop
inc
mov
or
xor
xchg
cli
int3
faddl
sbb
int3
xchg
das
add
jno
xchg
pop
in
stos
loope
movsb
sub
xchg
test
int
insb
xchg
pop
cmc
jmp
loopne
mov
addb
outsb
jbe
insl
inc
inc
arpl
sbb
cmp
lahf
add
and
jecxz
ret
repnz
movsl
jmp
sub
lods
pop
ror
lds
imul
cmp
test
cmp
adc
adcb
or
dec
imul
lret
or
pminub
loop
mov
es
arpl
inc
mov
cmp
xor
shlb
jns
subb
jne
inc
pop
mov
cld
dec
mov
inc
repz
inc
add
mov
sub
in
out
js
stos
daa
inc
mov
dec
pop
test
int3
lea
sub
imul
pop
repnz
pop
imulb
js
adc
shlb
movsb
leave
pop
lods
xor
jno
jnp
negb
mov
adcl
jnp
adc
rolb
sbb
aaa
push
jbe
pop
sbb
je
pusha
lods
sbb
push
pop
fs
sbb
pop
mov
push
pusha
xor
loopne
aam
jl
aaa
icebp
mov
outsb
xor
pop
sti
push
sbb
dec
cmc
dec
inc
mov
inc
add
add
xchg
fisubs
clc
or
arpl
cmpsl
cmp
sub
cld
loope
push
mov
pop
aad
and
jecxz
sub
push
adc
in
push
int3
insl
push
jns
pusha
std
or
loopne
call
insb
mov
lods
pop
cmpsw
outsl
bound
cmpsl
in
imul
shl
lret
mov
arpl
dec
jp
imul
adc
test
jmp
movsl
sahf
das
sub
mov
sbb
xchg
fisttps
push
fadd
stos
mov
stos
arpl
inc
dec
jns
arpl
mulb
add
add
xchg
mov
notl
rcll
fs
es
push
add
pop
popf
adc
cmp
call
movsl
mov
gs
dec
dec
bound
roll
outsb
inc
mov
xor
dec
inc
jmp
sbb
enter
mov
xor
inc
ss
outsl
jbe
cmpsl
mov
push
xchg
fwait
pop
jg
mov
sub
pop
js
jle
lock
insb
movl
pop
mov
ja
xchg
outsb
adc
sbb
imul
ret
pop
stos
dec
fstpl
cmc
lds
je
jl
push
ds
cld
inc
cs
fnstsw
popf
add
stos
fucompp
sti
outsb
sti
or
iret
and
sub
fstpl
imul
mov
cli
icebp
faddp
cmp
ss
dec
mov
xor
loopne
imul
aaa
mov
fiadds
mov
ret
repnz
movsb
jp
or
enter
pop
outsb
hlt
or
imul
stos
loopne
cmp
dec
pop
outsl
pop
xor
mov
push
int3
bound
mov
adc
inc
in
emms
jb
je
pop
cltd
jle
and
movsl
fistpll
fisttps
hlt
xor
inc
sbb
and
inc
mov
les
push
push
xchg
mov
aam
add
pusha
insl
les
daa
add
sysret
push
jnp
in
mov
mov
lock
jnp
adc
dec
or
ja
or
sbb
insb
enter
sbb
mov
movsb
and
movsb
clc
dec
adc
imul
pop
lea
dec
inc
arpl
jae
mov
xorl
xor
shll
inc
test
fisubs
sbb
xor
fsubrl
inc
dec
push
call
call
adc
push
in
or
mov
inc
jae
pop
mov
sti
test
cmc
das
nop
shlb
les
pop
and
lods
lods
iret
inc
in
push
into
in
scas
adc
dec
dec
xchg
add
and
hlt
cmp
dec
pop
lods
inc
jmp
clc
add
mov
mov
bound
xor
jo
sbb
sar
sbb
push
xor
icebp
push
push
and
ficomps
ja
mov
dec
adc
push
outsb
ret
dec
push
dec
push
cmc
js
xchg
in
aas
push
adc
stc
negb
popa
loopne
shll
test
jbe
or
jne
ljmp
mov
jmp
iret
ja
sbb
dec
clc
inc
sub
fmuls
fcomps
mov
not
xchg
movsb
test
add
inc
sbb
fwait
push
shr
incb
and
xor
add
and
shll
mov
push
jge
add
inc
imul
in
fnsetpm(287
shl
or
lock
sahf
sbb
jmp
loopne
pop
dec
arpl
imul
sti
scas
xchg
sub
fildll
in
pop
xor
xchg
cmpl
cmovns
xchg
push
push
push
mov
aad
inc
outsl
and
out
pop
addr16
pop
sti
add
fsubr
jbe
cmp
jns
addr16
int3
mov
dec
je
test
pop
nop
outsb
call
and
add
fiadds
xor
lock
std
xchg
pop
add
cltd
xor
int3
xlat
aad
xor
cld
data16
inc
fsubr
and
push
sub
lock
fs
xchg
lahf
dec
js
ss
add
or
pusha
push
fildll
push
sbbb
pushf
sti
leave
je
xor
mov
adc
hlt
cmp
enter
cmp
imul
push
push
fs
lock
mov
inc
xchg
dec
dec
xor
call
outsb
pusha
arpl
outsl
sub
pop
shlw
pop
sbb
in
sub
fldl
movsb
das
lds
jmp
dec
lods
pop
andw
imul
in
rcrb
sarb
mov
test
fnstenv
push
rclb
sub
jo
sub
lret
jb
fcmovb
xor
std
in
sahf
add
jno
jb
push
pop
pop
sbb
ret
ja
jle
dec
push
add
mov
or
xor
fwait
movsl
jb
push
ss
mov
lea
inc
cmp
mov
xchg
ljmp
add
add
orb
or
and
or
or
inc
adc
add
mov
pop
add
add
inc
test
imul
incl
adcb
inc
adc
and
adc
add
fcmovu
mov
add
or
inc
fidivs
gs
add
jns
gs
add
add
insl
fistpl
inc
add
inc
das
dec
inc
and
lods
insl
mov
and
or
adc
xor
fcmovnu
outsl
insl
test
add
jne
test
outsb
pop
fistpl
pop
adc
and
mov
xchg
sbb
xor
scas
jae
mov
test
pop
scas
mov
imul
adc
adc
cmp
imul
adc
cmpsl
mov
jbe
add
test
mov
ss
cmp
lcall
xor
jmp
out
negb
in
jecxz
insb
add
scas
push
and
repz
scas
rcrb
add
pop
popa
and
fwait
lcall
scas
sahf
fidivl
gs
js
insl
push
push
js
add
in
jae
jmp
inc
scas
pushf
and
push
adc
jns
inc
lcall
int
pop
push
xchg
ret
inc
ret
insl
insb
je
insb
jo
dec
arpl
jb
pop
jae
mov
xor
imul
adc
rcrb
outsl
cmp
xor
jae
jle
push
and
or
mov
add
pop
lock
mov
rcr
test
stos
mov
jnp
xor
or
add
out
in
fsub
lcall
test
cli
outsl
call
jb
imul
xchg
js
call
insl
jae
push
in
cld
ds
mov
cltd
hlt
je
mov
jo
jne
sbb
imul
call
and
dec
pop
inc
xor
mov
stos
dec
je
inc
pop
sub
and
pusha
fcomps
fstl
mov
pop
dec
or
push
xlat
ret
jne
ficoms
out
ret
mov
in
jbe
inc
ss
popf
mov
stos
loope
imull
add
push
add
pushl
lret
xchg
in
lods
fs
mov
or
outsl
in
ret
cmp
inc
loop
jecxz
cmp
or
in
xlat
mov
cmp
shrl
sub
rcll
in
aas
out
das
xor
adc
cmp
rolb
sub
ljmp
sbb
pop
imul
lods
mov
dec
test
loopne
add
aad
inc
xor
incl
ret
inc
sti
stc
sbb
das
sbb
icebp
and
xor
cwtl
pop
lea
add
incl
push
int
in
sahf
add
lock
decl
adc
out
or
aaa
mov
scas
fisubrs
jl
ret
mov
std
xlat
popf
cwtl
push
jbe
popa
cs
xor
fisttps
jmp
decl
sbb
inc
lods
mov
jmp
pop
pop
mov
jns
fildll
decl
pop
and
fldln2
lcall
fucom
cmp
push
cmp
fiaddl
pop
in
call
mov
pop
mov
jo
xchg
push
cs
clc
fdivr
add
fidivrl
inc
out
adc
mov
push
test
push
pop
add
test
xchg
idiv
fisttpl
or
fistl
dec
cmpsb
jno
lret
and
arpl
fbld
sti
cli
dec
insb
pop
andl
pushf
enter
jae
out
mov
and
jg
adc
loope
loope
cs
stos
int3
mov
clc
ss
sub
repnz
movsb
pop
incl
push
loope
cmp
loope
add
sub
inc
rcrl
dec
andl
ljmp
imul
mov
cmp
and
push
adc
idiv
call
dec
push
cltd
inc
dec
sub
enter
das
and
add
jg
es
incl
sahf
andb
pop
fdivrp
pop
mov
jg
jl
pop
loop
xlat
stc
sbb
adc
add
cmp
jbe
cmpsl
sbb
repz
xchg
faddl
lret
in
repnz
jbe
int
jecxz
call
sub
and
js
cmp
adc
sti
cmp
inc
or
or
test
cmp
inc
imul
cli
ret
or
enter
xchg
xor
and
dec
ds
mov
cmpsl
sti
mov
int3
xchg
push
push
enter
xor
call
push
pop
stos
popf
stos
mov
es
dec
outsl
pushf
in
sti
mov
cwtl
loopne
pop
mov
xchg
enter
nop
sti
sti
xlat
mov
pop
jbe
jns
shlb
outsl
stc
inc
xchg
aam
adc
fs
cmpsl
incl
movsb
push
or
and
xorl
in
out
xchg
or
mov
mov
jp
mov
jae
cwtl
mov
lods
ljmp
sub
cs
xor
add
add
cli
ficoms
call
das
adc
jecxz
xchg
mov
cmc
xor
push
dec
cmp
rorl
in
int
jecxz
inc
adc
out
and
call
jmp
outsl
cmp
and
xchg
lahf
ror
addl
or
mov
add
inc
xchg
cltd
shrb
std
sti
and
dec
inc
jnp
xor
sbb
fwait
dec
daa
sbb
xor
test
inc
sbb
push
cli
jecxz
aam
push
push
jb
mov
hlt
incl
int
pop
dec
insb
fadds
push
arpl
jmp
sbb
incl
jns
jle
sbb
mov
xchg
divl
add
addr16
sbb
mov
aaa
dec
pop
int
push
ficoml
scas
jno
iret
in
cmovb
push
mov
jp
add
and
addr16
xchg
mov
popf
ret
and
xchg
mov
cmpsl
inc
popf
shll
dec
pushl
inc
pop
mov
out
mov
inc
cli
push
shl
fidivrl
push
rolb
sahf
and
call
pushl
mov
enter
ficoms
mov
repnz
daa
dec
in
std
decl
cmp
daa
dec
jecxz
leave
movsb
push
and
mov
mov
inc
sahf
movsl
ljmp
sbb
sbb
jno
and
test
adc
pop
ljmp
incl
and
inc
mov
icebp
mov
mov
into
push
xchg
jg
das
add
xor
xchg
fcomip
push
xor
lea
movsb
imul
daa
sbb
in
mov
aam
lcall
mov
mov
lcall
xor
adc
shrl
mov
into
push
inc
leave
mov
mov
fcomps
cwtl
jg
lcall
mov
dec
mov
jl,pt
mov
mov
jecxz
mov
mov
push
call
mov
out
fdivr
leave
add
jmp
enter
enter
xlat
clc
add
decl
pop
and
stos
mov
lcall
jmp
sahf
inc
mov
shl
sahf
loop
insl
pop
xorb
cmpsl
test
clc
repnz
jbe
or
pop
mov
insl
fnstenv
pop
in
push
add
sbb
add
orb
adc
adc
fisttpl
push
jle
sbb
inc
les
leave
lret
or
push
mov
imul
or
adc
xchg
nop
mov
ret
mov
test
out
lods
outsl
fnstenv
ljmp
add
mov
push
dec
jo
mov
pop
xor
rorb
mov
jnp
add
push
cmp
push
pop
mov
pavgb
arpl
fistl
daa
mov
pushl
in
in
mov
pop
push
push
sub
shl
jb
and
mov
test
in
fadd
adc
mov
sbb
push
sub
cmp
arpl
out
push
inc
andl
pushf
repz
sarb
stos
decl
out
shr
jnp
test
imul
rdtsc
testl
ljmp
loopne
movsb
lds
xchg
cmp
jl
je
xor
inc
add
mov
xor
mov
dec
jo
mov
les
or
out
jne
sar
dec
lea
xchg
faddl
add
and
arpl
rcrb
in
mov
iret
outsl
icebp
jg
insb
adc
div
xchg
jnp
div
sbb
dec
inc
jge
in
mov
icebp
aad
nop
xchg
mov
outsl
enter
xchg
mov
dec
or
dec
movsl
scas
movsl
inc
lods
in
dec
in
jg
cmp
scas
sahf
pop
ret
mov
addr16
je
push
pop
inc
add
stc
decl
test
lds
adc
ret
repz
out
dec
sub
sub
loope
inc
dec
into
repz
in
inc
pusha
sub
or
iret
mov
cmc
push
sbb
add
pop
or
decl
mov
jp
push
mov
or
call
sub
daa
popf
stos
mov
mov
pop
xchg
nop
roll
and
les
inc
arpl
lcall
add
sbb
shll
cmp
xor
push
mov
mov
sahf
test
mull
mov
lret
jmp
lds
mov
xor
inc
test
pop
stos
pop
inc
inc
mov
mov
mov
call
int3
clc
je
lock
insb
mov
lea
in
cmpsb
cmp
inc
add
call
jp
into
lret
jle
stc
cli
sbb
xor
add
insb
add
mov
fnstsw
fstpt
scas
aaa
mov
outsb
xor
jmp
lods
cs
rorl
jg
inc
pop
rep
mov
xor
jae
push
sbb
or
dec
loopne
fnstsw
xor
lds
xor
mov
jae
sub
subl
pusha
ljmp
xchg
xor
inc
sahf
sub
mov
es
mov
std
push
xor
adc
jg
or
lret
sbbl
sbb
xchg
sbb
xchg
mov
in
cmpl
inc
adc
shll
ja
sub
adc
xor
jg
xor
in
push
lcall
neg
push
xlat
mov
sub
call
stos
jmp
in
and
sub
and
adc
dec
jnp
movl
mov
mov
int3
xchg
pushl
mov
popf
mov
addl
cmpsb
cmp
rcrb
dec
rolb
xor
and
add
and
je
ljmp
lock
jge
add
ja
xchg
fdivr
cli
mov
imul
lods
or
mov
and
pushf
mov
mov
dec
push
js
pop
clc
push
sbb
popf
jbe
imul
sbb
out
sub
scas
jnp
adc
decl
sub
xchg
sbb
pop
fwait
mov
xchg
pushf
push
hlt
testb
jg
fbstp
aaa
jle
in
add
or
repz
mov
mov
or
int3
in
pusha
mov
adc
cmpsb
insl
mov
test
outsb
sbb
fstps
int3
pusha
lods
outsb
imul
pop
loop
out
adc
stos
sti
dec
sub
inc
dec
outsl
out
jne
stos
or
jmp
shrl
imul
jge
cmpsb
cmp
pop
std
clc
cld
das
outsb
call
stos
incl
pminsw
mov
sbb
mov
insl
call
cmp
loopne
dec
xor
mov
fisttps
inc
cmp
pop
xchg
cmp
icebp
mulb
adc
jne
jmp
pop
arpl
add
loopne
dec
mov
js
pushl
inc
pxor
hlt
lret
and
test
jp
iret
mov
ljmp
sbb
mov
popa
mov
daa
inc
adc
rorb
and
sti
call
and
jle
jg
mov
adc
dec
ret
testb
inc
mov
jg
pushf
xchg
pop
fwait
pop
push
sbb
mov
sbb
push
xor
pushl
adc
int3
pop
dec
sar
jns
jne
jae
pop
imul
and
stos
jnp
xor
fldcw
cld
jg
repnz
xchg
mov
clc
xchg
std
jg
dec
mov
push
xor
and
and
movsl
aaa
cli
popa
cmp
or
sub
repz
push
mov
pop
lret
cwtl
ret
sbbb
imul
cmpsl
aad
xchg
push
je
in
fidivrs
imul
lcall
out
pop
pop
xchg
push
lock
jbe
pop
loop
sbb
movsb
lret
mov
mov
call
jp
cmpsb
fadd
push
cmp
jl
hlt
sub
das
nop
dec
xchg
jno
fxam
add
data16
stos
andb
adc
jle
es
sbb
push
jp
cmp
xor
and
pushf
jecxz
xchg
mov
pop
cs
aaa
xchg
std
scas
lock
fstps
sbb
inc
mov
popa
arpl
or
ljmp
nop
cwtl
inc
imul
lret
ljmp
push
mov
ljmp
adc
xlat
loope
sub
inc
and
arpl
lea
pushl
out
icebp
mov
into
daa
fstpl
cmpsb
cwtl
out
xchg
es
incl
pop
adc
add
shlb
mov
cmpsb
outsl
push
push
inc
or
fildl
lret
dec
jmp
push
shrl
je
aad
or
das
insb
mov
out
ds
movb
movsl
add
adc
mov
xor
cs
mov
in
push
xor
mov
outsl
lcall
push
lds
mov
and
and
mov
rcl
test
add
loope
jl
inc
gs
dec
ljmp
out
fiaddl
dec
jns
sbb
jmp
push
mov
loopne
or
std
ljmp
lock
sbb
mov
cmp
push
cmp
insb
mov
push
sbb
push
ljmp
jg
adc
mov
iret
sbb
xchg
mov
fwait
shl
xchg
xchg
std
ljmp
cld
movsl
or
mov
xor
insl
insl
imul
cld
pop
inc
cltd
sub
in
push
orb
jb
aaa
cli
fists
pop
es
enter
or
pop
mov
or
das
out
push
xchg
cmp
ss
push
lock
clc
xorl
pop
repnz
or
mov
jmp
insl
loop
jp
cltd
push
mov
and
icebp
jnp
inc
mov
jbe
cmp
daa
fwait
cmpsb
jg
xlat
adc
xorl
leave
pop
in
pusha
movsb
inc
lock
lea
int
repz
cli
mov
dec
cli
fucomp
pop
pcmpeqd
lcall
hlt
call
dec
hlt
dec
cmp
lods
pop
cmp
and
fcmovu
je
cld
jl
dec
dec
sbb
xlat
xchg
mov
jl
out
push
cld
jnp
jo
jae
incl
out
xchg
mov
ror
push
mov
data16
popa
push
mov
dec
in
jmp
xlat
or
cmp
lret
scas
sahf
cmpsb
mov
mov
in
jg
sbb
mov
stos
pop
das
cld
mov
mov
lret
cmpsl
mov
adc
adc
mov
pushl
test
outsl
sahf
adc
or
inc
out
sbb
in
cltd
loope
ljmp
push
adc
popf
mov
pop
sbb
cmpsl
and
and
sub
incl
jg
xor
loopne
shll
xor
mov
cmpsb
ljmpw
mov
in
mov
pushl
dec
or
xlat
ljmp
fwait
pop
cwtl
mov
inc
adc
shl
lcall
mov
nop
call
push
mov
sub
or
gs
cmp
rep
pop
jge
scas
iret
movsb
je
outsl
std
jg
adc
fiadds
fldcw
adc
fisttps
sub
add
loop
inc
cs
popa
mov
pop
or
pushf
mov
mov
mov
mov
ret
mov
sbb
js
ljmp
sub
sub
in
in
popf
data16
xor
pop
cld
mov
xor
xor
mov
adc
movsb
mov
aaa
cli
pushl
orb
leave
fs
inc
or
xchg
and
ljmp
aas
popa
push
pop
out
popf
mov
push
pop
ficompl
decl
mov
mov
inc
das
ss
xor
mov
mov
jno
sarl
out
inc
adc
iret
add
in
inc
ret
pop
imul
push
in
repz
or
cwtl
fisubrl
jle
push
mov
loopne
xor
sbb
test
ljmp
hlt
out
inc
outsl
out
ljmp
mov
and
pop
jne
mov
hlt
outsb
push
jns
sti
inc
sub
in
decl
mov
sub
xchg
clc
mov
aas
out
imull
lds
jnp
mov
cmc
incl
shlb
test
dec
jne
sub
ret
dec
cmp
pusha
js
add
mov
pushl
add
add
nop
inc
cmc
mov
std
mov
lds
cmp
pop
into
andl
fwait
in
mov
loope
ljmp
sar
jmp
jmp
out
add
add
pop
or
and
push
pop
jl
ficompl
jno
inc
stos
in
cmp
inc
jno
mov
jbe
dec
pop
xor
out
lret
aad
mov
dec
sub
push
mov
inc
out
mov
xchg
stos
jmp
std
ja
or
call
outsl
sub
dec
jb
pop
cmpb
inc
incb
loopne
or
gs
add
clc
shll
inc
clc
cli
das
pop
inc
dec
scas
icebp
std
sub
pop
xor
test
loopne
mov
pushl
push
jne
pop
in
sbb
push
js
add
leave
aam
iret
and
dec
ficoml
mov
push
jbe
mov
push
aas
dec
push
mov
hlt
lcall
jmp
mov
stos
lods
cmp
loop
mov
fs
cmp
mov
fcmovne
je
adc
cmp
popf
shlb
lret
sub
xchg
imul
decl
ds
dec
imul
leave
mov
or
or
loop
xor
decl
out
les
in
ret
clc
adc
fnstenv
clc
lock
mov
mov
push
pop
jo
push
mov
mov
pop
insl
rcll
stc
push
pop
adc
leave
jbe
inc
mov
inc
loop
push
iret
pop
mov
lods
add
jnp
andb
mov
rorb
aad
jmp
out
in
xchg
push
scas
shlb
mov
imul
push
pop
cli
test
stc
orl
stos
xchg
decb
cmc
decl
mov
cltd
shl
data16
lcall
xchg
mov
addr16
aad
test
stc
sbb
sub
outsl
lock
pop
clc
add
enter
dec
pushf
mov
adc
in
sub
decl
rorb
shl
push
adc
dec
sub
pop
fimuls
inc
jae
jmp
call
nop
pop
cmpl
cs
into
nop
mov
sbb
sbb
inc
jno
int
mov
das
std
incl
addr16
inc
ljmp
nop
mov
sbb
into
lcall
das
pop
or
ret
sbb
cmpsb
pop
aad
jmpw
shll
sti
and
and
cltd
ds
add
fdivrp
xchg
pop
xchg
ja
xor
mov
xchg
jnp
les
dec
loop
xor
loope
jl
negb
daa
sbb
mov
and
loop
movsb
mov
mov
movsl
mov
or
inc
aaa
sbb
stos
aas
jg
pop
cld
mov
xor
jae
inc
fs
popa
mov
add
cmc
push
in
test
fnstenv
pop
and
xchg
push
sub
decl
dec
pop
jp
les
lret
mov
sar
fidivrl
push
xchg
mov
and
shrl
movsl
mov
sbb
add
add
pop
sbb
faddl
das
fldt
fldenv
rcl
mov
popw
fstpl
fbld
inc
or
aam
rcll
or
add
push
sub
std
in
xor
push
daa
dec
sbb
mov
loopne
test
das
cmc
pop
std
mov
imul
mov
hlt
mov
and
sub
fwait
and
jg
das
push
mov
push
stc
inc
push
push
dec
lods
inc
push
xor
xor
jnp
xor
add
cs
mov
xchg
xor
outsb
xor
das
lock
push
mov
sbb
fs
lret
sahf
xchg
sarl
lods
lods
or
xor
sbb
rol
lods
dec
es
out
outsl
pop
std
pop
clc
cwtl
notb
movsl
scas
ss
jnp
movsb
push
xchg
divb
or
test
jmp
lret
lret
mov
inc
cmp
pop
push
lds
std
out
inc
sti
xor
bnd
decl
aaa
jo
out
das
pop
fisubs
dec
mov
int
dec
dec
imul
and
mov
repnz
mov
pushf
mov
mov
push
es
xor
mov
pop
pop
cli
mov
inc
add
ljmp
pop
lods
clc
dec
jl
jmp
call
pop
mov
jae
or
fs
scas
imul
cmc
ljmp
mull
fcompl
pop
enter
ljmp
ljmp
cmc
inc
cltd
xor
inc
sbb
dec
add
jl,pn
or
mov
push
push
jecxz
lcall
hlt
ljmp
aam
or
aaa
push
mov
stc
pusha
ss
mov
stos
outsl
icebp
divb
lea
fnclex
jae
negl
pop
inc
add
mov
cmp
sbb
xchg
movsl
inc
dec
jp
movsl
outsl
iret
icebp
js
dec
mov
xchg
and
imull
inc
and
xor
pop
add
or
int
repnz
jg
lods
loopne
rcrl
test
out
sub
enter
adc
and
add
lcall
mov
pop
jne
or
pushf
cmpsl
adc
and
mov
cmp
sahf
mov
iret
sti
mov
outsb
lcall
lcall
test
es
pop
jecxz
nop
add
lcall
ljmp
outsl
xchg
lock
ret
in
pop
push
cmpsb
in
ret
fsub
popa
sub
enter
popf
dec
ja
leave
ret
in
mov
mov
cs
rcrl
xchg
cli
jle
fimull
pop
jecxz
lock
sub
inc
xchg
ljmp
cmp
mov
pop
xchg
adc
js
pop
std
dec
jmp
cmp
xor
es
jecxz
push
lds
and
push
dec
sbb
cmp
test
cltd
dec
pop
adc
mov
lock
lret
imul
call
sbb
or
adc
sub
scas
cmp
push
and
aaa
mov
mov
mov
rorb
ljmp
mov
or
cmp
fistpl
adc
das
xchg
cmp
decl
push
jbe
pop
popl
mov
ljmp
lock
or
xor
or
or
pop
mov
add
dec
cld
incl
mov
les
xchg
xchg
cmpsl
mov
adc
mov
std
dec
sub
adc
inc
push
sub
xor
jg
jmp
push
imul
sub
mov
mov
jg
decl
push
sub
lods
mov
nop
fmull
out
int
push
and
jb
out
inc
mov
pop
mov
arpl
insl
sbb
ljmp
dec
movsl
fistpll
data16
dec
mov
in
jg
jmp
dec
xor
cmp
mov
add
fcmovne
decl
push
adc
pop
sarl
test
or
decl
and
lret
mov
and
xor
dec
jbe
ljmp
outsl
nop
scas
pop
xor
into
hlt
and
jo
xlat
dec
mov
mov
cmp
dec
push
insb
mov
in
movsl
xchg
dec
sbb
jne
daa
popa
aam
decl
xlat
stc
ret
dec
xchg
xchg
adc
js
push
rcrb
or
xchg
sbb
or
aas
out
or
ret
adc
decl
movsl
cmpsl
stc
rcrl
jl
hlt
int
mov
push
decl
push
dec
jbe
movsb
arpl
fildll
fcmovu
mov
jmp
or
add
mov
push
nop
jle
xchg
ficomps
mov
inc
bound
hlt
outsl
test
xchg
lcall
or
dec
xchg
push
jp
cmp
cmp
movsl
push
in
gs
inc
dec
outsb
mov
lea
cmp
and
shl
mov
icebp
fisubrs
mov
cmp
cmpl
add
pop
lock
decl
pushl
mov
clc
sbb
push
out
call
mov
lcall
hlt
notb
daa
jg
inc
pop
sbb
jge
lcall
popf
cwtl
andl
and
lcall
mov
pop
ljmp
sub
das
push
or
testb
mov
push
fcomip
std
gs
ror
or
ja
mov
hlt
jmp
aad
mov
ficomps
adc
test
mov
sbb
sbb
das
cmc
addr16
pop
sub
sub
sbb
mov
das
hlt
sub
mov
jo
rcl
adc
jo
dec
loope
jmp
data16
pop
loopne
lahf
xchg
lret
out
dec
stos
mov
mov
call
mov
cmpsb
mov
mov
std
mov
pop
fisttpll
mov
push
pusha
iret
cmp
or
mov
jb
mov
add
incl
aas
loop
clc
neg
xchg
hlt
xor
popf
push
sub
fnsave
fst
mov
pop
xchg
sti
daa
rdtsc
stc
inc
or
rclb
lods
push
jo
jg
sbb
inc
not
hlt
push
jmp
mov
daa
or
xlat
mov
sbb
movsl
sbb
fwait
outsl
lock
in
repz
cmp
out
iret
mov
push
gs
jmp
cmp
rcrl
aam
xchg
sub
movsl
adc
pop
loopne
add
mov
call
push
add
inc
testb
push
js
das
push
loopne
test
out
jno
xchg
test
jp
cmp
call
pop
jl
aad
popa
inc
and
lods
jmp
sti
dec
icebp
cmp
int
movsl
repnz
and
mov
xchg
sahf
sub
cld
decl
sbb
out
pop
scas
xor
repz
imul
pusha
jmp
mov
es
fwait
decl
cld
push
cmc
imul
sbb
outsl
add
lcall
aad
jmp
call
subl
ffree
and
pop
inc
mov
xor
sub
cmc
pop
pop
fs
in
mov
inc
andl
cli
lcall
cmp
shrb
or
sbb
jmp
inc
out
loop
in
incl
jp
out
adc
int
aaa
xor
cmc
xchg
insb
jg
jg
std
sti
je
lret
jg
js
xor
cld
mov
dec
pushl
call
test
jno
out
cmp
sbb
ljmp
cmc
ret
fildl
sti
xchg
sbb
mov
dec
jns
incl
lcall
dec
cmp
out
inc
push
jae
fildl
stos
cmp
test
loopne
xchg
js
push
sarb
pop
adc
mov
lods
jbe
inc
les
pop
sarb
push
fildl
adc
mov
mov
sub
shll
push
cmp
inc
mov
incl
xor
in
andb
jnp
cmp
cmp
fildl
mov
lcall
sti
into
add
or
test
push
test
pop
gs
push
daa
bound
inc
sub
mov
scas
shl
mov
mov
mov
or
ljmp
sub
out
push
ret
das
push
fwait
mov
add
leave
jo
pop
aaa
aas
pop
pop
cwtl
mov
lods
jg
jne
push
xchg
cwtl
outsl
out
adc
rcrb
mov
cmp
pop
inc
dec
addr16
sbb
loopne
jmp
sbb
mov
lods
dec
jmp
mov
clc
in
je
or
sub
jle
movsl
ljmp
lcall
aas
lahf
ret
pop
cmc
stc
movsl
stc
adc
mov
push
bound
arpl
ss
jmp
sbb
scas
cmp
pusha
out
xor
dec
nop
mov
jg
fistpl
push
outsb
sub
adc
jnp
out
sbb
add
push
jg
jmp
mov
push
or
jmp
mov
push
lcall
fidivs
mov
into
out
ret
pushf
push
jbe
shrb
push
jb
inc
incl
test
imul
sarb
test
leave
fisubrl
scas
fsubs
icebp
push
or
sbb
jne
call
jno
mov
icebp
imull
je
fisttps
fidivs
mov
push
lcall
cs
stos
pop
push
xchg
lock
incl
cmp
rcrb
fsubs
sub
sub
test
push
es
mov
ffreep
or
sar
fdivrl
sub
jo
sbb
into
push
jmp
add
push
in
push
pop
orl
pop
mov
jnp
in
sbb
decl
xor
adc
mov
jae
cmp
and
sub
xchg
jg
push
cmpsl
mov
ficoml
ljmp
incl
jmp
add
inc
pop
cltd
sbb
inc
or
xor
push
dec
leave
cmp
jmp
mulb
mov
popf
jmp
incl
fimuls
les
xchg
int3
in
clc
int3
jnp
xchg
jmp
xor
pop
in
cmp
cmpsb
pop
in
out
dec
outsl
scas
jno
stos
incl
test
movsl
ss
sbb
lcall
jmp
mov
outsb
jo
ja
jbe
aas
lahf
call
cmp
mov
mov
mov
mov
push
dec
lret
jns
lahf
sahf
ret
mov
sti
add
cmp
jg
push
movsb
std
test
fisubl
cmp
mov
jmp
mov
add
dec
pop
ret
js
inc
dec
xor
in
mov
pop
aam
fstpt
pop
cltd
mov
fimull
loope
iret
test
push
cwtl
xor
mov
ljmp
push
shl
pop
mov
testb
lods
cmpsl
and
and
sub
ljmp
fistpll
or
dec
movl
adc
out
pop
mov
pop
jnp
loope
fnstsw
inc
mov
jnp
xchg
cmp
lret
jns
fucomip
in
sti
xor
sub
data16
loop
maskmovq
negl
test
gs
orl
cmp
orl
das
jb
mov
lods
lock
xor
adc
or
enter
icebp
mov
mov
leave
ret
lret
popa
lret
xchg
add
jg
xchg
jecxz
in
jg
ljmp
sub
add
add
icebp
call
sarb
je
fwait
adc
add
std
or
out
outsb
inc
sahf
fldenv
fdiv
lret
in
pushf
out
mov
jl
inc
stos
mov
lret
adc
call
mov
pop
jl
fwait
sbb
mov
call
ljmp
jne
push
cmp
lret
mov
jnp
cmp
inc
push
pop
pop
jle
add
sbb
std
loop
and
fwait
adc
int
push
mov
mov
imulb
cmp
lcall
out
pusha
das
pop
mov
push
mov
ror
movsb
push
addr16
call
jae
leave
inc
test
dec
cmpb
ret
and
add
stc
cmp
hlt
incl
mov
out
or
mov
inc
mov
push
add
in
fildll
mov
mov
sub
fldl
je
stos
call
in
cld
add
xchg
xor
roll
scas
imul
incl
sub
fsubr
movsl
mov
jo
jae
sub
add
loopne
repnz
adc
ds
dec
push
enter
testb
cwtl
xlat
aas
test
rcll
or
rorl
mov
jle
jns
push
call
mov
addr16
mov
imul
xchg
clc
push
in
adc
stos
in
hlt
mov
mov
loop
stos
pushf
jp
xlat
cmp
std
mov
cmp
push
ds
outsb
mov
mov
es
jbe
inc
inc
mov
sarl
stos
les
insb
arpl
lods
addr16
shll
lock
das
push
pop
jns
cmpsb
pop
rcpps
push
push
adc
test
in
aas
xor
stos
cmp
dec
xchg
inc
jmp
cmpsb
xchg
repnz
lret
adc
std
cld
mov
lock
in
das
jmp
xor
popf
push
pop
xchg
pop
mov
fsincos
push
or
lcall
xor
scas
jne
xor
mov
xor
fildl
cli
jmp
jp
and
sbb
mov
loopne
add
mov
movsb
mov
in
rorb
jecxz
ljmp
in
out
jo
sub
sub
mov
sbb
mov
dec
mov
pushl
inc
mov
stos
xor
aad
scas
pop
xor
shll
dec
std
jmp
mov
aaa
jno
lea
xor
mov
push
mov
shrb
in
pop
int3
ss
lods
xchg
cltd
mov
dec
mov
cmpsl
and
mov
gs
inc
pushf
xchg
mov
ljmp
rolb
outsb
jne
js
cmp
xorl
and
or
not
popf
mov
push
outsb
pop
popf
mov
push
fldenv
push
push
dec
xchg
test
icebp
incl
subl
call
jae
mov
sub
jmp
shl
or
dec
inc
fidivrs
sub
daa
shll
out
jno
test
incb
stos
pop
lcall
into
pop
call
jp
xchg
sbb
dec
sti
or
pop
in
xor
cmp
movsl
divb
cli
mov
dec
arpl
push
xchg
push
in
lds
loope
jmp
decl
pop
xor
imulb
xchg
addr16
mov
jg
fcomip
dec
clc
mov
ret
push
out
cmpsl
dec
mov
inc
cmp
decl
mov
and
cld
outsb
jns
pop
xor
pop
icebp
xlat
test
and
fisubl
sub
jl
lret
mov
xor
xchg
jge
iret
dec
mov
incl
cli
cmp
jg
lahf
scas
push
jl
xchg
sub
mov
call
push
jne
push
mov
mov
and
mov
cltd
adc
sub
adc
mov
ret
sub
fldt
cmpsl
lods
jg
dec
jnp
rcr
dec
les
mov
lea
push
cld
mov
and
inc
jb
mov
andb
cmpsb
mov
mov
sbb
int3
mov
inc
fsubr
mov
xor
or
pop
mov
dec
push
rclb
dec
call
jg
pop
xor
js
sbb
pop
xor
mov
out
mov
movsb
pop
jo
jmp
test
dec
icebp
jge
data16
jmp
mov
cli
sbb
inc
dec
mov
cmpl
push
inc
shl
mov
scas
xchg
sti
jae
mov
fucomip
incl
xlat
js
jmp
cmpsb
cmp
call
outsl
std
pop
out
pushf
or
imul
popa
pop
dec
shr
sti
outsl
cmc
mov
pop
add
js
jns
add
dec
jno
outsl
lock
repnz
jmp
stos
dec
std
or
xchg
out
mov
jge
movsl
movsl
pop
mov
inc
aam
mov
jecxz
jmp
mov
xchg
mov
fldcw
decl
lea
inc
cmovge
jo
ret
jmp
es
in
out
fisttpll
bound
or
jg
sub
stos
rorl
and
and
aam
add
mov
and
cli
decl
out
pusha
cli
add
in
dec
add
xor
ljmp
jbe
add
push
push
xchg
lcall
jg
test
pop
testb
out
jns
push
in
out
into
mov
jae
loope
cmp
mov
cs
cs
sbb
test
jbe
imul
stos
push
adc
scas
rcrb
mov
or
test
pusha
outsb
test
decl
mov
jmp
mov
push
dec
hlt
xor
iret
pavgb
mov
pop
sbb
cld
jecxz
test
pop
cld
jg
xor
out
cmp
sbb
int
call
das
jo
pop
loopne
pop
mov
adc
mov
std
mov
jle
rcrb
lret
inc
push
ljmp
addb
aas
popa
mov
jmp
jg
fisubrl
jp
sti
add
shrl
decl
mov
pushf
mov
or
push
xchg
addb
cmc
cwtl
inc
lods
sub
shll
pop
sbb
fldl
imul
adc
or
jne
pop
cmp
jmp
int3
clc
outsl
hlt
jg
xchg
lock
push
arpl
nop
mov
add
scas
mov
outsb
sub
mov
add
mov
jecxz
mov
in
incl
jb
mov
jle
sbb
dec
ds
pop
imul
pop
clc
jg
mov
or
lods
inc
mov
xchg
subb
jne
fstpl
pop
pop
jnp
fdivrs
mov
into
clc
fidivs
mov
dec
pop
cli
ret
repnz
outsb
movsl
adc
cli
call
dec
push
push
push
in
mov
stc
scas
jnp
push
inc
pop
ret
and
shlb
mov
add
hlt
call
loopne
outsl
pop
jle
mov
cmp
call
pusha
or
sub
cmp
adcb
fadds
lret
jmp
dec
mov
xor
sbbl
lods
incl
adc
inc
les
fdivs
ret
hlt
dec
std
call
pop
inc
out
fistpl
push
jns
jecxz
adc
jle
outsl
icebp
insl
je
test
jecxz
stos
mov
mov
jmp
lods
fbstp
sub
test
mov
push
ljmp
mov
pop
repz
lret
rclb
xchg
xorl
cmovb
ds
cmp
enter
push
cltd
jns
push
test
decl
mov
inc
fdivrl
cwtl
sbb
loopne
mov
outsl
push
mov
out
cmc
inc
ljmp
pop
inc
xlat
adc
xchg
dec
mov
rcrl
add
mov
jp
add
jns
cltd
mov
adc
adc
loop
cld
decl
cld
mov
out
cwtl
add
inc
outsb
mull
inc
data16
push
dec
pop
cld
mov
shrl
xchg
xlat
add
jmp
rclb
mov
inc
sarb
decl
out
push
jge
enter
xor
scas
mov
lods
and
rcl
ljmp
decl
jle
neg
ret
sbb
lret
inc
je
js
cmpsb
mov
int
ret
incl
aas
xchg
mov
aaa
scas
jge
rorl
inc
mov
pop
mov
scas
cli
decl
adc
movsl
and
daa
icebp
push
xchg
scas
inc
movsb
pop
rol
cmp
fbld
mov
xor
stos
popf
sub
dec
test
dec
outsl
js
xchg
mov
int
push
incl
adc
sysexit
xchg
psllw
push
xor
cmp
ljmp
loop
pushl
outsl
mov
cmp
ret
out
in
outsl
iret
lock
sbb
test
pushl
inc
or
int3
into
outsb
adc
insb
xchg
sarb
sbb
fstpt
ljmp
pop
insb
jmp
adc
sbb
adc
std
sbb
add
inc
ljmp
jns
vunpckhps
scas
loope
lock
xchg
inc
mov
incl
cmp
and
sub
sbb
inc
fs
pushl
adc
mov
xor
pusha
mov
dec
test
rcrb
loope,pn
ljmp
cld
negb
daa
pop
pop
lods
testb
xchg
insl
adc
jg
mov
xor
nop
and
imul
ds
xchg
lea
sbb
out
sub
jg
inc
gs
daa
fmuls
mov
inc
push
jg
mov
mov
jg
jns
add
das
repnz
imul
adc
jle
aad
sbb
std
ret
mov
mov
les
mov
lods
jmp
mov
call
jmp
in
pop
stc
pop
push
cmpsb
es
repnz
push
xchg
push
je
cmp
or
sahf
rorb
xor
xor
add
loop
stc
call
xchg
mov
pop
mov
pushl
cmp
cmp
or
popa
je
stos
out
adc
and
pop
std
xchg
outsb
jle
cli
mov
in
ljmp
sti
push
inc
sub
in
fucomip
enter
xchg
mov
xlat
mov
aas
enter
mov
aas
int
sahf
cmpsb
scas
inc
mov
fucomi
inc
lock
cld
pop
incb
rcll
push
cmp
call
push
in
pop
fwait
mov
jecxz
push
pusha
adc
outsl
aad
add
decl
mov
fwait
or
xchg
push
aad
outsl
lock
xor
cwtl
push
outsb
xchg
and
or
or
popa
ret
xchg
add
inc
xchg
push
shrl
push
xor
push
sub
jmp
xchg
fldl
test
fnclex
add
xchg
sub
roll
out
jne,pt
decl
movb
jns
xor
jno
popf
repnz
cmp
sub
mov
in
in
mov
push
pushf
adc
sbb
cmp
sub
mov
push
cli
pop
push
aam
adc
push
push
cmp
arpl
cld
mov
je
imul
in
pop
mov
mov
dec
cld
lcall
dec
scas
shll
cmp
sbb
push
mov
add
inc
imull
add
in
ud1
mov
std
incl
imul
pop
clc
cltd
jg
arpl
mov
test
imul
data16
add
sub
inc
xchg
incl
mov
fisttps
mov
inc
cli
lcall
js
fldenv
adc
movsb
shlb
sub
jmp
call
jmp
xchg
push
bound
mov
and
mov
int
cmp
push
daa
in
adc
ljmp
xchg
mov
adc
ja
bound
fisubrs
cmp
inc
jo
divl
loopne
ret
lock
push
xorl
sahf
js
sub
insb
inc
xchg
decl
jg
push
addr16
negl
pushf
std
test
xchg
sbb
and
push
jne
push
or
add
adc
mov
sar
pop
test
mov
scas
repz
xchg
mov
test
ljmp
and
pusha
popl
fimull
in
ret
jl
scas
sbb
repnz
test
mov
inc
ja
adcb
cmc
sbb
mov
test
pushw
data16
mov
jg
jo
mov
call
sub
movsl
cmp
fsubl
lcall
dec
mov
int3
sub
cmp
or
xchg
es
jmp
push
movsl
lods
cs
mov
sub
leave
inc
aad
mov
icebp
add
lds
push
out
divb
adc
sbb
loope
and
pop
rorl
lahf
shl
cmp
pushl
sub
add
int3
out
arpl
push
mov
cmp
mov
sub
call
sbb
and
cmp
dec
mov
gs
repnz
mov
jmp
fisubl
xchg
mov
in
lods
cld
sbb
in
fidivrs
ror
repz
cli
call
fists
adc
jge
adcl
mov
clc
adc
scas
sub
mov
int
repz
mov
loopne
jmp
mov
mov
inc
push
inc
add
sar
mov
fnstsw
call
xorb
jae
hlt
insb
imul
add
jmp
jge
push
inc
pop
cltd
bound
and
mov
pop
xor
std
sub
sar
pop
sub
and
sbb
mov
add
mov
inc
shlb
pop
mov
fisubrs
out
cltd
add
loope
sub
pop
icebp
imul
leave
mov
nop
ja
mov
sbb
mov
das
dec
or
inc
push
cs
jo
std
mov
in
ljmp
push
dec
cwtl
cmp
sub
cmp
push
push
push
cld
add
pusha
int
sbb
push
nop
add
shrb
lcall
std
pushl
enter
jecxz
and
inc
jle
pop
xchg
mov
and
pop
call
adc
sub
cmpsl
or
xchg
pop
mov
sub
mov
cs
jl
test
xchg
pop
mov
jg
repz
jg
fists
adcb
pop
std
int
cmp
dec
sub
pop
gs
fmulp
adc
outsl
xor
jg
lret
inc
xchg
je
xchg
mov
mov
mov
sbb
xchg
mov
decl
clc
cwtl
mov
je
push
cmp
xchg
or
add
stos
cmc
xor
je
stos
pop
mov
les
lcall
lcall
jg
cmp
ret
sub
mov
add
lds
mov
fdivr
jge
add
roll
jl
ljmp
das
std
incl
mov
aaa
and
inc
imul
and
cmpsl
loop
sbb
sarl
loope
std
outsl
dec
xor
movsl
int
jnp
stos
lock
jecxz
pusha
das
adc
decl
test
mov
cmp
sub
mov
lret
lock
mov
add
xor
adcl
mov
pop
dec
sbb
ljmp
mov
es
mov
push
inc
popa
mov
ljmp
push
push
mov
xchg
fbstp
pop
filds
adc
sub
mov
or
data16
call
pop
mov
xor
iret
pop
mov
dec
mov
das
mov
fistpll
repnz
out
in
incl
inc
loope
adc
add
arpl
fdivrp
cmp
andl
jg
push
fmull
flds
sarb
mov
call
test
dec
mov
pop
mov
jns
jne
mov
sub
test
aam
xlat
xor
xlat
ret
add
cmpl
mov
xorl
int
fstps
pop
mov
sbb
shrl
rolb
outsl
cmc
incl
aad
or
ret
add
in
or
call
sbb
call
pop
aaa
pushf
pop
sub
das
adc
mov
in
fld
jo
popf
ljmp
lcall
je
jae
daa
mov
pop
pop
stc
pop
pop
ljmp
bound
repz
fidivrs
inc
call
ret
mov
dec
inc
lock
lea
pusha
pop
xchg
leave
repnz
adcl
cmp
jmp
in
int
ficomps
mov
add
and
ret
jle
hlt
lcall
cmp
mov
in
cmp
jp
lret
shlb
cld
inc
sar
mov
jbe
stos
mov
lret
mov
mov
decl
imul
cmpsb
aad
or
mov
fildll
das
out
loope
push
inc
int
xor
dec
clc
int
inc
mov
mov
pushf
fcmovnu
in
gs
data16
icebp
fstpl
decl
loop
mov
mov
sub
jmp
push
sahf
fsubrl
inc
cmp
mov
shll
xor
std
ljmp
dec
ljmp
addr16
lods
ret
es
pop
cmp
test
clc
pushf
lcall
je
ss
push
cmp
andb
dec
shll
jno
or
push
mov
jp
inc
lea
psubw
add
pop
out
inc
ficomps
cmpl
mov
add
pushf
add
cmpsb
jns
lds
dec
add
filds
xchg
jae
add
mov
das
pop
adc
repz
xchg
in
jne
mov
popa
mov
pop
pop
addr16
cmp
icebp
repz
leave
in
js
cli
fnstsw
or
pop
mov
xchg
out
pop
test
pop
or
in
cmp
pop
je
fisubrl
aad
xchg
and
sub
xor
cwtl
imul
sbb
roll
and
xchg
or
push
fsts
test
or
push
pop
into
xchg
adc
clc
inc
mov
adc
insb
mov
xor
xor
mov
adc
decl
jmp
xor
or
movsb
jg
out
sti
sbb
and
jg
fsubrl
in
fwait
mov
push
cmp
mov
jp
jg
lcall
mov
mov
insl
inc
lcall
loop
mov
in
mov
inc
imul
sub
inc
xorl
dec
add
in
loopne
outsl
hlt
jg
sarb
adc
mov
mov
lcall
lcall
call
push
repnz
sbb
mov
lahf
jae
mov
pop
repnz
popl
inc
loop
jns
mov
ss
sarl
call
mov
testb
mov
sub
loopne
lods
call
add
jb
add
xchg
lea
xor
fdivrp
das
hlt
sbb
add
loopne
ja
repnz
outsb
jecxz
cmc
mov
jmp
subl
lods
ss
insl
jno
shl
mov
stc
jnp
popa
clc
sbb
stos
stc
cmpsb
jno
and
lcall
lcall
dec
sahf
xor
push
push
sub
in
lods
xor
sarb
aas
movsl
and
ud0
xor
xchg
movsl
mov
or
movsb
xor
jmp
stos
lea
push
lahf
mov
xchg
pushf
inc
push
lods
ret
in
push
and
fdivl
adc
mov
push
decl
hlt
pop
jp
jo
mov
int3
pop
int3
add
fdivl
ret
adc
lcall
cld
pushl
shlb
adc
or
aaa
mov
mulb
rcll
adc
out
mov
dec
std
mov
mov
in
adc
add
mov
mov
sahf
add
decl
push
push
and
sahf
pop
loopne
aam
lods
adcb
dec
push
mov
pushf
int
rcrl
sub
inc
test
push
test
cmc
adcb
inc
pop
or
stos
cld
add
repnz
sub
movsb
decl
and
test
push
bound
cmp
iret
mov
add
in
cli
mov
mov
inc
inc
ljmp
cmp
cmp
jns
pushl
fidivl
stos
lock
insb
lea
clc
in
jp
adc
mov
hlt
das
push
mov
dec
or
or
xor
dec
imul
call
roll
push
or
int3
in
dec
or
in
and
ror
inc
cmp
sar
clc
add
mov
or
rcl
in
xchg
out
pop
xor
mov
push
add
adc
sub
mov
pop
and
lea
inc
xlat
scas
lahf
xchg
push
out
mov
xchg
mov
enter
mov
popf
out
outsb
repnz
sub
jne
mov
aad
testb
in
add
movsl
jb
and
mov
adc
mov
mov
xor
push
gs
jecxz
and
pop
ret
and
pushl
mov
or
or
ds
mov
mov
mov
jb
jne
into
jmp
jg
mov
bound
push
add
dec
adc
sbb
jge
sarb
xchg
sbb
leave
sub
xor
pop
pop
pushf
pop
ljmp
out
dec
bound
mov
loopne
pop
pop
jle
dec
jb
pushf
adc
pop
jne
pop
loop
rcrb
ret
mov
push
hlt
int
mov
or
fs
pop
cli
xchg
mov
xchg
bound
or
or
mov
lds
call
jb
cmp
mov
ja
imul
pushl
dec
int
out
cmp
mov
sti
int3
roll
xchg
cltd
xchg
jmp
decl
jno
test
cmp
xlat
cmp
dec
andb
push
dec
or
dec
cmp
cmp
scas
test
lret
in
jo
dec
test
int3
call
andb
loopne
imul
lock
lret
mov
addr16
push
mov
pop
les
aas
popa
jb
inc
add
and
popa
pushf
mov
shl
dec
push
sbb
add
or
push
ja
cmp
std
pop
jae
outsl
cmc
decl
dec
int
popf
shrb
mov
aaa
add
add
call
xchg
andl
xchg
insb
call
leave
jmp
incb
jbe
aam
ds
nop
mov
out
andl
jbe
movsl
mov
int3
arpl
rol
push
out
clc
outsl
pushl
adcl
push
xor
mov
mov
inc
or
das
ret
add
clc
ljmp
adc
ret
sahf
xor
div
xor
nop
inc
or
add
xor
dec
call
lods
or
mov
sti
ret
inc
bound
out
or
adc
mov
jg
lcall
push
mov
cli
int3
lret
cmp
inc
mov
pop
enter
lods
xchg
mov
mov
mov
gs
int3
mov
in
add
sbb
dec
cmc
wbinvd
xchg
decl
add
movsl
scas
and
inc
jge
mov
pop
std
pop
sahf
pop
adc
cmp
ss
call
clc
test
mov
rcrb
nop
xlat
dec
push
jg
lods
mov
jns
fbstp
bnd
lock
push
loop
pop
sub
mov
mov
int3
pop
mov
jl
xchg
sub
dec
xchg
mov
outsl
mov
sti
cmp
lcall
mov
fs
loopne
jbe
mov
test
ret
pushl
inc
and
dec
sbb
pop
je
aas
lock
push
std
mov
std
scas
es
mov
cmpsb
mov
lcall
sub
dec
inc
and
mov
rorb
sbb
pusha
lock
mov
aad
and
lcall
imul
movsb
jge
roll
xor
pusha
mov
fucomp
imul
and
or
outsl
lcall
in
sbb
jge
lret
dec
dec
xlat
mov
das
hlt
lea
loopne
mov
int3
xchg
loopne
ljmp
test
imull
imul
dec
loop
mov
inc
sub
sub
adc
testl
xchg
lret
in
dec
fdivr
call
inc
xchg
xor
int3
orl
pushf
dec
sbb
mov
adc
push
dec
xchg
adc
clc
cmpsb
jno
out
pop
cmp
dec
rcr
outsl
dec
jmp
incl
sub
movsl
pop
repz
stos
lret
adc
cmp
mov
lds
ljmp
pop
adcb
push
dec
or
flds
mov
dec
xorl
pop
lea
cmp
js
mov
adc
inc
daa
pop
dec
movsb
idiv
in
call
cs
lds
sub
adc
ret
xchg
cwtl
jge
adc
ss
pop
stos
mov
cmpsl
sub
push
inc
es
push
es
push
stos
xor
add
in
lcall
dec
add
cli
in
rcll
pusha
add
sbb
fucomip
or
adc
insb
xor
mov
pop
fstps
push
fstps
jns
incl
test
jbe
repnz
sub
jge,pn
push
pop
sub
aad
lds
push
dec
mov
cli
das
mov
cld
inc
mov
dec
rcrl
arpl
ss
xchg
pop
lret
sbb
jae
xchg
mov
test
decl
sub
add
repnz
dec
cmp
out
ss
and
fsubr
mov
cmp
push
js
enter
dec
aas
call
jg
sbb
xchg
xor
xchg
adc
pushl
push
das
lods
jnp
mov
sub
mov
cmp
add
xchg
nopl
bound
fldl
or
decl
cld
decl
add
fldlg2
push
ds
negl
adcl
dec
xorb
sbb
scas
mov
sub
rorb
push
sbb
mov
jl
icebp
fbld
cmp
cmp
push
es
lods
loopne
mov
pop
call
test
mov
mov
inc
sbb
loopne
cltd
mov
scas
addl
push
stos
inc
aaa
mov
mov
add
aaa
sub
pop
cmc
clc
sti
xlat
mov
xor
in
outsl
lock
dec
sbb
std
inc
shrl
repnz
lret
pop
loopne
jecxz
pop
scas
mov
imul
cmpsb
add
mov
fbld
cmc
push
call
push
fbstp
andl
inc
mov
mov
xchg
mov
push
mov
inc
ds
mov
sbb
jg
in
lret
dec
int3
mov
push
add
cmp
and
pushf
add
mov
dec
lret
pop
sub
mov
lea
mov
xor
dec
in
movsl
cmp
cmpl
push
loop
gs
int3
jg
in
shrl
iret
cmp
sbb
mov
ja
xor
xor
pushl
cmc
fistpll
pop
aaa
imul
leave
loope
icebp
or
dec
push
ljmp
in
cmc
add
imul
jbe
xchg
xchg
imul
das
cmc
add
jb
bound
and
mov
incl
clc
and
gs
mov
sarl
cmp
psadbw
xor
adc
mov
jmp
jg
dec
bound
add
lock
push
pushf
testl
mov
out
mov
mov
lcall
in
mov
sub
ljmp
decl
adc
out
cmc
imul
xor
pop
xor
inc
mov
jg
jmp
lahf
dec
xchg
sbb
xchg
mov
push
int3
daa
dec
pop
add
lret
aaa
cli
test
fcoml
stos
or
das
imul
mov
ds
dec
mov
stos
ljmp
sti
ret
cs
loopne
lret
mov
jmp
pop
fnstsw
insb
adc
pop
or
decl
sbb
orl
call
add
jb
adc
mov
xor
mov
xchg
xor
xlat
mov
jae
out
push
out
cmc
ret
sahf
and
popf
mov
stc
inc
fmull
mov
fidivrl
ljmp
pushl
fdivr
xchg
icebp
icebp
test
dec
and
hlt
jg
mov
test
in
push
sub
aam
ljmp
pusha
adc
iret
xchg
lahf
je
add
loopne
icebp
dec
pop
clc
pop
pop
mov
es
inc
cltd
inc
ret
lcall
hlt
dec
sub
stos
stc
mov
mov
daa
popf
adc
and
pop
popf
fisttpll
movsb
loop
or
xchg
in
test
lret
inc
outsb
push
iret
sarl
insl
pop
xchg
xchg
jne
mov
add
incl
leave
lea
ret
aas
pusha
pop
mov
mov
enter
notb
mov
mov
iret
or
pop
cli
ret
enter
mov
sub
and
cltd
dec
add
mov
inc
das
fldl
popf
or
or
sbb
jmp
addr16
or
cwtl
mov
fstpl
decl
hlt
cli
inc
or
mov
mov
push
or
jg
pushl
ret
scas
iret
lock
add
mov
rorb
xlat
sub
pop
incl
mov
popa
cs
mov
and
inc
test
lcall
and
xor
int
xchg
imul
jae
jo
xchg
ds
insb
hlt
dec
sub
adc
push
lea
and
jne
gs
adc
pop
jbe
mov
ret
sbb
scas
aam
sub
fisttpl
rcll
bound
jmp
mov
test
push
enter
aas
dec
popf
push
lret
push
inc
cltd
incl
ljmp
fwait
incb
lret
mov
mov
push
push
jbe
out
pop
pop
clc
pushl
es
fdivp
rclb
jl
negb
add
test
dec
mov
add
pop
cli
xchg
into
out
aad
xchg
xor
out
arpl
call
movsl
mov
and
push
pop
std
pusha
mov
call
cwtl
mov
sarl
jg
adc
mov
pop
mov
pop
shlb
fs
xchg
sub
xor
pushl
je
rclb
das
mov
outsl
jmp
gs
test
jle
xchg
fildl
push
fists
mov
int3
js
mov
inc
decl
mov
out
cmp
les
dec
mov
orb
add
push
inc
adc
mov
orb
stos
dec
dec
pop
loopne
js
imul
enter
incl
mov
or
sub
lcall
hlt
mov
imul
or
mov
stc
inc
int
jmp
shrb
mov
testl
mov
push
cmpsb
xchg
fcmovb
clc
sar
aad
adc
inc
sbb
negb
mov
int
loopne
decl
inc
mov
cmpsb
stos
aad
lods
mov
sahf
mov
sbb
into
dec
jle
aad
cmc
pop
cli
xchg
jne
idiv
sbb
sub
dec
into
cmpsl
push
cmpl
outsl
sbb
push
xchg
mov
lret
pushl
cwtl
cmpsb
es
sbb
outsb
push
repnz
movsb
cli
sub
arpl
movsl
fistps
lcall
mov
and
mov
dec
inc
cmp
insb
jmp
bound
movsl
dec
push
inc
scas
xchg
push
sbb
push
xlat
jnp
add
dec
or
dec
pop
mov
push
pop
jmp
aam
dec
pop
imul
xorb
pop
jge
aaa
decl
cmc
xlat
ljmp
adc
inc
mov
inc
mov
imulb
out
or
cmp
cmp
jle
dec
jg
jg
push
and
jg
mov
jl
pushf
or
jns
sti
xor
add
cmp
iret
sarb
push
je
sbb
movsl
xor
mov
inc
jg
mov
loope
dec
je,pt
out
daa
sub
pushf
pop
into
inc
pushl
mov
test
mov
mov
ret
data16
jecxz
incl
push
mov
pop
pop
xorl
mov
sbb
mov
incl
cltd
jge
jmp
fistpll
fsubrl
xchg
mov
jg
fsubl
jmp
fwait
repnz
pusha
push
xchg
cmp
outsl
in
out
lcall
insb
enter
mov
adc
shl
pop
in
mov
and
xchg
addr16
cmpsl
movsl
dec
or
mov
or
jnp
sbbb
pop
test
pop
out
xor
cli
mov
fldenv
out
call
xor
ud0
jg
xor
pop
fdivs
dec
jp
mov
lods
ljmp
insl
hlt
loope
add
fimull
adc
push
jp
inc
push
cmp
in
outsl
mov
jmp
or
mov
das
mov
jmp
and
ja
xchg
sti
testl
enter
lea
aam
xchg
rolb
rolb
daa
jge
arpl
mov
lods
lcall
add
xchg
fstps
xor
loope
inc
in
sub
jg
int
sub
and
add
out
daa
decl
mov
push
cmp
divb
ret
lcall
adc
vmovaps
je
bound
jg
repz
fwait
int
cs
dec
xchg
jbe
push
mov
rclb
jns
mov
adc
fiadds
sbb
mov
jge
adc
dec
fs
jg
add
sbb
adc
hlt
add
xchg
sbb
shrl
adc
test
out
mov
jecxz
mov
dec
fdivl
adc
insl
mov
inc
pop
nop
dec
lcall
push
dec
les
push
pusha
loope
dec
pop
mov
int
adc
shr
aaa
cmp
mov
pushf
fimuls
out
fcos
mov
adc
push
dec
push
jnp
outsl
mov
test
mov
lock
loopne
mov
sub
mov
mov
outsl
xchg
pusha
shll
mov
xlat
clc
xor
jg
xor
lcall
jmp
adc
out
sub
xchg
push
adc
lcall
addb
push
mov
pop
mov
js
imul
cmp
lret
fcmovnbe
std
mov
sub
or
mov
xchg
mov
ret
decl
mov
mov
and
arpl
and
jg
jle
and
mov
or
popa
xchg
inc
pop
mov
sti
pop
ljmp
insb
fldcw
cltd
ror
sub
xlat
jp
aas
shrb
call
fistpll
iret
and
push
jno
aad
cmp
mov
adc
dec
sub
adc
inc
es
decb
and
repnz
fidivl
cmc
lock
mov
mov
mov
sbb
xchg
inc
stc
dec
incl
scas
lret
jmp
pop
ss
xchg
pushl
clc
pop
xor
mov
sarb
pop
pop
lret
inc
addr16
fs
add
daa
clc
add
cmp
xchg
pop
in
adc
or
jle
pminub
dec
or
rclb
or
adc
out
pop
cmp
mov
add
lret
into
inc
popf
mov
mov
je
fbld
sar
pop
pop
lock
cmpsl
enter
addr16
lea
test
ljmp
test
mov
xor
clc
scas
mov
js
sbb
inc
cmp
sbb
movsl
sbb
mov
adc
jae
lods
add
sub
mov
mov
in
aam
popf
stos
shll
in
stc
mov
mov
and
add
call
lcall
insb
insl
ljmp
add
das
cmpsl
dec
push
cmpsb
mov
out
jmp
push
std
sub
mov
add
les
jnp
adcb
xchg
adc
cld
decl
xor
movsb
dec
inc
or
mov
mov
outsl
push
mov
cltd
cmpsl
fisubrs
add
in
add
sti
adc
loopne
repz
adc
mov
cld
mov
jg
mov
popf
mov
and
sbb
into
cmp
cli
jg
mov
mov
movsb
sbb
xchg
dec
fs
leave
jmp
fldt
mov
push
ret
sbb
push
pop
lods
outsl
jnp
sti
call
cli
jmp
ja
dec
add
imul
mov
cs
andb
lods
addr16
fwait
out
cltd
inc
int3
adc
add
sbb
pop
add
mov
add
movb
out
adc
ja
mov
std
decl
idivl
jmp
lea
nop
push
clc
pop
ljmp
dec
xchg
inc
xorl
shl
mov
mov
in
jno
cld
pop
std
ljmp
out
rorl
int
les
rclb
push
ret
ficompl
cmp
imul
repnz
pop
cld
push
cltd
mov
call
es
movsl
dec
cli
jp
fwait
int3
fwait
ss
cld
push
fldenv
dec
mov
repz
jmp
cs
inc
inc
cltd
or
jmp
out
pop
ja
mov
rcl
test
inc
cmp
pop
push
xor
xchg
in
enter
push
cmc
adc
adc
add
sti
decl
scas
std
test
jge
adc
jle
pop
jl
mov
and
out
adc
out
pop
push
inc
dec
mov
insb
jmp
imul
jg
jb
addb
jae
mov
mov
mov
jmp
js
inc
lods
push
cmp
pop
jle
imul
or
xor
ljmp
into
pushf
xor
pop
and
or
outsl
fidivs
adc
inc
shlb
pop
loop
ret
nop
cmp
jns
mov
fsubrp
jp
ljmp
decl
xchg
cmp
dec
adc
sub
inc
xchg
mov
pop
pop
shrb
ds
or
jp
pop
mov
mov
insl
in
dec
xor
sub
jmp
hlt
push
cmp
xchg
mov
inc
push
in
add
add
cli
pop
cmp
in
rclb
push
jle
add
out
into
push
in
cmp
in
and
rclb
idiv
xchg
cs
xor
mov
fsubrl
inc
jne
fdivp
adc
enter
dec
inc
decl
push
inc
pop
mov
jne
xchg
enter
pop
and
push
push
mov
iret
dec
or
loopne
cmp
sahf
clc
jl
cmp
pushf
push
dec
loopne
push
fwait
xchg
or
pop
jp
push
and
dec
push
dec
pop
imul
ljmp
dec
loopne
mov
popf
xchg
jbe
mov
mov
cmp
xchg
cmpsl
iret
jns
xchg
xlat
call
dec
aaa
jae
pop
sub
and
cld
mov
das
data16
mov
andb
imul
call
or
or
les
pop
inc
lcall
add
dec
mov
mov
mov
mov
imul
loope
xchg
mov
orb
out
lcall
loop
cli
in
in
ja
xor
ror
inc
sbb
xor
lcall
jg
ljmp
dec
and
mov
inc
arpl
je
loop
mov
negl
sbb
push
lret
inc
sbbl
jne
loope
or
fldpi
or
ret
inc
mov
mov
loopne
pop
decl
sub
mov
filds
mov
aaa
test
jecxz
jb
mov
sub
hlt
mov
out
mov
and
mov
loopne
mov
stc
adc
jne
loop
pop
inc
or
sbb
lock
xor
jecxz
outsb
cmpsb
ss
push
jae
mov
pop
call
dec
mov
dec
xor
xor
dec
jno
das
sub
lods
dec
fisubrl
arpl
fistps
aad
sbb
sti
sub
or
cmp
mov
daa
mov
mov
mov
pop
jg
ds
pop
jns,pn
orl
push
int
lcall
and
pushl
add
sbb
adc
fcomps
decl
xor
xor
push
in
jle
or
mov
push
aaa
jge
adc
hlt
lcall
pop
fildl
stos
cmpsb
add
addr16
outsl
hlt
push
jg
push
std
sub
pop
arpl
cmpsl
inc
orl
outsb
test
inc
sbb
lods
pushf
decl
gs
inc
push
fwait
jle
push
ljmp
dec
lcall
aas
inc
xchg
xor
in
aaa
loop
addr16
add
jg
jae
sbb
stos
xchg
pusha
mov
lahf
mov
imul
mov
fmuls
aam
mov
in
xchg
and
fldcw
xlat
mov
adc
sbb
jg
mov
fistps
decl
ret
lret
mov
insb
cli
jmp
outsl
push
aaa
stc
icebp
adc
shrd
inc
arpl
mov
sbb
inc
insl
xor
test
fwait
push
pop
aas
jge
stc
pushf
mov
std
sub
lds
xchg
repz
xchg
fwait
test
push
stc
jo
pushl
xor
sbb
lods
repz
addr16
pop
orb
je
and
incl
sub
movsl
mov
push
adc
sbb
xchg
cwtl
mov
adc
pop
add
mov
ficoms
std
lea
icebp
inc
icebp
pop
stc
inc
fstp
mov
into
outsb
es
call
into
call
lret
mov
jne
addb
loopne
xor
ljmp
mov
mov
in
xchg
mov
fnstsw
xor
aam
sbb
inc
jl
popa
mov
mov
push
dec
call
xchg
cli
mov
in
aas
xor
inc
xchg
xchg
dec
lods
and
jb
sbb
aam
pop
test
insb
push
cmp
mov
dec
push
jno
adc
pop
mov
mov
mov
test
mov
mov
mov
mov
jl
stos
imul
out
mov
or
cmp
nop
xor
aam
sbb
inc
fadds
sbb
push
int3
test
pop
lods
mov
pop
sub
lret
aam
leave
je
cs
shl
mov
in
pushl
sbb
jg
les
arpl
jb
mov
incl
pop
pop
pop
xchg
mov
dec
adc
fidivrl
mov
jmp
scas
mov
and
jmp
jnp
lcall
std
sub
jp
sub
push
cmp
addr16
fwait
xchg
push
lret
lods
jae
jecxz
std
aaa
or
mov
lods
scas
jmp
addr16
mov
dec
jg
jg
mov
inc
cltd
mov
jecxz
xor
xor
clc
incl
cmp
jne
add
jo
out
pop
incl
push
jne
loope
stc
aad
ljmp
xchg
jecxz
xchg
nop
add
fdivs
jg
decl
sti
out
ffreep
ss
mov
pop
and
jbe
pop
cmp
and
push
call
mov
inc
rolb
arpl
and
mov
mov
xchg
cli
jg
sahf
ljmp
std
add
mov
clc
aaa
xchg
pop
mov
iret
es
adc
cs
rol
mov
pop
adc
inc
push
fwait
mov
mov
imul
inc
inc
test
ror
pop
decl
sbb
or
sub
or
std
lcall
ret
xor
and
test
inc
sahf
jmp
in
and
ljmp
dec
stos
fiaddl
pop
in
inc
fdivrp
int
pminsw
ficomps
mov
fistps
cwtl
incl
jg
lss
test
mov
jbe
sbb
fmuls
fcos
lcall
enter
mov
inc
sub
stc
fs
push
rcr
std
dec
test
clc
hlt
cltd
ret
xchg
je
int3
mov
lahf
adc
pop
adc
dec
xchg
cltd
test
lock
add
jmp
xor
jo
fldenv
jmp
sbb
jmp
pop
xor
ret
adc
je
icebp
shl
cmp
push
xchg
jp
loop
mov
mov
cltd
and
and
add
pushl
fdivs
js
loope
pop
test
add
dec
mov
in
js
push
call
jle
loope
sbb
movsb
xlat
sub
inc
mov
jmp
comiss
std
pop
jge
jns
pop
in
dec
adc
test
sub
outsl
mov
sbb
cmp
mov
rorb
lret
pop
clc
pushl
fsubrs
inc
mov
out
and
mov
dec
enter
push
bound
mov
push
sub
incl
or
leave
xchg
push
or
jae
dec
ja,pn
scas
mov
pop
ljmp
inc
inc
dec
pop
jae
outsl
ds
frstor
fstps
add
cltd
mov
movsl
mov
fldl
cmc
push
inc
fnstenv
add
cmp
jno
cli
mov
into
sbb
sub
cmpsb
insb
and
adc
pop
push
cmc
jl
cltd
push
cmp
cmpsb
push
fstl
call
jmp
dec
adc
inc
lret
pop
std
icebp
xchg
xor
cmp
mov
rcrb
das
bound
push
repnz
insl
cmp
mov
icebp
rcr
outsl
js
jmp
icebp
mov
xchg
xchg
xor
cmp
mov
sbb
add
out
nop
cmpl
dec
dec
or
pushl
fnstenv
push
leave
cwtl
dec
fcomps
inc
es
sbb
call
lret
stc
stos
test
sub
jne
aam
adc
jle
subl
mov
pushl
lahf
enter
xor
mov
add
testl
push
adc
fwait
insb
jp
inc
call
inc
test
aad
movsb
xor
fsubp
ljmp
mov
cmp
sub
hlt
sbb
jmp
jle
outsl
jb,pn
test
xchg
sub
dec
push
inc
and
mov
dec
add
adc
fmul
popl
mov
loopne
pop
fidivl
dec
push
pop
fwait
jb
pop
jo
or
lcall
push
popf
mov
scas
adc
cli
jae
adc
mov
xchg
inc
rcll
xor
shl
out
insb
sbbb
call
stos
fiadds
jmp
sbb
lahf
rcrb
add
outsl
mov
push
shl
mov
dec
or
fdivl
inc
lea
test
pop
xchg
inc
imul
sahf
and
cmp
mov
hlt
sbb
mov
int
mov
loope
call
dec
xchg
fcoms
or
xchg
jg
jae
in
dec
mov
insl
je
lods
add
mul
js
das
icebp
inc
inc
and
cmp
test
jg
stc
sub
xchg
sub
lea
or
std
mov
mov
pop
call
int3
xchg
loope
ss
clc
sahf
icebp
or
ljmp
adc
xor
or
lods
mov
and
pop
or
or
iret
repz
push
sti
decl
dec
add
cmpsb
mov
ret
lods
sti
lcall
nop
pop
add
lock
imul
mov
sbb
mov
dec
out
push
mov
dec
mov
mov
cmc
ds
gs
jnp
hlt
jmp
jmp
lods
adc
movsb
sbb
lds
ret
push
pop
divb
mov
sub
cs
loopne
mov
repnz
test
mov
add
push
cld
xchg
cli
in
push
mov
insb
aaa
scas
int
xchg
pop
sub
lcall
xchg
mov
loope
jo
jb
jbe
rcrl
mov
loop
gs
xor
sbb
push
cmpsl
inc
test
mov
call
and
sahf
cmpsb
and
loope
mov
je
inc
outsl
xchg
pop
outsl
stos
add
push
jle
sub
cmc
mov
adc
fbld
adc
xchg
daa
xchg
xchg
add
es
fidivl
dec
adc
loope
push
sub
mov
push
sar
outsl
jo
push
popa
fiaddl
sub
cmp
pop
pop
pushl
clc
ljmp
lahf
mov
shlb
ljmp
clc
enter
mov
in
data16
icebp
pop
fbstp
out
mov
jmp
cmc
mov
push
cmc
ja
hlt
loopne
cmpsl
adc
adc
nop
mov
ljmp
inc
shl
push
cmpsl
pop
cwtl
mov
mov
push
adc
xchg
mov
outsb
adc
inc
je
sahf
inc
push
scas
cmp
insb
mov
pop
sub
stos
mov
cmp
adc
movsb
das
shl
decl
dec
dec
mov
jmp
dec
int3
add
cs
push
outsb
repnz
insb
mov
lcall
in
ja
aaa
ss
mov
sub
mov
outsb
cld
inc
fs
add
jg
pushf
mov
jecxz
rcrb
cmp
inc
sbb
jl
decl
jo
repnz
mov
inc
xor
testl
push
sbb
lcall
and
sub
jns
and
fdivl
sarb
jnp
push
cmp
xchg
clc
fmuls
xor
mov
inc
dec
fidivrl
repnz
push
outsl
xchg
cmpsl
and
mov
or
xor
test
push
add
stos
int
cmp
xchg
and
adc
decl
cli
sahf
adc
push
add
jb
mov
shl
popa
sbb
xor
rcrb
lcall
jmp
sbb
fucom
cmp
jae
jp
xlat
xlat
jae
dec
sahf
incl
cmp
cmpsl
or
scas
iret
inc
xor
fcmovb
pop
clc
call
or
inc
xchg
mov
or
dec
fsubl
fldl
sbb
or
mov
icebp
aam
mov
leave
inc
jae
mov
jge
push
push
mov
test
mov
push
xchg
std
cld
leave
cmp
jb
nop
in
push
xchg
mov
lds
dec
jnp
mov
ljmp
sub
pushf
or
lcall
pop
cli
outsl
std
scas
push
test
imul
pop
ljmp
jmp
xor
sbb
mov
sub
mov
ljmp
fimull
sub
and
sub
negl
mov
f2xm1
cmpsb
out
fcmovbe
shll
push
test
dec
std
fcomip
mov
and
add
fbld
xchg
or
and
les
flds
hlt
adc
xlat
sbb
xchg
push
jb
add
arpl
jmp
insb
pop
add
inc
lea
shrl
and
ljmp
pushf
mov
into
jmp
xor
in
aas
xchg
jns,pt
xor
pop
push
cmc
jg
mov
or
shlb
jns
mov
ljmp
sub
call
dec
sti
sub
sub
inc
xchg
and
js
sub
sub
dec
es
jg
enter
xchg
adcl
ss
arpl
jp
or
shrb
and
pop
cmpsl
push
int3
xchg
cmp
mov
out
and
sub
ljmp
push
pop
cld
pushl
mov
or
sti
mov
dec
std
lcall
lods
out
data16
sbb
mull
or
pushl
or
daa
cmp
jl
push
lock
jg
mov
jne
ss
xor
mov
stos
cli
mov
dec
add
xchg
fdivrp
lret
call
pop
jnp
jg
cmp
stos
inc
sti
stc
push
or
jle
call
pop
push
adcl
ds
je
cmp
in
add
fsub
inc
or
out
dec
pusha
mov
decl
pop
stc
dec
mov
sbb
inc
movsl
popf
shl
out
inc
dec
xchg
push
xor
call
pushf
fdiv
int3
and
dec
xor
lea
out
inc
insb
and
stc
icebp
mov
dec
cwtl
jmp
adc
sbb
pop
leave
jmp
mov
push
lods
jns
filds
pop
sub
add
push
mov
sti
je
jmp
lods
imulb
dec
push
xorb
fsub
mov
repnz
decl
std
lcall
jge
sbb
jbe
push
mov
cli
add
fisubrs
or
sbb
sahf
in
mov
mov
in
fs
mov
in
neg
add
pop
pusha
jmp
xchg
xlat
adc
pop
push
sub
mov
cmp
cmp
pushl
insl
daa
enter
clc
jb
pusha
repnz
out
sar
inc
call
mov
cld
sub
cmpsl
aad
xor
add
inc
and
cmp
inc
fmull
clc
into
imull
lds
sar
mov
jmp
sub
iret
mov
jg
lret
pop
int
jb
in
cmp
out
call
js
jbe
mov
data16
mov
pushf
cli
lods
shr
pushl
addr16
mov
je
repz
lcall
cmp
sbb
call
jbe
loop
das
mov
mov
aam
or
jge
subl
je
fwait
mov
push
pop
push
pushl
clc
fistps
and
inc
fptan
cs
xor
leave
lock
insb
cli
mov
jbe
mov
mov
pop
mov
pop
cmpsl
pop
ljmp
sbb
fisttps
cmp
pop
fistpl
in
jge
or
pop
test
jle
mov
adc
ljmp
cmp
sbb
push
iret
jmp
sbb
lahf
xchg
sbb
add
mov
lret
jbe
icebp
adc
std
mov
xor
pop
xchg
dec
pusha
pop
mov
aas
add
cltd
cld
mov
jg
jae
out
cld
call
fnstsw
fs
incl
mov
fnstsw
sub
std
out
aad
fwait
imul
inc
jecxz
mov
push
jle
or
scas
xor
add
ljmp
push
sbb
les
aaa
sub
lret
cs
insb
mov
mov
cmp
pushl
cmp
dec
and
xchg
test
popf
push
aam
mov
mov
addr16
jecxz
mov
mov
sbb
dec
mov
xchg
cmc
mov
aaa
and
pop
ds
lods
inc
sbb
ret
icebp
cli
add
loop
sar
lahf
lods
xchg
dec
into
mov
jb
fnstsw
lcall
mov
mov
cmc
negl
leave
adc
outsl
call
mov
iret
hlt
mov
cmp
cltd
int3
js
mov
pushl
fldl
or
pop
data16
jg
call
stos
int3
cmpsl
jno
ror
xlat
addr16
mov
sahf
mov
push
sbb
adc
inc
and
int
rorb
sub
pop
hlt
pushl
or
int3
xchg
lock
mov
loopne
sub
les
and
mov
xor
sub
push
xchg
int3
sub
loop
cli
sbb
lock
add
or
mov
cli
mov
outsb
jne
mov
stc
push
sub
jns
jno
outsl
call
loop
mov
sbb
repz
int
cmp
mov
js
and
loop
clc
add
gs
push
dec
push
mov
cmp
hlt
lcall
fyl2xp1
adc
add
xchg
add
aam
xor
push
ljmp
int3
in
inc
fidivs
outsl
aaa
pop
jg
xor
dec
inc
test
es
lret
sbb
std
cmc
sbb
inc
push
sub
ljmp
jg
test
xchg
add
pop
movsb
popl
fisttpl
cwtl
and
ljmp
out
aam
imul
inc
mov
jb
ljmp
inc
pop
sarb
mov
bound
pop
mov
xorb
roll
pop
out
inc
and
test
test
jmp
xchg
data16
in
sub
shl
inc
loop
xchg
sbb
lock
xor
scas
shl
js
and
ljmp
inc
jp
jo
dec
dec
dec
pop
ss
fbld
cmp
add
xlat
scas
pop
pop
pop
jle
jg
cmp
lea
pop
inc
jbe
lock
cmp
jb
pop
clc
incl
in
in
mov
mov
ficoml
ret
push
es
mov
ret
rorb
xor
std
mov
les
xor
mov
pusha
cmp
incl
mov
iret
pop
mov
sbb
subl
pop
lcall
or
pop
sbb
xlat
push
mov
inc
sub
ljmp
jl
ret
in
aas
inc
fiaddl
sub
arpl
mov
jmp
pop
testb
dec
out
leave
iret
pop
add
add
mov
addr16
std
push
pop
pusha
repz
sar
jle
dec
sbb
dec
dec
inc
xor
jl
jl
fucomip
out
cmp
inc
int
fwait
sbb
outsb
cmp
dec
mov
fmuls
mulb
fs
fdivr
cli
stos
adc
cs
mov
cwtl
flds
loope
pop
rorb
call
inc
pop
es
xor
inc
bound
call
bound
and
je
mov
jmp
incl
dec
push
pop
mov
out
push
shl
mov
scas
mov
shl
test
jb
sub
cltd
jnp
jg
loopne
loopne
jge
gs
pop
iretw
lock
inc
xchg
dec
int3
jg
das
jo
in
jg
movsb
aam
icebp
mov
dec
mov
cmp
lods
mov
or
inc
rclb
enter
fs
fnstenv
stos
xchg
ljmp
inc
vmpsadbw
pop
notl
xor
push
shll
and
ss
cmp
call
sahf
jae
jg
clc
dec
repnz
movsl
inc
mov
fbld
adc
or
inc
mov
mov
xchg
pop
jg
inc
pop
mov
push
fisubrs
jns
ds
loopne
popa
lret
mov
ja
jecxz
leave
cmp
addr16
outsl
cld
xchg
jmp
mov
mov
mov
pop
fs
mov
mov
sti
mov
adc
repz
scas
repnz
mov
loope
addl
add
lods
pushl
std
or
mov
fmuls
fs
xchg
pushf
fnstenv
repnz
inc
jno
cs
ljmp
dec
ficoml
ljmp
jecxz
xchg
dec
ficompl
in
orl
sub
cmp
test
add
orl
sbb
ret
mov
pop
add
mov
out
add
test
jo
mov
xor
dec
andl
jmp
mov
je
or
inc
push
pop
aas
pusha
sub
xchg
pop
mov
xchg
add
cmp
aaa
das
out
xchg
jnp
fucomip
fisttps
outsl
mov
andl
jb
ljmp
hlt
pop
mov
and
push
repz
jp
mov
push
ja
push
inc
loope
xchg
push
pop
dec
dec
in
mov
pop
or
in
pop
sbb
or
fbld
pop
push
jge
aad
lods
pop
movsb
ds
dec
mov
mov
adc
out
imul
dec
jmp
sbb
and
mov
gs
mov
icebp
push
jae
push
mov
mov
ret
jmp
sbb
ljmp
fs
std
ljmp
call
nop
cld
insl
addr16
push
aas
jge
lock
lcall
fisttps
push
sbb
sbb
push
movsl
test
popa
stc
ljmp
shrl
dec
ja
outsl
pop
add
cmp
mov
and
clc
xor
shlb
stos
outsb
push
dec
jbe
call
pop
js
mov
and
jge
xchg
sti
xchg
ljmp
push
bound
lcall
lret
inc
xor
cmc
test
pushl
adc
into
aaa
or
imul
push
lret
mov
dec
cmp
incl
pop
loop
cs
or
xchg
inc
xor
daa
das
cmc
mov
mov
sbb
jp
call
fimull
les
mov
insl
mov
or
or
jmp
inc
ss
aas
mov
fistpl
lea
ds
insb
dec
mov
stc
out
les
jne
out
sub
or
mov
scas
ret
add
xchg
mov
sbb
fildll
or
lret
xchg
cmpb
pop
mov
sti
clc
dec
jge
pusha
jecxz
mov
stos
or
fnstcw
cs
xchg
cmpsb
push
aas
ljmp
dec
std
decl
mov
push
js
test
ja
dec
imul
sbb
mov
jg
or
repz
xchg
xor
sbb
cmp
fidivrl
xchg
sub
dec
cld
xchg
sub
clc
repnz
lea
push
pop
inc
cmpsb
fdivrs
sbb
mov
faddl
nop
sub
xor
jns
adc
loopne
das
xor
sub
jge
sub
xchg
and
ss
std
fbld
outsb
push
bound
int3
xchg
add
sub
imul
aas
bound
xchg
fstps
aam
mov
pop
loopne
sub
sar
psubq
movsb
cmp
pushl
inc
adc
sbb
lods
test
lcall
out
pop
sub
mov
cmp
movb
jg
outsl
xor
add
push
sbb
fs
pushl
or
push
dec
popf
testb
pop
jno
adc
dec
jge
pop
add
mov
mov
icebp
es
jle
in
sbb
roll
push
das
push
jge
int
shrb
jnp
inc
jno
dec
inc
pop
xlat
xchg
incb
call
jno
xor
or
jnp
lea
mov
or
orb
jg
mov
inc
push
mov
pop
sbbb
mov
lea
neg
test
mov
aam
repnz
out
ds
push
lcall
lds
filds
test
jo
sahf
jg
sbb
mov
mov
push
push
sub
fs
mov
ds
test
ljmp
rorl
xor
mov
add
push
mov
bound
fdivrp
jmp
lcall
decl
sbb
mull
xchg
lret
dec
orl
insb
mov
js
pushl
lret
lret
mov
jmp
popf
ja
jg
mov
cmp
bnd
mov
pusha
out
and
icebp
or
daa
into
adc
xchg
mov
lods
sti
decl
jb
sub
int3
xorl
adc
sbb
int3
call
jno
rcrl
test
shlb
dec
jo
lcall
out
sbb
fnstenv
jecxz
and
pop
outsl
lods
into
mov
leave
out
leave
test
add
mov
inc
mov
out
mov
jg
or
xchg
lahf
pop
cmpsl
pop
pop
xchg
inc
cmp
jo
sub
jb
sahf
cmp
mov
sar
incl
sub
mov
push
stc
ja
pop
inc
popf
jae
fidivs
mov
or
jmp
mov
cmp
in
pop
jns
mov
mov
push
jg
xchg
or
jmp
xor
fsub
loop
jne
jmp
inc
test
scas
insl
out
xchg
inc
jno
add
add
outsl
lock
mov
inc
mov
mov
fldt
sub
mov
push
cmp
xchg
mov
add
mov
das
mov
out
mull
add
repz
inc
sahf
lea
push
sub
cmpsb
enter
lock
int
dec
cli
std
mov
lahf
push
inc
scas
sub
mov
mov
jnp
jnp
cmp
aam
and
movsb
adc
repnz
jmp
mov
psllq
es
loopne
rol
ja
pop
and
test
inc
sbb
in
in
jno
dec
push
pop
out
inc
out
mov
or
pop
push
es
cltd
clc
pop
loop
mov
insl
mov
sti
sbb
ljmp
repz
call
jl
sub
into
xchg
xor
adc
fnstsw
xor
inc
lcall
insl
jp
cmpsb
jp
cmpsb
jns
push
aad
dec
loope
push
incl
inc
imul
sub
out
push
movsb
ret
mov
jmp
sub
rcrb
push
es
out
or
mov
jg
imul
icebp
xchg
push
insl
push
jmp
pop
cmp
add
and
pop
mov
andb
push
ja
mov
pop
mov
incl
jmp
ficomps
jle
movsb
stc
sbb
jb
push
lock
and
mov
push
lcall
mov
dec
std
call
jb
fsubr
ud0
jbe
lds
int3
add
shrl
add
mov
sub
test
orl
cmc
incl
cmp
mov
stc
xchg
xor
xor
mov
loope
clc
mov
dec
xor
push
lcall
movsl
jmp
push
adc
add
addb
icebp
jmp
addl
flds
cmpsl
adc
jmp
fcmovu
fsts
and
inc
cmp
fcompl
xchg
mov
inc
ljmp
jns
ret
decl
jg
lock
pop
xor
add
dec
push
mov
addl
hlt
mov
add
in
xchg
les
clc
and
dec
sbb
arpl
ja
add
xchg
mov
mov
cmp
mov
xchg
or
add
fs
out
adc
addl
xchg
and
shl
xor
loopne
pop
decl
adc
mov
rcrl
xchg
int
adc
daa
pushl
mov
jl
sbb
out
xor
push
or
aad
clc
add
loope
sub
call
sub
aas
cmpsl
enter
aam
movsl
cmpb
ret
aam
xor
inc
push
jge
cmp
push
jo
sbb
dec
icebp
or
in
or
xor
int
clc
in
inc
jb
pop
fisttpll
std
jg
pushl
iret
andl
shr
and
or
push
ljmp
mov
mov
or
cli
xchg
icebp
push
push
insb
fists
cli
outsl
icebp
pop
or
jmp
xchg
fidivrl
or
add
test
push
in
cmove
popf
cmp
cld
dec
pop
sub
lcall
xlat
xchg
pop
or
sbb
sbb
xor
pusha
loope
outsl
fdivs
push
mov
cli
sbb
inc
testl
mov
sub
inc
arpl
mov
je
and
lcall
xchg
pop
xor
outsb
scas
iret
cmp
pop
add
push
insl
cld
jg
fbstp
ja
fwait
enter
or
fisubl
mov
or
lds
std
xor
sbb
arpl
xchg
xor
dec
mov
ja
mov
gs
incl
into
push
mov
cmpl
push
js
fs
push
loopne
shl
jp
inc
imull
incl
fstps
xor
mov
lret
xchg
cmc
dec
std
or
sbbl
out
mov
sub
sar
mov
bound
sub
pop
pop
sub
out
cmp
andl
fiaddl
push
xchg
jp
out
ljmp
rorb
and
cltd
inc
enter
mov
dec
and
out
cltd
loop
add
aaa
lock
inc
lcall
ja
es
or
testb
mov
and
ret
push
lea
inc
pop
push
cmp
inc
jb
pop
mov
cmp
mov
cli
mov
lret
or
jb
cli
test
add
pop
lods
lea
jae
pop
ljmp
lret
sub
pop
mov
adc
mov
lods
gs
mov
mov
decl
inc
int
lock
ret
sbb
ss
sbb
cmc
pop
ficoml
xchg
sbb
into
into
push
pop
int3
push
mov
inc
imul
inc
sub
rorb
jb
jle
das
add
push
hlt
or
cltd
fld
mov
mov
in
xor
dec
les
and
enter
sub
mov
incl
call
cmpsl
adc
xor
pop
sbb
call
cmp
lcall
test
sbb
add
pop
push
inc
das
repz
cmp
xchg
mov
fstpt
or
ljmp
xor
cmp
push
pop
je
sub
aas
or
adc
aaa
mov
xor
mov
repz
es
pop
push
sub
test
outsb
orb
jg
imul
popa
pop
je
aad
xchg
jge
fsubs
push
mov
lcall
int
es
push
imul
decl
push
dec
rolb
shlb
out
jg
ljmp
jl
pop
xor
cmp
out
repnz
out
jae
aam
movsl
scas
add
out
into
stc
dec
insb
mov
rol
mov
movsl
pop
mov
lcall
add
fldt
cmp
mov
loopne
fcomps
mov
pop
mov
movsb
ljmp
hlt
ret
data16
scas
inc
lods
xor
mov
or
call
ds
jno
or
femms
shll
jnp
mov
dec
iret
sbb
in
movsb
scas
fldt
dec
xlat
xchg
jg
sbb
rcl
pop
jg
sar
ja
adc
or
loopne
adc
negl
mov
not
movb
pop
shll
mov
loopne
popa
sbb
sbb
lcall
movsl
mov
jne
mov
mov
subb
pop
fdivrp
cmpsb
cmp
cli
mov
lods
mov
out
dec
imul
ja
xlat
jno
add
into
pop
loop
lds
pop
mov
mov
idiv
lcall
or
inc
ret
into
mov
push
pop
call
xor
pushl
cli
incl
pop
inc
sbb
das
pushf
push
or
push
pusha
mov
repz
mov
mov
push
and
cmp
pop
jl
repnz
fwait
inc
rorl
ficoml
cmp
decl
or
and
dec
enter
jge
cmpsb
callw
filds
add
push
xchg
stos
cs
mov
std
in
cmp
lcall
ss
lods
cld
jmp
int
sbb
push
dec
mov
in
sbb
mov
lock
lea
js
outsl
mov
decl
ja
test
push
in
shl
stos
rolb
jg
lcall
cmp
xchg
cmp
xchg
fidivs
cmpsb
inc
sub
sbbb
jmp
dec
scas
add
push
push
test
popf
aas
cmpb
pop
mov
mov
outsl
scas
and
shl
pushl
popf
mov
frstor
cmp
fstl
shrl
pop
cmc
push
sti
cwtl
imul
sub
repnz
stos
shll
sub
lea
sub
int
cmp
bnd
stc
dec
dec
jmp
outsb
xor
or
out
insb
mov
mov
sub
addr16
jecxz
loop
fs
pop
xchg
scas
cld
sub
or
decl
lea
into
push
popa
aam
sub
stc
in
sbb
add
inc
add
lcall
and
push
jg
mov
push
jge
and
jge
test
sbb
mov
je
inc
ja
jae
adc
pusha
or
shlb
mov
test
inc
sbb
pop
dec
push
insb
or
fidivl
push
sbb
out
sbbb
inc
test
mov
inc
das
mov
pop
movb
add
rcrl
loopne
and
lcall
stos
pop
sahf
ret
cli
repnz
sbb
add
lret
dec
jle
xchg
mov
mov
dec
jae
repz
fldcw
lahf
ror
out
icebp
bound
mov
xchg
pop
pusha
adcl
in
and
jl
jae
jg
adc
dec
ds
shrb
mov
leave
mov
hlt
rolb
call
fimull
pop
dec
icebp
jnp
roll
push
aaa
inc
fidivl
push
inc
sub
decl
iret
cmpsl
cs
ja
sub
ds
push
or
mov
pop
lods
movsb
sar
inc
int
xor
mov
jp
rdtsc
ret
popf
out
or
or
lret
rorl
fidivl
sub
mov
mov
inc
adc
jne
int
mov
mov
mov
cmp
gs
xorb
std
sahf
lods
push
mov
inc
decl
mov
sbb
add
std
pop
pop
cld
sub
push
mov
inc
repz
xchg
push
xchg
cmp
outsl
lock
dec
inc
mov
cmc
mov
je
adc
repnz
aad
leave
ljmp
cmp
jle
fs
ret
in
adc
lcall
mov
aam
ljmp
ljmp
adc
add
loopne
mov
push
shlb
sbb
addr16
ss
inc
lcall
lret
ljmp
fcoml
stos
pop
insl
sub
or
sbb
addr16
ss
dec
std
cmp
shl
mov
xor
scas
mov
mov
cmp
sahf
fsubrs
cld
ljmp
pop
mov
add
shl
in
pop
loope
fildl
decl
movsl
cs
push
sbb
jo
mov
outsb
or
sub
add
sub
xor
xchg
ljmp
call
or
clc
jmp
test
sarb
aam
movl
and
data16
fstpt
call
cmp
or
lret
int
dec
sbb
add
mov
adc
lods
or
call
pop
add
inc
stos
mov
aad
cmpsl
jecxz
inc
mov
adc
xor
and
test
addl
jle
dec
mov
cmp
mov
dec
movsb
das
repnz
mov
ljmp
call
mov
orb
insl
mov
mov
dec
adc
jb
jle
xor
das
pop
std
mov
mov
jecxz
jmp
push
sbbb
ljmp
push
xor
imul
adc
fdivr
mov
clc
inc
roll
lahf
outsl
inc
cmp
subb
xlat
movsl
cmp
cmp
add
adc
sub
outsl
std
fisttps
movsl
insb
sub
es
xchg
add
sar
shlb
and
retw
lsl
xchg
lcall
enter
jae
icebp
sbb
adc
ret
cmp
sti
icebp
call
mov
and
popf
push
sub
fisttpl
mov
push
ss
mov
cli
push
push
jp
imul
mov
push
testl
mov
mov
shr
dec
std
or
lret
shrb
addr16
sti
loopne
loop
pop
inc
jne
clc
jmp
and
pop
jge
imul
adc
mov
xchg
call
out
sbb
add
adc
ret
in
mov
cwtl
and
push
shll
cmp
jge
mov
loopne
das
lock
sbb
insl
pop
fwait
rcll
mov
loope
lcall
lahf
inc
jns
pop
in
or
jbe
cmp
cld
lds
pop
lcall
jg
xor
jg
mov
cli
aaa
pop
popa
pop
nop
inc
or
push
xchg
call
das
pop
mov
clc
rcl
mov
js
or
and
push
fldpi
push
inc
nop
inc
add
and
and
dec
ds
mov
push
ljmp
loop
push
push
push
push
push
add
inc
dec
dec
dec
push
int
mov
and
add
and
or
aad
or
or
addb
add
add
inc
insl
adcb
outsl
mov
mov
push
sub
test
add
ds
pop
mov
adc
add
xor
dec
or
adc
add
and
push
xor
lods
aas
cmp
test
adc
mov
adc
push
lret
mov
fs
test
mov
or
adc
lcall
insl
xchg
lods
xor
add
push
inc
mov
cmpsl
fistpl
pop
mov
add
mov
shlb
pop
sub
pop
cwtl
push
sbb
add
xlat
pop
fistpl
mov
imul
jne
arpl
mov
pop
fistpl
leave
test
loop
pusha
xlat
pop
fistpl
jl
and
popf
int
aaa
xlat
pop
and
lods
lds
inc
out
sarb
xor
mov
pop
imul
push
pop
test
and
cmp
pop
pop
add
movsl
lcall
js
js
jae
dec
or
insl
out
dec
push
add
and
and
nop
and
inc
mov
int
scas
add
dec
int
cmp
push
add
sbb
jg
dec
inc
inc
push
dec
dec
push
push
push
push
inc
add
popa
outsl
insb
insl
jo
arpl
xor
outsl
sbb
dec
inc
push
push
push
inc
inc
call
push
in
push
pop
pop
inc
addb
jne
pop
or
mov
btc
add
xchg
sbb
add
xor
inc
pop
rcr
outsl
in
inc
mov
adc
mov
ljmp
and
insl
lods
mov
jae,pn
mov
imul
gs
xor
cs
insb
add
push
inc
push
dec
inc
jge
inc
dec
dec
add
add
lods
mov
jns
sahf
push
data16
cmp
or
xor
xor
fwait
push
std
or
gs
jno
rcrb
fdivl
outsl
lea
dec
push
dec
inc
shll
push
dec
inc
xor
mov
or
dec
mov
imul
add
fbstp
mov
mov
subb
imul
dec
idivb
and
add
stos
imul
imul
out
mov
sub
imul
add
scas
and
sbb
les
push
push
sub
imul
roll
mov
fldt
inc
push
push
or
pop
imul
fstpt
pushl
in
sub
lea
mov
xchg
loope
std
fnsave
and
xor
imul
fisubrs
or
call
jg
or
fld
push
testb
sbb
mov
pop
mov
repz
incl
ja
xchg
imul
dec
sbb
fisttpl
sti
or
cwtl
push
push
fmuls
and
adc
mov
and
mov
dec
xor
cmpsb
imul
fndisi(8087
push
imul
std
inc
ds
imul
cmc
or
imul
mov
test
sub
imul
in
pusha
movzwl
aad
scas
aas
inc
sbb
adc
xchg
outsl
mov
imul
xor
adc
test
mov
imul
mov
add
adc
push
dec
les
sub
sti
sub
imul
pushf
dec
aas
cmp
sbb
fnsave
ja
mov
frstor
and
jg
jge
pop
sar
add
inc
fisubs
mov
mov
lds
push
mov
or
xor
push
in
push
dec
scas
inc
imul
mov
sub
loopne
xchg
jnp
dec
imul
mov
add
mov
bound
xchg
iret
push
inc
cmp
lock
xchg
in
mov
xor
sbb
mov
sbbl
in
negl
mov
cmp
or
add
push
insl
lahf
pop
push
jno
jecxz
cltd
lahf
or
outsb
add
xchg
mov
dec
clc
test
mov
test
imul
fmulp
dec
ljmp
inc
pop
pushl
rcll
or
jb
xchg
out
mov
cld
test
shrl
imul
jnp
int3
aas
mov
repz
sbb
mov
in
sti
jbe
inc
adc
and
adc
movsl
push
aas
stos
pusha
ss
cmp
int3
lea
imul
sti
adc
mov
and
xchg
imul
aad
icebp
adc
xor
ja
xor
mov
aam
lea
mov
mov
mov
mov
mov
sbb
rcrl
xchg
mov
in
imul
cld
aam
cld
jecxz
lahf
pop
outsl
shrl
xor
xor
fmul
xchg
add
imul
add
insl
mov
outsb
les
sbb
aam
fwait
or
stos
inc
pop
mov
cmp
jbe
in
daa
jmp
imul
data16
cwtl
jnp
dec
or
inc
sbb
push
mov
or
mov
sub
pushf
sbb
push
adc
or
pop
dec
rcrl
jmp
sbb
insl
push
adc
mov
cwtl
insl
sub
adc
std
cwtl
test
outsl
jb
sub
dec
push
out
nop
and
mov
push
adc
dec
add
pop
sbb
rcrl
shrb
mov
imul
imul
sarl
dec
pop
fldenv
push
ret
sbb
cs
movsb
aaa
jb
cmp
test
sti
imul
mov
xchg
mov
imul
xor
popa
je
inc
adc
jo
mov
aam
mov
sbb
sti
out
inc
inc
xchg
push
jns
jp
and
push
mov
lods
loope
mov
stos
lock
mov
push
xorb
adc
arpl
aaa
cli
push
xchg
add
scas
jmp
push
dec
or
jne
fisttpll
sub
ss
xor
es
or
adc
cmp
xorl
add
push
sbb
andl
jns
inc
loopne
incl
xchg
mov
adc
sbb
repz
popa
es
adc
add
cmp
mov
nop
pop
imul
mov
sbb
xchg
iret
arpl
ds
leave
lock
xlat
adc
dec
outsl
insb
cmp
push
test
in
mov
imul
std
xchg
mov
call
xchg
loop
movsl
in
imul
fidivrs
jge
fstpt
push
or
aad
xchg
mov
jo
fsubl
adc
mov
in
scas
not
imul
and
pop
mov
mov
cmp
dec
imul
pop
xchg
fsubrl
test
repz
dec
mov
mov
cwtl
push
arpl
mov
test
jg
mov
movsl
imul
cmp
ss
imul
mov
out
daa
in
or
mul
insl
dec
add
and
mov
mov
es
enter
mov
popa
loope
lods
inc
out
inc
test
sahf
cmp
cmp
add
in
lods
stos
xor
lods
mov
nop
enter
xchg
sarb
flds
mov
sahf
xchg
push
inc
ja
add
mov
add
add
cld
pop
subl
sbb
push
fiadds
push
push
mov
loop
push
daa
push
mov
addr16
xchg
mov
jno
xchg
sbbb
add
shll
ljmp
dec
push
mov
lock
push
lret
xchg
xchg
incl
push
jo
xchg
stos
stos
sbb
or
dec
xor
pushf
aas
dec
das
in
insl
dec
adc
cltd
xchg
adc
ret
mov
stos
mov
ljmp
sub
and
mov
add
add
rcr
pop
jmp
pop
pop
adc
fs
or
mov
xchg
movsl
mov
xchg
or
outsl
insb
xor
cmp
sbb
pop
orb
imul
adc
daa
leave
popf
mov
stc
loop,pn
insl
in
mov
cld
inc
pop
push
and
insl
sub
mov
loop
or
js
push
adc
rorb
sbb
daa
or
xchg
ss
mov
outsb
jae
push
scas
loope
mov
jp
das
pop
outsl
sbb
push
xor
xchg
fidivrs
call
rclb
cmp
jg
imul
and
add
addr16
dec
loop
add
ds
or
enter
in
sbb
jbe
sub
shrb
dec
ficomps
ret
xchg
and
addl
dec
xchg
cmp
sub
jno
xor
movsb
aam
jle
sahf
sbb
xor
dec
fisubs
fimull
or
adc
aaa
inc
jmp
lcall
or
or
jl
mov
jae
mov
cmc
xor
nop
inc
inc
ret
jbe
mov
sbb
push
enter
insb
mov
add
inc
inc
mov
mov
test
mov
xchg
add
dec
cwtl
and
std
loop
sbb
lret
test
pop
mov
ds
pushf
mov
xchg
loope
pop
fbstp
int3
fcomp
cmc
sarl
push
aad
repnz
sub
test
out
xchg
mov
mov
add
popa
cmp
pop
or
jle
movsl
inc
cmp
dec
push
das
add
inc
loopne
sti
mov
ret
mov
mov
iret
dec
in
in
and
cwtl
daa
imulb
add
push
add
out
cli
mov
push
jns
ret
or
add
lahf
push
or
std
dec
adc
jbe
lods
xor
fidivrl
xor
fdivl
xlat
stos
icebp
jmp
sbb
xor
add
imul
or
outsl
repnz
imul
push
aas
pop
cwtl
xchg
addr16
cld
insb
push
lods
ljmp
aas
dec
fcompl
pop
inc
shl
stc
in
pop
out
imul
push
mov
push
pop
mov
ret
call
out
mov
stos
imul
push
xchg
mov
jns
aam
shlb
lahf
out
ss
xchg
imul
hlt
cmp
sbb
pop
addr16
cmpsl
rcrb
sarl
mov
cs
cmp
adc
add
push
mov
mov
rcl
mov
or
imul
and
js
add
lds
adcb
fidivrs
push
jl
es
cld
cmp
in
fdivrl
inc
lret
sub
add
inc
xor
xor
sbbb
bound
stc
push
mov
dec
xchg
lods
notb
lods
outsb
inc
int3
and
daa
mov
mov
pop
outsb
dec
rorb
std
mov
sub
mov
sbb
pop
push
and
jbe
in
inc
mov
fmuls
adc
lcall
push
cmp
popf
sbb
or
adc
mov
add
cmp
add
mov
bound
movsl
sarl
lods
aad
outsl
lock
std
fs
lock
lret
dec
jp
icebp
jbe
aaa
and
int3
jns
pop
jo
lcall
lock
xor
jnp
sbb
icebp
push
sbb
mov
mov
call
pop
sbb
fiaddl
hlt
dec
popa
jno
lcall
les
push
inc
xchg
lods
pop
jg
mov
popa
add
ret
sbb
adc
push
ljmp
jp
fwait
cmpsb
sbb
sub
xchg
int3
movsl
nop
push
movsl
fiadds
jmp
xchg
xchg
cld
in
iret
inc
repz
jp
lea
mov
cwtl
rorl
jp
add
xchg
fs
xchg
bound
dec
dec
es
into
adc
push
dec
pushf
inc
mov
loope
test
mov
sbb
jl
insl
lcall
jmp
sti
std
adc
pop
xor
sbb
jo
mov
xor
pushf
dec
addl
je
mov
shll
test
push
in
fsub
pop
or
mov
adc
push
std
shr
into
bound
or
enter
out
stos
scas
add
insb
in
in
repnz
inc
cmp
sbb
sbb
sbb
out
inc
xor
fcomip
adc
xchg
jl
sub
add
insl
notl
add
or
rcr
push
popa
cli
adc
sbb
mov
je
out
add
daa
pusha
in
out
test
inc
mov
jae
sarl
xchg
xchg
addr16
in
sbb
stos
jle
jecxz
les
icebp
dec
or
into
jno
ljmp
addl
in
cltd
fmull
aad
sbb
mov
jmp
mov
stos
cmp
test
sub
call
mov
jns
mov
or
scas
sub
outsl
scas
popa
inc
mov
push
push
mov
dec
cmp
scas
fsubrl
inc
dec
cmp
cld
jae
mov
cmc
inc
push
xchg
psubq
mov
mov
jmp
ficoms
cld
fidivrs
insb
xchg
add
push
sub
push
adc
jno
outsb
xor
aaa
mov
inc
dec
cli
in
outsl
sbb
or
popl
adc
cmp
orl
mov
add
pop
test
ljmp
push
sbb
in
sbb
roll
or
and
jbe
mov
and
test
lods
jge
ljmp
and
pop
jg
pop
jg
sti
mov
repz
xor
mov
addr16
mov
and
xchg
mov
xchg
mov
xor
fs
push
xchg
test
pop
dec
nop
push
in
arpl
testb
or
ja
xchg
cmp
and
loope
int3
test
movb
mov
cmc
lds
jae
aas
jle
js
inc
pushf
push
movsb
test
out
push
shrl
fstpl
sbb
and
hlt
fucomi
mov
js
dec
adc
sub
ret
mov
sub
pop
jg
notb
pop
int3
mov
popa
or
pop
pop
mov
lret
mov
push
add
mov
mov
js
xor
dec
pop
aas
shrb
add
es
push
mov
jns
outsl
std
ret
or
cmpsl
sbb
inc
inc
sbb
les
aas
push
lea
sahf
xor
jl
outsb
mov
sub
cli
lock
cmc
das
iret
xor
mov
out
mov
icebp
adc
xlat
lret
decl
sub
nop
xchg
xor
adc
loopne
sbb
or
ret
scas
addr16
adc
aam
or
or
lret
pop
jbe
pop
cld
lods
je
and
cli
cmp
rorl
incl
rcrl
test
dec
inc
inc
fisubrl
cmc
dec
cld
movsb
push
cmc
push
fs
xor
arpl
pop
fdivrs
dec
dec
xchg
push
scas
push
sub
ljmp
and
out
sub
sub
out
mov
scas
fincstp
lret
add
jp
lods
rol
lods
dec
pop
addl
lret
mov
repz
pusha
dec
ljmp
icebp
mov
sub
ss
add
arpl
mov
push
jl
xchg
fsubrs
jl
mov
push
xor
gs
mov
cmp
cs
sub
aas
cmpsl
fsubrl
inc
insb
cmp
mov
lahf
dec
sahf
jnp
divb
xor
bound
jno
int
cld
xorb
sub
insb
jmp
push
lcall
jo
dec
jnp
mov
fistl
add
push
icebp
enter
and
xor
sbb
mov
xor
in
dec
mov
push
cwtl
pop
adc
pop
adc
push
mov
push
rol
mov
or
int3
arpl
imul
clc
xchg
movsl
sbb
andb
mov
pop
add
xchg
ds
outsl
pushl
pop
cmp
jmp
ja
or
and
ss
lods
xor
out
mov
and
mov
loopne
icebp
ja
adc
and
cwtl
idivl
daa
leave
pusha
rorb
push
or
adc
cmp
jae
test
dec
cmp
js
and
mov
xchg
pop
inc
rclb
jno
mov
in
or
jno
frstor
and
lods
jb
sbb
insb
inc
sub
sbb
fbstp
enter
and
add
xchg
add
bound
iret
xor
stos
fisttpl
mov
sbb
inc
aas
dec
insl
fucom
mov
aaa
push
or
xor
mov
outsl
cmpsl
fwait
cli
xlat
inc
popf
jo
adc
ljmp
out
inc
inc
sbb
ds
mov
push
adc
mov
pop
jle
roll
mov
xchg
movb
lahf
mov
out
ljmp
lret
test
inc
es
lret
lods
std
ljmp
ror
inc
fcoms
and
subl
pop
push
sahf
loopne
or
cwtl
test
mov
and
lret
sbb
xor
pop
jb
jnp
icebp
sbb
aas
inc
add
out
adc
xchg
pop
fldt
dec
adc
xchg
mov
addr16
inc
inc
xchg
enter
loop
fimull
push
mov
inc
les
add
xchg
and
xchg
dec
pop
sub
jmp
lods
cmp
in
push
xchg
jecxz
adc
lahf
jp
ljmp
adc
orb
or
or
dec
jnp
inc
ljmp
sbb
jbe
or
sub
shlb
hlt
movsl
testb
xor
push
mov
adc
mov
stc
stos
xor
dec
ja
inc
roll
mov
popf
inc
rcrb
adc
mov
push
test
mov
lcall
test
or
xlat
fistpl
scas
add
fisubs
xchg
fistpll
mov
rcrb
mov
inc
cmp
shlb
pop
add
inc
push
out
xorb
test
pop
mov
mov
stc
aas
push
and
popa
popa
call
sbb
add
push
pop
cli
insl
xorl
fisubrl
aaa
fnsave
cld
xabort
mov
rorb
in
adc
sbb
cmp
mov
add
fildl
mov
jg
paddusw
push
rolb
push
pusha
dec
sarl
xor
sbb
mov
jg
call
sub
lea
cld
inc
mov
lods
pop
pop
mov
es
nop
leave
pop
adc
sbb
jo
lods
ret
push
shrb
or
sbb
loopne
scas
loope
mov
dec
and
add
adc
mulb
mov
outsl
int3
mov
dec
sub
mov
int3
mov
jmp
mov
and
jmp
es
jne
test
sbb
pop
fstpl
xchg
jle
aas
inc
in
cs
inc
insl
jl
mov
nop
and
cmp
popa
mov
and
push
decb
dec
mov
ja
shll
pop
pop
inc
aad
push
dec
cmp
mov
clc
fdivl
mov
out
repnz
sarb
mov
das
int3
cmp
inc
cmpl
jnp
pusha
ds
push
pop
fdivr
push
mov
push
fmull
xor
jno
mov
imul
mov
or
cld
xchg
xchg
xor
and
adc
or
call
mov
imul
inc
popa
pusha
test
push
cmpsb
je
adc
fldl
mov
mov
and
adc
arpl
mov
mov
sti
call
inc
push
test
repnz
push
addb
xchg
jmp
mov
lock
enter
dec
push
in
inc
nop
adc
fmull
ret
data16
hlt
inc
std
dec
icebp
xor
or
jnp
dec
cli
mov
sti
das
in
loop
xchg
iret
xor
adc
pop
cmp
lods
jbe
or
andl
pop
andb
mov
inc
inc
sub
shlb
xchg
add
insl
mov
sub
gs
sarl
repnz
enter
cmp
sub
xchg
fistpll
fcomp
or
cmpsw
pop
lds
sub
sahf
cli
es
lcall
std
adc
add
lea
cmp
and
insb
shrl
push
and
icebp
and
or
pop
outsl
je
xorl
mov
arpl
fstpt
loope
and
cmp
in
push
add
xchg
xchg
rcll
outsl
mov
jmp
nop
sbbl
ficompl
or
stos
mov
push
lcall
and
lds
outsl
jecxz
nop
les
xchg
mov
jo
pop
pusha
pop
outsl
adc
mov
or
aas
sti
add
test
ds
push
dec
dec
mov
fwait
jle
mov
pusha
lods
ljmp
xchg
icebp
shlb
adc
push
push
and
mov
test
sahf
pop
fstps
pop
mov
and
jbe
aam
push
or
jno
shl
stos
lock
icebp
mov
mov
mov
pop
inc
imul
jo
call
mov
add
js
daa
in
hlt
jg
jno
sarb
inc
insb
cli
adc
xchg
lret
lods
mov
adc
popa
cmp
cmpsl
sbb
es
into
inc
mov
mov
adc
sub
xor
dec
xor
or
or
sbb
mov
push
mov
fnstsw
fdivs
cmpsl
jnp
push
fstps
iret
xorb
call
jl
pop
insl
xor
les
add
add
pop
test
jno
sarb
mov
ljmp
add
sbb
sbb
xor
test
ret
cmp
lret
int3
mov
frstor
push
outsl
mov
jo
int
add
loopne
sti
test
pusha
xor
movsl
pop
cmp
or
sub
js
shlb
mov
scas
lahf
sub
int
push
movsl
sbb
popa
loop
enter
mov
adc
fiadds
cmp
sub
push
lea
dec
je
in
icebp
aas
and
fsubrs
fmul
roll
subb
sbbb
or
fidivl
push
add
mov
sbb
cmp
mov
std
es
iret
push
jo
mov
test
fstp
cs
mov
mov
fisubl
mov
inc
fimuls
enter
movsl
test
lea
testb
lock
lock
fimuls
mov
cwtl
clc
push
mov
xchg
testb
sub
cwtl
xchg
inc
ja
lcall
mov
mov
scas
mov
inc
jmp
js
out
or
xchg
add
in
push
pop
cli
add
mov
sub
inc
sbb
js
add
pop
mov
rorb
cmpsb
mov
rcll
icebp
sbb
aas
jae
in
cmpsb
ror
outsl
mov
push
mov
ljmp
inc
pop
sub
xchg
or
pop
xor
or
iret
adc
out
sub
daa
ja
jmp
sbb
orb
subl
push
aad
pop
aas
data16
mov
dec
fsubs
cmpb
iret
shll
pop
pop
in
mov
stos
jnp
in
fsubl
or
out
mov
ficomps
jge
aas
popf
dec
insl
call
or
push
aas
adc
jo
lret
outsl
loop
mov
gs
jle
fists
ljmp
dec
mov
mov
add
fisttpl
imul
mov
add
insl
fsubr
push
dec
sti
mov
pusha
notl
xchg
pop
cmp
jmp
icebp
add
inc
sub
jo
fcmovnbe
cli
pusha
fmuls
pop
inc
repz
xor
adc
and
out
les
inc
hlt
or
pusha
add
mov
lock
add
ds
outsl
pop
sub
xor
mov
adc
fistl
pop
ja
adc
mov
lahf
mov
xchg
mov
sti
mov
xor
mov
lea
sbb
pop
jg
mov
mov
mov
pop
mov
push
gs
imul
pop
loope
push
imul
fildl
inc
mov
cs
movsl
cs
jb
imul
sti
test
andb
xlat
and
cs
outsb
sub
pop
xchg
xchg
or
mov
das
sbb
outsl
aas
mov
das
out
jge
or
add
adc
and
cli
scas
mov
jecxz
jp
xor
mov
sahf
push
push
ret
outsl
fstpl
rcrl
imulb
repz
into
or
notb
mov
ret
icebp
sbb
xchg
push
incl
sahf
adc
stos
ret
jmp
inc
outsb
into
cmp
lds
add
sub
jecxz
sbb
mov
push
outsb
mov
pusha
xor
cmp
roll
jl,pn
inc
call
pushf
mov
push
adc
or
push
jp
jecxz
mov
mov
sub
push
leave
mov
clc
add
bound
sbb
mov
jle
sub
pop
xchg
loopne
rclb
sub
adc
das
inc
test
pop
jo
or
xor
loop
pop
xor
or
lahf
ret
jne
xchg
adc
xchg
sbb
dec
sbb
cmpsb
jno
cltd
cmp
jo
sbb
xchg
aaa
cld
les
jne
jp
xchg
and
mov
add
adc
repnz
call
fcoms
cmp
jmp
inc
pop
mov
mov
dec
and
inc
mov
and
icebp
pop
cs
adc
sbb
lds
push
ds
push
mov
lcall
shl
in
insl
cmp
and
loopne
clc
push
icebp
in
fucomp
out
jg
sbb
push
jl
and
push
push
inc
xchg
hlt
loope
inc
and
jge
test
jmp
sahf
jl
shr
shll
mov
js
mov
and
and
cs
push
jg
sbb
popa
or
and
adc
cmc
push
dec
sbb
jge
mov
fimull
jbe
repz
hlt
lods
aaa
ljmp
xor
fcmovnbe
mov
mov
mov
or
xchg
lea
enter
movsl
pop
mov
pushf
push
icebp
cmc
ret
and
add
dec
cwtl
dec
jg
jmp
adc
or
shlb
xor
inc
sbb
inc
je
and
out
xor
fisubl
add
cmpsb
or
mov
jnp
and
mov
mov
mov
shrb
push
outsb
jmp
jns
daa
clc
adc
sbb
sub
or
sbb
push
jns
add
jbe
cmp
ret
shll
das
add
inc
shrl
or
dec
and
ja
incb
pop
test
cwtl
and
scas
or
outsb
xchg
fsubrs
daa
aas
lds
dec
aam
clc
mov
lret
xchg
cld
clc
mov
mov
pop
outsb
and
push
fdivs
pop
mov
mulb
lret
out
clc
cmp
popl
sub
mov
inc
icebp
outsb
jmp
rclb
push
jne
pop
mov
jle
outsl
jge
mov
mov
mov
or
mov
lods
std
sbb
xor
loop
lock
loopne
imul
pop
testl
loopne
jmp
arpl
xchg
jns
rcll
jbe
and
push
jmp
es
ss
aas
lcall
mov
mov
xchg
leave
xor
pop
pop
pop
aaa
daa
dec
inc
ficomps
mov
in
test
pop
push
andb
shlb
xor
adcl
or
xchg
dec
jno
dec
inc
in
dec
sub
pop
lods
imul
or
insb
mov
mov
mov
add
inc
xchg
sbb
nop
pop
mov
insl
cmpl
xor
add
jecxz
xchg
insb
jg
es
pop
mov
rcr
xor
sbb
xchg
out
xor
in
jmp
pop
outsb
inc
repnz
cmpsb
fucomip
pop
push
lods
push
pop
mov
sub
aam
xchg
ret
xor
adc
xor
rcrl
in
repz
fstl
fstpt
sbb
shll
and
lods
sbb
sbb
xchg
mov
lods
aad
add
xchg
es
push
mov
leave
enter
imul
cmp
int3
shll
adc
jno
jo
pop
jl
ret
xor
shlb
icebp
pop
mov
test
inc
mov
lret
pop
xchg
ds
adc
add
jecxz
xchg
xchg
push
andb
adc
sub
out
test
sahf
sub
jg
inc
and
std
ret
or
lock
test
adc
xchg
into
cmp
cmp
in
inc
arpl
pop
negl
mov
aam
leave
jecxz
sbbl
pop
ljmp
lea
test
xor
xorb
fstpt
loope
in
mov
jle
pop
sub
fsubrs
jl
test
jp
adc
sbb
xbegin
cli
ret
push
xor
je
and
sahf
add
in
scas
fimull
fcomip
add
mov
mov
pop
and
inc
push
cmp
adc
das
mov
add
or
add
popa
dec
mov
xchg
jbe
es
je
or
cwtl
cmp
stos
in
in
xchg
add
dec
sti
jno
mov
mov
inc
int3
inc
test
jns
js
mov
outsb
fldcw
xchg
sahf
sub
fadds
mov
and
add
lds
rcr
stos
insb
test
outsb
pop
in
mov
and
mov
inc
call
xchg
sub
lods
imul
dec
push
pop
stos
mov
sbb
pop
ljmp
shll
subl
mov
jbe
das
mov
loop
cmp
popf
add
xlat
out
dec
xchg
insl
jl
sti
lret
daa
arpl
insl
add
into
insl
mov
icebp
stos
lock
imul
pop
out
mov
adc
push
cmc
call
in
sbb
fisubrl
lea
sub
sub
lcall
in
push
cmp
jbe
mov
aaa
push
mov
and
ss
inc
push
loop
cmc
cmp
add
mov
das
mov
in
ss
lcall
es
xlat
cld
data16
cmp
mov
aaa
test
sub
mov
mov
jecxz
pop
jmp
cld
icebp
loopne
aam
mov
mov
test
sarl
mov
pop
jle
shlb
fbstp
mov
mov
jno
aas
in
or
pop
fcoms
pusha
stos
add
je
pop
xchg
popa
gs
jbe
sbb
push
sbb
push
rorb
stos
fidivs
icebp
hlt
jle
arpl
scas
inc
jne
and
imul
frndint
shrb
cmp
mov
mov
enter
es
jbe
sub
or
jp
jl
pop
mov
xlat
fadd
aas
adc
or
cwtl
adc
inc
xlat
or
loope
js
iret
sub
cmp
xchg
and
push
dec
ds
dec
movsl
jmp
in
cmpsl
push
inc
jmp
cmp
loopne
mov
mov
push
sahf
mov
mov
push
clc
loope
push
and
rcrb
stos
push
out
outsl
ss
iret
or
mov
cmp
popf
jns
mov
jno
pop
clc
lcall
xchg
adc
or
mov
inc
in
pop
test
cs
in
pusha
imul
push
es
xorb
shl
push
mov
mov
or
and
jle
sbb
loop
cmp
adc
push
mov
outsl
es
idivb
fwait
lods
pop
iret
pop
fcmovne
sbb
repz
sub
mov
xchg
mov
lret
sar
mov
push
push
cmp
sti
in
rolb
adc
pop
adc
mov
mov
jb
mov
mov
push
sub
fmull
push
mov
sbb
jmp
mov
mov
or
sar
mov
sbb
stc
and
mov
iret
adc
jo
jmp
inc
cmpsb
jp
xor
stc
xchg
popf
shr
and
sbb
loop
cmpsl
inc
test
sub
es
mov
into
sub
dec
pop
aad
push
int
jg
mov
inc
pop
scas
push
mov
push
jmp
in
sub
inc
and
pop
lea
xchg
mov
mov
sbb
test
sbb
in
outsl
ret
push
jge
shrb
inc
cmp
gs
pop
add
xchg
cmp
inc
in
mov
out
loopne
lds
ss
in
rorb
lea
or
mov
out
mov
out
data16
jp
pop
addr16
test
je
lock
pop
lcall
pop
test
mov
add
cwtl
lods
jno
xchg
lods
es
pop
imul
mov
jmp
push
subl
cmp
fisubrl
punpcklwd
mov
fcomps
pop
pop
mov
ss
pop
pop
and
add
cmc
fildll
repz
inc
and
rcll
sbb
incl
pop
loop
xor
push
stc
notb
cmp
test
jle
jge
aad
mov
rorb
inc
out
mov
or
negb
into
push
mov
das
sub
jo
pop
sti
test
pop
cli
push
jle
push
hlt
or
add
lea
xchg
out
jnp
outsl
mov
pop
push
or
and
sbb
arpl
jno
aad
xor
jle
xchg
jl
dec
add
cmp
rolb
ss
adc
out
jmp
ffree
cmc
push
or
enter
js
add
daa
fdivl
gs
push
cld
jecxz
pushf
pop
mov
sbb
mov
jo
bound
call
nop
push
mov
cwtl
fs
lock
mov
mov
or
cmp
sub
in
sbb
inc
dec
xor
dec
ret
dec
or
sbb
insl
fnsave
pop
lret
mov
std
les
sbb
out
mov
add
mov
outsl
stos
js
out
ss
push
xchg
fs
adc
push
sub
sub
mov
stc
fisubrl
xor
xchg
xchg
ficompl
dec
add
aad
sbb
pop
pop
fs
cmp
rorl
sti
add
sbb
xor
adc
xchg
dec
inc
xor
inc
xor
add
je
sub
sarb
mov
sub
std
jnp
clc
pavgb
or
in
cld
mov
outsb
pop
incl
in
or
cmc
mov
fwait
lahf
pop
popa
xchg
sar
popa
ficomps
fnstcw
adc
sub
das
xchg
mov
jne
ja
outsb
lea
cmpb
dec
in
arpl
loop
jbe
rcrb
inc
cli
adc
mov
orb
mov
xchg
stos
add
xchg
aas
jecxz
sub
fidivs
js
call
scas
movsb
dec
inc
cmpsl
fwait
lea
sbb
cmp
inc
mov
xor
inc
mov
or
filds
clc
push
ds
xor
ljmp
jmp
dec
in
xchg
and
sub
jp
mov
fwait
push
lock
dec
fucom
insl
xor
dec
mov
les
test
lds
ficoml
mov
pop
sbb
fadds
pop
es
lods
sub
repz
sbb
mov
cltd
mov
jecxz
jmp
jno
mov
dec
aad
call
rolb
ffree
cli
int
scas
inc
nop
test
mov
cmp
int3
cltd
mov
mov
std
test
dec
or
mov
jns
inc
inc
js
cmp
stos
in
lahf
fsubs
push
fildll
loope
cld
aaa
outsb
pop
clc
jne
enter
in
sub
xor
mov
stos
fwait
mov
lahf
enter
add
mov
int
jge
ljmp
inc
in
jbe
or
pop
rcr
sub
pop
rcll
xchg
test
pop
shr
mov
jmp
sbb
pop
js
int3
imul
pushf
imul
out
fadd
aaa
mov
or
sar
adc
jno
fidivrl
sub
inc
daa
lock
pop
mov
mov
xchg
sbb
mov
pop
sbb
push
ret
dec
les
pushf
cmp
insb
hlt
sbb
call
xchg
or
mov
and
cltd
shlb
imull
dec
xorl
pop
pop
mov
mov
and
add
stc
fcmovu
mov
mov
add
pop
or
cmp
ficompl
sub
push
bound
leave
mov
or
cmpsb
mov
pushf
sbb
add
or
sbb
mov
mov
push
jb
lea
imul
jmp
pushf
fs
add
lea
mov
dec
outsl
jl
dec
inc
pop
and
ds
pop
in
sbb
adc
int3
dec
push
mov
xor
out
bound
or
sub
sbb
ljmp
es
jle
xor
bnd
int
shl
call
incb
call
das
jne
inc
sbb
test
divl
add
popa
push
push
add
int
mov
or
stos
addr16
jg
stc
enter
push
and
pushf
negb
mov
fcomi
inc
sbb
bound
loopne
add
imul
mov
cmp
loop
pop
pop
outsl
lahf
sub
sbb
pop
cli
cwtl
inc
add
lea
lds
dec
popf
movsb
dec
ds
xor
mov
mov
lahf
lods
mov
inc
jno
xchg
add
ss
push
fidivrs
adc
sbb
cld
loopne
push
mov
xor
andl
andl
mul
repnz
aad
add
int3
push
lcall
mov
fdivrs
add
lret
mov
loopne
dec
inc
cld
mov
add
sub
or
xchg
stos
pop
pop
cmp
push
mov
inc
xchg
dec
add
mov
or
sub
jo
fcomp
push
iret
mov
stc
out
and
sub
inc
ss
dec
xchg
lds
add
mov
aas
mov
in
lret
fstpt
mov
fstl
outsb
mov
cmp
xchg
rolb
jecxz
adc
addr16
pop
and
je
and
sub
pop
incb
js
adc
gs
xor
jl
in
imul
lock
xor
jle
aaa
inc
lock
lds
inc
es
xor
rolb
test
bound
lret
add
mov
push
je
push
mov
pop
mov
fisubl
sub
int3
add
mov
push
ljmp
call
adc
jo
lret
dec
and
insb
loopne
cmp
inc
ret
mov
aaa
stc
add
les
mov
dec
inc
mov
jmp
movsb
adc
iret
xchg
sbb
ljmp
stc
mov
dec
outsb
sar
inc
or
int3
test
aas
mov
mov
call
data16
sbb
sub
loope
dec
push
andb
mull
popa
daa
pop
cmp
fildl
sbb
mov
inc
adc
jne
mov
push
sub
dec
jno
sub
push
aam
rclb
and
cmp
loopne
cwtl
inc
in
pop
adc
out
mov
jns
cs
or
movsl
test
loopne
and
fdiv
jg
pusha
movsb
iret
mov
ljmp
push
out
arpl
movsl
pop
pop
xchg
adc
mov
outsl
pop
fisubs
andb
iret
das
mov
or
lds
insb
mov
inc
pop
xchg
pop
or
cmp
cli
ds
in
std
or
cmp
add
cmp
pop
movsb
cs
pop
lea
jp
pop
xor
pop
fmul
xchg
add
mov
call
sbb
push
jne
ljmp
pop
ljmp
mov
pop
fistl
rcr
cmp
call
ret
fisubrl
or
das
mov
dec
and
test
fiadds
add
les
and
or
fs
sub
inc
fcoms
pop
mov
inc
and
inc
cmp
in
dec
pop
lock
mov
add
xor
cmc
out
pop
ret
aaa
pop
or
lock
sbb
push
cmp
mov
gs
fdivr
pusha
test
xor
in
ret
das
adc
jmp
jmp
or
jo
mov
imul
mov
push
aas
leave
hlt
jmp
and
test
lahf
pushl
sbb
inc
jecxz
inc
test
cld
adcb
jecxz
mov
mov
cmp
mov
sub
jp
imul
addr16
loopne
addr16
cmpl
push
fs
in
loope
decl
mov
sub
out
push
mov
dec
or
mov
mov
cmpsl
and
adc
pop
mov
imul
hlt
push
mov
test
xor
pop
push
add
jmp
call
lret
add
inc
xchg
fstpt
inc
cmc
sbb
adc
adc
stos
xchg
and
xchg
std
cli
xchg
pop
jecxz
pushf
xor
lea
mov
int3
out
jecxz
insl
call
mov
add
imul
mov
fdivl
dec
mov
push
ficoms
adc
aaa
fwait
pop
mov
dec
xor
pop
decl
cmpsb
push
cwtl
adc
call
fsubs
and
jmp
sbb
std
das
add
mov
pusha
cmp
mov
arpl
div
fildll
push
shll
push
adc
rol
pop
cmp
jnp
shll
leave
enter
loope
xchg
jno
cmpsb
pusha
mov
mov
fisttpl
stc
jno
aad
lock
hlt
jne
data16
aad
pusha
or
jae
out
scas
add
ficoms
jno
mov
inc
lea
jo
leave
push
adc
xlat
mov
ja
pop
pop
test
out
in
bound
mov
das
int3
out
inc
nop
std
cmpsb
pop
ljmp
xchg
mov
jle
rcl
cmp
sbb
enter
xchg
or
adc
shlb
push
loop
xorb
das
loopne
cli
mov
sub
jle
sub
aaa
inc
push
int
pop
jo
mov
mov
push
cli
add
dec
lds
sbb
fsubrs
insl
sbb
call
test
lods
les
addr16
nop
hlt
mov
jge
cmp
mov
push
shl
xor
fildl
popa
sbbl
shrl
inc
mov
pop
repnz
xchg
inc
mov
js
ljmp
rcr
sub
mov
xchg
jp
add
xchg
pop
mov
and
scas
loope
test
rcrl
movsl
lcall
stos
and
test
scas
test
and
mov
loopne
test
add
ds
lret
dec
stc
out
push
addr16
ret
das
add
addl
clc
adc
cltd
shrb
mov
adc
ja
fldt
or
mov
fs
cmpsl
adc
pop
arpl
loop
push
mov
dec
les
jge
ficomps
dec
push
push
dec
arpl
imul
inc
lds
cmp
sbb
dec
xchg
mov
mov
dec
cmp
std
decl
cli
andb
or
adc
lea
xchg
fs
mov
sbb
scas
add
add
push
nop
cltd
bound
xor
push
push
and
sbb
loope
mov
jb
and
pop
call
xchg
out
rorb
mov
loope
mov
andb
xchg
xchg
pop
mov
pop
mov
ss
iret
cmp
mov
push
cmp
cltd
insb
call
cltd
aas
pop
pop
xchg
shlb
ss
cli
sarb
leave
std
daa
pop
mov
fld
sub
das
shlb
cmp
push
dec
les
mov
sub
adc
cwtl
adc
adc
fdivr
cmpsb
out
mov
sub
jecxz
add
lds
std
mov
sub
out
jbe
lock
cltd
loope,pn
lcall
sbb
dec
jg
xor
outsb
jo
cmp
mov
cmpsb
pop
popl
mov
in
xchg
ret
lcall
mov
jne
dec
daa
ds
sar
pop
push
fisubrl
xor
call
in
cld
call
jmp
out
inc
dec
icebp
adc
cli
fcmovnu
sbb
sub
dec
ret
fwait
jnp
je
stos
orl
leave
sub
xchg
leave
lock
jge
adc
or
es
xchg
jecxz
sbb
sahf
clc
outsl
sahf
inc
leave
add
lret
xlat
cmc
out
loopne
es
dec
je
pusha
fcomip
aaa
mov
pop
inc
mov
cs
movsl
pushl
imul
cli
js
das
sbb
mov
js
cli
mov
sub
push
stos
push
les
ficoml
and
adc
push
std
push
mov
add
sub
in
push
mov
adc
mov
fstpl
ljmp
jp
sbb
mov
fdivl
es
push
inc
fmul
ss
pop
jp
mov
mov
jp
cmp
sahf
repz
call
mov
fwait
mov
rolb
cmp
xchg
in
nop
outsl
cli
insl
xor
xchg
fs
pop
cmp
orb
mov
xchg
in
rorl
loope
pop
inc
test
xor
xchg
xchg
scas
lea
fidivl
lock
pop
mov
in
hlt
push
dec
insl
lcall
or
addb
inc
inc
push
xlat
ret
xchg
xor
cwtl
aas
outsb
jnp
push
mov
testb
pop
inc
pop
push
push
andb
call
outsl
mov
cli
repnz
pop
rcrb
scas
sbb
dec
and
loop
bound
cwtl
rolb
outsl
and
or
pop
dec
xlat
push
xchg
push
dec
pop
aas
xchg
bound
test
decb
fnstsw
sbb
sbb
loop
in
fs
fmuls
aaa
shlb
sbb
repz
sub
or
cmp
out
jg
inc
movsb
push
enter
mov
xor
sbb
loopne
xor
lock
pop
mov
mov
ss
jle
dec
jne
shl
push
pop
repz
gs
leave
inc
mov
sub
cli
sbb
dec
iret
jnp
dec
aas
mov
and
call
sub
lock
das
and
pop
out
mov
in
movsb
push
pop
add
add
int3
adc
mov
jo
shrl
cwtl
sbb
ss
pushf
and
or
inc
or
or
cmpsb
push
cmp
aas
movsl
mov
pop
inc
mov
sub
xchg
mov
push
pop
scas
nop
loope
or
jmp
pop
loop
mov
lock
addb
orl
jg
rorl
add
fdivrs
dec
sub
pop
mov
mov
mov
sahf
push
loop
mov
inc
inc
call
inc
sub
xchg
ficompl
mov
xchg
andb
push
jmp
sbb
lods
inc
cmp
adc
cmp
fcomi
mov
adc
mov
fildl
mov
repnz
cmp
dec
pusha
cwtl
pop
test
fisubrs
lret
outsl
fdivr
ret
xchg
pushf
out
or
or
sub
jmp
nop
das
pop
call
jmp
scas
hlt
jmp
insb
in
cs
mov
insl
sbb
into
ficoml
xor
insl
pop
ficomps
bound
shrl
shlb
adc
sub
sub
mov
movsb
fldt
mov
daa
pop
mov
and
pop
cli
or
xchg
inc
mov
mov
push
insb
xor
inc
es
mov
push
or
and
stos
jge
outsl
repnz
jl
loopne
inc
out
popa
adc
sub
aad
or
sbb
or
dec
insl
insl
jae
mov
lahf
sub
int3
hlt
add
dec
inc
outsb
mov
aam
jo
sbb
push
dec
test
lea
fnsave
test
dec
push
jno
sti
icebp
xor
pop
leave
int3
cmp
aam
shll
mov
pop
lds
pop
stos
jp
mov
inc
std
test
push
cmp
iret
push
or
cmp
pushf
cmp
or
inc
push
test
push
sbb
pop
mov
into
xlat
mov
imul
ss
xlat
mov
jge
hlt
outsl
or
stos
fadds
test
jl
add
pop
sub
mov
xchg
fwait
ljmp
inc
jge
insl
int
cmpsl
dec
mov
fildl
xchg
cmpsl
adc
icebp
sub
cld
mov
xor
nop
xchg
mov
or
loop
andl
jmp
jp
sub
jl
xor
or
mov
dec
inc
sub
inc
aaa
push
or
gs
mov
lret
outsl
insl
imul
xchg
xor
add
add
subl
mulb
test
scas
das
pop
loopne
adc
lds
aaa
dec
imul
movsl
call
aas
and
fildl
or
push
or
aam
or
data16
jecxz
popa
bound
jp
push
inc
scas
aad
push
xchg
mov
test
test
shlb
stos
stos
mov
xor
popf
mov
decl
mov
pushf
jbe
mov
fisttps
mov
test
lods
jo
out
jge
std
jg
mov
xchg
sbbb
or
mov
mov
lret
sub
fdivrs
ja
or
aam
loopne
xor
add
fcoml
fmuls
push
sahf
outsl
call
adc
ret
addr16
dec
sub
test
roll
dec
incb
lds
push
lock
add
jp
jle
ret
call
and
andb
xlat
subb
add
mov
jne
xor
jb
inc
adc
xchg
fsubrp
cs
rcr
mov
dec
sbbl
loope
inc
mov
mov
and
sbb
and
xchg
movsl
pusha
int
pop
mov
xchg
movb
sti
pop
pusha
imul
das
inc
lret
mov
rcll
or
sbb
pop
je
sbb
test
sbb
bound
or
push
mov
lahf
aaa
stos
mov
mov
inc
or
pop
or
and
or
mov
adc
int
adc
movsl
frstor
mov
popl
push
notl
loope
pop
mov
jns
dec
test
push
test
jns
lds
sub
inc
icebp
outsl
add
in
loopne
lahf
repnz
sub
xor
shlb
int
iret
lcall
andb
or
dec
popa
push
aam
fdivs
mov
push
js
jmp
stc
pop
fcomp
mov
or
jl
aad
or
mov
adc
dec
push
ret
push
sub
or
lock
cs
lea
imul
mov
add
cltd
gs
lods
rclb
and
in
mov
in
rcrb
aam
xor
rorl
pop
xor
or
jnp
jmp
pop
jae
lret
add
dec
sub
push
xchg
out
sbb
push
cld
ljmp
add
push
mov
add
jne
xchg
inc
and
mov
outsl
pop
movsl
test
mov
mov
mov
add
xor
scas
es
dec
repnz
cmp
fcoms
shlb
lahf
bndldx
add
mov
fs
mov
pop
cs
insb
lret
mov
outsb
jg
outsl
mov
pop
pop
and
mov
sub
call
jb
fwait
out
push
popa
jecxz
push
repz
mov
mov
mov
sub
jle,pn
inc
dec
mov
lret
fildl
pop
cmp
sub
in
cwtl
push
inc
mov
ss
cmp
sub
sbb
adc
insb
pop
adc
dec
das
adc
pop
sub
add
jbe
movb
pop
leave
sbb
ficompl
out
adc
aam
sub
insb
push
gs
mov
push
xchg
mov
push
icebp
and
rcrl
mov
sub
jnp
or
adc
lods
cli
mov
aaa
cmp
sti
out
adcb
sbb
bound
fcmovu
das
push
mov
jns
ja
inc
loope
sub
mov
rolb
into
adc
dec
cmp
sbb
ljmp
divl
fincstp
xor
arpl
pop
fists
adc
ljmp
mov
and
mov
mov
ret
sub
push
mov
stos
js
jb
clc
add
mov
ljmp
es
push
and
std
sub
or
adc
add
fildll
and
jge
rcl
jbe
xor
mov
pop
faddl
adc
sbb
std
scas
rorl
xchg
pop
cmp
rolb
testb
sbb
test
push
inc
pop
adc
cmp
test
adc
sub
rorb
popf
jecxz
or
push
out
insb
cmpsb
fistps
add
ljmp
sub
lods
xor
xchg
sbb
add
ret
ret
pop
xorl
ret
test
add
movsb
jecxz
mov
pusha
jecxz
aam
jb
nop
mov
xor
adc
dec
fs
push
or
push
int
dec
cmp
cmp
je
js
add
stos
jb
and
popf
sbb
or
ja
mov
aam
xchg
xor
sub
dec
loop
test
mov
mov
fwait
jp
dec
inc
bound
adc
daa
fadd
cmp
add
lret
ss
cmp
mov
daa
cs
xchg
push
negb
mov
lods
mov
ror
cmp
sbb
jmp
push
shrb
mov
mov
rclb
rclb
push
fstpl
fmulp
movb
mov
jg
loopne
mov
dec
ss
push
inc
lea
mov
mov
mov
and
addr16
xor
lea
mov
adc
and
mov
test
shrl
lds
popa
mov
ret
leave
scas
fstl
out
pushf
xor
shrb
sub
jbe
popa
pop
test
ja
std
mov
jo
jo
aas
dec
orb
push
es
sbb
pushf
stos
or
mov
mov
xlat
inc
sub
xchg
mov
push
and
adc
xchg
jp
in
jp
fists
repz
shr
cli
push
add
cmc
jno
push
addr16
in
pop
fwait
divl
sbb
mov
push
push
mov
faddp
scas
dec
ret
pop
add
xor
adc
and
or
cli
divb
jecxz
mov
test
call
mov
mov
mov
sbb
pop
mov
mov
into
pushl
mov
and
addr16
faddl
xchg
popa
xor
xor
test
add
mov
push
pop
stc
mov
out
adc
add
mov
mov
jbe
jns
and
mov
xchg
cs
sti
adc
mov
scas
daa
jns
icebp
xlat
fisttpl
inc
mov
adc
mov
push
dec
hlt
push
jb
inc
nop
jb
sbb
add
adcl
mov
cmp
add
mull
xchg
pop
outsb
fdivr
popa
popf
rorl
and
add
xchg
mov
push
rorl
xchg
std
push
into
mov
cs
imulb
push
sub
loop
loope
scas
movsl
push
mov
imul
inc
outsb
aam
add
xchg
cmpsl
notb
sub
cmpb
jp
mov
inc
ret
inc
std
test
mov
mov
fnsave
add
mov
pop
push
jl
fcmovne
cltd
jns
mov
pop
lcall
jno
mov
dec
es
push
bound
add
loope
sub
and
icebp
stos
xchg
in
mov
hlt
fcmovnb
dec
in
push
shll
mov
into
sub
sbb
rolb
ds
push
add
aas
mov
push
and
jmp
in
lods
dec
pop
mov
mov
or
lahf
pop
xor
sbb
mov
and
ret
mov
data16
jo
dec
insb
dec
xchg
cmp
push
pop
push
xchg
mov
lea
fdivl
mov
das
sub
mov
and
jp
sbb
pop
loopne
sub
jg
adc
cld
jbe
mov
in
cmp
mov
push
cmpsl
inc
lret
rcr
repz
mov
push
mov
scas
lret
or
or
and
int
mov
push
pop
cmc
cwtl
mov
add
sub
xor
mov
fstl
into
xchg
cmp
je
mov
in
ljmp
cs
mov
push
cs
pop
push
push
xlat
pushf
and
mov
ds
jmp
or
cmp
ss
out
adc
xchg
stos
xor
clc
loopne
mov
scas
ficoml
mov
mov
cwtl
lahf
ret
xor
mov
or
jo
cmp
adc
mov
lahf
fsub
push
dec
aaa
ss
pop
push
cwtl
dec
out
outsb
mov
cli
ja
nop
repz
lock
js
outsb
and
fistps
jbe
or
mov
or
dec
xchg
mov
andb
inc
or
or
in
inc
mov
mov
scas
cmpsb
cmp
les
jb
pop
call
rorb
adc
lahf
push
mov
jne
scas
fwait
jl
push
cmpl
dec
cmp
stc
jne
stc
aad
adcl
add
xchg
xchg
push
jp
jg
push
mov
enter
push
leave
pop
adc
or
mov
mov
fucom
sub
negl
and
push
or
jle
js
fcomip
ret
push
shll
arpl
mov
shrb
aas
es
adc
dec
jne
xor
stc
mov
lahf
add
push
sbb
sbb
subb
and
and
adc
jmp
push
sbb
pop
repz
sbb
fadd
sahf
psrld
leave
rcll
popf
addb
stos
mov
jo
movsl
das
mov
in
jle
push
aaa
je
outsl
xchg
xor
jecxz
dec
and
mov
or
jmp
leave
xchg
mov
hlt
mov
mov
mov
fdivr
mov
push
outsl
push
dec
inc
packuswb
cmp
lea
loop
fsubl
inc
jnp
imull
fmuls
add
cmpsb
dec
cltd
dec
rcl
push
mov
arpl
loop
mov
pop
mov
jnp
xchg
xor
xchg
sar
pop
mov
nop
sub
jno
push
or
out
adc
fnstsw
leave
test
test
mov
xor
bnd
push
sbb
subb
jns
xor
sar
psubq
outsb
mov
imul
icebp
dec
mov
lcall
ss
dec
xchg
mov
addb
and
mov
test
or
mov
inc
pop
ljmp
or
jo
sbb
sbb
gs
or
pop
ljmp
cmpsl
and
cmc
lods
dec
fs
pop
mov
or
je
mov
or
outsb
outsb
inc
sub
pusha
push
in
push
add
push
xchg
xchg
movsb
jne
sti
mov
sbbl
hlt
rclb
fldt
cmpsb
push
dec
xchg
or
mov
add
lahf
jmp
xorl
mov
inc
psadbw
mov
lods
xchg
cmpsb
movsb
fdivl
shlb
iret
ja
rolb
mov
call
push
cltd
imul
pushl
jg
ficomps
sub
sbb
sahf
mov
xor
add
mov
les
mov
ret
inc
pushf
dec
shll
add
fiaddl
test
pusha
mov
ss
ss
or
jmp
faddl
inc
and
sbb
stos
add
push
cmp
dec
adc
jo
scas
rcrl
mov
dec
push
sahf
fsubl
mov
push
dec
sub
sahf
and
adc
lret
adc
or
push
dec
or
rolb
add
rcr
push
sub
mov
cltd
sbb
xchg
ljmp
mov
outsb
iret
mov
adc
in
or
mov
adc
mov
fucomp
bound
outsb
jge
aas
fstl
pushf
lea
push
rol
pop
lea
dec
dec
js
dec
fldt
mov
jb
clc
mov
dec
ret
fsts
sbb
in
jnp
inc
fdivr
loop
add
sbb
ljmp
imul
insb
test
insb
inc
cmp
mov
jle
inc
iret
andb
xchg
xor
inc
divl
push
inc
je
xor
mov
insl
jecxz
sbb
and
mov
scas
sub
test
incb
dec
fstp
mov
outsl
aaa
sbb
adc
inc
xchg
pusha
jg
mov
data16
sarb
xor
adc
push
shll
cld
jb
outsl
add
fisubrs
fbstp
jne
add
push
xor
xor
push
mov
push
sub
pop
gs
cli
sub
ret
sub
xchg
clc
cmp
les
loope
insl
dec
or
push
pop
push
ret
push
fistpll
fnsave
mov
add
sbb
xor
xchg
rcr
and
lods
push
cmp
cltd
filds
in
sti
mov
fidivrl
xchg
gs
mov
pop
stc
inc
push
xor
inc
out
jp
add
lock
int3
push
and
loope
pushf
jnp
sarb
jmp
inc
jg
aaa
add
jbe
mov
push
and
jmp
shlb
add
pop
mov
mov
stos
mov
mov
mov
fs
or
arpl
pop
xchg
pop
pop
stos
ds
lds
push
fdivrs
pop
cmc
test
jle
jp
test
mov
pop
or
das
inc
movsl
pusha
inc
adc
and
mov
jp
lods
shrl
cwtl
sbb
add
pop
xor
inc
popl
dec
lcall
dec
fstp
adc
js
inc
push
inc
ja
pop
testb
push
cli
popa
bound
mov
hlt
inc
div
cmc
fists
out
and
or
in
test
lds
mov
push
icebp
shl
cmp
into
adc
ror
xorb
dec
leave
es
jne
stos
mov
movsl
sbb
add
jae
push
iret
pop
call
lret
push
mov
outsb
mov
lods
and
dec
jmp
fisubs
dec
push
jo
adc
sbb
lock
xor
addl
les
pushf
adc
cmpsb
clc
adc
mov
lahf
int3
xchg
or
pop
dec
pop
mov
xchg
dec
jbe
aad
pusha
jmp
enter
adc
insl
xor
jge
arpl
pop
ja
inc
outsl
or
sbb
fdivrs
jge
jnp
lret
rol
stos
push
mov
orl
imul
mov
test
dec
lret
jnp
pop
imul
sbb
je
pushf
lods
cmpb
loopne
xchg
push
jle
add
stos
add
fmuls
rorl
repz
int3
sbb
jp
xor
and
popa
repnz
test
xor
ljmp
adc
faddl
mov
leave
and
loop
cltd
mov
sbb
popf
ds
lret
icebp
out
out
cli
cmp
out
sbb
cmp
fstl
or
mov
adc
pop
fs
fwait
and
in
cltd
js
aad
scas
xchg
mov
push
or
dec
mov
je
hlt
dec
push
dec
xor
pop
scas
imul
add
cmc
jmp
rorl
jecxz
jnp
mov
fnstcw
jp
aaa
jp
dec
int3
inc
adc
mov
jecxz
mov
adc
loopne
arpl
push
push
in
rcll
pop
mov
cmpsb
outsb
sub
fs
pop
inc
cwtl
out
and
movsb
or
push
add
pop
popf
jnp
xor
mov
jle
mov
scas
popa
outsb
xchg
jl
mov
mov
cmp
push
pop
sbb
out
mov
aam
scas
sbb
inc
rcrb
pop
mov
rorb
mov
insl
adc
or
ljmp
icebp
popa
rolb
jb
mov
aad
add
and
sbb
xor
mov
inc
test
mov
out
adc
shlb
xchg
sti
pop
mov
adc
inc
sbbl
xor
nop
or
cmp
sub
adc
dec
loopne
mov
pop
push
lock
and
scas
test
lock
jbe
and
sahf
xchg
orl
clc
mov
inc
inc
cmp
outsl
mov
ljmp
inc
int3
xchg
mov
rcll
xlat
dec
and
setno
cltd
jmp
ret
xchg
cmp
sbb
mov
and
insl
shll
fimuls
iret
cmp
or
lcall
das
pop
cmp
xchg
pop
stos
out
aaa
aas
insl
rclb
mov
dec
sub
lock
aas
push
sub
pop
loop
ds
xchg
outsl
fcoml
aaa
sub
xchg
xor
pop
std
es
and
cmpsb
stc
mov
jne
insb
xor
xor
mov
sub
mov
or
out
push
xor
xchg
icebp
adc
movsb
loopne
add
stos
out
mov
popa
negl
shl
cmc
pop
jmp
stc
aad
jb
jl
add
pop
xor
rcrb
mov
addl
popa
inc
in
push
jno
sbb
push
cmp
pop
rcrb
pop
bound
sbb
or
and
adc
pusha
push
lds
mull
jp
bound
stc
xor
fucomip
or
std
sbb
add
xchg
xchg
insb
jp
lds
sbb
or
sahf
sub
mov
pop
mov
adc
mov
mov
jge
or
push
sbb
and
xchg
and
negl
aad
pop
or
arpl
lock
or
sbb
ja
jnp
add
les
cmp
xor
xor
mov
stos
mov
jbe
sub
fdivrs
lret
fmull
into
mov
ljmp
cmpsl
push
mov
gs
jmp
imul
mov
xor
push
aaa
xchg
test
dec
inc
pop
pusha
inc
dec
lods
ret
sbb
ret
sub
jnp
cmpsl
xor
loope
push
sbb
decl
jno
mov
nop
shll
jp
inc
push
mov
push
push
jno
push
cmp
jle
clc
pushw
jae
jb
inc
lock
sti
dec
push
in
sbb
into
xor
minps
sahf
daa
xchg
ret
inc
or
enter
sti
enter
add
call
in
popf
outsb
push
mov
rorl
cmp
sbb
call
outsb
ljmp
cmpsb
xchg
inc
fstl
loope
mov
cwtl
outsl
adc
inc
inc
sbb
dec
adc
test
add
adc
pop
movl
add
adc
adc
mov
cli
cmp
fcoml
aaa
outsb
or
mov
push
in
or
dec
je
adc
xchg
fcmovu
inc
rol
push
loope
xchg
fdivs
jp
ret
shrl
ret
push
ficoml
push
mov
xlat
adc
xor
lea
or
test
adcl
inc
push
int
fildl
mov
aam
testl
pop
sbb
rcrb
test
shll
inc
scas
jno
cmp
add
sbb
out
dec
mov
pop
outsb
jne
notb
jne
xor
adc
mov
dec
test
and
mov
pop
std
andl
jnp
pop
mov
mov
mov
xor
int3
dec
out
sbb
fistl
jno
add
fs
mov
loopne
push
mov
inc
mov
push
aam
pop
popf
push
pushf
nop
jns
jp
repnz
sbb
ss
insb
scas
imul
mov
repz
cmp
mov
jl
std
lret
lock
mov
jp
faddp
pop
xor
andl
jmp
cmp
inc
int3
jge
add
and
cmpsb
outsl
push
loop
pusha
sbb
data16
mov
pop
push
mov
xchg
xorl
adc
ljmp
mov
add
push
mov
cmc
jno
clc
shlb
imull
pop
inc
xor
mov
add
loope
in
adc
jp
jg
cmp
dec
nop
inc
roll
aaa
pushf
jo
das
mov
lock
mov
jno
fwait
jne
repz
inc
test
js
call
xchg
pop
fcoms
jae
in
orl
xor
sub
mov
leave
pop
mov
rdpmc
nop
addb
movsl
ljmp
movsl
out
gs
dec
and
pop
negb
adc
rcrb
ljmp
fsubr
loopne
adc
fs
push
push
sarl
loop
add
adc
push
push
dec
aaa
aad
push
adc
xor
test
imul
mov
pusha
dec
mov
inc
mov
mov
xor
shl
xor
mov
dec
xor
js
xorb
inc
inc
inc
jle
pop
stc
or
mov
pop
fs
pushf
jp
ds
and
jnp
and
rcll
rcl
pop
xlat
jl
mov
inc
mov
iret
adc
les
mov
pop
loop
jle
call
pop
inc
adc
mov
and
popf
cltd
fisubl
imul
lock
adc
test
lea
inc
aam
cli
scas
fisttpll
xlat
cmpsb
pop
xchg
jmp
xor
pop
xchg
das
aam
add
add
mov
shl
xchg
jae
xchg
sbb
add
cmpb
lcall
mov
push
lock
testl
inc
push
pop
sbb
pop
pushf
pusha
lods
mov
adc
xchg
push
aad
push
lods
inc
xor
dec
pop
lcall
inc
in
mov
mov
insb
ljmp
mov
ds
inc
outsb
jns
out
inc
les
nop
inc
mov
loop
into
js
lret
push
pusha
stc
dec
in
aad
fdivrl
pop
aas
es
mov
icebp
popa
jmp
cmovno
mov
jp
pop
pop
add
fwait
pop
pop
and
dec
int3
pop
nop
mov
iret
push
dec
or
iret
popl
cmp
negl
leave
lcall
aam
inc
rorl
pop
roll
dec
push
into
or
lods
imul
fcoms
addb
imul
mov
cli
mov
mov
jmp
lods
and
sbb
out
xor
dec
jb
into
andl
mov
les
pop
jmp
mov
loop
jb
enter
mov
scas
xor
jl
jge
push
and
xor
pop
mov
out
inc
jnp
addb
dec
aam
pushf
inc
adc
push
push
les
call
xchg
adcl
rorb
add
push
mov
repnz
xchg
mov
dec
xchg
inc
pushl
popa
out
xor
cmpsl
nop
popa
xchg
rol
sbb
int
inc
cmp
das
push
sbb
insb
std
adc
cmp
mov
inc
mov
leave
pop
xor
notl
jg
test
scas
mov
shr
pop
fists
lahf
xchg
pop
lds
add
jg
adc
mov
pop
add
jecxz
mov
lods
les
jl
lods
pop
fcoms
mov
incb
sbb
cmpsl
xchg
jae
or
pop
sbb
pop
xor
xlat
sub
loopne
scas
cld
inc
pop
enter
ret
or
sub
test
pop
mov
ds
push
aaa
js
and
ret
shrb
mov
or
scas
lahf
lock
xor
test
jg
mov
in
testb
test
and
pop
push
inc
cmp
mov
cmpsb
pop
jne
add
sbb
shl
ret
push
mov
mov
sbb
pop
rcrl
leave
shll
movsw
fstl
insb
push
in
and
lods
or
in
scas
imul
std
mov
dec
aaa
rol
scas
outsb
push
ficomps
inc
jno
sbb
add
pusha
fstpt
icebp
cmp
xor
mov
sub
enter
pop
sbb
addr16
sahf
mov
lahf
xlat
fdivr
rolb
add
inc
sbb
mov
jecxz
pop
dec
call
ds
mov
js
les
adc
fdivr
call
mov
mov
sub
cmp
push
gs
roll
clc
in
jmp
mov
xchg
mov
repnz
pop
hlt
cmpsb
nop
jl
clc
cs
adc
mov
xchg
aaa
loop,pn
mov
xor
pusha
push
test
out
xchg
mov
mov
or
mov
movl
push
jecxz
mov
pop
sbb
sub
and
lods
jg
insl
aam
xlat
mov
and
shrb
stc
stos
or
cmpsb
add
inc
mov
fucomi
cmpsl
adc
sbb
push
addb
jnp
rolb
das
notl
inc
ja
jb
dec
add
ds
mov
inc
mov
std
mov
sbb
sbb
cwtl
sub
out
mov
or
mov
dec
dec
add
and
mov
push
xor
andb
lds
add
scas
arpl
add
mov
movsb
insl
mov
push
and
mov
outsb
mov
add
xor
mov
clc
push
and
negl
or
adc
pop
testl
js
out
pop
jo
xchg
add
popf
pop
adc
inc
mov
lea
enter
jns
inc
std
lods
out
and
stos
cs
jae
lret
add
ffree
lods
inc
cmp
mov
shlb
idivl
and
hlt
push
dec
inc
xchg
cwtl
fwait
adc
clc
fmuls
out
xor
mov
les
jne
cmp
adc
cmp
test
jge
mov
mov
insl
mov
jns
mov
pop
loopne
add
mov
mov
sbb
or
xor
or
sbb
daa
jp
jbe
fists
or
lods
sub
fisubrs
pusha
test
andb
ret
notb
rorl
xchg
xchg
adc
sbb
mov
cmp
fcomp
or
jno
popa
cs
and
jecxz
or
fidivrs
pop
mov
or
dec
scas
ja
push
mov
stos
sti
jnp
push
out
fnstsw
cmp
inc
insb
cld
sar
int
movsb
jmp
inc
repz
fistps
mov
dec
push
imul
lea
or
mov
cli
jg
test
lret
inc
push
jl
loop
pop
inc
icebp
add
clc
push
iret
push
mov
dec
xor
pop
scas
pop
mov
test
cmpsb
test
sbb
push
add
sbb
lcall
xchg
loop
lods
aaa
icebp
mov
and
sbb
pop
jmp
inc
ret
xor
pop
icebp
int
sbb
mov
es
push
mov
fsubrl
jns
mov
adc
jns
and
cmp
add
idivb
adc
and
scas
ljmp
out
jne
mov
divb
and
or
jae
pop
adc
dec
lcall
mov
cmpb
mov
sbb
loop
inc
dec
and
lock
adc
fmulp
push
or
mov
in
or
sbb
dec
stc
cltd
or
stos
movb
iret
sete
cmp
add
inc
inc
jo
movsl
xchg
pusha
fcoms
xchg
in
and
jb
mov
push
sbb
mov
fdivr
add
xor
lea
arpl
cmp
jo
ja
mov
mov
pop
push
add
in
in
sbb
pop
js
adc
les
ja
aaa
xor
sub
and
dec
es
inc
out
or
fstp
and
fcomip
aam
clc
rcrb
jae
lods
je
cmp
add
or
outsb
jmp
andl
or
push
dec
frstor
jne
fstpl
and
pop
inc
xchg
fcmovu
mov
je
inc
xor
fsubrp
int3
and
xchg
repz
mov
xor
dec
dec
mov
pop
jecxz
xchg
xor
adc
loope
mov
dec
cs
test
xchg
ljmp
and
or
cltd
dec
pop
sbb
and
xchg
mov
clc
sub
mov
ljmp
fwait
and
mov
mov
aad
aas
lds
fcompl
mov
add
jge
xlat
adc
out
sub
fmuls
ret
or
aas
mov
mov
int3
or
inc
dec
idiv
movsl
cmpsb
loopne
lock
pop
jbe
gs
pop
lahf
mov
in
dec
loope
icebp
mov
xchg
lock
push
adc
cmpsl
pop
insl
dec
or
push
xchg
and
sbb
or
cld
imul
inc
pop
outsb
inc
cltd
mov
js
dec
adc
lods
mov
imul
in
mov
fisubs
cld
lods
inc
fwait
orb
bound
outsb
xchg
addr16
gs
out
sub
cltd
sub
enter
fdivr
loope
mov
push
gs
add
adc
test
andl
adc
stos
inc
mov
cmp
xlat
mov
push
xor
xor
push
inc
adc
lods
filds
mov
cld
or
mov
aad
orb
adc
sbb
or
cmp
sbb
stc
inc
mov
cld
mov
cmpl
out
in
mov
or
mov
jb
sub
subb
cmp
mov
repz
shrl
adcl
lahf
movsb
pop
test
push
inc
mov
sbb
std
shlb
sbb
int3
icebp
push
push
and
add
mov
jmp
add
jne
or
lock
xor
add
pop
add
and
inc
inc
andl
out
lss
loope
enter
mov
push
cmpsb
push
jge
loop
js
es
filds
scas
jmp
stos
cli
lret
add
mov
inc
inc
pop
push
addr16
lds
mov
pop
mov
adc
jne
lcall
add
sub
mov
pop
cmp
cli
push
mov
xor
lea
movzbl
jne
lods
cmpsl
lock
xor
das
mov
inc
pop
mov
cwtl
mov
xlat
mov
clc
xchg
ficoml
mov
mov
fistpll
fisubs
outsl
mov
add
mov
mov
rclb
push
pop
in
add
stos
mov
fsubrs
fistps
test
mov
loopne
das
scas
push
jae
lock
mov
mov
ret
icebp
sahf
ss
adc
add
cs
test
xor
sahf
cmp
ja
cmp
cmpsl
test
dec
xchg
scas
xor
jge
xchg
push
or
ja
bound
push
or
push
adc
lcall
add
inc
in
stos
pop
mov
insb
daa
insl
inc
push
inc
pop
add
add
xchg
xchg
add
mov
adc
dec
cmc
jo
in
push
call
aas
inc
lcall
or
inc
int3
or
loopne
out
adc
imul
test
fcomip
push
pop
fdivrl
adc
int
outsl
out
call
and
aam
imul
loop
sbb
arpl
imul
fists
dec
test
dec
inc
push
or
mov
les
or
xor
or
sbb
mov
dec
or
ljmp
call
xor
add
enter
dec
bound
lods
movsb
inc
divb
xchg
loope
or
arpl
and
iret
les
je
or
push
mov
clc
add
rolb
pop
jp
inc
dec
inc
cmpsb
add
sbb
inc
mov
shrb
roll
mov
ds
shlb
repnz
mov
imul
das
test
add
inc
hlt
pop
sub
inc
iret
cmp
or
jmp
lcall
andl
dec
ret
jp
mov
jl
inc
jnp
push
fildl
fildl
add
mov
mov
call
and
or
rcl
sub
jns
lahf
mov
mov
mov
movsb
mov
xorb
pop
jo
js
enter
rcll
inc
clc
cmpsl
pop
js
roll
imul
or
push
add
lock
sub
movsl
lods
push
roll
mov
jbe
int3
out
cmp
or
fildl
sbb
mov
push
inc
push
les
jmp
adc
mov
outsb
and
icebp
nop
ljmp
ss
call
xor
adc
add
sbb
lds
sbb
push
ficoms
inc
imul
dec
dec
dec
out
shll
in
sbbb
and
cmc
in
push
loop
test
hlt
es
loopne
pop
pushf
shlb
loopne
jle
mov
lret
cwtl
sub
scas
pop
or
pop
scas
push
inc
sub
xchg
sbb
jge
dec
inc
sbb
mov
inc
sahf
rcrb
insb
mov
push
je
hlt
add
in
cmp
adc
pop
xchg
bound
lds
mov
test
outsb
loope
push
xchg
cwtl
dec
mov
inc
insl
push
js
stos
dec
lds
scas
mov
movsb
repnz
andb
jge
xchg
sbb
into
call
mov
lods
paddusw
bound
mov
les
or
or
mov
mov
loop,pn
shlb
sub
popl
pop
fistps
fidivs
mov
push
push
jo
addr16
arpl
cmp
dec
pop
ljmp
jne
nop
adc
or
aas
pop
pop
out
outsl
cld
or
mov
aas
and
add
pop
adc
ret
fistpl
inc
jl
scas
add
test
sbb
mov
mov
fldt
jmp
sub
enter
lods
jns
jnp
xchg
or
add
mov
movsbl
dec
bound
or
movb
test
mov
jge
ds
cmp
mov
or
or
leave
pop
stos
cmpl
dec
jne
mov
or
rolb
or
hlt
out
mov
in
movsl
vmread
inc
xor
loope
cltd
push
sbb
lcall
push
sbb
and
in
inc
fiadds
inc
movl
jno
cmpsb
adcl
in
aad
pop
sbb
nop
and
sbb
arpl
cmc
inc
out
mov
repz
pop
xchg
and
and
push
fstl
popf
mov
in
sarb
lock
lret
adc
add
test
test
xchg
xor
andl
stos
es
in
sub
scas
hlt
repz
inc
js
mov
mov
jne
movsl
ss
je
hlt
or
inc
xchg
out
jno
bound
cs
shl
aas
dec
jno
std
mov
mov
leave
std
mov
xchg
inc
add
loopne
pusha
lcall
xor
lret
clc
mov
daa
push
inc
inc
call
cmp
dec
add
aas
mov
mov
lock
out
pop
das
add
movsl
sbbb
mov
jp
dec
pop
in
pop
aaa
outsb
or
push
jae
lcall
dec
loopne
xchg
xor
ret
mov
sahf
js
pushf
adc
repnz
inc
nop
loope,pt
out
adc
out
push
mov
incl
cmp
jg
fbstp
xor
out
inc
andl
push
inc
inc
cltd
sbb
notl
cli
push
xor
mov
clc
jmp
or
mov
pop
inc
mov
paddsb
or
push
not
jnp
test
dec
frstor
pop
pop
insl
xor
or
fstps
push
or
adc
adc
out
xchg
fsubrs
dec
inc
int3
push
hlt
xchg
jle
fiadds
outsb
mov
pop
jmp
pop
sti
sbb
push
bound
test
out
aas
lds
pop
call
pusha
push
std
adc
mov
loop
mov
test
out
pop
mov
movsb
pop
cwtl
cmp
fbld
and
lds
jp
cli
outsl
mov
sbb
pusha
xor
in
aad
cmpsl
push
xor
mov
or
mov
dec
lea
or
movb
punpcklwd
jle
mov
out
lea
int
xchg
cmc
out
push
out
fucomi
fists
jbe
ljmp
or
adc
sub
pop
in
jmp
cmp
adc
add
xchg
into
mov
es
adc
mov
jne,pt
cmp
sbb
pop
sbb
push
das
and
xor
out
mov
dec
rcrb
imul
loopne
cwtl
cltd
lahf
jne
mov
addr16
les
push
stc
mov
xchg
mov
ja
loopne
pop
pusha
imul
push
dec
sbb
je
jg
dec
sub
cmc
xor
mov
jb
out
mov
insb
mov
hlt
cmpsl
out
insl
pop
add
cli
fcmovnb
sbb
jle
loope
nop
xchg
or
jge
fnsave
xor
xchg
and
data16
daa
ficompl
jmp
sbb
mov
bound
push
xchg
mov
lods
loope
cmp
add
lock
jae
ss
push
dec
and
mov
mov
sbb
add
cmp
orb
jecxz
push
in
incb
int
mov
cmp
push
aaa
cmp
push
test
arpl
in
int
pop
mov
sub
add
pop
jecxz
xchg
ds
test
loopne
ret
imulb
pop
mov
shlb
int3
insb
daa
js
cld
ljmp
xchg
out
out
cmpsl
scas
fstl
out
inc
pushf
push
mov
jl
arpl
jge
jle
xchg
aaa
adc
je
cmpsb
iret
sahf
xor
add
mov
inc
dec
fmuls
icebp
dec
inc
outsl
test
xchg
xchg
call
lock
dec
imulb
jg
cli
mov
imul
adc
test
cmpsb
push
addb
orl
rcl
push
aas
adc
xchg
push
mov
call
pop
xchg
inc
push
cmp
cmpsl
leave
add
lock
test
loope
js
pop
fbstp
lea
pop
fs
sub
repz
xor
add
push
aas
leave
mov
add
cmp
adc
scas
mov
sti
stc
mov
adc
ja
stos
xchg
orl
mov
jecxz
jl
mov
sbb
fwait
orb
add
lock
inc
jne
xchg
sbb
ljmp
mov
cli
mov
mov
ret
dec
ror
bound
xchg
xor
cmp
cmp
mov
sbb
add
sub
pop
lcall
dec
out
and
pop
cmp
jecxz
loop
sarl
incl
or
imul
daa
nop
js
insl
mov
scas
add
scas
gs
xor
outsl
adc
jg
sti
sbb
mov
aas
cs
popf
ja
adc
gs
icebp
adc
lods
add
test
and
adc
int
ret
mov
iret
cmp
call
lahf
orl
out
mov
pop
or
cwtl
lock
pop
outsb
aaa
xor
lods
mov
mov
sub
xor
mov
add
sbbl
adc
idivb
mov
shrb
stos
mov
sbb
aaa
les
mov
sub
push
les
mov
sbb
clc
jno
into
mov
fstl
mov
xchg
sub
cmp
pop
clc
pop
cmp
or
scas
push
sub
cli
sub
insb
push
pop
pop
decb
cli
repz
rcll
xchg
xchg
adc
xchg
aad
icebp
add
loop
mov
push
ret
std
dec
or
sbb
pop
push
lahf
or
loop
out
popl
loopne
mov
mov
pop
sub
add
xor
cmp
and
or
jno
scas
sarb
mov
scas
mov
loope
xchg
xor
mov
dec
push
js
and
jbe
das
push
int
movsl
cmp
test
in
push
repz
test
sub
int
ret
adc
sbb
xor
bound
mov
cli
dec
pop
cmp
mov
fldenv
push
sbb
enter
dec
and
pop
call
adc
sub
mov
cmp
add
mov
das
push
xlat
inc
mov
push
inc
fisubl
lods
imul
les
in
ss
lock
movl
jle
mov
add
push
dec
mov
test
jnp
sbb
or
mov
jnp
pop
inc
stc
xchg
push
outsl
push
outsl
lret
addl
shlb
stc
jo
dec
or
add
jmp
cmp
sbb
nop
stos
sub
cmp
jbe
pop
adc
jge
and
nop
push
sbbl
sbb
outsl
pushf
mov
sbb
xchg
mov
or
ret
fcomip
pop
mov
aas
adc
pop
pop
mov
adc
outsb
je
jbe
int
dec
mov
adc
shrl
das
pop
mov
sbb
daa
push
mov
lods
mov
hlt
inc
mov
mov
sbb
cmpl
sbb
add
jmp
inc
add
push
push
mov
jmp
jecxz
push
daa
jo
jno
cmpsb
mov
or
jmp
jg
pop
sbb
inc
out
popa
sub
lds
jecxz
mov
push
mov
popf
ret
incl
inc
xchg
cmpsl
fs
sbb
jae
and
out
sbb
daa
or
or
fsts
cmc
add
ret
cld
dec
cmpsb
mov
cwtl
pop
xor
mov
mov
mov
roll
addr16
dec
add
pop
sar
fsubl
pop
jbe
push
mov
mov
sub
das
in
xchg
mov
jo
js
mov
xchg
push
cmp
inc
inc
shll
and
mov
sub
add
xchg
idivl
mov
pop
pop
in
adc
lds
in
aaa
mov
das
sub
add
xchg
mov
xchg
mov
stc
clc
jl
dec
pop
je
push
jecxz
shll
dec
or
pop
cmpb
idiv
sub
addr16
push
push
nop
mov
into
inc
cld
jg
and
aas
pop
jecxz
mov
insl
jl
or
outsb
sahf
jle
stos
idivb
mov
out
add
mov
stos
mov
ds
lret
push
jg
adc
mov
or
inc
sub
mov
adc
movsb
cltd
test
rol
test
mov
out
mov
or
pop
sti
loop
add
xchg
mov
loope
dec
jle
cwtl
sbb
and
dec
loopne
inc
mov
sbbl
imul
pop
adc
cmp
xor
test
cmp
pop
jns
loopne
mov
sbbl
shrb
out
inc
iret
xor
repz
jle
xor
cmp
jo
loopne
sbb
jbe
jnp
mov
std
ret
sub
dec
push
cmpl
insl
inc
dec
pop
int3
movsb
add
cmpsl
jge
test
cmp
stos
adc
arpl
inc
mov
jp
enter
enter
scas
mov
xchg
or
xchg
cwtl
push
add
mov
ds
stos
and
stc
cmp
insl
push
mov
inc
push
ss
pushf
push
jno
es
xor
ret
loopne
add
stc
push
ja
jp
enter
or
adcl
xchg
icebp
pop
test
mov
mov
popa
sarl
and
adc
dec
call
pop
fcompl
aad
pop
outsl
adc
rclb
pusha
fimull
add
cmp
loope
mov
sahf
adc
inc
add
ljmp
roll
fwait
movsl
pusha
and
ret
cmp
test
xlat
xchg
insl
add
jg
dec
sti
jno
sbb
fwait
rclb
pop
fs
add
cmp
or
es
out
aaa
add
jmp
mov
pop
add
mov
mov
ds
mov
mov
xchg
push
push
jg
push
adc
pop
pusha
and
cld
jp
xchg
adcb
mov
dec
aaa
mov
nop
sbb
fcmovnb
add
push
mov
jne
ret
inc
adc
ret
sbb
mov
inc
jge
cmp
xchg
pusha
lret
cli
sbb
iret
sahf
cmp
test
scas
scas
add
sbb
js
pop
mov
dec
lds
add
adc
xor
add
push
inc
cmc
sub
aad
scas
cmp
mov
test
mov
shrl
jl
sub
mov
notb
and
inc
adc
cld
test
sub
cs
mov
jmp
or
pop
xchg
or
fs
push
cmp
std
xchg
pop
pop
push
sbb
sub
mov
pop
dec
add
adcb
jp
aas
jmp
andb
xor
dec
mov
enter
test
movsb
repz
mov
test
outsl
xor
test
sub
mov
or
mov
jge
jne
scas
ds
push
lret
sub
rcll
or
repnz
mov
cli
mov
pop
xor
rolb
cmp
call
clc
mov
and
mull
xor
push
xchg
push
popf
popf
or
mov
outsl
test
inc
outsl
adc
pop
add
xchg
mov
loopne
daa
into
jae
push
adcb
or
shrd
mov
add
imul
inc
bound
mov
test
fildl
mov
jno
mov
mov
mov
cwtl
cwtl
xchg
adc
clc
push
lahf
cmp
into
out
push
inc
mov
out
subb
gs
sbb
jg
mov
iret
repz
adc
popa
mov
loopne
sbb
call
ficompl
fsubrl
push
idivl
mov
lret
push
pop
insl
push
sub
jne
dec
outsl
filds
testl
scas
mov
push
and
mov
xchg
xlat
fdivl
cmp
mov
xchg
shrl
wbinvd
push
sbbl
sarb
iret
idivl
pusha
lods
les
adc
fsubrs
rcl
hlt
or
push
enter
lcall
js
in
xchg
push
inc
aas
mov
jle
xchg
jbe
xchg
sahf
sub
mov
mov
jne
jns
mov
std
rol
add
in
sarb
ljmp
add
jp
xchg
ja
mov
popf
add
sub
or
int3
push
jae
repnz
add
mov
mov
fs
and
ret
push
es
add
sub
repnz
adc
int3
or
int3
pop
mov
fiadds
pop
insl
rclb
cld
pop
add
rorb
inc
fs
and
cmp
add
pop
cli
lahf
sub
aaa
loope
icebp
jmp
add
loope
addb
inc
sti
or
cmp
lret
rcr
pop
cmp
mov
ja
push
mov
fisubrs
cmp
mov
or
fcompl
test
outsl
sbb
loop
aad
pop
or
mov
add
popf
dec
sahf
sbb
jnp
scas
ljmp
mov
dec
fcomps
xchg
or
lea
sahf
or
movsb
cli
adc
in
mov
mov
sbb
pop
adc
insb
enter
pop
lcall
xor
xchg
pop
ret
fwait
xor
inc
andb
adc
push
pop
mov
aaa
xchg
ficompl
fbld
add
jnp
mov
sbb
jecxz
add
dec
or
aam
pushf
mov
mov
jl
movsb
pushaw
jnp
std
jge
pop
hlt
add
daa
mov
aad
les
push
test
arpl
dec
aad
test
adc
aaa
xchg
stos
call
sub
hlt
ja
rorb
das
rcrb
stos
pop
push
sbb
iret
popa
stc
adc
nop
push
add
sub
mov
add
test
cmc
movzwl
sbb
push
sbb
adc
fs
mov
dec
push
pop
mov
mov
mov
fimull
pusha
mov
bnd
sub
out
push
jnp
mov
or
xlat
dec
xor
cmp
aas
rcrb
loop
pop
mov
push
cmp
add
sbb
loop
lret
mov
imul
lods
pop
and
add
mov
sub
dec
es
and
cwtl
or
loopne
lods
or
jp
lods
cmp
push
jmp
adc
cmpsl
ficompl
add
subb
ret
insl
mov
push
popf
inc
xchg
adc
push
outsb
sub
ljmp
xor
out
nop
inc
sub
jmp
xchg
notl
mov
sbb
pop
push
shrl
bound
mov
xor
push
and
xor
cmp
inc
icebp
jbe
pop
stos
jge
pop
repz
ljmp
or
mov
xchg
mov
cmp
jns
stos
je
out
cmp
adc
or
or
call
shl
repnz
decb
jle
mov
shlb
andl
sahf
add
xchg
icebp
rolb
xor
rcll
sbb
shl
int3
test
test
aas
stc
std
adc
mov
add
divl
inc
faddl
mov
adc
dec
mov
mov
ss
mov
adc
fwait
ret
std
stos
push
add
xor
loopne
lods
cmc
jae
cmc
sbb
iret
out
add
and
popa
enter
or
xor
add
push
push
outsb
nop
pop
add
cmpb
cwtl
add
js
xor
inc
push
out
push
or
add
fnstsw
mov
addr16
mov
sbb
lds
repz
pop
xchg
cmp
cmp
xchg
jo
sbb
fcoms
jbe
rcl
add
leave
std
adc
mov
inc
or
hlt
push
or
ljmp
xor
addr16
push
xor
pop
clc
lods
mov
cmp
pop
cmp
mov
addr16
gs
push
lock
pop
outsb
and
loopne
test
stc
std
push
mov
jecxz
aaa
jecxz
pop
jnp
cmpsb
imul
push
test
xor
clc
call
add
les
mov
push
mov
lcall
mov
gs
loopne
adc
sbb
shl
adc
or
icebp
add
ds
push
cwtl
mov
mov
cmpsb
lea
les
sbbb
incb
dec
pop
xchg
adc
inc
fldl
out
cmp
pop
scas
loope
dec
lock
iretw
enter
stos
and
sub
sbb
push
outsb
stos
add
sub
jge
jg
mov
dec
icebp
repnz
ljmp
or
clc
fisubs
rorb
mov
jb
jge
and
sub
pop
adc
xchg
inc
cmp
in
fidivrl
add
popa
enter
loopne
and
out
adc
xor
pop
hlt
cmp
dec
scas
inc
pop
mov
xor
inc
inc
jl
out
jmp
mov
gs
sbb
add
pop
adc
mov
pop
cli
adc
push
add
or
out
dec
ja
clc
sbb
sbb
clc
std
rcrb
out
out
fcompl
xor
std
out
mov
sbb
repz
mov
adc
and
sbb
cmp
fwait
pusha
adc
xor
cmp
inc
add
mov
andb
sub
adc
mov
mov
mov
data16
mov
sar
shlb
adc
fildl
ret
outsl
jge
into
add
fsubrs
jl
lret
ror
outsl
jae
sbb
ret
fistpl
shlb
xor
sti
outsl
out
int3
adc
bound
push
je
cltd
cmp
ja
push
adc
stc
cltd
les
stos
loop
loope
les
test
xchg
in
aaa
cwtl
ja
adc
jg
cwtl
mov
inc
sbb
adc
adc
or
rclb
sub
icebp
les
xchg
divl
or
mov
xchg
mov
or
fildl
lret
and
das
push
mov
dec
push
sbb
mov
cmp
jmp
sub
or
mov
push
adc
jg
cmp
jbe
and
out
and
cmpsb
inc
sbb
bt
or
es
mov
push
into
ret
and
push
jmp
dec
pushf
call
int
jl
jmp
sub
in
mov
mov
pop
movups
sub
testl
sbb
inc
hlt
mov
fstpl
inc
and
scas
mov
adc
aas
out
pusha
fidivrs
sahf
cmp
incl
je
xchg
cld
stos
mov
in
xchg
or
lcall
decl
sbb
les
nop
xlat
pop
pusha
adc
add
jmp
inc
incb
adc
pop
std
push
pop
int
pop
popf
and
hlt
mov
mov
pop
and
mov
data16
pop
imul
jnp
inc
imul
mov
pop
push
mov
addr16
mov
aad
daa
fs
fcoms
push
mov
je
in
xchg
xor
jg
insb
dec
imull
xorb
loop
lods
add
gs
xchg
xchg
cltd
dec
mov
or
lock
test
call
pop
lahf
fisubl
jno
cmpsl
mov
clc
pop
mov
pop
pop
xor
xchg
cmpb
insl
cmpsb
jae
rcrb
in
pop
and
jb
arpl
cs
sub
mov
notl
push
add
es
loope
lahf
fs
xchg
add
aaa
jl
jne
pop
out
inc
pop
sub
jo
aam
sub
filds
add
mov
xlat
nop
sarl
daa
movzwl
stos
stc
push
sbb
or
subb
pop
aam
call
or
dec
add
rolb
add
andl
push
daa
push
push
add
inc
jnp
sbbb
mov
addb
push
sub
and
or
xlat
fstl
popa
jmp
lea
cld
in
mov
add
shrb
and
and
insl
pop
lock
test
pop
lcall
test
lods
mov
sub
lods
das
mov
aas
pop
jl
sti
jmp
inc
dec
push
and
sub
add
movsl
mov
xchg
inc
test
shl
inc
pop
and
std
stos
nop
sub
dec
mov
js
outsb
jge
sub
add
orl
insl
push
cmp
lods
lahf
out
imul
cld
mov
pusha
cli
adc
jmp
xor
mov
in
mov
test
iret
add
pop
dec
das
cmpsl
dec
xchg
imul
sbb
lret
mov
xlat
jae
ss
cmp
test
aam
mov
shl
lock
addb
add
js
xchg
mov
and
mov
push
stos
dec
mov
jl
loopne
sbb
mov
das
fisubs
dec
inc
mov
dec
inc
and
inc
cmpsb
inc
cld
inc
out
cmp
inc
jnp
sahf
and
adc
mov
add
adc
fs
mov
or
jg
fcompl
adc
cld
mov
sbb
push
mov
jno
cmc
jnp
push
dec
jo
and
shrl
xor
sub
repz
inc
pop
pop
mov
inc
mov
rcl
inc
daa
mov
pop
outsb
jg
sub
pop
jl
and
add
inc
mov
dec
dec
aas
std
dec
mov
insl
dec
add
test
ja
mov
mov
lock
mov
mov
lret
mov
or
gs
sbb
xor
nop
cmp
stc
sub
mov
insl
inc
mov
cld
sbb
sbb
fsubs
sub
jl
sbb
bound
inc
cld
sbb
pop
xchg
sub
into
sub
loopne
loope
scas
mov
adc
sbb
adc
gs
out
xchg
lea
stos
mov
addl
and
loopne
xchg
and
out
nop
aas
aam
pop
pop
shll
sbb
out
and
stc
in
push
rolb
hlt
test
pop
insb
decl
enter
add
dec
scas
lea
mov
mov
mov
ret
mov
jns
punpcklbw
push
mov
loope
inc
dec
pop
and
shlb
lret
addb
out
xchg
sbb
hlt
inc
mov
mov
or
icebp
enter
mov
fnsave
rolb
dec
adcl
ret
outsl
mov
jl
push
jge
push
out
int3
and
loope
push
jg
je
cmp
gs
xchg
mov
push
fisttps
stos
add
sub
pop
pop
pop
sub
pusha
pusha
rorb
xor
mov
inc
jge
mov
cmp
cwtl
lods
fisubl
adc
ss
and
dec
sbb
jl
jnp
pop
mov
xor
int
pop
adc
shr
adc
cmp
jmp
addl
adc
bound
movsl
add
sbb
cmp
fnstcw
sub
rcrl
sub
orl
idivl
pop
inc
cwtl
test
cltd
mov
xchg
sbb
popa
insl
arpl
dec
mov
adc
adc
loop
mov
popf
pop
lds
pushl
dec
test
adc
xchg
and
push
jns
je
jmp
pop
pop
popa
xchg
flds
jb
add
in
outsl
enter
xchg
xor
jnp
loopne
cmp
push
addr16
das
aas
add
adc
cmc
icebp
and
xchg
push
cmpsb
mov
repnz
fsubrp
inc
mov
in
jo
lods
in
fcomip
and
add
add
xor
lea
icebp
sahf
icebp
mov
pusha
lea
add
jg
iret
icebp
fimull
mov
test
mov
sub
jl
cmpb
mov
aad
dec
and
call
mov
out
ljmp
push
mov
ds
or
mov
or
jecxz
in
and
xchg
or
xor
cmpsb
lods
sub
into
insl
add
imul
lods
xchg
push
das
or
cwtl
inc
cmp
add
or
fisttpl
int3
es
in
mov
sub
ljmp
add
in
push
popf
stos
das
cmp
das
js
xchg
and
out
or
mov
xor
jmp
js
sbb
mov
mov
sub
add
cs
push
lds
and
std
in
sbb
pop
jae
xchg
mov
mov
mov
dec
add
push
pop
inc
punpckhdq
cmpsl
add
aam
es
pop
js
aad
mov
enter
loop
test
jns
push
push
repz
jmp
addb
int3
jecxz
xor
lock
stc
popa
call
inc
adc
ret
enter
cmp
and
adc
mov
dec
icebp
scas
cmp
push
push
sub
mov
add
sub
lret
mov
loopne
sbb
xor
mov
in
aam
aad
ret
sbb
jns
lods
cmp
cmp
stos
mov
sub
xchg
in
mov
add
mov
outsb
out
cs
hlt
and
sti
xchg
in
test
subb
sub
push
xorb
mov
fwait
sti
shll
pop
sbb
inc
les
rcll
insb
or
sbb
out
js
jae
repz
lahf
leave
inc
push
add
mov
movsl
pop
cli
pop
enter
les
imul
jecxz
aaa
ss
in
cmp
sub
dec
xor
or
and
adc
rorb
mov
lea
out
pop
sub
sti
mov
loope
mov
aaa
lock
xor
jno
lcall
jecxz
arpl
pop
stos
icebp
scas
or
and
pop
mov
arpl
fidivl
dec
pop
mov
mov
daa
ss
int
or
cmpl
mov
daa
jg
clc
aaa
adc
add
pop
push
mov
scas
add
sub
sub
inc
and
sarl
mov
pushf
icebp
push
cmc
shrb
scas
cmp
sbb
inc
sub
roll
adc
and
cmpb
shrl
jecxz
dec
adc
pop
mov
je
cmpsb
sub
rcrl
sbb
scas
lods
icebp
cli
ss
fldl
stos
mov
fstps
push
xor
lret
sub
mov
jae
xor
mov
sbb
clc
pop
std
ja
orb
pushf
push
inc
testl
pop
pop
and
and
xor
lea
test
cmpb
xor
cmp
mov
adcb
bound
add
push
test
dec
call
jmp
xchg
sub
xor
cmp
add
jg
ret
xor
mov
mov
lds
or
adc
inc
cmp
lds
test
push
gs
fadd
call
jns
sub
pop
movsl
jl
cmp
jle
or
fsubr
shll
icebp
pop
pusha
add
or
std
inc
cmp
loope
movl
pushf
adc
in
out
mov
aaa
test
jmp
test
push
fcom
lods
loopne
call
es
push
notb
mov
sahf
add
jne
out
dec
insl
add
and
xor
jbe
jo
sub
test
addl
bound
jp
les
std
or
pushf
test
mov
push
or
adc
nop
jno
jge
test
scas
lahf
outsb
jae
xlat
orl
outsb
pop
cs
jo
and
xchg
das
loop
movsl
sbb
push
push
xchg
adcl
push
push
mov
leave
mov
xchg
enter
imul
lds
xor
jl
andb
dec
cmc
orb
dec
sbb
sub
sbb
jae
sub
pop
xor
call
mov
leave
rol
ret
mov
cmpb
inc
ret
dec
hlt
lea
inc
push
dec
loopne
lock
ret
mov
movsb
mov
call
mov
cmc
xchg
outsl
cld
sbb
out
aad
sbb
outsl
sub
addb
into
ja
mov
sbb
daa
shll
dec
testb
nop
lret
daa
call
add
pop
jmp
out
mov
dec
mov
fs
jecxz
push
push
adc
push
jp
orb
cmp
push
mov
std
push
fbstp
pushf
jo
lock
dec
push
fnsave
je
stos
cmp
scas
stos
scas
clc
mov
mov
mov
rcll
sbbb
js
push
push
les
cltd
xchg
jbe
inc
loop
dec
push
sbb
rolb
mov
fildl
or
frstor
rol
es
clc
gs
push
mov
push
fsubrs
dec
mov
inc
sub
roll
enter
sub
push
add
rorb
jb
mov
fidivrl
fs
xor
inc
sub
ss
adc
pop
xor
mov
test
rol
or
adc
cmp
add
outsb
push
sub
jne
ret
pop
clc
ja
mov
popa
inc
lcall
test
into
rorb
lahf
and
les
sub
lret
add
pop
jecxz
xchg
and
div
add
dec
push
into
mov
sti
mov
and
imul
outsb
inc
stos
lds
pop
cmp
dec
cld
pop
push
cmp
dec
js
jecxz
mov
mov
enter
loopne
and
sbb
in
dec
fstl
mov
jno
or
fcmovu
in
pop
mov
cmp
inc
fstpt
fidivrs
loopne
or
mov
out
das
cmp
push
adc
fisttpl
imul
sbbl
cmp
jmp
and
call
fstpl
or
and
cmp
dec
popf
in
inc
inc
icebp
jp
shlb
jae
push
push
mov
xor
inc
sbbl
mov
mov
sbb
mov
and
xchg
sbb
adc
fbld
or
fldcw
cli
add
stos
push
sarb
dec
sub
rclb
inc
push
imul
xor
add
sbb
cmp
xchg
inc
pop
clc
pop
mov
dec
push
xor
adc
pop
inc
push
xchg
mov
pop
push
lods
bound
imul
xor
sbb
aaa
addl
pop
pop
inc
push
loope
rcrb
add
lds
lahf
rol
mov
pop
sbb
fstpt
ret
icebp
push
cmc
pop
sbb
cltd
outsb
loopne
aaa
into
xchg
enter
sub
dec
inc
mov
test
pop
cwtl
jno
lock
repnz
and
and
sbb
fs
xchg
das
sahf
subb
jecxz
aad
inc
cmp
test
mov
test
pop
sti
insl
in
xchg
iret
iret
pop
daa
je
rorb
inc
xchg
rol
mov
imulb
jecxz
inc
in
insb
iret
mov
test
xchg
inc
and
adc
fcoms
adc
adc
pop
push
add
lock
pop
jbe
mov
push
movsl
arpl
mov
shr
pop
inc
xor
add
movb
push
push
pop
pop
stos
ja
rolb
mov
inc
sub
aad
in
cli
and
xchg
ljmp
adc
and
jbe
scas
pop
cmpsb
pop
adc
and
test
fimull
cmp
fimuls
pop
push
mov
dec
add
je
mov
fs
data16
fistpl
sub
inc
mov
cltd
test
lret
xchg
mov
lcall
call
ja
stc
cmpb
xchg
push
dec
mov
sbb
repz
mov
pop
xchg
cmpsb
aas
mov
jns
cmpsb
test
mov
imul
jecxz
jne
jl
cmp
sub
mov
mov
xlat
stos
divl
pusha
sub
sbb
cli
inc
mov
add
arpl
push
dec
pop
sub
jno
adc
rolb
addl
sub
mov
and
mov
sub
movsl
or
mov
and
adc
xor
int
jbe
adc
push
and
fwait
and
and
xor
mov
add
outsb
and
or
iret
adc
push
pop
adc
and
inc
dec
addb
xor
andl
or
lods
mov
aaa
mov
outsb
sub
pop
or
jns
jo
dec
push
iret
dec
and
mov
and
aam
jmp
push
add
jns
push
popa
dec
push
mov
insl
sti
das
loop
gs
jne
js
or
or
jno
dec
dec
dec
dec
push
inc
inc
dec
push
dec
dec
dec
push
imul
insb
insb
push
inc
fcmovnu
outsl
arpl
inc
in
pop
xor
push
xchg
pop
xchg
mov
imul
inc
outsb
imul
xchg
jnp
inc
inc
push
dec
pop
popa
stos
jle
and
ret
and
or
cs
mov
ja
push
xor
xor
jb
fdivr
xor
or
jae
jmp
or
jae
shlb
dec
outsb
push
push
jo
push
push
outsl
inc
inc
and
pusha
jnp
mov
lcall
jl
mov
jmp
subb
pop
jp
mov
imul
fs
pop
cmp
add
mov
mov
and
mov
mov
aaa
xor
xor
push
push
insb
ret
faddl
or
pop
add
fwait
imul
rolb
ret
out
push
adc
addl
mov
push
xchg
push
cmp
mov
lods
cmp
add
add
xchg
jge
dec
je
inc
mov
jo
xor
xchg
add
push
mov
test
mov
add
arpl
xor
stos
push
popa
dec
push
mov
dec
mov
insl
scas
push
xorb
push
and
imul
rolb
mov
sti
add
jmp
pop
cmp
sbb
clc
add
aad
add
lods
adc
dec
subl
and
mov
test
mov
stos
inc
inc
add
out
cwtl
lcall
fidivs
or
dec
inc
xor
fwait
ret
xor
pop
add
jbe
jae
insl
lods
jp
popa
add
sbb
out
aas
push
subb
insl
push
pop
pop
mov
push
mov
sahf
ret
arpl
jge
wrmsr
or
sub
les
xor
mov
mov
sub
popf
ss
test
xor
jp
adc
iret
cmp
mov
push
les
dec
lock
xor
cmp
orl
push
inc
insb
inc
jnp
int
aas
int
mov
mov
xchg
jg
enter
out
xor
sbb
subl
roll
inc
dec
pop
dec
push
dec
push
push
dec
dec
push
inc
xor
xor
je
mov
jg
loopne
bound
dec
dec
add
sbb
sbb
xchg
add
adc
add
adc
inc
inc
add
add
add
fs
icebp
ljmp
or
je
adc
insb
imul
pop
decl
inc
ret
shll
cs
imul
adc
into
pop
imul
filds
aad
sbb
hlt
dec
sub
xchg
mov
imul
jg
shl
imul
mov
sub
fcoml
sbb
mov
mov
add
mov
sbb
sbb
mov
mov
and
or
inc
adc
pop
and
imul
jne
ljmp
xor
imul
out
sbb
add
out
imul
ret
fistpl
adc
adc
aaa
jl
imul
add
call
sub
ljmp
mov
and
push
xor
lods
movsl
lret
arpl
mov
fbstp
xchg
imul
push
cli
iret
jb
sub
or
inc
adc
or
adc
adc
push
push
pop
jo
add
mov
or
outsl
mov
sti
pop
popa
rol
inc
push
xchg
out
inc
int3
nop
mov
call
mov
stos
and
imul
xchg
ja
sbb
outsl
pop
mov
imul
imul
and
jmp
add
je
nop
fwait
popa
jle
cmp
sub
mov
mov
inc
sub
xor
jne
or
bound
and
lds
scas
ds
push
pop
ljmp
xchg
lods
add
jb
add
leave
inc
mov
call
fisubrl
adc
mov
push
lock
filds
inc
mov
cld
inc
xor
sub
imul
lea
adc
fadds
gs
xchg
and
imul
add
daa
sti
mov
jge
adc
outsl
in
imul
mov
sbb
imul
daa
dec
dec
out
add
sub
pop
add
lret
mov
sub
push
push
icebp
add
mov
push
or
xor
or
inc
dec
add
lea
pop
cmc
cmc
mov
stos
pop
or
push
add
imul
lock
jmp
push
lret
push
iret
imul
imul
sbb
inc
daa
xchg
lahf
mov
sbb
cmpsb
out
adc
int
loope
pop
push
mov
add
or
jg
imul
push
pop
dec
bound
in
mov
repnz
mov
or
jne
adc
mov
or
mov
add
loop
jecxz
aaa
sbb
and
mov
nop
pop
add
es
xor
xchg
movsl
fimuls
ja
mov
jbe
out
rolb
in
std
in
mov
inc
loopne
xor
or
mov
andb
mov
push
cmpsb
dec
decl
mov
push
cli
jbe
mov
push
or
sub
sub
insl
inc
mov
jb
pop
clc
or
pop
or
xchg
fidivs
inc
mov
mov
dec
adc
pop
adc
fildll
rorb
jmp
add
jg
inc
rcrb
mov
mov
inc
xchg
stos
or
nop
jmp
push
jno
ficoms
mov
dec
mov
cmp
pop
sahf
inc
ret
inc
loope
lods
imul
mov
jo
mov
fnstcw
add
outsl
sub
scas
sub
imulb
stos
add
pop
push
push
fmull
repnz
fimull
stos
lret
das
stos
pop
push
pop
mov
das
ret
stc
nop
icebp
mov
sub
push
rcrl
sbb
gs
movsb
mov
mov
sub
or
inc
fidivrl
fidivl
andb
mov
fcomi
insl
jecxz
rclb
push
lods
loope
lret
sbb
cmc
scas
cmp
ljmp
xchg
pop
jmp
mov
or
ss
and
fildl
cmpsb
xchg
insl
jecxz
cwtl
cmpb
fistpll
aad
inc
or
mov
es
jnp
cmp
pop
hlt
fistpll
pop
lret
sbb
cmpsb
and
sub
test
add
lods
adc
sub
jecxz
cmc
adc
mov
mov
out
in
mov
lods
inc
push
clc
fbstp
and
imul
je
push
imul
mov
fsts
sbb
inc
icebp
aam
adc
sahf
xor
add
outsb
pop
clc
jb
daa
test
ljmp
je
sub
icebp
aam
xor
push
ror
mov
clc
lahf
fiaddl
add
mov
cmp
in
ja
ja
lea
jle
and
in
jge
mov
imul
adc
cmpsb
add
loop
decl
add
sbbb
sbb
orl
sbb
sbb
pop
pop
push
frstor
ret
adc
lcall
jbe
lock
hlt
mov
cmp
mov
pop
pushf
pop
xor
sbb
cmp
mov
sbb
adc
cmpsb
or
push
rcrb
pop
fldt
push
or
mov
les
push
ficomps
pop
fistpll
xchg
dec
mov
loopnew
movsb
cmp
mov
mov
shrb
cmp
xchg
pushl
pop
sbb
add
popf
or
and
inc
or
mov
popl
stc
or
fimull
lock
mov
shrb
xchg
fidivrs
xor
push
hlt
int3
and
aam
lcall
push
and
jmp
inc
xor
lcall
js
cmc
repnz
notl
push
mov
sahf
lret
loopne
out
inc
orb
xlat
mov
ret
and
mov
jnp
lahf
jne
out
pop
jle
sub
add
add
dec
sub
add
ljmp
lods
dec
or
pop
lcall
aaa
mov
mov
and
mov
imul
shl
loopne
cmp
mov
ret
fwait
or
mov
imul
mov
repz
sub
dec
pop
lret
push
js
or
popf
pop
pop
clc
fnstcw
sti
xor
inc
mov
mov
cmp
mov
xchg
ljmp
roll
es
fbstp
fprem
jge
inc
sub
fldenv
pop
clc
jb
mov
jb
sbb
ja
mov
cs
pusha
dec
pop
mov
sub
hlt
aaa
inc
addb
loopne
sbb
add
sub
addb
cli
jbe
mov
and
inc
dec
out
bound
call
pop
subb
mov
mov
sarb
mov
cmp
divb
movsb
or
loop
fldl
leave
int3
imull
mov
cmp
adc
add
sbb
outsb
or
loope
pushf
mov
add
dec
xchg
adc
ds
pusha
jg
jecxz
cmp
clc
sub
xchg
adc
mov
add
sbb
xor
test
mov
jle
mov
jmp
mov
aas
add
inc
and
insl
fld
in
call
push
je
cwtl
sti
cmp
mov
dec
and
jg
popa
aam
mov
push
cmpsb
nop
push
jne
ret
push
int
movsl
leave
fmul
adc
test
sbb
mov
lahf
push
adc
test
sub
xor
pop
imulb
mov
mov
shrb
testb
dec
sub
sti
xchg
add
push
pop
push
int
negl
sub
and
repnz
jecxz
sbbl
das
push
push
mov
sbb
inc
out
jo
sbb
pop
pop
adc
das
aam
or
xor
mov
xorb
jae
mov
push
addb
dec
data16
dec
rcrl
jg
mov
les
inc
sarl
jg
mov
js
movl
mov
jge
pop
adc
nop
inc
mov
sbb
cmpl
ss
adc
stc
xor
pop
mov
cmp
dec
add
jle
mov
movsl
or
jecxz
cmp
pop
add
push
add
push
mov
sbb
scas
cli
nop
pop
adc
cmp
loop
std
pop
ja
inc
jns
ficomps
cmc
mov
std
jge
fistl
pop
mov
es
stc
test
jp
pop
out
sub
sbb
cmpsb
popf
mov
mov
lcall
cmp
cmp
loop
mov
xor
mov
aas
sbb
and
sbb
mov
xlat
push
xchg
ljmp
fwait
sbb
call
pop
aad
mov
insl
sbb
or
mov
mov
xor
pop
ret
xchg
clc
insl
pop
add
push
sahf
insl
or
cmp
fadd
mov
or
dec
push
mov
js
jbe
push
pop
repnz
iret
rclb
xchg
mov
lret
cmc
outsl
mov
or
adc
sub
addl
pop
mov
sbb
and
imulb
dec
dec
jl
cmpsl
add
loope
jbe
mov
jmp
stc
push
mov
outsl
pop
test
ds
xor
mov
fbstp
add
daa
test
jmp
mov
or
ret
mov
dec
sahf
add
aad
push
sbb
outsl
mov
inc
pop
scas
int3
cmp
sub
and
insb
loope
adc
data16
mov
dec
pop
push
mov
out
mov
loope
fisttpl
dec
mov
mov
lahf
cmp
push
jb
outsb
fcomi
popa
cltd
push
jmp
aas
mov
inc
gs
imul
and
adcl
ror
pusha
sub
cmpsb
sub
mov
loope
mov
add
mov
outsb
das
mov
and
jae
test
push
push
in
pop
mov
push
inc
pop
pop
fsubr
mov
int3
cmp
nop
sti
lret
aad
adc
sub
jge
sbb
adc
je
stc
cmp
xchg
pop
sub
fstpt
fistpll
xchg
add
aaa
jecxz
aaa
out
lcall
inc
aas
in
sbbb
jmp
pmuludq
mov
dec
insl
call
sbb
hlt
repz
sbb
out
mov
and
dec
fstpt
or
lret
sbb
test
adc
fstps
mov
jg
or
xor
js
addr16
sub
xor
mov
arpl
push
ljmp
mov
jp
notb
dec
adcb
xchg
dec
or
pop
rcr
or
pusha
mov
add
xchg
es
aas
fsubrs
mov
cmp
repnz
mov
aad
nop
and
orl
insb
test
inc
sbb
or
push
or
inc
mov
arpl
and
adc
adc
mov
jle
lcall
mov
cmc
mov
fildl
lds
repz
dec
fiadds
inc
pop
mov
dec
xor
testb
jo
fimuls
add
mov
scas
pop
pop
call
mov
in
push
adc
iret
call
inc
inc
test
xor
jo
js
mov
in
fisttps
and
xchg
outsl
cwtl
pop
xchg
divl
sbb
cs
out
in
inc
push
mov
inc
pushf
add
xor
mov
cmpl
dec
mov
insl
fstpt
push
sub
and
or
orb
push
mov
mov
popf
inc
ret
in
pop
jmp
ret
jmp
xchg
sbb
sar
and
imul
inc
outsl
aaa
mov
inc
add
mov
popf
into
and
pusha
mov
push
jmp
nop
jecxz
mov
ret
fdivrp
push
adcl
mov
inc
call
xor
shll
mov
addr16
sbb
add
in
and
addr16
mov
insl
mov
fcmovb
cmp
fs
mov
mov
sub
cmpsb
mov
cmpsb
arpl
pop
push
sub
ds
and
lock
add
inc
xchg
outsl
dec
into
mov
gs
roll
aaa
rorl
cmpsl
inc
popf
mov
jg
movsb
inc
hlt
cmp
into
cmp
or
lods
cltd
lods
shl
aad
insb
mov
or
mov
dec
sbbb
jge
cmpsl
add
cwtl
clc
bound
xor
xchg
fisttpl
cmp
out
fucomi
fs
outsl
pop
mov
addl
xchg
sub
jle,pn
gs
movsb
mov
lcall
mov
cwtl
aad
std
sub
pushf
xchg
int3
push
stos
mov
push
pop
adc
scas
fisubrs
push
jl
std
and
imul
mov
mov
sbb
fcmovnu
pop
das
cmc
test
cmp
mov
clc
pop
jge
je
stc
xor
gs
andb
add
jmp
adc
mov
imul
push
cs
jge
arpl
imul
movb
cmc
test
and
icebp
data16
pop
cmc
fadds
call
adc
pop
add
arpl
outsl
std
test
or
mov
loope
test
repz
xor
add
add
mul
add
mov
je
fildl
xchg
dec
mov
mov
and
les
and
or
je
pop
aad
fcmovb
out
mov
pushl
pop
sbb
cmp
and
inc
outsl
pop
and
sub
inc
dec
das
or
repz
icebp
xchg
mov
ret
ja
test
push
ss
outsb
inc
and
or
lcall
xlat
aaa
sub
repz
testb
push
mov
sar
cmp
and
ss
insl
stos
lds
ds
mov
sbb
lock
js
ljmp
arpl
pop
std
inc
movsl
push
xchg
push
movsl
or
js
xchg
popfw
or
scas
inc
arpl
push
mov
jecxz
cmp
inc
add
outsb
rorb
sbb
inc
insl
jg
cmp
das
cmp
movsb
mov
rclb
adc
fistpll
stos
icebp
and
ret
cwtl
xor
jmp
or
aaa
repnz
ja
outsb
mov
push
lds
lret
mov
fst
into
in
imul
cmp
das
insb
aaa
cs
test
pop
push
stos
and
sti
or
insl
pop
mov
xchg
leave
mov
nop
or
imul
add
jo
jae
fucomi
pop
test
sub
testl
mov
push
push
and
mov
daa
or
sti
cmp
cld
mov
or
sbb
sbb
xchg
pop
movsl
mov
test
cmp
lret
jmp
mov
in
icebp
mov
pushf
mov
cmpl
in
data16
insb
mov
mov
sarb
cs
sub
push
push
sbb
push
xor
sarb
dec
js
mov
xorb
lods
dec
mov
cmc
jbe
aad
out
aaa
mov
push
pop
mov
or
fucomi
add
rcr
mov
add
shl
mov
loope
adc
inc
das
xor
sbb
push
sbb
jp
call
dec
adc
mov
push
mov
mov
push
xlat
lea
or
jl
cli
out
ja
enter
lcall
nop
xor
jle
mov
jl
and
push
testl
in
ja
adc
loope
mov
inc
or
cmp
or
sub
adc
xlat
test
inc
jmp
roll
jl
pop
rcrb
pop
mov
imul
cs
arpl
and
insb
lods
stos
sbb
enter
adc
or
loopne
call
sbb
xchg
push
inc
mov
js
es
xlat
or
or
inc
fisubs
xchg
fldl
add
push
jne
sbb
lea
les
dec
outsl
test
xchg
inc
addr16
adc
lods
xor
icebp
or
adc
fs
ds
mov
lcall
outsl
or
inc
push
jnp
aaa
jecxz
les
out
sbb
es
popa
pop
pop
hlt
test
pusha
mov
out
add
push
outsb
fdivrs
sub
push
fstl
ja
dec
jle
and
pop
sub
jmp
lods
or
xor
adc
jge
ljmp
test
aaa
xchg
mov
cs
popa
cmpsl
inc
orl
inc
in
test
cld
in
fistps
cwtl
adc
push
pop
mov
mov
and
mov
loope
mov
roll
int
popa
mov
mov
push
jmp
std
mov
push
xor
nop
cmp
std
mov
push
insb
push
inc
pop
sub
dec
sub
cs
pop
mov
popf
pop
add
ficomps
ret
push
dec
or
xorb
jmp
fisttpl
or
cmp
ret
cwtl
push
out
adc
sub
inc
push
jmp
adc
add
pop
jnp
add
sub
sbb
fcompl
cmp
in
addr16
outsl
call
push
inc
fists
or
inc
repnz
xor
fdivrl
test
push
insl
repz
mov
mov
lock
xchg
and
jns
push
xchg
inc
xchg
or
jns
scas
aaa
je
cmc
cmp
xchg
std
pop
inc
sub
or
push
cmpb
aaa
std
test
shlb
scas
fiaddl
mov
scas
push
and
or
or
mov
adc
imul
hlt
or
inc
jns
movsl
xor
aas
std
xchg
adc
and
mov
pop
xorl
or
pop
fwait
loopne
adc
dec
mov
dec
xor
in
imulb
xchg
mov
stos
dec
and
test
sahf
push
mov
sti
pop
pop
mov
loope
push
lods
xchg
push
mov
in
fstpl
shr
jecxz
and
lds
lds
and
ffree
es
hlt
int
das
lods
test
add
adc
pop
mov
loopne
call
pop
and
data16
mov
fcoml
outsl
out
leave
clc
push
imul
popf
hlt
ljmp
iret
adc
sub
aad
sbb
and
inc
fnstenvs
jo
jo
push
incb
cltd
leave
inc
aas
and
jns
and
mov
xlat
outsb
bound
or
outsb
fisubl
clc
popa
jbe
pop
push
out
pop
roll
xchg
or
inc
pop
or
mov
mov
xchg
mov
aad
sbb
jnp
mov
lock
xor
lcall
cltd
sub
loopne
lahf
adc
test
adc
clc
loopne
lcall
shrb
das
idivl
sbb
and
push
sbb
std
jno
fsubrl
mov
cwtl
cmpsb
dec
add
add
aam
jg
or
std
jne
xchg
pop
fistpl
mov
push
pop
and
fiadds
test
jp
lahf
mov
inc
jb
aaa
jno
lret
in
std
xor
cmc
or
jge
test
mov
lcall
adc
jge
adc
ret
cmp
std
push
std
cmpsb
dec
repz
lret
cmpsl
lahf
xchg
mov
popa
popa
push
fbstp
scas
sub
test
mov
xchg
or
clc
ja
es
lds
fnstsw
clc
jo
insl
mov
fcomi
dec
and
shrl
cmpsb
jg
data16
and
dec
aaa
jb
pop
out
call
jl
pop
sub
je
mov
nopl
pop
in
insl
fdivr
das
gs
and
imul
mov
pop
mov
inc
and
dec
and
outsl
xchg
sub
and
push
mov
imul
outsl
mov
ret
les
xchg
mov
stos
in
movsb
lods
into
push
test
adc
fdivrs
ja
scas
or
xor
subb
push
push
je
sub
push
cmp
hlt
out
add
dec
aam
movsb
test
loope
sbb
mov
mov
mov
dec
jge
cmpb
movsl
fwait
lea
movw
xchg
popa
fidivrl
mov
sbb
or
add
and
sbb
aad
test
in
xor
scas
cltd
addr16
push
mov
out
push
dec
mov
hlt
stos
cwtl
cmp
std
lcall
xor
adc
xchg
xchg
or
add
pop
bound
sbb
jge
adc
jno
jle
pop
mov
sbb
push
push
and
movsb
lods
pop
adc
out
das
mov
xor
stos
dec
and
cli
fisttpll
mov
sbb
xchg
cld
and
shlb
add
dec
ljmp
or
or
loope
insb
jae
dec
loope
mov
aaa
push
lcall
add
mov
mov
in
and
loope
jo
mov
faddl
pop
push
dec
push
das
insb
mov
movsl
inc
mov
out
mov
pop
dec
fcmovnbe
dec
push
sub
ret
jbe
ret
ljmp
add
jecxz
sbb
and
add
andb
pop
arpl
int
pcmpgtd
js
hlt
pop
xchg
adc
push
inc
out
mov
out
out
aad
fdivrs
fnstsw
loopne
jnp
aas
addl
ljmp
sbb
aaa
xlat
pop
fstpl
and
hlt
mov
cwtl
xor
or
out
sbb
mov
sbb
es
or
push
movsl
ljmp
dec
cmp
ja
jb
in
ja
and
xor
iret
ds
mov
lcall
mov
shrl
or
stc
dec
cmpsl
add
dec
push
enter
push
lret
loop
pop
enter
add
repnz
pop
jo
out
aaa
cmc
mov
popf
sbb
ret
inc
mov
push
outsl
std
icebp
js
mov
pop
inc
enter
insl
outsb
push
mov
in
aas
cli
in
popl
test
out
mov
adc
mov
fisubs
ljmp
std
or
pop
subl
push
lock
cmp
pusha
fstps
mov
decb
mov
jp
xchg
mov
add
push
jmp
outsb
jl
sti
cmpb
out
sbb
jbe
scas
cmpb
or
sysret
cwtl
js
icebp
out
mov
and
xchg
cmc
and
cmp
mov
sar
pop
or
xchg
jne
pop
insb
xor
ljmp
into
or
fldt
cmc
orl
and
mov
lods
lock
fs
add
loopne
stos
jge
insb
push
mov
mov
aam
lods
mov
sub
sub
xor
jnp
shrl
fdivs
stc
or
adc
mov
xchg
inc
pop
mov
mov
shll
aam
jle
jo
mov
cmp
popf
inc
aas
add
lods
mov
leave
mov
test
push
mov
push
mov
jge
insb
push
addr16
push
pop
cmpb
loopne
loop
add
jne
pop
std
cmpsb
sbb
incl
lahf
adc
fwait
pop
hlt
pop
fwait
repz
ret
adc
outsb
inc
add
sarl
jmp
or
and
pop
mov
sub
les
arpl
fisttpll
sarb
pop
nop
in
test
sbb
lods
cmp
scas
or
imulb
in
and
orb
inc
insb
movsb
add
xor
mov
sub
cs
in
lods
xchg
aaa
add
cltd
imul
out
push
movl
pop
pop
xor
mov
cmp
outsl
dec
mov
push
push
lret
mov
mov
loope
xlat
and
lahf
leave
bound
mov
cmp
pop
cmpsb
scas
adc
adc
insl
outsl
sbb
or
rcrb
stos
in
push
dec
das
cwtl
outsb
mov
lea
or
pop
ds
incl
mov
rorb
aad
push
cwtl
add
pop
jecxz
rcrb
inc
fistpll
xorl
mov
fldt
sub
out
push
or
fbstp
mov
mov
push
sbb
fiaddl
and
adc
cli
das
lock
movsb
xor
leave
in
sbb
repnz
loope
lock
cmc
cmc
mov
nop
sub
insb
xchg
jecxz
sti
call
fisubrs
mov
test
ljmp
push
push
hlt
shll
popl
adcb
loope
incl
rol
adc
sarl
repnz
inc
ss
inc
mov
rcrb
jbe
adc
gs
pop
loopne
aas
adc
leave
aad
out
cmpl
xor
push
mov
popa
add
inc
mov
sbb
mov
add
or
mov
xchg
jp
add
and
lret
mov
cmpsb
mov
test
sbb
or
pop
mov
push
repnz
call
repz
cli
adc
dec
pop
push
aam
out
push
sbb
push
das
inc
dec
sbb
push
adc
dec
popa
repz
pop
cmp
lea
test
adc
and
ss
rcl
inc
or
inc
scas
bound
loop
push
out
lcall
xor
push
xchg
std
inc
mov
lcall
mov
or
loop
test
mov
jl
xlat
psubd
scas
xchg
aaa
pushf
jo
mov
clc
popf
ret
ja
xor
pop
mov
or
inc
xchg
cwtl
xchg
mov
ds
int
into
mov
mov
dec
xchg
subb
adc
and
adcl
shlb
mov
jg
fcomi
inc
dec
daa
mov
and
dec
popf
push
es
jp
pop
in
shrl
sbb
stos
dec
js
test
fbstp
addl
push
mov
dec
push
sarl
xorb
or
in
dec
jecxz
shll
xorl
dec
aaa
outsb
movsl
pop
fscale
push
lds
das
pop
std
lea
push
mov
testb
nop
fsubrl
popf
and
fldcw
push
sub
add
sub
mov
and
cmp
and
mov
pop
xlat
out
pop
lods
inc
adc
loop
dec
or
insl
push
mov
adc
sub
clc
dec
jge
xchg
jl
stos
dec
adc
cmp
dec
les
les
or
aad
aaa
inc
scas
in
jecxz
mov
jp
sbb
xor
insb
je
insb
sub
pushf
add
ja
ljmp
sbb
mov
pop
lcall
cwtl
jmp
pop
jo
inc
add
mov
frstor
aad
mov
test
fdivrs
sub
jne
cmpsb
cli
lret
aaa
add
ds
and
ret
mov
and
testl
les
sbb
push
leave
pop
push
not
aam
and
movsl
clc
mov
mov
jle
das
cld
pop
call
add
add
sbb
mov
dec
cwtl
add
xchg
push
lea
loopne
mov
pushl
xor
inc
fs
jns
mov
cld
inc
int
jg
dec
jg
or
adcb
jp
or
loop
inc
xchg
mov
sub
or
bound
push
or
push
inc
pop
out
push
loope
fcmovnu
jg
or
pop
lea
stos
or
roll
inc
mov
fistl
ficompl
fisttps
int3
jg
pop
dec
rcl
jp
xchg
add
jne
mov
test
fwait
rorl
popf
xor
repz
sahf
sahf
mov
pop
aad
jbe
inc
arpl
xchg
xchg
loop
cmpsl
xchg
mov
add
fdivrs
into
inc
adc
cmp
add
pop
mov
dec
or
dec
sbbl
out
dec
inc
imul
jge
inc
and
adc
loopne
push
out
mov
inc
fldt
stos
adc
sarb
and
or
pop
dec
jg
push
nop
dec
cmpsb
dec
xor
pop
xlat
push
cli
fwait
stc
jae
jecxz
mov
push
ss
mov
jne
push
cmovbe
or
dec
outsl
cld
out
or
addb
adc
imul
push
sbb
iret
int3
inc
cld
adc
int3
mov
push
in
ss
push
out
vpcmpeqw
and
push
ja
cmpsl
enter
call
mov
mov
cwtl
cmp
pop
push
dec
mov
adc
movsl
add
sub
rol
add
xchg
or
lret
mov
shlb
push
stos
jl
dec
mov
fldenv
repnz
subb
cli
cwtl
adc
in
popf
ja
jb
inc
xchg
in
dec
shr
pop
sbb
into
mov
sbb
sbbb
add
outsl
xchg
mov
adc
add
out
adc
lret
adc
rol
pop
mov
pop
pop
test
cwtl
rorl
mov
or
xor
add
push
sub
ret
mov
sti
arpl
in
stos
ds
inc
xlat
call
sbb
fwait
dec
insl
sarb
push
cmp
and
add
push
mov
xchg
cmp
loopne
sub
add
jle
aam
mov
push
push
cld
xor
inc
dec
cmpl
adc
insl
lret
lock
mov
push
inc
clc
out
in
push
xchg
fcmovnu
in
add
jg
push
cltd
xor
cld
nop
and
xchg
dec
fsubrl
and
fs
inc
aam
mov
add
ljmp
sub
add
cmp
stos
fisubrl
sbb
bound
inc
mov
mov
fs
loop
mov
push
fwait
ds
jnp
mov
jle
aas
inc
jbe
aad
jmp
mov
add
xchg
sub
stos
enter
je
ret
dec
xor
aam
out
int3
mov
or
scas
es
mov
adc
mov
pop
jl
imul
movsl
adc
and
push
xchg
sbb
rolb
mov
mov
pop
push
pop
mov
mov
das
mov
jle
shll
push
in
ds
mov
shrb
lods
lods
dec
cmp
dec
push
fsubs
ror
inc
mov
xchg
mov
xchg
jmp
push
sbb
add
cmp
jne
pop
popf
fucomi
add
rorb
cli
jmp
or
jmp
pop
leave
push
xlat
mov
mov
mov
call
inc
enter
inc
arpl
mov
fildll
mov
ret
loopne
adc
push
out
push
mov
test
cmp
fisttpll
mov
sti
or
jmp
and
inc
pop
xchg
cld
stos
adc
jbe
mov
jp
lods
test
cmp
xlat
jge
decl
icebp
inc
iret
ss
jb
jmp
arpl
clc
fldt
xchg
outsb
es
inc
leave
sbb
or
dec
negl
xchg
mov
xor
xchg
loopne
divb
inc
pop
sbb
into
call
ljmp
cmp
int3
pop
iret
lret
ret
nop
xorl
pop
repz
dec
or
out
fsubrs
jg
pop
adc
fwait
enter
out
mov
lret
adc
jg
scas
aaa
out
ss
jmp
inc
lods
out
fs
mov
add
data16
dec
pop
jno
scas
push
pop
jecxz
scas
test
mov
ss
outsl
jge
xchg
sbb
fldl
mov
jp
or
pop
jl
add
bound
adc
andb
push
push
inc
sti
add
inc
orl
repz
or
lcall
cmc
shrb
dec
add
adc
mov
fsubr
mov
into
cwtl
jo
mov
imul
mov
pop
adc
lahf
aad
std
mov
mov
lret
mov
dec
xchg
call
pusha
jno
dec
aad
push
addr16
inc
mov
inc
into
aam
outsl
out
inc
fisttpll
mov
test
daa
and
lock
sub
sbb
inc
mov
enter
filds
pop
dec
xchg
call
ja
jns
mov
inc
dec
jmp
xor
das
movsl
fdivr
xchg
cmp
or
mov
stos
jns
and
mov
jae
psllw
pop
sub
test
jno
ss
xor
in
cmp
mov
and
ret
pop
test
xorb
mov
sub
dec
lock
icebp
negb
mov
dec
mov
and
xor
mov
jae
lret
adc
sbb
jl
jne
xor
inc
xor
push
push
jle
mov
add
insb
rolb
pop
js
cmp
adc
cs
fcmovb
inc
and
xchg
sahf
xchg
mov
mov
dec
inc
ljmp
dec
mov
adc
push
adc
addb
sarb
imul
clc
es
outsb
mov
in
icebp
test
jbe
xor
sbb
xor
dec
enter
sub
mov
mov
mov
pusha
and
jle
jle
popl
adc
mov
test
pop
fidivrs
cld
mov
cmpb
and
mov
mov
jbe,pn
sbb
xor
sub
jecxz
sbb
lea
testb
call
rolb
inc
add
cmpsb
mov
sub
nop
pop
iret
sbb
lret
sbb
das
cld
adc
test
dec
js
cli
or
lods
ss
clc
fsts
and
lds
xchg
pushf
mov
mov
outsb
dec
mov
pop
push
fldl
mov
fistps
test
inc
mov
and
outsl
mov
testb
pop
mov
jmp
aaa
insb
mov
mov
pop
sub
cs
add
cmc
or
xlat
and
inc
lods
lea
js
or
ds
adc
push
sbb
je
lret
hlt
add
push
inc
inc
mov
hlt
int
sbb
jl
test
ret
push
fisttpll
mov
rcll
mov
add
jle
shll
fcompl
fiadds
shrl
adc
outsl
dec
pop
ret
xchg
push
dec
es
add
mov
mov
outsl
iret
and
popf
das
fiadds
cld
lcall
dec
dec
das
cltd
or
mov
and
movsb
fdivl
test
jns
adc
sub
shrb
sar
add
out
fdiv
jo
adc
add
and
cmpsb
pop
imul
loope
sub
aas
jo
pop
ljmp
bound
pop
js
rcr
jmp
cmp
out
ljmp
popa
test
pop
ljmp
and
inc
gs
mov
add
aaa
das
add
xchg
inc
andl
mov
popl
rcrl
ret
and
rcll
xchg
push
mov
outsl
xor
loopne,pn
test
adcb
sub
cmp
pop
cli
out
mov
pusha
fnstsw
sbb
test
add
andb
shrb
mov
or
mov
lahf
ret
jl
push
shlb
daa
add
push
mov
push
imul
fsubrs
insl
xchg
lock
jp
ret
clc
hlt
call
dec
lock
aam
aaa
push
inc
out
sub
lods
inc
cmp
sbb
test
lcall
sbb
negl
inc
ja
sbb
movsb
in
push
mov
call
ds
aaa
dec
jo
add
imul
addb
inc
inc
xchg
jle
insl
fst
cmp
test
xor
pop
inc
mov
ficompl
ret
xchg
ret
cli
dec
add
jae
pop
pushf
inc
ds
js
loope
ss
sub
mov
std
out
insl
test
out
cmp
or
pop
sub
dec
test
cmp
add
lds
adc
rclb
fcmovnb
or
adc
push
inc
outsb
or
test
fildll
ret
or
and
movsb
mov
subb
shrb
jmp
fcom
test
outsb
adc
add
mov
fs
pop
or
stc
pop
stos
jle
mov
dec
add
xchg
mov
or
sarl
dec
sub
loop
sbb
sahf
fs
fwait
sbb
aam
lea
lock
xchg
push
leave
jno
mov
xchg
addb
dec
mov
push
popa
push
pop
add
cli
adc
js
jp
movl
fisttpl
xor
pop
test
or
adc
sbb
testb
repnz
xorb
and
test
cs
cli
mov
mov
or
or
sahf
gs
lds
fiadds
outsb
xor
sub
popa
fdiv
pop
mov
pop
sbb
lds
or
sbb
outsb
or
sahf
mov
aaa
loop
das
adc
lock
mov
add
aaa
pop
or
mov
push
adc
mov
inc
into
int3
pop
mov
mov
inc
fsubs
cld
orl
repnz
sbb
call
and
jae
adc
jle
jmp
cmc
scas
or
xchg
push
pusha
out
jle
mov
lcall
cmp
jg
ficoms
xchg
and
enter
push
cmpsl
mov
cmovg
js
clc
pushf
mov
pop
or
test
push
or
mov
loope
dec
cmp
add
orb
idivl
loope
fiadds
xchg
jp
jle
in
je
jle
dec
pop
clc
inc
jae
push
cmp
push
ss
adc
mov
pop
adc
lods
ret
arpl
je
data16
ljmp
dec
inc
sarb
ret
mov
mov
adc
insl
cmpl
add
push
mov
mov
addr16
gs
sub
jl
mov
mov
mov
aaa
call
xor
fcom
dec
jg
add
outsb
pusha
mov
mov
cmpl
lods
inc
fstpl
daa
cwtl
cmpsl
test
lea
xor
cwtl
rolb
inc
jg
outsb
inc
dec
sub
ret
aad
xorl
xchg
mov
pop
mov
dec
pop
mov
std
aaa
xchg
mov
pop
pop
and
pusha
js
cmp
inc
shll
idivb
and
mov
or
sub
ja
jno
jecxz
dec
les
lret
cmp
mov
sub
push
xchg
xor
icebp
aaa
aam
and
leave
pop
into
sub
mov
ret
adc
and
outsb
imul
lea
and
pop
jle
addl
or
pop
cli
jmp
mov
jp
jge
inc
sub
sbb
shlb
pop
jnp
enter
inc
xchg
push
mov
and
addr16
andl
jl
sarl
and
dec
push
inc
fisttpl
pop
inc
cmp
xchg
incb
mov
pop
call
fildl
dec
mov
nop
cmp
mov
movsl
add
out
test
mov
mov
movsl
jle
das
xchg
adc
jb
in
pop
inc
clc
mov
mov
in
shlb
lods
sub
icebp
push
pop
aam
mul
push
or
mov
xchg
pop
arpl
ss
xchg
xchg
sti
dec
hlt
or
test
pop
jl
dec
mov
and
or
scas
or
mov
stos
mov
addb
pop
test
orl
or
cmp
lret
cmp
mov
push
inc
xor
inc
xchg
jo
mov
inc
jb
aam
mov
push
scas
rolb
cwtl
fisubrl
movsl
inc
dec
cwtl
out
jecxz
scas
pusha
mov
subl
mov
shrl
sti
cmp
iret
add
fildll
outsb
mov
xlat
xor
in
mov
scas
lods
mov
cmp
cld
or
or
loope
push
and
push
xchg
sub
iret
xor
repz
sub
pop
push
mov
mov
sub
outsl
shlb
and
mov
push
cld
in
out
sub
sbb
ljmp
inc
mov
mov
movsl
inc
jns
dec
movsl
xor
jmp
and
adc
fsubrp
push
sahf
addb
in
jmp
fmull
mov
fldt
and
push
lahf
cs
and
sub
sbb
loope
cmp
mov
xchg
jbe
or
aad
lret
lods
lret
cmp
xor
adc
insl
mov
ror
ficompl
test
sbb
sbbb
cltd
sub
fldenv
ficompl
mov
mov
in
mov
add
jp
outsl
testl
js
lods
ret
fisttps
cltd
push
adc
push
outsl
sub
ss
notl
cld
jg
mov
fwait
mov
pop
or
loop
cwtl
int3
and
into
clc
test
inc
cs
stos
cmp
icebp
dec
inc
add
add
cmc
mov
or
lret
cmpsl
dec
cmp
daa
xorb
or
clc
inc
lea
movl
mov
xor
add
les
xchg
jne
fcmove
and
mov
lcall
mov
cli
pop
sub
dec
jo
sbb
jmp
divb
decb
mov
cmc
movsl
loopne
inc
xchg
ja,pt
ja
scas
std
icebp
xchg
shlb
cmp
fcomi
push
outsb
xchg
mov
mov
xor
mov
adc
xor
testb
mov
jg
sub
mov
lds
xchg
loopne
add
adc
hlt
scas
stos
cmc
adc
in
ffreep
mov
sub
mov
dec
sbb
pop
cmp
add
cld
lods
mov
mov
mov
insl
cli
andl
shlb
rorl
mov
or
or
push
test
les
and
in
sub
aam
loope
xchg
push
xor
enter
lods
lock
pop
mov
lds
out
push
pusha
mov
in
cmp
mov
mov
fs
cmp
clc
mov
mov
inc
mov
pop
fimuls
sub
in
stc
call
mov
shr
xor
xor
fwait
call
push
mov
ljmp
outsl
ja
leave
lea
push
mov
das
cld
fwait
pop
clc
mov
inc
cmpsl
adc
cwtl
and
in
dec
xorb
push
sbb
mov
inc
sbb
fcmovnu
push
pushf
mov
and
in
mov
bound
add
loopne
inc
xchg
lea
test
clc
aaa
inc
pop
push
arpl
dec
sbb
push
idiv
rcrb
hlt
cs
push
push
xor
into
push
fstpt
mov
mov
add
add
or
insb
js
shrb
fs
xchg
sub
mov
cmp
cld
dec
pop
lock
pop
loop
aaa
inc
inc
es
outsl
jp
icebp
adc
in
stos
fisttpll
mov
jmp
arpl
outsl
psrlw
pop
xlat
adc
nop
inc
dec
rcr
push
sub
gs
mov
push
inc
adc
pop
ret
sub
popa
xchg
cmp
test
loope
icebp
clc
icebp
mov
ljmp
insl
xor
and
jae
fcoml
inc
rorl
xor
in
test
cli
push
and
push
mov
lods
mov
aad
cmp
insb
mov
in
jmp
pop
test
sbbl
inc
xchg
sar
lods
fdivrs
stos
int
add
jnp
jecxz
out
inc
pop
mov
clc
xchg
push
inc
adc
inc
orl
pusha
inc
jl
xlat
push
mov
mov
rcll
sarl
sbb
xchg
jecxz
sbb
sti
sbb
cmp
xchg
or
inc
fistpll
inc
pop
sbb
cmp
sub
aad
add
mov
fistpll
push
insl
mov
mov
jg
mov
push
sbb
xor
and
and
inc
aas
iret
stc
imul
pop
mov
jg
or
cmp
movl
jmp
fs
insb
inc
insl
ja
int3
cli
out
sub
sbb
jne
stos
dec
icebp
cmpb
jmp
and
mov
xlat
filds
cmp
xor
mov
push
andl
imul
jnp
adc
xchg
clc
pop
in
add
push
cltd
xchg
jne
pop
pop
mov
lds
and
xchg
enter
repz
scas
insl
add
scas
inc
push
rorl
jmp
popf
push
add
mov
mov
mov
pop
sub
inc
mov
xchg
test
pop
jecxz
leave
pop
gs
sahf
sub
xchg
sub
call
loopne
mov
push
movsb
or
aas
nop
fucomp
out
fists
mov
pop
cltd
push
ret
ret
mov
cli
sbb
sti
cmp
call
and
movsl
hlt
mov
adc
cmp
out
jecxz
std
data16
xlat
lcall
adcl
mov
cli
sub
jg
lods
cwtl
subb
pop
mov
imul
jle
out
test
push
adc
xchg
or
pop
incb
daa
add
ret
fbstp
or
ret
cmp
adc
add
cli
imul
sub
sti
adc
mov
xchg
or
xchg
out
lahf
sbb
or
mov
mov
lods
mov
lea
inc
xor
mov
cwtl
jmp
fadd
mov
and
push
mov
mov
xchg
lcall
das
test
into
lds
pop
mov
cmp
insl
bound
or
adc
push
xchg
inc
pop
mov
fisubrs
push
xor
push
xchg
cmp
pusha
cmpsb
outsl
shl
test
inc
dec
std
test
mov
scas
fldl
jo
stc
sahf
push
or
outsl
mov
js
push
cltd
cmp
lret
jnp
jge
lds
dec
push
or
out
movsb
mov
aaa
fsub
mov
and
adc
jg
in
mov
test
in
and
sbb
and
or
xorb
stos
mov
mov
hlt
outsb
pop
pop
push
cmp
pop
mov
std
xchg
xor
inc
dec
mull
or
mov
scas
xchg
aaa
in
notb
push
insl
inc
in
fimuls
pop
xor
fwait
add
mov
nop
adc
outsl
mov
pushf
aas
inc
inc
psrlq
clc
push
out
and
insb
pop
lock
add
pop
dec
es
neg
fdivrp
pop
fiaddl
xlat
add
add
repnz
arpl
lock
leave
inc
aad
inc
iret
xor
repz
xor
lock
or
dec
repz
sub
inc
jne
repz
inc
adc
xor
pop
jmp
int3
push
or
iret
cli
xchg
imul
scas
dec
rorb
inc
in
cmp
inc
mov
inc
inc
icebp
jmp
lods
inc
sub
outsl
and
inc
push
ja
gs
fcom
shl
adc
clc
sbb
mov
out
out
movsb
pushl
xlat
inc
in
in
loopne
adc
mov
mov
rcll
outsb
pop
fdivs
fmuls
jp
mov
fdivrl
addr16
jnp
loopne
and
clc
xchg
rorl
xor
xchg
test
inc
test
loop
mov
adc
repnz
inc
sub
sub
cmp
xor
in
mov
decl
cwtl
pop
faddl
cld
push
mov
sbb
das
mov
jmp
mov
mov
pushf
call
mov
sub
pop
cmp
cmp
scas
jl
pop
clc
mov
or
cmp
cli
aaa
nop
cmp
cs
rorb
dec
lock
cli
dec
js
fildl
push
lcall
push
rcr
fsubs
mov
loope
mov
xchg
jp
out
xchg
loop
jnp
sbb
inc
icebp
ljmp
imulb
jb
jno
or
and
mov
mov
add
sbb
push
dec
inc
sub
cmp
dec
aam
push
psubsw
mov
dec
and
push
sbb
fmull
xchg
lahf
sub
mov
and
inc
lock
test
icebp
js
and
adc
js
mov
ljmpw
mov
movsl
in
loop
mov
flds
xchg
and
jmp
or
lock
insl
sbb
daa
in
pop
outsl
sub
insb
dec
xor
mov
rolb
inc
sbb
or
in
fwait
dec
adc
mov
adc
fwait
ret
cmp
sbb
mov
andl
mov
and
cmpsl
sbb
insb
lds
mov
inc
icebp
sarb
jge
cmc
or
and
lcall
dec
insb
test
jg
shr
and
mov
pushf
loope
pop
mov
outsl
jmp
or
or
aad
fisubs
push
enter
mov
or
xchg
cli
cwtl
mov
add
nop
xchg
add
mov
ja
jbe
pop
pop
and
or
ss
mov
adc
adc
sub
js
push
sbb
fbld
cmp
or
mov
and
cmp
gs
and
out
mov
leave
jg
lds
stos
or
add
mov
sub
pop
mov
out
mov
jae
rolb
push
rolb
sbb
call
in
cltd
addr16
insb
fstpt
outsl
insb
mov
xchg
xchg
addl
fldl
xchg
push
lds
cli
push
push
shl
xchg
shr
pop
addl
imul
mov
pop
repnz
scas
cli
movb
mov
fstp
xorb
push
subl
xchg
jge
xchg
and
xor
jo
sahf
xor
test
inc
mov
cmpsl
fst
insl
ret
sub
xchg
cmp
js
out
dec
inc
test
filds
jno
adc
stos
adc
pop
pop
je
pop
jo
call
jmp
push
fmull
add
mov
dec
inc
movsl
adc
cltd
loopne
or
cmc
fstpt
icebp
popl
ret
push
test
ja
repz
and
sbb
mov
ljmp
bnd
mov
push
jae
insl
fimuls
pop
imul
dec
jl
and
cmp
sbb
cmp
lahf
rcr
fcmovnu
inc
mov
mov
sbb
shlb
lods
and
jne
jne
jp
and
mov
loopne
pop
adc
dec
and
sub
jl
or
mov
test
clc
inc
cmp
jecxz
mov
and
stos
mov
jg
iret
mov
int
sub
add
ret
xchg
sub
out
xor
inc
mov
loopne
fildl
test
xchg
mov
jno
pushf
cwtl
fildl
ficoml
mov
sbb
push
insl
mov
and
ficompl
push
add
subb
cmp
out
xchg
aam
mov
loop
daa
outsl
mov
insl
aad
fistpll
ret
fidivl
hlt
inc
imul
mov
sbb
pop
cmp
adc
jbe
inc
mov
jns
inc
test
lea
push
jecxz
popa
add
callw
mov
int3
jmp
jo
movsl
mov
mov
pushf
lea
push
shrl
inc
aas
xor
rcll
add
xor
cmpsl
das
dec
xlat
das
in
jbe
in
shlb
lea
or
test
loope
call
std
outsl
mov
sub
mov
push
iret
dec
and
hlt
xor
rol
sbb
in
add
xchg
jo
addb
xchg
lret
mov
movl
mov
jl
mov
sub
sti
pop
gs
and
pop
ret
xor
or
push
mov
ret
cld
xchg
pop
sub
enter
xor
adc
lcall
inc
mov
jb
std
jle
fcmovnbe
shlb
cmp
negl
call
and
jl
rorb
xor
or
int
movsb
mov
mov
xchg
jp
mov
das
mov
or
sub
cmp
lock
mov
sarb
fs
mov
mov
lahf
rcl
pop
jmp
inc
sbb
lock
fimull
aaa
mov
leave
aad
add
in
fstp
dec
sub
xchg
lods
inc
stos
imul
and
test
mov
dec
pop
xorb
adc
and
and
dec
cld
outsl
ljmp
int3
int3
lock
jmp
in
in
lock
and
xchg
dec
push
aas
pop
pop
fs
mov
test
inc
js
or
adc
inc
pop
sbb
jb
test
fs
jmp
dec
adc
das
adc
mov
clc
sbb
mov
cmc
das
sbb
sahf
sub
mov
add
push
sbb
add
aaa
mov
les
sbb
adc
mov
out
test
outsl
adc
leave
pop
lcall
cmp
pusha
sbb
in
pop
add
dec
xchg
push
inc
test
push
jecxz
lds
je
pop
add
add
subb
pushf
pop
faddl
das
insl
call
jbe
and
sbb
sahf
shlb
xchg
in
jbe
lds
shlb
sbb
ja
jg
test
cmpl
shrl
cmpsl
lcall
dec
shlb
clc
lcall
xchg
gs
jl
mov
or
xor
filds
dec
wrmsr
adc
xor
fst
repnz
sbb
ffreep
add
push
pop
pop
adc
push
push
mull
stc
pop
ss
sbb
leave
push
sbb
fwait
mov
cmp
cmp
subb
and
pop
fwait
mov
arpl
mov
out
add
cmp
clc
stos
fcomi
hlt
and
imul
sub
mov
push
dec
cmpsl
arpl
clc
xor
in
test
cli
sub
aam
jmp
mov
xchg
mov
bound
test
stos
push
or
jg
sub
imul
or
sub
icebp
das
std
enter
popa
pop
or
cmp
jae
xorb
in
mov
pop
out
stos
xchg
push
sub
filds
ds
adc
inc
test
or
out
jne
inc
or
fwait
inc
add
cli
cmpb
or
or
xlat
pop
inc
dec
xchg
push
in
xor
int
insb
orb
mov
in
pop
pop
pop
pop
movsl
test
fcomps
inc
mov
pop
add
mov
push
outsl
adc
adc
ret
aaa
adc
insb
iret
add
and
loopne
call
cmp
or
shl
or
leave
test
negb
mov
icebp
add
imull
mov
popa
adc
add
or
xor
sbb
rclb
out
adc
or
fisttpl
pusha
jl
or
mov
xorl
outsl
fists
xchg
repz
cmpl
sbb
mov
mov
xor
pop
cmp
lock
pop
mov
add
inc
cld
mov
sbb
orb
in
shrl
rcl
mov
pop
cmp
pop
sbb
daa
aas
adc
fists
bound
sub
nop
shl
adc
imul
out
jbe
mov
roll
or
pusha
jecxz
icebp
shll
push
aas
test
js
xchg
shll
lea
dec
stc
pop
ljmp
xor
scas
divb
sbb
fdivrp
lods
fisubl
jne
lds
push
mov
jo
das
std
scas
sbb
popa
daa
outsb
cmp
adc
mov
lea
sub
dec
push
sarb
shrl
or
jg
fists
xchg
xchg
and
fs
jmp
xor
dec
pop
aas
add
add
pop
rclb
mov
jge
inc
fistl
sbb
in
mov
xor
or
test
out
lcall
inc
mov
jle
icebp
ret
pop
cmp
aaa
inc
lods
xor
push
jbe
mov
push
inc
cmc
imul
rcrl
jge
jp
mov
sub
or
stos
dec
add
out
mov
dec
push
inc
test
mov
cmp
dec
aam
call
add
mov
jl
insb
jg
and
and
outsl
andl
inc
lds
push
and
decl
fmul
mov
cmpsb
inc
int
sti
fsubrp
add
or
inc
stos
sub
loop
dec
mov
lods
cmc
push
mov
sarl
out
inc
adc
or
xor
mov
pop
paddq
clc
inc
mov
xchg
orb
fstl
sub
adc
mov
nop
and
push
inc
iret
call
add
add
inc
int3
xor
stos
aas
fcmovbe
adc
scas
mov
and
movsb
jnp
fimull
sbb
test
test
cli
and
and
bound
mov
cmp
pop
sbb
cli
movsl
adc
sub
int
push
mov
mov
mov
jmp
mov
dec
fwait
call
and
in
test
mov
std
pusha
mov
faddl
lea
xchg
pop
sbb
cmp
movl
pushf
cmp
insb
mov
inc
fcomps
aam
ret
xchg
jno
push
xchg
lods
or
add
cmp
icebp
test
push
jne
jg
xchg
cmp
mov
add
push
pushf
je
xchg
jb
jle
pop
fucomi
popa
aad
es
mov
push
xor
jmp
popa
fsubr
mov
jns
inc
lret
or
add
mov
adc
dec
je
cs
data16
or
or
xchg
pop
cmpsb
dec
sub
test
movsl
lods
imul
sar
mov
scas
xchg
add
push
pop
fs
sub
shll
or
repnz
sbb
push
add
lock
jns
ljmp
or
fdivs
sahf
pop
pusha
stc
jge
stos
outsb
jg
jae
jecxz
adc
mov
jg
sbb
decl
test
out
adc
xor
leave
or
movsb
pop
or
call
or
fstpt
xorb
fs
lret
fnstcw
into
sbb
sbb
adc
clc
and
push
arpl
scas
scas
and
loop
push
jne
nop
mov
daa
xchg
push
or
mov
cld
push
in
in
push
bswap
xchg
outsl
aad
dec
add
js
inc
das
jl
push
fucom
cld
push
mov
cmp
push
cltd
aas
std
loope
xor
mov
adc
clc
dec
mov
lret
jp
call
mov
rclb
push
addl
into
mov
or
or
jnp
cwtl
scas
stos
dec
bound
xchg
dec
jg
notb
add
sub
out
and
adc
and
pop
loop
push
cwtl
aad
into
idivl
pop
into
incl
inc
pop
mov
addr16
fsts
mov
lret
xor
jno
xor
lods
js
ljmp
lahf
mov
xchg
add
mov
xlat
sahf
inc
ret
bound
adc
sub
inc
inc
jbe
sbb
ret
add
mov
pushf
insb
inc
and
push
fstpt
negb
repnz
mov
repz
insl
incl
shll
jmp
inc
aam
or
ja
dec
scas
lods
dec
dec
sub
push
dec
cmp
rcrb
ds
loope
orb
les
jnp
adc
add
sub
outsb
nop
push
mov
pushf
pop
mov
mov
mov
mov
iret
cmpsl
dec
mov
sbb
mov
ja
scas
adc
jmp
out
inc
or
inc
mov
and
mov
jne
or
jl
es
subl
subl
mov
imul
inc
mov
nop
dec
ret
xchg
push
pop
pop
jo
mov
rcrl
add
outsl
or
dec
das
shr
out
ficoms
sbb
mov
push
inc
and
add
rcl
popa
aaa
addr16
testb
fstl
mov
mov
push
call
or
cmpsl
jge
lahf
xchg
cmc
lret
inc
xchg
rcrl
icebp
adc
xorl
mov
pop
inc
or
sub
fisttpl
add
faddl
int3
enter
clc
and
and
or
cli
decl
ss
sbb
xchg
sbb
cltd
andnps
iret
cmp
lret
mov
ss
outsl
in
lea
imulb
inc
lret
loop
aad
insl
decl
lret
xchg
es
push
out
inc
mov
adc
mov
loopne
or
jmp
fistpl
sbb
mov
retw
in
dec
test
jge
daa
pusha
sbb
or
mov
aaa
inc
pusha
mov
sti
data16
push
cwtl
aad
aas
pop
sbb
jns
repz
ljmp
test
sub
mov
mov
sbb
je
fsubl
sub
or
scas
cmp
sbb
fisubrl
insl
cmpsl
popa
cmp
xor
jbe
shlb
or
inc
enter
push
test
add
loop
loop
fstpt
adc
pusha
pusha
cmp
int3
pop
js
jl
loope
xor
outsb
xchg
outsb
jnp
dec
mov
xchg
jp
ss
or
inc
std
movsb
in
or
test
push
fimull
inc
and
xchg
push
inc
sarl
pop
pop
ja
into
adc
loop
jmp
mov
cmpl
mov
das
lahf
push
lds
std
shll
add
outsb
std
cltd
inc
push
arpl
and
scas
movsl
adc
clc
int
pusha
pusha
jmp
in
inc
test
aas
inc
cmp
pop
inc
pop
pop
mov
jg
shrl
lods
dec
pop
scas
ret
sbb
dec
cmp
cmp
mov
hlt
popa
insb
or
mov
fisttps
xor
sub
bound
push
mov
and
ficoms
push
ljmp
test
aaa
fisttpl
jmp
push
adcl
loope
pop
cmp
cs
dec
xchg
jne
xor
inc
and
std
outsl
sub
jbe
pusha
xor
push
adc
jg
inc
sbb
out
push
cmpsb
push
data16
call
push
gs
pushl
inc
fldt
push
and
rcll
and
das
cld
lods
mov
mov
cltd
scas
jge
mov
push
pop
icebp
adc
negb
mov
jg
xor
imul
jne
mov
inc
mov
mov
push
add
test
add
and
ljmp
cmp
movsb
into
add
add
xchg
mov
call
push
xlat
negb
dec
push
insb
int
aaa
in
leave
pop
enter
jp
mov
add
push
mov
test
xchg
add
sahf
add
lods
enter
push
add
xchg
mov
gs
mov
sub
mov
adcb
or
mov
test
push
mov
inc
xchg
les
xchg
sarb
inc
jp
xor
orl
jmp
jb
dec
repnz
mov
sar
mov
adcl
test
cmp
sbb
out
lds
push
sub
pop
ja
pop
scas
pop
lods
sbb
or
xchg
hlt
lods
std
push
and
cld
cmc
mov
loop
mov
in
int
adc
cld
imulb
add
jle
roll
movsl
adc
popl
jecxz
xchg
int3
data16
and
cltd
jmp
jecxz
pop
shrb
xlat
adc
mov
add
scas
mov
orl
js
les
lods
xchg
mov
out
jl
cmp
scas
sub
in
and
push
add
pop
pop
outsb
cld
notb
movsb
pop
popa
pop
stos
sti
adc
sub
insl
push
insl
ds
iret
pop
call
jb
push
xor
mov
sbb
clc
fstpl
subl
mov
mov
pop
loop
pop
popf
sbb
inc
std
ret
mov
je
mov
cmp
fldt
mul
sub
sub
shrb
lods
in
cmp
dec
xchg
or
mov
mov
sahf
mov
sarl
sbb
data16
fs
mov
cli
sbb
jne
jge
ror
out
sub
pop
inc
cld
lret
mov
loopne
sar
fisttpll
fs
int3
mov
rolb
xchg
lock
push
mov
cmp
and
lods
jge
cmpsl
test
xchg
sbb
sahf
jb
or
mov
xchg
clc
sbb
mov
das
pop
fisttpll
imul
sbb
js
fcoml
xchg
loopne
and
clc
mov
sbb
sub
out
fldenv
inc
andb
mov
rorb
loope
mov
or
dec
sbb
dec
mov
jns
fisubl
lds
fwait
cmpsb
mov
inc
scas
cli
add
push
scas
jecxz
or
icebp
dec
mov
shl
adc
rcll
rcr
sbbb
inc
das
cmp
fdivrl
inc
pop
aam
ljmp
or
movsb
adcb
pop
jmp
and
xor
xor
cmpb
or
sbb
cltd
push
xchg
add
ja
mov
mov
les
inc
iret
mov
cmp
jle
mov
xchg
adc
arpl
push
adc
insb
jle
shll
popl
ds
add
outsl
fistpl
andl
fadds
fwait
jbe
fucomi
inc
adc
outsl
pop
cld
adcl
mov
enter
sbb
jp
cmc
push
jb
data16
mov
mov
std
out
sub
and
lcall
or
xchg
sub
stc
jle
test
pop
jl
ret
inc
mov
or
test
jmp
rorb
jl
popa
add
inc
push
dec
lods
push
das
and
xor
xchg
pop
mov
push
mov
and
or
adc
push
out
cli
jno
pop
mov
popf
xchg
inc
hlt
pushl
sub
scas
add
shr
pop
xor
sbb
push
insb
mov
leave
outsl
ret
icebp
mov
mov
xlat
fadd
pushl
or
push
lret
mov
mov
outsb
xlat
jp
bound
mov
ss
inc
cs
and
mov
push
lret
cli
loope
mov
dec
inc
xchg
adc
mov
push
popf
mov
add
cli
jnp
jae
xchg
dec
faddl
fdivrl
mov
xlat
jp
outsl
je
dec
insl
mov
cmp
or
add
push
adc
icebp
or
cmp
mov
push
orb
add
jne
lret
or
loopne
sub
fnstenv
lea
jnp
push
xor
outsb
popf
cmp
rol
outsb
sub
lcall
aaa
rorl
and
xor
je
mov
cmpsl
mov
mov
xlat
inc
and
enter
outsl
cltd
inc
dec
push
enter
dec
popl
ret
push
sub
fistpll
ljmp
jl
clts
jno
xor
out
and
mov
jge
push
or
push
inc
xchg
sub
int3
icebp
pop
movsb
icebp
inc
pop
jo
mov
cmp
subl
daa
inc
add
push
imul
fcomps
test
in
or
xor
jbe
push
dec
rorb
jnp
ss
jle
jg
lock
repz
jecxz
test
mov
inc
inc
sbb
dec
and
cmp
mov
mov
xor
and
test
shlb
imul
in
sahf
scas
fs
add
or
pop
gs
or
inc
inc
dec
sbb
pop
ja
sub
rcl
mov
das
std
sbb
add
jne
fwait
mov
cmpb
xchg
cmp
in
pop
nop
adc
inc
push
jne
ret
jecxz
xchg
pop
push
fsubrl
fstpt
cltd
adc
cli
scas
add
jle
push
dec
lock
leave
test
std
pop
lock
add
jae
call
sub
mov
inc
andl
ds
cmpsb
fisubs
xlat
rclb
mov
or
in
mov
push
or
mov
mov
out
out
les
loope
adc
mov
mov
xor
pusha
cmp
pop
push
cmc
aaa
lock
pop
pop
xchg
add
xchg
mov
pop
cmpsb
mov
movsl
cmp
in
loop
into
in
xchg
test
cs
and
stos
in
movsl
mov
in
sbb
es
outsl
mov
push
push
and
xchg
insl
pop
mov
pop
sbb
sbbb
mov
repz
jbe
test
and
je
fnsave
pushl
scas
jo
push
pop
aas
les
mov
and
test
pop
inc
dec
sarb
jp
mov
loopne
clc
fidivrl
adc
int
jae
mov
in
jg
icebp
call
xchg
enter
and
into
aam
aaa
inc
adc
adc
or
push
and
shrb
or
pop
aaa
aas
inc
sbb
xor
push
cwtl
inc
hlt
ljmp
mov
sub
jne
adc
insl
and
jg
sbb
ljmp
mov
sbb
daa
popf
sbb
push
fadd
mov
sub
aad
xor
sbb
jl
mov
fldl
xchg
jo
js
lea
lds
pop
insb
mov
pop
popa
addl
popa
mov
mov
sbb
scas
sub
cmp
leave
out
jg
stos
push
sub
or
test
js
xchg
and
jns
sbb
fldt
push
ds
daa
add
repnz
dec
jbe
sbb
rcr
pop
dec
adc
pop
pop
pop
or
out
inc
outsb
jmp
out
jbe
lock
adc
test
pop
loopne
int3
movsl
test
dec
movsl
mov
sub
out
dec
fildll
add
pop
and
add
dec
test
hlt
cwtl
stos
stos
pusha
pop
shrb
adc
jg
or
loope
mov
and
jg
dec
nop
ja
mov
roll
arpl
fcmovnu
bound
lods
outsl
clc
stc
out
xchg
lcall
cld
mov
outsl
mov
jl
cmc
ja
push
in
jg
outsl
in
and
mov
sub
mov
jo
sarl
inc
cld
aad
and
push
lcall
lods
sbb
push
mov
scas
icebp
and
fisubl
rcrl
frstor
bound
push
mov
lea
add
out
push
pop
lahf
daa
lds
icebp
push
mov
lock
outsl
dec
test
cmpsl
sbb
fsubs
ficompl
fnsave
sub
pop
mov
fadd
outsl
lock
cmpl
and
xor
xor
cwtl
lcall
sub
aaa
pop
add
cld
and
push
sub
js
push
jecxz,pn
pop
jnp
mov
adc
fxtract
test
insb
rclb
jl
scas
imul
das
pop
jnp
ficoml
sbb
loopne
rcll
sub
mov
mov
test
mov
sti
gs
or
push
ljmp
xchg
imul
sub
outsl
mov
jbe
into
mov
sbb
iret
es
xor
cmp
mov
sti
aaa
push
lds
in
ret
lock
ds
jecxz
js
push
imul
sbb
mov
lret
pop
js
test
pop
dec
das
or
adc
push
inc
incb
sub
or
inc
push
push
lock
sarb
pusha
mov
cmp
test
ljmp
jnp
jo
lods
mov
adc
fidivrs
adc
adc
cmpsl
ret
sub
sub
pop
mov
push
cmp
mov
out
test
imul
pop
int3
push
inc
inc
sbb
and
mov
cs
popf
cli
sarl
xchg
mov
or
cs
sbb
daa
and
inc
add
xor
rcrb
dec
inc
mov
mov
clc
xor
push
shlb
mov
test
mov
xor
cmpsb
ret
lcall
jo
addl
sbb
das
xchg
push
gs
aaa
cmc
rclb
mov
rol
xchg
aaa
mov
out
decb
push
and
or
lahf
stos
mov
jne
pop
or
add
into
mov
push
or
fldl
adc
push
jne
pop
xchg
repnz
test
push
outsb
mov
jno
inc
xor
aaa
mov
pop
and
lcall
nop
aas
mov
cmp
cmp
mov
adcl
sbb
mov
mov
cli
sbb
outsl
sbb
in
sbb
or
scas
scas
pop
repz
out
rcll
sarl
jb
jmp
and
lods
mov
outsl
insb
add
in
leave
pushl
dec
pop
add
adc
es
or
cmc
insl
in
pop
mov
ja
cmc
inc
loope
outsl
cld
fildl
movsb
daa
pop
cmp
sbb
sbb
jno
or
in
mov
pop
mov
cmpsb
test
jl
jb
and
pop
dec
adc
stos
or
cmp
mov
adc
stos
rolb
test
aas
dec
ljmp
sbbl
jmp
and
in
xor
mov
adc
sar
mov
jmp
mov
push
sub
int
push
inc
daa
rol
aad
adc
jp
arpl
sbb
inc
aam
xor
sahf
lds
fisubrl
cli
dec
aad
movsl
and
hlt
minps
xor
jmp
test
mov
inc
sub
xor
sbb
and
xchg
pop
xchg
jecxz
jne
inc
push
out
pop
rcrl
or
scas
fmulp
xchg
and
aam
adc
lods
fwait
fldt
test
push
dec
cmpsl
ficomps
lock
xor
adc
jg
imul
adc
mov
fiadds
aad
fsubrl
adc
movsb
dec
ret
addr16
cmp
hlt
dec
fdivl
test
fiadds
aad
push
addb
dec
imul
sub
lods
cltd
adc
dec
sbb
pmullw
jb
mov
mov
scas
mov
je
pop
pop
pushf
shlb
loop
jbe
jle
sub
test
icebp
mov
cld
sbb
mov
push
rcl
loop
in
movsl
or
add
mov
mov
pop
or
nop
or
hlt
or
xchg
mov
cmp
fst
aaa
rcrb
pop
nop
cmp
and
insb
pop
fdivl
mov
inc
mov
bound
cld
and
sbb
lea
bound
adc
or
jle
ret
xorl
pushf
ljmp
add
mov
mov
mov
shrl
jl
add
xchg
or
mov
inc
jl
fiadds
push
iret
inc
iret
movsl
push
inc
jecxz
jg
outsb
flds
ja
sbb
adc
ret
push
call
outsl
loop
test
fisttpl
inc
adc
sbb
outsl
push
sti
shlb
jge
push
pop
and
push
pop
pop
sub
inc
flds
sub
jle
sub
dec
add
mov
sbb
fstpt
test
xor
cmp
mov
mov
je
cmp
mov
xchg
add
add
jmp
pop
adc
inc
sub
pop
or
sbb
minps
outsl
int3
cmc
xor
stos
jg
lods
mov
iret
adc
dec
sbb
nop
enter
xchg
in
nop
pusha
ss
in
lds
fistl
int
dec
std
repnz
lcall
shl
mov
fwait
clc
sbb
adc
pop
data16
lods
xchg
loopne
inc
mov
cli
adc
inc
push
pop
aaa
or
jg
fbstp
dec
adc
xor
jno
pop
out
je
clc
or
adc
and
jmp
cmp
pop
cld
cmp
jle
test
jmp
add
lea
sub
jl
dec
or
enter
inc
loop
or
add
adc
ret
sub
sbb
shlb
mov
jg
cmpb
sbb
push
js
xchg
or
inc
mov
out
cmp
push
hlt
incb
test
mov
fidivrs
push
cmpsb
sbb
mov
into
jp
in
dec
push
adc
imul
adcb
jg
cltd
testb
cmp
sbb
aaa
sti
mov
aad
in
mov
jmp
movsl
in
mov
call
sub
lahf
xlat
rcrb
adc
jp
add
arpl
jl
inc
cltd
inc
dec
lock
mov
dec
or
les
mov
loop
lret
push
clc
inc
fcomip
mov
add
ret
lahf
lret
mov
rorl
lock
mov
jp
inc
das
notb
inc
movsl
fistpl
roll
xchg
rcrb
call
xchg
sub
insb
fidivrs
push
cld
or
mov
lock
icebp
outsl
scas
inc
loop
mov
mov
mov
iret
aam
aam
scas
add
cmp
cmp
jno
adc
pop
and
jl
unpcklps
mov
inc
and
loope
push
fnsave
jbe
lock
cli
xchg
adc
pop
fmuls
ficoms
lods
sub
or
dec
push
pushf
adc
js
xlat
sbb
push
out
or
add
cmp
cmp
roll
or
xchg
popa
ja
movsb
adc
xchg
jb
les
push
jl
sti
add
mov
pop
or
inc
mov
cld
push
movsb
and
sub
sub
cld
rolb
movsb
stc
cmp
cmpl
fistl
enter
call
leave
and
loop
sbb
lea
loope
pop
add
dec
jl
dec
sub
sbbb
xchg
enter
out
sub
jmp
xchg
adcb
push
add
lock
pop
add
repnz
jnp
rcrb
cli
mov
inc
test
dec
mov
inc
out
test
outsl
aad
icebp
test
or
inc
movsl
test
or
or
dec
cmc
je
or
pop
adc
ljmp
xchg
and
or
incl
jne
jmp
dec
fists
dec
clc
mov
ja
outsl
add
in
sbb
jle,pn
or
icebp
test
in
mov
jbe
lds
push
xor
pop
adc
jg
aaa
sub
shrl
sub
and
pop
push
push
mov
adc
pop
pop
addr16
xchg
xchg
in
call
jg
lds
jne
push
cmc
xchg
dec
jg
mov
syscall
mov
xor
clc
outsl
or
sbb
pop
mov
je
scas
fidivrl
clc
aaa
std
lods
mov
xchg
fisttpl
jg
mov
aad
aas
adc
add
push
mov
ss
fadds
js
pop
sub
inc
int
out
ds
xchg
and
cmpl
pop
shlb
push
and
ret
push
or
inc
aad
jae
cmovge
xchg
mov
lcall
adc
mov
loope
inc
mov
dec
scas
push
adc
adcb
add
adc
push
inc
sti
mov
push
xchg
aam
sub
pop
jno
lret
inc
subb
outsl
pushl
mov
push
inc
xchg
lahf
in
sub
repz
insb
lcall
jo
ja
mov
cltd
mov
out
pop
sub
dec
aaa
cmp
repz
stc
js
push
repnz
insl
mov
clc
ja
add
mov
jl
or
sahf
test
mov
ret
inc
ret
or
ljmp
xchg
adc
xor
xor
or
loop
or
les
xor
clc
dec
mov
push
stos
mov
jns
dec
daa
pop
nop
adc
fdiv
mov
inc
ljmp
pinsrw
pushf
sbb
dec
shrl
push
out
jle
jae
scas
dec
or
jg
fcoms
daa
nop
and
imul
cmc
repnz
int3
cmp
cmp
dec
xchg
add
cs
jl
jle
cmc
adc
outsb
rolb
push
loope
loopne
sub
mov
lret
pop
mov
into
aaa
jle
clc
in
insl
mov
test
pop
fcomps
mov
shlb
fwait
and
xor
mov
loope
push
in
fdiv
jb
inc
stos
in
cld
je
sbb
add
push
insl
add
jecxz
movsl
push
out
lods
icebp
out
sbb
jo
mov
roll
jg
inc
stos
or
mov
cmp
xor
pop
add
and
rcrl
out
repz
jmp
rclb
out
sbb
lds
inc
xor
shl
or
xor
sar
pop
rolb
movsl
ljmp
dec
scas
mov
icebp
aaa
cli
mov
or
pop
lods
std
and
nop
ret
pushf
add
int3
lcall
sbb
mov
loopne
push
call
mov
rep
cmp
fbld
adc
inc
sbb
mov
or
scas
or
mov
sub
movsl
popw
ret
ret
add
push
leave
leave
mov
pop
sti
aaa
add
pop
bound
in
jmp
mov
cli
push
push
or
in
imul
jns
clc
mov
fisubs
xor
lods
mov
lret
aas
mov
mov
mov
pop
mov
mov
or
push
insb
fwait
loop
insb
scas
fildll
mov
push
out
scas
jle
sbb
cltd
sub
and
outsl
loop
lock
loope
iret
stos
popf
int3
jns
rcrb
pop
mov
stos
jge
jnp
ret
or
fnsave
decb
cmovne
jle
mov
push
fisubrl
imul
lds
xor
icebp
mov
fisubl
cmpsb
or
or
repnz
xchg
mov
ret
cmpsl
fisttps
loopne
outsb
lds
mov
lret
cmpsl
add
or
lahf
cli
sbb
xor
sub
jbe
mov
fimuls
jge
push
jp
jmp
ljmp
or
in
inc
std
cmp
idivl
in
push
push
xchg
call
loopne
jnp
aad
in
rorl
sub
xor
test
cwtl
das
or
and
je
std
sub
mov
pop
push
mov
mov
mov
jge
mov
gs
fsubr
stc
mov
jmp
js
fldt
mov
lret
adc
movsb
jge
mov
subb
jle
lds
add
jp
push
repnz
hlt
rcrl
nop
dec
or
cmpsb
pop
pop
repz
jb
and
push
arpl
cmc
push
das
xchg
mov
or
cmpb
pop
stos
jo
in
wrmsr
sub
fs
outsl
test
and
pop
fists
adc
mov
mov
test
mov
xchg
mov
faddp
fstpl
pop
subb
gs
dec
xchg
into
xchg
adc
jnp
pop
pop
js
push
xor
cmpsl
ror
inc
jo
or
outsb
mov
lahf
or
fists
jmp
ja
les
inc
pop
sbbb
jo
mov
aam
jmp
repz
js
add
loop
fnstenv
aad
fistpl
jecxz
sbb
inc
sbb
or
dec
cmp
movsl
das
xor
dec
cltd
ljmp
add
pop
clc
push
xor
mov
sub
mov
test
call
sbb
dec
aaa
leave
movsl
fistpl
divb
and
xor
sbbb
fsubl
mov
lret
aad
dec
aas
jb
mov
or
adc
fcmovnb
push
fwait
or
cmp
push
insb
movsl
decl
sub
jnp
cmp
adc
adcl
xchg
mov
mov
mov
cli
jae
ss
sbb
fwait
or
fucomip
ss
mov
inc
scas
out
push
jbe
add
push
nop
sub
sbb
or
ret
push
ljmp
push
loop
dec
int3
xor
fisubrs
clc
jb
in
sub
adc
mov
sub
bound
icebp
fildl
or
nop
push
les
scas
out
mov
nop
sub
outsl
fstp
sbb
cmp
clc
divl
mov
shlb
jl
jno
mov
jg
frstor
lea
sub
pushf
pop
sub
mov
shrl
add
inc
pop
call
xlat
jbe
imul
mov
jmp
dec
push
mov
xorl
sti
ja
add
vminpd
inc
pop
mov
lods
nop
xchg
xchg
comiss
shrl
xchg
popa
bound
sub
je
loop
jmp
push
adc
loopne
pushl
mov
inc
out
sti
lahf
push
fwait
cld
icebp
jg
ljmp
jnp
jne
sahf
call
pop
mov
cltd
movsb
out
lock
push
sbb
or
flds
ljmp
dec
pop
rol
cmc
mov
jbe
pop
scas
nop
or
mov
andl
pop
popa
push
sbb
xor
loope
add
inc
fisubrl
enter
in
mov
xlat
pop
pop
and
jbe
je
pop
and
cmpsb
or
jae
inc
add
loop
and
filds
cld
es
add
fs
sbb
mov
or
lret
mov
mov
clc
xor
adc
jns
dec
pop
pop
arpl
stc
xchg
outsb
ljmp
cmp
loopne
jo
pop
push
sarl
inc
out
leave
lock
push
jae
fs
pop
call
push
rcl
cmp
cli
clc
xchg
add
es
push
insb
jp
stos
stos
jno
outsl
lcall
nop
and
xchg
mov
subb
dec
push
adc
mov
mov
mov
mov
sub
sub
pop
fstpt
in
call
ret
stos
mov
mov
loope
call
loope
ret
in
popa
arpl
in
out
mov
insb
sbb
xchg
push
inc
adc
mov
xorb
push
sub
mov
rorb
jne
aaa
movl
leave
out
in
add
mov
mov
xor
xchg
out
mov
adc
inc
hlt
es
cwtl
push
xor
inc
dec
pop
push
ret
loop
mov
mov
cmpsl
je
inc
pop
mov
jp
sbb
mov
lods
movb
cld
mov
aaa
icebp
enter
mov
and
bound
jmp
daa
jno
movl
fildll
cld
jg
arpl
xor
ljmp
push
cmpsl
fildll
cmp
repz
inc
mul
std
xor
or
bound
inc
sub
hlt
or
aaa
into
xorb
arpl
xchg
push
divb
cmpb
cs
fimuls
insl
dec
sub
es
add
dec
pusha
inc
hlt
or
leave
sbb
fs
mov
push
jnp
or
shlb
lea
js
stos
and
pop
ljmp
dec
mov
stos
sub
std
sbb
inc
adc
mov
mov
inc
sti
pop
mov
cld
aam
test
fdivr
popf
call
dec
cmpsb
jg
push
cmpsb
call
mov
add
fnstsw
inc
test
jg
fildll
sbb
fiaddl
push
jp
add
insb
xor
lds
inc
insb
ds
sub
imul
ret
jb
xchg
jmp
and
leave
movsl
or
pop
fimull
inc
shlb
adc
std
cmpsl
or
imul
ret
xchg
scas
jle
jmp
adc
jecxz
cmp
lcall
mov
push
adc
pushf
or
scas
push
mov
cmpsb
add
mov
pop
je
inc
jmp
add
js
addr16
dec
call
andl
mov
es
sub
xchg
enter
xchg
repnz
loop
mov
add
pop
and
mov
icebp
mov
or
mov
subl
mov
cmp
sbb
mov
scas
cld
test
adcl
aas
mov
rcr
pop
xor
or
sbb
pop
adc
mov
outsl
mov
push
xchg
lret
ret
mov
add
ret
mov
jb
inc
dec
jl
dec
ja
mov
jge
push
rcrl
lods
add
cmpb
cmpsb
pop
movsl
adc
mov
inc
gs
pop
push
pop
cmp
adc
mov
lods
das
sub
xor
push
add
loope
stos
mov
add
push
nop
adc
jg
sbb
dec
inc
push
jge
xchg
mov
leave
sub
inc
inc
pop
test
cmp
popa
mov
lea
xor
mov
pop
jg
lea
insl
addr16
or
fisttpl
cli
push
pop
jp
xchg
pop
adc
rorl
adc
mov
pop
enter
jle
loop
test
adc
cmpsb
popa
test
cwtl
cmp
xchg
jp
xchg
clc
sub
into
arpl
test
cli
cld
jb
push
int3
loope
lea
mov
mov
sbb
push
sbb
insl
xchg
mov
jb
xlat
mov
push
and
rcr
lret
jmp
lcall
loopne
push
inc
cmp
inc
sub
ret
add
movsl
fisttpl
incl
lahf
mov
clc
lods
enter
add
jecxz
mov
pusha
adc
xor
imul
fbld
or
adc
and
fwait
push
sahf
xor
lock
imul
ja
loope
and
clc
into
adc
mov
loop
bound
pop
push
pop
mov
sub
mov
cs
xor
mov
xor
icebp
sbb
outsb
inc
mov
int3
dec
add
add
outsl
dec
add
out
icebp
sub
sbb
mov
xchg
mov
movsl
lahf
fldl
pop
inc
pop
sub
mov
jns
pusha
jmp
jmp
mov
outsl
inc
pop
shll
jl
xor
inc
jge
loop
and
inc
sub
or
call
aas
add
test
sti
adc
mov
xchg
mov
adc
jne
mov
je
or
mov
sbb
jecxz
add
icebp
lcall
or
mov
mov
iret
cmp
cs
cmp
or
mov
xchg
andl
fnstenv
xchg
mov
shlb
adc
inc
pop
pop
mov
ljmp
mov
adc
inc
push
gs
mov
movsl
sbb
fildll
adc
sti
daa
dec
bound
out
pop
jmp
mov
mov
sbb
pusha
nop
das
hlt
push
adc
pushl
jl
icebp
loope
inc
lods
and
or
dec
dec
movsb
repz
out
cld
and
mov
ret
xchg
and
sahf
test
pop
je
enter
ds
mov
mov
popf
adc
mov
add
adc
aaa
icebp
inc
pop
ljmp
repnz
jmp
data16
mov
insb
stc
cs
add
test
fiaddl
cmp
cltd
sbb
and
ds
arpl
xchg
nop
cmpsl
and
lcall
cltd
call
push
cmove
clc
and
push
loop
mov
inc
xor
mov
mov
dec
mov
push
cmp
aam
add
repnz
and
ljmp
xchg
pop
adc
stos
aaa
push
push
push
out
icebp
sub
das
mov
mov
fsub
rorb
add
movsb
outsb
xacquire
mov
inc
cwtl
testb
mov
mov
fidivrs
loopne
fwait
cmpsl
lahf
sbb
test
push
mov
icebp
push
cld
inc
jae
jne
push
mov
insl
fists
das
add
mov
adc
sbb
add
stos
pop
es
pop
inc
mov
adc
icebp
insb
outsl
add
pusha
pusha
or
test
inc
adc
vmovq
shrl
jle
push
lret
movsb
movsl
pop
mov
aas
in
pop
push
cmp
fistl
xchg
adc
push
insl
mov
inc
adc
cmc
das
sbb
add
sbb
call
fimuls
decl
pop
xor
push
pop
pop
repnz
xor
xchg
movsl
lock
call
xlat
lret
rcrl
test
cli
and
hlt
cmpsb
clc
das
cmpsb
cmpsb
mov
outsl
nop
out
sbb
fcompl
ret
mov
incl
sub
lds
subb
arpl
ret
inc
or
pop
xor
call
xor
loopne
mov
lea
jns
rcl
xchg
lods
xor
mov
icebp
xchg
pop
add
add
outsl
call
and
int3
arpl
movsl
in
mov
fucom
aam
jbe
inc
in
push
mov
aaa
ss
repnz
fstl
or
loop
fnsave
sub
pop
or
pop
jbe
jl
loop
subl
sub
ja
hlt
and
scas
pop
add
adc
dec
cmc
xchg
mov
inc
mov
pop
adc
pusha
xor
clc
in
repz
xchg
lea
mov
test
jmp
ret
cltd
test
adc
push
and
subl
add
mov
arpl
jno
jnp
push
out
sub
add
repnz
mov
ds
push
jl
mov
jnp
pop
rcrl
movsl
push
call
stc
mov
pushl
aam
lcall
mov
mov
xor
inc
movaps
and
movsl
jecxz
aaa
jle
add
push
nop
fs
inc
xchg
add
adc
idiv
mov
and
pop
stos
xchg
xchg
cltd
movsl
xchg
sub
nop
add
sub
out
or
aas
sbb
jo
aas
mov
pusha
sarl
push
adc
add
mov
mov
xor
js
incl
imul
dec
clc
push
sub
adc
pushf
pop
imul
cmp
jmp
jo
test
sbb
scas
jge
popa
fdiv
jg
scas
in
loope
inc
mov
or
mov
lcall
xchg
and
movsl
dec
lret
cmc
sbb
push
cli
ja
ret
mov
inc
jnp
mov
xchg
and
pop
mov
mov
cmp
les
sahf
rcll
lock
repz
je
and
shr
and
push
dec
inc
inc
jp
icebp
outsl
jge
std
xchg
ss
mov
cmp
mov
pop
jp
mov
mov
or
ljmp
ret
mov
mov
ss
adc
adc
mov
jecxz
mov
daa
adc
lds
arpl
into
mov
fdivrp
dec
jecxz
ret
pop
test
sahf
cmp
xor
clc
stc
popf
push
outsb
dec
outsl
jo
jp
lods
test
cmpsb
mov
fidivrs
sahf
cmpl
add
pop
mov
fistpll
add
mov
stos
add
inc
cld
shl
cmpsb
mov
gs
sbb
mov
cmpsl
push
mov
enter
popf
pop
xchg
or
xor
and
mov
mov
loope
outsl
push
arpl
pop
or
inc
jns
xchg
ljmp
or
rclb
or
mov
xor
sub
jno
scas
adc
loope
sbb
lret
mov
sti
push
cmp
add
repnz
loop
xor
popa
inc
and
inc
std
push
mov
push
mov
mov
mov
pop
movsb
xchg
out
test
mov
sbb
mov
jg
std
sbb
push
pop
cmp
daa
sub
je
sbb
outsl
pop
pop
loop
inc
test
lods
mov
imulb
xor
jle
push
pop
add
jg
inc
xchg
mov
cs
fcomi
inc
into
cmpsl
sub
out
adc
lret
jg
inc
stos
pop
mov
dec
mov
and
push
mov
adc
test
es
das
xor
fisttps
xchg
sbb
les
lods
enter
sbb
cmc
icebp
inc
pop
mov
insl
push
cmp
cmp
mov
jp
int
xchg
push
fs
cli
dec
leave
clc
or
pop
clc
ja
push
lods
push
dec
inc
xchg
sub
mov
fisttpl
das
pop
aad
ret
insl
pop
test
cld
insb
xchg
jo
add
cltd
pop
mov
cs
stc
jge
xchg
mov
pop
push
dec
inc
std
rcr
xor
lods
clc
jae
fistps
les
adc
test
sbb
or
add
shl
fcomps
lret
insb
arpl
subl
cmpsl
popa
push
sub
ret
ret
lods
xchg
ss
cmp
or
lcall
ret
inc
aam
clc
fwait
jge
pop
addl
dec
mov
pusha
aas
addr16
cmpsl
fldcw
mov
ljmp
add
icebp
mov
rolb
cmc
push
push
push
jle
jle
inc
sbb
inc
inc
mov
adc
push
cwtl
inc
lahf
jne
sbb
je
and
jle
fadds
jb
sbb
dec
rorb
inc
testl
loope
pop
clc
mov
jne
sbb
mov
sbb
or
inc
jo
aas
test
fwait
loop
cli
movsl
push
mov
or
cmpsl
dec
dec
fcoml
push
orl
arpl
jne
mov
rolb
mov
in
loope
sub
jmp
lahf
enter
xchg
xor
ljmp
call
dec
mov
lods
mov
mov
aaa
push
mov
jmp
xor
jo
shrb
pop
jmp
repz
mov
movsl
outsl
mov
ret
int3
into
xor
hlt
notb
lcall
sti
and
mov
jge
sub
faddp
decl
mov
inc
xor
mov
push
cmp
pop
loopne
inc
or
addl
leave
aam
pop
dec
or
shrl
lret
cmpsl
ss
jge
and
inc
jge
leave
inc
aas
out
popa
cmc
mov
dec
ret
or
mov
xor
test
sti
sbb
ret
enter
incl
mov
test
movsl
add
cmp
movsb
imul
frstor
adc
jl
insl
push
test
ret
cs
add
mov
cli
or
fsts
mov
cli
clc
pop
mov
outsb
xor
add
arpl
inc
mov
call
xlat
xchg
dec
inc
jmp
int3
cmpl
popa
jne
xor
clc
adc
mov
das
inc
cltd
jle
sbb
xchg
mov
mov
popa
fnstcw
dec
pop
xlat
sub
mov
js
adc
and
push
sbb
pop
ret
aaa
jne
xchg
xchg
ret
les
sbb
pop
pusha
and
sahf
jmp
jecxz
in
aaa
aad
or
mov
mov
and
push
in
inc
push
jl
xlat
pop
pusha
add
and
imul
or
out
mov
cs
pop
into
and
adc
shl
xchg
jecxz
sahf
out
jbe
mov
fisttps
popa
rolb
cmc
or
enter
iret
xchg
add
pop
iret
lcall
inc
or
aaa
icebp
xor
out
int3
fs
popf
cmc
ret
mov
test
mov
push
jge
fsub
jg
inc
pusha
cmp
or
jb
jno
andl
mov
push
sbb
lods
out
insb
adc
call
pop
pop
jp
adc
mov
pop
sbb
push
cmpsl
fidivrs
jp
aaa
cwtl
jnp
test
sub
push
lock
inc
inc
repnz
lods
outsl
sub
push
aaa
lods
out
adc
fwait
lcall
mov
or
dec
cmp
fisubrl
cmp
xor
rcl
jns
push
or
sub
push
add
out
mov
push
dec
fidivl
fwait
loope
and
stc
icebp
add
imul
lock
jecxz
jb
lahf
ds
xchg
add
imul
iret
mov
adc
imul
jl
pop
es
aad
ljmp
pop
xchg
rcrb
mov
dec
fisttps
repnz
imul
mov
sub
xchg
ss
jae
adc
jecxz
or
test
push
jbe
in
ret
adc
push
mov
inc
mov
in
or
mov
xor
insb
sbb
outsl
hlt
test
jle
mov
or
sub
leave
adc
pop
mov
sar
jg
inc
lods
dec
mov
xchg
mov
int
and
aam
or
mov
lods
mov
xchg
in
fildll
orl
addb
mov
push
or
insb
std
sub
cmc
mul
cwtl
in
sbb
ja
xchg
gs
insl
lods
cmp
cltd
int3
push
push
fbstp
shlb
mov
inc
jb
aas
xor
test
sub
pop
decb
jge
or
aaa
add
inc
call
mov
mov
addb
enterw
shlb
in
out
adcb
std
scas
mov
dec
repnz
push
xchg
pop
jmp
retw
fimull
clc
das
scas
movsb
lods
popf
repz
or
mov
sub
mov
mov
in
cltd
aaa
push
inc
jg
sbb
mov
nop
cs
sub
roll
push
out
ja
addl
and
insl
jge
std
jg
pop
movsl
pushaw
jg
push
in
bound
push
frstor
dec
ffree
inc
in
out
enter
clc
movsl
push
push
jns
sub
jecxz
popa
mov
adc
aaa
icebp
pop
movsb
pop
or
adc
add
sahf
inc
scas
and
outsl
jmp
shll
movsl
adc
out
adc
dec
xor
lea
fildl
inc
sub
test
push
pop
movsb
jno
testb
sarb
arpl
lea
incb
std
mov
dec
loopne
inc
test
xchg
in
dec
dec
jmp
push
or
prefetch
add
inc
and
inc
push
loope
imul
adc
sbb
mov
in
cld
mov
jg
sbb
out
push
adc
inc
mov
push
test
xor
popa
fldenv
jb
test
shl
cld
pop
ds
ds
dec
loope
cmpsb
mov
dec
cmp
mov
and
test
inc
xor
pop
dec
adc
or
rcrl
adcb
sub
jo
ud0
jl
mov
adc
roll
inc
rcll
in
jb
push
xor
pmaddwd
das
sub
xchg
sub
add
add
inc
fwait
xor
test
dec
jle
push
ret
loopne
gs
data16
in
fildll
hlt
call
scas
or
mov
cmc
lea
in
jp
orl
nop
call
inc
push
out
xchg
arpl
mov
pop
fldt
adc
repz
fmul
roll
movsl
mov
jmp
in
les
aad
repnz
pop
outsb
fimuls
fidivrs
aam
lods
add
test
or
pop
mov
add
subb
jmp
jecxz
push
sbb
test
lods
sub
xchg
push
add
adc
add
adcb
sub
jo
fimuls
lret
out
push
dec
ret
adc
decl
fbstp
jno
test
jecxz
mov
dec
pop
shll
xchg
add
xchg
pop
ljmp
add
ret
in
mov
jmp
test
xor
cltd
popl
adc
pop
mov
push
mov
xchg
repnz
jmp
dec
addr16
mov
jge
or
jle
leave
mov
ret
push
mov
pop
imul
clc
sub
pop
pop
lds
ror
scas
pop
sub
xchg
and
popf
insb
aaa
inc
add
adc
sbb
lcall
ljmp
loope
and
shll
pop
dec
push
repnz
dec
imul
call
test
rclb
add
sti
xchg
pusha
mov
add
adc
notl
xchg
lcall
mov
sbb
jae
and
add
push
xor
jne
sub
mov
loopne
mov
sbb
mov
int3
bound
out
and
mov
xor
jle
xchg
jle
add
push
popa
sub
addb
jbe
push
fistpll
adc
subb
and
subb
sbb
aas
enter
jnp
lea
into
fdivs
pop
push
push
cmp
or
mov
sub
sub
fdivr
pop
scas
cmp
test
or
add
sti
adc
mov
ret
rclb
rcl
push
stos
mov
insb
sbb
bound
loope
and
jmp
mov
neg
int3
pop
jg
ret
cmp
fdivs
inc
stos
popa
dec
adc
rcrb
ljmp
mov
mov
cld
fidivrs
mov
xchg
inc
jb
push
mov
in
sbb
xor
dec
lea
add
jecxz
inc
xor
sub
ret
out
pop
dec
addb
out
mov
imull
sbb
pusha
push
ret
testl
mov
dec
ja
ljmp
pop
clc
or
push
cwtl
inc
pop
or
popf
lret
test
inc
and
jecxz
and
test
movsb
cmp
sbb
mov
test
mov
push
push
clc
outsl
cltd
js
shl
rolb
inc
daa
sbb
test
in
adc
sbb
mov
inc
into
fisubrl
test
aad
sbb
mov
sbb
cmp
addr16
sub
cli
ret
in
dec
mov
sub
mov
mov
lret
add
push
outsl
and
dec
sub
lds
out
cmp
ret
ss
jle
cmp
outsl
adc
rcll
in
cs
push
pop
inc
xchg
or
xchg
fiaddl
inc
mov
jg
sti
xlat
and
rcr
fimuls
imul
fistl
sbb
mov
cmp
lock
aad
mov
je
jns
imul
inc
add
in
push
test
push
loop
or
pop
call
push
out
mov
pushl
mov
pop
dec
lds
mov
repz
outsb
jp
cltd
push
negb
std
sbb
test
clc
mov
divl
outsl
insl
push
std
mov
cmp
icebp
cmpsl
push
and
xor
xchg
ret
jb
call
xor
cmpsb
stos
enter
ret
scas
mov
mov
enter
push
mov
daa
mov
scas
cs
pop
push
dec
out
xor
jecxz
sti
sub
mov
in
pop
decl
aad
les
dec
push
mov
cmp
les
jg
sub
enter
pop
mov
mov
cmp
xorl
mov
movsl
test
xchg
fs
enter
mov
enter
cmpsb
mov
into
add
xchg
jg
lcall
push
and
cmpsl
in
and
mov
pop
mov
mov
jns
out
cli
in
jmp
xor
in
dec
hlt
mov
lds
push
or
mov
jg
loopne
mov
lahf
shrl
xor
aaa
sbb
jb
jp
sub
add
rcll
and
xor
xchg
call
push
fildll
inc
pop
push
pop
and
in
mov
stos
jg
jecxz
mov
clc
mov
fimull
push
imul
push
pushf
out
sbb
sub
in
sbb
pop
push
js
loopne
push
out
cmp
mov
mov
cmc
test
pop
inc
dec
jae
lret
add
mov
std
inc
jg
jl
in
adc
push
or
movsb
loope
push
loop
xchg
clc
xor
or
hlt
lds
xlat
pop
and
jo
sar
ljmp
and
mov
movsl
add
add
and
cmp
inc
test
add
push
and
pop
adc
push
inc
ss
mov
cmpsl
lcall
mov
inc
mov
incl
sub
xor
repz
mov
sub
in
or
dec
in
lcall
js
push
ljmp
cmc
gs
mov
fidivl
clc
adcb
and
nop
mov
dec
mov
iret
adc
and
mov
lret
xorl
cltd
adc
inc
ds
outsb
mov
repz
add
cmc
into
and
fmull
pop
loope
mov
mov
jne
mov
bound
mov
dec
push
mov
mov
fldt
rorl
pop
or
faddl
jo
sub
xchg
mov
xchg
sub
xchg
jne
jl
je
push
mov
mov
mov
add
movsl
pop
mov
inc
repnz
add
ss
mov
cmp
jp
adc
dec
cmp
mov
sarl
cmc
das
cld
push
mov
xchg
pusha
ds
pop
clc
xor
loopne
adc
cwtl
nop
mov
lock
outsl
sbb
mov
add
fdivl
mov
add
pop
fdivrs
test
push
inc
and
xorb
inc
in
pop
rorb
cli
mov
insb
popa
in
mov
stos
aas
clc
push
imulb
inc
fisttpl
push
int
jnp
stos
mov
cmp
mov
pusha
cmp
adc
and
cld
leave
mov
cmpb
inc
adc
pop
rorl
pop
clc
lret
rcrl
imul
out
sbb
adc
loopne
cmp
cmpsb
icebp
adc
popa
loopne
movsl
lcall
cmp
mov
pushl
test
xor
xor
and
jns
dec
cmp
cmp
sub
fstpt
inc
jl
jecxz
aad
pop
popf
adc
jo
jg
rcr
bound
inc
sub
push
jge
jge
xchg
je
roll
xchg
das
mov
cmpsl
test
fs
sub
into
push
roll
push
ljmp
roll
add
lret
pop
adc
xor
mov
in
xchg
xor
push
fwait
incl
pop
int
jo
clc
into
loop
push
leave
pop
rorl
test
or
pop
pop
cld
add
mov
fidivl
push
adc
fldt
aad
jnp
movsl
test
les
cltd
sbb
or
pop
mov
xor
or
and
mov
rcrb
xor
imul
lods
add
lret
jne
mov
call
add
push
mov
fcompl
into
aam
outsl
sub
jmp
aam
pusha
push
xchg
push
or
rclb
cmp
inc
pop
cld
repz
sub
imul
sbb
sti
cmp
push
push
movsl
mov
cli
test
lcall
decl
xorb
popl
daa
loop
ds
lods
dec
in
inc
sub
ret
dec
sub
stos
xchg
jb
test
mov
outsl
punpckhwd
pop
jp
and
mov
call
rclb
cmp
cltd
aad
test
mov
loop
loope
xor
add
inc
insl
call
pusha
mov
shrb
and
jbe
movsl
int
xor
mov
mov
arpl
inc
pop
push
mov
push
fldt
insb
or
pop
scas
push
lahf
and
out
mov
fldz
dec
sbb
lods
lahf
mov
cmpsb
push
fs
clc
or
in
daa
cmc
test
adc
jge
out
jb
inc
push
push
lds
inc
xor
push
pusha
ucomisd
inc
notb
sbb
icebp
or
add
or
jbe,pn
scas
sbb
outsl
mov
push
add
lahf
or
add
cmpl
add
jnp
je
aaa
stos
inc
ja
or
fisttps
fistl
xchg
sbb
inc
leave
add
out
xchg
mov
xor
cmc
push
mov
out
pop
or
mov
cmp
mov
cld
fcmovnb
lret
and
push
and
sub
mov
les
adc
in
cmpsb
inc
pop
daa
xor
mov
add
jbe
cltd
adc
inc
cmpsb
gs
rorl
scas
sub
imul
cld
xor
xlat
inc
add
call
jno
push
mov
pop
jl
nop
icebp
icebp
jnp
cmpsl
movsb
add
add
call
mov
xchg
sub
push
sar
inc
mov
test
test
mov
mov
adc
lods
sbb
imul
mov
or
and
mov
shll
cmpsl
ja
jle
nop
adc
mov
and
adc
mov
cmpsb
dec
popf
lds
or
or
push
fcomp
loop
pusha
aas
ret
loope
dec
mov
jo
les
sbb
lods
pop
dec
jg
xor
cs
mov
mov
xchg
nop
pop
mov
addl
lods
lock
adc
or
mov
add
adc
push
enter
mov
cmp
xchg
orb
xchg
add
loope
and
jg
adc
and
jge
and
std
sti
push
incb
insb
and
sub
stos
pusha
mov
icebp
push
aam
ja
scas
loope
push
ds
mov
inc
sub
add
inc
insb
dec
push
imul
pop
mov
test
testb
fists
sbb
out
repz
in
jge
popf
inc
cmc
in
pushl
sahf
mov
pop
andl
stos
mov
push
cs
sahf
jl
dec
popf
push
ds
leave
add
sbb
or
add
rcrb
sbb
decb
js
lret
cltd
cli
in
add
dec
and
pop
loop
es
shl
outsb
push
es
loopne
in
jg
or
lds
aad
dec
insl
sbbl
push
out
outsl
test
inc
je
cltd
jg
mov
inc
pop
loope
jb
int
aaa
xchg
inc
rcrb
push
les
popa
sbb
sarl
lock
dec
sbb
and
xchg
push
jb
or
outsl
mov
cmp
dec
add
clc
daa
mov
popa
mov
cmp
loopne
dec
adc
push
push
push
cmpl
pop
aaa
fisubrl
mov
cmp
pop
fwait
movsl
sub
add
loopne
pop
enter
push
mov
add
out
ljmp
push
adc
test
out
jmp
cmp
ljmp
data16
and
cmp
test
call
sub
add
add
mov
je
test
pop
movsb
dec
fiadds
xor
dec
out
sub
sub
icebp
aaa
mov
rcll
mov
stos
xchg
sub
hlt
jbe
loop
movsl
xchg
sub
mov
and
repnz
popa
outsl
or
call
iret
pusha
dec
arpl
push
sub
sbb
ja
scas
sub
pop
sub
ret
jge
adc
jbe
mov
sahf
in
and
mov
aaa
enter
das
xchg
inc
adc
pop
fidivl
test
cmp
cmp
push
inc
daa
mov
and
xchg
and
fsts
lcall
inc
xor
mov
cmp
or
dec
inc
orb
or
adcb
jl
xchg
mov
mov
scas
xchg
adc
test
outsl
jg
push
inc
adc
insl
xor
icebp
jge
add
pushf
add
repz
je
push
das
mov
je
call
inc
inc
sbb
rclb
sbb
shr
push
mov
xor
inc
jmp
insb
pop
jl
adc
mov
sahf
push
pop
add
cwtl
and
push
mov
pop
cs
nop
test
in
pop
aaa
mov
mov
clc
adc
push
pop
and
inc
repnz
pop
push
clc
jmp
sbb
pop
imul
aam
mov
cltd
enter
cwtl
fldl
mov
mov
and
pop
test
cmpsb
mov
rorl
mov
inc
outsl
outsl
sub
jge
sahf
cmp
add
inc
roll
sbb
fisttps
lahf
cmp
pushl
cmp
xor
inc
in
adc
rcrl
insb
pop
movsl
adc
in
pop
mov
sub
adc
sub
or
mov
add
aam
jg
fadds
mov
lods
int3
xchg
leave
mov
insb
adc
jno
jo
pop
adc
mov
pushl
push
adc
rcll
mov
adc
lods
loopne
adc
cmp
xor
dec
pushl
insl
cmp
jne
add
and
pop
outsl
fistl
inc
fidivrs
out
mov
mov
shll
aaa
pop
clc
dec
ljmp
or
sbb
pop
add
mov
mov
cmpsb
into
stos
add
pop
sub
enter
push
mov
js
cmpsb
lock
pop
fildl
test
lods
popf
loopne
lea
push
mov
nop
rorl
rcrb
sub
adc
ja
sti
cmp
mov
inc
jle
sahf
test
push
sub
mov
sub
incl
sbb
mov
xor
inc
mov
jl
push
fwait
inc
shr
rorb
sub
mov
jmp
jbe
andb
loop
push
cmp
incb
or
pop
sub
adc
lods
ljmp
ret
fistps
dec
adc
ds
jecxz
aas
pop
ret
mov
loop
lcall
arpl
lods
jg
pushl
push
mov
cmp
and
sbb
call
mov
cmp
add
jbe
xlat
cmp
imul
sub
push
pop
clc
mov
adc
outsb
sbb
ds
pop
mov
icebp
sbb
rclb
int3
dec
out
and
aad
outsb
mov
jne
lahf
or
and
dec
jp
lahf
decl
jg
push
je
test
sub
jl
repnz
push
inc
adc
mov
inc
sbb
sbb
xorb
mov
lods
movsl
mov
push
mov
pushf
repnz
and
inc
dec
mov
mov
and
inc
lods
imul
cmpb
xchg
cli
es
mov
int
iret
inc
mov
push
dec
test
test
pop
out
imul
pop
cld
sbb
leave
dec
mov
jae
pop
fcomip
mov
addr16
mov
or
xor
loope
inc
scas
cld
mov
inc
sbbb
adc
pop
pushl
add
xor
in
and
loop
sbb
sub
add
xchg
in
or
push
movsl
cltd
sbbl
pop
dec
rolb
inc
xor
cmp
xchg
lcall
add
jle
or
rcl
cs
lcall
mov
das
xor
push
xor
jg
iret
mov
daa
cmp
mov
cs
stos
nop
jne
hlt
jg
mov
cli
pop
rcrl
mov
mov
lods
aaa
lock
sbb
lock
cld
sahf
mov
sbb
push
xor
push
mov
dec
mov
dec
pop
add
inc
cmp
rcrb
mov
and
push
push
fildll
bound
lcall
mov
cmpsb
lods
cs
dec
adc
test
dec
inc
sbb
or
imulb
fiaddl
and
cmp
ljmp
cld
lea
pop
popf
dec
jmp
xor
adc
pusha
inc
inc
xor
push
xchg
push
mov
lock
lods
adc
cmp
in
das
pusha
dec
cmp
mov
xlat
adc
inc
not
xchg
mov
mov
out
rcrb
mov
notb
xor
cmp
inc
lods
pop
mov
test
cmpsb
xlat
mov
inc
or
push
add
out
cli
and
sbb
dec
rorl
xchg
cmpsb
cmp
push
mov
xorl
pop
daa
or
mov
inc
iret
add
enter
xchg
cli
dec
cld
adc
call
aaa
cs
dec
das
out
outsl
popa
push
jmp
out
cmovo
neg
lea
mov
pop
sbb
loop
loop
push
cmc
stos
jl
sub
mov
add
dec
movsb
ja
mov
sub
xchg
and
lods
dec
decl
push
sub
shl
das
add
inc
stos
mov
test
pop
test
mov
xor
leave
loopne
sub
loopne
mov
clc
mov
cmpsb
jb
sub
clc
jp
or
pushl
ds
cmp
mov
or
sbb
mov
testl
lea
mov
dec
jo
icebp
cmp
cmp
sbb
mov
test
push
jp
daa
add
mov
inc
cmp
sub
xchg
add
outsb
hlt
aam
xor
cmp
lcall
out
lcall
repnz
or
fistpll
in
adc
inc
out
aaa
jl
dec
xor
xchg
subb
stos
mov
mov
lea
cmc
pop
mov
lock
ret
push
and
clc
test
icebp
inc
and
mov
addl
addr16
out
pushw
mov
into
icebp
jne
xor
in
ljmp
inc
jle
ret
nop
or
int
dec
outsl
cwtl
push
dec
mov
inc
jnp
cmp
pop
dec
call
cmp
add
jnp
inc
jno
xchg
sub
test
dec
pop
fildl
cli
lods
or
sbb
mov
movsb
push
push
repnz
bound
push
aad
jbe
jecxz
mov
mov
clc
dec
loopne
push
xor
xor
jp
lods
sbb
adc
inc
mul
test
fs
lea
shlb
xor
jg
or
fadds
push
sbb
ja
fnstsw
mov
jnp
pop
aad
cmp
test
pushf
sub
add
dec
insl
fs
inc
push
xor
lea
jp
enter
js
xchg
mov
or
fadds
adc
outsb
std
push
sbb
repz
sub
mov
ljmp
pushl
pushf
addr16
cmp
jle
add
add
jmp
popf
mov
mov
jl
jo
ja
testb
aam
add
loopne
or
in
adc
jnp
out
pusha
jo
inc
icebp
sbb
jnp
xor
pop
mov
or
idivl
movsl
jg
push
loope
mov
fsubrs
sti
jnp
test
push
mov
jmp
mov
or
mov
sbbl
and
hlt
fwait
aas
call
sahf
orb
aas
cmp
mov
fsubrs
std
mov
and
mov
and
incl
iret
stos
inc
jecxz
sbb
add
clc
or
pop
clc
jg
mov
lahf
xchg
sub
jge
dec
add
lds
js
xor
pop
js
shrl
test
sbb
and
outsb
rcr
jl
push
mov
rorl
push
pop
stos
jae
and
pop
push
or
in
adc
call
inc
das
add
mov
aam
mov
push
mov
add
ljmp
add
and
or
sbb
pusha
data16
aaa
divl
add
mov
mov
dec
sbb
jbe
add
aaa
inc
jnp
fcoms
cltd
sahf
or
std
fists
pushf
js
xor
int
out
test
outsl
decl
sub
and
push
mov
cmp
and
add
test
and
pop
add
or
xchg
cld
jns
adc
ficoml
fcmovnu
sarl
jg
and
mov
xchg
jno
in
mov
cld
mov
dec
dec
cld
or
dec
dec
loopne
mov
dec
or
jle
pop
pop
jne
aam
idivb
inc
push
adc
push
jmp
loopne
jne
clc
inc
dec
mov
pop
dec
pop
mov
jnp
push
testb
push
and
and
mov
inc
push
push
add
repnz
push
cs
loop
dec
mov
mov
adc
sbb
and
pop
xchg
push
inc
or
mov
cs
push
andb
imul
test
inc
jbe
sbbb
pop
clc
stc
cmp
insb
or
mov
stc
adc
insl
dec
mov
adc
adcl
sub
daa
int
sti
mov
push
mov
add
xchg
lods
add
and
pop
pop
pop
fisubrl
or
add
ja
aam
int3
sub
stos
mov
push
xchg
add
rorl
outsl
icebp
ljmp
mov
cwtl
fildll
inc
imul
mov
xchg
and
bound
xchg
rolb
push
jno
cmp
fld
xchg
sbb
sti
adc
cmpsb
jle
xlat
xor
testb
bound
loope
aad
jbe
movsb
inc
aam
int
push
jae
push
adc
out
fsubr
cmpsb
movsl
movsb
stc
adc
sub
inc
push
movsl
in
cmpb
jg
outsl
test
divb
lret
or
sti
outsl
sub
cs
in
in
cmp
mov
xchg
jecxz
imul
jbe
jecxz
roll
and
push
movsb
inc
fsub
xchg
adcl
sub
push
mov
icebp
adc
mov
adc
add
mov
mov
pop
inc
sbb
jmp
into
mov
out
dec
inc
mov
lods
add
pop
aam
jg
inc
lods
mov
jno
xor
push
add
add
pop
fisubrl
stc
or
mov
out
aas
lods
inc
mov
mov
lock
les
cltd
lods
sbb
shlb
xchg
std
call
outsl
paddsb
dec
push
lret
in
mov
cld
std
add
mov
mov
mov
cmp
test
push
les
add
xchg
push
mov
jne
sbb
jbe
inc
mov
cmp
cmp
adc
mov
push
pop
inc
test
int
mov
inc
pop
jg
mov
jbe
stos
fldenv
mov
sbbl
pop
movsb
std
outsl
clc
jg
fs
or
cltd
int3
inc
mov
int
cli
mov
cwtl
test
push
aaa
xchg
in
movsb
sub
outsl
add
cmp
in
lods
or
outsl
adc
in
pop
ds
mov
sub
movsb
lret
decb
fldt
and
push
in
adcb
stos
lcall
test
mov
mov
sub
lret
ljmp
aad
sub
mov
or
int3
adc
mov
or
push
idivl
push
cmp
inc
popf
push
jp
bnd
cs
cmp
mov
inc
adc
test
test
jle
aam
mov
jl,pt
adc
or
dec
lret
jl
mov
cmpb
ljmp
push
jge
sub
adc
xchg
js
or
test
call
mov
add
fwait
daa
in
push
inc
ds
and
mov
mov
sub
push
sar
xchg
and
cmp
pop
mov
fwait
add
xor
cmp
xchg
xor
rcrb
and
jle
pop
nop
dec
es
xor
sti
out
push
add
and
cmp
cli
and
mov
pop
push
ljmp
pop
mov
in
mov
fidivrs
mov
sub
outsl
sarl
mov
add
mov
and
imul
fiaddl
jo
addr16
mov
pop
clc
mov
cmp
inc
push
jmp
dec
xor
aad
das
xchg
inc
xor
incb
pop
dec
lea
adcl
pop
mov
ljmp
sub
cmpsl
push
adc
or
popa
xchg
push
cmp
fmuls
dec
push
pop
mov
incl
xor
xor
jle
xchg
shl
dec
mov
pushf
dec
adc
mov
or
mov
repz
jecxz
push
inc
sbb
mov
sbb
in
or
stc
fadd
or
pop
jl
and
pushf
sbb
mov
dec
add
mov
push
push
mul
mov
sub
gs
mov
ret
jge
sub
scas
sub
add
xchg
jg
pop
mov
and
arpl
insb
xor
mov
fs
lcall
dec
inc
xchg
popf
mov
pop
inc
mov
mov
pop
dec
adc
cmc
scas
inc
sub
aas
jmp
sub
dec
ds
push
cmp
sub
cmc
ffreep
ds
sbb
sti
or
xorl
lock
in
mov
clc
dec
sbb
push
add
mov
push
mov
or
pop
data16
dec
js
and
rcll
jbe
xor
aas
mov
mov
dec
aam
xor
or
xor
cwtl
rolb
call
jg
xchg
inc
xchg
out
push
aaa
or
nop
and
jo
icebp
bound
mov
les
imul
xlat
jl
fimull
cmpsb
fnstenv
or
outsb
inc
mov
jo
mov
fsubl
fadds
mov
stc
mov
repnz
add
sub
sar
jb
and
lds
lock
filds
lock
or
test
clc
xchg
add
icebp
lret
hlt
stc
idiv
inc
push
push
jle
fcomip
pop
loopne
fiaddl
push
push
mov
mov
loopne
mov
imul
pop
nop
pusha
aas
and
movsl
cs
jns
rorb
mov
adc
fisubs
or
adc
mov
lock
jg
push
in
xor
mov
cltd
lea
pop
cmp
sub
loop
jno
and
adc
shl
or
shl
and
inc
and
adc
sub
in
rcl
stos
push
sub
test
pop
scas
pop
mov
or
mov
aaa
sbb
dec
aaa
ror
jne
mov
call
cli
mov
inc
adc
and
jns
push
inc
jecxz
sbb
dec
jno
fisubl
pop
arpl
ret
jg
mov
xor
xchg
cmpsb
mov
fldcw
std
push
and
movsb
stos
std
mov
push
dec
push
into
adc
push
xchg
push
mov
test
sbb
mov
or
lock
arpl
sbb
cs
das
nop
jns
add
ffreep
fistl
inc
rorb
sub
sub
xchg
and
pop
in
ffreep
in
xor
pop
cmp
mov
cmp
mov
fdivr
push
sbb
pusha
dec
and
inc
mov
and
aaa
fcmovnbe
leave
or
jbe
cmpsl
jmp
hlt
adcb
add
decb
loop
push
dec
mov
and
and
cld
retw
push
iret
popa
flds
stos
xor
dec
sub
test
sbb
call
and
mov
adcb
push
imul
mov
mov
push
mov
pop
sbb
outsl
std
add
jb
out
aas
push
push
bound
out
dec
jecxz
loopne
jg
lods
sahf
adc
inc
lret
popf
cmpb
lods
and
popa
and
mov
aaa
jle
pop
xor
imul
hlt
adc
std
or
arpl
mov
xchg
dec
dec
sbb
addb
in
lea
adc
add
movsl
jecxz
into
dec
pop
and
add
into
or
push
imul
mov
call
mov
dec
lcall
aaa
outsb
adc
pop
mov
xor
and
insb
dec
insl
sub
jg
cmpsl
cltd
mov
cs
jb
push
insb
xchg
jb
jp
pop
mov
cmc
add
out
push
sti
lods
xor
lcall
mov
xor
inc
adc
pop
aad
sub
inc
stc
pop
or
lods
push
cmp
popa
push
inc
cmpsb
push
and
adc
or
fs
mov
rolb
jno
cmp
xchg
loopne
lds
aas
sub
call
lds
mov
add
cmpsb
and
ljmp
clc
jl
cmpsb
mov
mov
shlb
mov
inc
out
jns
mov
popf
sbb
test
arpl
and
add
xor
je
sahf
push
sub
test
push
and
outsl
incl
pusha
enter
pusha
jge
sub
jmp
push
inc
pop
mov
lock
jmp
push
lret
aad
out
fdivrs
xchg
outsl
movsl
js
fs
inc
ljmp
pop
std
cmp
dec
mov
subl
add
xchg
into
fnstenv
mov
outsl
ds
aas
mov
adc
sbb
xchg
fldt
xor
or
or
and
lock
or
lret
ret
push
xchg
xor
xor
cmp
arpl
int
jge
dec
mov
jno
shl
test
dec
pop
stos
jns
hlt
in
call
loop
addr16
cmc
cs
mov
inc
mov
lock
cltd
out
xchg
adc
iret
inc
dec
jae
jbe
adc
lcall
mov
adc
cmp
fbstp
outsl
fcoms
sub
shll
lock
add
and
xchg
pusha
xor
jae
xor
lods
mov
push
jno
push
cli
pop
int3
ret
mov
dec
sbb
rcll
enter
xchg
sub
shlb
scas
inc
aas
mov
dec
incl
pop
fsubs
mov
xchg
popa
lock
incl
sub
mov
int
or
or
sub
sub
mov
cmc
pop
lret
hlt
jns
push
fdivl
outsl
cld
cmp
jns
push
scas
outsb
nop
add
loopne
mov
and
xorb
push
mov
les
mov
test
mov
pop
shl
inc
or
jb
fwait
jb
push
subl
fs
ret
cmp
orb
mulb
push
stos
incb
mov
mov
mov
andb
pop
sbb
sar
mov
nop
sbb
dec
test
mov
dec
push
jbe
or
pop
clc
mov
movsb
cld
jmp
xlat
add
and
sub
lret
mov
into
repz
cli
xorl
daa
cmp
xchg
push
mov
movsl
and
mov
icebp
decl
push
mov
hlt
and
jge
fs
sbb
cmp
cs
add
outsb
cmc
mov
sbb
nop
pop
cmpsl
push
xchg
mov
sub
sub
movsb
xchg
in
inc
pop
aaa
cli
lahf
iret
ficoms
in
leave
fistps
xchg
pop
call
add
jns
xor
aam
jno
or
add
loop
or
add
lahf
xorl
xchg
xor
outsl
rcr
dec
cmp
jae
sbb
mov
xor
mov
pop
test
in
mov
mov
mov
test
sub
sbb
xchg
sbb
push
sub
dec
pop
inc
fwait
sti
inc
das
mov
cmp
fistpl
testl
push
lcall
mov
leave
lods
pop
in
push
mov
imul
fisttpl
bound
inc
mov
pop
adc
jnp
mov
jbe
std
push
mov
xor
dec
cli
mov
and
mov
or
add
pop
mov
imul
or
clc
negb
push
sbb
das
out
outsb
cli
stc
ss
push
std
stos
mov
cmc
icebp
cmp
jmp
adc
shlb
cld
jg
jb
or
or
jmp
jb
push
fcmovbe
icebp
mov
jae
jl
insb
data16
xchg
outsb
push
cli
adc
repnz
sarb
pop
xchg
and
dec
add
pop
xor
mov
andb
mov
fistpll
movsb
sbb
outsl
xchg
dec
push
leave
xor
inc
push
lcall
aam
andb
mov
addb
loope
pushf
xor
test
sar
stos
js
shrb
ljmp
cmpsl
stos
rol
sti
decl
xchg
roll
mov
in
div
add
and
sti
out
dec
sarb
inc
jle
outsl
dec
sarb
les
idivl
stos
out
fsubrp
mov
or
int
push
jg
test
loope
inc
or
lods
scas
mov
test
cmp
test
rorl
insl
rorl
mov
mov
fs
mov
in
mov
cmc
shrb
shlb
pop
sub
adc
dec
mov
push
inc
inc
push
dec
pushf
lahf
pop
and
movsl
nop
andl
or
add
cli
xlat
mov
cld
adc
pop
mov
jno
scas
jg
dec
cmp
xor
and
mov
push
mov
xor
add
dec
stos
adc
aad
push
dec
inc
jo
cmp
pop
push
cli
ss
scas
popa
adc
loopne
shl
cmp
push
or
fisttps
and
cmp
cmpsl
adc
cld
incl
xor
js
push
ficoms
xchg
mov
clc
ljmp
push
enter
push
add
dec
pop
fs
mov
orl
and
xchg
add
xchg
pop
xchg
mov
xor
ljmp
xorb
xor
adcb
adc
or
das
in
dec
mov
pop
bound
sub
mov
orb
inc
push
gs
jg
clc
push
inc
xchg
xchg
sub
xchg
pop
jge
mov
cmpsb
cmpsb
popf
cwtl
pop
cmpsl
stos
mov
movsl
fsubrs
lods
adc
gs
and
cmp
into
dec
mov
adc
mov
xchg
clc
push
mov
dec
dec
lea
mov
daa
push
cmp
adc
pop
in
and
xlat
dec
jg
cld
fldl
jo
cmpsl
lock
daa
xor
pushl
add
icebp
jp
adc
ss
or
mov
mov
jb
sub
push
mov
cmp
adcb
out
movsl
repnz
mov
fstpt
cmc
mov
push
and
pop
add
mov
lret
test
jecxz
icebp
nop
inc
std
lcall
pop
cmp
mov
hlt
jecxz
or
jns
mov
inc
jge
inc
cmpsb
test
in
nop
pop
mov
pop
dec
lds
mov
adc
in
fnstsw
mov
jl
stos
push
mov
mov
jg
add
jns
fnsetpm(287
mov
jp
iret
lret
lds
pop
call
mov
inc
clc
mov
inc
sub
ret
mov
add
or
addl
mov
sbb
ret
fwait
sarl
lahf
fsts
mov
loopne
repz
test
orl
das
mov
pop
or
inc
addr16
pop
aas
jo
jo
cmp
clc
and
jle
cmp
adc
nop
add
addr16
push
inc
mov
stos
das
fisttpll
std
push
xchg
js
xchg
and
decl
push
adc
mov
fucomi
add
test
pop
mov
enter
dec
scas
aam
pop
std
add
or
lcall
icebp
push
pop
ds
jns
mov
jl
xchg
es
xor
mov
pop
lcall
movsb
cs
xor
inc
sti
scas
sbb
jns
adc
pop
jo
add
aas
test
push
into
dec
enter
add
stc
mov
call
inc
xlat
fcomp
sahf
or
dec
push
jp
or
das
out
dec
xlat
clc
scas
push
mulb
std
ja
xor
mov
jge
jb
mov
xchg
push
aad
or
and
jecxz
dec
ja
repz
mov
in
adcb
test
push
leavew
fildll
xor
daa
mov
xor
add
push
movsl
clc
push
inc
lcall
rcrb
shr
cmpsl
add
add
xor
dec
adc
adc
mov
arpl
rorl
pop
xor
cmp
ss
jb
sti
scas
cmp
adc
fimuls
sar
mov
xchg
inc
jl
adc
andl
imul
ljmp
sub
push
inc
mov
shlb
jns
or
push
sub
aad
mov
lret
push
pushl
or
pop
inc
or
adc
sub
sub
and
hlt
pop
fldl
inc
fwait
test
push
lret
sti
aaa
fidivl
sbb
push
mov
les
xchg
cwtl
call
or
mov
pop
stos
inc
sbb
std
mov
jecxz
jg
lea
or
in
mov
adc
add
das
mov
fs
add
decb
mov
and
mov
ja
hlt
mov
dec
adc
dec
mov
adc
fsubs
cltd
movsl
cltd
add
add
push
sbbb
push
hlt
push
push
add
call
shrl
pop
inc
push
outsl
aaa
mov
and
cwtl
or
fcmovne
inc
repz
xchg
orb
pop
cmp
iret
std
cs
outsl
cld
test
popf
scas
xchg
stos
stc
inc
addr16
mov
loope
aas
add
add
sti
cmp
orb
mov
data16
jmp
push
mov
cmp
mov
cmp
arpl
dec
sbb
in
fidivrl
xor
add
sub
lods
xlat
push
cmp
cmp
push
cltd
sub
xchg
mov
fs
mov
sub
add
sbb
les
roll
cmp
cs
adc
push
xchg
push
inc
leave
cli
push
mov
cli
incb
call
adcl
or
add
pop
js
lods
das
mov
inc
dec
rcll
loop
cwtl
loop
fisttps
jnp
addl
mov
scas
and
lret
push
mov
mov
ds
cmp
ds
test
jle
ljmp
je
sub
mov
inc
mov
xor
adc
add
filds
test
xchg
test
and
fldenv
mov
movsl
loopne
cli
adc
dec
and
cmpsl
push
pop
pop
cwtl
pop
out
loop
sub
sbb
inc
rclb
jle
test
ret
jmp
or
pop
pop
mov
mov
mov
cli
push
or
lods
fdiv
into
xchg
mov
pop
push
cltd
enter
std
and
mov
or
sbb
ljmp
adc
push
lock
lahf
adc
out
push
or
xchg
cmp
jno
mov
inc
popa
mov
mov
mov
lret
rol
mov
lock
inc
punpckhbw
push
js
mov
loope
mov
dec
rcrb
pop
lods
stos
pop
adc
ffree
jg
xor
pop
test
push
jmp
lods
lea
pop
rolb
clc
jno
mov
fiaddl
push
cmpsl
or
sub
lods
push
test
inc
inc
push
lret
mov
sbb
xchg
push
inc
push
das
cmc
in
mov
test
xor
inc
mov
dec
js
inc
imul
imul
dec
subb
jbe
sbb
add
and
xor
inc
pop
outsb
sub
loop
stos
add
pop
das
or
xlat
lds
sbb
addr16
jns
daa
jbe
mov
pop
pop
clc
inc
or
mov
out
sarb
pop
or
xchg
mov
in
pop
sub
test
pop
dec
popf
sbb
je
pushl
dec
arpl
xchg
pop
jg
push
cmpsb
lds
cmpsb
jb
mov
movsl
test
push
stos
xlat
push
push
push
dec
inc
pop
dec
jecxz
push
sub
aaa
fisubs
cmc
out
adcl
test
push
dec
shrb
pusha
sub
ljmp
xor
ljmp
movsl
andb
mov
lret
cmc
sbb
ficoms
movsb
loope
adc
dec
add
mov
dec
sbb
or
sbb
push
mov
push
dec
add
icebp
pop
cli
push
xchg
xorl
lods
int
xchg
stos
pop
sub
sub
loope
jg
or
orl
sbbb
pop
ret
jle
ficoml
inc
testb
inc
xor
push
mov
push
xor
leave
not
pop
push
in
test
fadds
or
mov
mov
cli
dec
mov
or
push
mov
lock
pcmpeqw
dec
enter
jo
cmp
nop
push
imul
dec
imul
xor
addb
mov
in
jl
idiv
out
or
jl
lahf
push
test
and
enter
push
lods
lds
rorl
push
cltd
pop
jmp
das
mov
sbb
popf
sub
icebp
data16
push
pop
xchg
and
mov
addb
jo
push
pop
lea
add
push
cli
sbb
adc
mov
ret
push
push
stc
mov
mov
shll
inc
mov
xchg
ficoms
cmp
adc
arpl
andl
adc
xor
sbb
test
and
adc
jle
stos
mov
in
sbb
push
mov
pop
loopne
ljmp
mov
mov
pusha
hlt
mov
outsl
std
call
xchg
or
cmpsb
orl
dec
addr16
movsb
add
xor
add
lea
inc
in
mov
ret
or
outsb
aad
and
je
adc
xor
insl
icebp
enter
incl
insb
fimull
inc
xchg
xchg
push
inc
jb
inc
scas
test
adc
mov
scas
shrl
repz
lds
insl
pop
mov
lcall
cmp
push
adc
in
push
and
insl
mov
leave
cwtl
aam
fsts
adc
aaa
mov
bound
pop
sbb
dec
ljmp
xor
std
pushl
clc
leave
adc
fimuls
inc
push
fsubp
andb
xlat
cs
sbb
adc
movsl
subb
ljmp
ret
mov
enter
rcll
pushl
xor
sarl
sbb
and
sar
shll
outsl
insb
push
test
subl
sbb
xor
aad
lods
jns
aas
ja
inc
incl
insb
and
popl
xor
lret
andl
shrl
mov
or
call
arpl
mov
leave
inc
aas
fldl
in
sbb
cld
ja
mov
jg
js
push
sbb
push
mov
scas
sbb
lods
leave
mov
mov
mov
hlt
mov
jb
loope
or
inc
add
adc
xorl
fistpl
and
or
loope
test
es
rorb
push
movsb
orl
in
jge,pn
stc
adc
int3
jno
cli
outsl
rorl
add
or
shlb
call
cmp
push
xchg
repnz
cli
adcl
testb
sbb
sbb
add
ret
xor
lods
loope
push
adc
mov
cmp
sti
push
addps
inc
or
push
lock
lcall
cld
pop
cmp
fsub
into
mov
add
mov
incl
sub
mov
jl
cmp
ljmp
stos
pop
into
inc
bound
and
mov
mov
ret
outsl
pop
mov
incb
add
lods
sub
repz
out
jmp
lcall
loope
push
dec
adc
inc
hlt
lods
and
inc
cmp
daa
in
mov
test
xchg
jp
daa
mov
int3
aaa
sub
lock
std
push
mov
sub
push
or
xchg
int
adc
adc
add
ljmp
mov
and
mov
hlt
adc
nop
mov
loopne
add
inc
ffreep
push
lcall
jg
jbe
rolb
mov
bound
rclb
stos
push
fistpll
inc
data16
insl
iret
ds
dec
inc
test
jmp
call
dec
mov
mov
mov
rorb
and
pop
sti
cmp
push
push
mov
pop
es
outsl
rorb
lds
inc
mov
and
xchg
sub
inc
loop
mov
add
adc
xchg
popa
jmp
dec
aaa
ss
std
outsb
shll
push
shll
pop
cmpb
inc
mov
es
clc
movsl
or
addb
xorb
pop
adc
push
pop
mov
ljmp
lock
jg
jge
stc
call
data16
jno
scas
inc
push
lods
subb
fwait
clc
je
lock
mov
js
jge
push
pusha
out
loopne
call
bound
divb
mov
push
xor
and
scas
xor
scas
mov
dec
rol
mov
fistl
data16
and
or
ds
js
movsl
pop
leave
bound
sbb
fsubl
outsl
pop
js
std
lods
and
jle
shr
sti
ret
or
jb
daa
in
xor
mov
call
jmp
out
dec
rcrb
loop
sti
jo
cmp
ret
dec
fcmove
int
inc
inc
pop
clc
jmp
aas
cld
out
xchg
out
ljmp
in
and
es
cmpsb
bound
sub
jae
test
sub
pop
rorl
jmp
outsb
mov
sbb
fldl
lcall
mov
int3
sbb
and
lcall
call
inc
dec
mov
sbb
js
cltd
inc
jns
dec
leave
mov
ret
mov
xchg
sub
jo
mov
sbb
cltd
sbb
gs
jge
inc
je
jp
cmp
pop
and
roll
test
sbb
aaa
and
test
stos
cmpsl
jno
jo
sbb
or
pop
cli
mov
in
jmp
idivb
stos
loope
jg
loope
push
jl
adc
out
xor
sahf
cld
push
xchg
loopne
sub
dec
dec
or
adc
cmc
mov
je
mov
sti
inc
fstps
jae
ljmp
pop
fs
inc
jo
pop
std
ret
es
adc
out
add
and
fists
stos
mov
xor
mov
ja
xchg
sub
test
lret
jg
dec
or
bound
mov
das
mov
and
push
xchg
mov
out
call
inc
jno
scas
sbb
cli
stos
rorb
sub
inc
ss
lcall
call
pop
in
mov
add
lock
iret
dec
adc
add
movsl
cmp
adc
hlt
xchg
incl
test
xchg
sarl
and
in
jmp
fwait
gs
les
lcall
loop
stos
and
fcoms
andl
cmp
testl
fisubrl
or
cmpl
out
test
mov
and
mov
test
push
andb
in
incl
mov
jge
and
sahf
push
and
xchg
fiaddl
int3
mov
cltd
pushf
cmp
cmp
sub
jg
mov
mov
xchg
jns
sbb
loope
call
inc
and
clc
lods
and
add
std
jl
sub
xor
xor
aad
jae
mov
sahf
pop
jb
sub
and
inc
mov
push
push
inc
inc
mov
dec
inc
incl
or
sbb
stos
xchg
mov
fcmovne
scas
mov
pop
rolb
xor
jbe
and
std
aaa
fisttpl
dec
aam
add
insb
lret
cli
or
push
push
stos
fistps
mov
ss
pop
mov
call
cli
push
or
bound
inc
sahf
mov
cmpsl
inc
je
std
push
sarb
mov
cli
xchg
addl
test
in
icebp
mov
clc
pop
and
push
dec
push
in
in
fsub
and
mov
je
das
add
mov
and
lods
std
jg
inc
adc
xor
mov
mov
daa
ljmp
adc
mov
pop
and
pop
sub
lea
jg
or
mov
cmp
into
lahf
out
mov
call
mov
push
fs
adc
sbbb
decl
shl
jb
imul
dec
out
inc
push
mov
hlt
lcall
aas
pop
rorb
sub
or
cmp
mov
pop
inc
rcr
pop
mov
jle
dec
repnz
mov
sbb
lock
dec
loop
mov
jp
xlat
ljmp
cmpsl
jb
mov
icebp
mov
or
or
dec
xor
mov
cltd
insb
mov
push
sub
jb
jae
pop
addr16
imul
inc
lcall
jbe
loop
mov
sarb
mov
jno
adc
mov
dec
and
xchg
xor
push
xchg
clc
jg
mov
inc
inc
pop
rorl
test
sti
mov
xchg
mov
lret
or
in
xchg
loop
cmpsl
push
sbb
incl
std
xor
sbb
pop
sub
lds
mov
ret
test
imul
mov
dec
idiv
cmpsb
cmp
mov
popa
dec
mov
pushl
fsts
sarb
fnstsw
call
sbb
mov
and
aam
adc
lret
pop
enter
inc
pop
das
mov
jle
decb
mov
cld
movb
mov
into
push
out
insb
inc
jg
and
push
scas
adc
ds
mov
cld
aad
insl
js
mov
mov
aaa
mov
inc
mov
imul
and
js
cmp
les
std
or
push
shll
enter
imul
cmp
pop
testl
out
jne
fnsave
je
fdivs
ret
cld
mov
in
imul
cmc
pusha
mov
and
fidivrl
sub
test
fisubl
sbbl
insl
dec
fisttpll
add
inc
fsubs
and
push
fucomip
mov
dec
add
push
lds
xor
mov
imul
or
add
ljmp
ret
jecxz
mov
and
xchg
add
je
xchg
cmp
std
push
push
cmc
jbe
incl
lods
std
stc
or
xor
enter
les
or
cli
testb
cmp
lods
gs
loope
dec
sti
and
lahf
xor
fistl
shll
xchg
cmp
repz
enter
fildll
scas
test
mov
movsb
sub
shr
cli
in
mov
add
jge
mov
xor
out
fadds
push
xchg
inc
lcall
sti
inc
jo
and
clc
inc
aad
xor
pop
ds
adc
scas
aaa
fildll
pop
cmp
bound
inc
xchg
pushf
ljmp
and
mov
and
nop
add
lea
insb
dec
xchg
push
cld
scas
clc
stos
popa
mov
loopne
mov
cmc
add
lock
mov
dec
adc
jmp
adc
or
jno
pop
xchg
or
mov
js
jecxz
dec
push
ljmp
out
mov
sbb
js
jle
fsubr
cmp
mov
mov
adc
sbb
icebp
jnp
push
imul
add
hlt
pop
decb
or
adc
gs
pop
mov
cmp
and
or
clc
and
fmuls
ja
ficomps
push
jmp
dec
add
mov
xchg
cmpsl
jle
dec
xor
std
or
test
dec
inc
repz
push
and
fstpt
mov
xchg
and
add
hlt
enter
add
cmp
test
stos
pop
push
pop
pop
iret
sub
cmp
xor
aam
add
pushf
mov
ja
roll
jmp
add
ror
jle
push
aad
stos
in
pushf
pop
dec
lods
cmp
dec
xchg
add
push
add
push
cwtl
cmp
jmp
sbb
add
insl
aas
sub
lds
mul
mov
cmp
xlat
pop
cmp
inc
inc
mov
inc
dec
xchg
pop
int3
xchg
adc
mov
and
sub
imul
mov
mov
mov
into
mov
add
imul
and
mov
mov
jp
pop
adc
lods
lcall
mov
shlb
cmpsb
fs
sti
push
add
or
arpl
pop
mov
mov
add
sub
cmp
mov
outsl
and
xchg
add
sbb
sub
sub
inc
enter
mov
dec
lahf
add
lock
cmp
jne
xor
mov
loope
cmp
ljmp
or
and
call
sbb
mov
pop
ret
mov
pop
xor
test
jne
push
rolb
adc
mov
je
pop
sub
in
push
jne
insl
mov
mov
mov
std
push
ja
scas
pusha
lods
and
testl
or
arpl
je
cltd
xchg
and
xchg
andl
frstpm(287
jp
sub
loop
add
fwait
lea
mov
mov
les
dec
push
inc
jge
aad
sbb
popf
jge
xor
dec
inc
fists
sbb
cmp
ucomiss
lea
imul
pop
push
push
orb
cmp
iret
adcl
or
lcall
inc
or
test
mov
pop
lock
test
inc
sub
repnz
fdiv
push
pushf
jp
iret
pushl
push
mov
stc
xor
inc
adcl
mulb
cmp
mov
mov
aaa
or
enter
cmp
imul
mov
lcall
lds
cmc
stos
clc
mov
sbb
imul
pop
sbb
push
cmp
ss
shl
add
sbb
in
std
mov
fsubrl
rcrl
test
inc
jne
mov
call
mov
xchg
ficoms
inc
adc
pop
data16
xchg
movsb
mov
sarl
pusha
outsb
push
aam
mov
dec
adc
jno
shll
test
push
mov
ljmp
pop
mov
mov
es
or
mov
push
outsb
stc
test
aas
jns
xor
dec
jl
inc
xchg
sarl
dec
push
and
or
sti
popf
lcall
jb
mov
pop
add
lahf
mov
pop
fmuls
cmp
jp
fcomi
mov
or
out
dec
loop
and
pop
lock
mov
repz
setne
mov
and
pop
cwtl
lahf
sub
mov
pop
add
lcall
lods
js
sub
imul
pop
mov
sarb
adc
gs
jg
stos
adc
sub
enter
jle
add
ds
add
xchg
out
loop
xlat
or
cmp
loopne
scas
hlt
shrb
or
outsl
xchg
xor
dec
mov
cmp
mov
outsl
testl
popf
repz
out
push
ss
adc
cmp
lock
repnz
add
jecxz
lods
add
shlb
shr
add
adc
jae
xor
hlt
adc
jg
xor
inc
mov
cli
stos
mov
test
pushf
ja
ret
add
sbb
add
or
pop
sbb
and
adc
inc
xchg
push
out
in
arpl
mov
icebp
ret
insb
into
fnsetpm(287
push
movsb
popa
xor
in
pop
pop
imul
dec
scas
pop
in
inc
xor
pop
and
push
xorl
jns
js
fs
fstps
cmp
sarb
adc
rcrl
mov
es
push
mov
adc
pop
sbb
and
mov
arpl
sbb
xchg
xor
sub
sub
popa
test
testl
push
es
inc
push
xchg
xchg
mov
addl
mov
jl
add
stos
jge
in
sub
pop
mov
or
or
sbb
mov
int
pop
or
in
fmull
jecxz
pop
leave
ret
aas
add
jne
not
sub
aad
and
push
inc
add
cmc
mov
push
dec
ficoms
adc
mov
std
sbb
ret
cmpsb
aad
and
cltd
pop
test
scas
mov
inc
movsl
aaa
mov
loope
xchg
mov
insl
mov
loope
xlat
and
scas
adc
dec
into
jge
psraw
adc
push
add
and
repnz
test
test
mov
dec
or
or
cmp
fsubl
cmp
mov
or
cmc
scas
push
add
mov
jmp
test
cmc
mov
and
outsb
mov
fs
daa
insb
adc
rcll
rcll
or
or
shr
lock
dec
dec
js
xor
aam
sar
js
lods
ror
mov
mov
mov
inc
mov
fs
push
adc
push
inc
outsl
aad
add
pop
aas
pop
pop
mov
adc
mov
mov
jge
icebp
aaa
adc
stc
loopne
pop
pop
mov
dec
cmp
test
adc
mov
out
mov
adc
pop
in
mov
stos
pusha
popf
mov
pop
cmp
in
pop
dec
mov
dec
gs
test
fadds
push
push
sub
je
lea
mov
movsb
roll
pop
xchg
add
js
aad
dec
out
inc
es
inc
or
call
ja
dec
jnp
fcmovnu
push
sub
xchg
imul
cmp
mov
dec
or
std
andb
sub
out
data16
dec
test
lock
das
and
ljmp
ja
pop
push
fidivs
mov
int
dec
dec
adcb
add
jp
cmp
dec
jge
mov
sbb
sub
imul
xchg
and
sbb
loope
fwait
mov
icebp
pop
cld
sbb
in
cwtl
loope
pop
out
out
jmp
mov
adc
test
mov
jo
push
notl
mov
sub
aam
movsl
xorb
movsl
and
call
aas
pop
xorl
inc
mov
aaa
jle
rcl
repz
cmp
cmp
fistps
mov
or
xor
jns
outsb
mov
andb
nop
pop
dec
test
push
rclb
popa
clc
inc
pop
push
mov
adcb
test
lods
fldenv
mov
add
cmp
mov
xor
xchg
xor
sbb
push
lret
and
mov
dec
add
or
adc
push
clc
imul
mov
mov
pop
push
sbb
in
dec
jp
fidivrs
lock
push
in
cmp
js
sub
int3
movsb
into
cmp
and
mov
loope
mov
mov
cmp
xor
jno
imul
sub
pop
cmp
or
fsubrs
add
call
cmp
and
daa
fadd
ja
shld
xor
sub
fwait
add
xor
cmp
addb
cltd
adc
inc
das
inc
cmp
negl
pop
push
and
cmpl
mov
popa
mov
fs
cmpsl
jb
or
lahf
dec
adc
or
fiaddl
fsubr
loop
scas
test
or
mov
bound
mov
dec
outsl
xchg
ljmp
jne
add
insb
mov
push
or
dec
scas
add
imul
lods
mov
xor
nop
cli
mov
cli
insl
sbbl
inc
fldl
add
shlb
pop
ror
mov
mov
xor
sub
add
orl
imul
pop
adcl
loopne
dec
sbb
pop
adc
jb
mov
dec
and
push
out
jp
not
adc
add
iret
jae
popa
fldt
cmp
mov
fldenv
cmp
push
adc
lds
sbb
ljmp
mov
push
enter
jp
orb
in
rorb
push
jno
test
push
test
pop
push
pusha
xlat
outsb
mov
mov
push
inc
mov
andl
jl
pop
lods
daa
ja
data16
pusha
inc
ljmp
or
repnz
sahf
js
pop
mov
and
jle
dec
out
dec
scas
mov
divl
les
dec
cmpsl
jle
sbb
mov
pusha
mov
jg
out
adc
icebp
int3
cmp
xchg
scas
add
test
out
lret
repz
shl
adc
out
fwait
addb
test
and
push
pop
pusha
adc
or
stc
addr16
inc
cmp
loop
int
out
cmp
sbb
jns
add
push
pop
sub
mov
dec
pop
cld
inc
arpl
mov
sub
pop
shll
push
lock
jmp
icebp
xor
inc
rorl
sahf
outsl
xchg
add
pop
jp
mov
fidivl
std
adc
jle
loopne
shl
invd
mov
sub
mov
nop
jecxz
sbb
mov
rcr
mov
inc
jmp
dec
outsb
xchg
or
fdivrs
imul
jp
xchg
stc
outsl
aaa
insl
push
or
sub
stos
cmp
in
or
notl
push
cmpps
mov
cmp
dec
push
cmp
pop
mov
lcall
and
sub
mov
sti
xchg
aam
add
insb
mov
popa
ja
add
inc
les
sbb
mov
stos
xchg
push
xchg
pop
mov
jbe
pushf
dec
add
mov
jp
dec
out
jecxz
nop
std
mov
out
popf
jo
jle
cld
and
or
mov
adc
adcl
push
lret
or
cld
inc
cli
repz
movb
mov
add
andl
je
and
sub
xchg
call
sbb
daa
add
cmp
mov
lods
fisttpl
lret
int
cli
test
ret
call
mov
cltd
movsl
leave
test
xlat
push
inc
shll
int
xor
dec
pop
fiadds
and
pop
jae
es
lock
mov
ficoml
lods
mov
das
jb
xchg
pop
mov
mov
or
jl
xchg
lock
xor
jne
and
xchg
or
andl
movsb
jb
jbe
sbb
test
cld
add
sub
cmc
les
add
xchg
jo
or
mov
cmp
cli
lahf
sub
lods
or
adc
aaa
cmp
jle
shlb
jae
gs
test
jg
aas
in
js
dec
and
mov
xlat
aas
shrl
xchg
push
jecxz
add
sbb
stos
push
outsl
inc
cwtl
xlat
sbb
daa
add
jp
clc
mov
aaa
imul
cmc
rcr
xchg
rorl
hlt
xchg
pop
sbb
loopne
or
repnz
not
bsf
add
aas
and
mov
daa
mov
or
inc
movl
push
xchg
xchg
sbb
dec
mull
pop
imulb
es
sub
push
sub
push
xor
in
sub
inc
incl
imul
stc
fistps
clc
fmuls
arpl
and
lods
pop
arpl
fcompl
jp
mov
sub
movl
shll
or
enter
cmp
js
jge
sub
cmp
add
testb
in
add
push
outsl
leave
xor
xor
sbb
sbb
movd
sahf
cmpsb
mov
mov
cmp
jp
repz
sub
mov
sbb
xor
in
es
aam
pusha
mov
cmc
bound
mov
pop
xchg
add
or
mov
or
ficompl
add
or
inc
xchg
dec
dec
leave
dec
mov
push
jmp
dec
pushf
sbb
dec
pushl
sbb
mov
mov
xchg
or
mov
fsubl
mov
sbb
xor
or
lret
xor
push
out
arpl
push
mov
sub
sbb
jecxz
push
enter
xchg
sbb
jmp
cld
cld
jl
push
xchg
push
add
pop
pop
and
hlt
push
mulb
xchg
add
out
in
push
or
inc
pop
or
mov
xor
and
mov
and
mov
mov
xor
lret
adc
mov
notb
cmp
addb
aad
mov
sbb
xchg
or
push
adc
mov
push
sub
gs
lea
jne
or
sbb
cli
aad
les
dec
xchg
or
add
jbe
sub
lahf
ficomps
jbe
cmpsl
pop
imul
loopne
mov
pop
ss
aam
push
mov
sbb
fnstcw
je
xchg
xor
inc
mov
repnz
jle
ja
icebp
sub
iret
mov
sub
inc
cmc
rolb
and
sub
shrb
push
add
or
gs
or
xchg
mov
mov
in
jmp
adc
js
loopne
aam
fbld
mov
jmp
sahf
bound
mov
push
and
outsb
inc
decb
mov
lahf
pop
stos
stos
xchg
add
in
cmpl
lea
push
push
lea
push
add
push
or
pop
add
jne
std
outsl
mov
sbb
push
push
call
pop
call
ret
mov
incl
addl
push
push
push
lea
fwait
in
lock
inc
hlt
clc
push
push
call
int
pop
incl
lea
push
push
add
cld
cld
sti
cmp
add
adc
fmuls
push
in
imul
ja
jo
push
hlt
xchg
push
inc
sahf
jnp
dec
inc
xor
add
ljmp
jle
and
leave
push
sub
outsl
bound
std
jne
lock
call
lods
dec
in
in
fwait
lret
call
inc
add
arpl
cmp
push
ja
arpl
outsb
push
data16
mov
loope
jbe
test
dec
clc
push
push
push
pop
call
mov
pop
dec
aaa
cmp
popa
insl
aaa
pusha
push
push
push
call
cmp
insb
mov
cmp
dec
arpl
sub
fadd
sbb
push
movsb
outsb
lods
jne
js
outsb
cld
xor
push
loope
inc
rolb
push
jno
mov
fsubl
pop
jnp
lods
testl
iret
adc
jb
mov
push
bound
jno
xchg
dec
push
dec
push
push
mov
incl
mov
mov
loopne
js
inc
dec
jne
jae
cmovs
push
pop
adc
add
sbb
pop
aam
fs
mov
pop
xor
xchg
out
in
js
add
push
leave
ret
inc
mov
jnp
imul
mov
fldt
push
addr16
test
sbb
gs
insl
push
add
adc
mov
jb
push
push
mov
cld
mov
neg
not
jmp
pop
sbb
not
jmp
mov
sbb
hlt
in
add
xchg
loopne
inc
out
sbb
xchg
js
push
fdivs
js
gs
in
gs
push
jo
jne
pop
outsb
jg
xor
inc
inc
lret
pop
ja
sbb
xor
pop
xor
push
push
fistpll
lods
arpl
pop
ja
imul
outsb
call
in
xor
je
xor
mov
jns
shrl
addr16
and
or
sbb
inc
pushl
sbb
add
hlt
adc
neg
not
add
or
sti
jnp
jmp
and
data16
xor
mov
push
inc
cs
sub
testl
dec
mov
inc
push
jbe
mov
fsubrs
and
inc
add
jo
in
test
ret
fiadds
idivl
jl
adc
add
sub
dec
adc
add
add
adc
dec
neg
push
std
idivb
dec
pop
adc
push
adc
sbb
inc
lret
sbb
pop
insb
jmp
lock
sti
outsl
inc
push
dec
push
xchg
push
push
xchg
cwtl
leave
or
sbb
pop
add
xor
cld
pop
pop
mov
xor
push
dec
ja
call
xor
nop
push
inc
inc
jns
ja
lock
push
jae
lock
in
call
negb
adc
add
int
cli
jmp
out
cmc
jo
iret
inc
jo
sub
sarb
or
cmp
call
push
mov
xor
mov
fistpl
or
mov
xor
mov
mov
sar
cmpsl
sub
insb
insb
jecxz
dec
outsl
dec
imul
push
add
push
sbb
push
sub
mov
lahf
faddl
loopne
pop
sbb
jmp
negl
sub
addr16
xor
mov
xor
dec
dec
imul
and
push
fs
shll
mov
inc
pop
rolw
filds
lahf
call
dec
mov
push
xor
aaa
dec
jne
outsb
popa
jb
or
push
dec
jb
inc
es
ret
xlat
cs
imul
cmpsl
fbstp
xor
loopne
dec
cmp
mov
xor
bsf
push
push
jo
add
jmp
inc
sub
inc
ljmp
andl
ja
push
push
sbb
jns
cmp
inc
int3
negb
in
push
push
arpl
pop
incb
and
sbb
sbb
and
test
jp
and
je
clc
or
insl
sbb
mov
andb
dec
movsb
xor
jbe
pop
rcrl
xor
xor
sti
addr16
call
enter
adc
or
repnz
or
in
or
mov
sahf
insb
sbb
push
adc
jb
dec
jmp
data16
cli
sbb
xchg
mov
lret
xor
lods
ret
jbe
cmp
div
fsubrs
mov
dec
fs
icebp
aaa
sbb
insl
push
ss
das
iret
pop
dec
sbb
in
js
bound
out
push
imul
gs
mov
xor
sbb
mov
in
cmp
test
ror
push
mov
mov
push
call
push
jbe
xor
mov
xchg
mov
mov
or
call
cld
mov
arpl
push
xor
add
jae
mov
push
outsb
mov
mov
test
insl
imul
sbb
xor
or
push
mov
jnp
int
xor
cmp
dec
sub
nop
icebp
pop
sub
lcall
pop
sbb
scas
push
xor
jo
mov
popf
sub
inc
adc
jno
call
ss
call
push
xchg
data16
adc
arpl
cmc
xor
pop
adc
gs
mov
out
in
inc
jle
mov
loope
repz
xor
pop
sbb
lods
adc
lahf
lcall
test
jbe
pop
lret
vsqrtps
stos
fs
sbb
aam
ss
add
incb
mov
cmp
stc
xor
imul
outsb
add
mov
test
xor
fwait
pop
mov
inc
outsl
ja
iret
push
jmp
insl
in
push
jne
fnstenv
push
adc
lock
pop
dec
xchg
call
in
orb
ret
fcomps
add
negl
pop
in
lret
inc
push
push
dec
dec
ljmp
ficomps
xor
pop
test
cmpsb
idivl
inc
lock
xchg
cld
and
sub
inc
test
outsb
or
loopne
dec
xchg
push
in
cmp
pushf
inc
sbb
xorl
jb
adc
mov
pop
aaa
ja
fadds
jl
adc
add
mov
not
or
fistps
sti
push
sbb
add
cli
rorl
fisubrl
mov
push
arpl
fmuls
enter
xchg
push
cmp
fcomp
sub
dec
neg
sbb
or
shrl
inc
movsb
data16
arpl
mov
push
add
or
sbb
mov
xor
jne
jo
dec
sti
cmpsb
pop
call
loope
push
jne
xor
xor
cmpsb
notb
sbb
jnp
inc
ja
ret
sbbl
insb
pop
ss
push
mov
call
loop
data16
mov
lock
push
int3
jg
pop
sub
lret
pop
aaa
xchg
test
bound
aaa
fdivrs
cmc
into
pop
inc
outsl
insl
inc
mov
xor
enter
mov
cmpsl
testl
xor
xor
fcoml
pop
test
test
add
mov
int3
fstpl
incl
push
in
cld
cmp
push
rcrb
shl
call
xchg
sbb
xor
adc
and
data16
sub
push
inc
int
push
mov
xor
lcall
dec
add
jno
add
or
fsubrs
test
dec
jmp
sbb
inc
mov
or
out
jb
jae
dec
mov
ss
test
fcomps
sub
and
sbb
pop
sarb
call
push
inc
loop
mov
fisttps
push
cmp
push
lahf
in
add
lods
insl
push
push
fs
addr16
add
lods
push
add
push
das
loopne
mov
or
push
push
pop
mov
shrl
lock
subb
sub
imul
mov
dec
pop
js
sarl
and
mov
jmp
fs
add
pop
mov
sbb
in
loopne
cmp
jb
push
push
jo
xchg
mov
inc
push
pop
mov
js
sub
xor
arpl
dec
xor
fisubs
adc
hlt
push
mov
push
xor
call
enter
mov
jae
push
xor
push
dec
bound
sar
call
mov
mov
inc
xchg
aaa
jg
rcll
sbb
scas
jbe
js
jno
stc
and
insb
popf
inc
cmp
jbe
lock
popf
push
sbb
or
cmpsl
sbb
cmpsw
in
shr
shrb
insl
pop
jae
addr16
and
add
std
sub
popa
arpl
push
jns
fildl
xchg
push
xor
data16
inc
icebp
in
push
test
lcall
cwtl
fstpl
xor
mov
xchg
pop
inc
xchg
into
test
fdivs
xlat
inc
cli
sub
push
add
sub
icebp
outsl
imul
jno
arpl
dec
popa
imul
rcrb
sbb
mov
inc
dec
cmp
mov
pop
aad
add
add
push
movsl
pop
lock
ja
sbb
mov
idivb
mov
add
mov
sarl
inc
outsl
fs
mov
dec
xor
or
jmp
lods
or
je
push
pop
cmp
push
push
cli
lock
js
push
cwtl
jp
mov
sbbb
neg
outsl
fwait
pop
sbb
mov
arpl
xor
jb
inc
jmp
enter
addr16
insb
loopne
or
popf
js
adc
sub
xor
and
lods
dec
bound
shl
sarl
sub
cs
and
add
movl
fsubrs
in
popa
icebp
mov
out
push
inc
mov
inc
jne
outsb
dec
dec
leave
loop
pusha
movsb
dec
push
adc
vshufps
mov
or
xor
adc
adc
wbinvd
inc
adc
je
gs
decl
inc
add
mov
sub
jmp
cwtl
mov
outsl
dec
jmp
jns
dec
cld
outsl
push
sbb
sub
call
dec
add
shl
jno
and
loope
aam
and
sub
sbb
flds
inc
add
jmp
jo
mov
jne
clc
lods
inc
cmp
iret
jle
or
call
roll
inc
mov
ds
mov
stos
adc
mov
add
clc
shl
popa
jae
inc
call
pop
pop
cmp
jmp
push
dec
jno
fwait
or
mov
jb
push
aas
cld
sbb
aam
aaa
addr16
push
shlb
push
ljmp
jne
push
loope
loope
adc
mov
jae
inc
jne
add
je
gs
addr16
and
dec
jmp
mov
sub
scas
ja
push
scas
adc
cmp
add
sti
mov
nop
jg
sbbb
push
test
sbb
and
bound
jnp
cltd
sbb
in
ss
fsubrl
in
roll
adcl
xor
lock
lahf
inc
cmp
xor
imul
and
inc
scas
or
inc
jo
mov
in
pcmpeqd
lahf
add
xor
dec
jecxz
flds
mov
xchg
dec
out
inc
jmp
fbstp
sbb
scas
je
in
mov
dec
and
adc
mov
dec
insb
sahf
iret
xor
test
add
or
mov
dec
adc
dec
jp
push
sbb
push
mov
sarb
push
sub
pop
inc
dec
mov
in
sub
cli
add
rcrb
inc
hlt
or
push
xor
ret
test
daa
xor
aaa
insl
hlt
dec
sub
adcb
out
jb
lods
push
push
inc
mov
inc
add
push
cli
shrb
fdiv
pusha
add
pusha
jl
push
xchg
notl
cmp
push
mov
sub
cmp
push
mov
imul
jge
push
pop
int3
push
ss
inc
cmp
testl
test
insl
add
enter
lret
pusha
das
inc
jmp
clc
imul
mov
mov
loopnew
sbb
jo
insl
push
push
pop
mov
cld
test
inc
arpl
inc
fbstp
add
sbb
mov
out
in
inc
push
dec
fisubl
push
out
pop
popa
adc
call
push
cmp
shll
mov
js
call
dec
dec
push
dec
mov
in
sub
xchg
movsl
add
mov
pop
inc
call
and
jg
dec
xor
mov
pusha
clc
add
dec
enter
adc
add
insl
leave
pop
xor
jbe
lds
add
hlt
mov
cld
vxorps
popa
push
push
je
sbb
insl
inc
push
cmp
pop
das
in
dec
push
push
xor
jmp
ja
push
push
pusha
lods
mov
push
xlat
fbstp
pusha
rclb
cli
add
rcrb
sbb
mov
mov
in
mov
or
nop
addl
push
sbb
sbb
enter
dec
daa
loopne
inc
sbb
mov
inc
cs
adc
add
or
leave
dec
fneni(8087
sbb
cmc
dec
jp
out
mov
fs
vpunpcklqdq
addl
dec
js
dec
clc
adc
xor
pushf
hlt
js
mov
sub
movsb
jmp
mov
outsl
mov
cld
sarb
pop
andb
loopne
repz
inc
inc
out
dec
imul
arpl
jg
hlt
ja
adc
adc
int
addl
js
out
outsb
push
sbb
xor
sbb
dec
movsl
cmp
jne
xchg
jmp
sbb
jle
push
gs
mov
jnp
js
inc
jne
mov
cmp
loop
add
dec
fsubrl
icebp
xor
outsl
pop
sbb
repnz
in
or
popa
outsl
outsb
je
in
jno
clc
out
pop
xor
dec
insl
or
or
or
mov
cld
inc
mov
pop
js
push
dec
out
pop
ss
lret
push
fs
push
pop
outsl
call
and
nop
push
add
movsl
ret
imul
mov
ficoml
mov
hlt
pop
shrl
adc
xorl
push
inc
mov
data16
punpckhdq
ds
jo
and
or
inc
inc
nop
add
cmp
mov
dec
arpl
test
movsl
lods
addr16
cmp
xor
pop
fdivrl
fistpll
push
movsb
insb
insb
xor
bound
xchg
or
jmp
xor
loope
inc
lea
push
mov
in
xor
add
lock
aam
push
mov
in
sub
push
fisubrs
or
clc
sbb
mov
inc
dec
ret
adc
add
jbe
in
or
mov
popa
andl
pop
sub
hlt
xchg
movb
aaa
xor
pop
push
mov
mov
outsb
mull
in
push
or
ret
shl
lods
imul
jnp
adc
or
pop
mov
inc
and
push
inc
inc
xor
push
xor
lods
ljmp
outsl
popa
in
dec
mov
xor
add
loop
popa
add
inc
and
imul
rol
imul
pop
or
enter
push
sbb
pop
xor
out
push
or
mov
dec
xchg
jnp
pop
add
push
adc
xor
adc
push
test
xor
call
mov
les
cltd
sbb
dec
movl
in
ljmp
push
addr16
push
or
mov
mov
cs
popa
ljmp
test
pop
mov
outsb
loop
shlb
pop
outsl
push
dec
xor
dec
cmp
enter
arpl
dec
cli
sbb
add
roll
call
lock
hlt
lcall
xor
shlb
mov
cld
cmc
sub
test
es
pusha
outsl
dec
imul
jno
and
clc
jb
cmp
jb
outsl
hlt
dec
clc
jo
add
dec
aam
call
jb
je
and
pop
xor
outsb
ss
out
lds
in
inc
dec
dec
adc
lods
mov
imul
mov
inc
aas
sti
xor
fldt
fcomps
repnz
push
jle
push
adc
push
jmp
jb
test
mov
insb
sbb
or
push
ljmp
mov
add
subl
test
jmp
or
xchg
cmp
xor
dec
fildl
inc
jns
dec
add
adcb
and
ss
push
inc
rol
outsl
push
mov
sbb
icebp
sub
mov
add
dec
jmp
mov
xor
add
inc
int3
je
loop
mov
scas
call
lds
xchg
add
aam
bound
or
shlb
jb
dec
dec
cmp
loop
xchg
das
fidivs
je
aad
pop
lock
call
loopne
test
sub
sahf
dec
jae
rclb
mov
pop
jno
in
xor
sbb
and
mov
mov
sarb
enter
jp
mov
push
dec
arpl
cld
push
or
jno
or
and
das
add
je
int3
mov
les
popf
inc
mov
xchg
mov
dec
or
imul
imul
sbb
stos
or
jne
xor
push
ja
jo
mov
mov
ss
jns
fs
in
outsb
aam
cmpsl
in
addr16
into
add
hlt
fcompl
pop
call
stc
cmc
xchg
push
mov
jne
dec
test
xor
pop
push
sbb
cmp
sar
mov
stc
mov
dec
sbb
sub
inc
pop
push
jne
loopne
add
lret
inc
pop
push
aas
popf
roll
shlb
add
add
push
add
mov
insl
sub
push
pusha
sub
rcl
std
ljmp
sub
outsl
je
and
adc
xlat
ret
cs
add
sub
cmp
pusha
xor
hlt
pop
dec
lret
cli
inc
call
add
out
or
push
sbb
rorb
cmpsl
cmpsl
lcall
rclb
out
je
int3
fcompl
ja
dec
xlat
fs
add
je
inc
jecxz
dec
sbb
cmp
and
pop
inc
mov
or
xor
xchg
cli
int3
faddl
sbb
int3
xchg
das
add
jno
xchg
pop
in
stos
loope
movsb
sub
xchg
test
int
insb
xchg
pop
cmc
jmp
loopne
mov
addb
outsb
jbe
insl
inc
inc
arpl
sbb
cmp
lahf
add
and
jecxz
ret
repnz
movsl
jmp
sub
lods
pop
ror
lds
imul
cmp
test
cmp
adc
adcb
or
dec
imul
lret
or
pminub
loop
mov
es
arpl
inc
mov
cmp
xor
shlb
jns
subb
jne
inc
pop
mov
cld
dec
mov
inc
repz
inc
add
mov
sub
in
out
js
stos
daa
inc
mov
dec
pop
test
int3
lea
sub
imul
pop
repnz
pop
imulb
js
adc
shlb
movsb
leave
pop
lods
xor
jno
jnp
negb
mov
adcl
jnp
adc
rolb
sbb
aaa
push
jbe
pop
sbb
je
pusha
lods
sbb
push
pop
fs
sbb
pop
mov
push
pusha
xor
loopne
aam
jl
aaa
icebp
mov
outsb
xor
pop
sti
push
sbb
dec
cmc
dec
inc
mov
inc
add
add
xchg
fisubs
clc
or
arpl
cmpsl
cmp
sub
cld
loope
push
mov
pop
aad
and
jecxz
sub
push
adc
in
push
int3
insl
push
jns
pusha
std
or
loopne
call
insb
mov
lods
pop
cmpsw
outsl
bound
cmpsl
in
imul
shl
lret
mov
arpl
dec
jp
imul
adc
test
jmp
movsl
sahf
das
sub
mov
sbb
xchg
fisttps
push
fadd
stos
mov
stos
arpl
inc
dec
jns
arpl
mulb
add
add
xchg
mov
notl
rcll
fs
es
push
add
pop
popf
adc
cmp
call
movsl
mov
gs
dec
dec
bound
roll
outsb
inc
mov
xor
dec
inc
jmp
sbb
enter
mov
xor
inc
ss
outsl
jbe
cmpsl
mov
push
xchg
fwait
pop
jg
mov
sub
pop
js
jle
lock
insb
movl
pop
mov
ja
xchg
outsb
adc
sbb
imul
ret
pop
stos
dec
fstpl
cmc
lds
je
jl
push
ds
cld
inc
cs
fnstsw
popf
add
stos
fucompp
sti
outsb
sti
or
iret
and
sub
fstpl
imul
mov
cli
icebp
faddp
cmp
ss
dec
mov
xor
loopne
imul
aaa
mov
fiadds
mov
ret
repnz
movsb
jp
or
enter
pop
outsb
hlt
or
imul
stos
loopne
cmp
dec
pop
outsl
pop
xor
mov
push
int3
bound
mov
adc
inc
in
emms
jb
je
pop
cltd
jle
and
movsl
fistpll
fisttps
hlt
xor
inc
sbb
and
inc
mov
les
push
push
xchg
mov
aam
add
pusha
insl
les
daa
add
sysret
push
jnp
in
mov
mov
lock
jnp
adc
dec
or
ja
or
sbb
insb
enter
sbb
mov
movsb
and
movsb
clc
dec
adc
imul
pop
lea
dec
inc
arpl
jae
mov
xorl
xor
shll
inc
test
fisubs
sbb
xor
fsubrl
inc
dec
push
call
call
adc
push
in
or
mov
inc
jae
pop
mov
sti
test
cmc
das
nop
shlb
les
pop
and
lods
lods
iret
inc
in
push
into
in
scas
adc
dec
dec
xchg
add
and
hlt
cmp
dec
pop
lods
inc
jmp
clc
add
mov
mov
bound
xor
jo
sbb
sar
sbb
push
xor
icebp
push
push
and
ficomps
ja
mov
dec
adc
push
outsb
ret
dec
push
dec
push
cmc
js
xchg
in
aas
push
adc
stc
negb
popa
loopne
shll
test
jbe
or
jne
ljmp
mov
jmp
iret
ja
sbb
dec
clc
inc
sub
fmuls
fcomps
mov
not
xchg
movsb
test
add
inc
sbb
fwait
push
shr
incb
and
xor
add
and
shll
mov
push
jge
add
inc
imul
in
fnsetpm(287
shl
or
lock
sahf
sbb
jmp
loopne
pop
dec
arpl
imul
sti
scas
xchg
sub
fildll
in
pop
xor
xchg
cmpl
cmovns
xchg
push
push
push
mov
aad
inc
outsl
and
out
pop
addr16
pop
sti
add
fsubr
jbe
cmp
jns
addr16
int3
mov
dec
je
test
pop
nop
outsb
call
and
add
fiadds
xor
lock
std
xchg
pop
add
cltd
xor
int3
xlat
aad
xor
cld
data16
inc
fsubr
and
push
sub
lock
fs
xchg
lahf
dec
js
ss
add
or
pusha
push
fildll
push
sbbb
pushf
sti
leave
je
xor
mov
adc
hlt
cmp
enter
cmp
imul
push
push
fs
lock
mov
inc
xchg
dec
dec
xor
call
outsb
pusha
arpl
outsl
sub
pop
shlw
pop
sbb
in
sub
fldl
movsb
das
lds
jmp
dec
lods
pop
andw
imul
in
rcrb
sarb
mov
test
fnstenv
push
rclb
sub
jo
sub
lret
jb
fcmovb
xor
std
in
sahf
add
jno
jb
push
pop
pop
sbb
ret
ja
jle
dec
push
add
mov
or
xor
fwait
movsl
jb
push
ss
mov
lea
inc
cmp
mov
xchg
ljmp
add
add
orb
or
and
or
or
inc
adc
add
mov
pop
add
add
inc
test
imul
incl
adcb
inc
adc
and
adc
add
fcmovu
mov
add
or
inc
fidivs
gs
add
jns
gs
add
add
insl
fistpl
inc
add
inc
das
dec
inc
and
lods
insl
mov
and
or
adc
xor
fcmovnu
outsl
insl
test
add
jne
test
outsb
pop
fistpl
pop
adc
and
mov
xchg
sbb
xor
scas
jae
mov
test
pop
scas
mov
imul
adc
adc
cmp
imul
adc
cmpsl
mov
jbe
add
test
mov
ss
cmp
lcall
xor
jmp
out
negb
in
jecxz
insb
add
scas
push
and
repz
scas
rcrb
add
pop
popa
and
fwait
lcall
scas
sahf
fidivl
gs
js
insl
push
push
js
add
in
jae
jmp
inc
scas
pushf
and
push
adc
jns
inc
lcall
int
pop
push
xchg
ret
inc
ret
insl
insb
je
insb
jo
dec
arpl
jb
pop
jae
mov
xor
imul
adc
rcrb
outsl
cmp
xor
jae
jle
push
and
or
mov
add
pop
lock
mov
rcr
test
stos
mov
jnp
xor
or
add
out
in
fsub
lcall
test
cli
outsl
call
jb
imul
xchg
js
call
insl
jae
push
in
cld
ds
mov
cltd
hlt
je
mov
jo
jne
sbb
imul
call
and
dec
pop
inc
xor
mov
stos
dec
je
inc
pop
sub
and
pusha
fcomps
fstl
mov
pop
dec
or
push
xlat
ret
jne
ficoms
out
ret
mov
in
jbe
inc
ss
popf
mov
stos
loope
imull
add
push
add
pushl
lret
xchg
in
lods
fs
mov
or
outsl
in
ret
cmp
inc
loop
jecxz
cmp
or
in
xlat
mov
cmp
shrl
sub
rcll
in
aas
out
das
xor
adc
cmp
rolb
sub
ljmp
sbb
pop
imul
lods
mov
dec
test
loopne
add
aad
inc
xor
incl
ret
inc
sti
stc
sbb
das
sbb
icebp
and
xor
cwtl
pop
lea
add
incl
push
int
in
sahf
add
lock
decl
adc
out
or
aaa
mov
scas
fisubrs
jl
ret
mov
std
xlat
popf
cwtl
push
jbe
popa
cs
xor
fisttps
jmp
decl
sbb
inc
lods
mov
jmp
pop
pop
mov
jns
fildll
decl
pop
and
fldln2
lcall
fucom
cmp
push
cmp
fiaddl
pop
in
call
mov
pop
mov
jo
xchg
push
cs
clc
fdivr
add
fidivrl
inc
out
adc
mov
push
test
push
pop
add
test
xchg
idiv
fisttpl
or
fistl
dec
cmpsb
jno
lret
and
arpl
fbld
sti
cli
dec
insb
pop
andl
pushf
enter
jae
out
mov
and
jg
adc
loope
loope
cs
stos
int3
mov
clc
ss
sub
repnz
movsb
pop
incl
push
loope
cmp
loope
add
sub
inc
rcrl
dec
andl
ljmp
imul
mov
cmp
and
push
adc
idiv
call
dec
push
cltd
inc
dec
sub
enter
das
and
add
jg
es
incl
sahf
andb
pop
fdivrp
pop
mov
jg
jl
pop
loop
xlat
stc
sbb
adc
add
cmp
jbe
cmpsl
sbb
repz
xchg
faddl
lret
in
repnz
jbe
int
jecxz
call
sub
and
js
cmp
adc
sti
cmp
inc
or
or
test
cmp
inc
imul
cli
ret
or
enter
xchg
xor
and
dec
ds
mov
cmpsl
sti
mov
int3
xchg
push
push
enter
xor
call
push
pop
stos
popf
stos
mov
es
dec
outsl
pushf
in
sti
mov
cwtl
loopne
pop
mov
xchg
enter
nop
sti
sti
xlat
mov
pop
jbe
jns
shlb
outsl
stc
inc
xchg
aam
adc
fs
cmpsl
incl
movsb
push
or
and
xorl
in
out
xchg
or
mov
mov
jp
mov
jae
cwtl
mov
lods
ljmp
sub
cs
xor
add
add
cli
ficoms
call
das
adc
jecxz
xchg
mov
cmc
xor
push
dec
cmp
rorl
in
int
jecxz
inc
adc
out
and
call
jmp
outsl
cmp
and
xchg
lahf
ror
addl
or
mov
add
inc
xchg
cltd
shrb
std
sti
and
dec
inc
jnp
xor
sbb
fwait
dec
daa
sbb
xor
test
inc
sbb
push
cli
jecxz
aam
push
push
jb
mov
hlt
incl
int
pop
dec
insb
fadds
push
arpl
jmp
sbb
incl
jns
jle
sbb
mov
xchg
divl
add
addr16
sbb
mov
aaa
dec
pop
int
push
ficoml
scas
jno
iret
in
cmovb
push
mov
jp
add
and
addr16
xchg
mov
popf
ret
and
xchg
mov
cmpsl
inc
popf
shll
dec
pushl
inc
pop
mov
out
mov
inc
cli
push
shl
fidivrl
push
rolb
sahf
and
call
pushl
mov
enter
ficoms
mov
repnz
daa
dec
in
std
decl
cmp
daa
dec
jecxz
leave
movsb
push
and
mov
mov
inc
sahf
movsl
ljmp
sbb
sbb
jno
and
test
adc
pop
ljmp
incl
and
inc
mov
icebp
mov
mov
into
push
xchg
jg
das
add
xor
xchg
fcomip
push
xor
lea
movsb
imul
daa
sbb
in
mov
aam
lcall
mov
mov
lcall
xor
adc
shrl
mov
into
push
inc
leave
mov
mov
fcomps
cwtl
jg
lcall
mov
dec
mov
jl,pt
mov
mov
jecxz
mov
mov
push
call
mov
out
fdivr
leave
add
jmp
enter
enter
xlat
clc
add
decl
pop
and
stos
mov
lcall
jmp
sahf
inc
mov
shl
sahf
loop
insl
pop
xorb
cmpsl
test
clc
repnz
jbe
or
pop
mov
insl
fnstenv
pop
in
push
add
sbb
add
orb
adc
adc
fisttpl
push
jle
sbb
inc
les
leave
lret
or
push
mov
imul
or
adc
xchg
nop
mov
ret
mov
test
out
lods
outsl
fnstenv
ljmp
add
mov
push
dec
jo
mov
pop
xor
rorb
mov
jnp
add
push
cmp
push
pop
mov
pavgb
arpl
fistl
daa
mov
pushl
in
in
mov
pop
push
push
sub
shl
jb
and
mov
test
in
fadd
adc
mov
sbb
push
sub
cmp
arpl
out
push
inc
andl
pushf
repz
sarb
stos
decl
out
shr
jnp
test
imul
rdtsc
testl
ljmp
loopne
movsb
lds
xchg
cmp
jl
je
xor
inc
add
mov
xor
mov
dec
jo
mov
les
or
out
jne
sar
dec
lea
xchg
faddl
add
and
arpl
rcrb
in
mov
iret
outsl
icebp
jg
insb
adc
div
xchg
jnp
div
sbb
dec
inc
jge
in
mov
icebp
aad
nop
xchg
mov
outsl
enter
xchg
mov
dec
or
dec
movsl
scas
movsl
inc
lods
in
dec
in
jg
cmp
scas
sahf
pop
ret
mov
addr16
je
push
pop
inc
add
stc
decl
test
lds
adc
ret
repz
out
dec
sub
sub
loope
inc
dec
into
repz
in
inc
pusha
sub
or
iret
mov
cmc
push
sbb
add
pop
or
decl
mov
jp
push
mov
or
call
sub
daa
popf
stos
mov
mov
pop
xchg
nop
roll
and
les
inc
arpl
lcall
add
sbb
shll
cmp
xor
push
mov
mov
sahf
test
mull
mov
lret
jmp
lds
mov
xor
inc
test
pop
stos
pop
inc
inc
mov
mov
mov
call
int3
clc
je
lock
insb
mov
lea
in
cmpsb
cmp
inc
add
call
jp
into
lret
jle
stc
cli
sbb
xor
add
insb
add
mov
fnstsw
fstpt
scas
aaa
mov
outsb
xor
jmp
lods
cs
rorl
jg
inc
pop
rep
mov
xor
jae
push
sbb
or
dec
loopne
fnstsw
xor
lds
xor
mov
jae
sub
subl
pusha
ljmp
xchg
xor
inc
sahf
sub
mov
es
mov
std
push
xor
adc
jg
or
lret
sbbl
sbb
xchg
sbb
xchg
mov
in
cmpl
inc
adc
shll
ja
sub
adc
xor
jg
xor
in
push
lcall
neg
push
xlat
mov
sub
call
stos
jmp
in
and
sub
and
adc
dec
jnp
movl
mov
mov
int3
xchg
pushl
mov
popf
mov
addl
cmpsb
cmp
rcrb
dec
rolb
xor
and
add
and
je
ljmp
lock
jge
add
ja
xchg
fdivr
cli
mov
imul
lods
or
mov
and
pushf
mov
mov
dec
push
js
pop
clc
push
sbb
popf
jbe
imul
sbb
out
sub
scas
jnp
adc
decl
sub
xchg
sbb
pop
fwait
mov
xchg
pushf
push
hlt
testb
jg
fbstp
aaa
jle
in
add
or
repz
mov
mov
or
int3
in
pusha
mov
adc
cmpsb
insl
mov
test
outsb
sbb
fstps
int3
pusha
lods
outsb
imul
pop
loop
out
adc
stos
sti
dec
sub
inc
dec
outsl
out
jne
stos
or
jmp
shrl
imul
jge
cmpsb
cmp
pop
std
clc
cld
das
outsb
call
stos
incl
pminsw
mov
sbb
mov
insl
call
cmp
loopne
dec
xor
mov
fisttps
inc
cmp
pop
xchg
cmp
icebp
mulb
adc
jne
jmp
pop
arpl
add
loopne
dec
mov
js
pushl
inc
pxor
hlt
lret
and
test
jp
iret
mov
ljmp
sbb
mov
popa
mov
daa
inc
adc
rorb
and
sti
call
and
jle
jg
mov
adc
dec
ret
testb
inc
mov
jg
pushf
xchg
pop
fwait
pop
push
sbb
mov
sbb
push
xor
pushl
adc
int3
pop
dec
sar
jns
jne
jae
pop
imul
and
stos
jnp
xor
fldcw
cld
jg
repnz
xchg
mov
clc
xchg
std
jg
dec
mov
push
xor
and
and
movsl
aaa
cli
popa
cmp
or
sub
repz
push
mov
pop
lret
cwtl
ret
sbbb
imul
cmpsl
aad
xchg
push
je
in
fidivrs
imul
lcall
out
pop
pop
xchg
push
lock
jbe
pop
loop
sbb
movsb
lret
mov
mov
call
jp
cmpsb
fadd
push
cmp
jl
hlt
sub
das
nop
dec
xchg
jno
fxam
add
data16
stos
andb
adc
jle
es
sbb
push
jp
cmp
xor
and
pushf
jecxz
xchg
mov
pop
cs
aaa
xchg
std
scas
lock
fstps
sbb
inc
mov
popa
arpl
or
ljmp
nop
cwtl
inc
imul
lret
ljmp
push
mov
ljmp
adc
xlat
loope
sub
inc
and
arpl
lea
pushl
out
icebp
mov
into
daa
fstpl
cmpsb
cwtl
out
xchg
es
incl
pop
adc
add
shlb
mov
cmpsb
outsl
push
push
inc
or
fildl
lret
dec
jmp
push
shrl
je
aad
or
das
insb
mov
out
ds
movb
movsl
add
adc
mov
xor
cs
mov
in
push
xor
mov
outsl
lcall
push
lds
mov
and
and
mov
rcl
test
add
loope
jl
inc
gs
dec
ljmp
out
fiaddl
dec
jns
sbb
jmp
push
mov
loopne
or
std
ljmp
lock
sbb
mov
cmp
push
cmp
insb
mov
push
sbb
push
ljmp
jg
adc
mov
iret
sbb
xchg
mov
fwait
shl
xchg
xchg
std
ljmp
cld
movsl
or
mov
xor
insl
insl
imul
cld
pop
inc
cltd
sub
in
push
orb
jb
aaa
cli
fists
pop
es
enter
or
pop
mov
or
das
out
push
xchg
cmp
ss
push
lock
clc
xorl
pop
repnz
or
mov
jmp
insl
loop
jp
cltd
push
mov
and
icebp
jnp
inc
mov
jbe
cmp
daa
fwait
cmpsb
jg
xlat
adc
xorl
leave
pop
in
pusha
movsb
inc
lock
lea
int
repz
cli
mov
dec
cli
fucomp
pop
pcmpeqd
lcall
hlt
call
dec
hlt
dec
cmp
lods
pop
cmp
and
fcmovu
je
cld
jl
dec
dec
sbb
xlat
xchg
mov
jl
out
push
cld
jnp
jo
jae
incl
out
xchg
mov
ror
push
mov
data16
popa
push
mov
dec
in
jmp
xlat
or
cmp
lret
scas
sahf
cmpsb
mov
mov
in
jg
sbb
mov
stos
pop
das
cld
mov
mov
lret
cmpsl
mov
adc
adc
mov
pushl
test
outsl
sahf
adc
or
inc
out
sbb
in
cltd
loope
ljmp
push
adc
popf
mov
pop
sbb
cmpsl
and
and
sub
incl
jg
xor
loopne
shll
xor
mov
cmpsb
ljmpw
mov
in
mov
pushl
dec
or
xlat
ljmp
fwait
pop
cwtl
mov
inc
adc
shl
lcall
mov
nop
call
push
mov
sub
or
gs
cmp
rep
pop
jge
scas
iret
movsb
je
outsl
std
jg
adc
fiadds
fldcw
adc
fisttps
sub
add
loop
inc
cs
popa
mov
pop
or
pushf
mov
mov
mov
mov
ret
mov
sbb
js
ljmp
sub
sub
in
in
popf
data16
xor
pop
cld
mov
xor
xor
mov
adc
movsb
mov
aaa
cli
pushl
orb
leave
fs
inc
or
xchg
and
ljmp
aas
popa
push
pop
out
popf
mov
push
pop
ficompl
decl
mov
mov
inc
das
ss
xor
mov
mov
jno
sarl
out
inc
adc
iret
add
in
inc
ret
pop
imul
push
in
repz
or
cwtl
fisubrl
jle
push
mov
loopne
xor
sbb
test
ljmp
hlt
out
inc
outsl
out
ljmp
mov
and
pop
jne
mov
hlt
outsb
push
jns
sti
inc
sub
in
decl
mov
sub
xchg
clc
mov
aas
out
imull
lds
jnp
mov
cmc
incl
shlb
test
dec
jne
sub
ret
dec
cmp
pusha
js
add
mov
pushl
add
add
nop
inc
cmc
mov
std
mov
lds
cmp
pop
into
andl
fwait
in
mov
loope
ljmp
sar
jmp
jmp
out
add
add
pop
or
and
push
pop
jl
ficompl
jno
inc
stos
in
cmp
inc
jno
mov
jbe
dec
pop
xor
out
lret
aad
mov
dec
sub
push
mov
inc
out
mov
xchg
stos
jmp
std
ja
or
call
outsl
sub
dec
jb
pop
cmpb
inc
incb
loopne
or
gs
add
clc
shll
inc
clc
cli
das
pop
inc
dec
scas
icebp
std
sub
pop
xor
test
loopne
mov
pushl
push
jne
pop
in
sbb
push
js
add
leave
aam
iret
and
dec
ficoml
mov
push
jbe
mov
push
aas
dec
push
mov
hlt
lcall
jmp
mov
stos
lods
cmp
loop
mov
fs
cmp
mov
fcmovne
je
adc
cmp
popf
shlb
lret
sub
xchg
imul
decl
ds
dec
imul
leave
mov
or
or
loop
xor
decl
out
les
in
ret
clc
adc
fnstenv
clc
lock
mov
mov
push
pop
jo
push
mov
mov
pop
insl
rcll
stc
push
pop
adc
leave
jbe
inc
mov
inc
loop
push
iret
pop
mov
lods
add
jnp
andb
mov
rorb
aad
jmp
out
in
xchg
push
scas
shlb
mov
imul
push
pop
cli
test
stc
orl
stos
xchg
decb
cmc
decl
mov
cltd
shl
data16
lcall
xchg
mov
addr16
aad
test
stc
sbb
sub
outsl
lock
pop
clc
add
enter
dec
pushf
mov
adc
in
sub
decl
rorb
shl
push
adc
dec
sub
pop
fimuls
inc
jae
jmp
call
nop
pop
cmpl
cs
into
nop
mov
sbb
sbb
inc
jno
int
mov
das
std
incl
addr16
inc
ljmp
nop
mov
sbb
into
lcall
das
pop
or
ret
sbb
cmpsb
pop
aad
jmpw
shll
sti
and
and
cltd
ds
add
fdivrp
xchg
pop
xchg
ja
xor
mov
xchg
jnp
les
dec
loop
xor
loope
jl
negb
daa
sbb
mov
and
loop
movsb
mov
mov
movsl
mov
or
inc
aaa
sbb
stos
aas
jg
pop
cld
mov
xor
jae
inc
fs
popa
mov
add
cmc
push
in
test
fnstenv
pop
and
xchg
push
sub
decl
dec
pop
jp
les
lret
mov
sar
fidivrl
push
xchg
mov
and
shrl
movsl
mov
sbb
add
add
pop
sbb
faddl
das
fldt
fldenv
rcl
mov
popw
fstpl
fbld
inc
or
aam
rcll
or
add
push
sub
std
in
xor
push
daa
dec
sbb
mov
loopne
test
das
cmc
pop
std
mov
imul
mov
hlt
mov
and
sub
fwait
and
jg
das
push
mov
push
stc
inc
push
push
dec
lods
inc
push
xor
xor
jnp
xor
add
cs
mov
xchg
xor
outsb
xor
das
lock
push
mov
sbb
fs
lret
sahf
xchg
sarl
lods
lods
or
xor
sbb
rol
lods
dec
es
out
outsl
pop
std
pop
clc
cwtl
notb
movsl
scas
ss
jnp
movsb
push
xchg
divb
or
test
jmp
lret
lret
mov
inc
cmp
pop
push
lds
std
out
inc
sti
xor
bnd
decl
aaa
jo
out
das
pop
fisubs
dec
mov
int
dec
dec
imul
and
mov
repnz
mov
pushf
mov
mov
push
es
xor
mov
pop
pop
cli
mov
inc
add
ljmp
pop
lods
clc
dec
jl
jmp
call
pop
mov
jae
or
fs
scas
imul
cmc
ljmp
mull
fcompl
pop
enter
ljmp
ljmp
cmc
inc
cltd
xor
inc
sbb
dec
add
jl,pn
or
mov
push
push
jecxz
lcall
hlt
ljmp
aam
or
aaa
push
mov
stc
pusha
ss
mov
stos
outsl
icebp
divb
lea
fnclex
jae
negl
pop
inc
add
mov
cmp
sbb
xchg
movsl
inc
dec
jp
movsl
outsl
iret
icebp
js
dec
mov
xchg
and
imull
inc
and
xor
pop
add
or
int
repnz
jg
lods
loopne
rcrl
test
out
sub
enter
adc
and
add
lcall
mov
pop
jne
or
pushf
cmpsl
adc
and
mov
cmp
sahf
mov
iret
sti
mov
outsb
lcall
lcall
test
es
pop
jecxz
nop
add
lcall
ljmp
outsl
xchg
lock
ret
in
pop
push
cmpsb
in
ret
fsub
popa
sub
enter
popf
dec
ja
leave
ret
in
mov
mov
cs
rcrl
xchg
cli
jle
fimull
pop
jecxz
lock
sub
inc
xchg
ljmp
cmp
mov
pop
xchg
adc
js
pop
std
dec
jmp
cmp
xor
es
jecxz
push
lds
and
push
dec
sbb
cmp
test
cltd
dec
pop
adc
mov
lock
lret
imul
call
sbb
or
adc
sub
scas
cmp
push
and
aaa
mov
mov
mov
rorb
ljmp
mov
or
cmp
fistpl
adc
das
xchg
cmp
decl
push
jbe
pop
popl
mov
ljmp
lock
or
xor
or
or
pop
mov
add
dec
cld
incl
mov
les
xchg
xchg
cmpsl
mov
adc
mov
std
dec
sub
adc
inc
push
sub
xor
jg
jmp
push
imul
sub
mov
mov
jg
decl
push
sub
lods
mov
nop
fmull
out
int
push
and
jb
out
inc
mov
pop
mov
arpl
insl
sbb
ljmp
dec
movsl
fistpll
data16
dec
mov
in
jg
jmp
dec
xor
cmp
mov
add
fcmovne
decl
push
adc
pop
sarl
test
or
decl
and
lret
mov
and
xor
dec
jbe
ljmp
outsl
nop
scas
pop
xor
into
hlt
and
jo
xlat
dec
mov
mov
cmp
dec
push
insb
mov
in
movsl
xchg
dec
sbb
jne
daa
popa
aam
decl
xlat
stc
ret
dec
xchg
xchg
adc
js
push
rcrb
or
xchg
sbb
or
aas
out
or
ret
adc
decl
movsl
cmpsl
stc
rcrl
jl
hlt
int
mov
push
decl
push
dec
jbe
movsb
arpl
fildll
fcmovu
mov
jmp
or
add
mov
push
nop
jle
xchg
ficomps
mov
inc
bound
hlt
outsl
test
xchg
lcall
or
dec
xchg
push
jp
cmp
cmp
movsl
push
in
gs
inc
dec
outsb
mov
lea
cmp
and
shl
mov
icebp
fisubrs
mov
cmp
cmpl
add
pop
lock
decl
pushl
mov
clc
sbb
push
out
call
mov
lcall
hlt
notb
daa
jg
inc
pop
sbb
jge
lcall
popf
cwtl
andl
and
lcall
mov
pop
ljmp
sub
das
push
or
testb
mov
push
fcomip
std
gs
ror
or
ja
mov
hlt
jmp
aad
mov
ficomps
adc
test
mov
sbb
sbb
das
cmc
addr16
pop
sub
sub
sbb
mov
das
hlt
sub
mov
jo
rcl
adc
jo
dec
loope
jmp
data16
pop
loopne
lahf
xchg
lret
out
dec
stos
mov
mov
call
mov
cmpsb
mov
mov
std
mov
pop
fisttpll
mov
push
pusha
iret
cmp
or
mov
jb
mov
add
incl
aas
loop
clc
neg
xchg
hlt
xor
popf
push
sub
fnsave
fst
mov
pop
xchg
sti
daa
rdtsc
stc
inc
or
rclb
lods
push
jo
jg
sbb
inc
not
hlt
push
jmp
mov
daa
or
xlat
mov
sbb
movsl
sbb
fwait
outsl
lock
in
repz
cmp
out
iret
mov
push
gs
jmp
cmp
rcrl
aam
xchg
sub
movsl
adc
pop
loopne
add
mov
call
push
add
inc
testb
push
js
das
push
loopne
test
out
jno
xchg
test
jp
cmp
call
pop
jl
aad
popa
inc
and
lods
jmp
sti
dec
icebp
cmp
int
movsl
repnz
and
mov
xchg
sahf
sub
cld
decl
sbb
out
pop
scas
xor
repz
imul
pusha
jmp
mov
es
fwait
decl
cld
push
cmc
imul
sbb
outsl
add
lcall
aad
jmp
call
subl
ffree
and
pop
inc
mov
xor
sub
cmc
pop
pop
fs
in
mov
inc
andl
cli
lcall
cmp
shrb
or
sbb
jmp
inc
out
loop
in
incl
jp
out
adc
int
aaa
xor
cmc
xchg
insb
jg
jg
std
sti
je
lret
jg
js
xor
cld
mov
dec
pushl
call
test
jno
out
cmp
sbb
ljmp
cmc
ret
fildl
sti
xchg
sbb
mov
dec
jns
incl
lcall
dec
cmp
out
inc
push
jae
fildl
stos
cmp
test
loopne
xchg
js
push
sarb
pop
adc
mov
lods
jbe
inc
les
pop
sarb
push
fildl
adc
mov
mov
sub
shll
push
cmp
inc
mov
incl
xor
in
andb
jnp
cmp
cmp
fildl
mov
lcall
sti
into
add
or
test
push
test
pop
gs
push
daa
bound
inc
sub
mov
scas
shl
mov
mov
mov
or
ljmp
sub
out
push
ret
das
push
fwait
mov
add
leave
jo
pop
aaa
aas
pop
pop
cwtl
mov
lods
jg
jne
push
xchg
cwtl
outsl
out
adc
rcrb
mov
cmp
pop
inc
dec
addr16
sbb
loopne
jmp
sbb
mov
lods
dec
jmp
mov
clc
in
je
or
sub
jle
movsl
ljmp
lcall
aas
lahf
ret
pop
cmc
stc
movsl
stc
adc
mov
push
bound
arpl
ss
jmp
sbb
scas
cmp
pusha
out
xor
dec
nop
mov
jg
fistpl
push
outsb
sub
adc
jnp
out
sbb
add
push
jg
jmp
mov
push
or
jmp
mov
push
lcall
fidivs
mov
into
out
ret
pushf
push
jbe
shrb
push
jb
inc
incl
test
imul
sarb
test
leave
fisubrl
scas
fsubs
icebp
push
or
sbb
jne
call
jno
mov
icebp
imull
je
fisttps
fidivs
mov
push
lcall
cs
stos
pop
push
xchg
lock
incl
cmp
rcrb
fsubs
sub
sub
test
push
es
mov
ffreep
or
sar
fdivrl
sub
jo
sbb
into
push
jmp
add
push
in
push
pop
orl
pop
mov
jnp
in
sbb
decl
xor
adc
mov
jae
cmp
and
sub
xchg
jg
push
cmpsl
mov
ficoml
ljmp
incl
jmp
add
inc
pop
cltd
sbb
inc
or
xor
push
dec
leave
cmp
jmp
mulb
mov
popf
jmp
incl
fimuls
les
xchg
int3
in
clc
int3
jnp
xchg
jmp
xor
pop
in
cmp
cmpsb
pop
in
out
dec
outsl
scas
jno
stos
incl
test
movsl
ss
sbb
lcall
jmp
mov
outsb
jo
ja
jbe
aas
lahf
call
cmp
mov
mov
mov
mov
push
dec
lret
jns
lahf
sahf
ret
mov
sti
add
cmp
jg
push
movsb
std
test
fisubl
cmp
mov
jmp
mov
add
dec
pop
ret
js
inc
dec
xor
in
mov
pop
aam
fstpt
pop
cltd
mov
fimull
loope
iret
test
push
cwtl
xor
mov
ljmp
push
shl
pop
mov
testb
lods
cmpsl
and
and
sub
ljmp
fistpll
or
dec
movl
adc
out
pop
mov
pop
jnp
loope
fnstsw
inc
mov
jnp
xchg
cmp
lret
jns
fucomip
in
sti
xor
sub
data16
loop
maskmovq
negl
test
gs
orl
cmp
orl
das
jb
mov
lods
lock
xor
adc
or
enter
icebp
mov
mov
leave
ret
lret
popa
lret
xchg
add
jg
xchg
jecxz
in
jg
ljmp
sub
add
add
icebp
call
sarb
je
fwait
adc
add
std
or
out
outsb
inc
sahf
fldenv
fdiv
lret
in
pushf
out
mov
jl
inc
stos
mov
lret
adc
call
mov
pop
jl
fwait
sbb
mov
call
ljmp
jne
push
cmp
lret
mov
jnp
cmp
inc
push
pop
pop
jle
add
sbb
std
loop
and
fwait
adc
int
push
mov
mov
imulb
cmp
lcall
out
pusha
das
pop
mov
push
mov
ror
movsb
push
addr16
call
jae
leave
inc
test
dec
cmpb
ret
and
add
stc
cmp
hlt
incl
mov
out
or
mov
inc
mov
push
add
in
fildll
mov
mov
sub
fldl
je
stos
call
in
cld
add
xchg
xor
roll
scas
imul
incl
sub
fsubr
movsl
mov
jo
jae
sub
add
loopne
repnz
adc
ds
dec
push
enter
testb
cwtl
xlat
aas
test
rcll
or
rorl
mov
jle
jns
push
call
mov
addr16
mov
imul
xchg
clc
push
in
adc
stos
in
hlt
mov
mov
loop
stos
pushf
jp
xlat
cmp
std
mov
cmp
push
ds
outsb
mov
mov
es
jbe
inc
inc
mov
sarl
stos
les
insb
arpl
lods
addr16
shll
lock
das
push
pop
jns
cmpsb
pop
rcpps
push
push
adc
test
in
aas
xor
stos
cmp
dec
xchg
inc
jmp
cmpsb
xchg
repnz
lret
adc
std
cld
mov
lock
in
das
jmp
xor
popf
push
pop
xchg
pop
mov
fsincos
push
or
lcall
xor
scas
jne
xor
mov
xor
fildl
cli
jmp
jp
and
sbb
mov
loopne
add
mov
movsb
mov
in
rorb
jecxz
ljmp
in
out
jo
sub
sub
mov
sbb
mov
dec
mov
pushl
inc
mov
stos
xor
aad
scas
pop
xor
shll
dec
std
jmp
mov
aaa
jno
lea
xor
mov
push
mov
shrb
in
pop
int3
ss
lods
xchg
cltd
mov
dec
mov
cmpsl
and
mov
gs
inc
pushf
xchg
mov
ljmp
rolb
outsb
jne
js
cmp
xorl
and
or
not
popf
mov
push
outsb
pop
popf
mov
push
fldenv
push
push
dec
xchg
test
icebp
incl
subl
call
jae
mov
sub
jmp
shl
or
dec
inc
fidivrs
sub
daa
shll
out
jno
test
incb
stos
pop
lcall
into
pop
call
jp
xchg
sbb
dec
sti
or
pop
in
xor
cmp
movsl
divb
cli
mov
dec
arpl
push
xchg
push
in
lds
loope
jmp
decl
pop
xor
imulb
xchg
addr16
mov
jg
fcomip
dec
clc
mov
ret
push
out
cmpsl
dec
mov
inc
cmp
decl
mov
and
cld
outsb
jns
pop
xor
pop
icebp
xlat
test
and
fisubl
sub
jl
lret
mov
xor
xchg
jge
iret
dec
mov
incl
cli
cmp
jg
lahf
scas
push
jl
xchg
sub
mov
call
push
jne
push
mov
mov
and
mov
cltd
adc
sub
adc
mov
ret
sub
fldt
cmpsl
lods
jg
dec
jnp
rcr
dec
les
mov
lea
push
cld
mov
and
inc
jb
mov
andb
cmpsb
mov
mov
sbb
int3
mov
inc
fsubr
mov
xor
or
pop
mov
dec
push
rclb
dec
call
jg
pop
xor
js
sbb
pop
xor
mov
out
mov
movsb
pop
jo
jmp
test
dec
icebp
jge
data16
jmp
mov
cli
sbb
inc
dec
mov
cmpl
push
inc
shl
mov
scas
xchg
sti
jae
mov
fucomip
incl
xlat
js
jmp
cmpsb
cmp
call
outsl
std
pop
out
pushf
or
imul
popa
pop
dec
shr
sti
outsl
cmc
mov
pop
add
js
jns
add
dec
jno
outsl
lock
repnz
jmp
stos
dec
std
or
xchg
out
mov
jge
movsl
movsl
pop
mov
inc
aam
mov
jecxz
jmp
mov
xchg
mov
fldcw
decl
lea
inc
cmovge
jo
ret
jmp
es
in
out
fisttpll
bound
or
jg
sub
stos
rorl
and
and
aam
add
mov
and
cli
decl
out
pusha
cli
add
in
dec
add
xor
ljmp
jbe
add
push
push
xchg
lcall
jg
test
pop
testb
out
jns
push
in
out
into
mov
jae
loope
cmp
mov
cs
cs
sbb
test
jbe
imul
stos
push
adc
scas
rcrb
mov
or
test
pusha
outsb
test
decl
mov
jmp
mov
push
dec
hlt
xor
iret
pavgb
mov
pop
sbb
cld
jecxz
test
pop
cld
jg
xor
out
cmp
sbb
int
call
das
jo
pop
loopne
pop
mov
adc
mov
std
mov
jle
rcrb
lret
inc
push
ljmp
addb
aas
popa
mov
jmp
jg
fisubrl
jp
sti
add
shrl
decl
mov
pushf
mov
or
push
xchg
addb
cmc
cwtl
inc
lods
sub
shll
pop
sbb
fldl
imul
adc
or
jne
pop
cmp
jmp
int3
clc
outsl
hlt
jg
xchg
lock
push
arpl
nop
mov
add
scas
mov
outsb
sub
mov
add
mov
jecxz
mov
in
incl
jb
mov
jle
sbb
dec
ds
pop
imul
pop
clc
jg
mov
or
lods
inc
mov
xchg
subb
jne
fstpl
pop
pop
jnp
fdivrs
mov
into
clc
fidivs
mov
dec
pop
cli
ret
repnz
outsb
movsl
adc
cli
call
dec
push
push
push
in
mov
stc
scas
jnp
push
inc
pop
ret
and
shlb
mov
add
hlt
call
loopne
outsl
pop
jle
mov
cmp
call
pusha
or
sub
cmp
adcb
fadds
lret
jmp
dec
mov
xor
sbbl
lods
incl
adc
inc
les
fdivs
ret
hlt
dec
std
call
pop
inc
out
fistpl
push
jns
jecxz
adc
jle
outsl
icebp
insl
je
test
jecxz
stos
mov
mov
jmp
lods
fbstp
sub
test
mov
push
ljmp
mov
pop
repz
lret
rclb
xchg
xorl
cmovb
ds
cmp
enter
push
cltd
jns
push
test
decl
mov
inc
fdivrl
cwtl
sbb
loopne
mov
outsl
push
mov
out
cmc
inc
ljmp
pop
inc
xlat
adc
xchg
dec
mov
rcrl
add
mov
jp
add
jns
cltd
mov
adc
adc
loop
cld
decl
cld
mov
out
cwtl
add
inc
outsb
mull
inc
data16
push
dec
pop
cld
mov
shrl
xchg
xlat
add
jmp
rclb
mov
inc
sarb
decl
out
push
jge
enter
xor
scas
mov
lods
and
rcl
ljmp
decl
jle
neg
ret
sbb
lret
inc
je
js
cmpsb
mov
int
ret
incl
aas
xchg
mov
aaa
scas
jge
rorl
inc
mov
pop
mov
scas
cli
decl
adc
movsl
and
daa
icebp
push
xchg
scas
inc
movsb
pop
rol
cmp
fbld
mov
xor
stos
popf
sub
dec
test
dec
outsl
js
xchg
mov
int
push
incl
adc
sysexit
xchg
psllw
push
xor
cmp
ljmp
loop
pushl
outsl
mov
cmp
ret
out
in
outsl
iret
lock
sbb
test
pushl
inc
or
int3
into
outsb
adc
insb
xchg
sarb
sbb
fstpt
ljmp
pop
insb
jmp
adc
sbb
adc
std
sbb
add
inc
ljmp
jns
vunpckhps
scas
loope
lock
xchg
inc
mov
incl
cmp
and
sub
sbb
inc
fs
pushl
adc
mov
xor
pusha
mov
dec
test
rcrb
loope,pn
ljmp
cld
negb
daa
pop
pop
lods
testb
xchg
insl
adc
jg
mov
xor
nop
and
imul
ds
xchg
lea
sbb
out
sub
jg
inc
gs
daa
fmuls
mov
inc
push
jg
mov
mov
jg
jns
add
das
repnz
imul
adc
jle
aad
sbb
std
ret
mov
mov
les
mov
lods
jmp
mov
call
jmp
in
pop
stc
pop
push
cmpsb
es
repnz
push
xchg
push
je
cmp
or
sahf
rorb
xor
xor
add
loop
stc
call
xchg
mov
pop
mov
pushl
cmp
cmp
or
popa
je
stos
out
adc
and
pop
std
xchg
outsb
jle
cli
mov
in
ljmp
sti
push
inc
sub
in
fucomip
enter
xchg
mov
xlat
mov
aas
enter
mov
aas
int
sahf
cmpsb
scas
inc
mov
fucomi
inc
lock
cld
pop
incb
rcll
push
cmp
call
push
in
pop
fwait
mov
jecxz
push
pusha
adc
outsl
aad
add
decl
mov
fwait
or
xchg
push
aad
outsl
lock
xor
cwtl
push
outsb
xchg
and
or
or
popa
ret
xchg
add
inc
xchg
push
shrl
push
xor
push
sub
jmp
xchg
fldl
test
fnclex
add
xchg
sub
roll
out
jne,pt
decl
movb
jns
xor
jno
popf
repnz
cmp
sub
mov
in
in
mov
push
pushf
adc
sbb
cmp
sub
mov
push
cli
pop
push
aam
adc
push
push
cmp
arpl
cld
mov
je
imul
in
pop
mov
mov
dec
cld
lcall
dec
scas
shll
cmp
sbb
push
mov
add
inc
imull
add
in
ud1
mov
std
incl
imul
pop
clc
cltd
jg
arpl
mov
test
imul
data16
add
sub
inc
xchg
incl
mov
fisttps
mov
inc
cli
lcall
js
fldenv
adc
movsb
shlb
sub
jmp
call
jmp
xchg
push
bound
mov
and
mov
int
cmp
push
daa
in
adc
ljmp
xchg
mov
adc
ja
bound
fisubrs
cmp
inc
jo
divl
loopne
ret
lock
push
xorl
sahf
js
sub
insb
inc
xchg
decl
jg
push
addr16
negl
pushf
std
test
xchg
sbb
and
push
jne
push
or
add
adc
mov
sar
pop
test
mov
scas
repz
xchg
mov
test
ljmp
and
pusha
popl
fimull
in
ret
jl
scas
sbb
repnz
test
mov
inc
ja
adcb
cmc
sbb
mov
test
pushw
data16
mov
jg
jo
mov
call
sub
movsl
cmp
fsubl
lcall
dec
mov
int3
sub
cmp
or
xchg
es
jmp
push
movsl
lods
cs
mov
sub
leave
inc
aad
mov
icebp
add
lds
push
out
divb
adc
sbb
loope
and
pop
rorl
lahf
shl
cmp
pushl
sub
add
int3
out
arpl
push
mov
cmp
mov
sub
call
sbb
and
cmp
dec
mov
gs
repnz
mov
jmp
fisubl
xchg
mov
in
lods
cld
sbb
in
fidivrs
ror
repz
cli
call
fists
adc
jge
adcl
mov
clc
adc
scas
sub
mov
int
repz
mov
loopne
jmp
mov
mov
inc
push
inc
add
sar
mov
fnstsw
call
xorb
jae
hlt
insb
imul
add
jmp
jge
push
inc
pop
cltd
bound
and
mov
pop
xor
std
sub
sar
pop
sub
and
sbb
mov
add
mov
inc
shlb
pop
mov
fisubrs
out
cltd
add
loope
sub
pop
icebp
imul
leave
mov
nop
ja
mov
sbb
mov
das
dec
or
inc
push
cs
jo
std
mov
in
ljmp
push
dec
cwtl
cmp
sub
cmp
push
push
push
cld
add
pusha
int
sbb
push
nop
add
shrb
lcall
std
pushl
enter
jecxz
and
inc
jle
pop
xchg
mov
and
pop
call
adc
sub
cmpsl
or
xchg
pop
mov
sub
mov
cs
jl
test
xchg
pop
mov
jg
repz
jg
fists
adcb
pop
std
int
cmp
dec
sub
pop
gs
fmulp
adc
outsl
xor
jg
lret
inc
xchg
je
xchg
mov
mov
mov
sbb
xchg
mov
decl
clc
cwtl
mov
je
push
cmp
xchg
or
add
stos
cmc
xor
je
stos
pop
mov
les
lcall
lcall
jg
cmp
ret
sub
mov
add
lds
mov
fdivr
jge
add
roll
jl
ljmp
das
std
incl
mov
aaa
and
inc
imul
and
cmpsl
loop
sbb
sarl
loope
std
outsl
dec
xor
movsl
int
jnp
stos
lock
jecxz
pusha
das
adc
decl
test
mov
cmp
sub
mov
lret
lock
mov
add
xor
adcl
mov
pop
dec
sbb
ljmp
mov
es
mov
push
inc
popa
mov
ljmp
push
push
mov
xchg
fbstp
pop
filds
adc
sub
mov
or
data16
call
pop
mov
xor
iret
pop
mov
dec
mov
das
mov
fistpll
repnz
out
in
incl
inc
loope
adc
add
arpl
fdivrp
cmp
andl
jg
push
fmull
flds
sarb
mov
call
test
dec
mov
pop
mov
jns
jne
mov
sub
test
aam
xlat
xor
xlat
ret
add
cmpl
mov
xorl
int
fstps
pop
mov
sbb
shrl
rolb
outsl
cmc
incl
aad
or
ret
add
in
or
call
sbb
call
pop
aaa
pushf
pop
sub
das
adc
mov
in
fld
jo
popf
ljmp
lcall
je
jae
daa
mov
pop
pop
stc
pop
pop
ljmp
bound
repz
fidivrs
inc
call
ret
mov
dec
inc
lock
lea
pusha
pop
xchg
leave
repnz
adcl
cmp
jmp
in
int
ficomps
mov
add
and
ret
jle
hlt
lcall
cmp
mov
in
cmp
jp
lret
shlb
cld
inc
sar
mov
jbe
stos
mov
lret
mov
mov
decl
imul
cmpsb
aad
or
mov
fildll
das
out
loope
push
inc
int
xor
dec
clc
int
inc
mov
mov
pushf
fcmovnu
in
gs
data16
icebp
fstpl
decl
loop
mov
mov
sub
jmp
push
sahf
fsubrl
inc
cmp
mov
shll
xor
std
ljmp
dec
ljmp
addr16
lods
ret
es
pop
cmp
test
clc
pushf
lcall
je
ss
push
cmp
andb
dec
shll
jno
or
push
mov
jp
inc
lea
psubw
add
pop
out
inc
ficomps
cmpl
mov
add
pushf
add
cmpsb
jns
lds
dec
add
filds
xchg
jae
add
mov
das
pop
adc
repz
xchg
in
jne
mov
popa
mov
pop
pop
addr16
cmp
icebp
repz
leave
in
js
cli
fnstsw
or
pop
mov
xchg
out
pop
test
pop
or
in
cmp
pop
je
fisubrl
aad
xchg
and
sub
xor
cwtl
imul
sbb
roll
and
xchg
or
push
fsts
test
or
push
pop
into
xchg
adc
clc
inc
mov
adc
insb
mov
xor
xor
mov
adc
decl
jmp
xor
or
movsb
jg
out
sti
sbb
and
jg
fsubrl
in
fwait
mov
push
cmp
mov
jp
jg
lcall
mov
mov
insl
inc
lcall
loop
mov
in
mov
inc
imul
sub
inc
xorl
dec
add
in
loopne
outsl
hlt
jg
sarb
adc
mov
mov
lcall
lcall
call
push
repnz
sbb
mov
lahf
jae
mov
pop
repnz
popl
inc
loop
jns
mov
ss
sarl
call
mov
testb
mov
sub
loopne
lods
call
add
jb
add
xchg
lea
xor
fdivrp
das
hlt
sbb
add
loopne
ja
repnz
outsb
jecxz
cmc
mov
jmp
subl
lods
ss
insl
jno
shl
mov
stc
jnp
popa
clc
sbb
stos
stc
cmpsb
jno
and
lcall
lcall
dec
sahf
xor
push
push
sub
in
lods
xor
sarb
aas
movsl
and
ud0
xor
xchg
movsl
mov
or
movsb
xor
jmp
stos
lea
push
lahf
mov
xchg
pushf
inc
push
lods
ret
in
push
and
fdivl
adc
mov
push
decl
hlt
pop
jp
jo
mov
int3
pop
int3
add
fdivl
ret
adc
lcall
cld
pushl
shlb
adc
or
aaa
mov
mulb
rcll
adc
out
mov
dec
std
mov
mov
in
adc
add
mov
mov
sahf
add
decl
push
push
and
sahf
pop
loopne
aam
lods
adcb
dec
push
mov
pushf
int
rcrl
sub
inc
test
push
test
cmc
adcb
inc
pop
or
stos
cld
add
repnz
sub
movsb
decl
and
test
push
bound
cmp
iret
mov
add
in
cli
mov
mov
inc
inc
ljmp
cmp
cmp
jns
pushl
fidivl
stos
lock
insb
lea
clc
in
jp
adc
mov
hlt
das
push
mov
dec
or
or
xor
dec
imul
call
roll
push
or
int3
in
dec
or
in
and
ror
inc
cmp
sar
clc
add
mov
or
rcl
in
xchg
out
pop
xor
mov
push
add
adc
sub
mov
pop
and
lea
inc
xlat
scas
lahf
xchg
push
out
mov
xchg
mov
enter
mov
popf
out
outsb
repnz
sub
jne
mov
aad
testb
in
add
movsl
jb
and
mov
adc
mov
mov
xor
push
gs
jecxz
and
pop
ret
and
pushl
mov
or
or
ds
mov
mov
mov
jb
jne
into
jmp
jg
mov
bound
push
add
dec
adc
sbb
jge
sarb
xchg
sbb
leave
sub
xor
pop
pop
pushf
pop
ljmp
out
dec
bound
mov
loopne
pop
pop
jle
dec
jb
pushf
adc
pop
jne
pop
loop
rcrb
ret
mov
push
hlt
int
mov
or
fs
pop
cli
xchg
mov
xchg
bound
or
or
mov
lds
call
jb
cmp
mov
ja
imul
pushl
dec
int
out
cmp
mov
sti
int3
roll
xchg
cltd
xchg
jmp
decl
jno
test
cmp
xlat
cmp
dec
andb
push
dec
or
dec
cmp
cmp
scas
test
lret
in
jo
dec
test
int3
call
andb
loopne
imul
lock
lret
mov
addr16
push
mov
pop
les
aas
popa
jb
inc
add
and
popa
pushf
mov
shl
dec
push
sbb
add
or
push
ja
cmp
std
pop
jae
outsl
cmc
decl
dec
int
popf
shrb
mov
aaa
add
add
call
xchg
andl
xchg
insb
call
leave
jmp
incb
jbe
aam
ds
nop
mov
out
andl
jbe
movsl
mov
int3
arpl
rol
push
out
clc
outsl
pushl
adcl
push
xor
mov
mov
inc
or
das
ret
add
clc
ljmp
adc
ret
sahf
xor
div
xor
nop
inc
or
add
xor
dec
call
lods
or
mov
sti
ret
inc
bound
out
or
adc
mov
jg
lcall
push
mov
cli
int3
lret
cmp
inc
mov
pop
enter
lods
xchg
mov
mov
mov
gs
int3
mov
in
add
sbb
dec
cmc
wbinvd
xchg
decl
add
movsl
scas
and
inc
jge
mov
pop
std
pop
sahf
pop
adc
cmp
ss
call
clc
test
mov
rcrb
nop
xlat
dec
push
jg
lods
mov
jns
fbstp
bnd
lock
push
loop
pop
sub
mov
mov
int3
pop
mov
jl
xchg
sub
dec
xchg
mov
outsl
mov
sti
cmp
lcall
mov
fs
loopne
jbe
mov
test
ret
pushl
inc
and
dec
sbb
pop
je
aas
lock
push
std
mov
std
scas
es
mov
cmpsb
mov
lcall
sub
dec
inc
and
mov
rorb
sbb
pusha
lock
mov
aad
and
lcall
imul
movsb
jge
roll
xor
pusha
mov
fucomp
imul
and
or
outsl
lcall
in
sbb
jge
lret
dec
dec
xlat
mov
das
hlt
lea
loopne
mov
int3
xchg
loopne
ljmp
test
imull
imul
dec
loop
mov
inc
sub
sub
adc
testl
xchg
lret
in
dec
fdivr
call
inc
xchg
xor
int3
orl
pushf
dec
sbb
mov
adc
push
dec
xchg
adc
clc
cmpsb
jno
out
pop
cmp
dec
rcr
outsl
dec
jmp
incl
sub
movsl
pop
repz
stos
lret
adc
cmp
mov
lds
ljmp
pop
adcb
push
dec
or
flds
mov
dec
xorl
pop
lea
cmp
js
mov
adc
inc
daa
pop
dec
movsb
idiv
in
call
cs
lds
sub
adc
ret
xchg
cwtl
jge
adc
ss
pop
stos
mov
cmpsl
sub
push
inc
es
push
es
push
stos
xor
add
in
lcall
dec
add
cli
in
rcll
pusha
add
sbb
fucomip
or
adc
insb
xor
mov
pop
fstps
push
fstps
jns
incl
test
jbe
repnz
sub
jge,pn
push
pop
sub
aad
lds
push
dec
mov
cli
das
mov
cld
inc
mov
dec
rcrl
arpl
ss
xchg
pop
lret
sbb
jae
xchg
mov
test
decl
sub
add
repnz
dec
cmp
out
ss
and
fsubr
mov
cmp
push
js
enter
dec
aas
call
jg
sbb
xchg
xor
xchg
adc
pushl
push
das
lods
jnp
mov
sub
mov
cmp
add
xchg
nopl
bound
fldl
or
decl
cld
decl
add
fldlg2
push
ds
negl
adcl
dec
xorb
sbb
scas
mov
sub
rorb
push
sbb
mov
jl
icebp
fbld
cmp
cmp
push
es
lods
loopne
mov
pop
call
test
mov
mov
inc
sbb
loopne
cltd
mov
scas
addl
push
stos
inc
aaa
mov
mov
add
aaa
sub
pop
cmc
clc
sti
xlat
mov
xor
in
outsl
lock
dec
sbb
std
inc
shrl
repnz
lret
pop
loopne
jecxz
pop
scas
mov
imul
cmpsb
add
mov
fbld
cmc
push
call
push
fbstp
andl
inc
mov
mov
xchg
mov
push
mov
inc
ds
mov
sbb
jg
in
lret
dec
int3
mov
push
add
cmp
and
pushf
add
mov
dec
lret
pop
sub
mov
lea
mov
xor
dec
in
movsl
cmp
cmpl
push
loop
gs
int3
jg
in
shrl
iret
cmp
sbb
mov
ja
xor
xor
pushl
cmc
fistpll
pop
aaa
imul
leave
loope
icebp
or
dec
push
ljmp
in
cmc
add
imul
jbe
xchg
xchg
imul
das
cmc
add
jb
bound
and
mov
incl
clc
and
gs
mov
sarl
cmp
psadbw
xor
adc
mov
jmp
jg
dec
bound
add
lock
push
pushf
testl
mov
out
mov
mov
lcall
in
mov
sub
ljmp
decl
adc
out
cmc
imul
xor
pop
xor
inc
mov
jg
jmp
lahf
dec
xchg
sbb
xchg
mov
push
int3
daa
dec
pop
add
lret
aaa
cli
test
fcoml
stos
or
das
imul
mov
ds
dec
mov
stos
ljmp
sti
ret
cs
loopne
lret
mov
jmp
pop
fnstsw
insb
adc
pop
or
decl
sbb
orl
call
add
jb
adc
mov
xor
mov
xchg
xor
xlat
mov
jae
out
push
out
cmc
ret
sahf
and
popf
mov
stc
inc
fmull
mov
fidivrl
ljmp
pushl
fdivr
xchg
icebp
icebp
test
dec
and
hlt
jg
mov
test
in
push
sub
aam
ljmp
pusha
adc
iret
xchg
lahf
je
add
loopne
icebp
dec
pop
clc
pop
pop
mov
es
inc
cltd
inc
ret
lcall
hlt
dec
sub
stos
stc
mov
mov
daa
popf
adc
and
pop
popf
fisttpll
movsb
loop
or
xchg
in
test
lret
inc
outsb
push
iret
sarl
insl
pop
xchg
xchg
jne
mov
add
incl
leave
lea
ret
aas
pusha
pop
mov
mov
enter
notb
mov
mov
iret
or
pop
cli
ret
enter
mov
sub
and
cltd
dec
add
mov
inc
das
fldl
popf
or
or
sbb
jmp
addr16
or
cwtl
mov
fstpl
decl
hlt
cli
inc
or
mov
mov
push
or
jg
pushl
ret
scas
iret
lock
add
mov
rorb
xlat
sub
pop
incl
mov
popa
cs
mov
and
inc
test
lcall
and
xor
int
xchg
imul
jae
jo
xchg
ds
insb
hlt
dec
sub
adc
push
lea
and
jne
gs
adc
pop
jbe
mov
ret
sbb
scas
aam
sub
fisttpl
rcll
bound
jmp
mov
test
push
enter
aas
dec
popf
push
lret
push
inc
cltd
incl
ljmp
fwait
incb
lret
mov
mov
push
push
jbe
out
pop
pop
clc
pushl
es
fdivp
rclb
jl
negb
add
test
dec
mov
add
pop
cli
xchg
into
out
aad
xchg
xor
out
arpl
call
movsl
mov
and
push
pop
std
pusha
mov
call
cwtl
mov
sarl
jg
adc
mov
pop
mov
pop
shlb
fs
xchg
sub
xor
pushl
je
rclb
das
mov
outsl
jmp
gs
test
jle
xchg
fildl
push
fists
mov
int3
js
mov
inc
decl
mov
out
cmp
les
dec
mov
orb
add
push
inc
adc
mov
orb
stos
dec
dec
pop
loopne
js
imul
enter
incl
mov
or
sub
lcall
hlt
mov
imul
or
mov
stc
inc
int
jmp
shrb
mov
testl
mov
push
cmpsb
xchg
fcmovb
clc
sar
aad
adc
inc
sbb
negb
mov
int
loopne
decl
inc
mov
cmpsb
stos
aad
lods
mov
sahf
mov
sbb
into
dec
jle
aad
cmc
pop
cli
xchg
jne
idiv
sbb
sub
dec
into
cmpsl
push
cmpl
outsl
sbb
push
xchg
mov
lret
pushl
cwtl
cmpsb
es
sbb
outsb
push
repnz
movsb
cli
sub
arpl
movsl
fistps
lcall
mov
and
mov
dec
inc
cmp
insb
jmp
bound
movsl
dec
push
inc
scas
xchg
push
sbb
push
xlat
jnp
add
dec
or
dec
pop
mov
push
pop
jmp
aam
dec
pop
imul
xorb
pop
jge
aaa
decl
cmc
xlat
ljmp
adc
inc
mov
inc
mov
imulb
out
or
cmp
cmp
jle
dec
jg
jg
push
and
jg
mov
jl
pushf
or
jns
sti
xor
add
cmp
iret
sarb
push
je
sbb
movsl
xor
mov
inc
jg
mov
loope
dec
je,pt
out
daa
sub
pushf
pop
into
inc
pushl
mov
test
mov
mov
ret
data16
jecxz
incl
push
mov
pop
pop
xorl
mov
sbb
mov
incl
cltd
jge
jmp
fistpll
fsubrl
xchg
mov
jg
fsubl
jmp
fwait
repnz
pusha
push
xchg
cmp
outsl
in
out
lcall
insb
enter
mov
adc
shl
pop
in
mov
and
xchg
addr16
cmpsl
movsl
dec
or
mov
or
jnp
sbbb
pop
test
pop
out
xor
cli
mov
fldenv
out
call
xor
ud0
jg
xor
pop
fdivs
dec
jp
mov
lods
ljmp
insl
hlt
loope
add
fimull
adc
push
jp
inc
push
cmp
in
outsl
mov
jmp
or
mov
das
mov
jmp
and
ja
xchg
sti
testl
enter
lea
aam
xchg
rolb
rolb
daa
jge
arpl
mov
lods
lcall
add
xchg
fstps
xor
loope
inc
in
sub
jg
int
sub
and
add
out
daa
decl
mov
push
cmp
divb
ret
lcall
adc
vmovaps
je
bound
jg
repz
fwait
int
cs
dec
xchg
jbe
push
mov
rclb
jns
mov
adc
fiadds
sbb
mov
jge
adc
dec
fs
jg
add
sbb
adc
hlt
add
xchg
sbb
shrl
adc
test
out
mov
jecxz
mov
dec
fdivl
adc
insl
mov
inc
pop
nop
dec
lcall
push
dec
les
push
pusha
loope
dec
pop
mov
int
adc
shr
aaa
cmp
mov
pushf
fimuls
out
fcos
mov
adc
push
dec
push
jnp
outsl
mov
test
mov
lock
loopne
mov
sub
mov
mov
outsl
xchg
pusha
shll
mov
xlat
clc
xor
jg
xor
lcall
jmp
adc
out
sub
xchg
push
adc
lcall
addb
push
mov
pop
mov
js
imul
cmp
lret
fcmovnbe
std
mov
sub
or
mov
xchg
mov
ret
decl
mov
mov
and
arpl
and
jg
jle
and
mov
or
popa
xchg
inc
pop
mov
sti
pop
ljmp
insb
fldcw
cltd
ror
sub
xlat
jp
aas
shrb
call
fistpll
iret
and
push
jno
aad
cmp
mov
adc
dec
sub
adc
inc
es
decb
and
repnz
fidivl
cmc
lock
mov
mov
mov
sbb
xchg
inc
stc
dec
incl
scas
lret
jmp
pop
ss
xchg
pushl
clc
pop
xor
mov
sarb
pop
pop
lret
inc
addr16
fs
add
daa
clc
add
cmp
xchg
pop
in
adc
or
jle
pminub
dec
or
rclb
or
adc
out
pop
cmp
mov
add
lret
into
inc
popf
mov
mov
je
fbld
sar
pop
pop
lock
cmpsl
enter
addr16
lea
test
ljmp
test
mov
xor
clc
scas
mov
js
sbb
inc
cmp
sbb
movsl
sbb
mov
adc
jae
lods
add
sub
mov
mov
in
aam
popf
stos
shll
in
stc
mov
mov
and
add
call
lcall
insb
insl
ljmp
add
das
cmpsl
dec
push
cmpsb
mov
out
jmp
push
std
sub
mov
add
les
jnp
adcb
xchg
adc
cld
decl
xor
movsb
dec
inc
or
mov
mov
outsl
push
mov
cltd
cmpsl
fisubrs
add
in
add
sti
adc
loopne
repz
adc
mov
cld
mov
jg
mov
popf
mov
and
sbb
into
cmp
cli
jg
mov
mov
movsb
sbb
xchg
dec
fs
leave
jmp
fldt
mov
push
ret
sbb
push
pop
lods
outsl
jnp
sti
call
cli
jmp
ja
dec
add
imul
mov
cs
andb
lods
addr16
fwait
out
cltd
inc
int3
adc
add
sbb
pop
add
mov
add
movb
out
adc
ja
mov
std
decl
idivl
jmp
lea
nop
push
clc
pop
ljmp
dec
xchg
inc
xorl
shl
mov
mov
in
jno
cld
pop
std
ljmp
out
rorl
int
les
rclb
push
ret
ficompl
cmp
imul
repnz
pop
cld
push
cltd
mov
call
es
movsl
dec
cli
jp
fwait
int3
fwait
ss
cld
push
fldenv
dec
mov
repz
jmp
cs
inc
inc
cltd
or
jmp
out
pop
ja
mov
rcl
test
inc
cmp
pop
push
xor
xchg
in
enter
push
cmc
adc
adc
add
sti
decl
scas
std
test
jge
adc
jle
pop
jl
mov
and
out
adc
out
pop
push
inc
dec
mov
insb
jmp
imul
jg
jb
addb
jae
mov
mov
mov
jmp
js
inc
lods
push
cmp
pop
jle
imul
or
xor
ljmp
into
pushf
xor
pop
and
or
outsl
fidivs
adc
inc
shlb
pop
loop
ret
nop
cmp
jns
mov
fsubrp
jp
ljmp
decl
xchg
cmp
dec
adc
sub
inc
xchg
mov
pop
pop
shrb
ds
or
jp
pop
mov
mov
insl
in
dec
xor
sub
jmp
hlt
push
cmp
xchg
mov
inc
push
in
add
add
cli
pop
cmp
in
rclb
push
jle
add
out
into
push
in
cmp
in
and
rclb
idiv
xchg
cs
xor
mov
fsubrl
inc
jne
fdivp
adc
enter
dec
inc
decl
push
inc
pop
mov
jne
xchg
enter
pop
and
push
push
mov
iret
dec
or
loopne
cmp
sahf
clc
jl
cmp
pushf
push
dec
loopne
push
fwait
xchg
or
pop
jp
push
and
dec
push
dec
pop
imul
ljmp
dec
loopne
mov
popf
xchg
jbe
mov
mov
cmp
xchg
cmpsl
iret
jns
xchg
xlat
call
dec
aaa
jae
pop
sub
and
cld
mov
das
data16
mov
andb
imul
call
or
or
les
pop
inc
lcall
add
dec
mov
mov
mov
mov
imul
loope
xchg
mov
orb
out
lcall
loop
cli
in
in
ja
xor
ror
inc
sbb
xor
lcall
jg
ljmp
dec
and
mov
inc
arpl
je
loop
mov
negl
sbb
push
lret
inc
sbbl
jne
loope
or
fldpi
or
ret
inc
mov
mov
loopne
pop
decl
sub
mov
filds
mov
aaa
test
jecxz
jb
mov
sub
hlt
mov
out
mov
and
mov
loopne
mov
stc
adc
jne
loop
pop
inc
or
sbb
lock
xor
jecxz
outsb
cmpsb
ss
push
jae
mov
pop
call
dec
mov
dec
xor
xor
dec
jno
das
sub
lods
dec
fisubrl
arpl
fistps
aad
sbb
sti
sub
or
cmp
mov
daa
mov
mov
mov
pop
jg
ds
pop
jns,pn
orl
push
int
lcall
and
pushl
add
sbb
adc
fcomps
decl
xor
xor
push
in
jle
or
mov
push
aaa
jge
adc
hlt
lcall
pop
fildl
stos
cmpsb
add
addr16
outsl
hlt
push
jg
push
std
sub
pop
arpl
cmpsl
inc
orl
outsb
test
inc
sbb
lods
pushf
decl
gs
inc
push
fwait
jle
push
ljmp
dec
lcall
aas
inc
xchg
xor
in
aaa
loop
addr16
add
jg
jae
sbb
stos
xchg
pusha
mov
lahf
mov
imul
mov
fmuls
aam
mov
in
xchg
and
fldcw
xlat
mov
adc
sbb
jg
mov
fistps
decl
ret
lret
mov
insb
cli
jmp
outsl
push
aaa
stc
icebp
adc
shrd
inc
arpl
mov
sbb
inc
insl
xor
test
fwait
push
pop
aas
jge
stc
pushf
mov
std
sub
lds
xchg
repz
xchg
fwait
test
push
stc
jo
pushl
xor
sbb
lods
repz
addr16
pop
orb
je
and
incl
sub
movsl
mov
push
adc
sbb
xchg
cwtl
mov
adc
pop
add
mov
ficoms
std
lea
icebp
inc
icebp
pop
stc
inc
fstp
mov
into
outsb
es
call
into
call
lret
mov
jne
addb
loopne
xor
ljmp
mov
mov
in
xchg
mov
fnstsw
xor
aam
sbb
inc
jl
popa
mov
mov
push
dec
call
xchg
cli
mov
in
aas
xor
inc
xchg
xchg
dec
lods
and
jb
sbb
aam
pop
test
insb
push
cmp
mov
dec
push
jno
adc
pop
mov
mov
mov
test
mov
mov
mov
mov
jl
stos
imul
out
mov
or
cmp
nop
xor
aam
sbb
inc
fadds
sbb
push
int3
test
pop
lods
mov
pop
sub
lret
aam
leave
je
cs
shl
mov
in
pushl
sbb
jg
les
arpl
jb
mov
incl
pop
pop
pop
xchg
mov
dec
adc
fidivrl
mov
jmp
scas
mov
and
jmp
jnp
lcall
std
sub
jp
sub
push
cmp
addr16
fwait
xchg
push
lret
lods
jae
jecxz
std
aaa
or
mov
lods
scas
jmp
addr16
mov
dec
jg
jg
mov
inc
cltd
mov
jecxz
xor
xor
clc
incl
cmp
jne
add
jo
out
pop
incl
push
jne
loope
stc
aad
ljmp
xchg
jecxz
xchg
nop
add
fdivs
jg
decl
sti
out
ffreep
ss
mov
pop
and
jbe
pop
cmp
and
push
call
mov
inc
rolb
arpl
and
mov
mov
xchg
cli
jg
sahf
ljmp
std
add
mov
clc
aaa
xchg
pop
mov
iret
es
adc
cs
rol
mov
pop
adc
inc
push
fwait
mov
mov
imul
inc
inc
test
ror
pop
decl
sbb
or
sub
or
std
lcall
ret
xor
and
test
inc
sahf
jmp
in
and
ljmp
dec
stos
fiaddl
pop
in
inc
fdivrp
int
pminsw
ficomps
mov
fistps
cwtl
incl
jg
lss
test
mov
jbe
sbb
fmuls
fcos
lcall
enter
mov
inc
sub
stc
fs
push
rcr
std
dec
test
clc
hlt
cltd
ret
xchg
je
int3
mov
lahf
adc
pop
adc
dec
xchg
cltd
test
lock
add
jmp
xor
jo
fldenv
jmp
sbb
jmp
pop
xor
ret
adc
je
icebp
shl
cmp
push
xchg
jp
loop
mov
mov
cltd
and
and
add
pushl
fdivs
js
loope
pop
test
add
dec
mov
in
js
push
call
jle
loope
sbb
movsb
xlat
sub
inc
mov
jmp
comiss
std
pop
jge
jns
pop
in
dec
adc
test
sub
outsl
mov
sbb
cmp
mov
rorb
lret
pop
clc
pushl
fsubrs
inc
mov
out
and
mov
dec
enter
push
bound
mov
push
sub
incl
or
leave
xchg
push
or
jae
dec
ja,pn
scas
mov
pop
ljmp
inc
inc
dec
pop
jae
outsl
ds
frstor
fstps
add
cltd
mov
movsl
mov
fldl
cmc
push
inc
fnstenv
add
cmp
jno
cli
mov
into
sbb
sub
cmpsb
insb
and
adc
pop
push
cmc
jl
cltd
push
cmp
cmpsb
push
fstl
call
jmp
dec
adc
inc
lret
pop
std
icebp
xchg
xor
cmp
mov
rcrb
das
bound
push
repnz
insl
cmp
mov
icebp
rcr
outsl
js
jmp
icebp
mov
xchg
xchg
xor
cmp
mov
sbb
add
out
nop
cmpl
dec
dec
or
pushl
fnstenv
push
leave
cwtl
dec
fcomps
inc
es
sbb
call
lret
stc
stos
test
sub
jne
aam
adc
jle
subl
mov
pushl
lahf
enter
xor
mov
add
testl
push
adc
fwait
insb
jp
inc
call
inc
test
aad
movsb
xor
fsubp
ljmp
mov
cmp
sub
hlt
sbb
jmp
jle
outsl
jb,pn
test
xchg
sub
dec
push
inc
and
mov
dec
add
adc
fmul
popl
mov
loopne
pop
fidivl
dec
push
pop
fwait
jb
pop
jo
or
lcall
push
popf
mov
scas
adc
cli
jae
adc
mov
xchg
inc
rcll
xor
shl
out
insb
sbbb
call
stos
fiadds
jmp
sbb
lahf
rcrb
add
outsl
mov
push
shl
mov
dec
or
fdivl
inc
lea
test
pop
xchg
inc
imul
sahf
and
cmp
mov
hlt
sbb
mov
int
mov
loope
call
dec
xchg
fcoms
or
xchg
jg
jae
in
dec
mov
insl
je
lods
add
mul
js
das
icebp
inc
inc
and
cmp
test
jg
stc
sub
xchg
sub
lea
or
std
mov
mov
pop
call
int3
xchg
loope
ss
clc
sahf
icebp
or
ljmp
adc
xor
or
lods
mov
and
pop
or
or
iret
repz
push
sti
decl
dec
add
cmpsb
mov
ret
lods
sti
lcall
nop
pop
add
lock
imul
mov
sbb
mov
dec
out
push
mov
dec
mov
mov
cmc
ds
gs
jnp
hlt
jmp
jmp
lods
adc
movsb
sbb
lds
ret
push
pop
divb
mov
sub
cs
loopne
mov
repnz
test
mov
add
push
cld
xchg
cli
in
push
mov
insb
aaa
scas
int
xchg
pop
sub
lcall
xchg
mov
loope
jo
jb
jbe
rcrl
mov
loop
gs
xor
sbb
push
cmpsl
inc
test
mov
call
and
sahf
cmpsb
and
loope
mov
je
inc
outsl
xchg
pop
outsl
stos
add
push
jle
sub
cmc
mov
adc
fbld
adc
xchg
daa
xchg
xchg
add
es
fidivl
dec
adc
loope
push
sub
mov
push
sar
outsl
jo
push
popa
fiaddl
sub
cmp
pop
pop
pushl
clc
ljmp
lahf
mov
shlb
ljmp
clc
enter
mov
in
data16
icebp
pop
fbstp
out
mov
jmp
cmc
mov
push
cmc
ja
hlt
loopne
cmpsl
adc
adc
nop
mov
ljmp
inc
shl
push
cmpsl
pop
cwtl
mov
mov
push
adc
xchg
mov
outsb
adc
inc
je
sahf
inc
push
scas
cmp
insb
mov
pop
sub
stos
mov
cmp
adc
movsb
das
shl
decl
dec
dec
mov
jmp
dec
int3
add
cs
push
outsb
repnz
insb
mov
lcall
in
ja
aaa
ss
mov
sub
mov
outsb
cld
inc
fs
add
jg
pushf
mov
jecxz
rcrb
cmp
inc
sbb
jl
decl
jo
repnz
mov
inc
xor
testl
push
sbb
lcall
and
sub
jns
and
fdivl
sarb
jnp
push
cmp
xchg
clc
fmuls
xor
mov
inc
dec
fidivrl
repnz
push
outsl
xchg
cmpsl
and
mov
or
xor
test
push
add
stos
int
cmp
xchg
and
adc
decl
cli
sahf
adc
push
add
jb
mov
shl
popa
sbb
xor
rcrb
lcall
jmp
sbb
fucom
cmp
jae
jp
xlat
xlat
jae
dec
sahf
incl
cmp
cmpsl
or
scas
iret
inc
xor
fcmovb
pop
clc
call
or
inc
xchg
mov
or
dec
fsubl
fldl
sbb
or
mov
icebp
aam
mov
leave
inc
jae
mov
jge
push
push
mov
test
mov
push
xchg
std
cld
leave
cmp
jb
nop
in
push
xchg
mov
lds
dec
jnp
mov
ljmp
sub
pushf
or
lcall
pop
cli
outsl
std
scas
push
test
imul
pop
ljmp
jmp
xor
sbb
mov
sub
mov
ljmp
fimull
sub
and
sub
negl
mov
f2xm1
cmpsb
out
fcmovbe
shll
push
test
dec
std
fcomip
mov
and
add
fbld
xchg
or
and
les
flds
hlt
adc
xlat
sbb
xchg
push
jb
add
arpl
jmp
insb
pop
add
inc
lea
shrl
and
ljmp
pushf
mov
into
jmp
xor
in
aas
xchg
jns,pt
xor
pop
push
cmc
jg
mov
or
shlb
jns
mov
ljmp
sub
call
dec
sti
sub
sub
inc
xchg
and
js
sub
sub
dec
es
jg
enter
xchg
adcl
ss
arpl
jp
or
shrb
and
pop
cmpsl
push
int3
xchg
cmp
mov
out
and
sub
ljmp
push
pop
cld
pushl
mov
or
sti
mov
dec
std
lcall
lods
out
data16
sbb
mull
or
pushl
or
daa
cmp
jl
push
lock
jg
mov
jne
ss
xor
mov
stos
cli
mov
dec
add
xchg
fdivrp
lret
call
pop
jnp
jg
cmp
stos
inc
sti
stc
push
or
jle
call
pop
push
adcl
ds
je
cmp
in
add
fsub
inc
or
out
dec
pusha
mov
decl
pop
stc
dec
mov
sbb
inc
movsl
popf
shl
out
inc
dec
xchg
push
xor
call
pushf
fdiv
int3
and
dec
xor
lea
out
inc
insb
and
stc
icebp
mov
dec
cwtl
jmp
adc
sbb
pop
leave
jmp
mov
push
lods
jns
filds
pop
sub
add
push
mov
sti
je
jmp
lods
imulb
dec
push
xorb
fsub
mov
repnz
decl
std
lcall
jge
sbb
jbe
push
mov
cli
add
fisubrs
or
sbb
sahf
in
mov
mov
in
fs
mov
in
neg
add
pop
pusha
jmp
xchg
xlat
adc
pop
push
sub
mov
cmp
cmp
pushl
insl
daa
enter
clc
jb
pusha
repnz
out
sar
inc
call
mov
cld
sub
cmpsl
aad
xor
add
inc
and
cmp
inc
fmull
clc
into
imull
lds
sar
mov
jmp
sub
iret
mov
jg
lret
pop
int
jb
in
cmp
out
call
js
jbe
mov
data16
mov
pushf
cli
lods
shr
pushl
addr16
mov
je
repz
lcall
cmp
sbb
call
jbe
loop
das
mov
mov
aam
or
jge
subl
je
fwait
mov
push
pop
push
pushl
clc
fistps
and
inc
fptan
cs
xor
leave
lock
insb
cli
mov
jbe
mov
mov
pop
mov
pop
cmpsl
pop
ljmp
sbb
fisttps
cmp
pop
fistpl
in
jge
or
pop
test
jle
mov
adc
ljmp
cmp
sbb
push
iret
jmp
sbb
lahf
xchg
sbb
add
mov
lret
jbe
icebp
adc
std
mov
xor
pop
xchg
dec
pusha
pop
mov
aas
add
cltd
cld
mov
jg
jae
out
cld
call
fnstsw
fs
incl
mov
fnstsw
sub
std
out
aad
fwait
imul
inc
jecxz
mov
push
jle
or
scas
xor
add
ljmp
push
sbb
les
aaa
sub
lret
cs
insb
mov
mov
cmp
pushl
cmp
dec
and
xchg
test
popf
push
aam
mov
mov
addr16
jecxz
mov
mov
sbb
dec
mov
xchg
cmc
mov
aaa
and
pop
ds
lods
inc
sbb
ret
icebp
cli
add
loop
sar
lahf
lods
xchg
dec
into
mov
jb
fnstsw
lcall
mov
mov
cmc
negl
leave
adc
outsl
call
mov
iret
hlt
mov
cmp
cltd
int3
js
mov
pushl
fldl
or
pop
data16
jg
call
stos
int3
cmpsl
jno
ror
xlat
addr16
mov
sahf
mov
push
sbb
adc
inc
and
int
rorb
sub
pop
hlt
pushl
or
int3
xchg
lock
mov
loopne
sub
les
and
mov
xor
sub
push
xchg
int3
sub
loop
cli
sbb
lock
add
or
mov
cli
mov
outsb
jne
mov
stc
push
sub
jns
jno
outsl
call
loop
mov
sbb
repz
int
cmp
mov
js
and
loop
clc
add
gs
push
dec
push
mov
cmp
hlt
lcall
fyl2xp1
adc
add
xchg
add
aam
xor
push
ljmp
int3
in
inc
fidivs
outsl
aaa
pop
jg
xor
dec
inc
test
es
lret
sbb
std
cmc
sbb
inc
push
sub
ljmp
jg
test
xchg
add
pop
movsb
popl
fisttpl
cwtl
and
ljmp
out
aam
imul
inc
mov
jb
ljmp
inc
pop
sarb
mov
bound
pop
mov
xorb
roll
pop
out
inc
and
test
test
jmp
xchg
data16
in
sub
shl
inc
loop
xchg
sbb
lock
xor
scas
shl
js
and
ljmp
inc
jp
jo
dec
dec
dec
pop
ss
fbld
cmp
add
xlat
scas
pop
pop
pop
jle
jg
cmp
lea
pop
inc
jbe
lock
cmp
jb
pop
clc
incl
in
in
mov
mov
ficoml
ret
push
es
mov
ret
rorb
xor
std
mov
les
xor
mov
pusha
cmp
incl
mov
iret
pop
mov
sbb
subl
pop
lcall
or
pop
sbb
xlat
push
mov
inc
sub
ljmp
jl
ret
in
aas
inc
fiaddl
sub
arpl
mov
jmp
pop
testb
dec
out
leave
iret
pop
add
add
mov
addr16
std
push
pop
pusha
repz
sar
jle
dec
sbb
dec
dec
inc
xor
jl
jl
fucomip
out
cmp
inc
int
fwait
sbb
outsb
cmp
dec
mov
fmuls
mulb
fs
fdivr
cli
stos
adc
cs
mov
cwtl
flds
loope
pop
rorb
call
inc
pop
es
xor
inc
bound
call
bound
and
je
mov
jmp
incl
dec
push
pop
mov
out
push
shl
mov
scas
mov
shl
test
jb
sub
cltd
jnp
jg
loopne
loopne
jge
gs
pop
iretw
lock
inc
xchg
dec
int3
jg
das
jo
in
jg
movsb
aam
icebp
mov
dec
mov
cmp
lods
mov
or
inc
rclb
enter
fs
fnstenv
stos
xchg
ljmp
inc
vmpsadbw
pop
notl
xor
push
shll
and
ss
cmp
call
sahf
jae
jg
clc
dec
repnz
movsl
inc
mov
fbld
adc
or
inc
mov
mov
xchg
pop
jg
inc
pop
mov
push
fisubrs
jns
ds
loopne
popa
lret
mov
ja
jecxz
leave
cmp
addr16
outsl
cld
xchg
jmp
mov
mov
mov
pop
fs
mov
mov
sti
mov
adc
repz
scas
repnz
mov
loope
addl
add
lods
pushl
std
or
mov
fmuls
fs
xchg
pushf
fnstenv
repnz
inc
jno
cs
ljmp
dec
ficoml
ljmp
jecxz
xchg
dec
ficompl
in
orl
sub
cmp
test
add
orl
sbb
ret
mov
pop
add
mov
out
add
test
jo
mov
xor
dec
andl
jmp
mov
je
or
inc
push
pop
aas
pusha
sub
xchg
pop
mov
xchg
add
cmp
aaa
das
out
xchg
jnp
fucomip
fisttps
outsl
mov
andl
jb
ljmp
hlt
pop
mov
and
push
repz
jp
mov
push
ja
push
inc
loope
xchg
push
pop
dec
dec
in
mov
pop
or
in
pop
sbb
or
fbld
pop
push
jge
aad
lods
pop
movsb
ds
dec
mov
mov
adc
out
imul
dec
jmp
sbb
and
mov
gs
mov
icebp
push
jae
push
mov
mov
ret
jmp
sbb
ljmp
fs
std
ljmp
call
nop
cld
insl
addr16
push
aas
jge
lock
lcall
fisttps
push
sbb
sbb
push
movsl
test
popa
stc
ljmp
shrl
dec
ja
outsl
pop
add
cmp
mov
and
clc
xor
shlb
stos
outsb
push
dec
jbe
call
pop
js
mov
and
jge
xchg
sti
xchg
ljmp
push
bound
lcall
lret
inc
xor
cmc
test
pushl
adc
into
aaa
or
imul
push
lret
mov
dec
cmp
incl
pop
loop
cs
or
xchg
inc
xor
daa
das
cmc
mov
mov
sbb
jp
call
fimull
les
mov
insl
mov
or
or
jmp
inc
ss
aas
mov
fistpl
lea
ds
insb
dec
mov
stc
out
les
jne
out
sub
or
mov
scas
ret
add
xchg
mov
sbb
fildll
or
lret
xchg
cmpb
pop
mov
sti
clc
dec
jge
pusha
jecxz
mov
stos
or
fnstcw
cs
xchg
cmpsb
push
aas
ljmp
dec
std
decl
mov
push
js
test
ja
dec
imul
sbb
mov
jg
or
repz
xchg
xor
sbb
cmp
fidivrl
xchg
sub
dec
cld
xchg
sub
clc
repnz
lea
push
pop
inc
cmpsb
fdivrs
sbb
mov
faddl
nop
sub
xor
jns
adc
loopne
das
xor
sub
jge
sub
xchg
and
ss
std
fbld
outsb
push
bound
int3
xchg
add
sub
imul
aas
bound
xchg
fstps
aam
mov
pop
loopne
sub
sar
psubq
movsb
cmp
pushl
inc
adc
sbb
lods
test
lcall
out
pop
sub
mov
cmp
movb
jg
outsl
xor
add
push
sbb
fs
pushl
or
push
dec
popf
testb
pop
jno
adc
dec
jge
pop
add
mov
mov
icebp
es
jle
in
sbb
roll
push
das
push
jge
int
shrb
jnp
inc
jno
dec
inc
pop
xlat
xchg
incb
call
jno
xor
or
jnp
lea
mov
or
orb
jg
mov
inc
push
mov
pop
sbbb
mov
lea
neg
test
mov
aam
repnz
out
ds
push
lcall
lds
filds
test
jo
sahf
jg
sbb
mov
mov
push
push
sub
fs
mov
ds
test
ljmp
rorl
xor
mov
add
push
mov
bound
fdivrp
jmp
lcall
decl
sbb
mull
xchg
lret
dec
orl
insb
mov
js
pushl
lret
lret
mov
jmp
popf
ja
jg
mov
cmp
bnd
mov
pusha
out
and
icebp
or
daa
into
adc
xchg
mov
lods
sti
decl
jb
sub
int3
xorl
adc
sbb
int3
call
jno
rcrl
test
shlb
dec
jo
lcall
out
sbb
fnstenv
jecxz
and
pop
outsl
lods
into
mov
leave
out
leave
test
add
mov
inc
mov
out
mov
jg
or
xchg
lahf
pop
cmpsl
pop
pop
xchg
inc
cmp
jo
sub
jb
sahf
cmp
mov
sar
incl
sub
mov
push
stc
ja
pop
inc
popf
jae
fidivs
mov
or
jmp
mov
cmp
in
pop
jns
mov
mov
push
jg
xchg
or
jmp
xor
fsub
loop
jne
jmp
inc
test
scas
insl
out
xchg
inc
jno
add
add
outsl
lock
mov
inc
mov
mov
fldt
sub
mov
push
cmp
xchg
mov
add
mov
das
mov
out
mull
add
repz
inc
sahf
lea
push
sub
cmpsb
enter
lock
int
dec
cli
std
mov
lahf
push
inc
scas
sub
mov
mov
jnp
jnp
cmp
aam
and
movsb
adc
repnz
jmp
mov
psllq
es
loopne
rol
ja
pop
and
test
inc
sbb
in
in
jno
dec
push
pop
out
inc
out
mov
or
pop
push
es
cltd
clc
pop
loop
mov
insl
mov
sti
sbb
ljmp
repz
call
jl
sub
into
xchg
xor
adc
fnstsw
xor
inc
lcall
insl
jp
cmpsb
jp
cmpsb
jns
push
aad
dec
loope
push
incl
inc
imul
sub
out
push
movsb
ret
mov
jmp
sub
rcrb
push
es
out
or
mov
jg
imul
icebp
xchg
push
insl
push
jmp
pop
cmp
add
and
pop
mov
andb
push
ja
mov
pop
mov
incl
jmp
ficomps
jle
movsb
stc
sbb
jb
push
lock
and
mov
push
lcall
mov
dec
std
call
jb
fsubr
ud0
jbe
lds
int3
add
shrl
add
mov
sub
test
orl
cmc
incl
cmp
mov
stc
xchg
xor
xor
mov
loope
clc
mov
dec
xor
push
lcall
movsl
jmp
push
adc
add
addb
icebp
jmp
addl
flds
cmpsl
adc
jmp
fcmovu
fsts
and
inc
cmp
fcompl
xchg
mov
inc
ljmp
jns
ret
decl
jg
lock
pop
xor
add
dec
push
mov
addl
hlt
mov
add
in
xchg
les
clc
and
dec
sbb
arpl
ja
add
xchg
mov
mov
cmp
mov
xchg
or
add
fs
out
adc
addl
xchg
and
shl
xor
loopne
pop
decl
adc
mov
rcrl
xchg
int
adc
daa
pushl
mov
jl
sbb
out
xor
push
or
aad
clc
add
loope
sub
call
sub
aas
cmpsl
enter
aam
movsl
cmpb
ret
aam
xor
inc
push
jge
cmp
push
jo
sbb
dec
icebp
or
in
or
xor
int
clc
in
inc
jb
pop
fisttpll
std
jg
pushl
iret
andl
shr
and
or
push
ljmp
mov
mov
or
cli
xchg
icebp
push
push
insb
fists
cli
outsl
icebp
pop
or
jmp
xchg
fidivrl
or
add
test
push
in
cmove
popf
cmp
cld
dec
pop
sub
lcall
xlat
xchg
pop
or
sbb
sbb
xor
pusha
loope
outsl
fdivs
push
mov
cli
sbb
inc
testl
mov
sub
inc
arpl
mov
je
and
lcall
xchg
pop
xor
outsb
scas
iret
cmp
pop
add
push
insl
cld
jg
fbstp
ja
fwait
enter
or
fisubl
mov
or
lds
std
xor
sbb
arpl
xchg
xor
dec
mov
ja
mov
gs
incl
into
push
mov
cmpl
push
js
fs
push
loopne
shl
jp
inc
imull
incl
fstps
xor
mov
lret
xchg
cmc
dec
std
or
sbbl
out
mov
sub
sar
mov
bound
sub
pop
pop
sub
out
cmp
andl
fiaddl
push
xchg
jp
out
ljmp
rorb
and
cltd
inc
enter
mov
dec
and
out
cltd
loop
add
aaa
lock
inc
lcall
ja
es
or
testb
mov
and
ret
push
lea
inc
pop
push
cmp
inc
jb
pop
mov
cmp
mov
cli
mov
lret
or
jb
cli
test
add
pop
lods
lea
jae
pop
ljmp
lret
sub
pop
mov
adc
mov
lods
gs
mov
mov
decl
inc
int
lock
ret
sbb
ss
sbb
cmc
pop
ficoml
xchg
sbb
into
into
push
pop
int3
push
mov
inc
imul
inc
sub
rorb
jb
jle
das
add
push
hlt
or
cltd
fld
mov
mov
in
xor
dec
les
and
enter
sub
mov
incl
call
cmpsl
adc
xor
pop
sbb
call
cmp
lcall
test
sbb
add
pop
push
inc
das
repz
cmp
xchg
mov
fstpt
or
ljmp
xor
cmp
push
pop
je
sub
aas
or
adc
aaa
mov
xor
mov
repz
es
pop
push
sub
test
outsb
orb
jg
imul
popa
pop
je
aad
xchg
jge
fsubs
push
mov
lcall
int
es
push
imul
decl
push
dec
rolb
shlb
out
jg
ljmp
jl
pop
xor
cmp
out
repnz
out
jae
aam
movsl
scas
add
out
into
stc
dec
insb
mov
rol
mov
movsl
pop
mov
lcall
add
fldt
cmp
mov
loopne
fcomps
mov
pop
mov
movsb
ljmp
hlt
ret
data16
scas
inc
lods
xor
mov
or
call
ds
jno
or
femms
shll
jnp
mov
dec
iret
sbb
in
movsb
scas
fldt
dec
xlat
xchg
jg
sbb
rcl
pop
jg
sar
ja
adc
or
loopne
adc
negl
mov
not
movb
pop
shll
mov
loopne
popa
sbb
sbb
lcall
movsl
mov
jne
mov
mov
subb
pop
fdivrp
cmpsb
cmp
cli
mov
lods
mov
out
dec
imul
ja
xlat
jno
add
into
pop
loop
lds
pop
mov
mov
idiv
lcall
or
inc
ret
into
mov
push
pop
call
xor
pushl
cli
incl
pop
inc
sbb
das
pushf
push
or
push
pusha
mov
repz
mov
mov
push
and
cmp
pop
jl
repnz
fwait
inc
rorl
ficoml
cmp
decl
or
and
dec
enter
jge
cmpsb
callw
filds
add
push
xchg
stos
cs
mov
std
in
cmp
lcall
ss
lods
cld
jmp
int
sbb
push
dec
mov
in
sbb
mov
lock
lea
js
outsl
mov
decl
ja
test
push
in
shl
stos
rolb
jg
lcall
cmp
xchg
cmp
xchg
fidivs
cmpsb
inc
sub
sbbb
jmp
dec
scas
add
push
push
test
popf
aas
cmpb
pop
mov
mov
outsl
scas
and
shl
pushl
popf
mov
frstor
cmp
fstl
shrl
pop
cmc
push
sti
cwtl
imul
sub
repnz
stos
shll
sub
lea
sub
int
cmp
bnd
stc
dec
dec
jmp
outsb
xor
or
out
insb
mov
mov
sub
addr16
jecxz
loop
fs
pop
xchg
scas
cld
sub
or
decl
lea
into
push
popa
aam
sub
stc
in
sbb
add
inc
add
lcall
and
push
jg
mov
push
jge
and
jge
test
sbb
mov
je
inc
ja
jae
adc
pusha
or
shlb
mov
test
inc
sbb
pop
dec
push
insb
or
fidivl
push
sbb
out
sbbb
inc
test
mov
inc
das
mov
pop
movb
add
rcrl
loopne
and
lcall
stos
pop
sahf
ret
cli
repnz
sbb
add
lret
dec
jle
xchg
mov
mov
dec
jae
repz
fldcw
lahf
ror
out
icebp
bound
mov
xchg
pop
pusha
adcl
in
and
jl
jae
jg
adc
dec
ds
shrb
mov
leave
mov
hlt
rolb
call
fimull
pop
dec
icebp
jnp
roll
push
aaa
inc
fidivl
push
inc
sub
decl
iret
cmpsl
cs
ja
sub
ds
push
or
mov
pop
lods
movsb
sar
inc
int
xor
mov
jp
rdtsc
ret
popf
out
or
or
lret
rorl
fidivl
sub
mov
mov
inc
adc
jne
int
mov
mov
mov
cmp
gs
xorb
std
sahf
lods
push
mov
inc
decl
mov
sbb
add
std
pop
pop
cld
sub
push
mov
inc
repz
xchg
push
xchg
cmp
outsl
lock
dec
inc
mov
cmc
mov
je
adc
repnz
aad
leave
ljmp
cmp
jle
fs
ret
in
adc
lcall
mov
aam
ljmp
ljmp
adc
add
loopne
mov
push
shlb
sbb
addr16
ss
inc
lcall
lret
ljmp
fcoml
stos
pop
insl
sub
or
sbb
addr16
ss
dec
std
cmp
shl
mov
xor
scas
mov
mov
cmp
sahf
fsubrs
cld
ljmp
pop
mov
add
shl
in
pop
loope
fildl
decl
movsl
cs
push
sbb
jo
mov
outsb
or
sub
add
sub
xor
xchg
ljmp
call
or
clc
jmp
test
sarb
aam
movl
and
data16
fstpt
call
cmp
or
lret
int
dec
sbb
add
mov
adc
lods
or
call
pop
add
inc
stos
mov
aad
cmpsl
jecxz
inc
mov
adc
xor
and
test
addl
jle
dec
mov
cmp
mov
dec
movsb
das
repnz
mov
ljmp
call
mov
orb
insl
mov
mov
dec
adc
jb
jle
xor
das
pop
std
mov
mov
jecxz
jmp
push
sbbb
ljmp
push
xor
imul
adc
fdivr
mov
clc
inc
roll
lahf
outsl
inc
cmp
subb
xlat
movsl
cmp
cmp
add
adc
sub
outsl
std
fisttps
movsl
insb
sub
es
xchg
add
sar
shlb
and
retw
lsl
xchg
lcall
enter
jae
icebp
sbb
adc
ret
cmp
sti
icebp
call
mov
and
popf
push
sub
fisttpl
mov
push
ss
mov
cli
push
push
jp
imul
mov
push
testl
mov
mov
shr
dec
std
or
lret
shrb
addr16
sti
loopne
loop
pop
inc
jne
clc
jmp
and
pop
jge
imul
adc
mov
xchg
call
out
sbb
add
adc
ret
in
mov
cwtl
and
push
shll
cmp
jge
mov
loopne
das
lock
sbb
insl
pop
fwait
rcll
mov
loope
lcall
lahf
inc
jns
pop
in
or
jbe
cmp
cld
lds
pop
lcall
jg
xor
jg
mov
cli
aaa
pop
popa
pop
nop
inc
or
push
xchg
call
das
pop
mov
clc
rcl
mov
js
or
and
push
fldpi
push
inc
nop
inc
add
and
and
dec
ds
mov
push
ljmp
loop
push
push
push
push
push
add
inc
dec
dec
dec
push
int
mov
and
add
and
or
aad
or
or
addb
add
add
inc
insl
adcb
outsl
mov
mov
push
sub
test
add
ds
pop
mov
adc
add
xor
dec
or
adc
add
and
push
xor
lods
aas
cmp
test
adc
mov
adc
push
lret
mov
fs
test
mov
or
adc
lcall
insl
xchg
lods
xor
add
push
inc
mov
cmpsl
fistpl
pop
mov
add
mov
shlb
pop
sub
pop
cwtl
push
sbb
add
xlat
pop
fistpl
mov
imul
jne
arpl
mov
pop
fistpl
leave
test
loop
pusha
xlat
pop
fistpl
jl
and
popf
int
aaa
xlat
pop
and
lods
lds
inc
out
sarb
xor
mov
pop
imul
push
pop
test
and
cmp
pop
pop
add
movsl
lcall
js
js
jae
dec
or
insl
out
dec
push
add
and
and
nop
and
inc
mov
int
scas
add
dec
int
cmp
push
add
sbb
jg
dec
inc
inc
push
dec
dec
push
push
push
push
inc
add
popa
outsl
insb
insl
jo
arpl
xor
outsl
sbb
dec
inc
push
push
push
inc
inc
call
push
in
push
pop
pop
inc
addb
jne
pop
or
mov
btc
add
xchg
sbb
add
xor
inc
pop
rcr
outsl
in
inc
mov
adc
mov
ljmp
and
insl
lods
mov
jae,pn
mov
imul
gs
xor
cs
insb
add
push
inc
push
dec
inc
jge
inc
dec
dec
add
add
lods
mov
jns
sahf
push
data16
cmp
or
xor
xor
fwait
push
std
or
gs
jno
rcrb
fdivl
outsl
lea
dec
push
dec
inc
shll
push
dec
inc
xor
mov
or
dec
mov
imul
add
fbstp
mov
mov
subb
imul
dec
idivb
and
add
stos
imul
imul
out
mov
sub
imul
add
scas
and
sbb
les
push
push
sub
imul
roll
mov
fldt
inc
push
push
or
pop
imul
fstpt
pushl
in
sub
lea
mov
xchg
loope
std
fnsave
and
xor
imul
fisubrs
or
call
jg
or
fld
push
testb
sbb
mov
pop
mov
repz
incl
ja
xchg
imul
dec
sbb
fisttpl
sti
or
cwtl
push
push
fmuls
and
adc
mov
and
mov
dec
xor
cmpsb
imul
fndisi(8087
push
imul
std
inc
ds
imul
cmc
or
imul
mov
test
sub
imul
in
pusha
movzwl
aad
scas
aas
inc
sbb
adc
xchg
outsl
mov
imul
xor
adc
test
mov
imul
mov
add
adc
push
dec
les
sub
sti
sub
imul
pushf
dec
aas
cmp
sbb
fnsave
ja
mov
frstor
and
jg
jge
pop
sar
add
inc
fisubs
mov
mov
lds
push
mov
or
xor
push
in
push
dec
scas
inc
imul
mov
sub
loopne
xchg
jnp
dec
imul
mov
add
mov
bound
xchg
iret
push
inc
cmp
lock
xchg
in
mov
xor
sbb
mov
sbbl
in
negl
mov
cmp
or
add
push
insl
lahf
pop
push
jno
jecxz
cltd
lahf
or
outsb
add
xchg
mov
dec
clc
test
mov
test
imul
fmulp
dec
ljmp
inc
pop
pushl
rcll
or
jb
xchg
out
mov
cld
test
shrl
imul
jnp
int3
aas
mov
repz
sbb
mov
in
sti
jbe
inc
adc
and
adc
movsl
push
aas
stos
pusha
ss
cmp
int3
lea
imul
sti
adc
mov
and
xchg
imul
aad
icebp
adc
xor
ja
xor
mov
aam
lea
mov
mov
mov
mov
mov
sbb
rcrl
xchg
mov
in
imul
cld
aam
cld
jecxz
lahf
pop
outsl
shrl
xor
xor
fmul
xchg
add
imul
add
insl
mov
outsb
les
sbb
aam
fwait
or
stos
inc
pop
mov
cmp
jbe
in
daa
jmp
imul
data16
cwtl
jnp
dec
or
inc
sbb
push
mov
or
mov
sub
pushf
sbb
push
adc
or
pop
dec
rcrl
jmp
sbb
insl
push
adc
mov
cwtl
insl
sub
adc
std
cwtl
test
outsl
jb
sub
dec
push
out
nop
and
mov
push
adc
dec
add
pop
sbb
rcrl
shrb
mov
imul
imul
sarl
dec
pop
fldenv
push
ret
sbb
cs
movsb
aaa
jb
cmp
test
sti
imul
mov
xchg
mov
imul
xor
popa
je
inc
adc
jo
mov
aam
mov
sbb
sti
out
inc
inc
xchg
push
jns
jp
and
push
mov
lods
loope
mov
stos
lock
mov
push
xorb
adc
arpl
aaa
cli
push
xchg
add
scas
jmp
push
dec
or
jne
fisttpll
sub
ss
xor
es
or
adc
cmp
xorl
add
push
sbb
andl
jns
inc
loopne
incl
xchg
mov
adc
sbb
repz
popa
es
adc
add
cmp
mov
nop
pop
imul
mov
sbb
xchg
iret
arpl
ds
leave
lock
xlat
adc
dec
outsl
insb
cmp
push
test
in
mov
imul
std
xchg
mov
call
xchg
loop
movsl
in
imul
fidivrs
jge
fstpt
push
or
aad
xchg
mov
jo
fsubl
adc
mov
in
scas
not
imul
and
pop
mov
mov
cmp
dec
imul
pop
xchg
fsubrl
test
repz
dec
mov
mov
cwtl
push
arpl
mov
test
jg
mov
movsl
imul
cmp
ss
imul
mov
out
daa
in
or
mul
insl
dec
add
and
mov
mov
es
enter
mov
popa
loope
lods
inc
out
inc
test
sahf
cmp
cmp
add
in
lods
stos
xor
lods
mov
nop
enter
xchg
sarb
flds
mov
sahf
xchg
push
inc
ja
add
mov
add
add
cld
pop
subl
sbb
push
fiadds
push
push
mov
loop
push
daa
push
mov
addr16
xchg
mov
jno
xchg
sbbb
add
shll
ljmp
dec
push
mov
lock
push
lret
xchg
xchg
incl
push
jo
xchg
stos
stos
sbb
or
dec
xor
pushf
aas
dec
das
in
insl
dec
adc
cltd
xchg
adc
ret
mov
stos
mov
ljmp
sub
and
mov
add
add
rcr
pop
jmp
pop
pop
adc
fs
or
mov
xchg
movsl
mov
xchg
or
outsl
insb
xor
cmp
sbb
pop
orb
imul
adc
daa
leave
popf
mov
stc
loop,pn
insl
in
mov
cld
inc
pop
push
and
insl
sub
mov
loop
or
js
push
adc
rorb
sbb
daa
or
xchg
ss
mov
outsb
jae
push
scas
loope
mov
jp
das
pop
outsl
sbb
push
xor
xchg
fidivrs
call
rclb
cmp
jg
imul
and
add
addr16
dec
loop
add
ds
or
enter
in
sbb
jbe
sub
shrb
dec
ficomps
ret
xchg
and
addl
dec
xchg
cmp
sub
jno
xor
movsb
aam
jle
sahf
sbb
xor
dec
fisubs
fimull
or
adc
aaa
inc
jmp
lcall
or
or
jl
mov
jae
mov
cmc
xor
nop
inc
inc
ret
jbe
mov
sbb
push
enter
insb
mov
add
inc
inc
mov
mov
test
mov
xchg
add
dec
cwtl
and
std
loop
sbb
lret
test
pop
mov
ds
pushf
mov
xchg
loope
pop
fbstp
int3
fcomp
cmc
sarl
push
aad
repnz
sub
test
out
xchg
mov
mov
add
popa
cmp
pop
or
jle
movsl
inc
cmp
dec
push
das
add
inc
loopne
sti
mov
ret
mov
mov
iret
dec
in
in
and
cwtl
daa
imulb
add
push
add
out
cli
mov
push
jns
ret
or
add
lahf
push
or
std
dec
adc
jbe
lods
xor
fidivrl
xor
fdivl
xlat
stos
icebp
jmp
sbb
xor
add
imul
or
outsl
repnz
imul
push
aas
pop
cwtl
xchg
addr16
cld
insb
push
lods
ljmp
aas
dec
fcompl
pop
inc
shl
stc
in
pop
out
imul
push
mov
push
pop
mov
ret
call
out
mov
stos
imul
push
xchg
mov
jns
aam
shlb
lahf
out
ss
xchg
imul
hlt
cmp
sbb
pop
addr16
cmpsl
rcrb
sarl
mov
cs
cmp
adc
add
push
mov
mov
rcl
mov
or
imul
and
js
add
lds
adcb
fidivrs
push
jl
es
cld
cmp
in
fdivrl
inc
lret
sub
add
inc
xor
xor
sbbb
bound
stc
push
mov
dec
xchg
lods
notb
lods
outsb
inc
int3
and
daa
mov
mov
pop
outsb
dec
rorb
std
mov
sub
mov
sbb
pop
push
and
jbe
in
inc
mov
fmuls
adc
lcall
push
cmp
popf
sbb
or
adc
mov
add
cmp
add
mov
bound
movsl
sarl
lods
aad
outsl
lock
std
fs
lock
lret
dec
jp
icebp
jbe
aaa
and
int3
jns
pop
jo
lcall
lock
xor
jnp
sbb
icebp
push
sbb
mov
mov
call
pop
sbb
fiaddl
hlt
dec
popa
jno
lcall
les
push
inc
xchg
lods
pop
jg
mov
popa
add
ret
sbb
adc
push
ljmp
jp
fwait
cmpsb
sbb
sub
xchg
int3
movsl
nop
push
movsl
fiadds
jmp
xchg
xchg
cld
in
iret
inc
repz
jp
lea
mov
cwtl
rorl
jp
add
xchg
fs
xchg
bound
dec
dec
es
into
adc
push
dec
pushf
inc
mov
loope
test
mov
sbb
jl
insl
lcall
jmp
sti
std
adc
pop
xor
sbb
jo
mov
xor
pushf
dec
addl
je
mov
shll
test
push
in
fsub
pop
or
mov
adc
push
std
shr
into
bound
or
enter
out
stos
scas
add
insb
in
in
repnz
inc
cmp
sbb
sbb
sbb
out
inc
xor
fcomip
adc
xchg
jl
sub
add
insl
notl
add
or
rcr
push
popa
cli
adc
sbb
mov
je
out
add
daa
pusha
in
out
test
inc
mov
jae
sarl
xchg
xchg
addr16
in
sbb
stos
jle
jecxz
les
icebp
dec
or
into
jno
ljmp
addl
in
cltd
fmull
aad
sbb
mov
jmp
mov
stos
cmp
test
sub
call
mov
jns
mov
or
scas
sub
outsl
scas
popa
inc
mov
push
push
mov
dec
cmp
scas
fsubrl
inc
dec
cmp
cld
jae
mov
cmc
inc
push
xchg
psubq
mov
mov
jmp
ficoms
cld
fidivrs
insb
xchg
add
push
sub
push
adc
jno
outsb
xor
aaa
mov
inc
dec
cli
in
outsl
sbb
or
popl
adc
cmp
orl
mov
add
pop
test
ljmp
push
sbb
in
sbb
roll
or
and
jbe
mov
and
test
lods
jge
ljmp
and
pop
jg
pop
jg
sti
mov
repz
xor
mov
addr16
mov
and
xchg
mov
xchg
mov
xor
fs
push
xchg
test
pop
dec
nop
push
in
arpl
testb
or
ja
xchg
cmp
and
loope
int3
test
movb
mov
cmc
lds
jae
aas
jle
js
inc
pushf
push
movsb
test
out
push
shrl
fstpl
sbb
and
hlt
fucomi
mov
js
dec
adc
sub
ret
mov
sub
pop
jg
notb
pop
int3
mov
popa
or
pop
pop
mov
lret
mov
push
add
mov
mov
js
xor
dec
pop
aas
shrb
add
es
push
mov
jns
outsl
std
ret
or
cmpsl
sbb
inc
inc
sbb
les
aas
push
lea
sahf
xor
jl
outsb
mov
sub
cli
lock
cmc
das
iret
xor
mov
out
mov
icebp
adc
xlat
lret
decl
sub
nop
xchg
xor
adc
loopne
sbb
or
ret
scas
addr16
adc
aam
or
or
lret
pop
jbe
pop
cld
lods
je
and
cli
cmp
rorl
incl
rcrl
test
dec
inc
inc
fisubrl
cmc
dec
cld
movsb
push
cmc
push
fs
xor
arpl
pop
fdivrs
dec
dec
xchg
push
scas
push
sub
ljmp
and
out
sub
sub
out
mov
scas
fincstp
lret
add
jp
lods
rol
lods
dec
pop
addl
lret
mov
repz
pusha
dec
ljmp
icebp
mov
sub
ss
add
arpl
mov
push
jl
xchg
fsubrs
jl
mov
push
xor
gs
mov
cmp
cs
sub
aas
cmpsl
fsubrl
inc
insb
cmp
mov
lahf
dec
sahf
jnp
divb
xor
bound
jno
int
cld
xorb
sub
insb
jmp
push
lcall
jo
dec
jnp
mov
fistl
add
push
icebp
enter
and
xor
sbb
mov
xor
in
dec
mov
push
cwtl
pop
adc
pop
adc
push
mov
push
rol
mov
or
int3
arpl
imul
clc
xchg
movsl
sbb
andb
mov
pop
add
xchg
ds
outsl
pushl
pop
cmp
jmp
ja
or
and
ss
lods
xor
out
mov
and
mov
loopne
icebp
ja
adc
and
cwtl
idivl
daa
leave
pusha
rorb
push
or
adc
cmp
jae
test
dec
cmp
js
and
mov
xchg
pop
inc
rclb
jno
mov
in
or
jno
frstor
and
lods
jb
sbb
insb
inc
sub
sbb
fbstp
enter
and
add
xchg
add
bound
iret
xor
stos
fisttpl
mov
sbb
inc
aas
dec
insl
fucom
mov
aaa
push
or
xor
mov
outsl
cmpsl
fwait
cli
xlat
inc
popf
jo
adc
ljmp
out
inc
inc
sbb
ds
mov
push
adc
mov
pop
jle
roll
mov
xchg
movb
lahf
mov
out
ljmp
lret
test
inc
es
lret
lods
std
ljmp
ror
inc
fcoms
and
subl
pop
push
sahf
loopne
or
cwtl
test
mov
and
lret
sbb
xor
pop
jb
jnp
icebp
sbb
aas
inc
add
out
adc
xchg
pop
fldt
dec
adc
xchg
mov
addr16
inc
inc
xchg
enter
loop
fimull
push
mov
inc
les
add
xchg
and
xchg
dec
pop
sub
jmp
lods
cmp
in
push
xchg
jecxz
adc
lahf
jp
ljmp
adc
orb
or
or
dec
jnp
inc
ljmp
sbb
jbe
or
sub
shlb
hlt
movsl
testb
xor
push
mov
adc
mov
stc
stos
xor
dec
ja
inc
roll
mov
popf
inc
rcrb
adc
mov
push
test
mov
lcall
test
or
xlat
fistpl
scas
add
fisubs
xchg
fistpll
mov
rcrb
mov
inc
cmp
shlb
pop
add
inc
push
out
xorb
test
pop
mov
mov
stc
aas
push
and
popa
popa
call
sbb
add
push
pop
cli
insl
xorl
fisubrl
aaa
fnsave
cld
xabort
mov
rorb
in
adc
sbb
cmp
mov
add
fildl
mov
jg
paddusw
push
rolb
push
pusha
dec
sarl
xor
sbb
mov
jg
call
sub
lea
cld
inc
mov
lods
pop
pop
mov
es
nop
leave
pop
adc
sbb
jo
lods
ret
push
shrb
or
sbb
loopne
scas
loope
mov
dec
and
add
adc
mulb
mov
outsl
int3
mov
dec
sub
mov
int3
mov
jmp
mov
and
jmp
es
jne
test
sbb
pop
fstpl
xchg
jle
aas
inc
in
cs
inc
insl
jl
mov
nop
and
cmp
popa
mov
and
push
decb
dec
mov
ja
shll
pop
pop
inc
aad
push
dec
cmp
mov
clc
fdivl
mov
out
repnz
sarb
mov
das
int3
cmp
inc
cmpl
jnp
pusha
ds
push
pop
fdivr
push
mov
push
fmull
xor
jno
mov
imul
mov
or
cld
xchg
xchg
xor
and
adc
or
call
mov
imul
inc
popa
pusha
test
push
cmpsb
je
adc
fldl
mov
mov
and
adc
arpl
mov
mov
sti
call
inc
push
test
repnz
push
addb
xchg
jmp
mov
lock
enter
dec
push
in
inc
nop
adc
fmull
ret
data16
hlt
inc
std
dec
icebp
xor
or
jnp
dec
cli
mov
sti
das
in
loop
xchg
iret
xor
adc
pop
cmp
lods
jbe
or
andl
pop
andb
mov
inc
inc
sub
shlb
xchg
add
insl
mov
sub
gs
sarl
repnz
enter
cmp
sub
xchg
fistpll
fcomp
or
cmpsw
pop
lds
sub
sahf
cli
es
lcall
std
adc
add
lea
cmp
and
insb
shrl
push
and
icebp
and
or
pop
outsl
je
xorl
mov
arpl
fstpt
loope
and
cmp
in
push
add
xchg
xchg
rcll
outsl
mov
jmp
nop
sbbl
ficompl
or
stos
mov
push
lcall
and
lds
outsl
jecxz
nop
les
xchg
mov
jo
pop
pusha
pop
outsl
adc
mov
or
aas
sti
add
test
ds
push
dec
dec
mov
fwait
jle
mov
pusha
lods
ljmp
xchg
icebp
shlb
adc
push
push
and
mov
test
sahf
pop
fstps
pop
mov
and
jbe
aam
push
or
jno
shl
stos
lock
icebp
mov
mov
mov
pop
inc
imul
jo
call
mov
add
js
daa
in
hlt
jg
jno
sarb
inc
insb
cli
adc
xchg
lret
lods
mov
adc
popa
cmp
cmpsl
sbb
es
into
inc
mov
mov
adc
sub
xor
dec
xor
or
or
sbb
mov
push
mov
fnstsw
fdivs
cmpsl
jnp
push
fstps
iret
xorb
call
jl
pop
insl
xor
les
add
add
pop
test
jno
sarb
mov
ljmp
add
sbb
sbb
xor
test
ret
cmp
lret
int3
mov
frstor
push
outsl
mov
jo
int
add
loopne
sti
test
pusha
xor
movsl
pop
cmp
or
sub
js
shlb
mov
scas
lahf
sub
int
push
movsl
sbb
popa
loop
enter
mov
adc
fiadds
cmp
sub
push
lea
dec
je
in
icebp
aas
and
fsubrs
fmul
roll
subb
sbbb
or
fidivl
push
add
mov
sbb
cmp
mov
std
es
iret
push
jo
mov
test
fstp
cs
mov
mov
fisubl
mov
inc
fimuls
enter
movsl
test
lea
testb
lock
lock
fimuls
mov
cwtl
clc
push
mov
xchg
testb
sub
cwtl
xchg
inc
ja
lcall
mov
mov
scas
mov
inc
jmp
js
out
or
xchg
add
in
push
pop
cli
add
mov
sub
inc
sbb
js
add
pop
mov
rorb
cmpsb
mov
rcll
icebp
sbb
aas
jae
in
cmpsb
ror
outsl
mov
push
mov
ljmp
inc
pop
sub
xchg
or
pop
xor
or
iret
adc
out
sub
daa
ja
jmp
sbb
orb
subl
push
aad
pop
aas
data16
mov
dec
fsubs
cmpb
iret
shll
pop
pop
in
mov
stos
jnp
in
fsubl
or
out
mov
ficomps
jge
aas
popf
dec
insl
call
or
push
aas
adc
jo
lret
outsl
loop
mov
gs
jle
fists
ljmp
dec
mov
mov
add
fisttpl
imul
mov
add
insl
fsubr
push
dec
sti
mov
pusha
notl
xchg
pop
cmp
jmp
icebp
add
inc
sub
jo
fcmovnbe
cli
pusha
fmuls
pop
inc
repz
xor
adc
and
out
les
inc
hlt
or
pusha
add
mov
lock
add
ds
outsl
pop
sub
xor
mov
adc
fistl
pop
ja
adc
mov
lahf
mov
xchg
mov
sti
mov
xor
mov
lea
sbb
pop
jg
mov
mov
mov
pop
mov
push
gs
imul
pop
loope
push
imul
fildl
inc
mov
cs
movsl
cs
jb
imul
sti
test
andb
xlat
and
cs
outsb
sub
pop
xchg
xchg
or
mov
das
sbb
outsl
aas
mov
das
out
jge
or
add
adc
and
cli
scas
mov
jecxz
jp
xor
mov
sahf
push
push
ret
outsl
fstpl
rcrl
imulb
repz
into
or
notb
mov
ret
icebp
sbb
xchg
push
incl
sahf
adc
stos
ret
jmp
inc
outsb
into
cmp
lds
add
sub
jecxz
sbb
mov
push
outsb
mov
pusha
xor
cmp
roll
jl,pn
inc
call
pushf
mov
push
adc
or
push
jp
jecxz
mov
mov
sub
push
leave
mov
clc
add
bound
sbb
mov
jle
sub
pop
xchg
loopne
rclb
sub
adc
das
inc
test
pop
jo
or
xor
loop
pop
xor
or
lahf
ret
jne
xchg
adc
xchg
sbb
dec
sbb
cmpsb
jno
cltd
cmp
jo
sbb
xchg
aaa
cld
les
jne
jp
xchg
and
mov
add
adc
repnz
call
fcoms
cmp
jmp
inc
pop
mov
mov
dec
and
inc
mov
and
icebp
pop
cs
adc
sbb
lds
push
ds
push
mov
lcall
shl
in
insl
cmp
and
loopne
clc
push
icebp
in
fucomp
out
jg
sbb
push
jl
and
push
push
inc
xchg
hlt
loope
inc
and
jge
test
jmp
sahf
jl
shr
shll
mov
js
mov
and
and
cs
push
jg
sbb
popa
or
and
adc
cmc
push
dec
sbb
jge
mov
fimull
jbe
repz
hlt
lods
aaa
ljmp
xor
fcmovnbe
mov
mov
mov
or
xchg
lea
enter
movsl
pop
mov
pushf
push
icebp
cmc
ret
and
add
dec
cwtl
dec
jg
jmp
adc
or
shlb
xor
inc
sbb
inc
je
and
out
xor
fisubl
add
cmpsb
or
mov
jnp
and
mov
mov
mov
shrb
push
outsb
jmp
jns
daa
clc
adc
sbb
sub
or
sbb
push
jns
add
jbe
cmp
ret
shll
das
add
inc
shrl
or
dec
and
ja
incb
pop
test
cwtl
and
scas
or
outsb
xchg
fsubrs
daa
aas
lds
dec
aam
clc
mov
lret
xchg
cld
clc
mov
mov
pop
outsb
and
push
fdivs
pop
mov
mulb
lret
out
clc
cmp
popl
sub
mov
inc
icebp
outsb
jmp
rclb
push
jne
pop
mov
jle
outsl
jge
mov
mov
mov
or
mov
lods
std
sbb
xor
loop
lock
loopne
imul
pop
testl
loopne
jmp
arpl
xchg
jns
rcll
jbe
and
push
jmp
es
ss
aas
lcall
mov
mov
xchg
leave
xor
pop
pop
pop
aaa
daa
dec
inc
ficomps
mov
in
test
pop
push
andb
shlb
xor
adcl
or
xchg
dec
jno
dec
inc
in
dec
sub
pop
lods
imul
or
insb
mov
mov
mov
add
inc
xchg
sbb
nop
pop
mov
insl
cmpl
xor
add
jecxz
xchg
insb
jg
es
pop
mov
rcr
xor
sbb
xchg
out
xor
in
jmp
pop
outsb
inc
repnz
cmpsb
fucomip
pop
push
lods
push
pop
mov
sub
aam
xchg
ret
xor
adc
xor
rcrl
in
repz
fstl
fstpt
sbb
shll
and
lods
sbb
sbb
xchg
mov
lods
aad
add
xchg
es
push
mov
leave
enter
imul
cmp
int3
shll
adc
jno
jo
pop
jl
ret
xor
shlb
icebp
pop
mov
test
inc
mov
lret
pop
xchg
ds
adc
add
jecxz
xchg
xchg
push
andb
adc
sub
out
test
sahf
sub
jg
inc
and
std
ret
or
lock
test
adc
xchg
into
cmp
cmp
in
inc
arpl
pop
negl
mov
aam
leave
jecxz
sbbl
pop
ljmp
lea
test
xor
xorb
fstpt
loope
in
mov
jle
pop
sub
fsubrs
jl
test
jp
adc
sbb
xbegin
cli
ret
push
xor
je
and
sahf
add
in
scas
fimull
fcomip
add
mov
mov
pop
and
inc
push
cmp
adc
das
mov
add
or
add
popa
dec
mov
xchg
jbe
es
je
or
cwtl
cmp
stos
in
in
xchg
add
dec
sti
jno
mov
mov
inc
int3
inc
test
jns
js
mov
outsb
fldcw
xchg
sahf
sub
fadds
mov
and
add
lds
rcr
stos
insb
test
outsb
pop
in
mov
and
mov
inc
call
xchg
sub
lods
imul
dec
push
pop
stos
mov
sbb
pop
ljmp
shll
subl
mov
jbe
das
mov
loop
cmp
popf
add
xlat
out
dec
xchg
insl
jl
sti
lret
daa
arpl
insl
add
into
insl
mov
icebp
stos
lock
imul
pop
out
mov
adc
push
cmc
call
in
sbb
fisubrl
lea
sub
sub
lcall
in
push
cmp
jbe
mov
aaa
push
mov
and
ss
inc
push
loop
cmc
cmp
add
mov
das
mov
in
ss
lcall
es
xlat
cld
data16
cmp
mov
aaa
test
sub
mov
mov
jecxz
pop
jmp
cld
icebp
loopne
aam
mov
mov
test
sarl
mov
pop
jle
shlb
fbstp
mov
mov
jno
aas
in
or
pop
fcoms
pusha
stos
add
je
pop
xchg
popa
gs
jbe
sbb
push
sbb
push
rorb
stos
fidivs
icebp
hlt
jle
arpl
scas
inc
jne
and
imul
frndint
shrb
cmp
mov
mov
enter
es
jbe
sub
or
jp
jl
pop
mov
xlat
fadd
aas
adc
or
cwtl
adc
inc
xlat
or
loope
js
iret
sub
cmp
xchg
and
push
dec
ds
dec
movsl
jmp
in
cmpsl
push
inc
jmp
cmp
loopne
mov
mov
push
sahf
mov
mov
push
clc
loope
push
and
rcrb
stos
push
out
outsl
ss
iret
or
mov
cmp
popf
jns
mov
jno
pop
clc
lcall
xchg
adc
or
mov
inc
in
pop
test
cs
in
pusha
imul
push
es
xorb
shl
push
mov
mov
or
and
jle
sbb
loop
cmp
adc
push
mov
outsl
es
idivb
fwait
lods
pop
iret
pop
fcmovne
sbb
repz
sub
mov
xchg
mov
lret
sar
mov
push
push
cmp
sti
in
rolb
adc
pop
adc
mov
mov
jb
mov
mov
push
sub
fmull
push
mov
sbb
jmp
mov
mov
or
sar
mov
sbb
stc
and
mov
iret
adc
jo
jmp
inc
cmpsb
jp
xor
stc
xchg
popf
shr
and
sbb
loop
cmpsl
inc
test
sub
es
mov
into
sub
dec
pop
aad
push
int
jg
mov
inc
pop
scas
push
mov
push
jmp
in
sub
inc
and
pop
lea
xchg
mov
mov
sbb
test
sbb
in
outsl
ret
push
jge
shrb
inc
cmp
gs
pop
add
xchg
cmp
inc
in
mov
out
loopne
lds
ss
in
rorb
lea
or
mov
out
mov
out
data16
jp
pop
addr16
test
je
lock
pop
lcall
pop
test
mov
add
cwtl
lods
jno
xchg
lods
es
pop
imul
mov
jmp
push
subl
cmp
fisubrl
punpcklwd
mov
fcomps
pop
pop
mov
ss
pop
pop
and
add
cmc
fildll
repz
inc
and
rcll
sbb
incl
pop
loop
xor
push
stc
notb
cmp
test
jle
jge
aad
mov
rorb
inc
out
mov
or
negb
into
push
mov
das
sub
jo
pop
sti
test
pop
cli
push
jle
push
hlt
or
add
lea
xchg
out
jnp
outsl
mov
pop
push
or
and
sbb
arpl
jno
aad
xor
jle
xchg
jl
dec
add
cmp
rolb
ss
adc
out
jmp
ffree
cmc
push
or
enter
js
add
daa
fdivl
gs
push
cld
jecxz
pushf
pop
mov
sbb
mov
jo
bound
call
nop
push
mov
cwtl
fs
lock
mov
mov
or
cmp
sub
in
sbb
inc
dec
xor
dec
ret
dec
or
sbb
insl
fnsave
pop
lret
mov
std
les
sbb
out
mov
add
mov
outsl
stos
js
out
ss
push
xchg
fs
adc
push
sub
sub
mov
stc
fisubrl
xor
xchg
xchg
ficompl
dec
add
aad
sbb
pop
pop
fs
cmp
rorl
sti
add
sbb
xor
adc
xchg
dec
inc
xor
inc
xor
add
je
sub
sarb
mov
sub
std
jnp
clc
pavgb
or
in
cld
mov
outsb
pop
incl
in
or
cmc
mov
fwait
lahf
pop
popa
xchg
sar
popa
ficomps
fnstcw
adc
sub
das
xchg
mov
jne
ja
outsb
lea
cmpb
dec
in
arpl
loop
jbe
rcrb
inc
cli
adc
mov
orb
mov
xchg
stos
add
xchg
aas
jecxz
sub
fidivs
js
call
scas
movsb
dec
inc
cmpsl
fwait
lea
sbb
cmp
inc
mov
xor
inc
mov
or
filds
clc
push
ds
xor
ljmp
jmp
dec
in
xchg
and
sub
jp
mov
fwait
push
lock
dec
fucom
insl
xor
dec
mov
les
test
lds
ficoml
mov
pop
sbb
fadds
pop
es
lods
sub
repz
sbb
mov
cltd
mov
jecxz
jmp
jno
mov
dec
aad
call
rolb
ffree
cli
int
scas
inc
nop
test
mov
cmp
int3
cltd
mov
mov
std
test
dec
or
mov
jns
inc
inc
js
cmp
stos
in
lahf
fsubs
push
fildll
loope
cld
aaa
outsb
pop
clc
jne
enter
in
sub
xor
mov
stos
fwait
mov
lahf
enter
add
mov
int
jge
ljmp
inc
in
jbe
or
pop
rcr
sub
pop
rcll
xchg
test
pop
shr
mov
jmp
sbb
pop
js
int3
imul
pushf
imul
out
fadd
aaa
mov
or
sar
adc
jno
fidivrl
sub
inc
daa
lock
pop
mov
mov
xchg
sbb
mov
pop
sbb
push
ret
dec
les
pushf
cmp
insb
hlt
sbb
call
xchg
or
mov
and
cltd
shlb
imull
dec
xorl
pop
pop
mov
mov
and
add
stc
fcmovu
mov
mov
add
pop
or
cmp
ficompl
sub
push
bound
leave
mov
or
cmpsb
mov
pushf
sbb
add
or
sbb
mov
mov
push
jb
lea
imul
jmp
pushf
fs
add
lea
mov
dec
outsl
jl
dec
inc
pop
and
ds
pop
in
sbb
adc
int3
dec
push
mov
xor
out
bound
or
sub
sbb
ljmp
es
jle
xor
bnd
int
shl
call
incb
call
das
jne
inc
sbb
test
divl
add
popa
push
push
add
int
mov
or
stos
addr16
jg
stc
enter
push
and
pushf
negb
mov
fcomi
inc
sbb
bound
loopne
add
imul
mov
cmp
loop
pop
pop
outsl
lahf
sub
sbb
pop
cli
cwtl
inc
add
lea
lds
dec
popf
movsb
dec
ds
xor
mov
mov
lahf
lods
mov
inc
jno
xchg
add
ss
push
fidivrs
adc
sbb
cld
loopne
push
mov
xor
andl
andl
mul
repnz
aad
add
int3
push
lcall
mov
fdivrs
add
lret
mov
loopne
dec
inc
cld
mov
add
sub
or
xchg
stos
pop
pop
cmp
push
mov
inc
xchg
dec
add
mov
or
sub
jo
fcomp
push
iret
mov
stc
out
and
sub
inc
ss
dec
xchg
lds
add
mov
aas
mov
in
lret
fstpt
mov
fstl
outsb
mov
cmp
xchg
rolb
jecxz
adc
addr16
pop
and
je
and
sub
pop
incb
js
adc
gs
xor
jl
in
imul
lock
xor
jle
aaa
inc
lock
lds
inc
es
xor
rolb
test
bound
lret
add
mov
push
je
push
mov
pop
mov
fisubl
sub
int3
add
mov
push
ljmp
call
adc
jo
lret
dec
and
insb
loopne
cmp
inc
ret
mov
aaa
stc
add
les
mov
dec
inc
mov
jmp
movsb
adc
iret
xchg
sbb
ljmp
stc
mov
dec
outsb
sar
inc
or
int3
test
aas
mov
mov
call
data16
sbb
sub
loope
dec
push
andb
mull
popa
daa
pop
cmp
fildl
sbb
mov
inc
adc
jne
mov
push
sub
dec
jno
sub
push
aam
rclb
and
cmp
loopne
cwtl
inc
in
pop
adc
out
mov
jns
cs
or
movsl
test
loopne
and
fdiv
jg
pusha
movsb
iret
mov
ljmp
push
out
arpl
movsl
pop
pop
xchg
adc
mov
outsl
pop
fisubs
andb
iret
das
mov
or
lds
insb
mov
inc
pop
xchg
pop
or
cmp
cli
ds
in
std
or
cmp
add
cmp
pop
movsb
cs
pop
lea
jp
pop
xor
pop
fmul
xchg
add
mov
call
sbb
push
jne
ljmp
pop
ljmp
mov
pop
fistl
rcr
cmp
call
ret
fisubrl
or
das
mov
dec
and
test
fiadds
add
les
and
or
fs
sub
inc
fcoms
pop
mov
inc
and
inc
cmp
in
dec
pop
lock
mov
add
xor
cmc
out
pop
ret
aaa
pop
or
lock
sbb
push
cmp
mov
gs
fdivr
pusha
test
xor
in
ret
das
adc
jmp
jmp
or
jo
mov
imul
mov
push
aas
leave
hlt
jmp
and
test
lahf
pushl
sbb
inc
jecxz
inc
test
cld
adcb
jecxz
mov
mov
cmp
mov
sub
jp
imul
addr16
loopne
addr16
cmpl
push
fs
in
loope
decl
mov
sub
out
push
mov
dec
or
mov
mov
cmpsl
and
adc
pop
mov
imul
hlt
push
mov
test
xor
pop
push
add
jmp
call
lret
add
inc
xchg
fstpt
inc
cmc
sbb
adc
adc
stos
xchg
and
xchg
std
cli
xchg
pop
jecxz
pushf
xor
lea
mov
int3
out
jecxz
insl
call
mov
add
imul
mov
fdivl
dec
mov
push
ficoms
adc
aaa
fwait
pop
mov
dec
xor
pop
decl
cmpsb
push
cwtl
adc
call
fsubs
and
jmp
sbb
std
das
add
mov
pusha
cmp
mov
arpl
div
fildll
push
shll
push
adc
rol
pop
cmp
jnp
shll
leave
enter
loope
xchg
jno
cmpsb
pusha
mov
mov
fisttpl
stc
jno
aad
lock
hlt
jne
data16
aad
pusha
or
jae
out
scas
add
ficoms
jno
mov
inc
lea
jo
leave
push
adc
xlat
mov
ja
pop
pop
test
out
in
bound
mov
das
int3
out
inc
nop
std
cmpsb
pop
ljmp
xchg
mov
jle
rcl
cmp
sbb
enter
xchg
or
adc
shlb
push
loop
xorb
das
loopne
cli
mov
sub
jle
sub
aaa
inc
push
int
pop
jo
mov
mov
push
cli
add
dec
lds
sbb
fsubrs
insl
sbb
call
test
lods
les
addr16
nop
hlt
mov
jge
cmp
mov
push
shl
xor
fildl
popa
sbbl
shrl
inc
mov
pop
repnz
xchg
inc
mov
js
ljmp
rcr
sub
mov
xchg
jp
add
xchg
pop
mov
and
scas
loope
test
rcrl
movsl
lcall
stos
and
test
scas
test
and
mov
loopne
test
add
ds
lret
dec
stc
out
push
addr16
ret
das
add
addl
clc
adc
cltd
shrb
mov
adc
ja
fldt
or
mov
fs
cmpsl
adc
pop
arpl
loop
push
mov
dec
les
jge
ficomps
dec
push
push
dec
arpl
imul
inc
lds
cmp
sbb
dec
xchg
mov
mov
dec
cmp
std
decl
cli
andb
or
adc
lea
xchg
fs
mov
sbb
scas
add
add
push
nop
cltd
bound
xor
push
push
and
sbb
loope
mov
jb
and
pop
call
xchg
out
rorb
mov
loope
mov
andb
xchg
xchg
pop
mov
pop
mov
ss
iret
cmp
mov
push
cmp
cltd
insb
call
cltd
aas
pop
pop
xchg
shlb
ss
cli
sarb
leave
std
daa
pop
mov
fld
sub
das
shlb
cmp
push
dec
les
mov
sub
adc
cwtl
adc
adc
fdivr
cmpsb
out
mov
sub
jecxz
add
lds
std
mov
sub
out
jbe
lock
cltd
loope,pn
lcall
sbb
dec
jg
xor
outsb
jo
cmp
mov
cmpsb
pop
popl
mov
in
xchg
ret
lcall
mov
jne
dec
daa
ds
sar
pop
push
fisubrl
xor
call
in
cld
call
jmp
out
inc
dec
icebp
adc
cli
fcmovnu
sbb
sub
dec
ret
fwait
jnp
je
stos
orl
leave
sub
xchg
leave
lock
jge
adc
or
es
xchg
jecxz
sbb
sahf
clc
outsl
sahf
inc
leave
add
lret
xlat
cmc
out
loopne
es
dec
je
pusha
fcomip
aaa
mov
pop
inc
mov
cs
movsl
pushl
imul
cli
js
das
sbb
mov
js
cli
mov
sub
push
stos
push
les
ficoml
and
adc
push
std
push
mov
add
sub
in
push
mov
adc
mov
fstpl
ljmp
jp
sbb
mov
fdivl
es
push
inc
fmul
ss
pop
jp
mov
mov
jp
cmp
sahf
repz
call
mov
fwait
mov
rolb
cmp
xchg
in
nop
outsl
cli
insl
xor
xchg
fs
pop
cmp
orb
mov
xchg
in
rorl
loope
pop
inc
test
xor
xchg
xchg
scas
lea
fidivl
lock
pop
mov
in
hlt
push
dec
insl
lcall
or
addb
inc
inc
push
xlat
ret
xchg
xor
cwtl
aas
outsb
jnp
push
mov
testb
pop
inc
pop
push
push
andb
call
outsl
mov
cli
repnz
pop
rcrb
scas
sbb
dec
and
loop
bound
cwtl
rolb
outsl
and
or
pop
dec
xlat
push
xchg
push
dec
pop
aas
xchg
bound
test
decb
fnstsw
sbb
sbb
loop
in
fs
fmuls
aaa
shlb
sbb
repz
sub
or
cmp
out
jg
inc
movsb
push
enter
mov
xor
sbb
loopne
xor
lock
pop
mov
mov
ss
jle
dec
jne
shl
push
pop
repz
gs
leave
inc
mov
sub
cli
sbb
dec
iret
jnp
dec
aas
mov
and
call
sub
lock
das
and
pop
out
mov
in
movsb
push
pop
add
add
int3
adc
mov
jo
shrl
cwtl
sbb
ss
pushf
and
or
inc
or
or
cmpsb
push
cmp
aas
movsl
mov
pop
inc
mov
sub
xchg
mov
push
pop
scas
nop
loope
or
jmp
pop
loop
mov
lock
addb
orl
jg
rorl
add
fdivrs
dec
sub
pop
mov
mov
mov
sahf
push
loop
mov
inc
inc
call
inc
sub
xchg
ficompl
mov
xchg
andb
push
jmp
sbb
lods
inc
cmp
adc
cmp
fcomi
mov
adc
mov
fildl
mov
repnz
cmp
dec
pusha
cwtl
pop
test
fisubrs
lret
outsl
fdivr
ret
xchg
pushf
out
or
or
sub
jmp
nop
das
pop
call
jmp
scas
hlt
jmp
insb
in
cs
mov
insl
sbb
into
ficoml
xor
insl
pop
ficomps
bound
shrl
shlb
adc
sub
sub
mov
movsb
fldt
mov
daa
pop
mov
and
pop
cli
or
xchg
inc
mov
mov
push
insb
xor
inc
es
mov
push
or
and
stos
jge
outsl
repnz
jl
loopne
inc
out
popa
adc
sub
aad
or
sbb
or
dec
insl
insl
jae
mov
lahf
sub
int3
hlt
add
dec
inc
outsb
mov
aam
jo
sbb
push
dec
test
lea
fnsave
test
dec
push
jno
sti
icebp
xor
pop
leave
int3
cmp
aam
shll
mov
pop
lds
pop
stos
jp
mov
inc
std
test
push
cmp
iret
push
or
cmp
pushf
cmp
or
inc
push
test
push
sbb
pop
mov
into
xlat
mov
imul
ss
xlat
mov
jge
hlt
outsl
or
stos
fadds
test
jl
add
pop
sub
mov
xchg
fwait
ljmp
inc
jge
insl
int
cmpsl
dec
mov
fildl
xchg
cmpsl
adc
icebp
sub
cld
mov
xor
nop
xchg
mov
or
loop
andl
jmp
jp
sub
jl
xor
or
mov
dec
inc
sub
inc
aaa
push
or
gs
mov
lret
outsl
insl
imul
xchg
xor
add
add
subl
mulb
test
scas
das
pop
loopne
adc
lds
aaa
dec
imul
movsl
call
aas
and
fildl
or
push
or
aam
or
data16
jecxz
popa
bound
jp
push
inc
scas
aad
push
xchg
mov
test
test
shlb
stos
stos
mov
xor
popf
mov
decl
mov
pushf
jbe
mov
fisttps
mov
test
lods
jo
out
jge
std
jg
mov
xchg
sbbb
or
mov
mov
lret
sub
fdivrs
ja
or
aam
loopne
xor
add
fcoml
fmuls
push
sahf
outsl
call
adc
ret
addr16
dec
sub
test
roll
dec
incb
lds
push
lock
add
jp
jle
ret
call
and
andb
xlat
subb
add
mov
jne
xor
jb
inc
adc
xchg
fsubrp
cs
rcr
mov
dec
sbbl
loope
inc
mov
mov
and
sbb
and
xchg
movsl
pusha
int
pop
mov
xchg
movb
sti
pop
pusha
imul
das
inc
lret
mov
rcll
or
sbb
pop
je
sbb
test
sbb
bound
or
push
mov
lahf
aaa
stos
mov
mov
inc
or
pop
or
and
or
mov
adc
int
adc
movsl
frstor
mov
popl
push
notl
loope
pop
mov
jns
dec
test
push
test
jns
lds
sub
inc
icebp
outsl
add
in
loopne
lahf
repnz
sub
xor
shlb
int
iret
lcall
andb
or
dec
popa
push
aam
fdivs
mov
push
js
jmp
stc
pop
fcomp
mov
or
jl
aad
or
mov
adc
dec
push
ret
push
sub
or
lock
cs
lea
imul
mov
add
cltd
gs
lods
rclb
and
in
mov
in
rcrb
aam
xor
rorl
pop
xor
or
jnp
jmp
pop
jae
lret
add
dec
sub
push
xchg
out
sbb
push
cld
ljmp
add
push
mov
add
jne
xchg
inc
and
mov
outsl
pop
movsl
test
mov
mov
mov
add
xor
scas
es
dec
repnz
cmp
fcoms
shlb
lahf
bndldx
add
mov
fs
mov
pop
cs
insb
lret
mov
outsb
jg
outsl
mov
pop
pop
and
mov
sub
call
jb
fwait
out
push
popa
jecxz
push
repz
mov
mov
mov
sub
jle,pn
inc
dec
mov
lret
fildl
pop
cmp
sub
in
cwtl
push
inc
mov
ss
cmp
sub
sbb
adc
insb
pop
adc
dec
das
adc
pop
sub
add
jbe
movb
pop
leave
sbb
ficompl
out
adc
aam
sub
insb
push
gs
mov
push
xchg
mov
push
icebp
and
rcrl
mov
sub
jnp
or
adc
lods
cli
mov
aaa
cmp
sti
out
adcb
sbb
bound
fcmovu
das
push
mov
jns
ja
inc
loope
sub
mov
rolb
into
adc
dec
cmp
sbb
ljmp
divl
fincstp
xor
arpl
pop
fists
adc
ljmp
mov
and
mov
mov
ret
sub
push
mov
stos
js
jb
clc
add
mov
ljmp
es
push
and
std
sub
or
adc
add
fildll
and
jge
rcl
jbe
xor
mov
pop
faddl
adc
sbb
std
scas
rorl
xchg
pop
cmp
rolb
testb
sbb
test
push
inc
pop
adc
cmp
test
adc
sub
rorb
popf
jecxz
or
push
out
insb
cmpsb
fistps
add
ljmp
sub
lods
xor
xchg
sbb
add
ret
ret
pop
xorl
ret
test
add
movsb
jecxz
mov
pusha
jecxz
aam
jb
nop
mov
xor
adc
dec
fs
push
or
push
int
dec
cmp
cmp
je
js
add
stos
jb
and
popf
sbb
or
ja
mov
aam
xchg
xor
sub
dec
loop
test
mov
mov
fwait
jp
dec
inc
bound
adc
daa
fadd
cmp
add
lret
ss
cmp
mov
daa
cs
xchg
push
negb
mov
lods
mov
ror
cmp
sbb
jmp
push
shrb
mov
mov
rclb
rclb
push
fstpl
fmulp
movb
mov
jg
loopne
mov
dec
ss
push
inc
lea
mov
mov
mov
and
addr16
xor
lea
mov
adc
and
mov
test
shrl
lds
popa
mov
ret
leave
scas
fstl
out
pushf
xor
shrb
sub
jbe
popa
pop
test
ja
std
mov
jo
jo
aas
dec
orb
push
es
sbb
pushf
stos
or
mov
mov
xlat
inc
sub
xchg
mov
push
and
adc
xchg
jp
in
jp
fists
repz
shr
cli
push
add
cmc
jno
push
addr16
in
pop
fwait
divl
sbb
mov
push
push
mov
faddp
scas
dec
ret
pop
add
xor
adc
and
or
cli
divb
jecxz
mov
test
call
mov
mov
mov
sbb
pop
mov
mov
into
pushl
mov
and
addr16
faddl
xchg
popa
xor
xor
test
add
mov
push
pop
stc
mov
out
adc
add
mov
mov
jbe
jns
and
mov
xchg
cs
sti
adc
mov
scas
daa
jns
icebp
xlat
fisttpl
inc
mov
adc
mov
push
dec
hlt
push
jb
inc
nop
jb
sbb
add
adcl
mov
cmp
add
mull
xchg
pop
outsb
fdivr
popa
popf
rorl
and
add
xchg
mov
push
rorl
xchg
std
push
into
mov
cs
imulb
push
sub
loop
loope
scas
movsl
push
mov
imul
inc
outsb
aam
add
xchg
cmpsl
notb
sub
cmpb
jp
mov
inc
ret
inc
std
test
mov
mov
fnsave
add
mov
pop
push
jl
fcmovne
cltd
jns
mov
pop
lcall
jno
mov
dec
es
push
bound
add
loope
sub
and
icebp
stos
xchg
in
mov
hlt
fcmovnb
dec
in
push
shll
mov
into
sub
sbb
rolb
ds
push
add
aas
mov
push
and
jmp
in
lods
dec
pop
mov
mov
or
lahf
pop
xor
sbb
mov
and
ret
mov
data16
jo
dec
insb
dec
xchg
cmp
push
pop
push
xchg
mov
lea
fdivl
mov
das
sub
mov
and
jp
sbb
pop
loopne
sub
jg
adc
cld
jbe
mov
in
cmp
mov
push
cmpsl
inc
lret
rcr
repz
mov
push
mov
scas
lret
or
or
and
int
mov
push
pop
cmc
cwtl
mov
add
sub
xor
mov
fstl
into
xchg
cmp
je
mov
in
ljmp
cs
mov
push
cs
pop
push
push
xlat
pushf
and
mov
ds
jmp
or
cmp
ss
out
adc
xchg
stos
xor
clc
loopne
mov
scas
ficoml
mov
mov
cwtl
lahf
ret
xor
mov
or
jo
cmp
adc
mov
lahf
fsub
push
dec
aaa
ss
pop
push
cwtl
dec
out
outsb
mov
cli
ja
nop
repz
lock
js
outsb
and
fistps
jbe
or
mov
or
dec
xchg
mov
andb
inc
or
or
in
inc
mov
mov
scas
cmpsb
cmp
les
jb
pop
call
rorb
adc
lahf
push
mov
jne
scas
fwait
jl
push
cmpl
dec
cmp
stc
jne
stc
aad
adcl
add
xchg
xchg
push
jp
jg
push
mov
enter
push
leave
pop
adc
or
mov
mov
fucom
sub
negl
and
push
or
jle
js
fcomip
ret
push
shll
arpl
mov
shrb
aas
es
adc
dec
jne
xor
stc
mov
lahf
add
push
sbb
sbb
subb
and
and
adc
jmp
push
sbb
pop
repz
sbb
fadd
sahf
psrld
leave
rcll
popf
addb
stos
mov
jo
movsl
das
mov
in
jle
push
aaa
je
outsl
xchg
xor
jecxz
dec
and
mov
or
jmp
leave
xchg
mov
hlt
mov
mov
mov
fdivr
mov
push
outsl
push
dec
inc
packuswb
cmp
lea
loop
fsubl
inc
jnp
imull
fmuls
add
cmpsb
dec
cltd
dec
rcl
push
mov
arpl
loop
mov
pop
mov
jnp
xchg
xor
xchg
sar
pop
mov
nop
sub
jno
push
or
out
adc
fnstsw
leave
test
test
mov
xor
bnd
push
sbb
subb
jns
xor
sar
psubq
outsb
mov
imul
icebp
dec
mov
lcall
ss
dec
xchg
mov
addb
and
mov
test
or
mov
inc
pop
ljmp
or
jo
sbb
sbb
gs
or
pop
ljmp
cmpsl
and
cmc
lods
dec
fs
pop
mov
or
je
mov
or
outsb
outsb
inc
sub
pusha
push
in
push
add
push
xchg
xchg
movsb
jne
sti
mov
sbbl
hlt
rclb
fldt
cmpsb
push
dec
xchg
or
mov
add
lahf
jmp
xorl
mov
inc
psadbw
mov
lods
xchg
cmpsb
movsb
fdivl
shlb
iret
ja
rolb
mov
call
push
cltd
imul
pushl
jg
ficomps
sub
sbb
sahf
mov
xor
add
mov
les
mov
ret
inc
pushf
dec
shll
add
fiaddl
test
pusha
mov
ss
ss
or
jmp
faddl
inc
and
sbb
stos
add
push
cmp
dec
adc
jo
scas
rcrl
mov
dec
push
sahf
fsubl
mov
push
dec
sub
sahf
and
adc
lret
adc
or
push
dec
or
rolb
add
rcr
push
sub
mov
cltd
sbb
xchg
ljmp
mov
outsb
iret
mov
adc
in
or
mov
adc
mov
fucomp
bound
outsb
jge
aas
fstl
pushf
lea
push
rol
pop
lea
dec
dec
js
dec
fldt
mov
jb
clc
mov
dec
ret
fsts
sbb
in
jnp
inc
fdivr
loop
add
sbb
ljmp
imul
insb
test
insb
inc
cmp
mov
jle
inc
iret
andb
xchg
xor
inc
divl
push
inc
je
xor
mov
insl
jecxz
sbb
and
mov
scas
sub
test
incb
dec
fstp
mov
outsl
aaa
sbb
adc
inc
xchg
pusha
jg
mov
data16
sarb
xor
adc
push
shll
cld
jb
outsl
add
fisubrs
fbstp
jne
add
push
xor
xor
push
mov
push
sub
pop
gs
cli
sub
ret
sub
xchg
clc
cmp
les
loope
insl
dec
or
push
pop
push
ret
push
fistpll
fnsave
mov
add
sbb
xor
xchg
rcr
and
lods
push
cmp
cltd
filds
in
sti
mov
fidivrl
xchg
gs
mov
pop
stc
inc
push
xor
inc
out
jp
add
lock
int3
push
and
loope
pushf
jnp
sarb
jmp
inc
jg
aaa
add
jbe
mov
push
and
jmp
shlb
add
pop
mov
mov
stos
mov
mov
mov
fs
or
arpl
pop
xchg
pop
pop
stos
ds
lds
push
fdivrs
pop
cmc
test
jle
jp
test
mov
pop
or
das
inc
movsl
pusha
inc
adc
and
mov
jp
lods
shrl
cwtl
sbb
add
pop
xor
inc
popl
dec
lcall
dec
fstp
adc
js
inc
push
inc
ja
pop
testb
push
cli
popa
bound
mov
hlt
inc
div
cmc
fists
out
and
or
in
test
lds
mov
push
icebp
shl
cmp
into
adc
ror
xorb
dec
leave
es
jne
stos
mov
movsl
sbb
add
jae
push
iret
pop
call
lret
push
mov
outsb
mov
lods
and
dec
jmp
fisubs
dec
push
jo
adc
sbb
lock
xor
addl
les
pushf
adc
cmpsb
clc
adc
mov
lahf
int3
xchg
or
pop
dec
pop
mov
xchg
dec
jbe
aad
pusha
jmp
enter
adc
insl
xor
jge
arpl
pop
ja
inc
outsl
or
sbb
fdivrs
jge
jnp
lret
rol
stos
push
mov
orl
imul
mov
test
dec
lret
jnp
pop
imul
sbb
je
pushf
lods
cmpb
loopne
xchg
push
jle
add
stos
add
fmuls
rorl
repz
int3
sbb
jp
xor
and
popa
repnz
test
xor
ljmp
adc
faddl
mov
leave
and
loop
cltd
mov
sbb
popf
ds
lret
icebp
out
out
cli
cmp
out
sbb
cmp
fstl
or
mov
adc
pop
fs
fwait
and
in
cltd
js
aad
scas
xchg
mov
push
or
dec
mov
je
hlt
dec
push
dec
xor
pop
scas
imul
add
cmc
jmp
rorl
jecxz
jnp
mov
fnstcw
jp
aaa
jp
dec
int3
inc
adc
mov
jecxz
mov
adc
loopne
arpl
push
push
in
rcll
pop
mov
cmpsb
outsb
sub
fs
pop
inc
cwtl
out
and
movsb
or
push
add
pop
popf
jnp
xor
mov
jle
mov
scas
popa
outsb
xchg
jl
mov
mov
cmp
push
pop
sbb
out
mov
aam
scas
sbb
inc
rcrb
pop
mov
rorb
mov
insl
adc
or
ljmp
icebp
popa
rolb
jb
mov
aad
add
and
sbb
xor
mov
inc
test
mov
out
adc
shlb
xchg
sti
pop
mov
adc
inc
sbbl
xor
nop
or
cmp
sub
adc
dec
loopne
mov
pop
push
lock
and
scas
test
lock
jbe
and
sahf
xchg
orl
clc
mov
inc
inc
cmp
outsl
mov
ljmp
inc
int3
xchg
mov
rcll
xlat
dec
and
setno
cltd
jmp
ret
xchg
cmp
sbb
mov
and
insl
shll
fimuls
iret
cmp
or
lcall
das
pop
cmp
xchg
pop
stos
out
aaa
aas
insl
rclb
mov
dec
sub
lock
aas
push
sub
pop
loop
ds
xchg
outsl
fcoml
aaa
sub
xchg
xor
pop
std
es
and
cmpsb
stc
mov
jne
insb
xor
xor
mov
sub
mov
or
out
push
xor
xchg
icebp
adc
movsb
loopne
add
stos
out
mov
popa
negl
shl
cmc
pop
jmp
stc
aad
jb
jl
add
pop
xor
rcrb
mov
addl
popa
inc
in
push
jno
sbb
push
cmp
pop
rcrb
pop
bound
sbb
or
and
adc
pusha
push
lds
mull
jp
bound
stc
xor
fucomip
or
std
sbb
add
xchg
xchg
insb
jp
lds
sbb
or
sahf
sub
mov
pop
mov
adc
mov
mov
jge
or
push
sbb
and
xchg
and
negl
aad
pop
or
arpl
lock
or
sbb
ja
jnp
add
les
cmp
xor
xor
mov
stos
mov
jbe
sub
fdivrs
lret
fmull
into
mov
ljmp
cmpsl
push
mov
gs
jmp
imul
mov
xor
push
aaa
xchg
test
dec
inc
pop
pusha
inc
dec
lods
ret
sbb
ret
sub
jnp
cmpsl
xor
loope
push
sbb
decl
jno
mov
nop
shll
jp
inc
push
mov
push
push
jno
push
cmp
jle
clc
pushw
jae
jb
inc
lock
sti
dec
push
in
sbb
into
xor
minps
sahf
daa
xchg
ret
inc
or
enter
sti
enter
add
call
in
popf
outsb
push
mov
rorl
cmp
sbb
call
outsb
ljmp
cmpsb
xchg
inc
fstl
loope
mov
cwtl
outsl
adc
inc
inc
sbb
dec
adc
test
add
adc
pop
movl
add
adc
adc
mov
cli
cmp
fcoml
aaa
outsb
or
mov
push
in
or
dec
je
adc
xchg
fcmovu
inc
rol
push
loope
xchg
fdivs
jp
ret
shrl
ret
push
ficoml
push
mov
xlat
adc
xor
lea
or
test
adcl
inc
push
int
fildl
mov
aam
testl
pop
sbb
rcrb
test
shll
inc
scas
jno
cmp
add
sbb
out
dec
mov
pop
outsb
jne
notb
jne
xor
adc
mov
dec
test
and
mov
pop
std
andl
jnp
pop
mov
mov
mov
xor
int3
dec
out
sbb
fistl
jno
add
fs
mov
loopne
push
mov
inc
mov
push
aam
pop
popf
push
pushf
nop
jns
jp
repnz
sbb
ss
insb
scas
imul
mov
repz
cmp
mov
jl
std
lret
lock
mov
jp
faddp
pop
xor
andl
jmp
cmp
inc
int3
jge
add
and
cmpsb
outsl
push
loop
pusha
sbb
data16
mov
pop
push
mov
xchg
xorl
adc
ljmp
mov
add
push
mov
cmc
jno
clc
shlb
imull
pop
inc
xor
mov
add
loope
in
adc
jp
jg
cmp
dec
nop
inc
roll
aaa
pushf
jo
das
mov
lock
mov
jno
fwait
jne
repz
inc
test
js
call
xchg
pop
fcoms
jae
in
orl
xor
sub
mov
leave
pop
mov
rdpmc
nop
addb
movsl
ljmp
movsl
out
gs
dec
and
pop
negb
adc
rcrb
ljmp
fsubr
loopne
adc
fs
push
push
sarl
loop
add
adc
push
push
dec
aaa
aad
push
adc
xor
test
imul
mov
pusha
dec
mov
inc
mov
mov
xor
shl
xor
mov
dec
xor
js
xorb
inc
inc
inc
jle
pop
stc
or
mov
pop
fs
pushf
jp
ds
and
jnp
and
rcll
rcl
pop
xlat
jl
mov
inc
mov
iret
adc
les
mov
pop
loop
jle
call
pop
inc
adc
mov
and
popf
cltd
fisubl
imul
lock
adc
test
lea
inc
aam
cli
scas
fisttpll
xlat
cmpsb
pop
xchg
jmp
xor
pop
xchg
das
aam
add
add
mov
shl
xchg
jae
xchg
sbb
add
cmpb
lcall
mov
push
lock
testl
inc
push
pop
sbb
pop
pushf
pusha
lods
mov
adc
xchg
push
aad
push
lods
inc
xor
dec
pop
lcall
inc
in
mov
mov
insb
ljmp
mov
ds
inc
outsb
jns
out
inc
les
nop
inc
mov
loop
into
js
lret
push
pusha
stc
dec
in
aad
fdivrl
pop
aas
es
mov
icebp
popa
jmp
cmovno
mov
jp
pop
pop
add
fwait
pop
pop
and
dec
int3
pop
nop
mov
iret
push
dec
or
iret
popl
cmp
negl
leave
lcall
aam
inc
rorl
pop
roll
dec
push
into
or
lods
imul
fcoms
addb
imul
mov
cli
mov
mov
jmp
lods
and
sbb
out
xor
dec
jb
into
andl
mov
les
pop
jmp
mov
loop
jb
enter
mov
scas
xor
jl
jge
push
and
xor
pop
mov
out
inc
jnp
addb
dec
aam
pushf
inc
adc
push
push
les
call
xchg
adcl
rorb
add
push
mov
repnz
xchg
mov
dec
xchg
inc
pushl
popa
out
xor
cmpsl
nop
popa
xchg
rol
sbb
int
inc
cmp
das
push
sbb
insb
std
adc
cmp
mov
inc
mov
leave
pop
xor
notl
jg
test
scas
mov
shr
pop
fists
lahf
xchg
pop
lds
add
jg
adc
mov
pop
add
jecxz
mov
lods
les
jl
lods
pop
fcoms
mov
incb
sbb
cmpsl
xchg
jae
or
pop
sbb
pop
xor
xlat
sub
loopne
scas
cld
inc
pop
enter
ret
or
sub
test
pop
mov
ds
push
aaa
js
and
ret
shrb
mov
or
scas
lahf
lock
xor
test
jg
mov
in
testb
test
and
pop
push
inc
cmp
mov
cmpsb
pop
jne
add
sbb
shl
ret
push
mov
mov
sbb
pop
rcrl
leave
shll
movsw
fstl
insb
push
in
and
lods
or
in
scas
imul
std
mov
dec
aaa
rol
scas
outsb
push
ficomps
inc
jno
sbb
add
pusha
fstpt
icebp
cmp
xor
mov
sub
enter
pop
sbb
addr16
sahf
mov
lahf
xlat
fdivr
rolb
add
inc
sbb
mov
jecxz
pop
dec
call
ds
mov
js
les
adc
fdivr
call
mov
mov
sub
cmp
push
gs
roll
clc
in
jmp
mov
xchg
mov
repnz
pop
hlt
cmpsb
nop
jl
clc
cs
adc
mov
xchg
aaa
loop,pn
mov
xor
pusha
push
test
out
xchg
mov
mov
or
mov
movl
push
jecxz
mov
pop
sbb
sub
and
lods
jg
insl
aam
xlat
mov
and
shrb
stc
stos
or
cmpsb
add
inc
mov
fucomi
cmpsl
adc
sbb
push
addb
jnp
rolb
das
notl
inc
ja
jb
dec
add
ds
mov
inc
mov
std
mov
sbb
sbb
cwtl
sub
out
mov
or
mov
dec
dec
add
and
mov
push
xor
andb
lds
add
scas
arpl
add
mov
movsb
insl
mov
push
and
mov
outsb
mov
add
xor
mov
clc
push
and
negl
or
adc
pop
testl
js
out
pop
jo
xchg
add
popf
pop
adc
inc
mov
lea
enter
jns
inc
std
lods
out
and
stos
cs
jae
lret
add
ffree
lods
inc
cmp
mov
shlb
idivl
and
hlt
push
dec
inc
xchg
cwtl
fwait
adc
clc
fmuls
out
xor
mov
les
jne
cmp
adc
cmp
test
jge
mov
mov
insl
mov
jns
mov
pop
loopne
add
mov
mov
sbb
or
xor
or
sbb
daa
jp
jbe
fists
or
lods
sub
fisubrs
pusha
test
andb
ret
notb
rorl
xchg
xchg
adc
sbb
mov
cmp
fcomp
or
jno
popa
cs
and
jecxz
or
fidivrs
pop
mov
or
dec
scas
ja
push
mov
stos
sti
jnp
push
out
fnstsw
cmp
inc
insb
cld
sar
int
movsb
jmp
inc
repz
fistps
mov
dec
push
imul
lea
or
mov
cli
jg
test
lret
inc
push
jl
loop
pop
inc
icebp
add
clc
push
iret
push
mov
dec
xor
pop
scas
pop
mov
test
cmpsb
test
sbb
push
add
sbb
lcall
xchg
loop
lods
aaa
icebp
mov
and
sbb
pop
jmp
inc
ret
xor
pop
icebp
int
sbb
mov
es
push
mov
fsubrl
jns
mov
adc
jns
and
cmp
add
idivb
adc
and
scas
ljmp
out
jne
mov
divb
and
or
jae
pop
adc
dec
lcall
mov
cmpb
mov
sbb
loop
inc
dec
and
lock
adc
fmulp
push
or
mov
in
or
sbb
dec
stc
cltd
or
stos
movb
iret
sete
cmp
add
inc
inc
jo
movsl
xchg
pusha
fcoms
xchg
in
and
jb
mov
push
sbb
mov
fdivr
add
xor
lea
arpl
cmp
jo
ja
mov
mov
pop
push
add
in
in
sbb
pop
js
adc
les
ja
aaa
xor
sub
and
dec
es
inc
out
or
fstp
and
fcomip
aam
clc
rcrb
jae
lods
je
cmp
add
or
outsb
jmp
andl
or
push
dec
frstor
jne
fstpl
and
pop
inc
xchg
fcmovu
mov
je
inc
xor
fsubrp
int3
and
xchg
repz
mov
xor
dec
dec
mov
pop
jecxz
xchg
xor
adc
loope
mov
dec
cs
test
xchg
ljmp
and
or
cltd
dec
pop
sbb
and
xchg
mov
clc
sub
mov
ljmp
fwait
and
mov
mov
aad
aas
lds
fcompl
mov
add
jge
xlat
adc
out
sub
fmuls
ret
or
aas
mov
mov
int3
or
inc
dec
idiv
movsl
cmpsb
loopne
lock
pop
jbe
gs
pop
lahf
mov
in
dec
loope
icebp
mov
xchg
lock
push
adc
cmpsl
pop
insl
dec
or
push
xchg
and
sbb
or
cld
imul
inc
pop
outsb
inc
cltd
mov
js
dec
adc
lods
mov
imul
in
mov
fisubs
cld
lods
inc
fwait
orb
bound
outsb
xchg
addr16
gs
out
sub
cltd
sub
enter
fdivr
loope
mov
push
gs
add
adc
test
andl
adc
stos
inc
mov
cmp
xlat
mov
push
xor
xor
push
inc
adc
lods
filds
mov
cld
or
mov
aad
orb
adc
sbb
or
cmp
sbb
stc
inc
mov
cld
mov
cmpl
out
in
mov
or
mov
jb
sub
subb
cmp
mov
repz
shrl
adcl
lahf
movsb
pop
test
push
inc
mov
sbb
std
shlb
sbb
int3
icebp
push
push
and
add
mov
jmp
add
jne
or
lock
xor
add
pop
add
and
inc
inc
andl
out
lss
loope
enter
mov
push
cmpsb
push
jge
loop
js
es
filds
scas
jmp
stos
cli
lret
add
mov
inc
inc
pop
push
addr16
lds
mov
pop
mov
adc
jne
lcall
add
sub
mov
pop
cmp
cli
push
mov
xor
lea
movzbl
jne
lods
cmpsl
lock
xor
das
mov
inc
pop
mov
cwtl
mov
xlat
mov
clc
xchg
ficoml
mov
mov
fistpll
fisubs
outsl
mov
add
mov
mov
rclb
push
pop
in
add
stos
mov
fsubrs
fistps
test
mov
loopne
das
scas
push
jae
lock
mov
mov
ret
icebp
sahf
ss
adc
add
cs
test
xor
sahf
cmp
ja
cmp
cmpsl
test
dec
xchg
scas
xor
jge
xchg
push
or
ja
bound
push
or
push
adc
lcall
add
inc
in
stos
pop
mov
insb
daa
insl
inc
push
inc
pop
add
add
xchg
xchg
add
mov
adc
dec
cmc
jo
in
push
call
aas
inc
lcall
or
inc
int3
or
loopne
out
adc
imul
test
fcomip
push
pop
fdivrl
adc
int
outsl
out
call
and
aam
imul
loop
sbb
arpl
imul
fists
dec
test
dec
inc
push
or
mov
les
or
xor
or
sbb
mov
dec
or
ljmp
call
xor
add
enter
dec
bound
lods
movsb
inc
divb
xchg
loope
or
arpl
and
iret
les
je
or
push
mov
clc
add
rolb
pop
jp
inc
dec
inc
cmpsb
add
sbb
inc
mov
shrb
roll
mov
ds
shlb
repnz
mov
imul
das
test
add
inc
hlt
pop
sub
inc
iret
cmp
or
jmp
lcall
andl
dec
ret
jp
mov
jl
inc
jnp
push
fildl
fildl
add
mov
mov
call
and
or
rcl
sub
jns
lahf
mov
mov
mov
movsb
mov
xorb
pop
jo
js
enter
rcll
inc
clc
cmpsl
pop
js
roll
imul
or
push
add
lock
sub
movsl
lods
push
roll
mov
jbe
int3
out
cmp
or
fildl
sbb
mov
push
inc
push
les
jmp
adc
mov
outsb
and
icebp
nop
ljmp
ss
call
xor
adc
add
sbb
lds
sbb
push
ficoms
inc
imul
dec
dec
dec
out
shll
in
sbbb
and
cmc
in
push
loop
test
hlt
es
loopne
pop
pushf
shlb
loopne
jle
mov
lret
cwtl
sub
scas
pop
or
pop
scas
push
inc
sub
xchg
sbb
jge
dec
inc
sbb
mov
inc
sahf
rcrb
insb
mov
push
je
hlt
add
in
cmp
adc
pop
xchg
bound
lds
mov
test
outsb
loope
push
xchg
cwtl
dec
mov
inc
insl
push
js
stos
dec
lds
scas
mov
movsb
repnz
andb
jge
xchg
sbb
into
call
mov
lods
paddusw
bound
mov
les
or
or
mov
mov
loop,pn
shlb
sub
popl
pop
fistps
fidivs
mov
push
push
jo
addr16
arpl
cmp
dec
pop
ljmp
jne
nop
adc
or
aas
pop
pop
out
outsl
cld
or
mov
aas
and
add
pop
adc
ret
fistpl
inc
jl
scas
add
test
sbb
mov
mov
fldt
jmp
sub
enter
lods
jns
jnp
xchg
or
add
mov
movsbl
dec
bound
or
movb
test
mov
jge
ds
cmp
mov
or
or
leave
pop
stos
cmpl
dec
jne
mov
or
rolb
or
hlt
out
mov
in
movsl
vmread
inc
xor
loope
cltd
push
sbb
lcall
push
sbb
and
in
inc
fiadds
inc
movl
jno
cmpsb
adcl
in
aad
pop
sbb
nop
and
sbb
arpl
cmc
inc
out
mov
repz
pop
xchg
and
and
push
fstl
popf
mov
in
sarb
lock
lret
adc
add
test
test
xchg
xor
andl
stos
es
in
sub
scas
hlt
repz
inc
js
mov
mov
jne
movsl
ss
je
hlt
or
inc
xchg
out
jno
bound
cs
shl
aas
dec
jno
std
mov
mov
leave
std
mov
xchg
inc
add
loopne
pusha
lcall
xor
lret
clc
mov
daa
push
inc
inc
call
cmp
dec
add
aas
mov
mov
lock
out
pop
das
add
movsl
sbbb
mov
jp
dec
pop
in
pop
aaa
outsb
or
push
jae
lcall
dec
loopne
xchg
xor
ret
mov
sahf
js
pushf
adc
repnz
inc
nop
loope,pt
out
adc
out
push
mov
incl
cmp
jg
fbstp
xor
out
inc
andl
push
inc
inc
cltd
sbb
notl
cli
push
xor
mov
clc
jmp
or
mov
pop
inc
mov
paddsb
or
push
not
jnp
test
dec
frstor
pop
pop
insl
xor
or
fstps
push
or
adc
adc
out
xchg
fsubrs
dec
inc
int3
push
hlt
xchg
jle
fiadds
outsb
mov
pop
jmp
pop
sti
sbb
push
bound
test
out
aas
lds
pop
call
pusha
push
std
adc
mov
loop
mov
test
out
pop
mov
movsb
pop
cwtl
cmp
fbld
and
lds
jp
cli
outsl
mov
sbb
pusha
xor
in
aad
cmpsl
push
xor
mov
or
mov
dec
lea
or
movb
punpcklwd
jle
mov
out
lea
int
xchg
cmc
out
push
out
fucomi
fists
jbe
ljmp
or
adc
sub
pop
in
jmp
cmp
adc
add
xchg
into
mov
es
adc
mov
jne,pt
cmp
sbb
pop
sbb
push
das
and
xor
out
mov
dec
rcrb
imul
loopne
cwtl
cltd
lahf
jne
mov
addr16
les
push
stc
mov
xchg
mov
ja
loopne
pop
pusha
imul
push
dec
sbb
je
jg
dec
sub
cmc
xor
mov
jb
out
mov
insb
mov
hlt
cmpsl
out
insl
pop
add
cli
fcmovnb
sbb
jle
loope
nop
xchg
or
jge
fnsave
xor
xchg
and
data16
daa
ficompl
jmp
sbb
mov
bound
push
xchg
mov
lods
loope
cmp
add
lock
jae
ss
push
dec
and
mov
mov
sbb
add
cmp
orb
jecxz
push
in
incb
int
mov
cmp
push
aaa
cmp
push
test
arpl
in
int
pop
mov
sub
add
pop
jecxz
xchg
ds
test
loopne
ret
imulb
pop
mov
shlb
int3
insb
daa
js
cld
ljmp
xchg
out
out
cmpsl
scas
fstl
out
inc
pushf
push
mov
jl
arpl
jge
jle
xchg
aaa
adc
je
cmpsb
iret
sahf
xor
add
mov
inc
dec
fmuls
icebp
dec
inc
outsl
test
xchg
xchg
call
lock
dec
imulb
jg
cli
mov
imul
adc
test
cmpsb
push
addb
orl
rcl
push
aas
adc
xchg
push
mov
call
pop
xchg
inc
push
cmp
cmpsl
leave
add
lock
test
loope
js
pop
fbstp
lea
pop
fs
sub
repz
xor
add
push
aas
leave
mov
add
cmp
adc
scas
mov
sti
stc
mov
adc
ja
stos
xchg
orl
mov
jecxz
jl
mov
sbb
fwait
orb
add
lock
inc
jne
xchg
sbb
ljmp
mov
cli
mov
mov
ret
dec
ror
bound
xchg
xor
cmp
cmp
mov
sbb
add
sub
pop
lcall
dec
out
and
pop
cmp
jecxz
loop
sarl
incl
or
imul
daa
nop
js
insl
mov
scas
add
scas
gs
xor
outsl
adc
jg
sti
sbb
mov
aas
cs
popf
ja
adc
gs
icebp
adc
lods
add
test
and
adc
int
ret
mov
iret
cmp
call
lahf
orl
out
mov
pop
or
cwtl
lock
pop
outsb
aaa
xor
lods
mov
mov
sub
xor
mov
add
sbbl
adc
idivb
mov
shrb
stos
mov
sbb
aaa
les
mov
sub
push
les
mov
sbb
clc
jno
into
mov
fstl
mov
xchg
sub
cmp
pop
clc
pop
cmp
or
scas
push
sub
cli
sub
insb
push
pop
pop
decb
cli
repz
rcll
xchg
xchg
adc
xchg
aad
icebp
add
loop
mov
push
ret
std
dec
or
sbb
pop
push
lahf
or
loop
out
popl
loopne
mov
mov
pop
sub
add
xor
cmp
and
or
jno
scas
sarb
mov
scas
mov
loope
xchg
xor
mov
dec
push
js
and
jbe
das
push
int
movsl
cmp
test
in
push
repz
test
sub
int
ret
adc
sbb
xor
bound
mov
cli
dec
pop
cmp
mov
fldenv
push
sbb
enter
dec
and
pop
call
adc
sub
mov
cmp
add
mov
das
push
xlat
inc
mov
push
inc
fisubl
lods
imul
les
in
ss
lock
movl
jle
mov
add
push
dec
mov
test
jnp
sbb
or
mov
jnp
pop
inc
stc
xchg
push
outsl
push
outsl
lret
addl
shlb
stc
jo
dec
or
add
jmp
cmp
sbb
nop
stos
sub
cmp
jbe
pop
adc
jge
and
nop
push
sbbl
sbb
outsl
pushf
mov
sbb
xchg
mov
or
ret
fcomip
pop
mov
aas
adc
pop
pop
mov
adc
outsb
je
jbe
int
dec
mov
adc
shrl
das
pop
mov
sbb
daa
push
mov
lods
mov
hlt
inc
mov
mov
sbb
cmpl
sbb
add
jmp
inc
add
push
push
mov
jmp
jecxz
push
daa
jo
jno
cmpsb
mov
or
jmp
jg
pop
sbb
inc
out
popa
sub
lds
jecxz
mov
push
mov
popf
ret
incl
inc
xchg
cmpsl
fs
sbb
jae
and
out
sbb
daa
or
or
fsts
cmc
add
ret
cld
dec
cmpsb
mov
cwtl
pop
xor
mov
mov
mov
roll
addr16
dec
add
pop
sar
fsubl
pop
jbe
push
mov
mov
sub
das
in
xchg
mov
jo
js
mov
xchg
push
cmp
inc
inc
shll
and
mov
sub
add
xchg
idivl
mov
pop
pop
in
adc
lds
in
aaa
mov
das
sub
add
xchg
mov
xchg
mov
stc
clc
jl
dec
pop
je
push
jecxz
shll
dec
or
pop
cmpb
idiv
sub
addr16
push
push
nop
mov
into
inc
cld
jg
and
aas
pop
jecxz
mov
insl
jl
or
outsb
sahf
jle
stos
idivb
mov
out
add
mov
stos
mov
ds
lret
push
jg
adc
mov
or
inc
sub
mov
adc
movsb
cltd
test
rol
test
mov
out
mov
or
pop
sti
loop
add
xchg
mov
loope
dec
jle
cwtl
sbb
and
dec
loopne
inc
mov
sbbl
imul
pop
adc
cmp
xor
test
cmp
pop
jns
loopne
mov
sbbl
shrb
out
inc
iret
xor
repz
jle
xor
cmp
jo
loopne
sbb
jbe
jnp
mov
std
ret
sub
dec
push
cmpl
insl
inc
dec
pop
int3
movsb
add
cmpsl
jge
test
cmp
stos
adc
arpl
inc
mov
jp
enter
enter
scas
mov
xchg
or
xchg
cwtl
push
add
mov
ds
stos
and
stc
cmp
insl
push
mov
inc
push
ss
pushf
push
jno
es
xor
ret
loopne
add
stc
push
ja
jp
enter
or
adcl
xchg
icebp
pop
test
mov
mov
popa
sarl
and
adc
dec
call
pop
fcompl
aad
pop
outsl
adc
rclb
pusha
fimull
add
cmp
loope
mov
sahf
adc
inc
add
ljmp
roll
fwait
movsl
pusha
and
ret
cmp
test
xlat
xchg
insl
add
jg
dec
sti
jno
sbb
fwait
rclb
pop
fs
add
cmp
or
es
out
aaa
add
jmp
mov
pop
add
mov
mov
ds
mov
mov
xchg
push
push
jg
push
adc
pop
pusha
and
cld
jp
xchg
adcb
mov
dec
aaa
mov
nop
sbb
fcmovnb
add
push
mov
jne
ret
inc
adc
ret
sbb
mov
inc
jge
cmp
xchg
pusha
lret
cli
sbb
iret
sahf
cmp
test
scas
scas
add
sbb
js
pop
mov
dec
lds
add
adc
xor
add
push
inc
cmc
sub
aad
scas
cmp
mov
test
mov
shrl
jl
sub
mov
notb
and
inc
adc
cld
test
sub
cs
mov
jmp
or
pop
xchg
or
fs
push
cmp
std
xchg
pop
pop
push
sbb
sub
mov
pop
dec
add
adcb
jp
aas
jmp
andb
xor
dec
mov
enter
test
movsb
repz
mov
test
outsl
xor
test
sub
mov
or
mov
jge
jne
scas
ds
push
lret
sub
rcll
or
repnz
mov
cli
mov
pop
xor
rolb
cmp
call
clc
mov
and
mull
xor
push
xchg
push
popf
popf
or
mov
outsl
test
inc
outsl
adc
pop
add
xchg
mov
loopne
daa
into
jae
push
adcb
or
shrd
mov
add
imul
inc
bound
mov
test
fildl
mov
jno
mov
mov
mov
cwtl
cwtl
xchg
adc
clc
push
lahf
cmp
into
out
push
inc
mov
out
subb
gs
sbb
jg
mov
iret
repz
adc
popa
mov
loopne
sbb
call
ficompl
fsubrl
push
idivl
mov
lret
push
pop
insl
push
sub
jne
dec
outsl
filds
testl
scas
mov
push
and
mov
xchg
xlat
fdivl
cmp
mov
xchg
shrl
wbinvd
push
sbbl
sarb
iret
idivl
pusha
lods
les
adc
fsubrs
rcl
hlt
or
push
enter
lcall
js
in
xchg
push
inc
aas
mov
jle
xchg
jbe
xchg
sahf
sub
mov
mov
jne
jns
mov
std
rol
add
in
sarb
ljmp
add
jp
xchg
ja
mov
popf
add
sub
or
int3
push
jae
repnz
add
mov
mov
fs
and
ret
push
es
add
sub
repnz
adc
int3
or
int3
pop
mov
fiadds
pop
insl
rclb
cld
pop
add
rorb
inc
fs
and
cmp
add
pop
cli
lahf
sub
aaa
loope
icebp
jmp
add
loope
addb
inc
sti
or
cmp
lret
rcr
pop
cmp
mov
ja
push
mov
fisubrs
cmp
mov
or
fcompl
test
outsl
sbb
loop
aad
pop
or
mov
add
popf
dec
sahf
sbb
jnp
scas
ljmp
mov
dec
fcomps
xchg
or
lea
sahf
or
movsb
cli
adc
in
mov
mov
sbb
pop
adc
insb
enter
pop
lcall
xor
xchg
pop
ret
fwait
xor
inc
andb
adc
push
pop
mov
aaa
xchg
ficompl
fbld
add
jnp
mov
sbb
jecxz
add
dec
or
aam
pushf
mov
mov
jl
movsb
pushaw
jnp
std
jge
pop
hlt
add
daa
mov
aad
les
push
test
arpl
dec
aad
test
adc
aaa
xchg
stos
call
sub
hlt
ja
rorb
das
rcrb
stos
pop
push
sbb
iret
popa
stc
adc
nop
push
add
sub
mov
add
test
cmc
movzwl
sbb
push
sbb
adc
fs
mov
dec
push
pop
mov
mov
mov
fimull
pusha
mov
bnd
sub
out
push
jnp
mov
or
xlat
dec
xor
cmp
aas
rcrb
loop
pop
mov
push
cmp
add
sbb
loop
lret
mov
imul
lods
pop
and
add
mov
sub
dec
es
and
cwtl
or
loopne
lods
or
jp
lods
cmp
push
jmp
adc
cmpsl
ficompl
add
subb
ret
insl
mov
push
popf
inc
xchg
adc
push
outsb
sub
ljmp
xor
out
nop
inc
sub
jmp
xchg
notl
mov
sbb
pop
push
shrl
bound
mov
xor
push
and
xor
cmp
inc
icebp
jbe
pop
stos
jge
pop
repz
ljmp
or
mov
xchg
mov
cmp
jns
stos
je
out
cmp
adc
or
or
call
shl
repnz
decb
jle
mov
shlb
andl
sahf
add
xchg
icebp
rolb
xor
rcll
sbb
shl
int3
test
test
aas
stc
std
adc
mov
add
divl
inc
faddl
mov
adc
dec
mov
mov
ss
mov
adc
fwait
ret
std
stos
push
add
xor
loopne
lods
cmc
jae
cmc
sbb
iret
out
add
and
popa
enter
or
xor
add
push
push
outsb
nop
pop
add
cmpb
cwtl
add
js
xor
inc
push
out
push
or
add
fnstsw
mov
addr16
mov
sbb
lds
repz
pop
xchg
cmp
cmp
xchg
jo
sbb
fcoms
jbe
rcl
add
leave
std
adc
mov
inc
or
hlt
push
or
ljmp
xor
addr16
push
xor
pop
clc
lods
mov
cmp
pop
cmp
mov
addr16
gs
push
lock
pop
outsb
and
loopne
test
stc
std
push
mov
jecxz
aaa
jecxz
pop
jnp
cmpsb
imul
push
test
xor
clc
call
add
les
mov
push
mov
lcall
mov
gs
loopne
adc
sbb
shl
adc
or
icebp
add
ds
push
cwtl
mov
mov
cmpsb
lea
les
sbbb
incb
dec
pop
xchg
adc
inc
fldl
out
cmp
pop
scas
loope
dec
lock
iretw
enter
stos
and
sub
sbb
push
outsb
stos
add
sub
jge
jg
mov
dec
icebp
repnz
ljmp
or
clc
fisubs
rorb
mov
jb
jge
and
sub
pop
adc
xchg
inc
cmp
in
fidivrl
add
popa
enter
loopne
and
out
adc
xor
pop
hlt
cmp
dec
scas
inc
pop
mov
xor
inc
inc
jl
out
jmp
mov
gs
sbb
add
pop
adc
mov
pop
cli
adc
push
add
or
out
dec
ja
clc
sbb
sbb
clc
std
rcrb
out
out
fcompl
xor
std
out
mov
sbb
repz
mov
adc
and
sbb
cmp
fwait
pusha
adc
xor
cmp
inc
add
mov
andb
sub
adc
mov
mov
mov
data16
mov
sar
shlb
adc
fildl
ret
outsl
jge
into
add
fsubrs
jl
lret
ror
outsl
jae
sbb
ret
fistpl
shlb
xor
sti
outsl
out
int3
adc
bound
push
je
cltd
cmp
ja
push
adc
stc
cltd
les
stos
loop
loope
les
test
xchg
in
aaa
cwtl
ja
adc
jg
cwtl
mov
inc
sbb
adc
adc
or
rclb
sub
icebp
les
xchg
divl
or
mov
xchg
mov
or
fildl
lret
and
das
push
mov
dec
push
sbb
mov
cmp
jmp
sub
or
mov
push
adc
jg
cmp
jbe
and
out
and
cmpsb
inc
sbb
bt
or
es
mov
push
into
ret
and
push
jmp
dec
pushf
call
int
jl
jmp
sub
in
mov
mov
pop
movups
sub
testl
sbb
inc
hlt
mov
fstpl
inc
and
scas
mov
adc
aas
out
pusha
fidivrs
sahf
cmp
incl
je
xchg
cld
stos
mov
in
xchg
or
lcall
decl
sbb
les
nop
xlat
pop
pusha
adc
add
jmp
inc
incb
adc
pop
std
push
pop
int
pop
popf
and
hlt
mov
mov
pop
and
mov
data16
pop
imul
jnp
inc
imul
mov
pop
push
mov
addr16
mov
aad
daa
fs
fcoms
push
mov
je
in
xchg
xor
jg
insb
dec
imull
xorb
loop
lods
add
gs
xchg
xchg
cltd
dec
mov
or
lock
test
call
pop
lahf
fisubl
jno
cmpsl
mov
clc
pop
mov
pop
pop
xor
xchg
cmpb
insl
cmpsb
jae
rcrb
in
pop
and
jb
arpl
cs
sub
mov
notl
push
add
es
loope
lahf
fs
xchg
add
aaa
jl
jne
pop
out
inc
pop
sub
jo
aam
sub
filds
add
mov
xlat
nop
sarl
daa
movzwl
stos
stc
push
sbb
or
subb
pop
aam
call
or
dec
add
rolb
add
andl
push
daa
push
push
add
inc
jnp
sbbb
mov
addb
push
sub
and
or
xlat
fstl
popa
jmp
lea
cld
in
mov
add
shrb
and
and
insl
pop
lock
test
pop
lcall
test
lods
mov
sub
lods
das
mov
aas
pop
jl
sti
jmp
inc
dec
push
and
sub
add
movsl
mov
xchg
inc
test
shl
inc
pop
and
std
stos
nop
sub
dec
mov
js
outsb
jge
sub
add
orl
insl
push
cmp
lods
lahf
out
imul
cld
mov
pusha
cli
adc
jmp
xor
mov
in
mov
test
iret
add
pop
dec
das
cmpsl
dec
xchg
imul
sbb
lret
mov
xlat
jae
ss
cmp
test
aam
mov
shl
lock
addb
add
js
xchg
mov
and
mov
push
stos
dec
mov
jl
loopne
sbb
mov
das
fisubs
dec
inc
mov
dec
inc
and
inc
cmpsb
inc
cld
inc
out
cmp
inc
jnp
sahf
and
adc
mov
add
adc
fs
mov
or
jg
fcompl
adc
cld
mov
sbb
push
mov
jno
cmc
jnp
push
dec
jo
and
shrl
xor
sub
repz
inc
pop
pop
mov
inc
mov
rcl
inc
daa
mov
pop
outsb
jg
sub
pop
jl
and
add
inc
mov
dec
dec
aas
std
dec
mov
insl
dec
add
test
ja
mov
mov
lock
mov
mov
lret
mov
or
gs
sbb
xor
nop
cmp
stc
sub
mov
insl
inc
mov
cld
sbb
sbb
fsubs
sub
jl
sbb
bound
inc
cld
sbb
pop
xchg
sub
into
sub
loopne
loope
scas
mov
adc
sbb
adc
gs
out
xchg
lea
stos
mov
addl
and
loopne
xchg
and
out
nop
aas
aam
pop
pop
shll
sbb
out
and
stc
in
push
rolb
hlt
test
pop
insb
decl
enter
add
dec
scas
lea
mov
mov
mov
ret
mov
jns
punpcklbw
push
mov
loope
inc
dec
pop
and
shlb
lret
addb
out
xchg
sbb
hlt
inc
mov
mov
or
icebp
enter
mov
fnsave
rolb
dec
adcl
ret
outsl
mov
jl
push
jge
push
out
int3
and
loope
push
jg
je
cmp
gs
xchg
mov
push
fisttps
stos
add
sub
pop
pop
pop
sub
pusha
pusha
rorb
xor
mov
inc
jge
mov
cmp
cwtl
lods
fisubl
adc
ss
and
dec
sbb
jl
jnp
pop
mov
xor
int
pop
adc
shr
adc
cmp
jmp
addl
adc
bound
movsl
add
sbb
cmp
fnstcw
sub
rcrl
sub
orl
idivl
pop
inc
cwtl
test
cltd
mov
xchg
sbb
popa
insl
arpl
dec
mov
adc
adc
loop
mov
popf
pop
lds
pushl
dec
test
adc
xchg
and
push
jns
je
jmp
pop
pop
popa
xchg
flds
jb
add
in
outsl
enter
xchg
xor
jnp
loopne
cmp
push
addr16
das
aas
add
adc
cmc
icebp
and
xchg
push
cmpsb
mov
repnz
fsubrp
inc
mov
in
jo
lods
in
fcomip
and
add
add
xor
lea
icebp
sahf
icebp
mov
pusha
lea
add
jg
iret
icebp
fimull
mov
test
mov
sub
jl
cmpb
mov
aad
dec
and
call
mov
out
ljmp
push
mov
ds
or
mov
or
jecxz
in
and
xchg
or
xor
cmpsb
lods
sub
into
insl
add
imul
lods
xchg
push
das
or
cwtl
inc
cmp
add
or
fisttpl
int3
es
in
mov
sub
ljmp
add
in
push
popf
stos
das
cmp
das
js
xchg
and
out
or
mov
xor
jmp
js
sbb
mov
mov
sub
add
cs
push
lds
and
std
in
sbb
pop
jae
xchg
mov
mov
mov
dec
add
push
pop
inc
punpckhdq
cmpsl
add
aam
es
pop
js
aad
mov
enter
loop
test
jns
push
push
repz
jmp
addb
int3
jecxz
xor
lock
stc
popa
call
inc
adc
ret
enter
cmp
and
adc
mov
dec
icebp
scas
cmp
push
push
sub
mov
add
sub
lret
mov
loopne
sbb
xor
mov
in
aam
aad
ret
sbb
jns
lods
cmp
cmp
stos
mov
sub
xchg
in
mov
add
mov
outsb
out
cs
hlt
and
sti
xchg
in
test
subb
sub
push
xorb
mov
fwait
sti
shll
pop
sbb
inc
les
rcll
insb
or
sbb
out
js
jae
repz
lahf
leave
inc
push
add
mov
movsl
pop
cli
pop
enter
les
imul
jecxz
aaa
ss
in
cmp
sub
dec
xor
or
and
adc
rorb
mov
lea
out
pop
sub
sti
mov
loope
mov
aaa
lock
xor
jno
lcall
jecxz
arpl
pop
stos
icebp
scas
or
and
pop
mov
arpl
fidivl
dec
pop
mov
mov
daa
ss
int
or
cmpl
mov
daa
jg
clc
aaa
adc
add
pop
push
mov
scas
add
sub
sub
inc
and
sarl
mov
pushf
icebp
push
cmc
shrb
scas
cmp
sbb
inc
sub
roll
adc
and
cmpb
shrl
jecxz
dec
adc
pop
mov
je
cmpsb
sub
rcrl
sbb
scas
lods
icebp
cli
ss
fldl
stos
mov
fstps
push
xor
lret
sub
mov
jae
xor
mov
sbb
clc
pop
std
ja
orb
pushf
push
inc
testl
pop
pop
and
and
xor
lea
test
cmpb
xor
cmp
mov
adcb
bound
add
push
test
dec
call
jmp
xchg
sub
xor
cmp
add
jg
ret
xor
mov
mov
lds
or
adc
inc
cmp
lds
test
push
gs
fadd
call
jns
sub
pop
movsl
jl
cmp
jle
or
fsubr
shll
icebp
pop
pusha
add
or
std
inc
cmp
loope
movl
pushf
adc
in
out
mov
aaa
test
jmp
test
push
fcom
lods
loopne
call
es
push
notb
mov
sahf
add
jne
out
dec
insl
add
and
xor
jbe
jo
sub
test
addl
bound
jp
les
std
or
pushf
test
mov
push
or
adc
nop
jno
jge
test
scas
lahf
outsb
jae
xlat
orl
outsb
pop
cs
jo
and
xchg
das
loop
movsl
sbb
push
push
xchg
adcl
push
push
mov
leave
mov
xchg
enter
imul
lds
xor
jl
andb
dec
cmc
orb
dec
sbb
sub
sbb
jae
sub
pop
xor
call
mov
leave
rol
ret
mov
cmpb
inc
ret
dec
hlt
lea
inc
push
dec
loopne
lock
ret
mov
movsb
mov
call
mov
cmc
xchg
outsl
cld
sbb
out
aad
sbb
outsl
sub
addb
into
ja
mov
sbb
daa
shll
dec
testb
nop
lret
daa
call
add
pop
jmp
out
mov
dec
mov
fs
jecxz
push
push
adc
push
jp
orb
cmp
push
mov
std
push
fbstp
pushf
jo
lock
dec
push
fnsave
je
stos
cmp
scas
stos
scas
clc
mov
mov
mov
rcll
sbbb
js
push
push
les
cltd
xchg
jbe
inc
loop
dec
push
sbb
rolb
mov
fildl
or
frstor
rol
es
clc
gs
push
mov
push
fsubrs
dec
mov
inc
sub
roll
enter
sub
push
add
rorb
jb
mov
fidivrl
fs
xor
inc
sub
ss
adc
pop
xor
mov
test
rol
or
adc
cmp
add
outsb
push
sub
jne
ret
pop
clc
ja
mov
popa
inc
lcall
test
into
rorb
lahf
and
les
sub
lret
add
pop
jecxz
xchg
and
div
add
dec
push
into
mov
sti
mov
and
imul
outsb
inc
stos
lds
pop
cmp
dec
cld
pop
push
cmp
dec
js
jecxz
mov
mov
enter
loopne
and
sbb
in
dec
fstl
mov
jno
or
fcmovu
in
pop
mov
cmp
inc
fstpt
fidivrs
loopne
or
mov
out
das
cmp
push
adc
fisttpl
imul
sbbl
cmp
jmp
and
call
fstpl
or
and
cmp
dec
popf
in
inc
inc
icebp
jp
shlb
jae
push
push
mov
xor
inc
sbbl
mov
mov
sbb
mov
and
xchg
sbb
adc
fbld
or
fldcw
cli
add
stos
push
sarb
dec
sub
rclb
inc
push
imul
xor
add
sbb
cmp
xchg
inc
pop
clc
pop
mov
dec
push
xor
adc
pop
inc
push
xchg
mov
pop
push
lods
bound
imul
xor
sbb
aaa
addl
pop
pop
inc
push
loope
rcrb
add
lds
lahf
rol
mov
pop
sbb
fstpt
ret
icebp
push
cmc
pop
sbb
cltd
outsb
loopne
aaa
into
xchg
enter
sub
dec
inc
mov
test
pop
cwtl
jno
lock
repnz
and
and
sbb
fs
xchg
das
sahf
subb
jecxz
aad
inc
cmp
test
mov
test
pop
sti
insl
in
xchg
iret
iret
pop
daa
je
rorb
inc
xchg
rol
mov
imulb
jecxz
inc
in
insb
iret
mov
test
xchg
inc
and
adc
fcoms
adc
adc
pop
push
add
lock
pop
jbe
mov
push
movsl
arpl
mov
shr
pop
inc
xor
add
movb
push
push
pop
pop
stos
ja
rolb
mov
inc
sub
aad
in
cli
and
xchg
ljmp
adc
and
jbe
scas
pop
cmpsb
pop
adc
and
test
fimull
cmp
fimuls
pop
push
mov
dec
add
je
mov
fs
data16
fistpl
sub
inc
mov
cltd
test
lret
xchg
mov
lcall
call
ja
stc
cmpb
xchg
push
dec
mov
sbb
repz
mov
pop
xchg
cmpsb
aas
mov
jns
cmpsb
test
mov
imul
jecxz
jne
jl
cmp
sub
mov
mov
xlat
stos
divl
pusha
sub
sbb
cli
inc
mov
add
arpl
push
dec
pop
sub
jno
adc
rolb
addl
sub
mov
and
mov
sub
movsl
or
mov
and
adc
xor
int
jbe
adc
push
and
fwait
and
and
xor
mov
add
outsb
and
or
iret
adc
push
pop
adc
and
inc
dec
addb
xor
andl
or
lods
mov
aaa
mov
outsb
sub
pop
or
jns
jo
dec
push
iret
dec
and
mov
and
aam
jmp
push
add
jns
push
popa
dec
push
mov
insl
sti
das
loop
gs
jne
js
or
or
jno
dec
dec
dec
dec
push
inc
inc
dec
push
dec
dec
dec
push
imul
insb
insb
push
inc
fcmovnu
outsl
arpl
inc
in
pop
xor
push
xchg
pop
xchg
mov
imul
inc
outsb
imul
xchg
jnp
inc
inc
push
dec
pop
popa
stos
jle
and
ret
and
or
cs
mov
ja
push
xor
xor
jb
fdivr
xor
or
jae
jmp
or
jae
shlb
dec
outsb
push
push
jo
push
push
outsl
inc
inc
and
pusha
jnp
mov
lcall
jl
mov
jmp
subb
pop
jp
mov
imul
fs
pop
cmp
add
mov
mov
and
mov
mov
aaa
xor
xor
push
push
insb
ret
faddl
or
pop
add
fwait
imul
rolb
ret
out
push
adc
addl
mov
push
xchg
push
cmp
mov
lods
cmp
add
add
xchg
jge
dec
je
inc
mov
jo
xor
xchg
add
push
mov
test
mov
add
arpl
xor
stos
push
popa
dec
push
mov
dec
mov
insl
scas
push
xorb
push
and
imul
rolb
mov
sti
add
jmp
pop
cmp
sbb
clc
add
aad
add
lods
adc
dec
subl
and
mov
test
mov
stos
inc
inc
add
out
cwtl
lcall
fidivs
or
dec
inc
xor
fwait
ret
xor
pop
add
jbe
jae
insl
lods
jp
popa
add
sbb
out
aas
push
subb
insl
push
pop
pop
mov
push
mov
sahf
ret
arpl
jge
wrmsr
or
sub
les
xor
mov
mov
sub
popf
ss
test
xor
jp
adc
iret
cmp
mov
push
les
dec
lock
xor
cmp
orl
push
inc
insb
inc
jnp
int
aas
int
mov
mov
xchg
jg
enter
out
xor
sbb
subl
roll
inc
dec
pop
dec
push
dec
push
push
dec
dec
push
inc
xor
xor
je
mov
jg
loopne
bound
dec
dec
add
sbb
sbb
xchg
add
adc
add
adc
inc
inc
add
add
add
fs
icebp
ljmp
or
je
adc
insb
imul
pop
decl
inc
ret
shll
cs
imul
adc
into
pop
imul
filds
aad
sbb
hlt
dec
sub
xchg
mov
imul
jg
shl
imul
mov
sub
fcoml
sbb
mov
mov
add
mov
sbb
sbb
mov
mov
and
or
inc
adc
pop
and
imul
jne
ljmp
xor
imul
out
sbb
add
out
imul
ret
fistpl
adc
adc
aaa
jl
imul
add
call
sub
ljmp
mov
and
push
xor
lods
movsl
lret
arpl
mov
fbstp
xchg
imul
push
cli
iret
jb
sub
or
inc
adc
or
adc
adc
push
push
pop
jo
add
mov
or
outsl
mov
sti
pop
popa
rol
inc
push
xchg
out
inc
int3
nop
mov
call
mov
stos
and
imul
xchg
ja
sbb
outsl
pop
mov
imul
imul
and
jmp
add
je
nop
fwait
popa
jle
cmp
sub
mov
mov
inc
sub
xor
jne
or
bound
and
lds
scas
ds
push
pop
ljmp
xchg
lods
add
jb
add
leave
inc
mov
call
fisubrl
adc
mov
push
lock
filds
inc
mov
cld
inc
xor
sub
imul
lea
adc
fadds
gs
xchg
and
imul
add
daa
sti
mov
jge
adc
outsl
in
imul
mov
sbb
imul
daa
dec
dec
out
add
sub
pop
add
lret
mov
sub
push
push
icebp
add
mov
push
or
xor
or
inc
dec
add
lea
pop
cmc
cmc
mov
stos
pop
or
push
add
imul
lock
jmp
push
lret
push
iret
imul
imul
sbb
inc
daa
xchg
lahf
mov
sbb
cmpsb
out
adc
int
loope
pop
push
mov
add
or
jg
imul
push
pop
dec
bound
in
mov
repnz
mov
or
jne
adc
mov
or
mov
add
loop
jecxz
aaa
sbb
and
mov
nop
pop
add
es
xor
xchg
movsl
fimuls
ja
mov
jbe
out
rolb
in
std
in
mov
inc
loopne
xor
or
mov
andb
mov
push
cmpsb
dec
decl
mov
push
cli
jbe
mov
push
or
sub
sub
insl
inc
mov
jb
pop
clc
or
pop
or
xchg
fidivs
inc
mov
mov
dec
adc
pop
adc
fildll
rorb
jmp
add
jg
inc
rcrb
mov
mov
inc
xchg
stos
or
nop
jmp
push
jno
ficoms
mov
dec
mov
cmp
pop
sahf
inc
ret
inc
loope
lods
imul
mov
jo
mov
fnstcw
add
outsl
sub
scas
sub
imulb
stos
add
pop
push
push
fmull
repnz
fimull
stos
lret
das
stos
pop
push
pop
mov
das
ret
stc
nop
icebp
mov
sub
push
rcrl
sbb
gs
movsb
mov
mov
sub
or
inc
fidivrl
fidivl
andb
mov
fcomi
insl
jecxz
rclb
push
lods
loope
lret
sbb
cmc
scas
cmp
ljmp
xchg
pop
jmp
mov
or
ss
and
fildl
cmpsb
xchg
insl
jecxz
cwtl
cmpb
fistpll
aad
inc
or
mov
es
jnp
cmp
pop
hlt
fistpll
pop
lret
sbb
cmpsb
and
sub
test
add
lods
adc
sub
jecxz
cmc
adc
mov
mov
out
in
mov
lods
inc
push
clc
fbstp
and
imul
je
push
imul
mov
fsts
sbb
inc
icebp
aam
adc
sahf
xor
add
outsb
pop
clc
jb
daa
test
ljmp
je
sub
icebp
aam
xor
push
ror
mov
clc
lahf
fiaddl
add
mov
cmp
in
ja
ja
lea
jle
and
in
jge
mov
imul
adc
cmpsb
add
loop
decl
add
sbbb
sbb
orl
sbb
sbb
pop
pop
push
frstor
ret
adc
lcall
jbe
lock
hlt
mov
cmp
mov
pop
pushf
pop
xor
sbb
cmp
mov
sbb
adc
cmpsb
or
push
rcrb
pop
fldt
push
or
mov
les
push
ficomps
pop
fistpll
xchg
dec
mov
loopnew
movsb
cmp
mov
mov
shrb
cmp
xchg
pushl
pop
sbb
add
popf
or
and
inc
or
mov
popl
stc
or
fimull
lock
mov
shrb
xchg
fidivrs
xor
push
hlt
int3
and
aam
lcall
push
and
jmp
inc
xor
lcall
js
cmc
repnz
notl
push
mov
sahf
lret
loopne
out
inc
orb
xlat
mov
ret
and
mov
jnp
lahf
jne
out
pop
jle
sub
add
add
dec
sub
add
ljmp
lods
dec
or
pop
lcall
aaa
mov
mov
and
mov
imul
shl
loopne
cmp
mov
ret
fwait
or
mov
imul
mov
repz
sub
dec
pop
lret
push
js
or
popf
pop
pop
clc
fnstcw
sti
xor
inc
mov
mov
cmp
mov
xchg
ljmp
roll
es
fbstp
fprem
jge
inc
sub
fldenv
pop
clc
jb
mov
jb
sbb
ja
mov
cs
pusha
dec
pop
mov
sub
hlt
aaa
inc
addb
loopne
sbb
add
sub
addb
cli
jbe
mov
and
inc
dec
out
bound
call
pop
subb
mov
mov
sarb
mov
cmp
divb
movsb
or
loop
fldl
leave
int3
imull
mov
cmp
adc
add
sbb
outsb
or
loope
pushf
mov
add
dec
xchg
adc
ds
pusha
jg
jecxz
cmp
clc
sub
xchg
adc
mov
add
sbb
xor
test
mov
jle
mov
jmp
mov
aas
add
inc
and
insl
fld
in
call
push
je
cwtl
sti
cmp
mov
dec
and
jg
popa
aam
mov
push
cmpsb
nop
push
jne
ret
push
int
movsl
leave
fmul
adc
test
sbb
mov
lahf
push
adc
test
sub
xor
pop
imulb
mov
mov
shrb
testb
dec
sub
sti
xchg
add
push
pop
push
int
negl
sub
and
repnz
jecxz
sbbl
das
push
push
mov
sbb
inc
out
jo
sbb
pop
pop
adc
das
aam
or
xor
mov
xorb
jae
mov
push
addb
dec
data16
dec
rcrl
jg
mov
les
inc
sarl
jg
mov
js
movl
mov
jge
pop
adc
nop
inc
mov
sbb
cmpl
ss
adc
stc
xor
pop
mov
cmp
dec
add
jle
mov
movsl
or
jecxz
cmp
pop
add
push
add
push
mov
sbb
scas
cli
nop
pop
adc
cmp
loop
std
pop
ja
inc
jns
ficomps
cmc
mov
std
jge
fistl
pop
mov
es
stc
test
jp
pop
out
sub
sbb
cmpsb
popf
mov
mov
lcall
cmp
cmp
loop
mov
xor
mov
aas
sbb
and
sbb
mov
xlat
push
xchg
ljmp
fwait
sbb
call
pop
aad
mov
insl
sbb
or
mov
mov
xor
pop
ret
xchg
clc
insl
pop
add
push
sahf
insl
or
cmp
fadd
mov
or
dec
push
mov
js
jbe
push
pop
repnz
iret
rclb
xchg
mov
lret
cmc
outsl
mov
or
adc
sub
addl
pop
mov
sbb
and
imulb
dec
dec
jl
cmpsl
add
loope
jbe
mov
jmp
stc
push
mov
outsl
pop
test
ds
xor
mov
fbstp
add
daa
test
jmp
mov
or
ret
mov
dec
sahf
add
aad
push
sbb
outsl
mov
inc
pop
scas
int3
cmp
sub
and
insb
loope
adc
data16
mov
dec
pop
push
mov
out
mov
loope
fisttpl
dec
mov
mov
lahf
cmp
push
jb
outsb
fcomi
popa
cltd
push
jmp
aas
mov
inc
gs
imul
and
adcl
ror
pusha
sub
cmpsb
sub
mov
loope
mov
add
mov
outsb
das
mov
and
jae
test
push
push
in
pop
mov
push
inc
pop
pop
fsubr
mov
int3
cmp
nop
sti
lret
aad
adc
sub
jge
sbb
adc
je
stc
cmp
xchg
pop
sub
fstpt
fistpll
xchg
add
aaa
jecxz
aaa
out
lcall
inc
aas
in
sbbb
jmp
pmuludq
mov
dec
insl
call
sbb
hlt
repz
sbb
out
mov
and
dec
fstpt
or
lret
sbb
test
adc
fstps
mov
jg
or
xor
js
addr16
sub
xor
mov
arpl
push
ljmp
mov
jp
notb
dec
adcb
xchg
dec
or
pop
rcr
or
pusha
mov
add
xchg
es
aas
fsubrs
mov
cmp
repnz
mov
aad
nop
and
orl
insb
test
inc
sbb
or
push
or
inc
mov
arpl
and
adc
adc
mov
jle
lcall
mov
cmc
mov
fildl
lds
repz
dec
fiadds
inc
pop
mov
dec
xor
testb
jo
fimuls
add
mov
scas
pop
pop
call
mov
in
push
adc
iret
call
inc
inc
test
xor
jo
js
mov
in
fisttps
and
xchg
outsl
cwtl
pop
xchg
divl
sbb
cs
out
in
inc
push
mov
inc
pushf
add
xor
mov
cmpl
dec
mov
insl
fstpt
push
sub
and
or
orb
push
mov
mov
popf
inc
ret
in
pop
jmp
ret
jmp
xchg
sbb
sar
and
imul
inc
outsl
aaa
mov
inc
add
mov
popf
into
and
pusha
mov
push
jmp
nop
jecxz
mov
ret
fdivrp
push
adcl
mov
inc
call
xor
shll
mov
addr16
sbb
add
in
and
addr16
mov
insl
mov
fcmovb
cmp
fs
mov
mov
sub
cmpsb
mov
cmpsb
arpl
pop
push
sub
ds
and
lock
add
inc
xchg
outsl
dec
into
mov
gs
roll
aaa
rorl
cmpsl
inc
popf
mov
jg
movsb
inc
hlt
cmp
into
cmp
or
lods
cltd
lods
shl
aad
insb
mov
or
mov
dec
sbbb
jge
cmpsl
add
cwtl
clc
bound
xor
xchg
fisttpl
cmp
out
fucomi
fs
outsl
pop
mov
addl
xchg
sub
jle,pn
gs
movsb
mov
lcall
mov
cwtl
aad
std
sub
pushf
xchg
int3
push
stos
mov
push
pop
adc
scas
fisubrs
push
jl
std
and
imul
mov
mov
sbb
fcmovnu
pop
das
cmc
test
cmp
mov
clc
pop
jge
je
stc
xor
gs
andb
add
jmp
adc
mov
imul
push
cs
jge
arpl
imul
movb
cmc
test
and
icebp
data16
pop
cmc
fadds
call
adc
pop
add
arpl
outsl
std
test
or
mov
loope
test
repz
xor
add
add
mul
add
mov
je
fildl
xchg
dec
mov
mov
and
les
and
or
je
pop
aad
fcmovb
out
mov
pushl
pop
sbb
cmp
and
inc
outsl
pop
and
sub
inc
dec
das
or
repz
icebp
xchg
mov
ret
ja
test
push
ss
outsb
inc
and
or
lcall
xlat
aaa
sub
repz
testb
push
mov
sar
cmp
and
ss
insl
stos
lds
ds
mov
sbb
lock
js
ljmp
arpl
pop
std
inc
movsl
push
xchg
push
movsl
or
js
xchg
popfw
or
scas
inc
arpl
push
mov
jecxz
cmp
inc
add
outsb
rorb
sbb
inc
insl
jg
cmp
das
cmp
movsb
mov
rclb
adc
fistpll
stos
icebp
and
ret
cwtl
xor
jmp
or
aaa
repnz
ja
outsb
mov
push
lds
lret
mov
fst
into
in
imul
cmp
das
insb
aaa
cs
test
pop
push
stos
and
sti
or
insl
pop
mov
xchg
leave
mov
nop
or
imul
add
jo
jae
fucomi
pop
test
sub
testl
mov
push
push
and
mov
daa
or
sti
cmp
cld
mov
or
sbb
sbb
xchg
pop
movsl
mov
test
cmp
lret
jmp
mov
in
icebp
mov
pushf
mov
cmpl
in
data16
insb
mov
mov
sarb
cs
sub
push
push
sbb
push
xor
sarb
dec
js
mov
xorb
lods
dec
mov
cmc
jbe
aad
out
aaa
mov
push
pop
mov
or
fucomi
add
rcr
mov
add
shl
mov
loope
adc
inc
das
xor
sbb
push
sbb
jp
call
dec
adc
mov
push
mov
mov
push
xlat
lea
or
jl
cli
out
ja
enter
lcall
nop
xor
jle
mov
jl
and
push
testl
in
ja
adc
loope
mov
inc
or
cmp
or
sub
adc
xlat
test
inc
jmp
roll
jl
pop
rcrb
pop
mov
imul
cs
arpl
and
insb
lods
stos
sbb
enter
adc
or
loopne
call
sbb
xchg
push
inc
mov
js
es
xlat
or
or
inc
fisubs
xchg
fldl
add
push
jne
sbb
lea
les
dec
outsl
test
xchg
inc
addr16
adc
lods
xor
icebp
or
adc
fs
ds
mov
lcall
outsl
or
inc
push
jnp
aaa
jecxz
les
out
sbb
es
popa
pop
pop
hlt
test
pusha
mov
out
add
push
outsb
fdivrs
sub
push
fstl
ja
dec
jle
and
pop
sub
jmp
lods
or
xor
adc
jge
ljmp
test
aaa
xchg
mov
cs
popa
cmpsl
inc
orl
inc
in
test
cld
in
fistps
cwtl
adc
push
pop
mov
mov
and
mov
loope
mov
roll
int
popa
mov
mov
push
jmp
std
mov
push
xor
nop
cmp
std
mov
push
insb
push
inc
pop
sub
dec
sub
cs
pop
mov
popf
pop
add
ficomps
ret
push
dec
or
xorb
jmp
fisttpl
or
cmp
ret
cwtl
push
out
adc
sub
inc
push
jmp
adc
add
pop
jnp
add
sub
sbb
fcompl
cmp
in
addr16
outsl
call
push
inc
fists
or
inc
repnz
xor
fdivrl
test
push
insl
repz
mov
mov
lock
xchg
and
jns
push
xchg
inc
xchg
or
jns
scas
aaa
je
cmc
cmp
xchg
std
pop
inc
sub
or
push
cmpb
aaa
std
test
shlb
scas
fiaddl
mov
scas
push
and
or
or
mov
adc
imul
hlt
or
inc
jns
movsl
xor
aas
std
xchg
adc
and
mov
pop
xorl
or
pop
fwait
loopne
adc
dec
mov
dec
xor
in
imulb
xchg
mov
stos
dec
and
test
sahf
push
mov
sti
pop
pop
mov
loope
push
lods
xchg
push
mov
in
fstpl
shr
jecxz
and
lds
lds
and
ffree
es
hlt
int
das
lods
test
add
adc
pop
mov
loopne
call
pop
and
data16
mov
fcoml
outsl
out
leave
clc
push
imul
popf
hlt
ljmp
iret
adc
sub
aad
sbb
and
inc
fnstenvs
jo
jo
push
incb
cltd
leave
inc
aas
and
jns
and
mov
xlat
outsb
bound
or
outsb
fisubl
clc
popa
jbe
pop
push
out
pop
roll
xchg
or
inc
pop
or
mov
mov
xchg
mov
aad
sbb
jnp
mov
lock
xor
lcall
cltd
sub
loopne
lahf
adc
test
adc
clc
loopne
lcall
shrb
das
idivl
sbb
and
push
sbb
std
jno
fsubrl
mov
cwtl
cmpsb
dec
add
add
aam
jg
or
std
jne
xchg
pop
fistpl
mov
push
pop
and
fiadds
test
jp
lahf
mov
inc
jb
aaa
jno
lret
in
std
xor
cmc
or
jge
test
mov
lcall
adc
jge
adc
ret
cmp
std
push
std
cmpsb
dec
repz
lret
cmpsl
lahf
xchg
mov
popa
popa
push
fbstp
scas
sub
test
mov
xchg
or
clc
ja
es
lds
fnstsw
clc
jo
insl
mov
fcomi
dec
and
shrl
cmpsb
jg
data16
and
dec
aaa
jb
pop
out
call
jl
pop
sub
je
mov
nopl
pop
in
insl
fdivr
das
gs
and
imul
mov
pop
mov
inc
and
dec
and
outsl
xchg
sub
and
push
mov
imul
outsl
mov
ret
les
xchg
mov
stos
in
movsb
lods
into
push
test
adc
fdivrs
ja
scas
or
xor
subb
push
push
je
sub
push
cmp
hlt
out
add
dec
aam
movsb
test
loope
sbb
mov
mov
mov
dec
jge
cmpb
movsl
fwait
lea
movw
xchg
popa
fidivrl
mov
sbb
or
add
and
sbb
aad
test
in
xor
scas
cltd
addr16
push
mov
out
push
dec
mov
hlt
stos
cwtl
cmp
std
lcall
xor
adc
xchg
xchg
or
add
pop
bound
sbb
jge
adc
jno
jle
pop
mov
sbb
push
push
and
movsb
lods
pop
adc
out
das
mov
xor
stos
dec
and
cli
fisttpll
mov
sbb
xchg
cld
and
shlb
add
dec
ljmp
or
or
loope
insb
jae
dec
loope
mov
aaa
push
lcall
add
mov
mov
in
and
loope
jo
mov
faddl
pop
push
dec
push
das
insb
mov
movsl
inc
mov
out
mov
pop
dec
fcmovnbe
dec
push
sub
ret
jbe
ret
ljmp
add
jecxz
sbb
and
add
andb
pop
arpl
int
pcmpgtd
js
hlt
pop
xchg
adc
push
inc
out
mov
out
out
aad
fdivrs
fnstsw
loopne
jnp
aas
addl
ljmp
sbb
aaa
xlat
pop
fstpl
and
hlt
mov
cwtl
xor
or
out
sbb
mov
sbb
es
or
push
movsl
ljmp
dec
cmp
ja
jb
in
ja
and
xor
iret
ds
mov
lcall
mov
shrl
or
stc
dec
cmpsl
add
dec
push
enter
push
lret
loop
pop
enter
add
repnz
pop
jo
out
aaa
cmc
mov
popf
sbb
ret
inc
mov
push
outsl
std
icebp
js
mov
pop
inc
enter
insl
outsb
push
mov
in
aas
cli
in
popl
test
out
mov
adc
mov
fisubs
ljmp
std
or
pop
subl
push
lock
cmp
pusha
fstps
mov
decb
mov
jp
xchg
mov
add
push
jmp
outsb
jl
sti
cmpb
out
sbb
jbe
scas
cmpb
or
sysret
cwtl
js
icebp
out
mov
and
xchg
cmc
and
cmp
mov
sar
pop
or
xchg
jne
pop
insb
xor
ljmp
into
or
fldt
cmc
orl
and
mov
lods
lock
fs
add
loopne
stos
jge
insb
push
mov
mov
aam
lods
mov
sub
sub
xor
jnp
shrl
fdivs
stc
or
adc
mov
xchg
inc
pop
mov
mov
shll
aam
jle
jo
mov
cmp
popf
inc
aas
add
lods
mov
leave
mov
test
push
mov
push
mov
jge
insb
push
addr16
push
pop
cmpb
loopne
loop
add
jne
pop
std
cmpsb
sbb
incl
lahf
adc
fwait
pop
hlt
pop
fwait
repz
ret
adc
outsb
inc
add
sarl
jmp
or
and
pop
mov
sub
les
arpl
fisttpll
sarb
pop
nop
in
test
sbb
lods
cmp
scas
or
imulb
in
and
orb
inc
insb
movsb
add
xor
mov
sub
cs
in
lods
xchg
aaa
add
cltd
imul
out
push
movl
pop
pop
xor
mov
cmp
outsl
dec
mov
push
push
lret
mov
mov
loope
xlat
and
lahf
leave
bound
mov
cmp
pop
cmpsb
scas
adc
adc
insl
outsl
sbb
or
rcrb
stos
in
push
dec
das
cwtl
outsb
mov
lea
or
pop
ds
incl
mov
rorb
aad
push
cwtl
add
pop
jecxz
rcrb
inc
fistpll
xorl
mov
fldt
sub
out
push
or
fbstp
mov
mov
push
sbb
fiaddl
and
adc
cli
das
lock
movsb
xor
leave
in
sbb
repnz
loope
lock
cmc
cmc
mov
nop
sub
insb
xchg
jecxz
sti
call
fisubrs
mov
test
ljmp
push
push
hlt
shll
popl
adcb
loope
incl
rol
adc
sarl
repnz
inc
ss
inc
mov
rcrb
jbe
adc
gs
pop
loopne
aas
adc
leave
aad
out
cmpl
xor
push
mov
popa
add
inc
mov
sbb
mov
add
or
mov
xchg
jp
add
and
lret
mov
cmpsb
mov
test
sbb
or
pop
mov
push
repnz
call
repz
cli
adc
dec
pop
push
aam
out
push
sbb
push
das
inc
dec
sbb
push
adc
dec
popa
repz
pop
cmp
lea
test
adc
and
ss
rcl
inc
or
inc
scas
bound
loop
push
out
lcall
xor
push
xchg
std
inc
mov
lcall
mov
or
loop
test
mov
jl
xlat
psubd
scas
xchg
aaa
pushf
jo
mov
clc
popf
ret
ja
xor
pop
mov
or
inc
xchg
cwtl
xchg
mov
ds
int
into
mov
mov
dec
xchg
subb
adc
and
adcl
shlb
mov
jg
fcomi
inc
dec
daa
mov
and
dec
popf
push
es
jp
pop
in
shrl
sbb
stos
dec
js
test
fbstp
addl
push
mov
dec
push
sarl
xorb
or
in
dec
jecxz
shll
xorl
dec
aaa
outsb
movsl
pop
fscale
push
lds
das
pop
std
lea
push
mov
testb
nop
fsubrl
popf
and
fldcw
push
sub
add
sub
mov
and
cmp
and
mov
pop
xlat
out
pop
lods
inc
adc
loop
dec
or
insl
push
mov
adc
sub
clc
dec
jge
xchg
jl
stos
dec
adc
cmp
dec
les
les
or
aad
aaa
inc
scas
in
jecxz
mov
jp
sbb
xor
insb
je
insb
sub
pushf
add
ja
ljmp
sbb
mov
pop
lcall
cwtl
jmp
pop
jo
inc
add
mov
frstor
aad
mov
test
fdivrs
sub
jne
cmpsb
cli
lret
aaa
add
ds
and
ret
mov
and
testl
les
sbb
push
leave
pop
push
not
aam
and
movsl
clc
mov
mov
jle
das
cld
pop
call
add
add
sbb
mov
dec
cwtl
add
xchg
push
lea
loopne
mov
pushl
xor
inc
fs
jns
mov
cld
inc
int
jg
dec
jg
or
adcb
jp
or
loop
inc
xchg
mov
sub
or
bound
push
or
push
inc
pop
out
push
loope
fcmovnu
jg
or
pop
lea
stos
or
roll
inc
mov
fistl
ficompl
fisttps
int3
jg
pop
dec
rcl
jp
xchg
add
jne
mov
test
fwait
rorl
popf
xor
repz
sahf
sahf
mov
pop
aad
jbe
inc
arpl
xchg
xchg
loop
cmpsl
xchg
mov
add
fdivrs
into
inc
adc
cmp
add
pop
mov
dec
or
dec
sbbl
out
dec
inc
imul
jge
inc
and
adc
loopne
push
out
mov
inc
fldt
stos
adc
sarb
and
or
pop
dec
jg
push
nop
dec
cmpsb
dec
xor
pop
xlat
push
cli
fwait
stc
jae
jecxz
mov
push
ss
mov
jne
push
cmovbe
or
dec
outsl
cld
out
or
addb
adc
imul
push
sbb
iret
int3
inc
cld
adc
int3
mov
push
in
ss
push
out
vpcmpeqw
and
push
ja
cmpsl
enter
call
mov
mov
cwtl
cmp
pop
push
dec
mov
adc
movsl
add
sub
rol
add
xchg
or
lret
mov
shlb
push
stos
jl
dec
mov
fldenv
repnz
subb
cli
cwtl
adc
in
popf
ja
jb
inc
xchg
in
dec
shr
pop
sbb
into
mov
sbb
sbbb
add
outsl
xchg
mov
adc
add
out
adc
lret
adc
rol
pop
mov
pop
pop
test
cwtl
rorl
mov
or
xor
add
push
sub
ret
mov
sti
arpl
in
stos
ds
inc
xlat
call
sbb
fwait
dec
insl
sarb
push
cmp
and
add
push
mov
xchg
cmp
loopne
sub
add
jle
aam
mov
push
push
cld
xor
inc
dec
cmpl
adc
insl
lret
lock
mov
push
inc
clc
out
in
push
xchg
fcmovnu
in
add
jg
push
cltd
xor
cld
nop
and
xchg
dec
fsubrl
and
fs
inc
aam
mov
add
ljmp
sub
add
cmp
stos
fisubrl
sbb
bound
inc
mov
mov
fs
loop
mov
push
fwait
ds
jnp
mov
jle
aas
inc
jbe
aad
jmp
mov
add
xchg
sub
stos
enter
je
ret
dec
xor
aam
out
int3
mov
or
scas
es
mov
adc
mov
pop
jl
imul
movsl
adc
and
push
xchg
sbb
rolb
mov
mov
pop
push
pop
mov
mov
das
mov
jle
shll
push
in
ds
mov
shrb
lods
lods
dec
cmp
dec
push
fsubs
ror
inc
mov
xchg
mov
xchg
jmp
push
sbb
add
cmp
jne
pop
popf
fucomi
add
rorb
cli
jmp
or
jmp
pop
leave
push
xlat
mov
mov
mov
call
inc
enter
inc
arpl
mov
fildll
mov
ret
loopne
adc
push
out
push
mov
test
cmp
fisttpll
mov
sti
or
jmp
and
inc
pop
xchg
cld
stos
adc
jbe
mov
jp
lods
test
cmp
xlat
jge
decl
icebp
inc
iret
ss
jb
jmp
arpl
clc
fldt
xchg
outsb
es
inc
leave
sbb
or
dec
negl
xchg
mov
xor
xchg
loopne
divb
inc
pop
sbb
into
call
ljmp
cmp
int3
pop
iret
lret
ret
nop
xorl
pop
repz
dec
or
out
fsubrs
jg
pop
adc
fwait
enter
out
mov
lret
adc
jg
scas
aaa
out
ss
jmp
inc
lods
out
fs
mov
add
data16
dec
pop
jno
scas
push
pop
jecxz
scas
test
mov
ss
outsl
jge
xchg
sbb
fldl
mov
jp
or
pop
jl
add
bound
adc
andb
push
push
inc
sti
add
inc
orl
repz
or
lcall
cmc
shrb
dec
add
adc
mov
fsubr
mov
into
cwtl
jo
mov
imul
mov
pop
adc
lahf
aad
std
mov
mov
lret
mov
dec
xchg
call
pusha
jno
dec
aad
push
addr16
inc
mov
inc
into
aam
outsl
out
inc
fisttpll
mov
test
daa
and
lock
sub
sbb
inc
mov
enter
filds
pop
dec
xchg
call
ja
jns
mov
inc
dec
jmp
xor
das
movsl
fdivr
xchg
cmp
or
mov
stos
jns
and
mov
jae
psllw
pop
sub
test
jno
ss
xor
in
cmp
mov
and
ret
pop
test
xorb
mov
sub
dec
lock
icebp
negb
mov
dec
mov
and
xor
mov
jae
lret
adc
sbb
jl
jne
xor
inc
xor
push
push
jle
mov
add
insb
rolb
pop
js
cmp
adc
cs
fcmovb
inc
and
xchg
sahf
xchg
mov
mov
dec
inc
ljmp
dec
mov
adc
push
adc
addb
sarb
imul
clc
es
outsb
mov
in
icebp
test
jbe
xor
sbb
xor
dec
enter
sub
mov
mov
mov
pusha
and
jle
jle
popl
adc
mov
test
pop
fidivrs
cld
mov
cmpb
and
mov
mov
jbe,pn
sbb
xor
sub
jecxz
sbb
lea
testb
call
rolb
inc
add
cmpsb
mov
sub
nop
pop
iret
sbb
lret
sbb
das
cld
adc
test
dec
js
cli
or
lods
ss
clc
fsts
and
lds
xchg
pushf
mov
mov
outsb
dec
mov
pop
push
fldl
mov
fistps
test
inc
mov
and
outsl
mov
testb
pop
mov
jmp
aaa
insb
mov
mov
pop
sub
cs
add
cmc
or
xlat
and
inc
lods
lea
js
or
ds
adc
push
sbb
je
lret
hlt
add
push
inc
inc
mov
hlt
int
sbb
jl
test
ret
push
fisttpll
mov
rcll
mov
add
jle
shll
fcompl
fiadds
shrl
adc
outsl
dec
pop
ret
xchg
push
dec
es
add
mov
mov
outsl
iret
and
popf
das
fiadds
cld
lcall
dec
dec
das
cltd
or
mov
and
movsb
fdivl
test
jns
adc
sub
shrb
sar
add
out
fdiv
jo
adc
add
and
cmpsb
pop
imul
loope
sub
aas
jo
pop
ljmp
bound
pop
js
rcr
jmp
cmp
out
ljmp
popa
test
pop
ljmp
and
inc
gs
mov
add
aaa
das
add
xchg
inc
andl
mov
popl
rcrl
ret
and
rcll
xchg
push
mov
outsl
xor
loopne,pn
test
adcb
sub
cmp
pop
cli
out
mov
pusha
fnstsw
sbb
test
add
andb
shrb
mov
or
mov
lahf
ret
jl
push
shlb
daa
add
push
mov
push
imul
fsubrs
insl
xchg
lock
jp
ret
clc
hlt
call
dec
lock
aam
aaa
push
inc
out
sub
lods
inc
cmp
sbb
test
lcall
sbb
negl
inc
ja
sbb
movsb
in
push
mov
call
ds
aaa
dec
jo
add
imul
addb
inc
inc
xchg
jle
insl
fst
cmp
test
xor
pop
inc
mov
ficompl
ret
xchg
ret
cli
dec
add
jae
pop
pushf
inc
ds
js
loope
ss
sub
mov
std
out
insl
test
out
cmp
or
pop
sub
dec
test
cmp
add
lds
adc
rclb
fcmovnb
or
adc
push
inc
outsb
or
test
fildll
ret
or
and
movsb
mov
subb
shrb
jmp
fcom
test
outsb
adc
add
mov
fs
pop
or
stc
pop
stos
jle
mov
dec
add
xchg
mov
or
sarl
dec
sub
loop
sbb
sahf
fs
fwait
sbb
aam
lea
lock
xchg
push
leave
jno
mov
xchg
addb
dec
mov
push
popa
push
pop
add
cli
adc
js
jp
movl
fisttpl
xor
pop
test
or
adc
sbb
testb
repnz
xorb
and
test
cs
cli
mov
mov
or
or
sahf
gs
lds
fiadds
outsb
xor
sub
popa
fdiv
pop
mov
pop
sbb
lds
or
sbb
outsb
or
sahf
mov
aaa
loop
das
adc
lock
mov
add
aaa
pop
or
mov
push
adc
mov
inc
into
int3
pop
mov
mov
inc
fsubs
cld
orl
repnz
sbb
call
and
jae
adc
jle
jmp
cmc
scas
or
xchg
push
pusha
out
jle
mov
lcall
cmp
jg
ficoms
xchg
and
enter
push
cmpsl
mov
cmovg
js
clc
pushf
mov
pop
or
test
push
or
mov
loope
dec
cmp
add
orb
idivl
loope
fiadds
xchg
jp
jle
in
je
jle
dec
pop
clc
inc
jae
push
cmp
push
ss
adc
mov
pop
adc
lods
ret
arpl
je
data16
ljmp
dec
inc
sarb
ret
mov
mov
adc
insl
cmpl
add
push
mov
mov
addr16
gs
sub
jl
mov
mov
mov
aaa
call
xor
fcom
dec
jg
add
outsb
pusha
mov
mov
cmpl
lods
inc
fstpl
daa
cwtl
cmpsl
test
lea
xor
cwtl
rolb
inc
jg
outsb
inc
dec
sub
ret
aad
xorl
xchg
mov
pop
mov
dec
pop
mov
std
aaa
xchg
mov
pop
pop
and
pusha
js
cmp
inc
shll
idivb
and
mov
or
sub
ja
jno
jecxz
dec
les
lret
cmp
mov
sub
push
xchg
xor
icebp
aaa
aam
and
leave
pop
into
sub
mov
ret
adc
and
outsb
imul
lea
and
pop
jle
addl
or
pop
cli
jmp
mov
jp
jge
inc
sub
sbb
shlb
pop
jnp
enter
inc
xchg
push
mov
and
addr16
andl
jl
sarl
and
dec
push
inc
fisttpl
pop
inc
cmp
xchg
incb
mov
pop
call
fildl
dec
mov
nop
cmp
mov
movsl
add
out
test
mov
mov
movsl
jle
das
xchg
adc
jb
in
pop
inc
clc
mov
mov
in
shlb
lods
sub
icebp
push
pop
aam
mul
push
or
mov
xchg
pop
arpl
ss
xchg
xchg
sti
dec
hlt
or
test
pop
jl
dec
mov
and
or
scas
or
mov
stos
mov
addb
pop
test
orl
or
cmp
lret
cmp
mov
push
inc
xor
inc
xchg
jo
mov
inc
jb
aam
mov
push
scas
rolb
cwtl
fisubrl
movsl
inc
dec
cwtl
out
jecxz
scas
pusha
mov
subl
mov
shrl
sti
cmp
iret
add
fildll
outsb
mov
xlat
xor
in
mov
scas
lods
mov
cmp
cld
or
or
loope
push
and
push
xchg
sub
iret
xor
repz
sub
pop
push
mov
mov
sub
outsl
shlb
and
mov
push
cld
in
out
sub
sbb
ljmp
inc
mov
mov
movsl
inc
jns
dec
movsl
xor
jmp
and
adc
fsubrp
push
sahf
addb
in
jmp
fmull
mov
fldt
and
push
lahf
cs
and
sub
sbb
loope
cmp
mov
xchg
jbe
or
aad
lret
lods
lret
cmp
xor
adc
insl
mov
ror
ficompl
test
sbb
sbbb
cltd
sub
fldenv
ficompl
mov
mov
in
mov
add
jp
outsl
testl
js
lods
ret
fisttps
cltd
push
adc
push
outsl
sub
ss
notl
cld
jg
mov
fwait
mov
pop
or
loop
cwtl
int3
and
into
clc
test
inc
cs
stos
cmp
icebp
dec
inc
add
add
cmc
mov
or
lret
cmpsl
dec
cmp
daa
xorb
or
clc
inc
lea
movl
mov
xor
add
les
xchg
jne
fcmove
and
mov
lcall
mov
cli
pop
sub
dec
jo
sbb
jmp
divb
decb
mov
cmc
movsl
loopne
inc
xchg
ja,pt
ja
scas
std
icebp
xchg
shlb
cmp
fcomi
push
outsb
xchg
mov
mov
xor
mov
adc
xor
testb
mov
jg
sub
mov
lds
xchg
loopne
add
adc
hlt
scas
stos
cmc
adc
in
ffreep
mov
sub
mov
dec
sbb
pop
cmp
add
cld
lods
mov
mov
mov
insl
cli
andl
shlb
rorl
mov
or
or
push
test
les
and
in
sub
aam
loope
xchg
push
xor
enter
lods
lock
pop
mov
lds
out
push
pusha
mov
in
cmp
mov
mov
fs
cmp
clc
mov
mov
inc
mov
pop
fimuls
sub
in
stc
call
mov
shr
xor
xor
fwait
call
push
mov
ljmp
outsl
ja
leave
lea
push
mov
das
cld
fwait
pop
clc
mov
inc
cmpsl
adc
cwtl
and
in
dec
xorb
push
sbb
mov
inc
sbb
fcmovnu
push
pushf
mov
and
in
mov
bound
add
loopne
inc
xchg
lea
test
clc
aaa
inc
pop
push
arpl
dec
sbb
push
idiv
rcrb
hlt
cs
push
push
xor
into
push
fstpt
mov
mov
add
add
or
insb
js
shrb
fs
xchg
sub
mov
cmp
cld
dec
pop
lock
pop
loop
aaa
inc
inc
es
outsl
jp
icebp
adc
in
stos
fisttpll
mov
jmp
arpl
outsl
psrlw
pop
xlat
adc
nop
inc
dec
rcr
push
sub
gs
mov
push
inc
adc
pop
ret
sub
popa
xchg
cmp
test
loope
icebp
clc
icebp
mov
ljmp
insl
xor
and
jae
fcoml
inc
rorl
xor
in
test
cli
push
and
push
mov
lods
mov
aad
cmp
insb
mov
in
jmp
pop
test
sbbl
inc
xchg
sar
lods
fdivrs
stos
int
add
jnp
jecxz
out
inc
pop
mov
clc
xchg
push
inc
adc
inc
orl
pusha
inc
jl
xlat
push
mov
mov
rcll
sarl
sbb
xchg
jecxz
sbb
sti
sbb
cmp
xchg
or
inc
fistpll
inc
pop
sbb
cmp
sub
aad
add
mov
fistpll
push
insl
mov
mov
jg
mov
push
sbb
xor
and
and
inc
aas
iret
stc
imul
pop
mov
jg
or
cmp
movl
jmp
fs
insb
inc
insl
ja
int3
cli
out
sub
sbb
jne
stos
dec
icebp
cmpb
jmp
and
mov
xlat
filds
cmp
xor
mov
push
andl
imul
jnp
adc
xchg
clc
pop
in
add
push
cltd
xchg
jne
pop
pop
mov
lds
and
xchg
enter
repz
scas
insl
add
scas
inc
push
rorl
jmp
popf
push
add
mov
mov
mov
pop
sub
inc
mov
xchg
test
pop
jecxz
leave
pop
gs
sahf
sub
xchg
sub
call
loopne
mov
push
movsb
or
aas
nop
fucomp
out
fists
mov
pop
cltd
push
ret
ret
mov
cli
sbb
sti
cmp
call
and
movsl
hlt
mov
adc
cmp
out
jecxz
std
data16
xlat
lcall
adcl
mov
cli
sub
jg
lods
cwtl
subb
pop
mov
imul
jle
out
test
push
adc
xchg
or
pop
incb
daa
add
ret
fbstp
or
ret
cmp
adc
add
cli
imul
sub
sti
adc
mov
xchg
or
xchg
out
lahf
sbb
or
mov
mov
lods
mov
lea
inc
xor
mov
cwtl
jmp
fadd
mov
and
push
mov
mov
xchg
lcall
das
test
into
lds
pop
mov
cmp
insl
bound
or
adc
push
xchg
inc
pop
mov
fisubrs
push
xor
push
xchg
cmp
pusha
cmpsb
outsl
shl
test
inc
dec
std
test
mov
scas
fldl
jo
stc
sahf
push
or
outsl
mov
js
push
cltd
cmp
lret
jnp
jge
lds
dec
push
or
out
movsb
mov
aaa
fsub
mov
and
adc
jg
in
mov
test
in
and
sbb
and
or
xorb
stos
mov
mov
hlt
outsb
pop
pop
push
cmp
pop
mov
std
xchg
xor
inc
dec
mull
or
mov
scas
xchg
aaa
in
notb
push
insl
inc
in
fimuls
pop
xor
fwait
add
mov
nop
adc
outsl
mov
pushf
aas
inc
inc
psrlq
clc
push
out
and
insb
pop
lock
add
pop
dec
es
neg
fdivrp
pop
fiaddl
xlat
add
add
repnz
arpl
lock
leave
inc
aad
inc
iret
xor
repz
xor
lock
or
dec
repz
sub
inc
jne
repz
inc
adc
xor
pop
jmp
int3
push
or
iret
cli
xchg
imul
scas
dec
rorb
inc
in
cmp
inc
mov
inc
inc
icebp
jmp
lods
inc
sub
outsl
and
inc
push
ja
gs
fcom
shl
adc
clc
sbb
mov
out
out
movsb
pushl
xlat
inc
in
in
loopne
adc
mov
mov
rcll
outsb
pop
fdivs
fmuls
jp
mov
fdivrl
addr16
jnp
loopne
and
clc
xchg
rorl
xor
xchg
test
inc
test
loop
mov
adc
repnz
inc
sub
sub
cmp
xor
in
mov
decl
cwtl
pop
faddl
cld
push
mov
sbb
das
mov
jmp
mov
mov
pushf
call
mov
sub
pop
cmp
cmp
scas
jl
pop
clc
mov
or
cmp
cli
aaa
nop
cmp
cs
rorb
dec
lock
cli
dec
js
fildl
push
lcall
push
rcr
fsubs
mov
loope
mov
xchg
jp
out
xchg
loop
jnp
sbb
inc
icebp
ljmp
imulb
jb
jno
or
and
mov
mov
add
sbb
push
dec
inc
sub
cmp
dec
aam
push
psubsw
mov
dec
and
push
sbb
fmull
xchg
lahf
sub
mov
and
inc
lock
test
icebp
js
and
adc
js
mov
ljmpw
mov
movsl
in
loop
mov
flds
xchg
and
jmp
or
lock
insl
sbb
daa
in
pop
outsl
sub
insb
dec
xor
mov
rolb
inc
sbb
or
in
fwait
dec
adc
mov
adc
fwait
ret
cmp
sbb
mov
andl
mov
and
cmpsl
sbb
insb
lds
mov
inc
icebp
sarb
jge
cmc
or
and
lcall
dec
insb
test
jg
shr
and
mov
pushf
loope
pop
mov
outsl
jmp
or
or
aad
fisubs
push
enter
mov
or
xchg
cli
cwtl
mov
add
nop
xchg
add
mov
ja
jbe
pop
pop
and
or
ss
mov
adc
adc
sub
js
push
sbb
fbld
cmp
or
mov
and
cmp
gs
and
out
mov
leave
jg
lds
stos
or
add
mov
sub
pop
mov
out
mov
jae
rolb
push
rolb
sbb
call
in
cltd
addr16
insb
fstpt
outsl
insb
mov
xchg
xchg
addl
fldl
xchg
push
lds
cli
push
push
shl
xchg
shr
pop
addl
imul
mov
pop
repnz
scas
cli
movb
mov
fstp
xorb
push
subl
xchg
jge
xchg
and
xor
jo
sahf
xor
test
inc
mov
cmpsl
fst
insl
ret
sub
xchg
cmp
js
out
dec
inc
test
filds
jno
adc
stos
adc
pop
pop
je
pop
jo
call
jmp
push
fmull
add
mov
dec
inc
movsl
adc
cltd
loopne
or
cmc
fstpt
icebp
popl
ret
push
test
ja
repz
and
sbb
mov
ljmp
bnd
mov
push
jae
insl
fimuls
pop
imul
dec
jl
and
cmp
sbb
cmp
lahf
rcr
fcmovnu
inc
mov
mov
sbb
shlb
lods
and
jne
jne
jp
and
mov
loopne
pop
adc
dec
and
sub
jl
or
mov
test
clc
inc
cmp
jecxz
mov
and
stos
mov
jg
iret
mov
int
sub
add
ret
xchg
sub
out
xor
inc
mov
loopne
fildl
test
xchg
mov
jno
pushf
cwtl
fildl
ficoml
mov
sbb
push
insl
mov
and
ficompl
push
add
subb
cmp
out
xchg
aam
mov
loop
daa
outsl
mov
insl
aad
fistpll
ret
fidivl
hlt
inc
imul
mov
sbb
pop
cmp
adc
jbe
inc
mov
jns
inc
test
lea
push
jecxz
popa
add
callw
mov
int3
jmp
jo
movsl
mov
mov
pushf
lea
push
shrl
inc
aas
xor
rcll
add
xor
cmpsl
das
dec
xlat
das
in
jbe
in
shlb
lea
or
test
loope
call
std
outsl
mov
sub
mov
push
iret
dec
and
hlt
xor
rol
sbb
in
add
xchg
jo
addb
xchg
lret
mov
movl
mov
jl
mov
sub
sti
pop
gs
and
pop
ret
xor
or
push
mov
ret
cld
xchg
pop
sub
enter
xor
adc
lcall
inc
mov
jb
std
jle
fcmovnbe
shlb
cmp
negl
call
and
jl
rorb
xor
or
int
movsb
mov
mov
xchg
jp
mov
das
mov
or
sub
cmp
lock
mov
sarb
fs
mov
mov
lahf
rcl
pop
jmp
inc
sbb
lock
fimull
aaa
mov
leave
aad
add
in
fstp
dec
sub
xchg
lods
inc
stos
imul
and
test
mov
dec
pop
xorb
adc
and
and
dec
cld
outsl
ljmp
int3
int3
lock
jmp
in
in
lock
and
xchg
dec
push
aas
pop
pop
fs
mov
test
inc
js
or
adc
inc
pop
sbb
jb
test
fs
jmp
dec
adc
das
adc
mov
clc
sbb
mov
cmc
das
sbb
sahf
sub
mov
add
push
sbb
add
aaa
mov
les
sbb
adc
mov
out
test
outsl
adc
leave
pop
lcall
cmp
pusha
sbb
in
pop
add
dec
xchg
push
inc
test
push
jecxz
lds
je
pop
add
add
subb
pushf
pop
faddl
das
insl
call
jbe
and
sbb
sahf
shlb
xchg
in
jbe
lds
shlb
sbb
ja
jg
test
cmpl
shrl
cmpsl
lcall
dec
shlb
clc
lcall
xchg
gs
jl
mov
or
xor
filds
dec
wrmsr
adc
xor
fst
repnz
sbb
ffreep
add
push
pop
pop
adc
push
push
mull
stc
pop
ss
sbb
leave
push
sbb
fwait
mov
cmp
cmp
subb
and
pop
fwait
mov
arpl
mov
out
add
cmp
clc
stos
fcomi
hlt
and
imul
sub
mov
push
dec
cmpsl
arpl
clc
xor
in
test
cli
sub
aam
jmp
mov
xchg
mov
bound
test
stos
push
or
jg
sub
imul
or
sub
icebp
das
std
enter
popa
pop
or
cmp
jae
xorb
in
mov
pop
out
stos
xchg
push
sub
filds
ds
adc
inc
test
or
out
jne
inc
or
fwait
inc
add
cli
cmpb
or
or
xlat
pop
inc
dec
xchg
push
in
xor
int
insb
orb
mov
in
pop
pop
pop
pop
movsl
test
fcomps
inc
mov
pop
add
mov
push
outsl
adc
adc
ret
aaa
adc
insb
iret
add
and
loopne
call
cmp
or
shl
or
leave
test
negb
mov
icebp
add
imull
mov
popa
adc
add
or
xor
sbb
rclb
out
adc
or
fisttpl
pusha
jl
or
mov
xorl
outsl
fists
xchg
repz
cmpl
sbb
mov
mov
xor
pop
cmp
lock
pop
mov
add
inc
cld
mov
sbb
orb
in
shrl
rcl
mov
pop
cmp
pop
sbb
daa
aas
adc
fists
bound
sub
nop
shl
adc
imul
out
jbe
mov
roll
or
pusha
jecxz
icebp
shll
push
aas
test
js
xchg
shll
lea
dec
stc
pop
ljmp
xor
scas
divb
sbb
fdivrp
lods
fisubl
jne
lds
push
mov
jo
das
std
scas
sbb
popa
daa
outsb
cmp
adc
mov
lea
sub
dec
push
sarb
shrl
or
jg
fists
xchg
xchg
and
fs
jmp
xor
dec
pop
aas
add
add
pop
rclb
mov
jge
inc
fistl
sbb
in
mov
xor
or
test
out
lcall
inc
mov
jle
icebp
ret
pop
cmp
aaa
inc
lods
xor
push
jbe
mov
push
inc
cmc
imul
rcrl
jge
jp
mov
sub
or
stos
dec
add
out
mov
dec
push
inc
test
mov
cmp
dec
aam
call
add
mov
jl
insb
jg
and
and
outsl
andl
inc
lds
push
and
decl
fmul
mov
cmpsb
inc
int
sti
fsubrp
add
or
inc
stos
sub
loop
dec
mov
lods
cmc
push
mov
sarl
out
inc
adc
or
xor
mov
pop
paddq
clc
inc
mov
xchg
orb
fstl
sub
adc
mov
nop
and
push
inc
iret
call
add
add
inc
int3
xor
stos
aas
fcmovbe
adc
scas
mov
and
movsb
jnp
fimull
sbb
test
test
cli
and
and
bound
mov
cmp
pop
sbb
cli
movsl
adc
sub
int
push
mov
mov
mov
jmp
mov
dec
fwait
call
and
in
test
mov
std
pusha
mov
faddl
lea
xchg
pop
sbb
cmp
movl
pushf
cmp
insb
mov
inc
fcomps
aam
ret
xchg
jno
push
xchg
lods
or
add
cmp
icebp
test
push
jne
jg
xchg
cmp
mov
add
push
pushf
je
xchg
jb
jle
pop
fucomi
popa
aad
es
mov
push
xor
jmp
popa
fsubr
mov
jns
inc
lret
or
add
mov
adc
dec
je
cs
data16
or
or
xchg
pop
cmpsb
dec
sub
test
movsl
lods
imul
sar
mov
scas
xchg
add
push
pop
fs
sub
shll
or
repnz
sbb
push
add
lock
jns
ljmp
or
fdivs
sahf
pop
pusha
stc
jge
stos
outsb
jg
jae
jecxz
adc
mov
jg
sbb
decl
test
out
adc
xor
leave
or
movsb
pop
or
call
or
fstpt
xorb
fs
lret
fnstcw
into
sbb
sbb
adc
clc
and
push
arpl
scas
scas
and
loop
push
jne
nop
mov
daa
xchg
push
or
mov
cld
push
in
in
push
bswap
xchg
outsl
aad
dec
add
js
inc
das
jl
push
fucom
cld
push
mov
cmp
push
cltd
aas
std
loope
xor
mov
adc
clc
dec
mov
lret
jp
call
mov
rclb
push
addl
into
mov
or
or
jnp
cwtl
scas
stos
dec
bound
xchg
dec
jg
notb
add
sub
out
and
adc
and
pop
loop
push
cwtl
aad
into
idivl
pop
into
incl
inc
pop
mov
addr16
fsts
mov
lret
xor
jno
xor
lods
js
ljmp
lahf
mov
xchg
add
mov
xlat
sahf
inc
ret
bound
adc
sub
inc
inc
jbe
sbb
ret
add
mov
pushf
insb
inc
and
push
fstpt
negb
repnz
mov
repz
insl
incl
shll
jmp
inc
aam
or
ja
dec
scas
lods
dec
dec
sub
push
dec
cmp
rcrb
ds
loope
orb
les
jnp
adc
add
sub
outsb
nop
push
mov
pushf
pop
mov
mov
mov
mov
iret
cmpsl
dec
mov
sbb
mov
ja
scas
adc
jmp
out
inc
or
inc
mov
and
mov
jne
or
jl
es
subl
subl
mov
imul
inc
mov
nop
dec
ret
xchg
push
pop
pop
jo
mov
rcrl
add
outsl
or
dec
das
shr
out
ficoms
sbb
mov
push
inc
and
add
rcl
popa
aaa
addr16
testb
fstl
mov
mov
push
call
or
cmpsl
jge
lahf
xchg
cmc
lret
inc
xchg
rcrl
icebp
adc
xorl
mov
pop
inc
or
sub
fisttpl
add
faddl
int3
enter
clc
and
and
or
cli
decl
ss
sbb
xchg
sbb
cltd
andnps
iret
cmp
lret
mov
ss
outsl
in
lea
imulb
inc
lret
loop
aad
insl
decl
lret
xchg
es
push
out
inc
mov
adc
mov
loopne
or
jmp
fistpl
sbb
mov
retw
in
dec
test
jge
daa
pusha
sbb
or
mov
aaa
inc
pusha
mov
sti
data16
push
cwtl
aad
aas
pop
sbb
jns
repz
ljmp
test
sub
mov
mov
sbb
je
fsubl
sub
or
scas
cmp
sbb
fisubrl
insl
cmpsl
popa
cmp
xor
jbe
shlb
or
inc
enter
push
test
add
loop
loop
fstpt
adc
pusha
pusha
cmp
int3
pop
js
jl
loope
xor
outsb
xchg
outsb
jnp
dec
mov
xchg
jp
ss
or
inc
std
movsb
in
or
test
push
fimull
inc
and
xchg
push
inc
sarl
pop
pop
ja
into
adc
loop
jmp
mov
cmpl
mov
das
lahf
push
lds
std
shll
add
outsb
std
cltd
inc
push
arpl
and
scas
movsl
adc
clc
int
pusha
pusha
jmp
in
inc
test
aas
inc
cmp
pop
inc
pop
pop
mov
jg
shrl
lods
dec
pop
scas
ret
sbb
dec
cmp
cmp
mov
hlt
popa
insb
or
mov
fisttps
xor
sub
bound
push
mov
and
ficoms
push
ljmp
test
aaa
fisttpl
jmp
push
adcl
loope
pop
cmp
cs
dec
xchg
jne
xor
inc
and
std
outsl
sub
jbe
pusha
xor
push
adc
jg
inc
sbb
out
push
cmpsb
push
data16
call
push
gs
pushl
inc
fldt
push
and
rcll
and
das
cld
lods
mov
mov
cltd
scas
jge
mov
push
pop
icebp
adc
negb
mov
jg
xor
imul
jne
mov
inc
mov
mov
push
add
test
add
and
ljmp
cmp
movsb
into
add
add
xchg
mov
call
push
xlat
negb
dec
push
insb
int
aaa
in
leave
pop
enter
jp
mov
add
push
mov
test
xchg
add
sahf
add
lods
enter
push
add
xchg
mov
gs
mov
sub
mov
adcb
or
mov
test
push
mov
inc
xchg
les
xchg
sarb
inc
jp
xor
orl
jmp
jb
dec
repnz
mov
sar
mov
adcl
test
cmp
sbb
out
lds
push
sub
pop
ja
pop
scas
pop
lods
sbb
or
xchg
hlt
lods
std
push
and
cld
cmc
mov
loop
mov
in
int
adc
cld
imulb
add
jle
roll
movsl
adc
popl
jecxz
xchg
int3
data16
and
cltd
jmp
jecxz
pop
shrb
xlat
adc
mov
add
scas
mov
orl
js
les
lods
xchg
mov
out
jl
cmp
scas
sub
in
and
push
add
pop
pop
outsb
cld
notb
movsb
pop
popa
pop
stos
sti
adc
sub
insl
push
insl
ds
iret
pop
call
jb
push
xor
mov
sbb
clc
fstpl
subl
mov
mov
pop
loop
pop
popf
sbb
inc
std
ret
mov
je
mov
cmp
fldt
mul
sub
sub
shrb
lods
in
cmp
dec
xchg
or
mov
mov
sahf
mov
sarl
sbb
data16
fs
mov
cli
sbb
jne
jge
ror
out
sub
pop
inc
cld
lret
mov
loopne
sar
fisttpll
fs
int3
mov
rolb
xchg
lock
push
mov
cmp
and
lods
jge
cmpsl
test
xchg
sbb
sahf
jb
or
mov
xchg
clc
sbb
mov
das
pop
fisttpll
imul
sbb
js
fcoml
xchg
loopne
and
clc
mov
sbb
sub
out
fldenv
inc
andb
mov
rorb
loope
mov
or
dec
sbb
dec
mov
jns
fisubl
lds
fwait
cmpsb
mov
inc
scas
cli
add
push
scas
jecxz
or
icebp
dec
mov
shl
adc
rcll
rcr
sbbb
inc
das
cmp
fdivrl
inc
pop
aam
ljmp
or
movsb
adcb
pop
jmp
and
xor
xor
cmpb
or
sbb
cltd
push
xchg
add
ja
mov
mov
les
inc
iret
mov
cmp
jle
mov
xchg
adc
arpl
push
adc
insb
jle
shll
popl
ds
add
outsl
fistpl
andl
fadds
fwait
jbe
fucomi
inc
adc
outsl
pop
cld
adcl
mov
enter
sbb
jp
cmc
push
jb
data16
mov
mov
std
out
sub
and
lcall
or
xchg
sub
stc
jle
test
pop
jl
ret
inc
mov
or
test
jmp
rorb
jl
popa
add
inc
push
dec
lods
push
das
and
xor
xchg
pop
mov
push
mov
and
or
adc
push
out
cli
jno
pop
mov
popf
xchg
inc
hlt
pushl
sub
scas
add
shr
pop
xor
sbb
push
insb
mov
leave
outsl
ret
icebp
mov
mov
xlat
fadd
pushl
or
push
lret
mov
mov
outsb
xlat
jp
bound
mov
ss
inc
cs
and
mov
push
lret
cli
loope
mov
dec
inc
xchg
adc
mov
push
popf
mov
add
cli
jnp
jae
xchg
dec
faddl
fdivrl
mov
xlat
jp
outsl
je
dec
insl
mov
cmp
or
add
push
adc
icebp
or
cmp
mov
push
orb
add
jne
lret
or
loopne
sub
fnstenv
lea
jnp
push
xor
outsb
popf
cmp
rol
outsb
sub
lcall
aaa
rorl
and
xor
je
mov
cmpsl
mov
mov
xlat
inc
and
enter
outsl
cltd
inc
dec
push
enter
dec
popl
ret
push
sub
fistpll
ljmp
jl
clts
jno
xor
out
and
mov
jge
push
or
push
inc
xchg
sub
int3
icebp
pop
movsb
icebp
inc
pop
jo
mov
cmp
subl
daa
inc
add
push
imul
fcomps
test
in
or
xor
jbe
push
dec
rorb
jnp
ss
jle
jg
lock
repz
jecxz
test
mov
inc
inc
sbb
dec
and
cmp
mov
mov
xor
and
test
shlb
imul
in
sahf
scas
fs
add
or
pop
gs
or
inc
inc
dec
sbb
pop
ja
sub
rcl
mov
das
std
sbb
add
jne
fwait
mov
cmpb
xchg
cmp
in
pop
nop
adc
inc
push
jne
ret
jecxz
xchg
pop
push
fsubrl
fstpt
cltd
adc
cli
scas
add
jle
push
dec
lock
leave
test
std
pop
lock
add
jae
call
sub
mov
inc
andl
ds
cmpsb
fisubs
xlat
rclb
mov
or
in
mov
push
or
mov
mov
out
out
les
loope
adc
mov
mov
xor
pusha
cmp
pop
push
cmc
aaa
lock
pop
pop
xchg
add
xchg
mov
pop
cmpsb
mov
movsl
cmp
in
loop
into
in
xchg
test
cs
and
stos
in
movsl
mov
in
sbb
es
outsl
mov
push
push
and
xchg
insl
pop
mov
pop
sbb
sbbb
mov
repz
jbe
test
and
je
fnsave
pushl
scas
jo
push
pop
aas
les
mov
and
test
pop
inc
dec
sarb
jp
mov
loopne
clc
fidivrl
adc
int
jae
mov
in
jg
icebp
call
xchg
enter
and
into
aam
aaa
inc
adc
adc
or
push
and
shrb
or
pop
aaa
aas
inc
sbb
xor
push
cwtl
inc
hlt
ljmp
mov
sub
jne
adc
insl
and
jg
sbb
ljmp
mov
sbb
daa
popf
sbb
push
fadd
mov
sub
aad
xor
sbb
jl
mov
fldl
xchg
jo
js
lea
lds
pop
insb
mov
pop
popa
addl
popa
mov
mov
sbb
scas
sub
cmp
leave
out
jg
stos
push
sub
or
test
js
xchg
and
jns
sbb
fldt
push
ds
daa
add
repnz
dec
jbe
sbb
rcr
pop
dec
adc
pop
pop
pop
or
out
inc
outsb
jmp
out
jbe
lock
adc
test
pop
loopne
int3
movsl
test
dec
movsl
mov
sub
out
dec
fildll
add
pop
and
add
dec
test
hlt
cwtl
stos
stos
pusha
pop
shrb
adc
jg
or
loope
mov
and
jg
dec
nop
ja
mov
roll
arpl
fcmovnu
bound
lods
outsl
clc
stc
out
xchg
lcall
cld
mov
outsl
mov
jl
cmc
ja
push
in
jg
outsl
in
and
mov
sub
mov
jo
sarl
inc
cld
aad
and
push
lcall
lods
sbb
push
mov
scas
icebp
and
fisubl
rcrl
frstor
bound
push
mov
lea
add
out
push
pop
lahf
daa
lds
icebp
push
mov
lock
outsl
dec
test
cmpsl
sbb
fsubs
ficompl
fnsave
sub
pop
mov
fadd
outsl
lock
cmpl
and
xor
xor
cwtl
lcall
sub
aaa
pop
add
cld
and
push
sub
js
push
jecxz,pn
pop
jnp
mov
adc
fxtract
test
insb
rclb
jl
scas
imul
das
pop
jnp
ficoml
sbb
loopne
rcll
sub
mov
mov
test
mov
sti
gs
or
push
ljmp
xchg
imul
sub
outsl
mov
jbe
into
mov
sbb
iret
es
xor
cmp
mov
sti
aaa
push
lds
in
ret
lock
ds
jecxz
js
push
imul
sbb
mov
lret
pop
js
test
pop
dec
das
or
adc
push
inc
incb
sub
or
inc
push
push
lock
sarb
pusha
mov
cmp
test
ljmp
jnp
jo
lods
mov
adc
fidivrs
adc
adc
cmpsl
ret
sub
sub
pop
mov
push
cmp
mov
out
test
imul
pop
int3
push
inc
inc
sbb
and
mov
cs
popf
cli
sarl
xchg
mov
or
cs
sbb
daa
and
inc
add
xor
rcrb
dec
inc
mov
mov
clc
xor
push
shlb
mov
test
mov
xor
cmpsb
ret
lcall
jo
addl
sbb
das
xchg
push
gs
aaa
cmc
rclb
mov
rol
xchg
aaa
mov
out
decb
push
and
or
lahf
stos
mov
jne
pop
or
add
into
mov
push
or
fldl
adc
push
jne
pop
xchg
repnz
test
push
outsb
mov
jno
inc
xor
aaa
mov
pop
and
lcall
nop
aas
mov
cmp
cmp
mov
adcl
sbb
mov
mov
cli
sbb
outsl
sbb
in
sbb
or
scas
scas
pop
repz
out
rcll
sarl
jb
jmp
and
lods
mov
outsl
insb
add
in
leave
pushl
dec
pop
add
adc
es
or
cmc
insl
in
pop
mov
ja
cmc
inc
loope
outsl
cld
fildl
movsb
daa
pop
cmp
sbb
sbb
jno
or
in
mov
pop
mov
cmpsb
test
jl
jb
and
pop
dec
adc
stos
or
cmp
mov
adc
stos
rolb
test
aas
dec
ljmp
sbbl
jmp
and
in
xor
mov
adc
sar
mov
jmp
mov
push
sub
int
push
inc
daa
rol
aad
adc
jp
arpl
sbb
inc
aam
xor
sahf
lds
fisubrl
cli
dec
aad
movsl
and
hlt
minps
xor
jmp
test
mov
inc
sub
xor
sbb
and
xchg
pop
xchg
jecxz
jne
inc
push
out
pop
rcrl
or
scas
fmulp
xchg
and
aam
adc
lods
fwait
fldt
test
push
dec
cmpsl
ficomps
lock
xor
adc
jg
imul
adc
mov
fiadds
aad
fsubrl
adc
movsb
dec
ret
addr16
cmp
hlt
dec
fdivl
test
fiadds
aad
push
addb
dec
imul
sub
lods
cltd
adc
dec
sbb
pmullw
jb
mov
mov
scas
mov
je
pop
pop
pushf
shlb
loop
jbe
jle
sub
test
icebp
mov
cld
sbb
mov
push
rcl
loop
in
movsl
or
add
mov
mov
pop
or
nop
or
hlt
or
xchg
mov
cmp
fst
aaa
rcrb
pop
nop
cmp
and
insb
pop
fdivl
mov
inc
mov
bound
cld
and
sbb
lea
bound
adc
or
jle
ret
xorl
pushf
ljmp
add
mov
mov
mov
shrl
jl
add
xchg
or
mov
inc
jl
fiadds
push
iret
inc
iret
movsl
push
inc
jecxz
jg
outsb
flds
ja
sbb
adc
ret
push
call
outsl
loop
test
fisttpl
inc
adc
sbb
outsl
push
sti
shlb
jge
push
pop
and
push
pop
pop
sub
inc
flds
sub
jle
sub
dec
add
mov
sbb
fstpt
test
xor
cmp
mov
mov
je
cmp
mov
xchg
add
add
jmp
pop
adc
inc
sub
pop
or
sbb
minps
outsl
int3
cmc
xor
stos
jg
lods
mov
iret
adc
dec
sbb
nop
enter
xchg
in
nop
pusha
ss
in
lds
fistl
int
dec
std
repnz
lcall
shl
mov
fwait
clc
sbb
adc
pop
data16
lods
xchg
loopne
inc
mov
cli
adc
inc
push
pop
aaa
or
jg
fbstp
dec
adc
xor
jno
pop
out
je
clc
or
adc
and
jmp
cmp
pop
cld
cmp
jle
test
jmp
add
lea
sub
jl
dec
or
enter
inc
loop
or
add
adc
ret
sub
sbb
shlb
mov
jg
cmpb
sbb
push
js
xchg
or
inc
mov
out
cmp
push
hlt
incb
test
mov
fidivrs
push
cmpsb
sbb
mov
into
jp
in
dec
push
adc
imul
adcb
jg
cltd
testb
cmp
sbb
aaa
sti
mov
aad
in
mov
jmp
movsl
in
mov
call
sub
lahf
xlat
rcrb
adc
jp
add
arpl
jl
inc
cltd
inc
dec
lock
mov
dec
or
les
mov
loop
lret
push
clc
inc
fcomip
mov
add
ret
lahf
lret
mov
rorl
lock
mov
jp
inc
das
notb
inc
movsl
fistpl
roll
xchg
rcrb
call
xchg
sub
insb
fidivrs
push
cld
or
mov
lock
icebp
outsl
scas
inc
loop
mov
mov
mov
iret
aam
aam
scas
add
cmp
cmp
jno
adc
pop
and
jl
unpcklps
mov
inc
and
loope
push
fnsave
jbe
lock
cli
xchg
adc
pop
fmuls
ficoms
lods
sub
or
dec
push
pushf
adc
js
xlat
sbb
push
out
or
add
cmp
cmp
roll
or
xchg
popa
ja
movsb
adc
xchg
jb
les
push
jl
sti
add
mov
pop
or
inc
mov
cld
push
movsb
and
sub
sub
cld
rolb
movsb
stc
cmp
cmpl
fistl
enter
call
leave
and
loop
sbb
lea
loope
pop
add
dec
jl
dec
sub
sbbb
xchg
enter
out
sub
jmp
xchg
adcb
push
add
lock
pop
add
repnz
jnp
rcrb
cli
mov
inc
test
dec
mov
inc
out
test
outsl
aad
icebp
test
or
inc
movsl
test
or
or
dec
cmc
je
or
pop
adc
ljmp
xchg
and
or
incl
jne
jmp
dec
fists
dec
clc
mov
ja
outsl
add
in
sbb
jle,pn
or
icebp
test
in
mov
jbe
lds
push
xor
pop
adc
jg
aaa
sub
shrl
sub
and
pop
push
push
mov
adc
pop
pop
addr16
xchg
xchg
in
call
jg
lds
jne
push
cmc
xchg
dec
jg
mov
syscall
mov
xor
clc
outsl
or
sbb
pop
mov
je
scas
fidivrl
clc
aaa
std
lods
mov
xchg
fisttpl
jg
mov
aad
aas
adc
add
push
mov
ss
fadds
js
pop
sub
inc
int
out
ds
xchg
and
cmpl
pop
shlb
push
and
ret
push
or
inc
aad
jae
cmovge
xchg
mov
lcall
adc
mov
loope
inc
mov
dec
scas
push
adc
adcb
add
adc
push
inc
sti
mov
push
xchg
aam
sub
pop
jno
lret
inc
subb
outsl
pushl
mov
push
inc
xchg
lahf
in
sub
repz
insb
lcall
jo
ja
mov
cltd
mov
out
pop
sub
dec
aaa
cmp
repz
stc
js
push
repnz
insl
mov
clc
ja
add
mov
jl
or
sahf
test
mov
ret
inc
ret
or
ljmp
xchg
adc
xor
xor
or
loop
or
les
xor
clc
dec
mov
push
stos
mov
jns
dec
daa
pop
nop
adc
fdiv
mov
inc
ljmp
pinsrw
pushf
sbb
dec
shrl
push
out
jle
jae
scas
dec
or
jg
fcoms
daa
nop
and
imul
cmc
repnz
int3
cmp
cmp
dec
xchg
add
cs
jl
jle
cmc
adc
outsb
rolb
push
loope
loopne
sub
mov
lret
pop
mov
into
aaa
jle
clc
in
insl
mov
test
pop
fcomps
mov
shlb
fwait
and
xor
mov
loope
push
in
fdiv
jb
inc
stos
in
cld
je
sbb
add
push
insl
add
jecxz
movsl
push
out
lods
icebp
out
sbb
jo
mov
roll
jg
inc
stos
or
mov
cmp
xor
pop
add
and
rcrl
out
repz
jmp
rclb
out
sbb
lds
inc
xor
shl
or
xor
sar
pop
rolb
movsl
ljmp
dec
scas
mov
icebp
aaa
cli
mov
or
pop
lods
std
and
nop
ret
pushf
add
int3
lcall
sbb
mov
loopne
push
call
mov
rep
cmp
fbld
adc
inc
sbb
mov
or
scas
or
mov
sub
movsl
popw
ret
ret
add
push
leave
leave
mov
pop
sti
aaa
add
pop
bound
in
jmp
mov
cli
push
push
or
in
imul
jns
clc
mov
fisubs
xor
lods
mov
lret
aas
mov
mov
mov
pop
mov
mov
or
push
insb
fwait
loop
insb
scas
fildll
mov
push
out
scas
jle
sbb
cltd
sub
and
outsl
loop
lock
loope
iret
stos
popf
int3
jns
rcrb
pop
mov
stos
jge
jnp
ret
or
fnsave
decb
cmovne
jle
mov
push
fisubrl
imul
lds
xor
icebp
mov
fisubl
cmpsb
or
or
repnz
xchg
mov
ret
cmpsl
fisttps
loopne
outsb
lds
mov
lret
cmpsl
add
or
lahf
cli
sbb
xor
sub
jbe
mov
fimuls
jge
push
jp
jmp
ljmp
or
in
inc
std
cmp
idivl
in
push
push
xchg
call
loopne
jnp
aad
in
rorl
sub
xor
test
cwtl
das
or
and
je
std
sub
mov
pop
push
mov
mov
mov
jge
mov
gs
fsubr
stc
mov
jmp
js
fldt
mov
lret
adc
movsb
jge
mov
subb
jle
lds
add
jp
push
repnz
hlt
rcrl
nop
dec
or
cmpsb
pop
pop
repz
jb
and
push
arpl
cmc
push
das
xchg
mov
or
cmpb
pop
stos
jo
in
wrmsr
sub
fs
outsl
test
and
pop
fists
adc
mov
mov
test
mov
xchg
mov
faddp
fstpl
pop
subb
gs
dec
xchg
into
xchg
adc
jnp
pop
pop
js
push
xor
cmpsl
ror
inc
jo
or
outsb
mov
lahf
or
fists
jmp
ja
les
inc
pop
sbbb
jo
mov
aam
jmp
repz
js
add
loop
fnstenv
aad
fistpl
jecxz
sbb
inc
sbb
or
dec
cmp
movsl
das
xor
dec
cltd
ljmp
add
pop
clc
push
xor
mov
sub
mov
test
call
sbb
dec
aaa
leave
movsl
fistpl
divb
and
xor
sbbb
fsubl
mov
lret
aad
dec
aas
jb
mov
or
adc
fcmovnb
push
fwait
or
cmp
push
insb
movsl
decl
sub
jnp
cmp
adc
adcl
xchg
mov
mov
mov
cli
jae
ss
sbb
fwait
or
fucomip
ss
mov
inc
scas
out
push
jbe
add
push
nop
sub
sbb
or
ret
push
ljmp
push
loop
dec
int3
xor
fisubrs
clc
jb
in
sub
adc
mov
sub
bound
icebp
fildl
or
nop
push
les
scas
out
mov
nop
sub
outsl
fstp
sbb
cmp
clc
divl
mov
shlb
jl
jno
mov
jg
frstor
lea
sub
pushf
pop
sub
mov
shrl
add
inc
pop
call
xlat
jbe
imul
mov
jmp
dec
push
mov
xorl
sti
ja
add
vminpd
inc
pop
mov
lods
nop
xchg
xchg
comiss
shrl
xchg
popa
bound
sub
je
loop
jmp
push
adc
loopne
pushl
mov
inc
out
sti
lahf
push
fwait
cld
icebp
jg
ljmp
jnp
jne
sahf
call
pop
mov
cltd
movsb
out
lock
push
sbb
or
flds
ljmp
dec
pop
rol
cmc
mov
jbe
pop
scas
nop
or
mov
andl
pop
popa
push
sbb
xor
loope
add
inc
fisubrl
enter
in
mov
xlat
pop
pop
and
jbe
je
pop
and
cmpsb
or
jae
inc
add
loop
and
filds
cld
es
add
fs
sbb
mov
or
lret
mov
mov
clc
xor
adc
jns
dec
pop
pop
arpl
stc
xchg
outsb
ljmp
cmp
loopne
jo
pop
push
sarl
inc
out
leave
lock
push
jae
fs
pop
call
push
rcl
cmp
cli
clc
xchg
add
es
push
insb
jp
stos
stos
jno
outsl
lcall
nop
and
xchg
mov
subb
dec
push
adc
mov
mov
mov
mov
sub
sub
pop
fstpt
in
call
ret
stos
mov
mov
loope
call
loope
ret
in
popa
arpl
in
out
mov
insb
sbb
xchg
push
inc
adc
mov
xorb
push
sub
mov
rorb
jne
aaa
movl
leave
out
in
add
mov
mov
xor
xchg
out
mov
adc
inc
hlt
es
cwtl
push
xor
inc
dec
pop
push
ret
loop
mov
mov
cmpsl
je
inc
pop
mov
jp
sbb
mov
lods
movb
cld
mov
aaa
icebp
enter
mov
and
bound
jmp
daa
jno
movl
fildll
cld
jg
arpl
xor
ljmp
push
cmpsl
fildll
cmp
repz
inc
mul
std
xor
or
bound
inc
sub
hlt
or
aaa
into
xorb
arpl
xchg
push
divb
cmpb
cs
fimuls
insl
dec
sub
es
add
dec
pusha
inc
hlt
or
leave
sbb
fs
mov
push
jnp
or
shlb
lea
js
stos
and
pop
ljmp
dec
mov
stos
sub
std
sbb
inc
adc
mov
mov
inc
sti
pop
mov
cld
aam
test
fdivr
popf
call
dec
cmpsb
jg
push
cmpsb
call
mov
add
fnstsw
inc
test
jg
fildll
sbb
fiaddl
push
jp
add
insb
xor
lds
inc
insb
ds
sub
imul
ret
jb
xchg
jmp
and
leave
movsl
or
pop
fimull
inc
shlb
adc
std
cmpsl
or
imul
ret
xchg
scas
jle
jmp
adc
jecxz
cmp
lcall
mov
push
adc
pushf
or
scas
push
mov
cmpsb
add
mov
pop
je
inc
jmp
add
js
addr16
dec
call
andl
mov
es
sub
xchg
enter
xchg
repnz
loop
mov
add
pop
and
mov
icebp
mov
or
mov
subl
mov
cmp
sbb
mov
scas
cld
test
adcl
aas
mov
rcr
pop
xor
or
sbb
pop
adc
mov
outsl
mov
push
xchg
lret
ret
mov
add
ret
mov
jb
inc
dec
jl
dec
ja
mov
jge
push
rcrl
lods
add
cmpb
cmpsb
pop
movsl
adc
mov
inc
gs
pop
push
pop
cmp
adc
mov
lods
das
sub
xor
push
add
loope
stos
mov
add
push
nop
adc
jg
sbb
dec
inc
push
jge
xchg
mov
leave
sub
inc
inc
pop
test
cmp
popa
mov
lea
xor
mov
pop
jg
lea
insl
addr16
or
fisttpl
cli
push
pop
jp
xchg
pop
adc
rorl
adc
mov
pop
enter
jle
loop
test
adc
cmpsb
popa
test
cwtl
cmp
xchg
jp
xchg
clc
sub
into
arpl
test
cli
cld
jb
push
int3
loope
lea
mov
mov
sbb
push
sbb
insl
xchg
mov
jb
xlat
mov
push
and
rcr
lret
jmp
lcall
loopne
push
inc
cmp
inc
sub
ret
add
movsl
fisttpl
incl
lahf
mov
clc
lods
enter
add
jecxz
mov
pusha
adc
xor
imul
fbld
or
adc
and
fwait
push
sahf
xor
lock
imul
ja
loope
and
clc
into
adc
mov
loop
bound
pop
push
pop
mov
sub
mov
cs
xor
mov
xor
icebp
sbb
outsb
inc
mov
int3
dec
add
add
outsl
dec
add
out
icebp
sub
sbb
mov
xchg
mov
movsl
lahf
fldl
pop
inc
pop
sub
mov
jns
pusha
jmp
jmp
mov
outsl
inc
pop
shll
jl
xor
inc
jge
loop
and
inc
sub
or
call
aas
add
test
sti
adc
mov
xchg
mov
adc
jne
mov
je
or
mov
sbb
jecxz
add
icebp
lcall
or
mov
mov
iret
cmp
cs
cmp
or
mov
xchg
andl
fnstenv
xchg
mov
shlb
adc
inc
pop
pop
mov
ljmp
mov
adc
inc
push
gs
mov
movsl
sbb
fildll
adc
sti
daa
dec
bound
out
pop
jmp
mov
mov
sbb
pusha
nop
das
hlt
push
adc
pushl
jl
icebp
loope
inc
lods
and
or
dec
dec
movsb
repz
out
cld
and
mov
ret
xchg
and
sahf
test
pop
je
enter
ds
mov
mov
popf
adc
mov
add
adc
aaa
icebp
inc
pop
ljmp
repnz
jmp
data16
mov
insb
stc
cs
add
test
fiaddl
cmp
cltd
sbb
and
ds
arpl
xchg
nop
cmpsl
and
lcall
cltd
call
push
cmove
clc
and
push
loop
mov
inc
xor
mov
mov
dec
mov
push
cmp
aam
add
repnz
and
ljmp
xchg
pop
adc
stos
aaa
push
push
push
out
icebp
sub
das
mov
mov
fsub
rorb
add
movsb
outsb
xacquire
mov
inc
cwtl
testb
mov
mov
fidivrs
loopne
fwait
cmpsl
lahf
sbb
test
push
mov
icebp
push
cld
inc
jae
jne
push
mov
insl
fists
das
add
mov
adc
sbb
add
stos
pop
es
pop
inc
mov
adc
icebp
insb
outsl
add
pusha
pusha
or
test
inc
adc
vmovq
shrl
jle
push
lret
movsb
movsl
pop
mov
aas
in
pop
push
cmp
fistl
xchg
adc
push
insl
mov
inc
adc
cmc
das
sbb
add
sbb
call
fimuls
decl
pop
xor
push
pop
pop
repnz
xor
xchg
movsl
lock
call
xlat
lret
rcrl
test
cli
and
hlt
cmpsb
clc
das
cmpsb
cmpsb
mov
outsl
nop
out
sbb
fcompl
ret
mov
incl
sub
lds
subb
arpl
ret
inc
or
pop
xor
call
xor
loopne
mov
lea
jns
rcl
xchg
lods
xor
mov
icebp
xchg
pop
add
add
outsl
call
and
int3
arpl
movsl
in
mov
fucom
aam
jbe
inc
in
push
mov
aaa
ss
repnz
fstl
or
loop
fnsave
sub
pop
or
pop
jbe
jl
loop
subl
sub
ja
hlt
and
scas
pop
add
adc
dec
cmc
xchg
mov
inc
mov
pop
adc
pusha
xor
clc
in
repz
xchg
lea
mov
test
jmp
ret
cltd
test
adc
push
and
subl
add
mov
arpl
jno
jnp
push
out
sub
add
repnz
mov
ds
push
jl
mov
jnp
pop
rcrl
movsl
push
call
stc
mov
pushl
aam
lcall
mov
mov
xor
inc
movaps
and
movsl
jecxz
aaa
jle
add
push
nop
fs
inc
xchg
add
adc
idiv
mov
and
pop
stos
xchg
xchg
cltd
movsl
xchg
sub
nop
add
sub
out
or
aas
sbb
jo
aas
mov
pusha
sarl
push
adc
add
mov
mov
xor
js
incl
imul
dec
clc
push
sub
adc
pushf
pop
imul
cmp
jmp
jo
test
sbb
scas
jge
popa
fdiv
jg
scas
in
loope
inc
mov
or
mov
lcall
xchg
and
movsl
dec
lret
cmc
sbb
push
cli
ja
ret
mov
inc
jnp
mov
xchg
and
pop
mov
mov
cmp
les
sahf
rcll
lock
repz
je
and
shr
and
push
dec
inc
inc
jp
icebp
outsl
jge
std
xchg
ss
mov
cmp
mov
pop
jp
mov
mov
or
ljmp
ret
mov
mov
ss
adc
adc
mov
jecxz
mov
daa
adc
lds
arpl
into
mov
fdivrp
dec
jecxz
ret
pop
test
sahf
cmp
xor
clc
stc
popf
push
outsb
dec
outsl
jo
jp
lods
test
cmpsb
mov
fidivrs
sahf
cmpl
add
pop
mov
fistpll
add
mov
stos
add
inc
cld
shl
cmpsb
mov
gs
sbb
mov
cmpsl
push
mov
enter
popf
pop
xchg
or
xor
and
mov
mov
loope
outsl
push
arpl
pop
or
inc
jns
xchg
ljmp
or
rclb
or
mov
xor
sub
jno
scas
adc
loope
sbb
lret
mov
sti
push
cmp
add
repnz
loop
xor
popa
inc
and
inc
std
push
mov
push
mov
mov
mov
pop
movsb
xchg
out
test
mov
sbb
mov
jg
std
sbb
push
pop
cmp
daa
sub
je
sbb
outsl
pop
pop
loop
inc
test
lods
mov
imulb
xor
jle
push
pop
add
jg
inc
xchg
mov
cs
fcomi
inc
into
cmpsl
sub
out
adc
lret
jg
inc
stos
pop
mov
dec
mov
and
push
mov
adc
test
es
das
xor
fisttps
xchg
sbb
les
lods
enter
sbb
cmc
icebp
inc
pop
mov
insl
push
cmp
cmp
mov
jp
int
xchg
push
fs
cli
dec
leave
clc
or
pop
clc
ja
push
lods
push
dec
inc
xchg
sub
mov
fisttpl
das
pop
aad
ret
insl
pop
test
cld
insb
xchg
jo
add
cltd
pop
mov
cs
stc
jge
xchg
mov
pop
push
dec
inc
std
rcr
xor
lods
clc
jae
fistps
les
adc
test
sbb
or
add
shl
fcomps
lret
insb
arpl
subl
cmpsl
popa
push
sub
ret
ret
lods
xchg
ss
cmp
or
lcall
ret
inc
aam
clc
fwait
jge
pop
addl
dec
mov
pusha
aas
addr16
cmpsl
fldcw
mov
ljmp
add
icebp
mov
rolb
cmc
push
push
push
jle
jle
inc
sbb
inc
inc
mov
adc
push
cwtl
inc
lahf
jne
sbb
je
and
jle
fadds
jb
sbb
dec
rorb
inc
testl
loope
pop
clc
mov
jne
sbb
mov
sbb
or
inc
jo
aas
test
fwait
loop
cli
movsl
push
mov
or
cmpsl
dec
dec
fcoml
push
orl
arpl
jne
mov
rolb
mov
in
loope
sub
jmp
lahf
enter
xchg
xor
ljmp
call
dec
mov
lods
mov
mov
aaa
push
mov
jmp
xor
jo
shrb
pop
jmp
repz
mov
movsl
outsl
mov
ret
int3
into
xor
hlt
notb
lcall
sti
and
mov
jge
sub
faddp
decl
mov
inc
xor
mov
push
cmp
pop
loopne
inc
or
addl
leave
aam
pop
dec
or
shrl
lret
cmpsl
ss
jge
and
inc
jge
leave
inc
aas
out
popa
cmc
mov
dec
ret
or
mov
xor
test
sti
sbb
ret
enter
incl
mov
test
movsl
add
cmp
movsb
imul
frstor
adc
jl
insl
push
test
ret
cs
add
mov
cli
or
fsts
mov
cli
clc
pop
mov
outsb
xor
add
arpl
inc
mov
call
xlat
xchg
dec
inc
jmp
int3
cmpl
popa
jne
xor
clc
adc
mov
das
inc
cltd
jle
sbb
xchg
mov
mov
popa
fnstcw
dec
pop
xlat
sub
mov
js
adc
and
push
sbb
pop
ret
aaa
jne
xchg
xchg
ret
les
sbb
pop
pusha
and
sahf
jmp
jecxz
in
aaa
aad
or
mov
mov
and
push
in
inc
push
jl
xlat
pop
pusha
add
and
imul
or
out
mov
cs
pop
into
and
adc
shl
xchg
jecxz
sahf
out
jbe
mov
fisttps
popa
rolb
cmc
or
enter
iret
xchg
add
pop
iret
lcall
inc
or
aaa
icebp
xor
out
int3
fs
popf
cmc
ret
mov
test
mov
push
jge
fsub
jg
inc
pusha
cmp
or
jb
jno
andl
mov
push
sbb
lods
out
insb
adc
call
pop
pop
jp
adc
mov
pop
sbb
push
cmpsl
fidivrs
jp
aaa
cwtl
jnp
test
sub
push
lock
inc
inc
repnz
lods
outsl
sub
push
aaa
lods
out
adc
fwait
lcall
mov
or
dec
cmp
fisubrl
cmp
xor
rcl
jns
push
or
sub
push
add
out
mov
push
dec
fidivl
fwait
loope
and
stc
icebp
add
imul
lock
jecxz
jb
lahf
ds
xchg
add
imul
iret
mov
adc
imul
jl
pop
es
aad
ljmp
pop
xchg
rcrb
mov
dec
fisttps
repnz
imul
mov
sub
xchg
ss
jae
adc
jecxz
or
test
push
jbe
in
ret
adc
push
mov
inc
mov
in
or
mov
xor
insb
sbb
outsl
hlt
test
jle
mov
or
sub
leave
adc
pop
mov
sar
jg
inc
lods
dec
mov
xchg
mov
int
and
aam
or
mov
lods
mov
xchg
in
fildll
orl
addb
mov
push
or
insb
std
sub
cmc
mul
cwtl
in
sbb
ja
xchg
gs
insl
lods
cmp
cltd
int3
push
push
fbstp
shlb
mov
inc
jb
aas
xor
test
sub
pop
decb
jge
or
aaa
add
inc
call
mov
mov
addb
enterw
shlb
in
out
adcb
std
scas
mov
dec
repnz
push
xchg
pop
jmp
retw
fimull
clc
das
scas
movsb
lods
popf
repz
or
mov
sub
mov
mov
in
cltd
aaa
push
inc
jg
sbb
mov
nop
cs
sub
roll
push
out
ja
addl
and
insl
jge
std
jg
pop
movsl
pushaw
jg
push
in
bound
push
frstor
dec
ffree
inc
in
out
enter
clc
movsl
push
push
jns
sub
jecxz
popa
mov
adc
aaa
icebp
pop
movsb
pop
or
adc
add
sahf
inc
scas
and
outsl
jmp
shll
movsl
adc
out
adc
dec
xor
lea
fildl
inc
sub
test
push
pop
movsb
jno
testb
sarb
arpl
lea
incb
std
mov
dec
loopne
inc
test
xchg
in
dec
dec
jmp
push
or
prefetch
add
inc
and
inc
push
loope
imul
adc
sbb
mov
in
cld
mov
jg
sbb
out
push
adc
inc
mov
push
test
xor
popa
fldenv
jb
test
shl
cld
pop
ds
ds
dec
loope
cmpsb
mov
dec
cmp
mov
and
test
inc
xor
pop
dec
adc
or
rcrl
adcb
sub
jo
ud0
jl
mov
adc
roll
inc
rcll
in
jb
push
xor
pmaddwd
das
sub
xchg
sub
add
add
inc
fwait
xor
test
dec
jle
push
ret
loopne
gs
data16
in
fildll
hlt
call
scas
or
mov
cmc
lea
in
jp
orl
nop
call
inc
push
out
xchg
arpl
mov
pop
fldt
adc
repz
fmul
roll
movsl
mov
jmp
in
les
aad
repnz
pop
outsb
fimuls
fidivrs
aam
lods
add
test
or
pop
mov
add
subb
jmp
jecxz
push
sbb
test
lods
sub
xchg
push
add
adc
add
adcb
sub
jo
fimuls
lret
out
push
dec
ret
adc
decl
fbstp
jno
test
jecxz
mov
dec
pop
shll
xchg
add
xchg
pop
ljmp
add
ret
in
mov
jmp
test
xor
cltd
popl
adc
pop
mov
push
mov
xchg
repnz
jmp
dec
addr16
mov
jge
or
jle
leave
mov
ret
push
mov
pop
imul
clc
sub
pop
pop
lds
ror
scas
pop
sub
xchg
and
popf
insb
aaa
inc
add
adc
sbb
lcall
ljmp
loope
and
shll
pop
dec
push
repnz
dec
imul
call
test
rclb
add
sti
xchg
pusha
mov
add
adc
notl
xchg
lcall
mov
sbb
jae
and
add
push
xor
jne
sub
mov
loopne
mov
sbb
mov
int3
bound
out
and
mov
xor
jle
xchg
jle
add
push
popa
sub
addb
jbe
push
fistpll
adc
subb
and
subb
sbb
aas
enter
jnp
lea
into
fdivs
pop
push
push
cmp
or
mov
sub
sub
fdivr
pop
scas
cmp
test
or
add
sti
adc
mov
ret
rclb
rcl
push
stos
mov
insb
sbb
bound
loope
and
jmp
mov
neg
int3
pop
jg
ret
cmp
fdivs
inc
stos
popa
dec
adc
rcrb
ljmp
mov
mov
cld
fidivrs
mov
xchg
inc
jb
push
mov
in
sbb
xor
dec
lea
add
jecxz
inc
xor
sub
ret
out
pop
dec
addb
out
mov
imull
sbb
pusha
push
ret
testl
mov
dec
ja
ljmp
pop
clc
or
push
cwtl
inc
pop
or
popf
lret
test
inc
and
jecxz
and
test
movsb
cmp
sbb
mov
test
mov
push
push
clc
outsl
cltd
js
shl
rolb
inc
daa
sbb
test
in
adc
sbb
mov
inc
into
fisubrl
test
aad
sbb
mov
sbb
cmp
addr16
sub
cli
ret
in
dec
mov
sub
mov
mov
lret
add
push
outsl
and
dec
sub
lds
out
cmp
ret
ss
jle
cmp
outsl
adc
rcll
in
cs
push
pop
inc
xchg
or
xchg
fiaddl
inc
mov
jg
sti
xlat
and
rcr
fimuls
imul
fistl
sbb
mov
cmp
lock
aad
mov
je
jns
imul
inc
add
in
push
test
push
loop
or
pop
call
push
out
mov
pushl
mov
pop
dec
lds
mov
repz
outsb
jp
cltd
push
negb
std
sbb
test
clc
mov
divl
outsl
insl
push
std
mov
cmp
icebp
cmpsl
push
and
xor
xchg
ret
jb
call
xor
cmpsb
stos
enter
ret
scas
mov
mov
enter
push
mov
daa
mov
scas
cs
pop
push
dec
out
xor
jecxz
sti
sub
mov
in
pop
decl
aad
les
dec
push
mov
cmp
les
jg
sub
enter
pop
mov
mov
cmp
xorl
mov
movsl
test
xchg
fs
enter
mov
enter
cmpsb
mov
into
add
xchg
jg
lcall
push
and
cmpsl
in
and
mov
pop
mov
mov
jns
out
cli
in
jmp
xor
in
dec
hlt
mov
lds
push
or
mov
jg
loopne
mov
lahf
shrl
xor
aaa
sbb
jb
jp
sub
add
rcll
and
xor
xchg
call
push
fildll
inc
pop
push
pop
and
in
mov
stos
jg
jecxz
mov
clc
mov
fimull
push
imul
push
pushf
out
sbb
sub
in
sbb
pop
push
js
loopne
push
out
cmp
mov
mov
cmc
test
pop
inc
dec
jae
lret
add
mov
std
inc
jg
jl
in
adc
push
or
movsb
loope
push
loop
xchg
clc
xor
or
hlt
lds
xlat
pop
and
jo
sar
ljmp
and
mov
movsl
add
add
and
cmp
inc
test
add
push
and
pop
adc
push
inc
ss
mov
cmpsl
lcall
mov
inc
mov
incl
sub
xor
repz
mov
sub
in
or
dec
in
lcall
js
push
ljmp
cmc
gs
mov
fidivl
clc
adcb
and
nop
mov
dec
mov
iret
adc
and
mov
lret
xorl
cltd
adc
inc
ds
outsb
mov
repz
add
cmc
into
and
fmull
pop
loope
mov
mov
jne
mov
bound
mov
dec
push
mov
mov
fldt
rorl
pop
or
faddl
jo
sub
xchg
mov
xchg
sub
xchg
jne
jl
je
push
mov
mov
mov
add
movsl
pop
mov
inc
repnz
add
ss
mov
cmp
jp
adc
dec
cmp
mov
sarl
cmc
das
cld
push
mov
xchg
pusha
ds
pop
clc
xor
loopne
adc
cwtl
nop
mov
lock
outsl
sbb
mov
add
fdivl
mov
add
pop
fdivrs
test
push
inc
and
xorb
inc
in
pop
rorb
cli
mov
insb
popa
in
mov
stos
aas
clc
push
imulb
inc
fisttpl
push
int
jnp
stos
mov
cmp
mov
pusha
cmp
adc
and
cld
leave
mov
cmpb
inc
adc
pop
rorl
pop
clc
lret
rcrl
imul
out
sbb
adc
loopne
cmp
cmpsb
icebp
adc
popa
loopne
movsl
lcall
cmp
mov
pushl
test
xor
xor
and
jns
dec
cmp
cmp
sub
fstpt
inc
jl
jecxz
aad
pop
popf
adc
jo
jg
rcr
bound
inc
sub
push
jge
jge
xchg
je
roll
xchg
das
mov
cmpsl
test
fs
sub
into
push
roll
push
ljmp
roll
add
lret
pop
adc
xor
mov
in
xchg
xor
push
fwait
incl
pop
int
jo
clc
into
loop
push
leave
pop
rorl
test
or
pop
pop
cld
add
mov
fidivl
push
adc
fldt
aad
jnp
movsl
test
les
cltd
sbb
or
pop
mov
xor
or
and
mov
rcrb
xor
imul
lods
add
lret
jne
mov
call
add
push
mov
fcompl
into
aam
outsl
sub
jmp
aam
pusha
push
xchg
push
or
rclb
cmp
inc
pop
cld
repz
sub
imul
sbb
sti
cmp
push
push
movsl
mov
cli
test
lcall
decl
xorb
popl
daa
loop
ds
lods
dec
in
inc
sub
ret
dec
sub
stos
xchg
jb
test
mov
outsl
punpckhwd
pop
jp
and
mov
call
rclb
cmp
cltd
aad
test
mov
loop
loope
xor
add
inc
insl
call
pusha
mov
shrb
and
jbe
movsl
int
xor
mov
mov
arpl
inc
pop
push
mov
push
fldt
insb
or
pop
scas
push
lahf
and
out
mov
fldz
dec
sbb
lods
lahf
mov
cmpsb
push
fs
clc
or
in
daa
cmc
test
adc
jge
out
jb
inc
push
push
lds
inc
xor
push
pusha
ucomisd
inc
notb
sbb
icebp
or
add
or
jbe,pn
scas
sbb
outsl
mov
push
add
lahf
or
add
cmpl
add
jnp
je
aaa
stos
inc
ja
or
fisttps
fistl
xchg
sbb
inc
leave
add
out
xchg
mov
xor
cmc
push
mov
out
pop
or
mov
cmp
mov
cld
fcmovnb
lret
and
push
and
sub
mov
les
adc
in
cmpsb
inc
pop
daa
xor
mov
add
jbe
cltd
adc
inc
cmpsb
gs
rorl
scas
sub
imul
cld
xor
xlat
inc
add
call
jno
push
mov
pop
jl
nop
icebp
icebp
jnp
cmpsl
movsb
add
add
call
mov
xchg
sub
push
sar
inc
mov
test
test
mov
mov
adc
lods
sbb
imul
mov
or
and
mov
shll
cmpsl
ja
jle
nop
adc
mov
and
adc
mov
cmpsb
dec
popf
lds
or
or
push
fcomp
loop
pusha
aas
ret
loope
dec
mov
jo
les
sbb
lods
pop
dec
jg
xor
cs
mov
mov
xchg
nop
pop
mov
addl
lods
lock
adc
or
mov
add
adc
push
enter
mov
cmp
xchg
orb
xchg
add
loope
and
jg
adc
and
jge
and
std
sti
push
incb
insb
and
sub
stos
pusha
mov
icebp
push
aam
ja
scas
loope
push
ds
mov
inc
sub
add
inc
insb
dec
push
imul
pop
mov
test
testb
fists
sbb
out
repz
in
jge
popf
inc
cmc
in
pushl
sahf
mov
pop
andl
stos
mov
push
cs
sahf
jl
dec
popf
push
ds
leave
add
sbb
or
add
rcrb
sbb
decb
js
lret
cltd
cli
in
add
dec
and
pop
loop
es
shl
outsb
push
es
loopne
in
jg
or
lds
aad
dec
insl
sbbl
push
out
outsl
test
inc
je
cltd
jg
mov
inc
pop
loope
jb
int
aaa
xchg
inc
rcrb
push
les
popa
sbb
sarl
lock
dec
sbb
and
xchg
push
jb
or
outsl
mov
cmp
dec
add
clc
daa
mov
popa
mov
cmp
loopne
dec
adc
push
push
push
cmpl
pop
aaa
fisubrl
mov
cmp
pop
fwait
movsl
sub
add
loopne
pop
enter
push
mov
add
out
ljmp
push
adc
test
out
jmp
cmp
ljmp
data16
and
cmp
test
call
sub
add
add
mov
je
test
pop
movsb
dec
fiadds
xor
dec
out
sub
sub
icebp
aaa
mov
rcll
mov
stos
xchg
sub
hlt
jbe
loop
movsl
xchg
sub
mov
and
repnz
popa
outsl
or
call
iret
pusha
dec
arpl
push
sub
sbb
ja
scas
sub
pop
sub
ret
jge
adc
jbe
mov
sahf
in
and
mov
aaa
enter
das
xchg
inc
adc
pop
fidivl
test
cmp
cmp
push
inc
daa
mov
and
xchg
and
fsts
lcall
inc
xor
mov
cmp
or
dec
inc
orb
or
adcb
jl
xchg
mov
mov
scas
xchg
adc
test
outsl
jg
push
inc
adc
insl
xor
icebp
jge
add
pushf
add
repz
je
push
das
mov
je
call
inc
inc
sbb
rclb
sbb
shr
push
mov
xor
inc
jmp
insb
pop
jl
adc
mov
sahf
push
pop
add
cwtl
and
push
mov
pop
cs
nop
test
in
pop
aaa
mov
mov
clc
adc
push
pop
and
inc
repnz
pop
push
clc
jmp
sbb
pop
imul
aam
mov
cltd
enter
cwtl
fldl
mov
mov
and
pop
test
cmpsb
mov
rorl
mov
inc
outsl
outsl
sub
jge
sahf
cmp
add
inc
roll
sbb
fisttps
lahf
cmp
pushl
cmp
xor
inc
in
adc
rcrl
insb
pop
movsl
adc
in
pop
mov
sub
adc
sub
or
mov
add
aam
jg
fadds
mov
lods
int3
xchg
leave
mov
insb
adc
jno
jo
pop
adc
mov
pushl
push
adc
rcll
mov
adc
lods
loopne
adc
cmp
xor
dec
pushl
insl
cmp
jne
add
and
pop
outsl
fistl
inc
fidivrs
out
mov
mov
shll
aaa
pop
clc
dec
ljmp
or
sbb
pop
add
mov
mov
cmpsb
into
stos
add
pop
sub
enter
push
mov
js
cmpsb
lock
pop
fildl
test
lods
popf
loopne
lea
push
mov
nop
rorl
rcrb
sub
adc
ja
sti
cmp
mov
inc
jle
sahf
test
push
sub
mov
sub
incl
sbb
mov
xor
inc
mov
jl
push
fwait
inc
shr
rorb
sub
mov
jmp
jbe
andb
loop
push
cmp
incb
or
pop
sub
adc
lods
ljmp
ret
fistps
dec
adc
ds
jecxz
aas
pop
ret
mov
loop
lcall
arpl
lods
jg
pushl
push
mov
cmp
and
sbb
call
mov
cmp
add
jbe
xlat
cmp
imul
sub
push
pop
clc
mov
adc
outsb
sbb
ds
pop
mov
icebp
sbb
rclb
int3
dec
out
and
aad
outsb
mov
jne
lahf
or
and
dec
jp
lahf
decl
jg
push
je
test
sub
jl
repnz
push
inc
adc
mov
inc
sbb
sbb
xorb
mov
lods
movsl
mov
push
mov
pushf
repnz
and
inc
dec
mov
mov
and
inc
lods
imul
cmpb
xchg
cli
es
mov
int
iret
inc
mov
push
dec
test
test
pop
out
imul
pop
cld
sbb
leave
dec
mov
jae
pop
fcomip
mov
addr16
mov
or
xor
loope
inc
scas
cld
mov
inc
sbbb
adc
pop
pushl
add
xor
in
and
loop
sbb
sub
add
xchg
in
or
push
movsl
cltd
sbbl
pop
dec
rolb
inc
xor
cmp
xchg
lcall
add
jle
or
rcl
cs
lcall
mov
das
xor
push
xor
jg
iret
mov
daa
cmp
mov
cs
stos
nop
jne
hlt
jg
mov
cli
pop
rcrl
mov
mov
lods
aaa
lock
sbb
lock
cld
sahf
mov
sbb
push
xor
push
mov
dec
mov
dec
pop
add
inc
cmp
rcrb
mov
and
push
push
fildll
bound
lcall
mov
cmpsb
lods
cs
dec
adc
test
dec
inc
sbb
or
imulb
fiaddl
and
cmp
ljmp
cld
lea
pop
popf
dec
jmp
xor
adc
pusha
inc
inc
xor
push
xchg
push
mov
lock
lods
adc
cmp
in
das
pusha
dec
cmp
mov
xlat
adc
inc
not
xchg
mov
mov
out
rcrb
mov
notb
xor
cmp
inc
lods
pop
mov
test
cmpsb
xlat
mov
inc
or
push
add
out
cli
and
sbb
dec
rorl
xchg
cmpsb
cmp
push
mov
xorl
pop
daa
or
mov
inc
iret
add
enter
xchg
cli
dec
cld
adc
call
aaa
cs
dec
das
out
outsl
popa
push
jmp
out
cmovo
neg
lea
mov
pop
sbb
loop
loop
push
cmc
stos
jl
sub
mov
add
dec
movsb
ja
mov
sub
xchg
and
lods
dec
decl
push
sub
shl
das
add
inc
stos
mov
test
pop
test
mov
xor
leave
loopne
sub
loopne
mov
clc
mov
cmpsb
jb
sub
clc
jp
or
pushl
ds
cmp
mov
or
sbb
mov
testl
lea
mov
dec
jo
icebp
cmp
cmp
sbb
mov
test
push
jp
daa
add
mov
inc
cmp
sub
xchg
add
outsb
hlt
aam
xor
cmp
lcall
out
lcall
repnz
or
fistpll
in
adc
inc
out
aaa
jl
dec
xor
xchg
subb
stos
mov
mov
lea
cmc
pop
mov
lock
ret
push
and
clc
test
icebp
inc
and
mov
addl
addr16
out
pushw
mov
into
icebp
jne
xor
in
ljmp
inc
jle
ret
nop
or
int
dec
outsl
cwtl
push
dec
mov
inc
jnp
cmp
pop
dec
call
cmp
add
jnp
inc
jno
xchg
sub
test
dec
pop
fildl
cli
lods
or
sbb
mov
movsb
push
push
repnz
bound
push
aad
jbe
jecxz
mov
mov
clc
dec
loopne
push
xor
xor
jp
lods
sbb
adc
inc
mul
test
fs
lea
shlb
xor
jg
or
fadds
push
sbb
ja
fnstsw
mov
jnp
pop
aad
cmp
test
pushf
sub
add
dec
insl
fs
inc
push
xor
lea
jp
enter
js
xchg
mov
or
fadds
adc
outsb
std
push
sbb
repz
sub
mov
ljmp
pushl
pushf
addr16
cmp
jle
add
add
jmp
popf
mov
mov
jl
jo
ja
testb
aam
add
loopne
or
in
adc
jnp
out
pusha
jo
inc
icebp
sbb
jnp
xor
pop
mov
or
idivl
movsl
jg
push
loope
mov
fsubrs
sti
jnp
test
push
mov
jmp
mov
or
mov
sbbl
and
hlt
fwait
aas
call
sahf
orb
aas
cmp
mov
fsubrs
std
mov
and
mov
and
incl
iret
stos
inc
jecxz
sbb
add
clc
or
pop
clc
jg
mov
lahf
xchg
sub
jge
dec
add
lds
js
xor
pop
js
shrl
test
sbb
and
outsb
rcr
jl
push
mov
rorl
push
pop
stos
jae
and
pop
push
or
in
adc
call
inc
das
add
mov
aam
mov
push
mov
add
ljmp
add
and
or
sbb
pusha
data16
aaa
divl
add
mov
mov
dec
sbb
jbe
add
aaa
inc
jnp
fcoms
cltd
sahf
or
std
fists
pushf
js
xor
int
out
test
outsl
decl
sub
and
push
mov
cmp
and
add
test
and
pop
add
or
xchg
cld
jns
adc
ficoml
fcmovnu
sarl
jg
and
mov
xchg
jno
in
mov
cld
mov
dec
dec
cld
or
dec
dec
loopne
mov
dec
or
jle
pop
pop
jne
aam
idivb
inc
push
adc
push
jmp
loopne
jne
clc
inc
dec
mov
pop
dec
pop
mov
jnp
push
testb
push
and
and
mov
inc
push
push
add
repnz
push
cs
loop
dec
mov
mov
adc
sbb
and
pop
xchg
push
inc
or
mov
cs
push
andb
imul
test
inc
jbe
sbbb
pop
clc
stc
cmp
insb
or
mov
stc
adc
insl
dec
mov
adc
adcl
sub
daa
int
sti
mov
push
mov
add
xchg
lods
add
and
pop
pop
pop
fisubrl
or
add
ja
aam
int3
sub
stos
mov
push
xchg
add
rorl
outsl
icebp
ljmp
mov
cwtl
fildll
inc
imul
mov
xchg
and
bound
xchg
rolb
push
jno
cmp
fld
xchg
sbb
sti
adc
cmpsb
jle
xlat
xor
testb
bound
loope
aad
jbe
movsb
inc
aam
int
push
jae
push
adc
out
fsubr
cmpsb
movsl
movsb
stc
adc
sub
inc
push
movsl
in
cmpb
jg
outsl
test
divb
lret
or
sti
outsl
sub
cs
in
in
cmp
mov
xchg
jecxz
imul
jbe
jecxz
roll
and
push
movsb
inc
fsub
xchg
adcl
sub
push
mov
icebp
adc
mov
adc
add
mov
mov
pop
inc
sbb
jmp
into
mov
out
dec
inc
mov
lods
add
pop
aam
jg
inc
lods
mov
jno
xor
push
add
add
pop
fisubrl
stc
or
mov
out
aas
lods
inc
mov
mov
lock
les
cltd
lods
sbb
shlb
xchg
std
call
outsl
paddsb
dec
push
lret
in
mov
cld
std
add
mov
mov
mov
cmp
test
push
les
add
xchg
push
mov
jne
sbb
jbe
inc
mov
cmp
cmp
adc
mov
push
pop
inc
test
int
mov
inc
pop
jg
mov
jbe
stos
fldenv
mov
sbbl
pop
movsb
std
outsl
clc
jg
fs
or
cltd
int3
inc
mov
int
cli
mov
cwtl
test
push
aaa
xchg
in
movsb
sub
outsl
add
cmp
in
lods
or
outsl
adc
in
pop
ds
mov
sub
movsb
lret
decb
fldt
and
push
in
adcb
stos
lcall
test
mov
mov
sub
lret
ljmp
aad
sub
mov
or
int3
adc
mov
or
push
idivl
push
cmp
inc
popf
push
jp
bnd
cs
cmp
mov
inc
adc
test
test
jle
aam
mov
jl,pt
adc
or
dec
lret
jl
mov
cmpb
ljmp
push
jge
sub
adc
xchg
js
or
test
call
mov
add
fwait
daa
in
push
inc
ds
and
mov
mov
sub
push
sar
xchg
and
cmp
pop
mov
fwait
add
xor
cmp
xchg
xor
rcrb
and
jle
pop
nop
dec
es
xor
sti
out
push
add
and
cmp
cli
and
mov
pop
push
ljmp
pop
mov
in
mov
fidivrs
mov
sub
outsl
sarl
mov
add
mov
and
imul
fiaddl
jo
addr16
mov
pop
clc
mov
cmp
inc
push
jmp
dec
xor
aad
das
xchg
inc
xor
incb
pop
dec
lea
adcl
pop
mov
ljmp
sub
cmpsl
push
adc
or
popa
xchg
push
cmp
fmuls
dec
push
pop
mov
incl
xor
xor
jle
xchg
shl
dec
mov
pushf
dec
adc
mov
or
mov
repz
jecxz
push
inc
sbb
mov
sbb
in
or
stc
fadd
or
pop
jl
and
pushf
sbb
mov
dec
add
mov
push
push
mul
mov
sub
gs
mov
ret
jge
sub
scas
sub
add
xchg
jg
pop
mov
and
arpl
insb
xor
mov
fs
lcall
dec
inc
xchg
popf
mov
pop
inc
mov
mov
pop
dec
adc
cmc
scas
inc
sub
aas
jmp
sub
dec
ds
push
cmp
sub
cmc
ffreep
ds
sbb
sti
or
xorl
lock
in
mov
clc
dec
sbb
push
add
mov
push
mov
or
pop
data16
dec
js
and
rcll
jbe
xor
aas
mov
mov
dec
aam
xor
or
xor
cwtl
rolb
call
jg
xchg
inc
xchg
out
push
aaa
or
nop
and
jo
icebp
bound
mov
les
imul
xlat
jl
fimull
cmpsb
fnstenv
or
outsb
inc
mov
jo
mov
fsubl
fadds
mov
stc
mov
repnz
add
sub
sar
jb
and
lds
lock
filds
lock
or
test
clc
xchg
add
icebp
lret
hlt
stc
idiv
inc
push
push
jle
fcomip
pop
loopne
fiaddl
push
push
mov
mov
loopne
mov
imul
pop
nop
pusha
aas
and
movsl
cs
jns
rorb
mov
adc
fisubs
or
adc
mov
lock
jg
push
in
xor
mov
cltd
lea
pop
cmp
sub
loop
jno
and
adc
shl
or
shl
and
inc
and
adc
sub
in
rcl
stos
push
sub
test
pop
scas
pop
mov
or
mov
aaa
sbb
dec
aaa
ror
jne
mov
call
cli
mov
inc
adc
and
jns
push
inc
jecxz
sbb
dec
jno
fisubl
pop
arpl
ret
jg
mov
xor
xchg
cmpsb
mov
fldcw
std
push
and
movsb
stos
std
mov
push
dec
push
into
adc
push
xchg
push
mov
test
sbb
mov
or
lock
arpl
sbb
cs
das
nop
jns
add
ffreep
fistl
inc
rorb
sub
sub
xchg
and
pop
in
ffreep
in
xor
pop
cmp
mov
cmp
mov
fdivr
push
sbb
pusha
dec
and
inc
mov
and
aaa
fcmovnbe
leave
or
jbe
cmpsl
jmp
hlt
adcb
add
decb
loop
push
dec
mov
and
and
cld
retw
push
iret
popa
flds
stos
xor
dec
sub
test
sbb
call
and
mov
adcb
push
imul
mov
mov
push
mov
pop
sbb
outsl
std
add
jb
out
aas
push
push
bound
out
dec
jecxz
loopne
jg
lods
sahf
adc
inc
lret
popf
cmpb
lods
and
popa
and
mov
aaa
jle
pop
xor
imul
hlt
adc
std
or
arpl
mov
xchg
dec
dec
sbb
addb
in
lea
adc
add
movsl
jecxz
into
dec
pop
and
add
into
or
push
imul
mov
call
mov
dec
lcall
aaa
outsb
adc
pop
mov
xor
and
insb
dec
insl
sub
jg
cmpsl
cltd
mov
cs
jb
push
insb
xchg
jb
jp
pop
mov
cmc
add
out
push
sti
lods
xor
lcall
mov
xor
inc
adc
pop
aad
sub
inc
stc
pop
or
lods
push
cmp
popa
push
inc
cmpsb
push
and
adc
or
fs
mov
rolb
jno
cmp
xchg
loopne
lds
aas
sub
call
lds
mov
add
cmpsb
and
ljmp
clc
jl
cmpsb
mov
mov
shlb
mov
inc
out
jns
mov
popf
sbb
test
arpl
and
add
xor
je
sahf
push
sub
test
push
and
outsl
incl
pusha
enter
pusha
jge
sub
jmp
push
inc
pop
mov
lock
jmp
push
lret
aad
out
fdivrs
xchg
outsl
movsl
js
fs
inc
ljmp
pop
std
cmp
dec
mov
subl
add
xchg
into
fnstenv
mov
outsl
ds
aas
mov
adc
sbb
xchg
fldt
xor
or
or
and
lock
or
lret
ret
push
xchg
xor
xor
cmp
arpl
int
jge
dec
mov
jno
shl
test
dec
pop
stos
jns
hlt
in
call
loop
addr16
cmc
cs
mov
inc
mov
lock
cltd
out
xchg
adc
iret
inc
dec
jae
jbe
adc
lcall
mov
adc
cmp
fbstp
outsl
fcoms
sub
shll
lock
add
and
xchg
pusha
xor
jae
xor
lods
mov
push
jno
push
cli
pop
int3
ret
mov
dec
sbb
rcll
enter
xchg
sub
shlb
scas
inc
aas
mov
dec
incl
pop
fsubs
mov
xchg
popa
lock
incl
sub
mov
int
or
or
sub
sub
mov
cmc
pop
lret
hlt
jns
push
fdivl
outsl
cld
cmp
jns
push
scas
outsb
nop
add
loopne
mov
and
xorb
push
mov
les
mov
test
mov
pop
shl
inc
or
jb
fwait
jb
push
subl
fs
ret
cmp
orb
mulb
push
stos
incb
mov
mov
mov
andb
pop
sbb
sar
mov
nop
sbb
dec
test
mov
dec
push
jbe
or
pop
clc
mov
movsb
cld
jmp
xlat
add
and
sub
lret
mov
into
repz
cli
xorl
daa
cmp
xchg
push
mov
movsl
and
mov
icebp
decl
push
mov
hlt
and
jge
fs
sbb
cmp
cs
add
outsb
cmc
mov
sbb
nop
pop
cmpsl
push
xchg
mov
sub
sub
movsb
xchg
in
inc
pop
aaa
cli
lahf
iret
ficoms
in
leave
fistps
xchg
pop
call
add
jns
xor
aam
jno
or
add
loop
or
add
lahf
xorl
xchg
xor
outsl
rcr
dec
cmp
jae
sbb
mov
xor
mov
pop
test
in
mov
mov
mov
test
sub
sbb
xchg
sbb
push
sub
dec
pop
inc
fwait
sti
inc
das
mov
cmp
fistpl
testl
push
lcall
mov
leave
lods
pop
in
push
mov
imul
fisttpl
bound
inc
mov
pop
adc
jnp
mov
jbe
std
push
mov
xor
dec
cli
mov
and
mov
or
add
pop
mov
imul
or
clc
negb
push
sbb
das
out
outsb
cli
stc
ss
push
std
stos
mov
cmc
icebp
cmp
jmp
adc
shlb
cld
jg
jb
or
or
jmp
jb
push
fcmovbe
icebp
mov
jae
jl
insb
data16
xchg
outsb
push
cli
adc
repnz
sarb
pop
xchg
and
dec
add
pop
xor
mov
andb
mov
fistpll
movsb
sbb
outsl
xchg
dec
push
leave
xor
inc
push
lcall
aam
andb
mov
addb
loope
pushf
xor
test
sar
stos
js
shrb
ljmp
cmpsl
stos
rol
sti
decl
xchg
roll
mov
in
div
add
and
sti
out
dec
sarb
inc
jle
outsl
dec
sarb
les
idivl
stos
out
fsubrp
mov
or
int
push
jg
test
loope
inc
or
lods
scas
mov
test
cmp
test
rorl
insl
rorl
mov
mov
fs
mov
in
mov
cmc
shrb
shlb
pop
sub
adc
dec
mov
push
inc
inc
push
dec
pushf
lahf
pop
and
movsl
nop
andl
or
add
cli
xlat
mov
cld
adc
pop
mov
jno
scas
jg
dec
cmp
xor
and
mov
push
mov
xor
add
dec
stos
adc
aad
push
dec
inc
jo
cmp
pop
push
cli
ss
scas
popa
adc
loopne
shl
cmp
push
or
fisttps
and
cmp
cmpsl
adc
cld
incl
xor
js
push
ficoms
xchg
mov
clc
ljmp
push
enter
push
add
dec
pop
fs
mov
orl
and
xchg
add
xchg
pop
xchg
mov
xor
ljmp
xorb
xor
adcb
adc
or
das
in
dec
mov
pop
bound
sub
mov
orb
inc
push
gs
jg
clc
push
inc
xchg
xchg
sub
xchg
pop
jge
mov
cmpsb
cmpsb
popf
cwtl
pop
cmpsl
stos
mov
movsl
fsubrs
lods
adc
gs
and
cmp
into
dec
mov
adc
mov
xchg
clc
push
mov
dec
dec
lea
mov
daa
push
cmp
adc
pop
in
and
xlat
dec
jg
cld
fldl
jo
cmpsl
lock
daa
xor
pushl
add
icebp
jp
adc
ss
or
mov
mov
jb
sub
push
mov
cmp
adcb
out
movsl
repnz
mov
fstpt
cmc
mov
push
and
pop
add
mov
lret
test
jecxz
icebp
nop
inc
std
lcall
pop
cmp
mov
hlt
jecxz
or
jns
mov
inc
jge
inc
cmpsb
test
in
nop
pop
mov
pop
dec
lds
mov
adc
in
fnstsw
mov
jl
stos
push
mov
mov
jg
add
jns
fnsetpm(287
mov
jp
iret
lret
lds
pop
call
mov
inc
clc
mov
inc
sub
ret
mov
add
or
addl
mov
sbb
ret
fwait
sarl
lahf
fsts
mov
loopne
repz
test
orl
das
mov
pop
or
inc
addr16
pop
aas
jo
jo
cmp
clc
and
jle
cmp
adc
nop
add
addr16
push
inc
mov
stos
das
fisttpll
std
push
xchg
js
xchg
and
decl
push
adc
mov
fucomi
add
test
pop
mov
enter
dec
scas
aam
pop
std
add
or
lcall
icebp
push
pop
ds
jns
mov
jl
xchg
es
xor
mov
pop
lcall
movsb
cs
xor
inc
sti
scas
sbb
jns
adc
pop
jo
add
aas
test
push
into
dec
enter
add
stc
mov
call
inc
xlat
fcomp
sahf
or
dec
push
jp
or
das
out
dec
xlat
clc
scas
push
mulb
std
ja
xor
mov
jge
jb
mov
xchg
push
aad
or
and
jecxz
dec
ja
repz
mov
in
adcb
test
push
leavew
fildll
xor
daa
mov
xor
add
push
movsl
clc
push
inc
lcall
rcrb
shr
cmpsl
add
add
xor
dec
adc
adc
mov
arpl
rorl
pop
xor
cmp
ss
jb
sti
scas
cmp
adc
fimuls
sar
mov
xchg
inc
jl
adc
andl
imul
ljmp
sub
push
inc
mov
shlb
jns
or
push
sub
aad
mov
lret
push
pushl
or
pop
inc
or
adc
sub
sub
and
hlt
pop
fldl
inc
fwait
test
push
lret
sti
aaa
fidivl
sbb
push
mov
les
xchg
cwtl
call
or
mov
pop
stos
inc
sbb
std
mov
jecxz
jg
lea
or
in
mov
adc
add
das
mov
fs
add
decb
mov
and
mov
ja
hlt
mov
dec
adc
dec
mov
adc
fsubs
cltd
movsl
cltd
add
add
push
sbbb
push
hlt
push
push
add
call
shrl
pop
inc
push
outsl
aaa
mov
and
cwtl
or
fcmovne
inc
repz
xchg
orb
pop
cmp
iret
std
cs
outsl
cld
test
popf
scas
xchg
stos
stc
inc
addr16
mov
loope
aas
add
add
sti
cmp
orb
mov
data16
jmp
push
mov
cmp
mov
cmp
arpl
dec
sbb
in
fidivrl
xor
add
sub
lods
xlat
push
cmp
cmp
push
cltd
sub
xchg
mov
fs
mov
sub
add
sbb
les
roll
cmp
cs
adc
push
xchg
push
inc
leave
cli
push
mov
cli
incb
call
adcl
or
add
pop
js
lods
das
mov
inc
dec
rcll
loop
cwtl
loop
fisttps
jnp
addl
mov
scas
and
lret
push
mov
mov
ds
cmp
ds
test
jle
ljmp
je
sub
mov
inc
mov
xor
adc
add
filds
test
xchg
test
and
fldenv
mov
movsl
loopne
cli
adc
dec
and
cmpsl
push
pop
pop
cwtl
pop
out
loop
sub
sbb
inc
rclb
jle
test
ret
jmp
or
pop
pop
mov
mov
mov
cli
push
or
lods
fdiv
into
xchg
mov
pop
push
cltd
enter
std
and
mov
or
sbb
ljmp
adc
push
lock
lahf
adc
out
push
or
xchg
cmp
jno
mov
inc
popa
mov
mov
mov
lret
rol
mov
lock
inc
punpckhbw
push
js
mov
loope
mov
dec
rcrb
pop
lods
stos
pop
adc
ffree
jg
xor
pop
test
push
jmp
lods
lea
pop
rolb
clc
jno
mov
fiaddl
push
cmpsl
or
sub
lods
push
test
inc
inc
push
lret
mov
sbb
xchg
push
inc
push
das
cmc
in
mov
test
xor
inc
mov
dec
js
inc
imul
imul
dec
subb
jbe
sbb
add
and
xor
inc
pop
outsb
sub
loop
stos
add
pop
das
or
xlat
lds
sbb
addr16
jns
daa
jbe
mov
pop
pop
clc
inc
or
mov
out
sarb
pop
or
xchg
mov
in
pop
sub
test
pop
dec
popf
sbb
je
pushl
dec
arpl
xchg
pop
jg
push
cmpsb
lds
cmpsb
jb
mov
movsl
test
push
stos
xlat
push
push
push
dec
inc
pop
dec
jecxz
push
sub
aaa
fisubs
cmc
out
adcl
test
push
dec
shrb
pusha
sub
ljmp
xor
ljmp
movsl
andb
mov
lret
cmc
sbb
ficoms
movsb
loope
adc
dec
add
mov
dec
sbb
or
sbb
push
mov
push
dec
add
icebp
pop
cli
push
xchg
xorl
lods
int
xchg
stos
pop
sub
sub
loope
jg
or
orl
sbbb
pop
ret
jle
ficoml
inc
testb
inc
xor
push
mov
push
xor
leave
not
pop
push
in
test
fadds
or
mov
mov
cli
dec
mov
or
push
mov
lock
pcmpeqw
dec
enter
jo
cmp
nop
push
imul
dec
imul
xor
addb
mov
in
jl
idiv
out
or
jl
lahf
push
test
and
enter
push
lods
lds
rorl
push
cltd
pop
jmp
das
mov
sbb
popf
sub
icebp
data16
push
pop
xchg
and
mov
addb
jo
push
pop
lea
add
push
cli
sbb
adc
mov
ret
push
push
stc
mov
mov
shll
inc
mov
xchg
ficoms
cmp
adc
arpl
andl
adc
xor
sbb
test
and
adc
jle
stos
mov
in
sbb
push
mov
pop
loopne
ljmp
mov
mov
pusha
hlt
mov
outsl
std
call
xchg
or
cmpsb
orl
dec
addr16
movsb
add
xor
add
lea
inc
in
mov
ret
or
outsb
aad
and
je
adc
xor
insl
icebp
enter
incl
insb
fimull
inc
xchg
xchg
push
inc
jb
inc
scas
test
adc
mov
scas
shrl
repz
lds
insl
pop
mov
lcall
cmp
push
adc
in
push
and
insl
mov
leave
cwtl
aam
fsts
adc
aaa
mov
bound
pop
sbb
dec
ljmp
xor
std
pushl
clc
leave
adc
fimuls
inc
push
fsubp
andb
xlat
cs
sbb
adc
movsl
subb
ljmp
ret
mov
enter
rcll
pushl
xor
sarl
sbb
and
sar
shll
outsl
insb
push
test
subl
sbb
xor
aad
lods
jns
aas
ja
inc
incl
insb
and
popl
xor
lret
andl
shrl
mov
or
call
arpl
mov
leave
inc
aas
fldl
in
sbb
cld
ja
mov
jg
js
push
sbb
push
mov
scas
sbb
lods
leave
mov
mov
mov
hlt
mov
jb
loope
or
inc
add
adc
xorl
fistpl
and
or
loope
test
es
rorb
push
movsb
orl
in
jge,pn
stc
adc
int3
jno
cli
outsl
rorl
add
or
shlb
call
cmp
push
xchg
repnz
cli
adcl
testb
sbb
sbb
add
ret
xor
lods
loope
push
adc
mov
cmp
sti
push
addps
inc
or
push
lock
lcall
cld
pop
cmp
fsub
into
mov
add
mov
incl
sub
mov
jl
cmp
ljmp
stos
pop
into
inc
bound
and
mov
mov
ret
outsl
pop
mov
incb
add
lods
sub
repz
out
jmp
lcall
loope
push
dec
adc
inc
hlt
lods
and
inc
cmp
daa
in
mov
test
xchg
jp
daa
mov
int3
aaa
sub
lock
std
push
mov
sub
push
or
xchg
int
adc
adc
add
ljmp
mov
and
mov
hlt
adc
nop
mov
loopne
add
inc
ffreep
push
lcall
jg
jbe
rolb
mov
bound
rclb
stos
push
fistpll
inc
data16
insl
iret
ds
dec
inc
test
jmp
call
dec
mov
mov
mov
rorb
and
pop
sti
cmp
push
push
mov
pop
es
outsl
rorb
lds
inc
mov
and
xchg
sub
inc
loop
mov
add
adc
xchg
popa
jmp
dec
aaa
ss
std
outsb
shll
push
shll
pop
cmpb
inc
mov
es
clc
movsl
or
addb
xorb
pop
adc
push
pop
mov
ljmp
lock
jg
jge
stc
call
data16
jno
scas
inc
push
lods
subb
fwait
clc
je
lock
mov
js
jge
push
pusha
out
loopne
call
bound
divb
mov
push
xor
and
scas
xor
scas
mov
dec
rol
mov
fistl
data16
and
or
ds
js
movsl
pop
leave
bound
sbb
fsubl
outsl
pop
js
std
lods
and
jle
shr
sti
ret
or
jb
daa
in
xor
mov
call
jmp
out
dec
rcrb
loop
sti
jo
cmp
ret
dec
fcmove
int
inc
inc
pop
clc
jmp
aas
cld
out
xchg
out
ljmp
in
and
es
cmpsb
bound
sub
jae
test
sub
pop
rorl
jmp
outsb
mov
sbb
fldl
lcall
mov
int3
sbb
and
lcall
call
inc
dec
mov
sbb
js
cltd
inc
jns
dec
leave
mov
ret
mov
xchg
sub
jo
mov
sbb
cltd
sbb
gs
jge
inc
je
jp
cmp
pop
and
roll
test
sbb
aaa
and
test
stos
cmpsl
jno
jo
sbb
or
pop
cli
mov
in
jmp
idivb
stos
loope
jg
loope
push
jl
adc
out
xor
sahf
cld
push
xchg
loopne
sub
dec
dec
or
adc
cmc
mov
je
mov
sti
inc
fstps
jae
ljmp
pop
fs
inc
jo
pop
std
ret
es
adc
out
add
and
fists
stos
mov
xor
mov
ja
xchg
sub
test
lret
jg
dec
or
bound
mov
das
mov
and
push
xchg
mov
out
call
inc
jno
scas
sbb
cli
stos
rorb
sub
inc
ss
lcall
call
pop
in
mov
add
lock
iret
dec
adc
add
movsl
cmp
adc
hlt
xchg
incl
test
xchg
sarl
and
in
jmp
fwait
gs
les
lcall
loop
stos
and
fcoms
andl
cmp
testl
fisubrl
or
cmpl
out
test
mov
and
mov
test
push
andb
in
incl
mov
jge
and
sahf
push
and
xchg
fiaddl
int3
mov
cltd
pushf
cmp
cmp
sub
jg
mov
mov
xchg
jns
sbb
loope
call
inc
and
clc
lods
and
add
std
jl
sub
xor
xor
aad
jae
mov
sahf
pop
jb
sub
and
inc
mov
push
push
inc
inc
mov
dec
inc
incl
or
sbb
stos
xchg
mov
fcmovne
scas
mov
pop
rolb
xor
jbe
and
std
aaa
fisttpl
dec
aam
add
insb
lret
cli
or
push
push
stos
fistps
mov
ss
pop
mov
call
cli
push
or
bound
inc
sahf
mov
cmpsl
inc
je
std
push
sarb
mov
cli
xchg
addl
test
in
icebp
mov
clc
pop
and
push
dec
push
in
in
fsub
and
mov
je
das
add
mov
and
lods
std
jg
inc
adc
xor
mov
mov
daa
ljmp
adc
mov
pop
and
pop
sub
lea
jg
or
mov
cmp
into
lahf
out
mov
call
mov
push
fs
adc
sbbb
decl
shl
jb
imul
dec
out
inc
push
mov
hlt
lcall
aas
pop
rorb
sub
or
cmp
mov
pop
inc
rcr
pop
mov
jle
dec
repnz
mov
sbb
lock
dec
loop
mov
jp
xlat
ljmp
cmpsl
jb
mov
icebp
mov
or
or
dec
xor
mov
cltd
insb
mov
push
sub
jb
jae
pop
addr16
imul
inc
lcall
jbe
loop
mov
sarb
mov
jno
adc
mov
dec
and
xchg
xor
push
xchg
clc
jg
mov
inc
inc
pop
rorl
test
sti
mov
xchg
mov
lret
or
in
xchg
loop
cmpsl
push
sbb
incl
std
xor
sbb
pop
sub
lds
mov
ret
test
imul
mov
dec
idiv
cmpsb
cmp
mov
popa
dec
mov
pushl
fsts
sarb
fnstsw
call
sbb
mov
and
aam
adc
lret
pop
enter
inc
pop
das
mov
jle
decb
mov
cld
movb
mov
into
push
out
insb
inc
jg
and
push
scas
adc
ds
mov
cld
aad
insl
js
mov
mov
aaa
mov
inc
mov
imul
and
js
cmp
les
std
or
push
shll
enter
imul
cmp
pop
testl
out
jne
fnsave
je
fdivs
ret
cld
mov
in
imul
cmc
pusha
mov
and
fidivrl
sub
test
fisubl
sbbl
insl
dec
fisttpll
add
inc
fsubs
and
push
fucomip
mov
dec
add
push
lds
xor
mov
imul
or
add
ljmp
ret
jecxz
mov
and
xchg
add
je
xchg
cmp
std
push
push
cmc
jbe
incl
lods
std
stc
or
xor
enter
les
or
cli
testb
cmp
lods
gs
loope
dec
sti
and
lahf
xor
fistl
shll
xchg
cmp
repz
enter
fildll
scas
test
mov
movsb
sub
shr
cli
in
mov
add
jge
mov
xor
out
fadds
push
xchg
inc
lcall
sti
inc
jo
and
clc
inc
aad
xor
pop
ds
adc
scas
aaa
fildll
pop
cmp
bound
inc
xchg
pushf
ljmp
and
mov
and
nop
add
lea
insb
dec
xchg
push
cld
scas
clc
stos
popa
mov
loopne
mov
cmc
add
lock
mov
dec
adc
jmp
adc
or
jno
pop
xchg
or
mov
js
jecxz
dec
push
ljmp
out
mov
sbb
js
jle
fsubr
cmp
mov
mov
adc
sbb
icebp
jnp
push
imul
add
hlt
pop
decb
or
adc
gs
pop
mov
cmp
and
or
clc
and
fmuls
ja
ficomps
push
jmp
dec
add
mov
xchg
cmpsl
jle
dec
xor
std
or
test
dec
inc
repz
push
and
fstpt
mov
xchg
and
add
hlt
enter
add
cmp
test
stos
pop
push
pop
pop
iret
sub
cmp
xor
aam
add
pushf
mov
ja
roll
jmp
add
ror
jle
push
aad
stos
in
pushf
pop
dec
lods
cmp
dec
xchg
add
push
add
push
cwtl
cmp
jmp
sbb
add
insl
aas
sub
lds
mul
mov
cmp
xlat
pop
cmp
inc
inc
mov
inc
dec
xchg
pop
int3
xchg
adc
mov
and
sub
imul
mov
mov
mov
into
mov
add
imul
and
mov
mov
jp
pop
adc
lods
lcall
mov
shlb
cmpsb
fs
sti
push
add
or
arpl
pop
mov
mov
add
sub
cmp
mov
outsl
and
xchg
add
sbb
sub
sub
inc
enter
mov
dec
lahf
add
lock
cmp
jne
xor
mov
loope
cmp
ljmp
or
and
call
sbb
mov
pop
ret
mov
pop
xor
test
jne
push
rolb
adc
mov
je
pop
sub
in
push
jne
insl
mov
mov
mov
std
push
ja
scas
pusha
lods
and
testl
or
arpl
je
cltd
xchg
and
xchg
andl
frstpm(287
jp
sub
loop
add
fwait
lea
mov
mov
les
dec
push
inc
jge
aad
sbb
popf
jge
xor
dec
inc
fists
sbb
cmp
ucomiss
lea
imul
pop
push
push
orb
cmp
iret
adcl
or
lcall
inc
or
test
mov
pop
lock
test
inc
sub
repnz
fdiv
push
pushf
jp
iret
pushl
push
mov
stc
xor
inc
adcl
mulb
cmp
mov
mov
aaa
or
enter
cmp
imul
mov
lcall
lds
cmc
stos
clc
mov
sbb
imul
pop
sbb
push
cmp
ss
shl
add
sbb
in
std
mov
fsubrl
rcrl
test
inc
jne
mov
call
mov
xchg
ficoms
inc
adc
pop
data16
xchg
movsb
mov
sarl
pusha
outsb
push
aam
mov
dec
adc
jno
shll
test
push
mov
ljmp
pop
mov
mov
es
or
mov
push
outsb
stc
test
aas
jns
xor
dec
jl
inc
xchg
sarl
dec
push
and
or
sti
popf
lcall
jb
mov
pop
add
lahf
mov
pop
fmuls
cmp
jp
fcomi
mov
or
out
dec
loop
and
pop
lock
mov
repz
setne
mov
and
pop
cwtl
lahf
sub
mov
pop
add
lcall
lods
js
sub
imul
pop
mov
sarb
adc
gs
jg
stos
adc
sub
enter
jle
add
ds
add
xchg
out
loop
xlat
or
cmp
loopne
scas
hlt
shrb
or
outsl
xchg
xor
dec
mov
cmp
mov
outsl
testl
popf
repz
out
push
ss
adc
cmp
lock
repnz
add
jecxz
lods
add
shlb
shr
add
adc
jae
xor
hlt
adc
jg
xor
inc
mov
cli
stos
mov
test
pushf
ja
ret
add
sbb
add
or
pop
sbb
and
adc
inc
xchg
push
out
in
arpl
mov
icebp
ret
insb
into
fnsetpm(287
push
movsb
popa
xor
in
pop
pop
imul
dec
scas
pop
in
inc
xor
pop
and
push
xorl
jns
js
fs
fstps
cmp
sarb
adc
rcrl
mov
es
push
mov
adc
pop
sbb
and
mov
arpl
sbb
xchg
xor
sub
sub
popa
test
testl
push
es
inc
push
xchg
xchg
mov
addl
mov
jl
add
stos
jge
in
sub
pop
mov
or
or
sbb
mov
int
pop
or
in
fmull
jecxz
pop
leave
ret
aas
add
jne
not
sub
aad
and
push
inc
add
cmc
mov
push
dec
ficoms
adc
mov
std
sbb
ret
cmpsb
aad
and
cltd
pop
test
scas
mov
inc
movsl
aaa
mov
loope
xchg
mov
insl
mov
loope
xlat
and
scas
adc
dec
into
jge
psraw
adc
push
add
and
repnz
test
test
mov
dec
or
or
cmp
fsubl
cmp
mov
or
cmc
scas
push
add
mov
jmp
test
cmc
mov
and
outsb
mov
fs
daa
insb
adc
rcll
rcll
or
or
shr
lock
dec
dec
js
xor
aam
sar
js
lods
ror
mov
mov
mov
inc
mov
fs
push
adc
push
inc
outsl
aad
add
pop
aas
pop
pop
mov
adc
mov
mov
jge
icebp
aaa
adc
stc
loopne
pop
pop
mov
dec
cmp
test
adc
mov
out
mov
adc
pop
in
mov
stos
pusha
popf
mov
pop
cmp
in
pop
dec
mov
dec
gs
test
fadds
push
push
sub
je
lea
mov
movsb
roll
pop
xchg
add
js
aad
dec
out
inc
es
inc
or
call
ja
dec
jnp
fcmovnu
push
sub
xchg
imul
cmp
mov
dec
or
std
andb
sub
out
data16
dec
test
lock
das
and
ljmp
ja
pop
push
fidivs
mov
int
dec
dec
adcb
add
jp
cmp
dec
jge
mov
sbb
sub
imul
xchg
and
sbb
loope
fwait
mov
icebp
pop
cld
sbb
in
cwtl
loope
pop
out
out
jmp
mov
adc
test
mov
jo
push
notl
mov
sub
aam
movsl
xorb
movsl
and
call
aas
pop
xorl
inc
mov
aaa
jle
rcl
repz
cmp
cmp
fistps
mov
or
xor
jns
outsb
mov
andb
nop
pop
dec
test
push
rclb
popa
clc
inc
pop
push
mov
adcb
test
lods
fldenv
mov
add
cmp
mov
xor
xchg
xor
sbb
push
lret
and
mov
dec
add
or
adc
push
clc
imul
mov
mov
pop
push
sbb
in
dec
jp
fidivrs
lock
push
in
cmp
js
sub
int3
movsb
into
cmp
and
mov
loope
mov
mov
cmp
xor
jno
imul
sub
pop
cmp
or
fsubrs
add
call
cmp
and
daa
fadd
ja
shld
xor
sub
fwait
add
xor
cmp
addb
cltd
adc
inc
das
inc
cmp
negl
pop
push
and
cmpl
mov
popa
mov
fs
cmpsl
jb
or
lahf
dec
adc
or
fiaddl
fsubr
loop
scas
test
or
mov
bound
mov
dec
outsl
xchg
ljmp
jne
add
insb
mov
push
or
dec
scas
add
imul
lods
mov
xor
nop
cli
mov
cli
insl
sbbl
inc
fldl
add
shlb
pop
ror
mov
mov
xor
sub
add
orl
imul
pop
adcl
loopne
dec
sbb
pop
adc
jb
mov
dec
and
push
out
jp
not
adc
add
iret
jae
popa
fldt
cmp
mov
fldenv
cmp
push
adc
lds
sbb
ljmp
mov
push
enter
jp
orb
in
rorb
push
jno
test
push
test
pop
push
pusha
xlat
outsb
mov
mov
push
inc
mov
andl
jl
pop
lods
daa
ja
data16
pusha
inc
ljmp
or
repnz
sahf
js
pop
mov
and
jle
dec
out
dec
scas
mov
divl
les
dec
cmpsl
jle
sbb
mov
pusha
mov
jg
out
adc
icebp
int3
cmp
xchg
scas
add
test
out
lret
repz
shl
adc
out
fwait
addb
test
and
push
pop
pusha
adc
or
stc
addr16
inc
cmp
loop
int
out
cmp
sbb
jns
add
push
pop
sub
mov
dec
pop
cld
inc
arpl
mov
sub
pop
shll
push
lock
jmp
icebp
xor
inc
rorl
sahf
outsl
xchg
add
pop
jp
mov
fidivl
std
adc
jle
loopne
shl
invd
mov
sub
mov
nop
jecxz
sbb
mov
rcr
mov
inc
jmp
dec
outsb
xchg
or
fdivrs
imul
jp
xchg
stc
outsl
aaa
insl
push
or
sub
stos
cmp
in
or
notl
push
cmpps
mov
cmp
dec
push
cmp
pop
mov
lcall
and
sub
mov
sti
xchg
aam
add
insb
mov
popa
ja
add
inc
les
sbb
mov
stos
xchg
push
xchg
pop
mov
jbe
pushf
dec
add
mov
jp
dec
out
jecxz
nop
std
mov
out
popf
jo
jle
cld
and
or
mov
adc
adcl
push
lret
or
cld
inc
cli
repz
movb
mov
add
andl
je
and
sub
xchg
call
sbb
daa
add
cmp
mov
lods
fisttpl
lret
int
cli
test
ret
call
mov
cltd
movsl
leave
test
xlat
push
inc
shll
int
xor
dec
pop
fiadds
and
pop
jae
es
lock
mov
ficoml
lods
mov
das
jb
xchg
pop
mov
mov
or
jl
xchg
lock
xor
jne
and
xchg
or
andl
movsb
jb
jbe
sbb
test
cld
add
sub
cmc
les
add
xchg
jo
or
mov
cmp
cli
lahf
sub
lods
or
adc
aaa
cmp
jle
shlb
jae
gs
test
jg
aas
in
js
dec
and
mov
xlat
aas
shrl
xchg
push
jecxz
add
sbb
stos
push
outsl
inc
cwtl
xlat
sbb
daa
add
jp
clc
mov
aaa
imul
cmc
rcr
xchg
rorl
hlt
xchg
pop
sbb
loopne
or
repnz
not
bsf
add
aas
and
mov
daa
mov
or
inc
movl
push
xchg
xchg
sbb
dec
mull
pop
imulb
es
sub
push
sub
push
xor
in
sub
inc
incl
imul
stc
fistps
clc
fmuls
arpl
and
lods
pop
arpl
fcompl
jp
mov
sub
movl
shll
or
enter
cmp
js
jge
sub
cmp
add
testb
in
add
push
outsl
leave
xor
xor
sbb
sbb
movd
sahf
cmpsb
mov
mov
cmp
jp
repz
sub
mov
sbb
xor
in
es
aam
pusha
mov
cmc
bound
mov
pop
xchg
add
or
mov
or
ficompl
add
or
inc
xchg
dec
dec
leave
dec
mov
push
jmp
dec
pushf
sbb
dec
pushl
sbb
mov
mov
xchg
or
mov
fsubl
mov
sbb
xor
or
lret
xor
push
out
arpl
push
mov
sub
sbb
jecxz
push
enter
xchg
sbb
jmp
cld
cld
jl
push
xchg
push
add
pop
pop
and
hlt
push
mulb
xchg
add
out
in
push
or
inc
pop
or
mov
xor
and
mov
and
mov
mov
xor
lret
adc
mov
notb
cmp
addb
aad
mov
sbb
xchg
or
push
adc
mov
push
sub
gs
lea
jne
or
sbb
cli
aad
les
dec
xchg
or
add
jbe
sub
lahf
ficomps
jbe
cmpsl
pop
imul
loopne
mov
pop
ss
aam
push
mov
sbb
fnstcw
je
xchg
xor
inc
mov
repnz
jle
ja
icebp
sub
iret
mov
sub
inc
cmc
rolb
and
sub
shrb
push
add
or
gs
or
xchg
mov
mov
in
jmp
adc
js
loopne
aam
fbld
mov
jmp
sahf
bound
mov
push
and
outsb
inc
decb
mov
lahf
rorl
or
inc
add
les
xchg
adc
sti
cmpps
adc
arpl
ss
fcompl
cld
popl
js
mov
imul
mov
ja
les
or
mov
scas
in
in
lea
mov
fcompl
add
jle
push
scas
push
popf
push
jg
outsl
pop
mov
mov
pop
sub
push
pop
xor
lcall
pushf
mov
lods
jns
cltd
jge
ret
aas
cli
push
data16
cmpsb
inc
jp
and
and
or
push
xor
sahf
icebp
or
fbstp
test
in
sbb
adc
mov
jbe
stos
mov
sbb
scas
lea
mov
lcall
sub
cs
idivl
xchg
scas
jl
inc
push
and
cmp
jge
sbb
mov
inc
cmp
sbb
icebp
inc
push
pop
aas
icebp
mov
xchg
push
cmp
ljmp
mov
jmp
lret
sbb
mov
mov
repnz
out
dec
repnz
icebp
pop
cmp
mov
push
pusha
or
mov
or
mov
ss
mov
dec
ret
xor
inc
stc
test
ret
insl
push
imul
sub
repnz
fcmovne
jne
test
clc
ss
cli
adc
add
fdivrl
fdivr
sti
mov
cmc
call
and
decl
and
popa
scas
push
adcl
sub
fsubrl
incb
call
pop
ficoms
sub
push
mov
stc
pop
sbb
mov
add
mov
mov
jo
push
andb
dec
jg
ficoms
push
leave
push
push
movsb
mov
loope
lods
mov
and
mov
dec
jae
outsl
paddusb
jb
sub
or
rclb
mov
mov
mov
and
leave
cmc
inc
test
lock
xchg
and
subb
sarb
mov
or
push
pop
adc
hlt
add
mov
sub
cli
or
outsb
mov
int3
test
mov
psubb
and
div
add
mov
inc
xchg
sub
jmp
mov
jo
and
inc
xchg
lcall
xor
sbb
add
and
inc
lds
add
std
or
mov
popl
loop
adc
ret
scas
gs
aas
push
in
mov
cld
icebp
push
lcall
and
jo
and
mov
cmpsl
adc
jg
sbb
dec
ss
xchg
fnstenv
pop
pop
push
lahf
in
push
cwtl
mov
fistpl
dec
xchg
sbb
dec
test
jno
pop
je
addr16
mov
mov
mov
lret
push
testb
and
jb
jecxz
adc
cltd
mov
movb
jg
push
pushl
ficomps
dec
dec
push
pusha
mov
hlt
add
fcoml
sub
call
js
mov
mov
icebp
shrd
and
pop
stos
icebp
adc
bound
mov
mov
inc
shlb
inc
aas
clc
test
jmp
aam
mov
mov
and
iret
sahf
pop
or
sub
mov
adc
pop
in
mov
cmp
rorb
test
ljmp
daa
mov
in
movsl
push
mov
paddsb
mov
mov
mov
mov
jo
and
les
test
pop
nop
fsin
inc
mov
inc
xchg
inc
sti
jae
vsubss
icebp
das
xchg
das
jo
jb
sub
inc
imul
popa
stos
fisubrs
push
outsb
scas
pop
pushf
fcomps
lret
and
fstpt
mov
jle
mov
xchg
loope
push
push
cmpb
aas
fildll
sahf
xchg
mov
and
stos
ffree
test
adc
and
adc
cmpsl
sahf
jb
pop
or
scas
add
shll
or
inc
xchg
dec
sub
sti
xchg
and
sub
adcl
push
es
mov
stos
inc
dec
andb
or
cmp
jae
arpl
movsl
imul
ss
out
stos
mov
das
adc
mov
xchg
mov
lcall
pop
mov
cltd
mov
stos
out
pop
xor
aam
std
enter
inc
addr16
xor
xor
loopne
fiadds
jmp
jle
loope
out
or
lods
dec
add
mov
test
sti
pop
stos
mov
mov
sub
aas
aam
sub
sbb
lods
pop
ret
lret
fnstsw
in
and
enter
jecxz
xlat
test
mov
xor
imul
xchg
xchg
fst
dec
inc
notb
fs
insl
fs
inc
filds
xor
or
mov
aad
mov
cld
cltd
cmc
jmp
and
cmpsb
out
push
sbb
pop
sub
push
nop
push
add
jmp
or
out
add
filds
cmp
bound
jp
xchg
aas
push
mov
repnz
mov
mov
in
icebp
mov
scas
inc
adc
sbb
lock
decl
es
mov
push
inc
dec
xchg
sbbl
mov
outsb
shlb
jb
pop
out
pushf
cmc
and
orb
clc
fcomi
iret
pop
or
lock
rcr
dec
inc
add
or
test
insb
mov
stos
pushf
loopne
pushl
adc
aas
push
insb
push
les
das
pop
out
cmp
lea
mov
hlt
repz
ret
mov
popa
divb
pusha
and
test
fisubrl
cmp
mov
cld
add
xor
dec
jnp
mov
enter
mov
aaa
jne
xchg
sub
sbb
call
push
sbb
pop
test
push
aam
xor
sbb
mov
decl
mov
cwtl
inc
movsb
scas
jg
mov
into
cmpsb
adc
cmp
lahf
out
xchg
outsl
lods
xchg
hlt
leave
mov
fmulp
mov
clc
aaa
pusha
jmp
enter
mov
jbe
ja
and
sub
push
xchg
loope
pop
cmp
sub
cld
and
out
daa
xlat
and
pop
and
or
out
fnstenv
ss
sarb
dec
mov
jno
xchg
mov
insb
or
inc
add
ljmp
sti
leave
or
push
fstpl
popf
jl,pt
xchg
adc
outsl
push
pop
aam
inc
dec
fdivrl
leave
jmp
inc
fsubrl
pop
push
mov
jae
cmovnp
jno
mov
pop
pop
push
pop
xchg
out
sbb
in
and
and
mov
jbe
pop
fwait
xor
cmpsb
adc
sarl
repz
sbb
dec
pop
sbb
call
and
jae
ficompl
mov
pop
paddd
icebp
repnz
add
adc
add
pushf
push
sbb
xchg
ds
push
xchg
sbb
je
jmp
divb
push
adc
adc
adc
icebp
push
add
push
cmc
xchg
pop
sub
sbb
push
adc
js
hlt
insl
loopne
into
roll
cmp
cmpsl
in
xchg
jp
mov
and
mov
sbb
sub
xchg
cmp
subl
mov
inc
lock
cmpsb
mov
and
jae
cmpsl
or
idiv
aad
jns
cwtl
dec
cmp
adc
data16
xorl
push
pop
inc
and
fildl
mov
lods
xchg
into
dec
mov
dec
inc
lea
dec
ljmp
out
lods
fcmovnb
or
xor
sub
dec
or
hlt
not
mov
and
dec
aam
dec
add
fcoms
cltd
shlb
dec
jmp
inc
cld
shlb
add
movntq
call
sbb
pushf
out
lcall
push
dec
movsb
mov
adc
ficoml
xor
data16
lds
push
out
push
loop
mov
js
aas
and
fnsetpm(287
outsl
test
jno
xor
xchg
push
rolb
fldcw
sbb
pop
loope
sarb
sti
data16
call
push
or
sahf
add
mov
outsb
fildl
jecxz
pop
ret
out
dec
mov
push
pop
dec
jns
xchg
movsb
mov
or
xchg
or
jne
outsb
xchg
xchg
int3
pop
faddp
pushf
icebp
shr
pop
or
incl
pop
cmp
and
adc
jmp
icebp
push
dec
shr
fists
mov
repz
jl
ret
adc
inc
adc
sbb
and
jle
das
sub
pop
push
xchg
push
jo
mov
sbb
inc
fildll
pushf
lds
adc
mov
test
mov
hlt
mov
mov
xor
xlat
mov
addb
mov
push
mov
ja
mov
in
pop
orb
jns
mov
ja
pop
je
out
lds
ja
mov
jb
test
lds
sbb
sub
fnstenv
add
out
in
addl
sbb
mov
add
jecxz
idivl
lock
sbb
add
adc
adc
push
mov
mov
add
arpl
orl
inc
xchg
jg
clc
in
xchg
xchg
or
or
mov
ds
lea
mov
mov
hlt
aaa
cs
jno
in
cli
add
popa
cmp
mov
cld
mov
xchg
out
adc
outsl
popl
fistpl
mov
dec
and
dec
pop
hlt
decl
mov
mov
pop
adc
jg
out
ja,pn
and
adc
sub
and
movsl
cmc
rorb
iret
jae
fs
xchg
adc
xchg
mov
jecxz
dec
sbb
push
sub
cmpl
mov
pop
xchg
loopne
pusha
inc
into
sbb
setle
je
inc
inc
scas
ret
sub
cs
sbb
jnp
mov
int3
in
push
inc
xchg
jp
jge
xchg
scas
sahf
in
ds
insb
push
push
inc
mov
jl
out
or
hlt
add
adc
mov
cmpb
and
ds
cmp
andl
mov
mov
pop
push
insb
sub
mov
ret
cmp
pop
inc
jl
fisttps
loope
jnp
bndldx
mov
and
adc
sahf
adc
mov
push
mov
sar
ljmp
pop
je
insl
insb
sbb
mov
and
pop
aad
jne
stc
dec
adc
pop
fwait
mov
test
ds
xlat
pop
pop
xorb
cli
jge
int
jg
add
xchg
loop
shr
jb
ja
in
jns
xor
inc
push
loopne
sbb
push
out
mov
push
add
xlat
sbb
push
push
lods
ret
popa
add
dec
dec
in
mov
xor
fnstsw
jbe
sub
xor
pop
clc
pop
mov
cmpsb
test
add
je
jo
in
out
jp
xor
jo
mov
jge
add
movsl
popf
js
pop
xchg
iret
xlat
aam
and
enter
lock
shrl
sbb
popf
push
and
push
inc
and
call
mov
and
push
inc
out
pop
jo
pop
enter
sub
call
addr16
inc
inc
lods
fdivr
pop
imul
xor
int3
ljmp
cmp
clc
dec
inc
or
or
lods
sbb
mov
ret
sbb
xlat
adc
fists
clc
fdivrs
lds
and
or
lds
fadd
cmp
adc
gs
push
xchg
xchg
in
push
ret
leave
inc
inc
jmp
jl
int
repnz
ja
cmp
cmpsb
jle
xor
test
in
mov
add
xor
test
mov
push
adc
fsubrs
lret
daa
daa
shlb
inc
imul
testl
aad
xchg
cmp
xor
repz
mov
mov
adc
aas
loop
pushl
dec
mov
loope
xor
or
or
inc
pop
xchg
jmp
sbb
in
inc
mov
jmp
mov
mov
dec
dec
cmp
mov
icebp
hlt
lods
popa
testl
push
test
xchg
js
jo
lret
rorl
fcoms
pop
sbb
call
sub
outsl
test
fisttpl
sbb
inc
and
out
mov
jmp
xor
inc
out
call
cmp
mov
mov
outsb
sti
rcl
loope
in
adc
sbb
mov
mov
dec
mov
inc
sti
mov
cmp
movsl
jbe
add
cmp
cld
ds
in
aad
jb
xor
nop
sub
xchg
mov
decl
push
pop
jmp
mov
test
xchg
fsts
stos
daa
test
fidivrl
cli
out
xor
push
add
aad
jecxz
fcomp
sbb
dec
lods
adc
push
mov
and
test
sbb
test
mov
loopne
in
jl
pusha
add
and
add
fdivs
loope
in
cmp
ret
fmulp
dec
and
push
sbb
xor
inc
jecxz
loope
cmp
lret
fnsave
mov
and
xlat
out
cmp
fcomip
jae
and
and
sub
lcall
rcl
sub
mov
idivl
sub
cmp
aas
loope
ret
loope
jp
cmpsl
inc
sub
jle,pt
std
ss
lea
fbstp
adc
ds
push
push
movsb
mov
push
mov
les
jmp
mov
and
mov
fisttps
cld
dec
push
mov
loopne
sbb
dec
pop
mov
inc
mov
jecxz
test
sbb
fstpl
addr16
fdivr
cli
and
addr16
xchg
and
and
push
pop
daa
into
setp
xchg
shrb
sbb
xor
and
sbb
sahf
cmpsl
addr16
in
cmp
push
pop
mov
pop
scas
mov
or
jne
addl
jmp
adc
pop
add
push
cmpsb
xchg
test
xchg
shl
push
ss
insb
dec
sub
adc
ss
in
pop
mov
mov
cmc
xchg
mov
movsb
push
std
mov
in
pop
pushl
cwtl
adc
or
xchg
bnd
pop
jns
cmc
push
loopne
outsb
lods
ret
jae
and
dec
lea
fs
cmp
inc
jmp
lret
dec
faddl
xchg
orb
lea
cmp
dec
mov
pop
lret
lea
leave
add
push
xchg
jnp
popa
icebp
test
add
fcoml
mov
add
and
test
dec
mov
pop
sbb
pop
lods
orb
icebp
mov
orb
add
mov
lock
popf
cmp
inc
aad
jp
adc
int
std
jo
es
adc
push
rcr
mov
call
in
inc
sbb
psrad
stc
fnstenv
test
cmp
data16
push
mov
push
mov
bound
insl
and
pop
aaa
cltd
mov
stc
ret
add
cmpsb
sar
popf
inc
and
adc
xchg
dec
push
std
in
inc
xor
loopne
mov
jp
scas
dec
inc
xchg
sbb
cltd
sub
mov
dec
test
loopne
into
push
aaa
loope
jmp
push
fstl
mov
subl
rcrl
ljmp
xlat
inc
jl
mov
push
lahf
loope
sbb
xchg
dec
inc
nop
stos
xchg
xchg
cmp
mov
enter
pop
popf
je
ljmp
movsl
lret
ds
es
mov
xbegin
test
fwait
test
aad
sbb
mov
or
ficoms
xchg
and
iret
call
ss
mov
adc
sti
lcall
rcrl
test
shll
jl
sti
sbb
lcall
clc
sti
out
dec
adc
ret
sub
call
jo
cmp
xchg
ljmp
or
push
sbb
das
fdivrl
adc
jg
outsb
add
ficomps
scas
pop
jmp
imul
movsbl
mov
dec
cmp
int
push
popf
sub
nop
in
pslld
inc
insb
clc
popl
in
inc
mov
sbb
pop
out
cmp
mov
mov
and
gs
push
outsl
loopne
dec
orl
es
xorb
addl
enter
cmc
pop
pop
jb
mov
fwait
fs
js
fs
and
pop
dec
pop
mov
jo
xor
notb
aaa
jo
xorb
je
add
inc
popa
clc
inc
cmp
mov
push
ljmp
sub
lret
rorl
mov
aas
in
push
rorl
jbe
push
jecxz
cmp
fiaddl
inc
xor
loop
or
insl
pop
push
aad
decb
add
or
sub
push
cmpsb
dec
decl
add
or
iret
stc
and
jb
mov
in
loope
je
and
rcll
lea
std
mov
push
push
dec
pop
repz
insl
inc
pop
sti
or
dec
xor
shll
and
mov
fucomp
or
loop
and
int3
mov
jp
cmp
mov
addr16
jo
call
cmp
out
pop
xor
sbbl
int
mov
je
pop
jmp
cmpsb
pop
out
mov
xor
jae
cmc
fbstp
daa
ret
mov
loopne
fisubs
repnz
inc
push
mov
ret
rorl
or
mov
rcl
ja
mov
daa
aam
loope
add
xor
mov
cmovne
mov
ljmp
and
sarl
and
or
push
pop
pop
test
in
sbb
xor
adc
adc
inc
sbb
push
fcmovnu
inc
adcl
add
lods
jle
ret
outsb
mov
dec
ss
hlt
adc
sbb
imul
pusha
jo
pop
xor
dec
fisttpl
fnstenv
push
lcall
mov
shlb
or
pop
mov
cmpsb
jle
jg
or
add
jb
daa
test
or
add
xor
xchg
adc
sahf
push
pop
std
adc
enter
push
clc
pop
pop
cmp
mov
mov
jmp
mov
jp
cmp
push
add
push
stos
test
and
push
fistl
clc
loopne
shlb
mov
mov
jne
popf
hlt
sahf
or
ss
jb
imul
xlat
xor
js
iret
add
adc
jle
ja
nop
mov
mov
movsl
loopne
mov
xor
das
cmc
aas
cmp
frstor
in
push
out
test
add
dec
push
pop
fisubrs
sub
or
dec
bound
mov
adc
or
fstps
jbe
add
orl
neg
xor
fisubs
test
popa
xor
faddp
xchg
orb
push
bound
mov
and
push
sbb
and
subl
or
filds
test
mov
enter
das
rep
sub
or
adc
sub
adc
and
adc
pusha
icebp
ret
push
xchg
dec
add
adc
lods
outsb
sub
or
pusha
jecxz
fildl
mov
dec
mov
jo
adc
pop
lret
cmpsb
aad
loope
mov
cmp
xchg
dec
fcmovnb
sub
mov
mov
call
bound
or
cmpsb
pop
xchg
das
fs
adc
imul
add
xchg
cmp
jge
mov
sub
cli
popf
repz
cmp
into
jg
mov
pushf
aad
pop
mov
jp
shlb
int3
sub
pusha
aam
enter
movsl
push
sbb
sub
fdivs
xlat
mov
and
mov
test
xor
fnstcw
ret
mov
cmp
cmpsb
test
fisttpl
pop
xor
stc
jae
sbb
or
pusha
jbe
xrelease
jo
mov
xchg
aas
and
sarl
or
or
pop
or
into
cmpsb
mov
je
xchg
test
cmpsl
xchg
insb
pop
jno
orl
leave
mov
sub
dec
xor
pop
mov
pop
adc
loop
cmp
fists
aam
add
adc
jl
outsb
cmp
test
out
lcall
test
test
fisubs
push
sbb
mov
les
popa
arpl
fdivs
cmpl
pop
sahf
push
arpl
mov
jo
and
add
mov
or
mov
dec
sti
cs
jg
add
scas
fstpt
add
pop
jge
and
adc
and
scas
mov
frstor
stos
dec
fsubs
scas
xlat
aaa
roll
bound
fcoml
sbb
int
or
dec
mov
mov
xchg
rcrb
cmp
pop
enter
jmp
orl
mov
or
sub
mov
push
outsb
cmc
ret
pop
aam
add
jmp
pusha
push
and
into
inc
pop
sub
and
ljmp
jg
push
jmp
dec
inc
jmp
ficoms
movsb
out
xchg
mov
add
in
incl
mov
dec
sbb
incl
xor
out
rolb
and
fimuls
or
fdiv
fld
inc
gs
dec
dec
mov
inc
fldl
js
push
addb
lahf
stc
push
sbb
fmul
adc
or
mov
and
aaa
adc
insb
aas
insl
jl
cmp
xchg
call
imul
pop
int3
push
in
sub
repnz
outsl
loop
push
jle
add
test
aas
rolb
push
jecxz
sbb
push
jne
fisttpl
mov
mov
lods
cwtl
lock
push
push
push
in
mov
or
mov
mov
mov
pop
jmp
cmp
inc
daa
pop
js
dec
mov
or
out
aad
cmpsl
mov
sub
dec
inc
rcrl
mov
xchg
js
in
dec
sub
jle
dec
clc
xchg
mov
aam
ds
mov
enter
or
movsb
cbtw
adc
xor
stos
jl
mov
adc
cmc
sbbl
pop
ffree
and
repnz
xchg
lahf
xorl
adc
or
test
push
fsubrl
cwtl
out
mov
mov
dec
addl
loopne
movl
mov
dec
dec
incl
je
jecxz
xor
jmp
cli
mov
mov
push
int3
dec
popf
dec
adc
xor
bound
xchg
loop
pop
in
sub
jl
inc
cmp
loope
dec
or
xchg
jl
or
cmp
jl
cmp
mov
and
jp
push
and
or
arpl
cmc
add
add
sbb
xor
jnp
call
test
movsl
mov
or
or
and
enter
scas
fwait
cmpsb
aaa
lea
dec
loopne
xchg
es
dec
push
std
xchg
xchg
pushf
movsl
rclb
sbb
in
inc
iret
pushf
mov
inc
add
cmp
jbe
jg
add
pop
push
inc
cmp
mul
or
sbb
jne
in
add
mov
jp
lret
pusha
mov
clc
xor
movsl
ds
js
rorb
jbe
mov
xchg
iret
js
and
dec
dec
popa
scas
stos
and
shr
insl
dec
xor
and
pop
cmpsl
pop
imul
xlat
or
sbb
ljmp
push
pop
fsts
roll
daa
sbb
loopne
icebp
and
xchg
sahf
test
inc
mov
leave
lods
sub
das
sub
aam
add
enter
push
push
orl
adc
cli
and
scas
je
aas
lds
inc
pop
inc
out
fadds
xchg
adc
lret
into
xchg
jl
cmp
mov
jl
push
adc
sahf
loope
push
jmp
aas
mov
xchg
jp
cmpsb
je
or
pop
sbb
lcall
jmp
jle
mov
pop
in
negl
pop
mov
push
fwait
jne
stos
int3
sahf
dec
dec
jp
ja
ret
iret
sub
xor
test
xlat
mov
xchg
dec
lea
jge
stc
das
sbb
push
hlt
in
ja
sub
mov
add
mov
inc
mov
jns
and
adc
mov
pop
cmp
cmp
jle
in
adc
xor
jb
outsl
push
fisttpl
stos
je
insb
in
sub
jg
xor
int
mov
sti
xchg
ret
in
sub
and
cmp
pop
aam
cli
pop
shll
insb
andl
jb
cmp
jle
lcall
xchg
pop
addl
push
mov
aam
add
mov
dec
scas
sti
clc
xor
leave
mov
test
push
testb
cld
push
mov
jno
ds
cmp
jp
pop
mov
fildll
loope
ror
pop
dec
adc
pop
imul
push
inc
cmp
loop
jo
scas
mov
mov
stos
test
mov
shl
pop
lds
mov
out
xor
push
lcall
pop
and
or
in
andl
sbb
out
and
sbb
push
loopne
popf
movsl
inc
fimull
mov
mov
icebp
and
call
or
jo
mov
lret
imul
adc
inc
js
cmp
jle
push
add
add
jle
sbbb
cwtl
movswl
cmp
mov
outsl
aas
add
xor
loop
and
mov
adc
loop
mov
jbe
cmp
jl
cmp
enter
fists
and
and
hlt
clc
dec
xchg
outsb
mov
xor
pop
and
data16
cmp
mov
mov
icebp
aas
out
lret
dec
jmp
dec
add
dec
push
adc
inc
xor
arpl
adc
adc
iret
push
sbb
push
sbb
clc
mov
sub
les
mov
cmp
hlt
cmp
mov
bound
stc
sub
test
mov
sub
test
mov
pusha
and
ret
dec
add
clc
mov
and
xlat
mov
fcmovnb
xor
mov
rolb
xchg
jb
bound
mov
pop
dec
jmp
pop
push
mov
add
sub
pop
das
or
fiadds
in
leave
sahf
lcall
fmuls
arpl
insl
daa
mov
push
ljmp
outsl
imul
sbb
imul
pop
call
and
inc
sbb
dec
adcb
mov
repnz
push
outsb
push
push
pusha
pop
movsb
lret
mov
xchg
xor
sbb
xor
sti
jo
icebp
pop
mov
xor
inc
repz
mov
xlat
add
fwait
int
and
cmp
adc
fistpll
shll
fldl
push
add
lret
aas
cwtl
push
xorb
jnp
cli
lea
lds
aaa
jl
test
lret
or
rcrb
jmp
cli
dec
cmp
and
pushf
mov
add
pop
test
cmp
into
adc
rorb
aas
jae
adc
pop
cmp
rorb
mov
ljmp
ficoms
arpl
jmp
rol
xlat
push
dec
movsl
popf
mov
cmpsb
mov
push
sbb
pop
push
iret
lock
or
dec
mov
pop
or
and
push
and
xchg
adc
loopne
movsl
cmp
int
cmc
sbb
mov
mov
in
rorl
push
fnstenv
and
and
leave
and
xchg
sbb
or
shl
add
jae
mov
jae
mov
sahf
out
movsb
sub
mov
pop
das
xor
adc
adc
ret
xor
mov
inc
or
add
cmp
je
mov
outsl
or
dec
pop
add
lahf
and
shlb
and
pop
test
call
or
mov
mov
add
sbb
jp
sbb
iret
cmp
add
test
movsl
cmpsb
lea
aaa
rcl
push
iret
sub
and
ret
mov
cmpsl
push
cwtl
xchg
enter
movsl
scas
dec
test
jmp
adc
ja
mov
out
xchg
pop
cmp
sub
sbb
aas
jmp
fdivrs
pop
fimuls
dec
js
push
push
loope
or
scas
or
lahf
icebp
insl
negl
jo
je
push
xor
aad
xorl
fs
testb
add
into
and
ret
adc
jle
dec
mov
sbb
enter
mov
and
push
or
arpl
aad
xor
sbb
jmp
mov
pop
roll
sub
sub
and
hlt
or
lods
jg
outsb
pop
hlt
ret
sub
lahf
bound
mov
idivb
dec
sti
mov
sbbb
push
ret
push
jo
adc
push
arpl
mov
xchg
push
dec
xor
or
mov
aas
stos
or
in
cli
push
loope
pop
inc
gs
pop
int
cmp
inc
aaa
jo
or
lock
loope
xchg
hlt
mov
jg
add
test
inc
jmp
dec
enter
push
inc
es
test
icebp
rcrl
pop
mov
leave
pusha
xchg
loop
insl
lock
adc
outsl
jp
xor
push
nop
lods
bound
sbb
dec
mov
pushf
xor
inc
mov
dec
jne
jbe
sbb
push
adc
or
pop
cmp
sahf
adc
inc
arpl
push
in
mov
jg
mov
cmp
call
jle
push
enter
mov
bound
jno
sbb
sub
jl
xor
ret
or
xchg
mov
lret
mov
fdivrl
mov
xlat
insl
test
adc
mov
pop
push
cld
nop
loope
jp
add
pop
xchg
push
push
cld
sbb
adc
aam
and
in
or
jl
dec
and
add
adc
inc
mov
push
mov
mov
add
inc
inc
testb
push
rorl
xchg
das
aad
test
sbbl
lahf
ss
and
movsb
xlat
xor
ja
hlt
fsubl
pop
cmp
dec
pusha
add
or
mov
ficoms
loop
cmpsl
fucomip
lahf
inc
aad
sbb
push
xchg
mov
cmpb
jmp
xchg
iret
lret
push
fidivs
decb
adc
xchg
and
loopne
inc
aaa
cmp
leave
in
sub
dec
cmp
mov
bound
inc
sbb
or
mov
mov
roll
stos
push
adc
push
das
mov
rcl
pushl
adc
add
mov
jbe
mov
in
pop
call
mov
mov
xchg
lds
in
mov
mov
adc
insb
hlt
xor
push
push
jnp
push
add
pushf
cmp
inc
rcr
hlt
push
subb
fnstsw
cli
jl
mov
adc
mov
inc
bound
fsub
cmp
xor
sub
pop
and
or
dec
or
jae
pop
cmp
sbb
and
inc
out
test
jge
and
xchg
sbb
testb
adc
mov
leave
lret
pop
insb
das
out
adc
popf
testl
mov
sbb
adc
daa
add
das
jno
cli
sbb
aaa
inc
shlb
or
mov
jmp
repz
daa
mov
and
decl
pusha
adc
adc
dec
and
fstl
mov
push
sub
int3
add
push
push
in
mov
out
mov
dec
mov
int3
ret
sbb
pop
loope
ljmp
std
pop
rcrl
mov
pusha
add
sahf
pusha
test
mov
bound
outsb
sub
fstl
js
inc
cmpsl
sub
xlat
imul
cmp
xchg
hlt
lcall
mov
xchg
adc
inc
gs
fs
cmpl
xchg
inc
cmp
mov
movsl
cmp
push
push
nop
adc
or
stos
test
dec
sub
push
xchg
js
or
fistpll
das
leave
or
adcb
loopne
lds
inc
imul
mov
xor
ljmp
test
repnz
cmp
decl
cltd
mov
jmp
push
mov
cmpsl
pop
push
mov
sbb
cli
inc
loopne
mov
lds
orl
jmp
outsb
insb
scas
inc
repz
xchg
add
pop
in
adc
out
scas
cmp
aaa
pop
or
nop
sub
mov
xchg
adc
mov
fistpll
cli
testb
xchg
mov
fisubrs
je
jo
frstor
rcll
xchg
lea
fbld
sub
cmp
mov
insb
and
jp
jg
pop
jecxz
push
jno
push
faddl
test
push
push
test
mov
mov
das
or
xchg
push
dec
xor
cmp
dec
fcomps
in
xor
mov
adc
es
pop
clc
mov
cmp
shlb
cltd
lahf
rclb
loopne
mov
xlat
jle
jae
mov
push
xchg
ss
fsubr
js
divl
lret
ret
mov
shl
jl
dec
jg
push
jl
subl
xchg
cmp
aas
push
repz
and
jg
jl
push
sbb
fldl
and
and
mov
shlb
in
lcall
mov
add
pop
sub
or
mov
mov
pop
aaa
insl
jne
aaa
and
cs
push
lret
or
movsl
imull
xor
sbb
xor
scas
jae
inc
jge
dec
test
jg
xchg
fadds
add
mov
aad
fistpll
test
jl
xor
mov
movsb
or
sub
mov
pusha
sub
mov
pop
lds
aas
mov
pop
pop
mov
and
lahf
nop
inc
push
adc
cmc
iret
push
insl
aad
add
popa
push
mov
punpcklwd
mov
jmp
pop
and
sahf
movsl
push
sub
and
jo
or
push
push
and
pusha
mov
pushf
mov
aam
mov
cmpsb
xchg
lods
inc
sbb
pop
cmp
pushw
cmp
cli
jmp
aam
loop
jns,pt
add
inc
push
inc
std
clc
fidivs
push
xchg
sbb
mov
inc
in
lods
mov
call
aam
add
mov
cmp
decl
into
outsl
sub
andb
cli
rolb
repz
sbb
stos
xor
adc
pop
insl
mov
int3
fs
lret
jb
mov
mov
push
and
jge
sbb
out
bound
in
cmp
cmpsl
jecxz
jp
movsb
es
mov
mov
int3
pop
aam
cld
or
or
add
jp
xchg
fs
add
mov
cld
pusha
mov
dec
incl
xchg
pushf
sti
add
std
js
inc
mov
test
jnp
popf
je
cmc
pop
dec
add
cmp
clc
jg
in
xorb
lahf
jg
xlat
xchg
js
mov
mov
scas
loopne
rol
cwtl
add
mov
xor
ja
inc
ds
or
xrelease
int
sbb
dec
test
pop
pop
and
mov
stos
jecxz
sbb
jg
xor
push
mov
dec
inc
push
dec
rorb
push
push
into
sbb
aam
sbb
sbb
dec
mov
rolb
ret
lods
add
push
fbld
inc
nop
xchg
mov
sbb
add
sub
insb
lods
mull
add
sub
push
sbb
test
lds
cmp
or
xchg
aaa
xor
es
clc
call
ret
pop
nop
insb
inc
xor
mov
xchg
inc
fdivs
pop
stos
and
mov
and
sti
or
in
sub
loopne
push
pop
or
movsl
in
cld
inc
popf
mov
lret
iret
fs
leave
aad
add
rolb
dec
in
out
cmp
mov
pushf
test
les
test
sub
fcomi
push
xchg
int3
in
adc
cwtl
ficomps
adcl
roll
cwtl
iret
lcall
stc
adc
add
addl
incb
cmpsb
or
ret
cmpsl
movsb
xchg
jmp
in
and
or
int3
xchg
mov
je
add
or
dec
adc
cmp
mov
lods
and
subb
cmc
insb
dec
lods
loopne
dec
ret
fmuls
adc
ds
hlt
pop
notl
dec
xchg
fwait
ss
out
mov
shrl
add
test
aaa
cltd
aaa
out
out
dec
mov
jl
jg
cmpsb
or
push
or
sahf
push
jg
mov
enter
pop
iret
out
xor
jmp
adc
cmp
imul
mov
jmp
cld
shlb
shrl
cld
jnp,pt
sub
or
stos
fstpl
pop
decb
je
insl
push
mov
dec
push
rolb
sub
shrl
ja
push
adc
ja
daa
push
popf
xchg
lods
xchg
insb
mov
cmp
xchg
fwait
dec
idiv
sahf
jl
jne
fists
fisttpll
pop
out
mov
dec
sbb
stos
push
std
dec
repnz
das
xor
xchg
xor
lahf
mov
lock
adc
in
push
jg
loopne
data16
pop
fimuls
loope
clc
xor
xorb
int3
mov
pop
mov
jmp
xlat
add
pop
lahf
loope
jp
and
sub
call
leave
or
repz
rcll
loop
push
mov
divl
push
xor
je
fiaddl
sub
pop
mov
push
filds
xchg
jmp
sub
and
lods
shlb
cwtl
xor
mov
shl
adc
sub
loopne
outsl
mov
pop
and
imul
jnp
xlat
repnz
xor
je
push
cmp
andb
adc
inc
mov
xchg
lcall
xor
cs
in
xor
cwtl
jne
mov
dec
cmc
outsl
gs
pop
mov
jns
movsb
call
xor
ficomps
jbe
test
mov
les
sbb
inc
cmpsl
icebp
or
or
mov
sbb
jg
icebp
loope
jmp
mov
xor
pushf
cltd
mov
xchg
enter
jg
adc
notl
sarb
je
subb
lods
andb
call
std
sbbl
xor
or
mov
pusha
and
mov
lea
or
cld
jmp
cmp
in
sbb
sub
lcall
xchg
add
in
xchg
lea
add
arpl
xor
add
jbe
xchg
add
cmc
sub
cmpsb
or
mov
pushf
mov
adc
lock
shll
rorl
loop
loop
sti
jmp
pushf
repnz
sbbl
mulb
lea
xchg
rclb
and
fstpt
cmp
cmp
outsb
mov
int
aad
inc
and
roll
cmpsl
or
jmp
cmpsb
das
mov
xchg
cmp
stos
cltd
loopne
push
push
rol
out
push
jecxz
imul
add
jns
xor
test
out
xor
loopne
gs
push
es
sar
mov
loope
arpl
cltd
mov
movsb
dec
mov
or
jg
popa
cmpsl
or
es
add
inc
cmp
cmp
div
add
cwtl
es
jo
xor
sub
sbb
lods
outsl
subb
push
push
mov
sub
loopne
je
add
jns
sarl
sbb
movsl
aam
sbb
arpl
scas
fdiv
sub
mov
movl
jo
sub
inc
rclb
push
xor
cmc
pop
xchg
ja
iret
and
mov
dec
pop
cmpb
sti
sub
add
stos
adcl
sbb
mov
pop
fldl2e
xchg
sarb
push
sbb
xchg
push
xchg
rclb
adc
cli
or
xchg
cltd
push
mov
mov
stc
xchg
nop
out
add
out
pop
mov
repnz
sbb
rorb
dec
inc
and
dec
add
inc
mov
jg,pt
pusha
add
xchg
loopne
hlt
fsubs
hlt
incl
adc
call
repnz
jle
stos
xor
push
sbb
sub
shlb
movsl
int
aas
pop
mov
inc
push
add
jno
outsl
cmpsl
sbb
pop
das
pop
or
lea
jle
add
lahf
sub
rcr
add
movsl
mov
mov
xchg
mov
sbb
jl
fwait
pop
jmp
outsb
sub
out
push
push
mov
push
imul
xchg
sub
push
test
jne
xor
sbb
pop
lahf
jmp
xchg
repnz
mov
xchg
and
xchg
lods
inc
adc
cmp
add
sbb
sub
or
pushf
mov
lret
dec
in
out
cmp
cmp
mov
cs
divl
mov
mov
or
cmp
aaa
aad
loopne
lods
aas
mov
sti
ret
xchg
outsb
rcll
mov
xchg
fimull
lods
and
mov
adcl
xor
les
inc
mov
push
ja
loopne
jne
cmp
mov
cmp
pop
jge
ss
add
cmpsl
inc
adc
mov
inc
loop
pop
ret
addr16
int3
enter
mov
push
iret
mov
out
mov
add
sbb
cmp
adc
dec
mov
int
mov
push
mov
push
jge
ficomps
mov
jno
ror
iret
jo
dec
lods
fdivrs
ljmp
movsb
mov
cmc
jnp
stos
frstor
or
push
fwait
insb
xor
adc
out
popa
mov
mov
jbe
aad
in
idiv
cmpsb
mov
or
fisubrs
scas
leave
xor
pop
xor
inc
icebp
cwtl
pop
lock
mov
xchg
js
mov
cmp
hlt
icebp
fists
add
les
ja
cwtl
adc
je
in
loop
fwait
sbb
jns
icebp
das
ret
test
cmp
ss
xchg
pop
jne
into
dec
shll
sahf
in
ds
nop
arpl
std
inc
sub
outsl
addr16
mov
xchg
aaa
push
outsl
js
les
iret
add
stos
sbb
mov
shr
mov
add
xchg
push
adc
push
negl
or
lahf
mov
adc
pop
and
jecxz
or
jns,pt
sbb
fldl
or
std
stos
js
push
in
scas
iret
xchg
ljmp
stos
clc
sub
test
mov
xor
jns
in
pop
cltd
mov
call
mov
mov
push
inc
pushf
test
mov
pop
sub
movsb
cmpl
scas
pop
lret
xor
in
fcoml
xlat
sarl
jl
orl
push
pop
sbb
lcall
ljmp
clc
les
lcall
repnz
stc
jo
dec
fmull
and
pop
test
lods
or
jno
loop
outsb
push
daa
inc
mov
add
or
xlat
cmp
mov
push
mov
out
sbbb
pop
cltd
stos
rclb
sbbb
into
je
xchg
cmpsb
lea
cmpsb
cltd
cmp
jp
mov
cmp
sbb
push
outsl
mov
sti
and
test
jg
inc
adc
push
mov
data16
insl
cmp
lcall
hlt
or
test
pop
fisttpl
pop
mov
dec
push
icebp
sti
or
test
bound
sbb
imul
xchg
lahf
mov
popa
xor
xchg
sbb
xchg
dec
mov
jmp
fs
scas
sbb
mov
popf
mov
jge
or
cmp
not
mov
fmul
mov
out
stos
repnz
or
test
stc
or
dec
or
push
inc
gs
pop
testb
leave
push
jns
dec
or
add
or
sub
mov
push
pop
push
sbb
sub
das
out
fidivrl
push
loopne
inc
sahf
and
ret
push
sub
lahf
add
fisubrs
sahf
adc
add
pop
addr16
test
call
xor
in
mov
cwtl
cmp
sub
mov
scas
incb
push
rcll
cli
inc
popf
jae
gs
fs
aam
jne
push
ss
std
aaa
mov
cs
insb
and
dec
ljmp
add
sahf
in
adc
lods
sbb
test
rolb
cmpsb
xchg
xor
std
mov
aad
out
call
rcrb
call
adc
dec
and
fidivrl
adc
jno
sahf
sbb
dec
popf
clc
testb
movsb
adc
roll
push
mov
insl
insl
pop
insl
pop
xchg
clc
or
out
lcall
sbb
push
call
test
popl
mov
ret
or
mov
xchg
add
addr16
mov
ds
test
push
mov
inc
lock
js
cwtl
dec
icebp
sub
wbinvd
or
mov
mov
clc
push
mov
cmc
out
out
push
hlt
xacquire
je
fsubs
movsl
xorl
mov
sub
cld
add
cld
xor
fwait
mov
stc
mov
pop
mov
loope
out
out
dec
cmp
lock
lock
cmp
jo
sub
aam
jno
repz
test
outsb
call
arpl
push
xor
loope
cmpb
in
je
sub
mov
addr16
and
gs
xor
stos
mov
jl
jge
fidivrs
aaa
loope
add
mov
lcall
pushw
sarl
lahf
sbb
std
and
push
hlt
js
mov
mov
or
mov
call
icebp
clc
test
bound
inc
push
rcr
std
outsl
rclb
out
pop
push
jp
sbb
ds
cmpl
and
fisttpll
andb
jns
jl
insl
xchg
fisubl
ficomps
lock
icebp
and
push
loopne
movsl
lock
inc
dec
inc
cltd
mov
xchg
cmc
or
popf
add
inc
fiaddl
jecxz
into
andl
adc
xorb
mov
mov
in
roll
or
dec
adc
pop
in
mov
int3
inc
fs
pop
arpl
dec
out
ficoms
jns
test
pop
into
pop
aad
dec
rolb
and
ss
jo
int3
xor
add
jno
aas
inc
roll
imul
clts
add
fstpl
daa
jbe,pn
icebp
nop
enter
pop
es
lea
xchg
aaa
xchg
ljmp
mov
sarl
xchg
cwtl
fimull
xchg
xchg
push
fistpl
fstps
pop
sti
imul
lahf
rolb
xor
cs
mov
lahf
mov
call
inc
and
push
xchg
ret
pop
in
add
jmp
test
jbe
vpsllw
mov
inc
push
sbb
cmpsl
and
xor
mov
jnp
cs
js
mov
xor
adc
bound
leave
and
mov
fists
pop
xor
ret
movsb
mov
and
out
gs
push
and
cli
inc
mov
bound
lahf
hlt
cmp
orl
pop
inc
lcall
cmpsl
aad
adc
scas
push
pushl
sub
jecxz
xor
in
incb
cld
in
popa
fsubs
inc
adc
leave
in
cmp
sub
cmp
stos
inc
outsl
nop
dec
cli
ljmp
test
rolb
ljmp
bound
insl
inc
jle
push
fcompl
dec
add
js
or
ss
jo
pop
and
xchg
aas
push
inc
sbbb
push
cltd
mov
shrl
xchg
cmp
mov
orb
aad
subl
pop
mov
mov
push
xchg
inc
lahf
call
cmp
rolb
push
xorb
pop
or
inc
xor
jbe
je
aad
aaa
mov
xor
jecxz
xor
sub
mov
mov
sbb
and
xor
gs
lcall
inc
mov
jmp
ficoms
aas
sarb
sti
mov
popl
fistpl
inc
xor
cmp
adc
push
jo
and
xor
push
sbb
repz
lret
ds
push
lcall
aad
adc
cmc
sbb
lcall
stos
mov
shll
xchg
adcl
pop
push
ret
cmp
pop
sbb
inc
loop
popa
addl
cli
push
clc
in
addl
aad
push
xlat
repnz
out
and
jecxz
and
imul
ret
int
and
inc
inc
push
cmc
add
ret
cwtl
test
jle
rorl
inc
push
add
mov
cmp
inc
mov
les
clc
lret
das
fstps
and
std
push
movsb
cmp
mov
enter
lods
or
and
pop
out
jbe
imulb
int3
aam
mov
leave
scas
cmp
out
or
inc
insb
addb
divb
scas
mov
cmc
sbb
cmp
jne
filds
xchg
pop
dec
push
fmul
mov
xor
cld
inc
aam
sbb
xchg
arpl
mov
or
loope
mov
pop
je
repnz
popl
xor
or
sub
jg
rclb
loope
xor
mov
mov
and
into
add
cltd
mov
mov
push
or
jbe
clc
push
and
push
outsb
and
gs
xlat
mov
or
or
cmp
iret
aas
lret
in
dec
adc
sbbl
push
enter
or
int
ljmp
ret
das
mov
push
js
shr
fwait
sbb
mov
data16
or
faddl
xchg
movswl
cmp
lahf
pop
leave
push
cmp
jg,pt
add
cmpb
popa
pop
pop
xchg
icebp
push
mov
cmc
sub
jb
or
hlt
xchg
mov
pop
inc
mov
sub
cmpsl
scas
adc
mov
icebp
xchg
sbb
push
loopne
jo
mov
pop
movsl
pop
push
loop
test
ret
or
sbb
ret
insb
jp
stos
or
adc
and
lds
ror
fcoml
cmp
add
loope
adc
in
adc
jno
inc
jl
daa
mov
fs
push
addr16
sti
fstpt
fs
mov
insb
push
cli
mov
rorb
lret
cmp
daa
adc
jl
aam
pop
inc
icebp
popf
push
sbb
pop
and
rorb
pop
cmpsl
mov
cmpsb
push
push
jo
in
adc
jno
ret
mov
cmp
enter
adc
xor
test
sbb
push
jmp
dec
or
mov
out
clc
fildll
cmp
cwtl
inc
jmp
mov
add
push
fs
fnstsw
mov
cmp
dec
or
jnp
mov
test
sub
cs
xchg
ljmp
adc
shl
push
ret
or
mov
sub
aam
push
sbb
outsb
adc
jne,pn
movsb
sbb
push
push
mov
pop
add
fsubr
xchg
mov
cmpsb
jne
fistpll
mov
lds
mov
out
sbb
dec
sub
inc
movsb
push
andl
popf
aam
sub
scas
test
cmp
adc
jg
jo
jae
add
inc
sbb
lods
ret
cltd
outsl
sbb
push
arpl
and
cld
cmc
enter
ja
std
int3
xchg
mov
pop
dec
xor
xor
test
cld
and
sub
jnp
jns
aas
inc
stos
jbe
sbb
jecxz
and
mov
jbe
icebp
clc
pusha
movsl
in
sar
insl
test
jb
mov
push
nop
cmp
xchg
mov
pop
mov
jno
jno
stc
add
hlt
fcoml
sbb
push
inc
rorb
imulb
pop
jb
push
jns
pop
mov
ret
mov
xor
dec
inc
outsb
pop
dec
mov
shll
sub
cwtl
dec
enter
neg
sub
es
pop
arpl
jo
icebp
mov
aam
icebp
sti
mov
fdivr
pushl
test
sub
xorl
cltd
sbb
mov
fbstp
addl
adc
xor
sub
mov
cli
test
sbb
or
sbb
jae
scas
and
test
mov
xchg
push
pop
and
loopne
dec
xor
les
sub
inc
pusha
add
jg
and
ficomps
data16
stos
pop
pushf
loop
add
mov
sbb
sub
lock
pop
sbb
push
push
cmc
sub
push
xchg
fnstsw
lahf
aas
ret
add
mov
cmp
xchg
sub
xchg
ror
pop
pop
outsb
arpl
cmp
pop
out
fisubrl
sti
push
rol
mov
pop
xor
out
push
or
inc
inc
mov
dec
push
xor
push
mov
push
faddl
pop
in
or
push
test
call
pop
or
mov
les
or
xchg
jg
pop
add
jecxz
std
test
inc
sbb
movsl
mov
loop
inc
adc
or
jge
adc
add
aad
rcrl
in
aad
je
arpl
ss
or
into
mov
addb
sub
shrb
and
or
and
les
sub
mov
test
cmp
shlb
test
loop
add
je
pusha
dec
insl
ja
fadd
mov
and
or
xor
mov
daa
mov
xor
in
insb
jl
adc
sub
ret
and
shll
jl
icebp
xchg
call
add
popa
jp
scas
dec
aaa
mov
sub
and
out
xchg
fsts
scas
mov
jno
dec
in
cli
sbb
test
inc
ds
mov
sbbb
aad
out
pop
arpl
std
cmp
pop
jle
sbb
fisttpll
mov
loope
mov
or
stos
les
push
out
call
inc
int3
std
mov
jns
inc
pop
shlb
int3
xchg
cmpsl
lock
repnz
add
sbb
andb
sub
mov
add
cmp
aad
fistl
repnz
dec
adc
aaa
and
pop
sbb
or
out
or
mov
aad
adc
pop
push
adc
push
in
push
jb
push
sub
sahf
mov
test
mov
push
mov
mov
inc
shl
dec
test
test
test
mov
inc
add
popf
scas
dec
cltd
ffree
adc
xlat
adc
or
pop
inc
xor
mov
test
sbb
mov
movsl
aad
pop
daa
cmp
jmp
arpl
mov
cmpsl
inc
pushf
and
push
xlat
add
mov
push
push
ret
sub
sub
lods
enter
lods
cmp
pop
ret
rcrl
jle
dec
xorl
mov
and
and
sub
scas
inc
std
or
test
hlt
les
add
xchg
call
add
hlt
or
rol
loope
negl
xor
ds
cmc
testb
leave
mov
data16
mov
fidivl
int
cmp
add
or
sbb
filds
adc
or
popf
lahf
jbe
out
filds
xchg
push
jle
inc
stos
jle
sbb
pushl
loop
jg
mov
das
iret
cli
dec
leave
shll
pop
cmpsl
xchg
dec
iret
fldenv
inc
sbb
jnp
push
lret
cmc
pop
enter
mov
xor
repz
jl
sbb
push
xchg
mov
scas
gs
dec
and
pop
fcoml
jne
jo
pop
out
xchg
dec
ljmp
ss
xchg
mov
xchg
mov
es
loop
xor
xchg
jg
xchg
and
and
pop
mov
xor
loope
hlt
push
shll
rcr
pusha
or
sbb
sahf
out
mov
inc
xchg
jge
mov
add
sbb
leave
cmovp
jle
arpl
clc
inc
mov
and
mov
fistl
scas
jp
jo
pusha
cwtl
mov
out
sbb
lret
in
dec
aaa
in
cmpsb
rolb
sbb
push
and
mov
cmpsl
push
sbb
inc
mov
xchg
fcomps
divl
dec
ffreep
xor
push
addr16
push
stc
addr16
aad
or
sbb
notl
test
lahf
sbb
test
mov
jl
and
mov
incb
call
push
push
repnz
dec
cmp
and
cmp
mov
push
or
cs
addr16
or
xchg
add
ss
fcomps
loopne
hlt
and
mov
jle
iret
loopne
mov
add
adc
sbb
jg
jp
rolb
dec
pop
lods
shl
inc
pop
fcom
xchg
lahf
icebp
xor
sbb
in
call
pop
xor
test
lods
enter
mov
bound
sub
cld
sarl
fidivrl
push
sarb
pop
pop
or
mov
loope
jl
or
dec
call
dec
adc
add
imul
push
add
pop
jp
sub
push
dec
sbb
inc
daa
pop
inc
shll
and
js
jmp
clc
and
pop
mov
mov
dec
not
lock
lods
and
adc
incb
ljmp
dec
inc
ret
pop
loop
mov
or
inc
sbb
rorb
add
xchg
loopne
cmp
insl
mov
insb
fdivl
int
sub
std
sbb
bound
test
adc
dec
push
loop
stos
mov
aaa
push
das
adc
das
pop
cmpsl
or
aas
push
jge
inc
addr16
pusha
iret
mov
xchg
adc
mov
xor
pop
sub
hlt
or
stos
xor
mov
sbb
dec
mov
fcmovb
mov
std
int
loop
outsb
divl
mov
mov
dec
adc
or
lcall
jb
outsb
arpl
icebp
cmp
lods
orb
xor
or
jnp
inc
lods
xchg
jb
pushf
loopne
mov
push
push
sbb
daa
pop
xor
add
mov
loopne
data16
incl
jle
scas
mov
sbb
out
or
mov
rorb
int3
push
movsb
jo
adc
xchg
jmp
or
push
xchg
iret
sahf
push
adc
cmp
dec
jl
mov
fs
and
inc
mov
ss
adc
jmp
xchg
arpl
ficomps
outsl
icebp
ja
cmp
enter
fisttpl
dec
scas
hlt
lds
xor
hlt
mov
leave
mov
adc
inc
dec
in
ja
test
lcall
dec
rcr
jp
adcl
cmpsb
cli
push
jle
inc
mov
inc
inc
xchg
test
dec
sub
pop
adc
jns
pop
dec
push
imul
cwtl
cli
push
push
cmpsb
sysexit
lcall
cmp
in
sarb
jne
xor
sub
movsl
cmp
sub
cmpsb
xor
lret
and
pusha
out
aad
xchg
xchg
pop
gs
pop
cld
add
stos
stos
fidivrl
and
test
jns
jb
aaa
push
pop
add
loop
fucomp
mov
push
sbbb
or
mov
stos
js
enter
gs
ficoml
add
stos
mov
test
shr
lret
xor
pop
pop
xor
scas
push
outsl
mov
cltd
and
add
push
dec
mov
push
mov
adc
sbb
pushf
cmp
loopne
outsl
xchg
adc
fstpt
out
in
scas
cmp
xorl
mov
lock
mov
shl
inc
pop
movsl
loope
les
loopne
pusha
inc
push
xor
cmp
lahf
cli
rorb
add
mov
jmp
lcall
daa
jl
xchg
icebp
mov
or
mov
sbb
movsb
fisttpll
mov
dec
jo
stos
pop
fldt
inc
enter
jno
adc
shrl
es
jge
sbb
sbb
jns
xchg
xchg
inc
lods
mov
es
bound
cmp
xchg
paddd
shl
loope
pop
mov
out
push
xor
cmp
push
jbe
sub
ljmp
mov
xchg
jb
jg
aad
mov
filds
mov
mov
shll
and
fiaddl
inc
dec
test
dec
mov
inc
stos
or
add
jb
icebp
aaa
fmull
push
pushf
into
xor
or
incb
int
cmp
inc
jo
rcl
adcb
jo
adcb
iret
adc
repz
mov
pop
or
jg
pop
clc
push
lds
pop
cmpsl
push
icebp
daa
jg
mov
xchg
je
inc
mov
cmp
and
dec
pop
xor
pusha
testl
iret
and
mov
out
push
ljmp
sahf
adc
jbe
xchg
push
mov
nop
xchg
in
leave
call
loopne
stos
sbb
and
js
cmpsl
xlat
scas
sub
inc
fiadds
dec
mov
lock
outsl
pop
add
xchg
sbb
inc
fcmovbe
hlt
out
and
push
mov
xchg
jle
sub
pop
les
ror
xor
inc
cmc
sbbl
jmp
or
repnz
lods
pop
sar
inc
jnp
or
cli
mov
addr16
cs
mov
xchg
dec
outsb
and
ret
jg
jo
add
fisubl
cmc
loop
and
xor
jbe
call
jbe
sbb
rcrb
jbe
push
popf
cld
lcall
andl
inc
int3
or
mov
xorb
mov
arpl
fldcw
std
jae
mov
lret
add
and
out
sbb
xor
sarl
sbb
mov
fstpt
cmp
in
scas
mov
jmp
and
xchg
inc
fwait
insb
nop
ja
imull
cmp
imul
mov
push
ss
sbb
push
sahf
ljmp
outsl
adc
movsb
aam
push
test
test
adc
pop
jge
or
lock
popf
ret
scas
nop
pop
sbb
and
fbstp
or
or
leave
out
sbb
repnz
push
out
xor
lock
pop
insb
mov
sbb
arpl
fs
add
cld
sub
mov
sbb
jge
add
enter
mov
pop
popa
dec
dec
cmpl
sub
out
jecxz
sbb
sub
pop
addr16
sbb
adc
push
dec
inc
rcl
xor
cwtl
test
arpl
ljmp
icebp
pop
test
fimuls
hlt
sub
jecxz
ret
shlb
cld
cmp
ret
cmp
pop
fcmovb
mov
mov
mov
loopne
push
push
fsts
aas
movb
popf
ret
fnop
inc
stos
mov
loopne
or
fnsave
mov
add
mov
mov
adc
xchg
gs
inc
sub
bound
paddq
xchg
xchg
pop
jbe
in
jge
xor
pop
sub
inc
push
cli
fidivrs
jnp
pop
data16
push
mov
push
orb
jl
divps
xchg
mov
out
sub
cwtl
cld
add
les
push
pop
jg
arpl
cmp
rcrl
cld
clc
add
fisttps
jo
adc
sbb
and
jg
push
daa
int
dec
push
xor
leave
stos
dec
adc
jp
jg
imulb
xchg
or
icebp
pushf
mov
in
mov
cli
clc
int3
jno
icebp
and
aaa
lock
mov
into
sbb
cs
bndstx
xchg
xor
or
mov
inc
cmpsl
test
lahf
push
pop
pop
stc
sbb
in
push
insb
dec
add
mov
mov
add
jnp
sbb
jb
mov
fwait
push
fwait
mov
mov
and
push
js
mov
arpl
xor
mov
pop
add
push
and
xor
jno
cs
xorb
nop
mov
sbb
pop
mov
jmp
call
lcall
cltd
int
test
jl
add
sub
insb
mov
pop
dec
xchg
push
or
clc
mov
mov
jnp
les
dec
mov
ja
aas
es
ds
jp
xchg
mov
and
cmpsb
ds
test
push
ljmp
out
inc
mov
push
cwtl
jecxz
pop
cmp
mov
pushl
mov
cmp
test
pop
ret
dec
push
scas
lcall
jnp
add
cmp
testb
aaa
jno
lods
jl
clc
je
push
add
or
push
add
lea
mov
push
xchg
sbb
rcr
adc
pop
filds
lret
cmp
jle
jbe
dec
jle
repz
gs
fistl
stos
xlat
sbb
push
popa
je
out
cmp
mov
lods
jae
aas
aas
push
repnz
es
mov
adc
push
test
scas
sbb
std
adc
movsb
sbb
nop
aas
sarb
mov
test
sub
jge
jno
adc
test
mov
decb
arpl
mov
mov
jge
pop
je
and
in
sbb
inc
mov
mov
add
std
dec
pop
xor
loop
incb
lods
mov
mov
out
sti
mov
and
call
popa
aam
mov
jnp
fdivp
xchg
cli
push
add
inc
xchg
cmp
stos
fldenv
js
cmp
sbb
nop
dec
sbb
imul
xchg
shll
lods
push
inc
fdivl
xor
xchg
arpl
cmp
das
add
rcrb
jg
imul
dec
sub
add
xchg
popa
mov
mov
jae
mov
decl
aaa
adc
je
mov
sub
jmp
cli
xor
xor
es
jge
shll
inc
aas
cmp
inc
xor
les
out
dec
sbb
pop
gs
sbb
lret
into
push
enter
jbe
mov
xchg
dec
int
pop
sub
or
inc
cmp
mov
popf
not
lret
mov
adc
sbb
iret
cmp
mov
mov
inc
cmp
jg
in
push
nop
push
inc
adc
sti
rcrl
fstl
addl
ret
mov
xlat
loop
jge
dec
aad
mov
lock
push
in
ss
xor
xor
jle
inc
sbb
xchg
lcall
xchg
pusha
and
sbb
in
in
pop
jg
rclb
les
pop
addr16
pushf
jne
arpl
adc
ja
aas
push
dec
mov
arpl
lods
in
mov
outsl
gs
xor
mov
gs
bound
adc
popa
mov
aam
sahf
pop
cmp
mov
adc
push
addl
rcr
jcxz
xchg
lcall
loopne
clc
dec
push
stos
in
dec
sbb
xor
fistpl
aas
test
in
out
adc
push
dec
ss
cmpsb
jp
imul
pop
inc
mov
pop
dec
cmpsl
lods
sub
adc
push
xchg
cmp
mov
into
and
int3
ljmp
test
mov
lds
fildll
push
mov
xchg
aam
xchg
inc
mov
roll
test
fwait
leave
cmpsl
stos
xchg
ljmp
daa
test
testb
jne
mov
idivb
sti
dec
push
aad
daa
jge
outsb
inc
sbb
test
ret
jnp
stc
and
jae
and
pop
jle
imul
mov
stos
mov
lods
rcl
add
inc
sti
mov
inc
jl
loopne
pop
mov
inc
mov
call
or
mov
pop
stc
xchg
inc
sti
insl
xlat
add
mov
inc
enter
je
in
rorl
sub
jns
dec
ret
inc
movsl
popa
inc
jo
shll
sub
cmp
test
loope
enter
daa
mov
or
inc
bound
jbe
sar
xor
aam
cwtl
into
or
xorb
mov
dec
aad
popa
adc
cmc
jg
fistpll
loop
dec
scas
test
jg
mov
andl
in
out
dec
stos
cmp
cmp
hlt
add
jg
popa
xlat
mov
in
pusha
or
idivb
loopne
scas
ds
push
orb
repz
add
clc
inc
cld
daa
mov
inc
shrb
or
out
out
xchg
cmp
lock
and
push
std
lcall
repz
movsb
ljmp
push
jmp
xor
push
pushf
jb
push
sub
imul
sbb
addr16
orb
or
xor
pop
mov
jle
sub
cmp
cmp
das
cmp
sbb
sbb
mov
insl
pop
inc
fcomps
xchg
sbb
sbb
xchg
or
lahf
xchg
inc
adcb
mov
lcall
loope
test
mov
int
orb
mov
sbb
push
mov
lods
clc
mov
inc
xlat
popf
jo
std
movsb
cld
add
rcrl
cld
fcmovnb
test
inc
in
pop
inc
insl
jp
stos
mov
adc
sbb
cmp
sub
sbbb
pop
mov
popf
loopne
xor
xchg
lcall
leave
aas
mov
dec
leave
fisubrl
loop
int
push
cmp
sbb
ret
jp
inc
movsb
iret
push
test
mov
cmp
loop
outsl
pop
jl
roll
aad
repz
lret
sbb
add
cmp
push
bound
mov
dec
in
int
or
xor
nop
pop
dec
cld
sub
out
push
outsl
lret
adc
mov
iret
aaa
cmp
or
pop
mov
movsb
fldln2
call
out
lcall
dec
jg
int3
aam
lds
dec
fistpll
cli
psrlw
mov
out
dec
dec
je
andb
or
add
mov
xchg
pop
mov
scas
jl
incb
nop
into
push
ja
stos
mov
sbb
data16
stos
or
inc
push
in
outsl
aaa
mov
pop
shl
or
orb
fucom
clc
sahf
push
and
bound
fiadds
outsb
jmp
fwait
out
xorl
mov
push
dec
and
add
ds
and
inc
test
and
ffree
mov
nop
fdivs
and
jmp
lods
mov
dec
mov
inc
pop
push
data16
and
test
lds
add
fldl
jle
int3
dec
jle
jmp
daa
bsf
or
pop
sbb
mov
jle
pop
in
orl
cmp
arpl
enter
sbb
pop
js
lock
js
sbb
push
sbb
es
fs
jne
and
jle
adc
ja
je
mov
dec
fbld
and
or
sub
mov
das
push
adc
sbb
inc
pop
mov
inc
lcall
adc
jmp
jmp
sub
sbb
xor
mov
xchg
jns
in
mov
insl
dec
xchg
jl
insl
and
icebp
dec
enter
cld
sub
mov
xor
sub
test
pop
mov
push
xor
mov
xchg
out
adc
dec
rcrb
jnp
pop
jl
mov
insl
pushf
xor
mov
sbb
movb
jb
std
mov
fidivl
cmp
cmpsb
imul
add
iret
jg
pop
xchg
sub
adc
mov
adc
xor
dec
popa
test
pusha
cmpsb
ja
cmp
lock
or
sbb
scas
dec
cmpsl
xor
das
jp
inc
xlat
clc
lods
ljmp
xor
jecxz
xchg
inc
ficompl
sbb
pop
test
clc
data16
sti
mov
push
fildll
pcmpgtw
inc
cmp
fldenv
xor
add
mov
or
add
mov
daa
data16
loopne
test
push
add
dec
and
or
adc
inc
add
push
cli
cli
pop
push
or
jmp
xlat
shll
sub
cli
push
inc
das
sbb
mov
xor
aaa
sbb
and
insl
mov
and
cmp
loop
adc
sub
xor
cld
scas
fisttpll
lock
dec
jb
fistl
imul
dec
inc
xor
add
pusha
cwtl
movsb
inc
xor
inc
enter
scas
lcall
mov
inc
sti
xchg
test
dec
push
add
and
imul
lahf
adc
add
push
notl
movsb
mov
mov
xchg
frstor
test
pushf
notl
add
test
es
sti
daa
and
insl
cmpl
sub
xchg
pop
cmp
jl
jle
sub
jmp
dec
dec
xor
lds
jo
push
xchg
rep
or
xor
dec
outsb
ljmp
adc
out
jl
cmpsb
js
jle
inc
lahf
push
lret
adc
xchg
mov
test
andb
mov
mov
dec
push
dec
jg
loopne
jl
repnz
movsl
loope
dec
xchg
cmp
mov
outsb
adc
mov
into
mov
in
sti
cli
jp
js
xchg
mov
loopne
push
and
or
stos
jne
jne
es
mov
loopne
stos
sub
sbbb
aad
mov
jo
call
xchg
insb
aam
pop
cmp
dec
shrb
clc
pop
cmp
rcl
and
and
jl
insb
mov
cmp
lret
inc
movlhps
cmp
aad
and
sub
pop
and
xor
clc
ljmp
and
int3
or
fisubs
ja
out
adc
xchg
movb
cmp
mov
and
stos
jbe
jo
pop
xlat
mov
into
sub
ret
mov
repnz
or
test
pushf
repz
test
sbb
inc
push
sbb
int
jl
cwtl
xchg
cs
cltd
mov
pushf
mov
and
pop
outsb
dec
pop
cmp
sub
test
or
xchg
ret
jg
addr16
aas
aas
inc
ja
mov
es
mov
xchg
test
lcall
push
mov
rcl
sti
mov
movsl
movsb
or
adc
clc
rcrl
popa
dec
stos
loop
scas
mov
in
adc
icebp
ret
test
xchg
out
mov
sti
push
or
and
outsb
mov
push
push
outsl
jl
sbb
pop
insl
push
inc
push
or
stc
push
fs
mov
icebp
arpl
xchg
bound
pop
outsb
adcl
flds
sbb
leave
mov
iret
xchg
sbbl
jne
mov
dec
dec
dec
inc
pop
outsb
sbb
xchg
cmp
roll
and
jg
pop
addl
lock
mov
stos
push
mov
pop
std
or
loopne
imul
je
xchg
dec
rcrb
les
pop
mov
mov
orb
lret
jecxz
adc
mov
jle
and
cmpsb
call
dec
decl
adc
movsl
dec
das
dec
aaa
aaa
or
shrb
movsb
adc
jle
incl
subb
xchg
cmpsb
call
cmpl
mov
rolb
and
jl
add
add
jae
ret
cltd
rolb
xchg
stos
xor
incl
sbb
push
lret
call
adc
out
ljmp
lahf
pop
mov
lock
stc
or
sub
add
dec
jg
popf
mov
fsubp
dec
sbb
movsb
push
bound
inc
int
repz
or
cltd
stos
sahf
mov
and
scas
test
add
mov
arpl
or
inc
addb
orl
inc
or
sbb
je
or
inc
fdivl
call
je
rcrb
jge
lret
inc
pop
jne
cmp
and
out
inc
and
lahf
mov
mov
sub
mov
adc
xchg
pop
pop
sbb
push
outsl
inc
xchg
cmpl
inc
lods
stos
dec
pextrw
sub
in
add
dec
les
dec
cmp
cld
pcmpeqb
addb
rolb
loope
mov
ret
mov
repnz
push
jns
pop
cwtl
ss
jo
loop
mov
xor
dec
loopne
shlb
rcr
mov
add
sub
jo
mov
repnz
fucomp
mov
xor
add
jecxz
xor
mov
hlt
mov
lock
dec
xchg
sub
cmp
or
nop
pop
inc
ret
cli
popf
push
incl
jp
lahf
stos
and
mov
mov
scas
dec
add
xorl
add
cld
out
adc
cmp
cmp
aas
adc
push
out
inc
out
loopne
mov
fildll
mov
dec
popf
and
cltd
adc
pop
push
hlt
stos
rcll
dec
js
stos
fsubrl
and
outsb
mov
jo
inc
in
shrl
jno
ja
mov
sub
dec
pusha
cmp
mov
pop
dec
gs
test
in
jle
fisubrl
mul
jnp
cmp
xchg
or
data16
movq
jecxz
dec
outsb
out
inc
dec
xchg
call
xor
aam
sub
cmp
test
sub
xchg
into
adc
loop
mov
xchg
je
and
add
xchg
loope
xor
pop
pop
xor
pusha
jb
call
lock
jmp
shrl
xchg
clc
sbb
sub
clc
inc
mov
adc
les
inc
adc
jle
adc
jo
inc
sahf
outsl
daa
addl
pop
or
mov
push
aas
sub
and
mov
dec
aas
cmp
push
cmp
push
push
loop
daa
pop
shll
cltd
xor
int3
loop
lods
insb
arpl
jbe
test
mov
push
inc
stos
cmp
push
xchg
in
and
cmp
loop
or
fiaddl
fisubrl
arpl
cli
or
enter
data16
daa
pop
sub
sbb
sub
lea
fwait
mov
fs
cli
rcll
pop
mov
or
lods
lock
fsts
jle
cmp
xchg
jl
xchg
lea
cmp
mov
movsl
or
std
adc
push
test
rcpps
xor
dec
incl
fnstenv
das
xor
pop
movsl
xchg
mov
je
jb
in
adc
adc
mov
aas
add
mov
and
push
filds
add
sbb
add
mov
call
addr16
test
add
or
sub
xor
mov
add
data16
mov
adc
pop
subb
or
pop
imul
mov
cli
cmp
inc
pop
pop
push
jae
sbb
jecxz
js
int3
ljmp
aas
je
pop
insl
cltd
mov
test
lods
jle
punpckhbw
push
and
sarl
push
cld
popa
arpl
inc
and
xchg
jecxz
sbb
xor
shr
pop
xchg
nop
jle
push
jl
mov
push
clc
inc
arpl
mov
sbb
cmpsl
xlat
add
push
lahf
outsb
or
push
adc
inc
out
test
test
xchg
rorl
fdivs
jle
add
push
jo
incl
mov
pop
clc
int
jge
bound
dec
adc
push
mov
fldt
jmp
jl
dec
dec
mov
push
push
dec
out
inc
out
mov
enter
jne
add
and
lods
sti
clc
pop
sbb
decb
scas
loopne
js
adc
mov
mov
insb
subl
push
mov
cli
push
clc
into
add
loop
or
push
xchg
adc
mov
xchg
adc
dec
test
stos
mov
dec
fldl
popf
pushf
and
loop
outsl
add
test
jle
ljmp
and
js
je
mov
test
sbb
bound
imul
shrl
mov
ret
in
adc
add
mov
ffreep
movsl
mov
mov
iret
adc
push
popf
push
shl
ja
loope
dec
jo
pop
add
mov
filds
mov
into
push
inc
dec
cmp
push
xchg
lock
cs
mov
int3
sub
sbb
loope
adc
xchg
pop
sbb
pop
pusha
out
shr
ror
aam
jmp
inc
adc
jb
push
push
mov
and
push
mov
jl
mov
enter
pushf
dec
movsb
mov
and
dec
mov
cmp
cmp
roll
inc
lea
cmp
push
mov
test
jbe
add
std
adc
pusha
das
inc
ret
lock
or
inc
inc
xchg
adcb
out
stos
push
idivl
or
ret
jne
dec
cmpsb
dec
and
xorb
pop
sub
jle
cmpsl
xchg
and
ss
ret
ret
scas
ds
loopne
clc
cmc
dec
mov
imul
pop
adc
pop
fmull
mov
cmp
es
fidivs
mov
lret
imul
mov
shlb
inc
into
mov
jmp
popa
ficoml
scas
xor
cld
cmp
mov
jno
das
popf
pop
mov
pusha
dec
aad
pop
pop
lds
in
dec
aas
mov
mov
sahf
in
bound
jo
jno
inc
dec
pop
adc
jl,pn
xor
sub
pop
popa
pop
jo
sarb
xor
fldl
push
mov
lea
inc
adc
mov
into
aas
mov
popf
sbb
ljmp
hlt
xor
mov
repz
mov
fstpt
aam
iret
jo
jbe
jge
mov
cmp
fnstcw
negb
inc
scas
orl
cmp
sbb
rcrb
mov
cli
sbb
in
mov
pushf
int
mov
lds
insl
inc
dec
cmpsb
aas
out
push
aas
subb
xchg
ds
ja
and
clc
scas
aam
and
push
xchg
mov
inc
shrb
mov
push
loope
pop
inc
inc
rolb
jno
loop
leave
xchg
dec
xchg
dec
ret
dec
cmc
dec
push
movsl
repz
imull
or
sbb
jp
or
sub
imul
pop
mov
pop
mov
dec
hlt
jecxz
jb
les
es
sti
call
repnz
sbb
push
mov
jg
dec
dec
xlat
xorb
jmp
pop
adc
int
out
xlat
sub
mov
sbb
popl
push
push
data16
inc
mov
bound
pop
aas
xchg
xlat
aad
clc
fidivs
or
imul
push
lcall
pop
stos
jg
loope
push
mov
push
fisubl
and
xchg
aam
inc
lcall
adc
clc
loopne
jno
cmpb
add
jae
xor
and
adc
xchg
aam
cli
inc
push
or
lods
cs
loopne
push
or
and
push
ret
or
rcrb
rclb
push
dec
loopne
xor
mov
mov
insl
inc
xchg
mov
and
or
test
in
roll
cmp
adc
test
push
dec
in
fcomp
mov
push
in
cmpb
ds
inc
popa
adc
dec
dec
mov
jge
rorb
mov
loopne
cmp
adc
dec
push
inc
add
rcrb
aaa
sub
push
rcrl
test
icebp
pop
sahf
into
dec
sarb
imul
divl
mov
sub
and
and
mov
jo
pop
xchg
adc
inc
mov
shll
xor
mov
mov
push
and
xor
mov
add
lds
pop
cld
and
fsubl
addb
cmp
dec
mov
or
xor
dec
cmpsl
pop
aaa
sub
mov
lret
ja
extrq
jns
icebp
mov
sbb
mov
or
pop
pop
comiss
shrl
cld
shlb
push
dec
cwtl
xor
cwtl
push
push
lods
fnstsw
cmp
lea
sub
test
or
sbb
cmp
and
call
xor
out
sbb
mov
and
push
xchg
ljmp
adc
clc
inc
sbbb
xor
and
jp
test
cltd
mov
jne
sbb
fistps
in
stc
dec
mov
leave
test
jne
test
lds
xor
test
imull
clc
mov
sub
or
mov
xchg
inc
bnd
sbb
cs
dec
push
test
scas
hlt
sub
clc
rcrl
sbb
movsb
and
or
or
mov
mov
outsb
into
cmp
gs
dec
cmp
out
lock
dec
push
sahf
out
imul
mov
pop
hlt
in
fcmovu
push
xor
scas
mov
dec
xorl
or
dec
adc
call
rcl
aas
cltd
push
mov
push
sarl
jno
sbb
mov
insl
dec
cmp
push
orb
push
lahf
cmp
int
cmp
dec
pop
xor
pusha
add
inc
pop
loopne
test
pop
mov
or
mov
fsts
inc
cmp
movsl
ljmp
sbb
or
push
add
fs
out
jne
out
add
adc
loopne
xor
cvtps2pi
mov
jl
inc
dec
inc
stc
or
leave
and
add
and
pop
lcall
sbb
outsl
push
jle
dec
es
sub
push
adc
mov
out
lcall
pop
add
add
repnz
pop
sbb
push
mov
bound
negl
xchg
sbb
into
and
adc
xor
lret
stos
dec
sbb
inc
cmp
fistpl
jb
mov
add
jmp
stc
or
xor
adc
mov
stos
sbb
sbb
insb
js
xor
iret
js
mov
movsl
pop
lahf
dec
adc
fistps
sbbl
xchg
pop
stc
or
or
push
inc
daa
push
jecxz
movl
xchg
and
sbb
cmp
test
shll
xchg
lods
inc
out
cmp
xorb
inc
pop
data16
fcompl
add
adcb
cmp
mov
dec
pop
out
dec
or
shll
push
cmpl
jl
aam
movsl
mov
or
or
icebp
inc
sti
push
pushf
aaa
ret
push
xor
das
adcb
or
daa
mov
lret
lret
push
insl
in
sub
mov
mov
stos
and
cwtl
mov
mov
pop
ja
sub
pop
scas
push
or
jno
movsb
daa
int
fstl
dec
mov
cmp
out
nop
and
jecxz
cwtl
clc
rcr
cmpsb
sbb
dec
mov
sub
fdivrl
call
fsubrs
clc
sbb
mov
mov
dec
mov
jg
dec
mov
popa
cld
std
jne
shll
faddl
xchg
cs
xor
mull
and
or
ret
sbbb
mov
ljmp
xor
dec
mov
or
int3
mov
lahf
inc
cld
aas
orl
and
sub
idivb
mov
pop
xor
push
push
push
cld
fmull
aad
jg
or
pop
int
mov
in
roll
mov
aas
test
loopne
mov
inc
pop
or
fnstsw
aaa
lahf
add
mov
jbe,pt
lds
nop
cwtl
test
aam
add
and
and
loope
insl
andb
in
test
pop
xchg
repnz
vmread
inc
negb
and
cld
jns
aam
xchg
inc
inc
push
mov
iret
loopne
xlat
mov
inc
insb
aaa
mov
mov
sub
and
cmp
inc
mov
dec
xor
in
xor
xlat
pop
inc
movsl
and
xchg
jg
movsl
mov
dec
cmp
xchg
inc
dec
and
adc
sbb
mov
lcall
xchg
es
lea
out
ret
sbbb
add
inc
test
adc
inc
mov
cmp
push
push
sbbl
mov
stos
cmp
sti
xchg
icebp
inc
xlat
out
mov
pushf
xlat
mov
inc
arpl
cmp
outsb
inc
push
or
xrelease
repz
movl
or
in
test
mov
mov
and
shlb
fidivl
aaa
ja
mov
pop
mov
xor
movsl
pop
mov
mov
inc
insb
cltd
inc
out
vhsubps
mov
jp
xlat
add
or
sbbb
mov
inc
inc
xlat
add
mov
mov
popa
inc
inc
sbb
fcoms
icebp
pop
xor
mov
aam
cmp
sbbb
int
orb
sub
cmp
push
add
mov
cmp
nop
inc
inc
nop
pop
or
jb
negb
push
push
sbb
in
orb
movsb
xor
popa
lock
xchg
loop
xchg
leave
sub
punpcklbw
clc
lea
dec
inc
inc
lahf
cmpsb
int3
xchg
jp
xor
int3
pop
loopne
je
std
and
stos
fwait
mov
lds
ret
adc
push
xchg
inc
repz
xchg
inc
mov
fdivrs
repnz
int
and
mov
mov
adc
push
and
scas
outsb
add
decl
imulb
loopne
mov
sti
adc
fs
sahf
add
notb
fnstsw
mulb
or
insl
sub
das
inc
icebp
enter
loope
lods
icebp
test
outsl
push
test
and
insb
adc
and
movd
ss
loop
and
inc
fs
decb
sub
int3
jl
out
jg
ret
add
add
xor
nop
mov
gs
daa
movsb
adc
je
jp
xor
ffreep
loopne
outsl
shl
jmp
xchg
call
nop
mov
ljmp
xor
insl
xchg
mov
xchg
loopne
roll
jecxz
and
aaa
sbb
mov
mov
mov
adc
ffree
sti
jg
push
loopne
pusha
aad
scas
mov
adc
ret
xorb
loopne
ss
xor
lret
add
dec
out
pusha
cmp
sarb
js
or
inc
cmpsb
addl
xchg
mov
push
jmp
jge
cld
cmc
mov
inc
jbe
js
and
jne
andb
cmp
cmp
xorl
into
sub
xor
cmpl
dec
aas
cwtl
lods
jnp
jb
insb
sub
lock
ret
or
int
popa
or
push
mov
fxsave
xor
rorb
inc
fldt
lods
inc
mov
mov
mov
adc
cmc
shrl
xchg
push
pop
hlt
add
push
cltd
fadds
sub
or
push
inc
fcomi
std
out
push
sbb
sbb
shr
push
adc
bound
popf
jno
daa
popl
mov
xor
push
call
sub
movsb
jno
jg
outsb
cmp
out
fcmovnb
and
pop
leave
mov
cs
outsb
repz
jmp
push
mov
xor
lahf
loopne
rolb
pop
mov
mov
mov
jg
sub
pop
loopne
and
int3
mov
cs
push
sub
pop
push
cmp
mov
fnstsw
or
lock
adc
mov
mov
inc
js
cmp
call
xchg
jl
lret
cmp
scas
fmuls
roll
arpl
imull
xor
stos
insl
jge
xor
jb
mov
lret
pop
cld
hlt
loopne
outsb
sarl
xchg
clc
pop
mov
repz
ljmp
jp
dec
inc
daa
in
insb
mov
shl
incb
ja
les
add
lods
cld
aaa
mov
sub
rolb
jb
fcoms
lock
adc
mov
test
rcll
jp
out
push
loope
outsl
aaa
lahf
lahf
inc
lods
or
rorb
pop
fcom
and
ss
dec
dec
rorb
mov
inc
xchg
mov
cmp
inc
icebp
data16
filds
add
adc
fmuls
cmp
imul
iret
outsl
pop
dec
adc
mov
outsl
push
jnp
loope
fwait
repz
daa
add
xor
jl
sub
daa
js
push
sub
push
pop
es
add
inc
mov
inc
cmp
ss
and
pop
mov
es
into
hlt
add
enter
xor
dec
mov
es
lods
jmp
int
std
clc
mov
sub
mov
insb
ds
dec
test
inc
pusha
xor
mov
pop
rcl
or
lock
jmp
iret
imul
ljmp
push
xchg
outsl
add
icebp
movsl
and
xchg
out
dec
loopne
xchg
loope
mov
rclb
jg
cmp
sub
test
cmp
loop
adc
insb
adc
xchg
inc
icebp
xchg
into
packsswb
pushf
or
lods
adc
sub
loop
sbb
jge
repz
shrl
dec
pop
popf
scas
clc
lea
rorl
in
aam
mov
movsl
popf
jb
jmp
xchg
addr16
pop
mov
push
fiadds
cmpsb
jle
repnz
sub
imul
je
push
or
push
mov
lods
pusha
xchg
je
ljmp
call
addb
or
xchg
adc
sub
cmp
jp
test
lods
sbb
ret
adc
jp
sub
pop
inc
jo
sbbl
ffreep
sub
dec
sarl
cmpsl
xor
lds
jle
rep
mov
or
push
or
aad
jp
dec
inc
xor
scas
fimull
fcmovnb
jnp
add
sbb
jmp
mov
add
xlat
dec
cld
fcoms
scas
ds
movl
jbe
outsl
fmuls
pop
add
call
inc
dec
lods
mov
bound
inc
ret
jg
rol
xchg
mov
daa
mov
dec
ret
lds
data16
mov
lahf
aam
adc
cs
sbb
dec
sarl
lods
add
rorl
sbbb
call
addb
sub
cli
aas
mov
lahf
mov
inc
adc
imul
loopne
pop
dec
push
xchg
es
or
sub
sub
sub
movsb
pop
mov
in
enter
adc
inc
icebp
jecxz
test
imul
mov
push
pop
test
jge
sahf
cli
add
mov
and
sbb
mov
sub
rclb
into
mov
lds
rcl
mov
mov
fildl
xor
loop
test
push
add
and
jae
insb
adc
fcmovne
xor
inc
jno
fsub
sub
fcoml
fisubs
pop
test
out
or
pop
in
jmp
sti
pop
fadds
adc
fimuls
stos
mov
mov
movsl
scas
or
xchg
and
sbb
xor
xchg
xchg
fsubr
push
mov
mov
jmp
aad
loope
ss
daa
sub
sub
out
xor
or
mov
test
xchg
adc
and
add
xchg
pop
add
and
ljmp
push
xchg
push
xchg
add
cmp
add
into
inc
stc
push
mov
jne
cmp
mov
xlat
mov
xor
and
mov
adc
je
cmp
aas
mov
lods
sbb
les
add
inc
shrl
dec
dec
adc
push
pop
fists
sbb
inc
adc
jg
mov
gs
fs
in
jmp
imul
inc
jns
gs
outsl
push
imul
mov
mov
push
jns
adc
gs
and
inc
adc
imulb
jb
outsl
arpl
fs
arpl
gs
mov
dec
push
outsl
imul
in
jg
inc
jbe
dec
popa
jo
imul
mov
cmp
jns
adc
insb
jne
push
mov
inc
jae
inc
sbb
and
mov
sbb
lahf
cmp
mov
sti
test
mov
js
mov
fbstp
dec
outsl
fmull
jb
pop
je
popa
mov
pop
jnp
jb
outsl
lods
fwait
push
packsswb
jae
fs
pop
imul
mov
jne
dec
popa
insl
arpl
inc
jbe
dec
push
insb
imul
mov
mov
imul
jp
nop
out
int
fisubrl
mov
push
imul
push
jl
arpl
mov
sbb
mov
push
dec
dec
or
sub
dec
outsb
test
ja
dec
outsl
fs
adc
push
dec
jo
push
push
lret
data16
or
pop
sbb
push
addl
popa
inc
popa
xchg
mov
push
push
dec
bound
mov
and
sub
cs
insl
adc
mov
mov
add
ficomps
mov
and
and
dec
jns
scas
arpl
or
cltd
push
subl
imul
fs
leave
fisubs
in
or
and
sbb
test
ljmp
pop
jo
sbb
dec
mov
dec
inc
sub
sub
sub
add
push
cmc
or
adc
push
ja
mov
imull
inc
fs
push
mov
addl
jno
sti
test
push
jb
push
popa
std
pop
xlat
sti
add
or
sbb
imul
jb
jae
cmpsb
dec
push
lcall
push
loopne
imulb
jnp
inc
inc
push
test
dec
shrb
push
mov
jns
ds
pop
and
fmull
dec
aaa
pop
sub
push
push
outsb
mov
jg
insl
outsl
jbe
jo
or
dec
shlb
jb
je
jb
jnp
mov
inc
jb
bound
outsb
rcr
push
cmc
push
aas
and
fistl
arpl
ja
lock
or
js
or
xor
pop
pop
xor
sub
mov
bound
fs
dec
pop
jnp
and
jb
shlb
jae
jmp
repnz
insb
in
inc
out
add
mov
addr16
add
int3
pop
jecxz
outsb
call
and
in
inc
dec
add
add
bound
inc
loopne
sidtl
add
or
xor
and
jnp
or
add
add
negb
cmp
es
add
xor
pop
xchg
arpl
push
push
add
adc
mov
add
add
enter
dec
sub
push
aaa
fmul
lock
je,pn
or
das
sti
xor
mov
dec
or
pusha
fs
dec
rcrl
or
or
mov
add
xor
add
sbb
daa
rorb
arpl
jnp
clc
or
add
pop
pop
add
fnstenv
cmp
nop
std
pop
fiadds
daa
inc
inc
sbb
or
loopne
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
jns
jmp
push
icebp
push
iret
xor
and
xor
leave
jge
cli
jecxz
pop
in
sarl
ss
inc
scas
outsb
xchg
add
adc
and
jl
movsl
lock
jno
lods
push
sub
push
mov
ret
pop
mov
hlt
adc
mov
mov
test
into
push
xor
mov
dec
gs
popa
rcrb
mov
mov
pushf
lea
or
fsubs
fimuls
adc
pusha
pop
lods
test
push
roll
xchg
jg
mov
clc
and
stc
dec
push
or
mov
push
cmpsl
fnsave
push
inc
mov
mov
idivb
aas
imul
jle
push
sbb
lods
aaa
aam
psraw
jns
aaa
aam
pop
aam
dec
or
cmp
adc
rcrl
rorl
mov
shl
loopne
xor
cwtl
dec
sub
or
cmpsl
fwait
cwtl
loope
jp
inc
mov
xchg
mov
cld
in
test
adc
mov
fwait
mov
jo
fdivrl
aaa
jp
inc
push
gs
add
xorl
jp
sub
es
out
add
mull
sub
sqrtps
and
mov
and
mov
in
xchg
adc
push
adc
sarb
mov
fwait
pop
or
jae
mov
mov
mov
push
and
cmp
imul
sbb
scas
ja
xchg
cwtl
xchg
fistpl
outsb
adc
or
pop
fs
cli
in
mov
ljmp
repnz
xchg
lods
sbb
es
sub
dec
mov
mov
aas
push
std
xor
iret
and
jl
cli
mov
.byte
add
add
add
add
xor
add
jo
add
mov
add
lock
addb
add
add
add
dec
add
addb
add
or
add
add
xor
add
sub
add
add
add
mov
add
add
add
or
add
into
add
aam
add
add
add
add
add
enter
add
add
or
add
add
add
add
adc
add
add
add
or
add
add
add
or
add
add
add
add
aam
add
xor
add
sub
add
and
add
inc
add
add
add
add
jmp
out
sahf
out
int3
lahf
neg
cli
out
mov
fstpl
in
fucomi
sti
out
fwait
loopne
cli
lock
cld
lcall
std
cld
mov
int
cli
std
fsubrp
out
iret
mov
loop
mov
in
mov
fdivrl
int3
lahf
out
in
mov
out
lcall
hlt
sti
out
mov
sti
neg
cld
mov
int3
mov
in
mov
in
sti
out
lahf
call
fcomip
fcomi
mov
int3
cli
test
icebp
out
sahf
idiv
mov
fstp
ljmp
fnstsw
fdivrp
hlt
cld
sahf
cmc
iret
ljmp
int
out
int
jecxz
mov
std
in
push
int3
mov
int3
fcomip
std
sti
cmc
iret
fcomi
int3
fwait
in
loop
sahf
dec
cld
sahf
in
push
in
mov
into
lcall
repnz
stc
fnstsw
out
fcomip
int3
mov
cld
mov
fistpll
iret
int3
fdivrp
int
out
repnz
in
sti
out
fcomi
into
fsubp
fistpll
out
mov
iret
fsubrp
std
fcomip
in
out
fistpll
fdivr
loop
cli
std
in
stc
fdivrl
mov
int3
clc
std
fucomip
out
int3
push
mov
out
sti
mov
in
mov
std
mov
into
sahf
ljmp
in
sti
test
clc
fistps
out
fnstsw
iret
jecxz
out
fwait
loop
fsubrp
mov
fistpll
lahf
in
sahf
out
mov
std
mov
int
clc
jmp
mov
jmp
sti
stc
into
cli
jecxz
sahf
in
fwait
in
mov
int3
mov
fdivrl
in
mov
fdivrl
sahf
hlt
std
out
mov
mov
out
call
mov
int3
mov
iret
sti
in
in
mov
fidivrs
iret
int
loope
sahf
repz
sti
out
lahf
out
neg
fwait
fstp
jecxz
int3
fdivp
fcompl
in
mov
int
out
out
mov
into
lcall
lock
lcall
clc
out
repz
lcall
stc
in
sti
ljmp
mov
in
lcall
ljmp
std
in
cli
loope
lahf
cmc
in
fcomi
cld
mov
out
fucomi
fstpl
into
out
cli
int
repz
mov
cld
fdivrl
int3
sahf
jecxz
lahf
loopne
lahf
in
out
mov
in
cli
icebp
out
ficomps
out
mov
iret
fnstsw
std
cli
std
int3
fndisi(8087
fistpll
iret
lahf
loop
mov
into
jecxz
fdivp
jmp
fucomip
out
sahf
idiv
fsubp
cld
std
loopne
fistps
mov
cld
in
mov
in
mov
iret
mov
fnstsw
fcompl
fnclex
out
in
mov
out
into
lahf
sti
lcall
in
sti
test
in
sahf
out
fistpll
fdivrp
cli
std
mov
fdivr
in
out
fcompl
fdivr
out
in
fsubrp
fistps
sti
out
sahf
cli
in
fistps
fdivrp
in
mov
in
jmp
mov
in
lcall
out
cld
out
mov
int3
sahf
jecxz
cli
loop
push
into
lcall
sti
out
repz
std
iret
fwait
loopne
cli
lock
int3
sti
cld
in
std
fnstsw
into
fcomi
fstpl
clc
into
mov
int3
mov
sti
fdivrp
loop
mov
out
fcomip
fstpl
ljmp
iret
lahf
cli
lcall
int
cmc
in
mov
cli
hlt
repz
mov
int
sti
fstp
lock
in
push
fdivrp
in
ficomps
in
fucomi
fstp
idiv
jmp
out
lcall
cld
cld
fsubp
std
lahf
cli
in
fwait
std
iret
sahf
out
mov
int
loop
out
mov
out
sahf
in
int
cld
mov
out
mov
fdivrp
in
in
fsubrp
fdivrp
out
mov
int3
std
into
lcall
in
int
out
cld
cld
mov
into
fwait
repnz
mov
int3
mov
fdivrl
in
lahf
std
into
fwait
ljmp
int
mov
in
mov
jmp
out
loopne
sti
in
lcall
jecxz
cli
cli
fdivrp
out
sti
out
into
mov
into
iret
jmp
sahf
repnz
fwait
in
lahf
loop
fcomip
fdivrp
out
cli
ljmp
lcall
int
icebp
mov
clc
fnstsw
in
sahf
in
out
fsubrp
mov
in
in
int3
fwait
ljmp
out
out
out
fdivrp
out
cli
hlt
fnstsw
cld
int
out
lahf
out
mov
cld
mov
std
sahf
jmp
fcomi
iret
sti
repz
mov
iret
lcall
test
hlt
fdivr
loop
jmp
fdivrl
in
sahf
repz
mov
fistps
int
loop
call
out
fcompl
lcall
out
push
mov
out
fsubp
mov
into
std
lcall
stc
in
mov
int3
lcall
loope
cli
cld
in
fdivrp
in
mov
lcall
in
sti
clc
lcall
mov
into
mov
int3
mov
int
loopne
sti
imul
mov
cld
lcall
out
cld
cld
lahf
imul
jmp
int
icebp
out
jmp
ficomps
cld
sahf
std
in
lcall
in
fucomi
fdivp
out
out
sti
int3
out
cli
stc
out
lcall
std
cld
lock
sti
repz
lcall
in
jmp
std
fdivrp
out
sahf
out
sti
out
lcall
ljmp
into
sahf
out
fucomip
fidivrs
iret
lcall
std
out
fucomi
cld
push
int
repnz
lcall
in
fwait
in
in
mov
out
int
cld
out
mov
ficomps
in
push
mov
cld
mov
cld
sahf
out
cli
in
fucomi
mov
into
mov
iret
lahf
stc
imul
lahf
loopne
cli
cld
int3
mov
fdivrl
out
cli
out
lahf
in
into
mov
in
jecxz
mov
cld
in
mov
out
jmp
std
cli
fdivrl
int3
fdivrl
cmc
out
mov
std
fucomi
cld
loop
cli
ljmp
loope
sahf
idiv
fdivr
in
fstpl
ficomps
ficomps
call
fndisi(8087
fdivrl
fnstsw
out
sti
fwait
std
sti
into
mov
out
iret
sti
cli
fdivrp
jmp
lcall
ljmp
in
fsubp
mov
std
fdivp
cld
cli
jmp
mov
fidivrs
in
sahf
cmc
int3
mov
sti
cld
push
fdivrl
lcall
out
lcall
clc
in
mov
in
cld
mov
mov
int
loope
sti
cmc
frstpm(287
fistpll
int
stc
into
jmp
jmp
fstp
out
in
lcall
int
out
mov
std
mov
int3
sahf
repnz
mov
push
iret
iret
mov
int
out
fucomip
out
cmc
fnstsw
out
lcall
std
cld
lahf
out
int3
sti
stc
std
cli
imul
fdivp
int3
lcall
out
repnz
ficomps
fcompl
in
cli
repz
lcall
out
into
fcomi
into
clc
hlt
cld
fsubrp
lcall
iret
fsubrp
sti
in
jmp
sahf
icebp
cld
fwait
in
out
lahf
loope
fucomi
int3
lahf
hlt
lcall
fdivrp
clc
out
sahf
jecxz
cli
in
cli
std
int
jecxz
into
lahf
repz
fdivp
out
fwait
loope
fucompp
out
std
out
lcall
jmp
fsubrp
in
fwait
in
in
mov
out
int3
fwait
out
into
in
ficomps
int3
mov
cld
mov
int
jecxz
cli
jmp
lcall
in
in
lahf
loopne
fnsetpm(287
push
std
lcall
clc
into
in
mov
out
push
fidivrs
out
lcall
out
std
stc
ficomps
in
lcall
loope
lahf
out
fwait
hlt
iret
fdivp
int
idiv
sti
jmp
lahf
in
iret
lahf
jmp
fwait
ljmp
out
cli
fdivr
jecxz
fcomip
fdivrl
out
jmp
fnstsw
iret
mov
std
std
cld
mov
fstp
in
frstpm(287
out
lahf
loop
lcall
jmp
std
fdivrl
int
stc
out
mov
std
sahf
cld
std
fwait
stc
iret
out
sti
loopne
sti
call
mov
cld
sti
in
fstp
sti
out
in
mov
fdivr
out
out
int3
lahf
in
fsubrp
fstp
loopne
repz
fdivrl
std
lcall
std
lahf
loope
sti
stc
fcompl
out
cli
in
out
cli
out
test
jmp
sti
in
mov
lcall
fidivrs
out
cld
mov
fistpll
in
fwait
std
jmp
in
sti
jmp
cli
out
in
out
int3
lcall
out
int3
mov
int
sti
iret
fninit
sti
fcomi
iret
loopne
mov
in
fdivp
out
fnstsw
in
fdivp
out
mov
out
mov
cld
sahf
std
out
lock
mov
in
fucomi
in
sti
cli
std
fwait
out
sahf
jmp
fwait
clc
cld
sti
jecxz
fucomi
out
fsubrp
fistpll
into
sahf
clc
out
sti
jmp
mov
fistps
fnstsw
fcompl
int
hlt
sti
int3
cli
sti
out
fsubrp
mov
in
sahf
std
ficomps
fidivrs
out
sti
clc
in
loop
fistpll
mov
out
fnsetpm(287
mov
int
clc
sub
add
add
add
add
and
add
add
sbb
sub
inc
ss
aam
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
xor
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
pop
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
jo
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
je
jns
outsl
add
add
data16
jno
bound
popa
add
imul
add
add
add
add
add
sub
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
xor
sub
and
xor
sub
and
cmp
add
and
xor
xor
xor
add
inc
add
add
add
arpl
pop
add
imul
add
jbe
popa
add
add
pop
add
inc
add
data16
jns
add
popa
add
jb
insl
add
push
add
push
add
add
pop
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
je
jns
outsl
add
add
jbe
jno
jb
add
and
pop
add
arpl
jae
imul
add
add
add
add
sub
push
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
outsb
add
add
add
push
add
add
bound
dec
add
add
xor
dec
add
add
add
jns
jno
cmp
add
outsl
add
push
add
xor
add
push
add
inc
add
inc
add
add
xor
arpl
inc
add
add
add
inc
add
add
dec
add
xor
inc
add
inc
add
add
pop
add
add
ja
push
add
push
add
add
add
push
add
pop
add
jbe
insb
add
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
je
jns
outsl
add
add
data16
jno
bound
popa
add
imul
add
add
pop
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
je
jns
outsl
add
add
jbe
jno
jb
add
and
pop
add
arpl
jae
imul
add
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
add
and
push
add
inc
add
add
dec
add
add
popa
add
add
add
dec
add
add
push
add
xor
imul
jae
insb
add
add
je
jbe
add
add
dec
add
jbe
xor
xor
add
add
jno
xor
inc
add
cmp
dec
add
cmp
jo
ja
add
inc
add
add
add
je
jae
jbe
ja
popa
add
push
add
pop
add
push
add
add
add
insl
add
je
js
jae
dec
add
add
pop
add
dec
add
add
adc
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
xor
sub
and
xor
sub
and
cmp
add
and
xor
xor
xor
add
cmp
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
je
jns
outsl
add
add
js
add
add
adc
add
outsb
add
add
add
add
js
jns
push
add
dec
add
add
add
jo
bound
aaa
add
add
jae
js
dec
add
add
xor
dec
add
aaa
add
add
add
adc
add
push
add
xor
add
jbe
dec
add
inc
add
push
add
add
dec
add
add
insl
add
dec
add
dec
add
popa
add
push
add
xor
pop
add
xor
cmp
push
add
imul
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
je
jns
outsl
add
add
data16
jno
bound
popa
add
imul
add
add
adc
add
jbe
jne
dec
add
xor
je
inc
add
jo
pop
add
dec
add
add
dec
add
bound
add
push
add
xor
push
add
xor
add
add
jae
outsl
add
je
insb
add
add
add
add
add
add
push
arpl
dec
add
xor
xor
add
insb
add
add
outsl
add
arpl
inc
add
data16
add
add
ja
dec
add
data16
add
add
add
add
add
arpl
dec
add
pop
add
add
outsl
add
add
inc
add
add
add
inc
add
add
dec
add
push
add
jb
insb
add
inc
add
add
add
dec
add
add
push
add
add
add
dec
add
arpl
add
push
add
jno
outsb
add
add
push
add
add
dec
add
add
add
dec
add
push
add
add
je
outsl
add
jno
js
push
inc
add
push
add
dec
add
add
cmp
or
add
insl
add
jbe
push
add
add
add
xor
add
add
outsl
add
push
add
inc
add
add
outsl
add
push
pop
add
add
add
add
add
ja
aaa
add
add
je
dec
add
imul
add
add
add
js
dec
add
add
push
add
add
push
add
add
dec
add
add
add
push
inc
add
add
arpl
dec
add
aaa
add
add
push
add
add
add
inc
add
data16
inc
add
push
add
push
add
jno
xor
add
add
add
add
cmp
xor
add
add
dec
add
add
ja
dec
add
add
add
push
add
dec
add
bound
jbe
inc
add
jae
popa
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
mov
xchg
les
add
loop
add
xacquire
add
add
add
add
sbb
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
gs
jb
jo
