xchg
mov
idiv
in
sub
pushl
lea
push
push
lea
push
pmulhuw
clc
std
fdivr
push
call
leave
ret
and
imul
push
push
mov
call
je
inc
aas
enter
xlat
and
push
fsubrl
popa
outsb
add
push
scas
std
ss
lea
or
xor
hlt
push
call
jbe
pop
push
subl
push
gs
popa
xor
inc
push
jno
insb
jns
clc
push
push
call
mov
dec
inc
mov
inc
neg
xor
sub
adc
jmp
fists
stc
neg
not
sbb
adc
jmp
inc
negl
xlat
mov
out
insl
hlt
push
inc
outsl
data16
mov
lahf
out
xor
xlat
and
add
sbb
call
adc
inc
sbb
inc
pop
in
outsb
nop
fildll
fs
inc
call
inc
gs
push
aaa
pop
mov
fldenv
repz
call
hlt
aas
jmp
aas
push
add
fistpll
push
add
push
aas
inc
addb
sarl
aas
inc
jle
aas
xor
and
lahf
push
icebp
stc
aas
fwait
stc
pop
jmp
adc
add
push
aas
sbb
aas
aam
aas
aas
mov
mov
inc
dec
adc
mov
in
rcrb
add
cmp
or
pop
mov
das
add
nop
add
or
gs
shlb
rcll
mov
push
rcl
insb
in
repnz
cmp
push
aas
adc
inc
int3
movsb
out
out
mov
aas
jle
andb
aas
push
aas
pop
jbe
cltd
xchg
or
push
aas
jecxz
data16
rcll
inc
push
and
ret
mov
sti
sub
cmp
xchg
pop
repz
aas
call
outsl
scas
fcmovnu
adc
or
add
aas
pop
jle
sahf
xchg
push
push
mov
add
push
iret
inc
addl
jns
cmp
or
xor
jg
xchg
jge
ffree
aad
mov
xchg
mov
ffreep
mov
daa
jmp
mov
fnstenv
cmp
aas
addr16
sub
jle
push
mov
in
mov
add
sbb
dec
aas
jbe
jnp
sbb
xlat
aas
ja
arpl
das
mov
jg
or
scas
mov
into
ja
aas
xorb
sbb
mov
xlat
leave
arpl
push
lods
push
jl
ret
std
and
daa
xchg
mov
fstpt
mov
test
dec
loope
or
push
aas
rol
mov
pop
aam
xchg
sbb
adc
or
test
outsb
mov
dec
mov
loope
xor
or
aas
movsl
push
or
pop
sti
je
sarl
aas
xchg
aas
lcall
mov
xchg
in
aas
pop
movsl
pop
or
outsl
cmp
into
jle
lcall
xorl
data16
jbe,pt
mov
push
inc
daa
sti
cmp
or
aas
jl
out
gs
cmp
mov
push
loopne
xchg
add
clc
xchg
lods
and
pop
push
mov
pop
mov
and
test
in
addr16
aas
xor
cmp
or
sub
mov
mov
xor
test
jge
pop
and
push
jo
cltd
jae
xchg
cmp
outsb
js
and
push
out
mov
or
aas
fsubrl
xor
jne
pop
aaa
sbb
adc
jnp
in
jecxz
mov
pusha
je
or
mov
repz
aas
mov
adc
arpl
jl
dec
cmp
pop
add
mulb
repnz
push
inc
das
incl
lock
sub
out
jg
hlt
push
sbb
mov
jns
mov
sar
filds
push
or
fucom
int3
outsl
mov
mov
xor
add
jbe
pop
ret
pop
cmp
sbb
xchg
pop
jae
clc
jmp
and
inc
mov
sarb
pop
mov
jbe
icebp
fdivrs
popf
push
mov
sbb
mov
add
sbb
jp
cmp
lret
mov
mov
and
cs
add
lods
sub
jle
xlat
icebp
jp
fcoms
test
mov
dec
inc
cmp
aas
cmp
addb
dec
insl
jmp
mov
or
or
mov
mov
xchg
mov
and
mov
push
dec
xor
lock
cmp
or
adc
repz
cmp
stos
adc
stos
add
and
push
xor
pop
and
mov
mov
daa
pop
lods
jo
mov
mov
jns
sub
idivl
adc
outsb
adc
rcrb
adcl
xchg
or
out
dec
or
popa
xorl
sbb
jns
xor
mov
stc
xchg
enter
jb
jle
sub
xlat
and
outsb
gs
xor
add
out
inc
jmp
iret
inc
or
cmc
ror
xchg
insl
hlt
cmc
adc
loope
cli
xchg
mov
adc
dec
push
adc
lods
lahf
mov
inc
shl
add
out
sqrtps
dec
mov
rorb
inc
and
dec
or
ret
add
inc
roll
roll
jge
in
es
dec
cmpsl
cltd
ja
pop
divb
push
push
mov
add
cld
popa
shlb
shll
cld
call
mov
jbe
sahf
js
cmp
mov
out
xchg
xchg
fsubrs
mov
inc
and
in
sbb
cmp
sub
mov
cmpsl
xchg
fbstp
or
sub
fmuls
pop
mov
add
rcr
mov
push
fcoms
ret
dec
into
fistps
lock
push
xchg
push
push
ret
fnsave
adc
sti
ds
add
mov
xor
int
cmp
test
mov
jmp
xchg
pop
loop
jmp
stos
stc
cmp
shll
stc
or
jo
andb
xor
out
loopne
imul
jo
adc
or
gs
pop
daa
jns
aas
imul
bound
cmp
and
out
lea
sub
mov
aaa
jns
adc
or
adc
dec
xchg
inc
mov
in
cwtl
shrl
in
cld
pusha
sub
imul
arpl
insl
fisttpll
jbe
mov
xchg
push
mov
stos
shl
int
mov
inc
inc
pop
dec
jo
aas
jl
jle
cli
mov
jg
imul
jmp
or
clc
dec
adc
sbb
jl
adc
lahf
mov
ficomps
xor
sbb
or
or
xor
jno
mov
xchg
add
mov
adc
mov
fstl
mov
sahf
jge
push
cmp
fnstenv
mov
mov
dec
cmp
cld
add
es
sbb
and
mov
mov
or
dec
fcmovb
mov
mov
pop
test
aas
pop
mov
sti
movsl
xorb
jb
push
cmpsl
and
pop
clc
dec
lds
mov
div
rcrl
adc
cmp
jp
scas
jp
out
sahf
sbb
out
fists
les
rol
mov
dec
cmp
lahf
into
out
cmpsb
repnz
data16
and
xchg
cli
mov
cmp
std
loope
fcomps
push
nop
jo
popl
mov
mov
adc
xchg
dec
mov
push
bound
sbb
out
sub
aaa
inc
sbb
jmp
sbb
xchg
or
mov
adc
mov
pop
ljmp
arpl
pop
insl
insb
cld
push
pop
jns
dec
lods
shrl
add
or
aam
mov
sbb
or
enter
call
push
fisubrs
xchg
in
jle
pop
adc
pop
jp
sub
pop
dec
dec
shr
loope
imul
cvtps2pi
out
sub
xor
popf
fsubrs
lcall
out
pushf
and
inc
daa
sub
js
mov
push
mov
push
mov
sub
loopne
sbb
adc
lcall
inc
sub
push
xor
jecxz
rorl
orl
loope
push
into
loopne
ss
or
int
into
push
outsb
cs
jnp
or
fisttpl
pop
xchg
mull
jo
and
int
mov
push
fstl
mov
cmc
outsl
jnp
and
fwait
adc
add
mov
in
loope
pop
or
inc
xchg
sub
icebp
jns
ds
xchg
loop
gs
or
dec
mov
aam
ret
mov
lea
mov
in
xor
cmc
pop
adc
push
push
jnp
mov
xchg
adc
fsubs
and
in
call
mov
inc
or
jecxz
xchg
jg
xchg
or
mov
mov
cli
bound
loope
inc
inc
out
mov
jae
jecxz
jmp
cwtl
popf
push
movups
stos
adcl
add
sti
and
scas
cmp
push
mov
pop
push
xor
push
cmp
mov
les
movsl
and
in
dec
shll
imul
cld
mov
subb
mov
push
cmpsl
adcl
fbld
test
mov
sbb
jmp
jl
cmp
addl
icebp
cmp
jno
add
adc
sahf
push
sbbb
mov
mov
sbb
hlt
shlb
imul
out
mov
daa
fs
enter
push
vfrczss
fidivrs
and
loopne
push
or
out
push
clc
cmpsl
ffree
mov
rclb
sbb
ret
sti
xor
repz
fdivrs
cmp
inc
sub
js
adc
jno
inc
jnp
mov
sub
mov
or
in
sbb
push
jo
mov
mov
lock
push
dec
nop
sub
add
xchg
test
es
stos
mov
ret
mov
imul
mov
mov
int
ljmp
inc
test
xor
dec
adc
or
and
or
out
fstpt
xchg
cmpsb
test
add
shr
xchg
mov
add
push
push
jl
incb
shlb
dec
gs
repz
je
cld
fsubrs
insb
xchg
xchg
fwait
jmp
or
pusha
or
orl
subb
adc
imul
dec
mov
je
pop
jg
mov
fs
or
pop
jl
scas
add
xor
mov
mov
sti
mov
xchg
jecxz
xor
cmp
and
pop
xor
sbb
sub
pop
inc
pop
pop
xor
mov
mov
mov
loop
dec
stc
mov
insb
shlb
imul
or
push
clc
cmpsl
mov
scas
rcll
loope
pop
iret
popf
fldt
mov
out
or
mov
loop
mov
sub
mov
jmp
jp
popa
fwait
cmpsb
xchg
dec
ljmp
movsb
dec
andl
or
into
mov
cs
lahf
fsubl
cltd
cmp
lea
fcmovnb
subl
jge
aad
jbe
addb
dec
ret
ds
push
loope
das
mov
mov
jns
cmc
add
xor
jnp
loope
popf
pop
push
mov
cld
add
out
jae
mov
clc
push
stc
es
jmp
mov
jbe
push
pop
sbb
movsl
in
push
in
icebp
je
hlt
jne
pop
lock
lret
idivb
test
movb
idiv
test
and
imul
rcll
sbb
es
dec
xchg
or
push
adc
mov
mov
or
and
shlb
cltd
xchg
add
in
or
lret
mov
jp
cmc
ss
pop
aas
pop
std
push
rclb
cmc
shrb
in
or
test
cmpsb
pop
scas
push
mov
pop
sbb
jecxz
add
xor
cmp
int
dec
nop
stc
loopne
daa
jl
adc
shrb
or
push
push
adc
mov
ret
push
xor
push
enter
ljmp
add
cmpsb
xor
adc
hlt
xchg
clc
fdivs
shrb
nop
test
lds
out
movsl
sbb
outsl
insl
out
dec
repz
leave
aaa
add
into
lret
jp
loope
fistps
leave
push
lret
push
incb
jl
add
cmp
jns
add
mov
leave
xchg
adc
xchg
or
shl
pop
addr16
pop
data16
ss
mov
int
es
fldenv
pop
scas
cli
inc
cmp
dec
mov
test
stos
pop
cmp
and
xchg
add
adc
xchg
ja
in
jl
in
jmp
pusha
test
xchg
jecxz
imul
pop
and
aad
unpcklps
pop
andb
cmp
push
clc
xor
xchg
daa
and
add
sbb
movl
dec
shll
adc
je
icebp
fnstcw
out
mov
movsl
mov
js
js
cmp
inc
and
jnp
add
or
xor
dec
and
fcmovb
inc
incb
out
mov
jae
inc
sub
xchg
outsl
lahf
mov
inc
ds
movsl
cmc
xor
inc
mov
push
or
in
loop
out
int
push
test
sub
sti
test
test
ds
lea
sbb
dec
jns
mov
xor
jl
inc
pop
fstpl
mov
and
mov
pshufw
pop
les
push
clc
dec
inc
fcmovnb
mov
ds
xor
push
fdivrl
ds
xchg
sbbl
jge
outsb
das
mov
nop
push
sub
sbb
out
lods
andb
roll
push
xchg
out
arpl
push
daa
sub
or
mov
mov
mov
out
aam
push
adc
pop
sub
nop
pop
ret
flds
cmc
or
sbb
hlt
mov
fucomip
cmp
inc
xor
aas
sahf
jl
js
ljmp
mov
pop
mov
sti
call
dec
xor
out
icebp
ljmp
lods
mov
loop
lcall
jnp
or
inc
cmpsb
mov
fisubs
mov
and
jbe
bound
dec
xchg
dec
mov
icebp
or
add
dec
fnstsw
jge
mov
push
adc
icebp
ljmp
fisubl
pop
pushf
xor
jns
sub
xchg
push
iret
mov
sbb
test
adc
arpl
dec
mov
jg
jae
shll
adc
pop
xchg
outsl
iret
je
pop
mov
push
or
mov
arpl
pop
xor
push
js
insl
nop
lds
orl
sub
mov
push
sbb
loopne
mov
xor
add
add
outsb
and
xor
jmp
inc
repz
repz
pop
jns
mov
aaa
shrb
or
fidivrs
jmp
sarl
pop
adc
aad
das
cltd
mov
jmp
lcall
sahf
cli
les
xor
jp
loopne
xor
icebp
inc
mov
cwtl
jg
xorl
movsl
sbb
movsl
sbb
or
adc
test
shlb
ja
adc
mov
mov
jae
pop
mov
inc
orl
and
ljmp
inc
and
addr16
or
adc
mov
add
push
cld
or
xchg
jbe
mov
pop
sti
and
loop
push
arpl
sub
push
cmp
sbb
jmp
ljmp
xor
dec
bound
mov
mov
cli
loopne
addl
cwtl
cmc
into
add
sbb
movsl
push
mov
hlt
xor
xorl
xor
and
adc
xor
enter
fnsave
loop
jge
popf
add
ss
cld
push
and
mov
mov
loope
cwtl
rcll
shlb
jbe
sub
jno
sub
xchg
movsb
loope
jle
insb
and
aam
or
test
insl
insl
js
push
push
imul
mov
rol
jle
xchg
cmp
jns
fildl
jb
mov
cmp
sub
mov
push
ret
mov
dec
sbb
inc
jmp
fsts
into
data16
mov
int3
test
lea
or
adc
add
ljmp
popf
int
jns
push
dec
push
rcrl
jnp
jbe
mov
push
xchg
ror
aaa
sahf
push
outsb
cmc
or
mov
ljmp
imul
nopl
aaa
add
fstl
pop
sbb
inc
xlat
fldcw
pop
out
push
mov
pop
arpl
repnz
jne
insb
pop
xchg
push
inc
jns
and
jmp
lods
fwait
jecxz
cmp
std
push
ss
pop
mov
pop
dec
mov
iret
outsl
lods
enter
mov
clc
add
lcall
cmp
dec
aas
call
test
and
fimuls
mov
imul
sbb
fistl
xlat
dec
xlat
loope
nop
outsl
sbb
or
ss
adc
adc
loopne
into
sbb
cwtl
ret
xor
mov
push
mov
mov
mov
mov
scas
or
add
lea
test
repnz
push
lds
mov
test
lods
jmp
std
or
mov
add
ret
jle
mov
mov
rcrb
inc
dec
pop
inc
aaa
divb
mov
xor
xchg
rcll
clc
cli
es
pop
cmpsb
stos
into
push
jbe
pop
cmp
jo
xchg
xor
inc
mov
les
sub
xchg
idivl
adc
pop
mov
test
cmp
loope
xor
inc
movsl
mov
mov
mov
jecxz
inc
xlat
add
mov
outsb
inc
push
aas
insb
fsubs
pop
jg
iret
cmpsb
inc
test
sbb
movb
push
enter
or
pop
jl
fwait
adc
or
lea
pop
pop
xchg
sahf
dec
aaa
lock
les
pop
inc
inc
and
jp
ret
mov
insb
adc
pop
xor
cmpsb
fisttpll
aam
mov
inc
movsl
jbe
push
adc
mov
in
push
push
clc
loop
ljmp
fmuls
mov
sub
sahf
xor
fstl
sbb
fwait
jecxz
adc
lds
dec
xor
inc
and
jb
mov
lcall
jbe
add
test
mov
clc
jmp
mov
and
inc
cmp
shr
daa
cmp
push
inc
and
cmpxchg
sub
dec
je
and
xchg
xchg
mov
jmp
incl
filds
mov
jecxz
push
xchg
adcb
xor
add
fsin
cmp
add
xchg
fidivrl
sub
bound
divl
sahf
repnz
inc
cltd
repz
mov
push
sub
pushw
sbb
sbb
mov
push
xchg
mov
js
pop
adc
jno
mov
mov
pop
pop
add
std
mov
sub
fwait
mov
inc
das
call
dec
sti
popf
dec
xchg
xor
loope
out
cmp
lahf
push
jnp
inc
xor
test
movl
jge
cmp
testb
inc
inc
sbb
bound
mov
jbe
je
mov
rorl
mov
and
push
jbe
aaa
xchg
pop
ljmp
inc
sub
adc
sbb
adc
insl
xchg
and
sub
jmp
jbe
and
lret
mov
cmp
dec
pushf
rol
repnz
sub
test
mov
jl
rolb
xchg
mov
mov
notl
mov
insb
popa
ffreep
and
popf
ret
add
push
js
xchg
clc
mov
sar
lds
lcall
sti
cltd
xchg
shlb
lock
test
dec
and
sbb
out
xor
addl
mov
push
mov
into
push
push
hlt
add
push
dec
ljmp
xor
xchg
cmpsl
ja
ret
cmp
popa
mov
dec
adc
or
cmp
clc
mov
push
sbb
out
sbb
stos
in
cmp
adc
addr16
xchg
pop
bound
and
nop
xchg
pushf
aaa
inc
hlt
mov
outsl
mov
adc
ss
insb
adc
rolb
adc
push
xchg
mov
pop
xchg
jle
mov
rcl
iret
fnsave
icebp
pop
and
mov
scas
xchg
loope
add
and
js
fisttpl
sbbl
pop
pop
bound
fistps
orl
or
cmp
in
shll
adc
jnp
call
shlb
repz
xor
or
push
push
mov
xor
xor
sbb
bound
pop
insb
iretw
mov
gs
or
push
mov
or
push
push
insb
xchg
ss
es
scas
cmp
mov
repz
inc
mov
movsl
push
inc
mov
or
outsb
xor
mov
clc
call
aam
mov
movsb
pop
repz
testl
pop
mov
sarb
push
mov
into
testb
xchg
or
jecxz
push
mov
sahf
mov
push
adc
sbb
push
movsb
dec
nop
aam
pop
add
fists
jmp
push
movsl
bound
inc
decl
jbe
adc
pop
adcb
mov
cmp
pop
popa
or
xchg
leave
fstps
mov
pushf
fists
mov
nop
popf
jb
pop
mov
out
movb
lock
scas
jg
lock
ds
cmp
dec
xchg
adc
mov
xchg
jae
jg
pusha
shl
int3
xchg
inc
nop
jl
mov
mov
mov
push
xchg
sbb
std
adc
cmp
stc
sub
iret
sti
mov
cmp
xor
icebp
cs
jnp
or
mov
and
jl
mov
xchg
rolb
sar
loopne
frstor
mov
loopne
mov
loope
inc
adc
xor
lds
sbb
sbb
popa
stos
push
push
jp
ja
addr16
inc
fisubl
mov
jp
add
je
pop
jmp
add
fs
or
inc
imul
push
aaa
lret
out
and
arpl
mov
sub
cli
addr16
and
jmp
mov
cmp
enter
mov
stc
add
mov
jp
in
xchg
pop
sahf
js
xor
clc
or
bound
sbb
mov
daa
out
xchg
imul
movsb
test
push
or
mov
pop
cltd
leave
vpmadcsswd
adc
aad
shrl
or
addb
xor
es
xchg
addb
test
rorl
fstp
das
inc
add
in
jns
or
mov
and
je
jmp
fwait
setg
jg
mov
icebp
sub
cmp
jmp
lds
fs
sub
scas
outsl
ret
arpl
mov
add
mov
add
sbb
adc
inc
repz
mov
inc
jo
aad
inc
pop
sbb
repnz
add
lods
testb
dec
and
push
cmpsl
cmp
bsr
and
out
sar
jbe
scas
sbb
adc
mov
sub
aam
mov
sub
sbb
push
pop
jle
test
inc
and
scas
or
cmp
aam
les
inc
cli
mov
mov
movsb
sbb
lock
aaa
push
test
jb
jecxz
clc
mov
xchg
lcall
fimuls
ficompl
cmp
cltd
mov
repz
push
jbe
aam
nop
loope
jge
pop
fdivl
lahf
scas
scas
lahf
dec
std
loopne
mov
lods
push
mov
mov
dec
pop
xor
dec
mov
frstor
mov
jo
fimull
inc
aam
lret
cmp
psraw
data16
mov
jg
in
mov
mov
cs
jmp
xchg
mov
jbe
es
ja
sbb
aad
repnz
jnp
pop
arpl
dec
jnp
fstpt
jns
or
sbb
xchg
mov
mov
sti
push
cld
jecxz
pop
in
jl
stos
pop
ja
dec
loop
dec
jl
adc
loopne
in
dec
stos
dec
fimuls
call
aaa
lods
jne
mov
je
int3
int3
fs
loopne
push
lods
adc
jae
inc
lcall
stos
push
sub
xchg
or
dec
jp
scas
enter
sub
adcl
sahf
cld
jle
cmp
test
imul
lds
das
jne
lock
lds
adc
pop
mov
sarb
in
inc
jb
pusha
call
jle
aaa
in
orb
mov
lods
mov
push
or
out
shll
pusha
push
lock
pop
nopl
loope
shlb
repnz
push
cmp
dec
nop
pop
js
outsl
fists
popf
jnp
icebp
or
sbb
mov
pop
iret
mov
rorl
je
mov
push
push
data16
mov
popf
fnstenv
popa
repz
bound
subb
lret
adc
push
xlat
rcrl
sbb
mov
std
mov
jle
stos
jb
cmpl
adc
pop
jmp
pop
or
in
mov
cwtl
jge
push
mov
std
icebp
sbb
push
pop
les
test
jne
pop
lcall
rcrl
lock
pop
shlb
or
or
cwtl
xchg
fldcw
loopne
je
xor
jne
inc
punpckldq
scas
loope
jo
outsl
mov
fwait
outsl
adc
and
cmp
dec
add
adc
stos
add
shlb
and
imul
shl
test
sahf
outsb
ja
pop
inc
push
sbb
jmp
jg
jecxz
mov
cmp
loop
fxch
jbe
ljmp
pop
inc
xchg
mov
iret
lea
clc
mov
xor
ret
fs
fs
dec
fildll
mov
or
sbb
aaa
clc
or
push
and
in
test
popf
rol
push
add
cmp
adc
pop
stos
fcmovbe
outsl
sbb
inc
pop
movups
push
lsl
xchg
ljmp
jp
push
ds
loop
push
pusha
lcall
add
insl
js
popa
test
xor
imul
adc
ficoms
adc
mov
js
cld
adc
jns
sbb
call
mov
add
adc
arpl
jo
loopne
sbb
mov
pop
cmp
cmpsl
sbbl
adc
js
out
xor
cmp
loope
sbb
and
lods
jge
and
or
adcb
jecxz
sbb
sbb
jo
sbb
fimuls
imul
pushf
out
push
push
sbb
fcomps
rcr
scas
push
popa
or
movsl
mov
popf
rclb
cli
insb
fistpll
jne
cmp
mov
jbe
xchg
ret
sub
mov
mov
mov
fsubp
call
ret
aam
shll
mov
xor
sub
mov
or
stc
lods
xlat
push
adc
fdiv
call
arpl
daa
sbb
fisubs
testb
add
es
sub
jo
mov
sbb
pop
cmp
adc
pop
fsubr
inc
jns
push
ret
fwait
inc
aad
sbb
shll
pop
subb
jno
adc
ss
xchg
mov
leave
xor
xor
or
lahf
xor
add
mov
insb
and
cmp
cmp
pusha
inc
add
dec
outsb
in
lods
adc
jmp
imul
cmp
arpl
adc
inc
sub
mov
idivl
cli
mov
adc
and
inc
fistl
xchg
add
cmp
mov
bound
test
mov
test
push
clc
pop
faddp
sub
outsb
mull
xorl
mov
mov
jecxz
push
icebp
and
outsb
fmuls
mov
jmp
mov
pop
shl
fsubs
mov
sar
mov
enter
dec
xor
adc
dec
shrb
push
jae
fmull
out
add
add
scas
into
test
or
inc
fldln2
xchg
fnstenv
das
adc
mov
cmp
pop
push
mov
push
sub
insb
dec
cmpsl
fisubs
mov
sub
sahf
arpl
repz
nop
into
shlb
and
xor
jge
mov
int3
add
mov
pop
xorl
cmp
das
aam
test
inc
jae
dec
xchg
lea
mov
pop
push
sbb
mov
push
sub
lret
gs
shr
insb
loopne
lock
movsl
lret
into
xchg
cmp
fcomi
push
or
das
lret
hlt
dec
arpl
mov
bound
loope
xor
push
mov
jmp
mov
imul
cmpsl
ds
push
cmpb
out
xchg
dec
pop
cmpsl
cmp
push
arpl
iret
mov
xor
jns
mov
bound
jp
jp
mulb
out
movsl
pop
mov
push
jmp
push
stc
dec
daa
jo
mov
mov
adc
lds
add
push
sub
aam
mov
sbb
int3
popf
loopne
mov
push
xor
push
push
loopne
jle
int3
rorl
jecxz
nop
repz
pop
fldl
sub
xchg
push
cmpsb
popf
or
sarl
mov
mov
dec
jp
sbb
mov
xchg
cwtl
push
or
rorl
out
and
sub
mov
rorl
inc
pop
push
or
pop
ret
mov
jo
add
xchg
fidivl
enter
push
aas
flds
test
into
lahf
jb
orl
leave
pop
stos
or
sub
in
clc
call
add
sub
mov
call
cmpsl
and
je
inc
mov
movsb
inc
or
pop
jbe
js
push
jl
push
arpl
jecxz
test
sbb
cltd
int3
loop
add
fisubl
pop
add
xchg
inc
jle
adc
adc
adc
into
cmp
inc
icebp
pop
arpl
xchg
in
ds
xchg
mov
and
shrb
mov
lds
dec
js
mov
clc
cmp
test
xchg
cmc
shrb
in
sub
addr16
xor
ljmp
gs
lret
mov
sti
cmp
pop
cs
shl
rcr
sbb
mov
dec
push
lds
sbb
mov
cmp
aaa
mov
je
jbe
es
mov
test
mov
int
aas
sub
add
cli
xor
fucomp
jmp
add
push
pop
in
ja
push
dec
popa
je
call
mov
or
out
hlt
enter
push
adc
mov
and
jnp
outsb
jmp
pop
std
or
sbb
mov
cs
or
lahf
mov
push
fisttpll
icebp
inc
ljmp
test
es
loopne
push
aas
je
xor
in
push
shll
push
fnstsw
insl
outsb
xlat
outsl
dec
sub
repnz
mov
fdivl
jmp
cmp
test
mov
cmpsl
out
imul
aaa
sbb
andl
icebp
jl
sub
jecxz
adc
adc
mov
mov
or
stc
and
pop
ljmp
mov
les
add
pop
movsb
xchg
clc
or
arpl
add
fisttps
rcr
in
leave
ret
shl
lcall
inc
lock
std
popa
in
lret
dec
dec
add
popf
daa
insl
pop
lahf
lret
xchg
push
insl
loopne
fdivrl
cmp
xor
jg
push
add
inc
sbb
sbb
call
push
pop
adc
xor
mov
push
and
stc
dec
xchg
mov
adc
xor
test
push
popf
or
mov
js
daa
cltd
dec
out
xor
xchg
ficoms
int
test
sbb
cli
pop
adc
cltd
in
adc
pop
lcall
ds
scas
ljmp
loope
dec
addr16
fmuls
movsl
loop
mov
rolb
mov
ret
adc
add
rorb
dec
andb
dec
stos
clc
inc
das
or
out
push
sti
adc
mov
out
add
scas
jecxz
push
push
adc
xor
ret
sbb
dec
sbbb
fadd
push
mov
sbb
cmp
aaa
fcmovbe
popf
movsl
inc
mov
adc
sbb
imul
ret
adc
or
or
inc
loope
cld
add
add
jbe
out
push
sahf
jge
call
jb
push
and
xchg
or
cmpsl
out
pusha
xchg
jns
std
push
pop
in
in
fldt
jge
mov
push
icebp
jg
loope
mov
pop
push
and
cmp
les
inc
cmp
sub
push
mov
xor
sub
xor
jne
sbb
push
jp
sarb
into
popf
add
and
cld
jne
bound
sub
sub
enter
adc
les
out
or
jmp
pop
mov
mov
gs
icebp
add
arpl
xor
addb
jne
or
jo
mov
movsb
stos
call
sbb
daa
pop
sbb
mov
insb
adc
cmp
out
or
imul
add
js
cmovge
imul
fmuls
jg
enter
mov
je
je
rcrb
pop
pop
dec
pop
mov
mov
cmp
movsb
push
mov
sbb
sahf
faddl
leave
inc
or
cltd
in
cmc
ret
aas
xlat
outsb
movsl
ds
mov
js
pop
pop
xchg
fidivl
adc
cmp
in
negb
adcl
addr16
mov
loop
cli
daa
fxch
mov
adc
pop
rolb
mov
mov
clc
inc
jecxz
sub
mov
insl
jmp
rolb
incl
jl
mov
sub
ret
lock
frstor
fidivl
mov
jge
inc
sbb
jae
mov
or
xchg
xor
jmp
aas
loop
insb
jmp
hlt
add
inc
mov
imul
and
js
jo
stos
out
xchg
pop
xchg
insb
push
daa
stos
sbb
lods
int3
xchg
xorl
scas
leave
adc
dec
xchg
call
in
cmp
pop
rcrb
cmpsb
xchg
cmc
adc
xchg
add
cmp
sub
inc
out
mov
mov
test
jb
daa
or
cmp
pusha
arpl
add
bound
and
fwait
pop
add
sbb
lret
xor
pop
adc
mov
inc
int
add
and
inc
and
jns
push
xlat
das
mov
inc
sbb
xchg
mov
xchg
repz
ja
loopne
je
sub
imul
or
test
adc
mov
sti
add
popl
les
cmpl
inc
icebp
inc
shrl
test
lret
ljmp
fdiv
add
ret
ljmp
mov
xor
hlt
dec
and
imull
mov
ret
test
sbb
and
cli
cmp
scas
add
jmp
adc
pop
cmp
cmp
mov
fcoms
sub
ljmp
divb
daa
inc
mov
dec
jge
pop
cltd
mov
test
cmpsl
sti
mov
xchg
jo
iret
mov
icebp
inc
pop
fbstp
xchg
push
sbb
jns
je
aam
insb
scas
xchg
cmpl
pop
mov
jle
dec
adc
cmpsb
movsl
mov
leave
xchg
ret
in
test
sub
addr16
dec
fcompl
xchg
mov
push
push
sbb
and
pop
lcall
push
inc
inc
in
jb
scas
jns
cmp
into
cmp
or
jo
ret
sbb
stos
mov
adc
xor
mov
ret
pop
jns,pt
and
mov
add
or
mov
sti
push
mov
mov
push
xchg
sbb
es
jmp
adc
cld
mov
out
mov
sahf
xchg
sub
sbb
sbb
push
and
scas
pop
mov
mov
sti
int3
shlb
aad
pop
pop
std
popf
insl
fs
cwtl
and
pop
push
pop
imul
fidivrl
mov
push
fistps
enter
dec
mov
and
push
mov
out
and
inc
icebp
xor
add
push
or
cmp
pop
xor
es
ficompl
out
orb
jge
andb
test
xchg
cmc
mov
js
mov
paddsw
xor
cmp
ss
or
pop
push
lea
loopne
pop
adc
lods
ljmp
dec
pop
sbbb
sub
and
mov
adc
or
jecxz
aaa
cmovno
pop
push
jne
icebp
aaa
mov
pop
push
addr16
push
xor
cmp
mov
sub
dec
data16
push
add
sbb
pop
cmp
mov
and
mov
mov
adc
inc
push
std
cltd
enter
or
push
jb
push
cmp
test
fsubp
inc
and
push
mov
xor
inc
cltd
add
fcomps
pop
nop
push
std
test
jle
and
inc
and
call
sub
cmc
inc
pop
movsb
ud2
mov
mov
jmp
push
leave
mov
mov
jbe
hlt
cmpb
lods
mov
push
jbe
repz
push
and
in
test
and
add
cmp
js
icebp
jmp
divl
lret
push
aam
inc
mov
mov
xchg
xchg
dec
add
dec
mov
int
and
inc
inc
mov
sub
sbb
inc
jl
ret
inc
insl
mov
addr16
xor
pop
outsb
or
cmp
arpl
mov
pop
mov
lock
notb
call
mov
mov
mov
adc
roll
hlt
movsb
xchg
fcompl
shr
rcll
and
jl
sysenter
loopne
testl
add
outsl
jb
das
out
bound
lods
push
loopne
cmp
xlat
xchg
aad
cmp
mov
sbb
je
mov
jbe
dec
xor
cmp
and
push
fdivs
ja
mov
push
push
xchg
les
and
aam
xor
in
ds
outsl
xor
sub
cs
push
mov
test
adcl
in
test
push
mov
movsl
cmp
mov
fwait
or
jle
sbb
gs
or
add
ds
adc
in
aaa
nop
clc
sub
sbb
movsl
add
xchg
push
rorl
pop
fcmovnu
shr
mov
daa
mov
jmp
fnstcw
pop
fistl
push
sbb
adc
rcrl
mov
jo
jmp
out
fstps
ljmp
lods
fwait
push
mov
mov
cmc
mov
aaa
sub
jb
dec
add
pop
imul
faddl
xchg
clc
je
sti
cmp
jo
iret
shrb
lea
adc
xor
sub
cmpl
in
pop
lock
jp
lds
and
mov
ds
addl
mov
sub
push
dec
mov
lahf
cltd
adc
imul
imul
loope
mov
and
sti
inc
mov
push
pop
aaa
xchg
push
ffree
and
test
loope
xor
pop
out
and
sbb
dec
out
gs
cmpb
pop
gs
mov
les
push
imul
push
fiaddl
cwtl
inc
addr16
rcr
test
xor
filds
daa
call
mov
filds
addr16
mov
push
enter
jne
cmp
mov
lret
jecxz
or
lcall
dec
or
rcrb
inc
shll
inc
adc
sub
mov
pop
cmp
inc
pushf
jmp
jle
add
cltd
adc
xor
jns
insb
xor
xor
sbb
mov
fistl
mov
into
mov
mov
or
mov
imul
lret
mov
cmc
push
mov
jg
punpckhbw
lock
outsb
dec
mov
mov
xchg
add
lock
sbb
orb
sbb
and
aam
pop
outsl
clc
call
add
ret
fcmovnu
mov
cmpsb
cmp
fcmove
sbb
sar
nop
loopne
cmpsl
mov
test
test
xchg
xlat
jl
and
cli
stos
jg
and
cmp
setbe
aam
leave
mov
cmp
mov
mov
sarl
mov
xor
icebp
dec
push
mov
test
mov
jno
mulb
mov
or
ror
pop
fdivr
sbb
lods
sbb
jbe
pop
mov
repz
add
sub
popa
mov
setnp
add
in
into
mov
insl
jnp
ret
jge
loop
mov
testb
and
or
or
lock
or
jno
push
mov
shll
xchg
sar
mov
lods
or
test
cli
push
arpl
test
jecxz
imul
jb
xchg
xor
rcrl
and
and
fs
adcl
and
bsr
and
pop
cli
div
adc
mov
pusha
into
xor
arpl
add
xor
lods
cli
dec
cmc
mov
adc
mov
icebp
add
mov
xchg
or
out
push
push
and
push
dec
inc
jo
and
jg
cli
pusha
and
mov
inc
mov
insb
clc
test
sbb
cmp
xor
xor
js
mov
popf
inc
fs
cmc
lcall
mov
popa
in
mov
insl
dec
mov
mov
cltd
lret
mov
rolb
lods
push
mov
jmp
ror
rclb
sub
out
inc
jae
inc
je
fwait
subb
mov
fdivrl
and
mov
scas
cmp
aas
pop
int
pusha
jae
mov
pusha
add
outsb
xchg
cmp
cmp
in
in
xchg
int
sub
mov
push
xchg
iret
scas
or
inc
test
nop
dec
ret
push
jnp
in
adc
mov
in
or
jle
sahf
fisttps
sub
hlt
sub
xor
push
pop
mov
mov
add
fisttpll
jo
sti
adc
insb
or
cmp
inc
pop
orb
mov
xchg
into
sub
add
cmp
or
inc
test
call
rcr
inc
xor
push
scas
sub
or
cli
ret
mov
adc
fisttps
mov
sahf
xchg
outsl
andl
sbb
repz
adc
fcoml
mov
scas
add
mov
mov
outsb
push
fldt
dec
push
add
ss
fstpt
and
out
pop
daa
stc
sbb
daa
mulb
dec
sbb
push
xchg
mov
clc
push
mov
push
pop
pop
insb
mov
rcl
jb
mov
mov
xor
int
xlat
and
cli
jbe
stos
cmp
sbb
adc
loope
or
pusha
add
ja
std
mov
cmpl
jge
fcomip
jae
sbb
fsubl
sbb
jge
mov
push
jo
xor
insb
and
adc
push
xor
mov
push
mov
add
repnz
mov
mov
sbb
sbb
jbe
mov
gs
test
fidivrl
pop
mov
cmp
ds
dec
cmc
pushf
aad
mov
pushf
dec
sti
pop
sbb
pop
call
pop
dec
lods
sbb
inc
mov
ss
and
push
or
mov
mov
aaa
push
rol
jecxz
daa
xor
sub
fwait
sub
or
xchg
sti
add
fimull
lret
inc
int
dec
popa
mov
inc
xor
mov
adc
xchg
aad
mov
jns
cs
fsubs
mov
jecxz
sti
fisubrl
cs
push
gs
xchg
xlat
add
shrl
daa
inc
mov
mov
pop
js,pt
and
dec
cmp
mov
adc
xchg
fcomps
insb
cwtl
fistpll
add
xchg
sub
ljmp
repnz
xchg
fldl
test
pop
sbb
inc
lods
mov
test
and
lods
dec
mov
mov
loope
cmp
cmp
arpl
rorl
out
jl
and
add
enter
out
inc
out
and
dec
frstor
push
push
test
and
jecxz
xor
xchg
shll
sbb
dec
lods
jle
pop
fsubrp
fsubs
test
jmp
pop
sbb
mov
mov
cld
ljmp
daa
fcomps
lcall
ret
adc
mov
outsb
call
push
dec
adc
cmc
addl
sbbl
mov
loop
pop
push
cmpsb
and
test
jbe
sub
call
add
out
cmpb
out
xor
lods
sub
ror
je
jo
jmp
pop
mov
or
xor
xchg
test
mov
je
je
inc
mov
fdivl
push
pop
loopne
sti
mov
push
vmwrite
inc
out
pcmpeqd
js
clc
jl
decl
insb
ljmp
cltd
and
lahf
mov
dec
fmul
jnp
xchg
and
cmc
shrl
sarl
daa
imul
add
dec
or
cltd
add
cmp
xor
sbb
jne
sahf
cmp
fbstp
andw
xor
loope,pn
icebp
jo
out
mov
dec
subb
mov
fdivs
repnz
xor
inc
push
jg
frstor
mov
int3
outsb
or
jle
popa
movsl
in
data16
pop
xor
mov
push
mov
cld
and
fidivl
add
rorl
lods
ja
dec
push
jmp
cmpsl
jb
pop
lcall
inc
test
sti
aad
push
pusha
xchg
adc
inc
dec
sbb
push
stc
daa
aad
jne
ljmp
mov
ljmp
stc
dec
cld
fisttpll
mov
mov
sub
test
jno
mov
sub
stc
ret
push
xchg
cmp
push
imul
shl
filds
call
divb
dec
mov
jo
mov
sub
mov
or
pop
sbb
pop
ror
pusha
mov
shll
mov
int3
cmpsb
adc
and
inc
inc
and
and
add
movsb
cmp
push
in
testb
fmull
subl
imul
lea
es
lock
push
mov
lods
xchg
mov
mov
into
xchg
stc
clc
test
mov
out
sbb
sub
add
mov
xchg
jne
or
ja
ja
pop
lahf
inc
pushf
stos
out
jns
repz
inc
lcall
push
fwait
inc
xchg
call
cmp
pushf
scas
shlb
dec
in
jge
scas
add
push
xor
or
mov
fmull
add
mov
int
xchg
or
mov
shr
pop
scas
outsl
in
adc
aad
adc
add
fwait
mov
ss
or
dec
addr16
mov
sbb
xorl
mov
adc
jmp
js
int3
out
cmp
clc
pop
pushl
inc
ljmp
iret
pop
repz
scas
xor
popf
lcall
and
mov
pop
les
push
fwait
lahf
pop
add
loopne
pop
leave
fistps
imul
mov
pop
xorb
call
stc
pop
push
mov
mov
cmp
mov
loop
scas
jge
lea
inc
popa
cmp
xchg
movsl
mov
xor
outsb
or
push
sbb
and
mov
mov
add
loop
shl
data16
xchg
adc
xchg
imul
in
lahf
push
pmuludq
das
in
jmp
jmp
testb
sub
outsl
or
xor
jmp
mov
and
and
jg
enter
loope
add
out
sahf
aaa
inc
xor
inc
add
and
lock
sbb
mov
pushf
bound
minps
push
push
sub
add
push
and
sbb
mov
jbe
jge
jmp
pop
popf
or
sarl
jg
xor
inc
cmp
lret
in
enter
cmp
sbb
addr16
popf
push
and
xchg
outsl
divb
jne
and
cmp
add
mov
inc
std
bound
push
outsb
xor
or
or
or
push
jo
loope
sbb
cmc
ret
ret
cmp
sbb
test
ret
insl
aas
inc
push
pop
imul
mov
and
cmc
xchg
adc
sti
inc
negl
popa
stos
jle
or
or
and
nop
dec
cmc
jle
add
cmp
les
mov
push
das
fdiv
inc
push
rcrb
xchg
out
and
mov
pop
xchg
or
pushf
ficomps
jo
adc
jno
stos
insl
inc
pop
enter
cs
aad
fwait
call
adc
stos
pusha
jmp
stc
pop
fldt
nop
cmp
mov
cmpsl
pop
sbb
sarl
and
jecxz
inc
jge
out
dec
sbb
inc
push
sbb
or
or
push
arpl
dec
add
mov
fisttpll
js
mov
cld
arpl
cmp
dec
lret
mov
cmpsb
imul
addb
test
dec
les
mov
mov
test
test
cwtl
push
xor
jl
xchg
sub
mov
jno
and
add
shlb
shl
cld
das
adc
into
sbb
lahf
aad
jno
nop
mov
jo
sub
pop
mov
outsl
pop
fisttpl
ret
hlt
lea
sbb
sbb
add
adc
and
cs
xchg
xchg
or
mov
loope
rcrl
mov
jp
call
filds
clc
cmpsb
test
lock
push
push
or
aam
in
sub
in
pop
add
icebp
notb
mul
inc
jne
or
push
adc
js
and
popa
mov
cmp
in
add
clc
jnp
pusha
inc
leave
xchg
add
inc
hlt
outsb
shlb
ja
loop
test
mov
mov
dec
sbb
push
add
pop
dec
dec
mov
enter
outsb
pop
mov
mov
imul
add
dec
ret
orb
push
stc
xchg
sbb
or
add
jno
xor
sar
mov
std
mov
pop
in
adc
pop
cmp
andl
lea
les
mov
jo
xchg
push
push
jl
push
sbb
das
in
pop
sbbl
and
dec
iret
adc
jbe
inc
xor
add
lret
or
adc
dec
jge
mov
mov
clc
aaa
lcall
xor
mov
lock
xchg
xchg
and
cmp
xor
pop
cld
xchg
push
in
sbb
mov
mov
sbbl
jae
push
js
dec
addl
inc
negl
sbb
fstpt
adc
pop
cwtl
mov
mov
pop
add
out
jnp
mov
inc
cli
xchg
cli
setae
or
sahf
call
cld
dec
loope
stos
imul
mov
andb
lcall
or
jp
inc
enter
cmp
adc
ja
roll
mov
les
ljmp
cmp
scas
sub
lret
paddq
add
gs
adc
outsl
xor
sahf
sub
or
mov
jge
lock
mov
clc
inc
imul
mov
out
or
or
cli
lods
repnz
lock
mov
nop
cmp
rolb
lock
mov
dec
xchg
data16
insb
icebp
inc
test
mov
enter
insb
sbb
push
pop
ret
dec
imul
add
mov
daa
jmp
mov
cld
andl
movsb
xchg
jmp
test
pop
sub
aad
mov
mov
mov
and
stc
push
scas
das
std
pusha
subb
fnstsw
addl
shll
add
push
mov
into
dec
daa
sub
jmp
mov
cmp
enter
mov
adc
stos
je
ret
scas
adc
sub
push
hlt
mov
and
adc
cmp
jo
or
ret
aas
cltd
sub
mov
cmp
insl
lret
mov
idivb
ret
ret
fimuls
mov
adc
ret
fs
mov
adc
pop
popa
sbbl
push
push
cltd
insl
xor
aas
je
int3
and
daa
push
out
mov
add
xorl
leave
popf
xor
movsl
insl
repz
adc
fmul
fsub
pop
popf
inc
mov
push
inc
fcmovnb
pop
push
and
ret
pop
cmpsl
jne
or
lods
popa
cs
in
xchg
sbb
push
cmp
xlat
lea
sub
mov
inc
xchg
lock
popa
xchg
test
sub
lret
shll
roll
test
xor
mov
scas
mov
ljmp
sub
les
test
jno
and
dec
mov
mov
jg
push
fbld
sahf
fmuls
fnstenv
adc
std
loop
fs
adc
loopew
loopne
adc
fidivs
nop
adc
shlb
mov
rcrl
enter
push
enter
mov
and
out
cmpsb
test
or
es
xchg
enter
xchg
jmp
push
aaa
ffree
in
inc
lods
insl
addb
adc
inc
clc
and
mov
popf
or
or
or
xor
sbb
mov
cli
fidivrs
fcoms
pop
les
lahf
iret
lds
adc
sbbb
pop
movsl
inc
clc
add
mov
call
adc
test
fidivs
mov
push
push
data16
mov
inc
testl
cwtl
loope
jmp
dec
mov
xor
movsb
and
pop
mov
test
mov
inc
mov
pusha
adc
xor
xchg
nop
cmp
es
rclb
je
pushf
sarb
sbbb
lahf
lock
std
jae
inc
fwait
sbb
xchg
mov
call
lret
lods
or
inc
jno
xor
adc
and
divl
adc
adc
push
jae
mov
pop
dec
xor
inc
fsubl
aad
jmp
xor
aam
cmp
adc
test
rclb
cmp
hlt
cmpsl
lcall
sub
push
add
insb
cmp
push
lea
cmp
or
cmpsb
es
inc
jp
decb
push
leave
popf
or
inc
push
lock
mov
outsb
add
and
rcll
mov
xchg
or
and
cmpsl
lock
lods
outsb
and
in
ljmp
or
mov
divb
test
fildll
or
leave
sub
pop
or
fldl
mov
std
fildl
pop
mov
lret
adc
es
jp
and
jmp
test
sbb
add
das
push
xlat
fwait
add
testb
test
dec
in
pop
je
test
mov
xchg
add
jl
push
into
add
ffree
jge
add
inc
lds
scas
xchg
jae
inc
inc
jl
es
scas
sub
das
xor
xlat
push
and
lcall
stc
mov
jmp
jmp
jnp
and
fildll
add
icebp
andl
push
incl
cmp
bound
add
loopne
out
xor
imul
push
clc
orl
pop
push
aam
mov
xchg
mov
jmp
mov
into
xor
in
adcw
add
leave
sub
add
out
adc
xor
mov
cmpsb
jg
mov
add
or
xchg
add
faddl
outsb
mov
in
scas
mov
shrd
pusha
pop
xchg
fidivrs
xchg
lahf
loop
dec
cmc
add
imul
mov
mov
or
movsl
fnsave
mov
pop
lret
add
or
push
bound
and
sbb
or
xchg
loope
jmp
sub
pop
shrb
das
cmc
sub
mov
or
mov
jp
sbb
cmp
std
jbe
es
adcl
nop
out
out
xchg
lods
outsl
inc
pushf
adc
pop
clc
pop
xor
add
jp
push
pop
fstl
adc
inc
push
aas
sub
push
mov
mov
pop
cmp
jns
aad
hlt
mov
jne
mov
mov
mov
push
jg
js
sub
xlat
mov
jne
mov
xchg
inc
sbb
lahf
gs
iret
popa
dec
fistpll
loop
push
ss
or
repnz
aaa
insb
aas
or
add
sub
fwait
adc
cmc
cmpsb
fidivrl
dec
inc
or
insb
test
sbbl
sub
sbb
int
int
fmuls
int
jbe
nop
lahf
test
negl
jo
jnp
outsb
lds
lock
ret
call
shl
rorb
xchg
jo
xchg
fcmovne
rorl
je
xor
sub
mulb
jp
xlat
inc
movb
bound
jnp
faddl
hlt
mov
inc
mov
imul
or
jbe
adc
push
call
jmp
jge
ret
adc
icebp
mov
jno
sbb
outsb
or
ret
sar
fsubrp
add
pusha
pop
jns
dec
mov
mov
adc
add
aaa
sub
fildl
loopne
sub
mulb
insl
mov
dec
in
cs
mov
push
mov
gs
hlt
andps
les
out
scas
cmp
and
jb
xchg
dec
stos
jge
pop
clc
mov
mov
mov
fdivs
cmp
and
mov
ret
dec
push
faddp
test
adc
das
jp
sbb
jge
and
stos
fbstp
sub
mov
mov
dec
fiadds
rcrb
mov
loopne
scas
xor
add
decb
xlat
mov
loope
pop
adc
dec
loop
sahf
mov
insl
jb
jl
xchg
arpl
scas
inc
js
fmull
sbb
clc
stos
inc
adc
les
mov
jmp
jle
imul
outsb
jnp
popa
out
sub
icebp
into
movsl
push
movsb
clc
pop
mov
sbb
pop
dec
cmc
iret
mov
jmp
or
movsb
or
test
mov
shll
cmp
or
iret
inc
cmovp
adc
xchg
addr16
cmc
cmp
mov
bound
push
pop
addr16
add
inc
jns
jmp
jp
cmp
filds
cli
adc
jae
insl
dec
pop
int
sub
gs
leave
cmp
test
add
outsb
or
push
mov
insl
ret
in
stc
les
icebp
lea
pop
sbb
cwtl
xor
jmp
push
cmp
pusha
rcrl
adc
xchg
jl
adc
lds
mov
and
add
in
push
dec
out
mov
sbb
add
xorl
pop
add
sarl
outsl
paddb
pusha
pushf
and
cmp
orb
fucomp
push
adc
mov
sbb
push
aad
pop
or
or
outsl
jl
ret
arpl
mov
dec
jb
sbb
jb
jle
shlb
sub
into
jl
js
andb
add
out
add
sti
daa
inc
xchg
inc
mov
or
and
sub
out
movsb
xor
or
loopne
mov
xorl
pop
jne
xchg
pop
pop
lcall
xor
adc
mov
rcll
jge
mov
xor
pop
adc
pop
add
out
pop
pop
movsl
xor
mov
xor
sbb
sub
mov
pop
js
mov
or
sbb
dec
mov
and
repz
mov
or
pop
out
or
pop
outsl
cmp
das
mov
cli
repnz
popf
jo
ss
pop
mov
fadd
or
call
ficoms
inc
popa
daa
lock
mov
lods
stc
mov
and
xor
mov
mov
pop
leave
inc
sub
icebp
imul
bound
arpl
mov
sub
outsb
xchg
pop
adc
je
sbb
sub
or
pop
push
andl
ds
movl
xor
ja
shl
dec
shll
inc
pusha
pop
mov
mov
adc
mov
leave
pcmpeqw
or
sub
iret
test
roll
pusha
add
mov
loop
aaa
out
lretw
ds
cmp
fs
stos
inc
adc
outsl
jp
or
loop
xor
dec
push
mov
ret
dec
sbb
pop
fisubrs
and
jo
fildl
push
inc
rorb
mov
push
or
fbstp
test
dec
sbb
cmp
std
das
mov
inc
add
sub
jno
sti
push
inc
aad
push
std
adc
xor
repz
dec
mov
push
mov
mov
and
ret
push
aas
mov
inc
enter
lods
popf
inc
fcmovnbe
inc
loopne
and
adc
sti
sahf
cmp
hlt
ljmp
xor
lds
add
cmc
test
movsl
in
inc
rol
das
push
add
adcb
dec
movsl
sbb
les
and
aaa
jl
lret
fsub
mov
lds
rcr
sub
es
add
and
adcb
addr16
ret
dec
mov
stos
lcall
sbb
pop
push
in
mov
inc
xlat
lcall
dec
ud2
pop
adc
push
mov
adc
jnp
lret
pusha
mov
fistpl
out
iret
sbb
mov
fwait
lret
rcrb
out
lea
xchg
sbb
fdivs
shl
mov
jae
pop
mov
pop
or
je
inc
pop
mov
test
mov
les
pushf
addb
iret
adc
rclb
call
data16
inc
mov
mov
mov
push
nop
fstl
shrb
inc
and
and
idivb
sbbl
mov
dec
xchg
and
xchg
ljmp
jl
hlt
dec
and
inc
add
ljmp
pop
pop
push
lock
fst
add
and
ljmp
adc
jbe
and
int3
mov
mov
mov
mov
mov
je
out
xchg
mov
and
sbb
add
dec
lahf
aad
xor
divl
push
xor
mov
pop
sub
bswap
mov
lock
or
fs
lods
push
mov
out
pop
movsl
jne
jg
jbe
xchg
push
ds
cmp
push
pop
xchg
mov
fiaddl
inc
mov
popa
jmp
add
sarl
adc
sub
push
out
xor
mov
xor
rcll
outsb
jmp
xor
dec
jl
and
mov
lods
xchg
gs
push
cmpsb
and
jae
imul
sub
mov
gs
pop
jbe
xlat
mov
cltd
jno
lcall
jns
popa
lret
pop
cmp
rclb
or
outsb
dec
add
in
hlt
jmp
bound
adc
inc
sbb
push
sub
aaa
sahf
cli
or
movsl
imul
sbb
jecxz
rolb
jmp
cmc
les
inc
add
outsb
sbb
cli
sbb
ja
push
push
sub
dec
add
adc
fisttpl
and
sti
and
rorl
pop
adc
testb
push
outsl
pop
jecxz
loopne
pop
test
cmp
clc
pop
adc
and
loopne
xorl
push
mov
dec
cmp
imul
mov
ja
mov
cs
fs
mov
xlat
and
je
cmpsl
popf
iret
jo
dec
adc
jecxz
fistpl
sarl
pop
loope
mov
pushf
loopne
je
jb
faddl
cmp
shlb
cld
orl
call
fiadds
jg
or
aam
loope
cmp
lret
mov
xor
jns
cmp
jl
xchg
ficoms
inc
dec
push
daa
dec
popa
movsb
lock
push
fisttpll
xor
sub
pop
in
iret
jne
mov
or
das
loop
roll
cmp
xchg
ja
dec
je
into
inc
jg
out
or
lcall
pushf
jne
add
mov
add
sub
mov
mov
dec
inc
imul
jae
mov
add
pop
adc
movsb
pop
fldl
fistl
aad
mov
cmp
jbe
sbb
shlb
movsl
in
loopne
push
mov
cltd
push
push
icebp
scas
fistpll
fisttps
ss
imul
std
mov
cwtl
mov
xchg
pop
pop
rcl
das
ss
lock
jne
dec
jae
stos
mov
loop
ja
pop
lea
int3
cmp
sbb
sbb
jmp
jnp
dec
clc
add
push
or
cwtl
push
inc
popf
mov
jno
rcr
xchg
adc
in
cmp
shrl
push
mov
push
sub
cs
out
jae
fidivs
int3
xchg
xlat
or
sbb
hlt
test
sub
movsl
xchg
push
lcall
and
xchg
fists
inc
movb
fwait
add
jle
js
or
cmpsl
mov
sub
sbb
pusha
mov
xchg
lods
cli
fucomi
popa
jmp
ret
push
mov
push
rorb
push
aam
push
cmp
jl
lods
lds
pop
adc
and
sbb
jl
ficompl
dec
sbb
inc
lcall
jp
dec
jecxz
mov
add
call
test
lods
ljmp
push
lds
xor
rcr
int3
and
add
mov
xor
mov
shlb
lods
push
mov
sahf
stc
pop
mov
xorb
scas
push
loope
in
and
sub
or
mov
stos
mov
test
xorb
dec
cmpsl
loopne
jle
cmp
jge
imul
and
ficoms
lods
cs
mov
jl
jo
or
call
jecxz
cmp
jo
in
pop
fnstsw
and
adc
inc
jl
xchg
push
out
jns
bound
mov
je
rorl
ss
fnsave
rcll
sub
outsb
cmpsb
scas
and
ja
inc
jge
or
movsl
xor
or
xor
jae
stos
lret
pop
out
cvtdq2ps
mov
mov
cmp
mov
add
dec
or
or
xor
pop
pop
clc
inc
lds
daa
mov
inc
punpckhdq
les
cltd
or
and
jnp
sbb
dec
shr
adc
cli
movsl
fwait
push
sub
jo
cs
lds
mov
sbb
movsl
lahf
mov
mov
cmp
shr
and
push
pusha
inc
xor
adc
js
clc
lods
push
mov
movsb
lods
stos
cmp
mov
dec
sub
mov
inc
ret
sbb
xchg
lds
aad
fisubrl
lds
pop
sarb
mov
sbb
ds
pop
pusha
movsb
test
mov
mov
xorb
in
das
imul
frstor
sbb
dec
lahf
lods
inc
outsb
sbb
movsl
icebp
scas
ds
adc
cmc
hlt
add
popa
loop
sbb
ja
pop
mov
pop
push
gs
cld
addl
dec
and
cltd
xacquire
mov
or
loopne
push
sbb
pusha
cli
or
imul
ljmp
add
xchg
add
dec
and
sti
jmp
add
mov
aaa
ds
outsb
pop
aaa
dec
add
mov
add
test
shl
fwait
les
icebp
mov
jbe
jno
subl
fsubrs
mov
outsl
xchg
mov
pop
icebp
test
xor
cmp
stos
outsl
jl
nop
icebp
cmp
cmp
ja
fcomps
cmpsl
sub
dec
aad
subl
hlt
pop
ds
aad
fs
mov
pop
aaa
jbe
test
push
cmpsb
xchg
test
ja
cmpsl
lods
push
fistpl
jo
loope
jecxz
mov
fisubrl
pop
inc
sub
fdivrl
rolb
lcall
cli
gs
jb
dec
fadds
mov
pop
or
and
fdivr
aam
out
add
inc
orb
test
es
scas
lahf
imul
mov
jne
jns
and
or
aaa
push
push
std
or
sub
or
sti
fisubl
dec
pop
cwtl
xchg
jno
dec
icebp
or
adc
mov
add
add
push
sbb
repnz
or
or
lds
inc
inc
jb
ja
stos
inc
push
test
nop
nop
sub
ret
fwait
notl
jmp
xchg
xor
push
inc
lods
fcmovnu
movsl
jb
insb
dec
cwtl
mov
mov
out
cli
out
bound
ljmp
and
in
sbb
repnz
push
cld
movsl
jo
sbb
popa
jno
mov
inc
adc
mov
push
orl
inc
or
add
mov
and
and
jae
push
xchg
and
inc
sbb
jp
push
insb
shlb
fcomi
adc
inc
pop
les
push
mov
sbbl
inc
iret
in
sbb
add
add
xor
out
shll
rcrl
inc
pop
sub
les
add
popa
addr16
test
cmp
lcall
dec
movsl
cld
mov
xor
jbe
mov
clc
rolb
jp
inc
sahf
ja
adc
or
sbb
lahf
inc
mov
jge,pn
or
sti
stos
dec
enter
mov
push
fimuls
insl
iret
and
xchg
mov
xor
mov
pop
test
ds
pop
fdivs
sub
adc
ret
cmp
xlat
mov
sti
inc
ret
cmp
adc
pop
lahf
push
pop
jo
push
jns
enter
mov
pop
mov
aam
inc
repz
dec
push
or
push
in
push
ss
shl
dec
or
pop
pop
loopne
xor
xchg
push
popf
scas
sbb
xor
fstpt
enter
xchg
enter
inc
fwait
xor
mov
ffree
cmp
outsl
mov
pusha
dec
push
imul
outsb
push
outsl
lock
mov
mov
stos
fidivrs
add
pop
mov
jns
xchg
pop
mov
fidivs
pop
xchg
dec
inc
call
lods
mov
add
inc
adc
stos
add
jmp
icebp
inc
xchg
sbb
mov
mulb
xchg
popf
pop
push
or
add
or
lock
push
dec
iret
mov
hlt
ret
jbe
jns
in
into
adc
sub
cmp
and
lret
mov
cmp
stos
cwtl
cli
pop
xchg
adc
adc
xor
or
ret
cmpsl
jecxz
daa
xor
into
fistl
aaa
xchg
pop
push
or
or
lret
jp
je
xchg
mov
fwait
cli
scas
jmp
sub
xchg
scas
imul
jecxz
sub
xlat
push
or
vpsubsb
jle
out
orb
sbb
in
xchg
aam
mul
dec
sbb
ds
js
jp
push
unpcklps
ror
das
inc
pop
cmp
loop
mov
rcl
mov
aam
icebp
mov
mov
push
inc
pop
xchg
test
push
xchg
hlt
mov
adc
gs
lds
and
adc
bound
fcompl
js
mov
enter
adc
das
lret
stos
inc
fimuls
loope
xchg
push
sub
jne
mov
jbe
insl
or
fbld
test
jle
inc
pop
mov
mov
out
loop
xlat
orl
movb
aad
dec
mov
xchg
pop
test
leave
push
mov
daa
sbb
xor
out
push
mov
nop
es
jb
iret
cmp
mov
neg
sti
clc
cmp
push
sub
add
out
into
int3
cmp
stos
shl
in
inc
sbb
sbb
dec
jge
jns
xor
lds
push
lods
in
pop
jbe
mov
call
inc
add
aad
sti
loop
outsl
pop
add
cmp
mov
add
jp
push
mov
xor
cwtl
lcall
push
fcoms
and
xchg
rcll
fisttps
mov
clc
jno
mov
mov
and
andb
mov
stos
pop
jmp
jb
or
xchg
sbb
roll
add
roll
push
inc
mov
dec
ja
aam
pop
xchg
xchg
sahf
sbb
push
sbb
inc
cmpsb
incb
pop
lret
xor
into
repnz
sbb
roll
popl
jmp
bound
sahf
add
pop
sbb
ja
icebp
mov
aaa
lods
jae
loopne
add
call
and
pop
fsubrs
lea
std
sbb
leave
adc
xor
ds
push
out
fsts
sbb
jns
add
push
ret
rcl
scas
in
rorb
sbb
mov
xor
cli
mov
cmp
push
dec
inc
xchg
sbb
and
pop
xchg
xlat
loopne
ljmp
sub
rorl
pop
movsl
dec
les
inc
sar
cmpl
adc
cmpsb
jne
jecxz
dec
pushf
ret
fldt
repnz
cmc
and
push
popf
sti
sub
xchg
cmp
add
hlt
test
rorl
rcll
out
nop
cmp
lcall
pushf
mov
ret
jnp
insl
or
and
pop
ja
imul
ds
and
cmc
or
jle
xchg
adcb
rcrl
orb
push
popa
xor
cwtl
jmp
dec
add
sbb
into
xchg
mov
jnp
sti
mov
mov
cltd
or
lds
andb
inc
arpl
sub
mov
shll
push
cmp
lahf
push
in
sti
or
sahf
fs
sahf
iret
inc
aad
outsl
in
pop
cmp
push
test
pop
mov
insb
pusha
or
ja
mov
mov
jge
lret
push
fsts
std
add
jmp
in
ja
pop
hlt
xchg
xor
and
sbb
mov
mov
add
add
mov
mov
movsl
fdiv
or
lods
sbb
sbb
cmc
mov
fistpll
sub
lcall
in
mov
inc
std
pop
clc
in
dec
repz
mov
adc
cmp
jne
adc
mov
xor
addr16
outsb
js
pop
addl
push
mov
add
pop
repz
fcompl
jge
aam
and
loop
adc
or
adc
add
mov
adc
jnp
std
mov
out
cmp
mov
scas
mov
jp
cmp
loopne
sbb
mov
pop
pop
enter
sub
push
mov
fstpt
inc
leave
orb
push
adc
out
pushf
push
pop
insb
add
popf
inc
pop
xchg
prefetchwt1
or
or
data16
or
xor
mov
cmp
mov
cmc
fwait
sub
je
xor
push
ds
daa
cli
jg
pop
loopne
je
inc
mov
xor
insb
ljmp
xchg
out
or
fcmovnb
sbb
lahf
stc
sbb
dec
into
fmull
jmp
sub
mov
sub
sbb
mov
xor
movsl
mov
xchg
xor
xlat
outsb
and
mov
cli
xor
icebp
addr16
dec
push
xor
inc
lods
pop
dec
dec
xchg
xchg
ss
shll
sbbl
mov
inc
pop
push
nop
out
dec
gs
scas
scas
aas
mov
or
jl
dec
jo
in
lahf
jo
cmp
jne
add
adcb
mov
push
xlat
addr16
or
lock
cmpsb
sbb
push
inc
sbb
or
mov
pop
sbb
fsubrp
movsb
enter
pop
addr16
test
mov
ds
cmp
sbb
dec
xor
add
pop
les
and
stos
cmp
cmpb
cs
mov
repnz
dec
dec
mov
shlb
push
cmp
inc
mov
jmp
xchg
stos
shrl
jno
rcll
lods
sbb
mov
sbb
jb
push
insb
sub
adc
add
loopne
imul
and
xor
jb
aaa
sbb
mov
xor
imul
filds
xor
shl
and
imul
inc
sub
shrl
in
push
shrb
mov
add
sbb
push
cmp
xchg
sub
sbbb
scas
xor
inc
lahf
jle
ret
or
and
int
xor
mov
push
stos
outsl
push
scas
mov
imul
add
cwtl
mov
loop
outsl
mov
dec
repz
lds
int
fimull
mov
pop
sub
inc
icebp
cmc
call
js
jmp
adc
cmp
add
ficomps
repz
add
insl
mov
sub
movsb
ljmp
test
in
mov
xchg
or
int
xor
xor
pop
fbstp
dec
int3
cwtl
leave
and
sbbl
mov
adc
movsb
adc
mov
fldenv
mov
mov
jecxz
mov
shl
pop
int3
nop
sahf
add
out
mov
scas
pop
xchg
sub
das
mov
js
sbb
cmpsb
ficoms
aam
stos
int3
lret
sub
sbb
into
mov
and
loopne
add
inc
xchg
dec
addb
add
mov
jns
jmp
loope
xchg
insb
mov
xchg
in
pop
mov
and
bound
jo
ret
adcl
add
fisttps
popa
inc
pop
sub
inc
decb
mov
dec
dec
xor
push
mov
push
sbb
test
ja
loopne
adc
pop
je
adc
xor
daa
xor
jo
dec
ret
lcall
out
pop
add
in
test
add
jg
dec
and
cmp
pushf
mov
in
cld
push
cmc
and
incl
pop
push
repz
mov
stos
xchg
sbbb
shrb
push
dec
mov
cmpsl
mov
dec
xlat
adc
xchg
add
pushf
dec
mov
jnp
sbb
dec
pop
mov
mov
shll
shl
jbe
fnstenv
mov
mov
loop
xor
inc
jle
aad
mov
scas
or
add
jge
pop
mov
insb
lock
subb
lods
sub
and
shlb
adcb
popl
push
jle
sbb
jb
push
pop
adc
cmp
rcl
icebp
inc
push
fisttpll
cmp
cs
test
mov
ds
pop
enter
mov
mov
cmpsl
dec
fstpl
ret
mov
push
or
std
pop
mov
lret
enter
fwait
jge
jo
rolb
pop
xchg
add
pop
leave
loope
inc
jo
add
mov
subb
and
cmp
sar
or
push
push
xor
push
jno
es
movsb
inc
jns
cmpb
pushf
add
pop
xchg
cmp
pop
inc
scas
daa
jecxz
aaa
les
shrb
clc
adc
inc
or
mov
shlb
popf
xchg
or
lock
lahf
sbb
add
dec
iretw
call
jecxz
jae
add
lret
pushf
fldl
mov
jmp
mov
xchg
fisubrl
pop
or
cmc
imul
jecxz
addr16
pop
add
jbe
out
push
mov
push
in
pop
dec
add
nop
xchg
paddd
clc
and
xchg
dec
inc
xchg
fwait
out
jno
xor
mov
hlt
daa
movsb
cmc
int
mov
add
pusha
jecxz
xor
push
pop
push
cwtl
or
or
dec
xchg
mov
lea
cmp
dec
les
xchg
pusha
and
fsts
xchg
addr16
cmp
mov
push
jbe
xor
in
cmpsb
daa
sub
pop
lock
or
inc
mov
and
sub
or
mov
ss
pop
xchg
sub
outsb
pop
js
pop
push
outsb
pop
es
pop
and
sub
jecxz
add
or
ja
and
add
in
rcrb
filds
out
add
repz
insl
pop
stos
ror
xor
jnp
inc
lret
or
enter
xchg
stc
nop
cmc
inc
and
jbe
fists
pop
pop
sbb
push
jecxz
mov
test
int3
jge
in
and
mov
push
negb
das
cmp
xchg
add
and
lcall
inc
xor
icebp
or
aam
and
mov
repnz
xlat
xchg
xor
mov
insl
pop
jl
das
sub
push
push
xor
or
push
adc
movsl
push
adc
sti
mov
cmp
jbe
aam
or
mov
adc
jne
sbb
dec
push
iret
rcrb
fsubrl
xor
mov
out
movsl
aaa
aad
jle
lods
xor
lods
cmp
and
loope
aas
mov
popf
adc
in
or
xchg
sbb
icebp
push
shrl
cmc
inc
cmp
in
inc
sbb
push
fs
mov
push
hlt
popf
jecxz
std
dec
int3
adc
fistpl
movsl
jmp
ja
sarb
pop
js
daa
test
adc
cltd
sbb
bound
inc
jle
push
xor
shlb
xchg
mov
call
sti
jne
cmpsb
insb
ss
sti
or
push
std
xor
in
pop
mov
and
mov
dec
sbb
arpl
imul
psllw
stos
hlt
dec
icebp
sbbb
jge
out
and
mov
fwait
jp
inc
ss
ds
js
push
push
lret
mov
icebp
lods
xlat
fidivrs
push
movsl
cmp
aaa
cmp
test
and
rorl
fcmovbe
jno
or
adc
inc
add
aad
out
mov
inc
in
pushf
mov
mov
imul
push
xor
push
out
pop
roll
xchg
ja
je
lea
add
stc
inc
dec
std
icebp
setp
arpl
push
and
enter
popf
or
or
addr16
imul
adcb
cli
jl
jbe
add
outsl
loopne
inc
adc
or
inc
cmp
stc
mov
mov
or
and
xor
inc
lock
insl
sbb
lock
roll
aam
xor
jmp
pop
pop
sbbb
insl
inc
nop
lods
dec
push
or
mov
inc
or
pusha
xchg
or
int
xchg
mulb
les
ss
sahf
mov
imul
mov
ret
cwtl
dec
clc
adc
adc
cld
popf
loope
mov
es
sbb
int3
jb
je
sbb
das
mov
and
ljmp
in
sbb
out
adc
adc
xor
adc
add
lods
ja
inc
lock
in
sbb
shll
push
xor
push
cmp
test
lods
loope
pushf
and
and
mov
cmpsl
adc
ss
xchg
insl
adc
sbb
daa
mov
scas
lahf
shlb
out
je
outsl
mov
out
jae
icebp
in
cmpsl
cs
push
jne
test
movsb
push
inc
in
out
int3
jno
push
loope
inc
cld
lea
cltd
scas
enter
clc
insl
inc
rcrl
cs
int
add
nop
mov
xchg
dec
outsl
pop
sub
mov
inc
jne
push
cltd
dec
loopne
or
sbb
rcrb
xor
or
or
sahf
cmp
imul
push
scas
mov
jg
push
xchg
repnz
daa
bound
sahf
ljmp
repnz
xchg
push
cli
test
out
pop
in
mov
clc
fxch
pop
mov
ror
xor
cmp
xchg
lods
addb
sar
jo
orl
adc
ds
cwtl
popf
subb
lret
add
and
push
push
pop
fildl
add
dec
addr16
rolb
inc
js
int
shl
lods
push
or
fadds
adc
test
and
and
jg
adc
in
lcall
jmp
lods
dec
movsb
stos
mov
daa
add
cmp
jae
jne
mov
divb
add
test
cmp
xor
pop
mov
adc
jmp
imul
cmp
jmp
bound
pop
adc
sti
roll
xchg
imull
jno
push
hlt
lods
cmpsb
mov
pop
mov
ret
sbb
clc
lods
sbb
mov
mov
pop
rsqrtps
in
or
adc
nop
popf
aad
outsb
in
cmp
jae
mov
pop
jne
mov
dec
jle
jnp
orb
jge
push
push
push
pop
jbe
add
pop
aam
adc
cmc
pop
xor
mov
cmpsl
or
xlat
je
in
pop
jmp
cmp
xchg
insb
pop
lcall
or
sbb
dec
xor
test
shll
inc
pop
pusha
xlat
inc
and
add
repz
aas
or
adc
dec
inc
or
js
and
sub
out
pop
ds
mov
mov
sarl
enter
push
pop
jns
sbb
sbb
xor
dec
sub
pop
push
mov
pop
inc
add
out
jecxz
incb
xchg
add
xchg
jns
mov
mov
mov
push
mov
dec
mov
sbb
xchg
aaa
stos
cli
lret
mov
aad
movsl
movsl
mov
push
ss
aas
mov
popa
mov
inc
or
lcall
lcall
push
ss
orb
mov
data16
jg
mov
adc
dec
icebp
adc
mov
repnz
pop
dec
fucomp
fisubs
or
xchg
test
cmovbe
add
fstpl
xchg
pop
add
jp
icebp
aaa
xor
mov
cmpl
xor
loopne
dec
adcb
mov
sub
loop
inc
popa
nop
xlat
or
notb
stos
pop
ja
jns
push
jns
or
adc
and
repnz
rcr
mov
jns
cs
in
lds
mov
fdivrp
adc
or
repnz
stos
adc
loopne
jle
dec
fcoml
mov
mov
xorb
loopne
adc
popa
or
xchg
xchg
stos
andb
adc
jmp
xor
lcall
std
shlb
xchg
nop
jmp
jle
out
mov
mov
cli
arpl
imul
pop
mov
scas
frstor
jmp
adc
add
outsb
pop
mov
dec
dec
stos
and
test
mulb
leave
or
pop
jnp
jl
pop
and
adc
mov
outsb
shll
or
sbb
dec
repz
xlat
xor
sbb
and
negl
call
rcr
je
loop
mov
jae
in
cmpsl
lea
sbb
mov
add
pop
sbb
iret
inc
cmp
popf
jns
je
pusha
outsb
xor
mov
mov
fincstp
repz
fisubrs
sbbl
cltd
pop
xor
fcomp
pop
stc
or
leave
clc
filds
mov
pusha
mov
out
xchg
jge
ljmp
xchg
dec
and
insb
ss
lea
push
fiadds
fidivs
jge
je
aaa
push
push
divl
sbb
mov
lret
les
dec
jge
negb
rolb
sub
xchg
push
shrb
xchg
or
jnp
pop
xor
xchg
sbb
pusha
jbe
push
popa
dec
nop
jnp
test
test
in
aam
test
add
rol
mov
mov
jmp
lds
or
and
sbb
jmp
out
popa
mov
mov
pop
cmp
scas
xchg
adcl
pop
movb
int3
data16
incl
je
int3
xchg
repz
jns
pop
aad
cld
lods
in
cmp
mov
jo
lods
iret
push
mov
daa
arpl
xor
cmp
push
mov
mov
mov
pop
mov
pop
leave
inc
xchg
cs
out
jo
cmp
scas
fsubrs
sbb
jp
xlat
sbb
lahf
ret
imul
add
mov
call
ss
rol
xorb
inc
insl
fstpl
lret
fdiv
fmull
test
mov
into
xchg
sbb
arpl
push
inc
popa
jp
adc
enter
inc
ja
mov
fistl
test
js
jae
inc
fwait
push
sbb
push
das
dec
shr
out
loope
movl
add
sbb
in
mov
add
xor
xchg
xchg
sbb
inc
pop
imul
cwtl
scas
rolb
out
std
movl
icebp
test
mov
cs
insb
iret
mov
pop
pop
mov
popa
loopne
push
mov
fistpl
sbb
mov
std
add
loop
int
pop
jns
mov
fs
adc
cld
xor
sbb
mov
fwait
outsl
int3
xchg
test
lods
xchg
jb
mov
clc
dec
popl
sbb
xor
movsl
orb
fidivrl
mov
loopne
mov
div
and
scas
aaa
mov
adcb
adc
bound
jno
iret
imul
lret
or
or
push
inc
les
in
sub
outsb
std
mov
test
inc
dec
mov
jns,pt
cmp
addr16
mov
mov
sbb
shll
sti
inc
jno
mov
jno
xorl
inc
pop
add
sbb
mov
xor
push
sbbb
dec
push
adc
mov
adc
rcr
push
leave
or
xchg
xchg
faddl
mov
pop
sub
movsl
dec
and
xor
cmc
dec
xor
jmp
add
inc
push
int
testb
dec
repz
ds
into
push
mov
repnz
adc
jb
jbe
mov
stos
cld
sbb
mov
les
jnp
pushfw
sarb
outsb
das
es
les
ss
and
pop
adc
adcb
rol
sarl
imul
jbe
cmp
out
inc
xchg
push
pop
test
scas
jg
fcmovnb
mov
cmp
ret
adc
dec
adc
cli
aaa
xor
pop
mov
int3
sub
jmp
add
fs
jl
data16
ret
add
js
or
test
dec
int3
sub
xor
cli
aaa
pushf
movsl
addr16
and
loopne
test
int3
or
xor
dec
xor
fcom
dec
testb
or
lods
xchg
icebp
icebp
fdivr
adc
hlt
pop
rclb
mov
mov
inc
sub
xlat
jg
push
cwtl
out
and
shlb
lcall
mov
stc
cmp
jg
or
decb
pop
imul
adc
adc
jno
push
mov
add
popf
lret
cmp
imul
pushf
push
lds
scas
in
ret
hlt
jb
insl
loop
xchg
fldt
stc
push
ljmp
sbb
inc
cld
inc
xor
adc
push
inc
pop
xor
jbe
inc
aad
sti
or
sti
and
insb
sbb
pop
ficoms
and
mov
dec
mov
push
jmp
mov
mov
stos
call
pop
decb
sti
pop
pop
pop
xchg
mov
jb
pop
scas
js
call
pop
mov
sub
cmc
xchg
movsb
sbb
sbb
imul
and
mov
int3
add
mov
pop
and
rcl
mov
dec
adc
jmpw
adc
in
testb
or
add
repnz
adc
lcall
jg
out
outsb
mov
out
fcomi
lods
cmpsb
shl
test
roll
or
adc
mov
jae
rorb
pop
imul
in
loop
in
xlat
movsl
and
mov
jb
insl
popf
sbb
mov
cmp
icebp
mov
daa
es
and
addl
cmp
inc
mull
dec
dec
daa
jo
aaa
mov
cmpb
mov
or
insl
outsb
dec
jg
xchg
test
sub
clc
pop
cmpsb
out
push
leave
xor
ljmp
test
pop
jg
in
out
clc
pusha
push
cmp
ja
orb
call
mov
dec
lret
sbb
shrb
call
in
adc
dec
cwtl
xor
lahf
add
aaa
loope
xlat
mov
aam
or
and
jno
add
insl
jp
add
icebp
jle
popf
les
mov
or
mov
fcompl
das
xor
sub
mov
add
push
dec
push
scas
mov
clc
jbe
hlt
xor
lret
pusha
insb
mov
pop
test
hlt
addps
fsubs
out
fs
mov
add
mov
ljmp
cmpsl
rol
push
cmc
pop
je
push
mov
addr16
insb
ss
fs
test
fnstenv
loop
cmp
pop
pop
pop
test
push
pop
cld
xlat
nopl
add
jge
push
inc
inc
insb
fcoms
inc
lret
push
xor
pop
adc
mov
idivl
and
ja
adc
jb
inc
mov
in
pop
inc
or
int3
stos
inc
shr
stos
adc
addr16
leave
or
fcmovne
mov
jecxz
push
mov
addb
in
pop
ss
jmp
sbb
into
cmp
pop
js
dec
outsl
rcrb
push
push
mov
mov
jnp
std
or
mov
push
jl
iret
ljmp
test
jecxz
lahf
lahf
cmp
cmp
push
push
fwait
rcl
in
add
sbb
jne
js
fmull
std
cmp
rcrl
mov
leave
loope
push
addl
cmp
jnp
mov
mov
punpcklbw
ss
push
jl
adc
arpl
or
sbb
and
cwtl
arpl
sbb
fstpl
arpl
and
fildl
jle
cmpsb
std
test
es
mov
lahf
lret
lds
mov
inc
scas
ffreep
inc
pop
dec
xchg
mov
cmpsl
jne
seto
negl
out
icebp
repz
test
xchg
insl
sbb
mov
hlt
out
jo
dec
mull
outsb
outsl
or
jg
xor
jg
outsl
inc
mov
addr16
test
push
adc
ret
fisubl
mov
pop
mov
cmpsb
mov
mov
adc
jmp
cmpsb
inc
enterw
dec
mov
mov
shlb
cmp
cmp
jae
stos
inc
outsl
call
mov
cmc
jbe
pop
pop
pop
das
mov
mov
push
or
dec
sbb
cmp
cmc
fs
mov
fwait
loop
add
shrb
xchg
rcll
jp
pop
fdivs
pop
pusha
js
ja
fcomip
mov
add
xor
and
and
aad
xor
xor
inc
mov
mov
movsl
sbb
mov
scas
pop
xlat
test
ret
cmp
pop
mov
dec
dec
pop
xor
push
dec
jl
mov
mov
loope
popa
mov
push
sub
ds
js
insb
jge
sbb
imul
test
outsl
and
mov
outsb
mov
popf
sbb
inc
inc
fucom
adc
je
cmp
mov
pop
adc
inc
xor
into
mov
lret
cmpsb
fwait
ljmp
movb
add
shlb
lock
fwait
adc
icebp
popf
psllw
movsl
jmp
push
and
aaa
fists
sub
loope
mov
cmpsl
lods
inc
mov
adc
insb
lahf
add
push
nop
push
mov
cmp
mov
push
roll
insl
loopne
shrb
in
aas
jo
sub
add
or
push
jle
ret
push
dec
jge
fs
shrb
scas
push
xor
push
in
es
arpl
arpl
push
cmp
stos
mov
aam
out
mov
clc
ret
add
push
push
fst
int
xor
icebp
test
sbb
or
leave
jo
ret
pop
out
cmp
popa
pop
aas
out
jle
jp
fwait
xchg
inc
cli
sub
mov
inc
out
mov
push
lret
push
jecxz
cmp
in
addl
stos
outsl
inc
dec
push
cmp
pop
in
adc
loopne
mov
movsb
inc
mov
sub
xchg
sahf
jle
mov
xor
mov
mov
inc
daa
mov
outsl
cmovg
dec
and
inc
xchg
scas
sarb
inc
mov
jl
lea
les
lahf
ret
mov
icebp
and
mov
adc
stc
outsl
lds
inc
cmpsl
mov
sbb
adc
jo
cmp
push
pop
mov
bswap
scas
testb
jns
jle
scas
test
mov
xchg
stos
xor
cs
mov
lods
dec
inc
bound
loopne
and
icebp
std
pop
cld
or
clc
mov
rorb
insb
xor
imul
mov
and
leave
pop
mov
negl
ror
fs
bound
jmp
xorb
rorb
adc
divl
dec
pop
sahf
dec
xor
stos
ss
xlat
hlt
xchg
inc
push
loopne
fnsave
das
incb
adc
mov
add
cli
jl
loope
std
loopne
outsb
push
mov
aaa
and
xor
lea
je
mov
cmp
adc
mov
shrl
jge
and
es
mov
lds
jno
or
xor
jo
inc
jae
or
jns
stos
idivl
jl
inc
fiadds
bound
jno
aaa
mov
leave
push
cld
aas
repz
shlb
add
adc
xor
ss
cltd
mov
rcrb
pop
jbe
nop
out
scas
dec
mov
stos
cli
fcmovne
test
xchg
jns
xchg
mov
mov
push
push
aas
repz
data16
jp
lods
cld
ljmp
pop
and
pop
enter
jb
cs
mov
push
mov
lea
lods
mov
xchg
aaa
fadds
das
jb
sub
inc
mov
in
imul
and
jmp
xchg
fnstenv
arpl
rorl
inc
cwtl
lcall
and
lock
sub
sbb
push
clc
mov
mov
loopne
dec
xchg
mov
scas
loope
pop
int
addr16
mov
cmpsl
pop
lods
aam
aaa
fdiv
clc
loopne
pop
adc
ret
data16
mov
pop
push
bound
flds
lods
in
jecxz
sbb
xchg
dec
xchg
insb
mov
inc
int
data16
mov
fdivrl
sbb
cltd
sarb
fs
fsubs
sbb
xchg
movsl
lahf
imul
mov
push
andl
loop
sub
dec
pop
inc
in
sahf
pop
pushl
mov
add
adc
and
ret
or
push
jle
les
xor
ds
mov
fiaddl
data16
es
std
jne
lock
and
jp
repnz
push
mov
ret
cmc
dec
xor
xchg
les
mov
shll
push
in
mov
out
jne
push
pop
xchg
sub
push
fcmovu
cmp
cmp
mov
shr
dec
pop
add
std
ja
das
cmp
shll
nop
xor
pop
lods
into
jge
sub
and
jno
xchg
in
push
movsl
mov
inc
fcmovbe
mov
imul
add
negl
andl
jne
push
shr
clc
ret
add
add
repz
shlb
adc
xlat
inc
rcrl
mov
mov
stos
ljmp
shl
fmul
rcll
bound
cs
mov
jb
test
xchg
xor
push
xchg
add
xchg
inc
fildll
jmp
les
mov
mov
lea
mov
push
sarl
push
notb
or
sub
test
sub
sub
dec
and
ds
pusha
std
popf
sub
mov
loopne
adc
mov
outsl
pop
aaa
push
fisubs
and
enter
xor
out
sbb
inc
ret
cmpsl
cmp
fs
xorl
loop
das
ret
xchg
and
cmp
rol
sbb
or
clc
outsb
jg
jg
sbb
push
mov
faddl
aam
in
fadd
sub
in
pop
outsb
shr
sbb
mov
cmp
and
add
rcr
mov
mov
xchg
in
and
nop
mov
jbe
mov
xor
pop
daa
jne
cli
mov
iret
mov
fidivs
add
lods
into
insl
push
enter
mov
insb
loop
out
mov
test
xor
int3
adc
aad
mov
sbb
stc
aam
jge
or
inc
inc
rorl
je
cmp
shl
add
aam
pop
int3
adc
sbb
cmp
lds
out
jmp
jnp
add
das
std
je
push
lds
popa
or
mov
dec
daa
jmp
or
stos
js
sub
dec
dec
bnd
push
std
mov
loope
push
rorb
sahf
push
jne
jg
cmpsl
xchg
cmp
push
test
pop
jns
pop
jl
mov
fisttpl
cmp
adcb
dec
sub
notl
dec
push
shlb
jne
mov
dec
jne
and
dec
adc
pop
cmp
nop
clc
push
cmp
jo
mov
or
or
push
add
idivb
js
ror
movsl
sub
outsb
mov
inc
dec
cmc
add
mov
mov
dec
or
aas
cmp
stos
mov
lods
or
mov
outsb
and
or
inc
mov
scas
ret
add
xchg
dec
dec
sbb
cmp
mov
sub
adc
js
ret
adc
inc
and
xchg
push
outsb
pop
pop
add
fildll
and
imul
leave
test
mov
cmp
aad
push
sahf
push
fsubl
and
jg
shll
push
dec
sbb
nop
cmp
sti
sarb
adcb
jo
lret
aaa
cmp
icebp
pop
push
mov
xor
push
stos
lock
and
loop
loope
dec
mov
pop
and
repz
mov
ffree
mov
xor
cltd
dec
mov
lahf
xchg
xchg
mov
ret
jo
loope
dec
iret
adc
jns
xchg
out
add
mov
xchg
repz
adc
fdivrl
lock
fmull
mov
aad
fadds
sbb
fs
mov
fnstsw
xor
rorb
or
xchg
bound
dec
add
mov
mov
cwtl
mov
enter
add
lahf
roll
push
adc
lea
inc
or
dec
arpl
movsl
aam
pop
cmp
decb
xor
mov
adc
mov
push
and
loope
jne
adc
nop
cmp
adc
xor
popa
pop
or
inc
lods
push
sub
lcall
sbb
es
push
iret
push
out
push
arpl
lock
jne
add
mov
cmpsb
ja
jge
dec
stc
or
daa
jl
and
loopne
jl
mov
filds
stos
mov
xor
mov
add
pop
mulb
loope
or
out
inc
jo
xor
jl
jmp
das
lods
notl
adc
xchg
mov
nop
andb
lret
mov
loopne
std
test
mov
or
mov
ror
popa
mov
xchg
adcb
mov
cmp
inc
pop
jbe
inc
xlat
pushf
cwtl
sbb
sub
shl
arpl
fcoml
push
add
sbb
mov
mov
bound
jnp
roll
pusha
lock
jb
adc
mov
les
add
scas
std
call
jl
mov
mov
clc
icebp
pushl
and
mov
popf
sub
dec
ljmp
mov
add
mov
pusha
and
ljmp
ja
mov
mov
add
pop
mov
test
aad
or
mov
mov
inc
inc
push
pop
sti
es
dec
fildl
and
jmp
jno
mov
into
jb,pn
cmpl
cmpsb
cmp
fidivl
leave
iret
inc
mov
pop
rcl
mov
clc
xchg
aaa
ds
icebp
xchg
sti
sbb
push
not
add
aas
fidivrl
or
push
int3
movsl
mov
hlt
aas
push
or
cmpsb
cmc
lods
cmp
push
js
mov
dec
pop
call
sahf
pushf
ret
dec
xor
jne
fists
mov
jle
subl
in
dec
cmp
js
mov
cs
and
xor
psrld
sbb
rol
push
decl
sahf
mov
js
popf
gs
out
bound
pop
jo
push
sbb
add
fcoml
or
bound
fucom
pop
std
or
jecxz
push
xor
push
pop
and
cwtl
or
stos
or
jecxz
lret
into
add
les
mov
leave
test
xchg
test
xor
fdiv
sbb
inc
inc
pop
push
js
cmpsl
xor
das
lds
adc
sbb
aad
enter
sbb
clc
hlt
stos
jle
pop
sub
fstpl
scas
add
notb
pop
scas
jle
sbb
sub
mov
arpl
xchg
fs
mov
aad
or
test
pop
push
jne
xor
adc
add
idivb
pop
jno
sub
jmp
andb
sub
cli
fistpl
sub
loop
adc
rclb
inc
addl
imull
pop
out
insl
adc
jle
dec
jmp
cmpsb
mov
sbb
inc
repz
push
add
mov
lods
inc
roll
repz
and
cmpsb
mov
fs
lock
cmp
inc
aam
dec
fistpl
jecxz
inc
push
jl
dec
mov
pop
inc
or
jae
ja
arpl
test
xor
sub
dec
mov
in
jmp
cmp
mov
stos
test
fadds
xchg
jle
arpl
in
sarb
lds
adc
in
push
jecxz
pop
in
arpl
mov
xchg
mov
or
sub
cmc
fildl
out
pusha
mov
das
loop
aaa
xchg
fbstp
jno
outsl
mov
cli
dec
shlb
lds
cmp
add
sbb
pusha
dec
and
and
ret
cmp
inc
sub
adc
ret
jbe
lods
add
inc
adc
test
or
loope
loop
test
das
add
ret
test
and
jbe
test
cmc
call
add
repnz
inc
rolb
mov
iret
enter
push
in
cmpsl
gs
shll
pop
mov
xchg
mov
fstpl
insb
mov
and
mov
inc
and
addb
stos
mov
mov
dec
pop
mov
ret
ret
out
inc
lock
jl
cmpsl
cmp
cli
fbld
enter
fnstenv
push
shl
pop
jne
and
js
xchg
sbb
das
cs
add
jno
pop
mov
nop
dec
jg
addl
int3
cltd
mov
rorl
cld
push
fstl
inc
les
repz
cmp
mov
adcl
push
or
jge
outsl
jg
push
jae
inc
pop
shl
movsl
out
lock
pop
call
clc
push
iret
andb
dec
dec
push
je
and
ret
jae
shrb
push
ja
dec
xor
jecxz
adc
mov
or
pusha
push
xor
push
xorl
or
fadds
out
jecxz
mov
fneni(8087
push
ljmp
pop
xor
sub
imul
add
ret
sbb
adc
insb
sbb
pop
pushf
out
cmp
add
inc
and
scas
ret
test
jl
and
ffreep
mov
loop
dec
and
pop
xor
pop
lock
add
cmp
mov
mov
pop
mov
or
cltd
dec
pop
imul
rorl
movsb
inc
lea
je
call
and
fiadds
dec
outsb
ret
jbe
push
pop
ret
fs
ja
icebp
out
test
inc
inc
std
push
dec
and
cmp
cmpsb
pop
ret
adc
mov
out
push
mov
pop
push
mov
outsl
in
xchg
insl
in
cs
ffree
fnsave
inc
mov
xchg
mov
gs
or
mov
push
xchg
scas
arpl
add
test
jle
or
mov
cmp
inc
mov
sarb
out
xchg
idivl
ret
incl
adc
lods
mov
addr16
iret
mov
test
pop
push
test
lods
lods
cmc
lea
cmp
in
cld
mov
mov
imul
movsl
and
add
mov
push
jmp
or
cmp
push
out
push
jle
shll
lret
popa
out
adc
push
add
push
xchg
mov
mov
inc
xorl
clc
or
cmpsb
icebp
pop
les
cld
daa
mov
xorb
in
dec
push
daa
cli
sbb
das
adc
mov
and
outsl
dec
sbb
fidivs
xchg
push
idivb
sbb
loope
icebp
fildl
and
fcmovnb
push
pushl
lea
setg
and
frstor
push
dec
sub
hlt
dec
hlt
mov
movsb
sub
shll
lea
daa
cli
outsl
xchg
mov
pop
xor
imul
mov
jle
jp
xchg
lret
shlb
lcall
scas
inc
outsb
shlb
add
shrl
lods
xorl
scas
jp
or
or
cmp
mov
cmp
mulb
addr16
mov
jle
adc
xchg
or
and
pop
mov
rolb
les
pop
or
call
lahf
cwtl
iret
pusha
adc
jl
sub
out
or
test
mov
icebp
out
ja
js
inc
dec
mov
les
orb
jae
mov
xchg
sub
cmpsb
cmp
add
and
iret
mov
fidivl
sub
push
lret
mov
push
mov
nop
pop
fists
addr16
and
aaa
outsb
iret
std
sbb
clc
rclb
call
xor
jb
das
insb
sbb
cmp
cmp
fdivr
mov
inc
adc
sahf
adc
test
movsb
mov
cmp
inc
fsts
shlb
mov
xor
aam
pop
aam
aam
inc
pop
push
xorb
dec
ret
cmp
imul
test
sahf
mov
lret
cwtl
mov
test
lock
adc
lcall
movsl
jb
adc
add
out
cmp
je
loopne
pop
cmp
mov
push
fisubl
in
jl
stos
ds
sbb
cmp
dec
lea
out
sbb
jp
loope
and
push
pop
mov
lods
sub
push
or
test
cmp
pop
or
cmp
rcll
pop
scas
test
pop
xor
push
std
or
dec
loope
pop
sub
mov
cmp
push
xor
addr16
mov
movsb
mov
sub
xor
jl
add
popf
push
xlat
jmp
mov
imul
test
jge
cltd
stos
sub
pop
sub
ds
and
mov
ret
ret
bnd
ja
daa
adc
outsl
cwtl
jle
hlt
outsb
lds
add
xchg
push
inc
adc
lods
xchg
and
sar
in
sbb
iret
int
cli
repnz
add
movsb
jg
or
jg
int3
xchg
and
add
fistpll
cwtl
push
or
fs
mov
mov
ret
ret
inc
jno
xchg
inc
lret
inc
mov
or
mov
sahf
mov
inc
das
jo
pop
mov
dec
imul
icebp
cltd
iret
lahf
lods
xchg
insb
or
outsl
cwtl
stos
or
adc
dec
add
mov
or
xchg
fs
lret
add
jbe
loop
fwait
ss
sub
shl
cmp
aam
fs
xor
sub
jnp
repnz
imul
out
xchg
jg
xchg
stos
fsubl
mov
popa
and
or
inc
xchg
cmp
jge
das
xor
movsb
ficoml
outsb
mov
daa
fmuls
push
dec
cmp
mov
adc
jns
lea
jno
roll
adc
push
daa
rol
and
inc
inc
ret
fldt
in
pusha
xlat
outsb
sub
mov
mov
outsb
in
pop
icebp
push
jns
int3
adc
cmc
sbb
daa
incl
fdivr
cmpsb
mov
adc
sbb
adc
push
jmp
add
pop
pusha
mov
mov
mov
shl
addb
adc
pop
ret
xor
fadd
sbb
push
daa
out
shll
lock
lcall
fcmovnbe
addl
inc
jmp
cmc
mov
ret
or
inc
push
mov
addr16
nop
movsb
mov
stos
xchg
jbe
test
xor
push
test
aam
sbbb
ret
lahf
sbb
ja
dec
pop
roll
and
push
cs
arpl
push
cmpsb
test
dec
xor
test
jmp
test
cs
jle
add
adc
pop
sti
ja
ja
dec
jp
and
fmull
sbb
cmp
push
fwait
and
aad
mov
in
pop
fisubl
ja
cmpsb
sub
dec
dec
fidivrl
popa
mov
rorb
xchg
xor
adc
mov
test
testb
cmp
adc
mov
daa
mov
and
mov
xchg
shrl
movsb
push
scas
sbb
cmp
js
movsl
jae
sbb
xor
inc
fdivr
mov
xor
sbb
push
fistl
mov
stos
movsl
pusha
cli
ret
mov
rol
jl
cmp
push
fimuls
or
inc
cmp
jge
insl
fdivrl
push
or
mov
mov
insb
std
outsl
lds
in
pop
push
rorl
daa
and
push
into
stc
pushf
mov
mov
push
mov
pcmpgtw
cwtl
lds
adc
inc
dec
das
shlb
xor
mov
dec
shrl
rcl
aad
jnp
xorb
jl
outsb
aaa
jno
in
pop
xor
mov
les
mov
adc
call
call
xor
icebp
neg
dec
push
jecxz
adc
xor
inc
mov
orb
dec
insb
pushf
inc
mov
in
fistps
into
fsubrl
xor
mov
sbb
adc
inc
jl
mov
and
enter
loope
rcll
aaa
sbb
cmp
dec
fildll
push
ret
dec
jnp
outsb
push
sbb
in
pop
jl
push
add
hlt
pop
pop
clc
lds
leave
and
dec
and
ret
add
lcall
add
cli
adc
push
ret
imul
addr16
pop
icebp
orl
cld
int3
loopne
ret
nop
inc
sbb
pushf
and
loope
add
adc
inc
mov
lods
add
sub
out
mull
cmp
dec
inc
jmp
or
sahf
sbb
fcmovu
loope
or
pop
in
mov
loope
push
mov
mov
mov
add
xor
out
mov
movsl
clc
scas
in
movhps
pusha
in
fstpl
mov
es
es
and
gs
sub
flds
pushf
sar
fnsave
jge
mov
fcomip
ds
xchg
lahf
sarl
jb
sbb
push
mov
or
faddl
add
sbb
test
enter
pop
punpckhdq
shl
pusha
icebp
sub
push
gs
and
and
dec
sub
jne
pop
xchg
sub
in
jle
rolb
mov
test
out
cli
lds
outsl
popf
mov
arpl
insl
cmp
decl
xor
xor
lock
sti
loope
push
mov
mov
add
adc
push
sbbl
inc
imul
hlt
cltd
mov
xchg
sub
xchg
mov
mov
daa
jne
inc
popa
pop
inc
xchg
js
mov
xor
inc
mov
jne
insb
mov
ds
xchg
sub
adc
jae
push
xchg
or
fstpt
push
sub
sbb
xchg
movsl
js
inc
jecxz
add
repnz
jmp
sub
pop
test
and
add
ja
into
mov
addb
jecxz
add
mov
xchg
jecxz
cmp
xor
mov
loopne
jne
pop
ljmp
cld
out
and
gs
jbe
mov
in
shlb
cs
call
arpl
jo
imul
fildll
adc
popa
mov
les
sbb
incb
ss
pop
and
test
lahf
roll
xor
scas
mov
lea
test
movsb
in
lret
jmp
lahf
lock
push
mov
dec
mov
xchg
adc
push
fdivr
pop
push
pushl
rorl
aaa
fs
loop
sbbl
and
aam
fsubr
js
es
adc
repz
cld
stos
jg
adc
dec
lcall
pop
and
jo
std
icebp
je
bound
dec
stc
mov
fldt
mov
repnz
sub
je
rolb
adc
into
negl
lret
mov
movsb
inc
xchg
jno
sbb
push
fstpl
mov
sbb
adc
xchg
xorb
ret
dec
adc
std
cmpsl
ljmp
in
sbb
jmp
loopne
stos
or
mov
pop
insb
outsl
xor
loopne
aam
mov
je
test
sub
cmpsl
sub
in
sbb
mov
cwtl
mov
pop
or
pushf
and
or
mov
xor
fisubrl
mov
sub
add
stos
add
neg
pop
shr
test
decl
cs
mov
sub
clc
fistpll
sbb
fstpl
inc
sti
inc
pop
jae
lods
add
in
bsf
fmuls
add
sbb
test
and
clc
push
mov
and
je
xor
into
push
mov
mov
in
and
nop
and
add
push
cmp
mov
cmp
xor
dec
mov
ret
cmp
mov
je
out
push
out
push
leave
mov
mov
fists
push
sub
into
cmp
je
test
sub
outsl
mov
sarl
xor
aad
popa
mov
test
mov
mov
jbe
cwtl
sbb
scas
outsb
mov
lods
xchg
sub
lods
push
js
das
cmp
dec
in
xchg
xor
jge
mov
add
or
es
mov
pop
inc
add
ret
mov
add
cmpsl
add
outsb
cltd
subb
stos
es
inc
scas
push
popf
jns
insb
adc
xor
fwait
adc
sub
mov
int3
movsb
xor
pop
push
fisttpl
sbb
andb
dec
repnz
mov
push
aad
addr16
in
push
pop
lahf
cld
es
rorl
aad
clc
sub
inc
xor
inc
add
xor
xchg
push
nop
fnsave
xchg
outsl
push
push
lods
push
jnp
ret
out
mov
ficoml
das
rcll
push
icebp
test
inc
imul
sub
ret
add
xor
arpl
cltd
stos
inc
int
cmpsl
mov
adc
push
add
xchg
into
sbbl
push
aad
imul
imul
mov
and
push
je
loopne
and
cli
aas
add
negb
jg
xchg
mov
jb
pop
xrelease
icebp
ljmp
xchg
pxor
clc
idiv
in
mov
and
pop
outsb
psllw
shll
cmp
dec
mov
pop
push
clc
cmp
cmp
jb,pt
and
inc
in
ret
js
mov
pop
jle
add
sar
fadd
shll
pop
repnz
jo
mov
ds
jmp
repnz
iret
mov
pop
pop
xor
or
push
scas
pop
mov
mov
xlat
fdivr
jnp
mov
les
push
lret
pop
jno
mov
loopne
dec
mov
push
push
cmpsl
decb
add
aaa
ss
lods
add
pop
xor
ja
xor
sbb
fcomps
and
push
jmp
cmp
jle
pop
mov
and
jo
inc
int
ss
jne
add
loop
jmp
mov
adc
sub
cld
push
pop
insl
adc
mov
inc
sbb
arpl
adc
in
insl
lcall
insb
and
push
sub
or
lds
mov
fisubs
sbb
sbb
xor
je
int3
xor
icebp
jne
mov
mov
push
imul
mov
adc
mov
mov
loopne
outsl
insb
mov
addr16
orb
test
not
flds
ja
imul
adc
hlt
xchg
or
aad
inc
add
dec
das
mov
jb
or
pop
jo
ljmp
sbb
sbb
cld
ja
loop
and
cltd
dec
sahf
adc
push
mov
xor
test
jns
cwtl
cmpsl
cmc
mov
cmp
dec
jo
adcb
adc
pop
clc
and
xchg
lret
add
adc
js
stc
push
lock
mov
lcall
mov
nop
decb
mov
mov
inc
lea
mov
push
leave
push
xchg
loopne
aam
stc
push
or
add
xor
add
and
adc
outsl
jge
pop
sub
sbb
mov
fwait
sub
dec
xor
sub
pop
gs
outsb
jecxz
daa
xor
jl
cmp
push
mov
mov
loop
les
pop
popf
sti
int
mov
pop
movsl
xorb
jns
or
pop
dec
insl
adcb
inc
or
xor
decb
sbb
push
or
push
in
std
cmovbe
add
adc
push
jo
sbb
test
in
stos
loopne
mov
out
jns
jl
and
push
mov
andb
fsubs
jg
pop
lret
mov
int
push
xchg
lods
sbb
push
pop
push
inc
cmpl
adc
in
aaa
sub
or
lcall
xchg
push
cmc
jae
pop
sbb
push
and
jmp
mov
shl
notb
add
bound
add
sahf
lds
cmpsb
mov
out
or
cltd
mov
loopne
cld
testb
andb
jecxz
xor
mul
xchg
popa
sbb
or
push
push
scas
sbb
dec
xlat
and
dec
movsb
sbb
loope
inc
mov
xchg
push
adc
shlb
in
pop
adc
daa
je
xchg
out
mov
fsubrp
iret
cmc
insb
xor
jecxz
shll
pop
cwtl
jo
add
out
inc
mov
pop
fcoms
jl
orb
hlt
mov
hlt
add
mov
stos
inc
cwtl
xchg
xor
ds
fimull
bound
pop
jmp
les
clc
clc
gs
clc
push
sbb
clc
and
fisubs
stos
cmpsb
mov
and
adc
out
loopne
inc
rcr
xor
pop
dec
in
mov
mov
mov
cmp
xchg
mov
je
xor
jno
bound
pop
mov
mov
scas
decl
push
xor
pop
sbb
push
icebp
test
mov
in
push
cmpsb
push
and
rcrb
sub
mov
sbb
inc
jo
jmp
xor
push
push
fdivrs
scas
mov
lock
cmp
mov
pop
add
push
cwtl
push
in
loope
xchg
add
mov
ja
mov
repnz
loope
sbb
in
push
inc
xchg
jnp
sbb
mov
mov
inc
sbb
shlb
dec
add
fdivrl
or
dec
lds
int3
test
mov
movsl
jecxz
or
cli
enter
push
jge
mov
dec
or
mov
inc
add
xchg
loopne
lods
decl
mov
inc
loop
add
aam
icebp
mov
sbb
ss
and
arpl
push
cli
mov
jge
xor
xor
dec
cmp
cmp
add
adc
cli
scas
xlat
nop
mov
mov
mov
add
sbb
sub
movups
scas
scas
xor
loopne
outsl
clc
das
inc
in
dec
clc
fs
enter
lods
pop
mov
cmp
add
shrl
mov
jle
mov
mov
insb
xchg
cmp
test
pushf
push
nop
add
cmpsb
std
imul
dec
popf
insb
scas
push
xchg
mov
movsb
inc
mov
mov
add
iret
xor
or
jecxz
iret
clc
inc
sbb
jne
jmp
adc
dec
sub
or
jge
xor
or
adc
in
lahf
movsl
outsl
filds
out
xchg
jecxz
sub
mov
mov
clc
shrb
mov
iret
xchg
fnsave
or
mov
adc
repz
or
jecxz
pop
jo
or
push
dec
xchg
dec
cmp
mov
roll
jbe
adc
jl
dec
or
pop
rclb
dec
xor
ret
or
cmc
scas
ret
mov
cwtl
cmp
add
pop
pusha
mov
xchg
fldt
int3
adc
decl
addr16
and
xor
add
mov
les
hlt
ret
xor
shrb
lock
enter
lret
add
dec
mov
in
imul
sub
or
lahf
push
inc
sub
adc
sub
pop
lds
xchg
dec
cmp
scas
fdiv
cmp
js
push
and
repz
test
and
mov
xchg
cmpsl
stos
cwtl
pusha
cmp
xchg
andb
push
mov
std
fucomp
loop
cmp
fwait
sahf
adc
jb
int3
ffreep
mov
mov
adc
adc
aaa
inc
and
into
loop
sub
xlat
xor
icebp
add
out
fnsave
movsb
fldln2
push
jnp
sbb
mov
dec
fstpt
fstpl
push
push
add
mov
mov
icebp
nopl
xchg
fsubl
incb
es
fdivl
sub
mov
adc
data16
jne
movb
aas
add
sub
mov
fmuls
or
enter
rcrb
xor
jg
iret
push
lds
fisttpl
leave
pop
add
jno
ja
fs
ret
outsb
call
xchg
imul
hlt
xchg
jp
pushf
lea
inc
mov
and
fistl
clc
or
mov
outsb
cmp
test
sbb
ficoms
mov
stos
jecxz
loopne
int
push
adc
insb
loopne
sub
test
sbb
adc
adc
adc
out
push
iret
shlb
sbb
in
scas
and
addr16
or
adc
adc
mov
lret
stos
lds
and
rolb
rclb
jl
sub
ret
rorb
andl
js
ja
push
cs
mov
lock
sbb
mov
dec
dec
jmp
sub
adc
mov
inc
adc
push
loop
xor
xchg
and
lahf
and
in
lods
pop
cli
sbb
pop
add
push
jle
shr
out
add
cs
inc
xchg
test
lret
test
clc
xchg
push
pop
imul
pop
jg
jge
outsb
filds
ja
push
es
aad
mov
sub
test
lret
out
inc
roll
inc
lds
cwtl
adc
or
cs
repz
imul
sub
rcr
mov
xor
dec
sbb
pop
or
test
mov
aad
push
sarl
insb
sub
imul
sbbb
addb
ds
mov
mov
lds
mov
vaddsubps
push
hlt
insb
stc
arpl
outsb
cld
sub
adc
or
mov
les
xor
lock
cli
xchg
adc
movlhps
push
push
cwtl
dec
fs
sbb
mov
pop
into
inc
das
jl
pmaddwd
sub
shlb
sub
xor
fstpl
lods
cmpsb
add
es
mov
xchg
fiadds
jo
fldt
aaa
push
in
sahf
push
mov
divl
fucomip
and
outsl
pushf
cs
outsb
dec
adc
inc
add
push
add
leave
xchg
rorb
pop
push
fistpll
out
adc
jo
sub
push
cld
mov
jge
xchg
pop
inc
or
cmc
push
dec
xchg
lret
pusha
jo
jp
and
cmc
aaa
push
test
fisttps
int
push
push
shl
sbb
or
mov
jge
inc
mov
and
iret
sbb
pushf
xchg
push
test
lock
inc
add
jl
mov
inc
test
nop
pop
sbb
js
rcrl
mov
cmc
das
push
movsl
bound
int3
inc
daa
test
sbb
jne
cmp
bound
sbb
in
mov
adc
inc
bound
loopne
loopne
push
sbb
popf
imul
pop
xchg
out
mov
add
mov
stos
mov
mov
roll
push
call
out
and
cmpsb
push
xchg
faddl
lcall
xchg
fildl
out
pop
sar
and
movsl
leave
or
aam
mov
jmp
inc
mov
in
insl
repz
adc
sbb
lret
xchg
test
outsl
pop
sbb
mov
nop
cmc
jle
adc
dec
mov
xor
cltd
add
push
push
or
roll
in
xor
push
sbb
movsb
pop
mov
jge
add
sahf
adc
xchg
dec
or
jae
aas
jno
out
cmpsl
bound
pop
or
sub
lea
outsb
ret
xchg
and
push
xor
jp
in
sub
sar
fdivr
mov
out
mov
fwait
mov
push
call
outsl
jl
and
hlt
test
inc
sub
mov
jns
ret
scas
pop
ss
dec
jns
fimuls
ret
movsl
mov
jne
jbe
jg
sub
decl
loop
mov
stos
test
mov
push
sub
fsubrs
push
mov
mov
push
pop
cmpl
pushl
jg
loop
push
mov
sub
mov
mov
mov
jge
push
inc
jnp
movsl
mov
dec
insl
sbb
jg
jge
in
or
push
jns
xchg
aad
adc
icebp
jg
adc
addr16
stos
popa
out
inc
jo
arpl
test
lods
shlb
jno
jmp
push
xchg
cli
xchg
push
xor
pop
aaa
adc
and
icebp
in
inc
andb
adc
pop
cmp
inc
inc
addl
sbb
fildll
push
mov
mov
and
jl
cld
ret
xchg
xchg
dec
ret
cmp
ret
dec
lcall
stos
pop
int3
inc
sbb
mov
fildll
test
mov
ds
pop
and
cmpsl
imul
mov
popa
mov
inc
xor
mov
repnz
stos
and
pop
decl
xchg
and
mov
jbe
cmp
fidivs
orl
jle
repz
sbb
adc
pop
aam
sarb
lea
xor
push
push
and
lods
or
push
in
jb
xor
lret
jno
xchg
ret
xchg
ja
jge
push
roll
fldcw
and
or
jg
clc
mov
pushf
int
pop
push
jb
mov
dec
js
repnz
mov
mov
adc
inc
cld
sbb
or
movb
adc
mov
enter
mov
push
insb
loope
lea
inc
sarl
mov
insl
dec
enter
cli
push
mov
call
insl
xchg
rcrl
push
lods
cs
mov
pusha
jecxz
cmp
shlb
decl
not
inc
pop
inc
xchg
into
and
sbb
fcomps
adc
roll
popf
sub
sub
mov
ljmp
xor
adc
jl
mov
aam
rcr
sbb
das
cmpsl
sbb
push
cmp
mov
cmp
lock
arpl
mov
mov
xor
js
mov
adc
stc
jmp
and
imull
cmc
icebp
push
bound
dec
mov
mov
pop
xorl
dec
in
lcall
sub
imul
in
adc
jo
aam
dec
pop
addr16
sbb
call
scas
stos
jp
fistpl
inc
lcall
clc
arpl
or
push
xor
shll
cs
in
cmp
arpl
add
dec
subl
shl
fdivrs
add
mov
data16
insl
and
outsl
sbb
or
insl
inc
test
enter
add
lds
add
lods
mov
and
sbb
mov
icebp
test
nop
jo
cmp
adc
pop
les
js
insb
cmp
mov
adc
negb
gs
adc
rcll
mov
mov
push
sbb
sbb
sub
push
loopne
mov
push
and
inc
mov
movsb
cmp
mov
adc
xchg
dec
mov
imul
js
sbb
mov
lahf
fcomps
imul
xor
dec
cmc
pop
xchg
js
push
mov
pop
dec
mov
jo
mov
pop
cmp
int3
ss
fimull
xor
pop
push
sub
sub
jno
test
jns
in
xchg
lods
push
out
cmp
and
push
es
mov
fistps
testl
in
xor
outsb
jg
bound
push
ret
sti
xor
movsl
mov
push
push
xlat
xor
out
ret
dec
test
mov
fdivrs
sbb
repz
push
les
out
clc
or
or
rcl
mov
sbbl
mov
sbb
lods
and
mov
test
iret
add
aad
and
call
cmp
sub
xor
add
or
pop
imul
xchg
into
jmp
test
int
fs
movsl
cli
or
mov
mov
and
or
subl
and
bound
stc
es
jle
lcall
dec
outsl
adc
jmp
or
push
jnp
mov
xchg
jo
mov
inc
cld
shll
mov
add
mov
mov
ret
push
and
inc
popf
test
xchg
ljmp
and
out
xchg
hlt
push
xchg
hlt
in
mov
or
and
fsubrp
in
daa
fisttpl
adc
lcall
mov
cmp
mov
and
xor
incl
testb
or
push
rcrl
call
cmp
cmpb
enter
add
ss
inc
mov
or
and
push
test
mov
sbb
inc
mov
mov
or
ja
outsb
push
shll
pop
pusha
or
push
and
push
xchg
or
negb
rorb
mov
fisttps
frstor
hlt
cld
push
test
xor
inc
xor
imul
cltd
and
leave
jb
jg
or
sbb
test
jecxz
pop
adc
fimuls
and
or
popa
cld
pop
pop
clc
out
jo
lods
dec
sbb
iret
xchg
in
cli
sub
das
lock
or
fwait
xor
int3
loopne
pusha
stos
mov
cmp
loope
mov
aaa
pop
mov
and
push
popa
stc
push
adc
pop
ret
xchg
addb
sub
loop
jl
push
inc
enter
in
mov
lock
push
dec
inc
dec
push
movsl
stos
cs
inc
lahf
and
adc
dec
fwait
mov
cltd
cmpsb
inc
cmp
mov
ret
outsb
sti
fiaddl
stos
repnz
mov
aaa
and
fs
pop
iret
std
and
popf
adc
jo
aaa
pop
xchg
mov
or
das
jge
fiadds
loop
mov
and
iret
shrl
add
test
adc
leave
daa
loop
mov
fdivr
and
outsl
mov
icebp
fwait
inc
mov
cwtl
sbbb
add
pop
rcll
push
inc
je
add
push
cmc
lea
fistpl
lods
loope
push
jle
mov
add
mov
mov
aaa
mov
jg
jo
scas
jmp
sbbb
arpl
or
cli
jg
add
insb
pop
push
mov
sub
insl
add
lods
xchg
movsb
xor
test
cmpsl
rolb
clc
aad
incl
pop
jmp
xchg
push
jge
push
pushf
mov
cmp
pop
sub
std
iret
jno
jno
stos
mov
adc
jmp
je
mov
sbb
cmpsb
ljmp
push
xchg
ret
jle
loope
push
mov
inc
jae
or
arpl
cli
jg
imul
cmp
and
fnstcw
jne
jo
out
dec
mov
push
pop
cs
sbb
pushf
or
and
mov
cli
cld
mov
jo
push
mov
orb
mov
icebp
sub
add
and
sbb
add
dec
cld
xchg
outsb
or
movsb
mov
shl
jge
arpl
inc
in
clc
pop
jecxz
stos
adc
imul
cmp
inc
enter
call
mov
add
out
out
daa
xor
xchg
outsb
ja
sub
mov
xor
push
dec
sbb
movsb
jmp
fs
lahf
scas
mov
rolb
cld
rorl
cld
add
cmp
aam
clc
or
outsl
aad
sbb
xor
add
add
lock
inc
adc
mull
add
adc
xchg
jbe
in
movsb
pop
out
imul
icebp
push
inc
inc
fildll
sub
into
fcom
insl
sub
sbb
in
jecxz
fists
sbb
jge
dec
sub
lret
pop
or
std
pop
outsl
jns
mov
ret
orb
hlt
fistl
jnp
xchg
xchg
or
pause
push
mov
test
je
out
and
clc
outsl
push
xchg
sbb
enter
aam
add
stc
pop
jnp
lcall
pop
sub
fisttpl
mov
out
outsb
call
out
mov
bound
pop
inc
xchg
jns
pop
call
std
in
arpl
movsl
insl
xor
push
insl
mov
mov
jl
outsb
push
repnz
push
inc
fucomp
fcoms
xchg
loopne
sub
or
fidivl
movl
dec
xor
or
jns
dec
sbb
mov
mov
cs
mov
mov
test
xchg
pushf
and
out
jno
icebp
lret
or
sbb
test
mov
fsub
out
or
push
jl
pop
and
jle
inc
loope
outsl
testb
paddusb
repz
mov
rorb
fcmovbe
cmpsb
pusha
add
leave
lock
mov
inc
push
mov
test
into
mov
xlat
sub
push
clc
push
fmull
fwait
pop
andl
xchg
xchg
ficoms
sbb
xchg
shrl
sub
ret
mov
cltd
mov
mov
dec
add
inc
pop
ja
mov
int3
jecxz
icebp
ret
mov
mov
jg
fcoml
jmp
inc
fs
mov
insb
push
pop
and
int3
pushl
enter
lock
test
fistpl
and
or
fistps
cmp
hlt
and
hlt
adc
jb
test
jle
add
hlt
xchg
mov
into
loopne
sbb
stos
outsl
das
sar
leave
mov
rcrl
add
add
jg
sahf
mov
fstl
push
out
test
rep
or
pop
sub
add
add
loopne
stc
fwait
sbb
in
pop
jno
jl
stos
xchg
jl
add
mov
outsl
lret
aaa
jnp
aaa
adc
and
stc
stc
out
rorb
pop
jecxz
jmp
enter
sub
cli
mulb
cmp
aaa
jp
and
or
jecxz
xchg
jecxz
pop
fsubr
insb
test
rolb
mov
cmc
rorl
js
xchg
mov
stos
inc
ds
mov
sbb
inc
adc
cmc
and
cli
adc
add
push
mov
mov
outsb
dec
cwtl
dec
push
gs
lcall
sub
loop
in
pop
mov
pop
mov
pop
jnp
shlb
add
mov
mov
push
test
call
cmc
mov
mov
test
mov
lods
or
insl
mov
xor
inc
mov
outsl
or
icebp
test
mov
fwait
and
add
clc
push
decl
in
cwtl
outsl
push
sbb
push
hlt
add
jo
sub
movsl
xor
pop
cmp
xchg
sub
cmp
shlb
or
mov
ret
lods
nop
or
not
push
loop
inc
jne
cwtl
sbb
addr16
cs
pop
cli
repnz
adc
ret
mov
pop
frstor
aaa
pop
pop
xchg
adc
pop
pop
or
pop
ljmp
adc
mov
pop
jle
cmp
cmpsl
add
clc
sub
cmp
xchg
inc
pop
cli
in
dec
sub
fldcw
and
pop
lock
cmpsl
fsubrp
loop
and
gs
outsb
je
lds
fwait
aaa
adc
add
fisttpl
mov
repnz
jg
outsl
mov
mov
jecxz
incb
xor
dec
rcl
mov
sti
pop
test
insl
rorl
ret
fs
fstl
shll
stos
lea
in
stos
adc
movb
loop
push
push
rolb
jecxz
mov
je
fistps
sub
push
pop
fistpl
dec
enter
sbb
xor
jle
cmp
mov
ficomps
loope
xlat
roll
cmp
stc
mov
movhps
push
jg
jmp
stos
adc
insl
inc
cmpsb
jecxz
pop
jp
ljmp
mov
and
gs
inc
call
cmp
bound
lock
sti
jecxz
add
jge
out
sbb
mov
les
into
push
popf
in
aam
shll
js
aas
mov
stos
ret
push
jecxz
push
mulb
lea
nop
in
in
and
cmp
fdivr
ret
popa
cmp
es
lret
adc
add
mov
jp
bound
adc
adc
inc
int
jecxz
test
icebp
repnz
fs
lods
decl
icebp
cmp
into
inc
cmp
pop
fs
sbb
fisubrs
bound
adc
out
inc
mov
mov
cmp
jbe
pop
arpl
out
movsl
sub
cld
or
sbb
xchg
testl
sti
sub
cld
mov
pop
jecxz
in
jle
push
add
into
and
dec
loope
fdivl
clc
mov
les
inc
pop
stc
stos
fildl
mov
in
stos
hlt
ds
jnp
shrl
dec
ss
push
mov
adc
movsl
sbb
xchg
xchg
inc
repnz
lods
stos
jg
xlat
outsl
test
aaa
daa
sbb
shll
add
out
out
ffree
pop
pop
fnstsw
jne
insl
cmp
inc
and
add
dec
int3
fcmovne
shrl
pop
mov
xlat
adc
and
cli
sahf
lds
sbb
mov
mov
scas
rorb
ljmp
hlt
enter
rol
testl
mov
andl
iret
adc
mov
int
mov
jb
mov
and
push
lcall
pop
ljmp
jo
cld
stos
sbbb
mov
mov
add
dec
mov
dec
addr16
cmc
pushf
pop
loope
loope
sbb
fcomps
and
lods
cmpsb
sbb
xchg
adc
lret
punpckhbw
lea
mov
test
subl
push
and
cmp
and
icebp
sahf
or
ljmp
mov
cs
or
out
xor
and
pop
add
out
adc
cmc
xor
add
test
imul
push
pop
mov
aam
rcrl
lods
xchg
inc
subl
pop
mov
ss
xchg
mov
hlt
push
mov
mov
jbe
arpl
scas
pop
or
inc
mov
std
jbe
cmp
push
lods
inc
cmc
lods
mov
xor
leave
pop
int
dec
pop
xchg
or
cli
outsl
out
pop
dec
xchg
xor
pop
aaa
das
fcomps
lret
std
push
push
data16
mov
mov
cmp
loopne
sbb
inc
dec
rcll
test
ljmp
add
cmp
jl
jecxz
lea
and
jb
mov
test
cld
lods
mov
add
ja
cmp
push
arpl
in
xor
jg
sti
or
xchg
aas
fucomp
ds
icebp
leave
jp
hlt
push
outsl
orb
sbb
das
and
jp
ljmp
jl
jecxz
xchg
icebp
scas
xchg
subl
cmp
adcb
xchg
stc
insb
lds
test
sub
xor
fdivr
pop
call
sti
insb
js
push
loopne
xchg
shrl
sub
add
mov
repz
add
fstl
mov
in
pushf
adc
loopne
inc
jbe
fld
jecxz
push
jo
pop
sbb
js
repnz
mov
mov
sub
sbb
pop
lds
scas
push
pop
ljmp
mov
pop
fimull
mov
repnz
dec
test
push
cld
outsl
jecxz
test
add
mov
in
out
out
push
adc
aam
filds
jle
or
clc
clc
pop
xor
lods
xchg
push
sti
jg
repnz
mov
xlat
jp
out
dec
ds
inc
and
mov
pop
xchg
test
add
cltd
jne
ss
mov
mov
shll
or
in
xchg
icebp
in
outsb
sbb
xor
mov
test
xchg
out
bound
mov
das
mov
or
mov
push
test
lahf
push
xor
cmc
push
incl
push
inc
dec
das
add
pop
or
clc
push
in
cmp
pop
xchg
mov
das
scas
enter
inc
or
cmp
js
stos
xor
mov
cs
and
out
inc
fs
mov
cli
insl
mov
rcll
je
mov
and
ret
popf
imul
mov
xchg
or
mov
in
lods
outsl
push
adc
xor
rcrb
mov
popf
xor
add
sbb
adc
into
hlt
mov
sarb
imul
and
inc
lahf
lret
fstpl
jmp
cmpsb
rcrl
dec
fstl
out
push
cmp
fadd
pop
lcall
rcll
xlat
add
push
ljmp
movsl
js
sbb
repz
add
pusha
xlat
pop
cld
pop
adc
xchg
out
insb
fxch
ret
aad
or
jmp
test
addr16
or
hlt
push
cld
int3
es
nop
mov
adcb
or
add
or
shl
push
insb
add
xchg
out
out
clc
outsl
aad
adc
xchg
jae
divb
dec
loopne
push
shr
cmp
cmc
adc
sub
push
mov
sub
lahf
push
dec
jne
lods
pop
jl
xor
outsl
pop
clc
jg
clc
js
rcr
dec
cwtl
rcll
mov
push
call
aam
push
std
pop
dec
push
mov
xchg
sbb
or
xchg
jnp
mov
insl
rcr
or
mov
push
and
mov
cmp
jl
jmp
mov
or
out
ret
movsl
popf
jl
and
mov
xchg
xor
ds
xchg
mov
push
sbb
pop
mov
push
inc
xor
sahf
cmp
arpl
and
sbb
insl
arpl
pop
lret
cltd
ret
rorl
in
push
les
cmp
inc
mov
es
dec
lahf
popf
cmp
inc
mov
push
and
lret
in
imul
jecxz
cs
and
dec
adc
and
pop
sbb
lea
les
out
push
jns
les
ja
and
sarb
mov
push
lcall
arpl
adc
sbbl
and
inc
mov
push
fwait
xor
je
rolb
cltd
icebp
call
jo
fldenv
nop
icebp
xor
push
mov
jo
add
sub
mov
mov
xchg
jbe
pop
je
movsl
cld
fidivrl
mov
ljmp
xor
popa
notl
pop
mov
imul
out
pushl
or
aam
xor
outsb
sbb
faddl
cwtl
movsl
mov
inc
insl
jmp
push
cli
cmpsl
sbb
dec
xlat
mov
clc
ja
ds
es
fs
adc
dec
out
shlb
mov
test
lea
repz
push
sbb
pop
add
scas
push
lods
push
les
clc
push
setne
cmp
scas
mov
push
mov
pop
scas
out
or
cmpsb
incl
push
inc
into
add
cmp
dec
mov
add
xor
jl
imul
or
inc
out
enter
mov
xor
pop
and
push
fwait
mov
adc
aad
cmpsb
fcoml
push
ret
out
test
pop
push
pop
fsubs
jns
add
or
es
fsts
push
push
push
jnp
test
jg
call
xchg
adc
sbb
sbb
mov
mov
orl
andb
jecxz
mov
fmul
enter
aam
adc
inc
mov
lock
inc
or
imul
ja
sbb
inc
xchg
out
fs
or
jae
mov
jg
add
mov
or
mov
out
xor
repz
push
divl
push
pop
xorb
roll
icebp
hlt
mov
xor
rorb
xchg
jns
pop
aam
call
and
inc
xlat
dec
add
sub
add
or
add
xor
inc
adc
cmp
jg
out
push
jg
mov
mov
or
in
or
fidivrs
jl
mov
or
cmc
scas
jbe
jge
cmp
fs
sbb
std
adc
xchg
into
pop
adc
enter
addl
das
popf
mov
pop
rol
ror
inc
enter
xchg
sti
add
and
js
into
cmpsb
sub
lret
or
lea
jg
rcrb
stc
aas
push
fidivl
cmp
push
and
ret
fcom
int3
fistpl
fwait
sub
jo
adc
lds
dec
rclb
sbb
mov
mov
add
ja
aas
push
mull
dec
and
ss
imul
cld
inc
mov
movsb
leave
mov
jle
out
cmp
scas
cs
lea
cld
push
mov
in
loope
in
adc
cld
jle
jne
add
ret
mov
out
js
pop
je
xor
mov
pop
sub
inc
aaa
jge
lods
fwait
add
adc
push
popa
and
inc
insl
mov
addr16
push
dec
cwtl
aaa
outsb
mov
and
clc
jg
dec
and
sbb
repnz
jmp
sbb
sar
test
mov
subb
pop
repz
icebp
in
loopne
call
push
rcrb
mov
jp
and
xchg
jo
add
push
iret
jg
cs
nop
sub
dec
pusha
fucomp
fcomi
mov
lock
xor
loopne
das
inc
nop
popa
roll
or
adcl
mov
mov
clc
or
or
mov
mov
inc
rcrl
xrelease
lods
adc
lock
stos
xor
sbb
cmpsb
jecxz
add
clc
ret
xor
mov
lret
aaa
adc
andb
inc
add
xchg
and
aam
pop
les
mov
mov
popf
sti
sbb
dec
mov
adc
or
outsb
aad
les
add
ret
sbb
add
imul
cmp
cmc
or
mov
mov
rcl
mov
mov
and
mov
sarl
pop
shll
xchg
popf
pop
mov
fisttpl
and
sti
cmpsb
pop
cli
push
push
xchg
inc
mov
es
aam
inc
outsl
enter
inc
adc
jge
fidivs
jne
in
call
pushf
pop
add
lret
aam
dec
mov
subl
pushl
pop
adc
and
rcrb
hlt
in
orb
out
jbe
push
outsl
or
or
aaa
jns
jg
testb
lea
adc
loope
jno
push
sbb
and
icebp
adc
sbb
and
sbb
lods
test
inc
gs
sbb
mov
lods
jae
scas
push
xor
js
mov
test
pop
dec
mov
insl
arpl
lret
orb
adc
cmp
mov
nop
xchg
shlb
xor
xchg
out
jae
mov
or
or
test
jb
insb
adc
sub
outsb
cs
dec
test
std
mov
jl
inc
push
in
adc
mov
ret
leave
hlt
and
outsb
fcompl
jb
add
dec
mov
mov
stos
sahf
mov
popa
sub
cmpsl
inc
jae
stos
push
fisttpl
outsb
ds
cld
mov
outsl
fcomps
mov
sbb
les
loop
jg
aas
sbb
or
stos
loope
jmp
mov
sahf
test
lcall
pop
movsb
add
gs
popf
ljmp
fildll
bound
orb
jg
in
and
lcall
cmp
flds
push
inc
jb
push
sti
sub
sbb
in
mov
mov
ds
test
dec
add
push
pop
sar
divb
mov
rolb
inc
jl
into
pop
jb
outsb
std
inc
push
dec
adc
add
mov
cmc
lahf
lods
dec
jge
mov
fwait
xchg
loopne
cmc
fistpll
and
xor
shrl
cmp
mov
lahf
sbb
in
sub
gs
mov
add
decl
int3
rol
out
jmp
and
ljmp
cs
or
outsl
inc
nop
push
jns
mov
xor
ret
cli
pushw
mov
shrl
mov
jmp
movsl
je
xchg
test
inc
and
loopne
aad
cltd
cmpsl
pop
mov
das
inc
std
push
push
clc
mov
fsubl
stos
pop
outsb
fucomp
adc
cmp
fcmovnu
mov
fisttps
call
sbb
inc
test
outsl
sub
icebp
adc
or
rcr
xlat
int3
jbe
sbb
mov
add
popf
incb
loope
mov
in
out
clc
inc
cmpsb
sbbb
lods
test
decl
insb
or
loopne
sbb
push
mov
inc
testl
cwtl
inc
sub
lds
mov
js
in
arpl
das
dec
insl
loop
mov
lcall
jecxz
loopne
pop
sub
mov
sti
inc
outsb
loopne
sarl
or
push
lcall
and
scas
repnz
xchg
std
clc
push
or
xchg
ret
mov
push
add
mov
push
incl
test
adc
outsl
fildl
ss
sub
push
stos
and
and
inc
pop
xchg
push
push
jb
nop
xchg
test
dec
movsl
fisubl
inc
in
cltd
shrl
dec
jecxz
inc
inc
fildl
cltd
stc
push
testb
push
push
jp
pushf
inc
addl
inc
std
or
movsb
cmp
icebp
push
fdivrl
pop
adc
out
lock
push
cs
mov
orb
sbb
mov
nop
cmpsl
push
clc
mull
and
cmp
mov
sbb
mov
nop
and
ret
jg
add
pop
add
and
pop
movsl
popl
mov
pop
adc
pop
xchg
sbb
and
imul
mov
cltd
orl
pop
aad
invd
in
out
xchg
lret
push
mov
fstpl
ljmp
ljmp
stc
fsubl
push
mov
dec
ss
rcrl
sbb
pusha
lcall
das
test
out
add
int3
stos
mov
xchg
mov
rorb
out
pop
mov
push
cmp
dec
xchg
cwtl
jmp
loopne
sarb
testb
pop
mov
js
fldl
xchg
mov
xchg
push
push
pop
mov
mov
icebp
fistpll
sbb
adc
subb
mov
add
push
std
mov
mov
xor
cmpsl
push
mov
cmp
mov
pusha
jecxz
or
xor
leave
clc
shr
mov
cmp
loopne
cmp
adc
xorl
lds
pop
jge
push
jb
es
pop
lret
push
rcrb
xor
xor
fsubs
cmc
mov
insl
sub
add
daa
in
mov
imulb
cmp
mov
xor
icebp
inc
or
hlt
xchg
insl
xor
stos
xchg
inc
adc
adc
faddl
adc
pop
mov
adcl
fbld
pop
jg
mov
nop
inc
jnp
jecxz
jl
aaa
adc
pop
push
in
xchg
popa
cmp
and
xor
aas
lret
fbstp
cmpl
sbbb
push
or
add
mov
or
xor
add
cmp
jp
jle
sbb
mov
js
dec
pusha
in
dec
jo
or
shr
dec
adc
imul
jp
mov
int3
in
daa
incl
jg
mov
imull
mov
dec
movsl
ljmp
in
fisubrl
pop
sar
pusha
and
mov
sub
cmp
lods
aam
sub
out
in
test
ss
outsl
sbbl
fldenv
xlat
das
lahf
inc
ljmp
std
pop
sub
lods
xor
mov
mov
out
es
pop
or
mov
pop
mov
out
push
insl
dec
push
insl
mov
icebp
cmp
push
push
in
cld
cmc
pop
in
mov
xchg
jno
sti
jns
stos
sarb
fisubrl
xor
xchg
popa
in
pop
test
hlt
push
add
inc
sbb
jnp
inc
mov
mov
hlt
pop
cld
jp
push
lock
cs
repnz
xor
xlat
add
and
decb
pop
pop
push
je
std
pop
jnp
cmp
jbe
cli
or
imul
scas
dec
rclb
add
pop
or
sarl
xlat
mov
stc
push
jg
fidivrs
daa
inc
movntps
outsb
push
call
xchg
mov
mov
cmc
jp
pause
sub
xor
lahf
sbb
lock
jno
sub
mov
cs
js
lret
cs
in
or
add
jbe
je
call
xor
jno
pop
mov
outsb
add
jo
sbb
inc
shll
xor
les
or
aas
jmp
cli
cmp
out
call
sbb
fiadds
fcoms
insb
sub
pop
xor
fadd
mov
stos
or
xchg
insl
mov
sbb
dec
add
mov
sahf
idivb
out
dec
mov
jecxz
sub
call
mov
sub
or
f2xm1
xor
lods
in
push
clc
sbb
subb
adc
mov
outsl
aas
cmc
test
stos
mov
clc
into
add
adc
xchg
out
cmp
jb
rcl
push
aaa
fst
fbld
mov
cli
jle
xor
cltd
sub
add
cmpsb
cld
scas
sbb
ds
out
fisubs
stos
inc
add
sbb
dec
and
mov
scas
filds
xlat
test
inc
pop
movsl
arpl
xchg
mov
jns
jmp
fists
jnp
pop
ljmp
and
mov
add
rorb
pushl
push
xor
and
nop
push
popf
subb
dec
hlt
aaa
cmp
enter
push
push
mov
mov
std
mov
fnstsw
lock
adc
dec
adc
insb
icebp
in
or
and
out
fdivrs
rcl
add
jne
and
pushf
fldt
jl
push
mov
xchg
testl
rcl
cmpsb
sbbl
xlat
fadds
sub
cmp
lock
je
aaa
outsb
aaa
clc
mov
je
adc
popa
fmull
mov
mov
push
inc
mov
fcoml
inc
pop
adc
imulb
lods
sbb
pushf
popf
lds
outsl
loopne
dec
jge
mov
pop
inc
rclb
out
pushf
dec
lahf
or
mov
push
sbb
mov
xchg
lret
pushf
insb
std
mov
rcll
nop
into
pop
js
fildll
or
arpl
sub
fbld
mov
mov
fidivrl
push
daa
knotb
loopne
mov
call
xchg
ds
ds
testl
test
dec
rcrb
jmp
popa
or
or
pop
mov
das
push
in
mov
jae
push
fcoms
cld
sahf
adc
call
and
sbb
es
dec
push
xor
adcl
mov
sbb
ds
add
loopne
push
inc
dec
cld
jmp
ficoms
mov
lcall
movsl
or
lea
mov
icebp
pop
clc
add
popa
adc
cmp
inc
jbe
jecxz
neg
mov
adc
and
pusha
loopne
dec
cli
shl
cld
imul
mov
cltd
les
xor
or
cli
inc
add
cmp
mov
lock
out
and
push
and
lods
or
rorb
icebp
call
xor
cmp
es
stos
mov
negl
xchg
call
xor
pop
cmpsl
addl
mov
jne
adcl
mov
xchg
fimull
xchg
dec
jge
jns,pn
pop
mov
scas
or
mov
mov
pushl
sar
adc
push
xor
out
mov
gs
test
sub
push
xchg
push
add
mov
adc
xorb
icebp
insl
test
and
add
pop
les
call
cmp
mov
push
pop
ljmp
pop
lock
push
cli
mov
loop
xchg
xchg
lcall
adc
push
xor
dec
xor
test
cmpsb
jl
push
faddl
fnstsw
shrb
leave
push
mov
xor
outsl
cwtl
lcall
clc
pop
sub
clc
pusha
jnp
lahf
xor
dec
das
cld
jbe
or
inc
jmp
mov
cmp
add
add
in
popf
push
std
pop
into
dec
jno
or
push
adc
inc
lcall
adc
fmuls
addr16
pop
jp
xchg
push
mov
mov
sbb
mov
add
and
inc
shl
shr
jmp
ljmp
pop
lret
sbb
aaa
dec
mov
mov
xchg
push
mov
ret
mov
xlat
inc
xor
mov
cmp
lock
inc
sub
nop
push
insl
inc
lds
pop
and
or
js
fwait
icebp
fistpl
ljmp
test
mov
icebp
aaa
js
addr16
stc
nop
mov
mov
push
loop
pop
cld
cmp
aam
insl
mov
push
push
in
xchg
dec
push
subl
cmpsb
daa
fwait
in
or
push
ret
or
outsb
rorb
cmp
dec
cmp
sub
repnz
das
jne
inc
xor
adc
or
insb
cmp
in
aaa
and
repnz
cli
pop
mov
nop
fcomps
test
les
inc
mov
and
popa
jecxz
outsl
mov
sbb
scas
add
pop
testb
div
leave
in
sbb
insb
mov
scas
mov
cmc
mov
mov
dec
sub
pop
arpl
or
test
cld
dec
inc
xchg
rol
jp
or
jg
shrl
pop
add
lahf
dec
xlat
clc
fldt
add
stos
lcall
dec
pop
and
js
adc
in
cmp
cmp
movsb
sub
adc
push
xchg
fxam
sbb
jecxz
xchg
test
loope
adc
cmp
adc
add
push
mov
dec
cmpsl
push
and
pop
sbb
ljmp
xchg
inc
inc
jp
outsl
xchg
ficompl
lods
sub
jmp
outsl
idiv
inc
idivl
je
push
add
shll
loopne
ret
push
dec
sbb
adc
fwait
or
mov
mov
dec
sub
xchg
xorl
out
push
std
repnz
sub
cmpsb
pop
mov
lahf
int
ljmp
call
jecxz
push
loope
movsb
sbb
subl
ret
mov
sub
mov
mov
and
mov
je
or
push
rolb
mov
adc
sarb
imul
jp
pusha
add
scas
push
inc
outsl
sbb
lcall
loop
movsl
fisubl
sbb
cmp
sbb
pop
clc
inc
es
jo
sub
mov
test
dec
shrb
mov
adc
push
inc
hlt
inc
mov
cmp
les
mov
es
adc
loopne
push
andl
mov
lods
addr16
add
xchg
jae
test
mov
pop
insb
rolb
jecxz
jae
add
hlt
lea
pushl
inc
mov
dec
ret
adc
sbb
icebp
popf
add
out
jbe
push
fisttps
fldt
push
add
pusha
int
sbb
or
xchg
add
insl
ljmp
sbb
lret
fwait
and
mov
cs
mov
fistpll
xchg
ret
cwtl
dec
std
scas
imul
addb
in
lock
out
sub
int3
push
iret
lea
sbb
cmp
cmp
lods
mov
sub
cmp
out
xlat
sarl
jo
repnz
adc
insb
sub
out
mov
pushf
sub
shl
sub
daa
int3
cs
mov
adc
sub
pop
call
mov
lods
mov
insb
imul
xchg
pop
jb
sbb
call
adc
fs
adc
mov
nop
or
jne
sub
mov
aam
or
inc
lods
dec
add
icebp
stos
aam
push
push
lret
imul
xchg
int3
call
push
add
or
push
pushf
andb
xchg
shl
xchg
pop
gs
and
pop
and
shrl
ds
mov
add
mov
addl
leave
add
fwait
sbb
lods
lods
movsl
popf
shll
and
scas
xor
mov
mov
loopne
adc
dec
xchg
push
push
orl
fisttpl
ljmp
mov
mov
pushf
sbb
mov
sbb
movb
ss
cmp
mov
inc
jg
fildll
cs
inc
jl
cwtl
push
jns
mov
add
push
cmpsb
or
pop
pop
mov
push
mov
scas
movntps
xchg
push
push
stos
cmpl
test
test
dec
arpl
fldl
xor
jnp
inc
pop
lds
mov
pop
and
inc
movsl
jge
movsl
lods
ja
or
data16
and
adc
repnz
mov
lods
cmp
push
out
pop
pop
js
dec
sub
or
loope
fnstcw
cmpsl
hlt
lret
insb
inc
lock
cltd
push
xor
lea
mov
jnp
jbe
nop
or
mov
hlt
dec
sub
shlb
or
dec
push
push
aaa
ffree
pop
pop
inc
gs
sahf
sbb
ftst
jae
inc
shl
adc
dec
loope
or
ljmp
mov
stos
stos
add
jbe
mov
in
cmp
jne
jmp
pop
add
or
rcrl
dec
dec
sbb
or
lods
cmp
jo
cltd
sub
jmp
jp
mov
mov
data16
ja
cmp
pop
cld
or
xchg
movb
je
scas
and
cwtl
or
xchg
imul
cmp
idivb
pop
int3
sahf
or
push
ljmp
cmp
iret
call
gs
negb
push
jnp
xlat
shrb
shrb
or
ljmp
rolb
xor
inc
sbb
mov
sbb
loope
inc
cltd
rorb
pushf
movsl
fmulp
mov
clc
fbstp
enter
adc
mov
push
xor
mov
fnclex
lods
movl
fs
xor
add
jmp
mov
push
mov
scas
pop
or
sbbb
movb
or
out
mov
sub
movsl
or
jns
push
sub
inc
repz
aaa
outsb
std
jg
and
dec
dec
stc
dec
sub
es
xor
cs
sub
cmp
or
data16
adc
lods
fdivl
push
ljmp
adc
jne
shlb
pop
dec
jp
pop
fcmove
and
fwait
mov
fistl
pop
fs
nop
jno
sbb
lea
ja
loope
jg
mov
mov
shr
pushf
dec
add
push
push
sbb
mov
lahf
push
or
inc
in
or
in
mov
jnp
ret
clc
sbb
cmp
test
xchg
loopne
xchg
xchg
fistps
ljmp
pop
sbb
incl
sub
ds
mov
lcall
mov
das
jnp
mov
push
sbb
push
pop
and
and
int3
cmp
bound
ret
jnp
push
rol
leave
imul
jo
xchg
mov
pop
repnz
pop
test
out
mov
xor
mov
or
pushl
scas
scas
aad
jae
adc
lahf
push
loopne
bound
insb
jg
popa
push
or
adc
movsl
adc
xchg
ret
gs
inc
fs
shl
mov
jae
insl
out
sub
loope
repz
out
sub
out
ret
lods
sub
cli
outsl
push
jno
jmp
pop
push
stos
repnz
loop
and
aad
jecxz
fs
int3
int3
cmpsb
loop
sbb
or
xor
inc
dec
dec
sub
inc
mov
lds
popf
in
orl
shr
sub
loope
mov
jb
or
arpl
jmp
pop
outsl
pusha
and
imul
dec
cld
and
mov
and
pushf
cmc
sbbb
rcrb
hlt
or
out
fldt
std
insl
adc
inc
aas
in
sub
dec
jle
add
or
test
outsl
call
adc
outsl
outsl
adc
xchg
adcl
jmp
or
lcall
and
ja
or
shrb
push
inc
pop
imul
and
cmp
sub
mov
mov
fnstcw
mov
jg
insb
test
je
inc
and
push
mov
mov
add
mov
lret
ljmp
push
or
test
sub
jle
lahf
push
lds
pop
jbe
rcr
arpl
fisubl
ret
mov
lea
cmp
or
push
push
ds
or
push
fmuls
xor
xor
cld
popa
popl
push
xchg
jle
and
mov
mov
xchg
mov
in
sub
pop
push
adc
or
fcom
notb
jns
mov
jle
aam
add
mov
pop
mov
adc
in
pop
arpl
jb
dec
push
mov
clc
icebp
out
add
ljmp
subps
outsb
jg
adc
inc
js
lods
inc
mov
mov
dec
sbbl
cli
sbb
pshufw
mov
lret
lea
pop
or
mov
mov
loop
sub
adc
sbb
movsl
outsl
shlb
push
iret
aad
push
pop
push
call
insb
sbb
dec
dec
sbb
pop
pop
mov
mov
nop
adc
or
adc
les
adc
lcall
test
lock
add
sbb
sbb
fcoms
lcall
ret
testl
jo
or
repz
jbe
xlat
and
je
mov
es
aad
outsb
mov
jne
cmp
mov
sub
dec
aad
jp
sbb
and
mov
aam
dec
aas
cwtl
aas
sbb
or
rolb
sub
xor
and
imulb
sti
rcll
xchg
adcb
sahf
adc
push
add
cmp
xchg
inc
mov
or
pop
sti
out
ljmp
mov
sbbb
cli
test
popa
jbe
push
out
ret
cmp
neg
outsb
enter
addr16
xor
jl
cld
sbb
xlat
mulb
pop
loope
aaa
inc
inc
imul
shr
cmp
add
mov
xchg
or
scas
stos
adc
ret
pop
xorb
lods
ja
cs
clc
mov
sbb
mov
or
jne
pop
mov
adc
inc
cmpsb
sbb
scas
or
lcall
mov
pop
pop
inc
adc
fbld
mov
push
stos
xor
sbb
mov
aad
mov
dec
js
add
bound
and
sub
sbb
in
fdivl
mov
jg
daa
inc
mov
sbb
cmp
cmpsb
xor
testb
push
xorl
inc
out
mov
mov
push
pop
sub
ja
jge
sahf
add
cmp
bound
sbb
inc
mov
adc
xor
dec
fisttpl
negb
std
jg
hlt
sbb
and
mov
adc
pop
jge
out
sti
outsl
or
push
pop
pusha
xchg
mov
outsl
scas
push
cltd
push
mov
sti
pop
scas
pop
jmp
mov
adc
rol
test
mov
push
mov
cmpsl
fs
stos
pop
les
shl
sbb
inc
sbbb
sbb
insb
sbb
push
cmpsb
mov
cs
sbb
push
jmp
ret
mov
fucomp
pop
sahf
das
add
add
cli
movsl
lcall
test
lock
pop
cld
mov
add
jnp
loopne
push
or
pop
or
imul
out
popa
jp
push
shll
mov
xchg
in
xchg
enter
push
repz
xchg
jo
jbe
adc
cmc
lea
es
pop
mov
mov
push
pop
out
fbstp
sub
movsb
mov
or
test
sti
sbbb
je
dec
jle
xor
das
fcompl
inc
sub
add
aad
test
jl
cmp
add
jno
pop
mov
pop
inc
mov
and
int3
ret
aas
cli
xchg
imul
adc
lds
xor
call
repnz
jge
sbb
push
scas
testb
push
sbbl
push
mov
movsb
cmp
insb
jg
xor
pusha
inc
and
mov
mov
pop
adc
lret
mov
stos
pop
adc
cli
ret
adc
andb
xor
add
decl
xor
or
fisubs
adc
imul
xchg
cmp
push
hlt
outsl
xor
xchg
add
es
cltd
ret
outsb
push
repz
leave
ljmp
lods
mov
test
xor
stos
in
cmc
inc
icebp
pushl
mov
pop
test
sbb
std
xchg
mov
aad
or
and
ss
adc
cs
mov
das
lcall
fiaddl
pop
cmc
in
push
pop
pop
xorl
fnstenv
movsb
scas
adc
loopne
scas
cmpb
adc
push
les
xchg
test
adc
je
bndldx
fisubrs
fsub
fisubl
push
jge
stos
dec
lds
inc
iret
into
shll
jbe
push
fcmovu
in
sub
jne
ret
sti
jne
inc
or
std
xchg
fwait
mov
outsb
push
cld
pop
mov
cmp
ss
sbb
or
pop
icebp
mov
push
ja
cli
sub
jb
xchg
lods
ret
mov
loop
dec
orl
cwtl
mov
ds
and
jg
insl
sub
les
xlat
or
add
xorb
dec
outsb
sub
jg
test
xchg
jmp
pop
out
push
push
or
rcrb
xchg
ljmp
mov
and
shr
aam
mov
cmp
ja
shl
sbb
cs
stos
mov
xchg
mov
fimull
xor
pop
xchg
ds
fcomps
jmp
test
outsb
sbb
adc
xchg
dec
jb
shll
rclb
adc
imul
das
lcall
xchg
cmp
push
ret
in
mov
push
sbb
dec
inc
jecxz
cmpb
dec
shlb
popf
jmp
mov
.byte
pusha
xchg
mov
idiv
in
sub
pushl
lea
push
push
lea
push
pmulhuw
clc
std
fdivr
push
call
leave
ret
and
imul
push
push
mov
call
je
inc
aas
enter
xlat
and
push
fsubrl
popa
outsb
add
push
scas
std
ss
lea
or
xor
hlt
push
call
jbe
pop
push
subl
push
gs
popa
xor
inc
push
jno
insb
jns
clc
push
push
call
mov
dec
inc
mov
inc
neg
xor
sub
adc
jmp
fists
stc
neg
not
sbb
adc
jmp
inc
negl
xlat
mov
out
insl
hlt
push
inc
outsl
data16
mov
lahf
out
xor
xlat
and
add
sbb
call
adc
inc
sbb
inc
pop
in
outsb
nop
fildll
fs
inc
call
inc
gs
push
aaa
pop
mov
fldenv
repz
call
hlt
aas
jmp
aas
push
add
fistpll
push
add
push
aas
inc
addb
sarl
aas
inc
jle
aas
xor
and
lahf
push
icebp
stc
aas
fwait
stc
pop
jmp
adc
add
push
aas
sbb
aas
aam
aas
aas
mov
mov
inc
dec
adc
mov
in
rcrb
add
cmp
or
pop
mov
das
add
nop
add
or
gs
shlb
rcll
mov
push
rcl
insb
in
repnz
cmp
push
aas
adc
inc
int3
movsb
out
out
mov
aas
jle
andb
aas
push
aas
pop
jbe
cltd
xchg
or
push
aas
jecxz
data16
rcll
inc
push
and
ret
mov
sti
sub
cmp
xchg
pop
repz
aas
call
outsl
scas
fcmovnu
adc
or
add
aas
pop
jle
sahf
xchg
push
push
mov
add
push
iret
inc
addl
jns
cmp
or
xor
jg
xchg
jge
ffree
aad
mov
xchg
mov
ffreep
mov
daa
jmp
mov
fnstenv
cmp
aas
addr16
sub
jle
push
mov
in
mov
add
sbb
dec
aas
jbe
jnp
sbb
xlat
aas
ja
arpl
das
mov
jg
or
scas
mov
into
ja
aas
xorb
sbb
mov
xlat
leave
arpl
push
lods
push
jl
ret
std
and
daa
xchg
mov
fstpt
mov
test
dec
loope
or
push
aas
rol
mov
pop
aam
xchg
sbb
adc
or
test
outsb
mov
dec
mov
loope
xor
or
aas
movsl
push
or
pop
sti
je
sarl
aas
xchg
aas
lcall
mov
xchg
in
aas
pop
movsl
pop
or
outsl
cmp
into
jle
lcall
xorl
data16
jbe,pt
mov
push
inc
daa
sti
cmp
or
aas
jl
out
gs
cmp
mov
push
loopne
xchg
add
clc
xchg
lods
and
pop
push
mov
pop
mov
and
test
in
addr16
aas
xor
cmp
or
sub
mov
mov
xor
test
jge
pop
and
push
jo
cltd
jae
xchg
cmp
outsb
js
and
push
out
mov
or
aas
fsubrl
xor
jne
pop
aaa
sbb
adc
jnp
in
jecxz
mov
pusha
je
or
mov
repz
aas
mov
adc
arpl
jl
dec
cmp
pop
add
mulb
repnz
push
inc
das
incl
lock
sub
out
jg
hlt
push
sbb
mov
jns
mov
sar
filds
push
or
fucom
int3
outsl
mov
mov
xor
add
jbe
pop
ret
pop
cmp
sbb
xchg
pop
jae
clc
jmp
and
inc
mov
sarb
pop
mov
jbe
icebp
fdivrs
popf
push
mov
sbb
mov
add
sbb
jp
cmp
lret
mov
mov
and
cs
add
lods
sub
jle
xlat
icebp
jp
fcoms
test
mov
dec
inc
cmp
aas
cmp
addb
dec
insl
jmp
mov
or
or
mov
mov
xchg
mov
and
mov
push
dec
xor
lock
cmp
or
adc
repz
cmp
stos
adc
stos
add
and
push
xor
pop
and
mov
mov
daa
pop
lods
jo
mov
mov
jns
sub
idivl
adc
outsb
adc
rcrb
adcl
xchg
or
out
dec
or
popa
xorl
sbb
jns
xor
mov
stc
xchg
enter
jb
jle
sub
xlat
and
outsb
gs
xor
add
out
inc
jmp
iret
inc
or
cmc
ror
xchg
insl
hlt
cmc
adc
loope
cli
xchg
mov
adc
dec
push
adc
lods
lahf
mov
inc
shl
add
out
sqrtps
dec
mov
rorb
inc
and
dec
or
ret
add
inc
roll
roll
jge
in
es
dec
cmpsl
cltd
ja
pop
divb
push
push
mov
add
cld
popa
shlb
shll
cld
call
mov
jbe
sahf
js
cmp
mov
out
xchg
xchg
fsubrs
mov
inc
and
in
sbb
cmp
sub
mov
cmpsl
xchg
fbstp
or
sub
fmuls
pop
mov
add
rcr
mov
push
fcoms
ret
dec
into
fistps
lock
push
xchg
push
push
ret
fnsave
adc
sti
ds
add
mov
xor
int
cmp
test
mov
jmp
xchg
pop
loop
jmp
stos
stc
cmp
shll
stc
or
jo
andb
xor
out
loopne
imul
jo
adc
or
gs
pop
daa
jns
aas
imul
bound
cmp
and
out
lea
sub
mov
aaa
jns
adc
or
adc
dec
xchg
inc
mov
in
cwtl
shrl
in
cld
pusha
sub
imul
arpl
insl
fisttpll
jbe
mov
xchg
push
mov
stos
shl
int
mov
inc
inc
pop
dec
jo
aas
jl
jle
cli
mov
jg
imul
jmp
or
clc
dec
adc
sbb
jl
adc
lahf
mov
ficomps
xor
sbb
or
or
xor
jno
mov
xchg
add
mov
adc
mov
fstl
mov
sahf
jge
push
cmp
fnstenv
mov
mov
dec
cmp
cld
add
es
sbb
and
mov
mov
or
dec
fcmovb
mov
mov
pop
test
aas
pop
mov
sti
movsl
xorb
jb
push
cmpsl
and
pop
clc
dec
lds
mov
div
rcrl
adc
cmp
jp
scas
jp
out
sahf
sbb
out
fists
les
rol
mov
dec
cmp
lahf
into
out
cmpsb
repnz
data16
and
xchg
cli
mov
cmp
std
loope
fcomps
push
nop
jo
popl
mov
mov
adc
xchg
dec
mov
push
bound
sbb
out
sub
aaa
inc
sbb
jmp
sbb
xchg
or
mov
adc
mov
pop
ljmp
arpl
pop
insl
insb
cld
push
pop
jns
dec
lods
shrl
add
or
aam
mov
sbb
or
enter
call
push
fisubrs
xchg
in
jle
pop
adc
pop
jp
sub
pop
dec
dec
shr
loope
imul
cvtps2pi
out
sub
xor
popf
fsubrs
lcall
out
pushf
and
inc
daa
sub
js
mov
push
mov
push
mov
sub
loopne
sbb
adc
lcall
inc
sub
push
xor
jecxz
rorl
orl
loope
push
into
loopne
ss
or
int
into
push
outsb
cs
jnp
or
fisttpl
pop
xchg
mull
jo
and
int
mov
push
fstl
mov
cmc
outsl
jnp
and
fwait
adc
add
mov
in
loope
pop
or
inc
xchg
sub
icebp
jns
ds
xchg
loop
gs
or
dec
mov
aam
ret
mov
lea
mov
in
xor
cmc
pop
adc
push
push
jnp
mov
xchg
adc
fsubs
and
in
call
mov
inc
or
jecxz
xchg
jg
xchg
or
mov
mov
cli
bound
loope
inc
inc
out
mov
jae
jecxz
jmp
cwtl
popf
push
movups
stos
adcl
add
sti
and
scas
cmp
push
mov
pop
push
xor
push
cmp
mov
les
movsl
and
in
dec
shll
imul
cld
mov
subb
mov
push
cmpsl
adcl
fbld
test
mov
sbb
jmp
jl
cmp
addl
icebp
cmp
jno
add
adc
sahf
push
sbbb
mov
mov
sbb
hlt
shlb
imul
out
mov
daa
fs
enter
push
vfrczss
fidivrs
and
loopne
push
or
out
push
clc
cmpsl
ffree
mov
rclb
sbb
ret
sti
xor
repz
fdivrs
cmp
inc
sub
js
adc
jno
inc
jnp
mov
sub
mov
or
in
sbb
push
jo
mov
mov
lock
push
dec
nop
sub
add
xchg
test
es
stos
mov
ret
mov
imul
mov
mov
int
ljmp
inc
test
xor
dec
adc
or
and
or
out
fstpt
xchg
cmpsb
test
add
shr
xchg
mov
add
push
push
jl
incb
shlb
dec
gs
repz
je
cld
fsubrs
insb
xchg
xchg
fwait
jmp
or
pusha
or
orl
subb
adc
imul
dec
mov
je
pop
jg
mov
fs
or
pop
jl
scas
add
xor
mov
mov
sti
mov
xchg
jecxz
xor
cmp
and
pop
xor
sbb
sub
pop
inc
pop
pop
xor
mov
mov
mov
loop
dec
stc
mov
insb
shlb
imul
or
push
clc
cmpsl
mov
scas
rcll
loope
pop
iret
popf
fldt
mov
out
or
mov
loop
mov
sub
mov
jmp
jp
popa
fwait
cmpsb
xchg
dec
ljmp
movsb
dec
andl
or
into
mov
cs
lahf
fsubl
cltd
cmp
lea
fcmovnb
subl
jge
aad
jbe
addb
dec
ret
ds
push
loope
das
mov
mov
jns
cmc
add
xor
jnp
loope
popf
pop
push
mov
cld
add
out
jae
mov
clc
push
stc
es
jmp
mov
jbe
push
pop
sbb
movsl
in
push
in
icebp
je
hlt
jne
pop
lock
lret
idivb
test
movb
idiv
test
and
imul
rcll
sbb
es
dec
xchg
or
push
adc
mov
mov
or
and
shlb
cltd
xchg
add
in
or
lret
mov
jp
cmc
ss
pop
aas
pop
std
push
rclb
cmc
shrb
in
or
test
cmpsb
pop
scas
push
mov
pop
sbb
jecxz
add
xor
cmp
int
dec
nop
stc
loopne
daa
jl
adc
shrb
or
push
push
adc
mov
ret
push
xor
push
enter
ljmp
add
cmpsb
xor
adc
hlt
xchg
clc
fdivs
shrb
nop
test
lds
out
movsl
sbb
outsl
insl
out
dec
repz
leave
aaa
add
into
lret
jp
loope
fistps
leave
push
lret
push
incb
jl
add
cmp
jns
add
mov
leave
xchg
adc
xchg
or
shl
pop
addr16
pop
data16
ss
mov
int
es
fldenv
pop
scas
cli
inc
cmp
dec
mov
test
stos
pop
cmp
and
xchg
add
adc
xchg
ja
in
jl
in
jmp
pusha
test
xchg
jecxz
imul
pop
and
aad
unpcklps
pop
andb
cmp
push
clc
xor
xchg
daa
and
add
sbb
movl
dec
shll
adc
je
icebp
fnstcw
out
mov
movsl
mov
js
js
cmp
inc
and
jnp
add
or
xor
dec
and
fcmovb
inc
incb
out
mov
jae
inc
sub
xchg
outsl
lahf
mov
inc
ds
movsl
cmc
xor
inc
mov
push
or
in
loop
out
int
push
test
sub
sti
test
test
ds
lea
sbb
dec
jns
mov
xor
jl
inc
pop
fstpl
mov
and
mov
pshufw
pop
les
push
clc
dec
inc
fcmovnb
mov
ds
xor
push
fdivrl
ds
xchg
sbbl
jge
outsb
das
mov
nop
push
sub
sbb
out
lods
andb
roll
push
xchg
out
arpl
push
daa
sub
or
mov
mov
mov
out
aam
push
adc
pop
sub
nop
pop
ret
flds
cmc
or
sbb
hlt
mov
fucomip
cmp
inc
xor
aas
sahf
jl
js
ljmp
mov
pop
mov
sti
call
dec
xor
out
icebp
ljmp
lods
mov
loop
lcall
jnp
or
inc
cmpsb
mov
fisubs
mov
and
jbe
bound
dec
xchg
dec
mov
icebp
or
add
dec
fnstsw
jge
mov
push
adc
icebp
ljmp
fisubl
pop
pushf
xor
jns
sub
xchg
push
iret
mov
sbb
test
adc
arpl
dec
mov
jg
jae
shll
adc
pop
xchg
outsl
iret
je
pop
mov
push
or
mov
arpl
pop
xor
push
js
insl
nop
lds
orl
sub
mov
push
sbb
loopne
mov
xor
add
add
outsb
and
xor
jmp
inc
repz
repz
pop
jns
mov
aaa
shrb
or
fidivrs
jmp
sarl
pop
adc
aad
das
cltd
mov
jmp
lcall
sahf
cli
les
xor
jp
loopne
xor
icebp
inc
mov
cwtl
jg
xorl
movsl
sbb
movsl
sbb
or
adc
test
shlb
ja
adc
mov
mov
jae
pop
mov
inc
orl
and
ljmp
inc
and
addr16
or
adc
mov
add
push
cld
or
xchg
jbe
mov
pop
sti
and
loop
push
arpl
sub
push
cmp
sbb
jmp
ljmp
xor
dec
bound
mov
mov
cli
loopne
addl
cwtl
cmc
into
add
sbb
movsl
push
mov
hlt
xor
xorl
xor
and
adc
xor
enter
fnsave
loop
jge
popf
add
ss
cld
push
and
mov
mov
loope
cwtl
rcll
shlb
jbe
sub
jno
sub
xchg
movsb
loope
jle
insb
and
aam
or
test
insl
insl
js
push
push
imul
mov
rol
jle
xchg
cmp
jns
fildl
jb
mov
cmp
sub
mov
push
ret
mov
dec
sbb
inc
jmp
fsts
into
data16
mov
int3
test
lea
or
adc
add
ljmp
popf
int
jns
push
dec
push
rcrl
jnp
jbe
mov
push
xchg
ror
aaa
sahf
push
outsb
cmc
or
mov
ljmp
imul
nopl
aaa
add
fstl
pop
sbb
inc
xlat
fldcw
pop
out
push
mov
pop
arpl
repnz
jne
insb
pop
xchg
push
inc
jns
and
jmp
lods
fwait
jecxz
cmp
std
push
ss
pop
mov
pop
dec
mov
iret
outsl
lods
enter
mov
clc
add
lcall
cmp
dec
aas
call
test
and
fimuls
mov
imul
sbb
fistl
xlat
dec
xlat
loope
nop
outsl
sbb
or
ss
adc
adc
loopne
into
sbb
cwtl
ret
xor
mov
push
mov
mov
mov
mov
scas
or
add
lea
test
repnz
push
lds
mov
test
lods
jmp
std
or
mov
add
ret
jle
mov
mov
rcrb
inc
dec
pop
inc
aaa
divb
mov
xor
xchg
rcll
clc
cli
es
pop
cmpsb
stos
into
push
jbe
pop
cmp
jo
xchg
xor
inc
mov
les
sub
xchg
idivl
adc
pop
mov
test
cmp
loope
xor
inc
movsl
mov
mov
mov
jecxz
inc
xlat
add
mov
outsb
inc
push
aas
insb
fsubs
pop
jg
iret
cmpsb
inc
test
sbb
movb
push
enter
or
pop
jl
fwait
adc
or
lea
pop
pop
xchg
sahf
dec
aaa
lock
les
pop
inc
inc
and
jp
ret
mov
insb
adc
pop
xor
cmpsb
fisttpll
aam
mov
inc
movsl
jbe
push
adc
mov
in
push
push
clc
loop
ljmp
fmuls
mov
sub
sahf
xor
fstl
sbb
fwait
jecxz
adc
lds
dec
xor
inc
and
jb
mov
lcall
jbe
add
test
mov
clc
jmp
mov
and
inc
cmp
shr
daa
cmp
push
inc
and
cmpxchg
sub
dec
je
and
xchg
xchg
mov
jmp
incl
filds
mov
jecxz
push
xchg
adcb
xor
add
fsin
cmp
add
xchg
fidivrl
sub
bound
divl
sahf
repnz
inc
cltd
repz
mov
push
sub
pushw
sbb
sbb
mov
push
xchg
mov
js
pop
adc
jno
mov
mov
pop
pop
add
std
mov
sub
fwait
mov
inc
das
call
dec
sti
popf
dec
xchg
xor
loope
out
cmp
lahf
push
jnp
inc
xor
test
movl
jge
cmp
testb
inc
inc
sbb
bound
mov
jbe
je
mov
rorl
mov
and
push
jbe
aaa
xchg
pop
ljmp
inc
sub
adc
sbb
adc
insl
xchg
and
sub
jmp
jbe
and
lret
mov
cmp
dec
pushf
rol
repnz
sub
test
mov
jl
rolb
xchg
mov
mov
notl
mov
insb
popa
ffreep
and
popf
ret
add
push
js
xchg
clc
mov
sar
lds
lcall
sti
cltd
xchg
shlb
lock
test
dec
and
sbb
out
xor
addl
mov
push
mov
into
push
push
hlt
add
push
dec
ljmp
xor
xchg
cmpsl
ja
ret
cmp
popa
mov
dec
adc
or
cmp
clc
mov
push
sbb
out
sbb
stos
in
cmp
adc
addr16
xchg
pop
bound
and
nop
xchg
pushf
aaa
inc
hlt
mov
outsl
mov
adc
ss
insb
adc
rolb
adc
push
xchg
mov
pop
xchg
jle
mov
rcl
iret
fnsave
icebp
pop
and
mov
scas
xchg
loope
add
and
js
fisttpl
sbbl
pop
pop
bound
fistps
orl
or
cmp
in
shll
adc
jnp
call
shlb
repz
xor
or
push
push
mov
xor
xor
sbb
bound
pop
insb
iretw
mov
gs
or
push
mov
or
push
push
insb
xchg
ss
es
scas
cmp
mov
repz
inc
mov
movsl
push
inc
mov
or
outsb
xor
mov
clc
call
aam
mov
movsb
pop
repz
testl
pop
mov
sarb
push
mov
into
testb
xchg
or
jecxz
push
mov
sahf
mov
push
adc
sbb
push
movsb
dec
nop
aam
pop
add
fists
jmp
push
movsl
bound
inc
decl
jbe
adc
pop
adcb
mov
cmp
pop
popa
or
xchg
leave
fstps
mov
pushf
fists
mov
nop
popf
jb
pop
mov
out
movb
lock
scas
jg
lock
ds
cmp
dec
xchg
adc
mov
xchg
jae
jg
pusha
shl
int3
xchg
inc
nop
jl
mov
mov
mov
push
xchg
sbb
std
adc
cmp
stc
sub
iret
sti
mov
cmp
xor
icebp
cs
jnp
or
mov
and
jl
mov
xchg
rolb
sar
loopne
frstor
mov
loopne
mov
loope
inc
adc
xor
lds
sbb
sbb
popa
stos
push
push
jp
ja
addr16
inc
fisubl
mov
jp
add
je
pop
jmp
add
fs
or
inc
imul
push
aaa
lret
out
and
arpl
mov
sub
cli
addr16
and
jmp
mov
cmp
enter
mov
stc
add
mov
jp
in
xchg
pop
sahf
js
xor
clc
or
bound
sbb
mov
daa
out
xchg
imul
movsb
test
push
or
mov
pop
cltd
leave
vpmadcsswd
adc
aad
shrl
or
addb
xor
es
xchg
addb
test
rorl
fstp
das
inc
add
in
jns
or
mov
and
je
jmp
fwait
setg
jg
mov
icebp
sub
cmp
jmp
lds
fs
sub
scas
outsl
ret
arpl
mov
add
mov
add
sbb
adc
inc
repz
mov
inc
jo
aad
inc
pop
sbb
repnz
add
lods
testb
dec
and
push
cmpsl
cmp
bsr
and
out
sar
jbe
scas
sbb
adc
mov
sub
aam
mov
sub
sbb
push
pop
jle
test
inc
and
scas
or
cmp
aam
les
inc
cli
mov
mov
movsb
sbb
lock
aaa
push
test
jb
jecxz
clc
mov
xchg
lcall
fimuls
ficompl
cmp
cltd
mov
repz
push
jbe
aam
nop
loope
jge
pop
fdivl
lahf
scas
scas
lahf
dec
std
loopne
mov
lods
push
mov
mov
dec
pop
xor
dec
mov
frstor
mov
jo
fimull
inc
aam
lret
cmp
psraw
data16
mov
jg
in
mov
mov
cs
jmp
xchg
mov
jbe
es
ja
sbb
aad
repnz
jnp
pop
arpl
dec
jnp
fstpt
jns
or
sbb
xchg
mov
mov
sti
push
cld
jecxz
pop
in
jl
stos
pop
ja
dec
loop
dec
jl
adc
loopne
in
dec
stos
dec
fimuls
call
aaa
lods
jne
mov
je
int3
int3
fs
loopne
push
lods
adc
jae
inc
lcall
stos
push
sub
xchg
or
dec
jp
scas
enter
sub
adcl
sahf
cld
jle
cmp
test
imul
lds
das
jne
lock
lds
adc
pop
mov
sarb
in
inc
jb
pusha
call
jle
aaa
in
orb
mov
lods
mov
push
or
out
shll
pusha
push
lock
pop
nopl
loope
shlb
repnz
push
cmp
dec
nop
pop
js
outsl
fists
popf
jnp
icebp
or
sbb
mov
pop
iret
mov
rorl
je
mov
push
push
data16
mov
popf
fnstenv
popa
repz
bound
subb
lret
adc
push
xlat
rcrl
sbb
mov
std
mov
jle
stos
jb
cmpl
adc
pop
jmp
pop
or
in
mov
cwtl
jge
push
mov
std
icebp
sbb
push
pop
les
test
jne
pop
lcall
rcrl
lock
pop
shlb
or
or
cwtl
xchg
fldcw
loopne
je
xor
jne
inc
punpckldq
scas
loope
jo
outsl
mov
fwait
outsl
adc
and
cmp
dec
add
adc
stos
add
shlb
and
imul
shl
test
sahf
outsb
ja
pop
inc
push
sbb
jmp
jg
jecxz
mov
cmp
loop
fxch
jbe
ljmp
pop
inc
xchg
mov
iret
lea
clc
mov
xor
ret
fs
fs
dec
fildll
mov
or
sbb
aaa
clc
or
push
and
in
test
popf
rol
push
add
cmp
adc
pop
stos
fcmovbe
outsl
sbb
inc
pop
movups
push
lsl
xchg
ljmp
jp
push
ds
loop
push
pusha
lcall
add
insl
js
popa
test
xor
imul
adc
ficoms
adc
mov
js
cld
adc
jns
sbb
call
mov
add
adc
arpl
jo
loopne
sbb
mov
pop
cmp
cmpsl
sbbl
adc
js
out
xor
cmp
loope
sbb
and
lods
jge
and
or
adcb
jecxz
sbb
sbb
jo
sbb
fimuls
imul
pushf
out
push
push
sbb
fcomps
rcr
scas
push
popa
or
movsl
mov
popf
rclb
cli
insb
fistpll
jne
cmp
mov
jbe
xchg
ret
sub
mov
mov
mov
fsubp
call
ret
aam
shll
mov
xor
sub
mov
or
stc
lods
xlat
push
adc
fdiv
call
arpl
daa
sbb
fisubs
testb
add
es
sub
jo
mov
sbb
pop
cmp
adc
pop
fsubr
inc
jns
push
ret
fwait
inc
aad
sbb
shll
pop
subb
jno
adc
ss
xchg
mov
leave
xor
xor
or
lahf
xor
add
mov
insb
and
cmp
cmp
pusha
inc
add
dec
outsb
in
lods
adc
jmp
imul
cmp
arpl
adc
inc
sub
mov
idivl
cli
mov
adc
and
inc
fistl
xchg
add
cmp
mov
bound
test
mov
test
push
clc
pop
faddp
sub
outsb
mull
xorl
mov
mov
jecxz
push
icebp
and
outsb
fmuls
mov
jmp
mov
pop
shl
fsubs
mov
sar
mov
enter
dec
xor
adc
dec
shrb
push
jae
fmull
out
add
add
scas
into
test
or
inc
fldln2
xchg
fnstenv
das
adc
mov
cmp
pop
push
mov
push
sub
insb
dec
cmpsl
fisubs
mov
sub
sahf
arpl
repz
nop
into
shlb
and
xor
jge
mov
int3
add
mov
pop
xorl
cmp
das
aam
test
inc
jae
dec
xchg
lea
mov
pop
push
sbb
mov
push
sub
lret
gs
shr
insb
loopne
lock
movsl
lret
into
xchg
cmp
fcomi
push
or
das
lret
hlt
dec
arpl
mov
bound
loope
xor
push
mov
jmp
mov
imul
cmpsl
ds
push
cmpb
out
xchg
dec
pop
cmpsl
cmp
push
arpl
iret
mov
xor
jns
mov
bound
jp
jp
mulb
out
movsl
pop
mov
push
jmp
push
stc
dec
daa
jo
mov
mov
adc
lds
add
push
sub
aam
mov
sbb
int3
popf
loopne
mov
push
xor
push
push
loopne
jle
int3
rorl
jecxz
nop
repz
pop
fldl
sub
xchg
push
cmpsb
popf
or
sarl
mov
mov
dec
jp
sbb
mov
xchg
cwtl
push
or
rorl
out
and
sub
mov
rorl
inc
pop
push
or
pop
ret
mov
jo
add
xchg
fidivl
enter
push
aas
flds
test
into
lahf
jb
orl
leave
pop
stos
or
sub
in
clc
call
add
sub
mov
call
cmpsl
and
je
inc
mov
movsb
inc
or
pop
jbe
js
push
jl
push
arpl
jecxz
test
sbb
cltd
int3
loop
add
fisubl
pop
add
xchg
inc
jle
adc
adc
adc
into
cmp
inc
icebp
pop
arpl
xchg
in
ds
xchg
mov
and
shrb
mov
lds
dec
js
mov
clc
cmp
test
xchg
cmc
shrb
in
sub
addr16
xor
ljmp
gs
lret
mov
sti
cmp
pop
cs
shl
rcr
sbb
mov
dec
push
lds
sbb
mov
cmp
aaa
mov
je
jbe
es
mov
test
mov
int
aas
sub
add
cli
xor
fucomp
jmp
add
push
pop
in
ja
push
dec
popa
je
call
mov
or
out
hlt
enter
push
adc
mov
and
jnp
outsb
jmp
pop
std
or
sbb
mov
cs
or
lahf
mov
push
fisttpll
icebp
inc
ljmp
test
es
loopne
push
aas
je
xor
in
push
shll
push
fnstsw
insl
outsb
xlat
outsl
dec
sub
repnz
mov
fdivl
jmp
cmp
test
mov
cmpsl
out
imul
aaa
sbb
andl
icebp
jl
sub
jecxz
adc
adc
mov
mov
or
stc
and
pop
ljmp
mov
les
add
pop
movsb
xchg
clc
or
arpl
add
fisttps
rcr
in
leave
ret
shl
lcall
inc
lock
std
popa
in
lret
dec
dec
add
popf
daa
insl
pop
lahf
lret
xchg
push
insl
loopne
fdivrl
cmp
xor
jg
push
add
inc
sbb
sbb
call
push
pop
adc
xor
mov
push
and
stc
dec
xchg
mov
adc
xor
test
push
popf
or
mov
js
daa
cltd
dec
out
xor
xchg
ficoms
int
test
sbb
cli
pop
adc
cltd
in
adc
pop
lcall
ds
scas
ljmp
loope
dec
addr16
fmuls
movsl
loop
mov
rolb
mov
ret
adc
add
rorb
dec
andb
dec
stos
clc
inc
das
or
out
push
sti
adc
mov
out
add
scas
jecxz
push
push
adc
xor
ret
sbb
dec
sbbb
fadd
push
mov
sbb
cmp
aaa
fcmovbe
popf
movsl
inc
mov
adc
sbb
imul
ret
adc
or
or
inc
loope
cld
add
add
jbe
out
push
sahf
jge
call
jb
push
and
xchg
or
cmpsl
out
pusha
xchg
jns
std
push
pop
in
in
fldt
jge
mov
push
icebp
jg
loope
mov
pop
push
and
cmp
les
inc
cmp
sub
push
mov
xor
sub
xor
jne
sbb
push
jp
sarb
into
popf
add
and
cld
jne
bound
sub
sub
enter
adc
les
out
or
jmp
pop
mov
mov
gs
icebp
add
arpl
xor
addb
jne
or
jo
mov
movsb
stos
call
sbb
daa
pop
sbb
mov
insb
adc
cmp
out
or
imul
add
js
cmovge
imul
fmuls
jg
enter
mov
je
je
rcrb
pop
pop
dec
pop
mov
mov
cmp
movsb
push
mov
sbb
sahf
faddl
leave
inc
or
cltd
in
cmc
ret
aas
xlat
outsb
movsl
ds
mov
js
pop
pop
xchg
fidivl
adc
cmp
in
negb
adcl
addr16
mov
loop
cli
daa
fxch
mov
adc
pop
rolb
mov
mov
clc
inc
jecxz
sub
mov
insl
jmp
rolb
incl
jl
mov
sub
ret
lock
frstor
fidivl
mov
jge
inc
sbb
jae
mov
or
xchg
xor
jmp
aas
loop
insb
jmp
hlt
add
inc
mov
imul
and
js
jo
stos
out
xchg
pop
xchg
insb
push
daa
stos
sbb
lods
int3
xchg
xorl
scas
leave
adc
dec
xchg
call
in
cmp
pop
rcrb
cmpsb
xchg
cmc
adc
xchg
add
cmp
sub
inc
out
mov
mov
test
jb
daa
or
cmp
pusha
arpl
add
bound
and
fwait
pop
add
sbb
lret
xor
pop
adc
mov
inc
int
add
and
inc
and
jns
push
xlat
das
mov
inc
sbb
xchg
mov
xchg
repz
ja
loopne
je
sub
imul
or
test
adc
mov
sti
add
popl
les
cmpl
inc
icebp
inc
shrl
test
lret
ljmp
fdiv
add
ret
ljmp
mov
xor
hlt
dec
and
imull
mov
ret
test
sbb
and
cli
cmp
scas
add
jmp
adc
pop
cmp
cmp
mov
fcoms
sub
ljmp
divb
daa
inc
mov
dec
jge
pop
cltd
mov
test
cmpsl
sti
mov
xchg
jo
iret
mov
icebp
inc
pop
fbstp
xchg
push
sbb
jns
je
aam
insb
scas
xchg
cmpl
pop
mov
jle
dec
adc
cmpsb
movsl
mov
leave
xchg
ret
in
test
sub
addr16
dec
fcompl
xchg
mov
push
push
sbb
and
pop
lcall
push
inc
inc
in
jb
scas
jns
cmp
into
cmp
or
jo
ret
sbb
stos
mov
adc
xor
mov
ret
pop
jns,pt
and
mov
add
or
mov
sti
push
mov
mov
push
xchg
sbb
es
jmp
adc
cld
mov
out
mov
sahf
xchg
sub
sbb
sbb
push
and
scas
pop
mov
mov
sti
int3
shlb
aad
pop
pop
std
popf
insl
fs
cwtl
and
pop
push
pop
imul
fidivrl
mov
push
fistps
enter
dec
mov
and
push
mov
out
and
inc
icebp
xor
add
push
or
cmp
pop
xor
es
ficompl
out
orb
jge
andb
test
xchg
cmc
mov
js
mov
paddsw
xor
cmp
ss
or
pop
push
lea
loopne
pop
adc
lods
ljmp
dec
pop
sbbb
sub
and
mov
adc
or
jecxz
aaa
cmovno
pop
push
jne
icebp
aaa
mov
pop
push
addr16
push
xor
cmp
mov
sub
dec
data16
push
add
sbb
pop
cmp
mov
and
mov
mov
adc
inc
push
std
cltd
enter
or
push
jb
push
cmp
test
fsubp
inc
and
push
mov
xor
inc
cltd
add
fcomps
pop
nop
push
std
test
jle
and
inc
and
call
sub
cmc
inc
pop
movsb
ud2
mov
mov
jmp
push
leave
mov
mov
jbe
hlt
cmpb
lods
mov
push
jbe
repz
push
and
in
test
and
add
cmp
js
icebp
jmp
divl
lret
push
aam
inc
mov
mov
xchg
xchg
dec
add
dec
mov
int
and
inc
inc
mov
sub
sbb
inc
jl
ret
inc
insl
mov
addr16
xor
pop
outsb
or
cmp
arpl
mov
pop
mov
lock
notb
call
mov
mov
mov
adc
roll
hlt
movsb
xchg
fcompl
shr
rcll
and
jl
sysenter
loopne
testl
add
outsl
jb
das
out
bound
lods
push
loopne
cmp
xlat
xchg
aad
cmp
mov
sbb
je
mov
jbe
dec
xor
cmp
and
push
fdivs
ja
mov
push
push
xchg
les
and
aam
xor
in
ds
outsl
xor
sub
cs
push
mov
test
adcl
in
test
push
mov
movsl
cmp
mov
fwait
or
jle
sbb
gs
or
add
ds
adc
in
aaa
nop
clc
sub
sbb
movsl
add
xchg
push
rorl
pop
fcmovnu
shr
mov
daa
mov
jmp
fnstcw
pop
fistl
push
sbb
adc
rcrl
mov
jo
jmp
out
fstps
ljmp
lods
fwait
push
mov
mov
cmc
mov
aaa
sub
jb
dec
add
pop
imul
faddl
xchg
clc
je
sti
cmp
jo
iret
shrb
lea
adc
xor
sub
cmpl
in
pop
lock
jp
lds
and
mov
ds
addl
mov
sub
push
dec
mov
lahf
cltd
adc
imul
imul
loope
mov
and
sti
inc
mov
push
pop
aaa
xchg
push
ffree
and
test
loope
xor
pop
out
and
sbb
dec
out
gs
cmpb
pop
gs
mov
les
push
imul
push
fiaddl
cwtl
inc
addr16
rcr
test
xor
filds
daa
call
mov
filds
addr16
mov
push
enter
jne
cmp
mov
lret
jecxz
or
lcall
dec
or
rcrb
inc
shll
inc
adc
sub
mov
pop
cmp
inc
pushf
jmp
jle
add
cltd
adc
xor
jns
insb
xor
xor
sbb
mov
fistl
mov
into
mov
mov
or
mov
imul
lret
mov
cmc
push
mov
jg
punpckhbw
lock
outsb
dec
mov
mov
xchg
add
lock
sbb
orb
sbb
and
aam
pop
outsl
clc
call
add
ret
fcmovnu
mov
cmpsb
cmp
fcmove
sbb
sar
nop
loopne
cmpsl
mov
test
test
xchg
xlat
jl
and
cli
stos
jg
and
cmp
setbe
aam
leave
mov
cmp
mov
mov
sarl
mov
xor
icebp
dec
push
mov
test
mov
jno
mulb
mov
or
ror
pop
fdivr
sbb
lods
sbb
jbe
pop
mov
repz
add
sub
popa
mov
setnp
add
in
into
mov
insl
jnp
ret
jge
loop
mov
testb
and
or
or
lock
or
jno
push
mov
shll
xchg
sar
mov
lods
or
test
cli
push
arpl
test
jecxz
imul
jb
xchg
xor
rcrl
and
and
fs
adcl
and
bsr
and
pop
cli
div
adc
mov
pusha
into
xor
arpl
add
xor
lods
cli
dec
cmc
mov
adc
mov
icebp
add
mov
xchg
or
out
push
push
and
push
dec
inc
jo
and
jg
cli
pusha
and
mov
inc
mov
insb
clc
test
sbb
cmp
xor
xor
js
mov
popf
inc
fs
cmc
lcall
mov
popa
in
mov
insl
dec
mov
mov
cltd
lret
mov
rolb
lods
push
mov
jmp
ror
rclb
sub
out
inc
jae
inc
je
fwait
subb
mov
fdivrl
and
mov
scas
cmp
aas
pop
int
pusha
jae
mov
pusha
add
outsb
xchg
cmp
cmp
in
in
xchg
int
sub
mov
push
xchg
iret
scas
or
inc
test
nop
dec
ret
push
jnp
in
adc
mov
in
or
jle
sahf
fisttps
sub
hlt
sub
xor
push
pop
mov
mov
add
fisttpll
jo
sti
adc
insb
or
cmp
inc
pop
orb
mov
xchg
into
sub
add
cmp
or
inc
test
call
rcr
inc
xor
push
scas
sub
or
cli
ret
mov
adc
fisttps
mov
sahf
xchg
outsl
andl
sbb
repz
adc
fcoml
mov
scas
add
mov
mov
outsb
push
fldt
dec
push
add
ss
fstpt
and
out
pop
daa
stc
sbb
daa
mulb
dec
sbb
push
xchg
mov
clc
push
mov
push
pop
pop
insb
mov
rcl
jb
mov
mov
xor
int
xlat
and
cli
jbe
stos
cmp
sbb
adc
loope
or
pusha
add
ja
std
mov
cmpl
jge
fcomip
jae
sbb
fsubl
sbb
jge
mov
push
jo
xor
insb
and
adc
push
xor
mov
push
mov
add
repnz
mov
mov
sbb
sbb
jbe
mov
gs
test
fidivrl
pop
mov
cmp
ds
dec
cmc
pushf
aad
mov
pushf
dec
sti
pop
sbb
pop
call
pop
dec
lods
sbb
inc
mov
ss
and
push
or
mov
mov
aaa
push
rol
jecxz
daa
xor
sub
fwait
sub
or
xchg
sti
add
fimull
lret
inc
int
dec
popa
mov
inc
xor
mov
adc
xchg
aad
mov
jns
cs
fsubs
mov
jecxz
sti
fisubrl
cs
push
gs
xchg
xlat
add
shrl
daa
inc
mov
mov
pop
js,pt
and
dec
cmp
mov
adc
xchg
fcomps
insb
cwtl
fistpll
add
xchg
sub
ljmp
repnz
xchg
fldl
test
pop
sbb
inc
lods
mov
test
and
lods
dec
mov
mov
loope
cmp
cmp
arpl
rorl
out
jl
and
add
enter
out
inc
out
and
dec
frstor
push
push
test
and
jecxz
xor
xchg
shll
sbb
dec
lods
jle
pop
fsubrp
fsubs
test
jmp
pop
sbb
mov
mov
cld
ljmp
daa
fcomps
lcall
ret
adc
mov
outsb
call
push
dec
adc
cmc
addl
sbbl
mov
loop
pop
push
cmpsb
and
test
jbe
sub
call
add
out
cmpb
out
xor
lods
sub
ror
je
jo
jmp
pop
mov
or
xor
xchg
test
mov
je
je
inc
mov
fdivl
push
pop
loopne
sti
mov
push
vmwrite
inc
out
pcmpeqd
js
clc
jl
decl
insb
ljmp
cltd
and
lahf
mov
dec
fmul
jnp
xchg
and
cmc
shrl
sarl
daa
imul
add
dec
or
cltd
add
cmp
xor
sbb
jne
sahf
cmp
fbstp
andw
xor
loope,pn
icebp
jo
out
mov
dec
subb
mov
fdivs
repnz
xor
inc
push
jg
frstor
mov
int3
outsb
or
jle
popa
movsl
in
data16
pop
xor
mov
push
mov
cld
and
fidivl
add
rorl
lods
ja
dec
push
jmp
cmpsl
jb
pop
lcall
inc
test
sti
aad
push
pusha
xchg
adc
inc
dec
sbb
push
stc
daa
aad
jne
ljmp
mov
ljmp
stc
dec
cld
fisttpll
mov
mov
sub
test
jno
mov
sub
stc
ret
push
xchg
cmp
push
imul
shl
filds
call
divb
dec
mov
jo
mov
sub
mov
or
pop
sbb
pop
ror
pusha
mov
shll
mov
int3
cmpsb
adc
and
inc
inc
and
and
add
movsb
cmp
push
in
testb
fmull
subl
imul
lea
es
lock
push
mov
lods
xchg
mov
mov
into
xchg
stc
clc
test
mov
out
sbb
sub
add
mov
xchg
jne
or
ja
ja
pop
lahf
inc
pushf
stos
out
jns
repz
inc
lcall
push
fwait
inc
xchg
call
cmp
pushf
scas
shlb
dec
in
jge
scas
add
push
xor
or
mov
fmull
add
mov
int
xchg
or
mov
shr
pop
scas
outsl
in
adc
aad
adc
add
fwait
mov
ss
or
dec
addr16
mov
sbb
xorl
mov
adc
jmp
js
int3
out
cmp
clc
pop
pushl
inc
ljmp
iret
pop
repz
scas
xor
popf
lcall
and
mov
pop
les
push
fwait
lahf
pop
add
loopne
pop
leave
fistps
imul
mov
pop
xorb
call
stc
pop
push
mov
mov
cmp
mov
loop
scas
jge
lea
inc
popa
cmp
xchg
movsl
mov
xor
outsb
or
push
sbb
and
mov
mov
add
loop
shl
data16
xchg
adc
xchg
imul
in
lahf
push
pmuludq
das
in
jmp
jmp
testb
sub
outsl
or
xor
jmp
mov
and
and
jg
enter
loope
add
out
sahf
aaa
inc
xor
inc
add
and
lock
sbb
mov
pushf
bound
minps
push
push
sub
add
push
and
sbb
mov
jbe
jge
jmp
pop
popf
or
sarl
jg
xor
inc
cmp
lret
in
enter
cmp
sbb
addr16
popf
push
and
xchg
outsl
divb
jne
and
cmp
add
mov
inc
std
bound
push
outsb
xor
or
or
or
push
jo
loope
sbb
cmc
ret
ret
cmp
sbb
test
ret
insl
aas
inc
push
pop
imul
mov
and
cmc
xchg
adc
sti
inc
negl
popa
stos
jle
or
or
and
nop
dec
cmc
jle
add
cmp
les
mov
push
das
fdiv
inc
push
rcrb
xchg
out
and
mov
pop
xchg
or
pushf
ficomps
jo
adc
jno
stos
insl
inc
pop
enter
cs
aad
fwait
call
adc
stos
pusha
jmp
stc
pop
fldt
nop
cmp
mov
cmpsl
pop
sbb
sarl
and
jecxz
inc
jge
out
dec
sbb
inc
push
sbb
or
or
push
arpl
dec
add
mov
fisttpll
js
mov
cld
arpl
cmp
dec
lret
mov
cmpsb
imul
addb
test
dec
les
mov
mov
test
test
cwtl
push
xor
jl
xchg
sub
mov
jno
and
add
shlb
shl
cld
das
adc
into
sbb
lahf
aad
jno
nop
mov
jo
sub
pop
mov
outsl
pop
fisttpl
ret
hlt
lea
sbb
sbb
add
adc
and
cs
xchg
xchg
or
mov
loope
rcrl
mov
jp
call
filds
clc
cmpsb
test
lock
push
push
or
aam
in
sub
in
pop
add
icebp
notb
mul
inc
jne
or
push
adc
js
and
popa
mov
cmp
in
add
clc
jnp
pusha
inc
leave
xchg
add
inc
hlt
outsb
shlb
ja
loop
test
mov
mov
dec
sbb
push
add
pop
dec
dec
mov
enter
outsb
pop
mov
mov
imul
add
dec
ret
orb
push
stc
xchg
sbb
or
add
jno
xor
sar
mov
std
mov
pop
in
adc
pop
cmp
andl
lea
les
mov
jo
xchg
push
push
jl
push
sbb
das
in
pop
sbbl
and
dec
iret
adc
jbe
inc
xor
add
lret
or
adc
dec
jge
mov
mov
clc
aaa
lcall
xor
mov
lock
xchg
xchg
and
cmp
xor
pop
cld
xchg
push
in
sbb
mov
mov
sbbl
jae
push
js
dec
addl
inc
negl
sbb
fstpt
adc
pop
cwtl
mov
mov
pop
add
out
jnp
mov
inc
cli
xchg
cli
setae
or
sahf
call
cld
dec
loope
stos
imul
mov
andb
lcall
or
jp
inc
enter
cmp
adc
ja
roll
mov
les
ljmp
cmp
scas
sub
lret
paddq
add
gs
adc
outsl
xor
sahf
sub
or
mov
jge
lock
mov
clc
inc
imul
mov
out
or
or
cli
lods
repnz
lock
mov
nop
cmp
rolb
lock
mov
dec
xchg
data16
insb
icebp
inc
test
mov
enter
insb
sbb
push
pop
ret
dec
imul
add
mov
daa
jmp
mov
cld
andl
movsb
xchg
jmp
test
pop
sub
aad
mov
mov
mov
and
stc
push
scas
das
std
pusha
subb
fnstsw
addl
shll
add
push
mov
into
dec
daa
sub
jmp
mov
cmp
enter
mov
adc
stos
je
ret
scas
adc
sub
push
hlt
mov
and
adc
cmp
jo
or
ret
aas
cltd
sub
mov
cmp
insl
lret
mov
idivb
ret
ret
fimuls
mov
adc
ret
fs
mov
adc
pop
popa
sbbl
push
push
cltd
insl
xor
aas
je
int3
and
daa
push
out
mov
add
xorl
leave
popf
xor
movsl
insl
repz
adc
fmul
fsub
pop
popf
inc
mov
push
inc
fcmovnb
pop
push
and
ret
pop
cmpsl
jne
or
lods
popa
cs
in
xchg
sbb
push
cmp
xlat
lea
sub
mov
inc
xchg
lock
popa
xchg
test
sub
lret
shll
roll
test
xor
mov
scas
mov
ljmp
sub
les
test
jno
and
dec
mov
mov
jg
push
fbld
sahf
fmuls
fnstenv
adc
std
loop
fs
adc
loopew
loopne
adc
fidivs
nop
adc
shlb
mov
rcrl
enter
push
enter
mov
and
out
cmpsb
test
or
es
xchg
enter
xchg
jmp
push
aaa
ffree
in
inc
lods
insl
addb
adc
inc
clc
and
mov
popf
or
or
or
xor
sbb
mov
cli
fidivrs
fcoms
pop
les
lahf
iret
lds
adc
sbbb
pop
movsl
inc
clc
add
mov
call
adc
test
fidivs
mov
push
push
data16
mov
inc
testl
cwtl
loope
jmp
dec
mov
xor
movsb
and
pop
mov
test
mov
inc
mov
pusha
adc
xor
xchg
nop
cmp
es
rclb
je
pushf
sarb
sbbb
lahf
lock
std
jae
inc
fwait
sbb
xchg
mov
call
lret
lods
or
inc
jno
xor
adc
and
divl
adc
adc
push
jae
mov
pop
dec
xor
inc
fsubl
aad
jmp
xor
aam
cmp
adc
test
rclb
cmp
hlt
cmpsl
lcall
sub
push
add
insb
cmp
push
lea
cmp
or
cmpsb
es
inc
jp
decb
push
leave
popf
or
inc
push
lock
mov
outsb
add
and
rcll
mov
xchg
or
and
cmpsl
lock
lods
outsb
and
in
ljmp
or
mov
divb
test
fildll
or
leave
sub
pop
or
fldl
mov
std
fildl
pop
mov
lret
adc
es
jp
and
jmp
test
sbb
add
das
push
xlat
fwait
add
testb
test
dec
in
pop
je
test
mov
xchg
add
jl
push
into
add
ffree
jge
add
inc
lds
scas
xchg
jae
inc
inc
jl
es
scas
sub
das
xor
xlat
push
and
lcall
stc
mov
jmp
jmp
jnp
and
fildll
add
icebp
andl
push
incl
cmp
bound
add
loopne
out
xor
imul
push
clc
orl
pop
push
aam
mov
xchg
mov
jmp
mov
into
xor
in
adcw
add
leave
sub
add
out
adc
xor
mov
cmpsb
jg
mov
add
or
xchg
add
faddl
outsb
mov
in
scas
mov
shrd
pusha
pop
xchg
fidivrs
xchg
lahf
loop
dec
cmc
add
imul
mov
mov
or
movsl
fnsave
mov
pop
lret
add
or
push
bound
and
sbb
or
xchg
loope
jmp
sub
pop
shrb
das
cmc
sub
mov
or
mov
jp
sbb
cmp
std
jbe
es
adcl
nop
out
out
xchg
lods
outsl
inc
pushf
adc
pop
clc
pop
xor
add
jp
push
pop
fstl
adc
inc
push
aas
sub
push
mov
mov
pop
cmp
jns
aad
hlt
mov
jne
mov
mov
mov
push
jg
js
sub
xlat
mov
jne
mov
xchg
inc
sbb
lahf
gs
iret
popa
dec
fistpll
loop
push
ss
or
repnz
aaa
insb
aas
or
add
sub
fwait
adc
cmc
cmpsb
fidivrl
dec
inc
or
insb
test
sbbl
sub
sbb
int
int
fmuls
int
jbe
nop
lahf
test
negl
jo
jnp
outsb
lds
lock
ret
call
shl
rorb
xchg
jo
xchg
fcmovne
rorl
je
xor
sub
mulb
jp
xlat
inc
movb
bound
jnp
faddl
hlt
mov
inc
mov
imul
or
jbe
adc
push
call
jmp
jge
ret
adc
icebp
mov
jno
sbb
outsb
or
ret
sar
fsubrp
add
pusha
pop
jns
dec
mov
mov
adc
add
aaa
sub
fildl
loopne
sub
mulb
insl
mov
dec
in
cs
mov
push
mov
gs
hlt
andps
les
out
scas
cmp
and
jb
xchg
dec
stos
jge
pop
clc
mov
mov
mov
fdivs
cmp
and
mov
ret
dec
push
faddp
test
adc
das
jp
sbb
jge
and
stos
fbstp
sub
mov
mov
dec
fiadds
rcrb
mov
loopne
scas
xor
add
decb
xlat
mov
loope
pop
adc
dec
loop
sahf
mov
insl
jb
jl
xchg
arpl
scas
inc
js
fmull
sbb
clc
stos
inc
adc
les
mov
jmp
jle
imul
outsb
jnp
popa
out
sub
icebp
into
movsl
push
movsb
clc
pop
mov
sbb
pop
dec
cmc
iret
mov
jmp
or
movsb
or
test
mov
shll
cmp
or
iret
inc
cmovp
adc
xchg
addr16
cmc
cmp
mov
bound
push
pop
addr16
add
inc
jns
jmp
jp
cmp
filds
cli
adc
jae
insl
dec
pop
int
sub
gs
leave
cmp
test
add
outsb
or
push
mov
insl
ret
in
stc
les
icebp
lea
pop
sbb
cwtl
xor
jmp
push
cmp
pusha
rcrl
adc
xchg
jl
adc
lds
mov
and
add
in
push
dec
out
mov
sbb
add
xorl
pop
add
sarl
outsl
paddb
pusha
pushf
and
cmp
orb
fucomp
push
adc
mov
sbb
push
aad
pop
or
or
outsl
jl
ret
arpl
mov
dec
jb
sbb
jb
jle
shlb
sub
into
jl
js
andb
add
out
add
sti
daa
inc
xchg
inc
mov
or
and
sub
out
movsb
xor
or
loopne
mov
xorl
pop
jne
xchg
pop
pop
lcall
xor
adc
mov
rcll
jge
mov
xor
pop
adc
pop
add
out
pop
pop
movsl
xor
mov
xor
sbb
sub
mov
pop
js
mov
or
sbb
dec
mov
and
repz
mov
or
pop
out
or
pop
outsl
cmp
das
mov
cli
repnz
popf
jo
ss
pop
mov
fadd
or
call
ficoms
inc
popa
daa
lock
mov
lods
stc
mov
and
xor
mov
mov
pop
leave
inc
sub
icebp
imul
bound
arpl
mov
sub
outsb
xchg
pop
adc
je
sbb
sub
or
pop
push
andl
ds
movl
xor
ja
shl
dec
shll
inc
pusha
pop
mov
mov
adc
mov
leave
pcmpeqw
or
sub
iret
test
roll
pusha
add
mov
loop
aaa
out
lretw
ds
cmp
fs
stos
inc
adc
outsl
jp
or
loop
xor
dec
push
mov
ret
dec
sbb
pop
fisubrs
and
jo
fildl
push
inc
rorb
mov
push
or
fbstp
test
dec
sbb
cmp
std
das
mov
inc
add
sub
jno
sti
push
inc
aad
push
std
adc
xor
repz
dec
mov
push
mov
mov
and
ret
push
aas
mov
inc
enter
lods
popf
inc
fcmovnbe
inc
loopne
and
adc
sti
sahf
cmp
hlt
ljmp
xor
lds
add
cmc
test
movsl
in
inc
rol
das
push
add
adcb
dec
movsl
sbb
les
and
aaa
jl
lret
fsub
mov
lds
rcr
sub
es
add
and
adcb
addr16
ret
dec
mov
stos
lcall
sbb
pop
push
in
mov
inc
xlat
lcall
dec
ud2
pop
adc
push
mov
adc
jnp
lret
pusha
mov
fistpl
out
iret
sbb
mov
fwait
lret
rcrb
out
lea
xchg
sbb
fdivs
shl
mov
jae
pop
mov
pop
or
je
inc
pop
mov
test
mov
les
pushf
addb
iret
adc
rclb
call
data16
inc
mov
mov
mov
push
nop
fstl
shrb
inc
and
and
idivb
sbbl
mov
dec
xchg
and
xchg
ljmp
jl
hlt
dec
and
inc
add
ljmp
pop
pop
push
lock
fst
add
and
ljmp
adc
jbe
and
int3
mov
mov
mov
mov
mov
je
out
xchg
mov
and
sbb
add
dec
lahf
aad
xor
divl
push
xor
mov
pop
sub
bswap
mov
lock
or
fs
lods
push
mov
out
pop
movsl
jne
jg
jbe
xchg
push
ds
cmp
push
pop
xchg
mov
fiaddl
inc
mov
popa
jmp
add
sarl
adc
sub
push
out
xor
mov
xor
rcll
outsb
jmp
xor
dec
jl
and
mov
lods
xchg
gs
push
cmpsb
and
jae
imul
sub
mov
gs
pop
jbe
xlat
mov
cltd
jno
lcall
jns
popa
lret
pop
cmp
rclb
or
outsb
dec
add
in
hlt
jmp
bound
adc
inc
sbb
push
sub
aaa
sahf
cli
or
movsl
imul
sbb
jecxz
rolb
jmp
cmc
les
inc
add
outsb
sbb
cli
sbb
ja
push
push
sub
dec
add
adc
fisttpl
and
sti
and
rorl
pop
adc
testb
push
outsl
pop
jecxz
loopne
pop
test
cmp
clc
pop
adc
and
loopne
xorl
push
mov
dec
cmp
imul
mov
ja
mov
cs
fs
mov
xlat
and
je
cmpsl
popf
iret
jo
dec
adc
jecxz
fistpl
sarl
pop
loope
mov
pushf
loopne
je
jb
faddl
cmp
shlb
cld
orl
call
fiadds
jg
or
aam
loope
cmp
lret
mov
xor
jns
cmp
jl
xchg
ficoms
inc
dec
push
daa
dec
popa
movsb
lock
push
fisttpll
xor
sub
pop
in
iret
jne
mov
or
das
loop
roll
cmp
xchg
ja
dec
je
into
inc
jg
out
or
lcall
pushf
jne
add
mov
add
sub
mov
mov
dec
inc
imul
jae
mov
add
pop
adc
movsb
pop
fldl
fistl
aad
mov
cmp
jbe
sbb
shlb
movsl
in
loopne
push
mov
cltd
push
push
icebp
scas
fistpll
fisttps
ss
imul
std
mov
cwtl
mov
xchg
pop
pop
rcl
das
ss
lock
jne
dec
jae
stos
mov
loop
ja
pop
lea
int3
cmp
sbb
sbb
jmp
jnp
dec
clc
add
push
or
cwtl
push
inc
popf
mov
jno
rcr
xchg
adc
in
cmp
shrl
push
mov
push
sub
cs
out
jae
fidivs
int3
xchg
xlat
or
sbb
hlt
test
sub
movsl
xchg
push
lcall
and
xchg
fists
inc
movb
fwait
add
jle
js
or
cmpsl
mov
sub
sbb
pusha
mov
xchg
lods
cli
fucomi
popa
jmp
ret
push
mov
push
rorb
push
aam
push
cmp
jl
lods
lds
pop
adc
and
sbb
jl
ficompl
dec
sbb
inc
lcall
jp
dec
jecxz
mov
add
call
test
lods
ljmp
push
lds
xor
rcr
int3
and
add
mov
xor
mov
shlb
lods
push
mov
sahf
stc
pop
mov
xorb
scas
push
loope
in
and
sub
or
mov
stos
mov
test
xorb
dec
cmpsl
loopne
jle
cmp
jge
imul
and
ficoms
lods
cs
mov
jl
jo
or
call
jecxz
cmp
jo
in
pop
fnstsw
and
adc
inc
jl
xchg
push
out
jns
bound
mov
je
rorl
ss
fnsave
rcll
sub
outsb
cmpsb
scas
and
ja
inc
jge
or
movsl
xor
or
xor
jae
stos
lret
pop
out
cvtdq2ps
mov
mov
cmp
mov
add
dec
or
or
xor
pop
pop
clc
inc
lds
daa
mov
inc
punpckhdq
les
cltd
or
and
jnp
sbb
dec
shr
adc
cli
movsl
fwait
push
sub
jo
cs
lds
mov
sbb
movsl
lahf
mov
mov
cmp
shr
and
push
pusha
inc
xor
adc
js
clc
lods
push
mov
movsb
lods
stos
cmp
mov
dec
sub
mov
inc
ret
sbb
xchg
lds
aad
fisubrl
lds
pop
sarb
mov
sbb
ds
pop
pusha
movsb
test
mov
mov
xorb
in
das
imul
frstor
sbb
dec
lahf
lods
inc
outsb
sbb
movsl
icebp
scas
ds
adc
cmc
hlt
add
popa
loop
sbb
ja
pop
mov
pop
push
gs
cld
addl
dec
and
cltd
xacquire
mov
or
loopne
push
sbb
pusha
cli
or
imul
ljmp
add
xchg
add
dec
and
sti
jmp
add
mov
aaa
ds
outsb
pop
aaa
dec
add
mov
add
test
shl
fwait
les
icebp
mov
jbe
jno
subl
fsubrs
mov
outsl
xchg
mov
pop
icebp
test
xor
cmp
stos
outsl
jl
nop
icebp
cmp
cmp
ja
fcomps
cmpsl
sub
dec
aad
subl
hlt
pop
ds
aad
fs
mov
pop
aaa
jbe
test
push
cmpsb
xchg
test
ja
cmpsl
lods
push
fistpl
jo
loope
jecxz
mov
fisubrl
pop
inc
sub
fdivrl
rolb
lcall
cli
gs
jb
dec
fadds
mov
pop
or
and
fdivr
aam
out
add
inc
orb
test
es
scas
lahf
imul
mov
jne
jns
and
or
aaa
push
push
std
or
sub
or
sti
fisubl
dec
pop
cwtl
xchg
jno
dec
icebp
or
adc
mov
add
add
push
sbb
repnz
or
or
lds
inc
inc
jb
ja
stos
inc
push
test
nop
nop
sub
ret
fwait
notl
jmp
xchg
xor
push
inc
lods
fcmovnu
movsl
jb
insb
dec
cwtl
mov
mov
out
cli
out
bound
ljmp
and
in
sbb
repnz
push
cld
movsl
jo
sbb
popa
jno
mov
inc
adc
mov
push
orl
inc
or
add
mov
and
and
jae
push
xchg
and
inc
sbb
jp
push
insb
shlb
fcomi
adc
inc
pop
les
push
mov
sbbl
inc
iret
in
sbb
add
add
xor
out
shll
rcrl
inc
pop
sub
les
add
popa
addr16
test
cmp
lcall
dec
movsl
cld
mov
xor
jbe
mov
clc
rolb
jp
inc
sahf
ja
adc
or
sbb
lahf
inc
mov
jge,pn
or
sti
stos
dec
enter
mov
push
fimuls
insl
iret
and
xchg
mov
xor
mov
pop
test
ds
pop
fdivs
sub
adc
ret
cmp
xlat
mov
sti
inc
ret
cmp
adc
pop
lahf
push
pop
jo
push
jns
enter
mov
pop
mov
aam
inc
repz
dec
push
or
push
in
push
ss
shl
dec
or
pop
pop
loopne
xor
xchg
push
popf
scas
sbb
xor
fstpt
enter
xchg
enter
inc
fwait
xor
mov
ffree
cmp
outsl
mov
pusha
dec
push
imul
outsb
push
outsl
lock
mov
mov
stos
fidivrs
add
pop
mov
jns
xchg
pop
mov
fidivs
pop
xchg
dec
inc
call
lods
mov
add
inc
adc
stos
add
jmp
icebp
inc
xchg
sbb
mov
mulb
xchg
popf
pop
push
or
add
or
lock
push
dec
iret
mov
hlt
ret
jbe
jns
in
into
adc
sub
cmp
and
lret
mov
cmp
stos
cwtl
cli
pop
xchg
adc
adc
xor
or
ret
cmpsl
jecxz
daa
xor
into
fistl
aaa
xchg
pop
push
or
or
lret
jp
je
xchg
mov
fwait
cli
scas
jmp
sub
xchg
scas
imul
jecxz
sub
xlat
push
or
vpsubsb
jle
out
orb
sbb
in
xchg
aam
mul
dec
sbb
ds
js
jp
push
unpcklps
ror
das
inc
pop
cmp
loop
mov
rcl
mov
aam
icebp
mov
mov
push
inc
pop
xchg
test
push
xchg
hlt
mov
adc
gs
lds
and
adc
bound
fcompl
js
mov
enter
adc
das
lret
stos
inc
fimuls
loope
xchg
push
sub
jne
mov
jbe
insl
or
fbld
test
jle
inc
pop
mov
mov
out
loop
xlat
orl
movb
aad
dec
mov
xchg
pop
test
leave
push
mov
daa
sbb
xor
out
push
mov
nop
es
jb
iret
cmp
mov
neg
sti
clc
cmp
push
sub
add
out
into
int3
cmp
stos
shl
in
inc
sbb
sbb
dec
jge
jns
xor
lds
push
lods
in
pop
jbe
mov
call
inc
add
aad
sti
loop
outsl
pop
add
cmp
mov
add
jp
push
mov
xor
cwtl
lcall
push
fcoms
and
xchg
rcll
fisttps
mov
clc
jno
mov
mov
and
andb
mov
stos
pop
jmp
jb
or
xchg
sbb
roll
add
roll
push
inc
mov
dec
ja
aam
pop
xchg
xchg
sahf
sbb
push
sbb
inc
cmpsb
incb
pop
lret
xor
into
repnz
sbb
roll
popl
jmp
bound
sahf
add
pop
sbb
ja
icebp
mov
aaa
lods
jae
loopne
add
call
and
pop
fsubrs
lea
std
sbb
leave
adc
xor
ds
push
out
fsts
sbb
jns
add
push
ret
rcl
scas
in
rorb
sbb
mov
xor
cli
mov
cmp
push
dec
inc
xchg
sbb
and
pop
xchg
xlat
loopne
ljmp
sub
rorl
pop
movsl
dec
les
inc
sar
cmpl
adc
cmpsb
jne
jecxz
dec
pushf
ret
fldt
repnz
cmc
and
push
popf
sti
sub
xchg
cmp
add
hlt
test
rorl
rcll
out
nop
cmp
lcall
pushf
mov
ret
jnp
insl
or
and
pop
ja
imul
ds
and
cmc
or
jle
xchg
adcb
rcrl
orb
push
popa
xor
cwtl
jmp
dec
add
sbb
into
xchg
mov
jnp
sti
mov
mov
cltd
or
lds
andb
inc
arpl
sub
mov
shll
push
cmp
lahf
push
in
sti
or
sahf
fs
sahf
iret
inc
aad
outsl
in
pop
cmp
push
test
pop
mov
insb
pusha
or
ja
mov
mov
jge
lret
push
fsts
std
add
jmp
in
ja
pop
hlt
xchg
xor
and
sbb
mov
mov
add
add
mov
mov
movsl
fdiv
or
lods
sbb
sbb
cmc
mov
fistpll
sub
lcall
in
mov
inc
std
pop
clc
in
dec
repz
mov
adc
cmp
jne
adc
mov
xor
addr16
outsb
js
pop
addl
push
mov
add
pop
repz
fcompl
jge
aam
and
loop
adc
or
adc
add
mov
adc
jnp
std
mov
out
cmp
mov
scas
mov
jp
cmp
loopne
sbb
mov
pop
pop
enter
sub
push
mov
fstpt
inc
leave
orb
push
adc
out
pushf
push
pop
insb
add
popf
inc
pop
xchg
prefetchwt1
or
or
data16
or
xor
mov
cmp
mov
cmc
fwait
sub
je
xor
push
ds
daa
cli
jg
pop
loopne
je
inc
mov
xor
insb
ljmp
xchg
out
or
fcmovnb
sbb
lahf
stc
sbb
dec
into
fmull
jmp
sub
mov
sub
sbb
mov
xor
movsl
mov
xchg
xor
xlat
outsb
and
mov
cli
xor
icebp
addr16
dec
push
xor
inc
lods
pop
dec
dec
xchg
xchg
ss
shll
sbbl
mov
inc
pop
push
nop
out
dec
gs
scas
scas
aas
mov
or
jl
dec
jo
in
lahf
jo
cmp
jne
add
adcb
mov
push
xlat
addr16
or
lock
cmpsb
sbb
push
inc
sbb
or
mov
pop
sbb
fsubrp
movsb
enter
pop
addr16
test
mov
ds
cmp
sbb
dec
xor
add
pop
les
and
stos
cmp
cmpb
cs
mov
repnz
dec
dec
mov
shlb
push
cmp
inc
mov
jmp
xchg
stos
shrl
jno
rcll
lods
sbb
mov
sbb
jb
push
insb
sub
adc
add
loopne
imul
and
xor
jb
aaa
sbb
mov
xor
imul
filds
xor
shl
and
imul
inc
sub
shrl
in
push
shrb
mov
add
sbb
push
cmp
xchg
sub
sbbb
scas
xor
inc
lahf
jle
ret
or
and
int
xor
mov
push
stos
outsl
push
scas
mov
imul
add
cwtl
mov
loop
outsl
mov
dec
repz
lds
int
fimull
mov
pop
sub
inc
icebp
cmc
call
js
jmp
adc
cmp
add
ficomps
repz
add
insl
mov
sub
movsb
ljmp
test
in
mov
xchg
or
int
xor
xor
pop
fbstp
dec
int3
cwtl
leave
and
sbbl
mov
adc
movsb
adc
mov
fldenv
mov
mov
jecxz
mov
shl
pop
int3
nop
sahf
add
out
mov
scas
pop
xchg
sub
das
mov
js
sbb
cmpsb
ficoms
aam
stos
int3
lret
sub
sbb
into
mov
and
loopne
add
inc
xchg
dec
addb
add
mov
jns
jmp
loope
xchg
insb
mov
xchg
in
pop
mov
and
bound
jo
ret
adcl
add
fisttps
popa
inc
pop
sub
inc
decb
mov
dec
dec
xor
push
mov
push
sbb
test
ja
loopne
adc
pop
je
adc
xor
daa
xor
jo
dec
ret
lcall
out
pop
add
in
test
add
jg
dec
and
cmp
pushf
mov
in
cld
push
cmc
and
incl
pop
push
repz
mov
stos
xchg
sbbb
shrb
push
dec
mov
cmpsl
mov
dec
xlat
adc
xchg
add
pushf
dec
mov
jnp
sbb
dec
pop
mov
mov
shll
shl
jbe
fnstenv
mov
mov
loop
xor
inc
jle
aad
mov
scas
or
add
jge
pop
mov
insb
lock
subb
lods
sub
and
shlb
adcb
popl
push
jle
sbb
jb
push
pop
adc
cmp
rcl
icebp
inc
push
fisttpll
cmp
cs
test
mov
ds
pop
enter
mov
mov
cmpsl
dec
fstpl
ret
mov
push
or
std
pop
mov
lret
enter
fwait
jge
jo
rolb
pop
xchg
add
pop
leave
loope
inc
jo
add
mov
subb
and
cmp
sar
or
push
push
xor
push
jno
es
movsb
inc
jns
cmpb
pushf
add
pop
xchg
cmp
pop
inc
scas
daa
jecxz
aaa
les
shrb
clc
adc
inc
or
mov
shlb
popf
xchg
or
lock
lahf
sbb
add
dec
iretw
call
jecxz
jae
add
lret
pushf
fldl
mov
jmp
mov
xchg
fisubrl
pop
or
cmc
imul
jecxz
addr16
pop
add
jbe
out
push
mov
push
in
pop
dec
add
nop
xchg
paddd
clc
and
xchg
dec
inc
xchg
fwait
out
jno
xor
mov
hlt
daa
movsb
cmc
int
mov
add
pusha
jecxz
xor
push
pop
push
cwtl
or
or
dec
xchg
mov
lea
cmp
dec
les
xchg
pusha
and
fsts
xchg
addr16
cmp
mov
push
jbe
xor
in
cmpsb
daa
sub
pop
lock
or
inc
mov
and
sub
or
mov
ss
pop
xchg
sub
outsb
pop
js
pop
push
outsb
pop
es
pop
and
sub
jecxz
add
or
ja
and
add
in
rcrb
filds
out
add
repz
insl
pop
stos
ror
xor
jnp
inc
lret
or
enter
xchg
stc
nop
cmc
inc
and
jbe
fists
pop
pop
sbb
push
jecxz
mov
test
int3
jge
in
and
mov
push
negb
das
cmp
xchg
add
and
lcall
inc
xor
icebp
or
aam
and
mov
repnz
xlat
xchg
xor
mov
insl
pop
jl
das
sub
push
push
xor
or
push
adc
movsl
push
adc
sti
mov
cmp
jbe
aam
or
mov
adc
jne
sbb
dec
push
iret
rcrb
fsubrl
xor
mov
out
movsl
aaa
aad
jle
lods
xor
lods
cmp
and
loope
aas
mov
popf
adc
in
or
xchg
sbb
icebp
push
shrl
cmc
inc
cmp
in
inc
sbb
push
fs
mov
push
hlt
popf
jecxz
std
dec
int3
adc
fistpl
movsl
jmp
ja
sarb
pop
js
daa
test
adc
cltd
sbb
bound
inc
jle
push
xor
shlb
xchg
mov
call
sti
jne
cmpsb
insb
ss
sti
or
push
std
xor
in
pop
mov
and
mov
dec
sbb
arpl
imul
psllw
stos
hlt
dec
icebp
sbbb
jge
out
and
mov
fwait
jp
inc
ss
ds
js
push
push
lret
mov
icebp
lods
xlat
fidivrs
push
movsl
cmp
aaa
cmp
test
and
rorl
fcmovbe
jno
or
adc
inc
add
aad
out
mov
inc
in
pushf
mov
mov
imul
push
xor
push
out
pop
roll
xchg
ja
je
lea
add
stc
inc
dec
std
icebp
setp
arpl
push
and
enter
popf
or
or
addr16
imul
adcb
cli
jl
jbe
add
outsl
loopne
inc
adc
or
inc
cmp
stc
mov
mov
or
and
xor
inc
lock
insl
sbb
lock
roll
aam
xor
jmp
pop
pop
sbbb
insl
inc
nop
lods
dec
push
or
mov
inc
or
pusha
xchg
or
int
xchg
mulb
les
ss
sahf
mov
imul
mov
ret
cwtl
dec
clc
adc
adc
cld
popf
loope
mov
es
sbb
int3
jb
je
sbb
das
mov
and
ljmp
in
sbb
out
adc
adc
xor
adc
add
lods
ja
inc
lock
in
sbb
shll
push
xor
push
cmp
test
lods
loope
pushf
and
and
mov
cmpsl
adc
ss
xchg
insl
adc
sbb
daa
mov
scas
lahf
shlb
out
je
outsl
mov
out
jae
icebp
in
cmpsl
cs
push
jne
test
movsb
push
inc
in
out
int3
jno
push
loope
inc
cld
lea
cltd
scas
enter
clc
insl
inc
rcrl
cs
int
add
nop
mov
xchg
dec
outsl
pop
sub
mov
inc
jne
push
cltd
dec
loopne
or
sbb
rcrb
xor
or
or
sahf
cmp
imul
push
scas
mov
jg
push
xchg
repnz
daa
bound
sahf
ljmp
repnz
xchg
push
cli
test
out
pop
in
mov
clc
fxch
pop
mov
ror
xor
cmp
xchg
lods
addb
sar
jo
orl
adc
ds
cwtl
popf
subb
lret
add
and
push
push
pop
fildl
add
dec
addr16
rolb
inc
js
int
shl
lods
push
or
fadds
adc
test
and
and
jg
adc
in
lcall
jmp
lods
dec
movsb
stos
mov
daa
add
cmp
jae
jne
mov
divb
add
test
cmp
xor
pop
mov
adc
jmp
imul
cmp
jmp
bound
pop
adc
sti
roll
xchg
imull
jno
push
hlt
lods
cmpsb
mov
pop
mov
ret
sbb
clc
lods
sbb
mov
mov
pop
rsqrtps
in
or
adc
nop
popf
aad
outsb
in
cmp
jae
mov
pop
jne
mov
dec
jle
jnp
orb
jge
push
push
push
pop
jbe
add
pop
aam
adc
cmc
pop
xor
mov
cmpsl
or
xlat
je
in
pop
jmp
cmp
xchg
insb
pop
lcall
or
sbb
dec
xor
test
shll
inc
pop
pusha
xlat
inc
and
add
repz
aas
or
adc
dec
inc
or
js
and
sub
out
pop
ds
mov
mov
sarl
enter
push
pop
jns
sbb
sbb
xor
dec
sub
pop
push
mov
pop
inc
add
out
jecxz
incb
xchg
add
xchg
jns
mov
mov
mov
push
mov
dec
mov
sbb
xchg
aaa
stos
cli
lret
mov
aad
movsl
movsl
mov
push
ss
aas
mov
popa
mov
inc
or
lcall
lcall
push
ss
orb
mov
data16
jg
mov
adc
dec
icebp
adc
mov
repnz
pop
dec
fucomp
fisubs
or
xchg
test
cmovbe
add
fstpl
xchg
pop
add
jp
icebp
aaa
xor
mov
cmpl
xor
loopne
dec
adcb
mov
sub
loop
inc
popa
nop
xlat
or
notb
stos
pop
ja
jns
push
jns
or
adc
and
repnz
rcr
mov
jns
cs
in
lds
mov
fdivrp
adc
or
repnz
stos
adc
loopne
jle
dec
fcoml
mov
mov
xorb
loopne
adc
popa
or
xchg
xchg
stos
andb
adc
jmp
xor
lcall
std
shlb
xchg
nop
jmp
jle
out
mov
mov
cli
arpl
imul
pop
mov
scas
frstor
jmp
adc
add
outsb
pop
mov
dec
dec
stos
and
test
mulb
leave
or
pop
jnp
jl
pop
and
adc
mov
outsb
shll
or
sbb
dec
repz
xlat
xor
sbb
and
negl
call
rcr
je
loop
mov
jae
in
cmpsl
lea
sbb
mov
add
pop
sbb
iret
inc
cmp
popf
jns
je
pusha
outsb
xor
mov
mov
fincstp
repz
fisubrs
sbbl
cltd
pop
xor
fcomp
pop
stc
or
leave
clc
filds
mov
pusha
mov
out
xchg
jge
ljmp
xchg
dec
and
insb
ss
lea
push
fiadds
fidivs
jge
je
aaa
push
push
divl
sbb
mov
lret
les
dec
jge
negb
rolb
sub
xchg
push
shrb
xchg
or
jnp
pop
xor
xchg
sbb
pusha
jbe
push
popa
dec
nop
jnp
test
test
in
aam
test
add
rol
mov
mov
jmp
lds
or
and
sbb
jmp
out
popa
mov
mov
pop
cmp
scas
xchg
adcl
pop
movb
int3
data16
incl
je
int3
xchg
repz
jns
pop
aad
cld
lods
in
cmp
mov
jo
lods
iret
push
mov
daa
arpl
xor
cmp
push
mov
mov
mov
pop
mov
pop
leave
inc
xchg
cs
out
jo
cmp
scas
fsubrs
sbb
jp
xlat
sbb
lahf
ret
imul
add
mov
call
ss
rol
xorb
inc
insl
fstpl
lret
fdiv
fmull
test
mov
into
xchg
sbb
arpl
push
inc
popa
jp
adc
enter
inc
ja
mov
fistl
test
js
jae
inc
fwait
push
sbb
push
das
dec
shr
out
loope
movl
add
sbb
in
mov
add
xor
xchg
xchg
sbb
inc
pop
imul
cwtl
scas
rolb
out
std
movl
icebp
test
mov
cs
insb
iret
mov
pop
pop
mov
popa
loopne
push
mov
fistpl
sbb
mov
std
add
loop
int
pop
jns
mov
fs
adc
cld
xor
sbb
mov
fwait
outsl
int3
xchg
test
lods
xchg
jb
mov
clc
dec
popl
sbb
xor
movsl
orb
fidivrl
mov
loopne
mov
div
and
scas
aaa
mov
adcb
adc
bound
jno
iret
imul
lret
or
or
push
inc
les
in
sub
outsb
std
mov
test
inc
dec
mov
jns,pt
cmp
addr16
mov
mov
sbb
shll
sti
inc
jno
mov
jno
xorl
inc
pop
add
sbb
mov
xor
push
sbbb
dec
push
adc
mov
adc
rcr
push
leave
or
xchg
xchg
faddl
mov
pop
sub
movsl
dec
and
xor
cmc
dec
xor
jmp
add
inc
push
int
testb
dec
repz
ds
into
push
mov
repnz
adc
jb
jbe
mov
stos
cld
sbb
mov
les
jnp
pushfw
sarb
outsb
das
es
les
ss
and
pop
adc
adcb
rol
sarl
imul
jbe
cmp
out
inc
xchg
push
pop
test
scas
jg
fcmovnb
mov
cmp
ret
adc
dec
adc
cli
aaa
xor
pop
mov
int3
sub
jmp
add
fs
jl
data16
ret
add
js
or
test
dec
int3
sub
xor
cli
aaa
pushf
movsl
addr16
and
loopne
test
int3
or
xor
dec
xor
fcom
dec
testb
or
lods
xchg
icebp
icebp
fdivr
adc
hlt
pop
rclb
mov
mov
inc
sub
xlat
jg
push
cwtl
out
and
shlb
lcall
mov
stc
cmp
jg
or
decb
pop
imul
adc
adc
jno
push
mov
add
popf
lret
cmp
imul
pushf
push
lds
scas
in
ret
hlt
jb
insl
loop
xchg
fldt
stc
push
ljmp
sbb
inc
cld
inc
xor
adc
push
inc
pop
xor
jbe
inc
aad
sti
or
sti
and
insb
sbb
pop
ficoms
and
mov
dec
mov
push
jmp
mov
mov
stos
call
pop
decb
sti
pop
pop
pop
xchg
mov
jb
pop
scas
js
call
pop
mov
sub
cmc
xchg
movsb
sbb
sbb
imul
and
mov
int3
add
mov
pop
and
rcl
mov
dec
adc
jmpw
adc
in
testb
or
add
repnz
adc
lcall
jg
out
outsb
mov
out
fcomi
lods
cmpsb
shl
test
roll
or
adc
mov
jae
rorb
pop
imul
in
loop
in
xlat
movsl
and
mov
jb
insl
popf
sbb
mov
cmp
icebp
mov
daa
es
and
addl
cmp
inc
mull
dec
dec
daa
jo
aaa
mov
cmpb
mov
or
insl
outsb
dec
jg
xchg
test
sub
clc
pop
cmpsb
out
push
leave
xor
ljmp
test
pop
jg
in
out
clc
pusha
push
cmp
ja
orb
call
mov
dec
lret
sbb
shrb
call
in
adc
dec
cwtl
xor
lahf
add
aaa
loope
xlat
mov
aam
or
and
jno
add
insl
jp
add
icebp
jle
popf
les
mov
or
mov
fcompl
das
xor
sub
mov
add
push
dec
push
scas
mov
clc
jbe
hlt
xor
lret
pusha
insb
mov
pop
test
hlt
addps
fsubs
out
fs
mov
add
mov
ljmp
cmpsl
rol
push
cmc
pop
je
push
mov
addr16
insb
ss
fs
test
fnstenv
loop
cmp
pop
pop
pop
test
push
pop
cld
xlat
nopl
add
jge
push
inc
inc
insb
fcoms
inc
lret
push
xor
pop
adc
mov
idivl
and
ja
adc
jb
inc
mov
in
pop
inc
or
int3
stos
inc
shr
stos
adc
addr16
leave
or
fcmovne
mov
jecxz
push
mov
addb
in
pop
ss
jmp
sbb
into
cmp
pop
js
dec
outsl
rcrb
push
push
mov
mov
jnp
std
or
mov
push
jl
iret
ljmp
test
jecxz
lahf
lahf
cmp
cmp
push
push
fwait
rcl
in
add
sbb
jne
js
fmull
std
cmp
rcrl
mov
leave
loope
push
addl
cmp
jnp
mov
mov
punpcklbw
ss
push
jl
adc
arpl
or
sbb
and
cwtl
arpl
sbb
fstpl
arpl
and
fildl
jle
cmpsb
std
test
es
mov
lahf
lret
lds
mov
inc
scas
ffreep
inc
pop
dec
xchg
mov
cmpsl
jne
seto
negl
out
icebp
repz
test
xchg
insl
sbb
mov
hlt
out
jo
dec
mull
outsb
outsl
or
jg
xor
jg
outsl
inc
mov
addr16
test
push
adc
ret
fisubl
mov
pop
mov
cmpsb
mov
mov
adc
jmp
cmpsb
inc
enterw
dec
mov
mov
shlb
cmp
cmp
jae
stos
inc
outsl
call
mov
cmc
jbe
pop
pop
pop
das
mov
mov
push
or
dec
sbb
cmp
cmc
fs
mov
fwait
loop
add
shrb
xchg
rcll
jp
pop
fdivs
pop
pusha
js
ja
fcomip
mov
add
xor
and
and
aad
xor
xor
inc
mov
mov
movsl
sbb
mov
scas
pop
xlat
test
ret
cmp
pop
mov
dec
dec
pop
xor
push
dec
jl
mov
mov
loope
popa
mov
push
sub
ds
js
insb
jge
sbb
imul
test
outsl
and
mov
outsb
mov
popf
sbb
inc
inc
fucom
adc
je
cmp
mov
pop
adc
inc
xor
into
mov
lret
cmpsb
fwait
ljmp
movb
add
shlb
lock
fwait
adc
icebp
popf
psllw
movsl
jmp
push
and
aaa
fists
sub
loope
mov
cmpsl
lods
inc
mov
adc
insb
lahf
add
push
nop
push
mov
cmp
mov
push
roll
insl
loopne
shrb
in
aas
jo
sub
add
or
push
jle
ret
push
dec
jge
fs
shrb
scas
push
xor
push
in
es
arpl
arpl
push
cmp
stos
mov
aam
out
mov
clc
ret
add
push
push
fst
int
xor
icebp
test
sbb
or
leave
jo
ret
pop
out
cmp
popa
pop
aas
out
jle
jp
fwait
xchg
inc
cli
sub
mov
inc
out
mov
push
lret
push
jecxz
cmp
in
addl
stos
outsl
inc
dec
push
cmp
pop
in
adc
loopne
mov
movsb
inc
mov
sub
xchg
sahf
jle
mov
xor
mov
mov
inc
daa
mov
outsl
cmovg
dec
and
inc
xchg
scas
sarb
inc
mov
jl
lea
les
lahf
ret
mov
icebp
and
mov
adc
stc
outsl
lds
inc
cmpsl
mov
sbb
adc
jo
cmp
push
pop
mov
bswap
scas
testb
jns
jle
scas
test
mov
xchg
stos
xor
cs
mov
lods
dec
inc
bound
loopne
and
icebp
std
pop
cld
or
clc
mov
rorb
insb
xor
imul
mov
and
leave
pop
mov
negl
ror
fs
bound
jmp
xorb
rorb
adc
divl
dec
pop
sahf
dec
xor
stos
ss
xlat
hlt
xchg
inc
push
loopne
fnsave
das
incb
adc
mov
add
cli
jl
loope
std
loopne
outsb
push
mov
aaa
and
xor
lea
je
mov
cmp
adc
mov
shrl
jge
and
es
mov
lds
jno
or
xor
jo
inc
jae
or
jns
stos
idivl
jl
inc
fiadds
bound
jno
aaa
mov
leave
push
cld
aas
repz
shlb
add
adc
xor
ss
cltd
mov
rcrb
pop
jbe
nop
out
scas
dec
mov
stos
cli
fcmovne
test
xchg
jns
xchg
mov
mov
push
push
aas
repz
data16
jp
lods
cld
ljmp
pop
and
pop
enter
jb
cs
mov
push
mov
lea
lods
mov
xchg
aaa
fadds
das
jb
sub
inc
mov
in
imul
and
jmp
xchg
fnstenv
arpl
rorl
inc
cwtl
lcall
and
lock
sub
sbb
push
clc
mov
mov
loopne
dec
xchg
mov
scas
loope
pop
int
addr16
mov
cmpsl
pop
lods
aam
aaa
fdiv
clc
loopne
pop
adc
ret
data16
mov
pop
push
bound
flds
lods
in
jecxz
sbb
xchg
dec
xchg
insb
mov
inc
int
data16
mov
fdivrl
sbb
cltd
sarb
fs
fsubs
sbb
xchg
movsl
lahf
imul
mov
push
andl
loop
sub
dec
pop
inc
in
sahf
pop
pushl
mov
add
adc
and
ret
or
push
jle
les
xor
ds
mov
fiaddl
data16
es
std
jne
lock
and
jp
repnz
push
mov
ret
cmc
dec
xor
xchg
les
mov
shll
push
in
mov
out
jne
push
pop
xchg
sub
push
fcmovu
cmp
cmp
mov
shr
dec
pop
add
std
ja
das
cmp
shll
nop
xor
pop
lods
into
jge
sub
and
jno
xchg
in
push
movsl
mov
inc
fcmovbe
mov
imul
add
negl
andl
jne
push
shr
clc
ret
add
add
repz
shlb
adc
xlat
inc
rcrl
mov
mov
stos
ljmp
shl
fmul
rcll
bound
cs
mov
jb
test
xchg
xor
push
xchg
add
xchg
inc
fildll
jmp
les
mov
mov
lea
mov
push
sarl
push
notb
or
sub
test
sub
sub
dec
and
ds
pusha
std
popf
sub
mov
loopne
adc
mov
outsl
pop
aaa
push
fisubs
and
enter
xor
out
sbb
inc
ret
cmpsl
cmp
fs
xorl
loop
das
ret
xchg
and
cmp
rol
sbb
or
clc
outsb
jg
jg
sbb
push
mov
faddl
aam
in
fadd
sub
in
pop
outsb
shr
sbb
mov
cmp
and
add
rcr
mov
mov
xchg
in
and
nop
mov
jbe
mov
xor
pop
daa
jne
cli
mov
iret
mov
fidivs
add
lods
into
insl
push
enter
mov
insb
loop
out
mov
test
xor
int3
adc
aad
mov
sbb
stc
aam
jge
or
inc
inc
rorl
je
cmp
shl
add
aam
pop
int3
adc
sbb
cmp
lds
out
jmp
jnp
add
das
std
je
push
lds
popa
or
mov
dec
daa
jmp
or
stos
js
sub
dec
dec
bnd
push
std
mov
loope
push
rorb
sahf
push
jne
jg
cmpsl
xchg
cmp
push
test
pop
jns
pop
jl
mov
fisttpl
cmp
adcb
dec
sub
notl
dec
push
shlb
jne
mov
dec
jne
and
dec
adc
pop
cmp
nop
clc
push
cmp
jo
mov
or
or
push
add
idivb
js
ror
movsl
sub
outsb
mov
inc
dec
cmc
add
mov
mov
dec
or
aas
cmp
stos
mov
lods
or
mov
outsb
and
or
inc
mov
scas
ret
add
xchg
dec
dec
sbb
cmp
mov
sub
adc
js
ret
adc
inc
and
xchg
push
outsb
pop
pop
add
fildll
and
imul
leave
test
mov
cmp
aad
push
sahf
push
fsubl
and
jg
shll
push
dec
sbb
nop
cmp
sti
sarb
adcb
jo
lret
aaa
cmp
icebp
pop
push
mov
xor
push
stos
lock
and
loop
loope
dec
mov
pop
and
repz
mov
ffree
mov
xor
cltd
dec
mov
lahf
xchg
xchg
mov
ret
jo
loope
dec
iret
adc
jns
xchg
out
add
mov
xchg
repz
adc
fdivrl
lock
fmull
mov
aad
fadds
sbb
fs
mov
fnstsw
xor
rorb
or
xchg
bound
dec
add
mov
mov
cwtl
mov
enter
add
lahf
roll
push
adc
lea
inc
or
dec
arpl
movsl
aam
pop
cmp
decb
xor
mov
adc
mov
push
and
loope
jne
adc
nop
cmp
adc
xor
popa
pop
or
inc
lods
push
sub
lcall
sbb
es
push
iret
push
out
push
arpl
lock
jne
add
mov
cmpsb
ja
jge
dec
stc
or
daa
jl
and
loopne
jl
mov
filds
stos
mov
xor
mov
add
pop
mulb
loope
or
out
inc
jo
xor
jl
jmp
das
lods
notl
adc
xchg
mov
nop
andb
lret
mov
loopne
std
test
mov
or
mov
ror
popa
mov
xchg
adcb
mov
cmp
inc
pop
jbe
inc
xlat
pushf
cwtl
sbb
sub
shl
arpl
fcoml
push
add
sbb
mov
mov
bound
jnp
roll
pusha
lock
jb
adc
mov
les
add
scas
std
call
jl
mov
mov
clc
icebp
pushl
and
mov
popf
sub
dec
ljmp
mov
add
mov
pusha
and
ljmp
ja
mov
mov
add
pop
mov
test
aad
or
mov
mov
inc
inc
push
pop
sti
es
dec
fildl
and
jmp
jno
mov
into
jb,pn
cmpl
cmpsb
cmp
fidivl
leave
iret
inc
mov
pop
rcl
mov
clc
xchg
aaa
ds
icebp
xchg
sti
sbb
push
not
add
aas
fidivrl
or
push
int3
movsl
mov
hlt
aas
push
or
cmpsb
cmc
lods
cmp
push
js
mov
dec
pop
call
sahf
pushf
ret
dec
xor
jne
fists
mov
jle
subl
in
dec
cmp
js
mov
cs
and
xor
psrld
sbb
rol
push
decl
sahf
mov
js
popf
gs
out
bound
pop
jo
push
sbb
add
fcoml
or
bound
fucom
pop
std
or
jecxz
push
xor
push
pop
and
cwtl
or
stos
or
jecxz
lret
into
add
les
mov
leave
test
xchg
test
xor
fdiv
sbb
inc
inc
pop
push
js
cmpsl
xor
das
lds
adc
sbb
aad
enter
sbb
clc
hlt
stos
jle
pop
sub
fstpl
scas
add
notb
pop
scas
jle
sbb
sub
mov
arpl
xchg
fs
mov
aad
or
test
pop
push
jne
xor
adc
add
idivb
pop
jno
sub
jmp
andb
sub
cli
fistpl
sub
loop
adc
rclb
inc
addl
imull
pop
out
insl
adc
jle
dec
jmp
cmpsb
mov
sbb
inc
repz
push
add
mov
lods
inc
roll
repz
and
cmpsb
mov
fs
lock
cmp
inc
aam
dec
fistpl
jecxz
inc
push
jl
dec
mov
pop
inc
or
jae
ja
arpl
test
xor
sub
dec
mov
in
jmp
cmp
mov
stos
test
fadds
xchg
jle
arpl
in
sarb
lds
adc
in
push
jecxz
pop
in
arpl
mov
xchg
mov
or
sub
cmc
fildl
out
pusha
mov
das
loop
aaa
xchg
fbstp
jno
outsl
mov
cli
dec
shlb
lds
cmp
add
sbb
pusha
dec
and
and
ret
cmp
inc
sub
adc
ret
jbe
lods
add
inc
adc
test
or
loope
loop
test
das
add
ret
test
and
jbe
test
cmc
call
add
repnz
inc
rolb
mov
iret
enter
push
in
cmpsl
gs
shll
pop
mov
xchg
mov
fstpl
insb
mov
and
mov
inc
and
addb
stos
mov
mov
dec
pop
mov
ret
ret
out
inc
lock
jl
cmpsl
cmp
cli
fbld
enter
fnstenv
push
shl
pop
jne
and
js
xchg
sbb
das
cs
add
jno
pop
mov
nop
dec
jg
addl
int3
cltd
mov
rorl
cld
push
fstl
inc
les
repz
cmp
mov
adcl
push
or
jge
outsl
jg
push
jae
inc
pop
shl
movsl
out
lock
pop
call
clc
push
iret
andb
dec
dec
push
je
and
ret
jae
shrb
push
ja
dec
xor
jecxz
adc
mov
or
pusha
push
xor
push
xorl
or
fadds
out
jecxz
mov
fneni(8087
push
ljmp
pop
xor
sub
imul
add
ret
sbb
adc
insb
sbb
pop
pushf
out
cmp
add
inc
and
scas
ret
test
jl
and
ffreep
mov
loop
dec
and
pop
xor
pop
lock
add
cmp
mov
mov
pop
mov
or
cltd
dec
pop
imul
rorl
movsb
inc
lea
je
call
and
fiadds
dec
outsb
ret
jbe
push
pop
ret
fs
ja
icebp
out
test
inc
inc
std
push
dec
and
cmp
cmpsb
pop
ret
adc
mov
out
push
mov
pop
push
mov
outsl
in
xchg
insl
in
cs
ffree
fnsave
inc
mov
xchg
mov
gs
or
mov
push
xchg
scas
arpl
add
test
jle
or
mov
cmp
inc
mov
sarb
out
xchg
idivl
ret
incl
adc
lods
mov
addr16
iret
mov
test
pop
push
test
lods
lods
cmc
lea
cmp
in
cld
mov
mov
imul
movsl
and
add
mov
push
jmp
or
cmp
push
out
push
jle
shll
lret
popa
out
adc
push
add
push
xchg
mov
mov
inc
xorl
clc
or
cmpsb
icebp
pop
les
cld
daa
mov
xorb
in
dec
push
daa
cli
sbb
das
adc
mov
and
outsl
dec
sbb
fidivs
xchg
push
idivb
sbb
loope
icebp
fildl
and
fcmovnb
push
pushl
lea
setg
and
frstor
push
dec
sub
hlt
dec
hlt
mov
movsb
sub
shll
lea
daa
cli
outsl
xchg
mov
pop
xor
imul
mov
jle
jp
xchg
lret
shlb
lcall
scas
inc
outsb
shlb
add
shrl
lods
xorl
scas
jp
or
or
cmp
mov
cmp
mulb
addr16
mov
jle
adc
xchg
or
and
pop
mov
rolb
les
pop
or
call
lahf
cwtl
iret
pusha
adc
jl
sub
out
or
test
mov
icebp
out
ja
js
inc
dec
mov
les
orb
jae
mov
xchg
sub
cmpsb
cmp
add
and
iret
mov
fidivl
sub
push
lret
mov
push
mov
nop
pop
fists
addr16
and
aaa
outsb
iret
std
sbb
clc
rclb
call
xor
jb
das
insb
sbb
cmp
cmp
fdivr
mov
inc
adc
sahf
adc
test
movsb
mov
cmp
inc
fsts
shlb
mov
xor
aam
pop
aam
aam
inc
pop
push
xorb
dec
ret
cmp
imul
test
sahf
mov
lret
cwtl
mov
test
lock
adc
lcall
movsl
jb
adc
add
out
cmp
je
loopne
pop
cmp
mov
push
fisubl
in
jl
stos
ds
sbb
cmp
dec
lea
out
sbb
jp
loope
and
push
pop
mov
lods
sub
push
or
test
cmp
pop
or
cmp
rcll
pop
scas
test
pop
xor
push
std
or
dec
loope
pop
sub
mov
cmp
push
xor
addr16
mov
movsb
mov
sub
xor
jl
add
popf
push
xlat
jmp
mov
imul
test
jge
cltd
stos
sub
pop
sub
ds
and
mov
ret
ret
bnd
ja
daa
adc
outsl
cwtl
jle
hlt
outsb
lds
add
xchg
push
inc
adc
lods
xchg
and
sar
in
sbb
iret
int
cli
repnz
add
movsb
jg
or
jg
int3
xchg
and
add
fistpll
cwtl
push
or
fs
mov
mov
ret
ret
inc
jno
xchg
inc
lret
inc
mov
or
mov
sahf
mov
inc
das
jo
pop
mov
dec
imul
icebp
cltd
iret
lahf
lods
xchg
insb
or
outsl
cwtl
stos
or
adc
dec
add
mov
or
xchg
fs
lret
add
jbe
loop
fwait
ss
sub
shl
cmp
aam
fs
xor
sub
jnp
repnz
imul
out
xchg
jg
xchg
stos
fsubl
mov
popa
and
or
inc
xchg
cmp
jge
das
xor
movsb
ficoml
outsb
mov
daa
fmuls
push
dec
cmp
mov
adc
jns
lea
jno
roll
adc
push
daa
rol
and
inc
inc
ret
fldt
in
pusha
xlat
outsb
sub
mov
mov
outsb
in
pop
icebp
push
jns
int3
adc
cmc
sbb
daa
incl
fdivr
cmpsb
mov
adc
sbb
adc
push
jmp
add
pop
pusha
mov
mov
mov
shl
addb
adc
pop
ret
xor
fadd
sbb
push
daa
out
shll
lock
lcall
fcmovnbe
addl
inc
jmp
cmc
mov
ret
or
inc
push
mov
addr16
nop
movsb
mov
stos
xchg
jbe
test
xor
push
test
aam
sbbb
ret
lahf
sbb
ja
dec
pop
roll
and
push
cs
arpl
push
cmpsb
test
dec
xor
test
jmp
test
cs
jle
add
adc
pop
sti
ja
ja
dec
jp
and
fmull
sbb
cmp
push
fwait
and
aad
mov
in
pop
fisubl
ja
cmpsb
sub
dec
dec
fidivrl
popa
mov
rorb
xchg
xor
adc
mov
test
testb
cmp
adc
mov
daa
mov
and
mov
xchg
shrl
movsb
push
scas
sbb
cmp
js
movsl
jae
sbb
xor
inc
fdivr
mov
xor
sbb
push
fistl
mov
stos
movsl
pusha
cli
ret
mov
rol
jl
cmp
push
fimuls
or
inc
cmp
jge
insl
fdivrl
push
or
mov
mov
insb
std
outsl
lds
in
pop
push
rorl
daa
and
push
into
stc
pushf
mov
mov
push
mov
pcmpgtw
cwtl
lds
adc
inc
dec
das
shlb
xor
mov
dec
shrl
rcl
aad
jnp
xorb
jl
outsb
aaa
jno
in
pop
xor
mov
les
mov
adc
call
call
xor
icebp
neg
dec
push
jecxz
adc
xor
inc
mov
orb
dec
insb
pushf
inc
mov
in
fistps
into
fsubrl
xor
mov
sbb
adc
inc
jl
mov
and
enter
loope
rcll
aaa
sbb
cmp
dec
fildll
push
ret
dec
jnp
outsb
push
sbb
in
pop
jl
push
add
hlt
pop
pop
clc
lds
leave
and
dec
and
ret
add
lcall
add
cli
adc
push
ret
imul
addr16
pop
icebp
orl
cld
int3
loopne
ret
nop
inc
sbb
pushf
and
loope
add
adc
inc
mov
lods
add
sub
out
mull
cmp
dec
inc
jmp
or
sahf
sbb
fcmovu
loope
or
pop
in
mov
loope
push
mov
mov
mov
add
xor
out
mov
movsl
clc
scas
in
movhps
pusha
in
fstpl
mov
es
es
and
gs
sub
flds
pushf
sar
fnsave
jge
mov
fcomip
ds
xchg
lahf
sarl
jb
sbb
push
mov
or
faddl
add
sbb
test
enter
pop
punpckhdq
shl
pusha
icebp
sub
push
gs
and
and
dec
sub
jne
pop
xchg
sub
in
jle
rolb
mov
test
out
cli
lds
outsl
popf
mov
arpl
insl
cmp
decl
xor
xor
lock
sti
loope
push
mov
mov
add
adc
push
sbbl
inc
imul
hlt
cltd
mov
xchg
sub
xchg
mov
mov
daa
jne
inc
popa
pop
inc
xchg
js
mov
xor
inc
mov
jne
insb
mov
ds
xchg
sub
adc
jae
push
xchg
or
fstpt
push
sub
sbb
xchg
movsl
js
inc
jecxz
add
repnz
jmp
sub
pop
test
and
add
ja
into
mov
addb
jecxz
add
mov
xchg
jecxz
cmp
xor
mov
loopne
jne
pop
ljmp
cld
out
and
gs
jbe
mov
in
shlb
cs
call
arpl
jo
imul
fildll
adc
popa
mov
les
sbb
incb
ss
pop
and
test
lahf
roll
xor
scas
mov
lea
test
movsb
in
lret
jmp
lahf
lock
push
mov
dec
mov
xchg
adc
push
fdivr
pop
push
pushl
rorl
aaa
fs
loop
sbbl
and
aam
fsubr
js
es
adc
repz
cld
stos
jg
adc
dec
lcall
pop
and
jo
std
icebp
je
bound
dec
stc
mov
fldt
mov
repnz
sub
je
rolb
adc
into
negl
lret
mov
movsb
inc
xchg
jno
sbb
push
fstpl
mov
sbb
adc
xchg
xorb
ret
dec
adc
std
cmpsl
ljmp
in
sbb
jmp
loopne
stos
or
mov
pop
insb
outsl
xor
loopne
aam
mov
je
test
sub
cmpsl
sub
in
sbb
mov
cwtl
mov
pop
or
pushf
and
or
mov
xor
fisubrl
mov
sub
add
stos
add
neg
pop
shr
test
decl
cs
mov
sub
clc
fistpll
sbb
fstpl
inc
sti
inc
pop
jae
lods
add
in
bsf
fmuls
add
sbb
test
and
clc
push
mov
and
je
xor
into
push
mov
mov
in
and
nop
and
add
push
cmp
mov
cmp
xor
dec
mov
ret
cmp
mov
je
out
push
out
push
leave
mov
mov
fists
push
sub
into
cmp
je
test
sub
outsl
mov
sarl
xor
aad
popa
mov
test
mov
mov
jbe
cwtl
sbb
scas
outsb
mov
lods
xchg
sub
lods
push
js
das
cmp
dec
in
xchg
xor
jge
mov
add
or
es
mov
pop
inc
add
ret
mov
add
cmpsl
add
outsb
cltd
subb
stos
es
inc
scas
push
popf
jns
insb
adc
xor
fwait
adc
sub
mov
int3
movsb
xor
pop
push
fisttpl
sbb
andb
dec
repnz
mov
push
aad
addr16
in
push
pop
lahf
cld
es
rorl
aad
clc
sub
inc
xor
inc
add
xor
xchg
push
nop
fnsave
xchg
outsl
push
push
lods
push
jnp
ret
out
mov
ficoml
das
rcll
push
icebp
test
inc
imul
sub
ret
add
xor
arpl
cltd
stos
inc
int
cmpsl
mov
adc
push
add
xchg
into
sbbl
push
aad
imul
imul
mov
and
push
je
loopne
and
cli
aas
add
negb
jg
xchg
mov
jb
pop
xrelease
icebp
ljmp
xchg
pxor
clc
idiv
in
mov
and
pop
outsb
psllw
shll
cmp
dec
mov
pop
push
clc
cmp
cmp
jb,pt
and
inc
in
ret
js
mov
pop
jle
add
sar
fadd
shll
pop
repnz
jo
mov
ds
jmp
repnz
iret
mov
pop
pop
xor
or
push
scas
pop
mov
mov
xlat
fdivr
jnp
mov
les
push
lret
pop
jno
mov
loopne
dec
mov
push
push
cmpsl
decb
add
aaa
ss
lods
add
pop
xor
ja
xor
sbb
fcomps
and
push
jmp
cmp
jle
pop
mov
and
jo
inc
int
ss
jne
add
loop
jmp
mov
adc
sub
cld
push
pop
insl
adc
mov
inc
sbb
arpl
adc
in
insl
lcall
insb
and
push
sub
or
lds
mov
fisubs
sbb
sbb
xor
je
int3
xor
icebp
jne
mov
mov
push
imul
mov
adc
mov
mov
loopne
outsl
insb
mov
addr16
orb
test
not
flds
ja
imul
adc
hlt
xchg
or
aad
inc
add
dec
das
mov
jb
or
pop
jo
ljmp
sbb
sbb
cld
ja
loop
and
cltd
dec
sahf
adc
push
mov
xor
test
jns
cwtl
cmpsl
cmc
mov
cmp
dec
jo
adcb
adc
pop
clc
and
xchg
lret
add
adc
js
stc
push
lock
mov
lcall
mov
nop
decb
mov
mov
inc
lea
mov
push
leave
push
xchg
loopne
aam
stc
push
or
add
xor
add
and
adc
outsl
jge
pop
sub
sbb
mov
fwait
sub
dec
xor
sub
pop
gs
outsb
jecxz
daa
xor
jl
cmp
push
mov
mov
loop
les
pop
popf
sti
int
mov
pop
movsl
xorb
jns
or
pop
dec
insl
adcb
inc
or
xor
decb
sbb
push
or
push
in
std
cmovbe
add
adc
push
jo
sbb
test
in
stos
loopne
mov
out
jns
jl
and
push
mov
andb
fsubs
jg
pop
lret
mov
int
push
xchg
lods
sbb
push
pop
push
inc
cmpl
adc
in
aaa
sub
or
lcall
xchg
push
cmc
jae
pop
sbb
push
and
jmp
mov
shl
notb
add
bound
add
sahf
lds
cmpsb
mov
out
or
cltd
mov
loopne
cld
testb
andb
jecxz
xor
mul
xchg
popa
sbb
or
push
push
scas
sbb
dec
xlat
and
dec
movsb
sbb
loope
inc
mov
xchg
push
adc
shlb
in
pop
adc
daa
je
xchg
out
mov
fsubrp
iret
cmc
insb
xor
jecxz
shll
pop
cwtl
jo
add
out
inc
mov
pop
fcoms
jl
orb
hlt
mov
hlt
add
mov
stos
inc
cwtl
xchg
xor
ds
fimull
bound
pop
jmp
les
clc
clc
gs
clc
push
sbb
clc
and
fisubs
stos
cmpsb
mov
and
adc
out
loopne
inc
rcr
xor
pop
dec
in
mov
mov
mov
cmp
xchg
mov
je
xor
jno
bound
pop
mov
mov
scas
decl
push
xor
pop
sbb
push
icebp
test
mov
in
push
cmpsb
push
and
rcrb
sub
mov
sbb
inc
jo
jmp
xor
push
push
fdivrs
scas
mov
lock
cmp
mov
pop
add
push
cwtl
push
in
loope
xchg
add
mov
ja
mov
repnz
loope
sbb
in
push
inc
xchg
jnp
sbb
mov
mov
inc
sbb
shlb
dec
add
fdivrl
or
dec
lds
int3
test
mov
movsl
jecxz
or
cli
enter
push
jge
mov
dec
or
mov
inc
add
xchg
loopne
lods
decl
mov
inc
loop
add
aam
icebp
mov
sbb
ss
and
arpl
push
cli
mov
jge
xor
xor
dec
cmp
cmp
add
adc
cli
scas
xlat
nop
mov
mov
mov
add
sbb
sub
movups
scas
scas
xor
loopne
outsl
clc
das
inc
in
dec
clc
fs
enter
lods
pop
mov
cmp
add
shrl
mov
jle
mov
mov
insb
xchg
cmp
test
pushf
push
nop
add
cmpsb
std
imul
dec
popf
insb
scas
push
xchg
mov
movsb
inc
mov
mov
add
iret
xor
or
jecxz
iret
clc
inc
sbb
jne
jmp
adc
dec
sub
or
jge
xor
or
adc
in
lahf
movsl
outsl
filds
out
xchg
jecxz
sub
mov
mov
clc
shrb
mov
iret
xchg
fnsave
or
mov
adc
repz
or
jecxz
pop
jo
or
push
dec
xchg
dec
cmp
mov
roll
jbe
adc
jl
dec
or
pop
rclb
dec
xor
ret
or
cmc
scas
ret
mov
cwtl
cmp
add
pop
pusha
mov
xchg
fldt
int3
adc
decl
addr16
and
xor
add
mov
les
hlt
ret
xor
shrb
lock
enter
lret
add
dec
mov
in
imul
sub
or
lahf
push
inc
sub
adc
sub
pop
lds
xchg
dec
cmp
scas
fdiv
cmp
js
push
and
repz
test
and
mov
xchg
cmpsl
stos
cwtl
pusha
cmp
xchg
andb
push
mov
std
fucomp
loop
cmp
fwait
sahf
adc
jb
int3
ffreep
mov
mov
adc
adc
aaa
inc
and
into
loop
sub
xlat
xor
icebp
add
out
fnsave
movsb
fldln2
push
jnp
sbb
mov
dec
fstpt
fstpl
push
push
add
mov
mov
icebp
nopl
xchg
fsubl
incb
es
fdivl
sub
mov
adc
data16
jne
movb
aas
add
sub
mov
fmuls
or
enter
rcrb
xor
jg
iret
push
lds
fisttpl
leave
pop
add
jno
ja
fs
ret
outsb
call
xchg
imul
hlt
xchg
jp
pushf
lea
inc
mov
and
fistl
clc
or
mov
outsb
cmp
test
sbb
ficoms
mov
stos
jecxz
loopne
int
push
adc
insb
loopne
sub
test
sbb
adc
adc
adc
out
push
iret
shlb
sbb
in
scas
and
addr16
or
adc
adc
mov
lret
stos
lds
and
rolb
rclb
jl
sub
ret
rorb
andl
js
ja
push
cs
mov
lock
sbb
mov
dec
dec
jmp
sub
adc
mov
inc
adc
push
loop
xor
xchg
and
lahf
and
in
lods
pop
cli
sbb
pop
add
push
jle
shr
out
add
cs
inc
xchg
test
lret
test
clc
xchg
push
pop
imul
pop
jg
jge
outsb
filds
ja
push
es
aad
mov
sub
test
lret
out
inc
roll
inc
lds
cwtl
adc
or
cs
repz
imul
sub
rcr
mov
xor
dec
sbb
pop
or
test
mov
aad
push
sarl
insb
sub
imul
sbbb
addb
ds
mov
mov
lds
mov
vaddsubps
push
hlt
insb
stc
arpl
outsb
cld
sub
adc
or
mov
les
xor
lock
cli
xchg
adc
movlhps
push
push
cwtl
dec
fs
sbb
mov
pop
into
inc
das
jl
pmaddwd
sub
shlb
sub
xor
fstpl
lods
cmpsb
add
es
mov
xchg
fiadds
jo
fldt
aaa
push
in
sahf
push
mov
divl
fucomip
and
outsl
pushf
cs
outsb
dec
adc
inc
add
push
add
leave
xchg
rorb
pop
push
fistpll
out
adc
jo
sub
push
cld
mov
jge
xchg
pop
inc
or
cmc
push
dec
xchg
lret
pusha
jo
jp
and
cmc
aaa
push
test
fisttps
int
push
push
shl
sbb
or
mov
jge
inc
mov
and
iret
sbb
pushf
xchg
push
test
lock
inc
add
jl
mov
inc
test
nop
pop
sbb
js
rcrl
mov
cmc
das
push
movsl
bound
int3
inc
daa
test
sbb
jne
cmp
bound
sbb
in
mov
adc
inc
bound
loopne
loopne
push
sbb
popf
imul
pop
xchg
out
mov
add
mov
stos
mov
mov
roll
push
call
out
and
cmpsb
push
xchg
faddl
lcall
xchg
fildl
out
pop
sar
and
movsl
leave
or
aam
mov
jmp
inc
mov
in
insl
repz
adc
sbb
lret
xchg
test
outsl
pop
sbb
mov
nop
cmc
jle
adc
dec
mov
xor
cltd
add
push
push
or
roll
in
xor
push
sbb
movsb
pop
mov
jge
add
sahf
adc
xchg
dec
or
jae
aas
jno
out
cmpsl
bound
pop
or
sub
lea
outsb
ret
xchg
and
push
xor
jp
in
sub
sar
fdivr
mov
out
mov
fwait
mov
push
call
outsl
jl
and
hlt
test
inc
sub
mov
jns
ret
scas
pop
ss
dec
jns
fimuls
ret
movsl
mov
jne
jbe
jg
sub
decl
loop
mov
stos
test
mov
push
sub
fsubrs
push
mov
mov
push
pop
cmpl
pushl
jg
loop
push
mov
sub
mov
mov
mov
jge
push
inc
jnp
movsl
mov
dec
insl
sbb
jg
jge
in
or
push
jns
xchg
aad
adc
icebp
jg
adc
addr16
stos
popa
out
inc
jo
arpl
test
lods
shlb
jno
jmp
push
xchg
cli
xchg
push
xor
pop
aaa
adc
and
icebp
in
inc
andb
adc
pop
cmp
inc
inc
addl
sbb
fildll
push
mov
mov
and
jl
cld
ret
xchg
xchg
dec
ret
cmp
ret
dec
lcall
stos
pop
int3
inc
sbb
mov
fildll
test
mov
ds
pop
and
cmpsl
imul
mov
popa
mov
inc
xor
mov
repnz
stos
and
pop
decl
xchg
and
mov
jbe
cmp
fidivs
orl
jle
repz
sbb
adc
pop
aam
sarb
lea
xor
push
push
and
lods
or
push
in
jb
xor
lret
jno
xchg
ret
xchg
ja
jge
push
roll
fldcw
and
or
jg
clc
mov
pushf
int
pop
push
jb
mov
dec
js
repnz
mov
mov
adc
inc
cld
sbb
or
movb
adc
mov
enter
mov
push
insb
loope
lea
inc
sarl
mov
insl
dec
enter
cli
push
mov
call
insl
xchg
rcrl
push
lods
cs
mov
pusha
jecxz
cmp
shlb
decl
not
inc
pop
inc
xchg
into
and
sbb
fcomps
adc
roll
popf
sub
sub
mov
ljmp
xor
adc
jl
mov
aam
rcr
sbb
das
cmpsl
sbb
push
cmp
mov
cmp
lock
arpl
mov
mov
xor
js
mov
adc
stc
jmp
and
imull
cmc
icebp
push
bound
dec
mov
mov
pop
xorl
dec
in
lcall
sub
imul
in
adc
jo
aam
dec
pop
addr16
sbb
call
scas
stos
jp
fistpl
inc
lcall
clc
arpl
or
push
xor
shll
cs
in
cmp
arpl
add
dec
subl
shl
fdivrs
add
mov
data16
insl
and
outsl
sbb
or
insl
inc
test
enter
add
lds
add
lods
mov
and
sbb
mov
icebp
test
nop
jo
cmp
adc
pop
les
js
insb
cmp
mov
adc
negb
gs
adc
rcll
mov
mov
push
sbb
sbb
sub
push
loopne
mov
push
and
inc
mov
movsb
cmp
mov
adc
xchg
dec
mov
imul
js
sbb
mov
lahf
fcomps
imul
xor
dec
cmc
pop
xchg
js
push
mov
pop
dec
mov
jo
mov
pop
cmp
int3
ss
fimull
xor
pop
push
sub
sub
jno
test
jns
in
xchg
lods
push
out
cmp
and
push
es
mov
fistps
testl
in
xor
outsb
jg
bound
push
ret
sti
xor
movsl
mov
push
push
xlat
xor
out
ret
dec
test
mov
fdivrs
sbb
repz
push
les
out
clc
or
or
rcl
mov
sbbl
mov
sbb
lods
and
mov
test
iret
add
aad
and
call
cmp
sub
xor
add
or
pop
imul
xchg
into
jmp
test
int
fs
movsl
cli
or
mov
mov
and
or
subl
and
bound
stc
es
jle
lcall
dec
outsl
adc
jmp
or
push
jnp
mov
xchg
jo
mov
inc
cld
shll
mov
add
mov
mov
ret
push
and
inc
popf
test
xchg
ljmp
and
out
xchg
hlt
push
xchg
hlt
in
mov
or
and
fsubrp
in
daa
fisttpl
adc
lcall
mov
cmp
mov
and
xor
incl
testb
or
push
rcrl
call
cmp
cmpb
enter
add
ss
inc
mov
or
and
push
test
mov
sbb
inc
mov
mov
or
ja
outsb
push
shll
pop
pusha
or
push
and
push
xchg
or
negb
rorb
mov
fisttps
frstor
hlt
cld
push
test
xor
inc
xor
imul
cltd
and
leave
jb
jg
or
sbb
test
jecxz
pop
adc
fimuls
and
or
popa
cld
pop
pop
clc
out
jo
lods
dec
sbb
iret
xchg
in
cli
sub
das
lock
or
fwait
xor
int3
loopne
pusha
stos
mov
cmp
loope
mov
aaa
pop
mov
and
push
popa
stc
push
adc
pop
ret
xchg
addb
sub
loop
jl
push
inc
enter
in
mov
lock
push
dec
inc
dec
push
movsl
stos
cs
inc
lahf
and
adc
dec
fwait
mov
cltd
cmpsb
inc
cmp
mov
ret
outsb
sti
fiaddl
stos
repnz
mov
aaa
and
fs
pop
iret
std
and
popf
adc
jo
aaa
pop
xchg
mov
or
das
jge
fiadds
loop
mov
and
iret
shrl
add
test
adc
leave
daa
loop
mov
fdivr
and
outsl
mov
icebp
fwait
inc
mov
cwtl
sbbb
add
pop
rcll
push
inc
je
add
push
cmc
lea
fistpl
lods
loope
push
jle
mov
add
mov
mov
aaa
mov
jg
jo
scas
jmp
sbbb
arpl
or
cli
jg
add
insb
pop
push
mov
sub
insl
add
lods
xchg
movsb
xor
test
cmpsl
rolb
clc
aad
incl
pop
jmp
xchg
push
jge
push
pushf
mov
cmp
pop
sub
std
iret
jno
jno
stos
mov
adc
jmp
je
mov
sbb
cmpsb
ljmp
push
xchg
ret
jle
loope
push
mov
inc
jae
or
arpl
cli
jg
imul
cmp
and
fnstcw
jne
jo
out
dec
mov
push
pop
cs
sbb
pushf
or
and
mov
cli
cld
mov
jo
push
mov
orb
mov
icebp
sub
add
and
sbb
add
dec
cld
xchg
outsb
or
movsb
mov
shl
jge
arpl
inc
in
clc
pop
jecxz
stos
adc
imul
cmp
inc
enter
call
mov
add
out
out
daa
xor
xchg
outsb
ja
sub
mov
xor
push
dec
sbb
movsb
jmp
fs
lahf
scas
mov
rolb
cld
rorl
cld
add
cmp
aam
clc
or
outsl
aad
sbb
xor
add
add
lock
inc
adc
mull
add
adc
xchg
jbe
in
movsb
pop
out
imul
icebp
push
inc
inc
fildll
sub
into
fcom
insl
sub
sbb
in
jecxz
fists
sbb
jge
dec
sub
lret
pop
or
std
pop
outsl
jns
mov
ret
orb
hlt
fistl
jnp
xchg
xchg
or
pause
push
mov
test
je
out
and
clc
outsl
push
xchg
sbb
enter
aam
add
stc
pop
jnp
lcall
pop
sub
fisttpl
mov
out
outsb
call
out
mov
bound
pop
inc
xchg
jns
pop
call
std
in
arpl
movsl
insl
xor
push
insl
mov
mov
jl
outsb
push
repnz
push
inc
fucomp
fcoms
xchg
loopne
sub
or
fidivl
movl
dec
xor
or
jns
dec
sbb
mov
mov
cs
mov
mov
test
xchg
pushf
and
out
jno
icebp
lret
or
sbb
test
mov
fsub
out
or
push
jl
pop
and
jle
inc
loope
outsl
testb
paddusb
repz
mov
rorb
fcmovbe
cmpsb
pusha
add
leave
lock
mov
inc
push
mov
test
into
mov
xlat
sub
push
clc
push
fmull
fwait
pop
andl
xchg
xchg
ficoms
sbb
xchg
shrl
sub
ret
mov
cltd
mov
mov
dec
add
inc
pop
ja
mov
int3
jecxz
icebp
ret
mov
mov
jg
fcoml
jmp
inc
fs
mov
insb
push
pop
and
int3
pushl
enter
lock
test
fistpl
and
or
fistps
cmp
hlt
and
hlt
adc
jb
test
jle
add
hlt
xchg
mov
into
loopne
sbb
stos
outsl
das
sar
leave
mov
rcrl
add
add
jg
sahf
mov
fstl
push
out
test
rep
or
pop
sub
add
add
loopne
stc
fwait
sbb
in
pop
jno
jl
stos
xchg
jl
add
mov
outsl
lret
aaa
jnp
aaa
adc
and
stc
stc
out
rorb
pop
jecxz
jmp
enter
sub
cli
mulb
cmp
aaa
jp
and
or
jecxz
xchg
jecxz
pop
fsubr
insb
test
rolb
mov
cmc
rorl
js
xchg
mov
stos
inc
ds
mov
sbb
inc
adc
cmc
and
cli
adc
add
push
mov
mov
outsb
dec
cwtl
dec
push
gs
lcall
sub
loop
in
pop
mov
pop
mov
pop
jnp
shlb
add
mov
mov
push
test
call
cmc
mov
mov
test
mov
lods
or
insl
mov
xor
inc
mov
outsl
or
icebp
test
mov
fwait
and
add
clc
push
decl
in
cwtl
outsl
push
sbb
push
hlt
add
jo
sub
movsl
xor
pop
cmp
xchg
sub
cmp
shlb
or
mov
ret
lods
nop
or
not
push
loop
inc
jne
cwtl
sbb
addr16
cs
pop
cli
repnz
adc
ret
mov
pop
frstor
aaa
pop
pop
xchg
adc
pop
pop
or
pop
ljmp
adc
mov
pop
jle
cmp
cmpsl
add
clc
sub
cmp
xchg
inc
pop
cli
in
dec
sub
fldcw
and
pop
lock
cmpsl
fsubrp
loop
and
gs
outsb
je
lds
fwait
aaa
adc
add
fisttpl
mov
repnz
jg
outsl
mov
mov
jecxz
incb
xor
dec
rcl
mov
sti
pop
test
insl
rorl
ret
fs
fstl
shll
stos
lea
in
stos
adc
movb
loop
push
push
rolb
jecxz
mov
je
fistps
sub
push
pop
fistpl
dec
enter
sbb
xor
jle
cmp
mov
ficomps
loope
xlat
roll
cmp
stc
mov
movhps
push
jg
jmp
stos
adc
insl
inc
cmpsb
jecxz
pop
jp
ljmp
mov
and
gs
inc
call
cmp
bound
lock
sti
jecxz
add
jge
out
sbb
mov
les
into
push
popf
in
aam
shll
js
aas
mov
stos
ret
push
jecxz
push
mulb
lea
nop
in
in
and
cmp
fdivr
ret
popa
cmp
es
lret
adc
add
mov
jp
bound
adc
adc
inc
int
jecxz
test
icebp
repnz
fs
lods
decl
icebp
cmp
into
inc
cmp
pop
fs
sbb
fisubrs
bound
adc
out
inc
mov
mov
cmp
jbe
pop
arpl
out
movsl
sub
cld
or
sbb
xchg
testl
sti
sub
cld
mov
pop
jecxz
in
jle
push
add
into
and
dec
loope
fdivl
clc
mov
les
inc
pop
stc
stos
fildl
mov
in
stos
hlt
ds
jnp
shrl
dec
ss
push
mov
adc
movsl
sbb
xchg
xchg
inc
repnz
lods
stos
jg
xlat
outsl
test
aaa
daa
sbb
shll
add
out
out
ffree
pop
pop
fnstsw
jne
insl
cmp
inc
and
add
dec
int3
fcmovne
shrl
pop
mov
xlat
adc
and
cli
sahf
lds
sbb
mov
mov
scas
rorb
ljmp
hlt
enter
rol
testl
mov
andl
iret
adc
mov
int
mov
jb
mov
and
push
lcall
pop
ljmp
jo
cld
stos
sbbb
mov
mov
add
dec
mov
dec
addr16
cmc
pushf
pop
loope
loope
sbb
fcomps
and
lods
cmpsb
sbb
xchg
adc
lret
punpckhbw
lea
mov
test
subl
push
and
cmp
and
icebp
sahf
or
ljmp
mov
cs
or
out
xor
and
pop
add
out
adc
cmc
xor
add
test
imul
push
pop
mov
aam
rcrl
lods
xchg
inc
subl
pop
mov
ss
xchg
mov
hlt
push
mov
mov
jbe
arpl
scas
pop
or
inc
mov
std
jbe
cmp
push
lods
inc
cmc
lods
mov
xor
leave
pop
int
dec
pop
xchg
or
cli
outsl
out
pop
dec
xchg
xor
pop
aaa
das
fcomps
lret
std
push
push
data16
mov
mov
cmp
loopne
sbb
inc
dec
rcll
test
ljmp
add
cmp
jl
jecxz
lea
and
jb
mov
test
cld
lods
mov
add
ja
cmp
push
arpl
in
xor
jg
sti
or
xchg
aas
fucomp
ds
icebp
leave
jp
hlt
push
outsl
orb
sbb
das
and
jp
ljmp
jl
jecxz
xchg
icebp
scas
xchg
subl
cmp
adcb
xchg
stc
insb
lds
test
sub
xor
fdivr
pop
call
sti
insb
js
push
loopne
xchg
shrl
sub
add
mov
repz
add
fstl
mov
in
pushf
adc
loopne
inc
jbe
fld
jecxz
push
jo
pop
sbb
js
repnz
mov
mov
sub
sbb
pop
lds
scas
push
pop
ljmp
mov
pop
fimull
mov
repnz
dec
test
push
cld
outsl
jecxz
test
add
mov
in
out
out
push
adc
aam
filds
jle
or
clc
clc
pop
xor
lods
xchg
push
sti
jg
repnz
mov
xlat
jp
out
dec
ds
inc
and
mov
pop
xchg
test
add
cltd
jne
ss
mov
mov
shll
or
in
xchg
icebp
in
outsb
sbb
xor
mov
test
xchg
out
bound
mov
das
mov
or
mov
push
test
lahf
push
xor
cmc
push
incl
push
inc
dec
das
add
pop
or
clc
push
in
cmp
pop
xchg
mov
das
scas
enter
inc
or
cmp
js
stos
xor
mov
cs
and
out
inc
fs
mov
cli
insl
mov
rcll
je
mov
and
ret
popf
imul
mov
xchg
or
mov
in
lods
outsl
push
adc
xor
rcrb
mov
popf
xor
add
sbb
adc
into
hlt
mov
sarb
imul
and
inc
lahf
lret
fstpl
jmp
cmpsb
rcrl
dec
fstl
out
push
cmp
fadd
pop
lcall
rcll
xlat
add
push
ljmp
movsl
js
sbb
repz
add
pusha
xlat
pop
cld
pop
adc
xchg
out
insb
fxch
ret
aad
or
jmp
test
addr16
or
hlt
push
cld
int3
es
nop
mov
adcb
or
add
or
shl
push
insb
add
xchg
out
out
clc
outsl
aad
adc
xchg
jae
divb
dec
loopne
push
shr
cmp
cmc
adc
sub
push
mov
sub
lahf
push
dec
jne
lods
pop
jl
xor
outsl
pop
clc
jg
clc
js
rcr
dec
cwtl
rcll
mov
push
call
aam
push
std
pop
dec
push
mov
xchg
sbb
or
xchg
jnp
mov
insl
rcr
or
mov
push
and
mov
cmp
jl
jmp
mov
or
out
ret
movsl
popf
jl
and
mov
xchg
xor
ds
xchg
mov
push
sbb
pop
mov
push
inc
xor
sahf
cmp
arpl
and
sbb
insl
arpl
pop
lret
cltd
ret
rorl
in
push
les
cmp
inc
mov
es
dec
lahf
popf
cmp
inc
mov
push
and
lret
in
imul
jecxz
cs
and
dec
adc
and
pop
sbb
lea
les
out
push
jns
les
ja
and
sarb
mov
push
lcall
arpl
adc
sbbl
and
inc
mov
push
fwait
xor
je
rolb
cltd
icebp
call
jo
fldenv
nop
icebp
xor
push
mov
jo
add
sub
mov
mov
xchg
jbe
pop
je
movsl
cld
fidivrl
mov
ljmp
xor
popa
notl
pop
mov
imul
out
pushl
or
aam
xor
outsb
sbb
faddl
cwtl
movsl
mov
inc
insl
jmp
push
cli
cmpsl
sbb
dec
xlat
mov
clc
ja
ds
es
fs
adc
dec
out
shlb
mov
test
lea
repz
push
sbb
pop
add
scas
push
lods
push
les
clc
push
setne
cmp
scas
mov
push
mov
pop
scas
out
or
cmpsb
incl
push
inc
into
add
cmp
dec
mov
add
xor
jl
imul
or
inc
out
enter
mov
xor
pop
and
push
fwait
mov
adc
aad
cmpsb
fcoml
push
ret
out
test
pop
push
pop
fsubs
jns
add
or
es
fsts
push
push
push
jnp
test
jg
call
xchg
adc
sbb
sbb
mov
mov
orl
andb
jecxz
mov
fmul
enter
aam
adc
inc
mov
lock
inc
or
imul
ja
sbb
inc
xchg
out
fs
or
jae
mov
jg
add
mov
or
mov
out
xor
repz
push
divl
push
pop
xorb
roll
icebp
hlt
mov
xor
rorb
xchg
jns
pop
aam
call
and
inc
xlat
dec
add
sub
add
or
add
xor
inc
adc
cmp
jg
out
push
jg
mov
mov
or
in
or
fidivrs
jl
mov
or
cmc
scas
jbe
jge
cmp
fs
sbb
std
adc
xchg
into
pop
adc
enter
addl
das
popf
mov
pop
rol
ror
inc
enter
xchg
sti
add
and
js
into
cmpsb
sub
lret
or
lea
jg
rcrb
stc
aas
push
fidivl
cmp
push
and
ret
fcom
int3
fistpl
fwait
sub
jo
adc
lds
dec
rclb
sbb
mov
mov
add
ja
aas
push
mull
dec
and
ss
imul
cld
inc
mov
movsb
leave
mov
jle
out
cmp
scas
cs
lea
cld
push
mov
in
loope
in
adc
cld
jle
jne
add
ret
mov
out
js
pop
je
xor
mov
pop
sub
inc
aaa
jge
lods
fwait
add
adc
push
popa
and
inc
insl
mov
addr16
push
dec
cwtl
aaa
outsb
mov
and
clc
jg
dec
and
sbb
repnz
jmp
sbb
sar
test
mov
subb
pop
repz
icebp
in
loopne
call
push
rcrb
mov
jp
and
xchg
jo
add
push
iret
jg
cs
nop
sub
dec
pusha
fucomp
fcomi
mov
lock
xor
loopne
das
inc
nop
popa
roll
or
adcl
mov
mov
clc
or
or
mov
mov
inc
rcrl
xrelease
lods
adc
lock
stos
xor
sbb
cmpsb
jecxz
add
clc
ret
xor
mov
lret
aaa
adc
andb
inc
add
xchg
and
aam
pop
les
mov
mov
popf
sti
sbb
dec
mov
adc
or
outsb
aad
les
add
ret
sbb
add
imul
cmp
cmc
or
mov
mov
rcl
mov
mov
and
mov
sarl
pop
shll
xchg
popf
pop
mov
fisttpl
and
sti
cmpsb
pop
cli
push
push
xchg
inc
mov
es
aam
inc
outsl
enter
inc
adc
jge
fidivs
jne
in
call
pushf
pop
add
lret
aam
dec
mov
subl
pushl
pop
adc
and
rcrb
hlt
in
orb
out
jbe
push
outsl
or
or
aaa
jns
jg
testb
lea
adc
loope
jno
push
sbb
and
icebp
adc
sbb
and
sbb
lods
test
inc
gs
sbb
mov
lods
jae
scas
push
xor
js
mov
test
pop
dec
mov
insl
arpl
lret
orb
adc
cmp
mov
nop
xchg
shlb
xor
xchg
out
jae
mov
or
or
test
jb
insb
adc
sub
outsb
cs
dec
test
std
mov
jl
inc
push
in
adc
mov
ret
leave
hlt
and
outsb
fcompl
jb
add
dec
mov
mov
stos
sahf
mov
popa
sub
cmpsl
inc
jae
stos
push
fisttpl
outsb
ds
cld
mov
outsl
fcomps
mov
sbb
les
loop
jg
aas
sbb
or
stos
loope
jmp
mov
sahf
test
lcall
pop
movsb
add
gs
popf
ljmp
fildll
bound
orb
jg
in
and
lcall
cmp
flds
push
inc
jb
push
sti
sub
sbb
in
mov
mov
ds
test
dec
add
push
pop
sar
divb
mov
rolb
inc
jl
into
pop
jb
outsb
std
inc
push
dec
adc
add
mov
cmc
lahf
lods
dec
jge
mov
fwait
xchg
loopne
cmc
fistpll
and
xor
shrl
cmp
mov
lahf
sbb
in
sub
gs
mov
add
decl
int3
rol
out
jmp
and
ljmp
cs
or
outsl
inc
nop
push
jns
mov
xor
ret
cli
pushw
mov
shrl
mov
jmp
movsl
je
xchg
test
inc
and
loopne
aad
cltd
cmpsl
pop
mov
das
inc
std
push
push
clc
mov
fsubl
stos
pop
outsb
fucomp
adc
cmp
fcmovnu
mov
fisttps
call
sbb
inc
test
outsl
sub
icebp
adc
or
rcr
xlat
int3
jbe
sbb
mov
add
popf
incb
loope
mov
in
out
clc
inc
cmpsb
sbbb
lods
test
decl
insb
or
loopne
sbb
push
mov
inc
testl
cwtl
inc
sub
lds
mov
js
in
arpl
das
dec
insl
loop
mov
lcall
jecxz
loopne
pop
sub
mov
sti
inc
outsb
loopne
sarl
or
push
lcall
and
scas
repnz
xchg
std
clc
push
or
xchg
ret
mov
push
add
mov
push
incl
test
adc
outsl
fildl
ss
sub
push
stos
and
and
inc
pop
xchg
push
push
jb
nop
xchg
test
dec
movsl
fisubl
inc
in
cltd
shrl
dec
jecxz
inc
inc
fildl
cltd
stc
push
testb
push
push
jp
pushf
inc
addl
inc
std
or
movsb
cmp
icebp
push
fdivrl
pop
adc
out
lock
push
cs
mov
orb
sbb
mov
nop
cmpsl
push
clc
mull
and
cmp
mov
sbb
mov
nop
and
ret
jg
add
pop
add
and
pop
movsl
popl
mov
pop
adc
pop
xchg
sbb
and
imul
mov
cltd
orl
pop
aad
invd
in
out
xchg
lret
push
mov
fstpl
ljmp
ljmp
stc
fsubl
push
mov
dec
ss
rcrl
sbb
pusha
lcall
das
test
out
add
int3
stos
mov
xchg
mov
rorb
out
pop
mov
push
cmp
dec
xchg
cwtl
jmp
loopne
sarb
testb
pop
mov
js
fldl
xchg
mov
xchg
push
push
pop
mov
mov
icebp
fistpll
sbb
adc
subb
mov
add
push
std
mov
mov
xor
cmpsl
push
mov
cmp
mov
pusha
jecxz
or
xor
leave
clc
shr
mov
cmp
loopne
cmp
adc
xorl
lds
pop
jge
push
jb
es
pop
lret
push
rcrb
xor
xor
fsubs
cmc
mov
insl
sub
add
daa
in
mov
imulb
cmp
mov
xor
icebp
inc
or
hlt
xchg
insl
xor
stos
xchg
inc
adc
adc
faddl
adc
pop
mov
adcl
fbld
pop
jg
mov
nop
inc
jnp
jecxz
jl
aaa
adc
pop
push
in
xchg
popa
cmp
and
xor
aas
lret
fbstp
cmpl
sbbb
push
or
add
mov
or
xor
add
cmp
jp
jle
sbb
mov
js
dec
pusha
in
dec
jo
or
shr
dec
adc
imul
jp
mov
int3
in
daa
incl
jg
mov
imull
mov
dec
movsl
ljmp
in
fisubrl
pop
sar
pusha
and
mov
sub
cmp
lods
aam
sub
out
in
test
ss
outsl
sbbl
fldenv
xlat
das
lahf
inc
ljmp
std
pop
sub
lods
xor
mov
mov
out
es
pop
or
mov
pop
mov
out
push
insl
dec
push
insl
mov
icebp
cmp
push
push
in
cld
cmc
pop
in
mov
xchg
jno
sti
jns
stos
sarb
fisubrl
xor
xchg
popa
in
pop
test
hlt
push
add
inc
sbb
jnp
inc
mov
mov
hlt
pop
cld
jp
push
lock
cs
repnz
xor
xlat
add
and
decb
pop
pop
push
je
std
pop
jnp
cmp
jbe
cli
or
imul
scas
dec
rclb
add
pop
or
sarl
xlat
mov
stc
push
jg
fidivrs
daa
inc
movntps
outsb
push
call
xchg
mov
mov
cmc
jp
pause
sub
xor
lahf
sbb
lock
jno
sub
mov
cs
js
lret
cs
in
or
add
jbe
je
call
xor
jno
pop
mov
outsb
add
jo
sbb
inc
shll
xor
les
or
aas
jmp
cli
cmp
out
call
sbb
fiadds
fcoms
insb
sub
pop
xor
fadd
mov
stos
or
xchg
insl
mov
sbb
dec
add
mov
sahf
idivb
out
dec
mov
jecxz
sub
call
mov
sub
or
f2xm1
xor
lods
in
push
clc
sbb
subb
adc
mov
outsl
aas
cmc
test
stos
mov
clc
into
add
adc
xchg
out
cmp
jb
rcl
push
aaa
fst
fbld
mov
cli
jle
xor
cltd
sub
add
cmpsb
cld
scas
sbb
ds
out
fisubs
stos
inc
add
sbb
dec
and
mov
scas
filds
xlat
test
inc
pop
movsl
arpl
xchg
mov
jns
jmp
fists
jnp
pop
ljmp
and
mov
add
rorb
pushl
push
xor
and
nop
push
popf
subb
dec
hlt
aaa
cmp
enter
push
push
mov
mov
std
mov
fnstsw
lock
adc
dec
adc
insb
icebp
in
or
and
out
fdivrs
rcl
add
jne
and
pushf
fldt
jl
push
mov
xchg
testl
rcl
cmpsb
sbbl
xlat
fadds
sub
cmp
lock
je
aaa
outsb
aaa
clc
mov
je
adc
popa
fmull
mov
mov
push
inc
mov
fcoml
inc
pop
adc
imulb
lods
sbb
pushf
popf
lds
outsl
loopne
dec
jge
mov
pop
inc
rclb
out
pushf
dec
lahf
or
mov
push
sbb
mov
xchg
lret
pushf
insb
std
mov
rcll
nop
into
pop
js
fildll
or
arpl
sub
fbld
mov
mov
fidivrl
push
daa
knotb
loopne
mov
call
xchg
ds
ds
testl
test
dec
rcrb
jmp
popa
or
or
pop
mov
das
push
in
mov
jae
push
fcoms
cld
sahf
adc
call
and
sbb
es
dec
push
xor
adcl
mov
sbb
ds
add
loopne
push
inc
dec
cld
jmp
ficoms
mov
lcall
movsl
or
lea
mov
icebp
pop
clc
add
popa
adc
cmp
inc
jbe
jecxz
neg
mov
adc
and
pusha
loopne
dec
cli
shl
cld
imul
mov
cltd
les
xor
or
cli
inc
add
cmp
mov
lock
out
and
push
and
lods
or
rorb
icebp
call
xor
cmp
es
stos
mov
negl
xchg
call
xor
pop
cmpsl
addl
mov
jne
adcl
mov
xchg
fimull
xchg
dec
jge
jns,pn
pop
mov
scas
or
mov
mov
pushl
sar
adc
push
xor
out
mov
gs
test
sub
push
xchg
push
add
mov
adc
xorb
icebp
insl
test
and
add
pop
les
call
cmp
mov
push
pop
ljmp
pop
lock
push
cli
mov
loop
xchg
xchg
lcall
adc
push
xor
dec
xor
test
cmpsb
jl
push
faddl
fnstsw
shrb
leave
push
mov
xor
outsl
cwtl
lcall
clc
pop
sub
clc
pusha
jnp
lahf
xor
dec
das
cld
jbe
or
inc
jmp
mov
cmp
add
add
in
popf
push
std
pop
into
dec
jno
or
push
adc
inc
lcall
adc
fmuls
addr16
pop
jp
xchg
push
mov
mov
sbb
mov
add
and
inc
shl
shr
jmp
ljmp
pop
lret
sbb
aaa
dec
mov
mov
xchg
push
mov
ret
mov
xlat
inc
xor
mov
cmp
lock
inc
sub
nop
push
insl
inc
lds
pop
and
or
js
fwait
icebp
fistpl
ljmp
test
mov
icebp
aaa
js
addr16
stc
nop
mov
mov
push
loop
pop
cld
cmp
aam
insl
mov
push
push
in
xchg
dec
push
subl
cmpsb
daa
fwait
in
or
push
ret
or
outsb
rorb
cmp
dec
cmp
sub
repnz
das
jne
inc
xor
adc
or
insb
cmp
in
aaa
and
repnz
cli
pop
mov
nop
fcomps
test
les
inc
mov
and
popa
jecxz
outsl
mov
sbb
scas
add
pop
testb
div
leave
in
sbb
insb
mov
scas
mov
cmc
mov
mov
dec
sub
pop
arpl
or
test
cld
dec
inc
xchg
rol
jp
or
jg
shrl
pop
add
lahf
dec
xlat
clc
fldt
add
stos
lcall
dec
pop
and
js
adc
in
cmp
cmp
movsb
sub
adc
push
xchg
fxam
sbb
jecxz
xchg
test
loope
adc
cmp
adc
add
push
mov
dec
cmpsl
push
and
pop
sbb
ljmp
xchg
inc
inc
jp
outsl
xchg
ficompl
lods
sub
jmp
outsl
idiv
inc
idivl
je
push
add
shll
loopne
ret
push
dec
sbb
adc
fwait
or
mov
mov
dec
sub
xchg
xorl
out
push
std
repnz
sub
cmpsb
pop
mov
lahf
int
ljmp
call
jecxz
push
loope
movsb
sbb
subl
ret
mov
sub
mov
mov
and
mov
je
or
push
rolb
mov
adc
sarb
imul
jp
pusha
add
scas
push
inc
outsl
sbb
lcall
loop
movsl
fisubl
sbb
cmp
sbb
pop
clc
inc
es
jo
sub
mov
test
dec
shrb
mov
adc
push
inc
hlt
inc
mov
cmp
les
mov
es
adc
loopne
push
andl
mov
lods
addr16
add
xchg
jae
test
mov
pop
insb
rolb
jecxz
jae
add
hlt
lea
pushl
inc
mov
dec
ret
adc
sbb
icebp
popf
add
out
jbe
push
fisttps
fldt
push
add
pusha
int
sbb
or
xchg
add
insl
ljmp
sbb
lret
fwait
and
mov
cs
mov
fistpll
xchg
ret
cwtl
dec
std
scas
imul
addb
in
lock
out
sub
int3
push
iret
lea
sbb
cmp
cmp
lods
mov
sub
cmp
out
xlat
sarl
jo
repnz
adc
insb
sub
out
mov
pushf
sub
shl
sub
daa
int3
cs
mov
adc
sub
pop
call
mov
lods
mov
insb
imul
xchg
pop
jb
sbb
call
adc
fs
adc
mov
nop
or
jne
sub
mov
aam
or
inc
lods
dec
add
icebp
stos
aam
push
push
lret
imul
xchg
int3
call
push
add
or
push
pushf
andb
xchg
shl
xchg
pop
gs
and
pop
and
shrl
ds
mov
add
mov
addl
leave
add
fwait
sbb
lods
lods
movsl
popf
shll
and
scas
xor
mov
mov
loopne
adc
dec
xchg
push
push
orl
fisttpl
ljmp
mov
mov
pushf
sbb
mov
sbb
movb
ss
cmp
mov
inc
jg
fildll
cs
inc
jl
cwtl
push
jns
mov
add
push
cmpsb
or
pop
pop
mov
push
mov
scas
movntps
xchg
push
push
stos
cmpl
test
test
dec
arpl
fldl
xor
jnp
inc
pop
lds
mov
pop
and
inc
movsl
jge
movsl
lods
ja
or
data16
and
adc
repnz
mov
lods
cmp
push
out
pop
pop
js
dec
sub
or
loope
fnstcw
cmpsl
hlt
lret
insb
inc
lock
cltd
push
xor
lea
mov
jnp
jbe
nop
or
mov
hlt
dec
sub
shlb
or
dec
push
push
aaa
ffree
pop
pop
inc
gs
sahf
sbb
ftst
jae
inc
shl
adc
dec
loope
or
ljmp
mov
stos
stos
add
jbe
mov
in
cmp
jne
jmp
pop
add
or
rcrl
dec
dec
sbb
or
lods
cmp
jo
cltd
sub
jmp
jp
mov
mov
data16
ja
cmp
pop
cld
or
xchg
movb
je
scas
and
cwtl
or
xchg
imul
cmp
idivb
pop
int3
sahf
or
push
ljmp
cmp
iret
call
gs
negb
push
jnp
xlat
shrb
shrb
or
ljmp
rolb
xor
inc
sbb
mov
sbb
loope
inc
cltd
rorb
pushf
movsl
fmulp
mov
clc
fbstp
enter
adc
mov
push
xor
mov
fnclex
lods
movl
fs
xor
add
jmp
mov
push
mov
scas
pop
or
sbbb
movb
or
out
mov
sub
movsl
or
jns
push
sub
inc
repz
aaa
outsb
std
jg
and
dec
dec
stc
dec
sub
es
xor
cs
sub
cmp
or
data16
adc
lods
fdivl
push
ljmp
adc
jne
shlb
pop
dec
jp
pop
fcmove
and
fwait
mov
fistl
pop
fs
nop
jno
sbb
lea
ja
loope
jg
mov
mov
shr
pushf
dec
add
push
push
sbb
mov
lahf
push
or
inc
in
or
in
mov
jnp
ret
clc
sbb
cmp
test
xchg
loopne
xchg
xchg
fistps
ljmp
pop
sbb
incl
sub
ds
mov
lcall
mov
das
jnp
mov
push
sbb
push
pop
and
and
int3
cmp
bound
ret
jnp
push
rol
leave
imul
jo
xchg
mov
pop
repnz
pop
test
out
mov
xor
mov
or
pushl
scas
scas
aad
jae
adc
lahf
push
loopne
bound
insb
jg
popa
push
or
adc
movsl
adc
xchg
ret
gs
inc
fs
shl
mov
jae
insl
out
sub
loope
repz
out
sub
out
ret
lods
sub
cli
outsl
push
jno
jmp
pop
push
stos
repnz
loop
and
aad
jecxz
fs
int3
int3
cmpsb
loop
sbb
or
xor
inc
dec
dec
sub
inc
mov
lds
popf
in
orl
shr
sub
loope
mov
jb
or
arpl
jmp
pop
outsl
pusha
and
imul
dec
cld
and
mov
and
pushf
cmc
sbbb
rcrb
hlt
or
out
fldt
std
insl
adc
inc
aas
in
sub
dec
jle
add
or
test
outsl
call
adc
outsl
outsl
adc
xchg
adcl
jmp
or
lcall
and
ja
or
shrb
push
inc
pop
imul
and
cmp
sub
mov
mov
fnstcw
mov
jg
insb
test
je
inc
and
push
mov
mov
add
mov
lret
ljmp
push
or
test
sub
jle
lahf
push
lds
pop
jbe
rcr
arpl
fisubl
ret
mov
lea
cmp
or
push
push
ds
or
push
fmuls
xor
xor
cld
popa
popl
push
xchg
jle
and
mov
mov
xchg
mov
in
sub
pop
push
adc
or
fcom
notb
jns
mov
jle
aam
add
mov
pop
mov
adc
in
pop
arpl
jb
dec
push
mov
clc
icebp
out
add
ljmp
subps
outsb
jg
adc
inc
js
lods
inc
mov
mov
dec
sbbl
cli
sbb
pshufw
mov
lret
lea
pop
or
mov
mov
loop
sub
adc
sbb
movsl
outsl
shlb
push
iret
aad
push
pop
push
call
insb
sbb
dec
dec
sbb
pop
pop
mov
mov
nop
adc
or
adc
les
adc
lcall
test
lock
add
sbb
sbb
fcoms
lcall
ret
testl
jo
or
repz
jbe
xlat
and
je
mov
es
aad
outsb
mov
jne
cmp
mov
sub
dec
aad
jp
sbb
and
mov
aam
dec
aas
cwtl
aas
sbb
or
rolb
sub
xor
and
imulb
sti
rcll
xchg
adcb
sahf
adc
push
add
cmp
xchg
inc
mov
or
pop
sti
out
ljmp
mov
sbbb
cli
test
popa
jbe
push
out
ret
cmp
neg
outsb
enter
addr16
xor
jl
cld
sbb
xlat
mulb
pop
loope
aaa
inc
inc
imul
shr
cmp
add
mov
xchg
or
scas
stos
adc
ret
pop
xorb
lods
ja
cs
clc
mov
sbb
mov
or
jne
pop
mov
adc
inc
cmpsb
sbb
scas
or
lcall
mov
pop
pop
inc
adc
fbld
mov
push
stos
xor
sbb
mov
aad
mov
dec
js
add
bound
and
sub
sbb
in
fdivl
mov
jg
daa
inc
mov
sbb
cmp
cmpsb
xor
testb
push
xorl
inc
out
mov
mov
push
pop
sub
ja
jge
sahf
add
cmp
bound
sbb
inc
mov
adc
xor
dec
fisttpl
negb
std
jg
hlt
sbb
and
mov
adc
pop
jge
out
sti
outsl
or
push
pop
pusha
xchg
mov
outsl
scas
push
cltd
push
mov
sti
pop
scas
pop
jmp
mov
adc
rol
test
mov
push
mov
cmpsl
fs
stos
pop
les
shl
sbb
inc
sbbb
sbb
insb
sbb
push
cmpsb
mov
cs
sbb
push
jmp
ret
mov
fucomp
pop
sahf
das
add
add
cli
movsl
lcall
test
lock
pop
cld
mov
add
jnp
loopne
push
or
pop
or
imul
out
popa
jp
push
shll
mov
xchg
in
xchg
enter
push
repz
xchg
jo
jbe
adc
cmc
lea
es
pop
mov
mov
push
pop
out
fbstp
sub
movsb
mov
or
test
sti
sbbb
je
dec
jle
xor
das
fcompl
inc
sub
add
aad
test
jl
cmp
add
jno
pop
mov
pop
inc
mov
and
int3
ret
aas
cli
xchg
imul
adc
lds
xor
call
repnz
jge
sbb
push
scas
testb
push
sbbl
push
mov
movsb
cmp
insb
jg
xor
pusha
inc
and
mov
mov
pop
adc
lret
mov
stos
pop
adc
cli
ret
adc
andb
xor
add
decl
xor
or
fisubs
adc
imul
xchg
cmp
push
hlt
outsl
xor
xchg
add
es
cltd
ret
outsb
push
repz
leave
ljmp
lods
mov
test
xor
stos
in
cmc
inc
icebp
pushl
mov
pop
test
sbb
std
xchg
mov
aad
or
and
ss
adc
cs
mov
das
lcall
fiaddl
pop
cmc
in
push
pop
pop
xorl
fnstenv
movsb
scas
adc
loopne
scas
cmpb
adc
push
les
xchg
test
adc
je
bndldx
fisubrs
fsub
fisubl
push
jge
stos
dec
lds
inc
iret
into
shll
jbe
push
fcmovu
in
sub
jne
ret
sti
jne
inc
or
std
xchg
fwait
mov
outsb
push
cld
pop
mov
cmp
ss
sbb
or
pop
icebp
mov
push
ja
cli
sub
jb
xchg
lods
ret
mov
loop
dec
orl
cwtl
mov
ds
and
jg
insl
sub
les
xlat
or
add
xorb
dec
outsb
sub
jg
test
xchg
jmp
pop
out
push
push
or
rcrb
xchg
ljmp
mov
and
shr
aam
mov
cmp
ja
shl
sbb
cs
stos
mov
xchg
mov
fimull
xor
pop
xchg
ds
fcomps
jmp
test
outsb
sbb
adc
xchg
dec
jb
shll
rclb
adc
imul
das
lcall
xchg
cmp
push
ret
in
mov
push
sbb
dec
inc
jecxz
cmpb
dec
shlb
popf
jmp
mov
or
add
int3
jecxz
insl
mov
aad
loope
shrb
adc
adc
dec
test
push
or
push
or
mov
aaa
outsb
xor
roll
pop
cmc
inc
dec
add
ja
inc
sbb
aad
scas
mov
daa
add
inc
push
pop
enter
cld
xor
and
clc
push
out
mov
or
jmp
cmpb
lods
fs
loope
sti
loop
loope
sarl
adc
dec
mov
incb
pop
popf
jo
and
jle
xchg
imul
push
jne
pop
mov
insl
jae
daa
je
or
loopne
sbb
add
ficoml
cmp
icebp
dec
hlt
movsl
push
push
mov
shl
pop
loopne
sbb
sbb
lods
divb
frstor
loope
push
adc
mov
jmp
insb
add
pop
dec
pop
sbb
inc
icebp
bound
sub
in
add
ss
fcomps
aad
jg
push
sbb
in
mov
dec
rcrb
fsubs
inc
fists
out
inc
xchg
cmc
add
aaa
pop
aam
xorl
sbb
or
push
jge
bound
fnsave
adc
sarb
mov
test
jp
mov
pop
out
inc
mov
sub
fcomi
mov
out
inc
xorb
jbe
outsb
adc
cs
sub
clc
sti
subb
add
dec
pop
ret
clc
sbb
insl
ljmp
dec
mov
cmp
repz
inc
mov
pushf
pop
ret
std
lcall
add
in
in
inc
dec
sub
lods
lods
jno
xor
repnz
and
imulb
lock
jecxz
and
or
loopne
aaa
cmpsb
loopne
or
jl
xchg
push
ret
mov
mov
jo
push
jns
adc
neg
mov
in
fstps
sbb
hlt
add
dec
fiaddl
shr
pop
fsubs
mov
aaa
in
nop
inc
cltd
adc
fldt
mov
pop
sub
and
add
push
leave
call
jmp
pop
mov
lret
jbe
imull
repnz
xchg
fsts
or
fadd
mov
ret
imul
rcr
call
hlt
repnz
pop
and
pop
xchg
jb
cwtl
inc
or
mov
jb
ljmp
mov
ljmp
add
push
mov
mov
mov
fwait
cli
outsb
cmp
scas
add
outsb
push
and
cltd
mov
jmp
out
imul
fstpt
imul
punpckldq
cli
cwtl
cmp
xchg
inc
push
clc
push
push
lea
add
ljmp
fcompl
lods
lahf
gs
sbb
adc
jg
sub
je
push
mov
xor
cs
in
mov
or
adc
mov
cmp
lcall
sbb
xor
pop
fiaddl
xor
fstp
clc
or
mov
stc
mov
roll
sub
pop
sbb
fistps
adc
jmp
sub
cmpsb
push
loopne
push
rolb
stos
imul
mov
fcomps
jo
hlt
xchg
xchg
int
inc
xchg
jmp
cmp
in
ficomps
pushf
add
dec
fadds
xor
ret
adc
sub
bnd
callw
loope
inc
jb
mov
push
je
scas
cmpb
aam
inc
jbe
xor
orl
mov
cmp
cmp
xchg
mov
movsl
lods
pusha
mov
das
mov
shrl
mov
dec
pop
push
cwtl
sub
iret
inc
jle
pop
push
mov
loop
add
cmp
mov
mov
movsl
sbb
inc
adc
aad
subl
lea
std
hlt
or
in
xchg
bound
lcall
jp
push
repz
out
aam
sub
lea
je
mov
cmc
mov
push
mov
pusha
jmp
fistl
and
sbb
sub
pop
lcall
out
jge
popf
pop
sbb
xor
or
fldcw
das
mov
add
jb
sub
shrb
gs
or
mov
mov
loop
xlat
out
or
test
loope
dec
es
roll
mov
push
inc
hlt
dec
jl
adc
insl
sub
pop
mov
jbe
mov
loopne
fs
xchg
pop
aam
cmp
sbb
mov
sbb
inc
dec
adc
mov
dec
add
add
pushf
and
xchg
insl
jmp
jne
or
sarb
lea
add
mov
std
in
fwait
das
fcoms
cli
ja
ret
xchg
rcrb
in
stos
outsl
ljmp
dec
int3
xor
mov
mov
sarl
pop
cli
inc
xor
repz
dec
sbb
clc
scas
or
fidivrs
jmp
fldcw
loopne
sarb
lret
mov
xlat
fwait
adc
inc
and
mov
pop
jne
jmp
js
cld
fbld
jmp
sbb
loop
bound
push
insl
push
sti
dec
hlt
stos
dec
jge,pn
sub
scas
inc
mov
sbb
mov
outsb
jg
lock
jmp
aaa
or
das
pop
push
xor
xor
pop
rorb
adc
inc
rclb
sar
arpl
mov
jl
mov
adc
arpl
inc
movsb
pop
lret
cwtl
push
push
mov
mov
mov
popa
movb
cld
cmp
adc
fildl
sbb
inc
pop
adc
xchg
movsb
add
pop
mov
aam
mov
fcmovu
mov
mov
xchg
cmp
fiaddl
mov
and
cmp
cld
jbe
xchg
loopne
dec
or
xchg
fs
cmp
cld
mov
inc
jnp
icebp
cmp
lock
mov
imul
and
sub
das
loope
inc
sub
fs
lret
sub
mov
test
std
jg
leave
adc
stos
inc
sub
jnp
insl
mov
cmpsb
jbe
fmull
shlb
jle
loopne
jmp
fidivrs
pushf
mov
je
add
pusha
add
dec
ret
stos
fsubp
add
xorb
aam
outsl
mov
bound
adc
or
negb
add
out
and
iret
add
shl
mov
jge
xchg
mov
sarl
sahf
outsl
and
into
cwtl
adc
pop
dec
in
push
push
dec
mov
add
pop
out
add
mov
lcall
xchg
mov
jecxz
rclb
outsl
pusha
sbb
inc
fsts
pop
loop
cli
ret
fdivrl
mov
or
test
adcb
sbb
push
inc
pusha
mov
and
vminpd
ja
xchg
push
xchg
popl
std
add
jp
sub
movsl
incl
outsl
mov
ret
adc
xor
icebp
ja
test
lea
cmc
test
adc
mov
popa
js
mov
call
dec
xor
jg
xlat
sbb
stc
outsb
cs
inc
xchg
mov
out
jbe
cmpsl
jp
imul
mov
clc
insl
loope
lret
cmpsb
mov
cmpsb
add
mov
data16
aaa
shll
sub
in
xor
inc
rcrb
and
imul
jmp
pop
mov
or
sbb
dec
add
sbb
fsubrs
faddp
xchg
addr16
cmp
sar
jbe
pop
inc
jbe
in
jmp
fnstsw
rcll
xor
movsb
movsb
xor
int3
insb
popf
sub
cmp
inc
orb
push
xchg
stos
jle
fldl
xor
mov
int3
icebp
pop
add
aaa
jle
mov
mov
shrb
test
xor
pop
mov
inc
insb
dec
rorl
inc
cmp
cmp
jno
adc
xchg
out
push
dec
cli
push
enter
pop
insb
nop
ss
adc
cwtl
push
mov
push
add
test
outsb
loopne
or
out
xor
mov
mov
push
xor
sub
cwtl
and
lods
mov
out
xlat
fsts
add
xchg
adc
jb
xchg
imul
mov
sbb
push
icebp
fstpl
test
inc
scas
out
adc
cwtl
ss
fcmovnu
jmp
sub
add
in
add
insb
dec
lahf
in
or
loopne
ss
mov
push
sbb
aaa
outsb
adc
mov
sub
add
pop
xchg
movsl
push
fdivr
ret
push
fs
ret
sub
lahf
insb
jae
loope
mov
incl
cli
jbe
push
rorl
js
and
cltd
push
fsts
lods
xchg
jle
or
pop
sbb
icebp
lods
xor
adc
test
xor
push
es
pop
imul
bound
dec
mov
inc
or
adc
inc
inc
sbb
dec
mov
pop
lds
scas
xchg
test
dec
adc
xchg
push
lcall
outsl
das
xor
xor
lds
add
loopne
out
jle
clc
xor
add
fs
fnsave
jg
outsl
lea
lcall
jl
push
mov
xchg
add
xor
inc
rclb
rcrl
stc
mov
inc
or
in
shr
xchg
imul
fsubl
sub
jns
ds
pop
mov
cs
lock
adc
cmp
out
cmp
iret
pop
dec
add
push
adc
call
adc
pop
jl
lock
fsubrs
sub
xor
icebp
outsl
fstpt
cmp
add
xor
pop
fdivrl
jbe
stc
or
sbbl
add
clc
pop
fcomip
in
push
xchg
sub
push
nop
mov
jecxz
aad
sub
mov
inc
jg
jmp
or
and
push
push
and
mov
inc
add
out
xor
pop
roll
mov
dec
sub
mov
push
lcall
aam
cwtl
or
fwait
sbb
sub
ljmp
andl
cmp
and
and
pop
dec
add
dec
dec
mov
pop
mov
add
jne
mov
mov
lea
arpl
jg
mov
dec
xor
sub
outsb
loope
loopne
inc
sub
stos
adc
scas
jmp
paddsw
bound
roll
in
xorl
fistpll
mov
std
lea
push
xor
mov
daa
jecxz
dec
dec
movsl
inc
aad
sbb
fidivrl
mull
jno
adc
cmpb
xchg
sbb
xlat
rcrb
fnstsw
mov
aad
mov
xlat
das
add
mov
lahf
push
rclb
rol
push
mov
push
xor
mov
push
mov
sti
leave
ss
push
andb
in
push
add
or
cmp
mov
mov
pop
pop
jbe
fwait
mov
insl
js
fadds
xor
mov
mov
std
in
or
mov
decl
xor
in
sub
cmc
hlt
lds
mov
push
arpl
loope,pn
inc
jmp
sub
adc
jne
stos
pop
or
inc
subb
ljmp
jecxz
mov
out
out
rorb
push
dec
shl
repnz
inc
jp
jbe
inc
data16
aaa
jno
lds
add
xor
in
sti
fsubrl
fiaddl
andb
jo
std
dec
push
or
xor
outsb
sub
aaa
mov
pusha
sub
jecxz
enter
insl
xlat
ljmp
and
imul
xor
and
mov
jecxz
jae
rol
incl
cmp
and
sahf
xor
inc
xor
mov
adc
pushf
dec
js
addr16
leave
icebp
in
inc
pop
mov
ljmp
mov
cmc
idivl
inc
sub
fabs
mov
dec
push
das
aaa
pop
mov
xchg
add
mov
xchg
or
int
inc
icebp
adc
cmpsb
dec
test
add
daa
clc
sbb
mov
jg
mov
lret
addr16
fildll
cltd
cmp
fstl
and
cmp
dec
pushl
leave
lods
stos
sti
test
add
add
fimuls
lods
out
int
int
jge
outsb
jmp
or
adc
jne
cwtl
adc
pop
pusha
xlat
movsl
add
xchg
lret
in
rcrb
outsl
call
enter
adc
mov
jnp
push
inc
dec
mov
inc
xor
sub
fcompl
mov
inc
js
sbb
or
or
out
enter
lods
inc
lahf
aas
sbb
mov
adc
or
xchg
add
mov
dec
mov
dec
inc
adc
adc
jl
in
xchg
cwtl
inc
mov
add
ret
pop
pop
push
or
ret
jle
mov
outsb
add
imull
insl
adc
mov
gs
ret
insl
out
push
jns
sub
xor
out
hlt
scas
or
outsl
repnz
clc
add
sti
cld
movsb
shl
int
loope
mov
add
add
mov
sbb
add
sbb
fcom
mov
mov
cli
jg
lcall
cmp
dec
push
into
popl
icebp
mov
orl
xchg
inc
cmpsb
lods
dec
sbb
rcr
mov
aas
mov
repnz
fstpt
adc
pusha
es
idiv
xlat
mov
mov
xor
adc
mov
pop
inc
lods
dec
sub
jle
jg
pop
mov
jmp
fildl
inc
dec
or
sub
jmp
rcr
ss
mov
mov
adc
unpcklps
cmp
mov
das
jl
loopne
mov
adc
mov
cmpsl
sahf
dec
jne
jle
fcmovu
les
arpl
mov
mov
jnp
pop
pushf
sbb
mov
popf
aad
push
rol
filds
ret
popa
aam
jns
xor
push
gs
mov
dec
mov
push
outsl
subb
icebp
mov
add
ret
insl
push
or
pop
fwait
mov
mov
push
jmp
or
test
push
outsl
xor
incb
mov
mov
pop
mov
jl
pop
ret
js
mov
and
sub
xchg
jmp
add
pop
fsubl
mov
jge
incl
sbb
test
idivb
mov
jbe
sarl
das
xchg
call
mov
mov
pop
or
ja
xchg
jecxz
add
std
push
hlt
and
inc
fdivl
jnp
dec
aad
inc
xchg
insl
xor
mov
cmp
adc
pop
aaa
sbb
mov
pop
insb
pushf
testb
push
pop
inc
icebp
incl
aam
adc
xor
fisttpll
call
mov
cwtl
push
xchg
lods
aad
or
imul
icebp
adc
mov
add
aad
mov
fcmovnu
int3
xchg
add
pop
push
xor
ret
add
dec
push
clc
pop
inc
pop
xchg
cwtl
inc
scas
jp
mov
dec
movsl
push
out
push
leave
pop
push
push
sub
push
mov
stos
sbb
pop
or
pop
xorb
mov
test
mov
inc
cld
mov
mov
popa
and
in
jno
sbb
jne
js
icebp
inc
inc
jne
shlb
adcl
repnz
les
movsb
add
mov
mov
xchg
shrl
imul
sub
mov
outsb
dec
arpl
push
mov
mov
xor
mov
loop
lds
inc
mov
jg
sbb
jbe
movsb
pop
mov
sbb
lock
push
sub
mov
dec
push
sub
in
ja
xlat
daa
jecxz
loop
push
jmp
popf
movsb
sub
inc
das
subb
pop
push
loope
daa
aad
pop
outsb
lods
mov
mov
and
repnz
clc
das
push
cld
and
push
mov
or
sub
mov
mov
dec
scas
test
es
dec
stos
push
jne
lock
lret
pop
test
push
jo
jl
fisubl
lahf
and
decb
aaa
icebp
out
jecxz
nop
push
cmpsb
adc
sbb
es
inc
bound
ss
ljmp
insl
std
icebp
push
jg
sbb
sub
rclb
mov
cltd
sub
xor
mov
xchg
mov
and
pop
in
in
and
fstpl
repnz
pop
push
push
push
sahf
dec
test
pop
fcom
fcmovbe
pop
cmp
xchg
xor
gs
jg
fistl
repnz
adc
mov
mov
mov
pusha
cli
lcall
or
out
lret
jl
cmp
xchg
push
lock
inc
xlat
xchg
jmp
cmp
fistpll
mov
fisttpll
pop
insl
roll
aaa
aam
in
adc
daa
push
insl
sti
or
hlt
lods
jle
push
rcrl
mov
add
xchg
sub
add
push
lock
or
in
ljmp
imul
xchg
comiss
scas
and
sbb
or
sub
imulb
dec
iret
popa
test
data16
jecxz
icebp
push
mov
push
sub
in
inc
adc
leave
bound
push
das
inc
int3
ljmp
adc
xor
adc
pop
loope
pop
fadds
fists
dec
rcr
nop
jbe
cmp
sbb
roll
in
mov
mov
push
jecxz
jb
inc
pop
stc
jnp
or
jg
xor
jb
cmp
lock
push
and
adc
test
jno
fwait
mov
jns
js
in
mov
movsb
push
ss
xchg
scas
mov
mov
repnz
test
jnp
fstpt
pop
sub
add
outsl
mov
xor
sbb
fimuls
icebp
in
das
shll
inc
mov
lcall
mov
push
pop
ss
sarb
test
xchg
sub
mov
cmp
or
sbb
adc
and
sub
fcoms
fstpt
jle
push
ficoml
ss
jecxz
xchg
gs
repnz
dec
mov
jle
adc
inc
adc
or
push
push
fistps
jnp
dec
dec
mov
push
xchg
adc
lods
pop
jecxz
sarb
jns
pop
xor
and
sbb
mov
mov
aam
and
cmpsb
fnsave
rorb
loopne
ret
push
outsl
mov
add
xlat
loop
xor
jne
cld
mull
cmp
test
jb
sbb
imulb
lret
pop
jg
fcomip
inc
sub
faddl
sbb
adc
or
xchg
pop
fldcw
rorb
fisttpll
inc
subl
sbb
jns
xor
adc
lock
jg
sbb
sub
pop
idiv
mov
jge
out
bound
std
dec
and
sub
dec
cmp
xor
adc
xchg
jg
repz
push
ja
add
les
and
sub
pop
xchg
leave
mov
lret
cmp
push
or
gs
insb
shll
push
or
fucomp
in
pop
mov
sub
pop
dec
push
pop
adcl
xchg
or
scas
and
test
cmc
jb
loope
sub
outsb
fiaddl
scas
sbb
adcb
xor
dec
add
cld
mov
cmpb
repz
cs
add
jg
adc
sbb
jle
push
sub
and
incb
dec
sti
into
mov
cmpsl
lea
lock
adc
inc
pop
mov
icebp
fwait
or
cwtl
jp
or
js
loope
lea
andl
out
cmp
cmpsb
push
orb
in
cs
mov
xchg
movsl
pop
jo
movl
lea
cs
dec
out
dec
fstl
xchg
inc
pop
insb
mov
pop
shlb
pop
outsl
xorl
das
dec
dec
ja
stos
test
pop
sti
pop
sbb
mov
jl
xlat
and
and
mov
xchg
adc
bound
pop
adc
aam
pop
and
popf
or
mov
fadd
std
sbb
push
push
push
inc
mov
pop
in
mov
daa
cmc
or
andb
push
bound
xor
jg
scas
cmp
and
mov
loopne
jns
movsl
lods
add
and
xchg
es
mov
lods
or
jns
cmp
pop
das
fdivr
loop
lods
sbb
mov
jg
insl
fidivrl
or
mov
ror
or
sti
out
push
inc
rolb
push
or
adc
pop
inc
aad
in
aam
mov
bound
dec
and
sbb
je
add
xor
sub
push
sub
inc
les
adc
adc
pop
cli
cmp
pusha
addl
mov
test
sbb
or
jg
mov
push
push
sbb
fwait
test
mov
pop
inc
and
aaa
cli
out
ss
add
cmp
push
xchg
xor
hlt
lcall
cs
mov
ret
pop
mov
sbb
lret
xchg
outsl
outsl
sub
aaa
ljmp
xchg
shrl
mov
dec
xchg
popa
inc
cmpsl
cltd
fistpll
cmpsl
jae
cmp
push
cmpsb
jg
mov
jo
loope
out
shrl
mov
jecxz
decl
loopne
or
mov
or
movb
and
js
sbb
loope
xor
jbe
pop
sub
xor
push
jb
mov
stos
mov
dec
cmp
inc
xor
mov
subb
ljmp
ljmp
and
jmp
xor
lods
dec
sbb
shll
lds
push
jge
orb
cld
decl
dec
inc
add
mov
loopne
fisubs
lods
inc
js
lcall
out
test
iret
jl
repz
adc
jl
fisubl
movsb
outsl
adc
jo
pop
jge
call
xlat
jnp
sub
xchg
test
daa
or
inc
xchg
les
and
fistpl
cmp
sbb
inc
imul
add
mov
push
addb
sub
mov
jp
cmpsb
mov
fisubl
movsl
and
loopne
xor
mov
adc
sarb
inc
sbb
add
mov
inc
aam
sub
xor
inc
js
jo
or
enter
mov
pop
jp
repz
or
bound
imul
mov
lret
popa
popl
lcall
mov
shl
test
dec
sub
test
shlb
movsl
inc
jns
sbbb
jmp
daa
pop
in
sbb
cwtl
lret
or
fmull
jg
or
rorb
call
cli
hlt
cwtl
xchg
push
pop
loopne
fistpll
sarl
mov
test
movsb
push
jl
jno
push
and
inc
push
test
mov
xor
sbb
daa
mov
fidivrl
push
sbb
jl
push
dec
push
fiadds
and
mov
fists
jmp
repz
ss
push
push
sbb
lret
push
jo
cmp
mov
jbe
cli
lea
dec
jecxz
sbb
mov
imul
lock
dec
addr16
pusha
add
call
add
push
adc
inc
inc
js
sar
or
rolb
sahf
mov
ret
std
cmpsb
cmpsb
xor
xchg
push
cmp
stos
icebp
daa
mov
xlat
xchg
aaa
mov
mov
test
mov
xchg
imul
ds
testb
mov
mov
push
mov
or
in
stos
jp
icebp
mov
cli
outsl
jo
cmc
jo
or
lods
push
adc
shll
std
aaa
cld
pop
adc
cltd
sub
jmp
and
stc
gs
ss
pop
xchg
cmp
adcl
dec
xchg
in
pop
sub
fistpl
outsb
push
test
lods
stos
mov
mov
xchg
incl
ds
sub
lcall
and
push
hlt
cmp
das
pop
ja
test
xor
aam
sbb
ret
test
pop
jge
or
xchg
fcompl
mov
fbstp
or
mov
addr16
xchg
jmp
leave
enter
cmpl
mov
lds
fucomi
xchg
addb
gs
jg
inc
or
aad
icebp
clc
xor
icebp
dec
push
inc
mov
or
sub
inc
jmp
cmc
inc
pop
and
inc
adc
lods
pop
fisttpll
jge
add
leave
pop
aam
inc
aaa
adc
xor
pushf
inc
jmp
mov
mul
xor
push
call
mov
shll
rclb
leave
inc
int
mov
jmp
mov
cli
cs
fsub
sti
adc
pop
and
jb
and
enter
and
mov
mov
das
popf
push
out
ja
mov
inc
add
into
sub
lods
addb
jg
sahf
or
idiv
adc
jle
rorl
mov
adcl
rclb
ficoms
fisttps
sbb
mov
stc
xchg
loope
sbb
and
lock
adc
xchg
inc
mov
jbe
sbb
fcomi
fcomi
xor
daa
add
xchg
test
out
sahf
ret
dec
divl
ljmp
sbb
rcrl
sbb
sbb
inc
inc
fildl
lahf
stos
adc
jmp
pop
dec
sub
mov
lock
or
test
add
mov
mov
hlt
xchg
jae
ffreep
filds
test
inc
mov
cmp
inc
xchg
lock
scas
jne
in
scas
adc
arpl
or
sbb
mov
movsl
fistpl
dec
sbb
sbb
sbb
sti
add
inc
fildl
je
add
jnp
imul
and
push
je
push
sub
das
mov
subl
xlat
andl
cmp
push
test
pop
sbb
push
daa
jns
push
loop
add
xor
pop
daa
es
sub
shlb
dec
subl
and
loopne
or
push
xor
repnz
mov
das
mov
push
fildll
cmp
add
adc
arpl
pop
and
jg
pushf
loop
fists
in
sbb
mov
mov
test
cli
mov
addb
test
pop
leave
dec
push
psubb
test
test
aas
sbb
sub
call
pcmpeqw
adc
xchg
fstpt
mov
mov
dec
sbb
pop
mov
and
mov
and
mov
jp
mov
and
pop
incl
sub
xor
and
cmp
imul
cli
arpl
inc
mov
adc
ret
fnstsw
test
xchg
in
pop
pop
lods
pop
mov
daa
or
push
adc
ljmp
ljmp
out
cmp
mov
jnp
inc
inc
jg
divb
jp
adc
in
mov
cld
out
mov
cltd
cmp
shlb
cmp
dec
cld
sbb
or
cli
adcl
inc
sti
shr
lea
add
mov
mov
mov
and
or
add
cmp
rol
hlt
fwait
jo
bound
sub
mov
inc
adc
cmp
sbb
aad
add
int
xchg
jo
jge
add
push
sub
and
pop
push
dec
sbbb
cmpsb
in
fists
shrb
in
cmp
add
adc
mov
sub
or
mov
fdivrp
pop
cs
je
loop
lcall
jbe
out
lret
pop
in
inc
push
fnstcw
push
call
mov
xchg
fbld
adcl
fnstenv
mov
pushl
adc
ror
dec
jbe
push
incl
sub
pop
fbstp
and
inc
adcl
mov
stos
loope
pop
in
in
fbld
dec
aam
xchg
or
xchg
sub
ss
into
inc
sti
xchg
cs
call
mov
push
adc
jg
jne
adc
call
push
ja
aaa
lods
push
xchg
sbb
jge
lret
ds
cmpsb
xchg
mov
lock
mov
insl
fnstsw
push
push
insb
mov
mov
inc
cmp
daa
sbb
inc
jno
pushf
cmpsb
mov
filds
mov
in
push
js
xor
mov
push
mov
pushl
and
decb
js
mov
or
and
mov
push
or
sti
sbb
fiaddl
je
test
jb
negl
push
mulb
inc
repnz
and
data16
call
jl
push
out
outsl
je
or
fwait
mov
lods
in
loopne
jae
push
push
or
push
lcall
pop
arpl
mov
inc
sahf
in
xchg
imul
shlb
outsl
sbb
mov
adc
mov
fs
push
push
arpl
mov
adc
es
mov
mov
std
nop
enter
inc
mov
movsb
adc
xor
pop
sub
pop
fiadds
mov
xchg
ficoml
cld
xchg
add
jl
cmp
cmc
ljmp
pop
push
test
insb
and
lret
jo
push
mov
pushl
mov
or
frstor
lret
push
push
decl
cmpsb
jl
lret
ret
cld
imul
enter
outsl
les
and
pusha
jg
je
mov
mov
mov
jne
mov
shlb
icebp
iret
rcrb
sub
push
pop
test
mov
stos
xor
aam
andb
cltd
arpl
mov
sahf
cld
add
negb
icebp
and
test
insl
jns
pop
or
ret
mov
dec
sbb
mov
sbb
cmp
je
add
ss
loopne
and
xchg
adc
cmp
xor
ljmp
lods
inc
dec
int3
fnsave
ja
inc
mov
dec
jne
xchg
pushl
sub
in
out
add
insl
loop
inc
jnp
push
aad
je
imul
aas
stc
fbstp
mov
xlat
cmp
test
andb
movlps
mov
inc
inc
dec
aad
es
mov
jbe
xchg
jmp
push
mov
psubd
fdiv
cmc
bnd
jecxz
fs
sbb
pushf
push
cmp
lret
loope
fldl
loopne
xor
mov
into
mov
pop
pop
popa
hlt
fbld
movsb
loop
dec
or
test
sahf
add
xor
and
xor
jecxz
mov
les
push
pop
xchg
test
arpl
andl
aaa
fwait
mov
mov
outsl
shrb
das
lds
jl
ror
in
inc
or
push
imul
mov
xchg
rolb
add
add
aam
jl
roll
lret
inc
gs
pop
xchg
push
sbb
dec
adc
add
psrad
sbb
sub
add
mov
xor
mov
stc
pop
data16
std
call
mov
push
leave
icebp
push
adc
mov
mov
add
add
div
sub
test
adc
xor
and
push
incb
push
js
jle
mov
and
mov
imul
cmp
mov
call
xchg
leave
pop
mov
aam
xchg
sub
cmpb
decb
scas
je
add
inc
add
arpl
cli
test
lcall
in
push
mov
ret
and
xor
ljmp
loopne
xchg
mov
xchg
push
xchg
sub
enter
aad
fdivr
int
xchg
stc
hlt
pop
shrb
sarl
in
mov
mov
js
fists
pop
mov
push
inc
xor
and
mov
xchg
rcll
mov
pop
and
fstpt
mov
dec
pop
jg
mov
ret
dec
call
mov
outsb
imul
insb
fsub
mov
lret
ret
in
xor
cmpps
add
scas
sbb
jp
adc
jle
imul
and
mov
fwait
ret
call
xchg
lahf
scas
push
push
ficoms
or
cmpsl
add
test
mov
pop
inc
mov
inc
aam
std
pop
pop
fs
outsl
jae
les
stos
sbb
sbb
lods
sbb
adc
cmp
mov
cmp
notl
rol
xchg
add
imul
mov
adc
out
mov
fildl
shll
rolb
mov
fstl
xchg
scas
cli
xchg
pop
and
insl
jecxz
jmp
enter
mov
shll
insl
and
jp
daa
jb
in
cld
xor
push
std
idivb
shll
popa
and
mov
lds
into
addl
xchg
into
decb
push
cmc
fbstp
ja
ret
stos
pop
push
out
adc
sbb
testb
cli
icebp
adc
adc
dec
test
call
loopne
sahf
aas
jno
ljmp
jnp
outsb
pop
add
frstor
mov
push
jae
mov
mov
es
sbb
dec
sbb
xchg
add
lcall
adc
stos
cmpsb
mov
test
xchg
xchg
add
cli
adc
pop
add
inc
shl
aaa
mov
cmc
mov
outsb
cs
lock
shrb
push
addr16
xchg
adc
je
popa
test
adc
cmpsl
lods
adc
out
cmp
adc
and
call
shlb
das
mov
xchg
adc
clc
cli
movb
sarl
popa
in
pop
cmp
push
mov
filds
sbb
mov
and
loopne
pop
push
jnp
out
mov
jle
mov
movsl
jno
add
inc
dec
fadds
fs
inc
insb
pop
push
add
adc
les
mov
cld
add
rolb
inc
sti
cld
in
scas
inc
clc
xchg
sub
stos
cwtl
pop
lcall
sbb
inc
adc
mov
push
lods
cli
mov
sbb
xchg
outsb
out
xchg
aam
pop
cmp
xchg
sar
fadds
movsl
fwait
jp
shlb
lods
and
rcll
push
mov
popl
push
outsl
jo
loopne
push
mov
pop
bound
lret
sti
imull
xchg
and
inc
or
mov
test
call
lock
push
insb
les
std
push
pop
xchg
adc
in
and
frstor
sub
pop
and
cmp
jmp
sub
pop
and
mov
push
or
add
loope
stos
jbe
xlat
out
test
add
repnz
pop
rorl
sub
stos
pop
adc
mov
jge
incb
xchg
sbb
sbb
mov
arpl
inc
stos
outsb
mov
jne
add
arpl
lock
adc
sbb
inc
pop
inc
pop
jb
pop
mov
mov
dec
pop
pop
dec
call
adc
out
cmp
out
or
ljmp
into
adc
hlt
fcoms
lods
movzbl
pop
outsl
mov
js
dec
hlt
mov
and
popf
cmp
jo
push
bound
mov
push
ja
aad
pop
fdivl
mull
and
xor
jg
mov
lods
jle
and
in
test
push
jb
pop
add
ret
sub
out
xor
fistl
imul
cmp
lock
adc
movsl
push
sbb
pop
cld
inc
jmp
adc
add
or
leave
outsl
mov
push
dec
ja
sub
adc
pop
cld
pop
fucom
inc
cmove
sahf
aad
cmp
or
jb
int
daa
push
cli
pop
clc
pop
mov
inc
and
dec
adc
adc
js
cld
std
mov
sbb
in
mov
xlat
adc
add
inc
loopne
fwait
xchg
mov
inc
outsl
sub
cltd
adc
mov
mov
push
and
mov
or
mov
inc
pop
push
pop
in
movsb
or
add
inc
pushl
pusha
jmp
cmp
push
push
aaa
dec
or
adc
mov
or
cmpsb
add
push
adc
fucomp
inc
push
lods
decl
inc
and
or
mov
imul
and
or
cld
or
jl
pop
lcall
xlat
fstpl
push
popf
and
lea
inc
out
adc
or
in
mov
inc
hlt
inc
mov
push
xchg
or
mov
sub
xchg
out
or
ss
add
pop
mov
lcall
jmp
divb
xor
bound
lea
adc
mov
enter
dec
and
add
push
rcrl
fimull
push
lcall
jae
clc
xchg
dec
out
mov
in
sbb
es
das
adc
mulb
cmp
mov
shlb
rorl
or
mov
call
push
sti
pop
inc
sub
mov
add
push
push
mov
call
mov
sbb
mov
pop
arpl
push
pop
mov
cmpsb
adc
aas
sbb
or
les
fldt
push
stos
jp
sbb
push
pop
jecxz
js
xchg
iret
test
lods
hlt
xor
neg
jge
add
adc
push
xchg
shrb
mov
xchg
mov
fistpl
mov
js
add
inc
shl
enter
push
js
push
cmp
cli
sbb
jecxz
mov
mov
test
popa
aaa
ja
test
fstl
sbb
pop
fstpl
aad
mov
dec
xlat
push
add
inc
jo
je
outsb
or
daa
cmp
call
jne
adc
push
push
sub
scas
dec
arpl
gs
xchg
dec
scas
sub
fistl
and
outsl
imul
pushl
cs
adc
in
add
inc
cs
js
mov
je
inc
icebp
cmc
lea
test
fiadds
lods
mov
sbb
xchg
sbb
lods
seta
add
sbb
sbb
sbb
xor
mov
inc
loopne
std
jg
cmpsb
xor
cld
test
addl
lock
pop
lea
pop
sbb
clc
adc
jecxz
inc
loop
mov
int3
lea
mov
sarl
es
mov
sub
dec
xchg
inc
shrb
movhlps
or
adc
mov
inc
insl
xchg
ret
dec
sub
mov
adc
ja
pop
je
aas
push
cmp
lds
add
jle
test
push
inc
call
dec
clc
pop
add
test
aad
aad
mov
and
int
cmp
xor
ret
add
inc
adc
add
and
and
add
push
mov
sub
pop
clc
xchg
stos
add
les
mov
adc
xchg
push
jecxz
mov
mov
mov
cld
ficoms
std
rcrl
sbb
mov
adc
push
mov
inc
aaa
and
repz
adc
push
jbe
mov
push
jne
lds
loop
adc
jae
mov
jmp
outsl
jg
imul
adc
push
daa
cli
adc
mov
adcl
test
xor
push
pusha
and
xchg
aad
xchg
or
outsb
jl
std
mov
or
xchg
std
mov
fstpt
pop
outsl
pusha
sub
hlt
jg
adc
arpl
mov
pop
xchg
sub
loop
outsb
cld
outsb
xchg
xor
mov
inc
mov
jl
aaa
andb
addl
cld
or
xor
clc
jg
pop
adc
stos
adc
frstor
push
mov
mov
adc
push
mov
mov
repz
dec
fldt
jl
cltd
xchg
cmc
mov
add
jno
mov
pop
cmp
dec
in
loop
adc
mov
aaa
cmp
cmp
add
rclb
push
in
out
push
sahf
cmp
mov
clc
pop
mov
push
leave
testb
fwait
push
leave
test
hlt
in
and
cs
out
loope
dec
push
sub
mov
add
cltd
in
cmp
loope
sti
fwait
imul
arpl
jmp
jg
jg
nop
mov
ffreep
mov
arpl
fsubl
push
xor
jbe
or
arpl
aam
or
mov
mov
pop
sub
add
dec
or
sbb
jle
add
xchg
loopne
push
pop
out
into
push
cmp
ret
fcomip
push
test
push
clc
and
call
pop
sbb
pop
fists
outsl
jmp
cs
xchg
jle
adc
sub
jns
stc
jl,pt
or
insb
sbb
popf
or
inc
pop
gs
dec
jge
push
in
jmp
sub
fists
scas
nop
mov
in
or
xchg
test
mov
or
or
dec
adc
xor
call
test
jae
and
xor
stos
int
daa
in
add
push
jb
loope
and
sbb
or
cmp
or
pop
inc
or
aaa
pop
jo
adc
lock
or
pop
les
adc
icebp
enter
sbb
and
fisubl
mov
cmpsl
aas
cli
or
push
imul
movsl
je
test
mov
xor
mov
adc
adc
dec
test
mov
or
dec
or
push
push
adc
in
movsl
pop
push
dec
hlt
adc
or
add
decb
in
or
or
xchg
cmp
adc
loope
dec
inc
push
xchg
push
mov
mov
inc
lret
enter
dec
std
mov
bnd
push
and
cmp
scas
aam
cs
adc
push
pop
xor
jecxz
mov
nop
repz
cs
push
or
mov
out
pop
mov
andl
bound
cld
dec
incl
lea
mov
xchg
push
xor
xorl
mov
mov
mov
xor
jp
mov
sub
rclb
mov
daa
cmp
das
rcr
and
mov
ror
dec
pop
sbb
movsl
push
ret
cmpsw
sbb
clc
mov
sub
insb
xchg
stc
iret
test
xor
and
outsb
jmp
in
add
dec
pop
adc
jg
inc
sbb
mov
hlt
jae
inc
es
jp
or
lcall
cmp
pop
jg
mov
push
mov
adc
sbb
pop
adc
push
xchg
push
pop
mov
aam
shll
pop
jmp
sbb
adc
loopne
lods
dec
into
xorl
sbbb
mov
cmc
adc
mov
and
shrb
mov
dec
inc
jge
movntq
gs
popa
jo
cmp
call
sub
test
pusha
adc
repz
js
mov
mov
jbe
adc
cmc
std
lahf
sbb
mov
or
adcb
jne
shrl
test
push
pop
std
outsb
jp
or
ljmp
inc
loope
rorl
jmp
int3
ljmp
add
dec
dec
cwtl
or
xchg
mov
decl
cmpsl
aaa
pop
dec
icebp
cmp
dec
ror
fucom
sbb
pop
mov
push
dec
push
popf
sbb
addr16
rcll
or
mov
adc
sub
scas
popl
fidivrs
mov
add
repnz
mov
jecxz
push
gs
xchg
dec
shrb
lds
insb
sahf
orb
daa
cmpsl
push
lds
mov
jge
jb
loop
sbb
inc
xchg
mov
fwait
dec
out
movsb
int3
mov
rcrl
test
cmp
xlat
jno
adcb
ja
sbb
shll
movsl
cs
xchg
add
add
outsl
fsubrl
aad
rcrb
add
jno
std
xchg
fisttps
sbb
or
xor
orb
push
or
inc
and
mov
idivb
adc
xorl
cs
iret
and
fcoml
push
pop
add
cmp
sub
aaa
ss
xchg
sarb
or
adc
popf
rcrl
pop
ret
fwait
xchg
icebp
jnp
scas
in
lcall
adc
and
loopne
lods
lods
push
js
pop
fdivs
mov
imul
pop
or
dec
dec
andb
mov
test
jecxz
jmp
call
cli
inc
adc
push
aam
cmp
push
cs
lods
daa
mov
in
outsl
fdivrl
mov
and
jb
mov
xchg
ja
fucomi
push
pop
js
nop
or
add
jns
inc
mov
or
aad
mov
cmp
cmp
mov
mov
mov
and
popf
xor
sahf
xor
cld
inc
add
imul
int3
test
and
cmp
dec
dec
pop
lahf
stos
mov
jae
xchg
sub
decl
ljmp
loopne
xchg
pop
in
xchg
mov
fdivs
pop
std
jg
xor
or
repnz
fimuls
xor
stos
cltd
and
add
mov
pop
cld
addr16
mov
xchg
and
clc
cmp
rorb
adc
jp
push
aas
inc
std
das
movsl
addb
add
add
testl
xorb
or
push
loop
add
aaa
pop
jns
clc
inc
inc
jecxz
mov
push
or
push
outsl
rorb
stc
stc
ret
sbb
and
jnp
icebp
push
stos
roll
jbe
mov
or
jo
cmp
push
arpl
fistps
jno
cmp
inc
in
add
cld
sbb
push
in
and
mov
out
mov
xor
lods
xor
outsb
jge
insl
outsl
push
inc
dec
shll
movsb
push
sbbl
add
movsb
sbb
sbb
leave
sahf
std
loope
mov
test
fldl
fnsave
and
repnz
pusha
sub
call
lahf
jne
lcall
xchg
push
pop
mov
push
push
pop
js
pop
push
bound
incl
mov
mov
xchg
inc
iret
jecxz
pushl
add
fistpl
jns
ret
loope
outsl
jge
aam
or
add
fadds
mov
ljmp
mov
xchg
or
mov
jns
jno
cmp
adc
aaa
fcom
jb
test
and
mov
stos
scas
pop
mov
and
push
outsl
mov
mov
cmc
bound
cwtl
iret
test
outsb
lock
ds
dec
add
add
mov
fistl
sarb
and
jmp
gs
loope
stc
push
pusha
nop
arpl
push
inc
fistpll
test
idiv
aaa
out
ret
aad
sahf
test
xchg
jge
icebp
cmpsb
xorl
or
aad
fisttps
test
sub
adc
and
xor
push
push
inc
jge
fwait
mov
loop
into
icebp
outsl
jmp
cwtl
and
into
call
mov
out
mov
add
mov
mov
pop
dec
or
aas
imul
xor
pop
jb
jle
xchg
push
jp
or
and
jl
rclb
movl
push
in
push
outsl
pusha
jecxz
or
int3
iret
sub
outsb
lock
cmpsl
push
int
nop
and
cmp
sbb
mov
add
test
mov
test
insl
jle
ljmp
inc
mov
pop
lock
decl
push
rolb
mov
jmp
les
mov
jno
ljmp
or
cld
pop
and
pop
cld
mov
or
mov
mov
les
pop
lcall
addr16
cmp
sbb
lahf
and
or
mov
jnp
mov
push
and
sbb
dec
roll
fscale
pop
pop
repnz
sti
lock
fucomip
fs
xchg
mov
filds
sub
fs
ljmp
push
pop
pop
cli
mov
test
add
cmc
shrb
rolb
xor
xor
mov
mov
dec
push
loop
cmp
jo
jns
dec
mov
test
insl
movsl
mov
hlt
dec
inc
cmp
push
dec
incl
cmp
popf
xor
mov
movsb
pop
mov
cmp
test
cmp
incl
dec
js
ss
and
cld
notb
imul
ret
jno
xchg
cmp
mov
xchg
pop
pop
mov
insl
inc
stos
nop
clc
subl
js
xchg
push
cmp
inc
mov
pushf
mov
or
lods
push
mov
in
sbb
sbb
andb
icebp
movsl
pop
dec
xchg
fisubs
cli
mov
in
fists
in
sti
cmp
mov
aad
add
inc
loope
mov
clc
test
popl
jbe
mov
fdivr
push
ja
hlt
and
mov
pop
add
push
addr16
fneni(8087
add
mov
movl
out
bound
lahf
dec
fisttps
push
icebp
mov
mov
xchg
mov
cmp
popf
insb
ljmp
sub
incl
cli
lock
push
sub
push
arpl
call
std
dec
sbb
inc
xor
jmp
pop
or
inc
pop
sub
inc
push
or
lcall
in
xchg
ja
mov
and
scas
lret
pop
in
mov
push
mov
mov
mov
mov
jno
cmpsl
mov
cmc
movsl
incl
xchg
enter
mov
movsl
mov
sbb
sbb
xchg
pop
push
mov
cmp
pop
cmpsb
outsb
push
jmp
fcompl
and
xchg
in
jle
adc
adc
pop
mov
dec
add
xlat
lods
mov
adc
pop
test
cs
push
pop
pop
and
loopne
ret
push
adc
pop
outsb
add
bound
fscale
dec
dec
push
sarl
inc
fcmovu
sbbb
sbb
cmp
mov
sbb
push
clc
mov
dec
push
adc
or
xor
icebp
rcl
adc
sbb
xchg
cmp
dec
mov
xor
imul
lahf
insb
arpl
mov
pop
das
push
push
rolb
je
xchg
or
inc
inc
inc
xor
push
lahf
fsubrs
xchg
je
inc
cli
out
fidivrl
jecxz
lock
das
inc
pop
mov
in
insl
insb
inc
aam
mov
jge
add
jp
mov
lods
sbb
cmc
das
add
outsl
jg
cmpsb
insb
jecxz
adc
sbbb
fildl
into
sarl
das
cld
sub
xchg
mov
xor
cmp
stc
stos
mov
cmc
xor
adc
mov
sarb
cld
lock
lret
push
imul
or
and
shll
jne
push
outsb
fmuls
mov
aaa
mov
xor
or
shlb
test
mov
ss
jecxz
and
xor
dec
mov
jge
xchg
add
imul
mov
inc
adc
mov
mov
shlb
clc
and
fmul
jae
adc
out
jg
sarb
sub
fmull
bound
movsb
mov
mov
adc
sub
mov
mov
loopne
les
out
pop
mov
out
sbb
xor
push
jecxz
pop
call
aad
add
iret
test
mov
xchg
lcall
iret
into
jmp
inc
add
shll
dec
roll
mov
add
add
clc
push
jno
mov
dec
xor
pop
je
inc
mov
pop
rcr
aam
cmc
add
das
bound
push
fcompl
jp
arpl
ljmp
cltd
loope
inc
inc
loop
inc
sub
sbb
lret
int3
push
dec
pop
or
fcompl
sbb
lea
dec
sub
notb
pop
int
dec
sub
imull
or
cmp
push
in
outsl
jnp
mov
push
xor
adc
ret
pop
fdiv
jmp
xor
adc
inc
add
mov
arpl
xchg
mov
lods
fistpl
xchg
stos
scas
or
or
pop
test
inc
mov
xchg
fidivrs
add
lahf
ja
sub
add
subl
lret
sti
jg
aaa
cmc
ljmp
adc
jbe
mov
movsl
inc
push
cmc
cmc
add
cli
outsl
fst
pop
add
xor
shlb
sbb
aad
int3
hlt
xor
cmp
mov
call
mov
outsl
insb
add
cld
sub
test
inc
mov
dec
stc
decb
daa
ljmp
inc
fcomps
std
and
xchg
or
pop
mov
jo
sub
lret
mov
and
inc
shrb
loop
setg
jo
rolb
loopne
pop
inc
fisubrl
inc
adc
mov
inc
sti
iret
inc
and
pop
push
fsubr
adc
cmp
sahf
pop
xchg
mov
fucomip
lret
add
sub
fwait
scas
jbe
push
mov
mov
stc
sub
stos
cs
pusha
dec
popf
loop
clc
outsl
pop
js
xchg
orl
or
cmpsb
fdivs
xchg
lcall
cld
out
sbb
stos
inc
loop
insl
xlat
testb
movb
enter
cmp
in
scas
push
jecxz
call
and
cmpsb
mov
dec
mov
outsl
cmpsl
movsb
dec
mov
or
inc
dec
imul
mov
or
cmpsb
add
lea
mov
enter
cs
mov
adc
pushf
stos
mov
fwait
xchg
jmp
pop
xchg
adc
in
ds
aaa
fdivr
jg
clc
cmc
popa
cltd
lods
cwtl
xor
dec
mulb
in
cmp
daa
mov
push
scas
xchg
mov
jbe
push
ret
lods
hlt
push
adc
inc
add
rcrb
in
aaa
outsl
fwait
add
inc
push
mov
sub
cld
ss
lods
add
mov
into
or
ds
xor
push
fdivrp
sbb
add
sub
movsb
xchg
mov
sbb
cld
mov
mov
incl
mov
int
pop
push
std
or
jg
sub
scas
dec
add
add
mov
adc
xchg
arpl
mov
in
push
or
outsl
inc
lds
repnz
lock
pop
jnp
rcrl
mov
fnsave
add
pop
int
int
idiv
lods
icebp
push
adc
mov
jbe
xchg
lahf
or
aad
loop
cwtl
push
and
or
fnstsw
popa
xchg
mov
mov
icebp
das
add
stc
xchg
and
inc
into
pop
movsl
clc
incl
sbb
sbb
bound
mov
push
aad
xchg
and
loop
push
add
rorb
fiaddl
and
mov
inc
sti
sbb
mov
sbb
sbb
shrl
lret
mov
ljmp
cwtl
or
fs
mov
enter
stos
push
je
jne
notb
fildll
ss
or
push
cmpsb
shlb
daa
sarl
adc
shll
cld
repz
repz
cmpsb
jns
das
xchg
mov
mov
subl
mov
mov
push
pop
sub
mov
loope
ljmp
sbb
mov
aam
mov
sub
insb
das
adc
pop
add
movl
test
adc
mov
xor
jg
pushf
push
test
leave
cli
inc
shll
sub
mov
sahf
outsb
enter
cltd
test
add
rol
hlt
mov
push
loop
in
jmp
xor
addl
adc
into
fidivs
and
rcrl
push
outsl
mov
cmp
test
rclb
sbb
sti
sbb
outsl
push
test
and
jno
inc
add
pop
jp
sub
dec
mov
in
int
scas
push
sub
sub
fldl
dec
lods
mov
orl
add
xchg
add
dec
inc
mov
lock
adc
mov
mov
mov
jne
dec
dec
ss
dec
and
xchg
sbb
xchg
push
loopne
mov
mov
lods
inc
jecxz
lock
std
adc
or
add
mov
mov
lods
into
insb
pop
or
cmp
or
xchg
pop
mov
cmc
pop
xchg
push
sbb
mov
leave
adc
sti
pop
test
cwtl
mov
push
jns
lahf
cli
test
imul
in
inc
sti
lods
mov
and
rcll
xor
and
daa
push
xor
lret
mov
mov
xor
test
decl
or
dec
cmc
movsl
inc
and
inc
inc
mov
mov
fistps
add
and
jecxz
cmp
movsl
int3
jbe
insb
lcall
lahf
dec
jl
decl
dec
js
imul
mov
clc
adc
push
rorb
data16
push
ss
test
insl
pop
sarl
aam
add
leave
std
movsl
out
mov
cltd
out
test
or
das
push
and
in
test
and
lret
fidivrs
xchg
shlb
scas
jbe
ja
add
mov
pop
popf
imul
push
sub
xchg
div
pop
or
cmp
rolb
icebp
ja
push
adc
clc
in
lock
jo
sti
rol
loop
or
aaa
adc
jo
aaa
xchg
xchg
pusha
arpl
test
xchg
jo
or
sbb
push
mov
lds
add
ret
test
cld
mov
inc
cmp
loopne
or
retw
pop
sub
add
xchg
lods
mov
mov
sub
push
ret
stos
ljmp
cwtl
ret
mov
pop
sub
pxor
ljmp
xchg
or
dec
and
dec
mulb
shlb
sbb
pop
mov
push
dec
cmc
aaa
mov
xchg
pop
aas
sub
popa
sub
sbb
push
sahf
call
dec
dec
mov
fdivr
mov
jae
int
clc
daa
push
sbb
test
mov
test
mov
addb
cmp
inc
inc
push
jns
xchg
fcomps
jne
and
jge
inc
mov
cld
out
or
lods
testl
mov
decl
push
pop
pop
mov
xchg
daa
inc
mov
leave
int
js
jbe
add
pop
ljmp
ljmp
xor
insl
fsubrl
sub
mov
jl
push
mov
mov
data16
into
hlt
jecxz
scas
test
loopne
jns
mov
lds
clc
roll
ja
mov
or
scas
adc
jecxz
mov
clc
sbb
sbb
inc
push
dec
std
fst
sbb
jo
push
jg
push
jne
sub
and
pop
pusha
mov
add
pop
sbb
sub
fiaddl
jae
in
decb
fcmovnu
ret
repnz
fs
push
sbb
out
scas
ja
pop
dec
lcall
add
cmp
xchg
push
addr16
cmp
sbb
stos
fistl
in
push
or
xchg
test
shrl
cmp
xorb
adcl
movsl
or
enter
mov
aaa
pop
push
std
push
mov
fsts
jmp
push
cmp
cmc
mov
pop
push
inc
mov
pop
sbb
mov
push
pop
or
sahf
imul
movsb
loop
inc
add
mov
popf
push
insl
pushf
test
and
adc
adc
push
push
jmp
xchg
cli
out
mov
or
fdivrp
xchg
sub
fnsave
ljmp
pushf
inc
cmpsb
cmp
clc
push
bound
push
pop
roll
mov
cmp
mov
jbe
jmp
loop
out
je
mov
push
cmp
shll
das
sbb
insb
movsl
jp
inc
mov
popa
out
repnz
mov
shlb
test
pop
std
lds
xor
les
jl
or
ret
addr16
push
jne
jnp
add
push
add
mov
mov
insb
out
leave
in
push
sub
outsb
add
fistl
xchg
or
call
pop
xor
sub
sub
pop
jnp
push
insl
test
test
nop
aaa
push
jo
cmp
push
arpl
push
mov
sbb
sub
or
cmc
test
std
sbb
scas
shr
fwait
test
mov
or
sbb
andl
hlt
fists
or
xor
add
in
cmpsb
cli
in
push
add
inc
jbe
test
loopne
or
jns
adc
clc
fwait
sub
dec
add
and
add
out
insl
cmp
adcl
in
das
aam
test
jne
xor
mov
mov
mov
mov
popf
cmc
sbb
sbb
lock
enter
imul
mov
cli
ljmp
inc
or
aam
scas
lds
mov
jb
inc
popa
std
jo
lret
cld
ja
andb
mov
jae
inc
sub
pop
aam
mov
mov
add
mov
xchg
mov
adc
outsl
sahf
mov
dec
shlb
sub
xchg
dec
out
fwait
stos
mov
jo
jb
inc
les
in
mov
test
dec
insb
stos
hlt
pop
loopne
ficomps
mov
mov
mov
mov
push
mov
pop
scas
pop
mov
xor
ficomps
lcall
push
dec
and
aaa
jmp
aas
pop
mulb
hlt
decl
or
test
movsb
sub
jl
fcmovu
jae
clc
or
pop
das
xchg
add
pop
rcl
sbb
and
fcomip
icebp
jo
sbb
push
test
pop
pusha
es
data16
push
pop
adc
sbb
and
fisttpll
cmpsb
dec
jae
mov
fisubl
aam
sub
mov
jg
cmp
adc
movsl
mov
fwait
je
lea
sub
sti
or
jno
mov
xchg
or
pusha
lock
cmp
jno
pop
lock
mov
in
push
cli
jg
or
jnp
xor
adc
lea
ja
pop
icebp
shrb
sbb
or
mov
dec
enter
sub
test
or
aad
call
pop
jmp
fwait
adc
pop
mov
insb
pop
sbb
or
pop
scas
lret
lahf
mov
cmp
add
mul
sahf
mov
mov
lock
es
pop
or
ljmp
sub
popa
inc
je
add
lret
mov
xlat
sbb
mov
dec
fistps
icebp
pop
sbb
cmp
pop
aam
inc
bound
lods
xchg
pop
jmp
cmp
sbb
scas
jmp
into
ljmp
xor
push
inc
ret
pop
dec
pop
xor
addr16
fildll
xchg
mov
arpl
sbb
rcll
fsubrl
xor
movsl
cmp
push
mov
jmp
mov
shll
adc
mov
push
inc
mov
cmp
push
mov
insl
in
mov
sbb
mov
and
pop
or
in
pop
js
jo
cmp
popa
hlt
jl
inc
flds
mov
imul
push
andl
hlt
mov
xor
push
pop
mov
cmpsl
mov
addr16
popf
xchg
mov
ds
andl
mov
mov
scas
dec
cmp
pop
push
jmp
adc
js
push
push
loop
test
in
jae
stos
dec
add
in
mov
push
addr16
scas
fadds
lret
fimuls
dec
subb
and
loopne
inc
jb
push
jmp
or
cld
jge
pop
xor
fldt
imul
xor
cmpsl
les
pop
mov
mov
add
clc
mov
cmpl
pop
mov
daa
scas
mov
xor
out
xchg
shlb
movsl
adc
arpl
clc
and
insl
push
jnp
or
mov
and
add
in
and
insl
dec
sbb
or
add
dec
int3
mov
sub
push
push
inc
inc
fcompl
pop
jecxz
xchg
xchg
popa
cmpsb
or
dec
xchg
push
ss
loope
ds
and
mov
inc
mov
mov
pop
mov
cli
repnz
cmpsl
loope
outsl
mov
push
sbb
sbb
inc
and
push
jle
add
sub
mov
mov
sbb
mov
xchg
push
pop
lcall
xlat
mov
lea
mov
push
outsb
xlat
or
pushf
fcompl
and
ds
add
inc
fdivs
ret
sub
or
notb
mov
icebp
mov
jbe
inc
mov
cmpsb
sbb
or
adc
mov
outsl
sub
hlt
add
incb
sar
dec
adc
aas
fsubr
in
push
pop
xorb
pop
mov
add
pop
stc
cmpsb
mov
insb
mov
or
adc
mov
push
repz
rdmsr
and
add
inc
loop
lods
imul
adc
fimuls
inc
fldt
mov
scas
and
inc
xor
bound
xchg
inc
pop
enter
test
les
ja
mov
cmpsl
les
je
sbb
subl
jmp
adc
arpl
push
or
daa
jo
mov
push
mov
inc
dec
mov
sbb
std
push
mov
pop
les
sti
and
movsb
sbbb
mov
ljmp
and
add
stc
pop
movsb
out
pusha
inc
rorb
or
hlt
ret
lods
add
sub
mov
sbb
les
xchg
adc
loop
jbe
mov
mov
imul
jp
or
mov
sub
push
insl
add
and
je
sbb
or
push
sarl
pop
jecxz
or
call
xchg
es
push
outsb
das
pushf
jns
clc
fdivl
jns
dec
ret
test
pop
inc
ljmp
ja
add
cmp
dec
adc
popa
sti
loope
adc
or
fs
jg
and
or
scas
iret
scas
mov
outsb
fcmovnbe
jle
outsb
inc
pop
cmp
jne
xchg
pusha
insl
decl
dec
pushf
mov
xchg
mov
scas
add
xchg
shlb
xchg
sub
cmpsb
cli
cld
mov
movsl
das
mov
jge
xor
inc
out
or
pop
fstpt
in
push
dec
push
dec
pusha
flds
cmp
out
xorl
adc
ja
jno
jecxz
fimuls
xchg
incl
ret
xchg
jmp
das
mov
sbb
sbb
fdivs
mov
std
das
xchg
or
sub
mov
daa
icebp
clc
mov
test
sbb
pusha
imul
call
inc
pop
pop
push
mov
push
das
pop
push
or
mov
mov
dec
out
call
stos
inc
mov
xor
jo
xor
xor
sbb
push
movq
mov
adc
test
or
fwait
orl
in
sub
push
lock
adc
mov
adc
adc
into
add
push
fsts
sbb
dec
sbb
cmp
dec
sarl
add
mov
mov
andb
pop
xor
aaa
mov
dec
in
inc
xchg
push
loope
popa
pop
mov
aam
and
and
xchg
mov
aad
mov
jnp
lea
push
mov
push
mov
cwtl
and
aas
addb
je
orb
push
pop
aam
aaa
xlat
out
push
bound
in
cmp
mov
jmp
sbb
xor
test
gs
fwait
ror
add
fsubs
inc
jge
push
not
iret
outsl
sub
out
adc
jg
xchg
pop
mov
fcmovbe
rcr
std
inc
add
in
aad
mov
sarb
xor
pop
inc
and
shrl
inc
inc
mov
dec
int
adc
pop
fimull
bound
xchg
les
add
out
iret
xchg
test
mov
jns
fcoms
inc
das
mov
cmc
push
sbb
stos
add
dec
fdivrp
pop
mov
cli
inc
pushf
inc
mov
mov
mov
into
mov
adc
xchg
push
add
loop
fists
push
rolb
jg
mov
rorb
cld
mov
mov
mov
mov
add
sub
cwtl
outsl
std
pop
js
jmp
ret
pusha
mov
xor
mov
std
nop
ds
mov
pop
inc
ret
lods
mov
xchg
and
mov
std
pop
mov
lret
jl
sub
fsub
or
push
subl
mov
cltd
lcall
outsb
cld
das
lret
mov
jno
cmp
int3
ja
mov
mov
and
cmp
jo
out
iret
adc
jae
ret
sahf
or
jne
dec
pop
cmp
mov
push
insb
jo
stos
mov
jno
mull
cld
sub
inc
stos
ret
mov
iret
cld
movsb
lea
and
cmp
outsl
mov
mov
cmp
mov
jns
addr16
ret
mov
cmp
push
cmpsl
and
inc
lds
or
clc
jge
arpl
pop
andb
push
dec
push
jae
pushf
out
pop
fistpll
sahf
xchg
jl
test
and
test
fidivs
in
mov
and
xor
mov
or
xchg
arpl
stos
lds
cli
mov
andb
test
pop
lcall
and
adc
outsl
jge
test
test
leave
lret
loope
sbbl
stos
mov
loopne
ret
mov
cmp
shlb
mov
adc
leave
cmc
mov
inc
or
push
and
insb
inc
pop
or
int
movsb
add
gs
and
movsl
gs
xorb
stos
dec
fnstsw
pusha
mov
addl
mov
aaa
ljmp
jmp
mov
ja
pusha
negb
or
and
mov
sub
adc
fs
dec
fstpt
fs
incl
jle
fmull
adc
nop
dec
int
inc
mov
add
outsl
insb
mov
int3
xor
jo
mov
jl
aam
inc
mov
sti
lea
stos
mov
push
mov
lea
fistps
jmp
or
mov
jbe
or
push
and
mov
daa
and
scas
notb
jecxz
sbb
out
or
stos
and
jbe
push
mov
mov
fildll
sbb
adc
movsb
std
or
es
push
cwtl
and
pop
jbe
out
lahf
add
cltd
xor
mov
loop
sub
lret
repnz
lahf
in
sbb
xlat
push
lea
cld
push
sub
push
jns
xlat
adc
add
mov
fcomip
pop
shlb
jno
adc
pop
ljmp
and
cld
mov
cmp
add
xchg
cld
rolb
jmp
call
jle
call
push
insb
jbe
pushf
test
push
sub
mov
push
fildll
jle
mov
sahf
sbb
mov
add
mov
mov
pop
cltd
mov
loop
in
into
xchg
push
daa
add
cmpsl
or
lahf
cwtl
mov
movsl
inc
rolb
sub
imul
mov
sub
adc
lret
mov
popf
sbb
sub
call
cltd
and
add
rcrb
shrl
arpl
scas
cmp
les
pop
andb
pop
fmul
add
outsl
push
dec
mov
pop
xchg
das
sub
jge
jg
insl
stos
jb
lock
inc
stos
into
outsl
cmpsl
xchg
or
jo
inc
sbbl
mov
scas
bound
cmc
sub
pop
es
cmc
das
adc
xor
and
js
out
mov
xor
cld
sbb
mov
xchg
adc
push
cmp
mov
sti
or
sbb
dec
mov
add
scas
pop
inc
incl
pop
or
ja
orl
incl
jg
stos
imul
pop
xor
jmp
nop
adc
sbb
into
sub
repnz
loope
outsl
sbb
outsl
pusha
testl
xchg
adc
mov
pop
mov
mov
clc
lret
fstpt
xchg
pushf
add
pop
mov
push
jg
jb
outsb
mov
loopne
and
add
push
call
mov
inc
cwtl
lcall
push
lock
stos
les
data16
filds
push
outsl
stos
ljmp
pop
inc
mov
xlat
fidivrs
stc
pop
add
xchg
pop
mov
call
mov
push
insl
movb
mov
fwait
rcl
icebp
or
in
mov
add
mov
add
cmp
dec
mov
mov
popa
imul
rolb
rclb
inc
in
sbb
es
mov
mov
jle
jno
cs
loope
cmpsb
cmp
lods
out
xlat
pushf
push
push
cmpb
jo
xchg
mov
pushf
and
xchg
jp
cwtl
xchg
lods
test
subps
in
adc
pusha
inc
nop
sub
int
inc
fcmovnbe
fimull
in
or
outsb
je
clc
adc
jae
mov
popa
repnz
pop
icebp
push
xchg
adc
addl
jl
inc
and
movsb
mov
rcr
clc
shrb
fstpt
stos
xor
or
pop
cltd
aas
lret
rclb
mov
int
jge
inc
clc
incl
fistpll
ja
rolb
pop
sbb
clc
decb
xchg
and
cmc
shlb
out
fisttps
dec
fcmovbe
pushf
dec
outsb
daa
shrl
fildll
push
xchg
movsl
xchg
leave
or
and
add
loope
jg
mov
stos
and
lcall
mov
adc
lds
sub
adc
in
clc
aaa
xchg
enter
int3
dec
push
or
adc
pop
fld
stos
enter
sub
rcll
add
je
popl
mov
loope
adc
jl
fidivl
hlt
sbb
test
fisubl
lea
sub
insl
mov
pop
enter
add
mov
cmpsl
pop
aad
lods
loope
loopne
sbb
mov
cs
mov
xchg
mov
cwtl
cltd
mov
add
mov
push
pop
inc
sub
imul
aam
es
mov
add
repnz
fcomip
ret
xor
mov
mov
stc
push
adc
lock
jo
ljmp
lock
stc
push
inc
clc
cmp
movb
jmp
mov
test
inc
cmpsl
jb
clc
inc
mov
shrl
lcall
test
gs
out
repnz
xchg
in
nop
mov
sbb
mov
pop
fdiv
add
in
push
mov
and
adc
pop
and
fst
push
mov
sbb
inc
dec
sub
sarl
orb
push
adc
jg
loopne
nop
or
out
mov
jg
stos
mov
sub
lret
nop
jg
sub
and
into
and
loopne
lods
in
xchg
sbb
fbstp
add
leave
mov
pop
loopne
clc
cmc
cli
cmp
adc
pop
rol
addr16
mulb
sbb
cs
mov
addb
pop
popf
fidivl
inc
jo
add
dec
movsl
sbb
in
sbb
mov
push
mov
cmp
icebp
xor
aad
cmp
sub
sti
xor
jbe
inc
aas
add
fs
pop
sub
dec
lea
shl
or
pop
xchg
mov
sub
mov
sarl
xor
hlt
outsl
faddl
cmp
sbb
mov
fsubrp
lcall
in
push
je
sub
dec
sbb
and
mov
sar
adc
pop
orl
loop
aas
xchg
icebp
inc
push
jmp
xchg
je
shl
in
fcmovnbe
and
xor
ja
pop
stos
mov
xlat
int
mov
inc
inc
rorl
aas
insl
cmc
xor
jnp
fisubs
sub
sub
or
add
or
pop
insl
jb
shlb
adc
sti
iret
fistps
test
mov
pop
sub
fidivs
mov
aam
jb
mov
adcb
shr
jg
pop
out
pop
clc
mov
push
dec
in
ss
sub
cld
jne
push
mov
arpl
test
adc
mov
xchg
mov
xor
insb
outsl
sub
lea
xor
inc
ds
and
popa
subl
rorb
inc
jmp
push
movnti
decb
outsl
hlt
aaa
ret
dec
mov
jns
dec
psllq
sti
mov
sub
or
divb
xchg
fucomi
aam
lcall
stc
push
adc
mov
stos
daa
lahf
scas
mov
lods
pop
gs
push
pop
mov
add
or
mov
add
mov
popf
adc
adc
daa
dec
test
sub
lea
movsl
mov
fistpl
sbb
daa
sub
mov
jne
xchg
add
inc
movsl
pushl
sub
and
add
adc
insl
rolb
pop
xor
jo
push
inc
mov
pop
sub
cs
xor
push
xor
jg
js
push
mov
sahf
mov
adc
sub
std
test
mov
icebp
test
lods
push
repz
aas
pop
cmp
scas
div
pop
add
sbb
mov
pop
inc
call
cmp
and
jb
push
out
or
jno
sbb
test
test
mov
fidivrs
inc
ja
addr16
pushf
or
notb
jo
pop
int3
dec
lret
aas
mov
lcall
lret
or
push
xor
jae
insb
movsl
xchg
outsb
fldl
int3
xor
and
or
cld
sbb
nop
mov
or
call
inc
imul
sub
cmp
sti
mov
into
sbb
inc
fdivr
rcll
and
subb
xor
lcall
jge
loope
test
ret
jge
movsb
pop
jmp
push
inc
into
mov
mov
inc
jo
cmp
aaa
pop
mov
cmc
ja
or
out
sub
add
push
outsb
loopne
stc
fisubrs
sbb
inc
push
lods
loope
lock
ss
mov
xchg
dec
sub
xor
pop
cmp
lods
adc
xchg
outsl
ljmp
jmp
je
fcomp
mov
js
add
lds
or
xor
mov
clc
mov
mov
inc
std
push
inc
test
or
sar
adc
and
xchg
lahf
push
les
push
aaa
cltd
xchg
sti
mov
aaa
push
adc
and
leave
mov
sbb
adc
ret
adcb
out
fidivl
inc
inc
jns
dec
cmp
pop
imul
add
mov
cmp
ljmp
mov
inc
dec
or
mov
shrb
mov
mov
xor
loope
out
inc
sbb
pushl
stos
insl
pop
cmp
cmp
inc
mov
mov
pop
jl
adc
mov
loop
mov
inc
pop
in
sub
js
dec
mov
add
xchg
fsubrs
das
mov
jns
inc
imul
push
dec
jne
xor
les
mov
mov
rol
or
push
and
add
jg
cmpsb
jg
xchg
mov
movsb
dec
pop
add
cmp
lcall
pop
or
inc
nop
cmpl
mov
jno
sbb
addl
mov
loope
cld
movsl
negb
enter
movsb
mov
pop
aaa
pop
add
inc
push
sbb
sub
je
fildll
pop
pop
sbb
xchg
and
dec
mov
enter
and
pop
xchg
shr
push
jge
lahf
cmpsl
les
lock
cmp
xchg
sbb
call
pop
mov
mov
das
icebp
leave
mov
mov
or
jg
push
aad
push
inc
jb
mov
jge
jne
mov
adc
loop
into
inc
test
mov
clc
dec
push
scas
cmp
mov
sub
inc
cltd
fs
adc
adc
ljmp
lea
stos
pop
call
xchg
push
lea
inc
lea
insl
pop
and
in
mov
xchg
shll
mov
inc
or
add
addr16
push
in
mov
xchg
push
xchg
push
push
mov
incl
adc
xor
xchg
and
lea
cwtl
xchg
sub
dec
cld
orl
lret
or
bound
and
fidivs
mov
rcr
pop
jg
jno
sub
aad
sub
mov
hlt
mov
imul
and
lods
sub
rolb
adc
cmpsb
inc
cwtl
loopne
mov
mov
faddl
jecxz
mov
stc
dec
xor
adc
enter
leave
popa
loope
or
or
filds
rolb
and
cmp
fcmovnu
jl
adc
push
inc
popa
mov
or
push
cmp
or
mov
pop
mov
inc
popw
xor
dec
push
aad
push
loopne
insl
aad
call
stc
insb
or
mov
inc
movsl
mov
in
mov
push
or
sbb
lock
xchg
mov
sub
add
adc
int
dec
sub
es
in
enter
mov
xchg
xchg
dec
adc
int3
loop
adc
push
jg
xchg
movsl
mov
jecxz
xor
adc
cld
add
popa
cmp
fnstcw
loope
loop
cmc
jl
addr16
adc
fdivrl
imul
inc
add
cmp
test
adc
and
and
or
pop
push
mov
lahf
pop
pminub
pusha
add
and
sbb
lret
faddl
int
fdivr
mov
fistpll
jmp
push
andb
sub
or
testb
pop
call
notb
push
jmp
sbb
mov
adc
xchg
cli
xor
xchg
dec
dec
push
and
in
scas
mulb
int3
inc
stos
pop
leave
adc
adc
movl
leave
dec
add
iret
mov
mov
mov
mov
xchg
rcr
es
and
jb
lret
push
test
inc
cmp
aam
shlb
pop
lods
cmpsl
or
adcl
popa
adc
cld
adcl
inc
insl
jbe
xchg
sbb
mov
dec
arpl
in
mov
pop
mov
cltd
test
in
ficoml
loopne
cmpsb
mov
int
mov
pop
loop
push
and
ja
pop
jge
sub
cli
sub
sub
xchg
mov
mov
and
sti
je
pusha
js
mov
repnz
std
scas
push
imul
test
jg
jns
test
adc
jne
jecxz
cs
mov
ret
in
fidivrl
mov
adc
ret
push
shrb
rolb
or
sub
jo
rcrb
ficoml
dec
rcrl
lods
xchg
mov
mov
jbe
cs
jb
dec
adc
fistpl
mov
jecxz
push
in
dec
inc
aad
sub
out
xor
or
aaa
test
push
sbb
aaa
lock
fs
popf
cmp
ds
scas
ret
xor
adc
repz
iret
inc
and
or
mov
push
gs
das
int3
push
aaa
sbb
and
lcall
imul
shrb
sbb
lret
in
mov
sti
cmp
pop
ret
ret
pop
dec
mov
xor
scas
mov
mov
add
imul
in
sti
push
sar
cmp
and
pusha
or
mov
fildll
ds
lods
push
mov
xor
push
mov
mov
ret
movsl
outsb
into
addb
outsb
pop
inc
loope
hlt
xorl
or
arpl
fiadds
xor
repnz
popa
jbe
add
lahf
or
adc
mov
in
dec
int
enter
aad
pop
scas
xchg
inc
popa
imul
leave
loop
ljmp
lea
push
lock
mov
stos
or
addl
mov
lock
aam
cmpb
cmc
jle
fdivrp
xchg
das
stos
push
xchg
ds
hlt
push
call
inc
lret
lcall
aam
cli
ljmp
dec
lea
scas
out
jmp
jg
in
jecxz
movsl
pop
mov
hlt
or
fwait
push
imul
ror
sbb
cmpl
ds
dec
aad
sbb
add
das
or
add
push
xchg
aam
xor
mov
push
notl
adc
lahf
mov
subl
mov
mov
cmp
mov
push
push
xchg
push
jecxz
mov
ss
sbb
dec
and
sub
std
lea
pop
jb
aam
inc
xchg
fidivl
mov
notl
adc
les
roll
jno
pusha
pop
popa
cmp
lods
lcall
cmp
jmp
fnstcw
add
sbb
idivl
outsb
cli
stc
inc
mov
sub
ss
xchg
idivb
mov
ret
adc
inc
add
pushf
addr16
jl
add
fwait
testb
sbb
add
cwtl
mov
rclb
or
inc
lret
and
xor
insl
mov
mov
dec
or
test
and
jg
decb
mov
cmp
or
mov
ficompl
mov
jo
mov
in
std
inc
pop
icebp
fbstp
roll
mov
push
xchg
add
push
mov
sub
push
jl
pop
scas
insl
jne
mov
cmp
pop
mov
je
loopne
jno
inc
pop
sbb
sub
sti
stc
xchg
mov
sub
jge
negb
nop
jnp
dec
xchg
mov
subl
add
pop
pusha
lcall
or
mov
xchg
in
adc
clc
in
inc
cltd
sbb
xor
jmp
inc
mov
pop
std
fcmovnbe
jae
les
cmpsl
add
in
mov
fldl
dec
xor
mov
enter
dec
hlt
jns
add
incb
pushf
sbb
xchg
bound
ja
jl
es
xor
sub
and
sarl
mov
test
stos
loop
fstl
sub
es
jle
icebp
push
sbb
aam
cmp
les
or
mov
cmpb
orl
out
rclb
icebp
or
aaa
dec
jge
mov
lahf
data16
das
cmp
and
fstpl
nop
imul
imul
mov
out
pop
push
test
cmp
filds
push
stc
and
sub
cmp
das
std
lods
rcrl
xchg
sbb
shll
popf
aaa
push
xchg
cmp
in
mov
push
in
pop
fbstp
push
sub
mov
cmp
pop
aas
out
mov
std
xchg
adc
pop
xor
push
lock
cmc
mov
sbb
lret
fidivl
lods
outsb
mov
mull
adc
jo
mov
ds
push
mov
inc
pop
faddl
sbbb
xor
sub
xchg
fisubl
test
jl
test
cli
mov
sub
push
xchg
adc
sbb
sbb
fldenv
pop
pop
add
cmp
pop
gs
cmp
pop
inc
cmp
and
xchg
add
or
lret
mov
in
pusha
stos
push
push
sahf
mov
fwait
adc
xchg
aaa
xlat
jno
sub
or
sub
mov
fidivrl
inc
push
push
xorb
mov
orl
add
sbb
das
mov
fimuls
dec
out
cmp
mov
add
stc
push
xor
mov
divl
and
bound
ljmp
push
outsb
jmp
inc
jno
jo
cmp
pop
aas
pushf
xchg
mov
call
xor
xchg
adc
mov
jmp
mov
test
mov
cmp
aam
and
aad
insl
pop
mov
ss
inc
call
mov
push
loopne
push
stos
test
iret
xor
add
add
jne
xlat
dec
lods
adc
lods
mov
sub
mov
push
pusha
adc
ss
inc
dec
fcoml
push
iret
xor
pop
pop
inc
mov
push
das
dec
or
cwtl
xchg
push
dec
outsb
or
jne
iret
and
movsl
lret
mov
xchg
mov
mov
pop
mov
pop
lds
mov
inc
ljmp
pop
pop
aam
jbe
mov
push
xor
stos
out
daa
lret
aas
jp
mov
inc
loope
mov
push
jns
std
fisttpl
or
lcall
xchg
xchg
je
pop
cmp
mov
lahf
call
test
call
push
adc
lods
mov
jb
imul
shll
pop
mov
rolb
sub
mov
shl
mov
or
pop
lock
mov
or
add
orl
mov
sub
cmp
das
push
fmull
and
nop
cwtl
mov
das
std
mov
vaddsd
movsb
sub
lock
jae
sub
aaa
mov
clc
popf
jns
cmovs
lods
dec
lret
push
pushf
jle
ds
push
and
jmp
lods
fldt
lcall
jmp
push
mov
dec
leave
movsb
nop
or
xor
dec
mov
es
ds
fld
std
and
lods
jbe
xor
rcr
dec
setb
ret
dec
or
lret
cmpl
mov
dec
inc
inc
mov
push
xchg
inc
sub
mov
repnz
add
xor
fisttpl
xchg
mov
loop
sub
aad
push
in
pop
jne
cld
push
push
mov
insb
clc
ret
mov
pusha
push
gs
jmp
cli
shl
mov
xchg
hlt
rorl
xchg
dec
icebp
in
dec
es
mov
daa
add
cmc
mov
sbb
in
fnsave
jb
popf
sub
jmp
sub
sub
aaa
push
inc
mov
ljmp
jp
push
ljmp
dec
fistpl
sar
notl
dec
dec
adc
mov
scas
jns
shll
mov
push
jmp
xchg
ljmp
dec
mov
mov
xor
xor
shll
mov
ljmp
pop
sbb
push
pushf
sub
es
adc
xchg
mov
mov
push
mov
stos
loope
mov
fs
add
or
call
fildll
movsl
mov
jae
lcall
inc
int
push
or
sbb
fcomi
repz
and
stos
mov
jmp
dec
xor
jae
insl
arpl
test
into
push
dec
aam
testb
sbb
sub
test
out
or
mov
ljmp
test
add
push
inc
mov
test
testb
lahf
icebp
mov
test
sub
adc
and
or
mov
dec
js
xlat
les
in
lahf
jp
add
icebp
push
lds
lahf
aam
ss
mov
fistps
ds
push
add
sub
mov
int3
mov
in
mov
les
bound
aad
and
xchg
lods
scas
push
cmp
stos
das
sbb
and
stc
inc
movsl
ljmp
enter
mov
pop
cld
das
mov
jg
cmp
mov
addb
xchg
andl
lea
scas
stos
aas
sbb
lret
or
lds
sahf
fstpt
pop
jns
xchg
jecxz
dec
inc
rol
mov
mov
xor
inc
popa
outsl
scas
cmp
jmp
jbe
jp
add
fidivl
imul
in
xor
lock
fistpll
cmc
out
ss
pop
xor
add
mov
test
inc
das
adc
cmc
mov
decl
clc
inc
inc
shll
nop
sbb
adc
sub
into
or
lods
test
sbb
sbb
std
popf
ret
scas
ret
add
add
cltd
stos
push
pushl
je,pn
lods
rol
push
call
push
data16
sbb
dec
sbb
or
sbb
imul
cmp
jle
push
lcall
xor
test
fwait
jmp
inc
push
das
imul
orb
mov
int
imul
pushf
push
xor
mov
push
test
add
dec
sub
loop
push
push
fistps
movsb
aaa
insb
jp
mov
outsb
mov
out
jp
stos
sbb
push
jmp
add
adc
jecxz
xor
fdecstp
jae
mov
hlt
push
mov
dec
int
aam
cmp
xchg
dec
fucom
lods
xchg
push
and
movsb
add
movsl
test
cmp
test
mov
in
imul
pop
mov
fstl
push
lds
inc
lret
xchg
movsl
notl
mov
ds
adc
mov
call
and
mov
push
jge
xchg
lahf
push
cwtl
dec
pop
and
outsl
je
mov
cmp
or
into
fists
das
frstor
fldt
xchg
mov
orb
xchg
ds
cs
js
xor
aaa
pop
xorb
or
insl
scas
fimuls
sub
xchg
jp
push
sbb
or
dec
mov
enter
dec
xor
xchg
or
xlat
jbe
fdivrp
pop
cmp
test
fisttpl
aaa
mov
mov
je
jmp
cmpsb
dec
in
or
dec
push
faddl
cmp
shll
jle
sti
icebp
lods
dec
pop
in
aaa
sarl
cmp
das
xor
and
or
mov
xlat
sub
push
ror
push
and
imul
mov
cs
test
sbb
lods
inc
aaa
mov
or
rcpps
hlt
mov
cmp
sbb
or
and
movsb
adc
rolb
nop
and
push
pop
jbe
pop
inc
and
mov
sub
adc
xorl
popf
or
repz
out
add
testb
iret
das
and
lock
add
or
dec
cltd
and
or
adc
idiv
add
lret
shld
pop
pop
lods
mov
ljmp
popa
or
sbb
mov
scas
test
outsl
push
dec
pop
mov
jb
gs
orb
xchg
push
pop
xchg
or
lods
das
sbb
cld
jne
xor
mov
add
xchg
outsb
in
es
enter
pop
out
dec
xchg
or
mov
dec
cld
lods
and
xchg
jbe
push
jg
cmpsb
sahf
adc
xor
jle
jo
mov
test
imul
add
jnp
dec
ficoml
jecxz
pop
gs
lcall
ds
pop
inc
adc
adc
sub
adc
inc
arpl
jmp
out
mov
mov
xchg
inc
lods
cli
in
daa
stos
fisttps
test
mov
rolb
xor
dec
popf
mov
xor
add
cmc
ret
loop
pop
jae
call
cmp
xchg
imul
repnz
xchg
inc
add
test
sti
inc
lret
dec
icebp
adc
push
mov
adc
test
push
sbb
jmp
clc
xor
repnz
lods
in
dec
lds
or
sbb
test
push
or
rcrl
clc
pop
or
push
cld
jmp
or
in
jge
pop
aaa
mov
cmp
xor
pop
dec
xchg
test
add
out
clc
dec
int
clc
inc
clc
es
mov
ds
pusha
jp
ss
add
ret
shll
sbb
clc
push
xor
call
stc
fs
push
in
sbb
es
dec
cmpsb
jns
xor
jl
ret
leave
scas
pop
loope
mov
xor
pop
scas
aas
mov
jle
in
pop
ror
inc
cli
adc
lea
jns
jg
dec
sub
std
data16
or
es
xchg
lods
je
xor
sbb
push
cmpsl
mov
sbb
iret
dec
mov
xchg
fwait
mov
push
xchg
xlat
mov
notb
rcr
inc
sbb
mov
pop
dec
push
mov
sbb
pop
xchg
dec
cmp
outsl
cld
dec
movups
cmc
push
sub
push
and
mov
push
pop
mov
and
insl
pop
aad
cmovp
dec
xor
stc
push
mov
out
jns
aam
fwait
sbb
lret
mov
jp
dec
addr16
dec
mov
mov
push
mov
pop
mov
pusha
icebp
jge
out
push
sbb
push
sub
sbb
test
jmp
sub
cli
mov
mov
inc
bound
adc
roll
mov
aam
mov
jecxz
orb
sub
push
or
jg
fwait
js
sub
bound
cmc
cwtl
cmc
inc
or
add
icebp
ja
fistl
dec
mov
arpl
into
icebp
dec
sub
stos
lods
pop
mov
add
add
pop
loopne
dec
dec
loope
test
mov
shrb
ret
push
pop
dec
fwait
ss
hlt
pop
sbb
sahf
aas
out
cmp
inc
sti
jno
sub
jbe
mov
mov
mov
lods
adc
add
xchg
pushf
mov
add
jge
and
fmuls
jg
faddl
repnz
pop
jns
mov
mov
jb
testb
loopne
inc
sub
mov
push
pop
pop
cmp
rcll
fdivp
repnz
and
negb
pop
inc
add
jge
dec
jnp
gs
push
dec
mov
sub
push
mov
jb
push
stos
push
or
xchg
lret
dec
or
xchg
inc
roll
adc
xorl
pop
cmp
mov
and
and
loopne
sarl
and
or
in
orl
enter
mov
cmp
decl
jmp
adc
cmc
jecxz
mov
pop
stc
push
scas
insl
fldt
xor
daa
mulb
add
loop
inc
mov
sub
test
mov
or
lcall
vmovhps
xor
mov
pushf
out
add
push
cvttps2pi
loop
and
in
push
xor
adc
lea
fisubl
ljmp
push
subb
mov
outsb
test
gs
add
push
std
jg
or
fildl
ds
pop
fcomps
mov
sar
mov
das
shlb
inc
or
hlt
clc
xchg
or
js
cmpl
xlat
cwtl
jae
sub
or
test
pop
daa
dec
es
loop
fdivl
add
mov
inc
sub
aad
sbb
xchg
jg
mov
loopw
push
push
adc
xchg
sub
xchg
sbb
fisttps
inc
or
out
fcoml
mov
mov
cmpsb
inc
dec
and
xorb
clc
lret
je
jge
push
xorb
and
xor
push
mov
js
dec
pop
fisttpl
pop
loopne
insl
push
imul
imul
sbb
or
inc
fisubs
pop
sbb
mov
sbb
xor
js
inc
and
pushf
scas
sar
lods
pop
call
push
pop
divl
lret
mov
push
andl
inc
push
mov
psubb
notl
aaa
mov
lods
fnstcw
add
mov
push
ret
push
clc
jmp
xchg
push
jae
out
adc
movsb
insb
fcmovb
call
sahf
out
dec
add
mov
pop
or
fistl
mov
or
movsb
cmpsb
jecxz
xor
adcb
in
ja
rolb
decl
clc
mov
lea
fs
mov
xchg
add
inc
repnz
or
inc
pop
mov
enter
xor
add
int
mov
xor
inc
sub
inc
dec
scas
ss
mov
cs
aad
fstps
pop
shrl
test
movsl
iret
je
xchg
xor
cmc
inc
jmp
test
into
mov
mov
aaa
fidivrs
xor
lahf
xor
je
pop
sub
outsb
dec
lds
testl
or
dec
sbb
sbb
adc
sahf
mov
pop
sub
jae
sahf
mov
or
aaa
pop
pop
sbb
sub
leave
iret
xorl
cli
ror
ficomps
sbb
sti
pop
inc
gs
cmpl
lds
sub
or
jb
add
and
push
js
ljmp
sub
test
sbbb
mov
call
and
xor
pop
fucom
mov
or
jmp
jo
inc
add
cmp
movsb
jns
imul
lahf
fstps
pop
enter
call
sbb
xor
test
mov
mov
xor
rolb
dec
adc
ss
mov
ss
stos
or
popf
and
in
pop
hlt
jmp
negb
aad
in
data16
or
mov
mov
gs
bound
dec
xchg
stos
or
mov
outsl
jp
stos
adc
into
in
inc
mov
inc
lock
adc
mov
xchg
sbb
or
loope
fdivl
xlat
sbb
imul
jmp
fisttpll
sbb
je
adc
add
mov
or
fcomi
mov
mov
mov
and
push
pop
pop
cmp
or
mov
adc
xor
adc
pop
jbe
cmpl
dec
rclb
cmp
jg
mov
mov
fcmovnb
dec
adc
push
mov
out
fiaddl
add
mov
or
rolb
sbb
lock
incb
leave
daa
insb
out
push
push
fildl
jns
sub
sub
adc
mov
adc
add
or
int
mov
in
cmp
ss
ret
inc
sar
bound
lea
push
cmp
dec
jge
pop
js
jp
xor
cmp
cmc
call
ja
ljmp
and
cltd
cmp
mov
sub
jo
aaa
jg
lcall
movsb
clc
add
add
outsb
push
xor
ja
jno
fcmovne
imul
xor
sbbb
xor
subb
shll
dec
mov
push
out
mov
sbb
popf
mov
outsb
shlb
ficomps
arpl
mov
adc
xchg
jmp
mov
imul
mov
push
imul
subb
mov
mov
adc
pop
add
js
sbb
push
sbb
cli
insl
and
adc
test
out
ror
cwtl
xchg
mov
cmp
or
cs
jo
dec
push
mov
or
cmp
sub
orl
lret
ja
add
sub
fists
stc
dec
or
dec
je
decb
or
pop
inc
add
mov
fldt
add
orl
into
sbb
push
insl
aaa
std
ret
mov
insl
out
insb
mov
int3
cmp
icebp
xchg
mov
dec
sbbl
pop
mov
mov
sar
xor
orl
aas
lahf
sub
fldl
je
push
data16
shll
nop
xchg
test
push
mov
push
mov
aaa
pop
xor
xor
push
cmp
idivb
pop
test
pop
adc
mov
inc
mov
sbb
sub
xor
cmpsl
and
cmp
ror
or
insl
mov
pop
add
push
or
push
fidivs
dec
rorb
mov
shrb
jge
repz
fs
mov
das
adc
out
in
outsl
test
and
out
fxch
sahf
mov
xchg
shlb
add
mov
jg
std
cld
outsb
ljmp
or
add
cmpl
push
inc
stc
andl
fbstp
or
stos
inc
cmp
ljmp
lea
aam
idivl
fsubs
jb
mov
loopne
dec
fadd
mov
fildll
sahf
jno
mov
fildl
adc
push
xchg
scas
fmul
cld
lcall
ret
dec
cli
jle
loope
aaa
mov
mov
mov
xor
jl
sub
das
push
ret
movsl
ss
jle
adc
adc
sbb
add
or
fidivrl
push
mov
fstl
pop
dec
jb
mov
loopne
clc
sbb
sahf
sub
ret
adc
ficomps
sbbl
addr16
push
push
push
xor
jmp
lea
stos
dec
call
enter
pop
jbe
add
loope
arpl
jmp
add
shrl
rol
mov
push
xor
jbe
xlat
testl
out
and
bnd
fwait
or
push
inc
pop
nop
or
in
test
lcall
cmp
scas
cmp
add
cmpl
push
cmc
sub
cwtl
jmp
and
inc
pop
add
arpl
cwtl
dec
test
lods
push
cltd
ljmp
push
mov
add
cld
loope
mov
pop
lea
jmp
pushf
jge
sub
sub
add
call
mov
fisubl
add
outsl
push
loope
mov
add
mov
push
stos
adc
in
clc
mov
ja
add
dec
and
add
jae
add
jbe
in
jg
enter
rorl
pop
adc
or
fistl
cld
test
push
dec
test
shrl
mov
or
aam
sub
aam
dec
lcall
mov
dec
popa
sub
test
push
fwait
outsl
ret
pop
clc
add
das
sbb
stc
sbb
sbb
jo
outsl
or
rolb
cmovae
rcrl
mov
or
pop
js
stos
cmp
jl
push
adc
icebp
mov
pop
leave
mov
sahf
xchg
sub
jge
sti
mov
push
cmp
add
cld
divl
jle
insb
add
int3
fadds
sbbb
pop
loope
fists
mov
sub
sub
repnz
jne
xor
rorb
mov
lods
aaa
jbe
fimuls
cli
jbe
cmpsb
outsb
js
jo
mov
shlb
sub
xchg
fistpl
into
add
lods
and
roll
js
insb
fwait
std
mov
jmp
jecxz
cmp
jne
pushl
das
inc
dec
mov
jg
loop
aaa
fwait
push
cmp
mov
test
dec
adc
clc
mov
testl
mov
jnp
test
dec
xchg
xchg
xor
pop
out
sub
ja
xchg
inc
das
stc
or
out
adc
push
ss
jmp
mov
je
out
call
pop
pop
movsb
push
ljmp
xor
mov
aad
dec
cmp
cmp
jmp
inc
sbb
test
dec
mov
sub
and
inc
mov
sbb
js
mov
scas
dec
xchg
or
inc
shl
out
test
mov
lock
mov
add
leave
sbb
fdivl
jl
hlt
daa
ret
fldt
push
daa
push
add
iret
xor
fs
cmpl
daa
test
adc
enter
incb
sarl
pusha
aad
xor
xchg
std
mov
call
sti
xchg
cmp
pop
pop
push
cli
in
mov
mov
sar
mov
outsl
test
and
cltd
xor
dec
dec
xchg
call
or
mov
jg
mov
or
dec
jge
cmp
ljmp
push
push
ret
xlat
movsl
out
pop
mov
jae
cli
cmp
fildll
aam
repz
push
xchg
mov
icebp
jecxz
lock
inc
mov
call
add
aaa
sub
lods
inc
aaa
jmp
mov
cli
insb
inc
jmp
push
inc
pop
sbb
ja
insl
cld
push
sahf
inc
fcompl
vaddpd
sbb
cli
or
dec
mov
pop
in
pop
adc
cmpl
jbe
loop
mov
jmp
setp
imul
sbb
mov
add
sti
cmpsb
int3
hlt
jp
das
cmp
in
xchg
in
out
es
mov
outsb
fbstp
jl
in
cli
scas
sti
add
fwait
cwtl
mov
sbb
pop
cmpsb
in
enter
cmp
or
lret
movb
dec
mov
fsubrp
repz
fdivrl
cld
xor
ret
or
or
enter
push
mov
mov
sbb
or
mov
mov
mov
add
inc
xor
push
ss
mov
into
mov
cli
ljmp
inc
sbb
pop
cs
into
cmpsl
inc
jmp
fsubr
or
and
punpckhwd
jbe
pop
cli
outsl
lods
mov
xor
rorl
and
aad
fsubrl
int
xchg
mov
push
clc
jle
mov
pop
lahf
out
scas
addr16
sub
sbb
addr16
sbb
mov
mov
fisubrl
add
pop
adc
mov
das
sbb
enter
lock
mov
or
movsl
dec
lock
or
and
out
inc
push
mov
out
imul
loopne
fiadds
clc
pop
mov
and
pop
and
dec
lahf
test
mov
es
fcoms
popa
hlt
je
pop
lock
in
roll
int
xor
mov
adc
mov
mov
iret
lods
sub
mov
jmp
jbe
inc
mov
leave
jae
cltd
subl
divl
subb
imul
mov
mov
add
sub
shrb
pop
mov
adc
mov
fidivrs
sbb
or
sub
cmpsb
call
imul
loop
sbb
sub
and
jge
or
movsb
in
pop
mov
add
mov
xchg
inc
fwait
sbbl
enter
pop
and
push
inc
jb
inc
lods
pop
push
mov
ljmp
ljmp
rorb
add
idiv
jp
pop
mov
lods
push
ficoms
cmp
int3
addr16
dec
scas
out
decl
dec
sbb
aad
pop
popa
pop
popf
mov
add
sub
pop
flds
push
push
mov
pop
push
sbb
xor
sarb
xor
loopne
adc
or
shlb
or
out
mov
aaa
fldcw
push
or
push
mov
icebp
inc
loope
or
jnp
mov
pop
push
es
stos
sub
jae
cmp
sbb
sbb
mov
sub
xchg
push
and
loope
pop
push
fsubl
sahf
lahf
cmp
dec
mov
clc
mov
jl
movsb
jmp
mov
jb
pop
ljmp
xchg
xchg
jne
sbb
aam
clc
movsb
fistpl
and
rcrl
xchg
shl
xchg
sbb
int3
and
push
out
mov
cli
mov
push
lret
cmpsl
cs
sbb
pop
stos
push
sarb
jp
xchg
jge
inc
jbe
mov
and
mov
pop
daa
add
jo
cltd
xor
adc
mov
or
cmovg
push
xchg
lea
or
cli
popa
add
sub
xchg
popa
in
add
pushf
addr16
jo
lock
push
loope
fiaddl
push
das
inc
add
inc
pop
popa
mov
sbb
call
in
test
and
mov
pusha
test
xor
repz
test
mov
hlt
shl
arpl
test
push
das
outsl
js,pt
jno
mov
clc
mov
rcl
xor
jo
xchg
faddl
leave
or
das
fs
xchg
sub
cs
add
adc
mov
lods
lods
or
cmp
lret
or
shlb
dec
push
inc
lock
addr16
repnz
clc
pop
add
addr16
add
scas
jle
insb
xorb
xor
lock
jecxz
fwait
testb
popa
push
add
sub
fsubs
aad
inc
ljmp
or
add
cs
jle
ror
shlb
in
push
mov
push
jp
adcl
mov
aaa
ljmp
xor
pop
outsl
outsl
sub
es
jbe
pop
xor
dec
cltd
mov
mov
les
and
and
ljmp
lcall
add
aaa
shlb
fists
push
inc
addl
mov
hlt
imul
pop
mov
sub
push
or
push
mov
lods
jmp
pop
adc
rorl
in
pmaxub
mov
lret
fldt
insl
loopne
negl
xor
test
out
dec
inc
dec
fdivrl
ja
mov
push
test
inc
mov
cmp
jae
push
sub
shlb
push
mov
scas
rclb
icebp
fistpll
xchg
ss
jae
fstps
lods
cwtl
add
aaa
jle
push
out
inc
add
pop
ret
test
fwait
or
pop
jns
adcb
fisttpll
sysexit
rolb
sahf
shl
add
cmc
shlb
loop
lret
mov
lahf
lods
shlb
test
mov
xor
sbb
push
inc
repnz
pop
pop
and
popf
and
inc
int
xor
dec
inc
dec
mov
popa
inc
pop
mov
cld
sar
xor
stos
sub
hlt
movsl
sbb
jno
inc
in
inc
inc
jecxz
mov
aaa
test
repnz
xchg
notl
cmp
rorl
in
je
dec
mov
adc
xor
sub
pop
cli
lahf
call
inc
add
test
hlt
cmp
cmpsb
call
mov
inc
add
sbb
dec
rcl
fldt
mov
add
inc
mov
sbb
xchg
xchg
mov
or
push
inc
lea
leave
adc
subl
jb
lahf
lcall
mov
shrl
fiaddl
xchg
rcrb
mov
outsb
mov
dec
or
das
xchg
imul
scas
loopne
xchg
insb
dec
popl
leave
ja
das
jl
dec
jbe
pop
arpl
mov
xor
sbb
inc
mov
mov
and
pop
cmp
imul
xchg
in
push
and
ja
ffree
les
adc
imul
das
mov
mov
test
pop
call
cmp
enter
inc
add
bnd
pushl
adc
out
add
inc
cli
test
shll
lods
adc
cltd
rorl
inc
mov
jp
inc
jb
cltd
pop
sub
jmp
xor
mov
into
arpl
lea
mov
test
cmp
loope
sbb
shll
pop
mov
mov
jle
sbb
jb
scas
mov
cmpsb
jnp
jl
mov
jmp
int3
cmp
push
add
cmp
sub
outsl
mov
xor
ds
enter
push
sbb
sub
mov
mov
das
mov
jmp
data16
pop
jbe
in
adc
and
sbb
and
dec
xlat
mov
jg
out
mov
jo
movsb
push
outsl
inc
lcall
fstpt
or
iret
sbb
push
loop
jmp
imul
pop
xor
mov
dec
or
popa
in
fidivs
mov
jae
stos
inc
int
sti
or
lods
out
loop
mov
insb
sti
push
adc
lcall
stos
ljmp
jmp
jne
jp
push
jg
cmpb
cmp
stos
pop
lods
lock
pop
aaa
and
aad
test
icebp
pop
incb
dec
jbe
pop
mov
sbb
pop
dec
xchg
mov
cld
add
movsb
mov
add
js
insl
out
sub
cs
sub
mov
mov
in
pcmpeqd
stc
ficoms
mov
jl
ljmp
divb
or
shrl
lods
repnz
jo
dec
push
orb
add
fs
sahf
lea
cld
sbb
arpl
mov
jne
mov
or
mov
leave
mov
ss
mov
xor
sar
mov
xlat
inc
adc
loop
dec
mov
shrl
aas
std
add
roll
pusha
push
orl
sbb
mov
mov
add
ret
mov
mov
mov
cld
mov
mov
mov
int
ja
daa
xchg
jge
sbb
rcll
mov
shll
js
adc
mov
mov
fisttpl
push
iret
xor
push
xor
lock
ret
addl
bound
loop
lods
je
fbstp
loopne
dec
cmp
in
int3
add
dec
je
sbb
dec
pop
add
sbbl
maxps
jl
mov
mov
lret
call
test
pop
lods
inc
std
sub
ffreep
andb
add
lea
push
pop
xchg
shl
rcl
lds
fcmovnb
enter
lahf
in
mov
lcall
add
sbb
lret
or
cmpsl
shlb
mov
int3
and
lods
and
dec
cmp
jnp
and
pop
je
mov
sbb
mov
imul
or
outsl
ja
shrb
ja
lret
lds
pop
pop
push
popf
sbb
xchg
mov
jae
and
mull
ret
ljmp
pop
andb
rcrb
test
sub
lds
out
subl
pop
rcrb
orl
test
outsb
or
pop
movsl
iret
jge
cmp
fsubr
fsubrs
inc
mov
dec
outsl
das
fnstsw
xor
jp
in
xor
out
cmp
jle
mov
jecxz
sarl
push
mov
mov
icebp
inc
adc
cmpsb
sbb
dec
inc
sub
fiadds
mov
jo
loopne
dec
xor
inc
sbb
in
push
in
push
jl
xchg
rcl
gs
loop
ror
adc
bound
out
mov
stos
and
pusha
dec
lret
je
das
sbbl
push
mov
roll
nop
sbb
gs
xor
jg
mov
mov
repnz
repz
out
jns
add
lds
scas
mov
pop
inc
jbe
dec
adc
into
jno
mov
xchg
test
and
push
sbb
mov
ss
mov
es
out
rorl
outsl
popa
or
jl
sbb
nop
pop
or
sahf
outsl
iret
test
jb
lret
scas
es
aaa
les
orb
lret
inc
push
lcall
fucomp
pop
fimull
mov
push
aam
stos
cs
cmp
inc
mov
and
icebp
in
dec
aaa
mov
into
call
lock
jl
xor
jbe
push
fimuls
or
pop
pop
sub
or
mov
inc
lahf
das
test
jge
ljmp
or
cmp
cmc
gs
aad
xlat
jmp
mov
push
cmp
adc
push
sbb
imul
sbb
lcall
sbb
jno
jb
popa
jmp
mov
add
leave
inc
sarl
cmp
pop
cwtl
xchg
lods
lock
jmp
or
and
xchg
cs
push
movsb
hlt
loope
sbbl
cld
push
add
sub
push
mov
jge
jl
cltd
cli
push
frstor
aaa
ret
mov
cmp
cld
and
push
xor
lcall
nop
aaa
push
mov
sarb
bound
mov
adc
cltd
call
fiaddl
clc
xchg
lods
out
or
cli
jmp
cmp
xor
fs
jnp
fcmovbe
rolb
adc
or
jg
gs
xlat
scas
xchg
out
adcb
mov
xor
stc
mov
js
mov
popaw
pop
gs
mov
ret
jmp
outsb
xchg
xchg
or
loopne
mov
test
dec
fs
clc
dec
test
dec
sbb
inc
dec
sub
cmp
mov
sbb
mov
mov
xor
hlt
jmp
test
stc
inc
lods
sbbl
lods
aaa
ds
sub
cli
inc
or
stos
shlb
fisttpll
push
outsb
in
push
xchg
cmp
aaa
jle
add
in
pop
test
and
mov
ret
dec
jle
movb
jbe
jb
lock
call
shlb
xchg
cld
lret
les
inc
das
dec
inc
gs
push
mov
je
pop
or
jo
pop
jnp
cwtl
scas
mov
inc
xor
popa
shlb
dec
popa
rcll
push
or
and
sub
insb
adc
sbb
cmp
mov
testb
push
into
xchg
shll
es
sbbl
mov
imul
test
pusha
lods
popa
jmp
das
adcb
ljmp
pop
loopne
jp
inc
fldl
loope
add
jg
ret
pop
stc
push
sbb
test
xor
popf
dec
sub
dec
test
and
mov
pop
cs
sbb
ss
mov
cld
pop
in
std
jmp
pushf
insb
sbb
adc
mov
xor
jl
xor
ror
mov
cld
outsl
cli
inc
jne
popa
daa
aam
icebp
and
cmp
mov
notb
cltd
jmp
mov
out
js
xchg
dec
dec
and
xchg
loop
clc
clc
inc
outsl
fdivrs
xchg
or
ja
in
xlat
loopne
sub
sub
into
sbb
pushf
jecxz
add
mov
inc
jmp
pop
movsb
iret
dec
jo
shl
out
std
and
mov
nop
xor
pop
stos
mov
xchg
test
push
mov
vpunpcklbw
paddusw
mov
pop
adc
rcrl
loop
std
jl
fwait
mov
test
out
test
add
push
pop
xchg
bts
sahf
in
inc
test
dec
stc
or
ret
push
xor
js
inc
movsl
push
fldpi
push
cmc
stos
push
cmp
outsb
mov
pop
mov
loope
in
call
enter
aaa
mov
pop
js
fildll
sbb
mov
inc
mov
inc
mov
mov
push
mov
dec
xchg
sbb
mov
hlt
sub
and
stc
je
ljmp
and
and
pushf
mov
test
adc
fdivrl
lea
cmpb
test
ljmp
xchg
fwait
repnz
test
cwtl
and
adc
cmp
sar
xorl
and
lahf
mov
ret
adc
jle
add
mov
xor
dec
adc
imul
push
xor
out
pusha
and
xchg
mov
lds
les
insb
cmp
ss
enter
lods
pop
or
mov
add
cmp
inc
cmp
inc
push
lahf
in
inc
inc
push
jecxz
mov
sbb
ret
ret
sbb
push
outsl
ficomps
loope
outsl
insl
xor
mov
xchg
outsl
and
je
fsubrs
add
les
loop
sbb
lcall
xchg
scas
jg
cmpb
mov
sub
mov
jg
xchg
je
lea
jge
push
test
mov
mov
push
in
dec
fdiv
movsb
lock
push
rcrb
pop
fildl
push
inc
mov
mov
lea
lahf
shrl
xchg
cmc
add
xlat
test
adc
or
pop
fidivrl
insb
dec
cmp
mov
clc
rorb
cmp
andl
ret
rol
add
mov
lods
push
jbe
add
into
pop
cs
inc
sbb
shlb
hlt
ret
fcoml
decb
mov
ret
or
jle
adc
xor
addr16
cld
test
pop
adc
jns
enter
insl
pop
push
mov
pop
pushf
pop
jbe
and
divb
ljmp
pop
or
push
mov
andl
imul
jg
xor
jbe
mov
sti
xor
sbb
pop
outsl
aam
cwtl
xor
insb
pop
sbb
repz
cmp
add
or
fcompl
call
aaa
nop
cmpsb
out
je
in
cld
or
dec
xorl
mov
cmp
sub
mov
add
mov
pop
out
mov
push
sbbb
nop
test
mov
cmpsb
xchg
pop
add
fildll
mov
outsl
aad
mov
jg
insl
cmp
shll
in
mov
push
sti
orl
dec
jg
stos
add
inc
and
xchg
sub
cmp
mov
ja
cmp
mov
sub
in
cwtl
pop
and
mov
cmpsb
dec
subb
xchg
stos
cmp
add
jp
pop
int3
mov
pop
push
inc
dec
cwtl
testb
mov
add
lods
rclb
ja
dec
movsl
scas
add
inc
stos
insl
cltd
aas
leave
jne
lock
jno
stos
inc
outsl
mov
add
push
sbb
call
lret
cld
out
nop
cmc
xchg
pop
icebp
bound
jb
adc
std
xchg
jb
out
mov
int
mov
and
je
fwait
int3
mov
mov
into
mov
sub
test
add
jbe
outsl
add
fcoms
xlat
mov
outsb
popa
cwtl
test
inc
aam
mul
jecxz
shrb
adc
int
pop
or
jo
loope
xor
mulb
sub
push
int3
dec
out
shlb
push
in
mov
push
int
xor
out
mov
xor
inc
xchg
mov
ljmp
cmp
xchg
mov
mov
lock
stos
and
xsha1
cmpsb
dec
aam
gs
je
std
pop
adc
ds
iret
pop
adc
clc
pop
dec
jmp
loope
or
inc
mov
add
and
fsubr
jbe
cld
imulb
data16
sbb
push
inc
xchg
add
xlat
and
gs
xor
shrl
mov
adc
inc
clc
outsl
cmpsl
loopne
inc
push
cmp
push
push
mov
sbb
cmp
cmp
sbb
sub
je
icebp
cmp
push
xchg
outsb
xlat
inc
insl
movsb
or
scas
pop
mov
push
sub
fwait
mov
mov
mov
ss
mov
fdiv
mov
rorl
adc
xchg
out
mov
lods
push
lret
dec
push
xor
outsb
push
arpl
in
jmp
stos
std
pop
idivb
sbb
dec
out
fsubrl
and
or
out
call
mov
inc
inc
sub
push
or
cmp
sbb
repz
xor
mov
mov
adc
and
je
test
mov
std
xor
loope
pop
iret
popf
push
popa
test
xchg
push
jnp
dec
sbb
aad
orb
lret
sub
jg
push
jle
ficoms
jmp
fnsave
jl
lds
daa
mov
lret
or
cltd
xor
mov
test
pop
les
and
sti
sbb
mov
popa
adc
sbb
sahf
pop
idivl
sub
shrb
in
and
sarb
loop
mov
pop
test
push
add
outsl
cmpsl
adc
hlt
push
mov
adc
or
ljmp
int
movsbl
and
lahf
test
mov
fbstp
cmp
pop
xchg
add
mov
sbb
mov
jo
loopne
js
jbe
pop
aaa
outsl
inc
es
out
ret
sub
pop
cmp
testl
lock
fwait
in
test
nop
xor
movsb
jbe
and
push
push
test
jb
aad
dec
psubusw
test
inc
shl
push
addl
es
mov
adc
les
cmc
mov
std
inc
mov
push
cmp
mov
lock
cmp
cmp
push
jecxz
insl
add
inc
imul
fcomi
popf
add
jg
push
dec
outsl
cmp
test
cwtl
scas
mov
cmp
das
std
shll
sub
cmp
ret
mov
inc
sbb
loopne
and
lret
lds
pop
ja
rcll
push
bound
insl
out
enter
push
les
jb
in
sub
stos
out
iret
pop
insb
scas
in
mov
mov
shrb
mov
out
add
dec
sub
and
movl
pop
mov
dec
and
or
es
dec
mov
xchg
inc
push
jp
mov
subb
push
sub
js
sti
and
aas
cmpsb
outsb
loope
add
sbb
push
mov
mov
or
sbb
sti
mov
test
pop
addl
aaa
mov
mov
sar
mov
cltd
push
push
popa
jle
lret
xchg
in
inc
mov
lods
imul
mov
dec
mov
xchg
inc
lahf
stc
pusha
or
movsl
lret
push
mov
in
ja
test
test
xor
inc
add
stos
hlt
xchg
mov
jno
mov
cli
pop
mov
jnp
shlb
cmpsl
rcrl
pop
or
jns
insl
mov
fists
adc
in
or
pop
roll
cmp
and
ljmp
or
movsb
fxam
int
lea
inc
push
cs
xor
push
lahf
rcrl
negb
in
out
movsl
inc
adc
sahf
outsb
adc
out
clc
adcb
enter
scas
pop
inc
mov
sub
subl
push
lar
lcall
xor
push
xchg
xor
fldenv
push
pushf
xchg
pop
jno
pop
popa
sbb
incl
and
cmp
incl
lock
mov
mov
sbb
ret
ficomps
je
das
push
xchg
sbb
lea
mov
pop
out
push
dec
mov
ret
or
fadds
mov
pusha
subb
rcl
adc
mov
jle
fcompl
enter
jge
ss
sub
or
mov
rcrl
nop
inc
int3
inc
sar
ror
push
daa
or
imul
fsubs
pusha
or
jl
or
movsb
xlat
or
push
shll
cmp
pop
mov
aam
nop
repz
jno
xor
popf
mov
sbb
xor
inc
sbb
inc
xchg
lds
mov
ja
enter
rcll
mov
mov
push
mov
push
cs
test
shrb
rcrl
js
sti
ds
les
decl
stc
loop
sahf
lock
cmc
add
insl
aad
incl
and
imul
fidivrl
dec
int3
stos
cltd
sub
rcr
xor
rol
sub
filds
pop
jl
int
scas
aaa
rcl
mov
andl
mov
scas
adc
sbb
push
loop
mov
mov
dec
addl
push
xor
sbb
jno
test
mov
sub
xchg
subl
idiv
inc
push
pop
btc
mov
pushf
jge
movsl
ja
repnz
int
js
pop
je
add
push
mov
push
push
cmpsb
fiaddl
mov
jg
daa
fmull
push
clc
inc
and
fs
ret
ljmp
and
aad
xchg
mov
fwait
test
add
stc
repz
int3
ja
push
push
add
aam
jo
in
push
outsb
pop
mov
push
and
outsl
cs
xchg
dec
imul
aam
in
push
ret
inc
sti
dec
xchg
cmpb
mov
adc
pop
imul
and
call
jns
ds
lcall
push
and
dec
stos
fs
into
into
pop
test
or
into
push
mov
shlb
enter
pop
std
add
nop
dec
pop
mov
clc
jmp
cmpb
ljmp
fimuls
sbb
and
push
mov
mov
test
push
in
rcr
outsb
sbb
push
sbb
mov
and
sbb
out
and
sub
jbe
inc
cmc
cmpsb
and
lds
fldenv
xchg
pop
dec
or
or
enter
pop
add
js
xchg
test
rcrb
loopne
fisttpll
out
out
or
shl
sub
lss
fistl
sbbb
mov
inc
fstpl
popa
xor
mov
mov
arpl
xchg
iret
mov
pop
mov
and
sub
fiaddl
insl
scas
out
dec
xor
xchg
imul
mov
mov
dec
dec
push
mov
stos
push
fildll
addb
icebp
cmp
cmc
push
pop
stc
icebp
sub
movl
test
mov
xchg
inc
sbb
pop
jle
fdivs
jbe
push
shl
adc
out
or
dec
outsb
popa
inc
inc
mov
add
xchg
adc
imul
adc
rol
xorl
mov
fcmovnbe
push
scas
inc
data16
add
add
in
js
pop
aam
sbb
sbb
jge
sub
outsl
fisttpl
mov
enter
aam
mov
cli
pop
pusha
pop
in
sub
fnsave
mov
pop
adc
push
ds
sahf
jl
jo
adc
ja
aad
pushf
or
push
mov
fstps
lods
mov
lahf
and
xchg
out
ljmp
pop
ret
xchg
mov
sbb
rcrl
mov
or
jmp
test
add
ljmp
loop
adc
add
dec
aad
inc
sub
add
jl
mov
push
test
mov
aas
nop
test
xchg
test
pop
jbe
das
dec
adc
sbb
cmp
outsl
cmc
adc
adc
sbb
aam
icebp
push
imul
out
in
xor
dec
and
addr16
loope
sbb
stos
int3
prefetchnta
loopne
sbbb
arpl
popf
movsl
jo
adc
mov
xor
je
js
ds
and
dec
rcr
mov
mov
mov
stos
loop
adc
mov
pop
sbb
mov
int
pop
xchg
mov
inc
or
std
sbb
popa
xchg
jbe
push
inc
lret
sbb
les
add
lods
push
jle
or
adc
jbe
mov
mov
add
jbe
cmpsb
and
mov
lock
xor
mov
aaa
mov
adc
rcll
xor
addl
cld
jnp
mov
scas
pop
push
inc
cli
pop
repnz
push
sub
mov
sub
mov
or
fs
push
pop
push
clc
dec
inc
mov
and
ds
enter
fsub
xorb
dec
pop
pop
dec
bound
call
js
icebp
inc
adc
orl
fxch
repz
lods
std
scas
addr16
xchg
fiaddl
mov
push
lea
dec
jge
pop
xorb
pop
es
and
pop
mov
in
dec
xor
aaa
mov
lods
mov
out
mov
sub
dec
in
fldenv
into
shlb
movsb
sub
add
and
mov
lods
adc
dec
pop
sbb
push
hlt
lods
loope
jmp
mov
push
jbe
xchg
mov
out
fstpt
mov
or
add
stc
or
fiadds
dec
in
outsl
sarb
xchg
push
std
and
outsl
ret
imul
mov
sti
xchg
aaa
sbb
jb
xchg
push
sbb
in
cmp
or
fsub
mov
clc
sbb
fnstsw
and
pop
lcall
pop
nop
cmpsb
add
jbe
push
pop
pop
in
or
fimull
push
xchg
outsb
pop
jo,pt
mov
insb
sbb
push
call
xor
jb
or
in
fbstp
xchg
fsubl
cmp
lret
clc
roll
or
mov
lea
xchg
out
inc
loopne
push
add
jmp
inc
roll
fdiv
fldenv
in
and
pop
mov
adc
sar
sbb
movsl
mov
jbe
xor
mov
add
pop
add
mov
shr
incb
xor
fadds
mov
push
fistpll
scas
ret
xchg
jne
push
in
xorl
dec
xchg
dec
ret
mov
sbb
cmp
lods
push
lret
into
dec
call
hlt
shr
clc
js
les
adc
ffree
xor
ss
stc
mov
int3
inc
rcrb
mov
pop
push
fiadds
push
clc
fimuls
in
push
fidivl
pop
lahf
lds
cwtl
ss
or
imul
jne
mov
icebp
in
das
add
inc
cmp
ffreep
ficomps
dec
mov
push
mov
daa
sub
mov
arpl
jno
cltd
lea
cmc
pop
mov
lods
xor
div
test
push
pop
mov
in
ja
or
loop
sti
sbb
dec
aaa
insl
push
lret
pusha
dec
adc
adc
or
jmp
pushf
int3
mov
pop
mov
adc
stos
push
popa
pop
lods
adc
mov
push
mov
mov
cmp
jnp
jecxz
xor
jmp
mov
cmp
add
or
inc
adc
or
gs
pop
pop
cmp
mov
xchg
pop
roll
xchg
out
loopne
sti
mov
mov
call
scas
inc
jg
shr
cld
mov
shlb
mov
mov
aad
mov
fildll
loopne
in
shll
mov
sub
adcb
ds
das
dec
pop
dec
xor
sub
bound
push
in
mov
mov
rorb
mov
pop
addl
pop
or
push
dec
adc
stos
jns
push
xlat
mov
das
dec
inc
mov
mov
out
shrb
mov
pusha
pop
xlat
outsb
adc
cmc
pop
inc
pop
es
into
rcrb
adc
jno
das
aaa
mov
jg
and
hlt
sub
jb
repz
pop
push
negb
cli
xchg
pop
outsb
xchg
scas
mov
sti
pop
mov
negb
inc
mov
push
loope
xor
movsb
aam
push
orb
push
mov
mov
inc
pushf
sbb
arpl
adc
je
call
dec
sbb
ds
lods
test
add
cmp
cmp
mov
push
out
jno
inc
std
add
call
adc
imul
in
mov
cmp
lods
and
xor
or
mov
outsb
icebp
push
iret
test
icebp
pop
jg
adc
dec
inc
out
lcall
mull
ljmp
sbb
sbb
popf
inc
add
mov
arpl
pushf
and
fs
jo
nop
fwait
adc
mov
add
push
data16
adc
push
push
aas
or
cmp
add
rcrb
and
mov
or
adc
or
hlt
mov
pop
sub
push
stos
mov
ja
cmp
mov
mov
mov
std
cwtl
ret
pop
push
dec
outsl
sbb
push
jecxz
loopne
test
dec
jmp
test
sbb
ja
fstpt
jae
aas
stos
lcall
xor
xchg
xlat
out
and
xchg
jbe
mov
mov
push
xchg
add
or
je
push
outsb
je
lahf
aam
arpl
sbb
adc
inc
aaa
cmc
jg
dec
jg
jecxz
les
rorl
clc
insl
scas
pop
popf
sahf
mov
xor
jae,pt
push
xor
test
in
push
push
ret
cld
or
mov
adc
fxsave
mull
cmp
orb
mov
out
cmp
ljmp
pop
mov
arpl
sub
push
sub
and
aas
add
nop
xlat
lods
xchg
cwtl
xchg
push
mov
addb
fcomps
outsb
or
and
outsb
jmp
cmp
imul
inc
mov
mov
push
inc
push
push
mov
push
or
sub
cmpsb
jnp
adcl
cwtl
test
xchg
jge
mov
lods
mov
movsb
fstl
std
lea
negl
mov
rorb
add
xor
dec
mov
adc
inc
stc
in
fbld
or
data16
push
roll
fsubrp
iret
inc
jge
mov
subb
push
lahf
add
mov
fisttps
inc
loope
popa
push
mov
enter
adc
ljmp
jecxz
jbe
push
test
ss
cmpsb
test
or
mov
ljmp
je
int3
pop
add
outsb
lret
ds
das
test
pop
icebp
test
add
pop
jo
sarl
out
cmc
or
mov
jecxz
mov
mov
adc
cwtl
sub
inc
movsl
mov
jmp
and
and
sub
mov
and
jno
push
hlt
mov
mov
pop
stc
orb
push
push
mov
hlt
das
subb
das
shl
std
add
inc
push
pusha
sbb
das
sub
add
inc
lcall
add
ja
ss
sbb
or
cmc
fnsave
cmp
inc
decl
arpl
sub
mov
xchg
adc
bnd
shl
adc
pop
rol
push
jno
xor
adc
loopne
cmpsb
mov
and
hlt
je
jp
sub
inc
iret
stc
sarl
sbb
fadds
test
cmpsb
fisubl
mov
nop
sbb
sbb
push
jb
sbb
repnz
test
cmc
lea
punpckldq
xlat
jmp
out
mov
fsubrl
popf
aas
daa
sub
js
xor
pop
popf
stos
addr16
mov
rorb
loope
cld
lahf
sub
xchg
outsb
subb
jl
loop
dec
cmp
leave
inc
or
inc
sbb
add
clc
dec
and
fdivrs
cmp
dec
adc
mov
icebp
adc
cli
push
movsl
insl
fisttpl
mov
stc
movsl
divb
adc
sbb
xchg
in
mov
or
xchg
aad
out
test
loopne
mov
call
pop
hlt
add
fs
jae
dec
decl
sub
cld
push
sbb
je
add
jp
shrb
push
adc
nop
sbb
or
xchg
jno
xor
sbb
subl
jbe
pop
es
add
mov
jno
fldt
out
jmp
cmpl
sbb
push
push
repnz
ljmp
and
mov
mov
movsl
lret
mov
mov
mov
push
mov
fchs
jb
mov
icebp
fbstp
mov
fwait
mov
pop
out
push
xlat
xchg
jle
push
ss
xor
sbb
test
jg
or
and
mov
mov
adc
inc
sub
adc
dec
xorb
sbbb
jg
mov
xlat
mov
cs
repnz
js
add
stos
push
insb
stos
lret
or
xchg
test
fcmovnbe
and
mov
dec
adc
add
test
mov
push
jno
xor
pop
testl
int
test
push
cld
or
ror
sbb
lcall
push
lds
sar
sub
jecxz
dec
push
icebp
push
cltd
xor
int
push
xchg
sti
dec
or
jbe
jge,pt
pusha
adc
ret
dec
or
pop
sbb
add
adc
jne
cmpsl
push
lds
fdivl
stos
push
cmp
movsl
sbb
push
dec
add
push
pop
lcall
mov
cwtl
popa
mov
cltd
pop
sub
imul
insb
je
inc
sub
test
outsb
pop
test
lock
mov
pop
dec
cmc
sbb
add
mov
inc
stos
xchg
notb
dec
mov
lcall
rorb
imul
or
mov
push
sarl
lcall
xchg
pop
jge
inc
lea
lahf
pushf
das
aaa
xchg
mov
mov
cmpsb
cltd
enter
mov
push
test
xor
pop
jnp
shrb
lahf
mov
lea
xchg
xchg
call
xor
mov
mov
pop
je
sub
inc
adc
xchg
sbb
rcrl
add
out
mov
mov
mov
or
clc
xor
imul
jbe
add
mov
inc
sub
outsb
add
shll
dec
mov
jle
and
sbb
add
loop
sbb
pop
rorb
push
inc
mov
in
adc
adc
push
fs
lock
stos
loope
sbbl
in
cwtl
jo
sbb
fsubrs
sbb
fidivs
mov
mov
ret
inc
xchg
add
dec
outsb
push
out
sti
ljmp
icebp
xor
sub
or
jmp
js
add
jecxz
imulb
divl
addl
sti
rolb
cld
in
cltd
sti
mov
test
push
pop
fsub
fists
adc
jecxz
push
rcll
add
xor
shl
sti
das
mov
mov
in
icebp
and
aam
cmpsb
mov
je
into
sbb
js
add
rcrb
pop
shl
rcl
inc
mov
cmp
test
cwtl
lahf
test
and
push
fiaddl
sub
push
and
inc
fwait
sbb
inc
arpl
add
mov
imulb
dec
shrb
in
xchg
sbb
arpl
or
sbb
or
inc
push
aaa
cmp
mov
push
mov
xor
daa
sbb
inc
jl
movsb
scas
mov
test
pusha
jecxz
je
adc
and
dec
ret
hlt
inc
pop
fidivs
mov
popa
pusha
jle
sub
inc
xor
sub
inc
aas
sbb
pushl
xchg
pop
push
jo
mov
add
xor
sbb
hlt
dec
insb
sbbb
lock
shrl
loopne
mov
and
inc
add
pop
ss
inc
insb
cmp
lock
lods
cmp
adc
in
adcb
jo
or
stos
push
les
lods
sbb
mov
lods
lcall
pop
test
xor
test
aam
jle
xlat
mov
fstp
aam
pop
clc
lock
mov
sbb
or
fdivrs
adc
pop
pop
cmp
add
je
sbb
fistl
je
sub
add
jbe
pushf
inc
clc
mov
sbb
scas
fwait
out
lret
mov
cmpsl
add
jb
pop
cmpsl
dec
mov
inc
repz
repnz
popa
mov
sub
mov
pop
push
das
pop
pop
pop
aad
clc
push
dec
push
mov
mov
jg
add
pop
adc
mov
pop
mov
ljmp
cmp
or
mov
mov
fildl
inc
cmp
sbb
mov
test
loopne
shl
xchg
call
call
mov
jmp
adc
std
adc
push
pusha
test
dec
mov
pusha
mov
xchg
outsl
sub
fs
repnz
jo
in
lods
mov
into
cmp
adc
pop
jo
xchg
adc
sbbl
xchg
push
xchg
orb
sub
insl
lcall
decb
sahf
loope
jne
adc
cmp
rcll
add
push
cmp
imul
jecxz
sub
jne
cld
cmpsb
mov
jo
mov
ljmp
inc
sub
pop
xor
add
filds
loope
fimuls
aaa
out
mov
and
jmp
inc
inc
fdivr
ret
scas
rcl
pusha
mov
xor
cmp
xor
insl
adc
inc
inc
mov
push
or
divb
add
adc
aaa
or
sub
sub
push
in
addl
cmp
pop
mov
sub
out
insl
xor
std
pop
mov
aas
es
aam
pop
inc
or
and
pusha
mov
xor
push
inc
outsb
in
pop
sbb
lock
add
pop
xchg
pusha
lea
mov
test
sub
roll
call
mov
dec
pop
daa
stos
stc
lock
aam
or
add
or
pop
and
push
xlat
push
push
jbe
xchg
inc
fsubrl
cwtl
clc
sub
mov
cmp
jp
lock
ds
int
icebp
divb
ret
loopne
test
mov
mov
loopne
fcoml
mov
mov
ds
lds
aad
cli
nop
pusha
xor
cltd
inc
mov
sbb
loopne
div
xor
out
push
push
push
adc
adc
xchg
mov
adc
push
xor
int3
xor
fidivs
test
push
sbb
sub
push
psubsb
rorb
add
imul
cmp
or
xor
dec
or
add
das
ss
outsb
fwait
push
or
pop
cs
mov
lock
jb
adc
jo
outsl
xor
lock
scas
pop
imul
mov
push
aad
ret
cmpsb
es
sbb
inc
mov
inc
xlat
jmp
and
lods
push
xchg
jno
test
inc
cmp
jno
jecxz
inc
jecxz
cli
xchg
leave
adc
roll
and
stc
sbb
fwait
pcmpeqw
lcall
stos
fistpl
pop
cs
cmp
sahf
js
jo
pop
jne
cmp
test
xchg
xchg
ds
mov
mov
dec
mov
movsl
add
je,pn
inc
stos
cmp
nop
nop
scas
push
xor
insb
fnstsw
call
pop
call
inc
pop
xchg
sub
sbb
aas
insl
mov
test
push
stos
test
enter
aad
or
in
pop
and
ds
shlb
jnp
and
jbe
mov
add
scas
xchg
xchg
inc
fstp
sbb
pusha
mov
iret
push
push
mov
stos
movsl
mov
stos
out
retw
mov
or
cmpb
dec
xor
and
movsb
rcr
dec
pop
pop
dec
and
mov
fistps
sub
iret
dec
leave
or
cld
loopne
outsl
outsl
loope
movsl
iret
test
ljmp
mov
fcmovne
sub
fcmovbe
pop
ds
fistpll
lds
lcall
and
ljmp
imul
xor
sub
outsl
adc
or
movsl
ja
add
pop
pop
push
inc
xorb
rorb
dec
push
das
cmp
adc
inc
push
add
outsb
add
mov
popa
stc
div
dec
mov
mov
xor
xchg
jo
lods
adc
loop
inc
cs
ljmp
jne
test
lret
aas
jl
sbb
js
dec
and
mov
les
outsb
test
push
filds
andl
cs
xlat
pop
fisubrs
mov
rolb
dec
or
rorl
pusha
jno
mov
mov
imul
sahf
push
rcrl
push
addr16
dec
or
movsl
stos
ficoml
sub
insl
sub
and
inc
fistpll
jns
int3
lret
ja
push
pushf
add
test
fisubl
xor
stos
pop
xchg
dec
sub
jl
dec
cld
inc
je
sbb
in
dec
jne
loopne
adc
in
adc
outsb
cmp
dec
sub
sub
sub
and
icebp
xor
fcmovnbe
jg
insb
dec
into
lcall
xor
nop
jl
nop
loope
sbb
add
test
xchg
cmp
pop
loope
pushaw
ljmp
jns
add
imul
pusha
push
dec
cmp
xchg
jbe
jge
push
and
scas
test
jbe
outsb
jne
jae
inc
bound
jae
and
loopne
mov
mov
out
xlat
add
in
cmpsb
inc
adc
xchg
xor
adc
mov
popf
mov
dec
ror
sbbb
sbb
add
and
repnz
fstl
add
adc
ret
xlat
or
sarl
xor
rcr
mov
and
pop
jge
sub
nop
pop
xchg
push
filds
incb
add
push
sub
cs
test
call
push
and
roll
pop
add
lahf
add
sahf
jge
push
movb
fst
test
dec
dec
pop
cltd
xor
addb
rcrl
inc
add
rcll
out
pop
mov
jae
lea
test
adc
or
cmpsl
sbb
dec
stos
lret
icebp
outsl
lcall
sbb
cmp
outsl
fmul
cmp
nop
rorl
push
lret
shrb
ds
loope
aam
mov
mov
adc
add
mov
dec
pop
inc
push
fcompl
sbb
mov
mov
lods
sbb
xchg
stos
adc
mov
jecxz
mov
push
mov
adc
std
rcll
adc
faddl
and
out
rcl
pop
aad
fistps
movsb
xor
pop
call
out
push
dec
stc
int3
js
mov
add
fsubs
movb
sbb
xor
add
sbb
ds
int3
add
sbb
aad
cmp
jg
ljmp
daa
dec
sbb
test
hlt
mov
adc
das
add
pop
mov
rcr
mov
pop
mov
sbb
notb
fcmovnb
sub
lahf
cmpsb
enter
dec
pop
xor
push
sbb
jbe
out
ljmp
cmc
mov
bound
jl
and
cmpsl
sub
das
adc
jecxz
fistpll
mov
and
movsl
ljmp
xlat
popa
cwtl
aam
mov
out
adc
or
add
and
inc
pop
adc
jp
jno
mov
out
popa
mov
scas
and
lock
jecxz
xor
mov
insl
fsubr
negb
into
imul
dec
jns
cmp
or
mov
inc
shll
adc
xchg
dec
lods
xchg
sbb
lret
ret
aam
aad
stos
inc
cmp
stos
insl
mov
cmp
adc
insl
cmp
jle
jo
dec
js
jb
mov
aaa
push
in
outsl
std
cmpsl
sub
ret
sahf
stc
mov
loope
xchg
std
mov
or
and
adcb
add
xchg
aaa
xor
pop
dec
leave
in
sti
pop
jmp
inc
outsb
pop
lahf
std
lcall
test
fistpll
jno
add
xchg
pop
fiadds
int3
test
push
mov
sar
pop
dec
xchg
xchg
sub
sub
mov
fsubr
movzwl
leave
sub
loop
lcall
inc
stos
lds
mov
dec
and
pop
cmp
add
imul
cli
mov
push
test
lds
lcall
sbb
cmp
or
loope
cmp
sub
bound
xchg
mov
xchg
cld
cmp
or
and
mov
subb
inc
cld
mov
inc
pop
add
ljmp
sub
and
add
inc
cltd
cmpsl
sbbl
mov
les
insl
mov
adc
lock
cmpsl
push
xlat
cmp
mov
cmp
cmp
dec
inc
scas
addr16
xor
mov
mov
xor
xor
dec
sub
and
aaa
ds
pop
out
xchg
push
xor
insl
out
loop
adc
cmp
lods
push
es
xchg
mov
mov
jge
xchg
jbe
imul
mov
cmp
addb
pushl
and
fiaddl
call
and
test
jmp
pushf
inc
xchg
add
sbb
shll
ja
adc
and
add
popa
pop
cwtl
and
jns
mov
mov
cwtl
cmc
icebp
pop
xlat
bound
int3
popl
inc
push
sarb
loope
outsl
icebp
push
ds
outsl
ljmp
mov
dec
add
enter
outsl
sub
xor
rol
adc
xor
fwait
int3
inc
repnz
inc
sub
jbe
nop
aaa
or
cmp
jecxz
das
mov
push
mov
das
sbb
adc
fsubs
outsl
mov
or
push
fisubrl
dec
ss
sub
cmpsl
mov
fbld
test
in
pop
pop
pop
popf
dec
adc
xchg
and
and
mov
jmp
sub
scas
loopne
or
adc
push
mov
lcall
out
movsb
cld
and
iret
dec
outsb
aaa
cmp
jl
in
inc
mov
sbb
fucomip
out
xor
or
add
cltd
jge
push
call
fadd
in
je
jl
loopne
or
push
loopne
rol
push
add
inc
loopne
sbb
mov
les
mov
cli
or
std
mov
cmp
add
ret
dec
out
fcoms
aaa
mov
aaa
push
aas
stos
mov
aam
addr16
inc
mov
ja
into
dec
push
push
mov
insb
shll
mul
adc
stos
cmp
out
cmp
test
xlat
mov
or
adc
insl
pop
lahf
aad
sbb
adcl
lods
call
out
push
adc
inc
pop
fbstp
pop
and
and
mov
aas
sub
sub
push
ss
xchg
dec
push
sbb
das
push
aad
sbb
add
dec
arpl
fdivs
out
mov
xor
mov
xchg
movsb
lcall
mov
lcall
andb
fwait
orl
in
pop
adc
addb
stos
mov
and
sbb
inc
in
xchg
or
adc
mov
roll
sarb
dec
xor
movsl
mov
pop
cmpsb
mov
out
pop
das
adc
xchg
popa
mov
fildl
pushf
sbb
mov
mov
ja
mov
jb
cmpsb
lea
dec
or
loop
imulb
xor
cmp
bound
pop
mov
dec
jmp
enter
test
or
daa
cwtl
mov
pop
add
sbb
add
push
aaa
jle
shll
dec
data16
repnz
and
sub
out
pop
jecxz
jp
mov
lea
mov
andb
in
add
and
push
ljmp
imul
add
aam
xchg
sub
andl
xor
fdiv
ljmp
clc
push
dec
and
push
push
push
or
add
aas
sti
hlt
call
adc
sub
add
sbb
neg
sbb
dec
add
jnp
imul
rcrb
push
jmp
je
push
pop
push
inc
jnp
mov
add
dec
push
push
in
fistps
call
add
sarl
fsts
into
inc
jmp
ljmp
neg
not
pushl
adc
add
jmp
cli
leave
ret
dec
in
mov
inc
arpl
push
push
push
call
push
clc
dec
dec
adc
push
jle
mov
data16
rclb
imul
xor
pop
in
xchg
mov
clc
push
or
push
xchg
in
in
fs
cmp
insl
dec
call
pop
mov
and
popa
dec
es
std
fcmovnu
mov
outsl
nop
dec
in
cmp
lock
fildl
inc
xorb
testb
call
mov
adcl
ljmp
mov
daa
add
mov
add
clc
push
add
cmp
dec
inc
push
inc
push
sub
div
rcll
rcrl
fadds
ficompl
mov
ljmp
jg
sub
jmp
movsb
add
int3
dec
pop
int
lock
test
dec
jge
dec
nop
pop
jle
insl
js
insb
sub
xor
stos
and
cmp
sbb
lea
fbstp
cmp
add
filds
inc
dec
jmp
xor
data16
fistpl
push
mov
inc
pop
and
jp
leave
sbb
and
call
stos
pop
test
cmpsl
loopne
adc
mov
jne
xor
xor
std
aas
jae
add
in
push
call
xchg
push
fsubl
icebp
inc
clc
loopne
sbb
out
add
or
pop
bound
xor
imul
pusha
js
out
adc
xchg
call
jg
call
mov
inc
rclb
icebp
dec
push
shrb
rolb
sub
test
decl
cltd
push
dec
std
pop
and
mov
jle
push
fucomp
sbb
sbb
popa
imul
stos
sub
cld
clc
movsb
popa
cmp
cwtl
or
add
mov
dec
js
in
jo
cwtl
scas
gs
sub
push
pop
cmp
xchg
lret
jge
push
inc
mov
jmp
mov
pmuludq
inc
imul
or
jnp
in
cmp
cmp
jg
ret
xor
pop
inc
inc
loopne
jae
dec
push
test
push
in
call
js
inc
mov
scas
inc
xor
push
dec
sti
jb
jae
inc
cmp
sub
int3
in
inc
pop
in
jno
push
addr16
cld
icebp
jae
lods
lock
pop
fs
js
rorb
cltd
inc
out
aaa
std
arpl
pop
and
pop
inc
js
nop
in
icebp
dec
addr16
inc
hlt
in
jecxz
sbb
mov
ja
in
sti
or
mov
jno
or
fwait
xchg
std
rclb
or
sub
int3
outsl
pushf
lock
aaa
arpl
cld
or
inc
dec
sbb
adc
inc
addb
inc
xorl
dec
mov
push
xor
push
aam
mov
int
call
push
test
mov
js
xchg
fmuls
dec
sbb
jno
ret
test
pop
pop
xor
dec
xor
dec
mov
xor
dec
call
hlt
shl
cmp
es
loopne
fiaddl
add
gs
lods
push
aas
orl
push
pop
outsb
out
or
pop
loop
out
pop
add
in
cltd
push
hlt
and
add
hlt
sti
push
arpl
iret
inc
add
mov
push
inc
jbe
or
call
std
ret
rclb
dec
inc
fdivs
push
push
sub
out
les
bound
inc
repz
pop
in
adc
or
loope
ret
jnp
sub
and
pop
movhps
loopne
push
sub
ss
and
shr
repz
mov
cld
mov
ret
push
sub
jns
sbb
aaa
inc
ss
jb
adc
add
out
push
loope
sub
pusha
pop
sub
jae
mov
dec
push
in
sub
sbb
pushf
lock
add
dec
xchg
dec
ljmp
push
inc
sbb
call
clc
dec
or
lahf
pop
stos
adc
add
add
dec
adc
add
fisubrs
push
mov
sbb
mov
test
addl
mov
pop
pusha
rclb
or
inc
adc
xchg
push
out
add
cmpsb
xchg
arpl
mov
or
js
scas
cmp
mov
mov
pop
adc
sarl
ret
adc
inc
neg
inc
add
mov
jmp
hlt
lcall
fsubl
pop
out
add
ja
xchg
jo
aaa
pop
adc
push
jo
xor
pop
js
sub
imul
fst
gs
lds
pop
push
call
js
lea
jne
inc
push
outsl
or
xor
sub
mov
inc
in
cmp
push
cli
lods
mov
nop
push
push
or
mov
ds
jecxz
add
not
leave
sub
push
ret
clc
push
adc
jbe
aaa
sub
sub
fldt
push
out
jle
xchg
mov
js
xor
dec
jae
xchg
mov
sbb
lods
pop
popa
add
push
sbbl
mov
xchg
inc
jne
xchg
fistl
mov
xor
inc
cmpsl
call
dec
outsl
sub
pop
xchg
je
fwait
js
inc
mov
cmp
pop
dec
dec
adc
lods
and
shll
push
cli
test
bound
icebp
mov
ss
xchg
push
xor
nop
outsb
lods
sub
insl
scas
adc
and
and
xor
mov
inc
jne
insl
or
inc
inc
inc
rolb
testb
pop
rorb
outsl
loopne
in
filds
std
aas
jnp
insb
call
lret
mov
sub
jmp
movsl
cs
xor
jo
jo
shr
aam
je
data16
adcl
ret
inc
cmp
push
dec
sbb
fdivs
clc
popa
call
lods
fwait
mov
jp
outsl
sub
dec
int3
loopne
insb
fs
inc
imul
xchg
sbb
rcrl
push
add
faddl
dec
dec
push
cli
cmpl
fmull
inc
rol
imul
mov
leave
in
fs
and
cmpb
xor
dec
cwtl
gs
adc
lock
mov
sbb
xor
push
mov
or
pop
mov
push
sub
insb
data16
rorl
jae
pop
lock
je
dec
fsubl
pop
bnd
subl
jmp
rol
pop
loopne
xor
imul
je
cmp
fldt
pop
sub
lcall
push
subl
add
mov
data16
dec
mov
ss
dec
call
inc
sar
add
pop
cmp
inc
cmp
call
jg
out
sub
inc
add
inc
add
jmp
movsl
xchg
ds
ja
push
add
pop
pushf
adc
shll
pusha
inc
loopne
mov
lahf
js
and
cmp
cmpsb
arpl
jbe
pop
pop
ficoml
add
jmp
or
fcmovnu
pop
aaa
outsb
jne
cmp
mov
std
jno
mov
je
xchg
cmp
imul
adc
push
sbbb
adc
push
imul
dec
mov
xbegin
sub
inc
jns
std
push
or
jge
iret
pop
orl
push
xor
xor
xlat
movsl
jge
bound
push
inc
push
data16
gs
or
jne
jno
popa
dec
cwtl
inc
jne
sub
test
pop
insb
xor
pushf
cmp
icebp
inc
cmp
in
or
mov
push
outsb
or
or
xor
jmp
jmp
adc
sub
imul
push
imul
lds
addl
xor
rorb
mov
lret
inc
adc
mov
ja
sbb
mov
insb
inc
xor
pop
push
sub
sahf
xlat
xor
insl
shlb
sub
mov
call
pop
mov
fwait
jns
jno
loope
push
push
sbb
sub
dec
mov
adc
adc
inc
xor
js
pop
pop
jnp
je
call
imul
push
or
popa
outsb
adcl
call
int3
cmp
fisubrl
sbb
lds
js
outsl
imul
movsb
inc
call
push
outsb
insl
push
sbb
dec
xchg
mov
jne
cld
inc
ljmp
add
mov
sub
sarl
out
cwtl
adc
xor
sbb
inc
jmp
push
or
fdivrs
or
loopne
cld
gs
xchg
xchg
out
jp
sbb
outsb
outsl
xor
sbb
or
insb
pusha
pop
dec
insl
inc
fsubr
xacquire
push
cmp
pop
sbb
push
mov
xor
mov
mov
push
push
call
outsl
inc
arpl
mov
adc
ss
sub
cmp
fists
bound
fdivr
js
inc
inc
dec
testl
inc
push
nop
outsb
add
and
aaa
das
dec
mov
ja
loope
xor
aaa
sbb
lock
icebp
dec
add
dec
inc
xor
aaa
test
mov
fcmovnbe
adc
test
inc
dec
orl
pusha
rorb
jmp
out
loope
pop
dec
mov
sahf
ficompl
push
push
push
mov
std
outsl
mov
enter
inc
sub
add
or
sub
daa
lods
add
or
orb
jle
mov
insb
inc
jns
clc
jno
push
lock
movsb
in
icebp
scas
pop
sub
mov
fsub
jb
push
hlt
call
popa
xor
sbb
pop
pop
mov
sub
in
orl
push
push
in
mov
jno
mov
repz
pushf
dec
out
xchg
xor
ficomps
es
sarl
insb
push
popf
nop
sti
mov
leave
adc
sbb
add
inc
in
lret
xchg
pusha
add
adc
les
jg
mov
dec
imul
fsubl
fidivl
mov
sbb
mov
arpl
arpl
sbb
cmc
fists
sub
jmp
cmp
jo
dec
jns
sbb
add
out
dec
ljmp
sub
inc
add
pop
dec
jmp
sbb
mov
out
shl
pusha
addb
mov
sbb
cmp
insb
dec
push
subps
popa
jae
icebp
cmpsl
xlat
xor
sbb
insl
jo
mov
imul
scas
or
jp
push
ja
mov
icebp
mov
xor
jl
mov
rcrb
addr16
idivl
loope
icebp
push
push
ret
and
dec
add
or
js
mov
scas
xlat
and
bound
xlat
and
add
jns
js
pop
push
dec
cmp
pop
xor
sub
lds
push
jno
ficompl
jnp
or
mov
es
in
xchg
sti
cvtdq2ps
testl
pusha
fsubrs
sbb
repz
jnp
arpl
pop
mov
cwtl
in
adc
hlt
jecxz
out
in
icebp
push
pop
pusha
rcl
dec
dec
jge
sbb
push
push
daa
xorl
insb
pop
cmp
data16
and
scas
aaa
add
pop
push
or
fsub
add
loope
jns
js
movsb
push
sbb
sub
mov
jb
nop
jmp
xchg
dec
inc
das
push
push
pop
cmpsl
dec
testb
pop
pop
inc
push
aaa
mov
jo
jae
mov
xchg
inc
int3
jecxz
popa
adc
add
testb
loopne
push
mov
push
sub
jo
and
mov
je
lahf
js
mov
insb
call
push
sbb
jp
js
lret
push
call
call
jmp
rcll
iret
sub
lock
dec
jmp
pop
mov
xor
mov
or
dec
movsl
lea
popa
inc
fsubl
fcomps
addl
mov
pop
ss
stc
pop
arpl
gs
inc
jns
test
xchg
xor
pop
dec
ss
push
and
mov
xor
in
pop
xchg
scas
add
cmpsb
cmp
in
mov
cmp
rolb
add
add
mov
push
push
lahf
push
dec
dec
enter
aas
adc
mov
dec
xor
not
jmp
movsb
cmc
lods
iret
rolb
popa
push
pop
int
sbb
pop
cmp
ljmp
and
add
js
aaa
jae
xor
imul
mov
inc
imul
out
ret
popa
push
jge
into
aaa
inc
gs
lock
cmp
repnz
imul
inc
test
gs
adc
int3
xchg
in
and
or
jb
inc
dec
call
cli
icebp
add
ljmp
ja
xchg
or
add
rcll
fbld
push
xchg
repz
dec
inc
xor
cmc
loop
js
jmp
cmp
call
in
mov
sbb
xor
sti
outsl
mov
jmp
sub
dec
dec
inc
inc
adc
xchg
or
rorb
ret
or
lock
lock
jnp
dec
js
pop
pop
xor
xchg
pop
xor
jmp
push
gs
loopne
or
push
mov
cmpsl
jmp
xchg
sbb
dec
daa
xor
decb
sahf
ficomps
add
sub
inc
xlat
dec
jne
jmp
or
shl
push
cmp
dec
dec
sbb
inc
popa
dec
sub
or
add
adc
mov
outsl
in
filds
mov
xor
pop
fisttps
rcr
sbb
cli
add
push
cld
jae
popa
ja
adc
dec
lret
cs
mov
sub
cmp
jne
inc
aaa
jo
popf
outsb
stc
pop
sbb
xlat
xchg
jmp
mul
add
pop
fistpll
or
aaa
dec
in
hlt
inc
jl
ss
inc
testl
dec
pop
aad
inc
push
mov
sar
push
dec
jno
lock
cmc
aam
push
mov
notb
andl
jb
outsb
dec
dec
push
jp
add
push
and
shrb
add
inc
xlat
ss
ror
stos
in
and
inc
or
shlb
nop
xchg
mov
insl
ja
test
shrb
mov
cld
out
lods
jno
sbb
mov
inc
ret
jp
xchg
in
sub
std
mov
imul
pop
pop
xor
adc
sub
loopne
mov
aas
push
push
add
and
sbb
mov
movb
pop
pop
mov
inc
and
iret
ljmp
push
ja
cwtl
jno
jno
outsl
das
fwait
or
and
hlt
inc
pop
dec
jae
xor
dec
inc
add
clc
mov
rcrb
add
dec
add
pop
into
push
fbld
dec
and
sub
push
xchg
ret
add
dec
pop
jne
adc
inc
stos
sub
fbld
xchg
test
lock
pop
imul
sahf
das
cwtl
test
fnstenv
mov
xlat
cmp
icebp
dec
int3
mov
pop
and
ret
or
in
rorl
fstpt
and
je
mov
insl
rolb
push
add
outsb
add
mov
dec
xor
insl
shrl
push
jbe
icebp
push
inc
cli
movsl
inc
je
pop
jmp
push
int3
loopne
bound
rcl
loopne
add
xchg
shll
int
xor
mov
rorl
push
jb
inc
xor
loop
jmp
call
sub
and
push
pop
sbb
sarb
mov
decl
cmc
icebp
shll
dec
call
sbb
ja
jns
ret
pop
int3
imul
test
pop
inc
fsub
mov
mov
push
in
loop
shll
int3
adc
jecxz
das
gs
mov
cmp
jne
in
mull
shl
push
inc
push
nop
mov
mov
or
pusha
lea
ret
add
dec
push
adc
push
fstpl
and
add
push
dec
pcmpgtb
pop
cld
ljmp
fs
imul
adc
lods
neg
adc
pop
push
jmp
outsb
pop
fldt
fmulp
adc
add
cmp
inc
sbb
push
cmpsb
outsl
jge
iret
cmp
inc
loopne
or
sub
ret
mov
xchg
push
mov
push
inc
outsb
jns
sbb
rolb
dec
mov
addr16
dec
xor
sub
dec
dec
call
add
add
loop
lock
jnp
push
and
push
fcoml
pop
push
rcl
jno
fs
add
push
mov
pusha
dec
mov
add
mov
adc
push
jae
pop
xor
movsb
xlat
pusha
mov
rclb
jae
fcmovnb
push
andb
sbb
pop
push
mov
and
mov
xor
inc
jne
shl
dec
addr16
push
divb
insb
je
and
arpl
pushf
in
clc
js
adc
add
stos
data16
dec
mov
cli
shll
adc
xor
xchg
or
mov
mov
enter
insb
jmp
sub
inc
push
push
aaa
mulb
out
inc
cltd
cs
outsb
jbe
lds
push
mov
sbb
mov
push
jb
jecxz
aam
js
mov
pop
aaa
insl
test
mov
inc
jno
loope
insl
push
test
shl
aad
sub
sub
xor
lret
jno
imul
jmp
movsl
cld
dec
add
call
mov
js
push
jle
inc
adc
or
adc
mov
push
bound
push
push
pop
sbb
je
mov
jns
out
jne
mov
insl
mov
push
in
js
adc
dec
outsb
xchg
push
daa
insl
scas
fs
xor
in
push
aaa
int3
negl
mov
add
sub
popf
pop
push
enter
dec
xor
int
or
stos
cmp
je
push
lcall
push
das
xor
mov
dec
arpl
test
jns
jecxz
imul
pusha
xor
adc
mov
mov
pop
loop
shll
ja
jo
inc
mov
aad
loop
movsb
pushf
xchg
addr16
outsl
inc
sti
xor
mov
push
jo
dec
outsl
in
rcl
ret
pusha
xchg
jmp
icebp
out
jne
outsb
jbe
ss
push
inc
je
add
jp
xchg
movsl
cmp
xchg
jge
aam
insl
adc
aam
jno
in
test
in
ret
push
inc
ss
andl
push
std
pop
or
repnz
jmp
pop
lcall
push
push
sub
popl
mov
pop
push
test
cmp
push
xchg
lea
mov
xchg
dec
fstpl
inc
das
xchg
pop
loop
cli
adc
lods
jbe
inc
jb
add
sbb
add
outsl
leave
sarl
xor
dec
pop
or
stos
inc
xchg
jecxz
adc
ret
rcr
call
push
decb
mov
mov
push
xor
pop
add
push
add
sbb
mov
shl
dec
jne
das
xor
into
jecxz
jno
imulb
or
jmp
and
hlt
adc
and
mov
das
cmp
cmp
cld
addb
in
arpl
loopne
cmp
dec
inc
popa
xor
aas
call
push
gs
je
and
xchg
dec
ljmp
faddl
ret
or
cmpb
pop
dec
fwait
inc
xchg
call
mov
mov
insb
hlt
xorl
jae
cmc
jne
mov
push
scas
sti
cmpsl
insl
xor
call
and
lret
add
jo
push
sub
push
cmp
dec
push
jns
xor
push
sub
out
push
data16
enter
ljmp
sbb
and
pusha
fstl
call
mov
adc
pop
fdivs
pop
ret
pusha
jmp
jno
and
dec
push
ret
call
movsb
pop
add
mov
add
push
add
rclb
insl
jae
out
xchg
push
and
test
mov
mov
scas
pop
pop
es
dec
outsb
dec
add
lock
adc
iret
inc
ret
test
xchg
push
inc
push
inc
stos
cmp
xchg
inc
sbb
inc
jo
sbbb
or
mov
add
adc
fdivrs
push
mov
ja
dec
mov
loop
lock
jmp
jmp
sbb
adc
pop
pop
xor
dec
dec
outsb
insb
scas
pop
jb
or
ror
jmp
push
loop
dec
sbb
xor
loopne
movsb
fldenv
movsl
xlat
insb
push
adc
jg
stos
or
inc
xor
jmp
mov
je
or
push
adc
stos
sub
inc
inc
popa
add
test
push
jmp
mov
add
inc
bound
xor
adc
inc
mov
adc
or
inc
and
or
ljmp
and
adc
test
and
add
add
and
mov
sbb
sub
and
or
sbb
and
adc
sbb
dec
in
in
mov
sbb
dec
adc
pop
and
xlat
mov
mov
push
adc
add
adc
cmp
xor
aaa
jae
dec
jns
dec
push
dec
sub
mov
mov
jo
and
add
imulb
test
and
dec
add
add
and
pop
push
and
lods
mov
xchg
adc
ficomps
and
push
add
pop
and
or
xlat
pop
ja
inc
and
push
jnp
adc
imul
and
pmaxub
mov
inc
dec
inc
je
sbb
push
jbe
gs
adc
adc
test
xchg
insl
or
and
pop
lods
mov
mov
mov
or
dec
fs
dec
movsl
mov
mov
inc
dec
dec
push
gs
arpl
js
int
ljmp
jno
outsl
jns
outsb
imul
mov
cld
lods
mov
xor
pop
lcall
push
adc
pop
and
or
adc
ret
fs
push
test
test
or
adc
jl
adc
or
ficoml
rorb
push
mov
movsl
fwait
movsb
mov
xchg
pushf
jno
xor
dec
int
mov
out
xlat
jnp
addb
pop
imul
dec
pushl
jl
add
xor
cs
in
lea
xor
push
arpl
int
mov
jge
add
sub
sbbl
lcall
mov
adc
jmp
lea
xlat
sbb
mov
imul
into
jbe
pop
pop
imul
cmp
xchg
add
sbb
pop
dec
cmp
adc
mov
insl
jbe
gs
aaa
add
jns
xchg
xor
dec
xor
mov
adc
loopne
inc
enter
add
mov
jp
sbb
imul
push
or
rcrl
or
and
test
dec
jno
xor
push
or
push
stos
inc
push
aas
cltd
test
push
mov
test
dec
pop
and
push
inc
inc
xor
jo
push
pop
mov
into
rol
inc
inc
jg
dec
out
lods
sarl
push
inc
jae
cmpsb
gs
or
adc
xchg
push
clc
sbb
or
inc
xor
inc
dec
sbb
add
jb
jne
insb
or
test
outsl
arpl
leave
shlb
fwait
xlat
out
push
inc
and
adc
cmp
xor
pop
in
rcll
es
ret
pop
push
out
xchg
outsl
mov
aas
xor
fsub
dec
add
dec
add
push
adc
test
sbb
int
mov
addr16
adc
xchg
sbb
dec
lods
mov
pop
adc
aam
lcall
push
dec
dec
dec
dec
push
push
add
inc
addr16
pop
adc
adc
daa
les
aad
inc
cs
popa
std
dec
add
mov
sti
adc
mov
ja
lock
call
aaa
inc
shrl
mov
push
add
mov
adc
and
pop
mov
aas
add
dec
movsb
adc
and
xor
jge
lods
inc
and
cmp
cmp
or
dec
sub
psubb
out
out
xchg
mov
jle
xchg
mov
mov
push
aas
subb
scas
xchg
mov
fwait
or
mov
or
aad
add
dec
cmpl
mov
inc
popf
xor
mov
mov
sub
adc
push
outsl
cmp
or
aas
pop
add
popa
idivb
rolb
mov
dec
iret
jle
ljmp
inc
out
cmp
stc
insl
sti
ss
call
mov
cltd
aas
add
pop
jle
clc
mov
fstpt
mov
mov
dec
adc
inc
xchg
mov
push
imul
xchg
push
notb
mov
adc
das
dec
push
aaa
cmp
mov
and
jno
sbb
pop
fsubrs
insl
pop
aam
sub
stos
push
mov
add
jne
popa
jecxz
push
push
jg
mov
add
mov
sti
clc
mov
sbb
xorl
out
or
mov
push
fwait
mov
fnsave
dec
mov
xor
std
std
out
test
mov
or
mov
repz
or
xchg
imul
fildl
fcomps
sti
mov
lods
sub
addr16
inc
xor
mov
clc
aam
dec
xchg
loop
mov
adc
mov
xor
or
pop
addb
mov
xor
adc
divb
mov
jmp
push
inc
aas
adc
mov
call
aas
jge
arpl
pop
xor
icebp
lods
out
push
ljmp
pop
xchg
xor
ljmp
ss
fstp
pop
mov
mov
frstor
and
sar
fbstp
adc
mov
pop
push
or
xchg
mov
in
je
pop
mov
adc
xor
bound
outsl
cld
cmp
sbb
xchg
mov
test
or
pop
add
repnz
jp
push
rcrb
stos
cmp
cmc
adc
aad
aaa
xlat
cmp
stc
movsb
dec
rolb
loop
push
mov
pop
push
mov
sbb
jmp
rorb
pusha
inc
outsl
cld
divb
add
pop
adc
mov
out
shll
shrl
cmpsb
cwtl
push
jge
mov
xchg
mov
lea
xor
mov
arpl
icebp
fistpll
pop
popa
inc
jb
mov
inc
push
pop
add
mov
outsl
or
mov
loope
or
xchg
sbbb
aas
mov
pop
lcall
mov
ret
add
aam
int3
mov
fucomi
adc
pop
adc
movsb
iret
and
fisttpl
shrb
cmp
aam
aad
sbb
gs
aaa
insl
xchg
xor
xchg
ret
adc
cld
pushf
dec
and
push
in
add
mov
insl
cmp
les
addr16
xchg
in
mov
inc
jl
mov
push
jne
xchg
jnp
mov
repz
cmpsb
cmp
mov
jmp
sub
mov
out
ret
lcall
mov
lcall
jmp
or
and
or
mov
push
sbb
jbe
jo
dec
hlt
pop
or
add
xchg
orl
and
and
jl
fcompl
adc
in
lahf
movsl
out
add
or
int3
data16
xchg
cmpsb
test
aam
and
test
movsb
call
xchg
scas
leave
adc
jl
jo
push
mov
push
aas
test
sbb
shlb
add
and
sbb
mov
push
les
sub
sub
mov
mov
sub
adc
and
rolb
lret
jge
in
sbb
sbb
inc
test
incl
sarl
xor
out
pop
pop
jb
jno
call
add
into
bound
pushl
sbb
and
inc
inc
jne
fisubrs
pop
ja
call
scas
jl
or
daa
fstl
arpl
mov
dec
ffreep
dec
clc
lret
xchg
xchg
sbb
adc
pop
fldcw
enter
icebp
pop
cmc
cmpsb
mov
enter
sub
cmp
out
add
out
sbb
add
or
xor
jle
jle
xchg
push
aaa
data16
aas
mov
inc
outsb
cmp
push
or
mov
std
insl
and
loop
dec
pop
dec
mov
adc
pop
jge
mov
fmull
fdivrl
sbb
push
push
or
sahf
dec
add
pop
mov
sub
jmp
sub
ffree
incb
mov
sarl
aas
push
add
pop
outsb
lods
inc
cmpsl
pop
jecxz
fstl
cmp
sub
ret
cmp
mov
mov
or
popa
ljmp
add
rol
icebp
ds
out
pop
push
dec
pop
fmull
jg
rorb
xchg
imul
lock
or
ljmp
ljmp
out
xor
push
mov
xor
lar
icebp
test
jp
sub
outsb
out
inc
cmp
clc
xlat
outsl
out
adc
jge
loopne
mov
orb
and
lods
xlat
insl
xlat
clc
pop
push
enter
pop
fbstp
clc
mov
pop
mov
sbb
outsl
dec
daa
cmc
mov
in
call
jae
lods
and
ret
es
sar
inc
jmp
push
push
or
stc
enter
imul
movsb
inc
les
je
jne
mov
outsb
or
jle
jge
pop
insl
dec
sub
cmp
fildl
aas
test
jl
and
pop
inc
mov
outsl
pushf
std
mov
xchg
mov
je
sub
push
mov
fdivrl
dec
insb
dec
add
inc
lahf
pop
jmp
mov
insl
mov
mov
scas
movsl
nop
push
rcl
push
dec
scas
or
push
push
pop
add
gs
pop
pushl
test
lea
and
adc
ret
jae
sti
adc
sub
jb
ret
mov
test
les
roll
cmc
xchg
jno
pop
mov
mov
push
cmp
std
mov
jecxz
jg
bnd
out
scas
emms
pop
push
xchg
pop
test
xcrypt-ctr
cmpsl
fucomip
pop
popa
jl
mov
cmp
pop
gs
sbb
cmpsb
jl
inc
out
push
andl
out
push
cmc
imul
aad
mov
in
shll
pop
pop
or
dec
adc
sub
lock
mov
or
mov
in
scas
insl
sub
pusha
ljmp
daa
mov
pusha
into
lock
add
aas
lahf
mov
pop
jb
xchg
movsl
or
push
pop
jmp
adcb
jmp
or
movsb
add
cmp
xchg
push
popa
aam
sub
cli
aaa
ss
adc
or
daa
and
lret
fdivr
das
fsubrl
or
sub
pushf
sub
out
pop
mov
sbb
std
ja
cmpxchg
adc
adc
fiaddl
xor
mov
outsl
xchg
lret
pop
imul
fs
ljmp
jge
dec
lret
push
in
ds
jge
loop
pop
imul
push
movsb
mov
mov
mov
cmp
mov
mov
mov
cli
lret
std
jp
dec
addr16
dec
sahf
mull
lret
mov
test
adc
xor
cmp
test
sbb
out
push
loop
and
add
orl
fisttpl
xor
cmp
fs
xchg
outsl
lds
and
push
cmp
sbb
jg
pop
test
pop
mov
sub
js
in
bound
push
and
in
mov
cmpsb
push
cmpsl
outsl
push
inc
pop
sbb
and
movsb
fdivs
sbb
push
clc
lcall
popf
je
stos
mov
lret
add
cmc
rclb
pop
cmpsb
mov
pushf
pop
imul
mov
mov
xor
idivb
mov
pop
add
add
mov
push
stos
orl
ljmp
sbb
int
stos
mov
fildl
cld
pop
mov
daa
sub
pop
mov
push
add
sti
cmp
dec
add
pop
daa
into
jmp
lds
in
dec
and
aam
or
mov
sbb
sub
push
test
sub
jnp
orl
test
mov
in
xor
cmpsl
cmp
lahf
mov
mov
dec
push
punpcklbw
push
iret
hlt
jno
xor
adc
xor
and
loop
adc
popf
cmpsl
lock
out
jle
test
outsb
sub
lods
daa
sbb
jp
daa
push
add
shl
pop
pop
scas
sti
adc
mov
sub
sbb
out
ret
mov
int
push
add
pop
test
call
lea
ja
outsl
push
negl
mov
mov
es
out
ret
out
xor
pop
mov
cmpsb
push
inc
and
pop
arpl
lock
adc
sub
sti
pop
cmp
push
xchg
push
addb
out
rcll
inc
push
out
mov
sbb
jle
or
adc
rcrb
test
imul
pop
or
push
loope
cmp
and
mov
mov
cmp
push
in
mov
fildll
sbb
xor
and
xchg
sub
lods
cmp
cmc
jg
call
xchg
mov
mov
jle
mov
fwait
adc
lret
add
and
push
mov
clc
mov
sbb
sbb
cmp
mov
test
adc
das
xor
mov
sub
insb
or
mov
imul
jae
fistps
lret
faddl
push
cmpsl
or
or
test
pop
push
or
or
and
pop
pop
aas
adc
shl
aas
andb
push
cs
les
sub
xchg
ljmp
cs
sbb
and
and
pop
sub
mov
das
xchg
mov
in
push
push
push
dec
test
or
icebp
inc
jnp
movsl
mov
jecxz
pusha
jo
dec
jae
ror
and
pusha
cmp
and
bound
divl
not
mov
and
fdecstp
mov
or
nop
stos
or
clc
clc
icebp
add
dec
add
pop
sbb
jge
push
jge
call
pushf
in
pusha
push
or
xor
outsb
clc
pop
xchg
sbb
push
cmp
lock
push
push
in
jge
pop
xor
cld
lds
sbb
jmp
push
and
sub
fs
dec
fistl
push
mov
fisubrl
mov
mov
push
cs
pop
fcmovnb
mov
inc
xor
iret
sub
mov
fsubr
mov
repnz
dec
inc
pop
push
loopne
les
adc
cmpb
insl
dec
into
ficomps
jmp
xlat
pop
adc
rorl
in
mov
fsubl
cmp
lods
dec
and
inc
mov
sub
ds
add
cmp
xlat
divb
add
or
jno
xor
mov
push
push
pop
mov
dec
adc
notb
outsl
mov
push
jbe
std
test
aaa
mov
cld
and
push
pusha
es
sahf
sub
ret
push
sarb
mov
lahf
sbb
fnstsw
cli
pop
or
lret
adc
sub
cld
stos
lds
mov
scas
and
mov
in
ret
or
push
dec
ret
shlb
sbbl
cltd
pop
push
fbstp
push
or
cmp
add
sub
mov
test
les
fldl
inc
add
or
out
xorb
jle
icebp
mov
adc
dec
pop
add
lret
dec
xchg
xor
shl
xchg
test
sbb
adc
sub
add
sbb
loop
std
pop
pop
orl
stc
pop
sbb
and
mov
fldt
mov
jle
xor
sbb
and
push
inc
outsl
mul
adc
aaa
sub
sbb
clc
xor
inc
push
insb
stc
les
pop
jle
xchg
sbb
dec
jnp
cwtl
fsubrl
adc
arpl
ret
leave
mov
pop
inc
mov
or
add
xor
jecxz
jge
adc
idivl
frstor
cmp
bound
inc
mov
xor
in
sbb
cmpsl
mov
in
ljmp
and
mov
sbb
imul
scas
add
scas
xchg
push
cmp
push
scas
in
cs
mov
inc
inc
jl
mov
fwait
push
notl
cmc
cmpsb
jbe
sbb
xchg
push
clc
sub
mov
sbb
xor
mov
pop
cmc
sbb
movsb
ret
dec
lods
or
mov
fsubrl
jge
out
sub
mov
inc
add
lret
mov
popf
movsl
cmpsb
out
push
mov
cmpsl
push
clc
jo
mov
adc
and
ss
mov
pop
mov
ret
sbb
xchg
dec
in
and
iret
int
fs
mov
push
push
xchg
jb
pop
mov
inc
test
lock
adc
fimull
stc
clc
cmpsl
sahf
add
clc
sub
outsl
xor
dec
jp
ja
or
fs
out
imul
inc
mov
hlt
dec
mov
fsubrs
insl
push
adc
int
mov
cmpsb
jg
imul
ret
mov
notl
jmp
xor
inc
pushf
mov
pusha
jnp
xor
or
ljmp
int
rcll
movsl
push
in
jecxz
lcall
mov
mov
es
in
xchg
fwait
pusha
rclb
mov
mov
push
mov
pusha
aad
cmp
mov
bound
push
call
fwait
jns
out
ret
outsb
in
scas
dec
jae
cmpsb
lahf
mov
lret
or
inc
fs
lds
xchg
push
or
ds
inc
out
or
jp
shll
in
pop
aas
jo
adc
sub
nop
jns
push
lds
fcmove
mov
sbb
xchg
mov
sbb
insb
in
xor
call
popf
sbb
fstpt
clc
cmp
movsb
into
push
push
outsl
je
pop
jmp
xchg
ret
ret
cmp
xchg
adc
adc
dec
cld
lahf
and
aaa
cld
add
xlat
shrb
and
pop
testb
rclb
inc
adc
insb
xchg
fsub
push
add
icebp
das
fmuls
out
bound
test
adc
xchg
mov
jns
jmp
inc
andl
pop
pop
insl
or
aaa
inc
push
and
or
push
jmp
les
mov
xchg
sbb
lea
or
popa
push
pop
sbb
in
outsl
dec
fdivrl
add
jmp
orl
mov
push
cmp
mov
mov
stos
jno
daa
pop
shll
rcrb
or
fidivrl
jge
adc
cld
unpckhps
pop
cld
movsl
mov
int
imul
adc
or
scas
inc
filds
xchg
comiss
aaa
mov
mov
xchg
mov
mov
mov
icebp
dec
mov
jecxz
fwait
cmc
mov
stos
push
lret
xchg
sbb
popf
sti
lret
add
pop
fiadds
mov
pop
andb
and
jmp
sbb
xor
sub
xor
mov
dec
or
jmp
add
mov
pop
xchg
cmp
add
xchg
lret
pop
loopne
xchg
adc
int
mov
jecxz
jno
mov
stc
sbb
cld
mov
bound
adc
add
scas
outsb
std
or
pop
adc
and
sti
jmp
jecxz
fcompl
push
sbb
mov
cmpsb
jecxz
cmp
push
sbb
cltd
xor
sahf
out
stos
mov
orl
inc
addb
iret
or
fmuls
xchg
and
sbb
mov
fcmovb
adc
jb
push
int
mov
leave
test
dec
shlb
dec
cmp
rcl
lods
mov
cltd
pop
ss
sub
mov
adc
enter
sub
imul
sub
in
call
loope
jg
aad
push
jne
inc
mov
push
lret
clc
out
mov
addr16
jae
lret
lcall
test
fistpll
mov
loopne
jne
mov
add
mulb
ljmp
mov
ret
insb
adc
enter
sub
add
mov
dec
aam
sbb
push
lret
mov
ljmp
xchg
xchg
je
call
fiaddl
push
push
push
xor
imul
outsl
push
sub
sub
lods
shrb
jp
or
out
in
mov
jo
aas
cli
mov
mov
sbb
sbb
out
cmp
xor
jo
push
sub
xor
sahf
xor
or
in
cmp
adc
inc
enter
push
bound
popa
mov
adc
stc
ja
pushl
mov
outsb
mov
xor
ret
shll
fsubrl
xchg
xor
and
xchg
sbb
dec
jno
add
sti
loop
ret
sub
fcomp
cmp
and
movsl
mov
das
addr16
sbb
iret
adc
adc
pop
adcl
jae
rcl
and
shlb
lcall
ficoms
out
loopne
mov
sbb
stc
jae
insl
les
movsl
subl
out
push
scas
scas
leave
in
mov
push
cmp
xor
and
sbb
divl
inc
push
jg
pop
push
inc
dec
sbb
mov
inc
cmp
call
outsl
testb
stc
pop
das
jnp
shll
loope
cmp
popa
movsb
mul
sahf
inc
dec
bnd
inc
pop
xor
pusha
or
push
ljmp
fistpl
jmp
sub
xor
inc
fwait
push
jns
addl
ret
fidivl
fldcw
call
fidivrs
fdivrl
sub
mov
push
test
xchg
push
pop
dec
inc
paddsb
inc
push
push
pop
fisttpll
adc
fidivl
jg
js
cld
dec
mov
cmpsb
lea
ficoms
pop
sbb
int
or
call
xchg
mov
bound
mov
loopne
xchg
jmp
push
mov
fiadds
or
out
lock
mov
lcall
jecxz
pusha
or
cmp
jo
insl
mov
inc
add
enter
stos
insl
push
sub
add
pop
arpl
and
ret
jmp
mov
hlt
sbb
pop
pop
fsubs
jo
sbb
fstl
dec
xor
jmp
mov
push
or
mov
dec
sbb
sbb
fisubrl
mov
adc
xchg
cmpsb
dec
add
add
jne
and
lods
mov
push
in
sbbb
mov
lods
test
cli
orl
push
ret
mov
fst
cmc
inc
xor
add
cmp
jo
std
rcrb
xchg
out
jp
popf
out
inc
mov
push
and
cmp
xor
and
cmp
pop
and
xlat
aam
push
ljmp
sbb
rorb
sbb
mov
aam
cld
ja
xor
frstor
out
outsl
int3
shll
popa
pop
sbb
adc
arpl
ret
dec
push
mov
ret
jle
popl
pop
ljmp
inc
or
jne
icebp
sbb
or
repz
sub
xchg
fldenv
fstp
mov
lds
pop
setae
adc
daa
mov
mov
scas
adc
mov
xchg
mov
push
arpl
xlat
dec
movsb
inc
xor
rcr
cmpsb
divl
leave
mov
adc
cmp
mov
cli
jg
add
lcall
out
adc
insb
mov
les
pop
inc
and
jmp
lret
jmp
outsl
lock
test
dec
repnz
pop
loopne
and
hlt
xchg
pushf
enter
in
lock
clc
add
pop
fmuls
push
sbb
xchg
sub
jecxz
cs
lods
cmp
leave
dec
mov
and
stos
jg
stos
mov
cmpsb
lock
jne
je
enter
sbb
fldenv
rcl
cmp
add
inc
xchg
in
push
ret
adc
xchg
mov
fwait
orl
insl
cmp
movsb
popf
jmp
lret
mov
orb
fwait
xchg
frstor
mov
push
orb
pop
int
into
xchg
loopne
sub
cli
mov
les
not
insb
ss
aaa
movsb
lret
lret
xchg
dec
sti
cmpsb
out
sub
leave
scas
mov
cltd
jg
jg
dec
sub
xchg
adc
jne
cmp
lods
mov
das
movsl
rcl
mov
ja
jnp
ret
xor
inc
leave
in
mov
mov
in
test
arpl
push
sbb
xchg
pop
push
nop
xchg
mov
cli
inc
pop
sub
cld
movb
xor
bound
fimuls
push
mov
lock
adc
jle
cmpsl
add
fcompl
and
pop
add
mov
sahf
into
sbb
out
fists
call
cmp
ret
cs
xlat
fisttpll
xlat
negb
cmp
jge
out
jb
mov
arpl
sub
imul
notl
cmp
cli
les
imul
push
paddq
repz
aas
and
popa
pop
dec
jmp
outsl
fstpl
lret
cmp
gs
jae
loope
aad
fwait
cli
iret
cmpsl
dec
jle
sbb
sub
ljmp
jnp
sbbl
adc
shrb
pop
fildll
stc
adc
ds
push
mov
push
push
mov
or
push
leave
or
insl
push
gs
push
push
pop
int3
enter
popa
leave
xchg
inc
pop
int3
sbb
imul
mov
es
mov
fisttpl
dec
cmp
jbe
inc
inc
jecxz
inc
addr16
xchg
cwtl
mov
mov
addr16
insl
adcl
loopne
fcompl
and
jl
inc
mov
fisttpl
and
ret
pop
test
cs
aas
or
movsb
mov
mov
or
mov
xchg
out
mov
and
adc
xor
pop
fisubrl
mov
cwtl
xchg
nop
pop
xchg
adc
fdivl
popf
dec
pop
inc
pop
repnz
sub
mov
sub
lds
add
call
mov
cmp
mov
loopne
cmp
movsb
jnp
das
fidivl
inc
or
sub
adcl
daa
stos
push
cmp
xchg
jmp
imul
or
cwtl
inc
lock
lock
mov
pop
xchg
mov
int
jne
adc
ja
xchg
xor
pusha
loope
or
cmp
xor
or
or
cwtl
int
sarl
xchg
sbb
sti
andps
cmp
test
push
into
stc
adc
mov
testb
testl
aaa
xchg
pop
shll
and
sbb
outsb
xchg
fcmovnu
es
push
outsl
test
sahf
pushf
push
ret
mov
jp
lea
add
test
ljmp
lahf
and
outsl
push
or
filds
loop
or
inc
jmp
or
mov
shll
mov
mov
fldt
pop
out
xchg
loope
xchg
jp
rcrb
push
mov
callw
sti
pushf
stos
pop
jle
jmp
inc
mov
frstor
sbb
jo
mov
push
push
sarb
jmp
cli
inc
clc
xor
iret
les
ret
popa
subb
pop
lods
mov
xchg
dec
shl
and
sub
mov
outsl
jp
testb
jmp
cmp
jae
mov
push
mov
and
add
mov
pop
pop
push
sti
fistps
lret
test
push
sbb
mov
popf
push
sub
loope,pn
xor
inc
mov
outsb
popa
and
popl
lds
xlat
xor
mov
dec
insl
mov
xchg
xchg
jae
fisttpl
test
mov
pop
std
sub
pop
hlt
cli
or
cs
push
mov
add
pop
bound
aaa
pop
or
stc
pop
mov
icebp
pusha
rcrb
pop
or
icebp
mov
out
xlat
enter
sar
dec
sub
cli
nop
pop
mov
dec
fnstsw
mov
fs
incl
orl
mov
and
sti
push
xor
imul
sub
cmp
ror
in
pop
sbb
sarb
mov
sub
fcoms
shlb
pop
add
xchg
ret
movsb
cwtl
dec
sbb
sub
dec
ljmp
add
inc
jmp
or
mov
lcall
in
out
push
in
mov
sbb
xchg
adcl
idiv
adc
gs
cmp
inc
push
sbb
jo
add
inc
ret
and
fistpll
push
mov
ljmp
pop
or
jne
sbb
xchg
xchg
xor
or
mov
loopne
aas
addb
fcmovnb
out
xorb
fcmovne
dec
xor
test
pop
cmp
xor
lods
popa
or
dec
mov
pop
jle
mov
test
add
fcmovbe
adc
push
xchg
out
int
xchg
sti
cmp
or
das
aaa
and
adc
inc
rclb
and
dec
mov
xchg
std
pop
push
adc
push
adc
scas
push
cmp
jne
std
cs
pop
mov
pop
jmp
cli
movsb
cmp
outsl
push
movsl
cs
icebp
cmp
loope
or
add
insl
cmp
mov
inc
or
arpl
stos
ss
pop
cmp
icebp
into
aad
mov
int
mov
inc
lods
mov
outsb
lds
inc
enter
imul
lcall
mov
sahf
out
ljmp
pop
in
int3
jno
push
addl
push
xor
mov
xor
mov
sbb
lcall
fisubs
adc
test
xor
dec
aaa
cs
or
jecxz
sbb
insl
cld
lret
clc
movsl
hlt
jns
mov
xor
mov
mov
ja
or
out
inc
aam
out
push
jns
and
lock
sbb
add
jb
xchg
mov
sub
xor
mov
les
sbb
xchg
mov
sbb
andb
sbb
dec
bound
mov
mov
or
cld
mov
sbb
pop
ljmp
and
push
shl
stos
loope
aad
mov
test
lods
sub
cmpsl
sbb
in
fmuls
sbbb
iret
subb
fimull
xchg
jmp
clc
jl
jns,pt
pop
cmpsb
pop
xchg
mov
mov
mov
dec
dec
inc
pop
xchg
ret
aad
lods
ja
sbb
jnp
xchg
pop
clc
je
popf
jl
cld
and
lods
lea
mov
popl
xchg
ljmp
mov
or
mov
gs
fistps
mov
add
pop
inc
stc
inc
lods
xlat
rol
ret
shrl
push
xchg
or
sub
xor
xchg
enter
aaa
mov
cmp
add
out
sahf
push
fucomp
cld
int3
mov
or
push
and
push
push
orb
mov
les
pop
pop
aas
out
movsl
arpl
pushf
dec
stos
push
lock
mov
aas
pop
xlat
icebp
mov
mov
or
pop
data16
lfs
rorl
outsb
lret
adc
lock
adc
insb
daa
add
enter
pop
mov
aaa
in
pusha
cmc
inc
mov
outsb
dec
pop
sub
fsubr
in
std
sub
cmp
cs
cmc
xchg
lret
cmp
call
arpl
xchg
inc
imul
push
add
add
sub
pop
test
aas
test
test
outsb
sub
scas
pop
jg
fstpt
ret
mov
xchg
scas
mov
and
cmpsl
mov
xchg
repnz
sub
test
repnz
vmovddup
pop
lods
sbb
rorl
cmc
enter
call
inc
icebp
repz
loope
sub
cmc
add
mov
mov
or
insb
mov
lods
mov
cmpsb
cmp
roll
test
mov
shrl
adc
push
je
xchg
out
pop
push
add
addb
adc
push
shrl
mov
cmp
cmp
out
xor
ljmp
or
push
les
incl
sbb
inc
mov
dec
inc
movsb
cmpsl
cmpsb
and
test
scas
and
nop
xchg
cli
out
cmp
fsubr
movsl
cmp
mov
inc
lcall
fcompl
sbb
leave
repz
and
idivl
cmpsb
dec
push
sbb
sahf
push
xchg
jnp
inc
js
fimull
fildll
xchg
popf
mov
xor
dec
scas
sub
pop
fnsave
je
sub
aad
jo
loope
push
mov
push
flds
loope
scas
sahf
inc
pop
push
adc
jge
insb
or
pop
fcomp
push
cs
xor
fs
insb
xchg
pop
pop
and
rolb
mov
mov
imul
and
pop
fdivs
xor
sub
test
dec
mov
push
inc
dec
dec
rorb
xor
stos
jo
std
shr
mov
dec
lods
fstpl
xor
or
mov
ja
pop
mov
and
in
inc
sti
cmp
out
mov
mov
rcrl
jl
jno
inc
dec
mulb
lods
ja,pn
push
addl
cmp
divl
stos
mov
cwtl
inc
sahf
mov
out
mov
aad
mov
adc
jb
call
mov
cmc
inc
sbb
jmp
cs
jle
pop
push
pop
out
outsl
repnz
inc
std
push
ret
lcall
or
add
adc
icebp
rolb
aas
and
lock
rcr
shll
and
sub
dec
push
add
les
pop
test
leave
gs
dec
gs
fldl
sar
cmp
mov
cmp
std
ffree
mov
enter
mov
or
and
inc
push
or
das
fdivp
call
push
adc
and
repz
xor
ds
add
addb
lock
es
mov
aas
or
incb
sti
push
xor
loopne
mov
in
loop
mov
mov
push
out
mov
es
xor
jg
jno
dec
pushf
sub
dec
les
loopne
mov
sti
insb
das
repz
call
movsb
push
ljmp
push
setb
shrl
call
rorb
sub
clc
repz
xchg
pop
roll
fistpll
sub
mov
and
jne
mov
rorb
loopne
inc
je
push
lcall
out
iret
jne
jp
xor
ret
xchg
inc
fucomi
sub
in
pop
enter
lods
call
mov
loop
mov
pop
dec
push
cld
jg
jl
outsb
inc
into
fistpl
jge,pt
sbb
lret
mov
cmp
repz
outsb
std
out
mov
pop
push
add
pusha
add
xor
mov
out
je
pushaw
lret
js
sbbl
inc
aad
loope
fisubl
stos
push
loop
fisubrl
mov
jge
ficoms
stos
pop
fdivp
xorb
pushfw
leave
addr16
sti
or
sbbl
sbbl
test
jno
pop
es
mov
sbb
enter
add
mov
shrl
sti
shrb
cli
mov
push
add
aas
mov
in
fisttpl
cwtl
and
sbb
shlb
idivb
and
cmpsb
cwtl
dec
lods
sbb
rcrl
push
jbe
fistpll
cmp
rcll
aad
mov
int
ret
xchg
pop
shr
rorb
xchg
sbb
dec
xchg
jp
dec
popf
push
popf
cld
jbe
outsb
repz
and
jo
shrl
jge
sub
ljmp
das
js
lret
lods
and
inc
pushf
imul
pop
mov
data16
or
xchg
loop
adc
lret
or
mov
xor
stos
cmc
cmp
sub
push
mov
inc
sub
sub
adc
adc
cmp
hlt
sub
and
lahf
pop
addb
outsl
cmp
or
fnsave
inc
jecxz
rorl
xchg
dec
push
cli
pop
ljmp
mov
push
pushf
inc
push
lods
sbb
outsl
pop
pop
hlt
inc
sbb
pusha
mov
add
sbb
xchg
xor
jno
push
mov
int3
push
cmp
dec
or
mov
xchg
rolb
push
jmp
test
cli
popf
cmp
inc
mov
sbb
lcall
lea
and
in
mov
mov
xor
fnstenv
inc
xchg
aaa
clc
or
sahf
jmp
sub
push
mov
inc
adc
add
inc
ss
in
mov
shll
push
outsl
pop
jo
mov
add
insl
dec
dec
pop
mov
test
or
jne
jle
or
fwait
loopne
cwtl
pusha
pop
xchg
xor
insb
xor
test
rcll
xorb
hlt
mov
jae
test
cld
dec
xor
orb
insb
mov
and
sub
bound
sti
mov
xchg
bound
jbe
push
push
push
js
pop
in
inc
mov
cs
xor
sahf
inc
fldl
push
mov
and
pop
imul
mov
lods
xor
in
in
insl
insl
inc
xchg
shrl
shlb
jle
mov
adc
bound
and
mov
mov
in
jno
xchg
push
pop
xor
mov
and
rcll
mov
jle
lods
push
mov
je
push
lock
mov
scas
adc
or
sub
and
push
out
mov
arpl
adc
add
inc
adc
dec
add
pusha
sub
negb
mov
add
mov
xchg
cli
shlb
sub
icebp
inc
sbb
mulb
mov
test
mov
int
popf
push
lods
fldenv
jne
mov
xor
sti
subb
lods
addb
xchg
add
cld
jmp
lret
mov
pusha
mov
dec
mov
in
inc
inc
xor
jno
es
insl
fistl
mov
insb
inc
xorl
fdiv
or
adc
cmp
dec
sbb
mov
js
outsl
cmp
dec
add
subb
inc
scas
xor
in
and
dec
rclb
jge
arpl
inc
fstl
push
push
jecxz
std
add
push
push
shl
push
sbbb
mov
das
fbld
scas
add
mov
mov
cmp
insl
dec
cmc
das
test
lahf
mov
add
mov
push
mov
jne
xchg
push
or
cmp
jne
mov
pusha
xchg
mov
adc
pop
xchg
ror
pop
scas
call
push
shlb
pop
incl
add
and
mov
inc
and
shrb
loop
js
pop
ret
nop
mov
cld
xchg
mov
jp
or
adc
loope
lods
mov
sub
add
or
aaa
mov
adc
push
add
stos
mov
out
or
and
push
add
dec
mov
sbb
sub
adcb
and
cmpsb
cmp
mov
jmp
dec
leave
push
outsb
test
mov
pop
jg
add
call
mov
fisubrl
mulb
adc
jg
daa
ret
jl
in
lcall
push
jmp
daa
sub
xchg
or
cmp
mov
mov
out
push
rcll
xchg
int3
in
fucom
and
dec
inc
cmp
fisttpll
std
cmp
add
imulb
rcpps
hlt
shl
or
lods
jne
mov
push
or
mov
lret
fidivs
xorb
popl
lods
pop
lock
mov
inc
xchg
xchg
push
push
sub
push
mov
or
jno
push
mov
das
xchg
jo
mov
pushf
mov
scas
repz
subb
std
int
es
inc
clc
out
imul
pop
pop
and
or
iret
cmp
test
push
fnstsw
rclb
out
inc
jp
push
outsb
inc
mov
push
loop
jno
xor
loop
cmp
jo
sub
adc
es
bound
push
push
xor
pop
push
add
mov
scas
cli
ret
sub
xor
dec
insl
dec
mov
cmp
push
jecxz
xor
call
mov
push
mov
mov
mov
rcl
mov
loope
xlat
add
sti
lods
mov
cmpsb
pop
pop
adc
imul
mov
and
jl
jmp
and
adc
adc
fiadds
repz
shll
mov
leave
add
push
je
roll
mov
cli
fisubl
adc
xchg
addl
inc
add
xchg
inc
cltd
shl
movsb
in
pop
sub
testl
inc
and
int3
int3
pop
leave
xor
adc
imul
fcmovnu
inc
push
push
xor
scas
jno
mov
out
dec
sub
movsb
inc
sbb
mov
sbb
enter
sbb
mov
pop
pop
rcll
fucomi
imul
imul
inc
push
hlt
notb
ja
loopne
daa
cli
xchg
xor
pop
mov
pop
ss
roll
test
mov
das
iret
push
lock
push
jp
repz
pushl
hlt
into
xchg
cmp
xor
push
mov
mov
adc
cmp
mov
inc
inc
jmp
stos
int
pushf
pusha
push
lods
jg
xchg
pushf
push
mov
push
and
add
outsb
and
lahf
pushf
cwtl
and
add
mov
push
sub
aas
pop
pop
jl
fwait
outsb
pop
fnsave
imul
outsl
fdivr
arpl
jg
xchg
cld
aam
add
sbb
xchg
mov
xchg
scas
outsl
ficoml
jbe
clc
lock
in
mov
push
into
add
or
pop
mov
jne
pop
ret
lahf
cmp
or
mov
or
aam
cmp
mov
inc
pop
stos
mov
mov
flds
add
cmp
xchg
aam
fld
and
imul
iret
ds
pop
sarl
in
jnp
cmc
lods
stos
push
dec
xlat
xchg
insb
pop
fiaddl
fwait
movsl
rclb
stc
arpl
xchg
mov
test
lahf
dec
incl
jg
jnp
les
outsl
loop
ljmp
test
xlat
pop
sbbb
call
adc
dec
divb
ret
cmp
or
cltd
into
fldlg2
je,pt
push
jmp
mov
pop
call
movsl
push
fdivrs
push
sbb
pop
jmp
call
and
scas
add
add
ret
hlt
mov
push
or
push
cmp
test
enter
inc
aas
pop
cwtl
repnz
fimuls
mov
or
xchg
adc
xorb
imull
add
outsb
mov
mov
add
aaa
push
clc
inc
mov
jp
jb
gs
loop
dec
cld
les
ficoml
das
cwtl
inc
fs
xchg
mov
arpl
and
xor
sbb
mov
cmp
fcompl
out
add
rolb
pop
ret
jb
jmp
inc
jo
and
cs
popf
sub
popa
sbb
mov
addr16
je
call
jge
mov
dec
lods
clc
shrl
mov
or
mov
sbb
fcmovbe
adcb
lock
clc
test
and
icebp
cmp
cmp
outsl
pop
jb
add
xchg
xchg
xor
add
das
sbb
jg
cmpsl
sub
sbb
rcrb
pop
js
jo
iret
stc
or
jl
sub
pop
xchg
cmc
int
lock
or
cmp
mov
push
sub
jp
out
pminub
testb
or
arpl
push
shrl
or
loope
test
or
sbb
dec
lret
push
fs
out
xchg
sbb
mov
es
lahf
jl
test
pop
repnz
mov
mov
cmc
clc
jbe
jecxz
xchg
in
movsl
cwtl
test
sub
or
jmp
push
inc
repz
arpl
xchg
mov
cmpl
clc
add
mov
movsl
movsl
daa
out
xchg
cmp
adc
clc
jo
test
divb
pop
dec
xchg
sub
rcll
sti
call
mov
mov
push
stos
mov
and
sbb
mov
and
cltd
dec
loop
mov
pop
vmovupd
shll
mov
xchg
mov
add
dec
sbb
mov
and
lea
shll
scas
mov
push
inc
push
jge
imulb
mov
push
xor
lods
cmp
add
jecxz
sbb
aam
pop
add
mov
pop
stc
xchg
aas
mov
enter
scas
call
and
cmp
or
mov
sbb
in
adc
in
fldl
out
sbb
insl
adc
test
shrl
bound
sti
jb
inc
pop
jecxz
jge
dec
sti
push
out
and
ja
xor
push
cmpsl
pcmpeqd
push
pop
scas
inc
orl
and
decl
cmp
xchg
jg
adc
iret
or
jbe
add
sub
mov
push
faddl
adc
push
in
push
pop
push
fbld
inc
and
mov
add
or
jg
data16
dec
dec
outsb
dec
inc
dec
inc
xor
loopne
pop
and
stos
sbb
into
int3
cmp
sbb
pop
xor
mov
test
push
and
ja
in
mov
cmp
pop
or
and
pop
stos
push
imul
or
sub
dec
jno
addr16
add
or
or
sub
and
push
and
or
sbb
in
sti
mov
inc
outsl
push
js
jns
aas
jno
int
stos
push
add
popa
jge
pop
imul
jns
push
movsl
stos
mov
or
jae
add
mov
xchg
test
mov
adc
xor
xor
cmp
xor
xor
xor
push
push
mov
rorb
and
pop
imul
cmp
scas
add
add
ljmp
insb
arpl
insb
fs
imul
adc
cmp
xor
inc
xchg
cmp
jp
outsb
mov
pop
cmp
cmp
aaa
mov
and
jnp
xor
scas
cmp
scas
and
pop
dec
mov
push
push
inc
dec
push
push
dec
mov
mov
stos
xlat
push
or
incb
cmp
outsl
popa
inc
inc
inc
dec
dec
dec
inc
inc
dec
pop
pop
add
mov
add
sub
adc
test
jo
push
pop
test
push
push
or
sub
or
inc
xlat
fs
add
or
add
add
mov
mov
sub
ja
rcrb
js
movsl
lods
lret
out
add
add
aaa
dec
sub
mov
lods
mov
push
repnz
push
push
clc
ljmp
bound
jne
je
outsl
insl
imul
int
idivb
outsb
xor
jne
mov
orb
pushl
xor
jne
push
pop
mov
sbb
add
inc
pop
imul
cmp
jne
ret
je
and
repnz
lcall
push
aaa
or
lods
jge
adc
stc
neg
fwait
or
outsl
push
mov
xchg
sbb
pushl
rcll
inc
insb
addr16
loopne
rorl
faddl
mov
add
inc
cltd
lods
std
or
inc
dec
xchg
push
inc
dec
dec
push
inc
push
xchg
pop
aaa
sbb
addr16
xor
pop
imul
add
jbe
dec
jns
jae
dec
pop
inc
inc
push
add
add
imul
outsb
enter
push
cmp
movsl
scas
sbb
or
mov
xor
ja
jecxz
shlb
rclb
pop
xchg
fistpl
insl
mov
xor
pop
test
outsl
fcoms
and
insb
dec
gs
imul
imul
inc
jae
add
movsb
and
mov
sub
bound
xor
daa
icebp
lcall
pop
inc
and
ljmp
lahf
loope
lods
call
mov
mov
fildll
jbe
jnp
xchg
ljmp
xchg
in
int
lock
jns
pop
xor
mov
orl
dec
adcl
jmp
cmp
or
jb
lds
scas
jnp
mov
gs
ljmp
inc
cwtl
int
in
dec
cmp
jge
fisttpl
sbb
call
dec
mov
mov
fldt
pop
xchg
testb
test
test
ljmp
xor
adc
cmp
push
repnz
bound
cltd
dec
pop
mov
insl
sbb
testl
inc
mov
jmp
xchg
je
or
adc
pop
sahf
jl
lret
jmp
aad
das
fs
or
adc
faddp
push
sti
ljmp
jl
and
push
dec
popf
jb
mov
scas
in
sbb
mov
or
dec
cmp
add
stos
movsb
mov
out
hlt
dec
jmp
nopl
jnp
mov
jge
loopne
push
mov
jns
fnstenv
std
ficompl
mov
call
lcall
push
mov
push
xchg
lock
shll
sbb
xor
decl
les
or
push
lods
add
inc
sub
inc
jle
mov
in
cmp
sbb
aaa
xchg
jb
add
scas
or
fisubrl
cmp
imulb
cmp
xchg
stos
repz
jmp
data16
sbbl
out
faddl
in
pop
mov
pushl
lahf
scas
jg
sbb
vminss
fldt
jl
fwait
sbb
push
xchg
push
and
cmpsl
cmp
pop
fisttps
aad
cmp
pushf
scas
push
int
out
jmp
xor
call
lcall
adc
or
jae
sbb
push
sar
cmp
xchg
cwtl
call
mov
push
inc
ja
out
jb
sub
dec
mov
xchg
or
sub
mov
push
addr16
mov
xchg
mov
cwtl
jne
dec
test
rclb
ds
mov
cmp
mov
mov
xor
call
dec
sbbb
xchg
dec
addb
pop
fnsave
fildll
push
jae,pt
mov
add
icebp
and
cs
inc
pop
jne
outsl
arpl
sub
xlat
xor
inc
insl
mov
adc
std
int
adc
and
fsubr
xchg
das
iret
cli
in
loopne
cltd
mov
add
xor
ljmp
mov
imul
addr16
pop
sbb
and
pop
cmp
sbb
or
jmp
mov
jbe
into
cmp
je
or
jmp
ljmp
and
jp
test
push
out
int
jge
jae
nop
lds
mov
je
mov
or
xchg
adc
pop
jle
incl
cmp
xchg
orl
jp
test
inc
jg
dec
pop
or
insb
mov
push
insl
mov
inc
mov
cmp
pop
push
mov
jmp
xchg
and
jl
and
pop
mov
add
mov
std
decl
insb
stos
test
push
popf
inc
mov
fs
push
jno
push
decl
cmc
outsb
inc
ljmp
fldenv
or
call
inc
orb
loope
inc
add
shll
mov
xchg
xchg
xchg
cmp
flds
movsb
call
adc
imul
jmp
mov
out
out
xchg
cmp
sbb
not
pop
add
jne
and
xchg
dec
mov
inc
xor
xor
aaa
mov
cltd
lock
ss
jnp
std
jge
cld
jg
fistpl
test
inc
in
add
pop
jno
int
cmc
ljmp
fnsave
aam
sub
negb
mov
das
fcomps
inc
stc
jns
sbb
in
and
ljmp
stc
dec
sbb
fistl
mov
aaa
leave
jo
xchg
cs
loop
sub
decl
push
cmp
int
mov
mov
insb
mov
fdivr
push
adc
mov
mov
jns
jle
inc
ljmp
xlat
pop
test
push
mov
sub
adc
adc
addr16
pop
lea
push
ficoml
call
push
pop
lcall
mov
pop
cmp
mov
ret
mov
push
pop
and
sbb
decl
inc
push
and
shl
shlb
ja
dec
call
incl
test
jg
nop
xchg
mov
or
xchg
outsb
push
cmpsb
ljmp
push
jp
or
adc
sar
mov
add
inc
cltd
repnz
or
mov
adc
inc
call
fists
xchg
xchg
int3
in
int3
mov
dec
and
mov
arpl
mov
dec
adc
inc
adc
shrl
call
adc
repz
lahf
call
fisubrl
incl
jno
xchg
or
mov
bt
arpl
hlt
test
aam
lods
call
inc
aam
mov
jge
lock
mov
orb
test
pop
incl
incl
loopne
mov
test
dec
and
push
dec
subb
pop
dec
mov
dec
add
insl
jnp
add
das
xor
sub
jmp
jecxz
or
pop
sbb
jge
fsts
leave
scas
rolb
jnp
int3
inc
cld
mov
mov
mov
scas
clc
mov
in
dec
rol
and
xor
cmp
and
sub
int3
cs
pushl
sbb
mov
hlt
pop
insb
adc
icebp
xor
icebp
mov
xchg
pop
pushl
xor
and
dec
sbb
push
lods
aas
mov
jo
mov
imul
sbb
push
cmp
call
mov
jae
aaa
jmp
in
and
test
repnz
pop
sbb
aad
incl
lea
dec
sbbl
jmp
cli
dec
cmc
loope
idiv
adc
xlat
les
add
stos
push
popf
pop
add
adc
lcall
pop
jae
dec
xor
xor
out
sarl
xchg
sar
lods
dec
js
cltd
rcl
push
rorl
and
lcall
add
push
push
push
jg
push
xchg
test
dec
cmp
iret
out
insl
incl
dec
dec
mov
jp
sahf
call
out
xlat
fists
pop
add
adc
out
int
sti
iret
fildll
les
jns
cmp
int
mov
mov
xlat
cld
and
pushl
lahf
mov
mov
inc
pop
mov
in
mov
incl
or
out
pusha
negb
pop
dec
xchg
int3
ja
mov
jecxz
insl
adc
outsl
std
mov
rcrl
xlat
pop
jnp
xlat
mov
enter
call
int
and
or
shll
mov
mov
dec
sbb
lahf
or
jmp
and
out
mov
xor
fcmovb
imull
inc
adc
xchg
sbb
pushl
test
outsb
sbb
shrl
pop
test
lret
std
lea
movsb
dec
sub
lods
inc
inc
dec
mov
decl
subb
aam
pusha
xchg
mov
popa
imul
decl
add
cmp
cs
jmp
shl
inc
xchg
in
mov
mov
jmp
xchg
or
in
or
scas
sahf
lods
mov
std
andb
adc
incl
push
in
sbb
repz
cmc
pop
jne
leave
mov
lahf
movsl
popa
outsb
lock
cmp
data16
adcl
sbb
repnz
pop
call
jne
test
fdivrl
push
insb
ss
in
and
mov
mov
xchg
call
out
lahf
aam
inc
mov
incl
lock
jb
icebp
add
mov
and
mov
xlat
or
sbb
and
aam
test
push
fcmovu
pop
push
inc
test
lock
jg
fcmovu
test
adc
stos
jp
sub
call
adc
lcall
jmp
adc
mov
cmpps
cld
pop
movsb
mov
mov
push
pop
mov
push
dec
inc
pop
fcomi
sub
xchg
pop
push
mov
stc
repnz
or
ds
mov
rcrb
test
rcll
daa
add
je
push
std
push
hlt
leave
push
add
xor
movsl
in
in
je
in
inc
xchg
sahf
lock
or
inc
and
cmp
dec
stos
xchg
clc
gs
jmp
sbb
decl
lret
cmpsb
cmp
mov
or
icebp
push
out
sbb
or
cs
iret
in
adc
das
jecxz
dec
dec
push
lock
enter
clc
ljmp
repz
cld
fistl
xlat
lretw
push
dec
pop
loop
fmulp
bnd
lock
repz
arpl
lcall
out
mov
in
and
cld
jge
imul
mov
xchg
dec
dec
sbb
sbb
call
gs
cs
push
rclb
scas
imul
dec
jecxz
popf
xor
sub
sar
sbb
icebp
cli
pushl
or
inc
mov
cmp
add
and
cmp
mov
sbb
mov
sub
push
inc
mov
lods
add
adcb
pop
pop
mov
or
mov
test
es
test
dec
hlt
inc
out
jle
sub
clc
ljmp
push
mov
mov
rcrl
jecxz
lcall
into
out
dec
sub
test
xchg
fnsave
sar
mov
push
mov
lcall
add
loop
push
cmp
add
mov
stos
aad
sbb
mov
and
or
pusha
out
test
add
arpl
ljmp
mov
arpl
inc
call
daa
mov
jmp
loopne
stos
lock
insb
andb
fidivrs
xchg
imul
clc
pushl
call
lock
in
cltd
xchg
popf
mov
xchg
xor
jmp
push
cmp
push
mov
sub
fcoml
jne
pop
stc
cltd
cli
ret
scas
fdivs
cld
lcall
mov
movsl
fimuls
and
ljmp
dec
jg
cmp
fsqrt
decl
sbb
fadds
mov
mov
cwtl
sbb
push
call
es
or
loop
mov
aaa
imul
or
decl
sub
stos
lcall
andb
inc
sbb
push
call
lret
and
les
xchg
or
pusha
repz
dec
data16
repnz
std
dec
test
jl
mov
das
jle
les
pminsw
cmp
call
cli
xchg
loopne
mov
or
dec
cmp
and
testb
pushl
adc
mov
clc
pushl
add
and
mov
xor
inc
jbe
dec
lods
push
in
movsl
decl
pop
push
leave
mov
or
jb
pop
sbb
dec
lret
ret
pop
mov
clc
incl
or
adc
test
push
cli
pop
cli
ljmp
call
insl
test
es
sub
andb
cs
jmp
call
or
hlt
pusha
or
pop
clc
or
mov
std
fnstenv
mov
decl
inc
xor
out
mov
jp
add
popf
or
cmp
xchg
push
pushl
adc
daa
cmp
loopne
frstor
jb
xchg
push
mov
cld
stc
inc
fsubr
and
call
popa
jb
test
sti
fs
inc
ljmp
scas
inc
xor
jmp
aas
jne
inc
push
jo
pushl
jb
xlat
stc
push
int
mov
fsubrl
popa
add
sbb
dec
jb
jmp
push
jl
lods
pushl
jp
incl
cmpsl
cmc
sti
test
mov
push
daa
mov
cli
das
push
ljmp
sbb
or
pop
or
out
enter
push
pop
xchg
leave
dec
mov
pop
jge
fnstsw
cli
das
push
loopne
push
dec
in
lods
cmpsb
int3
movb
mov
rol
cmp
std
xchg
std
push
xchg
mov
mov
pushf
dec
cmpsl
xlat
scas
sbb
cld
test
push
dec
sbb
xorl
push
daa
xchg
scas
insb
cs
jg
inc
dec
sub
js
or
clc
add
insl
push
test
and
iret
test
and
xchg
pop
xor
cmc
push
xchg
mull
jo
sar
ljmp
ret
cmp
cmp
nop
int3
dec
inc
jnp
lcall
cmc
push
cli
in
lock
out
add
pusha
leave
dec
lcall
ljmp
mov
cmpsl
adc
lcall
xor
fsubr
clc
sbb
xor
testb
add
or
andl
subb
adc
and
lahf
add
lcall
outsb
mov
xchg
imul
mov
fstps
enter
aaa
or
shrb
add
cmc
mov
lret
out
cli
mov
outsl
lods
ds
jp
imul
inc
sbbl
xor
add
scas
mov
shl
test
loopne
pop
lods
sti
lahf
jp
dec
or
test
test
scas
dec
mov
std
jmp
movsl
sub
mov
pushf
add
push
mov
jl
lret
sbb
add
push
mov
jnp
push
sub
push
jne
xor
pushl
cli
notb
aaa
xor
stos
ds
outsl
scas
lock
sahf
add
sub
pop
jl
call
addb
popa
and
jge
inc
pushl
add
ret
stos
jne
or
addr16
shll
cmpsl
mov
cli
jmp
decl
cmp
xor
iret
fsubs
ljmp
std
pop
and
pop
orb
mov
push
push
es
jecxz
std
iret
nop
mov
test
test
cmp
add
jnp
push
mov
inc
dec
mov
cwtl
ret
add
pop
sahf
cmp
cmp
lock
adc
cli
das
fwait
sbb
inc
lret
jmp
add
ret
or
jle
incl
dec
adc
leave
incb
pop
sbbl
mov
cmp
lock
out
mov
xchg
cmpsb
jne
pop
add
pop
pop
call
sub
imul
sub
out
andl
sub
inc
mov
sub
xchg
ret
movsb
inc
xor
jp
enter
ljmp
jle
clc
cmp
adc
sub
gs
pop
outsl
jns
mov
lret
decl
lods
sub
mov
xor
adc
cmp
sbb
lock
or
mov
sub
repz
add
loopne
inc
or
lret
call
mov
add
cmc
adc
push
js
lret
sbb
fsqrt
jg
subl
push
repnz
lret
pop
call
es
mov
push
shr
push
sub
aad
sub
shr
mov
ljmp
xchg
fiadds
sbb
out
out
ret
sbb
pop
push
pop
iret
decl
lods
inc
sub
outsl
sub
jmp
ret
xchg
mov
push
jp
add
adc
pop
loopne
decl
push
jg
pop
cltd
int
pop
js
inc
cwtl
and
dec
fwait
lahf
inc
pushl
push
mov
mov
jb
mov
lock
stos
test
icebp
or
int3
ljmp
cmp
pop
sub
xchg
push
je
lea
test
sbb
lret
outsb
sbb
dec
mov
pop
jnp
cmp
mov
pop
sbb
andl
inc
adc
jmp
pop
testb
xor
adc
or
das
lods
mov
lock
pop
cli
in
in
add
out
push
stos
loop
inc
xor
stos
jg
mov
sub
pop
insb
mov
dec
pusha
xchg
icebp
fs
insl
mov
jg
mov
mov
pop
pop
in
imul
ja
es
out
jnp
stos
ljmp
call
jae
adc
pop
add
xchg
hlt
and
arpl
sbb
add
je
jno
fildl
test
adc
dec
jle
or
pop
fmull
xor
std
mov
mov
xchg
mov
movsl
pop
clc
pushl
ret
fcomps
mov
lcall
ficompl
mov
adc
rolb
dec
cmpsl
ds
lcall
mov
inc
sub
leave
cmp
cmp
inc
in
test
addb
add
xor
lret
ljmp
popf
sbb
mov
mov
gs
test
mov
jge
sbb
mov
test
or
lea
lds
outsb
inc
mov
pop
xchg
mov
pop
cmovne
push
sahf
stos
clc
fs
jno
mov
xor
push
fbld
int
mov
adc
pop
inc
sub
pop
fbstp
add
gs
ljmp
call
loope
in
cld
adc
arpl
ja
jg
fnstsw
jae
adc
pop
ljmp
aas
mov
test
fs
data16
sarb
pop
pop
mov
mov
mov
inc
xchg
sub
test
test
lcall
mov
dec
addr16
loope
cmc
lcall
adc
test
push
dec
push
push
add
or
pop
sbbb
xchg
push
aaa
mov
mov
dec
call
inc
test
call
fisttpl
mov
jecxz
lock
dec
cld
xor
ljmp
scas
rcr
or
ljmp
ret
rcll
shl
mov
pop
lock
das
lock
pop
push
xlat
jb
xor
sahf
outsl
lock
inc
xchg
stc
cmpsb
push
push
sti
icebp
mov
inc
ja
sub
mov
stos
into
cwtd
mov
xorl
pushf
stos
inc
mov
adc
sti
add
fistpll
mov
jl
rorl
mov
insl
fimull
mov
dec
testb
hlt
outsl
adc
push
subl
inc
xorl
pop
ljmp
and
or
inc
sarb
decl
dec
xor
ljmp
fimuls
mov
lea
lret
pop
repz
xchg
pop
clc
dec
in
mov
pushf
mov
dec
ja
lahf
mov
mov
mov
jmp
gs
push
in
scas
movsl
fiaddl
xor
and
lods
lret
rcl
jl
fwait
or
aam
fdivs
lea
decl
push
ret
loopne
inc
add
mov
clc
decl
sub
push
divl
adc
mov
fisttps
inc
inc
xchg
xchg
mov
cli
je
mov
cmp
xchg
jnp
push
shll
dec
enter
push
xor
sarl
popa
roll
mov
jmp
mov
lods
push
movsb
pop
jno
les
sbb
out
adc
incl
clc
imull
or
sarl
inc
jp
sub
jb
imul
xor
mov
int3
ss
pop
gs
in
add
test
inc
jbe
cli
mov
cmp
cmp
cmp
add
or
jecxz
and
out
pushf
pop
test
call
xor
mov
mov
repz
es
xchg
mov
cmp
outsb
dec
xor
mov
fnclex
inc
or
cmp
ficoml
fisttpl
sbb
pop
mov
int3
add
scas
xchg
xchg
shlb
pop
adc
add
mov
xchg
insb
clc
mov
dec
mov
cmp
adc
sub
sbb
xchg
cltd
inc
icebp
ljmp
dec
jl
cmp
js
and
gs
mov
hlt
cltd
out
icebp
pop
ret
dec
test
and
mov
enter
fdivrs
inc
lcall
insb
cmc
jl
testl
add
cwtl
movsl
inc
sub
inc
adc
jnp
test
outsl
test
xor
filds
jg
test
cmp
enter
loop
repz
mov
jmp
xor
lods
and
xchg
adc
or
sub
push
cmp
fwait
mov
lds
mov
and
mov
xor
adc
mov
shrb
inc
cli
sahf
sahf
mov
les
pusha
pop
dec
shrl
or
push
and
addr16
jg
out
mov
sub
and
pop
pop
push
or
repz
jl,pt
incl
pushl
push
jg
pushf
into
mov
pop
jbe
mov
dec
movsb
mov
inc
std
fists
test
pop
fldcw
lcall
fdivr
addr16
pop
outsl
dec
dec
mov
xchg
pop
leave
in
stos
in
or
mov
sbb
int3
cmp
pop
lock
adc
adc
out
pop
jecxz
cs
pusha
or
fs
sarb
pop
mov
cmp
add
and
addl
jmp
dec
jge
lock
cmp
jo
addr16
jns
jns
sbb
aam
out
add
inc
lcall
pusha
cs
test
jb
sbb
inc
jbe
imul
xchg
cmp
out
repnz
fucomip
sub
push
and
mov
cmp
jne
dec
out
xchg
mov
aas
mov
mov
mov
jle
stos
cmpsl
jo
das
daa
pop
cld
pusha
insl
fwait
cpuid
icebp
outsl
shr
mov
iret
xchg
sub
cmp
fwait
test
lcall
xchg
adc
cmp
icebp
sub
fistpl
sub
punpckhdq
sar
aaa
mov
fnsave
test
es
sahf
pop
sbbb
push
mov
dec
ret
dec
inc
jl
inc
test
test
lea
hlt
cmpl
inc
pop
fcomps
jmp
testl
jp
in
gs
adc
or
stc
incl
pop
lahf
mov
jl
dec
in
jae
mov
les
fs
ss
lods
jno
idivb
cmp
pop
loop
das
cmp
or
adc
addr16
xor
mov
clc
or
add
pop
out
mov
mov
jne
mov
lods
jmp
pusha
push
ret
inc
cmpsl
and
arpl
push
lods
mov
in
popf
xor
mov
ficompl
imul
outsl
aaa
dec
lcall
mov
push
dec
jg
or
mov
cmp
jmp
test
xchg
push
lcall
lahf
push
cmp
in
pop
dec
aad
and
mov
movsb
lahf
pusha
xchg
cmp
cltd
sar
outsl
std
mov
sub
adc
mov
cmp
jns
pop
mov
or
cmp
lret
and
out
lds
jmp
ja
fwait
mov
fs
push
dec
dec
stos
adc
imull
add
xchg
mov
push
pop
xchg
call
call
lcall
sbb
inc
or
or
stos
std
aas
insl
cmp
cmp
jmp
into
jns
mov
cmpsb
daa
jo
aad
jo
dec
decl
cld
in
jl
int
aam
in
cltd
mov
push
xor
clc
pushl
or
test
push
into
push
or
pop
pop
in
add
pushl
aad
pop
clc
incb
dec
cld
push
ret
or
adc
lcall
ja
push
arpl
sbb
pop
pop
push
mul
mov
jecxz
loopne
decl
nop
xchg
loop
dec
push
sbbl
clc
ljmp
or
iret
sub
mov
cli
pushf
call
inc
insb
ret
pop
pusha
data16
subb
ret
mov
cmp
cld
not
pop
outsl
inc
xor
jle
pop
in
xor
pop
adc
call
push
lea
dec
fisubl
pop
dec
ds
lahf
cld
ret
dec
or
nop
sub
xor
cmp
fstl
clc
outsl
dec
out
sbb
add
into
mov
xlat
pop
xchg
test
jg
fucomi
js
pop
adc
inc
dec
sti
xor
mov
sahf
and
in
pop
int3
andb
cmp
pop
dec
std
pop
clc
push
jg
lahf
and
mov
lea
repnz
cmpsl
popf
adc
in
sahf
xor
fbld
push
popa
or
or
in
sub
pop
clc
das
popa
jmp
or
movsl
nop
insb
inc
inc
mov
aaa
mov
push
xchg
aaa
outsl
dec
push
mov
in
rcll
push
dec
fmuls
add
push
xchg
mov
popa
xchg
mov
xor
cmp
xchg
cli
fildl
mov
fsubl
push
mov
pop
fnstsw
ficoms
in
lahf
aam
das
dec
int
cmp
cmc
adc
cli
decl
mov
mov
lea
cwtl
and
ffreep
orb
testl
ljmp
lock
roll
mov
adc
xor
mov
mov
call
mov
jg
jne
mov
jne
ds
xor
ss
jmp
xlat
sbb
das
add
pop
cmc
ret
sbb
or
push
push
pop
and
loop
xchg
cltd
pop
loopne
ds
sbbl
lods
push
lret
sbb
lcall
call
jmp
lcall
sub
jno
dec
call
cld
xor
add
push
popf
or
nop
gs
pushl
cmpl
stc
cwtl
or
sbb
idivl
je
inc
decl
cld
ljmp
cmp
hlt
sbb
mov
leave
sbb
xchg
sub
and
decl
incl
push
add
push
sarl
push
sub
ja
or
push
sub
or
and
push
pushl
inc
or
jne
xchg
and
jge
int3
bound
mov
dec
adc
je
mov
int3
cs
mov
jg
cli
jg
cmpsb
imul
cmp
jg
incb
sbb
imul
subl
sub
in
xor
ret
in
cmpsb
addr16
mov
sbb
pop
cli
dec
idivb
outsl
mov
stos
iret
stos
outsb
xchg
mov
pushl
lods
pop
into
push
clc
push
jbe
or
sbb
inc
cmp
outsl
sbb
mov
outsb
pushf
add
and
fnstsw
pop
jle
in
sub
fnstsw
fmuls
cmc
add
mov
ljmp
push
dec
dec
dec
lahf
rcrl
imul
repnz
pop
rclb
xchg
enter
dec
xorb
push
sbb
cmpsb
add
mov
pop
mov
fs
test
nop
adc
loope
pop
dec
add
call
incl
cmp
pop
mov
push
inc
jle
adc
push
sti
add
and
lret
insb
in
sbb
out
pop
es
jae
pop
adc
mov
xchg
lret
les
das
sti
and
adc
imul
add
mov
flds
imul
push
rol
incb
sub
inc
add
fs
sbb
ret
or
mov
ljmp
mov
addb
aam
xchg
push
imul
xchg
mov
jmp
mov
std
int3
xor
pusha
jg
mov
xor
into
pop
insl
fs
mov
call
mov
loop
mov
mov
mov
pop
loopne
imul
sbb
mov
pushl
sbb
sbb
pop
fcmovb
lods
or
cwtl
cmp
mov
mov
pop
mov
es
cld
scas
cli
das
ljmp
mov
xor
fstpl
or
ficoms
dec
pop
cmpsb
movsb
add
movsb
insb
mov
popf
cwtl
jg
lahf
cmp
in
mov
jbe
inc
pop
shrl
mulb
popf
subl
add
roll
inc
cld
fidivs
pop
js
push
jecxz
cli
mov
outsl
shl
sbb
hlt
lret
in
iret
out
dec
mov
call
push
mov
bound
jbe
inc
lret
lret
imul
loope
into
out
mov
xor
clc
popf
out
inc
ja
ja
jecxz
iret
mov
mov
push
mov
push
sub
or
das
cld
clc
ss
mov
nop
scas
adc
pushl
push
frstor
dec
xor
jno
imul
shl
pop
shl
jae
jnp
mov
sbb
shlb
xchg
push
and
dec
pop
push
and
jne
fdivp
scas
dec
push
imul
cmpsb
push
insb
pushf
repnz
xor
push
push
movsb
test
push
jns
mov
das
std
jle
inc
mov
mov
inc
aaa
inc
xchg
mov
scas
xor
xchg
cmp
fisttpll
jp
fsts
cmp
or
mulb
adc
enter
mov
inc
lock
mov
repnz
gs
icebp
sbb
xchg
adc
call
mov
popf
or
cmp
mov
and
sbb
jecxz
icebp
push
push
cmpsb
jno
jo
movsb
jmp
push
rolb
xchg
cs
jg
dec
pop
les
cmpsl
push
jecxz
test
out
ja
mov
pop
dec
stc
jae
shl
movsl
cmp
in
icebp
aaa
clc
jg
loop
maxps
outsl
hlt
mov
inc
jmp
arpl
ret
stos
xlat
popa
js
jg
inc
rorb
fnstcw
inc
pop
inc
mov
aad
shll
push
xchg
add
pop
jmp
jb
mov
test
insl
imul
test
pop
xchg
push
lcall
or
dec
jle
dec
std
mov
repnz
andb
jmp
mov
lret
dec
out
mov
jl
rolb
repnz
lods
outsb
cld
das
cld
sbb
movsl
inc
xlat
stc
outsb
xchg
insb
add
test
mov
add
addr16
mov
mov
cmp
cmpsl
les
popa
inc
lret
ret
push
push
movsl
cmpsl
pop
cld
push
cli
mov
mov
pop
aad
mov
pop
sub
mov
hlt
jmp
into
test
orl
pop
xor
incb
mov
xchg
or
shl
adc
ficompl
cli
fists
push
push
push
dec
cmp
inc
stc
adc
xor
fisubrs
shrl
dec
in
call
fisttps
xor
mov
mov
mov
jns
pop
pop
cli
incl
mov
dec
add
inc
xchg
ljmp
jl
cmpsb
cmc
testl
stos
mov
add
hlt
in
inc
jecxz
or
mov
ret
cmc
dec
shl
pop
das
in
mov
mov
andl
enter
jg
cld
or
mov
jmp
sets
add
pop
xchg
cli
pop
clc
sbb
roll
xor
fs
push
shr
and
notl
popa
dec
lock
fmuls
jl
dec
aam
popf
cmp
dec
sbb
xchg
iret
add
cmp
lock
bound
cmp
loopne
xchg
inc
mov
andb
mov
dec
aas
je
jge
inc
pop
cwtl
add
adc
pop
jge
jns
nop
lds
lds
push
shrl
lods
insb
icebp
dec
insb
mov
adc
mov
outsb
icebp
lcall
sbb
test
andb
or
cli
loopne
lcall
mov
cli
xchg
cwtl
jg
mov
xor
pop
jg
push
mov
or
add
mov
mov
mov
lcall
adc
inc
sbbb
dec
int3
pop
or
mov
mov
loopne
jo
cli
loop
and
push
call
pop
inc
mov
les
mov
mov
xor
sub
mov
mov
testb
negl
dec
inc
mov
lret
ffreep
lret
mov
mov
inc
call
and
inc
cmp
mull
rcrl
lods
insb
add
mov
movsl
mov
mov
cld
sbb
test
push
xchg
outsb
insb
insb
or
jb
cmp
cs
decl
xor
sbb
sub
cmpb
insb
mov
push
pushl
cmp
shll
es
sahf
jmp
adc
and
fistpl
das
xchg
clc
ljmp
fildl
and
and
in
jae
incl
repnz
repz
sbb
movsl
data16
pop
cs
xchg
jmp
insl
mov
sar
cmp
and
out
pop
push
or
jg
add
and
insl
lds
imul
mov
dec
inc
push
add
rorb
mov
jmp
xor
lcall
int
xor
loope
dec
loope
leave
xchg
jb
fistps
imul
dec
dec
add
push
dec
pop
ret
xchg
xor
incl
inc
cwtl
es
loopne
sbb
leave
lea
add
incl
pop
mov
lea
shl
adc
cmp
push
mov
xchg
adc
jmp
jns
fldcw
fbld
pop
addr16
or
dec
pop
enter
iret
xlat
or
decl
push
adc
movsl
inc
fstl
push
sub
fsubr
mov
and
jmp
ficoml
inc
setno
je
cmp
push
decb
push
rcrb
sub
hlt
jb
inc
hlt
lret
push
sub
clc
ficoms
adc
les
or
jle
test
bound
xchg
pop
clc
push
and
sbb
and
pop
std
inc
test
mov
lret
mov
or
mov
aaa
lds
lcall
inc
pusha
mov
jb
lcall
rclb
xor
or
add
addr16
sbb
dec
test
fucomip
adc
push
jnp
cmc
incl
dec
push
sub
pop
shlb
and
lret
cmp
mov
pop
cli
das
ja
shll
mov
inc
mov
incl
dec
in
sub
inc
inc
push
imull
xor
notl
adc
fidivrs
std
cld
push
pop
mov
adcl
inc
ljmp
push
stc
leave
adc
mov
shll
popa
xchg
cld
xor
lcall
mov
mov
sub
adc
mov
or
xchg
clc
decl
sbb
push
int
ja
pop
int
xor
add
or
mov
push
push
leave
sarb
pop
mov
xor
loope
pop
insb
lret
inc
inc
arpl
push
dec
push
loope
subb
imul
lret
lea
push
lcall
fsub
movsl
pop
add
pop
sub
jns
dec
xor
dec
push
sbb
decl
jno
hlt
iret
test
pop
mov
mov
rcr
jp
xor
aad
add
mov
int3
inc
push
iret
aad
sbb
leave
decl
jle
mov
js
mov
push
jno
and
lods
xchg
clc
outsb
data16
fbld
shrb
sbb
xchg
das
pop
jmp
lcall
inc
sahf
testb
pusha
daa
dec
push
not
add
add
call
leave
ret
enter
jge
into
push
pusha
in
dec
lcall
xchg
lock
xchg
and
fldt
push
mov
outsl
xchg
lret
jp
pop
inc
pop
push
mov
je
dec
retw
inc
mov
iret
mov
das
inc
icebp
xorb
in
cmp
movsb
and
adc
daa
adc
je
sub
pop
cli
decl
push
mov
cmp
enter
sub
mov
daa
mov
arpl
in
mov
imul
fsubrp
push
push
imul
pushl
inc
arpl
push
nop
fcmovnb
sbb
int
cwtl
ja
dec
cmpb
clc
lea
push
push
jg
push
adc
ja
das
cld
fiadds
cmp
inc
xor
call
ret
jnp
sar
xchg
push
push
or
sub
or
adc
mov
fsubrs
fisttpll
jmp
and
xor
push
ret
mov
hlt
pop
cld
or
dec
dec
mov
mov
aaa
repz
cmp
mov
mov
pop
adc
sbb
push
insl
addr16
out
mov
movb
in
fiadds
push
loope
lods
or
les
lea
jg
push
push
inc
shll
add
xor
jle
std
adc
lock
adc
push
jae
sbb
xchg
adc
xor
outsl
hlt
decl
dec
xorb
mov
rcrb
ljmp
movsb
and
jae
loop
jl
pop
sti
cmpsb
scas
xor
loope
dec
mov
clc
mov
pop
out
xlat
jg
cmp
clc
outsl
popa
sarb
xchg
mov
fisttpll
arpl
stos
ljmp
jno
das
stos
mov
mov
add
cmp
mov
lret
ljmp
mov
movl
sbb
mov
sbb
xchg
cmp
sarl
xchg
loope
in
and
push
call
sbb
gs
imul
das
or
xor
lock
xchg
call
sti
jg
inc
sbb
decb
ret
incb
add
mov
push
loope
sti
xor
mov
pop
scas
mov
sbb
seto
into
lds
push
bound
sbb
cli
jg
fstpt
mov
or
out
inc
out
scas
ret
incl
das
es
cmp
and
jl
mov
pop
cli
fbld
ror
add
divl
xor
pushl
jns
outsb
xor
adc
jnp
dec
shll
sub
lods
test
jl
ljmp
cli
cmp
incl
stos
aas
push
pusha
xchg
in
xchg
sbb
incl
adc
jne
in
dec
mov
es
leave
shll
loop
ljmp
lods
jbe
jecxz
xor
lret
xorb
or
mov
sbb
cmpsb
sbb
adc
shrl
movsb
pop
outsl
cwtl
mov
mov
pop
sar
sbb
or
fwait
dec
repnz
cmp
pop
mov
cmp
lds
lahf
cli
jl
fs
das
outsl
mov
jmp
nop
imul
mov
je
push
cmp
mov
jmp
adc
pop
dec
push
pop
add
xchg
mov
dec
adc
lods
adc
cwtl
adc
adc
mov
lahf
pop
or
sub
cwtl
xchg
xchg
jge
fistpll
lcall
cmc
and
inc
sbb
mov
shlb
scas
mov
jo
fucomip
call
setge
sub
and
cmpsl
ss
sbb
call
icebp
decl
jae
inc
add
mov
aad
les
push
mov
call
inc
add
jecxz
out
or
mov
mov
or
pop
xchg
scas
sub
sbb
pop
fcomip
enter
pop
lcall
adc
movsl
ljmp
mov
loopne
scas
mov
add
sti
out
push
pop
sti
decl
lea
push
jne
inc
cld
lahf
xchg
pop
imul
mull
xlat
cmp
scas
sarb
in
pop
mov
push
and
lret
push
push
pushw
insb
cmp
in
outsl
jns
mov
jmp
pusha
pop
fcmovbe
or
test
xor
mov
lret
lcall
push
xlat
in
push
inc
bound
add
adc
fists
dec
cld
jmp
push
or
nop
push
or
jl
nop
testl
add
pop
pop
sbb
mov
lods
out
mov
or
ljmp
jmp
cmp
lods
out
pop
xchg
dec
int
outsb
inc
call
sub
jne
aad
shlb
ljmp
lock
adc
fs
ficoms
test
out
outsb
ret
cmp
daa
pop
movsb
xor
jg
pusha
add
pop
xor
or
stc
call
sub
mov
outsl
std
call
xor
es
addr16
push
mov
in
inc
jmp
mov
jp
mov
and
mov
in
sbb
sub
and
xor
decl
mov
into
fadds
in
call
rclb
cmc
or
fwait
iret
iret
sub
sub
push
stos
repnz
jl
jmp
stos
in
pop
mov
jmp
xor
insl
lods
jecxz
test
xchg
jmp
mov
xor
cmp
or
pop
mov
adcl
or
ljmp
icebp
into
add
xchg
popf
xor
xchg
cmp
sub
sub
fisubs
xor
out
mov
jg
cmp
push
sbb
push
test
insl
cmp
sbb
adc
xlat
adc
lods
jb
mov
cmp
sbb
iret
jmp
call
adc
add
sub
hlt
ret
jp
push
lea
fistl
daa
insb
dec
add
inc
rolb
clc
loope
or
ss
in
and
add
sub
sbb
push
pop
cmp
sar
dec
mov
shr
lea
lret
repz
mov
aaa
movsl
xchg
mov
sbb
mov
xor
mov
popa
xchg
or
push
in
out
and
push
call
lcall
sbb
jl
mov
jg
mov
movsb
push
or
dec
lret
dec
push
xchg
clc
aad
adc
idivb
ljmp
mov
jmp
mov
aaa
lahf
fisubs
fisubrl
insb
clc
push
push
xchg
stos
jge
ljmp
lds
xor
cmc
rcll
push
inc
cmp
jns
push
pop
ljmp
imul
inc
cmp
aas
push
stos
hlt
sub
or
inc
jb
mov
and
push
movsb
out
sub
inc
call
jne
fstps
or
pop
add
daa
sbb
pusha
push
sbb
adc
push
jl
in
dec
cmpsl
icebp
mov
inc
inc
push
ljmp
pop
loopne
imul
loopne
dec
xchg
lcall
mov
sub
icebp
adc
arpl
cmpl
fwait
shlb
dec
mov
outsb
pop
ljmp
fs
and
push
xor
test
shrl
pop
or
jge
xchg
cli
inc
rcll
out
dec
cmp
jnp
nop
push
loope,pt
clc
mov
or
rcl
imulb
pop
sub
test
jg
jg
mov
pop
cmp
dec
fnstenv
pop
sbb
or
mov
clc
xchg
jge
rcr
test
leave
xor
decl
mov
jl
mov
ret
mov
int
icebp
inc
dec
xchg
mov
nop
mov
pop
sub
or
inc
adc
xor
jb
cmp
and
push
out
test
test
test
pushl
mov
mov
loopne
dec
stc
xchg
mov
lock
mov
imul
or
pop
lods
mov
xor
rorb
daa
js
lea
pop
clc
das
add
das
jne
gs
pushl
ret
jb
lds
pop
sbb
mov
jbe
test
fsubrl
sub
ljmp
add
push
push
mov
mov
add
mov
push
fildll
ljmp
cli
or
sbb
lods
xchg
jge
jnp
inc
push
lcall
test
in
enter
pop
cmp
lcall
adc
hlt
movsb
push
stos
mov
jmp
jns
loop
arpl
and
call
fs
jg
shrl
pop
repz
icebp
inc
push
pop
lock
pop
mov
das
sub
pop
int3
mov
mov
sub
addb
mov
push
ljmp
and
leave
xchg
mov
or
jnp
mov
mov
imul
sbb
fbld
lock
imul
cmp
jle
mov
cmp
lods
int
fs
jl
mov
cli
mov
movsb
dec
jge
adc
pop
mov
dec
fs
out
sbb
push
lods
mov
add
pop
clc
adc
or
add
mov
ja
push
mov
pusha
gs
mov
neg
inc
cs
jb
cmp
std
mov
lcall
push
lods
cltd
mov
inc
mov
or
jae
cmc
inc
xor
jg
pushl
fnstenvs
and
movsl
mov
sbb
mov
sbb
pop
je
inc
rclb
mov
ljmp
dec
xor
adc
leavew
std
leave
pop
lods
rcrl
pop
icebp
ficompl
sarl
mov
outsl
mov
leave
cwtl
xchg
adc
jg
call
std
in
mov
xor
es
and
out
insb
pushf
lods
call
inc
or
fdivrs
arpl
sbb
pop
testb
mov
call
jmp
xor
out
mov
cmpsb
imul
shll
xor
mov
clc
adc
jg
push
pop
aaa
mov
arpl
test
lcall
ljmp
push
sbb
movsl
add
inc
xchg
pop
jge
dec
shlb
imul
fisttps
adc
repz
ret
repz
fs
popa
add
pop
adc
aaa
adc
shrb
ja
int
bound
lcall
out
adc
mov
in
fstps
add
ret
out
fnstsw
jnp
and
leave
pushl
aaa
xchg
mov
aaa
lock
sbb
lea
movzwl
and
mov
aad
sub
fistpll
pushl
cmc
iret
es
loope
in
ja
icebp
call
sbb
ret
and
and
pop
orb
cmp
pop
stos
in
mov
push
outsl
sbb
cmc
xor
gs
int
orl
movsb
outsb
mov
imulb
xchg
aaa
imul
pop
sbb
jg
adc
dec
jle
iret
out
add
in
or
pushf
popa
mov
pop
ret
stc
mov
je
mov
push
add
jecxz
faddp
push
arpl
jge
fisttps
imull
lods
loope
iret
mov
cmp
pop
popl
incb
std
addr16
das
and
pop
pusha
cld
ret
push
push
lret
outsl
aad
mov
jge
jns
mov
out
ljmp
movsb
pop
pop
cld
arpl
das
aad
add
sub
lea
sbb
mov
inc
fs
jp
pop
loop
jnp
adc
sub
pop
mov
mov
inc
lea
jge
push
mov
test
dec
jl
filds
jecxz
xor
fdivs
das
pop
ret
mov
decl
out
fdecstp
xor
xchg
ja
inc
push
jne
pusha
xchg
mov
dec
sbbb
pop
adc
bsr
cmp
mov
imulb
lods
pop
add
mov
call
jmp
dec
lock
mov
movsb
pop
je
mov
rcrl
ljmp
rol
frstor
mov
andl
repnz
xchg
mov
jg
push
and
std
fucomip
mov
dec
jb
adc
jnp,pn
in
shll
pushl
jo
push
sbb
push
xchg
sbb
push
sbb
movsl
incl
xchg
test
insl
mov
push
cmp
movb
mov
jg
and
ja
fisubrs
xchg
gs
cmpsl
stos
pushl
cli
das
fimuls
inc
xchg
scas
les
jmp
jmp
loopne
test
jp
lods
and
xchg
mov
xchg
adc
pop
in
pushl
jbe
add
xchg
sahf
pop
jl
ret
sub
dec
divl
xor
mov
mov
push
push
fwait
sbb
sub
push
mov
or
movsb
add
inc
lcall
jl
movsb
rolb
adc
cmp
dec
cmp
out
mov
mov
dec
xchg
popf
rorb
jmp
mov
lret
add
push
insl
repz
ljmp
decl
push
pop
loope
mov
fists
jnp
call
lcall
or
clc
out
leave
xchg
cmp
aaa
push
ljmp
sub
repnz
nop
jno
loope
inc
outsl
jg
incl
cmp
add
pushf
jns
xchg
mov
inc
xchg
and
jp
or
outsl
lcall
push
add
mov
pop
ja
inc
jmp
insl
xor
jg
add
sub
push
jne
notl
cmpsl
mov
scas
lock
aad
xor
jg
loopne
jb
hlt
mov
fdivl
je
dec
jp
data16
sub
push
inc
jns
sbb
in
dec
sbbb
cwtl
test
xchg
xor
imul
jbe
cs
xor
and
les
cli
inc
rcrb
stos
lea
and
add
mov
xchg
mov
pop
in
mov
mov
dec
jge
adc
jmp
dec
pop
xor
mov
stc
inc
fs
popf
add
lahf
mov
pop
cld
jg
sub
pop
sbb
andl
dec
out
clc
cmc
fs
lcall
mov
in
in
out
jecxz,pn
mov
cli
fidivl
mov
and
or
fnstsw
jmp
lock
mov
js
ja
daa
and
ljmp
lods
andl
mov
dec
xchg
leave
fisttpl
mov
pop
xor
out
mov
les
int
sbb
incl
sub
shl
dec
andb
mov
fnstsw
xchg
mov
pop
je
ds
cmp
sbb
push
in
jg
call
add
jbe
add
dec
jg
out
cld
add
das
pop
fdiv
xchg
jecxz
and
imul
fwait
mov
loop
repnz
lock
out
xor
out
ljmp
mov
pop
mov
rolb
in
xchg
cmp
push
mov
cmp
jns
xor
pop
xor
aam
jnp
adcb
lcall
mov
and
aam
adc
ss
icebp
nop
iret
push
outsb
inc
into
idiv
mov
mov
rorb
lods
push
mov
fists
shll
xchg
enter
jl
test
dec
movsl
fisubl
or
lcall
comiss
outsl
xchg
enter
xchg
std
fidivs
add
test
call
sub
dec
mov
adc
cmp
sbb
out
aam
jmp
dec
add
mov
mov
movsl
xchg
xor
jno
test
dec
int
mov
outsl
dec
std
and
frstpm(287
inc
in
mov
dec
jg
lcall
lock
sbb
movsl
jne
inc
cmp
push
mov
ljmp
insl
gs
call
ret
xchg
imul
inc
mov
pop
outsb
icebp
xor
std
mov
call
mov
fmulp
xor
or
pushl
lcall
lods
loop
cld
mov
aad
mov
xorl
in
loopne
add
xor
pop
add
or
pop
pop
clc
stc
sub
aad
divl
mov
xor
mov
pop
test
repnz
test
push
cmp
ret
es
call
adc
leave
and
push
scas
lcall
aaa
cmp
adc
loopne
dec
stc
mov
daa
jb
enter
inc
es
mov
mov
pop
cwtl
mov
push
inc
imul
int
fistpll
pop
fimull
es
icebp
sar
jmp
adc
pusha
jl
jno
into
jl
adcl
test
das
daa
pop
add
repz
aaa
jmp
scas
cmp
popa
dec
jle
mov
mov
or
loop
cld
pop
bound
ljmp
jecxz
ljmp
lock
out
mov
pop
movhps
xor
xchg
leave
fsubrs
inc
cld
mov
pushl
xchg
mov
push
cs
stc
sbb
test
mov
movsb
outsb
std
dec
pushf
cwtl
add
sti
xchg
imul
lahf
mov
pushf
js
arpl
sar
lea
xlat
mov
xchg
mov
pop
jns
movsl
imul
lock
imul
cltd
push
push
sub
repz
jb
insb
add
stos
mov
outsl
ljmp
mov
cs
ja
sbb
mov
adc
pop
decl
cwtl
std
xor
push
repnz
jno
pop
cwtl
rorl
fpatan
lret
in
pop
jmp
incl
jp
movb
push
inc
pop
cmpsl
call
mov
jecxz
fwait
sarl
ds
cmp
pushl
jp
not
imul
cwtl
mov
mov
lcall
icebp
ljmp
mov
lret
mov
xor
dec
jae
lock
nop
pushl
push
and
mov
mov
int3
lahf
sbb
insl
lahf
out
mov
push
jp
mov
dec
call
test
pop
lret
mov
mov
fldt
das
hlt
ljmp
imul
out
inc
es
mov
sub
std
sti
push
idivb
cmc
xchg
hlt
je
push
pop
adc
mov
push
cs
imul
dec
loop
and
clc
sar
lock
adc
aaa
sti
subl
fs
inc
es
mov
adc
dec
jecxz
xor
aaa
popa
mov
rcll
mov
aad
das
fcomip
loop
xchg
pop
xor
add
jg
mov
lcallw
repnz
cmpsb
add
dec
push
std
xchg
push
mov
aaa
sub
decl
int3
add
cmp
out
sub
ret
fiadds
loope
mov
mov
push
std
xor
push
cmp
cs
jno
enter
leave
or
call
ljmp
enter
scas
jb
pop
insb
cmp
and
daa
xor
mov
pushl
cli
or
imul
fs
adc
cmp
sbb
cmp
push
sbb
js
sub
aaa
lods
test
add
mov
xchg
stc
cmp
push
sbb
cmp
cld
divb
scas
loop
sub
dec
jmp
mov
or
in
dec
out
xchg
js
subl
jp
inc
xor
inc
mov
in
lods
dec
xchg
mov
sub
ljmp
sahf
movsb
lcall
and
xchg
pop
sub
mov
or
out
jge
sbb
jb
mov
add
xchg
inc
inc
push
mov
fistl
xchg
fdivrl
jecxz
test
adc
decl
jg
les
insl
daa
mov
aaa
test
mov
xchg
add
incl
cld
repnz
jecxz
imul
xor
cld
loop
fwait
lods
add
dec
fnstcw
xchg
cmc
subb
dec
notb
pushf
cltd
in
or
xor
not
test
or
jo
cwtl
mov
mov
outsb
xchg
jmp
pop
push
push
inc
pop
sbb
push
mov
inc
in
rclb
push
sar
cld
mov
dec
adc
lds
inc
aad
das
xlat
push
jmp
stos
les
test
loopne
adc
sahf
aam
or
mov
jmp
or
inc
cltd
insb
or
aad
sub
scas
jg
orl
adc
cmp
sub
fstl
dec
sbb
out
incl
dec
popf
sbb
mov
add
popf
test
cmpsb
mov
push
cmpl
ljmp
decl
test
les
mov
mov
enter
jmp
jecxz
xchg
lcall
popa
jmp
inc
lcall
push
cmovns
mov
repz
xor
xor
incl
jb
popf
pop
dec
aad
mov
mov
sti
test
jb
in
push
incl
cmc
or
pop
loop
cmp
sahf
jg
jg
and
test
lds
xchg
lcall
call
push
mov
jae
cs
xchg
inc
dec
mov
fwait
xor
pop
mov
loopne
push
fmulp
pop
cmp
mov
shr
sbb
in
pushl
das
inc
and
cmp
rclb
dec
cmp
dec
push
outsl
ds
pushf
repz
mull
adcl
jne
movsl
es
pop
pop
mov
pop
mov
ljmp
mov
and
test
sub
add
cmpsb
xchg
xor
imul
xchg
outsl
mov
push
inc
andb
stos
sbb
cmp
sub
daa
outsl
mov
ljmp
test
mov
rcll
mov
xchg
or
jg
pop
fstps
push
pop
jne
shll
hlt
or
push
loope
adc
out
call
decb
shl
xor
mov
arpl
aam
sbb
nop
dec
and
cld
mov
std
clc
adc
hlt
xchg
jae
cmp
mov
std
int3
xor
sarl
aad
clc
pop
pop
xchg
fsubrp
jb
push
mov
scas
mov
sbb
lods
sub
das
icebp
andb
jecxz
movsl
stos
pop
cs
test
push
add
call
cmc
and
pop
add
loope
mov
decl
adc
shrl
iret
and
movsb
and
pusha
sahf
push
and
cmp
xchg
mov
ljmp
and
adc
das
or
ret
stos
sbb
push
mov
daa
jg
in
inc
xchg
sbb
aas
movsl
ljmp
mov
mov
lock
ljmp
or
pusha
or
mov
es
shll
fmuls
fnstenv
and
popf
pusha
popa
sub
fists
xchg
pop
insl
jge
outsb
jnp
adc
in
sbb
mov
fwait
jge
out
aam
fcoms
lcall
enter
cmp
mov
aad
xchg
xlat
mov
or
cmp
call
pop
push
out
pushf
in
aaa
scas
mov
cltd
aam
ljmp
xchg
cli
lcall
pop
sbb
and
insb
mov
add
xor
or
popf
add
les
fadd
aad
mov
sub
es
push
pop
clc
sub
lahf
mov
pop
lahf
jge
xchg
pop
or
cld
mov
or
mov
xchg
dec
stos
mov
cmp
add
cmp
mov
push
outsl
iret
cmp
add
pop
cli
xchg
test
out
xchg
dec
ss
sbb
inc
dec
std
mov
ja
inc
or
add
add
inc
ja
jle
dec
incb
adc
add
sbb
out
mov
jmp
dec
aam
xor
shl
ss
adc
jl
shl
xchg
jo
mov
stos
or
fsubr
dec
push
je
xor
cli
sbb
mov
notl
cmp
mov
out
mov
icebp
call
cmc
stc
push
pop
jge
xchg
in
bound
jp
bnd
ljmp
gs
sub
js
test
dec
orl
and
popf
lods
xor
push
xor
dec
out
scas
data16
add
jg
cs
andl
xchg
jle
clc
rclb
xchg
in
cmp
insl
and
je
xor
fbld
mov
jmp
xchg
les
insl
xchg
shll
xlat
mov
movsb
dec
mov
dec
inc
push
cmpsl
mov
mov
xchg
xchg
sbb
push
xor
lods
mov
mov
ja
add
inc
mov
pushl
mov
mov
lahf
hlt
mov
jmp
int
hlt
outsl
cmc
pushl
stc
iret
xchg
push
and
push
imul
test
nop
xlat
mov
xchg
xchg
mov
cltd
lods
sbb
popf
xor
cli
adc
stos
adc
add
jg
dec
add
inc
push
in
cltd
push
jg
fwait
xlat
jl
jns
out
addr16
aad
call
jecxz
adc
jo
mov
push
xor
in
pop
test
add
adc
clc
incl
cmc
add
jno
push
les
inc
and
lahf
stc
pop
out
mov
call
int3
stos
cltd
movsl
push
lds
mov
mov
push
mov
cmpsb
jno
fsubrl
cmp
das
aam
jl
push
lcall
mov
idiv
dec
jge
enter
rorl
sbb
inc
mov
jno
aaa
fwait
repz
out
gs
sbb
lock
out
cli
aaa
daa
sub
xchg
dec
adc
arpl
ret
movsl
ljmp
daa
mov
mov
das
ds
out
shrl
fidivrl
mov
add
loop
leave
and
lcall
sahf
loop
mov
aam
push
mov
dec
lcall
pop
stos
incl
jg
add
add
and
mov
lock
jge
cmpsl
aaa
and
xchg
stos
shl
leave
fld
jo
loop
out
fldl
lcall
mov
sar
push
cmc
fdivrp
jecxz
push
jg
sub
lods
jle
lcall
bound
add
xchg
cmp
movsb
add
push
cmpsb
jle
lock
jmp
addr16
iret
jle
inc
add
cmpsb
int3
faddl
ljmp
ss
mov
push
xor
lahf
mov
xor
pushf
dec
mov
xchg
mov
shrl
mov
inc
popa
mov
push
dec
sub
shll
movsb
sub
dec
notb
les
mov
stos
lcall
inc
mov
es
pop
xchg
cmp
xchg
pop
pop
or
jmp
add
push
loopne
cltd
jns
jmp
fistps
inc
sbb
jbe
sub
sbb
add
lret
xchg
int3
jg
lock
jg
shrl
cwtl
xchg
cmpsl
mov
jno
ficoms
aad
js
incl
fninit
sbb
and
call
ficoml
iret
jg
xchg
icebp
outsb
push
mov
leave
and
incl
js
dec
imul
in
lock
jmp
push
mov
or
das
cld
mov
cwtl
ljmp
lock
or
push
xchg
adc
dec
mov
adc
cld
inc
sub
lods
filds
cmp
popf
aas
test
add
lods
and
scas
call
enter
pop
push
mov
mov
mov
incl
jmp
mov
xorb
int3
aaa
outsl
cmc
cmp
lods
outsl
out
sub
and
sub
test
inc
loopne
scas
pop
jb
pop
dec
adc
or
push
repz
mov
and
das
ljmp
loop
cli
lcall
adc
pusha
lock
sbb
add
decl
pop
enter
and
ret
or
out
repz
aas
cwtl
mov
aad
push
jns
out
repz
mov
movsb
add
call
rol
hlt
insb
icebp
jmp
pop
pop
divb
mov
add
js
lret
adc
pop
mov
decl
cmp
cmp
loop
test
sub
enter
inc
add
push
jg
les
lds
xchg
cmp
jmp
mov
mov
xor
sbbb
insl
pusha
xlat
mov
insl
call
cli
das
leave
or
imul
lcall
icebp
mov
or
xchg
xchg
dec
inc
std
fcomip
sub
sub
mov
adc
lds
mov
cltd
sub
or
cmpsb
addr16
pop
ljmp
scas
ja
xchg
adc
mov
push
push
rorl
repnz
lcall
mov
inc
xchg
in
repz
out
mov
push
shll
stc
or
pop
cli
mov
add
into
sub
mov
xor
mov
les
jg
jecxz
xorl
outsl
inc
inc
mov
pop
incl
and
out
imul
sbb
push
fwait
pop
aas
mov
ljmp
push
push
pop
sti
cmpsl
pop
jmp
lret
inc
stos
push
test
inc
ret
call
jmp
scas
add
iret
sub
loopne
bound
mov
add
call
xchg
insb
add
jge
or
jne
push
sbb
dec
inc
add
in
cmp
sub
push
aad
pop
pop
inc
sbb
test
fbld
iret
sub
push
pop
out
or
and
mov
cmp
mov
mov
test
sub
jg
loopne
adc
das
pop
jle
lock
mov
out
inc
pop
sahf
adc
bound
add
mov
cwtl
cmp
in
fs
xor
addb
jg
cmp
mov
sub
or
push
xchg
cmpb
sub
inc
test
xchg
out
mov
call
repnz
mov
dec
jl
dec
out
movsb
enter
mov
adc
jecxz
cmp
mov
and
xchg
es
icebp
pushl
xchg
pushf
cld
pop
aaa
adc
jno
xlat
out
cmc
incl
pushl
movsl
xor
rclb
aad
test
inc
jnp
push
int3
pop
ret
lcall
sbb
leave
mov
scas
cld
push
dec
mov
adc
stos
in
shr
cwtl
and
xchg
sbb
and
out
fucomip
jmp
cmc
sbb
mov
cmp
inc
insl
add
pushf
mov
xchg
notl
mov
push
xchg
jg
dec
mov
add
jo
pop
add
cli
inc
dec
mov
mov
sub
inc
pushf
mov
imul
xchg
fmuls
lcall
movsl
inc
rcrl
jnp
push
add
inc
mov
in
fwait
shll
aad
decl
hlt
cld
xor
outsb
add
je
leave
insb
cmpsl
xchg
push
pop
xchg
or
adc
cmp
stc
jnp
icebp
ljmp
pop
ja
adc
dec
faddl
ss
inc
lods
jb
xchg
jle
mov
push
mov
and
inc
in
push
cltd
into
mov
movsl
lea
xchg
test
push
pop
jg
mov
add
dec
cmp
pushf
and
es
jg
sbb
pop
adc
orb
mov
pop
shlb
insb
lods
pushl
ljmp
xchg
push
es
aaa
mov
or
mov
cmpsb
lods
aaa
clc
call
addl
push
push
pusha
xchg
pop
cmc
xlat
pushf
pusha
inc
test
jg
incl
loope
jl
sbb
imul
lret
and
scas
cmp
gs
loopne
sbb
fsubl
push
cmp
or
sarl
sahf
shll
test
pop
lds
fwait
shlb
incl
mov
sbbl
mov
aad
clc
jg
pop
mov
push
or
fidivrs
inc
aas
test
das
lock
fstpt
mov
add
jl
inc
sub
jmp
or
stos
enter
mov
dec
push
ret
jge
fsubrl
ljmp
sti
cmp
inc
mov
push
scas
loop
int
add
loopne
jno
lcall
aad
mov
addr16
cmpsb
cmp
add
ds
int
inc
jns
out
jae
fucomp
call
inc
xor
lret
cmpsb
cltd
xor
incl
lock
sar
mov
insb
xchg
js
fcomps
lods
mov
mov
jbe
and
nop
mov
arpl
add
and
aam
fisttps
addr16
push
jnp
mov
insb
aad
sub
cltd
ja
add
outsb
adc
loop
jp
stos
or
stos
ret
int3
cmc
test
dec
jnp
inc
xor
into
clc
mov
das
lret
cld
es
out
sub
mov
mov
fincstp
inc
dec
lods
loope
outsb
pushw
adc
insl
or
test
call
lds
dec
movsb
mov
out
fsubr
dec
test
jo
dec
cmp
idivb
outsl
cld
in
insb
loopne
pop
cmc
movsb
fcom
xor
xchg
leave
ja
cs
cmp
mov
sbb
and
scas
jg
adc
ret
add
xchg
in
jne
mov
cld
outsl
add
js
ds
mov
sbb
and
sahf
rolb
repz
adc
pop
lcall
cld
call
or
test
xor
pop
sbbb
ljmp
mov
popa
mov
lcall
incl
das
es
or
ljmp
xchg
pop
pop
cli
lods
inc
fmuls
int3
shll
or
mov
xchg
mov
jl
fiadds
aaa
lret
bound
aaa
cli
lret
mov
dec
push
mov
repnz
jg
call
inc
mov
out
jecxz
mov
ror
mov
dec
adc
pushl
pop
cmp
or
and
or
lcall
fmuls
pop
push
ja
stos
cld
jp
mov
movsl
sbb
jns
rorb
in
jg
mov
sub
test
lock
ds
push
popf
xchg
cld
pushl
push
cmp
or
roll
xlat
addb
mov
loopne
mov
mov
das
mov
loop
sarl
sahf
bound
push
mov
push
dec
jno
ret
push
test
cmp
rolb
jg
stc
sbb
mov
inc
mov
dec
hlt
or
mov
arpl
jne
lahf
dec
daa
sub
dec
movsl
jo
aam
rorl
add
insl
lcall
jmp
ss
mov
push
jge
int3
xor
fldcw
cltd
cli
jle
std
xor
or
lcall
jne
lcall
adc
iret
push
lcall
out
cltd
pop
lahf
lcall
fwait
xchg
mov
adc
aaa
cli
jg
xor
push
ss
fnstsw
popf
mov
call
lret
rcr
out
mov
xchg
jb
les
ret
clc
in
adc
popf
push
xor
add
out
shr
popa
dec
movsb
decl
dec
fxch
add
mov
add
pop
jg
xor
ljmp
imul
out
sar
dec
cld
ljmp
or
stos
dec
sbb
add
popf
mov
hlt
push
imul
lds
ret
rolb
lea
push
fucomip
pop
icebp
pop
pop
loop
cmc
add
dec
fdivr
and
aaa
push
icebp
mov
inc
repnz
jae
sub
jp
ljmp
jecxz
enter
jmp
int3
mov
test
clc
mov
call
sbb
loopne
push
xchg
push
sub
sti
xor
mov
lcall
jne
std
push
jo
out
clc
jp
adc
mov
cmp
sbb
outsl
aad
ja
bound
call
pop
inc
loope
movsl
nop
add
adc
mov
sbb
xchg
sbb
mov
in
cs
sbb
outsb
ljmp
inc
pushl
and
mov
daa
fdivrl
call
or
sub
push
jbe
cmp
dec
adc
dec
xor
int3
xchg
mov
call
jmp
imul
xchg
add
ds
inc
push
mov
imul
jbe
pop
popf
xchg
mov
fstpt
lods
sub
cli
aam
aaa
ljmp
clc
jne
push
sub
or
cwtl
test
pop
aas
mov
sbb
mov
push
arpl
cmc
cs
add
xchg
das
lock
hlt
and
imul
xor
incb
xchg
dec
mov
xor
lret
lods
das
adcl
inc
out
cmpl
roll
add
shrb
clc
mov
jb
mov
pop
insl
add
push
cmp
insl
ret
and
or
mov
iret
scas
int
mov
loopne
insb
inc
nop
loop
pop
jno
jg
les
lret
pop
lret
jno
lret
ds
push
jg
mov
xchg
push
pushl
fsubl
stos
ljmp
addr16
movsb
mov
and
or
cmpsl
xor
pop
stos
sbb
mov
lcall
jo
push
add
shrl
mov
xor
xchg
mov
cmp
and
decl
bound
push
into
add
mov
sub
pusha
addr16
cld
push
es
decl
dec
popa
cltd
xchg
dec
adc
mov
sbb
insb
lods
pop
pop
dec
pop
fwait
sar
pushl
xor
mov
pop
jne
scas
sub
xor
loope
sub
inc
inc
dec
loope
pop
xor
mov
sbb
stos
sbb
adc
or
loop
inc
mov
test
test
sub
xor
pusha
or
fisttpl
aam
inc
dec
cld
push
jle
xchg
ficompl
daa
or
pop
out
lcall
das
sarl
jbe
and
mov
mov
cltd
mov
gs
pop
dec
std
out
loopne
clc
add
data16
add
scas
or
push
cli
dec
mov
pop
dec
rclb
push
jl
lcall
xchg
jae
testb
adc
stc
fcomi
lods
mov
mov
cmp
mov
lea
insb
mov
sbb
movsb
xchg
mov
aam
sub
inc
inc
call
fsubp
jnp
popa
adc
leave
inc
xlat
lcall
xor
mov
clc
or
clc
loopne
aaa
sub
imul
push
into
test
xchg
loopne
or
jmp
jb
xor
and
aas
cmp
lock
push
lock
ss
mov
shrl
repnz
jle
adcb
cmp
cmp
test
iret
shrb
lret
dec
ret
stos
mov
decl
pop
xchg
cmp
xor
push
xor
outsl
std
pushl
xor
inc
lret
sbb
aaa
sbb
push
jbe
fyl2x
cmovbe
nop
inc
mov
das
test
and
mov
jno
xor
lea
xchg
jmp
jge
sub
mov
xchg
or
dec
bound
insb
fwait
sub
jmp
and
mov
lods
xchg
fildl
movsl
ja
gs
and
decl
cld
push
andb
ds
test
lahf
pop
pop
pop
adc
mov
inc
jmp
inc
stc
lea
ffreep
pop
mov
addr16
inc
lcall
fs
xchg
std
xor
rolb
imul
push
orl
ret
daa
loop
ss
int3
aas
test
xchg
popf
dec
push
mov
jg
or
xchg
das
icebp
aaa
cli
sbb
sub
xchg
sbb
xchg
rolb
push
filds
clc
mov
mov
negl
mov
test
sub
mov
xchg
cmp
add
jg
sub
adc
in
and
sbb
incl
popa
xchg
insb
rcl
or
incb
cld
dec
xchg
pop
je
rcll
inc
inc
mov
jg
std
dec
popl
lcall
inc
mov
scas
sub
inc
pop
iret
xchg
pop
mov
sbb
fidivs
ljmp
fidivl
inc
jp
and
sbb
ljmp
cmc
fistps
popf
int
jecxz
jecxz
pop
cmpb
into
pop
stos
pushl
xor
lods
movsl
jecxz
add
mov
pop
call
mov
cmp
popa
adc
mov
xchg
and
jbe
mov
ljmp
push
data16
fisubrl
jae
pop
test
int3
outsl
jg
pop
fsubl
push
dec
push
lahf
mov
xchg
xlat
push
loopne
rorb
xor
pop
inc
mov
ljmp
cmc
adc
add
mov
divb
jbe
push
icebp
xor
mov
xor
pusha
pop
pop
dec
insb
sbb
inc
pop
xchg
int
lods
sbb
hlt
roll
test
ret
or
xchg
bound
cli
sub
out
pusha
mov
and
cs
mov
incl
mov
in
cmp
in
jae
mov
push
std
add
gs
mov
mov
pop
loop
push
lods
hlt
sub
fs
xchg
lock
inc
cmp
nop
jecxz
jecxz
cld
add
decl
jmp
mov
fnstsw
add
push
fwait
dec
add
in
jb
xor
jecxz
push
movsl
data16
xchg
pushl
lahf
push
call
pop
pop
push
js
and
ret
jg
dec
cwtl
cs
lahf
mov
xchg
mov
test
mov
mov
clc
jge
rol
mov
iret
addb
enter
hlt
and
in
inc
xlat
lahf
xchg
loope
icebp
push
pop
jmp
sub
jl
call
std
rcll
fisubrl
cmpsb
xor
xor
push
jg
loope
mov
ljmp
adc
insb
mov
pop
jns
push
incl
mov
and
mov
xchg
pop
fbld
out
arpl
ljmp
hlt
test
fisttpll
push
cmpsl
sahf
fistpl
mov
xchg
outsl
sarl
and
jae
push
dec
movsbl
mov
addl
add
jmp
bound
mov
fucomip
arpl
cs
xchg
ljmp
incb
mov
adc
orb
pushf
sarl
dec
cmp
ljmp
nop
leave
cmp
repnz
xor
lock
jg
adc
or
cmp
call
xorl
sbb
adc
jns
repz
jp
cs
push
decl
cli
loop
jns
push
test
in
shll
pusha
dec
aaa
pop
mov
adc
ss
fucomip
shlb
nop
lds
jbe
and
jle
enter
ljmp
cmp
xchg
jbe
and
jecxz
sub
xchg
enter
add
out
cmp
loope
jbe
lcall
ljmp
cvtps2pd
jg
das
pop
es
mov
dec
orb
xchg
test
dec
insl
sahf
sbb
das
mov
adc
pop
fcoms
ss
incl
mov
add
jl
inc
test
call
mov
test
add
mov
sub
push
mov
das
hlt
cmp
cmpb
adc
dec
fistpll
inc
pop
decb
lret
inc
and
push
sbb
sub
xchg
fsubrp
jno
outsb
out
insl
adc
fisttps
insb
ror
inc
repz
sahf
lock
fisubrl
or
shrb
insb
enter
jp
ret
ja
inc
inc
sbb
shll
mov
mov
jno
mov
clc
xchg
cwtl
fildl
sbb
pop
jno
push
xchg
aaa
pop
and
outsl
pop
jecxz
bnd
xchg
dec
jnp
loopne
outsl
pop
mov
ss
or
push
add
fsts
pop
std
jns
test
mov
mov
push
xorl
push
nop
push
cmc
jg
push
lods
cmp
mov
cwtl
jno
mov
std
mov
sbb
movsl
shll
mov
inc
daa
push
cs
and
sub
decb
aaa
test
xchg
repz
and
push
das
icebp
jg
cmp
aas
sbb
mov
int3
out
incl
dec
cli
stos
pushf
test
inc
pop
sbb
les
mov
pop
movsb
xchg
and
inc
mov
jnp
mov
push
lcall
sbb
es
fstl
pusha
js
imul
mov
fwait
stc
das
std
das
inc
dec
mov
cmc
cmc
xchg
js
jg
iret
pop
loopne
jmp
add
cld
adc
mov
test
mov
push
add
imull
mov
imul
xor
incl
test
stc
enter
mov
and
jp
push
xchg
sti
das
mov
outsl
cmp
shl
sbb
bound
fstl
dec
outsl
bound
loop,pn
in
xorl
mov
xor
mov
flds
scas
scas
ss
fs
lahf
fists
mov
sbb
rclb
xor
inc
dec
xor
cmp
in
mov
sbb
lret
push
stos
mov
inc
cmp
iret
sti
daa
push
sub
adc
inc
mov
ljmp
inc
mov
cmp
mov
xor
xchg
lcall
cld
das
cmp
mov
sbb
test
jbe
mov
inc
into
xor
icebp
xchg
cmp
mov
xor
mov
fsubr
lcall
pop
loopne
seto
std
push
mov
add
lret
push
pop
add
sub
decl
cld
fdivr
or
out
popf
sarb
xchg
dec
and
shl
test
incl
lods
addl
pop
aaa
jl
sahf
das
incl
or
dec
mov
cmp
in
out
push
cld
incl
decl
lods
insl
scas
mov
fs
lods
out
iret
les
push
inc
lea
pop
lds
sahf
dec
dec
cmpsb
jo
pop
jg
test
nop
pop
mov
sbb
and
inc
call
jg
mov
addl
cmc
sub
adc
xchg
sub
fildll
cld
fxch
sbb
push
in
adcb
flds
inc
jbe
pop
popa
lds
insb
fiaddl
inc
pop
out
sub
mov
pop
cwtl
rcr
insl
pop
ljmp
ljmp
fcmovbe
lret
les
testl
jg
or
lock
mov
imul
adc
or
lcall
adc
sub
push
push
nop
fisubrl
cmpsb
or
and
outsl
je
pop
jge
jl
shlb
jg
aad
mov
sub
int3
sahf
jo
in
inc
lcall
movsl
ljmp
push
mov
fiaddl
inc
sbb
pop
inc
fcomip
js
inc
iret
dec
and
outsl
or
out
xchg
ret
dec
add
mov
stc
call
in
or
mov
mov
andb
xor
call
pop
ret
and
insl
fimull
push
push
mov
int
mov
ret
iret
mov
pusha
xchg
jmp
stos
cwtl
clc
cmp
xor
je
sbb
add
mov
sbbb
addr16
add
adc
xor
cs
add
dec
mov
xor
arpl
ljmp
aam
cmp
sarb
push
pusha
outsl
inc
out
pop
fdivp
cmp
loopne
in
xacquire
xchg
jnp
icebp
movsl
decl
xchg
mov
jne
push
fwait
jae
les
pop
pop
pop
add
das
jp
xor
sbb
xor
sti
stos
imull
call
lds
pop
xchg
clc
clc
insl
pop
dec
cmp
pop
pop
sbb
das
std
ljmp
icebp
sbb
iret
add
aas
fldcw
ss
push
test
bound
cltd
xor
fstl
cmc
adc
in
sub
cmp
cli
mov
jns
or
gs
adc
or
xchg
push
or
mov
mov
decl
negl
subb
ret
xchg
out
cmp
movsb
add
mov
add
ja
incl
or
insl
sbb
aad
and
jno
mov
add
pop
arpl
xchg
xchg
inc
negl
inc
out
pop
stc
orl
sbb
xchg
add
pop
xchg
lret
xor
jae
mov
sbb
pop
sti
mov
aam
call
add
aam
sarw
mov
dec
orl
xchg
fimuls
fdivr
xor
fs
jmp
pop
pop
gs
fsubs
cmpl
aaa
push
dec
in
dec
test
lcall
ret
sub
mov
rorl
rorl
inc
or
in
adc
jb
loope
mov
add
adc
xchg
test
push
out
std
add
dec
inc
pop
jb
jp
pop
fcmovnu
das
gs
add
pop
insb
out
add
dec
xor
fildl
rol
stc
movsb
dec
push
add
mov
push
sahf
test
or
xlat
inc
sbb
mul
sar
call
lret
pop
cmp
xor
int3
aam
lods
ljmp
xchg
cmp
arpl
lds
pop
jmp
adc
loope
cs
lret
cmp
pop
sub
rorb
jge
and
ret
jnp
in
decl
std
decl
mov
gs
pop
loopne
leave
cmp
cmc
addr16
mov
jmp
sbb
dec
jae
or
dec
dec
std
xchg
iret
pop
push
imul
sub
rol
clc
incl
fdecstp
int
pop
xchg
inc
cmp
pop
test
mov
clc
jmp
pop
or
mov
leave
and
sub
das
filds
jmp
mov
mov
inc
jb
and
cmp
xlat
cld
xor
cmp
dec
jp
ret
xchg
scas
jnp
adc
push
rcll
mov
pop
add
mov
je
lret
jmp
out
dec
lret
xchg
sbb
jge
and
cld
mov
icebp
call
xor
cmpsl
popf
push
pop
lcall
mov
and
lcall
mov
hlt
andl
shl
cmpsb
mov
lret
imul
add
out
test
nop
jp
sub
dec
xlat
or
xchg
cmp
cmpsl
jle
mov
fdivr
jg
pop
xchg
adc
das
and
add
mov
jo
mov
mov
loop
dec
cli
jne
mov
sbb
fists
lods
dec
pop
fidivs
mov
jl
jnp
aad
repnz
pushl
or
xlat
sub
lahf
loop
cmp
mull
out
outsb
cmp
sbb
std
ljmp
or
jl
scas
add
cmpsl
jo
arpl
cmp
xchg
jge
add
adc
decl
pop
inc
jge
jmp
sbb
jae
add
jg
adc
push
pushf
je
sub
xchg
inc
jo
pusha
or
ja
inc
ja
hlt
sub
mov
and
sbbb
insl
cmp
mov
pushl
popa
lcall
inc
out
jmp
imul
andb
adc
mov
ror
jmp
sbbl
sbb
mov
inc
jecxz
adc
sbb
insb
mov
clc
lcall
imul
mov
inc
call
adcb
pushl
fildll
add
sub
not
shlb
xor
dec
decl
mov
loope
jl
jmp
stos
inc
jae
aad
push
jg
pushl
outsl
shlb
add
mulps
cmpb
flds
aad
ret
mov
divb
enter
push
pop
adc
adc
push
notl
lcall
adc
fstp
inc
adc
dec
add
stos
shl
ljmp
jnp
or
test
mov
adc
adc
out
mov
dec
lcall
or
or
loope
jmp
flds
dec
ljmp
ja
loope
inc
dec
mov
ror
ret
mov
mull
test
dec
cmp
icebp
jl
das
adc
pop
push
out
mov
jno
xchg
cmp
lcall
sub
in
sbb
pop
push
cs
jp
cmp
mov
call
or
mov
sub
cmp
faddl
cld
fistps
mov
cltd
pushf
sbb
sbb
jb
xor
outsl
aaa
clc
decl
jmp
stos
cs
adc
jg
pushl
inc
push
pop
push
or
enter
push
fildl
call
aas
shll
or
add
fmuls
sbb
and
dec
or
leave
mov
jb
ljmp
pop
mov
or
xchg
ljmp
cwtl
or
insl
add
cmp
mov
or
shlb
lods
xor
push
std
sbb
push
xchg
incl
jg
or
pop
sbb
mov
outsb
hlt
jmp
push
push
mov
ljmp
imul
or
dec
mov
pop
js
shll
or
cmp
incl
loopne
ficoms
adc
dec
xchg
call
pop
push
jg
lcall
imul
in
aad
jg
mov
inc
scas
clc
je,pt
ljmp
int
sar
decb
mov
into
xor
int3
std
dec
xlat
jle
mov
jne
hlt
sub
fsubrp
sbb
pop
cs
out
xor
inc
ret
sbb
dec
popf
xchg
call
cltd
rol
js
mov
test
mov
sarl
cld
jg
sbb
movsl
dec
outsl
xor
lret
ja
sbb
decl
cmpb
cmp
or
lods
and
dec
ficoml
cmpsl
pop
in
pop
sbb
das
lods
pop
sbb
jb
pop
mov
lcall
dec
fwait
xchg
jecxz
in
shl
inc
fcmovnb
mov
push
decl
test
jecxz
into
fwait
mov
lcall
jg
test
push
fmuls
int
jecxz
pop
mov
aad
push
mov
mov
call
leave
or
mov
and
stc
jmp
ds
jno
dec
cmp
nop
aaa
imul
fdivrl
pushl
daa
or
xor
out
push
jp
inc
add
jl
fildll
incl
or
enter
sub
inc
push
or
incl
add
es
lods
adc
nop
xchg
call
lods
pop
outsl
lock
dec
mov
aad
fimuls
mov
mov
dec
push
xchg
pushf
sti
jl
out
out
popa
cmp
scas
int
incl
sbb
in
and
enter
sub
sbb
push
cmp
mov
jmp
inc
int3
movsl
pop
mov
adc
subb
fs
xorl
mov
cmp
or
jmp
imul
imul
push
push
xchg
mov
cmpsb
shl
out
cmc
test
push
xchg
push
stos
lar
mov
test
aam
mov
and
arpl
int3
rorl
sbb
fiaddl
sbb
dec
sbb
popa
xchg
cmp
movsl
cmp
lcall
push
push
pop
cmpb
add
push
push
das
std
inc
movsl
daa
stos
daa
loope
dec
push
or
push
inc
mov
ja
mov
pop
sbb
into
xchg
out
pop
mov
decl
inc
jbe
lcall
inc
mov
imulb
sbb
and
mov
jecxz
inc
ret
lea
lcall
fidivrs
out
es
add
xchg
push
mov
lcall
shl
ja
in
cmp
pop
je
testl
jmp
daa
jge
fcoml
out
test
adc
or
cmpsb
fcomps
rcl
dec
daa
testl
call
push
add
mov
movsb
arpl
dec
movsb
sti
pop
cmpsb
push
jg
loop
sub
ss
bound
cmp
jae
shl
pop
fdivr
sub
xchg
push
jg
mov
js
int
pop
xchg
lahf
inc
push
mov
clc
xchg
sub
clc
jg
cmc
test
mov
mov
inc
ss
fisttpll
fisttps
fistpl
sub
sahf
leave
cld
jle
fsub
in
js
out
arpl
xor
icebp
xor
pop
lods
cmp
test
sub
decl
hlt
xor
sti
cmp
test
cmpsl
sub
std
mov
hlt
and
push
inc
arpl
loopne
mov
push
lods
loop
outsl
cmc
outsl
pop
add
mov
dec
mov
cli
xor
mov
push
nop
data16
sub
ljmp
jbe
or
incl
roll
xchg
out
sbb
adc
adcb
dec
movsb
sbb
pushl
cld
pop
inc
dec
ja
scas
dec
xorl
decl
xor
pushf
jmp
imul
sub
call
inc
or
mov
outsb
mov
out
popa
or
push
mov
lret
jl
sub
pop
xchg
mov
sbb
and
and
xchg
test
sbb
incl
pushf
stc
xchg
xchg
mov
mov
adc
out
xchg
pop
or
pop
or
cwtl
int
test
aam
pushaw
call
push
jg
rcll
mov
pop
out
pop
ljmp
jp
or
ljmp
mov
addr16
sarl
dec
jnp
xlat
sub
rcll
inc
es
xorb
pop
dec
pop
or
test
ror
jg
push
jl
into
es
out
shll
push
sbb
cld
movsl
pushl
xchg
sub
and
sub
pushl
mov
repz
jg
pop
and
add
add
xor
jecxz
inc
add
ljmp
sbb
mov
xchg
in
sbb
arpl
aad
dec
mov
cli
imul
mov
pushl
mov
jmp
jnp
add
roll
cmp
sbb
fildll
pop
shrb
sbb
mov
jp
dec
or
out
sbb
sbb
test
or
pushl
adc
mov
mov
xlat
mov
int3
sub
xorl
aad
jg
push
out
popf
shlb
inc
push
neg
call
xlat
dec
test
movsb
mov
inc
loop,pt
push
dec
jnp
and
sbb
loope
mov
roll
inc
aam
jl
xor
data16
pushl
sub
das
jl
in
sbb
cld
xor
cmp
call
orb
mov
icebp
es
ror
loopne
and
add
xlat
sbb
push
jl
push
or
call
jl
push
push
pop
lret
leave
xor
add
push
stos
add
ljmp
xchg
inc
cmp
mov
ds
loopne
and
mov
lcall
test
or
lret
adc
mov
push
mov
or
xchg
mov
jle
add
enter
sarb
fisubrl
xchg
lea
pop
mov
jle
xor
outsl
mov
call
in
cmp
rcrb
pop
inc
add
and
ss
rep
pop
mov
outsb
fistpl
lahf
iret
lds
jmp
out
insl
sbb
xor
pop
hlt
or
push
sbb
pop
ljmp
pop
stos
cmp
ds
mov
sub
pushl
jl
dec
dec
insb
mov
iret
outsb
int
push
ds
aaa
xchg
int3
popf
jbe
push
dec
pop
inc
push
mov
mov
loopne
or
out
mov
ljmp
jo
mov
loop
dec
cmp
sbb
test
mov
in
lahf
lcall
fldt
je
icebp
sarb
jo
xchg
clc
ljmp
jb
lahf
lock
repnz
adc
call
or
mov
xchg
xlat
scas
xchg
sbbl
xor
inc
jl
or
incl
loop
pop
inc
dec
je
aaa
xchg
stc
sub
push
pop
out
mov
pop
sbb
pop
push
mov
push
mov
ror
divb
lahf
data16
xlat
pop
add
lcall
bound
push
add
jo
and
outsl
arpl
mov
frstor
and
pop
ftst
push
pop
pop
mov
ljmp
les
ret
das
shl
dec
das
dec
inc
pop
test
pop
adc
mov
mov
int
fidivrl
sti
pop
mov
arpl
push
aam
mov
arpl
inc
popa
fucomip
pop
mov
mov
push
mov
inc
jnp
outsl
hlt
ljmp
nop
and
xor
addr16
dec
xchg
mov
decl
cmp
dec
jg
std
into
mov
dec
sti
dec
xchg
jae
push
adc
pop
cmpsb
push
and
inc
mov
aaa
pop
cmpb
fildll
mov
fstl
jns
fsubrs
out
inc
in
pop
clc
call
loop
or
xchg
sbbl
cmp
cmpl
clc
pop
or
and
push
ds
fdivrs
mov
stos
ret
jl
pop
xchg
testl
pushl
mov
lret
mov
popf
pop
jg
fcompl
jle
ljmp
cmp
add
jg
cwtl
mov
dec
addl
icebp
decl
push
out
add
jmp
inc
mov
jbe
loope
mov
cmp
pop
mov
add
test
iret
jp
pop
xor
push
inc
xchg
inc
inc
iret
je
pop
mov
decl
shl
jp
mov
mov
jbe
daa
nop
sub
stos
mov
js
xor
xor
cmp
cli
movsl
xor
repnz
ljmp
fidivrl
pop
and
xor
jo
jmp
dec
popa
or
pusha
nop
call
je
aad
sahf
into
push
pop
jns
in
loope
pop
xchg
int3
jb
xchg
xchg
adc
std
pop
fcoml
jno
popa
iret
test
adc
sti
sar
incl
clc
ret
jle
js
mull
movsb
jb
cmp
mov
and
cli
add
cmc
out
jge
inc
and
call
ljmp
cmp
fidivrs
in
dec
in
and
mov
dec
sub
jg
stc
inc
ret
pop
lret
dec
and
jo
and
adc
lret
lock
jbe
pop
adc
pop
dec
mov
add
ljmp
popf
ljmp
hlt
cli
ljmp
lods
jl
xchg
decl
cli
mov
jmp
add
cltd
loopne
lock
mov
or
decl
jns
xor
stc
lret
fcomps
popf
cltd
icebp
push
stos
or
call
inc
cli
xorb
mov
repz
faddl
add
pop
add
fnstcw
cmp
jg
incl
mov
insb
repnz
sarb
in
xor
cli
in
sbb
or
shl
cld
call
mov
rol
daa
addr16
pushw
or
pop
decl
lods
and
xchg
add
mov
sbb
or
das
std
jg
sarb
pop
mov
andl
xchg
cmpsb
gs
roll
xchg
xor
sub
call
adc
mov
cmp
xchg
or
ljmp
sbb
int3
mov
inc
fmulp
push
mov
pop
lcall
aaa
mov
cmpl
inc
insb
inc
mov
leave
push
and
mov
cmp
movsb
lods
mov
loope
and
aam
loope
clc
fbld
mov
pop
dec
sbb
ss
sub
push
push
or
popf
dec
fucom
push
pop
inc
adc
xor
rorl
or
das
or
xchg
cmp
adc
repz
mov
cmp
addr16
fists
mov
jp
fcomp
mov
pushf
jle
test
inc
mov
lcall
cmc
testb
cld
push
or
adcl
fcomp
or
lea
adc
or
jg
sub
sub
icebp
xchg
cmpsl
fsubrl
lods
shll
mov
mov
mov
and
mov
jl
in
lock
jbe
push
aad
jg
lock
cld
fdivrs
out
mov
adc
ja
sbb
mov
idivb
xlat
das
popf
sbb
mov
filds
sub
or
orb
push
sbb
inc
sbb
clc
test
mov
mov
cmp
jp
jae
xor
xchg
cli
mov
push
aas
ja
xor
jmp
pop
or
jecxz
xchg
push
mov
nop
pop
jns
movsb
cs
mov
cld
sub
loope
lret
js
push
incl
addr16
xorl
ljmp
xor
leave
rorl
fwait
das
sub
pop
add
dec
loopne
pushl
dec
ja
lods
push
mov
sub
dec
adc
jbe
add
fbld
xor
arpl
lret
imul
into
adcl
inc
inc
fimull
jnp
mov
sti
jmp
outsl
adc
out
pop
test
sbb
dec
or
jle
cmpsb
pop
cld
ljmp
pop
cmpb
sub
inc
in
and
incl
pop
inc
inc
jl
mov
stos
xorb
movsl
sub
lcall
mov
jo
outsl
adc
dec
xor
lcall
lea
les
int
jmp
jns,pn
xchg
mov
jmp
les
adc
stos
into
std
leave
cmp
fwait
icebp
and
sub
pushl
decb
pop
ret
mov
inc
loope
mov
mov
or
pop
push
cmpsb
fwait
mov
fdivrp
add
clc
int3
aad
sub
adc
mov
loop
sbb
cmpsl
incl
sbb
push
mov
adc
jnp
mov
inc
decl
inc
pop
or
shll
cmp
cwtl
into
dec
sbb
pop
call
push
repz
jmp
inc
test
je
pop
sbb
ret
cli
mov
imul
imul
aam
add
andl
call
js
pop
out
xchg
bound
sahf
add
dec
cmp
sbb
jb
dec
push
xchg
xchg
arpl
ret
aam
cwtl
push
addl
mov
std
mov
mov
repz
jns
addr16
xor
pop
cmp
inc
pop
imul
xchg
jns
push
add
inc
push
add
jecxz
ja
add
add
inc
gs
dec
call
jb
imul
jne
jb
outsb
je
push
fucomi
fs
adc
dec
imul
and
push
mov
jmp
gs
popa
outsb
fs
push
jb
mov
filds
imul
pop
mov
outsl
sbb
arpl
fisubrl
cmovg
sub
sub
sbb
andb
sbb
cltd
scas
or
fidivl
arpl
jne
fs
cmp
inc
imul
mov
iret
fcoms
inc
outsl
jne
jp
or
fs
or
mov
adc
jp
sub
jnp
outsl
mov
outsw
push
push
outsb
insl
popa
jo
imul
fldt
sbb
outsl
ja
inc
imul
fwait
pop
insl
jo
push
push
je
dec
cmovge
je
inc
jns
push
outsl
sub
inc
push
aam
popa
sub
add
inc
dec
inc
lea
out
mov
push
out
or
xchg
or
mov
sub
bound
jae
push
mov
gs
in
rolb
testb
adc
insb
fs
inc
pop
push
imul
insl
cwtl
jecxz
out
int
inc
inc
push
sbb
adc
adc
push
mov
lea
addr16
adc
xchg
jae
movsb
or
pop
mov
mov
inc
shll
arpl
dec
jb
mov
insl
outsl
jbe
jo
test
addr16
sbb
cmp
mov
dec
in
insb
popa
cmp
or
inc
sbb
imul
fstps
mov
jae
sbb
push
adc
arpl
fwait
jne
jae
xor
adc
test
dec
insb
aaa
jnp
mov
jae
in
dec
fcompl
ret
fldt
or
push
inc
add
add
insb
push
inc
repnz
sub
add
add
add
add
mov
insl
adc
add
and
idivb
add
add
add
xchg
out
cmp
sub
pop
lds
in
inc
and
xor
push
in
imul
push
shll
and
or
mov
shll
inc
or
sti
ja
xchg
jge
push
dec
inc
jnp,pn
je
popa
popa
xchg
repnz
cmp
and
mov
outsb
ds
js,pn
cmpsb
popa
inc
push
xor
add
daa
ss
lcall
jns
jns
or
add
in
pop
repz
test
add
leave
adc
lods
pop
adc
add
sti
dec
fnstenv
inc
pop
xlat
adc
add
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
push
fsubl
sub
mov
xchg
neg
ljmp
jb
mov
mov
mov
das
aaa
and
out
and
rorl
dec
fwait
push
imul
dec
dec
ljmp
test
sbb
subb
fnstcw
dec
scas
xchg
jge
lret
xchg
adcb
ret
push
pop
ljmp
filds
and
pop
mov
xor
jp
dec
push
add
push
sbb
mov
nop
fs
sub
push
and
imul
xlat
cmp
js
pop
aaa
jbe
bound
push
sbb
movsb
shrl
call
push
fnstcw
cs
or
dec
sub
mov
test
imul
or
pusha
xchg
sbb
xchg
xchg
lret
aaa
aad
pop
stc
imul
test
sbb
xor
jns
cli
hlt
push
or
xlat
and
sbb
cmp
and
fwait
mov
and
adc
or
fs
jmp
ds
push
pushf
inc
pop
xchg
je
or
fisubs
pop
xchg
std
jb
add
push
xor
add
mov
fisttps
and
scas
cmpsl
addr16
fimuls
cmp
pop
in
jp
out
sbbl
pop
push
outsb
xchg
sbbb
rcrl
js
xadd
stc
jmp
pop
test
cwtl
fwait
bound
jbe
pusha
das
mov
divl
inc
jns
xor
hlt
movsb
dec
mov
push
sub
in
aas
mov
push
aam
push
xor
xor
shlb
or
nop
add
daa
mov
dec
inc
outsl
or
out
sub
mov
hlt
ret
push
xchg
mov
xchg
loop
.byte
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
inc
add
push
add
add
add
push
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
xor
insb
add
jb
xor
aas
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
dec
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
ja
jno
bound
insl
add
jb
and
dec
add
add
outsl
add
jno
outsb
add
bound
add
pop
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
ja
jno
bound
insl
add
jb
and
dec
add
jns
jns
jo
data16
and
push
add
add
add
js
add
add
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
xor
xor
add
add
add
add
and
xor
add
add
add
add
add
xor
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
bound
ja
jno
bound
insl
add
jb
add
add
js
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
ja
jno
bound
insl
add
jb
and
dec
add
add
outsl
add
jno
outsb
add
bound
and
xor
xor
xor
xor
sub
add
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
ja
jno
bound
insl
add
jb
add
js
add
add
add
sbb
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
ja
jno
bound
insl
add
jb
and
dec
add
jns
jns
jo
data16
and
push
add
add
add
js
add
add
dec
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
xor
add
add
add
add
and
xor
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
call
add
add
inc
add
add
add
and
add
xor
inc
inc
add
push
inc
add
pusha
inc
add
outsb
inc
add
add
add
jl
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
jb
insl
gs
arpl
