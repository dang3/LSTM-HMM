jg
incl
mov
add
mov
mov
xor
push
sarb
enter
add
in
mov
cltd
mov
add
adc
mov
fldenv
in
push
out
insl
cmpsb
stos
push
shlb
mov
sti
in
inc
aad
push
adc
or
mov
jbe
int
andb
sub
mov
mov
repnz
out
incl
popf
std
decl
imul
pop
pusha
popa
sub
call
dec
add
mov
mov
dec
mov
add
inc
mov
stc
ret
repnz
inc
mov
mov
mov
outsl
pushl
testl
decb
test
pop
decl
cmc
mov
xor
jle
mov
cmp
jne
into
add
add
mov
add
fs
adc
nop
push
add
add
push
mov
adc
push
mov
sub
pop
adc
incl
ret
cld
idivl
lods
xor
flds
test
sub
loope
and
pop
mov
lcall
xchg
and
in
push
movsl
or
ret
add
mov
add
fs
adc
mov
or
stc
lret
jmp
jne
pop
insl
cs
insb
ja
dec
je
jne
jbe
insl
mov
jbe
pop
data16
pop
cmp
imul
dec
cmp
arpl
push
outsl
xor
xchg
cmc
fdivs
or
dec
pop
xor
inc
dec
adc
sar
ljmp
out
push
add
mov
mov
xchg
test
or
add
out
in
pop
out
movsb
add
add
cmc
addb
xor
addl
add
lret
fcmovne
orb
push
out
loope
add
fs
add
add
xchg
fldt
add
add
add
inc
xor
in
push
adc
cmp
sub
or
orb
inc
xchg
sbb
xchg
sbbb
adcb
xorl
add
in
outsl
push
test
addl
rcll
or
out
mov
in
add
xchg
orb
rorl
sub
idiv
hlt
add
into
or
jg
add
aaa
pusha
fldt
cld
add
adcb
pop
xor
stos
movl
insb
add
add
cld
in
pop
and
xor
pusha
add
pop
out
lret
lret
xchg
in
fmull
or
pop
fists
test
sub
adcl
fldt
ja
add
scas
es
push
popa
add
loopne
xchg
xor
jbe
movsl
addr16
jnp
pop
and
dec
mov
xor
loopne
arpl
imul
cmp
mov
call
aad
scas
cwtl
xchg
jle
pop
outsb
cmp
add
pusha
add
fstpt
out
add
pop
leave
add
insb
fstp
fdivs
ja
inc
add
mov
add
push
push
lret
cmp
mov
cmp
push
lahf
shlb
ja
pop
xchg
dec
loope
das
loopne
add
pop
inc
sub
outsb
dec
push
std
push
ret
push
das
stos
pop
mov
jmp
cltd
mov
sub
add
xor
into
es
loopne
xchg
mov
mov
dec
std
jecxz
dec
adcb
push
pop
cmp
das
pop
dec
inc
xchg
imul
xlat
insl
push
mov
or
loopne
push
loopne
xchg
movsl
fcomi
or
dec
jno
or
lock
ss
jge
js
pop
pop
inc
dec
loopne
xor
xchg
xchg
mov
push
mov
in
aad
in
cltd
or
xor
push
sbb
sub
adc
xor
loopne
loope
cmp
cmp
sbb
pop
loope
in
nop
lods
gs
sbb
and
rcrb
and
or
mov
xchg
push
sti
add
xchg
sbb
push
xor
inc
aaa
ret
mov
testl
in
inc
loopne
loope
lods
fstpl
and
fs
mov
pusha
xor
sbb
sbb
sarb
shl
add
jo
jbe
jnp
or
lods
jmp
pop
or
add
jle
mov
sub
add
pop
lock
stos
dec
fstps
sbb
or
gs
lcall
xchg
mov
add
mov
mov
push
insl
fstpt
jo
sub
gs
lcall
lds
add
cmp
xchg
insl
jmp
sub
pop
es
imul
mov
mov
add
add
icebp
mov
push
stos
xor
push
sub
add
mov
mov
mov
dec
push
jge
pop
lret
mov
int
push
add
add
sti
loope
jne
incb
mov
and
cmp
or
mov
sub
imul
add
jg
mov
adc
dec
stos
pop
push
das
and
mov
icebp
lock
jge
std
neg
lock
mul
push
jo
hlt
add
xor
mov
mov
inc
fsubl
jnp
xchg
insl
mov
repz
lock
mov
gs
sub
or
sub
xchg
loop
xor
lock
in
mov
mov
adc
jno
in
and
cmp
and
xor
or
xor
ja
mov
push
stc
or
cmp
sbb
sti
pushl
sbb
mov
add
add
int3
rcrl
mov
stos
jge
add
jo
inc
push
adc
ss
insb
pop
inc
sbb
jge
mov
or
scas
mov
mov
nop
push
fnstsw
ret
pop
add
push
push
pushf
or
push
sub
dec
pop
cmpsl
arpl
mov
push
xchg
in
out
add
mov
cmpsl
mov
mov
or
jnp
push
stos
stos
jp
mov
inc
mov
movsb
mov
lods
icebp
or
jg
mov
and
cmpsb
scas
stos
mov
xor
scas
movsb
inc
cmpsb
daa
mov
mov
mov
mov
mov
add
cmp
push
loopne
std
mov
mov
add
mov
inc
push
shrl
xor
roll
or
mov
mov
mov
add
cmpsb
add
or
stos
add
push
neg
insl
jnp
stos
mov
pop
push
mov
pop
lods
add
jecxz
jge
mov
mov
mov
mov
add
fnstenv
add
xchg
insl
pop
js
mov
add
jnp
fstps
cwtl
sub
sub
je
arpl
pop
dec
add
pop
pop
aaa
push
fldt
mov
add
and
mov
mov
mov
and
add
fidivl
lods
add
sbb
push
icebp
add
mov
xor
in
mov
sub
pop
xchg
fidivrs
cmpsb
out
in
in
adc
rcl
add
or
lea
adc
jns
stos
jo
jno
mov
and
loopne
mov
icebp
mov
add
mov
or
orl
jo
pop
add
adc
mov
sbb
cmpsb
pop
xchg
lock
sub
neg
pop
sub
add
add
in
push
mov
sbb
into
sub
or
fucom
inc
in
push
dec
sub
dec
and
mov
subb
mov
mov
add
incl
add
rorb
push
or
lods
mov
sbb
rorb
lret
mov
outsb
shl
nop
lret
sub
xchg
jo
mov
mov
stos
xchg
or
xchg
mov
cmp
jge
add
pop
stos
int
les
stos
mov
mov
mov
add
mov
sbb
sub
out
mov
daa
push
and
cmp
pop
jae
inc
jo
imul
or
jne
ja
lea
lock
mov
adc
frstor
adc
outsl
jmp
or
mov
lods
stc
mov
test
sbb
fiaddl
mov
add
rorl
divb
insl
sti
or
or
adcb
sub
push
fidivl
popa
add
int
jo
lcall
jb
out
pop
negl
adc
jae
daa
clc
adc
push
stos
pop
jl
add
mov
jo
or
xchg
je
mov
or
lock
sub
push
add
mov
add
sub
jb
je
pop
fnstcw
or
stos
or
sahf
mov
incl
pop
repz
pop
push
mov
adc
dec
push
jns
mov
jo
mov
push
sbb
or
pop
mov
cld
push
or
add
push
rcr
mov
mov
xchg
insl
cwtl
lock
out
scas
and
out
jo
pop
mov
lock
arpl
rolb
lock
stos
push
push
jno
insl
sub
sub
dec
fistpll
stos
jno
jo
adc
sub
or
or
gs
xor
jg
mov
or
ss
jo
adc
imul
inc
lock
cmpsl
lock
sub
lods
mov
add
inc
mov
test
add
insb
dec
dec
add
js
add
jl
mov
es
pop
pop
add
test
dec
pusha
outsb
push
lea
add
jns
add
cmp
divb
dec
jne
dec
add
push
pushf
repz
xchg
filds
inc
push
add
stos
add
shrl
add
outsb
mov
out
jmp
pop
jns
in
mov
fistl
test
inc
cmp
add
mov
fldenv
push
out
addb
cmp
push
in
xor
jno
pop
cmp
pop
mov
adc
sbb
mov
imul
out
jne
stos
fsts
sbb
xchg
gs
and
or
andl
adc
fldl
cmp
mov
cli
cmp
adc
add
jg
fildl
add
sbb
addb
addb
sbbb
inc
fldcw
add
push
inc
xchg
dec
das
inc
xchg
das
xchg
insl
jns
push
pop
jne
addb
mov
push
cltd
cmp
insb
push
es
lret
sub
push
xchg
stos
mov
xorb
push
int
lods
insl
insl
test
pop
inc
filds
out
push
incb
addl
orb
mov
popl
inc
addb
sub
in
jg
pop
test
rolb
rolb
add
add
imul
add
rolb
popf
inc
pop
jno
addl
scas
inc
pop
rcrl
lret
lods
out
or
or
rclb
jecxz
in
sbb
mov
push
scas
jp
rcrb
xor
push
leave
sarb
add
and
pop
push
mov
gs
mov
inc
xor
mov
mov
pop
mov
sti
pop
pop
inc
stos
mov
jo
xchg
movsl
push
lods
mov
push
mov
adc
push
sbb
add
adc
or
cmp
sub
fld
popf
push
and
in
fcmovnb
adc
ficompl
lea
sub
pop
cmp
cmp
repnz
mov
rolb
push
adc
lods
mov
push
adc
jnp
mov
rolb
ret
orl
aas
dec
out
mov
mov
add
mov
outsb
dec
or
fldt
add
adc
sub
out
jbe
mov
pop
xchg
xor
add
gs
jbe
push
lods
addl
add
pop
out
in
outsb
add
mov
pop
adc
lea
inc
loopne
and
sbb
mov
lret
pop
xchg
or
mov
stos
insb
loopne
test
or
loopne
in
in
or
cld
loopne
jmp
push
cli
xchg
dec
adc
and
ret
pop
movsl
sarl
sarb
insl
idivb
dec
xchg
icebp
mov
mov
push
mov
notl
adc
mov
xchg
pushl
pop
sbb
pop
jns
mov
mov
lret
or
scas
push
cs
das
sub
ja
push
ljmp
xor
data16
mov
loopne
mov
adc
sbb
movsb
jae
xor
xor
je
shlb
mov
fwait
pop
dec
lea
mov
aad
ljmp
and
test
mov
sbb
and
fsts
cmp
pop
movsl
mov
inc
data16
rcrb
xor
pop
cwtl
outsl
lock
cli
push
mov
sub
jno
sbb
push
xlat
add
cli
call
add
add
test
ret
add
gs
sub
loop
inc
inc
dec
mov
fsubrs
inc
dec
or
mov
pop
jg
dec
mov
pushf
xchg
movsl
xchg
mov
mov
fadd
push
add
movsl
cmp
xor
outsb
fmull
inc
sbb
out
xor
ret
xor
arpl
jne
jne
cmp
dec
clc
mov
inc
push
or
xchg
xor
mov
jecxz
dec
jecxz
insb
scas
xor
adc
pop
jne
jg
cwtl
dec
and
std
mov
movsl
ret
daa
mov
xchg
xor
aaa
js
push
cs
adc
movsb
xchg
mov
add
aaa
xchg
call
xchg
iret
mov
cmp
jecxz
addr16
mov
and
aad
js
jg
pop
clc
shl
addb
lds
mov
jg
add
sbb
leave
outsb
mov
add
pop
fstpt
aas
jae
push
push
xor
jmp
inc
xor
clc
sbb
jb
js
shrl
leave
fcmovnbe
fcomi
mov
shl
jg
pop
clc
sti
sbb
fndisi(8087
fildl
int
fistpl
fildl
mov
or
mov
adc
and
mov
imul
das
cld
xchg
mov
jmp
mov
dec
cmp
sub
aaa
cli
or
popf
imul
ficomps
add
in
outsl
ss
fistpl
out
mov
dec
jo
sub
mov
adc
inc
jmp
sahf
jno
or
outsl
cld
outsb
push
rcll
mov
aad
aad
aad
jmp
cld
fcmovnbe
rorl
mov
insl
mov
fisubl
call
js
ljmp
adc
pop
cld
not
or
sbb
in
mov
jmp
lcall
mov
inc
mov
out
into
orl
sbb
jecxz
stc
faddl
jae
js
inc
fmull
and
fcoml
fsubrl
inc
fimuls
or
dec
das
cmp
test
fwait
inc
outsb
adc
outsl
fidivs
fsubrp
in
mov
fstps
or
xchg
inc
mov
dec
incl
sbb
lcall
test
loop
loopne
sti
pop
in
stc
in
pushf
je
fcmovne
xor
in
fcmovb
fisubrl
call
jg
cmp
ret
loop
inc
mov
fwait
and
repz
cli
aam
aam
mov
mov
hlt
xlat
movsl
loop
lock
scas
xlat
xchg
jne
stos
mov
fsub
jp
fisttpl
xlat
sahf
movsb
push
add
out
call
mov
cwtl
cwtl
inc
rcr
decb
mov
lahf
mov
inc
aad
arpl
outsb
jne
into
ficoms
and
enter
sbb
je
imul
inc
cli
fistpll
or
fisubs
std
fcmovnu
xchg
into
and
mov
fsubrl
inc
icebp
fwait
cli
xchg
sub
push
in
ficompl
or
cs
adc
pop
mov
xchg
push
int
jne
mov
jle
loop
negl
jl
dec
js
mov
std
inc
push
pop
loop
sarl
cltd
dec
shrl
rcll
dec
popf
sub
lods
pop
mov
jne
fdivr
fnstenv
in
dec
jmp
pushl
les
xchg
out
jno
stos
mov
fdivrp
push
ss
or
dec
std
and
jbe
aaa
movsb
pushl
out
mov
cmpsl
mov
lds
ljmp
incb
popa
push
lret
jne
out
sub
mov
icebp
sbbb
imulb
lock
dec
lret
je
mov
mov
add
ja
outsl
push
jg
hlt
or
mov
dec
hlt
les
ds
sti
pop
cld
mov
cwtl
lods
xchg
fnstsw
push
nop
cltd
sti
adc
add
movsl
jg
jg
out
loopne
loop
add
out
jmp
cld
jg
mov
div
icebp
lock
jno
stc
clc
sti
cli
lds
ret
ret
jg
int
iret
into
leave
enter
mov
rcl
rcl
frstor
aaa
ss
fistps
fcomp
fisubl
clc
pop
pop
fwait
addl
mov
xchg
xchg
nop
call
clc
call
lahf
mov
test
out
add
gs
sbb
addr16
pusha
arpl
insb
outsb
imul
jbe
fisttpl
test
jge
jg
jns
jnp
inc
inc
cmp
lock
cli
incl
inc
dec
dec
add
dec
dec
dec
dec
push
push
push
push
push
push
push
pop
pop
sarb
pop
pop
pop
and
and
and
mov
sub
xor
xor
xor
cmp
cmp
lea
fiadds
push
add
pop
or
decb
push
or
or
adc
adc
adc
sbb
sbb
ljmp
add
push
cmpsb
xor
mov
scas
subb
mov
outsl
repnz
mov
mov
mov
cmc
psubsw
fnstsw
ret
jo
js
add
out
iret
mov
push
push
or
mov
pop
sbb
aas
add
adc
notb
bound
add
add
std
xchg
lcall
inc
movsb
pop
mov
mov
xor
sbb
sub
inc
jecxz
gs
add
mov
mov
xor
gs
movsl
push
cwtl
in
nop
push
add
loope
incl
stos
lar
cld
gs
inc
xchg
cs
rolb
push
cvtps2pi
pop
add
or
shlb
aas
or
out
gs
call
loope
loope
mov
fiaddl
loopne
les
out
out
or
add
jle
inc
out
adc
mov
cmpsl
repnz
mov
movsl
adc
dec
fldl
cmp
arpl
loopne
fisttps
popf
jae
add
add
fisubrl
fadds
loope
imul
in
mov
jno
push
and
add
xchg
insl
xlat
or
pop
int
or
mov
jecxz
in
addl
movsb
or
fsub
inc
in
jg
xchg
jg
in
in
in
dec
in
in
in
dec
in
in
in
lock
in
in
pop
push
in
repnz
push
in
in
adc
mov
pop
in
in
in
push
outsl
lcall
and
in
or
cmp
pop
in
pop
in
in
in
in
mov
and
fmull
and
jecxz
sub
pop
das
in
in
in
sub
jmp
xor
cmpsb
in
in
pop
in
xor
mov
cmp
mov
ds
cmp
xchg
negb
mov
in
sbb
in
in
adc
repnz
jmp
in
in
in
or
in
in
in
ljmp
das
push
das
mov
in
mov
sbb
mov
push
mov
xchg
in
mov
in
in
out
ret
icebp
out
in
lods
jge
jl
dec
out
in
or
in
out
in
mov
in
out
decl
cli
int
shlb
or
and
in
in
out
lds
adc
push
or
in
fisubrl
mov
out
mov
in
imul
in
or
in
out
in
mov
in
out
in
cs
in
inc
out
push
imull
cs
in
out
in
mov
out
insl
or
outsl
in
ret
out
insl
or
in
out
in
or
pop
out
outsl
pop
out
repnz
test
and
repz
out
in
mov
in
fcompl
sub
gs
lea
add
out
or
repnz
jg
lock
into
add
out
in
out
sbb
sub
js
xchg
in
out
sbb
mov
loopne
add
out
inc
loope
pop
inc
loope
aad
or
fnstsw
outsl
or
push
aad
mov
inc
loope
cmovge
lret
mov
dec
loope
or
inc
aad
loope
dec
loope
aad
loope
mov
loope
aad
loope
push
loope
aad
loope
push
loope
aad
lret
mov
push
loope
aad
loope
push
loope
aad
loope
pop
cld
lret
mov
pop
loope
pop
loope
aad
loope
pop
loope
aad
loope
mov
loope
aad
loope
and
loope
daa
loope
aad
lret
mov
and
sub
and
cs
loope
sub
loope
aad
loope
das
loope
aad
loope
sub
xor
sub
cmp
sub
ds
loope
xor
loope
aaa
loope
aad
lret
mov
xor
add
xor
add
loope
aad
loope
cmp
loope
aad
loope
aas
loope
aad
loope
jmp
cmp
push
outsl
cld
int
cmp
jle
cmp
jns
jmp
jecxz
loopne
jecxz
repnz
movsl
and
or
loopne
jecxz
loopne
and
shl
loopne
das
push
das
and
ret
jecxz
loopne
sub
loopne
das
loopne
repnz
push
jecxz
loopne
sub
leave
jecxz
loopne
sub
lret
jecxz
loopne
push
das
pushl
loopne
aaa
loopne
jecxz
loopne
xor
shl
xor
shr
fwait
cli
das
xor
shl
xor
shl
push
fucom
cmp
fmull
in
aas
loopne
jecxz
loopne
add
movsb
jecxz
loopne
push
loopne
jecxz
loopne
pop
in
in
mov
add
mov
or
lods
jecxz
pop
in
loopne
push
loopne
jecxz
loopne
or
test
or
stos
mov
loopne
jecxz
loopne
adc
mov
pop
loopne
jecxz
jecxz
loope
jecxz
fildl
mov
jecxz
or
mov
inc
jecxz
in
lods
lret
mov
dec
jecxz
dec
jecxz
dec
jecxz
or
in
decb
mov
dec
jecxz
loope
jecxz
dec
jecxz
loope
jecxz
dec
pop
icebp
mov
push
jecxz
loope
jecxz
push
int3
loope
pop
in
push
jecxz
or
loopne
push
jecxz
push
jecxz
loope
jecxz
in
pop
jecxz
loope
jecxz
pop
jecxz
loope
jecxz
pop
jecxz
loope
jecxz
pop
in
pop
jecxz
loope
jecxz
and
aad
daa
jecxz
es
loope
pop
in
jecxz
and
shl
and
mov
sub
pop
sub
fucom
das
jecxz
jecxz,pn
loope
jecxz
sub
fabs
sub
fcomps
in
sub
fndisi(8087
xor
stos
loope
jecxz
ss
loope
pop
in
jecxz
xor
cmpsb
loope
jecxz
xor
xlat
loope
jecxz
in
cmp
scas
loope
jecxz
jecxz,pt
loope
jecxz
cmp
lods
loope
jecxz
pop
in
cmp
scas
loope
jecxz
add
cmc
loope
jecxz
push
jecxz
loope
pop
in
jecxz
in
lock
jecxz
add
testb
lret
mov
jecxz
loope
jecxz
push
jecxz
loope
jecxz
or
lret
mov
or
clc
or
sti
loope
jecxz
adc
lret
jecxz
mov
lret
mov
adc
adc
loope
or
jecxz
xchg
jg
mul
sbb
into
loope
jecxz
push
jecxz
loope
jecxz
shlb
int3
loope
jecxz
sbb
iret
and
outsl
incl
insl
out
loop
or
outsl
out
loop
inc
loop
out
loop
test
repnz
dec
loop
out
loop
dec
loop
out
loop
lds
dec
out
loop
out
dec
out
loop
out
das
out
loop
out
pop
loop
pop
loop
or
out
loop
in
pop
loop
out
loop
daa
loop
out
loop
and
jno
and
jo
in
and
jae
and
jb
loop
out
loop
das
loop
out
pop
in
loop
sub
jns
sub
js
loop
out
loop
pop
outsl
pop
xor
loop
aaa
loop
xor
inc
repz
repnz
xchg
loop
loop
loop
out
loop
cmp
dec
out
loop
repnz
incl
push
pop
loop
out
loop
add
push
out
loop
in
das
incl
loop
out
loop
or
loop
psrad
mov
int
loop
loop
loop
or
loop
out
loop
jg
xchg
jg
loop
out
loop
pop
loop
out
loop
adc
and
adc
jg
xchg
and
loop
out
loop
sbb
loop
out
push
das
in
push
movb
shr
rolb
in
movb
shrb
repnz
in
inc
dec
in
inc
in
inc
dec
in
inc
in
jle
cmc
das
push
dec
in
js
in
jnp
dec
in
inc
in
dec
push
in
dec
jg
lret
mov
pop
in
test
in
add
in
into
or
in
das
jne
xchg
clc
daa
in
sti
and
loop
in
stos
sub
cmpsb
fistpl
cltd
in
xor
sub
aaa
in
test
xor
call
aas
cld
lret
mov
ds
data16
in
int3
cmp
iret
cmp
ret
in
int
outsl
cld
mov
mov
adc
ja
add
jne
sbb
je
xchg
jg
mov
les
in
jbe
nop
in
mov
in
ja
xchg
jg
rolb
in
shr
roll
call
or
cld
sbb
in
std
shr
rorb
rcrb
filds
in
fld
in
pop
adc
sti
insl
outsl
jne
pop
in
pop
push
in
insl
adc
stc
sbb
test
fistpll
rorl
adc
leave
rcrb
push
out
out
inc
out
out
stos
lds
loopne
inc
out
loop
in
in
out
in
inc
out
in
lds
out
dec
out
icebp
lds
div
mov
rorl
xchg
dec
out
ret
lds
out
rol
out
mov
in
jle
mov
push
out
mov
push
out
mov
push
out
mov
out
mov
stc
mov
pop
push
out
mov
add
test
repnz
mov
out
iret
out
out
mov
les
ljmp
sub
mov
mov
and
sub
push
shr
shrb
dec
shr
lret
mov
out
cld
lds
out
clc
les
out
xlat
adc
pop
pop
jle
out
lds
aam
dec
sarb
and
out
push
sarb
sub
inc
out
dec
rolb
pop
in
dec
shr
rolb
pop
shr
add
xchg
jg
dec
rorb
rorb
lret
mov
pop
ret
or
xchg
or
add
out
adcb
ret
lds
lds
out
test
fistpl
out
bnd
mov
out
mov
adc
cmpsl
or
out
jmp
jg
mov
push
push
into
sbb
ffree
sbb
pushl
ficoms
inc
out
cmc
pop
out
fistps
mov
add
out
dec
adc
out
inc
negb
in
out
int3
and
out
and
mov
sub
jo
sti
arpl
pop
out
inc
sub
cs
in
xor
ss
out
js
out
addr16
out
inc
sbb
inc
loopne
repnz
mov
pop
jmp
or
jmp
xor
xchg
jg
jmp
xor
jmp
cmp
psubsw
push
jmp
cmp
jmp
cmp
jmp
cmp
adc
jmp
jmp
adc
add
jmp
jmp
sbb
pop
jmp
cld
sbb
out
ss
loope
call
or
call
in
jmp
in
jmp
call
xchg
pop
call
jmp
add
mov
call
cmc
push
call
notl
lret
mov
push
call
jmp
call
jmp
call
mov
pop
call
jmp
call
jmp
lret
mov
pop
call
lds
jmp
call
mov
and
shll
shr
call
jmp
call
mov
das
call
jmp
call
jmp
lret
mov
sub
lret
call
jmp
call
mov
xor
shll
call
shll
call
fnstsw
call
fistpll
call
fiaddl
lret
mov
pop
call
cmpsb
add
mov
add
lret
mov
add
mov
or
lods
psubsb
mov
call
test
call
mov
call
mov
adc
mov
adc
mov
call
mov
jg
pop
call
mov
aam
jmp
aam
aam
jmp
xchg
jg
xchg
aam
rcl
inc
jmp
aam
rcl
dec
jmp
aam
fdivr
xchg
jg
aam
jmp
aam
dec
jmp
aam
fcom
dec
jmp
aam
stc
xchg
jg
fcmovbe
push
jmp
aam
movsb
aam
jmp
aam
cmpsb
aam
jmp
xchg
jg
xchg
aam
mov
aam
mov
aam
lods
stc
xchg
jg
aam
jmp
aam
scas
aam
jmp
aam
test
pop
jmp
aam
stc
xchg
jg
stos
aam
jmp
aam
mov
daa
jmp
aam
mov
and
mov
jg
xchg
aam
mov
and
mov
jmp
aam
jmp
aam
mov
aam
jmp
aam
mov
aam
mov
aam
stc
xchg
jg
mov
aam
test
aaa
jmp
aam
xchg
xor
mov
outsl
inc
hlt
add
jmp
hlt
xor
xor
dec
hlt
cmp
xchg
jg
jmp
hlt
aas
jmp
ds
hlt
cmp
push
cmp
push
hlt
cmp
xchg
ss
hlt
push
jmp
hlt
add
push
hlt
pop
jmp
xchg
jg
xchg
hlt
jmp
hlt
add
pop
hlt
jmp
hlt
add
pop
hlt
jmp
stc
xchg
jg
hlt
or
pop
hlt
por
jmp
hlt
or
and
jg
and
or
daa
hlt
jmp
aam
jmp
aam
popf
aam
jmp
xchg
jg
xchg
aam
fs
jmp
aam
arpl
adc
push
loope
ret
ret
sub
jmp
hlt
pop
xchg
stos
sbb
pop
sub
dec
lds
divb
mov
in
xchg
in
popf
in
lds
addb
lds
pusha
stc
fucomi
and
lds
inc
lds
inc
lds
dec
dec
lds
dec
push
add
mov
in
sbb
mov
add
fistpl
stos
out
jo
jmp
inc
stos
jbe
incb
push
or
mov
gs
mov
mov
lcall
les
pop
mov
test
lock
leave
aaa
pop
fisubrs
into
jo
xchg
lock
jbe
xchg
mov
add
insb
jno
mov
fisttpll
push
je
add
jb
jbe
sbb
jo
xchg
into
je
jae
jb
jge
pop
push
cmp
xchg
or
fidivs
mov
add
adc
add
idivb
jp
xchg
dec
jo
or
dec
mov
mov
or
and
pop
jmp
push
push
sub
shrb
push
adcb
xchg
int
push
sub
push
jl
int
mov
pop
fildl
mov
sti
stos
daa
xor
nop
shrb
arpl
lret
shrb
popf
and
aad
sahf
das
fldcw
or
aad
lret
shrb
fwait
sub
pop
lods
sub
xor
shrb
aaa
popa
ss
shrb
shlb
arpl
bound
aad
lret
inc
pop
inc
push
sub
jle
test
or
inc
psubb
push
push
mov
fidivl
mov
rolb
add
sub
push
mov
push
mov
pop
xchg
xor
dec
out
movsb
test
lock
dec
and
cmpsb
push
sub
outsb
sarl
rcl
lahf
mov
or
lock
ss
lret
mov
call
fstpl
add
stc
dec
add
fisttpl
sahf
les
in
movsl
inc
mov
jns
push
pop
push
loopne
mov
push
and
fadds
std
or
inc
dec
repz
das
add
je
mov
mov
ficompl
mov
test
pop
decl
xor
mov
sub
push
shlb
std
xchg
sti
out
outsl
mov
mov
fistpl
mov
mov
pop
cmpb
loope
and
add
add
push
ret
and
xor
dec
decb
test
xor
xor
xchg
adc
push
int3
mov
fsubs
mov
jnp
dec
pop
and
lock
fiaddl
scas
mov
aaa
incb
stc
je
cltd
add
cmp
ljmp
rclb
mov
fiaddl
push
addr16
fildll
or
dec
rcll
or
and
or
mov
jge
insl
jp
push
or
adc
pusha
jecxz
loop
mov
xor
fistps
cmc
sub
inc
mov
aad
es
push
push
push
ret
mov
rcll
in
aad
add
faddl
mov
add
scas
adc
push
add
add
mov
add
loope
adcl
adc
sbb
lidtl
add
loop
jl
cmp
cmp
lea
cmp
ljmp
lods
push
test
aaa
mov
add
xor
sbb
ss
or
mov
testb
xchg
xchg
mov
mov
in
pop
sti
lods
adc
push
xchg
orb
xchg
lea
in
out
movsl
xchg
aad
mov
adc
dec
scas
cld
add
mov
mov
in
pop
add
xchg
enter
xchg
or
mov
aad
icebp
add
outsb
adc
dec
lds
mov
adc
or
addl
add
jmp
into
lret
popa
lock
cwtl
inc
or
in
sahf
inc
add
fimull
movsl
adc
add
sbbb
or
sub
das
xor
sbb
adc
cmpsb
mov
lret
aam
test
incl
add
xchg
mov
push
int3
in
add
lret
orl
xchg
test
mov
mov
movsb
add
mov
add
mov
push
cmpsl
loop
adcb
and
movsb
addl
test
std
test
add
test
das
cld
xchg
mov
testl
xchg
jg
mov
shrl
push
push
mov
mov
mov
aas
xchg
rcrb
lds
test
in
and
addb
insb
fwait
dec
test
ret
pop
sub
inc
addl
inc
mov
rorb
les
add
scas
test
xor
hlt
fs
out
sbb
sbb
jg
push
into
dec
pop
mov
xor
out
cmp
pusha
sbb
xor
inc
jmp
ret
pop
mov
mov
in
add
js
lcall
and
loopne
pop
mov
push
dec
in
add
or
mov
bound
mov
and
xchg
and
push
and
add
xchg
fimull
loop
bound
insl
pop
sbb
xchg
jno
aas
mov
lea
mov
mov
mov
mov
adc
pushf
push
add
addl
shrb
ficoml
lds
into
mov
incl
std
mov
add
lea
stos
lcall
orb
push
mov
mov
lret
cmc
push
fsubs
adc
aaa
outsb
mov
push
jle
sbb
add
pusha
inc
decl
rolb
nop
xchg
bound
mov
arpl
mov
in
lea
loop
pushl
lock
cmpsl
mov
mov
test
fistpll
add
mov
lods
sbb
addb
lock
sub
sarb
xchg
mov
lahf
jbe
push
clc
aaa
adc
bound
mov
faddl
pusha
pop
in
jg
incl
push
add
enter
orps
filds
icebp
aaa
fbld
and
inc
mov
fcoms
push
dec
fisubrs
mov
fbstp
inc
add
popa
xor
or
mov
mov
add
loope
mov
out
cmpsb
rolb
lods
xchg
mov
push
pop
or
popf
testl
das
aam
push
or
pusha
push
mov
cs
pusha
sub
mov
mov
xchg
mov
mov
fldt
loopne
mov
add
lcall
mov
testb
and
mov
xchg
pop
scas
loope
add
fcmovb
lods
cmpsl
add
sbb
inc
movsb
das
cld
fistps
xchg
pusha
sbb
sub
orl
insl
insl
lods
aas
push
add
cmpsl
xchg
cwtl
movsb
sub
add
imull
mov
lods
insl
jmp
stos
stos
add
jns
das
xchg
pop
fadds
mov
dec
and
pop
mov
mov
fs
add
mov
fbstp
mov
cmpsb
arpl
and
inc
mov
clc
sub
movsb
mov
decl
test
loop
test
xchg
bound
mov
pusha
and
lods
and
mov
std
mov
add
das
cld
dec
cld
mov
adc
adc
xor
scas
mov
ljmp
sbb
nop
dec
test
xchg
nop
add
pop
or
insb
imulb
jo
push
jecxz
fcomp
loope
lock
mov
addr16
mov
add
pop
mov
test
xchg
sub
rcl
cmpsb
mov
xor
jno
jge
dec
into
lret
push
or
jbe
adc
xchg
mov
loop
loop
or
les
xchg
sub
clc
sub
shlb
shll
adc
push
clc
sub
push
lea
cmp
or
in
xchg
sub
push
in
std
rcrb
cmp
pusha
cmp
subl
rorb
xchg
jae
pop
push
pusha
mov
fdivrl
inc
add
inc
mov
lret
add
shr
outsb
add
xchg
inc
and
jecxz
xchg
out
adc
jecxz
movsl
add
fdivl
pop
out
mov
aad
sub
test
add
dec
mov
push
rolb
push
pop
les
in
dec
adc
nop
push
sub
push
mov
mov
pop
into
xchg
vcvttpd2dqy
xor
and
xchg
out
mov
xchg
fiadds
mov
nop
adc
xchg
pushf
xchg
lea
rcrl
cwtl
mov
popf
lahf
fwait
mov
in
dec
push
andl
lods
sbbl
mov
mov
cmp
test
cmp
in
outsl
push
loop
jno
into
jmp
testb
lock
cmp
sub
or
adc
iret
lret
fdiv
ljmp
loopne
in
inc
out
in
cli
fldcw
repz
mov
mov
dec
test
dec
jnp
push
andl
cs
push
pop
dec
inc
push
inc
add
sbb
jge
jp
insl
jle
flds
rcr
aaa
inc
rol
aad
repz
leave
aad
xlat
rcl
xchg
xchg
xchg
fstps
call
int
cwtl
cltd
ret
mov
xchg
jae
xor
mov
pop
jns
and
jp
imul
xor
insb
hlt
jbe
xor
jnp
pop
inc
inc
inc
inc
pop
adc
aam
or
jecxz
ret
outsl
aad
jns
inc
cmp
inc
cmp
insl
add
jg
enter
cmc
add
int3
leave
shll
test
adcb
call
jns
push
inc
push
inc
push
inc
data16
js
jae
roll
outsl
icebp
outsl
cld
jle
jge
outsl
aas
es
inc
pop
outsl
push
push
inc
lahf
push
jbe
lock
push
pop
inc
inc
add
or
sbb
add
inc
or
add
jg
adc
fs
imul
mov
sbb
imulb
jno
je
jge
or
mov
ljmp
mov
xlat
clc
pop
cli
test
fldcw
test
mov
mov
icebp
add
cmp
shrl
pop
add
clc
das
icebp
das
mov
or
sub
sub
movups
std
rol
fistpll
push
pop
adc
add
pop
and
cmp
jle
jg
cltd
xor
push
das
addl
loope
cli
test
add
ror
mov
jecxz
push
je
outsb
shrl
xchg
lods
sub
divl
es
les
idivb
mov
repnz
mov
or
test
rcl
add
cmp
lods
rcr
aaa
xor
and
xlat
into
sub
mov
xor
jnp
js
fistpl
insb
jbe
fs
dec
push
addr16
xor
cmp
push
sub
push
gs
outsl
lods
fistl
enter
xchg
or
xchg
stos
scas
roll
hlt
or
add
jge
fucomip
mov
xor
jae
test
cmp
imul
outsl
addr16
loope
fucom
js
and
jg
jne
xor
cmp
jge
jp
outsl
cltd
and
cmp
jnp
call
ljmp
arpl
push
adc
xor
add
sbb
add
shrb
or
or
das
lea
or
or
nopl
sbb
aaa
jne
insb
movsb
jp
sub
jne
fs
and
lcall
adc
jle
aaa
add
out
fimuls
lock
leave
or
enter
shll
dec
pop
dec
and
pop
insb
sbb
incb
inc
pop
push
add
jne
push
inc
adc
call
or
mov
mov
mov
andb
fisttpl
push
mov
add
je
ja
popw
sub
outsl
popa
arpl
jge
gs
jae
mov
notb
dec
inc
out
xlat
mov
sar
fcmovbe
int
in
mov
icebp
test
popa
dec
jge
jp
imul
je
push
push
ljmp
add
sbb
adc
sbb
and
mov
aaa
sbb
shr
aam
sti
adc
inc
dec
jae
repz
fisubl
insl
mov
pop
mov
std
mov
jne
and
lahf
cwtl
lea
cmp
mov
roll
mov
fidivrs
mov
mov
lods
ss
shll
aad
std
jge
jne
insl
adc
jle
mov
or
std
es
insb
fdivrl
outsb
imul
mov
mov
add
lea
or
das
push
mov
icebp
dec
dec
fmul
int3
xchg
pop
clc
cli
aam
int
into
aam
xor
add
aas
mov
push
push
push
xor
dec
jg
or
xor
sbb
sub
ljmp
std
in
cmp
or
sub
das
cmp
ss
and
xor
sub
sub
jg
js
sub
loop
fs
sti
in
jmp
jno
std
movsl
loop
cmc
fucom
cmc
out
push
hlt
cld
mov
call
insl
push
push
push
dec
add
pusha
insb
je
fs
pop
clc
adc
outsb
outsl
mov
rcl
rol
add
push
fdivs
jbe
pusha
or
jnp
cmpsb
mov
sub
mov
sub
jmp
jmp
pop
popa
cli
mov
dec
xor
hlt
adc
lock
jp
mulb
test
fnsave
mov
fcmovnbe
nop
fists
addl
push
adc
xchg
xchg
mov
dec
mov
adc
xchg
cwtl
out
cli
push
das
xchg
cltd
cmpsb
test
push
aad
gs
jl
std
loopne
stc
add
cli
in
sbb
adc
not
fidivrs
dec
call
out
rolb
xlat
ljmp
cmc
add
mov
sti
add
push
sbb
push
push
add
add
sbbl
push
dec
jl
xchg
test
stos
mov
mov
mov
sti
mov
pushf
and
in
outsl
sbb
lcall
nop
mov
jmp
lcall
enter
inc
mov
sbb
call
daa
cmp
repz
ljmp
sub
push
loop
imul
jb
sub
pushl
sbb
testl
pop
gs
jno
jbe
inc
js
fists
js
imul
dec
pusha
jns
fs
dec
pop
pop
sub
mov
arpl
addr16
add
or
mov
pop
jl
or
jns
insl
push
jno
adc
xor
sub
ljmp
test
and
push
push
aam
push
clc
push
js
sbb
jmp
out
jg
out
pop
outsb
jle
outsb
insl
je
jge
daa
xor
xor
aaa
or
sub
lahf
push
lods
xor
pop
out
call
in
in
jo
incl
mov
push
inc
inc
pop
pop
adc
inc
inc
pop
push
inc
jne
outsb
pop
loopne
dec
dec
in
in
insb
jns
jb
cld
or
aad
mov
idiv
cmc
cld
jg
clc
push
lret
fwait
mov
inc
push
or
std
mov
out
stc
loop
jecxz
or
out
lock
or
mov
mov
mov
xchg
xchg
aaa
sub
cli
xchg
imul
lea
add
adc
sbb
decl
xor
and
and
xor
cmp
sub
sbb
sbb
outsb
bound
mov
push
ss
es
lahf
jg
pop
push
jae
jo
dec
jae
push
lods
mov
inc
push
clc
movsl
incl
inc
inc
cmp
pop
adc
imul
stos
mov
mov
scas
jg
rcl
dec
incb
jno
adc
adc
sbb
sub
sub
sub
aaa
xor
dec
rcl
mov
pop
jmp
jg
or
adc
sbb
sbb
in
mov
and
and
or
and
jl
xor
jmp
icebp
and
shr
out
loopne
in
in
ja
pop
shlb
imul
sbb
push
or
inc
or
mov
add
adc
ret
iret
rol
pushl
mov
mov
and
das
sub
es
iret
rcr
lret
iret
inc
fisubs
adc
loope
mov
jmp
mov
mov
cmp
cmp
cmp
sub
add
sbb
test
xchg
xchg
mov
sub
or
adc
les
cmp
and
in
ds
test
out
pop
pop
lods
mov
xchg
sub
cltd
nop
pushf
mov
sub
xlat
lock
clc
icebp
pushl
incl
lret
fcmovb
call
fxch
ret
scas
xchg
repz
hlt
jnp
mov
pop
pop
inc
pop
pop
loopne
jg
out
idivb
xor
sbb
in
mov
repz
sbb
int3
rol
rorl
fstp
or
lds
leave
out
call
xor
xor
clc
cmpsb
icebp
fsubr
lods
or
popf
mov
scas
leave
xlat
mov
rcrl
clc
cmp
je
outsb
cmp
xor
xor
jo
sub
and
jo
pop
adc
sub
sbb
test
test
insl
xor
pop
cmp
jns
insb
push
pop
jno
outsb
cld
stos
test
mov
nop
cs
out
pop
je
mov
mov
scas
stc
fsub
cld
mov
dec
std
xchg
movsl
pop
dec
dec
dec
pop
inc
push
add
mov
ljmp
ret
cmova
xor
adc
adc
lcall
outsb
xor
sbb
dec
push
push
push
pop
push
add
and
push
or
sbb
sbb
xor
outsl
decl
pop
daa
ss
cmp
cmp
and
inc
popa
imul
sbb
imul
cs
sbb
jns
jg
and
aas
outsb
popa
mov
mov
mov
xchg
testl
xorl
dec
pop
pop
pop
js
outsl
mov
adc
inc
inc
loop
xchg
mov
lods
aam
fnstsw
mov
dec
jae
jl
imul
pop
jae
jl
scas
lock
pop
scas
pushf
xchg
mov
out
imul
sti
pop
or
std
pop
dec
lret
inc
incl
jno
jnp
jns
jl
pop
bound
dec
lcall
jge
and
bound
je
add
cmc
enter
incl
aad
rol
repnz
into
cs
rol
call
fmulp
int3
pushf
lock
movsl
dec
xor
orl
xchg
jbe
icebp
push
mov
clc
push
das
lock
sahf
aam
push
mov
dec
xchg
fistpl
stos
inc
inc
or
inc
push
push
add
mov
pop
push
stos
sub
std
stc
repnz
out
mov
std
movsl
cmpl
in
adc
aam
shrb
cmp
or
pop
je
aas
ds
jl,pt
xor
aas
sub
pop
adc
inc
adc
or
sbb
dec
push
dec
xchg
xchg
mov
in
push
pop
popa
gs
sti
pop
mov
outsl
insl
jbe
addr16
xchg
xchg
test
lock
sub
mov
mov
test
subb
mov
mov
lods
mov
lods
popf
jbe
fisttpl
cld
jg
push
push
pop
push
dec
dec
sbb
push
inc
and
insl
add
mov
arpl
mov
sub
cmp
sub
shrb
sahf
xor
fisttpll
or
add
dec
cmp
jge
pop
call
mov
fldl
sub
hlt
fistpll
test
mov
mov
call
test
xchg
jecxz
stos
mov
or
xor
movsl
mov
into
mov
mov
push
push
pop
jg
push
cld
xchg
out
mov
in
adc
pop
mov
popf
and
andb
hlt
adc
xor
add
das
dec
sbb
fnstsw
shlb
and
xor
fidivl
and
gs
pop
jp
pop
es
and
ds
and
adc
mov
xchg
nop
cwtl
mov
lcall
jnp
insb
jnp
sub
les
je
jg
sbb
jp
inc
gs
dec
arpl
inc
xor
pop
dec
addr16
fldt
pop
dec
das
neg
rcl
fcmovnbe
push
test
out
shl
orl
pop
push
or
mov
mov
mov
mov
mov
cmpl
xchg
mov
xchg
sbbl
inc
mov
js
imul
arpl
xchg
mov
or
sbb
cmp
adc
sbb
daa
pop
mov
jg
ret
adc
sbb
push
xor
cmp
cmp
incb
incl
outsl
fcomp
lret
fcomp
pop
mov
push
das
cmc
mov
into
xchg
int
fxch
stc
les
sbb
ret
ljmp
mov
mov
clc
ja
jmp
std
mov
pushl
mov
stc
out
mul
ret
lahf
fwait
cmp
addl
repz
aaa
call
mov
loopne
cs
cld
sti
jecxz
jmp
repnz
sti
fst
fcmovne
aad
int3
xchg
pushf
xchg
sbbb
repnz
pusha
mov
mov
mov
insb
jg
cmpb
sahf
mov
mov
dec
cld
aaa
xor
mov
rol
inc
mov
jg
add
mov
mov
lcall
or
nop
jo
insb
push
jnp
rcll
es
cli
jg
aaa
cmp
jo
fs
and
adc
loope
pop
je
arpl
sbb
pop
dec
lea
inc
push
inc
pop
jbe
inc
dec
pop
lock
imul
push
xor
dec
decl
cmp
xor
and
pusha
jae
decl
xor
movsb
push
xor
daa
and
sbb
push
or
push
push
push
pop
test
mov
sbb
pop
and
pop
xor
outsl
loop
or
xor
inc
in
hlt
call
in
cld
push
or
out
mov
cld
call
hlt
cli
lods
repnz
rcl
lret
loope
faddp
xlat
sar
inc
aaa
js
fstpt
repz
lds
lret
repnz
push
ret
mov
in
mov
inc
dec
inc
push
pushf
dec
or
cmp
push
fsubrp
dec
jl
ror
lds
ret
aam
mov
push
dec
cld
daa
add
jb
push
jno
push
push
pop
dec
xor
sar
cmc
adc
adc
addr16
outsb
xor
cmp
jnp
sbb
daa
push
jmp
push
pop
inc
sub
gs
pop
pop
loopne
outsl
jl
inc
jns
push
jnp
ja
jp
push
movsl
arpl
fs
pop
inc
sub
mov
mov
faddp
loop
lret
add
out
iret
out
jmp
in
call
ja
jo
outsb
imul
or
pop
dec
call
dec
dec
dec
xor
rorb
test
rorl
stos
mov
cmpsb
adc
adc
testb
pop
test
mov
pop
in
lcall
mov
xor
sbb
adc
add
out
sbb
adc
inc
pop
pop
jmp
test
mov
sti
xchg
mov
mov
mov
clc
in
in
loop
shr
in
jl
fcomi
mov
add
lock
divb
mov
mov
cmp
cmpsb
mov
cld
cld
or
in
out
in
jp
jg
mov
pop
jge
jns
xor
jns
mov
fcomps
shlb
pop
ljmp
test
cwtl
xchg
xchg
lcall
subl
movsb
lods
mov
clc
inc
lds
mov
mov
jb
mov
cli
mov
add
push
adc
mov
or
sbb
push
decl
pop
inc
adc
add
decl
jbe
jbe
xor
and
push
cmp
sub
xor
and
aam
mov
movsl
icebp
test
or
movsb
scas
add
loop
lret
jmp
out
lock
outsl
cmp
dec
pop
pop
add
inc
dec
dec
inc
sbb
pop
inc
push
dec
pop
sbb
push
mov
cmp
repz
ret
adc
icebp
test
or
push
xchg
das
hlt
gs
or
je
adc
movhps
incl
div
stc
sub
jmp
scas
mov
cli
mov
aam
scas
mov
mov
cmpsb
mov
mov
rcrl
xchg
mov
pop
mov
into
mov
lret
out
cmp
xchg
add
mov
scas
mov
mov
add
cli
sbb
mov
jo
das
xchg
leave
int
repnz
mov
loop
sub
aas
add
in
or
fisttps
cli
stos
mov
push
cmc
icebp
loope
loop
nop
lcall
rclb
negl
pop
mov
pop
cmovbe
adc
pop
mov
push
cmp
push
inc
xor
push
or
dec
add
push
sbb
push
push
cmc
sub
dec
sbb
add
dec
inc
push
adc
ljmp
jbe
insl
jae
jnp
jge
cmp
test
mov
jecxz
mov
shrl
scas
test
mov
idiv
xchg
movsl
movsl
mov
mov
xchg
into
mov
out
loopne
rcrb
xchg
int3
fdivrl
xchg
lret
mov
mov
jmp
ljmp
insl
sti
inc
sub
test
mov
sbbl
in
xchg
rol
add
mov
mov
cmp
add
aaa
cmc
fistl
mov
in
xchg
sar
or
pusha
loop
push
movsl
push
mov
daa
inc
add
insb
fistpl
adc
lock
xor
xchg
inc
adc
fldl
sbb
jne
cmpsl
jp
pushl
jmp
lahf
inc
in
fisubs
xchg
or
sti
mov
adc
inc
outsb
or
dec
xchg
mov
loope
ds
test
out
imul
divb
insb
mov
in
xor
ljmp
sbb
mov
in
sbb
mov
mov
or
in
aad
sub
movsl
ret
or
xchg
fstp
lea
mov
mov
jmp
outsb
and
mov
or
push
mov
push
testb
pop
lret
cmp
fldcw
inc
push
outsb
xor
imul
sub
cmp
nop
or
mov
xchg
mov
sti
pop
push
push
mov
mov
mov
mov
movl
push
dec
outsb
fcoms
pop
cmpsb
xchg
mov
mov
adc
jmp
pusha
outsl
cmp
ds
inc
ret
push
mov
es
es
mov
mov
jg
jp
ret
lret
xchg
lods
lds
cmp
ds
add
and
jge
mov
mov
fimuls
lea
sbb
cmp
sbb
ret
pushf
dec
and
and
cmc
hlt
sbb
fldl
aad
out
and
jge
std
es
loopne
inc
or
iret
es
in
adc
cmp
outsb
pushf
lea
add
xchg
out
ss
out
jecxz
mov
mov
fadd
or
lret
sbb
mov
mov
or
sarl
bound
pop
jno
or
ret
fmuls
add
or
mov
nop
repnz
data16
sbb
incb
pushf
push
and
add
shl
mov
adc
shl
adc
mov
sbb
inc
add
fsubs
pop
xchg
std
add
gs
or
xchg
fsubrs
fucom
fisubl
mov
in
mov
cmc
add
clc
shrb
or
nop
mov
or
sbb
xor
add
add
sub
pop
mov
or
push
push
jmp
test
pop
sar
loop
icebp
add
sbb
lock
mov
fidivl
cmp
adc
push
jmp
push
aaa
or
dec
leave
out
subb
out
lods
jecxz
sub
cltd
stc
sbb
pop
mov
or
movsb
icebp
add
fisttpl
inc
cmpsb
inc
adc
lea
mov
int
xchg
sbb
fs
incl
sbb
mov
push
out
roll
cltd
inc
or
push
out
sub
incl
data16
and
inc
fdivrl
add
mov
icebp
insb
or
push
jle
cmc
jg
fsubrl
lret
jl
insb
addb
popa
rorl
mov
or
cmp
subl
mov
icebp
ficomps
xchg
out
mov
cmc
fcmovu
add
stc
subl
sub
xlat
inc
or
orl
nop
or
aas
push
cld
cli
outsl
std
push
outsb
in
add
shrl
xor
jle
shlb
loope
mov
fcompl
mov
hlt
shlb
sbb
addb
adc
or
loope
push
addb
add
sarl
xchg
loop
or
add
and
jecxz
mov
pop
adc
mov
push
or
rcll
cld
pop
orl
in
or
in
add
or
ljmp
mov
ficoms
nop
fmull
js
sbb
fbstp
orb
mov
outsb
ret
loop
sbb
xchg
aam
sub
daa
or
int
push
icebp
xor
mov
add
mov
ja
outsl
int
in
ficomps
or
or
enter
inc
pusha
adcl
push
fldt
mov
mov
xchg
add
data16
mov
push
xorb
mov
in
sti
xor
sub
or
ss
add
fwait
enter
sub
pop
test
inc
scas
pextrw
arpl
insb
in
dec
adc
das
outsb
sbbl
xchg
rcrb
or
mov
mov
outsl
fistps
rolb
filds
scas
cwtl
ljmp
rol
pop
xor
jbe
mov
inc
adc
lods
push
xor
add
fildll
xlat
sbb
xor
and
push
lcall
sbb
movsb
inc
sub
popa
or
pop
clc
lods
inc
ss
inc
adc
mov
xor
aad
sbb
gs
mov
xchg
lods
out
inc
insb
jb
mov
add
inc
sub
jg
movsl
add
out
pusha
pmaxub
and
into
loop
jmp
push
sbb
outsl
mov
or
sbb
and
inc
pop
out
and
lret
loope
mov
ss
push
enter
decl
push
adc
pusha
ds
addr16
jo
decl
xchg
popa
or
popa
push
jg
loope
mov
test
add
mov
or
mov
sub
inc
adc
pop
cmp
pushl
ds
push
filds
outsl
pop
fcoms
nop
mov
jg
ret
or
orl
clc
outsb
test
mov
sbb
pusha
inc
inc
mov
add
mov
push
dec
xor
or
cld
and
lea
push
mov
pop
ret
add
aaa
mov
mov
cmpsl
or
or
and
pop
jecxz
or
das
std
or
inc
jno
inc
fs
nop
test
sbb
mov
les
push
stc
ret
jno
or
cmp
pop
jnp
push
jnp
pusha
arpl
test
mov
insl
push
or
add
pushl
enter
popa
push
cmp
mov
mov
stos
lock
or
lcall
cmp
mov
inc
loopne
call
pop
mov
bound
dec
outsb
mov
sbb
mov
jge
js
and
cmpl
out
push
add
jg
fisttps
jns
dec
and
mov
in
mov
adc
mov
sbb
lea
xor
inc
inc
adc
adc
xor
ljmp
push
or
ffree
jno
fnstsw
fnstenv
out
int3
push
or
and
incb
das
insb
mov
clc
lods
in
sub
add
add
xchg
enter
mov
dec
or
dec
push
sbbl
pop
push
aam
and
jno
sar
call
in
adc
pop
adc
rcrb
cmp
fidivrs
sti
mov
aad
jbe,pn
loope
js
adc
in
cmp
adc
jb
pop
adc
cmp
loop
mov
push
popf
popa
or
add
test
pushf
jne
and
popa
push
aaa
sbb
jo
cmpsl
scas
adc
fdivrp
stos
adc
cld
movsb
adc
add
std
cmp
adc
jb
repnz
inc
dec
adc
xor
sub
ret
mov
cwtl
dec
xchg
push
add
lcall
or
clc
decl
adc
adc
sbb
loopne
frstor
clc
mov
inc
pusha
imul
jmp
push
push
add
into
and
adc
dec
sti
adc
outsb
adc
mov
rcrb
sbb
stc
dec
icebp
nop
ja
add
push
add
aam
pop
pop
ja
or
adc
or
lods
xchg
adc
clc
mov
mov
inc
dec
movsl
inc
dec
sbbb
xchg
int3
gs
inc
sbb
or
dec
lea
popa
cmp
movsb
or
push
sbb
movsl
mov
mov
jo
mov
jg
dec
adc
or
lock
jg
sub
adc
data16
jb
mov
or
jmp
pop
sub
gs
loop
gs
aam
lcall
pusha
inc
and
mov
adc
das
inc
jmp
jne
xchg
pop
or
pop
add
mov
pop
mov
lock
add
fdivrs
push
loopne
lcall
and
dec
jo
outsb
ljmp
add
cmp
nop
or
jecxz
dec
push
mov
daa
mov
jecxz
pop
cmp
daa
popf
or
cmp
das
sarb
adc
aad
dec
out
xchg
adc
out
sti
jg
das
std
jb
popa
jae
ss
icebp
or
cmp
add
sbb
fidivl
sbb
add
sbb
outsl
rolb
int
mov
and
add
mov
mov
or
sbb
pop
pushl
rorl
push
cmp
pop
cmp
pop
test
and
xlat
pop
add
clc
test
inc
pop
dec
xor
insl
fisubl
lods
mov
sarb
and
cmp
mov
adc
icebp
or
lock
pop
clc
pushl
inc
push
inc
pop
cmp
push
and
xor
fidivs
decb
out
das
add
or
pop
mov
jl
ljmp
adc
push
and
addb
and
cmp
push
sbb
pop
jo
insb
pusha
and
lock
inc
push
cmp
mov
sub
add
cmp
adc
inc
add
push
mov
mov
sbb
jl
jno
and
or
lret
and
sbb
pushf
in
ret
add
add
cmpsb
lea
dec
cld
push
add
jl
test
add
adc
jecxz
add
cld
icebp
or
inc
lock
add
push
movaps
dec
push
push
mulps
sub
iret
lea
pop
pop
xchg
xlat
cs
adc
call
xchg
xchg
in
xchg
push
inc
imulb
add
hlt
sub
icebp
sub
and
pop
mov
movsl
mov
sub
repnz
imul
push
loopne
mov
adc
popf
dec
or
das
mov
sub
shll
jo
clc
fbstp
sub
in
jb
repnz
push
mov
sub
pop
mov
pop
xor
faddl
xorl
push
push
cli
cmc
inc
or
jecxz
lcall
mov
mov
pusha
pushf
in
sbb
nop
sbb
das
fwait
inc
xchg
xchg
js
mov
jo
test
mov
jo
lret
dec
mov
data16
mov
sub
std
outsl
test
loope
sbb
in
and
outsl
pop
mov
lea
ror
or
clc
xor
mov
and
adc
sub
xor
ljmp
xchg
add
jl
add
push
mov
jg
push
call
push
nop
adc
icebp
fcoml
std
push
test
in
mov
fisubl
mov
rcl
xor
xchg
add
fisttpll
nop
add
jb
andb
xchg
push
xor
dec
ljmp
mov
ret
das
outsb
es
sub
test
lds
cmp
mov
data16
std
xchg
inc
jbe
mov
les
mov
pop
cmp
out
jns
insb
jecxz
movb
int3
cmpsl
outsb
jecxz
or
mov
sub
notl
lock
fistl
or
jl
sbb
jbe
ja
xchg
std
push
mov
aas
std
mov
pop
loop
cmp
inc
ja
or
sbb
scas
mov
pop
movsl
push
mov
loopne
push
jae
lret
or
dec
pop
pop
cli
add
or
jmp
inc
fnsave
and
mov
or
mov
rcrl
sub
xor
ret
xor
add
dec
fucomp
lret
pop
sbb
fsubrp
test
jno
mov
mov
and
out
aam
or
or
pop
dec
sbb
lret
loope
les
and
ds
inc
mov
loop
test
jne
xchg
pop
add
jp
or
sub
pusha
into
loop
cmc
or
out
mov
jp
xor
sub
push
jle
mov
jg
adcb
sub
nop
xor
xchg
add
fnstsw
call
int
inc
orb
xorb
aaa
xor
xor
andl
addl
mov
xor
push
jb
stos
mov
mov
subl
push
cmp
push
xchg
clc
inc
xor
das
pop
mov
out
rorb
lock
sub
pusha
in
in
or
mov
xchg
cli
cmp
outsl
push
lock
fidivs
push
and
xchg
and
push
adc
incl
push
sbb
add
data16
push
xchg
push
push
loope
in
dec
or
cmp
sbb
cs
out
and
push
lods
aad
pop
pop
or
ret
or
mov
fnsave
int
scas
movsl
fisubs
test
jns
andl
add
mov
jp
or
push
sti
test
add
jle
stos
ja
jmp
mov
add
pop
sti
ret
add
je
call
inc
clc
and
enter
rcll
rolb
or
loopne
push
push
pop
add
jne
loope
in
and
and
insl
sbb
or
je
ljmp
and
dec
test
adc
test
test
movsb
sub
mov
pop
cltd
push
test
inc
dec
int
inc
sbb
sbb
sub
inc
outsl
jno
and
and
nop
or
insb
sub
jg
fldt
ret
cmpsl
insb
pop
add
inc
cmc
inc
xor
popl
out
ja
add
stos
jns
test
orb
in
inc
pop
jp
lods
jg
or
out
dec
in
add
dec
aaa
jge
dec
and
mov
cmpsl
mov
xchg
push
xchg
fisubs
sub
insb
pop
ficompl
mov
xchg
daa
add
cwtl
rcr
push
test
rclb
in
mov
call
fcmovnb
ljmp
movsl
push
inc
loopne,pt
es
js
adc
jmp
loopne,pn
std
dec
in
or
shl
outsb
movsb
daa
push
pop
mov
jecxz
fnsave
mov
movsb
add
test
shlb
pop
out
xchg
mov
sbb
lods
das
or
inc
mov
sbb
push
mov
das
xchg
test
outsb
xchg
loope
pop
fisubrs
inc
mov
movsb
pusha
loope
rcl
es
hlt
out
test
sbb
mov
aaa
mov
shl
lea
jge
lock
test
lcall
lock
xchg
inc
add
push
insb
aad
add
jecxz
push
ljmp
inc
sbb
addl
lret
outsb
mov
loope
test
repz
rcr
das
jo
jno
stos
js
mov
mov
cmpsl
in
mov
add
adc
loope
sbb
add
aaa
or
shll
push
lock
test
pop
add
pop
outsb
inc
jg
shrl
cmpsl
sbb
loop
push
mov
mov
icebp
mov
inc
push
loope
mov
dec
bound
sub
je
cmpb
data16
loope
stc
sbb
or
popa
rclb
loopne
pop
push
test
dec
xchg
mov
mov
xor
test
cwtl
xor
arpl
js
pusha
add
clc
popa
mov
scas
incl
test
pcmpeqb
out
loope
nop
push
clc
pop
fcompl
or
push
adcb
ret
outsl
xchg
mov
test
jmp
lock
cli
js
add
mov
or
inc
les
cs
mov
push
insb
and
xor
jne
inc
lcall
jge
test
ret
rorl
mov
pop
jmp
nop
mov
mov
js
push
add
aaa
sbb
js
pusha
call
pop
data16
lods
dec
imul
or
sbb
dec
sbb
sbb
inc
mov
enter
lret
adc
sbb
movsl
scas
sub
push
cmpsb
dec
and
adc
adc
xor
push
inc
out
add
add
sbb
sti
pusha
test
adc
or
lds
sub
scas
or
std
outsl
add
sub
fcoms
adc
cmc
mov
insl
or
sub
popa
movsb
push
push
fistl
mov
inc
cmc
aad
sbb
imull
in
dec
pop
adc
xchg
test
pop
in
sub
add
insl
shl
adc
jns
adc
or
data16
outsb
add
mov
fildl
or
mov
out
cmpl
sbb
mov
stos
mov
sub
dec
leave
xchg
mov
das
push
aas
nop
rorl
and
mov
outsb
adc
fiadds
repnz
les
icebp
inc
stc
iret
fisubrl
rcrb
fisttps
xchg
and
xchg
lock
or
rcrl
cwtl
or
add
xor
mov
push
insb
jno
inc
into
orb
bound
cmc
xor
call
fildl
hlt
pusha
jge
mov
outsb
fsubs
and
les
fstpl
int3
data16
inc
and
leave
and
fldenv
inc
fdivr
bound
fs
dec
int
sbb
inc
fildll
insb
inc
outsb
fisttps
lods
pop
shr
bound
mov
fsubrl
insl
pop
push
call
jl
rolb
mov
ret
out
mov
pop
imul
nop
aaa
push
in
call
and
loopne
push
movsl
testb
and
sbb
in
push
adcl
or
scas
iret
ret
push
push
andl
add
xor
mov
loopne
fimull
inc
pop
gs
fildll
incl
inc
pop
xor
popa
or
aaa
loope
xor
add
loopne
mov
mov
push
pop
push
add
add
push
add
add
mov
mov
jne
mov
sahf
roll
mov
push
fwait
adc
lret
fisubrs
mov
or
add
fnstcw
mov
lcall
sub
addl
cmc
icebp
add
add
in
test
pmaxsw
add
xor
cltd
rcrb
in
lds
test
out
cmc
add
adc
push
outsl
jge
arpl
adc
outsb
shl
cmc
into
icebp
or
pop
cli
ljmp
fldlg2
xchg
or
push
divl
add
dec
int
inc
movntps
mov
inc
mov
mov
add
icebp
inc
add
fimuls
popf
or
fs
xchg
jle
sbb
incb
icebp
filds
or
xor
sbb
pop
cmp
mov
dec
add
push
xor
mov
jle
push
or
or
out
sbb
clc
das
insb
mov
cmpsl
sub
testl
or
inc
pop
mov
push
adc
ljmp
adc
push
inc
ret
sbb
and
mov
jmp
dec
xor
lcall
mov
cmpsb
xchg
fisubrl
sarb
dec
fildll
js
pop
xchg
cmc
mov
imul
push
out
mov
or
addl
or
sub
add
mov
mov
xor
int
pushl
lods
inc
loop
fninit
add
or
mov
movsl
daa
jg
mov
pop
rolb
or
cmp
or
addl
js
add
push
or
xchg
rolb
outsl
xchg
push
dec
sub
cmpsl
incl
loop
sbb
test
enter
xor
cld
dec
std
or
push
aaa
lret
cmp
loopne
nop
mov
jecxz
inc
cld
add
inc
nop
testl
and
add
out
std
cltd
shlb
loope
in
jo
mov
and
adc
lcall
nop
or
add
sbb
sbb
or
lds
rolb
testl
mov
fdivs
add
ret
push
jp
sbb
adc
jg
xor
or
or
rcll
or
repz
out
rorb
mov
jecxz
sub
insl
mov
add
lock
wrmsr
mov
or
ljmp
mov
sti
push
add
jg
pop
in
fldpi
add
clc
sbb
push
add
and
repz
mov
sub
js
and
mov
fnstenv
jmp
push
inc
cmp
call
icebp
dec
in
es
and
in
cmpsb
xchg
pop
out
adc
and
xor
inc
shr
outsl
test
lods
push
lds
test
cld
mov
xchg
mov
icebp
cmp
sbb
lcall
pop
cmp
cltd
in
fstps
insl
jl
lea
adc
mov
repnz
xlat
cmc
jb
add
aad
adc
repz
in
adc
jg
sub
out
je
repz
xchg
jmp
jmp
adc
je
and
push
adcb
inc
daa
iret
in
mov
mov
ret
lret
ja
mov
add
lds
cmp
push
in
push
clc
dec
mov
or
mov
pop
sti
add
ret
add
xor
push
xchg
add
add
addb
mov
push
std
repnz
inc
fldenv
pop
lea
adc
push
xchg
add
fildl
fistl
repz
fcmovu
push
sbbb
sbb
lods
sub
sahf
jbe
divb
add
xchg
in
fiaddl
js
push
rorb
in
test
roll
push
incb
loop
push
push
scas
push
scas
fildll
and
pop
add
mov
add
add
pushl
mov
mov
or
mov
add
xor
pusha
stc
ljmp
xchg
and
push
imul
fdiv
xchg
xchg
push
push
sub
sbb
xchg
add
outsl
or
lds
cmpsb
cs
iret
add
aas
cli
add
enter
test
decb
mov
xorl
sbbl
das
lret
jb
sub
cmpl
xchg
aaa
movb
orb
in
cmpsb
sub
mov
orb
pop
cmpl
jb
push
jp
lret
sub
decl
fld
gs
mov
sbbl
push
call
clc
mov
add
inc
loop
in
imul
or
add
push
ret
das
lock
les
popa
test
add
gs
fbld
out
xchg
cld
mov
mov
bound
pop
movsl
test
jnp
push
sub
xchg
mov
lods
add
fstl
call
ljmp
push
nop
in
push
jmp
std
push
test
shll
lea
xor
jle
and
jbe
outsl
insb
iret
sub
fs
push
aaa
adc
scas
lock
scas
push
pop
sub
push
add
mov
mov
add
pushl
inc
or
mov
push
cmp
add
loopne
xchg
insl
pop
in
mov
shll
cmp
imul
movsl
mov
adc
mov
mov
mov
mov
in
and
xchg
ja
ja
outsb
or
fucomip
inc
fsubrs
data16
repnz
mov
rorl
and
pop
inc
cmp
adc
mov
in
mov
mov
push
dec
pushf
stos
add
adc
ficoml
add
adc
loop
pop
data16
ljmp
or
sbb
out
or
mov
call
and
cmp
arpl
mov
popa
xchg
push
push
dec
mov
incb
adc
pop
xor
add
xor
xor
pop
cs
inc
popa
pop
sbb
pusha
jle
sbb
mov
loop
bound
add
pop
mov
cs
cs
shrb
and
xchg
push
das
push
pop
and
jne
add
push
adc
jecxz
or
rcll
dec
icebp
aaa
push
dec
mulb
icebp
xchg
push
cmp
ja
ret
dec
in
iret
add
lcall
aad
clc
rorb
leave
mov
movsl
push
jne
test
jecxz
push
or
inc
das
fldl
pop
outsb
das
mov
adcb
push
push
into
push
push
and
cmc
out
pop
pop
in
fildll
xchg
hlt
dec
xor
sub
add
jmp
rolb
sbb
lret
fisubl
addl
adc
xchg
outsl
in
ljmp
scas
xchg
call
clc
or
movsl
or
or
dec
xchg
call
mov
movsl
jg
test
mov
adc
mov
movb
sbb
imul
mov
mov
stos
jmp
shll
test
jbe
imulb
outsl
cs
sub
jmp
std
inc
sub
stc
loop
mov
xor
add
loopne
inc
bound
push
js
push
insl
add
lds
add
adc
movsl
sbb
or
and
fldt
dec
into
jmp
add
push
add
addl
incb
out
add
das
out
push
lea
scas
pop
xor
pop
add
and
mov
imul
jg
or
add
jnp
ljmp
pusha
or
pop
adc
cmc
loopne
xadd
outsl
xchg
push
mov
cwtl
imul
add
popa
inc
aam
sbb
movsb
subb
mov
mov
or
lret
mov
call
imul
mov
aaa
push
pop
xchg
jno
mov
xchg
sbbb
out
das
mov
bound
adc
in
push
shl
mov
lods
or
add
mov
dec
aam
adc
aas
loop
mov
outsl
outsl
rclb
out
xchg
ljmp
ljmp
cld
sbb
gs
jecxz
jb
or
add
mov
or
push
push
xor
outsl
repz
jle
outsl
daa
and
xchg
cmpsl
lock
xor
xor
inc
ret
adc
or
scas
adc
and
hlt
xchg
push
or
cli
and
inc
push
data16
jmp
and
sbb
jle
add
jl
mov
mov
call
rorb
std
dec
xor
aaa
gs
repz
add
or
sub
fdivr
push
pusha
ss
loopne
popa
mov
sbb
in
mov
rep
jbe
add
push
sahf
jmp
test
jo
pusha
xorb
negb
xchg
rol
push
push
adc
ja
popa
movsl
jg
mov
rorb
or
mov
xor
adc
into
mov
pop
inc
dec
in
jl
xor
jmp
es
jecxz
cmp
jle
push
out
sbb
add
in
or
inc
mov
xchg
data16
clc
movsb
xchg
jae
outsl
pop
js
cmc
mov
lock
push
adc
mov
std
add
nop
push
dec
mov
fwait
sub
xchg
shlb
sbb
loopne
lock
ljmp
and
hlt
pop
jl
je
pop
sub
xchg
push
xchg
lods
push
inc
cmp
adc
xchg
push
xor
adc
sarb
movsl
cmp
mov
enter
pop
fs
jno
lret
jge
mov
loope
adc
icebp
fwait
add
push
adc
ficoms
adc
mov
or
or
and
in
ret
add
mov
mov
inc
jmp
inc
mov
xchg
jp
and
pop
mov
inc
and
lsl
in
in
or
or
xchg
cwtl
add
popa
or
add
inc
daa
lock
decl
cmp
jmp
fidivl
sti
iret
adc
adc
push
and
cmp
mulb
xor
loopne
and
es
sub
inc
mov
rcll
aam
xchg
push
push
hlt
shrb
shlb
leave
or
bswap
and
dec
sub
or
sbb
mov
or
xor
or
xor
mov
popa
adc
das
push
mov
popa
mov
stos
lock
aaa
push
push
add
js
jnp
icebp
add
mov
sbb
pop
push
cmp
lahf
xor
adc
insl
pop
mov
stos
jne
add
out
rcr
inc
ss
outsb
xchg
mov
sti
or
xchg
andb
add
push
loope
add
mov
das
fcmovnbe
add
inc
xor
xor
popf
daa
sub
pop
xchg
add
lahf
add
adc
idiv
sahf
test
mov
xchg
movsl
pop
mov
ss
in
lcall
mov
fs
xchg
fildl
dec
add
push
out
fwait
push
mov
sbb
outsb
mov
fcompl
or
addr16
repz
shll
mov
fwait
in
test
jnp
add
inc
and
bound
push
pusha
pop
mov
insb
pop
adc
jo
out
lcall
add
mov
gs
sub
cmp
andl
xchg
jb
mov
testb
imull
adc
and
mov
mov
and
popa
or
popa
in
outsl
in
xlat
sub
lea
out
in
and
sbb
jo
hlt
mov
movsl
ret
imul
out
mov
cvtdq2ps
insb
mov
insl
in
xor
jl
arpl
dec
or
and
mov
andl
mov
mov
inc
mov
dec
push
test
mov
or
cmp
sbb
insb
shrb
insb
jo
js,pn
mov
adc
test
push
sub
sti
sbb
push
fwait
or
test
and
cmc
push
cmp
ret
cli
add
cld
push
lods
jmp
jecxz
icebp
push
mov
adc
push
stos
data16
inc
push
test
mov
mov
push
call
lods
fnstcw
stc
push
mov
sub
and
movsl
pop
fisubrs
clc
jo
jmp
mov
adc
add
insb
jecxz
sub
jnp
jbe
sbb
sbb
stc
jne
insb
sub
enter
push
pop
add
add
cmc
insl
das
xchg
in
or
ret
xor
shr
fidivl
in
mov
mov
out
xor
xor
sbb
and
gs
das
lock
add
loope
mov
mov
aaa
call
jecxz
mov
pop
sbb
mov
mov
test
push
xchg
mov
aas
das
adc
movsl
mov
add
call
jg
push
cs
arpl
shr
repnz
xchg
xchg
and
add
rol
shl
lcall
loop
dec
adc
or
adc
test
sbb
int
xor
mov
push
call
popa
ds
movsl
in
mov
sub
and
mov
or
cmp
outsl
xchg
lcall
cmc
push
loopne
add
jae
or
out
repnz
mov
lds
out
and
frstor
outsb
mov
push
add
xchg
cmpsb
push
stc
ss
xchg
xchg
adc
adc
negb
lods
lods
dec
fwait
add
mov
mov
inc
push
push
add
mov
lock
or
mov
add
sbb
pop
mov
insb
test
add
push
out
or
mov
jecxz
sbb
fiaddl
sbb
or
and
adc
sbb
cmc
sbb
std
dec
mov
push
adc
xchg
add
inc
push
das
push
mov
sbb
or
xor
cmp
dec
xor
push
mov
sbb
je
outsl
out
nop
mov
cwtl
lds
mov
sub
dec
fdivl
or
jecxz
cmpsb
mov
lods
pop
loope
jp
sbb
or
add
mov
sbb
hlt
mov
adc
hlt
adc
mov
jl
sub
cmc
mov
mov
mov
or
cmp
mov
in
cltd
rcr
xchg
add
jp
movsl
jmp
xlat
pop
mov
das
aam
jbe
orl
mov
xor
aam
or
or
repz
ret
roll
xor
leave
mov
xchg
or
xor
popa
mov
std
test
leave
mov
push
sub
fs
and
pop
mov
pusha
adc
sbb
out
gs
mov
add
push
pop
mov
xchg
add
daa
or
cmc
fisubrs
mov
outsl
lods
out
lret
xor
mov
in
fisttps
add
adc
sub
add
adc
cs
call
xchg
mov
dec
jne
mov
add
in
testl
subb
mov
sub
mov
sub
sub
add
aas
outsb
pop
js
sbb
test
and
cmc
gs
push
ljmp
aas
cmpsl
aad
insl
ljmp
cmpsl
xlat
outsl
mov
repz
inc
fldt
or
insl
inc
aam
xorb
adc
testb
cwtl
lret
shlb
cmpsb
aaa
mov
push
rorl
nop
out
and
xchg
nop
xorb
out
mov
loopne
ret
fists
mov
add
lods
add
jnp
and
test
aad
or
mov
adc
xchg
fcoml
js
pop
loop
mov
and
cmpl
sub
jbe
or
add
out
pop
loop,pt
mov
ljmp
in
and
pop
loope
xor
adc
add
pop
sbb
aaa
out
cmpl
shl
jp
pusha
sti
mov
es
addb
out
test
inc
pop
or
inc
adc
push
mov
or
mov
inc
cli
jb
jmp
incl
ficomps
and
rolb
sbb
icebp
or
inc
add
xchg
in
inc
adc
test
mov
mov
jbe
cmc
cld
mov
pop
fdivs
inc
or
sbb
inc
cmpsl
jge
testb
popf
inc
shlb
mov
push
pop
mov
cmp
rol
addl
push
and
mov
aam
stc
or
inc
jb
lea
addl
ss
add
insl
adcl
pop
xor
mov
mov
push
outsb
shlb
sub
inc
test
and
test
and
add
loope
sbb
std
and
or
rorl
aam
decb
push
outsb
call
adc
and
inc
push
xchg
add
adc
adc
xor
mov
sbb
sbb
mov
mov
and
inc
or
rorb
jg
test
mov
or
inc
mov
add
icebp
mov
add
mov
jmp
mov
fisubl
xor
xchg
and
inc
pop
sub
pop
call
in
cmc
push
shlb
addl
or
pop
or
test
inc
in
in
and
pop
aad
or
rclb
aam
mov
xchg
push
or
subl
cmc
pop
mov
cli
testb
add
xchg
out
test
pop
dec
xor
cld
sbb
mov
loope
loopne
pop
shrl
sbb
push
cmc
inc
pop
add
xchg
mov
mov
sbb
push
xchg
add
add
add
push
or
jge
xchg
or
les
mov
rorb
in
inc
add
mov
sti
test
cmp
popa
mov
and
jl
pop
pop
and
daa
add
add
enter
or
les
shll
jle
jmp
dec
cld
clc
ret
jg
lds
or
jno
test
jnp
add
fiaddl
push
mov
or
push
mov
outsb
mov
push
loope
or
lea
mov
inc
sub
stos
adcb
imul
sbb
push
cli
outsl
or
mov
or
pop
mov
or
push
inc
mov
mov
lods
cmc
jecxz
in
mov
lods
mov
repnz
loope
or
rolb
push
in
or
or
cmp
adc
clc
inc
lea
push
or
or
pop
insb
cld
loope
ficomps
lret
loopne
das
push
dec
popa
int3
lock
and
mov
outsb
jne
pop
in
outsl
or
sub
aas
insl
in
sub
sbb
lods
inc
mov
sub
sbb
lcall
pop
cld
movsl
sub
mov
jecxz
mov
fucomi
jecxz
aaa
and
push
sub
sub
or
xlat
jmp
pop
xor
adc
insl
sbb
movsl
ja
movsl
and
icebp
add
arpl
pusha
and
push
das
inc
adc
and
testb
xchg
call
jg
mov
push
adc
movsb
stos
add
add
mov
sbb
adc
outsl
jg
sbbb
jns
data16
adc
push
outsb
pop
cmp
and
loope
adc
test
mov
imul
adc
push
dec
enter
jecxz
pop
popw
mov
out
test
jecxz
das
test
dec
addr16
fsubrs
outsl
insb
jno
out
ret
outsl
insb
add
ret
adc
or
ljmp
nop
adc
sbb
fcompl
pop
addb
push
insl
add
jecxz
divl
sbb
dec
push
hlt
insl
std
outsl
mov
das
hlt
testb
out
adc
fldl
cli
test
into
in
xor
push
inc
jmp
fcmove
fstps
cmpxchg
fisubrs
adc
mov
adc
jg
mov
xchg
stos
xlat
sub
sub
fisubs
jb
out
das
cld
mov
cmpsb
push
xchg
out
xchg
pusha
xchg
pusha
push
das
insl
fildll
push
add
sbb
dec
jno
sbb
in
fucomi
sub
sub
xchg
loop
add
insl
test
adc
das
fsubrl
cld
loope
dec
adc
pop
pop
outsl
mov
lods
mulb
out
and
sbb
pop
incl
es
test
and
lahf
daa
or
push
sbb
fwait
lods
std
add
mov
cs
push
stos
jecxz
imul
ljmp
mov
mov
cs
mov
in
icebp
lcall
in
adc
scas
inc
and
push
insl
cmc
movsl
lods
nop
adc
mov
jno
cs
jge
inc
cld
pop
loopne
mov
test
or
data16
dec
pop
add
push
lods
push
call
dec
inc
pusha
in
inc
jmp
imul
mov
jmp
mov
push
and
adc
pop
sub
in
pop
cld
outsl
repz
das
mov
sub
and
adc
test
jp
mov
jg
nop
or
nop
sub
push
sub
mulb
sub
stc
jb
enter
and
in
inc
inc
mov
or
cs
or
out
es
imulb
shrl
scas
nop
or
dec
jg
pop
dec
or
nop
cmp
imul
mov
lds
es
lock
inc
decl
pop
outsb
inc
and
shll
out
lods
adc
adc
idiv
stc
inc
jnp
out
pop
and
out
inc
jmp
sarb
sub
mov
cld
sahf
xor
mov
dec
jmp
cmp
add
insb
and
push
out
outsb
or
loop
add
loope
repnz
cmc
or
inc
mov
out
ss
push
mov
or
repz
sti
movsl
outsl
lock
or
mov
inc
add
fnstsw
and
fildl
adc
or
outsl
fisttpl
sub
outsb
aam
sbb
nop
out
push
in
xor
xor
mov
cmpsl
clc
outsb
in
jmp
push
and
or
ljmp
mov
mov
jle
adc
xor
call
push
add
movsl
sbb
push
mov
jb
sub
fdivr
nop
popa
sbb
mov
push
icebp
cmc
add
push
jo
and
mov
test
or
push
insb
ljmp
add
mov
add
fists
add
mov
push
push
js
ss
mov
cmp
adc
pusha
xor
stos
jo
icebp
add
loope
pop
shrb
sub
jno
ret
rcrb
sbb
in
fsubr
loopne
jno
orl
pop
mov
dec
outsb
push
add
je
insl
adc
loop
jmp
testb
or
sbb
sub
out
sbb
test
decb
jle
lock
mov
add
gs
mov
cltd
sbb
in
xchg
inc
adc
xchg
adc
lds
and
add
push
outsl
adc
mov
fsubr
ljmp
loopne
inc
testb
nop
add
pop
mov
cld
mov
lock
add
insb
ljmp
cld
mov
daa
jno
push
cmp
dec
mov
adc
das
aam
imul
jmp
inc
add
mov
call
addl
mov
mov
test
xchg
jae
push
xor
xchg
outsb
or
in
add
popl
nop
lcall
jne
out
roll
rorb
cwtl
xchg
in
pushf
or
add
adc
pop
bound
dec
sbb
adc
cmp
mov
out
ret
aad
pop
push
mov
loopne
outsb
jecxz
pop
mov
push
mov
xor
shl
insl
fbstp
testl
or
mov
rolb
ret
sbb
or
cltd
icebp
mov
mov
and
pushf
mov
movsl
popa
shr
add
jae
jno
sbb
xchg
js
js
mov
mov
cld
incl
es
nop
daa
sbb
xchg
hlt
adc
or
inc
rorb
sbb
or
fidivs
lock
or
adc
int3
cmc
test
sbb
jge
pop
add
pop
mov
scas
addr16
push
pop
out
inc
add
icebp
sub
in
sub
fidivs
or
mov
or
sbb
push
mov
adc
fs
rcrb
or
jmp
mov
rclb
mov
loope
add
fdivr
sub
ljmp
sbb
pusha
hlt
in
cmp
sub
aas
adc
sbb
adc
cmpb
push
lock
add
push
out
and
ss
dec
aas
push
or
icebp
adcl
jo
outsl
or
push
adc
lea
add
and
mov
jle
out
es
or
xor
xor
insl
mov
push
lea
loope
and
pop
insl
add
stos
lcall
les
adc
add
mov
cmp
outsl
pop
call
jmp
push
fisubrs
ljmp
jae
and
sub
ljmp
aaa
call
and
adc
aaa
mov
sbb
shlb
and
adc
xor
lods
adc
xorl
cld
sbb
ljmp
pop
mov
pop
ret
and
add
or
lods
loopne
inc
test
insb
in
in
rorl
decl
add
pop
test
pop
nop
sbb
loopne
call
fists
pop
lret
mov
sub
xchg
ret
jbe
push
xchg
inc
cmpl
aaa
mov
fiaddl
or
xor
add
outsb
adc
loopne
ss
add
mov
in
data16
mov
stos
push
outsb
rol
lock
jbe
cli
add
or
aad
cmp
mov
mov
insl
cmp
ljmp
ja
in
call
inc
mov
fbld
lock
add
inc
mov
jecxz
sbb
out
movsb
daa
aam
xor
xorb
sbb
cltd
mov
mov
mov
lcall
mov
push
mov
jae
popl
insl
inc
shlb
mov
mov
cmp
add
insl
sbb
adc
adc
adc
adc
test
nop
cmp
jmp
mov
mov
aam
mov
fildl
nop
leave
out
pop
pop
cmpb
xchg
fildll
fcoms
ror
and
mov
iret
scas
sbbl
jns
pop
add
push
jo
jo
es
or
jg
xchg
xor
push
or
hlt
dec
pop
movsl
mov
xorl
arpl
pop
xlat
ficoms
ret
sbb
fs
and
or
xchg
or
adcb
jp
and
adc
pop
mov
and
and
outsb
mov
pop
lahf
jg
insl
popa
fstpt
or
pop
loopne
test
rcll
sub
push
pop
rorl
and
pop
lods
les
mov
push
jo
sbb
add
andl
js
insb
loop
jg
fistl
inc
sbb
movsb
inc
sbb
clc
push
shrb
sbb
mov
dec
cld
in
fs
adc
and
sub
add
dec
mov
sbb
sbb
fcoms
das
rolb
rcrb
or
rcll
aas
mov
sbb
aam
sub
jae
adc
add
and
mov
popa
cmc
xchg
js
outsl
andb
ret
inc
rolb
add
push
mov
mov
and
icebp
mov
push
dec
dec
push
xor
inc
test
adcl
pop
add
jnp
xchg
loope
insl
fldt
jecxz
aas
pop
lods
mov
orb
xchg
notl
into
xchg
fildll
ror
xorb
loopne
mov
ljmp
sar
or
jne
in
cmc
inc
addb
in
adc
cmc
leave
or
and
into
mov
cvtdq2ps
clc
outsl
fnstsw
add
sbb
jno
aaa
ret
aaa
or
pop
cmp
mov
push
adc
push
arpl
push
add
add
inc
ret
pop
push
adc
mov
pushl
add
cltd
add
add
push
sbb
das
mov
stos
adc
loope
pop
ljmp
ss
cmp
mov
pop
loopne
call
mov
add
mov
data16
dec
pop
rdpmc
sbb
jb
in
mov
pop
sbb
ss
cmp
std
pop
xchg
nop
shlb
mov
add
sbb
or
dec
jmp
pop
insb
insl
mov
imul
popa
push
and
outsb
cwtl
test
popa
inc
cwtl
stc
stc
add
mov
lock
xchg
sbb
lock
movsl
xchg
or
lock
das
or
mov
push
xchg
shrl
xor
fisubs
xchg
out
nop
jo
lea
mov
or
pop
mov
cmpsb
into
or
outsb
inc
mov
fs
stc
cmpl
adc
clc
add
mov
push
jns
xchg
outsl
or
imulb
sarl
ss
pop
inc
in
jg
lcall
es
bound
mov
outsb
rcrl
stos
and
lods
sub
add
adcb
and
push
movb
sti
mov
or
nop
call
or
mov
sbb
sbb
popa
andb
or
adc
mov
mov
or
and
mov
fistpll
mov
sub
xor
out
sbb
ljmp
xor
in
and
mov
inc
or
outsb
add
fistps
fdivl
in
loopne
out
inc
rol
mov
mov
push
outsl
or
in
loopne
fsubs
inc
dec
and
nop
push
fildl
cltd
test
jge
push
mov
pop
cwtl
cmpb
push
fldl
jo
mov
call
bound
int3
notl
pop
adc
xchg
lahf
pop
inc
mov
mov
mov
popa
mov
xlat
inc
inc
mov
mov
fld
or
adc
mov
pop
cmpb
loopne
xchg
test
xchg
loopne
lods
lods
sbb
loope
xor
push
push
mov
icebp
or
das
test
pop
icebp
inc
fmull
popf
loopne
and
out
mov
sub
roll
or
faddp
push
rclb
adc
fdiv
dec
pop
add
jmp
ret
mov
pusha
sub
mov
sub
sub
or
xor
fsubl
jg
repz
mov
pusha
add
jp
xchg
outsb
and
sbb
adc
mov
add
inc
add
fildll
fwait
incl
pop
push
mov
in
pusha
xchg
and
imull
fcompl
mov
add
sbb
sub
inc
mov
adc
sbb
or
xor
mov
jg
ds
xchg
mov
push
or
das
mov
xchg
cs
or
adc
lock
insl
fldl
paddusw
call
pusha
es
cwtl
adc
mov
add
movsb
jae
mov
pop
call
out
leave
fdivrl
loope
pop
push
jp
lds
jno
mov
out
out
xor
push
xchg
mov
fisubs
cmp
popa
outsl
mov
ss
cmc
loope
enter
incl
jno
loope
outsb
push
shrb
into
loopne
shll
add
hlt
movsl
inc
mov
pop
loopne
cli
xchg
sbb
inc
cmc
mov
pusha
js
out
mov
inc
xchg
cmc
mov
adc
push
mov
and
dec
sub
xor
incl
mov
sbb
inc
adc
mov
outsb
mov
mov
std
shlb
dec
add
test
mov
das
push
out
out
pop
adc
xchg
fdivrp
scas
outsb
cmpsl
cmc
mov
bound
icebp
fs
test
xor
enter
adc
jge
andb
lea
mov
xchg
sbb
inc
jne
mov
test
push
into
lea
cmp
and
adc
add
lds
test
fildll
jo
outsl
push
add
pop
mov
std
inc
or
sbb
or
and
jecxz
inc
xor
pop
mov
jo
add
or
mov
mov
cld
pop
mov
pop
loope
add
inc
cmp
sbb
mov
cmp
add
shrb
pop
sub
push
jne
adc
inc
or
jne
lods
cld
test
fadds
add
std
push
add
xor
faddl
adc
xchg
push
or
pop
les
adc
fisubrs
pushw
in
mov
callw
add
nop
jns
sbb
loop
mov
push
in
mov
jg
xor
cmpsl
nop
adc
inc
mov
leave
sti
inc
mov
adc
arpl
out
mov
add
add
inc
rorl
sub
mov
mov
xchg
iret
out
pop
add
flds
outsl
test
aaa
xchg
pop
movsl
inc
lea
inc
adc
arpl
add
pop
mov
and
cmc
clc
push
jne
aad
lock
mov
and
pop
xor
adc
sbb
lods
stos
insl
stos
mov
lds
mov
jno
pop
test
adcl
xchg
pusha
dec
mov
call
mov
lock
push
mov
std
jo
mov
adc
add
mov
add
add
pop
mov
push
or
inc
xchg
add
push
jo
adc
and
xchg
and
imul
gs
cmp
in
arpl
jle
std
fisttps
int
fnstsw
push
push
in
test
xor
mov
loope
movsl
call
xor
nop
into
mov
adc
or
sahf
divb
mov
xor
pop
pop
lods
add
jmp
jmp
or
xchg
jns
jae
mov
add
pop
test
inc
in
adc
notb
jb
dec
mov
pop
sbb
ljmp
mov
or
pop
push
xor
jo
shrb
mov
push
cltd
jl
or
jg
loopne
sub
pop
and
aas
add
insb
stos
fstl
xchg
call
mov
or
push
lods
lock
sub
iret
or
in
pop
xor
pop
jecxz
movsb
or
inc
std
fistps
aaa
loopne
adc
add
lea
sub
mov
cmp
mov
add
mov
out
mov
insb
test
out
add
jno
sti
lea
aad
mov
xor
mov
adc
cmc
pop
mov
lods
pop
push
inc
pop
nop
pop
roll
sub
out
push
mov
xor
mov
movsl
ss
or
sbb
add
in
bound
pop
lea
stos
cltd
mov
xor
mov
cmp
shrb
adc
lock
adc
mov
jmp
adc
and
cmp
or
adc
sbb
jecxz
adc
subl
clc
mov
hlt
jg
mov
xor
test
lock
ljmp
inc
adc
inc
mov
test
push
in
insl
clc
xchg
adc
addr16
das
push
ficoml
cmpsl
call
xor
adc
addb
sbb
adc
inc
loope
jmp
xor
out
xor
xor
lcall
outsb
inc
jns
sub
mov
data16
rcl
mov
nop
mov
cmp
mov
inc
sti
sbb
push
mov
push
mov
out
lea
or
mov
pop
dec
int
mov
add
xor
sbb
loopne
clc
add
inc
imul
pop
call
inc
adc
or
inc
outsl
cmp
add
xchg
sbb
add
inc
pop
divl
clc
mov
or
xchg
or
push
push
das
rorl
pop
jae
ss
or
nop
push
lods
dec
xchg
cli
xchg
loop
filds
fbld
mov
loopne
outsb
in
mov
jno
push
jo
mov
lret
lods
add
call
nop
xchg
or
gs
mov
xchg
jl
imul
sti
scas
stos
push
imul
jb
filds
mov
sub
in
mov
adc
rorb
mov
repz
rcr
push
in
stos
mov
inc
and
pop
push
mov
pushl
mov
or
push
mov
cmp
mov
outsb
push
js
adc
lock
add
push
sti
push
rcrb
ljmp
jo
mov
inc
mov
scas
sub
xor
add
or
lds
scas
and
add
jo
lods
add
jne
pop
enter
add
mov
insb
xor
inc
push
outsb
xchg
adc
push
and
call
mov
push
scas
pop
mov
push
fdivrs
or
add
cmpb
mov
mov
lods
pop
pop
or
hlt
pop
clc
adc
in
add
add
inc
mov
fildll
aas
mov
pop
add
stos
add
arpl
sbb
xor
add
insl
jnp
out
das
mov
sbb
pop
mov
andb
outsl
popa
push
jmp
adc
jle
mov
sbb
add
or
mov
lea
jge
mov
test
mov
and
ret
add
add
dec
cltd
es
mov
imul
fildl
shlb
mov
int
jl
test
sbb
and
pop
inc
or
or
test
xchg
sbb
lcall
in
test
outsl
sbb
test
mov
adc
push
sbb
in
mov
mov
out
lea
nop
imul
push
subl
stc
sbb
lea
push
pop
imul
sub
gs
mov
and
pop
adc
xchg
push
or
add
mov
insl
sbb
mov
push
push
xchg
pop
jle
divb
addb
scas
push
cwtl
cmc
add
add
jbe
push
xchg
repnz
lea
mov
sub
mov
jo
cmp
adc
cmp
add
and
inc
roll
jne
push
dec
das
or
rcr
outsb
mov
iret
pop
mov
cmp
aaa
jne
orb
mov
jne
test
cmp
pop
or
loopne
cmc
mov
sub
pop
shr
adc
push
adc
js
push
inc
lods
mov
xchg
loope
lea
dec
lahf
or
movsb
out
call
pop
into
sub
add
aad
stos
nop
adc
subb
inc
iret
jo
adc
pusha
dec
arpl
add
push
mov
add
and
shl
add
xchg
mov
push
adc
clc
mov
cmpsb
adcb
pop
repz
or
inc
lds
pop
or
fsts
jbe
pop
icebp
shrl
leave
jge
rorb
decb
out
add
out
in
jge
lcall
jmp
outsl
test
imul
sbb
pop
movsl
adc
mov
lea
aas
adcb
cvtdq2ps
push
mov
mov
mov
lcall
dec
fwait
rol
ficomps
xchg
aad
sbb
mov
inc
sub
out
inc
mov
push
add
jmp
outsl
or
or
sbb
loopne
mov
loope
xchg
pop
clc
es
push
or
rorl
outsb
dec
push
add
stos
ja
outsl
add
adc
iret
adc
shrl
add
hlt
and
out
xchg
add
decb
fsubrp
xchg
out
adc
add
aas
pusha
mov
movsl
cmp
inc
push
orl
or
jmp
sub
std
jg
out
xor
mov
loope
sbbb
sti
or
sarb
in
test
cmp
jg
jmp
push
pop
inc
jp
dec
push
mov
loope
cmc
cmp
adcb
addl
shrl
std
decl
or
int3
add
mov
pop
stc
add
cmp
arpl
lods
or
push
scas
add
pop
loop
dec
daa
rorl
jp
add
and
nop
es
in
sbb
shlb
dec
cli
mov
mov
and
loope
mov
outsb
cmpsb
add
int
mov
sarb
xor
add
lock
fwait
insl
andl
and
sub
shl
and
inc
sub
imul
mov
aad
lahf
pop
jg
das
ret
loop
insb
std
insb
mov
roll
call
sbb
add
sub
pushl
inc
mov
pusha
pop
inc
pop
hlt
and
das
cwtl
or
cli
adc
inc
sub
push
or
and
cltd
out
cmp
push
mov
adc
imull
test
xor
mov
pop
or
mov
xchg
andl
movsl
mov
movsl
mov
gs
orl
dec
in
push
das
jle
xchg
movl
add
add
dec
sti
xor
in
or
cltd
push
sbbb
add
inc
mov
bound
data16
ljmp
mov
adcl
xchg
lock
call
pop
sub
icebp
outsl
inc
inc
lea
mov
out
sub
data16
dec
jl
loopne
mov
jl
call
notb
out
pop
mov
xchg
and
xor
mov
inc
loop
pusha
loope
or
ret
inc
mov
pop
sbb
enter
add
in
fisubrl
test
add
add
inc
and
inc
stc
or
clc
mov
movsb
add
test
cs
and
and
fdivrs
movsb
addb
subl
sbb
inc
icebp
inc
jmp
pusha
sub
std
and
loope
into
or
or
push
sar
and
aaa
mov
pusha
add
pusha
push
pop
adc
mov
ljmp
jnp
mov
outsb
lock
cld
popl
in
add
jne
fst
and
mov
cld
and
dec
testl
fiadds
aam
lock
sbb
mov
add
loope
test
jge
lock
dec
jle
adc
mov
inc
popa
add
movsl
add
loopne
pusha
rclb
lods
adc
jg
or
mov
mov
iret
add
addl
pop
sbbb
nop
jl
out
adc
aad
mov
inc
das
add
sbb
mulb
mov
data16
adc
sti
push
fbstp
or
xchg
mov
pop
std
pop
xchg
pop
pushl
mov
xchg
movaps
adc
clc
push
clc
sbb
iret
cltd
mov
repnz
pop
subb
xor
std
test
ljmp
jns
int
outsl
hlt
or
xor
pop
inc
xor
repz
pop
jo
mov
add
outsb
dec
jmp
ljmp
mov
testb
lcall
adc
lea
std
xchg
test
jo
add
mov
inc
test
xor
ret
outsb
clc
rorl
daa
push
fsubs
and
pop
mov
add
inc
and
in
pushf
mov
pop
loop
mov
sti
das
icebp
push
je
or
xchg
shl
ret
add
add
mov
push
mov
not
out
jecxz
sub
or
mov
or
jo
mov
or
pop
aaa
cld
cmp
fnstsw
shll
sbb
leave
sub
mov
and
or
aaa
fimull
test
cmc
insb
push
sub
insb
cld
add
jo
mov
adc
jo
adc
addl
pushf
xchg
jecxz
xor
cmc
mov
pop
imul
dec
in
adc
nop
out
sbb
jl
lahf
xor
jge
jl
popf
push
push
inc
int3
rolb
pop
cld
inc
icebp
stos
adcb
in
mov
pop
xchg
popa
cmp
and
or
loop
lcall
xorl
sbbb
mov
ret
sbb
sbb
xchg
ljmp
fmul
nop
vrsqrtss
jle
xchg
inc
mov
add
cs
pop
cli
push
sub
cltd
cs
cmpsl
fidivs
cltd
sub
je
andb
out
fsubs
lea
mov
xchg
leave
pop
cli
or
mov
and
pop
mov
mov
or
mov
sub
es
push
push
add
imul
mov
jno
cmp
inc
and
mov
jo
sub
push
mov
mov
mov
stos
les
daa
and
outsl
dec
dec
lret
std
or
daa
movb
pop
mov
push
xchg
outsb
xchg
mov
cld
or
cmp
loopne
inc
stos
sbb
add
xorb
stos
jg
push
call
dec
or
jecxz
lea
addl
mov
mov
cmp
subb
or
mov
pop
out
inc
xor
sbb
inc
add
sub
addb
sub
push
xchg
lods
scas
outsb
mov
ror
mov
pop
shlb
sarb
lds
xchg
mov
and
pop
in
xchg
mov
or
sti
sbb
dec
and
add
xor
adc
in
andl
xchg
shlb
fisttpll
das
stos
mul
xor
das
repz
or
or
mov
add
insb
add
sbb
pop
and
mov
or
pop
popa
sub
or
outsl
shl
pusha
pop
adc
mov
loope
mov
add
mov
movsl
lea
or
jp
or
scas
in
jo
dec
mov
mov
mov
addb
pop
cmp
cs
aam
aam
aaa
mov
fwait
add
add
pushf
xchg
cmp
push
jl
nop
inc
add
cmp
cli
fildl
fstl
ret
add
outsl
outsl
ret
or
push
sbb
adc
std
push
lea
ljmp
lods
and
push
aad
and
icebp
xchg
mov
pop
sahf
cmp
scas
out
pop
mov
or
mov
sbb
xor
movsl
outsb
lods
mov
inc
add
pushf
push
loop
bound
mov
inc
out
outsb
in
push
sub
es
data16
add
and
push
fwait
adc
rclb
lods
cmpb
xor
ja
or
cld
add
movsb
adc
inc
jecxz
or
ss
ss
mov
in
popa
lock
mov
shl
adc
or
in
inc
or
inc
jecxz
add
cwtl
add
outsl
js
shr
fdivp
mov
and
insl
loope
add
and
and
push
sub
cs
jecxz
outsl
pop
pop
filds
push
push
stos
mov
outsb
sbb
hlt
pop
outsb
mov
mov
mov
add
or
xlat
pop
fwait
loope
adc
push
iret
adc
test
movsl
jmp
into
adc
cld
add
cltd
or
outsl
jg
stc
and
sti
sbb
push
lock
push
lock
hlt
outsl
jecxz
sbb
insl
push
add
xor
or
incl
cmp
leave
cli
add
xchg
mov
loop
or
shrl
mov
or
sub
mov
je
sub
ljmp
or
add
fildll
bound
int3
nop
xchg
push
jne
add
lods
jo
in
add
mov
add
lcall
fbld
fsubs
or
cmpsl
sbbl
ljmp
push
pop
inc
adc
dec
pushf
mov
inc
mov
inc
movsl
mov
adc
js
fldt
das
stos
jecxz
and
adc
fistl
push
xor
mov
xor
or
outsl
mov
or
arpl
sbb
pop
dec
arpl
mov
jnp
jge
mov
rorl
inc
pop
pop
jns
lds
test
in
insl
adc
sbb
jecxz
mov
fstp
mov
adc
or
jb
mov
add
adcl
mov
push
icebp
mov
loopne
pop
in
add
and
sbb
jo
inc
shll
xchg
cmc
cs
cmc
push
or
movsb
ja
jne
add
mov
inc
stc
mov
ret
push
adc
add
icebp
or
arpl
pop
push
loope
mov
add
out
fimuls
adc
outsb
mov
data16
push
or
fs
jg
jnp
sbb
add
int
icebp
icebp
data16
lds
das
cld
jbe
adc
ljmp
inc
cmp
int
pusha
push
pop
out
add
inc
lods
das
insb
daa
push
fld
cltd
inc
cmp
mov
stos
mov
pop
addb
push
jp
mov
into
mov
icebp
push
stos
cmp
or
add
push
hlt
mov
das
mov
and
dec
fidivs
push
add
daa
cmpb
and
in
mov
daa
inc
mov
xorb
xchg
in
mov
stos
xlat
test
lods
sbbb
mov
cmpb
cmpl
add
add
and
lods
pop
gs
fidivrl
std
lea
out
in
adcb
xchg
mov
mov
fcomps
mov
test
adc
outsb
cs
adc
sbb
pop
outsb
shlb
insb
mov
cmp
inc
imul
inc
arpl
pop
sbb
popa
repnz
cmpsl
loope
outsb
das
adc
jmp
and
adc
pop
out
xchg
xlat
inc
inc
mov
arpl
in
cmpsb
mov
and
inc
das
mov
mov
addb
arpl
sub
clts
arpl
dec
hlt
ljmp
fbld
daa
add
sub
das
jl
push
cmc
nop
cltd
sbb
popa
aaa
xorb
bound
inc
movl
add
and
outsb
imul
into
movsb
pop
sbb
xchg
push
or
stc
and
adc
jle
rolb
mov
mov
or
add
pop
fidivs
and
fldl
or
cltd
cmc
rcl
pop
adc
push
icebp
pop
xchg
mov
xor
or
sarb
call
cs
test
fsubl
lcall
nop
sub
and
sub
sbb
clc
xchg
fsubrl
lods
fiadds
sahf
ljmp
mov
sbb
mov
jl
adc
lcall
jge
aaa
dec
std
or
cwtl
jno
sarb
das
sub
lods
popf
and
and
addb
es
cmpb
fmuls
pop
arpl
and
xchg
or
sub
or
mov
adc
mov
adc
adc
movsl
inc
dec
mov
adc
test
mov
push
sbb
fsts
rol
adc
js
or
and
pop
ja
add
adc
fsubs
jnp
mov
imul
pop
add
sub
mov
sbb
es
into
cmp
ljmp
mov
mov
xchg
ds
add
or
inc
or
stos
jg
adc
sbb
mov
pusha
mov
bound
cmp
test
mov
popf
sbb
adc
push
push
inc
and
or
ret
and
loopne
jne
add
add
fisubrl
xchg
inc
addb
insl
mov
dec
inc
push
insl
les
push
push
mov
mov
adc
mov
insl
sbb
adc
jecxz
lret
mov
mov
push
inc
mov
sar
ds
mov
aas
jmp
jp
xchg
mov
gs
loop
mov
loopne
loopne
mov
or
outsb
mov
jge
cmpsl
jl
loopne
fidivrs
or
jmp
out
jp
and
pop
data16
sbb
clc
and
std
inc
adc
imul
dec
jg
repnz
stc
inc
pushf
add
icebp
pusha
push
test
movsl
mov
pusha
int
call
or
jmp
nop
mov
fadds
stos
fsubrs
sbb
sub
add
repz
pusha
inc
jecxz
mov
lods
aaa
mov
out
lahf
out
jb
xchg
jecxz
mov
movsb
mov
adc
mov
int
xchg
add
xchg
add
inc
sub
or
mov
inc
mov
into
mov
xchg
cmc
xor
outsl
jno
and
loope
in
loope
or
in
jbe
ss
in
cmc
sbb
int
loopne
and
mov
adc
or
add
or
pop
mov
dec
adc
in
sub
jle
add
lods
or
sub
mov
mov
dec
in
inc
orb
xchg
xchg
push
mov
adc
notb
jno
lods
sbb
push
outsl
das
dec
or
jecxz
dec
inc
xchg
scas
pusha
loope
sarl
dec
fcmovnu
sbb
xchg
dec
add
adc
inc
stos
add
cld
outsl
shlb
test
and
mov
mov
mov
mov
outsl
mov
add
xchg
lock
xor
and
adc
sbb
rorb
arpl
repnz
and
jo
outsl
fsts
pop
sub
stc
xorl
mov
jle
pop
push
xchg
mov
push
add
cmc
lods
mov
push
vmovss
inc
arpl
loopne
inc
pop
stos
pop
pop
mov
mov
lcall
push
enter
sub
movb
icebp
subl
leave
jmp
push
pop
xchg
jmp
mov
in
mov
sbb
in
das
mov
ret
arpl
sbb
mov
mov
push
bound
inc
mov
xchg
fst
pop
ljmp
loop
fnsave
out
dec
insb
rolb
rcrl
out
shr
add
push
loope
cmpsb
in
jo
push
pusha
mov
ja
pop
aad
in
push
mov
inc
add
add
neg
incl
movb
roll
int3
inc
push
rcrb
mov
testb
rorl
add
add
fildll
mov
addr16
ss
fistl
repz
or
rolb
loop
test
push
adc
aam
rol
xor
orb
mov
nop
enter
push
mov
dec
or
sti
loopne
aaa
rorl
pop
sbb
mov
add
icebp
adc
ss
push
movsl
pop
pop
pop
sub
push
push
inc
out
nop
loope
pop
shll
push
pop
xchg
xchg
cmpsb
sbb
sbb
pop
clc
sbb
test
push
in
or
jo
fildll
in
xchg
call
or
movsl
or
push
and
adc
test
inc
cmc
cs
and
mov
out
enter
sub
pop
insb
cwtl
pop
dec
in
add
fisubs
mov
fistpll
loop
mov
outsb
daa
add
loopne
push
cli
adc
cmc
xlat
dec
nop
jecxz
cli
decl
xor
and
aaa
test
stc
repz
outsb
mov
push
xor
or
push
push
orb
dec
mov
stc
and
or
add
or
pop
jne
adcb
movsb
insb
stos
mov
shrb
xchg
or
icebp
fistpll
xchg
xor
or
cmpsb
adc
shr
loope
in
add
add
imul
pop
rolb
add
in
or
hlt
add
push
sub
test
adc
inc
adc
das
clc
outsl
xchg
mov
push
jp
push
scas
mov
les
dec
add
popa
cld
mov
arpl
or
imul
jmp
push
xchg
repz
vandnps
loopne
add
int3
xchg
bound
add
dec
test
push
sub
sti
in
pop
int3
or
inc
aas
cmp
xorb
aas
fiadds
cs
mov
or
push
test
pop
nop
push
pop
push
mov
aaa
fisubl
enter
sbb
mov
dec
nop
push
inc
sub
scas
mov
pop
lock
adc
sub
addr16
shlb
xchg
arpl
js
pop
popa
mov
dec
mov
outsl
decl
push
add
pop
aad
add
pop
mov
dec
aam
iret
test
divb
add
int
test
xchg
pop
add
pop
push
mov
or
fildl
or
xor
or
mov
pop
lock
ss
push
sbb
pop
adc
imul
test
pop
int
inc
insl
dec
sub
add
test
pop
and
mov
fistl
and
faddl
mulb
scas
push
sub
lods
popf
loop
sub
pop
outsb
loope
sbb
loope
sbb
mov
jecxz
jmp
lods
sbb
loop
test
mov
sbb
scas
xchg
or
test
bound
mov
mov
ffree
decl
inc
adc
fbld
add
and
push
mov
xchg
ficoms
inc
jae
arpl
lcall
mov
loopne
ror
lods
pop
lock
mov
pop
frstor
jl
and
nop
fstp
loop
cld
inc
add
adc
pop
mov
das
cltd
push
mov
in
lret
inc
jp
sbb
ljmp
or
bound
jo
out
adc
mov
add
outsb
xor
pusha
jmp
repnz
rorb
negl
incl
pusha
push
out
shll
shll
add
shrl
dec
lock
ret
int3
push
incl
xchg
mov
stos
jo
outsl
adc
call
adc
add
adc
movsl
mov
ljmp
stos
push
je
ret
sbb
cltd
mov
jmp
andl
adc
leave
roll
push
stc
test
inc
mov
loop
ss
mov
jo
outsl
push
outsl
loope
cmpsb
popa
and
pop
mov
fcompl
push
jle
int
mov
adcb
and
arpl
jo
lods
push
popa
jo
andb
add
movsb
xor
imul
cmpsb
fst
push
pop
dec
sbb
adc
insl
shlb
adc
or
mov
icebp
out
icebp
add
aam
outsl
inc
pop
add
push
pushf
add
add
out
xchg
subl
push
sub
out
adc
jne
add
out
mov
push
mov
push
xor
movsl
xchg
xchg
mov
dec
xor
icebp
scas
test
add
adc
ret
xchg
insb
stos
test
shrb
das
xchg
sbbl
add
cmp
insb
sub
into
aas
push
add
add
loope
inc
notl
hlt
push
insb
mov
orb
call
lods
sbb
addl
cmpsb
faddl
cld
notb
jg
sbb
mov
or
inc
pusha
scas
add
sbbb
inc
cld
sbb
and
test
add
fdivl
push
mov
jmp
cltd
mov
sub
por
pop
mov
outsl
aam
pop
push
rclb
and
inc
fisubl
inc
dec
insl
push
das
pop
pop
ret
gs
je
stos
scas
mov
stc
pop
mov
adc
adc
aaa
or
scas
dec
inc
ss
sbbb
decl
rorl
data16
ljmp
lcall
test
xor
les
sbb
cmp
push
xor
xor
lock
decl
xor
push
xor
xor
adc
xor
cld
inc
fldt
or
insl
adc
inc
cs
add
fisubrl
cld
das
dec
cmpsb
or
lcall
cmpb
fucomp
out
jmp
sub
inc
xchg
xlat
xor
push
lsl
lcall
push
adc
aas
or
pextrw
push
inc
movsb
mov
icebp
incl
jg
mov
xchg
mov
cli
ljmp
fdivp
inc
addr16
ret
push
dec
popa
cltd
adc
push
sbb
addr16
mov
test
pop
cmp
int3
push
xchg
fists
stos
subb
dec
shlb
outsl
mov
xchg
push
sbb
xlat
push
fisubs
and
scas
dec
rclb
mov
das
loopne
das
hlt
jg
cmp
dec
dec
addb
xchg
ret
cmp
push
push
fildll
cli
pusha
and
iret
push
cltd
push
jno
sbb
or
clc
or
add
movsl
add
std
imul
loopne
add
in
inc
pop
insl
sub
jae
clc
ret
das
cwtl
dec
or
jecxz
imul
and
add
pushf
std
add
sbb
pusha
cltd
sbb
in
test
outsb
nop
adc
mov
jecxz
sbb
enter
dec
jbe
jg
test
ds
lahf
push
loopne
xchg
sbb
movsl
dec
das
push
jne
xchg
inc
and
sarb
movsb
add
jno
push
imul
mov
cs
roll
aaa
ljmp
ljmp
sbb
and
daa
push
ss
inc
jne
lods
adc
ret
fisubs
mov
test
or
stc
pusha
nop
xchg
std
push
sti
lds
roll
aam
and
in
sbb
ret
movsb
sub
loop
jmp
mov
ja
nop
lock
in
int
outsl
scas
fistpl
mov
and
into
inc
add
jmp
jp
cmp
and
mov
xor
or
out
out
or
hlt
roll
test
pop
loopne
pop
push
inc
cli
mov
push
in
jg
xchg
adc
ljmp
fwait
hlt
popw
mov
pop
jle
fs
pop
int3
mov
test
xchg
and
outsl
adc
adc
orl
or
jno
nop
or
cmpsb
push
add
or
adc
movsl
cmp
or
lds
incl
pop
inc
popa
cmp
call
adc
or
or
mov
lcall
and
or
test
pop
pusha
sub
ret
adcl
pop
pop
push
inc
jmp
xchg
push
pop
testb
cltd
push
adc
ljmp
dec
sbb
popa
insb
push
xor
or
cmp
imul
imul
xchg
mov
mov
add
scas
shrb
cmpsl
jo
mov
clc
mov
xor
pop
shrl
cmpsb
gs
pop
call
in
mov
cmp
mov
repz
jmp
adc
insb
or
mov
add
push
jmp
jnp
rolb
and
icebp
and
sub
cltd
inc
pop
mov
fnstsw
outsl
repnz
pusha
lds
inc
leave
inc
add
jno
and
ljmp
mov
in
pop
int
adc
fmull
loop
pushf
adc
loopne
add
push
sbb
mov
lock
xchg
mov
data16
jmp
ss
aaa
sbb
xchg
and
aaa
nop
mov
add
add
sbb
adc
shlb
ss
rcll
ss
sub
shrb
pop
xchg
clc
mov
xchg
xchg
daa
add
push
jo
pop
pop
int3
xchg
lods
fistpll
xchg
push
cmp
cmp
push
pop
dec
call
xchg
push
movsb
xor
daa
andl
decl
push
les
stc
data16
nop
popa
push
in
xorl
mov
push
or
or
adc
lea
fsub
xor
push
adc
mov
scas
mov
jl
div
add
cmpsl
or
cmpsb
movsl
sub
outsl
outsl
inc
jl
add
adc
inc
add
cmp
or
mov
sbb
sbb
loope
mov
push
clc
mov
cs
pushf
fwait
or
int
jmp
sub
pop
jbe
cmp
bound
ss
inc
xor
jno
cmpb
lods
roll
mov
roll
outsb
pop
xor
sub
loope
imul
push
add
jno
fsubrs
lods
mov
aaa
mov
insb
ja
mov
stos
adc
push
add
mov
sbb
mov
sub
add
adc
idiv
mov
xor
insl
and
sbb
mov
iret
mov
ss
loopne
and
insl
pop
pop
dec
push
outsl
iret
mov
fbld
add
jno
arpl
sahf
mov
pop
xchg
xchg
mov
mov
loopne
xchg
outsl
std
incl
push
push
push
ljmp
pop
pusha
mov
cs
jbe
sub
out
cmpb
jp
adc
sub
stos
icebp
outsl
insl
std
xchg
jbe
xor
test
cltd
in
lahf
jno
push
stos
inc
inc
icebp
fistl
or
push
lods
xor
mov
xor
ljmp
ljmp
sbb
mov
shll
gs
mov
fisubl
adc
es
loope
sbb
imul
sbb
inc
add
imul
fcmovnb
add
jns
mov
jmp
das
adc
out
rclb
inc
push
jbe
sbb
push
into
push
mov
nop
add
inc
mov
movsb
mov
bound
sarb
les
cs
rolb
loope
jecxz
js
sbb
and
cmpsl
sbb
inc
mov
ja
add
adc
xor
mov
lods
add
es
shlb
jg
sar
xlat
insl
mov
or
out
adc
xor
outsl
push
and
rorb
nop
clc
sbb
sti
iret
mov
in
add
out
insb
mov
push
test
mov
pop
jns
pop
cmc
mov
lods
mov
pop
cld
movsl
adc
xchg
lahf
adc
mov
lret
test
nop
incl
push
or
push
jecxz
iret
add
add
add
xor
and
pop
pop
clc
pop
std
in
roll
ret
js
movsl
or
pop
mov
jg
jbe
movq
sbb
add
mov
fs
xor
and
jg
lods
daa
lcall
adc
mov
push
xor
lods
lock
lock
dec
mov
add
inc
scas
jmp
movb
jne
stos
jg
insb
or
out
fwait
add
sarl
xchg
sub
lds
mov
mov
add
add
cli
test
add
fs
sti
add
scas
push
ljmp
pop
in
andb
test
push
xchg
test
movsl
inc
sub
mov
inc
rolb
insb
loopne
lds
pop
mov
loope
cmc
into
lods
aam
mov
loope
cmp
inc
faddl
sbb
or
cs
filds
xchg
inc
add
inc
jecxz
add
lods
and
or
mov
mov
roll
and
addr16
stc
mov
mov
daa
sbbl
mov
out
add
orl
cmp
adc
pop
test
push
sub
mov
sbb
push
loop
mov
jmp
insb
flds
hlt
addl
inc
adcl
adc
sbb
cmpb
das
mov
sub
scas
mov
dec
and
loopne
adc
pop
sub
mov
fmul
mov
dec
add
outsb
arpl
sub
adc
xchg
jle
insb
shrb
outsb
inc
add
insb
mov
sbb
pop
ljmp
addr16
mov
adc
inc
insl
rorb
xchg
int3
inc
cmpsb
andl
push
xchg
pop
sub
inc
xor
fistpl
lea
out
movsl
loope
ds
fiaddl
jno
insb
inc
test
loop
mov
mov
cmp
stos
sbb
out
or
adc
or
mov
push
mov
or
cmp
loop
pop
dec
shrl
push
inc
sbb
lock
adc
adc
lods
rep
subb
test
push
test
sbb
hlt
js
mov
sbb
cmpsb
movsb
dec
xorl
das
icebp
fistpll
out
lds
std
dec
jo
cmp
stos
incl
cs
icebp
movsl
subl
fcmovnbe
add
sub
fs
loop
bound
mov
mov
shll
add
orb
jp
inc
inc
and
sub
jae
cmpl
add
cmp
decl
cmpsl
shrl
push
lock
cmp
adc
push
xchg
test
sbb
jecxz
ret
call
xchg
mov
sub
or
fs
invd
or
inc
jge
mov
mov
add
inc
js
sub
sbb
push
mov
dec
aad
xor
movsl
lret
aas
add
add
pop
add
add
icebp
andb
lods
outsl
rcll
pop
jmp
add
inc
push
jmp
loopne
mov
xor
jmp
or
xchg
add
orl
inc
push
add
add
xchg
std
mov
mov
xor
mov
push
pusha
and
mov
inc
jno
cmc
aaa
jecxz
or
or
addl
cld
push
outsl
movb
aaa
frstpm(287
inc
xor
adc
icebp
push
addb
add
outsl
mov
cmp
movsl
lret
sbb
ret
and
add
or
push
mov
add
add
rolb
or
add
sar
add
add
and
cmp
xorb
out
test
shlb
ficoml
push
xchg
int
dec
aam
or
add
cli
das
rorb
add
rclb
and
sti
outsl
fistpl
push
and
test
scas
shll
sbb
add
fldt
and
mov
pop
or
sub
or
add
add
insb
movsl
adc
dec
mov
lds
mov
lret
jbe
js
cs
add
xchg
pop
sbb
jl
ja
adcb
dec
cmp
in
das
pop
dec
and
int
or
add
orl
cmpsb
mov
inc
mov
pop
or
test
mov
inc
push
or
fnstcw
pop
push
sbb
leave
inc
push
mov
lods
sbb
jb
loop
and
fildll
inc
sbb
cmp
or
or
dec
orb
xchg
movsl
jno
inc
outsb
ds
add
push
clc
add
or
push
jl
dec
inc
jmp
inc
repnz
pop
mov
scas
mov
hlt
das
pop
lret
inc
push
outsl
out
mov
cmp
xor
call
sbb
inc
flds
sbb
data16
cmpsb
loopne
sub
bound
xor
out
or
jbe
mov
inc
das
inc
and
add
fdivrs
fcomp
add
lock
push
dec
inc
xor
push
add
adc
push
dec
jg
out
xchg
loopne
cmpsb
sub
xor
mov
mov
fadds
dec
sub
cmpsb
stos
push
mov
add
sub
dec
mov
xorl
dec
arpl
mov
pop
imul
addr16
outsl
movsl
lock
or
mov
fbld
inc
test
movl
adc
cmc
push
inc
adc
outsl
push
sahf
add
push
outsl
dec
xor
xor
mov
loope
loopne
cli
push
out
push
add
add
jne
pop
xlat
push
and
pop
and
adc
adc
mov
and
in
sub
add
add
add
outsb
cli
add
mov
clc
push
das
pop
ja
xchg
mov
call
and
imul
outsl
lret
nop
sub
ljmp
xor
sub
or
gs
jmp
mov
mov
push
lock
in
in
fucomip
jb
add
xor
aaa
movsl
pop
sub
or
movsl
mov
mov
add
adc
add
push
add
push
stc
cmp
mov
adcl
xor
pop
jbe
mov
mov
les
mov
popf
xchg
pop
shlb
or
inc
jae
ds
call
cmp
adc
or
in
test
jmp
loope
add
rorl
lods
push
roll
lods
rcll
xchg
add
push
and
fisttps
adc
or
int3
iret
into
loopne
mov
cmpsl
lret
sub
addr16
push
inc
ss
add
push
add
cmp
lahf
mov
jne
xor
outsb
fstps
loope
mov
pusha
lock
das
sbbb
rclb
ljmp
pop
and
cs
int
mov
mov
addb
cs
xor
xchg
fisubrl
mov
xor
fmull
cltd
iret
inc
push
add
push
outsb
data16
add
pop
cmp
sub
inc
add
addl
sub
cmpl
imul
add
jne
sbb
mov
sbb
icebp
adc
sbb
out
pop
mov
movsl
fistps
lods
div
cmp
insl
and
add
sub
adc
mov
addl
pop
xor
pusha
fwait
xchg
fdivs
jbe
jo
test
aaa
fisubs
insl
push
rol
stc
cwtl
or
outsl
es
inc
adc
adc
lods
push
cs
and
pop
pusha
mov
ljmp
rorl
push
call
push
insl
insl
pop
pop
rcrb
sub
fldenv
cld
lea
pusha
and
mov
add
outsl
jmp
push
and
test
and
outsb
push
loop
stos
insb
sahf
or
and
mov
add
jge
inc
add
insl
or
or
ds
or
sub
cmpsl
add
sub
das
aam
shl
das
cmc
pushl
mov
add
and
xchg
inc
xor
or
or
or
mov
jae
clc
insb
mov
mov
add
roll
lea
es
or
gs
test
push
out
xchg
add
pop
rcrl
mov
mov
push
loop
and
nop
das
jg
sti
and
insb
inc
mov
movsl
inc
and
sbb
cmpsb
mov
mov
add
jle
mov
cltd
sahf
or
xchg
fdivr
mov
mov
test
xchg
clc
or
mov
inc
lock
jge
push
icebp
rolb
xchg
out
xchg
fistps
jg
push
add
mov
mov
nop
loopne
in
test
es
or
andb
sbb
and
lds
mov
mov
lea
and
movsl
or
dec
sbb
das
cld
and
and
jo
mov
call
and
fstpt
fsubrs
fwait
lret
pusha
sbb
add
sub
or
mov
mov
xor
call
and
push
cld
aaa
shrl
addr16
and
add
cwtl
jns
call
pop
mov
shl
sbb
cwtl
stc
add
imul
mov
out
test
sbb
sbb
into
pop
adcl
jmp
rcll
push
stos
cltd
lret
push
sbb
mov
clc
out
sub
mov
jmp
add
pop
test
or
push
les
adc
loope
adc
sub
adc
ret
mul
inc
aas
pop
aad
push
shll
sbb
sar
das
in
stc
fwait
rclb
or
icebp
sbb
adc
mov
shr
or
push
xor
cmpsl
insb
adc
dec
je
in
hlt
pop
mov
xchg
adc
cwtl
push
sti
ret
nop
enter
cmp
rolb
mov
test
in
enter
arpl
outsl
in
xchg
push
rorl
sbb
std
fistl
mov
fldenv
fdivr
ljmp
push
xchg
xchg
pop
pop
or
jno
adc
ret
adc
inc
andl
mov
inc
repz
adc
bound
jmp
lea
lods
cwtl
out
sbb
push
dec
lcall
in
out
lea
fisubrs
rclb
fildl
sbb
cld
inc
hlt
pop
cld
lods
inc
bndldx
sbb
fneni(8087
ss
loopne
cmp
adc
lods
into
loop
idiv
test
ficomps
fbstp
repz
sbb
pop
add
jl
adc
mul
inc
mov
add
cwtl
imul
sub
into
fdivr
cmp
mov
cltd
cmpsb
clc
hlt
add
bound
in
pop
mov
pop
add
fistps
loope
ficomps
or
pop
jo
adc
test
or
pop
adc
xor
or
fcomp
pusha
stc
or
jo
inc
call
imul
sub
arpl
ja
das
xchg
lea
or
mov
add
ret
add
test
sbb
push
mov
sbb
flds
adc
mov
in
dec
mov
adc
iret
addb
mov
sti
inc
pop
fiadds
xchg
shlb
lods
xor
push
add
and
cmc
nop
or
xlat
icebp
adc
ja
fstpl
add
filds
call
push
jmp
and
xchg
or
out
nop
test
ja
mov
and
lea
jns
aam
aad
add
xlat
lock
mov
mov
add
insb
cmc
mov
xchg
inc
and
xchg
stc
loope
lea
inc
sbb
in
sub
insl
movsl
push
adc
sbb
cmc
jg
or
sub
orl
inc
imul
lods
orl
cmp
dec
mov
fcomp
movsl
popa
flds
add
std
jno
dec
inc
sub
nop
mov
mov
xorb
add
in
inc
add
or
fcompl
stos
movsl
adc
cmp
outsl
loopne
or
sbb
sub
fsub
add
pop
ljmp
ljmp
hlt
fwait
inc
ja
in
hlt
cmpb
and
pop
cwtl
jne
lods
mov
push
pop
enter
xchg
mov
cmp
or
scas
addb
add
iret
ds
adcl
pop
shll
loope
pusha
in
ret
pop
out
andb
mov
mov
bound
fildll
xchg
rorb
mov
lcall
arpl
rcll
nop
sub
pop
clc
pop
test
testl
add
mov
rorb
pop
daa
andb
xor
mov
hlt
add
fdivr
pop
insb
push
jmp
cmp
leave
ss
test
adc
xor
jne
movsl
fs
xchg
in
and
sub
add
push
stc
adc
imul
test
pop
mov
out
outsb
push
xchg
or
mov
data16
or
js
sbb
outsb
xchg
stc
fcompl
cmpsl
popf
or
cltd
out
push
sbb
scas
dec
roll
insb
sbb
sub
add
dec
pop
outsl
roll
out
mov
fbld
lea
inc
add
push
cmpb
and
add
mov
jne
mov
cmpsl
and
test
mov
jno
mov
jne
lock
std
data16
mov
mov
adcb
popf
testb
adc
add
xlat
ror
into
pop
fisttpll
mov
push
sbb
out
in
mov
subl
mov
ficompl
orl
add
das
push
mov
shrl
in
sub
mov
or
or
mov
inc
pop
add
lea
lret
xchg
repnz
mov
mov
push
popa
jecxz
and
jnp
sbb
push
pop
andb
jecxz
sub
xchg
mov
pusha
dec
out
cmpsl
ljmp
loop
and
shrb
dec
std
pusha
xor
icebp
or
loope
cmp
in
or
inc
rol
pop
lds
dec
stos
sub
sbb
ret
aam
pop
push
adcb
out
mov
mov
inc
push
shr
push
jns
mov
xchg
jg
mov
push
cltd
or
sub
push
push
ljmp
int
and
outsl
adc
mov
inc
sbb
jl
add
addr16
pop
int
mov
fmulp
shll
ret
int
popa
mov
adc
add
sbb
inc
fstpt
mov
push
mov
in
cmp
dec
loope
sar
outsl
std
aaa
mov
mov
loope
loopne
and
pusha
add
mov
cmc
sbb
add
rcrb
shlb
rcrb
lods
sub
jecxz
or
sub
loope
rol
enter
fnsave
adc
push
adc
dec
test
add
outsl
add
mov
in
or
sahf
mov
jno
cmc
lods
das
xchg
push
cltd
outsb
nop
xchg
in
lds
or
insl
subl
scas
lea
inc
or
mov
fcompl
cmc
mov
mov
or
or
hlt
aaa
cmc
xchg
jae
mov
loope
aam
inc
add
xchg
sub
loope
and
test
add
flds
and
popf
sbb
lods
stos
aaa
push
loopne
push
stos
shrb
mov
sub
mov
gs
jle
push
movsl
cwtl
and
sub
sub
sub
std
push
and
inc
sub
outsl
inc
add
lods
xor
call
cmp
in
lea
das
mov
lea
fnstenv
and
dec
insb
imul
repnz
lea
adc
or
orb
mov
mov
inc
and
dec
inc
insb
or
jmp
pop
in
fcmovnb
outsl
test
enter
mov
adc
mov
outsb
mov
inc
fiaddl
fldl
inc
or
movsb
mov
test
cmp
add
sbb
daa
out
add
or
fimuls
mov
add
adc
mov
faddl
sbb
out
mov
icebp
push
add
mov
push
mov
ret
adc
sub
xchg
subl
fbld
shr
mov
or
in
outsl
decl
sbb
or
and
mov
orb
std
xor
and
popa
adc
or
pop
dec
inc
stos
subb
dec
jg
push
test
pop
ret
lea
aam
clc
popa
sbb
pop
jo
push
and
mov
les
inc
inc
insl
sbb
sub
and
dec
inc
and
outsb
in
mov
push
loop
pop
jg
inc
lret
pusha
or
add
sarl
inc
shl
xchg
int
movsb
std
inc
mov
pop
fdivr
add
adc
add
andb
push
or
mov
mov
or
andb
adc
faddl
jne
leave
loope
aad
popa
dec
pop
das
push
inc
sbb
fldcw
sbb
add
mov
out
and
adc
ficompl
mov
ds
movsl
mov
cmc
aaa
add
jo
hlt
movsl
xor
fisttpl
inc
faddl
mov
mov
les
push
in
outsl
mov
cmc
aad
movsb
jl
test
push
popf
addr16
mov
mov
xchg
and
js
add
les
and
popa
mov
mov
adc
test
fstp
inc
or
sbb
popf
rcrb
rcrb
test
in
jo
cmc
or
sbb
pop
ljmp
dec
roll
je
loopne
adc
sbb
and
jnp
icebp
sub
pop
xchg
rolb
and
xor
jno
mov
cmpb
inc
adc
lock
cs
fsubr
outsl
cmp
add
icebp
das
add
inc
cmp
dec
or
cmc
movsl
test
pop
sub
das
mov
mov
xlat
xchg
mov
adc
roll
cmc
or
and
and
push
xchg
in
xor
inc
or
mov
test
dec
xchg
lods
cltd
xchg
adc
push
mov
add
decl
and
mov
push
insl
in
fildll
and
mov
xor
dec
fisttpl
mov
inc
add
gs
std
push
fdivl
popl
push
inc
mov
incl
rolb
jle
scas
rolb
cmc
fldenv
loopne
sbb
cmp
pop
sub
inc
adc
mov
dec
fsubrs
mov
in
fisubl
inc
inc
mov
cmc
adc
int
sarl
jg
push
stc
outsl
xchg
cli
inc
and
rcll
add
das
pushl
push
cmp
xchg
mov
dec
frstor
insb
adc
outsl
lods
les
add
push
push
pop
cmc
jb
insl
inc
mov
push
dec
xchg
icebp
dec
stos
sbbb
pusha
adc
inc
repz
insl
push
fdivs
mov
or
cld
test
add
add
rorb
inc
rcrl
jp
and
insl
sub
fstl
sub
ljmp
ret
or
or
push
sbb
push
test
in
mov
push
push
push
fildl
sub
movsl
nop
and
mov
cmpsl
scas
subb
decb
shl
inc
pop
or
movsl
push
sti
gs
dec
call
es
add
repnz
mov
movsl
mov
aaa
jle
sub
lock
outsb
xor
cmpsb
loopne
mov
gs
jmp
adc
nop
jnp
movsb
lea
adc
mov
and
push
cli
les
cli
pop
test
sbb
in
mov
clc
mov
mov
mov
add
add
and
sub
es
add
xor
mov
jmp
test
clc
mov
xorb
or
sbb
add
mov
call
xor
sbb
nop
nop
das
insl
loopne
or
sbb
add
add
in
outsl
push
fisubrl
xchg
fcomip
add
mov
lods
negb
addb
dec
adc
ret
add
push
sub
mov
add
push
jl
loopne
shlb
nop
dec
push
aas
push
sbb
lods
fld
es
push
loop
pop
xorb
test
mov
push
lea
jecxz
sbbl
int
add
ljmp
in
push
lds
les
sub
xor
xchg
les
or
inc
lock
scas
outsb
cltd
out
mov
mov
xchg
sub
rcl
mov
push
push
xor
shlb
sub
mov
add
sahf
test
adc
enter
cmp
movsl
or
sbb
mov
inc
aaa
inc
fisttps
lcall
rolb
adc
outsl
mov
int
or
outsb
jecxz
or
pop
cmp
dec
fnstsw
mov
xor
popa
xlat
in
paddd
or
mov
mov
mov
mov
cli
fcmovnbe
mov
sub
movsl
mov
jp
mov
sarb
incl
pop
mov
nop
clc
mov
sbb
mov
add
insb
test
inc
icebp
mov
inc
ret
sbb
dec
mov
mov
or
mov
add
or
shll
push
sar
loop
pop
insb
jne
shlb
sbbw
ret
and
mov
data16
push
mov
mov
xchg
adc
fistpll
mov
loope
mull
or
xlat
pusha
sub
pushl
sub
popa
sahf
mov
mov
push
or
or
fildl
pop
mov
ss
push
and
call
mov
jno
adc
add
test
pop
sbb
xchg
sbb
sbbl
xchg
push
adc
push
xor
dec
sub
test
lock
and
add
pop
rorb
jecxz
adcl
icebp
jecxz
inc
pop
sbb
xor
mov
and
adc
jmp
aam
test
add
pop
std
outsl
add
and
and
pop
loop
pop
or
jmp
add
in
notl
inc
mov
outsl
rolb
dec
xor
push
test
lahf
cmc
add
pop
std
inc
mov
mov
jecxz
mov
jmp
mov
push
mov
or
or
lods
add
inc
test
push
call
std
ljmp
ret
xchg
jo
or
sbb
mov
lods
mov
cs
lods
stos
in
imul
pop
sub
jne
out
out
cwtl
sarl
in
test
or
js
stos
adc
add
test
add
push
mov
jmp
inc
popa
imul
insb
nop
or
pusha
push
test
xchg
mov
icebp
push
add
jmp
js
stos
int
fsts
ljmp
ja
aam
add
mov
fldl
sbb
insl
mov
mov
add
xor
das
fdivs
sbb
lea
adc
inc
rcrb
idivb
pop
stos
mov
sub
das
sub
add
xlat
icebp
roll
mov
divl
add
stos
mov
sbbl
or
pushf
mov
xchg
sbb
pop
js
sub
add
mov
pop
push
cli
mov
pop
mov
mov
mov
mov
leave
roll
or
fstp
sub
popa
sbb
xchg
mov
ljmp
pop
mov
and
out
jg
cmc
pop
in
and
imul
lea
jg
decl
cmpb
jge
inc
andb
mov
idivb
aam
stc
pop
sbb
testb
outsl
fwait
in
and
add
sub
sub
testb
add
jle
mov
cmp
test
iret
icebp
xchg
icebp
sub
or
addl
push
ss
stos
hlt
or
add
dec
jl
adc
mov
negb
jae
add
lods
inc
or
push
jecxz
shlb
dec
add
les
aam
decb
imul
or
cwtl
dec
sub
int
pop
add
call
fwait
in
mov
and
jmp
sbb
inc
insl
or
movsl
add
pop
push
push
jno
sub
mov
fmull
add
xor
bound
scas
mov
sarb
lods
mov
push
insb
mov
or
pop
xchg
orb
or
mov
fcmovu
insl
mov
loop
jo
and
sbb
das
mov
insb
or
inc
xchg
ret
inc
dec
or
sub
mov
pushl
rcrb
lret
add
inc
xor
rcrl
pop
in
cmp
push
sbb
push
cld
and
jno
fadds
lret
xor
lcall
mov
xchg
daa
add
sbb
loopne
sub
sbb
clc
sbb
xor
adc
aam
push
cmp
add
cmp
aaa
loop
xchg
mov
scas
pop
imul
aam
sub
lods
add
iret
add
inc
push
shlb
add
pop
lcall
sub
push
pop
stos
xor
xor
add
insl
fcomi
or
push
movsl
mov
in
mov
xchg
jecxz
or
rolb
loop
frstor
sbbb
or
push
loopne
scas
cmc
in
pop
mov
in
outsl
xor
mov
xchg
addb
pop
add
hlt
inc
and
mov
or
jbe
mov
mov
or
add
add
mov
ret
outsl
mov
sbb
and
pop
add
mov
leave
mov
lods
mov
push
mov
or
outsl
adc
inc
pop
mov
sub
out
insl
add
adc
mov
lds
mov
sbb
loop
fimuls
add
mov
orl
add
pop
pop
shl
fimull
stos
inc
pop
bts
ljmp
and
ds
mov
push
insl
sbb
or
or
pop
lcall
cmp
add
shr
cmp
loopne
dec
or
adc
mov
dec
lahf
daa
push
cmp
std
and
adc
add
mov
mov
xor
and
lock
das
or
adc
or
xor
dec
mov
mov
sub
pop
jp
mov
aaa
aad
icebp
ret
neg
mov
sahf
add
shl
mov
dec
lods
lcall
jg
mov
popa
add
mov
ljmp
push
pop
cmp
shll
andl
rorl
incb
mov
ret
pop
mov
add
pop
fucomp
sub
or
ljmp
iret
pop
pop
and
pop
mov
or
mov
mov
loop
mov
xchg
loope
inc
dec
pusha
inc
pop
fstpl
fadds
mov
jecxz
or
cli
or
and
xorb
or
loopne
cltd
lock
add
rcr
hlt
add
mov
mov
rolb
addb
mov
ljmp
sub
push
data16
pop
mov
mov
or
xchg
dec
mov
or
and
and
mov
xchg
and
push
push
loop
xchg
push
sti
mov
pop
loopne
pop
and
adc
jmp
adc
mov
add
push
add
mov
push
mov
movsl
andl
jb
out
push
mov
sbb
rcrb
fbstp
sbbb
sbb
xor
inc
cmpsb
daa
movsl
mov
mov
xor
mov
gs
stos
outsb
inc
bound
jns
push
or
popf
inc
mov
aaa
addr16
jg
sbb
or
loopne
loop
loopne
hlt
inc
add
sub
xor
movsl
mov
and
mov
ret
into
inc
shll
loopne
clc
in
in
dec
dec
sbb
insl
xor
add
or
mov
loope
dec
rorb
add
and
xor
add
mov
xchg
sub
fnstsw
adc
push
sub
mov
and
les
sub
pusha
xor
movsl
loop
scas
adc
loope
in
inc
jb
andl
data16
in
xchg
bound
or
mov
add
and
jecxz
inc
and
fwait
push
push
add
outsl
sbb
jo
or
std
ljmp
xor
mov
pusha
jmp
popf
test
testb
xor
int
stos
mov
out
or
push
call
shrl
movsl
mov
xchg
add
xor
fldenv
mov
outsl
cmp
int
pop
mov
inc
repz
in
stos
rorl
lock
je
add
shl
add
stos
iret
in
fwait
or
repz
cmp
mov
cs
adc
cmc
ret
adc
ljmp
xchg
xor
rolb
mov
mov
sbb
jmp
fsubrp
sbb
jb
outsb
hlt
mov
fsub
pop
aas
jl
std
loop
mov
ret
xorl
lret
push
loopne,pn
mov
rolb
xchg
or
xlat
inc
mov
ljmp
cmpsl
ja
lock
mov
mov
aaa
js
mov
popa
fwait
lock
lea
mov
popa
push
jle
push
dec
add
mov
test
add
jns
in
das
mov
popl
mov
loope
rclb
mov
stos
subb
sbb
icebp
mov
nop
test
mov
dec
addb
push
jmp
mov
js
decl
adcb
andl
ficoml
or
mov
add
add
ret
and
pop
fisubrl
adc
lcall
mov
jo
movsl
lahf
fs
push
mov
add
aaa
cmpl
jecxz
xor
imul
mov
nop
push
mov
mov
or
andl
push
aad
push
push
push
jecxz
adc
mov
xorl
adcb
test
xlat
in
jg
jmp
add
and
int3
mov
push
push
stc
adc
push
or
jne
out
pop
pop
arpl
mov
sbb
adc
mov
fucomip
inc
sbb
add
cmc
add
jl
cld
das
adc
lock
sbb
push
outsb
sti
test
hlt
sub
arpl
and
pop
addb
loope
jmp
movsl
mov
sti
mov
pop
jo
roll
and
adc
cmp
jge
xchg
inc
ljmp
mov
sbb
mov
jo
out
mov
sub
pop
dec
cld
sarb
jo
lock
inc
repnz
cmpb
fidivrl
adc
inc
aad
aaa
adcb
and
rol
cwtl
mov
pop
mov
push
mov
sub
inc
jno
stos
mov
aad
add
nop
lret
pop
lcall
ljmp
xchg
xlat
popa
call
jno
loope
fbld
add
outsl
ror
daa
and
loope
movsb
mov
xor
jo
insb
inc
adcl
ss
aaa
pop
mov
pop
or
xchg
inc
or
or
cmc
out
mov
test
push
add
inc
or
mov
cmp
int3
jmp
icebp
push
out
pusha
mov
push
mov
add
add
lret
jno
shrl
mov
or
outsb
ret
test
rclb
jecxz
xchg
and
mov
mov
pop
sarb
andl
add
adc
test
dec
pop
jge
push
mov
adc
lret
testb
les
aam
jb
rcr
sub
add
cmp
jg
xchg
jp
shrl
or
pusha
add
lds
add
stos
test
sub
push
rolb
test
fildll
ja
sub
lds
mov
div
mov
popf
or
pushf
shlb
test
xchg
cmp
push
popa
bound
mov
xor
mov
push
mov
mov
jmp
popa
push
push
push
mov
push
sti
pop
in
xor
lods
fcomps
mov
std
mov
cmc
jne
add
xchg
push
xchg
lds
lds
mov
outsb
test
or
and
imul
dec
or
dec
add
push
push
or
outsb
enter
sbb
or
inc
pop
dec
sub
mov
cmp
sbb
fildll
add
mov
inc
jmp
hlt
jns
loopne
and
cmp
dec
adc
xor
xor
dec
pusha
push
cmc
jo
rolb
or
fidivs
enter
nop
in
cmpsb
dec
leave
or
incl
sub
mov
loope
in
push
addb
repnz
shlb
jl
rorb
push
notl
inc
mov
leave
test
xchg
push
mov
push
pop
adc
leave
mov
test
jmp
or
js
mov
js
int
es
xchg
shll
js
xchg
mov
and
cmc
mov
add
insl
mov
cltd
and
mov
mov
jmp
andb
lds
adc
das
inc
mov
push
rol
sbb
xchg
mov
in
add
fbstp
mov
pop
cltd
push
sbb
nop
adc
mov
aaa
stc
mov
xor
out
xchg
outsl
leave
add
pop
push
or
sub
sbb
xchg
mov
mov
mov
add
mov
insl
xchg
add
fiaddl
lret
lcall
add
fistps
lcall
lods
je
sbb
sbb
mov
mov
adc
push
add
push
xchg
jp
and
aam
mov
decl
movsl
rcrb
or
ljmp
mov
push
insl
cmp
xchg
pop
inc
dec
add
pop
sub
fwait
mov
dec
xchg
shld
sub
mov
pusha
sub
in
cmp
xchg
mov
cltd
mov
dec
mov
sub
jecxz
inc
jmp
ss
pop
lock
es
fmuls
sbb
sbb
jmp
or
jo
insl
mov
xchg
mov
fisubrs
hlt
inc
mov
cmc
add
cli
call
jno
les
adcb
test
subl
orb
push
sbb
addb
stos
movsl
in
mov
popa
decl
sahf
jo
add
mov
push
xor
add
mov
push
adc
or
pop
test
call
or
addb
outsb
mov
pop
mov
dec
inc
roll
or
and
xchg
cmpb
pop
andb
mov
mov
fcompl
or
in
xor
out
xchg
jp
ficompl
test
or
sbb
jns
add
jo
sbb
mov
cli
xchg
fwait
movsl
xchg
imul
cmp
sub
fsubl
pusha
inc
mov
fstpl
imul
loop
mov
jns
pop
add
add
jmp
or
or
xchg
add
cmp
pop
pusha
jne
adc
lds
adc
xor
add
or
aaa
ret
inc
popf
or
dec
lock
and
in
inc
rol
jb
adc
sub
jmp
cmp
lods
das
push
es
cltd
cli
les
movsl
pop
inc
or
adc
insb
subb
pushl
mov
shrl
loopne
rcll
adc
loop
enter
dec
faddl
and
jecxz
test
mov
int3
andb
or
pop
add
pop
loope
jae
or
and
xchg
dec
js
pop
pop
sar
push
fildll
std
dec
adcb
mov
icebp
pop
inc
jmp
imul
rcrb
cmc
fldl
mov
sub
push
outsl
sbb
adc
bound
xchg
mov
idiv
lods
rclb
bound
sub
lods
insl
filds
test
leave
add
shrl
outsb
cmpsb
pop
loop
inc
pop
mov
and
in
in
fisttps
int
ret
add
ret
add
movb
mov
xchg
xchg
inc
pop
add
iret
or
and
mov
mov
clc
sub
mov
fisttpl
movsl
jb
int3
jmp
jmp
aad
mov
out
or
or
sub
cwtl
mov
push
push
nop
mov
and
inc
sub
push
and
dec
lret
movsb
sub
stos
sub
movsl
mov
shrb
std
inc
sub
aaa
mov
ret
dec
cmp
cltd
pop
outsl
mov
jae
in
cltd
pusha
sti
xchg
sbbb
movsl
outsb
mov
mov
pop
shlb
sbb
mov
ret
clc
push
call
fs
fisttps
pop
push
mov
add
sbbb
dec
inc
push
test
mov
imul
add
push
xchg
lock
clc
pop
mov
arpl
arpl
loop
xor
jg
or
or
xchg
pop
xchg
mov
arpl
pop
js
shrl
icebp
adcl
pop
js
insl
cmc
add
idivb
cmp
add
push
dec
std
xor
pop
push
dec
pop
imul
cld
lret
fistpl
or
pop
push
mov
jne
cli
pop
mov
and
cmp
adcl
popa
lds
dec
fs
xchg
fsubp
mov
in
call
enter
test
or
rcll
int3
ljmp
fnstsw
jg
rol
push
lods
fucomp
xchg
xchg
lds
mov
add
add
inc
xlat
pusha
fisttps
fildll
loope
mov
inc
loopne
mov
or
dec
test
insb
jl
fcomip
insl
mov
cltd
in
add
jnp
clc
push
decl
jo
add
loopne
adc
stc
and
outsb
mov
daa
or
or
loope
fmull
testl
dec
or
mov
add
and
sbb
dec
mov
loopew
add
int
sahf
fs
jp
call
push
dec
or
in
jnp
aaa
push
ljmp
stos
jbe
insl
sti
push
push
ss
outsb
addl
lds
icebp
adc
dec
or
loopne
xor
inc
les
pushl
mov
mov
mov
xchg
mov
test
roll
sbb
and
xchg
addl
push
push
mov
or
and
clc
das
cmc
adc
dec
add
fadds
sub
push
call
fildll
icebp
add
orb
cmc
xor
in
popa
orb
jl
inc
aad
jo
cmp
inc
in
outsl
test
inc
or
loopne
cmp
add
ss
icebp
inc
sarl
add
pop
jae
add
xchg
outsb
out
pusha
ljmp
jne
xor
pop
ljmp
push
sbb
jno
jmp
push
cmp
jb
add
shll
insb
xor
je
rsm
rolb
rclb
ljmp
div
pop
xchg
std
push
loope
ds
nop
and
pop
sarl
add
cld
lods
mov
add
push
inc
stc
xchg
add
mov
insl
push
sbb
lahf
add
jnp
bound
xor
jg
sti
jg
dec
push
movl
add
idivb
loopne
outsb
cmp
mov
mov
sbb
pop
ss
loop
insb
idiv
lcall
lahf
fimull
mov
cmp
loop
push
mov
fwait
jle
and
xchg
in
rclb
xchg
out
mov
and
cmp
js
pop
movsb
push
or
mov
inc
push
das
shrl
std
sbb
das
das
lds
mov
push
outsl
add
inc
inc
or
stos
and
mov
inc
or
movsl
movsl
dec
mov
out
push
add
or
push
mov
sbb
fildl
rcll
sub
and
ret
and
andb
movsl
sbb
adc
jo
add
les
push
or
pusha
sbb
std
in
jg
mov
mov
lds
mov
xor
fstp
push
dec
pop
iret
sbb
mov
inc
aas
icebp
mov
and
xor
or
ja
and
filds
jbe
xchg
xor
aaa
jne
xchg
or
lcall
xor
mov
aam
jg
jg
outsl
adc
in
adc
and
mov
cmc
fistpl
sub
insl
int
fbstp
mov
adc
add
xor
dec
cld
pop
cld
mov
outsl
repz
aaa
loopne
or
mov
stos
add
aaa
lock
mov
decl
pop
shll
xchg
shll
js
adc
sub
pop
jnp
movsb
add
lea
inc
adc
outsb
repz
mov
fcmovnb
push
pusha
jp
hlt
add
repnz
fbld
or
or
cli
xor
pop
inc
jp
loop
mov
add
mov
sub
jecxz
and
pusha
xorb
cld
das
shlb
popa
mov
gs
add
loope
shll
dec
mov
sub
jle
cli
rorb
push
mov
inc
mov
outsb
popa
push
push
sbb
incl
add
inc
add
xchg
je
xor
cmc
mov
xor
xor
adc
jo
cmp
jge
mov
add
xchg
leave
sar
pushl
add
mov
add
cmp
pop
sub
and
mov
lcall
mov
push
shrl
mov
and
inc
sbb
or
cltd
jg
sub
pop
pop
mov
jmp
push
mov
mov
gs
js
call
sub
pop
push
lods
shlb
and
pop
mov
push
push
sarl
jle
pushl
movsb
xchg
sarl
shll
lds
and
push
adc
add
stos
outsl
cld
inc
outsl
int
xor
loope
xor
pop
test
sub
and
div
adc
outsb
aad
out
sbbl
jle
mov
int
jae
pusha
and
push
in
add
je,pt
and
mov
in
mov
mov
imul
xchg
decl
cltd
push
adc
call
jno
push
add
js
xor
fcmovnu
call
inc
or
and
mov
push
or
pop
icebp
sbbb
xor
jo
in
rorl
push
sar
fidivs
mov
xlat
fimuls
enter
loope
jecxz
push
inc
xorl
iret
and
fistpll
adc
cmp
mov
xor
aaa
push
fidivs
clc
mov
call
mov
dec
xor
mov
std
add
popa
push
into
jo
test
int
les
inc
mov
add
add
push
jecxz
or
adc
sub
or
and
xchg
jp
cli
test
stc
pop
xchg
nop
rorl
xorl
pop
inc
ret
jne
add
clc
inc
add
addr16
sbb
xchg
movsb
xchg
and
jno
pop
mov
and
sbb
test
mov
xchg
add
bound
lds
les
cmp
mov
rorl
inc
mov
push
dec
jp
fistpl
ds
xchg
or
push
mov
mov
insl
xor
shll
push
aaa
and
arpl
adc
stos
inc
ljmp
ljmp
mov
pop
fldl
pop
push
or
adcl
xor
shlb
dec
adc
mov
icebp
pop
inc
movsl
stos
outsl
lock
mov
dec
roll
mov
mov
mov
daa
jns
lret
faddl
pop
aam
push
push
push
add
add
and
inc
mov
add
icebp
add
divl
inc
add
jno
push
les
outsb
pop
adc
pushf
arpl
das
adc
and
add
ret
aam
push
xchg
dec
xor
in
inc
lock
outsl
xor
lods
mov
push
divb
fdivl
mov
jg
test
mov
daa
pop
insl
or
ljmp
adcb
repnz
mov
push
or
or
add
rclb
fwait
and
lods
in
hlt
fimuls
orl
rorl
adcl
mov
out
xchg
cmp
pop
pop
cmpb
mov
pop
dec
inc
sbb
incl
negb
ds
incb
cld
mov
arpl
in
dec
orl
sbb
mov
std
dec
insl
add
popf
xor
inc
push
incb
jle
loop
add
xor
inc
mov
clc
decl
inc
mov
inc
inc
ret
pop
jge
cltd
nop
adc
jmp
loope
or
pop
stc
push
inc
mov
or
cld
inc
rcrb
jge
inc
sbbb
roll
push
or
test
pop
sbb
shrl
mov
lea
outsl
xchg
repz
je
push
sti
icebp
mov
or
or
mov
subl
inc
sbb
les
std
inc
add
ss
dec
add
or
cmp
mov
cmpl
shll
out
ja
negb
imull
addl
jmp
xor
or
es
or
cmc
or
or
sub
popa
les
and
shl
inc
mov
mov
xorb
push
and
jecxz
test
cmpsl
sub
push
mov
ficoms
lock
stos
addr16
push
xchg
stos
gs
cld
mov
add
les
loope
and
xchg
hlt
sbb
mov
std
and
shll
mov
pop
sarb
push
pop
es
incb
push
add
pop
lds
inc
int3
fcompp
dec
dec
add
mov
aam
ja
adc
mov
fildll
leave
test
fisttpll
push
insb
mov
adc
lea
les
fwait
sub
adc
loopne
or
aaa
je
sub
shrb
and
jmp
aad
mov
ret
hlt
loopne
ljmp
dec
int
or
jmp
or
adcb
inc
sarb
mov
mov
jp
mov
cmp
or
lcall
inc
jmp
and
or
lock
js
xor
call
add
pop
mov
inc
jae
adcb
mov
push
pop
insl
lock
lods
mov
lea
movsl
mov
insl
cmp
call
mov
loop
mov
push
inc
mov
repnz
dec
dec
mov
push
js
mov
cmpsb
or
loop
mov
mov
jecxz
rolb
mov
xor
stos
mov
pop
loop
xor
mov
icebp
and
shr
add
mov
add
loope
jmp
notb
dec
loopne
adc
adc
out
ljmp
popf
push
cmp
mov
jecxz
sub
sbb
mov
adcl
ret
mov
addr16
pop
sub
pusha
push
icebp
or
std
call
and
das
mov
mov
aaa
es
pusha
add
mov
push
insl
inc
insl
mov
mov
add
lret
hlt
pop
add
add
cltd
arpl
sbbb
push
test
add
stos
pop
and
cld
insl
mov
jne
inc
movsl
addb
lret
lods
roll
jecxz
and
dec
jae
vcvtdq2pd
les
in
sbb
imul
jg
pop
jae
jnp
pop
xor
in
test
jo
inc
sbb
mov
inc
in
xchg
cmp
xor
ja
insl
mov
inc
or
sub
dec
pop
mov
icebp
dec
pop
test
dec
push
pop
and
adc
lds
push
xor
pop
push
shl
cli
add
mov
add
insl
imul
pop
insb
andb
in
fldt
and
daa
inc
pop
cmp
dec
pop
in
add
or
daa
inc
and
xchg
lret
imul
xchg
lea
jo
pop
hlt
or
iret
imul
mov
push
aaa
pop
xlat
inc
mov
jmp
xor
push
cmp
mov
add
cmp
jno
sub
cmp
repz
mov
adcb
fmull
inc
shll
add
stos
add
insb
lret
jbe
std
or
and
pop
insb
or
fildll
xchg
xchg
or
xchg
and
pop
push
xchg
or
xchg
mov
pop
sbb
sbb
int
ret
insb
xchg
sbb
fsubrl
js
ja
xchg
add
cs
das
xchg
in
fildl
adc
pop
or
xor
pop
push
test
mov
push
adc
and
and
test
fisubl
jecxz
neg
shll
xor
iret
jnp
adc
pop
cmp
fdivr
repnz
adc
std
pop
fldlg2
lcall
mov
pop
sub
rorl
xchg
add
pop
and
outsl
mov
adc
add
test
pop
idiv
repnz
rcrl
xchg
ret
pop
cmp
int
mov
mov
bound
sbb
pop
daa
xor
lret
or
jg
ret
push
inc
aad
aas
inc
sbb
fstps
andl
adc
push
loopne
pop
cmp
pop
loopne
cld
roll
arpl
and
test
popf
addb
xchg
mov
mov
ret
jnp
mov
repnz
mov
lock
data16
movsl
mov
mov
jl
push
movsb
insl
jae
mov
negb
dec
shll
inc
fdivrs
loop
mov
mov
mov
xor
mov
jbe
aaa
jle
adc
xchg
inc
loop
stc
jb
clc
sbbl
jae
pop
movsb
and
mov
mov
lock
mov
xchg
push
sbb
jo
sub
shll
add
push
call
adc
rcll
cmpb
push
jg
insb
adc
sbb
add
pop
cld
clc
stos
and
jge
ret
test
mulb
outsb
es
in
sub
sbb
mov
mov
sub
pop
or
push
scas
fisubs
or
loope
sbb
add
mov
or
popf
bound
movsb
pop
mov
jo
jnp
and
push
andb
pop
nop
movsb
jmp
jbe
mov
clc
ffreep
mov
pop
int
test
daa
xor
outsl
mov
push
add
ds
sub
aaa
inc
mov
imulb
in
fisubrl
mov
and
xor
and
xor
mov
rcl
test
mov
push
pop
imul
out
ret
lock
adc
out
inc
add
push
pop
push
and
syscall
xchg
pop
stos
mov
xorb
mov
adc
pop
sub
das
inc
and
shrb
fs
rclb
or
rcl
lods
inc
outsb
push
add
out
add
ret
add
xchg
rorb
add
das
dec
sub
in
sub
jno
sbb
cmp
xor
fistpl
test
xorb
inc
das
shrb
add
cmp
or
inc
ds
push
push
jge
pop
test
cmp
cmp
pcmpgtb
mov
lret
ja
mov
leave
out
add
fiadds
sub
xchg
cltd
test
pop
mov
or
or
inc
aam
sub
mov
decl
scas
mov
inc
sbb
outsb
sub
rcrb
out
sar
push
test
outsb
push
rcll
aaa
xor
and
lock
and
cmp
clc
or
push
xor
jge
lods
mov
bound
aad
or
insl
sub
cld
adc
push
add
sbb
or
outsb
arpl
or
filds
sub
push
movsl
sub
movsl
shl
mov
push
mov
and
cltd
xchg
inc
fidivs
push
stc
out
test
or
mov
roll
inc
inc
mov
mov
or
rcrb
rorl
stc
mov
pop
lds
mov
pusha
mov
mov
stc
mov
mov
pop
icebp
andl
sar
add
xor
ror
icebp
es
xlat
outsb
mov
xchg
ret
add
clc
xor
xor
leave
rclb
pop
inc
adc
cmc
push
insb
or
jae
sti
add
ljmp
cwtd
sub
xchg
inc
pop
bound
and
xchg
pushf
and
add
cmp
out
aam
sub
sarl
test
or
arpl
mov
dec
add
push
add
and
sub
or
adc
pop
lret
dec
loop
or
adc
add
or
add
fsubs
fsubrl
dec
inc
lea
sti
rcr
lods
hlt
xchg
mov
jb
data16
cltd
outsl
sub
jo
orl
or
hlt
nop
push
jp
loop
add
decl
jno
in
cmc
mov
fsubs
adcb
rolb
xchg
mov
add
xor
shl
test
rcll
stos
fbld
scas
add
cmc
push
push
cld
or
xchg
dec
enter
push
les
inc
mov
mov
lcall
push
pop
cli
test
add
dec
ret
mov
insl
jnp
mov
mov
ucomiss
sbb
fs
xchg
dec
adc
mov
lret
add
subl
stc
cs
sbb
push
orl
mov
inc
outsl
mov
mov
add
jle
ret
push
mov
adc
stc
inc
xchg
xchg
push
cmp
std
orb
in
push
outsl
mov
fldt
and
test
and
inc
lock
jg
stc
ret
and
inc
push
inc
xchg
fsubs
pushf
sbb
xor
or
inc
sub
loope
subb
rcrb
out
ret
and
outsl
movsl
jg
mov
adcb
aad
add
adc
add
out
in
add
add
ficomps
pop
test
dec
mov
andb
push
push
adc
clc
sub
fnclex
roll
ds
cld
sbb
sub
add
mov
dec
xchg
test
call
push
pop
jno
adc
push
jno
fildll
sub
mov
or
sbb
lret
insl
mov
and
test
int
adc
mov
add
in
addl
xchg
loope
mov
mov
inc
push
out
or
es
cmc
fistl
scas
je
xor
sarl
or
mov
lds
lea
xchg
shl
adcb
inc
rorb
cmove
mov
sub
ucomiss
sub
out
inc
test
jle
and
dec
add
dec
push
test
mov
sub
xchg
out
adc
mov
lods
pusha
mov
pop
loope
push
call
inc
sbb
and
xchg
cmc
loope
pop
arpl
ret
push
dec
scas
push
fldl
rolb
pop
scas
dec
cli
mov
add
xchg
test
push
shll
mov
jmp
jns
loopne
lea
das
mov
and
ljmp
call
out
cmc
cltd
fwait
dec
mov
inc
mov
pop
nop
pusha
jmp
mov
push
mov
push
lea
push
and
shll
sub
out
test
xlat
pop
nop
sub
and
inc
mov
insl
inc
mov
mov
add
or
test
testb
outsb
pop
push
xchg
popa
push
inc
stc
test
fs
ss
iret
scas
mov
hlt
or
inc
cwtl
jge
mov
daa
aam
mov
insb
nop
inc
fisubrs
nop
out
or
sbb
mov
add
sbb
mov
mov
les
and
jb
popa
or
jbe
cmc
filds
add
and
add
sub
mov
push
push
adc
mov
jns
popf
adc
mov
pop
push
shrl
out
mov
pop
jg
xor
add
cmc
mov
or
ds
mov
cs
lods
es
sbb
divb
mov
cltd
loopne
inc
add
outsb
sbb
mov
mov
xchg
pusha
mov
push
sub
sbb
icebp
add
ja
xorb
mov
pusha
jo
push
jne
add
scas
cwtl
push
xchg
mov
push
das
lret
jno
sub
add
push
out
or
add
push
sbb
adc
and
jbe
sub
xor
decb
and
gs
and
js
push
cmpsb
in
bound
xchg
subl
mov
filds
das
mov
dec
fdiv
push
or
outsl
adc
fildll
aaa
sub
inc
push
stc
movsb
jae
inc
jp
push
inc
cld
pop
add
pusha
fwait
or
pop
outsb
adc
loope
add
lea
xor
mov
add
jmp
aad
idivl
or
aam
sbb
or
inc
xchg
or
xchg
or
lds
pop
es
insl
cmpl
mov
cmp
or
cmc
mov
fisttpl
inc
pop
out
and
lea
inc
fs
stos
xchg
outsb
lds
sarb
das
pop
mov
cmc
outsb
jne
add
in
insb
insl
jmp
fbstp
jmp
push
pop
adc
mov
sbb
loope
jle
and
and
inc
mov
lock
cmp
mov
cmp
jecxz
dec
mov
ljmp
inc
ret
fildll
ss
xchg
insl
sub
cwtl
ljmp
lods
push
std
loopne
and
inc
and
sub
stos
add
push
sub
sub
xchg
cmc
into
pop
adc
fcmovnu
jno,pn
jnp
in
fsub
mov
mov
in
inc
rorb
stos
inc
add
js
lcall
xchg
out
pusha
orl
or
mov
aad
xor
lret
mov
adc
jmp
sti
repz
add
add
inc
inc
push
divb
out
jo
sub
outsl
in
mov
xchg
adc
nop
stos
adc
rcll
movsl
xchg
std
out
or
cmp
lock
rcrl
mov
add
jmp
int3
adc
scas
fisubrl
in
shll
jo
push
lock
mov
add
inc
lock
mov
test
inc
out
into
and
jmp
mov
push
test
or
testb
shll
dec
adc
mov
pop
push
xlat
push
loope
mov
sbb
ja
hlt
lods
mov
andl
fucomi
push
jbe
loop
inc
adc
push
insl
lock
icebp
push
push
in
lcall
sub
in
fsubl
lock
lods
outsb
add
lea
ret
sub
imul
ljmp
pop
call
and
insl
dec
fisttps
lock
add
add
adc
loopne
aas
fsub
pop
jle
add
pop
leave
fst
sub
addl
xchg
mov
in
or
subb
insb
push
loope
loope
xchg
mov
cmp
fiadds
imulb
cld
jnp
nop
or
andb
orl
cmp
and
cmc
out
and
pop
fdivl
mov
push
inc
adc
icebp
loopne
out
cld
add
push
loope
ljmp
cmc
mov
in
roll
popa
call
test
xor
nop
pusha
pushl
sub
addr16
popa
inc
stc
sub
and
pusha
arpl
or
pop
cli
dec
or
daa
shlb
mov
cmp
push
in
ljmp
js
xor
lock
push
out
or
sbb
loopne
mov
scas
pop
inc
pop
xorl
fadds
mov
sbb
dec
fdivs
xchg
lret
adc
int
inc
pusha
fadds
cmpb
movsl
push
mov
nop
dec
push
pop
sub
mov
push
mov
call
nop
adc
imul
in
pusha
std
sbb
sub
or
mov
movsb
pop
test
in
or
lds
testl
mov
push
pop
cwtl
adc
dec
mov
clc
incl
adc
js
add
test
pushf
nop
rorb
and
or
push
adc
rclb
or
sub
add
inc
repnz
jnp
pop
lds
push
arpl
ss
in
and
rcr
add
fwait
push
add
mov
pop
mov
incb
fsubrl
xor
sti
or
mov
add
lods
cmc
add
add
mov
int3
adc
mov
shl
fistps
push
rclb
in
jno
pop
aad
push
div
call
add
add
icebp
and
sub
adcl
incl
scas
sbb
add
sahf
or
xchg
outsb
xor
dec
mov
add
xchg
inc
adc
pop
roll
iret
push
mov
mov
imul
aam
and
push
scas
cmpsb
and
psrlq
fsubrs
mov
sub
gs
pushl
push
pusha
push
outsb
gs
dec
xchg
subb
pop
subb
test
in
and
xchg
mov
ja
mov
mov
loop
hlt
outsl
insl
xchg
sub
rorl
fwait
pusha
das
test
adc
jo
out
mov
inc
das
push
ljmp
inc
add
cmpb
jo
in
lds
or
jne
and
mov
adc
aad
gs
out
pop
add
push
sbb
pop
addb
sbb
push
mov
fistpll
cmpl
pop
add
lahf
push
loop
jle
adc
addr16
rcrl
lcall
jmp
xchg
repnz
pop
loope
lock
loopne
push
fwait
and
jbe
jp
mov
dec
js
and
dec
aam
adc
mov
insb
pop
inc
add
adc
cmp
xor
fwait
jnp
adc
pop
mov
dec
cmpl
adc
insl
or
xchg
xchg
and
xchg
push
jmp
cmp
jne
fs
in
dec
sbbl
call
push
push
hlt
jnp
push
adc
xchg
js
push
cmpsb
pop
adc
mov
pushl
xchg
push
rclb
and
pop
cmp
add
loopne
mov
mov
adc
insl
insl
or
and
add
in
mov
or
add
push
out
stos
mov
popa
arpl
cmc
mov
pop
xchg
dec
push
notl
pop
cmp
jns
jmp
push
xchg
icebp
pop
mov
outsb
dec
and
or
pop
mov
int
rorl
lock
add
adc
in
insl
add
mov
loopne
mov
sbb
adc
dec
sbb
add
inc
mov
loopne
pop
pusha
xchg
lcall
and
lods
roll
aaa
and
dec
mov
mov
in
movsb
sub
push
xchg
mov
sub
pop
mov
add
push
and
sub
push
inc
cmc
out
add
mov
dec
or
cwtl
ljmp
mov
adc
cmpsl
push
sub
popa
and
insb
ret
inc
and
push
lret
rolb
jg
cli
pop
cmpsl
or
or
add
loope
and
xchg
insl
sub
add
mov
pop
inc
outsl
popf
jmp
sbb
imul
lret
fs
jno
nop
xchg
pop
push
xor
push
lods
dec
xor
mov
fstps
inc
mov
mov
sbbl
and
and
icebp
test
test
inc
push
cmp
add
pop
popf
ds
into
and
enter
cmp
add
outsl
test
add
push
xor
mov
adc
mov
xor
push
movsb
mov
xlat
decb
and
mov
add
imul
mulb
fidivl
nop
cld
jae
dec
mov
fs
imul
cmp
loopne
sahf
fsubrp
or
data16
jge
mov
scas
or
adc
outsb
push
add
pop
xor
pusha
add
aaa
shrl
hlt
pop
and
mov
or
bound
fsubrl
mov
mov
callw
shrb
insl
adc
xlat
add
lret
test
xchg
pop
adc
ss
inc
add
call
fbld
cmp
insb
mov
push
std
add
mov
int3
pop
add
mov
cmpb
addb
das
insb
sbb
inc
and
daa
scas
xchg
adc
shrl
cs
subb
push
mov
rorl
subl
icebp
sub
outsl
mov
adc
or
or
es
sbb
pop
mov
cmpsb
lods
jecxz
repnz
popa
adc
sbb
adc
lea
adc
mov
pop
or
daa
loop
add
inc
shl
out
fwait
cmp
movsl
call
add
add
outsb
cmpsb
cli
adc
pop
cmp
repz
inc
or
sub
add
mov
sbb
jmp
add
insl
mov
xchg
outsl
mov
xorb
insl
lea
sbb
cmpsb
shlb
adc
sub
mov
lods
cs
xchg
sub
mov
cmp
add
mov
mov
mov
in
inc
add
xor
rcl
mov
stc
xchg
in
push
add
adc
and
cltd
in
dec
and
stos
and
data16
arpl
fidivrl
pop
insl
daa
sub
out
das
inc
outsl
jl
add
adc
scas
outsb
fstl
fiadds
test
daa
dec
inc
sub
push
aad
mov
insl
cmp
inc
lea
stos
lods
loopne
sub
pusha
stc
jo
mov
pop
xchg
cmpb
add
or
adc
ficompl
mov
adc
lahf
lret
ja
lods
or
out
xchg
test
mov
push
clc
inc
inc
adc
add
push
lds
jne
insl
sti
outsl
ja
pusha
mov
es
rol
or
pushw
fldl
or
cltd
mov
dec
scas
jle
adc
jo
push
mov
add
aad
mov
hlt
adc
push
aam
sub
outsb
mov
sbb
mov
fistpll
mov
push
pop
out
lret
daa
test
mov
addl
rclb
mov
adc
pusha
aas
adc
cmp
mov
shll
and
jp
sbb
std
call
fsubrp
sub
xor
mov
jo
and
scas
subl
pop
mov
setp
and
scas
mov
mov
inc
pop
cmp
add
add
add
push
test
push
sbb
sub
imul
add
add
push
popf
out
ficompl
or
sbb
push
cld
inc
cltd
add
rol
cmc
vfrczss
jg
addr16
sbb
outsb
adc
gs
sbb
push
sub
and
mov
or
mov
lods
insl
mov
cwtl
rcll
loope
mov
sbb
ret
cltd
and
orb
push
xor
mov
je
push
mulb
outsb
in
mov
push
das
inc
sti
sbb
outsb
add
or
jg
rolb
fchs
adcl
or
insl
mov
pop
mov
subb
aam
and
sarb
lds
adc
mov
outsb
stos
xchg
ljmp
inc
pop
sbbl
xchg
rep
movsb
cmc
inc
es
loopne
outsl
push
adc
add
push
pop
fwait
or
call
inc
push
aas
subb
sarb
push
add
inc
leave
mov
xchg
mov
shlb
add
push
sub
insb
xchg
cmc
or
orb
inc
test
ljmp
popa
mov
test
mov
mov
push
int3
nop
insb
or
add
and
adc
inc
mov
aam
xchg
icebp
and
xor
dec
inc
test
loopnew
imull
addl
xorb
imul
xor
rcr
push
movsl
xchg
jmp
inc
add
adc
push
shrb
jmp
mov
sub
out
sarb
cmp
ss
shlb
cmc
and
movl
xor
dec
movsl
jb
jg
mov
shrl
push
int3
adc
pop
sbb
outsl
cmpsb
cmc
fistpl
push
aam
mov
nop
lret
mov
mov
fildll
in
add
push
dec
outsb
out
mov
aad
shrb
lock
mov
jmpw
stos
inc
imulb
popf
call
mov
and
jle
int3
xor
adc
std
add
pop
pop
outsl
ficoml
nop
loop
fsubl
pop
in
mov
pushf
adc
xchg
jp
add
inc
cltd
pusha
cwtl
mov
test
push
lea
nop
jle
and
fstpt
icebp
inc
xchg
adc
pusha
andb
or
adc
ret
aam
add
in
or
push
cmp
repnz
adc
rolb
movsb
in
subb
xor
dec
aaa
xchg
sbb
pop
add
shrl
arpl
std
movsb
mov
push
jmp
mov
fmuls
push
and
push
jnp
lods
es
test
or
push
add
dec
sub
mov
xchg
js
test
xchg
jmp
adc
xor
cwtl
xchg
pop
fcmovu
outsb
adc
incb
push
idiv
push
clc
lea
icebp
pop
dec
push
adc
adc
sbb
xor
enter
test
fiaddl
outsb
das
je
sarb
neg
adc
insb
das
push
fsubrp
pop
cltd
push
rcrl
jge
hlt
mov
dec
mov
jmp
test
fsubrs
adc
jbe
xor
dec
pop
subb
jns
xchg
push
mov
movsl
push
sbb
push
std
dec
outsl
mov
imul
and
mov
loope
cmp
add
jmp
adc
addl
mov
mov
push
mov
push
sub
pop
mov
movsl
inc
test
inc
adc
or
and
mov
or
mov
xor
in
push
add
loop
adc
data16
in
outsl
and
loopne
je
xor
scas
or
out
scas
bound
xchg
mov
adcb
and
mov
outsl
aaa
inc
jne
adc
and
adc
or
pop
or
nop
lods
mov
sub
aad
pop
mov
clc
jecxz
cmp
hlt
add
adc
mov
jne
popa
or
jecxz
mov
out
bound
lods
pop
or
push
sbb
push
xor
sbb
add
or
test
push
mov
shl
or
inc
fcmovb
sub
adc
xor
or
loopne
adc
loope
fstpl
xchg
mov
aad
aad
orl
fldenv
test
rcll
in
in
sbb
and
and
insb
sbb
std
subb
aam
push
xorb
and
cmc
mov
testb
ret
dec
scas
sbb
pop
lock
pop
fnstcw
std
out
mov
xchg
fldenv
fnsave
cmc
pop
push
rol
push
xchg
sub
pushf
dec
xchg
cli
andb
mov
mov
add
and
bound
cwtl
push
outsl
push
sbb
or
push
sti
xchg
ja
lcall
cmpl
add
add
in
push
shrb
sub
leave
cmp
das
cld
jg
movsb
repnz
xor
jb
popa
out
add
add
jl
add
loop
gs
mov
and
mov
loopne
jae
movsb
mov
mov
nop
jg
jo
cmpsl
inc
int
lock
xor
push
and
shrb
and
adc
call
dec
inc
and
pop
xor
nop
div
add
jl
stc
adc
pop
mov
fmull
aas
adc
int
mov
in
or
call
add
mov
push
push
loopne
add
jge
push
push
sub
adc
mov
call
pop
fsubl
ret
sub
add
ljmp
data16
adc
test
sub
popa
push
sub
or
fildl
mov
gs
nop
push
xor
cmp
pop
pop
sbb
fidivl
cli
loopne
pop
adc
sbb
mov
adc
add
add
mov
push
in
dec
outsl
pop
es
and
adc
not
pusha
push
test
pop
fidivs
movsl
pop
push
fcmovnb
scas
push
xchg
adc
inc
in
cmc
or
loope
rcll
add
aam
push
lods
rcll
mov
cs
and
cmp
inc
imul
or
fidivrs
aaa
jp
push
xor
test
lock
loop
mov
jmp
insb
pusha
mov
cwtl
pop
push
cmp
scas
cwtl
or
mov
jmp
pop
xor
jp
or
outsl
xor
push
and
outsl
mov
push
push
popf
repnz
add
mulb
or
or
push
jmp
lea
js
push
lods
xor
sbb
in
pop
lds
sar
icebp
add
loop
xor
gs
outsb
xchg
mov
jo
adc
aad
push
jl
inc
sbb
icebp
sbb
mov
icebp
pushf
pushf
mov
ljmp
out
and
pop
xchg
pop
xchg
or
pushl
push
pop
roll
push
loope
push
imul
push
insb
add
add
data16
jmp
ss
cmp
sbb
cmp
outsb
pop
insl
pop
sahf
rol
ror
lods
add
mov
mov
push
push
mov
sub
adc
rcr
mov
jp
jne
outsl
rcrl
sarb
jb
mov
xorl
push
sub
push
jle
rorl
outsb
jbe
jo
mov
pop
test
inc
sub
jecxz
lcall
adc
mov
cmp
push
or
or
xchg
add
sub
sub
or
xchg
jg
push
mov
pop
stos
push
ljmp
push
out
mov
mov
xor
sbb
pop
loopne
mov
and
imul
int3
push
add
orb
adc
loop
mov
push
fadds
cmc
aas
cmp
adc
mov
add
in
sbb
gs
out
aad
jecxz
inc
jmp
fld
rolb
dec
pusha
fstpt
mov
arpl
or
sub
lret
adc
mov
push
shlb
aad
inc
mov
add
xchg
enter
loope
cld
inc
sub
movsb
nop
cwtl
ds
stc
pop
xchg
push
and
addb
jg
outsl
mov
pusha
mov
inc
cmc
testb
jmp
and
rcrb
ljmp
popf
lea
inc
xchg
cmpl
xor
test
rorl
bound
rorl
mov
lcall
ror
jmp
imul
dec
and
add
jbe
outsl
cmc
push
add
mov
mov
and
inc
cmpsb
mov
lds
subb
in
pop
dec
das
pop
aam
subl
movsl
push
sbb
adc
or
and
inc
adcl
call
das
mov
nop
and
sbb
or
rcr
adc
cmp
mov
test
or
enter
push
or
movsl
pop
aad
jo
int
ja
out
lahf
mov
add
outsl
lds
mov
adc
sub
pop
add
cmpsl
nop
jmp
inc
sub
push
mov
mov
inc
add
mov
subb
gs
std
jno
push
ret
add
jmp
and
fiaddl
sbb
test
subl
cs
mov
lods
enter
out
insl
inc
mov
sub
imull
and
jmp
and
or
cmc
xchg
fiadds
lock
js
mov
push
sbb
jecxz
mov
add
out
insb
insl
outsl
mov
ret
dec
and
out
cmp
insb
into
pop
jmp
and
mov
sub
xor
notb
mulb
bound
mov
lret
sbb
sbb
push
call
mov
dec
mov
addb
mulb
add
xchg
mov
lds
add
imul
or
or
scas
outsl
mov
inc
decl
or
in
inc
nop
fldcw
lds
jle
lods
test
movsb
jl
sub
push
add
in
bnd
andb
mov
push
inc
mov
inc
push
sbb
mov
enter
cld
mov
mov
xchg
orl
xchg
push
push
inc
pop
jl
sub
add
hlt
rolb
jbe
pop
cmpb
inc
pop
dec
inc
and
mov
mov
pop
aad
mov
hlt
add
mov
daa
sub
loopne
mov
push
rclb
xchg
adcb
lea
stc
mov
fildl
push
pop
into
loope
cld
mov
pop
mov
out
or
subb
lock
pushf
mov
ds
ss
or
test
out
jne
sbb
aaa
js
adc
inc
popa
aam
rcll
pop
fiaddl
out
add
call
add
in
out
frstor
popf
pusha
test
mov
sbb
jo
or
in
inc
icebp
cmp
inc
xor
pusha
loope
pop
add
add
mov
aad
jecxz
insl
or
shll
movl
rol
in
xor
pop
clc
push
mov
adc
fdivl
add
aaa
fmuls
adc
mov
sbb
loop
imul
mov
es
int3
push
cmp
mov
or
push
push
ja
sbb
in
insl
mov
xorb
and
mov
pop
lret
push
in
inc
push
push
pusha
jg
lea
adc
mov
push
rcll
or
or
outsb
gs
adc
pop
mov
sub
mov
testl
xor
add
hlt
sbb
mov
mov
and
mov
mov
mov
out
push
rorb
push
xchg
idivl
test
mov
pop
push
hlt
xchg
ljmp
fucom
icebp
or
mov
or
sar
mov
mov
and
je
sbb
inc
or
faddp
sub
xlat
sub
test
add
lock
push
sbb
or
jecxz
aas
mov
add
xchg
cli
mov
mov
fidivrs
icebp
fdivl
loopne
test
int3
pop
sbbb
cmp
movsb
xchg
insl
mov
cmp
or
mov
add
in
pop
mov
adc
stos
push
mov
loope
mov
add
test
insb
int3
pusha
push
outsb
adc
rcrb
add
and
jmp
pusha
adc
test
loop
add
outsl
xchg
lods
sarl
and
pop
pusha
jl
mov
shr
shrb
std
adc
mov
outsl
aad
xor
cs
add
sub
sub
push
into
jne
dec
mov
loope
out
add
mov
or
subb
std
jl
and
and
fwait
push
xchg
stos
cmp
jbe
push
mov
in
ljmp
cmp
dec
loope
mov
xor
mov
cmc
out
outsb
jge
rorb
aas
sbb
adc
notb
mov
js
insb
cmpsb
add
mov
mov
adc
out
sub
movsl
fistl
sti
fwait
loope
into
sbb
sbb
inc
mov
loopne
repnz
push
or
loope
icebp
in
fstpl
mov
or
ds
outsb
jecxz
out
mov
mov
push
fimuls
push
out
dec
mov
inc
or
mov
dec
bound
icebp
inc
popa
mov
aad
loopne
mov
in
enter
mov
js
loopne
ja
sub
cwtl
nop
and
or
pop
adc
or
jle
push
pop
dec
add
outsl
sub
adc
gs
or
mov
mov
mov
lret
jge
out
add
push
mov
orb
adc
cmp
xchg
sub
sub
jb
adc
inc
call
dec
lods
ljmp
pop
cmpsb
imulb
ljmp
sbb
dec
insl
arpl
add
mov
cmpsb
sbb
mov
mov
lahf
add
shlb
add
mov
sub
mov
aam
out
test
and
inc
subl
subl
xor
xor
cmpsb
jecxz
add
test
cmc
lea
add
hlt
and
inc
push
lods
add
in
add
call
gs
fistps
aas
xchg
sti
add
adc
rcrl
rcl
lea
sbb
inc
pop
sti
loopne
cmp
dec
imul
pop
test
lea
sub
or
mov
ds
or
and
loop
lods
test
and
inc
ret
rclb
cld
lcall
jmp
pop
outsb
lock
push
inc
adc
add
xchg
faddp
or
out
push
add
sub
clc
or
shrb
bound
add
mov
adc
mov
in
xor
add
mov
das
jge
cmp
jmp
push
subl
add
xor
addr16
inc
fistpll
cli
pushl
loop
push
enter
or
adc
jb
xor
inc
or
dec
psrlw
adc
movsl
mov
push
mov
or
addr16
jne
test
push
aas
ret
sbb
nop
and
loop
mov
sub
mov
imul
pop
or
mov
and
pop
js
ss
push
sub
nop
push
ljmp
es
loop
inc
add
inc
in
mov
push
stos
xchg
fisubs
push
add
cmpl
xchg
pop
cltd
add
lods
inc
mov
mov
add
rorb
rolb
mov
mov
mov
and
xchg
rcr
sbb
dec
mov
inc
ja
les
jp
push
fnstenv
shll
push
push
outsb
adcb
and
push
add
test
mov
xor
pop
icebp
daa
scas
fs
decb
add
loope
mov
mov
sub
insl
pop
pusha
test
mov
movsl
dec
mov
add
jo,pn
cmp
and
mov
mov
fsubl
in
loopne
inc
incl
xchg
stos
vpmadcswd
lock
pop
push
mov
mov
inc
lret
dec
stc
add
lds
push
inc
jns
add
mov
xchg
repnz
call
dec
sub
add
fs
jbe
inc
inc
in
inc
fildl
sub
mov
movsl
outsb
inc
pop
xchg
ss
lock
lods
adc
repz
shld
sub
add
fildll
andb
js
ja
or
addr16
inc
sbb
xor
lret
mov
roll
sub
add
and
testb
repnz
mov
mov
fsubrp
or
imul
xchg
pusha
jecxz
push
pop
in
loopne
adc
or
and
loope
push
fisttps
das
lock
xorl
push
dec
push
outsl
insl
adc
or
lods
fisttpll
pop
push
test
popa
pop
shl
in
aaa
rorl
inc
test
nop
xlat
mov
fbld
std
mov
imulb
adc
and
loope
test
pop
and
je
out
fs
dec
ja
add
pop
icebp
pop
int3
sub
sbb
add
nop
sbbb
and
dec
xlat
leave
mov
or
int
fdivs
lret
add
outsl
push
movl
std
insb
add
das
jge
mov
loopne
add
adc
add
mov
push
in
push
outsl
adc
pop
adc
or
stos
rorl
fldt
fisubs
les
cmc
insl
mov
sahf
xchg
mov
mov
sub
add
mov
fldt
mov
dec
mov
push
adc
jmp
mov
cmp
or
sarb
nop
pusha
shrb
add
decl
fisubrs
xorl
int
cmp
rcrb
adc
push
shlb
mov
push
pop
rcrb
andb
hlt
adcb
test
fildll
and
arpl
test
pop
push
inc
mov
mov
add
push
incl
rolb
es
xor
push
pop
inc
sub
iret
inc
shrb
loope
movl
dec
lock
lods
aaa
add
or
adcb
loope
or
push
add
test
fstpt
mov
or
fidivl
push
xchg
ret
test
inc
insb
xchg
outsb
sbb
dec
cld
sub
push
cmp
popf
xor
mov
out
mov
nop
sbb
or
enter
cmpsl
add
jo
pop
xchg
pop
push
mov
inc
push
pusha
insb
inc
push
sbb
add
mov
pop
add
int3
xchg
fcoml
pop
or
xchg
sub
push
test
sbb
loopne
andl
das
jmp
cltd
loopne
je
insl
insb
test
imulb
sbb
mov
cmp
imul
adc
stos
test
shr
out
es
jecxz
push
repz
adcl
jg
mov
push
leave
mov
mov
call
jb
imul
stc
inc
cltd
stc
test
mov
adc
pop
mov
hlt
test
push
xchg
fs
push
ljmp
stos
loopne
push
mov
movsl
push
push
jmp
adc
mov
or
adc
and
rcr
mov
dec
xor
pushl
jo
and
pusha
add
test
lcall
int
fnstsw
div
jne
enter
adc
add
inc
nop
adc
or
loop
mov
out
sbb
insl
imul
sub
add
or
lret
loope
mov
cmpsl
es
ret
xor
jecxz
xor
jnp
jmp
jg
lods
xor
fwait
loopne
mov
mov
aad
das
lock
shlb
or
cmp
pop
and
mov
xor
aam
push
into
es
mov
inc
xor
mov
aas
inc
outsl
and
pop
mov
mov
cmc
or
push
outsl
push
or
inc
lock
xor
push
xchg
insb
fcmovnb
data16
xchg
out
push
xchg
mov
out
addl
add
push
or
and
add
xchg
or
and
mov
xchg
mov
pusha
loop
add
dec
loopne
xchg
in
mov
lock
add
in
es
das
jl
push
pusha
xchg
mov
mov
and
mov
inc
add
clc
mov
adc
sub
and
stos
dec
xor
loop
ds
mov
ss
pop
jbe
jl
test
inc
cs
sbb
pop
fcomps
das
mov
and
add
mov
dec
dec
adc
push
hlt
gs
nop
pop
xor
add
shr
mov
rorl
sbb
movsl
insl
stos
push
cmp
mov
push
mov
jl
out
jmp
test
lods
cmp
jg
in
pop
pop
add
hlt
jmp
sbb
mov
in
push
notb
xor
add
aad
inc
or
sub
mov
addb
push
jo
lock
and
ljmp
inc
push
lods
mov
cmc
fs
cmp
fstpl
push
rcrl
xchg
ss
in
mov
adc
sbb
mov
mov
adc
or
adc
fcompl
add
loop
push
or
sbb
mov
mov
outsb
push
mov
fstl
or
cmpb
mov
lods
ficoms
and
jecxz
rcrl
orb
insb
mov
mov
inc
fmuls
int
ljmp
mov
sbb
mov
aas
fildl
jbe
jg
or
sbb
xor
loope
cmp
xchg
fnstcw
add
push
fists
inc
lea
adc
cmpl
push
loopne
pop
mov
jb
add
inc
fbld
add
popa
jmp
push
scas
int
mov
or
pop
repnz
add
xchg
mov
sub
stc
addl
mov
insl
out
and
push
and
and
or
jb
in
jg
stos
shrb
dec
mov
test
push
mov
outsl
add
fisubl
add
add
nop
mov
fistpl
jno
not
movsl
push
or
push
pop
out
and
sbb
cmp
or
mov
outsb
imul
add
sti
xchg
iret
orb
mov
insb
js
ljmp
shlb
inc
mov
mov
adc
addb
stc
mov
mov
rcrb
sbb
push
cs
repnz
sarl
mov
push
add
add
inc
mov
xor
inc
lcall
push
add
mov
sub
inc
jmp
pop
pop
cwtl
icebp
or
push
nop
mov
mov
inc
and
and
mov
out
gs
pop
outsl
mov
mov
mov
xor
add
rcrb
ffreep
fs
xchg
inc
push
add
rcll
ss
sarb
xorl
add
shl
push
push
rorb
adc
popf
ja
fimull
add
sahf
xchg
frstor
hlt
push
nop
or
add
mov
cmc
xorb
insb
rcrl
push
mov
inc
push
xchg
or
sub
test
dec
std
inc
and
aaa
inc
dec
sbb
pop
orl
loope
push
adc
outsb
shll
or
adc
add
popa
add
movb
rcll
shrb
fsubl
mov
add
movsb
inc
or
pop
mov
xor
or
nop
sub
popa
push
push
or
jbe
std
sub
test
or
nop
mov
xchg
sbb
add
jecxz
mov
xchg
xchg
jecxz
xchg
out
rolb
dec
cmc
or
sub
push
or
push
out
add
push
mov
jl
loop
mov
mov
cmpb
or
pusha
sub
push
fucomip
mov
ret
xchg
test
cltd
add
or
jecxz
sbb
out
test
xchg
pop
jo
test
mov
mov
sbb
rolb
xor
xchg
ljmp
xor
out
push
or
jg
pop
pusha
lcall
mov
and
mov
orb
inc
xor
or
cli
mov
mov
or
ja
mov
and
sbb
inc
xorl
lods
cmp
and
mov
shlb
sbb
push
cli
pop
add
and
jl
cmc
shlb
daa
or
mov
mov
mov
mov
and
loopne
xchg
neg
mov
push
inc
push
adc
cmc
xchg
stos
notl
mov
aam
add
clc
sub
rcll
scas
in
or
mov
shr
mov
divb
pop
daa
xor
jmp
dec
add
or
insb
xchg
lods
pop
int
insb
add
repz
mov
mov
add
incl
stc
outsb
push
mov
stc
loope
and
add
mov
sbb
jecxz,pn
sbb
pop
push
add
and
int
inc
aad
out
xchg
sbb
sbb
nop
add
call
sarl
out
sbb
movsl
pop
fisubrl
xlat
xchg
jmp
jg
insl
loopne
and
fbld
test
mov
loopne
xor
mov
ss
pop
incb
shrl
add
outsb
xor
jg
adc
movsl
out
loopne
adc
adc
mov
add
pop
inc
cmp
test
adc
cld
arpl
cmpsl
outsb
clc
mov
adc
addl
shlb
add
mov
add
test
add
outsl
or
imul
add
mov
cmc
adc
aaa
add
adc
pop
xchg
xchg
loopne
mov
mov
out
fisubl
aad
or
inc
adcl
aad
and
js
sbb
aad
xchg
inc
or
fisttpll
or
call
mov
sbb
mov
movsl
in
add
xchg
mov
push
or
add
decb
or
xchg
cmp
fcompl
cld
or
add
imul
push
and
mov
jecxz
je
dec
inc
in
roll
cs
jle
sar
pop
mov
or
or
adc
out
ss
or
das
out
or
xorl
and
out
pop
std
jg
pop
sub
sbb
fcom
adc
or
sub
insb
lret
adc
nop
test
jno
push
lds
ret
mov
sub
adc
outsb
xchg
jmp
clc
mov
rolb
cmpsb
xchg
fidivrs
add
loope
add
pop
rorl
rcrl
outsb
sub
imul
push
out
add
stos
nop
inc
xchg
push
jmp
aaa
mov
sub
les
or
imull
sub
fmuls
push
cmpsb
popa
add
movb
scas
xchg
and
or
sub
inc
pusha
dec
or
adc
pop
mov
xor
shrb
stos
pusha
inc
jne
adc
sbb
or
adc
aam
shrl
cld
mov
inc
jno
pop
aaa
xor
inc
sbb
insl
adc
nop
pop
sbbb
test
add
aaa
loopne
inc
inc
mov
lock
outsb
fcmovnbe
push
fldl
push
sahf
jmp
outsl
fildl
js
or
xchg
push
sub
rorb
jge
sub
cmp
inc
cmc
sbb
repz
dec
pushaw
cltd
push
inc
add
fbld
sub
dec
aad
jle
loopne
arpl
loopne
popa
jbe
cmp
xor
inc
mov
andb
sub
cli
incl
add
pusha
dec
mov
mov
or
fucomip
jge
xchg
data16
nop
jecxz
mov
adc
cs
pop
mov
shll
mov
add
adc
and
sub
push
mov
pop
add
inc
into
mov
std
rcrl
mov
call
inc
outsl
mov
cmp
out
and
push
pusha
shlb
hlt
xchg
and
cmp
xchg
push
xchg
push
enter
pusha
adc
mov
jne
pop
orb
lea
mov
stos
xor
mov
inc
cmpxchg
pop
mov
fildll
jns
push
aaa
and
xlat
fsubrs
cvtps2pi
incl
jge
add
cmpsb
loope
adc
add
push
adcl
add
in
scas
hlt
lock
add
lcall
inc
shlb
scas
add
add
push
rcl
push
pushl
addb
gs
and
mov
inc
imul
shlb
mov
mov
rcrb
jns
or
cld
fisubl
mov
popa
mov
mov
mov
popf
mov
rclb
or
inc
imul
inc
adc
aad
rcrb
mov
rorb
or
call
imul
fidivrs
shll
mov
pop
mov
icebp
mov
jmp
clc
and
stos
test
add
xadd
movsb
std
pop
mov
add
mov
mov
xor
sbb
inc
mov
push
dec
clc
push
ds
or
push
lock
mov
or
lods
sahf
incl
outsl
in
in
dec
gs
inc
inc
roll
mov
mov
imul
call
cli
mov
jo
pusha
sbb
add
lret
lods
inc
std
adc
mov
fcmovnu
add
lret
inc
std
sbb
lods
add
and
jno,pn
push
sub
in
dec
stos
add
xor
fdivr
orb
sub
and
inc
out
and
xor
jecxz
fiaddl
rorl
push
movsb
mov
push
adc
or
iret
inc
fistpll
cmp
and
or
loopne
push
aaa
inc
shll
mov
push
adc
das
insl
add
in
mov
mov
test
or
pop
aas
nop
push
pusha
sub
add
fsubrs
and
les
add
push
inc
fcoml
mov
stos
inc
test
fisttps
sub
or
popa
fs
pop
mov
lcall
mov
mov
or
cs
and
lods
inc
cwtl
lods
add
mov
rcrb
dec
cli
push
call
xlat
mov
mov
inc
aas
and
lods
or
roll
xor
aam
pop
push
cmp
and
push
lcall
das
and
push
add
cmp
out
in
push
push
aam
xor
inc
insl
arpl
pusha
or
or
jl
xor
lea
adc
xor
add
and
sbb
lods
mov
adc
xor
xchg
shll
mov
mov
jo
rorb
add
push
lock
pusha
or
in
push
call
icebp
adc
nop
out
sbb
into
jno
lods
xchg
fmuls
sbb
xor
mov
loopne
or
cmpsb
xor
mov
inc
pop
sbb
mov
or
int3
xor
sub
insb
add
adc
cmpsb
jmp
fmul
mov
push
push
lds
outsb
mov
loope
adcl
or
inc
sarb
je
shl
pop
test
jle
mov
xchg
or
verw
mov
test
xchg
dec
sub
pop
mov
out
and
lret
add
push
sub
cltd
mov
xor
loop
nop
addl
mov
sub
pop
mov
in
and
fldenv
cs
sbb
or
push
fstl
lods
imul
jo
add
inc
lds
adc
sbb
add
inc
add
int3
add
pop
imul
lea
mov
xchg
mov
testb
push
call
mov
aad
xchg
jnp
inc
testl
sbb
jbe
movsl
dec
mov
sbb
push
loope
jb
add
in
add
mov
sbb
inc
aas
adc
lods
loop
and
repnz
subl
or
add
rorb
sbb
pushf
clc
push
outsl
shrb
xor
sbb
lods
pop
mov
cmc
ljmp
in
pop
xchg
in
or
push
scas
mov
into
ds
sbbb
test
test
iret
adc
push
das
shlb
out
into
add
inc
mov
mov
in
pop
fisubrl
sbb
dec
pop
pop
add
xorb
out
call
dec
and
push
and
andl
aam
insb
aad
mov
es
aas
cmc
and
and
push
pop
cwtl
mov
out
in
in
icebp
add
xchg
sub
jg
mov
sub
repnz
les
add
lods
add
pusha
cmpb
mov
sbb
xor
and
or
inc
mov
xchg
mov
pop
es
sub
sub
lds
adc
mov
dec
push
rolb
fucom
add
dec
or
cli
fistl
adc
inc
rcll
ret
jne,pn
mov
or
adc
lahf
adc
in
xchg
outsb
nop
or
fstp
cltd
rcrl
test
lods
xchg
ljmp
mov
lods
add
inc
sub
or
call
popf
fisubrs
cwtl
outsb
test
or
jge
push
fucom
push
stos
fcoms
cltd
je
outsb
aad
mov
pop
filds
xor
inc
sbb
push
stos
aad
mov
lods
mov
dec
or
xorl
inc
scas
rcrl
aaa
scas
cmc
gs
call
loopne
ret
in
lods
push
or
jno
test
push
in
icebp
mov
insb
sub
outsl
adc
sarl
repnz
adc
fwait
add
mov
and
movb
in
and
jp
lds
mov
or
push
cmp
xor
sbb
outsb
in
das
inc
insl
pop
xor
add
aad
shll
pop
mov
cmp
ljmp
sub
mov
lods
xor
outsb
jecxz
or
inc
add
or
cmpsb
inc
in
outsl
fdivl
lcall
mov
and
inc
add
and
push
out
shrb
les
test
mov
sbb
mov
pop
rcrb
push
mov
bound
popa
xchg
sarb
scas
sbb
sbb
mov
add
mov
mov
mov
in
mov
shll
jo
in
subb
mov
jg
pop
ret
inc
pop
hlt
cmp
loope
sbb
add
inc
push
cmc
bswap
sub
insl
stos
adc
vpmullw
add
jmp
out
fistpll
dec
leave
cmp
and
sbb
rorw
fucomi
loopne
int
int
and
pop
pusha
inc
mov
or
push
mov
and
movsl
outsl
mov
dec
in
cmp
gs
mov
fucomip
push
test
outsb
jb
or
sbb
sbb
xor
inc
push
mov
inc
pusha
pop
addb
lea
xor
outsb
ss
xchg
mov
xor
out
or
xor
or
mov
cwtl
and
jnp
call
jno
or
dec
and
xchg
jne
adc
mov
mov
insb
loopne
inc
sub
pop
add
pusha
sub
mov
mov
push
insl
or
movsl
daa
jbe
daa
cmc
pusha
or
dec
inc
jbe
rorb
sub
push
andb
mov
popa
add
arpl
shr
int
push
arpl
push
fisubrl
adcb
cltd
or
push
lret
movsl
insl
or
xor
or
or
jle
in
fcomi
adc
or
ret
pop
orb
gs
jne
movsl
pop
mov
mov
loopne
lea
sub
pushf
sbb
rolb
arpl
mov
mov
and
out
mov
cmp
test
mov
or
push
mov
int3
ficompl
lods
lea
push
sbb
jle
pop
popa
das
loopne
pop
and
std
call
pop
push
out
jecxz
inc
lods
scas
and
movsb
std
cld
sbb
mov
jge
mov
sbb
add
mov
popf
push
insb
or
lods
aad
xchg
mov
jge
bound
hlt
mov
mov
dec
icebp
movsl
jmp
or
cmp
cmp
shrb
bound
push
pushfw
inc
icebp
mov
movsl
xlat
and
lahf
lods
inc
movsl
fisubs
adc
adc
mov
ljmp
or
xor
inc
pop
mov
mov
mov
out
fnstsw
enter
pusha
aaa
sahf
pop
adc
fbld
js
xchg
and
push
mov
pushf
add
call
jne
in
popa
ret
xchg
and
add
mov
rclb
mov
inc
cmpb
inc
and
mov
or
or
and
insl
mov
addl
mov
clc
mov
fidivl
mov
popf
movsl
clc
lods
ds
mov
mov
shlb
mov
pop
les
sub
movsl
and
lock
mov
mov
icebp
adc
in
aaa
cli
add
fidivs
jg
loopne
pop
addl
andl
icebp
push
and
loop
mov
add
mov
jg
outsl
mov
and
mov
nop
rolb
and
mov
test
push
pop
stos
stos
sbb
faddl
fadds
pop
xchg
or
pop
ljmp
divb
and
ljmp
out
test
daa
aam
mov
and
mov
add
lock
mov
outsl
push
add
add
jns
inc
jmp
nop
adc
adc
mov
jbe
mov
jecxz
dec
out
das
loopne
push
imulb
rcrl
jge
jo
add
mov
add
incl
js
jno
xchg
mov
pop
jb
int3
and
mov
insl
mov
dec
push
das
sub
xor
inc
lcall
andl
ret
push
xchg
inc
jne
imul
add
mov
xorl
insl
adc
pusha
xor
stos
aam
pop
xchg
or
test
test
clc
xchg
popa
sbb
pop
mov
lcall
adc
adc
adc
push
test
mov
and
pop
call
add
clc
fisttpll
pop
lock
xchg
add
pop
mov
roll
mulb
jmp
and
mov
or
repnz
icebp
decl
or
fwait
mov
mov
fisubrs
xchg
icebp
inc
push
mov
std
mov
sbb
clc
outsb
xor
adc
inc
out
mov
je
dec
lret
push
add
jnp
dec
aam
adc
xchg
cli
dec
fwait
jo
sbb
sarb
lods
lock
add
push
popa
or
sti
fisubs
ret
cmp
movups
xchg
pop
pop
sbb
inc
mov
insb
fildll
add
pop
or
outsl
add
outsl
shlb
addb
push
fildll
movsb
push
insb
jo
cwtl
enter
mov
sarb
xchg
mov
xchg
popa
test
outsb
das
push
fiaddl
movsb
dec
xor
nop
das
mov
jo
add
gs
stos
dec
vmovmskps
push
pop
addb
mov
ja
xchg
outsb
mov
sarb
lock
xchg
orb
mov
fdivl
scas
or
sbb
cmp
aad
or
loope
rcrb
mov
aaa
js
mov
es
push
stos
sub
cld
out
mov
mov
add
pop
add
jo
and
push
ret
test
xchg
jge
mov
mov
out
into
xchg
xor
mov
filds
sub
push
xorl
ffreep
rorl
xchg
nop
mulb
out
cmp
aad
cmp
test
sbb
sub
xorl
aam
xchg
ss
cmp
in
test
lods
xor
das
pop
pop
mov
lea
xlat
sbb
cmp
les
lock
push
lea
mov
js
jecxz
andw
divb
sbb
aaa
cs
add
push
mov
jg
pop
std
std
decl
filds
decl
inc
sbb
ljmp
pop
test
imul
ds
insl
jecxz
jne
clc
and
push
fcmovnb
inc
jg
jae
ret
icebp
inc
fs
out
adc
adc
fidivrs
push
call
mov
ljmp
test
std
add
or
dec
sub
or
adc
in
data16
orl
and
fdivrl
sub
outsb
push
jns
movsb
add
fcoms
pop
dec
inc
jg
lea
and
mov
inc
icebp
and
shll
mov
inc
add
add
sbb
and
add
aas
fcoms
xchg
in
inc
mov
mov
sbb
roll
mov
nop
mov
cs
sbb
sub
push
jo
dec
mov
adc
cmp
adc
mov
inc
mov
mov
insb
loopne
xor
dec
out
jg
outsl
add
and
lods
and
scas
push
mov
mov
subl
rclb
or
fstpl
jge
dec
cmp
jl
xchg
insl
pop
mov
adc
popf
or
adc
rcrb
push
rol
sbb
fldl
lods
or
enter
or
aam
das
pusha
scas
add
or
push
jg
cmp
add
pusha
push
adc
stc
or
push
scas
sbb
out
orl
jo
sub
lea
adc
jg
mov
popa
adc
cmc
pusha
jo
vmaxss
lock
fwait
xchg
mov
mov
sub
outsl
mov
iret
movsl
inc
lods
sub
inc
movsl
in
adc
xchg
insb
inc
pusha
es
mov
repz
sbb
sti
shlb
ffree
pop
lock
and
add
inc
js
add
push
push
js
inc
rcr
dec
or
aam
sub
icebp
mov
lea
mov
mov
call
xor
mov
add
push
inc
push
inc
stc
push
loope
xchg
jl
add
pop
stc
insb
clc
push
stc
push
rorl
icebp
arpl
dec
stos
lods
stos
push
adc
add
sub
pop
dec
loope
sbb
sub
mov
fidivl
shl
icebp
test
fidivrs
xchg
stos
lea
xor
cmp
insb
mov
mov
pusha
out
add
xor
xlat
sbb
or
faddp
cmp
mov
mov
sbb
and
insb
ffreep
or
or
ret
push
cltd
add
jle
adcb
add
cmpsb
cmpsl
push
sub
or
mov
mov
or
sbb
popl
mov
mov
jne
jne
xchg
stc
lods
mov
jne
push
fwait
and
aad
add
or
lea
scas
loop
iret
sbb
in
rcrl
or
inc
fmuls
jg
and
dec
add
pop
nop
fldcw
sbb
rcrl
inc
push
push
dec
cmp
fisttpl
pop
ret
mov
pop
test
push
subb
mov
dec
fsubrs
sbb
dec
mov
in
sub
push
flds
push
jae
adc
and
seta
inc
adc
push
ficoml
sbb
jge
andb
aad
shr
stos
outsl
inc
insb
sbb
test
ljmp
jp
fs
or
push
add
xor
lods
call
pop
fsubp
xchg
mov
mov
lods
jbe
outsb
aam
adc
mov
in
test
inc
std
sbb
gs
mov
pop
in
mov
lock
cmp
testb
mov
mov
pop
adc
mov
push
aam
add
or
mov
or
sub
pop
sbb
dec
fdivs
das
insb
cmc
ret
push
rclb
inc
jno
pop
adc
rorb
sbb
dec
sbb
les
push
mov
data16
repz
push
mov
push
push
mov
sti
pop
push
test
push
inc
and
mov
sbbb
andb
rcrb
sbb
andb
jbe
mov
mov
sahf
lods
mov
adc
out
pcmpeqd
shlb
push
adc
repz
jnp
adc
pop
stos
mov
dec
push
sub
loop
flds
pop
ss
inc
fldt
and
or
int
outsl
test
pop
fidivrs
popa
inc
fwait
insb
shrb
or
rcrl
cltd
pop
add
add
shll
rcl
addb
cmp
add
mov
repz
lea
rcrb
sbb
pop
cltd
outsl
lea
lds
les
loop
inc
mov
cs
cmp
in
mov
rclb
or
and
mov
sub
mov
sahf
or
or
mov
incl
je
cmp
jne
push
push
pop
andb
les
xchg
ret
adc
add
dec
inc
aad
add
fmull
icebp
add
pusha
sbb
mulb
loopne
add
pop
add
add
pop
test
sarl
or
add
in
pop
loope
mov
jl
sub
sbb
popl
and
xchg
push
push
jne
sub
iret
sbb
push
test
mov
add
sbb
fdivs
nop
sbb
add
loope
testb
aad
arpl
adc
outsb
fwait
shrb
adc
sti
or
inc
inc
adc
out
loopne
xor
out
sub
inc
das
inc
sbb
and
ret
data16
mov
mov
push
and
or
or
push
sti
rorl
sub
mov
or
sbb
push
in
popa
xor
pop
mov
lahf
ret
mov
clc
push
mov
ret
popf
jo
dec
xchg
xchg
push
and
shrb
popa
shrl
push
nop
loope
xor
lahf
test
mov
push
dec
or
mov
jg
xor
or
dec
inc
xor
test
adc
and
inc
xor
clc
in
or
loope
or
mov
sub
push
jbe
add
add
push
jecxz
aam
loope
or
popa
or
pop
mov
addl
ljmp
shr
xchg
pop
loope
sub
jae
add
push
mov
xor
mov
jo
sahf
icebp
mov
mov
mov
xchg
pop
sub
inc
xor
int
sub
orb
inc
sub
int3
xorb
xor
inc
add
pop
sub
and
xor
cld
add
shll
in
pop
add
roll
xor
push
insl
xchg
add
and
mov
xchg
jp
sub
xchg
and
hlt
add
mov
roll
cmp
add
test
mov
mov
std
notb
inc
or
add
rorb
test
pop
pop
in
xchg
or
repnz
fldl
pop
mov
add
mov
mov
push
cld
aaa
xchg
loop
addb
inc
lahf
pop
scas
push
pop
mov
pop
cmc
ret
test
rcl
xchg
lods
pop
aad
and
adcb
or
mov
push
sub
outsl
mov
icebp
popf
lar
and
aaa
pusha
and
fistps
pop
push
js
add
js
xchg
xchg
out
mov
and
ret
mov
rorl
and
or
orb
adc
jne
rcrl
fisubrl
cmp
jbe
sbb
les
test
in
roll
gs
loope
dec
and
bound
scas
aam
outsb
adc
orb
loopne
addl
adc
jmp
or
sub
pop
mov
sbb
add
xchg
xor
xchg
sub
pop
add
pop
jmp
cmc
test
scas
nop
mov
mov
in
mov
push
inc
inc
aaa
insl
add
test
ret
mov
mov
sbb
loop
test
ret
leave
add
adc
add
sub
or
jmp
push
sbb
pusha
sub
sbb
xchg
mov
dec
aam
xor
stos
mov
ss
mov
xor
or
fwait
test
hlt
rclb
mov
inc
shll
and
sbb
xorb
add
mov
hlt
pop
and
push
cmpsb
in
and
test
nop
rcrb
mov
repnz
stos
mov
jmp
jo
test
mov
sbb
add
push
mov
mov
mov
cs
adc
sarl
xchg
and
add
xchg
jbe
pusha
daa
pop
movsb
sbb
lcall
sub
rorb
sahf
or
mov
lea
fstps
aad
add
sub
add
divb
outsl
out
aas
mov
lret
fsubs
test
mov
rcrb
fdivs
stc
and
cwtl
sbb
jo
push
xor
push
insl
sbb
je
push
sbb
inc
mov
jge
push
push
jl
pop
inc
adc
and
jmp
inc
add
das
push
xorb
test
fiadds
hlt
sub
clc
icebp
ret
add
ljmp
stos
jmp
push
les
mov
jg
lds
fnsave
sbb
jno
add
jl
loopne
ljmp
adc
cmpsl
cmc
or
adc
mov
lea
jbe
outsl
or
sub
jb
hlt
mov
push
xchg
xchg
mov
pop
aad
hlt
push
or
cmp
mov
outsl
and
sbb
push
xor
mov
cmc
adc
outsl
cmpsb
repz
adc
cli
nop
mov
popa
andb
lock
jo
adcl
pusha
xchg
andb
mov
push
push
ljmp
call
mov
xchg
adc
sti
dec
rcrb
push
jmp
mov
sbb
inc
mov
orb
dec
int
or
adc
ljmp
pusha
cltd
dec
push
sub
mov
aaa
pop
shlb
cmc
test
sub
stos
mov
outsl
pusha
add
jecxz
fnstenv
push
loop
jne
mov
push
pop
xor
mov
xchg
push
mov
push
sub
sub
or
push
adc
xchg
lods
lds
test
fistpl
add
sti
mov
or
icebp
rorb
mov
push
lods
std
test
loopne
adc
sbb
mov
adcl
jne
push
sarl
arpl
adc
bound
cltd
adc
mov
inc
add
push
imulb
aam
pop
sbbb
xchg
cs
mov
icebp
pop
or
mov
or
pop
js
pop
add
mov
test
or
mov
jo
std
aad
loope
data16
push
dec
mov
scas
cltd
imul
pop
xchg
or
outsb
rolb
or
pusha
cmp
mov
stos
dec
add
fsubl
pop
push
mov
aaa
mov
movb
add
inc
add
mov
mov
adc
cmp
add
fs
pop
xchg
cmpsl
cmpsb
or
sbb
sbb
mov
mov
adc
andl
jmp
fs
xor
add
mov
and
arpl
mov
popf
cmc
repz
sbb
imul
cwtl
cmp
push
jecxz
inc
ss
push
and
add
dec
jnp
xchg
lds
in
test
cmp
fcomp
mov
add
push
imul
push
mov
shll
add
mov
jne
inc
xchg
aaa
adc
mov
push
inc
or
lock
mov
cmc
xchg
sub
rcrl
pop
mov
out
pusha
xor
push
jbe
rcrb
add
fisttps
or
movsl
mov
aad
cli
add
aad
data16
mov
mov
lock
sbb
sbb
add
jae
pop
push
scas
xor
out
fistpl
lea
or
aas
jo
nop
nop
push
test
mov
pop
ljmp
jo
push
jb
fidivl
and
cld
pop
mov
movsb
mov
inc
push
push
xor
sbb
adc
add
pop
orb
lock
jo
sbb
sbb
push
adc
bound
or
cmp
cli
lea
sti
mov
mov
cli
lock
mov
mov
loope
pop
push
sbbl
xchg
sub
out
idiv
xchg
insl
std
insl
and
sbb
push
xorb
add
cwtl
sbb
int
push
jg
out
jg
or
mov
adc
jo
and
call
aam
xor
xchg
xchg
sub
sbb
inc
push
into
shrl
or
cwtl
decl
cld
sbb
xor
push
shl
aaa
push
mov
rorb
mov
sti
push
mov
cld
and
adc
mov
adc
cwtl
rolb
add
add
or
mov
int3
adc
lock
das
push
add
mov
jne
mov
mov
mov
add
aad
and
icebp
jg
fists
clc
movl
outsl
into
and
xor
jge
pop
adc
shrl
rcll
je
dec
adcl
xchg
aam
mov
fstpl
mov
daa
shlb
scas
mov
push
xor
or
out
movsl
jbe
inc
and
out
rolb
insb
pop
add
add
pushf
mov
fs
jno
imulb
lret
lds
add
dec
lock
outsl
lcall
sahf
notl
mov
test
data16
fst
shl
mov
add
jle
addb
movsb
test
sub
cltd
or
loopne
rcrb
or
rclb
xchg
push
add
cmp
cli
pop
test
add
sub
cmp
icebp
push
aas
jo
adc
xchg
push
adc
and
xor
cld
fistl
roll
ss
sub
inc
xchg
mov
add
fldl
sbb
mov
mov
stc
lods
cs
add
int
push
insb
mov
test
xlat
or
mov
fucomp
or
test
mov
adc
insl
test
fwait
lock
out
in
push
rcrb
add
sub
rorl
test
mov
mov
xor
adc
fadds
inc
gs
and
pop
pop
divl
adc
pop
sbbb
sbb
daa
mov
test
adc
movsl
addb
nop
call
sub
fldl
push
inc
mov
sub
xor
fsubrl
xchg
enter
andl
sbb
es
data16
rorl
mov
jge
add
cmc
inc
lock
jne
std
cmpsb
movsl
sbb
or
sbb
fcompl
rcrl
sbb
mov
fisttpl
test
inc
std
lds
push
sub
add
or
add
lcall
jecxz
or
popa
sahf
add
ret
mov
hlt
sti
movsl
jg
add
cltd
cmp
add
dec
cld
or
sub
inc
sub
pop
push
lods
mov
add
xor
nop
jnp
subb
and
xchg
inc
sbbb
pop
es
xchg
aam
mov
or
inc
aad
inc
mov
cmc
lret
pop
mov
xor
adc
testl
dec
sub
add
outsb
mov
mov
cmp
dec
sub
loop
test
ficoml
inc
mov
mov
nop
lds
mov
mov
outsb
rolb
xchg
jo
mov
cli
jbe
or
or
add
loopne
pop
or
inc
xorb
je
sbb
nop
sub
and
sub
js
mov
mov
rolb
inc
push
lods
loop
faddp
testl
cmc
inc
add
das
sub
stos
add
mov
sti
sbb
xor
or
call
pop
pop
adc
and
push
xchg
out
pop
loop
and
mov
testb
sbb
xchg
in
clc
fsubs
inc
cmp
pop
mov
fcmovnu
aad
xchg
addb
out
push
cli
divb
sbb
push
and
and
push
lock
loopne
lahf
adc
push
jecxz
mov
loopne
jge
mov
push
inc
fwait
mov
push
mov
mov
ja
aam
sub
lret
shlb
out
mov
push
and
fnstcw
sbb
push
dec
inc
or
or
cld
or
daa
ja
andl
push
cmp
inc
aad
push
icebp
cmp
mov
fstpt
or
gs
std
cli
test
jp
add
sbb
aaa
xlat
shll
or
sub
dec
testb
jnp
inc
cmp
adc
stc
lcall
aam
mov
add
mov
mov
inc
mov
lock
pop
mov
imul
fmuls
pusha
mov
ljmp
mov
movsb
jge
mov
or
sub
and
sub
xor
inc
cs
inc
add
test
aaa
scas
or
pusha
push
or
filds
ljmp
fimull
ja
mov
sbb
and
clc
push
inc
outsl
pop
scas
xchg
jmp
mov
stos
mov
sub
les
pusha
je
jl
div
jge
sub
btc
shlb
mov
repnz
xor
jg
sbb
dec
js
push
rcrb
test
pop
add
pushf
add
cmc
addr16
inc
dec
das
mov
inc
iret
pusha
push
mov
cltd
aad
outsl
jge
into
add
movsb
je
inc
icebp
pop
loopne
sub
pusha
add
loopne
outsl
xor
and
mov
lds
das
mov
and
add
pop
addl
cmp
popa
xor
mov
mov
push
adc
or
aad
mov
mov
shlb
push
test
push
lods
inc
mov
fistl
aas
iret
add
mov
lds
outsl
pop
add
push
je
sub
mov
std
and
sub
pop
aad
inc
and
or
inc
pop
mov
shlb
add
jle
call
mov
adc
pop
or
sub
sbb
pop
and
rclb
jo
pop
ret
insb
outsl
cmc
dec
call
mov
or
xor
stos
roll
js
loopne
adc
xchg
lcall
add
dec
outsl
inc
cld
mov
and
xchg
mov
insb
loopne
or
cs
adc
insl
add
incl
roll
add
cmp
hlt
mov
daa
sbb
add
test
push
dec
pop
bound
and
add
push
loope
mov
add
xchg
jmp
jg
fbld
push
mov
mov
jns
sbb
rcll
or
pop
push
and
fldt
rcll
and
lods
add
sub
rcrl
cld
idiv
ffreep
and
add
sbb
xor
inc
add
push
mov
fucomip
daa
rclb
add
aas
dec
dec
fnstsw
adc
adc
adc
lea
cmp
pop
sub
pop
stc
lcall
and
insb
in
push
movsb
adc
fildll
shrl
mov
add
std
jle
and
mov
pop
loopne
or
xor
or
gs
sub
aaa
jne
add
push
in
stos
rolb
imul
lea
pop
push
sbb
pop
xor
adc
shrl
mov
sbb
push
out
mov
sbbb
ljmp
pusha
sbb
aam
std
jo
cmp
push
test
andl
or
push
ljmp
jno
xor
adc
rorl
add
or
cmp
faddl
cld
and
pop
lahf
fcompl
insl
inc
and
xor
dec
leave
mov
clc
movb
nop
jne
sub
pusha
sub
jg
push
xchg
xor
push
aad
and
sbb
lea
inc
or
push
inc
push
mov
sub
lock
add
roll
das
add
sub
dec
aaa
xor
jl
roll
adc
xor
push
cmc
dec
icebp
loopne
xor
mov
add
jo
push
js
sbb
xorl
inc
dec
dec
xor
outsb
sti
sbb
push
aaa
inc
mov
jne
adc
push
sarl
jmp
loop
xchg
adc
mov
adc
add
in
stos
outsb
xor
xchg
mov
fildll
mov
sahf
adc
adc
xchg
jmp
push
inc
mov
movsl
lds
clc
push
inc
mov
adc
pop
aaa
loopne
xchg
sbb
xor
xchg
les
mov
mov
xor
mov
push
in
enter
fmuls
jge
outsb
in
mov
push
fchs
pop
popa
cmpsl
jno
pop
add
add
imull
mov
jecxz
loopne
popa
fs
and
push
mov
addl
std
or
loope
dec
push
sbb
pop
sbbb
arpl
or
stos
jne
nop
xchg
lods
mov
or
or
lea
and
inc
mov
testb
and
inc
movsb
mov
scas
lock
xchg
pop
pop
jp
dec
movsl
cmc
lds
pop
mov
or
dec
pop
fwait
nop
stos
xchg
ret
andb
add
les
leave
in
lods
mov
rcrl
adc
mov
sub
es
aad
inc
icebp
add
out
stos
lods
rorb
adc
jle
roll
imul
dec
cmp
xor
in
fisttps
fiadds
paddw
push
mov
add
pop
add
rorb
fstps
jecxz
das
mov
shl
add
in
sub
push
dec
insb
mov
mov
adcb
fisttpl
add
icebp
mov
add
addl
xchg
out
loop
and
sbb
rorl
pop
dec
lods
call
xchg
sub
aaa
addb
js
push
mov
insb
jo
and
in
add
fdiv
movsl
fildll
cltd
shrl
add
push
add
sub
and
mov
jmp
movb
inc
inc
testl
test
loope
push
sub
xchg
lods
jmp
or
pop
pop
ljmp
mov
dec
and
mov
mov
fdivl
add
les
enter
call
call
fidivs
cltd
pusha
or
call
sbbb
mov
lock
test
inc
jo
subl
nop
scas
mov
das
sbbb
pop
dec
pop
loopne
pop
ds
mov
fiadds
mov
mov
add
xor
cmp
push
mov
jge
mov
cmp
aad
subb
jo
test
and
push
das
rcll
xor
popa
adc
push
push
dec
cmpsb
mov
mov
shll
xor
es
adc
xlat
pop
mov
adc
lds
lock
jns
dec
push
lock
cwtl
and
xchg
jno
add
sub
mov
mov
jne
inc
jns
call
test
jg
lock
out
adc
clc
or
adc
cmp
pop
or
mov
fistl
sub
push
ds
add
out
push
mov
mov
fsubrs
test
or
pop
stos
mov
xor
into
cld
ljmp
mov
cs
mov
cmp
jno
cmp
mov
movsl
inc
js
push
aam
adc
lock
add
shll
mov
sbb
cwtl
into
test
sbb
and
xlat
loopne
adcb
jl
add
sub
lock
pop
xchg
inc
mov
cld
inc
ss
push
add
fsubr
pop
insl
je
adc
jo
add
bound
dec
lea
sbb
sub
enter
shl
sub
shlb
pop
roll
pop
cli
mov
adc
push
dec
pusha
push
popf
sbb
andb
push
mov
inc
xchg
mov
loop
lahf
aad
xchg
roll
pop
clc
das
push
xchg
lahf
sbb
aaa
pusha
add
add
incb
out
pushf
loope
mov
test
dec
and
in
and
lods
loop
and
mov
push
scas
stc
sub
popl
decb
cmp
add
adc
mov
popa
add
or
jo
outsl
hlt
sub
adc
or
mov
out
psubb
lea
dec
aad
push
mov
insl
mov
jmp
aam
pusha
or
add
inc
jbe
mov
xchg
pop
sub
rcl
pop
dec
xchg
imul
dec
and
push
stos
add
mov
dec
dec
add
add
xor
jo,pt
or
cli
sbb
cmp
pop
inc
jb
out
fnstsw
push
cmp
and
mov
das
mov
insb
cmp
mov
and
incb
push
out
lods
fnstsw
sbb
subb
scas
mov
mov
jno
jmp
dec
inc
lea
dec
mov
push
add
mov
mov
dec
cmc
pop
pusha
arpl
push
xor
or
add
and
mov
jae
dec
insl
mov
xor
gs
and
loopne
inc
add
mov
add
repnz
fwait
and
pop
pop
addb
ds
jb
or
pop
and
xor
mov
adc
or
xchg
mov
test
sbb
subl
or
push
adc
cmp
pop
and
repnz
or
lea
sub
add
or
pop
movsl
ret
sub
std
jle
test
loopne
and
cld
add
addb
sahf
icebp
push
add
popf
ss
mov
sbb
insl
adc
mov
sub
mov
adc
cmp
test
mov
in
mov
or
adcb
sahf
or
xlat
aaa
cli
pushf
negb
ljmp
pop
enter
clc
or
stc
sbbb
gs
call
out
cmp
cmpsb
add
add
add
cmpb
xchg
notl
dec
inc
xor
loopne
inc
stos
or
push
cmp
jg
jg
cmpsl
pop
xor
insb
xor
rcrb
add
mov
ds
roll
jecxz
int3
aas
inc
mov
xlat
inc
pop
test
add
ret
push
inc
add
shlb
jg
pusha
stos
push
lds
inc
cmp
imulb
xor
arpl
jecxz
adc
lds
fisubl
sub
push
push
inc
add
cmc
mov
cmp
or
or
add
cmp
shlb
push
push
fcomps
push
insl
inc
inc
rcl
pop
sti
in
movsl
cmc
icebp
andl
pop
push
pop
mov
enter
sti
in
outsl
fwait
mov
rolb
aad
add
mov
mov
dec
orb
call
pop
inc
aas
lock
add
shll
test
push
sub
insb
and
mov
shlb
adc
adc
sub
test
leave
popa
add
inc
sbb
and
mov
mov
insb
push
std
inc
add
stc
insl
or
call
mov
jl
add
std
mov
lea
outsl
push
in
int3
mov
xchg
sub
dec
jl
sub
or
adc
pop
and
xor
pop
push
mov
stos
popa
aad
addb
mov
mov
imul
jecxz
or
lahf
xchg
inc
subl
sbbl
jno
rcrl
sahf
pop
loopne
add
std
or
pusha
and
inc
add
push
incb
shll
test
and
dec
push
push
fwait
ret
gs
ja
lcall
cli
lods
pop
push
mov
xlat
sbb
loopne
push
sbb
pop
movsb
sbb
loopne
dec
mov
repnz
and
js
mov
test
int
lea
push
push
mov
test
shl
jno
mov
js
inc
adc
adc
filds
push
inc
imul
in
les
pop
repz
pusha
adc
adc
clc
pop
mov
pusha
and
or
xchg
test
sub
or
push
mov
or
xchg
cwtl
sbb
subb
loop
adc
and
pop
loopne
mov
mov
and
loopne
loopne
mov
sbb
fs
lds
int3
inc
pop
cli
jg
lods
push
out
adc
push
mulb
and
mov
fs
out
cmc
mov
inc
fildll
test
mov
or
push
loope
lds
mov
cs
lock
xor
js
std
sbb
jne
rclb
mov
mov
sbb
mov
or
mov
es
cld
pop
inc
xchg
sub
inc
pop
mov
sub
sub
xorl
lds
icebp
roll
std
sub
addb
add
das
pusha
js
add
bound
xor
repnz
jmp
xor
jmp
fwait
into
enter
fsubrl
nop
cli
out
jbe
mov
into
es
test
rorl
xchg
jg
sub
mov
aam
movsl
or
jecxz
or
in
push
and
dec
mov
ss
pop
das
std
movsl
or
shlb
and
outsl
push
push
push
xchg
add
ljmp
rcr
sub
outsl
lods
jbe
sbb
adc
xchg
nop
out
loop
sbb
in
inc
inc
push
jmp
sub
movsb
loopne
push
sub
imul
push
rcrb
mov
pop
pop
fistl
mov
jg
sbb
mov
and
inc
das
shll
sbb
bound
add
and
insb
fisttpl
loop
mov
in
pop
loope
cmp
imul
mov
cltd
mov
sbb
inc
push
push
imul
add
test
xchg
xchg
mov
popf
push
mov
jb
stc
jo
adc
andb
mov
adc
push
test
sbbb
lods
dec
mov
xor
mov
inc
int3
sbb
xor
or
inc
add
fsts
test
adc
dec
fnstsw
mov
xor
xor
add
int
ret
jo
and
shr
sbb
in
sub
cmpxchg
adc
dec
out
out
xor
mov
inc
test
adc
or
stos
fucomi
pop
mov
mov
pop
roll
xchg
push
push
test
jo
inc
or
dec
mov
dec
or
push
les
inc
dec
add
sub
cmp
arpl
lock
push
pop
sbb
push
mov
dec
rcl
lea
mov
adc
jmp
jmp
mov
jo
lods
push
mov
outsb
rcll
sbb
jmp
and
xorl
fstl
bound
push
ficoml
pop
mov
roll
jecxz
inc
sbb
push
mov
mov
push
pop
adc
sarb
decl
dec
out
sub
jo
mov
or
inc
inc
adc
call
push
xchg
adc
sbbl
test
lds
pushf
cltd
dec
and
xchg
and
push
mov
mov
ljmp
xchg
cmp
push
inc
xchg
movsl
add
stos
add
add
mov
adc
mov
fcomps
add
ljmp
pushf
push
or
xchg
jae
adc
popa
shrb
aas
adc
xor
mov
xor
adc
push
arpl
sub
mov
inc
xchg
mov
call
jge
adc
xchg
add
outsb
xchg
stc
ficoms
nop
push
addb
addl
push
ret
cmpsb
loopne
outsl
decl
insb
inc
insb
addb
dec
rcrb
xchg
and
mov
into
inc
sti
das
cmc
and
shrb
adc
inc
xorl
lret
jns
pop
dec
mov
mov
jo
loopne
aam
fs
pop
in
or
fmulp
mov
mov
pop
mov
mov
mov
pop
int3
sbb
sbb
pop
inc
imul
inc
add
cld
or
sub
adc
xor
cmp
add
icebp
aas
xor
incl
jmp
push
sub
mov
mov
add
inc
outsl
mov
and
cs
xor
js
mov
add
xchg
cs
mov
or
xor
mov
xchg
lcall
ret
cs
xor
adc
jmp
pop
outsb
cmpsb
es
inc
sub
scas
mov
mov
repnz
mov
xlat
loopne
lcall
sub
sbb
and
call
ret
adc
or
pop
push
cli
push
mov
cwtl
mov
shlb
jp
inc
lea
rcrb
and
or
aam
mov
mov
sbbb
push
jno
lock
test
test
push
std
adc
jg
and
mov
cmp
lds
mov
rolb
mov
or
and
cltd
lea
aad
loopne
lock
bound
and
rcll
inc
mov
das
mov
jo
sahf
hlt
add
mov
push
push
out
stos
rcr
mov
fistpll
xor
mov
add
out
add
lret
adc
sbb
mov
jg
mov
xchg
add
int
popf
ret
pop
xchg
add
add
bound
or
call
mov
push
outsl
and
xorb
int
xor
or
aad
add
mov
mov
call
les
mov
mov
insb
mov
or
loopne
push
mov
jecxz
cmpl
ret
aam
mov
push
mov
add
leave
pop
dec
lock
stos
leave
mov
popa
ret
sub
or
pop
clc
push
push
mov
bound
push
sbb
pop
test
ficoml
pop
mov
out
bound
or
sbb
add
repz
mov
and
call
add
inc
mov
dec
mov
out
jecxz
dec
fildll
push
filds
mov
movsl
mov
aas
sub
cmc
dec
add
inc
cmp
push
xor
push
fld
mov
lock
fbstp
les
xor
mov
add
cmc
sub
and
das
or
pop
pop
lea
mov
sahf
and
cwtl
jo
popf
aaa
jno
sub
mov
push
iret
imul
mov
jge
mov
iret
rorl
bound
adc
loopne
lock
add
stos
inc
cmpsb
loope
repnz
rcll
push
jg
insb
bound
icebp
fldt
adc
mov
cmc
jg
insb
add
pop
mov
mov
in
push
movsl
cs
and
pop
adc
add
stc
mov
shl
jle
divb
into
fadds
stos
repz
or
sub
mov
jo
icebp
xchg
cmc
fbstp
leave
sub
mov
lock
cmc
jo
outsb
arpl
mov
pop
or
or
pop
fistps
test
sub
psrlq
aam
lea
arpl
rcll
test
mov
and
testl
jno
cmp
and
sub
mov
pop
outsb
lods
cmc
push
pop
rcrl
les
aas
dec
or
mov
es
xchg
cmp
jmp
in
in
sbb
add
xchg
fisttpl
inc
xchg
cli
flds
stos
loope
inc
mov
je
flds
popa
add
or
lods
add
and
dec
daa
insl
movsb
testl
mov
inc
add
inc
or
push
cld
sub
inc
add
inc
or
push
xchg
in
cmp
sbb
mov
adc
loope
ljmp
pop
sahf
push
push
mov
hlt
in
nop
mov
xor
add
fbstp
loop
push
call
fidivl
popl
jbe
sub
test
mov
xchg
or
inc
push
rcl
int3
loope
sbb
sbb
das
xchg
add
inc
inc
pop
les
loope
addr16
jno
xchg
or
in
pop
pusha
mov
test
adc
sbbb
aam
hlt
add
inc
es
and
out
mov
fsts
cmc
or
int
add
sub
outsb
adc
adc
and
mov
push
rcll
mov
or
les
mov
mov
mov
push
adcl
or
add
mov
das
lea
mov
mov
and
outsb
mov
inc
xorb
aaa
sbb
adc
jg
dec
addl
outsl
insl
lock
or
sbbl
outsl
stc
daa
jmp
mov
fidivrl
xchg
add
ljmp
test
mov
lds
sbb
mov
or
imul
and
or
rorl
mov
pop
push
or
daa
pushf
cmpsb
fildll
dec
mov
loop
icebp
cmpsb
add
mov
cltd
cmp
int3
xorl
xor
ret
rol
sbb
shlb
add
and
dec
lret
int3
cmp
outsl
pop
mov
sbbl
into
mov
or
adc
adc
adc
xchg
mov
decl
adc
pushf
inc
jp
mov
sysenter
push
stos
push
ret
jo
roll
push
out
rorb
movsb
and
or
sbb
mov
xchg
mov
cld
inc
mov
out
lds
mov
adcl
lds
jns
test
outsb
sub
fmuls
sub
or
fidivrs
int
or
add
rol
mov
mov
add
sbb
addb
sysret
adc
inc
lock
jg
and
mov
inc
imul
add
inc
movsl
loopne
mov
dec
sbb
jb
push
imulb
test
mov
rclb
push
xor
ljmp
test
and
inc
lret
or
in
movsl
mov
andl
loop
fadds
mov
push
xchg
les
push
shlb
inc
icebp
or
mov
or
mov
push
loopne
addb
mov
dec
adc
or
aaa
push
stos
or
or
pop
push
filds
pop
stos
rcrb
std
outsl
adc
scas
or
movsl
jl
push
in
jae
xchg
adc
mov
outsl
fdivl
push
icebp
push
std
inc
lret
or
jo
mov
mov
loope
mov
or
decl
lods
decl
mov
loop
sub
mov
or
adc
and
jns
or
and
out
pop
sbb
xor
mov
outsl
jg
jmp
fildl
sub
sbb
sbbl
jmp
and
fcomi
outsl
inc
mov
inc
and
mov
adc
inc
inc
or
loopne
push
mov
pop
pop
rorb
or
mov
push
mov
jns
add
loopne
push
push
das
mov
rolb
mov
int3
or
pop
pop
or
fidivrl
rorb
xor
lods
pusha
scas
lock
int
push
dec
mov
outsl
sub
push
in
add
shrb
pop
sbb
fistpl
flds
leave
add
or
or
inc
orl
and
and
inc
aad
pop
fsubrs
ret
adc
or
jg
inc
sahf
rcll
inc
xor
arpl
adc
mov
or
andl
adc
add
das
push
je
sbb
lcall
aad
daa
mul
notl
outsb
xchg
sbb
sub
je
mov
sti
cs
test
jg
movsl
in
mov
mov
jge
xchg
subb
add
popf
sub
in
mov
and
loope
sbb
aam
or
and
lea
jno
mov
mov
mov
pop
shlb
add
nop
jl
mov
sbb
mov
push
cmp
insb
pop
jno
in
push
add
sub
xchg
comiss
sbb
rorl
inc
xchg
sbb
xchg
std
test
outsl
mov
fdivrl
sahf
insl
std
movsb
nop
fcmovnu
cmc
sbb
xchg
or
movsl
pop
stos
mov
jno
xor
dec
add
orb
inc
push
xchg
stos
inc
mov
or
add
xchg
and
lods
ret
sbb
and
xchg
sbb
adc
add
dec
mov
pop
lds
mov
inc
jns
or
mov
jmp
add
ss
pop
test
cli
or
shlb
cmp
pusha
ss
or
jmp
pusha
push
jmp
insb
incl
add
pop
and
out
inc
or
mov
cmp
inc
int
pop
shll
ffree
test
outsb
flds
sarl
pop
xchg
popfw
mov
jmp
sbb
or
sub
aad
aaa
or
insl
imul
inc
xor
negl
pop
shrl
imul
int3
inc
xor
cmp
or
popa
pop
inc
insl
insl
ja
mov
inc
imul
lcall
dec
push
inc
inc
imul
inc
mov
jno
xlat
aaa
lock
xor
rep
aad
sub
inc
loopne
lods
cmpb
cltd
adc
aam
insl
sbb
mov
cmovge
jne
popf
mov
mov
movsl
add
pop
sub
jge
push
in
imul
fcmovbe
add
rcll
fstpl
push
sbb
loope
push
inc
inc
aad
pop
or
fmull
lea
sbb
mov
mov
xor
mov
push
pop
icebp
xor
jne
ret
sar
mov
mov
pop
jns
push
sub
icebp
subb
mov
stos
inc
push
add
mov
xchg
jmp
push
pop
xor
sub
icebp
dec
add
and
stos
mov
add
jo
inc
pop
orb
inc
sbb
sub
pop
fidivrs
xchg
popf
subb
sti
fildll
mov
xchg
add
mov
push
dec
mov
jnp
push
std
mov
mov
add
or
mov
fdiv
and
pop
mov
mov
ret
push
enter
cmp
mov
push
nop
pushf
add
movb
je
push
add
push
rolb
mov
inc
shll
out
and
enter
jmp
test
pop
pop
test
mov
in
mov
sbb
xor
inc
push
nop
cmp
mov
insb
adc
popa
push
add
or
stos
out
mov
push
jg
dec
push
and
pushf
sub
adc
sbb
inc
ds
mov
mov
mov
adc
cltd
mov
and
and
mov
repnz
lret
adc
nop
adc
jo
jmp
aam
cmp
add
add
pusha
shl
dec
mov
leave
call
or
nop
lods
lea
mov
rcll
inc
push
inc
mov
sbb
lock
clc
pop
sbb
retw
inc
adcl
imul
vmovq
mov
add
insb
orb
push
xchg
add
clc
add
lock
sarb
add
or
xchg
or
out
pop
aad
insl
subl
clc
mov
xchg
lods
pop
push
insl
leave
loopne
add
adc
mov
mov
adc
xor
mov
mov
or
lock
aad
or
mov
lods
nop
push
mov
cmpsb
mov
add
aad
mov
lcall
jo
push
mov
cmc
call
stos
push
jbe
inc
xchg
sub
scas
outsl
mov
mov
mov
loop
inc
int
fsts
cld
aaa
pop
clc
and
add
add
adc
mov
mov
push
mov
imulb
and
add
ljmp
pop
cmpxchg
mov
add
xor
inc
pop
call
leave
rcll
inc
mov
push
sar
outsb
loop
push
add
icebp
out
cmc
movsb
sbb
rolb
adc
mov
push
dec
jmp
test
sub
and
popf
mov
mov
orb
add
mov
adc
push
icebp
mov
mov
outsb
lcall
stc
add
popf
sub
xchg
sbb
inc
aaa
mov
and
sub
add
mov
out
mov
push
jo
push
lods
or
aaa
fmulp
push
call
shlb
xchg
mov
stos
or
cmpsb
add
inc
mov
repnz
mov
fimull
push
shlb
sub
sbb
rolb
xlat
aad
mov
mov
add
pop
aam
out
adc
outsb
das
sbb
lret
lret
out
mov
xor
adc
adc
mov
jecxz
out
or
fstp
pop
mov
xorb
out
pop
mov
xchg
push
adc
ss
push
xchg
out
jmp
inc
sbb
sub
mov
andl
jecxz
mov
push
lret
xor
push
lods
add
adc
pop
mov
mov
cld
add
data16
inc
inc
sbbb
adc
sub
pop
cmpb
add
addr16
or
fmulp
mov
pop
or
dec
cmp
mov
sub
mov
add
inc
aam
pop
pop
and
jmp
addl
xchg
jb
in
cs
pop
imul
dec
fdivrl
out
test
inc
push
push
push
in
test
xchg
sbb
ss
fnsave
xchg
adc
adc
xchg
pusha
sbb
ss
call
lea
mov
lds
sti
mov
adc
push
mov
fiaddl
xor
adc
sub
flds
mov
pop
pop
aaa
popa
shlb
lods
rcll
les
sbb
mov
mov
add
popa
outsl
mov
orb
or
push
rorl
js
push
fs
and
stos
jg
add
out
ret
mov
ss
jmp
mov
enter
outsl
mov
or
cmp
cmpsb
mov
pop
and
subl
sub
popf
movsl
add
stos
and
fists
shlb
inc
hlt
inc
mov
and
shlb
filds
ss
inc
adc
inc
mov
pop
ljmp
jno
sbb
or
and
lods
andb
sbb
mov
cmp
in
fisttps
orl
ja
push
cmpb
and
adc
cmp
sbb
pop
fldl
test
stos
or
inc
adc
mov
enter
cmp
fimuls
xchg
xchg
fiadds
xchg
movsl
sbb
lea
push
arpl
ljmp
lock
sbb
call
in
bound
inc
fwait
loope
lea
rolb
cmp
xchg
lret
push
rorl
call
out
in
fidivrs
test
leave
fidivrs
xchg
xor
iret
addl
mov
pusha
sbb
sarl
mov
shlb
push
jge
push
shl
mov
popa
add
mov
xchg
cmp
sqrtps
scas
js
add
inc
mov
jmp
outsb
call
jb
mov
aad
add
add
insl
push
jmp
adc
sub
cld
scas
lea
pop
stc
cmp
adc
cmp
pushl
subb
dec
std
call
call
mov
xor
sbb
cmp
aad
fcmovnu
sbb
mov
scas
cmc
adc
movsl
mov
or
xchg
cmp
inc
cmp
push
xchg
pop
xchg
ja
test
aas
sub
adc
out
orb
mov
or
or
mov
add
mov
out
scas
cmp
stc
or
je
pop
jns
sub
inc
sub
jnp
mov
fidivl
fidivl
sbb
add
js
adcb
outsb
mov
jae
add
daa
inc
fimull
imul
mov
and
jmp
sbb
dec
or
loopne
stos
sarb
cmp
out
pop
clc
fildll
sbb
pusha
wrmsr
popa
lldt
shr
iret
sub
and
sub
or
and
or
jnp
mov
mov
jb
inc
pop
or
fcomps
pop
fs
inc
sub
mov
rclb
and
lea
or
cmc
dec
lcall
pop
leave
addl
stos
repz
repz
xchg
loope
or
pop
inc
mov
gs
jmp
or
bound
mov
aaa
add
andb
outsl
or
push
pop
xchg
outsl
std
sbb
inc
icebp
or
xor
push
push
test
mov
in
jge
or
aad
subb
in
or
aam
add
cltd
and
jl
push
hlt
ljmp
cmc
mov
mov
mov
pop
xorb
sub
pushf
jne
pusha
not
in
xchg
movsl
mov
and
sarb
push
push
jne
cmp
icebp
sbb
es
inc
mov
jne
or
lods
push
xor
inc
cltd
cmp
outsl
mov
dec
insb
call
adc
mov
cmc
pop
std
fbstp
lock
and
loopne
in
nop
push
mov
add
sub
mov
push
push
or
add
test
fcmovnu
cmp
push
mov
cld
lcall
mov
in
outsl
insl
das
mov
mov
cltd
js
mov
in
neg
outsl
ds
inc
cmp
dec
jns
cmp
aad
andb
adc
icebp
incl
xor
ds
and
xchg
inc
add
jecxz
xor
test
test
clc
and
pop
mov
mov
dec
or
add
cmc
sbbb
mov
ret
fcomp
mov
push
fistl
cs
mov
movsb
lods
cmp
das
cld
or
xor
jno
in
loop
pop
or
cmc
sub
inc
jne
std
jmp
loopne
inc
and
std
in
push
sub
pop
sub
push
nop
push
sub
leave
or
in
dec
mov
es
mov
push
cmc
pushl
pop
aam
fwait
push
and
sub
and
jns
dec
xor
popl
adc
pop
mov
mov
add
ja
in
add
jnp
fldt
push
rcrl
fistpll
das
add
sbb
sbb
imul
lock
adc
mov
adc
daa
pushl
xchg
jecxz
sub
mov
aam
pop
in
push
inc
push
add
sbb
inc
inc
mov
mov
add
and
insl
adc
movsl
mov
xchg
bound
push
mov
xor
pusha
add
es
lea
pusha
jge
incl
adc
and
in
leave
jo
std
notb
pop
nop
mov
je
bound
icebp
notb
add
insl
test
push
mov
add
jmp
dec
mov
add
push
push
push
jg
inc
imul
addl
mov
shlb
or
add
icebp
push
xor
adc
mov
ss
push
push
mov
or
push
adc
aaa
sub
xchg
pavgb
shlb
and
shrb
mov
pop
pop
inc
push
and
repnz
adc
pop
add
call
pusha
jbe
add
add
rorl
outsl
hlt
push
pop
sub
xchg
mov
push
pop
loop
adc
add
inc
mov
mov
cld
jb
xor
rclb
and
outsl
lret
xor
jge
add
inc
adc
add
mov
pop
push
inc
ds
adc
adc
test
mov
inc
xor
mov
ljmp
or
loop
lock
aaa
sbb
ja
inc
add
xlat
lock
repz
xchg
dec
stc
mov
orl
mov
aam
shll
pop
add
dec
adc
xor
loopne
jecxz
lea
add
mov
xchg
mov
push
sub
test
xor
rolb
adc
sub
movsb
add
push
xchg
pushl
rcrb
push
sub
imul
xlat
shrb
sub
subb
insl
mov
mov
dec
and
pop
lods
or
icebp
pusha
and
fnsave
add
mov
push
pop
outsl
sbb
pop
push
sbb
std
outsl
hlt
in
pop
xor
rclb
mov
test
add
pop
xchg
add
push
sub
loope
notl
xlat
rol
call
ds
xchg
rcll
lods
clc
or
cmp
cmp
test
pop
cld
dec
ret
push
fcoms
adc
fldt
mov
add
in
test
shlb
push
inc
sbbl
mov
notl
orb
add
fadds
test
mov
push
dec
push
std
xor
shll
push
adc
cmc
jbe
outsl
xchg
loope
or
xchg
icebp
in
jo
cmp
incl
and
mov
out
dec
mov
push
jb
adc
push
test
pop
mov
pop
pusha
stc
adc
jg
sub
sbb
push
and
outsl
outsl
aad
scas
loope
nop
mov
mov
stos
mov
sub
dec
cmpsb
aad
mov
sahf
mov
sbb
jmp
adc
popa
xlat
inc
sbb
xchg
outsl
icebp
mov
pop
sbb
adc
dec
inc
mov
rcrl
divb
mov
int3
jbe
cmp
pop
add
xor
mov
loope
xchg
sbb
inc
das
imul
xor
jb
aam
incl
jmp
out
add
xor
jns
in
in
stos
dec
and
data16
jg
es
and
add
mov
testb
sub
xor
or
shlb
andnps
jmp
in
xchg
outsb
shlb
lods
push
mov
and
mov
add
push
das
adc
aaa
mov
out
adc
mov
mov
into
adc
sahf
nop
jmp
or
shr
mov
sbb
pusha
jnp
add
cs
add
push
adc
incb
das
addl
sub
sbb
es
mov
lea
pop
ret
mov
inc
add
mov
inc
push
pushl
push
outsl
mov
jmp
sbb
ljmp
sbb
xchg
pcmpgtd
stos
rcrb
hlt
mov
or
das
cmc
xor
mov
or
jae
rol
xchg
stc
pop
add
inc
mov
sahf
pop
adc
jno
mov
mov
outsl
mov
int
nop
daa
and
int
subl
and
inc
icebp
mov
fwait
loope
imul
pop
xor
push
arpl
mov
sbb
adc
outsl
adc
cltd
pop
add
filds
std
pusha
push
fildl
fwait
jo
imul
and
cmp
js
push
mov
fisubs
cwtl
fsubs
push
aaa
test
add
call
and
sub
pushf
loope
fdivrp
outsl
add
ret
nop
ljmp
add
into
mov
adc
out
shll
test
les
mov
or
push
incl
sbb
pusha
dec
cli
push
adcb
jo
mov
jp
push
push
call
push
inc
lock
mov
inc
jmp
inc
lds
jp
lea
or
ror
push
fstl
js
shl
pop
xlat
aaa
adc
add
and
jg
or
xchg
dec
mov
add
rolb
rcrl
int
jp
push
push
jae
aad
mov
adc
xchg
test
pop
sub
scas
lods
push
sub
test
mov
in
push
loopne
xor
push
xor
or
and
or
push
mov
rolb
out
enter
xor
cld
adc
mov
scas
add
pop
nop
out
add
sti
cmpsb
data16
fisubrs
add
xlat
jl
jno
mov
push
mov
shll
fsubrs
stc
mov
dec
pop
test
cwtl
divl
roll
add
ret
outsb
sub
sub
add
movsl
and
and
andb
fisubl
xlat
dec
jmp
jle
loope
scas
loope
sub
add
cwtl
push
mov
in
push
cmp
jl
pop
fsubl
sbb
stc
jns
paddb
push
mov
cmp
add
fstpl
mov
sbb
pusha
leave
push
nop
push
jle
aad
sub
add
xchg
add
mov
frstor
dec
sbb
adc
xchg
lods
xchg
addb
sbb
dec
inc
jb
outsb
mov
push
pop
push
or
add
xchg
inc
or
add
loope
cmpl
mov
push
or
dec
cwtl
jae
jno
outsl
fcmovnbe
test
enter
sbb
rorl
aam
push
mov
or
add
mov
ss
adc
and
out
mov
daa
icebp
inc
in
push
sub
or
inc
inc
sti
or
rolb
add
inc
or
inc
cmp
add
inc
push
or
inc
sub
shl
sbb
dec
adc
es
not
add
mov
shrl
cs
jle
decb
subb
mov
add
cs
icebp
mov
or
jg
jle
out
mov
movb
add
in
lcall
jne
mov
mov
and
stc
push
mov
fwait
xchg
lret
ret
andb
lret
and
mov
frstor
fdivrl
mov
inc
pop
rclb
push
mov
fcoml
xor
adc
pusha
mov
insb
or
sbb
xor
push
rcll
shl
mov
mov
test
imul
or
outsl
les
aad
mov
aaa
pop
sub
sbbb
add
sbb
dec
inc
rolb
mov
xchg
repnz
es
adc
shrb
sbb
sarl
jnp
mov
incb
rorl
push
int
inc
cmp
push
mov
xor
xchg
addb
in
and
cwtl
mov
repz
icebp
inc
insl
adc
inc
jne
xchg
pop
add
mov
je
sbb
and
xchg
mov
aam
das
push
stos
mov
hlt
inc
pop
cmp
inc
pop
mov
insl
outsl
dec
add
ret
lds
cli
push
sbb
xlat
sub
xchg
icebp
xchg
clc
mov
icebp
and
mov
in
xchg
adc
rolb
jne
xlat
sbb
or
into
sub
rorb
in
cmc
insl
shl
movsl
stos
adc
xchg
test
scas
xorl
mov
jnp
and
or
bound
sbb
test
popf
jne
int
mov
xor
push
test
jp
movsb
and
pusha
jns
addr16
add
movsb
jmp
ja
push
xchg
mov
sub
outsl
aaa
lea
and
ljmp
jmp
fadds
add
mov
xor
insb
call
add
fiaddl
mov
adc
lcall
pop
mov
outsl
aad
mov
dec
and
movsl
add
and
add
inc
mov
andb
test
mov
mov
push
or
and
stos
xor
inc
movsl
and
test
pop
jmp
adc
test
outsb
push
clc
popa
pop
loope
add
xchg
xorb
cmp
cmpsb
test
aad
pop
add
leave
std
es
adc
xchg
fsubs
mov
sbb
push
stos
out
add
pop
and
and
jmp
rorl
jb
loopne
fsubrs
inc
das
add
mov
bound
inc
call
mov
lock
add
adc
inc
insl
ss
add
adc
adc
mov
loope
movb
jmp
push
in
mov
cs
add
add
outsb
pop
dec
mov
test
out
or
and
xchg
clc
fisttpl
outsl
inc
int
pop
sub
int
jmp
cli
mov
pushf
push
mov
loope
adc
mov
xchg
xchg
or
fidivs
stos
stc
sbb
add
add
add
mov
std
add
add
and
mov
ret
movb
int
adc
gs
pop
add
andl
push
pop
cld
or
xor
shlb
sbbb
sbb
mov
add
sub
sub
sub
cmp
add
or
mov
sub
jbe
mov
mov
xor
mov
pop
ljmp
mov
sbb
pop
mov
cmpsl
sub
lods
ljmp
inc
mov
daa
mov
pop
gs
rolb
dec
xlat
add
inc
inc
push
mov
scas
mov
js
ret
cmp
adc
mov
loope
nop
mov
mov
add
mov
mov
jmp
adc
jecxz
and
nop
call
aam
xchg
fnstsw
stos
call
lea
mov
shr
sub
in
ds
add
inc
add
jo
test
cltd
mov
mov
add
incb
or
cmp
mov
aaa
mov
push
movsl
mov
out
call
test
mov
in
rclb
mov
adc
aaa
dec
jge
mov
shlb
mov
sbb
inc
mov
frstpm(287
sub
mov
mov
dec
movsl
mov
push
push
shrb
lock
xor
sbb
adc
fimuls
push
mov
add
clc
or
pop
add
inc
clc
adc
lds
jg
xor
sbb
insl
adc
inc
sarb
fidivs
ss
jecxz
push
shr
or
in
mov
cwtl
push
movsb
add
out
es
outsl
mov
push
jmp
or
negb
aaa
jl
ljmp
mov
mov
adc
sbb
movsl
pop
xchg
les
mov
cmp
mov
inc
xor
or
sub
jnp
inc
das
mov
inc
cwtl
add
jmp
sbb
mov
in
or
dec
cli
xor
sbb
lock
and
adc
adc
sbb
out
jne
popf
xchg
sarl
pop
popa
push
push
jno
in
inc
pop
sub
mov
pop
popf
dec
mov
test
jg
sbb
sbb
inc
lock
sub
arpl
add
add
lods
lods
subl
jno
mov
insb
xchg
mov
mov
loope
pop
push
shll
push
mov
pop
sbb
and
sbb
mov
add
xchg
movsl
aad
loop
mov
mov
stos
out
movsl
sub
fimull
mov
shlb
test
pop
mov
cli
lea
bound
repz
add
and
loope
sbb
lea
and
stos
int3
test
mov
lcall
xor
or
xchg
cmpsl
xchg
test
cmc
pop
adc
adcb
sbb
or
stos
cmpb
or
movsl
cs
and
sub
xchg
test
aam
sub
mov
pop
std
add
shrb
orb
sbb
xor
jbe
aam
loopne
frstor
mov
mov
mov
arpl
fnstsw
mov
mov
loopne
sub
xchg
pop
push
inc
fildl
stos
ret
push
out
pop
inc
sub
push
call
mov
xchg
fstp
mov
add
mov
mov
adc
mov
fmull
shrb
xchg
inc
nop
inc
pop
mov
popf
adc
pushf
xchg
mov
shlb
add
mov
ds
sub
xchg
xor
add
push
sbb
pop
mov
and
add
pusha
arpl
push
add
mov
pusha
in
ficompl
mov
lea
fidivrl
out
inc
test
or
aaa
pop
andb
add
push
cmp
cmp
lea
mov
scas
outsb
ret
insl
dec
mov
add
add
pop
add
add
mov
cwtl
add
sbb
hlt
push
insl
aad
ret
insl
mov
mov
mov
add
cs
into
inc
xor
push
jg
sub
mov
push
inc
adc
idivb
inc
and
dec
mov
test
jle
push
push
xchg
stos
outsb
imul
add
lds
add
and
into
incl
sub
and
and
mov
in
mov
outsb
ss
add
push
inc
fs
push
cmpb
mov
mov
mov
enter
mov
iret
cli
in
pop
cmp
sbb
cmc
cmp
or
out
lods
fimuls
push
mov
incl
test
add
cmp
in
xor
inc
mov
add
adc
fsubs
sbb
sbb
cmp
in
stos
mov
pop
out
jb
cmpb
sub
in
jnp
pop
adc
adc
repnz
sbbb
push
add
imul
sub
xor
add
add
xchg
fstp
outsb
sub
mov
cltd
and
jmp
mov
notb
pusha
add
int
push
pusha
adcl
pop
mov
lock
or
push
mov
lock
outsb
add
popa
add
mov
sub
push
decb
cs
leave
testb
fbld
scas
mov
pusha
andb
fsubs
jp
outsb
outsl
mov
or
filds
adc
or
je
out
inc
sbb
add
mov
cmc
adc
inc
mov
push
mov
loop
or
inc
ljmp
dec
repnz
lret
push
push
pop
mov
roll
fldt
aad
mov
xorb
lea
mov
imul
push
scas
shlb
sub
arpl
add
aaa
adc
add
mov
sub
adc
clc
inc
push
in
cwtl
insl
sub
push
insb
adc
xor
pop
nop
push
inc
mov
push
sub
sbb
inc
imul
lcall
enter
mov
mov
int
in
std
sub
imul
pop
lcall
stos
leave
or
pop
add
adc
or
push
or
ret
sbb
cmpsl
or
fsubs
push
and
inc
stos
test
daa
js
mov
pusha
adc
icebp
inc
adc
clc
push
pop
enter
icebp
mov
lods
test
test
aam
arpl
pop
dec
je
rol
xor
movsl
sub
or
addr16
push
push
test
bound
in
sbb
push
add
aaa
out
or
shrl
jmp
or
sub
fistpl
pop
outsb
out
inc
fwait
stc
inc
pusha
push
cld
sbb
addl
mov
in
add
mov
mov
out
push
mov
jnp
fcmovnu
jo
pop
inc
or
aaa
mov
pusha
nop
sbb
add
pop
adc
push
add
ljmp
subb
push
xor
jecxz
sub
jbe
outsl
or
pop
cmpb
leave
mov
insb
push
adc
lea
adc
or
arpl
frstor
cmp
add
fld
mov
mov
lds
xchg
pop
stos
push
or
push
xor
and
cld
jge
mov
add
sbb
pop
repnz
inc
push
enter
sarl
int
add
in
fimull
sub
sahf
mov
pop
sti
add
stc
or
inc
cld
xchg
lahf
add
filds
pop
or
loop
xorb
add
lret
inc
add
inc
mov
pop
std
xchg
xor
mov
lcall
add
mov
dec
add
fimuls
jp
aad
push
jge
test
out
add
vandnps
popa
imul
scas
add
into
fsts
inc
mov
inc
shl
imul
or
mov
out
mov
mov
dec
adc
pop
subl
add
out
mov
push
cwtl
pop
add
sbb
mov
addb
loop
insb
test
mov
in
shlb
or
imul
ret
or
and
lret
xor
lock
pop
push
icebp
push
insb
pop
loopne
mov
and
and
inc
sbb
insb
or
mov
xchg
jmp
rcrb
pop
test
je
jmp
orb
push
das
hlt
or
push
out
outsl
inc
jmp
and
inc
int
add
and
orb
mov
out
mov
addb
jmp
mov
je
cmc
cmpsl
inc
add
add
push
int3
push
add
rclb
and
dec
icebp
lods
je
push
xchg
ljmp
stos
sub
iret
dec
cmovnp
sbb
sub
test
inc
adc
pop
sbbl
lods
sub
dec
adc
add
mov
mov
subb
rcrl
push
cmp
dec
mov
insl
clc
or
rcrb
insl
push
subb
and
and
ljmp
dec
aad
filds
and
adc
mov
mov
loop
lods
aam
out
or
adc
or
jg
push
stos
inc
clc
inc
inc
jbe
std
das
mov
movsl
push
inc
in
in
pop
stos
push
icebp
add
arpl
xchg
aad
enter
mov
adc
inc
fbstp
xchg
sar
pop
sub
pop
ret
jl
out
mov
mov
das
mov
loope
std
pop
add
es
bound
or
add
dec
ret
ljmp
add
push
mov
jp
in
je
scas
dec
std
negb
sbbb
loopne
inc
movsl
leave
shll
shrl
test
das
fstpl
addl
inc
pop
inc
cltd
add
mov
and
loopne
leave
add
rolb
test
jo
mov
dec
ds
or
add
cmc
and
outsl
lods
or
shlb
aaa
inc
jns
jle
loopne
and
cli
loopne
lds
or
ljmp
push
pop
lock
sbb
add
arpl
push
sub
inc
enter
mov
xchg
mov
mov
sbbb
or
fcoml
out
out
mov
and
mov
mov
mov
pop
subb
dec
push
lock
add
or
test
mov
mov
jecxz
test
icebp
push
cmc
shrl
pop
insb
sub
cltd
outsb
popa
shll
cmp
xchg
rcll
mov
sbb
add
push
push
mov
sbb
adcl
in
jg
push
cmp
jl
lea
fisttps
or
sbb
insl
inc
mov
sbb
xchg
add
sbb
jmp
mov
andl
or
lock
loope
or
icebp
inc
addb
pop
push
dec
fists
lret
pop
fildl
or
sbb
call
orl
lcall
mov
outsl
add
icebp
push
adc
sub
mov
mov
rorb
outsl
jno
mov
pop
or
mov
pushl
pop
rorb
push
sbb
enter
or
leave
or
imul
sbb
fsubrs
pusha
push
or
cmpsl
xchg
out
in
int
cs
and
shrb
mov
fcoml
xchg
add
enter
or
pusha
xor
in
or
sbb
or
test
sbb
les
lods
dec
insl
popa
sbb
xchg
mov
fisubrl
and
jg
push
lock
adc
mov
adc
dec
sub
and
scas
popf
adc
ret
lock
cmp
and
adc
dec
or
inc
or
inc
or
fiaddl
adcb
mov
in
pop
out
or
adc
adc
adc
pop
or
test
shrb
jle
adc
mov
sub
shlb
fcomi
clc
movsl
sbb
stc
std
mov
adc
icebp
sub
adc
or
and
add
adc
insl
or
inc
jl
int3
imul
xchg
push
xorb
les
clc
inc
push
pop
lock
test
mov
mov
fistpl
xor
and
jno
xchg
sbb
xchg
add
aam
rcr
push
add
out
clc
fildll
pop
fsub
sub
nop
adc
leave
leave
xlat
pop
test
fistps
pop
punpcklwd
dec
out
psubq
out
adc
push
dec
xor
sbb
jmp
xchg
push
push
jecxz
movsl
inc
mov
mov
pop
and
adc
mov
inc
scas
xor
adc
lea
jb
aad
jns
and
repnz
outsl
sub
cmpsb
hlt
mov
in
loopne
or
adc
add
lock
scas
add
and
lods
push
and
sbb
hlt
movsl
mov
mov
adc
imul
in
test
adc
cmc
js
test
and
add
xor
clc
movb
adc
test
stc
push
or
inc
add
decb
aas
push
repz
jg
pop
adc
test
inc
popl
or
dec
rcll
cmp
es
mov
loope
in
jmp
or
movsl
outsb
rcll
sbb
pop
and
sbb
mov
cmp
das
pop
ljmp
mov
push
rcrb
push
mov
jp
cmp
and
or
xchg
mov
xor
xorb
cmp
push
gs
and
mov
ljmp
stc
lods
mov
push
sub
xchg
mov
js
add
push
insb
or
cld
add
lock
sbb
lods
mov
dec
aam
imul
test
inc
testb
inc
jg
in
or
cmc
cmpsb
push
and
sti
cltd
sub
pop
call
mov
add
mov
or
and
rorb
loope
pop
inc
outsl
call
aas
or
lock
std
and
and
xor
sbb
inc
mov
push
pusha
push
sbb
and
or
xchg
jns
popf
loop
popl
loopne
loop
mov
and
rorl
test
js
frstor
cmp
sti
lock
jb
outsl
add
rclb
test
pop
daa
mov
xor
add
lea
testl
add
negl
push
or
notb
pop
out
dec
out
xor
bound
push
push
xor
dec
in
push
and
sub
jno
pop
stos
lods
or
and
and
mov
or
push
sub
add
dec
xor
cmpb
aad
or
xor
out
cld
push
push
adc
in
sbb
mov
add
add
jb
sbb
add
push
push
add
mov
add
mov
cld
pop
mov
pop
mov
or
or
xchg
mov
adc
test
mov
sub
mov
add
xchg
add
nop
mov
addl
push
pop
dec
jg
fists
stos
out
rolb
push
dec
movsl
pop
and
xchg
jnp
pop
xor
push
jb
and
test
xchg
scas
repnz
sti
fistl
add
mov
call
pusha
mov
js
pop
test
push
ret
dec
loopne
test
jg
mov
stc
xor
add
adc
test
hlt
xchg
out
xor
add
ret
loope
adc
push
cmc
shl
inc
pop
movsl
or
movsl
outsb
decl
es
sub
pop
lds
sub
call
mov
fidivl
mov
mov
push
sahf
cmc
pop
lret
or
or
adc
sbb
ljmp
lock
xchg
call
sti
into
repz
add
or
arpl
mov
insl
dec
pop
insb
das
adc
pop
mov
sbb
sbb
out
rorl
loop
cmp
jno
ljmp
push
cmp
sbb
daa
aam
push
mov
out
push
pop
pushf
mov
bound
mov
adc
jbe
cmc
outsl
jno
scas
push
popa
add
lret
outsb
addb
das
jno
mov
fisubl
jg
not
xchg
add
sub
sub
inc
in
add
fisubrl
adc
sub
cmp
pop
inc
rclb
shr
or
ss
push
pop
loope
push
aaa
mov
or
sbb
mov
xor
jb
cmc
mov
pop
or
adc
fildl
sub
push
in
in
mov
lock
jne
and
adc
xor
push
in
add
lods
push
mov
xor
outsb
sub
rcl
push
lret
or
push
jmp
lea
lea
cmc
xchg
cmpsl
xor
push
push
pop
cmpsb
aad
push
add
ja
ficoms
add
xchg
adc
pop
fcomp
cwtl
or
stos
fcomps
out
movsb
lahf
push
mov
jp
add
loopne
sub
int
loop
add
mov
jecxz
jge
call
pop
mov
inc
push
pop
sbb
jns
loop
add
mov
fwait
test
add
pusha
inc
hlt
push
shr
aas
add
inc
aad
lods
adc
in
push
mov
or
mov
and
push
int
movswl
leave
dec
push
movsb
movsl
sbb
push
mov
fldenv
mov
mov
sub
das
insl
mov
aas
push
jecxz
loopne
sub
adc
xlat
ljmp
pop
sub
test
adc
test
push
sti
sbb
repz
push
xlat
psubq
inc
inc
xor
add
mov
ss
mov
push
xchg
loope
or
ret
add
in
xchg
outsl
inc
mov
jns
dec
call
add
movsl
adc
adc
ds
push
jl
cmp
jp
sub
fcoms
inc
inc
pop
mov
push
stos
xor
push
push
sbbl
adc
xor
pop
pop
stos
iret
adc
xchg
xchg
subb
jno
sarb
mov
add
loop
sbb
lcall
or
or
mov
lds
roll
dec
lds
push
outsb
fmull
mov
sub
adc
pushl
add
out
orl
addb
xor
inc
push
add
mov
outsb
pusha
adc
pop
aam
or
jno
inc
lret
test
mov
lock
orb
inc
std
mov
orb
pop
insb
fildll
push
nop
insl
adc
aaa
adc
dec
rorb
add
test
frstor
add
cmc
inc
jo
sbb
cmc
xchg
mov
aaa
push
add
fs
xchg
loope
add
push
sub
mov
add
or
add
mov
mov
inc
adc
add
push
adc
fsubl
jbe
push
add
ficoml
stc
sub
hlt
inc
and
adc
jne
sbb
mov
rclb
jb
pop
jge
daa
cli
mov
or
inc
mov
push
mov
xorb
ds
sub
adc
adc
and
xor
sub
fwait
pop
stc
in
xorb
mov
xchg
stos
mov
hlt
dec
filds
inc
xchg
fsubs
sub
insb
add
icebp
dec
mov
shlb
movsb
xchg
mov
jp
pop
inc
jmp
outsl
inc
mov
cltd
mov
sub
xlat
push
add
je
or
loopne
shrl
shrl
ret
xchg
call
xor
das
rorb
addl
sti
fnstsw
loop
inc
sbb
movsl
sbb
icebp
xchg
dec
sarb
rolb
fiaddl
add
fisubrl
jo
push
add
mull
filds
aaa
cmpsl
or
jecxz
pusha
add
sub
call
out
and
adc
mov
jo
mov
loope
pop
inc
add
rcrb
and
mov
push
add
loopne
add
pusha
pop
mov
add
lock
mov
mov
lcall
aad
push
push
push
fisubs
and
lea
pop
icebp
inc
push
xor
pusha
stc
pop
aaa
jecxz
pop
stos
cmp
xor
add
popa
push
mov
push
das
mov
lods
xchg
sub
xchg
cmp
pop
add
xor
or
mov
jne
cmpsl
mov
or
mov
dec
xchg
icebp
aas
or
and
pusha
lds
fisubrs
adc
dec
loopne
xor
rclb
shrl
push
fisttps
xor
and
mov
pop
insb
sub
mov
fs
cmp
ds
out
add
imul
movsl
das
insb
lea
and
and
push
or
icebp
adc
mull
add
pop
jae
shrl
cmp
inc
dec
or
loopne
xor
inc
mov
fdivs
jo
add
pop
clc
pop
sub
insb
inc
mov
sub
mov
clc
out
add
cld
xchg
mov
mov
stos
loopne
adc
std
push
xchg
jmp
outsb
sbb
lods
loop
movsl
jns
push
aad
pop
scas
outsb
shll
loopne
jmp
das
xor
cmp
popa
arpl
test
push
pusha
mov
or
or
aaa
insl
mov
ret
cs
mov
cs
jecxz
jp
dec
dec
mov
add
icebp
or
fsubs
adc
push
cltd
and
mov
xchg
and
jne
and
lods
inc
aad
cmp
pop
mov
adc
lods
adc
or
and
and
das
subb
adc
jmp
mov
add
int
enter
mov
push
sub
xchg
test
loopne
sahf
push
testb
xchg
mov
push
add
push
roll
pop
cld
adc
adc
inc
cltd
xchg
rorl
push
lock
mov
dec
add
dec
insl
shll
loop
mov
fsubrs
mov
mov
testb
pusha
mov
loop
jbe
sbbl
stc
mov
sub
es
sub
icebp
cmp
das
aam
mov
mov
js
test
mov
xchg
inc
xchg
lds
popa
push
add
xchg
movsl
inc
pop
lock
jl
adc
pop
add
adcb
aam
stos
mov
dec
mov
js
mov
outsb
outsb
test
test
cmp
arpl
inc
and
sub
inc
cmp
mov
push
incb
mov
inc
mov
sub
test
xor
mov
and
add
rorl
cld
add
sbb
outsl
test
insl
cmp
dec
inc
sub
push
sbb
and
sbb
and
adc
adc
dec
lods
fcoms
lock
les
adc
incb
mov
cltd
pop
mov
movsl
insl
adc
mov
add
test
decb
adc
addl
xchg
test
adc
shll
fs
xor
push
shl
and
fistpll
orb
mov
add
push
call
inc
mov
pusha
xor
shrb
sbb
dec
mov
sbb
pop
dec
les
push
movsl
lock
adc
and
push
jmp
ficompl
adc
add
sarb
sar
adc
dec
lock
lcall
fstl
in
ds
mov
push
mov
cs
lret
repz
mov
adc
add
push
orb
add
or
add
inc
add
and
gs
push
rorl
jp
adc
inc
pop
nop
push
add
faddl
mov
sbb
push
push
nop
lods
fildl
incb
mov
mov
pusha
stos
pop
clc
in
insb
jecxz
xchg
cmpsl
mov
and
pusha
arpl
cmp
sub
cmc
roll
in
sbb
adc
xchg
add
push
test
insb
fcmovnbe
aaa
test
or
push
cld
lea
ds
aaa
fisubrs
xor
rol
outsl
mov
bound
and
or
out
loop
btc
loopne
inc
das
icebp
test
dec
adc
test
mov
dec
pop
pop
mov
loop
mov
in
rolb
dec
outsb
mov
loopne
das
loop
std
dec
xor
out
shlb
imul
adc
sbb
push
pop
in
jg
or
iret
loopne
inc
add
push
ud0
andl
mov
xchg
adc
loopne
cmc
dec
or
icebp
pusha
sub
int3
xlat
in
test
sbb
pop
sbb
rorb
or
cld
mov
insb
or
mov
int
and
jbe
mov
push
sbb
cltd
xor
nop
and
call
or
enter
jge
push
adc
jecxz
sbb
or
rolb
cmp
mov
cmp
insb
or
aad
or
popa
push
push
hlt
mov
or
or
or
jb
push
test
mov
dec
les
mov
pop
stos
sbb
xorl
pop
mov
push
or
test
push
out
sub
stos
add
fistpl
pop
es
push
xor
js
inc
std
dec
jg
scas
mov
rclb
mov
test
cmp
and
shlb
sahf
arpl
rol
xchg
and
std
dec
or
mov
loopne
push
or
sbb
pop
and
sbb
clc
andb
pop
addr16
cwtl
jg
sub
lahf
notl
into
and
mov
les
jno
mov
pop
xchg
xchg
mov
lods
je
add
gs
out
and
push
mov
pop
stos
add
add
adc
push
lahf
mov
adc
jo
or
add
notb
xchg
dec
xor
push
std
or
out
lock
push
adc
fimuls
add
sub
sbbb
inc
and
jo
mov
mov
mov
mov
cld
mov
mov
adc
jne
sbb
lock
cli
shlb
jno
cmp
push
mov
outsb
mov
sbb
xchg
out
ljmp
jmp
jmp
xchg
adc
jecxz
call
inc
out
cmc
xchg
sub
push
in
sbb
andb
push
pop
popa
mov
call
add
jge
push
and
das
shlb
jmp
movsl
mov
inc
fwait
cli
test
popf
and
fmull
mov
loop
pop
outsb
or
lock
mov
sub
push
or
je
das
adc
in
add
or
add
adc
and
out
push
movsl
mov
mov
pop
loopne
aad
sub
nop
dec
xchg
popa
add
cmp
xor
fiaddl
scas
mov
loop
addr16
addl
mov
pop
lds
lret
jg
push
shlb
add
std
mov
push
push
cmp
cld
inc
insl
pop
sbb
icebp
movsl
add
popf
mov
push
jmp
pop
mov
mov
outsl
lods
out
xor
mov
sbb
dec
pop
dec
int
nop
mov
clc
mov
xor
xchg
add
test
push
add
adc
mov
cmpsl
in
xchg
add
inc
mov
icebp
push
inc
sub
dec
adc
inc
mov
push
inc
inc
xchg
mov
xor
out
scas
jne
int3
fidivl
or
shlb
test
xchg
cli
stc
ret
fs
mov
imul
icebp
pop
jnp
das
lock
inc
jg
cmc
or
and
dec
notb
sub
out
push
jo
add
pop
insb
sarl
ljmp
adc
dec
mov
movsl
mov
push
xchg
in
mov
das
and
sub
xchg
pop
faddl
adc
xchg
mov
ret
fisubrs
and
loope
add
xchg
push
cmp
mov
fwait
mov
hlt
lea
sbb
cmp
push
or
outsl
je
sub
cwtl
iret
fwait
rcr
mov
mov
add
or
insb
push
pop
int
sbb
inc
xor
fidivl
jmp
inc
fisttps
push
add
add
inc
push
lcall
ficompl
push
fisttpl
pusha
jb
sti
inc
scas
mov
out
mov
call
stos
or
js
into
inc
mov
aas
mov
and
jae
shlb
jge
loopne
mov
decb
fwait
pop
add
and
dec
xchg
push
ja
cs
add
cld
mov
lds
arpl
sahf
mov
dec
fldl
add
out
addb
jle
outsb
clc
add
jecxz
mov
cli
adc
test
or
pop
movsl
dec
push
mov
add
push
jl
addb
popf
stc
clc
pop
mov
leave
daa
adc
dec
or
add
jbe
and
jp
call
hlt
xor
out
xorb
in
mov
ds
faddl
addr16
movsl
fisubrs
mov
pop
or
xor
testb
jmp
cs
sarb
add
rclb
cmp
mov
neg
lret
cmpsb
dec
aad
loope
inc
jp
push
mov
dec
nop
lea
stos
adc
mov
mov
and
call
xchg
addl
loope
mov
pop
xorb
cmp
or
pop
jns
pop
enter
or
sub
mov
dec
pop
mov
and
loope
dec
int3
fildl
stos
subb
lods
mov
outsl
enter
movsb
or
cmpsb
test
or
pusha
dec
lods
lcall
xchg
cmp
pop
in
mov
inc
cmp
or
or
pop
or
test
mov
add
sbb
jge
ljmp
pop
les
and
mov
fucomi
adc
add
sbb
loopne
and
lods
cmp
or
stos
outsb
adc
push
add
mov
push
and
or
mov
adc
orb
out
jle
inc
adcb
loop
nop
out
push
stos
out
xchg
cmp
jo
scas
add
lock
jle
sub
and
jmp
shlb
pop
icebp
outsl
sbb
inc
and
cmp
andl
or
scas
mov
sbbb
lds
add
add
mov
leave
dec
jno
mov
jmp
or
subb
movsb
mov
icebp
add
xor
pop
push
mov
data16
dec
pop
aad
movsl
movsb
fisttps
jl
jmp
push
cmp
xchg
sbb
movsb
jb
mov
mov
arpl
mov
sub
jmp
mov
subb
mov
mov
ds
insl
fldt
das
or
and
jge,pn
xchg
mov
sub
jge
push
inc
mov
mov
shr
cmp
add
xchg
jmp
cmp
shlb
inc
mov
movsb
in
or
decl
add
fisubs
std
outsl
mov
adc
inc
hlt
fildl
imulb
movsb
cmpsb
or
and
push
leave
roll
imul
lds
stos
jmp
mov
push
mov
jle
adc
pop
movsl
mov
das
std
sub
mov
insb
cwtl
dec
fdivl
shll
insl
shrb
add
daa
fmulp
imul
push
lock
insl
imul
outsl
mov
insl
push
push
add
negb
loopne
mov
mov
pop
stos
inc
in
cwtl
or
mov
outsl
mov
mov
fisubrs
cwtl
jmp
pop
mov
mov
add
dec
jecxz
icebp
out
push
add
out
push
sub
or
push
cmpsl
push
cld
xchg
dec
cmc
push
outsb
fisttpll
cltd
dec
or
dec
adc
xor
adc
into
xchg
outsb
add
test
adc
bound
std
insl
xor
pop
fidivrs
fwait
add
push
ret
add
into
mov
jo
inc
int
sbb
or
enter
fucomip
mov
sbb
add
add
mov
fdiv
jmp
adc
cmp
outsl
mov
fiadds
sbb
push
cmp
test
out
call
enter
cwtl
cmpsb
push
add
test
and
mov
mov
jmp
out
rclb
sbb
orb
icebp
pop
push
outsl
mov
inc
cmp
adc
dec
sbb
loopne
adc
test
cltd
push
test
add
push
clc
pop
mov
inc
test
pop
push
ljmp
dec
jo
mov
or
add
std
gs
adc
lods
das
aad
mov
sbb
pop
push
rcll
adc
xchg
mov
mov
pop
stos
std
sbb
inc
push
sub
xchg
mov
inc
addl
fidivs
adc
and
add
fwait
sub
call
sub
xorb
sub
and
cmp
adc
lea
int3
jl
cld
cwtl
data16
mov
adc
or
push
lods
sbb
aaa
push
outsb
pop
clc
and
jl
pop
jg
cmp
aaa
icebp
add
cmp
push
add
or
push
pop
outsl
cmc
insl
mov
fbstp
pop
jp
and
test
addb
fisttpl
jge
repnz
mov
stos
xor
movsl
xor
cmp
and
dec
xor
test
xor
ficomps
in
jbe
outsl
mov
mov
pusha
dec
push
add
xchg
jbe
xchg
xchg
loopne
stos
inc
gs
in
and
or
pop
pop
in
push
sti
outsl
es
inc
outsl
loop
cli
sbb
sbb
jmp
insl
loop
mov
repz
push
mov
mov
imul
cmc
mov
adc
sar
lods
filds
inc
cmp
dec
rolb
or
ljmp
adc
add
adc
movsl
inc
add
sbb
mov
jo
adc
fisubs
push
dec
or
or
jge
fidivl
inc
cmc
and
in
push
mov
sub
push
inc
sub
stos
add
pop
xchg
pop
test
cmc
jecxz
leave
jmp
insb
shlb
sub
cmp
inc
rcrb
mov
and
cmp
adc
sbb
test
idivb
push
lds
test
cmp
addl
xchg
rol
lea
out
inc
dec
test
cmp
fdivr
inc
test
mov
test
adc
mov
push
les
aas
mov
sarl
xchg
adc
sbb
jo
pop
dec
lods
hlt
lea
orb
sbb
cmp
mov
sbb
in
dec
lods
outsl
and
in
cmp
add
or
ljmp
push
aas
call
out
add
add
xchg
outsb
jg
xor
push
cmp
popa
cmp
clc
orl
adc
fstl
out
cmp
aad
js
add
or
repz
dec
rorb
std
in
mov
andb
mov
xchg
test
inc
sub
clc
jg
les
cmp
adc
mov
jg
cmp
cmpsl
cmp
push
sbb
test
les
mov
fucomp
fbld
sub
pop
popf
or
aas
divl
ss
sbb
push
mov
adc
icebp
nop
sub
jno
sub
nopl
pop
fildl
sbb
or
hlt
adc
es
cmpsl
push
fistl
dec
and
and
dec
mov
pusha
or
outsl
jge
shll
sub
cmp
cmp
aas
sub
ljmp
repnz
sahf
pop
sbb
aas
rcrl
and
hlt
decl
inc
cmp
add
pop
and
xor
mov
out
ljmp
in
adc
dec
inc
dec
dec
cs
adc
and
lods
mov
insl
mov
clc
inc
mov
sub
repnz
jg
jge
push
cld
xor
aam
push
add
lock
int3
arpl
add
push
mov
lcall
dec
inc
pop
add
lea
popa
push
inc
and
sub
std
adcb
fmull
or
inc
cmp
js
inc
adc
push
fisttpl
push
jae
sub
jle
add
cmpsb
ds
push
jno
jae
adc
aas
pop
fdivr
push
pop
subb
jo
push
or
mov
in
pop
cmpb
data16
jl
or
dec
mov
xor
sub
or
pop
call
ss
adc
mov
jo
mov
inc
xchg
insl
inc
inc
mov
out
nop
scas
sbb
rorb
jmp
push
adc
jnp
aas
cwtl
jl
add
add
mov
out
cmp
jl
and
push
test
in
mov
lret
or
aas
jecxz
and
mov
aas
fisubrl
fstpt
adc
and
inc
mov
rcrl
push
lcall
mov
mov
mov
jle
dec
push
sbb
outsl
iret
and
push
push
adc
ja
divl
cld
xchg
inc
icebp
and
jae
add
and
xchg
sub
insl
jg
inc
andb
bnd
inc
push
jle
lret
lods
mov
or
cmpsl
adc
mov
aaa
clc
cmp
pop
xor
fwait
inc
inc
jle
sbb
jecxz
jbe
pop
mulb
add
insl
or
insl
icebp
addl
inc
sub
lock
pop
push
call
mov
adc
jle
and
mul
bound
stos
and
cmp
mov
cmp
mov
xor
sarb
roll
lods
dec
cld
push
push
faddl
movsb
lcall
fists
clc
jge
rolb
fcoml
cmp
sub
jp
adc
faddp
jge
aaa
outsb
insb
cmc
inc
aas
std
mov
or
sti
in
nop
ret
std
pushf
out
push
or
dec
sti
push
dec
in
roll
aad
add
xor
rorb
inc
loopne
into
pop
xchg
roll
cmp
lea
mov
or
ja
pop
and
dec
jg
test
add
cmc
int3
jb
mov
add
nop
add
mov
pop
and
imul
popa
mov
test
add
cwtl
add
add
jg
xor
xchg
imul
sub
inc
add
push
insl
push
out
daa
das
adcl
push
outsl
data16
test
mov
and
push
popf
adc
outsb
js
jl
sub
jne
xor
cmp
pop
and
icebp
xchg
or
popa
cs
mov
pop
add
outsb
pop
faddl
add
add
and
and
xchg
or
fimull
or
mov
dec
mov
dec
out
mov
adc
hlt
mov
xchg
shrl
insl
std
mov
cmc
or
dec
mov
gs
out
cli
or
pop
or
mov
and
mov
dec
cmp
addb
mov
arpl
sub
jnp
push
lds
add
add
int3
ss
popa
ret
adc
xchg
and
test
push
mov
mov
out
sahf
insb
iret
sub
xchg
out
out
xor
pop
rcrl
add
out
dec
int
cmp
into
daa
movsl
popl
or
loopne
cmp
push
inc
and
inc
mov
jge
lcall
pop
sbb
mov
inc
or
adc
xchg
cli
inc
mov
sub
mov
push
mov
insl
in
in
add
sub
orl
sti
out
mov
enter
cmp
cmp
aam
test
and
imul
mov
mov
jno
and
cli
push
mov
stos
mov
dec
std
xor
outsl
stos
aad
aas
sbb
cmpsb
adc
lods
retw
pop
add
and
sub
dec
shrl
jg
jne
pusha
or
or
xchg
push
and
pushl
adc
adc
xchg
les
mov
and
imul
xor
clc
rolb
fisubrs
and
shl
enter
dec
mov
test
sbb
add
mov
or
fwait
cld
push
ljmp
pop
rol
cmovb
leave
ja
test
decb
fcomi
dec
stc
adc
adc
sub
push
or
adc
inc
mov
outsl
add
mov
sub
lcall
inc
inc
jg
out
inc
dec
insb
call
fiadds
shll
test
or
inc
sbb
pop
inc
cmovo
pop
les
add
daa
call
cmc
popa
addl
sub
mov
add
add
mov
in
rorl
or
adc
pop
push
mov
push
mov
mov
cs
lods
xchg
fldl
lds
sub
push
xorb
rol
mov
sbb
jae
pop
jne
test
inc
outsl
icebp
in
xchg
adc
mov
arpl
add
sbb
es
sbb
cmp
xchg
pop
mov
cld
clc
sbb
add
sarb
stos
or
mov
add
outsb
push
jl
push
inc
mov
bound
mov
sub
loopne
mov
mov
or
adc
cmp
je
aaa
add
loopne
mov
push
outsl
sub
sti
add
aam
lds
cmpsb
add
test
and
roll
imulb
add
push
jg
outsb
mov
push
subl
idivl
push
mov
mov
and
mov
ljmp
daa
fs
mov
mov
pop
out
or
rolb
push
stos
mov
ss
das
push
cmc
movsl
ret
push
cld
mov
int
add
xor
sub
repz
jbe
pop
pushf
or
insb
adc
pusha
cmpb
adc
fwait
orl
jmp
pop
sbb
push
ret
rorl
bound
xor
push
mov
and
lds
insl
or
mov
jmp
or
pop
add
mov
sbb
mov
add
mov
add
inc
add
fildl
sbb
nop
lock
adc
insl
dec
sbb
rolb
dec
push
rorl
xchg
xor
movsb
or
inc
jge
add
xchg
out
loop
leave
or
adc
pushaw
test
push
clc
mov
mov
mov
jae
pop
cli
insl
jmp
pop
loopne
xor
adc
adc
sub
negb
dec
mov
and
popa
es
mov
xchg
in
outsl
adc
and
lock
cld
add
pop
or
cmp
ss
push
loope
pop
xchg
stc
or
lods
sbb
inc
or
fdivs
pop
cmp
xchg
pusha
aaa
push
sub
insb
lds
movsb
sub
pop
add
fs
loope
outsb
xor
das
test
inc
push
rorl
mov
add
pusha
std
xchg
cmc
loop
add
dec
stos
loop
arpl
mov
enter
or
das
xor
mov
add
gs
add
mov
insl
std
add
in
pop
jns
xchg
incb
sbb
or
push
movsl
and
dec
cmp
loope
fistpl
pop
inc
test
sub
and
iret
and
add
add
stos
cmp
push
adc
or
push
adc
cmp
add
ret
out
push
jnp
and
add
xor
arpl
outsl
dec
shlb
xchg
mov
mov
push
orb
mov
pusha
or
ret
pusha
pop
fidivrs
sub
lret
negb
adc
jmp
add
out
push
imul
pop
inc
mov
mov
jmp
xchg
or
pop
popa
and
pop
push
insl
or
scas
add
addps
mov
adc
mov
and
sbb
ljmp
daa
popa
in
push
dec
adc
sub
push
or
add
add
cmp
push
or
fisttpll
inc
bt
or
mov
or
outsb
cmpsb
fwait
add
inc
jns
movsl
or
hlt
adc
out
out
jns
or
jnp
test
push
sub
inc
std
ljmp
sbb
lds
cmp
jg
mov
and
inc
push
add
orb
push
cld
fbld
or
mov
int
or
icebp
nop
mov
pop
push
je
add
mov
lds
adc
adc
pop
push
pop
cld
fcmovnbe
xor
cmp
xor
sbb
mov
cmp
mov
push
add
dec
mov
mov
lods
ss
or
xchg
mov
daa
bound
aaa
adc
shrl
setno
inc
mov
pusha
and
push
incb
das
sbb
mov
add
test
and
add
fiadds
stos
daa
lock
xchg
sub
sub
in
inc
int3
cwtl
popa
test
cli
mov
xchg
rcrl
or
out
push
mov
scas
and
add
push
mov
es
or
popa
push
call
add
in
mov
push
pop
test
or
sbb
push
loop
inc
jne
std
adc
and
pop
outsl
lods
or
inc
xchg
cmc
outsb
in
pop
sub
push
sbb
into
lret
push
mov
aad
bound
adc
sbb
xor
push
std
jg
in
and
and
sub
xchg
and
testb
mov
xor
xor
push
sub
push
pop
loopne
inc
xor
es
roll
popa
sti
mov
xchg
test
popa
sub
loope
popa
test
sub
and
lods
xchg
sub
sarb
aas
inc
out
xor
push
dec
adc
nop
movsl
jge
lock
push
pop
jmp
loop
adcb
fidivrs
rclb
adc
int
aas
call
rcl
push
jbe
loopne
lds
jae
hlt
pop
clc
push
and
cmp
adc
and
repnz
test
dec
or
lods
icebp
xchg
popa
xor
push
sbb
adc
adc
mov
cmpsb
loopne
pop
pop
sbb
push
test
imul
add
and
adc
das
lret
sub
add
jge
mov
aaa
imul
jno
lods
data16
sub
add
ljmp
out
cli
out
inc
adc
add
dec
add
pop
fisubrs
mov
dec
add
add
out
out
adcl
or
push
jno
add
pop
movsl
out
adc
in
popf
sub
push
jecxz
jne
test
cld
cmp
sub
adc
mov
js
mov
jge
decl
inc
bound
jne
sbb
or
mov
lods
sub
dec
fisubs
adc
push
jo
outsl
mov
imul
add
xor
add
cmp
mov
insb
mov
mov
loope
sub
and
and
das
icebp
or
adc
in
inc
mov
mov
mov
add
xor
sub
add
and
rolb
rorb
xor
inc
fimuls
lock
and
sbb
push
rorb
push
and
mov
test
and
cli
lcall
dec
mov
popa
xor
jae
sbb
sub
ss
jb
mov
test
mov
fs
aad
or
push
mov
mov
or
jmp
lea
or
into
and
pop
push
addl
cmpsb
lods
or
pop
js
inc
imul
sbb
adc
or
inc
or
jg
clc
pushf
mov
rolb
and
add
test
or
and
or
cmc
adc
xchg
mov
in
lods
dec
add
frstor
push
or
jp
pushf
out
xor
out
add
or
aam
cmpsb
pop
mov
sub
jmp
adc
jmp
outsl
lods
das
inc
dec
scas
and
add
jge
test
pop
out
sub
add
sub
mov
mov
and
das
ljmp
and
shr
loope
add
mov
stc
adc
clc
pop
push
add
dec
jo
sbb
fistps
icebp
jo
xchg
adc
aad
adc
loope
loop
or
add
inc
mov
sub
mov
xchg
mov
xchg
fcmove
push
pop
imul
mov
lds
pop
enter
pop
or
loop
add
push
dec
sbb
ljmp
or
aam
pop
push
in
push
mov
cwtl
decb
hlt
cmpsb
movsb
dec
or
mov
xchg
divl
push
and
cld
mov
movsb
enter
push
dec
jne
push
shlb
or
iret
mov
cmp
decl
out
mov
sahf
cmp
mov
in
jecxz
inc
adc
mov
insl
not
add
lcall
and
cmpb
leave
into
adc
jo
repnz
vcvttps2dq
add
dec
push
mov
cmpsl
fucom
pause
or
push
and
dec
mov
or
adc
xchg
gs
lea
fisubrs
fisttps
ljmp
inc
ret
dec
fdivr
sbb
test
repz
cmp
add
aam
fisubs
sbb
inc
pop
fnstenv
pop
mov
jmp
push
push
push
mov
adc
stos
cmc
test
lea
sub
aam
adc
gs
inc
cmp
fdivl
push
loope
or
rorb
adc
pop
icebp
xchg
add
dec
add
push
jo
mov
inc
xchg
sarl
cmp
in
pop
les
ja
jo
push
jo
rorb
xlat
xor
decl
in
fwait
orl
int
mov
pop
fnstsw
adc
push
or
rcr
mov
stos
insl
add
pop
movsl
push
popf
cmp
inc
out
jmp
test
fwait
add
insl
mov
test
jbe
in
test
or
mov
cld
lds
jne
adc
adc
dec
das
add
adc
mov
add
in
mov
jle
sbb
fisubs
dec
add
xor
pop
jno
xchg
add
fiaddl
mov
mov
stos
inc
cli
xorb
iret
lea
cmc
adc
push
ja
xor
testb
inc
mov
or
pop
fsub
sbb
mov
sbb
cwtl
sbb
or
cmp
dec
stos
in
or
nop
in
add
mov
add
add
cli
outsl
push
push
jo
fistpll
fxch
cmc
fldlg2
xchg
loope
call
xchg
icebp
ret
and
mov
inc
mov
xchg
sbb
mov
xlat
inc
mov
shrl
mov
ja,pn
push
dec
les
subl
jl
icebp
call
jecxz
xor
orb
mov
aas
mov
adc
inc
add
cmpsl
gs
sbb
je
in
sbb
sbb
pop
fisubrl
add
loopne
lea
decl
or
or
add
cltd
add
xchg
repnz
cs
mov
xchg
add
jle
in
ss
jno
or
movsb
add
or
loope
fs
popa
adc
adc
pushl
inc
jno
xchg
xor
mov
gs
sti
call
or
scas
add
add
stos
andl
pop
loope
sbb
out
xchg
movsl
or
add
mov
ds
js
lea
call
mov
inc
xor
jo
outsl
mov
and
lds
in
out
jg
decb
insb
sub
insl
cwtl
add
mov
call
sub
js
fiaddl
sbb
mov
fcoml
shlb
inc
outsl
fldt
insl
aam
ljmp
ret
jbe
orb
xchg
push
add
push
adcb
sbb
xchg
divl
mov
insb
adc
mov
xchg
adc
and
or
inc
inc
cmpsb
jnp
js
neg
or
loop
es
aas
add
cwtl
daa
sbb
sti
in
fists
aad
adc
mov
sbb
mov
out
jmp
sbb
add
mov
aam
mov
xor
stos
outsl
lods
jg
mov
mov
adc
xchg
rcrl
push
pop
inc
ficomps
or
inc
jmp
jecxz
inc
loope
jle
pusha
mov
jg
jo
adc
sti
mov
xchg
flds
icebp
push
pop
jo
les
mov
sbb
popf
test
sarb
xlat
mov
xchg
mov
mov
and
mov
test
or
sbb
add
inc
sbb
loopne
mov
dec
adc
xchg
cwtl
outsb
orb
cmp
addl
push
out
adc
cs
mov
into
xor
add
pop
sub
adc
loopne
cmp
sub
sub
cltd
lds
ss
call
movsl
and
fisttps
xchg
jo
cmpsl
mov
stc
mov
xchg
and
mov
cmp
js
sbb
nop
add
and
push
cltd
adc
orb
push
jecxz
or
sbbb
es
push
mov
mov
adc
in
add
jmp
mov
cs
in
xor
or
inc
lds
mov
lods
in
outsl
inc
sbb
dec
mov
dec
cmp
sbb
jno
ficomps
mov
jns
movsb
fs
pop
std
aaa
in
fisubs
mov
aad
push
add
inc
mov
nop
clc
and
iret
and
test
mov
mov
jmp
repz
xchg
int3
and
inc
xlat
and
cld
punpcklwd
ret
push
adc
mov
sub
inc
and
push
loopne
mov
aad
popa
ret
jno
jecxz
pop
insl
sub
inc
rclb
xor
and
mov
mov
mov
add
sahf
inc
adc
xor
add
lea
add
into
mov
inc
mov
pusha
aaa
fildll
aaa
repnz
sbb
mov
aas
sub
add
lea
popf
mov
out
jmp
das
cltd
or
add
push
cli
vmovlps
lods
and
out
fisubrl
inc
mov
adc
out
clc
mov
out
in
adcb
xor
cmp
mov
insl
mov
sub
cmp
inc
cmp
sub
rcrl
mov
sbb
inc
mov
adc
or
mov
fcompl
vcvtss2si
push
pusha
mov
jmp
mov
cmpsl
rorb
mov
push
movsl
sub
mov
rcr
or
mov
jmp
jecxz
add
mov
das
mov
es
out
mov
jge
mov
jle
cmp
push
mov
scas
and
jo
sub
imul
mov
or
or
movsb
push
or
or
into
and
adc
ret
push
js
sub
dec
push
lock
and
fildll
push
lods
std
and
dec
mov
xchg
mov
mov
add
mov
rcl
pusha
add
mov
addl
jle
pushf
adc
mov
lods
push
add
adc
lcall
cld
sti
mov
in
test
into
std
ljmp
pop
insb
pusha
out
mov
add
rol
sbb
insb
sub
std
hlt
or
add
xchg
hlt
mov
mov
outsl
lods
ret
xchg
lds
or
into
mov
inc
mov
mov
push
xor
add
std
cmp
jmp
insl
jmp
pop
and
stos
outsb
roll
mov
lods
add
int
mov
push
or
out
testl
and
call
and
adc
mov
shll
dec
in
add
out
push
mov
test
add
push
xchg
jp
push
inc
nop
adc
test
rorb
test
sub
test
jp
out
stos
push
push
gs
mov
mov
pop
mov
outsb
mov
inc
stos
pop
fwait
daa
mov
int3
or
pop
sub
mov
sti
add
and
shlb
push
incl
lea
adc
icebp
movsl
das
add
cmpl
in
xor
pop
fistpll
xchg
jo
mov
cli
ret
mov
loopne
jg
stos
mov
ret
add
mov
push
mov
pushl
insb
adc
inc
mov
push
add
mov
subb
notb
popf
dec
xor
pop
inc
outsl
insl
add
push
hlt
pop
test
lods
mov
add
nop
in
shr
lahf
jge
out
es
fwait
mov
xor
fcom
add
pop
lret
sbbb
adc
or
add
addb
add
test
aad
adc
jp
adc
push
jno
lock
cmpl
xchg
pusha
xor
lods
sbb
jp,pn
xorl
inc
or
sub
add
mov
add
bound
icebp
rcrb
outsb
push
dec
add
jg
or
pop
lahf
fdivrs
jo
nop
inc
icebp
pop
mov
lock
movsl
cld
mov
sbb
xor
pop
cmp
or
add
test
mov
add
and
or
cmp
movsl
pop
and
mov
add
movsb
out
je
nop
pop
rcrb
push
xchg
inc
jecxz
fidivl
cli
and
push
or
xchg
xchg
mov
xor
mov
icebp
pusha
jb
jnp
sub
or
rorb
add
push
or
adcl
pop
and
das
pusha
pop
or
xor
icebp
add
rolb
test
jmp
outsb
or
repnz
xchg
sar
jg
xchg
aaa
or
arpl
fld
add
bound
push
mov
outsl
ss
mov
sub
or
aam
loope
add
pop
cs
add
add
icebp
movd
mov
mov
in
aam
clts
or
inc
xor
sbb
push
or
mov
push
push
dec
addl
rorb
out
pusha
mov
xchg
stos
push
or
insb
shll
or
and
push
icebp
inc
icebp
mov
fidivrs
andb
nop
dec
jle
add
stc
mov
inc
add
mov
in
sbb
inc
xchg
add
jecxz
cld
decl
lock
lea
pop
lock
push
mov
push
lock
rolb
mov
add
mov
mov
xchg
dec
loopne
or
shll
sub
add
nop
or
subb
rorb
add
mov
stc
ficomps
cmc
clc
cmp
push
je
push
or
addl
jmp
adc
stos
or
or
or
adc
lods
sbb
or
daa
mov
fildll
or
in
add
add
or
push
pop
in
jecxz
adc
xchg
clc
xchg
cmp
test
jecxz
xchg
inc
mov
test
add
fdivrl
orl
inc
add
add
test
jg
loopne
push
jg
enter
xchg
and
xor
mov
push
hlt
adc
sbb
xchg
decb
aas
shll
add
push
sbb
das
sub
jne
popf
add
sbb
or
arpl
adc
and
inc
mov
add
mov
inc
shrb
jmp
sbb
mov
inc
movsl
fisubrl
or
imul
test
icebp
sub
cli
jg
mov
es
ret
xchg
pop
fcomps
xor
rolb
or
jg
mov
push
mov
dec
or
addl
ljmp
cmpl
jmp
test
divb
push
fisubl
adc
gs
or
and
loop
pop
inc
stos
and
mov
mov
roll
mov
mov
lea
stos
in
add
add
add
out
push
incl
xor
jb
dec
mov
mov
xchg
add
cmp
loopne
sbb
sbb
dec
xchg
incb
push
sub
inc
cmp
adc
stos
add
addl
sti
inc
test
popa
aam
mov
or
negb
push
dec
mov
mov
adc
lret
or
popa
mov
push
cmc
loopne
icebp
nop
lea
les
std
scas
daa
call
fs
add
xchg
addb
jb
or
mov
xor
dec
mov
mov
adc
xchg
scas
dec
add
out
test
mov
sahf
aam
je
pop
sub
and
mov
sbb
adc
xchg
leave
stos
std
ficoml
adc
cmpsb
test
fdivl
fsub
or
add
sub
mov
in
adc
inc
aam
lea
xor
cmc
lret
jne
test
sub
xlat
mov
mov
inc
add
push
or
mov
loope
insl
push
in
cmpb
roll
addl
sbb
mov
inc
mov
pop
sbb
addl
mov
mov
test
pop
push
or
push
insl
lods
movsl
or
add
xor
sahf
out
push
cld
inc
inc
pop
gs
sbbl
inc
rcll
sbb
loope
outsl
add
jmp
movsl
in
movsl
nop
mov
mov
or
fwait
lods
mov
cld
inc
filds
xor
orl
add
loopne
adc
in
mov
add
add
lds
add
adc
mov
inc
sub
filds
mov
outsb
lods
rcll
add
aas
push
outsb
sti
data16
or
pop
xorl
js
mov
mov
enter
mov
sub
cmp
rclb
sub
out
xchg
int3
mov
call
out
or
or
cld
push
add
add
fiadds
adc
inc
aam
aam
adc
fdivr
enter
es
push
push
and
jmp
xor
xlat
xlat
inc
cmp
mov
push
sub
insb
or
and
shrb
pop
in
dec
xor
out
or
outsl
inc
push
add
sbb
mov
mov
mov
addl
pop
xchg
int3
push
push
mov
shl
pusha
inc
pop
ljmp
rcll
add
mov
push
sub
push
shlb
sbb
mov
adc
add
add
cltd
push
inc
mov
test
mov
in
clc
jbe
sub
lods
lods
mov
adc
call
and
or
jmp
add
mov
inc
add
scas
outsb
ljmp
adc
test
loop
and
jmp
cli
push
or
movsl
rorl
pop
adc
adc
jmp
bound
outsl
jmp
das
nop
ljmp
xchg
or
and
add
fildl
aaa
add
daa
push
adc
mov
and
dec
mov
sti
sbb
std
or
sub
sbb
sbb
inc
insb
lods
cmc
xor
aam
push
aam
xorb
pop
mov
mov
inc
imul
xor
add
clc
xchg
inc
cmp
and
das
inc
cmp
popa
inc
mov
sbb
inc
int3
out
daa
push
inc
lods
outsl
push
loopne
mov
ret
xchg
mov
and
pusha
cmc
andl
lea
push
pop
stc
sub
mov
pop
inc
xor
loopne
mov
push
and
aas
mov
out
std
outsl
insb
dec
push
das
idivb
stc
push
or
notb
loopne
rcll
xchg
cmpsb
mov
xor
xchg
fmull
inc
inc
pop
sub
and
jb,pn
jae
mov
pop
mov
adc
mov
add
lds
mov
cld
sub
pop
xchg
out
inc
shll
dec
adc
add
lea
clc
push
add
and
mov
outsb
sbb
or
js
jne
lods
sbb
shlb
pop
mov
stos
das
sub
push
or
and
cltd
inc
stos
push
mov
add
jne
sub
cmpl
or
insb
inc
push
mov
sub
sub
xchg
mov
aam
inc
mov
pop
rorb
lret
mov
xor
cmp
bound
hlt
mov
loopne
nop
les
cmp
sarl
jne
insb
jmp
fsubl
incb
xchg
or
inc
xchg
jb
nop
pop
es
pop
mov
mov
push
add
popf
and
sarl
jle
add
fsubs
cmp
push
lods
imul
mov
jmp
sti
dec
mov
rcl
mov
fcoms
and
jae
add
add
xorl
fistpll
lock
sbb
int3
push
sub
add
filds
aad
sbb
sub
fmull
mov
loopne
mov
add
ljmp
dec
loopne
ret
inc
psubsw
rolb
pusha
and
sbb
loope
into
mov
push
add
rclb
cs
pusha
sbb
push
mov
add
les
or
mov
insl
fucomp
loop
inc
inc
stos
aaa
and
daa
add
aaa
insl
rclb
push
add
jp
cmp
sbb
stos
sbb
adc
pushl
add
addr16
arpl
enter
faddl
loop
pop
or
or
jne
mov
clc
movb
push
sub
and
outsl
rclb
or
mov
ljmp
or
pop
sbb
andl
ljmp
das
adc
jns
or
outsb
mov
sbb
push
aad
push
add
insl
cmp
test
jp
and
jo
es
insl
sub
and
imulb
fadd
rolb
divb
mov
cmpsb
or
ljmp
adc
or
add
add
insl
push
sbb
add
ficoml
add
movsl
and
icebp
push
and
pop
or
insl
lods
cmpsb
mov
outsb
test
jg
sahf
in
dec
jl
shlb
loopne
out
movsl
push
fildl
add
ljmp
add
push
add
mov
cmp
test
add
push
pop
les
sbb
adc
push
or
outsl
lods
push
loope
ficoms
push
sub
or
xchg
nop
jmp
clc
push
sbb
popl
xor
inc
inc
inc
sub
mov
and
push
push
js
push
mov
addb
mov
sub
mov
insl
inc
popl
ljmp
andb
jno
in
mov
or
bound
mov
aaa
leave
fistpl
cs
pop
sbb
xorb
outsl
xchg
push
shlb
sbb
mov
call
aad
aas
loopne
sub
pop
adc
pushf
mov
inc
adc
and
nop
mov
pop
add
mov
mov
stos
push
lea
lahf
test
or
sbb
leave
sub
pusha
lods
loopne
and
fildll
repnz
jecxz
pop
mov
movsl
sbb
or
xchg
mov
and
or
loop
mov
sub
rcl
adc
push
pusha
bound
add
mov
adc
push
or
pop
inc
push
scas
arpl
xlat
push
lds
ljmp
inc
or
push
movsb
loope
movsb
pusha
adc
cmc
adc
rcr
movsl
adc
add
loope
and
mov
mov
mov
lock
xchg
shlb
cmp
outsb
bound
fdivr
sbbb
shrb
nop
sub
add
cmp
cmc
jg
xchg
jmp
sub
imul
add
mov
mov
xchg
js
rolb
adc
add
and
cs
call
adc
enter
push
push
adc
std
xchg
add
addb
xchg
xor
pop
fimull
test
cld
dec
repnz
or
or
filds
daa
jo
mov
xchg
in
adc
stos
orb
addl
sbb
orb
jl
xchg
xchg
insl
or
in
lea
push
inc
ret
and
xchg
int3
in
lods
pushl
jp
or
stc
add
add
out
insb
push
ljmp
or
xor
mov
adc
dec
mov
jo
adc
mov
mov
mov
adc
sti
pop
pusha
pop
pop
int3
or
mov
adc
lods
push
fcmovnu
xor
jnp
sub
arpl
bswap
mov
push
or
decb
jb
lock
cmp
mov
mov
das
or
mov
icebp
xchg
mov
mov
xchg
cld
xchg
imul
adc
xlat
fistpll
xlat
xor
insl
icebp
fistpl
lods
out
or
push
andb
mov
xor
pop
add
sub
ret
mov
mov
xor
mov
xchg
push
fldl2e
adc
push
add
pop
sbb
pushf
add
fldcw
dec
cld
xchg
cmp
mov
inc
mov
das
mov
cmp
and
shl
push
lea
hlt
sub
inc
icebp
mov
lock
sbb
loope
inc
lock
push
inc
loopne
in
jl
xor
call
lds
mov
sarl
sub
fnsave
sub
gs
xor
push
add
dec
mov
and
xchg
jnp
jae
rcll
push
and
jb
mov
stos
ds
jmp
mov
adcb
scas
in
add
mov
cmpl
aaa
fisubrl
xor
aam
jo
icebp
or
test
push
daa
lods
or
inc
xchg
jg
lea
inc
movsb
pusha
fmuls
push
popa
jnp
add
pop
test
loopne
and
adc
iret
lods
fidivrs
jo
push
jno
adc
push
cmp
shrb
mov
scas
mov
or
repnz
xor
pop
inc
les
test
inc
andb
outsl
mov
fisubs
int
daa
shll
jbe
add
setl
call
rcl
std
inc
add
and
roll
fcmovnbe
imul
mov
xchg
in
pop
inc
mov
stc
shl
mov
aam
test
lds
add
or
shrl
es
mov
push
decl
lea
nop
mov
sbb
stc
imul
add
test
or
fwait
adc
or
add
jbe
sbb
mov
and
push
pop
aad
cmp
hlt
jbe
stc
sub
jo
cmpl
cmpsb
add
outsl
add
clc
jbe
mov
inc
add
icebp
mov
std
xchg
loopne
jecxz
mov
sbb
popa
sbb
add
rolb
stc
imul
mov
and
shll
sub
and
add
mov
add
cmpsl
icebp
cmp
jg
mov
jnp
pop
std
or
push
outsb
inc
mov
lret
dec
mov
dec
mov
icebp
shrl
push
clc
inc
orl
push
out
and
scas
add
jmp
mov
rcl
push
daa
jp
stos
mov
outsb
and
xchg
sti
into
cmc
data16
push
orb
dec
sub
mov
xchg
add
or
or
add
loopne
lods
nop
rcll
and
jbe
add
js
mov
dec
xchg
pop
adc
out
cmp
dec
test
and
adc
andb
mov
movsb
in
cltd
add
jae
aad
xor
movsb
xchg
pop
shr
lret
lret
lret
adc
push
insl
shl
or
inc
or
stos
rol
inc
icebp
sbb
push
lcall
push
ret
mov
xor
sbb
loopne
addb
subl
or
xor
pop
and
inc
mov
mov
or
push
mov
imul
inc
test
sub
fdivs
inc
shlb
roll
add
icebp
push
add
sti
mov
sub
push
cltd
xorb
adc
xchg
inc
xchg
out
mov
lea
mov
mov
sbb
loope
stos
xchg
icebp
sti
sub
xchg
add
xchg
in
mov
dec
xchg
xchg
push
or
hlt
mov
sti
adc
into
popa
cmpsl
add
pop
addl
push
xchg
mov
test
test
addl
lea
fs
addb
push
add
leave
xchg
mov
pusha
divb
mov
arpl
cld
or
repnz
aam
rclb
add
or
add
test
and
adc
add
jge
bound
in
mov
mov
lcall
and
xchg
scas
xchg
sub
mov
and
lods
mov
push
push
outsl
and
pop
add
mov
add
inc
aaa
sbb
cwtl
push
sbb
movsl
stos
push
inc
stc
xchg
stc
and
roll
add
js
adc
sub
pop
mov
insb
icebp
pop
mov
mov
andl
or
adc
cmpsl
rolb
scas
sub
adc
push
shll
mov
xchg
mov
test
jnp
pop
inc
decl
ret
arpl
add
sub
icebp
or
insb
loop
sbbl
sahf
cs
add
and
jbe
cmp
or
inc
jg
rolb
fisttpl
xchg
or
stc
mov
jne
jge
aam
fidivrs
ret
and
rclb
add
ret
sbb
dec
mov
add
ffree
addr16
aad
pop
add
hlt
push
dec
ss
inc
or
nop
insl
sbb
fldl
mov
pop
out
hlt
fucomip
jg
lock
or
shlb
mul
dec
add
and
pop
sub
test
fimull
pusha
nop
or
xchg
loop
sub
xor
inc
sbb
and
mov
push
inc
arpl
pushl
cmpsb
bound
cmp
push
pop
icebp
or
lock
in
xchg
outsb
jp
cmpsl
jecxz
outsl
xor
sarl
outsl
daa
ret
pop
bound
loopne
loope
pop
insb
aaa
mov
out
or
dec
sbb
adc
loop
movsb
aam
jmp
loope
in
push
in
push
and
nop
ss
ret
stc
adcb
dec
rcrb
mov
inc
push
roll
jmp
mov
inc
xor
dec
inc
or
push
jbe
mov
pusha
aam
daa
loop
xlat
lock
outsb
jl
xor
sbbb
loope
push
pop
bound
sbb
mov
mov
cmp
sub
fistpl
mov
xchg
mov
inc
ja
mov
fsubrs
sub
push
jmp
insl
xlat
sti
pop
xor
fcomps
and
mov
cs
or
add
outsl
adc
sbb
test
and
xchg
mov
push
inc
mov
cmpsb
enter
mov
shl
add
mov
les
add
cmp
mov
mov
mov
pop
in
jmp
or
movsl
movsl
ss
xor
nop
sub
push
movsb
add
pop
add
add
sbb
adc
inc
decb
mov
mov
sbb
push
je
inc
jcxz
jo
mov
inc
pop
mov
in
push
sbbl
or
movsb
dec
push
or
fsubrs
mov
les
inc
xor
inc
movsl
add
shrb
ficompl
ret
or
in
sub
add
es
mov
decb
movsb
sbb
pop
loopne
xor
xchg
loopne
outsb
shl
xchg
sub
jecxz
lret
movsl
mov
lea
mov
movsl
add
hlt
inc
push
popa
scas
mov
mov
loope
cli
nop
add
pusha
addb
icebp
addr16
mov
add
arpl
mov
mov
imul
mov
push
jne
pusha
xor
stos
inc
mov
movsl
push
lret
sbb
dec
push
push
dec
add
xchg
cli
outsb
mov
sub
ja
inc
icebp
hlt
xor
adc
daa
fiadds
test
xchg
add
add
sub
in
rcll
lods
mov
pop
mov
movlpd
loop
jle
mov
lods
js
cld
std
add
sbb
ljmp
orb
sub
lds
sbb
stos
test
cwtl
jmp
lods
ret
xor
mov
pop
das
or
imulb
testb
or
sbb
pop
or
ljmp
sahf
subl
rol
pusha
and
jge
and
mov
inc
ret
jne
incb
inc
or
rcl
out
dec
lock
pop
or
mov
es
mov
cmp
cmp
or
hlt
test
pop
call
or
dec
pushl
mov
push
and
rolb
in
push
in
je
inc
or
pop
popf
pop
xor
mov
nop
rcrl
mov
xor
cmp
sbbb
outsl
dec
fildl
loope
js
rcrb
lock
adc
ret
push
add
aam
or
mov
divb
sbb
pop
push
pop
or
add
or
sbb
out
shrb
pusha
xor
adc
pop
outsb
push
xchg
and
arpl
out
paddusb
lods
jp,pn
mov
push
push
js
push
repz
xor
inc
jl
or
rorl
hlt
push
loopne
ja
outsl
lcall
mov
insl
rcll
mov
push
pop
push
or
jo
jb
mov
cmp
int
mov
pop
fcompl
mov
insb
jb
push
mov
loopne
sub
sub
adc
pushf
lock
aam
test
sub
push
test
and
scas
adc
cmp
add
ljmp
shll
adc
cmc
add
and
pop
lahf
mov
xor
adc
inc
icebp
data16
in
add
adc
cs
mov
in
fcmovnbe
xchg
mov
insl
adc
sub
in
inc
jb
es
push
mov
cmc
push
mov
out
sti
add
cmp
or
jne
push
leave
sbb
loop
fcmovnu
sbb
adc
repnz
jo
aam
add
outsb
push
push
sub
mov
out
and
es
inc
xor
adc
insl
lods
outsb
sbb
nop
xor
imulb
bound
aaa
sub
xor
adc
je
mul
js
jmp
popl
push
add
incl
push
popa
push
cmpb
xchg
adc
ljmp
sub
xor
rclb
xchg
jmp
imul
rcl
and
adc
mov
and
leave
xor
cwtl
and
icebp
adc
cmc
and
pop
out
xchg
pop
mov
xchg
jp
das
mov
adc
ffreep
fucomip
data16
push
mov
scas
or
sbb
les
push
cmp
mov
aam
addl
xor
aam
sbb
clc
test
or
xchg
and
pop
dec
push
lds
or
shlb
or
mov
dec
mov
push
orl
lea
fisttpl
shrl
in
loopne
leave
and
cs
xor
mov
mov
push
lods
arpl
jecxz
fmuls
xchg
push
loopne
aam
dec
pop
fs
mov
pop
sbb
or
mov
and
or
push
and
jo
adc
outsl
adc
push
ja
push
pop
aam
add
loopne
adc
daa
enter
inc
push
push
mov
or
xor
aam
ja
push
cmc
sub
inc
fildll
jle
add
add
xchg
xor
pop
out
or
jb
jne
adc
add
adc
loope
lock
xor
xor
xor
testb
lret
mov
insb
sahf
loope
and
mov
or
pop
or
push
cmpsl
push
pop
loop
shrl
std
and
add
push
lea
pop
sbb
mov
fiaddl
xlat
jne
and
in
jbe
sub
mov
nop
sbb
mov
fldt
icebp
cmp
lcall
mov
push
mov
decl
mov
cmp
aas
pop
and
add
pop
mov
pop
out
mov
or
or
mov
jecxz
pop
orb
xor
mov
push
push
pop
mov
jg
sarb
xchg
adcl
push
pop
cmp
push
bound
sub
je
push
pop
inc
mov
sbb
pop
in
incl
fs
in
lock
add
ja
pop
sbb
push
loopne
push
out
outsl
push
dec
push
xor
dec
lcall
int
lea
mov
push
sub
jne
movsl
je
mov
pop
xor
inc
cmc
enter
pop
add
push
sti
in
dec
push
nop
xchg
push
lock
cld
in
or
insb
inc
lock
pop
out
js
cs
sbb
jo
shrl
xchg
add
nop
adc
push
pop
loopne
and
push
cmp
mov
cmp
inc
adc
mov
lea
ret
nop
or
rcr
add
pop
sar
push
rcll
mov
decl
lock
movsl
mov
adc
inc
ljmp
add
jns
push
aaa
fbstp
xchg
loopne
add
iret
sbb
cli
mov
and
mov
insl
clc
mov
and
call
ja
rolb
arpl
inc
mov
lods
aaa
es
xor
mov
mov
outsb
in
push
ljmp
imul
cmp
es
add
lcall
cmp
add
mov
test
sub
cmpsl
jecxz
push
or
lret
pop
sbb
test
popf
inc
or
xchg
cli
sar
add
or
push
mov
adc
mov
push
cmpsb
dec
dec
fdivr
ret
aad
sbb
shrl
leave
mov
and
in
pusha
push
mov
mov
das
addb
cltd
mulb
dec
cmc
or
test
outsb
lea
das
inc
adc
lock
add
mov
mov
aas
mov
add
cmc
mov
lea
add
sub
test
push
sub
addr16
sub
aad
ljmp
lds
stos
inc
add
lds
adc
or
loopne
gs
aad
or
call
adc
lea
jmp
pop
push
pop
mov
lods
add
add
jge
mov
sub
loope
fisubs
fwait
je
cli
add
std
push
or
or
aad
mov
xchg
loope
je
into
xor
stos
inc
pop
mov
mov
nop
movq
or
adc
pop
and
inc
test
cmc
and
add
push
cs
cld
or
push
add
or
loope
inc
dec
mov
inc
cltd
sub
inc
aam
out
sbb
pop
inc
jl
push
inc
insb
cs
stc
addb
sbb
or
aad
inc
addb
or
adc
fistps
inc
aaa
xor
sub
push
inc
mov
mov
das
add
movsl
xchg
push
add
lea
test
inc
dec
mov
xor
lods
add
push
pop
lcall
add
lea
mov
popl
loopne
or
xorl
mov
cld
fadds
fists
adc
clc
xor
add
dec
inc
mov
mov
add
fildl
out
out
shrb
sbb
add
sub
or
sbb
cwtl
inc
orl
sbbb
scas
or
ljmp
add
mov
aad
mov
add
es
inc
std
jbe
aad
and
mov
rorb
fwait
mov
repz
out
mov
sub
data16
ljmp
cmp
data16
or
movsl
or
add
push
mov
mov
cltd
std
jg
loop
jge
loopne
iret
mov
jp
adc
push
jecxz
ret
sbbl
push
push
mov
inc
add
pop
or
dec
test
fsubs
push
ficomps
mov
or
mov
pop
inc
fsubrl
pop
mov
or
mov
cmpsb
xchg
and
pop
cmpb
cmp
icebp
sub
xchg
sub
das
add
shll
pop
pusha
aaa
dec
add
ret
sbb
testb
scas
adc
decb
sbb
adc
or
jo
adc
das
inc
orb
inc
das
lods
add
inc
pop
mov
mov
addr16
aad
push
mov
mov
std
add
and
or
fwait
add
pop
mov
push
frstor
repnz
cmp
and
sti
loopne
jmp
insl
mov
mov
add
sub
sub
mov
sbb
subb
aas
cmp
inc
add
cmp
testb
and
or
fldenv
inc
pop
mul
mov
test
inc
push
cmc
add
ret
sbb
pusha
add
sub
jle
pusha
dec
jbe
push
mov
jp
inc
pop
loopne
cld
and
sub
call
xchg
cli
sub
and
pop
popa
mov
jo
jbe
rclb
add
mov
call
adc
mov
std
xchg
push
mov
sbb
mov
pop
sub
push
jecxz
lea
ret
cmp
clc
pushf
call
scas
rorb
push
jg
or
subb
sub
adc
push
and
filds
shl
aas
std
xchg
and
add
rcl
js
and
cmp
loope
outsl
xor
dec
mov
adcb
adcb
sub
mov
dec
lretw
inc
adc
mov
test
mov
pop
pushf
mov
dec
push
fnstcw
gs
nop
or
movsl
jl
fwait
jmp
pop
xor
mov
inc
jge
fistpl
sbb
push
repz
sti
push
sbb
mov
mov
push
hlt
or
add
lods
test
loope
in
add
inc
xchg
sahf
and
jge
inc
scas
data16
push
or
inc
add
cmpsb
mov
mov
faddp
pop
imul
cmp
pop
or
add
or
pop
movsl
lea
or
imul
mov
int
cld
cwtl
int3
loope
into
xorb
gs
mul
cltd
stc
and
mov
push
pop
add
in
inc
sub
add
aaa
add
sarb
jae
sbb
cmp
cmc
inc
pushl
mov
mull
dec
sbb
add
roll
add
icebp
jge
push
mov
idiv
adc
inc
and
lret
or
add
pop
sub
jg
sbb
xchg
or
push
dec
icebp
orb
incb
into
push
pop
and
mov
ret
pop
pop
shll
adc
out
jbe
push
inc
cltd
sbb
inc
les
inc
dec
sub
shll
mov
test
jmp
jge
fmull
mov
mov
fmul
mov
fildll
sub
mov
and
mov
or
add
mov
or
rorb
mov
sub
adc
pop
stos
mov
sbb
rcll
arpl
add
mov
inc
testb
mov
ficoms
or
adc
xor
adc
cmovo
add
sub
sub
push
cld
ja
mov
mov
xchg
lock
add
jo
nop
xor
in
push
add
pusha
push
imul
in
add
or
jb
and
and
sbb
cs
loopne
int3
iret
mov
inc
or
sub
push
sbb
call
or
inc
push
and
adcb
jno
rclb
cmpl
rorb
mov
push
std
push
inc
cmc
sbb
mov
mov
adc
sbb
loopne
or
sub
xor
xchg
mov
xor
xor
test
test
pusha
mov
xor
inc
and
adc
sub
out
andb
hlt
mov
out
pop
andl
jns
mov
xorl
mov
in
aaa
cmp
mov
mov
and
js
mov
cmc
test
insb
push
lret
jo
mov
jl
mov
imul
es
mov
jmp
add
inc
sbb
sar
adc
sub
adc
sub
add
xchg
mov
fisubrs
sbb
push
lods
stos
rorb
mov
inc
push
add
or
les
adc
xchg
or
xchg
mov
or
sbb
cmpsb
iret
movups
inc
push
mov
sub
rcrb
xchg
jle
jge
cld
xchg
lahf
xchg
js
adc
std
inc
push
xor
imul
loopne
mov
or
fmull
or
xchg
testb
mov
pusha
lea
stos
clc
insb
cltd
outsl
push
mov
testl
movsb
lea
test
inc
mov
cmp
fldenv
cltd
mov
cwtl
out
movsl
mov
xorb
push
inc
and
cltd
adc
pop
mov
mov
adc
jno
adc
pusha
jecxz
xchg
lock
cld
das
inc
insb
shlb
jb
and
cs
push
repnz
in
add
or
pushf
sti
xor
aaa
jb
adc
push
push
rolb
dec
das
es
mov
pop
push
sub
or
mov
lock
sub
scas
inc
inc
cmc
sbb
popa
xor
add
in
adc
ljmp
mov
inc
icebp
lea
dec
nop
mov
sarl
inc
aaa
pop
dec
and
inc
add
push
outsl
push
mov
loope
push
xor
xor
subb
test
iret
and
incb
icebp
mov
mov
and
mov
mov
mov
cmc
jo
cmp
test
jmp
sbb
mov
hlt
mov
jb
and
xor
xor
mov
pop
sbb
fsubrp
or
mov
push
jmp
pop
fadds
aam
les
xchg
or
mov
ljmp
mov
aad
popa
add
in
sbb
inc
stos
or
adc
loopne
sub
inc
cmp
dec
sub
sbb
push
aaa
pop
add
and
pop
mov
and
sbbl
xor
push
jecxz
arpl
and
inc
push
mov
mov
jecxz
mov
fs
add
inc
push
rcrb
add
fs
incb
push
call
sub
lret
sbb
rcrb
mov
add
cmp
cmp
xor
popa
mov
inc
movsb
or
sub
or
andb
mov
inc
push
test
subb
add
inc
push
add
scas
mov
test
cmc
push
sub
nop
add
mov
test
fwait
pop
cmp
iret
push
ss
cmp
icebp
mov
sbbb
mov
sbb
popf
jns
push
and
mov
and
icebp
pop
std
inc
or
aad
and
and
pop
inc
and
pop
mov
and
jno
mov
push
addr16
imul
fsub
or
and
push
icebp
sub
inc
test
gs
insl
push
lock
jge
add
adc
pop
out
or
add
adc
insl
mov
xchg
gs
add
pop
outsl
mov
or
mov
pusha
daa
adc
xor
pop
divl
ret
lret
pop
xor
pop
ffree
nop
cmpsl
mov
ret
fdivrl
rcrb
faddl
cwtl
sti
fbstp
cmp
adc
clc
push
mov
mov
out
xchg
adc
xchg
mov
sub
or
mov
clc
cmp
hlt
xchg
aam
adc
out
or
add
mov
mov
jmp
add
inc
xor
adc
incl
rclb
mov
add
adc
test
je
mov
aaa
pop
ljmp
ret
xchg
xchg
adc
pop
aas
xchg
mov
pop
test
mov
icebp
test
push
sbb
adc
js
popf
mov
push
mov
stos
mov
jle
push
sub
adc
aas
jne
fisubrs
dec
pop
insl
jo
rorb
jge
sbb
loopne
jae
movsb
mov
loopne
adc
pop
mov
dec
xchg
adc
lea
sub
jge
add
inc
sbb
xchg
and
mov
push
das
inc
or
fcmovnbe
inc
in
pop
data16
idiv
fcomip
cmp
and
pop
adc
pop
inc
or
add
or
xor
sub
stos
dec
mov
mov
ss
push
call
adc
adc
push
hlt
sbb
dec
shrb
sbb
sub
clc
fistl
aaa
adc
mov
jg
mov
or
sbb
inc
das
xchg
into
or
add
imul
pushl
mov
mov
inc
les
rcrl
jg
mov
insb
jmp
lret
add
aad
ret
cs
out
jo
adc
mov
pop
stos
mov
push
aam
test
iret
xchg
int
mov
xor
sub
enter
adc
jle
cltd
xorb
lods
add
rep
loope
push
out
add
mov
jg
das
loop
rcrb
into
push
mov
int
adc
sarb
mov
hlt
outsl
pop
push
mov
xchg
movsl
sbbb
daa
mov
push
fsts
sbb
lods
push
push
mov
inc
bound
insb
pusha
ljmp
leave
aad
cmp
bound
fimuls
pop
pop
and
rcrl
add
mov
sbb
adc
or
jl
mov
xor
mov
xchg
ljmp
cmc
es
xor
xchg
or
push
xor
ret
push
fmul
rcr
out
jecxz
adc
push
ljmp
add
in
xchg
das
jne
sbb
dec
adc
add
test
adc
mov
push
cli
dec
add
fisubl
xchg
add
adc
lds
adc
mov
ret
into
inc
and
loope
push
add
inc
frstor
add
imul
js
mov
jns
mov
and
in
mov
add
add
adc
xorb
and
aaa
push
insl
clc
cmc
xchg
add
into
push
cmp
mov
pop
push
insl
xor
add
push
mov
imul
mov
adc
push
mov
push
add
aaa
push
or
lods
pusha
mov
xchg
push
outsl
fs
mov
dec
mov
sbb
jge
push
inc
fcmovnb
cmovl
ss
mov
pop
fldenv
rclb
fdivrl
mov
pop
cmp
imul
mov
lea
inc
lea
jo
add
push
xchg
or
xor
jmp
sbb
pop
and
pop
aam
xchg
mov
mov
push
sub
jge
cmp
test
movsb
pop
inc
lret
pop
and
sti
pop
pop
mov
mov
das
insb
loop
out
mov
push
movsb
fdivs
call
or
add
adcb
jne
push
orb
mov
das
outsb
mov
adc
test
movsl
xchg
xchg
push
add
mov
fistps
data16
adc
or
cmpsl
sub
push
add
inc
cmpsl
insb
inc
or
adc
cmp
cwtl
push
sub
adc
cmp
jae
or
icebp
mov
mov
fdivrl
fs
and
xor
loope
mov
test
push
mov
jbe
add
inc
mov
push
mov
add
jmp
and
sbb
call
sub
or
loop
mov
or
cmc
add
not
sbb
hlt
and
inc
inc
cmpsb
lea
cli
movsl
loop
loopne
jle
lds
aaa
in
push
int3
mov
jns
dec
loopne
push
adc
stos
outsl
push
pop
add
call
aas
mov
adc
sahf
mov
and
in
hlt
shrb
popa
jge
xor
add
cld
and
push
test
pop
and
fucom
pop
rorl
or
mov
xchg
es
inc
push
adc
mov
mov
mov
xor
outsl
push
fistpll
xor
or
hlt
scas
xchg
call
lods
adc
cmpb
inc
xor
dec
mov
add
cmp
icebp
inc
stos
and
aaa
add
and
fldl
dec
add
or
mov
shlb
jmp
mov
add
roll
push
imul
popa
lds
add
incb
add
lahf
xadd
test
jo
mov
lods
inc
mov
or
and
pop
int3
adc
es
cmc
push
pop
imul
dec
mov
sub
or
sub
std
pop
mov
push
pop
mov
push
or
and
mov
je
jecxz
pop
stos
mov
leave
and
fs
mov
xchg
add
or
subb
shll
int
xchg
mov
shlb
push
xor
add
incl
std
loopne
push
mov
loope
loop
pop
jge
loop
sarl
mov
sub
out
and
adc
jne
mov
xchg
hlt
add
add
or
and
sbb
test
sbbb
aaa
or
push
add
das
insl
ljmp
xchg
sbb
fadd
stos
data16
pop
mov
nop
push
dec
jmp
inc
lods
cmpsb
mov
neg
in
pop
push
mov
push
mov
shrl
sub
sbbb
mov
mov
out
daa
leave
and
pusha
cs
jne
xor
push
loope
inc
xorb
add
push
shrb
mov
popa
add
in
sbb
cmpsl
add
sub
mov
test
into
add
jp
ltr
mov
xor
mov
sti
or
scas
ljmp
mov
xchg
inc
pop
adcl
dec
addb
push
cmp
adc
pusha
xor
add
adc
insb
movsl
jnp
and
sub
sbb
and
test
bound
push
add
mov
inc
out
push
push
inc
push
addl
and
mov
lods
add
stos
mov
mov
cmpsl
jo
sbb
cmp
jle
fisttpll
mov
jnp
rorb
bound
push
filds
cli
outsl
ror
loopne
adc
mov
push
aam
and
push
adc
pushf
rcrb
lds
adcl
inc
push
shlb
cmpsl
mov
sbb
sbb
push
dec
inc
outsl
sar
mov
mov
js
lcall
imul
push
pop
mov
adc
cli
adc
test
cmp
call
and
out
rcrl
push
loop
ret
or
popa
or
mov
or
ja
cmpl
add
outsl
lock
push
jnp
xor
pusha
cli
and
outsl
sub
sub
cmp
pop
cli
ret
or
std
data16
nop
jo
or
xor
add
push
repnz
lock
fcmovu
rorb
or
push
adc
push
inc
and
shll
mov
and
xchg
rcrb
je
jno
outsl
jae
push
jns
push
xor
mov
stos
add
sub
mov
jo,pt
add
stos
sbb
ss
add
jmp
pusha
mov
adc
pop
popf
add
loope
outsl
jmp
mov
insl
jmp
add
pop
fcomip
call
inc
jae
stos
insb
test
rclb
push
dec
push
push
loopne
inc
xor
adc
mov
push
ljmp
jge
or
cmpsl
addb
or
movsb
das
adc
or
push
hlt
xor
mov
pop
add
or
mov
or
mov
sbb
add
add
sarb
sbb
add
fstl
push
into
inc
pop
sub
inc
test
mov
mov
sbb
sti
dec
cmc
outsl
sti
test
mov
jg
adc
stc
aam
loopne
pusha
mov
in
push
test
dec
es
cli
or
jl
cld
push
fidivs
add
or
fadds
inc
out
xchg
mov
je
sbb
popa
shlb
or
ds
pop
push
arpl
mov
jmp
mov
jne
inc
add
test
leave
mov
cmpsl
icebp
inc
mov
aad
mov
addl
mov
mov
push
ja
test
outsb
movsl
dec
mov
mov
push
cmp
push
out
mov
jo
cltd
bound
inc
add
jg
push
loope
loop
jb
dec
loop
mov
xchg
mov
sub
dec
jo
fisubrs
sar
cmp
mov
cmp
sub
and
shlb
xor
movsb
push
shl
add
sbb
inc
mov
hlt
insl
mov
cmpsl
hlt
mov
pop
movsb
insl
cmc
and
mov
jmp
loope
outsb
pop
mov
sbb
mov
stos
sar
mov
movsb
es
mov
sbb
aaa
or
mov
dec
pop
rcr
bound
push
pusha
or
add
sub
aad
xchg
xorl
in
add
add
adc
sub
sbb
push
in
inc
inc
jae
aaa
add
sbb
jp
and
mov
push
add
and
add
std
ja
fwait
mov
pop
or
xor
xor
nop
aaa
jle
xchg
add
or
push
xchg
xchg
loope
mov
pop
outsb
or
loope
sarb
aas
insl
hlt
movsl
add
insb
add
mov
stos
mov
mov
sbb
xor
fisubl
in
repnz
aas
dec
movsl
cmp
push
sbb
les
add
les
mov
pop
cwtl
in
xor
mov
in
xchg
call
sbb
loope
mov
sub
mov
xchg
sub
xor
sti
xchg
mov
shll
add
inc
adcl
mov
and
es
add
adc
jg
xlat
pop
and
orl
push
push
mov
rolb
mov
nopl
inc
in
mov
rol
es
clc
mov
mov
or
xor
decl
push
adc
adc
subl
add
imulb
push
popa
inc
imul
lea
push
xor
fists
decl
shrl
rorb
and
and
inc
mov
enter
add
aad
adc
je
mov
push
add
or
mov
inc
adc
fbstp
adc
push
lret
pop
lock
mov
sub
adc
sbb
adc
lea
inc
pop
enter
mov
cmp
mov
pop
fildll
inc
or
mov
add
pop
pop
mov
xchg
cmpl
sub
movsl
aad
mov
mov
add
movsl
jg
icebp
leave
es
cmp
add
add
or
lods
inc
sti
xchg
pextrw
cmp
adc
or
push
jne
pop
jge
scas
fimuls
mov
gs
es
mov
outsl
pop
popa
cltd
or
sub
mov
mov
add
test
jge
mov
mov
push
into
insl
jo
pusha
and
idivb
or
sbb
sbb
pop
push
cs
xor
xchg
lea
ficoml
enter
add
push
mov
test
data16
aam
add
cli
push
xchg
sbb
inc
dec
xlat
insb
lock
push
push
movq
insb
std
add
loop
mov
jno
stc
mov
xchg
decl
jne
xor
loopne
loopne
ljmp
jecxz
lock
pop
xchg
aaa
inc
xor
rep
gs
outsl
add
shrb
jle
cli
push
add
les
imul
clc
es
mov
xchg
sub
lds
mov
add
es
cmpsb
out
and
in
jle
add
out
int3
fnstcw
inc
add
lea
adc
jle
add
add
lock
and
add
ss
mov
cwtl
dec
out
inc
xor
add
pop
and
adc
mov
push
add
mov
andl
pop
andl
pop
jg
arpl
sub
jecxz
sahf
sub
inc
test
inc
add
dec
arpl
ret
push
mov
rolb
dec
mov
pop
mov
mov
cld
sub
add
mov
sub
mov
mov
sbb
mov
push
mov
loop
jecxz
lea
adc
cld
lea
mov
leave
xchg
push
add
testl
pop
mov
lea
add
inc
cmpsl
or
rolb
xor
mov
inc
movsl
xor
jae
jne
cmp
push
in
or
mov
lret
leave
inc
das
adc
sub
mov
enter
mov
add
aam
mov
pusha
jecxz
sbbb
mov
add
pop
pop
sub
jbe
sbbl
adc
mov
add
xor
dec
adc
or
stos
iret
add
cmp
inc
adc
pop
test
xchg
shrl
popa
push
shrl
sbb
or
mov
mov
push
ljmp
xor
dec
or
and
mov
mov
push
or
adc
mov
xor
sar
lods
adc
xchg
subb
jmp
call
es
incb
ficoml
adc
and
or
stos
push
lods
ret
xorb
bound
cmp
orb
mov
outsb
push
aas
shrb
jl
roll
mov
je
jg
push
sbb
sbb
in
enter
ss
lcall
add
mov
cld
outsl
pop
loopne
insb
add
or
jnp,pn
or
mov
add
je
adc
and
rolb
add
out
sub
push
adc
or
imul
test
fnstsw
or
rolb
push
mov
orl
les
mov
and
dec
dec
and
fidivrs
xchg
add
pop
jl
repnz
dec
xchg
sbbb
add
push
popf
insl
test
das
in
dec
std
sbb
xor
sti
outsb
cmp
mov
or
mov
shrb
sub
in
or
push
ret
jp
mov
xchg
push
pop
dec
jo
lods
aad
into
cmpsb
fadds
or
fdivl
lods
mov
sahf
aas
push
loop
ds
or
mov
and
add
dec
shrb
decb
mov
out
jl
bound
scas
negl
inc
fsubl
subb
mov
mov
mov
js
inc
push
or
dec
inc
shlb
pop
pop
mov
mov
out
outsb
out
mov
hlt
out
push
cmp
xor
andb
add
adc
cmpsl
push
adc
pop
popf
fsub
push
dec
cmc
mov
inc
insl
and
sarb
mov
jbe
adcb
add
stos
test
and
mov
pop
inc
pusha
mov
mov
mov
ficoml
sub
and
add
mov
dec
inc
clc
mov
push
add
in
push
jg
or
pusha
add
stc
add
and
xorl
or
leave
dec
mov
add
mov
loope
sar
mov
xchg
inc
jge
or
mov
jle
sub
ss
or
push
dec
or
loopne
mov
mov
cmp
in
dec
stos
orl
fisttps
mov
rorb
sbb
mov
inc
gs
inc
add
or
hlt
fists
aad
negl
es
cmp
or
fstp
ljmp
or
pop
or
test
mov
incl
adc
cli
andb
xchg
pusha
dec
mov
mov
sbbl
popa
sbb
les
jge
mov
adc
xchg
in
inc
or
jb
cs
push
adc
fwait
or
cltd
jg
push
and
mov
jmp
pushf
mov
adc
mov
clc
cmp
out
adc
sbb
or
jecxz
jg
ficoms
lods
cmpsb
pop
incl
adcb
test
mov
pop
repz
adc
push
pop
out
fcmovne
inc
push
jecxz
cs
add
push
cld
popf
mov
jae
neg
popf
sub
outsl
add
out
jecxz
aas
popf
adc
and
pop
fisttps
dec
js
addb
sbb
subl
imul
jno
cmc
fidivl
mov
or
outsb
pusha
inc
les
mov
shll
outsl
xor
movsl
or
adc
cld
ljmp
add
cmc
push
insb
or
mov
add
push
cmp
aaa
popw
or
daa
cs
push
mov
add
lds
add
mov
add
adc
pop
aad
dec
mov
push
test
inc
sub
test
int3
ror
or
mov
outsl
inc
sub
sarl
dec
or
mov
and
jmp
inc
fistpll
mov
adc
jo
inc
or
adc
adc
mov
fadds
mov
add
adc
sub
mov
xor
adc
xor
in
sub
pop
int3
sbb
push
push
mov
inc
outsl
sbb
and
jo
stos
pop
sbb
xor
icebp
mov
mov
sub
xor
mov
or
xor
xor
push
add
mov
cli
aam
loopne
inc
repz
add
inc
or
sub
mov
adc
aam
add
fsubrs
adc
test
clc
lods
push
jns
adc
es
jecxz
cmpsl
imul
icebp
stos
ja
mov
sub
repz
pushf
fidivs
add
ljmp
push
add
push
or
outsl
mov
xlat
sub
enter
aam
lret
inc
aad
data16
jb
or
mov
xchg
out
aam
outsl
movsl
xchg
add
stos
divb
xchg
add
in
xchg
loopne
mov
aam
jp
or
pop
xchg
out
and
inc
insb
mov
ljmp
or
lods
xchg
and
pop
loope
jns
push
fistps
daa
lods
sbb
xchg
xor
mov
out
mov
mov
out
xor
xchg
push
xchg
in
popa
mov
aas
outsb
daa
mov
mov
orl
insl
sti
pop
loopne
andb
in
sbb
aam
cmp
nop
mov
mov
sbbb
gs
xchg
mov
jbe
pop
push
outsl
push
call
std
or
jp
xor
inc
dec
jbe
dec
mov
repz
stc
rorb
pop
mov
lcall
cmpsl
mov
inc
fcompl
adc
or
xor
and
cmpsb
fidivrl
insl
loop
cwtl
add
sbb
pop
push
add
adc
sbb
rorb
add
int
mov
push
jo
cli
popa
inc
outsl
test
adc
sbb
das
add
mov
and
add
rcll
mov
in
sbb
push
inc
xchg
js
pop
add
mov
data16
loopne
jecxz
orb
push
rol
sbb
test
or
sbb
add
add
push
std
stos
call
outsb
cmp
add
and
pop
pop
movsb
icebp
xchg
movsl
lods
lock
sub
pop
dec
call
mov
in
popa
or
rolb
outsl
fmull
xor
inc
shrb
ud0
call
push
mov
sub
adc
mov
push
std
pop
outsl
sbb
xchg
mov
inc
jp
loop
loope
lea
jl
mov
cs
or
std
mov
and
shl
xchg
cs
or
adc
cmpsl
mov
cltd
in
and
xlat
xor
xchg
pushl
popf
icebp
outsl
add
fistps
add
xchg
jmp
rcrl
mov
jae
push
or
fbld
lock
popa
pop
inc
jno
pop
lahf
mov
sbb
lock
xor
mov
unpckhps
imul
push
lods
push
add
mov
pop
in
mov
and
dec
loopne
mov
jg
out
jl
cltd
call
test
adc
lock
mov
outsl
jl
andb
sbb
sbb
xchg
lock
inc
sbb
adc
pop
outsl
out
inc
add
add
fwait
loopne
loopne
ud2
stos
pop
les
icebp
lea
pusha
out
rcll
nop
icebp
call
adc
mov
lods
adc
push
rcrb
push
gs
fsubs
inc
das
loopne
mov
cmpsl
push
add
mov
or
lahf
mov
cmpsb
and
pop
daa
scas
xchg
push
dec
loop
jg
loop
nop
fistpl
push
pusha
push
and
jno
arpl
icebp
lods
mov
idivb
fisubs
mov
jo
jb
orb
data16
in
call
out
ret
inc
xor
scas
daa
xchg
add
add
mov
jge
insl
xchg
gs
push
and
ret
das
inc
push
out
data16
hlt
mov
xchg
es
das
pop
aas
xchg
into
add
cld
push
lret
mov
hlt
cli
or
xchg
cmpb
mov
out
push
sti
call
jo
fistl
psubusw
lods
movsl
push
outsb
paddw
movq
mov
fmull
add
psllw
ds
or
sbb
sbb
clc
popa
sub
pop
sbbb
adc
inc
push
pop
ljmp
pop
mov
imul
shr
sub
xchg
sbb
xchg
lret
aaa
sub
push
ljmp
repz
dec
or
inc
pop
in
adc
repnz
xchg
cli
divb
xchg
inc
or
rcll
or
inc
orl
inc
into
call
add
movsl
in
push
add
mov
aaa
mov
repnz
add
push
mov
push
lock
loopne
add
popa
xor
je
mov
in
test
fdivl
jns
push
pop
hlt
dec
mov
or
mov
or
pusha
add
aas
cmp
xor
data16
data16
outsl
call
fldt
add
into
sub
imul
add
fadd
xor
xchg
or
movsb
mov
outsb
mov
add
or
rcl
shl
in
mov
fadd
fildll
shlb
es
add
adcb
xor
cli
into
push
out
pop
add
and
xor
sub
and
clc
or
mov
mov
fwait
popa
fisttps
jb
lret
mov
or
xchg
rorb
rol
add
js
rorb
add
andb
hlt
add
dec
push
mov
cli
nop
movsb
mov
mov
int3
inc
adc
add
into
adc
sbb
daa
in
out
sub
mov
adc
add
fcompl
inc
in
mov
inc
and
xlat
add
mov
and
add
push
out
cmpsl
cmpsb
sbb
mov
mov
mov
loopne
mov
adc
outsl
mov
jne
push
xchg
inc
prefetch
or
adc
and
aaa
push
add
cmc
xchg
scas
and
dec
sub
jne
mov
jno
loopne
frstor
mov
push
pop
mov
mov
roll
inc
ljmp
sbb
mov
pop
push
xor
adc
test
lds
stc
or
inc
mov
or
scas
andl
aad
and
pop
and
mov
mov
inc
add
sub
bound
dec
sub
adc
adc
mov
add
push
pop
add
mov
addl
fwait
mov
cmp
in
testb
call
adc
mov
inc
mov
popf
add
inc
adc
insl
insl
adcl
mov
arpl
and
xchg
fildl
orl
cwtl
fsubs
or
je
and
and
shl
pop
add
cmc
sbb
negb
mov
xchg
mov
adc
push
out
data16
hlt
dec
inc
imul
lea
orb
xor
cli
mov
orb
sbb
push
adc
inc
xor
add
les
hlt
mov
fwait
ret
inc
push
loope
push
or
leave
inc
xchg
xchg
hlt
stos
in
sub
out
add
and
xchg
jns
lods
mov
pusha
daa
and
mov
mov
inc
movsb
add
sub
add
scas
xchg
loope
fstpl
or
call
pop
hlt
fisubrs
xchg
adc
scas
loope
sub
mov
sbb
shr
cmc
fbld
insb
push
stos
push
outsl
lcall
jmp
adc
mov
shrb
push
adc
jecxz
or
mov
out
mov
xchg
cmp
cmc
into
mov
insb
jne
pop
sbb
add
fcompl
mov
inc
push
icebp
add
push
or
or
outsl
mov
rcrl
fsubl
mov
aas
rclb
mov
in
fisttps
or
pop
add
sub
addb
stos
mov
rcr
inc
pop
aam
xlat
and
pop
imul
stc
add
adc
shrl
jne
pop
sub
mov
and
lods
scas
andb
lds
rcr
clc
cs
es
add
movsl
sbb
push
push
mov
push
cld
pop
lods
outsl
mov
sbb
aas
xchg
aam
xchg
or
sbb
push
or
rol
cli
outsb
movsb
stos
xor
jecxz
mov
sbb
mov
fcoms
lret
lret
mov
mov
xchg
lret
pusha
mov
xor
in
or
stos
int
mov
xchg
push
shl
movsl
fistps
sbbl
fiadds
jmp
ret
ret
push
in
xchg
xchg
subl
jmp
cmp
mov
aaa
add
xchg
loop
jmp
mov
dec
lds
fidivrs
add
sbb
or
mov
add
push
xor
rcr
jmp
loopne
push
sub
popa
xor
popa
lret
aaa
or
inc
inc
jp
lret
sbb
lods
or
adc
sbb
cmovo
shl
ljmp
dec
loope
xchg
add
mov
or
pop
mov
fwait
aad
sbb
mov
ret
adc
or
js
inc
jnp
ljmp
test
mov
cmc
in
icebp
les
pop
rcll
cmp
pusha
imul
test
out
and
lea
and
mov
rclb
add
or
adc
or
push
add
add
add
mov
mov
cmp
and
mov
cmc
outsb
hlt
aad
inc
aaa
xchg
adc
jecxz
incl
mov
xchg
shrb
in
aad
or
mov
ljmp
in
jg
inc
add
orb
and
sti
das
hlt
outsl
jne
add
inc
sub
or
add
inc
sub
jno
nop
dec
test
cmp
dec
inc
jg
ja
scas
out
loope
push
xchg
andb
std
or
les
pop
out
hlt
addb
cmp
out
mov
inc
jle
sbb
push
lds
std
nop
add
mov
sub
in
mov
jo
sub
sub
pop
mov
orl
inc
push
mov
add
or
pusha
loop
inc
jg
jg
loopne,pn
pop
insb
out
pop
mov
lods
nop
sub
in
push
orb
lock
aaa
or
push
frstor
and
bound
fwait
pop
and
fcmovnb
mov
insb
dec
xchg
mov
push
mov
jo
es
outsl
hlt
mov
leave
stc
inc
and
nop
repz
add
mov
inc
add
add
sub
jmp
push
or
mov
and
data16
imul
fwait
dec
test
xchg
loopne
jmp
mov
xchg
mov
and
popf
mov
rorl
nop
inc
bound
add
jmp
cmp
mov
icebp
mov
ljmp
dec
aad
adc
outsb
lods
adc
insb
lods
std
or
add
inc
sbb
mov
lds
mov
stos
and
cmc
out
push
inc
and
loopne
popa
inc
and
rcrb
xchg
icebp
jecxz
pop
stos
inc
fmul
stos
loope
or
mov
pop
stos
pusha
stc
or
mov
pusha
sub
mov
pop
pop
loopne
xor
in
mov
and
add
cmp
jne
insb
aad
loopne
add
les
push
cmpsb
aad
sahf
icebp
ja
pop
pop
cmpb
andb
dec
imul
push
outsl
sbb
imul
cmp
mov
hlt
shlb
shl
leave
jle
add
sub
mov
mov
outsl
andb
add
sbb
dec
mov
pop
dec
add
call
push
pusha
loop
pop
adc
in
enter
and
or
lds
mov
sbb
add
loopne
subl
lds
fisubrl
std
jg
mov
popa
pop
push
or
mov
ljmp
aam
addl
iret
push
pop
shll
ficompl
lea
cmc
test
decl
pshufw
aam
mov
ja
lock
bound
push
addps
mov
push
mov
mov
inc
mov
adc
or
mov
in
test
outsb
pop
negl
loope
inc
or
push
psubw
jo
add
loop
sarb
jno
test
push
mov
jle
cli
inc
or
jno
adc
mov
gs
int
icebp
sbb
outsl
adc
mov
xchg
xchg
push
and
mov
mov
adc
outsb
xor
mov
add
ficoml
dec
mov
out
data16
aad
aad
ljmp
or
pusha
in
outsb
outsl
xchg
or
sbb
mov
adc
outsl
cld
xor
jecxz
or
scas
or
or
insl
or
sbb
jae
sbb
and
adc
add
mov
xor
push
es
daa
pushl
std
in
roll
enter
adc
adc
outsl
std
lea
roll
and
add
out
ss
rcl
sbb
fsubs
push
push
mov
mov
adc
add
jo
ss
jne
and
fiadds
cmc
rcrb
or
ds
cmpps
adc
mov
or
add
shrb
dec
xchg
jmp
inc
jo
xchg
hlt
fistpll
ficoms
xchg
xor
stos
dec
loopne
xor
lea
mov
mov
mov
add
mov
inc
mov
add
add
or
mov
sbb
inc
adc
adc
push
mov
sarl
in
adc
inc
or
dec
mov
enter
aas
and
ss
jmp
ja
mov
cmc
test
mov
pop
clts
sub
jecxz
pop
mov
sbbl
xchg
or
xor
rcrl
cltd
adc
leave
inc
jb
arpl
ljmp
mov
repnz
add
cli
mov
shll
insb
or
popa
movsl
flds
fnstsw
mov
add
pushl
lds
fistl
sub
or
push
sub
push
add
add
fcoms
mov
push
add
push
loope
lock
int
xor
jmp
aad
cmp
push
inc
outsb
mov
and
pop
mov
push
loopne
jl
jg
arpl
add
lock
in
pop
or
xor
stos
cmpl
xchg
lods
push
mov
fstpt
push
std
or
add
or
jmp
add
movsl
stos
int
ret
jnp
mov
stos
mov
xor
xor
ljmp
jbe
stos
or
lock
xor
dec
orb
xor
add
mov
inc
mov
pop
mov
and
xor
in
mov
inc
xor
stos
jno
mov
imul
pop
add
pop
xor
mov
shrb
jo
aad
rorl
inc
frstor
stos
es
lret
fstpt
mov
mov
sbb
mov
test
adcl
clc
icebp
add
mov
xchg
mov
add
cmp
aad
fnstenv
add
xor
push
daa
or
xchg
addr16
adc
outsb
jae
or
je
dec
lea
rcrl
icebp
dec
into
sub
std
arpl
mov
sbb
je
std
push
dec
jg
shrb
cmpsb
aam
xor
pusha
inc
adc
or
or
lods
mov
and
mov
pop
call
mov
push
lock
sub
adc
repz
sub
lock
imul
stos
out
and
pop
push
sbb
mov
insb
testb
mov
inc
push
lcall
test
mov
ret
fnsave
push
jb
imul
pusha
push
jae
mov
push
add
xchg
mov
addb
int
or
fidivl
add
add
and
lret
mov
stos
fists
add
and
add
push
push
push
add
dec
inc
jns
adc
xchg
pop
add
mov
repz
mov
in
add
pop
push
cmp
cmp
add
mov
add
mov
add
test
lods
mov
mov
int
aad
int
lds
sub
std
icebp
cmc
add
dec
outsl
in
mov
loope
add
sbb
or
push
gs
adc
adc
xchg
mov
cmp
xor
xor
pop
push
add
lret
repnz
and
addb
inc
imul
imul
inc
add
lret
lret
xchg
into
lea
add
stos
mov
das
fisttpl
xchg
into
or
dec
sub
pusha
aad
fs
mov
xorb
mov
popa
pop
test
lret
mov
mov
sub
stos
lds
stc
add
icebp
outsb
lret
mov
or
jmp
mov
push
into
sub
sbb
cmpb
mov
add
push
leave
add
rolb
rorb
rolb
lods
mov
divb
xor
sub
dec
les
into
rolb
xorb
push
inc
rol
xchg
gs
rol
imul
adc
jp
push
cmp
mov
xchg
or
add
mov
ja
xor
xchg
das
cmp
rorb
add
dec
xchg
data16
rol
test
mov
cmc
jmp
js
mov
xchg
add
in
xor
adc
xor
xor
or
mov
mov
and
imul
test
push
ds
movsl
fxch
fmull
ja
mov
rcrb
add
insb
cs
mov
or
add
push
mov
fildl
jg
jae
ss
mov
je
add
arpl
int3
arpl
add
xchg
push
clc
push
push
je
insl
or
outsb
xchg
in
sar
mov
mov
push
add
lcall
or
or
xchg
cs
roll
xlat
cmp
sbb
inc
push
dec
sub
mov
repz
push
dec
add
inc
adc
js,pn
jl
fsts
push
fs
xchg
movsl
cwtl
pushf
nop
and
sub
pop
pop
push
push
or
dec
sub
shrb
inc
jnp
jae
sub
shlb
outsl
arpl
shrb
fwait
lahf
xchg
xchg
mov
addl
movsl
fsts
iret
mov
xchg
fcmovnu
add
pusha
add
ret
rol
add
add
iret
jecxz
addr16
cs
or
or
mov
iret
lsl
cmp
stc
sub
mov
aaa
sub
pusha
add
and
es
push
xchg
or
adc
jecxz
add
or
mov
or
mov
je
mov
jno
xor
loopne
andb
mov
lret
mov
shrl
js
add
jno
or
shl
popa
ss
or
jb
mov
jmp
nop
mov
sbb
out
jno
or
test
inc
jb
fisubl
xchg
out
lret
or
ret
sti
mov
pop
xchg
push
imul
out
add
fistl
jo
out
push
and
pop
adc
shlb
or
lds
add
xor
fisubrl
adc
bound
data16
lock
xchg
pop
inc
xor
xor
or
mov
lret
dec
inc
inc
jnp
jae
lret
mov
ja
outsl
arpl
xor
mov
lahf
xchg
xchg
mov
mov
xchg
adc
cmp
je
cs
mov
xor
fists
push
ror
mov
rcl
push
shll
mov
jo
movsb
rcl
push
ror
mov
into
rcll
or
das
and
xor
rorb
rorb
rorb
jne
mov
rorb
int
or
or
mov
mov
fs
xor
adc
mov
sub
pop
cld
in
add
fsub
sbb
and
or
or
add
cmp
mov
int
aaa
sub
and
int
sub
pop
push
push
add
lret
dec
inc
push
lretw
pop
or
in
or
add
jecxz
push
push
mov
sub
cmp
roll
dec
loope
xchg
orl
fildl
enter
mov
mov
mov
and
pushl
add
add
cmp
push
insl
inc
add
out
les
shrb
pop
in
pop
sbbb
addb
mov
and
loopne
mov
mov
sub
les
add
out
or
xor
es
lds
les
jge
add
adc
adc
jg
div
loopne
nop
dec
cwtl
out
xor
jae
adc
dec
inc
hlt
mov
push
pop
es
insl
fcmovnu
nop
pop
leave
gs
adc
add
adcb
push
aam
out
add
mov
es
sbb
mov
loopne
or
mov
adc
or
pop
or
adc
movsl
popa
add
fldt
fucomip
pop
data16
sub
push
or
add
adc
jmp
push
adc
incl
jb
sbb
mov
insb
push
sbb
gs
jp
and
inc
pusha
and
clc
mov
pop
in
adc
ja
lcall
inc
loop
add
inc
push
or
push
mov
movsl
or
mov
fldt
add
cmpsb
mov
add
lock
xchg
lods
insl
mov
lcall
mov
add
cmc
je
movsb
adc
std
cmp
add
cmc
adcb
add
adc
es
jae
lods
adcl
movsl
adc
mov
adc
in
outsl
outsl
or
lods
lret
hlt
sbb
add
inc
xchg
add
adc
mov
mov
jae
loop
adcl
xchg
push
mov
mov
push
jecxz
xorb
and
cmpxchg
hlt
or
test
or
xchg
and
jnp
lret
arpl
add
jg
mov
les
ret
adc
lods
lock
cwtl
pop
adc
lds
sahf
rolb
rclb
loopne
aaa
sbbb
test
xor
pop
lock
faddl
mov
loope
pop
out
out
icebp
adc
test
push
inc
mov
adc
or
das
pop
mov
or
xor
add
pop
xchg
mov
jge
adcl
outsb
sub
lret
rcrl
mov
pop
cmp
mov
sbb
push
pop
in
movl
incl
cld
xchg
or
lret
sbb
js
or
je
jecxz
subb
aam
cmp
and
insb
and
fwait
pop
fwait
out
and
dec
and
pop
out
andb
ljmp
jg
add
push
in
addr16
out
nop
cmc
add
mov
adc
test
fisttps
adc
test
mov
add
cmpb
add
flds
or
andb
sbb
orl
cli
fucomi
cltd
or
push
push
xlat
subb
cwtl
outsb
in
mov
mov
inc
sbb
stos
out
sub
adc
mov
loopne
and
add
out
push
out
push
dec
add
adcl
and
andl
xchg
fldt
subl
in
test
test
imul
addl
sbbl
iret
test
xchg
in
inc
hlt
lret
ret
daa
push
call
jecxz
loop
shrl
adc
out
in
outsl
aam
xchg
cmp
inc
or
mov
roll
fbld
es
fdiv
inc
push
andb
in
mov
push
push
adc
or
jg
testl
popf
dec
xchg
inc
add
andb
inc
addb
std
mov
test
inc
scas
sarl
add
and
inc
or
dec
test
out
pop
cmpsb
or
repz
xchg
mov
mov
fistpl
lods
notb
stos
jbe
adc
out
sbb
or
inc
inc
adc
mov
push
ljmp
leave
sub
mov
test
mov
inc
shll
orl
cltd
xchg
xchg
in
incl
pusha
addl
inc
xor
inc
add
out
mov
jno
outsl
aaa
mov
shll
mov
fistpll
jae
jmp
in
or
lcall
adc
sarb
mov
mov
aaa
das
xor
imul
insl
bound
fisttps
inc
mov
or
testb
push
roll
data16
mov
adc
in
push
add
movsl
sahf
sbb
ljmp
loopne
add
je
mov
dec
filds
add
daa
add
jecxz
mov
cmpsl
cmc
sub
outsb
pop
xor
sub
stos
fists
dec
push
out
or
xchg
neg
inc
xchg
jmp
shl
fisttps
dec
xchg
out
jecxz
xchg
call
lock
movsl
in
or
dec
and
sarb
push
sub
or
pop
inc
xchg
rcr
inc
xchg
xlat
mov
lret
iret
ret
lret
repnz
xchg
sti
inc
or
add
mov
inc
push
in
push
add
inc
popa
pusha
imul
pop
push
xchg
adc
jne
add
aam
mov
cmp
jmp
incl
sub
in
pop
clc
mov
lcall
repz
adc
mov
repnz
orb
push
add
and
insb
daa
and
std
and
test
lea
call
ficoms
or
fistpll
jmp
test
pop
lods
mov
add
lea
mov
bound
loop
mov
push
insl
push
mov
push
xor
pop
adc
hlt
loop
fildll
pop
dec
stos
pop
push
es
adc
dec
adc
inc
adc
in
pop
sbb
mov
sbb
dec
inc
and
xor
rcrb
in
mov
rolb
xchg
lcall
mov
popa
jb
jmp
shlb
cwtl
pop
subb
lds
insl
setno
or
xchg
pop
scas
in
cltd
and
lcall
out
pop
lock
sbb
or
adc
decl
pop
or
rclb
push
pusha
sbb
or
sbb
cld
xor
imul
cltd
push
roll
xchg
int3
adc
shll
mov
adc
push
mov
addl
loope
fwait
ret
adc
mov
mov
insl
xlat
bound
add
das
iret
sbb
mov
add
sub
xor
icebp
mov
shrb
inc
sbb
mov
mov
subl
mov
add
inc
or
inc
and
push
push
mov
sbb
adc
xchg
add
add
pop
or
add
inc
xchg
inc
or
pop
pop
add
pop
cmp
js
mov
lds
xor
mov
push
pop
mov
add
add
dec
testl
fcomps
std
pop
addb
int
out
sub
push
adc
dec
fcompl
xchg
cmp
shlb
insl
gs
jge
jne
loope
and
sti
in
sub
dec
mov
inc
and
negl
sar
mov
dec
add
cmpb
mov
add
mov
das
push
mov
cmp
pop
lcall
imul
mov
lcall
insl
movsb
mov
fwait
push
or
ljmp
or
mov
stos
dec
shll
roll
add
jle
inc
push
sub
addr16
and
icebp
xor
lods
jo
sub
aaa
add
out
jnp
ljmp
xor
dec
lcall
cmp
jb
jae
in
xchg
cmp
scas
into
jne
sti
push
dec
stos
add
mov
dec
push
leave
and
mov
ja
push
mov
pop
stos
add
push
add
xor
jo
movsb
loope
mov
das
jo
fucomi
call
sub
jo
ret
sub
dec
stos
pop
mov
ss
out
sub
add
popa
push
lock
xchg
mov
lret
loopne
sub
cmpsb
mov
stos
mov
and
push
inc
popf
fld
inc
popa
xor
test
pop
scas
cmc
lret
pop
stos
ljmp
mov
sbb
faddl
cld
xor
ljmp
xlat
ss
cmc
ja
inc
jecxz
or
shll
pop
daa
arpl
jnp
push
inc
mov
ret
xchg
lods
inc
int
je
aad
lcall
xchg
push
ja
sub
pop
xor
mov
or
cmp
pop
pop
adc
fstpt
aaa
adc
outsl
mov
pushf
push
test
pop
call
iret
fwait
sti
push
es
push
fstpl
and
dec
addr16
sbbb
lods
ljmp
fildll
sbb
mov
add
rcrl
mov
jecxz
pop
mov
cmp
pop
mov
sub
scas
inc
pop
or
addb
push
sub
pop
mov
jl
outsb
pop
es
js
xor
arpl
push
jbe
mov
test
adc
xor
add
push
and
mov
stos
pop
lock
dec
gs
stos
pusha
cmp
stos
jge
pop
push
add
add
push
add
stos
cmp
stos
outsl
lock
lds
aas
push
mov
stos
imul
dec
xor
jmp
movsb
add
pop
add
push
or
push
movsl
movsb
inc
movsb
or
movsl
testl
ret
loope
adc
mov
push
add
dec
lods
call
roll
stos
sti
std
sbb
sub
push
add
xchg
outsb
flds
imul
or
xchg
and
das
lods
mov
aas
push
scas
add
push
fld
sbb
rcll
hlt
fcoms
in
pop
sbb
or
xor
insl
xchg
or
lock
fldt
mov
out
orl
test
xchg
gs
mov
insl
aaa
inc
out
add
add
ja
fiadds
sbb
xor
rcrl
sub
pop
loopne
out
cmp
add
xor
fildll
in
dec
pop
or
mov
mov
xchg
xchg
sbb
in
orb
xchg
xchg
orb
outsb
mov
push
loope
and
test
loopne
push
or
mov
jl
add
mov
mov
aam
outsl
jne
pushf
mov
xchg
movsb
pop
sbb
mov
xchg
lcall
xchg
push
jl
inc
jb
add
mov
ljmp
mov
or
rorb
mov
or
fidivrl
lods
add
lahf
addb
mov
rorb
clc
adc
adcb
bound
and
testb
ret
mov
lods
mov
out
orb
scas
inc
movsb
popa
mov
mov
or
shl
add
and
sbb
jbe
jmp
inc
es
ljmp
mov
insb
sbb
movntq
out
xor
test
push
push
test
stos
sbb
and
out
sbb
xchg
inc
pop
rorb
stos
sbb
ficoms
pop
dec
inc
sbb
sbb
mov
mov
dec
insb
in
push
or
addr16
sub
fcmovnb
in
ret
cwtl
add
add
andb
mov
outsl
fisttpl
inc
or
xchg
push
pop
or
mov
add
les
mov
inc
sub
or
and
aad
stos
mov
loope
mov
xor
xchg
fisubrl
dec
add
dec
inc
or
cmpb
jg
push
stc
or
roll
pusha
inc
mov
push
ljmp
adc
inc
movsl
test
xchg
jge
lds
cmp
xchg
mov
incl
xor
ret
rclb
shrb
cmp
xchg
lds
cmc
ljmp
push
loopne
xchg
in
and
sbb
mov
loope
das
mov
dec
mov
cmp
test
fstpt
cmpsl
push
mov
shlb
loopne
sub
aam
pcmpgtw
push
and
add
xchg
loope
pusha
arpl
rolb
andl
aaa
adc
incl
cmp
mov
pop
mov
inc
add
pop
lods
stos
pop
clc
mov
or
clc
loopne
xchg
mov
stc
test
mov
mov
call
xchg
sbb
movsb
sub
loopne
xchg
std
mov
out
xchg
and
ret
push
xlat
mov
xor
xchg
mov
sbbb
pop
mov
mov
jg
xchg
mov
add
inc
js
lea
xor
push
mov
rcrb
enter
add
lods
xorl
dec
test
pop
test
mov
outsl
or
hlt
das
lock
push
adc
sub
xchg
push
and
cli
decl
add
lods
add
adc
shl
stos
out
int3
pop
jp
sub
popa
adc
aaa
mov
divl
mov
push
add
andl
push
xor
popa
xchg
data16
fs
es
push
ret
sub
mov
bound
ret
popa
push
mov
test
pop
and
mov
sbb
or
mov
lea
pop
sub
aaa
inc
loopne
add
or
pop
sub
out
jg
adc
dec
adc
sub
cmpsb
mov
jnp
aaa
subb
or
out
test
adcb
mov
loope
mov
add
push
sbb
add
push
and
fstpl
lahf
fs
mulb
popa
inc
sbb
arpl
test
cmp
add
add
aaa
jl
jmp
push
test
fs
mov
outsb
adcb
mov
popa
imul
mov
les
xchg
mov
popa
mov
push
mov
or
adcl
and
push
dec
jno
mov
ret
mov
nop
push
sbb
outsb
inc
ret
cs
lods
dec
movsl
pushl
ljmp
inc
xor
cmp
add
subl
test
sbb
test
ljmp
mov
and
icebp
push
mov
and
pop
sub
fwait
mov
out
sbbb
xor
das
cld
jg
fdivl
push
or
or
or
jno
lcall
pushl
adc
pop
mov
jp
xor
popa
mov
out
cli
decl
mov
repnz
push
cmp
push
pop
cmc
add
add
je
mov
dec
dec
xor
mov
push
outsb
xor
mov
sbb
jae
fs
inc
icebp
fildl
outsl
test
pop
pop
add
nop
sbb
movsl
mov
loopne
mov
xor
adc
inc
and
mov
test
aaa
repnz
mov
add
scas
xor
mov
xchg
adc
mov
dec
sbb
pop
jno
insl
xchg
rclb
lcall
adc
cs
das
pop
hlt
nop
mov
mov
mov
popf
adc
and
pop
imul
add
jg
mov
add
cmp
out
mov
xchg
jl
repz
mov
mov
loopne
std
inc
imul
push
push
or
sbb
push
cs
rclb
xchg
js
adc
repnz
or
mov
enter
outsl
mov
pusha
sub
push
sub
adc
pop
out
ljmp
mov
jle
int
add
pushf
lock
icebp
add
adc
fisttps
outsb
cmc
sbb
add
mov
pushl
mov
mov
cmp
jmp
test
shlb
sub
sub
push
xchg
je
pop
fsubr
jle,pn
ror
stos
jecxz
or
in
stos
lcall
mov
cmp
mov
xchg
jo
inc
cld
subl
incb
adc
xor
mov
xchg
cmp
add
out
inc
mov
xor
xchg
adc
xor
ret
and
add
outsl
xchg
mov
rolb
xor
dec
push
lock
xor
lea
sbb
in
lods
jno
mov
sbb
adc
aaa
adc
xlat
out
inc
mov
rclb
cmc
adc
pop
loope
inc
movsb
inc
push
xchg
mov
fwait
jae
jmp
jl
push
pop
push
mov
add
mov
das
testb
movsl
mov
cmp
movsl
push
js
push
shll
add
insl
insl
mov
shl
mov
xchg
xlat
gs
clc
testb
movb
jns
jae
rcll
pop
aad
mov
add
lcall
or
icebp
add
lods
xchg
push
pop
and
mov
xchg
xlat
pushf
add
xorb
mov
jge
jecxz
scas
push
push
fs
mov
add
push
ficoms
jb
pop
mov
inc
mov
jns
jl
jg
mov
sti
cli
insb
out
push
and
ds
bound
nop
add
mov
jmp
fistps
or
lods
mov
xchg
inc
mov
es
sarl
cmpsb
in
sbb
jg
sti
in
pushl
fcoml
adc
jno
mov
cmp
mov
or
add
push
mov
add
mov
pop
clc
mov
cmp
jl
mov
aaa
or
push
mov
add
je
push
or
ret
jns
nop
loop
add
xlat
mov
fs
sti
push
and
mov
mov
lock
or
push
pop
mov
pushf
push
rcrb
test
loopne
outsb
cld
adc
lods
xor
insl
out
out
gs
icebp
and
adc
sti
test
push
mov
lds
sbb
loope
hlt
adc
loop
roll
xchg
mov
mov
movsl
push
lods
mov
or
adc
aas
jge
push
adc
mov
xchg
mov
xorl
mov
loope
loope
les
jno
add
das
cld
fistl
nop
mov
orb
xchg
add
mov
call
pop
stc
out
xchg
push
addb
out
sarb
pop
xchg
mov
inc
mov
xchg
dec
adc
in
aam
inc
int3
inc
pop
cli
les
movsl
inc
mov
jl
mov
add
or
sbb
sub
cmp
pop
fistl
inc
fcompl
addl
dec
add
idivb
out
mov
add
add
inc
jmp
add
sbb
cmp
out
add
sbb
dec
js
or
inc
lods
push
mov
pop
pusha
add
dec
pop
imul
adc
sbb
bound
jp
or
lods
or
mov
adc
jl
add
test
test
lods
add
push
mov
sub
or
pop
push
js
pop
adc
aad
cmpsb
adc
jno
sub
adc
bound
xorb
jns
jnp
fistl
movsb
nop
out
rcrl
add
adcb
lret
adc
sahf
les
mov
jbe
sub
pop
xchg
or
fstpt
dec
cltd
cld
push
xchg
sub
movsb
mov
mov
xor
addb
lds
fdivl
pop
js
cli
sub
stos
push
push
dec
push
shrb
ljmp
nop
orl
pop
mov
out
test
mov
jp
push
call
aaa
mov
inc
sub
sbb
insb
int3
mov
adc
or
dec
lret
iret
jl
test
loopne
jmp
mov
rcrl
shll
ret
inc
popa
addb
sbb
cmpsl
add
aas
mov
decb
lcall
xchg
inc
add
sub
mov
add
dec
inc
and
in
ret
mov
in
lea
cmpb
pushl
gs
add
xchg
cmp
ja
add
rorb
outsl
std
pop
flds
push
testl
sub
inc
pop
pop
xchg
pop
addr16
sub
add
mov
mov
jge
xorl
adc
notb
shlb
cmp
lods
ficoml
push
icebp
xchg
jno
cmc
push
inc
mov
addl
addl
nop
jno
mov
mov
movsb
mov
lods
add
enter
movb
or
jle
rcrb
add
ret
in
adc
push
add
push
mov
xchg
loope
xchg
inc
and
mov
inc
aaa
pop
sbb
push
jle
xchg
pusha
sub
add
push
shrb
jg
sub
inc
push
loopne
sbb
push
and
fldl
and
adc
and
or
mov
aad
add
or
add
mov
jae
sub
lods
push
fsubs
xchg
lods
pavgb
mov
mov
leave
mov
inc
inc
cmp
add
aad
fistpll
inc
mov
mov
mov
push
jl
aaa
mov
test
loopne
sti
out
adcb
outsb
jmp
mov
xchg
xchg
pop
mov
jo
xchg
mov
mov
or
ret
jp
xchg
je
cmpb
mov
adcl
pop
jecxz
push
in
mov
push
orb
xchg
or
nop
and
cmp
add
dec
push
mov
loopne
test
cld
sti
push
adc
and
pop
inc
pop
sub
incl
push
cmc
loopne
ret
push
lods
addr16
rorl
mov
mov
mov
push
dec
adc
pop
std
and
mov
lods
roll
aaa
or
test
lods
les
test
and
jnp
mov
mov
adc
and
movsb
cmovb
sbb
mov
icebp
cmpsl
aam
adc
adc
pop
rclb
lods
cmp
mov
sub
mov
imul
inc
in
xlat
in
and
cs
xchg
rcll
cmpsb
mov
loope
imulb
push
push
test
push
bound
pop
pop
movsl
pop
movsl
sub
xchg
fidivl
outsl
sbb
and
nop
in
orl
and
aaa
add
push
sbb
and
inc
sbb
inc
or
rcr
mov
mov
mov
lea
ss
dec
ret
test
mov
mov
cmp
xor
push
sbb
add
and
jg
inc
pop
in
and
mov
pusha
sbb
popa
shrb
mov
icebp
shl
sbb
jae
jg
or
mov
mov
stos
xchg
inc
mov
sub
incl
arpl
xor
fldenv
cld
and
loopne
divl
add
in
test
adc
mov
add
push
insb
jge
push
popa
jb
add
orb
mov
or
jb
xchg
sub
je
repz
add
sarl
test
fsubp
add
pop
aad
xchg
xchg
lds
bound
adc
or
xchg
xchg
cmp
pop
clc
pop
mov
rcll
mov
xor
data16
add
add
mov
dec
mov
mov
aaa
mov
shrl
mov
push
adc
pop
mov
pop
cmp
mov
ffreep
pushl
add
lods
xor
nop
add
xchg
sub
xlat
add
add
mov
mov
insb
pushl
add
add
add
push
push
or
fistps
sbb
adc
dec
add
and
pop
mov
lock
pop
add
sub
std
jbe
mov
xor
jle
add
mov
rcll
xchg
test
push
call
inc
adc
jge
call
push
das
xchg
cmp
pop
add
xchg
cs
dec
popa
out
add
dec
les
sbbl
add
add
mov
xor
mov
lds
mov
and
scas
or
cmp
xchg
sbb
stos
and
nop
cmp
jecxz
cli
add
sbb
test
mov
fwait
pop
js
mov
jnp
add
pop
insb
pusha
or
xor
js
fstpt
sarb
jg
push
add
fiaddl
icebp
loopne
add
sub
add
add
dec
stos
xchg
xor
test
pop
pusha
xchg
xchg
stc
xchg
mov
mov
sbb
pop
xchg
mov
add
das
jae
add
lea
icebp
pusha
roll
shlb
stos
mov
in
notb
add
cld
outsl
add
sti
add
outsb
xchg
lods
pop
push
pushf
pop
test
rolb
mov
stc
insl
imul
pop
hlt
inc
movsl
push
dec
xchg
js
jl
fcompl
inc
mov
popa
dec
sti
or
pop
sub
fcomi
push
fstl
fwait
or
out
stos
push
mov
repnz
jns
pop
int
sti
add
lret
sub
adc
cli
adc
cmp
in
fsts
pop
xchg
iret
das
insb
fldt
mov
sti
or
call
push
jbe
fnstenv
add
out
cs
scas
xor
adc
in
sti
push
sub
lcall
add
sbb
rcrl
sbb
loop
sub
pop
mov
mov
or
push
mov
add
cmpsb
cmc
add
mov
inc
daa
adc
adc
mov
insl
xor
ljmp
add
add
sub
movsl
mov
or
pop
adc
push
mov
inc
loope
cs
cmp
sub
data16
in
jl
pop
incl
hlt
andb
mov
mov
xchg
cmp
in
cltd
shlb
imul
inc
rorb
push
pop
shlb
shrb
shlb
jmp
pop
cmp
add
or
adc
shl
fucomp
fldl
stc
ffree
fstp
frstor
test
fldl
cltd
frstor
fnsave
das
push
fnstsw
inc
dec
fstl
pop
frstor
sub
xor
cmp
add
xchg
jle
jo
fstpl
fucom
cmp
fdiv
fdivr
fadd
or
fsubl
fdivrl
xchg
fcompl
lret
popa
jno
jns
inc
push
fcompl
and
fdivr
lret
mov
faddl
adc
sbb
loope
fcomip
ffreep
fistpll
rcr
mov
mov
xchg
fistps
lret
popa
jno
jns
inc
push
fistps
and
lret
mov
filds
adc
sbb
loope
fdivp
fdivrp
faddp
fidivrs
rcr
mov
mov
xchg
ficomps
lret
popa
jno
jns
inc
push
ficomps
and
fdivrp
lret
mov
fiadds
adc
sbb
loope
fyl2x
fyl2xp1
fld
fnstcw
rcr
mov
mov
xchg
fstps
lret
popa
jno
jns
inc
push
fstps
and
frndint
lret
mov
flds
adc
sbb
loope
fdiv
fdivr
fadd
fdivrs
rcr
mov
mov
xchg
fcomps
lret
popa
fcomp
jno
jns
inc
fcomp
push
fcomps
and
fdivr
lret
mov
fadds
fcomp
adc
sbb
loope
fcomi
fcmovnb
fstpt
rcr
mov
mov
xchg
fistpl
lret
popa
fcmovnu
jno
jns
inc
fcmovnu
push
fistpl
and
lret
mov
fildl
fcmovnu
adc
sbb
loope
fcmovb
fidivrl
rcr
mov
mov
xchg
ficompl
lret
popa
fcmovu
jno
jns
inc
fcmovu
push
ficompl
and
fimull
fidivrl
fiaddl
fiaddl
ficoml
ficompl
push
lds
adc
icebp
aad
sub
or
aad
fdivl
aaa
pop
or
stos
dec
mov
xchg
fdiv
inc
std
mov
xor
adc
std
clc
jle
mov
mov
mov
mov
popf
rcrb
mov
add
pop
inc
mov
inc
pusha
inc
add
orl
fistpll
or
cmp
add
adc
ficomps
orl
mov
mov
das
sub
fnstenv
inc
fldenv
dec
fsts
loop
cld
push
popl
and
neg
lret
mov
stc
in
fcmovb
fiaddl
sbb
test
inc
pusha
psubb
fcmovnu
orb
cmp
icebp
ds
adc
mov
scas
add
xlat
lock
decl
outsb
pop
sub
shll
outsl
mov
inc
hlt
rcrl
adc
jg
movsl
rcrb
das
or
xlat
fisttpll
in
adc
mov
fcompl
and
cli
fistpll
add
enter
fmuls
mov
in
fcmovnb
mov
or
and
jg
fistps
aad
aad
bound
aam
aam
adc
sub
test
pop
mul
fcmovnbe
mov
rolb
fistps
mov
imul
shlb
outsl
incl
xor
rcrl
fnstenv
daa
fnstenv
fsubrs
and
ficompl
adc
gs
insl
fldenv
in
bound
inc
aam
aam
pop
pop
xlat
mov
cmc
pop
in
push
rolb
rorb
sarb
push
shl
rcr
rcll
outsl
pop
rcrb
rol
sub
fst
or
xchg
jg
fcmovu
cmpsb
mov
fnsave
mov
xchg
jg
fisttpll
xchg
fstpl
push
jg
xchg
jbe
fnstsw
jp
inc
inc
fisttpll
dec
fstl
add
and
in
in
frstor
adc
fnsave
fnsave
or
fnstsw
fldl
fldl
or
push
decb
fisttpll
fstl
fstl
jo
in
in
out
loop
out
fsubr
fdiv
fdiv
or
fdivr
fadd
fadd
jg
aaa
sub
fisttps
fistps
fbld
outsl
call
fistpll
jnp
and
inc
fbstp
loopne
neg
add
ficomps
cs
jb
or
pop
or
fcmovnb
pop
adc
popf
or
fidivl
or
ficoml
pop
xor
pminub
loope
jne
xor
pop
decb
int
shl
pop
mov
aad
aad
push
aad
aad
in
aad
call
aam
aam
or
aam
inc
aam
or
xchg
mov
andl
arpl
lahf
add
jle
scas
push
shrb
addr16
hlt
call
enter
mov
fnstsw
jg
stos
or
jl
sub
call
test
loopne
dec
fistpll
pusha
xchg
adc
je
call
mov
and
fidivs
and
fldcw
dec
mov
adc
test
dec
pusha
test
fcomps
pushl
frstor
scas
fstpt
jg
inc
xor
pop
ljmp
inc
fidivrl
jl
out
mov
pusha
cmp
pop
out
mov
mov
lds
aam
sub
xlat
dec
mov
lods
mov
ja
inc
push
adc
pmuludq
std
ror
roll
in
outsl
push
mov
pop
xor
push
mov
inc
cmc
shrb
jns
cs
aaa
fisubrl
in
or
rcrb
test
loopne
out
shl
shl
add
ror
ror
or
rcr
shll
repnz
test
mov
mov
jb
jns
inc
pop
shrl
shll
roll
rcrl
shr
shl
sar
xchg
jg
vcmpss
or
shlb
shrb
sbb
jmp
frstor
fstpl
jo
jns
ljmp
std
and
dec
fldl
or
mov
es
movsb
inc
fcoml
imul
das
insl
add
xchg
aas
fcompl
fcompl
fsubr
add
jmp
call
add
mov
mov
xchg
push
and
nop
popa
sub
push
fistps
fdivrp
dec
fisubs
jo
xor
ficoms
pop
adc
lret
fldenv
lea
xor
push
fsts
mov
xor
adc
pop
neg
repnz
fdivs
xchg
clc
call
fisttpl
fistpl
xchg
fnsetpm(287
xor
xor
out
mov
dec
aad
aad
aam
pop
fwait
aam
aam
loope
dec
aam
clc
xlat
int
lods
add
stos
stos
xlat
sahf
xlat
arpl
clc
xchg
jg
xlat
cmp
leave
mov
or
sbb
out
sar
movsl
mov
sub
insb
rorl
shl
inc
sar
rolb
rorb
inc
shlb
sub
xor
jns
std
fisttpl
push
mov
rcll
or
outsl
sub
pushf
or
enter
shlb
inc
jp
inc
add
or
in
fsubl
cli
idiv
pop
lret
fisttps
ja
cmc
adcl
or
movsb
and
aam
xlat
dec
ljmp
imul
cmp
fldenv
fsubs
add
mov
das
mov
xlat
iret
jle
adc
mov
mov
adc
xlat
ficoms
mov
jmp
ret
add
push
sub
ret
rorb
add
hlt
pop
mov
jecxz
int
leave
shrb
mov
rcr
mov
shrb
shlb
mov
rcl
rorb
push
pop
cmpsl
lods
incl
jg
popa
shrb
imul
jo
inc
xchg
in
inc
rorb
dec
rclb
push
rcrb
pop
shlb
shrb
lock
xor
sbb
sarb
xor
add
or
rclb
jo
sbb
stos
outsl
std
jg
loope
shr
shll
cmc
shl
sar
shlb
ror
pushl
adc
rcr
rcr
xor
mov
and
sub
xor
sbb
sarl
or
rorl
sbb
rcrl
jo
jb
push
mov
rorb
std
sar
adc
rcl
adc
rcl
xor
incl
shlb
test
push
mov
shrb
pop
ljmp
xor
rolb
xor
cmp
xor
cli
adc
aam
xchg
jo
lret
mov
add
aam
aam
aam
jle
xchg
lock
push
aam
or
rcl
pop
xlat
pop
sbb
sbb
add
mov
arpl
daa
shlb
ljmp
inc
arpl
jnp
lock
mov
mov
sbb
cmp
xor
add
std
aaa
andb
and
jns
push
jl
insl
dec
insb
mov
and
sti
mov
out
jmp
sbb
out
xchg
dec
mov
dec
rclb
shlb
mov
lock
fildll
in
mov
sub
and
psubusw
movsb
fcoms
mov
fadds
push
inc
icebp
inc
nop
cmpb
or
or
push
xor
in
pusha
dec
mov
aam
aam
aam
sub
test
xchg
xlat
ja
dec
adc
xlat
aas
xlat
mov
inc
int
mov
sub
mov
adc
inc
pop
mov
push
xor
in
fidivs
fildll
fiadds
fisubrs
push
shl
fistl
std
fimull
push
xchg
push
jae
movsl
aam
aam
dec
inc
cmp
aam
dec
rcl
insb
jl
pop
sub
mov
add
mov
add
shlb
sahf
fdivs
and
fdivrs
mov
arpl
mov
or
jle
push
fildl
in
or
movsl
fimull
and
add
mov
jo
in
xor
mov
aad
aad
or
lret
mov
add
mov
dec
aam
mov
xlat
rcl
xlat
xchg
jnp
mov
xlat
pop
xlat
rcl
rolb
inc
dec
sub
in
or
lcall
xor
sbb
scas
mov
rcr
nop
aaa
pushf
sub
pop
mov
mov
aaa
ret
mov
ljmp
mov
lods
aaa
cmp
ljmp
out
flds
sahf
fldenv
dec
mov
pop
add
aaa
fstps
in
pop
push
fstp
mov
fcomps
or
adc
movsl
in
icebp
aad
lock
call
xor
push
inc
aam
xor
rcl
lock
fstl
popf
fcompl
adcl
pop
fists
mov
fdivrs
add
mov
push
hlt
fcmovnu
xor
aam
insb
add
push
fidivrl
xor
aas
or
push
inc
pop
rcl
cmp
fsubrs
std
pop
outsl
sarl
sub
xor
jns
jo
dec
fists
adc
les
iret
pop
je
stos
lods
mov
loop
or
or
fbld
cli
ljmp
mov
rolb
fstps
sub
imul
or
pop
mov
fdivrs
inc
fcoms
sub
jg
mov
push
imul
sbb
dec
and
mov
repnz
aad
aad
aad
or
and
adc
cmp
sbb
xlat
cli
xlat
lahf
adc
jp
push
mov
push
pop
adc
inc
mov
inc
lock
or
inc
cmpsb
sbb
imul
and
arpl
push
ffree
nop
mov
mov
mov
test
fadd
fcmovnu
lods
call
mov
test
xchg
fdivrl
push
fcmovnu
scas
dec
mov
push
fcompl
and
sub
cmp
aaa
movsl
jmp
adc
cmc
lock
cmpsb
aam
xchg
fistpl
cmp
fidivl
adc
mov
xchg
cmpsb
pusha
inc
cmpsb
xchg
push
pop
aad
aam
xlat
mov
and
mov
jle
inc
shll
pop
bound
mov
das
shlb
rol
incl
ffree
mov
mov
pop
fstpl
mov
sub
add
pushl
iret
sbb
mov
dec
jo
or
fbld
test
fbstp
dec
and
subb
pop
fsts
or
jnp
xor
rcr
ficompl
jg
iret
or
fisttpl
push
xchg
mov
ja
aam
xlat
fwait
xlat
push
shll
cmc
xchg
pop
les
xchg
pop
xor
rcr
repz
roll
push
add
scas
outsl
jo
jecxz
or
dec
jne
shrb
mov
sbb
outsl
push
lock
fildll
hlt
aaa
shrb
ffreep
mov
fxch
fnstcw
mov
mov
fdivrs
sbb
jecxz
loopne
ljmp
outsl
cmp
cld
fcmovnu
xchg
xor
ljmp
xchg
aam
aam
xlat
mov
xlat
mov
or
cmc
ja
les
and
shlb
test
in
mov
adc
xchg
popf
in
cmpsb
insl
mov
mov
push
push
or
cs
and
cs
ss
cmp
in
out
out
xchg
pop
popa
adc
adc
je
jae
outsb
test
inc
rorl
dec
rcll
shll
out
fdiv
outsl
incl
xchg
rclb
or
rcr
shll
fidivrs
mov
pop
or
rcll
test
stos
shl
arpl
rclb
add
mov
jg
fsubl
fdivrl
pop
fcoml
ljmp
js
fistps
fildll
fbstp
test
bsr
mov
fdivrs
mov
in
or
sub
fidivrl
ficoml
ljmp
loope
cmp
xlat
xlat
inc
std
testb
xlat
mov
dec
stc
add
mov
insb
rorl
ret
lods
fnstsw
ja
fnsave
push
sbb
fsubrl
jbe
fcoml
cmp
rolb
mov
fcmovnu
dec
or
xor
call
lock
mov
pushf
fidivs
push
push
inc
flds
and
push
stc
fcoms
fistl
pop
cmp
mov
lahf
fldt
jg
pop
fstpt
test
fisubrl
ficoml
fisttps
pop
fisubrl
fidivl
fimull
fiaddl
adc
add
jmp
pop
jg
lret
or
aad
aad
aaa
sub
lock
cmp
ljmp
sub
mov
push
repnz
jo
jmp
xlat
enter
std
call
xlat
pop
adc
xlat
das
shrb
cmp
add
adc
sbb
filds
scas
shrb
addr16
into
aas
aaa
js
sbbl
push
shrb
enter
stc
or
cs
clc
dec
rclb
push
testl
shlb
jg
sarb
sarb
rolb
movsb
sub
or
shl
shl
repnz
repz
rol
or
ror
ror
sar
fists
pop
into
fcmovnbe
cmpsb
rcl
jg
inc
jb
sar
lods
mov
rcll
shll
push
imul
lret
inc
xchg
jge
js
inc
dec
rcll
rcrl
fisubl
shrl
or
cs
cmp
push
sbb
pop
rcll
inc
lea
rcl
jge
negb
lock
sar
or
int3
ror
sarb
push
fcom
cmpsl
inc
test
shlb
test
adc
into
xchg
or
fwait
shlb
insl
push
jns
rolb
dec
rclb
sub
adc
pop
in
or
shlb
sarb
sarb
pop
rorb
sbb
in
lods
test
add
imul
sub
repnz
mov
jge
fisttpll
fnstsw
loope
add
scas
scas
testb
ret
fbld
pop
pusha
stos
test
fcomip
ret
mov
sbb
fisubs
fisubrs
ficoms
cmp
ficoms
repz
andl
adc
aaa
sub
fsubrs
test
fsubs
stc
add
in
jbe
insl
add
cmc
inc
repz
sarb
ficoml
and
stc
aad
insb
icebp
sbb
mov
cltd
or
test
xor
adc
add
xlat
aaa
or
aaa
pop
js
rol
fldt
sub
add
rcr
inc
add
sbb
ror
xchg
aaa
loop
inc
push
out
push
rcrb
aaa
jmp
ljmp
mov
les
fsubrl
pop
push
xchg
pop
addb
lock
jge
jge
and
es
add
pop
push
out
test
fstpt
fsubr
fldt
fisttpl
fcmovnb
fidivl
outsl
je
xor
das
aad
out
call
into
aam
aam
nop
and
addr16
jns
jg
das
and
dec
aam
and
mov
xlat
mov
jg
add
sub
mov
cs
sbb
iret
push
sub
pop
xlat
xchg
jge
inc
cmc
add
std
sar
rcl
ret
mov
shrl
inc
mov
shll
sarl
imul
rcrl
shr
shl
xchg
jg
hlt
rol
ror
jmp
rcrb
add
lret
jnp
call
dec
rolb
pusha
dec
not
inc
fsubl
dec
fmulp
fisubs
outsb
inc
mov
fistl
fstps
adc
subb
fcmovne
shrl
push
loopne
push
outsl
aad
mov
pop
push
jmp
sub
aam
aam
or
je
fs
aam
dec
or
mov
cld
rolb
xlat
push
or
inc
mov
push
call
rcl
xchg
iret
add
ror
rolb
mov
rcrb
loopne
fidivl
mov
sti
rcl
sarl
lods
fs
shrl
dec
push
and
fisttpll
and
push
jg
inc
fsubp
fisubrs
lret
je
inc
insb
das
rolb
fsubr
mov
popf
push
mov
cmc
xor
loopne
jmp
cmpsb
mov
lods
cld
xor
jo
fistl
nop
sar
push
dec
std
not
shlb
test
out
push
and
fidivrl
mov
shll
shll
data16
lea
std
ljmp
jle
pop
or
stos
fisttpll
in
xchg
jo
xchg
mov
fcompl
je
pop
fsubl
fsub
dec
cmpsb
xchg
fbld
ja
jo
pop
filds
stos
add
and
cld
std
fisttpl
dec
sub
or
fdiv
fadd
fmul
mov
dec
mov
scas
imul
int3
aaa
fsubs
cmc
dec
add
and
fcmovb
fidivrl
mov
fisubl
fisubrl
je
jl
js
dec
adc
ficoml
and
sbb
aad
les
pop
or
mov
aam
test
xlat
push
pop
jbe
push
or
push
rolb
sbb
mov
lahf
rcrb
stos
fdivp
fld
neg
call
dec
fsubrs
inc
xchg
outsb
jo
sub
dec
adc
or
test
push
aam
pop
rcl
dec
icebp
rol
jp
inc
insb
push
xor
cmc
in
mov
aaa
jno
pusha
xor
mov
pusha
mov
sar
pusha
xchg
mov
outsb
shlb
cld
pop
mov
shrb
rolb
rorb
neg
int
and
adc
paddusw
pop
mov
inc
daa
cmpsl
mov
lods
or
fdivrl
and
push
cmp
out
fisttps
fists
fisttpl
bound
push
or
filds
fists
fnstsw
fiadds
fucomip
pop
xchg
pop
mov
mov
popa
lret
mov
flds
fldcw
std
aaa
or
fsubrs
and
in
fdivrs
cmp
loopne
or
jge
pop
fcmove
pushl
loopne
or
rcl
popf
add
mov
aad
pop
movsl
nop
cwtl
inc
aam
xlat
je
xlat
sub
adc
lret
jge
clc
or
rcrl
repz
dec
shr
rcrl
xor
dec
push
inc
out
push
call
add
movsl
fbld
pop
add
mov
test
fwait
hlt
repnz
arpl
imul
fidivrs
fiadds
dec
faddp
fxch
mov
decl
lods
daa
push
lock
push
push
sbb
add
push
sbb
dec
lods
sbb
movsl
out
jo
loopne
movsl
aad
adc
adc
aam
test
push
ljmp
int
mov
xlat
mov
mov
xchg
xlat
mov
hlt
fnstsw
or
xorb
sbb
jg
outsl
push
ljmp
sarl
mov
cld
shrl
ja
pop
mov
ljmp
inc
pop
jne
inc
push
or
pop
icebp
pop
das
mov
jg
dec
rcrb
fidivs
insl
fnstsw
xor
fstpl
mov
sub
in
ret
fbld
filds
jg
fmulp
fisubs
fidivs
ljmp
mov
insl
fimuls
sub
dec
mov
fcomip
add
pop
push
fsubp
f2xm1
fld
repnz
fnstenv
mov
xchg
inc
nop
lea
pusha
inc
cmpsl
fldt
lock
aam
aam
aam
movsl
out
xorl
cli
outsl
sar
dec
jo
dec
pop
rcl
jge
sbb
pop
push
inc
adc
movsl
lock
in
incl
xchg
sbb
push
outsb
mov
imul
shl
jo
clc
ffree
sbb
mov
mov
jb
imul
bound
fildll
push
mov
stos
insl
call
mov
nop
or
cli
push
ja
repz
mov
push
mov
cmpsb
dec
xor
clc
dec
fidivl
fimull
xor
test
lock
aad
lods
frstor
aad
mov
and
inc
inc
dec
jno
push
aad
or
fcmovnbe
pop
or
aad
aad
aad
inc
aad
or
call
aad
aad
xor
jo
or
push
addl
sbb
mov
rolb
popa
jo
xor
shll
in
shlb
adc
shl
jg
add
fcoml
or
jns
insb
cmp
decl
and
test
sbb
fstps
push
cmp
scas
fistl
cmpsb
lods
sub
mov
sbb
cld
test
ljmp
aam
in
xlat
xlat
lods
pop
lock
std
lock
push
push
and
movsb
pop
sub
adc
lock
push
rol
inc
subb
js
mov
cmpsl
sub
pop
push
cli
or
fsubr
fstpt
movsw
out
add
mov
add
xlat
jmp
and
shrb
clc
mov
clc
xor
xor
shr
outsl
cmc
movsl
mov
andb
jo
std
fildll
mov
popf
rol
add
push
push
mov
arpl
pop
incb
aad
aad
imul
pop
sub
aad
aad
aad
mov
aam
aam
aam
sbb
jmp
movsl
imul
insb
sub
mov
lock
dec
xlat
stc
xlat
leave
xchg
xchg
jg
repz
cltd
mov
jns
dec
rclb
not
or
mov
test
testl
jns
and
sub
cmp
or
test
sbb
pop
fisubrs
insl
jmp
jp
push
ror
adc
fcmovbe
add
push
sar
rolb
jo
gs
xor
lock
pop
cmc
pushl
mov
rcll
lock
lahf
decl
notb
incl
mov
cld
add
into
dec
lds
loope
adc
mov
dec
sub
pop
clc
inc
sbb
loope
cltd
mov
push
pop
push
mov
pop
jnp
add
hlt
sub
and
lds
mov
aaa
mov
mov
push
sbb
add
or
mov
sub
cmp
mov
ret
sub
pop
call
jecxz
pop
ret
bound
ret
fwait
addr16
xchg
in
add
cli
jmp
xlat
ret
sbb
add
gs
je
cmp
jns
mov
cmc
imul
test
push
les
jae
mov
jg
mov
inc
push
out
adc
sbb
mov
xorb
outsl
cli
ret
test
repz
push
imul
jg
mov
aaa
popf
hlt
add
add
add
mov
jno
dec
jecxz
in
lods
inc
adc
loop
pop
jne
stos
fs
mov
mov
push
pop
dec
je
mov
pop
jnp
addr16
mov
jb
loopne
add
dec
loop
xorb
ljmp
add
sar
fbstp
fs
scas
add
inc
dec
movsb
repz
sar
push
or
out
pop
je,pt
in
setl
lock
or
bound
mov
in
ret
jle
dec
cmp
mov
pop
lahf
lcall
orl
fists
add
imul
xchg
loopne
dec
mov
stos
dec
xor
add
leave
sarb
lret
and
lds
pusha
push
mov
sahf
mov
clc
ret
sub
push
inc
sub
pushl
jge
test
push
jle
mov
cmp
in
adc
js
mov
aad
inc
add
outsl
lods
sbb
pop
popw
fsub
add
cs
dec
stos
mov
cli
fcmovnb
insl
sub
mov
andl
in
cmc
add
and
mov
testl
mov
mov
sahf
xchg
jno
pop
cld
or
add
outsl
mov
sub
loope
jae
dec
ss
pop
push
clc
lods
mov
xor
mov
lcall
repnz
cmpl
and
popa
cmpsl
sub
mov
shrb
jb
sbb
mov
or
testb
push
cmpsl
mov
test
xor
add
loope
mov
lret
mov
or
and
cld
movsl
mov
jnp
jbe
and
xor
sbbl
pusha
or
adc
xor
mov
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
sub
push
dec
ja
mul
nop
rclb
clc
dec
loopne
lcall
fisttpll
in
dec
or
stc
cvttps2pi
adc
push
clc
adc
dec
jnp
int
decl
int3
sbb
sub
xchg
sub
out
sbb
sub
mov
pop
pop
scas
outsb
pop
pop
mov
dec
dec
repnz
sub
cmp
sub
pmulhuw
mov
ja
dec
add
push
add
jno
or
and
gs
daa
pusha
ljmp
js
xchg
pushf
jp,pn
mov
pop
cmpl
test
dec
xchg
mov
sti
lcall
pop
pop
jl
inc
mul
jle
sbb
negl
xchg
xchg
cmp
test
xchg
out
and
mov
or
test
add
cmpps
and
jmp
sub
xchg
daa
dec
andl
mov
xor
jb
jae
pop
pusha
push
dec
or
lahf
sub
jp
subl
xchg
pop
mov
jg
jl
mov
sahf
jnp
enter
or
mull
or
fistps
mov
test
pop
cmpl
add
outsl
lret
inc
jle
adcb
dec
hlt
movsl
dec
insb
sahf
cmpl
test
mov
cmp
dec
lea
jae
or
out
jg
insl
scas
fwait
fwait
ljmp
xchg
or
sbb
mov
addr16
xchg
mov
and
xchg
out
or
cmp
xchg
and
shll
lahf
sti
ret
mov
xor
mov
xchg
loope
cmc
and
negl
mov
cmp
divl
or
out
lds
lods
aas
idivl
into
je
sub
testl
or
or
jg
adc
dec
div
ja
mov
lea
jnp
push
dec
mov
adc
daa
imull
fisubrs
je
or
leave
dec
jl
ja
in
jecxz
pushl
jae
cltd
pop
adc
das
imul
or
or
jl
clc
or
lret
and
xlat
add
push
push
mov
or
jle
lock
dec
mov
jg
ret
add
orl
test
idivl
push
idiv
enter
jmp
jp
mov
xor
cmpsl
andb
aas
jns
cld
ljmp
icebp
xor
or
roll
repz
lea
sub
out
mov
inc
xorl
lahf
hlt
add
sti
enter
push
fildll
lock
subl
dec
push
clc
std
dec
popa
jp
shlb
inc
push
xchg
push
adc
incl
pop
jecxz
adcl
dec
fsubrp
mov
shlb
pushf
sti
cli
test
push
jg
cld
ja
mov
pop
jl
shll
push
gs
test
inc
lea
decl
aas
dec
fnstcw
xor
pop
inc
dec
pop
fdivs
ds
ret
imul
inc
dec
jle
leave
mov
addb
inc
xor
inc
xor
dec
push
add
dec
jecxz
jl
cld
enter
outsl
nop
or
inc
das
addl
je
mov
orb
inc
dec
xor
xchg
in
incl
int3
push
mov
mov
das
cld
pop
mov
loopne
inc
sub
outsl
cmpl
in
mov
cmp
jnp
sub
out
adc
testl
sti
mov
subl
arpl
dec
stc
scas
mov
cmpb
add
and
idivb
pop
test
movsb
icebp
dec
or
jle
push
aaa
rcrb
and
sti
fucomi
xor
add
mov
dec
inc
mov
fwait
sbb
fwait
sbbl
or
mov
cmp
lret
add
mov
or
idivl
test
jo
mov
std
incl
sbb
pop
jae
xbegin
adc
decl
test
fbstp
aaa
sbb
add
cmpb
mov
pop
jmp
jge
and
mov
jle
jne
sbb
sub
adc
jae
testl
mov
in
test
xchg
or
cmp
or
jge
lea
cmpb
add
lea
inc
dec
dec
pop
pop
mov
mov
scas
mov
aaa
jg
sbb
js
sub
add
notb
sbb
push
test
cwtl
out
jae
pop
or
out
push
pushl
pop
fnsave
adc
add
xor
mov
testb
dec
mov
filds
iret
xchg
inc
dec
add
idivb
pushl
mov
ror
push
adcb
lods
loop
dec
pusha
arpl
cmp
pushl
enter
cmp
fistpl
in
call
ljmp
jns
add
test
mov
movsl
push
or
sub
lds
loope
and
mov
jo
pop
mov
jg
cld
jne
insb
insl
outsl
outsb
les
je
outsl
insl
jo
outsb
je
outsl
push
dec
inc
inc
jb
inc
dec
push
push
push
inc
inc
sbb
xor
jae
push
jb
mov
inc
addr16
add
push
insb
aaa
jo
jne
outsb
inc
js
decl
xor
jo
jns
inc
inc
outsb
dec
inc
je
xor
jno
jne
popa
inc
pushl
dec
insl
pop
gs
dec
jb
imul
xor
jp
fs
dec
xor
in
ljmp
jne
push
jae
pop
inc
xor
aaa
ja
dec
addr16
pop
pop
inc
push
ljmp
push
gs
cmp
push
dec
je
jbe
jp
imul
outsb
insl
data16
jg
insl
dec
push
dec
jno
push
push
jae
cmp
pop
dec
dec
xor
incl
pop
imul
jb
inc
dec
xor
pop
popa
xor
pop
jb
pop
in
sar
js
push
push
dec
outsl
push
inc
push
enter
dec
insl
inc
push
inc
push
push
mov
inc
push
ja
fs
insl
js
dec
push
inc
inc
js
jne
call
inc
push
inc
addr16
push
dec
jo
push
push
xor
sbb
outsl
in
mov
xor
dec
outsb
stos
xor
aaa
insb
bound
fildll
popa
dec
pop
dec
inc
inc
inc
dec
je
inc
imul
jne
insl
dec
fistps
cltd
adc
inc
js
js
jne
sub
dec
jb
push
push
jp
cmp
fs
dec
outsl
mov
xchg
lock
clc
jo
push
push
push
xor
imul
pop
inc
inc
push
incl
insl
ss
inc
bound
jns
arpl
push
jbe
push
imul
or
js
imul
pop
mov
stos
xor
or
push
add
xor
or
aas
add
inc
add
push
add
popa
andl
imul
je
jg
sti
inc
imul
or
outsl
arpl
jae
gs
outsl
jb
mov
push
sbb
inc
js
pushf
mov
jns
pop
insl
push
imul
and
push
push
fs
xor
dec
imul
fisubrl
push
xor
popa
jae
dec
jne
imul
outsb
out
jne
insb
push
push
arpl
xchg
insb
ret
xor
jns
mov
test
lret
popa
inc
or
outsb
sub
push
inc
pop
mov
insl
adc
or
add
dec
xor
push
and
inc
lret
je
pushl
outsb
outsw
push
cmp
test
enter
lods
and
or
fwait
mov
xchg
nop
ret
test
push
xchg
mov
and
inc
inc
pop
arpl
cmovb
sub
or
dec
fnstenv
inc
pop
inc
aam
and
rolb
arpl
pop
inc
add
push
mov
xchg
inc
aaa
inc
xchg
rcr
dec
cmc
cmp
or
push
adc
mov
pop
pop
or
add
sub
pop
push
daa
mov
xchg
and
sub
ret
inc
cs
add
mov
rorl
enter
and
push
push
push
lods
insb
mov
jne
jle
sub
fs
dec
sbb
push
mov
mov
out
rorl
dec
push
push
enter
test
push
push
inc
bound
or
xor
inc
mov
roll
and
xchg
mov
and
xorl
sub
add
adc
xor
xchg
xor
fnstenv
sbb
dec
fs
sub
mov
xor
rolb
and
mov
push
ret
scas
xchg
nop
movsb
add
lods
test
mov
push
adcl
and
popa
inc
push
inc
inc
sub
lods
and
pop
lods
mov
sbb
and
shrb
in
inc
pop
inc
xchg
adc
stc
add
insb
fdivl
add
mov
add
sbb
insb
lock
mov
fnstenv
ret
mov
push
pop
jnp
movsl
inc
bound
push
ret
dec
mov
cli
xor
dec
push
dec
push
xor
or
enter
test
repnz
inc
or
inc
inc
sub
lods
xchg
lret
lock
pop
decl
sub
cmpsb
sub
adc
mov
jnp
mov
or
stos
test
push
fwait
lret
adc
mov
or
mov
adcb
or
jne
test
inc
and
and
push
imul
stos
movb
and
pop
inc
jl
dec
and
inc
lods
iret
add
test
push
or
xchg
les
push
xor
je
push
adc
xchg
inc
jno
shrb
mov
lods
movsb
lock
mov
and
ret
push
adc
dec
sub
sub
adcb
push
dec
adc
ret
notb
pop
lods
sbb
xchg
inc
mov
xchg
or
jnp
push
sbb
pusha
or
gs
pusha
xorl
mov
movl
inc
mov
test
cs
and
or
and
push
ret
xchg
or
add
sub
pop
and
gs
mov
sar
and
rclb
cmp
test
aad
or
add
test
sahf
pop
mov
push
push
rorl
scas
xor
inc
rorl
out
add
add
sub
aam
sbb
and
dec
and
test
stos
and
push
pop
add
es
push
cmc
xchg
xchg
lret
lods
lds
popa
mov
dec
cmp
add
sub
mov
or
and
ret
andl
or
mov
stos
scas
icebp
arpl
rolb
ds
pop
mov
adc
xchg
test
and
push
lods
xchg
fwait
ret
adc
adc
lcall
and
gs
or
mov
push
add
sub
fs
mov
or
pop
and
sub
or
push
sbb
cwtl
inc
and
add
adc
xchg
sub
dec
inc
cli
xchg
push
shrl
jecxz
gs
ret
aam
add
pop
xchg
ret
push
aam
lret
push
pop
xchg
fisttpll
movsl
inc
push
test
mov
and
sub
popa
lahf
bound
sbb
xchg
push
add
xchg
enter
add
pop
mov
orl
add
test
and
xor
xchg
xor
mov
push
dec
stos
mov
movsb
and
fwait
adc
stos
movsb
inc
push
adc
mov
sub
and
push
push
std
mov
mov
dec
and
mov
xlat
add
pop
mov
bound
pop
stos
mov
lret
lods
mov
bound
add
adc
bound
xchg
xorb
xchg
or
gs
sub
rcrl
jb
adc
adc
inc
push
add
inc
sbb
or
adc
lods
pop
sbb
and
lods
add
sub
sbb
mov
add
and
and
add
addb
and
stos
xor
add
ret
popa
mov
push
enter
pop
and
push
or
lods
inc
orb
xor
adcb
ret
inc
rorb
addl
push
lea
mov
dec
cmp
lock
sub
inc
push
lods
adc
test
ret
push
push
test
sub
push
cli
pop
xor
and
pop
dec
add
ret
popa
outsb
repnz
sub
inc
or
sub
pop
arpl
mov
push
or
push
fildl
jnp
lods
xchg
pop
sbb
nop
and
add
mov
push
push
xor
or
xchg
add
popf
pop
or
xor
nop
stos
sub
and
dec
add
pop
gs
fstl
sbb
xor
sub
aaa
mov
dec
ja
or
mov
inc
fs
out
jle
str
add
das
push
divb
outsl
ja
cmp
sti
dec
outsl
cld
mulb
insb
jb
inc
outsl
insb
mov
push
inc
jb
outsb
jae
das
jg
push
fdivs
push
and
or
and
in
imul
jo
ret
jb
push
insl
out
ficoms
cmp
outsb
xchg
sbb
inc
insb
pop
jae
fsubs
mov
ss
mov
fldcw
push
xor
jbe
dec
nop
jl
lds
dec
fldenv
push
xchg
or
cs
daa
inc
pop
ss
xchg
push
outsl
test
pushf
bound
or
pushf
lret
in
dec
fs
dec
push
insl
leave
dec
pop
rep
xchg
je
test
cs
test
mov
add
scas
xchg
lods
insb
test
mov
and
ret
or
mov
cmp
add
and
test
add
lcall
xchg
dec
jp
push
cld
xor
insb
sub
push
les
inc
fdivrs
gs
sbb
pop
inc
mov
lret
xchg
mov
sub
andl
insb
push
lret
sbb
xchg
mov
xor
pop
sub
adc
and
jb
push
sub
dec
xchg
pop
xchg
fs
push
repnz
fxch
push
mov
xor
inc
pop
mov
rolb
in
push
inc
add
add
add
add
xorl
dec
push
adc
or
subl
add
add
aaa
in
sbb
add
add
sti
sub
inc
add
pop
adc
ja
xor
add
sbb
cs
xlat
rol
loop
push
mov
les
and
xlat
or
popa
into
loopne
movsb
and
jnp
pop
pop
add
es
insb
mov
sub
add
push
daa
shrb
loope
repz
jb
jmp
pop
mov
cmpb
inc
sbb
and
add
add
add
add
incl
add
add
inc
add
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
push
add
add
add
adcb
add
pusha
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
add
add
nop
add
add
add
in
add
add
add
add
inc
add
push
add
add
lods
xor
add
sub
daa
test
mov
insb
aas
es
mov
push
jge
inc
sub
and
push
das
cli
lock
outsb
js
dec
pop
stc
or
pop
test
mov
ret
xchg
dec
ljmp
add
rol
cmpsb
mov
inc
jmp
and
in
jcxz
pop
jbe
and
sahf
inc
insb
and
mov
nop
mov
icebp
xchg
push
cmpsb
inc
imul
mov
mov
nop
sbb
and
push
imul
xor
push
and
mov
fisttpll
mov
daa
comiss
pop
jo
mov
insb
xchg
enter
jecxz
pop
adc
push
cmp
or
adc
jbe
cs
mov
jmp
jae
mov
vcomiss
pop
and
fwait
or
out
adc
hlt
mov
add
sbb
jecxz
add
jns
cmp
mov
sbb
icebp
arpl
in
ss
jne
test
mov
outsl
popf
sub
and
cmc
std
mov
into
inc
loope
mov
lock
cld
jne
int
out
bound
add
adc
xchg
in
addb
cmp
lahf
sub
dec
mov
jmp
in
jle
xor
push
sarl
pop
xor
mov
ret
sub
adc
push
or
jb
sub
mov
jle
pop
mov
add
xchg
or
jbe
sbb
sub
jnp
dec
add
pop
mov
out
inc
xchg
sahf
sahf
mov
jne
hlt
lock
push
hlt
pop
mov
cmpsl
pop
adc
loopne
aam
stos
sbb
mov
jnp
pusha
popl
inc
mov
cld
js
adc
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
cmp
xor
xor
xor
xor
bound
xor
add
sbb
add
add
inc
add
insl
add
add
je
jae
add
and
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
and
add
inc
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
add
outsl
add
jae
add
add
push
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
outsl
add
jae
add
push
add
add
add
add
add
adc
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
aas
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
sldt
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
jne
jae
add
push
add
add
add
add
add
add
add
add
jb
imul
je
add
jne
imul
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
add
outsl
add
jae
add
add
push
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
and
add
add
push
add
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
js
add
add
add
test
add
nop
cmpsl
add
sub
add
fwait
cmpsl
add
xor
add
mov
cmpsl
add
stos
cmpsl
add
inc
cmpsl
add
mov
add
dec
cmpsl
add
mov
cmpsl
add
shll
add
add
add
cmpsl
add
pusha
cmpsl
add
xlat
cmpsl
add
push
add
add
cmpsl
add
jo
add
in
cmpsl
add
cli
cmpsl
add
or
add
sub
add
inc
test
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
dec
pop
xor
insb
add
jne
pop
insl
cs
insb
add
cs
insb
add
jo
fs
insb
add
cs
insb
add
cs
insb
add
outsl
xor
fs
insb
add
insb
insl
pop
jne
fs
insb
add
gs
xor
fs
insb
add
dec
je
jne
fs
insb
add
outsl
inc
imul
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
gs
inc
