ljmp
mov
imul
mov
pop
ljmp
mov
mov
mov
mov
test
ret
inc
arpl
out
and
int
lea
jae
jae
fnstcw
xor
aad
push
or
lds
sbb
lahf
push
in
mov
push
insb
lea
and
decl
xchg
mov
subb
daa
sar
rcll
aad
lods
repz
scas
fisttpl
pop
fwait
cmpsl
mov
pop
aaa
aam
out
jbe
imul
andb
mov
imul
pop
aaa
mov
mov
mov
sub
cmp
arpl
xor
mov
popa
addr16
incl
imull
sub
sbb
and
repz
pop
sub
inc
sub
ljmp
xor
push
dec
sbb
add
les
scas
fnstsw
mov
adc
cli
xchg
shlb
jno
int3
push
push
inc
mov
icebp
ret
loop
jg
out
jae
mov
aaa
incl
lcall
push
mov
sub
jmp
mov
xor
cmp
xchg
mov
xchg
pop
mov
popa
push
lahf
lret
xor
pop
mov
sub
jle
bound
mov
decl
mov
cmp
and
scas
xchg
outsl
data16
insl
imul
sub
pushl
pushf
jo
cmpsb
std
fidivrl
ss
pop
inc
cmp
add
in
pop
cmpsb
pop
mov
mov
pushl
lcall
xor
adc
fabs
adc
add
and
iret
ja
jnp
lods
cmpsb
pushl
dec
fcompl
xor
es
mov
lcall
inc
xor
pushf
aas
cmp
cltd
cli
xchg
outsb
mov
and
pusha
jo
add
sub
mov
lock
dec
and
notb
adc
xor
xchg
cltd
scas
jae
loope
dec
pushl
dec
pop
jb
xor
push
stos
iret
cld
clc
sub
or
dec
ja
jle
ljmp
xchg
pop
inc
jl
js
pop
insb
mov
aad
jb
and
cmp
js
ficomps
std
enter
jne
addb
movsl
xchg
mov
pop
ss
dec
jg
adc
push
adc
repz
adc
jmp
mov
imul
sub
jne
adc
mov
lret
push
sub
pop
cltd
test
lret
add
enter
xchg
mov
sbb
js
call
fdivr
ljmp
push
seto
scas
mov
add
in
pop
stos
outsl
fs
lahf
movsl
ud0
dec
mov
xchg
sbb
leave
int
outsb
mov
lods
cmp
call
mov
sarl
notb
cmp
mov
fldenv
decl
cmp
hlt
aad
xchg
pop
pop
shl
jbe
outsb
xchg
xor
out
enter
js
xor
fwait
dec
jl
incl
out
stos
out
xorl
lcall
mov
int3
push
inc
ja
negb
jg
pop
push
repnz
mov
and
adc
in
icebp
jl
in
shlb
call
daa
dec
cli
clc
pop
pop
shlb
imul
test
xchg
loopne
mov
incl
enter
rcrb
cmpsl
and
pusha
gs
pop
add
pop
add
mov
dec
jb
stc
jg
xor
aam
sbb
mov
call
enter
jb
outsb
cmp
mov
and
jns
sbb
aad
incl
pop
movsl
insb
sarb
jg
adc
ret
mov
lea
add
out
inc
incl
dec
fwait
leave
insb
je
imul
cmpsb
mov
lds
pop
sbb
loope
decl
inc
add
mov
fisttpl
dec
lret
out
ja
sub
add
adc
push
jb
cld
lcall
dec
sub
cmp
jns
inc
fs
adc
cmpsl
pop
and
mov
jg
pop
pop
scas
jmp
mov
out
fs
ljmp
clc
jnp
adc
mov
jge
cmp
insl
push
adc
sbb
xchg
loope
pop
lock
sub
ljmp
pop
jp
inc
nop
dec
inc
fsubr
dec
push
mov
stos
and
sti
ljmp
aad
add
mov
mov
or
aad
push
test
test
into
loope
cltd
push
test
xor
push
hlt
pop
leave
cmp
xor
bound
add
call
iret
jns
pop
mov
sbb
stc
scas
ja
fstpl
adc
and
mov
clc
cmp
arpl
fwait
push
shlb
xlat
jp
xor
inc
jmp
inc
inc
ds
lods
scas
lcall
fimuls
xchg
xchg
scas
pop
shlb
rcr
test
outsl
idiv
ljmp
or
pop
cs
push
iret
int3
fmuls
or
test
pusha
add
pushl
mov
adcl
mov
rcrl
dec
sub
sbb
dec
cmp
jecxz
and
xchg
push
push
dec
mov
inc
fsubs
push
test
or
mov
dec
in
sub
and
xchg
shl
mov
rorb
add
mov
cmp
cmc
and
mov
aad
cmp
pop
inc
pop
lods
test
scas
mov
sbb
aam
cmc
lahf
xchg
pushl
imul
out
lods
jecxz
stos
leave
out
dec
cld
or
call
data16
ljmp
fiadds
mov
jo
ss
mov
arpl
jb
call
mov
fildll
mov
outsb
cmp
test
stos
add
stos
fsubrl
add
fildl
popa
jno
bound
or
lea
mov
shlb
pop
arpl
pop
ja
lcall
xchg
in
push
sbb
adc
sti
sub
jae
adc
rsqrtps
scas
hlt
xor
dec
sbb
inc
test
sbb
add
mov
repz
pop
push
int3
pop
or
and
ffree
inc
pop
sbb
xchg
lods
dec
into
mov
insb
out
add
cmp
cmp
rcll
fbld
and
inc
jle
out
pop
dec
loope
inc
jo
fwait
repnz
or
and
dec
out
or
pop
pop
ljmp
outsl
adc
and
lock
pushl
rcrb
js
push
cli
shl
gs
push
ja
sub
subb
inc
and
icebp
pushl
dec
and
in
leave
mov
cmp
lods
pop
xchg
mov
lds
outsb
dec
and
aas
int
aaa
push
jmp
lods
movsl
negl
loopne
inc
outsl
inc
xlat
mov
ljmp
loope
dec
mov
popf
xchg
aas
sub
jl
dec
push
lods
push
aas
rcl
lock
pop
push
cmp
lret
mov
repnz
lcall
push
adc
mov
cmp
or
test
push
icebp
push
add
pop
jb
test
decl
mov
sbb
cmpsl
pop
in
mov
mov
dec
xor
dec
jg
sar
jg
rorb
inc
add
ja
add
adc
enter
mov
imul
mov
inc
sbb
cmpsl
sub
jg
jmp
xchg
jmp
dec
es
xorb
and
cwtl
push
repnz
nop
pop
dec
jbe
jmp
xchg
dec
jno
pusha
push
scas
and
sbb
lds
inc
inc
xor
ljmp
sahf
sbb
rorb
inc
pop
mov
xchg
je
sar
incl
lods
or
pop
out
movsl
ret
cmp
push
ret
popa
inc
jbe
jno
xchg
dec
push
leave
push
call
loope
cld
dec
repz
lock
inc
std
mov
stos
sbb
js
jae
sahf
lret
jg
mov
push
push
mov
and
das
mov
cmpb
sub
pop
xchg
cmp
loopne
pop
lcall
push
mov
sub
test
cmp
jae
push
mov
pop
mov
mov
push
jne,pt
xor
daa
and
lock
stos
pusha
stos
mov
cmc
pop
rcrb
sbb
fwait
in
or
sbb
jg
icebp
cs
push
mov
incl
scas
mov
jmp
jp
dec
jecxz
inc
cmpsb
rorb
out
popa
adc
incl
ficoml
shll
push
popa
mov
adc
inc
pop
cmp
pushl
lods
jb
bswap
pop
hlt
adc
lret
aam
int
cmpb
lods
add
inc
xchg
sub
sbb
shrb
fwait
mov
and
sbb
jg
shrb
mov
or
sub
xor
pop
call
mulb
jg
mov
data16
outsb
incl
inc
add
push
ret
jmp
enter
jmp
std
xor
incl
addr16
lods
adc
mov
pop
pop
fsubl
jbe
mov
decl
adc
jns
xor
and
cmpsl
mov
ds
xchg
mov
call
mov
sbb
in
and
add
and
shl
mov
adc
jle
cmpsb
jge
fstp
rorb
pop
loop
inc
jle
aad
push
or
enter
divl
cmp
pop
out
inc
xor
popf
test
jg
into
int
or
xchg
pusha
arpl
push
decl
pusha
test
in
adc
mov
les
pop
lret
and
pushl
sub
fs
ljmp
jno
push
mov
mov
test
insl
jl
jmp
cmp
das
dec
stos
sub
add
add
in
shll
test
jb
sub
cmp
fwait
dec
mov
fidivs
sub
lock
aam
loop
mov
ljmp
xchg
mov
push
mov
add
push
push
ret
out
lea
mov
xchg
dec
popf
push
xchg
pop
xchg
cld
adc
rcl
pop
cmp
cmpsl
xor
jp
push
adc
fmuls
sbb
or
hlt
shr
xor
xchg
shlb
cmp
rcll
mov
das
lret
repz
sbb
rclb
test
pop
and
mov
dec
popf
pop
xchg
add
cwtl
aad
pushf
mov
xchg
loope,pt
xchg
movsb
aad
mov
dec
lock
aas
jns
mov
ficoms
dec
sbb
insb
xor
cmp
cmp
fsts
rcll
jp
ljmp
lret
jge
jmp
fwait
gs
pop
and
push
fnstenv
add
jae
push
jg
sti
jb
test
lcall
pop
pop
cmp
lahf
sbb
add
cmp
shll
pusha
out
sub
xchg
push
inc
clc
mov
mov
push
sub
pop
fstps
das
and
pop
aaa
lret
out
adc
incl
fs
in
jle
cmpsb
loopne
pop
repnz
mov
fdivl
aam
mov
adc
mov
and
inc
test
popl
pop
pop
jmp
or
jge
xchg
jp
in
imul
pusha
inc
idiv
xor
lcall
call
lea
stc
aas
fcompl
std
mov
popf
inc
fimull
cli
lea
jl
dec
jp
std
xchg
push
pop
adc
sbb
incl
mov
and
mov
add
xor
mov
push
aad
mov
lcall
imul
or
jo
stos
mov
and
dec
inc
sbb
out
sti
xchg
iret
daa
lahf
movsl
dec
push
fstl
cld
das
jmp
das
jae
out
inc
cmp
inc
inc
sbb
cmp
ja
pop
icebp
push
cli
jge
lds
jae
cmp
inc
pop
clc
mov
xor
ss
mov
movsl
adc
fcomip
movsb
andl
jo
aaa
mov
loopne
or
cs
cmp
xor
fs
pop
icebp
inc
mov
arpl
lret
mov
fadds
push
mov
fadds
in
jmp
cld
push
xchg
loop
or
sub
xor
pop
cmp
cli
mov
fs
xor
push
adc
aas
shll
add
ljmp
xchg
jnp
mov
sahf
lret
sbb
jae
push
loop
jae
sahf
xor
sub
push
imul
icebp
decb
pop
jb
call
out
inc
and
outsb
sub
mov
mov
mov
add
or
loop
popa
and
mov
push
push
gs
mov
or
fisubrl
mov
add
pop
ja
xchg
pop
sti
fildll
sbb
add
test
inc
cmp
addb
movsb
add
lcall
jo
je
std
xchg
inc
dec
pop
sub
mov
sub
adc
out
clc
call
movsb
xor
pusha
mulb
daa
fsubl
cmpsl
mov
iret
insl
aas
stos
cmp
out
xchg
xor
push
aam
inc
jmp
xor
jge
mov
mov
dec
addb
fsubl
mov
xor
pusha
stos
push
jl
jmp
stos
ds
cmp
cmp
pop
bound
imul
leave
inc
add
jbe
dec
mov
push
jmp
fs
mov
adc
adc
pop
xorb
lcall
rorl
pop
cmc
xchg
push
stos
es
out
mov
lock
addl
pushl
mov
and
xchg
inc
mov
mov
idivb
cmpsw
jbe
fstpl
lcall
push
scas
call
xchg
stc
mov
sub
ret
jnp
jb
gs
mov
push
pop
testl
mov
push
cld
mov
cli
ljmp
pop
jb
pop
imull
add
clc
pop
mov
xchg
or
call
lret
leave
and
imul
pop
and
shll
xchg
push
enter
aad
popa
fdivr
incl
cmp
ss
dec
jo
cld
jmp
neg
push
lods
ficoms
xor
jmp
getsec
popf
xchg
pop
or
cmc
or
mov
mov
scas
xorb
pop
mov
cmp
xor
dec
push
fisubl
imul
push
push
lcall
insb
xchg
inc
outsb
shr
jns
fistl
es
adc
das
cmp
sti
in
xchg
out
xchg
aaa
jb
sti
lret
xor
into
adc
aad
and
adc
inc
arpl
sbb
add
aas
add
mov
push
cmpsb
and
add
jbe
xchg
cmp
out
pushf
pop
in
mov
insb
hlt
xchg
jnp
shll
pop
das
xchg
xor
int3
push
push
nop
mov
sarl
pop
add
test
shl
and
mov
jle
imul
int3
pop
dec
dec
mov
cld
mov
mul
stc
test
cwtl
jmp
push
aaa
mov
push
xchg
pop
jne
dec
push
inc
iret
push
dec
or
lahf
fiadds
lea
sbb
pop
cmp
test
mov
lea
shll
movhps
adc
mov
lcall
mov
or
jo
aaa
loop
imul
test
je
push
inc
xchg
aam
fstpt
filds
cli
cmp
jge
cmp
push
pop
test
jae
fdivl
aaa
lret
stos
lahf
loopne
sbb
adc
insl
and
mull
int3
les
push
call
daa
mov
lret
fwait
movsb
pop
dec
popa
add
sub
inc
inc
clc
lea
pushf
mov
int3
mov
mov
ret
ss
lret
ficoms
sbb
pushl
inc
test
fs
mov
addr16
out
lods
divb
js
jo
incl
pop
xchg
push
das
dec
pop
in
lds
sub
mov
or
out
or
and
fcmovnbe
push
popf
mov
pop
ret
out
add
pop
aam
ja
or
jnp
ja
adc
decl
sbb
and
add
mov
inc
lcall
fnstcw
lods
or
sbb
xor
fucomp
mov
jmp
mov
std
inc
pop
int
loope
pop
jmp
cmp
jmp
sub
decl
inc
xchg
mov
sbb
clc
in
sbb
in
and
sbb
lcall
cmp
mov
xor
push
mov
out
in
adc
repz
andl
push
jle
push
lock
or
jg
push
jmp
out
inc
xchg
xchg
iret
jmp
int3
in
decb
scas
dec
imul
add
mov
in
pop
std
push
into
aas
jmp
or
dec
pop
push
pop
or
add
enter
faddl
cwtl
sub
addr16
lcall
movsb
inc
cmp
hlt
adc
pop
adc
jmp
inc
mov
repnz
ja
outsl
mov
movsl
jmp
jmp
pop
out
push
loop
mov
test
sub
inc
cmp
xor
faddp
jo
sti
lea
shll
int
dec
jno
cmpsl
fiadds
jl
pop
adc
decl
daa
jno
sub
aam
or
addr16
int
sub
pop
cld
stos
jg
and
incl
aas
outsb
pop
pushf
cmp
insb
aam
fimuls
push
push
xor
mov
dec
jmp
ret
xorl
popa
sti
jmp
mov
mov
jecxz
lahf
rcrl
jge
insb
and
cwtl
jg
dec
dec
inc
push
out
ljmp
jmp
mov
into
jns
and
mov
dec
iret
jle
push
jno
decl
adc
out
out
cmpsb
out
jne
aam
and
nop
dec
push
aad
test
dec
xor
pushl
xor
stc
std
fcoml
inc
sbb
jmp
int3
mov
pop
push
jno
stos
daa
adc
mov
push
xchg
icebp
xor
insb
cmc
xlat
lods
mov
mov
dec
dec
mov
adc
sbb
js
jmp
or
enter
lahf
or
sub
and
push
cwtl
incl
push
ja
mov
inc
aad
sarb
sarl
pop
lock
decl
int3
shl
lea
push
lret
xchg
pop
and
xorl
call
push
in
xchg
add
adc
mov
cld
and
xchg
insb
ds
jmp
addb
mov
xlat
idivl
inc
jne
mov
mov
xchg
test
ffree
arpl
enter
push
out
shll
cs
mov
and
incl
fldl
jl
pusha
jno
or
pop
mov
arpl
push
gs
mov
call
addl
xchg
insl
xor
mov
roll
dec
pushf
iret
test
cmp
les
jae
iret
test
incl
adc
or
shlb
bsr
cmp
call
arpl
pushl
adcl
mov
mov
test
jg
push
lea
pop
mov
pop
adc
inc
test
xor
cli
dec
loopne
imul
clc
adc
sub
cmp
fidivs
lcall
pop
pop
ss
test
jmp
lahf
arpl
mov
outsb
push
push
fs
insb
adc
shll
jne
and
mov
push
ljmp
test
push
outsl
sbb
or
lret
mov
repnz
inc
pusha
rorb
adc
cmpl
dec
call
jecxz
jg
cld
cmp
incl
dec
stc
push
cwtl
xor
into
xlat
jb
add
test
jns
cmp
lds
decl
lret
inc
imul
mov
sub
in
jl
pop
xor
arpl
dec
xchg
call
data16
cmc
stc
test
movsb
fcomip
test
jmp
cs
cmp
call
xchg
mov
mov
test
adc
sub
cmp
incl
int
and
xor
sub
mov
mov
and
out
fwait
mov
sbb
add
sub
mov
fucomip
or
and
hlt
xor
into
fdivp
jg
sub
sub
imul
cld
sti
mov
mov
adc
test
sbb
sbb
cmp
mov
int
add
mov
mov
imul
out
mov
sti
and
adc
push
test
dec
popa
pusha
testb
mov
add
mov
pop
cmc
xchg
fildll
out
xor
addr16
insl
ds
jle
popf
jne
fldcw
pop
add
inc
mov
movnti
fiadds
sbb
lret
mov
dec
xor
push
push
xchg
jo
xchg
mov
add
mov
subb
jmp
outsb
daa
js
mov
loop
gs
mov
adc
xor
push
sub
subl
add
jge
and
bound
shll
mov
jo
pop
mov
shlb
adc
adc
fisubs
sub
fwait
addb
lock
and
test
cmc
jne
fcmovnu
push
or
xor
mov
cmp
mov
imul
repnz
mov
in
xchg
pop
aas
adc
xchg
lcall
xor
fwait
xor
pop
add
pop
js
leave
fdiv
lds
gs
mov
push
inc
ret
mov
pop
stos
pop
and
sarb
pop
scas
iret
imul
pushl
test
addr16
aam
repz
and
xor
jmp
jl
sub
test
jl
inc
cmp
and
clc
xchg
out
pop
cmp
sbb
lcall
ret
push
ljmp
adcb
jae
jp
dec
xchg
scas
mov
cmp
pushl
adc
mov
xchg
push
xorb
push
jg
data16
enter
cmpsl
mov
cmc
and
mov
mov
push
mov
andl
aad
mov
std
add
dec
test
lcall
sbb
jg
push
push
lahf
loop
cmp
mov
loopne
dec
jl
mov
lods
lret
std
rorl
jmp
xor
xchg
int
fcoms
mov
rcr
aaa
xor
inc
pop
jp
sub
out
dec
fistpl
add
xor
stos
out
fiaddl
jge
outsb
aaa
outsb
decl
hlt
repnz
or
in
inc
or
mov
adc
jnp
xchg
xchg
xchg
push
inc
xlat
mov
outsl
lahf
and
add
arpl
mov
incw
loop
mov
imul
or
cltd
lcall
lock
cli
dec
out
push
xchg
mov
adc
lea
and
cmp
sbb
push
jge
xor
test
jmp
ljmp
subb
inc
sbb
in
mov
push
push
adc
cmpsl
mov
lcall
loopne
stc
mov
mov
mov
popa
addr16
sub
xor
pusha
xor
std
aad
test
decl
data16
fcmovnb
mov
in
data16
ja
jae
sub
cld
rcl
sbb
jg
dec
call
mov
inc
jg
add
cmp
mov
mov
pop
std
decl
or
mov
xor
push
popa
and
sbb
pop
addb
push
lock
cs
data16
dec
mov
arpl
mov
cld
test
lcall
xchg
insb
pop
pop
pop
push
push
jle
out
add
fistpll
mov
fcompl
orl
mov
insl
pop
rolb
or
fistl
jg
lods
or
stc
les
lock
push
inc
lcall
popa
dec
cmp
rorb
push
divb
lea
pop
jg
jmp
mov
push
jg
cmc
adc
ljmp
cli
jmp
movsl
sbbl
sahf
fidivl
push
inc
cmp
jp
mov
pop
cmp
incl
fcmove
cmp
push
mov
inc
nop
lods
into
orl
mov
dec
and
incl
aaa
mov
cmp
out
lds
inc
rorb
dec
push
jmp
addr16
sub
jo
int3
and
push
xor
fdivs
pushl
push
mov
fstps
or
xor
pop
adc
and
sbb
loopne
jecxz
add
mov
mov
adc
mov
jl
ds
mov
arpl
push
jmp
jl
xor
cli
shrl
sti
inc
and
ja
shll
xor
mov
mov
das
dec
decl
aas
ss
dec
clc
outsl
out
fs
aad
in
mov
repz
test
mov
sti
mov
stos
adc
lock
ret
adc
out
lods
bound
push
push
decl
cmp
mov
filds
mov
cld
mov
aam
and
out
mov
cli
and
jmp
pop
hlt
ret
ljmp
push
aad
repz
push
ja
push
xchg
fistps
cmp
or
xlat
jp
mov
dec
sub
dec
jmp
lods
stos
cld
jmp
lods
js
fldt
scas
in
int3
out
cmp
testb
jmp
int3
call
pop
add
rorb
fimuls
dec
cld
and
ret
lods
je
jno
hlt
or
xor
incl
gs
jo
mov
xchg
push
inc
test
jl
incl
jmp
imulb
push
xchg
xor
pusha
sub
jg
mov
lcall
inc
sbb
pop
fisttpll
mov
iret
scas
or
and
fistpll
mov
mov
lea
mov
adc
push
cltd
je
divl
fistpll
dec
xchg
xlat
jae
andl
sbb
dec
popa
push
lcall
call
mov
push
es
test
or
sbb
es
jne
int3
cmpsl
and
sbb
movsb
jno
repnz
add
and
cs
xlat
out
clc
mov
dec
outsl
mov
pop
sub
jb
sub
mov
fdivr
jg
xlat
in
rolb
jecxz
loope
and
scas
xchg
sbb
cmpsb
frstor
xor
mov
xchg
pop
std
call
sub
xchg
lret
fistps
fs
mov
mov
cltd
les
lock
decl
xchg
xchg
ret
into
loope
lods
test
andb
push
and
add
jg
pop
mov
jnp
cs
mov
jl
ljmp
jl
pushl
test
lahf
notl
adc
rolb
lahf
shrb
xchg
js
dec
clc
fwait
adc
repz
jle
cmp
shlb
mov
out
test
aaa
mov
mov
dec
flds
pop
or
cmp
cmpsb
inc
xadd
ljmp
stos
sbb
mov
push
mov
jae
jle
dec
pop
xchg
sbb
or
dec
jp
call
lret
dec
test
lret
in
and
ds
or
inc
jb
or
in
inc
ljmp
nop
adc
scas
mov
into
mov
mov
xchg
push
push
je
loopne
sub
xchg
aas
shlb
stc
add
pop
xor
dec
mov
push
cwtl
jb
xchg
jne
sub
dec
or
jnp
lock
call
cwtl
inc
out
cwtl
nop
add
jmp
push
pop
mov
imulb
test
call
test
adc
jecxz
adc
cld
sti
pusha
ds
les
mov
and
inc
jb
sub
iret
gs
push
or
inc
dec
loope
cmp
rorb
shll
or
sbb
imul
pusha
loope
lea
pop
or
mov
cmp
mov
imul
das
or
xor
fildll
pop
sub
dec
nop
ja
imul
sbb
outsl
add
sbb
shrl
and
sub
subb
mov
outsl
rcll
outsl
cmp
daa
and
popa
sbb
mov
mov
or
popa
cmc
pop
pop
mov
mov
adc
mov
mov
or
mov
test
xchg
xchg
dec
pop
lock
arpl
inc
lds
adc
xlat
sbb
lods
loope
adc
cmp
inc
mov
adcl
sbb
dec
rcll
cltd
push
mov
sbb
xor
daa
or
or
imul
mov
leave
mov
stos
jbe
loope
fstl
sbb
xor
push
push
push
aaa
inc
sub
mov
jmp
popa
xchg
rorl
fs
leave
shll
mov
pop
shll
fldenv
lret
mov
fiaddl
mov
mov
jg
fwait
sub
pop
das
fisttpl
pop
cmp
xor
nop
lods
call
js
mov
cmpsl
cmc
inc
loop
stos
mov
lods
or
push
xor
jbe
lea
or
sbbl
fwait
xchg
imul
call
inc
mov
add
adcl
lcall
data16
sub
loop
call
xor
mov
pop
daa
push
ds
incl
lods
xor
ja
fmuls
repz
imul
cmp
filds
decl
inc
inc
addl
push
es
push
jcxz
lcall
mov
decl
gs
sbb
je
je
in
test
out
pop
sti
jmp
cmp
imul
call
pop
push
out
dec
add
jmp
cs
jno
arpl
aaa
test
sub
cmp
decl
pop
test
pop
cmp
addr16
mov
jnp
xchg
repnz
scas
pusha
iret
cmp
test
jbe
inc
decl
daa
jo
cmp
mov
shll
push
push
test
mov
aas
jge
imul
inc
xchg
jmp
repz
std
pushf
jns
xchg
cmp
push
les
xchg
add
incl
mov
inc
push
sub
js
xchg
jg
xchg
andl
lret
fwait
and
mov
call
test
xchg
or
mov
sub
fistl
arpl
dec
xor
jns
cmp
roll
push
int3
cmpsl
inc
lahf
mov
mov
jnp
insl
outsl
lahf
iret
in
xlat
les
aad
mov
in
movb
nop
inc
frstor
incl
xchg
les
jle
fisttpll
rorb
mov
xchg
jb
pop
pop
cwtl
sub
push
pushl
test
fidivrl
pusha
inc
popl
inc
clc
jae
push
sbb
mov
js
jbe
jg
popf
popf
fs
data16
xchg
out
dec
rep
fdivrs
stc
push
imull
ljmp
loop
inc
arpl
cmpsb
mov
enter
push
xor
insl
je
ljmp
int3
in
insb
lahf
imul
sti
lods
iret
sbb
addr16
sub
hlt
mov
cli
rcrl
xchg
fisubrl
aas
xor
dec
testl
iret
xchg
cld
mov
mov
gs
dec
enter
or
adc
xchg
enter
adc
push
mov
dec
xchg
clc
jmp
mov
rol
or
cli
les
stos
bound
pop
jae
ljmp
call
sub
insb
or
sub
rorl
movsb
mov
rclb
jns
sub
dec
dec
shrb
add
in
fbld
adc
sarl
incl
push
out
pop
loopne
mov
pop
mov
jg
pop
test
out
jnp
mov
pop
and
call
ret
cld
imul
pop
push
cmc
xlat
jae
xchg
sbbb
dec
insl
int3
sub
fsubr
lret
mov
dec
je
sarb
sbb
in
xchg
cltd
mov
call
jp
lock
out
gs
jne
jge
push
shll
xor
sub
lods
filds
jecxz
sub
adc
aad
adcl
xor
std
jno
gs
lods
jnp
aaa
cld
adc
xchg
adc
mov
addr16
scas
add
jmp
mov
sub
pop
insb
pop
sti
ja
xor
xchg
sbb
dec
cmp
jmp
pushl
adc
lock
pop
sub
sub
mov
outsb
jg
popa
arpl
in
xlat
test
lock
mov
and
popf
push
xor
inc
sub
xchg
pop
repnz
nop
pop
ja
lds
rolb
xlat
push
fimull
fwait
bound
inc
scas
push
sar
lret
jmp
cmp
loope
xchg
cmp
push
mov
cmp
in
and
das
hlt
push
cli
test
sar
call
mov
iret
sub
xor
and
push
jo
leave
mov
pop
lcall
subb
into
cli
mov
insb
out
cld
push
popa
dec
cmpsl
aaa
pop
push
fcomps
push
xor
sarl
stos
xchg
addl
mov
ljmp
sbb
stos
int3
mov
push
sbb
fs
imul
int
mov
stos
push
mov
jmp
jp
jns
hlt
jmp
mov
push
cmc
int
inc
psrlw
inc
popa
inc
pushl
addr16
xchg
popf
int3
mov
push
jnp
outsb
dec
or
jg
divl
dec
sbb
adc
ss
xor
pusha
je
jbe
sbb
repnz
adc
jmp
sbb
in
xchg
mov
xchg
mov
fnstsw
fwait
adc
jae
test
decl
popa
pop
clc
sbb
dec
test
pop
test
fistpl
push
movsb
stos
test
add
ret
adc
push
and
or
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
incl
les
insl
mov
decl
shlb
pop
ljmp
mov
mov
jmp
incl
sbb
and
pop
sahf
out
and
int
lea
jae
jae
jns
xor
aad
call
push
xor
popf
pop
mov
in
mov
push
insb
lea
and
xchg
mov
incl
sar
rcll
aad
lods
repz
scas
fisttpl
mov
cli
sti
pop
aaa
aam
out
jbe
imul
andb
mov
imul
inc
test
ljmp
sarl
sub
cmp
arpl
xor
mov
popa
addr16
imull
jmp
pushf
mov
xchg
sbb
and
repz
pop
sub
inc
sub
xor
incl
dec
sbb
add
les
scas
fnstsw
mov
adc
mov
and
mov
push
inc
mov
icebp
ret
loop
jg
out
jae
mov
aaa
add
lcall
out
pop
dec
jge
mov
sub
jmp
mov
xor
cmp
adc
xchg
lcall
movsb
popa
push
lahf
lret
xor
pop
mov
sub
jle
bound
mov
lahf
aam
mov
incl
xchg
in
xchg
outsl
data16
insl
imul
sub
pushf
jo
cmpsb
std
fidivrl
ss
pop
inc
cmp
add
in
pop
cmpsb
pop
mov
mov
aaa
lcall
ljmp
push
push
xor
loope
int
jne
and
iret
ja
jnp
lods
cmpsb
jo
dec
fcompl
jmp
dec
lods
insl
cltd
es
mov
lcall
xor
pushf
aas
cmp
cltd
cli
xchg
outsb
mov
and
pusha
jo
add
sub
dec
lock
lcall
dec
and
notb
adc
xor
xchg
cltd
scas
jae
loope
dec
xor
dec
pop
inc
jb
xor
push
stos
iret
cld
clc
sub
or
dec
ja
jle
jg
xchg
pop
inc
jl
call
js
pop
insb
mov
aad
jb
and
cmp
js
ficomps
ret
jne
incl
xchg
mov
pop
ss
dec
jg
adc
push
adc
repz
adc
fs
mov
cmp
push
in
subb
jnp
xor
sbb
mov
lret
push
sub
pop
cltd
test
jmp
add
enter
xchg
mov
sbb
js
call
fsubrs
push
seto
jmp
add
scas
mov
add
in
pop
stos
outsl
fs
lahf
movsl
bswap
mov
xchg
decl
sbb
leave
int
outsb
mov
lods
cmp
xchg
pop
sbbl
mov
decl
test
xchg
scas
push
pop
cmp
fldenv
cmp
hlt
aad
xchg
lcall
pop
shl
jbe
outsb
xchg
xor
out
enter
js
xor
fwait
dec
jl
jne
stos
out
xorl
inc
je
inc
lcall
mov
int3
push
inc
ja
negb
push
clc
jmp
mov
and
adc
in
icebp
jl
in
shlb
daa
dec
cli
clc
pop
pop
ljmp
imul
test
xchg
loopne
mov
push
enter
rcrb
cmpsl
jmp
movsb
fxch
adc
pop
add
pop
add
xchg
dec
jb
stc
jg
xor
loope,pn
out
aam
sbb
mov
nop
mov
je
enter
pushl
outsb
cmp
mov
and
jns
sbb
aad
pop
movsl
insb
sarb
ljmp
jg
adc
ret
mov
lea
add
out
inc
inc
hlt
dec
fwait
leave
insb
je
imul
xlat
add
out
adc
lds
pop
sbb
loope
inc
add
mov
out
fisttpl
dec
lret
out
ja
sub
add
adc
push
jb
cld
iret
sub
cmp
jns
inc
fs
pushl
cld
xchg
adc
cmpsl
pop
and
mov
scas
jmp
ljmp
sub
repnz
fs
ljmp
jnp
adc
mov
jge
cmp
call
insl
push
adc
sbb
xchg
loope
pop
lock
sub
adc
dec
pop
call
imul
dec
push
mov
stos
and
ljmp
aad
push
incl
mov
mov
or
aad
push
into
loope
lcall
mov
hlt
pop
leave
cmp
xor
bound
add
aad
jns
pop
mov
call
enter
mov
sbb
adc
and
cmp
arpl
fwait
push
shlb
lcall
mov
jmp
inc
ds
lods
scas
lcall
outsb
cmp
fimuls
xchg
xchg
scas
pop
shlb
rcr
test
outsl
testb
decl
pop
push
iret
int3
fmuls
or
test
pusha
add
mov
adcl
pop
cmp
sbb
sub
addr16
sub
sbb
dec
cmp
jecxz
and
in
call
add
xchg
movsl
out
das
mov
scas
and
mov
dec
in
sub
and
xchg
shl
mov
rorb
add
mov
in
cmp
add
decl
push
pop
inc
pop
lods
test
scas
mov
sbb
aam
cmc
lahf
xchg
jle
lods
jecxz
out
sub
leave
out
dec
cld
or
call
data16
fcmovu
and
push
xchg
mov
dec
xchg
pop
xorb
in
mov
arpl
jb
push
mov
mov
ljmp
mov
outsb
cmp
test
stos
add
stos
fsubrl
add
or
xchg
popa
popa
jno
jmp
popf
or
lea
mov
shlb
pop
arpl
pop
ja
push
xchg
in
push
sbb
call
inc
adc
loopne
inc
cmp
push
insl
mov
das
xor
push
lret
adc
pop
push
inc
test
inc
imul
jge
mov
push
int3
pop
or
and
ret
inc
call
sbb
xchg
lods
dec
into
mov
insb
out
add
cmp
fbld
call
jb
dec
pop
dec
loope
inc
jo
fwait
repnz
jnp
cmc
dec
out
or
pop
lcall
pop
ljmp
outsl
adc
and
lock
fldcw
fmull
cli
shl
gs
push
ja
sub
subb
inc
and
icebp
jo
dec
and
in
jmp
leave
mov
cmp
lods
pop
xchg
mov
lds
outsb
lret
aas
int
aaa
push
jmp
mov
movsl
negl
loopne
inc
outsl
inc
xlat
mov
lock
mov
popf
xchg
aas
sub
jl
dec
push
lods
push
aas
rcl
lock
pop
push
cmp
lret
mov
repnz
leave
inc
push
adc
mov
jmp
cmp
or
test
push
icebp
push
add
pop
jb
test
lea
faddp
sbb
leave
xchg
sub
pushf
mov
dec
xor
dec
jg
rorb
jmp
mov
sahf
add
adc
enter
push
in
jg
fisubrs
lret
sub
test
enter
je
jecxz
xlat
jmp
dec
es
xorb
and
cwtl
push
repnz
nop
pop
dec
jbe
mov
jg
lods
push
dec
jno
pusha
push
scas
and
sbb
lds
inc
inc
xor
sbb
sahf
lcall
lret
xor
inc
fnsave
pop
mov
xchg
je
les
lods
or
pop
out
movsl
ret
jmp
mov
push
ret
popa
inc
jbe
jno
xchg
dec
push
leave
push
or
mov
dec
repz
lock
jmp
sbb
in
stos
sbb
js
jae
sahf
lret
ret
cmp
mov
ljmp
mov
das
mov
cmpb
nop
ficomps
cmp
loopne
pop
lcall
push
mov
sub
test
or
mov
pop
mov
mov
push
jne,pt
xor
daa
and
pusha
stos
mov
jmp
pop
rcrb
loop
in
or
incl
sbb
jg
icebp
cs
push
mov
test
scas
mov
jmp
lret
push
imul
dec
jecxz
inc
cmpsb
rorb
out
popa
adc
push
jmp
ficoml
shll
push
popa
mov
adc
inc
pop
cmp
lods
jb
dec
pop
hlt
adc
lret
aam
int
cmpb
lods
add
inc
xchg
sub
call
fwait
mov
and
sbb
jg
shrb
mov
push
sub
xor
xor
and
iretw
dec
mulb
jg
mov
data16
outsb
or
fisttpl
inc
push
incl
inc
imul
hlt
in
xchg
push
lods
adc
jmp
mov
pop
pop
fsubl
jbe
mov
popf
adc
jns
xor
lcall
cmpsl
mov
ds
xchg
mov
sbb
jmp
push
and
add
and
shl
mov
adc
mov
fcmovbe
or
lcall
push
inc
jle
aad
push
or
enter
divl
cmp
xor
ljmp
popf
test
jg
into
int
or
xchg
pusha
arpl
xor
pop
shll
in
out
clc
in
adc
mov
les
pop
lret
and
mov
push
fs
clc
ljmp
jno
push
mov
mov
test
insl
jl
fs
cmp
das
dec
stos
ljmp
jmp
xor
shll
test
jb
sub
cmp
fwait
dec
mov
fidivs
sub
lock
aam
loop
mov
mov
push
mov
lcall
lret
popaw
mov
ret
out
lea
xchg
dec
xchg
dec
popf
push
xchg
pop
xchg
jg
cld
adc
rcl
pop
cmp
cmpsl
xor
jp
adc
fmuls
lcall
mov
xor
shr
xor
xchg
shlb
lods
add
mov
call
cld
jl
lock
lret
repz
sbb
rclb
test
pop
and
popf
pop
xchg
add
cwtl
aad
lcall
mov
loope,pt
xchg
movsb
aad
mov
xchg
aas
jns
mov
mov
add
jnp
dec
sbb
insb
xor
cmp
fsts
fistps
loop
jle
jp
ljmp
lret
jge
sbb
jae
fwait
gs
lcall
lds
push
lcall
rcrl
jg
sti
jb
test
cmp
lahf
sbb
incl
cmp
shll
pusha
out
sub
xchg
push
inc
clc
mov
lods
push
sub
pop
fcos
jg
lcall
das
and
pop
aaa
lret
out
adc
fs
in
jle
cmpsb
loopne
incl
repnz
mov
fdivl
aam
mov
adc
mov
and
loope
inc
cmpsb
pop
pop
jmp
call
insl
sarl
jp
in
imul
pusha
inc
idiv
xor
call
lea
mov
aas
fcompl
std
cltd
lea
cli
jg
mov
dec
jp
std
xchg
push
pop
adc
sbb
stos
sub
decl
and
mov
add
xor
mov
push
aad
mov
imul
or
jo
stos
pushl
dec
inc
sbb
out
sti
xchg
iret
daa
lahf
movsl
dec
push
fstl
cld
das
and
jae
out
inc
cmp
fiadds
inc
inc
sbb
cmp
ja
pop
icebp
push
cli
jge
lds
jae
call
cmp
inc
pop
clc
mov
xor
ss
mov
movsl
adc
movsb
andl
mov
sub
mov
loopne
or
or
xor
fs
lcall
icebp
inc
mov
arpl
lret
mov
fadds
push
add
subl
sarl
ljmp
lock
cld
push
xchg
loop
or
sub
xor
pop
cmp
jg
xchg
fs
jg
xor
push
adc
aas
shll
add
jnp
mov
call
sbb
jae
push
loop
jae
sahf
xor
sub
push
imul
decb
pop
jb
call
aas
fwait
test
inc
and
outsb
sub
mov
xor
add
cs
adc
movsl
popa
and
mov
push
push
gs
inc
and
jg
fisubrl
mov
add
pop
ja
xchg
pop
sti
fildll
sbb
in
decl
decb
cmp
addb
movsb
add
cltd
daa
out
lea
je
icebp
std
xchg
inc
dec
pop
sub
mov
sub
adc
sti
lds
fbld
adc
mulb
daa
fsubl
cmpsl
mov
iret
insl
aas
stos
cmp
out
xchg
call
xor
push
aam
inc
jmp
xor
lahf
arpl
ljmp
int
pop
dec
addb
fsubl
mov
xor
pusha
stos
push
jl
cmpsl
rcrb
push
stos
ds
cmp
cmp
pop
bound
imul
leave
inc
add
jmp
jmp
fs
mov
adc
adc
pop
xorb
rorl
pop
cmc
xchg
call
es
out
mov
lock
addl
mov
and
call
inc
sbb
and
jb
cmpsw
jbe
fstpl
repnz
push
scas
call
cli
fdivl
xchg
stc
mov
sub
ret
jnp
jb
gs
mov
std
call
pop
testl
mov
push
cld
mov
mov
es
imull
lcall
mov
pop
mov
xchg
or
lret
leave
and
imul
fs
sbb
arpl
xchg
push
enter
aad
popa
fadds
cmp
ss
dec
jo
jle
jmp
neg
push
lods
ficoms
xor
getsec
popf
xchg
pop
or
decl
in
cmc
or
mov
mov
scas
xorb
pop
mov
dec
dec
push
mov
cmpsb
mov
sub
hlt
loopne
push
push
xchg
inc
outsb
shr
jns
fistl
es
adc
das
cmp
sti
in
xchg
out
xchg
aaa
jb
sti
dec
xor
into
adc
aad
and
adc
inc
arpl
sbb
aas
add
mov
push
cmpsb
and
or
push
add
jbe
xchg
cmp
out
pushf
pop
in
mov
dec
shrl
mov
xor
das
xchg
xor
int3
push
push
nop
mov
shll
add
test
jg
shl
and
mov
jle
imul
mov
call
dec
cld
mov
mul
stc
test
cwtl
jmp
push
mov
decl
inc
iret
push
dec
or
lahf
fiadds
lea
sbb
test
mov
lea
mov
in
movhps
adc
mov
jb
mov
or
fadd
out
jo
aaa
loop
imul
test
je
push
xchg
aam
fstpt
lcall
sti
inc
stos
sbb
pop
test
jae
fdivl
aaa
lret
stos
lahf
loopne
sbb
adc
insl
and
mull
int3
les
push
aad
mov
lret
dec
fwait
movsb
pop
dec
popa
add
sub
inc
inc
clc
lea
pushf
mov
int3
lret
ret
ss
lret
call
std
inc
ficoms
sbb
xchg
inc
sti
clc
inc
test
push
cld
fs
mov
addr16
out
lods
divb
js
jo
pop
xchg
push
das
dec
pop
in
lcall
sub
mov
or
out
or
and
rclb
mov
sub
lcall
xchg
add
pop
aam
ja
or
jnp
ja
adc
mov
sbb
in
and
add
mov
sbb
mov
lods
or
mov
decl
sbb
xor
fucomp
mov
jmp
push
std
inc
cld
lcall
loope
pop
jmp
cmp
jmp
sub
xchg
mov
sbb
call
clc
in
sbb
in
and
sbb
mov
cmp
jmp
xor
push
mov
out
in
adc
repz
outsl
andl
mov
adc
xchg
or
leave
stos
jmp
out
inc
incl
addr16
iret
jecxz
in
decb
scas
dec
imul
add
mov
jmp
in
pop
std
push
into
aas
movsl
push
rcr
or
dec
pop
push
pop
or
add
enter
faddl
call
cwtl
sub
addr16
dec
movsb
inc
cmp
hlt
adc
pop
adc
jmp
inc
mov
repnz
ja
pushl
movsl
jmp
and
pop
out
push
loop
mov
test
sub
call
xor
faddp
jo
sti
lea
shll
int
dec
jno
cmpsl
fiadds
incl
test
adc
daa
jno
sub
aam
or
addr16
int
sub
pop
cld
stos
jg
and
add
outsb
pop
pushf
cmp
insb
aam
fimuls
push
push
xor
mov
dec
jmp
ret
xorl
mov
mov
jecxz
lahf
rcrl
jge
insb
and
cwtl
outsl
clc
jg
dec
dec
inc
push
out
mov
mov
into
jns
and
mov
push
pop
dec
iret
jle
push
jno
leave
adc
out
out
cmpsb
out
jne
aam
and
nop
dec
push
aad
pushl
popf
dec
xor
push
stc
std
fcoml
inc
sbb
jmp
int3
mov
pop
call
jbe
daa
adc
fstpt
push
xchg
icebp
xor
insb
cmc
xlat
lods
mov
mov
dec
dec
pushl
sarb
cmpsl
jmp
mov
rorl
sub
test
pop
jecxz
incl
jmp
mov
repz
ja
mov
inc
aad
sarb
call
dec
pop
lock
ss
shl
lea
push
lret
xchg
pop
and
lcall
xorl
sub
xchg
add
adc
mov
cld
and
xchg
ljmp
ljmp
sub
addb
mov
xlat
idivl
inc
jne
pushl
test
arpl
enter
push
out
shll
cs
call
lds
add
fldl
jl
pusha
jno
or
pop
mov
arpl
call
iret
add
imul
jb
call
mov
roll
dec
pushf
iret
test
cmp
incl
or
jae
iret
test
popa
sbb
lea
or
shlb
bsr
cmp
decl
pop
arpl
mov
jnp
adc
mov
out
push
mov
mov
ljmp
test
das
push
lea
pop
mov
pop
adc
inc
test
xor
cli
dec
loopne
imul
mov
pop
scas
sub
cmp
fidivs
lcall
call
pop
ss
test
jmp
daa
mov
push
push
fs
insb
adc
shll
pushl
and
mov
push
push
test
push
outsl
sbb
or
lret
mov
jmp
les
ret
mov
mov
adc
cmpl
dec
call
call
cld
cmp
movsl
out
dec
stc
push
cwtl
xor
into
xlat
jb
add
test
jmp
popf
cmp
lds
or
sbb
cmp
int3
sub
in
jl
pop
pushl
dec
dec
arpl
dec
xchg
adc
dec
and
stc
test
movsb
fcomip
test
jmp
cs
incl
cmp
xchg
mov
mov
test
adc
jmp
add
cmp
mov
je
xor
sub
mov
mov
in
out
fisubs
dec
dec
mov
sub
ret
out
jne
sbb
mov
push
jmp
hlt
aaa
std
xor
inc
call
sub
imul
dec
sub
sti
mov
adc
mov
mov
ljmp
dec
and
mov
jnp
ljmp
fcmove
or
mov
mov
test
ja
fimull
mov
and
mov
sbb
test
je
popa
outsb
fistpll
sbbb
fucomip
imul
cs
xor
ds
jge
fscale
jle
sub
ret
add
mov
ja
and
jne
sbb
mov
mov
cmp
ret
push
push
mov
mov
push
jno
mov
adc
sub
outsb
sbb
xor
out
out
fisttpll
cmp
push
xor
push
sub
inc
sub
xchg
shrl
cmp
and
bound
andb
je
pushf
loopne
or
jno
adc
adc
sub
loopne
mov
and
test
mov
adc
lock
ja
jmp
mov
mov
imul
repnz
mov
in
xchg
incl
pop
aas
adc
sbb
fwait
xor
pop
add
pop
js
leave
fdiv
lds
gs
in
or
mov
aad
pop
cmp
stos
pop
and
sarb
pop
scas
iret
out
cli
imul
test
addr16
aam
repz
and
xor
inc
mov
sbb
cmp
test
jl
inc
cmp
and
clc
xchg
out
pop
cmp
call
shl
sbb
mov
ret
push
ljmp
adcb
jae
jp
call
dec
xchg
scas
mov
xorb
and
mov
xchg
push
xorb
push
jg
data16
jg
cmpsw
enter
cmpsl
nop
sub
lods
jge
mov
push
mov
incl
aam
mov
std
add
dec
test
lcall
ljmp
push
lahf
loop
cmp
mov
loopne
dec
jl
mov
ljmp
rorl
adc
pop
fs
xchg
int
fcoms
mov
rcr
aaa
xor
in
inc
pop
jp
sub
dec
fistpl
add
xor
stos
out
ficompl
incl
jge
outsb
aaa
outsb
lahf
hlt
repnz
or
in
inc
or
pushl
out
mov
stos
adc
xchg
xchg
xchg
push
inc
xlat
mov
outsl
lahf
and
add
arpl
add
or
fisubrs
ss
imul
or
cltd
lcall
push
push
push
lock
cli
dec
out
push
xchg
mov
adc
lea
and
cmp
sbb
push
jge
ljmp
push
test
jmp
insl
lods
subb
inc
sbb
in
mov
push
push
adc
in
cmpsl
mov
push
loopne
stc
mov
mov
mov
popa
addr16
sub
xor
pusha
pushl
std
aad
test
dec
fsubs
rcr
ret
mov
in
data16
ja
jae
sub
cld
rcl
inc
aad
sub
push
sarl
dec
cmpsl
xchg
inc
jg
add
cmp
outsb
cmp
sub
or
mov
xor
push
popa
and
sbb
pop
cld
jmp
push
push
cs
data16
dec
mov
arpl
mov
cld
mov
ljmp
pop
push
push
jle
out
add
fistpll
mov
call
fcompl
orl
js
pop
xchg
insl
pop
rolb
or
fistl
jg
lods
or
stc
ljmp
lock
push
inc
pop
outsl
popa
dec
cmp
rorb
push
divb
lea
pop
jg
jmp
mov
pop
hlt
ljmp
jg
cmc
adc
daa
movsl
sbbl
sahf
fidivl
push
inc
cmp
jp
mov
pop
cmp
fcmove
cmp
push
mov
inc
nop
lods
into
orl
mov
decl
lock
and
xor
cmp
out
lds
inc
sar
in
decl
dec
cmpsb
jns
sub
push
sub
jo
int3
and
push
mov
lods
lods
mov
dec
je
push
mov
fstps
or
xor
pop
adc
and
sbb
jg
jmp
push
jecxz
add
mov
adc
mov
jl
ds
mov
arpl
ljmp
push
in
sub
push
sti
inc
and
ja
shll
xor
mov
mov
das
dec
pop
sub
dec
clc
outsl
out
fs
aad
in
mov
repz
fistl
imul
and
mov
stos
adc
lock
ret
adc
out
lods
bound
std
decl
push
push
xlat
sbb
inc
mov
cld
mov
aam
and
outsb
xchg
out
mov
and
jmp
pop
hlt
ret
ljmp
push
aad
repz
lcall
push
xchg
fistps
mov
jp
mov
dec
sub
mov
lods
stos
cmpsl
in
jb
pop
lods
js
fldt
scas
in
int3
out
cmp
testb
jmp
cmpl
int3
pop
add
rorb
fimuls
dec
cld
and
ret
lods
je
incl
hlt
or
xor
subb
gs
jo
mov
xchg
push
inc
test
or
pop
jl
mov
imulb
push
xchg
xor
pusha
sub
scas
scas
nop
fnstcw
mov
and
lea
adc
fisttpll
mov
mov
lds
sub
mov
mov
lea
mov
adc
push
cltd
je
mov
sbb
mov
dec
xchg
xlat
jae
andl
sbb
decl
push
lcall
mov
mov
es
test
or
sbb
es
jg
pushl
int3
cmpsl
and
sbb
inc
add
and
cs
fcomip
adc
fprem
dec
outsl
mov
pop
sub
jb
sub
mov
ljmp
in
rolb
jecxz
loope
and
scas
xchg
sbb
cmpsb
jmp
xor
mov
xchg
push
push
sub
xchg
lret
fistps
fs
mov
mov
ljmp
pop
cltd
les
dec
adc
or
hlt
mov
loope
lods
test
push
xor
mov
push
xchg
sub
test
call
pop
mov
jnp
cs
mov
jl
ljmp
xor
xor
lahf
notl
adc
rolb
lahf
shrb
xchg
int
mov
js
dec
clc
fwait
adc
repz
jle
cmp
shlb
mov
out
test
pushl
outsw
aaa
mov
dec
adc
dec
flds
pop
or
cmp
cmpsb
inc
xadd
ljmp
push
mov
sbb
push
mov
jae
jle
dec
pop
xchg
sbb
or
dec
jp
lret
dec
test
lret
in
and
ds
or
inc
pushl
or
in
inc
outsb
imul
cmp
mov
mov
xchg
call
je
loopne
sub
mov
pop
xor
dec
mov
push
cwtl
jb
xchg
jne
loope
ljmp
push
dec
or
jnp
cwtl
inc
out
cwtl
nop
add
jmp
push
pop
mov
pop
dec
test
call
test
adc
jecxz
adc
roll
push
les
push
stc
and
pop
and
sahf
lret
rolb
rclb
clc
push
lea
cmp
popf
das
mov
adc
mov
sbb
adc
ret
or
cmpl
cmp
into
push
sbb
adc
xor
add
jbe
mov
sbb
jo
arpl
xor
fistl
jnp
mov
xchg
and
or
or
mov
sbb
xor
pop
mov
pop
or
outsb
cmp
adc
xchg
leave
sub
xorb
mov
and
fsubrs
pop
mov
movsb
ret
ret
pop
sbbb
cmp
jo
or
bound
test
fwait
mov
movsl
xchg
mov
test
cmp
fcmovbe
pop
inc
xlat
sbb
shl
cmpsl
adc
cmp
inc
lods
arpl
mov
add
mov
daa
and
ja
sbb
sbb
imul
cltd
scas
popa
sbb
mov
mov
adc
daa
aad
or
aas
pop
or
jo
aas
leave
mov
pop
ret
pop
lahf
jne
xchg
int
xor
sub
mov
aaa
inc
mov
lods
imul
xchg
rorl
imul
shll
shll
xchg
cmpsl
out
inc
sbb
xor
mov
adc
inc
add
fisubrl
fldt
fdivs
repz
sbb
mov
mov
cmc
adc
mov
or
lds
in
pop
lds
scas
lahf
adc
insl
enter
sub
add
in
stc
xor
mov
mov
add
cmp
shrl
inc
data16
sub
loop
call
xor
fidivl
test
cli
cmp
fmuls
repz
imul
cmp
filds
adc
addl
push
es
push
jcxz
lcall
loop
es
mov
mov
sbb
je
je
in
test
out
pop
sti
jmp
cmp
ljmp
mov
aam
push
out
dec
add
jmp
cs
jno
arpl
aaa
test
decl
jns
dec
int
test
pop
cmp
addr16
mov
jnp
xchg
repnz
scas
pusha
iret
cmp
inc
test
jbe
inc
or
jo
cmp
mov
shll
push
push
test
mov
aas
bound
imul
inc
xchg
jmp
repz
std
pushf
jns
xchg
cmp
call
les
xchg
add
inc
fidivrs
inc
push
sub
js
xchg
jg
xchg
andl
lret
lcall
mov
mov
mov
sub
fistl
lcall
arpl
xor
jns
cmp
roll
push
int3
cmpsl
inc
lahf
mov
mov
cs
cmp
jnp
insl
outsl
lahf
iret
in
xlat
les
aad
mov
in
movb
lcall
data16
les
jle
fisttpll
rorb
mov
xchg
jb
pop
pop
cwtl
ljmp
push
jbe
test
fidivrl
pusha
inc
popl
inc
clc
jae
push
lcall
or
jg
popf
popf
fs
data16
xchg
out
dec
rep
fdivrs
stc
push
cmc
ljmp
imull
pop
pop
loop
inc
arpl
cmpsb
mov
enter
push
fs
fcomip
dec
jle
je
int3
in
insb
lahf
imul
sti
lods
iret
sbb
jmp
test
add
mov
xchg
fisubrl
aas
xor
dec
testl
iret
xchg
cld
mov
sbb
cs
enter
or
adc
xchg
enter
adc
push
mov
iret
lret
dec
xchg
jmp
mov
rol
or
cli
les
stos
lcall
push
je
jae
fists
loop
or
sub
rorl
ljmp
movsb
mov
rclb
stos
sub
dec
dec
shrb
add
in
fbld
push
adc
sarl
inc
and
out
pop
loopne
mov
pop
mov
jg
pop
test
out
jnp
mov
pop
and
ret
cld
imul
pop
push
cmc
xlat
jae
xchg
sbbb
pushl
loop
fsubr
lret
mov
dec
je
sarb
sbb
in
xchg
lcall
mov
cs
out
gs
jne
jge
push
shll
xor
mov
push
imul
pop
pop
adc
aad
adcl
adc
mov
movsb
gs
lods
jnp
aaa
cld
adc
xchg
adc
mov
decl
add
scas
add
stos
inc
or
add
pop
sti
ja
xor
xchg
sbb
dec
cmp
jmp
lock
lock
pop
sub
sub
mov
outsb
jg
popa
arpl
incl
jae
fs
mov
mov
and
popf
push
xor
incl
seta
mov
lds
rolb
xlat
push
fimull
fwait
bound
incl
push
sar
lret
cmp
loope
xchg
cmp
push
mov
cmp
in
and
das
ljmp
cli
test
sarb
sub
xor
and
mov
and
mov
pop
subb
into
cli
mov
insb
out
cld
push
popa
dec
cmpsl
aaa
pop
push
dec
fcomps
push
sarl
stos
xchg
addl
mov
ljmp
int3
mov
push
sbb
fs
imul
int
outsl
pushl
jl
out
xchg
jns
hlt
jmp
mov
push
cmc
int
inc
psrlw
rorl
add
inc
mov
dec
lea
addr16
xchg
popf
int3
mov
push
jnp
outsb
decl
add
lret
sbb
adc
ss
xor
pusha
je
jbe
sbb
push
notb
adc
add
cmc
in
xchg
mov
xchg
mov
fnstsw
fwait
adc
call
ret
test
popa
pop
clc
sbb
dec
test
pop
test
fistpl
push
movsb
stos
adc
mov
loopne
mov
sbb
roll
push
xchg
add
add
add
addl
jg
arpl
cmp
xor
mov
mov
ljmp
inc
push
mov
and
mov
incl
repnz
leave
mov
int
int3
pop
into
jle
and
popf
rclb
les
xchg
lcall
insb
in
loop
cmpsb
dec
jb
jg
mov
dec
inc
test
cld
inc
xchg
jbe
out
addr16
ljmp
push
rcrl
sbb
lahf
decb
out
and
fs
pushl
cmp
dec
mov
inc
jae
and
xor
mov
inc
sbb
in
cli
pop
mov
push
sub
leave
je
push
loope
iret
jnp
add
in
lods
dec
and
jmp
lds
dec
stc
dec
mov
cwtl
call
or
pop
mov
jae
iret
push
cs
ljmp
jge
insl
xchg
dec
paddusw
mov
das
in
out
adc
push
cli
call
mov
les
jl
je
cltd
xchg
xor
dec
dec
cmpsb
inc
shlb
pushl
sarl
adc
cli
sbb
mov
pop
inc
das
das
dec
scas
jg
jl
inc
loope
jnp
lret
dec
iret
leave
andl
dec
ljmp
mov
arpl
inc
fdivr
jl
add
scas
xor
push
data16
jne
pop
mov
sub
sti
jmp
sub
call
pop
sub
sbb
test
fwait
aam
mov
jg
fidivrl
adcb
insb
gs
fsubs
mov
jl
roll
pop
ljmp
inc
bound
cmp
push
cmc
push
es
iret
sbb
ds
pop
adc
ds
xorb
pop
inc
push
in
lcall
ficoml
inc
out
add
xchg
jg
out
in
fadds
cmp
aas
cmpb
and
popa
and
jmp
add
lods
popl
inc
pop
in
push
rol
test
dec
repz
insl
mov
lea
dec
repnz
mov
ds
push
dec
lods
mov
cmpsb
pop
test
mov
jg
inc
aas
mov
sahf
jns
push
hlt
push
cmp
in
mov
movsb
adc
and
lods
lcall
jns
movsl
ret
andl
andl
div
icebp
push
cmp
push
pushf
inc
decl
xlat
sub
xor
andl
adc
mov
cmp
xchg
pop
add
adc
lds
sub
call
orb
mov
add
fs
jg
cltd
dec
cmpsb
mov
pop
mov
loop
in
aaa
lock
lock
enter
ss
in
loopne
jmp
out
scas
fdivrs
insl
jae
std
mov
mov
loope
and
xor
bound
pop
fcomi
test
aaa
mov
mov
jns
imul
mov
push
pop
mov
push
icebp
inc
push
hlt
mull
mov
adc
incl
cld
inc
fs
lock
rcrb
loop
pop
cwtl
jecxz
add
out
movsb
push
sub
mov
jg
daa
jns
cmpsb
aaa
cwtl
out
dec
mov
xchg
hlt
mov
arpl
xchg
dec
jb
stc
in
lds
cmc
xchg
out
mov
xchg
test
arpl
in
aaa
scas
cmovne
pushf
ljmp
xchg
pop
xor
addr16
jnp
mov
mov
xor
incl
xor
inc
fistl
mov
sbbb
push
dec
rcrl
out
stc
cli
pusha
mov
outsl
ret
daa
mov
mov
imul
test
dec
jg
idiv
inc
xchg
ljmp
movsb
shrl
into
jns
push
xchg
sub
add
incl
movsb
push
in
lahf
pop
xchg
ljmp
aad
mov
lcall
pop
sbb
daa
xchg
decl
push
insb
in
stc
ss
out
out
pushf
shrb
loopne
push
mov
adc
xrelease
pushl
out
sti
pop
cld
incl
xchg
jmp
in
movsb
js
mov
mov
incl
mov
test
jecxz
inc
roll
in
inc
cltd
jmp
adc
hlt
adc
repnz
jbe
inc
mov
shll
std
scas
idiv
loopne
js
jne
mov
je
sarb
dec
vmwrite
andl
push
pushf
mov
pop
fwait
jecxz
pop
movsb
jns
jl
inc
inc
jmp
repz
pop
fistpll
push
sub
push
add
jns
cmp
sbb
jns
inc
pop
or
or
in
or
fistpll
cwtl
sar
rorb
enter
mov
jns
enter
mov
test
xchg
xor
lret
fwait
rolb
repz
aas
mov
test
xchg
mov
lcall
out
sbb
jecxz
mov
mov
add
ja
mov
movw
add
pusha
out
rolb
ret
imul
incl
aaa
jle
cmp
dec
push
data16
stc
add
xor
sahf
test
pushl
adc
ret
ja
divb
adc
cld
jno
jne
cmpb
mov
je
ljmp
jmp
xor
pop
jmp
inc
jecxz
xor
es
xchg
fistl
incl
enter
and
idivb
cli
or
ds
sahf
shrl
lcall
push
ljmp
mov
mov
pop
pop
loope
jno
push
cmp
mov
ljmp
jne
sbb
sbb
adc
jns
dec
push
inc
xor
inc
int3
in
xor
and
mov
jb
or
repnz
sti
xchg
add
jb
xadd
inc
fdivp
mov
jnp
mov
jae
add
icebp
hlt
add
pop
or
inc
ss
push
cld
mov
jns
stc
js
or
cmpsb
xor
xchg
or
jmp
mov
sti
xorb
cwtl
cmp
and
std
notb
cld
shl
mov
repnz
push
repz
es
mov
mov
pop
bound
lods
mov
jae
xor
push
xchg
mov
pop
xchg
jl
imul
test
and
dec
clc
mov
in
jmp
mov
add
pop
aam
mov
add
adcl
test
mov
pushl
pop
push
icebp
cmpb
mov
xchg
aam
test
jnp
decl
decb
jp
jnp
std
jle
dec
dec
dec
xchg
jp
das
cli
mov
out
push
mov
inc
repz
lcall
cmpsb
scas
push
cmpsb
clc
arpl
aad
mov
js
leave
push
mov
sub
dec
pmaddwd
sbb
xor
sbb
stos
js
inc
leave
push
int3
pop
push
mov
aaa
add
push
jnp
pop
add
aad
push
jnp
aaa
incl
xchg
mov
jmp
sbb
sbb
scas
scas
icebp
jnp
push
in
movsbl
jnp
fidivl
es
inc
clc
pop
inc
mov
xchg
mov
mov
mov
inc
gs
hlt
add
push
mov
xchg
jbe
xchg
or
cmp
pop
fwait
jbe
outsb
les
movsl
ss
mov
mov
mov
adc
mov
xchg
icebp
jns
xchg
dec
inc
das
mov
mov
repnz
daa
mov
popa
lcall
enter
icebp
lcall
ret
cmp
ret
cmpb
sbbl
add
jl
cmpsb
jns
mov
std
cmp
rcrb
lret
or
sub
jle
sbb
or
mov
add
repz
ss
outsl
push
std
lcallw
decb
push
push
mov
fstps
das
mov
mov
addr16
xchg
mov
test
ret
push
push
cld
mov
jae
addr16
inc
and
aaa
ret
ror
jg
sub
je
arpl
mov
bound
mov
push
pop
push
dec
add
mov
movsl
pop
push
in
push
push
imul
outsb
lea
dec
out
adc
inc
pushl
mov
jbe
push
dec
push
jns
jo
insb
inc
xor
bound
push
push
push
push
pop
jne
outsl
pop
dec
clc
call
addr16
inc
insb
xor
bound
jae
dec
arpl
jb
dec
push
pop
push
inc
inc
ljmp
pop
outsb
inc
ss
xor
jne
push
jns
pop
dec
dec
push
insb
xor
pop
push
jns
inc
imul
jae
cmp
insb
push
push
inc
dec
jne
dec
inc
push
outsb
outsl
push
push
cmp
push
push
gs
mov
lret
push
imul
xor
dec
jb
inc
jp
jno
pop
outsb
push
shrl
decl
inc
xor
inc
ss
inc
xor
data16
insl
push
pop
ja
inc
jg
jae
push
dec
cmp
cmp
inc
xor
bound
jae
ja
aaa
xor
arpl
add
jp
sub
jns
jp
cmp
adc
jo
gs
ljmp
gs
cmp
pop
imul
dec
pop
imul
dec
dec
inc
js
inc
push
cmp
inc
jg
dec
push
ja
dec
jns
outsl
push
xor
dec
xor
inc
sbb
fs
inc
into
inc
dec
push
cld
fwait
inc
lock
imul
dec
jns
jns
inc
jne
pushl
cmp
dec
push
outsb
gs
dec
inc
push
xor
jb
inc
jbe
push
jge
mov
data16
imul
jo
je
dec
aaa
jg
std
fwait
or
push
inc
push
imul
jns
cli
push
je
insl
aaa
ss
mov
xchg
pop
xor
dec
inc
mov
or
movsb
xor
insl
jp
cmpsb
jo
add
inc
push
push
adcb
divl
jne
mov
andl
adc
in
add
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
and
cmp
push
repnz
or
jl
cmp
in
clc
push
adc
out
push
pusha
jo
xchg
out
sahf
out
mov
rcr
jns
ja
ljmp
out
sahf
out
dec
push
bound
out
sahf
js
mov
out
ror
loop
repz
repz
push
and
iret
repz
dec
pusha
je
mov
test
enter
lcall
sbb
jns
out
dec
pop
insb
sbbb
mov
lret
lahf
out
loopne
clc
add
mov
sahf
out
sahf
and
inc
push
push
jl
xchg
sahf
stos
out
sahf
out
ror
loop
sahf
ja
test
les
sbb
out
sahf
out
inc
push
pop
outsb
sahf
out
sahf
orb
out
lret
in
add
repz
rcll
xor
iret
repz
pop
fs
mov
lods
ror
fidivrs
out
repnz
adc
cmp
jns
out
push
pop
jb
sahf
out
sahf
mov
int
jns
lock
push
sbb
cmp
repz
push
push
je
pushf
cmpsb
mov
mov
in
clc
mov
iret
repz
push
sbb
cmp
cmp
repz
pop
push
iret
repz
test
rcr
cmpsl
stc
cmp
call
push
sahf
out
sahf
sub
dec
push
pop
jns
out
push
out
sahf
out
shl
cli
iret
repz
push
lret
cmp
iret
repz
jbe
xchg
sahf
repz
repz
lret
out
lcall
sub
out
sahf
cmp
jo
sahf
out
out
xchg
nop
push
stos
call
cli
add
push
xor
cmp
rep
js
xchg
iret
repz
sahf
test
int3
loopne
mov
int
push
and
iret
repz
xor
dec
push
pop
jbe
iret
repz
mov
sahf
out
cli
add
push
and
out
sahf
out
pop
push
jns
xchg
test
int3
out
cmp
sarl
and
cmp
cmp
repz
data16
mov
rcrb
cmp
cmpb
jns
sahf
mov
repz
out
call
iret
repz
cmp
data16
cmp
repz
mov
sahf
out
adc
sbb
out
sahf
out
push
sahf
test
out
sahf
mov
out
or
fsubp
jns
out
push
xor
outsb
sahf
out
sahf
js
xchg
cmpsb
ror
int
jns
testb
and
cmp
repz
pop
bound
repz
mov
sahf
cmpsl
stc
cmp
push
aad
sub
out
push
push
jge
out
lret
aad
jns
out
push
cmp
pusha
jb
out
sahf
out
test
aam
iret
repz
clc
add
sbb
inc
pop
cmp
repz
jle
stos
mov
lock
or
push
out
sahf
out
cmp
sahf
out
sahf
adcb
repz
add
adc
repz
repz
push
insb
jle
iret
repz
mov
cld
sahf
out
ds
fisubl
cmp
sahf
out
pusha
push
mov
mov
call
lahf
cld
push
fstpt
xor
jns
out
push
mov
popl
shlb
adc
inc
mov
call
insl
pop
mov
mov
shrl
incl
leave
dec
xor
js
mov
stos
inc
pop
mov
sub
enter
add
ljmp
adc
movsb
lret
push
push
mov
push
and
mov
dec
andl
push
stos
or
push
ror
ljmp
xor
xchg
pusha
mov
pushl
xchg
sbb
aam
jnp
les
aas
iret
popa
push
sbb
negl
dec
lcall
jl
cmp
pop
cmpsb
cmp
pop
sbb
jae
out
jae
mov
cmp
lcall
xor
js
mov
sub
xchg
jne
jb
xor
roll
jmp
outsl
jbe
xchg
rol
jo
sub
xor
in
inc
mov
sub
jp
mov
incl
call
xor
xor
and
repnz
test
in
cmp
inc
jns
incl
insb
xlat
mov
mov
jbe
jno
cmp
jns
mov
fs
sbb
push
jg
add
int3
push
ds
sbb
inc
out
sbb
incl
pop
jns
mov
cs
setae
nop
or
jnp
or
pop
dec
adc
or
mov
xchg
dec
pusha
push
jmp
lahf
xor
lret
mov
int3
add
cmp
outsb
loopne
stos
stos
out
push
dec
and
ljmp
push
cmpsl
or
inc
aas
enter
push
fidivrl
xor
inc
popf
popa
hlt
push
inc
sub
push
popa
into
cmc
ret
test
sarl
nop
aaa
mov
jmp
int
sbbl
xlat
dec
stos
mov
sub
out
mov
scas
sbb
mov
jmp
mov
testl
mov
dec
pop
jo
dec
push
inc
or
scas
shrl
lds
jmp
xor
ds
cmpsb
inc
cmpl
or
xchg
xchg
push
mov
add
mov
jmp
addr16
sub
gs
pushf
addb
inc
cmp
dec
pop
sbbl
movntq
out
push
sti
and
insb
stc
bound
ficomps
adc
clc
std
adc
jmp
pop
sub
fisttpl
testl
or
mov
lret
xor
push
pushl
add
mov
push
xchg
iret
and
mov
sbb
or
into
xchg
xchg
jp
clc
push
repnz
loop
dec
bound
bound
jmp
sbb
mov
mov
incl
xlat
hlt
pusha
mov
or
push
ljmp
aas
mov
pushl
inc
pop
ret
jae
mov
jge
jns
push
jno
jmp
fldenv
cmp
decl
outsl
scas
sbb
ret
gs
mov
outsl
dec
ret
or
stc
outsb
decl
xchg
push
das
push
inc
adc
mov
push
mov
bound
repz
das
stc
jmp
rcrb
mov
out
push
xor
push
sbb
cmp
push
stc
push
mov
add
cli
ret
mov
cli
popa
sub
pop
fistps
lcall
rorb
adc
mov
sbb
mov
push
cmp
mov
repz
repnz
xchg
and
cmpsl
xor
dec
inc
sbb
lock
fldenv
in
mov
arpl
dec
sarb
rcrb
adc
imul
fimuls
lods
pop
lret
push
jnp
dec
inc
jmp
into
push
js
dec
pusha
cmpb
scas
inc
hlt
addr16
push
mov
imul
mov
sbb
call
jecxz
dec
mov
jno
or
fwait
xor
dec
sahf
add
cltd
fcompl
aad
inc
xchg
add
pop
inc
mov
sbb
aad
add
daa
incl
cmp
call
xchg
pushf
aaa
bound
push
imul
mov
lret
test
jg
bound
incl
push
push
xor
aaa
lods
adcl
shll
lods
cld
or
cmp
decl
sub
and
out
aad
ficompl
enter
iret
leave
push
sti
decl
cli
mov
prefetchnta
mov
pop
mov
dec
jns
call
dec
jle
ja
and
clc
mov
xchg
in
test
in
ficomps
adc
pop
xor
lret
ja
aas
mov
mov
cltd
push
jne
jne
or
test
int
cmp
jmp
inc
es
and
cmp
jmp
addr16
xor
and
gs
orl
popf
pop
ja
or
ljmp
cmp
adc
cwtl
cmp
stos
mov
cmp
mov
mov
sub
mov
js
es
cmp
decl
in
push
or
dec
push
xchg
mov
sub
repnz
dec
inc
sbb
dec
push
clc
decl
lcall
dec
push
bound
lahf
gs
mov
imul
mov
ljmp
lea
in
outsl
cli
imul
push
push
stc
mov
ds
js
clc
decl
sti
gs
sbb
int
cmp
push
clc
sub
in
adc
je
lods
fwait
cwtl
sahf
in
xchg
cmpsl
adc
movsb
lahf
jo
in
rcrl
jnp
incl
cld
pop
cld
jo
mov
outsb
insl
sbb
mov
sbb
inc
fsubr
sub
cwtl
fiadds
jnp
jl
fnstenv
push
push
dec
mov
call
jp
or
insl
add
jmp
in
fisubl
mov
sbb
jecxz
movsb
stc
hlt
mov
xlat
popf
cmp
ljmp
clc
movsb
cmp
xlat
cmp
jno
sbb
push
mov
aad
pop
mov
push
aaa
sbb
dec
lods
add
and
or
inc
ja
imul
call
mov
shlb
mov
lret
cld
movsb
pusha
add
dec
pop
roll
mov
push
std
lods
ret
sub
shl
inc
mov
test
ds
incl
jmp
dec
in
cmp
leave
mov
dec
adc
test
loop
or
mov
add
sub
rol
enter
aam
xlat
mov
les
jge
ficomps
inc
pop
push
cld
jb
mov
inc
std
sahf
sub
incl
lea
pop
insb
loopne
orl
xor
pop
in
push
mov
mov
mov
ja
cld
xchg
and
cmc
and
es
das
dec
popf
mov
or
push
fmull
cmp
xor
mov
insl
lcall
sbb
jg
cmp
scas
mov
cmp
stc
rorb
ja
je
lods
sbb
clc
mov
sti
push
pusha
sbb
lods
jmp
inc
inc
vpunpcklwd
adc
sbb
mov
dec
data16
and
mov
call
jbe
push
adc
nop
imul
loope
mov
jb
xor
incl
das
hlt
popa
adc
xlat
ret
popl
mov
sub
adc
inc
pushf
sub
incl
push
les
push
push
add
in
ljmp
and
vmaxps
decl
or
in
fisttps
mov
sbb
mov
ficoml
and
incl
mov
data16
lods
mov
in
scas
pcmpgtd
adc
push
or
cmp
ljmp
jl
sbb
inc
test
add
fldl
lcall
cwtl
mov
decl
and
bound
mov
or
inc
je
cld
movsl
jg
add
and
sub
mov
and
pushf
add
popl
dec
dec
pop
xor
incl
lea
or
ret
jbe
jge
ret
push
decl
adc
inc
out
outsb
inc
aas
mov
inc
rcrl
rolb
fiadds
sarl
push
jnp
dec
incl
cld
call
testl
push
adc
cmp
cmpsb
jae
push
lret
call
lea
lret
aad
or
in
jmp
sbb
das
jbe
es
jg
jbe
ss
mov
lods
xor
inc
cwtl
popa
insb
lea
sub
mov
aad
das
incl
xor
mov
xchg
mov
stos
xor
mov
dec
lods
mov
into
stos
add
leave
jmp
push
sub
and
outsl
jg
and
mov
in
and
mov
push
ljmp
data16
mov
or
lret
mov
or
cmpsb
fimuls
pop
or
mov
or
jno
pop
sub
mov
call
adc
mov
add
add
and
call
inc
aas
dec
inc
adc
cli
test
add
add
imul
pop
movsb
outsl
sbb
dec
aaa
jnp
cpuid
and
cltd
jle
rorb
pop
gs
xorl
scas
xchg
jle
imul
std
pushl
in
cs
adc
imul
dec
dec
cld
lods
int
test
rcrb
ss
mov
jne
mov
cwtl
jae
jbe
xor
jmp
mov
cmpb
pushl
pop
popl
scas
push
pop
xor
lcall
push
mov
ljmp
rcrb
sahf
mov
dec
xor
add
mov
leave
dec
or
dec
mov
pushf
fs
int3
pop
pushf
dec
adc
lret
mov
add
inc
mov
call
outsb
roll
lret
and
test
xor
sbb
mov
sbb
daa
call
test
mul
mov
mov
mov
inc
cmp
stos
or
sub
mov
std
xchg
push
xor
xchg
push
stos
cmp
mov
es
test
pushf
call
mov
cmp
mov
jno
push
cmpl
mov
pop
call
jge
insl
and
sbb
add
sbb
jge
addr16
ljmp
movsl
sti
iret
ss
test
inc
outsb
mov
mov
std
test
xor
mov
popf
dec
xor
pop
into
aaa
inc
jle
loop
mov
es
outsb
mov
call
sub
outsb
or
pop
pop
push
lock
mov
js
xor
movsb
fwait
ljmp
std
shl
xor
lods
cmp
notw
cmp
cld
aas
jb
cltd
inc
sub
pushl
add
dec
mov
lret
fisubrs
inc
loopne
and
xor
call
and
insb
out
mov
test
ficompl
pop
cwtl
fisubrs
jp
fs
mov
pushl
lock
sbb
cli
pop
inc
adc
xor
int3
mov
test
push
or
pushl
dec
sti
push
sbb
xchg
loop
cmp
jmp
sbb
adcb
cwtl
push
mov
xor
push
mov
pop
aad
arpl
js
loop
incl
xchg
jmp
adc
rcrl
dec
push
pusha
inc
mov
subb
xor
sbb
jg
ja
mov
mov
or
pushl
xor
mov
jge
ja
push
shlb
mov
pop
push
gs
pushl
insl
ss
lret
sbbl
mov
dec
add
xchg
xor
or
add
mov
push
out
xchg
add
int
xchg
jns
inc
inc
push
and
mov
leave
orl
jmp
enter
insl
daa
and
int3
dec
shlb
push
enter
call
pop
jo
or
lcall
insl
push
ja
leave
push
ret
or
subl
dec
xchg
cli
mov
mov
push
push
std
fs
arpl
dec
out
inc
dec
mov
scas
add
jl
pop
cmpsb
mov
fiaddl
paddb
lahf
mov
stos
dec
pop
xor
incl
loop
jge
xchg
sahf
scas
inc
mov
xchg
push
xor
ss
lea
aas
lret
call
cmp
mov
test
inc
jbe
jbe
push
mov
cli
jbe
mov
ret
out
cli
mov
outsb
mov
or
xlat
xor
std
into
jne
aam
xor
jns
ud2
lock
pushl
iret
mov
jne
cmc
ds
xchg
repnz
sbb
cmp
outsl
pushl
sub
xor
push
dec
mov
mov
xchg
jns
xchg
dec
jne
cs
xor
jge
jg
inc
loop
mov
and
insl
inc
scas
lods
push
xchg
inc
jb
ljmp
decb
xlat
and
out
bound
out
fdivrs
ja
pop
mov
setp
or
sub
push
int
out
push
dec
fisttpl
add
push
mov
call
mov
into
pop
lods
dec
mov
scas
dec
mov
mov
add
incl
xchg
jo
mov
inc
scas
mov
sub
adc
lcall
pop
xor
pop
fcomp
adc
aam
repnz
das
incl
dec
pop
or
sbb
jg
cmpb
lahf
lret
das
scas
push
fisttpl
mov
mov
push
add
cmp
scas
pop
ss
mov
xor
sbb
movsl
fisubl
fsubrl
lea
repnz
add
dec
add
inc
cmp
shlb
mov
iret
jecxz
stos
mov
in
scas
or
inc
mov
ljmp
add
lods
testb
push
adc
and
dec
lahf
outsb
sub
inc
int3
or
fs
sub
imul
or
leave
or
xchg
pop
dec
lcall
decl
mov
adc
push
fwait
jae
popf
insl
sub
adc
mov
call
adc
scas
dec
lds
push
lods
jnp
mov
push
aad
or
mov
jle
dec
les
int
out
int3
mov
outsl
or
xchg
std
mov
push
mov
push
pop
lcall
xchg
jg
aaa
inc
adc
rcr
insb
cmp
dec
xor
sbb
jmp
shr
int
ret
ds
lcall
mov
fists
dec
dec
mov
cmp
cmp
xchg
sarl
ljmp
mov
pop
test
je
movsl
nop
xor
jecxz
mov
xor
das
mov
in
hlt
push
xchg
int
addr16
adc
div
jb
cmp
pushl
cmp
mov
cmp
popa
inc
mov
cli
add
and
rdpmc
mov
jmp
int3
ficoml
out
inc
out
lods
sub
fidivl
or
enter
jno
movsb
call
cld
sbb
dec
fxch
push
pop
xchg
int3
cltd
push
cmpsl
loop
mov
insb
outsb
sbb
decl
rorl
sub
dec
insb
pop
or
sbb
hlt
cld
lret
mov
dec
movzbl
fwait
rclb
aad
or
std
xchg
mov
decl
lods
stos
out
xor
sub
xor
ljmp
in
xchg
push
ljmp
mov
outsb
adc
sbb
xor
adc
sub
xlat
xchg
inc
add
mov
add
stos
ljmp
jecxz
mov
and
and
jno
or
stos
jb
xor
lret
sub
jmp
call
ret
je
lea
sahf
pop
test
pop
sbb
gs
je
out
adc
and
imul
mov
sbb
ret
xchg
inc
and
movsb
mov
ret
sahf
dec
push
pushl
outsw
ret
cmpsl
xchg
jb
addl
push
stos
ret
lds
add
call
and
push
cmp
clc
add
gs
cmp
leave
pop
icebp
sbb
outsl
fdivs
scas
and
test
lds
pushl
lcall
lret
or
icebp
repnz
dec
cmp
lret
inc
jno
adc
and
push
incl
leave
and
mov
testb
push
lds
xlat
int
push
cmpsb
lret
addr16
incl
add
pop
sahf
jl
cmp
enter
shll
and
mov
xchg
push
sbb
ds
std
iret
gs
adc
inc
sub
daa
mov
int3
dec
cmp
fxch
ss
xor
popa
add
jmp
jne
jne
scas
push
xor
cmc
es
push
cmc
imul
jae
rolb
and
mov
adc
jo
inc
data16
dec
mov
push
jb
xor
jns
sub
js
decl
sub
jne
in
mov
stos
mov
fadd
jnp
sbb
aaa
cld
lcall
or
movsl
adc
mov
enter
subb
jne
mov
decl
pop
inc
xchg
icebp
ds
daa
push
cmp
cs
pop
xchg
and
and
push
adc
and
cmp
xchg
sub
or
ljmp
ds
or
in
sbb
mov
nop
push
pop
lcall
incl
ror
jbe
jle
icebp
dec
jge
inc
outsb
enter
or
sbb
or
sbb
fisubrl
addr16
xchg
adc
movl
ljmp
popf
data16
adc
and
cmc
xchg
rcrl
test
pushl
mov
jnp
mov
inc
inc
scas
xchg
add
mov
sub
and
lcall
cmp
inc
and
mull
push
pop
mov
sbb
jb,pn
pop
mov
xchg
das
add
push
outsl
clc
fldcw
test
int
sub
mov
mov
mov
cmpsb
mov
push
decl
ret
adc
jnp
adc
cli
pop
mov
add
pop
or
idivb
push
loope
cmp
bound
bound
dec
sbb
in
gs
cld
out
test
bound
push
test
cmpsl
dec
sti
fcmovne
jnp
popf
lret
cmpsb
add
push
pop
arpl
sbb
fisttpl
lock
pmullw
or
push
push
sbb
gs
rol
ds
shl
call
int3
and
rorl
in
adc
dec
or
xchg
add
sbb
test
call
lcall
leave
pop
sbb
pusha
xchg
lods
xchg
inc
pop
cltd
fistpl
pop
add
lcall
ret
inc
pusha
loop
hlt
push
or
push
xor
sub
mov
and
shll
jp
push
jg
call
mov
xor
mov
flds
mov
js
incl
in
movsl
xor
sarb
int3
leave
scas
push
or
je
push
je
mov
jae
fcomi
icebp
jmp
sub
je
inc
add
std
cmp
xor
inc
in
mov
aad
js
lock
inc
insl
lcall
scas
hlt
cmpsl
aaa
gs
push
mov
dec
test
mov
lcall
lods
and
clc
and
stc
cmp
or
mov
shlb
and
shlb
in
push
ds
ja
pop
xor
scas
and
ljmp
mov
dec
imul
inc
jecxz
or
add
outsl
lea
adc
adc
cli
xchg
stc
fs
pop
lcall
pop
mov
inc
cwtl
mov
pop
push
add
cmp
rclb
mov
adc
adc
mov
aas
daa
sub
dec
aad
fwait
adc
bound
xchg
and
jae
icebp
inc
add
incl
or
pop
shll
in
stc
bound
cmp
dec
xchg
xor
xor
out
push
movsb
push
arpl
pop
je
sbbb
sti
lds
sub
or
imul
call
mov
mov
cwtl
xor
scas
adc
sbb
jge
subl
push
sub
cmp
lcall
stos
scas
pushf
push
mov
cmp
dec
adc
and
mov
add
cli
push
inc
cmpsl
outsl
mulb
jle
iret
sbb
xor
mov
in
and
xor
pop
ljmp
pushl
loope
shrb
gs
sbbl
imul
call
psrld
jecxz
adc
rsm
je
hlt
imul
inc
enter
inc
loope
mov
mov
or
pop
dec
insl
cmp
repnz
je
lods
adc
aaa
xchg
into
imul
jmp
sub
and
addr16
pop
inc
or
aam
movsb
and
or
mov
fcomip
push
push
in
inc
adc
push
sub
add
test
into
cmpsl
xchg
pop
ret
cmpsb
mov
sti
lcall
jmp
pop
hlt
push
sbb
loop
iret
xor
sbb
pushl
arpl
decb
mov
std
pop
mov
popl
sarl
dec
lods
mov
call
or
loop
push
sub
push
push
xchg
push
mov
ljmp
cmp
cmp
aaa
mov
mov
xchg
push
add
sbb
cmp
test
in
loopne
and
es
cmp
daa
and
lcall
adc
mov
cmp
insb
mov
pop
push
cmpsl
sbb
hlt
pop
push
pop
pop
out
xchg
jle
lods
fcomip
pushl
es
js
imul
enter
sub
mov
fs
outsb
loop
inc
sbb
sub
mov
call
or
jbe
and
lea
ljmp
adc
pop
jmp
shrb
mulb
or
pop
daa
jmp
ror
xchg
jmp
jb
dec
mov
fisubrl
jp
pop
stos
adc
scas
xor
fcomip
fnstenv
aaa
cmp
out
rcr
push
cmp
push
mov
jmp
and
stc
jmp
int3
dec
xchg
mov
push
enter
es
scas
mov
lcall
push
cmp
mov
das
jnp
aas
push
dec
inc
data16
fwait
mov
jmp
ljmp
jo
pop
data16
pop
and
pop
fsubl
movsb
mov
gs
fildll
gs
test
lods
insl
sub
shr
jmp
ja
mov
xor
jmp
sub
pop
loopne
dec
pop
and
outsb
pop
ljmp
or
mov
stc
sub
pop
or
stos
stos
and
out
outsl
xchg
repnz
inc
adc
incl
add
push
sbb
cwtl
fxch
mov
mov
out
les
out
jg
mov
jmp
stos
aam
into
xchg
popf
mov
sti
fdivrl
outsw
fdivrl
jno
sbb
xor
out
sbbl
rcr
add
xchg
fstl
xor
pop
push
jne
xchg
bound
and
ljmp
jne
mov
out
xorb
mov
insb
ss
inc
int3
sub
repz
int3
cs
jp
sarb
or
test
inc
push
or
mov
dec
iret
fidivrs
sub
in
or
test
rcl
fisubrs
mov
aad
lahf
jecxz
nop
aad
and
out
jecxz
aas
sbb
ljmp
pop
push
ja,pn
add
rol
scas
inc
push
mov
adc
jle
xchg
push
stc
gs
mov
fisttpl
pushf
push
xchg
cwtl
test
hlt
test
jo
mov
loope
stc
nop
leave
and
cmc
mov
xchg
or
jg
ds
call
jg
daa
flds
bswap
mov
xor
test
fiaddl
or
in
movsbl
jg
jmp
mov
inc
rcrl
cltd
push
cwtl
aaa
push
shrb
call
enter
int
xchg
or
inc
aam
inc
fwait
xchg
mov
jb
test
jo
lcall
sahf
fdivs
sbb
xlat
insb
es
das
mov
addr16
ljmp
cld
jge
jne
cld
les
ret
push
pop
mov
push
aas
push
pop
sub
mov
pushl
jl
xchg
in
jge
mov
aas
imul
movb
daa
leave
std
nop
test
add
ljmp
push
inc
iret
xchg
pop
xchg
sub
sub
pusha
or
fisubl
mov
sub
fsubr
lods
sub
cmp
mov
jp
insb
insl
pusha
jge
decl
mov
and
xorl
aad
add
pop
lods
mov
movsb
inc
data16
insl
sub
incl
jb
jmp
dec
jmp
int3
call
xor
or
pop
fisubs
ljmp
fsts
jae
enter
xor
out
xor
sbb
or
fsubs
jbe
or
lcall
clc
out
lock
jmp
mov
dec
jge
push
clc
lea
inc
sbb
mov
pop
das
fcomps
push
xor
test
adc
or
adcl
pop
aas
int
lcall
jl
mov
pushf
xorl
push
pop
mov
out
pop
decb
cmpb
cli
loop
jne
xchg
mov
in
mov
incl
xchg
push
cs
fsubrs
inc
cli
push
enter
adc
or
in
mov
imul
imul
test
leave
dec
rcrl
arpl
addr16
pop
jmp
out
jg
test
jg
pop
cmp
in
mov
xchg
mov
lock
xchg
dec
push
add
cmp
sub
ljmp
jno
decb
sbb
les
xchg
test
mov
fnstenv
jg
jo
leave
add
rol
mov
iret
iret
sbb
and
xchg
out
or
aas
icebp
in
pop
ss
cli
scas
cli
fs
mov
cli
xchg
orb
dec
je
sub
outsl
mov
inc
loop
hlt
add
jl
mov
jnp
cmp
jp
ljmp
jle
popa
push
mov
xchg
lods
ljmp
xchg
clc
cltd
cld
lcall
cld
cmp
aad
test
loope
stos
pushf
cmc
out
pop
shll
andl
test
add
sarb
jp
push
pop
lea
es
xchg
pushf
pop
or
incl
push
jne
mov
nop
repnz
adc
scas
lods
push
imul
lock
sbb
dec
mov
adc
fidivl
add
pushl
mov
incl
call
jbe
fiadds
cmp
inc
ret
mov
ljmp
xor
mov
cs
ja
mov
cmp
pushf
sbb
mull
mov
bound
cmp
in
jl
mov
sub
xchg
decb
dec
mov
sub
in
xchg
stc
lock
pop
pushl
adc
adcb
fsubrs
jecxz
mov
xchg
arpl
test
xor
cmp
incl
and
jae
rcl
push
pop
cmc
in
gs
sbb
sbb
sub
lcall
enter
icebp
jns
sahf
insb
cmp
mov
dec
mov
fidivl
mov
inc
mov
ror
jae
shl
sarl
subb
pushl
cmp
test
xchg
mov
js
lods
imul
or
or
incl
cmp
shll
inc
jb
push
and
adc
shlb
mov
fstps
mov
mov
pushl
out
push
lock
call
adc
sbb
cmp
sbb
mov
pop
mov
add
pushf
loop
sbb
es
mov
xor
inc
movsb
jne
ljmp
lret
sahf
test
imul
daa
roll
xor
cmp
and
nop
call
dec
decb
jb
push
jae
icebp
rcll
sub
addr16
inc
mov
jmp
xor
pusha
shlb
dec
dec
dec
mov
stc
or
imul
aaa
and
incl
popa
adc
jp
jb
xor
dec
dec
int3
adc
xor
das
pop
push
sbb
ljmp
ljmp
ds
dec
push
or
lods
dec
out
sub
mov
clc
mov
jnp
ljmp
sub
pop
outsl
xchg
mov
mov
adc
jg
lcall
add
inc
sub
mov
sbb
push
mov
negl
mov
call
xchg
cmp
gs
mov
push
xchg
lock
sbb
out
into
lods
movsl
sti
sub
xchg
or
jnp
sub
jg
nop
xchg
fimuls
jge
call
ss
pusha
sbb
pushl
mov
dec
sbb
mov
rolb
jecxz
in
sub
pop
mov
pushl
xchg
into
xlat
push
pop
and
lods
out
stc
xchg
mov
inc
std
push
jmp
pop
inc
mov
xchg
adc
sbb
repz
pusha
push
cli
test
mov
jg
pop
xor
scas
lock
mov
cwtl
and
cltd
mov
scas
xor
incl
cwtl
push
imul
mov
out
cli
pop
xchg
add
jbe
dec
mov
icebp
cli
jmp
pop
xor
into
notl
push
into
sbb
fiaddl
sbb
xor
out
fisubrs
imul
and
test
jno
mov
movsb
cld
sub
pextrw
or
mov
loopne
or
push
push
sti
incl
lock
fnstsw
sub
sbb
xchg
jg
rolb
inc
cld
mov
inc
sub
scas
test
cli
test
inc
fildl
jle
xor
ljmp
lret
xlat
test
divl
cmc
and
xor
adc
mov
mov
fdivrs
inc
ljmp
ror
mov
xchg
ret
mov
aad
stc
xchg
xchg
pushl
addb
ja
jno
add
jne,pn
pop
jp
mov
lcall
in
outsl
jmp
or
addr16
pushf
test
mov
repnz
and
call
xchg
adc
sbb
jle
fistps
fisubl
sti
fcmove
add
stos
or
inc
jno
jp
imul
pushl
sbb
inc
rcr
arpl
sub
jmp
loopne
mov
mov
xchg
sbb
decl
sub
mov
mov
or
outsb
and
sub
rcll
xor
mov
lock
loopne
test
xchg
dec
jns
pop
push
aam
cmp
fcomip
pop
inc
mov
lds
sbb
aaa
pop
loopne
or
push
inc
add
or
mov
and
das
sbb
in
ret
push
adc
cmpsl
or
out
jg
ljmp
stos
jge
jns
mov
je
insb
xchg
xchg
add
cmp
loop
iret
lret
push
jmp
fdivrl
and
mov
push
dec
daa
in
ljmp
mov
movsl
sub
bnd
xor
push
aam
jno
mov
imul
xchg
lcall
pop
and
xchg
pushf
orl
iret
movsb
mov
mov
mov
mov
je
and
in
out
cli
ljmp
xor
pop
in
sbb
cmp
les
cmpsl
sar
mov
call
testb
add
shlb
and
subl
or
clc
incl
fildl
ret
dec
mov
inc
or
cmc
mov
pop
sahf
mov
das
clc
push
adc
push
or
push
or
movsb
inc
xor
adc
push
in
or
mov
jns
xchg
fnsave
sub
adc
jo
jnp
push
fisubrl
repnz
inc
mov
dec
cmp
ds
or
pop
dec
and
mov
xlat
sbbl
pop
lcall
fiaddl
pop
mov
pushl
pop
dec
out
mov
jl
push
push
outsb
mov
cmp
fbstp
cwtl
dec
dec
lods
cld
and
xor
call
decl
stc
iret
inc
mov
dec
jnp
faddl
push
in
sbb
push
imul
aas
fiadds
and
dec
mov
stc
icebp
inc
sub
fs
xor
push
inc
jp
outsl
or
xor
aad
adc
mov
xchg
push
lea
push
leave
jno
jmp
pop
inc
mov
sub
mov
mov
dec
jmp
add
inc
lcall
mov
aaa
sahf
ret
sbb
add
cmp
decl
inc
push
push
dec
xor
pusha
adc
sub
mov
cmpsl
xor
xor
jns
decl
mov
xchg
sahf
aas
mov
jle
dec
pop
aam
enter
jge
sub
mov
pushl
cld
stc
outsb
aas
leave
data16
shll
mov
inc
enter
pop
test
inc
xchg
cs
mov
adc
jnp
icebp
jmp
mov
fistps
test
xor
in
xor
sbb
jg
cwtl
lds
incl
mov
incl
xor
cmp
push
dec
mov
and
adc
lock
call
gs
and
ss
or
sti
shrl
scas
add
pushl
daa
int3
xor
scas
call
sub
push
out
inc
add
mov
jmp
mov
jnp
xchg
push
stos
fdiv
mov
repnz
cmpsb
mov
mov
ljmp
popa
mov
ss
and
testl
mov
push
fstps
iret
jle
sub
lock
js
std
outsb
icebp
shll
test
call
loopne
fists
hlt
sub
pop
mov
adc
ljmp
mov
jmp
pop
add
fcompl
enter
decl
jae
xchg
fdivs
shlb
out
pop
in
mov
lret
push
aad
mov
call
inc
cmp
inc
hlt
lds
pop
xchg
cli
cmc
popf
sbb
pop
mov
es
in
movb
decl
lods
fisubs
push
fucomp
pop
push
mov
mov
fs
sub
mov
cmpsl
das
push
std
decl
leave
call
sub
cld
jns,pt
sti
lds
movsb
jbe
stc
mov
lcall
aam
mov
cmp
and
push
or
ljmp
ja
faddl
push
pushl
sub
lcall
push
pop
sahf
cmp
aas
adc
lcall
scas
insl
xchg
adc
cs
mov
ret
pop
popa
out
jl
mov
push
call
mov
or
sub
int
cmp
mov
jg
lcall
scas
and
outsl
std
icebp
sbb
mov
xchg
xchg
cltd
sbb
jmp
push
lcall
xorb
sub
dec
daa
mov
test
fistps
adc
lcall
pusha
cmp
xchg
jp
jno
stc
out
out
incl
lret
sub
xchg
outsl
xchg
repnz
xor
and
shll
cmp
jmp
ja
xor
lret
enter
and
leave
je
cld
jmp
jno
test
pop
cmpsl
or
lcall
popf
int
test
sub
mov
sarl
xchg
inc
decl
push
enter
iret
push
enter
or
adc
icebp
push
cmpl
pushl
movsl
mov
push
subl
and
mov
mov
cmc
out
jl
pushl
jp
xor
dec
xor
mov
cmp
xlat
jno
add
xor
sar
jg
rol
dec
rorb
icebp
jle
pushf
cmc
mov
fwait
pop
adc
cs
call
push
cwtl
inc
cmc
rcll
mov
int3
adc
mov
lds
je
add
call
fdivp
or
push
pop
dec
mull
cmpsb
sub
test
call
movsl
cmp
jo
leave
addr16
fcom
sbb
adc
adc
loop
mov
ficomps
push
jl
incl
cmpsb
push
jle
nop
jmp
cmp
inc
stos
imul
inc
jp
xor
jecxz
and
cld
mov
dec
xchg
jp
hlt
jg
hlt
and
xchg
ja
aam
lcall
jb
pushf
add
sub
adc
sub
or
or
mov
jbe
cmpsl
push
add
faddl
lret
stc
bound
or
or
jmp
stos
outsb
rclb
movsl
xchg
aad
pop
mov
cmp
sarb
inc
jb
push
in
xchg
lock
out
outsb
add
mov
or
xchg
fdivrl
fsubr
lea
sbb
inc
insl
sub
loop
pushf
lds
test
sub
in
xlat
scas
clc
incl
in
repz
jo
lret
outsb
mov
add
xor
add
ljmp
and
mov
je
dec
icebp
test
ss
dec
cwtl
out
sbb
mov
hlt
movsb
pop
adc
ljmp
cmc
adc
push
repnz
sbb
sbb
pop
xor
dec
sbb
lock
ret
mov
and
or
or
repz
xchg
ljmp
pusha
cmp
xchg
fsubr
fs
movb
pushaw
cld
mul
push
push
pop
sub
aas
jmp
cs
shlb
mov
jle
mov
sti
jge
and
or
mov
fdivp
ljmp
xchg
fdivp
repz
mov
dec
test
addr16
jnp
ljmp
cmp
mov
call
push
or
test
mov
shll
out
xchg
add
andb
jg
cld
ljmp
pop
scas
mov
incl
popa
in
or
hlt
mov
dec
or
lcall
dec
sbb
arpl
sarb
jbe
ljmp
push
gs
in
out
inc
into
aas
jb
psrad
mov
xlat
jmp
sub
and
decb
subl
mov
bound
ja
add
cld
loope
adc
ljmp
stos
fisttpll
pusha
das
das
inc
add
mov
into
lods
rcl
dec
cmp
les
jmp
leave
into
fdivrl
cld
dec
push
sub
pop
cli
in
loopne
adc
andb
sbb
bound
data16
push
mov
cmpsl
lret
lock
jp
pop
adc
pushl
lods
push
and
jmp
xor
dec
jmp
sbb
mov
sub
out
inc
mov
call
es
mov
jmp
inc
xor
push
neg
dec
ret
das
add
jbe
pushl
cli
lea
jae
fistl
mov
dec
push
add
fidivrs
add
inc
xchg
jecxz
add
ljmp
into
jmp
test
dec
inc
outsb
aad
sub
and
push
daa
cli
cmp
jg
call
aas
bound
mov
outsb
insl
cmp
jns
and
pop
imul
push
pop
pop
cltd
mov
call
jbe
xchg
test
notb
imulb
lock
imul
out
xlat
cmp
cli
sarb
inc
and
in
inc
jno
mov
pop
mov
fcomps
outsl
dec
fsubrp
fstpt
mov
xchg
mov
aas
call
sub
push
mov
test
gs
mov
lret
imul
int
bound
mov
das
pop
jmp
dec
movsl
test
stos
data16
adc
mov
das
sub
lret
lcall
ficompl
mov
push
jae
cwtl
pop
movsl
adc
inc
cld
mov
aad
inc
sbb
call
mov
xchg
mov
and
and
data16
cmp
push
sub
decl
lds
aaa
mov
xchg
jo
repnz
data16
sub
cmp
sahf
stc
iret
pop
jo
cmpsl
ljmp
sbb
cmpsb
xor
cwtl
aad
mov
out
xor
dec
repnz
pop
pop
mov
jmp
mov
in
jg
push
bound
xchg
popa
loopne
sub
push
adc
fisttps
stc
icebp
std
xchg
pusha
inc
mov
jl
jns
lods
int
push
popa
daa
add
lcall
lcall
ret
les
inc
xor
call
inc
pop
out
adc
call
jmp
xchg
lret
pop
lret
jns
ret
dec
xchg
xchg
jnp
int3
enter
and
pushl
std
push
cmp
loope
repz
jno
mov
and
xor
bound
fistps
decl
ljmp
mov
repz
lret
addr16
inc
jecxz
dec
jo
rorb
js
mov
cmp
adc
mov
sub
fucomip
mov
cmpsb
add
lcall
sub
mov
mov
cmpsl
xchg
dec
sub
inc
aad
pop
jmp
lods
in
or
sub
jmp
xchg
movsb
mov
loope
pop
popf
dec
xchg
and
sarb
das
clc
adc
or
or
add
mov
repz
add
fsub
jne
mov
mov
pop
or
adc
fldenv
sub
push
repnz
jle
xchg
xor
jmp
shrb
iret
sub
daa
sahf
loope
mov
les
sbb
mov
push
adc
mov
call
mov
pop
sub
adc
mov
cli
les
pop
jns
adc
decl
jl
fcomip
cmp
fcom
fs
ds
loope
or
lods
dec
les
leave
cmp
incl
pop
jb
jl
popl
add
js
pop
outsb
adc
repnz
inc
mov
call
sti
in
add
shlb
aaa
nop
xor
dec
mov
ror
outsb
push
xlat
ficoml
mov
call
mov
int
adc
push
in
adc
ret
loop
std
push
mov
adc
mov
inc
mov
sar
lock
mov
and
push
or
decl
sbb
subl
jmp
inc
adc
and
sub
jmp
dec
pop
push
lcall
mov
pushf
outsb
sub
sbb
sarb
pop
sbb
in
push
dec
sub
stc
mov
push
add
sarb
data16
sub
dec
lcall
cltd
push
fwait
movsb
mov
lcall
out
pop
and
or
mov
lods
stos
push
inc
sub
pushl
dec
mov
push
push
sbb
xchg
jecxz
nop
notb
jecxz
lcall
aas
and
ss
outsb
enter
or
ja
push
inc
jge
adc
fcomip
incl
jecxz
fnstcw
jp
cmp
dec
cs
outsb
outsl
fistpll
xchg
lret
ret
pop
fists
mov
pop
mov
pop
sub
movsl
not
repz
les
sbb
xchg
aam
scas
dec
inc
testl
xor
decl
inc
shll
xchg
mov
sub
or
rcr
cmc
pop
xchg
lret
add
push
xchg
loopne
push
mov
enter
sti
sub
insb
dec
sub
aas
cmc
sub
outsl
clc
decl
rolb
insb
adc
adcl
adc
into
mov
dec
gs
fcomip
fcoml
sahf
sub
pushf
jae
mov
fisubs
mov
stos
mov
sbb
add
or
outsb
mov
call
into
and
cmpsb
sub
cmp
js
and
mov
xchg
xor
cli
mov
movsl
add
ljmp
stos
out
mov
xchg
std
jge
xor
mov
dec
mov
or
imul
into
out
add
jbe
sub
pop
popf
add
dec
fidivl
gs
je
inc
and
sbb
mov
shlb
jne
jecxz
xor
dec
in
jle
outsb
push
sbb
fcomip
ljmp
outsl
ret
in
popa
sub
mov
test
inc
lock
mov
dec
daa
inc
inc
xchg
je
leave
mov
icebp
add
out
cmp
adc
das
mov
xchg
cli
fcom
adc
in
add
jg
stos
inc
js
jno
mov
fmull
cmp
xchg
inc
loope
nop
bound
hlt
sbb
push
mov
xchg
sub
ja
movsb
imul
jmp
jg
xor
jmp
test
dec
les
mov
out
add
outsb
decl
xor
rorb
mov
lcall
xor
or
icebp
mov
and
in
call
aaa
add
jmp
push
inc
push
outsb
mov
jno
pop
mov
nop
out
jg
and
out
les
add
xor
xchg
xor
add
mov
add
call
and
xor
scas
add
scas
shlb
cli
jmp
cmpsl
rorl
rcrl
pop
inc
xor
pop
fcmovbe
xor
dec
mov
adc
push
hlt
xchg
jae
imul
pop
lret
incl
int3
fadd
mov
xor
mov
inc
pop
jg
scas
andb
decl
xlat
dec
push
cmp
xlat
int
rcrb
and
fsubrs
fdivrp
mov
lcall
popa
dec
jns
xchg
add
cmpsb
push
jmp
xchg
mov
inc
xor
dec
in
movsb
inc
imul
fdivl
xor
jbe
sti
lds
js
hlt
lea
or
popf
mov
jle
cltd
stos
mov
sti
sub
nop
push
cli
or
hlt
adc
cmp
adc
dec
gs
mov
shr
ds
jno
pop
pop
leave
jmp
mov
je
es
push
nop
mov
push
xor
pop
mov
mov
adcl
pop
jp
pusha
adc
push
inc
in
jg
call
mov
test
mov
jno
dec
icebp
push
pop
and
pop
fidivrs
jo
mov
mov
addr16
movsl
call
push
enter
mov
adc
les
std
jmp
popf
ret
push
icebp
test
leave
js
pop
mov
nop
loop
xor
mull
mov
jmp
outsl
fwait
mov
xchg
call
dec
adc
mov
in
sbb
xchg
lcall
out
repz
jle
cld
mov
pop
lret
daa
pop
ret
push
jo
das
pop
pop
call
xchg
jle
mov
cmpsl
insl
mov
add
mov
pop
scas
enter
and
lahf
mov
xchg
outsb
and
jae
call
jmp
cmpsb
xor
ror
leave
add
pushl
dec
and
sbb
push
stos
sub
repnz
je
imul
adc
movsb
fadds
cmp
mov
clc
aaa
adc
add
mov
inc
out
rcr
push
rclb
call
shr
pop
inc
pop
inc
jno
sub
mov
fstps
shr
arpl
hlt
pushl
and
pop
sub
add
push
lahf
lret
clc
mull
push
loopne
js
pop
aam
cmp
push
mov
add
adc
xor
dec
jne
das
jo
out
mov
call
imul
aaa
add
ljmp
push
pop
shlb
dec
mov
mov
in
and
mov
ljmp
cltd
xor
push
imulb
mov
add
mov
inc
mov
sub
pop
lret
pushl
cs
inc
pop
orb
pushf
cmp
test
or
sub
push
jecxz
cmp
xchg
sarl
jg
arpl
push
call
in
push
xchg
andb
jb,pn
incl
cld
jmp
pop
sbb
pop
inc
iret
xchg
gs
and
sti
mov
dec
inc
dec
jno
lret
int3
mov
imul
xor
cmp
je
add
mov
dec
mov
xor
adc
ret
push
add
popf
daa
stos
cwtl
into
andb
dec
popf
pushl
lods
repnz
insb
cmc
pop
and
mov
mov
sbb
adc
ja
mov
push
lods
push
ljmp
insb
mov
aad
and
test
inc
mov
scas
mov
neg
push
incl
inc
and
cli
mov
je
std
ja
movl
ljmp
popf
mov
aam
mov
test
adc
pushl
mov
test
jae
fcoml
gs
es
into
ret
ljmp
test
test
mov
or
mov
ffree
outsb
add
ds
test
jns
add
sbb
push
jo
ret
cs
jle
lret
mov
scas
adc
in
imul
addr16
popa
imulb
jge
mov
mov
xor
lahf
mov
fistpl
xor
pop
test
and
push
mov
mov
dec
cmp
in
cmpl
xor
das
ja
adc
cmpb
sbb
mov
sub
add
mov
xchg
cmpsb
mov
dec
mul
decl
add
jne
dec
movl
push
push
sub
cmp
push
std
mov
stos
adc
push
jge
mov
sbb
dec
xchg
arpl
call
fs
sbb
mov
push
push
mov
push
repz
lds
pop
inc
aaa
decl
and
nop
inc
pop
inc
dec
rclb
and
daa
xor
pop
int
add
sub
mov
or
insl
ds
ljmp
inc
mov
cmp
lret
fwait
out
test
mov
fwait
push
andl
xor
push
fisttpl
jmp
jbe
mov
rorb
aas
lret
loop
pop
sub
adc
cs
sub
iret
incl
jmp
inc
ficomps
add
xor
stos
ss
enter
sbb
sub
sbb
jecxz
jmp
xchg
lds
lcall
jg
loop
inc
lods
inc
lsl
scas
frstor
call
std
cmpsl
lds
adc
cmpsb
and
inc
jbe
push
test
sbb
dec
dec
push
shlb
mov
fpatan
call
lcall
adcb
loop
lret
jmp
test
mov
out
call
or
sti
stc
aas
and
andb
mov
lcall
cltd
sbb
add
ljmp
daa
fwait
dec
pop
mov
push
lahf
or
dec
movsb
int3
push
cwtl
decl
aaa
arpl
ret
dec
adc
push
fistps
dec
pop
mov
dec
fstpl
push
push
inc
mov
dec
push
idivl
dec
mov
sti
dec
and
pushf
sbb
pop
cmp
sbb
ss
lcall
push
scas
insb
push
inc
xor
mov
test
fucomi
in
pop
aas
xchg
scas
xchg
loop
sar
jmp
aad
cmp
jne
cli
ds
aaa
insl
adc
js
ljmp
xlat
xchg
pop
mov
aas
in
imull
mov
pop
shl
pop
sbb
cmc
mov
add
out
bound
xor
in
negb
xor
mov
shll
out
xor
int
dec
shlb
aaa
lea
push
cmp
ret
fucomi
loopne
sbb
leave
jb
ss
mov
out
adc
gs
jmp
sti
xor
xchg
cmp
fidivs
sub
popa
inc
jnp
cmp
call
iret
jmp
mov
fsubrs
ljmp
inc
lret
std
adc
into
gs
outsb
adc
add
push
pushf
push
and
mov
ljmp
shl
les
xor
dec
jecxz
cmp
and
decb
cwtl
mov
ret
pop
pop
test
lcall
cwtl
push
popa
bound
incl
or
mov
add
ret
mov
dec
fnstsw
call
add
addb
push
inc
test
jae
dec
dec
add
in
add
ret
loop
incl
cld
mov
jo
insl
and
xorl
shll
scas
jmp
ljmp
fimuls
mov
push
inc
dec
mov
sbb
aas
mov
loope
push
lods
add
mov
into
lea
bound
cmpsb
sub
mov
jl
xchg
pop
cmp
test
dec
add
xchg
jbe
lock
lods
or
mov
incl
sbb
lock
dec
orl
cmp
mov
pop
and
pop
fiadds
ljmp
das
adc
jmp
adcb
lds
xlat
in
icebp
into
jecxz
xchg
pcmpeqw
decl
in
dec
test
or
ja
mov
or
fucomip
jns
shll
cmp
out
and
xlat
jge
cs
sbb
ds
mov
out
inc
mov
mul
jb
pushl
popf
in
inc
cmc
xchg
pusha
cmp
xchg
lcall
stc
mov
pop
leave
jns
call
lods
je
outsb
or
ret
push
jbe
jmp
es
imul
popa
cmp
aaa
nop
mov
pushl
xor
jle
mov
xor
or
aam
js
imul
ljmp
rclb
or
or
ss
jp
mov
out
jne
fiadds
xchg
cmp
inc
repz
sub
push
xchg
cmpsb
jno
xchg
fildll
insb
das
sar
jmp
sub
adc
xor
sbb
and
inc
gs
ficoml
mov
push
sbb
lcall
mov
mov
or
cld
stos
xor
leave
clc
or
out
nop
and
dec
mov
inc
lods
dec
fcompl
mov
lret
xchg
jb
or
sbb
sti
notb
dec
push
test
stos
inc
or
in
sub
fcmove
sub
test
mov
jl
jmp
daa
ret
dec
push
lahf
mov
js
pop
int3
aas
jle
add
and
mov
incl
dec
adc
addr16
and
lds
data16
jb
inc
cmc
jb
imul
incl
lahf
and
aam
sbb
mov
or
xchg
pushl
incl
pusha
jmp
sub
and
add
dec
sub
jmp
inc
aam
mov
jmp
ret
iret
jmp
mov
jmp
rcrl
sbb
or
xchg
fbstp
jecxz
and
jmp
xchg
popf
sbb
add
fninit
xchg
fdivr
das
sub
cli
hlt
repz
ds
cli
es
sbb
jmp
push
lahf
or
loope
dec
out
decl
sub
scas
cli
int
push
hlt
dec
push
aad
dec
movsb
sahf
cld
int3
or
loopne
cld
mov
lahf
int
outsb
push
xchg
mov
or
pushl
insb
xchg
or
sti
pop
xor
cltd
idivb
ljmp
add
push
cmp
and
push
jmp
pushl
and
aas
sahf
scas
sbb
unpcklps
into
ja
mov
add
cmc
pop
xor
std
jmp
jne
mov
sti
je
pop
fdiv
movsb
push
in
sub
insl
ja
inc
cli
cmc
jle
add
add
push
dec
jo
and
jae
add
hlt
ficoml
mov
mov
cli
shrb
loope
ret
sub
shlb
sar
incl
jo
in
js
arpl
mov
loop
fs
in
push
shll
decb
xor
or
les
fldcw
imul
into
jmp
shlb
iret
mov
cmp
repz
in
jmp
jns
add
jns
gs
ds
es
and
inc
inc
call
int3
pushl
ja
mov
inc
lret
dec
lods
les
rcll
add
and
lcall
xor
es
stos
jne
addr16
ljmp
mov
addr16
ud0
decl
and
dec
dec
arpl
cmp
xchg
or
mov
cli
dec
movsl
cmp
test
xchg
mov
loope
inc
and
push
cmpsb
ss
cmc
sub
sahf
orl
stc
loope
mov
mov
xlat
call
adc
inc
js
in
hlt
mov
mov
aaa
cld
lcall
sub
mov
cli
xchg
shll
insb
ja
push
jecxz
in
popa
pushf
test
sub
xchg
jne
shrl
inc
jnp
hlt
sbb
ss
pop
pusha
jbe
push
dec
mov
stos
xor
imul
inc
loopne
std
decl
xor
push
mov
cmp
mov
div
repnz
jne
mov
icebp
call
aam
xchg
sahf
cmp
rcll
push
sub
mov
push
pop
dec
jae
inc
mov
mov
pusha
inc
jmp
push
push
into
push
pop
push
movsb
pushf
mov
adc
dec
mov
call
mov
rorb
out
push
cmc
xchg
mov
and
push
xchg
push
sub
push
das
mov
popa
lock
or
xchg
lds
jo
stos
mov
aad
call
cld
sbb
aam
inc
cs
fnstenv
icebp
and
adc
dec
cmp
fcoml
jl
xor
mov
fcmove
test
aas
popf
jecxz
and
mov
loopne
or
sti
jg
fstp
cmc
fisttps
incl
lcall
in
add
inc
lods
push
fstps
sub
fsubrp
push
fsubl
clc
lcall
jl
sub
mov
push
mov
test
or
cmpsb
fsubrs
dec
push
enter
scas
aaa
adc
jecxz
and
cli
testl
inc
fdivrs
fucomip
cmp
stos
cmp
lahf
adcl
and
cltd
fnsave
xchg
scas
call
mov
lcall
and
mov
or
scas
push
or
sbb
inc
inc
jle
mov
inc
mov
cli
adc
or
enter
push
pop
flds
negb
sar
incl
cmp
ffreep
cmp
dec
es
outsl
xchg
and
sbb
ljmp
in
jecxz
test
test
cmpsb
cmpsb
int
dec
iret
movsb
addr16
decl
mov
roll
aad
in
cld
rol
out
jle
and
push
or
outsl
clc
out
xor
cmp
dec
dec
push
xor
or
dec
jecxz
fucomip
mov
imul
loopne
decl
xchg
push
imul
into
or
mov
call
cmp
arpl
or
stos
repz
mov
add
mov
or
push
inc
outsb
inc
mov
push
sbb
sahf
push
xor
and
sti
or
or
jp
bound
dec
fcoms
aaa
sub
pusha
repz
mov
cmc
add
mov
aaa
mov
fdivl
add
popf
je
popa
jns
jo
mov
lcall
lock
push
das
sbb
xchg
gs
cltd
repnz
mov
lcall
adc
mov
sub
xchg
mov
mov
pop
adc
pop
mov
pusha
xchg
ljmp
ja
loope
xorl
xchg
jbe
fsub
mov
pop
into
hlt
out
pushf
stos
imull
jae
ds
lock
and
push
cmp
fdivr
sahf
lock
js
add
subb
lea
movsl
rcll
jb
xchg
test
push
jl
and
adc
push
cmp
call
jmp
decl
and
incl
mov
aad
xor
sbb
cli
pop
sub
rcrl
ds
pop
push
jne
ds
stos
jmp
std
sahf
mov
fcmovne
xlat
cmp
mov
frstor
cmp
inc
daa
sub
or
fmul
lret
xchg
insb
or
jb
mov
lea
stos
shlb
call
sarb
stos
push
dec
jecxz
fistpl
test
cmpsb
cmp
repz
dec
aam
out
decl
dec
sub
mov
dec
sbb
adc
mov
aas
test
inc
fmull
jmp
mov
loope
dec
loop
andb
int
add
and
imul
push
mov
inc
out
je
arpl
in
lock
and
popa
iret
popl
out
and
or
mov
sub
mov
xor
fmuls
xor
call
mov
je
sbb
lret
int3
fldt
popf
bound
mov
aas
inc
inc
sahf
popa
or
hlt
xchg
or
shl
cmp
jge
shrl
roll
out
jg
std
mov
call
jae
mov
xor
mov
lcall
xchg
push
ret
std
rcrb
sbb
decl
sbb
mov
scas
imul
adc
cmc
icebp
dec
ljmp
es
cmpsl
cli
incl
cld
fsubrs
or
push
xchg
inc
cli
pop
mov
cs
lds
inc
inc
inc
insb
lods
adc
cmpsl
testl
jge
jg
lcall
daa
movsb
pushf
push
jbe
jo
dec
sbb
pop
mov
mov
incl
inc
cmp
mov
adc
push
dec
sub
push
jg
ljmp
movsl
mov
icebp
arpl
mov
add
pushl
es
push
jl
sub
popa
das
mov
mov
dec
ja
add
psubb
call
mov
pop
push
dec
mov
loope
loop
dec
cmc
adc
call
and
fst
add
xor
call
insb
jns
adcb
test
xor
dec
sub
mov
ljmp
roll
dec
xorl
idivl
pop
sti
inc
xlat
cld
jmp
and
pop
mov
test
insb
mov
roll
sbb
scas
ljmp
incb
mov
xor
dec
mov
mov
fmuls
loope
pop
nop
xchg
cmp
jge
or
jg
sub
jl
sti
pop
push
add
arpl
les
decl
jmp
sbb
lea
lods
out
push
inc
inc
pop
pusha
sub
inc
mov
jns
sbbl
jg
sbb
stos
dec
ss
leave
insl
repz
jmp
int3
inc
rolb
add
addr16
mov
inc
cltd
cmpsb
ret
inc
arpl
sti
fstpl
fs
cwtl
addb
out
cmpsb
shrl
inc
pop
mov
mov
or
in
call
dec
inc
dec
daa
push
inc
jle
subl
addr16
push
pusha
add
incl
jne
and
jmp
push
xchg
and
cmpl
mov
daa
in
mov
sbb
dec
inc
shlb
imul
fisttps
enter
dec
sub
decl
int3
and
test
or
mov
dec
out
pop
xchg
movsl
lret
loope
push
xchg
in
das
inc
call
xorb
or
jl
into
nop
ret
or
test
pop
test
decl
lds
jnp
inc
cld
sbb
lret
pushf
bound
push
pop
mul
cmp
jle
jecxz
pop
mov
sub
pop
mov
inc
lret
jecxz
jl
pop
pop
roll
mov
xchg
repnz
sub
sbb
xlat
imul
stc
mov
and
push
jg
pushl
mov
pop
out
push
xor
add
adc
icebp
test
lcall
idivb
imul
div
lods
hlt
cmp
int3
jp
pushf
nop
pop
dec
scas
into
add
jmp
add
sub
inc
mov
ds
add
pop
push
xchg
xor
scas
decl
shrl
jge
push
imul
add
sbb
aad
mov
jmp
scas
xchg
mov
mov
ds
adc
push
aad
add
ds
sbb
jae
mov
jno
sbb
out
rol
inc
decl
add
in
xchg
pop
push
fcoms
sub
inc
mov
push
or
xchg
inc
or
push
sar
loop
stos
push
add
mov
sbbb
aas
jmp
lods
mov
leave
add
pushf
push
arpl
cmp
adc
sbb
std
pop
jb
pop
jo
xchg
xorl
pop
bound
inc
outsb
ja
sub
jecxz
or
sti
insl
lea
test
jg
add
sub
bound
inc
shl
insl
or
jo
fbld
in
sbb
daa
mov
outsb
sub
mov
sbb
addr16
jae
fcoml
ljmp
fdivl
add
mov
cmpsl
les
popa
xor
jle
bound
lods
outsb
push
lds
mov
out
xchg
xchg
dec
or
dec
jmp
and
stos
fadds
dec
movsb
push
repnz
shr
xor
adc
sti
sub
adc
add
mov
adc
add
les
add
cwtl
std
aad
insb
lcall
cs
cmpsl
sub
pop
mov
decl
xchg
inc
stc
adc
out
xchg
jmp
fisubs
jne
cmp
and
decl
push
and
jne
add
cmpsb
push
push
test
jl
ljmp
sbb
dec
aaa
pusha
jns
aad
ja
subl
push
cld
ljmp
pusha
push
mov
call
aaa
adc
mov
pop
jg
lret
fisubrl
pop
dec
insb
inc
cltd
cmpsl
pop
out
inc
sti
inc
pop
xorl
pop
sub
push
cmpsb
outsl
mov
flds
sahf
xor
jae
stos
outsl
or
pop
daa
sbb
dec
xchg
cmp
loop,pn
cmp
cmpl
pop
inc
rcrb
pop
add
lcall
add
push
xchg
push
pop
lds
shrl
add
mov
xchg
mov
adc
push
mov
mov
cltd
rcll
push
adcl
aad
add
adc
ljmp
or
cmc
movsl
adc
addl
loope
lcall
aam
mov
push
movsl
ret
pop
adc
mov
sarl
pop
add
xor
rclb
call
push
adc
push
incl
cmp
jbe
cmp
mov
mov
mov
pop
sbb
mov
call
cmp
pop
jp
inc
in
call
outsb
sub
jb
hlt
push
je
lahf
shlb
pusha
ljmp
lret
movsb
js
jae
bnd
pop
stos
stc
push
rcll
cli
mov
pop
cmp
cld
mov
mov
scas
jl
mov
sar
call
mov
push
inc
inc
sahf
lcall
mov
aaa
or
jo
mov
ficoml
push
mov
loop
je
repz
decl
mov
xchg
mov
enter
call
mov
adc
dec
or
jo
mov
pushl
pop
iret
add
adc
addr16
or
jb
adc
leave
add
dec
and
ret
ljmp
decl
enter
xor
xchg
mov
in
push
loopne
push
in
add
add
jmp
xor
mov
lods
pusha
mov
sub
add
push
xchg
xor
lret
ret
cmp
mov
data16
cmp
popf
in
xor
gs
test
xchg
jge
ljmp
repz
gs
out
les
xorl
insl
cmpl
add
lcall
or
xchg
xor
pop
das
sbb
cltd
and
pop
and
test
in
dec
mov
add
std
loop
mov
scas
fsubs
sub
scas
fs
pushl
aam
sarb
je
xor
imul
pop
xchg
std
mov
arpl
and
lock
push
mov
and
jo
or
fcomip
add
add
mov
rcrb
dec
stos
pop
orl
dec
dec
inc
dec
xor
lret
push
mov
sbb
arpl
push
fwait
dec
xchg
jl
pushl
insb
pop
xchg
mov
pop
inc
adc
mov
sbb
mov
js
aaa
mov
cmp
js
data16
xchg
cmp
movsl
fdivrp
pushl
or
cmp
fdivs
stos
je
jb
mov
sbb
xlat
xor
ljmp
jge
out
xor
rorl
push
mov
rclb
icebp
decl
fwait
add
xor
mov
sbb
stos
mov
jne
stc
lock
inc
decl
mov
fistpll
mov
incl
push
pop
loop
add
xor
test
insb
aad
sbb
call
es
ljmp
aad
mov
xlat
sub
mov
mov
push
push
scas
inc
sahf
addr16
jno
decl
xchg
pusha
xchg
jmp
inc
lahf
push
xor
imul
in
fcomip
lcall
sti
aaa
insl
cwtl
subb
cmp
sbb
ss
mov
pushl
cld
cmp
mov
mov
mov
scas
mov
ret
pop
mov
mov
push
pop
push
inc
jl
jb
sub
andb
push
and
insl
movsb
cmpl
mulb
jne
fisubs
lcall
jmp
out
mov
pop
dec
das
sbb
shl
icebp
fisubrl
mov
in
cwtl
lods
icebp
ljmp
addl
fs
lock
xchg
push
stos
mov
inc
xchg
sub
and
inc
lret
and
dec
pop
add
jo
imul
in
sub
sarl
pop
outsl
ljmp
stos
jnp
leave
xor
lcall
lds
out
out
call
add
adc
cmp
mov
enter
adc
mov
adc
aaa
std
jg
fisubl
lret
push
fs
push
sub
shl
add
pop
push
lcall
jmp
cmp
jb
cmp
and
inc
iret
cwtl
and
call
je
movb
jbe
movsl
sbb
jle
out
cmp
sub
inc
decl
and
jg
pop
inc
jl
filds
shlb
mov
or
jae
xlat
add
ljmp
mov
cmpsl
rolb
dec
into
push
jno
xchg
imul
scas
scas
adc
jg
pushl
movsl
repnz
add
cld
pop
sub
and
mov
movl
mov
or
mov
jb
lods
pop
mov
pop
jae
push
sti
push
mov
sbb
mov
jecxz
out
pop
xchg
mov
pop
hlt
jno
add
in
mov
call
loopne
xor
std
xchg
inc
lret
mov
push
data16
xchg
mov
mov
xor
pop
int
in
dec
jl
ss
add
dec
add
dec
adc
out
call
repz
push
adc
xlat
xchg
inc
cmpsb
mov
push
cmp
jno
bound
lret
ja
lcall
inc
adc
xlat
xchg
mov
loop
mov
mov
or
push
cmpb
inc
addr16
push
adc
inc
xchg
scas
ja
xchg
data16
decl
mov
mov
insb
mov
xor
insb
fdivr
mov
jns
pop
sahf
mov
divb
cmp
xor
jae
cmpsb
cmp
jg
ja
jno
push
outsl
push
cmp
and
cli
xor
loop
xor
decl
xchg
repnz
adc
rcrl
in
push
mov
daa
aaa
js
lea
filds
js
int
mov
mov
inc
jmp
mov
cmp
insb
and
mov
jae
cmpsl
loop
fistpl
jae
xor
jg
lcall
cmp
or
xor
mov
and
int3
mov
lcall
out
int
adcb
sbb
sbb
xchg
mov
sub
loope
aaa
push
jl
jns
pushl
mov
push
dec
sub
dec
mov
and
inc
lods
orl
sub
decl
pop
or
popf
xlat
inc
mov
sahf
adcl
mov
pop
insl
mov
subb
pop
loope
gs
and
xor
inc
out
add
inc
xchg
sub
notl
mov
add
or
clc
test
jo
aad
mov
mov
outsl
daa
add
jo
nop
ss
lock
cli
sub
sub
lock
push
or
out
xor
fistpl
xchg
pop
cli
inc
jg
test
jb
cld
push
fcoml
cmp
lret
add
lcall
jo
add
or
int
push
aam
xchg
cmpsl
stc
imul
jmp
mov
sub
aaa
mov
sub
inc
adc
mov
jg
imul
mov
mov
lock
sub
outsb
insl
fstpl
shl
inc
and
aad
sub
incl
inc
lods
mov
sub
dec
rorb
pop
mov
fdivl
lahf
jl
adc
jns
inc
test
sbb
and
ja
ss
aam
pushf
or
cmp
dec
xor
call
rcrl
in
inc
aam
pusha
fsts
ficompl
dec
aad
jg
lcall
inc
aad
lret
xor
ficoml
lea
push
jecxz
and
lcall
in
adc
and
push
xchg
push
outsb
push
ret
adc
rorl
hlt
cwtl
adc
mov
pop
xorb
cwtl
add
lahf
fmuls
adc
and
dec
xchg
mov
mov
stc
sub
inc
std
xor
divl
bound
cmc
sbb
lcall
fwait
outsl
popa
cmp
cmp
jns
xchg
cmp
and
aaa
lcall
repz
ja
lock
adc
lcall
cmpsb
sub
imul
adc
lcall
or
scas
add
outsl
sarb
lods
leave
sub
sub
xchg
mov
inc
pop
sub
jmp
fwait
leave
ja
fisttpll
push
orl
adc
js
or
stos
cmp
imul
ljmp
mov
sbb
stc
mov
dec
add
pop
mov
mov
fnsave
ljmp
xchg
add
sub
mov
imul
jae
leave
out
xchg
and
push
pusha
push
push
sbb
mov
in
popf
add
imul
xchg
fcmovnb
test
mov
cltd
cmpsb
mov
xlat
mov
jmp
sub
addr16
int3
imul
mov
test
dec
xor
dec
dec
adc
sub
decl
mov
and
sbb
mov
jns
fisubl
xchg
loopne
incl
xor
je
pushf
sub
lret
cmp
aam
xor
cltd
pop
mov
loope
xchg
cmp
xchg
call
cmpsl
pusha
push
mov
call
cli
push
dec
xor
test
scas
dec
push
outsl
lock
shrb
sub
scas
push
fcmovbe
cs
out
cli
ljmp
dec
xor
mov
jb
sbb
stos
movsb
push
cmp
loop
mov
sbb
int3
pop
cmp
adc
stc
mov
clc
jnp
push
jp
fcmove
mov
jnp
jmp
repz
inc
sub
cwtl
cmp
out
cmp
loope
imul
fisubrl
mov
rcr
xchg
inc
pop
mov
mov
push
sar
push
lcall
adc
cltd
test
sub
or
mov
sbb
adc
in
xchg
fildll
in
push
dec
dec
mov
les
xchg
pop
fstp
and
pushl
add
sbb
jp
pop
push
push
xor
or
decl
adcb
cli
mov
das
pop
arpl
sbb
in
cmpw
ljmp
aaa
mov
and
xchg
xlat
aad
cmp
push
mov
pop
fcoms
ljmp
js
popa
dec
ja
sub
jbe
loopne
ljmp
test
stc
lds
call
lods
xchg
push
sub
nop
out
out
imul
out
jns
shrb
cltd
sbb
ljmp
dec
push
dec
pop
test
loopne
and
pop
xchg
mov
daa
jns
jne
rcrb
mov
jo
out
and
aad
les
adc
decl
mull
repnz
loop
push
test
push
and
addr16
decl
push
cs
ss
push
sbb
gs
sbb
lods
in
leave
into
push
sbb
mov
stc
xchg
nop
xchg
xlat
adc
xor
int3
out
in
push
xchg
sub
decl
add
mov
mov
sub
mov
and
orb
cmpsl
fcoms
mov
adc
arpl
lea
popa
inc
negl
push
jl
inc
xchg
mov
mov
test
loope
lahf
mov
push
inc
jge
cld
pop
xor
jg
cmp
loop
ret
adc
popa
mov
outsb
push
adc
idivb
add
push
pushl
shrb
mov
dec
insb
shlb
out
enter
xor
shrb
mov
shrl
mov
call
xchg
mov
cmp
ret
sub
test
in
mov
dec
cmp
fs
dec
clc
icebp
add
mov
push
add
push
push
hlt
outsl
dec
mov
cmp
shll
add
and
shrb
rcl
rolb
rcrb
lcall
jg
mov
fs
adc
popa
int3
sbb
add
shll
aad
xor
in
ljmp
push
lock
push
lcall
bt
outsl
push
sub
mov
pushl
dec
inc
test
xor
aad
xchg
jg
aad
icebp
fs
es
into
push
lcall
inc
mov
add
pop
jbe
rcrb
mov
pushf
add
jl
pop
lea
ss
or
add
scas
sub
mov
xchg
sbb
jns
dec
sahf
nop
and
pop
lock
jno
xchg
xor
test
ret
sbb
test
add
in
jae
fldt
jecxz
sub
jo
jl
mov
nop
scas
push
cmpl
mov
sahf
adc
and
pop
movsl
ljmp
in
test
cli
clc
out
nop
cmp
lods
dec
test
dec
mov
int
cmp
sbb
jb
stc
cld
cmp
repnz
push
je
dec
lret
jge
sub
cmp
jge
ljmp
pushl
dec
mov
movsl
cmpl
les
jl
repz
jo
outsl
mov
ljmp
rcll
fnstsw
les
mov
aam
bound
sbb
inc
data16
xor
cmp
cmp
int
aam
pop
inc
dec
fnstsw
repnz
jle
cs
lcall
movsl
mov
arpl
int
rol
jb
inc
fisttpll
jno
sub
incl
lret
in
mov
or
or
adc
test
jmp
orl
adc
add
int3
popa
jl
cmp
fbstp
decl
cmp
mov
into
sahf
mov
lds
ret
dec
pop
jbe
sti
repz
ljmp
iret
outsb
push
cld
and
push
out
push
add
fistpl
les
adc
lcall
cld
popf
jns
jecxz
mov
rclb
insb
lcall
sbb
mov
lcall
dec
jno
cli
and
inc
stos
out
and
mov
xchg
stc
aad
ljmp
imul
int3
push
sbb
out
int3
pop
in
inc
xor
inc
sbb
fildl
xor
fmull
pop
adc
jl
push
mov
inc
sub
mov
push
movsb
push
daa
lods
or
push
in
sbb
or
xor
lcall
sub
mov
aad
popa
scas
rorb
mov
ljmp
movsb
jne
xchg
in
jmp
inc
or
loopne
dec
lret
mov
decl
lock
cmc
mov
dec
aas
sti
xchg
in
imul
mov
cltd
jg
movl
mov
insl
sbb
jl
repz
xor
scas
cmp
mov
pop
outsl
test
jb
push
call
jmp
dec
mulb
int
in
jg
imul
pop
dec
or
or
jmp
cs
popf
inc
outsb
mov
pop
inc
mov
mov
arpl
jne
xor
push
inc
lcall
lods
add
out
fs
pusha
jmp
push
pop
xchg
call
add
push
repnz
jmp
sbb
jmp
add
lcall
cmpsl
cli
btr
jp
push
scas
call
dec
mov
xchg
add
xchg
pusha
arpl
mov
cmp
push
and
dec
push
dec
mov
push
mov
pop
pop
std
out
out
push
mov
add
jmp
xor
idivl
aad
inc
aas
or
adc
sahf
daa
loopne
mov
or
in
sahf
pop
imul
dec
idivl
mov
lods
scas
ljmp
sub
test
cmp
ds
add
imull
std
push
cmpb
aam
jb
pop
mov
pop
mov
mov
jmp
jl
inc
daa
jg
lahf
add
mov
rcll
ret
fldl
jp
mov
add
icebp
orl
inc
jns
sub
incl
fnstsw
aam
mov
mov
push
adc
push
pushf
adc
mov
adc
loop
sbb
lcall
jle
rolb
mov
in
cmpb
push
fistpl
add
cmpsb
push
repz
ud0
and
popf
dec
and
xor
adc
hlt
push
sbb
pop
iret
call
lcall
mov
xchg
or
lret
or
mov
loopne
popf
push
outsl
mov
cmp
and
xchg
fstps
in
and
pop
xor
pop
popl
arpl
and
decl
orb
jle
or
stos
cmp
and
imul
ljmp
sbbl
cwtl
xchg
push
test
movsl
incl
das
push
or
outsl
cmp
adc
xchg
ds
pop
jae
pop
sbb
dec
fidivrl
sbb
repz
mov
enter
jmp
in
iret
jp
shll
inc
jg
ljmp
add
or
jbe
movsl
or
add
inc
jno
or
call
inc
les
mov
pop
jmp
add
dec
mov
lea
cmp
jg
xchg
fcompl
mov
fwait
cwtl
aas
mov
popa
pop
jbe
pop
not
mov
pusha
lods
test
flds
aas
mov
in
pop
negb
in
jmp
dec
enter
pop
adc
aad
push
pop
pushf
push
push
hlt
mov
adc
dec
mov
add
call
and
jge
lods
cmp
pop
dec
sub
inc
nop
adc
pushl
add
mov
dec
jle
adc
push
ret
pop
adc
pop
xor
and
mov
test
or
ljmp
ds
cmc
aad
xor
data16
inc
hlt
cmp
xchg
inc
imul
decl
inc
cmp
pop
xchg
fcomip
loopne
mov
inc
dec
mov
push
int
lods
loope
outsl
divl
hlt
ret
je
decl
pop
nop
push
hlt
mov
or
cmpsb
addl
test
decl
and
xchg
or
xlat
dec
add
or
daa
test
xorb
cmpsl
call
insb
and
jnp
in
cmc
pop
mov
jle
pop
dec
adc
push
or
call
mov
fisttpll
icebp
aas
rorb
es
cmp
or
in
scas
sarl
nop
fucomi
dec
adc
cmc
jbe
cld
pop
in
mov
ror
ret
ljmp
fsts
cmc
dec
xchg
mov
or
popf
or
pop
pop
test
fisttps
jge
js
push
xchg
mov
std
jmp
sbbb
stc
repz
ret
xor
inc
cmc
cli
call
std
fiadds
gs
or
ror
cmc
rcrb
test
push
mov
xor
cltd
xchg
insb
imul
push
adc
dec
les
cmp
hlt
incl
sub
outsb
repz
mov
push
out
nop
mov
pop
mov
jmp
dec
fdivl
jg
sbb
mov
and
iret
jnp
add
ds
lds
pop
sbb
into
inc
aam
cmpsb
movsl
cld
cld
test
mov
les
stos
add
adc
enter
jne
pop
mov
xchg
les
jp
aaa
xor
jno
in
lcall
adcl
dec
push
imul
movsl
mov
decl
mov
push
inc
xchg
push
imul
lds
fadd
add
decl
sbb
fs
adc
rcrb
mov
call
sub
mov
test
dec
test
imul
fldt
nop
aad
mov
call
popa
in
adc
mov
mov
inc
mov
jg
rcll
repz
lods
mov
xorl
or
call
loopne
jp
and
jmp
inc
mov
pop
in
sub
decl
outsl
lret
scas
loope
jno
lahf
lahf
adc
ljmp
inc
subb
aas
and
mov
inc
adc
lret
pop
and
xor
mov
mov
sbb
mov
call
pop
imul
jae
cltd
nop
push
sub
jp
xchg
ffreep
lods
sbb
loopne
jge
cmp
jmp
ret
testb
inc
push
cmp
cmp
imul
push
loop
xor
mov
pushl
lods
negl
daa
fldt
jns
xor
out
fbld
inc
xchg
popa
pop
xchg
jbe
push
sbb
cmpsb
out
sub
dec
mov
mov
scas
sar
incl
adc
test
inc
xor
xchg
inc
mov
arpl
push
out
shll
pushl
mov
mov
rorb
push
push
xchg
or
test
or
movsb
sbb
jmp
xchg
loop
push
lcall
pop
and
aad
imul
bound
loopne
add
jns
test
rcr
leave
push
fwait
or
frstor
daa
mov
ljmp
push
unpckhps
sbbl
stos
dec
adc
std
inc
gs
xor
push
imul
clc
decl
cmp
fisubrl
ffree
in
push
mov
or
inc
and
jecxz
xchg
adc
fisttps
mov
inc
repz
sti
inc
mov
dec
pop
or
ljmp
xchg
cmp
mov
fcoml
jns
xchg
imul
dec
fisubrl
ret
mov
popa
xchg
imul
in
mov
push
test
add
dec
adc
dec
adc
sub
xchg
xchg
sbb
ds
push
push
push
and
pop
cli
sub
mov
loopne
inc
cli
push
mov
push
sub
mov
push
loopne
mov
xchg
xchg
dec
movsb
sbb
in
jp
and
or
jmp
push
aas
mov
cltd
imul
adcl
cmp
dec
sar
cld
sub
and
pop
pop
sub
xchg
aam
call
out
push
mov
pop
mov
push
in
outsl
out
pop
mov
mov
pop
sbb
pushl
rcrl
scas
cli
inc
nop
stc
dec
xchg
mov
push
pop
addr16
ud0
jmp
not
aad
je
fcom
jp
adc
in
cmp
shll
add
pushl
pmulhw
dec
cltd
out
push
jle
sbb
cmp
cmp
sbb
jmp
mov
je
sbb
mov
mov
fcoms
fiadds
decl
fpatan
push
mov
imul
cmp
int
jl
jp
jl
pop
jmp
aas
addr16
mov
ss
aas
test
or
imul
imul
lods
test
mull
sub
cmp
dec
add
aaa
pop
pop
mov
adc
push
mov
sar
sub
fildll
sbb
out
shlb
lock
lods
mov
or
adc
inc
ja
ljmp
xchg
loop
ficoml
fidivrl
adc
mov
jbe
icebp
mov
xor
xor
fsubp
out
insb
xchg
stc
and
decl
pusha
and
pop
es
jmp
pop
call
jb
cli
cmpsb
dec
mov
dec
cwtl
out
or
mov
lea
loop
cmpsb
mov
adc
cld
insl
cld
pop
cli
or
jle
cli
xor
adc
pop
xchg
adc
push
cmpsb
cmp
jmp
or
das
outsl
mov
insl
pop
dec
mov
ret
cmp
stc
jno
pushl
push
cmc
add
lods
mov
rcll
sub
pop
pushf
ljmp
inc
pop
scas
out
push
lcall
and
loope
scas
pop
jae
shrl
in
popa
mov
inc
inc
cmp
orb
xor
xor
mov
cmp
jb
inc
inc
add
divl
lret
aam
xorb
mov
mov
call
xor
idivl
incl
fcomi
mov
hlt
mov
pop
mov
divb
push
in
inc
inc
ret
jge
lret
ret
cmp
mov
inc
dec
dec
fdivp
mov
pushl
xor
sahf
xor
test
ja
xor
aam
movl
adc
int3
decl
jecxz
aad
loopne
stos
or
jo
sbb
roll
inc
sbb
ds
enter
rcl
sub
incl
dec
mov
cmp
stos
enter
sbbb
mov
call
mov
mov
pop
lahf
int
xor
xor
jp
sahf
mov
decl
cmp
add
loopne
sub
or
mov
dec
aaa
mov
jmp
xchg
inc
mov
mov
lock
jl
adc
subb
mov
fimull
je
fwait
lahf
xchg
es
gs
pop
pop
mov
out
decl
and
orl
jecxz
repnz
shrl
mov
inc
xchg
hlt
jno
addb
push
ds
aas
and
or
push
xchg
xchg
loope
jns
xor
dec
popa
out
sbb
int3
ret
cltd
and
pushl
add
ljmp
popa
jle
call
lahf
sub
mov
mov
sbb
ljmp
cmpsb
inc
xor
shlb
fimuls
adc
aaa
push
mov
outsb
cld
mov
adc
dec
call
lcall
push
pcmpeqb
mov
xor
bound
mov
pushl
pushf
es
arpl
iret
cli
das
or
out
adc
mov
push
imul
outsl
inc
ds
decl
fstps
mov
lret
std
int
sahf
enter
sbb
jno
aas
mov
jno
mov
sbb
in
lret
pop
inc
data16
mov
andb
push
fidivl
fnstcw
sbb
lods
cli
test
loopne
mov
cli
jns
push
pop
outsb
ret
mov
stc
mov
ljmp
pop
jne
jae
jg
scas
inc
hlt
fnsave
lods
clc
jmp
xor
xor
jg
cwtl
jmp
mov
push
fdivrs
add
push
mov
xor
mov
pop
pop
clc
adc
bound
fidivs
mov
js
push
cmp
fwait
push
aam
add
stos
mov
std
mov
push
and
cmc
aam
mov
loopne
jae
push
fnstsw
adc
pusha
or
lock
adc
and
fcompl
and
out
or
xor
push
cmpb
ja
adc
sbb
dec
push
pop
push
adc
xor
mov
dec
jno
fcom
jno
rorb
add
cmp
push
jno
dec
inc
mov
inc
mov
jg
dec
add
mov
xchg
push
inc
mov
or
pushf
jno
mov
push
cld
call
pop
and
frstor
xor
inc
or
mulb
and
ljmp
rcr
inc
mov
fsubl
cwtl
push
lret
cld
out
stos
xchg
mov
enter
jg
das
sar
cs
jg
mov
loope
testl
xor
fldl
mov
cmp
test
cmp
and
dec
adc
ficoml
ljmp
sbb
pop
mov
add
cmp
aas
mov
loope
shll
repz
pop
iret
ror
ljmp
push
call
les
jmp
call
jge
add
loop
loope
loop
idiv
incl
dec
push
xor
jg
dec
mul
add
add
jmp
jl
cmp
es
decl
xchg
pushf
adc
iret
enter
aam
lea
mov
or
xchg
in
nop
pusha
mov
incl
dec
push
adc
int
pop
ret
and
ret
mov
insl
push
xchg
xor
dec
popa
push
decl
cmc
mov
push
dec
rclb
push
adc
fstl
xchg
add
lcall
push
mov
fcomps
xlat
cli
xlat
and
enter
jmp
push
cmp
pushl
decl
cmp
jbe
mov
adc
pushf
or
jns
call
hlt
inc
add
jb
sub
mov
out
shlb
loopne
mov
xor
mov
xor
pushl
ljmp
int
icebp
sub
dec
sub
loop
scas
mov
js
mov
push
leave
in
jae
into
xor
xchg
std
loop
roll
insl
popf
cmp
shrl
outsl
call
je
les
pop
sub
in
daa
mov
mov
sub
mov
arpl
xlat
mov
ficomps
cmpsl
frndint
loopne
dec
and
push
lcall
sub
sbb
jne
and
inc
stos
daa
jne
aad
and
push
jmp
decl
xchg
shl
int3
and
add
shl
cmp
xor
adc
in
lahf
js
lcall
cmp
push
test
and
push
mov
pusha
mov
push
pop
ret
and
xlat
inc
icebp
push
mov
ds
jle
stos
outsb
add
sub
lahf
jmp
in
jmp
cltd
int3
pop
inc
cltd
jns
adc
xchg
loope
enter
clc
cmp
xchg
and
scas
incl
push
push
adc
sub
inc
jno
jno
int
inc
inc
jb
call
addr16
movb
popa
addl
pusha
cmp
nop
mov
jl
cmp
jg
adc
iret
sbb
add
bound
jne
xchg
pushl
adc
or
mov
sti
pusha
xor
or
xor
scas
clc
jmp
inc
mov
dec
lea
rorl
and
dec
mov
lcall
dec
cltd
lahf
dec
mov
hlt
aad
mov
xchg
xchg
sub
decl
out
iret
pop
xrelease
push
pop
pop
and
or
jno
mov
dec
push
dec
rcrl
adc
sub
cs
mov
lret
xchg
add
xchg
call
loopne
lret
int
adc
mov
push
push
and
xchg
test
pushl
out
and
roll
pop
loope
xchg
sbb
movsb
inc
pop
cbtw
ja
clc
decl
add
lcall
cli
jge
push
mov
imul
jmp
cmc
dec
rep
scas
push
add
push
mov
insb
xor
mov
push
xor
fidivrs
jbe
mov
clc
inc
inc
insb
cmpsb
je
cs
add
xlat
jne
sub
loop
pushf
daa
inc
lcall
push
pop
mov
loope
call
cmp
cmpsb
stos
loopne
in
mov
test
loope
jp
insl
out
and
subb
xchg
or
movsb
test
cli
pop
pusha
in
neg
into
fcoml
dec
cmpsl
pop
fisttps
sbb
cmp
std
cmpl
dec
std
lea
cmp
shlb
mov
ljmp
cld
jo
ret
int
xchg
into
adc
push
shl
push
dec
mov
mov
mov
dec
hlt
pop
icebp
mov
pushf
call
push
aam
lds
cmp
mov
sbb
and
mov
cmpsl
outsl
pop
xchg
xor
push
dec
into
mov
ljmp
dec
mov
jp
jb
ss
mov
xchg
xor
jae
mov
xchg
fwait
jecxz
lcall
jo
je
dec
stc
int3
add
insb
mov
in
xor
pop
nop
ljmp
rcl
iret
mov
sub
das
and
add
push
gs
sub
call
push
fiadds
rolb
cmp
mov
pop
jne
les
inc
mov
std
cli
fmul
rcr
loope
sub
bound
or
fsubp
pop
push
sub
enter
mov
lret
xchg
mov
xchg
sar
pop
cwtl
push
push
in
js
xor
pop
or
ljmp
call
mov
imul
mov
jbe
jmp
pushl
dec
jmp
mov
clc
rep
mov
sub
cwtl
pushf
or
push
inc
cmp
ljmp
iret
stos
or
mov
push
xchg
pop
call
lcall
iret
or
mov
pop
mov
orl
ljmp
ss
gs
orl
push
jp
and
sub
inc
shlb
pop
lock
aaa
push
push
es
mov
push
aaa
mov
jl
mov
mov
ljmp
inc
xor
scas
mov
mov
pinsrw
xlat
cmp
iret
mov
sarb
cmpsb
xor
xchg
mov
repnz
adcb
or
mov
loopne
and
pushl
mov
cld
and
imul
and
stos
mov
mov
mov
decl
mov
push
sbb
aas
std
xchg
lock
aaa
pop
sub
movsl
fwait
or
mov
rorb
aam
dec
movsl
inc
xchg
push
cmc
adc
repnz
cld
cli
std
add
lea
jg
or
popf
add
sahf
and
mov
xchg
je
add
or
dec
pushl
filds
mov
outsl
movsb
cli
or
pop
movsl
cmp
fadds
jecxz
dec
and
outsl
cmp
mov
out
push
and
pop
mov
pop
adc
xchg
stos
int3
roll
call
sub
cmp
xor
and
xchg
dec
clc
movsl
or
mov
mov
in
and
dec
ja
and
pop
fists
call
pushf
add
or
imul
jne
or
cmp
call
imull
inc
push
xor
mov
cld
pop
mov
lcall
inc
inc
mov
push
xor
call
push
sbb
pop
cmpsl
lods
out
mov
or
sub
jmp
or
rcrl
ret
add
sarb
out
cli
add
ljmp
clc
mov
jp
fadds
mov
xchg
ds
pushl
and
sbb
cmp
xor
inc
and
stc
pushf
jge
popf
add
mov
incl
xchg
aas
jg
adc
pop
cs
adc
jg
fbld
and
fwait
mov
pop
jne
jmp
hlt
bound
test
pop
int3
lret
clc
call
cmp
mov
mov
adc
daa
rolb
ljmp
mov
push
xchg
lock
xor
xor
pushl
sbb
and
pushl
jg
or
sar
into
enter
push
sub
loop
les
jl
xor
in
sar
mov
inc
jns
sub
and
inc
pop
and
rolb
inc
scas
scas
xchg
incl
mov
push
or
arpl
jp
aaa
adc
mov
sti
mov
cltd
xor
lock
fs
stc
or
mov
fwait
sti
jg
roll
call
mov
mov
dec
mov
add
bound
incl
call
mov
mov
mov
and
ss
push
add
jmp
test
dec
inc
cmp
xchg
xchg
stc
out
repz
icebp
mov
mov
jb
ljmp
aas
movsb
ljmp
cwtl
ret
pop
popf
popf
jp
out
daa
dec
ret
es
push
out
sbb
adc
jge
fcoms
adc
xchg
jg
sbb
push
test
test
sbb
jmp
jge
push
mov
add
testl
mov
add
xlat
dec
ljmp
cmp
mov
jg
pop
lahf
xchg
xor
push
dec
testb
std
sub
push
int
neg
pop
dec
mov
push
jns
jecxz
repz
loope
addl
pushl
xor
jnp
ljmp
push
cmpsl
cltd
dec
or
xchg
fnstsw
cli
or
sti
jecxz
inc
dec
lahf
arpl
and
xor
sub
xor
or
and
or
push
lds
dec
cmpsl
rcrl
js
mov
call
and
fcomp
sub
addl
loopne
imul
add
pusha
insb
push
mov
mov
call
loopne
xchg
arpl
xor
std
adc
jb
data16
fs
scas
lcall
je
rcll
cmp
call
out
loopne
xorl
loopne
es
call
out
filds
dec
add
ret
or
bound
jl
dec
inc
fsts
xorb
cmp
arpl
cmp
adc
cmp
push
adc
and
mov
loopne
outsl
scas
dec
xor
fstl
lea
sahf
std
mov
add
insl
cmp
mov
sahf
xor
jl
jb
or
add
xchg
scas
add
mov
pop
add
sub
cmpsb
mov
stos
push
or
jmp
cmc
daa
adc
mov
clc
rolb
std
xlat
pusha
mov
pushf
mov
popa
xchg
add
adc
ljmp
nop
sbb
shrl
sbb
sub
lcall
xchg
int3
call
mov
mov
jge
aam
xchg
push
pushf
adc
call
jmp
inc
xor
add
test
sub
subb
loop
sub
in
sbb
scas
mov
inc
sub
adc
push
pop
adc
xchg
test
jg
cmpsb
ja
add
inc
push
sbb
xor
jo
dec
or
jo
jmp
ret
std
cmp
jbe
cld
push
lds
fmull
aam
and
cmpsl
mov
pop
jnp
jmp
xchg
lret
push
mov
outsl
mov
mov
jp
iret
insb
push
out
aam
push
push
push
jnp
call
sahf
fs
inc
mov
fs
sahf
jo
push
mov
pop
adc
ja
jns
mov
push
test
aam
gs
cmp
push
loope
std
mov
dec
decl
imul
shll
dec
test
dec
mov
lock
sub
in
cld
jmp
test
xchg
adc
sti
icebp
or
shl
dec
inc
cltd
insb
mov
lock
call
repnz
mov
mull
mov
test
ljmp
cmp
cs
ljmp
outsb
xchg
mov
xchg
rcr
xor
mov
mov
lock
sub
mov
decl
and
stos
sub
data16
xchg
xor
xor
xchg
mov
andl
test
mov
mov
mov
mov
adc
mov
test
mov
dec
or
push
out
ss
aaa
fistps
lock
clc
jmp
lea
inc
iret
leave
pop
inc
sub
mov
fsubr
popf
jg
xor
jg
ljmp
in
sti
fsubl
es
xchg
fidivl
fcmovnu
xchg
outsl
das
inc
decl
inc
pop
out
sub
push
inc
pop
jo
and
mov
mov
stos
jae
insb
inc
xor
push
mov
decl
stos
out
imul
xchg
arpl
mov
mov
mov
ficompl
out
fs
cwtl
out
xor
pushf
cltd
fstpt
rcrl
ja
leave
lds
lret
in
lahf
lcall
jmp
ljmp
push
and
lea
dec
pop
xor
incl
fiaddl
adc
stos
cmp
fistpll
pop
ret
std
lods
sub
loope
fidivs
pop
inc
push
xchg
out
inc
fcmovnb
dec
ljmp
clc
and
out
xchg
mov
xchg
das
mov
pushf
inc
test
sub
pop
lods
insb
dec
pushl
cld
jmp
js
imul
scas
dec
ret
pop
lea
bound
aam
mov
inc
xor
lcall
fdivr
pop
orl
dec
sahf
inc
lods
sub
cmp
imul
incl
cs
add
fs
incl
repnz
push
mov
out
jb
cmp
das
cltd
lods
push
subb
stos
jg
inc
mov
xchg
and
jns
insb
loope
pop
xor
xchg
adc
sbb
out
call
sub
fnstcw
lahf
xor
adc
xchg
push
mov
idiv
mov
call
mov
aas
std
xchg
xchg
sub
sqrtps
or
jne
jle
in
pop
jle
dec
test
out
cmp
jnp
pushf
or
stos
sub
aaa
scas
popa
xchg
sub
mov
push
loope
dec
lods
xor
jmp
jo
sti
sbb
xlat
addr16
repz
pop
or
dec
sarb
sub
cmpsl
test
jno
call
test
mov
jb
in
in
push
sub
sub
test
cli
jg
mov
cmp
sbbb
mov
shrb
cltd
aaa
adc
pop
push
out
cmpsb
xchg
sar
cmp
jbe
push
lock
jge
mov
jg
push
mov
cmp
shrl
pop
stc
je
aas
repnz
mov
ret
ljmp
mov
imul
lahf
dec
insl
mov
ljmp
popl
add
sti
lahf
inc
clc
jb
sub
dec
push
aaa
out
ja
sub
test
arpl
xchg
xor
mov
in
pushf
xchg
mov
std
hlt
push
xor
imul
test
enter
outsb
scas
xchg
outsb
fwait
mov
jmp
mov
xchg
mov
std
rolb
stos
xchg
sub
push
aam
add
adc
scas
push
or
test
mov
adc
lret
int
sub
repz
call
xchg
jnp
mov
in
outsb
dec
iret
cltd
add
rcl
mov
mov
or
dec
outsb
mov
clc
jmp
adc
lock
les
scas
in
xor
adc
nop
xor
mov
sbb
pop
adc
out
and
bound
jno
fsubl
xor
cmp
repnz
cmp
lret
test
daa
std
incl
imull
or
add
bnd
cld
cs
not
aam
ret
mov
aaa
xchg
cmp
mov
sbb
xor
push
xchg
test
movsl
sub
push
mov
add
std
call
and
dec
cmp
neg
data16
mov
lods
mov
decl
push
xor
sahf
sbb
aaa
iret
sbb
xlat
pushf
adc
outsl
mov
push
call
pusha
frstor
jmp
mov
push
addl
lds
mov
push
cld
mov
popf
test
xchg
mov
mov
mov
scas
mov
mov
jbe
test
loopne
nop
adc
pop
dec
xchg
pop
incl
dec
insl
sbb
push
jnp
out
mov
push
cmp
aaa
cmpsl
sub
daa
cmpsl
jmp
jnp
cmp
and
mov
adc
std
sbb
bound
dec
data16
call
pop
dec
xchg
data16
lret
shlb
or
and
shll
pusha
gs
test
nop
inc
test
sbb
stos
call
nop
les
add
dec
mov
mov
stos
xchg
inc
lock
push
mov
mov
decl
adc
jae
mov
fdivrp
data16
xchg
mov
and
jne
leave
testl
lcall
leave
insw
or
out
add
mov
mov
es
push
dec
addl
cli
loop
lcall
or
adc
cmp
jmp
call
push
lock
sbb
bound
shlb
push
lcall
mov
jmp
out
pop
aas
loop
dec
jl
and
lds
jge
pop
jecxz
mov
push
dec
jecxz
dec
jno
mov
bound
js
test
pop
ret
inc
nopl
out
lcall
mov
inc
ljmp
push
scas
jae
cmpsl
mov
out
repz
pushl
mov
adc
lods
mov
sub
lock
loop
mov
pop
shll
out
and
inc
orb
popf
aam
or
jns
daa
mov
cmpsl
xchg
jge
outsb
arpl
inc
add
aaa
sar
xor
fstps
or
jg
jns
dec
dec
pushf
xchg
fnstsw
push
movsl
out
js
lock
ss
out
cwtl
int
insl
fcoms
fwait
mov
insb
mov
ljmp
in
lods
jbe
pop
jp
inc
pop
out
incl
inc
lahf
mov
dec
daa
xchg
test
inc
xor
adc
cwtl
out
lcall
std
pop
movsl
arpl
fmul
pop
cltd
sbb
mov
test
jmp
in
push
mov
mov
fmulp
out
and
enter
hlt
popl
sbb
mov
insl
data16
pushl
mov
dec
cmp
push
ret
mov
shll
sub
mov
dec
inc
ljmp
cmp
push
pop
xchg
ret
adc
arpl
mov
fwait
jns
aad
sbb
in
fisubrl
arpl
ljmp
add
inc
enter
lret
mov
in
rorb
sbb
call
js
cld
sub
dec
jmp
push
popa
loop
push
mov
test
sbb
imul
call
in
add
push
push
fistpl
push
cmp
outsl
in
out
sbb
fistps
jne
and
aaa
add
push
aam
addr16
sti
sub
into
add
lods
sti
xchg
lret
outsl
pushf
jge
mov
out
or
iret
and
add
or
mov
dec
aas
fs
rcrl
ss
out
xor
mov
mov
inc
test
cmpsl
pop
push
shl
jo
scas
hlt
dec
imul
pop
imull
fcos
decl
daa
in
jle
clc
jne
repnz
scas
shll
mov
shll
sti
lods
mov
and
add
xchg
int
scas
push
insb
mov
adc
out
insl
je
mov
mov
mov
pop
xor
paddb
pop
jne
inc
sub
mov
dec
or
cmc
fildll
bound
push
outsl
hlt
ficompl
dec
and
add
test
cmpsb
add
decl
icebp
dec
dec
addb
icebp
outsl
adc
pop
sti
testb
xchg
mov
dec
add
loop
xchg
out
push
test
call
push
jge
lods
or
stos
adc
cmpl
aas
fsincos
ja
inc
shrl
mov
jno
pop
add
adc
inc
fdivl
call
inc
addb
pushf
mov
rorb
test
idiv
scas
mov
mov
inc
iret
adc
jge
mov
call
sar
incl
xor
adc
push
mov
pop
push
call
xor
outsb
pop
pop
mov
stos
sahf
pop
test
cwtl
inc
arpl
lcall
xrstor
int3
add
pushl
jmp
addb
sub
mov
pop
fiaddl
cmc
aad
jmp
out
xor
dec
lock
pushf
push
jo
lret
je
in
mov
cmp
mov
pusha
fwait
push
mov
xchg
mov
mov
enter
lcall
dec
xchg
jns
cltd
dec
clc
insb
test
pusha
lods
jo
xor
ret
adc
out
fdivs
bound
add
adc
adc
and
sbb
dec
jae
mov
es
jp
stc
and
vpminsw
xchg
fsubl
scas
js
sbb
cmpsl
jg
xchg
mov
dec
inc
inc
or
jbe
and
hlt
mov
shlb
push
clc
call
or
or
into
pop
outsl
xorb
xchg
out
int3
rcrl
icebp
call
push
cmpps
es
mov
jns
je
ret
lods
int
iret
push
in
dec
mov
lcall
cld
lea
flds
sub
dec
dec
or
sub
sub
add
loopne
add
push
cmpsb
test
pop
inc
and
shlb
incl
add
mov
pop
mov
insb
sbb
iret
cmp
xor
int
lcall
int
cmp
xor
or
int
loopne
sub
mov
lcall
pop
pop
clc
inc
sub
movsb
movsb
or
insb
into
sbb
lcall
dec
pop
sarl
and
aam
mov
aas
dec
aad
sbb
pusha
mov
scas
jbe
cmp
incl
dec
mov
adcl
aas
sub
sub
scas
cmpsb
je
mov
pushl
and
mov
and
test
test
or
lds
das
int
push
cld
call
and
ss
aaa
inc
ja
mov
jmp
cli
pop
jl
ljmp
jb
pop
adc
dec
xchg
out
inc
cs
pusha
or
jmp
pop
mov
mov
jno
lods
addr16
in
cs
test
inc
cmp
jle
mov
lcall
popf
dec
push
sbb
pushf
cwtl
push
jl
cmpsb
sti
cmc
dec
daa
rorl
mov
push
xchg
mov
pushl
or
mov
std
mov
ret
lds
shr
scas
icebp
or
or
movsb
sbb
push
xor
xchg
cmp
mov
incl
xor
es
pop
movsl
and
mov
mov
or
outsb
movsl
xchg
sub
lcall
adc
cmp
inc
enter
push
xchg
or
xchg
shrl
out
push
pop
call
lret
int3
and
rorl
out
mov
sbb
pop
inc
insb
dec
arpl
xor
ljmp
adc
mov
mov
out
dec
aad
loope
jnp
cld
inc
mov
pusha
je
jecxz
stos
daa
xlat
aad
aad
pop
cmc
xor
pop
xchg
popa
mov
mov
push
pop
xchg
push
pop
mov
dec
mov
push
mov
clc
mov
ficompl
fstpl
mov
roll
jl
mov
mov
fisttps
rorl
loope
and
jno
ja
call
popa
in
shlb
push
arpl
dec
pop
cmp
outsb
add
mov
or
int3
mov
sub
mov
pop
sbb
xchg
jae
mov
call
in
cmp
add
pop
dec
or
daa
jge
inc
xor
stos
mov
call
repz
sub
lds
cmp
xchg
sahf
sub
aaa
mov
mov
loope
lds
mov
adc
and
pusha
test
cmpsl
out
cli
decl
in
dec
xchg
cmpl
xor
jno
test
push
scas
fsubrs
jmp
loope
or
mov
add
inc
jg
jl
cmp
cmp
rcrb
cmp
sbb
ljmp
jg
sub
and
lea
dec
lret
popa
push
jecxz
inc
mov
and
xor
push
aad
cmpsl
ljmp
mov
jg
mov
push
fs
push
jle
push
inc
mov
inc
cmp
rclb
cld
mov
fcomip
ljmp
test
or
dec
cli
push
sub
push
jb
mov
fwait
cs
inc
call
out
push
mov
sub
xorl
cmp
jns
sbb
jmp
push
push
dec
pop
inc
inc
repz
cmp
inc
mov
punpcklbw
insl
lock
movl
insl
add
xchg
mov
test
ljmp
push
jmp
push
xor
add
andb
ljmp
jl
call
mov
pushf
movsl
or
cmp
mov
idiv
pop
cld
pushl
fs
movsl
outsl
or
lock
push
jbe
pushl
jle
jnp
loopne
push
out
mov
cmp
lea
imul
outsb
outsb
pop
adc
lods
dec
shlb
cmpsb
add
ljmp
mov
call
jp
mov
mov
subb
push
fcomi
mov
jno
shrl
data16
dec
movq
inc
cmp
xchg
push
popa
std
mov
pop
mov
mov
cld
mov
je
loope
out
inc
ljmp
lods
mov
cmpsb
dec
adc
cwtl
ror
in
popa
xor
insb
push
lds
push
mov
frstor
mov
test
or
fmull
aas
imul
decl
add
jg
xchg
rolb
mov
addl
arpl
rcrl
cmp
xchg
jnp
sahf
dec
push
sbb
filds
xchg
fsubs
adc
push
fmul
decl
sbb
test
and
arpl
mov
push
sar
lcall
fisttpl
es
adc
pop
jo
test
ljmp
scas
subb
das
push
lcall
adc
out
ja
in
in
mov
test
xor
mov
pushf
xchg
icebp
les
sub
outsb
mov
test
xchg
lcall
lcall
mov
pop
xchg
in
pop
mov
inc
pop
mov
into
mov
or
cmpsb
pusha
incl
pop
sbb
stos
test
inc
mov
ljmp
adc
pop
dec
mov
sub
mov
test
add
mov
test
insl
and
lcall
lret
sets
mov
jge
insl
mov
push
not
movlhps
dec
iret
xor
add
mov
iret
inc
sub
add
fistps
cmp
call
mov
pop
and
ljmp
cmp
push
out
sbb
and
inc
outsl
push
sub
imul
test
sub
call
sbb
inc
fwait
in
mov
cmp
lcall
lods
sub
sub
cmp
or
xchg
imulb
mov
jmp
scas
je
sbb
mov
lcall
ss
lods
imul
lcall
mov
ja
jnp
inc
dec
ss
test
in
xor
test
incl
call
add
jp
jmp
add
jl
leave
fildll
add
call
and
negb
mov
mov
lock
call
nopl
add
incl
inc
jmp
inc
arpl
ds
insl
xor
pop
ljmp
cs
call
adc
jmp
and
pop
ret
data16
rolb
jecxz
out
mov
popf
xor
mov
jmp
fs
or
clc
add
sub
fidivrs
loopne
push
icebp
jne
cwtl
jmp
push
jge
mov
ds
js
lcall
sbb
cs
ret
lods
fsubl
mov
sarb
or
call
xor
into
xchg
xor
dec
lahf
cmpsb
jmp
in
shlb
cwtl
es
lret
xchg
lcall
in
adcb
and
or
push
xlat
cmp
xor
aaa
inc
cli
mov
clc
sbb
push
add
push
aas
in
rolb
sub
scas
test
sub
cmpsb
incl
daa
lret
ret
cmp
addb
mov
shlb
xor
mov
in
mov
push
ljmp
mov
sub
add
inc
out
jg
call
inc
adc
and
into
adc
or
xor
jno
pop
lahf
fidivrs
lcall
jle
outsl
bound
mov
mov
cltd
mov
jnp
ret
or
decl
push
cmc
leave
jnp
gs
xor
mov
bound
fcomip
aas
shlb
dec
dec
xor
push
add
or
dec
scas
xorb
decl
ret
push
push
mov
xchg
int3
scas
jle
mov
xchg
addr16
jg
flds
cwtl
mov
pop
or
call
xchg
push
push
add
sub
cmpl
jae
jne
icebp
lcall
and
negl
cld
xor
ljmp
mov
hlt
sub
mov
imul
jmp
lods
lahf
pusha
mov
inc
pop
mov
movsb
cltd
mov
inc
jmp
jge
xor
inc
jno
mov
imul
mov
adc
add
aam
stc
push
lds
aad
call
mov
jo
es
leave
test
rcrl
pop
ret
es
cmp
mov
push
dec
lahf
fldcw
in
and
bound
stc
xor
lret
cmc
dec
inc
lcall
fsubs
inc
loopne
test
mov
dec
jb
add
pushf
test
std
jg
loop
hlt
pop
jmp
lahf
scas
push
sbb
and
subl
pop
sbb
pushf
xchg
dec
add
or
addr16
fwait
xchg
stc
aaa
test
inc
outsb
and
decl
icebp
xchg
cmp
adc
and
sub
imul
lcall
imul
push
push
rorb
xchg
int3
xor
out
cmp
movsl
mov
call
xor
jg
sub
and
cltd
fs
jp
sbb
call
cld
lahf
jp
insb
mov
loopne
sbb
jb
cmpsb
pop
popa
adc
ljmp
dec
out
adc
xorl
and
imul
rcrb
stos
jmp
in
dec
mov
add
adc
imull
popf
adc
xor
sar
decl
pop
xchg
xor
sbb
push
dec
leave
movsl
sub
inc
mov
dec
push
and
imul
lcall
lahf
repnz
cmp
pop
xor
mov
mov
aad
rcrb
cmp
pushl
push
push
sub
mov
in
lcall
lock
cmp
clc
adc
in
jmp
sar
cmpsl
sarb
in
xor
out
clc
push
mov
mov
add
ljmp
in
adc
add
cld
das
cli
sbbb
pushf
mov
int3
daa
lea
pushf
outsl
es
lcall
or
repz
cli
cmp
push
push
pop
or
cmp
ja
push
lods
es
shlb
loop
xchg
jge
inc
ret
sti
test
insl
aaa
incl
pop
xchg
imul
cs
dec
jbe
adc
rcll
add
xchg
arpl
xor
call
inc
aas
xchg
sbb
sti
or
adc
leave
addr16
jg
int3
pop
inc
xor
mov
or
or
push
pop
bound
push
mov
mov
pushl
test
ljmp
inc
aaa
pop
out
imulb
cmp
mov
lcall
or
ljmp
adc
fldcw
lcall
dec
inc
sahf
cltd
mov
xchg
in
test
cmp
jo
decl
out
in
aas
dec
sbb
lcall
sbb
push
add
jno
cli
and
cmp
ja
sar
decl
repz
add
cs
cmpsl
out
jno
ljmp
insl
fdivrl
call
sbb
repz
daa
mov
cmp
call
push
and
and
mov
stos
icebp
incl
dec
mov
sub
mov
or
fsub
mov
shrb
push
cmpsb
xchg
push
sbb
fs
popa
daa
ljmp
push
pop
mov
lea
xor
dec
pop
test
in
cwtl
or
sbb
fcomps
sahf
imul
lcall
mov
out
add
lods
icebp
push
les
mov
mov
inc
pmulhuw
mov
sbb
jbe
jmp
andb
dec
pop
hlt
ljmp
push
xchg
cltd
pop
jp
idivl
cmpsb
outsb
mov
in
gs
decl
dec
lds
scas
push
lret
or
repnz
std
pop
sbb
pusha
mov
repnz
loopne
js
cltd
loopne
xchg
nop
stos
cmc
add
insl
xchg
lret
mov
and
outsl
inc
mov
incl
pop
dec
adc
and
xchg
sbb
xchg
imul
les
mov
fimuls
jmp
out
push
pop
adc
push
outsb
or
fs
nop
sbb
js
fcomp
xchg
mov
xlat
adc
shlb
push
leave
push
dec
das
mov
ja
ret
pop
jle
movsb
cmpsb
sbb
or
daa
nop
into
sbb
mov
or
jns
daa
xchg
imul
mov
xrstor
popf
testl
bound
push
dec
xchg
push
imul
pusha
popf
lahf
int3
or
and
jecxz
jns
and
pushf
dec
pop
jg
mov
or
pop
stc
lock
mov
push
lea
sarl
push
call
clc
lds
xor
add
sub
jmp
inc
push
or
jle
aam
mov
cmp
dec
xor
arpl
dec
popa
mov
fimuls
shl
addl
ja
faddl
bound
push
in
mov
inc
mov
enter
sbb
aaa
test
out
xchg
jg
call
leave
insb
lds
jecxz
jns
mov
popa
sub
jl
mov
pop
icebp
xchg
fldl
inc
dec
mov
dec
xor
pop
int3
out
cmpsb
jmp
inc
arpl
movl
sahf
das
and
mov
inc
xchg
inc
hlt
fcomps
call
dec
daa
test
adc
xor
nop
xchg
enter
jno
push
adc
sti
xchg
arpl
std
inc
in
pushf
cmp
call
je
fmull
xchg
add
je
enter
testb
call
jg
mov
testb
dec
sarb
push
cmp
xor
shll
fnsave
push
out
and
ss
jge
scas
arpl
movsb
ffree
lods
pop
dec
mov
lcall
mov
xchg
xor
decl
cmp
insb
xchg
out
decl
and
jnp
lahf
mov
jge
jns
push
dec
mov
pop
mov
jge
pop
xor
pop
cmc
incl
sub
scas
pop
js
rcrl
lret
cmp
lea
incl
lods
mov
mov
imul
add
fs
outsb
pop
sub
sar
call
aad
push
scas
pop
xor
out
push
adcb
cltd
jecxz
leave
cwtl
jbe
jle
shlb
mov
inc
or
repz
inc
lea
fisubrs
jl
ljmp
cld
jg
packssdw
inc
dec
dec
lret
sbb
jne
lcall
out
repnz
scas
dec
xchg
inc
sbb
insb
dec
in
xchg
add
lock
ljmp
arpl
out
repnz
mov
fs
int
xor
add
jle
add
iret
jne
pushl
ljmp
jno
pop
add
push
gs
dec
cmpb
lods
mov
outsl
ljmp
jb
add
or
sahf
dec
js
adc
pushf
and
mov
and
jns
out
in
dec
push
xlat
fwait
dec
sbb
mov
incl
push
xor
and
push
scas
cld
mov
repnz
add
icebp
dec
ret
sub
jmp
cld
sahf
push
xor
xor
mov
cmp
shl
dec
or
inc
pop
push
fiadds
int
mov
mov
scas
aad
mov
fsub
pop
pop
pop
mov
std
es
or
mov
push
addr16
jnp
inc
imul
inc
insb
inc
inc
add
sbbb
fistpl
aas
das
pop
cld
mov
loop
jbe
sub
dec
jae
and
popa
sub
das
sarb
ljmp
xor
add
jno
push
cmp
imul
out
inc
mov
sar
stos
mov
or
inc
clc
xor
mov
inc
daa
fcomip
mov
adc
and
push
mov
pop
mov
decl
decl
sti
dec
mov
mov
fwait
rorb
out
fidivrs
jg
add
sar
incl
mov
loop
das
pop
movsl
add
add
push
lret
ret
repz
mov
cmp
cmp
and
loopne
sbb
aaa
aad
mov
adc
cmc
pop
dec
pop
mov
test
cmpsb
or
call
nop
mov
cwtl
jno
imul
orl
add
lahf
cwtl
lcall
addr16
shrl
pop
loop
cmpsb
dec
mov
xchg
fsubr
pop
mov
jno
ljmp
nop
clc
outsl
in
out
or
lcall
movsl
xlat
rolb
push
cld
call
pop
inc
dec
xchg
dec
int3
jle
into
hlt
inc
inc
push
push
arpl
push
ljmp
gs
mov
je
mov
int3
xor
ljmp
cmp
jns
add
lahf
sbb
cmpsl
fisubrl
push
out
rcll
jg
ljmp
push
aam
ret
push
int3
lret
mov
adc
mov
ret
dec
push
ljmp
fnstenv
mov
jmp
mov
push
mov
push
mov
mov
in
mov
lock
ljmp
nop
add
or
pop
dec
stos
mov
hlt
test
mov
xor
push
mov
mov
jmp
push
std
mov
xor
inc
lock
psrlw
fcomps
sti
mov
call
inc
mov
mov
insl
jns
dec
out
and
jmp
add
movsl
ret
mov
jmp
jno
loopne
push
outsl
cmpsl
xchg
aad
in
jbe
dec
push
ljmp
movsl
and
xchg
inc
inc
fwait
pop
pop
jmp
ret
dec
jg
mov
jne
jb
lods
or
xor
call
jmp
adcb
add
cmc
in
or
dec
pop
sarb
faddl
pop
cmp
lods
sti
lcall
hlt
pushf
cltd
pop
sub
cmp
imul
jb
mov
push
loop
jg
fucom
xchg
arpl
idivb
add
cmp
stos
push
dec
or
add
fidivrl
popf
sbb
dec
test
into
mov
test
jbe
mov
xchg
bnd
stc
int3
cltd
inc
cmp
stc
add
mov
pushf
pop
ror
and
mov
popa
push
jmp
ljmp
mov
push
dec
mov
add
lods
lcall
popf
push
pop
add
cld
mov
pushf
mov
cmpsb
xor
les
add
mov
add
pop
and
out
dec
fidivs
fwait
jo
insb
in
xor
mov
rclb
jecxz
cmp
mov
int
jl
icebp
call
scas
inc
sub
sbb
rcr
dec
cmpsl
inc
xchg
pushl
sub
das
sub
pop
push
hlt
pop
cmp
hlt
fisttpll
mov
loop
dec
ret
int
jne
rcrb
fistpll
negl
fists
push
lcall
cs
sub
jmp
frstor
pushf
jbe
xchg
cld
xchg
cld
mov
dec
mov
fcoms
outsb
mov
sub
mov
ljmp
decl
or
xlat
jl
data16
sbb
aad
jbe
paddusb
jp
lea
mov
mov
xchg
push
pusha
sub
cmpsb
pop
pop
pop
orb
adc
jmp
cmp
div
icebp
movsl
mov
jb
sbb
ds
lea
mov
mov
inc
jo
jle
incb
adc
cmp
leave
mov
enter
stc
dec
fisubl
inc
fldl
lret
xchg
jg
out
jmp
mov
pop
ret
lds
aaa
pushl
cld
lcall
hlt
push
xlat
sbb
enterw
je
sbb
loop
incl
push
call
lock
mov
aam
into
fdivs
test
incl
sti
cmp
je
adc
cmc
call
pop
pusha
std
int3
hlt
sbb
addl
mov
mov
fcmovnu
inc
movsl
cmp
imul
clc
loope
hlt
dec
xchg
xlat
pop
xchg
mov
xchg
jae
xor
outsl
repz
pop
xchg
xor
cltd
inc
inc
or
std
push
xchg
outsl
dec
sub
pop
jnp
pop
mov
cmp
inc
cmp
ljmpw
mov
ss
cmp
cmpb
add
adc
loopne
cmp
decl
cmp
mov
cltd
push
ret
jmp
jmp
pop
fs
lods
push
jno
addl
loopne
je
test
pop
mov
xchg
fmull
dec
test
adc
mov
push
fcomip
ljmp
lret
xchg
mov
rorb
pushl
pop
pop
mov
mov
dec
repz
stos
in
jne
push
lock
arpl
pop
pop
mov
ljmp
jae
insb
jb
repz
mov
xor
out
sbb
ljmp
out
aam
push
lods
xchg
and
dec
xchg
sub
enter
inc
lds
scas
or
jmp
add
repnz
stos
xchg
fdivrp
xor
sti
ret
test
push
movsb
sbb
cmp
decl
dec
repnz
adc
or
daa
cmp
inc
mov
sbb
repz
loop
inc
out
push
pushl
test
inc
push
in
dec
shlb
xchg
xchg
and
push
or
aam
stos
movsl
dec
push
xchg
ss
jmp
mov
cld
rorb
mov
inc
es
jg
shlb
ljmp
cmp
sarl
sbb
pusha
outsl
inc
adc
sbb
jmp
cmp
rol
ret
loope
dec
sub
mov
lcall
icebp
mov
scas
repnz
imul
cli
mov
incl
in
cld
daa
mull
adc
pop
sbb
inc
popa
sub
xchg
inc
xchg
and
sbb
lcall
sub
or
add
cmc
ja
mov
xchg
mov
xchg
in
inc
or
lcall
mov
std
out
in
sbb
sahf
mov
jge
dec
pusha
mov
shrb
dec
cmpsl
inc
shll
xchg
pop
inc
faddp
aam
mov
pop
fldcw
pushf
xchg
push
sbb
les
push
cmc
fistl
xor
ror
nop
call
adc
pop
int3
mov
mov
inc
xor
fidivs
inc
mov
xor
lret
lock
jb
aad
adc
mov
call
lcall
test
smsw
stc
dec
popa
dec
ret
lods
xchg
mov
cmpsb
jmp
orb
jns
xchg
inc
fbld
and
push
inc
adc
movsl
cmpsl
mov
clc
mov
ss
cmp
ljmp
loop
sbb
cmpb
sbb
pop
scas
arpl
popf
cmpsl
adc
nopl
pushl
fildll
jecxz
add
dec
pop
ljmp
pop
jecxz
ret
outsl
fdivs
mov
nop
lcall
mov
or
pop
lret
xor
pop
jb
dec
ja
frstor
lock
pushl
paddusw
rcrb
mov
or
test
push
test
ljmp
xlat
sti
loop
push
jle
sub
or
dec
ret
mov
fdivrs
shrb
push
jg
mov
movsl
add
xor
inc
pop
pushl
or
sbb
cli
mov
dec
inc
push
or
jb
lcall
stc
ljmp
add
inc
cmp
mov
xchg
cmp
pop
xchg
leave
gs
cmc
xchg
lcall
stos
les
idiv
push
lret
shrb
test
fucomip
sbb
pop
aam
out
jmp
push
sub
and
xchg
and
add
out
push
xchg
fnstsw
mov
mov
outsb
dec
jno
cmpb
mov
inc
je
or
daa
jbe
push
das
roll
cs
addr16
add
out
movsb
adc
mov
and
jo
or
push
mov
cs
incl
add
pop
sbbl
icebp
mov
test
adc
xor
and
movsl
das
fsubl
imul
xchg
pushl
icebp
iret
out
sub
push
jmp
xchg
lret
mov
test
enter
out
cmp
pushf
jg
testb
lret
js
in
inc
int
in
out
pop
jecxz
popf
hlt
pushf
faddl
js
sub
pushl
cld
jp
xor
das
sub
rol
aaa
rcll
push
adc
xor
incl
pop
stc
adc
xchg
push
lea
dec
scas
leave
and
inc
stos
in
and
call
cmpsl
movsl
inc
clc
dec
sub
jg
sub
xlat
ds
in
cmp
lret
sahf
push
mov
add
mov
icebp
adc
add
xchg
mov
adc
shll
lcall
dec
sub
addb
faddl
ljmp
lcall
or
push
or
dec
xchg
jecxz
pop
add
movsl
dec
xor
dec
push
and
ljmp
cli
call
test
and
pop
fiaddl
loopne
pop
fs
lcall
cs
mov
mov
mov
mov
ret
or
mov
test
pop
cmc
inc
pop
cmp
rcll
xchg
out
lods
movsb
xchg
push
dec
pop
adc
scas
pop
decl
cmp
nop
add
dec
jg
iret
dec
pop
cld
sarb
or
ljmp
dec
dec
sahf
sbb
scas
mov
dec
adc
push
sbb
enter
decl
or
jp
add
loopne
std
jg
shrb
sub
std
std
incl
xchg
pop
push
in
and
clc
push
mov
fistps
jo
fs
lds
pop
rcrl
cld
cs
cli
pop
inc
stc
dec
dec
loop
call
loopne
fbstp
or
lods
mov
dec
aam
call
incl
pop
add
shlb
sub
adc
sub
jg
cmp
pushf
xchg
jb
and
decl
push
dec
popa
sbb
sub
pushl
lcall
sbb
push
xchg
and
dec
sarl
js
add
mov
mov
push
inc
orb
out
iret
push
xor
call
in
mov
or
das
cltd
sub
dec
shlb
dec
and
ljmp
cmp
mov
xorb
pop
movsl
and
or
lahf
insl
scas
aaa
inc
ret
push
into
mov
addr16
jbe
xchg
xlat
push
xor
jne
clc
cmovl
call
jo
call
xchg
fstl
cmpsb
iret
out
jmp
mov
aas
sbb
inc
lret
push
rcrl
popf
mov
fadd
add
mov
push
cs
push
and
cmc
pop
cltd
inc
mov
inc
xor
add
mov
xchg
lahf
mov
dec
cmp
neg
jbe
fsubr
mov
loopne
add
jbe
jle
pop
loop
sti
push
mov
jne
pop
mov
jnp
pop
int3
xchg
iret
movsb
daa
xchg
sarb
outsl
leave
mov
jg
jae
add
outsb
and
inc
jae
movsb
scas
push
sbb
rorl
mov
inc
stc
xchg
pop
or
cld
cmp
push
xor
mov
add
xor
stos
mov
inc
inc
mov
pop
arpl
lcall
repz
jne
inc
ffreep
xchg
stc
jle
dec
inc
sarl
stc
push
insl
sbb
cmpsb
sbb
ljmp
or
add
jne
fnstenv
fidivrl
call
jp
push
dec
cmp
jmp
push
rcr
cmp
dec
fadds
or
leave
test
push
sub
ljmp
mov
pop
push
decl
cwtl
adc
dec
inc
mov
push
repz
pushl
sbb
fsub
mov
fwait
cmpl
and
push
mov
mov
xor
push
hlt
jg
adc
inc
es
push
push
lret
imulb
cwtl
xor
sar
out
pop
pop
fsubl
data16
xchg
or
jae
mov
decl
fnstsw
jmp
jnp
cmp
jnp
sbb
sbb
jbe
mov
push
les
out
sbb
push
cmp
push
adcl
flds
or
sub
call
add
and
test
std
mov
filds
mov
icebp
cmc
iret
or
ljmp
pop
sub
loopne
daa
dec
dec
pop
cmp
or
testl
lcall
call
testl
jecxz
mov
dec
in
mov
loopne
lcall
sub
mov
push
sub
mov
dec
cmpb
mov
fwait
jmp
dec
xchg
xor
imull
adc
pop
sub
dec
mov
incl
in
les
imul
mov
test
decl
mov
aaa
daa
rcll
sub
push
jg
mov
jmp
iret
stos
clc
ljmp
adc
icebp
cltd
pop
icebp
scas
push
dec
into
in
cmpsb
mov
addl
ret
out
pop
divl
jle
arpl
push
cmp
adc
mov
fiaddl
or
inc
pop
mov
cmp
xchg
sbb
xor
lea
test
xor
mov
sbb
call
mov
ds
lret
rolb
push
shl
fucomp
jb
aaa
add
adc
in
ljmp
lock
adc
mov
jae
jecxz
das
popa
insl
xor
call
incl
mov
push
sbb
sub
xor
stos
or
mov
cmc
rcrl
clc
mov
and
aaa
loop
frstor
or
xor
clc
xchg
or
in
test
leave
mov
popa
es
mov
call
daa
mov
jmp
pushf
push
ljmp
stc
lods
push
repz
mov
mov
jmp
xchg
xor
pop
push
mov
test
xor
test
fcoml
xchg
push
mov
adc
mov
push
call
cmp
sahf
stos
hlt
inc
and
cmp
sbb
repz
pushl
jmp
mov
xchg
mov
ret
data16
cmpsl
mov
scas
dec
lods
or
xchg
call
jmp
cmp
pop
jae
outsl
movsb
xchg
cs
decl
hlt
aad
xchg
or
aaa
ds
out
dec
clc
sub
mov
test
pushl
xor
push
jmp
std
inc
sbb
mov
sbb
cmp
xchg
ljmp
loopne
pop
push
cs
add
push
mov
incl
xchg
mov
mov
loop
lock
pop
sub
pop
aaa
dec
filds
fcomip
stc
cmpl
fildl
idivl
push
jns
pushl
push
dec
ljmp
outsb
fidivs
jns
loopne
sbb
lds
out
cmc
into
test
sub
js
pop
iret
jbe
in
ljmp
enter
mov
jbe
mov
sub
pop
xchg
in
in
or
movsb
inc
xor
call
nop
cmp
andl
add
dec
int3
test
mov
adc
subb
add
gs
and
push
int
add
mov
and
and
mov
rolb
push
dec
lcall
xchg
cwtl
or
fs
js
xchg
sub
arpl
or
push
xchg
dec
fwait
rolb
sub
xchg
imul
lcall
lods
sub
sub
and
les
nop
add
into
or
mov
ret
sub
jg
hlt
sti
sub
icebp
adc
dec
fimuls
cmpsb
mov
mov
mov
stos
incl
adc
mov
cmp
cmp
sbb
inc
jg
cmc
call
inc
xlat
cmp
imul
dec
dec
je
rcll
popa
jge
inc
incl
call
adc
roll
stos
inc
or
mov
mov
dec
test
xchg
rolb
and
sbb
dec
cmpl
and
cwtl
pushf
call
in
push
aas
push
mov
cmp
and
jle
pushf
fwait
adc
fisttps
add
icebp
xchg
out
jno
mov
jnp
fdivl
clc
cmp
mov
xor
xchg
idiv
pop
cmc
pushl
jle
xor
cmpb
insl
push
inc
mov
mov
inc
inc
cs
cmp
add
jecxz
repz
sbbb
jg
loopne
repnz
stos
pop
dec
sub
fcoml
pop
cmp
cmp
inc
mov
pop
outsb
scas
dec
rolb
enter
fcmovnu
inc
mov
cmc
cmp
cmpsl
call
mov
sahf
scas
not
leave
jns
or
fdivr
adc
int3
jge
dec
insb
into
push
ror
ja
jg
mov
sbb
lcall
pushf
pop
shlb
pop
lcall
stos
out
cmp
pop
sub
lret
mov
aad
fs
mov
cmp
int
inc
cmp
jmp
inc
mov
push
lds
or
pop
pop
loopne
xchg
pop
mov
push
sub
cmp
insb
gs
fwait
push
call
xor
into
adc
adc
pop
cld
dec
pop
adc
mov
push
adc
push
fucomp
push
pusha
push
lret
pop
fstpl
in
xor
jecxz
imul
pop
dec
jge
cmp
ljmp
scas
xchg
bound
in
fdivrs
sbb
fnstcw
jmp
movsl
mul
add
pop
fwait
cmp
repnz
sbbb
incl
outsb
xor
addl
fsubs
aad
dec
scas
jmp
fbld
stc
loop
or
int3
push
push
jmp
add
sbb
rorl
cltd
sub
sbb
sbb
subb
cltd
addr16
ljmp
jg
cmp
outsl
jl,pt
xor
mov
inc
or
cmp
push
inc
ds
xchg
mov
jb
push
adc
divb
call
das
shlb
test
mov
xor
pop
sbb
xchg
jo
inc
sub
lahf
mov
js
mov
inc
les
movsl
fsubr
into
xor
idiv
decl
stc
aaa
lock
aaa
xchg
jb
jnp
push
mov
rcrb
or
loopne
push
idivl
call
mov
ja
ret
jl
mov
in
stos
jo
mov
mov
scas
fwait
les
incl
shlb
inc
das
pop
dec
aaa
sbb
inc
jb
test
jnp
inc
test
xchg
loope
push
mov
bnd
dec
movl
decl
pusha
stos
int
mov
mov
mov
and
cwtl
into
ss
jge
mov
out
sti
call
fdivr
je
jo
js
inc
mov
jmp
gs
cmpsl
inc
aam
pusha
ljmp
xor
incb
pop
stc
sbb
cli
fs
adc
mov
lcall
sub
scas
jo
pop
aaa
push
mov
stos
xchg
jae
data16
call
mov
dec
lds
popf
mov
scas
mov
gs
cmp
dec
testb
mov
orl
incl
pcmpeqw
iret
fsts
rolb
push
adc
push
xchg
inc
dec
out
inc
mov
cmp
icebp
push
mov
xor
pop
xchg
mov
pop
lret
cmp
sub
mov
mov
cltd
dec
lcall
jae
test
pop
hlt
scas
bound
hlt
aas
subl
enter
add
jmp
lods
lods
jecxz
xchg
xchg
mov
adc
insb
mov
lcall
ret
mov
cmpsb
fcomip
clc
je
loop
sbb
out
or
push
mov
cmp
cmc
ljmp
mov
rcr
cld
or
sahf
xchg
sahf
leave
mov
les
mov
or
mov
out
add
xor
jmp
incl
push
add
cli
hlt
fiaddl
repz
call
push
inc
ja
clc
push
dec
repnz
push
rorb
mov
mov
dec
lahf
inc
inc
movsl
out
icebp
int
jmp
and
dec
adc
rclb
int
call
ds
jecxz
jl
dec
std
dec
add
cmpsl
pop
add
or
add
dec
xor
sub
call
outsb
xchg
out
and
add
mov
fdivs
leave
pop
lea
xor
dec
movsb
inc
stc
pusha
mov
aad
cmp
and
or
dec
jmp
push
xchg
add
xchg
cmp
in
xchg
mov
test
fwait
inc
stc
std
dec
mov
add
pop
xor
and
mov
xchg
xchg
push
neg
adc
scas
jge
xor
dec
push
lock
incl
jmp
mov
lods
xchg
sub
dec
mov
pop
jg
jp
mov
cmp
cmc
push
testb
dec
cwtl
jle
inc
mov
ljmp
push
xor
in
or
icebp
push
ja
addr16
aad
jae
sub
lods
and
sbb
fistps
mov
int
jge
fistl
leave
push
je
daa
js
mov
sub
cld
decl
mov
es
push
cmp
push
sub
dec
lods
cmp
fcmovne
daa
add
jo
jbe
decl
jmp
jmp
out
movsl
jp
push
shlb
mov
jne
adc
mov
mov
fmull
es
shrb
inc
ret
cli
inc
cmpsl
inc
inc
jbe
idivb
notl
jg
cmpsl
jo
add
jnp
bound
cld
inc
and
cwtl
sbb
insl
loop
cmp
pop
call
ficoms
arpl
and
ret
cmpsl
pop
push
pop
cmp
dec
mov
pop
std
mov
fadds
in
lods
lcall
inc
lcall
xor
into
add
xchg
push
pop
test
pop
mov
jmp
jmp
outsl
inc
hlt
push
mov
insb
jl
pop
mov
fwait
cmpsl
xchg
popf
fisubrs
fimull
ret
call
test
add
in
push
sbb
icebp
xchg
cli
in
movb
cmp
mov
dec
pushf
cltd
lock
decl
fwait
fs
andb
mov
leave
or
mov
fidivs
je
inc
push
push
sti
cmpsb
jmp
mov
push
outsb
js
test
jg
daa
inc
cwtl
jg
daa
dec
mov
sbbl
mov
jl
fcmovnb
orb
sub
fcomip
jmp
hlt
loopne
adc
mov
repz
mov
xchg
mov
cmp
test
call
dec
pushf
push
mov
xchg
mov
push
sub
incl
xchg
dec
arpl
stc
daa
push
mov
aas
stos
repz
or
es
dec
mov
xchg
push
std
jle
mov
or
mov
repnz
add
enter
dec
jno
xchg
shl
cld
dec
cmp
push
int
or
arpl
mov
prefetcht0
int
push
call
jp
scas
or
mov
or
hlt
std
insb
ds
iret
xor
testb
cli
jecxz
movsb
push
or
sub
add
pop
fwait
in
testb
mov
jno
stc
lods
cmpsl
int
call
xor
fdivrp
mov
rcll
mov
add
cmpsl
jae
cmp
icebp
sub
sbb
incl
xchg
int3
inc
lret
push
mov
mov
clc
fdivl
lock
mov
and
lods
sub
incl
dec
rcl
xchg
xchg
outsl
addb
mov
arpl
jge
daa
rolb
pusha
cli
pop
jo
mov
inc
clc
mov
pop
push
xchg
dec
pop
xchg
mov
dec
lcall
sub
lcall
fsts
imul
shrl
add
pop
nop
lcall
pop
lcall
xchg
incb
fs
daa
adc
int
fildll
lret
xchg
pop
dec
stos
cltd
ja
jmp
push
inc
pop
out
pusha
ljmp
scas
and
loop
andl
decl
outsb
push
arpl
dec
jmp
add
cwtl
mov
mov
gs
std
call
cli
in
mov
outsl
sti
sub
push
fwait
push
pop
mov
jae
test
mov
mov
pushf
push
xor
add
mov
inc
mov
or
sti
or
add
jbe
imul
adc
sub
or
shrl
decl
inc
cmpsb
or
les
aad
out
dec
mov
xchg
sahf
sub
sahf
test
incb
push
dec
mov
leave
mov
mov
adc
test
add
call
push
jmp
jecxz
outsb
or
fwait
std
mov
adc
popf
jle
jno
icebp
addr16
ljmp
cli
sbb
cmp
in
cli
jmp
adc
mov
sub
cmp
pop
insl
mov
call
ja
jno
lret
adc
or
push
in
int3
mov
jmp
adc
mov
jle
fldlg2
xchg
idiv
mov
out
es
or
rolb
enter
jmp
into
outsl
sbb
or
mov
push
mov
xchg
xor
xchg
cmp
and
mov
xchg
in
push
movsl
hlt
pop
clc
pop
movb
dec
and
xchg
dec
mov
mov
mov
mov
mov
mov
dec
je
or
cmp
mulb
imul
pop
cmpsl
and
decl
test
sub
rclb
popf
rcll
cmp
clc
dec
adc
and
xchg
sub
fnstsw
and
shrl
rcll
or
jmp
or
inc
addb
out
jg
sbbl
and
cli
push
orb
rcll
ljmp
jmp
or
fcomps
sub
jl
add
cmp
imul
sub
mov
mov
and
decl
push
test
cmp
fnstsw
adc
fnstcw
push
sub
push
repnz
xchg
clc
call
scas
cmp
repnz
push
push
std
mov
and
mov
jl
and
in
pushf
daa
dec
mov
sbb
nop
push
nop
in
push
dec
les
idivl
packssdw
push
pop
cmpb
popa
and
pop
je
int
jmp
pop
loop
cmc
mov
loop
xchg
add
and
dec
cli
mov
inc
scas
sahf
pushl
inc
or
add
inc
mov
pop
cltd
test
mov
inc
stos
leave
mov
or
jo
mov
cmp
mov
push
dec
mov
inc
call
aas
cmpl
nop
xchg
cwtl
or
mov
sbb
or
sbb
sbb
decl
jb
xor
mov
push
sbb
ljmp
in
mov
lcall
mov
inc
pop
jnp
xchg
fisubrs
movsb
scas
lahf
jb
sarb
jno
dec
inc
jp
pushl
push
push
push
inc
xor
leave
adc
xor
cmp
gs
jg
pushl
in
loope
ja
shrb
out
aaa
cmp
mov
sti
out
scas
jbe
adc
incl
cmp
test
cmpsl
outsb
mov
mov
mov
mov
popf
gs
add
jns
cmp
scas
push
fdivr
pop
or
sti
cmp
push
cltd
or
nop
lds
mov
xchg
lret
jo
pop
pop
neg
mov
inc
adc
ljmp
push
cmp
xorb
out
push
cmp
dec
sub
cltd
xor
imul
push
xchg
orb
sahf
rorb
inc
mov
out
fs
push
dec
cmp
cmp
xlat
sbb
inc
stos
in
lock
movsb
mov
add
push
in
add
or
imul
popf
mov
lods
stc
xchg
push
dec
or
roll
jmp
push
lods
add
shlb
mov
loop
xor
jle
xchg
rsqrtps
mov
sbb
add
sbbl
mov
sbb
push
jne
cmp
insb
push
arpl
or
negb
cmp
mov
ljmp
add
push
mov
aaa
pop
xor
fcmove
je
test
mov
pushl
sub
bound
xchg
imul
mov
out
div
out
cmp
out
cli
call
iret
pop
push
popa
mov
sub
add
fdiv
mov
imul
decl
sub
lahf
xor
or
inc
xchg
pushl
mov
add
mov
add
inc
jl
and
pushf
ret
lock
mov
push
mov
dec
push
cmc
incl
enter
rcrl
mov
dec
ss
and
negb
jge
mov
rorb
js
push
sbb
lcall
popf
sti
lcall
out
dec
leave
mov
push
jp
aas
mov
enter
imul
jg
or
push
or
fcomp
adc
mov
sub
cmp
lcall
movsb
cmp
jmp
insl
pop
lret
or
repnz
aas
sub
pop
mov
pop
xchg
push
fsubl
mov
jl
push
and
leave
pop
or
nop
sbb
aad
out
fimull
iret
or
call
popa
mov
xchg
lock
imul
popf
pusha
inc
cld
incl
cmp
mov
stos
jmp
decl
cmp
cltd
pop
out
fldl
adc
cmpb
mov
xchg
xor
decl
push
js
dec
test
incl
mov
mov
fucomip
test
shl
mov
je
mov
js
xor
test
xchg
mov
jmp
leavew
push
jo
jg
jbe
sbb
xor
call
pop
repz
add
xor
inc
add
incl
daa
imull
clc
mov
imul
sbbb
jae
jle
mov
into
test
jl
in
ret
jecxz
pushl
fmuls
mov
imul
jbe
imul
pop
cmp
in
loopne
and
ds
aad
pop
sub
xchg
lock
out
sub
or
out
jmp
jmp
aaa
into
in
sti
das
mov
jb
dec
inc
mov
imul
repz
std
lcall
push
clc
inc
xchg
mov
mov
stc
inc
cmp
sbb
arpl
js
adc
mov
sbb
cwtl
sub
hlt
adc
pusha
in
shll
repz
xorb
sbb
and
ljmp
stos
pop
sbb
je
inc
test
pop
stos
mov
in
adc
movsb
leave
out
cltd
out
jo
insb
push
sbb
js
movsb
aam
push
mov
xchg
cmc
xchg
inc
add
test
lcall
pop
mov
mov
arpl
inc
dec
cld
pop
inc
inc
and
movsl
and
aad
incl
mov
insl
push
out
jae
inc
pop
jae
mov
jbe
xorl
cmp
nop
pop
call
cmp
or
pop
push
push
xchg
adc
ljmp
dec
and
adc
out
mov
repz
fidivrs
inc
mov
daa
outsl
fwait
push
fidivs
decl
xchg
aas
cmp
bound
outsb
cmpsl
jnp
xchg
fwait
cmp
outsl
loop
jecxz
out
cld
mov
outsl
pop
clc
in
inc
adc
jb
out
repnz
paddusb
xlat
xor
lret
xchg
inc
mov
ljmp
into
xor
into
pop
leave
or
outsb
fnstcw
cmpl
cmp
xor
xlat
enter
jecxz
mov
jmp
dec
movb
shrl
cmp
jle
scas
sbb
fdivl
push
dec
dec
jnp
jmp
test
push
fs
in
mov
in
dec
inc
inc
cmpsl
ret
xor
push
js
pushl
pop
mov
in
add
aam
mov
pop
idivl
jmp
mov
dec
inc
popa
cmp
sbb
mov
stos
or
fcomp
xchg
push
mov
xor
aad
decl
pop
pop
push
or
adc
mov
outsb
and
ret
addb
adc
sti
inc
int
push
loopne
stos
imulb
nop
call
inc
mov
hlt
xchg
lret
dec
in
pop
mov
jne
stos
jnp
push
jb
mov
loop
and
inc
add
adc
sub
popf
xchg
push
test
or
imul
cmp
out
cli
decl
leave
je
imul
enter
dec
das
fs
push
xchg
insb
fs
dec
mov
xor
cmc
xchg
or
popf
dec
add
xchg
jo
js
arpl
xchg
call
shrl
stc
adc
imul
mov
cmp
lahf
pop
dec
call
xchg
out
jp
addr16
sbb
inc
or
adc
fwait
cmc
mov
aam
jg
xchg
push
lret
jp
jp
xchg
xchg
mov
dec
jp
shll
pop
push
call
xchg
xor
lea
push
push
mov
ja
and
ljmp
dec
cld
push
lds
pop
jmp
movsl
xor
rclb
inc
jne
sbb
fdivrp
decl
jp
mov
mov
ja
cmp
movsl
jle
aad
insl
stos
and
adc
sbbb
mov
jg
add
sub
sbb
jg
push
daa
int
or
in
and
or
dec
dec
cmp
mov
test
jle
add
xor
cmc
testl
sbb
push
ret
push
inc
push
loopne
sbb
jle
dec
cltd
ret
adc
sub
call
push
xchg
adc
push
sbb
mov
inc
nop
pushl
fistpl
hlt
dec
xchg
inc
or
std
into
add
and
loopne
xor
jmp
popf
movsb
nop
ds
dec
push
sub
pushf
mov
test
or
add
inc
and
dec
scas
cmp
mov
mov
loop
aam
mov
cli
xor
js
mov
scas
sub
hlt
decl
pusha
push
push
stos
adc
loope
jns
testb
stos
cmp
cli
lret
mov
xor
ror
outsb
mov
fldenv
decl
jae
scas
dec
pop
pop
push
dec
cmp
xor
stos
and
nop
leave
lods
loop
xchg
jg
dec
push
cld
or
jmp
or
lahf
mov
sub
jmp
pop
cli
jno
xor
pop
das
shl
mov
jo
ljmp
jmp
fsubrl
or
or
stc
mov
and
xor
into
bound
out
ud0
ljmp
adcl
jbe
insb
mov
pusha
ja
cmp
xlat
xchg
call
lods
popf
push
push
sti
in
dec
mov
loop
inc
in
fcomp
or
mov
pop
jne
xchg
adc
adc
sbb
in
mov
and
jmp
adc
vphadduwd
lret
pop
xchg
stc
cmp
mov
adc
incl
cmpsb
aam
cmp
cld
subb
mov
xor
ljmp
dec
cld
xchg
xchg
cltd
jnp
pop
adcb
sbb
jmp
push
mov
cld
in
divl
js
mov
xor
leave
out
in
iret
mov
adc
push
out
stos
mov
add
test
jge
shrb
sub
movsl
push
scas
jg
mov
sbb
loop
sub
mov
xchg
add
call
cmp
addr16
and
dec
mov
ret
push
rorl
pop
jmp
mov
ret
arpl
mov
lcall
inc
out
fst
pop
pop
mov
add
xor
cmp
jne
inc
addr16
and
xor
sbb
inc
mov
adc
sub
ljmp
push
push
pop
and
shll
mov
xchg
push
fidivrs
fxch
dec
iret
lods
std
decb
and
cmp
pop
adc
cltd
addl
adc
add
mov
pushl
test
je
push
dec
lahf
sarb
es
int3
jne
lock
sti
push
lock
fsubrs
stc
leave
rclb
inc
mov
xor
push
out
or
in
cmpl
jo
add
fdivrs
loope
mov
ss
adc
push
repnz
xlat
inc
mov
jmp
rorb
out
sbb
pop
jle
lret
stos
sbb
in
cli
and
roll
cmp
or
push
js
stos
mov
out
xchg
xchg
mov
adc
xchg
js
sar
or
jb
jae
dec
jne
mov
and
fsub
rcr
lock
cmp
adc
mov
xchg
sbb
lods
out
out
cs
lcall
mov
mov
or
lds
shl
out
mov
sub
nop
incl
jno
mov
insl
xchg
push
stos
push
rcl
adc
in
mov
incl
cmp
jnp
push
sbb
mov
add
scas
mov
jnp
sub
inc
cmp
mov
loope
stc
int3
test
jns
dec
add
imul
clc
andl
decl
sbb
inc
jns
dec
stos
int3
pop
jecxz
std
and
sbb
cmp
cmp
mov
mov
add
jmp
sbb
xchg
in
adc
dec
daa
cmc
pop
fnstenv
pop
xchg
push
test
ja
icebp
adc
repz
fcoms
in
call
ljmp
dec
pop
or
nop
adc
out
out
push
imull
nop
andps
mov
das
incl
adc
popa
int3
add
or
bound
aaa
lret
lret
fcmovu
sti
iret
sarb
and
pop
incl
cld
push
rclb
outsl
loop
sub
pop
mov
mov
xchg
xor
xchg
aam
out
and
mov
fwait
es
and
je
push
xor
push
mov
inc
sub
jmp
popf
cmp
aad
sub
pushl
xor
je
int
xor
call
pop
scas
jo
xor
jae
mov
lea
lret
cmp
cmp
pop
ret
cmp
sbb
inc
push
sbb
in
adc
inc
push
arpl
decl
jns
cltd
sub
jp
pop
and
ret
pop
cmpl
jle
sbb
mov
pop
jmp
fwait
jne
gs
cmpsb
pop
stos
mov
push
fwait
sahf
xchg
loopew
or
dec
mov
pushl
addr16
popf
popa
jno
sub
inc
adc
push
pop
and
fcomip
out
mov
mov
cmpsb
loopne
scas
cmp
pop
notl
rcr
test
scas
stc
hlt
xchg
enter
pop
push
jecxz
imull
push
push
sbb
and
cmp
fldenv
jnp
mov
divb
xor
xor
mov
cwtl
dec
pop
jmp
lret
xchg
imul
xchg
divb
fcoml
xchg
cmp
push
arpl
out
js
loopne
or
int
scas
push
cmp
push
iret
add
and
sar
ljmp
xchg
orb
pop
mov
dec
or
sti
andl
ds
jg
add
inc
cmpsl
cmp
and
cmp
ret
data16
cmp
jg
lahf
inc
xor
sbb
loope
movsb
xor
imul
mov
pushl
push
in
in
dec
scas
jmp
pop
mov
pop
cmp
pop
jo
jmp
in
jle
lods
jmp
pop
push
insb
mov
cmc
aam
scas
nop
stos
or
add
lret
shll
shll
ljmp
test
hlt
adc
idiv
icebp
jmp
lock
sbb
les
jl
xchg
je
ja
mov
or
iret
xchg
roll
cmpsb
cmc
arpl
mov
and
lcall
into
mov
movsl
inc
mov
and
mov
lret
ficompl
ljmp
lods
pop
movsb
xchg
add
imul
inc
mov
pop
gs
jnp
lcall
mov
pusha
adc
dec
mov
fsqrt
xchg
in
pop
ret
lods
xor
inc
rclb
ljmp
fiaddl
lahf
fisubrs
mov
xchg
xchg
addl
or
mov
pushf
cli
je
sahf
or
aas
cmpsl
faddl
sti
pop
inc
mov
mov
cmpsl
push
insb
add
mov
test
repnz
outsb
cmpsb
mov
mov
aam
lds
inc
mov
and
aaa
push
sbb
repnz
mov
sahf
cmp
mov
inc
xor
movsl
dec
push
jnp
mov
aam
icebp
lock
pop
insb
sarb
incl
loop
andb
add
mov
mov
data16
enter
clc
xchg
xorb
incl
sub
clc
minps
sub
mov
dec
cmpsl
jle
test
push
ss
decl
adc
or
mov
pop
xchg
pop
mov
scas
xor
insl
out
int
adc
sarl
in
dec
push
js
jns
jmp
mov
mov
sahf
sub
adc
in
scas
jbe
cmpsl
xchg
outsb
pop
adc
mov
fmuls
dec
pop
push
test
adc
and
movsb
dec
mov
call
sar
xor
loop
push
ret
jae
mov
mov
mov
int3
inc
mov
lahf
pop
decl
mov
fiaddl
fcmovne
sub
adc
jg
sub
call
mov
pop
faddp
sub
jmp
std
test
cmp
pop
das
mov
aaa
shlb
lahf
aam
and
decl
adc
pushf
scas
cli
mov
mov
jle
xchg
jb
mov
arpl
xchg
lcall
xchg
les
jge
cmp
or
sbb
xor
cmpsb
sub
adc
mov
jmp
xor
in
xor
test
sub
rorl
xchg
push
push
rorb
int3
dec
pop
cmp
xchg
fstl
xchg
xor
in
mov
jle
push
das
ret
in
loop
popa
into
mov
shll
jmp
pop
push
cmp
adc
insb
sub
cmp
jmp
not
sub
sbbl
mov
inc
inc
iret
push
rol
dec
repz
mov
jg
mov
jl
pop
pop
cli
test
outsl
sbb
jl
gs
mov
scas
sbb
call
pextrw
jnp
aam
xchg
mov
lods
nop
inc
das
cs
data16
es
xor
pushf
dec
ror
test
dec
push
out
or
repz
inc
mov
fisubs
pop
dec
jns
mov
insb
xor
jno
in
sub
xor
sbb
cwtl
sub
call
cmp
xor
sbb
jo
mov
mov
outsl
sarl
mov
ljmp
hlt
jne
cmp
mov
clc
sub
cmpsl
inc
negb
clc
int3
notl
call
mov
and
int3
xchg
mov
add
sbb
jle
test
call
sub
stos
push
sti
in
lods
inc
mov
sti
adc
xchg
loop
outsl
out
push
push
pop
lds
pushl
jae
mov
es
cmc
dec
lods
movsb
xor
roll
arpl
decl
test
scas
gs
int
sub
shrb
fwait
sarb
or
jmp
cmp
xor
loope
add
fsubr
xor
rol
pop
inc
repnz
mov
cli
xchg
add
outsl
xlat
adc
subb
ret
sub
sti
push
mov
dec
sbb
mov
push
mov
mov
mov
imul
je
lcall
jae
test
data16
fsubrp
push
lret
push
adc
repz
sub
mov
push
test
incl
ljmp
xchg
add
jmp
add
ljmp
pushl
or
dec
lods
pop
jbe
adc
mov
or
xchg
imul
notb
sbb
das
data16
inc
incl
and
fs
rorl
jb
jno
sbb
or
std
jmp
aam
cmp
push
stc
sahf
pop
pop
repz
shr
sbb
and
inc
xchg
jmp
xor
add
stos
sub
rorb
lahf
into
jmp
sub
adc
movsl
in
sub
xor
imul
push
xor
loopne
or
fstp
push
jg
pushl
sub
cmp
dec
mov
or
daa
pop
lcall
dec
out
pop
and
add
insb
iret
stos
repz
aad
icebp
mov
mov
pop
mov
lods
pop
loope
dec
jp
inc
call
adc
sbb
mulb
nop
dec
mov
inc
lods
mov
lods
ss
inc
push
ljmp
aas
jns
movsl
lods
mov
dec
mov
bnd
fisubrs
push
stos
sub
int
pushl
inc
adc
test
iret
inc
add
add
add
andl
xchg
lcall
in
xchg
or
jg
aas
cmp
or
or
mov
push
incl
out
imul
cmp
pop
push
dec
xchg
out
dec
popf
movsl
jle
les
push
idivb
fdivs
ret
pop
test
sbb
in
rolb
xor
out
aaa
adc
int3
cmp
cmp
in
fcoms
sbb
pop
mov
push
push
icebp
push
pop
jge
jl
call
cmp
adc
imul
imul
mov
pop
std
jae
std
jnp
bound
push
xchg
xchg
add
popa
decl
shll
adcb
pushf
jle
arpl
movsl
or
sub
je
fdiv
insb
cltd
shll
mov
cwtl
ret
movsb
setne
pop
repz
dec
mov
adc
dec
mov
xchg
popf
iret
xor
sti
pusha
rcrb
mov
or
outsl
xchg
sub
lret
add
jecxz
jmp
pusha
dec
clc
jecxz
scas
dec
jno
push
ret
push
and
movsl
aad
mov
jg
or
and
inc
jecxz
sub
rorl
jmp
idivb
lret
and
push
orb
add
push
jne
mov
cmc
es
clc
ljmp
adc
push
int
out
inc
out
dec
mov
inc
adc
pop
cld
outsl
xor
inc
nop
mov
mov
xchg
aam
push
insl
fcmovbe
mov
inc
jge
xor
std
xchg
addr16
ds
inc
mov
lds
mov
js
inc
sbb
jno
mov
pop
int
mov
lahf
mov
xlat
decl
cmp
pop
mov
les
iret
mov
push
xor
into
mov
lods
jp
and
push
outsb
mov
cmp
sbb
decl
or
stc
sub
rcrw
push
stos
lock
aad
inc
jge
and
mov
repnz
add
pushl
xchg
cltd
lret
int
sahf
bound
or
std
and
int
in
aam
cmp
sub
dec
adcl
sbb
dec
xchg
mov
cmpsb
sub
cmp
mov
dec
mov
adc
out
sub
push
cmp
mov
or
call
xchg
lret
push
jg
adc
xchg
xor
push
cmp
dec
adc
cmpsb
fimull
into
add
sub
push
or
fildll
mov
add
popl
imul
fwait
jle
outsl
adc
pop
and
js
out
mov
insl
pop
jmp
jp
out
pusha
out
xchg
lcall
cmp
sbb
adc
outsb
xchg
cli
mov
or
sahf
sub
push
jne
mov
or
outsb
xchg
push
inc
shlb
inc
mov
sbb
fsubr
push
ret
shlb
sub
mov
imul
jmp
jae
jle
mov
gs
outsl
aam
lods
outsl
loop
add
cmpsb
sbb
leave
ljmp
cwtl
rclb
imul
arpl
sbb
sar
inc
jle
insl
dec
xor
out
scas
mov
insb
and
loop
push
inc
scas
mov
jno
out
cmc
scas
adc
xor
pop
ljmp
cmpsb
and
cmpb
incl
adc
xlat
cmp
inc
ss
pop
gs
mov
imul
or
mov
shll
dec
push
mov
scas
ret
aaa
das
mov
pushf
fists
pushl
or
sbb
sbb
add
fldcw
sti
add
in
jo
xor
loopne
incl
inc
mov
rcrb
jl
loopne
scas
call
sahf
jg
and
aas
cltd
aas
add
js
mov
aam
ja
js
mov
inc
pushl
mov
jns
sbb
mov
lret
insl
mov
fdivrl
push
fwait
xor
je
ret
adc
decl
pop
fs
xlat
out
cwtl
or
mov
sbb
jne
xchg
adc
or
or
ret
call
mov
test
fucomip
stos
lods
jbe
popa
popa
xchg
and
mov
call
ljmp
jo
sarb
das
xor
mov
jb
adc
sbb
pop
adc
jbe
hlt
mov
xlat
outsl
lods
in
add
nop
cs
cmp
push
xor
xchg
xor
ljmp
cli
inc
push
sub
jecxz
lret
xlat
mov
push
sub
and
sub
push
fstpl
call
jg
mov
pop
pop
cmp
jecxz
movsl
push
push
ficompl
cmpsb
sub
add
jmp
out
sbb
dec
fisttpl
adc
cmpsl
sbb
call
push
mov
cmp
enter
add
jae
aad
sbb
lcall
nop
lcall
test
clc
jmp
je
sub
hlt
mov
xor
mov
cmpsb
cmpsl
xchg
iret
or
incl
xor
stc
and
add
dec
jmp
push
popa
sbb
adc
insb
xchg
jmp
call
hlt
popf
xchg
dec
arpl
push
xor
pusha
aad
jnp
xchg
adc
popf
outsb
adc
mov
lods
out
std
push
jp
mov
ja
in
sti
fbld
and
jmp
adc
and
cmp
fistl
add
inc
mov
and
lods
sbbb
dec
push
xchg
into
mov
arpl
ja
mov
jecxz
in
cld
ljmp
inc
add
fs
jge
ret
cmp
dec
out
push
je
icebp
shl
push
mov
push
cld
pushl
mov
mov
add
into
inc
sbb
cmpsb
push
jg
ljmp
test
sti
xchg
cmpb
xor
outsb
iret
incl
jb
mov
or
out
push
lret
mov
cltd
push
dec
and
cld
sub
push
arpl
aaa
xor
arpl
fwait
or
pop
ficompl
pop
lcall
loope
cmp
adc
in
fs
fmul
fcoms
jae
movsb
fdivr
lcall
jg
pushl
xor
ret
sti
test
mov
pushl
lods
sarl
scas
sbb
rorb
cmp
sbb
test
mov
add
mov
cmp
das
mov
cs
lods
lret
shlb
decl
add
test
and
shl
loopne
frstor
inc
pop
aaa
iret
ja
sar
sbb
lods
dec
test
inc
xor
mov
out
pop
lods
jno
xchg
push
jmp
dec
jno
cmp
scas
jno
outsl
lret
mov
jno
push
xchg
mov
or
cmp
data16
fld
repnz
cmpsl
adc
dec
icebp
ja
xchg
mov
decl
cs
out
mov
inc
xchg
mov
xchg
sub
test
pop
pushf
aaa
out
pop
and
call
into
es
and
jl
insb
jg
xor
adc
fs
jae
mov
pop
decl
addr16
pusha
imul
gs
mov
insl
adcb
fwait
jmp
out
sbb
adc
jp
ljmp
sub
mov
xchg
loope
les
mov
test
dec
ss
mov
or
popf
sub
pusha
jmp
xorl
sbb
in
jnp
sbb
pop
jge
cs
or
rclb
incl
dec
imul
jle
push
mov
push
shl
icebp
pop
fwait
dec
inc
push
out
sub
incl
pop
sbb
mov
lods
lock
sbb
in
mov
cmc
sarl
jg
or
push
gs
ljmp
or
xchg
lock
divb
xor
push
xchg
pushl
aaa
pop
mov
data16
pop
xor
push
loopne
add
jnp
les
cmp
pop
shr
fwait
xor
aad
jmp
or
jge
xor
pop
lcall
jmp
jg
push
mov
xchg
jge
add
mov
roll
cmp
std
fnstsw
das
adc
pop
push
out
daa
lcall
sbb
jp
rclb
testb
jecxz
leave
pushf
jp
cmp
std
mov
or
push
lcall
push
fadds
cmp
xor
jae
inc
mov
lahf
push
loope
lret
sub
pop
cmc
out
aad
test
push
stos
icebp
xchg
inc
stos
int
push
cmp
pop
dec
rcrb
fwait
rcrb
lahf
lods
dec
jmp
pop
push
mov
out
xchg
mov
clc
jno
cs
int
dec
and
or
sub
cmpsl
or
iret
adc
sbb
dec
ljmp
movsb
in
sbbb
icebp
xchg
and
xor
loope
push
xor
out
clc
dec
adc
inc
hlt
pop
cmpsl
sbb
addl
mov
in
jge
lcall
sub
stc
loope
lret
xor
jo
cmp
pusha
in
mov
incl
adc
scas
pop
in
lock
into
xor
push
mov
rcrl
mov
scas
mov
cld
mov
sarl
lcall
addr16
xor
add
pop
iret
push
jecxz
and
push
xadd
test
fistpll
lods
ds
lcall
xchg
xor
out
or
jmp
sub
push
int
cmp
pop
insl
dec
rclb
and
scas
jmp
xor
dec
mov
sbb
outsb
sahf
scas
xchg
fwait
subl
jp
test
jmp
push
adc
mov
in
ja
cmp
inc
shrb
es
push
cld
call
in
in
insb
and
adc
ret
pop
js
insb
pop
push
clc
sbb
movsb
push
mov
ljmp
mov
in
inc
imul
ret
aaa
std
pushl
sarl
popa
jb
or
dec
and
xor
add
lcall
rcl
mov
jae
mov
shlb
mov
xchg
adc
call
fiadds
sbb
shrb
mov
sbb
push
loop
scas
mov
cmc
push
mov
mov
jg
lods
out
call
add
insb
mov
xchg
dec
cli
in
xchg
or
xor
js
dec
imul
or
xchg
jbe
enter
aam
inc
adc
mov
fdivrp
call
std
mov
fistl
cmc
add
mov
mov
mov
mov
cmpsb
call
movsl
jo
push
in
cmpsl
add
mov
xor
mov
nop
cmp
pop
cmp
inc
push
call
imul
stos
push
add
mov
push
push
add
les
test
mov
je
shrb
push
inc
jbe
xchg
js
fwait
sub
popf
out
sub
outsl
xor
mov
xchg
ret
jns
xor
push
push
sar
cmp
push
lret
mov
adc
sbb
mov
arpl
sub
ss
mov
outsl
xchg
cwtl
jbe
leave
xchg
ret
and
call
aaa
mov
sbb
dec
fmul
dec
imul
das
negb
pushl
popa
in
pop
jg
adc
fdivrl
add
popa
add
out
stos
movsl
adc
jmp
add
jnp
or
loop
rorl
loopne
pop
fstpt
and
mov
jne
rorl
imul
xchg
ljmp
fwait
cwtl
sub
rep
jb
push
cmp
mov
ss
filds
xor
sub
std
sub
xor
jmp
idivb
call
call
dec
sbb
fidivrl
test
ret
adc
orl
inc
cli
fsubrs
std
repnz
mov
jb
ret
loop
push
xchg
cmpsl
pop
cmpsb
push
dec
push
xor
out
int3
xchg
push
cmp
xchg
sub
xor
fsubrl
jnp
mov
and
movb
pop
cmpsl
mov
cs
push
xor
pop
mov
fninit
lea
or
insb
jge
call
mov
es
test
loop
dec
pop
mov
negb
xor
int
rolb
cmp
inc
divb
pop
ds
andl
or
mov
cmpsl
insl
cmp
movsl
mov
sbb
decl
cvtpi2ps
sahf
mov
test
lret
cmc
jmp
mov
call
inc
push
mov
xchg
cmpsb
shl
test
outsl
mov
pushf
pushf
push
sar
incl
scas
imul
cmc
ljmp
ss
fdivl
stos
ret
fisttps
incl
sub
adc
adc
adc
icebp
sarb
lds
and
ja
xchg
mov
cwtl
lcall
sbb
incl
repnz
mov
scas
mov
std
js
lods
jp
sti
xor
jecxz
outsb
push
push
adc
mov
aaa
cmp
xor
pop
lret
insb
pop
loop
dec
pushf
xlat
popf
or
popa
pop
pop
cmp
aaa
decl
adc
inc
mov
outsl
jno
jno
jl
and
jl
pop
hlt
pushl
les
mov
jge
sbb
jne
arpl
inc
imul
cmpsl
pushf
xchg
jmp
pusha
movsb
ret
pop
hlt
push
loopne
pop
jle
dec
xchg
xor
add
incl
inc
mov
lods
xor
or
test
mov
lds
in
mov
add
std
decl
in
addr16
jle
jnp
shrb
adc
sahf
int3
aaa
dec
sahf
sbb
call
test
push
in
shll
fdivl
dec
es
sbb
fdivrs
arpl
xchg
lahf
jae
das
loop
add
movsl
dec
negl
and
jmp
mov
mov
popf
inc
ljmp
jns
in
and
inc
out
cli
xchg
mov
outsl
mov
sarl
or
insl
jmp
call
int3
outsl
fsubl
popf
sahf
mov
jae
sbbb
aaa
jmp
leave
mov
sti
push
cmp
dec
ret
xchg
fiadds
orb
inc
int3
stc
fisttpl
aaa
in
cwtl
cwtl
or
pop
mov
cld
pop
in
in
mov
lcall
fsubl
fldt
xor
in
mov
mov
movsl
ja
mov
jecxz
inc
jecxz
pushl
inc
mov
pop
xchg
cmp
mov
and
filds
mov
int
imul
popf
enter
xor
jl
nop
pop
ljmp
adc
or
xor
repz
cmp
push
push
mov
jg
adc
xor
lods
xchg
cmp
xchg
jp
mov
int3
adc
fdivr
ljmp
push
fisubs
int3
js
sub
lock
xor
fistpll
out
mov
pushl
xchg
ljmp
sti
dec
push
and
js
outsb
shrb
pushl
je
outsl
lods
jmp
add
adc
test
inc
mov
add
jl
mov
fidivrs
adc
ja
inc
cmpsl
ret
mov
decl
jo
xor
cld
aad
lock
dec
loopne
dec
sbb
test
adc
push
ret
cld
jmp
push
int3
fisttpl
mov
xchg
inc
sbb
jecxz
or
das
lods
cmp
mov
cmpsl
gs
std
iret
pusha
add
mov
pusha
jecxz
mov
sbb
ljmp
sub
dec
sbb
dec
or
aam
pop
in
pushf
popa
mov
pop
jp
xlat
pop
lods
hlt
inc
shr
subl
jae
mov
jg
test
cwtl
mov
int3
nop
shrl
inc
inc
out
mov
lret
aaa
push
arpl
pop
aaa
xchg
jecxz
cmpsl
sub
inc
xlat
and
push
inc
push
sahf
hlt
dec
daa
jp
or
stos
imul
decl
jmp
push
xchg
fbld
mov
iret
dec
fs
lcall
jl
xchg
cmp
cmp
fs
mov
and
insb
cmp
pushl
sub
or
ja
movb
nop
sti
pop
xor
aas
push
roll
mov
incl
lea
fcompl
cmpsl
inc
adc
test
ret
clc
mov
sbb
outsl
js
rorb
cld
mov
rol
xlat
sbb
pushl
sbb
xor
jge
fsubrp
xor
push
xor
sub
out
cli
je
push
mov
xchg
cmpsb
xchg
jmp
bound
sbb
sub
sub
lcall
leave
lcall
rorb
popa
ds
test
jne
dec
das
ss
dec
jne
xor
mov
ljmp
adc
add
xchg
stc
xlat
aaa
or
lret
dec
mov
inc
int3
mov
ror
jo
lock
imul
je
scas
outsb
xlat
jp
out
cmp
ss
adcb
jmp
ds
fsubs
test
iret
mov
cmc
test
outsb
stc
fs
call
mov
dec
sub
adc
dec
rcrb
in
mov
fwait
aas
popf
shll
fstpt
pop
add
xor
mov
bound
hlt
jae
dec
popf
xchg
push
add
push
xor
push
fisttpl
xor
mov
dec
pop
lock
push
mov
stos
add
xchg
or
cmpsb
movsb
mov
int
lret
push
cmpb
call
push
fidivrl
mov
ret
sub
cwtl
push
in
call
cmpsb
xor
insl
rorb
stos
testb
cmp
pop
or
ds
jmp
mov
cli
jb
mov
add
dec
cmpsl
inc
or
push
mov
aam
push
test
mov
iret
fisttps
mov
icebp
loope
sbb
cmp
jo
and
lock
jmp
or
push
out
sbb
mov
jmp
jmp
or
sub
cmp
xchg
sbb
test
movaps
mov
inc
fucomp
fs
xchg
lods
scas
push
pop
pop
test
cmp
dec
pop
and
jmp
decl
jnp
push
sbb
popa
das
jae
sbb
fcmovb
lahf
jge
inc
std
add
ret
gs
dec
daa
lcall
sahf
imul
or
lods
fbstp
cwtl
outsl
lcall
out
leave
iret
ret
sar
cli
decl
repnz
xor
xor
adc
mov
lods
add
incl
xor
jge
inc
repnz
or
scas
mov
iret
adcb
and
pop
dec
mov
mov
sahf
outsb
sahf
jne
insl
mov
cmp
inc
add
and
jp
lret
imul
xchg
and
movsb
push
jmp
loopne
mov
ret
in
in
repz
jb
dec
movsl
test
jns
hlt
pushl
shll
outsb
mov
pushf
divl
in
jle
cli
jno
out
loop
inc
cmp
sub
pushl
mov
ljmp
into
insl
test
xchg
shlb
outsb
adc
ror
push
pop
jp
incl
cli
ret
mov
mov
push
push
lcall
and
rep
mov
jmp
cwtl
and
mov
inc
adc
stos
aad
dec
adc
cmp
dec
pop
xor
mov
inc
les
ds
je
jno
xlat
cmp
cmc
dec
pop
cmc
jae
dec
push
repnz
cmc
fcomip
ret
or
fisubrl
je
pop
mov
add
inc
stos
or
inc
mov
adc
mov
cmpsb
xchg
enter
mov
aaa
sbb
stos
mov
pop
mov
inc
mov
push
cmp
stos
incl
rolb
xchg
gs
aam
push
xchg
mov
sbb
mov
int3
rcll
loopne
xchg
xor
jg
jno
ja
cli
xor
iret
test
scas
pop
mov
loope
inc
cmp
push
cmc
jmp
addr16
mov
inc
cmp
pop
enter
add
inc
pop
cmp
xchg
push
pushl
test
add
das
ljmp
outsl
add
inc
loopne
push
rcrb
sar
jg
dec
mov
ljmp
or
mov
std
lcall
mov
in
fdivrp
dec
add
aaa
lods
scas
scas
mov
fdiv
dec
enter
cld
mov
out
and
lock
jno
push
cld
out
add
cmp
add
sbb
and
sahf
sbb
fsub
mov
add
jmp
push
push
sti
pop
jmp
in
in
inc
roll
push
dec
jp
mov
idiv
jmp
add
jecxz
outsb
and
out
inc
scas
stc
in
aam
fsts
pop
das
mov
int3
sar
jge
add
aad
dec
mov
mov
mov
ss
fcos
pushl
and
ret
dec
cmpsl
or
jb,pn
inc
cmp
je
pop
test
pop
int
cmp
mov
cmp
jo
and
or
lods
lods
pop
fldcw
push
mov
pop
sbbb
mov
fsubs
xchg
add
mov
cli
lcall
sbb
adc
lds
add
rol
test
cmp
dec
inc
iret
jo
cmp
mov
cld
mov
pop
jns
dec
cs
push
adc
inc
pushl
fisttpl
cs
push
aas
mov
test
arpl
dec
mov
push
push
or
cmp
decl
mov
popf
jmp
mov
fidivs
cmpsl
negl
daa
inc
outsl
cwtl
jg
incl
push
subb
cmc
sti
add
cmpsb
rorl
repnz
call
sahf
add
jmp
daa
je
cli
xor
cld
or
ret
test
or
and
xchg
cmc
ljmp
mov
shlb
test
sbb
insl
test
ljmp
out
out
aas
ret
lret
lds
lods
push
pusha
jg,pn
adc
lahf
testl
inc
inc
cld
hlt
or
jb
dec
pop
mov
add
mull
shlb
jg
cmp
andb
and
adc
int
cwtl
mov
repz
or
call
mov
dec
testl
push
add
xchg
jae
cli
ffreep
pushf
scas
imul
jb
test
push
lcall
pushl
pop
mov
or
add
fwait
test
mov
cmc
jne
inc
loop
xor
push
jno
push
lock
cmp
dec
mov
cmp
xor
mov
fstp
mov
adc
out
out
into
fstpl
lods
jg
xchg
cwtl
gs
jno
stos
les
or
test
add
repnz
fisubs
add
stc
sti
repz
add
push
jmp
sub
mov
shr
add
push
add
out
jb
sti
jmp
or
adc
pop
fistl
sub
mov
andl
mov
js
gs
lds
mov
dec
add
cmp
inc
mov
lcall
insb
in
loop
adc
ret
mov
mov
enter
ret
jbe
ljmp
loop
push
imul
faddl
pop
imul
cmc
into
test
cwtl
push
loope
mov
mov
jl
jb
xchg
mov
fwait
pop
push
cmpsl
bnd
repz
mov
mov
fxch
lcall
push
loope
fimull
sub
push
sub
and
xor
jmp
rcr
or
xlat
cmp
nop
lahf
orb
es
push
sub
outsb
repz
shll
insl
pop
ss
push
leave
imul
dec
insl
lcall
jmp
popa
adcl
jmp
jle
insl
jmp
sbb
decl
popf
xlat
adc
xor
push
inc
cmp
xor
pop
mov
jnp
js
mov
jmp
jae
sbb
das
aaa
push
ss
mov
icebp
daa
xchg
add
mov
loope
inc
add
repz
add
mov
and
xchg
scas
dec
push
cs
cld
pushl
pop
jno
mov
in
mov
insl
pop
xor
sbb
mov
jmp
fbld
mov
fldt
je
subb
ja
inc
xchg
lods
xchg
jmp
ret
mov
call
cmpsb
ror
cmp
insb
mov
test
dec
popf
push
lock
jg
cli
mov
lock
mov
loopne
mov
sub
movsb
daa
mov
xchg
call
std
pushl
add
add
xor
jo
dec
aam
mov
rolb
shl
sbb
jmp
mov
mov
mov
dec
ret
pop
mov
add
loopne
test
add
jne
jne
ljmp
ja
and
cltd
mov
rcrl
gs
fidivs
cmp
sahf
enter
in
repz
pop
cmp
les
out
jmp
dec
pop
adc
dec
jb
jns
scas
mov
sub
decl
int3
adc
inc
push
jmp
movl
sbb
pop
mov
push
icebp
cli
les
push
xchg
mov
dec
inc
jmp
xor
xchg
out
push
lret
sbb
aad
and
cmp
incl
jmp
push
outsl
jge
push
pop
cld
lcall
jb
and
inc
decl
dec
scas
or
cli
jo
subl
lcall
incb
dec
mov
jbe
out
loopne
cs
push
pusha
movsb
jge
adc
jmp
loope
jb
dec
enter
or
adc
pop
rol
sub
sbb
pop
int3
cmp
or
loope
push
adc
movsb
inc
fildll
icebp
xlat
test
jp
adc
push
push
lret
jmp
xchg
cs
or
cmp
cs
cmp
jns
add
hlt
inc
push
pop
dec
add
sbb
int
into
cmp
inc
sbb
push
sub
jae
fld
mov
jns
in
fcomip
call
lds
popl
fwait
cmc
mulb
popa
cmpsb
int3
jmp
and
jge
iret
cld
sub
sub
jnp
ror
cmp
cwtl
cmc
lcall
cs
mov
and
imul
jmp
fs
sbb
inc
leave
cmc
call
mov
mov
ficomps
mov
scas
lods
xorl
xor
and
cmp
lock
push
jg
ljmp
push
add
inc
loop
mov
test
jb
mov
call
call
jmp
mov
adc
or
push
mov
push
pop
xor
add
xchg
cld
orb
sub
movaps
cmpsb
jmp
sub
push
fnstcw
jno
add
cs
mov
outsl
int
test
lcall
xchg
xchg
cmp
and
jbe
pop
push
xchg
mov
in
test
loope
fadd
ljmp
pop
mov
pop
stos
dec
sub
imul
inc
sbb
adcb
push
cmp
jg
jg
hlt
inc
xor
sub
out
outsb
pop
xchg
jmp
mov
mov
adc
mov
push
mov
cltd
and
out
arpl
dec
fsubl
xor
test
inc
mov
iret
mov
add
sub
cmpsl
lods
push
mov
sahf
cmp
push
lds
call
mov
cmp
int
or
shlb
jo
das
subl
pop
pop
jp
call
test
jns
cli
imul
icebp
sbb
or
imul
pushl
and
fwait
mov
aad
inc
subb
pusha
mov
stos
and
push
jmp
sub
mov
fwait
adc
or
jno
pop
push
push
or
pop
adc
inc
xchg
mov
out
in
xchg
daa
in
xchg
push
or
lods
pop
out
sahf
dec
pop
and
stos
jmp
fs
scas
lods
jecxz
xchg
pop
and
lahf
sub
hlt
jle
stos
pop
arpl
or
ljmp
pop
pop
xchg
ret
add
cmp
inc
repnz
mov
xor
mov
add
jge
mov
and
adc
fwait
cmp
jbe
sub
mov
cmp
mov
jae
icebp
out
addb
ret
push
jp
daa
mov
sbb
jmp
loope
xor
push
lods
fwait
adc
mov
cli
out
lods
adc
dec
adc
mov
imul
decl
mov
dec
cmpsl
fwait
sbbb
add
out
aam
dec
test
dec
aas
leave
jb
repz
std
mov
shl
push
mov
cli
ficompl
sbb
jl
lds
mov
add
cld
sbb
fnstcw
xchg
or
mov
es
pop
adc
lcall
pusha
push
imul
adc
xchg
cmp
jle
movlps
push
cmc
cmp
cmp
xor
mov
push
imul
lret
pop
jle
fimuls
jp
mov
int3
adc
pusha
mov
sub
push
stc
ds
sbb
xor
xor
fwait
les
add
call
cmp
push
jmp
mov
lcall
fs
or
cmpsl
push
inc
loopne
aas
sbb
movsl
hlt
mov
mov
clc
aas
cs
and
xchg
xchg
testl
lcall
aad
jno
jo
fwait
hlt
imul
jge
lods
scas
push
mov
popa
fcoml
lcall
sub
adc
fwait
xchg
mov
idivl
popf
rcll
ljmp
push
into
mov
fsts
call
cmp
imul
inc
cli
or
cmp
cmc
xor
cmpsb
dec
and
or
cmpsl
test
mov
js
pushf
cmpsb
cmp
ljmp
xchg
pop
mov
mov
loop
dec
rcrb
mov
fcmovnb
jae
cmp
jmp
lret
incl
sbb
imul
and
sbb
insb
mov
mov
add
xor
imul
bound
outsl
xor
inc
adc
addr16
jmp
das
inc
cmp
xor
std
in
ljmp
pop
inc
add
repz
jge
sbb
fildl
jbe
pop
mov
subl
enter
stc
fsubl
leave
mov
incl
or
push
int3
fchs
call
loope
xchg
mov
ljmp
jmp
nop
mov
and
push
cmp
sbb
ja
outsl
ljmp
arpl
dec
push
jl
mov
in
add
push
mov
iret
xor
call
std
lcall
jecxz
je
out
jmp
mov
jbe
jge
dec
in
movsb
fdivr
decl
jmp
adc
cltd
popf
sbbb
sbb
cmp
insb
add
dec
xchg
dec
testl
popf
jnp
add
loop
ret
into
mov
mov
push
call
loopne
and
faddl
cltd
jp
push
aaa
imulb
lahf
std
addr16
ja
ret
call
xor
jns
repnz
mov
es
mov
inc
push
xchg
pop
jnp
adc
jae
ss
movsl
sbb
out
push
or
loope
shrl
mov
mov
cmp
dec
test
mov
inc
es
add
out
or
mov
mov
rol
cwtl
arpl
out
cmp
pop
dec
repz
mov
lcall
cmp
lods
cmp
subb
mul
shlb
insl
testl
fcos
ljmp
cmpl
sub
cmpsl
xchg
ret
into
adc
dec
clc
pop
out
xor
or
adc
jnp
or
jle
xor
xchg
add
mov
xlat
mov
rcrl
call
sarl
and
lea
mov
and
mov
dec
daa
ja
jmp
adc
int3
jb
mov
jmp
sub
jns
mov
test
imul
jg
enter
sbb
cmc
inc
pop
and
jns
or
pushl
pusha
push
sbb
aas
insb
and
cmp
into
add
inc
test
addl
imul
mov
sub
jp
add
nop
icebp
xor
dec
icebp
cmp
test
jbe
sbb
jg
inc
fdivl
jg
ljmp
cmp
loopne
add
lret
jnp
xlat
jb
mov
ljmp
scas
jbe
cmp
daa
daa
jg
push
lahf
mov
ffreep
mov
cli
mov
jae
inc
jb
mov
out
mov
cmp
inc
test
out
rcrb
insb
dec
loopne
push
lret
and
adc
lcall
out
jnp
jmp
push
loop
xor
movsb
adc
aad
cs
push
test
popa
rcrb
insb
sub
sub
fdivl
ret
scas
in
call
push
icebp
call
std
and
dec
jmp
aad
cltd
andb
pop
popa
hlt
jl
leave
lock
pop
aad
push
xchg
mov
leave
call
push
add
lds
pushf
bound
enter
xchg
mov
pushl
add
xchg
xor
lret
pop
xchg
notb
mov
sbb
mov
adc
add
stos
jne
inc
cmc
call
int
dec
push
leave
xlat
jg
ss
outsl
mov
ljmp
int
movb
cmp
cmpsl
add
aad
push
xor
or
mov
mov
lret
das
fisttps
inc
push
es
mov
inc
add
sbb
incl
popf
add
dec
stos
adc
fiaddl
mov
cmpsb
add
pop
jo
or
dec
sti
je
cmp
sub
mov
test
mov
lods
pop
sbb
or
push
and
mov
cmp
pushf
mov
adc
adc
push
or
and
ljmp
add
push
rcr
mov
and
pop
sbb
pop
mov
and
pushl
es
and
xlat
xor
pushl
andb
out
test
enter
sbb
pop
rclb
mov
gs
std
push
out
imul
ljmp
gs
aaa
in
jo
xor
mov
dec
movsb
test
mov
sub
pusha
in
adc
cmp
lcall
sub
sbb
ljmp
loop
rclb
clc
stc
scas
dec
aam
hlt
inc
clc
jg
lret
outsb
pop
sbb
push
mov
iret
cmpsb
ljmp
test
lcall
insl
sti
adc
or
xchg
rol
ja
repz
push
loop
push
or
jmp
out
insl
addr16
cwtl
iret
shrl
add
add
leave
mov
idiv
inc
inc
stos
sbb
push
shrb
push
or
imul
shr
mov
xor
test
mov
out
cmp
ljmp
xchg
lahf
repz
pop
das
xor
scas
inc
lock
in
lock
sub
cmp
push
jge
cmpsl
insl
outsl
push
nop
dec
and
push
and
mov
add
sbb
adc
jl
mov
shrb
scas
push
arpl
clc
mov
push
add
push
lock
mov
xor
dec
fwait
pop
add
rcrl
jecxz
shl
xchg
pop
xchg
mov
jg
in
push
je
jae
fisttps
or
inc
pushf
cwtl
lds
scas
push
pushl
arpl
aaa
xchg
pop
cld
xchg
mov
lock
cmp
insb
cmpsl
rorl
call
outsl
add
push
iret
rorb
push
dec
mov
stc
mov
push
aam
insl
cmp
xchg
jmp
push
jp
inc
cmp
and
sub
clc
push
sarl
push
shrl
jge
es
incl
cmp
pushw
rcl
scas
pop
pop
mov
enter
mov
mov
outsl
clc
jmp
and
and
add
test
pop
push
dec
dec
stos
mov
out
jmp
mov
add
adc
adc
inc
int
and
adc
sub
mov
sub
add
nop
xchg
ret
mov
clc
scas
sbb
mov
and
ljmp
es
sub
repnz
ljmp
sbb
dec
cmp
pushl
mov
push
arpl
mov
inc
cmp
aas
add
test
ljmp
xchg
scas
fistpl
insl
test
sbb
aam
iret
aad
loopne
lcall
scas
push
xchg
adc
jb
jmp
das
ds
xor
iret
jbe
cmp
in
subb
stc
pop
ffree
data16
inc
push
jnp
int3
cmp
call
aad
mov
int
movsl
mov
mov
outsb
in
jo
cwtl
stos
out
xchg
faddl
xchg
jg
push
repz
data16
xor
xchg
cld
cmp
jo
decl
adc
jb
out
and
jnp
xor
leave
mov
fcomip
decl
loop
add
pop
jg
jg
jae
adc
inc
mov
lret
jl
mov
incl
mov
pop
add
xchg
adc
scas
sub
push
daa
dec
and
mov
push
frstor
insb
sbb
adc
test
mov
push
sti
mov
popa
push
pushl
insl
adc
and
xor
mov
iret
fs
mov
dec
mov
inc
cmpsb
incl
lret
ror
nop
stc
add
or
xorb
mov
push
loop
scas
cli
jae
loope
mov
push
clc
int
repz
mov
roll
mov
cmpsl
std
xor
fsts
jecxz
sti
mov
push
incl
mov
sbbb
pop
pop
stos
mov
pusha
cmpsl
xchg
cmp
les
push
aas
call
aas
cs
mov
cmp
addr16
jge
cwtl
mov
xlat
push
jne
jo
inc
cmpsb
int
decl
add
int
push
push
mov
pusha
sub
das
decl
mov
enter
jg
inc
cmc
push
lret
fimuls
mov
dec
or
xchg
les
insb
cld
ljmp
and
int3
or
icebp
test
add
lods
mov
icebp
fcmovbe
stc
mov
out
incl
push
pop
add
xorl
sub
cmp
mov
lret
dec
leave
mul
pop
and
mov
mov
cmp
bound
push
xchg
call
add
int3
or
inc
mov
jmp
imul
xchg
xlat
outsl
scas
incl
mov
shrb
jo
dec
popf
xlat
pop
lret
xchg
pavgb
pushl
pop
lds
jmp
pop
xor
sarb
cmp
into
inc
jns
das
imul
dec
xor
shll
jb
xchg
imul
cltd
repnz
loop
out
fucomp
not
je
repz
insl
insb
xchg
incl
and
push
mov
imul
xchg
pop
jno
or
fstps
jle
out
mov
cmp
or
jg
push
mov
cmpsb
repnz
xchg
or
incl
ret
or
xor
pop
xor
loopne
or
mov
jge
stos
les
dec
cltd
aaa
xchg
outsl
push
push
mov
test
dec
xchg
call
ja
adc
xchg
pop
hlt
cld
pop
mov
test
cmpb
or
test
popa
clc
sar
faddl
jp
xchg
fcoms
push
popf
and
adc
sbb
mov
mov
das
add
ds
orb
cltd
pop
js
mov
sub
inc
dec
or
xchg
mov
adc
mov
decl
cwtl
cmp
mov
std
or
adc
subl
pushf
ja
ds
std
mov
dec
push
pop
adc
pop
push
ror
cmp
bswap
test
or
lcall
mov
daa
out
mov
xor
or
xor
call
cld
and
sbb
sbb
cld
aad
andb
mov
fcos
decl
mov
adc
es
xor
mov
push
in
lds
mov
test
pop
insb
loope
inc
lock
push
push
sahf
add
mov
ja
inc
push
sti
pop
sahf
into
pop
pop
xor
js
fiadds
das
mov
or
mov
mov
mov
mull
call
pop
xchg
sbb
pushl
jge
sbb
jecxz
lds
mov
dec
xor
mov
sbb
ljmp
lcall
adc
xorl
ljmp
and
incl
or
inc
daa
add
mov
push
fldenv
bswap
call
cmc
sub
lods
and
out
jp
jecxz
pushf
push
jle
test
lds
in
sti
incl
dec
jle
push
mov
xor
mov
pop
movsl
cmc
adcl
jg
hlt
js
lods
dec
cmp
mov
repnz
sub
imul
mov
cmpsb
jo
cmpsl
cltd
pushl
sub
bound
imul
jmp
inc
scas
pop
dec
push
dec
fstpt
leave
sbb
pop
mov
rcrl
cli
test
xchg
sub
cmp
icebp
xlat
inc
cltd
xor
ljmp
test
stc
push
andb
rcl
pushf
sbb
decl
or
popa
bound
mov
add
and
adc
adc
adc
cmc
jg
xchg
das
push
or
sbb
push
mov
xchg
mov
les
and
mov
inc
inc
mov
into
dec
div
in
mov
mov
in
cmp
adc
mov
pushf
jo
mov
flds
int
lcall
ds
xor
jbe
lock
jp
cmovle
push
ljmp
adcl
sub
cmc
mov
mov
test
sub
jae
add
call
adc
xchg
pop
in
test
out
mov
pop
ljmp
jns
xchg
fisttpll
stos
outsl
call
cmp
addr16
scas
dec
or
mov
call
insb
fwait
jl
faddp
test
jl
stos
pop
push
add
call
sarl
xlat
shlb
inc
bound
jne
repnz
mov
jnp
pushl
aad
into
mov
subl
fwait
out
cmp
pop
dec
and
stc
cmp
bound
inc
sub
bound
lahf
mov
shrl
test
cmp
call
cld
stos
lcall
xor
divb
hlt
shll
jo
fnsave
incl
rcll
xchg
jle
nop
push
sub
enter
inc
push
sub
je
sbb
fsubs
ljmp
sbb
add
sbb
jge
addr16
cmp
test
lcall
mov
or
fldenv
addr16
aad
sbbb
shll
ficoms
mov
pmaxsw
sahf
lcall
xor
loopne
in
jb
js
outsl
inc
cmp
mov
cwtl
das
xor
icebp
sbb
int
lods
or
lcall
add
push
int
mov
fcoms
and
call
mov
sub
cmp
daa
jmp
add
dec
arpl
mov
mov
hlt
jne
xchg
leave
out
aam
insl
lahf
in
push
repnz
or
pushl
jmp
mov
cmp
loope
cmp
out
leave
push
mov
mov
rcrb
addr16
push
or
aad
bound
jecxz
xchg
loope
out
int
pop
cmp
pushf
dec
or
adcl
testb
mov
mov
pushl
or
or
lret
inc
out
pop
mov
scas
imul
mov
sbb
xlat
xchg
call
dec
movsb
faddl
dec
jmp
adc
lret
mov
sub
mov
bound
rorl
xchg
push
call
mov
xchg
out
or
inc
dec
push
icebp
aas
dec
mov
inc
adcl
outsl
inc
scas
sbb
cmpsb
dec
cli
popa
sub
out
stos
cmpsl
pop
xor
jmp
jne
xchg
stos
repnz
and
push
outsb
pop
xor
add
push
and
inc
into
dec
sub
sub
sub
imull
xchg
jmp
loop
mov
or
shlb
data16
mov
mov
push
mov
xchg
lea
int3
ja
addr16
mov
in
lods
pop
into
adc
ljmp
xorb
jecxz
shl
mov
addr16
ljmp
aam
lds
lea
std
lret
int
loope
in
jg
stos
mov
scas
movsl
adc
dec
pushl
hlt
mov
test
jmp
daa
pop
inc
lock
dec
mov
jl
arpl
xchg
dec
inc
lcall
sbb
pop
cmc
incl
imul
fnstcw
mov
xor
jecxz
push
ds
xchg
add
lcall
dec
movsl
test
insl
adc
add
sahf
scas
in
xorb
xor
decl
cmp
pop
pushf
orl
pushf
and
mov
or
frstor
or
xor
cmpsl
mov
stos
cld
ljmp
jno
pop
pop
scas
addb
fistps
xchg
and
das
icebp
les
test
and
iret
lret
xchg
popf
loopne
call
aad
sub
sub
cmc
movsl
movsb
lret
pop
jl
or
pop
lret
push
mov
lahf
xor
xlat
hlt
mov
in
mov
cmp
ljmp
cmp
mov
sar
cltd
sub
lret
outsl
add
inc
pop
fadds
push
sbb
ret
mov
insl
es
popw
mov
test
push
add
loope
test
out
lcall
inc
test
mov
repnz
ds
ds
xchg
das
or
sub
xor
daa
lods
sahf
ficomps
out
dec
movd
fisttps
std
inc
shll
inc
sub
scas
int
cmp
scas
sahf
mov
loope
mov
bnd
pop
aad
icebp
xor
test
mov
mov
cwtl
mov
mov
mov
stc
xorl
les
jmp
into
jbe
and
cmp
and
adc
mov
pop
lret
sysenter
push
push
xchg
push
jno
dec
fimuls
push
adcb
in
je
push
in
pushw
shll
loop
int3
std
out
call
mov
decb
nop
insl
in
fdivrl
rolb
inc
inc
xchg
pop
cld
pop
jmp
insb
push
lea
dec
ret
movsb
pop
js
aam
add
push
call
pop
dec
jae
xorb
fcomps
push
mov
xchg
mov
pop
into
movsb
sub
mov
lods
xor
out
mov
daa
addr16
sub
pop
cmpsb
sbb
lea
outsl
ss
push
lret
mov
insb
lea
lcall
xor
push
jae
push
insb
stc
test
dec
nop
je,pn
inc
call
hlt
jg
or
add
incl
test
adc
in
jecxz
lods
loope
ret
notb
push
rclb
das
mov
das
sub
jo
jmp
add
aam
in
push
mov
inc
and
cmp
aad
negl
mov
test
add
xchg
out
xchg
and
popa
jmp
mov
imul
lret
mov
arpl
mov
daa
push
adc
cmp
jmp
push
rorb
xor
add
jmp
pop
decl
adc
xchg
xor
aad
andb
sbbb
pushl
call
in
inc
sti
push
subl
mov
adcl
push
pushf
xchg
dec
xchg
sbb
sub
mov
and
mov
cmc
pop
cmp
lret
pop
loop
pop
repz
insl
in
aas
ljmp
push
sbb
fwait
leave
cmpsb
mov
addr16
scas
mov
jg
and
mov
xchg
mov
int3
mov
jnp
sahf
and
add
mov
stos
sub
mov
scas
insl
jo
jge
std
cwtl
jo
jp
fsubrs
xchg
pop
mov
mov
sbb
movsl
mov
cli
and
sarl
pop
test
decl
pusha
clc
shll
mov
and
mov
icebp
mov
pop
call
mov
jnp
mov
fdivrl
sbb
pop
jmp
sub
loope
lcall
movb
clc
fstps
xchg
mov
push
jmp
enter
aad
decl
pop
or
nop
push
stc
sub
adc
std
outsl
or
outsb
hlt
inc
pop
insb
mov
test
jg
fidivrs
outsl
ljmp
and
fcomps
inc
sub
and
pop
cmc
pushl
cwtl
insb
sahf
mov
subl
cmp
sub
jg
jmp
mov
cmpsb
mov
cld
mov
mov
and
dec
aaa
fdivr
decl
dec
mov
inc
push
fnstenv
add
mov
test
sti
fcoms
xchg
adc
xlat
pusha
cmp
mov
int
mov
outsb
adcl
cmc
mov
rolb
or
adc
cmp
xor
pop
mov
and
cli
sub
cmpsl
inc
sub
xor
xor
add
out
rclb
pop
subb
pusha
cmpsl
mov
inc
mov
pushl
cmp
add
imul
mov
mov
add
xchg
xorl
decl
add
movsl
or
loope
idivl
test
inc
push
std
mov
rcll
decl
xor
cmp
xor
adc
pop
lods
loop
ficomps
arpl
sahf
add
dec
mov
mov
sub
mov
sbb
jne
insl
mov
call
mov
push
mov
sub
and
incl
loopne
cmp
test
shlb
in
xchg
xchg
pop
jb
sbb
repnz
mov
mov
mov
jmp
lcall
in
or
sub
jnp
sub
inc
cmp
sbb
add
pop
bound
pop
in
cmp
jmp
int3
dec
loop
mov
jno
arpl
pop
popf
add
ret
in
cmpsb
test
dec
xchg
into
or
addl
insl
sbbb
insb
dec
lret
xchg
xor
call
dec
pushf
jecxz
sbb
xchg
jle
and
xchg
imul
dec
mov
xor
enter
pop
arpl
xlat
inc
push
sahf
int
or
aam
or
fildll
and
mov
mov
mov
and
lods
xchg
adcl
data16
call
sahf
and
mov
out
cmpsl
rolb
fsubrl
pop
jg
mov
or
aaa
std
mov
add
aas
push
mov
jbe
loop
sahf
jl
mov
sub
push
incl
sti
sbb
aaa
jp
testb
leave
dec
xchg
mov
cmp
jmp
ret
inc
cmp
lret
clc
imul
aam
cmc
jne
je
popa
cmp
ds
daa
daa
inc
je
pushl
test
cltd
divl
mov
out
xor
adc
nop
int3
int3
add
leave
out
arpl
pushl
mov
aas
pop
push
mov
ret
out
pushf
arpl
ss
inc
cmp
ss
ljmp
arpl
jb
or
imulb
inc
fs
inc
leave
subb
ror
clc
or
ja
pop
cmp
add
xor
fistpll
pop
mov
mov
xchg
jno
jbe
ljmp
push
repz
js
lret
xor
cltd
addl
push
out
bound
mov
jno
clc
call
mov
mov
mov
pushl
andb
insl
adc
push
inc
call
jmp
daa
mov
fsubp
pusha
mov
shrb
xchg
ljmp
cmp
test
or
fwait
jb
push
lcall
jecxz
xchg
add
incl
sub
push
dec
add
int3
loope
jp
jno
imul
add
xor
mov
mov
lret
jne
push
aaa
imul
imul
xchg
pop
in
incl
outsl
and
adc
jo
cli
or
cmp
push
mov
ds
call
mov
hlt
sahf
sbb
lahf
jp
pop
or
cmp
inc
aam
lret
out
enter
decl
adc
inc
inc
enter
add
push
mov
je
jbe
incl
cld
sbb
xchg
push
mov
test
jae
fwait
scas
xor
sub
shlb
jecxz
mov
dec
sub
pop
mov
jmp
or
jecxz
int3
filds
daa
jae
pusha
test
or
jb
cs
cld
xchg
dec
cltd
shrl
movsb
arpl
push
mov
loop,pn
aaa
ds
dec
jecxz
int3
pop
inc
stos
stc
cmp
mov
popf
dec
xorb
fsubl
inc
sub
push
jge
adc
decl
ret
and
std
xor
paddusw
and
pusha
shlb
or
shlb
popa
adc
push
push
inc
lock
jne
inc
and
aam
or
jae
and
pushf
fbld
lods
out
loopne
or
data16
js
xlat
clc
cmp
xlat
cmc
aaa
jmp
shlb
rcll
jg
mov
enter
xchg
leave
dec
xchg
xor
sub
pop
fidivs
inc
decl
lock
fcomip
cmp
push
test
pop
lods
jne
pop
les
jmp
xor
sub
decl
sub
imul
mov
cmpsl
aam
mov
mov
insl
sbb
lcall
jmp
xchg
sub
fpatan
cmc
adc
mov
shrl
hlt
divb
lcall
enter
add
je
test
mov
or
ret
mov
add
arpl
aam
ljmp
jg
mov
mov
rcrb
add
cmp
insb
popa
cmp
call
test
sub
stos
fmuls
fs
add
jg
hlt
jg
imul
ljmp
cli
jo
fs
adc
test
hlt
decl
jne
push
pop
sbb
fs
lcall
scas
mov
adc
jo
dec
pop
mov
cld
stos
inc
push
dec
jbe
inc
xchg
cmp
repnz
cmp
scas
xchg
mov
pusha
cmc
in
add
outsl
dec
or
push
mov
pusha
xchg
sub
jbe
test
ret
pop
cmc
incl
pushl
fnstcw
jae
xor
mov
jns
sbb
outsb
insb
xor
sub
test
jle
pop
dec
sbb
cmp
pushf
and
xchg
in
pop
pusha
std
nop
cmpsb
shrb
gs
xchg
mov
incl
cmp
pushf
xchg
add
add
imul
decl
jae
lcall
mov
or
std
mov
mov
ds
ljmp
data16
test
xchg
pop
add
lahf
out
inc
int3
mov
xchg
incl
xchg
outsb
dec
sbb
dec
inc
push
dec
push
xchg
mov
mov
enter
incl
jg
xchg
and
mov
xor
rorl
mov
jmp
and
fidivrs
and
adc
pop
xlat
stos
jo
addb
filds
test
incl
rolb
and
lock
lahf
cmpsl
dec
adc
imul
mov
call
sbb
add
lret
push
ss
imul
mov
mov
nop
xchg
push
cld
pop
ret
icebp
pop
or
decl
dec
mov
sbb
or
idivb
shrl
jp
rcl
cmp
adc
mov
jl
dec
fs
xor
stos
sbb
mov
ljmp
mov
icebp
call
mov
xlat
jmp
mov
int
lret
cmp
and
mov
fcomip
push
out
decl
and
js
fwait
icebp
mov
rcll
adcl
fisttpl
pop
xor
imul
ja
inc
in
dec
mov
leave
adc
or
pop
cmc
outsb
test
cmc
call
inc
in
shl
jnp
jg
insb
adc
xchg
add
es
divb
repz
outsl
pushl
lods
mov
rcrb
test
aad
aaa
or
clc
std
rorb
sub
or
daa
adc
pop
outsb
push
sub
popf
in
mov
mov
ljmp
les
adc
sahf
mov
in
leave
mov
and
jmp
dec
sti
sub
test
adc
mov
push
ja
or
adc
jo
out
clc
mov
cmp
cld
aam
mov
or
add
call
lcall
xchg
mov
cltd
xor
xchg
in
inc
pop
xor
fdivs
or
jle
sub
loop
pop
sub
sar
pop
pushf
mov
xor
push
xchg
inc
mov
into
js
rclb
ss
inc
jmp
ret
lret
cmp
push
aaa
push
pop
je
xchg
mov
mov
into
out
cmc
xchg
popa
out
mov
pushl
cld
test
movsb
popa
mov
mov
int
lahf
push
cwtl
xor
sahf
add
jg
inc
push
mov
sub
mov
pop
fidivl
mov
pushl
and
movsl
xor
sbbb
jg
fildll
push
sbb
mov
ljmp
pop
or
inc
test
mov
cltd
jmp
inc
add
push
mov
cld
shll
lock
incl
xlat
xor
negb
js
jmp
out
mov
push
fdivrl
fildll
call
xchg
das
jp
roll
cmp
push
stos
push
ret
negb
inc
sub
jl
cmp
out
and
aaa
xchg
adc
ljmp
sub
lcall
call
pop
cmp
int3
jp
lcall
sahf
rol
push
jbe
imul
pushf
inc
addb
sub
mov
fldcw
push
mov
ret
cmp
into
xlat
or
dec
cmpsb
call
addr16
mov
sub
jg
fisubrl
cld
fmul
daa
mov
jns
xchg
ljmp
and
xchg
push
sbb
dec
pusha
jmp
arpl
outsl
mov
pushf
xchg
adc
out
mov
adc
rorb
in
sub
cli
fs
sbb
push
adc
fs
les
sbb
iret
shlb
call
sub
add
clc
sbb
xchg
cwtl
mov
loopne
ret
push
test
orb
mov
mov
popa
xor
insb
fidivrl
push
outsl
out
clc
jmp
pushf
mov
mov
xor
aas
and
cmpsl
and
mov
adc
jmp
push
pop
das
cmp
in
gs
push
mov
xchg
adc
inc
int3
cltd
call
and
ds
in
mov
mov
jo
adc
stc
lods
fisttpl
sbb
fdivl
into
mov
or
loop
cmp
xor
outsl
mov
jg
out
cmpsb
inc
jmp
rcrb
push
mov
cmp
cmc
inc
xchg
clc
mov
push
lret
in
xor
pop
inc
adc
push
xlat
xor
mov
mov
bound
and
int3
out
out
inc
push
cmpsb
stc
mov
cld
decl
push
mov
adc
inc
mov
mov
call
cld
or
inc
rclb
je
inc
lcall
mov
inc
negb
push
push
pop
lds
and
mov
aaa
into
mov
outsb
jle
jmp
push
xor
cld
mov
mov
xor
hlt
jo
jno
jo
loopne
test
jmp
push
add
rclb
in
sbb
repnz
ljmp
lcall
cmp
sbb
stc
xchg
add
mov
push
ljmp
jmp
sarb
stos
xchg
jmp
ss
adc
add
and
sahf
scas
sub
in
push
mov
dec
mov
scas
or
out
std
pop
xlat
ds
bnd
xchg
sar
add
das
and
adc
adc
push
push
dec
xchg
add
adc
cli
push
dec
mov
inc
sub
jmp
xchg
cltd
fwait
insl
movsl
btc
clc
xor
decb
inc
dec
gs
lea
add
mov
mov
inc
in
repz
push
fcmovne
rcll
or
xchg
pop
loopne
pop
jecxz
mov
mov
aad
inc
add
xchg
ds
call
test
mov
ret
orl
adc
push
jge
repz
and
dec
test
shlb
arpl
addb
pop
cltd
xchg
adc
cmc
ljmp
call
inc
cmp
and
lea
xchg
sub
mov
std
push
or
jae
call
cli
rcrl
or
lock
and
push
inc
xchg
aaa
cld
ljmp
jg
jne
rcl
popa
fdivrs
rcrb
loopne
mov
fidivrs
jge
pop
repz
xor
add
sub
call
fwait
pushl
dec
inc
push
loope
sbb
push
cmp
decl
ret
lds
popf
jae
repz
adc
es
mov
cli
push
pop
fcoml
push
aas
pusha
xor
das
mov
out
repnz
pop
or
negl
gs
pop
cmp
and
pushf
decl
aad
test
inc
ds
mov
mov
xlat
dec
popf
out
push
jbe
int
mov
and
jg,pt
cmpsl
icebp
and
pop
rolb
stc
and
outsb
push
hlt
loopne
call
mov
shl
pop
ds
sti
les
jb
cs
pop
xchg
leave
jne
das
cmp
scas
fxch
jo
dec
xor
icebp
mov
clc
push
pop
pushf
jle
lea
dec
and
mov
mov
or
jl
fwait
cld
or
divl
xchg
fucomi
mov
push
sbb
out
gs
jp
sub
fsts
mov
imul
cmp
sub
mov
fimuls
add
dec
incl
ljmp
add
sarl
mov
cmc
lcall
xchg
cld
out
push
cmpb
in
popf
and
dec
cmc
insl
int
pop
jo
movsl
int3
and
insb
es
fs
int3
int
xchg
adc
cmpsb
adcl
push
sub
insl
fidivl
jle
push
sbb
lea
push
div
pushl
sbb
push
xchg
cmp
sbb
sarb
xor
pop
pop
cmp
mov
or
or
jecxz
insl
jbe
dec
in
test
lahf
test
cmpsl
cmp
incl
cld
xchg
gs
pop
jle
sbb
leave
fwait
mov
daa
in
cmp
clc
push
fmul
in
jmp
jecxz
stos
or
out
push
sahf
jnp
lock
das
repnz
scas
pop
dec
lds
jg
dec
ja
je
sbb
pop
insb
and
xorl
mov
js
popa
sbb
xchg
sub
adc
jge
xor
gs
or
faddl
in
mov
jp
test
aam
stos
scas
lds
mov
lea
adc
dec
std
inc
cmp
popf
stos
push
jecxz
jo
lcall
add
inc
test
mov
mov
cmp
int3
test
add
cmpsb
iret
cltd
pushl
test
or
ss
inc
or
jno
cmp
mov
xlat
mov
ret
mov
in
sbb
mov
into
dec
test
and
insl
pop
out
insl
or
loopne
jo
pushf
lods
push
out
insb
mov
inc
popa
mov
out
pop
in
cli
rol
mov
push
incl
mov
mov
mov
aad
fstps
xor
arpl
out
xor
jns
sbb
ud0
lcall
fstps
mov
in
add
mov
dec
and
pop
in
icebp
xchg
ljmp
fsubrp
jmp
insb
icebp
mov
mov
fs
iret
sub
adc
sub
mov
clc
hlt
outsl
xchg
stc
add
jmp
jecxz
sbb
fists
adc
push
mov
pusha
scas
loop
xchg
pop
pop
lret
push
int3
sahf
jl
lcall
xor
jb
mov
pusha
mov
mov
dec
cmc
xchg
pop
cli
fdivrp
jmp
adc
dec
xchg
xchg
int
movsb
or
loope
mov
dec
filds
xchg
xchg
mov
decl
add
xchg
enter
nop
sbb
pop
cltd
mov
fs
dec
in
mov
lds
dec
les
into
in
out
push
fisttps
call
mov
xchg
add
pushf
mull
arpl
add
push
mov
lahf
std
lcall
and
cmc
mov
ljmp
imul
and
ret
dec
adc
aam
xor
popa
jne
scas
xor
ljmp
ror
rorb
add
jmp
test
add
ljmp
out
push
arpl
jmp
cmp
mov
outsl
adc
icebp
psrad
inc
iret
inc
dec
out
or
mov
pop
aas
cli
stos
incl
insb
mov
movsb
add
dec
cmp
xor
test
pop
mov
cld
call
std
mov
icebp
fnstenv
mov
cmp
imul
pushf
dec
data16
xchg
test
xor
pop
push
mov
out
popf
adc
jae
lahf
and
xchg
push
or
fdiv
dec
rcl
add
xchg
push
xor
mov
jmp
and
adc
loope
div
xchg
std
or
iret
mov
adc
pop
jbe
adcb
cmpsb
sbb
push
sub
push
jg
outsl
inc
por
and
scas
stos
add
test
jnp
mov
fldl
push
cwtl
xlat
mov
decl
int
and
arpl
mov
or
push
push
test
insb
ja
in
incl
int3
insb
cmp
adc
pop
adc
ffree
mov
daa
js
testb
ljmp
fisubrs
jl
or
jb
dec
push
ja
pop
ja
inc
pop
cmp
sub
xor
jg
andb
or
dec
ljmp
push
push
mov
pop
es
ss
mov
gs
in
inc
mov
or
cld
push
call
cmpsb
ja
pop
divb
in
mov
xchg
lcall
out
inc
jmp
inc
inc
or
push
mov
int3
cwtl
outsb
and
jl,pt
stc
call
mov
stos
adc
rcrl
loop
pop
sbb
ja
sbb
call
sbb
dec
jecxz
xor
sbb
popf
dec
fidivs
das
std
cmp
jns
cld
leave
clc
call
call
fbstp
nop
scas
addb
inc
xchg
je
repz
xchg
call
mov
pop
jmp
in
in
and
and
outsb
fcoms
mov
sti
inc
push
xor
test
xchg
and
je
pop
add
scas
fs
adc
sub
fisttpl
sar
call
push
mov
stos
into
shl
mov
adc
xor
jb
sbbl
incl
sub
pop
mov
mov
nop
scas
or
test
xchg
ljmp
pop
sbb
sbb
xor
bound
cmp
call
out
jnp
cmpsl
adc
enter
enter
jecxz
mov
movsl
push
xchg
inc
lahf
mov
icebp
push
dec
addr16
out
xor
mov
mov
sar
sub
jmp
xchg
loop
mov
adc
or
dec
popf
or
sbb
daa
cwtl
mov
mov
push
and
repnz
fwait
repnz
jg
std
xchg
cld
and
push
adc
xchg
inc
mov
jne
push
adc
jmp
int
dec
nop
stos
lahf
or
adc
sbb
and
sbb
call
call
lods
or
xor
pop
xchg
test
test
lret
test
dec
aam
jmp
push
fwait
loope
imul
sahf
add
mov
mov
stc
cmp
inc
mov
add
test
cltd
jg
adc
sub
cmp
dec
inc
jno
push
das
push
in
clc
stos
dec
int3
out
cmp
andb
sub
cli
push
outsl
cmp
cli
add
or
roll
mov
call
call
adc
leave
fs
inc
mov
jmp
call
fildll
ljmp
adc
cmp
dec
xor
push
adc
sub
xlat
lods
and
jnp
lcall
daa
and
xlat
mov
out
pop
lds
lods
mov
sub
inc
pop
xchg
xchg
cmp
pushl
loop
push
nop
repnz
aaa
fdiv
popa
sbb
jbe
and
pop
imul
enter
imul
fidivrs
jnp
push
cld
mov
in
fists
jle
jb
pop
and
ficompl
xchg
xchg
adc
push
cmp
push
movsl
mov
sub
pushl
jle
xor
sbb
pusha
sub
aaa
xchg
dec
and
xor
test
xor
test
mov
sbb
cmp
pop
mov
loopne
jae
mov
jg
push
jne
xchg
popf
adcb
ds
aas
in
lods
out
xor
pop
test
incl
xor
cs
jae
addr16
das
adc
mov
lcall
daa
and
lds
xlat
int
mov
lock
rolb
jg
or
andl
lahf
ljmp
sbb
cld
loop
mov
shll
adc
cmp
push
vpsubb
ljmp
mov
popf
lcall
out
dec
push
imulb
push
mov
dec
or
out
out
push
out
dec
mov
jmp
clc
jmp
push
mov
aam
leave
ret
das
shr
ds
call
mov
rorb
repz
cmp
and
inc
jbe
cmpsb
jnp
cmp
dec
popf
xor
add
mov
shll
bound
filds
jbe
jmp
imul
scas
adc
inc
into
fxch
inc
adc
dec
mov
das
testl
jl
ja
cmp
es
jbe
mov
inc
stos
decl
imul
neg
out
cmp
and
incl
push
sub
shrb
js
push
out
repnz
and
cmp
ds
movsl
jno
jle
xchg
jns
cmpsb
mov
push
sbbb
loope
or
incl
dec
jno
iret
cwtl
or
push
test
fsubr
arpl
or
dec
mov
xlat
ss
dec
shlb
mov
sbb
fidivl
xchg
lea
fwait
jmp
cld
cltd
dec
adc
pop
and
out
mov
cmp
movsl
incl
fidivs
aaa
dec
dec
pushf
or
not
mov
imul
call
inc
in
mov
mov
cmpsl
das
out
mov
or
ja
add
jle
jg
incl
shlw
inc
push
mov
sbb
iret
push
push
jg
inc
sahf
test
jmp
ret
fmul
pop
cmp
sub
xor
mov
lcall
movsl
push
sub
repz
loopne
adc
xchg
push
add
pop
cld
ljmp
cmc
pop
pop
mov
in
call
sbb
imul
jg
fsubs
decl
das
push
push
push
rcrb
js
scas
in
inc
sbb
jmp
inc
push
iret
push
out
xor
push
mov
popf
mov
divl
loope
pop
mov
jp
xor
push
mov
jb
push
cmc
push
in
jo
inc
iret
sub
aam
fcomps
lea
mov
jae
and
call
cwtl
sub
push
data16
call
ljmp
xor
into
jne
fwait
push
cld
jle
and
sti
cmp
cmpb
pop
js
ljmp
sbb
xchg
add
push
inc
jnp
sbb
cld
pop
lret
inc
adc
push
push
xchg
insb
xor
outsl
xchg
jb
add
cmpl
iret
xchg
sarb
cltd
mov
incl
jne
xor
sub
jo
xor
sti
mov
push
stos
or
jmp
pop
dec
and
cld
dec
fcoml
ds
stos
insl
jne
inc
jl
sub
ljmp
shlb
aas
icebp
int
mov
pop
dec
jno
mov
clc
xchg
xchg
insb
jmp
push
dec
neg
push
or
xchg
jle
sub
icebp
sbb
sar
mov
les
idivb
sbb
call
mov
jae
ss
loop
mov
dec
jmp
daa
insb
and
sub
pushl
cltd
jp
jl
mov
andl
jo
dec
sub
popl
xchg
jnp
sbb
fistpl
mov
inc
aad
jmp
js
and
ficoml
dec
in
pop
data16
pop
icebp
data16
popl
out
aas
rcrb
adc
testb
repz
cmp
cmp
pushl
stos
and
out
inc
mov
out
adc
jmp
arpl
out
fwait
cwtl
int
pop
lock
decb
fbld
in
mov
sbb
rorl
out
movsb
push
dec
cmp
ja
jmp
pop
inc
out
jge
insl
in
shlb
mov
insb
or
xchg
pop
std
in
mov
scas
pop
add
pop
jne
pop
jb
adc
pop
mov
test
mov
adc
and
jmp
dec
add
stos
dec
push
es
push
ffree
jge
flds
fadds
mov
jl
icebp
jmp
loopne
add
sbb
push
sbb
lahf
cmp
aas
xor
hlt
lcall
jg
or
pusha
xchg
dec
sbbb
insl
add
into
sub
rclb
pop
fcomip
std
dec
mov
xchg
shlb
out
push
xor
and
xor
cmp
dec
jo
mov
sbb
movsl
lcall
repnz
add
cmp
fstps
cld
mov
lahf
push
cs
stos
adc
and
stos
fisttpl
pushl
or
icebp
sbb
insb
pop
xchg
and
cmp
push
pusha
or
frstor
adc
in
ret
mov
jecxz
mov
cli
pop
jnp
jns
fisttps
loopne
push
subl
rcrl
in
pop
xlat
pop
sbb
decl
mov
xor
aad
or
insb
inc
gs
and
movsb
lret
hlt
push
ret
ljmp
push
dec
in
rcrb
mov
out
fs
int
pop
imul
xchg
decl
aad
and
dec
jb
and
mov
add
add
pop
std
adc
sub
in
add
or
pop
sub
jl
pushl
das
sbb
or
mov
sbb
sub
mov
imul
pop
sbb
sub
fdivr
mov
mov
dec
divb
aam
xchg
mov
cmp
jmp
jl
data16
pop
icebp
mov
inc
ljmp
fisubrs
incl
dec
push
pop
rorl
xorb
or
cld
incl
stos
or
dec
int3
mov
jp
sarl
dec
cmp
stos
push
inc
das
xchg
mov
jge
sub
iret
decl
dec
mov
int
ret
mov
mov
mov
ss
les
out
in
mul
leave
lds
insb
setae
or
icebp
dec
fimull
mov
cwtl
das
push
daa
mov
inc
xchg
pop
push
scas
pop
loop
lcall
jge
cmpsb
in
pushl
adc
lds
or
iret
in
fimuls
pop
mov
popa
mov
mov
lret
mov
daa
xchg
fcompl
mov
aas
in
outsb
and
add
cmp
and
outsb
jmp
jg
pop
inc
lock
psllq
cltd
jg
sahf
aam
icebp
sahf
ret
lds
inc
inc
mov
fcomip
int3
fdivr
in
pop
pop
cmp
fnsetpm(287
jb
jmp
orl
insl
push
call
push
jecxz
xchg
pop
insl
sub
inc
mov
enter
cmp
push
sahf
and
decl
cli
rol
ret
adc
rcrb
mov
out
add
inc
leave
dec
mov
jo
xor
push
dec
mov
mov
sbb
sahf
dec
mov
in
mov
aam
jp
out
aaa
add
std
dec
or
fdivrl
mov
pusha
cmp
sti
cmpsl
fmulp
mov
outsl
nop
cli
xchg
push
pushf
int
aaa
cld
push
mov
lret
lret
sub
jbe
and
dec
inc
jnp
sbb
pop
push
pop
cmc
pop
loopne
adc
pushf
jp
dec
pop
add
dec
xchg
call
mov
push
movsb
pop
roll
mov
pop
push
test
sbb
or
out
cli
inc
sbb
out
daa
ja
lret
ret
push
push
dec
or
lods
dec
call
pop
push
add
xor
call
mov
scas
cmpps
mov
lcall
ljmp
data16
les
outsl
jg
mov
push
fsubl
adc
xchg
repnz
xchg
in
incl
sub
xchg
sub
enter
iret
or
decl
mov
pop
in
ss
xor
lcall
bound
out
or
test
incl
int
sbb
sbb
or
jg
add
andl
mov
js
pushf
add
xchg
movsl
cmp
fwait
sub
rcl
mov
pop
or
loope
addr16
sbb
hlt
in
sti
jnp
lods
imul
add
xchg
aas
loope
inc
adc
fsubrs
sbb
incl
nop
xor
pop
or
inc
adc
jb
mov
negl
lock
xchg
lods
sub
aad
inc
addr16
dec
jnp
shrb
xor
pop
hlt
mov
sbb
insb
add
jg
adc
ja
movsb
cmp
testb
ficomps
popw
adc
out
cli
jmp
cwtl
sbb
movsb
jo
xor
in
repnz
inc
bound
shrl
aas
inc
jecxz
not
incl
mov
test
dec
mov
imul
mov
enter
test
xchg
cmc
jbe
filds
push
mov
fcom
cmp
scas
insl
pmuludq
sbb
rcrb
and
mov
sarl
in
int
ja
test
jmp
rcrl
repnz
repnz
push
push
mov
mov
mov
scas
cwtl
scas
jp
mov
jno
pop
push
pop
cmp
cmp
cmpsb
mov
cmp
xor
xor
imul
adc
sub
cld
lret
adc
or
out
les
mov
ficomps
fwait
jb
stos
out
ljmp
adcl
fninit
sub
pop
adc
mov
jg
stos
call
lock
in
fcoml
mov
je
or
bound
fs
jmp
xchg
sub
aaa
xchg
mov
jne
cmp
mov
je
jmp
fldt
sbb
or
test
push
imul
stos
xor
bswap
bound
push
mov
sub
cmp
mov
rcll
or
inc
insb
or
icebp
sub
jmp
cmp
je
mov
sar
pop
push
cmpsl
hlt
testb
aas
fiadds
and
les
mov
std
lcall
pop
and
imul
jg
cs
ja
xchg
pop
stos
and
dec
inc
addb
inc
subl
aaa
jp
sub
xchg
es
lcall
or
xor
mov
mov
arpl
jne
call
call
xlat
inc
jnp
out
stos
push
in
icebp
in
fs
lods
mov
mul
push
call
xor
bound
jle
push
mov
ja
pop
scas
dec
aam
loop
aaa
jae
icebp
mov
mov
push
es
xchg
inc
cli
sub
out
push
mov
push
dec
and
jp
incb
ja
negl
andl
and
xor
inc
mov
out
imul
push
mov
clc
mov
ljmp
push
jns
setbe
stos
xchg
aad
ja
insb
scas
aas
mov
mov
inc
cmp
in
pop
xchg
adc
sub
xchg
sub
lcall
sub
mov
in
call
fists
push
push
divl
sahf
nop
cmp
inc
xchg
mov
inc
pop
cmpsl
lcall
pop
fidivl
pushf
sahf
inc
fisttpll
out
adc
dec
loop
sbb
les
call
mov
jbe
lcall
test
pop
aad
xor
or
adc
bnd
rolb
mov
or
pop
add
addr16
xor
ja
sbb
xor
push
cli
inc
mov
cld
jb
xor
push
ficompl
ljmp
jne
push
or
int3
pop
ja
aaa
movsb
dec
rcll
movzwl
adc
dec
loop
cmp
lcall
dec
pusha
lds
xchg
lods
movb
jne
and
das
sahf
mov
mov
pop
lcall
call
lds
shll
ja
lds
jmp
or
fmuls
lcall
arpl
cli
and
push
xor
addr16
cmpl
and
adcl
dec
ljmp
ja
sub
push
jno
stos
nop
repz
add
sub
ja
or
std
incl
js
xor
clc
fs
mov
sub
mov
in
movl
mov
inc
popa
inc
mov
and
loopne
mov
data16
sbb
lea
in
push
std
pop
cld
mov
inc
ret
pop
enter
sbb
cmp
nop
femms
lods
stos
mov
in
lcall
out
lea
imul
insb
jmp
inc
xchg
dec
in
insb
jnp
mov
add
pushf
jo
mov
adc
sbb
incl
adc
or
and
es
and
out
popf
scas
shll
les
or
jmp
pushl
jo
mov
push
insb
mov
leave
rcl
or
mov
incl
pop
pop
jo
mov
adc
inc
out
int3
imul
jp
daa
aad
add
cmc
mov
pushl
adc
clc
push
jge
pop
add
inc
inc
cs
pushf
mov
incl
inc
ret
mov
jle
jecxz
and
cltd
and
pop
push
push
sub
rorb
pop
std
call
insl
sbb
jmp
addl
inc
cmp
cmp
jmp
sub
in
lock
xchg
out
bswap
inc
out
in
push
js
or
sbb
sbb
jecxz
mov
lods
popa
dec
insb
hlt
mov
test
loop
push
movb
adc
inc
stos
leave
out
pop
icebp
sbb
xchg
cmp
addr16
cmp
jmp
pusha
sub
cwtl
mov
push
je
pop
scas
push
call
and
sar
incl
push
fwait
inc
push
sbb
stos
mov
xchg
inc
minps
lret
jp
fistl
mov
and
adc
adc
cmpsb
add
cltd
lret
xlat
ljmp
cmc
mov
hlt
sub
push
dec
int3
into
or
mov
dec
das
leave
lcall
inc
scas
sahf
fcoms
xchg
fcoms
scas
and
jnp
mov
incl
hlt
int
mov
or
pusha
imul
pop
mov
jg
mov
xchg
es
lock
js
inc
push
icebp
mov
jno
mov
and
mov
int3
shrb
loopne
fwait
test
mov
jge
add
add
jns
jmp
outsb
push
lcall
int
lcall
daa
arpl
ljmp
pushl
lods
ss
sub
sbb
mov
add
insl
add
lcall
or
and
dec
jle
sub
aas
sbb
add
pushf
mov
jns
pushl
add
mov
jae
gs
mov
adc
je
adc
call
and
pop
add
cltd
pop
aad
pushf
orl
sub
loope
incl
jg
scas
fsts
movsl
sbb
mov
xor
inc
pop
bnd
ret
scas
rcr
incl
mov
or
push
clc
cmp
aam
loop
mov
jmp
mov
notl
cmpb
popa
call
repnz
loop
mov
mov
push
js
ds
test
mov
jno
mov
add
sub
sub
xchg
cmp
repnz
incl
jmp
cli
xor
addb
mov
xor
stc
jg
sarl
daa
pop
arpl
leave
jle
clc
mov
incb
cs
mov
add
stos
mov
pop
in
pushf
jmp
insb
lcall
push
test
das
lcall
es
push
xor
push
leave
lcall
mov
sarl
jbe
clc
sarl
call
mov
fisttps
add
fisubs
fists
sbb
mov
jg
mov
mov
push
outsl
ret
or
xchg
and
stos
mov
mov
ret
lret
mov
mov
add
lret
idivl
fs
mov
jl
leave
ja
jg
cmp
add
call
arpl
test
lcall
jne
in
lds
or
jp
insb
test
dec
mov
xchg
cmpsb
sbb
mov
ja
je
fwait
call
xchg
mov
fcomps
cli
arpl
inc
call
sub
sub
dec
ss
call
test
aaa
adc
xor
xlat
fisubl
sbb
into
sbb
rolb
and
std
in
clc
mov
loope
mov
ljmp
fisubrs
jno
jne
imul
lock
or
and
pushf
aam
dec
out
subb
rcrl
icebp
outsl
add
jmp
push
push
and
js
mov
ljmp
sub
mov
add
or
scas
cmc
clc
mov
push
idiv
jg
fmull
repnz
dec
lods
imul
repnz
xchg
and
aas
cmc
stc
adc
cmp
pop
and
repz
cmp
std
jge
adc
and
cli
and
or
decl
imul
outsl
push
inc
xor
mov
jnp
cmpsb
or
pop
lret
push
shufps
xchg
mov
into
cmp
inc
clc
pushl
xchg
xor
xlat
aas
or
jmp
dec
sub
jne
mov
pop
ljmp
cli
outsl
fadds
aas
hlt
lods
dec
cwtl
push
orl
dec
in
imul
aaa
std
in
cmc
xlat
pushl
xchg
sarl
imul
lret
shl
outsb
add
jg
mov
mov
ljmp
mov
or
mov
call
jbe
mov
cmpsl
mov
mov
call
and
inc
dec
loopne
cmpl
xor
call
cmpb
sarb
decl
insb
ljmp
daa
andb
and
jmp
pushl
xor
rorl
push
jae
ret
repnz
sbb
ret
mov
push
roll
mov
lret
jge
in
ds
jmp
push
push
cmpsb
dec
inc
mov
icebp
cmp
mov
ljmp
lods
fists
shlb
das
mov
and
repz
inc
and
and
mov
jmp
cltd
test
imul
rcl
or
adcb
int3
jp
sar
jg
incl
add
push
jno
or
stos
xchg
lods
test
mov
clc
imulb
inc
pushl
mov
inc
in
sub
add
repz
hlt
mov
mov
fwait
or
inc
adc
jmp
cmc
aas
fstcw
in
inc
arpl
jne
mov
pushl
add
fwait
inc
mov
gs
imul
push
mov
push
nop
fildll
scas
cmp
cmp
xchg
cli
push
fstps
xchg
mov
stos
repz
xchg
pop
in
cwtl
sub
lret
das
sbbb
shlb
stos
mov
mov
insb
xor
xchg
mov
cmp
push
aaa
push
cmc
rorl
sub
leave
aaa
mov
jmp
cli
test
sahf
or
inc
add
lret
add
dec
pop
mov
pusha
cltd
ljmp
clc
mov
pop
sbb
adc
mov
jns
shrb
jge
mov
mov
add
mov
pop
jge
xor
mov
int3
loop
fidivl
test
add
cld
sbb
dec
adc
fwait
jo
dec
into
dec
sub
decb
loopne
add
dec
adc
and
insl
hlt
or
mov
fwait
decl
jl
jp
out
cmp
sbb
pop
out
jb
xchg
cmpsb
sub
incl
js
adc
fnstsw
mov
incl
fstpl
xor
rcrl
jb
fidivrs
rcrl
jb
in
decl
lret
fisubrl
or
xchg
xchg
lock
xor
add
and
shl
pushl
outsb
fisubrs
sub
loop
pusha
enter
std
cmp
insb
cmp
scas
clc
jmp
insb
mov
fists
std
or
cmp
adc
ffreep
enter
mov
in
mov
lds
lret
enter
fldcw
mov
incl
imul
cmpsl
ljmp
push
mov
gs
xor
push
cmp
jg
in
xchg
scas
aaa
data16
cli
add
std
addr16
adc
adc
sbb
icebp
incl
add
dec
mov
mov
dec
mov
clc
leave
fistpl
or
cmp
sbb
inc
popf
mov
sahf
jns
cmpsb
pushf
in
loope
add
les
xchg
out
sbb
pop
mov
repnz
pushl
push
cmp
adc
popa
in
dec
inc
in
or
fsubr
adc
inc
fst
mov
fsubrl
xor
fs
jg
daa
pop
loope
fcmovu
mov
movsb
ret
pop
add
std
push
pop
lds
pop
fwait
call
cli
xchg
jecxz
arpl
cli
inc
inc
pop
fwait
jecxz
pop
adc
lock
pushf
xchg
outsl
push
mov
test
lcall
dec
pop
push
adc
loopne
nop
inc
mov
ljmp
add
mov
push
xchg
dec
insl
sahf
sbb
fdivr
fldl
shrb
pushf
mov
lret
cmp
mov
mov
js
pop
xor
aaa
push
pusha
out
inc
mov
sbb
mov
clc
cmpsb
in
stc
inc
rorb
loopne
adc
call
fs
fistps
or
mov
outsl
loope
popa
sbb
cmp
loope
push
cli
imulb
les
jg
gs
mov
ficoml
pop
fsts
adc
ljmp
mov
insb
mov
das
stos
jnp
movsb
pop
and
adc
test
ljmp
fsub
add
testb
mov
shrb
push
xchg
in
lret
pop
sub
and
incl
sbb
je
or
mov
add
sti
pop
aad
xchg
cmp
nop
cmp
jg
mov
push
or
jp
cmc
pop
pop
pop
adc
pop
lds
outsb
mov
mov
fs
mov
or
push
sbb
jg
add
push
mov
call
sar
call
cmc
mov
cmp
mov
cmpsb
or
sub
add
imul
pushl
add
xor
mov
call
dec
in
jecxz
cli
iret
enter
int3
fidivrs
lods
dec
dec
out
loopne
jg
mov
jle
cmp
jg
ss
mov
aad
icebp
sub
lahf
push
push
push
mov
sti
cli
decl
mov
inc
inc
push
test
jo
iret
lock
sub
jno
pop
jp
in
mov
jo
les
aam
mov
lods
aad
pushf
into
aaa
clc
xchg
sti
adc
cmp
pushl
inc
cmpsl
stos
out
mov
and
out
clc
adc
xchg
or
push
xor
ficomps
xchg
mov
adc
jmp
push
fldenv
jb
int
push
lret
repz
fnsave
lds
fistps
loopne
push
adc
or
fstl
xor
cs
adc
ljmp
dec
lret
mov
cmp
ss
sub
mov
or
cmc
decl
sbb
cmp
pop
ficoml
ljmp
incl
mov
xchg
cltd
nop
ss
ds
test
and
pushl
fsubp
adc
sbb
cmp
movsb
jno
sbb
sbb
outsl
pop
push
jae
call
lea
xlat
mov
xchg
dec
pushf
outsb
ds
into
inc
jne
dec
std
mov
in
decl
jne
mov
insl
icebp
lret
dec
or
sbb
js
jo
call
dec
jo
outsb
push
pushl
jl
and
push
and
xor
lock
bswap
mov
lret
loope
dec
push
mov
pushl
negb
orl
stos
xor
shl
pop
and
push
mov
incl
sbb
push
dec
movsb
inc
ret
in
sbb
pop
sub
std
iret
fcmovbe
div
mov
loope
clc
lcall
faddp
ljmp
enter
mov
dec
rcrb
mov
xor
movsl
loopne
lods
inc
xchg
pop
lods
adc
mov
xor
incl
sub
mov
mov
es
and
aas
push
pop
je
fsubr
sub
jmp
rcll
and
arpl
lret
dec
push
pop
mov
rorb
adc
or
arpl
inc
lods
sbb
xor
in
jg
cwtl
and
mov
jne
daa
loopne
lahf
mov
jno
inc
cmpsb
js
inc
xchg
pop
rclb
lcall
imul
arpl
sbb
das
adc
and
push
insl
stc
push
in
fstpl
div
xlat
bound
rolb
mov
aaa
sti
outsb
cmp
pop
cmp
ficoms
lea
mov
xchg
gs
and
dec
pop
jp
mov
xlat
dec
lret
inc
or
idivl
cmp
pop
mov
or
incl
xor
pop
push
ss
push
jmp
call
sub
cmp
sbb
cmp
xor
sbb
pop
or
aas
lcall
push
mov
test
xchg
ret
stos
mov
call
pop
ljmp
sbb
aaa
jg
and
mov
push
jmp
cmpsl
imul
mov
mov
shll
cli
adc
int
and
fldz
pop
call
mov
mov
movsb
xchg
fimuls
jnp
ret
mov
mov
adc
push
imul
aaa
test
push
sub
movsb
sub
call
loopne
in
cmc
mov
sub
inc
sub
cmpsb
pop
cs
jb
in
xchg
mov
and
xor
dec
mov
nop
mov
add
push
out
outsb
add
adc
jl
insl
mov
xchg
icebp
mov
sti
incb
scas
jae
jb
jg
ljmp
jecxz
sub
mov
test
inc
sar
push
inc
je
test
or
jmp
inc
push
aam
fwait
dec
adc
cwtl
cwtl
cmp
add
decl
decb
fdivr
xor
push
mov
sub
imul
push
cmp
js
loopne
repnz
fildl
cmp
mov
xor
mov
mov
xor
xor
adc
sarl
cmpl
ret
je
and
lret
fisubl
inc
push
xor
not
or
dec
jp
insb
pop
outsl
and
mov
pop
ljmp
mov
lods
sbb
cwtl
adc
fdivl
jle
dec
inc
mov
aas
cwtl
or
mov
add
out
jbe
dec
lcall
add
shrl
les
mov
cli
fistpll
pop
out
aad
ret
gs
ljmp
mov
add
pop
jae
or
outsl
push
jne
clc
jne
mov
mov
cwtl
scas
jecxz
xchg
mulb
inc
jmp
push
and
pushl
rolb
jl
or
or
insb
fs
push
outsb
inc
add
addr16
sbb
decl
ljmp
out
cmp
lcall
inc
icebp
lock
in
cmc
decl
add
ljmp
das
xor
neg
lcall
dec
icebp
mov
fmull
xchg
cld
pusha
pop
or
ja
jge
daa
sbb
rorl
sbb
xchg
mov
adc
add
inc
or
call
test
push
jnp
imul
lcall
xor
sarb
sarb
mov
xchg
mov
rcl
adc
outsl
lret
push
cmc
dec
and
daa
dec
iret
dec
test
and
mov
lcall
xchg
outsb
push
mov
mov
fs
shll
jmp
rorb
dec
fcomps
push
int
xchg
cwtl
lret
in
jg
xchg
rcr
loopne
xchg
cwtl
adc
fcmovnu
mov
adc
decl
mov
inc
pusha
push
and
int3
and
push
mov
xor
jns
lret
inc
dec
fcmovb
daa
or
decl
and
sbb
leave
dec
loopne
sbb
leave
faddl
mov
gs
xor
mov
sahf
jmp
mov
mov
pushf
xchg
cmc
add
and
adc
fisubs
icebp
decl
jae
jp
add
mov
aaa
sub
leave
pop
sbb
ljmp
ljmp
insl
mov
test
cmp
xchg
sub
mov
mov
or
dec
pop
mov
sub
push
lods
xor
hlt
scas
scas
pop
jge
lock
ljmp
fmull
int
push
mov
add
adcb
out
bnd
mov
mov
sahf
inc
bound
ljmp
mov
fldcw
fisttpl
mov
xchg
out
jg
or
mov
xchg
xor
sbb
pusha
testb
aas
sarb
aas
sbb
mov
lret
and
mov
lsl
call
mov
dec
xchg
pop
inc
dec
mov
loop
fxch
cmpsb
mov
movsl
and
int
mov
clc
rcll
xchg
xchg
xchg
push
jno
and
lock
jg
fdivl
daa
push
js
daa
push
mov
xor
add
test
add
pop
stos
or
sbb
repz
les
decl
pop
sbb
fistpl
rcl
mov
lahf
es
loope
fnsave
xchg
xor
call
and
dec
mov
stc
mov
pusha
in
inc
sti
aad
or
or
lret
decl
dec
sbb
xchg
into
push
mov
adc
int
sahf
add
xor
leave
xor
rclb
xor
lret
lods
cld
xrelease
pop
jp
and
dec
shlb
pop
cld
aaa
jl
xchg
jmp
shlb
cmp
inc
pop
xchg
sbb
mov
and
leave
xchg
lds
lret
lods
or
jns
loop
push
call
push
out
int
out
jae
xchg
mov
fsts
hlt
out
and
cmp
aas
and
push
sar
call
sti
mov
imul
popa
mov
add
sub
paddusw
mov
jo
mov
or
fnstsw
call
cmp
mov
adc
mov
rclb
sbb
repnz
cli
inc
loopne
add
pusha
jo
arpl
sbb
cmc
dec
testb
dec
cwtl
xchg
or
mov
inc
stos
xchg
imul
lods
push
jbe,pn
sar
ljmp
lods
xor
pop
push
cmp
cmp
jno
aad
mov
das
test
lahf
addb
inc
cmpsl
jecxz
jle
mov
loop
xor
mov
or
and
xchg
push
cmp
out
gs
jge
rorl
jmp
xor
scas
push
sbb
xor
mov
pop
mov
sbb
call
movsl
inc
inc
xor
xchg
bound
stos
and
push
dec
xlat
mov
dec
mov
xchg
arpl
jg
outsl
add
jae
cmp
repz
ljmp
jle
call
stos
pushf
mov
adc
or
dec
jle
add
jmp
ljmp
add
stc
gs
jo
mov
fwait
push
inc
pop
fnsave
out
bound
pop
fcomip
call
dec
es
and
inc
les
cmpsl
xchg
loope
lcall
sub
xchg
imul
std
arpl
inc
aaa
xor
and
sub
decl
add
ds
roll
sbbb
pushw
cs
jecxz
decl
pushf
jg
jne
popf
lret
repnz
mov
std
test
rcll
das
rolb
out
mov
xchg
fdivl
mov
jmp
std
cwtl
cmc
sub
jns
jmp
pushl
inc
es
pusha
push
movsb
add
or
inc
mov
stc
call
movb
adc
mov
imul
stc
jp
aaa
sbb
nop
adcl
and
and
insl
cmpsl
rorl
lods
popa
aaa
fdiv
inc
arpl
mov
fisttps
and
fucomi
or
add
cmp
xor
aaa
in
sahf
xor
cmp
inc
fldt
add
push
cmp
call
mov
sub
ds
push
push
mov
fs
push
fildl
incl
loop
movb
push
jmp
lods
rclb
xchg
in
inc
inc
lret
xchg
hlt
fs
add
dec
popf
icebp
sbb
mov
jecxz
cltd
mov
push
xor
sub
mov
cmp
movsl
sub
push
in
mov
add
mov
ficomps
mov
popf
cmp
mov
adc
jo
jmp
jge
std
mov
dec
mov
aam
xor
xchg
subl
adc
cmc
push
out
mov
pop
xchg
scas
mov
jg
ret
or
incl
aam
sub
push
setge
jne
out
sub
fstp
inc
out
idivb
sub
pushl
push
mov
jae
cs
pop
mov
sub
add
dec
lods
icebp
cmc
daa
xor
pushl
iret
xchg
xchg
scas
lock
cmpsb
arpl
add
sub
mov
xor
pop
mov
jb
inc
pushl
insl
pop
shll
shl
cmp
pop
cmp
dec
lock
sub
scas
mov
cmpsb
hlt
or
jmp
xchg
cmp
cmpsl
outsl
in
xchg
adcl
ljmp
add
hlt
adc
jl
sub
adc
pop
mov
or
int3
add
call
dec
js
cmpsl
xchg
call
shrl
repnz
adc
cmp
mov
sbb
push
jne
lret
sarb
or
sbb
dec
incl
adc
fildl
jle
scas
ja
bound
aad
aad
add
push
pop
lcall
sbbb
andl
adc
cld
decl
mov
icebp
les
xchg
or
call
mov
mov
add
sti
pop
jecxz
dec
or
jg
mov
std
add
push
scas
ljmp
adc
clc
call
mov
test
and
outsb
scas
push
mov
inc
xchg
xor
das
jmp
fisttpll
inc
dec
test
ljmp
jg
jg
mov
cmpsb
cltd
testb
lcall
pop
into
jp
adc
cmp
insl
mov
xchg
or
push
dec
fisubs
inc
faddp
lea
xchg
cltd
das
std
aas
push
cmpsb
push
mov
jb
inc
imul
pop
std
mov
call
call
xlat
mov
push
in
or
jle
popf
inc
lods
mov
das
cmp
inc
and
jmp
cld
xor
outsb
mov
xchg
sbb
mov
adc
mov
clc
idiv
inc
sbb
loopne
outsb
mov
mov
sbb
add
ss
and
js
pushl
adc
loope
mov
jno
sbb
imul
push
ljmp
xchg
pop
cld
jl
jne
mov
cmpsb
sbb
or
sbb
decl
jmp
pop
push
push
xor
dec
mov
in
sub
mov
jp
mov
lcall
fiadds
jge
sub
data16
sbb
sahf
pop
mov
pop
decl
dec
push
pushl
shll
loope
or
pusha
cmp
call
fsubrl
data16
in
cmpb
dec
loope
movsl
iret
ja
xor
js
jle
dec
push
neg
dec
gs
pop
mov
lahf
in
or
daa
pop
jbe
orl
pop
icebp
inc
out
fsubrs
add
lea
cmp
sarb
mov
jo
mov
cmp
loop
cmpsl
fstpt
lahf
insb
jmp
jnp
sbb
fwait
aad
cmp
mov
hlt
jg
xor
adc
xor
pop
ja
icebp
mov
lret
call
ret
push
subl
scas
inc
jmp
mov
add
dec
xchg
cli
mov
cmp
loope
mov
aas
or
popa
and
inc
jmp
lods
jnp
inc
cs
call
stos
inc
test
movsb
fmull
in
inc
cli
or
pop
jo
inc
lret
cmp
aaa
add
lret
fbld
jecxz
mov
in
popa
fs
adc
fwait
decl
sbb
bound
imul
inc
adc
push
rclb
xor
mov
incl
push
and
push
inc
xchg
adcb
mov
mov
decl
mov
mov
inc
push
enter
hlt
dec
stos
mov
pop
mov
push
mov
and
mov
jge
shl
cmpsl
aas
dec
lock
aad
jmp
les
cld
in
add
notl
cmp
push
xor
add
lcall
sti
push
ss
ss
cvttps2pi
pop
sbb
sarl
push
clc
ljmp
and
out
loop
and
jo
ja
cli
mov
pop
mov
mov
loop
outsl
aad
ljmp
adc
add
hlt
inc
and
xor
enter
lcall
push
sbb
lods
mov
loope
in
sahf
cwtl
xchg
inc
mov
pop
repz
adc
jbe
sub
call
inc
inc
fstpl
xchg
fimuls
insb
fmull
or
lcall
xor
dec
and
fnstenv
jno
icebp
lds
pop
cwtl
push
jecxz
scas
ds
in
decl
mov
mov
outsb
push
mov
mov
pushf
dec
lods
sbb
sub
sbb
mov
jp
and
jg
sub
scas
sub
arpl
jle
mov
sti
in
out
insb
arpl
cmpsb
shr
stos
cltd
push
or
jmp
popa
mov
fcmovnbe
mov
pop
imul
cwtl
icebp
fs
ja
push
sub
nop
out
in
xor
dec
inc
lods
dec
lds
nop
jg
decl
or
fiadds
stos
movsb
insb
jns
pop
sub
into
mov
cmp
push
pop
and
jmp
out
mov
les
and
in
pop
std
sahf
lcall
jne
or
push
push
arpl
out
bound
out
pop
add
nop
jae
jmp
in
cmp
cmp
arpl
or
cltd
ljmp
aad
jg
decl
testl
ljmpw
push
stc
stos
aad
fs
lcall
push
push
add
mov
das
stos
sahf
fimull
in
cmp
mov
decl
sub
data16
ds
ds
add
pop
and
lods
cmc
pop
lock
add
push
xor
sbb
jecxz
lret
test
push
outsl
adc
jne
cwtl
movsl
pop
sub
jae
xor
ret
into
cmp
fiadds
loopne
inc
jg
push
sti
pop
lret
push
jns
mov
fisubl
rcrl
pop
lds
mov
add
stos
xchg
fldcw
sbb
sbb
xchg
into
xchg
rolb
ljmp
dec
daa
mov
xchg
in
cmp
dec
xlat
cmc
mov
pusha
movsb
mov
sub
in
lcall
in
stos
xor
adc
inc
mov
sub
sbb
mov
sbb
pushl
in
dec
stos
fldlg2
shlb
sbb
aad
enter
mov
popa
adc
mov
cmp
aas
add
loopne
jp
mov
push
orl
test
call
arpl
jno
movl
pop
lcall
dec
sti
and
test
xchg
clc
xchg
maskmovq
idivl
loop
sub
add
inc
dec
ucomiss
imul
sti
repnz
out
mov
call
cld
idivb
fimuls
sbb
sbb
out
js
gs
or
fwait
jle
imul
pop
rolb
push
out
add
jecxz
test
mov
enter
call
jbe
add
add
clc
mov
stos
sub
xor
jmp
mov
dec
pushl
fstpl
sti
pop
fldl
insb
jecxz
xchg
popa
jno
jbe
fdivl
adc
jmp
js
out
jne
cltd
mov
pop
jo
jle
cwtl
adc
test
je
sbb
mov
incl
das
lahf
mov
aad
sbb
add
sahf
lods
xchg
xchg
mov
mov
les
ds
or
dec
shrb
lcall
clc
pushl
xor
shlb
mov
add
testb
and
dec
cli
decl
das
movsb
mov
shll
cmc
leave
xchg
stos
mov
jle
popa
xor
cmp
pusha
xchg
inc
push
fs
call
and
popf
pop
sbb
sub
movsb
push
jb
loope
adc
ljmp
mov
sub
xchg
or
into
subl
lods
icebp
or
cmp
mov
mov
stos
push
test
jmp
pushf
pusha
or
jl
xor
inc
mov
xor
jnp
sbb
jge
test
mov
int
cmp
cwtl
xchg
or
mov
pop
jge
movl
mov
pushl
rcl
sbb
clc
sub
xchg
repnz
in
clc
pop
push
popf
shlb
call
pop
cmpb
push
fdivrs
inc
stc
push
shrl
mov
sarb
mov
push
push
jae
inc
sarb
mov
xor
test
mov
dec
mov
jmp
ljmp
rclb
lret
out
cmpl
and
jecxz
jne
sub
xchg
xorl
es
fwait
inc
in
aam
lods
addr16
cmp
inc
in
aad
jb
ret
pop
jg
ljmp
popf
sub
xchg
clc
icebp
push
mov
cmp
push
sub
cld
sub
enter
in
bound
std
sar
and
dec
mov
fldcw
rcr
mov
push
or
hlt
clc
scas
inc
out
sbb
dec
sub
dec
andl
test
enter
call
sub
icebp
das
cli
lock
mov
lods
mov
add
negl
cmc
incl
pop
add
xchg
sub
cwtl
fiadds
insb
fmulp
jecxz
push
or
popa
pusha
add
jge
lret
sbb
dec
lea
mov
dec
dec
loopne
mov
xchg
bnd
fcomip
jmp
lcall
lock
test
mov
lea
xchg
fidivrl
pushl
xchg
ret
mov
pop
jmp
rclb
push
push
ljmp
add
push
pop
lcall
scas
enter
mov
loop
pusha
or
sbb
fidivrs
jmp
mov
push
mov
adc
ret
lcall
pop
rorl
jl
pusha
lahf
or
or
lds
fiadds
or
aaa
jmp
decl
inc
add
push
std
cld
repnz
dec
mov
scas
mov
ljmp
push
xchg
aad
rorl
cmp
testb
adc
out
inc
mov
test
mov
call
fcom
shr
lock
jmp
xor
aam
scas
add
loopne
xor
inc
loope
inc
shll
sub
ficomps
pop
fwait
dec
mov
mov
fcmovnb
adc
mov
stc
iret
mov
call
mov
ljmp
test
jo
ljmp
stos
sahf
xchg
call
movsb
imul
and
aam
sub
sbb
mov
jmp
lret
jo
mov
lcall
jp
aaa
test
scas
sti
cmpsl
dec
xchg
xor
scas
daa
cmpsl
das
mov
fnstcw
cmpsb
add
jle
or
in
cmc
add
popa
popf
sahf
lods
inc
mov
dec
mov
aas
sub
dec
jmp
sbb
ret
mov
mov
negb
xchg
insl
ret
pop
shl
add
mov
cmpsb
pop
cmp
ja
stc
js
adc
std
jle
cld
pop
cmp
ror
scas
aam
pop
sbb
xchg
lods
cmp
ja
outsl
push
dec
hlt
lcall
xorb
xchg
repnz
push
adc
inc
arpl
mov
outsl
mov
jae
in
imul
mov
xchg
mov
std
inc
mov
std
mov
cmp
inc
lcall
xchg
cld
dec
out
inc
adc
cmp
call
adc
push
movsl
push
addr16
cmpsb
push
dec
cld
sub
insl
imul
pushl
call
jg
decl
test
test
adc
inc
jmp
fstpt
fisubl
or
pop
dec
call
jmp
mov
adc
push
roll
and
lds
mov
testl
call
pushl
rorb
pop
jne
mov
fists
push
xchg
mov
ss
and
icebp
jmp
mov
mov
cmp
mov
dec
jb
add
xor
xchg
mov
movsl
jg
push
xchg
fs
leave
dec
mov
push
mov
incl
and
subb
lahf
sub
shr
inc
jle
cmp
fadd
inc
je
xchg
mov
mov
cld
lcall
fistl
mov
pop
rcrl
or
decl
jle
or
decb
int3
sub
pop
das
fists
and
and
test
das
lock
pop
in
push
pop
dec
shlb
scas
mov
pop
inc
test
sub
mov
shrl
loopne
jne
inc
add
in
mov
cmp
or
ljmp
sbb
add
or
or
addr16
lods
mov
jmp
push
dec
fcmovnu
clc
mov
inc
add
outsl
sub
or
mov
dec
or
dec
xchg
notb
pop
jl
mov
sahf
hlt
xchg
idivb
insl
cmpsb
xchg
xlat
outsb
pop
fs
mov
repz
xor
cmp
cli
mov
dec
fwait
xor
mov
ficoml
xchg
scas
cmpsl
adc
pop
mov
push
pop
mov
aam
add
mov
pushl
stc
hlt
test
add
out
mov
inc
push
add
cmp
xor
sub
pop
call
xor
mov
ljmp
rorl
mov
in
sti
enter
xchg
pop
pushl
cli
mov
jb
lds
aas
sti
sbb
aas
jmp
aam
mov
mov
and
sahf
xor
or
xor
and
push
call
add
lods
popf
dec
rcrl
push
add
cmpsl
adc
inc
call
or
jae
mov
inc
das
sti
cmp
xchg
das
push
fistpl
scas
jmp
push
jg
mov
ljmp
sub
scas
push
dec
stc
mov
and
sbb
sbb
xchg
xor
or
push
cmp
lcall
push
ljmp
mov
and
inc
xchg
bound
and
push
out
popa
incl
and
or
fdivr
mov
dec
fidivrs
push
out
jae
pop
fldl
hlt
lret
andb
cmc
rorl
call
push
add
repnz
sarl
out
rolb
jp
mov
test
adc
jmp
roll
jl
jb
mov
jbe
pop
rorb
jg
ljmp
es
mov
mov
sarl
lret
xor
cmc
xchg
test
ret
les
push
loop
jl
rcr
mov
xchg
sub
in
insb
stos
ja
lods
adcl
cmp
dec
push
aas
cmp
leave
lods
jne
lret
xchg
or
ret
daa
fwait
sbb
decl
call
and
xor
add
xor
mov
push
mov
mov
cmp
push
xor
mov
push
sbb
gs
mov
imul
sbb
pushl
jbe
inc
cmp
into
pop
lock
xor
sbb
add
cmc
jmp
push
aas
push
cmc
push
push
mov
iret
cli
push
fs
xor
in
leave
mov
or
call
sarl
jns
adc
sbb
push
sub
xor
aam
pushl
ja
mov
inc
mov
fisubrs
cmp
dec
dec
sub
incl
dec
dec
jbe
push
sahf
mov
in
loopne
pop
xor
cmp
sbb
sahf
es
dec
mov
jmp
push
rclb
inc
stc
dec
out
push
rcll
in
imul
or
cld
gs
call
cld
cmpsb
mov
inc
test
lods
lds
test
push
dec
push
int
cmp
pushl
pusha
addl
cwtl
jbe
leave
jne
dec
mov
clc
mov
mov
jle
push
fnstenv
les
xchg
cmp
sbb
dec
mov
into
lds
push
icebp
jle
jbe
out
adc
and
jg
decl
xor
lods
mov
adc
jge
adc
and
insl
hlt
arpl
sub
jmp
jne
and
inc
jmp
jne
mov
xor
out
jbe
xchg
lcall
pmaxsw
or
lods
mov
mull
dec
sbb
push
es
push
jge
aaa
outsl
mov
ja
jmp
negb
pop
inc
ret
xchg
stos
push
pop
mov
popa
imul
lds
call
push
inc
pusha
cmp
jbe
jecxz
insl
cmp
ret
in
mov
outsl
clc
lcall
shrl
xor
jnp
popa
divb
std
in
adcb
out
loop
mov
dec
mov
adc
push
and
mov
call
xlat
je
and
int3
jmp
sbb
mov
push
in
out
adc
adc
sbb
stos
shrb
mov
lcall
mov
cmp
inc
test
mov
and
ret
out
shl
rclb
mov
xlat
mov
jge
jle
inc
subl
in
push
incl
out
adc
ljmp
mov
push
test
iret
adcb
jae
adc
out
cli
jmp
inc
fsubrs
in
xor
pusha
dec
jle
aad
mov
fs
pop
cmc
and
jmp
mov
mov
into
sub
fisubs
sub
mov
inc
loopne
pop
cld
call
cmp
in
sahf
mov
cmp
das
gs
cmc
push
cmpsb
test
pop
and
cmp
call
aam
aam
cmp
sar
scas
sbb
test
aas
xchg
cmpl
cs
xchg
bound
stos
add
ret
add
and
sti
sub
rcl
mov
mov
mov
adc
ja,pt
cld
jne
dec
push
dec
push
in
or
incl
cld
mov
mov
popa
xchg
fnstcw
mov
lcall
sar
sarl
addb
xorb
mov
push
pop
or
push
bnd
decl
stc
mov
icebp
aas
in
lods
mov
ret
or
test
sbb
xchg
cmc
int3
test
lcall
decl
das
lret
mov
mov
adc
sub
ljmp
adcb
jno
test
cmp
mov
adc
test
mov
call
ret
inc
pop
jno
mov
dec
in
xor
or
stos
jecxz
pop
adc
fcomip
outsl
popa
cld
mov
mov
dec
data16
push
notl
fsubrs
insb
pop
jmp
add
push
in
loope
fistpl
cmpl
jae
fdivr
outsl
adc
test
aad
jle
xchg
mov
fisttps
or
add
jg
pop
pop
mov
ja
fisubs
loopne
and
fcoms
sub
adc
mov
mov
pop
loope
repz
nop
nop
pop
arpl
push
xor
mov
jmp
testl
inc
imul
lcall
pop
jl
jecxz
xchg
cmp
xchg
sub
mov
outsl
cmp
inc
push
imul
mov
cmp
and
les
or
mov
cmpsl
andb
shlb
push
add
mov
mov
mov
popfw
xor
dec
fwait
jle
lcall
mov
adc
xchg
daa
mov
adc
mov
push
sub
sbb
fdiv
mov
movsb
add
add
cmp
call
and
inc
vmovups
cmp
pushf
test
call
test
sub
aaa
fwait
mov
fisttps
fwait
mov
in
push
and
mov
mov
incl
sahf
sub
lcall
repz
mov
stos
out
pushf
nop
mov
ret
dec
add
sbb
arpl
addr16
test
daa
sbb
xorb
pop
lock
push
mov
orl
sarl
rcrb
ja
inc
clc
ljmp
xor
sub
enter
call
rcrb
scas
enter
sub
imul
inc
xchg
sbb
jae
addr16
ljmp
mov
arpl
or
dec
mov
fs
xchg
in
outsl
mov
ret
enter
das
ljmp
shl
out
jg
cs
sbb
js
into
jecxz
rolb
inc
sbb
call
in
add
sbb
es
popf
test
stos
sub
push
in
and
sub
addl
add
incl
mov
sahf
cld
loop
lock
out
mov
icebp
jmp
incl
cltd
addr16
cmp
bswap
pop
fldt
nop
jnp
stos
pop
add
jp
call
decl
ret
push
lret
call
outsl
add
out
addl
push
ljmp
pop
mov
push
stc
xchg
mov
xchg
mov
and
les
repz
cmp
jmp
mov
stos
sarb
ljmp
adc
sbb
xor
sbb
push
inc
fidivrl
push
dec
test
in
sub
push
int
mov
stos
sub
or
inc
mov
xor
mov
dec
mov
mov
xchg
jmp
mov
mov
mov
sarb
mov
dec
lods
adc
inc
cli
divb
jbe
lret
xlat
dec
scas
adc
fnstcw
cmp
push
ljmp
mov
imul
add
lods
data16
dec
pop
pushw
loopne
loope
stos
sub
mov
out
xlat
lods
jmp
int3
lods
mov
call
lret
stc
ds
loope
imul
adc
cmpsl
inc
push
xor
rcrl
mov
and
repnz
lret
cmp
xor
mov
gs
mov
aam
jg
and
leave
inc
jne
mov
pop
adc
stos
cld
addr16
jg
inc
jg
test
stos
push
pop
in
aas
outsl
jb
pusha
inc
dec
mov
xchg
lcall
ljmp
movb
pop
ror
lods
int3
rorb
outsb
imul
pop
icebp
lods
idiv
dec
adc
int
leave
mov
ud0
mov
or
nop
add
cwtl
stos
jnp
call
mov
stc
adc
jge
pushl
sarb
cltd
lea
xchg
lods
test
sti
mov
mov
cmpsb
dec
sub
dec
mov
out
cli
add
les
pop
xor
xlat
cmpsl
outsl
popf
ja
fnstcw
mov
lahf
das
insl
popf
pushl
xor
add
mov
iret
popf
sbb
pusha
mov
lds
jmp
cmp
inc
mov
sbb
xchg
adc
jmp
out
cwtl
fbld
lret
mov
xor
test
pushl
std
das
sbb
xchg
das
push
lret
imul
je
stc
pop
xchg
mov
cli
out
cli
push
rolb
mov
ret
mov
dec
shr
push
in
call
cli
dec
mov
xchg
cmpsb
popf
popf
xor
add
mov
push
popf
sub
test
push
pop
mov
popa
aaa
call
ljmp
push
or
xor
or
and
or
in
or
out
test
add
sbb
icebp
add
ficoml
sti
add
xor
pop
sti
minps
inc
xor
mov
sbb
and
pop
jbe
cs
stos
xor
mov
in
imul
inc
inc
mov
imul
fadds
push
neg
in
pop
sub
in
cmp
rcll
hlt
leave
dec
push
ljmp
insb
jge
inc
or
cmpsl
dec
leave
les
pop
test
incl
sbb
lock
mov
aaa
out
int3
stos
lret
fucomip
and
jo
pop
lcall
int
das
or
or
cs
push
aaa
pop
mov
cld
mov
and
jnp
stos
fsub
xchg
xor
shrb
xchg
es
sarb
xorb
xor
pop
fnsave
pop
jmp
test
adc
inc
rcll
jno
xor
push
stos
cs
call
sbb
out
push
add
jge
lods
aam
push
out
ret
ja
push
test
cmpsb
sub
jmp
cmp
ret
sti
xchg
pop
movsb
lods
xor
insb
imul
jecxz
jp
incl
jno
adc
inc
cwtl
out
cs
loope
mov
jmp
and
addr16
out
sbb
mov
lods
repnz
jb
cmp
push
inc
cmpsb
push
pop
pop
out
das
in
fsubl
add
sbb
sub
cmp
jmp
frstor
and
jg
sbb
push
and
arpl
adc
outsb
je
cmc
fimuls
ljmp
mul
gs
pushf
or
add
jg
xchg
lcall
dec
jecxz
lret
pop
dec
inc
rcrb
sbb
pop
and
cmp
jle
cmp
lea
pop
push
decl
lea
arpl
and
xor
in
mov
pop
or
jmp
mov
push
ds
sub
jne
loop
and
in
push
or
inc
lds
mov
addl
int
push
add
mov
cmp
fildll
cmp
pop
ljmp
shll
sahf
sub
and
inc
cld
ljmp
cld
std
cmp
adc
and
sub
sub
daa
mul
jbe
popa
test
in
push
adc
mov
data16
jecxz
scas
xchg
pop
sub
jecxz
jecxz
cmp
mov
sub
decl
mov
and
dec
jp
ljmp
mov
dec
rcrl
mov
inc
push
mov
shrl
rol
sbb
fdivrp
or
jmp
mov
pop
mov
ret
sub
push
mov
cmp
decl
adc
fst
pop
push
fcoms
inc
iret
mov
adc
ret
shll
pop
movsl
mov
aad
jecxz
sbb
cli
jae
dec
into
xchg
lret
sbb
idivl
fidivrs
or
shlb
xchg
addl
ja,pt
xchg
dec
dec
mov
sbb
xchg
add
mov
subl
jge
mov
lcall
fisubrs
mov
les
jl
push
shl
inc
cmc
dec
xchg
cmp
ss
lcall
sbb
cmp
xchg
dec
ljmp
into
adc
outsl
decl
mov
push
pop
push
xchg
int3
jnp
xchg
xchg
cmp
xchg
cmp
hlt
cmp
lcall
fnstenv
scas
push
push
jecxz
ds
ret
incb
iret
xchg
xor
add
push
or
testb
decl
mulb
xchg
xor
adc
sahf
scas
mov
xlat
ljmp
incl
cmp
nop
fists
and
mov
inc
mov
add
and
aas
call
adc
or
out
adc
push
aam
add
jmp
pop
mov
xchg
aam
in
repz
dec
pop
lahf
inc
lret
in
cltd
sub
mov
test
mov
lcall
jno
enter
in
lock
rorb
fs
das
movsb
cmpb
jp
jne
call
mov
inc
stos
bound
iret
inc
es
outsl
cmpsb
and
push
xchg
pop
icebp
inc
dec
loop
jg
mov
pop
mov
pop
jno
or
mov
pop
dec
mov
jmp
mov
stos
inc
loopne
or
cmp
call
shlb
and
mov
hlt
cli
xchg
add
dec
jge
incl
jno
rclb
loopne
in
call
insl
es
add
lds
push
jb
mov
fildll
push
xor
adc
mov
mov
clc
ss
scas
or
mov
cmp
pusha
aad
mov
fwait
jmp
mov
xchg
push
cmp
pop
push
testl
xchg
mov
jmp
inc
inc
fwait
into
push
push
xchg
cmp
pusha
sti
adc
imul
or
nop
jb
cltd
shll
fistl
cmp
adc
inc
add
pushl
xchg
mov
ds
sbb
sbb
mov
enter
mov
lret
mov
push
rclb
cmp
or
leave
and
adc
out
mov
aas
mov
cld
fistpll
scas
inc
push
enter
add
mov
add
cs
ret
test
pop
jg
push
aam
hlt
add
rcrl
pop
shrb
mov
cmpsb
pushw
sub
mov
cli
fbld
mov
push
popa
lds
out
call
xchg
clc
sbb
mov
sub
xchg
aas
pop
pop
cmp
scas
or
mov
out
loope
test
jae
xchg
xor
inc
xchg
push
filds
jo
gs
jnp
test
jmp
add
jmp
nop
popf
ss
je
ja
inc
mov
inc
cmp
pop
aad
mov
aam
push
ja
std
in
jg
rcll
sub
sub
insb
into
pop
das
shr
leave
std
pop
and
jmp
stc
paddsb
mov
sarb
int
in
out
imul
xor
cmp
mov
lds
arpl
mov
outsb
movsl
in
lret
lea
hlt
call
std
mov
clc
mov
cmc
mov
mov
fists
repz
and
inc
cmp
in
inc
xor
sbb
lods
lds
inc
sar
call
test
sbb
ss
xlat
jle
mov
mov
repz
jle
add
ljmp
bound
jo
inc
and
lret
cmp
push
push
xor
dec
add
cmc
xchg
jns
repnz
push
push
xor
fnstcw
pop
and
push
lock
cwtl
push
xchg
xchg
incl
push
mov
push
pop
sahf
shrl
mov
and
or
aad
add
and
pop
call
adc
jle
jne
sahf
outsl
pop
imul
mov
cmp
xor
gs
inc
mov
sub
icebp
push
sub
adc
cltd
and
sbb
dec
hlt
push
cwtl
and
int
cltd
pop
and
out
andl
fidivs
ljmp
hlt
clc
lret
aam
and
or
push
adc
push
lock
decl
mov
dec
sbb
pop
pusha
cmpl
mov
lds
fisubrs
test
pushl
ljmp
repz
cld
sbb
jl
inc
xchg
jl
xchg
call
aam
mov
repz
xchg
sbb
sahf
std
mov
mov
int
lcall
sbb
jb
loop
jp
ljmp
sbb
cmpsb
mov
divb
mov
xorb
shlb
or
iret
icebp
push
mov
incl
ret
sbb
fucomip
dec
nop
movsl
sub
xchg
in
dec
mov
fs
pushl
nop
arpl
sub
and
lfs
xor
lahf
dec
arpl
ja
rclb
sub
int3
out
in
sbb
scas
cli
popa
shll
sbb
idivl
jns
pop
pushl
adc
lret
push
cmc
loopne
dec
int
sub
adc
in
bnd
sbb
stos
test
cltd
sub
idivb
iret
pop
leave
and
addr16
jg
call
mov
sbb
lret
cwtl
pop
movsb
sbb
fmull
fiadds
adc
mov
cmp
stc
mov
or
insb
and
xor
loopne
mov
xchg
pop
fcomip
ds
and
call
fldenv
jo
daa
ljmp
call
cmc
jns
aas
in
xor
out
shll
mov
push
push
add
pop
repnz
mov
xor
jo
inc
mov
dec
jecxz
cmp
pop
sbb
hlt
push
lock
ficoms
dec
in
xchg
sti
out
adc
mov
xchg
cs
sar
mov
inc
lds
adc
movsl
dec
cmp
push
scas
cli
incl
ret
mov
mov
dec
mov
xor
or
adc
xchg
pop
shll
push
movsb
mov
jns
inc
daa
sbb
xor
jmp
call
bound
cmpsl
or
stc
mov
fadd
add
call
jo
sub
outsl
aam
jmp
jae
shlb
int
jne
jno
ljmp
loop
sub
mov
test
pop
out
imull
sbb
sti
jae
int
sar
lcall
enter
and
xchg
outsb
xchg
cmp
push
mov
and
lcall
clc
and
push
xchg
cmc
cmp
xchg
pop
faddl
imul
fs
mov
add
push
lds
dec
adc
xorb
dec
cmp
cmc
shll
pushl
insl
andb
mov
fldcw
inc
sbb
jb
mov
orb
jmp
sub
jne
push
fsub
out
punpckhdq
jp
lock
mov
mov
movsl
xchg
pushf
mov
lahf
pop
outsl
mov
or
mov
mov
call
outsb
push
inc
and
mov
es
pushf
mov
gs
jecxz
fiaddl
aam
lds
xchg
xchg
insb
push
testl
into
mov
loopne
lds
in
bound
jmp
jp
stc
cmp
ficomps
jo
xchg
das
xor
xchg
and
sub
jno
dec
in
jo
xchg
lods
lods
jg
xchg
adc
mov
inc
mov
pop
mov
das
or
test
aas
push
push
dec
imul
xor
jmp
and
mov
pop
sub
movq
sub
cli
dec
incl
call
cmpl
cmp
mov
sub
adc
cmpsb
pusha
push
fucomp
out
arpl
sbbl
push
sub
sbbl
sub
pop
in
and
cwtl
ja
clc
jmp
scas
or
push
jno
ret
fsubrl
lock
incl
or
dec
dec
mov
ja
stos
sub
pop
pop
jb
sbb
arpl
call
aaa
push
fisttps
leave
fistps
into
mov
inc
enter
ret
icebp
pop
sar
call
test
mov
add
xchg
inc
jne
int3
and
adc
lock
mov
pushf
jo
xor
push
roll
xchg
push
repnz
dec
popf
mov
push
mov
cld
jmp
adc
mov
xchg
test
push
es
mov
test
and
or
decl
ret
xchg
enter
cltd
lea
mov
ret
mov
and
stc
sbbl
incl
insl
inc
dec
clc
aaa
sub
gs
mov
negl
fdivs
gs
push
adc
call
push
adc
cli
inc
fdivs
jne
cltd
mov
ja
adc
out
cmp
mov
movsb
out
int
add
cmc
mov
sarl
iret
das
sar
xor
int3
xor
xchg
xchg
ficoms
in
jns
imul
mov
call
or
test
out
dec
aas
jno
xor
iret
sbb
mov
mov
xchg
push
jno
push
dec
fld
add
adc
int3
jb
mov
cwtl
test
sub
xchg
xchg
cmp
jae
enter
push
pop
xchg
call
and
int3
and
loopne
push
xlat
jg
mov
mov
hlt
or
inc
fimuls
sub
lcall
in
add
mov
out
popa
aas
ljmp
xchg
inc
pushf
aas
mov
and
enter
fwait
rcrl
jecxz
pop
mov
dec
imul
jmp
adc
insb
dec
dec
lods
andb
fcmovnb
pop
push
mov
cwtl
jecxz
fcomp
into
jle
dec
mov
ret
dec
jmp
fs
sbb
push
pop
jo
aad
mov
lcall
xlat
adc
jl
ljmp
inc
xor
cmc
push
into
and
test
aaa
xchg
and
sbb
shll
call
dec
clc
and
sti
adc
inc
cmp
fwait
sub
push
es
lea
call
scas
imul
xchg
xor
jo
inc
movb
pop
mov
mov
cmp
mov
cld
fldt
cmpsb
and
sbb
mov
xchg
push
jnp
test
decl
aaa
dec
cltd
outsl
mov
cli
pop
mov
mov
mov
ret
pushl
xchg
dec
pop
das
out
mov
movsl
popa
and
leave
rcrb
jg
stc
adc
lret
sub
jbe
or
pop
pop
jo
or
mov
incb
lcall
jno
shll
popa
inc
push
fcos
cs
aad
in
and
inc
lds
mov
and
jmp
ret
fidivrs
sbb
mov
in
mov
xor
sbb
cmpsb
sub
cmp
jb
cmp
cmp
fwait
inc
decl
push
add
outsl
scas
test
insb
movsb
mov
subl
test
ljmp
cli
scas
outsl
fmul
mov
das
mov
sub
or
xchg
stc
lock
and
call
cli
test
adc
mov
push
shlb
jmp
xchg
dec
loop
mov
inc
pop
mov
xor
inc
sahf
cltd
push
je
adc
cltd
mull
fsubrl
ror
jae
mov
dec
sbb
outsl
in
jg
clc
call
rolb
mov
xchg
loope
es
push
ljmp
jno
repz
nop
jmp
pop
inc
sub
mov
sbb
xchg
jg
hlt
fidivrs
add
push
jnp
push
daa
std
push
sub
cmc
xchg
mov
icebp
or
mov
ja
rclb
mov
loopne
out
sbb
pop
lods
stos
andb
cmpsb
decl
jmp
sub
inc
mov
xor
push
out
or
push
mov
sub
jp
aam
mov
and
add
int3
lock
lret
adc
pop
cli
xor
jg
sbb
push
push
mov
mov
and
popa
rol
add
stos
add
push
mov
and
into
pop
mov
dec
ds
sbb
ret
jg
dec
subl
push
minps
add
in
fcomp
add
cmpsb
lods
lret
out
cwtl
mov
dec
mov
cltd
cmp
mov
add
xchg
xchg
and
in
aad
dec
rorl
or
out
push
sub
xchg
adcb
or
sbb
dec
mov
fistpl
popf
jo
clc
sbb
add
pop
not
pcmpgtd
jae
in
call
incl
sahf
ret
lahf
fwait
movsl
pop
scas
mov
fsubrs
and
cmp
imul
xchg
or
push
gs
sbb
cmp
int
mov
jnp
inc
ret
or
data16
icebp
mov
subl
orl
loope
outsl
sbb
pop
mov
test
mov
mov
push
jmp
pop
lea
sbb
negb
imul
mov
pop
loopne
xchg
cwtl
jmp
loopne
outsb
sbb
js
mov
sbb
xor
pushl
jnp
xor
mov
jmp
mov
subb
pushf
lea
xchg
inc
pop
mov
cmp
decl
xor
adc
xchg
in
inc
bound
loopne
jg
sbb
pop
scas
loopne
sbb
fdivrl
jnp
rcrb
clc
inc
fptan
mov
outsb
mov
cmc
decl
jl
data16
sbb
cltd
rcrb
pop
sbb
mov
push
lret
lcall
push
dec
jecxz
or
ljmp
in
mov
and
pop
dec
dec
pop
cmp
and
push
push
xchg
es
lods
mov
ljmp
ret
in
pop
cmp
xchg
jnp
lret
int3
xchg
divb
lret
inc
repz
xchg
add
dec
jae
mov
adc
jo
ljmp
shll
xor
add
decl
dec
mov
xor
daa
sbb
stos
inc
mov
push
decl
mov
jecxz
rcr
out
out
iret
in
imul
mov
xchg
cwtl
push
not
sbb
imul
sbb
add
mov
mov
cld
push
and
jb
fidivs
adc
jmp
inc
fscale
or
lea
scas
fwait
inc
mov
fucom
sub
sub
inc
ljmp
mov
rorl
mov
push
mov
dec
add
jmp
push
lcall
es
jb
or
pop
loopne
in
hlt
push
and
jecxz
sub
mov
adc
pop
or
jmp
decl
mov
mov
insb
pop
pop
mov
jbe
scas
gs
cmp
popf
lock
push
inc
cmp
pop
mov
mov
xor
jg
lock
xchg
add
es
jmp
ljmp
rolb
lcall
pop
lret
rcrb
ds
cmp
test
lcall
dec
leave
mov
jns
jg
add
dec
jle
incl
addr16
jbe
sbb
mov
mov
inc
inc
xor
rorb
pop
xor
int3
ljmp
cld
mov
mov
scas
sti
ja
iret
xchg
pop
stos
mov
fcmove
push
xlat
sbb
pushl
decl
pop
jbe
imul
xor
aaa
out
jl
jmp
or
dec
xor
sbb
cwtl
xchg
push
jg
or
or
cmp
fwait
addr16
incl
aam
jnp
cmpb
push
pop
add
lcall
or
sbb
lods
sbb
xchg
ret
inc
into
clc
loopne
xchg
stc
mov
fimuls
mov
repnz
popa
cmpl
push
jp
fisttpl
sub
jg
push
jge
adc
jb
sbb
mov
adc
xchg
cmp
jo
xor
sbb
fwait
inc
pushl
mov
scas
aas
in
ret
call
in
lahf
les
sub
inc
adc
mov
test
insb
sub
dec
stc
movsl
pop
movsl
xor
mov
jmp
lcall
mov
cli
ret
fisttpll
cmp
lock
es
shrl
mov
or
incl
enter
sub
fidivrl
sbb
filds
daa
push
imul
xchg
mov
jmp
adc
xor
pop
or
clc
scas
fcmovb
xor
int3
loopne
clc
jecxz
fmuls
jge
ds
les
push
dec
jecxz
fucom
push
or
gs
arpl
int
pop
sbb
call
addr16
push
mov
dec
fisttpll
test
inc
outsl
rorl
call
jmp
adc
cmp
mov
pop
sbb
les
int
loopne
imulb
lcall
nop
sbb
xor
shll
sti
xchg
or
add
pop
cmpsb
dec
cmpsl
lret
ficoml
adc
add
sbb
push
and
jmp
fistpl
mov
mov
icebp
or
inc
fld1
sub
xor
ljmp
sub
add
add
scas
push
dec
xor
scas
stc
pop
idiv
mov
sbb
movsb
mov
push
popa
test
add
out
aaa
mov
es
in
loope
sbb
inc
loopne
and
and
mov
and
pusha
mov
or
pushl
push
rorl
adc
mov
push
subb
out
pop
jle
xchg
mov
lcall
cmc
sti
and
fisubl
adc
sbb
cmpsl
nop
loopne
cmp
pushl
jmp
pop
and
add
inc
outsb
lods
leave
clc
mov
incl
out
ret
push
pop
in
data16
hlt
jnp
fnsetpm(287
ljmp
mov
jle
ja
inc
lret
mov
or
bound
push
push
sub
and
and
sbb
out
push
mov
sub
pop
scas
sub
cmp
rcrl
daa
pop
sub
push
push
ja
jmp
push
les
outsl
movsb
incl
xchg
inc
xchg
inc
daa
ret
ds
and
lcall
and
pushl
cld
adc
sbb
cmp
test
adc
out
inc
lret
mov
sub
jle
adc
ljmp
std
mov
xchg
pop
adc
mov
or
std
mov
mov
sbbl
ja,pn
sti
mov
sub
cmp
inc
iret
dec
clc
or
flds
mov
xor
dec
push
les
in
cwtl
stc
xor
cld
pop
std
lcall
rorl
out
mov
shll
ljmp
inc
push
repz
cmp
mov
and
es
mov
add
pop
xchg
aam
add
adc
adc
and
and
jmp
fsubrl
or
pop
adc
scas
push
pop
xchg
xor
data16
leave
jmp
and
xchg
stc
adc
push
lahf
gs
jle
xchg
mov
jns
jg
std
ja
dec
mov
or
pushf
hlt
push
fadds
fsubr
mov
sub
mov
pushl
cwtl
in
mov
jns
das
jl
mov
jge
loop
test
fdivrl
in
push
xchg
test
add
and
cmpsl
or
push
pop
dec
inc
sub
lods
dec
jge
mulb
incl
push
aad
sub
jns
scas
add
jbe
lahf
mov
push
das
mov
push
int3
mov
lods
lahf
fwait
lds
scas
shrb
clc
mov
jmp
cld
jmp
jb
xchg
adc
dec
outsl
out
mov
dec
inc
mov
push
shl
out
outsb
out
lods
pop
dec
push
arpl
inc
pop
add
jmp
or
mov
outsl
lea
ror
inc
or
lcall
dec
fsubl
popf
test
inc
adc
daa
or
cmp
in
leave
jl
fdiv
sub
push
call
jne
ss
mov
leave
add
dec
lahf
adc
jnp
adc
call
pop
out
decl
jp
rcrl
jne
jbe
inc
out
push
test
cli
fs
xchg
jbe
push
or
lcall
fildl
test
stos
cli
mov
push
inc
xor
adcl
gs
lcall
pop
adc
jb
pop
dec
push
mov
imul
and
aam
sbb
sbbb
das
jo
jg
add
dec
push
xchg
inc
test
mov
jle
and
adc
mov
cmc
scas
call
or
sbb
iret
aam
cmp
mov
stos
and
mov
ljmp
pusha
dec
jmp
outsl
push
xchg
repnz
and
lret
pushf
iret
or
std
or
call
sub
dec
into
push
scas
xor
into
jge
push
mov
dec
mov
stos
sub
insb
in
ljmp
mov
pop
movb
fidivrs
fisubs
cli
sbb
call
ljmp
xchg
push
not
push
and
cmp
outsl
inc
loope
mov
in
lret
inc
test
push
stc
int3
pushl
dec
in
push
ret
clc
jmp
sub
cmp
pop
adc
jg
popf
nop
outsb
xchg
push
incl
in
into
xor
jp
mov
xor
lcall
pop
hlt
and
sbb
push
lods
mov
jp
neg
hlt
sti
hlt
sub
add
mov
outsb
mov
sub
dec
push
inc
push
sahf
add
idivl
inc
stos
clc
xchg
jmp
pusha
rorb
jg
test
adc
pop
popf
test
das
pop
mov
pop
inc
adc
sbb
xchg
call
into
push
movsb
repz
aas
dec
jo
cmp
push
aaa
jge
int3
mov
repnz
clc
icebp
lcall
xor
in
aam
repz
outsl
dec
or
fst
sub
pushf
repz
adc
adc
jnp
outsl
lods
mov
dec
push
into
jl
lods
cs
fsub
jnp
das
ds
and
push
mov
sbb
hlt
jb
xchg
xchg
lods
or
inc
sbb
jle
sub
movsb
add
xchg
rolb
jp
mov
push
je
add
or
cli
and
cli
rcrl
mov
jmp
mov
jge
dec
xorb
push
dec
push
dec
mov
mov
bnd
and
nop
mov
nop
mov
jbe
fwait
dec
insb
inc
stc
mov
data16
fdivrl
decl
jno
fbld
repz
mov
jge
xchg
lret
arpl
ljmp
mov
sub
pop
test
divb
jne
rolb
lcall
adc
ds
mov
insb
jl
jne
pop
fidivl
clc
jmp
xor
adc
jne
ret
and
call
push
or
mov
add
repz
scas
fisttpll
test
push
fsts
push
xchg
jne
jnp
mov
jo
xor
xchg
push
sbb
ljmp
ss
add
dec
cmp
mov
popa
adc
je
sbb
push
repz
decl
popa
mov
ror
xchg
les
sbbl
mov
jmp
pop
mov
jle
outsl
jno
mov
adc
sbb
fdivrs
in
pop
lret
mov
lods
imul
jo
adcl
pop
inc
movsb
fildll
leave
lcall
mov
int
sti
and
dec
fstl
add
mov
aas
negb
or
fimull
mov
imul
mov
ss
out
iret
ja
pop
pop
mov
in
sbb
jp
bound
js
pop
pop
test
xor
jae
push
jp
cmc
inc
js
ja
inc
das
clc
scas
pop
aaa
notb
roll
enter
mov
and
iret
mov
test
and
sub
jl
push
ret
mov
lahf
fdivrs
pop
es
mov
pushl
leave
cld
hlt
inc
or
sbb
loopne
xchg
cmpsl
lock
jb
decl
pop
les
sbb
gs
adc
jle
daa
call
jg
jmp
out
jb
push
sahf
test
fcomps
clc
cmp
mov
mov
incl
jns
test
mov
scas
add
out
sub
xchg
push
stos
push
jo
into
sub
ljmp
aam
shl
ljmp
fnstcw
repz
jne
push
int
decl
and
stc
data16
jno
sub
int3
cmp
jle
outsb
xor
shrl
cld
pushl
idivl
dec
jle
xchg
repz
jle
inc
das
int3
jns
push
iret
sub
add
jmp
rcr
icebp
pushf
stc
sub
push
in
xor
xchg
aaa
les
push
fsubl
lcall
in
lock
xor
xor
lods
scas
xorl
pop
divl
or
out
cli
pushl
std
icebp
sbb
push
shl
jl
xor
fstpt
cltd
scas
jl
lcall
out
outsl
add
movsl
xchg
movsl
mov
cli
sub
cmp
dec
ret
mov
outsb
sbb
call
cs
lea
push
or
cld
decl
out
enter
xchg
xlat
fs
rorl
mov
jbe
pop
aaa
mov
ja
fs
mov
cmp
or
incl
in
leave
fiaddl
sub
rcrb
dec
popa
ret
nop
sub
adc
stos
aam
clc
jmp
mov
or
xchg
gs
test
sub
test
xor
int
adc
lods
and
aad
jecxz
push
jns,pn
ss
inc
xchg
pop
mov
std
mov
call
mov
sbb
fs
in
cmp
add
dec
sbb
adc
mov
loope
ljmp
cs
out
xchg
push
cs
or
setge
adc
aas
cmpsl
daa
cmp
mov
mov
dec
or
pushw
pop
cs
imul
mov
inc
test
add
insl
pop
ret
mov
nop
add
jo
jmp
add
sbb
out
outsb
cld
add
cld
fcomi
mov
mov
cld
sub
push
aam
adc
mov
outsb
mov
bound
jmp
mov
xor
fldcw
sub
lea
movsb
xor
jge
lret
jmp
clc
dec
add
les
js
rcr
fldt
je
je
into
mov
ljmp
sub
sbb
data16
and
repnz
mov
mov
jmp
aam
in
lret
or
mov
les
ficompl
dec
mov
decl
push
xor
aad
leave
ljmp
shr
outsb
pop
jecxz
push
in
std
fs
inc
inc
loope
pop
sbb
insb
dec
pop
jmp
test
out
jmp
xchg
mov
xlat
jle
arpl
sub
jecxz
mov
call
add
mov
fdivs
lea
dec
and
mov
xor
lea
lea
call
ss
into
rol
test
pop
xor
enter
sub
mov
cmp
and
lock
inc
dec
adc
jmp
adcb
adc
push
xchg
cmp
test
mov
popf
mov
lock
adc
jg
pop
test
sahf
dec
enter
jg
in
sahf
repnz
jno
sbbb
pop
push
mov
outsl
bound
add
jbe
add
addr16
call
mov
rolb
mov
push
xchg
xor
movsl
adc
push
popf
leave
inc
xchg
dec
hlt
ljmp
sub
and
jno
inc
imul
or
divl
das
cwtl
mov
cs
fwait
add
inc
imul
jo
sub
mov
pusha
in
mov
stos
jp
lea
cmp
pushl
add
adc
dec
insb
lods
mov
popa
xor
add
lds
loopne
ljmp
and
sub
pop
sbb
test
pop
mov
shll
dec
jecxz
cli
xlat
mov
mov
scas
sbb
inc
ret
ss
call
mov
push
inc
fsubs
movsb
pop
in
sbb
enter
loop
popf
lock
arpl
je
xor
ljmp
dec
mov
or
sbb
cwtl
dec
jo
cs
mov
inc
leave
xor
pop
cmp
adc
pop
sbb
shl
push
mov
pushf
inc
decl
loop
cmpb
inc
aas
xor
adc
pop
outsb
lds
pop
sti
shlb
jmp
and
fwait
gs
aad
bound
test
imulb
or
sbb
jl
loope
dec
jnp
insb
fbstp
dec
pop
rcl
add
lock
lods
fsts
jmp
loope
incl
add
push
inc
in
inc
push
dec
shll
cltd
jl
push
push
dec
imul
popf
call
sarb
dec
into
bound
mov
or
inc
add
cli
jmp
jge
nop
xor
mov
test
rorb
leave
cmp
pop
bound
mov
mov
push
lcall
dec
mov
in
imul
es
les
or
mov
ljmp
inc
adc
jnp
pop
loop
pop
test
and
test
aas
sahf
push
mov
incl
add
adc
aaa
pop
mov
fsubrl
lret
sbb
jmp
push
cmp
ficompl
int
adc
jmp
xlat
pop
sub
cmp
add
jg
incl
aad
or
cwtl
sub
test
lds
or
xchg
sbb
jg
jmp
inc
mov
mov
xchg
repz
mov
sub
lcall
fcoml
sub
sub
out
loop
or
faddl
xor
inc
cmpsl
aad
pop
in
pushl
cmp
daa
dec
mov
or
icebp
cmp
stos
jmp
lcall
lods
decl
mov
aam
or
ret
fldl
incl
cld
pop
sub
mov
push
dec
pop
dec
lcall
push
dec
sbb
pushl
xlat
jecxz
cwtl
pop
lock
stos
out
pop
sub
mov
mov
andb
mov
mov
xchg
push
pop
pop
jns
inc
adc
mov
ljmp
jb
out
and
neg
sbb
jne
ja
xor
shl
adc
fildll
aaa
std
decl
push
outsl
ljmp
icebp
jg
jb
xor
push
and
mov
decl
pop
out
cmp
shlb
jo
mov
aam
dec
repnz
jbe
fs
loop
decl
orb
adc
dec
or
mov
cmp
fcos
ljmp
and
xchg
inc
int3
in
ss
xchg
in
jg
lahf
pop
dec
call
fcos
das
mov
ljmp
loope
pop
jl
lods
xor
ja
cltd
jno
rolb
call
jae
pop
dec
sbb
mov
mov
cltd
ss
mov
dec
sbb
lcall
pop
mov
lods
sbb
xor
add
pusha
popa
sub
stos
leave
stc
imul
addl
mov
mov
addb
adc
popa
and
lahf
xor
jge
xor
in
jle
out
lahf
and
cld
std
push
dec
jle
shl
xlat
push
adc
cmp
mov
mov
sub
inc
xchg
nop
jle
adc
fdivr
inc
aaa
mov
decl
lock
push
mov
cmp
lods
imul
lds
fdivrl
movsl
call
pop
pop
clc
mov
and
jae
imul
jle
add
xchg
xor
out
loopne,pt
xlat
mov
leave
cs
data16
imul
cmp
push
jno
testb
jnp
loopne
jbe
and
cmpsl
sbb
jnp
sub
or
fwait
cli
loope
stc
ret
pop
jg
decl
lret
dec
mov
jl
jg
ss
or
sub
xchg
jmp
jb
addr16
lods
lret
and
inc
mov
repz
adc
dec
add
and
rolb
or
movsb
clc
lcall
push
imul
insb
xor
mov
add
ss
cmp
jg
adc
cmp
aam
pushf
mov
frstor
pusha
jnp
mov
lcall
js
dec
insl
cmc
mov
mov
push
mov
cmp
pop
pop
sahf
dec
add
push
stos
cmp
ja
icebp
pop
incl
mov
mov
pop
fistpll
loopne
aaa
jp
add
lcall
and
lock
and
mov
outsb
sbb
or
jg
incl
xor
jnp
dec
psrad
mov
out
push
or
dec
aaa
xchg
clc
push
and
jp
lcall
jmp
sub
ljmp
addl
dec
in
dec
pop
and
decb
jle
mov
push
push
pop
popf
pop
movsb
in
xor
fisttpll
movsl
fnsave
mov
and
jge
mov
ret
rol
iret
inc
cs
fisttps
xchg
scas
data16
and
mov
inc
cli
call
stos
fildll
jno
mov
or
dec
ljmp
movsl
idivb
fsubl
inc
popf
cmp
call
and
arpl
into
add
loop
add
inc
mov
add
ret
leave
in
cli
or
gs
cmpl
gs
add
call
outsl
data16
subb
lcall
mov
pop
popf
fbld
pop
jnp
cmpsb
rolb
movsl
repz
push
mov
leave
or
sub
std
sbb
ret
sbb
insb
sbb
mov
fcoms
pop
push
insl
or
bound
stos
lahf
dec
lods
pop
mov
jbe
lret
cmpsl
cmpsb
imul
aam
lods
adc
ljmp
or
aad
dec
sub
adc
aad
roll
inc
xorl
push
pop
or
cmp
or
mov
xor
mov
lea
jl
xchg
adc
ljmp
inc
jg
pop
xchg
test
adc
xchg
inc
call
mov
int3
imul
das
insl
pavgb
inc
in
lock
sbb
xor
ud0
jg
repz
test
dec
lock
pusha
xor
mov
inc
mov
bnd
mov
stos
lcall
xor
or
and
mov
xchg
xlat
ss
pop
cmp
sbb
dec
std
fstpt
cmpsb
and
adc
sbb
pop
push
or
in
push
adc
or
xorb
dec
lock
fdivl
out
sub
push
or
dec
add
cmc
jns
jmp
aad
mov
sbb
ret
flds
push
xor
gs
std
cld
push
xor
popf
mov
call
call
dec
or
push
ror
mov
cmp
dec
xchg
xor
cmp
in
popf
cwtl
incl
mov
sarb
aam
jl
cmp
out
mov
incl
int3
fldcw
mov
sub
lods
mov
push
js
xchg
call
call
scas
repnz
in
jbe
adc
or
fildl
imul
mov
inc
mov
jle
and
mov
cltd
lret
xor
fisubrl
ss
jmp
jbe
lea
pushf
jb
andl
aaa
dec
loope
es
jmp
push
add
lcall
out
ds
data16
mov
sub
dec
xchg
push
adc
clc
mov
xor
jg
mov
sete
clc
pusha
xchg
dec
movsb
lods
pushf
popa
adc
pushl
roll
popf
fldpi
sbb
xchg
and
sbb
jle
push
adc
in
into
jg
pushl
inc
push
lea
stos
pop
or
mov
mov
scas
ljmp
mov
pop
or
aam
fcmovu
add
mov
fnstcw
pop
mov
cltd
call
inc
lock
pop
mov
fucom
jno
adc
push
pushf
jbe
cmc
dec
xchg
xor
mov
push
sahf
push
mov
data16
mov
imul
fisubrs
adc
fisubrl
cld
add
ret
mov
int
test
xor
sahf
add
repnz
call
ss
das
dec
fs
jg
sarb
scas
xchg
pop
add
inc
je
push
repnz
arpl
xlat
incl
mov
aam
push
lock
jmp
jle
jmp
mov
mov
insb
push
mov
std
clc
out
loop
pop
lea
xlat
xor
lcall
js
icebp
xchg
call
or
inc
xor
cmp
pushf
fcoms
lret
mov
inc
lea
loope
cli
xor
sub
push
pusha
push
movsb
sub
loopne
cmp
mov
das
sar
push
rdpmc
mov
out
sub
insl
cld
add
cli
xor
jo
sbb
jbe
ret
testl
sahf
mov
and
in
movb
jge
inc
dec
mov
mov
loop
in
pushl
iret
clts
ror
push
adc
pop
or
fwait
stos
push
out
rcr
sbb
mov
sti
jg
incl
mov
fidivrs
xor
cli
sahf
loope
out
test
jb
jns
or
cmovo
ljmp
int
loop
and
mov
test
test
jbe
outsb
scas
in
test
js
cmpsl
push
cli
xor
mov
cli
xchg
jg
cmp
mov
outsl
pusha
in
pop
adc
cmp
xor
es
sub
arpl
mov
test
mov
push
xchg
ret
mov
sub
movsl
andl
test
std
mov
inc
int3
imul
mov
mov
fmuls
jae
dec
push
or
in
loop
ljmp
inc
clc
movsl
pushf
jecxz
pop
pop
xchg
xchg
mov
pop
sti
daa
add
jmp
dec
push
shrl
xor
popf
xor
inc
xchg
dec
rcr
lods
jle
sbb
jg
push
lods
inc
addl
sub
sub
push
sub
js
test
dec
es
out
sbb
mov
shr
jae
fbstp
repnz
inc
in
lss
xchg
push
loope
mov
ljmp
out
dec
outsb
push
cmp
jl
daa
sbb
in
arpl
int3
fs
mov
insb
jmp
mov
and
rclb
push
inc
insb
jne
mov
jbe
aam
sbb
pop
out
and
imul
scas
pop
inc
jg
loop
dec
aaa
inc
mov
xor
xchg
push
add
adc
mov
subb
out
dec
xor
ret
mov
mov
mov
or
mov
push
add
and
ljmp
stos
sbb
mov
pushl
and
pushl
cmp
inc
scas
stc
push
lret
fcoml
and
xor
inc
jl
aaa
incl
push
or
sbb
xchg
push
xorb
push
add
xlat
in
push
jb
cmpsl
movsl
pop
test
repz
mov
jmp
sbb
lods
mov
ret
cmc
in
cmp
and
sbb
daa
push
inc
add
pushl
push
jle
outsb
adc
xorb
dec
adc
mov
push
pop
sbb
insl
loopne
popa
testb
mov
shl
sub
gs
and
jmp
ljmp
inc
xchg
scas
jl
sbb
mov
mov
sub
movsl
pusha
in
out
insb
in
sub
ljmp
sub
in
cmc
jbe
mov
stos
sbb
movsl
mov
dec
mov
and
jno
inc
sub
scas
mov
rclb
cmpsl
adc
sbb
cmp
cmc
jno
mov
incl
cld
aam
leave
jns
push
mov
adc
mov
mov
loop
push
pop
es
mov
xchg
xchg
or
dec
push
mov
call
lods
jg
dec
mov
and
push
lea
pop
adc
push
xor
hlt
xchg
das
decl
cwtl
push
fstpt
das
fstpt
cwtl
xor
leave
sub
shl
jg
lcall
scas
add
jbe
inc
cmpsl
lods
idiv
mov
call
push
decl
or
pop
mov
jo
mov
out
cmp
push
cs
lcall
pop
push
mov
rorl
sbb
imul
leave
rcrb
or
push
sub
push
hlt
push
xchg
stos
sub
repz
jle
sbb
fxch
les
shlb
push
inc
aad
jl
imul
cwtl
ja
lcall
xor
lods
rcr
outsb
fwait
aad
addr16
sbb
adc
dec
ret
pop
loopne
lcall
js
addl
jecxz
jge
push
lcall
call
or
pop
lods
or
mov
sbb
decl
pop
or
sti
xor
inc
xor
adc
jp
jbe
or
lcall
lcall
test
mov
fcoms
in
bndldx
fwait
xchg
jmp
shl
jnp
xlat
mov
push
outsb
jp
js
into
cmp
ja
adc
push
ljmp
add
aad
cmp
fstl
jnp
xchg
jne
pop
ret
add
sbb
out
cli
cmp
aaa
andb
adc
mov
mov
or
pushl
cltd
xchg
int
jmp
cli
cmp
insb
lcall
out
pop
push
stc
mov
add
inc
fs
mov
ljmp
jbe
dec
inc
jbe
push
jecxz
jnp
cmp
jp
jge
lods
mov
push
sbb
cli
add
icebp
mov
fsubrs
or
aad
lahf
xor
loop
add
mov
stc
imul
pushl
jnp
or
jnp
fsts
mov
adc
movsl
pop
jo
jno
bound
incl
outsl
test
icebp
scas
loop
cmp
or
repz
imul
cmpsl
fcomip
incl
mov
add
mul
pop
es
add
rcrb
push
out
sbbl
int3
call
lret
aad
xchg
inc
jns
pop
adc
insl
test
sub
cmp
cmp
cli
les
mov
push
mov
lods
lcall
mov
xor
pop
jge
decb
mov
jg
lcall
mov
mov
dec
icebp
cmp
lods
cltd
adc
rcr
or
fstps
mov
sub
test
inc
sbb
mov
jl
out
xlat
xor
daa
std
jmp
and
mov
ljmp
and
stc
mov
pop
nop
rcrl
mov
dec
mov
scas
fcomip
mov
pop
ret
notb
outsb
cmpsl
outsb
addr16
sbb
imul
int
cmp
mov
dec
pop
movsb
adc
jb
into
stos
xchg
ret
xchg
inc
pusha
imul
cli
aaa
outsl
push
mov
daa
jo
cli
cmp
popa
das
inc
xor
lret
jmp
shrl
adc
pop
inc
xor
mov
pop
or
dec
fidivrl
fidivl
xchg
jmp
das
stos
aam
outsl
or
ret
outsl
aad
repz
inc
js
dec
pop
mov
lock
incl
rorb
push
push
sbb
dec
pop
xor
fiadds
in
xchg
inc
mov
decl
incb
mov
and
popf
sbb
dec
or
rcrl
ljmp
or
dec
pop
stos
ss
cmpsb
lret
pop
data16
mov
fdivrs
sahf
mov
movsb
xchg
insl
push
add
lret
fcomip
aas
and
jle
adc
mov
inc
adc
fnstcw
incl
mov
data16
add
fnstsw
lods
dec
push
or
stos
sahf
mov
sahf
gs
scas
imul
icebp
frstpm(287
jmp
gs
ja
jp
lret
mov
xchg
cmp
test
rcrb
jns
mov
xor
push
int3
loopne
jg
xor
add
xchg
push
jp
push
int
in
call
adc
arpl
xchg
decl
push
out
cmpl
xchg
imulb
sbb
mov
ljmp
adc
cmp
pop
bound
insb
mov
push
movups
out
hlt
dec
push
pop
mov
mov
inc
lods
add
pop
xor
sti
cli
cmc
cs
push
xor
or
jnp
ds
cmp
jmp
shlb
pop
fstpt
or
xchg
out
mull
jge
icebp
xor
push
or
pop
lahf
std
jg
aaa
pop
mov
pop
mov
jbe
sbbb
dec
aad
subb
cmp
jmp
push
pop
sub
jmp
sbb
fcmovb
or
and
xor
jl
adc
call
mov
ss
ja
or
pop
lret
ja
inc
or
or
aaa
lret
xchg
push
pop
hlt
stos
or
out
ds
ficoml
mov
cli
out
pop
cmpsb
sub
jl
aam
cli
and
ljmp
mov
add
inc
inc
mov
cmpsb
lds
mov
mov
jmp
mov
gs
sarl
arpl
movsl
aas
int
pop
inc
popf
jle
mov
mov
push
jle
lcall
imul
cld
inc
mov
cmpsb
sbb
mov
stos
lcall
sbb
mov
fdivrl
xchg
push
test
andl
incl
push
pop
out
gs
fistpl
andl
pop
divl
xor
fimull
les
xor
mov
mov
incl
jle
xchg
mov
js
aas
mov
lcall
xor
sbbl
jae
lcall
sub
pushf
scas
push
divl
mov
jmp
cmp
pop
push
daa
incl
jmp
dec
mov
les
mov
sub
adc
and
jo
jmp
push
and
xchg
hlt
icebp
mov
or
std
lds
loopne
leave
test
dec
cmp
fidivrl
fstpt
andl
jmp
std
push
inc
call
jmp
adc
nop
dec
ss
push
lea
mov
push
lods
shll
nop
test
out
clc
add
mov
sahf
data16
stos
scas
out
insb
cmpsb
icebp
cmp
imulb
pop
cwtl
repnz
mov
cmpsb
add
pop
mov
lcall
and
dec
sbb
xor
and
fisubrl
imul
lea
ficomps
or
call
xchg
and
xlat
hlt
sbb
push
cld
lcall
stos
pop
sbb
scas
aas
push
hlt
xchg
imul
aas
lcall
xchg
push
inc
pop
jle
es
in
pop
shll
hlt
jno
xchg
dec
fiaddl
pop
pop
loopne
rclb
mov
push
jbe
jmp
cli
stos
repnz
jge
je
orb
jns
inc
lds
add
cs
jns
jg
mov
sbb
push
mov
sbb
mov
lret
out
jns
movsl
adc
or
ljmp
rorb
xor
stos
clc
add
stos
xor
mov
mov
sbb
scas
add
adc
out
sar
out
xchg
dec
xor
aaa
sbb
inc
lock
jecxz,pn
ljmp
push
dec
inc
imul
push
push
xlat
mov
test
mov
enter
mov
movsl
push
cmp
mull
push
push
jno
faddl
or
testb
mov
gs
shlb
ss
in
cli
call
shl
pop
aaa
mov
daa
lods
or
je
aam
pop
dec
sarl
jg
movsb
mov
call
or
dec
or
mov
cld
pop
es
push
and
jp
cltd
rcll
push
pop
pushl
out
idivb
push
in
loope
rcrb
adc
xor
mov
jl
push
add
fnstsw
or
mov
dec
aad
mov
dec
sub
jg
gs
pop
inc
add
or
sub
push
sbb
out
in
sbb
sbb
lods
fnstsw
mov
jecxz
jl
cmp
jg
xor
xchg
adc
xchg
jmp
adc
mov
into
addl
lret
push
mov
das
sahf
mov
lds
sbb
mov
std
addr16
decl
dec
pop
lcall
dec
pop
xlat
cltd
scas
fdivl
imul
xchg
push
mov
and
pop
mov
decl
testl
sbb
shl
cld
sbb
jg
mov
jge
ljmp
clc
js
lcall
sub
aaa
cmp
dec
out
clc
call
mov
sub
fwait
xchg
inc
dec
icebp
cwtl
in
lods
cmp
mov
adcb
jae
push
push
nop
ja
lret
jp
push
fsubl
sub
inc
mov
aam
ljmp
andl
test
mov
popa
mov
add
and
ret
rcl
mov
cltd
pop
incl
repz
daa
push
xorb
xchg
jns
cmp
inc
jmp
aad
fsubrp
jno
imul
roll
movsb
adc
lret
jbe
cmp
std
adc
sub
decl
dec
sbb
mov
add
stc
sbb
stos
mov
sbb
lods
clc
ljmp
es
inc
mov
popa
dec
jmp
decl
lods
mov
jle
jg
mov
inc
dec
inc
je
jb
add
test
cmp
sbb
shrd
dec
mov
int3
pop
cmp
pusha
notl
cld
jp
cli
ljmp
xchg
mov
stc
fimull
jne
and
jne
ljmp
inc
fistl
insl
mov
sub
sbb
arpl
aaa
mov
addr16
xor
pop
xchg
cmp
dec
daa
mov
andl
pop
adc
adc
mov
adc
xor
lret
cltd
push
into
xchg
add
vcmpps
popf
adc
adc
sub
cld
pop
add
sbb
outsl
aam
fstl
inc
loopne
cld
mov
fcos
call
fstpl
pop
pop
and
xchg
aaa
mov
pop
lret
jecxz
pusha
test
sar
lcall
sub
arpl
push
jmp
push
or
inc
jbe
ljmp
push
mov
mov
adcl
fistl
enter
rorl
and
lcall
pop
inc
push
mov
add
lds
mov
xor
shlb
push
push
push
dec
fbstp
add
cmp
lods
outsb
mov
inc
incl
cld
movsb
stos
popf
repz
jp
fcoml
in
shll
xchg
sbb
call
push
pusha
mov
out
test
fadds
jbe
cmp
lcall
hlt
lock
movsb
lret
icebp
popf
shlb
call
shrb
lcall
jmp
xchg
mov
xor
xchg
cmpsb
inc
mov
ja
in
imulb
inc
push
mov
jmp
sub
iret
or
sbb
rcrb
lcall
mov
rcl
lret
movsl
add
pop
jp
sub
lret
mov
orps
mov
mov
dec
jb
mov
mov
add
and
jno
leave
cmp
push
jno
popf
push
cs
jmp
lock
fucomp
mov
les
xlat
or
push
or
and
pop
mov
mov
jg
lods
int3
mov
mov
add
or
mov
or
fnsave
jg
mov
test
pushl
and
cmp
rorb
mov
or
adc
cld
sbb
lock
stos
divl
into
enter
loope
sbb
sbb
in
mov
enter
std
ljmp
dec
ss
jae
outsb
in
enter
sti
aas
cli
daa
hlt
push
popa
lock
jb
adc
int3
ljmp
sub
add
sahf
out
in
call
repnz
xchg
pop
xchg
and
mov
and
dec
sbb
mov
adc
jno
call
pop
jg
test
ljmp
ss
lods
je
in
jns
scas
fiadds
stos
fcmovnbe
mov
jmp
outsb
adcb
jg
mov
je
jge
sbb
or
adc
lock
incl
sbb
out
jae
add
insb
push
mov
rcrb
ret
and
add
push
mov
mov
ja
jge
or
js
xchg
xor
xchg
pop
repz
jle
int3
jge
fdivr
lcall
or
jecxz
mov
jne
icebp
lock
das
xchg
ds
nop
ds
ljmp
aam
sub
adc
fs
dec
cmp
push
daa
mov
xorb
iret
or
nop
mov
pop
sahf
pop
mov
clc
add
dec
fildl
and
push
add
and
fwait
push
insl
cmp
lcall
dec
jmp
cmpsl
xlat
mov
movl
jo
or
aas
movsb
and
repz
mov
adc
mov
fimull
mov
lods
jmp
test
jle
sbb
in
xchg
je
xor
pushl
pop
insb
dec
jg
inc
lcall
das
add
scas
lcall
adc
scas
mov
incl
add
sbb
sub
pusha
popa
push
pop
sbb
or
or
dec
fndisi(8087
mov
mov
add
or
push
cmp
sbb
xchg
mov
cmpsl
lret
fistpl
addb
push
adc
sahf
lock
test
fdivs
cmp
mov
push
xor
imulb
pushf
sti
mov
mov
ja
sbb
adc
decl
or
sub
mov
into
aaa
fidivl
jl
sahf
xor
call
das
or
nop
cli
leave
ror
sbb
jo
mov
out
mov
call
sub
js
dec
xchg
xor
pop
push
jl
clc
mov
aad
mov
xor
stos
decl
aaa
mov
adcl
sbb
dec
imul
mov
and
icebp
push
nop
stos
pop
fsts
pop
dec
loope
adc
mov
mov
jmp
ljmp
push
mov
subl
outsb
jmp
lret
shrb
or
cmp
xor
lock
call
pop
cwtl
cmpsb
jg
bound
leave
pop
movb
mov
inc
sub
jmp
mov
push
xchg
pop
leave
xchg
jns
aam
ljmp
sbb
mov
sub
push
mov
insb
xchg
xor
shl
pop
xchg
insb
cmp
cli
cmpsb
call
pop
adc
fucomi
add
pop
add
out
hlt
in
mov
dec
sbb
popl
dec
xor
insl
addr16
mov
nop
clc
or
pop
add
lcall
and
out
or
les
sbb
idiv
mov
ret
or
les
mov
int3
movsl
sub
popa
out
enter
jmp
clc
mov
jbe
leave
dec
int
mov
sub
xchg
mov
lcall
mov
testl
mov
push
dec
cmpsb
jmp
or
clc
incl
mov
cmp
lods
xchg
movsb
or
popa
ret
call
rolb
ss
jl
push
jge
mov
inc
mov
loop
mov
filds
inc
test
jge
jle
sub
cld
jp
mov
pop
jns
roll
push
popf
imul
jge
ljmp
shrl
stc
fidivrs
sbb
push
push
pop
xchg
or
jg
cmp
mov
cwtl
xor
int
arpl
repnz
test
fsubrl
lds
inc
data16
adc
inc
push
je
mov
inc
push
and
push
lret
jg
mov
pop
xchg
int3
out
lcall
in
push
clc
or
in
fdivrs
fidivrs
mov
stos
jno
fucomi
push
fcmovnbe
fcmovb
out
dec
cmp
jg
cli
orb
pop
jo
sbb
call
sarl
mov
pop
lock
dec
jne
pop
pop
shll
js
call
adc
xchg
xor
out
add
pop
sti
jne
lock
sub
not
or
popf
pop
sbb
adc
cmp
rcrb
xchg
sub
enter
adc
orb
jno
mov
jmp
iret
jb
insb
push
sub
movsb
dec
or
rcl
fs
jle
cmpsl
daa
mov
dec
add
mov
mov
out
int
jno
pop
cwtl
dec
shlb
into
adc
jmp
out
and
dec
shl
adc
push
xchg
test
xchg
and
mov
incl
mov
push
sub
ljmp
and
push
ret
and
xchg
mov
mov
sbb
mov
je
fidivl
mov
negl
jg
rclb
pop
push
mov
jmp
xchg
in
movsl
fiaddl
cs
jnp
ret
out
jge
lock
aad
mov
dec
push
and
aad
daa
mov
pop
pop
xor
ret
ret
mov
or
dec
aam
sti
cli
loop
loopne
cmp
into
int
decl
mov
mov
jge
rolb
movsb
stc
insb
xor
lret
call
pop
mov
sub
dec
push
cwtl
lds
mov
or
lahf
xchg
mov
arpl
and
sbb
jmp
adcl
daa
push
or
cmp
aam
sbb
decl
jp
pop
xchg
mov
jp
adc
insb
adcl
clc
jg
ljmp
clc
jmp
jo
sub
into
or
in
lahf
mov
dec
test
adc
mov
outsl
adc
mov
push
testb
insl
data16
xchg
adc
jp
pop
cmp
addr16
test
pop
push
jg
mov
pushl
insl
mov
shll
xchg
in
loope
push
je
and
cld
or
scas
mov
sbb
mov
out
mov
inc
mov
cmc
inc
xor
call
or
add
decl
dec
aaa
cmp
pop
pusha
pop
jns
mov
jp
mov
cmp
cld
lcall
out
xchg
mov
mov
clc
int
inc
stos
iret
fs
jmp
mov
fbld
sub
lock
jno
mov
inc
push
pop
xchg
js
lock
cli
xchg
or
inc
cmc
bound
cmp
ja
or
fisubrs
mov
enter
xchg
out
lcall
cmpsb
jle
daa
pop
shll
das
movsl
or
pop
inc
ret
mov
pop
adc
add
pushl
lods
mov
or
pushl
cmp
mov
je
xchg
pop
imul
aam
xchg
xor
inc
sahf
decl
mov
bound
push
mov
js
incl
push
and
pop
fstpl
cmpsb
inc
mov
mov
xor
mov
sti
mov
decl
inc
ja
lcall
jecxz
sub
push
xchg
sbb
pop
repz
jge
enter
stos
js
sub
mov
stos
dec
add
add
rol
or
or
mov
push
pop
sar
call
aam
ja
lret
xchg
loopne
movsb
inc
dec
faddl
dec
jmp
dec
xlat
jnp
ret
out
jmp
inc
mov
adc
les
sbb
jg
adcl
das
scas
cmp
sbb
and
lret
add
or
inc
popf
imul
ljmp
dec
xchg
xorl
mov
fmulp
pop
in
stos
cltd
lock
mov
adc
test
scas
add
lcall
lea
ret
cmp
inc
adc
pop
or
sbb
mov
xchg
aas
bnd
ret
pushl
mov
repnz
es
mov
lcall
stc
sub
pushf
inc
xchg
icebp
fisubs
icebp
scas
cli
mov
filds
sbb
push
or
adc
jmp
add
inc
in
iret
pop
lahf
sbb
push
sti
xor
mov
movsl
call
decl
adc
push
in
pop
mov
lock
js
mov
xor
aas
ljmp
fisubrl
sbb
mov
sti
sbb
scas
sub
mov
lcall
mov
frstor
enter
fmuls
stc
dec
setb
push
ret
jnp
and
testb
stos
pop
xchg
mov
and
add
inc
mov
shr
xchg
push
in
inc
mov
ljmp
cli
decl
call
cmpsl
jl
or
push
in
pop
xchg
push
inc
push
negl
call
jmp
repz
rol
pop
mov
or
xchg
push
int3
mov
pop
scas
add
cld
mov
or
jo
sbb
sub
jne
dec
std
cmp
das
xchg
add
and
sub
pushl
mov
xorb
jmp
push
adc
cmp
sub
inc
loop
add
enter
sub
jmp
cli
ficoml
sahf
xor
lds
add
ljmp
adc
outsb
fisttpll
fadd
mulb
jo
mov
inc
test
cmp
sbb
pop
in
sbb
push
jo
pushl
add
mov
rcll
xor
leave
adc
repz
adc
scas
pop
mov
lcall
pop
std
mov
inc
xchg
call
fs
lods
pop
movntq
ljmp
pop
stos
ljmp
ljmp
inc
loope
test
push
out
dec
or
mov
push
push
inc
jmp
js
shr
or
push
mov
bound
rcrl
in
push
push
adc
mov
inc
enter
pop
cwtl
sbb
pop
jne
in
icebp
lds
jge
shlb
test
cmp
lahf
dec
mov
jecxz
push
jmp
add
inc
ja
daa
mov
in
adc
and
push
mov
fisttps
clc
pop
hlt
add
lea
aaa
or
lods
cmpl
lds
data16
leave
movsb
and
cmpsb
mov
cld
in
imul
idiv
pushl
jp
cmp
or
out
movsb
sub
mov
lret
jmp
clc
ja
mov
xor
cld
incl
inc
inc
inc
dec
addr16
movsb
cmpsl
ljmp
xchg
aas
nop
imul
lcall
mov
fistps
xor
sbb
mov
arpl
jbe
fdivrs
cmpsl
sahf
jl
pushl
or
pop
cmp
mov
sahf
and
adc
mov
in
push
mov
xor
pop
fld
repz
xchg
or
jbe
das
jnp
imul
rclb
out
in
mov
test
in
int
or
js
xlat
mov
repnz
cmp
push
sbb
sbb
lea
repz
shll
inc
mov
and
push
hlt
pop
cld
lcall
out
cmp
xor
pop
cmp
das
pop
mov
loopne
push
mov
lcall
cmc
negb
les
mov
unpcklps
sbb
cmp
dec
push
pushl
sbb
mov
push
sbb
loopne
dec
jmp
das
inc
decl
sahf
jge
xor
dec
mov
mov
cli
jns
subl
xorb
cmp
adc
cmc
popf
pusha
push
sub
inc
mov
out
cmp
popf
sub
insl
cmp
subb
pushw
call
in
mov
xlat
lea
pop
in
push
shlb
dec
mov
xchg
mov
ds
fdivr
inc
mov
incl
xor
or
mov
bound
adc
jmp
popf
sbb
fdivrl
arpl
mov
push
loope
dec
or
incl
popa
bound
repnz
mov
jnp
cmpxchg
aas
jecxz
push
or
inc
outsl
dec
jge
jmp
call
lahf
lds
ja
idivl
js
jmp
repz
push
mov
leave
out
push
and
cmc
push
and
incl
test
shl
cmpsl
jmp
cmc
mov
adc
inc
lcall
mov
cltd
or
inc
icebp
dec
fcomip
test
jne
pop
sti
jecxz
loop
xor
xchg
cmp
lcall
mov
bound
subb
shr
sbb
ret
jg
jl
pusha
dec
lock
in
pop
xlat
repz
lea
mov
mov
addr16
push
test
mov
dec
push
xchg
xor
jg
mov
int3
outsl
mov
inc
in
jecxz
sti
or
lods
push
or
xchg
push
add
movsb
xor
dec
les
jmp
jbe
sbb
repz
cli
fcom
jle
shll
mov
outsb
int3
mov
pop
cmp
test
test
push
sub
aam
inc
sub
fsubrs
jne
mov
rcll
jmp
sub
and
imul
push
movq
cmc
jmp
push
cs
les
and
push
scas
mov
pushl
std
add
mov
daa
jp
lea
push
dec
mov
fsub
cld
mov
lcall
scas
jb
fsubs
mov
cs
notb
int
fcompl
add
decl
lds
js
inc
pop
add
jle
mov
inc
mov
scas
sbb
sub
push
lods
inc
adc
mov
stos
jecxz
push
fildll
push
adc
push
lock
dec
or
insb
call
add
rcrl
xor
arpl
dec
jnp
cmp
fisubrs
notb
ret
ja
dec
in
inc
or
push
fwait
mov
fldcw
andl
in
mov
incl
sahf
test
gs
xchg
pusha
cmpsl
xor
push
es
mov
and
decl
mov
int
mov
inc
jnp
scas
fildll
lcall
sti
dec
leave
mov
fistpll
lods
dec
int3
push
and
xchg
mov
jg
test
xchg
mov
in
mov
mov
scas
and
out
loopne
jg
adc
lock
jmp
push
xor
xor
test
pop
or
sub
cmc
sahf
lock
adc
decl
push
add
mov
insl
xor
shrl
movsb
jmp
mov
and
adc
cmp
fs
push
das
adc
mov
lea
les
cld
xchg
les
jmp
int
mov
es
scas
lcall
stos
and
pop
inc
incl
aas
adc
imul
setle
inc
insb
scas
xor
incl
lea
std
cmpsb
cmc
jmp
jbe
and
sub
out
decl
mov
inc
rolb
int
es
scas
fstpt
jb
and
mull
dec
fdivs
pushl
cwtl
test
xorl
xchg
lcall
or
add
adc
push
jmp
adcl
call
pop
mull
inc
cmp
mov
cli
lods
push
imul
pushl
outsl
push
fldenv
push
xchg
int3
dec
pop
lret
inc
ja
inc
pop
out
in
lret
and
cld
std
enter
incl
out
and
popf
adc
jbe
mov
mov
xor
mov
and
incl
in
mov
jbe
or
xchg
ret
push
cmp
gs
bound
aaa
push
repnz
and
pushl
push
sbb
mov
cmc
outsl
dec
dec
icebp
sbb
cmp
xchg
sbbl
inc
sub
andb
jge
add
je
aas
movsb
mov
xchg
adc
insl
jle
sti
lods
icebp
jne
mov
mov
mov
cmp
js
pop
ficoml
push
lret
stos
int
hlt
inc
pop
hlt
and
pop
and
xor
filds
sub
pop
pusha
sbb
jno
sub
into
lods
dec
pop
pop
cmpsl
add
call
sub
ja
leave
inc
jp
mov
push
inc
xor
lods
sub
or
lcall
in
js
xlat
cld
push
fldl
mov
or
pop
sbb
aam
lock
call
repz
mov
int
jmp
jne
nop
iret
jb
or
mov
push
jns
inc
xor
dec
insb
and
dec
sbb
mov
test
jnp
daa
or
sub
xchg
pop
movsl
sar
jmp
inc
jno
mov
pop
adc
in
mov
aaa
inc
into
mov
ljmp
and
test
loop
jns
inc
andl
inc
sbb
sbb
out
stos
jmp
push
push
jle
ret
call
into
push
aam
inc
sub
lret
dec
lods
cld
jg
sbb
dec
ljmp
adc
mov
in
divl
insb
pushf
in
fwait
pop
pop
xor
iret
lcall
adc
loop
repz
push
loope
xor
cmp
test
xor
js
loope
jno
dec
adc
inc
push
add
xchg
in
fisubl
xchg
jp
scas
lcall
and
pop
movsb
daa
xchg
dec
xor
xchg
push
frstor
inc
sbb
mov
or
imul
adc
dec
or
sbb
push
daa
and
jp
repz
mov
cmp
xchg
outsl
clc
ljmp
fcmovu
cli
das
lahf
aad
mov
jecxz
xlat
rol
setnp
inc
shl
pop
fcomip
dec
pop
adc
jae
pop
call
sbb
mov
add
mov
fsubrs
shll
das
or
inc
dec
out
and
push
in
jg
rcl
lea
ss
push
jmp
inc
mov
sahf
out
cmp
jmp
mov
add
xlat
sahf
pop
inc
add
cmpsb
xchg
ds
push
jecxz
incl
cwtl
jge
int3
mov
or
push
je
sbb
int
mov
int
es
push
inc
repnz
ficompl
xchg
dec
sbb
nop
push
mov
repz
ja
decl
dec
das
rorb
cltd
call
adc
pop
loopne
inc
outsl
xor
rolb
dec
mov
pop
sti
scas
fidivl
aam
mov
cmc
adc
scas
mov
fucompp
xor
pusha
add
cld
push
dec
sub
push
add
pop
fildll
pop
push
cmpsl
ret
scas
in
divl
cli
scas
cmp
sub
lcall
lahf
xchg
rcrl
gs
mov
jns
adc
insl
jg
jbe
adc
xor
push
lea
test
xor
cmp
jo
mov
and
mov
and
mov
and
xlat
mov
jg
jmp
decl
out
jp
sub
push
jp
out
dec
lea
gs
pop
push
psubusb
ret
aam
mov
push
out
js
in
mov
xchg
rol
notb
fwait
and
test
add
incl
insb
or
imul
mov
ds
call
cltd
inc
jb
call
shlb
pop
mov
test
dec
mov
ror
insb
pop
fnstsw
lahf
imul
fst
jl
sahf
jg
cmc
jg
imul
mov
mov
rcrb
popa
xor
mov
shl
loop
testb
xor
add
fadds
movsl
cld
inc
out
xor
push
mov
data16
or
aas
or
and
ljmp
mov
inc
xchg
adc
mov
push
cli
push
mov
cmp
pop
imul
scas
and
xchg
popa
stos
xchg
imul
mov
rorb
ljmp
or
fldcw
dec
push
stos
cltd
sbb
out
aad
lock
push
dec
gs
cwtl
sub
int3
in
ljmp
mov
dec
mov
mov
lret
mov
or
fcmovnu
sub
ljmp
mov
popl
jg
push
sbb
mov
push
sbb
arpl
mov
scas
fnstcw
sub
jmp
or
mov
shr
inc
xlat
jnp
in
mov
daa
cmp
sbb
jp
lret
enter
mov
sbb
call
jno
das
push
imul
sub
movsl
xor
std
lret
lods
incl
and
pop
test
pop
sub
push
scas
mov
or
cmp
faddl
pop
cmc
call
inc
int
dec
cmova
cmc
sbb
mov
ljmp
hlt
mov
fs
lods
sbb
mov
xchg
out
and
cwtl
shl
incl
inc
jns
push
imul
cmp
mov
jecxz
push
mov
jo
js
xor
repz
xchg
mov
or
imulb
std
iret
out
imul
ljmp
xor
sub
hlt
cmp
mov
enter
iret
icebp
sbb
rep
add
ljmp
call
mov
in
cltd
fisubs
pavgb
ror
mov
and
loope
lock
fs
into
pop
push
in
movsl
xlat
sbb
orb
mov
xchg
cmp
fcoms
cmp
jne
pop
mov
push
mov
iret
mov
stos
cmp
incl
movsb
xchg
mov
and
lods
sarl
push
out
pop
mov
subb
call
lock
das
add
cltd
add
hlt
std
pusha
cmc
fistpll
sbb
ljmp
jge
jnp
pop
push
jmp
pushf
and
aas
pop
cmpb
jnp
das
std
stos
jg
sub
sbb
out
cmpl
push
cmp
mov
or
pop
pop
pop
xor
mov
pushl
cld
cmc
sbb
stos
stc
rcll
jmp
xlat
or
push
mov
mov
adc
leave
cmp
push
aam
mov
loopne
fisttpll
je
or
push
imul
or
lcall
pop
ffreep
loope
xchg
sbb
add
cmp
dec
sub
sub
cli
jae
mov
add
cmpsb
jae
mov
cmp
xchg
sbb
clc
leave
pop
dec
loope
dec
cmp
lcall
fiaddl
or
sbb
lcall
cmc
and
outsl
pop
sahf
daa
xor
xor
jno
lcall
cltd
xor
subl
and
mov
lods
push
insl
test
cmpsb
aad
loopne
sar
incl
adc
mov
xlat
gs
scas
pop
movsb
pop
pop
shrb
gs
mov
call
push
js
popf
imul
jl
sbb
sbb
xchg
rcll
cli
xchg
out
push
or
inc
test
xchg
mov
lahf
xor
out
adc
incl
pop
mov
cmpsb
cmp
clc
jne
inc
jo
fldl
addr16
jge
push
and
or
pushl
lret
cmp
das
out
inc
fbstp
popa
stos
add
xor
xchg
fucomip
xchg
lods
bound
ljmp
fldl
aam
pop
cmp
push
cltd
push
xchg
inc
mov
inc
pop
adc
jnp
imul
test
pop
dec
jle
jbe
imul
and
sar
call
loopne
lret
add
repnz
es
push
sub
decl
lret
cli
data16
push
fildl
pop
sub
sbb
enter
or
rcl
decl
xchg
add
or
dec
jle
call
inc
repz
pop
xor
mov
xor
sub
mov
push
cltd
loop
xchg
std
add
loopne
and
push
clc
add
push
sub
push
mov
pop
shlb
out
push
cmp
ljmp
push
cmp
mov
sub
les
ret
cltd
pop
adc
jmp
fwait
xchg
ljmp
sarb
stc
sahf
xchg
add
cwtl
jb
pop
mov
aaa
std
incl
imul
jmp
aam
xor
std
mov
mov
cmp
fdivrp
xchg
or
mov
mov
outsb
xchg
ud0
jg
inc
fstps
or
xchg
add
outsl
int
cmp
fisubl
idivb
or
and
jp
mov
std
lcall
xchg
pop
mov
push
xchg
cwtl
loopne
push
daa
sahf
sub
jb
sbb
xchg
in
cld
call
sub
cmpsb
cmp
add
popf
sbb
dec
int3
and
movsl
cmp
or
add
mov
lcall
cmp
mov
pop
sub
les
data16
xor
incl
xlat
cmp
roll
or
mov
jno
ret
sbb
in
sub
loope
call
pop
insl
cli
rcrb
popl
das
jo
xchg
jle
sub
mov
mov
jmp
add
mov
or
in
jns
mov
aas
mov
inc
sub
add
sub
repz
clc
mov
xor
xchg
pop
xor
arpl
jg
out
push
xor
fdivl
fidivs
or
jno
dec
out
jg
incl
add
xrelease
pop
cmpsl
fst
pop
mov
pop
sbb
enter
rcl
in
dec
and
ljmp
test
fs
and
xor
pop
dec
enter
xor
add
fcomip
jmp
mov
lds
mov
add
addr16
stos
test
sar
pushl
movsb
push
out
mov
jle
mov
in
popa
test
call
stos
aad
pop
cmp
in
and
out
or
sub
test
cmpsb
adc
cld
add
xor
xchg
inc
fildll
mov
les
pop
add
mov
incl
jg
or
mov
jo
pop
adc
inc
mov
adc
sub
jmp
hlt
jmp
clc
stc
clc
push
sti
test
cmpsl
fadds
inc
ss
sbb
lds
cmp
lock
mov
mov
out
scas
pop
lock
and
jl
xor
add
jl
std
jns
repz
ja
js
shlb
or
jg
jmp
or
test
inc
leave
xchg
mov
stos
inc
push
lcall
loop
mov
add
int3
pushf
adc
leave
daa
movsb
jmp
xchg
inc
dec
push
test
jg
cld
jle
mov
push
add
sub
adc
pop
nop
add
xchg
adcb
mov
xchg
add
and
fsubrp
adc
lret
in
lret
aad
fstl
lock
enter
xchg
cmp
jmp
cmp
addr16
jae
xor
in
stos
pop
lock
dec
inc
mov
lcall
adc
lea
mov
iret
xchg
xchg
lahf
cmp
mov
inc
iret
push
call
or
pop
xchg
or
adc
push
insb
xchg
fcomip
jmp
push
movsb
sub
aaa
shrl
push
stos
mov
push
ljmp
int
cmp
push
push
xchg
jmp
and
xchg
cmp
repnz
into
sub
push
cmpl
dec
ljmp
and
aam
jmp
and
lds
pop
mov
jg
test
xor
jg
fs
scas
fidivrs
insl
mov
fwait
add
or
jle
std
hlt
insl
pop
ljmp
lcall
sub
xor
cmp
sbb
andb
out
cld
lcall
iret
repnz
shll
inc
push
mov
ss
in
fistps
mov
or
sub
imul
cmp
int
adc
loopne
sbb
aam
mov
out
daa
pushw
push
mov
push
jne
inc
sahf
shrl
lock
leave
jmp
jmp
ret
and
int3
icebp
inc
add
insb
add
and
pop
push
ljmp
xchg
movsb
jmp
lret
es
out
ret
jbe
mov
mov
daa
shrl
stc
mov
cmp
subl
mov
push
in
pusha
pushl
lcall
outsl
xchg
inc
incb
push
adc
fs
das
pop
movsb
jl
xlat
push
sub
cld
jmp
xor
cmp
mov
dec
adc
mov
sbb
int
lcall
mov
fbld
out
dec
sub
mov
sbb
jmp
inc
add
cmpsb
pop
push
fstps
add
sub
arpl
movsb
jb
cmp
loop
mov
out
mov
fs
mov
imul
push
sarl
pushl
inc
ffree
dec
cmpsl
jmp
in
sbb
jns
popf
pop
cld
jp
decb
outsl
push
jle
rclb
cmpsb
push
outsb
mov
xchg
rcl
mov
push
xor
xchg
jbe
shl
mov
inc
aaa
ret
les
addr16
push
dec
dec
std
ja
lds
scas
add
call
pop
out
mov
stos
ss
lret
movsb
xor
jl
icebp
ljmp
push
pop
leave
inc
lods
rcpps
and
js
aad
incl
cld
xor
add
movsl
cmpsl
sbb
stc
mov
std
incl
pop
lcall
movsl
sub
fstpt
or
lahf
or
enter
pop
js
mov
rclb
loop
cwtl
imul
pop
push
adc
hlt
pop
push
sub
fsubl
testb
incl
adc
xchg
xor
es
pop
cmp
icebp
lds
mov
or
call
fisubl
jnp
hlt
push
adc
filds
scas
mov
cmp
mov
aas
mov
bound
jge
cltd
push
pushl
pop
inc
test
sbb
das
mov
pop
add
pusha
cmp
inc
push
inc
mov
xor
push
push
mov
lcall
pushw
mov
push
push
mov
movsl
jp
out
jle
dec
call
cmp
lcall
inc
inc
pop
leave
out
and
xlat
fs
repnz
in
out
cmpsl
push
mov
cmp
mov
sti
xchg
adc
inc
xchg
xchg
or
call
hlt
imul
pushf
jae
cld
jb
xchg
test
movsl
adc
sub
incl
ljmp
xchg
or
pop
cld
or
adc
add
mov
cmpb
ljmp
cld
leave
push
popa
pusha
xor
mov
push
ja
out
into
sbb
call
loope
xor
pop
jno
sub
lret
into
ret
dec
in
inc
les
int
decl
idiv
sbb
xchg
pop
adc
loop
sub
fmull
decl
in
mov
cs
test
cmpl
mov
mov
pushl
dec
mov
cmp
ret
pop
les
cwtl
sub
incl
xchg
sub
inc
cmpsb
ror
repz
in
dec
sbb
into
mov
dec
aas
stos
xor
hlt
shlb
fisubrl
push
push
jl
mov
cmc
insl
mov
jl
and
cwtl
add
dec
xchg
cmp
adc
lds
xor
std
lea
pushl
push
popa
stos
inc
sbb
pop
or
out
mov
mov
xchg
arpl
pushf
and
incl
jns
jne
push
mov
sahf
lret
ja
inc
mov
xorl
std
sub
pushl
mov
push
ds
sbb
inc
popa
stos
xor
and
aaa
in
sbb
mov
lcall
out
sbb
shlb
cmpsl
and
jae
xchg
push
insl
xchg
decl
push
pop
dec
loopne
rcl
xchg
test
fdivrl
mov
incl
xchg
cs
or
fwait
mov
xlat
jmp
adc
mov
cltd
cmp
pushf
xor
push
cmpsb
into
adc
push
addr16
repnz
xor
or
je
hlt
aad
imul
ja
loope
xchg
shlb
addl
cmpsb
xor
out
lea
mov
jmp
scas
cmpsl
mov
xchg
push
repnz
xchg
mov
pop
addb
dec
push
testb
cld
lcall
pop
cmp
cmp
out
xor
cmc
push
repnz
hlt
sarb
decl
loopne
mov
cld
cmp
hlt
lcall
stos
xchg
sub
js
mov
rcrl
cwtl
push
cli
out
lea
mov
decl
cmpsb
xorb
ss
and
push
pop
clc
sub
cmp
xor
mov
int3
jg
pushl
filds
out
lret
inc
pop
cli
pop
sub
dec
ss
or
scas
fldcw
adc
adc
lcall
pop
adc
sub
dec
adcb
shrl
ret
popa
fisubl
test
call
pop
out
dec
fwait
jl
adcb
jp
xor
pop
mov
hlt
mov
inc
std
ljmp
int3
push
ljmp
aad
lds
xchg
clc
cmp
mov
in
mov
pop
fsubrl
push
fsubl
movsl
ds
push
loopne
ljmp
cmp
sub
cmpsb
and
and
push
mov
inc
into
adc
fadds
sub
aas
jmp
cltd
add
jge
jb
lahf
cli
stos
inc
arpl
fidivrs
mov
add
pop
test
mov
out
push
mov
sbb
and
sbb
call
adc
and
ficoms
push
shlb
xchg
movsl
mov
dec
push
cmp
pushf
sub
iret
pop
outsl
lock
xor
enter
push
pushl
or
jo
js
fistpl
sbb
in
incl
pop
and
push
lock
mov
shll
cmp
inc
inc
call
xorb
mov
push
fsubl
cmpsl
dec
push
in
xorb
mov
add
or
and
shll
inc
mov
dec
jg
loope
dec
xchg
sahf
fwait
pushf
jmp
dec
xlat
cmpsl
mov
cmp
mov
fs
jmp
nop
push
pop
imul
mov
out
sbb
dec
jae
mov
insl
jnp
cmpsl
mov
or
ljmp
iret
jae
xchg
pop
ja
and
rorl
ss
mov
mov
decl
scas
push
and
popf
bound
sti
cli
xchg
roll
mov
lahf
add
loopne
mov
sub
xchg
mov
test
push
sbb
fdivl
cmp
inc
lcall
add
sti
mov
lock
stc
jmp
outsb
cli
xchg
arpl
lock
ljmp
sub
lods
ds
mov
inc
int3
sbb
ds
fnstenv
les
xorb
xor
sub
cltd
cmp
inc
xchg
sar
decl
cmpsb
mov
push
add
repz
pop
bound
dec
xchg
or
mov
lcall
cmp
push
test
push
adc
cli
xor
shll
das
inc
das
arpl
decl
movsb
xor
jg
stc
mov
fimull
imulb
and
int3
dec
outsl
cli
sti
lds
mov
enter
pop
out
stc
arpl
dec
aaa
add
std
and
nop
lock
lret
add
popa
xchg
inc
jmp
or
sub
test
ficomps
push
pop
subl
call
xor
inc
insb
sub
push
je
insl
jp
push
xor
cmp
mov
es
mov
popf
insb
adc
lcall
and
mov
sub
sarb
mov
mov
pushf
jl
xchg
pushf
inc
xchg
jle
cmpsb
mov
repnz
inc
xlat
jbe
sbb
adc
loop
aam
mov
mov
xor
ljmp
sub
mov
and
addl
out
mov
call
roll
shlb
call
mov
jecxz
out
outsb
jg
mov
and
int
sub
add
push
and
clc
outsb
decl
jo
mov
adc
ja
inc
stos
loope
dec
rorb
pushf
ja
lock
cltd
dec
jmp
jge
push
jmp
pushf
pop
int
dec
mov
mov
or
test
loop
js
stos
sub
ret
test
out
repz
sar
call
sub
push
jle
std
decl
add
mov
sub
dec
push
pop
scas
mov
pop
xor
mov
imul
ljmp
add
cs
sbb
fiadds
and
mov
mov
insb
arpl
jb
dec
sahf
mov
int
call
jbe
sarb
fimuls
scas
jle
lods
mov
outsb
adc
cmp
test
pop
call
fimull
orb
sbb
sub
dec
mov
push
lahf
and
sub
leave
int
adc
stc
mov
fisttpll
loop
fdivrs
jmp
adc
cmp
xor
ljmp
fsub
testb
mov
dec
mov
fisubs
rclb
jmp
rcl
sbb
mov
incl
and
fildll
das
add
outsl
shll
jl
push
push
xchg
mov
repnz
xchg
adc
call
mov
fisttpll
outsl
jge
inc
pushf
fcmovb
into
mov
rcl
clc
cmp
filds
mov
mov
lock
push
xchg
xchg
lcall
imul
mov
enter
lcall
jl
push
sbb
cltd
fimuls
shrb
roll
popa
and
mov
cs
push
loop
or
pushl
out
mov
sbb
pop
not
push
lret
in
in
nop
jne
sahf
in
jne
add
mov
cld
jmp
jnp
sahf
pushf
push
int3
les
loope
daa
xchg
subl
inc
mov
decl
xchg
or
mov
cs
cltd
or
popf
sbb
cmc
push
sbbl
dec
and
and
mov
inc
call
sbb
jmp
and
repnz
hlt
repz
decl
stos
les
in
sub
mov
xchg
fmull
xchg
mov
mov
iret
loop
xchg
fmull
shrb
aad
incl
cmc
sbb
daa
sbb
jbe
push
and
jmp
pusha
jecxz
inc
mov
pop
lock
mov
lds
add
cs
inc
dec
mov
pop
push
out
mov
adc
mov
je
xor
sahf
or
fwait
test
mov
jg
jmp
lock
dec
sarb
idivl
in
sbb
inc
pop
sbb
adc
cmp
lahf
xchg
xchg
sahf
xchg
push
ds
jg
ss
xchg
xchg
scas
in
xor
lds
mov
cmpsl
cmp
lcall
sbb
cld
mov
adc
jmp
sti
daa
pushf
push
icebp
mov
mov
sub
mov
sbb
fisttps
int
enter
jge
incl
push
outsl
shll
add
fs
mov
mov
jmp
mov
xchg
sub
data16
push
ja
xchg
orb
out
or
ja
push
cltd
inc
decl
aaa
gs
sub
push
cltd
push
push
lret
add
dec
test
xlat
adc
jecxz
ljmp
ss
lea
push
lea
jp
cmpsb
cmp
aad
mov
mov
cmpsb
gs
es
test
dec
popa
mov
test
jp
hlt
jge
sar
sbb
xchg
loope
xchg
jne
test
mov
jecxz
mov
dec
sar
decl
push
mov
fbld
call
add
fdivrs
sbb
dec
inc
sub
decl
push
cmpsl
rorb
ret
push
ret
negl
xor
mov
hlt
ljmp
mov
add
lret
mov
cmp
mov
std
xor
int
xchg
sub
outsl
jmp
adc
pop
sub
in
ss
xchg
xor
daa
nop
cmp
fs
icebp
mov
pushl
and
lods
in
push
and
sub
push
xchg
cld
aaa
fistps
or
divb
add
mov
or
dec
cmp
fdivs
mov
jmp
push
mov
adc
and
push
inc
roll
sbb
sub
decl
xchg
cmp
dec
movsl
int
adc
mov
shl
jae
bound
xorb
cli
nop
xchg
pop
pusha
mov
xchg
nop
imul
test
pop
lcall
insb
mov
mov
mov
or
pop
cltd
add
jle
jg
dec
outsb
jae
mov
add
sub
arpl
jg
icebp
jge
lret
test
inc
movsb
jg
movsb
pushl
inc
cmpsl
enter
jl
sub
inc
decl
ljmp
insl
nop
lock
subl
adc
test
in
inc
scas
mov
and
fimuls
out
cli
pop
dec
inc
mov
dec
decb
xchg
add
lcall
add
or
add
mov
jb
dec
xchg
push
gs
ja
int3
fildll
xor
dec
call
mov
sub
cmpl
call
test
mov
dec
mov
lahf
sub
or
je
clc
call
fstpl
and
add
push
pop
pop
or
mov
incl
int
fiaddl
test
jbe
insb
xor
lahf
mov
call
push
jecxz
jne
pop
fcmove
jle
push
hlt
iret
fists
adc
int
and
fcomip
xchg
sub
jge
sbb
cs
ds
fildll
inc
cmpsb
mov
lcall
aas
pop
fs
push
jae
sbb
xor
cwtl
push
pop
jo
dec
jg
cmp
fxch
mov
call
repnz
inc
aaa
mov
je
data16
mov
push
pop
idivb
lahf
cmp
jmp
mov
loope
add
insl
mov
adc
pushf
loop
leave
inc
xchg
fisttpl
xchg
mov
roll
xor
cmp
ds
idivb
sub
daa
ljmp
push
das
mov
adc
fcoml
jae
cmp
aas
sti
je
ja
jmp
or
adc
jae
add
mov
jmp
mov
cmp
sti
ret
xor
dec
js
imul
test
clc
cmc
fwait
sub
or
sub
dec
xor
mov
loopne
lcall
ds
fs
dec
push
mov
sti
into
jl
mov
stc
call
cwtl
sahf
pop
in
and
orb
stos
or
insl
lcall
jmp
sub
out
fdivl
adc
out
inc
or
mov
daa
jns
cs
cmp
ljmp
fidivs
sbb
adc
sti
cmc
pop
decl
pop
mov
jp
adc
addr16
lcall
add
xchg
xor
stos
push
cmp
repnz
cmp
sbb
dec
jg
into
in
mov
scas
mov
xor
push
cmp
decl
rcl
or
cli
leave
mov
xor
decl
jp
pop
jmp
in
pop
sbb
insl
lods
dec
sti
sbb
je
mov
adc
lcall
pop
movsb
movsb
repz
andb
arpl
or
stos
jecxz
orb
cwtl
mov
cmp
adc
movsl
mov
js
push
stos
lods
lods
and
xchg
fisubl
add
add
dec
adc
or
cmp
mov
stos
push
and
or
decl
mov
divb
aas
or
cwtl
adc
cli
insl
dec
pop
jle
decl
push
sbb
mov
dec
fcompl
jle
jno
movsb
dec
scas
int3
xchg
push
sub
inc
cltd
push
dec
jl
sahf
divl
stos
dec
xchg
mov
dec
cmp
insb
sub
sbb
scas
clc
call
sbb
nop
sub
shrb
lcall
mov
cmp
adc
push
dec
arpl
push
mov
clc
sub
in
fstp
inc
xchg
jnp
or
inc
push
fs
add
cmp
mov
int
fimuls
sub
mov
jb
nop
data16
or
out
mov
stos
cmpb
out
out
clc
incl
sahf
mov
outsb
in
jno
cmp
lcall
lds
call
sbb
test
sbb
sbb
sbb
cmpsb
dec
in
inc
pop
inc
loopne
out
sbb
jne
sub
arpl
mov
sbb
nop
xchg
in
jns
jno
adc
imul
stos
push
fdivr
test
jmp
jge
paddb
rcrl
jge
add
lds
jl
push
pushl
sbb
in
out
loop
mov
cmpsl
push
psubusb
call
cmp
out
addr16
out
test
cmp
ds
mov
inc
xchg
mov
mov
mov
or
fsubr
in
jge
loopne
test
sub
loopne
iret
test
jmp
lcall
arpl
arpl
cmp
cmp
pop
fsubrp
lods
add
or
xorb
and
in
push
mov
or
daa
shrb
jne
jg
call
push
sub
insb
imul
mov
pusha
pusha
in
sub
notb
mulb
ds
sub
pushl
push
inc
cld
xor
into
mov
pop
daa
les
flds
jns
mov
adc
mov
xor
lock
or
push
mov
xor
lcall
fcmovb
inc
mov
xchg
outsl
rcrb
jg
enter
insb
das
inc
dec
xchg
aas
cli
decl
or
add
idiv
int3
ret
adc
es
ret
inc
mov
mov
ret
or
jno
dec
and
push
mov
inc
fstl
xchg
mov
jo
aaa
and
mov
decl
add
addr16
push
xor
test
push
clc
cld
ljmp
es
mov
flds
xchg
vmread
or
std
test
push
lcall
jle
mov
sbb
pop
sub
sbb
xchg
or
or
incl
inc
jns
sti
push
sbb
inc
insl
xor
jb
xor
inc
xchg
cmp
xor
mov
cmp
mov
xchg
jbe
mulps
jmp
repnz
inc
sub
lcall
out
outsl
filds
mov
cli
sbb
xchg
jecxz
ss
mov
call
loope
popa
push
jmp
cmp
dec
xor
jg
lcall
leave
sbb
iret
ljmp
xchg
jmp
gs
out
dec
xchg
push
mov
or
ja
pushl
test
mov
push
dec
add
pop
pop
xchg
jl
xor
add
mov
call
sub
add
ljmp
xchg
cmp
inc
std
lcall
lcall
lret
in
jle
push
sub
fadds
test
insb
das
clc
pushl
sub
jge
repz
fs
cmpsb
gs
adc
xor
dec
mov
mov
pop
movsw
sub
rorb
fs
aaa
std
pop
hlt
imul
in
test
fistps
in
push
xchg
movsl
filds
sarb
inc
add
cmpl
xchg
mov
sbb
mov
iret
std
call
les
fs
loope
fwait
sbb
test
lcall
xor
hlt
mov
out
mov
lret
or
mov
jg
nop
dec
sub
add
pop
call
pop
or
mov
sbb
in
ficompl
shlb
aaa
std
or
jno
push
dec
or
or
mov
pushl
rcr
movsb
call
add
shlb
sbb
clc
mov
cmp
scas
cli
fimull
cltd
sbb
jmp
mov
imul
faddl
js
mov
mov
mov
adc
stos
cmp
loop
pop
call
mov
jmp
ds
inc
push
dec
fnsave
add
fimuls
mov
ret
scas
jns
test
mov
xchg
add
sbb
mov
dec
fcomps
mov
cmp
jg
and
jo
mov
cli
jp
int
fwait
pop
arpl
aad
int3
push
out
cmp
fadd
lcall
xor
je
sub
int3
sti
dec
lret
repnz
xchg
or
jg
icebp
aas
mov
inc
or
or
dec
sub
mov
mov
inc
icebp
jg
lds
mov
insb
or
pop
xchg
jae
mov
push
push
call
orb
jbe
xchg
lods
mov
ljmp
cmp
sub
jbe
and
lcall
fcmovu
or
gs
sarb
decl
fdivrl
in
inc
insl
aad
hlt
cmp
mov
movsb
test
je
cmp
addr16
pop
clc
mov
cmpsl
in
cli
mov
or
lcall
mov
push
sub
push
mov
adc
and
and
decl
pushf
mov
movsb
dec
iret
xor
imul
dec
idivl
xor
cmp
xchg
cmp
sub
scas
into
je
icebp
fwait
rolb
fcmovnb
clc
jo
incl
int3
mov
scas
leave
out
sub
push
imulb
lahf
mov
xchg
decl
inc
xor
pop
push
aas
cmp
mov
roll
call
inc
xorl
xchg
and
push
jnp
pop
or
and
daa
xor
and
clc
lcall
or
cli
xor
imul
xor
sub
dec
lods
mov
pop
in
inc
push
mov
lcall
push
fidivrl
lret
iret
adc
rclb
das
in
or
cmpsl
dec
stos
outsb
and
imul
push
in
pop
add
lods
and
fdivl
adc
mov
inc
push
cltd
cmp
lea
mov
iret
aad
shlb
dec
push
ficoml
cmpsb
mov
hlt
jbe
inc
dec
inc
std
dec
faddl
jno
mov
jo
das
xor
xor
imul
jg
and
mov
loope
mov
inc
xlat
js
scas
push
push
das
clc
mov
rcll
bound
mov
jmp
mov
jmp
cmc
mov
pop
jae
adc
les
stos
cltd
mov
call
mov
sbb
jmp
cwtl
cwtl
fsubrl
pusha
xor
pop
or
stos
clc
dec
cmp
pushl
and
push
enter
push
mov
mov
ljmp
and
push
pop
mov
enter
aad
shl
pop
push
mov
dec
or
adc
inc
dec
adc
icebp
and
popf
push
or
push
adc
mov
imul
loop
mov
mov
call
dec
into
call
pop
aam
in
enter
dec
shlb
add
push
clc
push
nop
jae
jns
cmp
mov
cmp
add
xchg
scas
sub
leave
mov
mov
pop
mov
mov
lea
fwait
cmp
rclb
iret
mov
mov
jge
jge
lcall
ljmp
xor
dec
jl
and
push
xchg
andl
jg
cmpsl
fisttpl
lcall
mov
mov
xchg
mov
or
or
pop
adc
sub
inc
xor
push
fbld
jbe
je
mov
xchg
fsubp
inc
or
or
fimuls
cli
sti
inc
push
into
xchg
movaps
jne
or
out
je
mov
jp
les
lock
ljmp
std
ret
stc
mov
mov
and
jle
cmpsb
cmp
xor
lcall
pop
stos
mov
cltd
sub
add
xchg
inc
stc
push
aad
mov
pop
xor
unpcklps
jnp
adc
fildl
pop
cmp
sub
popa
jno
mov
cs
decl
rolb
inc
pop
or
lahf
mov
call
mov
aas
jnp
fildl
repnz
xor
push
push
ds
mov
mov
outsl
cli
push
movsb
test
cmp
repnz
mov
sti
mov
sub
lods
push
dec
call
cli
ret
outsl
fsubrl
xorb
sub
xchg
or
jmp
jmp
pop
out
movsl
cltd
int
aam
jl
dec
adc
and
cmp
mov
scas
cmp
inc
lcall
cmp
out
mov
imul
mov
incl
pop
and
mov
xchg
jg
push
jmp
push
mov
repz
ljmp
dec
ret
xchg
push
sub
fistpl
mov
push
adc
ljmp
insl
cmp
add
xchg
shrl
call
push
out
call
movsl
mov
adcb
mov
dec
cmp
cmp
dec
ljmp
inc
or
stos
push
fstps
or
jle
mov
xchg
and
jmp
imul
jae
std
mov
sub
pop
push
rcrb
in
fsubl
pop
in
iret
jo
cwtl
cmpsl
add
in
ds
js
call
pop
decl
push
cmpsb
mov
add
cwtl
stos
jo
lret
int3
push
mov
lods
jns
in
call
ss
es
js
and
iret
test
cmc
mov
add
arpl
aas
shr
lcall
jecxz
xchg
cmpsl
mov
xlat
jmp
fs
mov
lret
mov
data16
xor
jmp
dec
jecxz
mov
cmp
mov
lds
sbb
sarb
ljmp
xchg
outsb
inc
out
jae
xchg
mov
ret
iret
cmp
sarb
pushl
leave
cmpl
jl
or
cmpsb
pushf
adc
decl
pushf
jo
rcr
mov
pop
xchg
inc
mov
aam
mov
mov
mov
decl
mov
pop
cmp
mov
xchg
jle
loop
add
incl
leave
adc
loopne
mov
or
jge
cli
mov
decl
mov
sbb
and
fwait
and
sbb
mov
scas
pop
pop
and
push
daa
lahf
enter
mov
les
add
inc
add
inc
fisubrl
cmpsb
incl
dec
pusha
lods
xchg
push
jnp
mov
jb
ja
and
arpl
adc
mov
dec
push
ret
or
dec
mov
in
dec
out
inc
pusha
fildll
inc
add
mov
decl
addr16
cltd
leave
aaa
in
dec
xchg
dec
jl
in
rorb
push
xchg
pop
xlat
pushl
mov
and
int3
in
bound
xor
test
jg
inc
jmp
enter
add
sub
test
fsubr
gs
push
cmp
jmp
or
mov
cwtl
dec
adc
cltd
orb
mov
cwtl
jle
pop
clc
jg
ljmp
lahf
and
add
daa
dec
mov
push
jecxz
scas
xchg
lret
fsincos
add
imul
mov
mov
cwtl
stos
pushf
sbb
push
sbb
pushw
iret
lret
xchg
dec
lods
or
jp
dec
lcall
outsb
inc
lret
or
cmp
inc
ds
loop
test
mov
test
call
outsb
int3
xor
in
adc
pop
rcrb
insb
movsb
push
push
cmpl
out
cli
mov
push
sub
loopne
stos
jle
inc
adc
movsb
insb
pop
mov
cmp
add
jle
lcall
fildl
cwtl
cmp
ds
xor
cmp
inc
orb
decl
hlt
mov
push
or
loopne
es
mov
jmp
xchg
adcb
jg
popa
cmp
test
sub
sbb
rol
cmpsl
scas
sbb
and
pushl
fistps
int
jo
test
enter
stc
loop
inc
mov
addr16
pop
mov
jle
stos
movsb
adc
psubq
jnp
lods
int
mov
or
cmc
mov
jl
mov
sub
div
pop
flds
pop
or
notl
cli
dec
out
add
inc
pop
stc
outsl
adc
pushl
je
inc
and
in
mov
mov
push
cmpsb
pop
dec
call
add
mov
loopne
insl
pushl
xor
cmp
movsl
adcb
inc
cmp
dec
insb
out
nop
std
and
out
sub
push
and
ljmp
in
fisubrs
sbb
mov
jl
xchg
jmp
ret
aam
pop
mov
sahf
dec
dec
cld
aad
sti
cwtl
popf
aad
repnz
inc
call
and
lea
lods
lea
cmp
hlt
mov
sub
loop
inc
fimuls
das
mov
jmp
loope
repz
dec
mov
not
jl
xchg
push
outsb
and
sarb
cmpl
push
mov
lds
push
out
ret
sahf
shll
add
lea
mov
movsb
pop
jp
cltd
sbb
aas
mov
cmpsl
lods
adc
popa
adc
lea
or
decl
das
mov
ret
ja
lahf
into
sahf
jg
mov
popf
jno
lret
lcall
lock
daa
or
jb
rcr
stos
mov
ljmp
sahf
fcoml
imul
mov
call
js
fisttpll
inc
imul
push
imul
jl
test
lock
inc
or
arpl
jbe
stos
ljmp
push
pop
and
push
fidivl
out
xchg
imul
lods
sbb
sahf
xchg
aas
pop
push
stos
rorb
mov
push
jmp
mov
call
icebp
stc
mov
mov
push
mov
lret
fcomip
jg
push
pop
add
andl
push
jnp
popw
jp
sbb
rol
call
repz
lock
movsb
xchg
nop
add
push
jge
and
sbb
popf
pushl
mov
jo
insl
ret
mull
xchg
ret
cmp
jns
fistpll
icebp
sti
add
jg
incl
fdivrl
lret
std
jmp
add
stc
call
xchg
inc
js
aad
fstpl
jnp
mov
mov
lds
ud0
pop
cmc
pop
jno
cmp
xchg
cmp
xchg
into
test
push
in
dec
sub
mov
pop
lcall
and
pusha
and
int3
mov
cmp
sub
stos
inc
dec
adc
lods
push
jae
add
and
repz
mov
nop
das
inc
repnz
push
adc
mov
test
stc
jns
arpl
inc
ds
test
addl
sbb
sub
fwait
testl
add
lods
into
stc
dec
mov
fldl
inc
scas
ficoms
cmpsl
nop
ret
lcall
lcall
push
push
sbb
fdiv
sub
jg
mov
xor
jge
jae,pn
cmp
test
jg
or
mov
dec
pop
sbb
mov
inc
pop
push
xor
xor
fwait
dec
mov
pop
inc
and
setne
adc
mov
push
mov
addb
jecxz
pop
adc
movb
sub
std
out
push
add
jmp
gs
xchg
add
in
xor
xchg
mov
mov
push
jb
and
nop
adc
stos
mov
xchg
cltd
fcmovnu
dec
mov
dec
cmpsb
fwait
sar
mov
lahf
mov
movsb
aas
out
fsub
mov
scas
sar
cs
pop
sub
pusha
jns
or
and
icebp
lcall
fucom
ss
push
push
or
sbb
ljmp
add
outsb
lods
mov
repz
movsl
lcall
lcall
cmp
adc
test
mov
add
jl
push
fnstsw
lods
xor
pop
loope
jnp
jecxz
incl
lcall
out
sbb
xchg
dec
por
adc
adc
sub
js
jns
mov
ljmp
bound
sbb
test
lods
cmp
pop
lahf
fs
cmp
pop
aam
hlt
shlb
call
xor
ret
jbe
lret
mov
mov
sub
fwait
mov
cs
ljmp
xchg
mov
inc
ret
jo
push
fstl
ljmp
sbbl
dec
aaa
fstpl
stos
es
cmp
dec
rcll
sub
js
mov
loope
lea
or
add
aaa
inc
mov
bnd
inc
repz
pop
pop
sub
xchg
icebp
into
add
mov
inc
mov
push
pop
mov
xor
idivb
dec
lea
in
outsb
call
call
xchg
lods
mov
pop
nop
and
mov
pop
xchg
call
cld
sbbl
test
lds
jecxz
pop
clc
gs
aam
push
sub
mov
dec
and
pushf
in
in
lds
cli
mov
sub
ret
rcll
lret
clc
ljmp
pop
xor
mov
xor
add
sbb
push
mov
ljmp
testb
add
out
into
sbb
cmpsl
or
cmp
mov
dec
fs
pop
mov
and
add
test
push
xorl
push
or
decl
jb
mov
xchg
xchg
jp
aaa
ficompl
insb
jne
ss
out
push
fcomps
ds
inc
daa
pushl
ret
repz
ficompl
push
sbb
xor
lcall
faddp
ljmp
lock
push
mov
cmp
test
xchg
ret
cmpsl
cld
pushl
jae
loop
nop
and
clc
insl
aas
xchg
call
jb
sub
stos
mov
add
incb
test
adc
mov
imul
mov
pusha
cmp
pushl
jge
addr16
insb
pop
or
xor
or
pop
pop
repnz
xor
test
fdivr
ljmp
lock
pop
div
xor
out
sub
mov
cmp
insb
js
lcall
xchg
cli
scas
lea
dec
call
jns
scas
scas
lods
push
cs
imull
popa
fwait
cmpsb
sarl
cld
and
push
jbe
cli
sbb
outsl
add
jg
ret
xchg
ds
inc
jg
enter
aas
jne
into
in
add
insl
andps
incl
cld
pop
inc
test
and
loop
clc
dec
test
or
call
or
cmp
cmpsb
mov
xchg
mov
add
iret
ret
cmpsl
cltd
mov
ret
jmp
dec
ljmp
inc
sub
int
testb
in
arpl
pop
mov
push
push
scas
xchg
xor
enter
ljmp
icebp
lret
sbb
lahf
inc
idivl
adc
dec
cwtl
xor
xor
pushl
xor
or
mov
lret
fcomip
jle
sbb
popa
in
fdivs
addr16
test
mov
ljmp
mov
push
in
dec
adc
jnp
cmovl
loopne
jo
jo
and
mov
ja
pusha
dec
mov
pushf
xor
incl
out
inc
push
inc
repz
scas
vmptrst
cmc
jg
ja
out
es
out
rcrb
adc
adc
push
xor
jp
cs
fistps
mov
jb
loopne
push
push
jbe
int
mov
and
sub
sbb
loop
xlat
or
and
jg
mov
mov
ds
xor
rorl
jno
scas
cmc
or
mulb
push
loope
mov
test
push
pushf
mov
and
xor
decl
mov
subb
jns
dec
adc
xchg
pop
scas
cmp
cmp
adc
test
loop
mov
mov
bnd
ljmp
std
mov
jmp
jb
shrb
scas
movl
aad
jg
mov
jno
je
neg
cmc
mov
inc
mov
ljmp
call
mov
sub
mov
shrl
inc
mov
cmpsl
xbegin
xor
xor
ja
fidivs
push
popf
sarl
in
sbb
xchg
dec
push
xlat
movsb
lcall
mov
lcall
inc
sbb
cmp
mov
pop
xchg
stos
decb
pop
ljmp
add
cld
mov
add
mov
xchg
push
mov
fwait
xchg
mov
lcall
sub
je
jl
nop
xchg
int
push
xchg
test
adc
aaa
pop
mov
cmp
loop
sbb
fadd
roll
shrb
xor
push
sahf
test
mov
inc
cld
xlat
imul
lcall
xor
pop
sahf
loope
adcl
inc
stc
jae
es
xchg
cmp
mov
loope
in
es
sbb
xchg
inc
arpl
lcall
sub
mov
fsubrs
push
inc
add
xchg
stos
insl
daa
inc
cmp
lcall
and
dec
jmp
and
scas
mov
inc
xchg
loop
dec
jbe
sbb
lcall
inc
adc
inc
pop
icebp
ljmp
mov
add
pusha
ret
jl
fwait
mov
jb
lret
inc
and
sub
pushl
pop
pop
mov
fnclex
js
test
out
icebp
jge
iret
adc
test
decl
adc
cmp
inc
pop
jecxz
std
sub
xchg
leave
cltd
arpl
fucomip
clc
mov
scas
movsb
out
data16
mov
xor
scas
lock
add
mov
daa
cmp
add
fwait
add
cmp
popa
jns
mov
mov
ficompl
stos
sbb
sbb
pushf
mov
clc
mov
or
stos
adc
push
gs
aad
add
mov
sub
mov
ja
push
jge
lcall
arpl
es
jg
cltd
call
fwait
mov
shll
jl
je
fiaddl
les
mov
pop
out
jnp
sar
mov
mov
inc
ja
mov
or
shlb
xor
call
repz
push
and
in
fwait
and
push
mov
push
pop
insb
imul
cmpsl
ja
clc
call
adc
and
sbb
mov
clc
sbb
lahf
jle
lcall
out
inc
cmp
or
dec
sbb
jle
pop
mov
mov
inc
maskmovq
xchg
mov
mov
push
mov
int3
cli
sbb
cld
shll
dec
imulb
loopne
push
xchg
mov
lret
or
stc
pop
jne
or
ljmp
add
jg
outsb
xor
push
iret
daa
push
clc
loop
filds
fbld
cld
cmp
call
lret
mov
xor
sub
ljmp
add
sar
int
ljmp
sub
jp
fnstenv
iret
test
decl
mov
sub
arpl
add
and
int
push
adc
hlt
bound
decl
mov
scas
mov
add
xor
and
call
pop
ljmp
mov
dec
out
call
fldl
jae
cli
and
mov
loopne
mov
cmp
xor
pop
ret
push
adc
enter
add
lods
mov
cwtl
jmp
xchg
pop
insl
stc
mov
sbb
jno
push
popf
inc
decl
lea
jecxz
sub
loope
xor
rcrb
loope
fisubl
mov
lret
in
popa
xchg
inc
or
fs
xchg
clc
push
push
or
lcall
mov
xor
adc
mov
aaa
fldenv
mov
adc
or
pushl
fnstcw
push
mov
mov
mov
adc
adc
incl
cmp
sbbl
jb
in
mov
call
push
jmp
push
in
mov
aas
mov
jp
call
jp
add
cld
sbb
loopne
xor
ljmp
das
test
pop
mov
add
and
ja
add
fstp
ljmp
mov
jne
dec
into
fsubs
sub
andl
clc
inc
out
loope
incl
add
fwait
in
xor
dec
sbb
ja
xchg
pop
lds
push
insl
pop
adc
cmp
adc
lcall
mov
dec
les
dec
mov
mov
or
or
xchg
je
adc
xchg
and
shr
adc
call
popf
js
int3
das
lock
pop
gs
pushl
push
push
sahf
add
or
mov
outsb
or
rcl
pop
out
aam
scas
rsm
lcall
incl
daa
mov
jns
add
out
fidivrl
cmp
xchg
ret
dec
cmp
call
aad
cmp
jecxz
icebp
xchg
cmp
ret
push
nop
in
add
divl
mov
into
mov
addr16
test
xor
dec
fcompl
aad
lods
das
notl
add
pop
lock
jns
lcall
dec
aaa
cmp
jg
mov
ljmp
cmpsl
div
jge
jp
fmull
xchg
cmp
and
sar
lcall
clc
test
cli
cmp
jno
jle
sarb
pop
inc
scas
test
les
ud0
addb
add
fisttpl
push
jmp
mov
or
fwait
arpl
lcall
add
lcall
arpl
mov
testb
cli
xchg
out
dec
jmp
inc
inc
test
lret
xor
jle
out
sbb
lea
mov
lcall
jmp
inc
enter
jle
xchg
dec
rcrb
dec
pop
int
es
lcall
dec
push
ror
aas
jg
xchg
loopne
in
dec
inc
push
and
ror
inc
mov
jae
hlt
push
cld
decl
dec
push
push
out
push
ret
outsb
mov
mov
fstl
ljmp
popf
push
mov
mov
out
adcl
cmp
adc
cmc
xchg
fsubrl
xor
jo
mov
incl
adc
out
rorb
mov
incl
mov
jnp
sbb
outsl
gs
icebp
sbb
call
mov
adc
mov
or
dec
adc
jbe
mov
fldl
incl
mov
fbstp
cli
push
xchg
mov
call
shlb
decl
fwait
outsb
outsl
cli
scas
ljmp
cmp
cld
xchg
mov
fninit
xor
jmp
xchg
incl
outsb
mov
icebp
lock
pusha
mov
xorl
mov
sub
pushl
testl
and
sbb
xchg
pop
std
cmp
in
orb
and
sbb
call
mov
jb
push
icebp
push
pop
xchg
jns
sub
mov
and
out
or
in
mov
aas
aam
pop
int
xor
jmp
fldl
sahf
pushf
add
inc
pusha
lcall
pop
pushf
pop
lahf
mov
adc
movsl
jmp
leave
jg
fisubs
cltd
mov
or
xor
pusha
mov
inc
push
pop
in
in
incl
fisttpl
or
dec
mov
notl
and
and
jae
lcall
add
pop
stos
jmp
mov
inc
loopne
sti
das
repnz
or
xchg
sub
xchg
xchg
mov
aam
dec
inc
out
ljmp
in
xchg
jo
xor
jo
ss
fs
stos
aaa
jns
cld
jg
dec
xchg
add
or
mov
pushf
sub
jb
mov
call
inc
dec
mov
inc
push
subb
out
sbb
sub
clc
pushl
notl
sbb
ja
bound
mov
lea
add
mov
xchg
loopne
mov
xchg
lahf
dec
ljmp
push
or
push
add
inc
lea
popa
outsb
and
stos
je
jg
mov
push
fisubs
cmp
cs
fsubp
data16
xor
cmp
out
mov
stc
inc
hlt
mov
movsb
fistl
aad
insl
scas
out
and
pop
mov
inc
stos
sbb
sbb
stos
pop
dec
mov
sbb
ret
loop
aad
mov
mov
pusha
leave
inc
pop
jp
mov
jmp
les
pop
mov
pop
dec
or
jmp
cmp
test
out
aas
push
fdivrp
jmp
negl
hlt
pop
xor
or
sbb
xor
mov
popa
xchg
lds
pop
aas
js
icebp
movsl
loopne
incl
out
add
push
mov
adc
dec
mov
repnz
ljmp
rcrb
add
testl
cmp
dec
hlt
incl
and
mov
rcrl
push
enter
sti
aam
loop
test
jle,pn
push
mov
add
or
mov
sub
aaa
dec
cmp
mov
push
inc
mov
xchg
cmpsb
gs
sub
pop
jno
xor
imul
mov
xchg
inc
pop
sarl
dec
jbe
lcall
std
rclb
fstpt
enter
dec
mov
pop
hlt
dec
lods
cld
test
dec
cld
mov
xchg
pop
xorb
cmc
inc
cmp
sub
cs
subl
pushl
ss
mov
xor
pop
jb
or
push
mov
pop
mov
sub
pop
incl
repz
and
shl
iret
or
cs
pushl
xchg
add
test
push
les
mov
fnstsw
fsubr
gs
testl
inc
xor
aaa
lret
xchg
dec
add
push
mov
mov
jns
adc
into
pop
subb
pop
jmp
jmp
movsl
jmp
jae
sbb
cmp
xlat
mov
pushf
xchg
xor
and
dec
pop
loope
ret
ds
pop
adc
push
adc
outsb
cmp
lds
dec
dec
xchg
push
sub
cld
jg
fs
mov
sarb
imul
and
test
dec
add
mov
clc
aaa
or
roll
lcall
aaa
std
call
lods
push
sbb
cmp
addr16
loop
adc
lcall
in
and
push
dec
or
pushf
jb
inc
rcr
cmp
cli
mov
inc
call
repnz
fcompl
adc
cmc
orb
pop
cli
nop
cwtl
or
ss
xchg
dec
jmp
in
je
jge
xchg
test
loope
cmc
mov
cmc
lods
xor
sub
lea
iret
mov
cli
inc
adc
sbb
mov
mov
shlb
pop
test
lcall
sub
adc
jle
push
and
das
xor
dec
jecxz
daa
clc
mov
sub
ljmp
pop
std
xchg
push
xorl
in
or
dec
fstl
inc
mov
into
jg
jmp
imul
sub
inc
je
mov
imul
xorl
incl
push
lret
imul
xchg
gs
movsl
cmp
lahf
mov
jmp
loopne
jmp
pop
psubw
pop
lcall
aaa
xor
mov
or
decl
adc
scas
mov
mov
cmpsb
into
or
test
jl
dec
mov
std
test
pushl
adc
stos
mov
fiaddl
shlb
fstl
or
push
jmp
dec
ss
sub
decl
sub
enter
push
lret
lds
ja
in
aad
test
adc
pop
jg
dec
lret
stos
mov
rcrl
addr16
push
das
push
and
pop
push
bound
sub
jmp
out
lods
shl
inc
cmp
ss
pop
int
rol
enter
gs
dec
xor
lock
xchg
cli
jg
dec
movsl
sub
in
nop
cmp
mov
lcall
jbe,pt
push
mov
jnp
and
dec
int
mov
mov
xor
out
shll
aad
adc
iret
pop
push
call
std
mov
ret
xchg
push
sahf
pop
adc
loop
and
dec
mov
pushl
cmpsb
jmp
mov
loope
lahf
mov
mov
mov
movsl
cld
inc
jmp
fisubl
dec
jmp
pop
dec
sub
test
inc
jno
cli
or
fsub
add
popf
inc
ror
pop
fidivrs
push
sub
mov
push
clc
cmp
xchg
inc
sbb
pop
pop
out
mov
jno
decl
adc
jmp
mov
xchg
mov
repz
jbe
sub
jmp
gs
push
xchg
bound
sbb
ja
stos
lods
dec
in
add
push
push
test
pushl
xchg
gs
adc
mov
sub
push
fstpt
dec
inc
pop
mov
repnz
dec
decl
inc
movsl
std
pusha
inc
repnz
into
mov
xor
ljmp
pop
sub
sbb
fdiv
ljmp
jmp
lret
push
push
sti
mov
jmp
lahf
push
imul
fcomps
lock
in
cmpsl
push
push
and
xchg
push
popa
ljmp
outsl
sbb
cmpsb
fisttpll
or
mov
adc
jl
jecxz
mov
xor
add
push
xchg
fiaddl
fstpl
mov
mov
pusha
mov
addr16
test
xor
xchg
adc
loope
outsl
out
cltd
es
lret
jmp
scas
sti
in
lock
bound
fistpl
inc
add
pop
xchg
jge
leave
fcompl
test
call
fldenv
jp
sbb
cltd
push
ljmp
ljmp
icebp
es
iret
mov
sti
dec
mov
fld
shrb
mov
test
imul
mov
test
cwtl
mov
xchg
add
ljmp
lock
sub
mov
pusha
inc
jp
out
in
cli
pop
sar
ljmp
dec
pop
sub
adc
xor
push
jae
mov
jmp
cwtl
cmp
push
pop
or
push
insl
add
loopne
enter
or
in
out
mov
mov
inc
sbb
cmp
or
dec
call
mov
mov
push
push
push
imul
xor
sti
ljmp
psrlw
push
ljmp
sahf
push
sub
and
pop
rcl
sbb
jmp
pop
ljmp
mov
dec
push
lret
push
pop
fcompl
mov
jmp
adcl
sub
adc
setb
bound
mov
push
loope
dec
ret
or
or
and
decb
mov
fmul
and
mov
sbb
stos
repnz
push
popf
insb
sub
sub
dec
outsb
sar
incl
sub
adc
jge
pop
xchg
add
call
inc
add
std
xchg
inc
dec
fistl
enter
ljmp
jae
add
mov
adc
dec
push
xor
bound
mov
pop
add
test
mov
roll
lcall
adc
fdivrl
enter
nop
adc
sti
call
std
in
adc
sbb
xchg
mov
pop
cltd
adc
cld
aaa
sub
scas
out
fisubrl
lcall
push
cmpsb
inc
jle
xor
add
lret
xor
outsb
clc
mov
fs
cltd
dec
add
push
outsl
into
lret
clc
jg
mov
pop
enter
outsl
mov
test
adc
cmp
mov
data16
hlt
sahf
movsb
xchg
sub
pop
divl
shrb
lcall
adc
dec
ss
sub
mov
pop
je
lea
or
jecxz
jmp
scas
mov
cld
icebp
fs
test
sahf
inc
or
idiv
and
push
enter
push
mov
negb
shlb
lock
mov
push
xchg
sub
incl
daa
mov
xchg
dec
test
aam
cltd
in
and
loopne
push
stos
and
or
decl
out
scas
mov
clc
dec
sahf
sahf
les
or
mov
sub
xor
xchg
scas
xchg
js
sub
jae
ss
fistpll
jp
sub
push
and
pop
adc
scas
out
pop
and
push
ja
jmp
js
movd
pop
jp
dec
jmp
push
fidivl
imul
lahf
cmc
fwait
fbstp
jmp
dec
cmp
push
mov
out
clc
sti
xchg
outsb
jmp
das
jg
push
sub
add
lcall
lds
xlat
call
js
xchg
arpl
dec
scas
dec
cmp
pop
cmp
es
xor
ficompl
pop
jns
and
test
mov
mov
popf
push
push
add
xchg
mov
arpl
mov
xchg
adc
jmp
push
add
cmc
cmp
jmp
sbb
xor
adc
push
in
dec
daa
xchg
shll
shrl
stc
fwait
mov
mov
xor
xchg
stos
leave
cmc
enter
or
loopne
mov
in
into
jl
hlt
xor
inc
sbb
or
add
mov
cwtl
scas
mov
ljmp
lcall
comiss
jno
testl
pushl
inc
or
out
add
addr16
jns
dec
int3
or
iret
lds
out
clc
push
int3
fmuls
popf
fwait
popl
les
pop
ds
mov
call
adc
adc
movsl
sbb
pop
hlt
fldt
ficoms
cmpsl
pop
insb
or
loopne
jmp
cli
push
addl
sbb
inc
rorb
jb
pop
adc
mov
ja
leave
jae
clc
mov
sub
mov
mov
dec
pop
repnz
rclb
stos
xor
out
mov
ficoml
cs
cmp
jnp
icebp
aaa
pop
aad
jp
push
xor
call
filds
adc
rcrb
mov
mov
subl
xor
lock
xlat
sbb
daa
arpl
test
jb
mov
sub
jg
jno
mov
ja
les
push
pop
nop
aad
xor
pcmpeqd
fsubr
sub
push
or
mov
cmpsb
iret
jle
stos
xor
out
test
mov
xchg
cs
cmp
inc
stos
roll
adc
cmp
adc
sub
add
jmp
adc
sub
inc
and
aad
adc
aam
js
cli
push
cld
dec
faddl
mov
xchg
and
mov
sbb
add
outsl
mov
rcr
mov
es
jg
adc
mov
movsl
add
mov
cmp
pop
roll
incl
ret
pushf
fsubrp
ljmp
pop
mov
rorb
lcall
call
inc
lods
sub
cld
cmp
xchg
aad
mov
hlt
roll
xchg
sbb
mov
call
cmc
scas
push
cmc
aam
outsb
fsubl
jmp
cmp
je
jg
cs
scas
jne
int3
fbld
stos
inc
aas
inc
xor
fwait
adc
xchg
loope
aam
xor
incl
fcmovnu
dec
inc
xchg
fidivrl
jnp
mov
cmpsb
push
icebp
into
mov
sbb
mov
mov
jne
mov
in
push
out
xchg
mov
xchg
adc
push
mov
pop
cmp
jo
iret
and
repz
ja
iret
test
xor
pushl
gs
test
scas
fstl
jecxz
das
mov
out
daa
or
call
dec
js
data16
xchg
dec
pop
mov
nop
push
cmc
mov
mov
sub
xchg
sar
andb
ljmp
push
data16
mov
icebp
neg
pop
mov
or
cmp
or
mov
jl
sbb
ljmp
xor
pop
adc
sub
xor
dec
jnp
inc
movsb
pop
xchg
scas
mov
stos
jle
lock
frstpm(287
int3
mov
jo
into
insl
fidivs
outsl
inc
pop
adc
mov
subb
lcall
sahf
jne
sub
stos
add
lret
aam
mov
movsl
jo
pop
cli
push
das
cli
das
cli
fs
jnp
adcb
pop
stos
cmp
mov
incl
out
sahf
adcl
inc
stos
out
mov
jp
pop
fnsave
sub
mov
or
jmp
repz
sti
mov
push
insb
mov
jno
mov
out
push
add
xchg
or
sar
cmpsl
pop
out
and
fmul
insl
adc
xchg
negl
scas
jns
call
cltd
pop
sub
movsb
out
dec
orb
pushf
xchg
cmp
ds
dec
aas
call
mov
lcall
rclb
inc
push
jne
sbb
and
test
dec
mov
and
sbb
dec
sub
ud0
je
leave
icebp
in
xchg
mov
lret
gs
incl
cmp
pop
and
add
pushf
or
call
gs
cwtl
int3
lcall
pushf
add
bound
push
cmp
push
popf
sub
lcall
adc
jb
aad
int
cld
push
jo
js
test
dec
push
call
rorl
xchg
call
fadd
enter
lds
inc
sub
xor
add
mov
dec
jmp
cmp
nop
insl
addb
lea
push
maxps
sahf
pop
decl
jmp
int
inc
dec
data16
push
or
xor
ljmp
mov
loopne
std
adc
lea
mov
lods
std
mov
inc
or
xchg
incl
cmp
lcall
pop
aas
in
data16
xor
decl
pop
inc
push
gs
and
mov
dec
int
inc
xor
in
jg
lret
xchg
dec
shlb
adc
sub
pop
jmp
sub
adc
xlat
shl
clc
pop
cmp
movsl
stc
or
into
test
push
xchg
push
push
or
mov
cmp
cmpsb
incl
mov
andl
xchg
lods
mov
lret
cli
js
xchg
imul
out
sbb
jb
jg
sub
enter
jno
addr16
xchg
cmc
push
xorl
xchg
mov
rcl
lods
inc
pushl
lods
inc
sub
xor
jnp
adc
jns
mov
adc
mov
lods
cmp
rcll
ljmp
leave
mov
in
hlt
fs
mov
rcll
into
imul
pushf
int
add
lcall
pop
ss
pop
ds
sarl
pop
pop
fs
incl
xor
jg
dec
loop
push
inc
mov
call
xchg
into
das
test
enter
ret
xchg
and
mov
ljmp
lods
inc
cmp
faddp
xor
pop
xchg
cwtl
fldt
cmpsb
sbb
lret
mov
sub
xchg
push
lods
imulb
xchg
add
sub
mov
add
pop
stos
pushl
shll
ret
arpl
pop
adc
fadd
lret
xchg
jecxz
ret
repnz
jmp
repnz
sbb
add
pop
loopne
pushf
fs
dec
mov
xchg
es
ljmp
cli
cmpsb
std
aas
loop
mov
bound
sarb
inc
mov
mov
icebp
xchg
cmpl
jno
dec
testb
pop
jbe
mov
decl
iret
in
pushf
mov
subb
push
imul
inc
outsb
pop
lock
xor
pop
xor
cmp
and
loop
divl
sahf
xchg
mov
mov
shl
dec
push
sbb
popf
jno
or
fiadds
push
mov
and
mov
repz
sbbb
icebp
and
mov
loope
sbb
jmp
and
mov
mov
je
xor
call
stos
sub
mov
rclb
or
cs
push
push
pushf
dec
mov
dec
mov
subb
add
popf
push
pop
mov
pop
lahf
push
jg
and
setbe
xor
jl
mov
jle,pt
sahf
push
sbb
fdivr
jmp
jle
jae
mov
add
popa
fimuls
push
repnz
adc
jle
and
sub
cmc
test
in
adc
jg
pop
pop
push
pop
push
cmp
mov
movsb
sbb
dec
test
mov
xor
xlat
lods
jno
scas
clc
aas
cmp
cwtl
mov
aaa
push
push
push
cmc
mov
cld
xchg
ds
xchg
popf
decl
pop
idivb
fwait
jb
mov
dec
add
outsl
push
lahf
fcomps
push
jmp
loopne
cmp
pop
mov
push
inc
mov
mov
cmpsb
in
incl
or
push
neg
mov
push
and
jmp
mov
fwait
popa
sub
sbb
iret
popl
jmp
xor
mov
pop
dec
add
mov
mov
inc
lods
pop
xlat
popl
call
lahf
inc
mov
add
test
cwtl
inc
stc
mov
push
adc
es
adc
popf
sahf
bound
clc
jmp
jecxz
jb
js
popa
sbb
insl
xor
jb
call
dec
xor
in
testl
mov
sbb
fsubrl
inc
aas
jmp
jns
pushl
cmpsb
and
imul
inc
mov
cmp
sub
loopne
pushl
int
aaa
mov
adc
repnz
jns
shlb
jl
leave
sahf
cmc
incl
mov
gs
and
lret
lods
xor
mov
aam
cmpsl
jmp
sti
test
out
cltd
add
mov
hlt
add
jl
lcall
inc
xchg
dec
jl
inc
xchg
ljmp
and
aam
pop
jle
les
sub
adc
pop
push
inc
loopne
or
pushl
stos
and
push
adc
or
push
add
pop
mov
decl
es
dec
mov
add
sar
or
and
and
mov
insl
out
clc
inc
inc
dec
sbb
sahf
out
sub
aam
jmp
mov
adc
outsl
and
sbb
inc
call
mov
mov
pushf
dec
inc
xchg
lahf
xor
decl
cmpl
aas
sub
popf
rorb
adc
adc
lock
call
adc
enter
fsts
pop
fsubl
cmp
mov
mov
repnz
out
sti
hlt
jge
jge
mov
xor
popf
xchg
xchg
or
lcall
inc
inc
xchg
jl
dec
aaa
dec
fwait
mov
jp
lret
jg
mov
repz
jmp
mov
add
loope
jns
hlt
push
xchg
loop
push
decl
aad
adc
mov
iret
adc
push
jne
add
es
and
cmp
jg
jmp
push
push
xchg
add
jno
adc
add
out
jbe
fisubs
call
mov
in
into
push
push
sub
test
lods
shr
in
ret
fwait
push
aas
sti
mov
inc
jecxz
xchg
xchg
jg
push
mov
popf
sbb
int
sbbb
outsb
adc
ljmp
sub
mov
add
mov
sbb
add
decb
mov
push
add
shlb
pop
into
ja
sahf
aam
lods
push
jmp
add
shrb
decl
fidivs
pop
mov
fiadds
out
mov
ljmp
mov
pop
mov
incl
cmp
lea
mov
jl
cli
ret
sub
gs
cli
jle
mov
rorb
movl
sbb
daa
lahf
dec
jg
out
ret
fmulp
push
push
push
xchg
aad
mov
popf
cmp
test
call
add
aam
pop
cmp
jb
sub
mov
cmpsl
lret
repnz
call
mov
mov
test
rcrb
xor
mov
jmp
mov
xorb
push
push
mov
inc
or
mov
ret
push
fwait
dec
xchg
pushf
aaa
aam
adc
fstpt
loope
fbstp
lods
adc
adc
outsl
sub
popa
jne
or
mov
mov
or
sahf
popa
pop
ret
jmp
addb
or
fdivrp
call
mov
add
xor
inc
pop
pushf
mov
jge
xchg
mov
push
lods
or
call
push
mov
inc
enter
rcll
fisubrl
fcoms
mov
cmpsb
imul
incl
iret
stc
ret
dec
xor
lods
je
dec
fidivs
ja
and
xchg
cmpsl
jne
mov
js
int3
sub
outsl
mov
mov
jmp
sub
push
stos
testb
ds
test
add
test
icebp
loopne
es
mov
fimull
cmp
aas
inc
lock
push
xchg
mov
sahf
test
fistps
fistps
rclb
mov
stos
iret
fcoms
push
cmp
sbb
dec
clc
mov
std
mov
scas
cli
decl
lret
jp
pusha
jp
or
dec
dec
xlat
dec
and
cmc
sub
movsl
jb
pop
adc
lcall
cwtl
sub
addb
and
out
data16
push
jle
aas
pop
fnstenv
inc
or
decl
insb
xchg
sub
cmp
mov
addb
les
clc
test
adc
xlat
dec
sti
out
enter
stc
fwait
imul
fisubrl
cmpsl
add
fwait
gs
pushl
mov
xchg
gs
push
les
test
cmp
mov
lea
or
lcall
sbb
fdivl
pop
test
xchg
gs
cli
xchg
in
sub
adc
push
aad
push
adc
fstl
pop
in
movsl
in
arpl
scas
cmp
pop
cmpsb
cmpsl
mov
push
lea
pop
scas
movb
scas
into
fcoms
mov
mov
xchg
das
adc
aad
push
lods
fsub
decl
adc
adc
mov
lahf
push
cmp
orl
ljmp
xor
test
fists
pop
xchg
jb
jp
stc
push
aaa
pushl
in
mov
mov
ret
das
push
stos
mov
inc
lds
test
ljmp
cld
addr16
lcall
fs
std
jge
fisubs
mov
jle
cmp
lcall
cmp
aas
mov
pushl
dec
push
or
pop
or
add
cmp
daa
push
push
insl
pop
rol
pusha
loop
jns
icebp
xor
clc
in
cmp
data16
hlt
lret
addr16
int
dec
aas
cmp
orl
mov
je
outsl
pop
aas
mulb
jb
push
into
sarl
lea
je
stos
sub
xchg
jecxz
jnp
pop
aas
ret
stos
mov
xor
test
or
scas
mov
cmp
aas
cmpsl
push
dec
mov
pop
inc
and
ja
imul
inc
pop
aas
into
xchg
xchg
mov
xor
lret
xor
push
rcr
xchg
insb
mov
lcall
shll
cmp
pop
pop
xor
dec
jmp
test
call
std
and
fs
ljmp
cli
jno
lods
lods
and
shll
jne
mov
decl
lcall
pop
insb
loope
sarl
js
jno
dec
movsb
pop
icebp
jns
loopne
or
sub
xor
aad
xchg
ja
push
sarl
outsb
cmpsl
out
out
enter
lcall
sti
cmpsb
cltd
dec
inc
mov
jge
xor
pop
jmp
clc
sub
cli
mov
xor
or
or
pushl
ss
sti
ljmp
lds
mov
inc
ret
cmp
mov
add
xor
sbbb
loope
les
pushf
jecxz
lret
mov
jg
jl
andb
inc
pop
fists
push
insb
xor
xchg
cmc
std
ljmp
xchg
out
push
je
or
or
cld
cmp
dec
inc
insb
sub
push
ljmp
popa
pop
jmp
jns
sub
xchg
rolb
jg
addb
add
jae
inc
ljmp
aam
test
mov
fsts
mov
jg
push
cmp
pop
sar
mov
lods
test
dec
imul
mov
push
cmpsl
dec
mov
lcall
adc
lahf
or
std
cli
lahf
adc
imulb
cmpxchg
dec
call
pop
gs
cltd
insb
imull
shll
nop
icebp
pop
xor
mov
subb
out
filds
std
int3
push
jnp
jb
into
mov
dec
mov
fstl
sahf
mov
mov
sahf
clc
stos
dec
stos
nop
sub
mov
mov
or
test
inc
stc
pop
pop
and
push
and
sarl
nop
movsb
clc
decl
stos
clc
pop
mov
adc
ret
or
fcoms
in
push
mov
sub
incl
or
cmp
mov
shr
mov
and
lcall
sub
xchg
shll
ljmp
adc
stos
xchg
pop
and
jmp
test
ja
add
jbe
cmp
es
mov
jae
mov
es
mov
mov
icebp
inc
mov
sbb
xchg
push
sub
call
cmpl
pop
ljmp
shl
lock
adc
xchg
fcmovnu
lods
mov
or
mov
mov
fcomip
xchg
cli
aam
xchg
mov
ss
add
ljmp
adc
sub
mov
cmpsl
mov
fisttpll
addr16
test
lock
and
stc
cmp
pop
sbb
in
pushf
add
or
loope
gs
pop
or
mov
jg
push
mov
cmp
std
mov
xchg
pop
sbb
xor
push
and
loop
push
popa
jb
clc
sarl
sub
imul
ds
lods
sbb
xor
mov
ret
mov
add
mov
jne
mov
imul
dec
jmp
add
incl
daa
jge
test
fidivrs
add
fidivs
add
mov
and
fcomip
decl
dec
ss
sub
cmp
ja
jmp
add
lret
add
out
xchg
push
in
and
or
ja
enter
jle
scas
fcomip
adc
stos
and
jmp
mov
add
repnz
pushl
fs
jo
lods
sub
fwait
mov
push
jle
mov
jbe
pop
lods
xor
pop
ljmp
jnp
lret
pop
pushf
cmpsb
push
jb
xchg
lea
dec
into
and
and
incl
imul
arpl
cmp
push
ds
cmpl
repnz
stc
fwait
mov
outsl
dec
fwait
dec
popf
jae
ljmp
push
loope
jo
add
adc
addr16
leave
loope
lcall
jg
mov
mov
movsl
mov
fsubs
xor
fchs
cmpl
adc
aas
cmp
sub
jbe
push
mov
clc
mov
mov
cmc
adc
xchg
sub
sub
jbe
adc
ja
decl
fistps
pop
lret
mov
jns
mov
mov
mov
jae
pushl
xor
pop
arpl
xchg
cmp
inc
ret
into
push
mov
pop
xlat
add
sbb
call
out
in
cmp
dec
orb
mov
insb
or
shll
mov
inc
xchg
fcomip
push
aas
ljmp
pop
pushf
nop
and
jno
aaa
outsl
femms
ret
sbb
push
lcall
inc
xorb
sti
je
loopne
mov
jge
adc
int
mov
test
lcall
je
out
shr
lock
and
or
les
inc
adc
jmp
daa
js
push
fcoms
les
popa
jne
movsb
and
sbb
cs
lcall
add
in
lods
pop
pop
mov
aam
cmp
repz
stos
in
lahf
jecxz
lcall
fcomps
push
mov
inc
fdivs
sbb
add
pop
fstps
outsl
arpl
jmp
inc
stos
es
std
loop
ljmp
add
dec
gs
into
sahf
sub
push
jecxz
push
ljmp
mov
cwtl
xchg
and
insb
lock
and
jmp
dec
std
movsb
mov
adc
roll
aaa
mov
mov
ss
or
fldl
dec
scas
aaa
out
pop
lret
hlt
dec
sahf
pop
loop
xor
mov
xchg
shll
emms
lahf
sbbl
mov
jp
fimull
mov
div
pop
mov
xchg
lcall
cmc
mov
adc
and
call
adcb
mov
jge
stos
jnp
pushf
cmp
je
mov
imul
xor
das
jle
mov
cmpsb
test
call
mov
pop
movsl
inc
int3
pop
inc
inc
test
push
pop
sub
pop
mov
aas
sub
decl
into
or
and
lock
cmp
add
fistpl
dec
das
cs
ffreep
adc
shl
cli
aas
aad
mov
mov
fildll
xchg
or
clc
jg
cmp
add
jecxz
fwait
pop
sbb
jle
jl
loopne
fcomip
add
xchg
ficoml
dec
pop
or
dec
sahf
outsl
lcall
jp
out
je
sub
jecxz
inc
inc
or
mov
lret
lret
pop
sub
pushl
imul
mov
jmp
add
jb
ret
shll
lcall
sbb
adc
out
out
push
adc
xor
cmpsb
add
movsl
jmp
clc
aaa
push
pop
adc
cmpsl
mov
aam
inc
push
xchg
sbb
ret
pushf
iret
add
jp,pt
mov
mov
es
call
add
je
aam
sahf
pop
pop
add
iret
push
pop
fstpt
sti
aas
leave
dec
pop
xchg
shl
jge
dec
ja
dec
add
cmp
daa
pop
movsb
add
push
jg
ja
cmpsl
jg
mov
cmp
rol
fiaddl
cmp
lret
xor
call
pop
popf
inc
lock
mov
dec
std
mov
dec
or
mov
gs
pop
adc
cmp
fdivrp
pushl
ja
test
imul
dec
nop
and
ss
mov
gs
or
pushl
in
pop
pop
add
movsb
and
xlat
mov
ficomps
int
sbb
cmp
incl
push
xchg
out
xchg
jg
dec
dec
ret
fcomps
inc
sbb
lahf
and
stos
imul
ja
sub
cmp
mov
and
push
out
arpl
imul
call
es
dec
in
cld
jmp
sub
gs
and
repz
inc
and
pop
sub
mov
or
jp
insl
mov
mov
pop
jae
movsl
inc
icebp
sbb
fdivrp
out
jbe
test
negb
fimull
cs
push
int
sub
xchg
sbb
int
ficoms
cmp
lret
dec
ret
push
pusha
push
int
loop
jge
sarl
sahf
scas
ds
out
mov
addr16
pop
cmc
incl
aad
sbb
js
scas
mov
inc
insb
mov
sub
lcall
jecxz
add
xor
sbb
and
out
lods
mov
ja
lcall
aad
cmpsl
sub
nop
out
push
loope
inc
inc
addr16
js
mov
cmp
dec
lcall
mov
inc
mov
das
jg
mov
adc
jl
test
pushf
mov
push
nop
sti
fmull
adc
xor
in
in
xor
cmp
sub
pop
dec
std
shll
jg
mov
pop
cmpsb
ret
out
in
mov
cmpsb
adc
dec
dec
mov
shlb
pusha
pushl
rorl
test
int
je
add
mov
sbb
stc
test
lcall
push
pop
insl
push
xor
loopne
sbb
adcl
sub
jg
xchg
sub
xchg
out
jg
fidivl
pop
cli
fbstp
lcall
mov
ja
fisubrs
lcall
xor
and
jle
cmc
fisubrs
idivl
sbb
js
outsb
addb
cmc
pop
decl
pushf
push
out
rolb
lea
cld
repnz
mov
sub
es
xchg
cmp
loopne
jb
fidivl
test
in
call
ljmp
mov
jmp
les
xor
fs
mov
jge
mov
call
inc
push
aaa
js
stc
fwait
dec
xchg
dec
jbe
test
loop
xor
aad
jecxz
xchg
loopne
mov
fstl
jmp
call
adc
ja
arpl
fbstp
mov
add
ljmp
clc
sub
dec
inc
cmp
dec
clc
and
jmp
cmc
inc
jbe
xchg
pushf
dec
dec
lret
sbb
push
cmp
mov
push
dec
test
in
ficoml
in
xchg
jb
in
mov
incl
mov
inc
ret
mov
cld
xor
fwait
fwait
minps
sbb
frstor
sti
fiaddl
mov
lret
lods
xchg
stc
mov
sub
mov
sub
xlat
clc
sahf
dec
jno
pop
pop
aaa
mov
jg
popf
in
repz
daa
pushl
adcb
inc
jp
pop
lock
shlb
cmpsl
addr16
cwtl
cmpsl
mov
pop
dec
cld
decl
xchg
adc
stos
bound
push
call
repz
push
sbb
daa
cmpsl
ficompl
mov
insb
hlt
pop
push
test
clc
movsb
insl
mov
mov
loopne
lods
movsl
je
xor
pop
cmc
inc
aaa
cld
decl
adc
push
mov
jo
and
cmp
add
ja
add
jg
cmp
pop
shll
inc
cmp
js
in
xor
push
dec
out
push
add
insl
lcall
sti
insb
add
cmp
nop
xor
inc
jne
pop
dec
call
jmp
imul
cld
ljmp
mov
cltd
jno
lret
mov
loope
pop
popa
jecxz
xor
pop
aam
out
test
shll
mov
xlat
jge
push
sub
or
int
stos
cs
punpckhdq
adc
icebp
jns
std
decl
nop
cli
cmp
jne
in
in
mov
bswap
mov
pop
call
sbb
dec
stos
movsb
dec
hlt
mov
imul
pushf
mov
aad
add
inc
cmp
pop
loope
es
cmp
lret
jmp
lret
shrb
jo
and
lcall
jb
mov
addr16
rorb
dec
lret
test
adc
mov
lcall
std
jp
mov
stos
and
out
push
xor
decl
jb
scas
cmp
cmp
cmp
adc
ljmp
xor
sbb
aam
push
in
pusha
mov
cmp
gs
push
dec
repnz
imul
out
push
mov
aaa
std
incl
jg
mov
inc
je
hlt
jne
in
insb
hlt
cmc
mov
lret
call
mov
mov
std
jns
mov
das
iret
or
jmp
repz
cmp
lcall
fnstenv
xchg
incl
sub
xchg
mov
and
cmp
mov
in
mov
pop
je
lods
inc
mov
pop
sbb
clc
adc
mov
je
lcall
roll
test
inc
ds
jmp
shl
inc
stos
cmp
inc
xor
or
repnz
in
inc
mov
shlb
jmp
icebp
into
add
or
lret
int3
sub
add
sub
mov
jnp
xchg
pushf
arpl
call
add
mov
cmp
push
insb
jb
ljmp
mov
inc
cs
cmc
adc
sbb
or
mov
movsb
fdivl
data16
cmp
clc
ljmp
ret
cmpsb
ja
mov
cmpsl
cmp
inc
inc
scas
jbe,pt
xchg
insl
test
jae
xlat
sub
and
jae
int
push
xchg
jecxz
pushl
inc
arpl
push
int3
jmp
push
lret
add
mov
out
xchg
sub
and
cmp
jmp
and
leave
stc
dec
les
mov
inc
out
jg
sub
out
movsl
call
and
in
mov
outsb
inc
xchg
xchg
mov
mov
mov
shr
pop
in
unpcklps
add
pushl
and
pushf
mov
aad
shlb
push
jl
popa
jb
push
xor
into
mov
jmp
xchg
cmp
pop
add
jno
aam
test
rcrb
jmp
call
jecxz
out
pop
inc
xor
push
and
addb
sarb
jne
add
jp
cmp
jg
xorb
inc
lcall
arpl
mov
inc
push
jbe
call
xchg
pop
filds
scas
cmp
xchg
sbb
in
test
test
gs
cmp
cmc
clc
pop
mov
outsb
add
aam
ja
inc
push
jnp
xchg
cld
ljmp
pop
push
ret
popa
rcl
jo
aaa
add
jno
cs
call
cli
dec
sti
push
mov
bound
cmpsl
out
xlat
jl
or
jbe
mov
xchg
js
push
fistpll
mov
sbb
xchg
sbb
push
and
mov
cli
je
ljmp
cmc
dec
fwait
adc
lahf
mov
push
xchg
or
sahf
cmp
mov
jle
mov
mov
notl
mov
pusha
and
decl
addr16
adc
jmp
jae
mov
arpl
jmp
mov
add
dec
mov
pushl
stc
popf
xchg
mov
and
sub
into
sub
data16
out
test
movsb
decl
int3
ljmp
insb
fmuls
jb
test
push
enter
addl
shrl
iret
mov
imul
inc
movntq
lcall
stos
sahf
xor
fs
dec
repz
movsb
mov
outsb
jg
jae,pn
clc
lock
je
int
jmp
xor
or
fldt
jns
pop
cmpl
jge
sub
cmp
push
mov
incl
sbb
adc
adc
jae
mov
ss
icebp
push
add
push
pop
sub
inc
inc
jne
push
jne
addl
mov
xlat
inc
dec
push
shrb
leave
call
cmpsb
xchg
push
decl
add
mov
cmp
mov
add
cmp
or
pop
ret
incl
xchg
jle
clc
sbb
cmpsl
shlb
loope
insl
push
mov
jmp
mov
hlt
adc
jmp
inc
dec
lcall
mov
mov
xchg
xchg
mov
add
sub
pop
sub
inc
and
adc
stos
je,pn
aas
bound
pop
jp
daa
dec
mov
or
and
dec
dec
insl
ljmp
jo
lock
push
jns
push
test
add
jmp
dec
movb
xchg
aas
movsb
inc
js
sbb
sub
dec
jns
cmp
outsl
sub
sti
ljmp
push
fsubp
loope
fcoml
call
xor
fisttps
fld
shlb
sbb
or
or
xor
inc
ficomps
repz
decl
jecxz
or
xchg
clc
lahf
mov
std
fcmovb
xchg
lods
mov
out
addl
lock
push
mov
out
xchg
pop
and
jg
jb
ss
int
xchg
ljmp
jmp
in
or
jae
arpl
cmp
ljmp
clc
int
add
sahf
lret
shll
mov
lret
das
pop
cltd
sbb
xchg
cmp
fcoml
mov
sbb
lcall
enter
cmpsb
jp
inc
push
loop
test
iret
pop
jl
sub
lcall
fisttpll
and
xor
stos
and
xlat
cli
mulb
clc
decl
lods
lret
jbe
test
loopne
push
sub
lcall
and
mov
mov
dec
jbe
insb
idiv
push
pop
sbbl
fldcw
sub
fisubs
jmp
cmp
int3
mov
xor
push
ljmp
fisttps
rcl
sub
dec
je
mov
xor
js
decb
mov
rol
ljmp
xor
push
mov
push
call
subb
dec
fcomip
sub
mov
rclb
test
ret
popa
lahf
inc
push
cmpsl
in
jne
push
lahf
cmpsl
sub
push
cmp
mov
mov
add
lods
adc
stos
and
jbe
lock
ljmp
cmpsb
inc
push
mov
test
jg
mov
pop
leave
bound
jo
add
lcall
push
sub
xor
xbegin
fists
dec
dec
insb
call
jo
xor
add
imul
dec
in
shll
decb
cli
jg
nop
aad
sbb
push
outsb
ficomps
push
xor
movsl
int3
xchg
nop
outsl
xor
hlt
sbb
lcall
fildll
lds
xchg
fbstp
lahf
dec
cwtl
das
push
lds
or
jg
scas
fidivs
jne
push
xchg
dec
push
mov
and
pop
xor
sar
sub
and
adc
pop
ret
push
pop
sbb
mov
add
xchg
data16
pop
cmc
pop
test
jge
call
mov
jbe
fsubp
push
ret
cwtl
std
pusha
cmpsb
scas
enter
incl
or
cmp
out
sbb
push
movsb
jg
mov
lock
push
or
jmp
dec
repz
mov
sahf
pop
insb
sub
loope
mov
cmpsl
push
loop
xor
clc
sti
xchg
mov
cmc
insl
jle
mov
rcr
xor
imul
push
inc
sar
add
add
arpl
mov
mov
arpl
call
or
nop
add
cmpsl
cmpsb
or
fcom
mov
dec
mov
push
mov
pop
pop
iret
mov
insb
sbb
jecxz
lods
sarb
cmp
inc
push
jmp
int3
mov
push
aad
pop
fsubrs
push
test
jmp
mov
adc
decl
outsl
leave
out
push
pop
pop
cltd
dec
mov
xchg
adc
repnz
mov
pop
dec
and
ffreep
roll
decl
in
mov
lock
adc
xchg
scas
fisubl
sub
xor
cld
fbld
add
in
icebp
sub
cmp
outsl
fldenv
jmp
es
movlhps
decl
cld
call
lods
pop
lret
scas
adc
ljmp
mov
ljmp
mov
jge
sahf
and
pop
ljmp
shrl
dec
or
jmp
cmc
mov
sub
addr16
mov
stc
fistpl
push
mov
mov
fxch
into
mov
ljmp
call
pop
sarb
in
sub
pusha
aad
mov
pusha
lahf
sub
dec
sti
fiaddl
ljmp
repz
jo
mov
pop
stc
pop
in
call
std
jmp
pop
loop
or
cmpsb
bound
test
mov
xchg
enter
adc
shrb
lcall
lock
mov
or
lahf
outsl
push
xlat
pop
test
out
imul
mov
jmp
xor
push
xor
and
add
shlb
cmc
aas
scas
aas
mov
adc
decl
clc
pop
fwait
xor
add
test
cmc
cmp
add
mov
addl
push
fiadds
mov
dec
nop
dec
mov
loope
dec
push
sbb
ja
out
mov
xor
jmp
pop
cli
notl
mov
bnd
inc
push
jl
movsl
push
sub
insl
ja
mov
out
jnp
ljmp
mov
cli
fwait
mov
shll
ljmp
incl
jp
pop
push
clc
or
outsl
mov
pop
cmp
cmp
mov
sbb
mulb
pop
push
cltd
and
jg
fcmove
cli
cld
dec
iret
mov
jno
jno
sub
push
xor
inc
test
icebp
sub
adc
outsl
sbb
outsb
lcall
clc
imul
adc
mov
test
mov
inc
stc
mov
cli
cmp
es
and
adc
inc
lods
notb
pop
daa
test
cmp
sar
fcomip
dec
pop
ret
out
lcall
addb
sbb
add
jg
hlt
xchg
pop
adc
adc
les
je
or
mov
test
mov
dec
add
or
cmp
mov
addr16
jmp
imul
xor
bound
inc
mov
outsl
dec
es
lods
mov
or
scas
dec
mov
cmp
add
or
mov
lods
mov
inc
fsubrs
inc
decl
jle
xor
ret
jmp
mov
sbb
xor
loopne
cld
incl
inc
cltd
and
lea
push
sbb
inc
outsl
jo
xchg
cmp
call
adc
sahf
cld
sub
punpcklwd
jbe
bound
mov
pushl
sub
and
out
push
in
jbe
jp
push
roll
cltd
add
mov
jo
jle
mov
lahf
decl
testl
cmp
xor
sbb
ljmp
out
ret
ljmp
lea
loopne
pop
ja
test
push
loope
aaa
mov
lcall
int
bnd
mov
cwtl
dec
ja
test
faddl
incl
loop
mov
mov
fisttpl
xor
inc
lahf
je
out
stos
xchg
mov
fildll
notl
ljmp
lcall
scas
mov
ret
mov
in
outsb
dec
paddb
lcall
lcall
repnz
call
mov
lcall
jg
add
stc
repnz
ja
cmp
in
call
ljmp
test
mov
jmp
repz
clc
sbbb
mov
jne
mov
push
rolb
push
decb
push
adcb
dec
push
loope
ljmp
int3
push
fstps
mov
daa
loop
mov
pushl
and
push
lret
aam
mov
sub
in
sahf
xor
jmp
jl
mov
mov
ficomps
ja
insl
xor
pop
ja
je
icebp
xor
push
decl
mov
lds
rcrb
rcrb
push
gs
cli
sbb
dec
sbb
jecxz
cwtl
data16
push
out
add
inc
dec
nop
adcb
in
cmp
lds
pop
insl
fld
in
pop
push
and
out
in
mov
mov
pop
repnz
test
push
inc
std
lcall
fisubrl
outsb
xchg
cmpsw
lock
xor
fwait
or
and
pushf
and
add
and
dec
jnp
in
inc
inc
mov
xlat
int
jne
addl
push
fcmovbe
dec
test
xchg
popl
jp
fcomip
inc
in
push
adc
sbb
mov
aad
in
bound
jl
push
hlt
call
shlb
daa
stos
cmp
popf
pop
xchg
xchg
in
push
and
push
fbld
jb
mov
mov
inc
jle
dec
out
adc
ret
dec
lret
lcall
lcall
add
ds
scas
cld
stos
hlt
sbb
imul
dec
xor
inc
mov
mov
xchg
sti
dec
mov
add
mov
incl
jno
jo
test
daa
xor
in
test
std
jg
in
push
stc
nop
test
xchg
adc
push
lods
adc
negl
scas
decl
mov
pusha
fbstp
movsb
xchg
shr
test
sahf
mov
into
call
loopne
or
adc
adc
lods
or
add
push
jle
lcall
push
rcl
xor
jmp
add
or
loopne
rclb
repnz
mov
decl
adc
int3
cltd
fsubs
arpl
outsl
cmpsb
and
jmp
jl
adc
cld
enter
jae
or
sub
sahf
arpl
mov
add
cmp
loop
rorl
outsb
les
dec
mov
mov
call
xchg
dec
mov
jle
cmpsl
loope
adcl
scas
pop
repz
pusha
cli
mov
jmp
ljmp
enter
out
mov
rolb
movsb
or
mov
mov
inc
jmp
pop
push
movsl
add
dec
aas
lods
cmp
and
outsb
repz
mov
inc
jns
decl
sbb
loopne
stos
sbb
je
pusha
imul
mov
jl
jg
hlt
fsubl
xchg
inc
bswap
pop
mov
add
jp
out
ficompl
lcall
aaa
stos
pop
rorb
out
and
mov
js
movsl
inc
xor
imul
dec
mov
aas
xorl
std
cwtl
aas
fwait
lock
into
cld
inc
lea
lea
pusha
into
adc
dec
add
and
and
mov
leave
dec
loope
fidivrl
fnstcw
leave
cwtl
sub
mov
mov
inc
and
sti
push
pop
push
jg
jmp
adc
xchg
jo
mov
roll
push
dec
xchg
sub
jbe
mov
pop
mov
mov
xchg
lock
shrl
pop
sbb
das
aaa
icebp
sbb
popa
stos
mov
jge
ljmp
out
and
lahf
cmp
pop
push
push
cmpsl
dec
mov
lea
mov
push
mov
lods
addr16
das
jp
out
pusha
sbb
fstpt
push
pop
pop
mov
lock
bound
sub
repz
int3
mov
insb
jge
or
ss
cmp
and
jnp
jno
scas
jge
insb
push
stos
or
xor
sbb
incl
xlat
cli
ror
dec
aas
arpl
sub
jl
pop
mov
scas
dec
iret
xor
mov
cmpsb
test
jns
leave
mov
jmp
es
inc
dec
cmp
lock
jns
cli
adc
add
adc
pushf
add
push
push
lcall
push
into
mov
add
xchg
aas
inc
push
and
and
rsqrtps
repz
adc
incl
dec
and
pop
cwtl
mov
mov
lds
imul
xchg
ss
lcall
jle
repz
cmpsl
jl
arpl
dec
in
call
pop
test
mov
mov
cmc
pop
jmp
jno
rclb
jle
jp
pop
into
cmp
mov
xor
pushf
xchg
mov
pop
cmp
inc
test
dec
incl
imul
outsl
xchg
sahf
call
dec
push
loopne
and
mov
mov
pop
sub
jecxz
aaa
lea
push
ret
pop
jbe
in
lds
sbb
lcall
dec
adc
test
pavgb
data16
shlb
sub
mov
cmp
sti
jb
mov
jno
sbb
hlt
cmpsl
fcomps
add
mov
xorl
mov
rolb
add
imul
roll
push
mov
fwait
xchg
sar
push
mov
hlt
and
mov
or
ret
pop
and
or
stos
jg
dec
addr16
nop
inc
mov
lds
lock
push
lret
hlt
mov
es
add
mov
mov
mov
outsl
out
in
outsl
loope
xchg
inc
imul
incl
icebp
add
dec
outsb
daa
insl
arpl
pop
enter
cmp
js
mov
jg
decl
xor
sub
insb
stc
add
pop
mov
fcomip
notl
jmp
aam
andl
rcrb
out
and
adc
sarl
pushl
test
xchg
movsl
stc
dec
rolb
mov
test
fstpl
call
mov
mov
insb
or
mov
cmp
sub
aad
mov
cmc
inc
sbb
jmp
mov
jl
xchg
xchg
dec
test
adc
jecxz
orl
insl
push
icebp
pop
cld
adc
or
imul
push
repnz
fbld
in
sbb
jmp
rolb
int
inc
mov
movsb
ret
inc
outsl
rclb
hlt
scas
je
jg
adc
sbb
or
push
mov
sbb
dec
or
sbb
fidivrs
lcall
loopne
mov
and
inc
add
add
mov
push
inc
js
int3
lock
pusha
xor
dec
add
call
dec
lcall
insl
fisttpl
cmc
mov
push
push
jmp
lcall
push
in
hlt
fwait
and
sar
jmp
ljmp
mov
push
cmp
in
in
push
cld
call
fbstp
mov
mov
add
push
call
push
lret
jb
in
icebp
jae
mov
xor
iret
jecxz
dec
stos
add
jmp
and
sub
adc
mov
mov
in
cld
add
push
ss
loopne
jg
mov
loop
xchg
movsb
add
dec
icebp
call
push
cmc
xor
cli
pop
lods
push
mov
push
dec
add
jmp
pusha
lods
inc
lret
sbb
sub
mov
adc
enter
pushf
test
or
mov
rorb
loopne
incl
in
int3
pop
jle
pop
or
pop
xchg
pop
jge
es
jbe
jb
popf
ss
incl
mov
jl
and
jmp
mov
ja
pop
ljmp
sbb
jl
jl
lods
and
xchg
lods
out
sub
pushl
movsb
sarb
xchg
xor
push
popa
pop
dec
cltd
loopne
shll
sbb
jmp
call
pop
lods
inc
sbb
dec
jns
add
imul
adc
dec
push
popa
xchg
mov
or
or
ja
pop
mov
mov
out
nop
loope
mov
push
push
add
fcomip
sti
pusha
cmc
scas
shrb
jnp
mov
insb
lea
jb
clc
adc
or
cmp
xchg
or
mov
xor
stc
push
mov
jg
and
adc
pusha
out
cltd
mov
mov
enter
xor
adc
jmp
push
pop
nop
xchg
int
lds
inc
ret
arpl
in
push
inc
or
cmpsb
add
sti
in
in
fiaddl
mov
sub
xchg
xchg
out
sub
adcl
icebp
out
mov
das
rclb
nop
adc
scas
xchg
lret
mov
xchg
inc
cmp
incl
cld
jmp
inc
stc
call
call
xchg
aaa
das
jl
jg
lods
decl
repz
sbb
inc
sbb
fcomip
inc
push
xor
add
test
mov
leave
out
xor
cmp
ds
sbb
adc
jp
pop
fs
inc
or
add
lcall
scas
xchg
xchg
cmp
ret
rcrl
mov
cmp
dec
lret
rol
xchg
lahf
and
push
lcall
call
int
sub
out
pop
xchg
insl
sub
jle
or
arpl
cli
lods
jge
jnp
xor
sahf
mov
jo
sar
cli
pop
or
sub
sbb
fwait
sarb
mov
dec
mov
incl
jp
xchg
out
stos
fsubrs
inc
and
mov
lock
mov
inc
push
cmpsb
lock
das
aam
clc
jmp
pushl
dec
lods
mov
sahf
pop
mov
das
aas
xchg
sbb
mov
push
subb
fcmovu
incl
test
xchg
push
pushf
adc
add
cmp
push
sbb
ljmp
jmp
push
ret
xchg
out
adcb
pop
pop
xor
into
inc
in
xchg
mov
push
sbb
mov
test
jmp
xchg
push
mov
lcall
inc
sbb
push
imul
call
push
test
out
test
loopne
loopne
movsl
cmp
testl
inc
lcall
cmp
in
inc
xor
loop
out
aas
repz
daa
push
les
dec
xchg
lret
pushl
dec
mov
pop
adc
sub
dec
push
cwtl
aas
mov
leave
lods
aam
gs
lea
jg
and
jb
incl
in
jns
xorl
popf
dec
movsl
loope
inc
xor
outsb
cld
mov
cmp
hlt
xor
imul
jg
push
inc
sub
pop
rclb
out
cltd
aam
insl
lret
push
jmp
ss
mov
daa
mov
adc
cmp
and
std
call
pop
iret
and
pop
test
cmp
or
mov
movl
lcall
cs
xchg
andb
mov
lcall
dec
or
ja
adc
sahf
jmp
fnsave
addl
push
int3
mov
and
idivb
daa
ljmp
push
pop
imul
call
andl
leave
jbe
pop
sbb
call
jno
and
pop
mov
cwtl
sub
incl
lret
xor
in
jl
pop
xor
add
adc
sbb
outsl
adc
mov
pop
jbe
subl
xchg
sub
xor
pushl
mov
or
mov
rol
sbb
jne
popf
push
inc
call
enter
dec
push
push
pop
pop
lods
cmpsl
fs
pusha
sahf
sub
idiv
inc
push
lods
push
jg
incl
or
js
lds
pop
into
out
je
jb
mov
xchg
inc
xor
add
jmp
in
xchg
sbb
stos
fst
jge
mov
lahf
adc
fcomip
cmp
dec
in
out
aad
xchg
pop
and
add
jge
repz
lods
pop
jo
pop
push
clc
push
cli
jbe
lret
icebp
pop
mov
mov
out
out
cmpsl
cld
push
xchg
adc
out
fnstcw
dec
or
pop
imul
lret
jmp
call
pop
mov
dec
mov
lods
out
arpl
int3
add
ret
cmp
pop
xorb
stos
test
fldz
or
mov
jne
ror
lret
enter
xchg
dec
in
cli
mov
cwtl
push
fmuls
and
or
fcmovu
out
adc
fsubl
jmp
jp
xchg
decl
or
loopne
rclb
xor
xchg
push
jnp
in
or
rcrl
incb
mov
jmp
sbb
and
pop
sahf
sub
push
call
cltd
xchg
sbb
mov
int
inc
daa
xchg
mov
cmc
aaa
sub
or
push
push
aam
xor
pop
xor
add
xchg
imul
mov
dec
xor
stos
sub
incl
dec
in
addl
sbb
adc
jae
cld
xchg
add
jmp
movsb
shr
rolb
cmc
orl
aaa
adc
adc
jmp
adc
adc
data16
pop
repnz
mov
lcall
fisubrs
jae
push
out
jge
inc
dec
inc
in
hlt
xchg
fistl
push
mov
xor
scas
sub
repz
cmpsl
daa
aas
test
call
cld
inc
out
bnd
lods
mov
incl
jp
movsb
aas
cmpsb
imul
sarb
jle
inc
cltd
ds
cmp
ljmp
js
add
inc
push
out
push
incl
shlb
and
mov
inc
ljmp
push
cltd
enter
lss
fnsave
xchg
out
and
add
or
adc
mulps
std
cmp
and
enter
or
out
jge
movl
cmpsl
push
fcom
loope
aaa
or
repnz
inc
sahf
and
sub
inc
mov
loopne
cmc
aad
xchg
lret
xchg
fs
ljmp
mov
int
mov
sahf
push
mov
lea
mov
decl
push
jecxz
in
popa
xchg
mov
mov
cmp
push
in
push
mov
jg
std
mov
add
cwtl
adc
push
outsb
push
lcall
sbb
pushl
jne
fdiv
lea
mov
cmp
or
jne
xchg
popf
popl
push
rorl
and
mov
shrb
xor
push
loop
decl
push
pop
pop
sbb
sbb
jae
xor
ljmp
outsl
pop
cmpsl
insb
sbb
sarb
test
shll
in
sbb
pushl
jge
jns
mov
mov
ss
mov
cmp
xor
jmp
inc
cmp
xchg
jns
repnz
jb
add
mov
sub
mov
sub
pop
sbb
js
mov
int3
loope
jno
iret
jae
fsubrl
push
xchg
xlat
jp
xchg
mov
lock
lcall
pop
mov
in
sahf
out
lds
jb
push
xchg
inc
test
adc
cmp
push
repz
call
dec
fdivs
xchg
sbb
in
push
in
scas
repz
shlb
sub
mov
mov
roll
jmp
orl
aas
mov
in
dec
jns
data16
clc
pop
xchg
cmpsb
lea
cld
insb
jnp
movsb
sti
jp
adc
or
pop
xchg
test
mov
cmp
push
fstpl
into
and
call
push
jne
in
pop
jle
hlt
mov
xor
sbb
and
sub
push
enter
jb
sub
scas
adc
popf
je
xchg
push
shlb
jmp
jmp
push
ret
nop
push
in
loopne
fiadds
inc
and
lock
movsl
in
jne
mov
sbb
test
pop
inc
repnz
std
decl
mov
ret
into
rolb
mov
add
decl
addb
int3
or
sub
mov
xchg
cmpsb
filds
cld
ljmp
int3
in
pop
pusha
test
or
ret
push
loopne
in
mov
fwait
rolb
loop
lods
jle
add
cmpsb
imul
lahf
in
icebp
call
stos
call
divl
out
gs
int3
mov
lea
jbe
jae
in
mov
cmc
adc
jmp
jne
fnstcw
cmp
xlat
push
adc
mov
adc
push
add
cmp
bound
and
lods
lods
and
sub
inc
dec
push
jns
fcomip
add
jae
inc
sti
aaa
outsb
xor
mov
int
mov
push
and
ljmp
dec
add
adc
sti
pop
push
or
adc
imul
cmp
in
pop
push
iret
sar
mov
jp
icebp
fstp
mov
loopne
insl
inc
pop
fwait
mov
nop
icebp
lcall
dec
addb
add
inc
gs
mov
hlt
xchg
push
mov
js
rcrl
loopne
daa
ja
lcall
mov
pushf
addl
dec
or
cmp
cmp
pushl
adcb
dec
scas
ljmp
dec
repz
ljmp
xchg
fwait
lcall
test
adc
mov
cwtl
js
leave
leave
dec
sub
xor
pop
ljmp
test
lcall
and
jns
adc
and
aaa
in
lods
shrl
sbb
sub
adc
rolb
dec
jecxz
andb
or
out
xor
ret
cmp
ljmp
fimull
movsb
cld
xchg
xor
sub
movsl
sbb
push
sahf
test
dec
in
ljmp
xchg
or
test
xor
mov
into
mov
dec
inc
cmc
call
pop
dec
das
pop
js
into
mov
xchg
popa
jge
push
and
inc
iret
cmc
cmpsb
cmpsb
pop
mov
filds
and
popf
add
andb
push
mov
repnz
mov
xchg
mov
aam
stos
mov
cmpl
adc
pop
lret
cwtl
add
mov
cmc
xchg
pushf
jns
push
bound
int
mov
lcall
dec
fldl2t
jo
mov
jge
xlat
or
in
in
pop
call
decl
jae,pn
bts
inc
lcall
adc
xchg
lods
lock
jg
clc
fldt
test
test
fmull
cld
popf
fnstsw
lea
shl
cmp
rcr
dec
loope
in
sarb
sbb
dec
ds
addr16
pop
lcall
mov
loop
loop
dec
and
push
imul
test
imul
push
mov
dec
shr
or
push
cmc
add
xchg
sub
mov
add
nop
add
push
mov
add
lcall
adc
cmpsb
andl
xor
decl
pop
xchg
sub
mov
sub
cmc
pop
shrb
xor
sar
push
push
mov
lret
out
das
xor
ret
scas
sbb
cmp
lret
sub
lcall
mov
lds
aad
clc
cmpsl
cmc
xor
xchg
push
xchg
xchg
sbb
repz
mov
sbb
test
nop
lahf
cmp
insl
fnstcw
mov
addb
rcrl
insl
jo
inc
cmp
popa
mov
cmc
jns
jl
xchg
jle
xchg
fimuls
xchg
cmp
or
das
mov
pushl
pop
xlat
jmp
and
orl
mov
pusha
jge
dec
jne
rclb
cmp
add
fcomip
pushl
push
mov
loop
xor
pop
lret
sub
scas
xor
scas
pushl
or
js
inc
cltd
mov
mov
cmp
es
mov
dec
jmp
adc
adc
aad
jmp
fdivrs
sbb
mov
movsb
jp
ljmp
shlb
jecxz
xchg
jp
loope
out
pop
push
aas
mov
and
mov
fnsave
cli
and
test
jl
cmp
or
pop
lret
sarl
fsubrl
mov
sub
call
add
cli
nop
std
ret
xor
aad
mov
cmp
nop
out
pop
neg
mov
fs
andb
test
jg
xchg
adc
test
jecxz
push
notb
add
mov
cmc
aaa
ficomps
rcrb
sarb
fnstenv
xchg
xchg
pop
dec
mov
mov
subb
add
ljmp
lret
das
xchg
repz
jbe
pop
les
jne
iret
fcomps
add
lcall
dec
inc
jge
popf
mov
pushf
lret
pushf
shlb
inc
xor
sbb
pop
aad
push
aaa
fs
dec
push
xchg
mov
nop
pushf
push
jb
and
xor
jle
jmp
adc
mov
mov
mov
cmp
and
cmc
pop
pop
push
mov
in
test
inc
or
sub
cs
jp
add
xchg
jge
cltd
xchg
dec
adc
and
aas
xlat
push
call
sbb
jg
cmp
mov
lret
mov
push
pop
outsb
inc
gs
push
stos
pop
popf
pop
rolb
es
testb
cmp
js
mov
cmpsb
aad
cltd
sbb
aaa
jp
cld
ljmp
and
pop
xchg
mov
or
mov
jb
cwtl
insl
cmp
in
push
jg
and
aad
cmp
call
inc
adc
mov
jo
jmp
out
lahf
sub
mov
inc
call
std
outsl
adc
or
loop
stos
cli
mov
pop
mov
arpl
jle
dec
popa
pop
pop
rclb
cmp
insb
and
aam
das
inc
call
out
lea
xor
inc
jnp
push
pop
dec
push
push
dec
std
outsl
les
adc
call
push
dec
inc
pusha
xchg
cmp
filds
movsb
sar
out
les
leave
mov
push
cmp
call
adc
icebp
insl
inc
lea
rol
inc
std
xorl
mov
and
sti
jg
ljmp
in
sahf
and
ret
push
push
cld
add
aam
lock
mov
jns
jae
dec
inc
mov
sarb
cmpsl
cmp
sub
or
xchg
adc
filds
dec
inc
ficoms
call
inc
mov
hlt
fmul
ljmp
push
aaa
in
fistl
mov
inc
sbb
xor
dec
mov
jns
mov
in
fadd
shll
mov
popa
das
sub
mov
push
pushl
lret
ficoml
pusha
fnstsw
cmp
mov
pop
pop
repz
std
jmp
pop
in
enter
ucomiss
dec
dec
xchg
cmp
idiv
incl
cmp
xlat
jl
mov
xor
mov
or
ret
decl
push
adc
clc
enter
mov
xchg
test
das
jmp
inc
repz
sub
cmp
cmp
mov
fcomps
mov
mov
jp
call
mov
cmp
mov
add
sbb
sub
jb
mov
mov
jmp
icebp
adc
sarb
sahf
dec
mov
mov
int3
in
test
into
mov
aad
out
lea
push
mov
shlb
xor
inc
out
adc
push
add
in
aad
sbb
cs
push
aam
xor
lcall
lods
inc
sbb
repnz
insl
mov
adc
pop
push
add
decl
test
fmul
pop
into
and
mov
jg
and
xor
mov
pop
mov
jno
or
push
cmp
dec
adc
jge
dec
fdivs
ret
add
xor
out
adc
pop
push
inc
cmc
mov
call
jae
sarb
pop
loope
cmp
cmpsl
stos
adc
sahf
inc
adcb
dec
outsl
cli
outsl
pushl
in
in
or
sbb
cwtl
inc
sarl
pop
data16
or
cmp
aas
cmp
pushl
cltd
sti
cs
iret
loope
xor
mov
lcall
mov
in
add
jne
push
adcb
pop
cwtl
mov
pop
mov
dec
mov
jg
ljmp
leave
xor
sub
call
adc
mov
enter
dec
pop
pop
js
pushf
mov
clc
mov
stos
lds
out
sbbl
cltd
push
sbb
pop
sub
add
out
add
jb
pop
lods
inc
adc
mov
mov
dec
outsl
jp
imul
mov
clc
das
cmp
addr16
out
and
dec
andl
push
and
pop
push
mov
add
call
pop
sbb
out
inc
lcall
fidivs
loop
push
fstpl
mov
jge
inc
fwait
fstpt
push
add
call
call
sub
sbb
imul
das
rorl
leave
lods
and
xor
lock
pushl
inc
inc
shll
push
hlt
pushf
out
mov
es
inc
mov
mov
adc
push
ljmp
sbb
dec
lods
add
es
loope
mov
add
mov
jo
pop
jmp
cld
mov
xor
cltd
add
jne
inc
fwait
mov
sbb
stos
adc
sarb
mov
and
sbb
outsl
mov
mov
lret
movsb
mov
jg
popl
and
inc
push
push
arpl
fwait
jmp
lods
lahf
cmpsl
insb
popa
push
mov
push
or
dec
sub
imul
pusha
xchg
jl
sub
iret
pop
test
adc
mov
roll
sahf
in
movsb
psubusw
push
movsb
xchg
daa
mulb
jl
push
jg
or
lcall
and
inc
repnz
addr16
enter
frstor
cmp
add
adc
or
xor
fcomip
add
push
loopne
push
mov
dec
inc
fxch
mov
std
mov
sub
out
ljmp
xchg
iret
xor
inc
cmp
das
imul
add
cmp
push
rcll
push
aaa
daa
xchg
repnz
pop
push
or
cmp
inc
aad
jp
xchg
or
sti
lock
lcall
pushl
adc
fsubl
ret
mov
fdivr
pushl
fsubl
xor
and
sahf
add
shlb
sub
pop
mov
push
cltd
mov
movsl
xchg
fisubrs
jg
fildll
nop
pop
inc
out
cmpsb
mov
or
in
stos
mov
cmp
mov
dec
mov
mov
jns
or
inc
clc
jmp
sub
negl
add
mov
xor
jp
jmp
dec
les
das
cmpsl
pop
and
jecxz
fdivrp
lcall
call
and
shll
mov
lahf
das
ljmp
lods
ss
rcr
mov
cmp
ljmp
aas
out
lahf
mov
call
xor
pop
ja
cmp
fists
jne
addb
jmp
pop
mov
in
loopne
repz
sarb
adc
mov
loopne
push
aad
mov
pushl
sahf
adcl
inc
add
sbb
ret
stc
div
xchg
in
mov
inc
sbb
call
in
std
arpl
push
mov
iret
ss
pop
clc
mov
fnsave
popf
test
jecxz
sub
clc
cmp
lds
insb
ret
add
and
dec
pop
xor
mov
ret
lea
test
pushw
sbb
jg
hlt
mov
test
xor
mov
sub
jmp
pop
pop
mov
sbb
xor
pushl
dec
fldenv
pop
sbb
rorl
sub
jecxz
pushf
ret
enter
out
push
xchg
clc
sub
call
ret
cmp
xor
mov
lcall
add
push
insb
jl
repz
push
ds
mov
lss
popf
push
add
outsb
iret
mov
outsl
push
orb
loop
cwtl
mov
add
stos
push
daa
pop
jg
add
xchg
dec
dec
sti
scas
mov
xchg
into
loope
out
push
ljmp
pop
gs
xchg
sbb
pop
push
fcos
mov
sub
mov
lret
pop
xor
dec
imul
sti
or
fbld
sahf
pop
mov
jg
sbb
push
cmp
xor
movsl
call
pop
add
mov
push
sub
add
lock
jmp
push
push
movsb
mov
lea
adc
mov
jg
jae
pop
outsb
lret
sub
push
push
data16
imul
xor
adc
imul
lcall
xchg
stc
stc
xchg
push
daa
fimuls
mov
mov
cltd
mov
pop
dec
xor
cli
inc
xchg
lretw
mov
adcb
call
add
jg
mov
xchg
loope
arpl
stos
fstpl
sub
jge
add
loop
sbbl
mov
fs
lcall
xor
push
push
push
mov
sub
dec
jle
ret
sar
lcall
adc
mov
pop
lods
sbb
idivl
push
shll
aad
call
sahf
mov
and
xor
js
jg
sub
xor
psrlq
cli
xlat
pop
mov
lods
pop
push
int3
lock
pop
push
jns
lcall
test
push
dec
in
clc
mulb
iret
mov
lret
hlt
out
int
xchg
mov
lcall
push
insl
movsb
imul
outsb
mov
lock
push
repz
adc
jmp
lret
mov
adc
xchg
test
jle
test
test
movsb
sarb
push
mov
sbb
test
push
inc
mov
jmp
es
lcall
gs
and
add
mov
outsb
jge
stc
inc
enter
mov
dec
shll
sbb
mov
sub
xor
mov
mov
inc
xchg
dec
rcll
lods
dec
out
data16
push
and
stos
fs
xor
sar
pop
mov
fisttpll
xchg
add
scas
addb
sub
out
jmp
push
mov
adc
dec
ljmp
mov
jmp
enter
lcall
cmp
xor
int
sub
add
outsl
clc
jg
push
arpl
hlt
jbe
faddl
xchg
adc
push
data16
in
mov
sbb
into
rclb
xchg
sbb
fists
jmp
jns
in
lea
popf
call
and
or
or
pushl
mov
fmuls
aad
xchg
xchg
test
pushl
and
ret
inc
or
inc
pop
xor
rcl
ret
or
roll
add
cmp
jg
lea
mov
arpl
lahf
dec
xchg
mov
inc
push
adc
mov
add
call
inc
sbb
fs
pop
insl
and
cmp
icebp
loopne
sub
stos
mov
orb
stos
int3
pop
das
mov
popa
cmp
pop
inc
inc
imul
jmp
adc
fwait
and
add
std
rcrb
ds
aam
pushl
cld
jb
pusha
xor
cmc
mov
and
stos
and
cmp
xchg
and
jecxz
push
push
rorl
cmp
jne
push
mov
movsl
mulb
xchg
ljmp
mov
jl
in
fs
push
sahf
lahf
mov
sub
xor
cmpl
daa
inc
aas
inc
sbb
fcomi
flds
xchg
imul
ds
aaa
dec
fcmove
adc
loop
lret
aas
add
push
mov
pushl
sahf
xchg
jns
dec
js
movsl
rol
popf
sbb
ss
loopne
sbb
rcrb
adc
movsl
insl
push
mov
or
sbb
jl
jg
call
pusha
push
mov
adc
rorl
imul
cmp
mov
shrb
mov
xor
jmp
xchg
mov
push
js
push
outsb
jmp
and
dec
or
popf
mov
stos
cs
daa
cmp
jl
cs
incl
inc
js
sbb
cmp
std
cmp
repnz
jg
leave
lcall
inc
fs
mov
jnp
ja
xchg
add
outsl
sub
ljmp
ss
lods
xor
nop
cmp
outsb
mov
inc
or
aaa
insl
lods
ds
call
test
sbb
arpl
xlat
out
xor
mov
pop
sbb
call
cli
ljmp
icebp
push
pusha
fld
jl
inc
xor
scas
dec
xchg
add
outsb
aad
decl
icebp
jnp
test
inc
orl
push
imul
inc
inc
negb
add
cmp
pop
xchg
ljmp
pop
icebp
int3
dec
lret
xchg
cmc
out
daa
lahf
cltd
or
lahf
add
sti
or
xchg
decl
inc
cltd
inc
sub
out
sub
in
mov
cmp
add
push
xor
cmp
xchg
sbb
lods
dec
pop
pusha
sub
incl
pop
arpl
mov
loopne
xchg
call
ds
les
insl
add
rcr
jg
lcall
mov
loope
inc
ljmp
iret
les
cmpsb
incl
xchg
mov
insb
fs
sbb
ljmp
push
clc
filds
push
hlt
test
dec
lods
mov
lcall
cmc
sub
lods
mov
sub
xor
ss
xchg
inc
insl
lods
xlat
push
lcall
rorl
pop
mov
flds
ljmp
mov
icebp
incl
flds
addr16
int3
and
test
xor
or
sub
inc
popa
jecxz
cmpsl
lcall
fbld
test
jge
pop
out
inc
ds
cli
out
mov
dec
and
xchg
aas
cld
mov
sbb
std
dec
cmpsb
clc
jbe
imull
imul
out
call
in
lret
ja
aaa
rolb
cltd
xchg
jne
or
sbb
or
call
std
rol
cltd
add
fdivl
ret
notb
iret
jmp
stos
xor
shll
scas
adc
mov
fdivs
std
imul
mov
add
xchg
out
push
xchg
les
jmp
imul
xor
sbb
mov
xor
mov
jmp
sbb
movsb
mov
cld
cmpsb
push
ljmp
call
jbe
mov
or
push
outsl
out
push
popf
xlat
int
in
bound
push
mov
mov
cli
xlat
call
fcoml
mov
mov
pushf
sub
ja
jge
imul
cld
or
mov
sub
cmp
clc
loopne
push
cmc
mov
sbb
stos
fidivs
sub
xor
loop
lock
add
jge
insl
mov
into
out
cmp
inc
or
push
idiv
incl
mov
pushf
movb
scas
out
inc
rolb
mov
shll
xor
xor
insl
adc
pop
adc
mov
out
clc
fildl
icebp
dec
add
outsb
sub
inc
push
cmp
pushl
inc
aas
inc
arpl
popa
pop
aas
xchg
out
mov
scas
xor
xchg
xchg
popa
ljmp
and
pushl
xorl
fs
dec
mov
lahf
xchg
js
in
jmp
fstps
xlat
mov
sahf
xchg
test
mov
pop
pop
cld
lea
scas
ret
push
movsb
xorb
push
pop
lods
inc
fistl
icebp
cmp
and
xor
nop
sub
sub
mov
and
cld
cmp
add
test
fldt
mov
js
jae
stc
call
mov
mov
add
insb
imul
sar
ret
ja
and
fwait
jno
cpuid
enter
xor
ljmp
jge
cli
xchg
bound
repz
push
loope
jg
pop
cmp
call
rcll
jg
dec
push
fwait
jmp
jecxz
iret
outsl
out
outsl
repnz
jae,pt
pop
int
xor
mov
gs
pushl
data16
mov
cmc
cmp
les
sub
pop
pushf
jno
jle
mov
sub
pop
push
add
sbb
push
incl
jl
pop
ja
or
dec
bnd
ja
in
xchg
add
mov
std
ljmp
shrl
xlat
sahf
jmp
insb
pushf
jo
dec
fwait
data16
mov
dec
lods
ljmp
pmulhuw
inc
or
imul
inc
jmp
cld
mov
jne
shr
call
cmc
jno
stos
arpl
jmp
rcrl
dec
in
lret
xor
gs
pop
clc
push
and
mov
jp
dec
xchg
sbb
mov
fwait
add
add
ljmp
inc
push
inc
sahf
pop
outsb
cmpl
pop
ljmp
in
push
adc
lcall
mov
sbb
push
stos
cs
mov
push
inc
add
rclb
dec
dec
jg
sarl
mov
push
push
xor
mov
sbb
je
jmp
jno
ret
shrl
push
ds
aaa
jae
cld
mov
test
call
mov
dec
sub
sbb
cmp
jae
loop
js
in
cwtl
sbb
adc
cmp
mov
dec
ja
pop
pop
je
in
jnp
testl
pushl
jmp
imul
test
loope
jo
xorl
into
jbe
cwtl
adcb
ljmp
cwtl
fcmovne
js
jl
pop
pop
mov
adcb
ds
gs
dec
nop
daa
lods
sbb
jb
movsl
and
insl
nop
mov
sti
call
mov
movsb
pop
movsl
bound
ret
mov
outsl
and
aas
mov
jg
decb
iret
rcrl
ret
mov
mov
inc
int
popf
inc
daa
jmp
jmp
in
std
cmp
push
pop
sub
pop
cwtl
adc
and
out
fiaddl
pop
mov
popf
mov
sti
mov
mov
sbb
mov
out
xor
xor
aam
ror
cmp
add
mov
iret
sub
popa
mov
jmp
test
mov
inc
loope
decl
xchg
and
rcrb
scas
mov
dec
addb
inc
add
mov
pop
cmc
ljmp
push
jbe
lahf
xchg
repz
fisubrs
cmp
xchg
jg
dec
icebp
insb
imul
cmpsb
pop
sbbb
negb
cmpsl
clc
iret
pop
and
roll
into
icebp
incl
pop
push
push
cmp
inc
adc
xchg
or
fistpll
fisttps
sahf
icebp
adc
push
sub
inc
or
pop
pop
inc
sbb
jmp
inc
popa
sbb
incl
push
xchg
dec
and
dec
jbe
jno
aad
popa
mov
clc
mov
or
ljmp
lret
jecxz
ds
pop
stos
fadds
popa
fisubl
in
icebp
jge
outsl
cli
ljmp
data16
cwtl
push
fildll
loopne
jg
movsl
mov
mov
and
pop
aas
data16
xor
decl
stc
pop
insl
enter
ss
dec
dec
shr
fstpt
jle
mov
je
xor
int
dec
push
inc
fwait
xchg
jl
ljmp
rcrb
pushl
mov
inc
sti
xor
cmp
movsb
shrb
mov
jp
cltd
dec
mov
pushl
mov
in
push
in
testl
ret
lock
inc
adc
movsl
mov
dec
dec
jae
cmpl
arpl
xor
mov
ljmp
movsl
lcall
sahf
cmp
adc
jmp
pop
je
pop
and
imul
sbb
inc
mov
xor
ljmp
lea
lcall
ret
and
push
leave
xchg
xchg
hlt
add
lret
stos
cmp
xchg
xchg
insl
rcrl
inc
mov
gs
hlt
push
inc
adc
mov
add
mov
dec
push
mov
pushl
cmp
filds
sub
xlat
xor
inc
mov
sbb
xchg
fwait
incl
inc
ret
and
and
cwtl
dec
mov
pushl
je
ljmp
fstl
push
stos
cmc
adc
or
dec
add
sar
xor
call
sub
sarb
jp
adc
pop
add
xchg
lods
dec
fs
mov
insb
xchg
incl
push
adc
lahf
cs
inc
mov
mov
out
jle
dec
xorb
call
fisubl
cmpsb
jb
push
sub
sub
fs
cwtl
dec
mov
fiaddl
cli
mov
dec
xchg
inc
push
mov
ljmp
popa
push
push
adc
mov
ds
filds
push
fcmovb
test
shrl
jne
cmp
push
jbe
hlt
aas
xchg
inc
or
test
dec
xchg
mov
and
movsb
cmpsl
sbb
ljmp
inc
std
jp
pop
nop
pop
cltd
push
jge
lds
push
stc
scas
xchg
out
outsl
sbb
xor
fildll
cwtl
bound
push
cmovg
mov
shlb
push
sbb
adc
dec
sbb
loop
fidivs
sbb
or
leave
mov
fdivr
cwtl
fmul
scas
push
cmp
hlt
and
into
add
decl
fcoms
in
cltd
cli
xchg
mov
add
xchg
mov
cld
push
xchg
leave
cmp
lcall
sub
mov
pop
ret
xor
pop
and
out
outsb
sub
mov
stos
fistps
les
mov
outsb
pusha
in
ficompl
ds
mov
jp
stc
js
xor
mov
dec
pop
test
cld
cmp
js
js
loope
popa
mov
jg
test
fldcw
add
call
fwait
scas
push
push
dec
insb
sbb
push
loop
xchg
jl
add
mov
cli
dec
push
mov
out
mov
jg
decl
in
or
cmp
mov
sbb
dec
punpckhwd
add
adc
add
jmp
test
repz
jno
in
hlt
call
inc
aad
mov
fiaddl
out
in
inc
push
in
sub
push
out
lret
and
fnstsw
push
les
daa
jmp
fisttps
cmp
adc
pop
dec
cs
dec
fnstcw
std
lahf
and
inc
outsb
or
pop
sti
nop
mov
mov
jne
scas
push
shlb
stos
imul
push
jns
inc
call
jns
xchg
xor
jecxz,pt
jno
scas
sub
inc
jne
fs
mov
mov
stos
movsl
inc
popf
stos
clc
fwait
ds
jo
mov
loop
cld
incl
sub
sub
xor
notl
sbb
add
jg
add
sbb
stc
icebp
dec
xor
mov
aaa
or
ds
aaa
lock
sbb
lds
sbb
jmp
pop
mov
jg
push
mov
cs
mov
test
jns
sub
in
out
inc
stc
rcr
ja
js
addr16
pop
mov
pop
inc
pop
sahf
insl
jns
lret
or
adc
mov
inc
sub
push
cmp
lods
out
push
xlat
sbb
clc
push
cmp
shll
mov
xchg
adc
xchg
mov
inc
lcall
ljmp
int
add
jo
push
in
testl
stc
mov
xchg
mov
pop
dec
jg
icebp
clc
cld
jb
sti
sub
into
sub
jns
lcall
mov
scas
cmc
insb
in
cld
les
adc
sti
sub
sbb
inc
jp
scas
sub
ja
je,pn
out
outsb
push
fildll
inc
sub
push
enter
imul
cmp
pop
xor
inc
aad
sbb
dec
push
or
scas
popf
inc
call
stos
mov
frstor
pusha
adc
pop
leave
and
sbb
ficomps
incl
loope
movsb
dec
jp
jmp
or
and
jg
cmc
push
dec
cmp
test
ret
mov
pushl
je
mov
jae
out
dec
cmpsb
push
jns
and
enter
loop
jg
xchg
xchg
aam
fiadds
scas
stc
cmc
out
dec
rcrb
adc
loopne
push
sbbl
push
xor
cmp
lcall
dec
ret
jnp
mov
test
into
je
loope
jge
xor
jg
mov
mov
loope
popa
fbld
cltd
or
call
hlt
pop
fimuls
out
jecxz
sti
adc
icebp
lahf
fwait
or
xor
push
and
scas
or
mov
dec
hlt
stc
popa
rorl
mov
adc
js
jns
shrl
imulb
daa
stos
lods
imul
fs
pop
dec
ds
and
in
fisubrs
push
cmc
dec
das
and
fcomip
es
incl
push
insb
xorb
jbe
pop
mov
push
pop
in
pusha
fs
jl
adc
inc
lds
push
mov
rorl
inc
jb
mov
add
inc
and
ficoms
movsl
aas
mov
call
cld
cmp
into
jge
cli
add
in
fiaddl
sbb
pusha
inc
fadds
adc
rcrl
inc
enter
decl
mov
jp
push
pop
xlat
mov
adc
pop
inc
stc
jp
mov
pushl
repz
push
mov
mov
dec
sub
int3
popf
insb
insb
jl
lock
cmp
movsb
pusha
subl
sub
fidivs
fimull
sub
jg
or
jg
xor
rclb
jae
sbb
ret
into
pop
mov
div
ss
decl
iret
fwait
mov
aam
bound
ja
movsb
sub
jne
scas
jg
aaa
std
mov
lret
addr16
mov
mov
dec
mov
decl
repnz
gs
aaa
movsl
pop
xchg
repnz
lods
pop
jbe
outsl
xlat
add
pop
add
jmp
dec
jl
xor
enter
fs
adc
mov
insb
xor
hlt
in
inc
sub
sub
test
mov
mov
fidivs
in
xor
jg
out
xchg
dec
jno
decl
enter
test
outsb
dec
xor
dec
lret
mov
jnp
add
mov
push
push
aaa
jmp
test
pop
clc
push
test
imul
shll
mov
cli
fildll
dec
lahf
in
loop
sbb
jmp
dec
jae
lea
test
int3
jne
sbb
cmp
sbb
inc
push
dec
daa
jl
es
loopne
stos
and
pop
in
fldt
push
movsl
lret
insl
fwait
mov
inc
sarb
inc
adc
pop
outsl
and
rorb
add
xor
rclb
je
add
mov
or
js
or
out
push
outsb
imull
jne
and
movl
shrl
or
scas
scas
inc
mov
lock
mov
add
or
int
dec
loop
cltd
pop
shrl
aad
pushl
push
jg
repnz
xchg
data16
xchg
mov
decb
xchg
inc
hlt
popa
xor
add
xchg
pop
xchg
lcall
jb
ja
sbb
decl
lock
jmp
sub
push
pop
push
test
pop
sbb
jg
mov
or
adc
sbb
fnstcw
stos
inc
ljmp
arpl
testl
dec
or
adc
push
xchg
jnp
stos
call
cld
mov
pop
lods
cli
iret
dec
jb,pt
add
fsubrs
rorl
pushf
sbb
inc
jmp
and
stos
and
and
imul
inc
jg
push
mov
call
std
mov
xchg
mov
adc
popf
out
fimuls
stos
int3
xchg
add
ljmp
xor
mov
inc
xchg
jmp
pop
pop
aas
jle
ja
pop
sub
mov
ljmp
pop
insb
dec
lods
ljmp
in
ficoml
hlt
and
out
push
call
add
dec
vpsubsb
push
stc
dec
pop
sbb
fisttpl
call
loope
dec
test
or
test
divb
mov
mov
dec
mov
mov
ss
call
or
dec
jecxz
jae
jbe
nop
jle
insb
movsl
xchg
inc
divl
fstpt
cmpb
inc
pop
push
in
pop
sahf
ds
mov
mov
jmp
and
lahf
test
mov
or
ss
clc
clc
dec
and
repnz
pop
out
cli
aas
pusha
cmp
xchg
movsb
lret
jns
mov
adc
test
xor
incl
pop
mov
test
mov
mov
sub
imulb
mov
mov
pusha
cmpsb
fstl
fcomi
movsl
push
sub
icebp
stos
add
lea
jl
out
cli
push
imul
popf
sub
ja
fsubl
test
sub
mov
iret
jecxz
and
ljmp
jmp
dec
pop
xchg
jbe
aam
dec
dec
loope
mov
sub
mov
inc
pushf
push
decl
movsb
lcall
outsb
pusha
mov
push
in
stos
sbb
cli
stc
int3
mov
pushf
bound
mov
and
test
and
cs
jg
test
lea
xor
ret
pushl
xchg
adc
repnz
sbb
loopne
xlat
or
push
inc
xor
pop
dec
xchg
jae
or
ljmp
mov
scas
lock
cmp
pop
stc
or
lret
das
jmp
jne
sti
stc
pop
xchg
xchg
pushl
mov
pop
xchg
icebp
data16
mov
cmpsb
nop
and
insl
in
xchg
mov
jp
imul
aaa
cld
incl
imulb
jno
jmp
mov
ja
bound
lds
in
jge
movsl
mov
jno
pop
mov
ficoml
enter
ret
ljmp
out
cs
cmp
ss
dec
lcall
std
mov
mov
mov
bound
das
fsubrs
imul
incl
push
popf
mov
push
mov
fldenv
and
pop
sub
incl
cmp
data16
loopne
jbe
iret
iret
aad
jp
ret
mov
or
incl
je
lods
sbb
inc
test
ss
in
addl
loop
fiaddl
jns
inc
pop
sub
inc
add
mov
enter
xor
pop
and
mov
push
scas
jl
cwtl
loop
pop
and
sbb
ret
inc
pop
sub
and
jg
mov
stos
xchg
icebp
add
cmpsb
cmp
in
sub
cli
add
jg
call
fidivl
mov
or
enter
lock
or
decl
mov
push
leave
mov
js
outsl
dec
imul
adc
aaa
dec
fldl
cltd
lcall
ljmp
out
xlat
xlat
and
cld
xchg
adc
mov
pop
int3
rorb
adc
mov
cmp
jmp
enter
mov
add
sti
jbe
xchg
mov
push
mov
rcr
iret
movb
xchg
mov
fs
sti
or
stos
dec
xchg
call
dec
loop
push
scas
push
jbe
ret
fiaddl
in
dec
fidivrs
jns
add
cltd
mov
add
push
sbb
mov
push
or
push
jno
inc
fnstsw
call
dec
jmp
stos
lret
mov
push
outsb
jnp
push
pop
hlt
scas
movsl
sarl
jb
pop
dec
mov
pop
inc
xchg
xchg
sarl
cmp
cmp
pop
out
call
rolb
inc
data16
das
dec
dec
cmp
dec
dec
mov
inc
rorb
decl
out
xlat
test
jb
mov
mov
imul
out
loopne
ljmp
fistps
xor
adc
stos
test
and
outsb
lret
stos
jns
jp
mov
imul
adc
pop
test
push
int
mov
adc
add
loopne
mov
adc
mov
clc
shl
test
lret
ja
stos
fisttpl
fwait
cmpsb
lcall
mov
sbb
pop
data16
mov
in
dec
stos
lcall
adc
mov
mov
dec
adc
dec
ret
jo
out
clc
add
xchg
call
adc
repz
ret
lcall
int3
aaa
or
push
jl
pop
jle
fdivrl
nop
test
mov
decl
inc
bound
lods
fwait
mov
mov
sub
aas
adc
insb
pop
cmp
or
inc
pushl
mov
inc
js
testb
cmp
cs
or
fwait
push
dec
sbb
push
fsubrl
pushl
sarb
sbb
scas
sub
test
mov
je
pop
cmpsb
pop
pushf
loop
pop
aas
mov
jmp
fsubs
loop
mov
test
sti
enter
js
stos
push
cld
das
sbb
lcall
push
es
test
addl
in
and
sbb
ljmp
jmp
lret
dec
dec
jb
test
add
sub
ss
mov
xor
scas
clc
ds
pop
test
xor
lret
or
push
jbe
adc
mov
orb
cmc
push
in
out
cli
decl
mov
and
pop
and
fs
xor
and
ficompl
call
clc
xor
pop
arpl
mov
enter
repnz
stc
stos
pusha
std
call
fwait
lods
mov
lds
push
jns
jno
call
push
rcll
or
xor
mov
in
fildl
xchg
adc
decl
or
mov
add
decl
dec
ja
xchg
jnp
jns
fisttps
scas
fs
hlt
mov
cmp
adc
jne
xchg
icebp
rcrb
cmpsl
mov
out
and
mov
je
mov
sarb
cmp
in
sbbb
or
adcb
mov
cmp
jecxz
jno
sub
dec
in
cltd
popf
dec
lods
push
stc
mov
mov
mov
popf
rcrl
fldl
das
push
fildll
popf
inc
jle
lods
js
dec
dec
mov
lcall
inc
shr
mov
or
and
aad
mov
push
jg
cmpsl
bound
push
insb
dec
loop
or
and
call
in
fdivr
jg
add
shlb
jo
sub
notl
out
das
jp
push
bound
pop
cmp
dec
lahf
insb
lahf
jg
cmp
nop
or
arpl
push
outsb
push
outsb
repz
add
decl
ja
insb
js
clc
pop
loope
stc
mov
aaa
lcall
mov
cwtl
lcall
or
cmpsb
and
rorb
xor
jecxz
mov
inc
pop
test
outsb
enter
decl
adc
je
stos
sahf
push
mov
pop
xchg
popf
jl
lcall
es
es
push
mov
add
sub
mov
mov
decl
movsb
std
mov
sahf
mov
pop
mov
enter
pusha
shl
xchg
inc
jo
cmp
jmp
xor
scas
in
inc
jecxz
mov
cmp
jmp
ja
js
mov
mov
mov
arpl
shll
outsb
cmp
or
hlt
jns
sbb
mov
inc
add
dec
es
aas
mov
add
sub
flds
xchg
inc
add
and
pop
scas
data16
or
cwtl
shlb
idivb
dec
xor
cmp
movsb
xchg
repz
popl
jle
rcl
pop
or
or
call
xor
data16
aam
pop
inc
xchg
adc
call
es
loopne
mov
idivb
pushf
sbb
sbb
xchg
loope
lret
mov
mov
out
sbb
or
push
jmp
jns
je
jbe
mov
mov
pop
lcall
inc
sub
fdiv
jmp
ret
movsl
fisubrs
sub
or
jge
mov
fs
adc
inc
mov
clc
cmp
arpl
pop
pushl
push
dec
daa
cld
scas
mov
sub
jbe
jne
ja
inc
out
cmpsb
pop
cmc
cmp
inc
cwtl
fcomip
inc
ud2
mov
adc
jecxz
out
mov
nop
cmp
ljmp
loop
ljmp
sub
mov
fmull
sarl
fwait
ror
mov
test
popa
lods
sub
cwtl
lret
mov
daa
push
inc
call
out
push
decl
cmp
xor
ror
xchg
pop
dec
sub
and
hlt
lcall
addr16
cli
shlb
xor
xor
jmp
andb
leave
leave
xlat
int3
pusha
cmc
inc
mov
adc
pop
mov
jge
sbb
divb
loope
or
xchg
fmulp
fdivrl
jle
adcl
lcall
sarl
jle
cmp
out
add
cmp
sti
cmp
outsl
ljmp
aad
bound
mov
mov
lret
movsb
or
pop
rcrl
jl
test
sub
push
sbb
sbb
adc
repz
in
inc
out
adc
fmuls
dec
sbb
sub
pop
push
test
es
jmp
xchg
inc
sbb
mov
es
inc
cmp
or
fisubl
incl
out
shll
dec
in
cwtl
mov
sub
lock
and
dec
jo
iret
ret
jle
pushl
sub
jns
in
dec
mov
dec
movhps
fldcw
aam
cmpsb
add
dec
xchg
hlt
imul
lods
stos
inc
mov
sub
idiv
push
sahf
loop
rcrl
inc
addr16
movsb
add
mov
lret
and
adc
adc
clc
inc
jae
adc
add
cmp
push
xor
fwait
add
or
sbb
dec
xlat
sbb
inc
fimull
adc
push
pop
inc
shll
dec
inc
dec
mov
mov
fstl
xchg
pop
cmpsl
jo
out
or
xor
dec
xchg
imul
call
adc
aad
xchg
and
in
bound
jp
rcr
setle
mov
ja
lods
sahf
adc
decl
lock
pop
fs
nop
sub
add
sbb
ret
jnp
or
cli
ljmp
test
fisttpll
mov
mov
fsubrs
pop
das
fs
cmp
jne
xchg
push
sbb
jle
xchg
aad
pop
stos
call
or
outsl
testb
incl
icebp
ljmp
into
cmpsl
fmulp
sbb
xchg
and
in
rorb
and
call
push
and
bound
pushl
divl
xchg
int
inc
or
loop
mov
nop
mov
mov
arpl
arpl
vxorpd
dec
or
test
sti
bound
sub
arpl
and
call
data16
and
sub
mov
sbb
pop
pop
mov
mov
adc
cmp
jmp
das
xchg
or
pop
ljmp
test
jmp
scas
fs
cmp
sbb
lahf
int3
dec
mov
incl
in
fcompl
insl
mov
add
jecxz
dec
jmp
add
jmp
int
das
mov
and
icebp
push
cmc
push
push
sub
pop
add
push
mov
or
fcmovnu
das
sar
mov
insl
imul
mulb
mov
jmp
push
pop
fidivs
jmp
mov
xor
xorl
cmp
adc
cltd
test
pop
jno
decl
mov
sti
or
sub
lea
or
jo
ficoms
inc
in
test
js
adc
ljmp
push
mov
out
sbb
xchg
mov
ret
and
cwtl
cmp
movsl
sar
decl
xlat
arpl
push
push
fimull
dec
jmp
mov
bound
jmp
and
lcall
xchg
pop
aam
scas
or
xchg
push
mov
adc
in
push
dec
pop
movsb
sbb
ljmp
daa
mov
cmc
dec
mov
inc
stos
shll
loopne
add
inc
in
or
loop
pop
mov
fldenv
out
cmp
in
cltd
fs
inc
or
lcall
call
lods
sahf
test
mov
mov
xor
inc
mov
dec
wbinvd
adc
cmp
testb
xor
adc
push
cmp
repz
mov
int3
push
movsb
sub
or
ja
scas
push
xor
xor
pop
add
mov
mov
fstps
inc
xor
sub
call
shrb
cmp
jl
xchg
mov
sbb
xchg
cmc
or
jmp
mov
clc
sbb
outsl
or
add
jge
sub
sub
in
sahf
jns
adc
jecxz
in
mov
xchg
sub
test
adc
test
fwait
mov
ret
pop
ljmp
mulb
push
mov
outsb
rcr
lods
mov
je
or
incl
mov
pop
addb
mov
jg
aas
push
int3
and
cmp
jo
cli
sub
lret
loopne
ljmp
leave
sbb
shl
mov
cli
aam
lcall
jge
lret
mov
push
outsb
dec
js
or
insb
cmpsb
cmp
dec
aaa
xor
push
dec
jecxz
jle
xor
out
cmp
dec
push
mov
cli
jge
sbb
lret
test
add
push
and
stc
decl
xor
inc
adc
inc
dec
mov
sarb
inc
rcr
out
decl
mov
mov
xor
insl
into
out
mov
xorb
jge
mov
aam
pushl
std
xchg
inc
pop
dec
mov
cli
ficoms
mov
push
sub
scas
sahf
xchg
fisubl
aam
mov
xchg
mulb
mov
mov
loope
jmp
add
mov
sbb
lcall
stos
enter
sub
inc
lods
fst
les
in
pop
sub
lea
aam
fcomip
inc
cld
lods
mov
sub
pop
fstp
jno
and
incl
add
cs
jge
adc
mov
gs
mov
jb
cmc
and
ret
push
cmp
std
stc
sbbl
mov
jmp
xor
pop
lods
push
movsb
adc
movlps
inc
jb
push
incl
shlb
movsl
mov
daa
or
test
mov
das
pop
add
scas
cs
mov
pop
lock
mov
push
jle
adc
outsl
adc
fsubr
stc
gs
pushl
fs
add
ret
push
or
loope
mov
mov
add
and
decl
jne
neg
lock
mov
fiaddl
inc
jmp
xchg
mov
mov
pop
in
jg
mov
repnz
gs
mov
cmp
into
inc
adc
cli
cmp
add
sub
xor
aas
cld
fldl
insb
lret
mov
adc
jno
push
push
inc
in
out
in
scas
sbb
xchg
add
cmp
mov
jge
sbb
movsl
push
mov
incl
aaa
inc
cs
mov
push
push
test
inc
mov
movsb
ret
xchg
mov
or
std
jg
xchg
in
sbb
cmp
out
imul
push
inc
xor
xchg
adc
inc
test
mov
push
pusha
mov
rcrb
sbb
adc
dec
jg
push
icebp
popa
das
push
xor
and
cltd
mov
les
jo
sarb
aam
pushf
dec
add
adc
scas
cmc
sbb
add
mov
jno
jg
lods
jbe
lahf
pop
sub
mov
pcmpeqd
ljmp
xor
push
jno
mov
xlat
fs
dec
xchg
inc
dec
xchg
repz
push
or
gs
lock
cmp
jbe
incl
test
pop
xchg
ss
adc
jp
or
fwait
into
pusha
cmc
jg
je
insb
xchg
movsb
out
inc
sub
mov
insl
clc
xchg
inc
xor
xchg
into
cmpsb
dec
ljmp
cli
movsb
jle
stc
fstpt
out
mov
stos
cmpsb
mov
adc
dec
xchg
add
stos
fiadds
cwtl
flds
mov
push
aaa
pop
mov
rolb
xchg
cli
flds
xchg
movsl
enter
call
jp
loop
xchg
push
int
push
out
push
sbb
inc
push
jmp
out
and
ffreep
dec
push
dec
icebp
fidivs
fisttpll
and
test
cmp
xchg
jmp
addr16
cmpsl
arpl
sti
pop
and
fucomp
jae
push
pop
mov
test
and
jmp
repnz
loop
jp
cmp
push
xor
sbb
inc
or
lea
clc
lcall
adc
push
mov
ja
add
xchg
ljmp
scas
inc
mov
shlb
jae
mov
test
jmp
mov
adc
mov
add
inc
movsl
and
lds
xchg
aas
out
jb
add
lcall
les
hlt
mov
or
and
pushl
outsl
mov
adc
add
push
out
pop
push
out
cmpsl
inc
push
nop
ljmp
lods
loopne
ret
cmp
adc
mov
xchg
insl
mov
and
pushf
inc
jmp
inc
inc
outsb
in
aad
adc
xchg
fs
xchg
out
adc
push
in
je
or
incl
mov
dec
inc
clc
clc
out
dec
pop
jp
and
push
data16
pushl
dec
mov
inc
push
adc
adc
push
jae
fisttps
jmp
add
mov
push
lods
repnz
int
jne
idivb
lds
stos
push
in
fmuls
lcall
dec
dec
lock
or
ljmp
icebp
xchg
mov
pop
cmp
ja
push
loop
outsl
or
pop
pushl
adc
jne
ror
xor
sbb
and
mov
xchg
pop
mov
call
sub
xor
dec
pop
dec
jle
pop
in
and
outsb
mov
lret
call
mov
cmpb
notb
in
mov
or
outsl
push
cmp
lcall
and
loope
aad
dec
or
jo
aaa
or
push
out
lods
pop
repz
jmp
cs
push
out
xchg
dec
xchg
daa
scas
mov
pop
inc
mov
lcall
mov
mov
test
sbb
push
xor
sbb
and
dec
rclb
xchg
incl
lcall
sbb
ja
dec
addr16
lcall
enter
pop
push
pop
das
enter
je
scas
ds
jmp
repnz
dec
cmc
clc
xchg
lods
push
push
add
lock
add
out
and
stc
mov
int3
mov
pop
cmp
aas
test
cmc
and
imul
sahf
cmp
jl
out
and
cmp
js
mov
leave
adc
inc
sub
cmpsl
and
inc
mov
add
mov
test
pop
dec
std
lds
xchg
mov
pop
jl
sbb
ds
test
adc
roll
and
xchg
sbb
dec
push
xchg
push
movsl
aad
dec
sbb
sub
lock
lcall
or
sbb
iret
add
mov
cmpl
adc
push
sar
test
add
clc
inc
xor
mov
dec
cmp
decl
pop
clc
push
adc
and
pop
push
inc
rorb
loope
ret
dec
mov
aas
in
xchg
jp
cltd
fs
add
ljmp
and
jmp
std
dec
ds
femms
outsb
cld
cmp
das
xor
xor
rorb
pushl
mov
xchg
pop
cmc
xorl
fcoml
mov
mov
dec
scas
lea
xchg
fdivp
pusha
mov
xor
cmp
jmp
daa
ret
pop
or
xor
clc
fldl
inc
sub
scas
push
test
out
dec
call
sar
add
push
into
insl
call
dec
lods
lcall
mov
rorb
outsb
cli
cmp
inc
inc
int
lods
push
dec
outsl
xor
aam
ja
pop
inc
jmp
inc
xchg
jmp
je
sbb
xor
add
xor
pop
movsl
pop
sbb
decl
inc
mov
sbb
leave
andl
adc
mov
xorb
ljmp
push
mov
mov
pusha
jb
cmp
dec
imul
pop
mov
imul
bound
xchg
and
leave
cs
insl
dec
int
call
mov
mov
xchg
xchg
aad
mov
fstpl
insl
pop
out
lods
inc
mov
repz
sbb
cmpsl
nop
inc
or
lea
pop
xchg
push
push
jecxz
xchg
hlt
sub
das
clc
cmp
in
ljmp
add
ss
mov
int3
outsl
icebp
cmpsl
mov
iret
dec
test
enter
daa
xlat
lods
add
lcall
cwtl
movsb
mov
mov
and
jae
jb
jo
daa
mov
and
pop
loopne
lcall
bound
adc
mov
cli
push
or
jbe
push
jmp
sbb
jge
mov
pushl
bound
fisttps
stc
or
or
xchg
decl
sub
nop
mov
outsb
aaa
stos
mov
fisttpl
pushl
testb
test
push
dec
xchg
js
pusha
cwtl
cmp
shll
ja
fwait
movsl
mov
das
mov
daa
dec
insl
sbb
fwait
into
xlat
cs
dec
mov
or
adc
mov
or
jnp
jmp
mov
es
je
decl
ficompl
and
imul
pusha
decl
xchg
push
inc
fwait
lahf
sbb
gs
push
adc
xchg
incl
popf
mov
stos
lods
imul
or
jl
out
lea
cmc
int3
pop
sar
lcall
imul
dec
mov
daa
fidivl
add
call
sub
decl
and
push
jle
loope
and
push
clc
xchg
pop
cmpb
shlb
decl
jge
nop
les
fcmovb
fisubl
dec
jge
pop
fs
or
mov
decl
pop
adc
push
jae
cmp
popa
xor
lock
pop
ret
jmp
imul
hlt
pop
call
sahf
cld
adc
lret
mov
stc
jecxz
in
int3
or
test
xor
sti
jne
add
ds
pop
add
cwtl
wbinvd
and
cmpsl
test
icebp
or
stos
dec
push
dec
lcall
mov
sbbl
mov
pop
ljmp
add
insb
cs
xor
sbb
mov
mov
or
stc
mov
dec
and
lahf
xchg
es
or
addr16
outsb
mov
jmp
mov
and
or
aas
mov
jg
mov
adc
ficoms
jmp
jmp
fstl
mov
cmpsb
aam
int
xlat
enter
mov
xchg
notb
cltd
sub
fimuls
sbb
orl
pop
jmp
in
adc
out
dec
push
cmp
pop
sub
dec
adc
pop
daa
pop
mov
cmp
lret
add
pop
sti
or
sbb
xchg
inc
xchg
ss
cmp
pop
sbb
fsubrl
or
adc
xchg
sub
jb
dec
cmc
or
adc
sub
decl
lock
cld
ret
jo
and
dec
scas
pop
inc
dec
push
shll
je
dec
xorl
jle
dec
ja
ljmp
mov
incl
add
or
daa
je
inc
jle
mov
pusha
in
add
jecxz
mov
jl
xchg
mov
cltd
pop
mov
cmpsb
daa
xchg
incl
cmpsl
push
movsb
test
mov
scas
dec
or
jp
int3
lods
pop
xor
or
dec
cmc
fs
adc
dec
das
add
push
popf
ja
hlt
cs
pop
and
push
cmp
icebp
popf
jns
adc
icebp
dec
mov
pop
push
in
or
mov
cmp
shlb
xor
dec
out
mov
jecxz
aas
icebp
sub
mov
pushl
out
pop
dec
inc
mov
leave
dec
jbe
sbb
insb
pop
popf
pusha
jp
ljmp
lds
ficomps
in
mov
decl
in
add
sahf
dec
jnp,pt
std
jnp
into
push
sub
sbb
sub
mov
inc
xchg
jne
fisubrs
fisttpl
sub
cmp
push
stos
sbb
and
stos
xchg
cli
dec
add
xchg
push
and
cld
sub
sub
sbb
icebp
imul
cmp
adc
and
cmp
aaa
in
jmp
jae
dec
movsb
lods
cmp
dec
add
ljmp
add
inc
sub
rcrl
subl
jmp
inc
sub
sub
shrl
rolb
in
je
fcmove
out
and
scas
xchg
pop
adc
push
pop
cmp
loopne
add
mov
icebp
jno
fs
jmp
std
scas
out
inc
test
jno
nop
sub
ret
in
stc
cli
loope
addr16
enter
fbstp
rclb
sbb
daa
jno
add
mov
jecxz
xor
fstpl
or
pushf
loop
and
pushf
or
xor
rclb
scas
call
aam
mov
movsl
fcmovnb
outsb
cmpb
and
push
lcall
xchg
lds
sbb
lea
ret
les
xchg
int
push
sahf
mov
fcomip
je
rcrb
stos
lcall
jl
popa
dec
mov
in
sbb
adc
jecxz
push
cmp
lret
fsts
nop
sbb
hlt
xchg
mov
jmp
pop
add
push
dec
mov
push
mov
mov
add
cli
sbb
cmp
pusha
push
cmp
ljmp
scas
test
fists
cmc
mov
js
out
sbb
xor
mov
cli
ljmp
jb
nop
inc
mov
push
shll
inc
pushl
outsb
pop
or
out
testl
das
inc
out
idivb
call
fnstcw
jmp
int3
xchg
sbb
jle
inc
mov
shrl
repz
sbb
push
jg
push
adc
test
idivb
fnstenv
ja
pusha
push
jl
xor
cmp
push
adc
and
fdivr
push
mul
rcll
dec
movsb
hlt
dec
popf
xchg
js
nop
pop
stos
fiaddl
or
jo
push
mov
pop
test
mov
add
leave
scas
inc
test
shlb
or
mov
jge
repnz
pushl
imul
mov
xor
nop
in
out
adc
movsl
and
dec
addr16
clc
lds
incl
adc
mov
lret
sub
ret
push
pop
xor
loop
sbb
cwtl
stc
pop
mov
cs
jg
sbb
call
sbb
das
cmpsb
in
loop
and
ret
and
fistpl
aaa
cs
ss
pop
cmp
pop
or
and
adcb
mov
popf
aad
es
sub
adc
fcmovu
mov
jmp
std
addb
inc
andb
mov
movsb
in
or
repz
cmpsl
ret
mov
cmp
push
test
lret
sbb
leave
jecxz
pop
sbb
imul
mov
and
inc
lret
ja
sarl
aad
pop
jl
std
mov
xchg
xchg
push
xchg
ret
inc
gs
lds
cmc
sub
std
inc
es
push
mov
add
decl
push
sbb
jmp
lds
or
pop
mov
pop
pop
mov
ror
into
mov
or
inc
ret
mov
jl
repz
sbb
frstor
cltd
jb
mov
iret
mov
xchg
outsl
jbe
leave
jnp
sti
lret
lock
adc
sarb
daa
gs
out
int3
add
mov
arpl
xor
inc
pushl
mov
pop
loope
ljmp
decl
ret
mov
mov
xor
arpl
push
test
fstpt
notb
push
xor
mov
nop
xor
rol
xchg
xor
xchg
out
add
mov
xor
lcall
gs
adc
mov
push
subl
pop
enter
lcall
fdivrl
cmp
sub
dec
xor
mov
adc
sbb
xchg
pop
call
fs
inc
dec
cmp
out
mov
pop
xchg
push
pop
out
sbb
push
sahf
pushl
shlb
sbb
dec
icebp
cmp
mov
popf
pop
mov
dec
mov
pushl
aam
or
fistpl
imul
psraw
jno
inc
pushf
outsl
jge
sbb
mov
cld
push
dec
ja
cwtl
mov
and
mov
xchg
test
adc
adc
testb
mov
inc
xor
push
ds
mov
inc
cmp
imul
add
inc
cmp
incl
popa
insb
push
xchg
mov
fs
jb
and
flds
push
dec
sbb
in
xchg
lea
and
jae
les
pusha
aam
inc
fwait
add
lods
js
mov
sub
addr16
outsb
adcb
or
cmp
xchg
mov
imul
fisttps
sbb
adc
mov
aam
sbb
lret
scas
ja
or
dec
mov
add
dec
add
addb
xchg
push
outsl
cli
inc
xor
je
inc
cltd
ja
cmp
adc
inc
pusha
popa
pushf
sar
jae
cmp
out
adc
and
mov
insl
adc
dec
orb
xchg
scas
inc
test
test
es
loop
cmp
addb
add
mov
incl
iret
lea
push
jecxz
outsb
cltd
es
xor
jbe
dec
sub
dec
push
int
icebp
arpl
cltd
loope
mov
mov
dec
aaa
aaa
xchg
and
xor
cs
mov
insb
mov
push
jo
cld
ljmp
mov
imul
testl
out
cmpsb
int3
jne
sarb
addl
nop
jbe
leave
les
enter
cs
pop
stc
loopne
sbb
dec
ljmp
jecxz
les
cmp
cmp
xchg
jo
stos
adc
add
shll
lcall
mov
and
sub
std
mov
add
repz
and
and
xor
lods
cmp
lods
xor
mov
xchg
lods
mov
pop
inc
xchg
mov
mov
cld
push
cmp
out
rol
cld
mov
jno
repnz
or
sub
fs
xchg
push
mov
push
sahf
es
pushl
dec
nop
sub
jb
sbb
add
scas
sub
push
add
mov
decl
int
imul
push
or
or
ret
sahf
test
stos
mov
jge
sub
loopne
call
je
icebp
mov
ljmp
inc
fwait
sahf
enter
jl
and
hlt
sti
and
sarl
hlt
gs
cli
lret
xchg
push
jo
addl
addr16
lds
loop
negl
mov
jae
sarl
call
in
decl
lock
js
mov
into
cmp
pop
int3
adc
inc
inc
fildl
pusha
or
je
pop
out
subb
out
stos
cmp
mov
or
loope
out
add
inc
inc
cs
mov
pop
pop
sub
adc
xor
pushl
dec
cmc
repnz
fdivl
fstpl
out
mov
sbb
pop
or
pop
or
xlat
fistl
das
xchg
fcomps
pushl
pop
dec
inc
sbbb
jmp
out
mov
adc
ret
push
xor
decl
mov
mov
jae
push
xor
cmp
push
repnz
pop
jmp
out
movsb
cwtl
mov
jecxz
and
dec
lods
xor
mov
pushl
jge
lds
mov
push
addr16
sbb
out
int
clc
cmp
outsb
scas
mov
xor
push
stc
mov
flds
in
dec
incl
mov
repnz
lds
cld
outsl
dec
fmul
js
stos
mov
bnd
push
mov
dec
test
shlb
xlat
mov
aas
imul
js
and
leave
popa
mov
cli
lds
push
xor
push
mov
sbb
add
xor
in
cs
mov
stc
push
inc
jne
mov
in
fdivrp
push
shlb
pop
jle
jns
cmp
sbb
or
pop
inc
das
mov
fisubrs
mov
inc
or
fsts
inc
andl
pushl
mov
ffree
xchg
daa
jno
pop
mov
push
scas
movsl
sub
jecxz
inc
dec
jg
or
jno
mov
lret
insb
cmp
dec
repnz
xchg
addb
mov
imul
dec
je
fwait
cmpsb
hlt
push
cmc
ljmp
pop
dec
inc
or
xchg
mov
stos
lcall
ret
clc
insl
rol
out
xor
or
cmp
push
mov
inc
mov
sub
pop
addr16
pop
daa
ret
adc
loop
add
loope
in
lcall
aam
pushf
adc
push
mov
popf
mov
out
repnz
adc
rorb
cmp
xor
call
push
imul
addb
jmp
in
push
cs
sub
push
pop
pop
in
push
adc
inc
pop
mov
stos
mov
ljmp
and
xchg
scas
loop
int
or
sbb
ret
ljmp
stos
xor
xorl
aaa
push
mov
cs
dec
xor
lcall
in
mov
mov
out
dec
jbe
jbe
jns
push
rorl
dec
stos
lods
sub
inc
push
pop
sbb
mov
mov
jle
jmp
or
and
xor
mov
inc
ja
xchg
rcrb
jp
mov
orl
dec
add
js
jmp
ret
mov
xchg
sbb
ljmp
aad
subps
sahf
insb
pop
cwtl
and
and
push
loop
dec
jbe
loopne
jo
inc
lcall
sti
xchg
cmpsl
mov
dec
scas
adc
into
xchg
and
ret
dec
inc
cltd
fsts
aas
sub
jmp
xor
and
jns
adc
call
or
xor
icebp
out
outsl
out
jecxz
ljmp
jmp
xor
fcom
aaa
mov
insl
mov
jecxz
ficoml
pop
and
lock
je
lcall
and
add
add
ljmp
pop
mov
mov
inc
jl
fmul
pusha
sub
adc
jge
sbb
cmp
loope
rclb
push
sbb
xchg
and
jg
loopne
push
icebp
int
mov
and
xor
out
or
add
push
ds
sar
and
shrb
into
xchg
xchg
es
icebp
pushl
sar
mov
pop
imulb
push
xchg
into
add
adc
jl
call
mov
add
mov
hlt
adc
mov
pop
clc
out
clc
ret
push
inc
and
pop
lods
cli
cwtl
insb
mov
in
pop
mulb
lret
sbb
ret
fists
shlb
ja
cli
lcall
jb
push
push
sbb
xchg
mov
adc
das
lcall
pop
push
decl
mov
inc
imul
mov
cmp
stos
mov
pushl
pop
shlb
stos
sbb
in
testl
mov
and
and
mov
dec
inc
std
ss
aad
cmp
mov
clc
incl
filds
movsl
lock
jg
dec
or
pop
and
and
pop
incl
add
pushf
and
lcall
pusha
in
dec
psraw
inc
jg
decl
inc
mov
jp
sub
insb
cmpsl
mov
lds
pop
out
sub
add
ja
add
out
icebp
iret
mov
fsub
jo
clc
xor
and
cmp
jg
mov
sbb
cmp
bound
incl
push
sbb
jnp
loop
cli
outsb
shrb
xchg
mov
jns
das
or
cmp
icebp
mov
xchg
and
lahf
test
xor
decl
outsb
loope
sets
popa
sub
out
cld
jb
mov
out
adc
inc
push
push
call
loop
in
aaa
jl
xlat
ds
add
mov
clc
pop
cwtl
ret
mov
fildll
repz
jle
and
cli
mov
fstpt
ret
out
out
mov
outsl
lcall
jnp
and
in
mov
inc
jns
shll
sbb
mov
icebp
in
mov
or
lcall
pushf
insl
cmp
pop
cmp
mov
cli
and
aad
stos
sub
out
adcl
and
pop
popa
xor
pop
push
xchg
test
in
cmp
pop
mov
shll
or
je
pop
ret
lret
aas
or
or
lret
mov
dec
iret
ljmp
sbb
and
nop
xchg
sarl
aaa
push
sbb
js
lock
stos
mov
mov
arpl
mov
add
mov
jmp
pop
rol
pop
test
mov
jg
rclb
leave
mov
ss
push
push
outsb
sub
cltd
xor
cmpsb
stos
cmp
arpl
hlt
dec
ljmp
mov
lcall
or
or
pop
hlt
add
popa
cwtl
jp
test
sahf
mov
or
push
lock
xchg
addr16
and
rcl
clc
mov
fwait
iret
jmp
leave
je
dec
mov
mov
call
rorb
or
cli
in
xchg
bound
push
dec
sar
loopne
inc
gs
in
jmp
push
enter
inc
test
leave
mov
in
mov
push
sbb
xchg
insl
xlat
shlb
fdivrs
mov
xchg
pop
sub
inc
icebp
push
jbe
pusha
nop
adc
in
insb
xchg
push
in
jbe
bound
jmp
gs
sti
and
xchg
pop
cmp
call
and
sub
xchg
sbb
cmp
jp
scas
nop
cs
rol
sarb
std
mov
lcall
pushf
les
lock
bound
push
adc
cwtl
push
push
aad
jge
decl
aam
mov
inc
bnd
fistpll
xor
stos
push
test
jmp
mov
shl
jmp
ss
sbb
pushl
mov
mov
and
fs
repz
and
in
jmp
ljmp
in
mov
leave
stos
scas
loop
aaa
mov
cmp
scas
gs
clc
jae
sbb
push
jmp
subb
aad
push
dec
mov
mov
in
cmp
movsl
jnp
dec
lret
mov
cmp
cld
hlt
mov
jns
mov
mov
cmc
sub
scas
int
mov
push
sti
cmpsb
cmp
cmp
push
cmp
pop
aas
mov
pop
or
popa
fdiv
xlat
clc
pop
sbb
sbb
cld
pushl
mov
jmp
push
mov
decl
lock
sub
movb
push
das
cmpsl
push
mov
add
xor
incl
xchg
push
cmp
addl
push
sub
xor
cmp
das
call
mov
cwtl
pop
call
push
sub
jecxz
jecxz
call
cmp
dec
adc
add
ljmp
mov
es
ljmp
clc
xor
sub
ljmp
nop
js
loop
push
mov
pop
repz
xchg
std
fbld
pop
stc
scas
orl
scas
pop
sub
call
sbb
aas
in
mov
fs
push
or
push
loopne
adc
pslld
pushl
lods
js
movsl
test
leave
and
sub
xor
and
cmp
int
cli
jg
pop
push
sub
je
mov
cs
jl
das
in
lahf
jno
push
inc
sar
ljmp
mov
xchg
push
add
gs
call
sub
into
clc
out
repnz
pushl
stos
les
xchg
call
sbb
and
aad
cmp
xor
mov
cmpsl
gs
cmp
in
and
pop
imul
ficoml
push
xchg
out
in
push
push
push
adc
cmp
hlt
fnclex
jae
push
je
pushf
lea
push
lcall
inc
dec
mov
sbb
ds
mov
adc
xor
movsb
xor
leave
fbstp
cli
or
ljmp
sub
mov
pop
pop
cld
pop
xchg
jecxz
jb
popf
mov
filds
or
jmp
sar
roll
xor
outsb
mov
imull
or
repz
cmp
push
and
cmp
cld
mov
scas
jo
mov
sub
sub
add
lahf
and
out
push
notl
xchg
jg
clc
mov
jmp
jmp
jno
pushf
scas
jmp
daa
pop
scas
or
or
ss
push
decl
cmp
add
cmp
mov
test
mov
inc
fbstp
cmp
call
mov
mov
cmp
and
ljmp
call
sub
scas
jp
dec
pop
jmp
or
cmp
mov
call
mov
mov
push
mov
inc
pop
mov
aam
inc
pop
ss
push
nop
mov
ret
clc
mov
inc
add
bound
pop
icebp
lods
ret
sub
enter
call
push
xchg
or
and
pop
jmp
xor
daa
push
cmpsb
sub
lcall
add
pop
test
mov
call
xor
sub
loop
data16
lcall
jmp
mov
pop
inc
test
cltd
ss
xchg
xor
incl
cmp
adc
sub
jecxz
fnstenv
add
xchg
cmp
xor
ljmp
clc
add
xchg
aad
incb
dec
pushf
add
nop
ljmp
lcall
es
popa
sub
test
jbe
mov
rolb
jg
mov
pop
test
mov
xchg
lahf
sub
popa
xchg
cmp
sbb
mov
dec
scas
mov
dec
add
les
cwtl
int
and
movsl
xor
xchg
mov
fstps
decl
mov
shlb
adc
inc
sbb
test
in
pop
incl
lods
lcall
lods
jl
pushl
push
lcall
aas
int
subb
loop
hlt
out
out
incl
mov
sbb
or
jo
fs
sub
int
jbe
mov
mov
or
clc
in
in
cld
loope
mov
xlat
scas
dec
std
outsl
repz
loop
sub
outsl
mov
xlat
out
insb
xchg
inc
decl
in
jge
mov
sub
xor
sbb
xchg
jle
aad
test
pushf
iret
insl
test
mov
jno
jb
pop
addr16
cmpsb
inc
inc
push
ret
test
push
lods
int3
clc
call
xorb
addb
fs
out
xchg
push
lahf
push
loopne
sbb
divl
inc
sar
ljmp
mov
xor
jg
xchg
pop
popf
popf
mov
arpl
dec
fmul
inc
shrl
dec
es
iret
nop
jbe
sub
pop
daa
popf
mov
stos
dec
adc
add
dec
add
andl
shrb
dec
or
decl
push
push
in
inc
jecxz
lea
jno
mov
test
stc
cld
dec
adc
in
rcr
jne
or
or
test
and
ljmp
push
dec
lods
scas
in
daa
sbb
mov
ds
mov
xchg
xchg
loope
dec
lahf
jb
test
xor
add
repnz
inc
xlat
divb
scas
test
push
lea
adc
or
das
mov
scas
decl
lods
insl
out
sub
loope
xchg
or
lods
sub
das
push
call
inc
push
cmc
andl
sbb
push
in
sub
xor
sub
dec
adc
repnz
pop
repnz
ret
ret
mov
les
mov
cmpsl
cmp
adc
jnp
stc
fldl
stos
incl
dec
adc
lret
aaa
sbb
ret
add
std
ss
in
loope
jg
xchg
or
or
mov
xchg
pop
pavgw
mov
or
aas
mov
mov
mov
clc
in
iret
enter
add
push
rorb
sbb
pushf
mov
lods
mov
ret
push
loope
aad
push
push
imul
into
mov
outsb
es
adc
jge
out
or
or
popf
lods
not
sbb
in
xchg
in
mov
pop
ja
inc
or
lret
add
inc
inc
arpl
xor
fs
xchg
rolb
nop
cmp
push
call
ret
cli
negb
ja
inc
or
push
sub
inc
add
std
or
in
int3
mov
loop
xor
or
jb
pop
fs
iret
out
call
jle
lods
inc
jmp
cmp
adc
out
je
fbstp
lods
mov
scas
lock
pop
push
jmp
mov
dec
enter
dec
aaa
push
sub
ja
scas
push
les
push
ljmp
incb
pop
mov
cmp
lahf
es
cli
jle
imul
mov
mov
jmp
popa
ds
call
adc
jne
pusha
shll
xchg
es
cld
pop
sbb
mov
dec
mov
lcall
dec
mov
insl
push
jle
sbb
cmp
mov
mov
sub
subl
and
decl
pushl
je
movsl
jmp
cwtl
lock
clc
repz
rcrb
sub
repnz
pushl
mov
dec
not
inc
dec
fwait
and
fwait
movsl
gs
lods
cld
jmp
dec
jb
mov
jl
sti
push
xor
subl
test
push
enter
lret
hlt
inc
cmp
andl
clc
stos
cmp
scas
fmuls
enter
loope
adc
inc
adc
mov
mov
or
sub
push
xchg
out
push
orb
xchg
loopne
mov
fs
outsl
cmp
cld
rol
notb
in
fiaddl
loopne
inc
pushl
rcr
je
cs
aas
and
mov
xchg
insl
cmp
xchg
ds
lcall
lock
int
cmp
enter
mov
call
mov
push
xchg
or
dec
push
add
stos
shll
push
or
pushl
hlt
or
xlat
sub
dec
or
sarb
loop
push
ss
xor
out
mov
lcall
push
pushf
sbb
stos
cld
sbbb
sbb
outsl
xor
push
roll
dec
fbstp
xchg
pop
test
incl
imul
mov
mov
cmp
gs
mov
cmpsb
movq
pushl
lcall
std
je
daa
sbb
out
cmpsb
das
decl
sbb
aad
dec
dec
mov
bound
and
mov
add
adcb
sub
sub
pop
mov
incl
rorb
jae
cmp
ret
ret
dec
aas
pop
mov
xor
mov
mov
int3
insb
add
pushl
int3
test
or
nop
push
sahf
loope
or
sbbl
cmp
sahf
pop
or
add
stc
cli
mov
stos
mov
inc
daa
inc
mov
call
add
mov
fdivl
cmp
cmpl
dec
jmp
cmc
in
outsb
mov
je
fsubrp
add
ljmp
mov
mov
sti
mov
jbe
into
call
in
lret
test
ret
decb
pushl
ds
jno
mov
shr
out
loope
add
pop
mov
push
xor
decl
adc
lret
push
outsb
cmp
jge
pop
cmc
repz
mov
adc
pop
pop
push
mov
andb
test
out
sbb
cmc
scas
lahf
mov
sahf
lds
clc
and
out
cli
or
xchg
imul
mov
cwtl
stos
sahf
jg
scas
out
imul
jp
ljmp
push
rclb
hlt
inc
mov
xchg
loope
pop
hlt
idivb
pop
std
jg
aam
mov
out
sbb
hlt
xchg
jae
dec
add
adc
incb
xchg
int3
mov
push
mov
pusha
div
pushl
shlb
repz
push
sarl
hlt
pop
lods
arpl
mov
jno
decl
test
mov
mov
mov
lods
lea
pop
icebp
ljmp
and
imul
adc
sbb
cli
dec
cmp
aam
inc
mov
ljmp
mov
pop
push
lock
pusha
jecxz
in
jns
pop
xchg
ret
negb
xor
mov
sahf
xchg
sub
push
sbb
test
insb
and
out
dec
sub
push
mov
mov
jge
cmc
call
push
pusha
test
push
and
les
push
jle
sbb
out
jnp
sti
jmp
mov
cmp
insl
enter
xor
aaa
pop
jecxz
push
imulb
popf
sbb
pop
ljmp
mov
outsb
mov
mov
sub
test
leave
fstpl
jns
jmp
data16
push
loope
in
inc
push
lahf
test
inc
fwait
int3
cmc
inc
jns
pop
adc
xchg
daa
jp
xor
mov
and
pop
sti
dec
in
jne
test
shlb
xchg
pop
xchg
adc
mov
lds
mov
push
pop
rcll
push
jmp
jns
ljmp
sub
int
cmp
cs
neg
xchg
jns
adc
fmulp
les
sub
xchg
mov
cmp
icebp
stc
pop
pop
shlb
mov
pop
lret
sub
addr16
orb
mov
fdivrl
inc
mov
sub
jbe
sbb
jae
les
sub
mov
lods
push
jg
add
lcall
mov
lods
aam
pushl
mov
mov
loope
lods
mov
out
decb
cwtl
shlb
lcall
cmpl
push
mov
pop
push
test
stos
xchg
lds
mov
add
mov
xchg
jmp
pop
icebp
sahf
mov
movlps
vpcmpgtd
dec
pop
sub
jg
sub
leave
add
cmp
pusha
bswap
ds
mul
xor
fwait
pop
ret
xlat
mov
add
inc
or
cmp
lcall
cmc
ja
stos
cmpl
mov
xchg
cmp
imul
test
lret
jg
stc
and
mov
or
sbb
jle
sub
das
sar
mov
js
jo
push
mov
out
and
xchg
sahf
cmp
add
jmp
sbbl
sarb
outsl
push
pop
test
sbb
pushl
inc
inc
dec
push
enter
fidivrs
cmp
scas
jp
aas
dec
or
jmp
nop
pop
aas
out
es
sub
int3
sub
mov
pop
fs
fcompp
pushl
cmp
push
mov
out
push
ret
mov
mov
xor
sub
fistps
inc
inc
outsb
lods
push
int
mov
scas
clc
call
aaa
mov
popa
pop
subb
cld
add
leave
push
xorl
adc
sbb
scas
inc
pop
push
shll
jmp
cmp
nop
filds
fnsave
inc
pop
sbb
mov
xor
jmp
adc
addr16
shl
movsb
in
inc
xorb
sbb
sti
xchg
pushf
add
nop
mov
aam
push
or
outsl
daa
dec
bound
ret
inc
stos
inc
add
mov
scas
negb
mov
imul
call
rorl
dec
cli
dec
sub
add
xchg
and
lret
inc
sti
int3
scas
loope
adcl
inc
push
std
adc
rolb
repz
decl
mov
dec
je
call
dec
xor
addr16
ljmp
faddl
push
je
fisubrs
inc
adc
fucomi
insb
add
ljmp
repz
add
add
cmp
test
scas
imul
pushf
icebp
int3
mov
movsl
xor
xchg
sub
dec
jmp
mov
popa
testb
scas
jecxz
clc
fwait
push
rcrb
jle
adc
fstpt
xchg
sbb
push
jecxz
mov
jo
sti
ss
or
inc
push
test
and
clc
adc
and
repnz
cmp
ja
loop
or
hlt
adc
mov
pushl
push
mov
dec
push
cmp
mov
xor
jb
mov
mov
jg
push
sub
movsb
dec
sub
xchg
mov
push
inc
lahf
test
icebp
pop
xchg
sti
and
mov
call
mov
test
cmp
jnp
add
ss
ljmp
pushf
add
pusha
mov
mov
mov
adc
adc
jmp
push
test
xchg
add
and
fwait
or
push
xchg
shlb
into
push
insb
popf
inc
xor
decl
mov
mov
lcall
pop
add
lret
cmp
cmp
in
testb
leave
sbb
mov
xor
sbb
fsubrs
jno
and
test
cmp
jmp
xor
jmp
xchg
jb
lods
sbb
loope
in
or
jb
xchg
dec
fstl
sbb
stc
lock
push
je
scas
cli
pop
inc
cmp
and
jns
or
decl
call
xchg
in
popl
mov
inc
faddl
pop
mov
pop
cmp
adc
pop
add
xor
push
inc
leave
mov
sahf
push
cmpl
adc
outsb
adc
lret
dec
inc
push
clc
out
fimull
aas
jne
jmp
sti
fisubrs
mov
cmp
ds
mov
cmp
add
cmpsb
sub
jmp
pop
shlb
fbld
and
xorb
xchg
sub
sarb
or
sahf
frstpm(287
xorl
mov
sbb
icebp
scas
jecxz
in
test
xchg
jmp
incl
out
sbb
test
into
mov
mov
adc
mov
mov
jno
jbe
inc
mov
jecxz
stos
shrb
xor
js
or
sub
leave
repz
lahf
dec
sbb
inc
xor
fiadds
outsl
fdiv
stc
dec
pop
std
into
sub
popa
mov
mov
jne
lret
lahf
inc
mov
mov
rolb
outsb
movsl
mov
js
or
lret
push
adc
xor
fstp
adc
inc
pop
inc
pop
aad
mov
inc
iret
push
xchg
cmp
add
cmp
into
mov
inc
adc
mov
popa
imul
fidivrl
xchg
out
fcomip
pop
fisubrl
ret
or
popa
mov
xchg
xchg
mov
push
lcall
jae
arpl
jne
jno
mov
sbb
cld
int
xchg
pop
and
insb
xor
jb
jl
arpl
fistpl
sahf
ret
fmuls
jg
inc
cwtl
jle
jne
fs
out
mov
or
incl
cmpsb
add
dec
shl
in
loop
imul
pop
mov
out
jmp
imul
pop
cmp
xchg
lock
mov
lcall
test
mov
push
sub
jo
in
jb
call
or
pop
push
clc
sbb
sbb
mov
decl
aam
adc
stos
push
dec
add
mov
inc
mov
sbb
inc
mov
jg
stc
daa
xchg
pop
mov
cmp
and
clc
pushl
jne
iret
sub
mulb
imul
mov
into
or
adc
cmpsb
faddl
sbb
loopne
call
jg
add
mov
rorl
inc
lods
and
hlt
popf
cwtl
pop
idivl
add
call
sub
inc
les
jne
test
xor
xchg
mov
mov
ss
push
lcall
fwait
lahf
dec
mov
mov
adc
test
inc
adc
lods
dec
sub
jmp
ret
inc
pop
sbb
or
fs
cwtl
aaa
sub
xchg
sub
xchg
incl
fiadds
mov
push
sub
ret
mov
fld
ljmp
push
subb
flds
sahf
cltd
xchg
pop
adc
inc
and
sbb
in
mov
cld
call
jl
rolb
shlb
and
fidivs
std
mov
idiv
decl
sbb
push
xchg
movsl
or
inc
xlat
push
cli
lock
dec
into
sub
inc
scas
imul
sub
push
imul
dec
lds
lcall
lea
std
xchg
call
push
je
rcrb
outsb
cmp
or
out
jns
pop
sub
or
decl
mov
les
jmp
ret
in
cmp
adc
mov
mov
jg
lock
shl
lods
cmc
add
out
add
push
add
add
sbb
adc
fmuls
sbb
mov
jmp
pop
or
lret
fiadds
out
loope
test
xchg
mov
aaa
decl
das
push
testl
mov
pop
add
lcall
popf
rorb
pop
push
inc
jno
cmp
xlat
stos
pop
lods
cmp
aaa
leave
loopne
lods
mov
scas
fdivl
loope
outsl
add
cmp
mov
imul
cld
inc
jbe
mov
lret
jp
mov
xor
sub
mov
lcall
cmp
pop
jne
lea
xchg
push
cmpsb
push
sub
sub
ljmp
adc
mov
jb
dec
test
pop
neg
mulb
incl
mov
and
int
test
rclb
or
call
xchg
ds
dec
xchg
subb
push
dec
push
jg
fs
shl
pop
push
test
cmp
dec
out
mov
dec
dec
mov
int
gs
decl
adc
dec
cld
call
sub
add
sbb
outsl
stos
xor
and
insb
push
scas
rcll
lret
xchg
mov
lret
sarl
cmc
inc
das
or
cmp
push
pop
cmp
mov
bound
lods
pop
sub
mov
push
add
decl
fcoml
pop
push
sbb
out
lods
sbb
pop
jnp
lea
and
and
mov
call
jecxz
cmpsl
shrb
lock
leave
stos
xchg
push
fisttpl
sub
jo
xchg
clc
call
mov
inc
add
mov
jne
mov
push
jge
mov
mov
fimuls
loopne
iret
jg
dec
shrb
lahf
std
js
loope
and
sub
xchg
pop
and
incl
xor
lods
faddl
fbld
jmp
gs
push
addr16
test
sbb
lcall
dec
cltd
insl
push
lea
cmpsb
popa
pop
ja
and
sahf
dec
call
loope
and
jg
or
inc
adc
pop
loope
xchg
lea
or
sbb
and
clc
adc
adc
dec
xor
jg
push
jle
cwtl
rorb
int3
pop
inc
test
mov
adcb
mov
ja
dec
add
das
xchg
pushf
inc
cmpsb
cmpsl
add
outsl
es
les
ror
decl
mov
cmc
std
mov
loop
pop
mov
pop
jbe
xchg
push
jmp
addr16
ud0
pop
ljmp
xchg
inc
cmp
aad
lea
xor
mov
es
jmp
je
cwtl
sub
xchg
cs
pop
jmp
inc
cmp
or
dec
pushf
push
sbb
lcall
mov
roll
out
test
pushl
xchg
add
sbb
mov
mov
push
iret
pop
fistpl
inc
in
xchg
movsb
call
cmpsb
xchg
jg
outsb
lods
push
or
cmp
push
imul
fcoms
jg
fdivrl
add
xchg
sbb
pmovmskb
mov
mov
add
aaa
out
lahf
sti
outsl
mov
ja
sarl
lea
repnz
mov
fwait
rcrl
cmpsb
inc
add
xchg
outsb
dec
xchg
push
dec
pop
xchg
lock
das
std
out
in
cld
clc
xorl
inc
inc
stc
add
jecxz
loope
jl
sahf
add
jl
cmp
add
and
sbb
fucomp
lcall
and
enter
hlt
mov
cli
xor
jmp
or
sbb
xor
push
int
fnstsw
ficoml
inc
aam
cmpsb
adc
xchg
jg
ljmp
je
cmp
or
push
movsb
popa
mov
cld
test
outsl
test
call
add
cmp
and
enter
xchg
cmpl
aaa
mov
lret
mov
jg
sub
cmp
in
mov
add
jg
sub
call
push
sahf
jecxz
or
pop
cmpsb
aaa
enter
incl
xchg
mov
jnp
dec
jl
ret
mov
mov
call
call
cwtl
push
or
or
and
fbld
or
push
dec
pushf
scas
repz
lods
loope
fdivr
sub
push
lret
mov
push
push
cmp
add
idivl
fiadds
jp
fdivr
decl
or
inc
mov
cld
adc
std
dec
mov
and
jns
das
mov
or
xor
xor
repnz
jmp
pop
stos
cmp
inc
cmp
shlb
jl
jo
sub
loopne
pop
loop
gs
call
dec
repz
mov
in
push
cli
in
scas
scas
movsb
xchg
push
lahf
fldt
das
daa
pop
lcall
into
jb
sbb
jo
jg
out
mov
cli
jg
fisubrs
pop
pop
pop
xchg
sub
pop
jecxz
xchg
sbb
mov
push
and
es
sti
xchg
push
in
mov
add
jo
xchg
xlat
push
dec
pushf
jns
aad
icebp
mov
ret
jmp
push
push
iret
in
pusha
test
adc
sahf
mov
mov
sbb
incl
xchg
rcrb
clc
lahf
mov
aas
mov
and
lret
push
movsb
cmc
mov
jmp
pushf
enter
decl
add
gs
xchg
mov
fnstenv
push
out
pusha
int3
not
movsb
in
cmp
dec
and
mov
mov
xor
sbb
or
sbb
stc
ds
xorl
mov
cmp
pslld
and
push
jl
cmp
push
outsl
pushl
xorb
inc
jp
pop
ljmp
movsb
pop
shlb
in
ret
call
add
mov
sbbl
adc
aas
or
pop
push
mov
xlat
mov
pushl
data16
inc
jnp
or
pop
dec
add
adc
popf
inc
cmp
decl
out
mov
aam
inc
nop
mov
jb
jp
mov
fisttpll
rcrl
loop
fwait
or
jg
call
cmpsl
out
cli
out
inc
jmp
or
push
hlt
loopne
adc
sbb
aam
xchg
ja
push
test
inc
jb
add
ds
or
dec
push
in
xchg
into
stos
iret
sar
incl
movsb
jne
dec
push
push
cs
mov
jno
jbe
mov
add
pop
leave
sahf
mov
lahf
cmp
mov
jg
xchg
adc
shll
xchg
lock
push
and
insl
incl
pop
fdivr
pop
cwtl
pushf
add
nop
mov
cld
mov
adc
lahf
jle
std
dec
sbbl
adcl
cld
inc
movsb
int3
loope
aam
lea
aaa
fimuls
cmc
out
adc
sub
xchg
jne
and
cli
ret
mov
ds
lcall
scas
sbb
insl
add
mov
jge
xor
pop
ja
xchg
imul
or
call
xor
jno
and
xchg
leave
cmpl
push
sti
inc
push
jns
inc
call
xchg
repz
dec
sub
fs
push
mov
dec
es
imul
mov
cld
jo
bound
repnz
stos
cmp
push
jb
jnp
hlt
or
pushl
ljmp
dec
bound
cmp
movsl
adc
jl
and
mov
xor
or
pop
mulb
xor
jns,pn
push
inc
popf
mov
fstpt
insl
int
lret
rol
cmpl
cli
push
test
jnp
and
or
mov
shll
mov
aad
cmp
sbb
mov
push
xchg
sbb
or
push
cmp
test
push
rclb
adc
ds
cmpsl
xor
push
and
aaa
cmp
dec
add
mov
mov
lcall
aas
xor
adc
fiadds
lcall
or
xchg
mov
push
mov
jg
mov
lock
dec
jns
pop
pop
or
jl
pop
sub
mov
xor
nop
mov
ljmp
dec
lods
not
mov
scas
inc
mov
fisubl
aaa
leave
test
mov
xchg
adc
adc
fsts
cmp
out
outsl
xchg
jne
push
inc
clc
jle
loope
movsl
call
popa
mov
inc
nop
mov
xchg
add
mov
sub
pushl
cwtl
loop
push
call
fld
test
pop
rcrl
xor
and
mov
mov
shr
stc
or
mov
mov
push
cmp
sub
mov
xchg
movsb
lock
loope
xor
lds
cmpsl
sahf
movsl
pushl
mov
ficoms
lret
lock
xchg
sub
fstl
pop
dec
je
adc
hlt
pop
ljmp
clc
sub
jns
sbb
ds
lcall
insb
mov
jmp
outsb
xchg
mov
adc
dec
mov
popa
xor
push
sbb
mov
cltd
sbb
aad
test
insb
jnp
adc
push
popa
rolb
sar
leave
mov
neg
or
lods
jmp
push
dec
adc
call
adc
or
inc
mov
add
repz
adc
push
popf
mov
sbb
cli
inc
lock
jp
cs
movl
inc
sbb
sti
cmp
dec
mov
inc
in
ret
inc
scas
xchg
cwtl
dec
mov
dec
cmp
inc
fdivr
xchg
mov
ds
jge
loopne
sarl
rorb
and
bound
orl
lcall
sub
es
ss
pop
pop
cld
mov
hlt
les
fdivr
inc
xchg
call
cmp
jb
test
fdivrs
daa
inc
aam
mov
inc
js
mov
pop
popa
fstpt
sti
and
hlt
insb
push
nop
lret
or
lcall
aas
ljmp
jp
xor
rol
pop
and
push
call
addr16
add
jmp
inc
fidivrs
aam
cmp
es
cmc
cltd
std
or
jns
jno,pt
lea
sbb
inc
xor
dec
xchg
adc
cmp
cmp
decl
hlt
jb,pn
mov
push
cmpsl
scas
lock
sahf
decl
lret
pop
dec
pop
cwtl
jl
scas
push
shlb
ljmp
in
fs
cmp
ljmp
fcmovnu
sub
and
mov
xchg
das
roll
je
add
stos
sbb
aad
xchg
cmp
incl
in
daa
inc
add
pop
sub
popl
pushl
dec
sub
lret
aam
jae
mov
decl
xlat
ja
imul
jno
push
test
scas
cmc
mov
mov
or
nop
int3
mov
data16
fcoms
lcall
xor
dec
sub
mov
jnp
sub
js
bound
pushl
ljmp
cltd
es
imul
sar
jbe
push
cmp
loope
popa
fdivrs
nop
xor
add
push
sub
cmp
ljmp
mov
mov
mov
push
dec
leave
arpl
mov
jmp
inc
cmpsl
jbe
mov
jno
js
in
push
movsl
in
rorb
fsub
cmpsb
dec
mov
sub
ljmp
jbe
loope
ret
mov
inc
add
fdivr
lahf
jo
fcmovb
or
mov
rclb
add
inc
mov
mov
mov
add
cmp
ficoml
pusha
pop
push
and
cld
div
enter
lods
cmp
pusha
cmp
mov
paddsb
inc
out
xchg
and
xor
test
push
xor
cltd
loop
out
imull
testb
outsl
dec
adc
jl
or
dec
bound
xchg
lcall
fistpl
adc
or
xlat
aaa
fadds
adc
cli
pushl
rcr
sub
dec
pop
mov
pop
loop
sub
popf
jg
orl
jge
dec
push
jmp
push
mov
mov
mov
lcall
in
bnd
pop
out
xor
mov
les
stos
pushl
dec
add
pop
xchg
push
push
jns
fidivs
cs
push
xlat
mov
call
push
jmp
mov
fsub
cmp
rcrl
decl
leave
gs
pushf
dec
mov
and
mov
ljmp
mov
mov
xchg
jg
idivb
icebp
and
mov
clc
lcall
adc
sub
iret
outsb
xchg
cltd
popa
loope
insb
pop
mov
iret
fiaddl
xlat
stos
out
je
or
clc
sbb
lcall
push
idivl
sbb
iret
adc
ja
into
and
or
pop
sarb
xchg
push
mov
or
pop
push
mov
or
sar
out
cli
jl
pop
xor
dec
push
sub
ljmp
cmp
call
adc
testb
pop
dec
adc
icebp
dec
pop
ret
jnp
or
push
shrl
lcall
cli
mov
jns
push
movsb
sub
pop
jns
mov
lds
inc
jge
mov
ret
pushl
pop
cltd
or
in
cmpsl
lods
sbb
xlat
rclb
gs
ret
test
xor
jmp
out
aaa
or
dec
mov
or
pop
push
add
mov
mov
decl
sbb
loop
leave
scas
in
sub
out
or
ljmp
add
out
cltd
js
or
rorb
sti
push
dec
sbb
pushl
cmp
mov
xchg
les
arpl
pop
inc
jmp
xchg
in
pusha
into
cwtl
push
nop
out
incl
jle
jmp
jl
das
incb
fimuls
add
add
cli
ret
stc
jb
pop
sbb
imul
cmpsl
ret
data16
cmp
mov
sub
ljmp
dec
push
lods
mov
mov
mov
inc
pop
mov
bswap
xchg
or
test
sub
call
push
daa
inc
sbb
js
jmp
fcomp
fldenv
out
adc
imul
jne
inc
or
movsl
fisttpl
and
or
ljmp
add
push
stos
pop
xchg
fnstsw
fsubrl
push
clc
call
pop
dec
xor
pushf
inc
and
lcall
inc
cmc
cmc
loop
dec
jle
fs
call
mov
sahf
dec
out
daa
adc
lcall
jno
mov
cmp
aaa
sub
scas
test
pop
in
lods
aaa
cmp
xor
lock
lcall
xchg
push
aad
test
pop
jp
cmp
out
sbb
pop
and
xor
pop
loopne
nop
inc
inc
push
test
and
dec
push
es
mov
push
stos
adc
int
fwait
xchg
data16
roll
sub
dec
into
std
xchg
xchg
into
nop
mov
outsb
out
and
mov
mov
mov
pop
loopne
cli
sbb
dec
loop
cmc
call
sbb
stos
and
addl
nop
mov
ds
imul
mov
fdivrp
mov
lods
push
mov
ss
inc
movsb
push
inc
adc
lahf
mov
popf
mov
aaa
inc
shrb
jle
push
push
cmp
stc
call
xor
nop
push
ds
stos
shll
leave
scas
test
stos
pop
jnp
out
jmp
pushf
jb
or
addb
lcall
pop
jnp
dec
xor
xchg
dec
inc
fbld
loopne
add
sti
push
test
ljmp
lret
jle
rcll
push
ret
adc
pop
mov
or
or
les
call
and
ret
cmpsl
addl
out
cltd
jg
in
cmp
dec
mov
jl
inc
xor
pop
mov
mov
push
jno
pop
fldcw
aas
adc
or
notb
outsl
dec
test
sub
shlb
incl
outsb
or
mov
pop
iret
cmp
iret
fs
push
sbb
pop
dec
es
in
ljmp
add
lret
adc
push
andb
int
push
pop
loope
sbb
ret
adc
pushl
and
push
push
xchg
ret
sbb
pop
insb
jb
movsl
divb
out
jb
dec
int3
jo
add
rep
dec
test
jmp
sahf
mov
xchg
repz
inc
stos
or
pop
inc
les
jbe
dec
into
or
incl
dec
fbld
mov
std
mull
popf
xlat
jo
mov
pusha
and
pop
sub
mov
sub
loopne
rclb
and
xor
test
icebp
cmp
int3
push
add
xchg
icebp
push
outsb
lcall
cmp
inc
pop
mov
jmp
push
hlt
xor
mov
or
nop
adc
push
call
pop
ljmp
into
fisubrs
push
outsl
xchg
sub
and
cs
jns
out
cmp
in
call
xchg
adc
pop
adc
xlat
decl
jle
fistps
sbb
inc
cmp
push
call
mov
pop
jge
les
rorl
repnz
in
inc
inc
mov
sbb
sbb
clc
inc
pop
cmp
cwtl
add
push
or
in
repnz
ljmp
stc
push
out
negl
xor
mov
xchg
sub
push
cli
movsl
sbb
and
cmp
adc
int3
pop
xchg
jmpw
out
xlat
idivl
pop
add
sar
jg
into
clc
push
and
cli
mov
push
lods
xor
or
jae
cmc
pushl
subb
test
aad
pusha
rcll
or
call
jl
in
cli
mov
fbld
push
inc
into
test
loope
xlat
or
call
push
decb
mov
lahf
cmpsl
xor
add
test
jnp
lcall
cmc
sbb
aad
jge
ss
add
pop
pushl
or
cmpsl
repz
sbb
inc
sahf
int
xchg
pop
insb
outsl
ret
shrl
push
or
aas
ljmp
in
xchg
sbb
pusha
loop
mov
scas
or
push
push
sub
xchg
sbbb
add
lcall
outsl
cmc
sub
xchg
push
loop
dec
mov
mov
negb
dec
or
cmp
ret
and
std
hlt
cld
rclb
ljmp
jb
out
fstl
sub
mov
jne
cmc
xor
mov
cli
and
cmp
scas
sahf
sub
lea
ljmp
decl
setl
and
pushf
mov
in
movsb
out
or
jns
out
cli
mov
loop
pop
out
push
or
jl
mov
sbb
jg
jno
push
fsubrs
shlb
dec
jbe
pop
js
push
cmp
sub
decl
bound
fisttps
fistpl
fwait
push
pop
into
scas
daa
int
mov
xchg
aam
jmp
jns
sbbl
sub
iret
icebp
push
inc
jl
pop
mov
mov
push
cmpsb
out
fidivrl
push
pop
push
es
push
ljmp
push
lds
push
jo
push
mov
mov
not
scas
jnp
jnp
mov
sub
push
ret
rcll
xchg
in
xchg
dec
adc
sub
sar
lcall
jae
and
jl
mov
dec
cmp
jl
mov
mov
sbb
leave
mov
mov
pushl
or
out
in
icebp
aas
push
ja
cld
inc
sti
cwtl
ja
into
jp
and
enter
sbbl
lods
lsl
adc
jmp
call
ret
in
sub
arpl
cli
jo
xor
out
add
mov
push
popf
push
mov
lcall
and
sub
adc
mov
lcall
and
movsb
sub
or
add
mov
add
push
inc
mov
data16
lods
sbb
icebp
decl
imul
adc
int3
pusha
adc
repnz
fimull
jg
je
jo
mov
and
jge
lcall
shr
outsl
ja
lret
test
cmpsl
xor
rorb
and
addr16
testl
cmc
mov
movsl
movsb
gs
inc
xor
xlat
popf
hlt
movsl
mov
push
or
dec
sbb
lcall
mov
test
leave
add
xadd
in
je
mov
les
fistps
mov
in
mov
loope
fmull
cmp
fbstp
sbb
inc
lock
add
daa
in
jg
mov
fwait
jnp
sbb
cmp
test
sub
dec
adc
hlt
push
in
incl
negl
push
dec
cmp
or
call
mov
popa
sbb
or
dec
pop
push
jno
xor
cmpsl
popa
decl
loopne
mov
sbb
cmp
push
inc
fisubrl
std
jg
sub
popf
mov
mov
scas
dec
cmp
cld
lcall
mov
fbstp
jl
jmp
push
xchg
incl
fldcw
out
mov
je
pushf
sbb
ret
push
xchg
mov
shl
dec
repnz
push
mov
in
pushf
add
cli
cmp
and
lcall
sbb
jg
cmp
aaa
mov
fldcw
dec
lock
jg
xchg
xchg
stos
sub
lcall
test
ret
jae
pop
mov
add
mov
fs
jp
cld
mov
mov
push
lock
pop
out
popf
nop
add
sub
add
ljmp
aaa
int3
pop
ljmp
push
call
pop
inc
add
jmp
pushl
fcoms
xor
xchg
xor
mov
in
cltd
testl
and
push
jbe
mov
or
ret
cmp
and
pushl
lahf
inc
inc
cmp
jmp
test
push
jp
sti
mov
inc
inc
jmp
cmp
shr
lcall
loop
adcl
jecxz
lods
mov
sub
or
lock
jp
mov
xchg
cld
mul
ret
or
mov
out
mov
xor
push
or
cmp
test
adc
lock
ror
push
mov
lcall
int3
mov
or
inc
shrb
cli
xchg
sub
shlb
mov
mov
fistpll
pushw
or
or
sarl
xchg
std
jbe
ljmp
out
ficoms
mov
add
nop
pushf
ret
icebp
adc
psubb
pushl
push
test
sahf
in
out
push
jo
mov
xor
bound
jns
mov
ret
dec
cmp
jmp
jbe
push
xchg
lret
and
mov
mov
scas
popf
pop
decl
fwait
jo
jns
ficoms
mov
mov
in
sbb
repnz
inc
aaa
cmp
push
out
clc
call
test
mov
popa
insl
imul
push
dec
cltd
xor
ljmp
and
cmp
gs
insl
or
shrl
ror
cmc
cmp
dec
xchg
enter
nop
and
enter
xchg
xor
xor
movsb
mov
mov
cmp
incl
cld
mov
into
sub
jae
neg
xchg
pop
mov
pop
decl
add
popa
cltd
std
mov
leave
mov
mov
jne
xchg
dec
clc
adc
ja
aaa
pop
push
dec
divb
push
jmp
mov
js
sarl
lcall
or
sbb
icebp
sbb
call
mov
mov
data16
adc
or
lret
cmp
mov
fnstsw
sub
rcrl
nop
and
push
sti
jb
shrb
decl
dec
stos
mov
insb
push
inc
add
imul
mov
jo
mov
out
pop
add
incl
jo
xor
lods
imul
pop
mov
xor
pop
lea
jne
or
cmp
pushl
loop
fmulp
xchg
fstl
xchg
aas
sbb
rcr
and
fsubs
in
adcl
imul
jmp
pop
movsl
ftst
gs
shrb
test
pusha
test
fildl
inc
lds
pop
jae
jno
mov
pop
cmpl
lahf
mov
inc
divl
ss
decl
sub
jb
inc
add
inc
xor
lods
inc
xor
pop
ljmp
dec
loope
inc
inc
cmp
pop
je
test
nop
incl
ja
out
out
aaa
pop
call
sarl
mov
fistl
pushl
ret
pop
xchg
push
xlat
jns
adc
ja
add
dec
inc
cld
js
add
cs
call
adc
pop
das
jl
xor
mov
ss
sbb
in
inc
rep
cli
dec
dec
fmul
orb
jp
sarl
lahf
testb
push
je
imul
popa
jp
inc
arpl
push
sar
inc
lds
cmp
in
dec
out
mov
mov
lds
stos
fs
or
rcrb
cmp
sub
mov
push
jle
fimuls
test
dec
mulb
test
or
inc
repz
mov
cs
addb
ljmp
loop
mov
orl
or
push
or
mov
mov
and
loopne
mov
fcomps
xchg
push
fdivr
out
ret
or
into
mov
inc
xchg
leave
sbb
inc
mov
call
sbb
push
push
adc
mov
das
data16
jle
lahf
pop
jl
mov
incl
cmp
cmp
push
pop
int
jecxz
aad
sub
addl
lret
jns
cli
jmp
pop
pop
ja
sub
sub
inc
pop
jg
divb
arpl
and
sub
adc
xchg
inc
jnp
stos
rorb
push
out
xchg
jne
jmp
pop
pushf
xor
adc
cmpsl
test
xlat
adc
mov
ljmp
lahf
enter
mov
cs
shrb
shr
and
sub
incl
lea
jecxz
stc
outsb
sar
outsb
popf
sahf
cmp
hlt
lcall
lret
mov
xchg
sub
lret
adc
jg
js
mov
out
push
add
ret
incl
mov
mov
loopne
xchg
out
fiaddl
iret
mov
imul
jg
repnz
out
mov
jg
loope
out
xchg
mov
sbb
fcomip
das
sub
or
mov
adc
loopne,pn
scas
inc
jecxz
xchg
pop
push
cmpl
mov
scas
scas
lds
lcall
inc
cmp
fwait
cs
jl
mov
ja
idiv
lds
push
pop
dec
fildll
xor
outsl
push
sbb
sub
jae
lret
dec
xor
test
push
sub
jbe
and
lock
ret
jmp
nop
js
int3
pop
call
decl
sbb
rcrb
xchg
in
inc
lcall
fwait
data16
mov
out
daa
stc
push
push
or
mov
ss
stos
add
xchg
bound
xor
call
pop
es
lret
cmpsb
jb
or
popf
repz
pop
sub
lds
ss
mov
xchg
fs
jbe
aam
shl
in
lods
test
xchg
cwtl
pusha
pop
dec
mov
aad
sbb
movsb
jae
pop
mov
sub
subl
mov
jnp
test
inc
push
repz
test
jb
aas
adc
roll
faddp
pop
out
pop
add
xchg
into
or
ja
sub
clc
pushl
inc
sti
and
add
fldt
je
cmpsb
sub
pushf
xor
mov
call
pop
outsb
sub
pop
and
jbe
mov
popa
pop
adc
lcall
add
push
cli
outsl
rcr
mov
rcll
sarl
pop
lcall
xor
out
fcompl
sub
jg
sub
sub
mov
push
or
adc
mov
lea
insb
iret
mov
loop
aad
ds
mov
and
loopne
lock
xchg
mov
add
in
ror
in
cmp
pushl
loopne
pop
fsubp
popa
in
mov
xorb
push
in
mov
xor
jmp
ret
and
cltd
dec
push
jmp
jae
scas
in
subl
jg
lods
ja
shrl
ret
push
jnp
mov
push
fldenv
xchg
cld
imul
out
cli
filds
lahf
das
lods
mov
inc
pop
sub
incl
sbb
push
mov
repnz
xchg
mov
push
sbb
pop
cmp
clc
in
test
jmp
sub
inc
adc
jbe
int3
and
or
jmp
mov
cmp
lret
sbb
mov
cld
push
pop
ja
pop
jo
fdivl
cli
daa
lcall
xor
pop
sbb
mov
xchg
cmp
fbld
xor
dec
int3
adc
push
dec
adc
sti
pushl
mov
clc
mov
mov
dec
cmc
fcmovbe
in
fsubrs
sbb
call
pop
data16
lods
mov
fiadds
jecxz
imul
repz
cmp
sub
add
cld
mov
inc
xchg
mov
adc
cmpsl
shlb
dec
mov
xlat
sti
adc
and
push
and
inc
rcll
shrb
test
lahf
dec
ret
xor
ret
decl
push
movsl
jl
iret
iret
out
cmpsl
push
xchg
adc
fisttpll
jae
addl
add
mov
jge
iret
mov
decl
and
or
sar
notb
sub
js
in
cld
jg
pop
iret
xor
xchg
test
push
cmp
cmpsb
jae
mov
pushl
sub
push
mov
out
mov
mov
mov
pushf
mov
clc
call
push
cwtl
scas
jae
je
adc
arpl
call
lret
dec
call
addl
inc
xorb
pop
arpl
inc
or
dec
clc
jmp
ret
add
xchg
mov
and
xor
incl
mov
jno
xchg
mov
cwtl
xchg
les
roll
push
jbe
cmp
js
sti
shll
test
pop
cld
jns
aaa
xchg
shlb
in
push
xchg
jbe
outsl
call
add
inc
mov
adc
repnz
add
pop
mov
repz
cwtl
lcall
lods
sahf
xchg
aam
sub
push
xor
lods
add
loop
push
mov
call
andb
sub
sub
xlat
adc
or
shlb
lcall
mov
in
push
add
xor
out
and
out
cmovnp
push
cmpsb
out
dec
in
lcall
sub
roll
push
xor
sahf
cmpsl
movsb
fldt
add
cmp
roll
add
and
inc
into
into
or
repz
add
mov
jg
mov
cltd
push
dec
js
insb
scas
test
lret
ficoml
cmp
mov
adc
adc
sub
xchg
add
fsubp
add
mov
push
insb
xor
sub
jnp
mov
cmp
popa
dec
jg
and
aas
cmp
push
popa
or
sub
mov
inc
jnp
les
ds
insb
das
lret
ljmp
add
push
mov
cmp
add
daa
aaa
int
in
or
scas
cli
call
dec
jmp
xchg
xchg
mov
fwait
pop
mov
push
clc
incl
loope
cmpsl
xchg
adc
outsb
xor
repnz
ljmp
insb
movsl
cmpsb
sub
int3
das
out
or
dec
mov
dec
push
dec
cmp
dec
ret
cli
pushl
scas
daa
mulb
lret
mov
mov
aaa
sub
lods
cwtl
mov
das
xor
ljmp
mov
sbb
outsl
leave
inc
out
xor
sub
cs
lcall
lods
sbbb
inc
pop
insl
daa
aam
adc
rcll
insb
xchg
and
jg
jge
gs
push
je
ja
out
repz
push
push
mov
rclb
data16
mov
sbb
cmp
insl
mov
jl
mov
lcall
pop
add
jno
xor
cld
adc
sahf
in
pop
ret
mov
pop
lock
mov
fiaddl
fsubrl
insb
jne
cmp
imul
mov
jnp
xor
insb
inc
scas
cmp
in
sbb
je
mov
dec
adc
inc
push
jl
add
lcall
pop
push
icebp
xorl
mov
sbb
testb
repnz
jl
jb
call
xor
fistps
mov
push
ficoml
dec
and
push
xchg
scas
mov
pop
or
jnp
das
pushf
fdivrs
mov
popa
adc
cwtl
out
mov
hlt
pushf
inc
popf
adc
jae
and
popf
imul
lcall
adc
or
fcoml
jo
sbb
pusha
pop
out
mov
call
pop
int
lods
cmpsb
mov
lds
jmp
loopne
mov
push
dec
cmp
enter
and
xchg
pushl
inc
xor
int
fsts
call
xor
jmp
aam
xchg
pop
rol
fimull
aad
jmp
imul
fistps
in
fmuls
xlat
pusha
or
outsb
insl
repnz
mov
jg
std
fadd
push
inc
jno
vucomisd
aaa
xchg
scas
sub
add
push
cs
cli
pop
push
call
pushl
cmpsl
jo
cwtl
cmp
in
sarb
nop
outsl
imul
mov
call
mov
jo
sbb
insl
jle
cli
pop
scas
push
aas
ja
add
test
mov
gs
aaa
lret
incl
and
imul
mov
adc
scas
xchg
cltd
je
jl
lcall
dec
incl
cmpsb
das
iret
push
mov
mov
inc
push
scas
aaa
test
cld
xchg
and
incl
test
and
push
aam
push
mov
fwait
cwtl
push
shrl
and
aas
xor
jne
ljmp
xchg
addr16
jb
jp
mov
and
pushw
shrb
lahf
pop
into
mov
sbbl
loope
push
test
inc
cmp
sar
ljmp
sub
shrb
push
cltd
xor
or
aad
inc
dec
adc
jge
sbb
inc
sti
lods
push
sbb
and
mov
insb
fcomi
or
mov
xchg
pop
lcall
mov
xchg
popf
cmp
add
mov
dec
inc
mov
arpl
scas
cmpsb
aas
sub
inc
sbb
xchg
movb
sbb
mov
mov
cmp
xor
push
add
xchg
int3
pop
push
pop
fwait
je
cld
sar
or
pop
out
xchg
loop
decl
pop
pop
in
mov
xor
fsubs
jne
incl
or
cli
data16
stos
xor
xchg
out
mov
fnstcw
sahf
ljmp
lar
outsb
xchg
out
std
cld
ljmp
aam
mov
jmp
repz
ss
out
sub
aad
sarb
inc
hlt
pushl
or
sbb
lahf
xor
fsubs
dec
js
fisttps
add
fnsave
stos
pop
les
push
jb
loope
cwtl
hlt
pop
insl
sbb
std
push
pop
dec
jge
adc
imull
mov
scas
or
test
loopne
adc
pop
std
adc
cmp
jg
add
xchg
cs
sub
lcall
jb
xor
pop
jbe,pn
push
btc
fwait
sbb
dec
jle
jo
sub
add
sbb
sub
jbe
iret
add
xor
fsubrl
rolb
cmp
jae
mov
test
lock
call
cld
lods
mov
outsb
pop
jnp
mov
push
sbb
inc
push
ret
cmp
arpl
and
ljmp
cmp
enter
sub
push
mov
xchg
test
inc
pusha
cmpsb
cmpl
pushl
cwtl
sub
adc
insb
pop
push
ss
xchg
stos
inc
dec
ret
add
fimull
push
cmp
dec
and
incl
sarb
ficoml
cli
lret
rorl
ficoms
lcall
inc
xor
xor
sti
ss
push
lret
stos
pop
jmp
or
add
ljmp
int
repz
xlat
packssdw
dec
aaa
out
mov
and
decl
je
outsb
sub
xchg
sub
dec
or
idiv
aaa
dec
cmpl
frstor
fisttps
aad
nop
mov
fisttpl
lea
jg
lods
shrl
fwait
cmp
jge
mov
cmpsl
cwtl
jge
xchg
xor
int
lcall
add
icebp
pop
outsb
lds
out
xchg
test
es
iret
sbb
sti
incl
inc
xchg
test
dec
icebp
inc
shlb
xor
mov
lahf
ja
pop
and
push
xor
add
mov
js
test
pop
cs
xchg
lcall
stc
lea
dec
fidivrl
pop
popf
and
mov
adc
mov
imul
fwait
test
and
es
xchg
add
bound
or
mov
nop
xchg
xchg
ret
adc
and
loopne
cmp
pop
add
repz
add
in
pushf
mov
mov
xchg
mov
fcmovnb
adc
mov
pop
or
call
xor
test
xor
fs
mov
jb
stos
sub
sbb
ljmp
stc
adc
add
cmp
orb
inc
repz
sarb
dec
popf
jo
orl
divb
add
fisttps
jecxz
or
fisttpll
dec
inc
jb
or
inc
pop
std
lcallw
push
push
das
popf
jno
outsl
fbstp
mov
xor
enter
pusha
sub
aam
out
mov
aas
jne
call
push
arpl
xchg
xchg
stos
stos
cmpsb
add
xor
sbb
ljmp
and
iret
dec
fnstenv
pop
lods
mov
or
inc
mov
adc
and
mov
or
xchg
mov
push
sarl
das
jge
xor
scas
pop
jle
enter
test
aas
dec
push
into
ret
rolb
in
les
sbb
and
sarb
sub
cli
cmp
pop
and
sub
imul
ljmp
fildll
addr16
outsb
mov
into
mov
xchg
jo
inc
inc
clc
sbb
icebp
jp
push
out
xor
aam
dec
ljmp
notb
lods
mov
adc
call
mov
clc
jp
pmaxsw
sbb
cmc
xlat
push
ret
lds
popf
push
push
pop
jge
push
pop
pushl
jle
divb
pop
cmp
mov
movsl
in
add
lods
sub
lock
insb
dec
pop
int3
mov
sar
mov
add
stos
cmp
ss
xlat
dec
fldt
and
mov
add
decl
in
je
mov
rorl
mov
cmp
divb
xchg
clc
mov
lcall
fcomip
sub
in
add
icebp
into
rcrw
xchg
or
mov
lahf
in
lahf
xor
lcall
lea
lods
xor
mov
and
dec
push
cs
push
lods
mul
pusha
fdivs
cmpsb
popa
ret
ljmp
xchg
jns
sbbb
fsub
xchg
loope
test
ret
push
lods
out
pop
sbb
xchg
add
lock
push
std
mov
popa
scas
add
and
incl
clc
or
and
dec
subb
in
xor
pop
decl
dec
aad
movsl
in
inc
mov
out
test
sub
adc
xor
cli
sbb
jmp
and
insb
test
or
lods
pop
or
inc
xchg
mov
out
xchg
incl
loop
test
imul
lret
push
xchg
bswap
sub
push
push
call
fisubrl
or
inc
movsl
dec
je
xor
add
lret
movsl
lcall
clc
cli
add
aad
and
push
sbb
cli
mov
fiadds
sbb
mov
ljmp
sbb
stos
cs
sbb
and
sub
push
ret
int
ja
loopne
mov
incl
mov
rcr
inc
mov
adc
jno
fstps
lcall
rorb
xchg
xchg
cmc
sbb
scas
mov
mov
sub
mov
sub
jl
jmp
sahf
fidivs
cmp
dec
adcl
xor
loopne
dec
call
cmpsb
cld
stc
mov
imul
mov
pop
loopne
mov
push
lock
enter
data16
jb
mov
dec
mov
lcall
in
imul
dec
or
jae
mov
es
push
aas
adc
lcall
rolb
in
pop
jne
es
addr16
stos
lret
leave
fsub
cmc
add
subb
ljmp
call
or
outsl
repnz
push
js
push
mov
icebp
fists
sbb
push
push
dec
cwtl
mov
shll
sbb
incl
lea
and
icebp
cli
pushf
mov
leave
incl
cmc
fnstcw
add
rcll
xchg
mov
addr16
or
inc
sbb
mov
mov
cmp
xchg
xchg
daa
lahf
ljmp
cs
addr16
sbb
dec
test
in
lock
rcll
add
psllq
jle
pushf
cwtl
xchg
adc
ljmp
ret
daa
filds
mov
xchg
adc
fcompl
mov
jo
adc
cmp
lcall
dec
ficoml
int
inc
mov
adc
inc
jnp
inc
and
shrb
xor
fimuls
lcall
ja
insl
xor
in
sbb
pusha
sub
aaa
push
cwtl
mov
mov
out
ljmp
inc
sub
ja
iret
leave
sub
add
gs
add
ret
scas
stos
sbb
xor
xchg
fs
xchg
add
xchg
inc
lahf
call
push
jnp
pop
dec
mov
jl
fidivs
adc
js
lods
mov
ja
pop
add
sahf
cs
push
pushl
or
sbb
mov
rcr
loop
rcr
cmp
cmpsb
aas
enter
loopne
and
mov
jecxz
lret
cmpsl
dec
stc
sub
aas
out
lret
imul
cs
ljmp
out
mov
sbb
aas
dec
or
mov
jnp
mov
push
aaa
mov
call
mov
cmpsl
in
jnp
cld
push
pop
push
mov
hlt
decl
mov
pop
lods
je
sbb
in
adc
cmp
mov
push
loopne
mov
jecxz
jmp
push
int
cld
jmp
mov
inc
push
mov
push
add
out
fsts
les
rcrb
lret
jg
add
xchg
test
fldenv
jmp
call
push
dec
dec
loop
jge
and
push
test
xchg
stos
jecxz
push
std
das
ficoml
push
inc
push
push
adc
pop
cmp
loop
or
mov
push
sub
or
fdivrl
repz
mov
int3
test
push
stos
sub
jae
push
dec
dec
or
jns
das
stos
into
cld
mov
inc
add
add
mov
sub
movsl
adc
lea
adc
sub
sub
xor
jae
jbe
cmp
sahf
ss
mov
push
jg
decl
xchg
cli
outsb
pop
jmp
sbb
imul
lods
mov
call
test
aam
add
inc
cmc
mov
out
push
inc
jno
sbb
mov
cmc
call
mov
fiadds
rep
std
ljmp
add
mov
fsubs
add
lret
adc
int3
pop
mov
mov
sbb
cltd
shll
aaa
lret
inc
nop
sahf
mov
jmp
leave
jle
das
mov
lahf
lds
loope
fwait
lcall
pop
popf
sahf
cmp
movsl
xor
mov
stc
cmc
repnz
hlt
rol
ljmp
jmp
lret
mov
pcmpeqw
loop
lods
lahf
aaa
imul
cld
and
movsb
jge
and
movsl
imul
call
in
int3
scas
xchg
mov
or
gs
into
xlat
sub
inc
xchg
dec
and
add
adc
cli
jmp
imul
and
imul
mov
pop
fwait
ret
aas
int3
lods
sub
fsubrs
call
pushl
and
in
int
aas
mov
loopne
mov
mov
sahf
mov
decl
lahf
sub
jmp
add
test
cmpb
in
push
rcll
xchg
loopne
sbb
dec
mov
aad
sbb
pusha
loop
rclb
jmp
aas
xchg
mov
lcall
out
jbe
lds
sbb
sbb
adc
or
push
cmc
pop
cmp
mov
iret
iret
mov
mov
mov
pop
mov
mov
repnz
ljmp
push
fstpt
aam
sbb
ret
cmp
mov
test
ss
mov
jg
test
jb
or
sub
shlb
decl
cmc
xor
or
push
clc
mov
popf
in
inc
sbb
int
add
js
jg
call
je
mov
pop
jmp
sahf
clc
xor
repz
xor
cmp
jmp
into
mov
outsl
and
dec
imul
in
icebp
pop
jecxz
push
lods
adc
ljmp
decl
div
popfw
cmpsb
lahf
aam
push
lahf
add
lahf
cmp
pop
jg
cmpsb
fadds
or
xor
mov
dec
insl
out
aam
pop
incl
pushf
cmp
clc
out
sbb
jno
shll
push
movsl
jle
cmpsb
lcall
testl
sarb
stos
sub
test
stos
pop
sti
pop
inc
fwait
movsl
popf
sbb
test
dec
pop
xor
decl
xchg
scas
sub
cmpsb
adc
in
push
sub
push
sbb
and
lock
fmuls
jle
mov
out
in
mov
jno
push
jle
add
lock
mov
sar
incl
lock
mov
mov
fnsave
xchg
call
or
test
fcmovbe
out
in
ficompl
in
das
xor
mov
in
fidivl
jno
and
data16
lcall
call
mov
lds
sbb
push
and
xchg
dec
inc
inc
jmp
idivb
jne
lcall
dec
arpl
or
xor
popf
jns
pop
add
push
xor
push
outsl
add
inc
arpl
and
xorb
daa
int3
ficoml
mov
sar
jmp
out
and
leave
push
add
add
fldl
mov
jle
push
sub
jmp
sub
clc
pushl
dec
das
jge
push
and
leave
pop
das
cmp
mov
sbb
cmpsb
sub
add
shl
ja
adc
addl
decl
jns
sbb
jb
aad
inc
arpl
sti
cmpsl
fisubrs
dec
dec
js
in
lcall
push
call
popf
sbb
loopne
fdivrl
xchg
push
adc
mov
push
ljmp
pop
repz
dec
sbb
sbb
jo
push
mov
iret
sub
cmc
xchg
inc
call
ss
int3
lods
fimuls
add
dec
xchg
rcr
mov
in
lcall
dec
es
pushl
fdivr
pushf
sti
int3
sbb
push
sbb
xchg
addb
insb
leave
repz
call
xchg
add
mov
repz
sub
and
ljmp
outsl
mov
or
jge
lcall
xchg
dec
sub
pushf
inc
xor
inc
dec
negl
sbb
das
cmp
loop
mov
decl
cmp
std
movsb
or
pushf
mov
sbb
clc
dec
cmp
jg
call
xchg
clc
mov
nop
and
add
add
push
fsubrl
pop
lods
push
outsb
call
xchg
dec
rcll
mov
rorl
cmp
scas
xlat
cmpsl
or
das
inc
cwtl
lds
shrb
jmp
leave
pop
test
mov
fsubp
adc
mov
adc
or
push
dec
cmp
loopne
fwait
push
nop
shrb
pop
or
stos
out
adc
arpl
iret
lcall
push
jbe
mov
mov
sti
pop
les
out
inc
in
or
js
jno
ljmp
out
push
pop
test
sahf
loopne
outsb
dec
or
ret
mov
and
jne
incl
cwtl
enter
insb
xchg
pop
fidivrs
fs
push
inc
sbb
jnp
xor
jl
or
push
mov
aas
jge
cwtl
in
sub
sub
jne
loopne
push
cmp
in
mov
jnp
inc
sar
outsb
movsb
mov
jmp
loop
and
jo
in
stc
xlat
rcrb
dec
xor
mov
push
sbb
or
lcall
pop
xchg
loop
or
jo
out
xor
pop
sub
sbb
jbe
cli
pop
jae
jns
or
enter
push
jecxz
jge
sarb
in
push
and
xchg
pop
jb
lds
push
test
int
fmuls
data16
sar
sbb
lcall
movsl
loopne
in
stos
sti
gs
jne
jnp
je
test
and
mov
int3
data16
xchg
subb
pop
lahf
mov
iret
lea
jno
mov
mov
shrl
outsb
js
jo
int3
lock
push
in
lcall
mov
icebp
jbe
test
ljmp
push
mov
in
dec
loop
xchg
dec
push
cld
and
jb
adc
cs
in
inc
jmp
push
push
insb
pop
outsb
enter
add
loop
ret
mov
adc
or
fcompl
loope
data16
call
pop
cmp
xor
decl
loopne
jp
shl
xchg
mov
cmp
push
mov
or
cld
cmp
int3
add
ljmp
hlt
add
cld
push
subb
loop
dec
push
mov
pusha
incl
je
int3
movsb
dec
and
mov
inc
imul
stos
xchg
mov
xchg
gs
xchg
adc
mov
xchg
cli
loopne
cltd
cmp
das
jbe
ljmp
push
sar
jnp
mov
in
aas
call
xor
jb
xchg
push
add
push
mov
inc
dec
and
das
inc
sbb
cwtl
sub
mov
cmp
clc
bound
mov
sbb
outsl
rclb
sub
sbb
push
push
enter
or
enter
nop
sar
in
push
xchg
mov
jmp
ljmp
ljmp
shlb
dec
mov
jg
cmp
loop
movsb
test
mov
lcall
inc
inc
test
push
fucomi
andb
mov
pop
mov
jecxz
lcall
out
cmp
pop
push
fsubrl
xchg
sub
push
shlb
dec
outsb
call
cmp
push
lds
imul
sar
outsl
clc
jmp
test
in
mov
push
jo
adc
in
jmp
dec
mov
cwtl
push
mov
insl
lcall
pop
scas
lret
jmp
mov
add
aam
sub
in
pushf
mov
and
pushl
mov
cld
inc
mov
mov
inc
sub
rclb
mov
cmp
je
test
cmp
fimull
mov
int3
push
mov
mov
jmp
add
pop
movsb
repz
lahf
test
es
mov
jg
sbb
mov
ds
jge
xor
outsb
jmp
mov
jmp
lret
aad
loopne
mov
das
hlt
repz
in
mov
sub
mov
jl
ret
or
cltd
call
loopne
xchg
test
jecxz
movsb
jae,pt
nop
mov
dec
xchg
imul
insl
rorl
lock
arpl
mov
inc
arpl
lcall
pushl
stc
pop
and
fimull
push
add
std
or
gs
inc
scas
outsb
icebp
xchg
filds
lcall
daa
outsl
xor
push
popa
les
pusha
mov
cmpsb
mov
xchg
je
call
mov
fiadds
sti
push
xchg
rorl
sahf
imul
inc
lods
mov
es
lds
jns
jne
stc
and
incl
ds
jae
arpl
fwait
in
jns
mov
dec
pusha
das
cli
mov
cmp
add
cli
cmp
clc
loop
pop
cmpsl
xchg
call
xchg
sbb
inc
xor
and
push
pop
mov
or
test
mov
xor
sub
aas
jle
xchg
das
jns
inc
sti
addl
mov
rolb
cmp
insb
or
ja
add
int
outsl
in
cmpsl
xor
add
push
cmp
rcll
rcr
fsub
dec
jg
mov
mov
add
jae
ljmp
fisttpll
inc
scas
popf
fidivl
adc
sub
pop
cwtl
je
mov
mov
mov
enter
mov
pop
mov
pop
pop
addr16
or
outsb
in
cmp
jmp
xchg
fnstsw
pop
xchg
sub
add
pop
repnz
and
sub
ljmp
outsl
loope
aaa
sub
scas
fdivrl
mov
xchg
movsl
mov
sti
test
in
xchg
xor
dec
jb
sbbb
and
lret
leave
sub
inc
mov
sub
add
push
test
mov
cmp
sub
lahf
xchg
addr16
in
pop
mov
xchg
dec
xchg
out
sbb
mov
incl
insb
in
adc
hlt
lret
stos
jo
cltd
movsl
test
popa
test
in
mov
mov
jne
add
in
push
repz
leave
dec
sahf
popf
inc
mov
call
ljmp
mov
rorl
repz
jo
mov
fnsave
pushl
hlt
jo
mov
orl
jno
pusha
and
pop
mov
add
mov
mov
push
push
call
in
sar
jg
xchg
ds
fdivr
test
subl
mov
and
add
outsl
pushl
ret
cmpsb
aam
pop
mov
mov
int3
xchg
mov
lods
out
adc
call
add
lock
pop
push
xor
out
sbb
in
out
call
jmp
mov
fwait
jle
dec
mov
seta
or
fdivrp
add
sub
mov
jmp
mov
mov
or
inc
out
test
clc
pop
repz
inc
pop
data16
sti
es
cmc
cld
daa
aad
lock
sbb
les
dec
das
jecxz
pop
jmp
les
add
sbb
jae
jnp
or
gs
push
xor
gs
add
sub
jmp
xor
mov
cmp
mov
push
pop
pop
nop
shlb
jmp
lcall
outsl
sub
xchg
push
inc
push
jmp
jle
xchg
mov
or
mov
mov
mov
ret
movsb
or
aas
add
add
dec
aad
mov
mov
dec
cmp
outsl
bound
enter
stos
jg
pop
pop
pop
jno
fwait
mov
adc
leave
dec
lret
or
ljmp
xor
lea
lcall
add
sub
call
outsb
ds
push
sbb
sbb
cmpsb
push
lock
pushl
xor
push
dec
push
mov
out
fiaddl
inc
iret
mov
sbb
xor
adc
sub
pop
sub
addr16
dec
mov
mov
or
sbb
arpl
jns
adc
adcb
add
gs
sahf
sbb
lcall
decl
aad
in
lea
movsl
scas
mov
in
sbb
out
jle
adc
outsl
lods
not
scas
scas
mov
ljmp
cld
push
xchg
insb
push
mov
out
sti
sbb
test
ljmp
lods
sub
adc
cmp
cmpsb
pop
cwtl
jle
push
incl
sbb
inc
push
fstpt
not
pop
mov
jno
push
test
cmp
adc
call
addr16
imul
sbb
xorl
mov
decl
ret
dec
jno
pop
lea
and
clc
pop
dec
jae
lock
shll
adc
sub
icebp
lcall
popl
out
out
insb
pusha
repz
rcr
jg
incb
add
negl
cld
xchg
daa
mov
sbb
xor
cld
adc
pushl
mov
inc
mov
pop
imul
xchg
nop
fcom
jl
sub
jg
cmpsb
std
mov
mov
ja
call
imul
mov
shr
or
leave
daa
xor
xchg
push
movsl
mov
adc
lock
pop
jmp
iret
mov
inc
outsl
aam
pop
cmpsb
xchg
scas
add
aas
inc
repnz
decl
dec
lret
adc
insb
fidivl
test
dec
sbbb
ss
cmp
mov
xchg
or
and
pop
adc
cmp
pop
rcr
cmp
rcll
jmp
adc
int
js
inc
adc
sub
sbb
iret
mov
enter
jmp
mov
or
dec
or
pop
inc
hlt
imul
out
cmpsb
ret
jb
jmp
dec
cmpsb
into
dec
jl
push
sbb
sti
outsb
sub
ret
fldl
cs
push
in
mov
repnz
mov
movsb
push
lcall
jne
or
mov
add
push
loopne
std
call
or
pop
mov
cmc
jle
add
lret
loope
pushl
xchg
clc
add
lds
aad
pop
xor
add
pop
pop
dec
mov
enter
ja
cmovns
out
sti
mov
scas
aas
and
test
test
add
jns
fldl
push
rcll
pop
mov
ljmp
mov
aaa
sbb
xchg
add
in
fimuls
lods
pop
add
sbb
jae
add
ljmp
daa
sub
or
scas
cmp
out
icebp
add
xor
mov
mov
aas
mov
and
jo
mov
imul
insl
loopne
lock
mov
cld
xchg
ljmp
push
mov
dec
mov
and
lcall
sbb
popf
push
out
sub
pop
leave
cmc
in
out
sbb
pop
ds
inc
mov
aam
inc
or
icebp
and
xchg
xlat
movsl
cltd
pop
scas
in
mov
push
push
popa
cld
ljmp
pop
insl
dec
orb
inc
dec
ljmp
clc
scas
scas
push
outsl
jno
dec
push
call
scas
mov
icebp
test
xor
shlb
ja
outsb
rcll
repz
in
ret
adc
inc
mov
mov
fidivrl
xor
cmpsb
xchg
inc
adc
sbb
ljmp
adcb
dec
mov
call
jae
mov
sub
jge
stos
std
push
add
mov
cld
fs
repz
sub
pop
or
outsl
gs
shlb
xchg
mov
outsb
or
cmp
jns
movsl
outsb
dec
ljmp
outsl
jae
adc
and
dec
xor
cli
stos
mov
sahf
pop
xchg
push
int3
aaa
cld
fstl
out
mov
xchg
rol
sti
xchg
xchg
mov
push
adc
fimuls
jge
push
mov
pop
test
test
or
testl
inc
out
ja
movsl
dec
add
popa
mov
add
fs
push
loop
xchg
adc
out
rclb
pop
aam
mov
mov
add
cltd
outsb
push
jbe
repnz
cwtl
or
jns
mov
in
cmpsb
jg
sbb
inc
hlt
loope
push
test
push
push
jns
dec
cmp
jmp
repz
incl
bound
add
and
sti
aam
mov
or
jmp
cmp
pop
jmp
lret
adc
loope
fwait
jl
jge
cmpsb
bound
xchg
mov
aaa
std
fdivr
dec
jno
cwtl
ja
inc
pop
pop
cli
call
bnd
subl
lret
sub
sub
mov
out
cwtl
jg
mov
cmpsl
lods
dec
mov
fwait
mov
xor
test
ret
and
pop
lahf
cmp
mov
outsl
cli
ljmp
xchg
xchg
xor
cmp
out
ljmp
iret
inc
in
xlat
pop
idiv
pushl
adc
movsb
add
jmp
testl
fisttps
outsb
jp
pop
cmc
lcall
mov
sbb
jp
ljmp
mov
ljmp
lret
lret
fstpt
and
lcall
js
in
push
mov
divb
dec
jbe
add
pop
cli
cmp
ljmp
add
xor
xchg
out
les
fcomip
stc
aas
test
fadd
stos
fiadds
sarb
add
daa
adc
lcall
imul
call
sbb
push
movsb
mov
cld
mov
xchg
xor
dec
out
mov
xchg
mov
pop
xorl
hlt
pop
add
push
mov
mov
adc
fidivrs
sbb
xchg
adc
cwtl
mov
add
xchg
stos
adc
decl
cld
push
lods
pop
xchg
or
pop
jl
js
in
lods
dec
or
mov
fists
push
ljmp
std
std
dec
sub
cld
push
enter
push
test
pop
xor
fadds
into
jnp
mov
mov
sar
fucomp
cmp
daa
insl
out
or
xchg
xor
pop
out
dec
in
add
jle
test
jp
mov
lds
int3
ljmp
xchg
je
push
pop
cmp
cmc
lahf
lods
in
test
pop
xor
in
sub
inc
mov
push
xorb
add
sbb
mov
loopne
pushl
stos
fcompl
loopne
aam
xor
aad
mov
fstp
sub
push
add
jl
data16
clc
mov
jl
clc
fsubr
mov
xchg
cld
pop
aas
or
mov
and
sti
cmp
jmp
js
shr
adcb
add
dec
mov
repnz
std
cwtl
cmpsl
mov
sbb
aas
mov
mov
mov
pop
loopne
or
addr16
mov
xchg
mul
sti
jecxz
jg
mov
rorl
std
rolb
movsb
dec
js
cmp
in
jno
stos
push
jne
push
pop
sbb
repz
rcrb
mov
test
cli
xchg
jp
jle
incl
cmp
dec
push
push
ret
lods
fsts
jmp
aad
ljmp
xchg
fst
sub
jp
ds
cmp
pop
xor
aad
mov
jg
jmp
xchg
pop
rcll
notb
push
sub
xchg
jo
sbb
std
xchg
mov
jmp
or
lcall
test
xchg
xor
jge
rolb
jg
cmp
jg
jl
mov
cwtl
test
adc
mov
cli
sbb
push
pop
clc
pushl
pop
xchg
cmp
push
jge
mov
fs
call
pop
call
mov
cld
mov
cld
sbb
add
sbb
aaa
out
xor
stc
pop
outsb
lea
or
leave
insb
push
push
mov
fs
cltd
addr16
mov
adc
pushf
mov
add
cmc
pop
sbb
ljmp
xorb
cmc
aas
pushf
mov
test
dec
out
mov
xchg
inc
daa
or
add
push
mov
cwtl
cmpl
stos
adc
jp
mov
jecxz
sbb
and
out
mov
sbb
mov
push
fimuls
ficompl
add
jo
fcmove
es
cltd
testl
int
sub
dec
das
or
lcall
or
sbb
enter
mov
inc
adc
xchg
pop
call
loope
cwtl
ret
push
pop
mov
jmp
lcall
fstpl
dec
dec
scas
shrb
push
inc
call
stos
inc
xorl
sar
mov
imul
out
cli
decl
fwait
imul
addr16
movsl
incb
mov
shll
or
arpl
incl
jmp
cltd
mov
ficoms
out
xchg
sbb
les
mov
jp
cmp
adc
std
lcall
dec
movsl
pop
sahf
push
lds
mov
xchg
int3
xchg
subb
cmp
decl
pop
xchg
negb
mov
pusha
out
jge
sbb
call
es
dec
sbb
cmp
test
js
fstps
push
imul
ljmp
cmove
int3
mov
jmp
inc
das
or
cmp
fwait
sbb
leave
out
incl
mov
aad
inc
out
mov
jmp
sub
push
repz
push
inc
pop
leave
je
cmc
pushl
add
add
hlt
push
int
repz
dec
push
lcall
test
lret
mov
lcall
pop
outsl
xchg
loop
jb
sub
jb
aad
mov
decl
xor
inc
dec
push
cmp
jmp
lods
mov
movsb
jae
stos
ss
or
or
fsubs
in
dec
and
add
mov
add
mov
stos
rep
adc
push
and
test
add
pop
out
out
add
orl
bound
daa
mov
in
test
roll
dec
mov
jle
or
xor
fcmovnbe
int3
and
hlt
jg
mov
mov
jmp
mov
push
orl
fcom
fldt
jae
pusha
ja
pop
std
arpl
std
and
adc
sub
xor
incl
je
imul
or
loopne
pop
push
inc
sar
mov
pop
lods
mov
xchg
mov
push
and
mov
xlat
mov
sub
cwtl
sbb
push
xchg
cwtl
fisttps
gs
jg
dec
xor
scas
or
lret
pop
and
cmp
sub
rcrl
sti
cli
jmp
idiv
fsubrs
loop
arpl
mov
or
into
cwtl
dec
orl
dec
mov
int
aad
ljmp
jb
dec
icebp
aaa
insl
mov
push
ffree
aas
jnp
jb
lahf
jae
adc
hlt
jmp
jmp
adc
or
hlt
lcall
cmp
into
nop
jl
test
push
fildll
in
sub
pop
loopne
std
test
mov
lahf
add
mov
jnp
jg
lret
lds
cmpl
pop
outsl
dec
dec
cmp
jge
add
jle
push
inc
mov
in
popl
push
dec
xchg
out
cwtl
repz
daa
jb
fbstp
notl
bound
cmp
xchg
sbb
add
idiv
push
mov
out
scas
adc
lret
jp
pop
test
push
fdivr
ljmp
pop
mov
jno
sub
inc
add
pop
pusha
aad
and
dec
cmp
decl
decl
jp
mov
push
icebp
pop
and
test
js
adc
ss
mov
pop
push
cli
jmp
ljmp
outsl
xbegin
jp
decb
outsb
push
lods
mov
sbb
push
cmpsb
loope
inc
cltd
test
rcl
ret
mov
mov
adc
xchg
pop
lea
scas
movsb
bound
lcall
sbb
lock
iret
jl
scas
pusha
xor
sub
inc
dec
loopw
test
pop
clc
ljmp
lea
push
stos
inc
psllq
and
lahf
ljmp
rclb
ja
mov
filds
repz
jg
cltd
jmp
mov
mov
mov
adc
subl
and
int
push
and
lods
xchg
lahf
test
mov
in
idivb
leave
xchg
ret
inc
dec
leave
and
insb
xchg
jmp
push
mov
xchg
repnz
adc
jl
or
add
pop
pop
out
xor
ja
cmp
fwait
in
adc
fbstp
pop
push
mov
pusha
mov
stc
inc
mov
jmp
clc
pushl
adc
rcrl
fbld
jo
or
into
test
shlb
incl
push
cmp
jno
inc
xrelease
addr16
lods
pusha
xchg
pop
loopne
decl
mov
mov
shlb
mov
xchg
rolb
sbb
dec
xchg
js
fbstp
and
push
mov
enter
outsb
cs
sub
pop
into
gs
jns
and
inc
xor
sub
in
push
adc
aas
iret
lea
cmc
dec
shll
int
rcrb
add
inc
adc
pop
in
jg
scas
xchg
cmp
nop
dec
loope
pushf
xchg
rcr
and
rcrb
dec
js
sub
mov
adc
push
psubd
push
jp
dec
scas
shll
ja
mov
cld
sbb
mov
inc
fs
jg
ljmp
dec
dec
sub
push
in
fstps
or
push
jae
cmpsl
lcall
jge
insl
out
jecxz
sbbl
repnz
shll
insb
ljmp
shrl
stos
movsb
les
clc
jl
es
lods
mov
dec
push
or
jno
dec
sbb
jmp
sub
inc
aaa
adc
xchg
test
xor
loopne
lds
stos
add
sbb
cmp
loopne
dec
mov
pop
or
mov
sbb
aad
mov
decl
ret
call
rorl
daa
bsr
inc
inc
push
repz
outsb
popa
or
cmp
lods
icebp
insb
lock
in
ljmp
clc
filds
das
cmp
cs
mov
ficoms
lods
cmp
mov
mov
mov
rcll
mov
push
mov
jmp
dec
jg
mov
cwtl
push
push
lcall
pop
dec
push
int
sub
cli
cmp
cmp
push
and
mov
mov
add
notl
shll
jg
pop
ljmp
cli
sub
xor
cmc
clc
sbb
sbb
mov
movsb
ljmp
cmp
jmp
in
push
pop
popa
mov
xchg
jnp
inc
leave
pop
inc
rcr
jg
and
sbbl
cli
jmp
dec
push
negb
ja
repz
jecxz
push
lret
xlat
pop
ret
rcrl
call
stos
cmp
notl
adc
jno
pushl
clc
add
insb
daa
cmp
cmp
ljmp
xor
loope
jb
imul
lea
sub
pop
jg
inc
and
mov
fs
sub
inc
add
sub
dec
mov
jmp
xor
aam
flds
shrb
xchg
inc
dec
sbb
mov
mov
cltd
std
rorl
lcall
test
out
imull
ja
rcl
nop
ret
clc
aam
add
fwait
push
test
divl
in
xchg
fs
adc
fadds
das
ljmp
fisttpl
xchg
sub
cli
jg
aaa
inc
mov
push
ds
sbb
nop
inc
jmp
out
add
cltd
inc
data16
dec
mov
mov
sbb
push
shll
mov
cmpl
pop
movsb
push
mov
and
sub
jae
stc
xor
add
jg
jae
outsl
loope
jmp
xchg
mov
scas
dec
xchg
scas
arpl
sub
mov
insl
aad
mov
loop
es
push
aas
pop
fsubrl
pusha
cli
sti
nop
adc
cmp
cmp
dec
pop
test
insl
cmp
xchg
sahf
sub
push
inc
push
inc
clc
int3
add
stc
lahf
jmp
push
sar
aaa
mov
or
xor
dec
mov
xchg
jo
mulb
lcall
pop
pop
ss
adc
jg
pushl
and
pop
lea
imull
in
lcall
inc
cmp
xlat
incl
sub
or
test
mov
lock
xchg
add
sub
mov
movsl
pop
dec
jp
dec
jns
lods
push
push
sarb
nop
cmp
or
xor
mov
cmc
call
xchg
cmpsb
and
cmp
adc
lcall
fs
roll
push
das
outsb
popa
jmp
inc
adc
cmp
jnp
sbb
or
insb
adc
mov
je
dec
test
mov
cltd
lock
jl
mov
lock
inc
insb
sbb
mov
jno
and
jp
lret
mov
mov
inc
fdivrs
pop
or
shrl
sahf
jg
popf
mov
outsl
jmp
ss
xchg
and
cld
iret
shrb
xchg
xchg
dec
sbb
arpl
cld
insb
loop
out
sbb
incl
adc
add
inc
dec
scas
dec
and
out
int3
fmulp
jge
xchg
scas
pop
hlt
push
out
or
mov
jp
out
jo
jae
push
add
adc
and
rorl
cmp
xor
sub
js
and
mov
das
xor
neg
lret
es
pop
mov
xlat
push
sbb
xor
mov
adc
fcoml
ljmp
int3
decl
fidivs
mov
or
cld
mov
es
adc
gs
call
test
or
fwait
fs
lds
push
inc
test
call
add
fcomi
cmp
popa
inc
jb
or
fwait
push
inc
push
and
ljmp
add
push
loop
cmpsl
mov
jmp
faddp
cmp
shr
mov
pusha
fcmovb
cld
adc
cmpsl
jbe
and
aas
or
jmp
movl
push
mov
pushl
testl
pop
jle
popf
icebp
mov
pop
mov
fiaddl
sub
jmp
out
mov
and
push
cmc
cli
std
insl
and
leave
pushf
sbb
out
shll
pop
inc
out
hlt
sar
call
shl
mov
push
loope
rcr
xor
aam
mov
nop
push
loope
inc
lds
inc
pop
mov
xchg
push
dec
push
scas
outsl
xchg
andl
xchg
aas
leave
xor
cmp
add
add
lcall
or
add
mov
leave
ljmp
inc
cvtdq2ps
clc
insl
sbbl
int3
adc
mov
dec
xchg
inc
xchg
inc
dec
addr16
arpl
pushl
aam
lds
scas
int
jg
or
pop
jnp
rolb
xchg
sarb
jns
call
xchg
mov
arpl
in
sbb
hlt
jp
xchg
mov
aas
shrl
sub
sbb
in
nop
dec
jp
mov
or
fstl
pushf
mov
add
js
jl
inc
sub
pushl
fcomi
gs
stc
xor
scas
dec
push
jb
xor
enter
fsubrs
lea
popf
leave
out
daa
jbe
test
popf
aas
cmpsb
imul
jg
mov
dec
ljmp
repz
loop
rcll
sub
decl
pop
xor
add
jmp
jne
jecxz
mov
add
xchg
int3
mov
in
jg
pop
and
jmp
fisubl
insb
mov
fidivrl
jge
cmp
mov
fdiv
out
std
ja
ljmp
sub
outsl
pop
adc
push
decl
add
ljmp
shrd
adc
fcomip
scas
testb
mov
mov
addr16
inc
daa
popa
nop
dec
push
jmp
mov
push
ds
mov
mov
push
inc
mov
outsl
inc
push
test
lcall
js
sti
push
inc
or
dec
pop
jmp
int3
lret
scas
lahf
mov
test
mov
cmpsl
out
leavew
inc
pusha
add
mov
lcall
pop
cmp
or
arpl
adc
in
in
pop
inc
push
orl
inc
mov
and
add
mov
sub
xchg
stc
inc
xor
dec
cmp
mov
jmp
loope
out
xor
sub
jo
pop
subl
mov
leave
push
je
xchg
call
dec
push
aad
lods
cmpsl
cmpsb
lcall
in
mov
jl
dec
enter
push
inc
mov
outsl
sbb
outsb
iret
in
lea
sbb
cmpsl
mov
mov
sbb
out
cli
ljmp
cmp
scas
std
movsb
and
fnstsw
cmp
xchg
adc
cld
fnstcw
cmp
sub
ds
add
adc
test
loop
push
mov
jmp
mov
idivl
lods
mov
mov
jmp
add
jae
orb
or
pop
xor
adc
cmp
push
mov
mov
push
popf
and
insl
insb
xchg
pop
shlb
cwtl
arpl
mov
mov
push
ja
inc
inc
int
mov
jo
mov
cmp
fildll
jnp
cmp
ljmp
or
cmp
ret
push
dec
inc
xchg
adc
ss
arpl
cmp
xchg
repz
jp
aaa
fwait
shlb
imul
mov
mov
popf
call
fs
xchg
mov
add
mov
rorl
call
mov
pop
fdivrp
mov
das
mov
add
dec
jl
test
test
dec
and
sbb
outsb
jge
lcall
push
and
into
push
icebp
lods
insl
insl
fs
cmp
sub
jb
mov
and
cmp
je
lods
lret
cs
jge
dec
ds
or
adc
fcoml
stc
cmc
push
loopne
call
loopne
add
test
lahf
movsl
push
std
call
xchg
stc
dec
mov
pushl
je
dec
jle
push
jnp
rolb
scas
sub
or
jg
fcoml
inc
lods
aad
dec
push
pusha
jmp
sti
ret
int3
cmp
mov
dec
jns
lcall
xchg
pop
das
add
in
push
shrb
mov
adc
in
fisttpl
xchg
jge
call
dec
push
orb
sahf
push
shl
mov
jg
and
add
dec
adcl
decl
cmp
sbb
fmul
inc
inc
stos
or
dec
xor
fisubl
mov
adc
addb
jmp
adc
mov
js
sar
push
mov
inc
je
lods
lds
lods
cs
leave
clc
ljmp
xlat
test
jg
mov
aad
enter
sub
pushl
insb
add
sbb
xor
nop
add
and
nop
inc
mov
jg
jns
push
xchg
das
daa
sbb
push
pop
ret
ret
roll
rolb
xchg
fwait
lea
push
gs
add
into
mov
js
xchg
lods
push
pushf
mov
add
lcall
mov
or
cmc
adc
add
dec
xor
mov
call
and
jle
inc
cmc
add
das
fs
mov
les
out
xchg
and
xchg
popf
repz
jmp
push
loope
cmp
test
pop
filds
mov
insb
cmp
dec
inc
mov
mov
loope
jno
add
fmuls
fwait
sahf
mov
in
dec
push
test
insl
xor
push
adc
movsl
push
add
fcos
jb
movq
push
fildl
mov
sbb
cmc
xor
lcall
out
jns
cmp
mov
stc
test
mov
push
sub
daa
inc
push
mov
lcall
in
roll
icebp
mov
pop
push
inc
xchg
add
lods
int3
cmp
jge
cmpsl
ljmp
add
nop
das
pop
push
mov
orl
int
or
adc
jmp
pop
cld
sbb
fisubl
loop
js
inc
xor
stos
mov
ficoml
or
and
xor
xor
add
ja
cmp
cwtl
inc
mov
outsl
outsb
nop
push
adc
cmpsb
push
mov
mov
lcall
lret
jnp
xor
mov
dec
mov
dec
in
repnz
add
stos
mov
push
lcall
mov
test
lock
pop
adc
je
mov
ret
incl
adc
pop
int
jnp
inc
stos
rcl
pop
sub
cld
pushl
ss
jmp
or
mov
cmp
data16
daa
daa
call
xor
jmp
fwait
fwait
je
cwtl
fimull
sbbb
mov
jb
cmc
mov
movsl
pop
scas
in
sar
dec
mov
lcall
ljmp
dec
jecxz
aad
sub
aas
mov
sub
lret
cli
std
inc
cld
decl
jle
pop
jae
mov
add
pop
mov
sbb
decl
in
dec
push
adc
xchg
fidivrl
xchg
int
sub
repnz
lock
push
sbbb
insb
cmp
jae
mov
cld
imul
cmpsl
pusha
add
mov
mov
mov
sbbb
scas
divb
and
ljmp
mov
add
sbb
mov
xchg
or
bound
lcall
inc
jae
mov
sub
fdivl
div
cmp
nop
cmp
inc
cmp
mov
sbb
sub
sub
jb
xchg
xor
dec
and
nop
lret
push
jle
shr
shlb
ret
mov
rcrb
loope
stos
dec
fisttpl
bound
jg
loope
ljmp
outsb
roll
push
jno
cmp
ljmp
ljmp
es
ret
pop
push
stc
jae
repnz
jp
xor
cmpsl
gs
out
xor
div
xorl
scas
mov
jle
cmp
fisttpl
xchg
push
repz
dec
decl
ss
pop
mov
iret
sbb
dec
lret
jns
rcrb
add
scas
sahf
xor
test
and
andb
sbb
sbb
sti
ljmp
out
xchg
mov
inc
mov
stos
pop
dec
call
jle
push
shll
mov
cmp
or
jo
mov
decl
mov
or
adc
sbb
mov
incl
pop
jecxz
test
mov
lock
and
loop
push
clc
mov
mov
pop
std
lock
or
jno
cltd
lahf
clc
loopne
ljmp
sti
mov
or
sbb
xchg
jb
std
rorl
arpl
sbb
push
xchg
lods
pop
xor
pop
pop
stos
aam
lahf
outsl
gs
subb
pop
ljmp
es
xchg
arpl
sbb
pop
stos
push
int
dec
push
sub
push
mov
sbb
repz
mov
sbb
mov
out
sar
repnz
inc
test
xor
xor
mov
mov
lcall
pop
stos
mov
cmpsl
inc
repz
add
cld
out
lret
mov
xchg
in
inc
and
pop
add
aas
mov
arpl
inc
cli
cmpsb
xchg
rcll
xor
pop
adc
sti
or
add
into
stc
push
inc
iret
movsb
sar
pushl
rcrl
enter
or
xlat
pop
aam
inc
fdivrs
dec
aam
pop
fildll
movsl
mov
xor
sbb
mov
xchg
push
sbb
decl
jo
or
cld
shl
sub
imul
lock
aad
mov
decl
cmp
jecxz
jo
fwait
xchg
push
mov
lcall
xchg
sahf
out
jl
pop
je
and
pop
out
lods
fwait
mov
jmp
lea
popa
ja
addr16
aam
jle
incl
ljmp
fistpll
or
and
mov
or
lock
push
or
rcl
test
inc
ret
fcoms
icebp
sahf
jge
loop
push
push
adc
ret
jnp
jl
pop
imul
out
push
jle
out
jge
sbb
sbb
jne
xchg
pop
setae
int
pop
dec
jmp
js
cltd
mov
aas
cwtl
cltd
inc
cmp
lcall
ljmp
mov
clc
xor
in
add
aam
mov
imul
dec
mov
and
int3
push
mov
mov
jae
jl
loopne
adc
push
call
jmp
sbb
add
leave
ret
nop
inc
in
xor
aaa
int
add
add
add
pushl
shr
repz
sbb
out
xchg
jo
imul
hlt
into
gs
dec
inc
inc
or
mov
popf
add
ja
adc
cmp
rclb
add
or
pop
scas
push
ja
push
int3
inc
xor
fbstp
or
orl
ss
push
pop
jnp
mov
insb
ss
fisttpll
iret
xor
add
aad
or
pusha
adc
into
inc
and
popf
cmpps
test
push
mov
call
std
sub
push
sbb
mov
cmp
int
inc
in
mov
xlat
inc
xchg
sbb
iret
std
push
mov
or
in
pushl
std
dec
mov
and
jg
lods
mull
pop
dec
and
lcall
sub
out
dec
lret
push
sbb
mov
mov
jo
inc
and
and
sbb
and
iret
data16
cs
push
dec
and
lds
add
imul
jmp
jge
xchg
inc
out
push
add
adc
jno
mov
ja
and
andb
call
rcrb
ja
loopne
jbe
aas
idivb
aad
mov
mov
decl
mov
es
cmpsb
xor
js
dec
cmc
dec
sbb
dec
stos
sti
int
xor
or
adc
ret
ja
sbb
mov
dec
add
mov
cli
cli
fwait
in
pop
mov
xchg
pop
or
shll
jns
loopne
decl
pop
movsl
vmwrite
push
push
jp
push
fadds
mov
push
js
in
sti
dec
aad
mov
and
jle
test
mov
cmpl
fstl
sub
jb
addr16
pushl
std
lcall
mov
out
ret
arpl
data16
lahf
sbb
stos
out
mov
repnz
hlt
pusha
aad
outsl
out
testb
icebp
mov
in
cmp
dec
mov
ret
jmp
mov
pushl
lods
push
loopne
bound
sub
sub
xchg
popa
int3
inc
loopne
lods
pop
test
subb
push
in
dec
std
out
lahf
lods
call
stos
jbe
fisttpl
shll
out
push
cmc
inc
mov
mov
aas
fimuls
repnz
mov
dec
idivb
test
daa
daa
fs
ja
add
pop
add
xor
out
inc
lahf
push
inc
loopne
in
xchg
push
cmpl
sbb
jge
push
push
fstl
xchg
lret
out
or
call
sub
mov
ds
jne
add
dec
push
into
xchg
pop
mov
rcr
xchg
jmp
xchg
cli
and
sbb
jmp
cmp
imul
push
add
cmp
xor
jl
testb
call
sbb
pop
and
mov
out
cld
inc
sub
mov
lcall
fdivr
ljmp
mov
mov
rcr
dec
mov
shlb
repnz
lcall
sub
jo
ss
lahf
inc
and
pop
push
jp
inc
lods
fisubrl
incl
cld
mov
es
rcll
push
imul
xchg
jnp
popf
jle
ret
mov
ljmp
add
add
pop
dec
sbb
fisttpll
push
clc
pop
jno
jle
fstpt
mov
sub
fwait
aam
pop
pop
xchg
or
mov
scas
incl
xchg
mov
sti
dec
lods
dec
push
aas
pop
fcmovne
mov
fucomi
loopne
cmp
inc
adc
jnp
push
cmp
std
dec
jp
xchg
aad
and
rcr
push
arpl
ret
test
repz
inc
jmp
cmp
jmp
fmul
xor
sahf
adc
iret
and
add
ss
lahf
out
imul
mov
fs
iret
pusha
cmc
les
outsb
imul
sbb
aam
pop
in
xor
or
mov
add
fsubs
js
mov
das
pop
or
mov
push
imul
inc
jb
pop
imul
inc
outsb
or
mov
imul
imul
jnp
fs
pushl
nop
push
mov
adc
arpl
mov
xor
xlat
test
dec
lea
xchg
arpl
cmc
add
mov
inc
stc
push
setle
jne
push
sar
incl
stos
pop
test
mov
aaa
pop
test
ss
jbe
push
imul
add
pushl
xchg
daa
stos
cld
mov
mov
das
pop
pop
lock
inc
mov
sbb
adc
mov
lods
out
arpl
push
pop
aaa
pop
xchg
leave
adc
sahf
lcall
sbbb
cli
inc
push
mov
lods
xor
sub
out
daa
inc
ja
incl
inc
int
push
decb
sti
mov
dec
push
call
pop
les
push
mov
incl
xorb
mov
xchg
dec
push
call
jo
mov
ljmp
stos
push
std
inc
test
jb
push
fiadds
scas
mov
add
jge
add
xchg
ss
xor
pop
inc
push
xchg
sub
pop
leave
push
add
sbb
ret
lods
mov
das
mov
fstpt
call
bound
fiaddl
incl
cmp
or
sub
in
test
cmp
dec
mov
lds
incl
xchg
jp
aaa
stos
fldt
mov
push
mov
mov
in
adc
or
push
xchg
lcall
dec
xor
out
adc
popf
lds
movsb
imul
xchg
ja
or
pop
jmp
incl
cwtl
fcoms
jnp
and
push
lahf
mov
jmp
sub
es
ss
inc
push
mov
push
loop
fwait
imul
negl
jns
dec
fcomip
ljmp
rorl
call
cli
adc
adc
shlb
les
stc
sar
out
cli
jmp
in
mov
pop
mov
ljmp
inc
out
lods
xor
decl
nop
insl
clc
loop
das
mov
sbb
in
loope
mov
outsb
ret
lods
sbb
sar
lcall
inc
xor
out
fcmovb
stos
or
mov
push
inc
pusha
rcrl
push
add
inc
xchg
lcall
jl
cltd
loopne
mov
add
jb
clc
es
es
pushl
cld
adc
jp
push
popa
lods
and
js
cmpsb
jg
sbb
pusha
call
lcall
int
ja
repnz
cmc
je
fwait
movsl
jle
clc
mov
xor
test
lds
aad
inc
xor
in
cltd
add
out
in
xchg
fs
cmpsl
sahf
mov
push
or
xchg
jp
mov
cmp
xor
sbb
cmp
ss
or
jmp
mov
dec
sti
inc
pop
out
fisubrs
incl
push
pop
test
xorb
xlat
jl
sbb
mov
sbb
fcomip
dec
jmp
mov
dec
mov
sbb
ret
inc
outsb
pushf
enter
xor
cli
fst
cmpsb
imul
mov
cltd
dec
sbb
loopne
mov
push
subl
leave
xor
pop
push
jecxz
pusha
sub
push
cmp
incl
sub
test
jbe
push
int3
fs
negb
je
out
int3
mov
imul
scas
clc
mov
jg
xlat
jecxz
mov
das
data16
pop
jb
dec
insb
es
jle
lock
incl
push
adc
push
mov
ror
daa
je
sub
adc
xlat
inc
inc
dec
imul
fiadds
mov
lret
test
and
mov
repz
clc
test
loop
ljmp
pop
pusha
int
rcr
dec
call
scas
loopne
push
aas
insb
push
sub
dec
inc
cmp
lcall
pop
movsb
mov
test
data16
mov
std
cmpl
loope
incl
in
jns
repnz
into
sbb
mov
or
stos
pop
pushl
xor
data16
rolb
ds
push
cwtl
fisubl
mov
ljmp
dec
les
push
adc
jge
add
cmp
dec
bound
sahf
dec
adcb
in
jne
xchg
pop
pop
adcb
fwait
mov
push
fildll
ljmp
rclb
mov
enter
lret
push
jnp
cmp
add
or
fcomip
mov
or
jno
into
dec
mov
inc
adc
push
push
lods
mov
lret
cs
push
rorl
pusha
xor
jg
incl
xchg
xchg
mov
outsl
or
and
xor
jmp
push
or
imul
rcrl
adc
push
mov
cmc
sub
pushl
std
inc
outsl
fildll
sbb
mov
lahf
mov
mov
mov
shrb
mov
jg
mov
push
add
or
push
pop
add
loope
push
scas
repz
test
out
in
loop
dec
xlat
cli
xchg
add
dec
mov
jnp
cmc
jg
lcall
mov
push
xor
jb
mov
lock
decl
adc
xlat
scas
sub
xchg
aad
popf
sub
push
into
jne
xchg
fbld
pop
xchg
and
mov
outsl
pop
aad
inc
mov
test
inc
jecxz
incl
cmc
fsubr
pushf
ss
mov
sbb
sbb
sub
jb
and
mov
pushl
cmpsb
fs
dec
adc
mov
mov
cltd
repnz
loope
cld
cmpsl
jae
imul
xor
sarl
lods
inc
addr16
pop
cmpsb
mov
clc
push
daa
xor
pushl
int
out
fs
adc
and
in
cmp
pop
aaa
mov
jecxz
enter
call
and
test
movsl
sar
mov
dec
out
incl
mov
add
cmp
xchg
or
adc
aaa
outsl
call
push
mov
cmp
xchg
aaa
mov
jb
cltd
imul
enter
pop
pop
imul
jg
call
pop
data16
nop
sbb
cmpsl
paddusb
dec
jb
mov
lods
js
daa
mov
rorb
incl
sahf
jae
cli
outsb
jne
inc
push
es
sbb
inc
push
sbb
lahf
xorl
and
or
or
data16
mov
add
pop
sub
decl
in
and
ret
outsb
aad
adc
repnz
das
push
cmp
fndisi(8087
or
stos
outsb
push
ret
call
sub
jno
or
sbb
andl
add
clc
push
mulb
sbb
jmp
cmpsl
dec
pushf
xor
pop
out
in
cmpsl
pop
repz
push
jno
and
cmp
push
adc
stos
decl
mov
data16
repnz
push
mov
out
ja
sub
std
js
lcall
lds
sbb
movsl
aas
ljmp
sbb
sbbb
ffreep
and
das
inc
pusha
cltd
fdivr
pushl
movsb
ja
pop
sbb
sti
sbb
in
push
out
pop
adc
xor
aam
mov
insl
aaa
or
pop
pop
rcrb
sbb
jo
dec
jo
and
inc
or
decb
pushf
leave
rolb
pop
imul
popa
mov
imul
inc
push
or
jg
incl
jne
ret
inc
push
sbb
xchg
dec
dec
stc
mov
ljmp
mov
fwait
loop
xor
in
jg
rcrb
add
mov
decl
push
pusha
negl
clc
dec
xchg
jnp
fcomip
cli
andl
xor
cmp
or
push
jae
pop
xor
adc
inc
jo
sar
mov
lahf
int
movsb
decl
and
gs
cld
icebp
push
sahf
inc
mov
sub
cltd
inc
das
notl
decl
xchg
call
das
shlb
sub
pop
cld
pushl
and
sub
bound
jo
mov
push
jle
dec
mov
stos
or
leave
insl
adc
lds
shll
dec
fdivl
sbb
xlat
push
and
aas
sub
xchg
mov
mov
das
sbb
int
jbe
sbb
decl
mov
sbb
xor
add
inc
inc
push
add
jmp
mov
add
clc
lcall
mov
stos
pop
mov
rep
pusha
rclb
adc
mov
jmp
incl
dec
cld
mov
popa
insb
addl
fwait
lcall
iret
push
inc
adc
mov
daa
imul
rcrb
out
lea
dec
ror
stos
call
or
fwait
sbb
insb
push
fcmovnbe
push
sub
out
mov
jge
jns
pop
ljmp
sub
adc
jb
sub
hlt
mov
sbb
fwait
jle
fs
fstpl
aaa
add
call
mov
shrd
add
lcall
pop
xchg
in
popf
push
lods
shrb
sub
fdivr
call
mov
subl
mov
sbb
mov
imul
pushl
jl
adc
cmc
cmc
sbb
pop
jl
loope
incl
push
xchg
xchg
aaa
in
clc
test
test
pop
push
lcall
add
push
mov
push
cmc
call
mov
stos
std
pop
pop
iret
sti
lcall
mov
cmpsb
mul
push
fadd
or
mov
ljmp
mov
loope
lea
js
mov
or
sahf
or
decl
fimull
testb
mov
xchg
pop
test
stc
iret
outsl
out
mov
xlat
sti
decl
mov
dec
cmc
mov
imul
pop
sub
ficoms
aas
jbe
jmp
or
add
lret
fists
xchg
mov
hlt
loope
call
adc
nop
ljmp
dec
ds
mov
pop
mov
aad
fisttpll
inc
lds
sti
and
xchg
call
xchg
inc
gs
ja
adc
fnsetpm(287
dec
dec
jg
rclb
mov
sbb
cld
cmp
xor
decl
xchg
sbb
fucomip
push
mov
scas
fstps
mov
loop
hlt
adc
add
mov
ljmp
cld
add
dec
pop
cmp
loop
pop
mov
push
decl
jnp
aad
sahf
enter
call
inc
jo
sub
add
jp
push
sbb
or
xchg
push
pop
cs
or
call
decl
clc
mov
lret
dec
dec
mov
jne
ds
pop
ret
sub
sub
incl
or
sbb
mov
cmpsl
mov
sbb
and
fcomps
sbb
lea
push
pop
jbe
repz
push
imulb
call
imul
xor
mov
xchg
pop
mov
jge
ret
icebp
shlb
add
pushl
outsb
stos
nop
inc
mov
pop
stos
cmp
pushl
testl
nop
cld
mov
dec
dec
into
add
sbb
pop
jae
pushl
xchg
jne
mov
add
xchg
sarb
xor
or
addl
adc
lods
jecxz
add
sbb
mov
fcomip
inc
mov
enter
neg
sti
cmp
mov
sbb
cmc
stc
scas
or
jg
pop
aam
adc
popa
sbb
dec
push
or
outsb
inc
sbb
repnz
mov
out
clc
jmp
ljmp
lds
xchg
jo
roll
enter
xor
les
sbb
jno
push
add
xchg
cmp
jb
imul
pop
xor
add
dec
inc
in
lcall
loope
lock
sub
pushl
push
in
xlat
lea
xor
fdivrl
rcrb
add
repnz
push
data16
ljmp
ret
ds
ja
sub
jmp
addb
sbb
push
mov
xchg
lock
jecxz
inc
mov
call
clc
ret
cmp
mov
jmp
cmc
cli
xor
sbb
mov
ret
mov
and
mov
add
lcall
sbb
jns
mov
mov
jno
out
out
loop
mov
mov
outsl
sub
imul
lcall
icebp
cmp
sub
std
mov
jmp
into
and
mov
inc
pushf
fildll
and
call
cwtl
in
push
xchg
or
in
into
incl
inc
adc
stos
fistpl
dec
rcll
daa
mov
jno
mov
mov
incl
xchg
outsb
imull
add
pop
cmp
push
mov
jl
pushf
rorl
aas
pusha
sub
adc
sbb
decl
xchg
gs
xlat
pop
pop
leave
out
mov
mov
int
sti
sqrtps
push
pushl
fstps
cmp
nop
or
sub
repz
inc
xor
mov
test
incl
pushf
jb
dec
data16
and
imul
xlat
imul
mov
jg
incl
xor
dec
xchg
js
adc
subb
cmpsl
and
stos
imul
insl
jo
or
call
xor
cli
xchg
add
icebp
in
gs
test
mov
push
mov
push
fists
mov
jge
sbb
cltd
mov
lcall
fs
mov
mov
inc
mov
push
adc
mov
sub
xchg
and
xor
jb
jbe
jae
bound
mov
lcall
mov
sub
out
xor
aam
adc
pushl
push
inc
stc
push
daa
mov
or
pop
push
xlat
pushf
scas
add
dec
clc
xchg
cmp
bswap
pop
jne
test
ljmp
inc
jmp
repz
fdivrs
or
movb
cld
inc
or
popa
pop
in
sub
lods
pop
pusha
flds
jmp
loopne
testl
jns
les
testb
sub
idivb
cwtl
korb
aam
cmp
imul
les
mov
add
inc
repnz
out
nop
sahf
aas
adc
lods
scas
aad
test
xchg
mov
dec
and
and
data16
lock
out
mov
leave
mov
lea
ljmp
ja
push
jge
jns
loop
std
jl
dec
pop
add
pop
jg
icebp
jmp
inc
cmp
hlt
and
pop
inc
mov
dec
adc
dec
clc
pushl
pop
out
mov
ficompl
dec
mov
sti
cwtl
xchg
clc
movsl
cmc
mov
mov
cmpsb
pop
out
sbbl
test
test
adc
xchg
xchg
inc
into
cmc
push
mov
adc
inc
inc
leave
idiv
scas
xor
fisubl
gs
addr16
shlb
jecxz
push
or
adc
dec
xor
adc
test
ds
pop
out
jmp
xor
cmc
addr16
adc
push
loopne
pop
or
decl
and
inc
push
lea
into
cmpl
fsubp
clc
pop
cmp
mov
mov
bound
dec
std
sub
add
pop
or
and
add
test
fs
das
leave
pop
repz
pop
lcall
ljmp
aam
aad
sub
mov
mov
popa
mov
jb
pop
push
push
sub
and
dec
add
cmc
sub
or
mov
popa
inc
jmp
clc
mov
mov
mov
pushf
jg
rcrl
stos
and
fstpt
dec
aam
lret
pushf
outsb
mov
mov
mov
leave
out
inc
jnp
repz
jmp
popf
in
sbb
ljmp
sub
sbb
aam
scas
icebp
addl
jecxz
mov
lods
inc
mov
ljmp
xchg
daa
push
lock
in
mov
pop
dec
inc
mov
int3
test
imul
int
push
repz
jl
xchg
enter
iret
or
and
pop
dec
adc
pop
and
call
lods
pop
leave
cld
mov
adc
push
movsl
fmull
xchg
clc
xor
arpl
call
xor
lea
xor
sarb
mov
xchg
xchg
pop
decl
push
cs
outsb
dec
lock
rcrl
inc
icebp
push
sub
jne
inc
repnz
mov
shrl
orb
daa
clc
fs
mov
mov
scas
add
lret
mov
pop
mov
push
sub
jmp
pop
and
ud2
in
jl
pop
insl
jp
push
sbbb
jmp
lret
pop
stos
dec
jecxz
push
inc
sbb
pusha
jle
std
loop
sbb
mov
mov
jg
push
lock
inc
sbb
bound
cmpsb
shl
adc
inc
mov
mov
pop
test
std
fnsetpm(287
fwait
jmp
push
filds
mov
jl
pop
dec
or
cmp
inc
movsl
mov
ret
int3
or
mov
movsb
push
jle
push
pushl
insb
pop
xchg
dec
pop
dec
push
sbb
mov
mov
hlt
in
add
lcall
jbe
jno
lcall
daa
sbb
daa
adc
pop
pop
cltd
pop
cmp
inc
addr16
ret
xor
cli
mov
cmpsb
mov
dec
push
and
push
push
repnz
pushl
cwtl
push
xor
sbb
fmull
insb
popa
sbb
das
ret
sbb
aad
dec
lds
or
mov
hlt
mov
popa
cmpsl
pop
arpl
mov
sub
jg
xchg
jb
es
mov
repnz
dec
stos
inc
xor
push
orl
decl
mov
dec
add
jo
insb
add
pop
mov
inc
xchg
daa
inc
stc
dec
adc
mov
or
mov
lods
out
fs
sbb
sbbb
loope
nop
outsb
shlb
cmpl
adc
push
cmp
fdivr
dec
ljmp
daa
xorl
cli
lea
push
dec
pextrw
lea
aad
insb
jmp
dec
sbb
or
jge
in
jo
ret
lcall
call
or
lods
sbb
dec
iret
mov
addr16
in
adc
mov
mov
and
gs
addr16
mov
push
push
pop
loopne
js
mov
sarb
adc
daa
stos
nop
push
pop
in
cmp
sub
in
and
call
mov
pusha
fcompl
aaa
faddl
or
pop
cmpsb
outsl
dec
add
icebp
sbb
fcomip
incl
sarl
mov
or
add
and
jno
out
incl
sbb
popf
int
pop
icebp
push
xor
dec
ljmp
mov
adc
or
jge
loop
pushl
rcrb
lods
cmpsb
add
mov
into
ljmp
dec
ljmp
mov
stos
sti
mov
push
arpl
mov
pop
shlb
pushl
cmc
xor
jecxz
mov
pop
in
pusha
stos
fwait
mov
enter
cltd
out
cmp
and
dec
int
adc
inc
ja
aam
test
jb
inc
test
sub
lods
in
mov
lahf
jp
sar
out
xor
cli
xchg
sarb
mov
lods
add
adc
loop
hlt
out
sub
sub
xchg
call
xchg
sub
cmp
mov
lods
jno
mov
xlat
dec
in
mov
ljmp
scas
mov
inc
daa
lea
stc
sub
les
in
lcall
movsb
mov
mov
pop
out
je
pop
flds
aam
jmp
popa
sub
sbb
mov
inc
repnz
gs
push
add
test
mov
cltd
xchg
xor
push
or
jl
xor
movsl
mov
nop
or
push
mov
xchg
inc
out
mov
cmp
decl
andl
hlt
lods
mov
dec
or
inc
out
adc
pushf
sub
pop
ja
mov
out
mov
jmp
clc
lcall
dec
imul
sti
es
es
or
mov
rclb
mov
dec
sti
jbe
inc
pop
or
mov
inc
loop
jb
stos
aaa
push
add
nop
cmp
imul
push
shr
shll
aam
add
and
push
xor
or
jmp
mull
sbb
jmp
dec
inc
cli
shlb
in
call
out
push
test
cmc
mov
adc
add
dec
es
out
mov
sarb
mov
lcall
aas
test
add
jmp
cmp
fcmovb
dec
daa
cmpsb
pop
xor
bound
add
pushf
out
dec
sbb
incl
lcall
add
jle
jg
cltd
call
pushl
pop
lds
sarl
mov
dec
xor
mov
iret
push
pop
or
aas
inc
cmpsl
lcall
decl
shll
or
clc
cmpsl
add
add
mov
adc
adc
pop
insb
lock
push
leave
cmpsb
pop
add
fisubrl
jbe
adc
jle
int
mov
jnp
jle
sti
gs
cmp
clc
das
cli
fwait
inc
outsl
loop
mov
ficompl
push
inc
fstpl
cmpsl
addr16
mov
xor
adc
ljmp
in
pop
push
mov
test
mov
pop
xchg
sahf
fidivrs
test
jl
decl
decl
sub
daa
adc
sub
lcall
jb
insb
dec
in
mov
sub
in
decl
in
jno
cs
btr
scas
lcall
push
add
lcall
imul
pop
xor
jmp
mov
fstl
nop
test
add
ljmp
cmp
nop
push
mov
mov
cmp
jp
cli
jae
popa
xchg
jl
lods
cmp
ret
ljmp
jno
push
cmpsb
jne
sbb
pop
mov
fistl
cmp
lds
popf
jnp
leave
loopne
test
daa
and
mov
jmp
dec
pop
adc
sarl
push
addr16
mov
movsb
or
pop
es
cmc
mov
aad
and
call
add
jl
push
shlb
mov
jg
fwait
cltd
fimull
es
adc
mov
pushl
pop
mov
xor
ret
pop
cs
jge
bound
add
sar
arpl
ficoml
or
pushf
mov
mov
pop
push
lods
iret
sbbb
jno
pop
scas
jmp
or
ljmp
shl
mov
inc
lret
call
pop
lds
es
cwtl
sbb
jg
incl
int
add
add
aad
das
iret
test
jo
jo
add
adc
pushl
sbb
dec
in
rep
push
sbb
loopne
and
shrb
jle
jnp
add
cli
sbb
dec
sub
hlt
dec
lock
dec
push
dec
jle
ljmp
mov
out
and
lea
xchg
mov
xchg
and
add
lret
imul
sti
and
incb
lcall
xchg
pop
push
cmp
jge
mov
test
cwtl
cmp
jge
dec
sbb
repz
ja
les
sbb
mov
jnp
shrb
jl
sub
daa
das
dec
mov
call
inc
iret
inc
mov
outsb
insl
imul
into
and
mov
inc
loope
dec
xor
cld
xchg
or
xchg
mov
lcall
mov
xchg
dec
or
bnd
sar
dec
jmp
jle
into
push
fidivrs
mov
mov
jl
mov
call
push
xchg
movsl
lods
cmp
dec
lea
test
push
incl
mov
sarl
xchg
leave
inc
xor
jbe
bound
call
adc
add
adc
cmpsl
lahf
xchg
cmpsb
push
ret
lcall
inc
mov
jg
xor
and
pop
or
negb
add
jge
js
pushl
cld
jmp
xchg
push
xchg
imul
fdivl
aad
jmp
ljmp
or
fwait
pop
aad
or
fsubrs
mov
pop
xor
jmp
mov
or
xcrypt-ecb
cmpsl
dec
and
incb
out
mov
xor
or
aaa
cld
pushl
xchg
shl
call
jo
je
ja
ljmp
decl
mov
imul
shll
sub
mov
xchg
mov
leave
pop
pop
scas
sbbb
mov
out
add
insb
jge
repnz
push
lods
mov
call
call
arpl
int
xlat
scas
sti
cmp
cld
fsubl
adc
mov
lret
or
dec
popa
push
cmc
cld
sbb
jp
mov
xchg
mov
xor
and
loop
out
xchg
imul
pop
push
mov
xor
insl
int
imul
push
roll
pop
das
in
into
mov
mov
call
icebp
arpl
hlt
push
mov
test
icebp
inc
mov
popf
std
pop
test
or
mov
sarl
jg
add
and
rorb
pushl
mov
lea
dec
test
outsl
mov
add
ljmp
lret
sub
inc
jo
and
push
push
xchg
xor
xor
data16
inc
cld
daa
pop
les
outsl
ja
jecxz
mov
loop
pop
dec
fdiv
and
ret
ljmp
push
insl
stos
mov
sbb
cwtl
dec
lahf
dec
or
test
sbb
aam
or
decl
xor
stc
rol
mov
test
stc
scas
data16
hlt
decl
in
jbe
in
into
js
leave
sbb
imulb
sub
and
incl
stos
repz
jge
mov
cld
rorb
je
push
cmovb
incl
imul
imul
data16
add
add
in
lahf
jp
sub
xlat
jbe
dec
and
xor
adc
mov
pop
push
mov
pop
mov
dec
jbe
and
add
jge
sub
cmpsb
jmp
push
jae
or
out
and
outsb
iret
adc
imul
jmp
fsubl
jae
movsb
mov
add
adc
and
push
in
fwait
sub
sbb
mov
push
loope
or
loop
int
or
ljmp
push
jg
xchg
cmc
loop
outsl
pop
cmpl
or
aam
mov
and
mov
jecxz
stos
mov
mov
out
call
es
sbb
jge
and
fcomip
loope
roll
xchg
inc
lods
mov
repnz
test
jp
jp
lock
dec
les
lcall
xchg
pop
lods
test
out
pop
aaa
and
scas
ja
rol
sub
add
adc
mov
out
push
cmp
sar
jb,pn
ret
js
imul
sbb
stos
pop
pushl
je
enter
mov
inc
mov
es
add
xchg
lea
loop
add
dec
rcl
push
mov
adc
lcall
mov
lods
dec
ds
pop
in
jmp
cmp
or
stc
lahf
popa
mov
lret
mov
cmpsb
pushf
mov
pop
and
les
pushf
inc
push
sahf
lods
fsub
inc
xchg
addr16
adc
mov
cld
in
fisttpll
and
incl
lret
lds
pop
xor
and
sbb
lcall
dec
ret
jb
jle
pop
inc
cmp
aad
jl
jp
les
inc
gs
jecxz
inc
inc
cld
jmp
sub
int
inc
lea
cmp
jne
dec
inc
loop
ret
mov
jecxz
out
aaa
pushl
mov
pop
cmp
adcb
addr16
push
pushf
and
lahf
dec
adc
jmp
negb
inc
inc
xor
int
ret
adc
push
push
adc
stos
out
mov
mov
ret
andb
in
xor
cwtl
shl
mov
js
shr
jecxz
leave
test
jno
xor
out
lea
inc
lock
ljmp
loopne
int3
jge
leave
bound
dec
lret
in
jecxz
jne
xchg
and
cmp
ljmp
pop
clc
mov
or
sarb
cld
scas
clc
decl
into
mov
lcall
gs
ja
jnp
push
movsb
testl
or
jns
pop
jle
decl
in
inc
jg
adc
jp
scas
rcll
pop
dec
inc
stos
jmpw
pop
lret
push
call
xor
jp
jns
jno
or
mov
mov
add
sub
add
add
aaa
loopne
unpcklps
xchg
test
jmp
loope
lret
arpl
adc
cwtl
jg
fnstsw
jle
cmp
movsl
idiv
in
fistpl
rolb
dec
jns
sub
add
cld
cs
ljmp
adc
dec
sub
bound
mov
or
and
and
cli
mov
pop
fs
sbb
mov
push
cmpsl
sub
push
fs
mov
std
ljmp
insb
add
mov
sbb
mov
dec
jge
pop
in
push
add
sbb
cs
and
dec
jno
call
sub
xor
xchg
cwtl
fisubl
pop
icebp
sub
pop
pop
pop
cltd
pushf
ret
dec
cmp
push
or
int3
mov
push
sahf
insb
mov
sub
leave
pop
lea
mov
jg
dec
push
cmp
decb
sbbb
and
cmc
ficoms
cmp
jecxz
xchg
out
cmp
mov
cmp
cmp
sub
inc
mov
pop
lods
mov
mov
sub
int3
loope
mov
mov
mov
nop
test
mov
jae
repz
cmp
pop
fistpll
cmp
mov
lcall
inc
inc
xor
jb
dec
jae
xchg
mov
cwtl
outsl
inc
mov
movzbl
sub
pop
decl
cltd
mov
push
add
jb
cmp
xlat
das
outsb
or
frstor
out
mov
mov
icebp
incl
repnz
subb
adc
ss
pop
arpl
test
rcl
mov
add
pop
into
inc
add
popf
jae
shlb
cwtl
mov
in
inc
push
sub
test
cmp
roll
ljmp
sbb
dec
add
test
xchg
xor
xchg
mov
dec
dec
push
decl
lock
cmp
bound
jp
sahf
push
dec
test
sti
xchg
ds
mov
pop
mov
adc
sbb
loop
minps
mov
and
and
dec
shll
jg
push
jl
cmp
fsubrs
inc
adc
in
aaa
out
push
mov
clc
sahf
loopne
enter
jmp
xorl
push
xchg
cld
call
sbb
and
mov
jmp
xor
inc
inc
cmp
jno
add
lods
sub
call
cld
add
ret
repnz
aas
insb
cld
lret
aad
gs
shrb
jg
xor
and
inc
nop
pop
inc
mov
test
and
jns
adc
ss
test
mov
outsl
push
or
stos
xor
cmp
int3
push
scas
or
mov
sub
fcomps
cmp
stos
imul
rolb
mov
mov
jb
xchg
mov
pop
iret
adc
out
or
nop
adcl
mov
icebp
call
aam
insl
sar
jmp
jbe
inc
js
aad
jle,pn
sub
xchg
bound
insl
mov
fimull
stos
adc
data16
inc
mov
cld
mov
andl
ljmp
jmp
jg
out
out
dec
in
push
jge
dec
xchg
pushf
aas
xor
xchg
ja
decl
out
mov
cwtl
mov
dec
into
loopne
std
mov
xor
ljmp
cmp
pushf
inc
mov
push
add
pop
inc
mov
dec
out
cmp
mov
sbb
fnsave
imul
stos
add
pushf
clc
jg
ss
dec
outsb
mov
das
lock
movsl
sti
ljmp
das
sbb
xor
xchg
arpl
add
jmp
call
jle
pop
and
pop
in
jg
movsb
arpl
push
pop
mov
dec
pushl
mov
adc
ret
movsb
mov
mov
dec
xor
sub
aaa
adc
pop
insb
cmpsl
mov
jmp
push
adc
rcrb
insl
dec
daa
sbb
push
mov
push
and
lcall
repnz
ja
data16
insl
pop
jecxz
and
sub
repz
gs
cltd
sahf
pop
das
adc
lds
adc
loop
jmp
stc
and
mov
scas
in
fisttpll
mov
outsb
insb
cmp
movsl
pop
ret
std
jmp
sbb
pushl
jae
ja
jge
jo
xor
sub
or
sbb
fs
lcall
movsl
pushl
das
or
adc
pushl
add
dec
add
push
pop
and
xchg
subl
and
jmp
xchg
or
pop
test
out
pop
mov
es
pop
pop
out
idiv
aad
fistps
decl
bound
fnstcw
pusha
cmc
xchg
rorb
cmp
cwtl
sti
mov
lret
push
or
inc
hlt
int
push
add
int3
ja
addr16
in
ja
dec
push
ljmp
mov
adc
inc
ficomps
xlat
fsubs
sub
push
mov
mov
incl
scas
push
cli
leave
int
fnstsw
mov
insl
imul
out
xchg
aas
push
cmpsl
cmc
jmp
sbb
and
sbb
cli
insl
and
or
popf
jnp
aas
cmpsb
sub
mov
add
lea
mov
jo
ret
and
icebp
and
mov
adc
inc
cmp
bound
cltd
sbb
cmpl
cld
data16
popf
sbb
xchg
pusha
mov
add
call
rclb
sub
jb
pop
and
mov
mov
loope
loopne
jg
shrb
decl
jne
xchg
push
enter
bound
ss
mov
out
aad
inc
ss
mov
xor
sbb
dec
rorb
fsubrs
jb
add
fwait
gs
add
mov
inc
cld
mov
loop
dec
test
cmpsl
xor
inc
fadd
aad
ror
mov
rcrb
sub
cmp
add
lahf
js
lods
mov
and
decl
jle
xlat
xor
mov
add
pusha
or
jle
jmp
call
and
mov
mov
push
sahf
aam
pushl
test
js
in
push
mov
push
sti
pop
cltd
cmp
test
sub
or
test
xchg
in
jbe
xor
imul
jbe
adc
lcall
pop
mov
icebp
lods
lock
mov
sub
push
fcomps
jnp
sub
push
idiv
decl
inc
add
jo
add
iret
mov
or
test
mov
lea
push
pop
sub
clc
pop
shl
rcll
repnz
test
insl
movsb
cmpsb
sahf
mov
scas
andb
jg
push
dec
stos
sub
fwait
dec
sub
scas
push
xor
xor
inc
inc
movsb
incl
or
outsl
add
jg
push
mov
add
repz
inc
movsl
push
pop
les
mov
decl
lahf
enter
dec
and
or
inc
sbb
subb
test
mov
cli
decl
xor
cmp
lods
aas
mov
outsl
repnz
jl
sbb
dec
out
xchg
es
jne
je
sbb
push
pop
pop
rcl
pop
cmpsl
add
cld
sub
push
xchg
jg
repnz
and
sub
adc
in
mov
mov
iret
sahf
pop
add
mov
mov
adc
into
push
add
mov
insl
inc
and
je
cmp
push
ja
inc
in
out
mov
outsb
gs
popf
xor
insl
popf
mov
sub
arpl
cli
push
lods
cmpl
jmp
sahf
icebp
xchg
and
sbb
ja
lcall
lods
jmp
fwait
push
jo
cwtl
xchg
and
out
jnp
jno
push
lods
mov
cli
mov
xlat
std
stos
cmpsb
and
dec
mov
sahf
int
andb
inc
movsb
xor
andb
aaa
std
incl
xchg
dec
jecxz
and
repz
push
cmpsl
pop
push
nop
xor
inc
jnp
xchg
pop
xor
decl
fiadds
sub
enter
sahf
loopne
cmp
ret
jnp
mov
es
fnsave
pop
jo
push
es
mov
mov
mov
stc
push
roll
mov
lcall
out
cli
mov
in
xchg
mov
mov
lcall
lock
fcomip
ljmp
lret
add
lret
mov
jle
fstpt
cld
and
dec
cmp
ret
dec
or
leave
jbe
jbe
clc
sbb
sbb
decl
mov
xor
cmpsl
ficomps
jmp
test
nop
loop
dec
push
dec
jg
stos
jo
or
aad
das
repnz
rclb
mov
gs
dec
mov
pop
xchg
hlt
shlb
lds
arpl
fisubrl
jl
test
pushl
cmp
mov
jmp
je
ja
mov
cmp
lock
inc
push
jbe
jbe
outsb
cmp
fstl
mov
andl
std
cltd
jmp
loop
adc
and
lods
or
or
jg
and
mov
push
fs
jb
cmpsb
in
inc
pop
pop
add
scas
cli
lcall
in
call
push
inc
sahf
sbb
lret
je
aam
shrb
ljmp
cmp
loopne
arpl
enter
or
repnz
aaa
fs
lcall
inc
shll
xchg
fiaddl
push
dec
cmp
ret
pusha
sub
jnp
sti
dec
mov
incl
outsb
dec
ljmp
cmpsb
mov
xor
dec
shll
cmp
dec
insl
mov
rcr
pop
jbe
stos
fidivrl
popa
out
and
repnz
mov
jecxz
cmp
cmp
push
fs
daa
loopne
mov
push
xchg
mov
push
xchg
push
scas
ret
xchg
repnz
push
and
and
and
jg
imul
lcall
pop
xchg
fsubl
inc
lret
xchg
pusha
das
sar
outsb
xor
and
mov
jns
sahf
and
mov
mov
ljmp
push
pop
jmp
sub
add
lahf
rol
xchg
stos
dec
arpl
mov
sahf
jge
push
jge
add
in
or
inc
cmpl
sub
or
dec
inc
aad
testb
xor
cmc
pop
cltd
daa
inc
jbe
mov
jbe
ret
jg
push
sbb
or
out
fidivl
adc
mov
cltd
pop
jns
push
call
jge
inc
dec
ret
mov
mov
sub
pop
stc
ljmp
filds
decl
push
fwait
or
and
nop
dec
dec
repz
adc
pop
xor
aaa
cld
mov
xor
add
jle
jp
mov
dec
cmp
jbe
jne
jle
mov
mov
xchg
cwtl
aaa
in
sbb
ljmp
test
xchg
cmp
out
push
in
dec
cld
jg
push
mov
std
dec
fdivr
jg
cmc
jbe
inc
aad
dec
jge
out
pop
mov
lahf
add
pushf
mov
fnstenv
cmp
decl
xchg
adc
popf
icebp
out
ret
jl
sub
outsb
and
fs
sar
xchg
push
negb
fs
lahf
cmpsl
ffreep
stc
dec
rcll
inc
scas
jne
inc
mov
mov
pop
pusha
pusha
shr
pop
push
das
test
push
mov
bswap
dec
outsl
push
mov
movsl
ljmp
mov
jb
out
dec
aam
dec
test
mov
adc
push
mov
push
pushf
lcall
inc
push
fmull
xchg
mov
outsb
loopne
dec
and
dec
dec
cli
fnstsw
call
sbb
fdivrl
push
in
scas
jnp
xorl
outsl
push
fdivs
inc
cld
cmp
xchg
sbb
xlat
push
lcall
dec
or
inc
nop
es
cmp
sbb
clc
call
mov
mov
push
push
jmp
adc
pop
ss
loope
decl
mov
outsl
loopne
inc
mov
repz
xchg
stc
jns
enter
arpl
mov
inc
sub
and
sbb
icebp
or
mov
jge
mov
and
and
pushl
out
jns
mov
xor
data16
test
bound
int3
fwait
mov
call
fildl
jge
xchg
rcrl
sbb
mov
jb
repnz
rorb
in
xchg
xchg
repnz
sbb
pop
sbb
push
hlt
mov
repnz
and
pushl
adc
sub
or
shl
daa
adc
jp
fwait
mov
xchg
mov
sbb
pushl
out
add
fstpl
xchg
ja
mov
mov
dec
adc
cli
decl
push
or
shld
sbbb
push
xchg
outsl
jge
and
icebp
ljmp
xchg
cli
ss
mov
dec
inc
call
out
loopne
lret
in
clc
or
lcall
or
cwtl
das
pop
add
and
std
mov
inc
cmp
pop
mov
repnz
jg
and
and
mov
stos
xchg
pop
movsl
movsl
sbb
decl
fs
inc
jmp
jmp
xchg
into
shl
xor
push
inc
rclb
mov
lcall
vaddss
and
repz
imul
lcall
test
jb
inc
mov
xchg
scas
daa
mov
stc
lret
jl
mov
inc
dec
add
adc
push
loop
jmp
pop
lahf
cwtl
push
mov
mov
sbb
sbb
loop
lcall
lcall
fs
aas
jge
mov
arpl
push
ja
add
fsts
decl
mov
or
popf
rorl
mov
ret
sbb
push
subb
loopne
pushf
xor
aam
aas
aad
lock
and
xor
cmpsb
mov
pushl
pop
hlt
nop
add
fmulp
inc
arpl
rcrb
mov
adc
jns
pushf
cmp
enter
dec
sti
sbb
fwait
sbb
mov
pop
jmp
inc
push
iret
icebp
pusha
ss
pushl
jg
imul
adc
pop
cmp
rorb
scas
rorb
int
lcall
flds
movsl
cmp
push
adcb
pushf
out
bound
cmc
inc
xchg
mov
pushf
push
jg
icebp
scas
clc
xorb
jnp
out
push
test
incl
dec
sub
mov
push
clc
push
and
lea
inc
in
sub
sarb
call
or
cltd
and
call
sbb
aad
orb
das
jecxz
out
mov
dec
stos
push
xorl
mov
stc
cltd
push
xor
sub
enter
mov
or
lea
aas
dec
xchg
adc
pop
inc
loope
insb
push
add
in
iret
daa
pop
lahf
jmp
call
mov
ja
clc
xchg
xor
mov
rclb
xchg
jo
aam
and
mov
jecxz
jmp
mov
jmp
out
imul
lea
xchg
call
jl
int3
mov
aaa
mov
roll
ficoml
sub
aas
xchg
ljmp
xchg
outsb
push
scas
scas
mov
inc
ljmp
idivl
incl
sub
cmp
jne
rorl
pop
mov
jne
mov
loope
incl
out
mov
push
jge
cmpsl
mov
adc
test
pop
movsl
loopne
test
adc
dec
daa
out
movsl
ret
mov
push
mov
mov
dec
call
sti
sbb
pop
mov
mov
ficoml
cmp
add
cmp
jl
stos
outsl
sti
jne
test
lods
cmpsl
jae
sub
ljmp
sub
push
ficoms
out
leave
sbb
imul
xchg
mov
out
or
repnz
mov
sbb
cmpsl
or
adc
inc
cmc
ret
and
call
loopne
mov
repnz
sbbl
aad
or
cld
decl
fldl
repnz
xor
int3
xor
mov
jno
outsb
xchg
icebp
ljmp
cli
jg
pop
and
pop
iret
loopne
jo
sti
nop
scas
dec
ficoml
add
jmp
push
fwait
and
or
pop
pop
negl
push
mov
loope
shl
pushl
ljmp
icebp
sub
cmp
nop
loop
xchg
jge
js
xchg
es
mov
ljmp
daa
mov
mov
xchg
enter
out
xor
inc
push
decl
lock
bound
and
inc
mov
inc
mov
dec
adc
ljmp
or
and
pop
out
sub
aad
push
lret
divl
or
adc
out
cmc
pusha
push
mov
call
push
arpl
adc
mov
mov
ret
sti
cmp
bnd
inc
cmp
test
mov
ja
jmp
rcrb
filds
hlt
dec
aas
lret
in
push
clc
add
cmp
data16
jecxz
xor
pop
adc
les
inc
adc
aas
clc
sar
ljmp
sbb
fiaddl
aad
dec
xor
sti
jmp
and
jle
push
push
add
sub
cmp
push
jp
jp
mov
xchg
lock
lcall
pop
sbbb
in
dec
and
decl
push
mov
mov
aas
jo
aas
mov
inc
lcall
inc
loope
push
rolb
jnp
bound
out
out
dec
cmp
mov
pop
push
pop
mov
fstps
dec
in
adc
insb
je
out
mov
jg
jge
repnz
mov
out
cltd
pushl
mov
jae
mov
loopne
jo
sahf
mov
sub
movsl
scas
call
cmp
sbb
outsl
ret
mov
sub
mov
mov
jbe
fimull
dec
push
mov
out
adc
xor
pop
dec
mov
add
jae
lret
dec
dec
xchg
inc
loopne
and
inc
lcall
fnsetpm(287
and
sbb
idivb
and
shrl
push
sbb
mov
pushf
fistpll
decl
mov
mov
rorb
xor
dec
jg
iret
and
nop
icebp
jmp
jae
dec
mov
ja
fxam
cmpsl
inc
push
jl
dec
lret
daa
stos
adc
sbbb
sub
subb
in
adc
and
mov
inc
sar
gs
stos
and
inc
jl
fisttpll
lds
call
add
jg
sbb
sti
cmp
repnz
mov
das
mov
das
cmp
mov
mov
cmp
call
aam
xorb
daa
push
ret
pop
pop
mov
inc
imul
and
in
stos
cmp
std
or
loopne
bnd
or
dec
cltd
xchg
inc
dec
xor
lcall
lret
jle
cwtl
mov
divl
stos
call
fiaddl
cmp
mov
cld
sbb
out
pop
jbe
mov
push
cmp
mov
ljmp
fs
lods
inc
cmpsl
adc
or
lahf
lock
mov
test
movsl
or
mov
push
mov
pop
jle
repz
add
pop
stos
pop
cmp
and
fiadds
sti
aaa
ds
jmp
stos
mov
int
jo
loope
jne
and
ja
adc
nop
bound
subb
ja
clc
imul
pop
push
inc
mov
test
jmp
mov
jg
mov
dec
aad
hlt
aaa
mov
arpl
mov
adc
pop
xchg
test
ret
push
push
daa
hlt
jnp
adc
adc
rcrl
addr16
inc
aaa
aaa
jg
ljmp
dec
ljmp
mov
fisubl
ljmp
jbe
shl
push
cs
jmp
pop
or
movsl
sub
sub
js
js
lods
mov
ljmp
ds
testb
dec
mov
mov
dec
sub
pop
add
xchg
fst
repz
or
dec
inc
adc
jmp
mov
cmpsl
inc
rcll
cmp
jns
xchg
fistpl
cmpsl
out
cli
mov
insl
adc
outsb
xchg
lahf
pop
cwtl
sahf
lcall
jmp
push
xchg
cmp
bound
jns
adc
out
imul
sub
das
leave
sar
stos
ds
mull
xor
adc
out
fimull
shll
or
popa
push
adc
or
icebp
pushl
loopne
jae
xchg
je
mov
in
fmul
fdivs
cmp
cmpsb
adc
loop
in
mov
pusha
jp
and
and
add
xor
popa
push
or
lcall
sbb
sub
cmp
xor
outsl
cli
ss
movsb
and
fwait
pop
dec
ret
lods
ljmp
adc
cwtl
xchg
xchg
std
shlb
xor
cli
dec
xchg
xchg
incl
outsb
adc
cmp
movsl
mov
adc
jmp
call
js
int
fwait
or
jecxz
pop
pop
inc
push
pop
jns
dec
xchg
jmp
mov
inc
dec
xor
add
mov
cs
jno
in
jmp
or
mov
ret
test
sbb
stc
idiv
mov
fwait
rolb
cmp
and
cmp
push
outsb
mov
jg
push
notb
scas
jg
loope
or
mov
in
mov
outsl
jle
xchg
cmp
dec
mov
lock
enter
daa
add
xchg
or
jg
mov
and
xchg
stos
divl
mov
xchg
fwait
jmp
ljmp
in
push
sub
xlat
push
jecxz
sub
pop
test
addr16
loope
xorl
mov
leave
xlat
dec
push
repnz
aad
shl
cli
inc
lret
and
add
lret
pop
loopne
mov
sahf
adcb
int3
lret
ret
call
iret
mov
negl
flds
lea
in
and
push
or
sub
mov
call
dec
xchg
dec
xor
and
mov
or
or
shlb
xor
mov
mov
pop
lret
inc
cld
aad
orl
rcrl
xor
call
arpl
or
jnp
sar
and
inc
pushf
xor
and
stos
pop
rcl
sbb
incl
stc
pop
mov
or
xor
mov
out
mov
sbb
mov
xor
adc
jmp
and
mov
push
mov
aad
icebp
fdiv
cmp
outsl
out
das
push
dec
lods
hlt
jecxz
ljmp
repz
pop
add
gs
cmp
imul
mov
testb
xchg
cwtl
jb
ror
mov
dec
dec
sti
ljmp
sbb
cmp
mov
outsb
shlb
ljmp
and
les
mov
sarb
pop
sbb
clc
out
xor
push
sub
xchg
movsb
iret
mov
jg
decl
daa
jg
jbe
inc
jle
xlat
daa
ds
cmp
add
fdivrs
jmp
das
mov
xchg
out
imull
push
mov
imulb
int3
out
xor
cld
dec
adc
je
movsl
xchg
jle
sbb
sbb
ja
outsl
push
jmp
fs
in
test
jnp
pop
push
es
je
push
sub
adc
lock
mov
aas
xor
test
fwait
mov
enter
add
daa
xlat
jle
aaa
jnp
lcall
inc
leave
mov
fs
loope
sub
mov
decl
int3
pop
jno
jnp
jb
or
xchg
mov
fcompl
fcoml
shlb
pop
std
das
push
into
daa
leave
imul
out
and
insb
mov
mov
adc
clc
int
rclb
pusha
xor
mov
aaa
fadd
mov
jo
scas
jnp
fcmovbe
mov
inc
ss
fisttpll
xor
cmp
jle
and
shrb
pop
cli
jo
add
push
mov
int
cwtl
aas
inc
fwait
jns
sbb
jecxz
mov
xchg
mov
aad
ja
in
pushf
incl
jmp
mul
jg
aas
sub
sub
xlat
lret
inc
xchg
out
stc
push
jecxz
or
das
push
mov
push
mov
lret
js
rolb
ljmp
stos
cltd
add
sbb
das
sarl
mov
sbb
roll
clc
rcl
aas
push
jle
stos
repz
pinsrw
mov
pushl
jl
outsl
ret
push
or
pusha
jo
push
rorb
pop
inc
push
adc
mov
addr16
es
les
call
insl
add
adc
gs
xchg
jns
push
fistpl
push
clc
jmp
fcomps
push
inc
dec
jle
out
enter
push
incl
incb
xchg
test
push
movsl
imulb
push
push
cmp
xchg
mov
xchg
mov
sub
fbld
lahf
sub
into
and
cli
cmp
xchg
filds
pop
in
adc
adc
jae
cld
repz
adc
call
dec
jbe
fidivrs
scas
shrb
mov
cmp
lds
je
cltd
adc
int3
shlb
pop
insl
movsl
sbb
lods
shrb
sub
call
adcb
insl
js
lahf
sbb
push
inc
fs
mov
repnz
loop
mov
incl
sti
pop
dec
stc
test
sbb
fnstcw
push
ja
and
mov
call
jne
mov
add
jbe
int
dec
push
movsb
add
outsb
inc
dec
lcall
jg
pop
mov
or
or
mov
out
repnz
sub
cli
xor
por
stos
das
clc
jmp
adc
mov
lea
push
mov
sar
incl
sbb
outsl
mov
ljmp
aam
lret
sbb
xchg
roll
fmull
pop
push
pop
lcall
mov
jmp
inc
add
mov
or
dec
mov
jl
lods
imul
mov
out
cli
lcall
cwtl
fstl
in
daa
dec
cmpl
sbb
js
mov
sub
nop
push
adc
sbb
inc
pushf
inc
in
fdivs
in
inc
fnstenv
xchg
and
ja
rolb
xchg
jecxz
mov
jmp
movsl
inc
aad
decl
mov
adc
es
rcl
scas
loop
mov
out
roll
pop
jmp
dec
roll
iret
sbb
pop
lods
outsb
imul
sub
out
mov
test
incl
shrb
mov
sbb
cmp
push
jno
jp
cmp
jl
jbe
decl
repnz
cmp
loopne
leave
imulb
cmc
or
repnz
cmp
mov
rcll
mov
jmp
mov
xor
icebp
push
inc
daa
in
je
daa
aam
dec
pop
leave
sbb
push
ljmp
add
jp
mov
iret
cltd
xchg
and
push
pop
test
pushl
and
and
inc
pminub
xchg
xor
in
jl
mov
test
jmp
fs
mov
adc
add
out
cmp
sarl
and
and
and
call
movsl
cmp
jb
mov
imul
adc
lret
or
fildll
fsubl
mov
mov
loopne
std
inc
arpl
inc
pusha
jne
loop
dec
sub
dec
xacquire
mov
xor
add
jp
jl
pop
insb
imul
sahf
fldcw
loopne
jmp
in
xor
leave
daa
add
lea
cmc
test
pusha
and
jg
pushf
jno
sub
addr16
jg
inc
push
out
call
mov
jmp
push
push
repz
incl
xchg
sbb
inc
pop
aad
add
fidivs
inc
rorl
pop
loopne
loop
jle
out
mov
pop
subl
ret
mov
iret
pushl
xchg
mov
adc
push
jle
jno
mov
mov
or
call
in
adc
fwait
psraw
inc
or
dec
xor
cmp
lret
mov
push
lcall
addr16
leave
je
outsl
or
mov
pushf
out
cmp
mov
and
mov
dec
or
imul
lods
call
mov
push
dec
jno
pop
lcall
dec
mov
and
fmuls
push
fisttpl
sahf
leave
sub
sub
pushl
push
or
icebp
leave
inc
lret
test
ror
cld
dec
dec
enter
test
call
cwtl
inc
push
addr16
or
inc
mov
push
aas
mov
bound
call
mov
shll
pop
stc
sbb
cmp
or
adc
pushf
imul
lcall
inc
and
movsb
mov
cmp
sbb
mov
mov
inc
popf
cmpl
in
jg
jl
fldt
gs
fimuls
pushf
fstpt
rolb
test
mov
push
orb
int3
xchg
cmpl
pop
mov
sub
repz
call
inc
imul
fbld
mov
push
lcall
mov
sahf
pop
gs
push
test
pop
sar
dec
jge
pop
jae
mov
fbld
aam
mov
dec
xor
cltd
push
sahf
push
push
call
scas
jg
decl
cmpl
sub
sahf
lea
clc
sub
bswap
call
mov
pop
add
arpl
shrb
outsb
xor
aaa
push
push
mov
add
stos
dec
mov
ljmp
gs
pmuludq
fsts
leave
call
js
clc
js
inc
add
fwait
inc
cs
sar
pushl
aam
xchg
es
xchg
mov
adc
sbb
hlt
sbb
cld
inc
hlt
test
shl
adc
pop
sub
xchg
cmpsl
push
or
lcall
scas
add
js
mov
adc
mov
test
sub
adc
xlat
test
mov
fadds
dec
leave
addb
xor
mov
pushl
dec
ret
divl
pop
sbb
arpl
gs
pusha
or
aas
out
bts
add
jmp
push
in
mov
fists
or
mov
in
mov
pop
mov
call
fisubl
adc
jmp
lea
paddsb
pop
fdivl
mov
and
jmp
ret
cmpsb
xchg
sti
test
inc
inc
push
dec
push
push
das
mov
lret
hlt
mov
iret
cmpsl
clc
out
push
cmp
add
js
push
hlt
jo
lea
xchg
mov
inc
and
inc
ret
nop
loop
jp
lcall
sbb
xchg
sub
pop
imull
sub
inc
stos
xchg
mov
jo
mov
shrb
rcr
xor
sbb
aam
je
lret
std
xchg
movsl
jae
lds
sub
lret
sub
inc
mov
es
xchg
mov
xor
and
push
push
jnp
pop
fiadds
dec
filds
rorb
push
mov
insl
enter
pushl
sbb
dec
rcrb
imul
dec
ffreep
push
lret
pusha
add
bnd
adc
rorb
insb
data16
push
ret
fwait
dec
std
mov
xchg
pop
dec
cmp
sub
cmp
test
cli
test
lcall
and
shrl
test
cmc
mov
leave
aam
pop
mov
stos
mov
out
mov
gs
pop
pop
repz
in
mov
sbb
dec
lahf
out
jg
call
push
jl
xchg
push
push
in
xchg
adc
lret
mov
lcall
leave
mov
lods
mov
pusha
popa
aad
outsb
loope
pop
adc
cmp
out
je
lcall
push
in
jmp
inc
aaa
jns
xchg
lcall
iret
add
lret
jmp
inc
cli
or
cmp
jne
cs
pushf
shlb
jp
mov
sbb
sub
or
push
lcall
jmp
pop
add
dec
push
xchg
lock
call
fisubrl
fcoms
push
xor
sub
ljmp
mov
out
xor
and
cmp
mov
jne
call
push
xor
mov
insb
cmp
jae
movsb
cmpsb
xchg
fsubrl
dec
mov
movsb
dec
sbb
adc
ret
jle
mov
repz
push
adc
jge
lcall
adc
repz
pop
int
adc
mov
dec
lea
xchg
adc
sar
jmp
pushf
push
lds
shlb
out
push
mov
mov
xor
dec
add
cmp
lea
arpl
xchg
pop
repz
imul
mov
push
das
ljmp
xchg
fbld
pop
xchg
ss
pop
cmc
jge
mov
pushl
add
inc
pushf
jno
cltd
ret
ljmp
push
add
sahf
push
fcomip
lcall
lret
add
mov
in
cmp
andl
cmpsb
lcall
jg
mov
cmp
enter
out
add
movsl
xor
dec
lds
mov
dec
adc
leave
mov
jb
sub
aad
lock
popf
inc
mov
add
mov
nop
les
loop
adcb
pushl
rorl
mov
jg,pn
mov
mov
push
es
les
es
das
add
aad
fcoms
call
adc
insb
ss
lcall
ret
mov
lods
iret
xor
divb
insl
decl
pop
sub
lods
je
xchg
aam
lods
adc
pop
aam
push
leave
lcall
jecxz
incl
hlt
cmpsl
mov
push
inc
jo
cs
or
shll
test
mov
mov
pop
hlt
mov
nop
sbb
mov
ja
test
shrl
xchg
out
loop
mov
rcll
jl
fstl
jbe
dec
cmp
decl
out
aas
mov
add
jle
xor
or
sub
mov
mov
fbld
mov
int3
dec
push
addr16
test
mov
outsb
sbb
sbb
fucomip
xor
pop
scas
add
in
cld
incl
and
push
push
pop
sub
call
jmp
ret
push
xchg
loop
cmp
push
jbe
xor
cmp
mov
jmp
mov
fistl
push
mov
mov
stc
push
xor
pop
inc
jno
rcll
mov
out
loope
les
inc
std
inc
popf
int
and
pop
ds
ja
stos
push
stos
push
outsb
xor
ljmp
jg
ljmp
pusha
adc
imul
mov
mov
shr
call
hlt
ljmp
lcall
into
push
cld
and
dec
rorl
outsb
mov
ret
jae
insb
icebp
test
imul
repz
and
fdivl
jmp
push
jbe
mov
mov
test
or
mov
mov
add
mov
mov
mov
inc
xor
loopne
ljmp
test
out
pop
pusha
nop
into
rorb
push
sbb
push
pop
pushl
aad
aas
or
xchg
mov
ss
enter
mov
ss
push
scas
incl
or
test
scas
jge
and
addr16
xor
sahf
push
rcr
addr16
mov
sub
inc
rolb
stc
dec
sub
push
sbb
dec
xchg
decl
lock
rep
cmp
mov
xor
or
cmpsb
rol
leave
sub
mov
mov
or
icebp
fwait
out
rclb
inc
sbb
incl
xchg
jbe
inc
test
out
jecxz
adc
mov
pop
dec
or
ljmp
cmpsb
jb
sub
xchg
loope
ss
ret
lret
push
xor
and
adc
int3
xchg
pop
lahf
sub
and
jmp
or
mov
fwait
mov
jmp
sahf
jae
jne
and
jl
push
mov
lahf
dec
lret
push
out
fisttpll
lahf
repz
mov
cmc
in
or
push
jg
popa
cld
and
mov
jno
jo
call
lds
lock
push
push
into
cmp
fdivrl
leave
clc
jo
xchg
jb
push
add
cli
dec
push
out
bound
into
xchg
dec
cltd
cmpsl
add
out
adc
adc
inc
lea
incl
sbb
add
enter
out
test
push
add
sbb
xor
lods
test
hlt
decl
push
jmp
mov
jle
std
sti
mov
decl
sub
and
mov
push
jnp
popf
jp
loopne
pop
dec
lret
or
cltd
aad
hlt
fildl
dec
data16
cmpsb
pop
je
and
pushf
insl
mov
xor
mov
jae
push
loop
push
lods
dec
mov
pop
roll
sbb
into
fwait
ljmp
ljmp
cmp
mov
rcrb
cli
adc
lock
call
xorl
enter
ret
roll
cmpsl
ljmp
popf
cs
ret
js
jg
sar
repnz
mov
lahf
xchg
xor
mov
inc
mov
xchg
nop
lods
cmp
fs
test
adc
cld
fdivp
dec
jbe
ficompl
adc
pushf
adc
pop
or
inc
add
xchg
jge
add
push
push
out
test
out
int
pushl
test
lcall
enter
xor
fildl
int3
push
stos
ret
call
lcall
cmc
xlat
and
lcall
inc
outsb
pop
in
dec
iret
mov
fcomip
enter
add
in
fstl
fistps
decl
jno
cwtl
push
adc
mov
stos
aam
or
add
jmp
ds
sub
rcll
fsubrs
push
mov
in
and
mov
fidivl
adc
sti
stos
les
push
or
dec
push
addb
jo
jb
faddl
jg
mov
pop
sub
loop
les
push
pop
lahf
ljmp
pop
enter
xor
scas
push
ficomps
es
lods
jmp
imul
xor
inc
jns
add
and
cmpsb
mov
inc
lods
test
insl
out
ret
int3
cmp
ljmp
dec
pop
mov
lea
cmc
std
je
mov
dec
stos
movsb
cli
jecxz
cltd
mov
cmpsl
sbb
mov
aad
xchg
jno
xor
insl
dec
call
xor
cmp
lahf
jmp
pop
dec
inc
fs
mov
das
subl
jmp
ja
sub
sbb
inc
xchg
andb
aaa
notl
outsb
cwtl
sub
decl
jo
add
ja
gs
mov
mov
adc
ljmp
cmpsb
mov
incl
add
sbb
pop
call
jecxz,pn
sub
jl
pushf
fcomip
call
sub
popa
xchg
adc
push
or
xchg
mov
push
daa
popf
jmp
pop
rol
jae
lods
fstp
adc
sbb
mov
sbb
xchg
mov
dec
pop
scas
cmpsb
pushl
icebp
out
in
sarb
cmp
jmp
or
loop
shll
jmp
fucom
push
push
cmp
mov
xchg
push
mov
mov
sub
jo
inc
sahf
incl
mov
cld
sbbl
sub
and
inc
add
push
filds
mov
repnz
pusha
pop
imul
inc
fnstcw
cmp
scas
mov
inc
jp
test
imul
bound
jmp
pop
sub
mov
xor
sub
jns
and
pop
dec
inc
cli
in
xchg
dec
pop
rcrb
bound
rclb
mov
in
push
inc
loopne
test
pusha
inc
out
jb
enter
dec
inc
inc
mov
out
add
or
push
pop
cmp
loope
pop
daa
sbb
push
mov
mov
push
sbb
adc
test
call
pop
pop
lahf
xchg
rorl
into
stos
int3
and
xchg
int
aas
or
ds
xchg
xor
xchg
mov
je
or
rcl
loopne
xchg
xor
mov
lcall
repz
cmp
mov
xchg
inc
push
pop
aam
dec
fstl
into
fistpl
jg
sbb
decl
xor
imul
loopne
ja
lahf
cmp
lods
aad
stc
js
test
popf
push
std
int
test
jae
stc
cmp
or
fsubr
push
or
shll
jg
cmpsb
sbb
lock
pop
icebp
push
push
pop
mov
jo
clc
mov
dec
inc
pop
in
cmp
mov
mov
mov
dec
xchg
popa
scas
or
cld
scas
adc
std
idivb
pushf
jnp
mov
inc
ficompl
lds
push
sbb
cmp
dec
sub
fst
ja
mov
jg
inc
mov
fldcw
je
fnstsw
ficompl
push
add
jns
js
pushl
jp
mov
stc
test
sub
mov
adc
lret
add
test
jmp
push
lcall
sbb
nop
pop
fcomip
add
and
jo
ret
cli
jmp
mov
out
stc
lcall
loop
icebp
or
push
ljmp
xor
inc
jmp
lcall
mov
movsb
imul
fiaddl
jmp
and
shll
test
push
xor
ljmp
jp
jmp
lcall
ljmp
jae
in
cli
cltd
insb
add
mov
jg
call
enter
fwait
call
add
fistpl
and
ljmp
push
push
pushf
push
sbb
mov
pop
sti
mov
popa
sbb
outsl
sbb
push
cmp
loope
add
sbb
aas
pusha
mov
cmp
mov
jl
push
cmp
add
fwait
pop
loope
loop
and
mov
push
clc
and
mov
push
arpl
push
lcall
aad
cmp
decl
mov
ret
rcll
pusha
sbb
aam
sarl
push
sub
sbb
sti
push
pop
jmp
fsubp
sbb
xchg
push
push
repnz
stc
adc
ljmp
cld
xchg
dec
sbb
aas
mov
mov
mov
mov
jns
call
loopne
fs
cwtl
pop
mov
mov
xchg
ja
mov
out
mov
cmp
shrl
and
icebp
pop
jmp
out
ret
scas
repz
mov
das
pop
sub
inc
inc
xor
lcall
mov
mov
fbstp
cld
insl
xor
jecxz
mov
ret
jns
stc
hlt
aaa
cs
scas
ja
lcall
sub
rcll
decl
fdivp
adc
jnp
push
add
pop
add
lcall
popf
insb
xor
pop
pop
adcb
decl
sbb
dec
repnz
or
xchg
daa
xor
pop
loop
push
sub
addr16
ljmp
cli
mov
adc
ficoml
and
ror
push
mov
adc
incl
mov
mov
mov
xor
pop
xor
call
in
cmp
jle
mov
add
add
and
ror
push
fs
jno
add
cltd
add
decl
arpl
ret
in
add
mov
es
and
push
jmp
cmp
aad
out
sbb
dec
xor
pushl
hlt
jbe
mov
ljmp
decl
addr16
pop
mov
enter
lock
shr
fs
icebp
lcall
or
jne
stos
sub
cs
jmp
and
in
pushf
dec
pop
jns,pn
shrl
push
test
xchg
dec
cmpsl
mov
sti
adc
mov
call
std
pop
stc
inc
pop
pop
jge
mov
jb
das
into
test
cmp
lcall
jno
cwtl
test
pop
mov
bound
jmp
insl
fidivrl
ss
shll
lret
xchg
and
pop
cmpsl
xor
cmpsb
push
out
add
ljmp
rorb
js
rcl
jmp
stos
setbe
add
xchg
adc
mov
xchg
push
inc
enter
jo
adc
inc
aad
pop
mov
pop
sub
or
pushl
sbb
xlat
push
out
cmp
lret
out
cmpsb
rcll
push
mov
cmp
loope
std
sub
mov
sub
inc
cmp
or
xor
sbb
out
out
test
adc
shll
dec
test
insb
mov
adc
fs
cmpsl
mov
pushl
xor
jo
xor
arpl
lods
pop
dec
adc
mov
or
stos
mov
add
push
outsb
xchg
clc
out
mov
push
cs
lods
loopne
imul
mov
jbe
ss
dec
xchg
dec
sub
adc
mov
daa
mov
inc
sbb
sub
push
icebp
mov
mov
xchg
jbe
jo
dec
incl
mov
test
or
daa
inc
jae
sub
leave
xlat
or
scas
cld
mov
in
mov
and
shrb
pushl
mov
xchg
add
sbbb
and
or
loope
ljmp
add
jns
adc
hlt
lock
mov
nop
out
adc
hlt
cmpsl
repz
or
roll
arpl
incl
sub
loop
jbe
aas
pop
add
lahf
or
xchg
and
sbb
dec
jo
add
fcomps
add
sbb
xchg
add
sub
popa
sub
clc
fists
divb
mov
ret
jmp
das
push
das
scas
loopew
ljmp
mov
mov
jp
or
scas
inc
push
jecxz
jge
dec
ds
xor
inc
sbb
dec
fnstsw
and
inc
xor
rolb
adc
xchg
enter
inc
fwait
push
cmp
mov
es
dec
sti
jle
sar
lea
inc
mov
hlt
outsb
frstor
push
lahf
and
xchg
inc
mov
popf
and
gs
push
push
not
rclb
sub
std
das
cli
lcall
shll
outsl
shlb
jecxz
cli
rorl
inc
mov
ljmp
into
in
adc
xchg
mov
adc
push
and
adc
pop
icebp
stos
xchg
testl
push
sub
fcmovb
sub
call
inc
mov
pop
stos
loopne
rclb
push
xchg
xchg
push
adc
jmp
jo
test
pushl
jno
bound
mov
mov
rorb
in
jg
cmpsb
add
aaa
sub
inc
mov
jae
add
std
and
insb
mov
in
insb
ret
cs
jb
icebp
out
lods
jns
add
mov
or
adc
adc
or
out
mov
in
mov
enter
lret
sub
mov
xchg
imul
incl
xchg
leave
repnz
fwait
adc
push
push
jo
ret
push
xor
mov
cmpsb
dec
insb
loop
xor
int3
pop
and
mov
int
mov
dec
inc
push
push
insb
imul
call
insl
mov
mov
mov
decl
aad
imul
in
jecxz
gs
sub
data16
stc
enter
insl
adc
cmp
decl
ret
cmc
cld
lods
in
cmp
dec
in
cmc
lods
add
insb
leave
cmpsl
sub
mov
mov
arpl
or
daa
mov
subb
popl
inc
scas
loope
cmc
aas
mov
ja
decl
sbb
fwait
jo
lret
cmp
stc
or
mov
je
lret
push
push
into
sub
clc
outsl
outsl
push
add
mov
stos
out
xchg
xor
mov
out
dec
arpl
outsb
mov
pop
hlt
or
push
das
outsb
jmp
out
ljmp
stos
rcll
inc
xor
jmp
rorl
pusha
and
dec
das
js
xor
ja
subb
push
add
sti
jg
incl
sub
cmp
jmp
mov
xchg
xchg
jnp
std
or
mov
test
pop
mov
mov
and
adc
mov
jbe
sbb
pop
sub
adc
dec
xchg
daa
inc
xchg
lods
or
aad
xchg
inc
push
daa
aad
push
sbb
call
filds
popa
mov
roll
mov
cmovno
push
xchg
shlb
inc
enter
fimull
pop
icebp
dec
jmp
sub
call
sbb
adc
cmp
pop
dec
notl
inc
dec
jo
mov
iret
jg
stc
mov
frstor
into
iret
popa
adc
mov
cmpl
xlat
ljmp
repz
jmp
dec
sbb
cli
fucompp
mov
dec
mov
aas
pusha
add
add
ljmp
scas
insb
or
mov
insl
dec
testl
push
gs
clc
inc
imul
aam
mov
idiv
jmp
or
jns
mov
mov
sub
sbb
test
orb
ljmp
mov
xchg
ret
mov
dec
cmpsb
add
push
and
ret
bound
mov
rcl
loope
shl
addr16
inc
or
icebp
lods
icebp
dec
lock
mov
mov
call
jmp
inc
sub
in
ret
lock
mov
add
xor
push
iret
jno
in
stos
dec
inc
push
shrb
int3
clc
ljmp
in
xor
lret
mov
movsl
mov
or
rorb
push
xchg
lods
test
xor
push
jmp
push
mov
mov
mov
lock
adc
cld
xor
ficoms
sbb
subb
rorl
inc
icebp
and
loopne
in
pushl
sub
inc
fwait
adc
mov
push
sub
in
dec
gs
adc
call
xchg
mov
ljmp
jno
ret
mov
lods
adc
push
fmuls
in
fbld
insb
xor
insl
pusha
jg
add
sti
push
mov
cmp
lock
push
daa
or
pushl
sub
pusha
jmp
cmp
xchg
add
push
ja
fs
repz
incl
and
mov
in
or
jecxz
test
pusha
stos
push
aad
repz
call
call
loope
iret
sbb
aam
sub
mov
fildll
mov
pop
adc
xchg
and
mov
cwtl
mov
xchg
rorl
mov
aad
pop
int3
aam
lcall
int
adc
std
jno
fdivrp
stc
push
arpl
pop
pop
inc
jae
dec
jmp
aas
insb
aam
sub
inc
lcall
aad
pop
fcom
cmp
jmp
popf
add
mov
cmpsb
dec
and
cmpsl
push
mov
mov
mov
or
push
lods
and
pushl
stos
loope
push
imul
outsb
pushf
add
loope
mov
pusha
xor
loope
pusha
test
sub
cmp
mov
push
int3
jmp
je
pushl
imul
cltd
ja
iret
mov
test
pop
fs
jb
jl
jg
fcomi
push
push
daa
sub
test
and
clc
xlat
and
mov
or
mov
inc
fistpl
mov
cs
arpl
repz
pusha
rclb
test
jbe
push
scas
test
les
ret
iret
push
bound
pushl
mov
inc
scas
push
dec
fildl
dec
mov
mov
in
sub
add
loope
clc
or
movsb
ficomps
mov
sbb
xchg
jmp
iret
cmpsl
sub
arpl
inc
movsb
and
jo
push
jg
addb
bound
add
sub
ljmp
pushl
jno
filds
das
call
sbb
stc
std
les
cli
inc
mov
inc
popf
call
mov
xchg
fidivs
lods
imul
out
xor
push
imul
fisubrl
decl
fldpi
cmpsl
test
icebp
lcall
cmp
imul
adc
in
dec
xchg
mov
sarb
sbb
stos
sub
cmp
lcall
cmp
std
daa
mov
push
mov
xor
mov
movsl
decl
fdivrs
mov
mov
pop
push
xchg
call
adc
mov
ljmp
xlat
rorb
mov
mov
xlat
mov
mov
call
mov
rcl
inc
xchg
push
ror
js
aas
repnz
sub
pop
adc
lock
jp
call
xchg
into
loopne
adc
daa
pop
sbb
xchg
mov
sbb
inc
sbb
and
sarb
pop
inc
sbb
aaa
loope
push
cmp
scas
xchg
and
jmp
repz
iret
mov
mov
sahf
mov
jo
pop
aas
sti
xchg
ds
jmp
pushl
add
sbb
enter
imul
mov
sub
jb
insb
std
inc
xchg
and
pushl
adc
mov
jo
mov
jg
mov
into
mov
mov
addl
sarl
inc
mov
outsb
cmp
mov
incl
pop
mov
jle
filds
cmp
jnp
mov
mov
jp
or
add
fsubl
and
push
inc
inc
adc
inc
mov
add
in
sbb
pop
mov
mov
add
add
jge
je
mov
and
push
lds
inc
adc
and
movd
incl
jp
dec
push
add
test
hlt
xor
jb
js
call
add
mov
or
daa
lods
andb
scas
and
jp
push
bound
push
cld
inc
pop
sbb
jecxz,pn
cmp
mov
jmp
push
push
cmp
sarl
loopne
jmp
sarb
pop
cmp
mov
ljmp
xchg
icebp
mov
insl
mov
in
cmp
mov
mov
decl
push
sar
sub
xorl
fs
xorl
inc
subb
push
mov
popa
push
dec
sub
jl
js,pt
xchg
jns
sbb
stc
ds
ss
cltd
sahf
mov
in
gs
xor
mov
ror
pop
hlt
dec
push
push
mov
gs
sub
and
jecxz
sbb
xchg
std
push
lret
push
je
das
add
adc
ret
clc
shr
inc
mov
ja
push
dec
xor
fistpl
stos
jmp
push
cmc
outsl
jae
mov
pusha
push
negb
jecxz
jmp
adc
cltd
popf
aad
fsubl
adc
je
push
mov
fisttps
and
jg
out
inc
in
stos
add
rclb
idiv
and
xchg
aas
fistps
lcall
cmp
cmp
rcll
fbld
mov
cmp
mov
fstl
mov
sahf
arpl
mov
xor
jl
stos
jl
mov
push
popa
ret
pushl
push
inc
cmp
daa
insl
sbb
pop
test
and
dec
dec
sub
stos
jle
cmc
pop
mov
jge
jno
pop
cld
sbb
ret
mov
fs
jmp
in
std
xchg
fucomi
ss
movsl
push
ss
pop
loopne
aam
call
inc
add
cmpsb
rclb
pop
vmovdqu
fxch
mov
lods
inc
shlb
andl
xchg
or
cmp
mov
pop
xor
rcrb
sub
popf
push
lock
push
xchg
xchg
pop
loopne
xchg
or
aas
push
xchg
and
sub
dec
cld
mov
out
pop
fmul
cmp
data16
xchg
push
aaa
test
loope
decl
sub
int
mov
data16
mov
shll
stos
jg
mov
or
xchg
out
add
enter
stc
rol
push
sbb
and
ljmp
dec
pop
mov
subl
clc
push
mov
jns
cmp
out
lds
lods
addb
decl
icebp
hlt
cwtl
into
sbb
pop
daa
or
xor
out
mov
add
aaa
mov
sbb
cmp
call
xchg
push
mov
enter
inc
in
ljmp
movl
mov
int3
mov
icebp
ret
xchg
fadds
rcl
mov
mov
incl
jo
loopne
add
insl
stc
cld
sub
jnp
inc
lods
xor
cli
mov
decl
xchg
sbb
or
clc
mov
sbb
cli
fiadds
clc
dec
xchg
push
push
jmp
mov
adc
pusha
and
decl
int3
or
xchg
mov
xchg
dec
int
and
or
movsl
jae
mov
js
decl
xlat
fildl
aam
jge,pn
shrb
pop
pop
cmp
loopne
sub
decb
lea
fcoms
shr
pop
mov
fistl
decl
push
xor
xchg
dec
cs
sub
cmp
into
mov
jge
mov
lcall
pusha
push
jbe
pop
cmp
xor
inc
add
sub
scas
push
add
cld
jmp
fucomip
xchg
or
jbe
aam
nop
adc
sbb
stc
ljmp
je
inc
test
dec
and
repnz
lcall
mov
adc
not
leave
pop
sub
shlb
in
loopne
ss
push
pushf
cmp
je
pop
mov
jb
mov
and
in
sbb
cmc
popf
int
mov
jno
mov
mov
aam
fcomip
pushl
fs
xor
js
sub
xchg
and
test
out
pusha
add
filds
test
sti
jle
lods
stos
push
jle
push
dec
mov
mov
outsb
sbbl
popa
inc
enter
cmp
pop
scas
fisttps
add
mov
cmp
sarb
mov
test
mov
inc
jb
daa
popa
mov
add
xchg
cmp
call
pop
and
pushf
jmp
clc
mov
dec
out
cmpl
int3
mov
std
push
loopne
pushl
or
mov
mov
cmp
test
hlt
and
call
mov
sub
repz
inc
mov
fdivrl
adc
je
push
sarl
in
push
fsubrl
pop
mov
lds
pop
sub
xchg
jno
and
pop
in
incl
cmp
mov
pusha
or
push
mov
idiv
decl
addr16
popf
mov
xor
fdivp
jmp
repnz
pushf
fstpt
cmp
cli
cmc
mov
leave
rorl
xchg
int
inc
add
mov
mov
mov
adc
jg
mov
fwait
mov
test
adc
cmp
xor
stos
repz
mov
pop
sub
movsb
ljmp
mov
cld
ljmp
adc
xchg
cltd
fcmove
pop
xor
sub
jg
cwtl
mov
add
add
aas
ret
add
js
mov
aas
fsubrp
movsl
into
add
repz
mov
mov
add
fst
jns
test
dec
dec
or
xchg
loopne
pushl
jle
rolb
out
mov
out
subb
call
inc
out
aaa
aaa
jnp
jne
mov
cli
sahf
cmpsb
shlb
or
add
leave
loop
mov
inc
fdivs
and
mulb
pop
sub
ljmp
dec
xor
jne
mov
pop
ficompl
mov
pusha
sbb
jge
scas
xor
mov
outsl
sub
add
or
into
je
out
or
jmp
jp
and
sti
jmp
jno
imul
daa
xchg
pop
xor
jne
push
enter
add
jmp
loop
cmp
and
inc
xchg
pushf
mov
xchg
inc
mov
jne
in
mov
lock
mov
pop
je
add
ljmp
jg
cmpb
pop
sub
xchg
xchg
cmpl
xor
loop
leave
inc
dec
iret
mov
sub
and
out
and
or
das
clc
call
push
adc
out
pop
pop
sbb
dec
gs
clc
fisttpl
pop
test
test
orb
add
mov
ljmp
ficompl
xchg
cmp
mov
adc
push
popl
sub
jmp
in
inc
add
stc
adc
std
cwtl
shrl
icebp
lcall
ljmp
lock
mov
mov
in
arpl
flds
dec
mov
pushl
xchg
arpl
xor
dec
mov
in
les
inc
inc
mov
or
call
pusha
pop
jmp
add
lock
out
mov
dec
xchg
cmc
je
push
adc
push
inc
lcall
or
or
mov
push
mov
add
inc
call
add
jne
sbb
mov
and
sbb
lods
mov
int
lret
xor
push
pushl
outsb
aam
jle
ds
in
xchg
lcall
jbe
das
xchg
mov
nop
lods
pop
mov
fcompl
jmp
xchg
ljmp
lock
fisttpll
dec
sar
pop
sub
into
pushf
mov
or
out
mov
mov
rcrb
push
daa
sbb
pop
std
adc
inc
dec
les
jge
sub
push
mov
jl
loope
incl
adc
cmp
xchg
mov
mov
je
and
fs
lcall
das
mov
daa
repz
adc
sub
ljmp
mov
jle
xor
add
xchg
aas
lahf
mov
out
mov
add
dec
mov
push
divb
data16
mov
pop
lahf
mov
inc
cmp
jg
mov
ja
nop
test
fstps
pop
ret
les
pushf
xlat
mov
mov
dec
cmp
cli
adc
bound
cmp
xchg
int
nop
jmp
xchg
in
add
xchg
xchg
filds
movsl
pop
lret
xchg
pusha
dec
popa
cmpsl
in
into
popf
ljmp
pop
mov
inc
or
xchg
lahf
or
out
push
or
mov
dec
mov
shrw
cld
decl
aas
dec
mov
sar
loop
es
ret
icebp
adc
loope
dec
jg
or
mov
aas
push
fiaddl
ret
decl
mov
sub
imul
les
daa
and
jg
inc
out
aam
jns
pop
push
jno
std
nop
repnz
mov
insl
fwait
pop
test
and
adc
mov
mov
loopne
push
in
icebp
jns
js
ljmp
gs
out
jmp
stos
inc
sbb
push
loope
arpl
jae
sub
cmc
shrl
leave
inc
xor
into
clc
aam
xor
cld
cmp
or
cltd
lods
mov
jle
xor
jmp
inc
sub
popa
dec
push
dec
add
cmp
test
outsb
push
jmp
call
jmp
cltd
sbb
inc
push
mov
ljmp
fwait
rcll
add
inc
xchg
hlt
mov
add
lock
ffree
outsl
fcomip
incl
xchg
fs
lahf
les
push
cmp
iret
lock
lcall
mov
sbb
push
fst
mov
push
inc
sub
and
or
push
jg
or
sub
subl
or
mov
in
lahf
cli
and
mov
mov
sub
ret
cld
adc
xor
imul
pop
inc
clc
pop
das
ret
popa
nop
jmp
and
mov
in
dec
icebp
and
das
pop
insb
lock
mov
insb
out
stos
dec
fisubrl
test
cmpsb
hlt
xchg
mov
inc
out
xchg
push
mov
ljmp
xchg
test
xchg
pop
pop
fisubrs
outsl
xor
sbbb
ljmp
sub
xchg
mov
cmp
and
test
add
sub
or
xchg
test
or
pop
jmp
scas
xchg
ljmp
scas
adc
lcall
dec
jle
into
adc
dec
mov
sar
andl
shr
pushl
test
fidivrl
das
mov
xor
out
ja
adcl
sti
ss
decl
cmp
in
mov
push
mov
aad
xor
ror
add
movb
mov
shll
add
dec
call
jecxz
pop
xchg
fildll
mov
lock
and
call
icebp
loop
xchg
mov
jl
inc
push
mov
push
into
jbe
inc
and
push
inc
cmpsb
scas
mov
mov
xor
out
mov
xchg
jmp
xor
jg
dec
daa
or
incl
out
pop
cmp
out
das
push
cmovns
popa
and
xlat
jnp
jns
es
lcall
dec
mov
push
xorl
fadd
adc
testb
push
push
mov
cld
mov
xor
or
testl
xor
or
jg
inc
in
and
psrad
ds
out
pop
sbb
ret
aam
jno
incl
pop
scas
add
and
cwtl
xlat
mov
hlt
jmp
popf
outsl
or
jmp
sahf
in
adc
push
ljmp
jne
filds
in
scas
sbb
decl
fdivs
frstor
dec
pop
clc
int3
inc
lea
xchg
pushf
or
in
cmp
leave
cmpsl
pop
push
notl
mov
sti
ljmp
xchg
or
rcll
mov
repz
mov
div
mov
mov
xchg
arpl
test
pushl
jb
and
cs
xchg
ds
or
mov
out
push
adc
cld
jmp
inc
lods
js
inc
gs
ja
cmp
jg
outsl
fstpt
mov
ror
jb
inc
cmp
and
fcmove
popf
and
or
fisttpll
xor
out
or
nop
and
push
add
xor
les
cld
ljmp
push
mov
jo
into
mov
pop
pop
addr16
in
lcall
jmp
mov
adc
jb
mov
outsb
ss
lahf
mov
lods
test
fcmovbe
js
fwait
out
lcall
xchg
sub
adc
adc
mov
call
pop
xchg
call
jmp
dec
mov
mov
xor
sub
call
aam
mov
sbb
mov
loopne
sbb
cmp
push
bound
out
cmp
fisubl
stc
xchg
lock
inc
xchg
repz
sbb
xchg
sti
addr16
jecxz
ljmp
mov
inc
add
adc
jne
push
add
shlb
adcl
shrb
enter
iret
jbe
orl
pushf
mov
fmuls
in
fists
aad
jnp
imul
insb
clc
pushl
and
cmpsl
dec
sub
jb
sbb
orb
pushf
jg
inc
mov
jbe
mov
cs
inc
es
loopne
xchg
xor
cltd
inc
bound
std
daa
lock
lret
jmp
lcall
mov
cld
test
xor
xor
dec
jmp
loopne
sbb
xor
pop
repz
clc
mov
add
decl
push
xchg
mov
pop
add
push
mov
xor
and
nop
mov
fadds
sarb
mov
hlt
push
mov
fxch
popa
mov
adc
jecxz
popa
seto
dec
jbe
jp
adc
decl
lahf
lods
or
mov
insl
xchg
xchg
cmpsl
jecxz
aas
ds
sahf
cwtl
and
jle
jg
inc
shlb
movsl
jae
mov
xor
fdivrs
sbb
shrl
xchg
jmp
push
push
dec
pop
jmp
imulb
lcall
imul
inc
daa
push
or
xor
pop
sarb
rol
clc
cld
xchg
adc
flds
mov
addr16
mov
call
or
dec
leave
rcrl
test
jmp
mov
mov
ret
es
iret
sbb
inc
mov
adc
mov
lcall
movb
in
dec
sbb
xor
xchg
fwait
or
loop
aad
jle
mov
gs
mov
push
jnp
std
cmp
pushw
push
stos
adc
out
cmc
jmp
xchg
call
dec
adc
ret
lcall
enter
movsb
mov
fbstp
outsb
xor
lret
and
fimull
cmpsl
sbb
flds
sti
dec
rcll
icebp
mov
psubsw
das
sahf
arpl
or
fdivrp
or
mov
push
cli
xor
sbb
lods
sbb
xlat
mov
outsb
xchg
out
push
push
frstor
adc
inc
aas
nop
jle
inc
ljmp
xor
fbld
jmp
add
mov
into
insl
fdivp
iret
sbb
inc
gs
jns
in
inc
jbe
push
out
cli
decl
cltd
and
xor
xor
mov
test
stos
clc
outsb
xor
ljmp
inc
xorb
stc
scas
lea
icebp
sarb
mov
das
loop
roll
pushl
xor
jbe
sub
stos
fmulp
in
cwtl
shlb
mov
shlb
decl
mov
fidivrs
icebp
mov
testb
pop
icebp
add
mov
call
mov
pushf
rolb
ds
repnz
mov
or
mov
cmp
cmp
ljmp
or
mov
ds
push
int3
sub
test
arpl
into
sbb
ljmp
mov
mov
and
scas
fbld
mov
testb
pop
idivb
test
mov
jnp
lahf
mov
jb
stc
and
push
cmp
movsb
xor
and
leave
call
pusha
stc
push
adcl
addb
pop
xchg
mov
stos
inc
jb
movsl
ret
popa
cmpsb
dec
cwtl
call
push
dec
sub
dec
punpcklwd
adc
push
iret
shlb
rorb
das
int
and
add
ror
aas
out
ljmp
mov
dec
adc
xchg
fiadds
mov
pop
adc
cli
icebp
cmpl
mov
xor
aaa
popf
std
jg
add
or
or
ljmp
scas
lods
sbb
sub
inc
pop
in
adc
xor
push
mov
mov
fstl
add
insb
scas
rcrb
mov
mov
jb
adc
stos
call
xchg
imul
mov
inc
loope
stc
jmp
mov
sbb
fwait
sarl
pop
cmp
decl
and
push
mov
lea
xchg
lods
outsl
stos
mov
jmp
pop
cld
jg
xor
stos
sub
jbe
loopne
mov
mov
cmpb
lcall
jmp
ja
enter
jbe
fsts
pop
adc
push
addr16
insb
pop
rorb
jg
xchg
pop
cmpb
mov
mov
push
mov
mov
cwtl
push
lcall
popa
loope
pusha
xchg
iret
aam
adc
mov
outsb
xchg
mov
aad
jne
push
pop
mov
mov
pop
push
js
xchg
push
add
dec
xchg
adcl
adc
jmp
cmc
add
gs
mov
mov
roll
cwtl
mov
adc
loopne
add
and
push
sub
mov
clc
mov
nop
sub
sahf
mov
fildll
pop
test
sbb
ret
sub
jp
jg
or
in
cmp
imull
ret
popf
xchg
orb
call
mov
jl
jno
jge
jo
push
jae
cltd
sub
jecxz
sbb
inc
negl
sarl
mov
dec
stos
and
xor
lret
jb
sbb
clc
pop
pop
fists
dec
dec
pop
call
dec
loope
das
pop
or
add
addr16
rolb
mov
adc
movsl
imul
inc
xor
ret
mov
pushf
or
outsl
lock
out
mov
into
mov
leave
lock
mov
out
inc
ret
stc
jl
pop
shlb
fwait
ret
test
adcl
repnz
loop
out
arpl
add
aaa
in
push
pop
fs
ds
incl
loop
bound
sub
cwtl
pop
in
xorb
cmc
push
add
fcomip
pushl
sub
aaa
xchg
aam
repnz
sbbl
js
mov
ljmp
mov
test
in
scas
xor
inc
or
dec
jne
cld
repz
dec
jecxz
incl
xchg
pop
mov
sbb
sub
push
xchg
xchg
or
push
sar
sbb
cmp
pusha
lcall
shll
jg
shr
ficoms
dec
or
roll
push
imul
push
jecxz
xchg
adc
aas
call
aam
notrack
inc
ds
cli
push
adc
pop
xlat
xchg
sbbl
aaa
scas
add
jnp
jbe
pop
rol
cmc
mov
sub
addr16
dec
fwait
jmp
and
fsubl
push
xchg
push
fs
arpl
ja
loope
dec
in
inc
addr16
leave
mov
in
adc
pushl
or
sub
cli
out
ficoms
out
fadd
jmp
clc
and
lds
jb
fisubrs
mov
pusha
scas
cld
mov
sbb
adcb
aaa
push
sbb
insl
mov
ljmp
mov
add
pop
dec
push
and
insl
das
cmpsb
loop
aad
aam
pop
data16
pop
icebp
inc
aaa
in
in
in
scas
dec
jns
jl
lcall
or
xchg
shll
incl
jb
aas
add
popa
das
loopne
in
add
pop
loopne
adc
dec
pop
call
jb
das
inc
repz
jmp
clc
push
fistl
in
dec
mov
dec
lock
idivl
out
mov
ret
jmp
ret
push
mov
fstpt
daa
adc
mov
mov
hlt
test
pop
xor
out
inc
mov
inc
xor
iret
jo
das
mov
scas
sub
lock
and
jg
lcall
cmp
out
adc
cmpsb
mov
mov
scas
mov
pushf
jo
int3
mov
leave
mov
pushl
ret
out
add
mov
pop
sbb
lret
pop
fs
mov
lock
jno
test
subl
call
adc
mov
in
push
dec
lret
cmpsl
gs
or
test
add
loopne
ljmp
pop
into
mov
dec
push
dec
lret
jg
gs
push
jge
dec
das
push
adc
in
bsr
mov
cmp
jae
loop
xchg
mov
ljmp
cmp
faddl
gs
imul
incl
xor
mov
test
lods
lret
cld
out
mov
sbb
dec
mov
sbb
add
jecxz
lcall
mov
arpl
add
lods
fucomip
inc
int3
lock
loopnew
sbb
icebp
aas
cmp
inc
xor
mov
push
push
mov
mov
xlat
mov
call
mov
mov
pop
or
push
cmp
jb
mov
jae
adc
ret
push
inc
pop
pop
sbb
fildl
xorl
pushf
or
push
sbbl
pusha
adcb
inc
jmp
fnsave
xchg
push
lods
mov
and
data16
je
pop
andl
jge
vmaxps
mov
in
jecxz
cmc
call
les
cs
push
sbb
xor
cs
arpl
es
xor
push
clc
add
push
jo
adcb
out
lret
cwtl
mov
int
jno
push
repz
pop
aad
cwtl
ljmp
mov
out
repz
mov
popf
outsb
cmp
out
stos
call
sbb
rorl
call
sahf
mov
push
jle
jp
mov
adc
lahf
mov
std
xchg
jmp
dec
fmull
mov
loope
mov
mov
lcall
pushf
loope
and
into
addl
sbb
inc
cmp
sub
cmp
push
sbb
cmc
mov
mov
jmp
in
pop
insl
jle
dec
lock
ljmp
dec
mov
je
daa
add
fildl
mov
mov
mov
mov
icebp
in
call
push
jmp
js
pushw
xchg
negb
lcall
mov
xor
mov
sub
gs
loop
dec
jge
ljmp
test
filds
popf
sbb
dec
mov
stc
test
adc
in
mov
mov
aad
mov
cmpsl
mov
aas
mov
push
sbb
or
jns
sub
fs
aaa
lods
das
push
inc
jae
pop
dec
or
call
jno
xchg
jg
inc
lcall
iret
cmp
adc
or
pop
cmc
rcl
sbb
je
jge
in
test
cltd
into
push
repnz
ds
lahf
das
jb
jecxz,pt
sub
fstl
bound
push
mov
and
push
jmp
mov
dec
fdivp
inc
je
adc
jge
fidivrs
imul
xchg
jno
lahf
jbe
lcall
inc
jns
enter
mov
mov
sub
xor
pushl
jle
lock
addr16
push
add
push
jae
ficomps
xchg
jmp
rcl
test
or
sbb
aaa
pop
negb
inc
or
repnz
movsb
jge
cld
call
or
push
lods
dec
aad
out
mov
pushf
rolb
lcall
fnstenv
jge
movsb
nop
inc
and
adc
je
or
repnz
xor
ljmp
mov
xor
xchg
loop
stc
push
idiv
hlt
xchg
movsl
cli
pop
xorb
lcall
cli
cmp
mov
and
jbe
adc
mov
sbb
or
out
fldl
and
sbb
push
adc
outsl
or
fcmovne
mov
movsb
pushf
mov
hlt
dec
loop
mov
sub
cld
stos
lods
imul
das
pushf
call
les
xor
fbld
mov
ja
clc
push
xorb
adc
and
inc
cmp
jg
dec
dec
dec
out
ja
and
or
ret
mov
xchg
and
lods
mov
push
mov
mov
out
sub
jl
scas
pop
icebp
incl
fwait
xchg
inc
les
int
movsl
xchg
into
dec
and
incl
icebp
xor
fsubs
sti
adc
je
test
or
pop
sbb
cmpsb
sar
mov
mov
pop
addb
cmp
sti
inc
lcall
rolb
call
xchg
ret
stos
pop
mov
negb
insl
pop
sbb
mov
cmc
sub
lock
xor
or
mov
out
dec
icebp
jmp
mov
inc
dec
movsl
loop
and
or
inc
rclb
out
cmpsb
stos
add
ja
xor
pslld
int
cmp
jmp
or
mov
push
inc
xlat
nop
ss
cmp
mov
push
stos
push
jno
cmp
outsb
inc
xor
mov
gs
sti
pushf
sarb
fdivs
repz
lock
xchg
iret
push
rorb
sub
hlt
pop
icebp
fists
lea
mov
call
push
popa
xor
daa
lcall
sbb
mov
adc
roll
add
aas
dec
sbb
sar
inc
or
scas
clc
mov
repz
jl
lods
sahf
mov
adc
mov
sub
lds
into
or
jmp
test
punpcklbw
mov
mov
aaa
fnstcw
adc
pop
fiadds
sahf
cmc
decl
pop
dec
sbbl
xor
mov
or
test
or
iret
sub
nop
fisttps
inc
jns
lret
and
jns
into
je
fcmove
enter
push
mov
hlt
mov
pop
loopne
mov
sub
and
sbb
frstor
mov
or
dec
jno
inc
mov
jle
fcmovnbe
dec
xchg
pop
int3
mov
cld
incl
iret
mov
mov
mov
xchg
jle
data16
jg
test
cli
addb
jae
fcmovb
js
cmp
int3
int3
shrl
jo
pushl
xlat
pusha
mov
mov
std
orb
icebp
adc
adc
xor
lret
cld
ljmp
lret
mov
pop
jle
jle
mov
nop
in
adc
ljmp
adc
xor
push
in
js
iret
push
cmp
cmp
xor
mov
int
testb
sbb
outsl
js
add
adc
xor
xchg
aas
cmp
leave
lret
or
int
cmpb
into
mov
xlat
mov
cmp
mov
andl
dec
push
jl
test
js
dec
dec
push
xor
sahf
jne
xor
js
aas
nop
je
lret
dec
stos
sbb
mov
cli
ljmp
or
incl
push
dec
xchg
lods
add
test
sub
push
filds
sbb
jg
rcr
adc
mov
xchg
ret
sub
sbb
outsl
and
decl
or
add
pop
push
addr16
mov
mov
push
pop
data16
cli
fdivrl
fsubr
aam
mov
mov
sbb
adc
add
jmp
mov
mov
repz
pop
negl
cltd
rorl
adc
lcall
lea
dec
outsl
mov
inc
sahf
jle
jnp
outsl
adc
loope
mov
mov
scas
adc
es
mov
movsl
mov
or
add
dec
lret
leave
test
inc
gs
mov
rolb
xchg
repnz
lahf
and
jmp
arpl
xor
add
pop
jne
inc
cmpsl
incl
popa
sbb
jmp
pop
repz
jb
or
repz
out
incl
sbb
stos
iret
mov
in
push
or
xlat
mov
adc
ss
jg
jmp
lahf
pop
mov
std
pop
mov
pop
mov
aad
xchg
push
xchg
xlat
call
mov
lock
punpckldq
inc
jb
jmp
jmp
adc
fwait
jno
in
not
jb
leave
or
lahf
subb
int
loope
cli
or
aas
jmp
call
clc
repnz
lock
das
dec
mov
shlb
inc
notl
and
inc
das
cli
ljmp
inc
xor
dec
jl
aam
mov
push
xor
aaa
add
push
data16
aam
pop
mov
sub
shll
lahf
cli
loop
lea
xor
jmp
cli
call
daa
lret
xchg
aam
shlb
or
xchg
inc
cmc
andb
sub
sub
jmp
adcb
int
mov
cmp
in
call
cltd
jmp
fisubrl
lahf
xchg
push
push
shlb
fidivs
xchg
or
and
popf
incl
cmpsl
addb
jmp
icebp
ljmp
fs
sbb
add
call
es
xchg
ret
inc
mov
jo
xchg
out
jecxz
or
je
scas
push
lods
lahf
jmp
add
mov
rcr
dec
mov
cmpsl
pop
hlt
dec
mov
das
sar
outsl
das
push
int
or
sub
dec
mov
jg
xor
or
cld
cmp
xchg
fsubl
sub
sub
sti
push
loop
pushl
call
mov
mov
lahf
mov
mov
fsubrs
fst
sub
xchg
xchg
push
and
nop
ljmp
jo
dec
movsb
insb
decb
inc
aaa
leave
inc
mov
jmp
scas
cmp
jnp
ljmp
sbb
push
lcall
mov
or
cmp
push
les
lret
decl
sub
pop
push
pusha
stos
loope
cmp
mov
fnstenv
xchg
mov
daa
jnp
add
sarl
jmp
movsb
inc
sub
xor
call
jle
jne
or
add
daa
in
data16
xchg
cmp
xchg
and
mov
lcall
lods
sub
pop
dec
daa
iret
int
jnp
cli
mov
incl
loope
inc
rcl
lret
xor
movsl
notb
add
add
mov
pushl
into
jno
xor
inc
pusha
sbb
and
movsl
mov
icebp
mov
cmp
icebp
gs
mov
std
pushl
push
add
adc
lret
xchg
jmp
outsb
xor
bound
inc
and
clc
mov
aaa
subl
push
xorb
jb
and
pop
cmpsb
sar
xchg
inc
fadds
daa
inc
and
mov
xor
fcomip
fwait
call
insl
das
popa
dec
add
add
out
inc
addl
je
inc
push
addr16
lcall
ss
sbb
imul
jle
jno
inc
int3
cmp
popa
sbb
sbb
or
mov
cmpl
jmp
dec
push
or
adc
adc
loop
push
rcll
and
push
jmp
les
mov
popa
add
incl
cmp
rol
out
mov
lods
and
jb
rorb
hlt
test
jle
stos
pop
add
inc
hlt
sbb
push
push
rolb
dec
inc
test
jg
or
sbb
adc
pop
mov
dec
jecxz
icebp
iret
je
cmc
push
push
pushl
sbbb
xchg
scas
nop
push
pop
cs
out
les
ret
incl
pop
lret
xor
int
enter
mov
lock
mov
imul
pop
loop
add
sbb
cmpsl
into
sbb
xor
mov
mov
and
xor
test
into
out
mov
jne
push
test
filds
clc
push
arpl
push
xchg
xor
lret
bound
arpl
pushf
loop
iret
dec
fs
mov
push
rorl
ud2
stc
cmp
jae
pop
jae
call
in
dec
shl
cmp
cmpsl
xor
xchg
dec
out
mov
mov
mov
mov
out
nop
cmc
test
adc
cmp
test
testl
incl
jecxz
adc
subb
jno
jp
and
push
idivb
xchg
pop
ds
lcall
xor
mov
add
in
and
fildll
add
mov
xchg
cmp
inc
cld
incl
and
shl
ret
push
hlt
pop
push
and
ficompl
xchg
jp
lcall
sahf
pop
cld
mov
cmp
pusha
rclb
and
jle
loop
popa
loopne
sahf
push
push
push
push
decl
std
or
je
incl
aaa
jle
popf
decb
pop
adc
pop
pop
popf
icebp
mov
xor
gs
call
cld
or
les
mov
or
nop
jecxz
jg
sub
push
mov
adc
and
ret
in
loopne
jns
inc
enter
mov
mov
pop
push
popf
xor
jbe
mov
aas
mov
mov
push
and
xchg
enter
mov
mov
adc
rolb
fdivl
pushf
jnp
arpl
mov
pop
decl
cwtl
xor
movsl
cmp
jae
push
dec
add
jg
push
xor
cmp
mov
ljmp
dec
mov
popa
out
ror
into
scas
mul
pop
xor
add
push
mov
jl
test
shlb
lahf
test
push
scas
xchg
xchg
cli
leave
imul
dec
sbb
fbld
pop
lock
xor
adc
sarb
add
fdivr
or
inc
sbb
inc
movsb
enter
lahf
jno
scas
js
inc
and
nop
clc
lret
or
cmp
mov
cmp
push
aas
mov
inc
pop
fcmove
mov
xor
pop
fs
push
push
sub
pop
into
test
cwtl
jbe
cld
add
mov
fwait
imul
clc
adc
adc
loop
lds
imul
lret
ss
incl
xor
sbb
cs
ret
or
sbb
std
loope
lret
fmull
pushl
push
test
insb
jne
inc
or
xchg
dec
add
mov
cld
dec
icebp
sub
mov
loope
lea
mov
fcompl
popa
jae
adc
jl
outsl
xchg
mov
loopne
out
cli
outsl
xlat
lea
mov
mov
xchg
jae,pn
leave
adc
push
jl
mov
gs
mov
sub
mov
mov
add
loope
add
ljmp
call
add
jno
arpl
jp
xchg
push
je
or
push
and
or
decl
in
xchg
adc
add
xchg
daa
add
sub
les
inc
addr16
sahf
incb
cmp
negb
scas
mov
mov
roll
into
cmpsb
or
lret
lods
mov
jno
push
mov
imul
loope
das
adc
in
add
pushf
mov
mov
gs
lcall
pop
xor
sub
and
cmpsl
mov
dec
pusha
mov
push
xchg
incl
fwait
mov
mov
aad
push
mov
cmp
xor
incl
mov
lds
mov
push
sub
push
scas
sub
xchg
push
sub
fucom
dec
and
ljmp
push
shlb
cmp
jge
sbb
repnz
jne
and
pop
shlb
xor
stos
inc
push
mov
mov
shll
mov
ds
mov
dec
add
sub
fisubrs
cmp
loopne
mov
call
hlt
outsb
nop
bound
push
punpckhwd
mov
aad
sub
fs
mov
jmp
jae
mov
mov
ret
adc
add
pop
dec
push
ja
sbb
or
repz
mov
mull
fsts
lds
mov
inc
cld
jmp
and
inc
and
lock
jmp
dec
push
out
ss
cld
incb
mov
mov
ret
dec
scas
sub
push
mov
inc
adc
xor
and
push
and
adc
loop
mov
outsl
mov
sbb
inc
mov
xchg
xchg
scas
mov
push
inc
jnp
pop
jp
leave
or
loop
mov
or
inc
jp
mov
cmp
call
jl
sbbl
mov
in
lock
ror
rolb
sub
add
movzbl
push
jns
mov
cwtl
xchg
push
sub
sbb
loop
pop
hlt
arpl
pushf
jl
jo
push
pop
into
mov
sbb
mov
mov
cmp
mov
inc
push
rcrb
or
adc
push
ljmp
adc
sub
add
cwtl
mov
jmp
and
loopne
fwait
call
and
or
test
add
aad
mov
inc
and
or
mov
lret
shrb
cmp
pop
xchg
jno
push
shl
ret
fadds
add
call
imul
jne
mov
sahf
inc
xchg
mov
push
cmp
jg
add
cmp
sub
lock
push
es
add
fbld
aaa
out
and
xor
fwait
movsl
add
or
clc
test
xchg
clc
int3
and
cli
lahf
in
inc
in
clc
jmp
jl
mov
push
scas
int3
ljmp
filds
and
std
pop
mov
das
out
roll
arpl
clc
inc
call
dec
xor
jb
out
daa
jle
mov
jae
jg
movsb
pushl
or
pop
add
jo
insl
clc
movsb
outsl
jmp
ret
adc
mov
mov
fcos
in
int
sbb
in
mov
nop
lcall
cmp
cmp
xchg
add
in
ja
aam
sbb
pushl
mov
add
daa
cmp
fstl
sarb
fistps
scas
ficomps
xlat
cmpsb
mov
push
movsb
mov
ss
cmp
jmp
daa
jne
ficoms
ds
shll
pusha
dec
and
aam
fucomip
cld
cmp
jg
das
mov
inc
ljmp
jbe
bound
cmp
aam
insl
inc
xchg
jo
hlt
cmp
pushl
mov
imul
icebp
xor
xchg
insl
test
cmc
insl
xor
addr16
int
mov
jo
sarl
inc
lcall
jmp
cmc
jbe
push
imul
inc
test
mov
addl
mov
cltd
mov
and
xchg
loope
lret
ljmp
sbb
mov
sbb
push
sbb
cmp
popa
loop
cmp
push
pop
shll
mov
into
pushl
aaa
dec
aam
ljmp
imul
dec
or
ret
mov
jmp
hlt
decl
push
ss
jne
pop
stos
in
and
cmpsl
xor
or
fs
xchg
pop
je
lcall
cmc
inc
cmp
ret
mov
mov
lret
sub
push
lret
xchg
addr16
ja
pop
sbb
xorb
lahf
jne
popa
cmp
call
cwtl
sbb
add
adc
pop
jecxz
sub
lods
insb
stos
ljmp
loopne
mov
jg
cli
insl
adc
cwtl
jno
dec
in
es
xor
decl
das
je
aaa
or
daa
stos
pop
pop
sub
lahf
lret
fwait
inc
mov
jns
jno
lock
iret
mov
inc
add
push
fsubl
lahf
jg
and
sub
mov
sub
adc
ret
into
in
fsubrl
es
test
adc
cwtl
in
add
add
pushl
xchg
xor
repnz
insl
mov
sti
div
push
push
sub
jg
jecxz
xchg
push
mov
mov
xchg
ret
push
stos
fsub
fisubrs
js
pop
pop
jge
out
filds
mov
aam
xchg
cmpsb
xchg
jns
jno
dec
adc
cli
and
cmp
icebp
lcall
roll
imull
xchg
xchg
ljmp
inc
les
mov
popf
and
call
pop
xorl
decl
stc
lods
icebp
sbb
aaa
das
es
cs
clc
out
sbb
lods
push
rorl
mov
loop
out
jmp
add
int
shlb
movsb
sub
pop
les
rorl
add
scas
pop
shrl
rol
es
or
dec
xor
sub
jmp
dec
andl
decl
es
jle
xor
sub
jg
push
or
xchg
cli
push
mov
std
into
das
dec
xlat
cmp
mov
cmpsl
mov
mov
dec
mov
fs
mov
jo
adc
adc
inc
out
jg
mov
mov
push
movb
and
repz
int3
fildl
pusha
cmp
into
fiaddl
jbe
ss
test
gs
jp
jo
das
nop
aad
mov
loop
mov
or
call
subb
jno
inc
jns
fisubrs
sub
enter
movsb
negb
das
call
jecxz
xchg
cmp
lret
xchg
nop
jl
and
test
sub
jge
out
xchg
data16
mov
repnz
pop
adc
jae
push
ss
gs
or
scas
lock
gs
ss
loopne
lcall
insl
mov
repz
hlt
jmp
leave
push
std
lods
mov
out
push
jns
sub
xor
or
lcall
cld
outsb
int
repnz
dec
xchg
jnp
decb
mov
push
lods
sub
popf
out
in
das
xor
mov
mov
and
incl
repz
jp
or
or
dec
popa
mov
xchg
bound
push
sbb
sbb
cli
jmp
push
test
xor
shrl
std
or
lcall
xlat
mov
adc
rorb
enter
xchg
jmp
lret
adc
ret
addr16
leave
repz
ljmp
xchg
fs
mov
test
leave
xor
std
add
imul
jecxz
pushl
mov
enter
ja
push
xlat
mov
sarl
sbb
push
inc
and
test
or
ffreep
push
pushf
arpl
in
aas
loopne
mov
incl
or
cmpsb
sub
mov
fcomp
or
std
jmp
lahf
xchg
int3
jmp
xor
dec
adc
mov
sbb
jnp
xor
push
dec
jg
push
jb
test
or
outsb
addb
pushl
call
push
loop
push
cmpsl
push
lahf
push
adc
xor
aad
call
nop
or
push
xchg
push
insl
insl
mov
jnp
sub
ljmp
sahf
lret
bound
push
imul
dec
dec
adc
lcall
aad
ss
test
pop
rolb
push
xor
ret
ljmp
ljmp
lret
xlat
movsb
fcoms
nop
out
mov
push
gs
adc
daa
decl
xor
and
sub
call
pop
xchg
inc
movzwl
and
imulb
ds
xchg
fs
inc
mov
and
fsubrl
mov
outsl
jp
sbbl
mov
dec
dec
pop
dec
call
imul
or
sarb
cmp
cmp
cmp
jb
call
or
les
mov
mov
popf
in
inc
sub
scas
jl
test
lock
cld
ljmp
call
cmpsl
xchg
fcmove
sub
mov
jno
dec
mov
mov
and
push
stos
inc
sbb
in
out
xchg
loop
decb
sub
jne
insl
enter
and
data16
jnp
inc
push
stos
idiv
lahf
popa
or
movsl
popa
cmp
xchg
cmc
and
loop
push
jmp
stc
in
xor
enter
lret
mov
xor
fistpll
mov
in
imul
ret
ja
mov
or
cs
out
inc
xchg
test
push
leave
aaa
cld
pushl
mov
add
insl
outsb
inc
mov
pop
cli
rcrb
mov
fldl
iret
mov
fcompl
aaa
cmp
push
fmuls
sub
push
sub
stos
mov
mov
sbb
fisubl
jmp
mov
in
hlt
imul
aam
adc
mov
sbb
loopne
lea
ljmp
call
dec
fadds
mov
call
add
push
psllw
std
jb
and
stos
decl
inc
adc
push
fbld
dec
or
out
lcall
lods
in
arpl
dec
pop
in
stos
hlt
inc
pop
mov
xchg
pop
js
pop
xor
test
lock
mov
xor
cli
mov
incl
xchg
inc
xor
test
mov
xchg
cmp
rclb
xchg
cmp
and
in
std
sbb
movsl
aas
aam
lahf
adc
rclb
add
xor
loopne
fcomip
jmp
xor
out
push
das
mov
lret
out
pop
scas
aam
xor
decb
or
push
cwtl
sub
imul
cmc
and
push
sub
jne
lahf
idivl
add
adc
std
iret
rcr
adc
mov
loop
bound
add
jg
adc
sti
inc
cltd
call
inc
scas
push
ret
call
jb
sbb
add
loope
pop
cmp
or
mov
fmul
dec
or
cld
js
cmp
bound
das
aas
push
popa
mov
lahf
mov
loope
mov
add
cltd
stos
mov
icebp
les
push
les
mov
outsl
cli
mov
lcall
or
mov
fcmove
and
mov
sbb
hlt
inc
cmp
bound
xchg
rorb
cmpsb
jg
dec
mov
fistps
cmpsb
cltd
pushf
xchg
iret
cld
lcall
lods
fiadds
push
int
cli
or
mov
cmp
pop
mov
loop
loopne
daa
ds
xor
xor
fdivrl
cld
jne
test
mov
ljmp
cmp
mov
adc
push
adc
aad
into
ficoml
fcoms
stos
jg
adc
pushf
push
xchg
sbb
push
add
js
push
fistpll
inc
jecxz
sub
rcrb
xchg
jno
cmpsb
shr
psrld
jmp
xchg
push
dec
and
cmp
push
cmp
pop
xchg
stc
cltd
and
test
mov
inc
fstpl
repz
fdivrs
jno
bound
loope
add
mov
loopne
lds
jmp
pushf
and
jle
pop
filds
mov
and
popf
fisubs
and
and
fwait
nop
fistl
sahf
shrb
lcall
lcall
ja
adc
loope
jle
push
jle
lods
add
addl
ljmp
jo
xor
xorb
xorl
mov
push
addb
jl
push
bound
mov
test
and
aaa
sahf
sbb
decl
jnp
xor
fistpll
test
lret
clc
or
inc
fldcw
adc
xorb
decl
inc
jae
dec
xor
inc
xchg
xchg
inc
js
call
jge,pn
notb
faddl
cltd
or
fs
adc
inc
cwtl
push
loope
inc
adc
int3
jl
cli
psubw
lds
adc
mov
decl
xchg
daa
cmp
mov
sub
test
inc
hlt
cmp
sbb
xor
loopne
rol
cwtl
pop
pushf
pop
mov
jne
or
fistps
dec
adc
mov
mov
sti
mov
inc
in
push
push
mov
sub
pop
or
popf
adc
cs
inc
jmp
ss
pop
ds
cltd
cmp
mul
xlat
fwait
xor
xchg
jns
and
xor
lock
ljmp
sub
clc
push
mov
jno
or
mov
sbb
pop
lock
lcall
leave
lret
hlt
push
nop
dec
mov
and
call
fwait
cmp
sbb
lcall
insl
inc
int
adc
aam
xlat
repnz
adc
push
ljmp
clc
push
mov
cmp
pop
xor
fidivl
xor
jmp
push
test
arpl
lret
add
lcall
and
sbb
cmp
jae
xor
push
jl
push
shrb
stc
fsubs
fsubrl
loopne
outsb
mov
xor
dec
jns
in
mov
aad
adc
incl
mov
adc
jg
xchg
mov
fbld
loopne
sub
incl
test
xor
pop
sub
push
nop
movsb
lea
sbb
stos
roll
push
out
fcomp
xchg
mov
sub
cld
pushl
ret
xor
jbe
xchg
out
sti
movsb
push
push
add
pop
imul
mov
call
ficomps
push
jecxz
sbb
mov
addr16
push
mov
ret
sbb
add
push
dec
scas
cli
incl
outsb
lock
movsl
lret
test
adc
sub
call
cmp
dec
loop
adc
or
xchg
dec
inc
lret
out
mov
clc
decl
aaa
lret
cltd
dec
testl
adc
cmpsb
loope
cmp
incb
loop
mov
decl
mov
pop
movsb
jbe
lods
loope
int
adc
mov
in
inc
ss
int3
adc
lahf
dec
mov
jg
popa
inc
aaa
mov
or
dec
ljmp
pop
xchg
xchg
out
sbbb
js
daa
jecxz
pop
inc
mov
lcall
cmp
iret
ja
xchg
mov
mov
mov
ljmp
out
jnp
cmc
loop
xchg
push
scas
cmp
push
sbb
and
pop
jae
outsl
jmp
mov
mov
push
sub
adc
xchg
jmp
popf
std
lcall
jle
je
inc
movsl
jl
gs
nop
mov
mov
das
or
sub
xchg
decl
sub
aas
push
mov
data16
gs
push
xchg
into
pushf
mov
call
pop
jae
sbb
xor
cmpsb
push
inc
jo
dec
lahf
mov
ds
cmpsb
sahf
cld
loopne
xchg
push
lock
call
or
adc
inc
aad
lahf
push
nop
mov
sub
push
inc
stos
cmpsb
push
pop
clc
decl
sahf
mov
sub
int3
mov
xor
mov
ljmp
call
push
adc
xlat
mov
lret
cmp
out
pop
adc
mov
decl
mov
cs
nop
mov
add
sahf
push
aaa
lods
sbb
int3
lods
xor
sub
incl
inc
repnz
jae
inc
ljmp
enter
fidivl
inc
cwtl
mov
or
jecxz
cli
xchg
daa
rol
and
mov
inc
loop
pcmpgtb
stos
loopne
mov
cmpsl
dec
insb
outsl
fstps
stos
aam
sbbl
lods
call
cld
jo
xchg
lcall
mov
scas
mov
and
sbb
xor
push
je
dec
andl
mov
into
and
jno
inc
push
fiadds
data16
ljmp
or
mov
cmpsb
clc
out
loop
rolb
pusha
cmp
ja
cmp
or
ljmp
and
repz
pop
incl
pop
push
or
shrl
add
mov
adc
es
mov
jno
stc
mov
jbe
out
into
jge
xchg
lret
inc
mov
dec
out
cltd
xchg
dec
dec
lock
mov
outsl
pop
insb
or
arpl
push
xchg
or
or
pop
rep
add
sub
cs
fisubrs
inc
mov
push
fnstsw
mov
repz
cmp
inc
adc
push
fildl
in
orl
mov
popf
mov
adc
repz
arpl
dec
dec
stc
cwtl
in
sub
imul
imul
stos
mov
adc
pushl
pop
stc
repnz
aam
jno
adc
mov
stos
push
aad
repz
mov
std
pushl
adc
mov
jne
loop
mov
adc
dec
out
dec
push
jne
lcall
pusha
cmp
pop
dec
div
mov
xor
push
filds
ja
ljmp
dec
xchg
push
lea
aam
pop
pop
adc
cli
lods
sbb
in
mov
pop
xchg
ret
mov
ja
or
ljmp
lcall
lcall
jge
dec
dec
inc
push
cmpsl
out
pop
rcl
aad
and
ficomps
ljmp
mov
push
imul
lret
int
dec
pushl
shlb
xor
jg
sbb
ljmp
add
out
ljmp
inc
jnp
jnp
pop
jmp
sub
sbb
xchg
pusha
cld
ja
pop
xor
addr16
ds
call
std
outsl
and
mov
movsl
lcall
repnz
or
sti
stos
mov
divb
imul
js
pop
orl
xor
mov
push
call
jg
test
inc
or
inc
shl
mov
mov
mov
js
add
ret
jg
ficoms
ret
test
test
test
cmpsb
aad
in
fildll
mov
mov
pop
loop
xchg
push
cmpsb
inc
jp
xchg
cmp
fs
xchg
popf
cs
lcall
xor
inc
push
in
in
arpl
and
stos
jno
push
push
push
adc
cmc
jmp
mov
jmp
adc
mov
push
mov
add
jg
pop
push
bound
into
lret
cmp
xchg
xchg
dec
cli
rorl
sbb
or
ss
mov
sbb
loop
dec
jl
fisttps
jg
or
add
push
inc
cmp
mov
jo
ret
jmp
mov
mov
push
jno
dec
xor
inc
sbb
mov
pushf
jl
ljmp
dec
outsb
xchg
mov
push
sub
cs
or
pushf
mov
xor
ljmp
inc
push
imul
or
jno
lahf
shrl
pop
pop
mov
sub
push
jmp
icebp
pushf
push
mov
and
jp
imull
lcall
lcall
jb
mov
add
push
or
jns
mov
jbe
inc
test
fiadds
sub
js
dec
aaa
lods
mov
jle
cmp
lods
push
lret
shll
and
cli
call
push
ret
dec
push
es
mov
pop
xchg
scas
je
cltd
sub
decl
rcrl
and
and
cs
repnz
lcall
push
dec
into
stos
add
call
aas
dec
in
pusha
lds
xchg
fmull
ljmp
hlt
mov
in
push
dec
ret
les
sub
push
mov
movb
data16
loopne
test
lods
call
mov
mov
xlat
insl
aam
adc
clc
mov
call
lret
mov
add
dec
cmp
sbb
mov
outsb
sbb
lret
sub
stc
sbb
xchg
cmp
mov
mov
and
lcall
dec
jmp
mov
lods
push
xchg
insl
test
enter
repnz
push
add
fcomip
xor
ljmp
pop
loop
pop
pop
cwtl
ljmp
mov
add
test
inc
insl
cmp
lods
mov
cltd
ljmp
pop
subb
pop
jecxz
cmp
sbb
cmp
call
adc
test
push
sub
fwait
sub
xchg
ret
cwtl
ds
testl
jnp
lcall
add
xchg
push
jle
or
daa
mov
fwait
and
aam
int
inc
inc
push
pop
sbb
inc
gs
aad
mov
mov
pop
ror
jecxz
dec
stos
shll
enter
jg
mov
and
in
int
sub
jg
ficompl
mov
lea
stos
cmp
jle
pop
xor
jmp
fwait
dec
inc
push
hlt
inc
lods
inc
pop
int3
ss
lods
add
decl
xchg
sti
pushf
jne
lcall
or
cld
mov
mov
call
pusha
lcall
push
adc
int3
shrl
and
xchg
jne
rorb
je
sub
repnz
adc
dec
daa
mov
dec
sbb
push
fsubrs
push
loop
mov
mov
sbb
jb
lcall
adc
stos
jmp
pushf
scas
stos
mov
lods
enter
enter
push
outsl
clc
push
repz
out
mov
cmc
cmp
mov
dec
push
hlt
add
and
mov
add
hlt
mov
or
das
dec
mov
pushl
in
xchg
dec
xor
sub
pop
scas
repnz
iret
ljmp
jo
inc
pushl
add
mov
cmc
jne
sbb
int3
ljmp
or
push
lea
or
dec
scas
jg
adc
and
lock
jbe
adc
sbb
je
push
mov
xchg
sarb
ljmp
push
aad
lret
jns
loope
jl
into
push
pop
test
sbbl
mov
test
stos
stos
or
xchg
push
addb
or
xor
push
dec
sar
xchg
testb
pop
xor
or
jg
into
aas
dec
push
cmp
int3
pop
cmp
cmp
push
subl
std
lock
repnz
loope
xlat
out
inc
lock
sub
sub
cmp
fisubrl
fiaddl
sub
xchg
sub
inc
or
inc
pop
add
pop
loopne
ret
pop
and
cli
stc
cs
out
xlat
add
dec
xchg
pop
mov
lret
frstor
add
out
xchg
jo
out
mov
fldt
sbb
cmp
gs
sbb
pop
cmc
sbb
pushl
mov
cmp
popa
ret
ljmp
sbb
jg
decl
test
out
in
cwtl
sbb
and
aaa
les
nop
pop
jmp
jg
in
xchg
push
push
xchg
xchg
mov
dec
dec
out
fsubrs
pusha
mov
mov
stos
call
orb
fimuls
push
stos
mov
out
mov
mov
outsl
clc
testl
popf
ret
call
cld
cmp
cld
loope
cli
in
repz
fwait
and
xor
jg
mov
inc
out
push
daa
xchg
pop
pop
fisubs
stos
and
sub
xchg
clc
les
push
jnp
out
inc
ljmp
xchg
cmp
mov
push
cmpsb
in
outsb
ret
call
std
aas
inc
fidivrs
frstor
inc
push
popa
inc
adc
bound
sbb
mov
idivb
xor
clc
xor
stc
out
and
adc
push
sub
inc
repz
subb
inc
jg
in
fwait
in
mulb
push
mov
pop
enter
xor
mov
inc
adc
int
sbb
insb
xor
cmp
pusha
scas
xchg
call
pop
arpl
inc
push
pushf
push
adc
shrb
push
imul
cmp
xchg
and
mov
fs
fisttpll
or
ljmp
test
or
lcall
daa
xchg
dec
cwtl
mov
pop
out
stos
cld
pop
push
cld
call
out
lret
addr16
data16
cmpsl
pushf
ja
mov
jo
jo
mov
jge
cmp
and
adc
add
and
ljmp
lahf
fidivl
sub
pusha
inc
cmp
inc
pushl
inc
andb
fistpll
idivl
jo
xor
cmpsl
sbb
mov
or
jns
xor
mov
cld
push
insb
push
outsl
inc
jmp
jae
imul
mov
push
out
cltd
lods
sarl
lcall
dec
pop
push
sbbb
cmp
pop
stc
decl
fdivp
dec
cltd
les
xchg
lret
leave
aad
aam
into
xlat
xchg
ja
call
mov
outsl
adc
divb
or
fsubs
adc
fbstp
call
sbb
mov
push
xor
sti
inc
ljmp
add
decl
fidivl
pushf
adc
aaa
adc
cli
adc
jl
push
add
mov
inc
loopne
lds
mov
push
mov
add
sub
mov
icebp
call
lds
mov
aaa
pushl
cld
push
push
inc
aaa
xlat
rclb
pushf
jo
pop
jle
test
fcoml
pop
addb
pusha
push
imul
add
cmp
mov
mov
add
mov
and
rolb
mov
xchg
roll
filds
push
out
js,pt
jecxz
outsb
pop
add
movsl
fcmovbe
or
mov
ja
pusha
loopne
pop
lods
sub
lock
ja
jbe
jmp
ljmp
mulb
xchg
rcr
pop
jns
lret
aas
popf
cmp
inc
add
decb
cmp
call
cmp
adc
lcall
hlt
jecxz
test
das
sarb
test
scas
jnp
addr16
jmp
pop
shrb
lcall
adc
sarb
subl
adc
pop
mov
rcrl
ret
push
clc
fldl
fprem
call
and
pop
fs
cmp
push
push
cs
ljmp
cmc
ja
lcall
cmp
push
cmp
mov
inc
mov
sbb
cwtl
jns
mov
mov
ljmp
pop
jge
mov
or
jecxz
fwait
inc
lods
dec
push
ss
push
add
incl
xchg
andb
xtest
dec
and
xor
jnp
xor
mov
add
in
ljmp
jnp
dec
sub
inc
stos
ss
mov
push
cmpsb
cs
fwait
mov
jno
mov
out
mov
fidivl
and
decl
into
adc
xchg
jmp
outsl
imul
and
xchg
inc
add
lods
sbb
push
out
add
lcall
repnz
pop
out
stos
mov
movsl
ds
jg
call
cmpsb
and
dec
mov
es
pop
les
jg
cmp
arpl
add
arpl
sub
adc
adc
sbb
or
dec
incl
push
push
sub
sub
adc
mov
ss
mov
fsubr
addr16
call
pop
aam
jmp
push
in
or
notl
sub
popf
inc
into
pop
and
push
push
pushl
inc
loope
das
movsb
arpl
xor
int
mov
add
inc
adc
outsl
pop
aam
in
lcall
cmpsb
fcoml
xchg
fdivrs
mov
sbb
mulb
je
dec
xchg
arpl
jg
pop
inc
cmc
je
pushf
popa
xor
rorl
push
mov
xor
cmp
clc
mov
inc
cmp
xchg
ja
cmp
xchg
mov
adc
mov
lods
xor
icebp
fdivrl
test
enter
jmp
mov
add
hlt
push
mov
inc
decl
jne
aas
js
fs
js
daa
or
cwtl
inc
sahf
je
add
cld
dec
dec
aas
movsl
call
adc
fldt
ljmp
push
sbb
adcb
popf
nop
pop
shrb
pusha
fbld
add
notl
adc
dec
mov
jns
shll
cmpsb
into
inc
clc
or
mov
adc
stc
pop
cmpsb
xchg
cwtl
xor
push
xor
add
jge
out
and
xchg
push
fbld
adc
sbb
push
push
fiaddl
mov
lcall
or
mov
mov
pop
or
mov
sbb
mov
push
adc
notb
xor
loop
loope
stos
div
aad
push
mov
jae
stos
cmp
add
mov
xchg
loopne
enter
int3
mov
cmp
push
aad
sbb
mov
negb
aad
mov
test
nop
or
mov
dec
fisubrl
ds
cmp
decl
jle
test
xchg
sub
sub
lods
xchg
sub
outsl
inc
jmp
mov
imul
outsb
ljmp
mov
rorl
js
loop
ret
adc
lods
popa
mov
or
push
ljmp
lcall
test
adc
hlt
jle
sbbb
shlb
mov
fmull
pop
loopne
pop
adc
pop
xchg
in
adc
mov
enter
inc
into
adc
imul
add
mov
arpl
jmp
dec
data16
add
stc
cwtl
test
pop
push
push
stos
test
pop
inc
stos
and
mov
pushl
or
loope
lea
ds
icebp
jecxz
jmp
add
je
loop
shrb
mov
decl
mov
outsl
out
fiadds
jmp
push
adc
adc
pop
adc
pop
setp
ljmp
aaa
ret
sbb
xor
xor
mov
push
ja
xor
push
nop
test
ljmp
mov
or
int
bound
mov
cmp
pushf
lods
je
ljmp
sbb
inc
fs
dec
xchg
dec
jg
call
push
jge
aaa
pushl
sbb
sub
ret
jnp
out
xchg
movsb
fsubrs
fcom
pop
bound
leave
cmp
scas
mov
sub
add
push
jg
decl
adc
push
imul
mov
xchg
pushl
lds
in
push
faddl
xchg
sahf
inc
jg
sub
test
outsb
add
dec
pand
push
repz
and
sbb
rolb
jmp
in
mov
aas
daa
jg
sar
out
or
inc
cwtl
inc
loopne
sbb
pop
cld
cmp
in
scas
and
pop
dec
add
movsb
add
jg
jle
inc
fs
or
pop
bound
test
movsl
mov
js
into
jno
cmp
test
shll
inc
jp
or
or
jecxz
add
jge
or
or
fildl
outsb
shrl
aas
aaa
dec
sbb
sub
inc
ljmp
jg
push
jp
cs
in
insb
fisttpl
mov
call
test
cmp
xor
jl
mov
sarb
ljmp
adc
jecxz
cmpb
pop
loopne
sahf
adcl
lds
sbb
push
cmpsl
iret
ljmp
and
push
inc
push
jbe
in
xor
rorb
lret
xor
rcrl
mov
outsl
add
fstpt
pop
ljmp
movsb
sbb
cmp
cmpl
inc
push
jns
dec
das
cli
xor
in
stc
jge,pt
xor
push
push
mov
xor
xor
enter
inc
pop
push
sarl
fistpll
push
orb
xchg
ljmp
xchg
mov
push
clc
jecxz
and
push
dec
ret
sbb
lea
add
call
mov
clc
ss
mov
xor
outsl
stc
jns
push
lock
movsl
jno
in
iret
jo
xchg
lods
xor
push
mov
stos
pop
lods
call
aaa
das
lcall
clc
fstl
ljmp
js
pop
cmp
inc
xchg
cmp
mov
xor
jge
and
sbb
cli
ljmp
jle
mov
dec
mov
mov
pusha
jg
jno
movsl
in
mov
mov
jae
xchg
or
mov
mov
leave
call
addr16
fisubl
test
and
outsb
inc
hlt
jecxz
add
loop
les
loope
mov
push
mov
shll
imul
adc
adc
aad
or
pop
incl
scas
or
mov
inc
in
mov
or
or
loopne
or
jecxz
mov
clc
xchg
ljmp
pushl
repnz
and
subl
mov
hlt
cmp
stos
mov
out
ja
fnstenv
and
rcrb
mov
leave
cmp
out
loopne
push
pushf
pushf
cmp
stos
js
mov
jp
sbb
cli
mov
cli
out
enter
and
sbb
dec
cmpsl
cs
sub
pushl
imul
hlt
data16
xor
sub
mov
inc
pop
shl
pusha
mov
mov
pop
or
daa
fdivs
inc
cltd
adc
push
adc
mov
sbb
out
adc
adc
pusha
in
mov
xlat
jno
sub
cmc
or
cmp
add
cmp
mov
cmc
decl
mov
sbb
pop
sbb
mov
call
clc
lods
push
int3
je
push
adc
mov
ljmp
pop
xchg
fs
sub
push
mov
sarb
mov
gs
test
lock
leave
add
cmc
jecxz
inc
clc
dec
and
jmp
pop
and
imul
inc
nopl
sbb
push
or
leave
stos
nop
mov
sub
pushl
outsl
inc
mov
pushf
scas
push
adc
sub
enter
mov
mov
inc
jnp
fs
dec
stc
jmp
je
bound
xor
sub
mov
pushl
xor
and
push
das
adc
ret
and
xchg
xchg
test
fsubl
jg
lcall
loopne
shlb
andb
dec
std
push
in
add
inc
adc
nop
inc
iret
and
sub
arpl
imul
leave
lods
movmskps
clc
push
lods
fwait
jg
test
mov
dec
ja
es
pop
xchg
lock
incl
fwait
sti
sarl
jnp
rcl
dec
fildll
ss
xchg
leave
lea
or
jmp
add
push
or
aaa
inc
icebp
cwtl
fdivs
push
jmp
std
push
popa
xchg
mov
aad
lcall
lcall
xchg
fwait
push
mov
fstps
jb
jp
mov
jno
push
lods
sub
and
push
je
push
mov
addr16
je
push
adc
push
xchg
sbb
scas
or
mov
sbb
sbb
mov
call
jmp
cltd
sti
in
pop
addl
loope
scas
xor
clc
das
clc
rorl
pushl
mov
sarb
jp
cli
cmp
sti
imul
faddl
aas
repz
out
cli
jmp
xchg
cmc
test
jmp
stos
pop
cmp
mov
sub
jle
sbb
stos
incl
xchg
xor
xchg
push
addr16
call
adc
es
xor
stos
call
in
sbb
es
clc
cmp
inc
cmc
loope
jle
and
and
ljmp
call
test
mov
xor
or
mov
sbb
add
pop
or
xchg
adc
mov
adc
dec
rcl
or
in
push
xor
pop
and
out
add
add
dec
xchg
pop
movsb
popa
jmp
incl
incl
sarb
mov
pushf
in
call
das
std
inc
mov
mov
push
shr
push
xchg
xchg
scas
sub
push
or
add
and
faddl
push
idivl
in
cmp
pusha
jns
lcall
cmp
cmp
std
mov
mov
jbe
lods
mov
jg
inc
xor
jmp
into
push
das
xor
mov
jge
icebp
xchg
inc
fildl
ss
mov
and
mov
bound
andb
xchg
bound
test
pop
or
pop
incl
clc
mov
lea
shr
shrl
ror
push
mov
nop
adc
mov
ljmp
call
add
in
jecxz
pushl
data16
daa
lret
xchg
icebp
jmp
aad
mov
sbb
repz
lea
xchg
int
test
lock
icebp
inc
into
ja
bound
mov
outsl
push
push
adc
pop
lods
lahf
add
sbb
loopne
push
xor
lcall
hlt
jnp
xchg
hlt
mov
sub
lcall
sahf
sbb
jnp
dec
sub
std
pop
sbb
daa
sbb
mov
mov
out
ja
out
call
mov
mov
iret
jo
jns
fstpl
hlt
fbld
and
jg
rolb
test
call
fdiv
frstor
cltd
pop
fwait
outsl
imul
ficompl
int3
std
pop
arpl
imulb
data16
ljmp
mov
dec
or
xchg
inc
mov
fadd
decl
lock
pop
mov
dec
adcb
dec
mov
stc
call
pushl
xchg
gs
stc
mov
add
scas
inc
mov
inc
fcomip
ljmp
shll
mulb
test
xor
cmp
inc
jecxz
call
movsb
push
mov
dec
sub
test
or
sub
inc
in
lcall
fsubs
sub
dec
mov
lret
stc
ds
mov
cli
pushl
negb
ss
dec
xchg
pop
or
aam
inc
les
fs
call
adc
xchg
adc
mov
das
sbb
or
pushl
cwtl
mov
fcmovnu
mov
js
jae
dec
mov
adc
incl
add
lods
jp
aas
jge
lahf
dec
or
ss
pop
repz
jbe
out
mov
push
pop
mov
ljmp
jle
pop
cmpb
testl
push
xor
fdivl
mov
sarb
add
sahf
mov
fmuls
mov
cmp
in
cmp
in
sbbb
out
mov
xchg
ds
loope
pushl
mov
inc
mov
cs
pop
fimull
mov
cmp
je
call
or
dec
mov
mov
test
addr16
sbb
fisttps
jnp
ret
lea
mov
fs
push
cwtl
push
arpl
mov
sbb
inc
rcr
sbb
dec
out
jge
inc
fneni(8087
ljmp
mov
pushf
push
rol
sti
xor
lock
jge
or
nop
js
xchg
scas
ljmp
add
incl
std
dec
adc
adc
mov
lods
lcall
int
mov
sub
and
push
add
out
ds
into
mov
inc
js
pop
aam
mov
outsl
je
fisubs
or
cld
dec
leave
out
lds
leave
ds
shl
push
mov
call
mov
sbbl
dec
outsb
sbb
sbb
pop
add
push
sbb
inc
sbb
and
cmp
push
jle
pop
out
pop
aad
cmp
jecxz
sahf
inc
cmp
incl
fsts
and
sti
xchg
push
sarb
or
add
ljmp
or
sub
mov
icebp
mov
shrb
push
jb
ret
ud0
sar
in
pop
mov
push
rcll
push
sbb
outsb
in
xchg
pop
push
cwtl
mov
jnp
scas
stos
out
pop
daa
stos
mov
lcall
and
insl
mov
xor
mov
shrb
adc
cld
out
jb
shlb
dec
lock
jno
cs
rclb
decl
or
mov
fcomps
dec
cmpsl
sbb
push
sbb
mov
jno
mov
js
fisubrl
mov
xor
cltd
mov
cmp
push
fadd
lock
pop
adcl
mov
imul
ljmp
popf
mov
mov
mov
sub
xor
xor
shlb
xor
clc
cli
and
xorl
xchg
aaa
into
jecxz
pushl
shrl
jae
out
xlat
mov
sub
movsb
jne
add
hlt
sbb
hlt
lock
filds
xchg
sbb
jnp
orl
decl
dec
lret
mov
mov
pop
pop
sarl
ljmp
das
test
sub
cmc
loop
jbe
decl
mov
push
xchg
xchg
sub
movsb
shr
in
cmp
call
sti
jnp
pop
jne
loop
mov
sbb
inc
xchg
test
or
jl
ret
xor
inc
iret
inc
lret
clc
xchg
mov
incl
jne
or
mov
testl
or
daa
xor
jnp
pushf
dec
mov
int
fmull
lret
add
les
in
ljmp
add
fnstenv
add
dec
cwtl
push
mov
pop
cld
aaa
cld
lods
dec
dec
inc
scas
or
adc
sub
lss
xor
xor
xor
mov
mov
hlt
cmp
inc
lcall
fsubrl
shl
fsqrt
sbb
mov
test
jge
mov
decl
pop
fdivs
and
push
rcr
int3
jmp
int3
ja
loope
call
inc
xlat
xchg
and
inc
fwait
push
dec
repz
push
lcall
scas
out
xchg
jp
push
lcall
push
sbb
mov
sbb
adc
in
repz
xchg
jne
aad
xchg
and
xor
decl
insb
rcr
faddl
or
mov
adc
and
out
in
call
cmp
xchg
push
call
in
mov
lcall
clc
out
adc
or
pop
sub
icebp
inc
push
imul
adc
cltd
mov
rolb
push
repz
xor
xchg
in
jl
and
cmp
gs
inc
push
mov
or
bound
outsb
call
inc
popf
xlat
inc
pop
sbb
mov
stos
incb
test
pop
xchg
pop
jge
lahf
cmp
call
jo
fsubs
xchg
fsubs
rcrl
aaa
in
movsl
mov
add
arpl
sub
lods
inc
or
lcall
ret
xor
and
gs
fstps
icebp
sbb
cmpsb
pop
or
leave
iret
pop
std
stos
sbb
addr16
rorl
add
fdivrl
iret
sar
incl
xchg
cld
jnp
js
inc
test
and
test
mov
movsl
test
sub
nop
add
inc
push
loop
lcall
cmp
loop
popl
sbbl
push
mov
dec
rcll
fwait
pop
and
js
dec
mov
jmp
or
or
adc
inc
push
iret
movb
or
pushf
stos
bound
incl
outsl
push
sahf
sub
cmpb
cltd
pusha
stos
and
jg
xor
mov
mov
cmp
xchg
adc
wrmsr
loop
lods
xor
jge
adc
push
cmpsb
sub
aam
add
ljmp
lock
adc
jle
and
ljmp
scas
add
sub
out
es
mov
mov
das
or
pop
cld
fistpl
mov
sar
mov
mov
cmp
out
adc
fmull
jne
jl
andl
fcoms
scas
cmp
jle
lock
in
mov
xchg
push
loopne
iret
pop
imul
mov
push
mov
push
call
fwait
jle
call
xchg
in
xor
outsl
or
push
push
stc
xchg
imul
lods
fnstcw
nop
lahf
push
mov
fidivrs
setae
or
incl
arpl
pop
int
cmp
out
cwtl
cmpsb
push
mov
xchg
inc
decl
insl
adc
sub
push
cmc
enter
fidivs
jnp
scas
pushl
push
pushf
insl
adc
adc
add
push
mov
in
adc
pop
pop
lods
or
or
ljmp
or
cmp
jp
fsubl
and
mov
or
out
cli
jmp
sbb
clc
sub
cmp
lods
sbb
decl
xor
xchg
imul
push
jle
pop
cmp
rolb
mov
fdivr
decl
xchg
mov
mov
adc
or
push
sub
mov
loope
ljmp
jp
cmp
inc
push
data16
dec
into
ja
test
mov
arpl
mov
mov
sub
repnz
data16
loop
jg
cmpsb
pop
lahf
ret
jle
enter
fcmovnbe
jl
rcrw
icebp
int3
ljmp
xchg
cwtl
mov
adc
jo
or
flds
les
cmp
jnp
popl
cmp
cmp
into
leave
adcb
push
dec
lea
ljmp
push
mov
lret
arpl
ljmp
push
add
test
mov
pusha
out
add
pop
dec
popf
enter
xorl
fildll
aam
mov
mov
xlat
fldt
iret
bound
stos
add
dec
daa
movsl
aas
push
test
xchg
pop
ja
inc
sarb
aas
mov
arpl
cmp
jg
aam
je
fldl
adc
popl
mov
mov
outsl
idiv
sti
jb
dec
pop
cmpsl
pushf
sti
push
mov
loop
sbb
adc
pop
data16
mov
fisttpl
insl
ficompl
nop
fists
xor
stos
aam
and
pop
aam
inc
out
clc
sahf
shlb
outsl
push
out
loop
lods
loope
adc
inc
into
adc
cmpsb
rorl
rcll
xchg
mov
mov
sahf
mov
mov
xchg
lods
fsubrs
ljmp
incl
sbb
sbb
add
ss
aam
das
jle
pushf
dec
lock
fisttps
lcall
addr16
xor
pop
outsb
bound
fistpll
pop
loope
mov
pop
mov
ja
mov
push
mov
enter
add
decl
lods
mov
inc
outsl
adc
repnz
inc
jmp
outsb
aaa
cmp
lret
dec
incl
outsb
or
sub
xchg
lret
stc
push
sub
sar
xchg
lea
ret
outsl
call
mov
movsb
pop
call
jmp
push
incl
sbb
or
sti
and
pusha
ja
push
les
jl
and
lcall
pop
and
dec
aaa
lahf
stos
add
hlt
aaa
iret
jecxz
in
mov
jmp
mov
ljmp
pop
cmpb
in
rorl
stos
mov
and
mov
sbb
jae
push
pop
out
mov
inc
bound
push
mov
vandps
jmp
xchg
outsl
in
pop
pop
test
pusha
loopne
fwait
in
add
mov
and
les
jmp
xor
stos
xchg
in
int3
filds
and
cmpsb
rcr
push
pop
inc
lds
lcall
mov
mov
pop
dec
dec
sub
sbb
leave
adc
dec
dec
lret
lods
ljmp
xchg
dec
inc
inc
icebp
sub
push
test
imul
outsl
fildll
or
mov
lcall
add
in
jg
or
inc
mov
out
rorl
pop
stos
sbb
insb
xchg
out
jmp
push
push
xor
and
ds
incl
sahf
mov
loop
sar
sbb
jns
pop
mov
mov
lds
xor
or
adc
mov
iret
mov
mov
fimull
pop
or
and
pop
jg
pop
ret
xchg
in
fdivs
sbb
fldt
jecxz
addr16
aad
mov
adc
dec
je
lods
xchg
ljmp
in
or
pop
pop
jae
or
sbb
test
loop
int
adc
jmp
adc
dec
cwtl
push
or
pop
outsl
mov
adc
cmp
sbb
push
aam
sub
push
inc
dec
inc
out
lahf
popf
pop
adc
ss
jp
and
or
jnp
in
cmp
call
mov
test
jns
stos
arpl
into
mov
div
loopne
clc
inc
mov
in
push
mov
repnz
jnp
out
push
push
sub
cmp
dec
jmp
int
add
sub
out
jae
in
push
sub
outsb
into
jmp
adc
ljmp
movsl
mov
in
inc
lret
mov
fldcw
call
mov
jne
xor
pop
test
jae
roll
mov
sarl
pushf
cld
adc
mov
push
cmp
fcompl
aas
sbb
fnstsw
mov
incl
mov
add
gs
rolb
popf
mov
mov
lcall
or
add
pop
mov
xchg
mov
out
mov
and
push
movsb
cmp
loop
dec
push
add
loope
test
cmc
in
sub
cmp
sbb
stc
call
cmp
movsb
inc
loopne
mov
add
mov
clc
adc
rcrl
cld
decl
xchg
mov
push
sub
sub
mov
push
decl
sbb
lods
je
call
in
in
xor
incl
push
in
test
out
cmpsl
scas
jnp
xchg
lds
out
push
xchg
enter
movsl
mov
lods
mov
and
insl
pop
fstpl
decl
js
jns
xor
test
xchg
dec
fdivrs
sub
nop
push
mov
in
fildl
cmpl
cmc
cld
data16
mov
and
adc
call
pop
test
std
mov
sbb
push
cwtl
test
xchg
push
mov
fstps
xor
pushf
loop
push
adc
inc
adc
inc
stc
xchg
aad
data16
and
add
iret
cmp
mov
and
addr16
xchg
push
pop
sti
in
or
add
xchg
test
xchg
cltd
cld
fs
lea
pop
and
ftst
cltd
add
pushl
push
or
test
inc
sub
out
and
das
mov
push
sbb
xchg
fistps
mov
out
shlb
jl
cltd
sbb
push
cld
les
mov
inc
jge
mov
ja
mov
les
jmp
in
push
loopne
stos
std
xchg
adc
imul
js
nop
icebp
or
das
sbb
cs
jg
lcall
jo
repz
in
test
push
xchg
stos
insl
mov
popa
lods
adc
jmp
xchg
out
lret
jne
cmp
lds
mov
cli
pop
sbb
jno
push
icebp
ja
pop
add
ret
cmp
jmp
xlat
and
xor
mov
push
push
das
clc
incl
or
mov
sub
popa
dec
test
inc
inc
ljmp
jbe
xchg
mov
arpl
cli
add
test
scas
je
pushl
inc
cmovne
test
push
loope
popf
xor
in
mul
add
in
fs
add
in
xor
mov
sbb
pop
dec
push
xchg
jmp
arpl
mov
push
dec
decl
insl
add
call
adc
cmpsl
cwtl
inc
loope
decl
xchg
jbe
movsb
pop
sbb
xor
hlt
sti
add
dec
test
or
cmp
scas
in
mov
push
sub
int3
stos
sub
lds
cmp
sub
decl
les
rcrb
mov
mov
outsb
in
push
outsb
push
or
sbb
ljmp
xor
mov
notb
and
dec
mov
jbe
ja
sub
dec
mov
pop
data16
adc
movsl
pop
mov
xchg
stos
cmp
fdivrp
incl
and
std
mov
imul
dec
mov
lahf
lea
icebp
and
mov
add
lods
aam
xchg
cmp
mov
cmp
adc
or
aad
inc
sub
xor
je
lock
icebp
call
aam
xor
rcrb
das
adc
loope
adc
inc
lcall
push
std
adc
ud2
gs
adc
xor
add
dec
cwtl
mov
adc
push
cmp
adc
insb
xlat
fmuls
adc
or
fnstenv
in
call
sbb
push
sbb
mov
adc
jg
faddl
insb
jmp
or
mov
js
mov
movsl
or
loop
sbb
pop
mov
ja
pop
in
xchg
fldt
and
outsb
incl
stos
mov
cli
lahf
insl
xchg
cmp
lods
arpl
add
xor
pop
arpl
pushl
push
mov
lods
xlat
clc
sub
mov
and
or
decl
add
dec
shr
cli
in
adcb
or
jo
das
mov
in
addl
sub
mov
xchg
pusha
arpl
add
add
in
fwait
pop
cmpsb
ret
jmp
ds
inc
inc
nop
mov
bound
push
cmc
jmp
jecxz
adc
call
fdivr
dec
add
in
rolb
inc
push
and
sub
add
aaa
shlb
pusha
dec
ljmp
and
xchg
jae
leave
mov
mov
jo
push
out
jmp
xchg
pop
cld
mov
sbb
dec
mov
mov
stos
dec
popf
int3
xor
fimuls
inc
dec
dec
jle
sbb
mov
sbb
pop
mov
dec
aaa
jae
mov
ffreep
shrl
pop
ret
aas
sub
out
das
jo
xlat
shrl
jp
inc
xor
outsb
aam
pop
stos
or
mov
ljmp
stc
jecxz
push
cmp
fnsave
sub
jmp
outsb
cmp
cltd
cmp
dec
pop
mov
ljmp
repnz
mov
out
repz
mov
mov
outsb
mov
lahf
inc
mov
rclb
enter
call
das
adc
xchg
rclb
jge
imulb
das
push
shlb
loope
pushl
sub
pop
inc
sbb
adcb
loope
adc
fists
mov
filds
pop
shl
mov
jp
das
adc
rep
push
adc
jmp
repnz
test
add
push
push
cld
xchg
mov
aas
lcall
pop
sbb
dec
adc
inc
popl
pop
mov
push
pop
movb
out
mov
mov
jg
jge
mov
mov
outsb
xchg
xor
mov
xchg
cmp
inc
xchg
cmpsb
cmc
mov
sub
aam
sbb
sbb
outsl
bound
out
and
and
push
fisttpll
mov
call
push
insb
repnz
push
inc
fcomps
aas
inc
sbb
jecxz
lock
push
jg
in
dec
sahf
sbb
decl
lock
out
xchg
push
jmp
jnp
ret
mov
icebp
jnp
adc
ljmp
lea
movsb
push
sub
adcb
sbb
mov
push
inc
incl
lea
mov
jge
jge
imul
and
hlt
jnp
imul
sub
incl
cld
nop
cmp
mov
add
orl
add
sub
pop
cltd
mov
mov
add
jle
cmp
mov
scas
or
and
sti
jb
cmc
rcl
in
lods
mov
push
into
incl
push
int
dec
in
mov
push
ret
andps
fnstcw
aad
xor
cld
out
in
push
push
mull
fs
mov
or
jg
push
lods
mov
sub
jns
lea
sub
mov
mov
call
clc
lea
pop
xor
and
aaa
gs
nop/reserved
pushf
jl
jge
mov
push
sub
sbb
cmp
das
stc
xchg
adc
mov
adc
xchg
das
sub
cltd
cltd
ja
push
or
ret
pop
jle
sbb
push
sbb
mov
test
testb
fnstsw
jnp
fs
subl
cmp
and
lcall
incb
testb
sbb
mov
xor
sahf
movsb
movsl
mov
fidivl
adc
fwait
shr
dec
mov
stos
or
inc
cld
pushl
fstpt
sbb
test
xchg
mov
jg
cmpsl
xchg
and
ror
jnp
iret
xchg
mov
test
dec
imul
pusha
xchg
lock
fstpl
inc
xlat
sbb
in
scas
mov
lcall
cld
cwtl
and
adc
cmp
test
xor
mov
xchg
pop
dec
test
insb
test
lret
mov
jle
dec
xchg
mov
mov
lea
sub
inc
and
and
xchg
cmp
push
mov
incl
ds
push
jp
sbbb
xchg
add
ss
lds
xor
add
decl
movsb
push
pop
push
sahf
out
in
and
jne
test
call
cs
cmp
or
imul
mov
jne
add
popa
fcompl
lcall
sub
pop
int
sub
mov
icebp
xchg
movsb
mov
mov
out
mov
xchg
mov
sub
or
sbb
fwait
ret
cli
and
push
push
inc
or
xchg
and
call
mov
in
xor
push
or
int
sbb
jl
enter
sbb
push
inc
lcall
sti
dec
mov
cmpsb
daa
xor
clc
cmpsl
mov
push
arpl
dec
jno
ljmp
pushf
sbb
inc
fcoms
cmp
xchg
fwait
add
adc
cmp
test
scas
in
adc
cmp
lea
xchg
dec
mov
loope
std
push
daa
lcall
push
lret
mov
inc
sub
pop
mov
test
ljmp
insb
pop
gs
or
inc
fstpl
sub
and
xor
xor
lods
push
dec
in
insb
das
cmpb
or
and
cwtl
add
mov
jns
fs
push
pop
inc
loop
mov
enter
and
xor
scas
adc
inc
aas
mov
add
mov
cmpsb
mov
out
mov
es
test
iret
decl
ret
push
xlat
add
mov
cmp
sub
inc
das
lds
testb
test
stc
cs
decl
addr16
cmp
xchg
xor
pop
add
stos
enter
mov
inc
cmp
call
and
jne
sub
jae
popf
push
cmp
adc
cmpsb
or
sahf
adc
ljmp
jb
loope
shll
xchg
xor
jge
dec
mov
dec
add
cli
sahf
mov
sbb
jle
and
mov
rcrl
push
mov
jg
jle
scas
mov
add
or
std
push
ss
js
adc
cmpsb
or
fbstp
xor
loope
pushl
out
stc
ret
mov
aad
push
fsubp
divl
sub
and
mov
adc
movsl
lcall
jne
dec
hlt
loopne
push
ss
imul
lcall
pop
xchg
sbb
iret
test
pop
scas
test
pushf
cmp
dec
loopne
sahf
shufps
icebp
test
inc
and
mov
jmp
outsb
jno
and
cmp
push
bound
in
pop
ss
jge
ret
lods
jecxz
cs
incl
adc
scas
and
ja
and
mov
pushl
cmp
aam
cmpsl
mov
ds
mov
js
popa
xchg
mov
fildll
decl
aad
push
sbb
ljmp
outsb
jae
in
fimuls
aaa
xchg
rclb
icebp
addb
sub
jo
int3
pushf
out
lods
inc
mov
cmpl
cltd
mov
mov
xchg
sbb
or
stos
cld
adc
jmp
jnp
sub
xchg
sub
mov
adc
jo
push
sub
pushl
leave
ret
mov
xlat
iret
xlat
filds
sti
jnp
mov
shl
jl
cmp
mov
ljmp
flds
jo
imul
ljmp
sahf
cmpsb
shll
dec
xor
dec
addr16
sub
andl
loop
stos
mov
fldt
movsb
mov
push
cmp
sbbl
lret
xchg
cmp
dec
std
sahf
push
cltd
inc
mov
mov
into
imul
push
cmp
nop
arpl
xor
push
out
add
call
mov
add
aam
xor
jmp
or
sbb
push
add
inc
fildl
stos
test
sub
pushf
std
adc
lock
stc
cltd
fadds
call
adc
push
filds
push
lahf
into
in
andb
cmp
mov
xor
inc
mov
xchg
sub
add
dec
fstpt
mov
das
jle
xchg
adc
pushl
or
mov
sbb
bound
inc
push
test
sub
jns
clc
je
sub
push
sbb
ljmp
xchg
dec
pop
insb
ljmp
xchg
inc
ss
and
decl
call
cmp
pop
sbb
call
pop
lds
decl
dec
mov
add
test
jae
mov
cld
in
inc
mov
popf
lea
movsb
jmp
cld
enter
or
divl
int
dec
fcompl
bound
fadd
incl
cld
mov
sarb
icebp
push
inc
and
orb
test
cmpsb
call
cltd
mov
lods
jno
mov
inc
xor
jae
xchg
mov
cmp
sub
rclb
push
lods
inc
mov
loopne
rep
jo
cmp
test
testb
loop
pop
sub
cmp
or
jecxz
mov
mov
push
clc
push
shlb
fsts
dec
out
cmp
add
sahf
cld
rcrl
jmp
dec
stos
aam
mov
pushl
std
add
dec
xchg
jle
xor
add
fdivl
pop
loopne
inc
ja
and
push
mov
clc
ljmp
outsl
pushf
push
xor
lret
jmp
mov
jmp
dec
inc
mov
aaa
filds
xor
pop
mov
decl
fs
sub
std
or
push
cwtl
mov
pop
mov
daa
push
adc
dec
jmp
mov
daa
adc
loop
sub
loop
jecxz
jns
cmp
inc
and
incl
push
and
movsl
lahf
nop
and
xchg
ja
mov
test
jg
test
dec
lahf
jge
push
add
xchg
test
sbb
fisubrl
leave
push
std
mov
out
ljmp
jp
dec
test
xor
pop
cli
mov
pop
pop
loopne
adc
push
pop
sbb
cmp
decb
clc
dec
xchg
adc
out
cmp
add
jg
insl
subps
lret
stos
or
or
adc
xchg
pop
imul
push
jo
arpl
sbb
out
in
out
adc
xchg
call
mov
jae
and
mov
add
fisttpll
xchg
adc
and
mov
cli
cmp
call
loopne
push
clc
mov
xchg
push
out
ljmp
xor
outsl
cli
cmp
cs
jno
xor
rclb
popa
lahf
inc
lret
imul
dec
push
mov
mov
push
dec
add
xchg
mov
out
add
jle
adc
in
mov
decl
data16
jl
lcall
das
insl
ja
fcomp
or
pop
lret
xchg
fmuls
or
inc
add
pusha
lea
out
xchg
bound
gs
popa
cmp
push
inc
clc
popa
mov
and
int3
or
dec
xchg
pop
mov
cs
mov
and
sub
xchg
and
jecxz
outsl
inc
mov
sbb
adc
lret
cwtl
lcall
jb
adc
aaa
sti
js
push
ret
push
fsub
xor
adc
jne
filds
call
ds
rcll
push
call
and
fistpll
pop
je
cmp
or
sub
dec
adc
arpl
fisttps
mov
jns
out
lahf
popf
cli
dec
stos
and
fcomip
lret
aaa
int3
fs
gs
mov
pop
ja
cmp
inc
ret
pop
xchg
fs
sub
or
decl
sbb
inc
fadds
mov
push
and
xchg
xchg
divb
popl
mov
clc
lcall
in
push
inc
inc
sbb
sub
mov
popf
ror
fwait
nop
mov
outsl
jbe
pusha
mov
test
pushl
dec
addr16
push
xchg
mov
pop
dec
lahf
dec
push
imul
hlt
fcmovne
daa
sub
push
std
sub
cwtl
xorl
sub
ficoms
std
pop
sbbb
cli
sbb
add
push
lcall
xor
mov
lcall
repnz
mov
mov
cli
insl
pushl
or
arpl
pop
sbbb
rol
xor
js
cmp
scas
test
pop
fs
xlat
cmpsl
cmpsb
into
lds
add
sahf
xchg
mov
incl
clc
lock
mov
xchg
sbb
push
push
and
pushl
mov
jp
addb
inc
repnz
mov
rcll
pop
sbb
call
andl
rcl
xor
lahf
test
sub
lcall
or
enter
hlt
lcall
cmpsb
add
mov
outsb
jp
hlt
mov
xchg
push
das
test
jae
pushl
std
jmp
sarb
notl
cld
or
lds
mov
fdivr
mov
pop
in
mov
or
cmp
lock
jle
cmc
dec
out
cmp
jmp
xlat
lret
mov
push
lea
jae
mov
lret
clc
jg
rcll
xchg
or
pusha
cli
pop
push
push
add
jecxz
ljmp
sbb
inc
push
xchg
and
cmp
jecxz
cwtl
dec
jo
ljmp
ret
rclb
and
cmp
daa
mov
pop
and
call
int
das
mov
enter
repnz
mov
mov
incl
stos
out
jp
test
nop
pop
scas
out
inc
lods
aas
or
mov
jg
dec
ds
add
lods
push
ret
movsl
xor
es
inc
lcall
inc
mov
add
gs
mov
stos
mov
mov
rclb
aam
mov
mov
cli
cmp
scas
sbb
test
call
mov
mov
hlt
cltd
pop
push
sub
cmp
outsl
add
pop
mov
lcall
cs
xor
sbb
adc
or
scas
push
inc
xlat
dec
es
add
incl
jae
adc
es
mov
cmp
in
bound
xor
std
aam
out
push
mov
mov
push
mov
leave
fistpll
cmp
jae
repnz
aas
dec
adc
adc
inc
sub
jmp
outsl
mov
lea
scas
mov
outsl
arpl
ret
fstpt
pop
mov
inc
fildl
mov
andb
and
pushl
xchg
insl
adc
sarl
arpl
mov
mov
cmp
mov
dec
cmp
aaa
dec
out
lcall
call
sahf
fdivrl
shll
lret
sbbl
std
call
clc
and
cli
inc
xor
vpand
fdivrl
enter
test
call
fstpt
cmpsl
jle
shrl
rclb
out
sub
stc
and
adc
inc
pushf
jle
push
out
and
dec
dec
decl
out
sbb
cli
fst
sub
lods
shrl
xor
cmpb
xor
hlt
ljmp
jno
test
in
jnp
or
fst
jp
cmpsl
sbb
push
je
or
jnp
or
push
dec
shr
shrb
sbb
movsb
testb
mov
fs
sub
movsb
cmp
popf
inc
cmpsl
pushl
clc
sbb
sarb
addr16
adc
fs
loopne
pop
or
push
sub
popf
sub
movsb
icebp
scas
pop
pop
incl
in
mov
inc
hlt
push
jns
jle
insl
pushf
or
dec
sbb
xchg
mov
jnp
shll
dec
mov
incb
in
sub
jge
lods
push
pop
fldz
mov
jl
jg
inc
lcall
xchg
jns
add
call
test
movsb
mov
and
cli
push
xor
cld
fwait
or
stos
or
mov
sub
daa
icebp
dec
dec
push
movsb
mov
incl
add
fs
dec
or
dec
gs
xor
movsl
mov
push
cmp
lods
fwait
xor
dec
mov
mov
cmp
in
push
mov
subl
sbb
insl
sub
in
enter
repnz
loopne
popf
sub
pop
cld
fs
pushl
fildll
pop
shlb
mov
pop
add
icebp
insb
add
les
orb
ja
clc
ljmp
add
repnz
dec
and
test
mov
push
into
popa
cli
es
push
or
out
decl
inc
subl
push
add
aam
ljmp
aaa
sbb
push
test
jno
nop
xchg
adc
inc
pop
aaa
outsl
idiv
jg
push
fidivl
ds
dec
and
loope
rol
cmpsl
jo
pushl
fdivr
mov
in
sbb
mov
out
mov
mov
rclb
and
ljmp
jae
inc
out
jnp
scas
add
out
stos
xorl
xchg
daa
inc
xchg
jle
mov
test
sbb
lcall
decl
mov
test
pop
testb
fwait
cmp
aam
insb
mov
push
mov
rolb
cmp
lock
lahf
jg
call
les
jp
xlat
stc
mov
xchg
inc
std
dec
push
nop
push
das
dec
lock
adc
lret
repnz
mov
test
mov
lret
addr16
sbb
subb
jg
call
shlb
add
xor
lock
pop
je
jno
dec
sarb
pushl
push
sub
xlat
mov
into
adc
sub
mov
jno
sahf
push
int
incl
pop
push
push
inc
popa
nop
sbbb
fildl
push
out
push
stos
or
rclb
sub
inc
add
mov
fidivrl
das
xor
scas
pushl
loope
out
push
rclb
int3
add
xor
and
cs
pop
jne
sbb
jg
test
cmpsb
or
addr16
adc
orb
js
jb
pop
push
and
pop
dec
mov
lcall
lahf
and
cmp
cmp
out
clc
imul
leave
in
mulb
repnz
or
pop
std
ljmp
scas
mov
ret
lods
stos
sub
fmuls
xor
fidivrl
adc
pop
clc
incl
popf
repz
out
pop
divb
movsb
test
mov
lock
dec
ljmp
and
pop
or
or
dec
mov
stos
mov
scas
xor
dec
mov
and
fcomp
out
and
das
and
or
das
sub
inc
push
or
xlat
or
add
push
jmp
lock
fstpl
add
fbstp
mov
lock
jns
fbstp
and
add
cmp
inc
push
push
decl
inc
sub
jle
pusha
lods
xor
push
mov
jg
xchg
mov
js
int3
mov
pop
outsl
inc
xor
decb
ljmp
fcoml
adc
repz
mov
loopne
fistpll
and
jg
mov
sub
aam
ret
ds
test
aaa
jg
dec
cmpsl
pusha
inc
loope
call
push
inc
ds
fidivrs
cltd
testl
push
push
arpl
decl
dec
outsb
adc
and
repnz
dec
outsl
and
xor
adc
call
dec
dec
xor
xlat
into
addb
cmp
dec
dec
jmp
push
sub
call
daa
leave
lods
shlb
movsb
fsubrs
stos
pop
and
testl
pop
inc
jo
adc
or
call
xor
fisubl
cld
mov
shlb
or
jle
cmpsl
cmp
jmp
mov
inc
pop
aam
shlb
inc
fwait
inc
inc
jecxz
mov
or
mov
adc
xor
fcom
jo
or
in
ret
jg
rorl
and
mov
int
inc
sub
cli
dec
arpl
jg
into
and
xor
jmp
jecxz
pop
fldl
es
mov
mov
dec
insl
sbb
jge
jp
mov
jg
decb
cmpsl
pop
push
rcll
xchg
pop
cmpsl
cmc
frstor
stc
ss
adc
mov
out
push
cwtl
jmp
lods
hlt
minps
or
adc
rol
call
lcall
and
lea
push
imull
jbe
aad
lods
aaa
xor
cld
js
jno
pop
adc
jge
mov
jns
push
sarb
inc
clc
pop
jne
jle
push
or
cli
in
sbb
cli
push
lds
mov
lods
test
cmp
xchg
ljmp
mov
das
cmpsb
icebp
lcall
push
out
int3
jmp
in
in
mov
es
mov
mov
mov
jecxz
inc
sub
out
push
mov
das
incl
cmpl
ret
xor
mov
fcos
xchg
dec
rclb
aaa
mov
mov
leave
repnz
sar
push
cmpsl
cs
or
fdivr
rcrl
xor
cmp
decl
cmc
mov
in
loopne
pop
inc
cli
lods
jae
mov
cmp
lahf
adc
outsb
ret
std
call
cld
aad
fs
jo
faddl
or
xchg
in
cmp
aam
repnz
pushl
rcrl
lret
cs
insb
sbb
adc
imul
lret
jno
outsb
scas
call
les
xchg
leave
jmp
push
inc
sub
mov
inc
push
stc
les
pop
xor
lret
enter
ja
outsl
fdivs
fmull
jno
jmp
pop
sar
cli
ljmp
inc
mov
cld
flds
cmpsl
nopl
cltd
in
mov
ljmp
mov
jecxz
mov
adc
jg
add
mov
mov
jg
bound
adc
jns
mov
call
sbb
xchg
adc
xchg
aad
or
cld
insl
dec
inc
adc
std
add
jl
movb
loopne
enter
mov
gs
aam
adcl
cmp
push
repz
fsub
loope
ljmp
outsl
jg
andb
lea
and
lret
and
pop
mov
pop
leave
test
cmp
test
fists
lods
xchg
shrl
scas
and
dec
mov
xchg
or
insb
movsl
rcr
cmp
pushl
pop
int3
ret
jnp
sbb
mov
and
loope
movsb
outsl
clc
push
xor
sub
call
cmp
sub
jg
jb
inc
inc
inc
test
xchg
mov
mov
pushl
mov
mov
mov
or
cwtl
decl
imul
push
mov
mov
insl
cli
mov
ss
jbe
rorl
lahf
divl
ja
shlb
jo
push
lahf
ds
ljmp
cwtl
adc
fs
es
subl
shll
jp
rorb
dec
test
pop
fs
sub
sub
fwait
mov
fdiv
jp
and
mov
and
decl
cmp
test
pushf
out
es
xor
das
imul
jecxz
mov
adc
repnz
fisttpll
or
push
std
pushl
mov
xor
cmp
mov
xor
sbb
test
inc
std
xchg
lcall
sub
aaa
cwtl
pop
adc
imul
sbb
adc
push
fdivrs
xchg
jmp
loope
jmp
aam
fwait
mov
pop
mov
cmp
inc
fs
adc
cmp
dec
xchg
push
lock
incl
pop
and
pop
push
mov
push
test
ja
xchg
insb
testb
sbb
mov
loopne
mov
xorb
shrl
adcl
movsb
xor
lret
mov
pop
dec
repnz
test
and
add
mov
icebp
data16
push
in
das
and
cmp
mov
in
out
popf
out
push
inc
fcomp
subl
adc
cmpsb
push
xchg
push
jnp
sub
lea
maxps
pop
inc
stc
stos
std
xlat
sahf
enter
incl
fidivl
dec
sarl
add
dec
jmp
cmp
sti
call
or
leave
cmpsb
sbb
mov
mov
ja
jg
cmc
mov
insb
xlat
sub
cmp
cmp
mov
aaa
sar
mov
mov
push
movsl
loopne
in
cmp
out
int
or
xchg
fidivl
ficompl
pop
adc
jg
or
mov
int
cmp
ljmp
sub
push
fisubrs
xlat
icebp
in
movsl
jbe
xchg
sbb
adc
imull
or
icebp
lcall
xchg
out
bound
fcoms
adc
rep
stos
xchg
addr16
sub
mov
into
es
decl
or
ds
mov
enter
add
das
mov
and
mov
add
dec
cmp
fwait
adc
clc
jg
jns
sub
pop
sub
mov
jge
in
or
dec
xchg
fimuls
call
sahf
test
push
mov
lret
adc
rcll
test
xchg
call
xchg
es
push
mov
xor
fimull
shrl
pushl
popf
cmc
sub
popf
sub
stos
push
or
aam
adc
dec
iret
jmp
adc
nop
ret
repz
sahf
inc
test
push
jg
cmpsb
mov
adc
pop
jg
jmp
push
int3
outsb
stc
out
sbb
test
dec
adc
lcall
mov
mov
pop
in
inc
aad
fists
cltd
je
hlt
dec
cmpsl
sub
cmpsl
push
scas
inc
push
push
arpl
aaa
mov
jge
add
lods
dec
fadds
dec
mov
dec
mov
nop
stc
out
push
mov
push
lahf
cmp
mov
mov
fcmovne
cmpsl
mov
mov
mov
test
sar
pop
sbb
jecxz
fwait
xchg
inc
dec
ret
data16
lcall
push
test
outsl
jecxz
push
je
adcb
out
clc
testb
xchg
rorb
mov
popf
fcomip
inc
xchg
ret
pop
outsb
and
cli
sarl
je
sbb
jmp
dec
mov
fimull
frstor
mov
cltd
jle
sti
into
scas
clc
jg
scas
pop
mov
lret
scas
pop
adc
mov
loop
stos
jg
push
xchg
sub
push
or
adc
mov
lret
movsb
and
ljmp
lea
xchg
sub
iret
jmp
cmc
dec
insb
mov
mov
rcll
leave
insl
lock
cmp
icebp
call
cmp
mov
fiadds
xlat
push
decl
cwtl
adc
mov
sbb
gs
popf
push
inc
sbb
bound
popa
adc
sub
sub
cltd
mov
popf
push
lock
ljmp
xor
call
incb
insl
mov
pushf
mov
ja
add
push
mov
cmp
pop
call
push
cmpsb
mov
lcall
dec
xor
cmp
pop
je
jne
lds
dec
inc
pop
add
mov
loop
inc
data16
clc
lcall
cltd
xchg
pop
fsubs
aam
lds
mov
inc
inc
inc
loop
frstor
mov
jo
icebp
jo
ljmp
enter
mov
lret
out
outsl
mov
mov
movsl
lret
and
in
and
aad
ficompl
out
mov
aad
clc
xchg
mov
sub
sub
mov
incl
popa
cmc
mov
push
lahf
mov
out
fimull
ljmp
sbb
lock
push
cmpsl
xchg
out
aad
and
cs
popf
ljmp
mov
test
dec
jg
jae
shlb
jl
sbb
imul
dec
lock
in
mov
nop
movsl
push
xchg
push
pop
ret
aad
xor
shrl
ljmpw
xchg
rcrl
fdivrp
push
jmp
push
stos
mov
push
sub
mov
dec
add
aaa
dec
fs
adc
fbstp
into
nop
mov
inc
cmpsl
jo
inc
jge
scas
mov
mov
or
push
das
xchg
sub
jp
test
aas
stc
or
pop
aas
fnstcw
in
fidivrl
xchg
push
xchg
push
push
outsl
pop
xor
cmpsb
mov
ss
jg
cmp
xchg
mov
cli
push
repnz
iret
out
xchg
pop
push
pop
and
pushl
cld
push
cmp
enter
sub
jmp
xchg
sub
sarb
push
inc
js
sub
adc
cmpsl
xchg
mov
hlt
mov
pop
and
in
test
pop
lahf
cmpsb
jmp
leave
and
arpl
fimull
cmc
and
dec
into
sbbl
scas
in
jecxz
arpl
push
icebp
out
out
out
or
add
subb
jmp
or
cmp
clc
push
pusha
jg
scas
cmp
xor
sub
dec
roll
popa
mov
pushf
clc
pop
and
dec
inc
out
shll
jmp
push
cmpsl
and
out
rcl
lahf
dec
decl
inc
in
adc
sbb
adc
pop
mov
test
fimull
incl
mov
test
inc
arpl
fsub
sarl
ret
adc
inc
cmpsl
push
xchg
adc
decl
push
mov
ds
xchg
push
mov
add
jns
xchg
jle
xchg
das
shlb
jmp
or
pusha
sub
imul
lods
dec
adc
mov
mov
pop
dec
xchg
inc
test
jg
mov
stc
sub
loope
pop
and
in
cmpsl
call
shrb
fstl
movsb
pop
xlat
mov
loopne
lock
clc
int3
iret
pusha
insb
inc
fcompl
xchg
ss
icebp
pop
scas
sub
fbld
sti
loope
mov
cs
cmp
mov
jns
jg
je
xchg
sub
ljmp
popa
sub
or
push
push
xchg
test
shrl
push
incl
js
hlt
cli
jns
jg
inc
inc
sarl
fidivrs
mov
mov
jmp
cmp
lock
inc
pop
dec
loope
fnstenv
sti
je
add
test
aaa
std
pop
jecxz
inc
push
stc
clc
push
add
mov
inc
out
lods
push
call
ja
xchg
repnz
inc
pushf
mov
push
subl
out
xchg
push
ss
or
cmp
adcl
andl
mov
or
or
jge
sub
cmp
stos
repnz
jmp
sub
test
jmp
jmp
mov
and
push
cltd
dec
das
in
push
fcom
bound
sub
test
or
adc
sub
sub
and
incl
lds
xor
stc
pop
ljmp
stos
test
inc
adc
aaa
push
xchg
ja
call
rcll
xchg
or
aam
push
mov
pop
repnz
loope
out
cmpb
mov
mov
add
ljmp
jno
ret
jmp
sub
jo
adc
cld
aas
add
sbb
pop
mov
popa
mov
ljmp
sub
adc
push
xchg
sbbl
fildll
pushf
pusha
loop
pop
fyl2xp1
stos
xor
cmp
bound
jbe
stos
fwait
mov
cli
decl
daa
fs
fldenv
aas
popf
jg
lods
call
arpl
mov
mov
loope
repz
decl
mov
xchg
out
cmp
shr
add
push
xor
xor
xchg
add
jne
jmp
iret
movsl
stc
xchg
lcall
adc
inc
jp
xor
push
dec
in
insl
das
ds
inc
jg
insb
sbb
iret
out
repnz
mov
pushl
push
lahf
jno
or
pusha
lds
mov
sub
add
out
mov
fisttps
add
inc
push
stos
sbb
jnp
or
loopne
popa
fsqrt
adc
cltd
stc
mov
push
out
cmp
or
xor
mov
jbe
add
mov
dec
mov
ljmp
in
xchg
jp
adc
fimuls
outsb
pop
sbb
pushf
in
test
fldl
lock
test
cld
jg
pop
mov
out
pop
ret
clc
sbb
mov
jg
or
mov
xchg
jmp
roll
sub
loop
clc
add
roll
and
fmull
dec
iret
and
out
movsb
push
sar
jmp
test
stos
popf
or
mov
cmpsl
rorl
movsl
into
mov
jb
cmp
pushl
nop
mov
jge
inc
xor
lret
cwtl
add
daa
sbb
std
mov
mov
dec
push
mov
leave
loopne
fwait
jo
sub
cld
sahf
add
mov
push
hlt
xchg
pop
push
clc
pop
cli
add
inc
and
fs
xor
mov
mov
bound
and
and
push
fdivl
decl
insl
dec
rol
icebp
or
push
ss
aad
cmc
das
pusha
sti
lods
mov
dec
loope
js
in
cmp
movsb
scas
out
aas
sbb
mov
jmp
lods
not
mov
sarl
stos
bound
call
cs
dec
notb
cmpsb
in
frstpm(287
xor
aaa
add
testl
in
pop
push
jp
inc
mov
stc
scas
int
cmpsb
out
inc
call
cmp
jge
sar
incl
xchg
dec
jae,pt
jge
clc
jmp
cli
dec
popa
cmpl
push
icebp
xchg
jmp
sbb
incl
out
dec
sub
aaa
shrb
lcall
mov
les
jmp
sub
xchg
sahf
sbb
out
or
mov
dec
mov
popf
call
rep
idiv
pushl
sbb
in
pop
add
push
les
dec
and
lds
insl
jns
pop
lea
pop
pop
incl
add
arpl
xor
mov
dec
jl
jg
das
hlt
cmp
rolb
inc
std
iret
and
mov
or
jae
dec
das
cli
call
xchg
or
cmc
fildll
jb
rep
add
lahf
rclb
jmp
sbbl
or
jmp
iret
mov
mov
pop
sbb
push
out
fdivl
mov
cmpsb
mov
pop
stc
sbb
xlat
mov
in
mov
fadd
inc
pop
lods
mov
pop
repz
pop
xchg
movsb
sbb
add
jns
leave
fisttps
sbb
decl
dec
aaa
push
xchg
sub
lea
add
pushl
or
dec
fs
dec
imul
dec
loop
dec
xchg
sub
enter
jmp
add
jmp
leave
cwtl
cmp
mov
dec
ret
add
mov
sti
data16
les
jecxz
mov
jl
aam
mov
hlt
out
pop
mov
add
xchg
sbbb
cmp
data16
inc
aad
xchg
push
stos
jl
and
sti
lods
lock
xchg
sub
sub
cltd
fcompl
sbb
push
sub
aam
lret
cli
lcall
call
mov
add
jle
and
inc
ljmp
fidivs
mov
icebp
mov
stc
mov
js
jns
mov
movsb
sub
inc
lcall
je
cmp
xchg
mov
mov
ljmp
in
inc
inc
sub
xor
inc
pop
fstpl
movsl
jmp
lea
mov
sahf
lret
sahf
cld
std
mov
cli
and
inc
test
jmp
add
jmp
aaa
jns
mov
jle
mov
int3
mov
leave
ljmp
push
in
jg
sahf
jp
add
cli
push
mov
insl
xchg
shl
sub
repnz
rclb
pop
jmp
inc
push
test
call
sarl
cmp
push
lods
incb
fs
repz
jmp
and
test
popa
pop
into
push
clc
decl
or
mov
or
cmp
push
xchg
frstor
xor
lea
dec
pushl
jae
lret
jo
dec
call
enter
cs
sub
scas
outsl
adc
dec
xchg
add
jmp
jg
cmp
jb
mov
loopne
mov
sbb
subl
jns
test
call
dec
push
push
jmp
loope
inc
jbe
std
clc
mov
dec
out
push
call
cld
jmp
fsubrs
adc
in
push
push
mov
pushf
aam
repz
push
lods
pop
popa
and
push
inc
push
dec
hlt
ret
test
and
mov
mov
mov
call
loopne
xor
push
mov
fwait
iret
lret
incb
aas
js
adc
pop
hlt
lcall
insb
push
mov
xchg
int3
xor
push
sbb
push
int
mov
adc
lcall
sub
insb
popa
xor
mov
add
jmp
jno
popf
xchg
cmp
lret
adc
adc
push
inc
xor
pop
dec
add
je
les
push
xor
pushl
adc
xor
inc
adc
lcall
out
inc
mov
fcomps
in
jecxz
insb
jns
inc
sbb
pushl
xchg
mov
pop
repz
fadds
lods
add
cmp
movb
mov
stos
repz
pushl
and
mov
xorb
sbb
sarl
xchg
leave
shrl
jae
test
scas
lock
fdiv
stos
sti
inc
xlat
push
loope
cmp
xchg
dec
sarl
fs
xchg
adc
adc
sbb
add
and
sbb
mov
pop
call
loopne
sbb
fucomi
push
test
data16
repz
mov
lcall
lcall
pop
sbb
mov
fucomp
xor
mov
xchg
mov
sub
xchg
out
cli
pop
loopne
incl
outsb
lea
mov
add
sub
ror
add
out
fsubrs
xchg
push
cmp
frndint
insl
dec
xor
scas
inc
or
adc
mov
mov
push
pop
roll
sub
mov
cs
xchg
or
in
adc
xor
sub
or
aad
pop
sar
jae
nop
movsb
xchg
push
outsb
add
adc
ss
jg
xchg
push
gs
cmp
mov
add
and
lcall
lcall
adc
test
mov
pop
fisubrs
outsl
or
std
cmp
das
add
xchg
push
test
imul
and
mov
xchg
mov
popf
aam
push
clc
cmp
addr16
mov
aad
in
mov
test
jo
xor
adc
jo
sub
ja
enter
mov
lcall
loope
mov
test
mov
mov
aas
jbe
das
jecxz
sti
or
rclb
sbb
jns
adc
lods
mov
pop
inc
test
jo
dec
sbb
lcall
clc
jns
or
negl
movsb
pop
ficoml
enter
sbb
std
mov
push
lods
and
loope
popf
mov
mov
push
shrl
cmp
stos
ljmp
sti
sarb
dec
inc
dec
mov
adc
cmp
sbb
psubb
js
negb
decl
pop
push
jmp
cmp
and
sti
push
hlt
jmp
cmp
mov
xchg
cmp
stos
stos
clc
testb
bound
pop
or
cs
xor
inc
push
ljmp
inc
test
dec
pop
lock
adc
cs
repz
cltd
and
pop
jle
push
repnz
inc
call
add
fwait
push
gs
sti
xor
lcall
das
sub
and
mov
cmp
jns
pop
sti
jp
int
pop
sbb
scas
fdiv
test
stc
cmp
ja
mov
test
push
pop
inc
scas
fdivp
sarb
xchg
data16
push
cmc
adc
xor
fdivs
jg
aas
cmp
jmp
lret
push
sub
inc
push
or
hlt
xor
call
sub
cmp
inc
outsl
inc
jmp
and
inc
test
sub
jle
cmp
inc
or
mov
mov
in
jne
inc
jp
mov
add
test
pusha
call
dec
and
roll
pop
add
rcr
cmpsl
cmc
sbbb
pop
insb
hlt
ficompl
mov
push
lret
movsl
mov
out
inc
mov
jno
fsubp
rol
outsl
mov
push
mov
xor
in
and
sbb
sub
jbe
mov
loopne
ljmp
aam
add
mov
jp
xchg
imul
mov
adc
loop
push
popf
push
jae
test
cmpsb
add
rcr
js
mov
ja
out
jl
sbb
push
roll
shlb
decl
sbb
test
aam
inc
or
aas
mov
shl
outsl
jp
pop
hlt
cli
dec
sahf
mov
fldenv
shlb
jecxz
insb
in
mov
jno
pusha
sub
jmp
push
mov
js
mov
fildll
aam
adc
cmp
inc
xchg
mov
mov
lcall
sub
test
cld
loop
mov
loope
mov
jbe
cmpsl
mov
sbb
lcall
leave
sub
ja
jbe
rcl
in
mov
ja
or
mov
xor
call
mov
mov
jnp
adc
push
adc
xchg
scas
dec
mov
ret
clc
jg
lcall
shlb
jecxz
cmp
push
popa
mov
in
fcoml
and
jle
cmp
movd
jb
pusha
mov
scas
fsubp
pop
rcr
fldt
ja
push
sub
jecxz,pt
dec
nop
aas
scas
pop
mov
stos
in
pop
xchg
and
loop
lret
ret
shr
in
mov
cli
je
insl
xor
adc
aas
movsb
mov
leave
sarl
and
mov
jg
cmp
cltd
mov
mov
das
enter
scas
mov
incl
repnz
cmp
mov
adc
outsl
adc
sub
inc
shl
mov
je
jle
icebp
pop
xor
fiadds
test
std
decl
mov
out
in
hlt
pop
mov
mov
sahf
pushf
dec
shlb
xchg
xchg
and
lcall
adc
push
lods
shll
sub
ljmp
data16
nop
in
and
mov
popf
cmpsb
repz
repnz
enter
push
hlt
pop
inc
sub
mov
jp
sti
jge
pop
decl
mov
jg
fdivrl
into
jae
mov
and
dec
xor
scas
xchg
cmp
mov
aas
or
movsl
lods
sub
mov
cmc
jmp
mov
pop
icebp
pop
cmp
sub
inc
add
push
std
mov
lods
stos
lock
loop
shl
test
pop
push
test
lcall
jg
stos
xchg
and
xchg
in
cmp
mov
adcl
pop
mov
fiadds
xchg
scas
ret
fnstcw
cld
enter
ja
out
pop
dec
sbb
addr16
aas
cmp
xor
loope
incl
sub
ja
push
dec
int3
hlt
arpl
jno
mov
xchg
in
loopne,pt
out
inc
or
xchg
adc
incl
dec
and
and
int3
push
rcr
orb
lahf
insl
sub
jle
fdivrs
pushl
bound
xchg
xchg
jge
test
pop
xor
data16
ja
add
sbb
mov
pop
mov
pop
subl
lcall
sbb
xlat
lret
mov
insl
jbe
je
jecxz
cs
sub
push
pop
xor
cld
ljmp
leave
adc
adc
pop
pushf
dec
add
sarb
pop
inc
sub
fidivs
jg
push
cli
mov
rclb
loop
mov
pop
push
addr16
incl
fldenv
fs
jp
push
lahf
sub
pop
movsb
movsb
daa
adc
adc
ljmp
inc
mov
insb
lret
call
inc
aas
aam
movsb
mov
stos
jle
xchg
call
rolb
or
sbb
outsb
xchg
xor
pushf
and
jp
int
xchg
shll
mov
mov
push
enter
fs
mov
pop
xor
les
or
push
aad
in
call
push
outsb
icebp
xchg
and
xor
mov
leave
int
mov
mov
adc
xchg
jle
mov
sbb
rolb
aas
jno
adcb
leave
jl
adc
lock
jae
pusha
xchg
pop
mov
mov
sub
std
incl
enter
scas
xor
ficompl
ret
cmpl
lahf
push
lret
pop
icebp
aaa
mov
fcmovb
test
mov
mov
fstpl
arpl
fdivrp
decl
push
push
stos
stos
jno
enter
xorb
xor
or
fucomi
mov
or
jnp
in
inc
jno
or
pushl
cs
popf
jno
out
mov
add
and
or
xchg
clc
push
mov
decl
push
test
adc
sub
and
mov
jne
outsb
lcall
rorb
out
and
aas
test
iret
test
pusha
sub
lock
call
lods
pusha
jb
push
mov
xchg
rcrb
sub
les
fcomps
out
cli
aad
cwtl
clc
inc
shll
mov
jg
mov
pop
jnp
fwait
push
pop
cmpsb
xchg
ficomps
mov
adc
push
mov
xor
sar
cmpsb
adc
jl
pop
sbb
sbb
xor
cld
ljmp
cmp
stos
mov
push
icebp
fcompl
lea
mov
jb
jg
and
adc
sub
mov
jmp
loopne
stos
into
outsb
stos
lcall
loope
aad
fidivrl
pop
outsb
outsb
push
data16
xorb
fidivs
mov
push
lret
dec
jmp
inc
out
xchg
or
inc
mov
mov
call
aad
shrb
cs
lock
mov
mov
jmp
imul
mov
adc
outsl
cmp
bound
cld
pop
cmc
jp
jmp
lock
enter
cs
adc
mov
or
arpl
data16
lcall
jmp
sbb
ret
xchg
mov
mov
cmp
xchg
lcall
sbb
push
in
pop
mov
out
fmul
lods
jecxz
jl
into
inc
xchg
int
inc
incl
dec
roll
test
adc
inc
pop
movsb
mov
mov
mov
cmc
fwait
inc
jecxz
xchg
bound
mov
and
imul
jmp
xchg
pop
lock
sub
lret
mov
lea
dec
mov
mov
add
addb
subl
mov
leave
mov
push
or
xchg
push
fs
sub
nopl
push
xchg
mov
pushf
pop
xor
mov
mov
lods
xor
mov
xchg
in
fadd
or
fdivs
mov
aaa
fcmovb
out
data16
cmp
or
sub
mov
fstl
aas
rclb
cmp
popa
push
fcomps
fs
jecxz
clc
shl
pop
sti
mov
pop
lcall
call
xchg
stos
ja
add
dec
mov
xorb
daa
push
ljmp
or
in
das
push
push
scas
int
in
cmp
into
adc
jg
add
enter
mov
icebp
call
sbb
aas
es
add
mov
jo
cmp
add
xchg
call
jle
decl
xchg
add
lods
xchg
repz
das
bound
push
cs
mov
mov
dec
pop
adc
ss
daa
data16
maskmovq
notl
cmp
mov
adc
ret
lods
loop
sbb
pop
popf
repz
add
test
aam
lahf
das
lret
cmp
xor
mov
test
cmp
mov
addb
xchg
popf
sbb
cmpl
iret
dec
int
in
mov
std
add
pushf
std
decl
sub
push
shrb
ret
aad
jmp
mul
xchg
mov
nop
xchg
outsl
call
fs
daa
jae
stos
xor
adc
andb
lock
pushl
popa
mov
adc
pusha
loope
movsb
outsl
mov
aaa
clc
lret
outsb
cmpsb
into
add
out
popa
add
ljmp
push
adc
mov
push
or
mov
sbb
mov
mov
stc
dec
hlt
lods
cs
xchg
pop
les
inc
out
mov
ljmp
push
jge
icebp
mov
adc
or
xchg
pop
jle
mov
stos
push
decb
add
xor
mov
cmp
and
inc
and
jecxz
jmp
mov
cmp
scas
dec
nop
mov
mov
fsubl
and
push
cmp
mov
out
fdiv
adc
pop
push
jbe
add
or
pop
jo
je
ljmp
testb
fidivrl
mov
lods
pop
lcall
or
in
and
shr
test
outsb
pop
or
incl
pop
xchg
fidivrl
sahf
loopne
inc
imul
sub
cltd
enter
inc
repz
mov
inc
fsts
mov
out
dec
les
mov
mov
xchg
add
push
jns
pushl
pop
out
pusha
rcll
insl
fisubl
rorb
jg
lcall
dec
xchg
and
arpl
mov
decl
cmp
test
out
sbb
das
mov
and
pushf
pop
ds
sub
xchg
jecxz
pushl
das
sub
sub
push
fucomi
mov
rcrb
xor
or
mov
mov
mov
xor
adc
cli
out
gs
or
rolb
cli
pushl
push
mov
sahf
mov
sbb
loopne
push
ljmp
xchg
das
cmp
mov
mov
shll
call
add
pushl
ja
outsb
sub
mov
out
adc
inc
in
daa
test
leave
jo
scas
jp
decl
test
addl
mov
push
out
stc
loope
sar
fistps
imul
fcmovu
jmp
daa
cmp
push
push
std
in
loop
movsl
or
add
push
lret
or
xchg
xchg
outsb
mov
test
jg
push
mov
movsb
rolb
iret
gs
in
gs
jne
dec
cmpsb
inc
outsb
mov
std
call
mov
fisubs
mov
movntps
bnd
das
and
dec
pushf
adc
pop
lock
repnz
push
test
fcoml
lods
pop
ret
rolb
dec
sti
lahf
push
decl
insl
aad
repz
push
andb
dec
cld
jp
out
jle
mov
pop
jge
xchg
clc
fs
das
neg
xchg
inc
pop
mov
and
mov
aam
xor
cs
or
xor
cli
pop
bound
sub
outsb
inc
icebp
xor
incl
jmp
clc
std
mov
fcompl
pop
aaa
inc
and
call
call
movsl
xlat
aas
jl
rcll
test
push
mov
mov
ja
lock
call
add
push
xchg
mov
scas
mov
aas
jg
into
jl
mov
xchg
lock
decl
inc
adcl
enter
ja
rcrb
lods
dec
fmull
pop
sub
jp
and
lds
sub
xchg
decl
jb
in
xlat
sti
mov
inc
sbb
int3
mov
bound
stc
call
inc
lods
jge
insb
jl
rcrl
xor
sub
dec
adc
or
lcall
je
dec
mov
int3
add
dec
or
sahf
xchg
mov
mov
jo
call
sub
and
xor
ja
sbbb
leave
out
test
lret
jg
outsl
mov
ja
ljmp
aas
out
jg
mov
test
push
lahf
nop
mov
jmp
push
fadds
jmp
push
cmpsb
jno
dec
add
push
ret
imul
cmp
xchg
hlt
cmp
lock
push
xchg
lods
hlt
ljmp
and
inc
das
stos
adc
and
daa
push
push
fucomp
cmc
ret
lods
mov
call
mov
test
jo
sbb
movsb
repz
js
sbb
pusha
xor
mov
test
adc
sbb
or
mov
ret
movsb
in
jecxz
decl
nop
or
xchg
cmp
xchg
inc
movsb
and
imul
lcall
sbb
xor
repz
add
icebp
loopne
icebp
outsl
cli
dec
mov
sub
sbb
dec
lcall
incl
jae
sahf
inc
add
rclb
dec
and
push
sar
ret
call
cwtl
mov
mov
ja
ret
js
cld
mov
or
pop
loopne
sub
push
sbb
dec
adc
jg
mov
test
icebp
ja
ret
add
ret
loop
pushl
fnstenv
mov
mov
pop
lret
mov
dec
jns
rolb
mov
and
xchg
dec
jg
lcall
jge
or
movsb
fsub
in
mov
aaa
scas
mov
mov
loop
adc
mov
out
jg
jnp
stos
ja
adc
xchg
add
mov
mov
and
dec
sahf
push
push
and
xor
in
push
sbb
mov
mov
stos
mov
jmp
sbb
lea
sbb
inc
inc
xchg
lea
pop
insb
lcall
inc
repz
gs
repnz
mov
adcb
mov
packuswb
decl
sahf
enter
mov
mov
xor
fimuls
jno
and
jno
push
mov
iret
or
stos
dec
outsb
or
fwait
mov
push
outsb
xchg
test
mov
sub
or
add
add
lcall
jne
pop
inc
push
cmp
cmpsb
ss
incl
cmp
cs
adc
popf
int
sbb
ret
pop
inc
mov
loope
xchg
jns
in
shll
mov
xchg
mov
test
lods
push
incl
dec
pop
cmp
push
aaa
mov
pop
xchg
popa
push
jae
imul
incl
loope
fwait
mov
notl
adc
xchg
test
pushl
pop
pop
and
and
movsl
dec
jle
pop
cmp
sarb
push
insb
ret
mov
pop
add
das
sar
mov
mov
mov
jns
arpl
push
pop
out
shlb
rcll
inc
mov
out
push
push
jp
fucom
xor
pop
mov
or
aad
icebp
stos
jae
or
mov
push
subb
pop
inc
rclb
pop
lock
push
sub
js
pop
aad
mov
mov
jg
push
mov
or
std
push
cmc
jmp
xchg
int
add
fsubs
add
movsb
das
cmpsb
or
movsl
in
popa
and
jl
or
rol
mov
ljmp
add
dec
xor
jl
jle
dec
out
in
pop
mov
mov
push
cmp
std
incl
mov
add
jg
pop
jo
push
or
mov
inc
nop
xchg
adc
call
leave
jmp
xchg
sub
jbe
out
inc
or
and
mov
loope
sbb
int3
mov
sbb
fs
jmp
jp
mov
clc
jne
push
sahf
popf
pop
repz
gs
pop
dec
lods
dec
loop
sub
ljmp
xchg
das
or
mov
cmpsl
pop
loop
mov
xlat
cmp
pushf
cmpb
leave
insb
pop
jbe
jmp
lcall
cmc
std
pop
stos
je
inc
and
cmovl
sub
jmp
jg
mov
inc
jmp
stos
mov
or
not
mov
jp
iret
call
pop
jbe
jae
es
cmp
dec
sahf
fcomi
mov
dec
jb
xchg
sbb
xor
mov
incl
mov
cmp
es
add
mov
outsl
push
cmp
daa
adc
gs
je
enter
sbb
dec
inc
adc
xlat
lock
and
loopne
arpl
insl
lcall
sbb
js
test
jae
inc
add
hlt
decl
enter
xchg
sub
std
or
pop
or
lcall
add
call
adc
pop
popf
hlt
cwtl
or
or
fistps
mov
fdivrp
daa
mov
int3
fnstsw
mov
outsb
add
jmp
mov
sub
jecxz
xchg
or
fs
repnz
out
mov
rolb
lret
pop
test
jmp
cmp
jl
inc
rcll
lret
cmpl
inc
shl
out
mov
call
je
bound
andl
sbb
lret
cs
push
ret
les
aaa
add
xchg
aam
arpl
stc
stos
aaa
or
push
adc
xlat
pop
add
cwtl
xchg
sti
mov
pop
shl
dec
pop
jle
cmp
xchg
push
jns
idivb
loop
sbb
inc
mov
xor
incl
stc
jo
mov
pop
inc
loopne
or
je
loope
jge,pn
sub
pop
insl
std
xorb
call
mov
xchg
movsl
jno
int
test
ljmp
pushl
fwait
int
fnsave
gs
inc
sbb
movsb
rcrl
mov
cmpl
jmp
mov
jnp
orb
mov
dec
clc
pop
outsl
push
ljmp
cmp
xor
jecxz
pop
test
je
repnz
or
jl
inc
push
mov
mov
sub
mov
push
mov
lcall
sbb
out
add
shlb
adc
mov
add
sub
sub
add
pop
cmpsb
scas
mov
pop
pop
sbb
or
dec
call
push
repz
pop
jecxz
xor
cld
push
enter
dec
nop
andl
test
cmpsb
insl
ret
shl
add
mov
jle
push
xor
xchg
pop
xor
imul
jb
ret
pop
popa
sbb
xchg
lahf
and
loope
nop
lock
pop
mov
push
cmp
mov
jmp
aaa
decb
enter
xchg
push
ds
cmp
jmp
inc
mov
aaa
imul
and
mov
add
js
mov
decl
mov
mov
cmp
loopne
jmp
sar
mov
leave
movsb
fisttps
in
push
push
in
mov
cmp
jg
incl
dec
mov
xchg
stos
and
jp
das
xlat
lahf
mov
cmp
lcall
xor
pop
and
jbe
mov
xor
push
cmp
adc
jne,pn
xchg
sar
pushl
xor
mov
jae
add
cmpb
pop
mov
add
dec
xchg
je
pop
sub
mov
movsl
hlt
aas
test
dec
push
pushf
std
js
pop
stc
lcall
jno
rcrl
fmull
inc
sub
call
mov
jp
mov
inc
xchg
leave
jne
mov
or
dec
xchg
dec
dec
leave
and
add
xchg
push
push
xchg
lahf
cmp
cwtl
aad
add
andb
push
leave
enter
fcomip
lcall
pop
mov
adc
push
mov
add
cmp
mov
stos
cmpsl
cmp
out
jmp
push
sub
cltd
movsb
jnp
int3
xchg
mov
cmp
dec
fwait
adc
lcall
outsl
movsl
sti
fstpt
fdivrs
sti
lcall
sbb
mov
jg
incl
mov
popa
inc
hlt
jge
push
js
je
imul
mov
cs
jge
inc
repnz
mov
sbb
fistps
cltd
shl
in
scas
clc
add
push
push
fdivs
xor
xchg
mov
adc
mov
in
loop
push
cs
adc
popf
mov
ss
ljmp
adc
xchg
push
fisubl
xor
lock
cmpsl
fimull
xchg
or
mov
sbb
movsl
jp
repz
mov
pop
cli
mov
out
jmp
fidivl
popf
pop
cmp
lods
inc
pop
push
loope
mov
mov
sub
sub
ret
fstpt
sub
arpl
inc
inc
movsl
sar
in
lcall
mov
xor
adc
fistpl
sub
mov
adc
and
mov
lods
mov
out
divl
push
or
or
push
mov
mov
aaa
push
fsubs
enter
int3
lock
or
maxps
adc
jnp
or
ficoml
jl
je
shlb
pop
divb
data16
loop
cmpsb
adc
scas
sar
lcall
daa
push
daa
sahf
fcompl
adc
xor
push
fwait
cs
je
mov
in
add
xchg
pop
test
ficompl
mov
bound
insb
sub
test
mov
das
in
sub
push
adc
adc
cld
int
into
sub
and
dec
pop
mov
pop
jb
cmp
jg
lods
ds
pop
aaa
adc
pop
adc
mov
dec
sub
and
cld
out
int3
ret
cmp
cltd
sbb
sub
pop
sbb
fdivl
enter
pop
xchg
scas
cmp
pop
push
shl
decl
lock
ret
scas
sahf
imul
cltd
popa
pop
xor
arpl
pop
nop
call
push
loop
jb
mov
stos
push
lret
sub
movsb
cli
shlb
jae
cmp
inc
push
add
mov
pop
inc
mov
sub
out
pop
and
xor
inc
enter
add
js
mov
dec
xchg
scas
ret
mov
mov
pop
mov
nop
pop
jmp
fldcw
js
xchg
into
jg
and
dec
test
adc
mov
lods
hlt
cmp
xor
mov
cmovns
inc
cmp
or
xchg
addr16
cmp
mov
push
ret
adc
and
sbb
sar
ja
ljmp
icebp
pushl
mov
test
aaa
mov
xchg
or
pushl
mov
rcrb
out
int3
aam
jmp
in
call
mov
test
shrl
fdivrl
push
loopne
pop
sub
jae
imull
pop
stos
das
outsl
aad
pop
in
jl
adc
fildll
pop
cmp
leave
ret
or
imul
scas
lcall
lds
sahf
ja
or
jl
add
xchg
mov
call
adc
sarb
jno
scas
lock
mov
jle
ljmp
cld
cltd
xchg
sbb
test
push
jle
mov
mov
imul
movsl
cmp
mov
push
ficompl
mov
in
lahf
xor
dec
incl
jle
stos
or
clc
popf
xor
xor
mov
inc
aas
inc
jmp
leave
xchg
add
gs
call
dec
add
mov
mov
arpl
loop
scas
insb
cld
xor
push
adc
jmp
adc
xor
je
stos
jns
lret
adc
pop
loopne
sub
lret
push
inc
imul
adc
repnz
inc
notl
dec
insb
jbe
ljmp
add
adc
mov
mov
in
sqrtps
pushl
lahf
aad
dec
xor
sbb
xchg
jle
ret
sub
mov
xchg
popa
out
cmpsb
pop
jbe
dec
sbb
mov
pop
mov
lret
fbstp
jl
lcall
movsl
push
movsl
lock
hlt
push
test
das
pushf
push
bnd
or
in
push
xor
lahf
icebp
incl
and
push
mov
mov
dec
mov
outsb
cmc
shl
xchg
push
xchg
cmp
mov
imulb
jmp
testl
pop
jle
fwait
push
cmp
jo
add
pop
jle
ja
lcall
xor
push
cmp
inc
jmp
stos
rcr
mov
imul
decl
inc
add
cmpsl
push
mov
push
sub
pop
nop
sub
in
out
jge
adc
mov
pop
cmp
dec
mov
jmp
nop
xlat
push
add
xor
rcrl
xor
and
popf
mov
xchg
push
cmp
xchg
aam
shr
push
mov
call
test
push
sbb
lret
jg
lahf
out
fldcw
pop
cld
popf
mov
and
mov
pushl
inc
cltd
out
cmp
shr
inc
hlt
xor
push
call
testb
scas
fsubrs
pop
outsb
lods
xor
out
adc
or
mov
mov
or
out
std
or
cmp
movsl
mov
mov
sub
enter
clc
decl
push
mov
mov
fildl
gs
mov
imul
call
pop
lods
in
adc
xor
call
mov
fldenv
aam
push
lret
add
adc
incl
das
sub
mov
es
xchg
dec
test
inc
movsb
in
cld
xchg
jg
repnz
xor
inc
mov
fsubp
mov
sti
inc
xor
push
bnd
inc
stos
pushf
sbb
add
mov
xchg
mov
lret
cmpsb
in
pusha
call
add
mov
xchg
jo
fs
fildll
aaa
hlt
es
sti
imul
popf
xchg
std
dec
lods
jae
jecxz
mov
fiadds
nop
pop
pop
mov
pop
repnz
sti
je
push
cltd
call
sbb
mov
pop
imul
cmp
sbb
mov
lahf
rolb
jmp
mov
adc
test
in
sti
jnp
jb
mov
inc
pop
hlt
int3
xchg
dec
or
test
insl
dec
out
clc
call
adc
xchg
sub
or
sub
adc
jne
lcall
sbb
cmp
mov
adc
sbb
pusha
frstor
cmp
mov
scas
sbb
stos
inc
in
out
xor
xor
scas
into
mov
fwait
sti
dec
cmp
and
or
incl
lahf
mov
cs
in
orl
loopne
push
mov
test
ret
nop
addl
pushl
ret
jecxz
lret
inc
int3
mov
sub
jmp
test
in
xor
or
clc
push
cmpsb
or
test
arpl
ljmp
lcall
push
dec
sbb
cwtl
into
pop
icebp
xor
xchg
lret
or
cmpsl
out
stc
dec
xor
loope
incl
aaa
jmp
mov
sti
hlt
mov
and
mov
jmp
and
dec
or
ljmp
cmc
jne
xchg
and
popf
mov
fistpll
lds
fs
inc
int3
cmpsl
sti
jmp
mov
jmp
mov
fistpll
xorl
mov
or
dec
mov
or
cltd
call
xchg
jp
stos
stos
fistpl
mov
adc
mov
fistps
int
scas
stos
mov
pop
mov
adcb
push
and
incl
inc
das
mov
cmpsb
xchg
sbb
adc
lds
or
push
scas
cwtl
int
gs
dec
lcall
fdivs
xchg
dec
push
in
notb
inc
out
shrl
rcr
and
mov
pusha
loopne
lcall
sub
xchg
shrl
pusha
in
inc
rolb
jmp
int
ss
decl
loop
dec
loop
and
adc
add
ja
popf
inc
sbb
sbb
int
icebp
ja
mov
outsl
gs
jbe
popa
mov
inc
test
outsl
push
mulb
sub
stos
mov
jmp
fdiv
mov
cmp
daa
pop
adc
xchg
pushf
xor
sbb
das
xchg
push
pusha
ds
adc
xchg
sbb
and
jbe
inc
sub
mov
lcall
xor
andb
add
inc
jmp
fyl2xp1
daa
push
adc
cltd
mov
add
shlb
push
ss
mov
clc
lds
insb
push
mov
push
jmp
pop
inc
test
fmul
call
push
jl
fisubrs
or
xchg
cltd
mov
dec
imul
in
cmp
push
addb
pop
sub
ret
jmp
inc
std
push
gs
push
or
and
or
call
nop
adc
jo
xchg
mov
test
lret
pop
test
xchg
in
add
pop
dec
pop
or
test
sti
jns
nop
pop
aad
dec
push
push
xor
lods
out
dec
push
incb
aas
cs
add
aam
bound
sar
mov
popa
out
insl
sub
fsubr
and
outsb
out
mov
xlat
add
mov
loopne
inc
dec
xchg
outsb
aas
xchg
jle
lret
ljmp
push
test
hlt
in
loop
pop
xor
loop
ljmp
dec
pop
es
inc
stos
mov
jb
sbb
mov
sbb
dec
shrl
push
pop
pusha
ret
stos
out
and
cmp
dec
adc
and
mov
and
mov
pop
pusha
shrl
sbb
cli
mov
jno
sbb
das
cli
call
sub
fs
cli
sbb
aas
xlat
iret
sbb
adc
xchg
ja
cli
decl
outsl
lods
int
cmp
pop
ror
orl
loope
pop
mov
pushf
mov
mov
sbb
imul
sti
jg
pop
pop
lcall
bound
cmp
addr16
je
sub
jbe
aaa
dec
shlb
xchg
gs
inc
test
push
mov
jne
pop
movsl
lds
hlt
lcall
xorb
mov
jp
pop
push
push
mov
push
inc
fcomps
popf
add
sub
mov
cmp
add
incl
mov
mov
pushf
adc
and
lds
call
repz
bound
insl
mov
shll
and
sarl
adc
jg
pushl
int
rcrl
and
in
pusha
mov
fidivs
pop
fnstsw
dec
in
jne
lcall
add
mov
add
lea
out
cwtl
mov
sbb
popf
add
mov
ds
adc
dec
fsubrl
pushl
ret
lret
adc
add
cltd
imul
add
jno
push
add
call
sbb
jo
test
outsb
push
and
jae
data16
sbb
jge
ret
ret
jmp
outsb
out
aaa
mov
leave
fstp
xor
and
mov
jo
add
pop
or
dec
sarl
fsubrs
and
repnz
push
mov
nop
cli
incl
int
mov
sub
fisubrs
dec
mov
addl
cmp
pop
pop
ljmp
enter
adc
xchg
adc
sbb
cmp
inc
dec
inc
repz
or
out
jg
or
insb
sbb
pop
dec
mov
ficompl
pop
iret
roll
mov
sub
xchg
js
dec
hlt
push
inc
fs
subl
add
adc
mov
cltd
xor
fdiv
repnz
insl
adc
mov
xchg
lock
fsubs
jns
lret
out
or
cmpsl
pushl
ds
loop
gs
lods
loopne
ja
inc
fimull
mov
inc
decl
mov
ljmp
jl
sub
xchg
jecxz
insl
cmp
incl
cld
stos
dec
jmp
in
ds
cmc
adc
mov
incl
cld
inc
push
iret
out
cmp
scas
jo
sarb
lods
pushf
xchg
xor
pop
or
aam
cmp
sbb
aaa
aam
xchg
les
push
cs
jge
sbb
stos
jmp
fwait
rcrb
jnp
stos
cmpsl
jbe
or
loope
call
adc
jp
cmpsb
scas
out
jo
cmpsl
rcrb
je
pop
push
xorb
push
iret
pop
sbb
push
add
gs
gs
push
mov
and
inc
sahf
jae
leave
cmp
sbb
js
mov
mov
dec
cld
and
mov
decl
mov
cmp
or
add
mov
leave
insl
xchg
stc
lret
mov
decb
mov
dec
cmp
or
mov
int
xor
es
push
fldpi
loope
pop
rcll
loopne
sti
imul
dec
pop
adc
fildl
push
add
mov
frstor
dec
cmp
fcoms
mov
inc
xor
das
push
mov
jnp
xchg
pop
test
cwtl
sub
push
mov
xchg
push
out
in
rcrb
and
incl
jecxz
fcmovne
mov
orb
movsb
insb
scas
mov
mov
jne
les
call
shl
add
sbb
push
sarl
mov
push
int
lock
mov
ljmp
push
call
adcl
sbb
pop
outsl
repnz
dec
lea
test
das
shrb
jp
imul
dec
rol
lcall
out
xor
iret
sbb
sbb
mov
dec
insb
sub
ds
roll
sar
out
push
mov
repz
cmp
push
dec
sbb
mov
sub
nop
test
jge
and
pop
dec
add
clc
adc
out
adc
adc
and
add
call
std
dec
cmp
sbb
insb
xchg
popl
cmpsb
aas
neg
xor
xchg
ljmp
mov
sub
lods
dec
test
std
add
shrl
and
decl
mov
xor
push
outsl
mov
fdecstp
pop
aad
incl
ret
push
mov
sub
cmp
in
fldenv
xor
pop
out
inc
mov
lahf
in
shr
cmpsb
shl
or
addr16
adc
cmp
outsl
xor
and
subb
rcrl
jns
xor
call
lods
pop
and
icebp
or
lahf
or
fdivs
mov
sbb
mov
aas
mov
add
imul
and
jae
enterw
out
clc
imul
mov
dec
and
negb
loopne
stc
jno
inc
jo
decl
insb
test
jbe
int3
add
mov
push
mov
cmc
rcl
or
repz
decl
jge
mov
mov
cld
adc
ret
push
and
push
popf
lcall
cltd
or
mov
out
movsl
je
insb
xor
bound
loop
cmp
pusha
out
aas
dec
xchg
or
insb
and
jae
incl
mov
or
jo
pop
push
fwait
xor
aaa
jge
decl
hlt
sti
aam
das
out
arpl
mov
ret
push
test
sub
aas
adc
or
lcall
sub
pop
jg
bound
clc
icebp
mov
xor
mov
sub
sub
iret
in
push
arpl
in
hlt
stc
imul
fwait
push
mov
pushf
call
mov
movsb
stc
mov
int
pop
adc
jnp
fisttps
add
daa
dec
out
clc
ds
enter
lea
pop
loope
outsb
xchg
mov
scas
push
test
lods
imul
push
add
imul
dec
xlat
lcall
outsl
fwait
push
pop
jle
mov
mov
jo
pop
jns
paddq
insb
rol
jg
mov
mov
or
outsl
jo
pushl
cli
mov
xlat
out
add
mov
sbb
and
js
fildll
pop
mov
andps
sub
sub
cltd
push
decl
cmp
push
cmp
das
sarl
pop
dec
push
cwtl
call
in
pop
negl
jg
dec
into
cltd
cmp
push
imul
xchg
mov
lret
mov
mov
rolb
add
sar
or
clc
pop
scas
out
stos
push
int3
xchg
xchg
sbb
repnz
je
leave
mov
jmp
push
stos
xchg
and
into
xchg
mov
inc
ss
push
insl
jno
jnp
cmp
stos
and
pop
mov
les
incl
daa
outsb
cltd
neg
mov
xor
inc
in
scas
fmuls
adc
repz
mov
push
pcmpgtb
jns
shlb
in
mov
aam
inc
in
ss
fcomip
ret
popa
outsb
dec
dec
cmp
mov
xchg
ljmp
pop
rorb
test
outsl
mov
daa
cmp
aaa
mov
inc
loope
xor
pop
enter
das
lods
std
or
jl
aas
sub
or
frstor
out
inc
aas
mov
ljmp
mov
inc
out
add
daa
fstl
fisubs
pop
xchg
aaa
iret
lcall
fistpll
out
es
sub
movsb
cmpsb
loop
arpl
cltd
mov
push
push
lds
cli
pop
pop
jp
xor
mov
lahf
push
sub
add
ljmp
insl
inc
mov
sbb
and
inc
jl
inc
push
aad
test
mov
jp,pn
push
mov
add
jg
cmp
add
fistl
sti
scas
fs
xchg
and
dec
ret
pushl
xor
sbb
cmp
aas
push
inc
inc
jmp
xchg
ljmp
jg
fnsave
divb
sbb
gs
or
mov
call
ret
mov
rcrl
clc
add
icebp
decl
and
cmp
and
push
mov
scas
sbbl
stc
scas
inc
mov
cmpsl
cmp
cwtl
mov
sub
adc
lods
es
push
pop
das
xchg
dec
loope
mov
dec
fstpl
int
inc
out
sar
cmp
xchg
mov
pop
or
popa
cmc
jbe
mov
add
repnz
ljmp
mov
inc
dec
pop
imul
stos
jbe
ljmp
leave
popa
jmp
cmpb
pop
sub
incl
mov
jo
stos
ja
jns
inc
add
mov
dec
add
clc
mov
test
test
ret
ficompl
or
sub
ljmp
imul
dec
clc
sbb
andl
pop
mov
rcl
and
and
push
jmp
xchg
sbb
sbb
insb
orb
icebp
dec
pop
testb
jmp
pop
mov
shl
add
lcall
fwait
test
mov
rolb
pop
jl
push
fimuls
sbb
push
mov
jbe
pop
in
push
cmpsl
jle
sub
pushl
mov
add
add
lahf
mov
push
push
xor
in
psubusb
cmp
leave
nop
fldl
mov
jle
scas
mov
incl
sbb
js
sarl
test
movsb
imulb
fisubrl
fdivp
test
decl
adc
xor
int
lret
mov
call
cld
pusha
flds
cmpsl
ret
mov
adc
insb
ja
pop
jne
int
xchg
push
or
mov
incl
dec
dec
adc
stc
std
mov
popa
js
call
pop
lea
push
int3
or
clc
sbb
sbb
sbb
out
cwtl
lock
incl
xchg
push
mov
int
mov
lret
push
call
jg
fcmovnbe
data16
xchg
jle
mov
lret
in
mov
rcrb
lcall
cld
mov
pop
sarb
xchg
es
sbb
add
stos
xor
shll
cmp
sbb
jl
lcall
mov
inc
sti
addr16
push
jp
mov
scas
and
ds
jmp
or
incl
push
inc
adc
mov
shl
pushf
fnstenv
push
cwtl
in
ljmp
movsl
xchg
pop
sub
or
push
stos
scas
mov
mov
test
out
dec
in
shr
mov
jp
in
notb
fcompl
mov
pop
jecxz
cltd
mov
loope
inc
mov
hlt
inc
lcall
pusha
sub
cmpsl
ds
repnz
daa
repnz
jle
and
hlt
loop
movsl
lcall
outsl
aas
xor
or
iret
cmp
pop
pop
cmc
incl
sbb
sbb
mov
xor
addl
dec
shr
xor
pushl
pop
cmpsb
inc
xlat
mov
cmpsb
jp
mov
pop
inc
sub
cmpsl
out
in
xor
xor
mov
adc
and
sub
mov
push
lock
add
call
cmp
pusha
rorl
mov
adc
jmp
dec
xor
adc
pmaxub
js
push
hlt
push
lods
insb
rorl
push
addb
dec
cmp
cmp
pushl
mov
imulb
mov
ds
aas
sbb
pushf
addr16
xchg
sbb
jg
ljmp
adc
and
stos
fldenv
dec
sahf
push
sbb
js
and
clc
mov
in
cs
jg
cmp
jns
push
mov
int
fidivs
stc
dec
jne
pop
mov
sbb
fdivp
cmp
pop
ljmp
ss
pop
shlb
mov
pushl
mov
xchg
ret
pop
xorl
sti
push
pop
push
inc
in
cmp
or
dec
add
fwait
xorb
dec
mov
in
xor
das
arpl
lcall
add
dec
bound
ret
stos
cmp
and
push
ljmp
adc
or
mov
inc
cmp
add
adc
inc
mov
or
out
mov
syscall
clc
arpl
mov
push
xor
into
imul
dec
scas
jge
mov
in
cmp
ljmp
mov
loope
inc
jnp
test
icebp
add
push
or
jae
cmp
cmp
or
ds
xchg
imul
dec
lea
call
mov
cmp
data16
sti
xchg
pop
dec
test
cwtl
out
push
dec
cmpsb
les
sbbl
test
cmp
test
cwtl
stc
in
jg
out
push
cmp
pop
enter
adcl
scas
ljmp
jmp
sbb
sbb
imul
movsl
sahf
leave
mov
pop
mov
xor
or
lcall
cmp
icebp
fists
xchg
negb
sbb
cmp
fnstsw
es
ds
cli
loopne
jg
mov
insb
push
dec
outsb
repnz
rcl
xor
decl
jle
sub
inc
mov
jne
mov
pushl
dec
mov
gs
sub
test
mov
fs
dec
ret
inc
dec
movsl
outsl
mov
fldt
pop
push
mov
out
orb
dec
repz
hlt
mov
arpl
dec
icebp
mov
shl
ret
jl
mov
mov
or
ljmp
clc
jmp
nop
arpl
dec
or
mov
mov
xor
fldcw
call
dec
sti
sbb
fs
filds
push
pop
and
lock
mov
ja
leave
and
jle
pushl
push
cmp
or
pop
xor
and
sub
mov
adc
pop
clc
lcall
and
fdivrl
add
in
mov
pushl
addr16
mov
jnp
add
mov
stc
es
xlat
js
ret
jl
stos
jnp
lcall
adc
xchg
adc
adc
popf
jb
in
inc
jle
sbb
mov
mov
mov
dec
aam
outsl
sub
push
fwait
pop
loopne
or
fstps
and
sar
or
out
push
test
and
xor
push
cmp
jmp
mov
arpl
lcall
xchg
and
cmp
pushl
sub
arpl
mov
jae
shrl
stc
ljmp
xor
sub
int
ja
or
mov
cwtl
out
inc
ja
mov
jmp
lcall
add
push
stos
pop
aam
mov
xor
mov
cmp
mov
movsl
and
subl
clc
mov
or
inc
sbb
lods
adc
pop
fdivr
jmp
jmp
enter
in
clc
pop
iret
fdivrl
mov
mov
leave
lock
mov
adc
lret
sbb
pop
imul
pop
pop
addb
test
jmp
jnp
and
in
outsb
adc
mov
les
data16
mov
hlt
push
pop
call
push
lret
push
ret
mov
fisttps
jns
push
push
insl
stos
push
mov
cmc
dec
lahf
xchg
out
lahf
out
dec
pop
mov
cld
ljmp
add
dec
xchg
xchg
mov
rol
pop
or
loope
test
mov
add
inc
inc
push
and
and
add
dec
inc
jl
cmpsl
cmp
add
outsl
jae
dec
popa
outsb
fs
gs
mov
outsl
push
popa
imul
je
jo
dec
bound
arpl
js
lods
fnstcw
push
gs
outsl
dec
inc
imul
pop
fbstp
push
push
test
inc
gs
xor
inc
fisubl
fisttps
daa
dec
push
pusha
sbb
cmp
fbstp
fistpll
jo
push
and
je
inc
jb
arpl
test
insb
push
mov
cmp
popa
cs
arpl
ja
jle
jae
push
dec
outsl
cmp
insb
or
xor
fs
in
mov
jb
aaa
popa
fs
bound
mov
push
imul
addr16
inc
je
pop
ja
divb
xchg
push
jns
dec
insl
push
imul
push
push
mov
mov
inc
imul
gs
imul
sub
bound
gs
adc
adc
sbb
xor
pop
cltd
sub
push
mov
loope
add
push
loopne
addb
and
mov
xor
push
sbb
lret
adc
sbb
jns
push
pop
rorl
and
mov
adc
sti
push
insl
adc
add
ret
sbb
shrb
and
inc
and
rolb
inc
push
stos
or
mov
adc
and
stos
mov
mov
insl
iret
adc
ss
test
and
test
test
in
xor
pop
push
stos
adc
jns
pusha
inc
sub
mov
fadds
addb
and
nop
test
leave
iret
sub
lds
fsts
test
xor
imul
sub
xchg
jb
sbb
outsl
mov
imul
lcall
dec
xor
outsb
jae
hlt
rclb
mov
dec
and
gs
inc
addb
mov
adc
adc
adc
cmp
orl
push
sub
dec
xchg
and
inc
rorl
rclb
sub
add
mov
andb
or
nop
repz
fistl
dec
rolb
les
incl
push
and
mov
fs
adcb
adc
pusha
repz
bound
cmpl
mov
push
andb
mov
mov
test
dec
jmp
xchg
test
mov
adc
inc
arpl
or
add
sbb
scas
inc
fwait
testl
adc
sub
and
adcl
nop
and
lret
mov
cmp
adc
dec
mov
rcr
push
inc
decl
filds
dec
add
add
repz
popl
pop
sti
push
aaa
add
sbb
incb
mov
mov
pop
add
nop/reserved
aas
mov
sti
es
lea
mov
mov
sub
and
add
out
or
je
js
shlb
dec
xor
dec
and
sti
sahf
add
mov
mov
lock
je
mov
jle
cmp
lds
rorb
int
jnp
dec
dec
addb
xor
loope
and
jb
xor
sti
pushf
xchg
add
aaa
dec
inc
gs
mov
and
cmpsb
lock
push
jno
push
mov
dec
jae
dec
pop
or
bound
lcall
push
aas
and
ret
sub
dec
xchg
incl
add
add
add
add
add
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
addb
add
add
add
add
add
add
or
add
add
jo
add
cwtl
add
addb
add
rolb
addb
add
add
addb
add
cmp
add
pusha
add
orb
add
mov
add
mov
add
add
add
add
add
add
add
add
add
mov
add
fcoml
add
pop
add
in
add
add
add
add
add
add
add
mov
add
rcrb
loopne
add
in
add
add
add
add
add
add
add
fadds
add
movsb
popa
aas
add
pop
add
in
add
add
add
add
add
add
add
add
add
mov
add
pop
add
in
add
add
add
add
add
add
add
sub
add
insb
jno
add
pop
add
in
add
add
add
add
add
add
add
push
add
add
aas
add
pop
add
in
add
add
add
add
add
add
add
js
add
xor
aas
add
pop
add
in
add
add
add
add
add
add
add
mov
mov
add
pop
add
in
add
add
add
add
add
add
add
enter
cld
nop
aas
add
pop
add
in
add
add
add
fcom
add
loope
mov
lea
fbld
sbbl
lcall
pop
aaa
stos
xor
scas
jo
or
outsb
cmpsb
push
mov
data16
and
or
popa
sbbl
push
into
mov
sbb
int
jl
push
fcmovbe
pop
sub
mov
pop
sub
dec
iret
dec
repz
sub
inc
pop
daa
aad
lret
push
jg
mov
adcb
jl
sub
pop
ja
ss
in
call
dec
cltd
mov
cmpsl
ds
jnp
jne
cmp
and
nop
dec
dec
inc
std
mov
mov
mov
dec
lds
rorb
sub
inc
jnp
icebp
jle
mov
loop
mov
inc
xchg
xlat
bound
dec
push
stos
push
fmull
es
xor
and
cwtl
cli
cltd
sbb
daa
xlat
push
iret
xchg
mov
scas
stc
cmc
nop
js
cmp
mov
das
icebp
int3
add
dec
adc
xchg
sti
int3
hlt
call
mov
in
adc
pop
jg
pop
mov
cmp
cmp
inc
sub
fstl
inc
or
and
stos
in
bound
mov
mov
xchg
sbb
mov
lds
fwait
xchg
pop
loope
pop
xor
jle
jnp
aam
cld
mov
push
jno
ljmp
add
cmc
ja
cmp
lea
jecxz
pop
mov
mov
fiadds
xor
outsb
jmp
push
in
cmp
fs
sbb
mov
out
shll
das
rorb
dec
and
pop
sub
lods
jno
cmp
xchg
mov
bound
enter
ret
mov
jo
sub
data16
jl
jg
jns
movsl
and
push
icebp
mov
cwtl
mov
sahf
ret
jecxz
subl
fmul
push
sbb
sub
shl
fisttps
enter
movsl
nop
mov
dec
inc
in
add
and
addb
decb
test
xor
and
xchg
dec
mov
std
ficoms
sti
in
mov
imul
pop
cwtl
xchg
mov
sub
add
mov
scas
clc
fists
decb
push
xchg
fbld
mov
inc
lret
jg
lcall
mov
jbe
into
mov
arpl
push
pop
mov
imull
test
pop
lcall
pop
sub
mov
fmulp
inc
push
mov
ds
ret
mov
inc
sbb
cs
aad
fcomps
sbb
pop
mov
lock
adc
add
xlat
fmull
mov
inc
inc
popa
xor
xor
inc
mov
adc
pop
and
mov
xor
int3
inc
sub
into
je
shr
cmp
xchg
cmp
jmp
aam
movsl
push
push
xor
pushf
roll
dec
lcall
jecxz
pop
imul
xchg
jp
jae
jo
push
adc
out
pusha
inc
xchg
push
orl
adc
cmp
test
inc
fistpl
out
ja
sub
xchg
xor
pop
and
inc
or
sahf
and
inc
and
mov
aaa
or
push
cmpsl
mov
into
adc
in
fisttps
rcll
scas
cmp
lret
sub
adc
inc
and
aaa
and
mov
mov
cmp
int
or
js
jnp
aas
mov
xchg
in
inc
cs
sub
lret
sbb
xchg
ds
test
addl
mov
jb
jno
xchg
sahf
sbb
inc
jne
inc
iret
shrb
in
ffree
mov
jnp
inc
mov
hlt
jae
popa
xchg
testb
fnsave
mov
fistps
pmullw
stos
sub
testb
addr16
in
adc
pushf
rolb
mov
or
mov
push
cltd
xor
shr
mov
scas
insb
jecxz
fisttpll
jl
aam
adc
sub
cld
data16
adc
mov
cwtl
cmp
test
gs
rorb
or
dec
mov
in
pop
shll
xor
lods
rcr
mov
insb
xchg
insl
xchg
mov
or
dec
or
stos
lahf
rclb
es
shlb
dec
xor
dec
add
ja
mov
xor
mov
mov
das
popf
mov
adc
pop
test
je
or
cmpb
inc
loopne
pop
cli
and
arpl
jae
jg
int3
pop
mov
lods
into
lret
adc
dec
adc
pop
ss
mov
xor
pop
push
jg
and
enter
cltd
cld
iret
mov
dec
or
and
cmp
or
lock
mov
mov
jle
lahf
push
loop
ficompl
repz
xor
cmpsb
inc
mov
decb
stos
paddd
cld
and
add
xchg
push
dec
adc
shr
sbb
aad
dec
mov
push
das
jg
and
pop
push
dec
enter
das
push
inc
je
ret
inc
lock
cmp
mov
jbe
xorb
inc
popf
scas
xor
mov
int3
lea
pop
add
jbe
xor
dec
out
bound
xchg
shlb
clc
and
xchg
stc
dec
xchg
lods
enter
sbb
pop
out
fs
pop
stc
cmpsl
xchg
subl
push
inc
mov
pop
pop
stos
mov
cwtl
mov
fstl
cmpsb
cmc
jo
sbb
cmp
fildl
jg
jg
test
out
mov
in
stos
dec
sti
icebp
repz
jae
dec
inc
inc
imul
outsb
int3
mov
ds
pop
lock
sub
mov
jbe
sub
jb
cmc
jne
xchg
je
repnz
pop
into
cmpsl
pop
mov
mov
pop
sbb
test
mov
lfs
mov
sub
jmp
mov
cmp
push
sbb
in
lret
pop
cmp
inc
dec
sahf
jo
mov
mov
or
mov
jge
inc
rcll
mov
std
popf
sub
into
mov
jbe
xor
in
mov
out
jno
dec
inc
call
data16
es
mov
xchg
mov
movl
aas
inc
pop
jno
jmp
fdivrs
in
dec
test
sbb
sub
ss
jns
or
jno
jo
jo
sbb
and
cwtl
and
jl
insl
pop
shl
sbb
mov
push
rorb
inc
rorl
pop
push
mov
sahf
jae
test
xchg
mov
jmp
call
es
notb
mov
rcll
hlt
lods
ret
push
in
pusha
cwtl
lds
xorl
setno
je
out
sub
push
sbb
cmp
lods
sub
jns
mov
repnz
ficomps
rorl
adc
orl
cmp
nop
fnsave
cmp
outsl
adc
aas
mov
outsb
jmp
jbe
mov
mov
rorb
roll
sti
xor
mov
pop
ds
or
mov
subb
lret
mov
dec
push
inc
push
push
pop
sub
movsb
adc
mov
das
push
cmp
mov
or
sub
add
movsw
push
adc
imul
push
jge
mov
or
mulb
and
sti
lods
lock
pop
insb
inc
sbb
in
jmp
and
xor
insl
cwtl
and
ret
and
fildll
dec
sub
push
xchg
test
xchg
add
xor
cmp
xchg
ja
lret
or
jmp
add
jo
inc
cmc
xchg
lods
inc
adc
sbb
add
scas
dec
jb
mov
stc
jle
and
jnp
mov
adc
mov
fwait
mov
js
aas
rcl
mov
xor
and
arpl
fstpt
loop
pop
sbb
push
cmp
cmp
inc
inc
loopne
icebp
mov
cmp
mov
lds
add
in
adc
ret
lret
sub
gs
outsl
scas
mov
push
nop
rcrb
aas
popf
xchg
cltd
ja
mov
and
xchg
push
xchg
dec
adc
sbb
xor
std
dec
xor
mov
mov
notb
and
push
sbb
sub
and
arpl
cmp
outsb
fldt
cmp
rorl
shrl
cld
pop
imul
pop
sti
xchg
popf
mov
mov
mov
and
xchg
stc
mov
or
jno
jne
mov
mov
and
sub
data16
jl
jg
jns
movsl
and
push
icebp
mov
cwtl
mov
sahf
ret
jecxz
subl
fmul
push
sbb
sub
shl
fisttps
enter
movsl
nop
mov
dec
inc
in
add
and
addb
decb
test
xor
and
xchg
dec
mov
std
ficoms
sti
in
mov
imul
pop
cwtl
xchg
mov
sub
add
mov
scas
clc
fists
decb
push
xchg
fbld
mov
inc
lret
jg
lcall
mov
jbe
into
mov
arpl
push
pop
mov
imull
test
pop
lcall
pop
sub
mov
fmulp
inc
push
mov
ds
ret
mov
inc
sbb
cs
aad
fcomps
sbb
pop
mov
lock
adc
add
xlat
fmull
mov
inc
inc
popa
xor
xor
inc
mov
adc
pop
and
mov
xor
int3
inc
sub
into
je
shr
cmp
xchg
cmp
jmp
aam
movsl
push
push
xor
pushf
roll
dec
lcall
jecxz
pop
imul
xchg
jp
jae
jo
push
adc
out
pusha
inc
xchg
push
orl
adc
cmp
test
inc
fistpl
out
ja
sub
xchg
xor
pop
and
inc
or
sahf
and
inc
and
mov
aaa
or
push
cmpsl
mov
into
adc
in
fisttps
rcll
scas
cmp
lret
sub
adc
inc
and
aaa
and
mov
mov
cmp
int
or
js
jnp
aas
mov
xchg
in
inc
cs
sub
lret
sbb
xchg
ds
test
addl
mov
jb
jno
xchg
sahf
sbb
inc
jne
inc
iret
shrb
in
ffree
mov
jnp
inc
mov
hlt
jae
popa
xchg
testb
fnsave
mov
fistps
pmullw
stos
sub
testb
addr16
in
adc
pushf
rolb
mov
or
mov
push
cltd
xor
shr
mov
scas
insb
jecxz
fisttpll
jl
aam
adc
sub
cld
data16
adc
mov
cwtl
cmp
test
gs
rorb
or
dec
mov
in
pop
shll
xor
lods
rcr
mov
insb
xchg
insl
xchg
mov
or
dec
or
stos
lahf
rclb
es
shlb
dec
xor
dec
add
ja
mov
xor
mov
mov
das
popf
mov
adc
pop
test
je
or
cmpb
inc
loopne
pop
cli
and
arpl
jae
jg
int3
pop
mov
lods
into
lret
adc
dec
adc
pop
ss
mov
xor
pop
push
jg
and
enter
cltd
cld
iret
mov
dec
or
and
cmp
or
lock
mov
mov
jle
lahf
push
loop
ficompl
repz
xor
cmpsb
inc
mov
decb
stos
paddd
cld
and
add
xchg
push
dec
adc
shr
sbb
aad
dec
mov
push
das
jg
and
pop
push
dec
enter
das
push
inc
je
ret
inc
lock
cmp
mov
jbe
xorb
inc
popf
scas
xor
mov
int3
lea
pop
add
jbe
xor
dec
out
bound
xchg
shlb
clc
and
xchg
stc
dec
xchg
lods
enter
sbb
pop
out
fs
pop
stc
cmpsl
xchg
subl
push
inc
mov
pop
pop
stos
mov
cwtl
mov
fstl
cmpsb
cmc
jo
sbb
cmp
fildl
jg
jg
test
out
mov
in
stos
dec
sti
icebp
repz
jae
dec
inc
inc
imul
outsb
int3
mov
ds
pop
lock
sub
mov
jbe
sub
jb
cmc
jne
xchg
je
repnz
pop
into
cmpsl
pop
mov
mov
pop
sbb
test
mov
lfs
mov
sub
jmp
mov
cmp
push
sbb
in
lret
pop
cmp
inc
dec
sahf
jo
mov
mov
or
mov
jge
inc
rcll
mov
std
popf
sub
into
mov
jbe
xor
in
mov
out
jno
dec
inc
call
data16
es
mov
xchg
mov
movl
aas
inc
pop
jno
jmp
fdivrs
in
dec
test
sbb
sub
ss
jns
or
jno
jo
jo
sbb
and
cwtl
and
jl
insl
pop
shl
sbb
mov
push
rorb
inc
rorl
pop
push
mov
sahf
jae
test
xchg
mov
jmp
call
es
notb
mov
rcll
hlt
lods
ret
push
in
pusha
cwtl
lds
xorl
setno
je
out
sub
push
sbb
cmp
lods
sub
jns
mov
repnz
ficomps
rorl
adc
orl
cmp
nop
fnsave
cmp
outsl
adc
aas
mov
outsb
jmp
jbe
mov
mov
rorb
roll
sti
xor
mov
pop
ds
or
mov
subb
lret
mov
dec
push
inc
push
push
pop
sub
movsb
adc
mov
das
push
cmp
mov
or
sub
add
movsw
push
adc
imul
push
jge
mov
or
mulb
and
sti
lods
lock
pop
insb
inc
sbb
in
jmp
and
xor
insl
cwtl
and
ret
and
fildll
dec
sub
push
xchg
test
xchg
add
xor
cmp
xchg
ja
lret
or
jmp
add
jo
inc
cmc
xchg
lods
inc
adc
sbb
add
scas
dec
jb
mov
stc
jle
and
jnp
mov
adc
mov
fwait
mov
js
aas
rcl
mov
xor
and
arpl
fstpt
loop
pop
sbb
push
cmp
cmp
inc
inc
loopne
icebp
mov
cmp
mov
lds
add
in
adc
ret
lret
sub
gs
outsl
scas
mov
push
nop
rcrb
aas
popf
xchg
cltd
ja
mov
and
xchg
push
xchg
dec
adc
sbb
xor
std
dec
xor
mov
mov
notb
and
push
sbb
sub
and
arpl
cmp
outsb
fldt
cmp
rorl
shrl
cld
pop
imul
pop
sti
xchg
popf
mov
mov
mov
and
xchg
stc
mov
or
jno
jne
mov
mov
and
sub
data16
jl
jg
jns
movsl
and
push
icebp
mov
cwtl
mov
sahf
ret
jecxz
subl
fmul
push
sbb
sub
shl
fisttps
enter
movsl
nop
mov
dec
inc
in
add
and
addb
decb
test
xor
and
xchg
dec
mov
std
ficoms
sti
in
mov
imul
pop
cwtl
xchg
mov
sub
add
mov
scas
clc
fists
decb
push
xchg
fbld
mov
inc
lret
jg
lcall
mov
jbe
into
mov
arpl
push
pop
mov
imull
test
pop
lcall
pop
sub
mov
fmulp
inc
push
mov
ds
ret
mov
inc
sbb
cs
aad
fcomps
sbb
pop
mov
lock
adc
add
xlat
fmull
mov
inc
inc
popa
xor
xor
inc
mov
adc
pop
and
mov
xor
int3
inc
sub
into
je
shr
cmp
xchg
cmp
jmp
aam
movsl
push
push
xor
pushf
roll
dec
lcall
jecxz
pop
imul
xchg
jp
jae
jo
push
adc
out
pusha
inc
xchg
push
orl
adc
cmp
test
inc
fistpl
out
ja
sub
xchg
xor
pop
and
inc
or
sahf
and
inc
and
mov
aaa
or
push
cmpsl
mov
into
adc
in
fisttps
rcll
scas
cmp
lret
sub
adc
inc
and
aaa
and
mov
mov
cmp
int
or
js
jnp
aas
mov
xchg
in
inc
cs
sub
lret
sbb
xchg
ds
test
addl
mov
jb
jno
xchg
sahf
sbb
inc
jne
inc
iret
shrb
in
ffree
mov
jnp
inc
mov
hlt
jae
popa
xchg
testb
fnsave
mov
fistps
pmullw
stos
sub
testb
addr16
in
adc
pushf
rolb
mov
or
mov
push
cltd
xor
shr
mov
scas
insb
jecxz
fisttpll
jl
aam
adc
sub
cld
data16
adc
mov
cwtl
cmp
test
gs
rorb
or
dec
mov
in
pop
shll
xor
lods
rcr
mov
insb
xchg
insl
xchg
mov
or
dec
or
stos
lahf
rclb
es
shlb
dec
xor
dec
add
ja
mov
xor
mov
mov
das
popf
mov
adc
pop
test
je
or
cmpb
inc
loopne
pop
cli
and
arpl
jae
jg
int3
pop
mov
lods
into
lret
adc
dec
adc
pop
ss
mov
xor
pop
push
jg
and
enter
cltd
cld
iret
mov
dec
or
and
cmp
or
lock
mov
mov
jle
lahf
push
loop
ficompl
repz
xor
cmpsb
inc
mov
decb
stos
paddd
cld
and
add
xchg
push
dec
adc
shr
sbb
aad
dec
mov
push
das
jg
and
pop
push
dec
enter
das
push
inc
je
ret
inc
lock
cmp
mov
jbe
xorb
inc
popf
scas
xor
mov
int3
lea
pop
add
jbe
xor
dec
out
bound
xchg
shlb
clc
and
xchg
stc
dec
xchg
lods
enter
sbb
pop
out
fs
pop
stc
cmpsl
xchg
subl
push
inc
mov
pop
pop
stos
mov
cwtl
mov
fstl
cmpsb
cmc
jo
sbb
cmp
fildl
jg
jg
test
out
mov
in
stos
dec
sti
icebp
repz
jae
dec
inc
inc
imul
outsb
int3
mov
ds
pop
lock
sub
mov
jbe
sub
jb
cmc
jne
xchg
je
repnz
pop
into
cmpsl
pop
mov
mov
pop
sbb
test
mov
lfs
mov
sub
jmp
mov
cmp
push
sbb
in
lret
pop
cmp
inc
dec
sahf
jo
mov
mov
or
mov
jge
inc
rcll
mov
std
popf
sub
into
mov
jbe
xor
in
mov
out
jno
dec
inc
call
data16
es
mov
xchg
mov
movl
aas
inc
pop
jno
jmp
fdivrs
in
dec
test
sbb
sub
ss
jns
or
jno
jo
jo
sbb
and
cwtl
and
jl
insl
pop
shl
sbb
mov
push
rorb
inc
rorl
pop
push
mov
sahf
jae
test
xchg
mov
jmp
call
es
notb
mov
rcll
hlt
lods
ret
push
in
pusha
cwtl
lds
xorl
setno
je
out
sub
push
sbb
cmp
lods
sub
jns
mov
repnz
ficomps
rorl
adc
orl
cmp
nop
fnsave
cmp
outsl
adc
aas
mov
outsb
jmp
jbe
mov
mov
rorb
roll
sti
xor
mov
pop
ds
or
mov
subb
lret
mov
dec
push
inc
push
push
pop
sub
movsb
adc
mov
das
push
cmp
mov
or
sub
add
movsw
push
adc
imul
push
jge
mov
or
mulb
and
sti
lods
lock
pop
insb
inc
sbb
in
jmp
and
xor
insl
cwtl
and
ret
and
fildll
dec
sub
push
xchg
test
xchg
add
xor
cmp
xchg
ja
lret
or
jmp
add
jo
inc
cmc
xchg
lods
inc
adc
sbb
add
scas
dec
jb
mov
stc
jle
and
jnp
mov
adc
mov
fwait
mov
js
aas
rcl
mov
xor
and
arpl
fstpt
loop
pop
sbb
push
cmp
cmp
inc
inc
loopne
icebp
mov
cmp
mov
lds
add
in
adc
ret
lret
sub
gs
outsl
scas
mov
push
nop
rcrb
aas
popf
xchg
cltd
ja
mov
and
xchg
push
xchg
dec
adc
sbb
xor
std
dec
xor
mov
mov
notb
and
push
sbb
sub
and
arpl
cmp
outsb
fldt
cmp
rorl
shrl
cld
pop
imul
pop
sti
xchg
popf
mov
mov
mov
and
xchg
stc
mov
or
jno
jne
mov
mov
and
sub
data16
jl
jg
jns
movsl
and
push
icebp
mov
cwtl
mov
sahf
ret
jecxz
subl
fmul
push
sbb
sub
shl
fisttps
enter
movsl
nop
mov
dec
inc
in
add
and
addb
decb
test
xor
and
xchg
dec
mov
std
ficoms
sti
in
mov
imul
pop
cwtl
xchg
mov
sub
add
mov
scas
clc
fists
decb
push
xchg
fbld
mov
inc
lret
jg
lcall
mov
jbe
into
mov
arpl
push
pop
mov
imull
test
pop
lcall
pop
sub
mov
fmulp
inc
push
mov
ds
ret
mov
inc
sbb
cs
aad
fcomps
sbb
pop
mov
lock
adc
add
xlat
fmull
mov
inc
inc
popa
xor
xor
inc
mov
adc
pop
and
mov
xor
int3
inc
sub
into
je
shr
cmp
xchg
cmp
jmp
aam
movsl
push
push
xor
pushf
roll
dec
lcall
jecxz
pop
imul
xchg
jp
jae
jo
push
adc
out
pusha
inc
xchg
push
orl
adc
cmp
test
inc
fistpl
out
ja
sub
xchg
xor
pop
and
inc
or
sahf
and
inc
and
mov
aaa
or
push
cmpsl
mov
into
adc
in
fisttps
rcll
scas
cmp
lret
sub
adc
inc
and
aaa
and
mov
mov
cmp
int
or
js
jnp
aas
mov
xchg
in
inc
cs
sub
lret
sbb
xchg
ds
test
addl
mov
jb
jno
xchg
sahf
sbb
inc
jne
inc
iret
shrb
in
ffree
mov
jnp
inc
mov
hlt
jae
popa
xchg
testb
fnsave
mov
fistps
pmullw
stos
sub
testb
addr16
in
adc
pushf
rolb
mov
or
mov
push
cltd
xor
shr
mov
scas
insb
jecxz
fisttpll
jl
aam
adc
sub
cld
data16
adc
mov
cwtl
cmp
test
gs
rorb
or
dec
mov
in
pop
shll
xor
lods
rcr
mov
insb
xchg
insl
xchg
mov
or
dec
or
stos
lahf
rclb
es
shlb
dec
xor
dec
add
ja
mov
xor
mov
mov
das
popf
mov
adc
pop
test
je
or
cmpb
inc
loopne
pop
cli
and
arpl
jae
jg
int3
pop
mov
lods
into
lret
adc
dec
adc
pop
ss
mov
xor
pop
push
jg
and
enter
cltd
cld
iret
mov
dec
or
and
cmp
or
lock
mov
mov
jle
lahf
push
loop
ficompl
repz
xor
cmpsb
inc
mov
decb
stos
paddd
cld
and
add
xchg
push
dec
adc
shr
sbb
aad
dec
mov
push
das
jg
and
pop
push
dec
enter
das
push
inc
je
ret
inc
lock
cmp
mov
jbe
xorb
inc
popf
scas
xor
mov
int3
lea
pop
add
jbe
xor
dec
out
bound
xchg
shlb
clc
and
xchg
stc
dec
xchg
lods
enter
sbb
pop
out
fs
pop
stc
cmpsl
xchg
subl
push
inc
mov
pop
pop
stos
mov
cwtl
mov
fstl
cmpsb
cmc
jo
sbb
cmp
fildl
jg
jg
test
out
mov
in
stos
dec
sti
icebp
repz
jae
dec
inc
inc
imul
outsb
int3
mov
ds
pop
lock
sub
mov
jbe
sub
jb
cmc
jne
xchg
je
repnz
pop
into
cmpsl
pop
mov
mov
pop
sbb
test
mov
lfs
mov
sub
jmp
mov
cmp
push
sbb
in
lret
pop
cmp
inc
dec
sahf
jo
mov
mov
or
mov
jge
inc
rcll
mov
std
popf
sub
into
mov
jbe
xor
in
mov
out
jno
dec
inc
call
data16
es
mov
xchg
mov
movl
aas
inc
pop
jno
jmp
fdivrs
in
dec
test
sbb
sub
ss
jns
or
jno
jo
jo
sbb
and
cwtl
and
jl
insl
pop
shl
sbb
mov
push
rorb
inc
rorl
pop
push
mov
sahf
jae
test
xchg
mov
jmp
call
es
notb
mov
rcll
hlt
lods
ret
push
in
pusha
cwtl
lds
xorl
setno
je
out
sub
push
sbb
cmp
lods
sub
jns
mov
repnz
ficomps
rorl
adc
orl
cmp
nop
fnsave
cmp
outsl
adc
aas
mov
outsb
jmp
jbe
mov
mov
rorb
roll
sti
xor
mov
pop
ds
or
mov
subb
lret
mov
dec
push
inc
push
push
pop
sub
movsb
adc
mov
das
push
cmp
mov
or
sub
add
movsw
push
adc
imul
push
jge
mov
or
mulb
and
sti
lods
lock
pop
insb
inc
sbb
in
jmp
and
xor
insl
cwtl
and
ret
and
fildll
dec
sub
push
xchg
test
xchg
add
xor
cmp
xchg
ja
lret
or
jmp
add
jo
inc
cmc
xchg
lods
inc
adc
sbb
add
scas
dec
jb
mov
stc
jle
and
jnp
mov
adc
mov
fwait
mov
js
aas
rcl
mov
xor
and
arpl
fstpt
loop
pop
sbb
push
cmp
cmp
inc
inc
loopne
icebp
mov
cmp
mov
lds
add
in
adc
ret
lret
sub
gs
outsl
scas
mov
push
nop
rcrb
aas
popf
xchg
cltd
ja
mov
and
xchg
push
xchg
dec
adc
sbb
xor
std
dec
xor
mov
mov
notb
and
push
sbb
sub
and
arpl
cmp
outsb
fldt
cmp
rorl
shrl
cld
pop
imul
pop
sti
xchg
popf
mov
mov
mov
and
xchg
stc
mov
or
jno
jne
mov
mov
and
sub
data16
jl
jg
jns
movsl
and
push
icebp
mov
cwtl
mov
sahf
ret
jecxz
subl
fmul
push
sbb
sub
shl
fisttps
enter
movsl
nop
mov
dec
inc
in
add
and
addb
decb
test
xor
and
xchg
dec
mov
std
ficoms
sti
in
mov
imul
pop
cwtl
xchg
mov
sub
add
mov
scas
clc
fists
decb
push
xchg
fbld
mov
inc
lret
jg
lcall
mov
jbe
into
mov
arpl
push
pop
mov
imull
test
pop
lcall
pop
sub
mov
fmulp
inc
push
mov
ds
ret
mov
inc
sbb
cs
aad
fcomps
sbb
pop
mov
lock
adc
add
xlat
fmull
mov
inc
inc
popa
xor
xor
inc
mov
adc
pop
and
mov
xor
int3
inc
sub
into
je
shr
cmp
xchg
cmp
jmp
aam
movsl
push
push
xor
pushf
roll
dec
lcall
jecxz
pop
imul
xchg
jp
jae
jo
push
adc
out
pusha
inc
xchg
push
orl
adc
cmp
test
inc
fistpl
out
ja
sub
xchg
xor
pop
and
inc
or
sahf
and
inc
and
mov
aaa
or
push
cmpsl
mov
into
adc
in
fisttps
rcll
scas
cmp
lret
sub
adc
inc
and
aaa
and
mov
mov
cmp
int
or
js
jnp
aas
mov
xchg
in
inc
cs
sub
lret
sbb
xchg
ds
test
addl
mov
jb
jno
xchg
sahf
sbb
inc
jne
inc
iret
shrb
in
ffree
mov
jnp
inc
mov
hlt
jae
popa
xchg
testb
fnsave
mov
fistps
pmullw
stos
sub
testb
addr16
in
adc
pushf
rolb
mov
or
mov
push
cltd
xor
shr
mov
scas
insb
jecxz
fisttpll
jl
aam
adc
sub
cld
data16
adc
mov
cwtl
cmp
test
gs
rorb
or
dec
mov
in
pop
shll
xor
lods
rcr
mov
insb
xchg
insl
xchg
mov
or
dec
or
stos
lahf
rclb
es
shlb
dec
xor
dec
add
ja
mov
xor
mov
mov
das
popf
mov
adc
pop
test
je
or
cmpb
inc
loopne
pop
cli
and
arpl
jae
jg
int3
pop
mov
lods
into
lret
adc
dec
adc
pop
ss
mov
xor
pop
push
jg
and
enter
cltd
cld
iret
mov
dec
or
and
cmp
or
lock
mov
mov
jle
lahf
push
loop
ficompl
repz
xor
cmpsb
inc
mov
decb
stos
paddd
cld
and
add
xchg
push
dec
adc
shr
sbb
aad
dec
mov
push
das
jg
and
pop
push
dec
enter
das
push
inc
je
ret
inc
lock
cmp
mov
jbe
xorb
inc
popf
scas
xor
mov
int3
lea
pop
add
jbe
xor
dec
out
bound
xchg
shlb
clc
and
xchg
stc
dec
xchg
lods
enter
sbb
pop
out
fs
pop
stc
cmpsl
xchg
subl
push
inc
mov
pop
pop
stos
mov
cwtl
mov
fstl
cmpsb
cmc
jo
sbb
cmp
fildl
jg
jg
test
out
mov
in
stos
dec
sti
icebp
repz
jae
dec
inc
inc
imul
outsb
int3
mov
ds
pop
lock
sub
mov
jbe
sub
jb
cmc
jne
xchg
je
repnz
pop
into
cmpsl
pop
mov
mov
pop
sbb
test
mov
lfs
mov
sub
jmp
mov
cmp
push
sbb
in
lret
pop
cmp
inc
dec
sahf
jo
mov
mov
or
mov
jge
inc
rcll
mov
std
popf
sub
into
mov
jbe
xor
in
mov
out
jno
dec
inc
call
data16
es
mov
xchg
mov
movl
aas
inc
pop
jno
jmp
fdivrs
in
dec
test
sbb
sub
ss
jns
or
jno
jo
jo
sbb
and
cwtl
and
jl
insl
pop
shl
sbb
mov
push
rorb
inc
rorl
pop
push
mov
sahf
jae
test
xchg
mov
jmp
call
es
notb
mov
rcll
hlt
lods
ret
push
in
pusha
cwtl
lds
xorl
setno
je
out
sub
push
sbb
cmp
lods
sub
jns
mov
repnz
ficomps
rorl
adc
orl
cmp
nop
fnsave
cmp
outsl
adc
aas
mov
outsb
jmp
jbe
mov
mov
rorb
roll
sti
xor
mov
pop
ds
or
mov
subb
lret
mov
dec
push
inc
push
push
pop
sub
movsb
adc
mov
das
push
cmp
mov
or
sub
add
movsw
push
adc
imul
push
jge
mov
or
mulb
and
sti
lods
lock
pop
insb
inc
sbb
in
jmp
and
xor
insl
cwtl
and
ret
and
fildll
dec
sub
push
xchg
test
xchg
add
xor
cmp
xchg
ja
lret
or
jmp
add
jo
inc
cmc
xchg
lods
inc
adc
sbb
add
scas
dec
jb
mov
stc
jle
and
jnp
mov
adc
mov
fwait
mov
js
aas
rcl
mov
xor
and
arpl
fstpt
loop
pop
sbb
push
cmp
cmp
inc
inc
loopne
icebp
mov
cmp
mov
lds
add
in
adc
ret
lret
sub
gs
outsl
scas
mov
push
nop
rcrb
aas
popf
xchg
cltd
ja
mov
and
xchg
push
xchg
dec
adc
sbb
xor
std
dec
xor
mov
mov
notb
and
push
sbb
sub
and
arpl
cmp
outsb
fldt
cmp
rorl
shrl
cld
pop
imul
pop
sti
xchg
popf
mov
mov
mov
and
xchg
stc
mov
or
jno
jne
mov
mov
and
sub
data16
jl
jg
jns
movsl
and
push
icebp
mov
cwtl
mov
sahf
ret
jecxz
subl
fmul
push
sbb
sub
shl
fisttps
enter
movsl
nop
mov
dec
inc
in
add
and
addb
decb
test
xor
and
xchg
dec
mov
std
ficoms
sti
in
mov
imul
pop
cwtl
xchg
mov
sub
add
mov
scas
clc
fists
decb
push
xchg
fbld
mov
inc
lret
jg
lcall
mov
jbe
into
mov
arpl
push
pop
mov
imull
test
pop
lcall
pop
sub
mov
fmulp
inc
push
mov
ds
ret
mov
inc
sbb
cs
aad
fcomps
sbb
pop
mov
lock
adc
add
xlat
fmull
mov
inc
inc
popa
xor
xor
inc
mov
adc
pop
and
mov
xor
int3
inc
sub
into
je
shr
cmp
xchg
cmp
jmp
aam
movsl
push
push
xor
pushf
roll
dec
lcall
jecxz
pop
imul
xchg
jp
jae
jo
push
adc
out
pusha
inc
xchg
push
orl
adc
cmp
test
inc
fistpl
out
ja
sub
xchg
xor
pop
and
inc
or
sahf
and
inc
and
mov
aaa
or
push
cmpsl
mov
into
adc
in
fisttps
rcll
scas
cmp
lret
sub
adc
inc
and
aaa
and
mov
mov
cmp
int
or
js
jnp
aas
mov
xchg
in
inc
cs
sub
lret
sbb
xchg
ds
test
addl
mov
jb
jno
xchg
sahf
sbb
inc
jne
inc
iret
shrb
in
ffree
mov
jnp
inc
mov
hlt
jae
popa
xchg
testb
fnsave
mov
fistps
pmullw
stos
sub
testb
addr16
in
adc
pushf
rolb
mov
or
mov
push
cltd
xor
shr
mov
scas
insb
jecxz
fisttpll
jl
aam
adc
sub
cld
data16
adc
mov
cwtl
cmp
test
gs
rorb
or
dec
mov
in
pop
shll
xor
lods
rcr
mov
insb
xchg
insl
xchg
mov
or
dec
or
stos
lahf
rclb
es
shlb
dec
xor
dec
add
ja
mov
xor
mov
mov
das
popf
mov
adc
pop
test
je
or
cmpb
inc
loopne
pop
cli
and
arpl
jae
jg
int3
pop
mov
lods
into
lret
adc
dec
adc
pop
ss
mov
xor
pop
push
jg
and
enter
cltd
cld
iret
mov
dec
or
and
cmp
or
lock
mov
mov
jle
lahf
push
loop
ficompl
repz
xor
cmpsb
inc
mov
decb
stos
paddd
cld
and
add
xchg
push
dec
adc
shr
sbb
aad
dec
mov
push
das
jg
and
pop
push
dec
enter
das
push
inc
je
ret
inc
lock
cmp
mov
jbe
xorb
inc
popf
scas
xor
mov
int3
lea
pop
add
jbe
xor
dec
out
bound
xchg
shlb
clc
and
xchg
stc
dec
xchg
lods
enter
sbb
pop
out
fs
pop
stc
cmpsl
xchg
subl
push
inc
mov
pop
pop
stos
mov
cwtl
mov
fstl
cmpsb
cmc
jo
sbb
cmp
fildl
jg
jg
test
out
mov
in
stos
dec
sti
icebp
repz
jae
dec
inc
inc
imul
outsb
int3
mov
ds
pop
lock
sub
mov
jbe
sub
jb
cmc
jne
xchg
je
repnz
pop
into
cmpsl
pop
mov
mov
pop
sbb
test
mov
lfs
mov
sub
jmp
mov
cmp
push
sbb
in
lret
pop
cmp
inc
dec
sahf
jo
mov
mov
or
mov
jge
inc
rcll
mov
std
popf
sub
into
mov
jbe
xor
in
mov
out
jno
dec
inc
call
data16
es
mov
xchg
mov
movl
aas
inc
pop
jno
jmp
fdivrs
in
dec
test
sbb
sub
ss
jns
or
jno
jo
jo
sbb
and
cwtl
and
jl
insl
pop
shl
sbb
mov
push
rorb
inc
rorl
pop
push
mov
sahf
jae
test
xchg
mov
jmp
call
es
notb
mov
rcll
hlt
lods
ret
push
in
pusha
cwtl
lds
xorl
setno
je
out
sub
push
sbb
cmp
lods
sub
jns
mov
repnz
ficomps
rorl
adc
orl
cmp
nop
fnsave
cmp
outsl
adc
aas
mov
outsb
jmp
jbe
mov
mov
rorb
roll
sti
xor
mov
pop
ds
or
mov
subb
lret
mov
dec
push
inc
push
push
pop
sub
movsb
adc
mov
das
push
cmp
mov
or
sub
add
movsw
push
adc
imul
push
jge
mov
or
mulb
and
sti
lods
lock
pop
insb
inc
sbb
in
jmp
and
xor
insl
cwtl
and
ret
and
fildll
dec
sub
push
xchg
test
xchg
add
xor
cmp
xchg
ja
lret
or
jmp
add
jo
inc
cmc
xchg
lods
inc
adc
sbb
add
scas
dec
jb
mov
stc
jle
and
jnp
mov
adc
mov
fwait
mov
js
aas
rcl
mov
xor
and
arpl
fstpt
loop
pop
sbb
push
cmp
cmp
inc
inc
loopne
icebp
mov
cmp
mov
lds
add
in
adc
ret
lret
sub
gs
outsl
scas
mov
push
nop
rcrb
aas
popf
xchg
cltd
ja
mov
and
xchg
push
xchg
dec
adc
sbb
xor
std
dec
xor
mov
mov
notb
and
push
sbb
sub
and
arpl
cmp
outsb
fldt
cmp
rorl
shrl
cld
pop
imul
pop
sti
xchg
popf
mov
mov
mov
and
xchg
stc
mov
or
jno
jne
mov
mov
and
sub
data16
jl
jg
jns
movsl
and
push
icebp
mov
cwtl
mov
sahf
ret
jecxz
subl
fmul
push
sbb
sub
shl
fisttps
enter
movsl
nop
mov
dec
inc
in
add
and
addb
decb
test
xor
and
xchg
dec
mov
std
ficoms
sti
in
mov
imul
pop
cwtl
xchg
mov
sub
add
mov
scas
clc
fists
decb
push
xchg
fbld
mov
inc
lret
jg
lcall
mov
jbe
into
mov
arpl
push
pop
mov
imull
test
pop
lcall
pop
sub
mov
fmulp
inc
push
mov
ds
ret
mov
inc
sbb
cs
aad
fcomps
sbb
pop
mov
lock
adc
add
xlat
fmull
mov
inc
inc
popa
xor
xor
inc
mov
adc
pop
and
mov
xor
int3
inc
sub
into
je
shr
cmp
xchg
cmp
jmp
aam
movsl
push
push
xor
pushf
roll
dec
lcall
jecxz
pop
imul
xchg
jp
jae
jo
push
adc
out
pusha
inc
xchg
push
orl
adc
cmp
test
inc
fistpl
out
ja
sub
xchg
xor
pop
and
inc
or
sahf
and
inc
and
mov
aaa
or
push
cmpsl
mov
into
adc
in
fisttps
rcll
scas
cmp
lret
sub
adc
inc
and
aaa
and
mov
mov
cmp
int
or
js
jnp
aas
mov
xchg
in
inc
cs
sub
lret
sbb
xchg
ds
test
addl
mov
jb
jno
xchg
sahf
sbb
inc
jne
inc
iret
shrb
in
ffree
mov
jnp
inc
mov
hlt
jae
popa
xchg
testb
fnsave
mov
fistps
pmullw
stos
sub
testb
addr16
in
adc
pushf
rolb
mov
or
mov
push
cltd
xor
shr
mov
scas
insb
jecxz
fisttpll
jl
aam
adc
sub
cld
data16
adc
mov
cwtl
cmp
test
gs
rorb
or
dec
mov
in
pop
shll
xor
lods
rcr
mov
insb
xchg
insl
xchg
mov
or
dec
or
stos
lahf
rclb
es
shlb
dec
xor
dec
add
ja
mov
xor
mov
mov
das
popf
mov
adc
pop
test
je
or
cmpb
inc
loopne
pop
cli
and
arpl
jae
jg
int3
pop
mov
lods
into
lret
adc
dec
adc
pop
ss
mov
xor
pop
push
jg
and
enter
cltd
cld
iret
mov
dec
or
and
cmp
or
lock
mov
mov
jle
lahf
push
loop
ficompl
repz
xor
cmpsb
inc
mov
decb
stos
paddd
cld
and
add
xchg
push
dec
adc
shr
sbb
aad
dec
mov
push
das
jg
and
pop
push
dec
enter
das
push
inc
je
ret
inc
lock
cmp
mov
jbe
xorb
inc
popf
scas
xor
mov
int3
lea
pop
add
jbe
xor
dec
out
bound
xchg
shlb
clc
and
xchg
stc
dec
xchg
lods
enter
sbb
pop
out
fs
pop
stc
cmpsl
xchg
subl
push
inc
mov
pop
pop
stos
mov
cwtl
mov
fstl
cmpsb
cmc
jo
sbb
cmp
fildl
jg
jg
test
out
mov
in
stos
dec
sti
icebp
repz
jae
dec
inc
inc
imul
outsb
int3
mov
ds
pop
lock
sub
mov
jbe
sub
jb
cmc
jne
xchg
je
repnz
pop
into
cmpsl
pop
mov
mov
pop
sbb
test
mov
lfs
mov
sub
jmp
mov
cmp
push
sbb
in
lret
pop
cmp
inc
dec
sahf
jo
mov
mov
or
mov
jge
inc
rcll
mov
std
popf
sub
into
mov
jbe
xor
in
mov
out
jno
dec
inc
call
data16
es
mov
xchg
mov
movl
aas
inc
pop
jno
jmp
fdivrs
in
dec
test
sbb
sub
ss
jns
or
jno
jo
jo
sbb
and
cwtl
and
jl
insl
pop
shl
sbb
mov
push
rorb
inc
rorl
pop
push
mov
sahf
jae
test
xchg
mov
jmp
call
es
notb
mov
rcll
hlt
lods
ret
push
in
pusha
cwtl
lds
xorl
setno
je
out
sub
push
sbb
cmp
lods
sub
jns
mov
repnz
ficomps
rorl
adc
orl
cmp
nop
fnsave
cmp
outsl
adc
aas
mov
outsb
jmp
jbe
mov
mov
rorb
roll
sti
xor
mov
pop
ds
or
mov
subb
lret
mov
dec
push
inc
push
push
pop
sub
movsb
adc
mov
das
push
cmp
mov
or
sub
add
movsw
push
adc
imul
push
jge
mov
or
mulb
and
sti
lods
lock
pop
insb
inc
sbb
in
jmp
and
xor
insl
cwtl
and
ret
and
fildll
dec
sub
push
xchg
test
xchg
add
xor
cmp
xchg
ja
lret
or
jmp
add
jo
inc
cmc
xchg
lods
inc
adc
sbb
add
scas
dec
jb
mov
stc
jle
and
jnp
mov
adc
mov
fwait
mov
js
aas
rcl
mov
xor
and
arpl
fstpt
loop
pop
sbb
push
cmp
cmp
inc
inc
loopne
icebp
mov
cmp
mov
lds
add
in
adc
ret
lret
sub
gs
outsl
scas
mov
push
nop
rcrb
aas
popf
xchg
cltd
ja
mov
and
xchg
push
xchg
dec
adc
sbb
xor
std
dec
xor
mov
mov
notb
and
push
sbb
sub
and
arpl
cmp
outsb
fldt
cmp
rorl
shrl
cld
pop
imul
pop
sti
xchg
popf
mov
mov
mov
and
xchg
stc
mov
or
jno
jne
mov
mov
and
sub
data16
jl
jg
jns
movsl
and
push
icebp
mov
cwtl
mov
sahf
ret
jecxz
subl
fmul
push
sbb
sub
shl
fisttps
enter
movsl
nop
mov
dec
inc
in
add
and
addb
decb
test
xor
and
xchg
dec
mov
std
ficoms
sti
in
mov
imul
pop
cwtl
xchg
mov
sub
add
mov
scas
clc
fists
decb
push
xchg
fbld
mov
inc
lret
jg
lcall
mov
jbe
into
mov
arpl
push
pop
mov
imull
test
pop
lcall
pop
sub
mov
fmulp
inc
push
mov
ds
ret
mov
inc
sbb
cs
aad
fcomps
sbb
pop
mov
lock
adc
add
xlat
fmull
mov
inc
inc
popa
xor
xor
inc
mov
adc
pop
and
mov
xor
int3
inc
sub
into
je
shr
cmp
xchg
cmp
jmp
aam
movsl
push
push
xor
pushf
roll
dec
lcall
jecxz
pop
imul
xchg
jp
jae
jo
push
adc
out
pusha
inc
xchg
push
orl
adc
cmp
test
inc
fistpl
out
ja
sub
xchg
xor
pop
and
inc
or
sahf
and
inc
and
mov
aaa
or
push
cmpsl
mov
into
adc
in
fisttps
rcll
scas
cmp
lret
sub
adc
inc
and
aaa
and
mov
mov
cmp
int
or
js
jnp
aas
mov
xchg
in
inc
cs
sub
lret
sbb
xchg
ds
test
addl
mov
jb
jno
xchg
sahf
sbb
inc
jne
inc
iret
shrb
in
ffree
mov
jnp
inc
mov
hlt
jae
popa
xchg
testb
fnsave
mov
fistps
pmullw
stos
sub
testb
addr16
in
adc
pushf
rolb
mov
or
mov
push
cltd
xor
shr
mov
scas
insb
jecxz
fisttpll
jl
aam
adc
sub
cld
data16
adc
mov
cwtl
cmp
test
gs
rorb
or
dec
mov
in
pop
shll
xor
lods
rcr
mov
insb
xchg
insl
xchg
mov
or
dec
or
stos
lahf
rclb
es
shlb
dec
xor
dec
add
ja
mov
xor
mov
mov
das
popf
mov
adc
pop
test
je
or
cmpb
inc
loopne
pop
cli
and
arpl
jae
jg
int3
pop
mov
lods
into
lret
adc
dec
adc
pop
ss
mov
xor
pop
push
jg
and
enter
cltd
cld
iret
mov
dec
or
and
cmp
or
lock
mov
mov
jle
lahf
push
loop
ficompl
repz
xor
cmpsb
inc
mov
decb
stos
paddd
cld
and
add
xchg
push
dec
adc
shr
sbb
aad
dec
mov
push
das
jg
and
pop
push
dec
enter
das
push
inc
je
ret
inc
lock
cmp
mov
jbe
xorb
inc
popf
scas
xor
mov
int3
lea
pop
add
jbe
xor
dec
out
bound
xchg
shlb
clc
and
xchg
stc
dec
xchg
lods
enter
sbb
pop
out
fs
pop
stc
cmpsl
xchg
subl
push
inc
mov
pop
pop
stos
mov
cwtl
mov
fstl
cmpsb
cmc
jo
sbb
cmp
fildl
jg
jg
test
out
mov
in
stos
dec
sti
icebp
repz
jae
dec
inc
inc
imul
outsb
int3
mov
ds
pop
lock
sub
mov
jbe
sub
jb
cmc
jne
xchg
je
repnz
pop
into
cmpsl
pop
mov
mov
pop
sbb
test
mov
lfs
mov
sub
jmp
mov
cmp
push
sbb
in
lret
pop
cmp
inc
dec
sahf
jo
mov
mov
or
mov
jge
inc
rcll
mov
std
popf
sub
into
mov
jbe
xor
in
mov
out
jno
dec
inc
call
data16
es
mov
xchg
mov
movl
aas
inc
pop
jno
jmp
fdivrs
in
dec
test
sbb
sub
ss
jns
or
jno
jo
jo
sbb
and
cwtl
and
jl
insl
pop
shl
sbb
mov
push
rorb
inc
rorl
pop
push
mov
sahf
jae
test
xchg
mov
jmp
call
es
notb
mov
rcll
hlt
lods
ret
push
in
pusha
cwtl
lds
xorl
setno
je
out
sub
push
sbb
cmp
lods
sub
jns
mov
repnz
ficomps
rorl
adc
orl
cmp
nop
fnsave
cmp
outsl
adc
aas
mov
outsb
jmp
jbe
mov
mov
rorb
roll
sti
xor
mov
pop
ds
or
mov
subb
lret
mov
dec
push
inc
push
push
pop
sub
movsb
adc
mov
das
push
cmp
mov
or
sub
add
movsw
push
adc
imul
push
jge
mov
or
mulb
and
sti
lods
lock
pop
insb
inc
sbb
in
jmp
and
xor
insl
cwtl
and
ret
and
fildll
dec
sub
push
xchg
test
xchg
add
xor
cmp
xchg
ja
lret
or
jmp
add
jo
inc
cmc
xchg
lods
inc
adc
sbb
add
scas
dec
jb
mov
stc
jle
and
jnp
mov
adc
mov
fwait
mov
js
aas
rcl
mov
xor
and
arpl
fstpt
loop
pop
sbb
push
cmp
cmp
inc
inc
loopne
icebp
mov
cmp
mov
lds
add
in
adc
ret
lret
sub
gs
outsl
scas
mov
push
nop
rcrb
aas
popf
xchg
cltd
ja
mov
and
xchg
push
xchg
dec
adc
sbb
xor
std
dec
xor
mov
mov
notb
and
push
sbb
sub
and
arpl
cmp
outsb
fldt
cmp
rorl
shrl
cld
pop
imul
pop
sti
xchg
popf
mov
mov
mov
and
xchg
stc
mov
or
jno
jne
mov
mov
and
sub
data16
jl
jg
jns
movsl
and
push
icebp
mov
cwtl
mov
sahf
ret
jecxz
subl
fmul
push
sbb
sub
shl
fisttps
enter
movsl
nop
mov
dec
inc
in
add
and
addb
decb
test
xor
and
xchg
dec
mov
std
ficoms
sti
in
mov
imul
pop
cwtl
xchg
mov
sub
add
mov
scas
clc
fists
decb
push
xchg
fbld
mov
inc
lret
jg
lcall
mov
jbe
into
mov
arpl
push
pop
mov
imull
test
pop
lcall
pop
sub
mov
fmulp
inc
push
mov
ds
ret
mov
inc
sbb
cs
aad
fcomps
sbb
pop
mov
lock
adc
add
xlat
fmull
mov
inc
inc
popa
xor
xor
inc
mov
adc
pop
and
mov
xor
int3
inc
sub
into
je
shr
cmp
xchg
cmp
jmp
aam
movsl
push
push
xor
pushf
roll
dec
lcall
jecxz
pop
imul
xchg
jp
jae
jo
push
adc
out
pusha
inc
xchg
push
orl
adc
cmp
test
inc
fistpl
out
ja
sub
xchg
xor
pop
and
inc
or
sahf
and
inc
and
mov
aaa
or
push
cmpsl
mov
into
adc
in
fisttps
rcll
scas
cmp
lret
sub
adc
inc
and
aaa
and
mov
mov
cmp
int
or
js
jnp
aas
mov
xchg
in
inc
cs
sub
lret
sbb
xchg
ds
test
addl
mov
jb
jno
xchg
sahf
sbb
inc
jne
inc
iret
shrb
in
ffree
mov
jnp
inc
mov
hlt
jae
popa
xchg
testb
fnsave
mov
fistps
pmullw
stos
sub
testb
addr16
in
adc
pushf
rolb
mov
or
mov
push
cltd
xor
shr
mov
scas
insb
jecxz
fisttpll
jl
aam
adc
sub
cld
data16
adc
mov
cwtl
cmp
test
gs
rorb
or
dec
mov
in
pop
shll
xor
lods
rcr
mov
insb
xchg
insl
xchg
mov
or
dec
or
stos
lahf
rclb
es
shlb
dec
xor
dec
add
ja
mov
xor
mov
mov
das
popf
mov
adc
pop
test
je
or
cmpb
inc
loopne
pop
cli
and
arpl
jae
jg
int3
pop
mov
lods
into
lret
adc
dec
adc
pop
ss
mov
xor
pop
push
jg
and
enter
cltd
cld
iret
mov
dec
or
and
cmp
or
lock
mov
mov
jle
lahf
push
loop
ficompl
repz
xor
cmpsb
inc
mov
decb
stos
paddd
cld
and
add
xchg
push
dec
adc
shr
sbb
aad
dec
mov
push
das
jg
and
pop
push
dec
enter
das
push
inc
je
ret
inc
lock
cmp
mov
jbe
xorb
inc
popf
scas
xor
mov
int3
lea
pop
add
jbe
xor
dec
out
bound
xchg
shlb
clc
and
xchg
stc
dec
xchg
lods
enter
sbb
pop
out
fs
pop
stc
cmpsl
xchg
subl
push
inc
mov
pop
pop
stos
mov
cwtl
mov
fstl
cmpsb
cmc
jo
sbb
cmp
fildl
jg
jg
test
out
mov
in
stos
dec
sti
icebp
repz
jae
dec
inc
inc
imul
outsb
int3
mov
ds
pop
lock
sub
mov
jbe
sub
jb
cmc
jne
xchg
je
repnz
pop
into
cmpsl
pop
mov
mov
pop
sbb
test
mov
lfs
mov
sub
jmp
mov
cmp
push
sbb
in
lret
pop
cmp
inc
dec
sahf
jo
mov
mov
or
mov
jge
inc
rcll
mov
std
popf
sub
into
mov
jbe
xor
in
mov
out
jno
dec
inc
call
data16
es
mov
xchg
mov
movl
aas
inc
pop
jno
jmp
fdivrs
in
dec
test
sbb
sub
ss
jns
or
jno
jo
jo
sbb
and
cwtl
and
jl
insl
pop
shl
sbb
mov
push
rorb
inc
rorl
pop
push
mov
sahf
jae
test
xchg
mov
jmp
call
es
notb
mov
rcll
hlt
lods
ret
push
in
pusha
cwtl
lds
xorl
setno
je
out
sub
push
sbb
cmp
lods
sub
jns
mov
repnz
ficomps
rorl
pop
cltd
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
cltd
aas
add
cltd
aas
add
add
lret
add
add
add
cltd
aas
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
imul
gs
xor
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
imul
add
add
je
imul
