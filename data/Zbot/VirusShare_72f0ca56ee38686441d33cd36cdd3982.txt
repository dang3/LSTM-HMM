push
sub
push
xor
mov
test
je
mov
lea
xor
inc
cmp
jb
pop
ret
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
push
xor
mov
mov
xor
lea
mov
inc
cmp
jl
xor
lea
xor
mov
div
movzbl
add
add
and
jns
dec
or
inc
mov
mov
movzbl
mov
mov
xor
lea
div
movzbl
add
add
and
jns
dec
or
inc
mov
mov
movzbl
mov
mov
xor
mov
div
movzbl
add
add
and
jns
dec
or
inc
mov
mov
movzbl
mov
mov
xor
lea
div
movzbl
add
add
and
jns
dec
or
inc
mov
mov
mov
movzbl
add
add
mov
cmp
jl
mov
xor
test
je
mov
add
and
jns
dec
or
inc
add
and
jns
dec
or
inc
mov
mov
mov
movzbl
mov
mov
add
and
jns
dec
or
inc
movzbl
xor
inc
cmp
jb
mov
jmp
mov
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
push
xor
push
mov
call
mov
mov
push
mov
call
mov
push
call
mov
mov
cmp
je
mov
lea
push
push
call
push
push
call
push
push
call
push
push
call
mov
push
mov
push
push
push
push
push
push
push
push
call
test
je
mov
sub
mov
sub
push
push
push
call
mov
cmp
je
mov
push
push
call
mov
sub
mov
sub
push
push
push
push
push
push
push
push
push
call
test
je
mov
lea
push
push
push
call
mov
mov
mov
mov
mov
shl
mov
mov
add
cltd
and
lea
sar
imul
add
add
push
push
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
push
call
mov
push
lea
push
push
push
mov
mov
push
push
push
call
push
push
push
push
push
push
push
call
push
mov
lea
push
lea
mov
push
lea
push
mov
push
movl
mov
movl
call
push
lea
push
push
lea
push
push
call
push
lea
mov
push
push
push
push
call
push
call
push
call
push
call
mov
mov
xor
mov
push
call
push
call
mov
push
push
call
mov
push
push
call
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
lea
call
dec
jne
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
mov
loop
dec
jne
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
push
mov
call
call
sub
cmp
sbb
pop
neg
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
xor
xor
xor
mov
pop
or
inc
cld
inc
inc
cld
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
xor
xor
xor
push
mov
mov
mov
mov
in
mov
pop
movl
xor
cmpl
sete
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
test
je
push
call
call
test
je
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
test
je
cmp
je
lea
inc
cmpb
jne
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
jne
test
je
or
pop
ret
test
jne
mov
pop
ret
xor
pop
ret
push
mov
push
mov
cmp
jne
cmp
jne
mov
movsbl
movsbl
sub
jne
sub
test
je
mov
movsbl
inc
movsbl
sub
je
xor
test
setg
pop
pop
pop
lea
ret
call
mov
cmp
jne
mov
call
mov
cmp
jne
test
je
test
je
xor
test
jle
movsbl
movsbl
sub
jne
inc
inc
inc
cmp
jl
pop
pop
xor
pop
ret
sub
test
jne
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
mov
push
mov
push
add
xor
push
cmp
jbe
mov
add
test
je
mov
mov
push
push
add
call
test
je
inc
add
cmp
jb
pop
pop
xor
pop
ret
mov
lea
movzwl
mov
lea
mov
pop
pop
add
pop
ret
int3
int3
int3
push
xor
mov
mov
mov
lods
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
lea
movl
movl
movl
movw
movb
movl
movl
movl
movw
movb
call
push
lea
call
xor
xor
call
mov
lea
push
call
lea
push
mov
call
mov
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
mov
mov
movl
movl
movl
movb
movl
movl
movw
movl
movl
movl
movw
movb
movl
movl
movl
movb
movl
movl
movl
movl
movw
movl
movl
movl
movl
movb
movl
movl
movl
movl
movl
movb
movl
movl
movl
movw
movb
movl
movl
movl
movl
movw
movb
movl
movl
movl
movl
movb
movl
movl
movl
movb
movl
movl
movl
cmp
jne
push
mov
add
cmpl
jne
push
mov
lea
call
push
mov
lea
call
lea
push
push
push
lea
push
call
push
call
push
mov
lea
push
push
call
add
xor
lea
push
lea
push
push
push
push
push
push
push
push
push
mov
mov
mov
mov
call
test
je
push
mov
lea
call
lea
push
push
push
lea
push
call
push
call
push
push
push
push
call
mov
push
mov
lea
mov
movl
call
lea
push
push
push
lea
push
call
push
call
mov
push
push
call
test
je
push
mov
lea
call
lea
push
push
push
lea
push
call
push
call
mov
push
push
lea
push
mov
add
push
push
call
mov
cmp
jne
push
mov
lea
call
push
mov
lea
call
lea
push
push
push
lea
push
call
push
call
mov
call
mov
mov
push
push
call
push
mov
lea
call
lea
push
push
push
lea
push
call
push
call
mov
mov
push
push
push
mov
push
push
call
push
mov
lea
mov
call
lea
push
push
push
lea
push
call
push
call
mov
mov
push
push
push
push
mov
push
call
xor
xor
mov
cmp
jae
mov
jmp
lea
mov
mov
lea
mov
lea
mov
push
push
mov
mov
add
push
add
push
push
call
mov
movzwl
addl
inc
mov
cmp
jl
mov
mov
push
push
lea
push
mov
add
push
push
call
mov
mov
add
mov
push
mov
lea
call
lea
push
push
push
lea
push
call
push
call
mov
push
push
call
push
mov
lea
call
lea
push
push
push
lea
push
call
push
call
mov
push
call
pop
push
mov
lea
call
lea
push
push
push
lea
push
call
push
call
push
push
push
call
mov
pop
pop
pop
xor
mov
call
add
ret
sub
mov
xor
mov
cmp
jne
push
push
push
push
lea
push
lea
mov
movl
movl
movl
movb
movl
movl
movl
movw
movb
movl
movl
movl
movw
movl
movl
movl
movb
movl
movl
movl
movw
movb
movl
movl
movl
movb
movl
movl
movl
movl
movb
call
push
mov
lea
call
lea
push
push
push
lea
push
call
push
call
push
mov
lea
mov
call
lea
push
push
push
lea
push
call
push
call
push
mov
lea
call
lea
push
push
push
lea
push
call
push
call
mov
push
mov
lea
call
lea
push
push
push
lea
push
call
push
call
push
mov
lea
mov
call
lea
push
push
push
lea
push
call
push
call
push
mov
lea
mov
call
lea
push
push
push
lea
push
call
push
call
push
mov
call
push
mov
push
push
call
push
push
mov
call
push
call
mov
mov
push
push
call
push
push
push
mov
call
mov
push
push
call
mov
test
jne
push
push
push
push
call
push
push
call
push
call
mov
call
mov
push
push
mov
call
push
mov
lea
mov
movb
mov
movl
movw
mov
movw
movb
mov
movw
movb
mov
movw
call
lea
push
push
push
lea
push
call
push
call
push
lea
push
push
call
mov
lea
call
push
call
pop
pop
pop
pop
mov
xor
xor
call
add
ret
int3
int3
int3
int3
push
mov
mov
call
dec
jmp
push
mov
push
mov
push
xor
call
call
push
call
xor
inc
cmp
jl
jg
cmp
jbe
pop
pop
pop
ret
int3
sub
mov
xor
mov
push
push
mov
push
mov
lea
push
push
movl
movl
movl
mov
movl
movl
movl
movb
call
add
push
mov
lea
movl
call
push
lea
call
lea
push
push
push
lea
push
call
push
call
mov
lea
push
call
call
test
jne
push
mov
mov
jmp
lea
call
call
call
dec
jne
pop
cmpl
jne
lea
push
jmp
cmp
jne
cmpl
jne
lea
push
push
push
push
push
push
call
push
push
push
push
push
call
mov
pop
pop
xor
call
add
ret
int3
int3
call
call
ret
int3
int3
int3
sub
mov
xor
mov
push
xor
mov
push
lea
movl
movl
movl
mov
movl
movl
mov
call
push
lea
lea
call
lea
push
push
push
lea
push
call
push
call
push
push
push
push
push
call
push
call
mov
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
push
push
push
push
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
call
call
call
lea
push
push
push
push
push
push
call
push
call
call
call
pop
ret
cmp
jne
repz
jmp
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
pxor
push
push
mov
and
test
jne
mov
and
shr
je
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
xor
shr
je
mov
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
mov
neg
add
sub
xor
push
mov
and
je
mov
inc
dec
jne
shr
je
mov
lea
dec
jne
pop
jmp
push
call
mov
xor
ret
andl
ret
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
jmp
add
add
xor
add
xor
add
xor
add
xor
add
add
adc
add
add
add
adc
add
and
add
push
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
jb
add
bound
add
dec
xor
add
add
jp
add
mov
add
add
add
add
add
add
xor
add
and
add
jne
bound
add
jb
jb
add
gs
outsl
jb
add
sub
add
add
add
add
add
add
inc
add
add
add
inc
push
out
mov
pop
dec
xchg
xchg
outsl
xchg
mov
add
add
arpl
pop
je
jo
je
jae
jo,pn
bound
loopne
add
subb
add
add
add
incl
add
add
incl
add
add
ds
inc
add
add
add
incl
add
add
incl
add
add
out
adc
inc
add
add
add
incl
add
add
incl
add
add
ljmp
inc
add
inc
add
add
xor
add
sub
add
je
add
mov
add
js
add
cld
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
adc
add
add
add
adc
add
and
add
push
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
jb
add
bound
add
dec
xor
add
add
jp
add
add
add
push
add
outsl
jae
dec
popa
outsb
fs
add
bound
inc
jb
add
lds
inc
insb
outsl
bound
push
outsb
insb
outsl
arpl
add
je
inc
imul
gs
je
inc
imul
insb
outsl
bound
dec
outsl
arpl
add
bound
inc
insb
insb
outsl
arpl
xchg
add
je
imul
je
add
gs
sbb
inc
js
je
jb
arpl
jae
mov
push
gs
imul
mov
inc
jb
popa
je
push
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
insb
gs
jae
inc
inc
add
inc
gs
jns
je
insl
dec
gs
imul
inc
gs
insb
imul
je
and
inc
gs
inc
add
add
jae
popa
addr16
outsl
js
add
inc
push
xor
cs
insb
add
out
inc
gs
gs
dec
bound
arpl
lret
gs
dec
inc
imul
je
bound
arpl
add
add
je
insb
je
add
push
gs
arpl
push
arpl
das
add
gs
je
inc
outsl
insl
jo
je
bound
imul
add
jb
je
push
add
push
je
gs
push
outsl
fs
add
gs
je
inc
outsl
insl
jo
je
bound
inc
add
inc
inc
dec
xor
cs
insb
add
add
gs
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
roll
fs
gs
js
gs
imul
gs
add
push
outsb
push
gs
js
gs
imul
gs
add
dec
jae
bound
addr16
jb
jae
outsb
je
sbb
je
push
outsb
ja
outsb
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
dec
out
mov
and
add
add
add
add
add
add
addb
add
push
add
addb
add
mov
add
add
add
add
add
add
add
add
add
xchg
add
add
add
addb
add
add
add
add
add
add
add
add
add
call
add
add
add
addb
add
add
add
add
add
add
add
sbb
add
sbb
add
xor
add
dec
add
andb
add
pusha
add
addb
add
add
add
add
add
add
add
test
add
js
add
add
add
add
add
add
add
add
add
nop
add
addb
add
add
add
add
add
add
add
or
add
test
add
add
add
add
add
or
add
mov
add
add
add
add
add
add
add
or
add
enter
add
add
add
add
add
add
fadds
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
sbb
add
add
add
add
add
or
add
sub
add
cmp
add
add
add
add
add
add
add
push
add
call
add
add
add
add
pop
add
sub
add
in
add
add
add
xor
add
add
add
add
add
add
add
add
fwait
add
add
add
add
add
add
pop
add
add
add
add
add
in
push
add
add
add
in
add
add
add
in
or
add
add
add
add
add
add
add
or
add
add
add
add
sub
add
xor
add
xor
add
add
add
add
add
addb
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
ljmp
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
or
testl
add
add
xchg
ja
add
add
add
add
sti
sti
sti
sti
add
add
add
add
mov
add
addb
incl
incl
dec
int3
int3
inc
ja
cmpb
add
add
inc
ja
mov
mov
add
dec
int3
int3
inc
inc
orb
js
add
dec
int3
int3
inc
inc
orb
js
addb
int3
int3
add
inc
mov
ja
ja
mov
add
clc
mov
pop
add
mov
xchg
mov
inc
add
add
add
mov
xchg
add
js
xchg
mov
js
mov
pushl
mov
add
add
jo
int3
int3
int3
js
add
add
lock
int3
int3
js
add
add
addb
or
int3
int3
int3
js
add
add
add
popl
int3
js
add
add
add
popl
int3
js
add
add
add
popl
int3
js
add
add
add
popl
int3
js
add
add
add
popl
add
add
add
mov
add
add
add
ja
ja
ja
ja
addb
add
add
or
clc
addb
add
add
add
ja
jg
add
add
add
add
mov
mov
add
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
sub
add
adc
add
and
add
add
add
add
add
rolb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
ud0
add
js
add
ja
add
add
or
ja
clc
mov
or
inc
or
js
orb
or
js
pushl
mov
or
mov
js
or
add
add
add
int3
int3
iret
addb
add
in
int3
iret
addb
add
add
jo
ja
ja
add
add
ja
ja
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
pop
sbb
push
pop
sbb
push
and
or
cmp
push
add
add
push
sub
add
add
or
add
pop
add
pop
add
dec
ja
add
add
and
add
add
orb
fsubr
sbb
arpl
add
dec
ja
lock
add
add
adc
add
out
sbb
add
add
fsubr
sbb
std
arpl
cwtl
dec
dec
add
dec
add
loope
ja
movsl
inc
ja
add
add
add
test
cmp
add
push
inc
ja
add
add
decl
add
add
push
add
jne
add
add
add
add
add
add
orb
dec
add
add
icebp
sbb
adc
add
add
add
lock
and
push
add
add
add
add
add
icebp
sbb
add
add
adc
add
add
add
push
or
js
out
sbb
mov
movsb
jbe
cli
sbb
int
inc
ja
add
add
add
add
repnz
mov
test
in
sbb
dec
add
add
test
inc
test
ja
add
add
add
add
jne
add
test
ja
add
add
or
add
add
add
xor
inc
mov
add
add
or
add
add
add
dec
add
add
add
add
inc
ja
hlt
sbb
add
add
add
add
outsl
add
add
add
ja
inc
add
insb
add
add
xor
pop
add
gs
cmpb
cltd
pop
hlt
test
sbb
outsl
testl
add
mov
call
push
leave
popl
and
scas
das
std
inc
cli
cmp
shlb
push
mov
lea
loope
aam
out
mov
mov
adc
cltd
dec
cs
jle
fwait
mov
shld
mov
rcll
mov
pop
push
das
jno
leave
imul
xchg
data16
jnp
sub
inc
lock
popf
into
imul
sbb
jae
popl
lea
pop
loope
mov
cmp
cltd
and
push
or
out
ficoms
cmc
push
movsb
mov
push
add
add
and
hlt
pop
loopne
nopl
lds
cmp
xor
sub
movsb
xchg
cmpsb
lods
push
je
aam
movsw
xor
cmpsb
xlat
cmp
aam
lret
push
dec
and
movsl
sbb
push
or
jg
inc
xor
jns
sub
inc
and
pusha
or
pop
cmp
imul
or
loope
and
sbb
sahf
mov
out
xor
enter
in
mov
sbb
cmpsb
mov
lods
sub
pop
adc
pop
outsb
inc
mov
js
jp
int
call
insl
xchg
cmp
aaa
dec
iret
jae
jmp
add
xchg
cltd
jecxz
dec
dec
movsb
das
clc
sbb
mov
cmpsb
dec
adc
aaa
xor
adc
xchg
mov
imul
xor
xchg
leave
jmp
pop
jb
inc
inc
test
icebp
mov
push
or
insb
sub
bound
test
in
ret
and
add
mov
imul
pop
lret
test
xchg
adc
mov
and
jg
dec
mov
adc
fnstcw
inc
jge
scas
add
sahf
pop
orl
pop
fwait
xchg
subl
fmuls
call
ss
rolb
stos
rcrb
test
lcall
aaa
movsl
mov
int
xlat
fdivrl
les
loope
xorl
pop
sub
xchg
pop
add
stos
test
cli
fidivs
addr16
adc
ret
dec
sbb
loop
jb
inc
fwait
int
add
mov
mov
ja
test
in
std
imul
cli
scas
jle
and
xlat
push
fstl
or
jle
sti
jmp
decb
or
idivl
gs
insl
push
dec
mov
and
inc
mov
sbb
into
pop
xor
xor
cli
fsubs
lcall
jg
fwait
push
cmp
int
cld
scas
and
mov
js
pop
daa
sbb
dec
cld
pusha
test
js,pt
add
jp
xor
aad
in
sub
xchg
out
das
rorl
xchg
outsl
xor
pop
outsl
jae
movsb
nop
mov
jne
lret
loope
mov
sub
out
push
clc
pop
test
cs
aaa
pop
lds
out
sti
jno
test
xor
ss
add
add
xchg
xchg
dec
pusha
addr16
cltd
xchg
lock
xchg
in
int3
xor
mov
pop
loopne
call
adc
jns
sub
ljmp
test
sbb
xchg
mov
jnp
out
jnp
mov
call
cmp
out
faddp
mov
xchg
sub
pop
decb
xchg
cmpsb
cmp
sub
aaa
ja
dec
jne
movsl
xchg
fnstenv
mov
or
pop
xchg
aas
cmp
xor
je
test
mov
mov
and
inc
inc
pop
cmpsb
rcll
repnz
movsb
ficomps
test
popf
shl
push
cmpsb
xlat
lcall
lods
nop
dec
dec
push
bound
inc
and
fwait
mov
test
add
pop
cltd
mov
sahf
xor
push
pop
inc
es
jo
jb
mov
test
cwtl
xor
xchg
xchg
testl
xchg
lods
push
lahf
mov
mov
int
addb
repnz
mov
and
imull
shll
bound
js
mov
sti
jge
xchg
mov
jecxz
jp
or
stos
fnstsw
xchg
jmp
add
dec
mov
sub
test
and
pop
lds
cmp
fwait
adc
push
fcmovnbe
pop
mov
pop
fisttps
call
or
mov
and
jnp,pn
jne
std
nop
mov
fstpl
mov
inc
insb
lea
adc
pop
jno
adc
cmpsb
cmpsl
xchg
arpl
jno
jge
cmp
cwtl
js
ret
pop
vmread
test
push
ss
and
les
adc
bnd
repnz
popf
lret
sti
and
jle
xor
enter
mov
pop
dec
cwtl
jbe
cmp
inc
dec
into
cmp
or
adc
test
sbb
fdivs
inc
jo
inc
inc
dec
cmpsl
fldt
jmp
pop
xchg
sbb
shrl
mov
xor
mov
loop
mov
push
push
xor
out
std
pusha
push
gs
dec
xchg
push
pushf
pop
ds
cmp
mov
or
inc
xor
add
or
ljmp
cwtl
push
and
hlt
mov
cmp
maskmovq
jne
das
sahf
push
cwtl
add
push
jecxz
mov
push
imul
mov
dec
jp
outsl
pop
dec
fcomps
in
jecxz
std
imul
adc
push
xchg
sub
jno
dec
out
out
add
movsb
arpl
pop
movsl
scas
add
push
scas
xchg
jb
and
sbb
gs
mov
mov
mov
inc
stos
aaa
mov
cltd
je
jl
fcomip
jno
mov
pushf
les
aas
ret
das
pop
shl
hlt
mov
cld
icebp
les
inc
xor
test
add
add
lret
cwtl
shll
pop
leave
xchg
test
ljmp
daa
mov
cmp
scas
sahf
and
jle
cmp
mov
out
push
pop
leave
stos
call
mov
out
cltd
cmp
mov
popa
jae
shlb
lds
adc
orl
jl
shlb
dec
adc
divb
mov
add
push
out
jp
mov
sub
arpl
loopne
cmc
dec
repz
xor
ret
or
in
cmp
out
inc
or
imul
push
lahf
sahf
add
iret
cmp
dec
jmp
push
mov
or
shlb
inc
fstl
adc
out
lcall
repnz
jo
arpl
pop
mov
push
cli
mov
frstor
jb
ljmp
inc
repz
xchg
cs
mov
jnp
push
sbb
lcall
pop
jecxz
nop
pusha
bound
add
sub
sbb
sbbl
or
pop
xchg
lock
stc
or
xchg
cmpsb
movsb
push
popa
rolb
adc
push
lret
fistps
cmp
pop
mov
mov
dec
sub
mov
in
notb
lds
rcrb
jl
inc
dec
mov
clc
adc
sbb
ret
mov
out
cld
cld
xor
je
jb
pop
xor
or
xchg
mov
test
mov
ja
cltd
push
or
fldt
lods
incl
push
movsb
jecxz
test
xchg
or
pop
add
push
shlb
arpl
out
aas
ror
leave
fmull
cld
jo
cli
dec
lods
cmp
xor
fucomip
ficoms
sarb
jecxz
enter
xchg
pop
cmp
stc
and
decl
mov
pushf
cmp
add
cmpsb
add
push
mov
stos
andb
in
call
imul
and
movsl
outsb
sub
sbb
push
sbb
sbb
faddl
imul
xor
add
repnz
enter
xor
mov
out
adc
scas
andl
pop
pop
jmp
add
test
dec
cmpb
mov
mov
mov
cmp
push
mov
xlat
dec
js
pop
xchg
push
ret
or
jl
mov
daa
pop
je
out
add
cmp
sub
repnz
cmovge
hlt
aas
out
adc
fistpll
add
test
loopne
push
movb
xlat
ljmp
pop
cs
mull
pushf
mov
push
adc
ss
imul
sub
sbb
data16
inc
test
shrb
mov
not
arpl
lock
test
jg
andb
sarl
sub
aad
stos
dec
mov
arpl
cmc
das
fs
lahf
jno
cmpb
xchg
jecxz
aam
inc
sub
inc
test
cmc
ds
popa
imull
outsb
push
addb
outsl
and
inc
sbb
int3
data16
pop
int3
xchg
xlat
cltd
xchg
fld
int3
daa
mov
addr16
lret
hlt
mov
stc
push
cmc
push
imul
mov
nop
rorb
mov
iret
xor
jg
fstpl
mov
push
or
mov
or
jmp
fildl
aad
dec
sbb
or
adc
or
jbe
xchg
mov
adc
xchg
int
sub
std
mov
xor
sarb
in
popa
rcll
fnstcw
jmp
mov
daa
mov
pusha
aad
sub
cmpsb
inc
repnz
cmp
nop
push
sti
movsl
je
xchg
adc
shll
push
into
cmpsl
xor
and
mov
sub
icebp
jmp
popf
ftst
mul
aas
push
fwait
repnz
mov
and
fcom
pop
ror
je
imul
inc
cld
lods
jle
movsl
jge
or
ret
cltd
add
add
or
xchg
add
add
pusha
cmp
scas
clc
call
inc
mov
inc
mov
mov
comiss
rcrl
outsl
mov
adcb
out
xchg
in
push
sbb
dec
shrb
and
jmp
dec
fimuls
sbb
jecxz
adc
test
adc
mov
and
lock
mov
je
into
ja
pop
sbb
cmp
std
mov
es
fiadds
push
loopne
in
negb
ljmp
inc
sbb
loopne
inc
pop
or
adc
xor
sub
xor
sub
or
cmpl
fildll
push
mov
dec
ret
addr16
fimuls
pop
pop
cmp
xor
xor
xchg
sub
mov
and
or
adc
and
int3
ljmp
cmp
mov
jbe
xchg
add
add
or
jle
xchg
xor
pop
add
inc
push
or
mov
call
sub
push
mov
add
incb
orl
jno
aad
lcall
jo
cli
xlat
mov
stos
sti
add
mov
popf
lea
inc
enter
repz
inc
and
addr16
popa
sbb
dec
ja
mov
mov
jne
xchg
hlt
mov
ljmp
test
into
aas
repnz
xor
pop
dec
mov
sub
inc
and
xor
sub
adc
aam
mov
pop
cmp
mov
out
jge
negb
movsl
pop
xchg
xor
jns
popf
cmp
iret
fcmovne
cmp
imul
jmp
inc
xchg
lds
test
xchg
cltd
out
lods
pop
push
mov
add
int
clc
setle
xchg
lods
mov
mov
push
out
sahf
dec
pop
jmp
xor
imul
out
mov
in
sub
dec
cmp
sub
dec
add
pop
out
cmp
in
mov
xor
dec
pandn
push
in
outsb
sub
fsubs
xchg
add
cltd
push
sbb
aad
sub
xor
sahf
add
xor
adc
sbb
mov
push
pusha
out
inc
out
dec
sbb
int
or
jb
cmpsl
sbb
std
push
push
adc
pushf
fiadds
mov
ljmp
jne
fwait
sub
inc
ja
push
push
xchg
scas
ret
ljmp
loop
push
mov
add
fiaddl
push
sub
daa
pop
gs
in
sbb
lods
xchg
mov
mov
mov
jg
std
pop
mov
lock
testb
jp
icebp
or
or
xlat
leave
out
ds
jne
lret
testl
lods
int3
or
jae
xchg
mov
ret
fucomip
nop
mov
push
adc
scas
xor
cwtl
mov
jge
lock
outsl
fs
cltd
sub
shll
adc
dec
cld
in
pushf
jmp
inc
test
pusha
xor
add
fsubs
fsubrl
sbb
dec
cli
lods
mov
loope
push
xchg
xchg
loope
gs
scas
or
pop
lods
shll
das
incb
sahf
das
lds
xor
and
inc
pop
push
enter
imul
jae
push
add
pop
sbb
sbb
stos
push
push
mov
add
loope
not
push
rcrl
fdivrs
sahf
sub
sub
int3
jae
inc
cmp
mov
in
loope
add
cwtl
mov
mov
cs
mov
out
out
sarl
sbb
cmp
push
dec
sub
cmc
mov
mov
inc
je
pop
loop
addr16
push
out
jge
add
imul
aaa
mov
mov
lea
xchg
rcrl
clc
scas
mov
pop
mov
sub
imul
cmpsl
xor
or
hlt
cmpsb
test
je
loope
mov
xor
cmp
or
mov
dec
insb
sbbb
jno
int3
fsub
fs
or
mov
mov
int3
push
mov
sbb
decb
adc
mov
ret
add
cli
stc
ret
ret
insb
pop
scas
mov
lods
and
push
push
roll
cmp
pop
xor
inc
mov
aas
mov
cltd
fld
push
lods
cld
push
enter
mov
mov
inc
adc
xor
sbb
sbb
mov
mov
imul
scas
nop
fsubl
js
sahf
dec
cmc
jae
fisubs
loope
or
sahf
mov
xchg
jns
xchg
cmp
inc
nop
loope
clc
or
lret
in
adc
dec
add
jmp
fcomp
inc
insb
xchg
pop
pop
mov
add
adc
lods
sub
add
or
sbb
lea
push
xor
push
inc
pop
sti
push
iret
cltd
shll
sbb
out
lret
xor
fadd
dec
lret
shl
mov
test
mov
or
jecxz
jnp
dec
bound
outsb
mov
inc
fcoms
std
jne
addl
mov
insb
sbb
lret
bndldx
mov
mov
fidivs
pop
sbbb
push
and
cmp
cmp
fucomip
ds
sbb
jl
xor
push
pop
mov
or
jle
mov
adc
pop
inc
mov
loope
dec
push
jbe
add
adc
pop
sti
dec
cmp
jns
fdivs
mov
shll
pop
sub
mov
call
ud1
aas
mov
push
imul
inc
pop
mov
leave
ds
push
xchg
add
xchg
jae
sub
cmp
aam
inc
mov
out
fcmovnu
cli
aam
in
test
adc
sbb
nop
fbstp
jb
sub
lret
or
fsubl
outsl
cld
xor
dec
xchg
hlt
adc
or
xchg
and
push
add
je
cmpsb
into
lret
or
xor
cmp
mov
xchg
mov
out
daa
enter
repnz
ret
push
and
stos
ljmp
pop
pop
mov
mov
in
cmp
dec
jp
ficoms
rol
pop
sahf
or
sub
xor
mov
cmp
adc
shlb
mov
rclb
sbb
jge
inc
fmuls
dec
sarl
repnz
mov
les
loop
sub
repz
sub
ljmp
jb
push
sub
lahf
popa
or
bound
mov
push
test
cmpsl
jecxz
pop
jge
jnp
decl
push
sub
and
incb
jg
jnp
lret
xchg
jb
jecxz
xchg
and
clc
aaa
cli
fnstenv
pop
lods
in
sub
pop
jns
fdiv
mov
movsl
call
pop
fsubr
push
cmp
ret
pop
fsubr
test
xchg
insl
jge
imul
enter
add
lods
adcl
test
mov
xchg
sub
nop
cmp
test
push
or
fsubl
add
adc
mov
mov
les
xor
les
xchg
lds
and
in
xor
out
fs
mov
mov
arpl
xchg
hlt
test
mov
sbb
pop
add
and
or
jo
test
push
aaa
loopne
adc
mov
aas
clc
loop
dec
and
mov
or
mov
fnsave
push
fstpt
lret
xor
shll
jmp
cltd
cmp
pop
push
ficomps
sbbl
pop
insl
nop
outsb
jle
mov
dec
rcl
adc
in
lods
and
mov
dec
lahf
or
sbb
enter
add
and
xor
outsl
std
mov
negl
pop
xor
cmp
mov
push
pop
mov
sbb
or
setge
inc
lock
add
sub
sbb
daa
scas
add
or
add
ret
inc
in
repz
roll
shll
adc
push
push
imulb
movsl
in
cld
data16
pop
ret
int3
in
out
test
rcrl
mov
popf
mov
shlb
mov
sub
test
add
and
jae
push
dec
mov
mov
jecxz
mov
out
in
out
adc
int
insb
aas
and
loop
add
mov
mov
jno
adc
adcl
add
xor
or
jnp
insl
js
pop
leave
jb
inc
cmp
mov
pop
fcomp
adc
jmp
fs
inc
xor
cmpsb
adc
cmpsl
push
faddl
pushf
mov
scas
push
xchg
pop
test
mov
xchg
dec
cmp
data16
cli
cmpsl
icebp
mov
cmpsb
xchg
inc
roll
jb
and
xchg
pop
int3
lcall
clc
dec
pop
or
inc
gs
mov
mov
push
fwait
icebp
adc
mov
xor
roll
sub
nop
and
and
and
or
test
xrelease
in
fcompl
pop
je
adc
mov
add
jg
sub
insb
xchg
sbb
push
pop
add
and
test
aad
dec
je
mov
fdivrp
arpl
xchg
cmp
or
or
out
fildl
cs
mov
fcom
inc
movsl
xchg
mov
fcompl
aaa
scas
clc
test
int
dec
in
data16
inc
mov
add
arpl
enter
and
sub
jae
mov
das
dec
stos
ljmp
and
arpl
lret
add
inc
clc
loop
add
cmp
rcr
push
cmpsb
jecxz
or
in
pop
mov
gs
pop
cmp
pusha
lea
call
jp
cmp
cmp
mov
mov
or
bound
addr16
mov
jbe
fidivrl
imul
cld
jb
int3
aad
pop
jbe
pushf
push
or
adc
jecxz
and
cltd
mov
cli
dec
and
movsl
scas
add
lods
nop
lock
sarl
scas
je
rorl
mov
decb
and
lods
sbb
aam
xor
sbb
push
add
sbb
cltd
xchg
xchg
lock
mov
es
stos
js
fsubs
fbld
hlt
stos
repz
ss
daa
fbld
nop
push
pop
jno
xchg
pop
stos
aam
mov
jmp
inc
sbb
aad
test
int
dec
lret
shrb
sti
out
cmp
xchg
sbb
mov
fwait
mov
sub
fstl
mov
sbbb
adc
bnd
bound
sti
push
testb
lea
aam
hlt
sbb
cmp
push
int3
mov
popf
imul
jns
filds
in
lret
xchg
repnz
pop
aad
lcall
movsl
inc
or
xor
jb
inc
pop
fistpll
xor
or
ss
bound
cmp
push
jle
adc
pop
cmc
push
pushf
mov
inc
je
lods
shlb
mov
push
int
mov
adc
and
add
cmp
jb
push
jl
inc
pushf
sbbl
aam
fwait
ror
je
test
mov
jmp
jl
sub
mov
cmp
or
mov
out
lock
push
addr16
mov
add
fdiv
sbb
pop
xchg
arpl
mov
mov
hlt
push
inc
in
mov
mov
xor
out
cmp
xchg
cmp
push
inc
mov
leave
sbb
pop
dec
sub
xor
or
mov
nop
fwait
lods
loopne
jge
pusha
sahf
int3
inc
mov
jecxz
ret
lods
pop
and
bound
mov
outsl
test
xchg
cmpsl
pop
aad
mov
loop
sub
pop
push
mov
icebp
pop
jg
jecxz
js
xor
es
lret
or
push
arpl
push
movsb
xchg
ss
sbb
jle
shlb
xchg
int
xchg
cmp
pop
mov
fcomps
mov
jns
out
mov
cmp
push
lea
xor
dec
push
push
in
add
push
scas
xchg
push
cmp
xchg
outsb
mov
mov
xlat
hlt
pop
ror
repnz
mov
mov
sub
push
pop
and
push
or
movsl
jg
orl
mov
jg
xor
scas
mov
dec
test
adc
jo
outsb
hlt
lods
xchg
sbb
rorl
sbb
pop
rcr
rolb
sbb
dec
xlat
xchg
and
jb
lock
mov
xor
lret
mov
outsl
add
or
or
in
pop
scas
push
mov
sub
xlat
lock
pop
mov
lcall
movsl
into
push
or
jns
popf
std
push
push
dec
sahf
outsl
xchg
ss
mov
push
packuswb
jg
call
mov
nop
jns
loope
sub
stc
dec
push
add
enter
sbb
out
or
sub
repz
mov
imul
sti
jl
sub
mov
xor
mov
push
mov
xchg
fsubl
sub
cwtl
cwtl
insl
xor
pop
push
test
cwtl
repz
xchg
sub
dec
adc
add
add
rorl
sub
sbb
call
es
shrd
xor
sbb
dec
dec
cmp
ret
ja,pt
popf
daa
insb
push
repz
add
mov
imul
aam
rcrb
and
scas
sti
pop
repz
and
mov
push
sysenter
push
mov
push
xorb
sub
pop
insb
fs
cmp
dec
outsl
and
xchg
pop
xchg
jnp
dec
lcall
jp
xchg
cmp
cmp
push
lea
out
imul
xor
pusha
pushf
in
shll
mov
adc
mov
aam
and
roll
and
in
xchg
ret
adc
loopne
cmp
and
test
mov
xor
cwtl
mov
popa
xchg
pop
cli
out
movsl
mul
xchg
or
xor
mov
rol
mulb
in
call
jmp
mov
scas
or
fadds
xor
push
jae
dec
es
ror
dec
arpl
xor
mov
xchg
lock
insb
inc
and
inc
rcl
mov
bound
mov
outsl
lret
popa
outsb
jno
mov
leave
mov
fwait
push
outsb
loop
jle
mov
push
stos
sbb
mov
in
ja
push
pusha
mov
ljmp
mov
gs
faddl
mov
ret
in
icebp
xor
movsl
cmp
sbb
mov
hlt
jbe
inc
test
inc
hlt
gs
imul
pop
push
lcall
cs
mov
xor
jae
sbb
and
outsl
adc
leave
jmp
andl
jg
lcall
or
out
mov
outsl
mov
add
imul
cmpsl
sub
mov
fwait
dec
push
mov
sub
testl
sub
jp
and
in
mov
push
pop
inc
jg
nop
movsl
inc
mov
dec
mov
je
js
rcl
out
xlat
movsb
jno
cmpsl
ret
push
addr16
pop
arpl
sbb
jecxz
inc
cmp
stc
cmp
cmp
or
adc
daa
ffree
in
sub
rclb
sub
lods
mov
mov
imul
rcrb
cmpsb
notb
sub
dec
clc
lcall
adc
inc
dec
ret
cli
xor
loop
mov
pop
push
pop
cmp
roll
pop
call
lret
jp
js
jge
test
in
mov
shl
mov
sub
push
into
gs
sub
fld
jge
add
add
fwait
dec
sbb
inc
push
lea
sbb
push
cltd
jo
sbb
jb
xchg
mov
int
loopne
xchg
cmp
mov
div
movsb
lea
pop
das
mov
mov
cltd
mov
xor
cmc
scas
rorb
pop
and
scas
inc
push
mov
mov
mov
add
test
inc
cmpb
dec
or
addr16
not
dec
ret
sbbb
icebp
jo
hlt
loope
scas
and
arpl
shl
pop
pushf
lret
test
mov
push
into
ja
orl
adcl
pop
js
adcl
cmp
sbb
dec
xor
xor
inc
mov
or
scas
push
pop
jb
arpl
es
outsl
jb
xchg
adc
in
out
jmp
testb
clc
dec
cs
xor
mov
sbb
push
cmpsb
fistps
dec
xchg
sahf
andb
cmp
xor
stc
stc
je
sbb
aaa
fwait
add
pop
mov
jae
ljmp
out
aaa
repz
add
inc
push
lods
adc
lcall
test
mov
dec
ret
and
test
sbb
xor
adc
lahf
xchg
pop
ficompl
or
cmp
sbb
jbe
lods
lret
mov
jle
aad
jno
or
adcl
fimull
push
and
jne
pop
aam
mov
es
pop
into
add
call
sub
pop
mov
push
mov
testb
shlb
insl
and
loope
mov
jp
insl
scas
je
adcl
aam
fsubrl
and
sbb
sub
mov
repnz
aad
push
push
push
arpl
add
jmp
bound
cld
icebp
xorb
xchg
pop
sarb
cs
sbb
mov
lods
push
xor
push
lcall
stos
inc
mov
ficoml
cmpsb
push
ja
sub
hlt
cmpsl
scas
js
or
sbb
repnz
mov
cwtl
popf
pusha
std
outsw
repnz
jns
jmp
cltd
jbe
cmc
mov
sub
inc
pop
ds
xchg
lods
fs
adc
inc
xor
add
jb
push
push
cmp
out
mov
sbb
and
int
in
jbe
insb
aad
lock
lock
orl
sbb
sbb
aaa
cmp
repz
fadd
pop
test
or
loop
sub
neg
cwtl
sti
repz
roll
cmp
pop
out
iret
lret
pop
xor
add
xchg
fidivl
in
inc
jmp
out
outsb
xchg
cmp
lea
push
add
add
push
xchg
je
xchg
cmp
mov
repz
cmp
arpl
lcall
cmpsl
pop
cmp
loope
rclb
cwtl
ret
test
cmp
lret
xor
mov
dec
out
lods
inc
mov
repz
iret
lods
iret
mov
lret
ret
sub
scas
call
push
sarl
dec
lds
mov
dec
ljmp
stos
mov
stos
ljmp
adc
sbb
in
inc
stos
mov
pop
aaa
adc
ret
cmp
xchg
loop
xchg
xor
cmp
out
jne
out
cmpsb
push
aad
mov
cmpsl
gs
cwtl
je
test
test
cmpsb
gs
add
adc
or
stos
sub
dec
lds
mov
not
orb
add
and
outsb
mov
xchg
push
sbbb
std
ljmp
sub
or
fbld
adc
ret
out
pop
int3
mov
repz
repnz
sub
pop
dec
sub
mov
pop
jecxz
cmpsl
clc
jl
sub
jb
cmp
and
and
shrb
shr
jae
fidivrs
lcall
sbb
dec
jo
ja
hlt
aas
jge
xchg
mov
inc
loop
sub
pop
xor
int
jecxz
mov
lcall
lret
outsb
out
repz
call
xor
andb
int3
dec
outsl
and
mov
push
fstpt
sbb
divl
adc
mov
cwtl
mov
pop
outsb
dec
or
cmp
scas
sub
cmp
pop
jnp
cmp
push
pusha
jle
sub
adc
mov
mov
fsubrs
mov
dec
mov
filds
dec
pop
repnz
movsb
jl
popf
lods
idiv
cmc
pop
mov
push
push
and
jnp
loop
push
je
sub
and
movsb
and
dec
pop
adc
mov
fisttpll
mov
je
scas
shlb
aaa
mov
jo
loope
lret
ljmp
addr16
push
add
mov
jmp
mov
and
sbbb
or
add
fwait
cmpsl
xchg
insl
jae
leave
cli
dec
loope
wbinvd
push
pop
or
mov
inc
shl
sbb
mov
fwait
ja
or
push
mov
add
insb
xchg
pop
push
inc
mov
adc
scas
sbb
repnz
sbb
xchg
insb
jl
mov
adcl
pop
jle
mov
in
add
pop
insl
std
inc
sub
es
adc
push
lret
ljmp
push
jne
push
adc
dec
rcr
xchg
aad
adc
lahf
call
insb
cmp
imul
es
filds
dec
sbb
fisttpll
jl
sub
push
cltd
lock
sub
sbb
fiaddl
push
outsb
inc
stc
mov
jl
dec
pusha
or
or
dec
and
xchg
xor
lret
nop
loope
ficompl
push
ja
push
orb
rclb
cmp
push
push
scas
loope
stos
mov
cwtl
imul
clc
xlat
jg
cld
jo
fsubp
out
add
push
mov
cwtl
inc
dec
add
mov
sub
dec
add
testb
cli
orl
sbb
jae
pop
mov
xchg
add
jle
jnp
jne
cs
sub
stc
fs
sahf
testl
mov
mov
hlt
in
mov
inc
stos
sbbl
adc
dec
data16
mov
rol
vmulps
adc
jge
pop
add
les
ljmp
sub
jle
mov
cmp
mov
data16
insl
pop
mov
cmp
push
pop
jp
rclb
std
loop
ljmp
pushl
idivb
aad
aaa
inc
inc
sarl
outsl
or
sti
add
scas
sahf
push
in
popa
or
fdivrs
pop
and
adc
xchg
ja
std
push
test
xor
iret
xorl
aaa
xor
cltd
aam
add
ss
pop
lock
mov
stos
xchg
cmp
call
xor
test
aad
sbbl
xchg
imul
pop
jg
sbb
movsb
fidivl
lods
loopne
xor
sub
xor
dec
sahf
into
pop
adc
sbb
icebp
xchg
mov
stc
sub
das
fmul
sbb
test
ret
ljmp
add
loope
aad
mov
mov
inc
xor
pop
cmp
aad
mov
fs
jno
add
cltd
inc
mov
xchg
add
xchg
lea
sub
pop
pop
cltd
pop
and
xchg
cmp
pushf
stc
lahf
int
xor
sub
jae
es
fs
push
push
sarb
adc
pop
sbb
imul
ficompl
jnp
cmc
popa
ror
idivl
mov
adc
lock
xchg
insl
cli
lea
stc
sbb
test
or
and
call
inc
xor
cli
xor
ds
cmpsb
neg
ret
lods
xchg
xchg
inc
scas
pusha
add
ffree
cmc
mov
in
dec
push
pop
pop
push
aam
mov
aaa
sub
jno
outsl
xchg
pop
daa
rclb
cmp
stc
adcl
idivb
add
xor
aaa
and
and
lahf
cltd
xor
jae
mov
xchg
gs
mov
mov
jg
pop
ja
jg
mov
jnp
jne
inc
xorl
int
pop
test
arpl
fbstp
stc
andl
call
push
lcall
xor
clc
xchg
lret
inc
pop
insb
out
pop
out
pop
mov
mov
sub
add
adc
pop
cmp
das
push
mov
cmc
dec
loop
mov
mulb
jge
add
and
repz
clc
ljmp
inc
mov
push
mov
mov
xchg
mov
or
push
jp
sub
loope
mov
cmp
daa
xor
xchg
outsl
enter
movsl
add
push
lcall
shrb
sbb
test
imul
inc
mov
scas
jns
popa
scas
adc
jecxz
push
pop
xor
jnp
arpl
into
mov
fs
out
cmp
sub
push
pop
pop
data16
mov
scas
xor
mov
pushf
gs
jg
ror
push
insb
mov
cmpb
das
jp
cwtl
lret
pop
lea
cmp
xor
inc
outsb
xchg
or
jle
outsl
inc
in
sub
or
mov
ljmp
inc
imul
outsb
shll
ret
mov
xor
fwait
jnp
add
jp
ret
jle
dec
push
outsb
mov
push
ljmp
cmp
mov
aad
into
cmpsl
push
add
imul
dec
iret
sbb
inc
outsb
shll
es
push
out
inc
or
mov
or
inc
arpl
xchg
add
dec
pop
je
sti
mov
subl
fdivr
in
xor
lcall
xor
scas
or
lahf
popf
addl
inc
and
mov
push
pop
lods
dec
xor
ljmp
inc
jge
fnstsw
shrl
mov
xchg
test
jl
popa
push
jnp
insb
sahf
shl
xor
out
add
mov
inc
mov
sbb
repz
outsb
cmp
lahf
faddl
test
out
lcall
mov
and
das
enter
push
sar
sbb
shrl
and
push
push
push
aad
dec
or
test
xchg
out
inc
stos
and
or
mov
bsr
push
loopne
rcr
sub
dec
xchg
xor
pop
shl
xchg
shrb
adc
in
and
pop
lods
gs
lods
scas
xchg
clc
mov
xchg
jno
or
testb
push
jnp
pop
repz
mov
nop
xor
jne
stos
xchg
inc
mov
pop
inc
dec
int3
mov
or
dec
mov
rcr
adc
jae
sub
cmp
xchg
ret
iret
std
xchg
or
adc
inc
into
or
cmp
pop
and
pop
mov
jg
fwait
adc
pop
jb
insb
dec
dec
sub
das
dec
and
dec
sbb
inc
xchg
dec
shlb
sbb
jnp
fadd
sahf
iret
jge
lahf
imul
cs
loope
inc
dec
pushf
push
jns
stos
lods
aaa
sub
and
jae
arpl
inc
or
out
sbb
in
lea
or
repnz
ret
pushf
aas
xor
cs
inc
ja
dec
mov
push
inc
call
and
cmpsb
inc
push
in
movsl
and
sti
mov
jle
fsubrs
push
repz
cmpsl
jno
jge
mov
mov
xchg
shlb
and
shrl
cmp
xchg
mov
xchg
mov
insl
scas
xchg
adc
imulb
add
push
cmp
sahf
mov
cmpsb
mov
pop
mov
lcall
in
sbb
mov
pushf
inc
mul
jge
dec
enter
xchg
in
jo
imul
dec
pop
and
sarl
push
adc
push
dec
icebp
xchg
clc
inc
cmp
lahf
call
fists
jnp
insl
jp
push
jmp
and
push
jge
cmp
stos
cmpl
fstpt
out
in
movsl
fdivrs
sub
test
in
in
pushf
in
adc
bound
out
dec
adc
push
add
mov
inc
dec
or
mov
inc
outsb
xchg
jae
or
inc
lock
mov
add
mov
out
mov
pop
aad
mov
dec
mov
jnp
jle
add
push
jne
rorb
aaa
xlat
pop
rcr
rorb
push
mov
cmp
lods
mov
cmp
mov
fldenv
shl
lahf
xlat
lret
jno
pop
jno
inc
std
stos
sbb
aad
clc
popf
sub
xor
dec
aaa
int
int
jl
xlat
shrl
dec
ja
pop
mov
push
push
pop
cwtl
and
jns
ss
xchg
insb
mov
cli
lods
roll
ret
sbb
xchg
mov
xchg
in
mov
cmc
inc
in
cmp
jg
mov
adc
pop
mov
xor
cwtl
subb
pushf
and
adc
cmp
jp
loope
je
mov
data16
push
outsb
jae
in
imul
pushf
mov
insb
aad
sub
sti
popf
jg
xor
ds
addr16
add
jns
std
mov
lea
ljmp
xor
jb
dec
stc
pop
or
jbe
inc
inc
nop
fcmovne
loope
cmp
notb
int3
add
ljmp
sbb
test
aad
lds
jmp
add
or
dec
cli
flds
and
push
les
mov
fs
dec
sub
sub
dec
dec
pop
outsl
cmovae
xchg
ja
push
popa
sbb
out
add
pop
nop
fdivrp
arpl
cmp
mov
cmpsb
mov
bound
push
pop
mov
pop
aam
push
cmp
pop
stos
and
outsb
dec
or
cmp
inc
sub
in
lahf
mov
mov
lods
dec
mov
popf
in
das
subb
xor
in
jl
out
test
jno
movsb
mov
xor
push
mov
das
outsl
or
mov
jmp
repz
repnz
int3
cmp
mov
les
xor
repnz
shrl
pop
mov
sti
mov
mov
pop
insb
sub
jbe
pop
in
add
pushf
jmp
je
stc
int
loope
inc
rclb
mov
rorb
ljmp
hlt
dec
mov
ljmp
or
lock
adc
mov
inc
xchg
mov
pop
aaa
or
in
push
and
xor
js
push
loop
daa
fnstsw
jnp
mov
insb
adc
jmp
dec
mov
fwait
movsb
es
ds
jmp
lcall
je
jp
pop
int
mov
xor
mov
clc
mov
xchg
jno
sub
mov
xor
pop
test
push
in
cmp
pusha
inc
cmc
cmp
das
es
dec
pusha
jnp
fmull
cwtl
popa
and
dec
es
xlat
or
sbb
mov
cmp
popa
adc
jl
enter
fwait
push
adc
test
popa
adc
outsl
int3
into
sub
decb
mov
xor
scas
inc
xor
ret
inc
in
and
daa
mov
lret
mov
xor
fnstcw
cmc
adc
outsl
sbb
dec
mov
daa
add
inc
or
cmp
jecxz
in
cmp
push
and
or
xor
lret
sbb
inc
fdivl
lods
leave
inc
in
dec
int3
or
enter
cs
fwait
fs
jns
add
gs
sub
adc
mov
notb
fwait
sub
imul
adc
mov
test
sbb
mov
push
daa
ds
and
out
rcl
nop
xor
addl
je
or
pop
pop
push
push
lock
insl
pop
and
push
inc
out
xor
pusha
push
cmp
out
push
les
fcoms
movsl
push
mov
shlb
in
mov
fiaddl
push
pusha
push
xchg
push
push
out
cli
leave
or
mov
push
sub
sub
cmp
mov
clc
xchg
xor
daa
or
pop
cs
movsb
push
and
add
aam
in
jecxz
inc
pop
fldl2t
lcall
out
mov
sub
test
sub
dec
sbb
pop
mov
popa
mul
outsb
sbb
out
frstor
inc
and
adc
jle
push
inc
or
jecxz
mov
leave
mov
fstl
ja
outsl
add
add
jle
xchg
xchg
lods
jns
icebp
push
shlb
adc
in
pop
data16
jbe
negl
xor
incl
lods
popa
sbb
call
jle
notb
pop
scas
dec
testb
scas
repz
arpl
adc
adc
xor
lods
in
mov
loop
in
inc
into
mov
pop
lods
das
sbb
into
fildl
mov
or
stc
fidivrl
cmp
lret
jmp
cltd
mov
and
shrl
sub
mov
push
and
inc
push
pop
mov
push
sbb
popa
and
adc
sar
sub
shll
jle
inc
arpl
pop
inc
scas
sbb
cmpsl
out
mov
inc
mov
cmpsl
mov
xchg
lret
jg
int
or
stc
mov
sub
int3
in
jl
cli
mov
xchg
test
push
push
cs
lret
dec
pop
xor
mov
insb
aas
mov
ret
sbb
push
xor
and
xor
pop
sub
cmp
xor
xor
test
js
cmp
bound
sbb
dec
fidivrl
lcall
inc
sbb
xor
test
inc
fwait
xchg
gs
cltd
and
and
jnp
add
sbb
pop
jbe
cs
jb
jno
mov
mov
dec
mov
inc
ss
sub
inc
xchg
das
out
push
pop
jnp
adc
int3
jp
add
mov
mov
push
stos
shlb
cmc
aam
rcll
lret
into
adc
xchg
test
imul
mov
fnstcw
pop
dec
rcll
scas
lea
fdivrs
aad
add
add
cli
sti
idivl
dec
mov
in
add
shl
push
cltd
repz
clc
imul
or
adc
orl
xchg
mov
mov
mov
in
mov
xchg
jmp
add
jns
es
push
push
xchg
sbb
adc
sub
rorl
dec
stos
dec
xchg
push
shll
adc
lcall
jne
les
mov
add
mov
loop
hlt
sbb
aas
mov
xor
mov
std
mov
or
pusha
cmpsl
insb
push
cwtl
pop
fdivp
sbb
pop
push
xchg
outsb
push
outsb
push
sbb
and
push
sub
inc
pop
scas
and
inc
sbb
mov
ret
and
aad
xchg
cld
xchg
popa
cmc
jmp
ljmp
je
pop
inc
addr16
mov
mov
pop
aad
inc
cld
mov
stc
jge
or
or
sbb
cmp
and
insb
lock
jb
inc
test
dec
add
push
dec
outsb
mov
nop
add
mov
and
adc
lods
rolw
xchg
ljmp
jge
or
pusha
sub
dec
cmp
shlb
jmp
rol
push
and
add
jecxz
pop
mulb
pop
lock
lock
scas
ret
mov
or
ss
push
mov
cmp
dec
scas
mov
mull
pop
xlat
cmp
ljmp
test
cmp
dec
pop
adc
sub
sub
and
ret
mov
test
jne
mov
int
ret
sub
mov
pop
xor
sub
data16
mov
xchg
or
mov
dec
pop
sbb
sub
inc
dec
movsb
cltd
je
xor
push
aam
xor
cli
jp
mov
inc
stc
inc
xchg
in
mov
sbb
inc
push
and
fiadds
push
push
lea
inc
in
push
mov
mov
cmp
arpl
mov
popf
xlat
pushf
push
mov
lock
mov
mov
ja
test
add
inc
xchg
movsl
loop
bound
call
out
cmp
jge
imull
std
movsb
add
pop
aad
orl
cmp
test
add
scas
arpl
ss
cmp
jge
call
push
testb
sti
std
mov
jmp
sbb
push
mov
pop
lds
xchg
orl
lret
mov
fistl
sub
sbb
jnp
std
mov
xor
lcall
pop
repnz
ljmp
mov
mov
add
call
int3
pop
nop
fiadds
mov
loope
and
sub
in
jns
push
andl
xchg
shll
pop
sub
push
fsts
mov
popf
dec
inc
mov
inc
xchg
inc
lcall
pop
jb
mov
inc
push
addr16
adc
cmp
adc
bnd
pushf
loope
inc
sbb
push
sub
xor
push
call
dec
mov
mov
pop
jmp
test
sbb
sub
add
mov
fldt
adc
dec
loope
sub
sbb
xor
rorb
lea
inc
negl
sbb
les
pushf
xchg
mov
pusha
sbb
mov
bound
mov
cmp
and
mov
cwtl
xor
and
inc
cmp
push
inc
dec
shll
addr16
cwtl
jns
out
outsl
call
xor
into
ficoml
addr16
adc
jnp
xchg
mov
cmpsl
movsl
mov
iret
jmp
add
je
loope
pop
mov
or
push
mov
rcll
pop
arpl
cwtl
dec
mov
loop
push
sbb
outsl
inc
push
into
push
stos
in
popa
mov
fcompl
pop
xor
sbb
lea
popa
mov
test
bound
fcom
mov
lods
fdivrl
mov
outsb
pop
inc
shll
dec
sub
jp
pop
jecxz
adc
add
or
add
mov
aam
pop
jl
adc
dec
mov
mov
imul
scas
sub
xor
lods
xchg
lret
pop
xlat
das
pusha
jae,pt
sbb
ret
out
push
sub
inc
dec
mov
xlat
pop
sbb
xor
dec
push
add
mov
aaa
mov
imul
test
mov
jnp
clc
lahf
add
push
or
sbb
imul
outsb
adc
movsb
inc
stos
pop
leave
xor
bound
shll
mov
mov
jmp
int
cwtl
adc
xchg
mov
inc
lods
sahf
push
mov
rcr
sahf
mov
loopne
das
add
loopne
push
out
movsl
adc
call
or
mov
push
std
dec
and
minps
ds
pop
dec
iret
cmpsb
test
cld
lea
sub
popf
push
shlb
mov
adc
mov
mov
jecxz
stos
mov
sub
mov
mov
mov
mov
cs
xchg
lahf
push
enter
mov
push
shrb
pop
mov
loop
push
or
or
xchg
jb
pop
cmp
je
stc
mov
sub
jmp
imul
ja
mov
inc
jns
stos
lahf
inc
fiaddl
push
xchg
inc
cli
cmpsl
mov
push
xor
rorl
lock
jns
jo
inc
neg
ja
or
lahf
sub
rorl
sbb
jmp
jmp
mov
sahf
int
pop
inc
adc
inc
aas
cltd
inc
shl
mov
test
sub
push
dec
scas
sbb
fimull
nop
aaa
pop
shlb
push
pop
pusha
mov
dec
sub
cmc
jge
es
cmp
and
and
dec
mov
xchg
data16
jl
and
ret
cltd
stc
mov
mov
insl
mov
add
leave
int
xor
dec
xor
lret
pusha
push
stos
lahf
jb
and
fdivrp
dec
sbb
pop
mov
xorb
ret
aas
push
mov
lods
push
jo
int
lahf
pusha
cmp
inc
int3
gs
rcrb
sub
cs
pop
mov
enter
daa
jae
xor
and
mov
roll
jmp
repnz
jbe
push
jo
shl
sbb
adc
sub
or
sub
mov
scas
in
popa
repz
xor
and
add
cld
dec
dec
sti
gs
stos
inc
nop
xchg
pop
jge
sarb
push
pop
icebp
inc
push
into
outsl
cmp
or
pop
cmp
sbb
movsb
pusha
insl
sub
daa
fildll
jnp
aaa
xchg
or
add
pop
fsubl
aas
lret
fs
imul
stos
xor
or
xchg
ficoml
shl
jb
pop
nop
inc
xchg
test
pop
test
popf
xchg
jmp
fdivs
lea
testb
mov
dec
pop
cmp
xor
inc
dec
dec
cmp
inc
lods
xchg
sbb
add
test
mov
test
iret
imulb
xchg
testb
repz
and
push
call
mov
sti
test
inc
xchg
fs
cmp
fcomps
jmp
pop
pop
je
stos
sbb
shll
pop
fsubp
pop
mov
sub
lcall
sub
ret
hlt
ljmp
or
shrb
sahf
gs
in
cli
dec
xchg
leave
mov
cmpsl
mov
in
mov
test
mov
pop
imulb
daa
mov
sti
mov
mov
mov
arpl
xor
aam
sbb
pop
sub
push
pop
sub
or
pop
mov
lret
nop
cmc
hlt
jae
xchg
out
popa
cwtl
movsl
mov
xor
andl
iret
push
pusha
imul
test
pop
dec
mov
mov
adcb
test
vmaxsd
pop
es
in
scas
lcall
cs
sbb
es
scas
pop
or
mov
fiaddl
adc
jl
aad
dec
mov
cmp
pop
sub
aad
mov
test
jg
lcall
jecxz
scas
jns
and
icebp
stos
rorb
dec
pop
flds
rolb
jge
mov
testl
and
adc
nop
aaa
inc
cmp
cli
sbb
fwait
lahf
mov
xchg
xchg
out
ja
add
hlt
lret
xchg
out
cwtl
push
adc
mov
lahf
mov
decl
out
sub
and
add
mov
push
sub
mov
mov
sub
arpl
or
out
or
mov
dec
dec
or
cmp
and
mov
xor
in
adc
cltd
sbb
das
add
mov
inc
aad
mov
add
inc
ds
and
fadd
and
or
pop
ss
mov
arpl
mov
xchg
in
cmpsl
out
gs
adc
mov
xchg
test
sbb
push
mov
popa
cld
mov
jae
std
sbb
push
sub
js
pop
xor
loope
sti
push
int
xor
xchg
adc
inc
sbb
mov
add
mov
call
gs
dec
xchg
rorb
rorl
push
jl
lret
sub
pusha
scas
cmpsl
hlt
imul
jecxz
incb
int3
out
subl
lret
xor
sbb
movsl
inc
jp
xor
cmp
xchg
cltd
fists
into
sbb
dec
push
gs
xchg
aas
xchg
int3
jnp
adc
or
pop
mov
dec
xchg
test
fldl
add
lods
sbb
lcall
pop
mov
add
cmp
mov
pop
rcll
pop
inc
mov
outsb
cmp
clc
dec
lahf
xchg
xchg
push
cmpsb
loopne
mov
iret
adc
popf
sbb
cli
pushl
sti
aad
adc
sahf
and
scas
in
rolb
lea
out
test
cmp
adc
mov
out
mov
out
mov
repnz
push
push
cmp
mov
cmp
pop
jno
sub
mov
test
stos
iret
jl
push
test
fbld
jns
adc
gs
sarl
sbb
rorl
push
out
xor
mov
mov
xor
mov
fbstp
imul
and
popf
ljmp
int
or
xchg
ficoms
mov
or
xchg
and
sub
mov
add
mov
sbb
bound
jno
cld
std
popa
stos
pop
cmp
inc
aas
aaa
pop
inc
sti
jns
std
jge
das
jne
mov
das
sbb
js
or
fisubrs
loopne
dec
iret
adc
sbb
xchg
mov
lea
jne
ret
rcll
xchg
add
xor
sbbb
lods
inc
rcrb
xor
push
xchg
xor
mov
add
mov
mov
mov
dec
sub
adc
xchg
add
add
pop
pop
xor
xchg
movsl
xor
push
push
mov
mov
push
loopne
lahf
push
pusha
pop
mov
int
out
xchg
adc
mov
addb
mov
movl
lret
pop
pop
mov
imul
sti
mov
jb
mov
jecxz
hlt
or
dec
and
mov
add
ja
adc
sti
into
enter
and
and
sbb
lret
arpl
adc
inc
arpl
andb
popa
inc
test
push
jp
aas
inc
add
mov
mov
movsl
add
cmp
shr
push
push
add
icebp
flds
push
outsb
fisttps
xchg
hlt
adc
roll
or
mov
and
cld
popa
mov
add
mov
jae
std
mov
movb
sti
push
or
ret
pusha
xchg
or
sub
fs
pop
jmp
test
fldt
cmpsb
cltd
shl
dec
xor
xchg
pop
or
add
add
cmp
fisubl
xor
push
out
cmp
mov
xor
lahf
call
sbbl
aad
stc
sbbl
xor
ja
add
sub
inc
movsl
ja
divl
or
and
mov
jne
sbb
and
sbb
les
jmp
push
outsl
mov
mov
push
lret
std
pop
add
push
mov
xor
out
mov
adc
pop
imul
adc
insl
jne
inc
mov
mov
movsb
ss
shl
das
xchg
iret
mov
rcrb
imul
shlb
jo
ficoms
adc
mov
std
cwtl
sub
ror
lret
jnp
fidivs
pop
xor
mov
scas
and
or
enter
cmp
jno
add
push
cmp
mov
ja
stc
pop
sarl
dec
rcrl
es
mov
push
sarl
ja
push
es
outsb
imul
xchg
mov
cs
dec
mov
rolb
out
scas
push
bound
and
mov
cmpsl
inc
leave
inc
push
test
cmp
and
jmp
sbb
inc
push
push
mov
xchg
cmp
sub
jno
adc
jp
push
clc
test
jns
fists
mov
jle
ss
pop
cmp
lea
push
lds
xor
lret
adc
cmp
sub
loop
std
popl
jecxz
push
mov
xlat
repnz
push
icebp
fidivrl
aaa
xor
fwait
in
push
adc
mov
pop
bound
push
inc
jb
jns
fsts
fcomi
xor
cmpsl
cpuid
push
mov
pop
mov
jge
out
xchg
xchg
out
out
es
dec
sub
mov
hlt
sarl
add
lods
lds
xor
inc
mul
jb
daa
addr16
cmpsb
insb
imul
cmp
jmp
mov
cs
or
mov
pop
mov
ret
xchg
test
mov
popa
testb
rcl
adc
jnp
bound
add
mov
faddl
lret
stc
cmp
into
notl
aam
pop
push
ficoms
cmp
cs
adc
out
mov
ljmp
xchg
sub
cli
popa
xor
sti
jg
scas
repnz
jns
xchg
jb
mov
test
inc
arpl
jno
cwtl
jo
outsl
mov
mov
mov
sbb
out
xchg
or
mov
outsb
jge
mov
xchg
jns
sub
inc
jbe
icebp
mov
dec
stc
out
jae
jo
xlat
push
cmp
sbb
arpl
mov
inc
shrb
repnz
push
and
inc
std
sbb
push
loop
cmp
jmp
inc
mov
es
xor
or
lods
sti
jae
cmp
bound
lahf
popa
das
shr
push
mov
insl
and
mov
je
jno
mov
enter
std
cs
jno
mov
fs
inc
jne
daa
aas
xor
xor
adc
gs
mov
push
sbb
pop
jg
adc
add
lahf
lock
add
fstl
fimull
mov
lods
movsb
jecxz
fcmovnu
push
iret
in
stos
jle
aaa
cmpsl
in
stc
mov
movsb
jnp
sub
jo
test
rcrl
ret
lret
add
sub
ds
pop
inc
dec
lret
jns
mov
mov
adc
xchg
test
bound
dec
scas
aaa
inc
inc
or
lods
jno
mov
ds
negl
les
inc
mov
jbe
aas
inc
push
adc
rolb
and
out
add
movsb
stos
faddl
popf
lahf
je
icebp
es
mov
xchg
sbbl
call
jns
ret
xor
insl
ljmp
lret
cmp
sub
dec
aam
push
mov
xchg
jb
push
hlt
dec
sub
push
adc
pop
pop
mov
sub
xchg
sub
into
stc
cmp
arpl
scas
mov
jo
add
cmpsl
js
ret
xchg
leave
fnstsw
xchg
jmp
mov
addr16
addb
adc
loop
scas
fs
imul
add
jb
ret
popa
or
out
push
xchg
mov
jmp
shll
pop
mov
jle
repz
mov
dec
pop
mov
adc
xchg
testl
pop
ret
xchg
outsb
xchg
sbb
jle
dec
sub
push
mov
stos
mov
pop
push
add
jno
in
je
dec
dec
mov
imul
into
insb
push
out
jo
mov
daa
cwtl
push
pop
cltd
pop
enter
repz
ret
movsb
inc
sub
jne
xchg
movsl
xor
or
pop
jb
int3
xor
sahf
jns
pushf
mov
bnd
cmp
addr16
scas
mov
pop
notb
push
scas
call
stos
les
adc
fstl
mov
orl
mov
dec
stc
or
xchg
in
pop
xchg
jl
or
call
mov
aas
lret
in
sub
pop
bound
adcb
jge
dec
xchg
sub
addr16
inc
hlt
or
push
dec
dec
jnp
jns
pop
test
out
stos
jns
and
jmp
lcall
xor
cwtl
cmp
sub
cmc
jl
cmp
inc
pop
push
iret
out
cmp
mov
sub
pushl
sub
push
jns
repnz
push
mov
xor
or
ret
fucomip
or
not
jg
shrl
push
adc
cmp
roll
movsl
decl
out
adc
movsb
rolb
inc
pop
jmp
xchg
lret
inc
hlt
out
pop
test
sub
les
shrl
ds
jmp
fs
xchg
aad
push
dec
mov
dec
add
or
clc
ret
adc
sub
mov
aam
add
lahf
sbb
xor
sub
sub
sub
je
and
imul
test
mov
pop
cmc
fcompl
mov
loope
mov
jnp
push
test
xchg
cltd
jns
mov
jp
xchg
iret
dec
popf
adc
popa
into
add
mov
cmp
js
aaa
lret
jecxz
pop
sti
cmp
jno
dec
add
pop
test
frstor
sub
lea
adc
jne
push
sub
fsubrl
js
inc
sub
pop
jle
lods
fisubrs
jecxz
out
imul
mov
fistpll
xchg
scas
insb
dec
mov
push
subl
xor
loop
inc
addr16
mov
jbe
daa
mov
dec
pop
mov
sub
sub
inc
lret
add
cmovbe
adc
push
mov
adc
cltd
es
cmpsl
push
fs
out
lds
lahf
pop
lods
push
pop
mov
orb
and
gs
push
xchg
mov
mov
mov
jo
mov
ficompl
les
xor
mov
sub
xorl
xchg
stos
aas
movsl
bound
jmp
inc
out
xchg
push
jmp
repnz
lcall
int3
es
das
sbb
lret
ljmp
andb
sbb
mov
inc
mov
xor
out
mov
cmpsl
cld
dec
cmpb
inc
xchg
push
repnz
cmp
dec
lods
dec
dec
inc
or
or
xchg
or
enter
fs
sub
in
mov
push
ja
arpl
or
pushf
cmp
dec
pop
out
es
add
in
lea
in
and
in
xchg
inc
push
mov
dec
and
inc
dec
push
arpl
push
in
test
pop
inc
push
add
and
pop
cli
rolb
push
xchg
in
jae
dec
push
fiadds
lds
sti
ljmp
sarl
sub
push
nop
mov
mov
mov
push
xor
add
into
pop
rcl
cmpsb
xchg
imul
and
xchg
sub
js
cli
jmp
push
add
jge
xchg
inc
pop
les
or
or
inc
cmpsl
mov
dec
inc
dec
pop
xchg
ja
cmp
mov
stos
inc
stos
cmp
inc
lahf
shll
sbb
test
mov
dec
or
lret
push
dec
rol
mov
pop
inc
pop
mov
xor
sub
divb
hlt
jne
adc
and
iret
adcb
js
dec
xchg
insb
pop
js
sbb
jae
loopne
and
inc
fnstcw
sbb
xchg
jo
jmp
lock
push
shll
dec
adc
mov
sbb
mov
jle
sub
inc
loopne
dec
jae
sbb
mov
push
add
pushf
cmp
shr
sbb
mov
push
adc
je
or
jne
add
lret
int3
or
mov
inc
xorb
mov
dec
not
xlat
test
push
js
cmpb
pop
pop
mov
fiadds
cltd
mov
adc
call
clc
lea
or
jbe
repnz
jl
icebp
xchg
push
xlat
imul
pusha
test
cwtl
xor
rolb
cmp
pop
cmp
adc
pop
test
inc
repnz
cwtl
xchg
xchg
shlb
stc
test
pop
fists
sbb
adc
ds
pop
and
sub
adc
mov
sub
aaa
scas
push
dec
or
sub
lea
mov
xchg
test
inc
ret
add
push
stos
lock
sub
mov
popf
enter
outsb
push
sbb
push
negb
daa
pop
jb
fwait
call
mov
imul
mov
lcall
mov
aas
mov
inc
out
mov
mov
jecxz
pop
xchg
mov
sbb
lock
mov
mov
mov
aad
cltd
dec
dec
lret
and
loopne
int3
loop
fcmovne
frstor
jns
add
lods
popl
add
out
jb
xor
and
popf
dec
and
enter
xchg
mov
dec
ds
enter
sbbb
cmp
push
ja
xor
divb
out
aad
lret
jno
loopne
cmp
mov
dec
and
pop
pop
test
inc
test
push
bound
xor
daa
fadds
inc
pop
call
sarb
mov
dec
icebp
scas
xchg
push
and
orl
fimuls
jne
sbb
jns
cmp
jno
outsb
aaa
adc
fwait
repnz
jae
lret
fcompl
mov
outsb
gs
push
xchg
and
pop
sahf
mov
or
xchg
and
fistl
pop
jb
sub
fstps
mov
pop
mov
jns
or
and
je
or
sub
lea
xchg
daa
or
mov
dec
sbb
int
cmpsl
push
dec
adc
mov
push
arpl
cmc
jecxz
xor
aaa
aaa
and
aas
mov
imul
xorb
bound
fcmovb
jge
out
addr16
dec
mov
jle
lret
movsb
fwait
imulb
pop
je
adc
out
fidivs
inc
sbb
mov
xchg
sbb
in
enter
mov
repnz
xchg
daa
clc
cmp
xor
lock
dec
cmp
jno
mov
pushf
stos
add
shrl
adc
add
push
xchg
sub
mov
add
aas
inc
jno
push
out
add
fidivs
nop
fs
ss
jo
inc
push
in
mov
loop
xchg
pop
bound
sub
adc
mov
and
lock
and
add
ret
dec
lods
arpl
in
pop
sbb
leave
pop
add
mov
push
mov
adc
xchg
dec
and
adc
test
jb
es
movsl
sbb
jmp
xor
jmp
xchg
push
cmp
popa
aaa
push
mov
movsl
cmp
je
jnp
fldlg2
cmp
pop
lcall
dec
push
nop
jge
pop
mov
movsb
into
test
jmp
rcrl
enter
mov
jecxz
pushf
mov
arpl
jp
pop
add
loopne
push
and
fwait
inc
cld
sbbl
test
dec
jp
ficomps
ljmp
mov
xor
jmp
xor
test
scas
xchg
enter
jge
jno
jno
jmp
jmp
cmc
pop
fcoms
cs
pop
fiaddl
sub
std
clc
xor
ret
xchg
cs
or
stos
inc
clc
sbb
sub
aaa
pop
dec
psadbw
xchg
jecxz
pop
popf
mov
in
inc
and
xchg
mov
xor
outsb
mov
enter
mov
shrl
sub
mov
xor
or
inc
pop
rcrl
icebp
push
fsts
mov
jns
cld
sub
loope
xorb
dec
or
lods
mov
bound
cmp
push
test
or
mov
mov
das
xor
mov
push
xchg
xor
or
mov
pop
or
mov
dec
lods
cltd
test
in
iret
sub
cmpsb
dec
nop
pop
cmp
lret
inc
pop
adc
aas
mov
insl
sub
aam
push
sbb
movsl
push
jns
movsl
pop
les
arpl
mov
jb
stc
xchg
inc
in
aad
ds
std
inc
push
pushl
jg
push
mov
lds
out
std
mov
mov
int
pusha
lods
or
add
movsl
adc
cmpsb
pop
inc
loopne
mov
jns
es
pop
push
mov
out
test
push
adc
mov
insl
pusha
dec
outsl
push
fcomps
mov
cwtl
lcall
ret
mov
popa
sub
loop
divb
in
out
fistps
cmpl
cmpsl
sub
add
add
dec
xchg
inc
inc
adc
jle
lods
fdivs
add
inc
lea
push
or
test
fmuls
icebp
push
std
adc
pop
arpl
movsl
or
xor
ret
sti
sub
into
mov
test
cmp
sub
or
sub
or
xor
aaa
dec
fwait
sbb
sbb
andb
arpl
push
sti
loop
sub
insl
je
add
lret
and
mov
cmp
add
inc
jl
pop
hlt
hlt
mov
add
mov
clc
arpl
cmp
sbb
adc
xchg
shl
sbb
adc
das
loope
lock
push
in
into
sbb
sbb
and
aas
add
inc
sub
aas
sbb
ficoms
in
fsubrl
cmp
push
mov
lock
adc
mov
gs
pop
and
sti
pop
xor
clc
imulb
sub
ret
out
sub
mov
stc
repz
xchg
mov
test
fs
std
xor
mov
pop
sti
sbb
mov
call
in
scas
mov
jne
jl
push
add
jns
comiss
pushf
popf
data16
js
popaw
cmpsl
adc
jnp
cwtl
loope
or
rsqrtps
adc
orb
mov
jbe
fwait
xor
xchg
xor
cli
inc
inc
js
and
mov
fsubrs
lret
mov
std
mov
aam
xchg
cmp
cmp
mov
fs
push
cmpsb
dec
outsl
loopne
ret
pop
push
push
or
inc
push
jmp
adc
fidivs
ss
xor
pop
xor
insb
fildll
jne
repz
pop
add
lods
push
out
int
call
pop
scas
in
push
ds
sub
push
or
cs
inc
cmc
ljmp
pop
loopne
leave
leave
sahf
xor
sub
sti
pop
enter
mov
push
dec
pop
inc
cmp
jmp
lea
mov
lods
dec
sarl
lcall
sbb
mov
xchg
outsl
mov
cld
movsl
inc
mov
daa
cltd
std
jl
and
test
and
mov
sti
fnsave
pusha
cltd
xchg
add
push
fdivp
sub
inc
jl
aas
jmp
fisttpll
mov
insl
loopne
xor
mov
sub
and
imul
icebp
ja
outsb
jge
jne
cmc
imul
jb
outsl
push
rcrl
xchg
cmpsl
hlt
sbb
lock
xchg
mov
add
mov
xchg
ds
mov
sarl
lcall
xor
nop
jnp
dec
and
sbb
jg
xchg
mov
movsl
roll
test
mov
sti
ds
jae
test
mov
push
stc
sbb
fadds
cmp
aad
pop
imul
xorl
bound
pop
add
adc
mov
sti
lret
mov
push
call
out
imul
out
inc
or
cli
push
stos
push
lods
sbb
and
adc
in
sbb
jg
loopne
imul
das
cmp
sbb
movsl
xor
jg
sub
dec
dec
aad
inc
mov
add
sar
fldt
insl
aaa
in
daa
dec
enter
pushf
jnp
dec
lods
mov
sub
sub
xor
push
cmp
int
mov
mov
addb
inc
xchg
das
pop
fsubs
enter
scas
inc
or
pop
jle
scas
addr16
cmp
jmp
cmp
cmp
out
lret
sub
push
sbb
int3
aam
scas
push
rorl
les
in
imul
or
sbb
pop
cwtl
popa
jb
movsl
mov
fnsave
ficompl
mov
jecxz
pop
jbe
outsl
pop
fnsave
xor
cmp
call
roll
pushf
lock
outsl
pop
outsb
subb
icebp
pop
sub
xchg
or
fisubrl
jns
mov
mov
push
pop
jne
insb
dec
mov
lret
fidivs
pop
aam
mov
dec
js
xchg
mov
mov
cmp
jae
lods
repnz
gs
push
shl
sbb
pop
xor
jecxz
inc
xlat
add
lcall
cmpsb
pop
pop
and
inc
push
movsl
and
sbb
sub
sbb
inc
cmpl
xchg
popf
mov
xor
mov
ret
mov
cmpl
je
xor
add
and
gs
jp
jecxz
cmp
out
lds
leave
mov
sub
push
test
sub
xchg
fists
cltd
out
jnp
fildl
loop
mov
pop
push
mov
aam
push
sbb
add
push
and
out
mov
pop
pop
cwtl
adc
xchg
jecxz
xlat
out
stos
cmpsl
jae
sbbl
inc
xlat
test
stos
or
xlat
lahf
cmp
and
lahf
int3
pop
push
into
and
ffreep
cmp
jecxz
add
cmp
add
dec
dec
sub
fistpll
add
xchg
push
xchg
mov
iret
mov
mov
daa
jp
xchg
inc
mov
jno
shll
or
lods
idivl
mov
faddp
xchg
lods
pop
cvtdq2ps
and
pop
mov
and
push
iret
pop
pushf
xor
xchg
adc
pop
sub
bound
add
sbb
push
mov
fmull
adc
adc
adc
pop
jo
inc
mov
or
cmc
int
lahf
adc
mov
das
add
faddl
mov
xchg
ljmp
icebp
mov
mov
sbb
adc
shlb
cmp
gs
loop
push
dec
add
mov
mov
popa
cmpl
mov
negl
testb
mov
and
imul
fldt
sbb
repz
push
mov
mov
mov
stos
adc
ljmp
jp
add
test
fpatan
add
xchg
aad
mov
push
adc
cli
imul
fdivrl
mov
icebp
sub
cld
iret
mov
lds
sbb
jmp
idivb
mov
subb
pushw
aad
xor
shl
mov
repz
dec
xchg
xchg
lret
inc
subl
jae
mov
popf
lahf
mov
push
adc
outsb
or
subl
inc
push
loop
add
mov
outsb
xchg
add
aaa
dec
clc
cltd
xchg
inc
adc
aad
stc
mov
dec
push
sub
push
orl
in
jecxz
aad
mov
das
pop
iret
mov
testl
fucomi
leave
sbb
cmpsb
push
repnz
xchg
fcomps
insb
insl
gs
xor
data16
pushf
jae
sahf
xor
mov
and
xchg
popa
mov
add
sub
lea
scas
movb
add
gs
add
int
xor
mov
push
stos
push
sub
test
out
cmp
xor
xchg
cwtl
imul
das
inc
xchg
repz
aas
fistl
mov
mov
jne
mov
cmp
lahf
xchg
jg
jnp
adc
adc
push
ljmp
push
sbb
decl
jge
and
mov
xor
mov
mov
add
sbbb
in
in
jnp
pushf
outsb
and
insl
lret
fcoms
gs
pushf
mov
mov
cmc
sub
add
je
daa
xchg
mov
or
and
or
add
xchg
out
loope
jae
js
sub
sub
sbb
pop
mov
push
out
fcoml
aam
pop
scas
roll
stos
lret
imul
test
adc
xchg
subl
int3
xchg
aad
lcall
mov
leave
jo
add
fcompl
adc
icebp
fsubrp
icebp
and
push
sub
pop
mov
js
and
xchg
les
jnp
push
pushf
xor
inc
pop
imul
xchg
pop
dec
fnstsw
decb
std
int3
addb
cld
insb
fmuls
in
cmp
movsl
sbb
jnp
ficoms
dec
scas
inc
out
jnp
fcomip
movsl
lods
push
sahf
mov
xor
aam
negb
cmp
cmp
mov
adc
rol
movsl
xor
ds
pop
add
mov
sub
mov
in
leave
or
ret
out
loopne
mull
push
lods
or
inc
rcll
cmpsl
dec
sub
sbbb
adc
stc
cmp
mov
rcll
or
jmp
and
mov
and
out
loope
lea
dec
and
push
loope
jne
insl
lea
fimuls
mov
sub
mov
mov
ja
outsl
or
rorl
xor
stc
ljmp
pusha
rcr
sub
push
and
jnp
flds
mov
enter
into
adc
hlt
sbb
cwtl
mov
aad
test
or
mov
in
leave
cmp
sbb
testb
lret
xlat
stos
ret
in
cmp
cmp
push
mov
in
into
out
mov
les
movsl
test
push
pop
xchg
fistpl
pop
fiaddl
dec
add
and
out
jl
add
sub
addr16
jl
xchg
rcl
xor
int3
scas
jae
insb
cmpl
movl
sbb
or
sub
push
stos
pusha
arpl
repz
xor
mov
addr16
divb
ja
gs
in
xor
xchg
lods
insb
loopne
daa
xchg
adc
adc
int
in
sub
cmp
movsb
adc
or
mov
lods
daa
and
mov
call
pop
jnp
mov
push
out
arpl
dec
xchg
dec
or
fwait
inc
pop
arpl
movq
es
and
in
cmp
lea
inc
jo
popf
mov
add
cmp
inc
incb
cld
adc
dec
inc
daa
push
ds
and
push
les
push
sahf
add
inc
jecxz
cmp
jns
lahf
mov
pop
insb
adc
pop
iret
decb
leave
icebp
xlat
pop
sub
cmp
aaa
xor
and
sarl
mov
xor
test
lcall
cmp
std
lds
je
mov
and
lock
or
lock
shr
pop
push
inc
loop
call
cvtdq2ps
outsb
out
imul
mov
scas
xchg
pop
pop
cmp
fcom
and
les
f2xm1
inc
aam
out
sbb
pop
xchg
push
int3
ss
adc
lret
out
ljmp
mov
mov
addb
loop
jl
ficompl
movsl
mov
sub
cltd
cmp
subl
pop
adc
jp
loop
rcrb
mov
arpl
xor
pop
inc
dec
sbb
sub
lret
jge
xor
shll
scas
inc
jne
or
cld
jl
out
aaa
test
lret
mov
addr16
fcomps
aas
dec
and
xchg
mov
repnz
scas
clc
adc
jo
xor
pop
mov
shlb
xor
jnp
xorl
cmpsl
insl
adc
lock
add
mov
cmp
mov
push
lahf
ja
pop
shrb
or
sub
mov
lcall
add
scas
mov
pop
sbb
mov
in
inc
sbbb
fisubrl
repz
mov
shrb
xchg
data16
movsb
push
fs
loop
sahf
ficompl
jno
adc
mov
imul
mov
fdivs
cmp
mov
in
lahf
imul
mov
jmp
outsl
sahf
rcll
xchg
pop
or
mov
gs
loopne,pt
sar
bound
and
push
mov
inc
add
std
xchg
bound
jne
adc
mov
nop
adc
pop
push
jmp
loop
inc
repz
lcall
adc
add
cltd
inc
enter
cmp
fwait
jp
movsl
cltd
outsl
sti
aas
cmp
cmp
imul
rolb
stos
fwait
mov
repnz
pusha
pop
dec
mov
cli
ja
adc
hlt
aas
cmpsl
mov
cmp
push
mov
test
mov
xlat
shlb
movsl
dec
inc
aad
aas
xor
or
cmp
cmp
dec
push
test
inc
dec
pop
add
mov
popf
outsb
mov
imul
sub
out
xchg
push
mov
aam
xchg
in
xchg
ljmp
xor
mov
cli
sub
nop
std
ss
std
outsl
push
mov
int3
imul
cs
sbb
jp
jge
dec
test
out
movb
and
push
mov
ror
inc
gs
fidivrl
mov
push
adc
jg
inc
or
rcll
repz
mov
and
xor
xor
out
inc
mov
sub
loopne
stos
add
pop
pop
call
jmp
mov
inc
in
add
dec
imul
sbb
iretw
into
xlat
popa
movl
call
or
cli
pusha
pushf
xor
testl
fbstp
arpl
lcall
inc
mov
out
xchg
aaa
add
ljmp
dec
push
sbb
call
pop
mov
repz
pop
negl
in
test
cwtl
aam
sub
adc
mov
shlb
jmp
inc
ljmpw
fildl
pop
outsl
or
add
mov
and
mov
or
adc
cmp
pop
ja
inc
ficomps
push
mov
sahf
pop
movsl
xor
mov
fiadds
mov
jp
imul
and
sbb
aaa
sub
cld
ret
xchg
push
ret
cmp
cli
xchg
sub
sti
pop
xlat
jae
pushf
jge
cmp
push
mov
jb
not
daa
xlat
sti
es
sub
sub
push
test
dec
movsb
imul
into
push
notl
mov
mov
adc
lds
xchg
std
fisubl
mov
movsl
scas
cmp
add
in
xor
in
shlb
fisubl
jg
movsl
stos
ja
or
adc
mov
call
int
dec
cmp
int3
mov
into
pop
or
pop
mov
sub
jecxz
subl
and
jno
inc
in
mov
sub
call
subb
pop
dec
clc
sub
adc
imul
pushf
pushf
xchg
push
imul
lds
sub
stc
daa
sub
mov
mov
mov
add
lock
bndldx
aad
imul
loope
subl
in
push
xchg
push
fidivrl
jne
push
movsb
adcl
push
dec
mov
sub
movsb
aas
lock
out
mov
xchg
std
push
pop
push
and
and
in
pop
jmp
out
lret
ret
add
jg
icebp
arpl
add
inc
movsb
icebp
push
fcomps
xchg
aaa
cld
out
out
xchg
movsl
push
stc
jae
mov
inc
sub
push
int
xor
sbb
cmpsl
stc
inc
cmpsl
push
inc
sub
test
stos
jne
fsubr
arpl
fisttps
out
pop
out
in
pop
int
mov
jns
mov
lock
aam
jnp
fcmovbe
repnz
or
jnp
push
popa
repz
inc
xchg
cmpsb
fstpl
cld
or
sbb
push
mov
push
fstp
jecxz
shlb
out
pushf
stos
inc
js
fmuls
jp
lock
push
out
jns
insl
ror
es
xchg
or
push
daa
test
inc
pop
loopne
mov
sub
into
lcall
mov
fwait
sbb
inc
xchg
xchg
xchg
and
dec
mov
cmp
xchg
sub
and
nop
cmc
inc
popa
sub
adc
imul
in
jae
pop
sub
lea
pop
aam
les
rcrl
pop
pushl
mov
cmp
scas
inc
fidivl
fcmovnbe
out
cmc
xlat
bound
jle
adc
outsb
imulb
xor
ja
test
push
mov
enter
jl
incb
insl
jmp
inc
jecxz
sarl
outsl
fldt
lahf
push
jg
dec
sbb
aas
subb
and
pop
dec
inc
enter
push
jle
dec
xor
cmp
and
cmc
cwtl
pop
sub
ds
pop
call
push
cmp
push
push
in
mov
add
ds
lock
xchg
icebp
mov
jbe
shlb
push
xchg
pop
shll
pop
and
daa
and
je
or
push
and
pop
or
cmp
aam
sahf
lahf
in
cwtl
add
push
dec
inc
jne
int3
ljmp
je
pop
dec
push
push
sub
and
mov
lods
lds
cmp
out
das
dec
inc
xor
test
add
sbb
sub
jo
out
xchg
push
popf
iret
gs
jg
jb
and
daa
cltd
push
insl
inc
add
sbb
and
leave
add
push
sub
mov
inc
mov
cmpsl
add
lahf
or
cmp
loop
jno
sub
out
pushf
sbb
mov
imul
push
jns
mov
icebp
sbb
mov
cld
pushl
lea
lock
dec
loope
movsl
push
adc
xor
aaa
jp
rolb
mov
mov
rcll
add
or
mov
fiaddl
mov
dec
test
shrb
cmpsl
hlt
mov
push
loope
stos
mov
push
dec
aad
dec
add
sub
call
cmp
inc
jecxz
add
xor
cmpsl
jns
jg
dec
mov
adc
pusha
dec
push
xor
sbb
cmpsb
dec
mov
stc
jne
xor
ret
call
push
sub
lret
dec
mov
enter
pop
jl
or
sub
sbb
xchg
cltd
rorl
lea
fimull
cmp
sbb
jb
mov
push
shll
test
aad
rolb
jb
test
pop
push
adc
cmpsb
shll
hlt
fbstp
mov
mov
stos
push
adc
mov
push
loop
mov
repnz
gs
and
inc
sar
rorl
loope
mov
nop
push
fcmove
sbb
fsubrp
ret
imul
loope
mov
mov
addb
mov
push
les
jb
jnp
inc
bsr
adc
pop
in
xor
adc
outsb
push
cwtl
add
mov
scas
and
sbb
in
adc
push
cmp
xchg
inc
cmp
mov
or
inc
repz
jno
push
cmp
std
dec
insl
lcall
mov
push
test
sarb
jbe
loop
and
dec
dec
adc
cli
inc
xor
cli
xchg
cmc
js
push
popf
cmp
xor
movl
jge
mov
mov
add
dec
push
pop
js
pop
sahf
lcall
pop
hlt
push
ds
insb
jb
add
in
ljmp
mov
aad
icebp
out
idivl
decb
sti
mov
sbb
xchg
inc
std
test
lret
imull
ret
mov
test
cmpsl
je
rorl
insb
add
xor
inc
xlat
pop
xlat
ja
mov
jo
hlt
gs
dec
lahf
mov
jno
sti
sti
mov
mov
les
shlb
mov
pop
mov
stos
xchg
stos
inc
sbb
clc
aas
or
test
shlb
pop
loope
xor
add
sbb
push
movsl
flds
les
pop
std
int3
inc
lret
cltd
rol
ds
imul
lods
pop
mov
loop
mov
cmp
jno
lahf
mov
sarb
nop
mov
push
popa
jmp
pop
pop
ljmp
xchg
shll
sbb
lods
nop
fcmovu
fisubrs
repz
shll
sub
ret
or
sbb
fucomp
mov
je
dec
aad
lock
sahf
ret
insl
ljmp
push
push
sub
iret
push
mov
push
sub
mov
lods
sub
mov
cmpsb
insb
xor
pop
fimuls
fnstsw
aaa
cwtl
test
test
mov
sub
cmp
add
mov
jnp
pushf
test
dec
fldt
mov
out
mov
cmp
enter
jae
xchg
in
cmpsb
sahf
xchg
inc
add
mov
xchg
pop
ret
rcrl
mov
cmp
xlat
cld
pop
jle
jns
lock
sub
adc
insb
push
xlat
push
fld
cltd
insb
lock
loop
add
xchg
jle
std
dec
lock
cli
push
mov
and
fldenv
add
push
bound
out
mov
popf
pop
stc
in
mov
lock
inc
dec
mov
mov
int3
xchg
aad
and
lock
mov
mov
out
mov
and
shlb
addr16
fsubrs
pop
mov
dec
mov
ja
rolb
pop
arpl
jle
loope
adc
cmpsb
out
dec
mov
gs
in
sub
sub
jg
xchg
clc
cmp
push
sahf
push
into
sti
popf
jnp
or
jb
cld
movsl
in
add
idivb
lcall
lcall
enter
mov
push
mov
cwtl
roll
cmp
xchg
add
add
repnz
add
inc
hlt
and
mov
pop
push
popa
pminsw
repz
jl
add
jle
cmpl
ret
mov
push
ficomps
jecxz
das
pop
jmp
push
rclb
scas
mov
jns
cs
push
in
mov
cmp
mov
test
and
pop
int
mov
dec
imul
fdiv
xor
insb
ja
or
push
ds
fiaddl
insb
test
dec
dec
add
ja
loope
mov
iret
mov
sbb
xor
adc
int
sub
sbb
or
mov
sub
movsl
imul
sub
pop
stos
push
js
and
sub
icebp
andb
js
sub
arpl
lcall
leave
icebp
jmp
call
hlt
mov
inc
xlat
mov
push
mov
adc
or
cmp
mov
loop
insb
pop
push
cli
push
sub
rorb
les
lahf
push
mov
sub
js
push
mov
lods
daa
test
sub
imul
sti
xchg
sbbb
cmp
je
outsb
imul
pop
sbbb
fadd
or
js
pop
hlt
out
imul
xor
add
xor
sbb
es
push
je
sub
jns
popf
hlt
xchg
xchg
jp
ds
arpl
cmp
mov
sbb
stos
adc
or
xchg
mov
rcrl
sub
push
and
add
dec
jecxz
cmp
test
in
in
and
xlat
aad
mov
ret
je
mov
sbb
jb
jns
sti
xchg
xchg
mov
lahf
in
mov
lods
push
cwtl
mov
and
into
lds
add
sti
test
sbb
xchg
in
iret
sub
in
sbb
push
mov
sub
adcb
xlat
ficompl
orb
lcall
fimuls
sub
fnsave
xchg
cmp
inc
mov
in
push
jge
fninit
cld
cmp
test
mov
jno
mov
push
xchg
mov
in
xchg
lret
mov
out
test
iret
std
arpl
sbb
in
fwait
jmp
add
iret
imul
ds
push
iret
sbb
mov
cli
ds
hlt
stc
fldenv
jae
push
inc
fnstenv
sub
add
outsl
and
mov
xchg
andb
and
sub
adc
xor
insl
outsl
gs
fcoml
inc
das
and
mov
je
xlat
ret
mov
mov
mov
sarb
stos
popf
idivl
into
imul
cmp
dec
mov
and
cmpsl
sbb
pop
mov
roll
adc
clc
inc
mov
fs
stos
dec
shl
and
test
fistpll
imul
into
push
xlat
fidivrl
cmp
movb
inc
cmp
inc
lock
push
add
xor
inc
mov
stos
xor
imulb
pop
mov
stc
inc
xchg
jae
mov
insl
lods
pop
jg
aad
dec
jbe
xor
sub
pop
sub
scas
or
pop
out
mov
mov
add
add
fcoml
cmc
dec
inc
mov
ss
xor
jns
jmp
mov
cmp
or
ret
icebp
movsl
scas
xchg
popf
xchg
jl
test
lock
xor
out
int
inc
adc
or
inc
mov
ficoms
lahf
push
push
rorb
sbb
cmp
movsl
adc
xchg
rcll
sahf
sbb
jg
ds
in
jb
ret
mov
call
mov
sub
mov
pop
push
pop
jns
cmp
push
mov
mov
sbb
pop
mov
inc
jne
inc
jns
fnstcw
mov
adc
sub
mov
xor
frstor
sub
movsb
xor
pop
js
int
data16
sub
sarb
ljmp
in
or
movsb
mov
pusha
push
sbb
adc
cli
gs
add
cld
imulb
mov
dec
adc
pop
lods
sub
sub
test
lret
adc
mov
mov
mov
inc
insl
cld
add
ds
xchg
fs
sar
not
or
jmp
or
shll
cmp
outsb
movsl
inc
xchg
decb
mov
or
ds
insb
insl
je
test
inc
ret
xchg
loopne
call
je
sbb
shll
and
push
jae
push
jle
scas
jo
icebp
scas
xor
jmp
daa
pop
outsl
mov
ds
cmp
daa
pop
es
inc
test
or
sahf
lock
sahf
sti
pop
pusha
mov
sbb
aad
mov
inc
add
jle
or
xor
cmpsb
add
mov
ljmp
lret
adc
shrl
test
in
imul
jb
sub
jp
mov
lcall
inc
ds
jae
mov
mov
loopne
pop
pop
rorl
aaa
sahf
cmp
jecxz
and
js
mov
xchg
lds
sbb
test
cmp
sarl
out
out
cmpsl
xor
sub
iret
gs
jmp
fisubrs
xlat
push
pop
aam
imul
shll
xchg
xchg
inc
rcrb
add
jle
pop
enter
mov
mov
lret
jne
cmp
adc
adc
cmp
cmp
cs
xor
xor
mov
ljmp
popa
pop
stc
push
add
int
insb
rolb
push
mov
ret
pop
mov
andl
push
punpckldq
mov
xor
popa
jne
dec
sub
fistps
xor
rcl
dec
push
or
repnz
mov
inc
push
test
std
fsubl
out
hlt
and
imul
add
outsb
mov
lcall
cli
pop
fs
cmpsb
enter
inc
pop
jp
scas
pop
cmpsl
hlt
into
pop
xor
lcall
mov
test
popl
insl
jo
xor
mov
subl
and
mov
mov
inc
std
mov
pop
test
sarb
lret
int
push
out
popf
mov
xor
sar
fistpll
pop
sbb
jns
aas
test
push
cmp
sub
or
shl
adc
sti
sub
sbb
mov
imul
cmp
mov
cwtl
mov
popa
and
insb
or
leave
ds
test
add
or
push
loopne
jle
sbb
mov
aad
inc
sbb
jne
jns
add
nop
inc
add
mov
in
and
roll
out
inc
adc
jbe
pop
das
in
push
loopne
push
jg
lcall
enter
or
pop
mov
jmp
sub
cmpsb
ljmp
mov
sub
pop
fsub
stos
mov
ljmp
test
sub
xlat
lret
mov
jno
js
pop
lahf
das
and
sbb
enter
jecxz
popa
xor
jg
outsb
jmp
add
jl
inc
lods
outsl
jno
or
mov
stos
ret
and
rep
jne
test
cli
test
mov
dec
xor
repz
out
call
mov
mov
test
lahf
into
daa
aad
sub
and
xor
mov
mov
fadd
lock
jecxz
dec
mov
int
lds
aas
sbb
es
sub
mov
hlt
filds
dec
mov
clc
cmc
outsb
dec
xor
cltd
pusha
lahf
jbe
mov
inc
stc
xor
sbb
cmp
xchg
push
xor
test
loop
push
stos
sub
cmp
cmc
or
fcoml
adc
push
lock
sbb
xchg
cmp
xchg
mov
icebp
negb
mov
test
out
cld
mov
mov
insb
jl
and
pushf
jnp
push
add
lods
cmp
lods
push
push
or
mov
rorb
lock
push
adc
cmp
mov
insb
xchg
jnp
sub
sahf
das
hlt
mov
mov
push
push
ja
cmp
adc
lea
sbb
add
mov
inc
xchg
xchg
in
xchg
aad
lock
lcall
into
push
lcall
stc
xchg
sub
xor
sub
push
push
jo
js
les
push
fs
imul
jns
or
outsl
pop
add
xchg
inc
pop
fdivs
sub
jg
test
adc
push
push
or
enter
dec
sbb
inc
imul
test
push
sub
cmp
mov
mov
or
fs
fidivrs
mov
fsubp
jne
testl
jecxz
xor
jmp
jge
or
stc
and
insb
std
jo
jl
mov
mov
lock
mov
faddl
and
push
jnp
cmp
add
or
inc
xchg
xchg
mov
xor
cmc
movsb
fcompl
mov
jae
and
ftst
pop
fadds
negl
jmp
cmp
xchg
sarl
mov
add
out
push
cmp
ret
sahf
std
jl
fwait
push
inc
jp,pn
pop
xchg
mov
pop
movsl
pop
dec
test
mov
cmp
loopne
xchg
or
dec
adc
in
sbb
in
sbb
in
add
ds
jbe
fnstsw
jne
nop
fidivl
mov
mov
or
mov
inc
xor
mov
pop
rcrb
sbbb
cmp
sub
dec
fidivrl
pop
or
hlt
xchg
pop
stc
push
xchg
stos
xlat
cld
rcll
pop
mov
imul
in
rolb
pop
icebp
jp
jae
mulps
cmp
and
cmpsl
or
sbb
test
test
jle
jl
into
inc
lods
icebp
imul
into
ret
fisttpl
iret
mov
loope
xchg
lods
imul
outsl
sub
xchg
outsb
xor
inc
loopne
jo
rclb
mov
push
int
insl
loope
out
call
fcoml
jbe
mov
fwait
jae
fs
das
ss
inc
mov
inc
xchg
dec
jb
addb
stos
pop
adc
push
js
int3
sbb
pushw
fmul
mov
jns
dec
divl
hlt
cwtl
lcall
lock
psubd
mov
mov
repnz
es
cmp
into
add
repz
dec
inc
into
dec
popa
dec
inc
sbb
xchg
push
into
ret
jno
bound
mov
mov
or
jp
in
mov
loop
inc
jp
iret
dec
or
mov
ret
sub
popa
mov
cli
fists
repnz
rorb
fwait
in
cmp
jmp
sbb
cltd
mov
xchg
nop
push
in
push
adc
xchg
mov
xor
fisttpl
push
loopne
jns
cmpsb
test
cmpsb
and
sti
jne
or
repnz
cs
aad
jp
jecxz
ja
mov
mov
insb
mov
cmp
or
and
lret
xor
dec
aam
inc
xor
ljmp
hlt
mov
stos
scas
fsubrs
dec
pop
arpl
pop
inc
lcall
add
loop
pop
aaa
or
in
lahf
mov
cmp
incb
jmp
rcrb
and
mov
ja
xchg
clc
fstpt
or
dec
aaa
pxor
out
mov
rcll
pop
jno
pop
xorl
hlt
fdiv
push
xchg
xchg
and
mov
aam
xchg
repnz
dec
insl
dec
stos
repz
adc
jge
and
jg
js
push
cmp
inc
subb
inc
push
ja
push
xchg
push
xorb
loop
jno
movsl
popf
jnp
mov
cmp
imul
push
adc
rcrl
imul
mov
js
loopne
jg
ret
fstps
out
scas
call
xchg
dec
call
test
push
pop
jo
addr16
int
sbb
arpl
mov
jae
rol
add
out
test
lods
add
adcl
mov
xchg
vmovhlps
sbb
mov
dec
mov
cmp
sub
push
xor
enter
xchg
cmpsb
cmp
push
lcall
xor
call
push
dec
cwtl
lret
dec
rcrb
lock
sub
pop
push
sbbb
mov
clc
xchg
das
fcmove
mov
adc
cwtl
test
call
pop
xor
lods
adc
ficompl
cmp
dec
outsl
data16
fldl
jge
out
ljmp
xchg
jbe
lods
fisttpl
std
cs
movsb
sbb
insl
jmp
cmpl
mov
xor
push
fwait
push
ds
cmpsb
pop
mov
jg
sbb
ljmp
sahf
cli
cmp
cmp
push
pop
jp
inc
xchg
adcl
aam
out
aas
imul
loope
sub
mov
rcl
loope
std
push
scas
mov
jl
push
mov
outsl
pop
sbb
and
divb
insl
push
and
lahf
adc
bound
call
and
jnp
test
orl
or
popf
mov
inc
push
out
jp
cwtl
popf
adc
aam
inc
xlat
repz
imul
mov
xchg
mov
or
mov
mov
lods
push
enter
lods
pop
shll
iret
icebp
test
xor
xchg
ja
sbb
jno
lock
test
xchg
cmp
jge
push
mov
or
or
pop
pop
pusha
andl
andb
jg
and
mov
or
aam
sub
mov
jb
pop
rcrl
dec
mov
xlat
rolb
fadd
and
aas
loope
js
inc
fucomp
shlb
mov
lods
je
call
cmc
xchg
adc
out
or
loop
out
dec
inc
out
cli
lds
mov
xchg
arpl
sbb
fisttps
inc
dec
aam
jbe
in
sbb
addr16
push
or
inc
aam
inc
fistps
and
das
adc
pusha
add
in
pop
stos
pop
or
sarb
cmpsb
jb
dec
cmp
scas
scas
lret
sahf
pusha
in
lahf
push
add
and
inc
inc
nop
cmpsl
mov
inc
xor
lea
pop
cmp
push
jnp
inc
jl
mov
pop
sub
push
roll
mov
orl
outsl
fcomp
mov
or
lods
aad
lds
push
pop
lret
sti
popf
je
lods
pop
add
xchg
cmp
int3
aaa
cmp
xor
sub
xor
lret
mov
jae
bound
lret
jns
test
jno
xor
jo
icebp
dec
sbbl
mov
push
loope
jne
xor
sbb
scas
add
fnstcw
push
pushf
lock
adc
hlt
aas
and
stos
pop
hlt
push
clc
mov
outsl
xor
jnp
dec
stc
jmp
insb
jnp
adc
scas
mov
jmp
jp
inc
or
inc
push
pop
mov
ja
aam
loop
fwait
inc
mov
sub
and
push
mov
orl
test
mov
cmp
lea
push
loop
dec
cmp
faddl
out
in
in
add
ja
fsts
cmp
mov
mov
xchg
insl
cmp
jp
call
insl
mov
xor
pusha
sarl
rorb
dec
and
aas
dec
cmpsl
inc
push
mov
call
mov
pop
xlat
mov
add
std
decl
pop
jnp
jbe
pop
fwait
adc
mov
xchg
sarl
push
jns
test
or
adc
loop
cmovns
xchg
xor
adc
nop
sub
aas
inc
das
push
daa
and
xchg
xchg
xor
loopne
mov
mov
jns
xchg
shl
cli
fiadds
ss
jecxz
mov
imul
adc
mov
cmp
jecxz,pt
hlt
loop
sbb
mov
xor
mov
jno
dec
call
xchg
jl
add
fwait
mov
or
loope
mov
out
dec
addr16
pop
cltd
insl
jne
and
addb
xor
in
push
pop
mov
cld
push
and
jg
pushf
in
cmp
and
in
in
pop
ret
insl
scas
pop
or
incl
pop
movsl
gs
std
mov
shlb
insl
clc
dec
outsb
out
push
mov
or
xchg
add
adc
or
je
aaa
xor
shrl
insb
jmp
aam
sbb
int
pop
dec
stos
mov
add
cwtl
data16
out
ljmp
push
sub
cmp
imul
cmp
sub
int3
cli
cmpsl
mov
mov
ret
jmp
cs
mov
inc
pop
cwtl
push
in
nop
jns,pn
repnz
lock
enter
xlat
insb
mov
jns
test
add
cs
xchg
mov
mov
iret
jno
and
dec
push
mov
out
jmp
out
jne
mov
popa
adc
push
inc
inc
leave
fwait
rclb
iret
lods
adc
shrb
stc
shrb
dec
outsb
push
cs
stc
xchg
pop
jo
loope,pt
fstl
movsb
jno
iret
ret
push
fstp
enter
and
jae
xor
mov
mov
fistpl
add
popf
jae
and
inc
adcb
pushf
lcall
loopne
rep
data16
mov
dec
pop
mov
mov
jg
xorl
das
lahf
and
and
jmp
pop
add
mov
jbe
push
test
cli
cwtl
repz
cmp
popf
fsubrs
fbstp
jge
xchg
les
sbb
lds
lret
mov
movsb
jb
negl
in
push
dec
push
or
push
scas
add
or
outsb
mov
decb
shll
and
pushw
inc
jnp
mov
cmc
jne
add
and
sbb
push
adc
pop
push
inc
mov
in
mov
inc
xchg
add
dec
push
pusha
dec
add
push
cmp
mov
addr16
orb
loopne
aad
dec
lahf
mov
lcall
cmp
jnp
xor
adc
adc
jmp
fsubrl
jecxz
pop
cltd
push
add
or
test
push
push
jae
cltd
inc
testl
stc
fs
push
pop
xchg
dec
inc
shl
xor
xor
inc
stos
mov
sarb
stos
cmp
fsubrp
or
mov
fisubs
xchg
stc
movb
pop
pop
leave
dec
data16
fs
dec
add
mov
jmp
fistpl
out
hlt
enter
xchg
enter
hlt
inc
imull
in
mov
ds
mov
add
xor
lods
imul
arpl
lcall
jbe
xchg
lea
outsb
cwtl
pop
push
and
dec
dec
mov
mov
or
and
aam
dec
sub
push
xlat
ss
cli
or
inc
push
in
and
mov
pop
in
jae
outsb
jbe
ss
out
xchg
push
mov
adc
and
push
shl
mov
arpl
xlat
fwait
les
out
popf
aas
xchg
pusha
push
inc
nop
cmp
daa
popa
je
xchg
hlt
pusha
lahf
sub
sarb
pop
cltd
inc
mov
mov
insb
jnp
mov
pop
fisubs
scas
mov
sbb
pop
loopne
jle
fildl
out
pop
push
aaa
add
jl
jge
fisubs
xchg
mov
lret
int3
mov
data16
es
clc
bnd
push
adc
je
pop
xchg
jo
iret
adc
icebp
lret
ret
fadd
mov
lret
sub
pop
jp
lds
pop
add
mov
jg
sarl
daa
push
cmc
outsb
and
fs
push
mov
mov
fcoml
and
rorl
lea
mov
inc
icebp
xchg
mov
sub
les
push
mov
xchg
jno
movsb
loop
pop
pop
sar
scas
adc
inc
insl
jno
int3
add
lahf
test
loop
add
in
outsl
jg
pop
push
loope
es
mov
lds
mov
addr16
adc
les
imul
mov
mov
add
test
cmp
test
pop
push
test
push
test
pusha
pop
xchg
cld
shl
ret
pop
or
enter
in
mov
jge
repz
push
jecxz
leave
icebp
int
dec
out
adc
sbb
test
jne
push
in
lods
loope
aas
pop
inc
out
ljmp
dec
repnz
test
jmp
clc
pop
jecxz
adc
cmp
add
enter
bound
mov
loopne
movsb
int
movsb
and
out
mov
icebp
int
imul
add
jge
in
lea
insb
dec
dec
mov
dec
push
pushf
xchg
add
scas
cmpsl
mov
insl
repnz
jecxz
xlat
push
in
sub
dec
das
or
push
roll
sub
jno
aaa
sub
xor
dec
inc
fldl
jmp
push
and
xor
shrl
mov
xchg
mov
inc
inc
jbe
je
insb
mulb
xor
sbb
cli
jl
iret
pop
lock
subl
inc
or
test
dec
sti
sub
mov
das
xor
mov
inc
xchg
xchg
test
xchg
sub
enter
inc
pop
cli
mov
sbb
jg
sti
lds
cld
lods
iret
jge
scas
fmul
and
and
cld
cli
push
mov
xor
in
adc
inc
add
cmpsb
cmp
scas
inc
pop
sbb
test
sbbl
adc
mov
loopne
lea
pop
cltd
jae
xchg
adc
scas
pushf
mov
mov
jg
rcrl
xor
dec
and
iret
aas
sbb
bound
adc
add
pop
sbb
out
subb
lods
adcl
jo
mov
xor
test
popa
aad
dec
push
xchg
mov
lea
movsl
push
inc
add
data16
mov
lods
or
mov
and
lods
inc
fmulp
inc
jge
inc
sbb
xlat
cltd
xor
adc
jle
xchg
enter
pop
bound
dec
sbb
outsl
cmpb
jl
in
adc
mov
mov
or
enter
sbb
imul
sbb
mov
sub
sbb
jne
or
pop
pop
mov
bound
mov
add
push
cmc
push
pop
mov
out
xor
cwtl
add
hlt
pushl
ja
out
enter
jle
jmp
mov
push
imul
mov
fsubs
adc
mov
cwtl
ss
iret
negb
cmpsb
sub
sbb
push
and
mov
dec
and
jg
mov
test
in
and
mov
mov
cmp
test
ds
jb
jb
hlt
dec
subl
test
in
je
pusha
cs
xor
cwtl
cmp
pop
and
mov
sbb
xchg
push
outsb
jne
test
daa
cltd
cltd
std
movsb
aam
dec
lea
cmp
mov
cmp
add
mov
jb
cltd
mov
in
pop
inc
or
add
movsl
scas
scas
dec
adc
or
adc
mov
pop
out
push
mov
mov
adc
sahf
mov
push
sbb
mov
xchg
dec
popf
fwait
and
lret
ret
imul
fsubs
leave
xor
xchg
out
mov
andnps
sbb
js
inc
scas
mov
or
push
and
stos
sbb
jge
mov
xor
iret
inc
arpl
in
xchg
sbb
xchg
ljmp
mov
mov
sbb
rorb
mov
dec
push
dec
int
mov
lods
stos
or
subl
enter
daa
gs
jns
ljmp
rolb
sarl
inc
stos
dec
dec
pop
jmp
outsb
arpl
xchg
xchg
and
fstps
shrb
stos
mov
pop
pop
jecxz
pop
mov
mov
inc
rclb
test
mov
mov
ja
std
roll
xor
push
cld
outsl
mov
gs
cld
icebp
jmp
inc
dec
pop
or
push
mov
stos
shl
mov
xchg
call
jle
xchg
das
xor
mov
mov
clc
stc
cli
sbb
sbb
mov
lods
add
push
imul
imul
inc
mov
cwtl
inc
sbb
xor
aaa
lea
mov
push
call
mov
rcr
dec
rcrl
xor
mov
push
or
sub
dec
in
mov
adc
jbe
cmp
call
jne
js
aam
cmp
pushl
push
mov
jb
cmp
sbb
inc
pop
les
outsb
insb
dec
test
add
add
inc
adc
xor
iret
cmp
lret
testl
sub
jns
pop
dec
sbb
decb
int
iret
cwtl
and
jne
or
icebp
adc
imull
pop
or
aas
and
scas
ror
sbb
leave
mov
cwtl
and
pusha
pop
xchg
mov
and
xorl
scas
jmp
adc
in
ds
ficompl
aaa
xlat
inc
icebp
daa
pop
xor
ljmp
outsl
adc
pop
lcall
mov
or
sarb
lahf
das
jmp
adc
mov
dec
jmp
int3
adc
lds
jno
jnp
stos
inc
loopne
ret
dec
ror
hlt
lcall
xchg
popa
jns
cmc
sbb
mov
mov
push
repz
insb
inc
repnz
mov
sarl
nop
jp
sub
push
lods
test
pop
xchg
insb
mov
pop
imul
test
out
add
lea
pop
jo
addb
jns
test
lods
sub
push
insb
push
arpl
into
mov
out
bnd
movsb
outsl
cmp
and
inc
jmp
aas
add
and
daa
xchg
ret
inc
xchg
and
or
and
or
xor
fldcw
into
loopne
add
out
and
movntq
jg
fdivl
in
iret
push
cmp
dec
mov
out
addl
jp
les
stos
arpl
jb
imul
cmpsl
add
jb
sub
adc
add
stos
mov
int
hlt
cli
shrl
test
inc
xchg
in
sbb
adc
clc
sbb
in
nop
cmpsb
add
push
scas
pop
adc
std
stos
and
cltd
jmp
sahf
xor
mov
movsb
inc
icebp
loope
jne
or
bsf
mov
pop
or
cmpsb
or
push
iret
insb
cmp
insb
aas
jae
popf
lea
loop
and
ret
sub
and
iret
int3
xchg
paddsw
test
clc
xor
cmpl
inc
jecxz
inc
dec
inc
or
mov
cmp
cwtl
scas
es
stc
sbbl
and
cmp
dec
jb
push
in
out
ss
xor
fisubrl
mov
mov
mov
mov
sbb
iret
jne
je
cmp
push
and
dec
xchg
outsb
xchg
cmp
and
cmp
and
lock
mov
sub
or
hlt
sahf
jle
xchg
sbb
call
aas
and
aad
xor
sbb
fadds
lahf
sub
xchg
jecxz
adc
inc
jo
pop
jp
mov
in
sub
lahf
stos
xor
fistps
mov
sbbl
dec
mov
add
clc
inc
lcall
add
jns
ds
push
pop
mov
ret
jp
ficoml
jl
pop
xor
insb
lods
mov
pop
jmp
push
cmp
xchg
and
adc
pop
xchg
popf
cmp
dec
or
repz
push
gs
ja
push
push
hlt
mov
and
sarb
test
loopne
cmpb
cmp
pop
push
incb
subb
dec
out
pop
aas
jp
and
mov
iret
aad
or
xor
hlt
out
pop
sbb
insb
inc
ret
mov
adc
nop
inc
adc
icebp
mov
push
push
mov
pushf
lea
nop
jg
add
cmp
mov
or
fdivr
and
mov
push
int
and
dec
sub
and
or
push
fisubrl
mov
jecxz
out
jle
xor
pop
pop
pop
in
leave
sahf
rolb
mov
popf
mov
nop
mov
js
movsb
das
scas
add
adc
mov
xchg
addr16
cld
jmp
cmp
push
arpl
sub
andb
cltd
ret
and
mov
inc
mov
movsb
add
fwait
das
jecxz
push
pusha
rorb
dec
sub
xlat
rcr
or
popf
gs
incl
dec
pop
jle
xchg
push
inc
mov
push
cli
or
xor
mov
and
sti
mov
jmp
mov
jo
jecxz
push
inc
push
cmp
and
gs
leave
xchg
imull
sub
std
andl
push
stc
mov
dec
imul
int
inc
jno
mov
pop
sar
test
lods
pop
lahf
xchg
cmpsb
out
push
daa
mov
mov
sub
lcall
cs
test
sub
orb
mov
jge
push
lock
jae
pop
es
inc
into
mov
stos
mov
and
or
push
cmp
inc
and
sarl
leave
out
adcl
cmc
es
dec
imul
test
rorb
jle
pop
mov
inc
lcall
pop
mov
out
subb
push
adc
adc
stos
mov
xchg
sub
xlat
adc
lcall
addps
fmul
jae
mov
scas
ror
push
dec
rcll
jecxz
and
inc
mov
push
lret
mov
dec
adc
addl
andb
nop
push
scas
add
ss
xlat
mov
jecxz
inc
mov
adcl
sbb
pop
jns
mov
testb
sbbl
or
push
je
add
gs
cmp
pop
mov
imul
dec
fdivrp
jl
outsb
dec
clc
xorb
movsb
ss
insb
sbb
jnp
ljmp
jns
pop
ret
cmp
mov
dec
xlat
hlt
repz
jnp
and
andl
cmp
push
and
sbb
cmc
pop
jecxz
out
inc
jo
scas
pop
gs
cmc
jo
lret
dec
mov
rcrb
ret
jecxz
lcall
jmp
sub
cwtl
in
aaa
iret
pop
out
and
mov
mov
into
pop
inc
jl
cli
dec
pop
jmp
stc
push
test
sub
push
jmp
cltd
push
icebp
cmpsl
mov
mov
xchg
cmpsb
mov
dec
mov
xlat
ror
loop
dec
adc
nop
movsl
cmp
or
and
add
push
xchg
cmc
xchg
nop
and
add
rcrb
cmp
pop
jl
jns
jbe
in
sbb
lock
lods
mov
cli
xor
cltd
mov
mov
xchg
pushl
subb
mov
inc
and
nop
push
decl
dec
fs
or
inc
scas
pop
fcompl
push
dec
or
shl
mov
mov
aam
sub
xchg
mov
test
push
pop
lret
sbb
and
mov
xlat
xchg
les
scas
inc
cmovo
mov
loop
nop
and
orb
lcall
dec
into
mov
lcall
dec
cmp
or
leave
sub
or
inc
imull
pavgw
std
outsl
test
lahf
cmc
sbb
mov
cmpsl
in
dec
pusha
and
adc
dec
subl
push
pusha
and
mov
in
iret
imul
mov
loop
sub
jnp
ficompl
in
adc
lds
pusha
data16
or
nop
jo
sub
clc
enter
dec
push
in
test
xchg
pop
loopne
xor
dec
push
icebp
push
cld
pusha
pushf
push
xchg
sub
inc
lock
add
std
mov
ss
jge
sub
popa
aam
mov
adc
es
clc
fldcw
sbb
jl
iret
pop
ja
jp
adc
push
pushf
movsl
pop
inc
sti
pop
std
hlt
xor
cld
pop
mov
out
fcom
lcall
das
lahf
pusha
lods
in
sub
xchg
push
sub
fbstp
pop
push
sti
pop
lock
push
or
and
sbbb
inc
insb
push
xchg
pop
inc
pop
cmp
or
push
inc
out
cli
xor
test
dec
or
and
aaa
push
inc
bound
in
repz
repnz
cli
mov
dec
cld
das
clc
stc
mov
out
xor
dec
mov
mov
lock
insb
adcb
fs
jg
out
dec
fs
scas
std
mov
lds
aad
cmp
popf
xchg
jge
jp
sahf
inc
mov
fiaddl
add
pop
mov
daa
call
jl
sarl
sub
lahf
sbb
int3
in
mov
or
push
addb
xor
push
movsb
xor
mov
lcall
aad
aas
das
xlat
sub
test
push
add
sbb
fldcw
fs
je
xchg
pop
jo
outsl
mov
add
mov
cmc
loopne
stc
push
add
in
loopne
jns
repz
stos
sub
out
jle
sub
dec
jle
xchg
ffree
mov
adc
sti
dec
pop
and
daa
mov
fmuls
icebp
in
hlt
addb
cs
jg
inc
xchg
mov
icebp
push
aas
fisubs
cld
inc
arpl
add
pop
xor
sbbb
pop
loop
ljmp
js
cld
fwait
xlat
sahf
mov
or
push
cwtl
clc
lahf
mov
idivl
jns
add
mov
sti
popf
and
push
lret
lea
adc
cli
lods
fists
fcmovnu
les
xor
int3
xlat
cmpsb
into
pop
add
cld
mov
fisttps
inc
jb
inc
ficoml
das
jl
sub
call
shll
push
pop
lret
lds
pop
rorb
pop
icebp
push
cwtl
add
jno,pn
jle
fdiv
dec
insb
jne
stos
sub
sahf
add
stos
cmp
lahf
js
mov
or
sbb
mov
push
push
lcall
xor
mov
push
outsl
jnp
ror
es
mov
adc
lea
inc
pushf
inc
les
and
rcl
mov
out
sbb
mov
js
pop
sub
cld
cmp
pop
sbb
loopne
cmp
nop
inc
mov
xor
orl
push
mov
and
inc
lock
mov
or
or
cmp
testl
or
push
mov
pop
dec
dec
int3
and
add
stc
dec
loop
cmp
mov
push
dec
mov
lea
dec
aam
fiadds
sub
adc
push
adcb
inc
les
in
dec
sub
sub
or
xchg
icebp
in
mov
xchg
dec
cmp
mov
xchg
aad
inc
mov
stos
dec
xchg
int
sub
pop
xor
loop
add
push
mov
push
mov
cli
sbb
scas
push
out
lret
and
xor
test
and
test
not
stos
daa
sbb
push
daa
dec
cmp
adc
ds
lock
or
sti
or
insl
jbe
scas
inc
mov
jo
mov
inc
aam
mov
push
enter
push
test
push
sub
loope
mov
or
je
pop
add
test
and
inc
and
push
jo
push
mov
or
aas
lods
inc
fwait
ret
adc
stc
int
xchg
fnsetpm(287
notb
cltd
test
mov
add
inc
inc
mov
fstl
pop
pushf
cmp
sahf
jecxz
ja
or
lea
mov
dec
enter
dec
lock
mov
adc
push
pop
jns
mov
mov
mov
push
lcall
pop
out
push
mov
xor
in
mov
std
pushf
popf
add
xor
int
scas
pop
aaa
les
call
cmp
mov
popf
shufps
dec
incl
inc
sbb
ss
mov
outsl
xor
xchg
sti
xor
sub
dec
mov
out
mov
daa
push
test
arpl
cmp
out
loope
sti
ret
mov
loop
fimull
sarb
std
addl
pop
mov
xchg
and
lods
test
in
or
icebp
mov
push
lds
and
pushf
lahf
xchg
jbe
call
add
xchg
bound
jae
ljmp
mov
insb
movsl
jl
cmpsl
std
jne
push
call
shll
pushf
inc
int
xor
in
fucomi
testl
jns
test
idiv
pusha
jge
in
push
pop
xchg
mov
add
push
or
lret
sbb
aam
jno
scas
mov
sbb
leave
scas
inc
aas
pop
mov
pushl
and
ss
xchg
ret
inc
mull
mov
das
mov
lods
sub
jne
rorb
mov
push
push
leave
andb
stos
mov
fiadds
push
mov
outsb
pop
add
add
inc
sti
into
scas
jg
xchg
dec
in
lcall
stos
iret
inc
jecxz
shlb
add
sbb
pop
xor
filds
sbb
movsl
lea
popa
xlat
dec
sub
xchg
bound
cs
adc
mov
cmp
in
mov
jae
ljmp
xor
mov
xchg
sbb
cmpsb
mov
add
fimuls
loopne
dec
sbb
xor
sub
gs
lea
ss
bound
aas
sbb
pop
popf
pop
or
inc
inc
mov
testl
lret
sbb
jg
push
idivl
add
adcb
mov
push
mov
push
and
or
aas
or
out
dec
addl
repnz
cmpsb
loope
aad
dec
and
mov
es
shll
mov
jbe
or
movsb
outsl
sub
xchg
adc
popa
xchg
cli
outsl
sub
xchg
into
and
addr16
lret
jge
adc
fildl
push
mov
lods
push
push
icebp
mov
fcoml
and
out
mov
mov
aas
sbb
repnz
add
xchg
push
mov
imul
les
scas
iret
enter
notl
test
sbb
xchg
fcoms
xor
lret
movsb
dec
dec
add
test
sub
test
sarl
jb
xchg
xchg
pop
cmp
push
mov
and
sbb
adc
pop
cmp
adc
and
cmp
sbbl
stos
pop
cltd
xor
in
lret
push
lcall
test
mov
ret
pop
ja
imul
cmp
stos
mov
mov
and
push
sub
rcll
push
testb
stos
mov
adc
xor
xor
mov
jle
outsl
jg
sahf
int3
scas
mov
loop
movsb
outsl
ret
xchg
in
scas
jecxz
sbb
lock
inc
out
push
add
or
adc
inc
cmpsl
imul
stos
push
shl
out
push
out
sub
or
repz
xchg
dec
or
adc
dec
repnz
loope
inc
in
and
mov
decl
ljmp
leave
pusha
xor
repz
fistpl
nop
inc
inc
jbe
jecxz
in
cmp
ds
xchg
sbbb
iret
addr16
jle
cwtl
pop
or
xchg
mov
test
cmp
call
arpl
xor
out
mov
push
push
aas
lret
sbb
jg
es
xlat
scas
add
out
inc
int
cltd
dec
jbe
add
ds
or
mov
cmpsb
cmp
adc
sub
inc
or
lret
cmc
dec
cld
sbb
push
flds
and
pop
sub
or
jno
ja
sbb
jae
fcomip
sahf
mov
sarl
bound
xchg
push
test
mov
push
arpl
add
fnstcw
das
jbe
sub
test
cli
aam
lea
push
mov
lret
push
adc
fwait
add
sub
sbb
xchg
push
les
add
lret
xor
outsl
adc
push
stc
cwtl
fsub
les
gs
adc
xor
iret
dec
jp
in
and
sub
and
mov
xor
stos
push
sarl
int
sub
mov
imul
mov
sbb
movb
cmpsl
test
mov
test
inc
lcall
fs
adc
test
lcall
push
in
lcall
cmp
jp
adc
std
fstl
icebp
jg
stos
cs
add
outsb
cmc
cmp
add
add
dec
rcl
push
cmp
mov
sbb
and
dec
mov
fisubrl
loop
cmp
loopne
sbbb
sbb
sub
sub
outsb
xor
lcall
into
cmc
movsl
xchg
rorb
sahf
icebp
nop
inc
push
cmpsl
xor
loopne
das
sub
adc
mov
lock
sub
or
push
jle
cmc
sbb
push
jmp
cmp
pop
scas
mov
es
jo
jmp
ljmp
cli
call
mov
xchg
shrb
data16
pop
pop
sahf
mov
mov
xor
push
js
xchg
js
xchg
loopne
mov
cli
out
lock
jno
shll
push
sbb
pop
inc
mov
aaa
jge
ljmp
xchg
out
and
mov
cmp
sbb
mov
mov
xor
repnz
inc
jns
adc
pop
jge
pop
out
addl
xor
lock
pushf
rcl
das
sub
dec
cmp
dec
inc
sbb
jp
inc
jnp
js
mov
dec
adc
hlt
push
push
push
hlt
dec
mov
dec
mov
mov
dec
jno
sbb
jns
mov
xchg
mov
fcmovnbe
and
je
lret
cmpb
imul
negl
xchg
cmp
inc
lahf
aam
sahf
sbb
and
loop
pushf
push
adc
sahf
das
xchg
inc
stos
out
sbb
mov
pop
sbb
lahf
aam
push
es
hlt
fdivrs
add
sub
inc
jle
cmp
imul
sub
xlat
mov
call
fldt
or
out
mov
mov
inc
sub
xchg
jp
call
cmp
lods
dec
inc
mov
xchg
sbb
dec
outsb
fldt
xchg
dec
mov
xchg
idivb
push
repz
mov
orb
nop
lahf
adc
test
or
adc
push
into
ljmp
inc
or
push
xlat
leave
scas
xor
lret
pop
testl
cs
stos
fcmove
dec
ds
sbb
test
mov
sub
mov
fisttpl
jmp
cld
dec
adc
push
xchg
rorb
cmpsl
pop
mov
push
push
loop
adc
sub
out
sbb
into
push
dec
xchg
sti
call
and
xchg
into
das
sbb
add
ds
leave
std
jae
fs
aaa
es
jecxz
mulps
add
cld
adc
and
test
and
fwait
in
mov
ja
fsincos
push
adc
pop
es
icebp
mov
push
ja
or
pop
adc
xor
enter
lea
rolb
roll
data16
rcr
and
inc
out
ss
mov
and
popf
je
xor
adc
clc
fldl
and
filds
sbb
fbstp
rorb
hlt
std
fidivl
jl
mov
inc
adc
push
add
fldenv
push
xchg
arpl
mov
push
adc
das
les
lret
sbb
fnstenv
add
rcr
pop
popa
in
cmp
in
aad
aas
and
clc
mov
sbb
jmp
dec
or
sub
iret
mov
icebp
rorl
pop
hlt
mov
push
cmp
xchg
dec
popa
jge
out
jge
sbb
cmc
jecxz
sbb
rolb
cmc
mov
xor
sub
sbb
dec
fidivs
addr16
std
push
xor
mov
mov
mov
outsl
divl
fs
cmp
js
cmp
push
ret
jb
jne
add
in
lcall
adc
mov
popf
push
dec
inc
inc
push
mov
js
mov
lcall
push
movb
mov
dec
loope
and
aad
inc
adc
mov
and
sub
adc
les
movsl
or
loopne
lret
outsl
jg
mov
in
loopne
gs
popa
movsb
mov
lods
fmul
cmp
xchg
sbb
call
repz
jge
sti
and
and
cmpsl
mov
nop
inc
push
xchg
pop
sub
mov
leave
std
mov
out
xchg
lea
lods
jge
lret
fnstsw
int3
sub
jp
add
fs
xor
movsl
ret
dec
inc
sub
adc
arpl
lods
out
into
mov
jp
and
aas
fildll
jmp
ss
aaa
in
cs
nop
sbb
push
pop
push
call
push
or
insl
in
and
in
mov
mov
xor
xchg
pop
mov
inc
push
sbb
lret
and
jbe
pop
xor
nop
inc
imul
cmpb
enter
cmp
mov
or
cmc
add
cmp
add
arpl
mov
dec
xchg
jmp
cmp
mov
arpl
push
dec
cmp
aaa
dec
popa
fstps
pop
and
es
negb
pusha
add
inc
scas
mov
in
dec
push
dec
gs
cmc
fistl
outsl
cmc
adc
sub
or
rorl
mov
cmc
push
repz
mov
lods
xchg
aaa
lock
negl
jo
out
shll
lret
mov
dec
or
insl
xchg
xchg
xor
push
xchg
adc
jl
sub
popf
mov
xchg
sti
js
psllw
xchg
lret
frstpm(287
cli
loop
cli
out
movsl
das
outsb
and
lret
xor
lea
ljmp
insl
xchg
dec
push
rcrl
dec
aad
dec
cmp
add
cmp
ljmp
hlt
call
cmp
cmp
out
xor
push
hlt
arpl
fwait
mov
std
cmp
mov
inc
mov
adc
lret
es
push
sti
or
add
leave
jae
into
aaa
out
sub
out
pop
test
leave
pop
xchg
jmp
mulps
mov
addb
sti
push
and
push
int3
push
fwait
xchg
sar
push
xchg
push
mov
hlt
pop
aam
lea
sti
mov
mov
pop
push
sub
je
daa
inc
xor
pop
sub
sub
xor
aas
jnp
jo
sbb
ret
push
xchg
xchg
pmaddwd
dec
pop
mov
ficoml
xor
cld
inc
cmp
enter
mov
insb
dec
pop
addr16
arpl
out
rorl
lret
pop
sbb
mov
inc
inc
mov
push
out
and
and
imul
pop
neg
cmpsl
test
data16
inc
mov
xlat
pop
xor
mov
mov
ret
cli
xor
or
mov
xchg
mov
xor
outsb
push
and
inc
icebp
mov
xor
rolb
adc
out
fisttpll
test
push
outsb
popf
jmp
mov
je
xor
xor
mov
mov
pcmpgtw
loope
mov
mov
dec
jne
push
les
pop
sub
loope
xchg
sub
lds
das
and
and
test
push
mov
cmpsb
adc
jne
outsb
jle
inc
ficoms
mov
jl
xor
or
xorb
leave
jg
push
or
dec
sub
add
lds
sbb
outsb
lea
push
js
leave
adc
lods
and
mov
test
mov
mov
call
inc
sqrtps
pop
and
dec
pop
adc
jecxz
shll
sub
repnz
mov
test
in
sahf
ja
aam
and
notl
sub
mov
push
pop
pop
adcb
shrb
push
mov
aaa
cmp
xchg
push
movsl
jb
je
into
rorl
je
es
pop
sbb
or
outsb
xchg
test
fstpt
ja
mov
fwait
repnz
cli
leave
sbb
das
aaa
cmp
fwait
mov
mov
fs
lds
xor
cmp
push
jge
repz
xchg
clc
out
mov
mov
mov
in
pop
dec
cltd
addr16
inc
js
adc
scas
dec
adc
shr
insb
cmp
hlt
in
jno
icebp
lock
cs
sahf
push
stc
rcrl
cli
ja
dec
push
xchg
loop
add
lret
mov
xchg
sti
cmp
inc
cmpsl
jnp
mov
inc
cmc
ljmp
pop
jns
ss
cmp
repz
sti
outsb
enter
daa
lods
insl
popf
inc
int3
ss
push
ljmp
pop
nop
cs
hlt
pop
add
xlat
push
and
cwtl
dec
cltd
out
enter
orl
mov
rcr
sbb
push
mov
call
in
push
xchg
insl
ljmp
popf
out
imul
cmpsb
leave
sub
in
test
lods
jno
scas
and
lret
inc
adc
sub
dec
push
btc
cld
jae
lcall
or
insl
mov
lea
push
jo
add
jno
lahf
clc
sub
push
mov
push
fwait
insb
jmp
and
cld
adc
int
pop
cmp
jge
test
dec
sarb
scas
jp
das
shrb
pop
loopne
icebp
or
test
shl
mov
fcoms
push
mov
jmp
sbb
adc
pushf
sarl
sub
out
out
cs
cs
mov
jg
mov
rolb
mov
push
inc
adc
les
stos
cwtl
sbb
sbb
pop
das
pop
fidivl
mov
mov
jbe
movsl
loopne
leave
sahf
out
and
push
mov
ret
fdivl
shrb
mov
pop
mov
loope
mov
push
shr
pop
aam
sbb
popf
sahf
popf
arpl
xlat
rcrl
or
sbbl
inc
xor
stos
xchg
mov
add
call
jns
xchg
test
push
lods
outsl
or
arpl
sub
add
popa
cmp
ret
adc
dec
popa
movl
clc
int3
adc
lds
pop
sarl
jecxz
pop
insl
add
cwtl
daa
inc
adc
ja
int
push
aad
pop
mov
stc
pop
dec
fs
cmp
push
iret
add
shl
lea
mov
mov
mov
pop
mov
aaa
fsubs
clc
scas
scas
inc
mov
lods
aam
jb
inc
push
aaa
mov
lret
call
stc
cmc
stos
das
adc
xlat
call
mov
ficoms
lret
xor
xchg
mov
imul
seto
mov
pop
imul
lods
movsb
xor
lods
shl
test
xchg
out
mov
movsl
jbe
mov
daa
sub
scas
test
push
jl
push
les
cmp
movl
rcll
in
xchg
test
imul
sti
js
das
adc
jg
xlat
sbb
rcll
xchg
xchg
ret
xchg
jge
push
or
mov
sbb
popf
popf
lds
outsb
cwtl
scas
aam
int
cmpl
and
add
and
sbbb
mov
push
loope
ds
push
pop
sbb
or
cmp
sbb
scas
rcrb
cli
loope
clc
cmpsl
stc
mov
js
fninit
mov
xor
or
in
lea
outsl
lods
sub
scas
mov
xor
pop
cltd
repnz
repz
push
cmp
adc
cltd
mov
adc
fwait
ds
fimuls
adc
cmp
mov
lock
lods
shl
subb
mov
add
divl
nop
push
cmp
ds
das
sbb
jmp
ja
xorb
shll
inc
arpl
mov
cltd
mov
insb
mov
fistps
pop
lcall
stc
xor
pop
out
stc
xor
mov
hlt
dec
jmp
jb
or
jb
sub
call
sub
lock
pop
subl
rclb
stos
dec
push
pop
call
scas
gs
jns
sub
hlt
int3
scas
and
fs
and
add
fs
jnp
add
fwait
movsl
cwtl
int
and
xlat
shlb
adc
jbe
sarl
cli
das
mov
ror
pop
cld
jno
pop
sbb
cmpsl
fidivl
dec
jnp
movsl
in
sbb
daa
pop
inc
mov
add
aas
cmc
push
mov
mov
sbbb
jg
leave
xchg
pop
and
in
xor
loopne
cmp
sub
mov
jne
fisttpll
cmc
mov
out
fsubs
push
add
or
jecxz
pusha
jmp
je
pop
clc
lods
xchg
pop
decb
lods
sti
xor
xorl
mov
adcl
ds
aad
inc
pusha
pop
xor
loop
jo
mov
dec
adc
add
in
mov
gs
jl
pop
mov
cmpl
les
scas
aam
outsb
add
mov
stos
fidivs
ret
add
sarl
push
ds
test
ljmp
cmp
xchg
mov
imul
dec
outsl
incl
xchg
pop
dec
out
roll
add
xlat
sahf
pop
xchg
inc
mov
pop
pusha
sbb
pop
push
cmc
shrl
push
mov
cmpsb
sub
cld
add
mov
fbstp
ljmp
pop
scas
sub
aam
mov
pushf
or
jmp
lahf
pop
out
xor
or
fisubrl
fimull
mov
ja
jmp
ds
rclb
ja
lcall
pop
pusha
dec
out
add
std
mov
sub
lahf
jno
sbb
adc
mov
shl
out
mov
cltd
aas
aas
jg
mov
pop
xlat
push
pop
dec
idivl
aas
out
fwait
aam
arpl
mov
xlat
rclb
pop
ficoml
repz
jo
pop
enter
dec
ljmp
add
mov
inc
mov
pop
insl
cld
lahf
mov
ret
xchg
push
jp
jmp
test
jo
mov
add
shll
or
jg
adc
mov
popf
xchg
push
cmp
out
loop
xor
jae
fcompl
jae
sub
imul
mov
dec
pop
sbb
hlt
sarl
jl
inc
dec
and
ljmp
imul
out
ss
mov
and
pop
rclb
dec
aaa
lret
roll
pop
add
shll
xchg
aaa
ss
ja
lret
insl
push
sahf
jbe
jae
mull
inc
inc
xor
xor
arpl
popa
fsubs
pop
lret
mov
mov
sub
mov
in
xchg
mulb
stos
enter
xchg
ljmp
xchg
into
out
mov
insl
cli
fistl
mov
push
push
fiaddl
stos
xchg
ret
lods
inc
pminub
or
mov
pusha
sti
sub
lahf
xchg
call
std
adc
push
outsb
dec
xorl
or
mov
lret
mov
jae
xor
push
scas
and
out
mov
jb
repnz
rolb
sbb
add
cmp
in
out
adc
leave
out
push
and
adc
out
xchg
ja
xchg
pop
test
ja
int3
mov
call
jae
test
and
or
in
lds
push
mov
dec
mov
andl
pop
popf
sbb
outsl
sar
out
xor
popf
mov
push
scas
aaa
in
lea
aad
addr16
imul
push
andb
dec
mov
loopne
pop
xchg
rcll
ljmp
and
out
mov
sub
mov
cwtl
xlat
cwtl
mov
loopne
fldl
notl
movsb
adc
loop
adc
test
lds
insb
lds
ja
lea
sarl
push
test
stos
popf
jmp
pusha
aaa
das
mov
int3
rolb
mov
push
in
adc
jae
xchg
jns
icebp
sub
test
push
shlb
les
add
into
lods
cmp
jbe
push
jnp
cli
jne
shrl
mov
sub
addl
pusha
and
adc
cwtl
add
dec
push
adc
test
es
cmp
dec
push
mov
das
data16
mov
pop
and
adc
test
pop
cmp
cmpsl
stos
xchg
or
hlt
shrb
gs
xor
push
dec
pop
jo
or
mov
cmp
inc
sub
inc
inc
mov
xor
sbb
out
imul
jno
sbb
mov
push
mov
sahf
fistps
jo
loopne
imul
fs
js
xor
cmpsl
popa
lcall
push
loope
aam
push
jmp
in
or
jns
jp
fadds
pop
or
ljmp
and
in
jb
and
sbb
mov
and
jo
jne
mov
mov
test
and
sub
lods
lea
sub
sbb
jg
xchg
in
jae
and
cmp
inc
jmp
arpl
mov
subl
inc
cmc
add
jb
inc
cltd
clc
loope
je
jb
push
orl
call
int3
jo
xchg
aad
fldcw
jg
inc
xchg
inc
dec
or
std
push
in
lret
jmp
adc
or
push
xchg
loope
pop
pop
mov
or
cmp
cmp
cmc
cmc
mov
cwtl
mov
sbb
and
clc
cmp
add
and
dec
insb
add
pop
adcb
int3
xchg
push
out
arpl
push
add
divb
lods
out
add
rol
test
dec
in
push
mov
sbb
and
aaa
sbb
lahf
xor
pop
add
sahf
xchg
mov
fimull
cltd
adc
jnp
insl
and
adc
rcrb
shlb
out
sbb
call
mov
aam
lock
popf
mov
in
xchg
fcmovnu
mov
das
loop
fdivs
inc
sub
push
ror
mov
dec
mov
push
add
lret
lahf
imul
xchg
push
icebp
mov
sub
pusha
pop
push
rol
mov
xor
iret
or
outsl
fyl2x
push
xorb
pop
cmpsl
out
mov
pop
push
or
lods
in
ljmp
xorps
fimuls
mov
jno
arpl
adc
loope
jl
jbe
lea
mov
sub
sarb
shlb
add
xchg
dec
dec
jmp
test
mov
mov
sub
js
adc
sub
repnz
mov
xchg
or
xor
insb
loop
and
dec
stos
mov
orb
mov
sti
push
movsb
rorl
lock
imul
inc
inc
xor
js
add
jns
imul
push
push
dec
xor
mov
lea
mov
lock
int
mov
sbbb
sbb
lretw
jbe
push
lcall
mov
inc
cltd
or
loope
mov
mov
insl
dec
xor
aam
sub
dec
cmpsl
hlt
fs
mov
push
push
out
pop
jge
int
int3
adc
adc
int3
scas
fidivs
daa
popa
fiaddl
out
inc
inc
xchg
mov
subb
or
andl
dec
out
call
cmc
cld
daa
loopne
and
add
out
cmp
cmpsb
cmp
cmp
add
das
push
mov
jg
aaa
repnz
leave
inc
ljmp
sub
adc
scas
pop
or
stc
pusha
lret
mov
cltd
clc
pushf
jg
incl
pushl
mov
aad
repnz
or
popa
rclb
scas
pop
aam
fmul
pop
jbe
stos
xlat
and
xor
inc
test
sahf
fdivrp
cli
cs
inc
test
inc
mov
add
xchg
imulb
jns
mov
arpl
repz
sbb
mov
fs
mov
jno
jecxz
sbb
sbb
les
mov
sbb
push
je
jnp
xor
leave
xor
pop
mov
fdivrl
fnstcw
xor
aas
cli
add
sbb
ds
mov
cmpsl
sub
push
enter
sbb
xchg
mov
fsubrp
add
push
xchg
lret
add
cwtl
or
jmp
xlat
imul
ds
inc
add
icebp
lcall
test
pop
data16
jno
lock
pusha
icebp
mov
sbb
xor
fwait
xor
cltd
mov
cs
out
mov
jnp
inc
imul
mov
iret
cmp
iret
cmpsb
imul
mov
push
mov
sbb
in
pusha
subl
and
adc
ljmp
cmp
xchg
jne
inc
sub
fdivrs
popa
dec
jge
mov
ss
roll
outsl
out
or
movsl
movsb
add
add
iret
fwait
dec
daa
movups
mov
or
lret
push
scas
dec
push
push
and
sub
sub
and
mov
sti
fcomip
negb
pop
nop
or
xchg
pop
dec
xchg
rorl
inc
cmp
shrb
push
insb
add
sub
adc
push
sbb
pop
out
jae
jns
mov
lods
pop
std
mov
fcmovnbe
push
inc
imul
sub
enter
emms
jnp
cmpl
movswl
movsb
jbe
lock
jb
sub
jb
sub
dec
inc
jno
adc
int
pusha
ljmp
lock
scas
fidivrs
dec
or
lods
or
scas
ds
in
add
je
icebp
imul
add
aad
and
fisubl
imul
inc
pop
xchg
sahf
and
aaa
test
mov
fistps
inc
xorl
scas
daa
lret
mov
shlb
mov
sub
add
mov
call
pop
imul
xlat
gs
sbb
xor
mov
iret
fldcw
and
add
idiv
push
jne
ds
loop
sbbl
fiaddl
jmp
mov
mov
dec
sahf
int
or
fildll
shrl
es
enter
repz
xchg
pusha
push
adc
add
loope
int
fstl
xor
in
push
lcall
xchg
push
fbstp
mov
mov
mov
jnp
je,pn
add
flds
push
lahf
call
mov
fidivl
xor
xchg
cmp
jl
pop
mov
fld
mov
cmp
movl
ss
dec
mov
test
adc
inc
int
sbb
cvtps2pd
insl
cmp
or
andps
xchg
dec
sbb
sub
pop
jp
xchg
fcoml
pusha
xchg
xchg
add
lahf
icebp
out
sub
sub
mov
aad
adc
and
cmpsb
adc
call
sahf
and
inc
or
aad
cmc
cmpb
pusha
adc
pushf
pop
mov
cmc
insl
gs
inc
jb
push
divps
pop
push
jae
push
inc
scas
mov
lods
in
insb
pop
xor
mov
insl
pop
aas
jae
cmp
jae
pop
sub
lods
push
jns
cmc
mov
cwtl
and
xchg
pop
insl
cmp
sbb
int3
push
xchg
jbe
insl
jmp
out
fnstcw
pop
ljmp
inc
sub
addr16
shll
xchg
sub
std
std
jne
mov
lea
int
fwait
adc
outsb
xor
push
push
stc
xchg
aas
loop
stos
dec
mov
jne
rorl
in
outsb
scas
adc
rorl
flds
cmpsb
adc
mov
jle
insb
sub
or
in
jecxz
jo
xor
mov
imull
rcrb
sub
inc
mov
xchg
repnz
dec
ljmp
les
dec
push
and
fsubl
inc
stos
fistps
fdivs
or
inc
pop
and
and
in
das
or
adc
rorb
int3
test
jecxz
or
pop
xor
or
lods
fs
insl
or
fstps
scas
in
ret
add
popa
lock
xchg
setns
lret
push
or
lds
nop
inc
imul
in
shll
inc
dec
ss
sub
push
push
inc
mov
xlat
js
push
sub
fnstenv
jmp
mov
test
mov
and
lods
in
add
cmp
scas
mov
test
inc
in
mov
xchg
and
das
xlat
xchg
push
int3
inc
cmp
mov
pop
pop
sub
lahf
cld
icebp
or
jbe
jmp
mov
fwait
movsb
in
push
mov
add
push
stos
sub
cwtl
aam
in
repnz
or
pop
incb
jle
es
pushf
jnp
and
jmp
popa
fsubrl
jecxz
int3
jb
ret
push
mov
xchg
rcll
mov
add
cmpsl
test
in
mov
adc
in
add
imulb
mov
and
sbb
xor
xor
stos
cli
ret
out
icebp
loop
mov
das
xor
inc
fs
adcb
adc
pop
pop
aaa
pop
dec
lea
dec
sbb
aad
nop
xlat
jge
das
xor
or
mov
xchg
ja
mov
add
sub
cmp
dec
adc
adc
pop
dec
stos
movsb
lahf
cmpsb
jne
es
scas
leave
inc
xlat
mov
out
sti
dec
xchg
test
cs
repnz
mov
xor
push
int
pushl
inc
int
push
clc
mov
xchg
cmc
lods
mov
shlb
push
insb
xor
xchg
push
sahf
pop
inc
pop
stos
lods
loop
cmpb
fdivr
pop
mov
popa
imul
or
jo
pop
arpl
cwtl
and
mov
ffreep
xor
pop
dec
test
mov
jb
pop
mov
hlt
mov
lret
ds
loopne
dec
push
adc
mov
mov
mov
cmp
scas
xchg
std
inc
ds
mov
cmpsb
movsb
mov
cmc
sahf
movsl
sub
inc
xor
scas
jecxz
or
loope
xor
dec
pop
or
add
dec
xchg
cmp
in
out
mov
leave
and
scas
pushf
fcmovbe
cmp
inc
xchg
sbb
das
sub
call
pop
add
push
jae
xlat
addb
pop
lods
jo
xor
in
ss
in
mov
mov
out
dec
xor
mov
popl
cwtl
dec
stc
and
cmpsb
push
test
insb
mov
or
out
jbe
insb
pop
mov
push
shrd
clc
stos
lds
bound
push
scas
or
popa
and
movsb
mov
cmc
mov
orl
mov
add
in
dec
cmp
pop
xor
mov
add
inc
dec
and
shrb
lds
imull
xchg
inc
mov
js
jl
add
mov
add
ljmp
fcoml
lret
jnp
jbe
push
push
iret
inc
and
and
lret
jbe
push
aaa
insb
sub
ret
xchg
lds
stc
or
gs
sarl
test
mov
faddl
mov
aam
and
ja
insb
add
pop
mov
leave
push
mov
xlat
push
mov
scas
sbb
pop
or
dec
mov
sub
imul
cli
dec
mov
mov
push
arpl
inc
xchg
cmp
mov
sub
sbbl
adc
adc
mov
inc
lods
loop
and
aad
dec
lcall
sub
aaa
xchg
adc
add
aad
stos
sbb
data16
dec
insb
ljmp
mov
gs
loopne
sbb
mov
xchg
add
adc
arpl
xor
ljmp
pop
push
cmp
xor
outsl
shl
push
cmpsb
jns
cmp
dec
mov
outsb
and
jo
push
push
arpl
rcll
in
ret
mov
sti
or
mov
adc
jb
lods
push
call
fdivr
jbe
pop
jnp
xchg
and
cmp
push
mov
scas
cmp
enter
movsb
and
mov
push
xor
nop
lods
sbb
bound
or
enter
cs
fwait
mov
xchg
dec
inc
lcall
adcb
push
aam
popa
mov
pop
outsb
inc
or
fldcw
mov
ret
jg
and
stc
rcrl
les
xchg
gs
and
fsubr
mov
repz
jp
add
aam
push
xor
imul
cmpsb
movsb
jb
aad
es
add
rclb
mov
pusha
sti
call
in
and
jmp
pop
sbbb
adc
shrb
add
aam
xchg
xchg
push
out
cmp
dec
sbb
sbb
push
sub
or
loopne
mov
cltd
sbb
adc
pushf
cltd
sub
jo
lret
jae
fcoms
orb
pop
and
sub
repz
cs
mov
outsb
cltd
test
fadds
push
aaa
push
lret
popa
jb
bnd
fcomps
mov
sub
pop
fimull
lea
lcall
outsl
popf
rcll
xor
mov
dec
fcomp
push
pop
xchg
sub
fimull
inc
aaa
push
arpl
sbb
push
push
das
adc
cmp
push
aaa
mov
dec
sbb
in
push
jno
popa
lahf
sub
test
cs
inc
xchg
andb
in
mov
pop
push
shr
jbe
test
push
or
pop
std
iret
mov
mov
push
mov
enter
rcll
ret
sbb
cmpsb
loop
xchg
fdivrl
loope
jns
mov
inc
push
jmp
out
fadds
pop
or
dec
mov
pop
std
hlt
jb
lcall
cmp
cmp
in
imul
movsl
push
lret
mov
pop
das
popa
push
or
or
rcr
adc
ja
lahf
lcall
and
insb
jg
int
shl
lret
xor
cmc
sarl
pop
or
std
sub
in
inc
mov
clc
test
rcll
sbbl
pop
xor
jecxz
fldt
push
cmpsb
movsb
jmp
or
adc
dec
jb
orl
mov
mov
or
xor
fs
in
inc
push
das
fwait
and
mov
cmp
xchg
push
jmp
push
pop
add
and
cmp
cmpl
rol
data16
jno
jne
pop
in
dec
dec
cld
xchg
push
push
test
push
inc
int3
mov
inc
int
mull
mov
push
jle
fstpl
mov
push
push
aas
rcll
data16
shlb
lahf
dec
sbb
mov
out
xchg
mov
xor
orb
mov
inc
inc
fistpl
mov
cwtl
lret
std
sbb
nop
fs
xchg
push
sbb
imul
loope
xor
mov
add
fwait
into
insl
sub
inc
and
or
sbb
cmp
icebp
push
ds
mov
adc
cltd
push
pushf
push
enter
jns
sub
test
in
cmp
sbb
push
fidivs
mov
sbb
sarb
aas
and
cmp
mov
fnstcw
stc
and
mov
sbb
push
adc
enter
mov
xchg
dec
dec
mov
into
mov
imul
sbb
stos
lock
pop
icebp
dec
mov
popa
xchg
mov
ljmp
scas
dec
lock
movsb
add
loope
sbb
xlat
subl
rolb
xor
shr
xchg
aad
arpl
jge
dec
or
jne
inc
pop
xor
dec
imull
jp
cmp
mov
div
test
push
loope
inc
bound
mov
inc
inc
mov
pop
xor
cmp
loop
mov
lret
in
aas
mov
xor
lret
lds
jmp
cld
and
aas
insb
mov
in
mov
xchg
xor
mov
adc
ja
hlt
subb
pushf
mov
lret
xor
jne
dec
push
push
in
pop
cmpsl
in
pop
lods
insl
xor
xchg
leave
insl
sbb
or
mov
out
and
shrb
fldcw
or
bound
jl
pop
mov
lock
jae
mov
incb
xchg
into
mov
scas
cmp
insl
negb
lret
test
jle
imul
stc
mov
lea
movsb
add
push
sbb
aaa
sbb
lret
mov
mov
cmp
pop
mov
xor
arpl
xchg
xor
or
int3
add
adc
aaa
xor
push
push
mov
cs
dec
pop
add
add
mov
das
dec
pushf
in
ljmp
aad
add
pop
sti
inc
loope
ja
push
rcrl
mov
mov
scas
xor
xor
jge
iret
rcrb
pop
ds
rcl
or
sbb
or
jbe
cmp
mov
fs
pop
nop
hlt
imul
lahf
xor
lahf
mov
outsl
fisttps
nop
ljmp
in
sub
inc
movsb
fnstenv
mov
inc
pop
mov
fistpll
js
xor
or
fmuls
cmpb
mov
add
cmp
testb
divb
sbb
jl
and
test
in
or
and
cmpb
or
pop
mov
rorb
jnp
mov
mov
mov
int
push
mov
lcall
mov
shlb
fiadds
hlt
cmp
dec
or
jle
xor
pop
popf
stos
xlat
fcmove
push
inc
jns
pop
fs
icebp
in
jae
pop
clc
add
adc
sub
sarb
cmpsb
aaa
or
rcrl
das
add
fwait
sub
ret
adc
or
mov
jne
dec
mov
pop
nop
aas
xchg
mov
inc
xor
adc
inc
mov
dec
ljmp
aad
daa
cmp
into
or
ja
cs
adc
add
mov
lret
dec
xchg
repz
loopne
inc
mov
jl
mov
xchg
sarl
leave
outsl
add
roll
dec
test
cld
add
mov
push
inc
xchg
mov
outsl
xor
xchg
stos
addr16
fldcw
rcl
test
xchg
movsl
push
test
jbe
sbbb
int3
mov
pop
in
jae
sti
insl
shr
jl
rorb
pop
repz
mov
pop
pop
adc
stc
fsubrs
dec
inc
dec
push
jmp
adcl
or
bound
pop
xchg
inc
push
and
sbb
cmpsl
or
mov
imul
sbb
mov
push
fnstsw
inc
cmp
and
jecxz
aam
dec
cmp
ja
mov
addl
mov
loope
rolb
mov
mov
fwait
add
lds
xor
cs
test
adc
pop
xchg
xchg
fisttpll
jns
add
imull
and
inc
divl
inc
bswap
xchg
stc
std
sub
loopne
xchg
xor
repz
adcb
mov
and
test
push
ficoml
inc
jmp
mov
stc
std
fwait
shll
lcall
adc
test
dec
cltd
mov
scas
jmp
call
cmpb
inc
and
xlat
mov
dec
xchg
pop
lods
push
jl
test
mov
testb
aam
into
pop
shlb
and
les
out
ret
sbb
es
and
fwait
cmpsb
adcb
inc
andb
push
cmpsl
loopne
push
lret
or
cld
jl
push
arpl
push
and
pop
daa
push
into
xor
mov
xor
mov
pop
cmp
movsb
mov
adc
shrl
adc
js
inc
push
and
pusha
addl
cmp
sbb
fs
cmp
xor
mov
test
loope
mov
mov
xchg
clc
push
js
mov
adc
test
aaa
jb
sub
lret
mov
sub
push
mov
sub
mov
jge
lcall
cmp
xlat
pop
dec
stos
jnp
sti
cmpsb
sbb
sbb
push
jmp
mov
xor
lret
push
hlt
xchg
fcoms
loopne
in
sub
add
out
cs
hlt
dec
mov
cmp
add
inc
or
sahf
pop
adc
push
std
std
sub
ja
and
sub
call
int3
clc
cmpsl
xchg
mov
bound
sbb
dec
lret
sub
cmp
subb
add
dec
sahf
int3
xlat
mulb
imul
mov
jle
sub
add
inc
ljmp
inc
movsb
out
push
push
aaa
bound
cmc
xchg
jne
mov
sbb
inc
push
mov
cld
shl
dec
dec
test
xor
inc
ds
scas
adc
mov
stos
add
in
adc
scas
adcl
adc
nop
scas
repz
sbbb
repz
aas
or
out
sub
push
jmp
adc
xor
mov
xchg
test
mov
inc
or
cmp
test
mov
lods
inc
loopne
mov
cmp
js
mov
into
test
psadbw
addr16
icebp
in
cmp
adc
imull
inc
jb
daa
aas
pop
pop
cmp
xchg
dec
cld
icebp
mov
arpl
inc
and
orl
std
neg
jg
adc
dec
inc
jnp
xor
adc
mov
aaa
scas
fs
sub
ficoms
pop
pop
stos
scas
arpl
or
mov
iret
fdivrl
ds
ficompl
je
and
mov
add
mov
jp
das
add
push
ret
or
jle
and
loope
test
jmp
inc
push
pusha
sbb
pop
or
test
leave
sub
mov
push
insl
sbb
outsb
cli
mov
aas
sub
xchg
pop
ret
adc
bound
pop
dec
pop
ret
or
xchg
xchg
out
idivl
push
lcall
outsb
scas
mov
jno
sub
inc
xor
pop
pushf
fcmovnu
jns
cld
repz
push
mov
pop
cmpsl
adc
push
pop
pop
or
fucomi
or
pushf
mov
jl
clc
pop
outsl
sbb
outsb
jb
adc
push
fwait
mov
dec
dec
push
filds
or
jmp
bound
jne
lods
lods
dec
dec
pop
xchg
jmp
xchg
fsubl
pop
xlat
lret
ja
ret
mov
fisubl
lahf
je
cld
add
js
addr16
sbb
push
push
dec
call
jb
addb
mov
bound
sti
push
sti
pop
aaa
out
jecxz
push
ret
jmp
jne
bound
int
inc
xchg
and
mov
adc
hlt
into
in
pop
jmp
mov
xor
mov
rolb
pop
sub
mov
cmova
xor
jbe
ss
test
int
push
xchg
dec
and
js
fisttps
das
xchg
sbb
and
jne
or
icebp
add
jo
daa
nop
pop
lock
push
stos
mov
xchg
inc
mov
jo
mov
cmc
mov
clc
inc
in
pop
xor
add
xlat
mov
out
aaa
das
mov
mov
movsl
push
jnp
jl
mov
fdivs
hlt
jg
jge
push
and
int
in
mov
push
adcb
pop
shl
or
adc
addb
subl
xlat
int
sub
xor
mov
rcr
lock
test
xorb
lret
mov
jp
shlb
mov
lds
repz
mov
stc
and
pop
inc
push
mov
inc
hlt
jns
or
dec
push
and
lret
xor
mov
inc
push
fsubs
fsubrs
add
cld
loopne
pusha
pushf
pop
or
push
and
inc
lret
call
dec
mov
ja
divl
jb
es
xor
push
xorb
filds
lsl
pop
push
into
pop
xor
push
negl
test
lods
mov
sbb
pop
jp
nop
inc
cmp
inc
or
dec
nop
or
scas
sub
xlat
inc
cmp
sub
prefetch
or
repz
cmp
pop
es
arpl
shlb
xchg
iret
in
jbe
sbb
stos
in
mov
fdiv
push
idiv
pop
pop
fisubrs
push
je
cmp
fdivl
pop
xor
mov
sub
mov
cli
push
test
fistpll
lods
das
sub
popf
mov
std
test
outsb
aad
lods
and
cli
divl
push
sub
cmp
xor
loope
adc
lea
in
and
cli
lock
xchg
mov
lods
popa
mov
cmp
xchg
shl
add
xchg
cmpsl
mov
mov
xchg
mov
pop
mov
scas
xchg
cld
addl
jmp
pop
dec
inc
loope
stos
cltd
stos
push
jl
or
jmp
out
clc
scas
jmp
adcl
or
push
lods
arpl
xchg
sub
xchg
imul
adc
stos
or
fmul
jno
push
jns
xlat
jp
scas
nop
shrb
ja
cmp
fdivr
cmpsl
push
push
cmp
adc
lea
push
jmp
xchg
mov
mov
ss
mov
aam
inc
je
movsb
shll
sbb
shr
fadds
sbb
or
insb
enter
imul
mov
cwtl
mov
adc
push
or
data16
push
jne
add
lods
out
lcall
xchg
pop
jnp
mov
mov
js,pn
mov
xchg
loopne
mov
adc
xor
sbb
inc
sbb
andb
cmp
into
loopne
mov
jl
or
adc
mov
push
dec
cmp
icebp
ljmp
shl
sti
mov
and
adcl
pop
cmp
stos
sub
mov
xlat
js
xchg
jbe
push
push
fwait
xorl
scas
pop
in
inc
lods
std
mov
mov
jae
sbb
jae
das
ficoms
sti
imul
push
shll
mov
adc
loop
inc
in
je
test
xor
dec
inc
popf
dec
mov
cs
push
mov
das
sbb
mov
in
scas
insl
pop
sbb
mov
xchg
inc
lds
mov
inc
arpl
inc
inc
lods
jns
fcoms
xor
cmp
insl
icebp
mov
repz
ror
adc
stos
out
cmc
push
jns
in
mov
in
les
mov
jg
pop
pop
adc
test
sbb
loop
jge
dec
mov
sbb
adc
push
ret
push
mov
jb
cld
mov
in
paddd
into
daa
lods
lock
idivb
jecxz
mov
insb
fwait
mov
add
mov
stos
outsl
sub
pop
add
call
std
das
insb
cmpsl
pusha
and
rep
jne
sbb
adc
imul
cli
fisubl
sbbl
jg
sahf
xchg
lods
in
jns
std
addr16
mov
inc
mov
push
jle
sarl
mov
dec
stos
movhps
mov
jo
test
jge
mov
fidivrs
repz
adcb
pop
jmp
sub
in
pop
icebp
pop
inc
mov
cmpsb
ljmp
sub
or
sarb
xchg
pop
aad
fimull
fsts
in
lods
inc
scas
out
mov
dec
mov
inc
inc
xor
aas
mov
mov
mov
add
lret
out
mov
dec
test
es
sbb
rolb
mov
jnp
cmpsb
fldcw
add
popa
fidivs
cwtl
leave
adc
cltd
pop
sub
xchg
fxch
sub
sub
mov
jb
outsl
inc
div
or
dec
jl
sub
cwtl
push
jae
test
xor
arpl
in
pop
mov
pop
cmp
add
add
lods
outsb
outsl
cld
push
mov
mulb
repnz
cmp
call
mov
pop
dec
stos
sbb
xchg
and
jmp
ljmp
addr16
add
sub
xchg
or
lds
std
pusha
or
mov
aas
mov
ret
xchg
dec
sarl
or
mov
arpl
adc
movsl
dec
in
pusha
into
into
xor
adc
mov
in
lods
ror
sarl
roll
sbb
into
mov
jmp
xchg
mov
pop
clc
leave
jp
push
add
iret
dec
push
inc
std
loop
aaa
repz
call
cmp
push
sbb
or
or
mov
out
outsb
ret
daa
jmp
xlat
lret
pop
rolb
cmc
out
inc
lahf
jo
or
push
imul
jbe
mov
mov
outsl
xor
cmp
jmp
stc
xchg
ret
cli
xchg
or
dec
mov
jmp
insl
in
add
cmp
sahf
cltd
cmp
mov
iret
sub
xchg
mov
stc
out
and
loope
int3
push
push
jb
fcomps
push
or
stc
dec
sbb
xor
scas
cmc
inc
aaa
cmp
sub
dec
lret
and
push
pop
push
clc
mov
dec
ds
push
inc
pop
jns
jns
and
xlat
mov
mov
fmuls
shrl
xchg
dec
xor
sbbl
es
inc
jecxz
mov
cs
imull
into
sbb
mov
xchg
sub
jmp
test
cltd
cmp
mov
push
cmp
push
in
xlat
add
jl
sub
sahf
xchg
pop
pop
xchg
inc
mov
aad
mov
stos
int
jge
pop
cmc
out
cs
in
mov
fdivs
add
pop
and
push
subb
jp
lods
pop
iret
mov
addr16
mov
and
mov
std
adc
shl
xchg
sahf
out
xlat
insl
and
pop
pop
shll
shl
inc
dec
fwait
popa
sbb
or
ret
cmpl
and
mov
aaa
mov
in
bound
in
adc
fiaddl
enter
push
xchg
mov
adc
adc
pop
lret
inc
add
dec
ret
imul
dec
movsl
lea
mov
pop
mov
add
dec
or
clc
push
xchg
sub
xchg
pop
jle
sub
xchg
mov
pop
insb
push
cli
adc
lea
out
jae
lsl
mov
outsl
data16
mov
test
xchg
mov
add
lcall
shll
bound
adc
jge
push
aam
lods
xor
pop
and
jno
jb
rorl
cltd
push
pop
xchg
fadds
mov
popf
js
mov
aas
mov
dec
mov
cltd
xor
lcall
into
int3
sub
inc
mov
ret
mov
add
xchg
in
outsb
and
mov
mov
push
pop
jge
int
add
pop
out
sub
dec
add
movsl
mov
fsubl
or
cwtl
and
leave
lret
adc
or
popf
andl
dec
enter
jb
mov
sbb
sub
loopne
push
jle
fnsave
pop
jns
lahf
mov
leave
icebp
jns
xchg
enter
data16
xor
jge
mov
es
roll
sarb
xor
in
subb
jle
sbb
xor
jl
lret
xchg
cmpsl
jb
pop
aad
imulb
mov
or
sub
and
and
sar
movsb
mov
cli
lods
nop
pop
pop
or
sub
incb
adc
aaa
push
in
in
lock
adc
mov
imul
and
xchg
mov
cmpsb
lcall
jge
push
test
mov
pop
cmp
das
lret
xchg
outsl
inc
pusha
pusha
push
inc
cmp
and
cmpsb
insb
mov
pop
jmp
and
sbb
cmpl
or
cmp
jp
mov
jp
movb
inc
dec
cmpb
popa
fmull
bnd
jp
fwait
dec
lods
lret
in
mov
mov
lock
adc
loop
adc
pop
xchg
imul
mulb
scas
push
not
mov
ss
imul
orl
push
ret
mov
mov
inc
push
xor
shll
cs
add
fs
dec
out
aam
pop
loopne
mov
enter
ss
int3
and
cmp
pop
cmpl
xchg
xor
inc
shlb
fsts
sub
ss
fistps
push
jno
leave
aad
scas
inc
into
les
or
lcall
sarl
dec
ret
adc
sub
mov
and
jae
dec
sub
clc
xchg
and
pop
sub
mov
push
mov
cmpsl
mov
mov
sbb
int
cmc
dec
xchg
in
lcall
sub
mov
mov
pusha
lahf
mov
cmp
cmc
ret
cltd
add
mov
mov
std
inc
ret
movsb
add
mov
cwtl
cmp
push
sbb
dec
cmc
sub
inc
cmpsl
push
repnz
mov
cmp
sub
test
test
gs
sub
add
mov
roll
in
fwait
int3
loopne
mov
jp
scas
add
mov
pop
imul
adc
dec
sbb
lods
loope
ss
xchg
out
mov
pop
add
jle
inc
sbb
xchg
enter
add
adc
dec
adcl
test
pop
enter
out
or
add
inc
jbe
lods
xor
fcompl
cmp
cmpsb
ja
mov
pop
jg
push
outsb
shrl
nop
pop
or
pop
adcl
das
movsb
mov
int3
dec
add
cmpsl
jbe
cmp
sbb
add
cld
sbbb
faddl
mov
pop
scas
cmp
pop
outsb
and
sub
shrl
movsb
push
push
mov
mov
loop
cmp
inc
add
inc
pop
jmp
push
lock
mov
pop
out
int
mov
and
scas
jmp
in
cwtl
and
pop
mov
sub
in
scas
popf
stc
cmp
imul
xchg
out
xchg
sub
out
pop
xchg
xchg
adc
push
push
call
inc
ss
sbb
clc
jno
push
movsl
push
call
loopne
sub
xlat
inc
lods
sbb
enter
out
shlb
mov
or
pop
shl
sbb
dec
inc
stos
adc
outsl
clc
pop
xor
pop
mov
pop
xchg
sahf
aaa
jle
push
adcb
mov
imul
inc
sti
sbb
cmp
es
decb
je
mov
pop
jae
xchg
ret
xchg
adc
add
insl
pop
jmp
scas
mov
adc
inc
sahf
inc
rcr
cmp
stc
inc
add
aad
and
popf
lahf
push
sub
or
and
fdivs
jge
dec
push
inc
mov
add
add
jg
pop
xchg
rorl
test
jbe
dec
xchg
pop
sub
xorb
mov
xchg
xor
mov
push
lahf
xchg
addr16
push
mov
push
scas
jne
in
jb
mov
jg
mov
outsb
mov
xchg
pop
flds
lahf
adc
loope,pt
out
shrb
pop
jp
into
add
daa
ss
jecxz
popa
adcl
sub
adc
frstor
inc
adc
lods
imul
and
ljmp
mov
push
and
mov
dec
xchg
dec
sbb
push
cmp
lods
cmp
cmp
paddw
jmp
mov
test
mov
dec
xorl
xchg
lret
ret
push
rcrb
stc
stc
xor
or
jbe
or
mov
repz
jbe
pusha
ficompl
and
icebp
aaa
out
push
push
mov
movsl
shr
cmp
push
inc
sbb
insl
or
and
inc
mov
inc
mov
lods
fs
ret
pop
in
hlt
xchg
jo
mov
mov
inc
adc
pusha
mov
cmp
mov
inc
popl
pusha
xchg
les
cli
insb
cmc
ret
adc
pusha
test
inc
test
mov
add
ds
movsl
or
pop
pop
inc
or
das
jl
ror
pop
test
scas
mov
rcrb
insb
gs
sub
mov
mov
jl
mov
test
jle
mov
test
aaa
pop
dec
jecxz
mov
mov
push
sbb
and
sbb
cmpb
mov
lods
imul
les
mov
cmp
shl
jnp
lock
shll
push
xorb
sbb
mov
mov
cwtl
mov
bound
cli
pop
push
xchg
out
sub
dec
jp
cltd
cmpsb
out
adc
add
add
outsl
mov
enter
dec
dec
mov
push
sbb
add
sbb
jle
shlb
jns
in
mov
popf
push
dec
xchg
lret
jmp
xchg
loopne
add
movsb
and
mov
test
pushf
push
loopne
push
stos
push
mov
shr
sahf
push
cmpsl
aad
sbb
aad
movq
sub
sarb
fnstenv
mov
repz
jmp
cltd
stos
sbb
mov
xchg
xlat
inc
js
jecxz
rclb
push
jnp
and
into
xchg
inc
imul
xchg
loope
cmp
xchg
jle
cmp
dec
pop
repnz
aam
in
in
sub
mov
nop
mov
mov
jp
sbb
inc
cltd
and
sbb
int
stos
sti
sub
test
lret
xor
cs
insl
adc
out
sbb
cmp
dec
add
jmp
bound
decb
jo
and
and
mov
int
cltd
aaa
xchg
xchg
or
pop
into
mov
mov
in
jno
lock
adc
pop
pop
lods
shll
adc
pushf
test
push
sbb
cmp
movsl
dec
addr16
scas
pop
xorb
add
loopne
fwait
mov
stos
das
push
fldenv
je
in
mov
pusha
lock
mov
je
sub
test
fmull
jne
ret
out
push
sub
mov
outsl
fidivrl
or
or
cmp
push
add
push
adc
sub
movl
rorl
xchg
fdivs
lret
movsb
add
imul
lret
out
xlat
and
xchg
insl
int
lret
pop
and
or
adc
xor
mov
imul
jae
jge
sbb
adc
fwait
xchg
popa
aas
mov
test
mov
jmp
inc
gs
shr
lret
scas
and
push
in
loopne
jp
push
pop
stos
aas
mov
jle
dec
jb
pushf
cmp
rcrl
xchg
cmp
aas
jns
cmpsl
push
clc
pop
xchg
sbb
pop
shrl
ljmp
push
fs
sbb
lea
ret
adcl
xchg
push
fwait
push
push
scas
sub
push
xchg
dec
inc
xchg
in
and
mov
sub
add
xor
inc
or
mov
daa
xchg
dec
repz
mov
jp
or
icebp
test
jno
dec
jp
loope
stos
jp
push
adc
fdivl
cli
loopne
dec
mov
mov
push
mov
add
mov
xor
imul
test
ret
push
jmp
cmpsl
add
pop
daa
jmp
stos
cmpsl
div
pop
fdivrs
dec
dec
out
sbb
xor
jl
or
testl
mov
lds
push
sbb
in
sub
mov
repnz
dec
xlat
scas
sbb
dec
cwtl
add
add
mov
push
in
adc
mov
mov
push
ds
mov
insb
mov
fldt
test
stc
aaa
mov
sub
addr16
stos
push
cs
pushl
mov
fcom
cmp
scas
icebp
mov
mov
dec
pop
and
xchg
pop
adc
jne
inc
push
sbb
ret
pop
mov
mov
adc
popf
loopne
fwait
jnp
mov
imul
add
jae
sub
mov
jle
adc
sub
adc
jg
jmp
bound
and
mov
cwtl
sbb
lods
pop
test
sub
sub
loope
lea
in
pop
sub
push
out
jp
xor
lods
sbb
sarl
fcmovne
loopne
ficompl
jbe
and
shlb
xor
mov
sbb
lock
int3
dec
inc
aam
stc
jle
push
cmpsl
fisttpl
stos
loope
clc
add
or
cmp
xchg
into
pop
je,pt
and
mov
lahf
xchg
xor
xchg
cmpsl
in
lods
or
xchg
roll
cld
lods
pop
xchg
test
imul
sub
popa
das
pop
daa
push
fldl
jb
lods
icebp
lods
mov
mov
inc
loope
cmp
add
insl
andl
fnstenv
jge
pop
es
sub
pop
jns
jae
repnz
mov
cmp
mov
dec
cmp
dec
jmp
fnsave
cli
adc
push
fcoml
dec
fs
mov
repz
push
test
pop
dec
pop
sysexit
cld
mov
xchg
ficoml
adc
dec
mov
jo
nop
cmp
lret
dec
xchg
nopl
loopne
ds
int3
push
and
xor
cmc
and
jecxz
pop
scas
jl
jo
sbb
stos
lcall
rclb
mov
pop
push
jmp
or
add
ret
sbb
loopne
jo
lock
sub
icebp
das
lcall
push
or
pop
jg
popa
push
mov
adc
int3
mov
pusha
adc
push
xor
lea
mov
pop
rolb
mov
cmpsl
cwtl
fsts
pop
cmpsb
sti
ss
adcl
lret
ss
call
fldl
repz
push
jb
in
inc
movsl
jecxz
movb
push
pop
pop
ds
aam
pop
mov
int3
sub
jo
movsb
loope
dec
je
out
xor
xlat
xchg
push
sub
sti
mov
stos
mov
ret
mov
imul
push
cmp
ret
and
cmp
stc
push
xchg
push
jo
ss
pop
jo
dec
out
in
je
movsb
arpl
inc
or
mov
les
fsubs
fnstenv
es
in
mov
pop
lods
dec
stos
cmpb
push
sub
aas
mov
jecxz
daa
adc
lods
cmp
adc
leave
add
enter
insl
aas
not
scas
xchg
mov
push
inc
sbb
pushw
jae
and
decl
dec
cmc
cltd
xor
pop
ss
sti
push
int
push
pop
or
stos
jno
dec
or
jae
adc
dec
test
push
mov
fwait
aaa
xchg
add
jo
int
insl
in
push
movsb
insb
shl
add
mov
and
out
adc
daa
mov
mov
mov
orl
sbb
pop
add
outsb
aas
pop
out
popa
les
xchg
mov
push
sahf
cmp
sbb
idivl
xor
ffreep
cmp
jg
mov
test
jle
push
pop
mov
popa
or
cmp
cltd
mov
cwtl
fcompl
xchg
fwait
sbb
mov
pop
sub
sub
push
xchg
sub
shl
cmpsl
lea
pop
lock
adc
cmp
jge
popa
mov
ret
jg
jns
ljmp
testb
cmp
mov
push
push
adc
mov
jnp
popf
push
ja
mov
sti
into
xchg
aaa
dec
ljmp
jne
fsin
mov
jne
stos
xor
inc
adc
sbbl
push
jae
add
mov
mov
popa
add
lds
jp
lcall
inc
inc
mov
imul
lret
cmp
test
xor
int
mov
xchg
adc
out
aas
je
lock
addl
lea
popa
cmp
jno
stc
inc
or
push
cmc
xchg
mov
and
add
jmp
push
fsubrl
push
jl
call
mov
push
aad
cmpsb
dec
adc
jl
rolb
or
mov
pop
xchg
out
push
jo
cld
dec
xchg
sub
push
adc
lret
mov
mov
std
icebp
cmc
fstp
in
mov
mov
mov
jbe
jecxz
mov
cmovo
add
xor
sbb
sub
pop
inc
sbb
push
xchg
stos
imul
cmp
sub
shll
popa
xlat
dec
loopne
mov
imul
pop
popa
xor
adc
fcoml
pop
inc
imul
cmp
addr16
or
xchg
adc
push
sub
pop
cmpsl
jmp
in
mov
mov
pop
mov
push
push
add
pushf
aad
pop
inc
jl
push
imul
or
and
out
inc
xor
mov
fdivs
ja
mov
xchg
lret
push
jle
mov
add
imul
and
fisubs
mov
xor
ret
dec
or
mov
jae
stos
mov
out
lods
sbb
cwtl
icebp
adc
fisubrl
fadd
or
mov
mov
shl
mov
adc
fdivs
ret
cmp
lcall
jmp
xor
cmp
xchg
outsl
lock
out
sbb
test
bnd
or
or
lds
lods
add
ljmp
enter
shll
sub
movsl
cld
dec
xor
ja
jne
jne
and
mov
push
fisttpl
shr
mov
outsl
hlt
xchg
into
add
popf
repz
stc
and
bound
xor
mov
or
adc
jne
scas
and
sub
jmp
jnp
loop
mov
push
mov
and
test
data16
jl
xchg
push
dec
out
jmp
lds
dec
jbe
lds
sbb
popf
shrl
inc
cmpsb
dec
cmp
mov
call
lods
or
pop
ja
fists
push
mov
sub
xor
jp
sahf
sbb
aad
xchg
cltd
sbb
movsl
bsf
pop
fldenv
jge
in
insl
addl
jbe
or
and
cmc
lds
outsb
dec
aaa
push
lret
ljmp
sbb
xchg
push
or
jae
cmpsb
lret
mov
mov
cltd
js
mov
outsl
pop
jbe
sub
cltd
les
scas
nop
or
clc
fisubs
add
mov
lret
xchg
call
mov
fcoml
aas
xchg
adc
pop
xor
mov
arpl
cmpsb
jp
xchg
cmc
sbbl
mov
fsubs
jl
movlps
popa
mov
rcrb
jp
adc
stos
cmc
xor
xor
adc
dec
movsl
fimuls
flds
stos
lods
lds
sbb
cli
cmp
mov
and
or
mov
mov
xchg
divb
or
and
push
dec
xchg
adc
inc
popa
sbbb
push
es
hlt
adc
mov
popl
movsb
ja
div
out
loop
cmp
jbe
ljmp
mov
jg
xor
sub
xchg
or
pusha
mov
fisttps
bound
aaa
push
xor
or
inc
mov
mov
imul
xchg
cmp
test
mov
mov
add
enter
add
sub
hlt
and
les
in
inc
xchg
jae
mov
mov
cmpsb
mov
out
sbb
repnz
daa
mov
ret
aas
pop
or
push
mov
test
repnz
jo
mov
aaa
int
mov
ret
fdivrs
xchg
sbb
pushl
or
or
xchg
push
push
sub
mov
decb
imul
das
lahf
test
adc
fidivs
mov
push
addr16
idivb
xor
cmpsb
mov
repnz
cwtl
cmpsl
insl
add
add
sbb
scas
lret
movsl
pop
mov
scas
lahf
movsl
clc
js
mov
pop
fidivrs
pushf
jo
in
pop
pop
ljmp
sahf
out
sub
cli
mov
es
subb
lds
daa
cmp
sub
rcll
or
mov
je
sbb
xchg
push
pop
outsb
movsb
div
inc
imul
and
mov
add
cwtl
lock
pop
in
into
loope
mov
cltd
addb
scas
ret
mov
jbe
test
xchg
not
pop
cmpsl
or
aas
adc
jge
cmp
stos
movsb
pop
leave
push
push
adc
into
pop
xor
mov
insb
imul
in
mov
cmc
and
add
pop
xor
mov
and
add
and
rcrl
sub
pop
movsl
repz
dec
mov
add
xor
push
inc
lret
add
pop
lcall
jp,pn
sbb
sub
push
out
or
jae
push
orl
jecxz
ja
fstl
cld
sub
cmpsl
jbe
xor
test
pop
pop
mov
fisubl
test
sbb
and
pop
push
jecxz
pop
stc
mov
mov
dec
popf
push
push
push
jbe
shr
outsl
orl
mov
clc
sarl
inc
xchg
cmp
xor
fistpl
and
call
fdiv
jne
rep
ret
retw
es
cmp
clc
xchg
adc
aaa
lods
stos
and
notb
pop
das
or
int
push
mov
outsb
cmp
mov
test
pushf
or
rcrb
test
in
lret
les
cltd
jo
jno
inc
and
xor
das
shrb
cmp
jge
pop
mov
adc
loop
mov
icebp
xchg
repnz
mov
mov
into
sarb
stos
ss
push
negl
sbb
xchg
sbb
int
test
pop
insb
dec
xchg
mov
pop
aad
ja
sbb
cld
iret
jns
vpcmpgtd
inc
or
inc
push
push
dec
pop
cwtl
jmp
and
jge
pop
ja
pop
fists
cmpsl
cmp
push
mov
cmpsl
clc
jnp
xchg
negl
sub
mov
sub
xchg
adc
jb
jae
js
pop
dec
std
das
out
leave
lahf
test
mov
adc
and
pusha
add
dec
nop
xchg
adc
jle
mov
test
fistpll
and
push
test
and
sub
pop
popf
pop
sbbl
xchg
rorb
pop
jo
pushf
cmp
or
int3
movsl
test
jae
mov
addl
cmp
inc
std
push
imul
mov
mov
jb
lcall
inc
test
repz
stos
adc
imul
push
arpl
ss
mov
inc
roll
out
mov
mov
sbb
adc
jno
cmp
nop
ret
dec
sub
add
push
lods
mov
mov
push
xchg
jns
sahf
push
xchg
cmp
hlt
mov
mov
mov
out
inc
pusha
and
or
cmp
mov
push
loope
dec
xor
sbb
xchg
sbb
pop
and
xchg
lds
xchg
sar
xchg
repz
xor
loopne
inc
jne
push
pop
mov
sbb
hlt
mov
jle
xchg
xchg
lahf
loop
fucomp
fwait
jp
in
pop
ja
pop
sti
sbb
aas
clc
sbb
mov
jge
mov
mov
cmp
scas
sbb
aam
xor
or
faddl
loope
jecxz
clc
jmp
call
pop
clc
cli
int3
sub
mov
es
fwait
xlat
in
adc
bound
mov
and
jg
int
insl
repnz
das
xchg
jge
mov
cmp
adc
sub
insb
sbb
adc
addl
xchg
jo
inc
push
push
pop
or
insl
xlat
lds
mov
cmpsl
sbb
adc
add
jge
cmp
movsb
data16
xchg
xchg
inc
lds
test
dec
mov
cltd
jecxz
pop
fidivrl
nop
jp
pushf
fildll
out
jae
lcall
xchg
das
test
inc
jge
dec
lods
cltd
mov
popf
mov
or
fdiv
clc
cmp
loop
cmpsl
push
sub
push
ror
mov
xlat
leave
pop
pop
incb
jno
inc
shrl
loop
repnz
inc
xchg
lock
ds
dec
fsubrl
mulb
rorb
test
sarl
xchg
add
inc
les
mov
addr16
mov
ds
ja
dec
fsub
mov
adc
loop
outsb
sub
cmc
inc
sbb
jns
adc
mov
sbb
adc
inc
and
test
cmc
insl
and
lds
clc
push
or
gs
or
sahf
movsb
mov
mov
xchg
into
popf
sahf
mov
aas
dec
or
push
test
into
xor
add
sbb
hlt
push
repnz
ds
push
add
imul
int
push
outsb
mov
cmpsl
insl
repnz
or
mov
cmp
mov
push
ds
mov
add
sub
notb
add
test
cmp
jecxz
ljmp
sub
enter
in
les
and
les
mov
stc
add
and
xor
mov
movb
pusha
sahf
cmpsb
xchg
or
sub
mov
mov
sub
aaa
sbb
sete
inc
movl
ljmp
jne
xlat
in
inc
cmpsb
pop
icebp
inc
pop
add
cwtl
xchg
dec
xor
push
sti
clc
xchg
lea
cmp
sti
push
inc
cmpsb
xor
mov
mov
roll
mov
gs
sub
xor
arpl
push
mov
sbb
es
mov
dec
adc
xor
adc
aam
fisubrl
xchg
cmc
and
cmp
pop
xchg
and
jno
lock
jnp
push
or
lds
inc
cmp
repz
es
andl
push
pop
ljmp
in
lock
inc
sbb
out
in
inc
lret
leave
loope
jle
repnz
gs
cs
rcrl
cltd
adc
or
push
xorb
fs
mov
or
outsl
xchg
or
sbb
cmpsl
jp
dec
jbe
loopne
sahf
loop
lahf
jg,pt
shl
shrl
aam
test
loope
in
repnz
cmp
and
jb
fildl
int
jl
mov
mov
stc
or
inc
out
pop
pop
cs
xor
hlt
push
jge
mov
jno
dec
sarl
or
shr
push
dec
push
push
mov
jg
sar
movsb
mov
mov
sbb
mov
in
data16
xchg
sarb
dec
enter
xor
pushf
mov
sub
dec
pusha
lock
mov
mov
data16
je
in
shlb
mov
fcom
sub
lods
stc
mov
outsb
xor
arpl
mov
ret
or
lret
push
mov
xor
lock
mov
imul
mov
pop
lahf
shrl
lods
les
cltd
in
lahf
imul
xchg
mov
or
xlat
mov
addl
xchg
sbb
repnz
inc
or
call
sar
pop
mov
je
and
pop
std
rcr
mov
jecxz
dec
dec
in
mov
push
ja
shlb
mov
jb
arpl
cmp
sub
sub
xchg
dec
mov
pop
cmp
iret
sbb
popa
lret
pop
pop
push
sbb
push
sub
mov
clc
cli
test
mov
inc
stc
test
sbb
out
fistpll
inc
lock
add
lahf
cs
repz
mov
dec
and
addr16
jae
push
push
inc
mov
pop
xor
scas
fldl
fisubl
pop
faddl
in
push
aad
std
dec
inc
mov
dec
ret
mov
sub
xor
out
adc
dec
test
lcall
sar
mov
xor
and
pop
cmp
outsl
jno
mov
cmp
ljmp
dec
sub
sbb
adc
mov
outsb
and
mov
notl
add
test
addr16
mov
add
cld
sbb
out
add
cs
std
je
mov
xor
dec
jno
call
sub
mov
xor
das
pusha
cmpl
pop
fiaddl
sub
mov
ss
pop
cld
mov
cmpsb
cmp
or
ljmp
dec
and
jae
xchg
jae
out
jno
inc
cmp
dec
gs
mov
push
ja
cltd
das
push
ljmp
lods
add
cmp
fwait
mov
sub
xchg
rolb
and
cmpsb
sbb
add
mov
mov
cmp
in
xorl
mov
lods
movsb
push
dec
push
adc
push
cmp
jg
mov
mov
xchg
push
rcll
dec
and
xor
xchg
push
inc
repz
adcb
inc
sarb
dec
nop
or
push
xor
inc
out
repz
jle
lods
mov
jecxz
xor
lahf
cs
mov
cld
cltd
hlt
push
std
cmp
dec
push
popf
ret
pop
mov
test
test
fwait
movsb
xchg
out
dec
and
cli
pop
rclb
ret
insl
sti
xchg
and
inc
and
add
movsb
lret
mov
jnp
iret
lods
xor
je
mov
xor
inc
push
repz
mov
iret
adc
dec
mov
addb
jmp
movsl
add
fs
xchg
in
out
inc
push
aas
daa
push
dec
iret
dec
pop
xchg
test
push
data16
cs
jle
jl
adcl
aam
pop
out
popa
and
pushw
sbb
inc
push
jg
lea
or
fiadds
fs
cmp
test
mov
adc
sbb
push
xchg
add
inc
xor
pop
int
cmpsl
jmp
push
fidivs
mov
popa
push
sbb
cmp
xor
mov
sub
or
mov
pop
inc
std
push
dec
insl
lods
shl
ret
test
aam
push
sub
cwtl
pop
sub
das
push
arpl
sahf
daa
lods
mov
push
mov
and
not
in
cmp
negb
fs
notl
mov
xchg
jle
lcall
repnz
mov
int
inc
dec
divl
aas
ljmp
pop
mov
and
pusha
mov
mov
cmp
inc
negb
gs
outsl
pop
push
mov
add
cmp
ja
xchg
mov
leave
pushf
out
scas
jo
jp
stc
pop
pop
outsl
jo
jns
mov
or
shll
enter
mov
xor
xor
sahf
cmpsl
inc
test
xchg
xchg
gs
lahf
add
push
ss
xchg
cli
pusha
xor
adc
mov
cs
test
pop
scas
scas
add
imul
push
mov
test
js
aas
push
ror
xor
ror
hlt
outsl
andb
sub
les
push
leave
lret
sub
inc
jmp
mov
jne
rorb
shlb
push
sub
inc
gs
daa
movsl
sbb
in
fdivr
mov
repz
mov
das
pop
idivb
stos
sub
and
xchg
sub
jp
inc
bound
aad
mov
push
out
outsb
xor
dec
dec
dec
in
xchg
add
mov
sti
inc
std
or
test
fdivr
xchg
sti
in
pop
fldenv
lret
mov
loopne
stos
jnp
ljmp
pop
dec
jmp
je
jo
inc
jecxz
insl
mov
test
lock
loope
js
adc
movsb
and
add
adc
out
jle
test
fs
scas
lea
gs
cmp
pop
loop
sbb
dec
jbe
mov
cli
bound
sbb
push
out
pop
loope
icebp
neg
movsl
jb
xor
popf
push
stos
mov
pop
adc
fbld
sbb
rorl
sbb
push
dec
in
decl
out
push
or
lcall
pop
mov
push
mov
mov
mov
js
neg
mov
or
inc
fdivr
aad
add
dec
int
mov
inc
loope
addb
fs
cmp
and
cmp
repnz
rol
or
scas
stos
adc
jnp
inc
icebp
hlt
hlt
cmpsb
cmp
jno
push
and
jae
rcrb
jecxz
mov
repz
pop
dec
fwait
or
mov
subl
lock
fstp
jne
jbe
dec
ret
sbb
cltd
adc
adc
or
movsb
sbb
scas
mov
or
ds
xor
sti
xchg
jnp
mov
into
pop
cmpsl
mov
xor
outsb
adcl
lock
movsl
jge
aam
sbb
mov
mov
mov
push
or
cs
test
push
cmp
mov
cmc
sbb
cmp
rclb
adc
aam
sub
inc
add
lcall
jbe
pop
adcb
mov
fsubrs
mov
push
adc
ja
fists
push
dec
dec
lcall
jl
xchg
out
xchg
cmp
js
jae
adc
addr16
loope
iret
scas
xor
push
shlb
mov
xor
push
adc
lods
in
push
sahf
mov
je
pop
push
lods
pop
enter
ret
jbe
stos
jp
mov
rcrb
lds
mov
mov
loope
je
int
adc
and
pusha
in
jns
mov
push
test
xor
test
jge
xchg
adc
test
decl
push
arpl
lea
test
jp
jnp
cwtl
shrl
leave
inc
cli
ret
test
lahf
xor
mov
mov
cld
jb
mov
jns
mov
inc
mov
or
cmc
inc
mov
scas
loope
or
dec
dec
push
dec
lock
test
insb
dec
adc
sbb
dec
jge
jmp
pop
pop
popf
dec
push
add
mov
xchg
pop
popaw
fistpl
pop
pushf
pushl
in
cmp
xchg
adc
mov
decb
push
mov
cwtl
shll
gs
pop
sub
add
sub
in
aaa
cmp
addb
mov
mov
fdivr
or
sbb
ror
idivb
mov
xchg
pop
mov
pop
inc
push
sub
pop
dec
inc
mov
imul
push
mov
sbb
mov
pop
lds
mov
aaa
push
cmc
dec
jecxz
push
imul
nop
cld
push
les
repz
add
inc
cmp
xchg
mov
incl
pop
sti
je
adc
lods
das
cmpsb
popa
dec
or
ficoml
mov
inc
addr16
sbb
in
in
mov
and
mov
scas
jae
push
mov
sub
inc
mov
iret
sahf
and
and
jb
cli
mov
or
out
jno
jecxz
adcb
fidivrs
jbe
push
xchg
inc
pusha
ja
xlat
adc
adc
inc
cmc
das
mov
pushf
or
shll
push
xchg
notl
shl
dec
jne
inc
int3
cltd
int3
inc
cmc
dec
and
cmpsl
or
adc
jo
repnz
pop
pop
daa
test
and
push
out
xchg
jno
fcos
mov
aas
bound
inc
pop
inc
scas
inc
pusha
mull
int
mov
cmp
sub
bound
xchg
xchg
stos
xchg
std
pmaxub
sbb
je
pop
pop
lock
pop
in
and
inc
mov
mov
daa
and
ja
sarb
roll
push
xor
pop
add
xlat
dec
out
add
or
arpl
cs
aas
aam
fsin
inc
fldenv
sti
addr16
jmp
mov
add
dec
cmpl
outsl
xor
aad
out
pop
in
and
and
xchg
hlt
dec
into
outsb
add
mul
test
bound
push
outsl
jl
dec
pop
jns
jnp
stos
push
and
leave
cmc
mov
sti
call
push
sub
pop
mov
loop
inc
dec
cmp
mov
inc
cmp
shll
lcall
inc
pop
adc
scas
sbb
add
pop
xchg
mov
sub
test
enter
repnz
ret
sbb
push
cmp
jecxz
xor
mov
iret
cmp
cmpsb
add
dec
pop
lock
sbb
or
add
push
and
cld
cmp
mov
push
ja
fldt
or
sahf
adc
pop
adc
into
or
mov
xchg
add
fcoml
pop
sub
in
inc
mov
lcall
xlat
in
es
or
xchg
jp
idivb
adc
adc
sub
sti
add
cmp
test
mov
jmp
test
lcall
unpcklps
push
cwtl
in
sub
xchg
or
push
loop
add
rol
jp
sub
mov
adc
jp
dec
and
push
je
hlt
push
hlt
fs
or
push
add
jno
lcall
sub
icebp
popf
mov
movsl
out
pushf
jno
iret
popf
cmp
and
aam
insb
fwait
clc
movsl
jae
mov
inc
add
inc
and
add
arpl
push
jmp
push
mov
and
fwait
xor
push
lahf
lret
jns
xor
jg
mov
mov
mov
mov
mov
xor
lods
das
or
call
das
lea
lods
in
ret
orl
mov
mov
sahf
and
dec
inc
aad
clc
xchg
dec
cmp
lods
dec
dec
daa
dec
mov
inc
das
add
or
jecxz
stc
mov
pop
xor
or
int3
ljmp
add
arpl
insb
jmp
or
add
jbe
xchg
repz
pop
adc
jmp
test
inc
lea
xor
js
jne
shlb
adc
mov
push
push
adcb
and
cmp
adc
xchg
shll
and
ljmp
outsb
lods
adc
jo
mov
jmp
sti
subb
in
fldl2t
jmp
fidivrs
xor
andb
adc
xor
sub
sbb
insb
mov
arpl
cmp
pushf
lods
fs
jno
sbb
int
inc
xchg
pop
push
imul
insl
dec
fs
sub
lret
cli
test
cltd
in
pop
ret
fwait
sarl
push
outsl
jne
mov
mov
jecxz
ds
add
sbbl
je
inc
fsubl
fdivrs
sahf
out
push
cmpsb
test
mov
xchg
arpl
inc
rol
fldcw
push
call
and
xchg
add
lds
lahf
outsl
push
xor
and
ds
mov
out
rcrb
jns
jmp
ficompl
aas
pop
push
xchg
mov
mov
outsb
and
mov
cmp
enter
or
xlat
sbb
imul
push
pop
addb
cld
dec
addr16
pop
in
in
xchg
add
inc
sbb
pusha
adc
test
mov
ret
push
fdivl
xchg
dec
nop
test
mov
mov
pusha
jp
push
mov
and
xchg
sahf
imul
jne
inc
push
stc
subl
fwait
cmpsl
fsubs
jne
out
inc
fucomi
xchg
rcrl
je
jge
push
cmc
lds
in
pop
into
xlat
or
push
rcrl
adc
dec
mov
aad
adc
jp
lods
stos
in
sarb
push
mov
sub
sbbl
mov
xchg
aam
mov
enter
cwtl
push
ret
cwtl
pop
sub
les
dec
jae
icebp
add
scas
or
imul
insl
cmp
ds
lret
insl
out
adc
dec
dec
xchg
mov
daa
sub
sbb
testb
pusha
movsb
cmovge
sbb
dec
das
ljmp
mov
daa
test
cli
insl
aad
add
dec
xlat
jbe
divb
scas
repz
xor
cltd
test
out
rorl
or
sbb
or
or
rep
pop
push
repnz
divl
out
dec
arpl
rcr
inc
cmc
jecxz
pop
test
aam
fildll
mov
add
ds
mov
mov
shr
xchg
repnz
popa
in
rorb
xchg
push
lds
ret
enter
mov
cli
sbb
movsb
insb
adc
dec
cmpsb
out
dec
cmp
cmp
inc
mov
or
sbb
insl
push
stos
sbb
mov
stos
xchg
cmp
push
xor
dec
mov
xor
gs
aad
gs
mov
adc
and
mov
xchg
jno
pop
loopne
in
lods
mov
push
int
adc
ret
leave
jb
out
pop
mov
call
cmpsl
mov
dec
rolb
arpl
ficompl
mov
test
add
dec
cwtl
xor
fisttpl
aaa
stos
rorl
inc
and
inc
jno
add
test
push
inc
test
sub
inc
pushf
stos
rorl
iret
ret
cmp
jl
insb
cwtl
jo
lcall
in
xchg
int
xor
or
bound
stos
leave
sbb
dec
xchg
or
add
in
sti
and
and
daa
sbb
into
push
xchg
jecxz
push
or
jb
push
test
cmp
and
mov
lock
daa
xor
dec
insl
sbb
inc
mov
out
int3
push
inc
push
movsb
mov
push
dec
and
cmp
jns
sbb
fimull
mov
sbb
sbb
pop
repz
jne
add
hlt
or
jle
pusha
leave
into
rcr
inc
sbb
and
les
rcrb
sbb
into
inc
fstpl
lret
lods
dec
scas
or
sbb
in
mov
dec
dec
leave
push
or
pop
push
aaa
adc
inc
sbb
movsl
lods
imul
push
xor
jp
mov
cmpsl
lea
mov
testb
sahf
lea
int3
push
imul
xor
std
cltd
mov
inc
mov
pop
es
and
cs
mov
outsl
push
mov
lret
or
frstor
sbb
jecxz
add
dec
in
fadd
xchg
icebp
ret
inc
inc
out
xlat
lds
loop
sbb
loop
stc
mov
inc
rcrl
scas
fmuls
pop
and
and
and
sbb
inc
cs
test
verr
scas
pop
test
loopew
es
jge
jp
scas
imul
pmaddwd
xor
inc
cs
sub
jle
pop
xchg
pop
adc
repz
in
jl
push
pusha
cmpsl
stos
pop
mov
xchg
xchg
das
repnz
dec
xchg
imul
cmp
pop
adc
sahf
mov
jl
je
mov
js
repz
scas
test
mov
insb
pop
fnstcw
adc
xchg
sbb
lcall
neg
xchg
sbb
rcrl
mov
test
mov
adc
arpl
mov
imul
push
sub
sub
negl
mov
std
mov
inc
jg
icebp
insb
dec
or
push
rclb
dec
adc
iret
loope
cld
inc
mov
sbb
cltd
push
sbb
dec
pop
inc
andl
xchg
mov
sar
aas
jo
fmul
sub
out
mov
out
dec
lahf
scas
out
inc
xchg
cmp
repz
rolb
adc
fistpll
movsb
jmp
jmp
jb
push
popa
fbstp
push
lea
psraw
xor
xchg
sub
cmpsl
fistpll
jmp
dec
repz
pop
lock
ja
push
lret
dec
mov
sbb
shl
pop
pop
xchg
fdivrs
push
enter
jbe
jae
fidivs
mov
jb
inc
mov
mov
jp
inc
xor
xchg
push
mov
add
jb
shr
int3
push
call
inc
sub
jae
aam
mov
int
js
jne
sti
paddb
lcall
test
insl
mov
mov
scas
insl
aaa
push
pop
addr16
lret
adc
loopne
xchg
xchg
sub
fdivr
xchg
or
ja
cmc
xor
enter
arpl
push
ds
jo
jl
dec
insb
mov
les
iret
jbe
fwait
nop
pop
cmp
inc
lahf
popf
scas
adc
cs
xchg
aas
sub
sbbl
adc
ljmp
xor
bound
adc
xchg
inc
push
mov
test
lret
add
repz
fidivs
loop
les
cmpsb
sub
xlat
mov
cmpsb
sub
in
sub
or
int3
popa
cmpsl
mov
jp
addr16
pop
push
add
xor
mov
sbb
loop
dec
xor
jl
bound
inc
push
adc
push
xchg
xlat
aad
xchg
dec
xchg
aad
adc
or
pop
or
push
pop
cmp
imul
xchg
cmpb
push
sub
jns
xor
aaa
inc
testb
sbb
leave
dec
inc
push
ret
add
ljmp
xchg
push
dec
mov
push
cmp
jbe
xchg
inc
test
pusha
ljmp
xchg
cmp
cs
xchg
jne
das
jmp
add
mov
mov
out
pop
mov
pop
out
aad
les
pop
cmp
sub
not
mov
int3
out
jmp
xchg
pop
push
dec
mov
shlb
push
scas
fisttpll
aaa
inc
cmp
stos
loopne
push
push
std
pop
gs
xchg
or
movsl
fisttpl
jbe
in
mov
fnstsw
enter
loopne
mov
push
popf
xor
fildll
and
enter
jp
pop
movsl
xchg
sbb
leave
sub
lret
add
ret
xor
xchg
fsubl
repz
inc
test
mov
aas
test
sub
lock
adc
xor
fistpll
iret
sub
dec
and
dec
xchg
mov
inc
stc
and
xor
fisubl
aam
mov
daa
ret
outsb
or
imul
xor
pop
adc
pop
jae
fmul
call
mov
cmp
push
stos
repz
xor
repz
fstps
loop
insb
lods
mov
and
nop
in
je
in
pop
shlb
pop
mov
movsb
dec
pop
jb
or
fldcw
sub
push
lea
ror
jae
cmp
int3
aaa
test
inc
jno
pushf
push
je
lea
mov
jo
inc
jmp
pop
lret
and
paddusw
push
scas
je
adc
imul
push
pop
adc
inc
sbb
and
adc
fs
mov
sub
dec
xor
cld
into
mov
mov
adc
movsb
ja
sub
pop
cmp
sahf
add
or
dec
fs
ljmp
adc
sub
mov
lcall
inc
push
adc
add
sbb
psllq
sub
mov
xchg
and
pusha
sbb
xlat
out
jecxz
pop
stos
push
lret
and
push
mov
in
cmp
vpmaddwd
lcall
andl
call
repnz
int3
popa
in
mov
cmp
cli
xchg
pop
lret
ffree
cld
movsl
fwait
push
lods
sbb
out
jle
imul
shlb
js
fchs
adc
mov
notb
pop
fmul
inc
mov
cmp
inc
adc
pop
lods
fdivs
adc
jecxz
popl
pop
mov
push
xchg
pusha
roll
mov
add
mov
pop
dec
aas
xchg
insb
or
cmp
imul
pop
push
pop
cmp
leave
in
push
push
sbb
lods
fiadds
xchg
addr16
jno
mov
ret
xchg
test
movsl
mov
in
retw
mov
sub
mov
imul
mov
popf
adc
and
lret
or
mov
ja
or
shrl
pop
mov
outsb
xor
stos
cmpsl
inc
mov
push
cmc
pop
andl
ret
sahf
lret
int
dec
xlat
cmp
dec
fwait
cmp
pushf
fcomps
mov
mov
repz
and
sbb
pusha
dec
sub
lcall
sub
arpl
test
outsb
jbe
ja
hlt
call
adc
fsubr
mov
shll
lock
or
lahf
lods
enter
cmp
fnstenv
movsb
cld
xor
inc
das
fstps
stos
cmp
mov
ret
add
arpl
and
mov
and
mov
sbb
add
repnz
cltd
fmuls
cmpsb
stos
aas
push
cli
or
xchg
lods
stos
ss
and
dec
jecxz
jecxz
movsb
fdivs
frstor
or
bound
or
insw
push
mov
lcall
adc
ret
test
sub
sub
pusha
or
imul
mov
ss
aas
adc
lea
cmp
aaa
sbb
inc
lods
arpl
or
sub
leave
inc
mov
pop
sbb
scas
rcl
dec
stc
cmc
loopne
lds
pop
cli
fwait
cmovne
xchg
sbb
dec
xchg
addr16
and
push
icebp
dec
mov
addr16
jb
push
push
and
les
fisttps
jb
out
sti
jg
push
lahf
add
stos
pop
lods
mov
push
fistps
pop
out
sub
sub
into
push
sub
test
xor
out
dec
mov
sahf
test
sahf
movsb
xchg
cmc
inc
jnp
popa
cmp
sahf
xor
stos
insb
insl
std
dec
mov
in
xchg
push
rcrb
cmp
scas
loope
shll
sub
fs
dec
xchg
sbb
sub
andb
xorl
and
lcall
cmp
loopne
lret
cwtl
outsl
pushl
sbb
fadd
push
jmp
xlat
jno
nop
aas
sub
adc
push
shrb
icebp
push
movsl
stc
loopne
sub
mov
movsb
xor
shr
js
inc
pop
cltd
sbb
push
dec
pop
in
ss
adc
sbb
mov
mov
rcll
jg,pt
cli
jns
call
jbe
sub
and
jo
out
push
add
sub
sbb
jno
in
ficompl
out
int
inc
pop
call
repnz
add
jmp
popf
pop
or
or
addr16
dec
sub
inc
pop
loopw
ss
push
mov
aaa
mov
xchg
addb
lea
xorb
mov
mov
and
dec
jno
mov
xchg
sbb
cli
sbb
loope
dec
jge
push
mov
add
add
sub
or
iret
icebp
mov
pop
arpl
pop
scas
push
clc
sbb
xor
ja
out
out
int3
ffree
aam
and
les
mov
scas
dec
and
mov
lods
cmp
stos
jmp
das
ja
sbb
ljmp
pop
stc
je
shrb
iret
push
stos
es
mov
clc
cli
inc
xchg
mov
popa
xorl
out
push
pusha
scas
dec
aam
daa
cmpsb
push
mov
aas
xor
hlt
pop
sbb
scas
fbstp
pop
sbb
jno
fidivl
ror
fiadds
dec
dec
push
adc
adc
inc
pop
lock
xchg
xor
arpl
roll
inc
pop
pop
and
pop
dec
int
mov
mov
out
cmp
lcall
add
sahf
jecxz
sub
pop
xor
xor
jnp
mov
into
ret
hlt
xchg
push
add
push
and
out
push
pop
js
mov
push
mov
add
jns
jl
push
out
out
js
mov
rcrl
sbb
sbb
sahf
xchg
cltd
fbstp
daa
pop
push
mov
test
xlat
lods
and
sbb
int
jbe
js
sbb
pop
mov
mov
xchg
xchg
mov
jb
js
out
iret
push
adc
in
mov
rcl
adc
test
test
pop
je
and
scas
stc
jmp
pop
adc
xor
xchg
mov
fsub
mov
neg
lock
lcall
xchg
push
outsl
test
mov
fsub
add
xchg
repz
mov
push
sbb
les
push
push
in
sbb
lret
push
ljmp
inc
in
xor
outsb
shrl
xorb
les
sti
lahf
mov
popa
arpl
fwait
or
dec
data16
pop
les
scas
testb
out
call
mov
push
adc
push
push
outsb
cld
or
dec
test
es
push
rcrl
pop
sbb
jle
push
cmp
or
add
pop
stos
pop
sbb
icebp
in
push
arpl
mov
mov
std
cmp
bound
add
divb
cmpb
int3
imul
sbb
pusha
adc
sbb
cmpl
les
xchg
push
shlb
add
sub
call
xchg
ss
mov
cmp
inc
icebp
or
xchg
aad
iret
jl
xchg
pop
mov
setb
fildll
into
fsubrs
fnstenv
dec
ret
xchg
adc
xchg
adc
fisttpl
mov
pop
lock
iret
shlb
jae
jne
mov
lahf
push
enter
xchg
pop
aaa
pop
dec
clc
or
lea
mov
add
fistps
pcmpeqd
pop
sbb
lcall
iret
mov
das
pusha
test
pop
or
icebp
jnp
mov
ret
fcomi
push
cmpsl
sub
pop
dec
les
sbb
add
pop
or
in
sbb
into
mov
outsl
pop
pop
gs
pop
icebp
rcrb
push
mov
mov
mov
mov
mov
leave
dec
es
adc
or
mov
fdivp
jbe
shl
lea
xchg
sub
dec
mov
cmpsl
dec
cmp
scas
sub
xor
pop
xor
aam
pop
lds
into
mov
xchg
loope
sti
jl
sub
faddp
insb
cld
out
ljmp
cmp
clc
cli
ret
hlt
dec
jb
cmpsb
sbb
xchg
ds
aad
mov
xchg
sbb
sbb
jb
push
out
adc
insl
rorb
fldt
mov
das
lahf
out
mov
jne
inc
popf
xchg
mov
movb
int3
lret
insl
mul
mov
daa
jmp
ret
fwait
adc
xchg
popl
xchg
psllq
cmp
sub
scas
xor
push
jne
xchg
shlb
ss
push
nop
imul
shr
adc
sbb
push
inc
adc
cmp
leave
jb
mov
pop
insl
shl
std
lret
pop
dec
xor
movsl
add
add
ret
sahf
jge
imul
inc
xlat
mov
mov
into
inc
test
sub
mov
or
bound
vunpckhpd
push
icebp
lds
inc
inc
cmp
icebp
lret
mov
mov
pusha
and
jns
push
shl
sbb
pop
lcall
ror
sub
mov
js
nop
sub
fsub
push
inc
push
pop
pop
or
movsb
mov
sbb
movsb
push
cmc
jbe
and
cmp
add
jnp
pop
cs
std
inc
arpl
test
sub
mov
data16
xor
jno
push
movsb
xor
push
fcmovnbe
mov
mov
lds
mov
sbb
iret
adc
cltd
scas
scas
pop
jle
shl
jno
fisubrs
pop
cmp
or
sbb
inc
inc
mov
fistpll
call
dec
mov
lods
rclb
ljmp
in
pop
arpl
fstl
fidivs
insb
lods
bound
cmp
popl
les
cld
push
inc
test
push
dec
scas
fidivl
les
es
cwtl
lcall
cli
lea
xchg
mov
pop
push
push
mov
sbb
jnp
out
inc
call
icebp
test
je
mov
hlt
push
xlat
inc
cmpb
adc
push
data16
pop
rcrb
rcr
mov
iret
imul
je
xchg
hlt
sub
fimull
and
jne
cmc
xchg
mov
outsl
inc
jmp
inc
aaa
pop
out
xchg
push
mov
shll
imul
imul
xchg
mov
sub
pop
lret
dec
sub
outsb
cli
pop
dec
daa
das
je
fnsave
inc
and
mov
adc
pusha
rorb
movsl
ds
repz
add
fs
pop
sub
push
fistpll
or
mov
and
jnp
mov
int
xor
sbb
roll
jecxz
cs
pop
push
xchg
or
ja
cmc
xchg
fs
jo
fiaddl
mov
mov
lret
or
scas
movsb
rcr
lret
xor
push
or
cmc
jecxz
aam
pop
and
lods
scas
mov
cwtl
lods
in
push
sbb
pop
icebp
xchg
lock
dec
adc
pop
xorl
sbb
cmpsl
sbb
mov
divb
out
inc
daa
enter
lret
mov
idivb
xchg
jnp
dec
dec
sbb
xor
vunpcklps
subl
shll
xor
jg
push
fcompl
sahf
pop
rcrl
pop
int3
adc
insb
int
ds
fmull
mov
dec
sub
scas
jno
in
xchg
pop
aad
and
push
leave
nop
repnz
adc
sbb
adc
jmp
jecxz
stos
xchg
mov
xchg
xchg
or
jmp
pusha
rorl
push
stos
js
push
push
push
jmp
mov
outsl
push
mov
xchg
adc
inc
mov
je
inc
sbb
pop
pop
lods
jae
lcall
cs
xchg
test
adcl
mov
dec
pop
js
lea
jl
cwtl
adc
jno
sbbl
shrb
xchg
mov
inc
xchg
push
out
push
jbe
mov
ja
test
fs
in
jp
inc
adcl
xchg
push
out
iret
push
mov
shlb
stos
xor
daa
jmp
jb
sub
jecxz
in
and
xchg
lods
ljmp
inc
mov
aaa
repz
int
negb
mul
imul
pop
orl
add
sbb
mov
fdivrl
dec
movsb
out
mov
jl
sbb
add
aas
scas
outsl
dec
jne
jo
cwtl
nop
cmp
xchg
mov
cmc
stos
push
mov
ret
xor
pop
lea
inc
xor
aas
andl
mov
loopne
jbe
mov
and
inc
sub
push
mov
sub
loopne
jbe
add
inc
add
icebp
aas
mov
fists
sbb
adc
mov
shlb
pop
mov
ret
shrb
data16
sub
fisubrs
mov
fwait
sbb
test
xchg
scas
and
gs
xor
xchg
pusha
stos
xchg
push
pop
pushf
sub
dec
into
cmc
int
add
fidivs
or
lods
fisubrl
lods
cli
sub
inc
cld
inc
int3
xor
cmc
in
add
iret
repz
lcall
jne
pop
daa
and
in
jl
mov
sbb
jb
call
jo
aam
xchg
int3
stos
outsl
push
pop
inc
adc
insb
ljmp
les
data16
loopne
cmp
push
popa
addr16
xchg
bound
movsl
je
cmpsl
repnz
pop
pop
dec
jo
int3
push
pop
xor
xchg
loopne
mov
leave
cmpsb
xor
and
jo
mov
push
js
fstps
mov
and
shll
xchg
mov
bound
mov
mov
lret
ret
add
nop
dec
outsl
subl
jp
mov
out
mov
fsubl
sti
es
cmp
test
and
imul
lea
dec
lcall
or
adc
aam
out
xor
jge
jo
sub
lods
jmp
sub
inc
and
mov
sti
stc
pop
stos
push
xchg
jp
mov
mov
push
push
push
mull
jmp
enter
or
pop
push
jp
or
cs
or
xchg
stos
clc
popf
idiv
nop
xorb
into
mov
cmp
push
pop
int3
xor
jns
sub
in
inc
stos
dec
mov
jae
test
mov
fcoml
ljmp
push
hlt
mov
icebp
mov
mov
fstpt
mov
inc
lods
xchg
inc
push
adc
push
loopne
leave
lods
ds
xchg
je
jp
jp
ror
mov
cs
xor
iret
insl
jns
mov
stc
fwait
mov
add
or
or
mov
ret
pop
mov
add
pop
stos
test
pop
rcll
xlat
icebp
pop
jecxz
xchg
dec
call
xor
test
fisttps
jae
sub
mov
fucomi
mov
inc
fnstenv
loop
add
ret
push
repz
icebp
call
cs
lret
push
xor
jmp
aaa
sar
lock
dec
pushf
mov
sub
shl
jne
pop
data16
adc
test
push
icebp
scas
and
mov
or
and
xor
inc
int3
fidivrl
pminsw
insb
jne
ficompl
and
lcall
pop
fmuls
iret
lods
cmp
fidivrs
jo
les
stc
sub
mov
xchg
aam
ret
lods
lock
out
aaa
lock
xor
pop
push
add
mov
dec
repnz
xchg
fldcw
add
jmp
std
jg
clc
mov
cmp
dec
jle
add
xor
adc
pop
sbb
cmp
outsb
es
rol
xchg
mov
loopne
shld
imul
push
jp
xor
jbe
xchg
cmp
mov
xor
sbb
mov
sbb
add
dec
sub
out
pop
cmp
nop
test
push
mov
and
jne
mov
jmp
leave
jg
cmpsl
add
out
push
dec
pop
lcall
adc
jg
jbe
aad
or
sbb
out
cmp
out
or
ja
pop
movsb
sub
fstpl
repnz
nop
inc
cmp
jbe
std
mov
jle
inc
les
movsb
jg
inc
jo
push
rcrl
loop
arpl
in
bound
scas
mov
idivl
cmpb
movsb
jae
inc
into
add
or
push
and
lods
stc
les
fwait
mov
stos
shr
data16
pop
jg
ds
push
jne
sbb
jnp
inc
imul
js
lret
and
xchg
in
mov
mov
bound
ja
fldenv
or
shll
sbb
insb
inc
orl
cmp
pop
push
stos
adc
mov
pusha
mov
adc
cmpsl
aas
stos
add
stos
lods
loopne
xchg
data16
cld
inc
imul
or
pop
inc
stos
bnd
push
push
fisubrl
pop
ja
xchg
fistpll
cmpsb
sub
mov
pop
jl
ficoms
pop
xor
rorb
xor
inc
rolb
faddp
cmpl
mov
and
jb
into
aam
mov
pop
add
dec
das
rcrb
cli
popf
leave
inc
mov
add
pop
jle
cld
cmpb
mov
and
out
or
push
jmp
adc
inc
leave
daa
rolb
xchg
push
mov
pop
xlat
stos
faddl
int
cmp
dec
ret
or
xchg
push
lret
ja
mov
or
cld
lds
js
mov
pop
pop
lods
pop
mov
inc
or
push
mov
mov
and
rcrb
adc
test
push
jns
push
xor
lcall
add
jbe
jmp
inc
pop
inc
dec
mov
inc
mov
nop
mov
stos
add
xor
pop
sub
sti
xor
add
mov
cmp
dec
jb
mov
bound
shll
mov
mov
dec
rcrb
mov
fs
faddl
pop
xchg
pushf
sbb
js
shrl
jne
or
add
push
lcall
mov
mov
push
leave
movsl
xchg
popa
and
lds
xchg
pop
sub
int3
das
xchg
aam
mov
jl
cmp
std
sub
aas
mov
cwtl
stos
pop
push
js
jno
into
jg
andb
xchg
mov
mov
nop
arpl
dec
or
lret
cmp
xchg
mov
sub
mov
jl
negl
rcrb
adc
lahf
in
movsb
xchg
addr16
add
arpl
mov
cmp
jno
ds
nop
stos
jecxz
shl
push
mov
data16
add
aaa
pop
push
xchg
jnp
sbb
xor
mov
sub
cmc
mov
mov
lcall
jl
add
jg
aam
sub
insl
bound
mov
shrb
mov
pop
push
and
test
mov
fbstp
mov
xchg
outsl
dec
icebp
push
mov
aas
pushf
test
enter
lcall
imul
sub
clc
jne
xchg
and
push
rcll
out
mov
bsf
mov
aaa
mov
js
cwtl
repz
cwtl
xor
sar
cltd
lods
pop
stos
sub
mov
xchg
mov
aam
jne
loop
out
push
aas
in
and
xchg
stc
jg
daa
jle
in
pushf
sbb
mov
dec
push
cmp
outsb
dec
add
adc
fs
pop
in
xlat
insb
jle
aad
pop
jl
lcall
sti
int
std
cmc
sbb
inc
int3
mov
scas
cmc
insl
pop
add
negl
mov
and
sahf
icebp
fcoml
push
dec
rcrl
push
push
push
lret
ret
int
jl
lock
pop
pusha
movsl
int
iretw
mov
cmp
mov
dec
in
pop
mov
dec
cmp
popf
ja
fnstcw
xchg
popa
add
mov
or
lds
lods
jl
mov
xor
loope
adc
fstcw
sbb
int3
jge
sahf
idivb
test
fsubl
mov
out
cmc
push
je
out
sti
das
push
les
bound
or
pop
xor
sub
xchg
add
mulb
push
jb
lods
xchg
cltd
or
popf
xor
sub
mov
jnp
lods
lahf
fdivs
push
les
into
int3
int
fs
imul
and
jl
lret
push
pop
adc
jl
ret
flds
xchg
dec
cltd
adc
add
sbb
cmc
and
xchg
adcb
mov
mov
mov
ds
mov
in
jnp
dec
xchg
push
stc
rcrl
test
push
pop
outsl
add
cmpsl
add
aaa
jle
or
push
hlt
fstpl
scas
jg
fwait
add
cli
outsl
jns
mov
jmp
loope
adc
in
xor
sti
push
mov
cs
xchg
rcl
shll
push
idivl
sub
push
mov
arpl
jae
mov
lcall
dec
dec
scas
pop
sub
and
jo
push
cmpsb
and
push
imul
push
lcall
mov
xchg
aam
lret
clc
sbb
cmp
adc
sti
sbb
mov
push
or
sti
mov
out
fiadds
push
adc
pushf
jne
dec
subb
fisttps
jbe
mov
dec
pop
test
mov
sub
mov
add
pop
ret
addr16
mov
add
sub
nop
shlb
nop
xchg
sbb
fs
lods
aam
adc
push
mov
mov
jle
scas
loop
stos
fs
mov
cmp
mov
jg
sahf
mov
adc
xchg
sub
cmp
mov
xor
mov
add
pusha
jno
shl
dec
xchg
sub
cmp
push
in
push
sti
push
push
mov
lds
out
pop
mov
push
xchg
push
sbb
lea
loopw
scas
repz
or
cli
inc
push
aam
sbb
mov
xchg
cmpsb
xchg
cmp
sbb
dec
pusha
pop
stos
xchg
sub
xor
int3
mov
pop
ret
cmp
scas
shrb
cmpsb
xchg
mov
js
inc
iret
adc
ds
or
les
or
fisubs
adc
std
std
mov
iret
jecxz
push
cld
nop
xor
leave
fmul
push
insb
nop
xor
shl
jb
and
push
stos
sbb
in
add
push
icebp
fdivl
push
jp
in
jne
or
mov
insb
ss
nop
cmp
int3
lods
cltd
popa
fsubs
and
xchg
or
fcmovbe
mov
rclb
int
andl
fisttpl
push
ja
mov
jnp
lods
mov
push
rol
lret
or
call
push
inc
mov
aas
loope
lods
adc
mov
insl
nop
sti
mov
lret
fildl
fstps
ret
subb
xchg
cmp
push
sbb
call
cltd
subb
sub
negb
inc
sbb
add
cmp
fidivrs
hlt
pop
in
inc
popf
cmpsl
rcrl
imul
adc
xchg
jp
insb
call
in
pop
clc
cltd
outsb
cltd
cmp
adc
aad
adc
je
jb
and
and
jge
pop
ja
adc
test
mov
and
xor
push
or
lods
leave
ja
mov
mov
lods
adcl
jle
aad
dec
imul
cli
cmp
les
insl
andl
shl
sahf
sub
scas
xor
pop
arpl
and
stos
and
ret
mov
xchg
and
jp
push
subb
dec
mov
inc
stc
sub
repnz
jb
mov
xchg
iret
adc
mov
mov
int
add
rclb
dec
xchg
rcll
fsubrs
test
insl
lods
inc
pop
outsl
arpl
mov
xchg
or
repz
out
adc
mov
xor
mov
jle
lret
inc
scas
inc
add
andb
sub
mov
lcall
sub
cmp
mov
mov
mov
dec
mov
xlat
dec
lret
in
push
outsl
fcom
fcmovbe
les
sbbb
js
push
xorb
movsb
in
fbld
int
dec
mov
das
sbb
sbb
test
pop
lret
jge
fnstsw
scas
adc
push
pusha
and
jnp
and
jecxz
movsl
adc
or
add
sub
cltd
push
mov
aas
push
ret
movsb
xor
popf
fistps
cli
mov
inc
pop
test
cmpl
test
adc
fs
adc
imul
dec
push
and
jecxz
fnstenv
dec
ljmp
outsl
fwait
sub
add
aaa
sub
lods
in
push
sarb
pop
cli
adc
jg
rclb
bound
sub
fisubrl
insb
sbb
subl
stc
movsl
outsb
pop
pusha
mov
rcl
into
cmp
cmc
pop
out
cmp
pop
fdivrs
sbb
out
testl
in
sbb
scas
xchg
add
dec
mov
nop
mov
xor
data16
mov
xchg
add
xchg
loopne
sub
in
xor
push
inc
cmp
in
sub
xor
adc
adc
rcl
or
xor
in
push
mov
clc
add
xlat
dec
cs
jnp
insl
pop
mov
fisttpll
push
or
push
cmp
lods
mov
cmpsb
out
jl
out
leave
stos
adc
jecxz
iret
sbb
sub
mov
cmpl
jnp
sbb
mov
inc
mov
insl
js
jns
push
sub
or
js
out
pop
mov
sub
jecxz
jae
test
scas
jge
dec
cmc
push
push
stc
pop
movsbl
andl
loope
cmp
xor
push
vmread
pop
pushf
xchg
repnz
in
dec
test
dec
jnp
dec
lea
int3
mov
mov
lock
cmpsb
adc
bound
xchg
cmp
int3
rorb
jb
xchg
pop
mov
adc
xchg
sahf
xchg
push
mov
pop
jbe
inc
je
ss
repz
mov
mov
adc
fwait
xchg
enter
pushl
cmpsb
aam
inc
std
mov
push
mov
test
int
rcl
push
ja
scas
xor
push
ror
pop
mov
cs
popa
sub
and
mov
das
and
cmpsl
jnp
lds
dec
inc
mov
sarb
in
lea
loope
aaa
mov
stos
or
and
mov
pusha
and
pop
adc
or
pop
ret
dec
or
pop
pop
mov
mov
mov
add
ror
cmp
add
add
gs
xor
xchg
mov
popa
sbb
insb
dec
inc
inc
std
mov
jno
lret
cmc
xor
cltd
shlb
std
and
add
adc
sbb
dec
push
mov
xchg
out
push
inc
loope
mov
pop
or
loope
ja
ja,pn
fucomi
inc
mov
pop
cld
mov
or
xor
jle
add
shll
in
stos
jle
mov
sbb
mov
or
out
jle
dec
dec
jle
jns
fistpl
outsb
lods
movb
out
jo
dec
push
dec
enter
cmp
mov
jnp
cmpsb
cmp
inc
ds
push
shrl
pop
jbe
subb
aad
mov
jmp
addr16
adc
jp
in
sti
fdivr
rorb
lds
xor
mov
nop
ret
jg
cmove
mov
pop
mov
sub
add
in
es
fnstenv
mov
xchg
ds
fldl2t
xchg
push
xor
push
jne
inc
movb
scas
pop
in
stos
call
into
push
insl
in
mov
mov
or
cmp
push
cld
cmc
sbb
mov
cwtl
hlt
adc
mov
and
aam
rcr
mov
pop
mov
mov
push
ret
push
ret
repnz
fs
push
and
jp
outsb
scas
dec
cmpsb
pop
sahf
lods
aad
cmc
out
lds
sub
add
and
scas
iret
jmp
popf
popf
sub
add
push
inc
ret
jle
roll
pop
shlb
fwait
js
adcb
imul
movaps
mov
aas
shl
scas
fwait
jmp
popa
scas
push
cli
fsts
dec
in
cmc
jo
or
xchg
pop
aaa
jge
imul
arpl
aas
push
pop
fcmovnb
repnz
popa
daa
add
arpl
divl
inc
in
adcb
or
in
add
xchg
mov
pop
pop
vmwrite
imul
jnp
ss
mov
dec
sti
daa
repz
loope
dec
ds
xlat
mov
ret
clc
mov
mov
rolb
adc
ret
and
lods
insl
cmpsb
mov
jmp
push
dec
ret
mov
dec
nop
in
dec
icebp
das
jecxz
jecxz
jo
cmp
or
push
js
jnp
getsec
cmp
xor
mov
sub
sbb
popa
rolb
add
cmp
and
dec
arpl
arpl
lea
xchg
mov
or
cmc
cmpsl
lods
xchg
mov
sub
fdivl
jbe
pop
movsb
lret
popa
push
cmp
adc
mov
rorb
inc
shrb
out
jb
dec
sub
jl
sub
cmpsl
bound
dec
mov
cmp
inc
sbb
outsb
mov
sbb
in
jge
dec
or
inc
in
pusha
enter
jecxz
mov
cmp
mov
popa
pop
mov
xchg
push
aaa
xchg
fstl
xchg
jne
test
test
sti
nop
dec
and
mov
add
popa
sbb
or
xor
imul
scas
in
stos
leave
or
push
xorl
lea
nop
mov
inc
sbb
mov
pop
fmull
mov
inc
fidivl
sbb
lahf
push
jbe
lret
int3
or
pop
test
mov
mov
scas
loope
cmp
test
scas
lods
dec
and
xlat
lcall
fisubrs
in
jp
jns
stos
idivl
movsb
mov
jle
nop
sub
fwait
push
bound
mov
rcl
mov
ss
cmc
or
test
add
jne
insb
ds
test
sarb
xchg
call
xchg
outsb
rol
mov
xchg
pop
movsl
sbbl
in
mov
xchg
sbb
push
inc
outsl
jl
push
sbb
mov
pop
lret
cmpsb
jmp
popf
cmp
dec
mov
fnstsw
rcrb
data16
in
cld
ss
in
push
jle
or
mov
nop
adc
negb
adc
mov
mov
cli
ret
in
sub
rcll
mov
jp
lea
cmc
test
aam
cmp
shrl
mov
decl
dec
int3
rcr
jmp
in
mov
push
ror
je
test
sarl
movsb
inc
enter
fs
mov
sub
xchg
cmp
mov
cmpsl
jle
pusha
mov
fs
addr16
scas
nop
mov
jae
xor
or
out
xor
loopne
fidivl
popf
jo
push
pop
push
lea
das
insb
out
cmpsl
push
push
push
test
dec
cs
xor
in
ja
fisttpl
loopne
test
outsb
popf
pop
pop
add
add
xlat
es
dec
bound
int
pop
cmp
lahf
sub
ret
ss
lds
xor
and
xchg
mov
inc
ss
add
mov
fsubrl
cmp
adc
sbb
popa
fimull
or
inc
dec
sub
push
popa
cmp
push
in
mov
jno
inc
xor
push
inc
dec
cmp
incb
dec
outsb
frstor
repz
dec
arpl
sub
fisttpll
stos
sub
cwtl
bswap
mov
jno
push
bound
cmp
cmc
mov
cmp
rcrb
adc
mov
cmp
bound
sub
xor
cmp
pop
rol
push
xchg
pop
pop
sbb
push
xlat
aam
arpl
enter
jl
cltd
dec
and
mov
cli
nop
aad
out
mov
or
mov
repnz
jb
mov
cmp
imul
push
push
adc
lea
mov
push
pop
and
stos
addr16
mov
push
aad
push
mov
inc
xlat
sub
xor
lock
daa
push
ret
lock
and
arpl
pop
mov
or
shll
ret
inc
in
pushf
sbb
mov
repnz
push
sub
insl
ja
mov
push
add
ds
in
std
pop
xchg
push
add
mov
sahf
cmpsb
xchg
jno
jo
or
test
in
fwait
mov
mov
cwtl
cmp
mov
aam
sbb
mov
or
decb
enter
dec
ret
stos
pop
out
sbb
bound
lahf
jns
and
xchg
ss
cwtl
insl
cmp
mov
loope
dec
mov
mov
inc
in
fsubrl
aaa
rol
out
inc
push
lret
int
mov
clc
mov
cmpsb
dec
add
mov
sub
rorb
dec
int
sbb
imulb
jno
in
pop
cld
je
pop
fidivl
dec
cli
ss
call
subl
icebp
movsb
bound
mov
fs
pop
sub
inc
aam
push
sarl
and
fsubrl
mov
dec
test
inc
scas
mov
mov
dec
pop
pushf
lock
cmp
nop
dec
inc
pop
jno
jp
popf
in
mov
fimull
add
jmp
testl
leave
jno
jl
jne
inc
lret
adc
es
sbb
ret
add
fldenv
es
lods
sbb
mov
pop
cwtl
loop
mov
jns
dec
cmc
int
jle
dec
ror
sbb
adc
cwtl
sub
sbbl
mov
adc
or
movsb
or
jb
out
pushf
mov
mov
sahf
adc
xor
rcrl
aam
xor
xchg
repnz
dec
pop
pushf
sbb
jmp
jns
add
ret
inc
in
pop
jl
repnz
mov
or
pusha
cmp
add
lahf
test
iret
sub
push
xchg
adc
dec
in
lahf
ret
adc
lcall
jb
iret
mov
dec
sub
jecxz
fcoms
insb
leave
or
xchg
into
insl
push
pop
leave
bound
and
xchg
dec
xchg
lods
cmpsb
add
mov
xor
out
data16
or
xor
daa
xor
out
pop
or
push
not
sbb
jnp
ja
ret
imul
cmc
or
daa
lods
sub
xchg
push
xor
lods
in
inc
cwtl
mov
mov
lcall
dec
pop
add
test
movb
lods
mov
es
xchg
sbb
outsl
push
imul
pop
aaa
xor
cmp
mov
jbe
es
xchg
pop
cmp
lods
test
fs
mov
cmp
fninit
fldz
out
sarl
push
lods
movups
push
fwait
mov
js
jae
out
add
mov
dec
jmp
jle
mov
xchg
or
jmp
std
jecxz
movsl
test
mov
in
pop
daa
cmp
adc
push
cld
int3
bound
pop
inc
rcrl
imull
loope
xchg
add
loop
cmc
aas
fidivrl
aad
js
pushf
push
addr16
cltd
add
jns
xlat
add
sub
ljmp
jo,pt
lea
sti
lret
add
mov
aad
push
adc
leave
pop
out
push
sahf
jmp
aad
ret
mov
dec
ljmp
jo
pop
jb
aam
imull
lea
dec
pop
mov
push
insl
out
std
cld
push
or
pop
push
mov
add
dec
sbb
jmp
sub
and
rorb
cmp
sbb
ljmp
push
addr16
push
and
imul
les
cli
cld
xchg
lret
cs
sbb
fbstp
arpl
adc
mov
pop
push
adc
mov
les
fcomp
adc
lret
jl
lahf
insl
movsb
jl
add
adc
dec
adc
imul
cmpsl
mov
je
mov
mov
stos
sbb
xlat
inc
das
and
push
sub
jnp
or
lret
pushf
push
sbb
es
mov
xchg
loop
imul
inc
cs
movsl
stos
sbb
loop
xor
stos
sub
repz
cmp
adc
mov
jmp
ss
insl
out
mov
push
or
push
mov
dec
scas
imul
and
lahf
pop
pop
jl
fucomp
mov
fldenv
adc
subb
inc
inc
jb
scas
ret
cli
aam
std
ss
imul
and
jmp
jl
aaa
mov
cmp
fisttpl
mov
mov
mov
out
test
xor
sbb
cltd
pop
mov
je
sbb
pop
dec
jb
push
inc
lea
fwait
pop
push
and
fisttps
dec
sbb
int3
sbb
fnstsw
xchg
mov
add
push
cmpsl
fdivr
fcompl
xor
dec
out
out
dec
xor
stos
lahf
scas
fildll
inc
fwait
icebp
aas
sub
pop
cwtl
jle
out
inc
xor
xor
imul
aas
jnp
xchg
repz
outsb
mov
shll
pop
jbe
enter
adc
scas
mov
out
mov
push
xchg
aas
sahf
dec
sahf
cmpsb
cmp
pop
repz
cld
add
jo
xor
xor
inc
in
jmp
hlt
add
mov
aad
lret
arpl
mov
popf
jecxz
jle
int
mov
ds
mov
int3
imull
lock
mov
mov
push
mov
in
mov
les
dec
daa
movsl
out
icebp
nop
mov
push
pop
lea
mov
sbb
inc
es
out
sub
inc
xor
stos
adcl
pusha
cmp
xchg
pop
pop
add
ljmp
jge
or
xchg
outsb
enter
dec
fldenv
dec
jae
into
inc
scas
sbb
jg
loope
ja
fdiv
fnstenv
jmp
pop
clc
push
jmp
lahf
lahf
insb
js
or
dec
push
and
test
xchg
add
mov
cmpsb
imul
orl
psllq
rorb
xor
xor
movsb
cli
das
mov
in
sbb
pop
jge
movsb
and
or
movups
imul
mov
cli
icebp
pop
inc
adc
cld
dec
roll
jb
pop
jl
cwtl
and
jbe
xor
cwtl
imul
vunpckhpd
cmp
cmpsl
jo
xchg
testl
out
mov
dec
dec
js
outsb
ds
sub
inc
pop
leave
xor
mov
sub
pop
adc
and
aaa
mov
xor
pop
jne
stc
lea
mov
jbe
jecxz
jp
arpl
test
shrw
mov
mov
sub
data16
mov
test
call
loope
dec
sub
or
mov
mov
xchg
push
jbe
enter
xchg
xlat
dec
insl
cmp
inc
pushf
aaa
cwtl
mov
inc
dec
cmp
push
fdivrl
and
sbb
xchg
lds
mov
test
cli
mov
stc
clc
or
sub
out
clc
call
push
jp
js
mov
xor
xlat
lcall
aas
pushf
pop
rol
push
mov
push
and
fcmovnbe
add
outsb
fnstcw
mov
mov
mov
movsl
xor
and
cmp
test
pop
cmp
jecxz
mov
sub
sub
add
cmp
rol
jo
add
leave
pop
mov
shrl
data16
push
aas
mov
inc
orb
add
test
add
jl
pop
into
adc
mov
sub
mov
imul
mov
pop
pop
or
adc
in
push
orl
and
imul
dec
xor
in
adc
push
pop
jp
test
jecxz
or
aas
and
scas
jne
jns
add
mov
jmp
lahf
shrb
dec
or
sbb
mov
cltd
cwtl
aas
sub
pcmpgtw
add
sub
xor
jmp
xorb
mov
push
adc
dec
inc
es
mov
cld
in
pop
add
cmp
in
xor
cmpsb
jo
jle
sbb
jle
jo
pop
mov
pop
aam
add
mov
lret
ret
cmp
pop
or
mov
fdivr
push
test
fdivrl
dec
sub
rcr
jp
dec
rorl
add
dec
cmp
lds
mov
push
xchg
sub
push
arpl
scas
adc
incl
mov
aam
add
cwtl
cmc
jmp
mov
ja
test
xchg
ss
cmp
and
cltd
push
push
out
js
jno
jns
add
mov
mov
and
int
fdivs
pop
ret
dec
ret
xchg
mov
push
jg
xor
test
push
orb
sub
cwtl
les
sbb
out
mov
addr16
or
pop
adc
sarl
in
cmp
cli
jae
fdivr
lds
outsl
aad
lock
js
pop
popf
popa
imul
popf
adc
xorl
jecxz
hlt
mov
ja
cmp
cmc
xchg
mov
jmp
xor
jmp
mov
adc
ljmp
dec
cmp
loope
out
xlat
leave
and
mov
sub
add
sahf
xchg
add
loopne
fldenv
pop
lahf
shl
mov
dec
adc
gs
sub
pop
push
mov
xchg
inc
pop
lret
pop
aad
fwait
dec
jb
mov
test
mov
push
pop
xor
push
scas
and
cmp
inc
inc
aam
enter
mov
loope
xlat
inc
scas
cmc
jmp
mov
movsb
shll
xchg
arpl
pop
out
outsl
or
jae
jl
adc
xor
ja
jp
fwait
or
mov
adcl
repnz
inc
hlt
mov
insl
leave
fmuls
cmp
add
stos
popa
and
in
mov
sbb
and
pushf
dec
stos
or
cmpsl
mov
fidivl
sub
cmp
imull
andl
rclb
mov
mov
stc
imul
sarl
test
xchg
int
cmp
sahf
jl
mov
repz
mov
in
roll
push
js
push
inc
test
jno
lods
clc
iret
xor
repnz
sub
nop
fistps
pop
leave
loopne
out
add
mov
pusha
lock
cli
xor
movsl
adc
outsl
jo
jge
mov
fmull
cwtl
adc
repz
cmp
mov
icebp
cmp
mov
inc
cmp
ds
add
in
mov
pop
ds
mov
call
jnp
jns
lea
lea
adc
ret
cmc
aaa
into
xchg
mov
pop
jmp
or
mov
mov
mov
mov
pop
lahf
xor
or
in
test
jp
mov
outsl
ljmp
arpl
pop
test
xchg
testl
daa
aas
dec
cli
punpcklwd
xchg
loope
pop
inc
jne
add
pop
out
and
fcmovnu
movb
push
adc
mov
jmp
roll
fiadds
bound
cmp
out
xor
inc
xor
leave
movsb
push
out
mov
test
enter
and
jp
pop
nop
adc
sti
movsb
sbb
icebp
push
lods
scas
add
push
fimull
ret
jae
cld
lock
sbb
iret
mov
lahf
loopne
adc
xchg
mov
cmpb
jp
dec
xor
jnp
hlt
arpl
dec
push
cmp
in
out
ljmp
aas
out
shrl
pop
xchg
inc
rorb
stos
lret
gs
pop
xor
out
movsb
lcall
into
inc
int3
mov
lds
lods
inc
mov
test
and
nop
and
cmpsl
mov
ror
cmpsb
lods
out
call
mov
add
sbb
push
sti
push
in
ds
lods
adc
lods
divb
popf
outsb
loopne
mov
movsl
dec
push
jnp
xchg
and
push
mov
out
xchg
xchg
xor
ret
ja
icebp
pop
and
push
fdivp
mov
sub
sbb
sahf
faddl
into
jnp
int
sbb
ljmp
ja
mov
jl
add
mov
adc
sub
sub
popf
sbbb
stos
adc
pop
pop
fidivrs
rcrb
mov
xchg
push
sbb
scas
sbb
out
les
push
or
xchg
mov
outsl
jmp
mov
mov
jo
push
or
ret
les
sub
mov
inc
cmp
xchg
ja
dec
xchg
pop
mov
cmp
lahf
sbb
pop
arpl
aas
pop
sbb
fnstsw
inc
add
icebp
xlat
cwtl
jo
outsl
mov
adc
adc
or
movsl
add
inc
das
adc
int3
das
pop
cmp
pop
xchg
lods
mov
or
mov
inc
shlb
arpl
test
clc
add
inc
mov
icebp
insl
inc
in
fsubrl
setb
xlat
aad
movsb
push
jmp
mov
xor
in
cld
pop
rcrl
shl
add
mov
or
push
out
test
std
add
out
jge
lods
pop
adc
mov
pusha
into
mov
fstp
out
mov
mov
mov
cs
jb
cltd
gs
mov
add
push
push
push
repz
mov
cld
lock
mov
mov
sub
rcrb
arpl
push
inc
inc
test
and
add
lahf
pusha
jecxz
daa
dec
ret
jno
mov
mov
dec
popf
je
cmp
add
xor
or
xor
cmp
movsl
sarb
dec
pop
sub
arpl
mov
repnz
mov
std
cwtl
cmc
adc
cmpsl
idivb
mov
inc
lret
orl
insb
imul
jb
sub
ja
cmp
mov
lahf
mov
push
cmpsb
sub
push
sbb
call
or
scas
mov
mov
add
icebp
push
lret
add
jge
lods
xor
loope
stos
cld
mov
sbb
push
stos
ss
insb
lahf
sub
jmp
ds
lahf
pop
xor
dec
push
mov
js
dec
or
xchg
add
dec
mov
or
xor
icebp
mov
cs
mov
std
adc
mov
pop
insb
cmp
cmpl
and
imul
pop
cmp
sbb
fiaddl
and
data16
imul
adc
sub
sub
lret
adc
and
outsb
stos
jb
filds
xor
jo
mov
xchg
repz
bound
add
ss
mov
fs
push
mov
inc
cli
pop
fwait
es
out
cmp
cmc
adc
outsl
inc
cmp
in
xor
scas
cmp
pop
xchg
sbb
in
testb
dec
or
out
shlb
movsb
dec
cmp
pusha
jnp
push
popa
ljmp
sarl
js
cmp
xchg
add
jle
lds
dec
sub
inc
mov
mov
push
scas
jecxz,pt
dec
das
xchg
sub
mov
xchg
inc
add
push
add
js
outsb
gs
jp
lret
je
lods
test
das
pop
movsb
stc
aam
or
pop
cmpsl
mov
test
jns
mov
sub
mov
jae
push
fsts
mov
sub
fisttps
push
lea
lret
into
lea
push
xchg
dec
out
rolb
lret
mov
sahf
insb
jbe
test
loopne
push
mov
arpl
pop
cs
inc
cli
test
inc
sahf
mov
pop
sti
mov
in
loop
jg
xchg
pop
sbb
outsl
adcb
mov
sub
mov
in
cmp
iret
stc
lcall
rcrl
sbb
sar
adc
shrl
in
sar
mov
push
xchg
push
clc
in
push
xlat
insl
push
idiv
sbb
xchg
cmp
gs
ficomps
push
scas
mov
dec
imul
lret
fmuls
add
pusha
or
rolb
adc
pop
sub
into
test
push
cltd
mov
push
cmc
adcb
ja
out
loopne
xlat
dec
pusha
test
mov
inc
test
push
js
ja
aaa
sbb
sbbl
and
addl
sub
or
cli
call
inc
enter
aam
leave
fsubl
push
fistpll
or
dec
and
push
enter
outsl
and
leave
cmp
jnp
jecxz
xchg
ret
jo
inc
sub
jo
scas
fnstenv
lds
push
or
jae
psubw
fs
in
jmp
sub
gs
test
xor
pop
fs
out
push
loop
inc
pushf
js
out
in
xchg
lcall
ret
fwait
cmp
movsl
fwait
add
mov
pop
push
adc
stc
sbb
push
jbe
in
or
fnsave
jne
cwtl
insb
out
mov
and
xchg
rcr
inc
adc
cmp
push
lcall
pop
xor
push
dec
inc
adc
imulb
test
dec
aam
int
push
in
popa
popa
scas
push
adc
xchg
add
shll
pop
xor
push
xchg
lods
xchg
pop
and
lea
push
push
out
arpl
push
mov
jnp
loopne
add
or
into
imul
add
pop
movsl
xchg
dec
and
cld
push
jge
xchg
dec
mov
pop
dec
fists
rcrl
dec
jns
xor
push
xor
mov
aas
jecxz
jge
lods
dec
cli
cmpsb
std
scas
adc
adc
mov
push
xchg
aas
dec
jno
iret
mov
lcall
inc
stos
insl
push
int
mov
lcall
sarl
pop
sub
xor
mov
test
sub
mov
leave
dec
iret
imul
es
adc
filds
dec
mov
mov
jg
cmp
jp
jp
xor
mov
imul
or
je
push
mov
inc
jge
popa
xchg
pushf
stos
sahf
fnstenv
lods
pop
push
out
dec
cmp
adc
stos
cltd
jnp
xlat
mov
mov
shlb
push
jge
stos
aas
sarb
mov
adc
int3
movsb
or
fadd
mov
test
lahf
insl
shll
cmpsb
loop
mul
sub
dec
aas
lods
pushf
fimuls
mov
es
xlat
mov
aaa
add
cmp
or
fcoml
lea
ljmp
add
xchg
pand
lcall
int3
sbb
xor
sti
roll
adc
test
stc
sub
mov
mov
or
test
jnp
inc
cld
mov
movsb
mov
shlb
insb
cmp
ljmp
sbb
mov
xchg
mov
push
test
pop
and
arpl
mov
adc
push
pop
sbb
xchg
mov
xchg
jl
outsb
push
fs
jne
jne
int3
mov
aas
aaa
inc
mov
push
lcall
cmpsb
jno
and
loop
pop
sub
jne
push
or
dec
test
movsl
outsb
lods
dec
xor
aad
cmpl
rclb
mov
add
pop
xlat
dec
lods
jno
sub
test
inc
push
xlat
shrb
xchg
call
cs
sub
mov
add
imul
mov
fsubs
out
push
dec
dec
imul
cmp
pop
gs
xchg
jne
out
push
repz
ljmp
dec
dec
gs
jb
adc
rclb
enter
imul
sub
jl
popf
mov
xchg
mov
or
std
push
mov
sbb
and
mov
insb
mov
outsl
incb
loopne
jb
pusha
jne
cmpsb
pusha
out
sbb
mov
in
xchg
stos
call
cmpsl
hlt
sbb
movsl
leave
sbb
mov
push
mov
adc
sub
in
ror
sahf
dec
into
sbb
push
adc
movsl
repz
or
jmp
outsb
lret
js
insl
and
mov
and
lahf
mov
mov
jbe
aas
inc
and
cli
add
sahf
call
iret
nop
pop
jae
cld
push
shll
imul
sub
jno
out
fildl
gs
push
mov
std
xor
lds
je
lock
mov
shlb
sarl
mov
xchg
or
repnz
scas
push
mov
aas
sbb
jl
cld
adc
mov
jbe
xchg
fdivrl
clc
add
mov
dec
sub
pop
cmpsb
fdivr
pop
dec
push
push
push
xor
in
sbb
scas
pushf
cli
mov
or
jmp
test
icebp
xchg
push
stos
pop
negl
push
add
cwtl
out
xchg
xchg
jle
push
xorb
cli
inc
mov
sbb
gs
lret
mov
mov
inc
loop
js
addl
jmp
imul
lahf
mov
loopne
lea
cmp
xor
shrl
imul
sub
clc
sub
sbb
mov
xchg
nop
rclb
sti
or
rcl
and
jno
add
cwtl
out
jae
cmp
test
pop
mov
sub
mov
inc
lea
dec
or
mov
cs
push
cs
sarl
xchg
mov
xor
dec
in
adc
pop
push
int
lods
shrb
mov
adc
pop
pop
dec
aaa
js
rcrb
xor
lock
sub
xchg
sub
dec
mov
bswap
or
outsb
jl
xchg
sub
pop
das
pop
jmp
fldcw
mov
xchg
ret
sysenter
aam
and
mov
in
cltd
iret
xor
push
into
aas
and
xchg
lahf
pop
mov
inc
mov
push
mov
inc
scas
jae
fwait
jg
mov
clc
mov
dec
cmpsl
lahf
std
xchg
inc
repnz
pop
int
add
and
setae
out
iret
push
xor
mov
and
cmp
fwait
in
pop
subb
int3
dec
add
or
pushf
xchg
xchg
cltd
notl
loopne
pushf
clc
sbb
cwtl
adc
mov
xor
xor
push
jo
fdivrl
fs
cld
rcl
test
bound
insl
nop
cs
and
jns
or
pop
adc
and
dec
jl
cmp
push
xor
push
dec
jmp
jle
sti
fsubs
movsl
inc
inc
popa
std
insl
incb
lods
adc
mov
sub
mov
faddp
push
insb
ljmp
or
jg
adc
cwtl
xchg
fisttps
mov
in
sbb
push
and
fs
dec
mov
mov
push
sbb
sahf
or
es
jecxz
or
cmp
cmc
sti
pushf
out
jne
cmp
stos
and
dec
fisttpll
nop
jne
fs
fistpll
mov
mov
sub
lret
rcll
fcmove
mov
mov
test
icebp
icebp
cmc
lcall
push
cmp
ficompl
lret
fucomp
xchg
mov
adcl
dec
jmp
fsubs
dec
cmp
out
movsb
mov
lahf
push
push
clc
sbb
adc
shll
sub
fnstenv
jns
xchg
push
cmp
sbb
xchg
imul
pop
daa
je
xchg
add
gs
fdivs
xchg
cmp
cmp
mov
sbb
mov
pop
ret
mov
lock
mov
lcall
mov
scas
cmp
adc
clc
push
jnp
mov
mov
imul
push
jo
fnstenv
or
pop
sbb
jmp
vpminsw
out
push
jl
fcmove
das
jg
fildl
pop
aad
pop
push
dec
fidivl
mov
xor
add
movsb
or
in
test
mov
push
cmp
mov
testb
push
sub
dec
in
mov
icebp
pop
xchg
movntq
adcb
leave
jecxz
pop
iret
adc
mov
mov
dec
mov
xchg
mov
xchg
push
push
repz
subl
insl
pop
gs
icebp
jecxz
adc
push
xor
sub
inc
add
mov
or
xlat
aam
pop
stc
jne
outsb
test
subb
cmp
aam
or
stos
cli
push
xor
scas
jbe
mov
sahf
out
add
cs
mov
ds
sbb
or
mov
out
push
popa
in
push
dec
rorl
jg
jno
cltd
neg
ljmp
jp
add
arpl
stc
sbb
inc
hlt
xor
test
push
inc
mov
in
jnp
xchg
idivl
imul
and
cmpsl
xor
jg
add
fcomip
inc
lods
jae
push
pop
insb
sub
setb
sub
jg
inc
nop
hlt
int3
popa
and
stc
fwait
sbb
imul
arpl
and
sub
cmp
rcrl
add
push
push
fwait
lock
out
mov
xor
lods
mov
in
frstor
fistpl
xchg
imul
std
arpl
les
or
outsl
dec
push
int3
lahf
push
movsl
mov
add
inc
stos
insl
mov
in
pop
sahf
ret
je
add
sbb
xchg
jg
fidivs
pop
jp
push
cmp
cli
notb
jae
loopne
inc
fdivrp
push
adc
mov
das
cmp
push
pop
call
sbbb
flds
sub
outsl
sahf
inc
out
inc
call
mov
sub
adc
push
lahf
clc
mov
jecxz
jb
rorb
xchg
mov
adc
lods
pop
inc
test
insb
fwait
sar
xchg
adc
sahf
popa
xchg
mov
inc
mov
mov
and
jp
les
in
orl
mov
mov
jo
stos
ds
or
arpl
mov
xor
fimull
add
xor
sbb
divb
std
inc
xchg
imul
pop
roll
dec
cs
sbb
fstpt
jbe
mov
or
cs
push
or
xor
dec
ljmp
xor
pop
adc
mov
iret
bound
cltd
pop
out
cmp
add
pusha
popf
lahf
fwait
std
add
dec
int
in
or
sahf
rorl
movsb
shl
xchg
call
mov
push
mov
and
fsubrp
js
iret
ljmp
add
les
js
std
cmp
imul
decl
ret
lock
push
iret
adc
fstps
adcb
adc
and
or
mov
loop
mov
mov
mov
pop
adc
cmp
lea
gs
shl
and
ss
outsl
and
mov
scas
xchg
test
test
movsb
push
daa
rclb
insl
mov
iret
adc
mov
in
mov
fcomps
pop
into
pop
mov
pusha
sbb
cwtl
fchs
mov
fisttpll
loopne
lret
cmc
add
into
sbb
lcall
es
lea
push
mov
sahf
out
jbe
jno
out
fimuls
loop
test
jb
push
and
loopne
or
cmp
dec
aad
test
sarl
dec
cli
push
and
lock
popa
cltd
adc
shll
into
inc
mov
inc
pop
stos
stos
xchg
out
lahf
rol
imul
jno
mov
pop
fsts
pop
and
sbb
fs
repz
mov
pop
add
pop
push
xor
testb
fnstsw
jle
lret
in
je
adc
scas
pop
inc
bnd
xor
fmuls
adc
jne
clc
sub
pop
test
mov
jecxz
mov
pop
pop
jns
sub
aad
dec
ficoms
aas
aas
xor
inc
sub
pop
jae
jmp
push
mov
shlb
scas
or
xchg
dec
mov
mov
outsl
inc
mov
pop
sahf
adc
fwait
push
cmc
cwtl
and
scas
lcall
sub
inc
fwait
mov
enter
push
fldl
pop
mov
mov
out
xchg
int
shll
cmpsl
inc
mov
daa
sub
mov
xchg
shl
fcmovnb
mov
dec
jbe
pop
aas
dec
mov
enterw
fcompl
insb
clc
loope
aas
mov
ret
xchg
out
cmpsl
mov
dec
pushf
leave
xor
stc
sti
push
out
outsb
jmp
add
fisttps
mov
push
pop
mov
jl
add
cs
pop
in
imul
push
out
sub
or
and
lea
xlat
out
out
sti
insl
xor
adc
dec
stc
inc
mov
js
mov
mov
repnz
mov
aaa
xchg
mov
out
pop
stos
sbb
mov
aam
je
xchg
stos
aaa
adc
lods
lods
sbb
jmp
addb
cmc
add
std
test
push
and
push
push
mov
imul
cmp
mov
lret
jp
imul
push
mov
pop
aaa
outsb
fistpl
mov
mov
pop
cs
jns
test
cwtl
outsb
jbe
sub
dec
xor
adc
adc
fmull
dec
add
mov
daa
mov
fimull
and
test
in
loopne
or
imulb
std
std
mov
mov
xor
pusha
popa
cmp
rcrb
or
fiadds
cmp
pop
sub
push
pop
jb
and
mov
mov
cmp
andb
mov
lds
cs
jnp
jp
repnz
insl
rol
lret
faddl
adc
stc
negb
dec
sahf
jne
subb
jnp
cltd
cmp
stos
testl
and
movsb
daa
loop
lahf
xor
aaa
nop
scas
sbb
pop
pop
dec
jp
in
shll
mov
notl
dec
push
push
hlt
cwtl
or
lret
in
ret
mov
pop
insl
fwait
aas
stc
loop
dec
cmpsl
hlt
lret
je
xchg
popf
dec
push
ds
mov
sub
add
mov
mov
cmp
sbb
pusha
je
test
xchg
scas
push
add
xchg
xor
jp
pop
fsubrl
sub
lods
cwtl
cltd
das
testl
orl
stos
push
or
out
ljmp
nop
add
xor
jg
lret
sbb
repz
out
xor
jmp
jp
fimuls
or
pop
jo
mov
nop
mov
pusha
mov
mov
push
push
fsubrl
sbb
lret
and
lahf
nop
xor
add
in
xchg
insl
out
int3
mov
fxch
cmp
pop
ss
inc
xchg
hlt
jecxz
add
adcb
and
inc
dec
add
xchg
xchg
outsl
andl
and
in
test
jg
mov
in
addr16
fisubl
sbb
and
pop
mov
aaa
push
into
fsubs
popa
jae
insl
sub
xor
mov
inc
cmp
lods
out
push
sbb
fisubrs
sub
sub
xchg
mov
mov
or
mov
sbb
push
movsl
rorl
fs
and
jge
enter
mov
enter
mov
mov
pop
in
mov
sub
xor
mov
cmp
movsb
jg
jp
adc
lahf
mov
enter
mov
lods
stos
outsb
lcall
fcomip
sub
mov
and
lea
sbb
scas
adc
jge
mov
jns
lods
dec
out
gs
jnp
mov
aaa
fdivrs
cld
and
cmpsl
test
ret
mov
fldl
fwait
movsl
aam
sbb
fsubl
stos
fsubs
jl
add
jl
decb
jae
icebp
lods
jmp
mov
add
shll
lahf
inc
fstps
in
mov
or
insb
jp
icebp
ficomps
imul
ret
nop
mov
je
mov
adc
stc
int3
push
mov
xor
addr16
repz
push
push
sbb
cmp
dec
push
mov
sub
sbb
stc
popf
gs
sbb
into
adc
fidivrl
jb
xlat
jmp
pusha
and
mov
negb
adc
jmp
or
pop
popf
mov
push
mov
shlb
in
lods
jp
mov
push
push
arpl
push
pop
sbb
or
xor
xlat
adc
cmp
or
in
push
insl
test
mov
ja
cmp
jbe
pushf
mov
push
xchg
dec
hlt
pop
mov
pusha
add
push
pop
jnp
sbb
cld
imul
fistl
mov
roll
add
mov
ret
and
sti
je
jmp
popf
dec
adc
aaa
push
rcll
fwait
mov
repnz
jb
leave
jle
sbb
lahf
rcrl
out
jns
ret
adc
ret
mov
pop
popf
out
or
push
cmp
ficoml
into
pusha
repz
dec
and
ret
fldt
pop
out
testb
xchg
shr
fisubs
sub
clc
nop
and
and
loopne
lret
and
sti
pop
lret
push
addr16
push
xchg
iret
jmp
fwait
shl
lds
lret
xchg
push
jb
add
jno
inc
movq
jns
fnstcw
jae
cmp
decl
add
dec
jle
je
xchg
data16
in
jnp
lret
dec
dec
jecxz
lods
xchg
lahf
pop
inc
jg
add
sahf
in
lret
sbb
jmp
or
ss
mov
cltd
sar
jmp
iret
repnz
cmp
mov
xchg
enter
jne
imul
hlt
es
aam
test
popf
mov
pop
inc
cmc
loope
mov
nop
inc
inc
jp
push
ret
scas
mov
orb
jae
test
add
nop
jl
fisubrs
cmp
push
jmp
ja
cltd
xchg
xor
popa
dec
or
xor
mov
xchg
popa
jns
jnp
mov
add
push
cwtl
cmp
nop
fistl
cmc
iret
lret
je
mov
dec
mov
pusha
dec
adc
fs
cmp
mov
xor
jecxz
lock
loopne
ds
ja
stos
mov
pop
aaa
bnd
mov
adc
test
mov
mov
imul
aaa
add
shll
jae
mov
mov
xchg
jne
cs
sbb
sub
and
gs
xor
shll
es
data16
mov
sbb
or
xchg
fwait
xchg
gs
or
and
mov
dec
adc
xor
mov
cli
stos
subb
jnp
jbe
lds
insl
std
enter
pop
pop
push
scas
cmpsb
int
xor
xor
pop
popf
cmp
jno
dec
mov
jae
aas
data16
pusha
mov
cld
enter
stos
int
or
lock
cs
leave
cmp
jnp
mov
xchg
sbb
scas
add
push
and
and
push
push
subl
mov
ljmp
xor
mov
jp
jb
roll
lods
test
add
pop
dec
xor
imul
inc
sub
out
and
popf
out
cmc
dec
dec
mov
cmpsl
or
xchg
or
pop
mov
je
ja
jl
clc
xchg
orb
loope
or
mov
mov
stos
fwait
divb
imul
repz
add
les
push
sbb
inc
aaa
jno
outsl
aas
xorl
mov
jno
dec
jns
fildl
mov
push
stos
repnz
push
arpl
lds
imul
je
shlb
add
bound
mov
jmp
outsb
or
sbb
movsbl
mov
js
cmp
psubd
fs
xchg
sbb
mov
xor
jae
mov
inc
lods
test
notl
push
ds
xchg
rcrb
xlat
pop
push
xchg
sub
mov
std
inc
push
sub
and
pop
aam
mov
push
mov
and
adc
mov
push
movsb
std
sahf
in
popf
mov
adc
adc
loop
sbb
add
js
xchg
mov
cmp
test
roll
inc
negb
jno
icebp
dec
mov
jp
cwtl
jmp
jns
aas
mov
mov
sub
xchg
xchg
imul
jns
or
mov
orl
aad
movd
mov
adc
jmp
ficoml
push
cmp
sub
xor
pop
sub
dec
lds
lods
push
xchg
rolb
jle
in
arpl
lods
scas
sti
or
in
test
jecxz
mov
mov
fisubs
and
or
pop
sbb
loope
scas
sub
into
lahf
lret
add
cmpsb
lret
push
sbb
inc
nop
sahf
sbb
daa
ja
and
xchg
jae
outsb
loop
cli
mov
push
jae
jg
xor
mov
fwait
mov
pop
pop
xor
inc
cmpsl
pop
xchg
mov
or
ds
push
in
clc
push
das
and
adc
js
xor
push
in
mov
jmp
scas
dec
pop
adc
jg
popa
push
pushf
scas
jmp
xlat
test
in
out
mov
mov
clc
test
cmp
inc
xchg
iret
das
push
shl
es
popa
jmp
xchg
roll
add
aaa
mov
shlb
push
push
push
aas
lock
mov
fstpl
rcr
inc
mov
cs
fpatan
xlat
aam
daa
mov
adc
push
repz
jb
xor
xlat
xchg
ss
stos
test
hlt
fnstsw
cmpsb
sbb
xchg
insb
cs
dec
sbb
das
repnz
mov
int3
and
test
xchg
cmp
push
in
pop
testb
mov
mov
mov
test
fwait
cs
in
loop
fildll
lods
std
and
add
adc
sbb
addr16
xchg
testl
xchg
subl
dec
dec
test
xchg
in
sahf
pop
popf
mov
cld
xchg
sbb
xchg
pop
inc
imull
insl
xor
xchg
das
xor
dec
fwait
das
adc
pop
into
pop
int
dec
push
movsb
cmp
mov
mov
adc
lods
mov
in
rcll
or
and
loop
mov
adc
adc
in
cmp
inc
arpl
jge
sub
mov
test
mov
test
mov
add
sub
addl
sbb
jbe
fimull
jecxz
lods
cwtl
or
pop
mov
xor
pop
in
push
call
push
adc
xchg
pushl
out
xchg
add
cs
out
fsubl
mov
or
imul
loop
notl
jge
mov
hlt
stos
out
icebp
pushf
dec
mov
cmp
mov
mov
dec
lar
aaa
xor
out
jp
cmc
out
mov
ret
mov
mov
cmpsb
or
outsb
inc
mov
sub
addb
out
sub
dec
lcall
cmc
cli
add
pop
jecxz
int3
rcr
cwtl
ja
popa
or
fmuls
sbb
fdivrl
jns
mov
shrb
mov
iret
rcrb
lods
movsb
inc
lea
pop
mov
pop
add
and
pop
mov
das
dec
pop
mov
jns
out
fbstp
and
xchg
xchg
xor
adc
movsl
enter
fsubrl
jmp
xchg
push
and
int3
xorl
lock
sub
pop
and
repz
cmp
in
adc
dec
loop
es
mov
adc
sub
and
push
xchg
dec
iret
xchg
push
lret
stc
in
es
sbb
sahf
lret
push
adc
dec
xor
out
cmp
sub
movsl
pop
push
dec
push
xlat
fdivrs
add
test
cmp
mov
mov
inc
enter
fs
ret
jb
lds
scas
xchg
or
pop
push
imul
xchg
add
cmp
aad
mov
and
ss
aam
enter
mov
pushf
arpl
addb
ljmp
lahf
or
loop
pushf
out
xor
jecxz
inc
or
mov
dec
inc
leave
mov
jno
repnz
dec
jo
daa
inc
cli
or
or
arpl
push
in
popa
stos
rclb
pop
jnp
ja
cmpl
pop
inc
gs
es
sub
inc
sbb
mov
push
add
push
push
fsts
add
sbb
xor
loopne
ljmp
mulb
test
push
cld
lods
and
jnp
leave
sub
xchg
lcall
arpl
adc
movsb
into
fimuls
fildl
loope
imul
scas
ss
movsl
rorb
and
pop
js
cmp
jp
xor
push
cwtl
push
movsb
pop
and
fs
add
stc
scas
sbb
std
insl
sbb
or
enter
fiadds
cltd
outsb
test
cmp
icebp
dec
xchg
cmpsb
mulps
frstor
pop
and
push
sub
mov
std
outsl
adc
add
and
xchg
jge
addr16
adc
in
call
fs
testl
insb
aam
and
outsb
sbb
call
jnp
stc
sti
pushf
faddl
aas
mov
push
cmpb
sbb
jnp
push
loope,pt
and
ror
add
jp
push
xor
jns
mov
mov
push
sub
cmc
ss
loopne
inc
icebp
daa
les
mov
mov
nop
lock
push
add
hlt
or
mov
push
and
outsb
mov
push
gs
push
loop
fwait
pop
ljmp
fistpll
add
ds
jl
adc
jg
js
aad
cmpsb
mov
xchg
cmp
push
mov
pop
push
push
das
adc
in
mov
xchg
xchg
dec
mov
arpl
mov
adc
inc
mov
scas
roll
inc
data16
adc
xor
popa
ss
sbb
out
repnz
mov
es
or
movb
sahf
inc
push
adc
xchg
sti
mov
enter
loop
push
aas
aad
pop
cmpsl
mov
sub
clc
rorb
mov
es
dec
xchg
lds
in
movsb
cmpsb
in
das
inc
mov
xor
gs
jb
xor
sub
xchg
mov
lret
aaa
outsb
or
ds
mov
or
je
jo
sbb
add
push
or
inc
setg
lea
push
sub
mov
add
cmc
pushf
sbb
loop
adc
xchg
dec
inc
sti
add
mov
repz
insl
ret
aad
add
addr16
inc
push
test
jae
insl
cmpsb
movsl
fstl
hlt
jp
out
jns
add
fsubs
inc
add
cmpsl
clc
in
es
inc
or
push
push
mov
movsb
test
pop
pop
ss
push
jmp
in
and
jecxz
scas
inc
dec
in
sub
xchg
imul
arpl
pop
in
push
xchg
in
or
scas
stos
in
cs
mov
mov
cmp
jb
adc
dec
idiv
push
insl
je
dec
ret
push
and
adc
loopne
xlat
mov
push
mov
inc
sbb
mov
lahf
cmpsb
loop
mov
adc
jmp
and
sbb
xchg
in
mov
pop
mov
and
lds
inc
sub
mov
mov
or
movsb
dec
push
add
push
popa
and
add
rorl
shrb
dec
out
fincstp
daa
ret
cltd
ret
loopne
xchg
rolb
mov
push
cmp
cmp
loop
out
mov
das
and
dec
push
xchg
sbb
sbb
pop
cmp
or
fldt
fwait
out
out
mov
fmuls
dec
decl
xor
pop
xchg
inc
rorl
pop
stos
dec
mov
xor
and
dec
xchg
popa
in
cmovno
jl
mov
xlat
push
push
lds
and
test
cmp
cmp
mov
push
aam
repz
jns
or
pop
jno
daa
xchg
rclb
mov
push
pusha
xchg
mov
or
into
adcl
cmp
or
cmp
out
xlat
fsubrl
icebp
push
fisubrs
addl
lds
ja
mov
mov
push
jbe
sub
sbb
mov
or
lods
xor
adc
mov
cmp
or
push
and
xchg
sbb
iret
je
cmp
pop
or
lret
inc
jge
cmp
push
or
int3
scas
hlt
ljmp
sbb
xor
pop
mov
xchg
mov
cmp
sub
data16
fstl
dec
add
std
add
add
daa
jae
gs
addr16
sbb
inc
xor
mov
or
test
jb
push
dec
int
aam
xchg
mov
shr
int
pop
mov
in
daa
mov
push
pop
or
je
mov
pushf
in
xorb
jbe
pop
cmc
adc
jmp
jo
repz
ss
mov
cmp
push
or
pusha
jbe
stos
add
mov
call
jp
mov
pop
mov
aam
add
jno
xchg
mov
pop
fsubrs
push
or
shrl
stos
idiv
sarl
clc
lods
cmp
adc
sbb
popf
aas
or
lcall
xor
cli
outsl
jmp
push
xchg
in
jo
adc
and
ficompl
stos
mov
ds
outsl
xchg
mov
mov
inc
les
das
stos
jge
and
mov
add
ret
xchg
add
mov
leave
mov
dec
cmc
lret
rcrb
pop
xchg
insl
sahf
lds
cmp
dec
jp
push
out
xlat
xor
sub
test
push
mov
inc
lea
xor
clc
aaa
incl
jge
mov
insb
cmp
nop
push
adc
nop
cmp
add
sub
and
adc
cli
inc
and
pop
xchg
leave
mov
int3
sub
and
mov
or
repz
ss
into
loopne
in
ja
lcall
lea
dec
test
popl
outsl
jecxz
imul
mov
shl
xchg
lods
dec
nop
cltd
inc
outsl
mov
and
mov
adc
test
cmpsb
es
outsb
enter
lock
jle
pop
mov
fisubrl
sti
mov
cmp
ret
mov
sbb
adcl
outsl
mov
popa
and
aaa
mov
xor
inc
jecxz
mov
sbb
mov
dec
icebp
out
into
cmp
jne
jne
addb
lods
jle
test
dec
mov
push
xchg
ljmp
aam
loopne
lahf
dec
sub
push
and
pop
jmp
dec
pop
pop
out
jecxz
fidivrl
and
or
test
shrb
movsl
dec
sbb
rolb
popa
cmpsb
aad
popf
pop
sbb
cmp
mov
fwait
ret
or
mov
rcrl
sbb
mov
push
xor
inc
sub
icebp
dec
sbb
rolb
or
loope
int3
dec
mov
pop
lahf
mov
xchg
add
jns
cmp
sti
out
sbb
fldcw
roll
mov
jp
xchg
adc
add
push
fdivl
cmpsl
xchg
add
ret
xorl
mov
dec
into
sub
int3
mov
jg
xor
sub
test
pop
add
das
mov
stos
add
xchg
repnz
sarb
jl
in
outsl
push
arpl
test
dec
inc
int3
ja
mov
ja
mov
or
outsb
or
sub
stc
xor
xchg
dec
dec
xor
jno
lea
idivl
sub
mov
shll
enter
stos
idivl
test
fxch
movsb
mov
std
jg
or
cwtl
cmp
mov
mov
cli
fnstenv
or
add
sarb
pop
int
shrb
scas
das
mov
ljmp
sar
adc
leave
jl
add
dec
sarb
cmp
push
xchg
pop
dec
xor
out
jg
test
mov
mov
popa
sbb
and
movsb
jns
lahf
cmp
mov
imul
sub
icebp
sub
rcr
rorb
lret
fists
cmp
inc
nop
orb
or
xlat
sub
mov
lock
adc
shlb
lahf
push
ljmp
enter
orps
out
pop
shrl
inc
daa
pushf
out
jnp
push
daa
sub
pop
call
shll
inc
cmp
out
arpl
jl
mov
jecxz
lcall
js
mov
jae
shr
cmp
push
add
pop
jmp
clc
pop
int3
mov
jp
mov
in
fildl
scas
into
cmp
adc
arpl
sahf
cli
push
push
cmp
push
jne
insb
lods
fdiv
mov
outsl
out
add
push
push
jns
icebp
jae
rcrl
ficoms
sub
cmp
les
ja
push
in
xlat
ljmp
push
addr16
movsb
inc
ss
jle
imul
xor
inc
and
icebp
mov
jle
sbb
sti
data16
jmp
in
xchg
adc
mov
jnp
jbe
jnp
pushaw
or
mov
push
sti
add
inc
jmp
pusha
xchg
or
mov
aam
pop
jne
mov
xor
fldl
mov
mov
and
int3
jp
out
xorb
subl
loope
xor
and
jne
lods
inc
sub
cmpsl
sub
cmp
dec
or
xor
sbb
sub
dec
pop
mov
cmp
inc
mov
sahf
mov
ret
stc
ds
add
call
inc
popf
jg
fnsave
lcall
dec
in
test
test
sbb
inc
lret
icebp
pop
notl
fidivs
scas
mov
sub
lea
in
fs
push
pop
gs
outsb
adc
daa
outsl
movsl
enter
fsts
call
and
ret
loope
insb
and
insl
adc
arpl
mov
adc
in
movsb
ret
loope
ds
pop
sbb
fsubrl
rcrb
call
insb
lahf
rcll
adc
popa
test
fbstp
bound
add
xor
sbb
or
add
pop
incl
fistps
stos
inc
fs
rorb
nop
int3
cli
arpl
jecxz
sub
mov
dec
popa
push
lret
jg
stc
enter
xchg
loope
xor
nop
mov
sti
stos
je
out
outsb
inc
sub
mov
jo
mov
ret
xor
icebp
inc
sub
and
dec
sub
leave
sub
or
nop
out
jg
jns
sub
inc
mov
sub
fisubs
arpl
shlb
mov
mov
and
xchg
mov
inc
int3
or
bound
push
fnclex
clc
popa
pop
out
pushf
mov
mov
cmovae
cmp
rcr
pop
or
arpl
xchg
repz
dec
xlat
scas
pusha
adc
and
rolb
adc
fdivs
icebp
std
outsb
dec
pusha
inc
lds
or
pushf
xor
push
add
push
in
popa
and
sarb
push
jns
call
xchg
dec
xor
mov
jl
mov
xchg
ss
mov
pop
inc
js
cmp
imul
mov
add
mov
sahf
mov
test
nop
xlat
std
cmpsb
lock
dec
loop
insb
xor
pop
jmp
and
adc
mov
and
clc
imul
inc
int
repz
and
mov
push
shll
imul
push
insb
cmpsb
decl
loopne
pop
js
or
jge
dec
cmpsl
inc
and
cmp
push
mov
ret
test
addr16
enter
stos
jnp
xor
fmuls
jo
imul
jno
loope
aaa
mov
repnz
int
xor
enter
rolb
xchg
adc
push
cmovnp
popf
rcrb
xor
je
or
jns
push
les
in
dec
jmp
mov
pushf
inc
loop
inc
dec
sbb
cmp
push
mov
scas
cmp
mov
and
dec
inc
fstpt
ljmp
and
ret
jecxz
lahf
scas
inc
fs
lret
sar
jae
insb
mov
push
repz
sar
pop
mov
push
fadd
jmp
les
pop
ds
mov
not
adc
mov
push
sub
fcmovu
xchg
int
xchg
add
test
sti
sub
cmp
jb
push
fdivl
enter
fstl
add
and
sub
pop
dec
aas
xor
sbb
out
jno
xor
mov
sub
push
add
dec
and
aam
push
ficomps
sbb
nop
xchg
adc
mov
mov
push
decb
mov
pop
mov
jne
ja
cld
ljmp
je
ds
out
in
xchg
inc
mov
xlat
sub
mov
dec
sti
or
mov
inc
sub
std
cmpb
inc
cltd
sbb
nop
mov
insb
out
test
add
ss
leave
ds
int3
call
push
push
lahf
repz
ficoml
xchg
cmp
cmp
add
sub
nop
std
es
or
lods
les
push
mov
mov
jl
mov
pushf
cltd
and
and
push
and
test
xchg
mov
arpl
jle
mov
jbe
inc
dec
in
lret
and
sub
xchg
mov
shll
push
fmuls
stos
lds
leave
call
jns
sti
adc
cs
out
mov
xchg
mov
data16
ret
push
sub
mov
scas
lock
lods
pop
mov
shlb
ret
sub
cmp
je
addl
sbb
sbb
imul
orb
pop
adc
push
roll
movlps
cld
icebp
sahf
add
lea
push
mov
icebp
xlat
dec
orb
sub
mov
xchg
dec
cmpsl
jbe
push
sub
dec
dec
push
subb
jge
test
ss
ja
push
and
sahf
cmp
add
pop
ss
ds
xor
fsubrl
call
scas
xchg
mov
or
test
jge
and
outsb
dec
mov
mov
imul
push
int
jns
dec
stos
mov
push
test
inc
xchg
sub
mov
mov
jbe
rclb
scas
push
mov
sub
push
dec
adc
mov
insl
or
cld
jae
ret
sbb
rol
call
lods
cmc
iret
cmp
xchg
push
cmpb
out
jge
gs
and
mov
in
rorb
cmp
lcall
movsb
test
rolb
in
mov
les
and
or
adc
fsubl
or
mov
ljmp
scas
gs
pop
sub
sbb
stos
leave
aad
and
sbb
or
mov
cmp
xor
inc
mov
or
dec
xlat
pop
and
shr
push
test
ljmp
stc
into
movl
addl
mov
mov
push
add
idivb
aaa
xorl
roll
repnz
sbb
pop
aam
lahf
push
mov
jle
add
enter
inc
and
sub
jne
mov
add
outsb
jns
int
addr16
jno
ror
pop
fisttpll
movsb
pop
pop
push
jmp
mov
cs
jge
rorb
les
pop
mov
lahf
add
cmp
insl
xor
inc
roll
mov
push
fldt
sahf
mov
sbb
aam
dec
xlat
mov
popf
js
xchg
hlt
ret
test
filds
rcr
dec
dec
std
jg
cmpb
arpl
jmp
cld
or
mov
pop
mov
mov
cmpsb
fwait
mov
mov
xlat
test
out
fidivs
xor
inc
xor
mov
push
jge
sbb
or
outsl
imull
adc
imul
mull
sub
sbb
in
ud1
xchg
xchg
int
jmp
inc
cs
sbb
pop
fistpll
in
cmpsb
cmp
xchg
sub
adc
scas
push
loop
lods
mov
jo
sbb
cltd
sahf
jbe
pop
add
cmpsl
cli
xor
xchg
push
pop
sbb
dec
fmull
syscall
out
aad
xor
rolb
enter
adc
push
paddb
call
lahf
loop
mov
adc
dec
mov
add
rol
and
push
int
adc
inc
inc
das
inc
mov
das
add
test
cmp
das
inc
inc
pushl
xchg
xor
mov
in
pop
ret
push
mov
push
cmpsb
stc
jle
push
mov
scas
scas
sar
xor
jmp
rclb
adc
sbbb
cmp
sub
dec
fisttpl
xchg
xchg
sbb
jbe
ret
lret
mov
enter
shrl
dec
dec
sti
ss
out
movsl
lret
loopne
test
ja
fsubs
lahf
lahf
leave
mov
cmp
xchg
out
lea
push
and
call
cmp
icebp
outsb
mov
test
dec
mov
cld
cmp
pop
mov
cwtl
jb
xor
add
sarl
fnsave
addb
adc
cmp
xor
shl
xor
test
push
push
andb
stos
loopne
in
push
lods
and
jbe
mov
lods
gs
adcb
xorb
sbb
adc
ss
notb
cmpl
fistps
repnz
inc
inc
push
fisubs
popl
jo
sub
rol
push
fwait
fwait
xchg
arpl
mov
loop
bndstx
testb
and
mov
out
xor
inc
fistps
sarl
dec
add
xor
addr16
std
jg
rorl
cltd
pop
adc
shl
adc
jnp
in
nop
xlat
mov
xlat
inc
pop
push
mov
jmp
and
int3
ret
cmpsb
adc
icebp
adc
mov
push
js
arpl
outsl
decb
mov
xor
int3
shll
fstp
cmpsb
or
mov
cmc
jl
jg
mov
sbb
stc
mov
mov
aam
in
mov
js
dec
cmpsl
shlw
imul
addr16
inc
or
outsl
out
cltd
setae
cwtl
inc
mov
add
xor
sbb
mov
into
cltd
lods
leave
arpl
icebp
jle
aaa
ret
jns
mov
or
mov
mov
dec
and
xor
push
icebp
pop
jle
fcoml
call
and
push
movsb
sub
mov
xchg
jecxz
mov
push
xor
push
sbb
push
or
leave
movsb
lret
inc
dec
pusha
adc
int3
mov
arpl
sbb
sub
add
lahf
jns
movsl
sbb
and
cmp
loopne
xchg
arpl
mov
ja,pn
dec
outsl
jo
cld
xor
push
call
pushf
mov
notb
xchg
cmp
js
out
pushf
std
jecxz
sub
gs
sub
ficompl
fs
movl
sahf
outsb
xor
clc
jo
pop
jmp
mov
aaa
sub
pop
out
dec
ret
mov
push
and
dec
inc
mov
push
inc
jecxz
shrl
fs
loopne
js
sub
mov
xchg
in
sub
xor
add
xor
cmpsl
jp
mov
push
push
cmp
std
or
lock
fcomps
mov
fs
or
xchg
add
aam
ljmp
sahf
lea
fists
gs
js
and
dec
lods
in
nop
jbe
push
dec
cltd
loop
cld
push
jp
pop
xor
xlat
push
fcmovu
aad
push
shll
int3
fadds
das
dec
or
xor
ret
mov
lret
push
stos
dec
jno
xchg
push
sbb
cld
sti
push
out
mov
loop
dec
jecxz
fldl
outsb
xlat
cs
js
add
scas
cltd
xor
mov
rcrl
xchg
mov
lea
or
mov
jmp
jno
outsl
out
daa
xchg
or
pop
jns
xchg
sub
pusha
loope
push
dec
xchg
dec
mov
pushf
mov
jg
jp
out
adc
iret
xchg
addr16
xor
xchg
push
daa
add
movsl
push
leave
jecxz
sub
push
fmuls
pop
pop
fiaddl
pusha
das
gs
hlt
lret
imul
test
test
je
push
mov
sub
jns
dec
xor
mull
out
subl
sub
dec
icebp
cmp
arpl
loopne
xchg
js
push
mov
in
jl
iret
mov
push
stos
test
jo
xor
mov
in
adc
ret
pop
gs
cmpl
in
cmpsl
cwtl
mov
jecxz
mov
mov
dec
xchg
out
jb
xchg
aas
loope
ljmp
repnz
ds
mov
mov
cld
pop
xchg
ja
leave
push
cmp
sbb
pop
xchg
cltd
pusha
loopne
out
ja
or
dec
lret
sub
inc
rorl
inc
jb
hlt
out
sbb
stc
std
movsb
int
popa
cmp
jae
jo
lahf
lods
outsb
shlb
jecxz
rolb
add
mov
stos
or
clc
int3
pop
adc
cmpsb
mov
mov
in
push
stos
push
or
outsb
push
jp
xchg
scas
loope
cmp
pusha
pop
adc
mov
jno
mov
fs
sbb
dec
or
mov
jmp
pop
ds
ja
mov
pop
jmp
or
nop
xchg
scas
clc
push
mov
mov
ficoml
andb
push
xchg
add
and
and
addl
push
mov
mov
jl
out
dec
insl
jmp
sub
movsl
stos
sbbb
adc
scas
or
adc
pop
in
pop
pop
mov
in
jecxz
iret
les
jb
xor
sub
aas
aaa
mov
scas
mov
psubq
loop
jb
push
dec
jge
cmp
inc
stos
adc
xchg
dec
cmpsb
shll
dec
push
inc
mov
loope
xor
mov
test
push
ret
or
xchg
outsb
mov
call
mov
imul
sub
sbb
test
fbld
dec
sub
xchg
adc
mov
stc
add
sub
or
mov
dec
sub
scas
jmp
adc
mov
xchg
lods
aam
stc
ja
mov
ss
jne
into
sub
repz
int3
and
test
push
jle
inc
mov
push
lock
xlat
jo
mov
pop
and
in
mov
leave
jg
addr16
test
and
xchg
pop
mov
dec
ret
add
mov
jne
sbb
xchg
loop
movsb
xchg
out
xor
cmp
scas
xor
xchg
mov
sahf
pushf
out
roll
imul
push
mov
repz
dec
addb
push
and
add
ss
jl
in
and
fldenv
xchg
jae
push
mov
cmpsb
cmp
xchg
arpl
in
test
xchg
ret
in
popf
mov
es
xchg
das
mov
inc
jp
aas
dec
add
mov
movsb
push
mov
pop
lret
ds
pop
pop
jo
jae
jbe
jg
push
mov
pop
rcr
jge
cltd
fidivrs
sub
push
and
int
xlat
test
xor
pop
in
xchg
bnd
jnp
mov
outsb
mov
scas
negb
xchg
cmp
and
jne
mov
clc
add
push
orb
push
out
loopne
mov
lret
xor
pop
jne
leave
cs
js
mov
decb
sbb
sub
mov
xchg
inc
movsb
and
mov
xlat
movsb
sbb
js
fimuls
push
and
push
iret
jne
push
stos
es
out
popa
std
sbb
dec
pop
mov
mov
dec
clc
push
jge
or
ret
push
or
push
jg
cmp
loop
jne
push
shl
nop
bound
inc
nopl
popa
fcompl
enter
dec
sbb
mov
ret
mov
and
push
mov
cmpsb
mov
iret
std
lds
lret
and
push
rcr
inc
or
cs
fwait
sti
aaa
sub
pop
out
clc
repnz
mov
push
imul
xor
and
pop
pop
dec
xlat
stc
imul
and
icebp
cmp
or
loopne
inc
dec
add
push
push
or
add
ss
lods
add
test
sbb
and
sub
int
sub
inc
and
fsubs
cmpsl
pop
inc
mov
xchg
mov
sahf
mov
mov
sub
adc
int
insl
or
mov
mov
aad
inc
xchg
mov
add
loop
sbb
xchg
jnp
and
push
mov
shlb
mov
movl
xlat
cmp
inc
arpl
xor
or
mov
inc
daa
mov
test
xchg
cmp
push
sarl
mov
rclb
stos
or
pushf
negl
fistl
in
jae
icebp
ss
sub
push
call
repz
lds
cmp
lods
in
stos
jecxz
out
movsb
dec
dec
movsb
rcrb
aaa
inc
lret
jns
fwait
jae
adc
addr16
jmp
mov
out
ja
lods
and
add
bnd
test
sarl
mov
call
stos
cmp
lret
andl
hlt
test
add
sub
dec
repnz
jp
push
cli
adc
mov
mov
sub
sti
aas
test
cmp
loopne
mov
add
sbb
mov
pop
in
cld
arpl
test
mov
pop
xchg
pop
inc
sbb
enter
icebp
test
sub
loopne
shlb
push
std
lock
outsb
mov
and
xor
in
rclb
jb
pop
and
sub
lret
jns
and
mov
fldt
cmp
aas
xchg
add
add
jp
fnstcw
push
and
pushl
add
and
leave
and
mov
int
or
jge
fwait
xor
xchg
inc
fcoms
gs
pop
adc
jne
ret
fiadds
insb
mov
std
lcall
pop
jle
lahf
mov
out
add
mov
push
push
test
into
xchg
ret
test
add
icebp
cwtl
sub
shll
dec
test
cltd
xlat
and
fisttpl
insl
out
push
rcrl
adc
and
push
arpl
lock
popa
mov
dec
mov
push
rcrl
lods
iret
inc
jle
popf
adc
fld
push
ljmp
fistps
outsb
loope
xchg
add
fistl
in
mov
inc
nop
jecxz
jle
movsl
flds
push
icebp
lea
arpl
dec
jne
int
out
mov
shrl
pop
push
imul
lods
cmc
icebp
aam
mov
jg
iret
es
dec
scas
add
mov
cmpsb
pop
sti
lds
shrl
mov
and
popa
fcoml
push
ret
sub
in
pop
jl
scas
rcll
movsb
mov
enter
adc
or
scas
sub
data16
or
out
lahf
les
jl
sub
imul
jge
out
inc
dec
pop
pusha
pop
popf
pop
and
push
sti
mov
add
mov
sbb
cli
inc
shrl
pusha
sbb
lds
sub
cmp
and
mov
lods
pushf
xor
add
mov
mov
cmc
adc
cli
repnz
add
and
sub
fisttpll
mov
fisubl
push
je
cmp
cmc
dec
adc
shlb
pop
sub
mov
push
or
or
jbe
xor
push
cltd
cmp
loope
mov
insb
sbb
push
xor
or
dec
mov
adc
sti
movsl
out
xorb
insl
jnp
loope
add
jg
jle
cli
pop
dec
sub
das
cmpsb
push
aam
in
xchg
jl
repnz
outsl
or
mov
xor
push
xor
mov
add
adc
fisubrs
mov
dec
mov
xchg
push
dec
pop
dec
xchg
cli
repz
xchg
sahf
adc
cli
in
sub
decb
push
jp
sbb
pop
daa
sbb
cmpsb
or
rcrl
or
add
in
data16
test
ljmp
js
dec
scas
push
jb
dec
inc
repnz
or
addr16
mov
cmpsl
add
mov
addr16
jl
pop
out
pop
xchg
sub
push
cmc
and
or
js
dec
or
mov
repnz
daa
lock
cmpsb
jecxz
shlb
and
loop
int
repz
sub
mov
out
ja
mov
out
into
jne
ficoms
in
jg
std
push
adc
lret
xor
mov
mov
adc
pushf
in
imul
lret
dec
mov
jp
cmpsb
adc
adc
mov
adc
cmp
add
stos
sbb
and
test
xor
loope
jno
lea
push
mov
push
and
jmp
cmp
rorb
leave
js
mov
cmpsb
icebp
aas
rcrb
jnp
jge
xchg
add
xorl
add
cltd
loop
repz
jg
push
jo
lods
mov
lret
lods
jae
stos
je
sub
push
leave
xchg
dec
popf
dec
imul
arpl
pop
xor
lds
lcall
mov
mov
push
mov
dec
xor
jge
push
and
je
in
test
in
ret
rclb
dec
hlt
mov
arpl
or
outsl
jbe
xchg
mov
rol
fildl
jg
or
lods
pop
scas
xor
xchg
icebp
dec
add
cwtl
ror
std
jno
mov
aam
dec
inc
or
mov
lods
or
std
or
fsubl
outsb
or
inc
and
js
adc
sbb
mov
sbb
iret
jp
pop
jle
out
aam
dec
mov
out
mov
push
jnp
aam
dec
mov
jmp
lahf
setne
mov
cmp
xlat
mov
popa
and
std
or
or
dec
loop
hlt
add
sarl
daa
gs
push
pop
mov
mov
aas
and
addl
push
xor
call
pusha
inc
mov
in
adc
pop
xchg
inc
clc
xchg
nop
hlt
sahf
jecxz
sbb
or
and
adc
sbb
pop
data16
adc
and
mov
push
aad
adc
fisubl
incl
sbb
add
cwtl
pusha
ret
pop
sti
in
cmp
add
fcoms
cs
mov
data16
jge
and
and
xchg
push
xchg
gs
leave
stos
inc
push
lods
xchg
pop
pop
lahf
mov
decl
scas
cmp
scas
sub
inc
addb
sub
lea
shll
hlt
fsubp
lea
movsl
jmp
jp
nop
cmp
inc
dec
sbb
idivb
fcmovnu
add
inc
lea
jno
rcll
push
outsl
aad
push
jne
push
jns
outsb
sbb
add
sar
iretw
arpl
sti
daa
push
xor
mov
arpl
cmpsb
xchg
jno
cmp
xchg
movsb
cltd
add
cltd
pop
xor
data16
bnd
inc
loope
aam
mov
mov
adcl
in
aam
xor
in
lret
cmp
movb
pop
cld
icebp
xlat
mov
fcomi
stos
imul
ficoml
add
dec
gs
pop
scas
pop
iret
mov
mov
lods
xchg
sbb
inc
movsl
arpl
in
jle
fs
mov
pop
sti
push
lods
mov
sub
dec
les
enter
int
aaa
lcall
mov
int3
jge
arpl
xchg
ja
lcall
sbb
inc
in
cmp
pop
gs
bnd
or
xor
push
lock
popf
add
test
or
cmp
andl
arpl
aas
pop
mov
test
pop
in
call
insl
enter
xchg
pusha
mov
jne
je
mov
xor
xor
je
movl
cmp
xor
add
cmp
lcall
mov
fdivrs
scas
arpl
xor
mov
in
adc
pshufw
es
jnp
cli
orb
dec
mov
jnp
push
push
cmp
xor
jmp
popa
fnstcw
pop
sbb
lret
out
push
xchg
lcall
lret
ret
pop
jg,pt
stos
dec
out
or
jbe
pop
xchg
pop
mov
adc
dec
js
into
push
pop
bound
fwait
cmp
cld
mov
insb
xchg
jl
les
pop
mov
push
jo
jne
mov
ljmp
dec
sarl
aaa
lods
or
xchg
loop
xor
hlt
sarl
sbb
dec
test
dec
dec
cli
outsb
rcrl
iret
sub
icebp
jbe
iret
mov
jl
pushf
mov
sub
mov
clc
fwait
mov
or
mov
xchg
xor
cli
dec
lahf
ljmp
pop
pop
mov
iret
sahf
push
cmpsb
dec
xchg
loope
xor
in
xchg
inc
sbb
sbb
xchg
mov
scas
dec
add
inc
movsb
cld
stos
test
xchg
and
shr
xor
adcl
sub
movsb
cmp
in
sbb
stos
mov
and
and
pop
mov
push
subb
dec
dec
or
int
push
xchg
xor
inc
daa
outsb
push
mov
popa
mov
insb
test
add
dec
sbb
adc
test
mov
pop
mov
cmp
sbb
mov
js
aaa
fsts
mov
into
dec
ds
mov
ds
jns
mov
shl
inc
and
mov
cmp
sbb
inc
dec
jecxz
pop
int
sbb
call
clc
addr16
ss
add
test
stos
stos
xorl
xorl
out
das
pop
fwait
bound
sti
xorb
out
loop
inc
mov
adc
pop
es
cmp
ss
adc
fidivrl
sub
xchg
mov
stc
sub
inc
ror
test
push
test
cmp
push
jb
jne
add
pop
or
je
addl
xor
add
jno
mov
imul
and
pop
ss
mov
mov
cmp
fdecstp
aas
popf
gs
in
fdivrs
imul
mov
sbbl
jle
ljmp
mov
lea
cmp
mov
sbb
inc
push
imull
sub
mov
xor
push
sub
xchg
test
repnz
inc
mov
jmp
das
mov
aad
pushf
movsb
mov
pop
das
pop
and
lea
mov
and
cmp
dec
insl
adc
push
pop
xor
repnz
mov
mov
dec
iret
mov
pusha
or
inc
cltd
pop
shr
cmp
in
jl
pop
push
jne
add
shrb
out
push
sbb
adc
out
jge
or
xlat
je
mov
jecxz
mov
mov
or
jl
stc
addb
dec
jo
aaa
push
push
ficompl
addr16
enter
cmpsb
xchg
icebp
filds
or
leave
mov
adc
push
add
fistl
xchg
push
xor
loope
enter
pop
cltd
or
mov
pop
popf
add
pop
lods
fstl
xor
pop
add
in
cmp
pop
out
test
dec
push
dec
pop
adc
xchg
mov
stos
shl
popf
inc
xor
insb
aad
mov
sbb
inc
push
iret
jbe
pop
cmp
sbb
out
pop
add
xchg
pop
add
or
outsb
push
out
sbb
les
gs
push
jae
aaa
inc
sub
out
jns
stc
lods
psrad
out
xor
xchg
mov
cmc
scas
dec
nop
sub
es
rcll
clc
outsl
fsubl
cmp
fcompl
clc
mov
fstps
int
inc
add
mov
xchg
pop
dec
nop
xchg
test
flds
test
popf
ret
xchg
les
jno
inc
lahf
jne
mov
lods
pushf
lahf
xchg
or
or
mov
cmp
std
adc
jno
or
insl
or
xorl
cs
bound
push
dec
sbb
or
insl
ds
and
xchg
outsb
push
xorb
or
sbbl
sbb
mov
jb
xor
mov
leave
stos
inc
adc
lods
es
jle
addl
adc
mov
movsl
ret
xor
rorb
jne
mov
pop
lods
or
or
out
shl
setns
aaa
subl
cmp
cmp
mov
andb
fxch
arpl
rorb
imul
inc
pop
mov
mov
adc
inc
es
xlat
push
cmp
cmp
cmp
scas
pop
jb
jno
lds
cmc
cli
in
inc
cmp
dec
jp
pop
bound
jo
int
data16
imul
pop
not
or
loop
scas
jmp
cltd
hlt
cli
arpl
xchg
cltd
and
test
push
ret
and
in
insl
mov
push
cli
std
mov
mov
enter
xchg
call
xchg
dec
jnp
in
mov
cmc
add
inc
aam
mov
jecxz
and
push
jo
mov
aas
mov
push
lahf
push
mov
mov
push
sahf
cmp
pushf
xchg
std
mov
jmp
in
push
jle
js
out
adc
popa
stc
cmpsb
mov
sti
cmc
adc
jne
subb
cmpsl
lock
jg
stos
xchg
cvttps2pi
jl
dec
add
fisubs
cmp
pop
jl
mov
into
jne
sbb
out
in
cmp
push
pop
lcall
inc
push
sub
call
xor
shll
adc
int
xor
push
cmp
test
loop
jae
mov
mov
outsb
js
xor
std
jp
xchg
inc
xor
inc
icebp
xchg
mov
jo
xchg
les
add
mov
adc
push
imul
scas
sbb
and
inc
cmp
mov
les
repnz
lea
and
pop
sub
and
inc
inc
jmp
pushf
addr16
rorl
lods
sti
cmp
lods
push
out
mov
push
ljmp
or
sub
faddp
push
std
mov
ret
nop
or
mov
incb
pop
jp
mov
cmpsb
or
pop
jle
and
ja
adc
std
inc
push
imul
push
enter
dec
lcall
stos
jb
inc
inc
inc
dec
ret
out
inc
cmp
dec
inc
pop
repz
pushf
stc
fsubrl
int3
lock
or
pop
inc
push
mov
fldenv
leave
sbb
pop
icebp
orl
in
shrb
dec
fs
lods
nop
mov
jb
ljmp
lahf
dec
dec
mov
repz
cld
push
mov
push
pop
inc
int
sbb
push
fmull
imul
inc
and
adc
rolb
int3
fisubs
sub
popa
mov
inc
adc
push
xor
enter
jns
sbb
test
jmp
ja
fmul
neg
mov
cmp
imul
sub
inc
and
cmp
and
mov
jge
testl
cmpsl
dec
cltd
xchg
loopne
jo
movsl
add
in
in
mov
dec
push
add
xchg
pop
pushf
mov
pushf
fiadds
mov
scas
in
or
repnz
arpl
adc
add
pushf
repnz
fnstsw
fisttps
cs
push
pandn
mov
cmpsl
mov
mov
pusha
lcall
push
nop
test
ror
cmp
mov
pop
or
popa
push
mov
jno
aas
pop
xor
jmp
cmp
stc
xor
dec
xchg
sub
xchg
push
or
scas
mov
mov
mov
xorb
xchg
inc
cmp
jae
jle
inc
and
testl
inc
movsl
add
popf
pop
cwtl
insb
pop
in
icebp
pop
xor
adc
inc
cmp
adc
dec
int3
pop
rolb
xchg
jge
fldenv
cli
add
xchg
jnp
push
dec
mov
push
inc
jp
jo
push
push
in
repz
sub
addl
sbb
in
roll
ss
icebp
fcmovne
cmp
push
call
lods
mov
dec
mov
jns
push
lock
xchg
aad
rcll
popa
mov
push
xchg
imul
sub
cmp
sub
std
ror
or
ficompl
mov
scas
adc
cwtl
std
dec
shr
int
test
dec
sub
fxch
pop
sub
and
neg
and
insb
cmp
ss
cmpl
mov
jnp
mov
lcall
and
int3
lret
dec
sbb
fwait
jmp
lods
jns
and
cmp
mov
mul
lods
std
sbb
mov
adc
ficompl
add
bts
lods
fisubl
cmc
xor
hlt
push
leave
popf
cmp
push
add
mov
xor
lea
repnz
cmc
out
lret
scas
pop
jae
and
icebp
sub
mov
in
cmp
in
mov
ja
adc
pop
push
or
add
adc
sbb
mov
pop
mov
xchg
jmp
adc
ret
lea
lods
inc
sarl
xchg
mov
sbb
cmp
iret
bound
push
dec
sbb
aaa
jecxz
aam
xor
je
lret
or
inc
cltd
dec
addr16
fsubrs
jne
sbb
inc
mov
mov
cs
fisttpll
jb
sahf
jp
xchg
mov
dec
enter
fstps
in
inc
aaa
cmpsb
cmpsl
inc
test
in
int3
xchg
aam
int
xchg
cmp
xchg
ss
int3
imul
add
fsub
sub
xor
pop
outsl
dec
fdivrl
cltd
adc
icebp
in
jnp
loope
mov
fcoml
int
or
mov
dec
inc
cmp
pop
fwait
cmpl
movb
icebp
jno
dec
mov
sub
push
pop
imul
lock
jnp
and
stos
out
mov
and
stos
jge
les
in
mov
sub
lock
push
lcall
icebp
scas
popf
add
mov
adc
rcrl
adc
sub
pop
sti
movsb
push
push
jo
adc
scas
lret
mov
add
inc
pushfw
fdivrp
xor
cmpsl
aam
inc
cwtl
ljmp
jb
fcmovbe
pop
xorb
int
leave
mov
scas
stc
cmp
fildl
push
adc
ret
xchg
and
stc
mov
shlb
sbb
sarl
fbld
xchg
jecxz
andb
lods
jl
ja
sbb
cwtl
flds
scas
aad
sub
dec
cmp
or
mov
xrelease
or
movl
push
cmc
inc
sbb
xchg
scas
push
cmpsl
mov
gs
hlt
loop
mov
jle
ss
mov
sub
push
mov
rcr
mov
pushf
aam
pushf
jne
mov
mov
fiadds
mov
xor
pop
cmpsb
and
aam
jae
mov
dec
lea
notb
sbb
and
lds
test
push
mov
xor
iret
notl
sbb
jne
jecxz
out
ljmp
scas
clc
cmpsb
imul
sub
cmp
imul
loop
leave
hlt
iret
adc
adc
cmpsl
pop
aam
lcall
jecxz
inc
mov
fwait
data16
pusha
xchg
adc
inc
fdivs
jl
loope
aam
fadds
xchg
movsl
std
adc
sub
cmp
mov
xchg
js
rorl
in
loope
test
ss
stos
xchg
add
movsb
inc
lds
add
dec
inc
sub
sbb
pop
xchg
popf
jnp
pop
das
xor
mov
xchg
push
insl
lret
imul
aam
inc
mov
mov
mov
adc
lds
lret
or
cmpl
cmp
in
pop
fisttpl
loope
adc
cmp
or
fcomps
adc
out
and
ss
push
sbb
sbbl
fsubs
in
mov
and
jbe
sub
jp
lds
stos
pusha
pop
pop
mov
sti
push
decl
aam
mov
fs
stos
xor
dec
int
aam
pusha
cmc
pop
mov
movsw
mov
mov
fs
and
arpl
or
pop
inc
mov
cmpb
mov
jg
xor
loop
loope
xchg
fwait
pop
or
aas
loope
fs
lret
xlat
das
jnp
pop
cli
sti
xlat
jae
enter
cmp
repz
daa
add
jle
lcall
cld
fstl
inc
xor
subl
jns
push
cwtl
bound
and
mov
pop
mov
xor
shl
testl
std
leave
xchg
pop
jp
clc
sahf
loope
rep
loope
fwait
movsl
sub
inc
jne
dec
andb
lods
adc
lods
cmp
bound
cmp
add
mov
xor
fucomi
inc
sbb
jle
cmc
mov
mov
sahf
loopne
inc
push
xor
sti
cmp
jns
sbb
adc
jae
push
mov
lock
imul
imul
fstpl
in
lock
fwait
dec
gs
roll
xlat
dec
call
push
movsb
cltd
sbb
adc
pop
push
and
out
jp
enter
lahf
mov
imul
push
dec
lds
pusha
and
sub
cmp
nop
cmp
push
mov
mov
sub
out
in
add
subl
fisubrl
mov
js
jmp
inc
daa
pop
mov
int
out
inc
fcmovnbe
xchg
jne
mov
push
aas
push
dec
adc
or
ret
movsb
test
xchg
fucomp
int
rsqrtps
mov
pop
daa
movsb
pop
cmp
es
push
in
xlat
push
cli
fnsave
daa
out
pop
int3
push
adcl
cmpsl
xor
mov
dec
icebp
mov
std
jge
jl
scas
addr16
push
add
inc
cmp
mov
fisttpll
insl
sbb
jmp
adc
in
sarl
pusha
test
hlt
mov
test
cltd
jecxz
mov
loope
add
and
jnp
rol
sbb
push
xlat
negl
mov
ja
sahf
in
rorb
nop
and
push
push
outsl
aas
mov
pop
mov
mov
insl
cmp
arpl
std
lds
js
dec
adc
sbb
outsb
mov
inc
rolb
and
insb
out
dec
or
mov
jne
adc
and
inc
aad
mov
pop
add
cmp
or
add
pop
cli
sub
into
rolb
orl
push
inc
stos
inc
push
cld
gs
hlt
push
insl
jbe
and
sub
xor
push
inc
cltd
mov
fiaddl
sarb
and
xorl
andl
or
frstor
lods
push
nop
xor
ja
mov
xchg
sbb
add
shll
iret
shlb
sbb
and
out
je
mov
cld
and
loope
ljmp
mov
repnz
mov
mov
daa
or
ret
or
adc
push
fwait
cmpsl
repnz
xorb
jecxz
mov
mov
in
adcl
pop
addl
sti
sbbb
add
lret
mov
das
dec
xor
pop
push
mov
inc
and
sbb
test
sub
add
iret
xor
inc
aad
dec
out
in
insw
cld
pop
mov
sbb
aam
add
mov
scas
adc
xor
push
mov
mov
mov
scas
and
jnp
sub
pop
xor
pop
clc
xor
cltd
mov
clc
xorb
mov
sahf
arpl
or
stos
jmp
fwait
dec
push
or
and
bound
rcrl
mov
pop
cmp
inc
dec
push
sarl
mov
inc
mov
inc
mov
pop
enter
sbb
mov
pusha
dec
fisubrl
adc
mov
inc
jmp
mov
sub
stos
xor
mov
dec
adc
push
in
mov
stos
mov
sbb
fs
adc
and
bound
or
subb
ret
popf
mov
xor
jne
mov
inc
xchg
xor
mov
in
mov
sbb
out
push
sub
popf
test
nop
add
loopne
jbe
movsb
leave
xor
push
out
inc
sub
xlat
jp
ds
pop
cmp
dec
leave
cld
push
divb
enter
push
dec
lea
std
dec
ljmp
jae
int
mov
icebp
cmc
or
dec
or
in
mov
xchg
sbb
cmp
pop
push
test
out
in
mov
xchg
or
loopne
push
imul
mov
ja
sti
scas
xchg
cwtl
enter
les
pop
in
fcompl
dec
testb
inc
scas
shll
and
stc
iret
andl
in
dec
daa
mov
xchg
ss
jne
lods
or
cmp
pop
dec
fnsave
outsl
push
cltd
imul
mov
mov
xor
mov
fwait
aaa
or
push
test
pop
mov
push
arpl
sub
ret
mov
addr16
dec
andl
cmpsb
popf
movsb
in
cmp
inc
pop
js
pop
outsb
jle
push
out
gs
ja
mov
sbb
push
mov
xchg
sbb
mov
popa
cmp
cld
test
adc
test
flds
xchg
int
xor
shll
cmp
outsl
pop
icebp
stos
cmp
jae
fs
out
inc
adc
lcall
mov
dec
js
fwait
mov
mov
pop
adc
add
ret
sti
ds
lret
push
mov
push
stos
mov
dec
and
jns
and
xchg
inc
lcall
jne
dec
das
xchg
into
rclb
push
inc
pop
pop
sub
lret
aad
cld
das
in
leave
jp
loop
aas
stos
cmp
in
or
stc
cmpsb
fs
mov
pop
push
aad
fsub
loopne
cs
pop
adc
popa
dec
mov
lahf
sbb
shl
ja
rolb
mov
pop
cmp
repnz
push
add
je
push
loopne
jp
call
and
mov
xor
sbb
fsubs
cmp
mov
insb
test
xchg
push
lcall
push
adc
popa
stc
inc
mov
mov
push
pop
sbb
inc
mov
inc
add
xor
int3
xchg
ds
out
repz
and
sbb
negl
or
pop
fidivrl
clc
in
subl
mov
inc
dec
jmp
insb
and
test
iret
cltd
dec
mov
xchg
in
or
in
cmp
nop
inc
je
or
pop
or
mov
xor
scas
stos
sbb
mov
mov
push
or
mov
push
xor
cmp
or
jne
and
sbb
lea
arpl
popl
and
jae
and
cmp
lret
pop
outsb
pop
stos
popa
jmp
fisttps
mov
xor
fwait
int
pop
aad
cmpsb
imul
mov
leave
int3
pop
xor
lcall
push
cmp
or
dec
pusha
stos
lret
fcoms
dec
adc
pop
ret
add
push
incl
in
call
sbb
add
mov
xor
sub
pop
mov
sub
adc
rcrb
cs
and
inc
cs
mov
movsl
fidivl
sbb
dec
sub
out
sub
and
xchg
ds
stos
mov
dec
pop
adc
cmpsb
les
adc
and
cmpsl
imulb
sbb
aad
js
xor
and
xchg
shll
pop
mov
inc
mov
test
sbb
mov
nop
test
cmp
adc
je
dec
cli
xchg
call
xor
jae
aad
inc
add
icebp
test
daa
inc
cmp
sub
adc
stos
or
mov
jb
xchg
bound
ss
js
fiadds
repz
push
add
xchg
gs
pop
xchg
sub
mov
push
popa
rcll
fwait
and
mov
mov
lods
lock
inc
cmp
mov
dec
stos
pop
jb
cmp
or
xchg
xor
mov
fsubs
jg
and
popf
or
mov
inc
test
cmpsb
push
jb
push
rclb
ja
xchg
lret
dec
outsl
jns
jnp
ret
inc
dec
push
test
enter
xchg
call
mov
xchg
sarl
xor
ljmp
pop
xchg
mov
ds
orb
jmp
outsl
cmp
test
sub
dec
inc
xchg
mov
cmp
movq
and
pop
popa
cmpsb
nop
pop
jne
sbb
insl
add
push
dec
fcomps
cmc
std
lds
mov
outsb
add
or
jbe
push
in
inc
lret
lret
out
cmp
sub
jmp
mov
push
xchg
popa
jbe
push
xorl
arpl
dec
out
dec
lret
xor
in
aad
xlat
popf
out
sahf
xchg
sbbl
push
cli
or
test
stos
pcmpeqd
mov
pop
mov
out
rolb
push
popa
add
pop
incl
push
aaa
fs
and
aam
or
mov
ja
sub
adc
fwait
push
mov
pop
sarb
xchg
xchg
je
sahf
xor
in
cltd
movsb
sub
jns
movsl
mov
or
sub
pushf
mov
sbb
call
mov
lcall
es
inc
sub
mov
popf
add
adc
mov
cmp
pop
imul
loopne
in
rolb
not
add
xchg
cmp
ja
pop
inc
dec
adc
mov
into
pusha
adc
sahf
call
in
dec
rcl
jno
cmp
sub
dec
jg
ret
aaa
lcall
cmp
ror
sbb
mov
mov
imul
pop
stc
adc
jnp
shr
push
repnz
es
push
dec
adc
jp
jno
dec
testl
xchg
mov
movsl
mov
or
out
mov
mov
jge
mov
aad
mov
scas
repnz
or
or
addr16
pop
xor
lock
pop
fnstsw
daa
push
adc
jmp
xor
aas
xchg
stos
dec
jno
dec
clc
jbe
lahf
pop
adc
and
sub
loope
icebp
outsb
sarl
movsb
or
lock
and
xor
inc
pop
jo
rol
mov
pop
push
es
andb
add
je
xchg
lret
popa
push
pusha
outsb
adcb
aad
lahf
jne
sub
push
cmpsl
jle
mov
stos
in
mov
pusha
pop
rolb
jl
pop
sbb
mov
adc
mov
adc
cs
adc
movsl
addr16
cmp
or
out
js
sbb
dec
cmp
push
push
xchg
xchg
mov
leave
mov
clc
and
jne,pn
cmp
test
and
pop
ljmp
cmpsb
and
lret
mov
dec
call
dec
cmc
clc
in
add
push
or
xchg
sti
popf
ljmp
aaa
loop
cmp
ja
or
xchg
test
sbb
jb
pop
push
ffreep
mov
mov
mov
or
icebp
mov
mov
shrl
je
cmp
in
in
lret
jp
out
lcall
repnz
out
inc
scas
stos
addb
mov
rcrb
and
sbb
dec
xchg
ds
xor
insb
push
push
pop
flds
insb
jge
inc
mov
xchg
daa
popf
jmp
fisubs
jo
push
cltd
pop
shrb
sub
imul
nop
push
push
mov
insl
pop
jmp
imul
sbb
aad
out
lds
mov
fnstcw
add
enter
mov
data16
inc
or
lcall
fmull
stos
xchg
cmc
mov
sub
pop
bound
movsl
cmp
pop
fistl
sub
xor
sahf
pop
dec
int3
daa
jg
ret
jle
fistpll
add
cwtl
or
sbb
mov
sahf
mov
pop
xchg
leave
jg
and
je
fcoms
call
dec
loop
mov
rcl
sub
add
enter
arpl
scas
xor
xor
jp
or
aam
iret
pop
push
cmp
push
and
fstl
call
mov
dec
or
outsb
push
push
clc
fwait
lods
sar
push
mov
aad
in
mov
enter
mov
cmpl
sbb
inc
add
pop
xor
insl
push
in
or
test
xchg
sub
movsb
loope
pop
iret
lcall
test
sbb
pop
addr16
sub
lock
std
into
cmp
sub
or
inc
mov
stos
pop
int
cmpsl
loopne
or
enter
test
jg
fcmovne
push
stc
and
insl
sbb
out
movsb
jmp
sub
and
cmpsl
cs
insl
add
in
ret
mov
jl
add
arpl
mov
adc
push
mov
dec
subl
daa
inc
add
cwtl
sahf
rcl
je
lcall
push
xchg
dec
mov
push
test
pushf
shll
pop
mov
mov
sbb
loop
xor
xor
lock
jle
xchg
mov
or
stc
stc
fcompl
dec
xor
popf
sbb
icebp
fcoml
out
cli
jbe
popa
xchg
sbb
ror
add
jb
jns
cmp
mov
int
mov
push
daa
cmp
sbb
dec
ret
outsb
cmp
orl
jno
push
stc
out
stos
outsb
ds
fiadds
sar
adc
clc
cli
fidivrl
cltd
push
addb
jo
dec
jns
push
mov
mov
push
mov
pushw
lret
add
pop
insl
insb
ja
pop
inc
mov
orl
cmp
xor
or
repz
shll
paddusw
das
dec
mov
mov
js
into
out
mov
int3
pop
mov
cli
mov
stc
adc
adc
mov
dec
shrl
push
clc
ret
or
fnstcw
cmpl
jl
hlt
gs
test
icebp
imul
push
sub
mov
sbb
jb
sub
test
cmp
roll
sti
pop
addr16
ret
cld
mov
and
icebp
js
push
push
insl
cmp
mov
cmc
lods
cmp
int
adc
in
sbb
mov
pop
cs
aad
or
and
push
adc
mov
popa
pop
mov
push
scas
cmpsb
test
inc
jno
jl
inc
or
sub
lods
lret
cmpb
dec
insb
mov
imull
jge
mov
idiv
dec
imul
stos
jmp
sahf
cmp
and
data16
pop
cmc
xlat
icebp
stc
dec
cmp
dec
mov
out
inc
insb
inc
adc
lock
ret
push
test
mov
xor
insl
fcomps
rcrl
lret
dec
dec
pop
ljmp
or
xor
mull
mov
inc
test
xorl
and
adc
xor
aas
pop
cmpsb
cli
arpl
mov
movsbl
fldt
loope
mov
test
cmc
into
xor
imul
bound
rorl
test
lea
lods
shl
mov
jmp
mov
xchg
stos
cmp
and
dec
push
xor
jle
inc
aaa
adc
cmp
jb
int3
dec
jne
sub
dec
xor
gs
int3
outsl
cmp
insb
nop
xchg
cltd
add
std
int3
dec
cltd
xor
inc
dec
inc
mov
and
insb
inc
out
pusha
ljmp
push
fdivrl
es
xchg
nop
add
dec
mov
stos
mov
add
aam
dec
pop
mov
mov
mov
sbb
insl
mov
leave
fstps
inc
mov
or
pop
adc
inc
movsl
subb
repz
or
icebp
std
add
mov
pop
pop
cmp
nop
sub
add
adcb
push
sub
and
xchg
fsub
ljmp
dec
dec
sbbb
push
fs
aas
repz
out
scas
aam
ret
scas
lock
lcall
pop
ja
inc
ja
mov
mov
jecxz
repnz
add
mov
gs
icebp
bound
cltd
inc
ja
ret
jae
inc
jp
lods
xor
add
xchg
mov
adc
inc
jae
xor
xchg
ror
mov
scas
loopne
rolb
out
xchg
or
fidivrl
push
mov
aas
adc
lods
mov
mov
mov
add
adc
inc
cmpsl
lcall
fstpl
mov
fnstcw
or
ret
lods
addr16
xor
add
test
dec
mov
hlt
ret
pop
or
mov
and
jb
das
push
and
out
loope
leave
push
mov
es
xor
movsb
pop
lods
push
pop
push
mov
fs
outsb
roll
in
dec
add
jno
xchg
je
xor
mov
sub
inc
std
mov
jl
clc
sbb
push
dec
mov
lods
movsl
mov
adc
arpl
mov
xchg
cmp
adc
pop
inc
out
sub
push
dec
jnp
std
inc
les
dec
sahf
ret
and
mov
mov
ja
jp
out
sbb
mov
mov
sbb
xchg
xchg
mov
mov
bound
cmpsl
mov
shr
jne
imul
roll
jb
mov
push
lds
xchg
popa
add
movsb
enter
jge
sub
sub
push
jmp
out
push
sub
data16
sti
insl
std
xchg
mov
sub
clc
loop
pop
sbb
push
popa
dec
dec
dec
mov
sar
cmp
adc
add
xor
out
js
lds
mov
ret
push
pop
mov
mov
mov
or
mov
ds
and
xchg
sub
sub
mov
and
push
mov
cmpsb
scas
js
lods
pop
inc
fadd
ficoms
cmp
xlat
aaa
mov
dec
jb
sti
std
xor
xchg
inc
imul
mov
inc
shrl
push
xlat
dec
pusha
cmp
fwait
push
xchg
ja
jo
cmp
out
mov
ja
mov
xor
ficoms
lods
pop
stc
jmp
into
fs
shl
add
ja
in
push
dec
push
jle
mov
and
ds
incl
mov
push
ljmp
xchg
mov
push
pop
andb
lock
inc
push
pop
push
push
outsb
xchg
leave
out
sub
idivb
repnz
xchg
mov
inc
mov
sbb
push
pop
add
inc
movsl
push
pop
xchg
filds
aam
daa
adc
dec
xchg
mov
aas
ret
mov
dec
xchg
push
sbb
js
xchg
jp
out
pop
xor
xchg
push
xchg
aaa
filds
xchg
add
jns
add
sarb
loop
test
push
icebp
aam
jge
add
sub
popf
xorl
fsubrl
inc
push
fidivs
pusha
and
mov
pop
add
out
ret
push
and
jmp
addr16
je
inc
inc
pop
xor
cwtl
pop
out
outsl
arpl
jns
and
push
push
lret
sbb
cmp
inc
push
lcall
int3
mov
pushf
adc
xchg
push
push
mov
lret
xchg
add
xor
popf
adc
adc
outsl
lcall
and
xchg
mov
adc
aaa
out
or
lds
add
aad
push
sbb
popf
add
nop
push
cli
or
push
sbb
aaa
mov
cmp
push
inc
cltd
sub
sbb
pop
mov
jmp
dec
xchg
mov
fstpl
pop
and
shrl
cli
std
repz
loope
or
jmp
or
sbb
loop
or
cld
addr16
aas
test
dec
scas
lods
mov
or
aas
pop
hlt
loopne
cltd
xlat
xchg
cmp
loope
jmp
imul
lahf
inc
andl
and
sbb
push
enter
jp
stos
test
or
jge
xchg
mov
xor
xchg
xor
jecxz
cmpsb
out
stos
cwtl
je
pop
jo
js
testb
adc
shll
inc
rdmsr
pop
sbb
mov
mov
jno
imul
dec
jbe
jge
mov
jnp
push
lea
sar
stc
or
je
fstl
or
addr16
add
aas
gs
rcll
lds
icebp
outsl
sub
pop
ret
xchg
xchg
cld
fs
mov
mulb
add
out
lret
fcomps
std
cmc
lock
clc
cmp
xor
out
rcrb
pop
pop
add
sahf
dec
mov
popf
enter
cs
sti
and
jecxz
cmc
loope
dec
mov
testl
cli
fisubs
lcall
daa
test
movsl
popf
xchg
ss
mov
aaa
xchg
pop
adc
jae
in
mov
jg
dec
inc
add
leave
mov
lea
inc
lods
pop
pop
jecxz
ret
les
xchg
jge
in
add
sbb
dec
add
test
outsl
pushf
movsl
or
andl
fsub
ds
sbb
sbb
jecxz
push
fwait
lret
adc
loopne
out
hlt
mov
and
aaa
insb
js
ret
pop
pop
add
push
lea
jle
xchg
push
iret
mov
push
push
nop
outsb
xchg
jae
dec
in
mov
pop
pop
rorb
mov
enter
inc
out
adc
mov
pop
gs
repnz
fildl
mov
divb
xlat
mov
ja
pop
xor
icebp
adc
ficoms
jle
fs
jmp
jge
int
xchg
and
pop
add
mov
movsb
xchg
jge
sbb
mov
rolb
ret
push
dec
shlb
adc
daa
dec
inc
adc
xorb
rorb
jl
inc
scas
loopne
inc
mov
xchg
adc
jp
sub
push
sbb
sub
sub
das
insl
sahf
inc
dec
dec
out
mov
and
sub
lock
jbe
in
test
xchg
pop
xchg
inc
mov
push
mov
imul
xlat
stos
sub
inc
fistps
std
cmp
jl
clc
mov
jno
push
or
scas
jmp
stc
xchg
pushf
aad
fsubrl
pop
and
mov
pop
rorl
mov
pushf
mov
push
addb
fmull
or
ljmp
pop
je
fwait
dec
data16
sti
ja
fisttpll
or
stos
lds
add
lcall
or
loope
push
jne
xor
stos
push
lea
or
ficoms
stos
push
lret
call
imul
push
rclb
lret
call
adc
mov
mov
les
adc
add
in
jp
push
data16
jl
sub
test
test
pop
adc
shrl
testb
je
shrb
sbb
mov
sub
push
adc
xchg
jnp
pop
lods
mov
mov
sub
std
mov
in
and
out
cmp
bound
mov
jg
fsubl
jne
or
lret
imul
hlt
sbb
mov
dec
sbb
test
sub
fisubl
movsl
xor
inc
push
push
mov
addr16
cmp
sub
dec
adc
ret
mov
sbb
fidivs
pop
cmpb
or
icebp
cmc
cmp
mov
gs
add
adcl
stc
fcomi
add
not
repz
rolb
lods
jno
push
pop
mov
lds
sub
faddl
mov
scas
shlb
add
sub
rcrl
imul
mov
popa
or
jp
pop
out
pusha
or
loop
repz
int3
sbb
adc
ds
pusha
movl
xchg
sub
gs
sub
xor
test
xchg
push
inc
sbb
inc
or
out
add
pop
insb
inc
test
mov
adcb
dec
or
push
xchg
push
in
je
mov
fs
adc
push
adc
sub
cli
mov
mov
pusha
hlt
rcr
inc
jl
pop
mov
lahf
je
jne
pop
outsl
imul
mov
dec
and
adc
rclb
cmp
pop
or
mov
and
jecxz
mov
mov
pushf
into
push
lock
xor
ja
fwait
push
xchg
cmp
mov
repnz
int3
daa
or
inc
mov
dec
dec
stos
jae
pop
aaa
or
pop
mov
bound
data16
pop
mov
sub
testl
or
pushf
mov
xor
in
call
mov
jo
xchg
pop
pop
xor
cmp
insl
pop
mov
hlt
push
adc
pmuludq
pop
push
rolb
fs
pop
lret
mov
xor
lret
shll
lea
or
outsl
ret
testb
icebp
add
movsb
aam
pushf
xor
outsl
es
call
cmpsb
push
xchg
dec
push
push
adcl
aas
add
xchg
dec
dec
fiadds
dec
and
dec
ss
rcll
adc
jge
pop
pavgw
inc
add
cmp
addr16
aad
std
pop
and
adc
ljmp
mov
and
mov
jmp
scas
xchg
lds
scas
xchg
fwait
loopne
adc
xor
add
add
pop
mov
jecxz
int
mov
push
ds
cli
xor
jns
out
decb
testb
add
aaa
dec
scas
lret
les
popf
sub
jae
sbb
inc
outsl
popf
std
sbb
jle
sub
mov
mov
fimuls
cltd
mov
dec
xchg
out
jo
in
mov
ljmp
adc
nop
mov
ss
and
hlt
and
mov
inc
xchg
test
je
jp
daa
and
lcall
leave
mov
in
std
jg
jae
push
cmp
cmpsb
mov
cwtl
jmp
mov
int3
mov
outsb
daa
adc
fs
movsl
dec
int
lcall
shlb
into
nop
stos
int
aad
pop
or
cmp
fnstcw
scas
lods
xchg
cmp
in
call
mov
pop
mov
or
jp
out
sub
dec
adc
lret
incb
pop
adc
jge
and
inc
add
xchg
sti
sub
popa
jne
mov
cld
push
jb
aam
add
fxch
cwtl
mov
mov
pop
stos
push
int
mov
data16
cmp
divb
lea
sahf
ja
jne
rorl
cmp
pop
add
out
or
pop
insl
adc
cmc
popa
pop
sub
call
fldl
test
sbb
push
pop
pop
lea
repz
sbb
sbb
aas
adc
popf
ret
and
in
outsb
rolb
and
movsl
ja
ljmp
pcmpeqw
dec
pushl
lcall
shlb
jmp
push
je
xor
xchg
sub
sub
pop
mov
push
mov
andps
notl
jb
stos
test
mov
add
or
dec
shrb
jno
pop
mov
pop
mov
mov
pop
push
nop
cmp
or
sbb
adc
xor
or
hlt
inc
cli
and
mov
aaa
fcoms
inc
dec
mov
or
movsb
fwait
daa
jmp
and
imul
adc
dec
orb
cmp
popf
dec
xchg
popa
dec
push
loopne
addr16
push
push
xchg
mov
shr
int3
mov
adc
rclb
mov
mov
nop
inc
push
xor
cmp
rolb
mov
xadd
pusha
jno
nop
scas
lahf
subb
bswap
lcall
push
jb
outsb
mov
cmp
popf
mov
pop
hlt
pop
or
sbb
cmpsl
mov
add
cmp
mov
mov
or
lock
mov
xor
lret
push
jae
bound
mov
xchg
iret
sti
insb
pop
sbb
sbb
add
mov
cmpb
sbb
xchg
pop
jge
xchg
subb
jbe
jge
pop
jecxz
xchg
mov
popf
scas
pusha
mov
xor
pop
repnz
repz
dec
xchg
xlat
test
js
xchg
in
lods
int3
rcrb
lea
addl
push
xchg
mov
imul
test
mov
push
lret
mov
lea
add
adc
std
mov
jb
mov
test
jl
pop
andl
sti
inc
pop
insb
pop
xchg
and
insb
outsl
insb
sahf
loop
ret
fwait
aad
imul
int3
movsl
inc
call
jge
ss
aam
lock
adc
popf
lcall
and
dec
cmp
mov
adc
push
es
xor
cmp
sub
repnz
push
cmp
gs
scas
adc
dec
filds
xchg
sub
add
aam
es
push
lea
inc
ss
lds
jns
adc
fbstp
jb
cmp
sub
adc
mov
add
fsubl
jg
lcall
fcomp
adc
in
scas
inc
sarl
inc
cmc
cmp
and
dec
lret
js
push
pop
rep
dec
mov
xchg
imul
outsb
mov
cs
xor
sbb
stc
cld
or
mov
ljmp
cmc
push
jns
dec
movsl
and
jae
or
in
push
sub
repz
jmp
mov
repz
adc
xorb
push
dec
test
xchg
int3
sti
enter
arpl
jae
dec
mov
push
inc
pop
jns
sbb
test
mov
das
arpl
aas
sub
cwtl
xchg
mov
lods
xor
jle
mov
int3
mov
hlt
pop
fwait
push
push
push
sub
push
andl
pop
aam
pop
stos
mov
fdivrl
sub
push
cmp
mov
pop
mov
mov
add
add
and
add
add
call
add
adc
add
add
sub
add
add
push
inc
pushf
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
pop
movsl
inc
add
xor
fiaddl
movsl
inc
add
aas
add
add
add
add
add
cli
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
add
add
add
add
add
add
add
add
bound
xor
add
jl
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
popa
add
jbe
add
add
add
add
imul
outsb
add
add
je
outsl
add
add
data16
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
jb
jbe
add
add
add
jb
imul
add
and
push
add
add
add
and
dec
add
outsb
add
je
outsl
add
add
add
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jb
imul
add
jbe
add
add
addb
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
popa
add
jbe
add
add
add
add
imul
outsb
add
add
je
outsl
add
add
cmp
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
xor
xor
xor
xor
push
add
add
add
pop
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
jb
jbe
add
add
add
jb
imul
add
and
push
add
add
add
and
dec
add
outsb
add
je
outsl
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
mov
add
add
nop
add
add
xor
xor
xor
xor
xor
dec
xor
pop
xor
xchg
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
aaa
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
loopne
adc
ds
xchg
iret
aas
aas
cld
aas
add
add
add
rolb
add
xor
xor
xor
xor
xor
xor
mov
xor
xor
xor
push
xor
xor
mov
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
ss
ss
divb
cld
add
or
push
aaa
adc
sbb
and
sub
xor
aaa
aaa
ds
inc
aaa
dec
aaa
push
aaa
pop
aaa
imul
jge
xchg
nop
aaa
fwait
aaa
cmpsl
aaa
lods
aaa
mov
aaa
int
jecxz
ljmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
jl
loope
in
cmp
jg
mov
cmp
add
xor
add
add
les
enter
adc
xor
test
mov
movsb
xor
