fcoml
mov
jb
lret
mov
jb
xchg
mov
jb
add
mov
jb
jo
jb
push
mov
jb
sbb
jb
jno
jb
mov
movsb
jb
add
jb
or
jb
push
jb
ret
mov
jb
add
jb
shll
int3
xchg
movsb
jb
dec
mov
jb
add
jb
loopne
jb
jbe
jb
xchg
mov
jb
xchg
mov
jb
bound
jb
jno
jb
fwait
mov
jb
push
mov
jb
push
mov
jb
mov
mov
jb
ret
mov
jb
sbb
jb
lcall
fstpt
jb
mov
mov
jb
add
jb
loope
jb
pop
mov
jb
mov
jb
push
mov
jb
xchg
mov
jb
cmp
xchg
jb
cmp
cmp
mov
jb
insb
mov
jb
insb
mov
jb
std
mov
jb
xor
mov
jb
mov
mov
jb
insl
mov
jb
ret
xor
mov
mov
jb
xchg
mov
jb
xchg
movsb
jb
frstor
jb
lahf
mov
jb
add
add
add
add
add
imul
xor
inc
add
add
add
adc
or
add
add
inc
add
xor
adc
xor
xchg
xor
scas
xor
fdivl
inc
add
xor
push
xor
ret
add
xor
sub
inc
add
add
push
add
add
add
add
inc
add
aaa
inc
add
adc
add
add
add
add
add
add
mov
inc
add
loopne
inc
add
add
add
insb
inc
add
add
add
push
inc
add
add
add
add
add
bound
add
add
inc
pop
inc
add
add
add
push
inc
and
adc
jbe
inc
add
add
add
inc
add
add
add
cmp
movsb
cmp
fdivrs
inc
add
cmp
insl
cmp
mov
cmp
fnstsw
inc
add
cmp
add
inc
add
cmp
pop
cmp
outsb
cmp
cli
cmp
and
inc
add
inc
add
cmp
sarl
inc
add
cmp
sub
add
inc
add
add
add
add
add
sub
add
add
add
inc
inc
add
add
add
adc
cmp
add
or
inc
add
cmp
inc
add
cmp
inc
add
ds
add
inc
add
inc
add
ds
add
aas
inc
add
inc
add
inc
add
inc
add
inc
add
aas
inc
add
aas
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
addb
add
add
loopne
inc
add
add
add
pop
inc
add
add
add
push
inc
add
add
add
popa
inc
add
add
add
add
add
add
add
add
add
add
add
outsb
inc
add
add
add
add
add
dec
inc
add
add
add
inc
add
add
add
inc
add
add
inc
add
inc
inc
add
dec
inc
add
dec
inc
add
add
add
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
loopne
inc
add
add
add
test
push
inc
add
add
add
adc
add
add
js
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
add
inc
add
inc
add
push
inc
add
inc
add
rcrb
add
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
add
add
add
add
pop
inc
add
add
add
adc
add
add
add
inc
push
add
add
add
lret
pop
inc
add
add
add
add
add
pop
inc
add
pop
inc
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
push
call
add
add
add
xor
add
cmp
add
add
add
cmp
or
or
loop
push
cwtl
sub
add
add
add
add
add
mov
add
dec
aaa
ss
xor
outsl
add
add
push
add
add
add
mov
inc
add
add
add
inc
add
add
add
and
pop
add
add
add
xor
inc
add
add
add
and
add
add
incl
add
add
add
jo
add
add
add
jno
add
mov
add
add
and
add
add
incl
add
add
inc
add
add
add
sarl
lock
add
add
enter
add
add
incl
add
add
inc
add
jo
add
sbb
sub
inc
add
add
add
jae
jns
jae
je
add
push
add
add
mov
or
inc
add
aam
mov
add
add
add
add
add
add
add
add
inc
add
add
xor
add
or
or
add
add
add
inc
inc
add
xor
add
decl
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
add
addb
add
add
add
push
popa
cmp
add
aaa
inc
aaa
jae
add
ss
xor
add
add
cmp
add
rolb
add
clc
add
add
add
add
add
add
add
dec
add
add
add
add
add
arpl
in
mov
xchg
rclb
mov
add
dec
jns
mov
mov
xchg
rclb
mov
add
dec
jns
mov
in
mov
xchg
rclb
mov
add
dec
jns
mov
fcompl
inc
xchg
ss
push
sbb
jne
sub
aaa
xor
das
mov
adc
add
add
add
inc
cmp
add
add
lods
test
test
sbb
out
cmc
jns
lods
test
cmc
popf
inc
mov
test
mov
popw
inc
xor
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
adc
add
adc
test
jmp
std
jmp
std
jmp
std
jmp
std
call
jae
imul
insb
add
push
imul
inc
je
cs
push
push
imul
push
imul
hlt
add
add
and
add
add
shlb
add
inc
add
add
jo
add
jo
add
inc
add
add
add
add
add
and
add
add
fdivs
inc
add
incl
add
add
add
jo
add
add
add
or
add
inc
push
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
dec
push
inc
add
add
add
push
inc
add
add
add
add
cmp
inc
add
inc
add
pop
add
add
mov
inc
add
incl
add
add
add
add
push
inc
add
push
push
cwtl
sub
incl
adc
cmp
add
jl
inc
add
add
add
adc
push
mov
inc
add
add
add
adc
cmp
add
insb
sub
add
add
in
inc
add
sub
add
add
inc
add
add
add
mov
inc
add
add
add
inc
add
sub
add
add
shlb
add
add
add
inc
add
sbb
inc
add
pop
inc
add
pop
inc
add
inc
add
sbb
inc
add
pop
inc
add
pop
inc
add
sbb
inc
add
pop
inc
add
pop
inc
add
add
add
push
inc
add
sbb
inc
add
pop
inc
add
pop
inc
add
add
add
cld
xor
insb
jo
add
xor
incl
add
add
add
mov
mov
mov
stos
in
jno
sahf
pop
or
add
add
add
sbb
inc
add
inc
add
add
add
add
add
add
add
add
add
sbb
inc
and
add
add
adc
add
add
add
and
or
add
add
add
incl
add
addb
add
add
sbbb
add
ljmp
add
add
add
jo
add
add
add
and
add
add
add
add
incl
add
addb
add
add
enter
jmp
add
add
and
add
add
fsubl
inc
add
incl
add
add
add
ljmp
add
add
add
add
add
add
and
add
add
add
add
incl
add
addb
inc
imul
add
push
ja
inc
dec
add
add
insl
dec
je
push
gs
add
insl
outsl
fs
je
inc
popa
jns
add
dec
aaa
ss
xor
add
add
add
gs
insb
xor
add
add
add
gs
insb
inc
js
arpl
gs
add
add
and
and
inc
add
add
or
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
jb
gs
xor
add
add
push
add
add
gs
add
insb
and
jl
inc
add
add
sbb
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
fs
insb
add
add
add
push
je
inc
arpl
jo
gs
inc
jne
data16
mov
and
add
add
and
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
outsb
inc
js
arpl
add
add
xor
add
add
push
add
add
add
add
add
add
add
add
inc
add
add
xor
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
inc
gs
outsl
insb
fs
popa
je
push
add
add
sbb
inc
add
inc
add
add
cmp
inc
add
or
je
jmp
push
mov
call
jmp
add
add
sbb
add
add
add
add
add
add
add
add
or
add
or
add
push
add
add
push
add
add
push
add
add
add
add
and
push
add
xor
and
push
add
xor
add
add
hlt
and
add
inc
add
add
add
add
add
add
add
jae
incl
add
add
dec
sbb
mov
cmp
sbb
add
add
xchg
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
inc
add
add
add
add
xor
add
push
add
add
jbe
inc
add
add
add
add
add
add
add
add
add
add
arpl
add
add
add
pop
add
add
add
jo
insl
add
inc
add
popa
add
add
add
add
add
add
outsl
add
add
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
add
push
add
add
insb
add
add
add
add
je
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
lods
xor
or
stos
add
xchg
hlt
and
dec
je
add
inc
ss
dec
dec
add
add
pop
pop
jbe
popa
push
popa
jb
outsl
jb
gs
add
jbe
popa
push
popa
jb
outsl
jb
outsb
imul
push
je
inc
outsl
jo
add
add
push
inc
add
pop
pop
jbe
popa
push
dec
xor
add
pop
pop
jbe
popa
dec
outsb
inc
jae
jb
add
add
jbe
popa
inc
jb
inc
outsl
outsb
jae
jb
arpl
add
jbe
popa
dec
xor
add
add
jbe
popa
inc
jb
push
outsb
insb
outsl
arpl
add
jbe
popa
inc
jb
dec
outsl
arpl
add
add
jbe
popa
push
gs
bound
bound
outsb
add
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
inc
js
je
jb
arpl
add
pop
pop
jbe
popa
inc
jb
gs
bound
add
add
jbe
popa
dec
bound
gs
pop
pop
jbe
popa
push
je
push
outsl
push
outsb
imul
add
jbe
popa
push
je
push
outsl
inc
outsb
jae
add
pop
pop
jbe
popa
inc
imul
add
pop
pop
jbe
popa
push
jne
dec
ja
gs
add
add
add
pop
pop
jbe
popa
inc
imul
add
pop
pop
jbe
popa
push
gs
jb
add
ret
xchg
inc
or
adc
inc
mov
aad
imul
bound
jb
jae
insb
je
push
bound
add
add
jbe
popa
push
je
inc
popa
je
pop
pop
jbe
popa
dec
gs
add
add
jbe
popa
push
popa
jb
push
arpl
add
add
jbe
popa
inc
jb
dec
outsl
jbe
add
add
pop
pop
jbe
popa
inc
jb
outsl
jb
jbe
jb
insb
outsl
ja
add
lods
test
test
sbb
out
cmc
dec
push
push
imul
add
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
dec
outsb
push
je
add
pop
pop
jbe
popa
inc
jb
gs
je
dec
imul
pop
pop
jbe
popa
push
je
dec
xor
add
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
push
gs
jns
je
insl
inc
jb
outsl
jb
pop
pop
jbe
popa
push
je
push
popa
jb
outsl
jbe
add
jbe
popa
push
je
dec
outsl
jbe
add
add
pop
pop
jbe
popa
dec
outsb
inc
jb
outsl
jb
add
add
jbe
popa
inc
outsb
add
add
jl
inc
dec
imul
mov
xchg
fldl
jl
incl
mov
push
cld
jae
mov
or
inc
add
aam
mov
adc
inc
inc
mov
xor
aad
dec
lods
xor
or
stos
add
xchg
inc
outsl
jb
add
add
cs
push
add
xor
inc
cmp
outsl
addr16
insl
and
insb
gs
dec
imul
je
push
imul
je
imul
pop
push
inc
ss
dec
inc
add
add
add
add
add
add
add
add
and
inc
add
cmp
outsb
outsl
ja
pop
push
jns
je
insl
xor
pop
insl
jae
imul
popa
add
add
dec
push
push
imul
inc
je
add
or
inc
add
add
add
add
add
add
add
sub
xor
inc
add
inc
add
dec
lods
xor
or
stos
add
xchg
inc
outsl
insl
insl
popa
outsb
xor
add
add
dec
lods
xor
or
stos
add
xchg
je
je
add
add
or
dec
add
dec
lods
xor
or
stos
add
xchg
add
add
add
addb
add
add
add
outsb
add
jae
add
jbe
imul
and
inc
add
jns
and
inc
add
outsb
add
add
and
sub
jae
add
outsl
add
add
add
outsl
add
add
jns
and
imul
dec
add
je
outsl
add
add
sub
and
and
cmp
add
add
add
add
mov
outsb
add
add
add
outsb
add
jae
add
jbe
imul
and
inc
add
jns
and
push
add
inc
add
add
add
outsl
add
jb
je
push
add
jne
jb
jae
add
jns
and
imul
dec
add
jbe
add
bound
add
sub
and
and
cmp
add
add
add
dec
add
jns
and
inc
add
jns
and
push
add
add
jne
jae
and
sub
data16
jb
jae
je
and
dec
add
outsb
add
add
and
imul
dec
add
jns
sub
and
and
cmp
add
add
add
dec
add
je
push
add
add
and
inc
add
jns
and
push
add
add
and
sub
jae
add
outsl
add
add
add
jne
outsb
add
add
and
imul
dec
add
jns
sub
and
and
cmp
add
add
add
inc
add
push
add
add
add
imul
and
push
add
add
and
sub
jae
add
outsl
add
add
add
jne
outsb
add
add
and
imul
dec
add
jb
arpl
push
add
add
add
add
add
inc
add
push
add
add
outsb
add
add
add
push
add
add
and
sub
data16
jb
jae
je
and
push
add
outsb
add
add
and
imul
dec
add
jbe
add
bound
add
sub
and
and
cmp
add
add
add
inc
add
push
add
add
add
imul
and
push
add
and
sub
insb
add
jae
je
and
push
add
outsb
add
add
and
imul
dec
add
jb
arpl
push
add
add
add
add
add
inc
add
push
add
add
outsb
add
add
add
dec
add
add
add
add
je
and
push
add
outsb
add
add
and
imul
dec
add
je
outsl
add
add
sub
and
and
cmp
add
add
jbe
popa
push
jb
outsb
je
bound
add
dec
add
add
add
xor
xor
sub
xor
cmp
sub
xor
xor
sub
xor
xor
sub
xor
xor
sub
xor
xor
sub
xor
xor
sub
xor
xor
sub
xor
xor
sub
xor
xor
sub
xor
xor
sub
xor
xor
add
add
add
sub
add
dec
add
add
add
xor
xor
sub
xor
cmp
sub
xor
xor
sub
xor
xor
sub
xor
xor
sub
xor
xor
sub
xor
xor
sub
xor
xor
sub
xor
xor
sub
xor
xor
sub
xor
xor
sub
xor
xor
add
pop
pop
jbe
popa
inc
jb
push
popa
jb
je
add
inc
add
push
add
outsb
add
add
sub
dec
add
outsb
add
add
sub
push
add
add
add
jns
sub
push
add
add
add
add
jns
sub
push
add
jne
jb
jae
add
jns
sub
inc
add
imul
jns
sub
push
add
je
jne
jb
add
jns
add
add
scas
add
add
sub
dec
add
outsb
add
popa
add
jns
sub
inc
add
bound
jb
jne
popa
add
jns
sub
dec
add
jb
arpl
push
add
jb
imul
dec
add
jns
sub
dec
add
outsb
add
sub
dec
add
insb
add
sub
inc
add
add
jae
je
sub
push
add
jo
je
add
bound
add
sub
dec
add
je
outsl
add
add
sub
dec
add
jbe
add
bound
add
sub
inc
add
arpl
add
bound
add
add
pop
pop
jbe
popa
push
je
dec
xor
add
jbe
popa
dec
xor
je
add
pop
pop
jbe
popa
push
popa
jb
jne
add
jbe
popa
inc
jb
inc
outsl
jo
add
add
pop
pop
jbe
popa
inc
jo
cmp
add
pop
pop
jbe
popa
inc
push
inc
imul
bound
cmp
js
xor
add
add
int3
xor
add
mov
or
inc
add
aam
mov
bound
imul
mov
xchg
fldl
cltd
iretw
adc
pusha
rcll
add
add
add
add
add
insl
dec
je
push
gs
add
je
and
and
je
sbb
add
and
jmp
insl
xor
xor
ret
add
or
add
add
add
add
insb
inc
add
add
add
add
add
je
je
add
add
pop
js
push
add
xor
xor
add
add
add
add
nop
add
add
popa
outsb
jae
push
gs
incw
aas
add
add
or
inc
outsl
insl
insl
popa
outsb
xor
add
add
push
push
push
add
add
add
sbb
nop
add
add
popa
outsb
jae
push
gs
incw
pusha
add
add
or
dec
push
push
imul
pop
add
push
imul
inc
je
cs
push
push
imul
add
aaa
add
dec
inc
or
push
add
add
add
add
sbb
add
or
add
or
add
or
add
adc
add
add
incl
add
add
add
fdivs
inc
add
incl
add
add
sbb
incl
add
add
xor
add
add
les
inc
add
xor
les
inc
add
add
add
add
add
enter
incl
add
add
xor
incl
add
add
sub
mov
inc
add
add
add
add
inc
add
sub
insb
sub
pop
je
add
sub
mov
inc
add
inc
add
dec
add
add
adc
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
movl
movl
movl
movl
movl
push
call
movl
movl
movl
push
lea
push
lea
push
call
lea
push
lea
push
push
call
add
movl
andl
movl
lea
push
push
lea
push
call
lea
push
call
mov
lea
call
lea
push
lea
push
push
call
add
movl
fldl
push
push
fstpl
call
fstpl
movl
pushl
call
push
push
push
mov
pushl
push
call
mov
call
mov
mov
movl
movl
movl
lea
push
lea
push
call
lea
push
lea
push
push
call
add
movl
push
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
call
lea
push
lea
push
push
call
add
movl
lea
mov
movl
push
pushl
push
call
mov
lea
call
push
push
call
sub
jo
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
call
lea
call
movl
movl
movl
push
lea
push
lea
push
call
lea
push
lea
push
push
call
add
movl
movl
movl
lea
push
lea
push
call
lea
push
lea
push
push
call
add
fwait
push
jmp
mov
and
test
je
lea
call
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
ret
lea
call
ret
mov
mov
mov
pop
pop
pop
leave
ret
call
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
push
call
fldl
push
push
fstpl
call
fstp
cmp
jne
push
push
call
mov
mov
push
push
call
mov
movl
mov
mov
mov
movl
mov
lea
push
sub
lea
mov
movsl
movsl
movsl
movsl
sub
lea
mov
movsl
movsl
movsl
movsl
pushl
call
fnclex
test
jge
push
push
pushl
push
call
lea
push
lea
push
call
lea
push
lea
push
call
lea
push
lea
push
push
pop
push
call
fldl
add
fstpl
call
fstp
push
mov
mov
sub
jo
push
push
push
lea
push
push
push
call
fldl
add
fstpl
call
fstp
pushl
lea
push
call
call
movl
lea
push
lea
push
lea
push
call
movl
mov
push
push
lea
push
lea
push
call
lea
push
lea
push
push
call
fldl
add
fstpl
call
fstp
mov
pushl
push
push
push
call
push
call
mov
lea
call
push
call
lea
call
push
lea
push
push
call
fldl
push
push
fstpl
call
fstp
push
call
mov
lea
call
push
call
lea
call
push
call
movl
mov
push
lea
push
lea
push
call
lea
push
lea
push
push
call
fldl
add
fstpl
call
fstp
push
call
call
fldl
push
push
fstpl
call
fstp
movl
mov
lea
push
lea
push
call
lea
push
lea
push
push
call
add
push
pushl
lea
push
call
push
call
call
pushl
push
call
lea
call
movl
mov
lea
push
lea
push
call
lea
push
lea
push
push
call
add
movl
lea
push
call
jmp
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
lea
call
call
fwait
push
jmp
lea
call
lea
call
lea
push
lea
push
push
call
add
lea
push
push
call
ret
lea
push
push
call
lea
push
push
call
ret
mov
mov
pop
pop
pop
leave
ret
call
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
movl
movl
movl
movl
movl
push
call
movl
movl
movl
lea
push
lea
push
call
lea
push
lea
push
push
call
add
movl
mov
pushl
push
call
mov
fildl
fstpl
fldl
fmull
fnstsw
test
jne
call
mov
movl
movl
movl
push
push
lea
push
push
call
mov
lea
call
push
lea
push
call
lea
call
lea
push
lea
push
push
call
add
movl
movl
movl
lea
push
lea
push
call
lea
push
lea
push
push
call
add
movl
mov
pushl
push
call
mov
movl
push
call
mov
lea
call
push
call
lea
call
movl
movw
lea
push
call
movl
mov
mov
movl
movl
movl
push
lea
push
lea
push
call
lea
push
lea
push
push
call
add
movl
push
pushl
push
push
pushl
push
push
call
add
movl
movw
lea
push
call
movl
mov
pushl
lea
push
call
mov
xor
sub
mov
mov
add
push
call
mov
lea
push
call
mov
pushl
lea
push
call
mov
xor
sub
mov
mov
add
push
call
mov
lea
push
call
lea
push
pushl
pushl
pushl
pushl
mov
mov
call
push
call
call
movl
push
call
mov
lea
call
push
call
lea
call
movl
movl
movl
push
lea
push
lea
push
call
lea
push
lea
push
push
call
add
movl
push
mov
sub
jo
push
push
push
pushl
push
push
call
add
movl
movl
movl
lea
push
lea
push
call
lea
push
lea
push
push
call
add
movl
fldl
push
push
fstpl
call
fstpl
movl
orw
movl
push
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
call
lea
push
lea
push
push
call
add
movl
push
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
call
lea
push
lea
push
push
call
add
fwait
push
jmp
lea
push
call
lea
push
call
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
ret
ret
mov
mov
mov
pop
pop
pop
leave
ret
jmp
call
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
movl
movl
movl
movl
mov
lea
call
push
push
lea
push
call
movl
push
call
movl
movw
lea
push
call
movl
push
call
mov
lea
call
push
call
lea
call
movl
lea
mov
movl
push
push
lea
push
lea
push
call
lea
push
lea
push
call
lea
push
lea
push
call
lea
call
movl
fldl
push
push
fstpl
call
fstpl
movl
movl
movl
andl
jmp
mov
add
jo
mov
mov
cmp
jg
movl
fldl
push
push
fstpl
call
fstpl
movl
fldl
push
push
fstpl
call
fstpl
movl
mov
call
mov
mov
mov
movl
movl
movl
push
push
lea
push
lea
push
call
lea
push
lea
push
push
call
add
movl
push
push
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
call
mov
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
movl
jmp
movl
andl
movl
andl
movl
andl
movl
push
call
mov
lea
call
push
call
lea
call
movl
fldl
push
push
fstpl
call
fstpl
movl
movl
movl
andl
jmp
mov
add
jo
mov
mov
cmp
jg
movl
fldl
push
push
fstpl
call
fstpl
movl
push
push
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
call
mov
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
movl
mov
mov
movswl
mov
add
jo
pushl
call
mov
mov
cltd
idiv
mov
sub
mov
mov
movzbl
add
jo
mov
cltd
mov
idiv
mov
movl
movl
movl
movl
movl
movl
movl
push
lea
push
lea
push
lea
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
movl
push
call
mov
lea
call
push
call
lea
call
movl
mov
mov
mov
call
mov
movl
fldl
push
push
fstpl
call
fstpl
movl
mov
mov
mov
mov
mov
mov
movl
movl
movl
push
lea
push
lea
push
call
lea
push
lea
push
push
call
add
movl
movzbw
mov
mov
mov
movl
movl
movl
push
lea
push
lea
push
call
lea
push
lea
push
push
call
add
movl
jmp
movl
andl
movl
andl
movl
andl
movl
fldl
push
push
fstpl
call
fstpl
movl
mov
mov
movl
push
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
call
movl
movl
movl
push
lea
push
lea
push
call
lea
push
lea
push
push
call
add
movl
push
call
mov
lea
call
push
call
lea
call
movl
pushl
call
mov
movl
andl
jmp
mov
add
jo
mov
mov
cmp
jg
movl
movl
movl
push
lea
push
lea
push
call
lea
push
lea
push
push
call
add
movl
push
call
mov
lea
call
push
call
lea
call
movl
mov
add
jo
cltd
mov
idiv
mov
movl
fldl
push
push
fstpl
call
fstpl
movl
mov
mov
movswl
mov
add
jo
mov
cltd
mov
idiv
mov
movl
movl
movl
push
lea
push
lea
push
call
lea
push
lea
push
push
call
add
movl
movl
movl
push
push
lea
push
lea
push
call
lea
push
lea
push
push
call
add
movl
mov
mov
mov
call
mov
movl
push
call
mov
lea
call
push
call
lea
call
movl
mov
mov
mov
mov
mov
mov
movl
push
push
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
call
mov
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
movl
fldl
push
push
fstpl
call
fstpl
movl
movzbw
mov
mov
mov
movl
push
call
mov
lea
call
push
call
lea
call
movl
mov
mov
mov
mov
mov
sub
mov
movzbw
mov
mov
mov
mov
mov
add
jo
cwtd
mov
idiv
movswl
mov
xor
call
mov
mov
mov
mov
mov
sub
mov
mov
movl
fldl
push
push
fstpl
call
fstpl
movl
jmp
fwait
push
jmp
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
push
call
ret
lea
mov
lea
push
push
call
lea
push
push
call
lea
call
lea
call
ret
mov
mov
pop
pop
pop
leave
ret
call
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
movl
movl
movl
movl
movl
push
call
movl
movl
movl
movl
movl
andl
movl
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
jmp
movl
push
call
mov
lea
call
push
call
lea
call
movl
lea
push
lea
push
lea
push
call
mov
cmpl
jne
movl
push
call
mov
lea
call
push
call
lea
call
movl
call
test
je
movl
call
movl
movl
movl
lea
push
lea
push
call
lea
push
lea
push
push
call
add
movl
fldl
push
push
fstpl
call
fstpl
movl
call
test
je
movl
call
movl
movl
movl
push
lea
push
lea
push
call
lea
push
lea
push
push
call
add
movl
push
push
call
mov
lea
call
push
push
call
mov
mov
call
lea
call
movl
movl
movl
lea
push
lea
push
call
lea
push
lea
push
push
call
add
movl
movl
lea
push
call
mov
lea
call
push
push
call
mov
lea
call
lea
call
movl
movl
movl
push
push
lea
push
push
call
mov
lea
call
push
lea
push
call
lea
call
lea
push
lea
push
push
call
add
movl
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
mov
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
movl
movl
movl
pushl
push
call
mov
lea
call
push
pushl
call
mov
lea
call
lea
push
lea
push
lea
push
call
lea
push
lea
push
push
call
add
movl
movl
movl
pushl
push
call
mov
lea
call
push
pushl
call
mov
lea
call
lea
push
lea
push
lea
push
call
lea
push
lea
push
push
call
add
movl
movl
movl
pushl
push
call
mov
lea
call
push
pushl
call
mov
lea
call
lea
push
lea
push
lea
push
call
lea
push
lea
push
push
call
add
movl
call
movl
push
call
mov
lea
call
push
call
lea
call
fwait
push
jmp
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
ret
lea
push
lea
push
push
call
add
lea
call
lea
call
ret
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
movl
movl
movl
movl
movl
push
call
movl
push
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
call
lea
push
lea
push
push
call
add
movl
movl
movl
lea
push
lea
push
call
lea
push
lea
push
push
call
add
movl
push
call
call
movl
push
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
call
lea
push
lea
push
push
call
add
movl
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
movl
fldl
push
push
fstpl
call
fstpl
movl
movl
movl
push
push
lea
push
lea
push
call
lea
push
lea
push
push
call
add
movl
push
call
mov
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
lea
push
mov
mov
pushl
call
fnclex
mov
cmpl
jge
push
push
pushl
pushl
call
mov
jmp
andl
mov
mov
lea
push
mov
mov
pushl
call
fnclex
mov
cmpl
jge
push
push
pushl
pushl
call
mov
jmp
andl
pushl
pushl
call
mov
lea
call
push
pushl
call
mov
lea
call
push
call
mov
push
push
pushl
pushl
push
push
call
call
lea
push
lea
push
lea
push
push
call
add
lea
call
movl
push
call
mov
lea
call
push
call
lea
call
fwait
push
jmp
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
call
lea
push
lea
push
push
call
add
ret
lea
call
ret
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
mov
push
mov
pop
and
mov
and
push
mov
mov
call
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
push
lea
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
pushl
push
call
pushl
call
call
lea
mov
call
lea
call
mov
push
call
cmp
fnclex
jge
push
push
push
push
call
flds
mov
push
fstps
push
call
cmp
fnclex
jge
push
push
push
push
call
push
push
call
pop
pop
push
pop
push
mov
pop
mov
mov
lea
push
lea
push
lea
push
lea
push
call
mov
lea
push
lea
push
lea
push
mov
call
mov
lea
call
mov
andl
push
lea
call
push
call
mov
lea
call
push
mov
push
push
call
lea
push
lea
push
lea
push
push
pop
push
call
add
lea
movl
movl
push
lea
push
lea
push
lea
push
movl
call
mov
lea
push
lea
push
lea
push
movl
call
mov
lea
call
mov
andl
push
lea
call
push
call
mov
lea
call
push
pushl
push
call
lea
push
lea
push
lea
push
push
call
add
lea
movl
movl
push
lea
push
lea
push
lea
push
mov
call
mov
lea
push
lea
push
lea
push
movl
call
mov
lea
call
mov
andl
push
lea
call
push
call
mov
lea
call
push
pushl
push
call
lea
push
lea
push
lea
push
push
call
add
lea
movl
mov
push
lea
push
lea
movl
push
lea
push
call
mov
lea
push
lea
push
lea
push
movl
call
mov
lea
call
mov
andl
push
lea
call
push
call
mov
lea
call
push
pushl
push
call
lea
push
lea
push
lea
push
push
call
add
lea
mov
mov
push
lea
push
lea
push
lea
push
movl
call
mov
lea
push
lea
push
lea
push
mov
call
mov
lea
call
mov
andl
push
lea
call
push
call
mov
lea
call
push
pushl
push
call
lea
push
lea
push
lea
push
push
call
add
lea
movl
mov
push
lea
push
lea
push
lea
push
mov
call
mov
lea
push
lea
push
lea
push
movl
call
mov
lea
call
mov
andl
push
lea
call
push
call
mov
lea
call
push
pushl
push
call
lea
push
lea
push
lea
push
push
call
add
lea
orl
mov
push
lea
push
lea
push
lea
push
mov
call
mov
lea
push
lea
push
lea
push
mov
call
mov
lea
call
mov
andl
push
lea
call
push
call
mov
lea
call
push
pushl
push
call
lea
push
lea
push
lea
push
push
call
add
lea
orl
movl
push
lea
push
lea
push
lea
push
mov
call
mov
lea
push
lea
push
lea
push
movl
call
mov
lea
call
mov
andl
push
lea
call
push
call
mov
lea
call
push
pushl
push
call
lea
push
lea
push
lea
push
push
call
add
movl
fwait
push
jmp
lea
push
lea
push
lea
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
sub
push
mov
push
push
pop
sub
jo
mov
fildl
fstpl
fldl
cmpl
jne
fdivl
jmp
pushl
pushl
call
fnstsw
test
jne
call
mov
mov
sub
jo
imul
mov
fildl
jo
add
fstpl
fldl
cmpl
jne
fdivl
jmp
pushl
pushl
call
jo
sub
jo
mov
fnstsw
test
jne
call
mov
mov
add
jo
mov
fildl
fstpl
faddl
fnstsw
test
jne
fstpl
fildl
fstpl
fldl
cmpl
jne
fdivl
jmp
pushl
pushl
call
fnstsw
test
jne
call
fsubrl
fnstsw
test
jne
fstpl
fildl
fstpl
fldl
cmpl
jne
fdivl
jmp
pushl
pushl
call
fnstsw
test
jne
call
faddl
fnstsw
test
jne
imul
fstpl
jo
mov
fildl
fstpl
fldl
cmpl
jne
fdivl
jmp
pushl
pushl
call
fnstsw
test
jne
call
faddl
fnstsw
test
jne
call
push
cltd
pop
pop
idiv
pop
add
jo
mov
leave
ret
jmp
call
push
mov
sub
push
mov
push
xor
fildl
fstpl
fldl
cmpl
jne
fdivl
jmp
pushl
pushl
call
fnstsw
test
jne
call
fstpl
fildl
fstpl
fldl
cmpl
jne
fdivl
jmp
pushl
pushl
call
fnstsw
test
jne
call
call
fcompl
fnstsw
sahf
jne
fildl
fstpl
fldl
cmpl
jne
fdivl
jmp
pushl
pushl
call
fnstsw
test
jne
call
fstpl
fildl
fstpl
fldl
cmpl
jne
fdivl
jmp
pushl
pushl
call
fnstsw
test
jne
call
call
fcompl
fnstsw
sahf
jne
fildl
fstpl
fldl
cmpl
jne
fdivl
jmp
pushl
pushl
call
fnstsw
test
jne
call
fstpl
fildl
fstpl
fldl
cmpl
jne
fdivl
jmp
pushl
pushl
call
fnstsw
test
jne
call
call
fcompl
fnstsw
sahf
jne
or
mov
pop
pop
leave
ret
jmp
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
movl
xor
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
movl
call
push
lea
push
push
lea
push
push
call
lea
mov
push
push
call
mov
lea
push
lea
push
call
lea
push
lea
push
push
call
add
lea
lea
mov
movl
call
push
lea
push
push
lea
push
push
call
lea
push
push
call
mov
lea
push
lea
push
call
lea
push
lea
push
push
call
mov
add
mov
cmp
jle
push
pop
sub
pushl
jo
imul
pushl
jo
add
jo
mov
lea
push
call
mov
mov
push
mov
add
jo
sub
pop
jo
cltd
idiv
mov
sub
jo
imul
jo
add
jo
add
jo
mov
jmp
pushl
call
mov
test
mov
mov
jne
mov
sub
mov
pushl
call
pushl
mov
lea
push
push
call
mov
push
sub
pop
jo
add
jo
cltd
idiv
mov
sub
jo
mov
push
jmp
lea
push
lea
push
push
call
add
ret
lea
xor
push
push
call
lea
push
push
call
ret
mov
mov
pop
pop
mov
pop
leave
ret
call
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
xor
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
call
push
lea
push
push
lea
push
push
call
lea
mov
push
push
call
mov
lea
push
lea
push
call
lea
push
lea
push
push
call
add
lea
lea
mov
movl
call
push
lea
push
push
lea
push
push
call
lea
push
push
call
mov
lea
push
lea
push
call
lea
push
lea
push
push
call
add
mov
mov
push
push
pushl
call
mov
mov
mov
sub
mov
pushl
push
call
mov
lea
call
push
mov
pushl
call
mov
lea
call
push
call
mov
lea
call
push
push
call
mov
lea
call
mov
push
mov
sub
mov
pushl
call
mov
lea
call
push
push
call
mov
lea
call
push
pushl
call
mov
lea
call
push
call
mov
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
push
jmp
testb
je
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
push
call
add
ret
lea
xor
push
push
call
lea
push
push
call
ret
mov
mov
pop
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
sahf
sahf
sahf
sahf
mov
add
pushl
add
add
add
inc
popa
add
inc
add
adcb
add
add
pusha
popa
add
push
add
js
add
dec
add
orb
xorb
add
xchg
popa
add
dec
add
andb
add
mov
popa
add
aam
add
call
add
cmp
add
push
add
addb
add
adc
add
sub
add
add
push
bound
add
add
je
add
test
add
bound
add
add
push
add
orb
add
out
add
repnz
add
add
cmp
add
or
add
add
adc
add
inc
arpl
add
add
push
arpl
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
add
add
movl
add
enter
sub
add
cmp
pop
add
or
add
dec
add
int
add
sbb
add
outsb
add
js
add
mov
sahf
add
lods
add
mov
add
fisubl
in
add
cld
add
or
add
add
xor
add
add
cmpb
add
dec
add
pop
add
data16
subb
add
add
test
add
add
scas
add
mov
add
fsubl
add
add
mulb
add
add
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
add
pop
pop
jbe
popa
push
cmp
js
xor
add
add
jbe
popa
push
je
dec
xor
add
add
dec
arpl
add
add
pop
popa
fs
data16
popa
outsb
add
add
pop
pop
jbe
popa
push
je
dec
xor
add
add
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
inc
jb
dec
outsl
jbe
add
add
pop
pop
jbe
popa
push
je
push
popa
jb
outsl
jbe
add
add
jbe
popa
dec
outsb
inc
jae
jb
add
add
jbe
popa
inc
outsb
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
imul
pop
popa
fs
imul
xor
add
pop
popa
fs
data16
gs
xor
add
pop
pop
jbe
popa
push
je
inc
popa
je
add
pop
pop
jbe
popa
push
gs
jns
je
insl
inc
jb
outsl
jb
add
pop
pop
jbe
popa
dec
jb
jae
insb
je
push
bound
add
add
fs
imul
xor
add
pop
pop
jbe
popa
inc
jb
push
popa
jb
add
pop
pop
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
inc
js
je
jb
arpl
add
pop
pop
jbe
popa
push
popa
jb
outsl
jb
outsb
imul
bound
outsb
inc
jb
outsl
jb
add
add
jbe
popa
dec
bound
gs
add
pop
popa
fs
imul
imul
popa
fs
imul
xor
imul
jbe
popa
inc
push
inc
imul
pop
jbe
popa
inc
jo
cmp
add
pop
inc
dec
jae
outsb
add
add
pop
pop
jbe
popa
inc
push
add
add
jbe
popa
inc
imul
add
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
add
jbe
popa
push
jne
dec
ja
gs
add
add
pop
pop
jbe
popa
inc
jb
inc
outsl
outsb
jae
jb
arpl
add
add
jbe
popa
push
jb
outsb
je
bound
add
pop
pop
jbe
popa
dec
xor
add
add
inc
jne
arpl
outsb
inc
popa
insb
insb
add
add
jbe
popa
push
gs
jb
add
add
pop
popa
fs
data16
je
outsb
add
add
jbe
popa
push
gs
push
inc
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
add
pop
pop
jbe
popa
push
dec
xor
add
add
pop
inc
dec
jae
jb
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outsb
je
jb
popa
arpl
add
pop
pop
jbe
popa
inc
js
gs
dec
popa
outsb
fs
gs
add
add
jbe
popa
push
je
push
outsl
push
outsb
imul
add
fs
data16
gs
add
add
pop
popa
fs
imul
ss
add
add
jbe
popa
inc
push
inc
js
gs
imul
pop
pop
jbe
popa
push
bound
outsb
add
add
dec
insb
outsl
add
add
pop
pop
jbe
popa
inc
jb
outsl
jb
jbe
jb
insb
outsl
ja
add
add
jbe
popa
inc
imul
add
pop
pop
jbe
popa
dec
outsb
push
je
add
add
pop
pop
jbe
popa
push
popa
jb
push
arpl
add
add
jbe
popa
dec
gs
add
add
fs
imul
xor
add
add
fs
imul
xor
imul
jbe
popa
push
je
inc
outsl
jo
add
add
pop
pop
jbe
popa
dec
xor
je
add
add
pop
pop
jbe
popa
inc
jb
gs
je
dec
imul
pop
popa
fs
imul
xor
add
add
pop
popa
fs
imul
add
pop
pop
jbe
popa
inc
jb
dec
outsl
arpl
add
add
jbe
popa
push
popa
jb
jne
add
add
jbe
popa
push
je
push
outsl
inc
outsb
jae
add
add
pop
pop
jbe
popa
inc
jo
xor
add
pop
inc
dec
popa
je
outsb
add
add
jbe
popa
inc
jb
inc
outsl
jo
add
add
pop
pop
jbe
popa
push
je
dec
outsl
jbe
add
add
pop
popa
insb
insb
insl
jne
add
add
dec
je
outsb
add
add
pop
pop
jbe
popa
inc
jb
push
outsb
insb
outsl
arpl
add
add
jbe
popa
push
popa
jb
outsl
jb
gs
add
add
dec
gs
add
add
pop
pop
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
inc
jb
gs
bound
add
mov
mov
movzbl
ret
xor
ret
rdtsc
mov
rdtsc
sub
push
cmp
je
pop
cmp
jb
mov
jmp
mov
ret
xor
ret
nop
mov
mov
int3
jmp
add
add
adc
add
add
add
add
add
orb
add
pusha
add
orb
add
dec
add
adcb
add
xor
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
adc
add
add
add
add
jne
add
add
xorb
add
clc
add
xorb
add
loopne
add
adc
add
add
add
add
add
pop
add
andb
add
add
sub
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
fadds
add
mov
add
add
add
fcoms
add
mov
add
add
add
or
add
add
add
xchg
add
call
add
add
add
add
cwtl
add
xor
add
mov
add
add
add
dec
cltd
add
xchg
add
add
add
add
je
add
mov
add
add
add
loop
add
dec
faddl
add
add
add
add
push
add
push
add
dec
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
adc
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
js
push
add
add
aaa
add
add
add
sub
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
popa
add
add
add
add
sbb
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
push
add
cmp
jne
add
add
js
add
add
add
add
add
and
add
add
add
add
add
jne
and
add
add
call
jne
adc
add
add
sub
add
xor
add
add
add
add
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
or
ja
add
or
push
ja
add
push
jo
add
push
add
add
push
add
add
incl
jo
add
add
out
loopne
add
add
loopne
incl
add
incl
add
popl
add
add
add
add
add
pop
add
rorb
add
sldt
rorb
add
sldt
rorb
add
jg
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
ja
add
add
add
or
incl
ja
jo
add
add
incl
ja
add
add
add
incl
jo
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
decl
add
add
add
decl
add
add
add
add
decl
out
mov
out
out
out
out
add
add
inc
cld
add
addb
clc
add
pop
clc
add
pop
clc
add
jg
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
aas
sti
ljmp
add
add
add
add
add
add
add
add
add
add
add
incl
inc
cld
cmp
inc
cld
pop
clc
aas
cld
pop
sti
cld
pop
sti
cld
jg
std
sti
std
sti
std
sti
std
sti
std
sti
std
sti
std
sti
std
sti
inc
sti
cld
cmp
clc
cmp
sti
ret
clc
aas
sti
inc
cld
add
rolb
clc
add
pop
clc
add
pop
clc
add
jg
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
aas
sti
incl
fcomip
jmp
mov
sahf
mov
jle
insb
addr16
cli
mov
cmp
lahf
pushf
jno
ss
ror
cmpl
in
push
mov
neg
movsb
push
add
into
xor
pop
fdivrl
aas
sbb
sbb
mov
fimuls
pop
les
pop
jp
outsl
xchg
inc
out
scas
adc
xchg
arpl
out
dec
xor
mov
hlt
xchg
mov
scas
je
fld
sub
in
jo
pop
dec
mov
sbb
in
pop
xchg
jmp
das
add
jmp
lds
popf
fbld
mov
push
adc
push
jg
push
test
js
jb
cmp
jbe
jp
cmp
ja
outsl
dec
dec
xchg
dec
js
lret
jns
ss
loop
pop
stos
outsl
ljmp
outsb
pop
pop
mov
test
out
test
sbb
in
sbb
sahf
lods
sbb
cli
test
sub
fabs
adc
insl
cwtl
xor
sti
mov
xchg
mov
fsub
add
repnz
shrl
sub
xor
bswap
cltd
daa
out
jge
jbe
jmp
mov
jne
rorl
or
or
xlat
in
icebp
cmp
dec
mov
and
cmp
jg
out
add
shlb
enter
out
adc
orl
xchg
loope
cltd
mov
sbb
insl
jnp
or
stos
xchg
add
adc
push
push
pusha
add
in
in
outsb
jg
adcb
dec
repnz
sbb
jg
pop
flds
mov
push
push
add
inc
cmp
xchg
ret
pop
jecxz
dec
mov
movsb
clc
std
push
das
arpl
cmovs
cmp
pusha
sti
jl
mov
into
mov
sub
pop
fsubp
mov
cltd
ds
xor
stos
imul
sub
mov
pop
negl
or
dec
pop
xchg
ror
scas
pop
xchg
lret
push
imul
jl
jno
fcmovb
fdivs
fwait
jae
mov
mov
cmp
mov
mov
mov
sbb
push
push
sub
mov
mov
std
xchg
ds
aas
movsl
adc
sahf
cmp
dec
stos
sbb
pushf
test
outsb
mov
mov
mov
mov
icebp
aad
jbe
sub
lds
adc
cltd
mov
jmp
inc
push
add
pusha
xchg
jne
iret
jge
fistps
test
mov
xchg
into
pop
test
sub
xor
or
scas
stos
sub
aad
push
loopne
cmp
mov
mov
mov
push
xchg
xchg
and
ret
and
lods
lcall
mov
es
add
rclb
jne
setle
test
fsubrl
ds
lock
mov
js
imul
lcall
pop
mov
xor
xor
xchg
icebp
inc
fwait
out
enter
inc
cmp
and
sub
add
sbb
cli
lahf
scas
std
orl
cmp
scas
cltd
lea
shr
jo
insl
int3
das
out
in
test
xchg
bound
push
dec
mov
jecxz
pop
mov
stos
dec
ret
jge
loop
int
ds
sbb
es
push
scas
cmpsb
push
adc
inc
mov
pop
cwtl
jp
sbb
xchg
icebp
sub
inc
xor
lret
jae
lock
xchg
mov
mov
in
imul
xor
push
pop
outsl
pop
cltd
fistpl
push
roll
movsl
loope
mov
push
mov
lret
cmp
cmc
lret
and
aad
cli
adc
ljmp
add
ja
in
push
sahf
jle
imul
sti
lock
inc
loope
sbb
xchg
mov
lods
popf
pop
stos
adc
jae
lea
outsl
addb
pop
mov
stos
jno
test
shr
ljmp
push
or
cmp
mov
mov
es
mov
movsl
dec
cmc
dec
scas
sub
imul
stc
sbb
and
loopne
popa
or
roll
sub
out
or
lock
mov
sub
or
aam
scas
adc
pop
es
pop
aas
in
shll
and
ss
xor
cmp
push
jmp
pop
shrl
and
rcrb
pop
cmp
fwait
outsb
mov
mov
sbb
push
push
pop
pop
sbb
aam
and
idivl
mov
inc
ss
bound
ror
mov
and
mov
mov
outsb
mov
jmp
dec
sbb
in
in
in
enter
ds
loope
sti
add
popf
xor
jle
or
lahf
dec
call
sub
test
fwait
sahf
shll
imul
pop
sub
scas
ret
push
xchg
or
jmp
mov
bound
or
adc
pop
cmc
int
fs
and
cld
aad
inc
lret
sbb
gs
mov
jne
clc
lret
sbb
into
in
mov
ja
popa
push
int
fbstp
add
pop
out
xchg
mov
push
es
push
test
lods
mov
test
and
pop
cld
inc
adc
insb
movsb
lahf
es
test
cmpsl
inc
gs
mov
pop
cli
fmul
add
das
stc
rclb
int
stc
js
inc
jecxz
addr16
mov
stos
mov
mulb
in
adc
pop
jnp
clc
aad
push
aad
dec
jno
call
mov
sbb
mov
cmp
xchg
add
clc
xchg
mov
xor
ljmp
test
fstpt
xor
aad
int3
paddw
adcb
shrl
ret
call
ret
push
fs
adcl
jecxz
sub
nop
outsb
add
sbb
or
dec
leave
cli
insb
adc
out
ds
rclb
and
and
call
jle
or
xchg
iret
rolb
leave
test
ljmp
dec
cli
out
test
into
or
cmp
jne
fdivr
xor
inc
push
xchg
add
ds
inc
rorl
xchg
ror
sub
xchg
xchg
fsubs
jne
mov
adc
ljmp
pop
ds
popf
add
mov
pop
push
rorb
pushf
dec
add
jmp
mov
sbb
push
add
call
aaa
bound
sbb
sbb
pop
inc
xchg
nop
mov
cmc
inc
adc
loope
insl
dec
inc
inc
stc
fldt
push
gs
jno
es
and
mov
xlat
cltd
inc
dec
out
in
mov
sbb
test
lcall
popf
add
test
mov
jg
pop
push
loopne
push
ds
shl
mov
jns
ret
push
xchg
int3
orl
mov
jecxz
js
jge
mov
iret
mov
out
call
and
or
mov
add
int
andb
jbe,pn
add
sti
dec
jnp
enter
xor
lods
repnz
or
jbe
mov
cmp
sub
into
pop
push
enter
aam
push
push
dec
imul
adc
fs
fucomp
test
repnz
ja
aaa
cltd
cmp
push
bound
insl
into
add
push
sub
jp
scas
push
inc
jo
mov
cli
int3
testl
xchg
mov
aaa
push
pop
pop
inc
dec
inc
sub
or
dec
mov
add
xchg
dec
int
xchg
dec
jnp
add
ss
or
scas
mov
push
nop
jmp
jp
sbb
sub
cs
or
jbe
lret
adc
mov
adc
sbb
xor
mov
mov
mov
in
push
mov
sub
ljmp
xchg
lods
mov
and
pop
or
imul
fwait
ss
sbb
and
mov
dec
add
and
fistps
out
pop
in
test
push
add
add
cmp
mov
jns
xchg
sti
imul
in
xchg
cli
divl
mov
sbb
jno
mov
sbb
in
push
frndint
fmulp
pop
loop
out
loopne
das
push
add
pop
pushf
shll
and
sbb
mov
cld
cmpsb
lds
aaa
sub
dec
adc
je
adc
sti
repnz
sub
push
push
pop
icebp
or
cmp
inc
jmp
push
xor
popf
mov
rolb
xchg
lret
mov
dec
ds
xchg
inc
mov
or
mov
stos
jg
push
mov
push
push
je
lea
push
insl
mov
aaa
cwtl
dec
dec
adc
setnp
dec
mov
rorb
cmc
mov
addr16
jno
divb
cmp
adc
fwait
and
lods
jo
adc
xor
push
inc
popf
sub
int3
js
ja
fcmovne
push
inc
xor
and
jg
mov
lret
jae
call
push
lea
dec
pop
or
adc
in
xchg
ret
add
lods
mov
add
push
push
mov
cmpsl
sub
jle
rolb
jmp
outsb
cmp
or
jecxz
inc
cmp
jecxz
pop
or
mov
dec
shr
jo
in
pusha
xor
cmp
test
push
pminub
mov
adc
jae
pop
pushf
adc
mov
mov
in
xchg
pop
aam
pop
mov
repz
adc
hlt
cmp
xacquire
ret
sub
push
mov
sub
xchg
cmp
iret
sub
fdivs
cltd
bound
push
and
inc
je
arpl
adc
push
sbb
dec
pop
xchg
mov
ds
shrd
lahf
cmc
mov
ficoms
ret
in
mov
dec
xchg
aam
enter
bound
popa
ja
push
mov
sbb
sahf
pop
insb
mov
push
mov
mov
cmpsb
xchg
jp
push
xchg
lock
arpl
daa
jns
push
pushf
test
aad
mov
mov
fsubrl
xor
cld
add
sarb
imul
mov
int3
push
shrb
je
sub
insb
lahf
mov
sbb
xchg
mov
and
mov
ljmp
dec
adc
std
sar
hlt
sbb
nop
stc
clc
loop
shlb
mov
inc
pop
es
sub
mov
gs
mov
out
test
mov
lcall
pushf
cmp
xchg
xchg
sbb
mov
pop
jo
jmp
call
stc
test
adc
sbb
popa
imul
xchg
rcll
cmp
addr16
add
pop
ret
sbb
mov
jp
lea
test
mov
jb
lods
lods
mov
inc
inc
cmp
inc
stos
cmc
jg
imul
es
add
jle
sub
jge
mov
cmp
jo
cmp
cltd
push
lds
stos
jno
adc
jg
test
cmp
nop
jno
and
cmp
xor
jecxz
aas
sub
mov
lcall
and
cmc
xlat
clc
push
mov
sbb
jl
shlb
clc
cmp
mov
jecxz
and
jno
xchg
and
push
mov
test
mov
and
roll
add
jae
shlb
neg
es
jnp
push
incl
push
es
mov
cmpsl
and
cmpsb
mov
sarl
roll
test
push
mov
shll
repnz
mov
repnz
and
cmp
xchg
mov
dec
rolb
std
out
dec
push
pop
push
mov
pop
mov
jno
aad
mov
jmp
stos
jne
fadd
jnp
int3
sbb
lret
and
addr16
out
insb
jl
call
sub
es
push
mov
pop
and
xor
mov
or
sub
pop
sbb
inc
xor
int
pushf
and
imul
lock
push
mov
fdivrl
repnz
dec
xor
ret
shll
push
inc
stos
mov
scas
inc
cwtd
arpl
loop
orl
out
cltd
sbb
cmp
xor
xchg
std
dec
cld
and
test
add
movl
push
into
add
in
notl
jmp
mov
loope
pushf
sbb
jae,pn
stc
arpl
shl
lock
ret
cmp
inc
divps
pop
inc
sarb
adc
in
fdivrs
sub
ljmp
and
lcall
je
sbb
mov
addr16
sub
shlb
inc
insb
mov
fisubs
sub
push
mov
dec
movsb
xorl
xor
ror
ds
jbe
push
sub
fsts
loopne
fisubrs
sbb
lods
jno
pushf
dec
push
xchg
sbb
pop
mov
fwait
divl
adc
icebp
adc
fmull
imul
mov
and
test
in
movsb
paddusb
mov
shlb
jbe
jno
hlt
cltd
je
daa
outsb
mov
ljmp
or
popa
sub
roll
add
cwtl
call
add
jecxz
movsl
aaa
mov
test
lds
pop
arpl
inc
xor
and
stc
sub
call
inc
sub
adc
insl
mov
arpl
inc
jbe
push
les
sub
imul
inc
inc
jbe
lcall
lods
nop
xchg
push
mov
cld
cwtl
iret
and
sbb
aam
dec
mov
xchg
jno
iret
filds
or
or
lret
popa
mov
loop
fisttpl
mov
and
scas
xor
shlb
dec
clc
test
xchg
xchg
aaa
int
arpl
push
jecxz
repz
subl
inc
icebp
pop
sbb
sbb
cmpsl
test
xchg
shl
xchg
sub
popa
sub
out
sub
leave
aad
or
add
repz
test
cmc
stc
hlt
jb
add
fsubr
add
stos
out
pop
dec
and
push
test
mov
lock
rorb
dec
das
imul
iret
lock
sbb
cli
pop
pop
adc
mov
pop
or
mov
bound
movsb
nop
in
adc
test
mov
cld
fstl
test
ds
es
or
daa
lock
push
loope
mov
mov
stos
adc
rorb
mov
decl
pusha
loopne
mov
push
loopne
jmp
into
or
dec
pusha
mov
pop
mov
sbbb
pushl
movsb
inc
mov
mov
dec
push
add
int3
loopne
sahf
sub
dec
lea
rorb
stos
mov
xchg
and
inc
negb
inc
clc
data16
fwait
rclb
hlt
lods
push
mov
fs
add
pushf
mov
ret
divb
test
dec
in
xchg
mov
cmp
cltd
test
or
push
mov
cmc
push
mov
repz
fdivl
aaa
sbb
orl
xchg
je
cmc
xlat
push
mov
xor
fmuls
cmp
cmpsl
or
pop
adc
xchg
lea
inc
fsubs
cwtl
xchg
test
add
mov
ja
xchg
mov
push
xchg
push
pop
mov
add
sub
scas
lcall
inc
dec
outsb
adc
and
pop
and
pop
repnz
xor
imul
pop
cmp
roll
aad
pop
shl
pop
arpl
lea
cmp
push
movq
divb
ljmp
pop
sti
push
or
enter
xor
popa
sbb
push
jl
imul
insb
fwait
rolb
loopne
shll
stos
aam
and
lock
xor
sub
test
pop
xchg
push
mov
inc
orb
cmp
adc
je
jmp
xor
gs
jne
push
cmp
sub
push
push
rol
int3
adc
sarb
inc
push
dec
inc
repnz
out
lods
in
xor
aam
push
adc
rcl
jnp
clc
fsubl
cwtl
int3
and
ja
jo
xor
push
test
sub
loop
sbb
push
xchg
rolb
out
mov
mov
fidivl
inc
fs
je
test
aad
jp
xchg
mov
lcall
jecxz
or
mov
jge
scas
mov
in
push
and
lods
jno
lret
inc
push
push
cmp
mov
fdivrs
cmp
pushf
pop
xchg
adc
sub
aam
push
jnp
imulb
fnstenv
jp
insl
xor
imul
hlt
cmc
jae
fdivrl
mov
xlat
mov
adc
loope
mov
sub
adcb
xor
outsb
xor
inc
adc
pop
das
shrb
mov
cmp
sbb
les
out
rcrb
negl
negb
sarb
inc
test
jge
in
js
add
push
mov
cmpsl
and
ret
cmp
push
inc
jg
das
xchg
lea
inc
lods
mov
add
cs
std
in
mov
inc
xchg
push
or
xor
mov
and
adc
sbb
aaa
adc
xchg
sarb
sbb
mov
hlt
xchg
clc
push
out
push
int
test
mov
in
cmp
fiadds
cmp
inc
pop
dec
xor
mov
inc
fnstenv
or
and
ds
xchg
inc
lret
addr16
shl
rol
int3
mov
dec
orl
pop
push
or
out
in
cltd
pop
inc
mov
push
dec
push
jae
dec
popf
aaa
mov
jno
lret
add
sub
push
jbe
cmp
fisttpll
fidivs
fnsave
lods
aas
mov
sbb
loope
fmull
sbb
pop
pop
push
out
lds
outsl
imul
pop
movl
jge
push
mov
ret
loop
rolb
add
and
insl
cmp
call
out
lea
iret
enter
xor
or
jnp
imul
add
cmpsb
mov
test
push
or
xchg
jg
pusha
push
aas
fdivr
out
inc
add
mov
jne
ret
push
and
in
xchg
jno
push
inc
and
mov
inc
cli
dec
jl
xor
push
enter
sub
movsl
pop
xor
xchg
jns
add
pop
pop
push
pop
xor
add
fwait
sub
adc
shlb
or
push
push
in
xor
lahf
xor
in
dec
or
enter
sub
pop
mov
add
daa
mov
cmpsl
or
jne
xchg
imul
jns
adc
into
cltd
loope
or
ret
xchg
sbb
xlat
inc
push
xor
std
jne
mov
adcl
inc
gs
mov
pop
pushf
xchg
pop
fldl
fimull
mov
in
aad
add
xorb
sti
cmp
std
push
sub
aam
xor
cld
dec
lahf
push
mov
in
add
int3
xor
gs
sbb
and
outsl
incb
out
aaa
and
cmp
mov
test
call
pop
jmp
in
pusha
and
pusha
and
mov
jb
xchg
push
add
pop
out
mov
push
sub
pop
hlt
bnd
ret
dec
sub
or
popf
ds
dec
push
test
test
mov
mov
adc
cs
cmp
jecxz
cmp
fisttps
add
js
scas
mov
ljmp
xchg
cwtl
adc
adc
pop
sbb
cmp
loop
lods
dec
inc
pop
pop
divb
push
xor
in
shrl
lea
xchg
aaa
inc
sub
and
mov
jp
inc
test
ss
mov
leave
add
sub
iret
xor
inc
mov
sub
add
js
out
dec
adc
mov
repnz
lock
sbb
push
sub
push
hlt
push
and
fidivl
leave
mov
sbb
adc
into
mov
and
pop
fs
and
in
inc
das
inc
mov
add
int
jle
jno
push
dec
stc
out
xchg
adc
mov
inc
mov
jo
cmpsb
outsb
rcrl
xor
push
clc
sub
cmp
test
pop
clc
push
cmp
mov
sub
cmp
xorl
fidivs
jns
and
arpl
sub
adc
pop
in
xor
test
adc
sbb
xor
cltd
jecxz
sbb
add
mov
xor
push
ss
in
gs
jo
cmp
ljmp
push
inc
add
jbe
cli
scas
pushf
sub
xor
mov
inc
inc
jne
cltd
sub
lcall
scas
xor
jno
cld
pop
inc
in
lock
imul
xchg
mov
mov
dec
xchg
sahf
sbb
inc
sub
and
out
sbbl
add
add
xor
pop
scas
dec
push
popf
inc
and
add
addl
cmp
mov
inc
pop
shlb
and
fistps
push
xchg
inc
mov
notl
mov
daa
cmpsl
rclb
test
jns
cmc
xchg
adc
xor
push
es
data16
dec
and
mov
cmp
cmp
xlat
cs
stc
pop
ficompl
adc
arpl
aaa
inc
inc
daa
xor
add
cld
add
stc
jo
js
gs
aas
mov
xor
push
adc
fildl
mov
push
xor
and
sbb
jp
and
mov
push
dec
fisttpl
xorb
sub
push
cmp
xor
push
mov
or
movl
imul
fsubrp
pushf
jno
jo
pop
jge
or
aam
lret
fs
mov
fsubrl
mov
das
add
jp
push
icebp
push
rcrb
jno
sti
sbb
in
mulb
xlat
add
divb
sbb
sahf
ss
cmc
test
pop
sbb
or
push
or
or
lea
add
bound
xchg
pop
aad
out
xchg
push
or
mov
mov
or
adcb
imull
sub
inc
cld
sbb
cmp
mov
cmpsl
fsubs
out
gs
rclb
push
pop
lock
fstpt
movsl
jmp
mov
cltd
jbe
lds
fmull
cli
mov
xor
popf
nop
fiadds
mov
add
int
pop
push
andl
fstpl
xchg
lock
add
inc
lahf
notl
test
icebp
mov
mov
pop
mov
f2xm1
cmp
or
xchg
fsubs
jne
cmp
mov
add
sub
dec
jl
es
out
pop
push
push
test
add
xlat
push
inc
out
jmp
jnp
sub
outsl
jge
push
fbld
ljmp
loop
into
xor
jnp
sbb
ffreep
add
sbb
arpl
pop
mov
enter
sbb
ror
aad
mov
push
cmp
sbb
xor
mov
sbb
push
sub
jo
mov
jge
sub
std
jmp
insb
dec
adc
cmp
xor
shrl
stos
shrl
inc
push
popa
xor
pop
xor
cmp
fcomp
mov
je
mov
dec
fisttps
xor
stos
outsb
push
repz
inc
cmp
loope
and
push
fwait
jmp
or
xchg
lea
xor
call
dec
sti
sub
test
sti
aad
mov
movsb
adc
adc
cmpsl
loopne
sub
cmpb
mov
cli
idivb
out
adc
sbb
cwtl
xor
jnp
push
mov
pop
stos
or
popa
mov
out
fsts
fstp
mov
or
xchg
idivl
data16
ret
pop
rcll
mov
mov
rcrl
dec
dec
push
insb
inc
arpl
mov
insb
cwtl
adc
or
je
mov
setb
fiaddl
jmp
inc
cmp
cli
mov
mov
mov
mov
stc
dec
mov
pop
fucomp
in
dec
xlat
xor
stc
mov
mov
jne,pn
xor
and
mov
pushf
dec
pop
pusha
pop
add
mov
xor
out
xchg
jmp
cmp
int
scas
fisubs
mov
in
mov
or
push
and
push
push
jge
and
push
pop
or
aas
or
cwtl
adcl
pop
pop
push
out
or
hlt
adc
cli
cmp
aam
sub
mov
mov
ds
imul
adc
out
adc
movsl
jmp
js
jmp
cmc
adc
lahf
cmp
mov
scas
lret
mov
js
bound
jl
testb
call
int
sbb
and
arpl
pop
out
push
fcomps
lea
aaa
ljmp
stos
mov
xor
pop
jnp
jle
sti
and
gs
add
or
mov
xchg
loopne
dec
jp
jns
mov
fsubrs
divl
dec
scas
sbb
inc
shrb
sbb
jmp
nop
dec
scas
mov
adc
call
mov
cs
sub
add
xor
test
ds
mov
mov
test
imul
arpl
ficomps
xor
mov
dec
ss
cmp
call
sbb
and
jge
ja
xchg
mov
xor
jns
dec
outsl
xor
lahf
insl
dec
jns
jmp
jo
ja
push
aas
push
iret
daa
or
call
xor
pop
adc
sbb
data16
lret
dec
cmp
hlt
cltd
pop
ret
mov
sahf
cmp
ss
in
lods
jns
insl
push
lcall
aaa
inc
repnz
cmpsb
add
mov
shll
mov
or
pop
leave
mov
jle
ret
sbb
mov
xor
lea
gs
adc
mov
fs
in
push
aas
jne
and
popf
sub
pop
pop
cmpsb
sbbl
or
test
inc
pop
sahf
jb
test
imull
stos
je
xlat
mov
das
dec
mov
jmp
decl
fsubrs
push
arpl
popf
repz
sahf
rolb
mov
cwtl
int
pop
xchg
adc
add
mov
and
mov
jle
or
sbb
in
into
stos
xchg
bnd
cli
xor
push
lock
aas
das
cmp
popf
dec
jbe
sub
pop
jmp
lock
mov
or
in
xchg
pushf
arpl
outsl
test
loop
sub
shrl
lea
fidivl
aas
fcomp
stos
in
mov
mov
inc
cmpsl
push
inc
and
cmc
movsl
mov
loope
popf
push
lods
testl
adc
out
repnz
push
out
divb
mov
fs
sub
lea
loope
enter
mov
cmpsb
jmp
sbb
js
sahf
arpl
mov
adc
mov
test
lret
sub
mov
lahf
pop
imulb
fildl
xchg
push
dec
push
xor
lods
inc
movb
xchg
outsl
mov
andl
cmp
xor
outsl
data16
add
negb
sub
or
or
popf
pop
xor
arpl
cmp
rolb
jge
push
ja
or
cmp
cmp
and
xor
jg
in
popf
xchg
inc
jae
test
jne
xchg
ss
fcmovnb
pop
dec
mov
adc
bound
pop
in
in
jns
push
mov
dec
dec
pushw
lds
dec
in
call
in
push
stos
xchg
js
inc
push
fwait
rorl
icebp
decb
pop
ja
repnz
scas
fsubrs
jg
sub
jl
popa
je
loopne
push
int3
jp
test
sub
leave
aaa
out
pop
dec
out
pop
int
jae
inc
dec
jg
dec
leave
sub
jge
and
js
loope
jb
jecxz
repnz
ja
jecxz
roll
fucomi
dec
scas
xor
push
xor
sbb
cltd
or
or
imull
movsb
mov
scas
ja
adc
bound
sbbl
ljmp
sbb
or
jl
pop
push
mov
clc
add
jge
insl
mov
pop
inc
push
xchg
xchg
xchg
bound
mov
test
fildll
xchg
add
lds
ret
rsqrtps
mov
add
or
dec
ja
out
fmuls
or
xor
push
aaa
dec
dec
rcl
in
loope
push
push
sbb
repz
shrb
inc
ficoms
test
mov
pop
cmp
xchg
iret
push
add
std
sti
jp
subb
xchg
mul
cmp
push
out
repz
dec
loope
stos
daa
insb
push
cld
dec
pop
loop
dec
cs
adc
and
push
xlat
es
inc
add
call
lcall
or
lret
loope
mov
repnz
loope
daa
dec
add
sti
cmp
rclb
push
data16
out
aam
cmc
inc
clc
cmp
test
lock
sbb
das
xor
orl
fmuls
adc
loope
adc
xlat
and
out
addr16
sahf
mov
lea
js
scas
inc
mov
and
shr
idivl
mov
test
imul
inc
push
out
enter
ss
in
push
imul
and
cmpsl
pop
inc
mov
rolb
pop
add
sarb
xlat
xor
mov
xor
or
jns
cmp
lret
idivl
std
mov
push
call
in
jmp
cs
mov
repnz
sti
ror
xlat
ret
jl
lret
fs
repz
dec
jae
xchg
sub
inc
xchg
lcall
sbb
jp
pop
inc
nop
lcall
enter
mov
sub
cmp
mov
or
cmpsl
cld
ret
ret
add
xchg
ss
add
cmpsb
or
enter
mov
xchg
or
inc
xchg
push
fsubr
ret
fsubr
adc
out
or
les
stc
arpl
xor
pop
popf
pop
adc
mov
fistl
mov
inc
inc
push
xchg
fisttpll
sarb
jae
scas
push
push
xchg
aad
fwait
adc
mov
fistpl
mov
cld
xchg
add
repnz
movsl
pop
adc
dec
fnsave
js
jne
push
inc
lods
rcrb
fadd
loop
in
or
je
popa
sub
sbb
fldcw
popf
xchg
cmp
loope
insl
mov
test
daa
mov
mov
ljmp
les
stos
pop
mov
dec
jg
imul
pop
inc
pop
cmp
jo
cmpb
adc
dec
push
pusha
xor
dec
lcall
aas
ss
fadd
xchg
push
lcall
shll
mov
jle
stos
mov
add
mov
jmp
subb
stc
outsl
mov
xlat
les
pop
xor
pop
aas
mov
inc
xor
aas
xlat
imul
jne
out
jmp
icebp
inc
aam
jp
lods
xchg
subl
jge
ror
push
gs
rcr
sarb
fisubrs
ds
inc
xrelease
jae
cmp
inc
cmpsl
mov
lcall
ret
jp
pop
pusha
sub
push
jno
fldt
sub
lods
dec
mov
shr
jg
pop
xchg
fsubrs
jns
push
rcr
add
insb
addb
mov
mov
adc
rorl
scas
add
add
mov
xor
sbb
ja
cmp
sub
ret
jno
lock
lret
mov
adc
stc
push
jecxz
cmpsb
mov
cmp
xor
js
das
insb
lods
insb
call
cmpsl
jmp
fs
adc
dec
mov
loope
clc
out
mov
sub
stc
cwtl
jbe
mov
leave
fcomps
loopne
leave
push
pop
and
xor
inc
xlat
cmp
enter
out
ljmp
test
xorb
and
push
xchg
out
sub
aas
ljmp
fimull
gs
xchg
sbb
popa
icebp
mov
fsubrl
cmp
scas
test
sbb
sub
pusha
cmp
loopne
mov
mov
mov
call
in
pushf
sahf
rorb
add
lahf
push
and
jns
fnsave
push
imul
fldenv
dec
outsl
pop
cwtl
test
rol
decb
stc
adcb
sbb
and
rcrl
int
leave
or
mov
out
in
stos
adc
pop
push
and
inc
ljmp
scas
out
jb
jo
lods
sub
xchg
divl
insb
sub
cmp
push
fdivp
cmc
rorb
pop
stos
cmp
xchg
outsl
or
dec
sti
inc
jno
pop
sti
mov
daa
cmc
xor
scas
push
ficompl
jmp
cmpsb
adc
jb
xlat
insl
in
add
mov
insb
scas
adc
sbb
fwait
jle
loopne
enter
jbe
jge
xor
xchg
xchg
sub
xor
imul
or
leave
aad
xchg
mov
dec
mov
lods
icebp
inc
test
addr16
rolb
hlt
lods
rcll
into
orb
fbstp
add
les
mov
je
add
insb
imul
push
enter
test
xchg
sbb
jmp
lods
out
lods
test
mov
sahf
sbb
xchg
jns
lods
ss
dec
pop
xor
loope
xchg
test
mov
xor
ja
pop
xchg
add
push
hlt
mov
iret
lods
sub
sahf
test
repz
repz
and
sarl
shll
push
xchg
repz
push
xchg
jae
xchg
movsl
arpl
jae
loop
imul
mov
xor
sub
dec
inc
fdivrs
cli
popf
test
icebp
nop
repz
push
je
loop
addl
sbbl
jl
inc
in
mov
outsb
push
push
inc
dec
sub
out
mov
xlat
mov
cld
pop
sbb
fwait
xchg
xchg
test
and
dec
daa
push
testb
jle
rcll
int
cmp
fadd
mov
dec
cmp
dec
loope
mov
xor
sub
out
mov
loope
hlt
or
outsb
test
std
dec
pop
dec
icebp
push
sub
add
xchg
aad
add
sbb
xchg
nop
insl
cmp
push
or
mov
or
mov
inc
mov
push
sbb
mov
or
in
es
inc
push
mov
aad
into
aad
inc
daa
out
mov
movsb
insl
sti
fmuls
shrl
ja
dec
pop
movsl
icebp
dec
push
mov
xor
aam
mov
push
mov
sub
pop
cs
pop
add
mov
lock
out
push
mov
mov
test
leave
jb
ja
pop
cmpsb
mov
jl
shl
push
mov
mov
frstor
xor
sti
ja
xor
push
sqrtps
mov
insb
ja
call
cmpsb
cmp
cmp
cmp
jne
pop
enter
imul
out
xor
std
std
jmp
mov
sbb
cld
fistps
adc
iret
xchg
dec
pop
and
jge
in
leave
mov
xchg
sbb
jmp
shlb
dec
mov
dec
mov
hlt
addr16
sbb
xchg
psrlw
mov
sub
adc
xlat
pop
pop
rorl
es
mov
stc
xlat
inc
aaa
mov
xchg
outsl
push
xchg
sbb
es
inc
dec
push
arpl
adc
int
push
int
faddl
xchg
andb
mov
push
add
in
in
loop
lea
add
push
test
and
addr16
fisubrl
mov
mov
push
data16
pop
jl
dec
or
jnp
xchg
icebp
xor
repnz
pop
shll
mov
xchg
mov
rcl
fst
bound
enter
insl
push
lret
fucom
cli
out
xor
ja
imul
and
icebp
xchg
xor
in
and
and
pop
push
mov
dec
xchg
mov
adc
imul
cmp
imulb
frstor
loope
and
ss
shr
aam
nop
and
mov
xor
lods
lret
cmp
out
mov
repz
dec
cmp
test
jae
pop
mov
das
inc
xchg
xor
xchg
fxch
test
loop
mov
pop
test
loope
cld
ljmp
mov
mov
lret
out
gs
call
ss
stos
mov
adc
or
in
pop
fsts
and
xchg
adc
int3
nop
jno
loopne
sub
dec
in
test
dec
xor
or
and
xchg
ficomps
sub
cmpsb
aaa
jbe
movaps
inc
aas
pop
add
lds
mov
mov
in
jb
notb
or
pop
pop
divb
ret
or
rorl
inc
push
add
cs
cbtw
ja
sti
repz
outsb
mov
pop
daa
insb
out
nop
shrb
dec
dec
mov
sbb
pop
lods
sbbb
incl
mov
sti
shlb
repz
push
add
mov
jmp
jmp
ja
rorl
pop
int
in
cltd
push
adc
in
mov
jno
mov
adc
ret
jne
outsb
inc
adc
ror
sarb
rorb
add
and
or
sub
stos
push
or
ret
push
cmc
enter
call
ja
divb
jl
stos
and
mov
je
in
xchg
and
loope
ss
inc
fstl
push
jbe
and
mov
sub
and
adcl
movsl
sub
jnp,pt
mov
test
jne
xchg
pop
cmp
mov
adc
lods
dec
and
ss
pop
jge
jp
rcr
sub
lock
xchg
testb
iret
out
mov
inc
mov
in
jg
sbb
jecxz
ds
pop
rclb
jl
cs
add
loop
je
out
lods
flds
in
sahf
jb
pop
xor
mov
sbb
in
jge
sahf
aad
ja
jne
inc
or
cwtl
in
cmc
sbb
mov
lret
clc
ficompl
fbstp
into
in
cmpsb
cwtl
add
mov
outsb
mov
mov
pop
stos
cmpsb
push
loope
mov
popf
lret
xlat
mov
mov
jo
pop
xchg
add
enter
and
xor
adc
dec
fistl
repz
xchg
cmpsl
adc
and
pop
add
xor
lock
add
stos
cmp
data16
mov
pop
stos
mov
adc
jl
xor
jl
inc
aas
xor
or
sub
in
adc
daa
addr16
cmp
fstpt
fbld
fcoms
sub
inc
scas
loopne
jle
fcomip
movsl
inc
mov
sbb
les
icebp
call
sbb
push
mov
or
add
aad
clc
out
fnsave
inc
pop
pushf
push
nop
jge
cli
in
mov
addr16
mov
mov
out
xchg
xchg
lcall
mov
imul
xlat
mov
ds
dec
sbb
sahf
mov
jge
push
xchg
imul
aad
push
mov
mov
aad
mov
mov
xor
inc
add
jp
loopne
aam
imul
scas
add
in
add
aaa
and
sbb
mov
ds
shll
in
xchg
pushf
rcrb
mov
pop
test
sub
in
test
mov
cmp
xchg
stc
xor
and
sub
mov
ja
inc
daa
jo
daa
iret
xchg
or
mov
sub
mov
idiv
aad
xor
cmc
cmp
dec
ds
push
jp
mov
push
dec
call
sub
xchg
ret
or
mov
insb
jg
push
xor
hlt
mov
pop
push
aam
or
negb
cmpsb
mov
cmp
sbb
xchg
inc
inc
lahf
lahf
xor
add
dec
ja
fldcw
push
into
cltd
mov
mov
or
mov
into
push
outsl
pop
scas
nop
jno
std
in
or
loop
inc
lock
sbb
sub
and
jl
fwait
or
insb
mov
dec
enter
fiadds
int3
stc
mov
inc
sub
jecxz
fcmovnbe
mov
jle
sub
out
ja
xchg
scas
in
adcb
cmpsl
out
sbb
mov
testl
dec
psrlq
insl
cmp
es
cld
ficomps
push
xchg
shlb
and
inc
cmc
call
jnp
incl
dec
cltd
ret
cmpl
jmp
iret
aaa
sbb
jnp
or
push
sbb
fnstsw
fsubrl
sbb
push
cmp
addr16
inc
pop
jne
rclb
loopne
aaa
bound
xchg
xor
addb
push
int
xchg
inc
mov
ds
je
movntq
out
es
sbb
inc
xor
inc
insl
iret
popf
pop
mov
xor
outsl
or
push
adc
movsb
hlt
mov
inc
pop
inc
lcall
in
dec
cmp
fstpl
pop
outsb
les
push
jge
mov
lea
add
loop
jp
lcall
push
push
sti
stc
dec
cmp
and
loopne
loope
cmp
and
rol
jecxz
inc
mov
lret
cwtl
adc
sbb
movsb
repnz
push
daa
cmp
fwait
loop
in
mov
test
jb
jl
outsb
cs
xchg
out
std
out
movaps
or
or
mov
imul
outsl
jnp
and
sbb
and
outsb
pop
in
cltd
xor
jmp
lahf
sahf
enter
incb
adc
push
fsubs
mov
pop
popa
lock
sbb
mov
test
dec
sti
xchg
dec
sbb
movsl
cmp
ror
cwtl
ss
mov
sbbb
sub
std
pusha
roll
push
in
cld
ja
jo
test
xchg
mov
popf
inc
jnp
jbe
pop
nop
xchg
roll
movsb
push
sub
adc
inc
enter
scas
shrb
aaa
pop
iret
ja
adc
or
shrb
add
call
addr16
repnz
mov
jmp
out
and
lret
xchg
push
call
cld
leave
push
leave
rorl
fwait
cmp
push
pop
inc
jno
push
jae
aad
mov
ljmp
mov
and
sub
inc
out
mov
sarl
frstor
decl
jecxz
push
push
jne
ljmp
pop
or
pop
inc
inc
shll
jmp
ret
jae
shrb
cli
push
jnp
ds
sub
sti
in
adc
fwait
jle
inc
lcall
jbe
sub
add
rorb
cwtl
int3
mov
sub
cmp
pop
leave
cmc
jbe
mov
jle
movsl
jp
jnp
data16
and
stos
xor
pusha
push
xchg
adc
fs
out
sub
jno
loopne
mov
sbb
cs
fwait
aad
cli
and
test
test
or
hlt
cmc
lcall
popl
sub
cwtl
xchg
push
in
push
or
xchg
lds
cld
jnp
sbb
mov
repnz
loopne
xchg
inc
xor
pop
fidivl
xor
mov
es
pusha
adcl
pop
pop
stos
mov
negl
push
scas
cwtl
into
cmp
jae
jmp
and
mov
in
mov
mov
and
loop
mov
push
push
test
negl
mov
fisubl
and
mov
xchg
mov
mov
mov
push
sub
mov
nop
add
dec
add
pop
mov
jae
mov
sbb
loop
je
jae
xor
add
popf
ror
subl
adc
pop
sbb
sub
aam
jo
pop
mov
xor
ret
add
cmp
inc
xchg
lock
jle
repnz
inc
mov
sar
jno
mov
es
mov
cmc
mov
cmp
div
fsubrl
dec
sub
xchg
fmull
mov
inc
in
adc
lea
ljmp
mov
test
adc
and
gs
xchg
fstl
xorl
mov
scas
cmp
test
ret
push
fsubs
xchg
adc
inc
jmp
push
test
xchg
std
test
dec
lret
les
insb
mov
rcrb
aam
adc
enter
xchg
push
cltd
out
popl
seto
out
cmpsl
mov
fiaddl
out
inc
jp
pop
cmpsl
inc
cs
mov
adc
mov
test
cltd
jecxz
gs
fsubr
fsubr
or
or
cmp
imul
jnp
sub
insb
xor
or
sbb
arpl
xchg
rorl
push
orl
sub
fdivrp
or
adc
jo
inc
es
outsb
xchg
call
add
lcall
jmp
cmp
xchg
gs
sbb
pushf
test
sub
xor
or
sub
cmp
xor
or
sbb
aad
ror
mov
stos
jne
out
test
push
mov
cmp
popf
xor
add
lret
mov
movsl
and
pop
lods
lods
mov
jge
sbb
outsb
adc
xchg
lods
imul
inc
add
or
ljmp
idivl
rclb
sarl
fwait
xchg
lret
ja
or
iret
cmp
and
jae
enter
inc
clc
push
xchg
and
out
nop
out
repz
ja
cmp
leave
addr16
inc
adc
scas
bound
mov
adc
das
and
mov
jl
ds
lret
int3
mov
sub
fiadds
movsl
bound
rclb
xor
cs
add
rolb
or
cmc
les
push
test
lret
out
jo
test
movsl
sub
cmp
jnp
je
fwait
stos
fdivrs
and
add
pushf
stos
mov
mov
cmp
or
stos
enter
outsb
int3
lds
outsl
xor
sbb
jg
pop
mov
pop
mov
roll
xorps
stos
fucomi
xor
sub
out
xchg
jnp
test
je
mov
es
pop
popa
jnp
jge
xchg
push
inc
dec
push
fstpl
gs
std
jb
sbbl
cmp
sub
and
ror
stos
ret
out
leave
lods
push
aas
add
xchg
pop
adc
sub
subb
in
daa
sbb
pushf
outsl
xchg
mov
dec
test
popa
mov
xchg
push
imul
dec
lret
in
test
lods
push
daa
push
ret
out
sbb
loopne
xlat
sarl
test
enter
andb
adc
push
xorl
jnp
fwait
cmpsl
push
jmp
jmp
jmp
loopne
sub
outsl
xchg
lcall
out
loope
outsl
imul
insl
in
push
aaa
sub
cmp
ja
pop
or
and
loopne
out
shrl
ja
push
stc
ja
enter
mov
out
fistpl
inc
mov
or
movd
jp
dec
mov
lret
mov
push
nop
pop
or
pop
push
cld
xor
mov
jnp
scas
cmp
push
jg
je
dec
sub
pusha
mov
mov
sub
jle
pop
pusha
xchg
shlb
loop
cmp
sbb
cmp
mov
push
push
fildll
shl
fnstenv
cltd
xchg
clc
aas
mov
push
jg
addr16
jno
fucomip
imul
xchg
inc
ret
xor
xchg
fldcw
lods
in
mov
or
scas
enter
cmp
dec
xlat
mov
lock
daa
call
mov
fsubl
lods
jge
xchg
mov
lret
mov
adc
fmuls
nop
stc
adc
in
or
loop
enter
leave
push
enter
cmp
inc
cmp
mov
rcl
arpl
sti
aam
enter
loope
loop
enter
nop
xlat
inc
push
js
inc
or
fcoml
xchg
xchg
xor
cld
xchg
in
mov
mov
xor
in
fisubrl
outsb
push
insb
cmp
jbe
pop
testl
int3
mov
ret
lock
inc
gs
pop
insb
xorb
movsl
cvtps2pi
adc
lret
iret
and
mov
pop
dec
outsl
sbb
push
lahf
int
sub
pop
in
jns
shrb
insb
repnz
movl
cmc
shr
mov
jmp
sub
ffreep
push
lcall
sbb
sub
push
cwtl
imul
pusha
push
mov
mov
jp
xor
jecxz
cwtl
scas
jge
in
adcl
test
out
push
shrb
lret
ja
gs
mov
or
cmp
add
and
lret
js
rcrl
mov
push
cmp
inc
sbb
and
sub
adc
mov
dec
outsb
inc
cmp
pop
frstor
lea
cmp
ret
xchg
dec
sbb
bnd
dec
or
addr16
push
and
movsb
xlat
mull
xchg
std
adc
lea
data16
fsubrl
dec
movsl
mov
dec
pop
push
mov
lea
pop
push
les
inc
pop
fmuls
int3
cs
test
subb
ds
jb
cwtl
ljmp
fwait
data16
and
jp
ljmp
mulb
pop
adc
mov
pusha
sbb
jae
out
mov
dec
xchg
mov
inc
jg
fldcw
and
cmp
inc
sub
pusha
loope
push
clc
push
in
mov
call
sub
adc
outsl
mov
jecxz
pop
out
les
lret
in
fisubs
fsubrs
mov
cli
mov
push
outsl
das
mov
push
inc
cmp
xchg
mov
mov
mov
sbb
mov
xor
sahf
test
lahf
loopne
push
in
push
xor
out
loopne
repz
daa
mov
sti
lods
xchg
cmpsb
rcl
pop
dec
pop
cld
dec
pop
inc
inc
aaa
sbb
xchg
cwtl
lret
xchg
les
js
jmp
pushf
inc
adc
pop
arpl
je
xchg
or
outsl
ret
out
icebp
and
data16
mov
sbb
pushf
mov
cmpsl
cmp
stos
inc
movsb
cmpsl
xchg
test
push
add
jecxz
hlt
aad
call
cld
aam
in
push
xchg
cmp
ja
inc
pop
test
jno
inc
push
dec
int
inc
xchg
mov
sub
es
fmul
mov
or
pop
sub
pop
adc
dec
loope
mov
aas
dec
mov
mov
icebp
xchg
repz
mov
and
inc
aaa
mov
mov
jp
lds
dec
mulb
jb
jmp
pop
into
das
dec
clc
push
les
std
mov
dec
aam
mov
cmp
movsl
mov
pop
sbb
mov
sbb
pop
adc
xor
mov
leave
cmp
jmp
sbb
or
jno
xlat
sub
fildl
push
rcll
mov
pop
insl
int3
movsl
ds
pop
into
mov
fsubrl
fs
cmpsl
stc
pop
inc
sbb
mov
pop
cmp
mov
rep
adcl
adc
movsl
pop
mov
mov
jnp
xchg
loopne
push
or
aam
lods
mov
testl
sti
dec
mov
mov
int
push
cmp
pop
outsb
outsb
jbe
xchg
lahf
jg
in
je
cmpsl
sub
testb
cmp
fidivl
arpl
inc
fwait
push
mov
int
lods
xchg
imul
out
add
icebp
push
mov
movsb
test
insb
mov
xchg
inc
in
sub
lret
add
mov
mov
mov
xor
in
das
xor
adc
lods
dec
push
adc
aaa
pop
popf
bound
xor
lods
dec
jmp
adc
add
std
pop
cmp
and
cltd
adc
fisttpll
mov
push
clc
negl
sbb
es
mov
mov
or
data16
cmp
popa
adc
call
push
push
mov
fs
jo
mov
dec
add
test
adc
cmp
mov
sbb
xor
lods
dec
test
jge
test
or
in
adc
js
and
mov
mov
arpl
sbb
loopne
adc
mov
in
cmp
adc
push
sets
dec
movb
xchg
mov
out
cmpsl
push
shll
or
in
icebp
stos
js
add
loope
lock
sbb
into
out
mov
inc
fistl
pusha
or
or
aas
mov
adc
fcmove
daa
push
popf
pop
cwtl
dec
daa
xchg
mov
fsts
and
jmp
xor
outsb
ds
lods
dec
movsb
out
jnp
push
jge
mov
pop
loop
scas
into
int3
icebp
xchg
cmp
xor
stos
cmpsb
aam
out
dec
push
pop
addl
pop
js
push
pop
add
dec
jecxz
mov
rorl
sub
stos
in
xor
adc
lods
or
adc
cli
mov
sahf
pop
mov
das
mov
imul
fdivr
mov
out
outsl
shrl
mov
cmp
mov
arpl
out
ficomps
adc
movb
push
outsl
mov
dec
ror
and
fmull
loope
in
cmp
sti
out
ja
sub
in
bound
cltd
pop
add
mov
popa
add
push
cmc
ficompl
dec
pop
imull
sti
xchg
into
cwtl
xchg
sbb
mov
mov
scas
mov
sub
lods
imul
xchg
jno
test
pop
psubsb
inc
shlb
dec
lock
outsl
outsb
jmp
xor
and
rolb
jae
in
push
xchg
dec
xor
sarb
insb
jl
inc
jge
xchg
in
scas
sbb
out
adc
add
sbb
push
adc
jnp
in
add
push
mov
inc
ljmp
test
jle
incb
xchg
push
pop
shlb
jae
or
aad
movsw
leave
test
ret
jns
adc
push
arpl
xor
mov
xchg
push
cmp
inc
pop
leave
or
mov
mov
xor
les
mov
push
jb
pop
xlat
add
aas
jl
push
repnz
inc
lret
xchg
and
and
jb
and
push
cli
pop
test
dec
push
push
rcrl
xor
xor
sub
pop
pop
and
sahf
ficomps
push
fnsave
es
xlat
push
fldl
mov
out
cmp
lods
cmp
pop
into
scas
lahf
pop
cli
pop
sub
xor
outsl
or
pusha
and
out
inc
push
sbb
loope
mov
aas
sar
pop
ja
out
push
lods
mov
andb
xor
enter
arpl
mov
shrb
nop
loope
inc
int
xchg
loope
jnp
xor
in
jno
rcll
inc
dec
lds
pop
idiv
mov
gs
jb
and
cmp
cmp
test
jmp
test
sti
cmp
imul
leave
shr
lret
jmp
imul
mov
lock
je
lcall
xchg
lds
lret
arpl
out
mov
jg
popf
xor
lahf
movsb
jmp
dec
loop
adc
lds
loopne
arpl
inc
nop
push
stos
mov
add
mov
cmp
fcmove
orl
jnp
pop
xor
lahf
clc
andl
sub
xor
inc
in
push
or
jle
jg
mov
mov
lds
cmp
mov
into
mov
pop
sbbb
fisubrl
dec
xchg
dec
push
or
aad
add
int
shrb
sbb
xchg
push
sbb
sub
sbb
dec
idivl
dec
push
xchg
rcrb
cmp
mov
inc
add
add
dec
outsl
mov
popf
cmp
hlt
jmp
out
add
out
push
inc
test
mov
mov
mov
repnz
cmpsb
mov
jg
ficoms
jnp
mov
fnstenv
mov
out
push
and
xor
es
addr16
inc
jbe
mov
or
mov
inc
mov
addb
xor
inc
sahf
push
pop
mov
je
rcr
jmp
ficoms
cmp
insb
les
push
shl
in
push
aad
and
or
aam
and
mov
jp
arpl
icebp
pop
dec
cmp
das
mov
stos
pop
dec
xor
mov
lods
dec
jg
jg
je
aaa
add
in
xchg
add
mov
fcoms
fadds
mov
bound
cmpsl
loope
test
and
mov
mov
dec
sti
sub
or
fstl
ljmp
push
cltd
pushf
ficompl
aad
mov
rorb
lret
dec
iret
leave
movsl
pop
and
add
out
adc
mov
jnp
incl
int
repnz
add
ds
jge
jns
mov
sahf
xchg
mov
scas
into
mov
pop
adc
mov
xchg
mov
xchg
cld
push
sub
ss
cmc
and
into
jo
sub
push
xor
and
fldcw
and
lret
mov
pop
inc
and
shrb
and
add
add
xor
sbb
sub
or
shl
fisttpl
or
pop
es
call
jmp
dec
adc
aad
push
or
incl
jg
insb
mov
push
push
sub
dec
inc
add
dec
jbe
mov
fcom
mov
testl
into
push
sbb
sub
flds
xorl
lcall
cli
repnz
repnz
lock
xchg
and
pop
cmpl
jae
inc
ja
cmp
arpl
mov
jecxz
dec
lret
mov
dec
jmp
xor
mov
cmc
jmp
imul
sub
mov
les
sub
daa
leave
sub
add
rorb
push
mov
stos
jmp
sbb
xchg
fs
shl
iret
mov
xchg
jle
dec
and
imul
xor
xchg
bnd
jle
adc
adc
mov
movhps
pop
and
clc
in
mov
dec
mov
insb
cmp
ret
adc
xchg
sahf
adc
dec
data16
push
cs
xchg
xor
add
mov
mull
into
mov
mov
and
lahf
sub
mov
loop
das
stos
jg
in
mov
mov
sbb
mov
adc
mov
mov
mov
movsl
stos
dec
sbb
data16
aaa
inc
cli
outsl
sarl
imull
pop
xlat
sbb
enter
mov
or
ljmp
dec
ljmp
xchg
inc
xor
out
xor
mov
inc
xor
loopne
rorb
mov
fsubrs
ret
jns
icebp
mov
lcall
pop
jnp
inc
std
std
mov
xchg
scas
jno
or
jp
push
or
xchg
push
xor
push
push
push
mov
sub
js
pusha
int3
mov
fadd
add
out
rol
pop
mov
clc
jne
imul
xchg
lcall
js
adc
notl
cld
push
ljmp
xchg
push
adcl
repnz
std
ret
outsb
mov
mov
inc
popa
lahf
pop
imul
jmp
cmpb
xor
inc
stc
ds
in
jae
outsb
sub
xchg
sbbl
sbb
add
xlat
in
mov
xorl
aad
dec
sbb
pop
lods
xor
cmc
fcoms
fs
addr16
push
xlat
and
push
lods
test
test
call
dec
mov
push
pop
out
mov
fs
mov
std
int3
rorl
mov
pop
imul
ror
sbb
iret
loope
in
add
jne
push
sbbl
mov
push
lret
imul
lock
push
ljmp
shrb
mov
fistl
xor
leave
push
inc
dec
add
insb
jae
addl
mov
shll
imul
mov
hlt
insl
out
stos
mov
dec
jbe
aas
aad
and
mov
lahf
test
dec
subl
clc
js
pop
or
mov
fwait
movl
mov
iret
inc
xchg
dec
fwait
sbb
fidivrl
lock
loopne
gs
xor
xor
ja
and
sub
mov
pop
fiadds
fildll
into
sbb
or
push
push
cmpl
xchg
rcrb
inc
stos
sub
out
lret
test
sbb
rcrb
cmp
sub
pop
mov
aad
fstpt
lret
les
xchg
cwtl
stc
dec
xor
mov
loope
xor
jne
addr16
sub
adc
add
mov
mov
pop
int
push
push
movsb
jmp
mov
test
ja
xchg
mov
fucom
cmpsl
mov
imul
jg
iret
fs
pop
xor
mov
movsl
inc
add
loop
or
and
popf
stos
es
sub
out
dec
sub
into
pop
add
fldl
sahf
dec
xchg
into
jb
loope
loopne
cmc
fwait
mov
call
arpl
inc
xchg
fldl
add
stos
cmp
mov
push
push
jne
sbb
sbb
push
movsb
cwtl
jl
cmpsb
arpl
push
imul
testl
outsb
or
mov
jns
sub
in
lea
mov
in
cmp
sbb
imul
xchg
pop
inc
cmpl
sbb
cli
jbe
popf
js
mov
out
jmp
sub
hlt
or
mov
test
repnz
test
adc
movl
jo
mov
insb
add
test
pop
pop
or
int3
cmp
test
adc
pop
cmc
call
and
sbb
xchg
xchg
in
pmovmskb
fnstenv
bound
sbbl
mov
dec
push
lods
cmpsb
jo
or
jle
xor
or
daa
aaa
adc
mov
jae
fwait
stc
jl
stc
mov
enter
adc
popa
inc
fisttpll
jo
dec
or
xor
add
or
bound
pop
mov
jno
std
mov
inc
and
xchg
or
call
dec
and
xchg
sbb
cmpl
lahf
out
xor
mov
jmp
xchg
aaa
out
pop
push
iret
pop
call
pop
inc
pop
daa
imul
xlat
or
xorl
mov
dec
setp
push
out
xor
mov
adc
ja
arpl
sub
cmpsl
sbb
ret
or
loop
cmp
sub
ljmp
adc
add
xor
repnz
sbb
adc
mov
stc
pop
push
inc
rclb
in
in
insl
pop
aaa
mov
aad
insb
ja
mov
xchg
mov
loope
addb
add
dec
in
test
xchg
ret
data16
js
out
dec
sahf
in
or
imul
xchg
test
cs
pop
sbb
cs
shl
mov
pop
pop
rcl
addr16
fs
dec
insb
cmpsl
pop
and
fs
jge
in
xor
push
orb
dec
cmpsl
stos
xchg
jl
iret
in
jnp
cmp
dec
and
and
lds
int
int3
cmp
aad
xor
push
push
inc
pop
mov
dec
xor
push
sub
fisubrl
icebp
mov
testl
mov
mov
jno
cmpsb
cwtl
shrb
lock
push
orb
mov
cmp
add
insl
lret
xchg
cltd
das
lahf
mov
andb
xor
jmp
xchg
insl
dec
jb
cltd
daa
loope
dec
cld
mov
fnstsw
repz
jne
cld
nop
pop
xor
in
cmp
dec
fisttps
je
mov
xlat
sbb
scas
or
inc
push
xchg
jo
or
jb
fnsave
mov
ljmp
pushf
into
mov
cmpl
xchg
popa
sbb
cld
ficoms
xchg
mov
push
stos
push
pop
test
cmp
jmp
arpl
test
rcrl
faddl
cmpsb
out
xor
test
out
bound
ljmp
out
xchg
xlat
and
out
jl
lds
cwtl
cmp
addb
and
popl
adc
xchg
call
dec
jno
mov
je
lea
andb
jl
in
inc
and
cmpsl
hlt
xor
inc
mov
rcl
mov
mov
adc
lcall
vcmpsd
out
fmull
nop
adc
push
pop
pop
lret
mov
jmp
test
xchg
movsl
and
push
popf
movsb
mov
outsb
xchg
je
sbb
test
adc
sub
mov
pop
andb
mov
add
mov
or
push
xchg
add
xor
fs
mov
pop
xchg
mov
jp
data16
stos
in
daa
sbb
aad
pop
loop
std
xlat
push
jp
insl
outsl
clc
loope
mov
ss
cmp
add
in
dec
pop
loop
xor
mov
mov
push
fld
inc
fprem1
and
mov
sub
cltd
ret
pop
pop
mov
movl
leave
mov
and
mov
mov
cli
shll
xchg
and
lret
loopne
jp
in
cli
add
fsubrs
mov
push
add
es
stos
call
sbb
inc
add
popa
jge
fisubl
imul
fistpll
dec
int3
pop
mov
xor
pmuludq
sub
subl
pop
push
mov
inc
jnp
sarl
int3
test
push
ficoms
dec
or
and
or
fnstcw
stos
test
xor
cmpsl
mov
adc
incl
es
mov
push
jmp
lret
in
call
jbe
cmpsb
ss
dec
jno
sub
cmp
fwait
add
adc
adc
jae
push
aad
cwtl
and
imul
mov
fcmovnb
clc
rorl
inc
std
xor
insb
icebp
xchg
xchg
scas
lds
aas
xor
leave
push
das
out
jb
out
and
mov
mov
xor
pop
mov
in
or
loope
mov
jbe
addr16
sub
lret
aam
fmuls
mov
pusha
xchg
mov
test
ret
push
inc
nop
into
dec
pop
mov
pop
mov
mov
and
jae
out
in
and
dec
push
push
shrl
push
mov
sub
movsl
jns
inc
jb
pop
xor
int3
dec
cmp
mov
sub
mov
lret
push
loopne
insb
bound
jmp
outsl
cmp
fstpl
push
inc
jne
in
orl
add
imul
fld
or
popa
pop
stos
int
sbb
cmp
pop
dec
sbb
dec
int3
sub
dec
cs
add
adc
or
clc
cs
mov
cmpb
or
test
les
push
mov
cmpsl
lahf
jb
imul
jle
fists
lahf
addr16
fmull
cmp
not
mov
xchg
testb
dec
dec
xchg
aad
outsb
adc
push
or
jae
push
fidivrl
sbbl
adcl
inc
add
xchg
nop
xchg
or
movsb
pop
bound
sbb
cmp
shll
popl
movsl
ds
inc
test
add
push
pop
xor
and
cmp
xlat
cmp
sbb
out
lea
dec
imul
mov
add
or
pop
loopne
push
shlb
mov
sub
sub
xchg
or
sub
sbb
subb
pop
clc
lret
out
dec
les
jecxz
cltd
xor
sarl
iret
pushf
outsl
cmc
les
and
inc
clc
popf
aad
lea
loope
push
lds
lock
sub
push
in
js
inc
mov
and
mov
icebp
push
imul
imul
testb
mov
push
push
popf
pusha
dec
mov
dec
jae
out
je
pop
mov
push
ror
aas
xchg
mov
cmpsb
push
cmp
sbbb
in
jae
lock
rcrl
pop
sbb
sbb
out
push
mov
and
push
ja
lods
lcall
push
std
cld
mov
int3
jnp
call
data16
mov
push
jnp
cmp
movntps
sbb
xlat
pop
push
insb
and
pop
add
sbb
inc
push
sub
sbb
scas
or
jg
sbb
pop
pop
mov
outsb
sub
jbe
jle
push
inc
xchg
push
mov
push
cmp
jnp
addr16
insb
rolb
ds
loop
and
and
fwait
inc
out
stos
push
sub
lret
pop
sub
cltd
sti
add
pop
cmp
lea
pusha
test
xchg
movl
das
testl
pop
cmp
xchg
mov
ja
icebp
sub
sub
jne
or
and
jb
and
xchg
pop
fcompl
inc
call
adc
xchg
adc
pop
push
movsb
sub
fmul
mov
sahf
in
jno
adc
mull
add
mov
or
dec
dec
ds
cmpsl
mov
sbb
aaa
jecxz
mov
lds
sahf
jae
inc
mov
setb
jbe
addb
aaa
sub
jns
mov
and
arpl
sbb
mov
scas
in
xor
push
fstpt
sbb
push
shlb
and
cwtl
and
dec
and
sub
das
inc
add
popf
xchg
cmp
or
fistl
aad
add
in
mov
cmp
andb
in
mov
jp
scas
jne
xchg
push
loop
les
mov
push
popf
pop
loopne
repz
orl
sahf
fisubs
test
jns
push
dec
add
movsl
std
push
mov
out
mov
idivl
mov
mov
cmp
mov
sbb
insl
shll
lea
jo
pop
mov
push
mov
xchg
cmc
add
inc
mov
repz
das
xchg
pop
lds
sbb
popl
lcall
nop
jb
in
insb
lock
ret
sbb
pushf
test
add
imul
cmp
sub
cmp
fs
xor
lock
jl
adc
xor
push
pop
sbb
cmpsl
int3
pop
stc
xchg
cli
jp
adc
xchg
call
sbb
int3
cmp
inc
sub
lods
rorl
xchg
aad
lret
cli
int
sbb
mov
rol
or
cmp
pop
leave
pop
jmp
int3
jns
js
pusha
jg,pn
rolb
or
lea
fidivrs
xor
mov
dec
ds
rol
int
mulb
jns
stc
insb
xchg
pusha
ret
clc
adc
xchg
xor
es
cmc
cmpl
ret
ja
aam
pop
fdivrs
cmc
pusha
lahf
idiv
cwtl
call
sub
dec
leave
loope
dec
sbb
pop
inc
dec
inc
xor
push
pop
mov
cltd
cmc
rorl
sar
cmpsl
mov
pop
in
test
stos
leave
or
pop
lock
cmpsb
push
jns
inc
leave
ffree
dec
int3
xchg
sbb
iret
mov
loope
aas
ljmp
testl
popf
inc
scas
jle
cld
popf
and
dec
xchg
push
stos
je
lds
add
mov
mov
cmp
push
out
push
mov
push
pop
mov
pop
mov
cmp
sahf
jp
jno
loope
std
into
cmc
cmp
cmp
lea
mov
lods
lcall
out
out
sbb
sub
pop
imul
mov
xor
loope
dec
pop
pop
rcll
popf
inc
inc
andb
inc
xor
inc
adc
add
sbbb
cmp
xchg
dec
jae
mov
fdivrs
jne
xchg
push
adc
jmp
cmp
dec
adc
dec
jp
jns
in
cs
lret
insl
fsubs
dec
jns
jns
add
pop
xor
leave
adc
or
jp
jns
xchg
jl
and
pop
add
out
cltd
sbb
int
in
aas
inc
dec
adc
ret
jno
mov
and
pop
mov
ds
lret
pop
lods
ljmp
das
and
lret
push
xchg
mov
ds
cmp
fidivrl
pop
das
push
sbbl
sub
lds
jae
fucom
jl
fadds
stos
push
or
or
cmp
lock
daa
in
add
rep
mov
shl
mov
sub
sub
dec
push
pop
movsl
es
or
add
int3
adc
in
rcrb
jnp
movsl
sub
dec
pop
mov
sti
in
das
mov
cmp
cmp
adc
or
int
jmp
in
addl
orl
jecxz,pn
mov
icebp
lods
lods
pop
and
adc
push
mov
jle
or
lea
fnstsw
negb
test
jo
xor
outsl
inc
in
ljmp
mov
mov
inc
loopne
push
jbe
dec
cmp
and
mov
push
pop
mov
lret
mov
mov
les
cmp
shrl
mov
sbb
rcrl
xchg
ret
pop
xchg
cmp
scas
int
inc
pop
mov
jae
mov
and
mov
mov
lahf
subb
rolb
ljmp
sti
mov
ja
cmp
cltd
test
push
pop
or
cld
inc
and
push
jb
mov
dec
or
or
jmp
leave
imul
or
pop
movsb
mov
lret
mov
sarb
insb
imul
xor
inc
sbb
scas
jp
mov
sahf
dec
incb
cmp
xchg
bound
leave
add
les
xor
dec
mov
in
pop
and
out
dec
and
or
lods
xlat
stc
cmp
jmp
gs
cmp
repnz
dec
int3
xor
mov
icebp
inc
or
mov
cmc
cmp
insb
mov
add
jno
xchg
lcall
pop
add
xor
lods
mov
sbb
popa
flds
rdmsr
mov
mov
scas
in
insl
adc
lret
xlat
push
xor
xorb
inc
sahf
and
mov
pushf
cmp
sahf
aas
pushf
cwtl
cmp
ljmp
int
xor
xor
mov
mov
fcmovnb
mov
sub
popf
pop
pusha
mov
ljmp
adc
cmc
xchg
push
jb
push
pop
in
pop
sbb
pop
insl
fidivrl
mov
ret
mov
add
lahf
mov
fstpl
aad
and
ljmp
xchg
movsl
fimull
cltd
jae
bound
mov
xchg
adc
pusha
les
jle
xor
cwtl
sub
cli
mov
xorb
arpl
cli
stos
or
pusha
jmp
out
mov
adc
in
call
ret
dec
push
imul
int
out
xchg
sub
xor
or
jg
jge
mov
in
xchg
sbb
ds
ja
mov
lock
xor
lock
push
not
popf
jmp
in
test
mov
sub
test
jno
and
mov
mov
and
stos
movsb
mov
or
cmc
jns
jae
mov
out
sti
loope
push
notb
js
lcall
loop
add
sbb
shll
cld
and
sbb
adcl
push
pop
scas
je
das
sbb
sahf
cmp
fmuls
mov
adc
cmp
and
icebp
cwtl
lock
sbb
dec
inc
push
mov
insl
adc
pop
inc
jmp
push
sbb
std
movsb
push
mov
jbe
mov
mov
test
aam
fisubl
mov
mov
add
int
xorl
fistps
mov
enter
fwait
in
mov
add
cmp
sub
popf
dec
imul
lcall
lcall
jno
gs
cli
jb
cltd
and
dec
and
xchg
jb
mov
or
dec
enter
int3
dec
xor
xor
push
sub
iret
cltd
sub
ror
dec
sub
adc
or
add
fwait
div
lcall
inc
fisubs
sarl
inc
in
ljmp
adc
mov
cmc
fidivs
sbb
push
out
sub
adc
imul
stos
dec
es
cmc
fiaddl
mov
mov
pop
bound
adc
push
shll
test
je
js
inc
mov
sbb
push
inc
mov
call
pusha
popf
test
cmp
pushf
outsl
pusha
pushf
jmp
aad
fwait
test
mov
in
sbb
jno
in
jno
pop
fcoms
mov
iret
mov
xor
stos
add
xchg
pop
push
inc
push
addl
and
sub
mov
add
lret
negl
push
xor
dec
ja
mov
and
push
lcall
xor
call
jg
jl
xorl
in
cs
sub
sbb
jg
adc
lock
xchg
dec
adc
insl
xlat
int3
cmp
dec
mov
sub
lds
dec
aaa
ljmp
loop
cmp
movsl
repz
lods
out
fdivl
faddl
pop
xor
jno
idiv
jns
repz
cmpb
fucom
adc
mov
push
mov
stc
mov
mov
push
imul
or
push
ja
das
mov
jl
mov
jno
mov
sub
orb
in
push
xchg
call
mov
loop
bound
test
in
cmp
lahf
xchg
sub
arpl
mov
pushf
push
sub
or
cli
lock
or
cmpsb
xchg
lcall
into
inc
pop
in
out
mov
loop
pop
clc
decl
iret
xchg
add
push
test
mov
das
das
xor
or
add
or
ret
push
mov
ficomps
cwtl
adc
lods
xchg
sub
mov
and
repnz
rorl
rdpmc
std
lea
push
mov
mov
mov
scas
aam
mov
subl
cmp
insb
sbb
nop
cmpsb
outsl
imul
shld
or
cmp
mov
ljmp
in
test
scas
cmc
sbb
push
xchg
inc
pop
aam
nop
xchg
loopne
pusha
xchg
jns
mov
test
adc
cmpsb
cmp
push
jnp
repz
pop
xor
push
fs
jle
int3
xchg
xchg
iret
je
xchg
sbb
mov
inc
cmp
dec
adc
cmp
push
and
push
lds
push
cltd
in
and
bound
jge,pn
inc
shll
fdivrl
and
jns
lcall
faddl
cmp
pop
mov
sbb
std
jle
aaa
xchg
jle
mov
aad
movups
xor
stc
les
adc
ja
imul
imul
sub
out
scas
sbb
push
add
xlat
lahf
cld
int
enter
je
mov
nop
xor
rcrl
cmp
push
stos
pop
in
mov
popa
test
jg
mov
push
xorl
jge
aam
sub
sub
or
adc
or
loope
mov
add
stos
gs
outsb
xorl
inc
aam
add
insb
cmpb
jb
xor
mov
mov
addr16
and
out
repz
daa
jno
loop
data16
stc
ret
daa
mov
lock
dec
pusha
ss
pop
int3
lock
fdivr
cmp
and
jecxz
mov
mov
cmpl
mov
fwait
push
jae
stos
mov
xor
adc
call
inc
mov
mov
daa
in
mov
lret
sbb
add
mov
cmp
jecxz
and
xlat
outsb
xor
sbb
js
xchg
xor
inc
lret
dec
fwait
jne
xchg
lahf
pushf
sub
push
cmc
into
subl
lret
xor
or
aad
mov
cwtl
stos
push
hlt
aad
sbb
lods
mov
aas
mov
pop
mulb
cmpsb
sub
jge
rol
inc
push
mov
push
and
push
jecxz
daa
cmp
bound
ljmp
push
bound
push
loopne
dec
cs
push
jge
shl
cli
add
inc
mov
call
mov
fiadds
movsb
pop
and
mov
cwtl
push
xchg
fisubs
add
pop
mov
xchg
data16
sub
scas
and
add
shlb
leave
pop
inc
xchg
inc
jae
aam
das
cmp
jae
fisttpll
aaa
mov
push
cld
push
push
sbb
lds
mov
push
addr16
fildl
daa
loopne
dec
or
inc
stc
sbb
and
cmpsb
popa
jle
dec
insl
inc
sub
scas
insb
or
push
jae
add
or
inc
mov
call
out
mov
neg
fs
mov
xchg
push
jnp
test
adc
cltd
bound
dec
mov
push
mov
push
mov
add
push
jno
jmp
loope
sub
cmc
out
push
in
and
jb
lahf
mov
inc
xor
lods
pop
pop
sarl
sub
mov
lods
or
mov
mov
imul
in
sbb
loop
adc
out
cmc
add
mov
cmpsb
fwait
stc
inc
test
mov
jmp
xchg
aas
stos
ljmp
ljmp
insl
call
and
pushf
xor
ret
jmp
test
xor
ret
imul
call
in
das
pop
push
in
fistl
lahf
jmp
call
fs
enter
xchg
pop
and
sahf
dec
ret
pusha
fcomip
ja
push
xchg
cmpsb
mov
mov
je
and
clc
sahf
push
dec
sbb
inc
sub
scas
cmp
mov
xor
pushf
test
sub
addr16
dec
aaa
out
inc
xchg
cwtl
adc
ljmp
insb
fbld
hlt
adc
in
push
xchg
std
mov
out
jae
in
pop
ficoml
imul
mov
fsts
test
or
push
sbb
jl
leave
pop
jnp
mov
enter
cwtl
insl
push
xlat
inc
insb
mov
aad
in
pushf
test
inc
or
sarb
divl
test
iret
inc
pop
inc
sbb
sub
add
or
fistpll
inc
xor
xchg
cmp
rorl
imulb
adc
icebp
jns
push
sbb
or
call
out
decb
mov
adc
rolb
out
push
mov
pop
stc
push
jge
lods
pop
out
lds
cmpsb
sbb
or
sti
ret
sahf
repz
mov
jns
lret
xchg
add
into
lods
jp
loope
and
out
fists
rorb
pushf
push
std
inc
inc
loope
pop
dec
adc
cmpsb
jnp
add
jnp
push
and
inc
in
push
jecxz
mov
xor
ja
sahf
adc
es
mov
jb
mov
test
sbb
fs
insl
jo
gs
sub
dec
jne
loopne
sub
add
jae
and
sahf
cmp
pop
cmp
push
adc
push
ret
xchg
sbb
enter
rorl
cmp
cmp
mov
aad
lcall
sti
ja
and
lods
arpl
inc
stos
stc
jnp
jecxz
popa
push
pushf
loop
and
mov
shll
xor
dec
dec
and
xor
bound
stc
mov
dec
lds
pusha
call
inc
or
push
cltd
mov
addb
test
iret
jne
pop
pop
adc
stc
mov
jbe
jle
cld
stos
aad
cmp
mov
jnp
mov
mov
aad
xor
cwtl
or
lcall
fnstcw
std
cmc
repnz
scas
test
cs
pop
xchg
inc
inc
pop
dec
aas
sub
fwait
clc
push
in
outsl
mov
div
or
xchg
add
sbb
add
mov
repnz
imul
fldenv
aaa
pop
mov
xor
ljmp
fsubs
popf
out
mov
sbb
jne
cmpsl
sub
sbb
out
addl
jp
int
test
jbe
imul
shll
jmp
lahf
sub
fs
dec
xchg
pop
loope
clc
dec
arpl
addr16
je
les
fldt
dec
fistpl
xorb
push
push
lret
adc
sahf
sahf
rorl
testl
shrl
inc
mov
add
mov
sti
inc
sub
repnz
cmpl
shl
push
push
jno
ds
mov
xchg
lahf
jge
inc
rcrl
sub
mov
or
arpl
movsb
inc
cmpb
je
movsb
cs
adc
jp
cmpsl
dec
sahf
out
loope
sbb
int3
in
repz
outsb
pusha
mov
ds
imul
dec
lods
inc
les
cmpsl
push
cmp
add
dec
aam
int3
sub
dec
lods
test
fsubrs
stc
cmp
dec
sbb
xchg
hlt
mov
pop
jg
sub
adc
test
clc
add
shl
lods
add
inc
and
shrl
xchg
dec
mov
dec
stc
scas
notl
jns
add
push
adc
and
cmp
mov
pop
movsl
jecxz
cld
sbb
xor
mov
js
inc
push
push
bound
or
dec
sbb
jg
movsb
mov
lcall
or
nop
pop
scas
cmp
push
xchg
adc
movsl
xor
xor
lahf
movsl
jmp
or
and
pop
cwtl
pop
ja
or
push
test
push
sbb
pop
sub
pop
mov
cmp
shlb
inc
push
sub
das
or
repz
push
jle
test
jns
add
je
sbb
mov
push
or
jno
repnz
adc
push
cltd
ja
mov
adc
mov
mov
mov
add
loope
add
inc
out
negl
dec
movsl
add
mov
add
push
out
in
dec
in
push
test
jmp
xor
ljmp
stos
imul
shrl
imulb
mov
push
addr16
pop
jb
ret
pop
mov
mov
std
add
leave
out
leave
adc
or
movsb
ret
pop
inc
insb
sbb
das
jg
mov
adc
into
jne
adc
jmp
sahf
popa
repz
cli
and
push
enter
jns
aaa
xchg
fdivr
adc
out
mov
push
mov
fildll
inc
mov
testl
aam
and
fisubrl
pop
cli
sbb
je
test
hlt
int
jae
les
data16
and
mov
sbb
pop
cmp
in
repz
adc
cmpsl
jne
and
and
push
lea
mov
je
cmp
repnz
jge
push
repnz
ret
imul
test
data16
sbb
lea
push
and
aam
jle
popf
xor
test
push
dec
mov
arpl
push
lret
out
les
inc
rorl
inc
faddl
insl
sub
xor
jae
mov
xchg
pushf
pop
test
dec
cmp
lret
mov
push
into
inc
jns
lahf
xchg
sub
imul
arpl
pop
pop
cli
push
test
mov
cmp
push
add
xor
xchg
or
test
test
loopne
aad
sub
aas
leave
jno
stc
fwait
and
jno
jnp
aas
fs
jp
cli
scas
lret
aam
xor
lea
sub
mov
jge
push
xor
call
mov
pusha
mov
ds
xor
cltd
inc
enterw
fidivrs
fndisi(8087
or
rcll
jnp
out
push
addl
pop
aam
out
or
xor
mov
sbb
push
push
sub
push
mov
push
push
ret
xchg
jbe
mov
dec
scas
jl
pusha
push
xchg
cmpsl
mov
dec
lret
cmpsl
loop
cmp
jb
call
mov
jns
test
out
scas
daa
adc
push
pushf
push
test
subl
dec
jecxz
dec
sti
mov
jno
sbb
popf
adc
lcall
jno
mov
pop
jmp
pusha
mov
fs
js
sub
cld
leave
loopne
and
fisubs
dec
out
xchg
xchg
xor
xor
mov
mov
pop
jb
push
cmpsb
xor
sub
popa
adc
jle
cltd
xchg
lods
fsubrl
daa
out
loop
gs
scas
iret
outsl
pop
into
repz
stos
jno
inc
lods
add
or
sub
dec
cmp
inc
loope
push
nop
sub
lret
xchg
shrl
xchg
enter
and
scas
addl
aas
jns
jae
and
mov
jmp
fs
cltd
mov
and
sti
test
arpl
push
or
jbe
mov
adc
lock
cmp
repz
enter
jo
push
push
out
cmp
loop
sub
xchg
inc
data16
out
dec
xor
mov
repnz
repz
xchg
flds
push
arpl
or
sbb
or
mov
push
pop
xor
lods
inc
call
pop
adc
fwait
addr16
bound
daa
into
pop
cwtl
jo
sub
out
daa
pop
ficomps
adc
pushf
inc
out
sub
or
xchg
mov
jle
and
data16
mov
pop
das
icebp
xchg
mov
xor
jle
insl
push
je
sub
dec
and
jl
cmpsl
fstpl
inc
insb
cmp
data16
dec
rcr
inc
mov
ds
aaa
mov
add
xchg
ret
add
inc
out
sbb
jns
fists
ja
in
push
aad
and
ds
insb
jns
loop
xchg
sbb
jbe
and
jmp
sbb
adc
or
sbb
fs
jo
lods
jae
and
xchg
cmp
aam
sbbl
mov
xchg
fsubl
or
leave
cmp
les
cs
test
mov
imul
inc
iret
aaa
and
sub
mov
lds
cli
out
loope
sahf
out
jle
sbb
dec
insl
xchg
xchg
push
in
cmp
pusha
sub
insl
push
mov
mov
add
mov
jmp
cmp
call
dec
mov
push
cmp
adc
ret
out
add
aas
call
jns
into
std
ss
pop
jne
xor
insl
das
cmp
fwait
test
loop
call
pop
adc
push
outsl
jle
das
inc
mov
inc
sbb
loope
push
push
xchg
sbb
ja
mov
and
cmc
pushf
dec
mov
incb
pop
cmp
mov
pushf
int3
insb
push
aad
xchg
mov
add
js
xlat
inc
lds
into
cmp
outsb
faddl
enter
cmpsl
fnsave
jb
ljmp
push
aaa
push
ret
insb
cli
into
and
out
mov
push
adc
mov
in
mov
adc
shl
or
jp
add
push
push
insb
jp
mov
stc
clc
xlat
repz
loope
mov
in
leave
hlt
mov
or
lret
lret
pop
mov
out
lret
pop
imul
mov
pop
mov
sub
pop
jb
test
int3
icebp
lret
mov
ja
or
stos
mov
xor
xorl
cs
jecxz
push
pop
call
jo
ljmp
insb
push
cmp
test
inc
cmpsl
mov
arpl
jns
lock
subb
cmp
or
out
das
mov
pop
inc
jb
repnz
push
adc
rolb
cltd
test
pop
push
out
mov
xor
mov
out
sbb
mov
or
dec
mov
sub
es
push
push
inc
lcall
push
das
sub
inc
lods
sub
cmpsl
fcoms
inc
lahf
dec
dec
mov
sti
xor
jmp
xorl
mov
arpl
lea
adc
rolb
jecxz
popa
aas
aaa
out
xchg
dec
cli
and
cmpsl
and
call
mov
pop
cs
clc
jecxz
psadbw
enter
sahf
xor
lods
dec
out
outsl
in
pop
sub
push
bnd
inc
xchg
inc
or
xor
xor
sbb
or
lcall
scas
xchg
repnz
push
imul
cmc
cmpsl
jbe
punpckldq
and
pushw
in
dec
aam
and
shll
pop
jge
push
popf
adc
aas
call
cmp
pop
and
pop
or
lods
sbb
add
lretw
stos
mov
xchg
test
daa
mov
shlb
decl
adc
push
pop
push
pop
arpl
ret
sbb
ss
sub
lret
sti
or
or
sub
xchg
push
or
faddl
loop
and
mov
hlt
cmp
and
aaa
or
stos
stc
testb
in
fisttps
cld
ret
jno
cltd
add
cmc
mov
lcall
test
xchg
push
push
push
add
mov
fs
in
inc
bound
and
pusha
jecxz
xchg
and
sbb
stc
jae
mov
divb
sbb
push
mov
ljmp
cmp
cmp
repnz
sahf
fists
mov
rcrb
je
mov
lds
lahf
mov
push
xchg
mov
push
mov
push
fwait
inc
rorb
mov
mov
negb
dec
aaa
cwtl
sub
cmp
test
inc
and
add
cs
loop
and
mov
mov
pop
test
leave
push
push
xchg
jns
cmp
cmpl
insb
adcl
mov
pusha
mov
lock
jb
pop
add
mov
lea
sub
mov
imul
sub
sub
scas
arpl
add
cmc
test
dec
xchg
loopne
scas
outsb
xchg
sub
fsts
and
stos
pop
mov
jecxz
sarb
repz
pushf
scas
inc
pop
push
xchg
shll
mov
inc
ja
mov
pop
jb
mov
mov
pop
int
mov
popf
push
movsl
mov
shlb
lods
jg
fsts
xchg
orb
out
insb
sahf
repnz
outsl
scas
lret
xchg
sub
xchg
jns
scas
xchg
enter
stc
push
out
fstps
loope
test
mov
out
sbbb
jb
adc
cmpsl
sti
mov
pop
aas
push
xchg
push
testb
outsl
jae
pop
testl
xchg
test
add
clc
mov
jg
inc
fcmovb
mov
xchg
push
jmp
push
or
mov
sbb
ljmp
scas
xor
shll
xchg
lea
lret
jns
or
loop
cmpsb
ret
adc
je
outsl
lahf
jno
loope
aas
xor
jl
inc
outsl
mov
loope
push
loope
aam
or
mov
pop
mov
cmp
cmp
pop
and
mulb
inc
push
mov
iret
or
cmp
subb
adc
sub
inc
or
fcom
jmp
mov
icebp
icebp
mov
or
movsl
nop
cmp
xchg
jb
mov
push
xor
xchg
std
dec
or
xchg
jmp
mov
movl
mov
inc
pop
push
adc
test
pop
xlat
ss
sahf
jle
jecxz
leave
sub
andl
jge
mov
add
add
incl
ret
lcall
xchg
mov
xchg
mov
cld
mov
xor
xchg
arpl
mov
ret
inc
lea
mov
inc
xor
jmp
mov
inc
rorb
mov
aas
call
jmp
push
out
jp
dec
repz
xlat
ret
fcmove
rorl
and
das
insl
add
inc
pop
xchg
or
sbb
test
sbb
push
jl
mov
xorb
inc
xchg
add
mov
adc
dec
iret
js
cmove
add
out
dec
sub
mov
sbb
mov
adc
fsub
xor
fstl
iret
pop
or
hlt
gs
ljmp
mov
push
movsl
push
insl
jb
iret
jp
sub
fistps
or
and
fcomps
mov
mulb
mov
pop
jb
pop
js
mov
jnp
push
and
jne
add
aad
cwtl
out
push
mov
mulb
aad
pop
mov
scas
mov
in
cmpsl
mov
cs
mov
mov
mov
sub
lods
cmp
rcll
lods
insb
jl
xor
inc
jb
out
and
adcl
and
or
xorb
shlb
js
das
jno
leave
sub
push
lods
mov
inc
std
addr16
inc
cmpb
rcrb
xor
sbb
bound
push
fwait
cs
xchg
sbb
loopne
inc
in
sub
repz
clc
xchg
xchg
ret
bound
test
cli
mov
adc
pop
jecxz
mov
out
xorb
cwtl
inc
mov
add
daa
aam
mov
push
fwait
add
mov
lahf
fcomi
in
jecxz
sti
fildll
out
js
pop
cs
or
add
jno
popl
ja
repnz
pop
hlt
mov
push
stc
push
les
arpl
or
mov
mov
jl
inc
cltd
jns
mov
les
jmp
das
fstpt
dec
mov
mov
sub
add
test
das
fdivrs
dec
jmp
mov
add
sub
jge
adc
and
cli
ror
mov
pop
mov
mov
rcrl
xlat
mov
adcl
fptan
inc
jo
dec
pop
dec
add
adcb
push
mov
xor
hlt
popa
bound
mov
inc
ror
dec
popa
rclb
xor
cmpsl
or
lods
das
jbe
jnp
add
mov
sbb
rolb
jb
loopne
rcrl
mov
nop
lods
dec
cli
pop
xor
pop
xchg
lods
fcoml
or
sub
push
rcrb
cmp
mov
and
cmp
sub
pop
subb
repnz
add
out
mov
aam
bound
sbb
xchg
cltd
pop
imul
jecxz
insl
sbb
or
sbb
int3
jae
mov
or
outsl
jne
mov
jmp
jno
sub
scas
jmp
xorl
adc
sub
pusha
call
js
aad
dec
in
mov
loope
xchg
out
inc
aam
test
sbb
adc
out
sub
inc
adc
mov
sbb
js
imul
lahf
sub
std
lods
pop
mov
mov
lret
icebp
pusha
sti
rcrb
mov
dec
xor
clc
les
enter
lock
dec
xchg
dec
enter
xor
xchg
in
or
and
or
xor
shrl
loop
in
mov
dec
cmp
aad
test
adc
dec
cs
dec
xchg
or
mov
cmp
test
and
lahf
mov
or
lahf
lods
xchg
dec
shl
lods
jg
ret
add
call
jge
out
fs
add
out
xlat
shr
aas
dec
push
mov
pusha
and
insb
mov
in
jb
pop
or
fdiv
test
adc
ljmp
mov
add
xor
in
std
pop
jp
add
clc
into
sub
lret
fldl
in
in
mov
negb
stos
pop
dec
jle
xchg
xchg
mov
shll
inc
mov
mov
jbe
fnsave
adc
repnz
jp
aas
mov
sbb
mov
stc
pop
pop
addr16
sbb
dec
xlat
into
pop
cmp
adc
cli
in
or
lds
mov
fildll
aas
enter
mov
std
shrl
add
cmp
lea
std
clc
pop
mov
push
insb
int
jmp
adc
cs
repz
and
and
shll
dec
lock
mov
jne
repz
ror
push
cli
push
mov
pusha
vmovapd
in
mov
js
imul
scas
cmp
out
adc
or
lcall
gs
pop
shrl
clc
sub
dec
or
stc
lock
push
push
cmpsl
enter
fsub
adcb
addr16
push
xchg
popf
fcoms
mov
pushf
pushf
mov
add
and
into
mov
push
adc
fwait
cli
scas
out
pusha
mov
mov
push
push
mov
into
mov
aaa
and
jl
pop
dec
in
out
xor
loop
std
cmp
mov
lds
mov
mov
test
movsl
dec
pop
sub
and
cmp
xor
pop
cmp
lods
add
jno
test
jo
fcompl
popf
clc
jecxz
mov
xchg
adc
repnz
pop
loope
sub
mov
loop
and
and
xlat
xor
clc
and
lcall
lods
xchg
jge
inc
fucomi
lea
jnp
or
sub
inc
push
and
jle
into
fisttpll
add
jb
or
ret
cwtl
movl
loopne
dec
lcall
ret
mov
lods
sbb
push
out
dec
cmp
dec
sbb
in
or
push
mov
inc
das
xor
sub
push
stc
rcrl
cli
or
loopne
leave
adc
inc
inc
les
mov
mov
adc
in
sub
gs
repnz
and
faddl
mov
lock
push
mov
xchg
jns
scas
mov
cmp
aam
fidivrs
iret
aad
icebp
mov
outsl
sarl
popa
add
lock
dec
mov
xchg
sbb
mov
fists
and
pop
inc
xchg
pop
jne
sbb
sub
movsl
mov
or
repz
andl
test
je
inc
ss
je
push
out
outsb
inc
push
cmp
outsl
fcoml
fsub
dec
stos
sbb
and
or
inc
ficoms
mov
xchg
adcl
sub
lock
lahf
stos
arpl
xor
leave
popa
dec
ret
ret
pop
or
jmp
lods
fisttpll
inc
sbb
jp
popf
push
push
xchg
cmp
push
pop
test
push
push
xchg
lods
add
xor
loopne
dec
pop
add
lret
jge
jae
mov
iret
je
mov
inc
adc
loope
in
xchg
push
es
out
or
call
add
lock
adcb
popf
mov
into
loop
jecxz
pop
testb
cmp
aas
inc
cli
lods
into
fsubl
mov
andl
out
orl
pop
js
adc
ficomps
pusha
inc
adc
sub
fiadds
cmp
into
add
and
lock
shl
fwait
jle
cmp
or
in
idivb
ss
je
adc
int
cs
leave
pop
testb
mov
mov
cmc
jl
icebp
outsb
pop
mov
addr16
loope
and
cmp
sbb
movsl
xlat
cli
xor
pop
lcall
outsl
xchg
pop
dec
push
fistps
and
out
in
dec
inc
test
sti
ja
pop
scas
jne
xchg
fimuls
jae,pn
xchg
popa
xor
xlat
fists
inc
call
xchg
outsl
jge
lcall
cmpsb
leave
ret
mov
add
add
add
cmpsb
pusha
rolb
jb
pop
into
xor
ficoms
push
and
mov
sub
gs
fldcw
inc
inc
lods
xlat
pushf
inc
mov
jns
mov
insb
xchg
mov
pushf
sub
jne
xor
insb
bound
aas
shrb
stos
mov
xlat
mov
pop
dec
mov
jp
add
xor
mov
call
pop
arpl
and
insl
movsb
test
aaa
rcrl
inc
ret
call
mov
push
in
add
lods
mov
xchg
xchg
dec
fnstcw
test
outsl
add
aam
idivl
jle
xchg
mov
or
into
pop
jg
into
mov
push
jp
call
pop
adc
mov
popf
cmp
lret
push
or
pop
dec
sbb
aas
xor
fwait
dec
int
int3
sub
jno
in
pop
and
or
shrb
shll
cmpsl
or
shrb
popw
rcrl
enter
mov
cmpsb
stos
jno
psubsb
xchg
sbb
sbb
push
cmp
out
and
repnz
mov
nop
repnz
push
addb
add
push
xlat
cmpsl
es
lods
dec
mov
mov
mov
leave
ljmp
xchg
cmpsb
dec
or
test
add
add
adc
decb
pop
gs
push
xchg
sbb
mov
xchg
nop
add
stos
or
inc
mov
xchg
js
cmova
ss
lret
arpl
xlat
out
cmovns
dec
dec
dec
push
popa
xor
cmpsl
loopne
push
das
inc
insl
pushf
adc
aaa
lods
xchg
popf
jg
add
pusha
cmp
scas
lcall
scas
sub
cwtl
pop
repnz
jecxz
popa
outsb
add
mov
je
jns
inc
mov
scas
nop
iret
add
and
add
js
xor
add
jl
test
enter
imul
hlt
mov
repz
and
push
sti
pusha
daa
sbb
imul
fst
push
out
fcoml
mov
into
inc
pushf
mov
cmp
sbb
dec
call
mull
addb
leave
out
lock
jb
dec
push
arpl
mov
xor
mov
outsl
les
iret
ret
push
cmp
cmp
mov
cwtl
leave
jecxz
pop
ret
inc
movsl
dec
dec
mov
xchg
adc
in
lret
fsubr
add
push
push
inc
mov
adc
dec
sti
mov
call
jge
into
xchg
adc
mov
imul
mov
xor
dec
mov
aaa
sub
pop
mov
push
popa
ss
mov
js,pn
jecxz
inc
mov
shl
mov
rcrb
fiadds
jle
lods
fucomi
lahf
fcoms
and
ljmp
pop
mov
cmpsl
or
pop
mov
movsb
fbstp
sti
pushf
pop
loopne
xor
insl
jge
mov
divb
adc
aaa
and
and
xor
test
sahf
mov
inc
in
and
popa
inc
hlt
ficoms
cmp
pop
jb
std
ret
insb
mov
sbb
and
out
scas
mov
dec
or
or
icebp
lods
adc
flds
sub
ds
cmp
cmc
xchg
stos
jnp
rorb
in
sub
sub
jnp
xchg
insl
fsub
cld
outsb
rolb
pop
leave
push
mov
rcrl
add
mov
jne
in
outsb
mov
gs
mov
mov
add
repnz
std
push
std
xor
push
mov
sub
push
cld
cmp
sub
inc
inc
lock
sbb
pop
mov
mov
mov
sub
cltd
pop
push
jb
ljmp
mov
push
mov
mov
dec
insb
test
dec
or
dec
pop
rorb
fistpll
outsl
inc
nop
push
mov
test
mov
push
lods
outsb
add
es
mov
ds
mov
loopne
repz
or
imul
cwtl
inc
pusha
cmp
xlat
push
and
lods
or
into
sub
popa
aas
push
shll
stos
add
adc
lret
or
clc
sub
sbb
pop
call
mov
jl
test
push
pop
imul
bound
xor
mov
mov
out
add
mov
add
scas
test
mov
and
repz
sub
ljmp
or
jo
test
aaa
mov
movsl
xor
push
in
in
dec
shll
xchg
hlt
and
adc
int
fcoml
adc
mov
subb
out
shlb
adc
pop
xor
or
sbb
jmp
or
sahf
push
jnp
adc
xor
mov
or
iret
repz
dec
dec
fsub
leave
enter
pop
rolb
dec
ror
mov
in
cltd
lock
jae
sbb
or
mov
sbb
mov
scas
negl
pop
cmpsb
enter
mov
cmc
xorl
dec
sbb
mov
out
mov
pop
jno
cmpsl
in
pop
pop
insl
or
push
pop
bound
pop
hlt
aas
ds
pop
fldt
loop
cmp
repz
aam
push
push
sbb
fs
in
cltd
mov
jns
imul
inc
test
enter
mov
and
sub
pop
sbb
and
xor
push
cmp
ficomps
cmp
push
mov
and
std
in
scas
dec
leave
aam
cmp
mov
add
add
pop
ja
rolb
aas
lods
xor
insb
stos
or
pop
and
sbb
mov
pop
mov
push
sbbb
cmpsb
jg
pop
sbb
push
mov
imul
into
rcll
push
push
cld
sub
mov
lods
dec
pop
ficomps
test
xor
push
xchg
das
je
inc
xchg
dec
push
dec
bound
test
mov
inc
ds
push
lods
and
sti
filds
scas
sub
or
repz
or
jg
jno
dec
mov
inc
daa
sbb
addb
inc
movsl
clc
sub
cmc
mov
push
nop
movsb
fwait
push
and
faddl
cwtl
and
or
jmp
xor
sub
iret
add
sub
mov
add
in
ret
lods
mov
andl
daa
xor
xor
sahf
adc
cs
and
sub
add
aad
mov
icebp
sarb
dec
lcall
inc
push
xor
sub
pop
cld
out
or
mov
xchg
fsubr
adc
mov
sbb
bound
pop
in
mov
cmp
pop
aam
cmpl
in
sbb
mov
mov
into
out
mov
xchg
insl
aaa
popl
mov
out
xchg
addr16
out
shll
sbb
lods
ja
inc
pop
xor
jne
iret
mov
in
or
jge
test
dec
xor
xchg
sarb
mov
loopne
mov
cmp
outsl
adc
adc
cmp
out
or
push
sub
xor
clc
loope
jmp
pop
add
ret
mov
adc
adc
inc
outsl
cmp
and
jb
sub
dec
sti
decb
xchg
out
xor
roll
fwait
mov
push
adc
shl
jmp
pop
call
push
popl
inc
jbe
mov
out
pop
test
pop
or
cmpsl
aas
mov
in
ja
loope
js
add
nop
cmp
jns
adc
xor
sti
insb
xor
andb
mov
out
mov
add
push
repz
mov
pop
cmp
mov
dec
cmpsb
or
daa
cmp
jmp
mov
mov
and
outsl
in
inc
sub
les
dec
mov
popf
movsb
push
out
xor
subb
cmp
popa
mov
adc
push
inc
les
in
add
hlt
int3
lea
dec
call
jne
out
adc
cmp
inc
sub
shrb
andl
xor
jge
cmc
jae
iret
into
xchg
push
movsb
popa
test
clc
ds
mov
dec
add
push
mov
pushf
add
xchg
call
outsb
mov
jecxz
inc
inc
xor
dec
shlb
add
mov
jl
adc
add
cmp
push
fadd
ljmp
jns
mov
out
loope
popa
mov
push
sbb
dec
leave
sub
and
jg
fwait
aas
mov
pop
mov
int3
xor
stc
std
inc
xor
adc
jmp
jae
out
push
and
dec
stos
clc
mov
out
repnz
sbb
dec
adc
xor
cmp
fcom
adc
in
sub
add
stc
mov
xchg
adc
enter
mov
out
push
sub
dec
out
cmc
imul
add
mov
loop
mov
adc
daa
xchg
inc
xor
stos
stc
mov
cmc
fwait
xchg
insl
int
xchg
hlt
shrl
rcrl
sbb
adc
xchg
fsts
dec
inc
or
dec
dec
xor
jno
mov
lea
adc
ret
arpl
fwait
mov
or
gs
mov
adc
aad
dec
xchg
lods
dec
fsubp
test
mov
rcll
push
roll
sbb
testl
ret
addb
call
in
mov
or
int3
mov
mov
jae
and
jae
jmp
dec
xor
clc
adc
ret
int3
add
mov
inc
mov
cmpl
fidivrs
dec
stos
ret
mov
jb
mov
xor
xchg
push
frstor
mov
push
lahf
xor
push
dec
sbb
enter
sbb
push
mov
scas
in
add
and
cmp
mov
jne
dec
inc
fstps
or
xchg
or
out
rcrl
dec
push
bound
repz
push
xchg
mov
movsb
add
xorl
iret
pop
in
arpl
into
jne
sbb
cmp
adc
pop
jns
in
int
jns
add
push
add
lahf
inc
jge
inc
outsl
adc
stos
loop
xchg
push
test
dec
pop
mov
lahf
cmp
and
mov
stos
aam
adc
cld
into
mov
mov
lcall
pop
pop
push
add
and
push
push
frstor
nop
sbb
aaa
cli
pop
cld
pop
es
xchg
dec
add
push
sub
in
push
divb
cmp
mov
sti
pop
inc
std
lret
jecxz
sbbb
lods
sbb
je
aad
or
sbb
mov
imul
mov
call
shrl
rorl
jmp
orl
sbb
js
call
mov
sbb
jnp
inc
into
xlat
in
stos
sub
fimull
add
mov
pop
cld
icebp
xchg
sub
divb
std
cmc
or
cld
lods
cmp
lret
inc
push
scas
pop
jns
jno
fmull
fdivl
xchg
sub
adc
pop
xchg
jl
aas
test
data16
dec
adc
cltd
icebp
fsubrp
daa
repz
push
stos
jae
push
dec
push
lret
jge
jecxz
mov
ret
fbld
push
sub
dec
iret
cmc
in
or
arpl
aaa
mov
push
mov
inc
mov
notl
test
loopne
mov
jp
inc
add
cmc
int3
inc
pop
es
push
push
push
mov
mov
ljmp
jns
in
bound
or
adc
and
popf
into
push
xor
out
insb
fadds
push
pop
ret
lods
in
mov
mov
jmp
mov
popf
scas
outsb
mov
out
cmp
adc
cmp
adc
in
xchg
mov
jo
psrlq
mov
mov
lcall
outsl
cmpsl
xchg
xlat
loope
xchg
addr16
leave
pop
in
xor
leave
add
jmp
jns
jecxz
movsl
or
in
cli
sbb
cmpsb
cld
push
add
jns
mov
js,pn
adc
std
add
and
mov
adc
sub
int
adc
out
push
xchg
pop
scas
mov
push
imul
lods
repz
das
mov
inc
in
push
mov
push
insb
jbe
leave
lea
push
pop
cmc
sbb
inc
jg
cmp
subl
pushf
or
testb
add
fidivl
scas
insb
fcomip
jmp
mov
sahf
mov
jle
insb
push
pop
cli
mov
cmp
dec
xor
xchg
jns
fdivrl
js
mov
add
lahf
cmp
fiadds
adc
pop
int3
aas
imul
stos
mov
sbb
cmp
aad
pop
gs
pop
push
cltd
in
pop
rclb
dec
into
xlat
ret
xchg
sbb
fsubr
pop
xchg
and
addb
pop
or
mov
mov
cmp
jnp
inc
ss
aam
fadds
bound
sbb
in
je
jle
leave
popf
test
clc
cmpsl
adc
fldl
mov
mov
pushf
cld
scas
dec
js
mov
jl
adc
lods
jmp
or
push
fmul
xchg
push
mov
xchg
into
rcrl
xchg
pop
stos
xor
sub
mov
ja
fwait
add
mov
lret
mov
sti
mov
inc
add
js
pop
mov
daa
imul
push
insl
xchg
jnp
pop
lahf
cmp
mov
popf
data16
inc
stos
push
jge
dec
adc
lods
movsl
mov
inc
pop
jp
mov
add
push
stc
push
and
xor
mov
mov
movsl
pusha
cwtl
clc
mov
push
dec
pop
xor
xlat
dec
loopne
adc
jge
pop
sub
push
test
enter
pop
repz
loop
daa
lods
or
xor
jge
testb
bound
jp
mov
dec
pop
mov
inc
xor
adc
out
adc
cmp
jns
and
jmp
mov
test
dec
dec
movsb
adc
aaa
daa
xchg
subb
sbb
adc
mov
dec
adc
xor
mov
popa
stc
xor
lods
xor
mov
bound
sub
sarl
lock
cmpsl
out
adc
clc
gs
sub
scas
lret
adc
or
scas
aas
xor
data16
mov
cli
fldlg2
out
jno
test
sbb
xchg
add
cld
cli
iret
outsl
ret
adc
pop
sbb
xchg
popa
pop
shll
sub
fadd
add
pop
sub
or
push
les
mov
adc
mov
fyl2xp1
push
xor
insl
push
cmp
shll
mov
push
sbb
sbb
pop
mov
adc
std
jne
scas
orb
mov
sar
xchg
inc
mov
and
insb
rorb
insb
adc
xchg
inc
mov
cmp
rcrb
mov
jp
dec
dec
dec
dec
fldcw
mov
fsts
jg,pt
xchg
xchg
jns
leave
xchg
repnz
push
cwtl
cs
dec
sarb
dec
fists
out
filds
adc
sub
lock
push
inc
jbe
ja
rcrb
mov
das
pop
lods
cmc
adcb
xor
xchg
fsubs
scas
cmp
xchg
cmp
icebp
inc
fs
sbb
loopne
sub
xorb
mov
lret
gs
xchg
jne
insb
jmp
inc
stos
aas
scas
lock
jg
sti
rcl
inc
adc
repnz
and
cwtl
push
dec
jns
or
add
and
mov
xor
mov
scas
in
mov
pop
mov
sbb
cmpsb
ljmp
scas
push
cmovg
enter
add
push
test
outsl
and
je
movsl
pop
test
fimuls
jecxz
mov
fwait
loope
arpl
aam
cmp
daa
push
test
sbb
loop
fld
mov
cwtl
adc
imul
and
mov
xor
add
stos
ds
adc
jo
fs
lret
out
insl
popf
push
mov
call
cld
cld
xchg
inc
loop
fs
testb
pop
aam
pop
and
out
outsb
mov
test
jb
pop
xor
aad
lods
pop
xor
gs
cmp
fidivrs
lcall
jmp
out
mov
stos
sbb
call
ret
frstor
stc
pop
or
in
negl
leave
mov
xlat
cmpsl
xlat
mov
xor
sti
sahf
movsl
sbb
and
cmp
and
inc
push
sub
dec
movsl
stc
scas
mov
pop
aaa
lock
lret
xor
test
stos
and
push
adc
adc
jbe
mov
out
xchg
sbb
xchg
int
xor
cmp
mov
pop
je
jmp
inc
ljmp
sbb
lahf
mov
sub
in
mov
jl
push
stos
fldl
ljmp
mov
and
sub
mov
pop
dec
mov
fnstenv
xor
xor
cmp
inc
push
sahf
pushf
imull
mov
mov
bound
stc
xor
push
add
adcl
or
out
mov
cld
aam
xchg
stos
pop
rcr
sub
stos
sahf
cmp
dec
or
shrb
out
xchg
jp
lea
cmpsb
daa
into
cmp
jnp
add
adc
aam
test
in
pop
push
sub
ljmp
movsl
jae
inc
jl
push
xlat
xchg
cwtl
fs
cmp
data16
sub
nop
adc
xchg
inc
pop
ja
xchg
jmp
cs
inc
xchg
xor
cmp
jmp
jecxz
inc
popa
fs
dec
xchg
pop
call
jg
mov
jno
out
push
repnz
jp
inc
stos
loope
mov
insb
pop
hlt
imul
rcrl
mov
inc
enter
test
mov
lea
rcll
cmp
mov
fistpl
jbe
jno
pop
sarb
push
xor
das
popf
cmp
stos
decb
sbb
aaa
inc
fcoml
adc
dec
jne
lods
add
imul
enter
insb
cmp
stc
adc
cli
jecxz
inc
test
push
dec
mov
lock
arpl
daa
out
push
mov
int3
mov
sbb
add
cmp
rcl
das
repz
or
pop
data16
xchg
out
jno
lds
dec
shlb
or
int
xchg
sbb
icebp
sbb
popf
outsl
sub
jg
mul
push
repnz
mov
or
push
jo
jo
push
push
push
mov
jno
repz
sbb
imul
aaa
push
or
iret
pop
and
cmpxchg
cld
mov
insl
mov
ss
jne
push
fsubs
push
gs
and
mov
mov
imul
adc
clc
out
insl
adc
sub
mov
test
jge
push
fmul
scas
ret
xor
int
and
pop
xor
or
or
push
rcrl
ss
cld
rorl
sub
movsl
inc
adc
cmp
and
daa
shlb
mov
inc
cmpl
lods
movsl
fadds
ja
outsl
xchg
lret
les
or
pop
push
pop
or
enter
cmp
cmp
mov
pushf
push
ljmp
push
push
jb
sub
jle
out
dec
cli
jns
xchg
lds
or
int3
and
mov
adc
cld
adc
jae
nop
lldt
mov
mov
sbb
cmp
rorl
dec
icebp
cmp
cmp
push
sub
aam
pop
stos
cmp
pop
bound
mov
jns
fisubs
negb
xor
out
dec
sub
ds
inc
cmp
add
cwtl
fisubl
cmp
int3
outsb
pop
nop
lret
sbb
daa
cmp
sbb
dec
and
sahf
bound
repnz
pop
bound
push
mov
mov
cmp
fldenv
mov
and
stc
or
push
cmpsl
idivb
cltd
adc
imul
insb
sbb
rorb
out
ljmp
loop
ret
imul
mov
ret
dec
add
imul
stos
pop
sbb
pop
jmp
clc
sysenter
in
pop
add
movsb
out
and
push
push
shl
cmc
fbld
inc
in
shll
mov
out
scas
dec
mov
pop
inc
mov
pop
testl
sub
fidivrs
sub
adc
mov
xor
mov
push
sahf
lcall
sub
mov
push
pop
xor
push
push
or
push
xchg
out
mov
jns
aad
data16
stc
les
or
into
push
adcb
push
mov
push
addr16
mov
imul
repnz
std
mov
push
insl
js
mov
pop
xchg
add
mov
shrb
call
lahf
sub
int
ret
fwait
out
mov
or
xlat
and
insb
jno
leave
aad
in
inc
test
fnstsw
push
xor
xor
int3
mov
sbb
sub
arpl
sub
adc
addr16
cmp
sub
cli
pop
test
dec
jne
add
dec
decb
cltd
sbb
fs
icebp
xchg
dec
dec
jbe
stos
xchg
test
xchg
cmp
loopne
fsubr
jmp
jbe
fwait
js
xchg
loopne
insb
hlt
insb
ds
scas
adc
ret
lea
mov
inc
rcll
mov
dec
dec
mov
cltd
mov
sbb
xlat
enter
jo
push
ja
bound
xor
cmc
outsl
stc
xchg
mov
jle
mulb
or
dec
jl
sahf
jb
xchg
mov
cmp
clc
push
add
clc
mov
jno
js
les
pop
pop
sbb
mov
sti
fstl
sub
int
dec
imul
xchg
and
in
test
jae
mov
shrb
jnp
jae
add
xchg
dec
push
adc
je
push
fdivrl
std
mull
mov
push
xor
pop
pop
inc
xchg
pop
inc
lahf
test
xor
cmc
and
mov
push
push
lods
jne
mov
dec
mov
nop
test
sbb
sbb
enter
mov
and
out
std
lods
push
xchg
jbe
imul
aad
ret
sti
mov
repnz
or
mov
xchg
sub
jnp
push
pop
shlb
sub
mov
aad
imul
sub
lock
push
out
inc
test
lahf
rcll
jo
xchg
xor
hlt
das
es
adc
imul
dec
or
ret
sbb
xlat
lahf
in
aas
mov
push
mov
cld
fsubrl
negl
hlt
adc
incb
mov
adc
cmpl
add
sbb
adc
and
xchg
pop
push
jae
negw
cmpsl
jecxz
loope
xor
mov
imul
andb
mov
fs
cmp
push
cs
mov
mov
stos
push
lea
aaa
adc
jge
shrb
xchg
addr16
in
rcrl
cltd
shrb
repnz
pushf
mov
fildl
jg
sbb
mov
jns
or
cs
and
ds
jecxz
sbb
xor
inc
lods
pop
loop
sub
jmp
nop
xchg
xchg
pop
mov
add
or
jg
or
in
jg
and
jg
aam
cmc
push
repz
pop
cmpsl
xor
repnz
push
adc
cs
xor
cmp
pop
les
cwtl
sbb
imul
mov
cmc
andb
push
dec
mov
mov
fildll
mov
push
daa
xor
adc
loopne
dec
xor
mov
push
pop
inc
add
cld
inc
test
loopne
jb
jecxz
xchg
ja
jp
insl
sti
lods
and
mov
out
mov
sub
ja
sbb
daa
and
cli
cmp
imul
fdivrs
pushl
subl
push
jp
lock
and
inc
cwtl
cmp
mov
scas
lods
popf
inc
popf
inc
iret
dec
cwtl
mov
test
mov
mov
fisttpll
idiv
cmpsl
rorb
cmpsb
push
ss
mov
jl
ja
adc
add
mov
call
mov
and
dec
xor
push
inc
sbb
xchg
movsl
sub
dec
pop
pop
push
fdivs
fstl
sub
add
ds
pop
nop
xor
mov
cmp
jbe
pop
popa
cltd
movsl
mov
mov
lret
or
shll
cmpsl
mov
sub
enter
adcb
jmp
popa
pop
mov
adc
sysexit
shlb
gs
or
cmp
push
push
mov
mov
insb
mov
mov
and
outsl
movsl
sub
mov
xchg
dec
push
sub
mov
jnp
jne
pop
pop
arpl
adc
cmp
mov
sahf
stos
adc
inc
pop
push
push
jp
arpl
lds
std
jg,pt
mov
mov
out
mov
cmp
nop
mov
mov
xorl
outsl
into
inc
sub
push
les
inc
mov
add
mov
inc
dec
test
cltd
lahf
dec
pop
xchg
jb
push
xor
std
or
adc
or
addl
dec
mov
or
jle
xchg
jmp
mov
dec
aas
mov
sub
jne
inc
xor
adc
imul
xor
sarb
inc
das
ja
mov
outsb
add
sub
pop
xchg
movsb
or
cmp
jecxz
inc
not
mov
and
stos
xor
and
jb
dec
hlt
dec
scas
dec
gs
call
sbb
cmc
ss
idivb
push
out
lcall
pop
adc
clc
inc
xchg
lods
stc
cmpsl
es
adc
adc
ds
int
sub
aas
rorb
bound
or
test
fisubs
int3
and
or
divb
int3
fwait
call
pushf
dec
adcl
rolb
aad
std
xchg
data16
or
ret
ljmp
cmpsl
xor
dec
pusha
das
in
or
mov
mov
mov
mov
pop
ret
mov
mov
push
in
in
lea
mov
sbb
sub
cwtl
mov
pop
cmp
lods
in
adc
scas
add
fstps
cmp
addr16
jns,pt
loop
popa
out
push
push
jb
hlt
or
adc
iret
insb
cmp
adc
dec
in
jge
add
rcrb
mov
pop
lods
mov
icebp
mov
mov
and
and
cltd
ret
xchg
cmpsl
fcomps
je
xchg
stos
ja
outsb
ficoms
mov
push
mov
daa
data16
fldt
cltd
mov
pop
cmp
pop
mull
ficoml
cmc
sub
fnsave
lret
ror
dec
push
jg
cmp
cmp
in
cmc
ret
fbld
cmp
leave
stos
sbb
mov
mov
int
cmp
xchg
jp
cmp
dec
sub
jmp
ljmp
mov
in
cmp
pop
or
jae
mov
sbb
imul
xchg
cmp
inc
pop
jno
or
and
adc
fcmovb
add
adc
xor
pop
insb
call
mov
cld
sbb
hlt
std
roll
xor
pop
mov
adc
mov
insb
call
in
mov
xchg
dec
cmpsl
cltd
add
fcomps
sbbl
add
xor
dec
icebp
jnp
cmp
in
and
jmp
imul
push
outsb
fildll
mov
movsb
xchg
aaa
and
sti
xchg
mov
cld
xchg
imul
inc
daa
arpl
jno
or
out
push
or
stos
adc
lret
and
lods
xor
arpl
and
jmp
cltd
xchg
pop
and
mov
xchg
stos
adc
test
sub
cmp
add
jecxz
push
pop
lods
aad
lock
xchg
adc
lea
pop
pushf
cmp
outsb
pop
shl
in
dec
hlt
das
repnz
xor
stc
jmp
dec
subl
loopne
mov
jl
adc
rcll
lret
adc
rcrb
fsts
dec
clc
subl
les
out
test
les
mov
int
add
fisttpl
bound
xor
sbb
stc
or
mov
mov
lret
jg
mov
sbb
jo
arpl
xor
icebp
add
xor
push
ljmp
out
cmp
pop
jbe
mov
pop
jo
cmp
fcomps
dec
dec
dec
sahf
pop
push
or
jp
hlt
jle
or
xchg
sarl
movsb
stc
rolb
push
cltd
int
push
and
push
repnz
push
dec
or
lret
sub
push
arpl
in
mov
jecxz
sbb
mov
cmp
jg
xor
pusha
or
stc
sub
loop
jb
cmp
lock
adc
out
add
pop
and
lcall
shrl
push
dec
clc
in
xlat
lret
fiadds
add
push
or
shl
xchg
lock
pop
js
and
push
inc
jmp
inc
and
or
adc
lret
out
push
cmp
jle
nop
fstl
sub
mov
fistpll
js
or
negl
test
adcb
addl
stc
mov
lock
loope
stos
inc
adc
xor
xor
outsb
sbb
inc
jecxz
je
push
in
in
insl
out
aas
mov
dec
jle
hlt
adc
lret
jl
mov
add
repnz
cmp
add
fadds
lock
lods
popf
pop
add
loop
flds
es
aaa
mov
sbb
out
mov
push
xchg
jnp
rclb
outsb
add
mov
out
lcall
aas
adc
and
push
movsl
das
mov
pop
add
cmpsb
cltd
mov
mov
sub
mov
cld
mov
sub
imul
scas
pop
mov
jo
dec
out
jbe
cs
mov
hlt
pop
sbb
sub
shll
inc
lods
mov
dec
xchg
test
cmp
not
test
fistpl
cwtl
mov
lds
add
repnz
jge
call
jg
mov
std
xchg
iret
pop
shrb
enter
pop
jmp
cltd
xor
push
rcll
jmp
jnp
mov
jg
inc
push
daa
cltd
rorb
ds
jbe
out
pop
and
imul
scas
stos
sbb
xchg
add
mov
mov
out
fmull
mov
sbb
adc
mov
scas
pushf
nop
lret
aam
xor
movsl
xchg
mov
jne
adc
jmp
xor
sbb
mov
sub
mov
sub
mov
gs
mov
out
mov
sub
call
nop
lds
push
fsubl
jl
ret
add
clc
push
mov
in
jne
jmp
loopne
and
pop
enter
mov
pop
loop
and
clc
cwtl
gs
mov
sub
pop
sbbl
mov
or
out
sbb
pop
cmp
ja
les
mov
sbb
ja
popf
xchg
ja
jle
and
sbb
out
repnz
pandn
xor
push
sub
or
lret
test
cld
inc
mov
dec
mov
xor
push
shll
fisttps
in
ret
test
or
push
movb
fadds
jmp
js
xchg
inc
cmp
mov
mov
sub
enter
pop
cmp
sbb
mov
out
ljmp
fs
xchg
mov
xchg
aaa
mov
dec
mov
or
bound
sub
jle
mov
inc
lcall
aaa
int3
sub
movsl
jno
fwait
jmp
cmp
nop
loopne
add
nop
xchg
or
gs
or
jmp
loope
mov
rorl
jle
dec
mov
mov
stc
cmpsb
ret
dec
test
in
pop
cld
or
cmc
jle
sbb
rolb
int
adc
adc
arpl
dec
pop
lcall
mov
sbb
dec
cmp
or
inc
out
leave
loopne
mov
cmpsb
paddusw
fstp
xor
lahf
add
lods
daa
loopne
push
sahf
or
ss
pop
mov
xor
enter
jle
mov
mov
push
dec
inc
jp
movsb
mov
xchg
insl
fdivl
psubusb
mov
testl
cmp
jge
pop
add
dec
push
sbb
in
fildl
xchg
dec
push
idivl
stos
nop
push
mov
mov
add
mov
push
lds
jl
sbb
test
subl
jb
sub
xchg
lods
int3
dec
or
xchg
pop
mov
mov
adc
jb
and
movsl
jg
sub
lods
fstp
mov
rolb
xlat
add
pop
add
mov
ret
xor
scas
mov
pop
scas
fisubl
js
xlat
adc
xchg
xchg
sub
jns
stc
mov
js
pop
std
push
inc
inc
sbb
aad
adc
and
test
ffreep
lock
mov
cmp
cmpb
pusha
fildl
add
addr16
fcmovnb
lock
popa
push
pop
push
or
callw
mov
mov
jne
pop
mov
mov
cmp
and
imul
pop
jmp
xlat
das
rcrb
mov
push
and
push
dec
jp
sub
leave
mov
jmp
jnp
scas
in
stc
push
push
cli
enter
adc
and
loop
sub
into
sarb
jne
cli
lret
inc
mov
sub
jmp
fs
push
xchg
cmp
jmp
cmp
stos
and
pmuludq
inc
aam
sub
jne
and
daa
add
add
and
data16
jo
aaa
cmp
es
mov
xor
cmc
popf
jl
ljmp
test
pop
mov
dec
mov
xor
push
xchg
pop
sbb
dec
add
shlb
aam
loopne
push
jbe
push
mov
out
adc
mov
das
xchg
dec
or
sbb
call
sarl
and
fiadds
bound
mov
rcrb
shl
lea
cli
jb
jb
push
xchg
jae
and
ljmp
movsl
fwait
aam
leave
in
sti
xchg
jge
dec
jo
pop
jno
daa
dec
pop
int3
es
cmp
add
subl
jns
cmp
xor
movsl
sbb
push
rorb
addr16
mov
mov
sbb
mov
pop
shll
aas
movsb
hlt
es
push
or
sbb
xlat
sub
rcll
add
dec
and
jnp
lret
inc
push
xorb
imul
pusha
insl
dec
scas
jg
push
mov
into
shrb
inc
dec
lods
adc
enter
sahf
mov
push
clc
dec
rorb
or
ss
mov
movsb
add
cmp
mov
inc
mov
andl
out
shrb
fstl
mov
ret
mov
and
pop
int3
cmp
ret
push
mov
mov
jl
xor
mov
dec
popf
push
mov
scas
jo
push
test
stos
in
pushf
divb
xchg
cmp
dec
jle
mov
xchg
pop
pop
lds
inc
xchg
testl
pusha
into
add
loop
pop
sbb
mov
pop
dec
cmpsl
sub
sub
nop
sar
push
in
mov
xchg
jl
movsl
inc
std
call
and
push
push
adc
push
jb
add
lods
ss
and
loop
pop
sub
mov
jno
mov
jnp
iret
or
popa
or
dec
dec
loop
push
cmp
pop
das
ss
dec
movsb
pop
imul
sti
iret
jp
ret
outsb
mov
mov
cld
pop
data16
fidivrl
fisubrs
arpl
mov
div
jmp
sbb
push
mov
loopne
pushf
mov
mov
sbb
movsb
dec
push
sub
mov
mov
rclb
xchg
push
stos
out
dec
mov
add
cmc
mov
mov
faddl
jge
mov
pop
sub
dec
jbe
pop
sub
jg
mov
mov
jecxz
stos
rclb
sarl
insb
adc
andb
roll
popa
sbb
pop
jnp
cld
test
fistpll
inc
mov
mov
and
ror
aaa
jno
sbb
jl
inc
push
shl
pop
shrl
add
mov
nop
fdiv
loope
ljmp
mov
lret
fld1
insl
fs
mov
mov
insb
jle
icebp
dec
cld
inc
out
out
lcall
push
imul
xor
xchg
sub
and
adc
loopne
push
inc
or
cmp
inc
pop
mov
sbb
loope
mov
int3
jb
insl
push
adc
or
or
test
mov
mov
and
lahf
mov
std
ret
out
js
mov
std
leave
pop
mov
sub
push
push
jge
out
push
stos
call
jge
mov
dec
std
dec
divb
xlat
cmp
jl
xor
and
adc
arpl
add
insb
add
mov
movsb
inc
in
mov
rcll
negb
and
dec
lock
or
mov
insl
arpl
xchg
add
mov
inc
cli
leave
and
dec
xor
test
in
sti
or
das
test
stos
xchg
adcb
mov
xchg
mov
inc
sbb
jg
xor
jne
cli
mov
and
in
loop
adc
sbbl
add
fdivl
in
sbb
loop
addr16
sbb
pop
lds
xchg
aad
enter
je
xchg
pop
out
es
cmpsb
xchg
sub
insl
pop
push
cld
pushf
sbb
andl
push
jecxz
outsl
sbb
push
testb
call
mov
cmp
jle
inc
int3
push
repz
cli
pop
inc
push
push
pop
push
sub
push
and
or
lock
shl
dec
or
loopne
mov
cwtl
repz
xor
jecxz
cmpsb
dec
out
xchg
push
cmp
popf
shll
mov
sub
mov
lahf
push
jns
rcrl
inc
aad
cmc
call
or
xchg
shrl
push
mov
jecxz
mov
stos
stos
popf
sub
or
mov
adc
jbe
mov
and
arpl
push
push
mov
add
aaa
pop
aas
clc
lock
int3
jp,pt
xchg
cwtl
jno
int
and
or
push
push
pop
outsb
repz
push
push
mov
mov
gs
stos
lods
dec
scas
lock
imul
out
outsb
or
pop
dec
and
xchg
jne
jl
xorb
mov
out
mov
and
es
pop
inc
push
xor
or
stos
clc
sub
mov
imul
rcll
push
xchg
movsb
mov
ja
fdiv
xchg
vmovq
pusha
cmpsb
adc
mov
rcll
push
data16
add
rorl
shrl
and
sub
cmp
outsb
imul
arpl
nop
xor
lahf
mov
aaa
addr16
out
or
movsb
pusha
mov
cmpsl
and
push
aas
negl
out
add
xchg
xchg
in
pop
or
test
cwtl
and
push
pop
sub
mov
and
repnz
sahf
pop
mov
subb
repz
xchg
adc
fwait
add
cltd
das
test
lds
enter
sbb
adc
mov
outsl
daa
lcall
cltd
movsl
scas
sti
pinsrw
pop
test
ret
mov
mov
adc
mov
xchg
icebp
sub
loop
pusha
loop
push
fldl
adc
out
cmp
mov
push
gs
pop
xchg
sub
cmp
push
mov
loop
add
rcrb
subl
data16
mov
fmuls
pop
mov
outsl
xchg
mov
popf
cs
cli
adc
shl
mov
xor
jbe
mov
mov
sub
dec
xchg
jns
mov
mov
or
jns,pn
insl
leave
shlb
or
cmp
sbb
push
dec
push
push
sbb
fistl
nop
and
popf
cmpsb
jg
test
jle
sub
addl
xorl
out
push
in
ret
cmpl
dec
or
lds
xchg
dec
ds
fistl
ja
test
mov
or
jge,pt
clc
jb
push
int
mov
mov
cli
lcall
mov
pushf
sbb
loopne
fidivrs
hlt
imul
mov
idiv
dec
jnp
xchg
hlt
scas
mov
out
in
lret
mov
pop
jb
loop
sub
push
xchg
xchg
incb
fdivl
jo
pop
xor
add
add
or
insb
sub
pop
mov
imul
push
push
xchg
mov
push
ret
add
in
pop
jmp
jl
jnp
inc
jns
nop
ja
push
cmp
jb
clc
xchg
movsb
push
shl
jge
mov
mov
sbbb
stos
mov
leave
shlb
fistpl
inc
xchg
fistpll
xchg
sbb
and
dec
sti
sbb
test
dec
xchg
pop
fs
ja
push
clc
inc
and
pop
jle
pop
push
fimuls
add
cmp
push
jae
jg
and
dec
push
mov
mov
mov
add
in
jno
test
cli
mov
ds
test
adc
orl
fdivrs
add
cmp
cmp
rcll
mov
aaa
cmpsl
xchg
xlat
out
mov
scas
or
cmpsb
jl
lds
pop
dec
dec
push
dec
dec
pop
adc
iret
icebp
cmp
xor
or
xor
xchg
cmp
cmpsb
out
movsb
cmpsb
add
rcr
ss
out
xor
sahf
fdivl
in
pusha
movsl
gs
xor
sbb
push
incl
mov
dec
addr16
imull
cli
pop
mov
pusha
mov
or
in
xchg
addr16
mov
pop
jo
lods
imul
jge
stc
fldl
jle
mov
jle,pt
mov
and
cmc
fdivl
hlt
ja
dec
jg
shlb
in
sub
sbb
test
repnz
popf
cmp
xchg
jnp
xorb
push
push
xchg
add
push
popa
repz
cmp
hlt
push
in
arpl
subb
rcrl
mov
ds
push
mov
call
xor
ror
push
in
mov
data16
rep
clc
dec
inc
dec
or
pop
lret
cmp
out
pushf
mov
cmp
inc
pop
add
cmp
jge
sub
pop
xlat
inc
cmp
popf
out
arpl
test
lret
jl
jne
sti
movsl
imul
jle
call
sbb
test
push
mov
call
jle
lret
pop
loopne
cmp
or
xor
jae
sub
fcoms
jae
ret
outsb
adc
sbb
fdiv
xor
adc
xchg
sbb
inc
cmp
int3
mov
nop
jp
jl
sbb
inc
sahf
and
scas
bound
stc
pop
test
jge
fisttps
idivb
ja
dec
int3
fucomi
xlat
xor
jns
je
jb
imul
stc
cli
xchg
or
nop
pop
sub
xchg
push
xchg
push
mov
aad
jns
sub
jae
and
inc
pop
fs
hlt
xor
and
mov
mov
add
je
xor
xor
mov
mov
lea
in
jae
icebp
add
adc
cmp
cmp
bound
sub
std
iret
push
ja
mov
jbe
shll
sbb
mov
push
test
jae
cwtl
sahf
in
dec
xchg
xchg
push
mov
jl
mov
mov
sub
xlat
int3
and
adc
out
movsb
je
outsl
call
mov
std
loope
mov
mov
xor
xor
push
push
std
jne
cmp
mov
outsl
lea
pop
int
shll
adc
push
repnz
addr16
mov
pop
push
movsl
adc
inc
insl
xor
ljmp
jo
insb
push
gs
pop
pop
idiv
das
push
lods
or
pop
adc
push
stc
mov
push
mov
mov
mov
outsb
leave
out
daa
adcl
jmp
ljmp
icebp
mov
sahf
cltd
push
xchg
test
sti
sub
cld
xor
mov
add
das
xchg
cmp
mov
sub
dec
or
sub
lcall
mov
jg
inc
pop
xchg
jno
cltd
inc
fs
add
shlb
push
push
popa
pop
mov
sbb
mov
xchg
test
sbb
and
icebp
incb
sbb
cmp
cs
filds
dec
lcall
imul
es
and
test
or
mov
dec
mov
xchg
cmpsb
mov
cmp
inc
aaa
xor
mov
cwtl
or
jge
push
sbb
shlb
mov
daa
lock
cld
in
and
lret
cmpsl
inc
pop
lea
fistps
xchg
dec
pop
cmp
jnp
fwait
aaa
xchg
lds
pop
xor
cmp
xchg
lock
outsb
or
mov
dec
ret
xchg
iret
push
test
stos
bound
add
pusha
mov
rolb
ja
jnp
or
xchg
cmp
iret
mov
sti
xor
mulb
sub
inc
arpl
movsl
shll
repnz
mov
aam
jne
sar
xor
cmpsb
sarl
cmp
mov
dec
xor
dec
dec
fcomps
cmp
push
ret
xchg
orb
or
inc
imul
push
aad
shlb
push
insb
cmpsb
xor
mov
repz
mov
sub
out
and
push
push
daa
push
inc
or
push
repz
inc
cmp
dec
fdivrs
or
scas
mov
jnp
jns
roll
es
add
ja
dec
xor
in
cmp
sahf
mov
idivl
imull
fmuls
std
mov
icebp
mul
fstps
roll
or
repz
mov
mov
jb
pusha
scas
jge
cld
notb
and
test
fistps
sbb
xchg
cltd
aam
add
or
mov
ss
cmpsb
xlat
enter
or
fdiv
mov
cs
sti
mov
rorb
jno
xchg
sbbl
jg
pushf
dec
pop
pop
fwait
test
clc
test
jo
mov
xchg
outsl
insb
mov
or
xchg
xchg
push
pusha
in
jp
mov
dec
into
sbb
in
mov
xor
jg
push
ljmp
in
mov
lods
xchg
xor
cmp
ret
pushf
dec
lea
mov
push
scas
mov
cmpsb
mov
xor
loope
loope
sbb
gs
jb
xchg
mov
push
push
or
pop
cmc
cmpsb
mov
popa
xor
imul
inc
loopne
mov
adc
out
fwait
inc
fsubrl
repz
add
test
stos
add
sub
inc
cmp
mov
jo
add
dec
cmp
xchg
or
hlt
shrb
js
inc
push
or
icebp
nop
and
xchg
scas
inc
outsb
adc
imul
ficompl
cmp
in
jg
aas
push
lss
js
daa
loope
add
jle
aam
mov
loope
data16
loope
sbb
insb
faddl
mov
xlat
rcl
sub
loopne
adc
iret
dec
movsb
in
or
stos
xor
dec
xchg
out
adc
out
pushf
mov
mov
jb
push
xchg
lcall
or
add
add
inc
pavgw
aaa
jp
push
jecxz
mov
mov
repz
push
std
scas
or
jnp
sub
inc
shl
adc
push
icebp
sbb
cmc
imul
dec
mov
iret
in
sbb
inc
sub
jnp
das
cmp
scas
fisubrl
sub
mov
int3
mov
fucom
loop
dec
ret
push
push
push
xor
mov
rcl
pusha
out
icebp
cmc
and
xchg
movsl
insl
stos
bound
mulb
mov
daa
jmp
in
pop
rcll
fwait
push
lds
popa
mov
jnp
adc
repnz
stc
adcb
mov
or
fdiv
xchg
rolb
fimull
push
pop
das
xlat
inc
mov
cmp
lock
mov
outsl
xlat
cmc
pop
cld
mov
jo
outsb
hlt
mov
mov
add
mov
pop
xor
xchg
shlb
test
push
lret
lret
pop
mov
or
mov
xchg
arpl
test
test
add
call
pop
inc
dec
stos
sub
enter
xlat
push
insl
inc
addr16
cmpsb
lods
adc
and
ret
fwait
mov
stos
xchg
cltd
cld
hlt
push
adc
pop
dec
add
icebp
xchg
lods
sarb
dec
or
xchg
aad
and
lods
int
mov
hlt
dec
loopne
das
jg
test
inc
pop
jg
rcll
sbb
int
sbb
aas
jg
mov
add
or
stos
or
mov
inc
sti
int3
aad
mov
frstor
sub
pop
inc
add
lock
mov
jo
jl
les
loop
xchg
scas
cs
loop
lods
inc
in
sti
push
adc
push
mov
mov
fldcw
test
int
or
or
pop
arpl
in
mov
cmp
xor
push
into
or
int3
lret
sub
repnz
pop
lret
fwait
cmc
ds
bound
nop
retw
add
xor
cmpsl
or
loopne
or
in
inc
imul
cmp
icebp
out
jns
loop
sub
repnz
mov
cmp
stc
jp
mov
iret
pop
mov
add
data16
xor
inc
cmc
aas
push
rcrb
or
jle
pop
jg
ds
cmp
adc
mov
push
xorl
jg
add
jecxz
bound
pop
iret
repnz
pop
dec
sahf
push
inc
das
inc
cwtl
sahf
sub
sbb
and
fmuls
cmp
stc
adc
lea
mov
pop
lods
loop
je
mov
mov
jmp
sbb
add
fstps
filds
lods
es
jb
in
inc
cmp
pop
adc
push
mov
add
test
cld
jns
jbe
scas
mov
inc
add
aaa
push
les
fs
cwtl
jge
movsb
mov
add
dec
mov
outsl
push
rcrb
leave
movsl
leave
js
out
lock
xchg
iret
mov
inc
addr16
lret
enter
lret
shrb
std
jno
lods
adc
sub
test
pop
icebp
pop
cmc
adc
arpl
cmovl
stos
xor
addr16
and
vsubps
dec
fdivl
sti
jmp
fwait
js
loop
push
jle
cmp
out
and
mov
je
mov
dec
movsb
ss
jne
pop
jnp,pn
jge
fisttpll
mov
cli
adc
xchg
xchg
add
sti
cs
pop
scas
push
mov
sahf
xchg
mov
rorl
sub
dec
imul
das
mov
adc
fsubl
mov
mov
dec
xchg
lahf
push
popa
sbb
cli
pop
mov
ficomps
add
in
xor
sub
cmp
shrb
lret
cs
jecxz
cmp
jp
sar
out
into
mov
test
push
in
fsubs
mov
adc
les
inc
pop
jo
jge
pop
mov
cmpsl
test
sbb
sbb
popl
jle
lods
jge
mov
mov
dec
aad
cmp
xchg
movsl
jb
mov
mov
adc
or
test
inc
pop
mov
mov
shll
cwtl
pop
stc
jb
fwait
popa
fstl
add
leave
or
pop
rcrb
and
or
xchg
cmp
push
mov
aas
js
loope
ficompl
cmp
or
mov
je
adc
xchg
ds
cmpl
cltd
fistl
xor
xor
jbe
dec
jmp
and
divb
cmp
fwait
adc
mov
decb
in
inc
jo
pusha
and
scas
push
push
sahf
stos
std
cmp
paddsw
std
jnp
adc
sub
xor
sub
add
icebp
adc
dec
rcl
mov
lods
add
dec
dec
xchg
cltd
movsl
mov
popf
xchg
std
xchg
test
adcl
std
xchg
mov
sbb
mov
push
mov
nop
mov
push
jg
ljmp
out
sbb
mov
lret
push
test
bound
mov
bound
mov
mov
inc
mov
stc
shlb
jle
add
ret
cs
pop
inc
movsb
sub
adc
add
sbb
inc
stos
mov
in
popf
movsl
sub
jle
dec
adc
xchg
mov
ss
fildll
mov
pop
jo
sbb
sbbb
mov
jbe
mov
fnstenv
aas
cmc
mov
adc
std
pop
das
add
sarb
rorb
add
xor
jae
imul
cmc
xchg
pop
push
dec
push
mov
pop
insl
loop
cli
movsb
pop
mov
dec
out
pop
adc
push
retw
cld
shlb
and
movsb
xchg
cmp
popa
lods
cltd
or
inc
and
daa
xor
inc
sbb
adc
cmp
cmpsb
ficoms
cld
stos
je
inc
mov
push
fistl
and
mov
xchg
jg
shll
ljmp
cmp
mov
fwait
sub
push
or
dec
adc
or
pop
out
ret
push
out
xlat
cmp
xchg
pop
jnp
jp
push
sti
push
pop
mov
dec
insl
fcompl
cmpsl
pop
icebp
pop
xchg
pop
xchg
shll
int
and
pop
lahf
shr
sbb
pop
sub
test
or
call
pop
aaa
pop
mov
push
mov
rcr
outsb
cmp
cmp
xchg
pop
lahf
cwtl
repz
mov
add
pushf
jns
jo
lahf
imul
into
jnp
push
jmp
cmpsb
subb
sti
fs
cmpsl
cmp
jo
inc
xor
sub
cwtl
int3
mov
hlt
mov
sbb
icebp
jne
adc
xchg
test
mull
cmpsl
pop
cmp
lret
cmp
jbe
add
push
sbb
popf
popa
xor
push
pop
and
push
jo
aad
lock
inc
imul
cmp
dec
popa
pop
xchg
adc
mov
push
imul
xchg
outsb
inc
mov
fldl
jp
push
mov
dec
push
jo
enter
lcall
mov
bound
dec
push
mov
add
dec
xchg
jnp
leave
pop
in
fwait
out
aas
adc
push
out
mov
movl
mov
out
hlt
ds
aaa
push
push
enter
xor
clc
inc
mov
lret
add
mov
clc
js
push
idivl
stc
call
xor
add
mov
fsubrs
jecxz
xor
or
xchg
push
add
movsb
dec
sub
leave
cmp
push
repz
cld
push
jns
push
and
push
fldl
nop
sti
imul
dec
jae
lret
js
lods
dec
mov
xchg
xor
je
adc
je
add
and
aaa
mov
jnp
dec
cmp
daa
test
mov
daa
stos
xlat
and
test
testl
push
cmp
repnz
sbb
push
cli
iret
call
fbstp
stc
inc
fidivrl
sbbb
push
std
aam
jecxz
test
dec
mov
bound
lds
xor
pop
push
pushl
jo
test
insb
pop
push
int3
or
test
das
mov
imul
cmp
inc
aaa
mov
push
imul
pop
lret
and
out
xchg
push
dec
mov
std
mov
xor
int3
mov
insb
leave
sub
gs
push
test
or
sub
jbe
push
cmpl
adc
pop
daa
mov
mov
daa
rclb
ffreep
xchg
ret
mov
bound
ja
jmp
fildl
sub
xchg
ret
loope
lret
loop
stc
int
daa
sbb
stc
mov
scas
sbb
mov
fstpt
and
inc
loopne
cmpb
pop
push
jp
scas
jp
js
lock
test
imul
rolb
mov
mov
scas
pop
and
jbe
arpl
pop
sbb
idiv
sbb
pop
sbb
xor
stos
jb
or
mov
xorb
sub
repnz
xor
loopne
test
cmp
into
pusha
mov
push
jb
jnp
test
pop
xchg
cmpsl
dec
out
pop
jmp
iret
stc
stos
shl
fldl
ds
rolb
inc
dec
sbb
jo
mov
add
daa
ret
test
lahf
scas
mov
xchg
push
mov
inc
mov
lcall
es
orps
lret
dec
xchg
or
aaa
sub
test
in
push
xchg
and
mov
xorl
pop
pop
movsb
enter
outsl
stos
push
jne
in
pop
sbb
add
pop
jb
pop
xor
pop
rcrb
add
fdivrl
add
jge
xchg
xchg
shrl
test
movsl
and
adc
pop
or
shlw
cld
scas
sub
cmpsb
xlat
lods
pop
orb
and
cmp
sbb
scas
xlat
scas
pop
int
movsl
adc
sub
push
adc
jle
jl
inc
insl
xor
ljmp
mov
das
sub
cmp
mov
pop
cmp
xor
data16
adc
mov
inc
inc
jnp
outsb
cmp
loopne
fcompl
leave
push
fmulp
or
mov
testl
push
repz
out
test
insl
clc
cmpsl
das
testb
lcall
ret
sub
mov
pop
cmpsb
jno
daa
std
dec
pop
mov
sbb
cmp
aam
dec
dec
daa
out
cltd
push
xor
mov
fnstcw
dec
xchg
push
xor
jge
es
mov
pusha
dec
or
hlt
in
lret
pop
mov
pop
sbb
outsl
stos
jp
jge
fs
das
inc
inc
sti
or
mov
lock
hlt
mov
and
mov
cli
or
jns
scas
cld
xchg
scas
std
enter
xor
fdivs
mov
stc
int
inc
mov
scas
push
jnp
cmp
js
sbb
jg
xchg
add
mov
lret
sti
ljmp
out
aas
or
jg
sbb
out
frstor
cmpsb
ja
add
adc
in
xchg
mov
sti
adc
and
enter
lret
xchg
dec
push
fstp
dec
mov
repz
adc
jbe
rorl
xchg
pushf
in
mov
jl
xchg
push
mov
lods
pop
xchg
test
xchg
sub
push
xlat
cmp
jmp
shl
sbbl
or
rol
cli
pop
lds
jnp
push
push
in
lods
das
std
jae
jp
es
mov
fwait
dec
mov
icebp
inc
xchg
ds
pop
mov
adc
fldl
insb
push
inc
fidivrs
je
ret
int3
push
add
icebp
imul
mov
ds
jle
jnp
clc
xchg
and
loope
mov
and
jecxz
inc
sub
push
iret
dec
jae
imul
dec
popf
rolb
adc
or
inc
jns
and
mov
mov
mull
jno
xor
fwait
loopne
jmp
mov
rcrb
push
pop
sub
scas
mov
push
and
mov
push
or
push
pop
insl
cmc
stos
jae
movsb
mov
push
xchg
sbb
inc
pop
and
push
sbb
jg
mov
cmp
leave
iret
decb
arpl
ja
ljmp
rclb
mov
pop
dec
sarb
cmp
mov
adc
mov
lret
test
mov
xorl
inc
push
cmp
or
pop
xor
pop
icebp
ret
ret
mov
jb
lods
fwait
cmpsl
insl
mov
mov
ss
das
iret
adc
jge
push
arpl
fwait
rorl
aaa
dec
add
test
insl
icebp
lret
lea
mov
fwait
sahf
jnp
sub
adc
jo
push
mov
pop
enter
adcb
or
es
stos
xchg
test
cmpl
add
and
mov
sub
and
or
dec
cmp
xchg
and
sbb
jns
out
cmpsb
mov
lahf
add
pop
std
pop
test
pop
loop
test
ret
mov
xchg
imul
setbe
cmpsl
mov
cli
orl
fcmovnbe
xor
and
pop
push
pusha
pop
adc
mov
push
push
idivb
pop
lret
data16
nop
sub
push
jno
pop
in
xchg
enter
pop
push
sub
popf
aaa
iret
gs
cmpsl
popf
call
daa
add
dec
push
bnd
orb
notl
loop
add
push
adc
icebp
js
loopne
sub
push
or
cs
jmp
xor
lea
xchg
mov
pop
push
out
jns
sbb
aad
mov
or
pop
cmpl
test
pop
enter
push
dec
add
iret
imul
xchg
fldt
jle
pop
neg
pop
cs
outsb
in
mov
outsb
pop
test
mov
sarl
int
popa
adc
lods
subl
inc
das
cmpl
sub
addr16
sar
mov
inc
jae
cli
loopne
rcl
test
sbb
ja
jnp
adc
fld
cmp
and
mov
and
adc
sti
inc
pop
sub
lret
lcall
cmp
mov
mov
fcmovb
adc
xchg
push
jne
dec
fmul
xchg
mov
fwait
mov
jle
into
jne
mov
and
lcall
sub
fdivrl
arpl
push
cli
pop
jb
and
xchg
imul
dec
mov
sti
and
pushf
push
add
xor
lods
sahf
lock
mov
cld
andl
fwait
push
push
call
xchg
xchg
inc
stos
hlt
and
xlat
push
sbb
je
inc
cli
sahf
pop
loope
jae
das
inc
sahf
adc
mov
xchg
jb
addr16
stc
daa
mov
pop
adc
mov
js
mov
mov
xor
add
add
shll
xor
sti
jg
and
mov
pop
dec
inc
pushf
je
jecxz
or
bound
test
fisttps
cli
imul
sub
pop
adc
fmull
insl
cwtl
add
mov
sbb
arpl
out
cmp
mov
add
inc
loopne
push
idivl
pop
fs
add
int
fdivs
rcll
lret
pop
repnz
dec
negb
add
adc
in
test
add
and
or
enter
mov
mov
test
incb
mov
outsb
xchg
fidivrl
xorb
addr16
or
insb
mov
aam
test
jne
push
inc
push
mov
push
rol
mov
adc
repnz
and
jns
mov
mov
sub
nop
je
repz
pop
or
mov
dec
inc
sub
lds
mov
xlat
mov
pop
pop
inc
mov
and
push
les
insl
ja
mov
xlat
dec
test
add
popf
repnz
or
cmp
ffreep
xor
xchg
int
adc
dec
inc
inc
inc
jne
mov
jle
mov
adc
imul
push
xchg
int3
sub
not
push
jle
mov
imul
test
iret
sub
jbe
int3
fmuls
ja
in
out
pop
in
roll
fadds
jno
or
aad
sbb
inc
sbb
mov
sub
xchg
lcall
or
mov
mov
push
xchg
cmpb
nop
cwtl
cs
push
inc
lock
jb
ja
cwtl
lret
repz
pop
dec
adc
adc
loopne
loope
cmpsb
add
outsl
pop
clc
jmp
gs
out
cmp
cmc
mov
test
xor
lret
jne
push
dec
insb
and
xchg
cmp
push
fldcw
jbe
inc
mov
mov
pop
jbe
xchg
loopne
int3
push
test
sub
jp
test
push
jae
stos
sti
jecxz
cmp
sub
fadds
adc
icebp
jo
lock
pop
outsl
js
jecxz
xor
mov
jecxz
test
adc
pop
xor
and
xor
ud2
jmp
rcr
call
push
cmp
push
or
cmp
popf
imul
pop
mov
frstor
pusha
cmp
pusha
lods
or
push
push
mov
lea
push
fisubrs
xchg
push
mov
fdivr
int3
mov
xchg
mov
es
rclb
dec
mov
push
dec
adc
fists
sbb
xlat
dec
and
pushf
out
inc
sub
int
mov
xorl
in
and
mov
sbb
and
test
adc
dec
push
mov
bswap
and
sbb
mov
fdivr
xchg
cmpsl
dec
or
cmp
mov
hlt
hlt
shll
jbe
jne
jmp
mov
cmp
xor
mov
and
scas
int
shll
inc
into
fldenv
call
mov
pop
dec
out
lret
repz
sub
roll
mov
mov
das
cmpsb
and
jge
jno
push
leave
cmp
sti
cmpsl
jne
outsl
loopne
into
and
filds
xor
push
sbb
xchg
mov
dec
inc
icebp
pop
ret
fwait
mov
push
dec
dec
sub
cmpsl
rcrb
fdivs
ja
cli
or
mov
fcoms
dec
mov
pop
xor
ds
into
lcall
sub
lods
jmp
roll
aam
gs
xchg
dec
clc
sahf
popa
push
mov
stos
add
push
cmpsl
lds
jp
out
in
sub
insb
lock
dec
repz
je
add
daa
pop
inc
jl
outsb
lods
pushf
or
or
mov
lock
inc
xor
in
in
cmp
or
cli
dec
inc
gs
xchg
jne
sbb
imul
shr
icebp
rorb
std
push
loop
popf
fcomps
mov
jno
aas
insb
daa
push
rorb
mov
out
push
imul
sbb
sti
mov
push
add
ljmp
xchg
xor
stos
fdivl
mov
mov
sub
lds
and
cwtl
ds
cmp
cmp
xor
dec
inc
rol
mov
push
ficompl
mov
push
add
adc
subl
mov
push
outsb
jp
inc
cmp
adc
int3
out
xchg
out
pop
add
xlat
mov
xchg
mov
clc
jbe
es
xchg
scas
add
mov
popf
mov
scas
rcl
inc
xchg
sub
mov
inc
pop
xchg
sti
push
test
subl
xor
inc
arpl
or
divb
stc
or
lods
push
push
adc
test
lods
fwait
arpl
pop
push
outsb
hlt
add
loope
sub
cli
push
out
cmp
and
xchg
cmp
and
dec
xor
sub
pop
mul
or
and
inc
cwtl
sbb
mov
xchg
and
loope
or
scas
inc
fidivs
sbbb
popa
adcl
test
loope
aam
cwtl
push
roll
jmp
mov
pop
add
je
insb
cmpsb
insb
mov
pop
pop
sbbl
inc
mov
lods
leave
sti
in
cmp
les
nop
xchg
stc
xor
mov
mov
xor
sub
shlb
mov
dec
ds
cmp
xchg
xor
xor
pop
adc
push
mov
dec
sub
jmp
xchg
jno
push
ja
testl
cmp
fsts
inc
imulb
lahf
dec
imul
add
push
xchg
dec
xor
push
jmp
leave
arpl
testb
std
ficomps
lret
sbb
pcmpgtw
mov
jbe
add
notl
jp
in
xchg
mov
jns
imul
or
loopne
mov
bound
shr
or
in
ja
adc
push
dec
stc
shrl
mov
adc
adc
dec
cli
dec
popa
outsl
addr16
jne
xor
stos
shll
and
push
int
xchg
add
pop
rolb
in
push
inc
and
xor
add
dec
test
sbb
pop
out
imul
push
sub
push
loope
popf
out
mov
decl
sbbb
mov
or
test
clc
push
clc
mov
or
dec
pop
push
test
add
nop
pop
fwait
xchg
icebp
loop
or
push
pop
cld
bts
xor
mov
imul
cmp
ljmp
jmp
arpl
push
cli
jecxz
fwait
mov
lock
cmp
or
andl
add
lahf
shll
sahf
adc
in
ficompl
xchg
add
push
sti
ret
jno
sbb
push
jp
lret
sahf
and
cwtl
dec
lret
mov
addr16
popa
bound
mov
jnp
fsubrl
jmp
ret
cmc
clc
pop
dec
mov
mov
stos
aas
int3
mov
cmpsb
pushf
adc
sbb
fwait
push
jecxz
mov
lea
aam
pop
mov
orb
xchg
or
mov
sbb
mov
fidivs
addr16
rorb
fwait
outsb
cli
mov
fcoms
jbe
sbb
pop
ficoms
sbb
dec
frstor
mov
lock
popf
mov
int3
mov
sub
jnp
sbb
cmc
cmp
shl
dec
imul
pop
pop
inc
ja
jns
loope
add
leave
mov
jle
sub
or
mov
shlb
lcall
jmp
push
xchg
xchg
adc
cmp
add
adc
arpl
pop
lods
xor
or
inc
mov
lahf
mov
popf
cltd
inc
les
xchg
outsl
xchg
cltd
inc
jg
push
and
fnstcw
mov
lahf
clc
out
or
loope
imul
fiaddl
in
movsb
pop
add
call
jnp
idivb
sbb
jp
xchg
repz
mov
mov
xor
call
das
and
ret
dec
imul
adc
xchg
je
pop
popa
mov
push
jp
repz
stc
mov
and
dec
mov
sub
jecxz
add
mov
lcall
inc
jns
xlat
cmp
mov
imull
rcr
out
rorb
lods
ljmp
push
lods
xor
pop
sub
mov
push
or
add
loop
inc
repz
in
adc
jnp
cs
cld
arpl
inc
test
ret
stc
ret
psadbw
dec
cmpsl
adc
lret
and
lock
inc
pop
fsubrl
stos
inc
mov
push
jecxz
mov
in
or
sarb
fnsave
andl
inc
pop
mov
and
and
pop
jge
adc
adc
pop
mov
mov
cmpps
cmc
or
fucomi
xchg
iret
iret
js
movsb
adc
xchg
push
lret
loopne
xor
shll
mov
int3
mov
stos
in
jp
out
or
fucomip
add
inc
gs
frstor
cmp
loop
ja
mov
lcall
dec
dec
jbe
dec
adc
cltd
out
or
cmpb
shlb
pop
rcrb
in
or
mov
jnp
mov
es
lahf
fidivs
push
xchg
dec
mov
or
fbstp
insl
dec
int3
dec
mov
cwtl
mov
je
push
fdivrl
loope
push
jb
mov
stos
mov
pop
adc
fistl
push
sub
mov
jo
and
mov
mov
adc
and
cmp
mov
adc
imul
lea
jp
jl
cmp
nop
inc
repz
push
jp
mov
scas
dec
fcompl
xor
iret
mov
mov
cmpl
loope
inc
jbe
in
test
mov
inc
pop
and
mov
cmp
sbb
xchg
mov
mov
mov
test
inc
cmp
mov
cwtl
fdivl
sbb
xor
push
inc
int
mov
adc
les
cwtl
inc
fsts
repz
mov
add
jecxz
push
jecxz
dec
pop
dec
jg
sbb
repz
pop
pop
lcall
push
lret
popa
ds
cmc
push
shlb
jp
pop
push
sahf
lahf
mov
xchg
add
and
adc
out
insb
adc
jae
nop
leave
stos
mov
mov
into
xchg
aam
loopne
dec
sbb
fcoml
cltd
mov
cmp
frstor
cmp
sub
or
mov
sub
and
xchg
jecxz
loope
aad
iret
push
dec
jge
jl
test
xor
fsts
push
sarb
in
test
jns
inc
dec
bound
outsl
xchg
inc
adc
pop
mov
jl
push
cmp
cmp
cwtl
mov
stc
xchg
mov
out
arpl
lods
cmp
adc
cmp
aam
xchg
add
inc
pop
xor
mov
dec
mov
pusha
mov
or
push
or
lock
test
aas
stos
xchg
push
cmc
ret
out
popa
push
cmp
cmpsb
cli
out
inc
fucomp
into
push
out
or
dec
sub
mov
jno
xchg
je
push
mov
mov
in
sbb
xchg
jb
or
xlat
sbb
mov
enter
push
les
jo
lods
inc
dec
pop
jmp
bound
out
addl
mov
pop
mov
aad
cmc
mov
sahf
cli
push
adc
bound
add
pop
xor
rcr
dec
popa
sub
mov
mov
dec
sub
in
mov
sub
jmp
sub
incb
xchg
aas
cmp
jecxz
mov
in
daa
jns
dec
test
or
ret
push
adc
push
mov
or
bnd
dec
or
jle
push
xor
cmp
pop
sub
lret
push
das
sti
popf
mov
pusha
rcr
dec
sbbl
add
mov
and
scas
int
das
in
ds
in
cmp
jo
xor
in
inc
in
rcrl
or
xor
jno
popa
or
sub
adc
mov
and
sti
shrl
pop
push
negb
out
sbb
rclb
aas
or
cmp
stc
ret
ljmp
inc
iret
arpl
shrb
fsubr
mov
icebp
aaa
cmp
pop
xor
mov
dec
ja
testl
push
in
lods
or
or
dec
outsl
push
dec
cld
imul
sbb
jb
shlb
fidivl
cmpsl
mov
mov
test
out
clc
shrb
push
push
insl
rorb
add
xchg
out
xorb
xlat
test
fnstsw
mov
mov
enter
jmp
decl
cltd
or
popa
push
jb
lods
inc
ja
mov
std
lcall
cmp
push
mov
cmp
in
repz
loop
repz
stc
decl
lock
cmc
notl
shl
mov
dec
pop
sbb
cmp
or
int
aas
mov
push
imul
cmpsb
stos
jle
shlb
xor
outsb
sub
xor
les
adc
repnz
sbb
xchg
adc
mov
mov
jl
mov
jb
mov
sbb
int
or
stos
fwait
mov
sahf
adc
mov
fwait
incl
push
xchg
cmp
mov
sbb
lea
rorl
pop
sarl
ret
or
or
test
jmp
imul
inc
mov
cld
aam
lds
mov
pop
inc
cltd
sub
push
add
rcrb
mov
jle
mov
pop
aam
pop
jno
fiaddl
push
cmpsl
xor
mov
mov
push
icebp
sub
mov
pop
pop
cmp
cs
repnz
mov
jg
popf
es
add
test
ja
int
xchg
push
or
test
mov
out
push
add
jmp
cmc
jle
mov
jns
gs
xchg
pop
or
or
outsl
xchg
cmpps
xor
pop
cltd
subb
jne
xor
mov
push
stos
inc
cmp
jae
pop
insl
ret
imul
mov
push
inc
jno
enter
or
loop
adc
adc
fsts
xor
cwtl
inc
dec
mov
aas
mov
add
ss
xchg
out
jle
test
cmp
out
aas
cmp
mov
xchg
outsl
xor
daa
sub
mov
xor
lds
shlb
push
pop
out
adc
jne
test
pop
aam
mov
push
lcall
inc
popa
pop
push
dec
inc
xor
xor
adc
mov
sbb
sahf
cmp
dec
inc
sub
bound
cmp
xchg
and
iret
into
dec
and
push
dec
mov
call
push
psrad
mov
and
or
xlat
stc
adc
inc
lods
test
cld
sete
lock
cld
insb
popa
movsb
jno
add
sbb
mov
jne
fmuls
xor
cmp
clc
jne
stos
pop
cli
mov
call
inc
sub
mov
mov
arpl
and
or
adc
pop
out
sub
mov
leave
inc
aaa
insb
stos
sub
mov
jb
mov
fwait
sti
lcall
push
mov
mov
dec
movsb
xchg
cltd
ret
pop
add
nop
mov
cmp
mov
out
sub
sub
mov
jmp
cld
or
jle
xchg
sbb
or
jp
and
mov
mov
mov
sti
mov
sahf
sbb
push
les
xchg
mov
mov
inc
add
scas
cmp
fidivrl
or
dec
mov
sbb
lds
and
dec
mov
inc
inc
cwtl
adc
arpl
dec
je
and
bound
stos
mov
adc
inc
add
pop
roll
popf
dec
shll
xchg
int3
pop
incb
lds
ret
mov
jbe
push
sbb
ror
popa
push
dec
sti
sarl
mov
mov
cs
xor
mov
dec
lea
sahf
loope
cmc
lods
fisubs
stos
insl
sub
loopne
testl
es
outsb
je
fcomp
adc
xchg
enter
dec
mov
jmp
pop
sub
fsubrl
pop
or
add
imulb
push
jmp
mov
lock
pusha
out
xor
cmpb
add
jge
adc
mov
jo
ss
mov
inc
imul
data16
and
loope
mov
xchg
pushf
lcall
or
push
cltd
lods
mov
iret
xor
test
mov
xchg
jle
leave
xor
daa
leave
outsb
jge
nop
cwtl
insl
lret
nop
into
mov
sub
sbb
outsl
icebp
jl
pushf
inc
enter
idivb
push
icebp
test
add
mov
inc
orl
add
xchg
std
fmul
cmc
int3
push
mov
clc
and
xchg
das
add
mov
jo
repnz
test
fcomi
add
out
or
xor
aad
jb
into
push
cmp
and
clc
out
jo
pop
cmpsl
add
pusha
popf
mov
mov
adc
pop
shll
sub
jmp
shrb
loop
jle
adc
dec
lahf
or
cmp
adc
push
rcr
or
out
jl
adc
xor
ss
xor
adc
in
dec
cmp
mov
mov
addr16
cmpl
mov
sbb
adc
xchg
bound
fst
adc
out
jno
arpl
push
outsb
mov
mov
nop
dec
popa
and
mov
adc
xchg
in
nop
or
sub
cmpsb
or
bound
movsl
cltd
dec
and
push
and
sbb
inc
jge
sahf
xchg
pusha
lret
cld
jg
out
test
pop
push
pop
lods
lds
jae
popf
scas
push
push
rep
cmc
sub
mov
ljmp
in
adc
add
or
jne
imul
scas
mov
pushf
stos
or
mov
lods
int3
fisttps
sbb
add
out
not
sub
ds
popa
mov
or
arpl
mov
sub
pop
gs
dec
jnp
cmp
cltd
cmpsl
mov
xor
mov
and
adc
call
fs
cltd
mov
iret
pop
sahf
add
and
jecxz
outsl
fdiv
dec
inc
push
stos
loopne
fmull
fwait
mov
xor
repnz
into
push
fxch
repnz
mov
lock
popf
cmp
inc
push
and
pop
popa
add
sahf
in
pop
xor
sbb
sbb
mov
cmp
gs
dec
inc
sahf
jmp
sbb
idiv
hlt
test
mov
jmp
mov
outsb
hlt
rcr
lcall
sbb
ret
into
inc
and
mov
sbb
lcall
das
icebp
scas
pop
xchg
in
stos
push
subl
mov
aas
sbb
adc
sti
cmp
je
cmp
sub
fwait
icebp
push
xchg
xchg
dec
repnz
popl
xchg
shll
sbb
mov
xor
cmp
sub
mov
pop
push
lret
add
adc
gs
sahf
mov
inc
jb
xor
gs
dec
scas
fstpt
xchg
push
xchg
in
inc
pop
add
inc
in
movsb
push
and
fwait
imul
inc
dec
and
icebp
mull
jns
mov
push
int
arpl
xchg
push
scas
or
jp
loop
lret
fsub
xchg
lds
add
mov
shlb
xor
mov
leave
cmp
je
fldenv
test
subl
inc
pop
lods
es
lock
inc
sub
xor
xchg
in
pusha
outsb
ret
dec
jmp
sub
sti
pop
push
rclb
sub
std
frstor
fwait
insb
cld
sbb
sbb
outsl
push
inc
mulb
dec
pop
sub
cmp
push
push
in
mov
add
push
add
jg
les
sahf
int
pop
or
jmp
mov
or
into
es
fimuls
data16
in
stos
repz
out
xchg
in
lods
push
mov
ficompl
dec
jl
hlt
mov
lret
std
add
movsb
sub
cmp
loop
add
xchg
xchg
pop
cld
aad
js
add
pop
cmp
movl
js
xchg
nop
jmp
adc
mov
sti
jbe
xchg
es
mov
outsl
into
gs
into
mov
idiv
mov
fldcw
test
cmp
inc
pop
xchg
ficomps
ficoms
xor
or
dec
sarb
or
and
mov
push
js
xor
popf
and
push
pop
or
dec
add
and
insb
sub
pop
jbe
sub
jge
mov
pop
and
into
pop
dec
adc
scas
add
test
and
push
test
ficoml
cmp
insl
test
fucomi
jae
jl
mov
push
or
into
repz
pop
lret
adc
scas
and
mov
inc
sub
dec
jl
mov
xor
dec
arpl
das
adc
xchg
xchg
mov
mov
cmpsl
adc
adc
pop
ret
pop
iret
in
xlat
mov
xor
add
xor
mov
insl
iret
test
dec
xor
xor
scas
inc
adc
dec
das
iret
loopne
pop
and
lods
dec
rclb
sbb
mov
add
or
fiaddl
dec
xor
bound
rcrb
addr16
lahf
adc
out
jb
les
sub
or
jg
loopne
pop
xor
in
pop
dec
out
lret
sbbb
sarb
inc
dec
pop
sbb
stos
cmpsl
ret
dec
inc
ror
xor
jecxz
sub
std
das
push
fnstenv
fistpll
xorl
xor
repnz
xchg
dec
xchg
ret
arpl
data16
mov
nop
mov
mov
add
in
xor
add
das
cli
shl
lods
dec
in
shr
insb
jl
lds
outsb
js
sahf
inc
outsb
fs
data16
cmp
repnz
loope
mov
mov
test
lds
cmpsl
inc
inc
or
shlb
fmull
into
sahf
fiadds
jnp
inc
and
fisubl
mov
cmpl
sub
pop
pop
adc
mov
flds
sbb
pushf
ss
add
lret
push
mov
or
jl
cmp
mov
adc
xor
push
pop
adc
mov
mov
adc
fstpl
inc
inc
outsl
sbb
xchg
cld
out
leave
add
adc
inc
pop
mov
cld
mov
shl
gs
or
jnp
inc
mov
adc
mov
insb
inc
mov
or
std
mov
xor
dec
cli
lods
xchg
fidivrl
and
adc
ja
test
add
sbb
sub
push
daa
les
mov
outsl
inc
add
sub
lret
sahf
fnop
or
or
popa
hlt
jecxz
sbb
push
pop
push
sbb
inc
push
mov
pop
lea
and
add
popa
movsb
xor
cmpsb
push
ror
mov
in
sahf
test
outsl
cmpsl
xchg
sub
mov
aad
scas
xchg
pop
ljmp
push
push
mov
fbstp
insb
sbb
mov
icebp
inc
or
push
out
insb
cmpsl
pop
push
adc
sbb
in
xlat
push
cs
dec
xchg
push
aam
std
mov
xchg
mov
sbb
pop
ret
fwait
jge
and
fisttpl
adc
xchg
movsl
vmovdqa
lret
push
cmp
insl
xchg
test
pop
fwait
cmp
xchg
insb
sub
and
nop
jno
movsb
mov
mov
outsb
les
mov
push
out
scas
movb
sub
inc
dec
stc
dec
pushf
xor
testb
jle
out
xor
addr16
in
fdivs
in
pop
mov
aaa
push
cli
pusha
or
cltd
pop
insl
and
mov
add
cld
outsl
stos
mov
call
xchg
add
mov
inc
sbb
mov
shl
push
mov
sbbb
fwait
aad
pop
push
sbb
add
and
inc
dec
jp
lock
int
push
lcall
dec
and
mov
in
sub
jb
cmp
movsb
xor
pop
xor
scas
adc
les
mov
das
imulb
int3
sub
cli
sub
mov
sbb
sub
push
or
popf
jle
bound
xor
xor
lock
inc
and
and
mov
inc
test
mov
add
mov
sub
xchg
jnp
or
mov
xor
loope
in
shrb
ljmp
into
out
lock
or
push
scas
xchg
and
lock
adc
test
enter
scas
jo
rorl
cld
fdivrl
out
sbb
lods
lock
ss
sbb
cli
lcall
mov
cmp
test
gs
cltd
jne
jns
outsb
aam
insl
jl
shll
clc
xor
jne
mov
cmp
jbe
xor
test
mov
push
inc
loop
cwtl
push
sbb
fs
mov
fnstenv
xor
dec
ret
xchg
xor
add
dec
lret
dec
cmp
addr16
shrl
sti
mov
mov
movb
test
mov
mov
addr16
xchg
test
xchg
push
clc
xchg
lds
mov
cmpb
aad
cmpsl
imull
or
in
xchg
cmp
imul
adc
add
outsb
add
outsl
jne
push
fstpl
dec
outsl
xchg
or
outsb
stos
dec
add
sbb
add
adc
sbb
in
cli
lods
ret
sub
ja
xchg
sub
inc
ja
test
int3
aaa
out
pushf
lahf
push
mov
and
std
jge
rcrb
fstl
or
xorl
mov
sbb
ss
outsb
mov
jns
imul
mov
sbb
xchg
dec
cwtl
lods
dec
push
sarl
ret
xchg
scas
aad
xchg
cmp
ss
sarb
cmp
xchg
xchg
ret
outsb
xchg
int
fs
lods
arpl
dec
sbb
int
daa
addb
mov
inc
mov
ret
xchg
xchg
out
call
adc
adc
dec
lcall
in
dec
mov
sbbb
mov
mov
jge
stos
add
jns
jbe
imul
mov
xor
fidivl
dec
sbb
xchg
xchg
push
aas
std
popf
shlb
mov
jg
add
fists
fcmovu
sub
add
ss
sub
daa
dec
rep
daa
in
cmpsl
jno
jg
orb
xor
pop
adc
adc
inc
mov
mov
popa
shl
daa
cs
pop
push
ja
shlb
in
and
scas
pop
inc
and
inc
jno
and
sub
sub
pop
or
mov
aam
mov
fisubrl
imul
sub
dec
mov
and
and
lea
xor
imul
cmp
dec
xor
out
ret
in
shlb
pop
enter
inc
mov
test
add
mov
scas
add
insb
pop
mov
xor
xor
std
sbb
mov
fmull
popa
icebp
inc
lock
cmp
pop
cmc
xor
fsubrp
push
movsl
sbb
mov
or
xchg
fdiv
push
xor
push
mov
das
cs
pusha
test
inc
ja
push
inc
push
fnsave
fcmovne
enter
dec
push
inc
push
sti
mov
add
jo
dec
cli
cmpsl
bound
xrelease
xchg
sbb
dec
es
insl
jl
push
ja
es
adc
dec
adc
ficomps
pusha
cmpsb
or
jmp
push
dec
push
mov
in
mov
arpl
arpl
xchg
leave
pusha
xlat
js
adc
lock
lret
popf
xchg
and
out
sbb
ss
std
sarb
mov
loop
ja
mov
mov
mov
test
into
pusha
pop
popa
inc
mov
stos
sbb
shll
inc
xchg
xor
mul
ss
and
out
sbb
cmc
mov
mov
negl
jp
cmp
sub
repnz
xchg
imul
out
ja
imul
push
mov
mov
cmp
push
int3
xor
push
movsb
push
or
out
push
jb
add
clc
dec
sub
ret
mov
mov
in
mov
into
pop
xor
sub
lods
repz
aam
sbbb
ror
xchg
xchg
int3
push
lea
lods
xchg
lds
and
push
dec
imul
stos
mov
gs
xor
xor
sbb
sti
xor
mov
xlat
dec
scas
push
inc
lret
scas
push
aad
push
flds
test
bound
loop
scas
scas
in
jb,pn
mov
mov
mov
das
rclb
xor
pushf
sbb
pop
cli
dec
mov
sbb
cwtl
jmp
xchg
popf
add
adc
and
loop
push
mov
add
dec
or
cmp
pop
push
outsb
inc
rorl
inc
sub
pop
mov
inc
popf
dec
sub
mov
sarl
notb
mov
sbb
into
adc
or
cld
aam
into
adc
push
mov
sub
popf
iret
xchg
repz
jnp
sub
xor
xchg
arpl
sub
out
leave
pop
mov
mov
loope
mov
jl
cmpsb
std
push
sbb
mov
xchg
dec
dec
cmp
cmc
dec
fcmovb
inc
out
fdivl
negb
or
fs
pusha
dec
aad
divb
cmp
pop
aaa
cmp
movsb
shll
aam
stc
push
xchg
sti
cmp
push
divb
fmull
push
roll
gs
add
pop
xor
pop
adc
nop
sti
scas
push
fimuls
in
or
test
mov
lahf
ja
inc
fldt
xor
bound
and
cmp
filds
cmc
mov
lcall
movsb
mov
pushf
aas
jns
out
dec
cmp
xchg
nop
jge
jg
sbb
xlat
mov
mov
nop
jecxz
mov
and
inc
jno
pop
cwtl
xchg
push
add
fisubrl
test
cmp
popa
mov
stos
xorb
dec
xor
out
loopne
xchg
mov
mov
stos
bound
jno
pop
sbb
movsb
ja
add
movsl
imull
fistpll
xor
int
dec
arpl
xlat
push
repnz
cmp
lock
scas
stos
filds
fisttps
mov
mov
mov
stc
mov
fs
das
adc
sbb
sahf
fwait
pop
jmp
mov
mov
add
jg
mov
popf
or
add
jae
movsb
imulb
lods
mov
push
push
subb
in
mov
fildll
cwtl
xchg
mov
int
outsb
mov
icebp
leave
mov
jno
lods
gs
adc
pop
std
fidivrs
jp
mov
subl
adc
cmpsb
mov
pop
dec
cmpsl
jge
mov
lea
add
loop
ret
insl
xchg
mov
daa
cmc
sarb
daa
sahf
int
stos
pop
sarb
dec
mov
mov
or
mov
fists
mov
mov
mov
ljmp
lret
sbb
iret
xor
xor
inc
daa
lcall
jbe
cmpsl
mov
push
inc
add
es
push
lahf
fsubl
mov
sbb
jmp
push
inc
and
hlt
xor
cmp
push
lcall
lock
addr16
sub
imul
andb
rcr
ret
cmp
idivl
add
adc
mov
xchg
pushf
mov
in
sbb
icebp
pop
sub
and
cmp
xorb
dec
repnz
push
or
loop
add
and
aas
and
cltd
lea
inc
std
mov
adc
icebp
dec
mov
mov
das
cwtl
fildl
inc
xorl
int3
jne
ret
mov
cltd
mov
ja
loopne
call
mov
mov
adc
xor
inc
addr16
mov
mov
pop
aas
add
pop
push
daa
pop
clc
pop
adc
pop
test
xchg
adc
int
scas
pop
iret
sub
or
loop
jg
js
scas
and
pop
mov
xor
cmpsb
xor
les
ja
push
frstor
mov
stos
test
dec
in
jge
push
inc
sub
cmp
inc
addr16
es
ss
xchg
in
mov
sbb
imul
stc
lods
sub
and
test
mov
fs
fidivl
jecxz
ret
jne
lods
stc
mov
push
das
cmp
movsl
ret
pop
in
loope
fcmovu
pop
and
dec
ja
aam
inc
xchg
mov
jb
dec
xchg
movsb
mov
jb
mov
mov
lret
lcall
sub
sahf
pop
out
mov
dec
pop
hlt
ret
pop
mov
jle
movsl
xchg
and
scas
insl
rclb
outsb
push
mov
sub
movsl
inc
xchg
inc
fcmovbe
xor
inc
scas
pop
or
sub
popf
and
jp
rcrl
pop
pop
cmp
push
push
shl
jno
sbb
rcll
mov
add
pop
and
push
std
push
int
loopne
push
in
mov
adc
mov
pop
push
jo
dec
lahf
push
sub
movsb
jbe
insb
aas
pop
popf
sub
gs
scas
sbb
inc
cmp
and
cld
pusha
cmp
flds
aas
sbb
test
rolb
pop
and
xchg
inc
shlb
pop
pop
shlb
in
fstps
sbb
cltd
fisttpll
test
adc
cli
mov
jg
mov
pusha
arpl
cmp
pop
inc
out
pop
mov
sbb
movl
cmpsl
sub
addb
scas
xor
mov
add
orl
jbe
adc
lods
in
inc
sbb
adc
inc
push
mov
pop
aaa
adc
add
mov
add
addr16
dec
and
sub
or
mov
std
iret
leave
sahf
insl
add
negl
push
ss
xchg
bound
imul
mov
imul
les
lret
add
divb
inc
std
addr16
loopne
jp
loopne
mov
adc
mov
mov
nop
cmpsb
sbb
push
dec
and
sbb
or
mov
or
out
aad
fisttpll
sub
pop
cmp
mov
mov
cmp
pop
jb
insl
or
pop
inc
xchg
loope
lret
push
adc
scas
mov
pop
xchg
arpl
ds
aam
iret
shrb
call
add
call
out
mov
sub
out
rclb
sub
mov
mov
nop
mov
es
subb
push
add
dec
ret
mov
and
fists
aam
inc
mov
mov
adc
adc
call
pop
shll
mov
and
add
or
push
pop
imul
sar
and
les
in
cmp
mov
add
or
nop
ret
mov
sbb
outsb
mov
sub
xchg
push
mov
sbb
test
insb
lret
cmp
push
ljmp
sar
inc
pop
mov
mov
fiadds
shlb
dec
mov
push
dec
pusha
ljmp
mov
pop
outsb
jbe
loope
hlt
mov
into
sub
lcall
pusha
fwait
push
daa
test
inc
pop
xchg
pop
mov
sar
or
loope
xchg
xchg
mov
and
mov
mov
push
sbb
iret
sbb
in
in
add
stos
mov
jge
jecxz
mov
dec
popa
add
mov
mov
jns
addr16
jecxz
into
sub
jo
mov
xchg
shll
cmc
inc
and
lahf
xchg
jp
dec
test
mov
sub
adc
cmc
hlt
int
jmp
mov
or
aas
xchg
xor
negb
movsb
mov
test
mov
or
pop
and
inc
dec
pop
pop
daa
pop
jne
pop
daa
ljmp
push
xor
int3
add
lods
push
mov
adc
mov
or
inc
xchg
cs
fldt
mov
mov
or
mov
insl
adc
xor
aas
mov
push
test
dec
repnz
adcl
pop
out
sbb
pop
aad
push
outsl
ds
insb
loope
cmp
mov
stc
add
push
mov
scas
mov
pop
lahf
clc
daa
push
sub
popf
mov
mov
outsb
cmpsb
pop
mov
cmp
dec
jo
nop
fs
jae
cwtl
push
insb
dec
bound
xor
outsb
in
loope
jns
add
cli
pop
xchg
gs
scas
sbb
out
inc
push
fwait
mov
mov
orl
xchg
faddl
and
lret
rorl
dec
int3
test
leave
scas
mov
or
test
xchg
fidivs
push
mov
je
mov
and
cltd
ror
jmp
jb
fwait
inc
sbb
pop
pop
movl
ds
push
lock
mov
or
and
push
dec
jp
mov
xor
movsl
and
xlat
cld
shlb
js
pop
pop
in
sbb
mov
lret
das
mov
sub
stos
cltd
inc
xchg
into
xchg
enter
or
in
cmp
mov
or
gs
popf
cli
jns
lcall
sub
subb
pusha
scas
lock
test
jno
das
test
dec
cmp
jbe
fnstenv
pop
jns
jb
xchg
and
mov
fwait
sub
data16
xchg
outsl
iret
push
ret
dec
int3
cmpsb
loopne
jae
inc
or
aas
inc
negl
push
int
inc
lahf
push
cld
xchg
adc
mov
fwait
lods
ret
repnz
mov
push
sub
dec
cmc
and
mov
addr16
not
sti
xchg
mulb
mov
bound
flds
aam
int
and
pop
fwait
test
lock
sbb
xchg
mov
sub
pop
loope
sub
repz
push
adc
sub
nop
movsl
mov
mov
insb
jg
stos
mov
inc
es
add
jmp
ret
out
mov
mov
scas
dec
mov
add
out
call
mov
ljmp
pop
and
push
loopw
ljmp
fisubrs
mov
enter
loop
inc
sbb
test
adc
stos
sub
ja
ror
ds
or
jg
in
mov
data16
xor
sarb
ret
fs
in
incb
sbb
inc
sahf
push
sbb
adc
cmp
inc
jle
jg
insl
loopne
icebp
int3
insb
loop
rorl
dec
fs
bound
std
push
mov
pop
cmp
lea
arpl
daa
lea
fdiv
fcmovne
lods
add
mov
mov
push
cmp
and
inc
mov
adc
jl
bound
imul
rolb
inc
sub
lds
or
repnz
out
ret
push
ljmp
lods
imul
add
clc
test
gs
mov
mov
lret
hlt
in
enter
mov
stos
lcall
mov
jp
mov
andl
jnp
dec
pop
pop
aaa
flds
loope
mov
pop
and
xor
ret
sbb
daa
stos
dec
cli
inc
adc
add
xor
out
cs
aad
pop
imul
or
test
inc
and
or
insl
nop
mov
xor
sub
imul
ret
addr16
das
scas
add
sarb
xchg
mov
push
enter
dec
cmp
pop
jo
subl
mov
jg
jb
orl
mov
xor
lcall
xor
adc
clc
push
lock
mov
ss
shlb
insb
jb
lods
push
imul
cmpsl
jbe
cld
pop
mov
mov
aaa
pushf
adc
xor
add
enter
mov
mov
test
fiaddl
mov
jp
aad
mov
lret
cmp
pop
cs
jecxz
dec
hlt
fnstcw
aam
cld
mov
cmp
aaa
lahf
scas
sbb
cmpsl
cmc
pop
jg
imul
out
enter
xchg
jbe
add
pop
ds
push
movsl
mov
dec
mov
fsts
fisttps
ja
or
enter
jl
inc
stc
mov
ret
sub
push
subl
js
fwait
mov
jge
test
and
cmp
arpl
mov
pop
jl
popa
pop
loopne
arpl
mov
mov
std
insl
jp
jno
xchg
jle
into
cmpsb
and
mov
lret
xor
xchg
js
testb
lahf
mov
lret
push
cld
subb
push
mov
ret
and
nop
arpl
mov
and
pop
sub
mov
mulb
mov
test
pushf
dec
mov
adc
push
dec
and
mov
push
int
jge
shll
mov
mov
push
inc
in
aam
shrb
push
xchg
mov
pop
pushf
js
mov
stos
xchg
roll
lret
inc
push
incl
jb
adc
clc
or
loope
lds
lock
xor
call
jp
sbb
ret
xchg
out
std
mov
test
pop
cmp
adc
jnp
jg
sarl
mov
xchg
sbb
stc
lods
in
xchg
mov
leave
ss
dec
clc
fwait
rcll
xlat
sarl
outsb
sub
mov
arpl
xchg
lahf
inc
popf
dec
adc
adc
pop
pop
sti
pusha
das
ficoms
test
hlt
push
jbe
push
lds
lods
movsl
inc
dec
aam
into
xchg
mov
popa
add
xchg
xchg
xor
jns
push
push
and
and
xchg
mov
mov
sbb
mov
ret
xor
jp
lds
and
test
mov
jle
mov
les
dec
sbb
xchg
hlt
push
sarl
adc
mov
push
addr16
aas
adc
aaa
movsl
cmp
andl
mov
push
mov
mov
mov
clc
and
fadd
push
dec
out
fiaddl
jo
pushf
and
push
add
cmp
mov
push
out
js
mov
xor
fidivrl
int
push
mov
mov
push
not
xor
popf
mov
mov
jae
stos
cli
in
out
out
inc
repz
jne
cmpsb
test
lds
pop
repz
ficomps
in
cmp
test
cmp
adc
fs
std
push
pop
fs
mov
xor
hlt
xchg
mov
xchg
aas
scas
lret
adc
icebp
mov
mov
fwait
add
clc
inc
mov
aas
jo
xor
sbb
pop
andb
dec
out
cli
popf
mov
addl
jo
inc
lds
push
ror
call
mov
dec
call
xor
es
add
cmpsl
aam
sub
int3
fnstcw
aaa
jae
xchg
fwait
xchg
lret
mov
jecxz
xchg
or
lret
fsub
cmc
jo
scas
mov
bound
out
arpl
ss
push
lods
sbb
jmp
or
jns
cmp
mov
fucomp
roll
or
pop
adc
xor
les
or
fsub
mov
in
je
dec
roll
icebp
jmp
test
mov
and
popf
pop
shlb
imul
cmp
arpl
cmpsb
mov
lea
xchg
shrb
add
loopne
xor
xor
insl
adc
mov
adc
adc
add
in
pushf
lret
pop
adc
loopne
pop
xchg
xlat
stos
scas
lea
mov
or
setl
hlt
sbb
push
je
dec
fidivl
test
js
mov
insl
mov
daa
lret
or
int
pop
fldl
push
adcb
insl
xorb
lahf
repz
cli
sbb
test
pop
dec
mov
iret
pop
mov
mov
sti
in
fnstcw
loop
clc
cmp
bnd
and
ljmp
xchg
xor
negl
lahf
ret
pop
sub
dec
in
cmp
mov
clc
xchg
fstl
cmp
aam
push
enter
push
lds
xchg
sbbl
iret
in
dec
cmc
add
mov
ds
and
pop
scas
roll
sbb
in
sbb
and
sub
fidivrl
pusha
nop
and
mov
xor
xor
ror
adc
sub
or
or
pop
push
rorb
adc
push
dec
add
out
sub
mov
push
inc
scas
lret
aas
dec
push
adc
test
cmp
loopne
or
test
push
xor
subb
mov
jb
loope
loope
and
mov
out
mov
lcall
dec
jns
aas
fldcw
mov
xchg
xor
je
inc
call
push
and
add
add
fidivrl
sbb
push
pop
mov
stc
push
mov
jno
loop
out
push
pop
lods
lock
sar
xor
popa
dec
outsl
push
outsb
dec
out
xchg
and
rorb
xchg
das
sub
or
cld
lods
mov
popa
or
lds
xchg
popa
xor
ret
xchg
pop
xchg
pop
add
and
inc
inc
decl
pusha
xchg
jecxz
or
shlb
test
cmpb
repnz
xchg
cmp
movsb
push
jo
jge
jmp
sbb
push
mov
adc
stc
inc
enter
dec
pop
icebp
jp
push
pop
icebp
jp
enter
insl
popf
push
mov
shll
push
xlat
or
jecxz
pop
add
popf
mov
pop
stos
jno
xchg
data16
rcrl
adc
bound
test
pop
dec
lret
mov
inc
out
shlb
mov
cmpsl
hlt
push
stos
sub
mov
enter
test
dec
sub
xor
pop
test
push
sub
mov
cmp
cmp
push
fstps
mov
mov
dec
cmp
mov
int
cmp
adc
test
in
sub
lcall
push
adc
inc
lret
aam
xchg
std
mov
je
jnp
jecxz
popa
pusha
lcall
inc
loopne
xor
pusha
pop
aad
test
out
push
rclb
fs
xchg
test
inc
pop
mov
mov
xchg
hlt
jle
push
aas
push
roll
sbb
or
fwait
cmp
mov
fwait
or
insb
jbe
sbb
or
mov
insb
add
popa
mov
movsb
into
xor
xor
sbb
imul
mov
push
mov
mov
into
pop
das
mov
movsl
shlb
loopne
fsubrl
inc
addr16
inc
inc
sbb
sarl
xchg
leave
lods
push
sub
push
and
rclb
ret
fldcw
xlat
popa
sarb
popf
test
inc
cmp
lds
loope
cwtd
out
imul
sbb
add
sub
jnp
sbb
fucomip
or
movsb
ljmp
xchg
jmp
mov
jg
out
ljmp
push
aas
addb
outsb
mov
adc
arpl
xchg
lea
fsubl
icebp
pusha
lock
adc
dec
mov
pop
jmp
inc
cmp
sbb
ja
mov
enter
mov
pop
and
xchg
shll
stos
sahf
fistpll
jnp
adcl
dec
outsl
cmpsb
or
mov
aaa
insb
clc
dec
inc
xlat
outsl
clc
xor
sbb
rolb
xchg
sbb
add
adc
push
cmpsb
lcall
push
inc
sbb
dec
pop
sbb
mov
cmp
std
dec
cmp
loopne
xor
mov
cmpsb
push
cmc
dec
fstl
push
data16
dec
xor
bound
fwait
sahf
jno
dec
fucomi
loopne
movsl
jo
sub
inc
and
fsubl
inc
jg
inc
inc
test
jecxz
aad
add
inc
jg
ret
sbb
dec
jmp
jns,pt
add
cltd
pusha
aad
xchg
sub
jge
jnp,pt
jnp
inc
scas
cmp
pop
xor
mov
les
ret
adc
imul
pop
push
out
or
in
push
mov
fiaddl
imul
lret
pop
jns
ja
inc
hlt
lret
jle
mov
inc
inc
ds
mov
adc
inc
addr16
lods
push
jnp
xor
mov
sahf
and
xor
arpl
repz
jo
dec
mov
cmpsb
repz
add
insb
mov
pop
inc
add
repnz
jmp
lods
in
xchg
sahf
and
sbb
lret
xchg
pop
jmp
xor
mov
pushf
xor
into
sub
push
dec
mov
pop
and
aaa
pop
lea
stos
into
jp
daa
scas
xor
in
mov
pop
stos
mov
dec
test
push
cmp
imul
push
pop
out
cld
xor
fidivrs
stos
dec
lock
test
imul
pusha
fsubl
mov
pusha
push
adc
xor
roll
out
lcall
outsl
std
inc
scas
stos
dec
pmaxub
iret
mov
popa
jae
decl
xorl
sar
push
dec
push
xchg
loop
lret
adc
inc
scas
and
add
or
mov
mov
in
mov
sarl
insb
or
lret
jo
jmp
or
sbb
pop
into
int
adc
test
sbb
div
adcl
dec
orl
xor
mov
push
sbb
bound
xor
fistpll
out
sbb
mov
or
les
pop
xchg
ret
das
pop
jge
pop
dec
mov
jno
sub
mov
pop
mov
lea
jne
in
xor
xlat
pop
lret
clc
movsl
adc
push
in
pop
faddl
cltd
fistps
in
cmpsb
jns
les
les
sbb
negl
sbb
or
shll
pushf
cmp
pop
push
ljmp
add
xor
mov
clc
mov
pop
cli
movsl
push
aad
mov
cwtl
inc
ja
out
adc
inc
sub
xor
dec
rorl
ret
aad
imul
fidivrs
cwtl
xor
fcmovnb
stc
jbe
ret
lcall
imul
pop
add
mov
cmp
inc
arpl
hlt
add
jle
cmp
pop
mov
xor
cmpsb
test
lods
pop
and
stc
outsl
rcrl
cmpsl
and
rorb
outsb
and
dec
setl
adc
dec
into
stos
notb
aas
lcall
inc
aad
repnz
lds
and
ss
orb
out
ljmp
mov
adcb
push
ficoml
cs
shll
sub
and
jle
or
mov
lcall
dec
fiaddl
xchg
xor
add
jle
rorl
out
sub
adc
inc
push
ds
dec
xor
jns
inc
add
jne
mov
in
divb
test
cmpsl
rcrl
dec
dec
out
aad
pushf
lods
in
dec
sub
push
leave
cmp
enter
shl
pop
xchg
nop
pushf
mov
fildll
or
std
inc
test
cmp
jle
adc
mov
stc
iret
test
jne
arpl
mov
or
imul
mov
xchg
inc
or
fcompl
test
sbb
gs
lret
adc
mov
mov
ret
lret
aaa
cmpsb
adc
push
enter
imul
popf
lret
ret
das
pop
pusha
cmc
dec
mov
jmp
mov
pusha
sub
inc
or
in
filds
lahf
sti
testb
cmp
je
inc
lret
mov
lret
jmp
aad
xlat
into
push
scas
or
cmc
test
ret
xor
imul
test
loop
in
dec
stos
mov
jo
xor
jb
or
jge
cld
xchg
cmp
adc
in
cmp
push
push
jne
scas
xchg
sbb
inc
push
xchg
sub
or
int
jge
out
ds
incl
push
mov
jmp
dec
inc
push
pop
cltd
pop
jmp
push
lahf
lcall
adc
xchg
or
popa
sub
clc
test
or
push
and
loop
jbe
push
xor
imul
and
push
dec
movsb
mov
in
fdivrl
mov
sbb
mov
sbb
or
lock
data16
es
xchg
jp
mov
aaa
mov
add
sub
outsb
in
loop
dec
sub
cli
adc
push
ss
jg
rcrl
pop
mov
lods
adc
push
mov
xor
dec
jle
mov
shll
fsubs
cltd
gs
test
pop
cmp
dec
shll
test
cmp
lds
iret
or
andl
call
push
inc
subb
movsb
mov
icebp
mov
xchg
mov
pop
aaa
mov
and
into
cs
lods
or
gs
leave
sbb
adc
dec
mov
aam
insb
movsb
xor
sarl
ja
cmp
iret
stc
xor
out
pop
lods
pop
pop
mov
xchg
or
nop
jge
mov
shrl
js
stos
adc
and
mov
jb
out
mov
cmc
xor
sbb
fwait
pop
cltd
xchg
push
jae
cmp
into
fildl
dec
jge
rcrl
ss
dec
or
into
pusha
xchg
sbb
imul
adc
mov
push
into
inc
dec
cmpsl
sub
jge
and
mov
mov
ja
ret
mov
fildl
inc
mov
or
loop
add
jnp
add
js
out
data16
mov
or
icebp
mov
loope
test
vmovapd
stos
or
rcll
xchg
insl
outsb
push
idiv
xor
int
adc
sub
fildl
in
push
es
jg
xor
sbb
push
daa
mov
add
lret
xchg
jns
or
movsl
or
adc
and
dec
sub
inc
in
pop
cmp
jmp
add
and
add
cmp
movsl
sub
mov
cli
in
lea
into
xchg
imul
cli
sti
sahf
outsb
fsts
add
mov
ss
add
inc
push
dec
pop
xchg
cmp
movsb
and
cmpsb
fstl
ds
xor
xchg
stos
xor
cmp
and
insl
pop
mov
rcr
jno
jnp
aad
imul
repz
add
mov
jmp
or
cmpsb
inc
jne
sub
sahf
xlat
add
aam
mov
adc
test
xor
repnz
stos
dec
idivl
xchg
fcmovnbe
push
daa
aas
ret
and
cmp
mov
jg
mov
mov
jbe
cmp
pusha
fstpt
mov
aam
aaa
add
sbb
jno,pt
jecxz
cmp
dec
or
imul
mov
xchg
call
arpl
out
sbb
lds
test
out
fmuls
fs
jmp
out
ret
stc
xor
sub
sbb
dec
scas
leave
mov
mov
enter
pop
cmpsl
pop
xor
hlt
addr16
mov
imul
jle
scas
xchg
testl
sahf
jnp
add
xchg
xor
cmc
pushf
dec
cld
mov
or
shlb
xchg
hlt
sarb
aam
jne
pusha
ds
hlt
daa
mov
aas
std
stos
insl
aaa
stos
sub
pop
lcall
jnp
jge
stos
cmp
in
adc
pop
and
lret
ljmp
mov
xchg
and
lret
fildl
pop
sbb
mov
rorb
imul
cmpsl
pop
dec
repz
xlat
inc
or
mov
and
outsl
add
cmp
mov
fwait
xor
dec
adc
stos
popf
jle
mov
aam
leave
and
add
and
xchg
std
sub
sub
sbb
pop
pop
adc
mull
nop
lds
in
add
stos
and
dec
sbb
cmpsl
push
jno
out
aad
xchg
dec
rdpmc
movsb
loope
std
sti
loop
mov
popa
push
pop
pop
mov
and
outsl
sbb
jb
xor
add
lods
cmpsb
pop
fadd
mov
cmc
in
loop
ss
xor
sub
in
loopne
addr16
fidivrs
ljmp
xchg
push
adc
inc
pusha
test
repnz
notb
jno
divl
imul
sbb
xor
aad
push
loope
hlt
pop
lods
dec
add
xchg
dec
stc
add
insb
loope
fwait
aad
into
mov
das
js
mov
pop
cmc
add
lock
lcall
mov
mov
shrl
hlt
out
andl
test
jmp
mov
and
sub
dec
xchg
cmpsb
jge
cmc
nop
pushf
pop
lods
fldt
stos
and
clc
sbbb
push
aaa
dec
dec
fdivrs
out
push
ds
mov
outsl
cwtl
aad
xchg
fwait
mov
lahf
fidivl
jge
and
mov
push
xor
xchg
sbb
bound
push
stos
xchg
fwait
stc
leave
into
add
ds
jge
pop
rclb
or
enter
adc
shll
xlat
aad
mov
shlb
and
push
pop
pop
cmp
pop
out
ja
iret
xchg
push
sub
pop
push
adc
lahf
lea
in
ret
sub
pop
fstl
xor
xchg
mov
pop
andb
cmp
popa
jmp
sarl
cmp
lock
lds
push
int3
inc
mov
sbbl
loop
fistl
push
rcrb
inc
pushf
xor
jge
rcrb
push
xchg
adc
aas
xor
or
push
idiv
mov
shll
mov
cmp
push
dec
repz
testl
nop
cli
jb
mov
sub
pop
fcmovu
xlat
cmp
jns
xor
mov
lds
push
sub
ficompl
clc
cs
jo
pop
dec
mov
jmp
adc
push
and
jae
inc
sub
lret
cli
fisubrs
push
pop
inc
fmuls
mov
stos
push
rcr
lahf
or
test
cmpsb
in
mov
jmp
mov
mov
mov
test
cmp
das
fistpll
sub
pop
popf
xor
data16
int3
scas
lret
and
scas
xor
pushf
or
addr16
aam
and
adc
bound
mov
and
mov
adcb
sub
loop
imul
cmp
mov
xchg
pop
ds
out
push
inc
jl
fldl
out
aad
xchg
pop
jno
jns
pusha
ja
dec
push
shl
and
add
mov
jl
cmp
call
sbb
fsub
addl
add
stos
jp
jg
sub
lods
add
add
jae
lock
mov
pop
nop
lahf
lcall
popa
clc
int
ret
sbb
arpl
add
cmp
cmpsl
lahf
mov
das
mov
js
xchg
sbb
xchg
mov
iret
sbb
adc
fidivrs
pop
mov
xor
incl
sti
xor
jmp
pop
es
ja
cmpsb
pop
out
sub
dec
enter
xchg
or
sbb
push
scas
ja
mov
xchg
jnp
add
ja
sbb
push
mov
fxch
jmp
andl
or
fsubrs
imul
mov
into
inc
jnp
outsl
mov
adc
pop
movsb
test
cmp
xchg
adc
outsb
push
pop
push
iret
cmp
push
mov
arpl
insl
adc
sahf
push
jecxz
or
int
insl
mov
popa
mov
out
dec
aad
enter
mov
xchg
scas
out
incl
subl
pop
insb
jg
jae
leave
mov
jmp
and
sti
out
pop
cmp
sub
lret
pop
dec
inc
mov
repnz
arpl
loope
mov
aas
outsl
scas
cwtl
loope
push
lods
push
pop
mov
inc
mov
out
ret
mov
sbbl
lock
aaa
mov
ret
cld
inc
lock
mov
iret
sbb
movb
aas
adc
xchg
xchg
iret
out
daa
mul
cs
pop
mov
das
ret
and
insb
cmp
pop
add
push
pop
add
mov
icebp
mulps
add
imul
xlat
push
movsl
and
add
sub
mov
or
in
lahf
icebp
divb
mov
fwait
mov
hlt
sbb
js
jp
inc
jo
dec
movsb
mov
insb
mov
xor
mov
and
aas
mul
add
sbb
cmp
mov
movsb
and
lods
xchg
pushf
fs
out
cli
push
push
inc
add
in
xor
pop
lods
xor
or
lret
fistps
je
jl
subl
lret
lock
in
xor
push
or
jnp
sub
mov
pop
or
aaa
lcall
mov
pop
adc
push
fistpll
lcall
mov
and
and
cmp
add
cmp
inc
add
stos
mov
test
sub
pop
sub
rcrb
mov
add
negl
add
adc
inc
mov
mov
repnz
subl
or
mov
push
xlat
dec
mov
dec
orb
bound
push
lret
cmp
jp
aad
ja
jg
adc
repnz
mov
cltd
fdivs
xchg
jbe
xchg
adc
sub
stc
sbb
fildll
gs
scas
mov
aad
cli
cmp
cld
dec
aam
mov
inc
cmp
xchg
fidivrs
rorb
dec
cmpsl
sbb
mov
int
jb
test
sub
dec
insl
loop
mov
outsb
leave
imul
aas
xchg
dec
icebp
push
icebp
or
pop
aad
sahf
push
sub
jp
pop
lret
xchg
pop
ss
xchg
cmpb
sub
test
mov
push
pop
cmc
lock
inc
fistps
popf
icebp
push
fcmove
loop
push
add
insl
loope
push
out
and
and
mov
cmp
fidivrs
lret
scas
bnd
jp
sarl
or
out
into
or
lcall
mov
add
adc
mov
xchg
test
repz
dec
jb
fcoml
cmp
cmp
icebp
outsl
repz
sub
div
dec
loopne
leave
jecxz
inc
push
popf
imul
and
jl
and
out
mov
add
dec
cmp
dec
pop
sbb
dec
pushf
sbb
subb
popa
sahf
adc
xchg
ds
pop
lret
or
cmpsl
stc
sub
mov
addr16
ds
adc
fsubs
js
test
mov
mov
pop
lret
lahf
les
jle
bound
outsl
xor
mov
insb
or
mov
cmp
outsb
xchg
in
push
pop
shl
je
mov
test
jne
adc
fisttpl
pushf
les
add
xor
mov
fdiv
sbb
adc
adc
jge
shll
add
mov
daa
aam
out
jmp
jae
gs
push
push
push
or
dec
sbb
dec
int3
sub
iret
ds
int3
loope
popf
mov
enter
popa
in
std
cmpb
pop
xchg
xor
jmp
fists
sbb
inc
inc
cmp
push
dec
inc
fistl
push
pop
repnz
call
fs
fs
add
inc
stc
xchg
mov
addb
inc
insl
shll
stos
lahf
sub
das
mov
xchg
rcrl
ss
pop
add
js
out
stos
pop
pop
pop
in
pop
or
in
dec
fs
xchg
insb
mov
dec
andl
imul
shll
hlt
add
xchg
daa
and
sbb
js
test
jmp
xlat
fwait
aam
gs
mov
and
rcrb
or
incl
inc
mov
int3
or
jno
add
jbe
in
insb
and
jo
or
xor
fs
xlat
mov
dec
sub
cli
xchg
pop
lods
arpl
inc
bound
push
and
sub
or
sbb
fildl
and
pop
ret
mov
jns
in
orl
sbb
dec
imul
sub
lcall
orb
out
js
dec
scas
pop
add
gs
into
pop
xor
out
push
mov
pop
or
inc
pop
stc
dec
dec
insl
fisttpl
cmp
or
icebp
rorb
cld
call
pusha
jo
jb
pushf
inc
cmpsb
mov
std
mov
addr16
and
lds
dec
jo
push
pusha
bound
push
stos
xchg
movsb
cli
and
mov
in
mov
or
dec
sub
mov
mov
sbb
xlat
add
adcb
movsl
mov
div
lcall
into
bound
mov
int3
jle
push
in
sub
xchg
sti
out
push
adc
gs
inc
insl
inc
dec
inc
hlt
fildll
sub
ret
ds
pop
sub
sbb
rorb
lahf
xor
shll
lock
iret
jecxz
jge
mov
dec
mov
test
in
add
adcb
mov
push
fimull
into
imulb
sbb
mov
clc
xchg
insb
jle
dec
dec
add
xlat
icebp
jp
jno
pushf
js
test
iret
mov
call
std
jo
inc
add
repz
pop
hlt
js
addr16
sub
and
sbb
call
mov
das
sbb
hlt
pop
cmp
loopne
pop
test
xor
adcb
cmpsb
adcl
fidivs
xchg
lds
mov
ja
sub
idivb
insb
scas
and
mov
jae
push
pop
cmc
sub
test
and
sbb
add
push
aam
fisubrs
mov
pop
push
mov
subl
pop
stc
scas
mov
sarb
lret
mov
ds
scas
stc
xchg
mov
xchg
jg
test
lcall
sub
int3
scas
aam
int
jne
or
xor
faddp
push
inc
push
mov
ja
test
xor
sbb
dec
or
add
in
xchg
jnp
movsl
jg
shl
pop
lea
pusha
xchg
adc
lds
lret
pop
and
sub
jo
in
pop
fidivl
xor
jge
gs
repz
jns
mov
lret
and
ljmp
repnz
sti
ds
xchg
loope
push
and
imul
cltd
aaa
add
or
lret
loopne
or
sub
das
fbstp
pop
aaa
xchg
push
lahf
and
imul
cmp
mov
stos
push
or
idiv
je
pop
ds
int3
out
xchg
loopne
fildll
push
cmp
out
movsl
push
inc
lods
xchg
sbb
fidivs
and
jo
fs
jae
leave
mov
aaa
popa
jb
or
sbb
movsl
cmp
dec
shrb
stos
pop
inc
js
imul
int
jno
ret
gs
pop
push
aam
loope
cmp
call
into
jns
cmp
and
and
ds
inc
mov
pop
mov
push
out
adc
mov
adc
and
orl
jno
mov
dec
cwtl
sub
pop
addr16
data16
jge
sbb
aaa
dec
jle
mov
xchg
push
pop
out
jbe
jo
lahf
fadds
ja
push
sbb
cmpsb
adc
dec
xchg
into
jb,pt
push
xchg
jmp
push
insb
mov
push
fistpll
ficoms
pop
pop
xor
fneni(8087
nop
adc
xor
movsl
cmpsl
jbe
scas
popf
mov
in
pop
out
fmull
adc
sub
push
cmp
xchg
mov
enter
or
lock
sub
push
movsl
fs
int
mov
pop
mov
ds
inc
push
push
test
pushf
pop
inc
inc
popa
cmp
push
dec
movsl
and
sub
fwait
push
and
mov
es
adc
push
lcall
fstpt
stos
jl
ljmp
jno
cmpsb
mov
dec
pop
inc
or
lret
mov
or
mov
dec
mov
mov
xchg
loopne
cmpsb
push
cmp
enter
sub
orl
cmc
loopne
leave
xlat
and
jno
add
jae
clc
popf
outsb
xor
aas
aad
cmpsb
femms
or
jg
addr16
add
adc
mull
mov
flds
insl
sbbl
pop
fmul
or
cmp
sub
aas
aaa
mov
jae
ffreep
lret
mov
mov
out
jmp
pop
mov
push
push
cld
adc
movsl
jl
orl
nop
cmp
sub
shll
mov
inc
push
pop
out
lret
jg
daa
xchg
xchg
inc
clc
mov
loop
pusha
stos
cmp
cmp
cmc
andb
inc
mov
push
push
sbb
dec
xchg
mov
add
pop
mov
je
int
iret
cli
mov
call
jb
rclb
pop
and
test
out
xchg
jno,pn
lods
mov
inc
out
push
xchg
cmp
adc
fildl
popa
inc
and
mov
out
push
push
lods
jbe
pop
lret
movsb
inc
pop
pop
adcb
and
mov
jo
jecxz
or
icebp
and
popf
xchg
and
das
xlat
dec
add
out
mov
and
push
bound
xchg
jno
je
pop
lcall
pushf
testb
fdivrl
push
cwtl
add
mov
push
fs
aam
jl
mov
jno
add
xchg
roll
push
pushf
mov
sub
xchg
xchg
or
into
pop
stos
fdivl
add
fs
jge
popf
pop
outsb
cmpl
push
jno
hlt
xchg
xchg
xor
sbb
addr16
xchg
adc
mov
leave
pop
scas
jg
ja,pn
inc
in
adc
clc
adc
ljmp
test
mov
in
leave
mov
filds
cmp
mov
pop
aaa
add
stos
in
cs
pop
lret
cmp
ja
and
mov
cmp
mov
adcl
dec
sub
popf
or
js
adc
aam
dec
sbb
scas
ljmp
ja
test
push
inc
dec
push
or
mov
jnp
std
dec
lret
mov
push
repz
push
icebp
xchg
mov
out
dec
sahf
mov
mov
mov
daa
mov
sbb
mov
outsb
sub
cmp
mov
push
dec
ljmp
sub
cli
xor
xor
pop
das
fs
mov
shrl
push
and
insl
cmp
cmp
ficoms
or
lock
addl
add
addr16
nop
test
data16
mov
in
mov
inc
or
lea
sub
sbb
addr16
xlat
dec
inc
ss
xchg
shrl
aaa
push
cmp
xchg
out
add
stc
ffree
inc
out
pop
xchg
sti
aad
and
gs
mov
xor
pop
pop
punpcklbw
scas
popa
jo
cs
mov
cmpb
and
int
pop
shl
sub
pop
inc
rcrb
pop
out
cli
xor
divl
lea
mov
test
imul
in
outsl
pop
xchg
sahf
jns
lret
call
jg
jmp
dec
testl
jns
outsb
test
xor
pop
clc
push
dec
ja
and
test
int3
mov
jmp
cmp
xchg
jmp
and
inc
jno
push
int3
inc
aam
or
popf
dec
popl
cwtl
in
dec
dec
aad
scas
or
addr16
jecxz
mov
imul
shll
insl
pusha
jle
rcrl
jmp
dec
call
xchg
lods
inc
fisubl
lods
lock
push
cmp
mov
fldl
test
call
push
lock
cld
pop
inc
fstpt
mov
ret
cmp
cmp
push
sub
add
bound
inc
lret
cmp
movsl
mov
xchg
push
sub
and
scas
es
xor
push
xchg
cmp
pop
jmp
mov
pop
push
negl
or
insb
push
iret
pop
xchg
in
pop
xchg
push
add
ret
pusha
ja
add
data16
scas
dec
or
mov
xchg
xchg
js
loope
loopne
fs
data16
add
mulb
mov
iret
daa
ret
jmp
jb
xchg
push
adc
into
and
aas
enterw
insb
jo
mov
lcall
adc
cmp
lock
fsubr
jle
xchg
jle
fiaddl
jno
xchg
pop
xor
jb
outsb
or
or
pop
inc
pop
and
scas
or
pop
sub
lahf
movsb
pop
push
in
cmp
mov
mov
pop
jb
mov
pop
cmp
ss
pop
cmpsl
jmp
cmpsb
jp
jno
mov
neg
mov
mov
sbb
or
int3
jecxz
pop
pop
pop
or
ja
gs
inc
clc
sbb
push
mov
xor
pop
fcomps
leave
notb
cmpsb
std
cmp
jl
dec
icebp
cs
xor
inc
insl
jo
test
add
sbb
scas
push
aas
gs
loope
pop
xchg
lods
test
leave
jno
aaa
mov
sbb
mov
sbb
push
add
xor
pop
stc
orb
clc
mov
fs
in
jg
rcll
movsb
stc
pop
cmc
imul
call
pop
shrb
aaa
mov
xchg
dec
push
jl
mov
xchg
push
leave
in
and
imul
repz
dec
jns
in
inc
mov
mull
mov
lcall
cli
loopne
scas
pushf
jmp
or
test
test
popa
sti
push
sub
jo
push
adcl
xor
push
mov
data16
xorl
scas
fstpl
daa
push
inc
sbb
lods
add
xchg
mov
inc
hlt
jmp
mov
pushf
out
and
pop
ja
loope
push
fcmove
xchg
and
or
mov
jae
inc
addr16
push
or
pop
daa
xor
xor
pop
sub
ljmp
addl
cld
dec
sub
out
stos
inc
out
lret
fidivs
pop
mov
loope
call
addr16
cmp
lcall
shll
insb
adc
mov
sbb
mov
dec
in
movsb
cmc
or
daa
dec
aas
stc
les
xor
imul
jne
or
lock
mov
mov
pop
mov
xor
out
xor
nop
jne
adc
jmp
mov
jmp
into
arpl
scas
or
adcb
mov
sbb
mov
push
and
or
scas
hlt
jecxz
iret
leave
insb
jo
leave
addr16
xchg
or
popa
jae
loope
scas
sub
lret
sub
pslld
dec
out
out
and
adc
xor
and
pop
mov
addr16
xchg
sbbl
std
sub
fisubrs
inc
ror
daa
popf
popa
push
and
inc
outsb
jge
rclb
cmp
aaa
in
movsl
mov
jnp
std
sub
mov
lcall
mov
fwait
inc
fbld
add
bound
sbb
lods
push
shll
fnsave
gs
js
push
xchg
cmc
sahf
push
xchg
xor
xchg
iret
sub
pop
mov
jne
sti
out
jmp
lods
cmp
jmp
mov
test
sti
push
mov
mov
cltd
scas
push
scas
ss
outsl
fwait
mov
fistpll
int3
cmp
loop
jge
cmp
push
shrb
decl
adc
jne
pop
movsb
sub
mov
rol
in
out
pusha
xor
mov
and
stos
into
fs
mov
imul
inc
movsl
adc
jmp
cld
mov
ds
adc
dec
les
fwait
push
dec
mov
aad
sub
mov
and
jmp
js
test
push
mov
xor
gs
cld
jle
rcll
lds
or
mov
movsl
push
add
mov
push
pop
push
daa
xor
push
std
cmpsb
movsb
and
int3
es
inc
test
scas
push
ja
lahf
inc
addr16
cmpsb
jge
inc
fisubrs
inc
mull
mov
sub
push
mulb
xor
stos
rclb
xor
lock
and
xchg
repz
leave
xlat
addr16
add
lods
incl
jo
pop
xor
aaa
popa
sbb
imul
add
leave
xchg
jae
ficoms
add
xchg
push
fxch
jmp
pop
fwait
outsl
xchg
push
test
std
pop
jmp
mov
pop
addb
bnd
imul
mov
dec
notl
pop
push
jmp
les
dec
or
pop
dec
jno
and
les
cmp
test
scas
xchg
lea
fld
jne
dec
cwtl
mov
notl
jo
inc
mov
inc
cmpsl
mov
mov
dec
in
mov
call
inc
or
sar
rorb
cmp
pop
push
cmc
jecxz
pop
popa
xchg
xchg
in
and
cmc
arpl
and
inc
cmp
ljmp
scas
hlt
dec
push
inc
add
pusha
xor
add
movsb
fdiv
decb
push
testb
sub
call
aaa
subl
in
xchg
mov
lock
sbb
mov
ficomps
mov
mov
xchg
inc
mov
xchg
hlt
cmp
push
sbb
loopne
mov
dec
cmp
xchg
pop
inc
pop
enter
enter
adc
lret
add
xor
mov
in
xor
cli
push
pop
xchg
sub
add
loope
inc
pop
fwait
out
pop
xchg
sahf
cld
testl
lret
or
push
inc
aaa
ficoml
xchg
das
inc
mov
pop
jmp
mov
out
sub
inc
jne
mov
bound
push
pop
xor
xor
cltd
jbe
das
orb
pop
sbb
jg
iret
negb
fimull
cmpsl
cmp
sub
loopne
in
adc
cmc
icebp
mov
loopne
pop
bound
add
cld
xor
cmp
lea
gs
aad
iret
lcall
pop
loope
push
test
bound
test
jo
stos
stc
add
pop
into
mov
mulb
adc
sarb
loope
cmp
dec
sar
and
mov
mov
pushf
jne
push
fsubrs
cs
push
cmp
mov
push
or
fbld
fsts
or
lea
outsb
pop
cld
in
lret
jle
mov
add
icebp
and
sub
test
fs
scas
push
or
mov
jg
adc
push
nop
mov
ljmp
popa
std
mov
test
fs
sub
dec
ret
sbb
clc
neg
dec
pop
cmp
iret
and
out
inc
push
cmpsb
cs
and
xchg
xchg
movsl
push
add
stos
loopne
divl
repnz
rorl
cmp
clc
repnz
push
mov
popf
sub
push
lods
fsubrl
mov
adc
jnp
ljmp
iret
cltd
fmul
dec
bnd
and
xchg
in
movsb
popf
xchg
and
fisttps
aaa
xor
push
jge
outsb
jno
sbb
or
js
dec
fcompl
jp
jo
les
aad
mov
jl
fs
pop
repnz
mov
cli
lods
mov
mov
mov
mov
pop
mov
dec
pop
mov
dec
aad
sbb
sub
or
dec
shll
mov
or
cs
mov
and
add
mov
mov
or
test
bound
or
and
lds
fwait
rcrl
in
inc
mov
mov
push
jbe
xchg
pushf
jno
shll
loope
out
rcrb
xorl
cmc
aad
push
jge
iret
pushf
cmp
lahf
nop
test
test
push
mov
mov
cli
mov
adc
jg
sub
outsb
sub
jge
in
dec
mov
xchg
sti
insl
sbb
fildl
sbb
leave
fdivs
mov
mov
sahf
test
fisttpll
les
jge
ja
jl
cmp
mov
sub
add
jmp
push
cmp
adc
and
pop
fnstenv
push
clc
xor
repz
push
inc
ljmp
gs
cmp
aaa
adc
das
movsl
pop
mov
xchg
mov
inc
jg
stos
xchg
or
pushf
pop
sbb
push
adc
pop
cs
dec
push
ret
adcl
push
scas
lret
dec
arpl
sbb
xor
mov
inc
cmpb
jbe
or
inc
out
jecxz
stos
jne
jmp
das
subl
push
adc
repnz
mov
popf
inc
cs
add
mov
lret
lock
cs
mov
xchg
inc
jo
mov
xchg
mov
int3
dec
sub
test
add
bound
fsubr
iret
inc
popa
mov
sub
push
pop
pusha
or
dec
pop
cld
loope
jecxz
mov
or
xchg
lahf
ja
outsl
xchg
pushf
addr16
xchg
xchg
fnstsw
inc
jl
jge
xor
jl
movsb
jmp
gs
mov
ret
xor
fistl
neg
ret
loop
pop
mov
cld
ds
inc
out
nop
cltd
outsl
bound
push
loop
outsl
les
jo
outsb
sbb
aas
test
mov
adc
popf
jp
push
fisttpll
daa
lea
xchg
sub
sbb
xchg
movsl
sbb
jne
add
aaa
cmc
add
mov
pop
pop
int3
mov
shl
lock
in
aas
daa
out
jbe
and
sti
jp
ret
orl
mov
and
fstps
cmp
jp
aad
or
jg
loopne
pop
xchg
inc
or
int
adc
xchg
ljmp
lock
fcompl
mov
dec
push
sbb
inc
and
xchg
xchg
fdiv
mov
jecxz
and
push
shrb
pushf
jnp
or
push
xlat
out
jg
icebp
repnz
xor
pushf
adc
dec
mov
cwtl
cld
sbb
push
popf
push
insb
int
js
push
js
enter
jg
jnp
cmp
lret
aaa
push
in
xor
lds
or
outsb
adc
mov
repnz
mov
pop
xchg
sub
push
sbb
mov
xchg
das
xchg
lret
std
pop
movsl
data16
repnz
dec
inc
inc
sbb
mov
mov
xor
mov
outsl
iret
or
lock
cld
mov
mov
sub
das
js
icebp
bswap
clc
or
adc
inc
push
jnp
enter
pop
mov
sbb
outsb
mov
dec
push
mov
rclb
les
push
pop
mov
sbb
fistpl
iret
push
scas
dec
hlt
or
push
test
push
dec
data16
inc
lods
lea
push
lret
mov
pop
incl
stos
push
xor
gs
add
movsl
clc
popl
dec
subl
mov
ljmp
pop
ret
mov
mov
fadds
pop
enter
pop
adc
mov
cs
lahf
add
bound
xchg
fistpl
sub
test
mov
or
icebp
out
sub
inc
cmp
mov
push
xlat
outsl
mov
push
or
push
bound
or
adc
mov
pop
xor
icebp
xchg
jl
jg
cltd
iret
cmp
xchg
add
ret
inc
cld
ja
push
js
mov
sub
popf
mov
add
push
adc
push
lea
ret
hlt
adc
fisubl
mov
movsl
shlb
jbe
lret
insb
sub
pop
push
test
pop
xchg
jecxz
in
and
mov
or
mov
in
repnz
bound
adc
add
outsl
xchg
stos
push
xor
xchg
mov
xlat
add
push
shr
pop
dec
jne
lds
rcrl
cmp
les
add
xor
sarl
fdivrl
into
dec
xor
sbb
cltd
and
out
push
add
outsb
ljmp
xchg
push
loopne
mov
mov
or
dec
push
mov
dec
stc
pop
sub
pop
mov
mov
pusha
sahf
in
xchg
xchg
cmpsb
sarb
inc
mov
arpl
nop
jae
scas
cmp
cmpb
int3
push
out
sub
movsb
adcb
iret
add
cmp
pusha
notl
std
pop
enter
out
sbb
adc
mov
mov
repz
pop
lea
sub
push
sbb
mov
insl
outsb
mov
mov
mov
xchg
and
test
sti
and
or
cmp
mov
out
mov
pop
and
xor
negb
push
lds
jecxz
xchg
mov
rclb
mov
bound
sti
xchg
lds
or
mov
push
adc
mov
sar
iret
xchg
mov
pop
ja
add
inc
cwtl
cmp
pop
sub
push
pop
in
pop
jns,pn
arpl
pop
adc
xor
sbb
dec
xor
dec
cmp
or
cmp
mov
add
sbb
jp
or
jne
int
sub
jno
das
jno
push
jl
push
cmp
pop
repz
pop
xor
inc
adc
inc
les
out
push
mov
jbe
push
pop
jo
sub
je
xlat
xchg
cmp
or
lea
or
push
lds
or
int3
mov
das
je
xchg
pop
je
ds
inc
fists
fcmove
pushf
test
sbb
jg
out
aas
and
mov
push
adc
add
inc
pop
stc
and
pop
flds
lock
std
mov
push
mov
xor
fidivl
mov
add
inc
leave
cmpsb
sbbl
in
xchg
sbb
ss
mov
inc
idivb
jns
push
loopne
or
cmp
movsb
or
push
imull
rcll
or
andb
xchg
cmpsb
shrl
jnp
test
cld
inc
loopne
cs
lahf
inc
adc
pop
pop
out
int3
ljmp
mov
xchg
cmp
push
mov
in
ds
pop
push
addr16
mov
and
ret
push
mov
xor
cmp
mov
loopne
push
dec
stc
cltd
jge
mov
das
add
add
push
rcl
mov
test
or
inc
push
das
js
out
loopne
or
loop
lret
adc
and
adc
mov
lret
mov
mov
mov
pop
sti
sbb
push
ficompl
decb
iret
inc
ja
push
push
out
mov
stos
test
iret
pop
pushf
adc
xchg
add
mov
mov
xchg
push
xchg
ret
scas
lea
xor
rclb
rcrb
or
jmp
mov
aad
or
cs
sbb
out
xlat
lds
bound
pop
popf
xor
movl
adc
in
fs
and
cld
adc
mov
bound
or
daa
or
mov
inc
stos
jmp
push
lea
mov
push
ret
mov
sub
mov
cmp
sbb
enter
xchg
cli
outsl
lahf
out
shlb
mov
add
sbb
push
mov
js
dec
leave
cmpl
test
lods
xor
and
mov
sbb
lods
xor
push
push
lahf
pop
clc
mov
add
loop
or
mov
shlb
pop
das
sbb
dec
fwait
pop
add
mov
stc
mov
pop
je
lock
addl
xlat
enter
aas
cmc
mov
lds
and
push
inc
mov
inc
out
lods
out
test
pusha
pop
pop
xor
sti
cmp
push
push
sbb
aad
and
push
test
sub
mov
fnsave
dec
rolb
mov
stos
scas
repnz
fsubrs
and
xchg
addb
outsb
jg
fildl
push
loop
jo
xchg
inc
sbb
and
xchg
fidivs
lods
lcall
nop
insb
or
stos
sub
pushf
mov
add
js
jo
adc
mov
pop
cmpsb
inc
pop
jecxz
loope
mov
xor
cwtl
and
push
jbe
bound
fmull
shrb
and
in
lret
mov
les
pop
icebp
lods
pop
cmp
fimull
outsb
into
cs
xor
add
aad
cltd
pop
in
call
out
add
enter
pop
push
ja
out
outsb
pop
xor
mov
insb
push
ret
into
pop
jns
loopne
jl
xor
into
rolb
push
dec
pop
xchg
and
insb
or
mov
dec
jbe
sahf
xorb
dec
sub
ret
push
mov
mov
add
inc
fmull
mulb
mov
pop
xor
das
stos
adc
sbb
ds
sbb
leave
pop
fld
les
ror
or
sbb
or
lock
inc
jb
sbb
lret
aaa
xchg
adc
and
mov
outsl
int3
cwtl
pop
repnz
outsb
es
inc
pusha
out
mov
add
sub
jno
in
scas
scas
divb
push
fcompl
lahf
shrl
cwtl
jns
shr
ret
jno
scas
jno
cmpsl
aas
repz
mov
mov
aas
jnp
adc
popf
pop
sbb
and
arpl
ret
add
outsl
inc
insl
sub
les
rcl
sub
test
sti
lcall
adc
mov
shlb
fildll
rcr
inc
dec
insl
jp
cli
std
ja
sbb
fmuls
jecxz
fwait
dec
xchg
push
testl
repnz
adc
movhps
enter
mov
mov
sahf
pop
adc
and
test
outsb
mov
fsubs
test
adc
add
mov
out
mov
adc
hlt
ljmp
sub
int3
cli
int
fs
push
cs
push
cmp
insb
fdiv
les
fdivl
inc
mov
and
xchg
jo
es
push
add
ljmp
cmpsb
xor
test
and
xor
call
jno
les
cmp
xchg
lock
lods
xchg
inc
cli
leave
int3
lcall
stc
into
jmp
pop
inc
test
mov
js
dec
inc
jmp
push
ja
pushl
dec
push
adc
test
lods
add
dec
out
jg
push
cld
push
shl
sbb
sbb
cltd
and
enter
enter
mov
imul
roll
xchg
mov
divl
xchg
movsb
jp
xor
repnz
inc
adc
test
xor
daa
add
push
fisubrl
xor
movsb
pushf
mov
flds
mov
nop
jae
dec
mov
sbb
enter
fxch
pop
jno
pop
add
notl
cld
scas
movb
mov
xor
int
sbb
mov
add
or
xor
inc
js
lock
jnp
cld
fnstsw
ja
lock
xchg
rclb
imul
out
sarb
sbb
mov
fisubrl
inc
pushl
and
addb
jecxz
xor
xchg
sbb
jb
sub
xor
ds
push
pop
lret
push
mov
xor
jno
add
leave
in
gs
mov
mov
xchg
jp
into
pop
in
cmc
jg
lret
rolb
pop
mov
repz
sbb
mov
xor
loop
call
idivl
enter
incl
in
roll
mov
inc
std
testl
pop
in
mov
nop
jb
scas
fnstcw
dec
or
mov
repnz
das
pop
jg
ljmp
test
out
sub
sbb
scas
mov
mov
psubsb
mov
std
lods
adc
dec
popa
fisubrs
shrb
loopne
pop
and
out
js
mov
sbbb
add
dec
sbb
bound
push
sub
jl
lret
and
test
repnz
jo
pop
inc
and
ret
push
daa
int3
mov
scas
ret
push
xchg
mov
and
adc
movsl
cli
sub
mov
sahf
popf
sbb
jns
pcmpeqw
lods
test
mov
cmpsl
into
scas
xchg
pop
das
mov
int3
add
sbb
fucomp
adc
daa
add
cmp
enter
cld
outsl
jnp
jge
sbb
in
test
fists
adc
sub
push
jmp
mov
jo
stos
shl
inc
jl
mov
xchg
and
pop
adc
ret
test
add
jl
pop
jp
test
sbb
inc
xlat
mov
data16
jno
jge
ret
xorl
pop
xor
mov
ja
cmpsl
adc
insl
pop
cmp
roll
add
or
sbbl
lret
inc
mov
mov
mov
mov
in
xchg
fisubl
adc
test
ds
test
loop
ds
pop
decb
push
jmp
shr
mov
adc
adc
fiaddl
push
and
lret
mov
out
cmpsl
xbegin
int3
xor
sub
cs
or
cmc
aaa
fidivl
mov
loop
addr16
mov
xor
data16
clc
int3
sbb
stos
push
pop
inc
test
cmp
ss
iret
push
insl
cmc
xor
dec
or
inc
and
lcall
sub
cmp
pop
mov
push
jbe
xorb
mov
sbb
leave
xchg
sarb
add
bound
daa
pop
xchg
cmp
cmp
xchg
xor
addr16
test
fisubs
jecxz
jno
sbb
jnp
adc
push
xor
in
xchg
in
pop
sub
pop
imul
inc
jb
jecxz
lret
popa
pop
insb
cwtl
lahf
aad
movsb
cld
hlt
pop
mul
stc
adc
lds
push
hlt
daa
sbb
loope
loop
lea
repz
dec
mov
jmp
into
dec
fstps
hlt
imul
mov
lcall
inc
push
inc
subl
movsl
lcall
add
jne
bound
aas
mov
out
je
mov
into
jge
int
jno
push
adc
sbb
xor
mov
in
stos
in
push
cmp
out
sahf
jl
adc
sbb
fs
push
fwait
push
inc
and
push
les
xor
lcall
imul
leave
xor
jle
mov
imulb
fsubr
adc
inc
push
pop
repnz
cmpsb
adc
dec
test
jg
repnz
addl
xor
fwait
lahf
jnp
adc
fildl
stc
xlat
jne
add
dec
sbb
push
pushf
jbe
hlt
push
inc
or
xchg
xchg
jl,pn
pop
mov
push
stc
mov
mov
xchg
stos
out
adc
sub
jl
mov
add
mov
rcrb
xor
xor
jge
inc
inc
mov
mov
mov
and
je
xchg
fstpl
dec
dec
sbb
cmc
mov
dec
int3
jp
jmp
and
xor
dec
lods
mov
dec
jne
imul
add
adc
not
adc
in
jae
push
clc
cs
dec
hlt
pop
jno
and
aad
inc
loope
daa
fxam
call
xchg
leave
dec
inc
sbb
in
cwtl
push
repnz
lret
jae
pop
test
daa
pushf
mov
sbb
push
clc
xor
jmp
mov
xor
jbe
push
mov
mov
std
push
cltd
pop
sbb
aas
arpl
cmp
sbb
pop
and
add
adc
xor
and
sub
ja
inc
mov
inc
or
fs
les
add
loope
dec
jae
xchg
test
adc
test
js
mov
lds
mov
dec
adc
mov
test
mov
mov
cmp
inc
js
scas
adc
jb
sbb
dec
push
dec
inc
repnz
lcall
sub
xlat
mov
sbb
hlt
mov
add
jecxz
adc
xchg
pop
aad
mov
jl
data16
fucomi
pop
jno
sbb
push
lods
and
test
mov
gs
mov
cwtl
adc
clc
adcb
loope
push
fs
push
push
jne
fucomip
sbb
xchg
adc
cmp
mov
lret
nop
sbb
rorb
pop
mov
inc
lods
or
rcll
xor
notb
nop
pop
pusha
xor
fstl
xchg
cs
push
sub
clc
pusha
jns
cld
pop
add
hlt
cli
in
inc
arpl
sub
sbb
xor
ret
sbb
dec
sarb
iret
popa
lods
mov
push
fadds
push
lods
pop
pop
lahf
push
or
jae
mov
loopne
aam
add
push
sbb
jns
mov
stos
mov
leave
cltd
mov
adc
mov
fidivrl
pop
aam
adc
jne
jge
jns
push
jmp
sub
jp
xchg
mov
popf
sbb
rolb
in
sub
cmp
dec
mov
jmp
scas
loop
and
inc
lret
mov
stos
cmpsb
cmpsb
out
push
lds
sbb
or
in
cmpsb
pop
cmc
adc
sbb
imulb
outsb
cmpsb
push
pop
aad
testb
lods
pop
jo
jecxz
dec
and
pop
js
aam
jl
pop
dec
xchg
dec
add
mov
ss
dec
rcrb
popf
push
sbb
leave
mov
repz
inc
inc
aas
mov
sbb
pop
pushw
mov
mov
jecxz
and
xor
adcb
mov
mov
movsl
xchg
popa
or
jo
es
fst
dec
in
fstpt
int3
push
aam
mov
jecxz
xor
bound
data16
lcall
scas
lods
nop
fistpl
dec
xchg
js
xchg
xchg
in
push
dec
fildl
xchg
mov
or
sbb
sbb
and
jbe
and
movups
fsubl
jmp
cmp
sti
lahf
mov
jb
shrl
xchg
push
mov
incb
pop
repz
insl
mov
pop
in
pop
dec
push
out
lret
push
mov
fs
inc
jl
sti
shr
or
in
push
ja
jae
shlb
pop
int3
mov
inc
sbb
and
adc
mov
or
loop
imulb
ss
loope
mov
pop
sub
stos
maskmovq
testl
or
jg
iret
sub
insl
in
out
js
mov
mov
loope
icebp
fidivl
and
mov
xchg
mov
sub
inc
in
push
lahf
sbb
std
subb
popf
push
ljmp
insl
lock
nop
popl
mov
js
das
mov
lahf
scas
lcall
call
mov
popf
js
dec
mov
jle
mov
cmp
cmpsb
mov
mov
pop
iret
ja
sbb
adc
and
xchg
aad
add
out
push
lock
addr16
mov
xor
popa
stos
outsl
out
xor
xor
sbbl
adc
adc
dec
orb
mov
and
and
or
cmp
lcall
xchg
sub
outsl
mov
adc
mov
repz
mov
jle
nop
sub
cmpsl
das
sbb
bound
inc
sbb
stos
imul
call
pop
push
jno
inc
movsl
mov
adc
mov
mov
andl
lcall
bound
cmp
cltd
push
out
and
cli
xchg
dec
imul
test
outsb
push
adc
int
push
loop
js
pusha
mov
pop
out
and
mov
xchg
jbe
mov
inc
pop
or
jp
and
repnz
mov
pop
js
mov
sub
xor
and
ss
inc
push
stos
jmp
fs
xor
jo
cmpsl
call
mov
rcll
add
xchg
mov
sbb
sbb
or
leave
mulb
lahf
jne
js
aaa
inc
rcrl
and
jae
push
mov
mov
aaa
lret
or
adc
dec
fldt
cmp
out
mov
es
lret
insb
add
out
pushf
or
sbbl
push
lods
les
mov
push
addr16
fwait
gs
sub
ret
out
or
or
jge
lods
xor
push
fwait
push
aam
push
idivl
call
imul
push
jge
adc
insb
mov
xchg
call
out
lods
or
mov
aad
popa
inc
mov
xchg
jge
add
imul
inc
jmp
ss
push
adc
push
into
mov
mov
ss
dec
popf
fmul
cli
mov
sub
jae
data16
repnz
andb
lods
add
insl
and
mov
mov
inc
lahf
and
push
xlat
sbb
pop
add
ds
jp
dec
stos
cmp
sub
shlb
pushf
mov
jg
pop
adc
mov
or
out
sbb
cld
lods
pop
call
mov
mov
mov
dec
fs
dec
xchg
mov
mov
dec
mov
jns
inc
mov
insb
xchg
inc
jp
sahf
enter
jno
shrl
test
lret
shlb
lods
cli
and
push
inc
inc
and
ss
into
lcall
arpl
loop
and
xor
mov
pop
pop
addr16
pop
pop
sbb
sub
lock
sbb
sbbl
mov
fildl
jecxz,pt
sar
adc
sbb
shlb
adc
lcall
cmp
imull
in
popa
pop
pop
mov
pop
aad
add
mov
dec
or
cmp
or
sbb
pop
jns
int3
mov
movb
inc
cmp
bound
ja
dec
mov
loopne
jl
push
fldenv
mov
shl
xchg
inc
mov
inc
cmp
scas
neg
pop
mov
inc
jo
and
out
mov
mul
movsl
aam
dec
out
jae
js
mov
adc
pushf
shll
dec
stos
out
inc
jbe
test
xor
popa
cld
jb
push
aad
mov
sbb
jnp
cmp
outsb
cmc
cmp
insl
inc
sbb
jmp
mov
mov
fldt
mov
fnstenv
push
push
pop
pop
scas
scas
cli
inc
sub
xlat
lods
imul
or
loopne
xor
cmpsb
push
inc
dec
cmp
iret
xlat
sbb
je
adc
mov
push
jbe
repnz
aam
jg
ja
cmp
clc
or
sub
aaa
mov
push
sbb
jmp
inc
popa
adc
cs
scas
lret
aam
adcl
mov
mov
ljmp
lods
fldl
and
loopne
sbb
repnz
in
in
or
sarb
sti
xchg
lods
pop
xchg
movsb
jl
push
cs
dec
lea
cmp
jp
or
lret
cmpsb
and
dec
xorb
testb
jmp
xor
insb
lret
jmp
ret
mov
push
dec
xchg
insl
inc
repnz
jbe
lods
push
lcall
pushl
ss
mov
push
imul
nop
bnd
push
adc
inc
push
test
sahf
rcrb
mov
movsb
lods
inc
inc
jg
mov
add
mov
xchg
jae
imul
adc
lret
dec
ljmp
jle
lret
fistpl
sub
cvtdq2ps
push
add
addr16
fmulp
mov
mov
test
fstps
inc
fs
js
jb
sbb
xor
int3
das
sub
push
nop
les
cs
dec
mov
rcll
jb
adc
push
push
in
mov
sbb
lds
push
enter
loopne
add
inc
fdivrl
or
sti
js
jg
jns
pop
mov
movsb
hlt
mov
adc
inc
xchg
inc
add
lods
push
sub
mov
sub
adc
sbb
cltd
loope
jno
call
jle
lahf
inc
shrl
movsb
dec
dec
repz
aas
cmpsl
push
sti
xorl
mov
ret
xchg
push
and
push
lea
pop
mov
mov
adc
rcr
test
in
fcomps
mov
in
sub
mov
les
push
rcrl
and
jle
into
in
mov
and
mov
cwtl
xor
fnsave
test
dec
pop
loop
jae
stc
mov
mov
dec
ds
dec
bound
mov
or
pop
fsubrs
pop
xchg
dec
or
jo
mov
loopne
xchg
daa
fcompl
mov
jne
xor
icebp
jle
cmp
cli
rorb
lahf
or
xchg
mov
test
jl
jmp
fldcw
xor
or
push
adc
popf
dec
js
mov
sbb
add
hlt
aam
inc
lret
outsl
mov
adc
out
xchg
std
mov
xor
sub
xor
pop
lret
xchg
lea
aaa
pushf
mov
mov
scas
cli
push
movsb
mov
xor
cs
xchg
adc
sbb
xor
adc
inc
iret
cwtl
dec
sub
dec
xchg
bound
hlt
cmp
push
sub
jle
nop
fistl
jp
hlt
push
jo
call
add
push
xchg
aaa
push
jno
xorl
adc
cmp
movsb
mov
sti
pusha
push
mov
outsl
dec
or
in
leave
cmp
push
pop
or
scas
stc
add
push
outsb
in
adc
shrb
test
hlt
shr
repz
pop
xchg
add
out
daa
cmp
addr16
xor
fists
mov
xor
sahf
mov
cmp
ja
ror
arpl
inc
inc
or
repz
ret
pop
sub
decb
and
clc
les
fadds
and
adc
jnp
ljmp
loop
sub
adc
and
adc
bound
jecxz
pop
pop
fs
xchg
xchg
xor
push
or
lahf
or
lods
inc
xchg
sub
dec
pause
pop
enter
dec
pop
lret
lcall
jne
jmp
and
sub
sbb
repz
lahf
xor
jle
inc
fadd
mov
push
leave
xor
mov
xchg
out
and
xchg
push
loope
fs
and
and
cmpsb
and
dec
sub
mov
xchg
cwtl
cmpsl
sbb
es
iret
call
arpl
xchg
ja
outsl
pop
movsb
inc
cmp
xor
adc
dec
jo
inc
popf
xor
sahf
cwtl
mov
or
out
daa
push
xchg
sbb
cwtl
push
imul
xchg
out
pop
sbb
lock
mov
imul
jecxz
call
sbb
inc
aad
mov
xchg
clc
into
push
fwait
subb
jl
mov
int
mov
lcall
mov
out
dec
jecxz
push
fdivl
cmp
xor
js
jo
and
inc
lock
xlat
test
je
cmp
insb
pop
call
push
mov
lock
push
sbb
push
adc
xchg
mov
sub
jle
fcomp
sbb
subl
jg,pn
ret
js,pn
mov
daa
jae
mov
loop
push
and
ja
not
pop
into
mov
cs
loop
sbb
xor
xor
cmp
push
lea
mov
mov
push
xor
push
rclb
hlt
adc
fninit
jae
idivl
mov
mov
inc
incl
mov
stc
or
inc
in
push
inc
std
je
lcall
push
insl
dec
mov
cmpb
sub
insl
in
mov
sbb
int3
lods
and
pop
sbb
mov
pushl
adc
insb
dec
mov
pop
in
je
add
clc
pop
inc
xor
cli
shrd
popaw
jmp
sbb
jge
and
add
mov
mov
loopne
je
outsl
sub
inc
out
idiv
sahf
sti
mov
fucomip
mov
mov
lods
jle
out
jmp
mov
insl
jnp
je
pop
aaa
mov
lods
into
mov
gs
daa
xor
cmpb
mov
ret
js
repnz
xchg
xor
mov
sub
pop
lret
test
pusha
lods
push
and
lcall
or
movsb
das
cs
xor
sti
scas
fwait
dec
jbe
push
xor
daa
dec
andl
push
or
push
inc
sbb
js
dec
mov
arpl
hlt
stc
and
in
xlat
jnp
adc
pop
daa
in
das
movsb
or
lods
data16
int3
hlt
test
imul
dec
lods
xchg
orb
mov
repnz
mov
cli
add
lods
cmp
jp
orl
call
lahf
aas
push
out
ja
add
xor
idivb
pop
add
arpl
mov
adc
cmp
lea
push
and
aad
xchg
mov
sub
loop
arpl
pop
inc
dec
mov
mov
div
rorl
cs
imul
and
pop
dec
cltd
daa
gs
jle
push
push
lds
push
and
jne
lock
push
mov
pop
lds
xchg
push
mov
jo
int3
xor
nop
fcomps
and
xchg
shrl
mov
scas
pusha
pop
inc
leave
shlb
movsb
xor
mull
pop
int3
mov
scas
adc
cmp
in
daa
mov
and
and
or
movsl
leave
imul
fucomi
lret
fsubrp
pushf
repnz
dec
jp
mov
dec
xchg
mov
movsb
addr16
cmp
mov
in
pop
jbe
sbb
lcall
sub
fcomp
jl
movsl
push
js
repz
xor
int
fucomp
leave
cmp
pop
mov
popa
and
ret
jne
movsl
arpl
leave
mov
call
in
xlat
out
jb
daa
xchg
inc
rcrl
cmc
jge
adcl
lods
sarl
rcrl
jle
jg
xor
loop
insb
test
mov
mov
push
xchg
and
cmp
stos
lcall
push
aad
fiadds
mov
testl
pop
pop
mov
push
and
and
clc
sbb
jns
push
push
icebp
sbb
out
ja
bound
ja
cmp
and
mov
dec
pop
mov
lcall
clc
xchg
push
jle
mov
stc
leave
andb
fs
cltd
sahf
add
fidivs
mov
adc
adc
loope
std
or
enter
push
rolb
push
je
mov
inc
add
rol
mov
adcl
lock
push
adc
mov
fadds
roll
popa
nop
xrelease
sti
lret
ret
dec
arpl
repnz
cmc
sub
dec
js
hlt
mov
and
sub
xchg
inc
sbb
ret
fs
jl
daa
cmp
jae
pop
mov
dec
jecxz
inc
lret
fwait
inc
adc
dec
push
cmp
sub
outsb
push
mov
adc
push
popa
popa
cmp
xor
inc
sbb
and
jb
sub
test
sarl
ds
rcrb
cld
xor
inc
inc
fs
push
sbb
repnz
jo
les
push
or
test
inc
push
mov
jge
test
mov
pop
lahf
dec
cld
inc
sbb
popa
jge
or
mov
push
fistl
mov
cli
xchg
mov
daa
leave
iret
sbb
or
mov
inc
and
lods
arpl
fwait
pop
subb
mov
sbb
rorb
sar
add
and
stos
xchg
push
sub
movsl
add
dec
and
hlt
aad
iret
or
aaa
stc
and
pushf
gs
or
mov
hlt
mov
push
leave
push
les
xchg
mov
jb
out
push
aas
popa
jge
imul
pushf
mov
gs
cmpl
or
movups
cmp
inc
cmpsl
sub
xor
fsubrp
mov
lret
cmc
outsl
icebp
mov
in
jl
pop
and
es
loop
mov
or
mov
cltd
jns
xchg
aam
popf
pop
mov
sbb
sub
stos
or
or
std
xchg
data16
into
mov
adc
inc
outsb
xchg
sti
dec
mov
ljmp
inc
lea
mov
aas
or
ja
adcb
cmp
dec
shlb
rclb
fists
rcr
in
push
ja
stc
dec
xchg
sub
push
xorb
add
aas
fistl
cli
dec
dec
xchg
ljmp
pop
das
cmc
sub
dec
shl
pushf
push
jne
insb
pop
cmp
inc
fnstsw
jb
orb
push
pop
aas
ds
out
dec
cmpsb
push
push
ret
or
add
imul
in
hlt
lds
xchg
cmp
dec
mov
inc
sub
add
mov
in
scas
in
arpl
mov
leave
test
and
icebp
mov
sub
inc
cld
aam
and
stc
frstor
mov
insl
ss
shl
cmp
cmpsl
mov
dec
lret
dec
xorb
outsl
imul
cmc
leave
ret
mov
dec
pop
sub
rcrb
mov
mov
in
mov
ret
pop
jae
jmp
jns
jbe
shufps
je
inc
outsb
lods
ret
jb
cmp
test
aad
je
ret
lock
cltd
imul
into
cltd
inc
sbb
lods
xchg
loope
fcmovbe
nop
cmp
pop
mov
sti
cs
popf
xor
xlat
push
iret
std
repnz
or
fildll
inc
clc
sub
push
cvtdq2ps
icebp
xor
add
into
es
cmp
call
jbe
dec
pop
pop
mov
add
sub
nop
sbb
mov
add
loope
lcall
inc
sub
pushf
sbb
aas
xor
fidivl
or
addr16
and
push
inc
xchg
jns
pop
mov
sbb
outsb
or
mov
test
ret
pop
xor
adcl
movsl
and
das
jmp
jnp
mov
adc
pop
xlat
orb
lahf
xor
in
add
rclb
pop
pop
test
std
lcall
aam
cmc
popf
daa
clc
mov
sbb
sbb
movsl
mov
sbb
pop
push
leave
cmp
faddp
jns
xchg
pop
ficoml
sbb
sub
push
bound
lahf
ljmp
xchg
or
fsubr
stos
es
or
aad
data16
xchg
popf
out
ss
pcmpeqd
arpl
int3
js
addr16
scas
orl
pop
scas
mov
xchg
inc
sbb
mov
mov
pop
add
pop
jbe
xor
and
outsb
push
ds
jg
imul
cmp
push
xchg
les
loope
fsts
sub
sti
and
push
dec
shlb
cwtl
mov
in
and
push
adc
lret
jmp
dec
idivl
dec
push
rcl
iret
scas
sub
pop
adc
nop
xchg
rorl
loop,pn
mov
rclb
fs
ret
pop
add
mov
ret
xor
in
pop
pop
in
leave
hlt
cmp
fdivrp
insl
mov
push
sti
int3
dec
xor
testw
loop
mov
dec
pop
aas
mov
scas
std
jns
inc
xor
add
xor
inc
cld
jno
mov
sbb
lret
dec
icebp
inc
lcall
pusha
jmp
pusha
mov
xor
call
jae
test
and
sahf
cmp
pop
cmp
outsl
lods
addr16
nop
push
xor
push
test
ret
pop
sgdtl
mov
stos
mov
mov
das
sti
rcl
iret
stos
out
sub
mov
out
addb
verw
cs
jb
insl
mov
scas
faddl
mov
xchg
cmp
dec
testb
push
adcb
sbb
push
ds
lock
ss
sbb
jle
shl
xchg
call
push
cmc
imul
movsl
arpl
fbld
je
mov
push
inc
ja
sub
mov
insl
lret
push
popf
adc
push
stos
scas
and
leave
out
xchg
push
jg
sbb
mov
incl
call
pop
mov
flds
scas
mov
pop
fstpl
cmpsb
xchg
dec
imul
add
fildl
nop
xor
or
add
sbb
mov
dec
push
xchg
adc
ficoml
dec
iret
outsb
scas
jecxz
fildl
cmpsl
lret
dec
pop
mov
mov
jge
jg
arpl
dec
sub
mov
push
es
mov
cs
dec
cmp
lock
fs
sarb
adc
loope
inc
jbe
fadd
incl
xchg
push
add
rcrb
mov
lods
jno
dec
inc
and
cs
sbb
pop
test
aaa
xor
and
lock
sahf
xchg
idivb
into
pop
popf
stos
gs
test
repz
lret
or
mov
xchg
adc
mov
mov
ljmp
push
and
push
arpl
xor
cmp
mov
push
stos
dec
cmp
sbbl
mov
adc
jmp
enter
fadds
xchg
push
shl
inc
sbb
movsl
add
imul
mov
orb
mov
rorb
cmp
mov
mov
aam
mov
scas
lcall
push
pop
push
cmc
cmp
cmpsb
jns
inc
shll
movsl
add
rcl
dec
sbb
xor
or
icebp
jmp
outsl
mov
jmp
cmp
scas
mov
dec
mov
cmc
rcrb
and
sbb
mov
push
jne
enter
mov
sbb
in
xchg
jnp
imul
pop
ds
fcoms
ljmp
pop
push
sbb
jp
sub
bound
sub
or
dec
mov
adc
cmp
jmp
push
push
sbb
sub
fdivl
into
dec
out
lcall
jmp
push
cltd
fidivs
cmp
fldl
aaa
cmpsl
lret
es
das
mov
lods
arpl
xlat
xchg
lock
hlt
mov
sub
int
sub
bound
cmp
push
mov
pop
in
jl
lock
mov
int3
mov
stos
test
popa
push
out
mov
es
push
jl
xchg
xchg
jle
xchg
cmp
es
fists
sbb
cmp
mov
das
subb
scas
or
ljmp
xchg
lods
push
jnp
inc
mov
mov
mov
faddl
dec
sub
std
dec
in
cwtl
int
bnd
xlat
jp
pop
in
cltd
ss
movsl
mov
ret
popf
stc
push
mov
pop
aad
es
lea
sbb
icebp
cwtl
imul
jl
insl
into
test
loopne
xor
push
cltd
mov
sub
sbb
sahf
cmpsb
ret
inc
jnp
movsl
stc
cltd
add
push
shlb
shl
cmp
mov
mov
out
cmp
fwait
push
xchg
or
sbbl
cltd
dec
pop
stos
mov
pushl
sub
sub
ljmpw
and
jecxz
xchg
test
or
lcall
fwait
daa
or
xchg
aad
fldt
adc
stc
js
or
jno
rcrl
into
mov
jb
pop
pop
mov
inc
or
sub
ja
test
fiadds
lahf
sbb
pop
and
repz
or
ja
cmp
dec
es
and
mov
xor
test
cmp
xor
stos
sti
daa
xor
push
inc
imul
leave
mov
fiadds
dec
cmp
push
xorl
in
int
out
xchg
pop
cli
xor
add
add
inc
aad
outsb
inc
pop
push
addr16
aas
in
push
mov
dec
mov
sahf
pop
lcall
pop
popl
imull
cmc
inc
int
inc
out
nop
cmp
js
or
push
dec
mov
mov
jg
pop
add
lods
out
outsl
xor
in
shlb
add
ss
dec
and
mov
cmp
pop
push
sub
pop
rorl
push
in
out
xor
test
sub
sbb
sbb
jge
cld
clc
xchg
js
push
mov
mov
push
outsb
pop
inc
inc
out
icebp
cmp
cltd
int3
pop
pop
imul
adc
stos
aaa
push
or
xor
dec
xchg
out
cmp
add
jp
jmp
dec
sbb
jge
mov
xor
mov
add
out
lcall
fcmovnbe
mov
leave
adcl
push
ljmp
inc
addr16
cltd
scas
xor
std
mov
test
sti
gs
pushf
dec
pop
mov
fstl
fisttps
jo
call
movsl
fisubs
push
inc
or
mov
pop
pop
mov
lds
sbb
cmp
repnz
ja
cld
iret
fildl
mov
sbb
xchg
outsl
hlt
popf
out
int3
imul
and
js
lahf
adc
je
and
lods
xchg
mov
lret
cmp
add
es
movsb
mov
dec
push
lds
sbb
aas
ja
mov
mov
dec
cmp
fsub
mov
sbb
jno
sub
movsb
xchg
repnz
xor
jg
and
xchg
icebp
xchg
test
aam
jl
imul
and
inc
cmp
pop
dec
dec
js
mov
je
jle
lcall
in
in
stos
jae
mov
xor
mov
xor
mov
push
pop
ljmp
stos
cltd
loopne
mulb
lock
jmp
or
cmc
and
pushf
out
adc
lock
fldenv
neg
cld
cmp
cmpb
mov
pop
ss
addr16
cmp
mov
ja
sub
push
mov
mov
push
jecxz
repnz
adc
dec
or
hlt
mov
hlt
inc
or
add
sbb
or
mov
lahf
pushf
jmp
aaa
call
enter
aad
pop
out
mov
push
cmpsb
xchg
lea
jecxz,pt
jle
lods
out
mov
and
inc
lods
push
movsb
xchg
mov
mov
xor
cmpsb
out
sbb
add
cmc
push
fs
mov
mov
cmpsb
add
ret
xchg
push
es
push
dec
add
cs
jns
pop
sahf
stos
outsl
hlt
jae
fisttps
inc
inc
jmp
mov
dec
popa
ljmp
daa
jno
push
push
cmp
les
jnp
imul
nop
mov
push
xchg
in
stc
sub
xchg
sub
or
fistpll
cs
outsl
leave
push
pop
mov
xchg
jecxz
andb
lsl
xchg
jl
cmp
fsqrt
push
loopne
xchg
cs
or
sbb
rolb
sbb
mov
adc
sahf
lret
orl
call
ds
aam
mov
shlb
add
outsl
ret
cmc
cmp
adc
fiadds
and
mov
sar
loop
insl
jo
xchg
mov
daa
xchg
push
sahf
out
sub
sti
iret
mov
mov
xorb
mov
aas
insl
jg
pop
out
mov
out
lcall
cmp
cmc
mov
hlt
adc
lcall
iret
addr16
push
hlt
imulb
loopne
pop
jmp
pop
fisubl
test
roll
orb
jmp
mov
xchg
cmpsb
insl
pop
inc
jp
ret
dec
sbb
ret
ror
emms
mov
lahf
lret
mov
out
mov
aas
xor
push
int3
xchg
or
mov
mov
mov
mov
cli
inc
dec
ljmp
adc
pop
lcall
scas
fdivs
sbb
mov
jecxz
mov
mov
fwait
js
stc
loop
cmpsb
nop
cmpsl
pop
aas
aad
and
dec
fbld
mov
cmp
jbe
scas
mov
xor
pop
xchg
cmp
shl
mov
adc
push
xor
and
rcl
jle
dec
pop
bound
inc
push
adc
xlat
push
and
and
inc
dec
arpl
stos
push
jmp
les
nop/reserved
aaa
cli
gs
pusha
and
out
lret
aas
jno
filds
je
and
andl
imul
cmpsb
sbb
outsb
jmp
push
lret
mov
jg
and
cmp
arpl
cwtl
jmp
std
add
pop
push
lahf
jmp
mov
ljmp
loopne
js
and
lahf
mov
inc
je
xorb
xchg
sub
cmp
pusha
jmp
push
sbb
inc
push
adc
xchg
jns
scas
imul
jg
lds
mov
outsl
fnstsw
andb
mov
dec
cmp
xchg
popf
nop
jns
outsl
inc
pop
mov
inc
jp
loop
int3
inc
sub
faddp
push
ret
or
push
cmp
insb
test
inc
xor
jl
repz
outsl
xor
push
inc
lret
and
sub
mov
jl
outsl
mov
push
lds
stc
je,pt
pop
sbb
mov
test
push
lret
in
pop
pop
jge
bound
xor
dec
pop
icebp
pop
mov
stos
lcall
je
adc
mov
xor
push
cld
gs
dec
pop
xor
lcall
cmp
popf
mov
sbb
push
stos
cmc
nop
outsl
js,pt
add
mov
fists
jp
pusha
fildl
push
pop
pop
add
roll
sbb
nop
mov
sub
sub
test
jp
imul
xchg
ds
sahf
xor
sbb
ret
xchg
sbb
test
fdiv
inc
xchg
ja
ss
pusha
mov
in
inc
es
cmp
xor
test
xorl
dec
int
jecxz
xchg
adc
jg
mov
adcl
sub
cmp
testb
pop
dec
inc
jecxz
popf
ljmp
ret
lahf
das
fsubrp
jle
mov
jne
popa
pop
bound
jbe
push
push
popf
sbb
pop
mov
lret
call
pop
adcb
inc
imul
cmp
popf
xorl
int3
jo
pop
rcrl
call
enter
pushf
jne
cmp
add
mov
aad
not
out
jb
jmp
push
pop
stos
test
mov
lods
mov
enter
fbstp
repnz
int
in
push
mov
jb
or
xchg
sub
xchg
outsb
and
jbe
and
mov
fucomp
add
push
push
xchg
sbb
and
imul
mov
add
popf
iret
inc
cmp
adc
xlat
add
lock
or
mov
sbb
push
jecxz
inc
jae
sahf
mov
sbb
test
cmp
pop
lret
pop
xchg
mov
cmpl
js
cld
sbb
test
jo
pop
outsl
ja
popa
xor
clc
mov
mov
xor
dec
testl
roll
push
test
js
in
or
cld
dec
and
mov
jp
jns
ds
jle
mov
lret
push
sub
ja
pop
repnz
inc
push
mov
cmpsb
das
push
dec
idivl
mov
xlat
xor
adc
or
mov
pop
pop
aaa
idiv
pop
popf
cmp
add
loope
nop
xor
out
sub
stos
flds
push
bsr
xchg
std
cmp
mov
je
add
stc
cmpsl
lods
mov
dec
push
bound
data16
cmp
and
vfmaddsub132pd
cmc
sub
jle
xchg
push
rcrb
hlt
push
loope
jnp
call
mov
jg
fildll
dec
push
leave
mov
add
iret
and
std
setle
xor
sbb
lea
dec
in
mov
mov
push
pop
addr16
mov
add
mov
fs
xor
xchg
inc
lods
dec
scas
lcall
adc
aam
mov
mov
jl
inc
inc
fcmovne
mov
pusha
clc
data16
je,pt
pop
mov
jg
es
cltd
cmp
repnz
xor
jle
sbb
jbe
add
dec
ss
scas
enter
jecxz
jl
testb
lcall
insb
lret
insl
setne
imul
mov
sbb
push
xor
pop
push
mov
and
int
cli
loop
sub
das
mov
mov
sbb
test
fmull
fidivrl
movsl
mov
sub
iret
xchg
jmp
adc
inc
xchg
dec
sub
rcl
insb
pop
xchg
fisubs
or
push
fwait
mov
add
sbb
arpl
jl
sti
push
aas
andb
imul
iret
and
push
lret
xchg
mov
adc
ficompl
cmp
push
scas
push
fildll
lods
sahf
mov
movsb
mov
sub
mov
adc
xchg
repz
dec
sbb
sub
adc
rcll
or
arpl
inc
mov
fstl
jnp
insl
mov
rorl
add
popa
ds
sarb
dec
aaa
test
add
cmpsb
fsubrl
adc
xchg
pop
fcmovnb
ficoml
aas
cmp
lret
dec
leave
addr16
adc
sbb
inc
fldl
inc
xchg
shl
sub
mov
cmp
push
mov
add
les
outsb
lcall
jne
and
jns
jg
push
test
std
sbb
icebp
mov
cmpsl
xor
fcompl
push
adc
mov
inc
lcall
xchg
es
inc
loop
adc
jp
stos
jnp
jmp
jle
pop
outsb
popf
fisubrs
fsubl
repnz
cmp
push
test
sub
push
lods
shll
pushf
test
xchg
arpl
scas
sbb
and
push
jl
add
mov
mov
arpl
in
movsb
jb
in
dec
push
insb
dec
sub
enter
sub
jecxz
ds
in
cmpsb
dec
push
and
mov
stos
repz
dec
xchg
popa
pop
sbb
jecxz
aaa
das
jb
cmp
xchg
mov
mov
adc
arpl
mov
sbb
pop
lahf
movsl
stos
inc
xor
inc
mov
inc
lret
aam
adcb
xor
es
das
fimull
fiaddl
mov
pop
fcmovbe
inc
mov
adc
cld
in
stos
sub
pusha
mov
sub
leave
jg
push
inc
sbb
pop
dec
test
cmp
cmp
sbb
push
mov
gs
test
dec
or
push
lods
stc
es
xchg
sbb
inc
dec
xchg
pop
test
arpl
or
cld
and
sbbl
addr16
gs
or
xchg
in
add
jge
lret
int3
and
push
orb
mov
fstpt
das
int3
scas
ret
movsl
pop
repnz
ret
adc
xchg
pop
push
add
sub
mov
test
pop
sub
les
sub
push
popf
scas
sbb
and
dec
inc
jns
pop
sbb
flds
insl
or
mul
cld
and
stc
and
jl
push
sarb
xchg
pop
fidivrl
mov
sbb
jmp
test
xchg
loop
xchg
imul
and
roll
jno
sub
mov
out
ja
jo
fildl
int3
mov
cmpsl
xlat
adc
pop
lcall
iret
ss
outsb
in
pop
pop
inc
jae
daa
mov
sarb
xchg
mov
aas
xor
jae
xchg
xor
and
xor
mov
sbb
fcompl
mov
push
imul
cmp
jmp
xchg
jg
les
outsb
xor
cmp
inc
popf
mov
mov
mov
pop
xchg
push
jno
dec
dec
fs
iret
lds
repz
shrb
mov
adc
xor
je
sti
xchg
lds
jp
jns
xor
push
mov
pop
adc
push
xor
sbb
outsl
push
adc
out
sbb
cmpsb
sbb
ds
inc
imul
sbb
ss
stos
xchg
xchg
pop
insb
adc
and
in
ffreep
pusha
fnstenv
call
xchg
lock
and
jae
cmpsl
dec
push
sub
cld
aaa
inc
adc
or
lock
inc
stc
dec
and
mov
popa
xchg
mov
push
test
mov
orb
mov
sbb
lea
fdivs
inc
aaa
mov
pop
xchg
push
loop
scas
divb
adc
insb
mov
dec
pushf
dec
mov
sahf
cmp
pop
mov
std
dec
scas
js
les
xchg
insb
mov
mov
ljmp
cltd
xor
vpsubw
pop
loopne
inc
mov
inc
int
push
clc
xlat
mov
into
cld
in
pop
push
rorb
test
ret
daa
stos
fs
inc
sub
int3
rolb
pop
xchg
push
pop
push
mov
mov
sti
stc
xorb
xchg
loopne
jo
and
inc
cmp
sub
jb
in
add
or
pop
decl
push
add
cltd
push
out
inc
mov
or
ficompl
push
dec
imul
pop
mov
mov
arpl
into
ret
or
loopne
icebp
stc
and
pusha
xchg
xlat
or
mov
fsubl
clc
arpl
out
mov
push
cltd
rolb
fistpll
xchg
dec
push
aas
nop
ret
loop
aam
sbb
aaa
sub
aaa
sub
pop
adc
cmp
fisttpl
ss
dec
out
xchg
mov
push
pop
divl
add
decl
inc
and
mov
shrb
movsb
push
mov
pop
mov
jmp
lea
fldl
cli
inc
push
mov
lods
push
sbb
mov
mov
in
in
push
loop
daa
pushf
ficoms
adc
push
adc
aaa
add
pop
in
xor
mov
rcrl
insb
mov
push
xchg
ss
stos
fcomps
inc
sbb
aaa
mov
inc
les
clc
stos
push
xor
adc
icebp
rclb
lods
pop
or
jo
xchg
and
repz
inc
bound
imul
lcall
test
lcall
mov
enter
mov
call
mov
fwait
jo
pop
int
fstpt
xchg
inc
inc
test
pusha
mov
jb
cmp
fcompl
pusha
clc
cwtl
pop
divl
fsubs
add
stos
sbb
xor
jnp
out
sbb
sub
add
jg
outsl
in
adc
add
jl
outsb
xor
les
or
sbb
inc
mov
adc
insl
jne
mov
jecxz
pop
sub
mov
jnp
push
mov
int3
xchg
lea
int
inc
jo
xchg
andb
mov
out
and
lahf
xchg
bound
rcr
out
sbb
adc
mov
jno
inc
loop
icebp
cmp
jmp
addr16
fildll
xchg
fsubr
in
jae
cmpsl
sbb
add
fwait
xlat
adc
cs
and
mov
jle
in
mov
mov
inc
test
in
cmp
data16
es
add
pop
sarl
fucom
sbb
adc
jnp
jp
cmp
pop
and
jge
cld
mov
mov
sti
sub
inc
sarl
test
jmp
dec
jne
mov
mov
insl
outsl
add
rcr
icebp
xor
cwtl
jno
fwait
enter
rdpmc
jg
in
pop
push
xchg
and
or
insl
and
cmp
aaa
pop
sub
sub
jge
or
repz
cmpsl
imul
int
and
xor
rorl
xchg
dec
adc
fists
inc
ret
push
or
aaa
aad
cmp
adc
insb
sub
out
int
xor
fstpl
push
xchg
test
cmp
jno
or
or
mov
loope
sub
mov
pop
cli
dec
dec
loop
das
sarl
and
jo
scas
mov
jmp
mov
movsl
lock
ficompl
sub
pop
sar
cs
arpl
fnstsw
imul
xor
push
mov
ficompl
inc
mov
mov
jge
loope
xchg
mov
loop
sbb
aaa
sub
mov
adc
cmpb
into
push
mov
in
cmp
fstl
ja
adc
and
movsb
lods
shll
mov
dec
dec
dec
idivl
popf
push
lret
xlat
sbb
rep
sahf
add
std
sub
nop
bound
lds
fisubs
xor
fwait
addr16
dec
push
cwtl
pop
loope
push
mov
cmp
lods
shll
mov
adc
js
pop
and
inc
outsl
cmp
dec
mov
push
add
xchg
js
mov
xor
mov
xlat
test
aad
push
cmpl
xor
dec
dec
mov
cmpsl
je
dec
stos
pop
push
jns
mov
stc
mov
adc
and
jbe
aas
scas
xlat
dec
in
add
nop
xorb
adc
xlat
bound
lahf
sub
xchg
aas
bound
sahf
xor
bound
insl
ja
cli
mov
xchg
cmpsb
cwtl
push
pop
ret
notb
sbb
pusha
mov
push
jae
and
jmp
adc
fidivrl
xchg
loopne
cmp
xchg
and
adc
inc
mov
sbb
icebp
test
daa
jae
xor
lods
pop
adcl
and
aad
mov
push
inc
je
popa
mov
cmc
into
cmp
test
and
xchg
sbb
cld
xor
int
pop
daa
popf
and
xchg
mov
or
add
xor
sbb
jne
outsl
pop
sbb
fdiv
mov
insl
test
mov
or
daa
lret
or
movsl
fistpl
mov
jl
jb
inc
add
pop
inc
and
pop
into
cmp
add
cmpsb
dec
das
js
adc
jae
sbb
cmpsl
scas
mov
stos
aaa
mov
push
inc
jl
jb
addr16
and
jbe
add
push
jecxz
aad
and
loop
or
call
in
inc
push
mov
push
cmp
jmp
mov
fmul
ljmp
jg
imul
xchg
adc
rcrl
int3
add
addb
mov
xchg
hlt
push
rcrl
pop
lods
and
sbbl
jne
fnsave
cli
test
adc
jg
mov
popf
xchg
daa
test
push
movsl
lcall
js,pt
xchg
sub
test
ret
mov
jmp
mov
mov
ds
add
xchg
fdivrs
sbb
sti
lods
pop
insb
inc
xchg
sub
mov
inc
lds
mov
ret
aas
add
filds
mov
mov
ja
mov
xor
rclb
out
jmp
rcrb
pop
into
inc
bound
mov
mov
repnz
pop
dec
pop
int
enter
xchg
clc
sbb
pusha
dec
les
mov
or
popf
cli
push
mov
call
jle
stos
mov
inc
aam
cmp
mov
jns
fsubl
inc
outsb
xchg
inc
cmp
jbe
push
mov
and
mov
mov
sub
push
mov
cmpsb
fsubl
mov
xor
daa
push
and
testb
fistl
inc
adc
xor
or
ja
jg
dec
icebp
lds
adc
mov
clc
jp
adc
mov
test
in
add
mov
push
cld
pop
imul
fwait
xor
rcll
pusha
movsb
sub
iret
insl
incb
mov
addr16
adc
arpl
fiaddl
mov
inc
mov
mov
push
out
shlb
jne
rorl
xchg
jl
cld
sti
ret
shl
lahf
push
pop
lock
xchg
mov
fidivrl
pop
sarl
lds
and
and
cmp
pushf
int3
mov
pop
inc
sub
mov
ja
sarl
add
hlt
xchg
pop
fadds
cmp
adc
lock
sub
sub
mov
xor
add
inc
sahf
and
cmpsl
xchg
clc
popa
or
push
mov
scas
fcoms
insb
jo
push
ret
push
dec
testl
mov
lods
shlb
push
sti
test
or
loop
push
movsl
pop
mov
mulb
fdivp
inc
js
je
ljmp
daa
orb
xchg
cli
dec
insb
cmp
add
sbb
dec
push
cmp
push
sbb
push
pop
mov
jo
mov
mov
pushf
inc
pop
dec
add
lret
mov
jo
call
imul
sbb
or
jle
pop
adc
fs
dec
stc
mov
lods
cmpsl
xchg
sub
cmpsl
push
outsl
cmpsb
clc
mov
and
sub
xor
mov
pop
mov
pop
inc
or
mov
and
add
leave
fcomi
daa
nop
mov
xchg
pushf
jbe
or
fbstp
mov
cmp
mov
and
sbb
jb
push
fcmovu
cmpsl
and
outsb
loope
ja
hlt
into
cld
xor
in
mov
cmpsl
sub
sti
popa
xchg
mov
lret
mov
outsl
pushf
push
adc
add
mov
jge
incl
lods
xor
imul
sbb
fildl
pop
jo,pt
inc
cmpsl
mov
std
xchg
pop
pop
nop
iret
out
popa
jo
out
pop
push
or
pop
xchg
insl
jmp
aad
mov
lcall
sbb
lds
lahf
cli
push
lea
sbb
imul
jnp
adc
insl
lret
cmp
call
inc
lret
mov
jae
out
dec
mov
cmp
cld
ss
mov
cli
adc
daa
test
arpl
xchg
fstpl
addr16
xlat
mov
dec
mov
adc
fdivrl
pop
inc
imul
repz
xchg
adc
popf
xchg
js
imul
sbb
sbb
mov
push
mov
shll
aad
icebp
sbb
or
mov
sbb
cmp
inc
inc
and
or
aad
sbb
or
inc
cmp
push
inc
jg
and
imul
jmp
and
inc
daa
inc
cwtl
add
fimuls
inc
push
add
xor
xor
mov
mov
push
mov
pusha
sbb
test
mov
pop
mov
cmpsb
xor
lcall
mov
sub
fcoml
loope
iret
int
mov
test
adc
stos
xchg
push
jnp
std
ljmp
adc
jne
cwtl
mov
adc
xlat
sbb
sbb
out
sub
in
nop
sbb
ss
das
push
mov
in
aaa
mov
in
cmp
arpl
mov
pop
dec
or
scas
jp
pop
mov
sbb
lods
pop
hlt
adc
inc
jg
xchg
xor
mov
dec
xchg
fdivs
sbb
call
cltd
and
push
mov
ss
and
jae
xchg
jns
push
adc
lcall
or
mov
mov
rol
mov
sbb
adc
aad
out
sub
mov
inc
lods
xchg
test
push
pop
daa
stos
push
jecxz
sub
int
ja
les
mov
rolb
popf
fldcw
sub
xchg
sbb
leave
lret
mov
cmp
ret
inc
lock
dec
and
in
xor
mov
outsb
aam
repnz
adc
and
aaa
xor
jo
inc
pop
mov
enter
lcall
pop
ljmp
loopne
cmp
pop
lock
xchg
sbb
and
pop
insb
pop
in
pop
mov
cmpsl
cwtl
mov
fildl
pop
push
fs
outsb
xchg
pop
lock
sbb
and
lds
test
cmc
fisubrs
fiaddl
dec
out
les
test
sbb
scas
add
das
cmp
cwtl
pop
iret
scas
fmull
dec
sub
jmp
movl
xor
inc
mov
loopne
addr16
sub
pusha
inc
test
jle
data16
lods
shrb
jnp,pn
test
fs
int
push
dec
cmp
rol
ds
push
and
mov
sbb
cmpsb
in
mov
xchg
lcall
in
jo
out
xor
dec
cs
xor
xor
sub
adc
ss
dec
dec
mov
dec
pop
pop
sbb
cwtl
in
push
rcr
loopne
lret
push
arpl
adc
bound
adc
cmp
ja
mov
xchg
xlat
or
mov
movsl
icebp
into
mov
xchg
in
fsubrs
mov
movsb
or
mov
sbb
push
sbbl
and
xlat
mov
out
push
ds
in
xor
sub
and
or
popa
js
sub
cmp
mov
add
inc
filds
aam
sub
push
scas
lea
sub
cld
dec
push
or
ret
fistpl
rorl
jecxz
add
jg
lahf
mov
sbb
and
fsubr
jnp
sbb
incl
mov
xchg
push
divl
loopne
call
dec
xchg
jnp
insl
movsb
aam
andl
jg
hlt
out
cmp
aaa
push
mov
pop
cmp
je
push
mov
loope
mov
scas
dec
movl
popf
mul
sub
cwtl
and
push
movl
movsl
mov
mov
adc
pop
insb
mov
jp
sub
mov
push
lret
push
dec
int3
out
imul
or
mov
insb
mov
dec
mov
std
push
cmc
repnz
mov
adc
cltd
iret
jg
ljmp
sub
fstl
push
in
xor
and
inc
mov
xor
lea
jg
dec
pop
cltd
add
movsl
sub
negl
cltd
in
leave
dec
xor
jge
jle
xchg
xlat
ss
pop
stos
jne
push
or
push
xchg
stc
or
jle
pushf
lahf
leave
inc
mov
hlt
fistps
inc
inc
pop
sub
movsl
stos
ljmp
mov
jne
push
call
jecxz
imul
pop
and
test
iret
cmp
sbb
push
dec
scas
popa
js
cs
lods
out
pop
hlt
outsb
fcoml
dec
hlt
adc
mov
test
mov
xchg
jbe
xchg
xchg
mov
rcrb
xor
cmp
fistpl
or
jl
stc
lock
mov
ss
xchg
mov
popf
aad
pop
jg
mov
xchg
int
nop
ljmp
cmp
pop
pop
mov
pushf
mov
and
cmpl
imul
sub
push
fmuls
xor
and
repz
stos
popf
xor
lock
xlat
push
enter
mov
cbtw
push
lret
pop
js
jecxz
js
imul
imul
xor
rorl
out
mov
inc
mov
or
pop
and
out
jecxz
cmp
outsb
outsl
add
bswap
mov
xor
ja
ret
insb
adc
mov
pop
cmp
movl
repz
xchg
lods
ds
dec
into
cmpsb
mov
sub
pop
nop
in
pop
inc
xchg
jle
stc
and
inc
add
cli
jp
mov
push
mov
pop
lods
dec
xor
and
dec
mov
add
mov
hlt
cmpsb
pusha
dec
mov
insl
sar
ds
jno
jle
inc
and
sub
mov
sbb
out
cmpsb
mov
fidivs
mov
int3
jmp
mov
or
add
daa
call
or
sub
insl
mov
pusha
xor
mov
push
sti
mov
icebp
adc
js
inc
dec
or
cmp
mov
mov
mov
xor
push
xor
xchg
dec
cmp
and
mov
pop
xrelease
mov
in
cld
ficomps
cmp
sub
add
subl
loope
mov
nop
xchg
lcall
lret
add
add
aam
sub
cmp
push
cmp
pop
jg
movsw
rorl
lret
dec
push
dec
pop
mov
negb
sahf
cmpsb
mov
sbb
pushf
dec
dec
pop
fdivl
into
sahf
iret
jge
mov
ljmp
jns
mov
cmpsl
lods
jle
xor
cmp
and
sub
push
gs
mov
cmpsl
movsb
testl
cmp
repnz
in
mov
jmp
push
jae
pop
jbe
jge
pop
dec
mov
cld
clc
pop
xor
push
xor
out
push
cmp
insl
and
stos
mov
inc
mov
cmp
lret
rorb
adc
je
pushf
mov
push
mov
jae
jo
lods
dec
add
shll
aas
xlat
mov
jge
lock
mov
bound
jl
dec
and
mov
add
push
inc
adc
repnz
jecxz
ja
cli
lea
pushf
adc
leave
jmp
insb
xchg
add
mov
test
pop
adc
cld
mov
add
jb
rcrb
test
mov
test
cmp
inc
enter
inc
frstor
scas
push
orl
pop
les
out
sarb
jne
imul
jbe
inc
inc
loope
arpl
test
jae
or
push
jecxz
mov
in
adc
pop
and
add
dec
and
fistl
sti
inc
stos
mov
lret
cmp
aaa
or
jp
filds
dec
pushf
or
cld
inc
std
loopne
sbb
sub
cmp
out
in
xchg
fsubr
push
mov
das
dec
bound
adc
sub
popa
lahf
xchg
adc
insl
rolb
call
into
inc
orl
dec
xchg
lods
push
jle
adc
xor
pop
adc
jne
pop
xchg
xor
dec
jnp
pop
mov
not
test
xor
imul
aam
xchg
mov
dec
loope
iret
inc
or
sub
xchg
inc
lahf
and
dec
xchg
dec
rcll
xor
arpl
cmp
mov
fs
xorl
ljmp
sahf
loopne
inc
mov
mov
loope
dec
movsl
scas
scas
daa
push
repz
push
lret
cmp
push
test
push
pop
mov
and
jne
mov
xchg
loop
cmp
jmp
pop
pop
xor
cmp
xchg
pop
es
enter
shll
xor
pusha
push
add
or
pop
push
mov
movsl
jecxz
mov
xlat
mov
stc
inc
lret
popa
lret
rolb
cmc
into
cld
test
mov
int
lds
dec
cltd
gs
xchg
mov
push
or
call
loop
scas
test
xchg
pop
movsl
jl
mov
adc
cld
sarb
pop
add
or
rcrb
js
pop
dec
mov
rcr
cmpl
ret
mov
or
mov
pop
xchg
ds
and
addr16
adc
stos
imull
aaa
lahf
push
jne
ja
out
push
mov
xchg
inc
sbb
xorl
test
cmpsb
outsb
fcmovnu
or
aaa
xchg
dec
int3
pop
enter
addr16
cmpl
dec
sbb
pop
push
xchg
mov
inc
sbb
xorb
negl
shl
pop
cld
jnp
call
rorl
jnp
stos
out
cmp
mov
adcb
popa
clc
std
fdivs
jle
jge
pop
data16
xlat
lret
add
stos
mov
bnd
das
mov
mov
xor
lcall
xchg
scas
push
flds
or
sti
jg
jl
cmpb
sahf
imul
sbb
jno
outsl
std
into
push
mov
xor
cltd
sbb
fisttpl
sbb
aas
pop
ljmp
loope
push
add
test
dec
fwait
in
jnp
inc
sub
pop
jl
pop
cs
js
or
jge
mov
mov
pop
inc
xchg
pop
stos
in
cmp
decl
aas
lds
xchg
cmp
jge
jmp
push
stos
and
ds
popa
test
jbe
lds
call
xchg
adc
aaa
push
aaa
cmp
in
mov
popa
das
jae
jmp
inc
movsb
mov
jmp
jns
sbb
rcll
push
lret
scas
std
jecxz
js
out
arpl
cwtl
cmp
push
cmp
jle
mov
push
loopne
mov
ja
les
fadd
out
jnp
or
inc
and
push
fdivs
inc
inc
push
xchg
pop
cld
push
ss
or
jl
dec
push
cmp
jb
cmpl
jbe
rolb
insl
fldenv
xchg
jge
lds
cmp
fs
bound
sarb
inc
cli
jle
lret
xor
into
es
or
mov
jno
ss
aaa
push
sbb
aaa
jno
dec
mov
jmp
pop
movsb
lret
stos
popf
xor
fldenv
dec
cld
adc
sub
clc
bound
add
xchg
rclb
ror
cmp
jg
outsl
mov
pmullw
std
call
ret
aam
pop
mov
and
mov
and
jne
in
jbe
add
iret
lret
adc
add
xor
ficompl
in
sbb
push
inc
and
mov
xor
push
dec
aas
xchg
imul
cmpb
pop
fisubrs
push
xchg
bnd
cmp
and
ffree
aad
fwait
lea
addr16
jl
jle
pop
cmpsl
xor
xchg
cwtl
sti
add
inc
add
les
fdivrl
movsl
xor
push
mov
pushf
jmp
push
test
xchg
leave
xor
xor
pop
push
mov
enter
sbb
mov
sub
fprem
aas
shll
and
push
outsl
jbe
orb
push
inc
inc
cli
movsl
mov
call
or
cmpl
or
pusha
popa
xlat
fcmovne
push
stos
lret
pop
pop
cld
push
dec
inc
push
xlat
mov
or
push
dec
in
mov
push
jnp
aas
cmp
add
gs
or
rolb
xchg
adc
arpl
mov
mov
mov
push
push
push
pop
sub
pop
add
jb
xor
jge
fistl
dec
sub
in
sti
mov
push
xchg
jns
cld
nop
add
fists
sbb
mov
or
in
push
call
loopne
adc
lea
loop
jecxz
js
xor
mov
test
push
cmovle
jg
inc
inc
and
inc
xor
add
ret
jmp
pop
fsub
lods
cmc
jmp
ja
and
shrl
outsl
es
pop
add
loope
fmul
cmpsb
add
sahf
fadds
jl
and
jge
in
mov
lahf
dec
pop
and
adc
inc
aad
lock
push
sub
pop
out
movsb
jbe
movsb
lds
mov
add
jle
mov
jb
iret
pop
xor
mov
xchg
xchg
dec
xchg
or
mov
push
enter
gs
cmp
iret
movsl
jmp
in
cmp
lods
cmp
gs
push
mov
mov
ret
fisubrl
outsl
scas
mov
out
jo
or
xor
lock
test
sbb
nop
or
xchg
push
adc
jne
pop
les
aas
adc
sub
jle
rorb
mov
fsubr
repz
adc
sbb
cmc
rcrl
add
cmp
sbb
orb
xchg
pusha
cmpsl
jmp
lahf
stos
sbb
dec
xchg
mov
pusha
repz
push
mov
adc
cmp
mov
lret
movsl
jno
test
hlt
jmp
mov
pop
imul
test
push
sbb
jmp
in
out
andl
lahf
sub
fucomi
dec
add
lea
mov
enter
testl
sbb
mov
lea
inc
fldenv
and
add
and
iret
dec
dec
mov
mov
enter
mov
ja
xor
loope
pop
adc
movb
jbe
jo
aaa
decb
xor
in
jbe
xchg
xor
imul
addr16
fimuls
aam
dec
aaa
idivl
adc
ret
pop
jb
sahf
sub
push
aaa
ret
addr16
xor
jns
fdiv
mov
xor
xor
add
mov
push
push
xchg
mov
pop
pop
ja
into
rcr
aam
xchg
mov
loopne
add
mov
and
dec
jge
xchg
and
pop
jae
std
push
jecxz
ss
pop
dec
mov
cmc
in
jmp
arpl
sub
mov
pop
jae
mov
dec
test
add
scas
push
imul
push
jp
sbb
ss
jno
data16
movsb
mov
xor
mov
cmp
stos
dec
push
call
and
xchg
pop
pusha
xchg
icebp
push
mov
jno
pop
ficomps
push
cwtl
enter
push
aas
fadds
les
ss
inc
in
fiadds
subl
test
mov
fists
add
pusha
push
out
sub
arpl
mov
clc
add
hlt
pop
pusha
mov
dec
or
and
js
push
lret
pop
adc
cmp
dec
pop
add
hlt
pop
lods
mov
inc
popf
push
jge
mov
bound
pop
test
test
inc
mov
fwait
in
cmc
pop
dec
loopne
divb
fwait
mov
faddl
dec
sahf
push
push
jns
pusha
stc
mov
add
fsubl
jo
fbld
test
mov
loopne
adc
lock
push
jg
dec
fcmovnbe
inc
mov
cmp
and
in
sbbb
loopne
test
push
inc
push
imul
incl
sbbl
cmp
pushw
aas
inc
jg
out
ss
mov
ja
cmp
outsl
mov
and
mov
jecxz
adc
into
sub
or
jle
test
je
sub
fsubp
jnp
xchg
add
jns
xchg
inc
lea
pop
mov
pop
xchg
pusha
mov
inc
and
dec
sbb
push
in
rcr
dec
mov
gs
xchg
mov
jbe
rcll
pop
mov
cmp
jmp
lods
in
in
xchg
push
adc
sbb
sbb
pop
cld
add
mov
pop
fcomps
mov
les
lea
push
xor
xchg
aad
cmp
push
daa
decb
loopne
data16
pop
sub
mov
dec
push
xor
push
jl
aad
pushf
pop
cmp
ds
sti
sub
sahf
jae
lret
hlt
add
ljmp
pop
cmp
pop
sub
test
mov
leave
mov
mov
es
push
addr16
mov
add
pushf
jle
xchg
xchg
sub
cmpsl
push
outsb
sbb
mov
mov
inc
jns
in
aad
cld
add
xchg
pop
pop
or
sbb
aam
jbe
arpl
xchg
call
jecxz
inc
pop
mov
out
cmc
dec
pushf
adc
dec
data16
or
dec
out
mov
xor
stos
xor
pop
fisttps
call
xchg
into
jno
rol
dec
daa
mov
test
subl
pop
sbb
mov
mov
imul
mov
divb
and
enter
push
pop
int
scas
clc
inc
ljmp
cwtl
xchg
in
aam
cmp
mov
jnp
cmp
stos
mov
fidivrl
cmp
and
or
mov
mov
push
loope
mov
in
dec
push
mov
insb
sbb
push
jb
dec
imul
leave
mov
pop
push
jge
nop
iret
sub
and
sbb
mov
pop
std
pop
out
push
mov
or
mov
cmc
jo
lods
push
iret
push
jmp
jmp
js
sbb
jnp
mov
mov
in
or
gs
mov
bound
cmpsb
mov
add
aam
push
xor
sbb
mov
mov
lods
mov
push
in
mov
sbb
gs
loopne
icebp
xchg
dec
mov
dec
lea
ret
inc
cwtl
js
adc
inc
push
arpl
into
xchg
or
inc
enter
in
icebp
sub
inc
shrl
mov
and
mov
daa
mov
mov
or
pusha
ret
lcall
mov
pop
mov
mov
cld
adc
js
pop
repz
add
test
hlt
ficoml
aas
rcrl
out
jno
arpl
and
icebp
popf
adc
icebp
sub
int3
xlat
pop
mov
push
cmp
pop
cs
sbb
fs
push
leave
imulb
push
push
adc
pushf
leave
lods
movsb
or
repz
movsb
xchg
sbb
mov
mov
stc
sbb
sbb
cmpl
mov
aad
leave
mov
xor
rolb
fmul
mov
je
and
jb
mov
push
fwait
test
mov
push
mov
cmpsb
fsubrs
icebp
into
jecxz
jle
adc
lahf
aad
ss
das
ret
ds
dec
jns
jo
sahf
adc
lods
jb
aad
je
xlat
jp
or
daa
cmp
or
icebp
lcall
leave
aas
pop
inc
icebp
repnz
mov
or
add
sarb
data16
pop
adc
sub
and
fsubl
xor
pushf
and
mov
cmp
or
mov
aam
cwtl
cmp
sahf
jb
jp
test
outsl
push
sbb
sub
jecxz
adc
xor
xchg
mov
jg
xor
mov
sbb
std
popa
nop
or
mov
push
and
mov
add
dec
add
rcr
jge
add
inc
jnp
push
push
mov
push
stos
adc
insl
addr16
lcall
and
mov
adc
jle
fmul
sub
jno
pop
data16
sbb
pop
inc
in
mov
fcoms
mov
or
push
sti
push
imul
in
js
or
ljmp
test
je
or
stos
xchg
jp
push
push
imul
loopne
orl
push
pop
hlt
xor
scas
jb
lahf
repnz
jae
pop
add
xlat
test
dec
rcll
pop
sbb
add
pop
push
int
movsl
and
aaa
push
jmp
inc
add
dec
xor
cmova
cmpsb
ror
aam
test
nop
xlat
scas
sti
mov
adc
incl
in
xchg
iret
test
dec
pop
into
mov
hlt
jns
in
aad
mov
mov
jnp
and
xchg
and
lds
mov
lcall
add
pop
or
lret
aad
out
pop
adc
push
xchg
dec
shll
aaa
mov
or
mov
imul
jecxz
movsb
popa
pop
lods
sbbb
test
cmp
lret
push
and
in
xlat
pop
pop
out
pop
daa
or
jge
ljmp
mov
bound
jo
dec
enter
adc
xor
pop
and
dec
arpl
cmc
pop
fs
push
mov
daa
popa
sbb
cwtl
or
int3
in
dec
shlb
mov
imul
jp
fiadds
jle
mov
mov
pop
fcoms
xor
sahf
inc
xchg
jno
pop
int3
xchg
mov
inc
mov
push
fcos
enter
les
mov
mov
dec
pop
sbb
jecxz
gs
subb
xor
pop
fcmovbe
fdivrs
imull
fldlg2
inc
in
mov
icebp
stc
pop
xchg
test
loopne
cltd
push
mov
mov
dec
mov
push
jmp
cld
pop
xchg
dec
insl
pop
jp
rorb
and
out
mov
out
fnstsw
xchg
lods
stos
mov
dec
stos
loope
sub
int3
push
sbb
add
in
sbb
shufps
lods
and
add
clc
jg
push
popf
add
cmc
mov
xor
movsl
cmp
xchg
ficoms
loope
or
pop
dec
sahf
out
in
or
xlat
subb
jnp
xchg
pop
cmp
fs
inc
orl
addb
lret
pushf
xchg
daa
jno
lods
sbb
xchg
xchg
push
pushf
loope
jecxz
pop
out
inc
pop
jb
or
das
jne
daa
sbb
repz
jmp
loope
mov
inc
repz
lret
sbb
ljmp
loope
push
cmp
mov
dec
mov
les
xchg
adc
mov
lret
testl
data16
pop
pop
mov
and
out
xor
add
notb
aaa
fdivl
hlt
je
push
xchg
pop
dec
inc
mov
mov
repz
sbb
dec
jns
mov
inc
inc
push
sub
xchg
gs
xchg
pop
cmp
ja
sbb
hlt
sarb
ss
insb
std
pop
mov
mov
outsb
loope
sti
mov
hlt
je
ljmp
cmp
pop
jno
aas
cltd
dec
ss
pop
jecxz
jge
cmpsb
mov
lea
add
and
aad
fistl
xor
xchg
imul
add
jb
cltd
addr16
push
jae
xchg
and
cs
mov
gs
mov
hlt
je
lods
les
imull
and
jmp
andl
out
sub
inc
fidivrl
sti
sub
icebp
or
gs
dec
pop
push
cmp
mov
fnstsw
jns
sahf
and
mov
mov
in
mov
mov
cs
iret
push
jg
imul
sub
lahf
shlb
xchg
jo
add
sti
xchg
stos
jno
clc
sbb
adc
mov
inc
cmp
cmpb
mov
shlb
int
fwait
ss
pop
loopne
loop
pop
pop
sar
jb
cmp
out
sbbl
push
push
daa
inc
inc
cmc
xchg
imul
lret
xchg
lret
adc
inc
in
movsb
fimull
sbb
jle
pop
lods
imul
adc
aas
add
adc
xchg
in
enter
mov
pop
or
add
pop
mov
shld
test
icebp
cmp
mov
int3
sbb
mov
mov
icebp
sahf
lods
inc
cmp
jp
push
sti
jl
mov
or
jno
add
sar
or
xchg
xor
or
scas
jo
sub
popa
fwait
aam
testb
pop
int3
sub
adc
mov
mov
nop
adc
mov
in
sarb
shrb
lret
out
mov
addb
mov
mov
lds
js
add
mov
push
mov
test
jmp
dec
xchg
loopne
imul
pop
inc
cmp
lret
sahf
out
xchg
xor
in
movsb
int3
push
repz
inc
mov
je
js
pop
jp
cmp
je
je
stos
xor
out
sarl
mov
jb
cmp
lret
jns
cmc
adc
fildll
fdivrp
push
dec
int
push
mov
push
decl
jno
pop
sbb
adc
and
push
data16
ret
cltd
jle
bound
pop
or
fwait
rorl
push
daa
daa
lods
fstps
inc
shl
mov
ljmp
movsl
mov
int3
mov
idivl
cmp
into
mov
fcmovnu
lcall
ffreep
jae
or
jle
js
popa
out
sbb
rol
sub
mov
or
mov
ds
adc
push
pushf
fwait
mov
jl
or
repz
es
ljmp
outsl
rorb
jne
xchg
sti
repnz
cmp
sub
jne
inc
xor
dec
movsl
mov
sub
stc
test
test
pop
push
sti
divl
movsb
lahf
pop
ss
shll
and
add
xlat
sarl
shll
sbb
pop
and
add
fnstcw
mov
xchg
pop
ljmp
js
aad
jle
test
add
jb
pop
mul
jns
out
fildl
in
rcrl
jge
rcr
xor
jmp
or
loopne
ss
aam
pushf
cld
cmpsb
ljmp
jge
mov
stos
mov
push
pusha
inc
inc
xchg
pop
push
and
inc
out
cmp
faddl
inc
and
repnz
dec
cmp
es
add
cld
lds
add
in
jo
mov
test
mov
xor
xor
dec
ss
jb
push
sub
push
xor
outsl
outsl
aas
js
mov
xchg
and
xchg
sbb
push
movsb
mov
mov
push
sub
adc
test
ds
mov
fs
lahf
cmp
rol
mov
pop
sbb
jg
popa
mov
pushl
lcall
insb
imul
in
mov
mov
and
in
bound
inc
dec
cmc
test
add
pop
sbb
push
test
mov
or
aas
cltd
fisubs
lret
out
sbb
fcmove
push
cmpsb
dec
pop
movaps
pop
adc
inc
push
push
sarl
jae
pop
push
mov
xchg
mov
imul
cmp
pop
push
mov
adcl
aas
dec
push
aas
mov
mov
push
in
jne
aam
imul
add
mov
push
push
sahf
fists
cmp
aam
xlat
cmpsb
or
mov
and
lds
outsb
cmc
jmp
mov
mov
sbb
mov
jbe
add
mov
jg
xlat
adc
sti
outsl
cltd
xchg
mov
mov
or
test
push
cmp
cmpb
jl
add
mov
es
insl
lds
fldt
dec
and
sbb
imul
add
scas
out
pop
cmpb
data16
cwtl
fdivrs
loop
xlat
mov
shll
mov
pop
addr16
bound
push
lods
ret
jle
loop
push
cmp
sub
push
mov
dec
pop
pop
and
dec
adc
and
dec
aad
leave
add
sbb
popa
cmp
loopne
imul
pop
sub
aam
mov
cmp
call
mov
aam
xchg
xor
test
sbb
testl
outsl
push
jbe
mov
push
movsb
call
sub
cld
daa
dec
mov
call
sbb
gs
les
shl
add
sbb
push
pusha
nop
or
dec
jl
aaa
mov
or
add
or
pop
in
out
inc
sahf
pushf
mov
nop
xchg
sub
mov
lret
scas
ss
call
js
xchg
outsb
and
inc
lods
aaa
insb
out
inc
mov
jmp
call
icebp
xor
mov
imul
xchg
imull
mov
or
pop
xchg
decb
fmul
out
repz
loopne
mov
scas
shlb
rclb
or
or
bnd
cmp
hlt
and
adc
in
sub
inc
or
or
in
imul
jo
mov
outsl
outsb
fs
pop
xchg
or
mov
call
cmc
add
push
test
xor
stos
jg
pop
push
scas
hlt
test
cmpsb
test
repnz
sti
mov
aad
pop
adc
sub
inc
mov
mov
or
or
lea
push
fnstcw
rcr
stos
clc
aaa
dec
jbe
inc
pop
mov
dec
xchg
dec
sbb
and
xchg
mov
add
inc
ljmp
aaa
pop
cmp
jecxz
test
cs
mov
in
mov
fisttpll
loope
mov
xchg
sbb
mov
sub
xchg
mov
repnz
dec
push
dec
xlat
jg
jb
shll
mov
fnstenv
xor
mov
sub
aas
repz
and
sbb
stc
cwtl
scas
dec
mov
add
add
stos
push
rorb
ja
mov
inc
data16
mov
insb
rol
cmpsl
mov
add
cmp
cmp
mov
and
sti
xchg
push
mov
adc
cwtl
lret
js
push
jae
push
or
or
sbbb
aam
int3
int
sbb
mov
push
or
and
cmp
pop
das
sbb
jmp
loopne
nop
sbb
dec
pop
sub
pop
inc
std
sub
les
out
cmp
popf
aam
data16
push
dec
inc
mov
out
push
cmpsl
int3
jp
sub
dec
ds
inc
jae
jg
xlat
rorl
rcll
jno
xor
inc
ret
jb
add
out
in
push
lcall
mov
mov
sbb
ss
dec
test
sub
and
or
add
sub
scas
lret
mov
adcb
ss
pop
hlt
add
out
xlat
scas
add
push
mov
push
sbb
jg
cmp
clc
jbe
sbb
cmpsb
lods
mov
pop
xchg
mov
push
addl
xchg
dec
ret
jns
ja
in
sub
mov
jge
test
adc
jne
aad
leave
mov
adc
lret
sti
imul
pop
dec
fs
push
and
xor
cmc
cmpsb
sbb
jge
adc
rorl
mov
cmp
lret
pop
mov
mov
pop
aas
and
nop
cmp
mov
loop
and
mov
inc
popf
std
flds
popf
and
in
sbb
nop
enter
sbb
or
rcrb
insl
push
movsb
sub
or
insb
jo,pt
lahf
cmp
int
jnp
into
rclb
adc
jecxz
shl
xor
jp
repz
in
dec
lea
cmp
fcomps
jnp
push
xlat
cs
fimull
lods
adc
enter
outsb
outsb
subb
mov
mov
push
popa
fldcw
adc
mov
fs
jmp
and
xchg
pop
pushf
dec
cltd
lret
push
in
fwait
dec
adc
sub
pop
fadds
mov
loope
xchg
std
aam
lcall
iret
pop
cmpsl
add
sbb
mov
mov
cmp
cmp
and
int3
popf
hlt
es
int3
mov
lcall
and
outsl
movl
repnz
roll
fildll
stos
pop
ljmp
pop
and
sub
dec
ret
cs
or
xor
jecxz
data16
lahf
lret
pop
cltd
jne
bound
inc
and
das
data16
testl
lret
flds
stc
sti
movb
daa
push
or
lret
and
cmp
outsb
mov
and
dec
je
icebp
imul
mov
pop
cmp
jle
or
cmp
aam
and
shl
mov
and
fmull
mov
add
mov
imul
mov
dec
jg
jle
cmp
xor
ljmp
push
psrld
loop
mov
add
cmp
adc
mov
stos
mov
inc
addb
xchg
scas
cmp
mov
loop
orl
int
int3
negl
inc
pop
clc
jae
fistps
mov
xchg
loopne
add
imul
jge
sub
jge
add
fwait
xchg
out
sub
iret
mov
and
mov
push
inc
mov
and
out
clc
mov
cmp
in
xorb
lods
fucomp
stos
ret
int3
leave
cmp
add
dec
mov
dec
dec
iret
addr16
xchg
jo
xchg
popa
ss
scas
jmp
cmpsb
popa
nop
sub
outsl
stc
lret
loopne
pushf
fwait
xor
mov
xchg
js
dec
jmp
lret
cmpsl
ret
inc
jns
xchg
pushf
fwait
lds
inc
xchg
xor
xchg
push
pop
ret
in
out
inc
enter
dec
out
ret
test
loopw
xchg
ljmp
test
cltd
sbb
mov
mov
popa
shrl
not
iret
ss
sbb
jg
mov
enter
lds
fistpl
jns
test
dec
or
xlat
test
mov
cmovnp
cmpsl
gs
aad
inc
repz
aad
outsl
and
push
xchg
mov
mov
ds
mov
dec
stos
rclb
enter
and
cmpsb
mov
xor
and
and
sbb
push
xor
out
rorl
frstor
lods
jnp
pop
in
push
rcll
pop
push
test
jg
outsl
mov
popa
lahf
jo
out
add
rclb
xor
sub
mov
shlb
es
mov
in
pop
pop
pop
pop
pop
int
jo
xor
repz
ds
push
push
mov
add
ljmp
inc
mov
mov
out
mov
or
cld
loopne
lcall
maskmovq
testl
pop
add
lcall
adc
adc
fstpt
jp
sbb
jo
push
lahf
sub
sti
jmp
rorl
minps
and
sub
imul
call
stos
sub
lahf
mov
cmp
adc
adc
sub
or
or
pop
add
cmp
jns
sub
mov
sti
ja
mov
push
add
mulb
into
mov
jb
sahf
icebp
in
stos
mov
mov
dec
int
nop
stos
add
loopew
sbb
mov
inc
or
cmp
repnz
pop
out
pop
and
pop
mov
pop
inc
in
sar
int
ds
mov
lsl
jle
loopne
fwait
inc
std
jge
divl
xlat
pusha
pop
sub
dec
mov
imul
xchg
test
insl
fistps
mov
pop
inc
add
dec
sub
das
mov
in
dec
xor
cmp
mov
jnp
pop
add
pop
cld
inc
mov
jae
xor
call
cmp
test
inc
push
mov
cmpsb
ljmp
fldenv
lret
mov
and
pop
jo
dec
in
mul
lahf
pop
pushf
repnz
jne
dec
add
pop
insb
or
sahf
cmp
jns
jmp
or
fildl
jg
in
dec
icebp
insl
jne
imul
aaa
or
out
cwtl
sub
popf
and
movsb
mov
push
mov
and
xchg
pop
adc
or
dec
ret
jbe
orb
mov
or
adc
inc
sub
pop
pushf
mov
jecxz
fs
or
and
lea
push
xchg
mov
inc
sbb
in
rorb
ljmp
add
iret
mov
cmpsb
inc
in
cwtl
jne
or
and
add
adc
adcl
push
mov
test
and
rorl
stos
xor
sbb
call
loope
fnsave
outsl
or
pop
jbe
movsl
adc
push
sti
fildl
push
call
add
sub
lcall
pop
lcall
lahf
jno
jl
pop
dec
loop
cld
imul
jnp
jl
push
es
loop
or
scas
dec
jnp
in
mov
loop
nop
in
cmp
adc
fsubrl
out
fisttps
push
and
jge
jl
sub
lcall
sarl
idivl
not
mov
fiadds
mov
adc
cmp
add
test
out
and
pop
mov
inc
sub
sbb
mov
jno
rorb
outsl
inc
sub
bnd
push
xor
jmp
xor
outsl
jb
ds
inc
mov
pop
into
push
cmc
cwtl
repnz
mov
aam
sub
or
int3
lahf
add
mov
inc
cmpsb
mov
ret
frstor
pop
dec
lods
stc
sbb
mov
movsw
sbb
cltd
jle
fistpl
sbb
sub
decb
push
call
repnz
jns
and
push
movsl
push
and
xor
dec
cmp
scas
xchg
mov
push
test
adc
sbb
sbb
cltd
sub
xlat
adc
lahf
je
pusha
stos
or
cmp
mov
cli
ficomps
mov
jne
cs
jne
cmp
mov
shll
in
imul
push
leave
mov
mov
fbld
incb
call
dec
lods
mov
pop
or
pop
mov
mov
dec
mov
adc
jmp
out
mov
test
or
sub
flds
shl
andb
repz
jb
mov
pop
sub
jno
outsb
test
cmp
mov
leave
dec
pop
and
mov
jbe
test
stos
xlat
pop
int3
dec
xor
lahf
fdivp
das
inc
xlat
in
pushw
iret
dec
mov
xor
ds
imul
loopne
out
mov
push
es
hlt
imul
cmpl
mov
push
xor
popa
shlb
movsb
xchg
xchg
leave
mov
dec
add
int3
andb
fisttps
sbb
sbb
shrl
jl
and
push
jmp
mov
and
gs
mov
jnp
out
jae
cli
cmp
xchg
sub
cmp
or
addr16
sahf
sti
and
sub
push
mov
fwait
sbb
test
je
ret
push
test
sbb
push
dec
movsl
xor
push
push
shlb
jno
movsl
out
mov
sbb
mov
xchg
in
scas
cmp
mov
xor
xchg
xchg
and
movsl
fldt
test
jp
arpl
and
cltd
mov
aad
fcom
fs
out
fistps
cmc
ja
ret
pop
jo
addr16
and
add
rorl
or
mov
mov
pop
jle
sbb
xor
inc
fimull
stos
or
testb
test
andb
dec
sbb
dec
andl
xor
movsl
sbb
aas
mov
cli
sub
sub
outsb
sub
hlt
pop
pop
sahf
xor
cmpsl
xlat
aad
xchg
test
idivl
imul
mov
dec
push
adc
pop
add
fildl
jp
lds
lcall
stos
sub
jmp
dec
mov
add
leave
cmc
mov
and
sahf
pop
imul
add
push
es
adc
ret
inc
mov
stc
out
lahf
loop
aas
aad
ret
shlb
adc
jns
jnp
lret
mov
pusha
mov
hlt
sbb
inc
xchg
mov
mov
mov
jge
xlat
mov
mov
push
push
pop
cwtl
out
call
mov
popa
ret
test
rcll
push
jnp
push
mov
add
leave
and
add
inc
jg
mov
pusha
or
loop
mov
sti
in
mov
mov
inc
mov
scas
mov
adc
mov
int
dec
gs
in
sbb
push
xor
and
dec
sbb
and
lods
ljmp
mov
cmc
or
pop
nop
mov
sub
mov
push
gs
aad
gs
fs
test
sbb
add
sbb
dec
jne
fildl
js
mov
cld
push
mov
pop
push
les
inc
out
pop
cli
add
stc
test
xchg
sub
sbb
inc
xchg
sbb
in
jbe
xor
sub
push
or
and
jmp
mov
sbb
pushf
jg
sti
cmp
add
push
int3
scas
lock
mov
xchg
dec
outsl
jmp
mov
loope
fwait
pop
xor
mov
out
cmp
dec
adc
enter
and
sbb
jle
movsl
cmp
jnp
les
enter
cmpsl
push
aad
sti
sbb
ror
xchg
sysexit
mov
pop
std
aam
xor
mov
sbb
cwtl
hlt
jne
dec
lcall
lea
push
sub
shl
test
fdivr
aas
xchg
xor
adc
jo
les
pusha
and
xchg
ret
sub
or
sub
inc
bound
std
insl
das
mov
sbb
and
ljmp
pushl
xorb
adc
push
cmc
mov
push
sub
scas
js
mov
mov
mov
std
pop
int
xor
sub
mov
jg
andl
faddl
mov
andb
subb
std
mov
in
push
push
inc
int3
mov
pop
and
dec
dec
sub
adc
fwait
mov
dec
inc
xor
cld
jno
lods
xor
cmp
mov
fs
jns
mov
cmp
loop
adc
pop
aam
push
aaa
es
inc
clc
mov
js
cmp
lea
mov
fidivl
movsl
int
dec
adc
std
out
push
ret
out
loope
mov
rcrb
pop
jge
fwait
dec
add
cld
aad
cmpsl
xor
aas
out
clc
and
xor
jge
rorb
and
mov
mov
xor
ljmp
fs
mov
movsl
sub
loope
shll
mov
jbe
out
sti
add
testb
mov
xor
arpl
push
in
xchg
arpl
cli
ret
dec
fnstenv
add
gs
jno
xor
push
and
mov
lods
mov
push
imul
dec
sbb
ret
or
mov
scas
mov
aam
sti
dec
aam
in
mov
cli
mov
or
mov
jne
pop
into
scas
or
lcall
add
xchg
clc
fmuls
andl
es
or
fimull
inc
xchg
hlt
fcompl
mov
les
aam
push
and
push
jmp
cmc
lcall
lret
xlat
mov
stos
enter
add
push
jecxz
mov
aas
pop
decb
inc
pop
mov
pop
bound
mov
loop
mov
mov
mov
daa
push
enter
adc
test
int3
test
inc
xor
push
inc
xchg
mov
data16
shr
mov
add
push
testl
inc
mov
fimull
je
test
aad
out
sub
cmpsb
and
es
push
push
xchg
dec
or
push
jbe
push
jno
icebp
push
ss
loop
negb
add
lock
pushf
push
cli
push
in
in
shr
lods
sub
adc
mov
inc
inc
shll
push
inc
push
test
fimull
dec
adc
in
loopne
push
jne
pop
mov
aaa
adc
dec
jo
fidivrl
mov
xor
cmp
lods
jnp
pop
loop
in
lods
push
lahf
or
xor
insl
loop
loope
mov
scas
and
inc
fsubl
add
inc
dec
push
push
movsl
xchg
out
jmp
mov
ret
xchg
sbb
push
sbb
adc
and
shr
out
stos
xchg
lret
mov
sub
cmp
jmp
sarb
inc
dec
add
scas
xor
sbb
and
ret
shl
fldenv
ret
lret
push
pushf
push
pusha
mov
popf
cld
fisubrs
dec
cld
add
stos
loopne
stos
loopne
stc
psadbw
xorb
je
cmp
jnp
jne
mov
ja
pop
pop
pop
stos
push
data16
cmpsb
mov
push
cmp
cmp
insb
push
xchg
cmp
mov
test
cltd
inc
mov
lods
and
data16
xorl
mov
mov
push
sahf
in
int
movsb
xlat
sub
dec
cmp
add
add
xor
xchg
data16
mov
inc
mov
aam
out
ja
imul
and
outsl
stc
mov
sbb
cmc
add
rcrl
nop
lock
dec
ret
push
mov
lods
lock
imul
jp
pusha
pushf
jae
pop
mov
in
mov
pop
mov
fadds
aas
les
scas
and
jp
mov
pop
sbb
pop
iret
jno
popa
lcall
inc
mov
cmp
xchg
insl
cmc
xor
mov
shl
fidivs
mov
rcll
repz
cmp
icebp
out
call
push
fdivrs
push
push
mov
mov
push
jne
adc
push
xchg
into
cmp
mov
sub
test
insl
jp
fst
jo
sub
dec
jo
push
jg
dec
and
jg
insl
pop
in
add
leave
js
arpl
sahf
mov
pop
lods
add
xor
xchg
popf
jle
push
xchg
push
inc
imul
scas
dec
aas
jb
mov
pop
mov
sub
scas
rorb
lahf
jg
mov
in
fnstsw
sub
mov
in
add
jns
je
cmp
jge
dec
daa
mov
hlt
roll
stos
sub
negl
inc
pop
fsubs
add
cmp
fadd
mov
xchg
enter
rclb
jbe
xchg
mov
mov
cmpsl
or
mov
out
mov
clc
cmp
push
inc
das
sub
fdivp
mov
adc
das
sub
test
or
shll
cmp
lcall
stos
push
or
pop
mov
push
int
push
ret
lods
insb
stos
push
and
and
jae
pop
push
loop
divl
inc
sub
cwtl
mov
add
jecxz
popa
repz
mov
adc
test
iret
and
dec
pop
imul
and
mov
push
jne
sbb
lret
ljmp
or
sbb
rclb
jmp
pop
mov
mov
jne
jo
movsb
pxor
jne
and
pop
movsb
lods
mov
and
ds
mov
and
and
test
cmpsb
pop
or
scas
orb
xchg
jmp
xchg
rclb
or
xchg
pusha
outsl
insl
mov
xor
scas
add
test
sbb
movq
cmpsl
ja
lods
out
pusha
in
lea
xor
push
clc
dec
cmp
out
inc
imul
sbb
push
jle
icebp
xchg
psllw
or
int
lret
bound
pop
mov
mov
inc
or
mov
xchg
fisubrs
int
pushf
rorl
and
sarb
xchg
inc
aam
ret
xchg
cmp
inc
jp
cmpsl
mov
sbbb
and
int
xor
adc
xor
sbb
shll
add
bound
int3
lcall
jno
sub
sbb
pop
mov
fsts
sub
stos
leave
in
decl
push
mov
lds
jb
jno,pt
insl
sbb
sub
cmp
gs
mov
lret
daa
sti
sbb
xor
mov
iret
scas
xchg
stos
mov
rcrb
inc
pop
xchg
xchg
mov
jne
out
xor
jecxz
movsb
ret
icebp
xchg
add
loopne
rcl
and
push
inc
outsl
xchg
cmp
inc
popa
mov
inc
in
lods
pop
cmp
es
ret
push
dec
sbb
inc
sbb
inc
jge
mov
iret
addr16
daa
and
push
sti
in
xchg
push
adc
rolb
cmp
mov
pop
or
sahf
es
mov
stos
sub
mov
lret
shll
add
push
xor
jmp
mov
push
in
aas
in
xchg
outsb
cmp
mov
push
lea
stc
scas
sub
pop
xchg
pop
sbb
xor
add
add
push
std
andl
pop
fs
mov
pop
jle
and
xor
aad
fnsave
orl
shrb
hlt
xor
adc
enter
push
mov
dec
push
sub
xchg
pop
cmp
stos
mov
rcrb
je
sub
stc
lahf
sbb
cmp
imul
scas
or
and
xchg
repz
inc
in
cli
sub
in
xchg
xor
imul
std
sub
mov
cmp
popf
pop
sub
into
std
jae
xor
cli
loopne
sub
mov
jecxz
lahf
cld
loop
cwtl
lret
mov
jno
int3
and
push
inc
and
icebp
add
cmovs
jmp
sbb
adc
pop
push
and
adc
dec
dec
rol
sub
sahf
mov
fisubrl
inc
outsl
xchg
insb
sub
push
and
cmpsb
inc
pop
fnstcw
dec
jno
filds
adc
sub
shll
lret
mov
xchg
xchg
mov
xor
fdiv
dec
mov
cmp
add
or
or
mov
xor
mov
scas
mov
jns
xlat
sub
aaa
in
fdivrl
mov
push
out
mov
frstor
sub
ja
pop
les
sbb
aad
nop
popf
jno
cmp
lods
in
daa
enter
add
push
hlt
nop
test
scas
scas
pop
sbb
insl
loop
lcall
outsb
sub
pushf
cmp
jle
frstor
in
mov
cmp
hlt
fdivrs
mov
xor
ljmp
test
xchg
inc
lret
adc
clc
arpl
pop
jmp
loope
das
fsubrp
jmp
daa
scas
test
mov
adc
cwtl
mov
jne
adc
into
mov
cmp
jae
mov
fcompl
cmp
cltd
loopne
loop
lods
jae
cli
cs
inc
movsl
xchg
fildl
lods
jno
notl
pushf
or
mov
repz
dec
lock
incl
or
inc
sbb
adc
nop
stc
scas
push
mov
add
pop
jno
xchg
sub
xor
jo
push
sub
mov
test
xchg
sbb
mov
inc
jp
sahf
lods
push
pop
mov
and
imul
rclb
xlat
mov
adc
call
add
std
lea
fs
je
sbb
xchg
sub
inc
push
aas
lret
nop
fbld
loop
fs
das
addl
adc
je
lods
pop
aam
mov
mov
mov
bnd
mov
mov
jmp
lock
outsb
ljmp
rorb
sahf
inc
jns
push
out
and
popf
sbb
xor
inc
mov
pushf
jle
enter
add
inc
adc
cwtl
pop
push
jmp
push
jge
pop
dec
fimuls
or
mov
mov
repz
out
inc
test
or
dec
cmp
nop
jecxz
push
adc
lods
fidivrl
push
clc
push
test
test
jmp
mov
fmull
sahf
in
dec
ljmp
pop
and
fimuls
pushf
shl
push
pop
mov
dec
fdivrl
xchg
sub
ficoms
mov
inc
ss
fnstcw
out
mov
popl
loope
in
cmp
dec
jmp
fmul
fimull
fldl
out
mov
mov
or
xor
dec
in
fisttpll
ja
mov
mov
mov
repnz
adc
push
out
mov
push
dec
or
mov
call
cltd
cmp
jge
out
and
cmp
inc
dec
adcl
in
cltd
xor
inc
scas
sbbl
mov
test
cmp
mov
adc
out
adc
sbb
imul
scas
push
jb
dec
mov
xchg
sub
pop
xchg
roll
push
and
mov
mov
cmc
jmp
dec
das
ficoml
hlt
mov
mov
mov
cmp
mov
jb
cmp
or
push
mov
test
xchg
mov
cwtl
xchg
clc
xor
pushl
or
outsb
jbe
mov
scas
cmpsb
jno
sub
inc
sub
incl
fdivs
mov
into
or
adcl
add
nop
dec
out
inc
mov
cmpsl
jecxz
int3
pop
daa
pop
sbb
adc
pop
mov
out
outsb
xchg
mov
mov
insl
sahf
mov
outsb
xchg
cmc
adc
fsubp
pop
lods
into
push
push
jmp
imul
jle
or
sub
mov
mov
adc
das
mov
or
das
fwait
mov
add
adc
and
mov
xlat
xor
test
mov
ret
jecxz
xor
ljmp
scas
lret
je
repz
dec
je
xor
pushf
sub
ja
sub
out
ds
jne
dec
jae
add
jle
outsl
xor
adc
or
push
mov
mov
iret
cld
or
ds
mov
in
into
pop
pop
lret
into
jns
pop
adcb
in
cld
or
addr16
pop
add
in
dec
adc
aas
call
cmp
rcll
imul
andl
mov
lods
test
ljmp
cltd
sbb
cmp
dec
and
pusha
fwait
inc
cltd
sbb
xor
mov
xchg
rorb
fstl
pop
cmp
mov
push
push
pop
icebp
pusha
cmp
call
out
cmpsb
xchg
jno
repnz
add
pop
inc
mov
pop
jg
std
add
int
mov
mov
or
jo
cmc
cmp
imulb
xchg
js
xor
pop
mov
mov
int3
lahf
adc
repz
mov
stos
dec
push
in
jb
mov
repnz
cs
push
lahf
adc
rolb
inc
cwtl
xor
jns
and
rclb
jae
repz
jle
ficoms
and
cld
cwtl
mov
dec
scas
and
cmp
js
xchg
xchg
push
inc
fdivrl
inc
cwtl
mov
inc
mov
push
inc
dec
sub
out
adc
xor
add
pushf
inc
mov
mov
jl
push
mov
or
cs
jnp
ret
push
push
or
test
sbb
test
cwtl
cltd
xlat
or
pop
mov
jl
jl
ljmp
jle
mov
xchg
cld
divb
adcb
inc
je
outsb
dec
sub
mov
in
lret
rorl
xchg
dec
pusha
push
mov
sbb
mov
pop
xchg
pop
xchg
push
mov
mov
cmp
add
push
push
inc
jnp
loope
lret
ret
jmp
aas
jecxz
data16
jmp
sub
dec
sub
pop
add
insl
fs
sti
fmull
xchg
mov
les
repz
sbb
adc
cmp
xchg
or
xchg
repz
test
pop
inc
push
mov
js
dec
mov
push
je
lods
mov
pusha
aaa
ja
push
fcoms
aad
cli
inc
repnz
stc
jle
mov
push
adc
pop
ds
fs
icebp
inc
add
cwtl
sahf
arpl
pop
mov
ficompl
sbb
icebp
pop
xor
dec
push
inc
and
jle
adc
cmp
repz
lcall
and
sub
cmp
xlat
mov
lret
dec
cmp
hlt
xorl
in
push
repz
jo
insl
pop
inc
call
xor
add
jl
shlb
push
mov
iret
mov
test
leave
andl
jbe
or
xor
inc
pop
iret
cmp
imul
mov
insl
mulb
gs
in
cltd
cwtl
out
dec
fwait
mov
adc
push
jge
cmpsb
outsb
lods
repz
fists
jmp
mov
outsb
inc
mov
loop
sbb
scas
push
int
fldcw
jecxz
popa
lcall
sarb
mov
jg
dec
out
addr16
sbb
nop
cmpl
sti
adc
push
arpl
xchg
mov
icebp
loope
movsl
push
mov
dec
in
and
dec
loop
cmpb
and
stos
lods
int
icebp
xchg
inc
aaa
xor
adc
sub
fwait
push
lret
push
sub
mov
cltd
inc
lds
je
stos
mov
fdivl
xor
sbb
popa
add
add
fisttps
shlb
ficoml
cli
inc
dec
and
push
sbb
or
mov
mov
movsl
cli
fwait
cmp
mull
int3
aad
mov
sub
rorb
addr16
ja
inc
dec
jno
cli
lds
pop
push
xchg
jnp
mov
mov
xor
scas
mov
test
and
lds
add
clc
ds
in
xorb
sbb
dec
iret
ret
cmpsb
inc
jno
aad
cmp
repz
jmp
outsb
inc
enter
sbb
mov
dec
js
leave
shrl
test
pop
cmc
leave
jecxz
aam
mov
test
xchg
jae
mov
xchg
lods
adc
adc
cld
mov
int3
xchg
sbb
mov
cmc
or
lahf
push
scas
js
outsl
int
pusha
ret
cli
mov
push
mov
mov
aas
fs
fs
out
inc
adc
dec
mov
lret
arpl
mov
mov
sbb
sub
insb
stos
imul
adcl
or
push
xchg
pop
jno
xchg
cmpsb
jne
inc
je
jp
idivl
decb
out
sbb
push
addr16
aam
pop
mov
int3
push
xor
pushf
jg
sarb
inc
sbb
clc
cmpsb
pop
and
insl
movsb
and
dec
insb
push
cmp
iret
xchg
fdivrs
jns
and
inc
mov
in
call
push
fbstp
add
cli
push
sarl
fsubl
mov
mov
popf
fimuls
push
mov
ret
lsl
dec
sarb
push
mov
mov
fsts
aad
or
adc
and
jle
movsl
jecxz
hlt
adc
mov
xchg
pushl
pop
mov
mov
pop
pop
sbb
enter
test
and
cmp
aas
or
xchg
pop
mov
mov
jb
jl
xor
mov
gs
or
lds
sbb
addr16
xlat
neg
jnp
xchg
dec
ud1
sub
xlat
test
rorb
mov
pop
or
out
pop
cmp
jmp
daa
xor
repnz
mov
inc
dec
hlt
jge
lds
add
mov
incl
cli
sub
je
cmp
testl
mov
jns
mov
push
mov
idivb
lds
push
lock
ror
cmpl
push
fsubrs
fdivrp
fadd
das
cltd
iret
rclb
xchg
sarl
cmp
push
mov
in
cmp
loopne
jmp
pop
neg
inc
push
dec
xchg
lret
popf
popa
int3
xchg
stos
mov
iret
lea
push
insl
mov
js
or
call
xchg
fsubrl
pop
es
adc
jp
pop
or
out
sahf
inc
mov
cmp
or
roll
call
cmp
mov
fsubrs
dec
test
repnz
std
lods
lds
jb
cwtl
divl
bound
inc
add
pop
fcomps
pop
xor
rorb
imul
nop
and
jno
shlb
pop
jp
or
pop
mov
je
in
mov
orl
jnp
sti
dec
ljmp
imul
out
adcb
out
rcl
jnp
xchg
in
mov
pop
orb
mov
out
arpl
sub
sub
repz
push
icebp
in
sub
outsl
mov
rcr
movsl
mov
aas
inc
push
push
adc
sbb
pop
push
dec
rorb
test
les
or
shrl
test
dec
pop
lcall
jne
jg
clc
jnp
cli
add
and
ret
xor
xor
and
mov
pop
stc
insb
mov
outsb
adc
xor
pusha
inc
aas
jno
mov
add
add
cltd
out
mov
ret
xor
test
cld
and
icebp
popa
data16
xchg
idivb
mov
dec
mov
sbb
dec
mov
lock
js
mov
or
mov
in
pop
inc
cmp
adcb
lea
pop
les
mov
push
inc
mov
ljmp
pop
inc
or
sbb
xor
pop
jne
jae
cmpsb
movsb
movsl
ret
sbb
repz
dec
sti
popf
pop
xchg
enter
adc
hlt
pop
adc
sub
mov
add
pop
lcall
dec
mov
mov
addb
dec
fldln2
loope
cmp
rol
fbld
bound
xor
rolb
jge
loop
out
movsb
sarl
lock
push
mov
dec
xlat
or
dec
icebp
or
jne
or
loop
shrl
rcrl
popf
mov
in
inc
jnp
cmp
stos
mov
mov
xchg
jl
stos
rcrb
out
mov
popa
lods
mov
aas
scas
jmp
sbbb
jns
ds
jge
adcb
cmp
jno
int3
dec
xchg
out
fld1
sub
push
lahf
aaa
push
cmpsl
gs
out
push
jmp
and
dec
outsl
sbb
jge
out
scas
movsl
inc
mov
out
sub
adc
push
mov
jne
mov
movsl
mov
aam
dec
lret
aad
mov
xor
decl
jl
dec
test
jns
mov
popf
jb
inc
imul
fsubs
imul
push
cmp
xchg
inc
push
in
cmc
movsb
call
or
loop
mov
out
pop
cld
arpl
ret
aaa
pushf
pop
dec
aaa
inc
jecxz
xchg
sub
fcoms
out
dec
clc
inc
mov
mov
lret
sbb
xchg
pop
pop
xchg
sti
mov
shl
lret
cmpsb
push
pushl
nop
fwait
lcall
xor
adc
sahf
gs
in
jg
subb
mov
adc
mov
sbb
or
push
jle
dec
jecxz
fwait
and
xchg
push
inc
shl
inc
or
lea
call
or
ss
inc
shl
and
clc
cmp
repz
sub
mov
fdivrs
cs
sub
fdivl
gs
and
pop
sbb
out
jmp
add
jbe
ljmp
dec
enter
pop
data16
out
mov
mov
jge
cmp
sbb
fdivl
notb
sahf
loop
inc
out
outsl
inc
in
mov
in
cs
leave
mov
fimuls
xchg
cmpb
sbbb
push
push
inc
adc
ficoml
cmpsb
pop
push
push
test
idiv
xchg
cvttps2pi
xchg
in
jmp
shll
adc
dec
loopne
pop
or
pop
call
add
lcall
imul
lods
outsb
cmpsl
ret
stos
pop
out
or
sub
idivb
ss
dec
fisubrl
ret
aas
cmpsl
add
test
inc
test
imul
popf
daa
or
test
mov
cld
add
and
jnp
pushf
repnz
cltd
push
push
lea
mov
jne
ds
fisubs
ret
into
inc
or
pop
and
mov
inc
pop
jne
mov
pop
aas
out
or
and
adc
dec
cmpsb
sub
xchg
xor
ss
int
loope
ret
mov
inc
inc
ljmp
push
add
push
xchg
rcrb
inc
jg
daa
movsl
cli
sti
popa
jno
insl
aam
cld
mov
movsl
jmp
std
lcall
sbb
sub
jb
add
or
fsubp
sahf
mov
daa
mov
repz
xchg
movsl
or
shll
push
outsl
xor
mov
in
or
pop
mov
add
or
int
lret
mov
inc
test
lret
push
fisttpll
xor
mov
jge
pusha
mov
mov
mov
lods
cmp
repnz
les
aaa
xlat
shrb
dec
test
xlat
push
js
popa
cmp
ret
clc
popa
push
repnz
js
jns
mov
lea
or
jl
enter
lds
xor
fs
jecxz
lods
iret
arpl
insb
jle
cmp
mov
dec
jge
add
cltd
aas
mov
mov
out
cmpsb
fcmovnu
pop
rclb
pushf
enter
aas
test
add
push
mov
in
sub
lret
stc
lods
push
scas
sahf
lcall
dec
sub
mov
cmpsb
xor
or
push
fidivrs
cmp
or
or
xchg
cmp
ljmp
ss
mov
mov
xlat
out
movsl
inc
loopne
sbbb
ds
inc
aas
bound
into
xchg
in
aaa
inc
div
adcl
push
in
stc
xchg
fwait
movd
lods
rcll
pusha
andb
inc
sub
leave
jns
enter
and
mov
jecxz
mov
div
sahf
sub
cmp
pop
and
out
fldt
xor
in
mov
cmp
mov
xchg
xchg
clc
gs
insl
xor
jp
adc
push
push
mov
mov
jne
xchg
cwtl
decl
pop
mov
push
popa
push
arpl
js
or
bound
mov
xchg
outsl
test
push
inc
insl
mov
out
dec
push
roll
out
lea
ja
mov
mov
popa
out
ljmp
push
push
out
daa
mov
dec
ljmp
jne
sahf
gs
clc
or
push
icebp
xchg
xor
push
bound
sbb
pop
or
mov
stos
adc
mov
mov
push
movsb
rcrl
mov
out
xchg
fldl
aad
pushl
mov
mov
sbb
cld
cld
lock
lcall
xchg
fadds
adc
xlat
lret
gs
sub
and
inc
sub
arpl
dec
sub
pop
jae,pn
inc
inc
das
fistpll
mov
loope
popf
cmp
pushf
pop
filds
jmp
jl
cwtl
add
pop
stos
in
ljmp
neg
fldenv
vpsubusb
in
mov
xchg
fstl
out
cmpb
inc
cmc
push
jge
add
in
shl
and
and
jno
sub
pop
cmp
sbb
sbb
jg
lcall
xor
cmp
or
mov
cmp
les
push
daa
cld
sbb
dec
bound
mov
bound
pusha
jo
fadds
xor
sbb
and
inc
lods
sbb
jnp
or
outsl
lods
jnp
push
pop
ds
leave
hlt
pushf
xlat
jge
std
mov
dec
test
jle
aam
cwtl
pop
aas
pop
pop
nop
lcall
adcb
ss
clc
mov
test
jg
and
mov
int3
sbb
inc
movsb
pop
sub
xor
dec
sbbb
test
xchg
insb
fwait
out
lret
dec
push
enter
imul
ss
leave
add
imul
vpmovsxwq
push
add
xor
mov
push
popf
add
rorl
fsts
add
add
das
pop
mov
out
fimull
loop
ret
cmp
jnp
mov
cmc
jg,pn
sub
mov
outsl
push
xor
push
sub
dec
movsb
or
insl
inc
pushf
jmp
xchg
cmpsb
dec
xor
push
mov
xchg
xlat
dec
call
in
dec
xchg
insb
aas
pusha
adc
test
bound
add
loopne
mov
insl
insl
push
adc
mov
xor
push
cmpsb
cmp
in
or
cmp
sbbl
in
popa
push
push
and
jp
jge
data16
aam
stos
or
ds
or
jb
mov
fs
rorb
cld
push
pushf
sub
call
mov
inc
and
ret
sub
push
in
adcb
mov
jbe
shll
sub
push
cmp
stc
jbe
xor
insl
test
or
inc
sbb
lds
pop
cmpsl
fstpt
fidivrs
or
mov
sbb
cmp
adc
in
pushf
lcall
lods
scas
lock
rol
mov
push
cmp
ss
or
cmpsb
cmp
adcl
mov
xor
dec
shlb
dec
iret
inc
jecxz
xor
dec
ret
xchg
mov
testl
xchg
cmp
subl
jecxz
mov
pop
test
mov
inc
test
or
mov
jne
xor
ljmp
jl
in
or
add
sub
or
xor
add
pushf
lret
mov
cs
imul
outsl
jbe
int
imul
sub
xchg
fisubl
repz
push
mov
mov
sbb
xchg
cmc
jbe
fnstenv
push
jno
and
in
sbb
out
enter
push
pop
fs
sub
stos
fwait
xchg
and
mov
sti
scas
mov
sarb
mov
into
pop
popa
jns
je
inc
xor
xchg
or
cmc
mov
jbe
mov
fcmovnu
jp
iret
adc
cltd
sbb
jmp
inc
or
lret
jnp
jmp
stos
cmpsl
lods
bound
into
sarb
xor
push
data16
roll
lods
cmp
mov
out
das
sti
add
mov
jecxz
cmp
lock
inc
inc
stos
mov
or
in
jmp
jae
cmpsb
loop
dec
jo
xlat
gs
in
xor
stos
cli
stos
test
sub
mov
aas
xchg
and
je
sbb
push
daa
adc
sbb
arpl
mov
add
mov
pop
insl
jl
repnz
inc
xor
int
add
inc
sub
incb
js
clc
lock
jns
adc
jb
out
xchg
and
dec
ret
sub
jnp
sbb
into
sbb
mov
jae
icebp
icebp
mov
xor
inc
cmpsb
pop
movsb
pop
xchg
sub
in
push
fwait
scas
inc
out
test
sbb
mov
dec
fmulp
stos
dec
icebp
jmp
int3
stos
dec
lds
mov
cmp
int3
orl
mov
xchg
pusha
rcrl
inc
call
mov
push
insb
or
jg
xor
gs
mov
insl
gs
or
int
jle
or
cmpsb
pusha
sbb
out
fsts
jle
scas
adc
mov
or
add
andb
stc
pop
dec
int
sti
push
adcb
jne
xchg
inc
in
rclb
aaa
mov
rorb
mov
mov
aas
leave
push
test
scas
je
add
adc
aad
xor
inc
or
pop
aaa
scas
ja
pushf
inc
push
inc
jne
push
out
xchg
ljmp
out
enter
imul
cmp
movsb
mov
dec
out
test
push
gs
scas
test
mov
and
cltd
mov
scas
cmp
xchg
sbb
pop
mov
adc
adcb
or
sub
mov
cwtl
insl
xchg
gs
dec
xchg
pop
mov
sbb
inc
push
mov
arpl
mov
jno
call
imul
lret
mov
fisttpl
add
aas
or
or
jp
test
out
adc
cltd
push
shll
mov
and
add
scas
loop
xchg
or
adc
rol
jnp
pop
int3
cltd
dec
ja
or
mov
daa
ss
add
mov
push
imull
es
lahf
adc
pop
cmp
out
xchg
nop
adc
inc
mov
pop
and
push
shl
adc
out
aad
aaa
jno
xchg
das
adc
enterw
aad
js
pop
cmp
ja
dec
ss
cli
xchg
cmpsl
cmp
hlt
lahf
das
mov
insl
cmp
popl
ss
mov
adc
add
pusha
call
aam
icebp
cmc
dec
popf
loop
inc
out
popf
mov
push
or
dec
add
push
fcom
push
push
inc
repnz
mov
adc
cwtl
stos
jne
rorl
pop
jecxz
adc
out
mov
roll
cmpl
fisubl
fnsave
add
rol
adcl
mov
cld
inc
push
xchg
pop
outsb
push
or
loop
cld
cmp
cli
push
dec
pusha
into
pushf
dec
stos
pushf
imul
pop
mov
lea
or
testl
das
dec
movsl
popa
mov
cltd
ljmp
popf
xor
loopne
out
and
jnp
popf
push
test
jle
cli
add
add
push
hlt
xlat
addb
aam
addr16
enter
mov
jmp
jge
outsb
pop
enter
das
inc
push
pop
adc
mov
in
and
inc
repnz
pop
xor
mov
and
xchg
jp
mov
jecxz
sub
sbb
addb
pop
scas
arpl
repz
pop
push
sub
adc
jg
sbb
pop
rorb
stos
or
push
mov
inc
lea
pop
inc
cmc
int
ja
sbb
mov
imul
cltd
dec
xchg
xor
aas
ret
jecxz
jl
add
into
mov
adc
inc
sub
dec
mov
sahf
leave
cmpsb
in
jg
pop
sbbb
divb
push
add
mov
sbb
add
push
cs
xchg
ss
loope
sub
icebp
cld
inc
jne
sub
out
icebp
jbe,pn
mov
push
cmp
out
pusha
pusha
out
iret
mov
inc
mov
sub
pop
lcall
push
movsb
repz
les
mov
inc
push
mov
add
adc
mov
ljmp
mov
aas
es
mov
enter
adc
push
aas
pushf
lea
sbb
dec
and
sbb
mov
daa
xlat
dec
in
fisttpll
pop
cmp
bound
push
inc
push
repnz
pop
imul
rcrl
cli
or
mov
adc
dec
jp
addr16
fcomip
sbb
in
es
push
in
push
pop
push
inc
cmp
test
pushl
pop
dec
fbld
jge
ficompl
ficomps
dec
popf
mov
fwait
pop
mov
frstor
test
call
xchg
sub
and
xchg
mov
xlat
pop
adc
sub
mov
cmp
and
addps
pop
orl
cs
mov
xchg
lock
mov
test
cwtl
shl
loop
or
pop
std
dec
and
jge
das
aam
mov
cmc
dec
sub
nop/reserved
aad
add
cmp
dec
pop
movsl
xchg
out
stos
jg
insb
jnp
mov
xchg
jmp
inc
xor
clc
outsb
push
test
mov
xchg
jle
jmp
int3
jecxz
jmp
repnz
jg
or
mov
add
jne
jle
test
jbe
clc
and
push
gs
jne
mov
mull
cld
les
mov
int
insl
inc
dec
push
movsl
mov
enter
imull
pop
cmc
fisttpl
sub
clc
loope
cmpsl
mov
loopne
dec
and
lods
sub
mov
and
inc
popf
je
aaa
sbb
call
sub
dec
mov
xor
xchg
bound
scas
sub
dec
cld
das
fsubs
je
push
jae
popa
lods
emms
adc
into
dec
mov
adc
mov
push
jns
push
pusha
adc
and
dec
adc
sbbl
loop
ljmp
imul
cli
movsb
insb
sbb
imul
sub
mov
pop
lahf
mov
xchg
jb
pop
lods
lcall
ror
adc
in
push
adc
insl
jl
and
add
sbb
push
shrb
pop
repnz
mov
jnp
out
lods
fsubl
pop
ss
xchg
pop
jo
dec
jmp
shlb
fcoms
nop
sbb
jb
add
pushf
pop
mov
out
pop
adc
mov
ret
mov
dec
lret
add
rcr
scas
sbb
xlat
push
jns
loop
fstl
sbb
and
jbe
es
xchg
out
jle
cmp
ret
and
mov
inc
stos
dec
icebp
fisubrs
sub
cmp
push
inc
push
aaa
test
clc
les
stc
xchg
scas
pushf
cmp
pop
inc
mov
subl
mov
loopne
movsb
out
call
rclb
cmp
push
mov
push
ret
push
and
mov
cwtl
fiaddl
push
and
and
jbe
add
lods
int3
cltd
fprem1
jl
push
push
add
jne
adc
hlt
and
aas
adc
pop
insb
ja
daa
int3
inc
iret
lcall
and
lods
mov
test
mov
arpl
mov
call
test
lcall
xor
mov
leave
ds
mov
loope
jae
fnstenv
sbb
shlb
orl
sbbb
mov
sub
out
out
mov
std
sbb
out
mov
js
push
and
adc
dec
aad
pop
data16
into
mov
ja
ret
loope
clc
cmp
int
jle
icebp
push
fnstsw
cmp
shrl
dec
and
stos
cltd
fs
icebp
das
mov
jge
push
push
pop
cmpsb
in
pmaxub
jns
cmovp
nop
stos
adc
out
push
mov
icebp
nop
jmp
out
fs
push
aas
add
cmp
loope
lock
mull
enter
cmpsb
sub
mov
mov
adc
in
xchg
mov
popa
sbb
and
xchg
pop
loopne
mov
sub
int3
adc
hlt
lods
movsb
cmpsb
adc
mov
add
pop
cld
arpl
rorb
cwtl
add
adc
mov
ret
mov
push
fwait
mov
push
adc
gs
sub
dec
mov
ss
push
push
jnp
in
test
dec
pop
mov
dec
subb
sbb
jge
sbb
and
mov
ljmp
insl
pushf
hlt
mov
imul
mov
sub
pop
pusha
xchg
adc
lods
or
sub
orl
or
xchg
out
stc
pop
ret
aas
and
test
jmp
push
mov
xor
mov
dec
call
xchg
fs
jnp
cwtl
cmpsb
mov
and
fildl
ljmp
adc
out
sbbl
lods
or
inc
inc
jmp
outsb
mov
loope
les
jns
arpl
mov
jge
iret
jbe
xchg
sbb
cmpsl
pop
or
daa
in
in
stc
outsl
jmp
xorb
stos
clc
in
jno
mov
jbe
lahf
inc
std
rclb
push
mov
shll
push
mov
jge
pop
and
adc
push
or
cmpsb
insb
xchg
sub
cmp
out
lahf
adc
mov
cmc
ret
popa
gs
in
sarl
jbe
pop
hlt
mov
test
in
mov
stc
arpl
idivb
inc
js
ss
inc
dec
sbb
loopne
xlat
cmp
lret
pop
pop
push
and
push
jb
mov
jl
aad
sub
rcr
push
fsubrs
cmpsb
movsb
push
out
aad
andb
and
movsb
add
inc
clc
xor
mov
jge
inc
mov
testl
cltd
stos
pop
xchg
into
ljmp
and
mov
xor
jno
adc
dec
int
xor
xor
nop
les
jmp
ja
xor
push
movsb
push
cs
imul
mov
cmp
pushf
test
test
mov
lret
pusha
sub
loop
dec
xchg
xor
xor
test
xchg
clc
cmpb
shl
pop
and
push
shll
jg
push
and
pushf
mov
test
ret
push
mov
mov
cli
mov
lods
push
hlt
ficomps
adc
xor
mov
dec
or
lds
inc
in
jno
or
bound
call
cmp
or
aas
xchg
add
mov
jl
ljmp
xor
lock
push
push
mov
stc
jge
data16
imul
loop
mov
je
addr16
jecxz
testl
scas
andb
lcall
lret
mov
inc
push
in
sbb
out
pop
jg
add
xchg
dec
arpl
mov
mov
ficoml
sbb
insl
cmp
sbb
cmpsl
ss
jne
out
jge
cmpsb
adc
inc
cmp
loop
loope
xorl
xor
imul
push
lea
rol
and
mov
fcoms
insb
jl
sbb
sbb
mov
pop
test
dec
mov
ja
jmp
in
fwait
int
xlat
mov
jae
or
fcom
sbb
inc
jmp
insb
dec
cmp
sub
mov
jb
mov
inc
sbb
sahf
pusha
pop
call
fistps
pop
ss
iret
out
fistpll
jcxz
repz
imul
sti
cltd
pop
fidivrl
xor
xchg
adc
iret
add
or
mov
out
dec
arpl
in
movsb
jp
and
aam
rclb
mov
insl
dec
mov
and
faddp
mov
mov
repnz
mov
sub
cli
in
jl
push
dec
into
bound
and
int3
or
add
shl
ja
in
lea
mov
fmuls
jge
jnp
mov
jge
fstpt
push
xor
or
or
out
in
shrb
fnsave
push
pop
std
dec
and
mov
dec
mov
sub
test
cmc
fdivl
test
sbb
pop
gs
dec
sbb
dec
add
fdivl
sub
int
shlb
push
adc
out
inc
je
xchg
jmp
jmp
ret
inc
push
push
sub
dec
inc
arpl
cli
cwtl
outsb
adc
push
cli
push
dec
test
add
adc
pop
test
lret
inc
sbbl
xor
xor
cmp
bound
es
cwtl
sbb
call
cld
aam
rorl
clc
jmp
in
jae
bound
fmul
cmp
test
icebp
adc
mov
jns
fsubs
enter
xchg
jecxz
aad
push
jp
div
test
mov
pop
out
jb
test
mov
sub
adc
push
sahf
lahf
imul
push
cmp
loopne
push
adc
dec
rcrl
pop
lahf
jnp
fistps
jnp
fcmovnu
scas
ds
test
scas
cmc
jp
test
sbb
sub
lds
clc
pop
pop
and
sbb
sahf
sbb
shrl
xor
leave
mov
int3
xor
xchg
gs
fxch
rcll
inc
or
adc
sarl
dec
repnz
add
xchg
insb
mov
cli
mov
or
dec
adc
add
mov
jo
les
inc
mov
aas
xor
scas
icebp
aad
add
inc
pop
mov
cld
push
popa
xchg
adc
jmp
adc
and
lods
imul
fimuls
or
fdiv
jmp
dec
pop
pop
scas
xor
ret
out
and
jle
xor
add
out
mov
in
cwtl
stos
hlt
and
fcoms
test
lret
mov
stos
push
jno
jae
xlat
popf
loope
aam
lods
pop
hlt
mov
and
add
insb
inc
sbb
or
jns
push
out
fisttpl
pop
cs
and
test
lds
mov
mov
in
stos
bound
aas
outsl
xchg
or
add
enter
adc
pushf
jmp
mov
or
js
mov
fldt
mov
nop
call
ljmp
clc
xchg
adc
pop
jg
sbb
jae
ljmp
and
push
mov
fistpl
and
or
push
mov
lock
xorb
jl
test
add
outsb
daa
adc
pop
mov
fnstsw
stc
icebp
sub
mov
icebp
add
cmp
inc
xchg
clc
mov
and
test
xchg
fs
inc
mov
jl
fwait
data16
ret
sahf
or
insl
xchg
or
xor
mov
mov
fstl
jo
jb
inc
out
mov
lods
add
mov
or
sub
pop
divb
aad
fistpl
cmp
lods
aam
ljmp
cmc
sub
push
mov
lods
sub
xchg
outsl
out
inc
sub
out
movsl
mov
imul
pop
testb
add
adc
movsb
xchg
push
lea
sub
aaa
ds
addl
mov
inc
jmp
mulb
ljmp
mov
or
cmp
fiaddl
sti
xor
addr16
in
fisubl
inc
mov
adc
rcrl
mov
aad
sbb
or
in
sbb
mov
mov
cmp
mov
adc
inc
mov
loopne
fadds
hlt
movsb
inc
dec
fidivrs
call
mov
je
mov
pop
mov
jnp
jmp
shlb
pop
push
or
sbb
stos
dec
repz
cltd
rcl
xchg
ss
push
test
push
nop
xorl
push
mov
adc
xchg
loopne
push
scas
es
push
or
divl
imul
mov
popf
ljmp
fdivl
cmp
popa
lret
mov
mov
and
pop
mov
ds
orb
lea
jo
push
insl
xchg
aaa
sahf
jns
fcoms
adc
jl
push
and
aaa
jl
out
mov
mov
or
jge
lds
adc
xchg
data16
xlat
jo
mov
sub
pop
mov
lahf
adc
cmpsl
fnstenv
push
fisubrs
dec
les
cmpsb
xlat
loop
or
jae
mov
and
ficoml
jae
adc
dec
xchg
mov
pop
lds
sbb
mov
mov
shrb
cmpb
jmp
and
movsb
rolb
inc
mov
les
inc
pop
call
pop
sub
insb
add
sub
dec
pushf
and
icebp
lods
sar
jmp
sub
jp
out
out
call
sti
sbb
dec
inc
or
lcall
fwait
jne
lock
dec
ret
push
dec
cmp
adc
add
inc
mov
je
outsb
leave
das
sub
shl
out
sub
lret
test
mov
cltd
aaa
test
mov
push
je
aaa
enter
and
pop
cmpsb
insl
out
repz
jns
push
dec
mov
cmc
push
sub
pop
out
aas
frstor
jl
fcompl
push
add
inc
xchg
cmc
xor
push
pushf
pop
sub
ficomps
jecxz
jns
mov
adc
aaa
mov
push
inc
lcall
mov
fstl
lds
in
dec
lods
add
test
fstps
sahf
mov
and
aam
scas
or
in
dec
lcall
negb
sbb
insl
cld
scas
dec
push
in
push
push
jne
in
sbb
aam
sarl
push
pop
call
cli
adcl
cmp
jmp
xchg
pop
aam
push
shrb
xor
mov
cmpsl
mov
mov
and
mov
xchg
inc
clc
pop
cmpsl
adc
mov
push
cmp
mov
or
sub
test
aaa
jno
sub
inc
loopne
jne
js
mov
adc
cli
sub
mov
xchg
outsb
popa
test
adc
loop
pop
push
pop
cmp
je
push
sub
xchg
shll
and
ficompl
pop
pop
lret
jno
xchg
sub
psrad
mov
shrl
pop
es
and
test
push
add
popl
jnp
insb
jne
mov
mov
fidivl
inc
lock
add
aaa
dec
int
lods
imul
js
ljmp
and
sub
cmp
pop
lock
lods
fcomps
xor
dec
sub
lock
xchg
into
pop
mov
adc
mov
int3
jo
mov
scas
sub
ret
cs
cld
push
pop
inc
inc
dec
jge
xor
xor
adc
loop,pt
aas
pop
dec
imulb
std
sbb
lock
cmp
dec
cmpsl
ret
push
sti
sbb
mov
and
pop
pusha
aam
repz
pop
xor
pop
mov
dec
ja
test
pushfw
push
clc
int3
fstpl
aaa
stos
sbbl
xchg
pop
pop
jmp
int3
xchg
pop
xchg
enter
loope
adc
adc
xor
data16
add
mov
push
push
movl
mov
sahf
cli
fwait
xor
ss
imul
sarl
mov
cmp
pop
stos
mov
out
dec
pop
pop
and
xor
cltd
jno
mov
xchg
test
dec
cmpb
call
push
and
xchg
xor
je
mov
aaa
mov
xchg
lea
cmpsl
mov
icebp
jae
fidivs
pop
rcll
mov
xchg
fincstp
xchg
mov
jp
mov
shlb
inc
add
ja
sbbb
add
sbb
or
mov
mov
insl
fisubs
js
pop
ds
repnz
out
test
and
inc
imul
dec
dec
test
push
int
out
dec
enter
dec
adcb
ja
mov
and
xchg
js
jno
out
push
xor
xchg
add
inc
fcoml
xchg
push
sbb
xor
adc
dec
stos
inc
mov
ds
jg
mov
scas
pushf
lret
insb
mov
sub
cltd
in
inc
movl
andb
sbb
mov
jl
ja
inc
mov
inc
into
jno
rcrb
mov
fadds
jae
insl
ljmp
xchg
xchg
stos
mov
inc
and
or
push
and
or
loop
mov
ljmp
stos
popf
sub
out
jo
dec
mov
in
je
out
xor
popf
and
xor
mov
outsb
scas
fs
mov
inc
cmpl
and
or
fwait
xor
aad
mov
cltd
mov
loopne
int
mov
aad
popl
inc
adc
test
out
push
cli
sbb
div
cmc
rcll
cmpsb
mov
test
rcl
xor
sbb
inc
push
and
pop
mov
into
cwtl
es
cmc
mov
testl
imul
sarl
jb
xchg
mov
nop
in
jbe
pop
add
cmp
sti
push
mov
xchg
ja
jecxz
push
or
sti
adc
push
sbb
mov
arpl
subb
jbe
dec
pop
jl
subb
insl
jecxz
ljmp
cltd
sbbb
add
imul
or
movsb
call
rcl
cmp
jl
out
jecxz
xchg
inc
bound
test
xchg
mov
xchg
jno
gs
jbe
pusha
subb
sbb
shr
jmp
lret
decb
cmp
fnsave
mov
xchg
ret
jp
popf
add
sbb
rcrl
int3
shlb
dec
repz
repz
mov
lret
sub
or
cmp
mov
sbb
addl
lret
ficoml
loop
xor
mov
mov
add
scas
in
es
fcompl
mov
mov
sub
xchg
dec
pusha
and
xor
add
cmp
mov
aad
and
pop
and
sbb
dec
ljmp
lret
xor
sysenter
xor
pop
ja
rcl
adcl
xchg
xor
enter
std
jnp
xchg
cltd
inc
or
dec
sub
sbb
pushf
xor
inc
mov
or
xchg
pop
icebp
pop
pop
jg
jle
add
and
es
adc
sbb
popa
inc
arpl
repz
inc
pop
pushf
out
faddl
jo
data16
inc
adc
mov
mov
mov
mov
test
rorl
cmp
imul
or
fcom
call
repnz
sub
dec
mov
rol
mov
aas
ret
mov
jae
mov
in
int3
xchg
out
add
stc
push
sbb
int
shl
pop
jmp
dec
popf
cmpxchg
inc
push
cwtl
repz
xor
lahf
sub
sub
add
gs
pop
xchg
inc
jge
imul
in
fucomi
adc
sbb
into
pop
jne
lahf
es
sbb
insl
mov
dec
sahf
ret
aad
adc
add
lea
mov
cmpsb
vcvtps2pd
mov
cmpsl
push
fcomp
add
movsl
insb
adc
xlat
xchg
inc
jnp
loope
and
mov
popa
daa
into
jns
lods
pushl
sub
or
hlt
pop
jmp
ret
xor
int
add
bound
adc
clc
mov
cwtl
push
fistpl
mov
dec
add
push
test
mov
jbe
mov
test
push
or
sbbb
dec
addb
mov
sbb
adc
mov
std
aam
jno
aad
insb
pushf
push
das
xlat
aaa
and
push
dec
jle
mov
enter
pushf
es
cmp
jnp
popf
xor
sub
std
xchg
adc
daa
ret
xchg
imul
cmp
xchg
es
push
mov
in
mov
jge
je
jg
fimuls
outsb
neg
lret
xchg
inc
add
inc
int3
mov
jmp
iret
pusha
stc
test
insb
and
inc
sub
out
lea
mov
divb
xchg
cmpsl
hlt
test
mov
insb
js
jl
hlt
push
popa
cmp
cmp
push
mov
inc
or
mov
lret
xchg
dec
adc
subb
push
int
iret
inc
int3
lods
cmp
push
push
inc
jp
in
push
add
mov
push
or
rcrb
jmp
fldcw
push
push
sahf
testb
in
mov
mov
xor
les
decl
cld
lock
sbb
sub
addr16
cmp
xchg
in
cltd
or
orb
dec
lods
sub
bound
or
mov
repnz
orl
cmp
sahf
popa
cli
aas
pop
sub
xor
repnz
mov
mov
mov
inc
mov
cmp
ss
mov
mov
insb
xchg
add
inc
dec
or
sub
jle
mov
jmp
fs
fldcw
negl
cmpsb
mov
hlt
das
mov
or
mov
xor
loopne
cmp
mov
clc
fisubl
jp
inc
sahf
cwtl
jge
add
inc
shl
es
repnz
pop
adc
clc
mov
les
inc
cmp
dec
cltd
xchg
push
mov
jbe
pop
mov
mov
xchg
scas
loopne
mov
rclb
mov
test
xor
popa
fs
hlt
cmp
lods
or
or
subl
ljmp
xchg
cmpsl
lret
imulb
jne
in
cmp
ficomps
mov
push
out
xor
pusha
sub
push
into
cmp
jecxz
or
shrb
popf
stos
mov
xchg
in
cmc
jns
add
inc
call
dec
ss
pop
inc
fidivs
fbld
lock
dec
fwait
ljmp
aaa
and
lcall
jno
jb
stos
ds
es
add
cmpsl
push
imul
arpl
iret
mov
leave
dec
add
add
sub
cs
mov
insb
jmp
sahf
cmpsb
adc
or
cld
es
je
and
lret
and
insl
out
mov
jne
sbbl
mov
xor
xor
mov
emms
ss
mov
add
fsubrl
xor
mov
and
gs
xor
push
ss
movsl
fdivrl
outsl
out
push
jmp
fstpl
xchg
push
xchg
mov
int3
or
sahf
mov
sti
dec
loopne
cmova
rcll
frstor
out
addr16
das
inc
mov
xchg
dec
push
push
pop
ja
and
mov
pop
cmp
mov
inc
sub
test
jnp
or
cwtl
push
jmp
mov
dec
and
jge
jae
inc
and
dec
push
mov
push
outsb
dec
xchg
pop
mov
jmp
mov
pusha
int
mov
cmp
insl
cwtl
and
lret
aam
pop
lahf
pop
inc
add
mov
or
jae
in
mov
jns
aaa
lret
fucom
mov
sbb
sbb
subps
fsubr
xor
dec
fistl
pop
add
gs
push
mov
push
es
xchg
xchg
aas
push
aaa
lods
push
popf
movsb
and
std
jmp
loop
ds
pop
scas
ljmp
andb
mov
inc
es
sbb
cmp
pusha
jae
adc
outsb
movsl
mov
xchg
lret
pushf
in
dec
push
pop
mov
xchg
jl
and
fwait
nop
pop
cmc
mov
lock
fisttps
shrl
loope
aas
mov
push
mov
in
mov
test
add
xchg
push
rolb
sub
inc
out
shrb
ficoml
push
dec
push
rorb
add
xorb
push
cld
cmp
push
mov
push
fs
dec
jg
adc
data16
xchg
xchg
call
out
data16
out
lahf
stos
insl
adc
test
mov
aad
insb
mov
mov
sbbl
mov
xor
cmp
into
stos
scas
or
adc
cld
dec
xchg
ret
push
add
push
outsl
push
out
and
mov
jo
aad
jne
mov
lret
push
sti
pop
or
xchg
int
pop
push
lahf
and
inc
sbb
pop
test
loope
shrb
or
out
jl
shl
push
pop
arpl
enter
mov
dec
cmc
xlat
inc
popa
xor
int3
cwtl
inc
in
inc
fadds
pop
cmp
call
faddl
fidivrs
mov
stos
sbb
pusha
nop
lea
cmpsl
jns
das
push
clc
mov
or
mov
aad
loope
jbe
in
lahf
rcrl
shlb
mov
test
mov
fs
pop
int3
push
test
sbb
stos
adc
push
movsl
sub
orl
mov
lret
sbbl
popa
xor
aaa
fdivrp
addb
in
xorb
lcall
clc
cmc
adc
cmpsl
cmp
pop
stos
repnz
jo
orl
sub
dec
ljmp
pop
aas
mov
ss
sbb
aas
xchg
in
pop
dec
sub
cmp
and
mov
xchg
dec
xchg
adc
mov
xor
mov
mov
xchg
xor
xchg
jbe
jg
push
adc
sub
aaa
mov
push
div
jp,pn
inc
cli
add
pop
leave
out
mull
fwait
or
jmp
jbe
jg
adc
xchg
xor
and
cmp
push
mov
mov
mov
mov
mov
rolb
cmc
in
mov
out
fcmovnb
popf
scas
dec
adc
lea
dec
shl
movsl
nop
test
pop
push
or
jbe
and
pusha
xor
repnz
and
xchg
jne
enter
jg
mov
in
mov
dec
outsb
add
jnp
lcall
ja
mov
push
xor
out
cwtl
mov
ds
xlat
std
mov
sahf
int
nop
test
dec
loope
add
add
xchg
pop
nop
inc
or
sarb
push
and
adc
push
leave
dec
enter
push
sarb
nop
jp
test
popf
mov
ret
lock
push
inc
push
mov
cs
ret
sub
pop
inc
xchg
mov
xchg
sar
cmp
aaa
push
xlat
pop
addl
test
les
negl
popf
cwtl
jns
test
cmp
int
test
gs
xchg
jns
or
fsubl
sub
push
sbb
and
cmp
subb
int
pop
jle
sti
mov
push
in
pop
or
stc
rorl
jae
loope
cmp
xchg
pop
testl
adc
out
xlat
loope
mov
xchg
sub
adc
push
nop
es
jle
mov
sub
sub
inc
pop
sbb
cld
aas
lret
or
fsubr
dec
mov
insl
je
lods
add
jmp
or
mov
or
add
pop
mov
inc
movsb
jle
stos
cmpsb
xchg
mov
pop
fistps
mov
ss
mov
divl
mov
ret
call
cmp
or
mov
andb
inc
lods
ja
mov
cmpsl
sahf
pop
jno
mov
lcall
or
sub
pop
pop
cli
es
and
scas
aaa
mov
lret
rcll
add
xlat
sbb
cmp
and
mov
adc
popl
fs
sub
cwtl
fs
enter
ret
cmp
mov
cmpsb
sub
scas
das
ret
aam
std
cmpsl
mov
sub
pushf
dec
or
iret
mov
adc
adc
inc
mov
lret
bound
movsb
rcrb
xchg
adc
in
enter
mov
repnz
in
xchg
or
sbb
cmpsb
ss
or
dec
xor
sbb
int
int3
inc
insl
inc
inc
mov
jl
jns
pop
adc
dec
jmp
ljmp
fstpt
fimull
std
pop
les
mov
adc
icebp
sbb
mov
mov
push
push
xchg
insl
sub
xchg
or
stos
pushf
xchg
js
mov
mov
pop
or
int3
scas
mull
movsb
fbld
sbb
scas
push
sub
test
xchg
sub
popa
shll
dec
add
mov
out
shll
xchg
in
mov
mov
adc
jp
and
sar
inc
jmp
out
push
pop
rol
dec
push
sbb
fstl
pop
xchg
sbb
fisubrl
and
pushf
mov
outsl
and
movl
rcll
int3
xchg
ret
loop
jae
and
jg
das
leave
mov
mov
dec
push
xchg
xor
mov
sub
adc
xor
outsb
enter
fidivrs
mov
or
mov
and
pop
xchg
add
lock
dec
sub
and
jns
sbb
add
imul
adc
mov
push
and
and
cs
mov
mov
aad
test
call
and
xchg
jb
xchg
and
inc
adc
cs
and
xchg
pushf
cmpsl
loopne
jno
xchg
mov
cltd
hlt
lods
test
inc
movsl
xor
out
mov
imul
stc
jns
aam
clc
loopne
stos
rorl
cld
mov
mov
adc
fwait
xlat
or
jg
popa
cmp
pop
cwtl
test
jg
dec
fs
out
jmp
pop
lcall
pop
and
fwait
push
sti
mov
movsl
ficoms
pop
cmp
mov
dec
dec
cmpsb
sbb
sbb
les
je
clc
test
cmpsb
cmpsb
ret
jg
pop
adc
pusha
negl
lcall
cs
cs
xchg
adc
hlt
pushf
push
jge
pushf
mov
pushf
shrl
mov
lock
mov
mov
cmp
outsb
das
out
nop
xlat
inc
lahf
popa
ret
out
sub
pop
adc
les
lea
or
and
pop
sbb
addr16
std
mov
into
std
xchg
add
pop
dec
sti
lcall
sbb
pop
jge
popf
add
sub
push
repnz
out
inc
inc
cli
loop
cld
mov
dec
in
and
hlt
push
inc
mov
ret
out
fiadds
test
iret
loop
fldl
stos
in
push
in
mov
call
fsts
mov
sub
dec
aam
fwait
std
int3
in
xor
cmp
rcrl
mov
repz
xor
test
push
stos
jae
mov
add
ja
inc
lret
aam
shll
mov
in
notb
orb
shll
fs
mov
cmpsb
aad
mov
scas
lea
inc
jge
test
or
fadds
xor
rcll
icebp
insl
dec
push
pop
inc
mov
push
xchg
mov
iret
sbb
sahf
xor
inc
sbbl
adc
out
xor
mov
inc
sti
popa
jno
jo
inc
and
lahf
pop
in
sti
inc
je
jl
mov
jo
jnp
mov
cmp
xor
popf
popf
ja
rclb
jmp
ljmp
pushf
mov
pop
arpl
mov
outsl
mov
jno
mov
sub
mov
adc
dec
scas
jb
insl
xchg
or
cmp
int3
outsb
mov
repnz
in
push
push
mov
pop
in
mov
in
stos
scas
or
loope
push
inc
ss
arpl
bound
mov
adc
imul
jbe
xchg
ljmp
ret
xlat
mov
inc
icebp
cs
jo
jg
aad
movsl
ja
test
pop
sub
cmp
test
mov
mov
jmp
xchg
mov
xchg
clc
rclb
test
lahf
leave
rcrl
outsb
xor
or
dec
cwtl
or
add
nop
adc
sbb
sub
mov
fcompl
ret
adc
jnp
xor
bound
cli
shrb
push
rcrl
fwait
xor
push
mov
xchg
cmp
ret
xchg
mov
outsl
lea
hlt
ret
jne
and
xchg
sbb
in
loope
mov
sub
fs
fsts
scas
xchg
stos
and
rcrl
sub
cmp
call
or
mov
push
push
mov
sub
jnp
sbb
notb
add
pop
dec
loope
xor
mov
inc
leave
push
jno
cs
jne
outsb
and
fiaddl
xor
xchg
xor
insl
aam
xchg
xchg
mov
push
lcall
add
inc
out
mov
xchg
subb
movsl
push
clc
add
lahf
xor
jno
adc
mov
repz
xchg
dec
xor
pop
sub
mov
jns
outsb
xor
inc
add
arpl
add
jecxz
mov
sarl
adc
sub
mov
cmpsl
daa
adc
jle
inc
jnp
mov
mov
loop
cli
fisttps
pop
adc
daa
xchg
lcall
mov
stc
hlt
lret
outsl
sbb
dec
sahf
daa
fs
aaa
mov
movsb
pusha
jge
xchg
jmp
dec
inc
pop
mov
leave
dec
xor
lds
jle
xorl
cmc
add
cmp
inc
mov
inc
lcall
cld
fisttps
loop
scas
rcrl
sbb
mov
out
xchg
out
fadds
pop
and
inc
mov
mov
cmp
sub
sbb
mov
xchg
iret
stos
xchg
js
mov
jae
or
test
adc
jno
push
or
push
add
dec
fnsave
xchg
outsb
fstpt
rorl
pop
push
enter
cmp
mov
inc
loopne
stos
and
jl
inc
ss
adc
inc
lods
dec
cmc
xor
cltd
icebp
lahf
stc
jle
test
scas
insl
fsubrp
jge
jbe
jmp
lods
in
adc
lcall
xchg
add
scas
add
into
addr16
push
mov
mov
aaa
or
movsb
insb
repnz
std
push
enter
loopne
in
xchg
repnz
xor
push
mov
shrl
stos
int3
rolb
fisubrl
enter
mov
mov
ljmp
ja
fld1
or
jmp
pop
cs
push
imul
mov
mov
popa
shll
dec
js
cwtl
loopne
pop
and
pusha
pop
xlat
cmpsl
rcll
adc
hlt
repnz
ret
jle
lret
jmp
pushf
scas
dec
push
push
pop
cli
fadds
push
pop
movsb
mov
dec
cld
xor
sahf
cltd
pop
adc
test
mov
jg
in
lock
insl
dec
popf
insl
cmc
lods
lock
sub
scas
dec
lret
addb
out
dec
and
imul
rclb
pop
jne
enter
addr16
mov
fstpt
mull
sub
pop
daa
push
dec
push
hlt
js
andb
cwtl
imul
repnz
int
lret
in
dec
pop
jmp
lods
js
push
aam
clc
add
cmpsb
out
dec
jle
sub
shll
rcr
cs
mov
rcrl
scas
dec
sub
dec
inc
repz
mov
scas
mov
jno
mov
ficomps
scas
cmp
adcl
into
mov
data16
data16
setbe
daa
xlat
and
mov
push
push
mov
mov
icebp
cmpsb
jl
sub
cmp
dec
or
inc
enter
xchg
xchg
sub
movsb
fnsave
jae
mov
mov
pop
push
mov
andb
pusha
fstpl
jo
fmul
bound
movsb
cmp
dec
or
blcfill
xchg
sub
aam
lods
int
xor
mov
or
dec
out
aas
mov
popa
lods
or
fwait
call
or
jns
es
adc
lea
lret
imul
shr
mov
sub
std
imul
in
xchg
or
jnp
clc
mov
cmp
mov
aaa
sbb
sub
sub
cmpsl
pop
xor
xchg
into
popf
dec
cmp
sub
sbb
ret
or
mov
jmp
cmp
cs
in
add
and
je
add
sti
aad
je
mov
xchg
push
aas
mov
cmpsb
scas
mov
arpl
xor
les
and
cmc
testl
jp
push
fldl
adc
cmp
je
neg
cmp
test
mov
subl
or
mov
inc
test
mov
fdivrl
divl
xor
rclb
jmp
sbb
imul
out
mov
pop
nop
xor
xchg
cmp
xchg
inc
aad
pcmpgtw
aaa
inc
inc
sbb
outsl
pop
incl
popf
les
cli
push
pop
fwait
bound
testb
push
jbe
or
mov
gs
cmp
sbb
bound
xor
shll
imul
cmpsl
imul
xchg
push
dec
pop
push
xor
cmp
loope
lcall
imul
jp
dec
subb
mov
dec
jns
movsl
sub
je
and
add
or
mov
sub
jae
mov
pop
shlb
out
jnp
bound
ljmp
mov
jno
add
dec
lret
or
arpl
ret
and
aad
or
sbb
sub
das
mov
ficomps
scas
call
leave
xor
inc
roll
and
adc
xchg
mov
pop
xchg
adc
rorb
xchg
push
aas
xlat
dec
clc
out
shll
mov
mov
mov
iret
inc
addr16
add
xacquire
inc
std
test
cmpl
inc
js
cmp
inc
xchg
sbb
aaa
movsb
test
sub
out
adc
adc
mov
cwtl
out
push
add
nop
int
fiadds
add
and
shr
cmp
sub
sti
imul
push
sbb
into
lods
repz
outsb
sub
hlt
jmp
dec
dec
xor
ljmp
lahf
pop
in
fbld
jno
in
jno
fwait
addr16
out
sbb
mov
mov
call
fyl2xp1
imul
and
cmp
and
push
shll
insl
lock
jb
ljmp
inc
sub
mov
fldcw
jmp
cltd
in
mov
in
or
loopne
lea
or
cmp
lcall
mov
sti
push
lret
inc
lcall
adc
mov
mov
lea
pop
jmp
mov
or
add
lock
inc
shl
dec
lods
gs
mov
mov
sub
adc
sub
movsl
sbb
jns
lahf
cmpsb
push
cli
mov
or
inc
jb
idivl
add
add
repnz
fwait
sub
rcrl
jmp
call
push
mov
repz
lret
xor
insl
ds
ljmp
or
test
shlb
leave
test
dec
adc
pextrw
mov
and
aas
repz
fldt
xchg
add
notl
push
add
roll
inc
dec
in
filds
pop
jnp
fbstp
xchg
jns
cwtl
cmp
add
cli
aaa
cltd
ficomps
and
ljmp
sub
jle
imul
adc
loope
sub
xor
ja
enter
push
stc
push
or
les
mov
iret
pop
push
jge
or
jle
bnd
test
lahf
cmp
lret
sbb
test
adc
jecxz
dec
jmp
jno
cmp
jne
in
jge
dec
cmc
push
jmp
sub
out
lea
cmpsb
fwait
push
pop
std
cmp
or
shr
jo
mov
or
in
in
or
lods
popf
inc
jle
in
jae
xchg
pusha
jp
clc
add
fidivl
adc
jmp
push
jns
xchg
fldl2t
mov
enter
mov
xchg
sub
insb
mov
xchg
es
sbbl
sbb
test
or
or
jb
test
cmp
jo
mov
push
jno
mov
xor
pushf
pop
aaa
dec
add
jmp
cmp
or
ss
sbb
out
fldenv
call
sti
jg
subb
mov
int3
test
pop
jp
xor
lock
push
stos
push
mov
je
xor
pop
xor
and
lahf
test
insl
sub
xor
outsl
es
sub
cmpsb
das
jl
out
cmp
sahf
or
sbb
jbe
ljmp
dec
push
in
cltd
sub
xor
lods
pop
leave
das
adc
fnstsw
inc
in
test
mov
pop
ljmp
dec
enter
iret
adc
mov
outsb
and
jae
insl
and
fsub
jg
js
out
in
jns
out
loopne
shlb
push
and
sub
jns
mov
mov
pop
jo
sbb
in
mov
xorb
fisttpll
add
lea
gs
mov
pop
mov
or
lret
cltd
push
sbb
fists
lret
add
or
clc
idivb
ss
lods
or
and
push
sub
pop
test
lods
out
sbb
add
push
rorl
stc
mov
jne
jb
loope
test
das
popa
popf
jno
sub
hlt
push
lret
cmp
lods
add
push
in
aaa
fdivrs
cmpb
das
frstor
js
imul
ja
decl
aas
mov
lock
insb
add
inc
pop
icebp
pop
shrb
sbb
insb
neg
enter
mov
lods
mov
mov
push
inc
sahf
mov
cmp
cmp
mov
lods
jbe
test
mov
mov
add
cmpsl
cltd
push
cwtl
mov
mov
repz
in
psrad
jle
fnstsw
fstl
sbb
mov
dec
cmp
pushf
jns
idivb
dec
xor
sub
mov
add
leave
jmp
pop
pop
and
cld
xor
cmp
popa
push
in
sahf
add
and
pusha
scas
pop
dec
mov
repnz
mov
popa
dec
mov
inc
dec
lods
xorb
jbe
sbb
xchg
sbb
ljmp
rcll
iret
mov
sub
push
sbb
lret
outsb
sbb
dec
mov
cmc
popf
mov
clc
dec
cli
dec
jp
xchg
jno
ss
sbb
lea
push
imul
mov
inc
ret
xchg
cmp
adc
lcall
out
gs
fldenv
decl
mov
mov
mov
or
lods
mov
push
lods
ss
sub
scas
ss
js
dec
push
push
mov
mov
push
jmp
sub
ret
negl
cs
out
lcall
fwait
cld
push
mov
xchg
inc
mov
orb
push
jl
cmp
xor
jl
ds
fadds
sub
xlat
cld
ljmp
sub
gs
movsb
into
out
fiadds
fcoml
or
repnz
mov
ret
lea
jecxz
mov
add
lcall
inc
sub
jecxz
pop
outsb
stos
or
stc
mov
push
cmpsb
lcall
mov
jns
dec
movsw
add
mov
xor
stc
or
push
jle
lahf
cmp
cwtl
lret
aam
ja
stos
testb
in
mov
inc
fcmovu
lahf
adc
mov
sar
jno
mov
mov
sub
pop
shr
jno
cmpsb
ja
mov
shlb
ja
pop
cmp
adc
ficoml
scas
mov
leave
sub
xor
jmp
mov
lds
mov
test
int
pop
ja
xor
mov
and
dec
dec
push
push
outsb
jg
push
loopne
fnsave
lcall
cli
movsl
pop
into
sbb
hlt
dec
sub
fpatan
mov
mov
xor
gs
cmc
mov
cli
loopne
or
sbb
sbb
outsl
lods
jae
pop
jge
fists
ja,pt
in
push
pop
lock
ss
cmp
xchg
ret
sbb
add
sub
mov
mov
ficomps
sub
or
mov
inc
mov
add
dec
inc
rcrw
push
push
xlat
test
or
lods
pop
mov
xor
xor
sub
push
xchg
fistpll
pop
mov
fwait
cltd
andl
push
adc
loop
add
sbb
xlat
adc
mov
jae
mov
aam
jbe
es
add
insb
mov
jne
xor
loop
jmp
push
fisubs
pushf
pop
arpl
push
test
sbb
aaa
pop
orb
sbb
cmp
dec
mov
pop
mov
cmp
pop
add
lret
jnp
lds
jnp
cmp
mov
sbb
or
std
aas
mov
and
or
mov
mov
gs
bound
lods
out
adc
add
ss
shll
fsubl
sub
out
insb
jg
push
inc
cltd
inc
inc
cld
in
cmp
sbb
fdivrl
inc
scas
add
or
pop
or
mov
add
lret
lea
daa
add
bound
insl
arpl
mov
aad
out
sbb
dec
stc
into
jo
pop
inc
sub
nop
stc
inc
push
shrl
inc
cmp
lea
out
jno
hlt
jge
push
or
jl
mov
clc
sub
aaa
repz
pop
xchg
sub
call
pop
repnz
add
mov
rcrl
dec
xchg
jmp
scas
fcomi
outsb
mov
xchg
xchg
mov
mov
jne
aad
or
add
insb
addl
int
punpcklbw
rorb
sahf
mov
pop
push
lret
into
sub
add
lret
add
mov
sub
xor
pop
mov
xchg
mov
je
dec
inc
adc
clc
mov
xor
std
int
jmp
or
insl
stc
pusha
xchg
imul
push
fmull
lds
lods
inc
and
cmp
xchg
adc
push
add
xchg
sahf
aas
pop
insl
mov
mov
and
dec
add
int3
mov
sarl
ljmp
out
xor
push
sub
mov
shlb
ljmp
pushl
xchg
outsb
pop
push
jb
push
ja
mov
call
mov
push
out
jecxz
jb
pusha
decl
cli
setle
dec
pusha
sbb
mov
mov
xchg
and
inc
subl
out
cmp
mov
jecxz
in
jo
cmc
ss
lea
shll
or
fsubrs
popf
sbb
adc
ret
js
mov
pop
repz
call
jge
xchg
cwtl
mov
inc
fistl
cmp
or
inc
icebp
hlt
mov
adc
and
push
sbb
push
mov
sbbl
and
mulb
orb
xchg
and
loope
lahf
iret
jb
rolb
dec
stos
push
xchg
xchg
popf
mov
xchg
fmuls
movsb
jmp
fstpt
sbbb
sbb
and
xchg
push
and
xor
jle
mov
dec
pop
mov
adc
loop
mov
addr16
pop
pop
imul
mov
sbb
imulb
fmuls
jp
aas
repz
jb
mov
adc
aaa
or
add
movsl
fildll
dec
out
pop
cltd
addl
jo
hlt
adc
movsl
jae
filds
xor
loop
xchg
xor
mov
and
lods
mov
cltd
and
mov
nop
sub
xorb
mov
je
leave
repz
fisttpl
hlt
sub
movsl
test
dec
andb
scas
incb
shl
or
rcrl
push
out
and
xchg
mov
mov
lret
popf
add
and
outsl
and
test
loope
insl
lret
fcomps
outsb
pushf
arpl
push
pop
mov
fisubrl
push
loopne
lret
jno
push
jbe
hlt
scas
sbb
rorb
test
dec
mov
or
mov
mov
adcb
dec
push
jae
mov
pop
mov
test
push
push
shlb
inc
sarl
call
sub
mov
cli
call
mov
xchg
in
les
insl
push
test
enter
fucomp
inc
jg
mov
cmp
rcl
pop
test
movsl
test
pop
mov
xor
mov
je
loopne
call
mov
mov
push
xor
or
push
push
mov
cltd
push
xchg
daa
addl
insl
pop
cmp
and
mov
jp
adc
inc
stos
add
mov
cmpb
out
cwtl
cli
mov
scas
adc
out
hlt
sbb
test
sbb
sbb
cltd
out
rolb
mov
movsb
inc
adc
xchg
sub
pop
push
imul
mov
mov
ror
mov
cmp
aas
sbb
adc
cmp
pop
movsl
in
dec
xlat
nop
jns
out
jno
push
pop
mov
mov
and
subb
mov
lcall
jo
mov
or
push
jecxz
cwtl
icebp
sbb
stos
sbb
or
cmp
xor
hlt
push
xchg
out
cmp
fidivl
lahf
mov
lods
or
pop
adc
rcrl
xchg
mov
popa
mov
sub
xchg
jo
mov
inc
push
pop
popl
pusha
and
test
xchg
ss
sbb
xlat
ret
in
imul
xchg
inc
aam
mov
dec
in
pop
dec
stos
fdivp
insl
or
mov
fwait
gs
clc
mov
iret
or
sbb
jecxz
sbb
adcb
mov
dec
pop
leave
and
mov
add
inc
into
mov
cmp
enter
sub
pusha
out
inc
mov
add
mov
pop
in
xchg
inc
cmp
mov
mov
out
and
jg
cmp
fstl
call
mov
aas
adcl
adc
fs
adc
std
and
clc
enter
cwtl
push
aas
hlt
pop
or
adc
iret
mov
fists
push
sti
aas
addb
mov
pusha
loope
mov
les
dec
dec
xor
sar
mov
fcoml
lret
adc
popa
ret
clc
jne
mov
inc
int3
int3
push
int3
aad
mov
mov
sub
sbb
xchg
inc
mov
mov
add
sub
je
hlt
cmpl
pop
cmpsl
or
jo
stc
clc
adc
mov
popa
sub
and
scas
add
xchg
inc
mov
mov
pop
nop
sbbl
in
cmp
mov
and
dec
add
sub
mov
pop
jle
roll
pusha
fmull
imul
pushf
repnz
sbb
stc
inc
stc
sub
bound
pop
fstl
imul
mov
je
iret
ja
rclb
mov
add
cwtl
jne
or
add
adc
mov
mov
adc
sbb
mov
xchg
sub
out
sbb
jecxz
sar
scas
cwtl
icebp
mov
aas
add
mov
or
into
test
sbb
insl
shlb
movsb
test
mov
xchg
push
sbb
or
cli
addr16
xchg
icebp
enter
jne
in
fisubs
insb
popf
and
mov
cmp
aaa
cs
sbb
test
cmp
aaa
mov
fcom
add
shll
inc
or
sbb
dec
sbb
aad
aaa
daa
lret
or
or
adc
cmpb
xor
into
and
out
call
shlb
sbb
add
mov
cmp
enter
mov
sbb
sarl
daa
push
inc
sbb
fmuls
in
dec
aas
cwtl
in
sbb
xor
testl
ds
sbb
inc
pusha
iret
dec
pop
inc
xchg
shlb
push
in
mov
and
stc
cltd
stos
sub
fs
ret
bound
movsl
cwtl
adcb
popf
or
push
lods
shlb
lret
xor
cmpsl
cmp
pop
xchg
sarb
incb
sbb
push
mov
mov
mov
mov
sbb
out
test
mov
or
mov
push
shr
mov
and
pop
jnp
dec
fstp
loop
clc
dec
cmc
out
fcoml
xor
inc
cmp
push
lret
ficomps
je
int3
inc
sub
inc
adc
test
push
pop
mov
ret
loopne
in
sbb
test
aaa
lock
outsl
rcl
pop
stos
out
adc
mov
cmp
mov
mov
pop
pusha
int3
out
dec
mov
imul
mov
rcrl
or
push
rcrb
sub
inc
outsb
xor
push
cmc
xchg
pop
add
enter
mov
cmc
pop
out
push
out
test
out
repz
jl
sub
fadds
inc
rcll
lds
lds
jbe
mov
mov
gs
xchg
cmp
repz
or
mov
loopne
xchg
loopne
or
sbb
clc
mov
sbb
jle
outsl
sbb
in
sbb
ror
sti
aaa
sbb
roll
stos
mov
outsb
sub
scas
rcl
jo
ljmp
movsb
xor
cmp
adcl
lahf
adc
or
repz
and
movsb
ficomps
das
xor
push
adc
loope
in
int3
sbb
sub
mov
scas
movsb
push
and
ret
mov
sub
filds
push
inc
imul
mov
adc
xchg
leave
mov
sub
mov
push
jne
cwtl
out
cli
jae
jecxz
sub
add
lret
sbb
pop
pusha
push
out
adc
xlat
jne
inc
ljmp
ljmp
test
lock
lret
push
push
xor
push
data16
inc
xchg
sbb
mov
pop
dec
jmp
dec
sarl
push
lods
dec
mov
xchg
in
lahf
xor
inc
mov
insb
sbb
dec
push
pushf
movsb
fcmove
sbb
int
test
outsb
in
dec
ljmp
xchg
push
push
inc
or
movsl
mov
or
xchg
addr16
mov
jne
cmp
sub
mov
aaa
push
pushf
xor
or
xchg
into
in
sub
fs
fisubl
stos
int3
mov
fcompl
orb
push
mov
push
lcall
adc
in
dec
or
pop
and
call
stos
clc
icebp
inc
ret
xor
std
ror
xchg
mov
jg
movsl
inc
movb
and
popf
ret
xor
inc
repnz
lods
pushw
jne
fptan
hlt
outsl
arpl
cli
ja
push
cli
jne
sti
sti
inc
jmp
mov
or
imul
inc
into
mul
sub
mov
inc
out
gs
add
jne
xchg
cmpsl
xchg
roll
popa
test
xchg
jp
xchg
dec
mov
lcall
pop
std
pop
mov
out
push
outsl
inc
adc
adc
ja
lods
or
xchg
daa
and
jae
jle
push
fcom
pop
adc
or
jne
out
xor
xorb
mov
mov
dec
repz
call
mov
sub
cmp
enter
gs
lahf
push
inc
jl
add
cmp
lret
decl
fs
shrb
cmpsb
mov
mov
mov
inc
push
cmp
inc
sub
mov
sub
push
sti
mov
mov
inc
pushf
inc
inc
inc
mov
jp
pop
lods
fdivrl
scas
xchg
inc
jg
fimull
jnp
mov
mov
pusha
test
imul
movsl
icebp
pop
jmp
cltd
fwait
push
insb
push
loopne
ret
pop
jge
not
jge
jns
lods
adc
imul
stos
cs
incl
mov
mov
jae
out
test
and
movsb
cmpl
lret
or
pop
hlt
cmp
dec
les
into
loopne
movsb
daa
sbb
cltd
sti
add
in
lret
cld
lea
adc
inc
or
scas
xchg
pop
testl
fisubl
dec
cli
mov
fmul
int3
ret
push
mov
decb
dec
or
mov
cli
fadds
arpl
and
mov
fst
daa
ja
xchg
add
jp
iret
xchg
rorb
mov
popa
pop
cmp
jns
ret
adc
pop
inc
xchg
lods
outsb
mov
cli
cmp
and
lcall
mov
xchg
addr16
popf
call
in
je
std
jbe
aaa
rol
imul
je
into
in
fldenv
xchg
insb
outsl
xchg
sbb
sbb
or
mov
test
fmuls
fs
dec
mov
imul
xchg
pop
outsl
aaa
scas
lcall
pop
dec
outsb
xor
sarb
movl
pop
icebp
pop
stos
mov
mov
mov
mov
daa
test
xchg
aaa
jl
push
mov
lahf
sbb
add
mov
movsb
lret
int3
xchg
and
push
mov
mov
mov
cmp
adc
adc
icebp
push
in
cmp
idivb
in
jno
xor
mov
movsb
sub
les
clc
mov
add
and
lods
stos
sub
jmp
and
iret
push
xor
pop
jns
call
dec
repnz
movsl
and
mov
in
sbb
fsts
fists
bound
ret
fisubrs
cmp
add
dec
lea
loopne
or
push
sbb
out
and
add
push
pusha
out
jecxz
orb
out
adc
sbb
mov
pop
aad
sbb
pop
sub
sahf
push
popf
mov
cmp
test
jp
push
xchg
mov
rcll
nop
pop
sti
lods
xor
ficoml
xchg
sub
sub
adc
cmpsb
mov
jp
cmp
movsb
mov
push
dec
cli
inc
ficoml
cmp
xor
dec
lret
cs
dec
loopne
xorl
xchg
pop
nop
sahf
push
sbb
int
mov
pop
and
lcall
push
and
mov
jle
dec
iret
or
fwait
cmpsl
out
mov
sub
cld
adc
jl
inc
jmp
sub
adc
stos
xchg
mov
js
nop
mov
in
push
fsubs
jns
in
xchg
hlt
mov
dec
xor
jecxz
mov
out
push
cltd
adc
sbb
or
push
mov
iret
pop
test
pop
sbb
jl
add
mov
push
lock
aam
adc
cmp
rorb
add
outsl
sub
mov
sbb
xchg
in
and
mov
call
cmp
loopne
bound
test
mov
jmp
and
jns
sbb
push
enter
mov
dec
or
pop
pop
mov
loop
cmp
inc
add
dec
jb
clc
push
jno
jns
cmpl
cmp
and
cs
or
pop
mov
movsb
aam
mov
in
xchg
and
mov
lahf
mov
mov
lahf
cmp
test
loope
mov
sar
jo
das
into
add
ret
insl
and
cmp
shl
push
shrb
jbe
pusha
jge
or
cli
repnz
filds
xchg
lock
and
adc
add
push
cli
add
xchg
loop
dec
xchg
adc
js
ret
ret
dec
mov
addr16
mov
out
sbb
shlb
repz
jne
leave
or
mov
add
or
cmp
in
insl
push
add
rcrl
hlt
mov
sbb
lds
sub
imul
es
lahf
xor
sbb
sbb
or
xor
add
cmc
sbb
das
fdivrp
pmullw
cmp
adc
in
jle
jl
repz
mov
aad
and
xchg
cmpl
sbb
dec
shrl
cli
cmp
sbb
test
xor
xchg
mov
jb
or
add
jecxz
and
jns
and
or
sub
jge
fldenv
lret
lock
inc
jbe
mov
mov
or
sbb
xchg
ja
int
icebp
xchg
cltd
mov
inc
std
pushf
scas
iret
into
pushf
lret
lds
cmp
mov
xlat
jno
mov
ret
and
fs
cmp
push
xchg
dec
cmpl
jle
push
dec
aam
xor
xchg
mov
xchg
add
and
adc
scas
hlt
imul
imul
push
mov
into
sub
push
gs
push
cli
popa
repz
push
aad
jo
xchg
ret
inc
push
push
mov
outsb
ja
dec
cmp
pop
int3
mov
std
aaa
xchg
xor
insb
lock
inc
icebp
mov
nop
push
jo
fst
mov
loopne
rcll
jnp
cltd
jmp
adc
fs
pop
pusha
ret
jmp
adc
jecxz
pop
mov
push
cmp
ficomps
add
adc
sub
in
cmpsl
roll
pop
dec
popa
andb
xor
stos
pop
mov
pusha
add
inc
mov
lods
mov
inc
jmp
lds
stos
dec
push
sub
jle
push
cmpsb
adc
or
or
movsl
shrb
mov
push
stos
cmp
int3
scas
push
rolb
pop
mov
and
xchg
and
sub
nop
stc
insb
push
dec
and
jae
cmp
int
sub
xchg
pop
imul
rep
popf
push
mov
gs
xchg
mov
cltd
mov
cmp
fs
sub
mov
filds
mov
lea
push
sahf
and
mov
out
or
dec
fistpl
es
enter
xchg
mov
ret
cld
inc
xchg
push
cwtl
jl
adc
adcb
cmp
xchg
xor
cmpsl
mov
fdivrs
inc
cs
mov
push
fwait
mov
mov
mov
pusha
shll
mov
idivl
and
adc
sub
scas
jno
movsb
int
push
push
sub
ds
jle
sti
sub
sbb
shrl
push
inc
and
jb
or
sub
es
dec
jbe
fcoml
or
pop
out
dec
pop
lret
xchg
mov
scas
ret
cmp
ret
adc
fadds
ror
cmpsb
sbb
xchg
cld
pop
pop
mov
sbb
ljmp
scas
movsl
popa
lea
mov
push
jge
sahf
xor
scas
jne
lods
jae
dec
add
sub
mov
clc
xlat
jle
mov
sahf
pop
aad
push
mov
ljmp
sahf
xor
pusha
mov
xor
inc
push
add
mov
lods
mov
add
pop
mov
insb
adc
insl
insl
push
inc
loop
outsl
clc
sbb
in
sbb
and
jge
sbb
in
adc
movsl
add
nop
jecxz
push
cs
cmpsb
test
adc
movsl
jle
jle
dec
les
adc
xlat
jb
or
gs
scas
and
sti
call
cld
add
pop
and
pop
sti
insl
pop
mov
xchg
add
cld
xchg
push
fimull
cmp
inc
leave
ret
xor
jle
jns
test
dec
jg
sub
jne
shrb
sub
xchg
pop
int
repz
push
inc
cmp
mov
repz
pop
out
pop
outsl
hlt
pop
out
and
jo
bound
mov
jae
mov
adc
jmp
jne
divl
mov
adc
and
scas
lret
push
add
shlb
pop
dec
jmp
mov
repnz
aam
and
in
cmp
pusha
jno
imul
lods
enter
movntq
dec
rcrb
lahf
pop
rolb
push
test
cmpsb
daa
push
test
mov
int3
mov
cmp
insl
pop
push
pushf
jmp
stos
mov
ret
mov
sti
jge
out
and
mov
in
xor
mov
imul
dec
fnstsw
lcall
aas
jl
inc
jl
adc
xchg
lods
push
jbe
cmp
rcrb
arpl
out
aam
mov
sub
jbe
lods
jb
scas
mov
dec
or
inc
roll
sbbl
lods
jnp
mov
xor
xchg
inc
jp
sub
push
mov
test
or
jo
scas
mov
xchg
scas
or
add
lods
push
sarb
ret
into
xchg
mov
jo
out
or
push
lods
xchg
test
stos
add
test
add
mov
mov
cli
in
xor
shl
push
mov
push
inc
add
hlt
sahf
pop
adcb
push
push
jmp
lods
cmp
pushf
add
sub
mov
sub
ss
daa
imulb
test
push
cwtl
pop
mov
push
sub
lock
adc
decb
push
jmp
addl
out
lods
aam
loope
ret
cmp
cmp
lcall
out
cmp
xchg
dec
incb
add
pop
cmp
jle
arpl
rcrb
mov
int
sbb
cmp
push
mov
out
faddl
loop
js
popa
sti
push
mov
sub
sbbb
fcoms
mov
sub
popf
adc
sub
jg
sub
mov
xor
enter
test
inc
sbb
stos
ret
loopne
push
std
mov
aaa
sub
and
outsl
mov
out
mov
mov
cld
mov
mov
xor
pushl
mov
inc
xor
es
xchg
xchg
dec
insl
rclb
pop
xchg
lock
dec
and
test
mov
inc
jmp
movl
adc
inc
push
or
pop
sahf
popa
fists
cwtl
sbb
scas
pusha
in
jbe
xor
xor
or
add
sbb
lea
popa
aad
cmp
in
xchg
sub
cmp
cmp
add
xor
fldenv
and
jle
mov
push
fsubr
aad
xchg
jbe
hlt
lea
nop
and
rcrb
mov
xor
les
es
sti
into
sahf
addb
stos
push
xchg
jecxz
mov
dec
mov
and
xor
iret
mov
sub
pop
adc
loop
out
ficoms
cmp
mov
rorb
push
add
adc
dec
cmp
sbb
mov
ffree
sub
fcmovb
and
pop
or
cmpsl
cmp
cmc
out
or
sbb
stc
clc
je
into
insl
pushf
mov
pop
dec
xchg
sub
push
push
xchg
imull
xchg
inc
insl
aas
jae
jae
push
lea
mov
jo
sub
pop
add
jb
xchg
mov
sbb
cli
out
dec
mov
in
dec
and
xor
test
push
sbb
pop
mov
inc
in
ljmp
mov
push
popa
in
xchg
add
xchg
add
sbb
aaa
or
fistpll
mov
cmpb
pop
mov
cltd
cmp
mov
cmp
iret
xor
ja
out
inc
jno
insl
jbe
mov
push
fwait
cmc
fsubrs
adc
iret
xchg
test
sahf
mov
cli
sbb
and
stos
js
dec
add
dec
adc
je
mov
cmpsl
adcl
jno
outsb
mov
fdivrs
pusha
inc
loopne
into
jnp
das
adc
notb
pop
notb
idivl
mov
mov
dec
loopne
in
or
cmp
imul
cmc
add
lcall
push
push
jle
sbb
jg
clc
mov
jp
daa
aad
sarl
imul
mov
sub
lods
outsl
clc
mov
loopne
mov
ds
dec
cld
mov
fistps
mov
add
cmp
mov
cmp
loop
std
test
movsl
xchg
mov
or
push
inc
xor
adc
xchg
data16
test
out
jecxz
jo
loop
or
mov
add
ss
mov
and
insb
ret
jns
loop
and
cmp
inc
jge
pop
cli
nop
jb
adc
adc
push
sub
fiadds
jmp
icebp
fisubrs
out
fcompl
or
in
sahf
stos
jle
stos
in
cs
cmp
jns
mov
scas
loope
orl
scas
ds
dec
mov
stos
sbb
add
cli
push
pop
fdivp
in
mov
scas
dec
popa
pop
pop
aad
cmpsl
or
aaa
hlt
jb
add
mov
imul
cltd
adc
stc
sbb
push
or
fsubl
mov
push
sbb
rcr
loope
aad
in
jnp
negb
mov
ret
das
xor
fnstenv
pop
mov
rcr
adc
outsl
icebp
sbb
fmull
popa
inc
iret
fcmovne
addb
incl
push
push
mov
jle
dec
mov
pop
std
fnsave
scas
lret
or
adc
inc
pop
pushf
ss
testl
push
test
pop
mov
int
dec
aas
push
xchg
jns
lods
xor
outsb
icebp
orb
adc
add
mov
mov
loopne
int3
inc
in
cmp
sbb
rclb
or
adc
fdivrp
dec
leave
test
cmp
cmp
gs
mov
test
clc
dec
movsb
push
adc
stc
sbb
dec
lods
push
pop
jg
cmovae
daa
jmp
insb
data16
add
and
pop
fisttpl
xlat
fisubrl
jle
or
repz
adc
pop
push
cmpl
cmp
fld1
adc
arpl
repnz
mov
call
lds
daa
ja
stc
fs
int3
and
adc
xchg
xor
stos
dec
mov
sbb
in
das
loop
jnp
sub
mov
lods
and
inc
and
lds
sbb
rcrb
rcr
mov
sbb
push
sub
aaa
dec
jmp
sti
pop
jle
je
xchg
and
aaa
jb
adc
xlat
jno
adc
fwait
inc
daa
scas
mov
cmp
lods
lods
sbb
dec
and
add
adc
and
mov
fwait
xchg
in
dec
shlb
xchg
scas
mov
sub
dec
lock
lea
das
in
pop
enter
jo
adc
les
repnz
xor
test
or
mov
aaa
lods
mov
push
cmc
dec
push
sub
pop
add
mov
cltd
call
ret
clc
mov
lretw
int
sbb
cmp
mov
mov
adc
ljmp
in
xor
mov
fadds
jmp
pushf
push
and
pop
push
and
jb
ljmp
sarl
pop
sbb
imul
fidivrs
enter
fdivrs
imul
lcall
popf
ja
mov
insl
clc
add
push
subb
loop
in
inc
push
aam
std
div
je
fldcw
in
cmpsl
cltd
push
lock
lea
into
aad
jns
adc
mov
jle
fistpll
mov
pop
mov
int
aam
cmpsl
ficompl
dec
fldenv
test
sti
or
jle
mov
jnp
cmp
xor
pop
ret
xor
nop
xchg
test
les
mov
nop
and
pop
in
inc
add
in
pop
or
cs
lea
ljmp
scas
jnp
sub
mov
rclb
mov
cld
insl
mov
in
inc
pop
daa
sub
arpl
push
dec
repnz
iret
push
mov
push
ss
mov
and
add
scas
rcrb
test
lock
mov
nop
stc
int3
push
fcom
xchg
into
sbb
mov
mov
pop
cmp
das
pop
add
xor
scas
mov
sbb
insb
dec
mov
sub
imul
cmp
fcomip
test
imul
data16
addb
out
ljmp
cld
xchg
mov
mov
popl
lods
outsb
data16
imul
sbbb
mov
pop
loop
mov
fwait
and
mov
insb
xchg
add
sbb
das
lret
xchg
pop
push
inc
in
cmp
mov
mov
ret
in
push
outsl
inc
dec
and
and
sub
add
pop
ss
xchg
in
cmp
dec
xchg
xchg
adc
lret
popf
arpl
dec
fcompl
push
sbb
imul
adc
repnz
pop
cmp
pop
push
xor
mov
jecxz
xor
inc
and
test
add
scas
mov
ja
insl
pop
js
in
cmp
fldenv
fwait
mov
xlat
cmp
push
jae
cmpb
mov
aam
lods
popa
arpl
sti
mov
fbstp
call
scas
int
daa
mul
lret
cli
lds
out
sub
scas
aam
mov
adcl
mov
mov
icebp
push
shrl
addr16
mov
ret
mov
vcvttps2dq
dec
iret
add
jmp
xchg
and
mov
xor
hlt
push
orb
movl
int
aad
mov
nop
xchg
fstps
push
mov
mov
int3
cmpsl
inc
adc
inc
lods
stos
popf
cmp
dec
imul
jns
stos
jae
repnz
les
xor
sbb
add
xlat
sub
push
add
adcl
rorb
cmp
popa
cmc
ficomps
jns
nop
scas
pop
rorl
pop
jl
adc
inc
dec
andb
out
sub
in
lds
pop
push
adc
orb
ja
xchg
jne
push
or
and
push
je
fsubl
mov
aas
adc
add
addr16
cwtl
inc
mov
adc
add
mov
add
popf
mulb
push
int
out
shrb
js
adc
or
imul
cmp
adc
sahf
cmp
xlat
add
cmp
xor
inc
inc
fildl
mov
notb
and
fidivs
push
xchg
fs
adc
sub
pop
push
mov
mov
pop
dec
repnz
pusha
icebp
inc
flds
icebp
cmp
sbb
jae
test
jne
iret
dec
pop
sub
mov
jns
sti
jmp
in
fdivs
loopne
daa
shll
in
xlat
xor
mov
popf
mov
test
lods
stos
mov
pop
mov
imull
inc
mull
es
das
mov
testl
mov
or
xchg
cmp
cmp
push
mov
in
stos
pop
ds
sti
std
xchg
inc
inc
cmc
clc
pop
or
ja
lods
adc
fyl2xp1
int
cmp
cmp
or
push
bound
aaa
and
xor
jno
pusha
cs
leave
xor
sub
mov
lds
popa
dec
adc
add
in
mov
aaa
mov
mov
and
fmuls
out
pop
xor
mov
jmp
mov
jp
mov
lods
mov
dec
mov
push
test
xor
sub
xlat
inc
stos
inc
shr
lds
adc
movsb
and
fwait
jb
mov
inc
pop
jb
jns
sub
ljmp
imul
testb
out
xor
pop
rcrb
insb
je
aaa
test
cld
ret
xor
popa
mov
sbb
cwtl
les
or
add
jp
mov
adc
push
add
lcall
xchg
mov
jge
mov
jp
mov
push
enter
test
loopne
adc
stos
ja
lcall
call
xlat
scas
push
ficompl
inc
inc
das
or
dec
xlat
shrl
push
jo
int3
clc
mov
out
adc
movsl
add
imul
aam
out
jl
xor
fs
ret
sub
lods
stos
aam
scas
hlt
arpl
inc
xchg
sahf
mov
dec
loopne
cmp
jno
iret
inc
and
stos
sbb
outsl
nop
cmpsl
std
pop
and
daa
and
mov
das
in
mov
xchg
mov
push
mov
fldenv
out
mov
nop
jge
inc
sbb
test
out
int3
or
div
mov
das
fsubl
mov
mov
adc
sti
jnp
sub
mov
jmp
lahf
je
cmp
pushf
mov
mov
sbb
dec
xchg
das
lods
test
test
xor
or
out
inc
push
cmpsb
pop
push
sub
into
mov
mov
add
addr16
pusha
or
and
cmp
fwait
sbb
pop
sahf
cmp
test
push
clc
jg
imul
cltd
xor
mulps
lret
xchg
out
sub
or
arpl
inc
pop
sbb
stos
lock
loope
xor
stc
mov
mov
loop
dec
ret
mov
addr16
inc
push
leave
pusha
cmpsl
xor
jbe
shrl
xchg
incb
or
addr16
pushf
cmp
add
cli
xchg
sbb
pushf
leave
cmp
dec
xchg
or
jp
jle
dec
nop
jp
leave
insb
xor
stc
jmp
add
pop
add
xchg
sub
jle
popa
sub
subl
cltd
jl
cmc
lock
repnz
xchg
lcall
insl
out
and
push
dec
mov
in
sub
negl
sub
shll
mov
gs
add
jle
pop
bnd
sub
xor
sub
adc
push
inc
bound
aaa
je
mov
icebp
or
xor
jns
push
cmpsl
outsb
sub
dec
jne
or
shrb
movsl
cltd
push
dec
mov
push
shrl
or
fsub
sbb
fwait
rcr
gs
in
and
paddusw
fbstp
and
daa
test
fsubs
repnz
sub
cli
rcll
pop
or
add
ret
push
cmp
mov
cmp
nop
cmp
fdivrl
fadds
mov
mov
jmp
pop
lods
xor
push
insl
push
ret
mov
jp
int
mov
imul
mov
stos
sub
les
inc
arpl
or
xchg
push
mov
test
fdivrl
aaa
mov
dec
xlat
test
dec
sub
rcrb
in
pop
fwait
pop
xchg
lahf
cmpsb
xlat
mov
mov
push
outsl
mov
cmpsb
lahf
inc
shrl
ds
std
mov
mov
dec
jbe
icebp
mov
jge
je
push
push
daa
jp
mov
dec
inc
call
rcrb
clc
call
out
stc
fidivl
aad
adc
mov
pop
fsubrp
cmp
dec
cltd
call
jge
xchg
mov
dec
sbb
iret
rcl
jmp
jnp
xor
ret
xchg
pop
pop
push
mov
icebp
outsl
jo
mov
lret
dec
cwtl
fiadds
push
inc
mov
shr
les
aaa
xchg
fisubs
mov
clc
pop
mov
cmp
jp
in
push
loop
sti
outsb
imul
shll
rol
sbb
xor
mov
iret
jle
dec
or
loope
adc
mov
xlat
sbb
mov
xor
ret
inc
and
cmp
icebp
inc
daa
out
psrlw
and
test
push
scas
cmp
es
outsl
mov
iret
xchg
and
push
xchg
mov
loop
bnd
addr16
or
lea
inc
imul
lret
scas
mov
xchg
das
cmp
adc
add
scas
fwait
mov
jp
xor
mov
inc
stos
sbb
addb
pop
mov
jbe
inc
loop
clc
or
cltd
push
out
jb
jmp
dec
mov
cmc
bound
push
xor
shrl
insl
stc
ljmp
jp
xchg
xor
cli
mov
call
shll
jl
hlt
int
xor
lahf
pop
xor
sbb
icebp
cmp
daa
in
add
rcl
popa
fwait
cmpsb
pop
aam
dec
push
xor
inc
push
push
gs
shrb
dec
lret
pop
xor
cmp
sub
cmp
pminub
xor
std
and
cli
sbb
jge
add
outsb
pop
dec
cltd
push
mov
inc
xchg
sub
mov
jb
cmp
out
pop
pushf
rcrl
sahf
dec
rcr
movsl
xor
sbb
pushf
xchg
and
sbb
pop
pop
fwait
pop
cmp
pusha
movd
jb
push
insl
dec
mov
add
jle
int
fcoml
mov
pop
lcall
jmp
xchg
enter
cmpsb
pop
outsb
mov
ljmp
rolb
sub
push
mov
adc
jno
cs
ja
jmp
push
or
add
cmpb
push
dec
mov
jp
push
dec
push
mov
in
orl
iret
in
jmp
sti
aam
sti
out
xor
stos
dec
jmp
mov
xlat
jbe
divl
scas
lock
das
push
outsb
xchg
jge
loope
mov
cs
fstpt
pop
addr16
xchg
sbb
push
mov
in
lods
stos
and
cmc
rorl
cltd
xchg
adc
jecxz
sbb
push
rorl
mov
in
sub
lret
lods
sub
dec
dec
mov
mov
loop
fcomps
out
or
and
mov
xchg
pop
cld
sbb
icebp
push
pop
mov
jnp
mov
movsb
pop
or
add
jmp
fbld
lahf
stos
mov
cmp
pusha
xchg
xchg
or
ds
fcoms
push
sub
jg
cli
mov
xor
sbb
dec
or
pop
call
and
ret
fiadds
pop
sbb
and
int
jecxz
ret
adcb
xor
in
sub
lcall
and
icebp
popf
aad
ljmp
outsl
mov
ret
scas
mov
mov
sti
rcrb
push
fwait
lea
and
mov
cmc
mov
lods
xchg
push
fst
andb
int
lret
imulb
out
push
mov
pop
lods
cwtl
stc
scas
flds
mov
xor
push
sub
ret
push
insb
and
aas
imul
xor
les
stos
lds
lret
out
jno
adc
or
adc
mov
pop
push
or
xor
cmp
mov
rcll
and
clc
push
je
adc
jo
adc
xchg
add
push
inc
mov
repnz
and
pop
addr16
mov
call
call
ret
repnz
sub
mov
decb
pop
inc
lea
mov
mov
adc
in
xchg
insl
cld
scas
out
or
jge
mov
xor
pushf
cmp
push
loope
add
out
pusha
jge
gs
call
bnd
sbb
lock
jnp
mov
inc
push
nopl
repnz
xchg
mov
fucomp
jno
push
dec
fidivrl
ficomps
mov
sbb
arpl
push
mov
ds
or
xchg
adc
dec
mov
insb
cmp
ja
sub
les
xchg
idivl
and
and
fadd
jg
stos
jnp
add
and
fs
jo
inc
and
and
pop
insb
jb
and
mov
test
fldenv
cmpsb
jmp
jnp
mov
fs
cld
push
loope
mov
int3
leave
pop
add
mov
adc
repnz
sbb
pop
push
fsin
sahf
leave
push
inc
mov
push
mov
insl
push
cmp
sbb
dec
pop
stc
insl
push
jo
pop
lock
mov
or
int3
lods
jg
les
push
in
sub
clc
cmp
cld
lret
pop
lea
sub
mov
in
fnstenv
mov
xor
mov
lods
mov
rcr
pop
dec
adc
fwait
scas
push
pop
sub
popa
dec
fs
lahf
mov
das
rcll
sbb
cmpsb
sub
les
jmp
mov
pop
dec
xchg
test
adc
adc
and
call
ja
push
daa
dec
int3
cmp
mov
fisttpl
cmpsb
pop
pusha
icebp
scas
bound
xor
loop
and
js
lods
cmp
pop
xor
pop
ljmp
sub
call
imul
aaa
fildll
ret
hlt
adc
pop
aam
cmp
daa
addb
xlat
push
inc
test
inc
ret
aad
lret
in
in
cli
mov
or
repnz
movsl
add
xchg
dec
dec
jecxz
or
roll
sbb
dec
inc
das
adc
xchg
scas
insb
fcomip
jmp
mov
sahf
mov
jle
insb
push
pop
cli
mov
cmp
dec
xor
xchg
jns
fdivrl
js
mov
add
lahf
cmp
fiadds
adc
pop
int3
aas
imul
stos
mov
sbb
cmp
aad
pop
gs
pop
push
cltd
in
pop
rclb
dec
into
xlat
ret
xchg
sbb
fsubr
pop
xchg
and
addb
pop
or
mov
mov
cmp
jnp
inc
ss
aam
fadds
pusha
xor
xor
mov
add
jne
lret
jae
cli
std
push
adc
sahf
lea
mov
xchg
sti
mov
mov
or
loope
stos
mov
call
push
mov
loopne
mov
mov
rcrl
in
push
mov
mov
dec
jmp
pop
les
mov
jp
cwtl
movb
ljmp
sbb
test
cli
mov
mov
adc
rcl
out
gs
sub
insb
lcall
pop
jp
xchg
and
xchg
jg
mov
scas
stc
push
and
xor
mov
mov
movsl
pusha
cwtl
clc
mov
push
dec
pop
xor
enter
cmp
sbbb
cld
or
enter
dec
repz
loop
daa
lods
or
xor
add
insl
lock
jge
testb
bound
jne
mov
dec
pop
mov
inc
xor
sbb
and
ja
adc
cmp
mov
fdivl
jmp
mov
test
dec
dec
movsb
loope
stc
add
cld
aaa
daa
xchg
subb
adc
adc
mov
dec
adc
xor
mov
popa
stc
xor
lods
xor
mov
bound
sub
sarl
lock
push
loope
stos
clc
gs
sub
scas
lret
adc
or
mov
mov
mov
cli
fldlg2
push
jle
test
sbb
xchg
add
cld
cli
iret
outsl
xor
adc
pop
sbb
xchg
popa
pop
shll
xlat
push
dec
fadd
add
pop
sub
or
push
les
mov
mov
mov
imul
enter
stos
shrb
xchg
fadd
mov
rcrb
es
in
test
cmp
loope
cmc
neg
out
sub
sahf
mov
mov
lret
test
shl
imulb
test
inc
mov
repnz
js
sbb
in
cmpsb
push
pop
shll
push
in
and
clc
pop
fists
test
adc
test
jp
lret
in
cmp
push
push
xchg
xor
dec
fwait
pop
mov
mov
and
in
insl
adc
mov
call
fldcw
xor
ljmp
fcmovu
pop
sarb
je
into
pop
loope
out
mov
inc
inc
and
mov
jno
push
popa
ret
sbb
mov
lds
sbb
dec
mov
mov
cmp
in
add
in
inc
mov
aaa
mov
sti
loopne
sbb
clc
xor
jns
xor
jg
lea
mov
dec
sub
or
enter
pop
int
std
or
jnp
mov
mov
cmpsl
js
nop
mov
fucom
mov
pextrw
or
xor
cld
inc
dec
call
mov
adc
push
lea
or
pop
adc
repz
or
inc
mov
arpl
std
adc
sbb
popa
std
sbb
movsb
test
test
dec
test
lahf
pop
pop
pushl
sub
in
mov
out
jne
inc
in
mov
jo
jle
ljmp
js
and
or
mov
aad
push
sahf
fisubl
mov
insb
push
test
aam
and
shr
iret
or
dec
rolb
nop
jle
pop
scas
pop
dec
and
popa
sbb
jp
aaa
in
aam
stos
movsb
xchg
daa
rcrb
leave
cmpsb
fidivrs
mov
adc
or
hlt
adc
cmp
insl
mov
lock
inc
sub
jne
imul
inc
out
sub
or
cmp
adc
pop
rclb
mov
out
jecxz
mov
das
pop
add
or
sub
xchg
jb
les
and
jle
mov
add
xor
shlb
xchg
dec
jo
push
and
les
sbb
pop
push
and
mov
mov
lea
mov
aam
xchg
pushl
repnz
pusha
inc
fcompl
clc
loope
int3
jg
mov
pop
outsb
icebp
sbb
mov
shrl
mov
lret
outsl
push
cs
push
out
mov
jmp
push
mov
jae
repz
cmp
scas
ficoml
inc
add
imul
cmp
or
pop
push
cmp
xchg
cwtl
sub
movsl
out
jle
std
xchg
out
stos
add
sti
adc
pop
sbb
xor
sub
xchg
xor
pop
inc
sbbb
movsb
mov
and
out
xchg
jmp
mov
dec
add
push
jbe
push
or
insl
insl
lods
xchg
lods
jnp
xchg
stos
cmp
fbld
lcall
movsl
push
cmpsl
push
dec
stos
stc
fs
addr16
cmpsl
inc
iret
xlat
xorl
dec
inc
add
je
lds
lods
cltd
mov
insl
xor
mov
pop
xor
sub
mov
pop
add
scas
xchg
dec
call
lahf
push
or
into
xlat
mov
and
in
cmp
sbb
ljmp
push
mov
ret
mov
fcoms
dec
fwait
jno
mov
jecxz
cmp
mov
cli
mov
push
repz
pop
sub
cmpsb
jle
sbb
xor
lret
pop
mov
xor
arpl
dec
xlat
xor
lods
and
jno
inc
push
loopne
xchg
sub
add
roll
or
add
xor
daa
add
insb
xor
add
jmp
call
aaa
out
and
push
in
fwait
ret
lcall
mov
cmc
fsubrs
push
xor
add
sub
xor
add
sub
and
cmpsb
test
pop
lret
addr16
scas
out
lahf
xor
movzbl
xchg
test
jp
sub
mov
mov
mov
out
mov
mov
mov
imul
cs
pushf
xchg
sbb
add
xor
repz
sbb
adc
stos
and
jno
mov
xor
push
dec
in
jns
shl
fwait
push
ror
lret
mov
dec
scas
popa
jnp
dec
pushf
mov
fwait
pop
leave
mov
inc
in
fmull
fstpt
ds
shll
mov
loopne
test
dec
pop
ds
test
ss
push
inc
leave
jbe
sub
imul
sbb
adcl
adc
fidivs
imul
inc
fisttps
scas
clc
jl
int3
sub
fucom
dec
lret
ret
into
mov
bound
mov
aaa
xor
loop
jle
mov
pushf
fnstsw
mov
in
jl
je
xorb
ficoms
and
cmp
gs
aam
ror
lock
cmp
mov
inc
pop
xchg
jle
mov
pushf
imul
scas
scas
call
mov
aaa
js
aad
xchg
pop
movsl
nop
loope
test
mov
sbb
lock
icebp
daa
cmp
dec
fimuls
fisttpl
cmpsb
dec
lret
fs
addb
inc
std
adc
pop
sub
nop
popa
dec
insb
out
ror
and
adc
loop
or
xchg
push
iret
and
aam
cmp
sbb
stos
and
pop
add
cmp
cmp
das
sub
xchg
dec
xchg
xchg
addr16
cs
mov
xchg
mov
gs
rcrb
mov
push
and
dec
leave
stos
les
les
inc
pop
push
cmp
outsl
lock
xor
daa
dec
repnz
ja
sbbb
lret
sbb
les
jbe
sti
fisubrs
mov
sub
enter
mov
sub
jl
nop
push
in
decl
cmc
loop
inc
xchg
test
push
mov
push
mov
jmp
mov
cmp
xor
testb
rsqrtps
icebp
out
filds
inc
cmp
mov
pop
mov
das
addr16
dec
dec
adc
push
hlt
adc
loop
push
adc
lods
stos
ss
inc
call
add
aam
ret
adc
adcb
jecxz
push
jnp
xchg
adc
loopne
ret
pushl
stc
out
fs
test
push
jecxz
cmc
gs
inc
ret
push
jno
fildll
daa
mov
rcll
push
adc
bound
ret
xchg
pop
into
dec
cmp
and
xlat
insb
cli
sub
or
fs
jbe
outsb
push
pop
das
or
inc
into
std
mov
iret
movsb
data16
mov
jne
inc
cmpsl
sbb
pop
adc
jecxz
ljmp
sti
fstps
push
fwait
in
xchg
jg
mov
jbe
mov
push
sar
cmpsb
lock
pushf
adc
push
in
pop
sbb
roll
mov
loope
xchg
jle
add
je
and
in
and
es
ret
lods
cmp
les
call
insl
rolb
popa
sub
cs
adc
xlat
xchg
and
ret
xor
adc
outsb
lahf
jnp
jmp
inc
xchg
test
pop
cmp
gs
pop
sub
gs
add
push
out
add
repz
push
jnp
loop
mov
mov
daa
fsubr
jne
add
cmpsb
nop
mov
push
add
std
cmc
call
jae
call
ja
ljmp
jmp
roll
mov
aaa
pushf
sub
stos
xchg
sahf
ffreep
andb
inc
cmpsb
xchg
sbb
sub
push
test
jg
xchg
xchg
sti
fwait
jmp
mov
xor
int3
mov
push
loop
incb
pop
fldl2t
in
adc
pop
in
pop
sub
mov
dec
outsl
repnz
pusha
fmuls
stos
int
lcall
cld
cltd
sub
outsb
xchg
mov
cmp
add
outsb
push
fst
pusha
daa
add
jmp
out
insl
mov
push
scas
sub
mov
lcall
imul
psubd
shlb
negl
jg,pt
sahf
cmp
sub
add
lret
sbb
test
mov
sahf
ret
jmp
sahf
rolb
stos
jno
mov
movsb
lock
aaa
inc
iret
data16
mov
xchg
and
mov
and
dec
push
lock
lods
push
popf
cmp
xchg
fdiv
movsl
pop
cmc
stos
in
cltd
pop
cwtl
jle
cmp
hlt
push
dec
adc
ds
ss
loop
mov
in
dec
jge
sub
ss
xor
pop
xlat
pop
scas
nop
add
std
jg
push
and
pusha
inc
test
xchg
fidivs
add
sar
rolb
orl
fstps
pop
dec
push
or
shlb
xchg
mov
fwait
pop
mov
dec
push
sti
das
pop
jg
add
test
jmp
fs
flds
cmp
les
push
fdivr
sbb
cmovns
scas
lar
daa
mov
push
xor
fisubs
rcrb
out
xlat
hlt
push
pop
sbb
outsb
loop,pn
loope
test
and
movsl
adc
lea
roll
lods
pop
inc
or
test
and
xchg
or
push
inc
sub
stos
arpl
add
stos
or
lea
push
xor
xlat
cwtl
ret
into
or
sub
mov
pop
shll
inc
cmp
push
push
adc
dec
jnp
movsb
addr16
add
ds
pop
icebp
in
les
arpl
xlat
dec
dec
sbb
mov
push
scas
test
fidivs
add
add
sbb
sub
mov
lcall
ss
outsl
add
xor
or
push
lods
shlb
mov
sbb
or
rclb
mov
insb
add
adc
arpl
xor
in
mov
xor
idivl
xchg
fwait
pop
jmp
es
xor
sahf
mov
orl
les
stos
lds
cmp
outsl
pop
cmp
and
aaa
push
out
and
scas
jnp
pop
vpmulhuw
enter
popa
lods
lods
or
adc
mov
mov
rcr
in
mov
cmp
sub
mov
lret
and
lods
mov
shrl
out
mov
mov
xchg
test
jecxz
or
push
adc
and
scas
aaa
push
push
jmp
pop
arpl
sub
mov
decl
sub
cmp
xchg
fstp
jns
enter
insb
loope
cmpsl
jb
jo
pop
ja
fsubrl
sub
cmp
adc
inc
div
mov
clc
push
sbb
les
test
sbb
sbb
nop
clc
cmpsl
enter
push
mov
pop
mov
jae
lock
in
jmp
lahf
lcall
push
add
sarl
sub
lods
outsl
xchg
stc
scas
sub
test
mov
sbb
push
xchg
shlb
xor
insl
xchg
and
sbbl
mov
mov
fcmovb
xchg
popa
imul
mov
rorl
xchg
outsb
jno
and
jnp
inc
pop
out
fucomi
scas
lahf
test
sub
lds
popa
cltd
je
jne
jmp
mov
mov
ljmp
aam
js
add
inc
out
test
daa
sub
pop
test
pop
bound
push
test
adc
insb
xlat
js
outsb
enter
push
mov
push
jno
jg
and
xchg
push
icebp
loop
fsub
or
stos
lret
mov
sub
jno
enter
mov
xchg
jl
test
xchg
push
pop
dec
adc
jno
ret
cmpsl
sbb
pop
stos
sbb
enter
mov
rorb
icebp
inc
lods
imul
lock
sub
dec
cmc
xorb
dec
aam
add
mov
dec
sub
adc
rolb
and
jle
out
pop
jnp
jle
mov
aad
dec
inc
ret
cwtl
out
popw
mov
in
mov
std
mov
flds
pop
add
aam
leave
ljmp
cmp
add
cli
mov
pop
ds
cmp
aam
lret
fsubrs
test
and
sbb
or
cmpl
add
jl
data16
or
and
sub
jl
add
inc
testl
je
inc
movsb
mov
cmp
imul
popa
sbb
hlt
xchg
pop
or
xchg
fstps
icebp
sbb
pop
mov
outsb
scas
mov
stc
pushf
dec
gs
lock
pop
adc
dec
rcrl
cmc
jle
push
fwait
pop
outsb
xchg
into
dec
xchg
sbb
mov
hlt
jmp
fistl
mov
testb
decl
aad
push
cmp
test
popf
push
mov
cmp
mov
andb
cmp
and
dec
push
inc
xchg
imul
in
mov
lahf
rclb
popa
ret
jle
cmpl
sti
sub
clc
adc
cmp
cltd
add
stos
sub
in
jle
jmp
inc
xchg
in
movsl
push
lods
cmpsb
and
mov
cmp
shll
push
hlt
outsb
repz
test
dec
cmp
loopne
in
sbb
outsb
sbb
mov
addr16
popf
sub
stc
fwait
cltd
int
cmp
sub
pop
sub
dec
lret
adc
pop
mov
in
push
jo
mov
mov
dec
xor
aaa
je
dec
adc
xchg
dec
ret
push
sub
ret
fsubp
gs
cmc
aam
mov
mov
popf
pop
fiadds
lds
push
lods
je
jge
enter
les
sahf
out
or
sbb
xlat
add
out
jmp
hlt
xchg
lods
cltd
lods
movsl
xchg
dec
aad
xchg
scas
addl
inc
lea
adc
fdivl
les
mov
pop
les
sbb
mov
test
rorl
mov
sbb
or
aaa
xchg
or
fsub
shrl
imul
repnz
cld
push
pop
sti
or
test
mov
stc
dec
call
loope
xor
les
mov
cmp
sub
adc
fidivl
jns
mov
add
jnp
and
daa
test
inc
add
or
and
adc
enter
movsb
mov
sbb
cwtl
popf
pop
es
adc
repz
cmp
movsl
es
jnp
aaa
push
ds
or
pop
loop
xor
pop
shlb
xor
mov
pushw
sahf
jne
shll
adc
test
aaa
push
pop
fldenv
adc
es
test
ficompl
cs
ja
sbb
xlat
jp
or
mov
test
jmp
fs
mov
or
in
fimull
adc
shll
or
mov
cmpsl
popa
stc
sub
cmc
stos
loopne
loop
or
sbb
stos
xor
and
sarl
rcll
cmp
cmc
test
dec
push
cwtl
sub
js
push
dec
lock
cld
cltd
jae
sub
xor
iret
mov
inc
flds
mov
mov
cld
je
popf
dec
fcompl
inc
mov
sub
cltd
and
sarl
push
cmp
mov
fiadds
xsave
stc
sub
cmp
int3
ret
fldl
adc
out
cmpsl
call
push
xor
sub
pop
mov
std
aam
mov
adc
push
rorl
shr
insl
stc
aaa
jmp
pop
sub
mov
ljmp
int3
cmp
out
mov
and
add
je
jl
mov
mov
adc
add
mov
sub
dec
adc
push
rdtsc
stos
ret
mov
jbe
cli
xor
movsl
insl
fldl
jae
loopne
add
inc
aam
inc
push
xchg
imul
xchg
mov
push
in
fbstp
xor
cli
das
pop
adcb
and
push
and
xchg
cmp
cmpsb
inc
pop
syscall
and
jb
sbb
dec
cmp
fsts
adc
pop
push
andb
jbe
adc
xchg
hlt
imul
movsb
mov
sub
out
movl
push
and
loop
mov
mov
ds
mov
scas
neg
push
push
push
sub
imul
dec
sahf
jmp
fnstcw
dec
sbbb
out
outsl
insb
push
ret
icebp
cmp
in
mov
cltd
iret
mov
sub
mov
inc
mov
xor
dec
mov
fisubrl
testb
jbe
xchg
mov
dec
and
pusha
pop
lcall
xor
cmp
test
push
push
addl
mov
xor
or
mov
jne
fiadds
ss
mov
pop
pusha
sub
mov
pop
nop
jb
imul
xor
aad
les
mov
xchg
lret
out
add
jl
lcall
fsubrs
jno
fiaddl
cmp
pop
addr16
sub
mov
negl
or
jl
sub
loopne
mov
adc
jge
gs
mov
jbe
sbb
dec
enter
out
mov
mov
les
inc
jne
or
mov
adc
std
js
icebp
pusha
push
lea
push
add
or
jp
mov
imul
mov
sbbb
out
mov
jl
popa
xor
lcall
jle
fst
jnp,pn
mov
cmp
loopne
add
cmp
inc
addb
addb
add
adc
jge
ljmp
cmovnp
adc
jecxz
cmp
or
lret
bound
lods
in
xor
sub
dec
mov
mov
dec
lea
dec
pop
arpl
sbb
mov
xor
dec
pop
mov
das
cmp
jno
lods
jmp
mov
mov
mov
cmp
jo
mull
test
push
cmp
pusha
aad
inc
sub
rcrl
movsl
leave
jne
aas
add
lods
mulb
mov
das
scas
movsb
xor
jg
cwtl
mov
mov
xchg
mov
adc
lds
lret
popf
sub
iret
bound
hlt
inc
lods
fcmovb
mov
cmp
mov
lret
adc
jp
loopne
xchg
pop
push
sub
push
sub
movsl
scas
xchg
inc
test
cmp
mov
adc
out
or
pop
cli
jle
mov
mov
pop
popa
cwtl
leave
cltd
gs
pop
sub
sub
mov
lea
inc
push
xor
movsl
sahf
ret
cld
and
inc
xlat
repz
push
daa
aad
jne
pop
adc
ss
sub
adc
xorl
jg
add
push
test
add
cmp
popa
and
inc
gs
clc
ficoml
roll
stos
and
sar
daa
sbb
out
int3
adcb
call
fisubl
or
pusha
dec
sbbb
xor
je
mov
std
or
jb
mov
sti
mov
pop
fbld
sub
adc
jno
shlb
adc
stc
jmp
out
inc
pop
jne
pop
movsb
insl
mov
push
pop
adc
lods
xchg
pop
push
scas
rcrl
mov
mov
jbe,pt
faddl
out
sub
cltd
jae
das
mov
cwtl
inc
mov
adc
push
std
add
mov
rorl
xor
jle
out
or
fsub
mov
adc
jg
cli
dec
jl
lods
ficoms
repnz
sbb
faddl
in
adc
and
stos
pop
jmp
pop
mov
leave
push
xchg
dec
test
ret
mov
mov
sbb
pop
pop
icebp
sbb
and
ret
push
addl
mov
ds
inc
lret
fsubrp
cltd
pcmpeqb
push
sub
jg
mov
je
mov
lea
or
adc
inc
pop
insb
out
jbe
or
mov
pop
repnz
sbb
push
adc
lods
orl
cmpsl
sbb
inc
movsl
jae
jne
call
push
test
pop
cmpsl
fwait
cmpb
pop
xor
movsb
pop
test
clc
cwtl
pop
ja
mov
ror
cmp
es
and
jno
je
xor
loopne
cmp
cmp
cwtl
pop
std
jns
call
xor
sub
inc
mov
loope
iret
and
dec
das
pop
xchg
movsl
adc
sbb
lret
std
xlat
mov
jge
xor
dec
call
mov
mov
dec
jge
inc
inc
daa
nop
mov
out
call
xchg
inc
rcrl
mov
leave
jge
mov
dec
xor
add
daa
mov
sahf
stos
jbe
ss
xor
mov
ret
mov
mov
mov
stc
jle
mov
cs
sub
aaa
sub
stos
test
jbe
outsl
int
scas
outsb
std
lahf
je
cmp
dec
dec
mov
insl
push
mov
push
out
dec
nop
xor
stc
arpl
push
mov
add
shll
xor
shll
pop
in
lods
fstl
inc
push
mov
inc
repnz
aaa
jmp
mov
loope
push
ds
inc
bnd
clc
add
loopne
call
outsl
xor
mov
movl
inc
int
pop
out
or
roll
mov
cmp
popf
dec
sub
and
pop
cli
repz
mull
xchg
cld
ficoml
call
les
push
dec
mov
jno
mov
pusha
mov
fdivs
hlt
sub
add
and
adc
jno
in
hlt
psllq
adc
and
nop
pop
insb
ja
adc
arpl
call
or
sbb
in
push
and
xchg
cmpsb
rcl
adc
das
scas
push
dec
mov
shlb
and
adc
lds
pop
fisttps
push
jg
xor
ja
cmp
sbb
call
xlat
mov
aad
push
and
gs
out
push
mov
jge
lods
dec
xor
pop
adcl
add
test
andl
shll
iret
movsl
les
jbe
jmp
jmp
cld
bound
mov
popf
iret
or
les
daa
jp
std
cmp
inc
std
pop
mov
xchg
int3
push
jecxz
dec
mov
mov
jecxz
rorl
out
sub
outsl
out
fbld
rorl
sub
sub
xchg
je
or
gs
les
and
mov
shlb
int
sub
outsl
mov
enter
dec
out
sbb
mov
pop
lret
jno
mov
lods
scas
inc
pop
mov
push
repnz
jp
fdivp
sub
insl
pushf
adc
test
in
and
orb
jg
mov
jecxz
jae
mov
push
out
in
jl
and
mov
mov
sbb
cmp
outsb
lahf
dec
cmpsl
sbb
lret
jle
mov
push
fimull
sbb
mov
jle
cmp
push
icebp
sbb
xchg
jl
xor
pop
arpl
jmp
mov
mov
mov
mov
mov
adc
mov
xor
pop
adc
pop
fstl
mov
popa
and
mov
arpl
mov
test
adc
add
inc
fs
push
jle
push
jp
push
es
cs
imul
pop
jg
shrl
dec
and
lcall
icebp
and
imul
mov
jb
cmp
add
sti
mov
icebp
ret
cld
repz
int3
pop
pusha
stos
call
stos
jns
adc
sbb
stos
jle
shlb
gs
int3
mov
push
pop
sbb
and
xchg
and
outsl
inc
inc
in
into
test
pop
sub
lahf
das
xchg
cmp
push
add
sub
xor
hlt
fisubs
loopne
cmp
fdivr
fbstp
inc
pop
dec
ljmp
pop
cmpsb
inc
sbb
mov
call
jle
xor
add
shll
sub
cwtl
xchg
jno
lods
jg
lcall
xchg
cmp
ret
sti
mov
icebp
lds
sub
sub
arpl
pop
fsincos
lret
mov
stc
lret
std
ret
xchg
adc
test
stos
xor
loope
lock
inc
jecxz
mov
testl
fisttpll
movsb
jne
insl
xor
push
jno
test
rclb
xchg
pop
scas
outsl
sbb
in
pop
mov
outsl
or
add
fistpl
sub
mov
mov
repz
jle
pop
mov
cld
xor
enter
cld
cs
sub
push
std
jb
shlb
cld
cmp
mov
cmpsl
fwait
xor
cmpl
fwait
mov
mov
les
jle
test
push
lcall
pusha
and
pop
int3
xor
adcl
call
push
xor
hlt
cld
roll
fiaddl
notl
enter
scas
xlat
movsl
adc
mov
sti
js
orb
inc
dec
das
mov
inc
lea
int3
insb
test
xor
mov
or
addr16
or
repnz
inc
xor
mov
mov
pusha
sub
in
or
ret
leave
pop
sub
jnp,pn
add
adcl
daa
pop
xchg
int3
jo
jg
ds
test
adc
xchg
mov
arpl
std
nop
jle
repnz
lds
xor
push
addr16
inc
aas
xor
out
dec
out
mov
mov
adc
or
xor
jecxz
dec
das
ror
push
aad
pop
sti
popf
xchg
hlt
jne
mov
pop
movsl
xlat
loopne
loop
jge
sub
add
xchg
mov
cli
mov
push
pop
push
fcomps
pop
push
sub
aam
pop
notl
movsl
pop
sub
add
loopne
cmp
scas
in
xchg
inc
mov
insb
push
adc
pop
es
xchg
xchg
enter
add
or
idivl
test
inc
sbb
mov
mov
out
dec
push
mov
sahf
cs
jae
lret
ror
push
out
es
mov
notb
and
adcb
sub
mov
lods
xor
inc
push
fisttpl
mov
or
push
inc
add
mov
scas
mov
cwtl
adc
leave
arpl
in
stos
sbb
cs
scas
xor
outsl
lahf
int3
add
lods
inc
xor
test
and
movsb
rorl
push
lret
gs
jle
sarb
push
iret
or
sub
add
in
push
loope
shll
inc
cmp
addb
push
and
lahf
push
popa
xor
sti
test
stos
xor
or
arpl
push
mov
out
jns
fstpt
mov
outsb
xor
cmp
pop
jne
enter
sti
add
xchg
cmpsl
xchg
adc
or
xor
sti
bound
add
mov
fs
add
movb
pop
aas
inc
cmpsl
mov
inc
mov
mov
cmp
bound
sbb
pop
add
out
xor
std
mov
popf
xor
cmc
es
pusha
loop
cmp
push
jne
or
push
dec
mov
clc
xor
sbb
sti
pushf
push
sahf
pop
out
cmp
daa
xor
cmp
sbb
push
gs
test
imul
dec
sbb
add
push
sub
ss
pop
mov
jns
test
cmpb
sbb
inc
lret
mov
icebp
xor
push
jne
imul
mov
mov
outsl
xchg
sbb
mov
fcmove
cs
sbb
test
xchg
out
jge
mov
xor
mov
lods
pop
ds
leave
int
movsb
pop
cmpsl
xlat
push
inc
mov
ljmp
test
les
dec
into
mov
add
rorb
cltd
lods
stos
sub
xchg
loop
fwait
movsl
or
xchg
sub
mov
scas
sbb
nop
clc
pusha
and
jle
aaa
sbb
data16
out
das
pop
inc
lds
xlat
push
loope
ljmp
cmpsl
pop
sbb
xor
daa
jo
add
aad
add
adc
cmp
in
rol
icebp
add
arpl
loop
xchg
push
xchg
mov
and
jns
mov
insb
loopne
aaa
sahf
fwait
xor
mull
fadd
inc
push
xorb
addr16
hlt
out
pop
sti
ljmp
adc
lock
adc
xchg
dec
sub
mov
push
xchg
mov
or
xchg
pop
inc
push
enter
mov
es
xchg
sbb
inc
pop
push
push
and
add
xchg
sbb
gs
out
pop
movsl
mov
icebp
mov
add
pop
dec
sbb
mov
add
cmpl
mov
or
jp
xchg
or
push
jle
stos
xor
div
shl
or
jmp
std
movsb
dec
cmpsb
pop
push
sahf
fisubs
sarb
jl
in
pop
jg
loopne
shlb
popf
or
repz
or
out
inc
repz
pop
jmp
mov
sub
pop
popa
repz
jg
dec
out
mov
push
lret
movsb
or
pop
jno
cwtl
xchg
inc
cld
out
mov
flds
lock
ficoml
push
cmp
add
out
or
mov
mov
test
mov
les
and
pop
xorb
mov
int3
sar
mov
fwait
mov
jecxz
aas
fwait
out
je
out
jb
shl
pop
push
imul
mov
cmp
bound
jnp
add
mov
jbe
inc
fs
fdivrl
orl
inc
mov
sar
cli
adc
int3
popf
jno
dec
jb
ficomps
out
or
push
inc
decb
test
xor
lcall
data16
cli
inc
cmp
or
or
adc
sub
sti
rcrb
or
mov
stos
fwait
cmp
lahf
adc
cmpsl
aaa
adc
fwait
jge
jecxz
push
cwtl
jb
mov
push
inc
add
or
inc
out
shll
popf
clc
and
pop
stos
push
adc
sbb
rcl
mov
call
out
out
lret
arpl
push
jne
in
and
lret
jo
out
add
push
test
cltd
xchg
mov
xchg
or
sar
add
inc
jg
outsb
cld
ret
pusha
xor
in
dec
mov
add
das
xchg
add
pop
ret
aas
mov
mov
jns
mov
movsl
jge
insb
fnsave
js
pop
and
jns
xchg
adcl
inc
xor
sub
negb
and
movsl
dec
fdivrs
fcoms
xor
daa
ds
out
out
add
add
jge
mov
xchg
mov
out
leave
out
xchg
push
or
movsb
lods
pop
cmp
enter
mov
or
jb
jno
out
pop
rcr
xchg
es
mov
adc
imul
adc
inc
stos
test
jae
ja
mov
mov
jmp
mov
cmp
xchg
into
jg
out
sbb
xor
int
sti
or
ds
cmp
jo
adc
rcrb
jae
and
mov
sub
xchg
adc
jl
push
push
push
out
adc
insl
sahf
add
ret
inc
mov
dec
sti
arpl
out
mov
clc
mov
xor
pushf
mov
push
mov
andb
push
and
gs
add
jge
or
adc
cld
xchg
icebp
and
fdiv
mov
mov
mov
cmpsl
das
mov
aas
sbb
cwtl
mov
sbb
scas
add
inc
sbb
inc
repz
fnstenv
pop
aam
mov
mov
es
mov
scas
or
or
adc
out
xchg
divb
cmc
xor
adc
test
jbe
stos
mov
add
or
xchg
aad
lcall
add
mov
leave
mov
imul
dec
ret
test
inc
push
iret
ret
xchg
mov
decb
mul
fs
in
jp
jbe
push
daa
pop
push
test
xor
vphaddubq
idivb
pop
test
dec
xor
sahf
xor
loopne
cmp
out
pop
shl
into
ja
add
insb
aaa
repz
mov
mov
dec
inc
inc
xchg
inc
xlat
xor
and
ficompl
daa
jmp
jl
pop
xchg
int
push
pushf
stc
aad
xorb
fists
lret
xor
cmp
mov
loop
pop
les
aaa
cmp
shll
cmp
or
aas
stos
xor
test
cmp
sub
add
xchg
pop
pop
int3
cmp
mov
call
sub
clc
shl
lahf
push
scas
cmp
push
lret
movsb
jl
lcall
dec
mov
sbb
filds
jne
mov
jns
test
jo
sbb
or
pop
dec
pop
cmp
dec
pop
mov
divb
out
int3
inc
push
adcl
dec
push
shlb
rol
xchg
and
jnp
cli
out
out
sub
jo
and
cmpsb
mov
ret
jae
rcl
push
orl
jmp
imul
and
fadds
pop
aas
jne
lret
mov
ss
lea
addl
fildll
adc
xchg
add
cmp
xor
jns
int
xchg
cmc
insb
sbb
div
ljmp
xchg
lret
jg
and
int
xchg
xchg
jno
mov
inc
inc
lret
pop
std
jns
xchg
cli
cmp
lods
das
mov
xchg
fdivl
leave
cmp
and
stc
mov
push
mov
lahf
in
mov
int
mov
mov
call
daa
fisubs
rcll
pop
out
dec
ds
sub
and
mov
rclb
test
push
push
jae
out
inc
fstpt
fidivl
xchg
fcmove
xor
xchg
xor
sbb
push
sub
loop
outsb
mov
or
add
gs
adc
pop
and
push
lds
mov
loop
adc
xchg
nop
fs
mov
or
or
cmp
xorl
xlat
out
lcall
cmp
mov
enter
push
mov
adc
aam
ficoml
pop
pop
adc
jae
pop
daa
cli
ja
cmp
iret
pop
outsb
cltd
inc
das
cmova
push
lds
pop
hlt
pop
push
jne
xor
pop
fs
mov
cwtl
mov
test
subb
lret
data16
xchg
cmp
lock
xor
and
mov
test
xchg
pop
jbe
mov
ret
or
mov
xchg
push
mov
mov
adcl
lcall
loop
dec
clc
scas
mov
faddl
hlt
fists
adc
imul
mov
int3
push
fisubl
andb
mov
xchg
inc
not
enter
jge
xor
arpl
pushf
out
add
test
cmpsb
jp
pop
loop
sbb
std
test
push
pusha
subps
dec
jno
xlat
or
scas
push
mov
jp
pop
adc
xchg
xchg
imul
ss
ret
and
fxch
sub
add
pop
sbb
xor
sti
shl
xor
lret
and
arpl
xchg
fcoml
fs
ret
hlt
push
jle
adcb
fnstenv
sets
fadds
push
xchg
mov
dec
jns
push
dec
push
pop
inc
aad
int3
xchg
cs
push
int
add
rol
sub
adc
sar
orb
or
xchg
fwait
or
movl
bound
and
and
or
xchg
pop
xor
mov
stos
mov
cmp
dec
and
fs
popf
or
pushl
mov
jns
xchg
push
dec
fwait
push
jl
sbb
mov
adc
orl
clc
mov
gs
mov
mov
out
out
or
stos
push
fcmovu
ds
insl
pop
adc
gs
je
xlat
ja
idivl
inc
into
mov
push
dec
add
pop
cmp
aaa
cwtl
in
aad
xchg
pop
sub
sbb
sahf
bound
pop
fwait
mov
push
dec
pop
xchg
mov
sub
daa
dec
push
mov
clc
mov
add
sub
daa
in
aad
lcall
push
ret
xor
ljmp
lock
ljmp
test
sbb
icebp
pop
xchg
inc
push
push
push
xor
xor
outsb
aam
mov
lahf
subl
push
mov
adc
jg
mov
or
mov
ret
dec
inc
sub
fiaddl
js
cmp
sub
shrl
daa
ds
inc
push
aas
pop
arpl
or
stos
push
or
mov
push
jecxz
rcrl
test
shr
fwait
ds
mov
xchg
jmp
sbb
pop
and
or
mov
lret
jmp
jmp
push
bound
out
adc
dec
push
xchg
cld
fdivrl
pop
outsl
push
cwtl
stos
and
pop
popa
xchg
mov
add
in
add
mov
xchg
and
xchg
aad
je
push
cli
dec
cld
fsubrl
jle
jl
out
repnz
sbbb
and
outsb
je
sub
fisttps
cmc
shr
lret
cmp
adc
in
dec
jbe
movsb
shr
cmp
push
mov
cmp
leave
xor
popa
xchg
lods
pusha
es
arpl
das
cmp
add
cmp
cld
pop
outsl
pop
lock
in
je
push
inc
icebp
bound
ja
movsl
bound
int
add
jb
adc
std
mov
in
sbb
sub
push
pop
cmp
pushl
or
mov
aas
xchg
in
add
mov
rol
mov
xor
mov
and
inc
cltd
mov
mov
inc
dec
jns
cltd
push
fwait
pop
lea
sbb
or
adc
adcl
adc
xchg
jo
pop
dec
lahf
sahf
popa
movsb
sbb
inc
jne
mov
push
or
jmp
mov
fldt
call
mov
or
cmp
mov
cs
dec
jle
or
imul
mov
fisttpll
imulb
push
sbb
add
ss
enter
xchg
fiaddl
or
sarb
xchg
add
pop
push
xchg
lahf
std
fsubs
movsb
in
cmp
ds
and
mov
addr16
mov
sbb
aaa
ljmp
pop
sub
cld
xchg
addr16
mov
fcoml
std
push
fsubrs
xchg
pop
je
pushf
push
xor
xor
lahf
les
mov
hlt
test
or
dec
leave
ja
testb
lahf
xchg
add
das
mov
test
xchg
addr16
outsl
pushf
popf
pusha
test
mov
add
std
aam
xchg
inc
push
lods
test
jns
push
scas
adc
pop
adc
iret
mov
daa
mov
inc
out
lcall
mov
mov
sub
mov
lcall
xor
andb
cmp
lods
addb
jo
mov
pushf
or
mov
decl
ficoml
jns
mov
ret
das
or
jmp
jecxz
jecxz
xchg
inc
xor
xor
xlat
jge
push
or
lret
rolb
xchg
bound
push
mov
les
lret
lock
out
pop
pusha
fcoms
push
fs
pop
jg
sub
in
pusha
movsb
mov
push
shll
psubd
mull
sub
mov
mov
imul
and
jne
es
in
ret
push
lahf
jae
xor
enter
fs
xchg
idiv
imul
push
cltd
hlt
js
inc
dec
push
aas
push
cmpsl
nop
popf
push
lods
cmp
or
push
inc
jbe
testb
jle
aam
push
mov
inc
dec
int3
dec
adc
mov
fldt
adc
les
sbb
nop
call
and
enter
mov
mov
stos
jns
nop
incb
imul
ret
and
ret
add
or
mov
mov
cld
inc
xchg
repnz
push
sbb
mov
idivb
cmp
jp
mov
lret
sbb
cmp
std
imul
push
and
adc
sarb
jne
add
subl
mov
pushf
inc
addr16
mov
mov
daa
imul
jmp
mov
cli
xor
insb
cmp
mov
xchg
ret
inc
icebp
js
pop
repnz
fs
jl
adc
mov
cmpsl
mov
sarl
mov
push
loope
pop
stos
inc
shlb
mov
sub
sub
lret
xor
sub
xorb
orl
adc
imulb
fisubrl
out
push
mov
sbb
cltd
lock
je
mov
jge
movsl
inc
dec
hlt
loop
dec
dec
lea
sub
adc
push
je
ret
mov
dec
inc
fildl
daa
xchg
sub
fidivs
jnp
adc
mov
dec
lret
push
mov
jns
cmpsl
push
fiaddl
fimull
movsl
loope
lret
cmp
cmp
test
leave
loopne
dec
lret
icebp
in
or
jbe
rorl
mov
push
subb
mov
jg
outsb
imul
lods
rcrb
sbb
pop
out
push
fdivrp
push
arpl
stos
jo
sbb
xchg
in
shlb
sti
mov
push
repz
mov
push
mov
mov
cmpsl
xor
iret
pop
mov
shlb
inc
mov
inc
jo
test
incb
sarb
sahf
jle
inc
loope
mov
push
pop
dec
cmp
out
jbe
cmp
ret
add
ret
xchg
push
and
push
cmp
sub
xchg
xor
bound
sahf
xchg
add
pop
sbb
xor
arpl
inc
call
jmp
call
adc
imul
xchg
sub
sbb
les
in
jno
aad
cltd
mov
sahf
mov
cld
push
xchg
or
ljmp
fs
ss
cmp
pop
ja
cmp
int3
or
das
push
in
mov
test
nop
xor
ljmp
push
outsb
inc
in
fwait
pop
cmp
in
xchg
insb
and
call
push
mov
mov
mov
mov
shrb
cld
xor
leave
add
cs
into
mov
sbb
xchg
jne
inc
into
and
mov
sub
fstl
xchg
rorb
aaa
sti
stos
icebp
cli
call
stos
xchg
sub
inc
bound
js
xor
mov
inc
outsl
cmp
fildl
sub
stos
mov
lcall
xchg
push
mov
cmp
gs
cmp
popa
cmpsl
in
dec
aas
clc
stc
enter
aas
push
cltd
jno
lret
add
stos
dec
push
in
out
nop
out
test
insb
mov
test
or
rol
sub
xor
jmp
das
dec
je
js
mov
pop
jmp
and
outsl
hlt
cmpsb
xchg
imul
jecxz
test
inc
clc
sub
or
mov
in
mov
shrl
mov
movsl
cmp
fisubrl
in
es
mov
stos
shll
aas
out
das
jecxz
add
jge
push
scas
sub
outsb
sahf
cmp
data16
sub
mov
ret
pop
xchg
sub
cmp
push
imul
pushf
outsb
iret
clc
cmc
jp
into
or
sub
addr16
popl
in
or
jp
xor
xor
pop
adc
fdivrs
mov
icebp
fmulp
test
std
xchg
popa
mov
add
lcall
fsubr
push
mov
push
test
mov
scas
add
push
xor
add
shl
pop
jl
sbb
mov
mov
out
out
mov
insl
dec
icebp
fimull
cwtl
test
mov
sahf
test
mov
cs
ja
or
in
insl
mov
cmpsb
mov
imul
mov
sbb
leave
insl
xorb
mov
push
add
sub
adc
test
dec
sub
nop
pusha
mov
add
outsb
aad
push
add
mov
cmpsb
ljmp
inc
jecxz
ja
stc
outsb
jl
xor
hlt
stos
rclb
pop
cmc
xchg
inc
rcl
imul
jle
mov
ja
mov
jl
mov
cmp
sbb
add
ret
jae
sub
pop
fsub
and
pop
hlt
call
cmp
and
push
outsl
pushf
mov
ss
lods
dec
imul
sub
mov
fstpt
ret
and
stos
or
out
out
stos
xor
test
jb
xchg
dec
push
in
dec
xchg
mov
sbb
push
roll
mov
clc
loopne
loopne
push
ret
out
mov
mov
fwait
inc
out
inc
scas
cmp
scas
xor
sbb
xor
jo
mov
xchg
and
and
cmp
mov
inc
mov
pop
inc
dec
push
cmpsl
dec
adc
add
push
and
pop
aaa
fst
js
sbb
fnstcw
mov
aad
pop
dec
cli
and
loope
outsb
sub
jo
xchg
shlb
and
gs
mov
iret
and
jne
xchg
int3
cmpl
aaa
in
call
inc
mov
mov
ret
mov
nop
mov
repnz
dec
pop
mov
test
cmp
lcall
iret
lods
aad
sbb
push
bound
inc
sub
xor
out
xchg
push
lods
sbb
lcall
jl
int3
test
pop
push
in
dec
fcoml
push
cld
lahf
jno
and
pop
pop
cwtl
push
push
mov
dec
enter
push
aad
push
in
pusha
xor
imul
jbe
xor
pop
push
ret
jne
xorb
iret
push
sub
fdivrl
cmp
dec
nop
inc
sub
cmpsb
or
dec
xor
xchg
mov
repz
pop
dec
in
call
lret
aaa
in
icebp
or
inc
lds
lods
into
push
push
pushf
mov
bnd
xchg
fcoml
inc
lcall
scas
inc
loop
and
sbbl
or
int
movb
in
push
mov
pop
clc
add
ret
jo
add
push
push
cmp
and
add
xchg
add
out
sbb
ja
xor
scas
gs
lds
jae
jb
rcrb
ret
pop
out
int3
into
dec
test
icebp
xchg
call
cltd
xor
das
xlat
bound
sub
shl
pop
in
sub
cmp
adcb
stos
or
push
xchg
inc
lret
and
das
cld
push
out
fistps
or
xchg
lea
pusha
addr16
cld
xchg
xchg
xor
push
adc
loopne
pop
mov
inc
adc
into
popa
xchg
ljmp
pop
or
js
rorb
sbb
fcmovnb
dec
mov
faddl
cmp
addr16
sarl
pminsw
pop
jo
mov
mov
rorb
repnz
push
sbb
and
repnz
inc
shll
jne
or
iret
sbb
add
xchg
cwtl
xchg
jns
add
add
xlat
cld
adc
jmp
fisubs
stos
lcall
mov
or
pop
xchg
dec
jge
jae
adc
icebp
sub
faddl
or
inc
cld
int
pop
mov
add
shrb
bound
add
call
mov
xchg
lret
jne
ror
es
subl
fcomip
and
sbb
xor
jo
xor
cwtl
aam
or
repnz
inc
jbe
leave
loopne
cli
mov
inc
pop
out
xchg
out
mov
mov
dec
adc
cltd
push
pop
push
outsb
mov
fiadds
or
dec
dec
push
xchg
dec
dec
push
fcmovnbe
mov
adc
movups
mov
mov
int3
popa
stos
out
jg
lods
pop
into
iret
pop
enterw
fisubs
dec
imul
fisttps
push
cmp
outsb
add
clc
mov
dec
and
pop
lods
pop
mov
xchg
mov
imul
faddl
adc
mov
mov
and
xor
sbb
adc
add
jge
stc
or
aam
pop
int3
inc
cs
inc
mov
rcr
or
jns
mov
push
out
ret
ds
adc
ret
or
push
fimull
jl
pop
mov
sti
jo
sbb
out
ljmp
int
mov
imul
sbb
sbbl
mov
mov
leave
add
jmp
pushf
mov
out
push
jecxz
into
mov
cmpsl
inc
es
pop
test
mov
xchg
test
xor
cmc
shlb
cltd
scas
nop
call
out
je
hlt
add
iret
shrl
inc
hlt
add
out
cmp
inc
mov
or
orb
and
mov
ret
data16
adc
mov
ljmp
mov
jnp
aad
aam
cmp
test
push
mov
xor
stc
jne
inc
sbb
jmp
xchg
enter
mov
xor
mov
pop
outsl
mov
sub
cmc
std
or
cmp
or
or
ficoms
inc
test
cmp
in
mov
jne
jmp
les
mov
xchg
aam
ficomps
mov
mov
movsl
adc
push
xor
rclb
test
dec
ret
xor
out
or
das
cmp
sbb
popl
data16
pop
pop
out
imul
movsb
imul
iret
call
jmp
jb
and
outsl
mov
sbb
inc
fs
or
mov
push
jae
sub
push
daa
outsl
add
jp
jp
ja
jmp
push
pusha
mov
jmp
das
es
cmp
push
repz
adc
mov
test
mov
into
pop
push
outsb
cs
and
mov
test
push
fmul
fstpl
sbb
cltd
popa
inc
stos
sub
or
lea
xlat
jp
cmc
inc
sahf
sub
daa
lahf
test
jo
dec
mov
sbb
rcrb
out
movsb
jge
js
sub
sbb
ljmp
test
dec
loopne
lock
mov
cli
and
jecxz
aaa
jno
mov
call
lock
jno
btr
mov
aam
mov
rcr
lret
xor
shlb
aad
ja
fbstp
js
inc
imul
mov
mov
sub
aad
inc
jmp
frstor
push
fistpl
push
xchg
lock
push
cmp
cmc
insb
or
pop
ja
sbb
fs
ds
pop
add
or
out
rorb
into
pop
movsl
popa
rcrl
jmp
test
adc
mov
aam
ror
fs
pop
data16
jne
add
mov
pop
inc
push
mov
ror
sbb
movsb
pop
mov
adc
cmp
jl
inc
xchg
push
cmc
ret
cmp
cmp
loop
dec
jge
dec
add
popf
adc
paddd
push
mov
lods
xchg
arpl
addr16
add
addr16
test
and
jecxz
outsl
arpl
movsl
dec
dec
mov
and
out
add
xchg
inc
out
push
mov
jmp
xor
insb
inc
push
clc
mov
inc
dec
add
sbb
mov
add
arpl
outsl
js
adc
sub
fimuls
shlb
inc
scas
lcall
imul
jns
pop
mov
jle
mov
mov
imul
xor
jbe
mov
jb
inc
xor
add
mov
mov
jno
or
push
jle
jnp
push
or
jae
lods
into
es
push
inc
pop
mov
mov
push
mov
pop
add
popa
enter
add
ss
pop
push
arpl
aaa
adc
aad
in
inc
xchg
mov
mov
test
or
sub
inc
stc
xor
lods
lahf
shlb
test
jle
lret
jecxz
iret
sub
xchg
imul
cmp
int
add
sbb
inc
pushf
sarl
push
cmc
outsl
idivl
sbb
mov
pusha
into
popa
lcall
and
jmp
test
aas
shlb
push
xchg
sahf
lret
cmpb
mov
xchg
ljmp
js
adc
mov
or
dec
and
rcrb
cwtl
ret
ficoms
ljmp
ljmp
jbe
test
or
xor
sti
pop
jbe
lret
jns
cmc
mov
gs
and
or
mov
roll
dec
and
insl
mov
aad
fwait
sbb
cmp
jb
sub
jne
xor
add
mov
cld
xorl
in
xchg
mov
pop
insl
js
fwait
adc
rcrl
lcall
in
jge
mov
pop
mov
cmp
movsl
mov
or
insl
mov
rorb
adc
aad
push
cwtl
imul
inc
push
cmpl
fwait
add
stc
stc
pop
jae
es
in
in
loope
push
testb
outsl
xchg
repz
sub
test
xlat
cmp
es
xor
sbb
jae
scas
sbb
pop
out
pop
fdivl
xchg
inc
lds
or
cltd
into
jae
jno
adc
cmovnp
imul
cs
stos
sahf
loope
lret
mov
mov
jg
shrb
add
add
pop
out
sbbb
cli
popf
cmpl
sbb
sub
cwtl
addr16
mov
and
dec
jo
sbb
push
dec
inc
stos
lea
and
mov
out
out
ljmp
jecxz
outsl
mov
add
scas
popf
sbb
cmp
leave
fistpll
jnp
cmp
out
pop
out
sti
jp
mov
test
push
lgs
loope
leave
popf
roll
inc
jecxz
gs
loope
scas
jb
xor
xchg
leave
loop
bound
and
lds
sbb
vrcpps
mov
mov
lret
mov
fidivrs
inc
insb
mov
add
sbb
shrl
cmp
cmp
inc
mov
mov
add
and
jns
lock
maxps
dec
mov
cmpsl
imul
mov
cld
bnd
fdivrs
lock
jbe
push
xchg
imull
or
pusha
xchg
fs
lret
mov
xchg
cltd
insl
xor
mov
bound
and
gs
mov
sub
sar
xlat
mul
data16
xchg
mov
sub
jecxz
aad
mov
xlat
inc
cmp
jmp
or
push
out
sbb
mov
mov
pusha
cltd
aas
mov
pinsrw
scas
js
xchg
pop
jle
push
mov
inc
call
out
push
js
add
xchg
inc
into
loop
xchg
rorl
test
add
imul
mov
add
ret
shlb
rorl
sbb
sub
cld
test
adc
aam
shlb
inc
pusha
mov
in
rorb
pop
aas
imul
pop
mov
cmp
mov
sbbb
mov
pop
cmpsl
loop
aaa
sub
or
lea
and
popa
sahf
sbb
inc
icebp
add
mov
cmp
xchg
sbb
divb
nop
pop
dec
or
addl
and
jmp
jmp
or
push
mov
imul
insb
dec
xlat
fwait
stos
es
das
inc
rclb
mov
mov
lret
icebp
mov
push
mov
decb
xor
call
jns
adc
inc
cmc
mov
cs
lods
pop
outsb
sub
mov
testb
fcmove
mov
ret
sbb
sbb
sub
outsl
add
jmp
test
ret
test
sbbb
adc
dec
and
fsubrs
xchg
les
pop
mov
pop
sti
das
and
push
mov
adc
lcall
gs
jg
aam
ret
nop
arpl
cs
scas
jg
jmp
dec
in
pop
pop
or
ret
repnz
mov
cmpsl
xor
xlat
hlt
pop
mov
inc
xor
out
jnp
xor
mov
add
push
jne
movsb
fcoml
aad
mov
ss
inc
out
lock
adc
shl
sbb
cwtl
imul
in
inc
out
cmp
loopne
in
inc
iret
les
daa
call
cmp
enter
rcrl
sti
mov
dec
dec
dec
xor
lahf
dec
inc
fildl
push
cmp
dec
rolb
inc
sub
jno
jecxz
push
xor
sti
or
rclb
pop
lds
jp
in
cs
pop
test
loope
outsl
sub
fcom
mov
cld
dec
inc
adc
aad
push
ja
jo
mov
jno
add
push
test
pop
jmp
repz
cmc
jge
popa
mov
lret
lret
pusha
xchg
jo
push
mov
inc
xchg
mov
sub
out
repz
cmp
xchg
mov
das
lock
jg
imul
xchg
rcrl
sbb
bound
std
mov
or
xchg
xor
add
push
out
fwait
mov
mov
xchg
insl
cmp
or
dec
xchg
dec
cli
mov
fidivl
xchg
cmp
or
outsl
add
fsubr
dec
pop
fsubl
inc
jle
lods
into
enter
xchg
jb
adc
jmp
arpl
add
pop
and
jnp
pop
rol
mov
inc
cmpsl
push
dec
adc
push
or
das
inc
xchg
cmp
cwtl
je
pop
scas
add
popa
jmp
or
mov
xchg
push
shl
test
fistpl
sub
dec
mov
leave
push
adc
push
ljmp
push
sub
mov
fdivrl
jbe
adc
mov
jnp
lds
add
mov
push
mov
stc
adc
push
push
dec
icebp
cmc
cs
inc
int
xchg
or
mov
xor
and
cltd
fiadds
mov
xor
push
dec
lods
mov
adc
add
loop
adc
daa
or
imul
mov
insl
incb
cmp
and
insb
fcmovnbe
out
icebp
push
ret
pop
add
fldl
sahf
mov
xchg
int3
out
lahf
mov
jp
add
sahf
pop
push
lods
sbb
pop
fistps
jb
xchg
push
pop
dec
xor
and
jmp
mov
jo
out
lods
icebp
push
add
xor
hlt
push
insl
aam
clc
lods
addb
std
jns
ja
jae
pop
mov
out
push
sub
xchg
jb
bnd
cmpsb
aaa
or
jg
popf
lret
and
imul
int3
jmp
jno,pt
leave
stc
or
push
adc
cmp
mov
subb
push
popa
adc
xchg
movsb
pop
bound
sahf
push
arpl
sbbb
fcoml
inc
pop
scas
outsb
or
xor
jbe
sub
movsl
mov
and
leave
les
lret
pop
mov
aaa
std
outsb
mov
fmull
lahf
jge,pt
pop
jle
pop
add
pop
or
mov
dec
push
pop
lcall
xor
mov
lret
jmp
pop
clc
repnz
dec
insb
aad
or
adc
push
pop
jnp
add
mov
test
xchg
int3
idivb
jbe
push
and
push
xor
mov
mov
xchg
push
pusha
hlt
mov
popf
test
sub
stos
bnd
out
loop
dec
mov
mov
xchg
mov
clc
mov
jo
dec
pop
inc
pop
outsl
xor
inc
dec
mov
jle
stos
dec
and
or
jns
mov
lret
jbe
add
mov
clc
jp
jo
add
inc
xchg
mov
xchg
sbb
mov
lcall
imul
mov
push
and
arpl
push
ret
icebp
mov
adc
scas
insb
imul
ja
aad
jb
pop
dec
stos
dec
nop
bound
outsb
adc
add
sub
daa
fiadds
test
inc
es
in
movsl
xor
sbb
icebp
mov
cld
sub
mov
and
lods
push
jne
cmp
bswap
jge
nop
sbb
mov
push
cmp
fmulp
lcall
or
adc
inc
dec
xchg
mov
fs
xor
movsb
rolb
jg
pop
sub
add
lods
mov
dec
pop
arpl
js
sar
lock
mov
xlat
in
add
xchg
cmpsb
inc
frstor
pusha
ja
imull
pop
adc
lret
jns
lret
adc
rcr
aam
pushf
jnp
mov
cld
cmp
lcall
xchg
mov
and
lds
add
jns
notb
push
test
inc
cmc
jb
mov
cmpsb
outsl
or
and
jo
pop
int3
pop
push
rcr
cmpsl
cmpsl
mov
dec
sbb
sbb
mov
sbb
mov
or
cld
cwtl
push
repz
pop
mov
in
add
xor
cld
sub
sub
inc
outsb
xchg
mov
call
cmpsb
shrl
jne
les
inc
dec
scas
fimull
adc
std
and
rcrl
jns
cmp
pop
adc
and
mov
push
aas
lcall
andb
jno
jge
jg
pop
inc
or
nop
mov
pop
int3
add
jmp
jns
test
pusha
sbb
imul
pop
cltd
jbe
mov
mov
adc
push
rcr
mov
mov
adc
sub
and
popa
inc
lahf
xchg
mov
mov
imul
ja
xchg
pop
xor
fs
daa
pop
lods
sbbb
mov
push
loopne
inc
pop
dec
sarb
xchg
fwait
enter
cmpsb
push
aad
cmp
mov
movsl
into
jb
cmp
push
cmp
addr16
repz
fwait
cmp
test
js
sub
subb
imul
mov
mov
mov
xchg
sub
rcrb
fisttpll
cmp
enter
xor
aam
add
xchg
das
or
popa
sub
outsb
flds
adc
add
mov
inc
pop
lret
lea
push
cmp
adc
mov
pop
pop
and
loopne
mov
in
jge
push
adc
ja
jb
pop
mov
shrb
scas
jb
and
mov
scas
testl
and
fisubl
or
vmovupd
xchg
test
xor
xchg
aam
aas
aas
pop
mov
test
inc
mov
xor
mov
mov
fwait
pop
cld
and
cmp
dec
and
fists
mov
lahf
dec
int
jge
adc
mov
lock
pop
lret
push
sbb
push
jmp
je
into
cmp
scas
insl
cmp
ds
mov
mov
int
mov
lods
dec
adc
lods
lcall
pop
repnz
pop
fmull
add
stos
out
pop
jmp
dec
fwait
xchg
cmpsb
jp
push
inc
and
sub
cli
scas
jge
in
lahf
decl
add
into
adc
dec
fcomps
pop
xor
dec
sbb
cltd
xchg
xor
sub
stos
pop
rcll
imul
call
ljmp
mov
inc
jne
mov
das
cmp
mov
adcl
lds
loop
jl
push
js
inc
add
stc
into
repnz
sbb
nop
das
shll
lock
js
outsl
scas
push
popa
sub
test
sub
aaa
cmp
cmp
or
pop
ja
mov
jg
push
cltd
add
sbb
sti
xchg
test
lods
pop
fimull
jns
aam
in
xchg
dec
inc
or
leave
mov
leave
adc
jae
add
xor
iret
push
ja
fcoms
xor
and
jnp
mov
add
dec
aas
adc
pusha
jg
in
cld
adc
mov
sti
push
stos
popa
mov
shrl
push
push
pop
mov
mov
mov
ja
in
jbe
adc
and
cmpsl
idiv
cmpsb
inc
subb
pop
loopne
inc
inc
js
lea
add
xchg
mov
enter
mov
mov
clc
fnstsw
pop
imul
cli
jo
xlat
pop
pop
xlat
movsl
and
xor
subl
mov
out
mov
xchg
mov
imulb
in
fdiv
add
ja
pop
pop
cwtl
push
xchg
test
pop
xchg
fcomps
add
or
mov
dec
mov
mov
jg
repz
sbb
mov
jb
or
and
aaa
sbb
cmc
dec
xchg
out
dec
push
jg
lea
jge
orb
and
movsb
lea
pushf
mov
mov
out
out
pop
xchg
cltd
dec
mov
fiaddl
ja
aas
ds
popa
cltd
fwait
push
xor
add
mov
in
repnz
int
adc
xchg
sub
xchg
arpl
pop
add
add
cmp
pop
pop
call
dec
cmp
mov
pop
js
in
mov
sbb
mov
adc
enter
or
ss
jge
pop
mov
sub
lret
hlt
cmp
movsl
sbb
pop
and
jge
cmp
ja
mov
pushl
mov
mov
mov
jae
xchg
adcb
lods
stc
mov
fwait
xor
aaa
loope
add
rclb
mov
and
sub
mov
fsubr
scas
incb
and
int
adc
or
arpl
loopne
mov
les
jo
mov
and
jecxz
and
insl
aam
mov
iret
jb
mov
in
pop
cmp
testl
or
test
orl
pusha
mov
lahf
mov
jmp
fmull
arpl
xor
cmp
mull
cmp
sbbb
xchg
jg
xchg
inc
fwait
sub
ja
jae
rolb
or
xor
fsub
xchg
hlt
mov
rcrb
std
and
in
mov
xor
push
push
mov
jo
mov
jnp
dec
push
jnp
repz
fcmovnu
sub
and
push
cld
sub
test
int3
add
int3
inc
stc
sbb
pop
sti
sub
xchg
in
jns
in
loope
mov
add
push
leave
sahf
outsl
jge
xchg
jbe
arpl
cli
inc
cmp
outsb
sub
cmp
pop
mov
mov
aam
cmp
push
mov
inc
fnstcw
icebp
add
xor
fstl
out
fdivs
add
adc
inc
ret
jecxz
fsubp
testl
movsl
dec
out
pop
mov
ret
cmpb
movsb
pop
jmp
xchg
stos
adc
rolb
dec
stc
mov
xchg
push
out
shll
xchg
aam
or
arpl
mov
gs
push
jb
sub
int
frstpm(287
shrl
jbe
xchg
scas
pop
inc
subl
scas
or
lods
add
movsl
push
cmpsb
rcl
test
cld
imul
cmpsb
cmpsb
mov
jnp
je
adc
imul
stc
xchg
pop
fisubrs
xchg
jmp
movsb
test
jno
test
jecxz
insl
out
push
pop
loop
inc
and
jl
shll
cmpb
mov
pop
fdivrs
repz
add
in
xchg
xchg
arpl
xor
out
inc
shlb
push
out
add
xchg
aad
jo
jnp
cmp
jne
loope
outsl
loop
insl
or
or
or
mov
pop
xor
es
in
xor
stc
aaa
dec
je
fsubs
mov
scas
cmp
or
fwait
push
and
mov
dec
cwtl
add
das
cmp
xor
mov
mov
in
dec
and
cltd
mov
inc
into
inc
fsubr
out
xchg
ljmp
nop
cmpsl
lock
inc
outsb
and
fildl
and
outsl
add
push
sub
dec
arpl
pop
rorl
scas
push
enter
fs
insb
into
jecxz
mov
daa
negb
or
nop
push
ret
mov
pop
roll
lds
fidivrs
jo
mov
fwait
jg
inc
test
lahf
lahf
mov
js
push
sbb
xor
iret
dec
lea
sahf
inc
stos
inc
mov
jae
inc
sbb
stc
scas
and
dec
iret
pop
add
sub
mov
push
movsb
repnz
and
decl
je
mov
repnz
and
add
cld
arpl
mov
insl
mov
test
adc
push
mov
push
mov
jns
inc
sbb
pop
imul
or
pop
add
cmpsb
adc
jae
jnp
sarb
mov
cmpsb
sbb
adc
mov
stc
dec
sub
cmc
xor
pop
and
mov
cmp
and
add
gs
adc
rorl
aaa
cmpsl
int3
fwait
and
jg
jg
xchg
mov
aad
mov
rcll
xor
es
push
mov
xchg
xchg
pop
aam
or
xchg
push
push
mov
movsl
sub
int
or
cmp
outsb
cmpsb
stc
stc
jge
jecxz
sahf
and
pop
add
loope
adc
aam
insb
repnz
int
dec
dec
and
loop
pop
dec
js
push
mov
sbb
push
sbb
jle
aaa
push
adc
rep
push
xor
xchg
jo
nop
jns
push
mov
push
pushf
sbb
mov
adc
aam
jbe
nop
addr16
or
das
xchg
cmp
adc
sub
sub
dec
adc
adc
nop
fs
dec
dec
or
push
push
ss
push
out
popl
add
lods
ja
or
sbb
xchg
and
sbb
add
xchg
cmpsl
and
jno
mov
xchg
inc
nop
jns
sub
inc
fsts
xor
push
divl
jns
push
xor
outsb
stc
inc
imul
cld
jecxz
lods
daa
cmp
mov
cltd
adc
fsubrs
mov
loope
sub
push
movsb
add
sbb
and
jne
lea
aad
std
jg
xchg
xchg
mov
ja
cld
sub
mov
jge
pop
stos
dec
mov
xchg
nop
push
mov
jmp
sahf
mov
lret
push
cmpsb
cmp
fdivrp
test
add
cmp
pushf
data16
fdivrs
mov
xchg
push
ret
or
mov
and
dec
out
rcll
adc
nop
in
adc
daa
push
loope
adc
aad
push
insb
subl
mov
call
popf
mov
dec
dec
fisubl
in
sbb
test
jne
addr16
mov
sub
jmp
repz
cs
stc
fnsave
cmpsl
leave
mov
sub
sub
dec
hlt
hlt
inc
clc
add
dec
inc
mov
lods
push
sahf
cs
cmp
leave
push
stc
lock
test
loope
loope
adc
incl
pushf
inc
sar
pop
imul
add
movl
mov
movsl
mov
ret
loopne
xor
mov
dec
jns
push
dec
nop
and
repz
jne
addb
xchg
mov
ds
clc
not
or
and
in
push
cltd
pop
adc
adc
jg
push
in
sbb
sub
push
aam
movsb
lods
push
scas
std
adc
inc
ljmp
dec
cs
outsl
jle
rcr
xchg
lock
pop
cli
lea
lret
push
testl
repz
filds
push
hlt
gs
adc
dec
cmp
loope
cld
js
jo
in
jns
js
in
cmp
inc
cld
nop
xchg
mov
push
popf
jae
nop
or
jecxz
sbb
sub
sbb
scas
jo
aaa
push
into
pusha
dec
inc
jmp
mov
int
nop
insl
test
jns
xor
adc
fs
or
ret
cmp
xchg
je
dec
jno
imul
xchg
xchg
dec
pop
pop
mov
inc
mov
hlt
add
jge
pushf
addr16
mov
sahf
sti
or
jge
inc
and
add
mov
mov
xor
pop
jmp
imul
jmp
lcall
lahf
xlat
mov
cmp
and
push
push
mov
mov
rcrl
push
sbb
mov
mov
insb
jge
ds
push
cmp
mov
xchg
fucomi
sbb
mov
shl
inc
enter
inc
push
shl
popf
popf
rorb
data16
arpl
adc
xchg
enter
fcom
pop
ret
or
jb
shrl
cmpsb
adc
xor
or
mov
adc
lods
xchg
pop
pop
xchg
sahf
rcrb
dec
pop
xchg
inc
push
clc
lret
lock
xchg
lret
jb
out
cmpsl
adc
mov
fdivrl
or
xchg
in
add
pop
adcb
ret
mov
shr
testb
inc
xchg
jbe
call
test
sti
imul
adc
sbb
lds
inc
mov
out
sub
and
and
lcall
cld
lret
pop
fs
enter
cwtl
mov
xchg
jge
sub
test
out
in
pop
lods
sub
insl
out
xchg
ret
cli
push
mov
inc
scas
push
lcall
aaa
dec
lods
imul
test
xchg
xor
ds
sub
into
test
jg
lods
xchg
stos
and
iret
outsl
stc
fistl
mov
test
loope
cmp
mov
push
lods
xor
outsl
mov
fcomi
add
out
cmp
pop
shll
add
test
pusha
push
enter
repnz
mov
rolb
insl
pop
movsl
out
mov
push
mov
cmc
mov
xor
decb
mov
pop
test
cmp
je
mov
shlb
push
fs
xor
ret
and
shll
fs
insb
sub
sbb
fdivr
pushf
and
shl
add
cld
lcall
lret
cmp
add
imulb
fs
test
adc
je
scas
ret
cmp
stc
adc
xchg
xchg
fs
mov
jmp
dec
push
je
shll
fstps
lret
nop
aad
jae
hlt
xor
pop
push
mov
push
pusha
notl
cwtl
clc
xor
mov
add
push
in
adc
aad
mov
imul
jmp
test
xchg
or
mov
add
scas
dec
rcl
rcr
into
stc
mov
mov
in
mov
or
mov
add
dec
dec
mov
nop
mov
fs
adc
int3
cmpsl
xor
scas
push
pop
cmpsl
sub
add
lds
fwait
cmp
mov
fildll
insb
mov
movsl
sub
pop
adc
mov
cmp
fsubl
adc
push
ljmp
sub
sbb
in
mov
mov
adc
sub
les
enter
gs
mov
and
add
ds
inc
cmp
cmp
lcall
call
mov
je
shl
in
outsb
stc
push
leave
sub
or
mov
or
addr16
sbb
add
jmp
xchg
add
mov
jae
xchg
inc
hlt
pop
push
cmp
fcoml
test
loope
or
pop
shl
lods
das
jbe
adc
inc
sub
jge
mov
fisttpll
or
cltd
dec
cli
mov
dec
jle
xor
mov
push
aam
inc
sbb
repz
ret
imulb
mov
jp
push
loope
ret
lods
bnd
xor
mov
sub
jno
out
test
cmp
pusha
in
push
adc
mull
out
push
je
loop
add
jle
dec
cltd
lret
mov
mov
or
inc
pop
imul
pop
aas
test
xchg
xor
outsb
aas
rcr
jcxz
mov
xchg
shrb
fdivr
div
rcrl
dec
and
movsl
enter
enter
decl
dec
push
loop
lock
xchg
mov
repnz
mov
lds
sub
bound
jb
mov
fcomp
inc
clc
and
iret
add
add
push
aam
sbb
mov
cmpsb
xchg
das
ds
cmpsb
adc
nop
leave
fcoms
in
lods
shll
lds
sahf
scas
adc
sub
lock
outsl
xchg
test
sbb
xchg
add
mov
dec
mov
or
adc
outsb
add
repnz
sub
jge
arpl
jg
lret
test
lret
jne
sbb
cld
movsb
loopne
jl
or
push
rcll
mov
inc
popa
jmp
out
mov
ret
push
or
jo
or
add
push
test
jecxz
mov
push
int3
jp
mov
cmp
dec
adc
jns
mov
into
movsl
mov
sbb
rorb
adc
adc
jmp
repnz
pop
in
inc
incl
xor
push
xchg
add
add
or
mov
cmp
sahf
sbb
push
pusha
call
mov
sti
les
or
pop
add
les
jge
or
inc
xchg
mov
xchg
and
xchg
gs
adc
xchg
xchg
mov
mov
cmp
cltd
pop
and
lods
jae
sub
add
ret
ja
push
mov
jp
leave
je
in
push
jno
imul
xchg
dec
mov
subb
filds
cmp
add
fwait
mov
fisubs
je
cmp
push
jg
int3
pop
idivb
cmp
mov
push
movsb
into
xor
add
rcrl
mov
out
sub
xor
xor
ret
clc
inc
mov
faddp
ret
out
shll
repz
push
inc
dec
sbbb
and
xchg
shrb
and
jle
outsb
test
add
mov
sti
cmp
push
leave
cmc
jmp
push
jle
and
in
ret
mov
push
push
rclb
sbb
jmp
test
in
inc
outsl
stc
cmpsl
negb
push
xchg
sub
and
fld
mov
lret
popf
xchg
sub
pusha
mov
sbb
mov
or
pop
loope
jle
ss
mov
stc
jge
cmp
and
xor
push
movsb
lods
outsb
sub
loop
out
push
push
sub
mov
xor
enter
push
loopne
adc
jle
xor
sbb
mov
incl
mov
pop
inc
repz
into
sbbl
xor
mov
jge
pusha
scas
sub
loope
ret
pop
sahf
mov
add
dec
jo
testb
movsl
sti
psrad
mov
das
dec
dec
call
mov
icebp
adc
fdivrl
leave
gs
jmp
pop
sub
pop
mul
pop
sub
xchg
and
xchg
sti
imul
pop
into
mov
js
bts
dec
sub
add
pusha
xchg
mov
xchg
lret
adc
icebp
jno
outsl
sbb
loope
in
cwtl
dec
sbb
cwtl
addr16
out
int3
cmp
mov
dec
daa
into
cwtl
stc
movsl
and
scas
imul
jmp
dec
pop
mov
adc
insb
data16
pusha
mov
fisttpl
les
xorb
fwait
int3
sbb
pop
xchg
mov
inc
xor
aad
cmp
lds
xor
pop
clc
xchg
iret
mov
in
mov
xlat
jbe
mov
lds
mov
mov
cmp
sub
xchg
fstl
mov
sub
and
push
arpl
fiadds
test
imul
cmc
mov
imul
jle
dec
stos
scas
cmc
int3
movsl
int
out
inc
pop
jmp
xor
or
ss
pop
jge
int3
cltd
sti
push
mov
in
cmp
push
and
add
pop
jge
enter
lret
add
out
inc
movsb
cmp
popf
loop
aas
or
in
cmpb
pop
das
outsl
inc
test
out
loopne
nop
ret
adc
and
xchg
aad
idivl
pop
add
jo
mov
sbb
jbe
mov
jne
jmp
xchg
xor
adc
mov
int3
std
fdivrs
loope
cmpsl
outsb
dec
fmuls
es
mov
scas
push
test
pusha
hlt
and
jae
inc
push
loope
pop
sbb
lcall
add
test
adc
sbb
cld
jae
in
add
xchg
inc
mov
adc
push
mov
xchg
cs
fistpll
pop
into
inc
popf
mov
add
mov
test
inc
in
dec
pop
mov
test
rcll
loop
fwait
cmp
xchg
pop
lcall
fwait
sub
mov
mov
sahf
mov
dec
icebp
jl
mov
xchg
jns
cltd
add
mov
xor
cmpsl
mov
out
ljmp
cld
clc
mov
nop
push
icebp
dec
daa
mov
mov
mov
icebp
negb
inc
int
int
fstpt
in
aad
xor
packssdw
gs
pop
mov
push
enter
lock
cmp
mov
push
loop
mov
lock
movsb
repnz
out
and
cwtl
bound
mov
add
and
xorb
in
jp
mov
inc
xchg
xchg
popa
movsl
inc
pop
mov
rorl
sbb
xchg
adc
xchg
inc
ss
test
dec
xor
cmp
pop
jnp
xor
movsb
mov
aas
xchg
mov
and
psubb
or
jl
pop
mov
cli
out
pop
fcomps
push
mov
rcll
mov
das
lahf
lret
out
sub
fildl
sbb
adc
push
and
cmpl
pushf
jmp
inc
shr
addb
rorl
xchg
dec
sbbl
call
and
sbb
inc
add
cmp
cltd
mov
and
arpl
sbb
mov
repnz
movq
sbbl
cs
adc
dec
pop
dec
inc
or
js
cmpsl
jecxz
lods
cwtl
cs
and
xchg
sbb
xorb
xor
cwtl
in
dec
dec
data16
in
movb
fstpt
cmp
js
je
addr16
mov
push
loop
arpl
shrb
out
bound
aas
sub
insb
mov
jnp
mov
mov
shll
adc
and
adc
inc
dec
out
test
mov
mov
push
fs
insl
mov
nop
out
xor
xchg
adc
mov
shl
scas
inc
adc
jne
popf
cwtl
mov
mov
rolb
xchg
mov
lret
mov
jmp
pop
int3
push
ljmp
movsb
fldenv
or
gs
out
fs
movsb
xchg
lcall
aas
pop
fsts
lahf
dec
dec
fistpll
in
dec
cltd
and
lea
imul
call
jb
std
jns
into
rcrl
frndint
xor
jae
stc
cmc
repz
mov
pop
jbe
sub
icebp
cli
stc
movsl
cmpsl
cli
xchg
lahf
scas
sbb
cs
popf
push
cmp
fsubr
jb
lret
add
jge
stos
cmp
repz
mov
mov
lahf
movsb
xor
rorl
mov
movsb
rorb
insl
dec
out
arpl
stc
xacquire
adc
adcl
xchg
sub
daa
adc
mov
mov
mov
int3
into
mov
push
pop
movsb
jle
pop
fwait
jns
cli
mov
pushf
and
roll
out
shl
fisubrl
aas
mov
sub
mov
mov
ds
and
fs
ja
dec
and
jnp
mov
jbe
daa
xor
xchg
mov
mov
rcll
lods
jp
sub
inc
mov
std
iret
adc
mov
pop
pop
xchg
filds
dec
xor
idivb
inc
scas
imul
sub
mov
roll
mov
pop
bnd
mov
addb
sbb
lret
push
hlt
pop
xor
es
sbb
mov
fmul
push
or
test
adc
add
mov
add
shll
sub
mov
aaa
lea
sbb
xor
pop
stos
enter
mov
jmp
pop
xchg
push
inc
cmp
out
andb
push
std
mov
lret
mov
mov
scas
sbb
scas
iret
out
sub
cmpsl
jl
je
fstpt
pop
pop
pop
je
out
adc
push
adc
inc
lea
data16
sbb
lret
mov
in
fcom
test
rcrb
mov
cmp
cld
mov
xchg
or
das
pop
push
out
out
dec
stos
dec
or
cmpsb
shl
pop
pop
aas
mov
popa
inc
mov
dec
mov
imul
or
xchg
cmp
mov
lods
aad
add
or
sahf
mov
or
cmp
mov
cmp
pushf
idiv
shlb
cmpsl
jg
or
mov
jo
out
jl
xor
lds
jge
cmp
adc
pop
ret
xor
add
outsb
sbb
stc
jb
cwtl
add
popl
rorl
and
xor
or
test
pushf
lods
adc
cmp
sbb
cltd
ret
or
gs
mov
mov
add
sub
lret
or
and
fimull
fiaddl
or
push
sbb
jb
mov
pop
jmp
jl
mov
xor
jge
and
sahf
lea
jecxz
sbb
jnp
dec
sbb
cmp
xlat
fwait
test
subl
mov
mov
cmp
in
dec
icebp
cltd
pop
in
aaa
xchg
scas
push
jp
jbe
dec
int
mov
stc
scas
xor
lea
fcoms
sub
ljmp
mov
lret
inc
jno
js
push
xchg
sbb
ja
insl
fcomps
jge
mov
daa
pop
xor
neg
jecxz
dec
loope
mov
hlt
fsts
pop
mov
xchg
jns
push
pop
mov
adc
cs
jecxz
xor
inc
mov
add
sbb
xchg
cs
jb
push
jle
out
push
pop
or
mov
mov
sub
rcrl
jae
mov
fisubl
sub
int3
jg
inc
xacquire
jg
inc
push
pop
in
adc
ss
testl
jecxz
xchg
push
pop
arpl
insl
call
adc
insl
pop
mov
mov
lcall
jecxz
aad
lods
adc
pop
lds
and
inc
insl
dec
cmp
xchg
cs
cmp
nop
lcall
in
adc
jae
mov
sub
lock
in
lock
inc
dec
inc
inc
cmp
sub
push
mov
push
movsb
mov
jae
add
pop
das
pop
mov
loopne
mov
push
push
ja
addl
bound
out
loopne
sarl
add
dec
lea
mov
mov
push
fstl
mov
enter
es
pop
imul
test
pop
and
push
and
pop
popa
stos
pop
cs
call
cmpsl
mov
push
pop
jae
out
jl
shrl
fdivrl
inc
dec
rorb
test
mov
push
cltd
sti
imul
daa
pop
je
and
and
xor
sub
xor
xor
bnd
aad
inc
fs
and
or
in
dec
loopne
outsb
cmp
insb
jns
mov
and
adc
add
dec
inc
mov
jo
push
stos
mov
adc
out
xchg
mov
dec
out
push
cwtl
xor
pusha
xchg
hlt
addb
mov
movl
sbbb
and
je
jecxz
push
scas
and
fstpl
or
cmp
xchg
lea
inc
andb
cmpsb
xchg
jmp
ljmp
mov
ds
adc
xchg
sub
das
or
jmp
ret
test
sti
push
xchg
insl
inc
or
pusha
jns
scas
bound
movsb
lds
fimuls
and
and
jle
repnz
mov
mov
pop
frstor
sub
fisttps
sbb
xchg
jae
push
addr16
lods
jns
lods
aas
sahf
xor
aam
jmp
jge
loopne
jbe
jle
mov
push
pop
cmp
cmp
pop
les
nop
sub
movsl
sti
fstpt
mov
pop
cmove
lds
fldcw
jne
sub
fidivrl
xchg
ret
mov
push
jmp
cmp
notb
imul
mov
or
add
push
mov
dec
pop
and
sahf
fldcw
push
int
jl
or
incl
mov
orl
ss
mov
sbb
or
and
repz
fdivrs
inc
test
data16
pop
pop
dec
pop
orb
inc
mov
add
and
mov
std
mov
mov
pop
ja
xor
xor
cmp
mov
xor
mov
mov
outsb
icebp
sub
mov
out
mov
mov
mov
ret
push
popa
xlat
and
jne
fdivp
dec
push
jge
and
adc
jl
fmuls
lcall
ss
push
rcr
xor
fnstsw
mov
out
lcall
and
and
jl
jns
mov
in
into
mov
jbe
and
dec
test
cmp
jo
mov
es
adc
add
xchg
fisubrl
pop
out
or
push
bound
arpl
std
stos
inc
xchg
dec
in
bound
xchg
sbb
test
sub
add
aam
in
add
into
sbb
cmpsb
mov
test
mov
xchg
inc
add
enter
pop
fst
inc
mov
dec
push
popf
push
or
mov
into
movsb
les
fisttps
lret
cmp
inc
mov
inc
stc
adc
cmp
shlb
adc
jl
xor
push
push
out
out
mov
outsl
pop
test
in
cmp
add
adc
sub
pop
jns
testb
testb
pop
cmp
data16
je
and
outsb
pushf
clc
repnz
mov
ja
cmc
xchg
cltd
mov
and
icebp
xchg
fcmove
lret
shrb
movsl
int3
rcll
dec
fiaddl
lods
inc
fmulp
ljmp
int
push
mov
push
fs
mov
add
fwait
dec
aaa
sbb
cmp
ja
cmc
test
int3
xor
mov
push
jge
add
add
int
sub
cmpsl
push
mov
jg
bound
aaa
stos
ljmp
daa
pop
pop
jnp
mov
imul
bswap
mov
mov
push
ss
push
inc
les
cmpsb
cmpsl
inc
dec
or
insl
jo
popf
sub
ljmp
push
sti
pusha
mov
pop
push
inc
rcrl
lods
and
or
pop
pushf
imul
pop
pop
fs
jne
repnz
repnz
fnstcw
cld
stos
test
jmp
pusha
es
and
pop
pop
bound
popa
xor
stos
loopne
sarl
in
mov
dec
adc
jle
ret
ret
insb
or
fcompl
fcomps
aad
push
cmp
and
subl
cmp
sbb
mov
lret
adc
andl
mov
fisubrl
fdivrp
jp
stc
lods
cmovge
adc
jle
xchg
mov
pop
xchg
cmp
fbstp
fsubs
cmp
and
adc
adc
sbb
xor
push
call
or
repnz
popa
sub
leave
inc
sub
sbb
pop
mov
mov
cmpsb
lods
stos
sub
jbe
xchg
pop
mov
sub
xor
mov
cmp
incb
das
iret
lods
sahf
xchg
lods
jb
jae
mov
push
or
jmp
lret
jns
fwait
pop
gs
pusha
negb
pop
or
push
out
outsb
je
add
into
push
mov
shl
movsb
cwtl
sub
cmpsl
mov
pop
push
sbb
mov
cwtl
xchg
shl
mov
xchg
mov
xorb
insb
lcall
insb
stos
shlb
add
jle
mov
dec
popf
decl
xchg
dec
and
jbe
jne
shl
mov
pop
pop
test
xlat
sub
in
pop
xchg
xor
mov
pop
cmp
adc
jo
js
pusha
cld
clc
jbe
int3
ss
in
mov
std
or
outsb
inc
rorl
in
push
push
stc
lock
inc
cmp
addr16
add
sub
push
sbb
adc
movsl
imull
xchg
repnz
out
shr
sub
mov
xchg
inc
fyl2x
in
orl
dec
add
cmpsb
sbb
das
adc
xchg
sub
push
pop
movsl
xchg
jge
mov
adc
add
mov
stos
fildl
pusha
jns
cltd
mov
imul
int3
sub
lahf
inc
aam
in
xor
mov
inc
daa
adc
pop
fildll
bound
notb
std
cmp
and
push
pusha
inc
call
pop
sbb
xchg
xchg
add
dec
js
push
jmp
call
pop
ds
mov
outsb
sbb
loopne
or
pop
orb
push
mov
sahf
cmp
das
sbb
cli
test
sbb
sbb
add
jbe
in
gs
mov
shl
inc
ljmp
lret
movsb
mov
rolb
int3
mov
js
aaa
add
mov
loopne
addr16
inc
sub
fisubs
stc
test
fdivrs
jmp
leave
emms
cmpsl
pop
xchg
inc
push
fmull
push
jg
test
ljmp
dec
adc
push
sbb
lret
push
test
lods
pop
js
mov
mov
sbb
sbb
mov
cmp
lds
push
inc
sarb
xchg
pop
push
imul
dec
pop
pusha
loope
popf
inc
xor
pusha
lret
dec
and
push
adc
fucomi
or
mov
movsb
movsb
add
fmul
xchg
jnp
or
pop
nop
fisubl
loopne
push
arpl
mul
pop
push
rcrl
in
dec
push
loopne
inc
adc
hlt
inc
add
push
pop
and
popa
cli
dec
subl
pop
pop
lret
mov
adc
sahf
ret
jmp
cmp
scas
out
or
lcall
js
es
enter
xchg
popa
mov
faddl
xor
mov
cmp
jnp
or
xlat
or
push
test
lahf
or
out
or
iret
mov
js,pn
xchg
outsb
je
into
les
stc
jl
in
incw
jp
shlb
pop
nop
iret
test
jo
or
push
int3
pop
movsl
in
dec
xchg
mov
pop
test
and
cs
pop
sar
loopne
or
cwtl
jae
ljmp
xor
cmp
fnstenv
dec
mov
popa
out
mov
cs
scas
vmwrite
pop
dec
or
cltd
loope
mov
ja
mov
sbbb
jnp
sbb
inc
ret
js
add
cmp
les
xchg
push
cltd
data16
or
push
jl
xchg
ja
cmp
cmpsb
test
cmp
xchg
jne
pop
cmp
fs
test
xchg
clc
out
fcoms
mov
or
fdiv
push
mov
mov
push
pop
bound
dec
xchg
push
jo
sub
arpl
jle
mov
xor
aam
fiaddl
sub
xor
and
sub
sub
dec
push
pop
push
mov
pop
mov
cli
js
mov
fwait
push
xchg
lahf
stc
mov
push
fld
or
push
add
addb
push
out
add
mov
jns
or
sbb
scas
nop
rcrl
fwait
loope
test
pushf
pop
xchg
mov
aad
leave
cmp
inc
paddsb
or
push
pop
imul
push
xchg
jmp
and
xchg
sahf
xchg
inc
push
xchg
mov
sahf
in
push
and
and
sarb
dec
jno
mov
lea
int
daa
pop
add
insl
adcl
and
scas
pop
ja
sub
or
std
inc
cmp
mov
negl
xor
jecxz
scas
adc
stos
push
loope
mov
mov
and
cmp
sbb
inc
insb
and
lcall
dec
out
pop
mov
fldcw
add
xor
outsb
jae
es
popl
push
daa
xchg
mov
call
xchg
jmp
loopne
add
mov
popa
fstpl
sub
sub
or
aam
jae
push
int
scas
in
adc
in
nop
pop
ja
mov
jmp
or
mov
stos
mov
testl
test
pusha
sbbb
xor
mov
push
push
add
mov
je
into
pop
cwtl
loope
mov
mov
sub
aam
push
add
xchg
jo
push
fs
adc
daa
cld
cmp
arpl
js
arpl
mov
fwait
pusha
mov
or
push
int
fnstsw
insb
insb
or
xor
xor
fildl
mov
ja
dec
lea
hlt
adc
mov
and
xlat
fstl
push
or
aaa
ja
loop
sbb
push
mov
hlt
dec
dec
push
adc
add
adc
sbb
movsb
fwait
ljmp
xchg
fstpt
mov
jecxz
or
in
repz
cltd
in
es
inc
and
lea
xchg
rol
xchg
hlt
jb
data16
fisttpll
pop
sub
mov
addr16
mov
incl
fdivl
les
outsb
xchg
mov
dec
sbb
aad
sti
sbb
lret
roll
in
imulb
jmp
popa
pop
push
arpl
mov
ja
sbb
ret
pop
pop
xchg
adc
inc
idivb
loope
push
mov
imul
add
leave
dec
imul
jmp
and
or
andl
iret
stc
pop
ficomps
push
pop
pop
pusha
ljmp
lcall
stos
loope
dec
cmc
cmp
jno
div
ret
mov
ret
bound
idivb
inc
dec
popf
inc
addr16
sbb
jmp
popf
iret
and
mov
ret
in
mov
lret
xchg
mov
cmp
cmpsb
insb
and
addr16
into
mov
add
cmp
out
out
mov
mov
cmp
loope
add
mov
jnp
inc
leave
imul
jmp
mov
cmc
dec
add
mov
mov
mov
mov
jne
mov
enter
sub
jno
mov
mov
jns
lds
aas
jecxz
imul
xchg
or
jmp
mov
pop
fs
dec
xchg
stos
fiaddl
adc
xor
ljmp
inc
push
repz
lahf
and
jl
repz
lods
into
fildll
pop
cmp
insb
aaa
sub
mov
pop
loope
movsl
push
jle
add
test
xchg
imul
mov
enter
jns
mov
outsl
jp
data16
test
popa
xchg
rorl
inc
gs
mov
inc
push
cwtl
xor
fnsave
mov
mov
or
scas
addr16
jno
es
mov
sbbl
sar
cmp
clc
pop
pop
or
fsubrl
mov
notb
xor
ljmp
jno
adc
das
fisubl
repz
xor
movl
and
inc
xchg
pop
sbb
test
mov
rclb
cs
std
xor
loope
imul
cmp
push
clc
cmp
inc
fcompl
jmp
or
call
inc
add
sub
lock
adc
lret
hlt
pop
test
and
mov
pop
xchg
sbb
xchg
std
loop
and
push
xor
orb
push
lret
xorl
int
mov
fwait
rorl
xchg
xor
cmp
lods
jo
out
pop
pop
ficompl
mov
mov
mov
call
push
mov
or
jns
stos
xor
pop
std
fisubrs
leave
fidivl
mov
repnz
shll
jmp
pusha
xor
mov
fdivrp
pop
subl
cmp
dec
jno
or
mov
test
mov
ljmp
or
or
cmpsl
lret
aaa
idivl
stos
ret
sbb
adc
dec
xlat
lods
shll
mov
sub
lock
sub
push
mov
adc
cmp
pop
lret
inc
push
nop
or
inc
xchg
jae
push
inc
jmp
lret
sti
jle
adc
movsb
insl
aad
xor
xchg
cwtl
sti
cmp
xor
leave
dec
push
or
dec
jge
inc
mov
dec
dec
sub
out
add
add
push
pop
push
mov
dec
and
jg
test
out
cmp
mov
xor
leave
xchg
inc
cmp
in
pusha
jge
sarb
jge
dec
imul
ja
mov
mov
inc
ja
mov
pop
cmp
scas
jg
sub
fadd
dec
idiv
fcmovnbe
sub
dec
fwait
push
test
pushf
shrb
dec
addr16
pop
and
insb
cwtl
rorl
addr16
or
xchg
enter
xor
and
xchg
pop
xor
int
push
ret
dec
add
cmpxchg
test
xchg
push
es
es
dec
mov
mov
dec
xchg
mov
push
fbld
sub
xchg
sub
lock
dec
inc
loope,pn
lds
push
jno
lds
xchg
sarl
push
imul
jge
pop
cwtl
into
or
out
rorl
pop
enter
mov
adc
adc
test
arpl
and
pop
sbb
faddl
xchg
inc
sti
idivl
test
movsb
add
js
jnp
jge
iret
jg
mov
fwait
push
out
movsb
xor
jmp
into
daa
ret
cmpsl
mov
push
shl
cmp
mov
addr16
and
cltd
repnz
pop
jl
sbb
loopne
jle
push
out
fstpt
movsl
push
jns
mov
sbb
fcomps
or
and
xorb
movsb
std
stc
ja
jb
xlat
add
jae
xchg
pop
enter
outsb
loope
ret
cmc
fiaddl
sub
shlb
add
icebp
pop
sbb
ror
sahf
in
mov
mov
xchg
scas
fs
jecxz
in
test
dec
mov
dec
and
add
jnp
imul
mov
mov
aam
push
enter
jb
or
add
push
sub
mov
jp
jb
adc
add
scas
je
fcoml
cli
cmp
pop
call
push
cmp
lods
jp
cmp
je
cld
insb
mov
xor
and
push
cmp
xor
repnz
mov
sahf
ss
xor
sub
aam
decl
inc
cs
ja
adc
loop
jns
je
fisttpll
hlt
loopne
fildl
adc
adc
iret
sub
inc
and
aas
loop
lret
pusha
cs
or
cmp
cmp
repnz
sub
outsb
jb
jg
icebp
data16
pop
dec
inc
fsubl
pop
add
fs
dec
xor
lock
inc
or
testl
xor
les
hlt
sub
cmp
decl
fisttpll
int
stos
push
sub
cmp
or
out
es
jns
faddl
xor
and
loope
je
add
inc
fst
and
in
push
nop
rolb
gs
out
xchg
jge
lea
jge
mov
jecxz
push
loope
jmp
mov
fwait
xchg
inc
sub
push
adcb
sbb
mov
call
mov
insb
sub
dec
hlt
adc
lret
addl
lods
mov
jp
jb
pop
and
mov
dec
push
arpl
push
out
jmp
cmp
adc
clc
aaa
pop
loope
in
push
mov
push
jg
fcomps
xor
mov
pop
pop
addr16
add
das
mov
loopne
fwait
mov
shl
sub
nop
mov
adc
adc
jbe
movaps
shll
pop
andb
ja
pop
push
aaa
js
outsb
das
in
cmp
cmpsl
fldl
jbe
nop
jnp
ds
xor
push
or
std
ss
mov
dec
adc
dec
mov
aas
lds
push
xchg
or
mov
pop
lods
test
xlat
adc
out
dec
mull
out
lcall
and
xchg
rclb
mov
lds
movsl
sub
sbb
sbb
fimuls
push
mov
sbb
cmc
dec
inc
dec
mov
repnz
pop
out
insb
addl
out
repnz
enter
add
ljmp
xchg
jecxz
xor
lock
test
mov
xchg
and
inc
out
add
ss
ret
mov
add
cld
push
xor
ret
mov
pop
sbb
adcl
add
loope
inc
jle
mov
push
fdivrs
adc
fbstp
shrl
mov
rorb
dec
cmp
aam
insb
xor
mov
or
pop
test
add
and
arpl
lahf
cs
cmp
cmp
les
mov
ljmp
adc
xor
jle
dec
fwait
mov
int
xor
into
mov
rcrb
fnstcw
lods
rorb
inc
dec
into
mov
gs
mov
adc
and
int
nop
mov
mov
pop
ret
or
orl
lods
ret
ret
sahf
stc
mov
mov
out
dec
mov
sub
mov
adc
and
popa
dec
lea
repnz
cmp
push
jecxz
test
sub
mov
jecxz
xorl
push
loopne
dec
int3
test
rcrl
ja
cmc
scas
aas
jbe
xlat
push
mov
loope
add
xchg
or
xlat
iret
stos
xchg
scas
fstpt
sub
sbb
push
iret
cmp
in
jl
lret
fbstp
arpl
jp
aam
inc
add
test
arpl
jo
pop
mov
cs
inc
jbe
xor
inc
cmp
je
pop
cmp
pop
mov
cmc
jl
mov
and
jg
scas
xor
in
js
mov
aaa
jle
rcrl
shlb
jg
mov
add
add
ret
mov
int
sub
xor
mov
ljmp
and
mov
sbb
adc
xor
dec
xchg
out
inc
push
fldl
das
add
in
testl
pop
fadds
and
inc
lods
bound
adc
cmp
adc
adc
push
ret
add
lods
lock
ds
or
leave
aaa
pusha
pusha
add
mov
or
jae
push
sti
inc
inc
xor
and
jae
sbbb
add
ss
inc
xchg
dec
in
xchg
or
jne
loope
gs
repz
test
pushl
cld
and
sub
adc
lock
popa
std
jo
out
mov
jl
aam
and
mov
loope
mov
or
addr16
ret
cmc
call
push
repz
bound
pop
sub
lds
push
sbb
or
mov
out
adc
mov
cld
and
and
out
fisttps
and
xchg
mov
aam
popf
enter
pop
or
cmpsb
lahf
push
mov
hlt
fdivl
ja
adc
aad
jle
imul
sbb
mov
jg
cmp
scas
es
inc
sbb
nop
in
push
jecxz
and
push
inc
cwtl
or
mov
das
lds
push
bound
lret
mov
lea
clc
sub
adc
scas
test
mov
sbb
jo
sub
fildll
xor
leave
and
or
insb
rcrb
dec
mov
sub
cwtl
aad
xlat
sbb
cmp
sub
adcl
add
mov
je
cld
fistpll
add
mov
rorl
adc
mov
cmp
cwtl
lods
ljmp
xorl
dec
sub
mov
dec
movsl
aaa
cmpsb
pop
pop
jmp
adc
pop
loopne
and
or
jae
sbb
aad
push
cmpsb
insb
fsubrl
sbb
xlat
dec
in
jbe
fs
mov
aaa
sbb
xlat
and
stc
test
jp
aaa
cmp
jns
lcall
orb
or
mov
jne
fsubr
push
add
jae
dec
bound
pop
sbb
pop
xchg
xchg
xor
int3
jg
mov
push
adc
out
ret
or
pop
xor
sbb
push
inc
in
sub
popf
aaa
cmpsl
and
cmc
stc
push
lahf
sub
or
xchg
insb
push
movsl
test
jle
movsl
jns
sub
xor
fidivrl
cld
push
loopew
mov
int
adc
pop
dec
push
cld
psubd
cmp
or
mov
fadds
dec
inc
ficoms
insb
or
cmp
movsl
cld
negb
data16
mov
mov
jecxz
mov
fstps
add
adc
aad
inc
pop
add
xor
sub
fnstenv
push
mov
jg
adc
addl
adc
mov
push
jb
push
jns
mov
mov
imul
mov
lock
jns
inc
iret
loope
stos
mov
js
dec
mov
pop
sub
push
movl
imulb
dec
xor
pop
dec
fiadds
jae
jmp
mov
xchg
xchg
clc
data16
xor
cmp
mov
mov
loop
jbe
mov
and
dec
sbb
mov
cmp
lods
test
cmp
xchg
cmp
and
push
icebp
test
cmp
jae
les
dec
pusha
lcall
sbb
testl
mov
sahf
roll
jb
mov
mov
aad
int3
sub
add
adc
outsl
in
test
adc
inc
test
lock
rclb
in
jno
mov
jmp
xchg
inc
fsubl
hlt
xor
mov
xchg
in
shlb
mull
xor
or
jg
and
or
movsl
lock
add
aad
mov
repz
pushf
in
fs
stc
mov
daa
in
sbbl
adc
inc
inc
mov
sub
or
inc
mov
jns
decb
int
dec
add
stos
sub
pop
mov
enter
and
xor
jmp
daa
inc
cmp
fs
inc
sar
jl
xchg
test
into
stc
jecxz
cmp
xchg
xchg
repz
lahf
fucom
mov
xor
out
jg
int3
sub
jb
mov
and
mov
fwait
addl
jb
and
add
cmpsb
fdivrs
ja
jp
adcb
inc
xlat
movsb
xlat
mov
pop
sbb
mov
pusha
mov
add
fisubrs
scas
lea
sbb
push
rcl
mov
sub
mov
and
push
pop
push
int3
lahf
mov
adcl
pushf
mov
push
testl
add
mov
out
cmc
cmc
lock
popa
pop
mov
out
xor
leave
push
or
pop
push
js
sti
push
lock
lahf
ljmp
in
lds
jnp
divl
das
fsubs
and
pop
pop
rol
shr
mov
mov
sti
sub
and
sbb
sti
test
xor
test
sub
mov
mov
negb
js
fyl2xp1
xor
rcrb
cmpsb
hlt
push
dec
xchg
dec
iret
xor
add
mov
push
or
cmp
push
jb
fcoml
hlt
js
xor
pop
call
push
push
jg
scas
cld
sub
mov
lret
out
jae
adc
scas
add
xlat
imul
or
int
in
pop
fdivrs
xchg
jecxz
scas
sahf
jp
movsl
jbe
lret
cltd
mov
xlat
add
mov
call
jae
mov
out
bt
push
out
scas
in
movsb
dec
and
mov
sub
add
cmc
pop
sub
dec
lds
dec
jno
add
imul
cmp
xchg
pop
stos
cmp
addr16
pop
lcall
sbb
xor
dec
xchg
push
sub
xor
pop
pop
scas
inc
push
cltd
popf
cs
rcll
lcall
adc
jbe
mov
sahf
mov
out
mov
push
cld
cmp
pop
mov
push
xor
fidivs
jo
dec
jmp
imulb
je
inc
shrb
add
adc
pop
and
sar
aas
imul
cmp
lds
enter
mov
cld
sub
xlat
pop
aad
sbb
aaa
xor
roll
lahf
sbb
mov
mov
mov
addb
lahf
inc
lods
imul
pop
dec
xor
in
fwait
mov
mov
mov
inc
addb
ficoms
mov
clc
or
fistps
and
pushf
sbb
mov
push
cmp
xor
add
rcr
and
test
add
out
shlb
sahf
or
scas
aam
dec
add
rcll
xchg
sub
imul
dec
mov
int
in
andb
and
lret
test
add
jmp
xchg
jb
or
cmp
jb
mov
push
adc
add
outsl
out
jge
cmpsb
adc
movsb
mov
stos
andb
out
sbb
mov
rcrb
mov
sbb
mov
aam
call
xchg
in
lock
decb
out
sub
std
dec
shlb
adc
add
adc
cli
push
push
xchg
pop
cs
jmp
mov
clc
lret
sbb
int
and
loop
push
inc
cmp
test
jmp
lods
test
pushl
add
int
jb
movsb
decb
xchg
out
std
test
lods
push
scas
mov
sub
outsb
mov
imul
jae
leave
fisubrs
pop
cmp
cmpl
sbb
mov
push
mov
adc
clc
out
mov
imul
push
dec
les
loope
addr16
scas
fwait
jmp
sbb
insb
data16
inc
cmpsb
mov
dec
mov
mov
in
ds
test
leave
stos
ljmp
cmp
lea
adc
lcall
push
aaa
push
adc
test
mov
fsts
scas
mov
insl
sub
sub
fwait
ja
inc
mov
sahf
sarb
add
mov
mov
jl
sub
xchg
cs
mov
jbe
scas
fiadds
xor
and
mov
pop
mov
push
mov
sbb
pop
jle
jno
mov
xchg
add
push
gs
xchg
jnp
leave
xchg
jnp
cmovle
inc
es
push
sarl
xor
test
fiaddl
sti
jle
les
dec
jns
adc
rorb
aad
pop
fdivrl
push
xor
data16
push
aad
into
pop
inc
dec
xchg
mov
add
ss
lock
xchg
push
dec
sahf
sbb
ret
sbb
call
push
adc
mov
test
push
push
bound
into
repnz
stos
ss
push
ds
dec
lea
imul
fcomps
repnz
ror
dec
mov
push
dec
adc
xor
sub
xor
mov
pop
xchg
aad
insb
test
ret
repz
dec
test
lock
cmp
dec
jnp
fsubp
adc
int3
pop
dec
mov
xlat
mov
cld
pop
outsb
roll
test
es
mov
shrb
es
lea
bound
xchg
mov
adc
pop
sub
adc
pop
call
jbe
mov
out
fisttpl
lret
hlt
test
lea
inc
pop
js
out
cld
and
je
movsl
shll
cmc
testb
cmpsb
lahf
and
sbb
cmp
clc
xchg
mov
cltd
push
push
adc
dec
in
mov
jg
ja
mov
push
fsubrl
stc
cltd
scas
push
and
inc
popf
push
out
clc
sahf
cmp
data16
gs
aas
cmc
sub
pop
push
fs
mov
fmull
push
inc
push
ret
pop
fimull
movsl
jle
or
xor
jp
pushf
adc
sbb
mov
mov
mov
push
mov
lods
push
mov
push
mov
ss
mov
cmp
ss
arpl
fs
dec
leave
dec
dec
out
add
int3
int3
lcall
mov
and
pusha
mov
add
cmpsb
and
int
clc
cltd
add
mov
pusha
and
push
popf
xchg
xchg
pop
or
ljmp
or
add
movsl
lret
loop
aas
jecxz
xchg
adc
sbb
sbb
jo
push
adc
mov
adc
sbb
sbb
xchg
adc
testb
faddp
ror
call
fidivrs
adc
insb
jecxz
inc
jne
or
cld
data16
add
inc
add
jo
fnstsw
fdivl
fildl
sub
xchg
lods
xchg
lds
pop
mov
rcll
stc
xchg
jge
mov
jp
iret
pop
pop
and
xlat
pop
adc
cmp
xor
sbbb
mov
sub
sub
or
mov
and
sub
outsl
popa
jle
outsl
sbb
cmpsb
sub
test
or
xchg
ss
sbb
xchg
adc
bsr
hlt
pop
mov
call
aam
mov
fsubrs
and
pop
cwtl
mov
int3
or
cmpsl
and
dec
xlat
push
add
out
out
scas
mov
fsubrl
mov
mov
mov
mov
dec
sbb
lret
daa
icebp
dec
dec
fmull
mov
cwtl
fnsave
jno
aam
mov
loope
sub
mov
aad
xchg
or
mov
pop
mov
enter
xchg
mov
jns
sbb
push
cwtl
jae
xchg
cwtl
stc
jbe
lea
filds
lcall
xor
add
or
add
pop
jge
push
icebp
lcall
mov
in
xor
jb
inc
sub
xor
movsb
jnp
shrl
lret
inc
mov
push
xchg
out
js
icebp
orl
jns
inc
scas
push
xlat
dec
xchg
loopne
inc
aam
pop
lcall
ds
mov
inc
bound
in
jb
repnz
lret
test
loope
lock
jno
inc
ret
pop
and
lods
ret
mov
cmp
xchg
mov
pop
inc
call
cmp
xlat
xchg
pop
cmp
dec
mov
push
pop
sbb
imul
ret
shlb
sbbl
pop
sbb
pop
jp
pop
in
int3
lock
test
xchg
or
dec
pop
stos
lds
sbb
mov
xlat
lods
lahf
popa
xchg
hlt
xchg
mov
sbb
sahf
call
and
rcr
pop
inc
push
xor
int
in
les
push
jo
xchg
popf
movsb
adc
je
insl
pop
xlat
inc
frstor
in
loope
mov
push
mov
sahf
push
aam
into
sbb
enter
sti
mov
and
ret
push
loopne
mov
adc
or
mov
and
adc
arpl
or
mov
and
sub
jle
sbb
push
cld
daa
movsl
lcall
rorb
shrb
in
aad
jae
stos
push
out
mov
jg
mov
cmpsl
test
into
gs
lret
rcr
sub
pop
pushf
dec
ljmp
fildl
xchg
push
movsb
test
sbb
insl
aad
push
pop
jnp
inc
sub
adc
xchg
jo,pt
mov
and
das
pop
popf
inc
clc
adc
ror
push
daa
xor
je
lret
pop
out
cld
jae
out
fsubrl
std
pop
mov
loopne
sti
cmpsb
sbb
sbb
cmp
add
dec
fidivl
mov
or
sbb
imul
sbb
dec
xchg
iret
mov
mov
jmp
mov
push
div
faddl
adc
sub
ret
mov
gs
jmp
push
aam
aam
orb
dec
adc
jbe
xchg
int
adc
mov
lea
mov
push
in
cmp
jns
je
sub
add
mov
push
enter
push
xchg
idivl
nop
push
dec
add
mov
lret
push
dec
mov
inc
mov
add
adcb
sbb
ja
stos
dec
or
pop
xor
sbb
mov
pop
fstps
mov
ret
lahf
push
cwtl
std
mov
mov
fcmovne
jne
mov
scas
jg
movsb
cmc
inc
inc
in
pusha
push
insl
mov
xchg
mov
mov
cltd
out
inc
test
inc
stos
push
push
jmp
mov
adc
sub
imul
xlat
sti
decl
into
fwait
popa
shll
out
aas
leave
test
lea
add
arpl
xchg
imul
add
xor
cltd
xor
cmp
cmpl
dec
pop
cmc
lock
fcompl
outsl
mov
pop
sbb
dec
movsb
jnp
cmc
popf
push
fstl
sbb
or
shr
shll
enter
mov
out
int3
pop
cmp
jnp
sti
cld
push
sbbl
in
rorb
dec
jecxz
aam
hlt
push
popf
mov
xor
xlat
gs
popf
push
xchg
push
mov
cltd
les
mov
dec
mov
call
gs
or
mov
stos
xor
jecxz
pop
out
rol
or
ljmp
adc
jae
cmc
inc
dec
loop
lods
or
test
lods
pop
sbb
cmp
pop
invd
jge
mov
dec
push
cmp
jno
cmc
sub
inc
inc
jl
sbb
pop
add
lret
jmp
pop
jp
sti
xor
pop
insl
xchg
jnp
sub
mov
add
sub
xor
cvtps2pd
int3
mov
cmp
jmp
mov
iret
mov
insb
add
fildll
popf
cmpsb
popaw
xor
adc
xor
pop
aam
inc
xchg
mov
fldcw
jb
dec
dec
ficoms
outsb
enter
aas
jmp
scas
stos
movsl
fsub
pop
jnp
cli
mov
hlt
inc
mov
cld
pushl
adc
mov
sbb
mov
sub
mov
mov
lds
pop
inc
add
loopne
scas
push
fcoms
dec
ds
or
and
sub
jns
cmp
outsl
out
cmpsl
cmp
stos
add
add
cmp
dec
in
xchg
arpl
jecxz
fucomip
popa
mov
rcll
test
testl
xchg
mov
sahf
and
ficompl
loope
mov
push
call
mov
stos
adc
out
aad
pop
pop
pop
mov
insb
popf
fsubs
sbb
ss
shrb
jne
movsb
outsl
push
jge
movsb
ds
mov
cli
das
and
mov
and
cmc
xor
and
dec
add
std
or
push
adc
ss
xor
xor
and
pop
pop
sarl
dec
mov
out
xchg
ret
adc
pop
cmpsl
lret
sub
sbb
inc
and
xchg
rcll
out
and
ljmp
test
shlb
mov
mulb
add
es
push
clc
cmp
dec
jle
cwtl
mov
repz
neg
dec
pop
or
dec
aam
test
popf
scas
aad
xor
addr16
shr
dec
jg
mov
iret
jo
pop
mov
out
mov
inc
jnp
test
mov
inc
sti
ljmp
lods
ja
outsb
rol
cmc
sub
and
lock
add
cld
lea
mov
push
lds
mov
or
ja
cmp
jle
into
and
roll
mov
fxch
test
sbb
add
add
xor
das
xchg
test
movsb
cmp
jmp
add
mov
push
cmpsb
das
divps
xchg
fiaddl
or
add
jae
imull
jg
jg
mov
shr
mov
adc
sti
mov
mov
jbe
les
mov
fcmovnu
push
mov
popa
das
mov
xlat
mov
lods
fisttpl
push
icebp
sbb
mov
xor
jnp
inc
sbb
hlt
cmc
sub
ret
outsb
in
inc
cld
iret
ljmp
imul
gs
jmp
push
outsb
inc
mov
cmp
andb
lods
cmp
mov
mov
and
arpl
xor
and
int
add
fcmovb
mov
lret
xor
ret
jns
fidivrs
ret
add
push
aad
adc
mov
test
dec
call
pop
xor
push
fdiv
pop
adc
xor
outsb
loop
xchg
dec
xor
out
mov
add
jmp
addr16
mov
mov
pop
lea
push
mov
xchg
pop
data16
dec
sbb
addr16
loop
xor
adc
dec
insb
hlt
inc
test
cmpsl
pop
stos
adc
jmp
ss
imul
mov
ja
jno
clc
or
sbb
xor
jge
pop
in
mov
js
jns
cmp
inc
push
icebp
push
xchg
push
and
pop
decb
ficomps
cmpsb
xchg
mov
jo
mov
ret
jns
pop
adc
in
fisubrs
pop
mov
add
add
adc
fistps
cmp
leave
pushf
popf
push
adcl
clc
xchg
cld
jbe
xor
movsl
or
xchg
pop
scas
dec
mov
xor
push
into
dec
ss
leave
mov
dec
mov
push
adc
andl
mov
push
mov
and
js
jb
jno
les
out
xchg
sub
cld
movsl
addr16
mov
jne
fnsave
pop
and
or
add
js
mov
in
inc
sbb
into
mov
lea
imul
loope
popf
pop
clc
imul
adc
outsl
out
icebp
push
lahf
sub
jmp
test
fimull
sub
in
push
xor
lods
mov
add
fsubs
cwtl
and
sub
mov
dec
add
paddw
xchg
sub
mov
cmpsb
cltd
cmp
push
dec
movsb
sbb
jb
cmp
or
in
ljmp
jmp
mov
test
test
int3
add
jnp
xchg
popf
addl
out
xor
mov
mov
xlat
fcmovbe
xor
mov
mov
sub
cwtl
idivl
mov
or
sbb
in
pop
fs
into
cltd
sbb
fwait
nop
push
adc
jl
mov
add
cs
test
mov
lret
outsb
enter
sbb
push
mov
jmp
dec
pop
jg
xchg
ljmp
inc
jb
cwtl
fstpt
jo
fs
push
pop
pop
push
xor
mov
mov
add
rolb
cmp
ja
push
xchg
push
xor
repnz
jmp
and
dec
cmp
lcall
cwtl
cmp
fcomps
push
inc
or
push
call
sub
xor
pop
cmp
mov
fistpll
jb
movsl
imul
pop
mov
movb
jo
adc
push
enter
mov
je
je
test
add
xor
cmc
in
sbb
mov
sbb
nop
cmpsl
mov
hlt
cwtl
loop
jbe
pusha
mov
insb
fwait
pmuludq
imul
pop
cs
ret
ret
xchg
inc
jno
out
sti
pop
negb
mov
ja
add
hlt
mov
outsl
cwtl
sbb
hlt
inc
inc
mov
pop
pop
mov
add
mov
dec
and
pop
cmp
movsb
shrl
cmpsl
in
jnp
insl
sub
icebp
jb
ss
fs
jge
xor
in
mov
rorb
es
pop
dec
push
and
rcrl
pop
cmp
mov
xor
pusha
xor
and
adc
pop
dec
repz
ficoml
loopne
dec
xchg
inc
in
imul
sbb
test
fcompl
mov
jle
pop
jns
pop
mov
mov
neg
pushf
mov
sub
stos
cltd
xor
and
lahf
stc
into
cwtl
or
sbb
mov
insl
mov
fadd
sub
dec
pop
ds
aas
xchg
add
sbb
in
sbb
dec
out
adc
pushf
adc
pop
das
insl
dec
cmp
xlat
call
out
cmp
pop
data16
push
inc
lcall
movsl
sbb
mov
das
push
jo
lds
pop
mov
rorb
fildll
fs
fiadds
dec
mov
lods
mov
fistl
xchg
lahf
add
es
jb
mov
dec
lcall
xchg
cmc
das
stos
mov
cmc
hlt
outsl
mov
loope
push
out
cmpsl
xchg
xor
cmpsb
lahf
push
pushf
sub
mov
xchg
cmp
int3
jns
dec
cmpsl
mov
sbb
loop
xlat
fldt
loope
lods
xchg
push
dec
xlat
divb
or
scas
push
mov
rcr
ljmp
cmp
aam
iret
clc
sub
xchg
mov
movsb
jp
xor
jns
dec
xor
xlat
inc
sbb
js
jmp
xor
fdecstp
pop
jge
xchg
dec
xchg
aaa
or
andl
nop
hlt
push
or
inc
addr16
and
pop
sbb
pop
add
sub
fldcw
dec
mov
and
les
cmp
ficomps
dec
mov
repz
add
stos
jle
adc
push
aas
test
inc
jno
daa
mov
mov
dec
pop
hlt
mov
cmp
adc
push
loop
jmp
fldz
push
mov
pop
arpl
out
inc
hlt
mov
cmp
insl
filds
mov
adc
in
xchg
insb
or
bound
sub
mov
inc
push
xor
ss
aaa
add
cmc
mov
lea
or
loopne
movsb
in
and
pop
mov
sbb
lret
adc
cltd
bswap
mov
mov
pop
stc
and
insl
jl
lret
sbb
gs
bound
xchg
pop
dec
ds
sub
jno
xor
xchg
dec
in
testb
jae
xor
cmp
mov
xor
cld
icebp
dec
or
push
cld
fwait
lea
test
stos
loop
mov
jo
push
xor
das
popf
movsl
int
fwait
bound
mov
and
aaa
push
imul
inc
cmovo
lods
sub
mov
add
cs
and
push
int
stos
in
jns
aad
imul
cwtl
out
jo
jl
je
push
hlt
aaa
lock
dec
loopne
sbb
aaa
cmp
mov
pop
insb
mov
fcompl
jno
ds
mov
dec
mov
std
pop
iret
repnz
xchg
dec
loopne
dec
ret
ljmp
xchg
push
inc
insl
push
inc
mov
in
pop
xor
sub
mov
test
jnp
pop
int
cmc
imul
xor
mov
jns
pushf
in
test
mov
xor
sub
pop
sub
into
sahf
xchg
dec
nop
test
dec
insb
inc
in
les
les
out
inc
call
push
jmp
jl
into
inc
xchg
sahf
fwait
clc
cmpsb
jl
pop
jae
add
lcall
xchg
fnstenv
inc
jo
fiaddl
add
mov
inc
mov
rorl
xor
jmp
jmp
out
orb
aaa
dec
mov
jecxz
adc
jg
in
pop
sub
cwtl
push
push
jp
pop
in
adc
ds
jg
test
aaa
sub
rorb
cmp
arpl
pop
scas
xchg
out
push
jo
mov
mov
orl
dec
inc
sub
in
es
lock
mov
mov
ret
sbb
xchg
mov
adc
sub
mov
in
test
jne
lods
mov
in
cmp
push
dec
outsb
stos
or
add
push
sbbb
fistpl
or
aad
push
test
es
xor
pop
loop
and
dec
add
pop
dec
cmp
cwtl
cmp
pop
mov
pop
mov
test
outsb
es
dec
mov
dec
data16
sbb
inc
xchg
mov
imul
push
xchg
adc
scas
jae
std
mov
das
fdivr
popa
jo
add
mov
test
test
add
cld
data16
and
jne
in
push
sub
and
pop
mov
push
dec
dec
mov
xchg
rolb
push
dec
and
mov
push
sub
mov
andl
dec
pop
and
sbb
popa
out
dec
scas
xor
add
es
push
test
cmp
es
dec
cmc
scas
int
mov
jnp
insl
scas
push
leave
test
inc
mov
inc
mov
lods
push
adc
sub
cmp
cltd
sahf
scas
mov
std
pop
psubq
aas
imul
fs
scas
push
daa
hlt
mov
jne
cmp
fsubr
xchg
xchg
lret
clc
cmpsl
fildl
test
jl
jbe
sbbb
shll
cwtl
dec
aaa
jmp
xor
push
loopne
rol
fstpl
mov
and
data16
mov
cmpsl
cmp
hlt
mov
add
leave
hlt
imul
in
push
and
movsb
inc
sub
into
pop
js
cmpsl
cmp
hlt
popf
and
jmp
xchg
scas
jg
repnz
testb
push
movl
push
push
arpl
js
push
roll
and
addr16
push
push
mov
fisttpl
mov
inc
icebp
and
in
sub
rorb
push
bound
gs
push
popl
lods
fadds
orl
enter
loopne
sbb
daa
sarb
or
inc
xor
imul
lret
jmp
adc
adc
xchg
fisttpl
stc
les
add
lret
mov
adc
mov
fisubs
fnsave
test
sbb
pop
mov
leave
dec
pop
cmp
mov
fwait
dec
nop
ficoms
ffreep
push
pop
jne
lods
sub
push
dec
test
push
add
aam
out
mov
lea
push
cmp
add
pop
shlb
adc
clc
xor
lret
notb
jae
xor
xor
jecxz
imul
jp
in
das
or
push
lock
mov
insb
stc
xchg
cmp
jb
std
mov
push
pop
xchg
mov
cmpsl
jle
jp
test
add
add
xor
leave
out
sbb
cmp
add
lods
push
add
stc
sub
jp
adc
jl
adc
mov
sbb
fcmovne
push
leave
pop
jne
shll
mov
mov
cmc
jmp
jbe
mov
mov
test
cmpsl
xchg
stos
in
mov
xchg
mov
call
dec
lea
ljmp
stos
pop
es
lahf
inc
insl
dec
inc
and
pop
notl
fsubrl
jbe
icebp
loop
dec
add
test
mov
xchg
test
jmp
cmpsl
loope
pop
cmp
add
xchg
cmc
cmp
test
repz
out
adc
ds
add
add
push
aam
sti
jno
lods
push
outsl
jbe
mov
andl
or
inc
dec
jle
or
aad
pop
and
dec
cmp
jmp
outsl
pop
vmread
imul
pop
pop
jb
push
cwtl
rcrb
jle
dec
shlb
in
xchg
sti
cltd
pop
lret
push
cltd
mov
cmc
test
insl
xchg
sub
xchg
inc
pop
mov
adc
rol
in
rcll
push
adc
popf
sbb
mov
sub
mov
or
jnp
cld
adc
pop
mov
cmp
ja
loopne
adc
jae
push
fs
dec
add
test
ret
adc
imul
cmp
pusha
test
negl
fldl
sarl
mov
ja
icebp
cmp
loope
mov
divl
inc
aaa
xchg
lcall
push
int
and
cmp
mov
xor
mov
and
ja
js
xchg
jae
and
test
lahf
mov
xchg
mov
pop
je
mov
les
xor
fisttps
or
fsubs
adc
mov
into
push
iret
push
fnstsw
ljmp
nop
stos
and
cmc
cmp
cmp
popa
test
mov
mov
arpl
push
daa
int3
aas
push
sbb
fdivrp
ret
lods
int
orl
aam
cmp
push
xor
jbe
faddl
or
lret
mov
inc
fwait
iret
adc
pop
ja
and
xor
test
inc
mov
mov
inc
push
mov
aad
push
arpl
insl
dec
pushf
movsl
movsb
push
mov
stos
pop
out
jnp
adc
cmc
ds
lods
iret
lea
ss
cmpl
adc
loopne
stos
daa
jo
or
cs
mov
jnp
rorl
divb
popf
push
scas
xchg
sbb
inc
mov
pushf
fnstenv
dec
cmp
pusha
fistpll
cmp
sbb
cmp
ret
push
sbb
mov
in
xchg
mov
and
imul
pop
cmp
aad
sbb
orl
test
or
jne
test
sbb
adc
hlt
out
xchg
xlat
mov
rcl
rcll
jns
test
js
cmp
leave
mov
cltd
mov
subb
and
jns
notb
push
push
mov
sahf
xchg
cltd
out
pop
fsubrs
jo
lcall
imul
adc
mov
shrl
movl
cmp
push
add
insl
mov
aaa
int3
outsb
xor
adcb
pop
push
ljmp
aam
pop
sub
xor
aam
mov
test
sahf
in
jnp
add
push
sbb
fcoms
adc
lcall
mov
xchg
mov
out
sbb
mov
and
mov
mov
cmp
adc
in
add
jg
dec
loop
loopne
sbb
xor
inc
cmp
dec
sahf
adc
cmpsb
inc
test
jno
pusha
sbb
in
and
add
lods
outsl
stos
mov
sti
mov
hlt
sub
popf
mov
bound
and
leave
mov
push
mov
xlat
loopne
jge
fiadds
jmp
xor
ret
add
data16
jo
push
outsb
outsb
mov
sti
sub
jae
pop
mull
jae
cmp
xchg
ds
jae
imul
push
fbstp
and
mov
xor
push
test
rclb
lret
outsb
xchg
push
mov
adcl
notb
popa
fisubrs
and
or
test
mov
dec
adc
jnp
iret
fdivrs
outsb
sbb
mov
pop
sub
jo
lock
das
pop
cmp
cld
cmc
mov
call
stos
aam
les
ljmp
fisubs
jg
fwait
cld
aad
mov
sbb
cmpsb
pop
jmp
inc
lahf
pop
rol
iret
mov
pop
pop
js
sti
push
scas
nop
rcr
in
movsb
mov
dec
sub
pop
mov
scas
insb
mov
mov
movsb
jle
negb
in
add
add
mov
adc
es
lds
push
scas
lds
pop
or
ret
jnp
lea
je
mov
aad
lea
jo
pusha
push
pop
push
or
cmp
sbb
outsb
icebp
or
cli
test
test
cld
mov
int
and
xor
push
dec
bound
mov
jmp
rcr
dec
mov
rcrb
iret
mov
and
clc
movsl
in
xchg
std
or
sti
ret
sbb
sub
fsubrs
add
test
mov
insb
ja
jns
bound
jle
dec
pop
iret
xor
cltd
cmp
popa
push
fwait
int
mov
cmpb
test
inc
mov
dec
sub
out
inc
jns
xor
cli
int
push
stos
imul
mov
xlat
mov
shll
fxch
in
out
dec
mov
adc
aas
xchg
cmpsl
inc
gs
data16
mov
adc
andb
mov
repz
or
in
and
clc
cmp
icebp
pop
test
adc
divl
mov
mov
cmp
push
xchg
add
xchg
fbld
xchg
jge
jmp
push
fbstp
pop
mov
xchg
test
cmp
es
or
lds
ja
test
mov
insl
rcl
add
push
loope
in
and
xchg
pop
pop
leave
outsb
mov
test
push
adc
test
pop
xor
call
mov
push
dec
cmp
fdivrl
divl
loope
sub
push
enter
lret
aam
push
mov
jne
cld
clc
rclb
lahf
xor
sub
lcall
int
sbb
pop
push
cwtl
cli
add
pop
loopne
mov
loop
mov
cmpsb
jl
fbstp
mov
dec
ret
jns
orb
mov
mov
push
cmp
mov
xchg
mov
aaa
addl
rcrb
out
bound
sbb
lcall
or
loopne
sti
jnp
cmp
iret
cmpb
jmp
imul
dec
int3
mov
mov
sub
cmp
mov
std
test
or
xchg
sbb
sub
push
daa
pop
sub
adc
dec
mov
popf
stos
ss
inc
mov
shll
add
push
adc
sbb
popf
call
mov
inc
inc
jl
inc
xor
das
pop
jns
mov
cmp
shll
lcall
mov
push
push
cli
push
test
dec
cmp
adc
sub
cmp
mov
xlat
repz
xor
pushf
outsb
lret
fcoml
imul
aas
xor
repnz
in
push
add
and
mov
roll
cli
dec
orl
hlt
dec
dec
addb
leave
dec
ficoml
enter
movsl
popf
mov
std
shrb
adc
xchg
loope
lahf
xchg
lods
mov
arpl
pop
shlb
adc
iret
enter
cmp
ficoml
orl
jbe
mov
push
inc
cltd
sbb
and
gs
add
dec
inc
xchg
sbb
cli
cmp
adc
push
in
dec
dec
icebp
xor
mov
jl
lods
pushf
jl
pop
xor
mov
mov
mov
dec
pop
xor
shrl
pop
adc
cmc
jecxz
pop
cmp
outsl
icebp
std
cwtl
cmp
lret
pop
and
jecxz
lods
pop
addr16
add
arpl
cmc
push
pop
inc
shll
test
lea
js
jecxz
or
andb
enter
pop
in
fwait
sbb
pop
cli
mov
pop
int3
inc
lret
aaa
inc
pop
in
jno
stos
fwait
jns
sbb
add
xor
sbb
ret
and
fmull
mov
jo
bound
cmpsb
sbb
sub
mov
adc
and
and
or
mov
jmp
int
fs
sahf
inc
pop
cmc
ljmp
shll
aaa
lahf
rcrl
jmp
dec
out
das
jmp
xchg
adc
lock
iret
dec
sysenter
bnd
fs
scas
fisubl
out
ret
sbb
dec
xchg
pop
pushf
enter
popf
and
nop
pop
and
mov
lret
orb
outsl
mov
pop
and
pop
xor
add
cmpsl
or
cwtd
and
lret
jge
rcl
or
pop
inc
xchg
add
sbb
fisttpll
push
adc
ja
xchg
cli
xchg
aaa
std
pop
loop
sub
popa
push
leave
push
sub
fcoms
mov
fisubs
dec
adc
inc
lcall
into
repz
testl
orb
dec
pop
mov
push
cwtl
inc
pop
sbb
mov
push
lock
shl
mov
and
push
xcrypt-cbc
cmpsl
adc
imul
pop
push
cmp
stc
push
in
test
inc
out
add
cld
push
cmpsl
ds
sahf
das
fldt
mov
movhps
cmpsb
jmp
jmp
xlat
xchg
push
inc
repz
adc
cmp
fwait
imul
push
int3
leave
xchg
aaa
js
add
cli
mul
outsl
je
ljmp
add
pusha
dec
xchg
adc
leave
cmp
or
ja
insl
shrd
sub
push
mov
ljmp
jp
jb
or
test
sarl
push
sarb
or
lock
push
mov
pop
sbb
pop
or
xchg
popf
lcall
push
jg
add
decl
imulb
adc
push
add
push
mov
ret
push
fisubrs
mov
lea
sub
fstl
xor
popf
inc
sarl
imul
mov
sub
hlt
movsl
jnp
xchg
in
int3
xchg
cmp
jnp
rcl
lock
in
jge
ficompl
add
or
mov
mov
mov
leave
push
dec
mov
out
adc
xchg
int
ret
sti
ret
add
jns
aam
rcrb
movsl
push
xchg
or
cmc
lret
add
test
lcall
mov
mov
clc
mov
ja
mov
mov
repz
mov
cs
dec
pop
or
test
fwait
mov
xor
bnd
mov
insb
dec
je
sbb
and
pop
adc
movsb
push
sub
in
push
mov
mov
jae
mov
shl
outsb
adc
dec
and
and
out
mov
jecxz
js,pn
repz
or
cmp
pop
fbstp
mov
mov
in
call
cli
pusha
adc
inc
xchg
enter
pop
aaa
mov
inc
scas
test
adc
fisubs
cmpsb
jb
nop
mov
push
cmp
push
jae
mov
jp
popf
dec
insl
or
ljmp
inc
imul
adc
mov
mov
in
mov
add
lcall
mov
in
add
inc
popf
je
xchg
daa
jecxz
jg
insb
pop
or
sbb
and
xlat
and
arpl
sahf
sub
push
out
push
pop
jbe
inc
add
sub
sbb
jbe
rorb
stos
pop
aam
mov
xor
pminsw
xchg
push
pusha
push
mov
clc
cmp
test
dec
aaa
pop
shr
inc
leave
cmpb
ja
lahf
xor
jmp
ds
jecxz
mov
rcll
insl
loopne
mov
add
scas
jb
inc
arpl
sbb
cs
cmp
jb
outsb
adc
fs
mov
mov
adc
adc
int
sti
cmpsl
dec
and
mov
mov
adc
sbb
mov
data16
adc
push
iret
pop
and
jmp
lahf
repz
pusha
notb
sahf
fld
imul
adc
pop
or
decb
push
je
mulb
xchg
add
bound
lahf
sub
movsb
loop
aad
sbb
mov
je
mov
out
test
sbb
movsl
or
or
je
jge
sbb
mov
push
sbb
cmpsb
push
pushf
rcrl
mov
xor
and
or
sbb
fs
ds
xchg
fistps
push
or
mov
pop
lea
bound
xor
mov
aaa
jbe
sbb
inc
mov
lock
jmp
mov
cmp
pop
mov
dec
mov
pop
rorb
mov
cmp
sub
or
add
test
sbb
sbb
push
loop
jmp
dec
cmp
inc
gs
loope
loopne
lods
test
enter
orb
dec
sub
push
shrl
mov
daa
stos
dec
lcall
mov
push
or
dec
shlb
mov
filds
addr16
add
icebp
mov
jecxz
sbb
cmpsl
cmpsl
insl
xor
fisubl
mov
mov
inc
les
xor
inc
push
mov
stos
mov
xor
ljmp
push
test
pshufw
mov
and
in
sub
cmp
or
das
ss
scas
and
mov
push
test
pushf
mov
dec
push
push
xchg
rcl
or
jge
test
pop
mov
sbb
jnp
sub
adc
xlat
xor
jmp
mov
jno,pn
mov
divb
jns
dec
inc
push
and
xchg
mov
test
pushf
adc
lahf
leave
es
sti
or
cmp
dec
cmp
cld
mov
inc
mov
adc
lods
cmpsb
aaa
adc
leave
and
jo
aam
ror
pop
xchg
sbb
inc
add
dec
dec
dec
mov
xor
cmc
je
cli
fcompl
xchg
xlat
mov
mov
pop
cmc
aaa
mov
add
push
aam
aas
dec
pop
adc
jmp
negl
sbb
jo
shll
add
outsl
cltd
pusha
ljmp
cmp
mov
inc
movsb
add
ficoms
mov
rcrb
pop
das
cmp
xchg
dec
add
dec
push
dec
lahf
mov
repnz
xorl
fwait
xchg
push
mov
loop
mov
stc
neg
jp
mov
push
jne
cmpb
mov
movsb
sti
cmc
jl
lahf
pop
or
gs
rolb
rclb
leave
into
sahf
lea
fs
dec
js
pop
inc
pop
sub
out
or
mov
xchg
in
dec
ds
iret
dec
mov
pop
testb
pop
jnp
xchg
pop
jecxz
fmuls
cmp
in
out
jecxz
cmp
and
jb
sub
xorb
aas
roll
jle
pop
test
xchg
jp
repnz
repnz
cwtl
sub
push
adc
sbb
inc
xor
pop
jl
stc
fisttpl
or
mov
jbe
out
mov
sbb
stos
pop
sbb
sub
cmp
sti
out
mov
xor
and
pop
fbstp
cld
sbb
lea
cmp
jg
sbb
jb
dec
hlt
mov
xchg
adc
ljmp
test
jp
negl
mov
cmc
xchg
mov
push
sub
fs
les
cmpsb
xchg
lret
mov
push
mov
xchg
popf
inc
movsb
leave
cmpsb
in
pusha
aas
xor
mov
mov
loopne
sub
frstor
fnstsw
cwtl
cmp
push
loope
loopne
and
rorb
bound
daa
jne
jecxz
add
dec
add
lods
jecxz
sbb
sub
aam
je
mov
pop
sbbl
test
shlb
pop
jmp
shlb
xor
shlb
inc
sub
pop
dec
subb
int3
jno
incl
loop
dec
popa
sub
mov
sub
add
cld
and
lea
notb
pop
sbb
xchg
push
push
cmp
add
hlt
std
and
ret
cli
lcall
rcl
loop
and
shr
xor
jbe
in
lock
loope
popf
cmp
outsl
into
outsb
ja
enter
mov
daa
dec
inc
add
jo
mov
jp
std
lock
sub
jp
imul
xchg
cmp
xlat
outsb
adc
mov
cmpsb
out
imul
sbb
lea
loopne
sub
aaa
dec
pushf
push
test
call
sbb
push
adc
lahf
lret
dec
push
sahf
xchg
cmpb
dec
jb
idivb
add
popa
jbe
int3
int
pop
in
stc
popa
sbb
or
stos
pop
test
pop
loopne
jnp
mov
nop
shll
sbb
lea
sbb
jnp
addl
xor
mov
pop
std
call
push
stos
jle
inc
mov
les
push
mov
cmpsl
mov
dec
lds
in
sbb
scas
lea
add
jns
add
frstor
decl
mov
andb
fadd
test
pop
xchg
shll
fnstenv
lea
testl
mov
enter
sbb
pop
mov
out
mov
fnstsw
lods
jnp
mov
enter
mov
test
adc
aam
add
sbb
adc
pop
orl
lock
lahf
mov
mov
lret
jns
movsb
xor
lods
popa
cli
rclb
addl
aam
scas
and
or
push
xchg
mov
xor
rolb
hlt
addb
int3
push
push
cld
es
sub
out
jno
mov
in
imul
and
scas
sbb
test
xchg
and
or
push
cmpsb
adc
pop
addr16
jl
repnz
std
xchg
pop
sub
sub
xor
push
js
push
jle
sbb
jae
mov
push
ret
add
add
pop
pop
push
daa
cltd
and
imul
popf
repnz
pusha
cmp
mov
cmpsb
mov
jns
or
push
xchg
movsl
add
xchg
sahf
sbb
mov
cs
lea
cmp
mov
cmp
mov
and
push
rcll
cmpsb
mov
dec
or
pop
les
mov
adc
out
jge
sahf
sub
xor
out
mov
and
mov
cs
imull
sbb
repz
jo
or
pop
jae
shll
push
stos
cltd
push
mov
rcll
push
cmp
jl
out
pop
fisubrl
mov
sub
js
add
mov
daa
xchg
cmp
pop
mov
mov
test
mov
jecxz
arpl
cmp
data16
jno
adc
mov
loopne
jl
enter
jno
push
add
push
pop
fdiv
add
pop
xchg
jno
xor
cmp
dec
inc
es
negl
mov
rclb
and
push
insb
mov
sub
sub
jnp
fistl
out
mov
aaa
cld
movntq
out
sbb
jl
mov
movb
and
add
insl
jo
mov
add
popf
mov
ss
int
enter
and
sbb
cld
adc
ljmp
jmp
mov
xchg
lea
mov
scas
push
test
enter
shlb
scas
mov
add
cmp
mov
jl
mov
jg
jae
mov
push
inc
out
dec
push
popa
add
shll
cwtl
xchg
addl
mov
mov
mov
clc
int
clc
nop
cmp
xor
or
mov
cmp
jle
bound
insl
loope
mov
cmp
and
mov
fcomps
push
push
fidivs
push
sar
dec
push
pop
es
in
xchg
sub
aaa
pop
mov
adc
xchg
inc
pop
push
das
test
adcb
dec
mov
sub
pop
inc
and
cs
jg
mov
mov
fnstenv
das
cmpsb
or
in
cmp
lock
out
push
pop
mov
sbb
jg
xchg
lods
add
dec
idiv
mov
adc
int3
dec
mov
jae
movsl
fisttps
push
shlb
jnp
adc
pop
push
push
mov
or
push
mov
lcall
add
dec
pop
xlat
inc
push
jns
ret
xchg
repnz
xchg
and
test
cltd
or
lret
ret
int
adc
cmpsl
push
mov
mov
mov
and
daa
loopne
in
inc
je
pushf
and
aad
mov
imul
xor
xchg
sub
arpl
jns
cmp
rclb
xor
cmp
adc
cltd
push
in
pusha
cmp
add
mov
mov
jmp
add
scas
or
inc
fwait
jg
lock
jmp
pop
lods
xor
adc
jecxz
mov
cmp
aam
scas
mov
push
mov
loop
fsubrl
or
cmp
int3
pushf
and
cmp
mov
popa
adc
lods
cmp
stc
lods
gs
push
out
loope
mov
inc
mov
imul
xchg
int3
subl
cmp
adc
jb
test
dec
call
cmpsb
mov
mov
call
test
popa
scas
mov
cmpsb
frstor
sarl
daa
fidivrs
cli
sbb
cs
mov
popa
xchg
enter
sub
ficoml
mov
cs
cmp
xchg
xor
std
pop
xor
dec
mov
cmpsb
jo
pop
add
sbb
mov
bound
cmp
fwait
ret
shlb
inc
inc
lea
add
or
inc
mov
aad
inc
fwait
bound
popf
sbb
mov
push
rolb
or
mov
aad
push
push
call
dec
jno
push
ljmp
sub
test
cmp
jns
lahf
pop
flds
int
rorl
adc
movb
outsl
mov
iret
mov
loopne
stos
jecxz
ret
cmp
adc
aad
dec
fcoml
mov
mov
mov
shlb
inc
stos
ss
cs
pop
xchg
mov
nop
push
push
push
xor
sbb
mov
push
adc
mov
out
int
dec
mov
jne
sbb
push
lcall
or
adcl
dec
icebp
fildll
push
mov
xor
jns
addb
std
add
push
fsubl
xchg
or
pop
lcall
xor
cmpsb
popf
adc
cmp
adc
fmull
xor
movsl
inc
leave
jecxz
pop
add
xor
mov
cmp
bnd
lea
inc
outsb
lods
dec
pop
pop
dec
jge
dec
test
shll
mov
and
push
ficoml
mov
mov
xchg
addb
mov
dec
sub
fmuls
movsl
les
test
ljmp
cmpsb
adc
jp
mov
pop
ret
push
and
xchg
in
inc
jnp
mov
lret
fildl
das
jge
add
in
jg
and
dec
jb
shrl
adc
pop
les
pop
mov
stos
mov
cmp
test
pop
push
test
icebp
mov
imul
imul
pop
test
add
mov
push
mov
pusha
or
xchg
clc
negb
fnstcw
push
sbb
pcmpeqd
cli
add
mov
pop
ret
mov
leave
mov
adc
movsb
scas
ss
leave
inc
cld
add
add
insb
mulb
test
std
in
mov
inc
js
dec
xor
add
cmpsb
mov
xor
shrb
cmp
sbb
mov
xor
addr16
arpl
adc
mov
std
ja
sub
cld
push
pop
aam
nop
daa
stos
mov
rolb
pminsw
cmc
inc
push
pop
dec
dec
aas
fistl
jbe
add
push
cmc
outsl
std
pop
jp
repz
lds
or
mov
inc
fldt
adc
test
or
jl
jmp
push
call
in
or
mov
mov
nop
cmp
xor
jo
dec
push
xchg
pop
push
push
in
dec
fldlg2
jecxz
dec
push
adc
in
divl
mov
push
lods
adc
icebp
aam
ds
pusha
sbb
and
xor
dec
dec
aam
adc
test
repz
pop
lret
outsl
aam
ficompl
in
mov
hlt
ret
adc
aaa
mov
shlb
add
and
dec
les
sub
iret
ret
push
arpl
lods
lcall
repz
ja
imul
cmp
jl
mov
clc
jns
pop
sbb
cltd
pop
mov
jge
add
or
push
call
inc
pusha
jecxz
test
pop
xchg
pop
out
and
or
ds
mov
cli
int3
inc
add
cmpsb
cwtl
mov
cs
sbb
call
repnz
pusha
scas
inc
pop
test
aad
out
inc
cmc
mov
pusha
cmp
inc
and
mov
pop
fdivs
add
mov
mov
adc
fidivl
out
xchg
bnd
sbb
mov
movsl
aam
test
jp
aas
lods
or
and
sbbl
mov
or
es
mov
ljmp
sub
push
inc
movsb
jno
mov
cmpsl
mov
fcmovu
push
mov
adc
lds
fistpll
push
pop
pop
mov
xor
mov
scas
rcrb
inc
xchg
out
push
mov
and
xor
dec
aas
loopne
sbb
fs
movb
pop
inc
adc
popa
mov
sub
into
mov
sahf
ljmp
push
pop
aad
sub
xor
push
mov
and
or
dec
pop
inc
loopne
xor
mov
pop
mov
loop
push
push
mov
fsubl
jmp
jns
sbb
mov
sbb
sub
xor
imul
mov
xchg
outsl
popa
xchg
mov
aam
mov
jp
mov
pop
idiv
xchg
jb
pop
xchg
subb
inc
sub
daa
loop
das
mov
xchg
and
sbb
cmpsb
cmp
icebp
mov
add
cmpsl
fsts
insl
pop
pushf
mov
insb
pop
aas
in
mov
repz
scas
decl
les
cs
add
xchg
jmp
jge
jmp
cmpsl
mov
pop
movl
stos
pop
jo
push
and
test
js
xchg
sub
xchg
insb
xchg
out
pop
lret
dec
cmc
dec
stos
pop
sub
or
cmp
loope
shlb
inc
loop
jle
jmp
and
out
and
mov
in
ret
sub
inc
adc
sbb
adc
aam
push
or
ds
loopne
fidivl
cs
ret
mov
sbb
fdivl
fwait
or
sahf
cld
mov
cwtl
testl
sub
sub
mul
je
scas
daa
and
ljmp
imul
jp
sbb
add
lea
mov
fmull
mov
and
jae
dec
dec
add
add
mov
jg
push
sub
cmpb
inc
dec
imul
into
push
xor
fwait
jle
sub
test
push
fimuls
cmp
stos
clc
jmp
push
cmpsl
ja
adc
inc
push
rol
mov
jl
cmpsb
cmp
cmpsb
adc
pop
repz
es
addr16
nop
xchg
cmpsb
adcb
repnz
or
int
mov
scas
jae
cmp
je
outsb
jbe
cwtl
movsl
clc
add
outsl
es
pop
and
xchg
cmp
pop
xor
lret
xchg
or
lret
jo
jg,pt
xlat
mov
loop
xchg
cld
jp
andb
dec
xchg
pop
test
cmp
mov
jl
repnz
push
rclb
bound
ss
stc
mov
push
adc
push
daa
cld
sbb
je
or
fldenv
inc
les
xor
fisttps
mov
bound
sahf
pop
mov
cmp
rcrb
cwtl
xor
push
dec
cmp
fbld
loop
lcall
mov
jge
adcl
xchg
imul
mov
inc
icebp
xchg
int3
or
scas
mov
cs
push
cmp
sbb
mov
pop
push
ljmp
add
les
push
inc
in
andl
sahf
aas
sbb
pop
aaa
cs
shlb
jge
add
pushf
push
jnp
std
daa
xor
xchg
xchg
cmpsb
mov
repz
cmc
pop
rorb
das
mov
push
add
and
pusha
rcrl
shrb
lods
push
cld
pop
xchg
sbb
lcall
sbb
jg
xlat
push
jo
add
aaa
add
outsl
cmc
aam
add
push
clc
stc
shl
cmp
int3
std
stc
xor
sbb
mov
fiaddl
pushf
leave
sti
mov
dec
mov
or
or
repnz
hlt
jns
push
xchg
repnz
xchg
gs
outsl
xchg
aas
movsb
xor
ret
arpl
adc
mov
scas
cmp
mov
push
pop
xlat
dec
bound
jne
or
jb
ret
xor
out
pop
clc
lret
cmpsl
and
jnp
aaa
cmc
jne
push
ljmp
xor
jae
and
nop
repz
inc
xor
jo
jnp
fs
aaa
inc
sbb
test
adc
jae
in
addb
ss
jg
repnz
std
cmp
sbb
sbb
rorl
mov
rol
and
aaa
loop
icebp
pop
mov
loop
mov
pop
mov
lcall
mov
ss
out
ljmp
mov
add
push
inc
cmc
aas
or
in
xchg
mov
adc
arpl
push
xchg
add
cli
add
cmp
mov
scas
adc
nop
ret
imul
rorl
lcall
xchg
cltd
mov
sbb
or
mov
jmp
test
mov
daa
adc
cmp
lods
adc
mov
pop
or
and
popl
fistl
inc
or
loop
call
movsl
mov
pusha
insl
pop
sbb
aaa
xchg
test
lods
mov
notb
mov
add
mov
and
sbb
cwtl
repnz
sbb
jnp
cmpsl
fistps
rcrb
and
repnz
mov
sbb
xor
pop
fisubrs
inc
lcall
mov
rcl
pop
mov
sub
out
xchg
das
and
inc
and
mov
test
xor
pushf
pop
or
int3
adc
pop
imul
pop
sbb
mov
fwait
test
popf
lods
nop
adc
iret
lahf
cmp
in
iret
sub
pop
icebp
sarl
mov
or
and
dec
xlat
push
iret
pop
xchg
lock
je
push
out
jb
adc
push
out
and
test
ja
mov
mov
adc
shll
adc
out
adc
dec
mov
xchg
hlt
rorl
xlat
mov
cmp
fistpll
lret
ds
jl
popf
fwait
adc
jmp
cwtl
and
jnp
xchg
adc
leave
jne
mov
lahf
cld
fs
out
nop
mov
inc
add
pop
jmp
sbb
out
fistpl
cltd
imul
std
data16
inc
test
xlat
ss
enter
enter
mov
fildll
ret
sbb
out
nop
jnp
xchg
sti
fs
xchg
jmp
xchg
push
pop
test
test
imul
sbb
mov
mov
and
and
inc
popf
adc
push
scas
xor
or
dec
add
movb
and
pop
shlb
mov
repnz
or
lret
inc
jle
stc
leave
add
or
dec
jnp
push
test
clc
adc
cmpsl
jns
xor
jmp
rclb
add
push
mov
sbb
loope
outsb
ret
cwtl
pop
iret
inc
xor
or
les
pop
sbb
in
push
das
push
repz
aaa
cmp
outsl
jp
xor
bound
es
push
ss
movsl
cmpl
add
dec
pop
lret
jle
ds
inc
xchg
or
jb
incl
test
mov
ret
cwtl
aad
cld
mov
mov
std
cmc
in
xor
sti
out
or
test
mov
inc
notl
inc
fmull
iret
pop
aad
pop
dec
jno
xchg
mov
call
mov
je
stc
ja
mov
lea
lea
enter
orb
out
mov
jae
adc
adc
nop
pop
mov
pusha
jle
loop
mov
outsl
push
rol
sbb
sbb
mov
jge
and
sub
adc
pop
and
imulb
cmp
iret
lds
cmp
push
sti
into
sub
inc
loope
mov
adc
je
push
leave
clc
stos
inc
in
fwait
cmp
push
adc
jecxz
insb
jb
push
stos
jmp
js
fdiv
xor
jmp
inc
pop
aad
fsubrp
sbb
ret
addr16
clc
mov
sbb
enter
clc
test
mov
mov
clc
cwtl
adc
ljmp
adc
cli
scas
adc
pop
cmc
inc
scas
xor
mov
cmp
xor
into
sbb
rcll
enter
mov
adc
sbb
leave
jg
cmpsl
jecxz
jbe
pop
xor
in
enter
out
outsb
jl
add
jb
cmp
loope
lahf
adc
xchg
push
sub
rclb
add
mov
xchg
aad
jno
dec
push
sub
fwait
pop
popa
xor
ljmp
fsub
push
es
jbe
pushf
mov
jnp
add
mov
jecxz
mov
lock
loop
pop
jl
adc
outsb
or
lds
shr
jmp
xchg
out
cmp
xor
mov
inc
rcl
add
inc
inc
pop
inc
sbb
cmp
mov
loope,pn
out
js
xchg
enter
pop
cli
jecxz
mov
adc
loop
adc
lcall
hlt
movsl
jno
or
pop
jge
loope
nop
repz
and
pop
xchg
push
or
pop
out
and
push
addl
fdiv
aad
cmp
test
xchg
stc
add
xchg
push
test
cmp
out
dec
outsb
andb
and
aad
xchg
jecxz
and
adc
in
mov
loope
add
xchg
pop
xor
leave
cwtl
push
push
dec
iret
addl
ret
jg
jae
dec
sub
andb
cmpsb
pop
iret
pop
nop
roll
mov
xor
mov
add
movb
testb
xchg
gs
cmp
movsb
mov
lret
data16
ds
sub
stos
sbb
pop
pop
cli
rcrl
shlb
decl
in
mov
repnz
sarl
jge
and
subb
popa
rcrb
or
loope
fdivs
lret
sbb
push
pop
cmp
pop
stos
xor
xlat
lock
jmpw
mov
outsl
in
and
dec
cmpb
cmp
lret
sub
leave
lds
xor
jle
mov
jmp
bound
or
pop
push
ljmp
outsl
pop
or
or
and
dec
test
sub
in
jnp
stc
cmp
cwtl
ljmp
dec
cmpsl
aas
jge
imul
adc
aaa
xor
mov
xchg
push
cmpsb
addr16
sub
jb
inc
stos
jb
sub
test
xchg
pop
nop
divl
call
in
sub
int
push
xor
sub
xlat
scas
popa
notb
cmp
inc
cmp
mov
dec
sub
das
fdivl
inc
daa
cmc
lret
pop
mov
sbb
and
fiaddl
js
add
and
xchg
and
dec
movsb
repz
stos
and
mov
inc
adc
aas
or
mov
outsl
fisubs
stc
fs
jae
pop
outsb
aaa
mov
fs
test
repnz
aas
inc
hlt
mov
mov
outsb
shll
cld
sub
test
stc
out
aaa
inc
lods
je
mov
ret
fidivrs
push
sub
push
into
xor
int3
inc
and
xor
sbb
sbb
dec
xchg
int
js
sub
pop
fistps
push
xchg
loopne
mov
shr
jmp
adc
js
out
mov
mov
movl
loop
fmuls
cmp
dec
add
into
scas
lcall
mov
cmp
and
jnp
cwtl
test
pop
aam
fsubrp
and
push
pusha
mov
mov
or
inc
mov
dec
mov
es
popa
repz
xor
int3
sub
repz
pop
fs
and
stos
cmpsb
xchg
fsubrl
ja
aaa
pusha
cld
popf
icebp
sub
push
mov
pusha
mov
add
outsb
mov
ret
adc
daa
test
pop
push
push
sti
outsl
xor
mov
cmp
inc
in
jecxz
cli
jns
inc
roll
mov
push
lret
ja
adc
pop
popa
sub
stos
ffree
push
adc
pop
mov
mov
aaa
push
popf
das
xor
in
out
or
add
xchg
sbb
or
mov
xchg
dec
mov
out
xor
test
pop
dec
push
popf
dec
cmp
aas
cmpsb
mov
push
aad
add
les
out
shrb
sub
out
fucom
lret
fmull
ret
jg
jl
sbb
testl
sbb
mov
addr16
or
push
and
popa
fsubp
and
jp
pushf
test
out
addr16
or
imul
fistl
scas
mov
mov
mov
push
sahf
pop
sbb
cmp
fs
stos
mov
jmp
fsubs
rcr
dec
dec
shlb
in
and
outsb
ja
jne
das
mov
xor
cmp
push
push
xchg
jbe
sbb
lret
jmp
mov
inc
xor
sub
lcall
jns
clc
sub
sbb
add
xor
rorl
int3
xor
and
ficomps
dec
sub
sbb
mov
or
pop
out
adc
mov
cwtl
bound
cld
popa
and
jge
cltd
cmpsl
leave
xor
cmp
hlt
or
jns
add
into
push
into
pop
imul
xchg
jg
xor
sarl
hlt
sbb
xor
sub
push
js
int
xor
imul
xchg
loopne
xor
sub
outsb
jg
pop
jg
clc
xchg
mov
mov
or
dec
ss
leave
repnz
sahf
outsl
push
repnz
in
or
fbstp
xor
mov
adc
fs
hlt
pop
add
js
das
loop
mov
xor
mov
jns
and
outsl
add
pop
popa
or
push
push
iret
add
jecxz
sub
jae
mov
daa
cmovge
aaa
ret
or
mov
add
adc
enter
fidivl
sar
outsb
dec
pop
xchg
xor
retw
dec
ror
inc
fstpt
test
cmpb
mov
rcrl
mov
lods
mov
cld
mov
insb
inc
dec
les
lods
std
fwait
test
lods
jno
jnp
push
dec
fsubs
cmp
and
lret
sub
dec
aas
mov
shlb
jae
les
jecxz
cmpsb
jecxz
lds
popa
je
adc
pop
jae
rol
add
lods
ret
mov
aas
ds
or
dec
lock
gs
jp
rolb
mov
mov
add
push
stc
and
lret
sbb
mov
mov
xchg
lcall
lds
pop
loop
loope
mov
leave
xchg
leave
imul
dec
dec
test
and
cmp
sub
push
lcall
insl
repnz
sbb
mov
shll
adc
test
mov
lock
cmp
imul
adcb
dec
jo
push
imul
out
jmp
sub
mov
inc
movsb
icebp
lret
lds
sub
adc
fcmovnu
or
stc
or
fidivs
pop
inc
out
out
into
and
packsswb
push
and
cmp
lods
call
rol
xchg
push
jo
jmp
fucomp
scas
cltd
jg
jge
fmull
mov
dec
sbb
xchg
mov
adc
mov
es
sti
mov
jmp
cmpb
test
cmp
mov
sub
subl
mov
add
inc
aam
mov
sbb
jb
mov
mov
sub
inc
int3
cltd
ja
daa
rclb
mov
icebp
icebp
fs
cmp
pop
sbb
adc
in
push
push
js
movsb
loopne
fcomps
fidivl
stc
pop
dec
jmp
call
jle
les
inc
xor
jg
pop
loope
mov
fcmove
fs
and
pop
mov
xchg
cmp
sub
fldt
aas
cs
mov
mov
orb
dec
or
aaa
and
test
jmp
sbb
push
movsb
dec
lock
ret
lret
stos
mov
pop
cwtl
dec
mov
mov
icebp
add
inc
sub
fucomip
fs
xor
faddl
push
pop
sbb
imull
out
push
lret
rolb
adc
sbb
orb
xchg
jne
xorb
push
test
sbb
mov
iret
pop
in
scas
in
mov
loopne
and
xor
jnp
adc
cmp
sub
cmp
sub
fptan
aas
mov
dec
dec
sbb
pop
add
adcl
idivl
dec
inc
push
in
jbe
cmp
clc
lret
pop
add
pop
jne
inc
xor
and
call
jp
xchg
xchg
jo
orb
push
test
jne
mov
inc
push
into
mov
and
mov
sub
adc
loop
push
fwait
aad
add
mov
mov
jp
loopne
pop
es
out
fstpl
bound
xor
in
add
xor
pop
mov
sbb
test
cmp
cld
insl
popa
add
dec
popf
sti
out
inc
sbbl
xchg
cwtl
movsl
mov
std
mov
shlb
out
mov
or
mov
mov
sbb
pop
pop
jno
push
mov
pop
pusha
loope
jmp
shrb
jbe
cli
out
xor
pop
nop
and
adc
mov
test
rcr
call
out
rcl
cltd
fsubl
mov
sub
out
inc
xor
jge
ret
lods
cld
and
daa
pop
out
push
jg
add
xlat
int
div
faddp
xchg
mov
mov
out
int
mov
dec
push
sbb
stc
repz
and
repz
arpl
push
loopne
insl
hlt
sub
shlb
push
xchg
test
outsb
mov
les
out
mov
mov
dec
fmuls
cltd
jmp
inc
xor
adc
push
jle
lret
popa
divb
leave
in
jge
in
in
and
movsb
dec
lcall
mov
add
pop
jne
stos
fistl
pusha
in
fldl
sbb
lret
xor
aaa
xor
pop
sub
stos
sbb
mov
loope
xchg
mov
mov
insb
js
jae
pop
push
jno
xor
popa
add
idivb
ret
lods
and
insb
jbe
cli
pop
xorb
leave
xor
xorb
fucomip
in
pop
sub
or
call
inc
dec
in
sub
mov
cmp
xlat
fld1
mov
sbbb
pop
insb
pusha
or
cwtl
insb
sarl
out
sbb
jmp
ret
add
inc
addr16
stos
jne
jge
out
out
dec
orb
shlb
out
mov
dec
mov
jp,pt
inc
or
scas
out
jno
dec
jl
dec
nop
mov
sarl
pop
rcrl
jo
cs
jo
sti
sti
push
mov
ljmp
or
pop
sub
and
push
adc
mov
popa
bound
add
enter
push
cmp
insb
jae
mov
stc
fldl
xchg
xor
mov
push
test
sarb
in
les
loop
pop
inc
movsl
gs
pop
jno
mov
ret
and
and
add
hlt
xchg
popa
push
cli
mov
jecxz
lds
es
mov
outsl
pop
fidivl
xchg
jl
repnz
xor
cmpsb
cmp
pop
jecxz
mov
icebp
aam
test
pop
in
out
loope
cwtl
or
add
inc
ficompl
popf
push
sub
adc
jmp
cmpsb
and
cmpsb
mov
lods
pop
mov
pop
sbb
out
call
int
dec
shlb
mov
aas
pusha
inc
shlb
jns
in
inc
test
mov
in
cmp
loopne
cmp
push
sti
testl
fldt
xchg
jb
xor
and
mov
add
into
add
adc
decl
lods
repnz
fiadds
pand
mov
inc
push
xchg
pop
clc
shll
popl
popa
push
cli
push
or
divb
repnz
loop
faddp
stc
int3
test
push
dec
mov
ficompl
xchg
pop
add
lahf
and
cmp
inc
cli
add
add
adc
and
ror
jo
lret
sub
pushw
xor
mov
add
push
or
fwait
adc
lret
xchg
daa
adc
xchg
flds
pop
add
pop
dec
dec
icebp
imul
mov
icebp
stos
cmp
cwtl
insl
jb
cmc
jmp
enter
outsl
lret
pop
cmc
incl
sti
cmc
pop
repnz
xchg
in
mov
mov
push
mov
mov
das
mov
pusha
or
ret
enter
push
jle
test
xor
push
mov
lods
mov
stos
test
jne
mov
push
pusha
and
inc
dec
xor
mov
xchg
loop
push
pmovmskb
and
andl
xchg
mov
jnp
xor
sbb
mov
jne
out
inc
ja
xlat
scas
mov
cmp
inc
fs
jl
arpl
jno
repz
mov
arpl
pushf
popa
lock
cmp
and
push
cmp
enter
pop
xchg
push
outsb
stc
xchg
int
out
mov
es
out
push
dec
daa
mov
or
push
and
incl
pop
daa
add
push
imul
dec
fs
clc
js
mov
out
add
idivb
xor
pop
out
xor
rorb
ret
loope
dec
mov
xchg
mov
movsl
cmp
dec
addl
xchg
add
mov
and
mov
cmpsl
add
insb
int
out
aad
aam
lea
push
data16
nop
popf
movsl
xlat
fimull
and
int
jne
inc
cmc
rcl
xor
cld
xchg
orb
imul
adc
inc
or
sub
cmpsb
rorl
and
addr16
mov
mov
call
xchg
rcrl
adc
add
lret
mov
imul
aaa
jmp
ja
push
dec
loop
mov
mov
adc
adc
pop
xchg
push
add
out
pusha
or
inc
mov
fidivl
xor
jecxz
xchg
cmp
ret
dec
mov
out
sub
push
sub
add
push
into
bound
or
sbb
cltd
lock
shlb
cmp
insl
mul
pop
aaa
ret
push
add
bound
es
scas
sub
cmpsb
repnz
adc
ss
stc
clc
jne
sbb
pop
divl
sahf
jb
inc
mov
int
iret
repnz
icebp
cmpb
or
in
sar
pop
dec
stos
xchg
and
leave
cli
xchg
pop
sbb
xor
fadds
out
cmp
dec
test
lcall
pop
or
jo
lahf
cmpsb
stc
mov
add
ficomps
push
not
fisttpll
loop
push
das
xor
push
out
xchg
xchg
push
leave
mov
push
adc
shlb
incb
iret
sti
shlb
dec
xor
jl
dec
add
in
sub
jne
nop
arpl
in
popa
insw
mov
adc
inc
stos
out
sub
aaa
roll
dec
add
mov
enter
out
fiaddl
shlb
fmuls
lret
adc
gs
jne
and
adc
inc
outsb
inc
or
jmp
jno
out
sub
sbb
les
mov
jae
data16
jle
add
test
repnz
test
popf
xchg
push
jmp
jb
test
test
adc
test
shl
jno
inc
and
lahf
mov
mov
mov
pop
fwait
add
push
xchg
in
hlt
pushf
fnstsw
orb
pop
mov
out
add
sar
test
jb
jo
int
shrl
dec
push
mov
cld
jg
jae
int3
jg
nop
das
jp
inc
mov
enter
in
fiadds
scas
adc
insl
fsubrl
adc
loop
stos
movl
sub
faddl
stos
xchg
sbb
inc
bound
mov
jg
push
lea
fwait
je
mov
aaa
xor
cmp
and
cmp
adc
jbe
xchg
loop
jmp
push
dec
cwtl
mov
outsl
sbb
dec
filds
sub
pushf
cwtl
int
push
xor
jnp
cld
push
mov
pop
mov
jnp
sbb
mov
pop
imul
dec
lret
mov
std
pop
cli
cmp
inc
pop
ret
aad
xor
fld
ror
xchg
popf
dec
lcall
and
xchg
movsl
movl
push
ljmp
xor
out
push
enter
jge
ja
fs
cli
inc
mov
jp
pushf
push
pop
inc
into
xchg
inc
add
and
xchg
fiaddl
jbe
add
lods
stc
int3
xor
adc
into
inc
pushf
es
mov
add
dec
pop
or
cmpsb
inc
pop
pop
or
jo
into
fwait
je
jl
sub
outsl
sbb
mov
cmpl
and
add
dec
outsl
push
sub
pop
fdivl
in
int3
clc
ja
pop
mov
cmpsl
insl
push
les
xchg
pop
pop
repnz
and
add
mov
jne
scas
cmp
jge
sti
adc
mov
or
xchg
sbb
fisubrs
xlat
pusha
or
inc
adc
jmp
push
xor
mov
and
mov
shll
adc
dec
sbb
pop
push
cmp
sahf
and
and
mov
stos
cltd
in
imul
stos
sahf
xlat
ret
rolb
ljmp
mov
push
lret
sti
mov
fucomip
inc
cmpsb
insl
cwtl
jg
rcrb
aaa
adc
shrb
jo
dec
and
std
fcomi
and
xchg
sbb
or
mov
sbb
jg
pop
mov
ds
lahf
js
or
aas
ficompl
rorb
mov
je
xor
loopne
xchg
fnsave
dec
imul
lds
pop
cmp
push
aam
inc
out
and
pop
into
inc
mov
out
pop
xchg
and
popa
lcall
jb
sahf
and
and
in
inc
out
popa
lods
push
or
cmp
in
xor
cmp
jl
lahf
enter
and
out
mov
iret
xor
in
ret
mov
dec
pop
hlt
mov
popa
fstl
imul
pop
xor
jnp
je
enter
jp
in
and
leave
sub
pop
test
pushf
and
sub
cld
xor
xor
adc
inc
popa
popf
sbb
sub
mov
je
icebp
sahf
dec
mov
mov
and
sbb
leave
lret
pop
test
jmp
pop
iret
push
fistps
outsb
xchg
popf
sub
int3
rol
ret
fstpt
test
adc
clc
lock
shr
gs
jl
andb
cmp
mov
dec
roll
mov
test
mov
dec
leave
jg
jp
sbb
int
xchg
lods
test
jecxz
pop
inc
jge
push
testl
add
mov
jne
jge
enter
sub
xchg
les
in
cwtl
aas
scas
rcrl
ja
sub
cli
mov
das
or
mov
data16
push
push
cmp
push
aad
shlb
cmp
jbe
mov
mov
sbb
jb
jbe
ds
jg
dec
and
push
push
cld
add
pusha
dec
dec
ljmp
sahf
ja
push
push
gs
int
sub
aad
sarb
fdiv
fs
and
push
out
adc
jbe
ret
ds
aaa
sahf
inc
or
mov
nop
mov
sbb
stos
fs
push
out
out
cmp
mov
sbb
push
xor
dec
fwait
imul
mov
mov
repnz
ret
adc
mov
mov
sub
fwait
lcall
push
cmpsl
pop
test
faddl
pop
int3
dec
push
pop
ja
adc
mov
popa
test
xor
jo
mov
xchg
fsubp
movsl
mov
dec
mov
loope
adc
fs
pop
inc
jecxz
data16
adc
bound
orl
push
sti
adc
mov
sbb
mov
push
mov
fcompl
ljmp
cmpsb
enter
mov
push
std
fnstenv
js
jp
xchg
bound
push
xor
idivb
xor
push
ss
mov
test
mov
icebp
ret
rcll
push
test
jnp
xor
out
jo
mov
cmp
ret
pop
aam
insb
sub
mov
add
push
lcall
bound
leave
popa
cltd
dec
jg
enter
stos
stos
jb
movsl
aas
iret
jl
dec
imul
insl
scas
test
test
jno
stos
roll
xchg
sahf
pop
bswap
dec
pop
jg
lahf
test
mov
push
add
int3
ret
shll
lods
and
iret
into
pop
lcall
iret
mov
or
repnz
in
shl
fs
loop
clc
sub
jmp
pop
and
sbb
jns
shlb
mov
push
xchg
jp
enter
cld
into
add
sub
lret
push
mov
and
pop
cli
stc
sbb
rolb
jl
mov
ret
adc
aas
and
and
push
lods
push
mov
daa
jo,pt
jb
cmp
pop
ficompl
mov
es
insl
sbb
xor
push
jl
jg
sti
mov
adc
pop
pop
pop
adc
shr
sub
dec
push
sbb
cs
lret
sub
dec
add
ret
and
lods
outsb
rcrl
scas
jne
movsb
cli
fs
push
or
xchg
dec
jl
mov
adc
test
cmp
adc
scas
push
xchg
inc
lods
sbb
bound
sbb
iret
or
pop
in
rcrl
add
push
arpl
mov
mov
ret
dec
gs
dec
push
mov
out
or
inc
xor
dec
and
adc
ret
iret
jmp
and
cmpsl
sar
ds
out
xor
sbb
add
js
adc
and
mov
pushf
fwait
idivb
dec
and
cmp
mov
in
push
repnz
sbb
inc
cmpsl
dec
add
push
and
cmpsl
mov
inc
push
std
mov
jg
pop
into
adc
lret
int
xor
out
rcl
xor
lcall
pushf
sub
ftst
mov
add
mov
pushf
push
xchg
pop
cmp
sub
inc
ror
mov
inc
mov
dec
push
pushf
call
fs
ret
enter
add
cmp
cmc
xchg
pushf
ljmp
aam
adc
lods
sub
stos
adc
jmp
pusha
xchg
das
icebp
push
arpl
dec
and
into
adc
pop
stc
bound
and
mov
add
aam
pop
loop
mov
fnstsw
jmp
add
mov
insb
xor
bound
pop
int3
adc
or
imul
jge
add
outsb
mov
adc
push
jg
sub
es
mov
jae
mov
scas
xchg
test
popf
stc
xchg
cli
subb
push
or
inc
repnz
sahf
lsl
push
dec
add
jp
jg
ror
sub
pop
and
pop
mov
add
xchg
sbbl
cwtl
sbb
jmp
xor
inc
pop
enter
ret
idivb
orl
xlat
dec
mov
shlb
jae
push
ret
lods
push
stos
sub
push
and
push
cmp
cmp
mov
jl
jne
mov
mov
push
mov
cmp
add
aad
out
adc
in
shrl
cltd
repz
cli
shll
push
sub
out
stos
jbe
cmp
enter
mov
ret
icebp
push
in
sub
mov
push
jb
xchg
xor
sbb
popa
popa
mov
xor
enter
aas
dec
dec
outsl
sub
outsl
add
movsb
inc
mov
inc
enter
push
gs
lret
add
repnz
ja
mov
popa
or
notl
lcall
push
cmpsl
insl
pusha
mov
fucomip
ds
pop
push
roll
mov
xchg
and
adc
rcrl
arpl
rol
ja
add
ffree
invd
and
sbb
repnz
jp
movsl
test
fstps
dec
mov
das
or
pop
xor
int
mov
pop
push
push
hlt
stc
shll
lods
test
sbb
jg
cmp
test
cs
and
mov
lock
mov
sbb
push
aas
imul
or
add
dec
sbb
push
sti
fistps
push
sbb
jno
cli
dec
push
cmpsb
push
lods
pop
nop
push
int
stos
call
es
dec
mov
mov
mov
xor
daa
scas
jae
mov
insb
aad
jge
sub
ror
inc
fcomps
sub
flds
jle
in
adc
in
inc
iret
lods
aas
sub
or
out
lods
gs
jle
sbb
jbe
inc
testb
lahf
pop
dec
lea
nop
push
cmp
cmc
test
add
cmp
and
ud1
aas
xor
pop
or
jp
xchg
push
push
pop
push
xlat
push
jo
dec
mov
sub
shl
test
fs
add
nop
inc
xchg
lcall
pushf
imulb
lock
out
and
mov
sub
pop
mov
jmp
push
repz
out
scas
or
jmp
or
sbb
fldcw
push
adc
add
popf
int
cmpsb
cmp
push
and
movsl
ret
and
roll
sbb
jecxz
mov
fwait
jmp
clc
lcall
shlb
movsb
shll
in
loope
xchg
bound
aam
notl
je
outsb
lcall
imul
xor
and
pop
mov
clc
push
loope
push
dec
call
daa
push
xchg
sbbl
mov
enter
ret
and
ja
add
jns
rcrb
jg
mov
in
adc
mov
pop
add
mov
push
mov
jbe
sbb
aam
sbb
lcall
sbb
js
movsl
push
mov
xor
xor
push
loop
ret
iret
xchg
movsb
in
mov
cli
fs
mov
mov
add
popa
mov
and
stos
out
in
imul
imul
mov
jge
pop
dec
fwait
daa
nop
or
mov
inc
imul
xor
xlat
arpl
dec
xchg
jns
fldenv
scas
inc
loopne
jg
int
mov
fsubr
dec
jle
dec
dec
cmpsb
sub
fdivrl
add
mov
sar
pusha
mov
push
in
outsb
inc
jp
add
popa
xchg
std
into
dec
jb
sub
add
push
cmp
mov
in
pop
stos
lret
xchg
mov
inc
jl
aaa
or
addr16
jae
mov
sub
inc
pushf
inc
jbe
lods
adc
fnstcw
add
mov
sub
insl
xchg
ret
fs
adc
fdivrp
movsl
xor
ret
mov
fildl
mov
xchg
mov
xor
jne
pop
adc
fiadds
packssdw
cld
aam
xor
out
bound
call
test
dec
dec
xchg
xor
and
lahf
or
add
in
xchg
rorb
sbbl
fdivp
test
mov
add
push
cwtl
add
cmc
cmp
js
jmp
mov
push
rcl
ljmp
pop
jge
sub
mov
notl
in
adc
xchg
pop
les
test
stos
xchg
xchg
mov
sbb
mov
mull
cmc
rorb
mov
icebp
fsubl
dec
fwait
bnd
sti
mov
aam
mov
pop
popl
jb
mov
sub
in
idivl
in
adc
lods
push
mov
mov
cli
dec
rclb
loopne
imul
xchg
ljmp
mov
out
fcmovnb
mov
popa
push
in
xchg
nop
insl
movsb
fisttpll
cmp
ss
repnz
adc
pushf
push
repnz
popf
lcall
dec
pushf
xchg
cwtl
in
pop
test
cs
out
sbb
repz
pop
mov
mov
lcall
adc
inc
int
xor
xor
fstl
inc
jmp
push
push
jae
push
xchg
mov
aad
es
sahf
andb
jb
ret
out
mov
and
cmpsl
cltd
sbb
mov
out
sbb
cmp
sub
cmp
incb
sub
push
aam
pop
sbb
sti
ret
cmp
sbb
mov
bnd
scas
mov
data16
ficompl
imul
and
scas
and
inc
dec
xor
fwait
jmp
mov
pop
lock
fwait
imull
dec
mov
mov
movsl
inc
xchg
loope
xor
pop
scas
in
or
dec
loope
add
push
mov
dec
mov
or
int3
adc
sub
mov
push
popa
fildl
ret
mov
adc
push
icebp
fs
jp
mov
pop
fucomip
int3
pop
cmpl
fdivrs
cld
test
call
and
aam
mov
push
xor
rolb
add
ds
mov
in
mov
dec
fwait
mov
nop
pop
ja
add
mov
sbb
popf
out
mov
out
cmp
jae
jns
loop
xor
push
dec
adc
sbb
cmp
xchg
insl
lods
push
orb
lret
mov
notb
icebp
xor
mov
movsb
out
cli
shrb
inc
mov
lcall
sub
lret
js
push
stc
push
movsl
aas
push
adc
push
jecxz
rorl
out
jnp
shl
popl
or
xor
popa
bound
xchg
ljmp
das
cmpb
je
cmp
mov
daa
fidivrl
jecxz
scas
cs
loop
pop
loope
jb
push
cmp
mov
add
jl
and
call
pop
cmp
rol
inc
xor
es
int3
notb
sbb
or
add
shrl
sbb
addb
cmc
mov
rcrb
ds
pop
hlt
roll
push
test
add
or
pop
movsb
dec
aas
sahf
loopnew
xchg
outsl
fildll
dec
sub
cld
jle
push
pushf
mov
movb
sbb
mov
insb
test
dec
xor
dec
xlat
sbb
in
and
repz
dec
call
pop
push
inc
cmp
xchg
hlt
mov
xor
push
mov
test
cmp
or
xchg
xchg
ret
xor
xchg
inc
in
cmovp
dec
xor
xor
repnz
mov
scas
cmp
jne
lods
test
mov
mov
adcl
gs
dec
fstpl
scas
test
cmpsb
dec
push
scas
out
inc
cs
jb
movsb
repnz
sbb
icebp
jb
pop
or
mov
shll
daa
in
adc
js
fmuls
adc
iret
jbe
jmp
popf
arpl
jge
add
aad
xchg
mov
push
iret
inc
lahf
shll
sub
in
sbb
mov
mov
jne
in
addr16
cmp
xlat
push
sub
mov
imul
bound
jecxz
ret
or
test
aaa
mov
sbb
divl
mov
dec
aam
fisttpl
add
enter
out
iret
call
cmp
sub
add
dec
add
fnstsw
mov
les
xor
inc
sub
fidivrs
movsl
add
xchg
cmc
pusha
sbb
inc
in
test
pusha
xchg
mov
lds
cmp
cmc
xchg
fcoml
pop
fistpl
or
mov
jl
sub
fs
jbe
stos
and
mov
or
push
inc
mov
cmp
push
ljmp
icebp
int3
mov
pop
mov
lods
jae
stos
ret
insb
in
jge
shrb
mov
scas
mov
sbb
push
or
loop
xchg
inc
sub
add
xchg
dec
inc
test
popl
mov
out
jle
testl
fisubs
sahf
or
fidivrl
fisubl
mov
jbe
pop
lock
scas
pop
push
xor
sbb
sbb
movsl
and
mov
adc
sub
push
popa
inc
xchg
icebp
add
sti
clc
and
mov
inc
inc
stc
add
inc
or
jmp
dec
movsl
ficomps
sbb
dec
pop
loopne
movsl
adc
mov
pop
xchg
aam
les
call
cmp
fdivrl
pop
dec
mov
fstpt
push
adc
push
jl
daa
icebp
daa
sub
push
mov
push
xchg
add
stc
mov
push
andb
in
cmpsl
and
xor
enter
inc
adc
clc
icebp
leave
ficoms
xor
mov
pushf
adc
inc
lret
adc
xor
inc
push
xor
sbb
or
daa
inc
jns
xor
fcomip
ljmp
fwait
fmulp
pusha
faddl
mov
add
cmp
mov
lods
inc
popf
in
xchg
orl
cmp
mov
leave
mov
fnstenv
je
cmp
dec
jl
push
iret
scas
add
jne
stos
pop
cld
mov
mov
jns
enter
test
aad
jecxz
icebp
mov
cmpb
pop
stc
lods
ljmp
aad
shlb
ds
cwtl
ja
inc
movsb
ss
cmp
ret
fdivrs
movsb
fcompl
movsb
push
cmp
or
fldenv
sub
stc
mov
inc
jecxz
dec
sub
xor
popl
mov
mov
decl
movlhps
mov
xchg
pop
dec
adc
mov
popa
shll
scas
jl
xor
xchg
adc
enter
xor
dec
stc
and
and
adc
js
xor
and
dec
cs
stos
mov
mov
or
push
mov
push
test
inc
loop
push
jg
cmp
dec
sbb
out
mov
ljmp
jo
push
jnp
mov
aam
sbb
fdivrp
popa
jno
imul
and
xor
xchg
sbb
mov
cmp
pop
push
jnp
cli
in
push
xor
mov
imul
lahf
jno
xchg
sbb
xor
add
push
xlat
aaa
mov
mov
mov
pop
xchg
divl
pop
jg
call
cwtl
cmp
mov
mov
arpl
cmp
repz
mov
mov
xor
lret
dec
popa
insb
lret
out
lods
sbb
push
aas
mov
repnz
repz
jp
in
sbb
int
sub
adc
cmp
test
mov
leave
or
adc
pop
add
xor
and
int
loope
icebp
sub
pop
imul
jecxz
int
add
out
cmp
pop
mov
jl
addb
std
aam
rclb
daa
mov
pop
jb
bound
add
xor
int3
je
data16
fdivrs
rorl
jle
cli
mov
fs
sbb
lods
xor
adc
fwait
pusha
and
test
cmp
ljmp
ja
into
rcrl
sub
cwtl
sbb
pop
int3
jl
xchg
jmp
jnp
repnz
inc
je
inc
pop
lret
enter
movsb
and
test
lret
inc
or
jecxz
cmp
mov
ret
mov
cli
loope
or
or
fstl
push
fsubr
iret
mov
repnz
pop
dec
inc
mov
mov
mov
xor
inc
in
xor
xchg
push
daa
pop
jbe
imul
addr16
pop
add
sub
add
xor
pop
dec
loope
hlt
and
jbe
push
mov
or
ljmp
dec
jo
jns
aam
ja
adc
cmp
add
and
lds
mov
or
loop
inc
fcompl
popa
mov
negb
sbb
in
or
repnz
xchg
cmp
les
push
test
imul
je
inc
mov
lcall
pop
add
or
push
sarl
addr16
adc
imul
jl
sbb
sub
fidivl
loope
sbb
ret
mov
fdivl
mov
scas
arpl
xor
and
sti
incl
outsl
out
cmp
and
popf
xchg
push
mov
mov
shl
ja
lods
push
enter
bound
push
or
xlat
addr16
mov
scas
bnd
add
jmp
and
in
movsl
push
pop
vpandn
sti
call
icebp
dec
loopne
dec
sbb
push
ret
push
lods
nop
std
int3
mov
sub
lock
cmp
es
clc
testb
add
lods
push
sahf
je
and
adc
add
aas
out
sub
mov
inc
in
mov
in
push
adc
gs
xchg
icebp
pop
addr16
test
popf
call
sub
scas
popf
mov
pop
fadds
sub
aas
sub
dec
push
inc
mov
pop
xor
cs
push
nop
movsl
inc
ret
int3
or
pop
pop
gs
jo
dec
cs
rcll
and
push
and
out
outsb
fnsave
pop
out
jge
notb
xchg
mov
fwait
sbbl
mov
and
jmp
mov
xchg
pop
loope
cmpsb
xor
xchg
leave
dec
repnz
or
hlt
jmp
cmpsb
scas
pop
gs
cmp
es
mov
loop
das
xchg
std
and
ret
mov
xchg
fwait
orb
push
lds
inc
notb
xchg
add
push
cmp
dec
mov
sub
xchg
nop
movsl
dec
add
insb
lret
mov
sbb
dec
popa
out
cs
in
fdivl
in
in
adc
lar
mov
shld
push
push
aam
js
aaa
pushl
xor
pop
mov
rol
mov
lahf
mov
jmp
lcallw
out
cmp
push
aad
inc
leave
pop
clc
mov
push
pop
mov
pop
faddl
sbb
outsl
pushf
daa
cwtl
sub
ret
loop
xchg
fs
je
fwait
repz
es
and
cmp
sbb
xor
jbe
mov
mov
cs
repz
js
cmp
jns
mov
pop
jne
mov
mov
mov
mov
mov
or
inc
inc
addr16
mov
shlb
int
les
xchg
push
pushf
aad
jl
fistps
incb
jl
and
fnstsw
mov
mov
scas
sbb
push
rcl
int
mov
mov
stos
rcl
xor
test
fwait
cltd
leave
subl
nop
adc
adc
into
pop
jnp
mov
ret
enter
push
into
leave
in
sbb
js
adc
fwait
mov
and
dec
std
outsl
and
test
lds
and
sbb
icebp
push
sahf
jno
std
pop
aaa
jle
pop
xchg
fsub
cmp
daa
cmp
fs
rclb
fucomp
adc
fdivs
jns
and
xchg
jl
mov
daa
imul
repz
lods
movsb
pop
ret
xor
adc
cld
fistpll
in
push
dec
shlb
loopne
jno
inc
adc
jl
call
jo
or
pop
lcall
push
xchg
scas
pop
std
cmpsb
jl
pop
jp
clc
pop
pop
enter
inc
aaa
nop
pop
cli
and
jbe
lcall
insl
sti
fwait
outsb
cld
sti
rorl
jg
fistps
sbb
fnsave
test
loope
push
sbb
cwtl
std
je
int
mov
movsb
inc
cmpsl
popa
aas
into
mov
sbbb
sub
or
fidivl
data16
hlt
ror
stos
xlat
jmp
addr16
adc
and
jae
mov
cmc
sbb
xchg
hlt
inc
xchg
fwait
outsl
push
ljmp
int3
cld
dec
mov
aad
adc
mov
mov
xchg
jmp
lds
sbb
push
xor
std
push
fsubrs
sbb
adcb
lods
push
arpl
and
mov
xor
mov
insb
nop
mov
jne
mov
call
mov
mov
fcoms
xor
movsb
add
pop
hlt
push
mov
and
ret
jl
push
add
sti
lods
addr16
enter
insl
mov
or
insl
les
cmp
jne
or
sub
imul
scas
add
mov
jmp
insl
adc
mov
shlb
test
lock
adc
stos
cmp
ficoml
fwait
mov
jo
test
sbb
push
out
mov
shl
test
xor
push
int
outsb
dec
popf
std
mov
movl
out
imul
inc
lcall
cmc
inc
sub
mov
stc
xor
mov
popf
and
shr
insb
aad
mov
ljmp
out
inc
nop
lret
dec
lods
mov
sarb
sub
pop
repz
sarl
adc
repnz
cmp
and
mov
jnp
xchg
xor
loop
int3
or
jl
pop
mov
pop
jno
and
lahf
out
fists
and
pop
aad
mov
test
in
xchg
into
adc
mov
and
mov
jae
xor
fcoml
jge
ljmp
aam
mov
js
add
mov
xor
xchg
fmull
hlt
iret
ficoml
adc
mov
xchg
pop
lods
mov
xor
lock
iret
in
pop
outsb
fcompl
popf
cld
pop
sub
or
or
fs
adc
add
push
into
dec
pop
sbbl
push
out
jns
mov
jno
out
outsl
loopne
push
xor
cmp
cs
hlt
rorl
jge
cmp
nop
clc
xor
sbbl
xchg
cmp
push
cmpl
lret
mov
repz
clc
mov
in
addr16
mov
rolb
je
and
sbb
into
pop
shr
cmp
fsubs
xor
shl
xchg
jle
jnp
inc
mov
or
mov
mov
push
xchg
inc
outsb
and
inc
or
loopne
insb
in
mov
push
rcr
into
stos
fcompl
sbb
pop
lcall
test
sbb
cltd
popf
nop
popa
cmp
lret
jne
addr16
add
jl
xor
sub
xor
stos
loope
adc
icebp
leave
pcmpgtb
xchg
pushf
test
push
add
or
and
adc
movb
xchg
cs
cmp
andl
xorl
jo
jmp
mov
push
push
icebp
or
cmc
lods
pop
rcrb
mov
test
fimull
es
mov
mov
xchg
ljmp
and
cli
cmp
mov
cmpsb
gs
mov
xchg
sub
imul
movsb
sbb
jnp
arpl
adc
lahf
dec
aam
fs
lds
es
cmp
test
enter
push
jge
adc
inc
pop
and
icebp
inc
out
jle
xchg
sahf
into
repnz
mov
ret
leave
sbb
mov
mov
cltd
les
test
dec
or
xchg
clc
and
js
xor
xchg
mov
push
push
xlat
lret
jns
lret
shll
inc
push
jnp
cmp
out
jge
loop
loopne
out
or
ret
and
or
pusha
loope
mov
bound
test
sub
int3
leave
lds
and
mov
cltd
mov
or
sbb
das
pusha
mov
adcl
mov
adc
rorl
test
xor
call
ficoml
idiv
or
or
pop
xchg
pop
lret
add
popa
sbb
sub
pop
dec
xor
xchg
push
movb
xchg
fwait
addr16
out
xor
andl
inc
xchg
push
inc
xor
sub
sbb
jns
add
js
out
jns
je
sub
mov
dec
add
shl
pop
pop
in
inc
cmpsl
cmpsb
xor
jno
movb
jmp
xchg
jb
iret
inc
lods
es
bound
loopne
pop
inc
insb
push
or
push
jecxz
mov
pop
adc
cmp
mov
mov
dec
dec
adcl
mov
inc
xor
popa
mov
sti
ss
stos
mov
mov
jecxz
xor
pop
lods
dec
std
and
push
pop
int
imul
xor
mov
sbb
xor
dec
inc
mov
cli
cmp
inc
insl
xchg
sbb
hlt
cs
mov
sbb
lock
hlt
fs
sub
addr16
negl
push
mov
sarb
jns
cmp
rol
push
in
mov
and
pop
xor
scas
scas
sub
insb
orb
push
mov
popa
sahf
jge
adc
scas
lds
fists
aad
mov
shrb
jb
xor
out
jmp
or
je
mov
div
ss
add
fcoms
mov
pop
pop
loope
xor
cmpsb
sub
dec
stos
nop
nop
inc
add
stc
fbld
sbb
mov
arpl
jbe
mov
dec
cwtl
cmpsl
out
dec
mov
adc
push
int
lock
mov
inc
inc
repnz
cmp
fwait
adc
lds
fs
inc
jo
and
imul
mov
pusha
xor
hlt
nop
outsb
xchg
or
cmp
mov
jnp
or
dec
push
fldenv
xlat
cmpsl
add
aam
adc
adc
cs
xchg
pop
pop
sub
mov
lods
mov
xchg
sarb
pop
push
jmp
int3
mov
mov
adc
cld
xchg
cli
mov
push
or
pop
iret
or
fs
sub
mov
addl
inc
ret
insl
push
push
inc
push
jge
jle
and
jge
cmp
xor
js
pop
gs
xchg
pop
std
sbb
ret
mov
cld
pop
xchg
cltd
pop
loope
adc
imul
jl
repnz
sub
pop
pop
prefetch
dec
or
scas
in
jmp
js
sub
dec
sub
imul
dec
scas
mov
int
pushf
push
test
and
ljmp
leave
lcall
fimull
and
dec
rolb
push
cli
inc
fldl
test
mov
jns
js
or
js
push
sub
repz
lret
loop
cltd
jbe
xor
pop
sbb
in
mov
nop
adc
mov
pop
xchg
outsl
push
in
adc
mov
mov
add
sbb
push
xchg
xchg
out
adc
jge
insl
push
ret
pop
in
jmp
adc
popa
ds
inc
jb
sub
jne
cltd
mov
into
lods
sub
xchg
repz
mov
xchg
xor
inc
inc
or
stos
fst
fisubrs
fistps
xor
mov
mov
push
dec
push
loope
nop
mov
sti
mov
jb
dec
repnz
lcall
adc
loopew
jo
xchg
mov
cmp
fnsave
jl
jecxz
int3
scas
cmpsl
xchg
popa
dec
mov
inc
inc
aas
sub
cltd
fsubrs
dec
mov
and
add
mov
sarb
mov
test
dec
push
in
mov
xor
cmp
inc
push
inc
fstps
loopne
mov
push
push
xchg
jecxz
push
fisubs
jae
cmc
and
mov
and
ret
add
add
xor
sarl
mov
ret
xor
mov
std
rorb
in
not
int3
roll
rcrb
arpl
aam
imul
pop
push
loopne
sbb
insl
jmp
add
pop
sbb
pop
sub
cmp
lret
push
push
cmpsb
jge
cwtl
pop
push
mov
xchg
lea
loope
xor
arpl
xchg
aam
out
nopl
jns
push
push
imul
pop
das
daa
mov
ds
insl
sub
mov
jmp
cmp
repnz
jno
pop
cmp
outsb
add
enter
sti
pop
leave
pop
das
push
mov
and
pop
addr16
shll
sbbl
in
ror
inc
outsl
adc
dec
sti
aas
test
test
push
xor
cmpb
stc
test
into
adc
mov
cmp
adc
xchg
sbb
sub
clc
mov
pop
rcr
xlat
pop
adc
sbb
or
roll
inc
sbb
mov
mov
scas
dec
xor
repnz
lret
push
stc
pop
and
lods
dec
popf
and
fnclex
push
mov
mov
push
sbb
xchg
dec
jp
scas
aaa
inc
mov
mov
ljmp
cmc
int
mov
shrl
lret
push
dec
mov
daa
fucomp
push
dec
dec
xlat
inc
or
movsb
repnz
inc
xchg
jg
jbe
sti
or
push
pushf
fbld
lcall
movsb
out
add
fwait
and
mov
xchg
cli
aam
and
cmp
cmp
mov
in
pop
or
jmp
jno
mov
sbbb
stc
js
sarb
nop
mov
dec
mov
or
jp
pop
shll
pop
adc
xorb
or
cmpsl
jmp
pop
and
lock
popa
jp
sub
fsubrl
rcll
push
repnz
and
lds
dec
mov
pop
pop
cld
dec
call
mov
push
mov
push
aaa
mov
inc
jns
mov
daa
loope
or
mov
lret
jo
mov
inc
or
xchg
cli
inc
jns
iret
dec
jge
fstpl
test
rolb
mov
cmp
or
jg
fdivrl
pop
pop
pop
cs
inc
cmpsb
mov
cmpsl
fs
out
xchg
lahf
sahf
in
outsb
ror
fcoml
ret
sub
or
sbb
xchg
mov
ret
cmp
repnz
xchg
outsb
dec
mov
fistpll
in
pop
xchg
pop
sbb
cli
out
add
loope
arpl
cmp
in
rcl
popa
lahf
mov
xor
adc
mov
add
je
mov
mov
pusha
test
into
cmp
fistpl
xchg
insl
mov
cmpsl
pop
sti
push
jno
push
xchg
les
sahf
xlat
jp
pop
dec
lods
addb
mov
clc
push
arpl
dec
aas
les
mov
mov
fwait
mov
mov
dec
mov
mov
insb
icebp
cltd
xchg
push
pop
outsl
rcrl
movsl
mov
cmp
mov
cmp
sub
iret
jo
addr16
pop
push
jb
push
jns
jp
xor
inc
pop
mov
dec
sbbb
sbb
pushf
and
into
mov
xor
dec
cmc
in
dec
mov
cld
inc
push
in
cmp
in
sarb
pop
stos
jbe
addr16
sbb
jg
test
je
jbe
add
pop
mov
cs
cmc
les
jg
mov
fldt
jl
movsb
cmp
cmc
sub
js
push
clc
inc
sbb
push
repnz
or
mov
jbe
fdivs
mov
test
lea
in
xchg
mov
and
mov
or
mov
sub
or
mov
insl
invlpg
lret
and
std
dec
jne
daa
xchg
jmp
pusha
test
xchg
mov
or
push
jo
inc
aam
mov
mov
push
mov
gs
jge
sub
sbb
xchg
push
adc
mov
loop
inc
and
mov
sti
aaa
loop
mov
loop
call
dec
ss
out
xor
inc
es
mov
sub
xchg
rclb
pop
xchg
adc
jl
scas
out
pop
mov
add
inc
or
aaa
sbb
lods
mov
mov
jl
shll
in
mov
aas
outsb
mov
leave
pop
test
cmpsb
jmp
ja
js
negb
test
pusha
repz
fbld
xor
sbb
fnstenv
cld
lret
insl
stc
xchg
jecxz
bound
rcll
mov
scas
lods
daa
xorb
add
jb
stos
sub
add
jno
test
mov
jp
cld
xacquire
cld
jns
inc
out
test
add
out
stos
outsl
inc
adc
lret
push
iret
jns
clc
xchg
jecxz
je
xchg
rcl
cli
cmpsl
insl
mov
daa
mov
inc
mov
push
jnp
cmc
and
pop
fnstenv
xor
adc
inc
add
push
xchg
cmp
jmp
leave
fdivs
testb
imul
test
faddl
lock
ss
and
pop
jae
adc
cmp
les
or
mov
sub
dec
enter
out
cmpsw
sub
push
ja
inc
mov
loope
jbe
loope
das
stc
mov
shlb
jo
lcall
mov
push
xchg
xchg
sub
ret
sub
ljmp
ds
add
nop
fiadds
pusha
cmp
jns
pop
pop
sub
or
in
stc
mov
mov
outsb
sbb
mov
mov
pop
int
mov
push
xorb
int3
daa
dec
ficoml
push
pop
loopne
push
sbb
mov
ss
xchg
xchg
mov
or
sub
mov
xor
icebp
dec
push
sbb
scas
and
inc
sbbl
sbb
sub
add
adc
or
dec
call
sbb
mov
cmc
fstpl
fwait
dec
push
sub
movsb
push
icebp
cmp
mov
push
test
nop
or
aam
out
mov
in
push
mov
sarl
out
fwait
repz
fs
ljmp
fsts
repnz
call
xchg
sarb
icebp
or
pop
fwait
stc
adc
mov
sub
into
rclb
ret
out
inc
mov
mov
aas
pop
pop
xchg
sub
aaa
pop
cs
popf
fs
fdivrl
test
lahf
mov
pop
adc
mov
jno
scas
pop
mul
int3
mov
insl
shll
pop
push
mov
adc
mov
imul
pop
test
adc
shr
push
cli
test
xor
sbb
inc
and
and
pop
dec
cwtl
sub
mov
std
or
mov
inc
lret
clc
test
cmc
xor
cmp
or
in
ret
jo
push
js
jl
jno
cmc
inc
jns
idiv
in
inc
stos
push
fs
mov
add
nop
cld
pusha
dec
inc
and
push
rorl
sub
pop
shlb
mov
popf
inc
xchg
and
popf
add
sbb
andl
aaa
mov
test
sbb
and
xor
ffree
mull
inc
and
test
ds
orl
ja
mov
into
add
dec
fwait
addsubps
jne
sub
jb
dec
imulb
movsl
inc
adc
sahf
jle
pusha
or
dec
mov
nop
test
dec
dec
push
xchg
daa
pop
je
fcom
outsb
hlt
pop
sbb
sub
lods
fs
and
add
fistpl
xchg
sub
fidivl
ss
sub
inc
stos
push
inc
lret
pop
icebp
mov
loop
fsubs
add
pop
cmpsb
cmc
testl
call
arpl
popf
ret
xor
add
mov
les
enter
outsb
leave
cmc
rol
jecxz
mov
sbb
pop
jb
jle
push
jmp
cmp
rclb
dec
mov
cmp
stos
sbb
mov
cs
inc
arpl
pop
cli
sbbl
jmp
or
cmc
in
in
push
inc
mov
inc
test
divb
jecxz
add
mov
data16
jmp
jge
pop
jae
insb
push
adc
lea
mov
in
cmp
imul
push
push
cmp
and
jge
dec
pop
xor
cmp
adcb
adc
inc
outsb
xchg
sub
subb
int3
insl
cmp
and
mov
flds
lds
xor
cli
cltd
xor
cmc
jmp
and
inc
out
clc
cltd
das
adc
sbb
xor
sbb
repz
inc
pop
mov
xchg
inc
int3
and
icebp
dec
push
fcmove
inc
bound
sbb
aad
jo
stc
test
into
push
inc
mov
jno
mov
pop
std
adcl
push
scas
mov
lahf
js
sbb
pushf
outsl
test
clc
ret
inc
notl
in
outsl
repz
test
jecxz
in
fiadds
in
dec
nop
dec
pushl
jle
decl
mov
bound
dec
icebp
subl
sub
and
cmp
mov
icebp
addl
imul
pop
gs
xor
jmp
xor
jbe
jbe
cld
fsts
loop
mov
mov
jp
inc
push
sbb
push
pop
leave
dec
lock
addl
scas
inc
jno
ss
jnp
mov
popa
push
mov
sbb
lret
test
out
push
cmpsb
and
xchg
ret
rol
lods
shrb
push
dec
pop
pop
cmpsb
jmp
mov
pop
mov
fimuls
repz
scas
shlb
pop
loop
pop
ret
pop
stos
mov
pop
mov
je
sub
pop
push
pop
fcoms
cmp
out
sub
jle
cmp
xor
addl
loope
cltd
add
out
std
sti
pop
push
and
aad
push
in
imul
aaa
adc
inc
mov
rolb
pushf
xchg
xchg
xchg
sbb
sub
xor
xchg
jge
pusha
leave
test
aaa
in
dec
fcomps
cmp
les
aaa
mov
repnz
xor
jge
in
sbb
sub
ret
mov
jae
addr16
iret
imul
sti
sbb
shld
cli
inc
mov
and
sarb
or
lds
stc
push
andl
nop
lods
mov
in
xlat
add
in
sub
stos
jmp
movsl
movsb
sbb
dec
mov
hlt
dec
mov
nop
bound
insl
push
pop
arpl
fsubp
dec
nop
jne
add
fidivs
fs
mov
ffree
ds
sub
out
cmp
xchg
les
mov
xchg
aas
xchg
jae
insl
cmp
dec
inc
stos
mov
push
push
daa
inc
ss
in
push
mov
push
pop
test
dec
xchg
pop
ljmp
bound
pop
cmp
out
sub
push
xchg
add
stos
pop
jecxz
rcl
sarb
push
xchg
cmc
fcoms
lret
lods
orb
mov
cmp
mov
push
cmp
mov
adc
sub
and
aam
outsb
frstor
roll
movsl
push
int
add
sub
pop
lods
jmp
push
push
sbb
xchg
loopne
into
or
or
leave
clc
pop
rcll
loope
test
mov
mov
mov
push
insl
sti
packssdw
ret
scas
fucomp
stos
mov
mov
subl
sahf
sub
cmp
dec
pop
stc
xor
out
pop
lret
je
sub
mov
add
dec
out
add
fidivl
faddl
inc
mov
ja
jb
lock
insl
lds
fldenv
les
int
dec
or
je
mov
push
mov
push
xchg
push
sahf
jns
fwait
mov
add
pop
sub
pop
aaa
stc
subb
adc
fcoml
push
pop
cmpsl
mov
fdiv
fildl
test
icebp
sub
inc
arpl
lret
insl
mov
fists
jae
and
push
fwait
jg
mov
fstps
sbb
inc
dec
push
js
stos
inc
cs
jp
outsl
xchg
inc
sub
adc
mov
cmp
lret
pop
lret
sub
arpl
std
loopne
aam
mov
jl
movsb
mov
add
mov
ret
js
repnz
dec
mov
addr16
jns
xchg
sub
repnz
test
jecxz
std
lods
clc
movsl
lret
les
lret
mov
test
push
adc
ret
and
push
popa
imul
xor
fdiv
fisubl
testl
xchg
cld
popf
pusha
sbb
insl
lock
or
aas
dec
imul
idiv
push
fs
lods
fiadds
xor
pop
fcmovbe
mov
dec
pop
ljmp
xchg
inc
mov
cmp
dec
insl
push
outsb
xchg
es
andl
gs
stos
ss
pop
dec
xchg
sub
mov
ljmp
adc
and
cmp
xchg
cmp
repz
or
repz
xchg
dec
fcomps
pop
scas
mov
les
mov
cwtl
cmp
leave
testb
xchg
enter
cmpsl
add
add
pop
sbb
popa
es
push
or
jne
ja
xchg
xchg
inc
cmc
out
jnp
push
sbb
dec
cmpsl
and
stos
mov
xor
loopne
xchg
sbb
xor
mov
daa
popa
andl
les
iret
mov
mov
dec
push
dec
add
push
xor
jl
sti
fists
shll
imull
pusha
mov
mov
inc
pusha
dec
xor
cwtl
loopne
jo
movsb
mov
inc
pop
shr
mov
test
or
inc
mov
mov
outsl
bswap
call
std
loop
cltd
xor
sbb
outsb
ret
sbbl
fsubrp
mov
fadds
ror
fdivrl
cmp
pop
add
aam
mov
cli
aas
jnp
mov
adc
fdivs
ret
std
mov
loop
out
xor
lret
call
aam
lcall
fs
mov
gs
jnp
mov
insb
lods
das
cmp
lret
adc
xor
lret
mov
cmp
adc
addr16
fsubl
mov
outsb
rcrb
insl
aad
cmpl
mov
sbb
sbb
stos
add
out
cmc
cmpsl
add
pop
hlt
sub
js
popf
add
pop
xor
jno
mov
or
out
pop
out
mov
lret
cmp
ljmp
cmpsl
add
jl
add
in
and
xchg
mov
das
ret
aas
popf
loopne
jg
enter
cmp
add
flds
adc
js
int3
insl
and
add
xchg
mov
xchg
xchg
popa
fwait
loope
clc
repnz
add
stos
cltd
stos
push
xorl
adc
rol
daa
rcll
imul
fistpll
test
movsb
mov
nop
stos
cmp
cmp
mov
push
inc
test
xor
push
jecxz
adc
mov
inc
test
sbb
dec
out
mov
and
sti
dec
adc
adc
out
iret
dec
call
jne
pop
sbbb
mov
rorl
cld
adc
pop
leave
ljmp
jle
enter
xchg
dec
jg
fsubp
pop
jns
xor
lahf
push
push
out
jg
sbb
mov
xchg
adcl
inc
xor
xor
xchg
dec
call
iret
outsl
imul
mov
jecxz
pop
mov
ljmp
lock
les
sbb
jo
push
sub
les
pop
mov
sbb
into
and
adcb
repz
sbb
ds
push
sbb
inc
inc
lods
mov
pop
sti
push
sub
or
das
inc
add
rol
test
mov
cwtl
imul
jb
sbb
sbb
push
add
push
sbb
xorb
aad
xchg
inc
int
mov
sub
sbb
test
fadd
popf
jb
dec
repnz
jecxz
pusha
push
cs
mov
movsb
or
inc
adc
aam
push
hlt
add
outsb
sub
ror
popa
jl
int3
xchg
and
jne
loop
notl
jae
test
mov
cmp
les
je
dec
or
rolb
adc
cmpsl
pushl
in
movsl
rolb
arpl
mov
cmp
push
push
outsb
sub
cmp
mov
movsb
jl
jbe
je
sbb
ss
and
dec
jmp
mov
jmp
pop
xchg
aad
stos
xchg
je
inc
sub
xlat
or
push
loope
mov
aam
cmp
cmp
ja
adc
arpl
mov
call
fcomps
loop
psrld
imul
mov
mov
mov
lods
push
push
dec
pop
xchg
fwait
cwtl
inc
mov
loopne
leave
hlt
inc
pushf
arpl
mov
pop
or
out
test
ret
mov
pusha
push
shll
mov
arpl
mov
je
or
or
mov
cmp
lahf
push
mov
hlt
sbb
fld
es
inc
dec
mul
es
inc
push
mov
push
stos
pop
adc
out
mov
sbb
cltd
cmpsl
xor
pop
icebp
push
push
fadds
pop
mov
popa
shl
das
aad
fmull
packsswb
testl
scas
pop
insb
add
outsb
add
nop
sbb
rolb
ds
cmp
pop
test
push
enter
and
stc
ud2
out
aad
addr16
imulb
jae
jo
mov
loopne
xor
xor
arpl
enter
mov
cli
xchg
jne
sbb
stc
sbb
inc
mov
aam
inc
fdivs
mov
cs
test
in
ss
pusha
push
out
xchg
clc
insb
daa
jecxz
std
pushf
add
movsb
jl
mov
or
sbb
pop
mov
sbb
fistl
xchg
stc
out
pop
xor
or
push
xor
pop
push
arpl
sbb
out
pop
je
jae
popa
or
aaa
dec
cmpsb
aas
ret
outsl
enter
out
pop
cmp
inc
repnz
movsl
int
pop
test
push
pop
add
movsb
or
and
das
imul
push
mov
jmp
cld
loopne
arpl
sub
cltd
push
aas
es
clc
xchg
xor
push
sbbb
das
xchg
xchg
not
lock
dec
cmpsw
jp
xchg
mov
imul
clc
js
ret
jle
lock
xchg
fldenv
andl
stos
in
add
in
add
arpl
notb
adc
scas
test
lods
and
fistps
fcompl
negb
push
mov
push
xor
mov
cmp
push
xor
jmp
scas
mul
jns
sarl
clc
jmp
cmp
in
and
les
mov
mov
outsl
sub
ja
push
cmp
je
insb
pusha
fwait
test
aam
out
jp
rcrb
add
push
rclb
mov
xor
popf
and
enter
push
mov
add
andb
bound
add
xorl
add
pop
lret
lock
mov
addr16
insl
jp
dec
mov
stos
sahf
mov
out
push
cmp
xchg
dec
inc
loopne
ja
je
mov
jne
adcl
xchg
or
add
pusha
and
sahf
dec
add
int3
sub
test
jle
adc
mov
mov
inc
mov
stos
jae
sbb
enter
scas
jg,pt
leave
lods
push
addr16
xchg
std
sbb
test
and
les
jp
mov
fwait
out
cmpsl
dec
negl
lds
mov
mov
jp
enter
push
mov
fdivs
sub
pop
and
sub
inc
sub
inc
pop
insl
aaa
addb
dec
iret
push
mov
gs
mov
cmp
xchg
nop
dec
dec
in
mov
scas
push
cmp
jmp
jb
movsb
cmc
push
cli
inc
pusha
mov
xor
loopne
dec
add
mov
loope
mov
xchg
je
fidivrs
shlb
popa
xchg
stos
cmpsb
jmp
mov
pop
xchg
mov
push
mov
inc
orb
pop
xchg
xchg
out
icebp
fbstp
lret
es
test
push
loop
adc
jg
jno
in
idivl
inc
cmp
and
ret
call
cwtl
adc
test
pop
ja
les
insl
jmp
jle
jle
dec
cmp
into
xor
cmp
inc
bound
movsl
mov
in
add
cmpl
xorb
repnz
xchg
cmp
pop
jno
push
das
outsl
arpl
outsl
cmp
push
or
mov
nop
mov
out
mov
and
fiaddl
dec
mov
mov
ret
imul
jl
push
and
gs
push
aaa
or
dec
daa
outsl
scas
xor
sbbl
jb
jle
into
jl
cmpsl
in
sbb
cmpb
cmp
inc
sbb
mov
leave
pop
testl
fsubr
jecxz
adc
xor
jne
out
xorl
push
sub
sub
xor
mov
and
sub
cmp
inc
ja
icebp
mov
ret
jecxz
sbb
xor
mov
pop
push
lahf
and
sbb
jmp
add
mov
ret
sub
jae
pop
icebp
fbld
jae
xchg
sbb
addr16
push
jne
arpl
cli
sahf
leave
scas
mov
xchg
xchg
pushfw
lret
icebp
ret
gs
xor
lds
insb
cmp
and
mov
sbb
movsb
xor
push
jno
inc
repz
mov
mov
jno
outsl
inc
inc
repz
mov
dec
cmc
jne
adc
lret
jnp
orl
xchg
imul
data16
scas
xor
xchg
sti
push
mov
dec
xchg
mov
cmpsb
mov
ds
subb
ds
ss
bound
pop
cmp
sub
mov
das
clc
cmp
lret
push
push
lods
pushf
movsl
cmc
sbb
jecxz
in
gs
repz
xchg
imul
jmp
cmp
add
outsl
pop
out
cs
mov
sbb
lret
cli
sbb
cwtl
jno
cmp
mov
jb
arpl
dec
test
sub
scas
add
or
push
int
mov
lock
mov
cltd
pop
lods
sbb
fiadds
pop
addr16
test
push
pusha
adc
ret
dec
xor
sbb
lds
and
movsl
xchg
into
popf
shr
lods
sbb
lods
cmp
mov
jo
add
inc
in
cmp
xchg
orl
dec
cmp
cmp
ds
std
xchg
or
sub
test
and
cmp
bound
add
xchg
dec
sbb
in
cltd
push
hlt
add
je
daa
xchg
test
in
divl
push
mov
inc
pop
lods
adc
dec
insl
icebp
cmp
adc
jne
mov
inc
push
pop
jg
stos
pusha
sti
orl
dec
sub
cmp
mov
mov
dec
jne
push
lods
mov
xchg
cmp
loope,pn
scas
mov
sub
mov
xchg
and
or
xchg
movsl
pushw
adc
inc
sub
test
inc
roll
js
test
insb
and
sbbb
mulb
mov
test
or
into
mov
call
popf
xchg
fsts
and
jno
cmc
cmp
push
subb
orl
test
out
lods
jo
cmp
fldl
cmpsb
test
lds
pop
outsb
jmp
nop
mov
cld
fistpl
cmc
jb
ret
sarb
mov
mulb
popl
arpl
sub
jns
clc
cld
mov
adc
xor
mov
subb
mov
xchg
aam
inc
popf
mov
out
mov
push
xchg
movsb
jmp
add
punpcklwd
jmp
test
cs
cmp
sub
sbb
push
inc
mov
insl
push
fstl
jno
mov
push
mov
loop
pop
cld
or
adc
aam
sti
mov
sub
cmp
cmp
push
scas
sbb
and
test
cmp
fsubl
jecxz
ss
fs
inc
mov
sub
cld
push
dec
rcrl
iret
cmp
push
je
mov
jbe
loopw
hlt
jmp
inc
pop
mov
add
cmc
mov
pop
rolb
fwait
mov
sub
pop
inc
cwtl
adc
es
loope
sbb
pop
xchg
shl
shlb
pop
jmp
int
andl
add
js
js
xor
mov
pop
mov
xchg
push
and
lds
mov
pop
pop
xchg
daa
mov
and
lret
mov
xchg
cli
fcmovnbe
das
popf
and
jbe
outsl
mov
outsl
scas
aas
and
pop
and
jge
jmp
js,pt
fucomp
cwtl
mov
ja
pop
jl
inc
jecxz
je
jg
ror
cmp
in
xlat
scas
icebp
lea
jmp
nop
xor
cmp
xor
inc
repz
mov
arpl
push
lea
jb
mov
fcom
pushw
test
enter
pushf
cmp
add
inc
adc
lock
stos
cmp
test
scas
cmp
dec
sbb
sub
test
popa
add
lea
in
cmpsb
mov
outsl
push
or
mov
subl
jecxz
enter
gs
inc
or
les
dec
mov
fdivrl
popa
mov
jecxz
xchg
dec
cmp
add
mov
mov
sahf
jnp
sbb
imul
and
sti
mov
jg
inc
xchg
lock
iret
in
ret
mov
sbb
mov
leave
and
int3
adc
sbb
andb
ret
or
popf
pop
lea
adc
cmp
mov
mov
adc
inc
loop
adc
loopne
push
cld
adc
xor
fdivl
xchg
pop
lret
xchg
adc
ret
jns
sub
push
push
mov
pop
iret
jmp
pop
and
out
sub
ljmp
mov
adc
arpl
ljmp
mov
jmp
cmp
or
ds
jb
sub
pusha
fsubs
ret
inc
cmpsl
inc
cmp
xlat
fs
mov
outsl
jb
pop
sub
xchg
outsb
push
cltd
mov
outsl
ret
imul
push
xor
bound
loope
inc
push
in
or
adc
ret
ret
mov
mov
in
mov
sbb
xor
cs
lods
sub
lods
clc
mov
adc
ljmp
dec
push
mov
les
aad
mov
mov
stos
cmc
mov
add
push
aam
jo
daa
adc
sub
xchg
inc
andl
cmp
adc
test
sbb
sub
cmp
stos
into
push
cmp
lds
sbb
call
nop
loop
sub
popf
data16
push
xchg
or
mov
or
and
or
jge
add
aad
xchg
pop
jg
inc
mov
lahf
in
enter
out
mov
add
repz
imul
outsl
xchg
scas
push
popa
mov
ss
mov
stc
std
out
push
int3
test
xor
shlb
mov
mov
outsb
flds
or
lods
push
aas
mov
es
movsb
inc
aas
int
xor
rclb
sub
shll
pushf
adc
int
mov
stc
sub
and
cwtl
sbb
cmpsb
addr16
jmp
es
sti
fcompl
or
push
sub
pop
in
mov
pop
fxch
mov
lds
cmpsl
push
pop
cwtl
cmp
pushf
mov
aad
adc
or
push
in
sub
cmc
popa
add
jo
insl
test
int3
mov
mov
sub
in
mov
aad
add
pop
dec
test
sbb
pusha
or
jl
xchg
fldl
popf
adc
fnstcw
out
ljmp
jecxz
jbe
mov
mov
rol
pop
dec
clc
and
cmp
jns
mov
ds
cmpsb
mov
mov
repz
mov
in
cs
faddl
subl
in
es
or
mov
lret
movsl
xchg
shlb
cmpsb
push
dec
inc
sub
push
sbb
aaa
inc
incb
insl
enter
aam
xchg
jae
push
mov
lret
jmp
and
jb
sbb
fneni(8087
out
movsl
int
ds
pop
rcll
adc
test
ja
or
mov
jmp
add
fidivs
inc
mov
test
mov
jge
pop
fidivrs
and
fwait
testb
lret
add
mov
dec
or
cmc
gs
cmp
fisttps
mov
orb
stc
sub
adc
dec
filds
sahf
sub
les
or
int3
dec
aaa
mov
es
lahf
rclb
rcrl
and
shrb
cltd
fcomip
inc
dec
cmc
bound
push
fnop
jb
or
xchg
cld
stos
xor
jns
pop
or
mov
es
or
mov
xor
out
ds
in
push
jbe
mov
pop
pop
xlat
sub
notb
loope
cmp
movsb
enter
sub
dec
in
pop
adc
jbe
jno
sbb
cli
js
xor
sarb
sbb
outsb
pop
mov
pop
xchg
sub
int
or
insb
adcl
ficoms
sub
test
fcmovnbe
or
pop
arpl
pop
rol
lock
cmpsl
fsubr
sub
dec
js
lods
add
xor
clc
push
mov
lods
jne
xchg
iret
pop
fsubs
lcall
inc
lret
aad
out
sbbl
and
jbe
cld
call
in
divb
mov
es
mov
dec
cltd
jns
es
ds
xchg
inc
fidivl
mov
cmc
xor
div
pop
mov
cmpsl
sahf
lahf
lods
push
imul
test
jge
cmp
je
ja,pt
dec
mov
and
out
xchg
mov
js
fnstsw
rol
jae
out
jne
in
out
sub
in
div
mov
pop
lea
sub
or
cs
xchg
adc
sbb
xorl
xchg
mov
arpl
mov
mov
sub
adc
dec
inc
cmp
dec
push
push
and
sbb
push
sub
roll
xchg
out
cwtl
jns
sub
lods
dec
xchg
xchg
icebp
rcl
xor
arpl
sbb
mov
insl
pop
sti
mov
mov
sbb
jae
lea
int3
push
xor
mull
test
jecxz
gs
test
fs
jb
pop
call
lea
ss
xor
add
and
mov
and
cli
ficoms
add
in
insl
sub
jecxz
jl
dec
dec
inc
cli
in
in
fwait
cld
inc
adc
push
iret
lcall
push
lcall
xor
loope
xlat
shll
jbe
movsb
sub
mov
in
stos
mov
dec
es
pusha
addr16
out
cmpsb
sbb
es
mov
cmpsl
loopne
pop
and
xchg
jl
mov
jp
es
fidivs
xor
or
sbb
in
negb
or
repz
jl
xchg
sbb
rclb
sbb
add
icebp
push
jae
push
pop
dec
mulb
shrl
sbb
adc
lods
jecxz
mov
cmpsl
es
dec
mov
add
cld
push
add
out
je,pn
popf
dec
pop
mov
jmp
fistps
mov
mov
mov
adc
stc
and
icebp
lret
inc
lods
or
mov
adc
aaa
mov
mov
dec
loop
xchg
push
in
push
psubq
push
or
inc
inc
inc
cmp
jmp
adc
rcrl
jo
jp
xor
sbb
sbb
cmp
jle
loopne
out
push
mov
and
mov
and
ljmp
aam
es
fidivrl
adc
or
data16
sub
mov
stos
sub
sub
mov
xor
xor
and
inc
dec
jbe
or
in
dec
push
fisubrs
jae
fsubrp
out
xchg
ficoms
dec
repnz
out
js
xor
es
lahf
fmuls
push
pop
mov
mov
popf
rcr
sbb
sbbb
inc
xor
cmp
jmp
pusha
and
pop
jle
push
shlb
std
mov
mov
in
cmp
xchg
imul
jb
jg
arpl
in
enter
shrl
pop
adc
outsl
xor
inc
mov
push
in
pushf
jecxz
xchg
xchg
sbb
movsb
das
jge
pop
ret
cwtl
ja
movsl
rcll
mov
notl
xchg
xor
dec
data16
fisubrs
xchg
ja
mov
xor
and
rcrb
mov
pop
sbb
xchg
testl
sbb
popa
lods
mov
mov
pop
push
jle
shl
add
addl
xchg
jle
mov
pop
jo
out
push
movb
pusha
fidivs
addl
inc
fwait
lods
js
mov
cltd
lea
outsl
jl
push
ret
in
xor
js
jo
roll
sbb
icebp
mov
xchg
cli
push
mov
push
stos
xor
inc
scas
ret
cs
out
sub
mov
imul
dec
push
adc
adc
sbb
or
in
push
repz
out
mov
xchg
xor
in
lea
adc
mov
sub
mov
into
fnsave
lock
sbb
mov
dec
daa
mov
mov
push
cltd
mov
pop
aad
sbb
lds
xchg
bound
jg
sbb
fdivrl
out
add
lret
inc
jbe
aaa
je
inc
mov
sub
aaa
push
mov
cmp
sbb
xchg
shrb
xchg
repz
xor
dec
pusha
cmpsb
inc
jl
mov
outsl
out
addr16
xor
mov
jmp
and
pop
fidivs
stos
cmp
xchg
adc
pop
mov
xchg
lock
rcrb
and
xlat
jae
out
mov
mov
es
xlat
ret
pusha
pop
ja
or
hlt
loope
xor
testl
popl
adc
cltd
lret
push
out
cmovae
lods
fs
fistpll
stc
push
jo
dec
push
arpl
roll
and
mov
je
jns
jb
lcall
pusha
sub
xchg
mov
lret
dec
push
inc
adc
je
pop
or
push
sbb
fisttpll
divl
sbb
mov
push
jmp
fistpll
xchg
xor
push
in
js
dec
in
push
sub
lea
xor
ret
dec
xchg
cmp
cmp
pop
mov
inc
repz
cmp
lock
ret
pop
mov
fiaddl
adc
mov
pop
into
pop
mov
cltd
daa
sbb
mov
fscale
push
cltd
daa
dec
ret
or
jg
add
ret
cltd
sbb
mov
popa
stos
mov
cmpsb
pop
ret
mov
jno
mov
jmp
shlb
xor
popf
lds
xlat
loop
mov
push
inc
mov
dec
cmpsl
add
pop
aad
ljmp
jb
jge
movsl
xlat
loop
sub
mov
and
push
and
repnz
inc
mov
mov
xorb
lahf
mov
cli
jg
mov
pusha
jle
add
aam
je
and
pop
adc
sbb
stos
dec
jno
push
orl
dec
test
cmpsl
loope
outsb
les
mov
in
inc
sub
fcoml
xor
lea
sbb
push
cmp
push
or
adc
adc
or
xor
out
jns
mov
dec
mov
fsubrs
and
cltd
xor
js
fldcw
jo
xlat
push
jecxz
les
pop
shrl
cmpsb
aam
push
jbe
and
push
fisubl
mov
or
test
mov
push
jns
int
mov
and
scas
pop
aam
xchg
sbb
push
xor
and
in
mov
sti
pop
sbb
aas
leave
lods
icebp
cmp
mov
mov
cmp
ljmp
ljmp
lcall
lret
enter
mov
jmp
clc
inc
out
mov
movsl
jo
call
mov
push
jl
dec
mov
and
mov
xlat
jecxz
lahf
mov
fstpt
cld
xchg
and
pop
ss
push
enter
lret
mov
lods
test
adc
jecxz
cmp
xorb
sahf
sub
pop
lds
aas
xchg
pop
cmpsl
popa
imul
fs
or
push
sbb
or
movsl
adc
pop
fidivl
subl
lcall
xor
cmp
mov
mov
xchg
mov
pop
repz
lahf
sub
fucomp
insl
mov
add
fsub
adc
inc
jp
test
stc
repz
nop
ja
cmp
cmc
xchg
push
cmp
adc
xor
test
aad
orl
pop
sbb
push
pop
add
dec
aaa
jp
pop
adc
mov
je
fildll
sub
rclb
sub
inc
mov
push
addr16
loop
cmp
imul
and
xchg
xchg
xchg
es
dec
pop
stc
jb
cltd
lcall
out
mov
push
adc
pop
push
add
test
loope
aam
sub
inc
test
or
dec
hlt
cmpsl
loop
pushf
repz
fisubl
sbb
mov
movsb
push
divl
jg
ds
das
sahf
fisubl
insl
ret
stc
cmpsl
and
sbb
push
aam
xchg
ret
movl
push
rclb
pop
jnp
imull
fistpll
xchg
dec
sbb
addl
push
into
fidivrs
dec
cld
push
ret
mov
or
das
push
sbb
testl
cmp
adc
mov
fsub
pop
inc
dec
push
int
or
popa
out
js
pop
add
stos
push
add
cmp
rorl
sub
pop
cs
imul
inc
cmp
jmp
dec
aas
lcall
hlt
arpl
std
sub
popa
pop
inc
adcl
xchg
adc
jns
test
sub
je
dec
ret
push
adc
and
paddsw
loop
push
jnp
xlat
movb
outsb
cltd
lret
sub
adc
cmp
fstpt
clc
pushf
sbb
inc
inc
addb
sub
or
mov
hlt
xor
stc
dec
cmp
bound
negl
and
adc
xchg
fldl
and
shll
insl
cmp
loopne
mov
getsec
out
lods
idivb
xchg
rolb
xor
jl
or
aaa
push
pop
xlat
mov
fists
mov
cli
mov
sbb
dec
orb
jnp
rorl
pop
sti
xlat
inc
pop
mov
jb
inc
stos
jmp
jge
in
subl
out
xor
cwtl
rolb
jmp
sub
jo
sub
sbb
shrl
mov
adc
and
pop
xor
pop
popf
icebp
add
hlt
mov
addr16
pop
repz
addb
pop
gs
xor
push
movsb
lods
flds
mov
mov
and
dec
xchg
hlt
jbe
in
test
and
adc
pop
push
fistps
repnz
mov
mov
setg
xchg
mov
fisubl
mov
dec
repz
mov
setne
dec
shlb
imul
nop
sbb
xchg
mov
push
fldt
mov
jecxz
push
fwait
xchg
xor
mov
push
repz
jmp
cld
lahf
pop
adc
stos
sbb
cltd
lahf
pusha
addr16
ret
insl
mov
push
repz
mov
push
testl
dec
andl
testl
sbb
mov
sub
lret
jg
rcll
xor
pop
hlt
stc
nop
mov
xchg
sub
rorb
mov
inc
jmp
push
mov
addr16
pop
stc
cmp
inc
jmp
push
pop
popa
xchg
mov
jmp
std
divb
sbb
xchg
dec
leave
mov
xchg
je
notl
fldcw
xor
test
cmp
rcll
xor
xor
scas
cld
sub
mov
push
xor
pop
and
les
fstpt
xchg
or
add
in
icebp
or
outsl
lahf
mov
inc
mov
mov
and
adcl
adc
jl
mov
pop
stc
gs
inc
lods
pop
lahf
adc
or
imulb
adc
mov
mov
pusha
mov
lahf
paddsb
inc
sbb
in
in
testl
jo
jge
fsubr
pop
ret
jmp
mov
dec
jno
mov
mov
and
jle
sti
rcrb
jb
mov
lods
mov
pop
push
les
loope
cmp
xchg
movsl
pop
mov
adc
push
and
loopne
or
rcrb
fsub
jnp
lahf
mov
andl
xlat
jmp
outsl
mov
add
mov
xor
data16
cmpsb
xchg
addl
adc
or
mov
cmp
add
add
sub
jns
adc
adc
and
jne
and
xlat
lcall
aaa
ja
std
cwtl
mov
fdiv
loope
sbb
mov
rcrl
inc
icebp
inc
xor
loopne
jmp
jns
cmp
call
std
push
push
inc
adc
aam
xor
mov
inc
in
cmp
cltd
int
push
pushf
shr
push
jns
xor
mov
lcall
push
jg
inc
and
cwtl
fcmovu
sub
pusha
sub
cmc
push
jbe
hlt
cmc
jecxz
loopne
jl
mov
push
add
or
mov
inc
inc
iret
popa
pop
inc
sub
add
jge
mov
jp
push
aaa
stos
mov
les
in
and
inc
lods
pusha
in
mov
and
add
xchg
data16
xor
push
sub
inc
or
out
test
pushf
inc
xchg
xor
test
jnp
sahf
imul
ror
sti
mov
sti
sarl
push
mov
inc
fistpll
xchg
cli
clc
ret
cmp
cmp
iret
lret
mov
outsb
ss
pop
sub
xor
aaa
push
mov
lret
adc
cmp
mov
popf
xchg
out
mov
pop
jp
lea
inc
jb
lods
inc
pop
jne
xchg
xlat
pop
xchg
pushl
xchg
stc
stc
out
out
loopne
fdivs
daa
xlat
sahf
push
jnp
in
lds
lret
scas
cmp
scas
jge
add
xchg
cmc
add
lods
ljmp
sti
sarb
jnp
mov
dec
push
jge
xor
pop
subb
iret
dec
pushf
push
and
inc
push
nop
les
and
lahf
or
aas
rcrb
insl
in
popf
sub
cwtl
loop
xchg
push
pop
out
pop
imul
into
pop
and
ds
rclb
push
rcrb
sub
sbb
aad
mov
lods
inc
push
repz
int3
push
fs
sbb
push
xchg
mov
mov
dec
lock
push
int3
cltd
mov
add
gs
cli
movsb
dec
xchg
lock
dec
stos
and
enter
jecxz
in
stos
sub
ja
mov
sub
xchg
test
pop
mov
add
jecxz
addr16
stos
imul
mov
and
repz
mov
xchg
pop
mov
push
or
aas
dec
adc
xchg
pop
xchg
loopne
imul
daa
out
lds
cld
out
or
mov
dec
xchg
sbb
sarl
mov
jbe
aaa
cli
jo
ret
xchg
jne
mov
fisubs
int3
test
in
hlt
test
sub
add
and
inc
push
and
cmp
les
arpl
int3
ret
lcall
add
mov
inc
mov
out
ds
pusha
mov
push
sarl
and
jmp
shlb
sbb
mov
out
inc
dec
mov
clc
mov
sbb
rorl
sti
insl
xchg
mov
nop
stos
mov
nop
test
icebp
xlat
sbb
or
fwait
mov
jp
push
dec
pop
xor
pop
inc
mov
sti
add
sub
lret
jnp
lods
pop
pop
push
pop
sub
dec
pxor
fisubs
add
shlb
sti
in
xor
gs
or
cli
lods
lock
jecxz
mov
fsubrs
mov
call
in
inc
and
scas
sub
jg
cld
ljmp
jne
mov
cmp
lods
movsb
mov
fldt
fimull
ret
out
pushf
inc
mov
imul
divb
sbb
adc
mov
sbb
hlt
popa
fcomps
xor
popl
int
ja
cmp
bound
xchg
sbb
mov
push
inc
loope
pusha
dec
pop
xchg
jno
adc
inc
and
dec
add
push
sbb
sbb
test
lods
out
fs
out
jns
popa
popa
sub
mov
mov
lds
adc
lock
dec
xor
pop
push
in
ret
pop
and
and
subl
sarl
mov
mov
jne
out
adc
push
sbb
or
clc
ljmp
movsb
iret
mov
pop
jge
xchg
les
push
sub
add
xor
push
xor
je
arpl
dec
cltd
push
push
dec
pop
add
enter
add
and
cmp
push
or
fldl
pop
sbb
and
jae
xor
cs
jo
or
rcrb
lahf
or
xor
sub
testb
aad
imul
adc
fisttps
fsts
jecxz
sub
pop
ss
shrb
subb
jecxz
fisubl
test
inc
repnz
pop
dec
loop
jge
testl
mov
mov
xchg
xchg
sub
bound
and
mov
mov
pop
add
je
sbb
mov
call
repz
xlat
mov
xchg
cmp
sub
dec
add
mov
lcall
dec
aas
jg
dec
mov
xchg
data16
ja
dec
pop
adc
ja
sbb
xchg
movsb
cmpb
or
iret
push
lret
xchg
mov
add
out
and
fistps
sbb
stc
push
inc
nop
pop
and
jae
jmp
inc
pop
dec
ja
mov
ja
dec
sbb
iret
push
fstps
jl
dec
push
pop
mov
adc
sub
mov
and
inc
dec
ds
mov
in
orl
xchg
mov
cltd
adc
add
orl
pop
pop
movsl
xor
or
ret
pop
cmp
lcall
push
mov
mov
addr16
inc
mov
pop
and
imul
call
ret
cmp
jle
cmp
dec
cmp
jmp
in
mov
adc
std
dec
xchg
inc
ljmp
fimull
push
sbb
add
ds
repz
cwtl
xchg
xchg
jmp
fisttpl
divl
inc
push
mov
adc
xchg
cltd
in
popf
in
mov
fwait
sarb
jg
sub
cmpsl
popf
das
dec
jo
and
pop
shrl
aas
xor
repnz
lock
sbb
push
push
or
roll
cmpsl
sbb
pop
jae
pop
leave
rdtsc
sti
jp
leave
push
cmp
xchg
aaa
leave
jg
xchg
sbb
xchg
inc
outsl
push
mov
into
push
inc
aas
mov
imul
data16
sub
cmpsb
lcall
std
outsb
adc
and
movsl
decl
insb
sbb
adc
rorb
cmc
jmp
lahf
repz
mov
cmp
loope
xor
add
insb
or
mov
pop
leave
data16
clc
mov
mov
loop
dec
aad
rclb
xchg
sbb
xchg
loop
adc
pop
mov
xchg
bound
pop
repz
addl
fmuls
fisttpl
lret
jg
push
out
sbb
mov
data16
fcomi
pop
cmc
or
xor
in
sbb
je
push
jns
or
mov
xor
out
sbb
out
lcall
int
enter
out
push
divl
scas
rcl
push
rorl
xchg
mov
inc
outsl
pop
imul
jnp
das
sub
ljmp
mov
xor
adc
fucompp
mov
cwtl
sub
push
insb
cmp
add
fsubl
ret
jecxz
insl
dec
sub
xor
icebp
lgs
jb
lock
cltd
pop
pop
outsb
pusha
jnp
cltd
stc
bound
mov
push
bswap
into
jg
sub
cmp
xchg
das
lahf
mov
pop
xor
ja
xor
push
mov
inc
cld
lds
or
data16
dec
sbb
jmp
fisubl
adcb
subb
ljmp
xchg
or
adc
xlat
add
fnstsw
mov
cmpsl
ficoml
push
mov
or
jp
addr16
stos
bound
nop
lock
sbb
cmpb
cmp
cmp
cli
int
out
cmp
add
mov
cmp
mov
jns
dec
jge
mov
sbb
test
insb
call
push
jo
sub
fidivrl
fidivrs
rcl
pop
or
ja
jmp
mov
xor
out
sbb
adc
lahf
in
pop
adc
push
mov
ficoms
sbb
push
pop
xor
mov
mov
push
sahf
clc
and
adc
arpl
fsubl
jnp
bound
xor
addr16
mov
testb
repz
push
mov
mov
adc
mov
xor
jl
lret
mov
movsl
mov
cmp
mov
psrlq
mov
and
push
jg
sbb
out
imul
loop
jno
gs
pop
pop
nop
mov
add
add
xor
les
jmp
mov
xor
cltd
pop
ljmp
jnp
fisubrl
sbb
shlb
fcmovnb
xor
add
jecxz
push
ret
movsb
sbbb
inc
pop
in
hlt
sarl
cmp
pop
inc
xor
xor
cvtss2si
mov
mov
dec
ja
popf
inc
test
mov
mov
jmp
fcomps
fsubs
dec
das
dec
icebp
mov
mov
and
push
pop
or
cmp
push
das
pop
push
insb
imul
mov
clc
data16
dec
cwtl
jno
out
cmp
jge
jg
adc
stos
xchg
icebp
sub
test
inc
roll
fistl
and
jecxz
std
sub
xchg
subl
inc
sbbl
cmp
lds
sbb
in
imul
dec
lret
clc
cmp
pop
out
or
mov
out
les
sbb
push
sbb
scas
inc
pop
outsb
mov
pushf
sub
mov
mov
jg
jmp
mov
into
pop
jge
fidivs
push
arpl
aas
aam
stos
in
adc
jnp
cld
pop
cli
inc
xchg
ret
inc
push
adc
xchg
lahf
enter
bound
dec
xchg
subl
xchg
cmp
mov
add
popf
adc
xor
mov
mov
rcll
inc
sbb
xorb
jecxz
sbb
jnp
or
inc
dec
mov
jg
lret
scas
jp
lret
mov
sbb
mov
add
xor
cld
xchg
in
std
out
cmc
insl
shlb
movsb
sub
std
jp
push
nop
sub
push
mul
cmp
test
fistpl
mov
push
fnsave
jno
stc
inc
adc
or
dec
mov
clc
jns
ds
cmp
or
xlat
lahf
jb
daa
in
nop
jmp
push
push
cmpsl
rcl
test
fxch
pop
cmp
xlat
ss
push
and
sbb
mov
sti
jnp
out
add
mov
push
mov
xlat
rcl
scas
clc
inc
xor
mov
call
mov
xchg
insb
repnz
xchg
mov
scas
stos
jo
stc
pop
sub
dec
cmp
into
add
dec
inc
jno
pop
push
je
xchg
xor
pop
mov
out
push
push
pop
push
icebp
lods
enter
jb,pn
sahf
mov
pushf
and
ja
jns
push
jmp
nop
inc
pop
inc
dec
nop
lret
mov
insb
pop
xchg
mov
negl
pop
inc
loope
scas
mov
lret
sbb
movsl
movd
sub
sub
sahf
imul
shll
in
xor
loopne
jne
repz
mov
xor
pop
lret
enter
or
mov
mov
ja
cmc
push
pop
xchg
sub
js
inc
mov
xchg
clc
adc
es
cli
outsl
shlb
or
jbe
rclb
pusha
lahf
dec
cmc
out
cmp
stos
punpckhdq
mov
mov
daa
xor
loop
xlat
aas
popa
ret
push
mov
push
xchg
push
mov
fnsave
js
pop
je
xor
jne
in
and
sbb
loope
adc
dec
out
cmp
and
inc
in
in
add
jmp
mov
push
mov
mov
push
add
adc
inc
adc
lods
scas
adc
and
xor
xchg
nop
jbe
or
and
fucom
frstor
push
mov
or
push
sub
sub
inc
popf
lea
pop
repnz
cltd
inc
push
data16
mov
gs
aaa
incl
iret
data16
xor
adc
sti
adc
faddl
or
cmp
fsubs
dec
imul
popa
loop
fs
popf
rcrb
call
sar
or
insl
pop
xor
scas
in
fwait
push
hlt
and
xor
ds
push
fimull
mov
ds
test
shll
and
xchg
std
push
jno
adc
mov
and
mov
lret
aam
out
pop
inc
jo
pop
pop
push
outsb
mov
inc
loop
repz
leave
lods
sahf
sti
xor
fwait
icebp
test
lret
rolb
scas
add
push
mov
divb
jns
ss
subb
adc
pop
inc
or
lock
xchg
in
loope
inc
xchg
mov
mov
xchg
xchg
out
hlt
je
adc
pushf
and
mov
jb
pop
je
adc
in
add
sbb
mov
inc
push
jns
fnstsw
lods
test
insb
in
mov
mov
jle
jbe
sahf
mov
out
inc
mov
cwtl
push
pusha
dec
and
ret
leave
lea
pushf
mov
xchg
pop
shl
lahf
jbe
stos
xchg
daa
cmp
sbbb
cmp
dec
push
dec
js
outsb
xchg
dec
inc
xchg
lcall
in
and
pop
adc
aas
dec
movsl
add
imul
xchg
xchg
and
xchg
jg
lret
enter
sahf
shl
xchg
shl
pop
xchg
jb
data16
jns
ljmp
push
mov
mov
dec
scas
cmp
pop
repnz
mov
and
lahf
lock
fs
mov
scas
push
fs
daa
out
add
test
ret
pop
inc
lds
test
push
pop
push
xor
shl
add
pop
add
orl
inc
fists
xor
out
pop
cmp
xchg
dec
daa
push
pop
aam
xchg
jmp
shlb
pop
mov
bound
lret
imul
mov
pop
sahf
loope
stos
shll
lea
mov
and
xchg
out
in
inc
mov
sub
call
popa
mov
imul
pop
mov
mov
pushf
adc
jg
jae
lcall
shrb
in
orb
cmp
cli
loop
pop
pop
in
int3
push
das
fs
out
xor
int3
mov
fs
movsb
loope
push
lods
pusha
sbb
fs
inc
ja
rcll
push
daa
ret
and
in
push
iret
gs
test
cld
xor
f2xm1
push
test
loop
loope
xchg
push
icebp
ljmp
fcoml
fcomip
aad
cli
mov
rolb
in
loop
sub
jnp
popf
cmc
jle
adc
repz
into
mov
scas
cmp
and
jmp
adc
sub
movsb
mov
mov
ss
rcrb
pop
inc
mov
ljmp
dec
xor
mov
xor
pushf
xchg
fistl
xchg
sbb
js
in
pop
adc
and
js
cli
sub
lock
inc
sbb
push
mov
xchg
inc
arpl
jl
mov
std
pop
jbe
mov
push
xor
shrl
or
arpl
pop
rclb
jnp
mov
imul
insb
push
jp
lahf
test
loope
in
pushf
les
sahf
fcoml
aad
adc
lods
adc
dec
and
push
pop
or
xchg
imul
fcoml
dec
hlt
ret
stc
xor
cmp
sbb
gs
mov
xchg
lock
sub
insl
dec
mov
pop
outsb
nop
movsl
mov
mov
mov
arpl
ret
test
shl
loop
inc
dec
sub
xor
jb
adc
push
and
and
sbb
mov
mov
addr16
movsl
jb
sti
cltd
jp
aaa
repz
in
outsl
dec
icebp
xchg
dec
dec
xchg
andb
inc
inc
outsb
mov
scas
pushf
inc
and
push
lods
sub
mov
cmp
iret
mov
xchg
test
jle
imul
dec
mov
sbb
cmp
mov
dec
adc
jb
adc
mov
xor
or
lret
xor
mov
add
lods
pop
out
test
sub
mov
jp
cmp
ficomps
sub
in
adc
ja
sbb
mov
fcmovb
repz
lock
test
and
mov
rcrl
shrb
fistps
pop
mov
daa
jb
cld
or
aad
icebp
mov
or
xchg
cmc
test
stos
sbb
xchg
pop
adc
rcll
sub
orl
mov
call
loope
lcall
cmp
mov
lods
daa
out
jo
mov
pop
mov
cs
jns
add
mov
xchg
stos
mov
andl
loop
sbb
push
and
mov
cltd
lret
or
aas
cmp
jb
clc
data16
stos
mov
ljmp
aaa
push
xor
xor
mov
pop
rcll
addr16
push
insl
push
test
add
daa
xor
adc
rcr
pop
mov
lods
and
jmp
xor
mov
dec
jo,pn
int
fmull
add
aam
dec
movsl
out
jo
xchg
mov
fidivl
rorl
xchg
pop
dec
push
xchg
iret
lock
jl
dec
xchg
pop
jge
adc
repz
test
jmp
pop
dec
outsl
pusha
lcall
or
loope
mov
xlat
xchg
lret
aam
aam
aam
jg
and
pop
sti
push
icebp
imul
jno,pt
flds
or
adc
mov
sub
jge
jmp
pop
inc
in
xchg
add
or
mov
test
xchg
arpl
jmp
sub
mov
jno
add
pusha
mov
add
sbb
xchg
pop
and
mov
push
dec
dec
in
jmp
pusha
jno
mov
roll
inc
and
and
xor
or
xchg
cltd
add
popa
lds
xor
dec
mov
fwait
push
jne
cmp
push
or
rorb
jmp
punpckhbw
add
mov
call
jo
jmp
pop
mov
ds
stos
shrb
pop
sub
xchg
xlat
mov
mov
mov
les
clc
cmp
push
loop
pop
push
imul
repnz
icebp
pop
pushf
cmp
aaa
pop
data16
mov
push
mov
sub
bound
push
pop
hlt
pop
data16
jecxz
xchg
mov
icebp
addb
xor
testl
push
or
lds
out
adc
sti
mov
rorb
ret
mov
pop
fsubr
out
fwait
outsl
pop
negl
in
cld
jg
cmpsl
or
aaa
cmc
pop
mov
call
add
bnd
loopne
outsb
push
mov
and
in
subb
fidivl
mov
push
stos
mov
inc
nop
dec
mov
xor
lcall
add
dec
jecxz
add
or
sub
jmp
sub
das
ja
mov
lret
dec
mov
jge
pop
cmp
pop
push
xchg
fidivs
cmp
shrb
fdiv
aas
cmp
xor
xchg
add
xlat
es
sbb
sahf
push
outsb
fstl
aam
jge
cmp
cmp
cli
jg
outsl
mov
adc
popa
xor
inc
mov
out
cli
xchg
dec
test
mov
cmp
test
andb
xchg
dec
das
jge
aam
pop
inc
pop
int3
std
pop
ret
mov
js
xor
adc
add
mov
pop
rorb
mov
xchg
fcmovnu
dec
stc
mov
das
adc
add
fwait
cmc
gs
jae
lock
sbb
jp
mov
rcrb
inc
xor
decl
in
repnz
or
pusha
add
shlb
jno
loope
movsl
ficoms
ja
xlat
adc
stos
cmp
mov
mov
clc
out
and
adc
pusha
push
mov
int3
add
jg
adc
mov
rcll
outsb
dec
cltd
out
jecxz
lods
xor
enter
adc
sub
add
jbe
sub
or
sbb
hlt
pushf
pop
push
sub
addr16
pop
movsb
dec
mov
popa
dec
js
enter
or
push
lahf
nop
fnsave
sbb
jl
jmp
and
mov
lds
adc
push
imul
test
cmp
or
dec
shlb
fists
cli
cmp
stc
lret
rorb
fsubrs
and
shll
cwtl
mov
sub
jge
sbb
sbb
push
cli
in
xchg
fidivl
aad
or
lret
arpl
sub
popa
aas
fwait
xorl
fs
cld
adc
mov
inc
cmp
sub
sbb
inc
into
cltd
iret
insb
mov
add
mov
fwait
xor
jb
addr16
out
mov
mov
sub
enter
cld
inc
or
mov
in
lods
cmp
enter
ss
es
mov
fs
aam
arpl
ret
jb
test
out
vinsertps
push
add
test
mov
jne
or
ja
mov
dec
js
aaa
iret
add
xchg
pushf
repnz
mov
mov
stos
sahf
and
push
mov
fdivl
repnz
lcall
push
iret
adc
test
xor
cmc
bound
pusha
repnz
mov
xlat
loop
dec
xor
mov
inc
stos
jne
popf
jge
cs
push
les
cld
fisubrs
pop
add
jbe
push
adc
xor
test
push
inc
mov
jno
dec
sbb
inc
push
sbbb
out
inc
push
sbb
or
push
inc
mov
stc
in
bswap
outsl
push
imul
xchg
xlat
adc
cmp
out
add
jne
fimuls
ljmp
mov
mov
clc
addr16
push
add
arpl
lods
cmp
xor
mov
out
cwtl
xor
and
loopne
sub
outsb
es
inc
decl
rorb
add
pop
aam
testb
adc
jl
or
xor
jo
adc
pop
mov
jl
mov
lds
leave
sbb
or
pop
cmp
xchg
xor
cmpsb
jg
xchg
mov
push
nop
push
imul
mov
js
mov
and
pop
push
xchg
aaa
into
sub
aaa
fildl
jg
and
jns
add
shll
jecxz
sub
mov
jns
jp
ljmp
push
test
cltd
cs
sbb
call
sbbl
pop
xchg
add
jge
dec
fimuls
faddp
add
push
pushl
inc
push
aam
pop
loope
into
pusha
repz
in
outsl
mov
jmp
sub
mov
gs
call
das
nop
mov
aad
pop
dec
add
sti
in
std
push
add
mov
adc
fs
ss
scas
clc
sbb
cmpps
ret
gs
aam
scas
insb
sbb
rorl
call
loope
fmull
lret
insb
mov
pusha
push
mov
mov
dec
ret
xor
adc
jg
xor
mov
sahf
mov
int3
mov
mov
sbb
or
push
scas
mov
shll
pop
xor
push
aas
fsubrl
fistps
mov
mov
inc
dec
xchg
out
testb
or
insl
inc
orl
xor
pop
jmp
dec
pop
and
lds
jg
cs
outsb
push
mov
jle
mov
inc
sub
jns
push
ret
outsb
das
adc
subb
fistpl
inc
cmp
sub
psrlq
cwtl
dec
adc
jecxz
scas
and
lods
imul
jle
or
ja
daa
icebp
lahf
jae
pop
add
jnp
les
popa
movsl
sti
loopne
cld
ret
ret
pop
jbe
pop
fdivs
jl
sarb
add
outsl
lret
jbe
cmp
test
aas
or
test
xor
testl
ds
test
mov
and
in
out
pop
psubd
jne
fistl
clc
mov
adc
cltd
or
jp
sahf
mov
jo
xor
fdivl
popf
ficompl
fists
call
out
jne
add
repz
sbb
add
or
mov
cmpsl
dec
or
jne
dec
ret
insl
bound
jno
stos
addb
mov
out
jecxz
adc
iret
lahf
sub
or
push
fwait
ds
sub
mov
ds
mov
lcall
push
mov
cmp
enter
mov
aas
test
inc
add
sub
mov
or
leave
dec
notl
arpl
cmp
mov
xchg
xchg
les
sub
mov
mov
cmp
mov
cmp
inc
mov
mov
incb
inc
push
sub
popa
fwait
shlb
out
jecxz
rcll
dec
fidivs
jecxz
pop
adc
jbe
inc
lret
outsb
daa
aam
loope
je
xchg
sbb
lods
leave
lods
dec
sbb
or
jb
repz
int3
adc
and
cmp
filds
ja
das
int3
leave
decl
xor
sti
mov
xor
idivb
out
sbb
dec
xchg
notl
jecxz
mov
in
mov
pop
mul
push
lods
inc
mov
nop
push
loopne
testl
or
push
stos
in
jo
cmpsl
jno
pop
fs
in
sbb
add
mov
loope
not
test
shlb
repz
pop
cs
rol
sub
ss
xchg
and
imul
cltd
inc
mov
xchg
fs
mov
or
repz
test
sub
lods
clc
mov
arpl
stos
imul
cmpsb
push
rol
call
repz
sbb
pop
xor
add
pop
add
cs
cmp
notb
jle
loope
mov
xor
subl
adc
sbb
jnp
xchg
add
mov
outsb
clc
fcoml
xor
popa
push
mov
inc
call
add
or
pop
jns
adc
dec
inc
repz
lcall
loop
js
push
adc
mov
ret
pop
lods
cmp
lahf
loopne
adc
pop
and
popa
inc
jg
xchg
add
lea
lcall
jbe
adc
rorb
addl
mov
out
data16
lcall
inc
mov
scas
push
and
int3
repz
add
and
pop
mov
mov
jl
lock
or
jle
pop
in
repnz
add
cmpsb
xchg
and
aaa
and
out
loop
in
pop
xor
hlt
cmp
cmp
pop
int3
jo
inc
mov
scas
int
hlt
mov
in
bound
sbb
or
mov
ds
fbld
sub
addr16
and
loopne
sahf
out
lods
cmpb
jp
out
jg
leave
xchg
inc
push
pop
cmp
lcall
addl
imul
inc
sbb
pop
cmp
fs
fiaddl
ja
push
int3
or
mov
mov
or
imul
orb
jecxz
daa
cs
xor
jmp
cmp
ret
or
ss
jnp
movsb
jp
and
lds
lcall
or
jl
sbb
sbb
dec
nop
ss
cli
mov
sbb
mov
jns
incb
lea
cmc
imul
shrb
rcrl
pop
xchg
sahf
jmp
pop
dec
add
dec
jp
and
cmpsl
scas
dec
popf
cmpsb
xor
cvtps2pi
mov
or
stc
jle
dec
push
aas
ds
dec
inc
or
mov
sub
mov
jb
test
fistps
sub
mov
sbb
shlb
push
push
int
std
sbb
icebp
cmp
push
mov
add
mov
mov
push
in
xor
ret
xor
xor
jnp
inc
loop
popa
pop
scas
add
sbb
jno
cmp
dec
cmc
push
adc
xor
cmp
scas
shr
mov
lret
out
jae
mov
pop
into
xor
push
jbe
in
or
sarb
push
or
mov
xchg
cmc
xchg
cmp
inc
clc
lock
inc
push
mov
fisubrs
pop
mov
pusha
adc
and
pop
test
aad
int3
mov
es
int3
out
or
or
xchg
pop
out
jo
fidivrs
push
fwait
add
hlt
adc
testl
jno
je
xlat
or
scas
dec
mov
imul
xchg
cmp
mov
lcall
mov
jae
fsubs
daa
jp
pushf
ds
sub
mov
pop
mov
add
mov
mov
push
ret
scas
xlat
stc
push
cs
and
shrl
jae
lret
inc
adc
in
mov
pop
lcall
mov
mov
pop
idivl
scas
xor
push
cld
dec
mov
mov
imul
or
in
callw
mov
lods
roll
push
rcll
enter
sbb
outsl
test
outsw
fcmovu
and
pop
mov
and
cmp
xor
cwtl
sub
pop
lods
fnstenv
push
rcll
or
fimull
pop
mov
jecxz
mov
sahf
rclb
sbb
cli
sub
adc
shlb
push
es
push
xchg
mov
movsb
shrl
sarb
push
pop
imul
inc
inc
adc
xchg
mov
jbe
mov
mov
push
mov
xchg
leave
push
mul
xor
add
roll
adc
sbb
mov
js
test
mov
pusha
cmp
sub
mov
dec
push
stc
sub
aas
fxch
add
fcomi
mov
gs
shll
pushl
mov
adc
mov
iret
mov
les
sbb
and
loopne
inc
ret
push
push
lahf
push
add
idivb
js
add
test
inc
jbe
add
or
stc
cltd
in
adc
imul
punpckldq
pop
xchg
xchg
sbb
push
mov
mov
ljmp
out
lret
jge
dec
xchg
push
dec
jne
xchg
les
or
mov
and
jne
popa
mov
stos
push
leave
adc
test
and
push
sub
stc
fisubl
jge
xchg
aaa
inc
jecxz
xchg
sub
cs
adc
lahf
pop
sbb
insb
bnd
or
movsb
hlt
imul
inc
mov
arpl
or
jg
or
arpl
mov
pop
hlt
dec
dec
pop
lods
mov
push
inc
push
and
mov
jg
or
ffree
adc
std
adc
aam
cs
fcomip
mov
out
lock
repz
outsb
in
inc
pusha
sbb
iret
jae
sub
mov
sbb
scas
inc
test
pop
dec
mov
mov
push
ficomps
pop
jge
add
xchg
mov
push
mov
out
stc
adc
cmp
jecxz
jne
stc
scas
sub
aam
push
jns
dec
adc
ja
inc
and
jbe
pop
push
or
mov
inc
mov
jle
jmp
jnp
orl
in
sbb
fistpll
mov
add
sbb
xorl
push
jnp
add
mov
pop
mov
stos
jnp
or
jae
out
jg
inc
rcr
es
push
mov
in
dec
cmp
lds
stos
mov
pop
loopne
or
xchg
cli
pop
mov
xchg
jp
std
cmp
test
jge
aam
or
jno
inc
das
in
shll
je
sbb
lret
jmp
in
aam
add
xchg
and
push
xor
inc
adcl
pop
mov
imul
shlb
push
scas
in
cmp
popa
fidivrl
adc
pop
aad
push
fucom
inc
sbb
bound
repz
adc
lock
cmc
sub
mov
stos
fcoms
inc
dec
ljmp
outsb
push
sub
push
loopne
addr16
sti
push
push
inc
mov
cmpsb
pop
xchg
mov
movsb
arpl
aaa
sbb
stos
lahf
dec
adc
jle,pn
roll
mov
pop
push
jle
cmp
icebp
call
push
xrelease
xchg
jmp
inc
insl
test
and
lret
les
pop
mov
daa
xlat
sub
bound
fimull
loopne
icebp
rolb
inc
sub
repnz
xchg
setg
and
sarl
sub
outsb
inc
sbb
jo
push
cmp
nop
lret
sub
pop
jl
mov
out
sti
addr16
je
jmp
add
lcall
cmpsb
cmp
out
lret
push
xor
ss
imul
rcll
and
movsl
in
mov
or
pop
pop
sub
jp
cmp
sub
mov
add
fstl
adc
insb
inc
xchg
les
dec
push
inc
xchg
aad
jmp
pop
frndint
cmp
jb
stc
out
aam
and
into
xchg
sub
xchg
and
out
dec
cmpsb
fldcw
sar
int3
ds
scas
xor
dec
xchg
jmp
cmp
and
inc
dec
push
mov
xchg
push
mov
or
push
into
pop
pop
mov
inc
aas
ja
inc
cmp
dec
pop
aam
pop
inc
mov
jge
or
js
jl
dec
ret
mov
xchg
xchg
aam
jecxz
outsl
fwait
test
test
negb
xchg
pusha
les
fnstenv
cmp
pop
add
mov
adc
int
lds
in
popa
addr16
and
lock
lahf
outsl
and
cmpsl
pop
pop
ds
push
or
imul
into
repz
mov
xor
and
data16
das
pop
gs
fidivl
movsl
jp
jge
idivl
mov
mov
dec
xchg
pop
mov
pop
test
cmc
or
inc
rcrl
outsb
sub
sbb
cmp
pop
popf
jg
sbb
and
shlb
pop
aaa
mov
mov
sbb
jle
arpl
movsl
mov
int3
adc
clc
nop
je
aam
imul
mov
fwait
mov
daa
mov
add
cmc
cmp
mov
or
rcrl
icebp
addr16
dec
repz
dec
dec
mov
xchg
dec
fisubl
xchg
cmp
mov
loopne
fcompl
cmc
push
or
fnstcw
insb
xor
daa
add
int
fisttps
cmp
pusha
and
mov
mov
fistl
test
mov
or
fistl
xchg
mov
popa
mov
jg
sub
shrb
test
popf
pop
in
notl
lahf
pop
add
mov
and
mov
push
add
mov
loope
fs
test
pusha
dec
iret
adc
dec
out
mov
mov
inc
push
popf
dec
mov
call
mov
aas
inc
int3
dec
subl
arpl
outsb
lods
daa
push
mov
jmp
xchg
jp
add
add
mov
mov
pop
ss
xchg
xchg
push
pop
and
pop
sbb
cmp
into
mov
data16
mov
mov
clc
mov
in
lock
xlat
gs
xor
int3
jae
pop
mov
sub
pop
jp
adc
jmp
adc
mov
ss
inc
or
fmull
mov
sbb
mov
xor
adc
adc
cmc
inc
xor
pop
push
aam
data16
imul
pop
push
jns
adc
mov
or
test
mov
cs
sub
pop
add
repz
adc
dec
nop
fnstcw
repz
xor
mov
lret
dec
roll
in
xchg
mov
fwait
mov
push
add
push
mov
ss
dec
loope
push
es
nop
mov
jnp
std
sbb
fistl
in
outsb
cmp
push
push
aad
inc
leave
clc
mov
mov
mov
mov
cwtl
enter
dec
mov
jb
int
inc
sub
dec
or
jle
pop
ret
fbld
mov
clc
scas
adc
push
sbb
lds
mov
aad
sub
pushf
mov
cmp
fisttpll
popa
cmp
out
scas
mov
mov
popa
icebp
sbbb
out
cmp
pop
movsl
scas
cltd
out
inc
adc
sti
mov
xchg
outsb
shrl
testb
je
leave
inc
data16
fdivl
jge
bound
sub
push
lret
test
add
and
pop
sub
rolb
push
in
sub
scas
sub
pop
or
adc
push
outsb
imul
rcrl
jns
and
call
outsl
cwtl
lret
or
test
pop
jmp
inc
add
fcmovnu
lret
mov
sub
dec
jae
aas
fisubrl
or
and
sbb
or
clc
cs
movlps
push
cmp
xchg
lea
inc
fwait
in
jns
cmp
fdivrp
pop
imul
shll
push
daa
xor
lock
out
jp
jns
insl
andb
shl
mov
mov
lods
and
jcxz
xor
out
mov
cmp
push
sti
inc
inc
pop
es
ja
mov
dec
mov
dec
inc
lahf
icebp
sarb
push
bnd
les
mov
call
xchg
cltd
leave
nop
push
fldcw
clc
xor
sub
push
fstpl
call
insl
xor
mov
xchg
fdiv
cltd
test
in
pop
or
les
aam
adc
std
dec
adc
pop
insb
lods
xchg
lods
push
ljmp
cmpsl
test
mov
mov
or
jecxz
cmp
out
imul
shll
sti
push
loop
push
mov
repz
pop
add
cmp
pushf
add
cs
sbb
insb
or
cmp
pop
inc
data16
aad
cld
cmp
in
jp
inc
mov
mov
mov
incl
das
jecxz
out
jo
push
aam
adc
mov
in
xchg
or
dec
jle
cmpsb
dec
lcall
inc
gs
cs
jg
test
inc
lahf
push
sbb
lds
loopne
cs
insl
or
rorl
xchg
jbe
adc
pop
bound
pop
pop
insb
dec
cltd
cmpsb
adc
jp
ror
subl
ret
ficomps
outsb
mov
dec
out
loopne
xchg
cmp
xor
dec
mov
jnp
int3
jnp
cmp
repz
push
or
shlb
cmpl
mov
cli
jp
pop
aas
inc
cmpsb
mov
imul
sahf
or
out
or
push
dec
lret
cmp
popf
push
pop
flds
sbb
into
pop
outsb
push
enter
sbb
sub
mov
arpl
jo
sub
inc
inc
iret
mov
mov
jg
xchg
mov
xchg
mov
mov
push
pop
pop
leave
push
mov
inc
xchg
add
adc
stos
mov
mov
lret
lcall
andb
lods
clc
ficomps
mov
repnz
mov
add
adcb
mov
push
push
mov
out
fld
cmc
push
roll
lret
clc
cmp
shlb
mov
mov
jo
mov
mov
adc
leave
out
test
pop
fbld
into
shl
repnz
test
cmp
cli
xor
rorl
push
in
in
daa
imul
push
or
cmpsb
loop
push
cmc
push
imul
loope
adc
add
sbb
js
mov
fwait
sbb
dec
sub
dec
xchg
sbb
cmp
js
mov
clc
inc
test
lods
or
ds
xchg
mov
into
mov
call
jbe
int3
roll
or
sbb
jge
pop
cmp
jo
out
jnp
pop
mov
xor
mov
int3
test
or
les
lock
add
pushf
xor
sbb
in
enter
negb
pop
aad
push
cmpsb
xchg
sbb
push
in
subb
lea
xchg
adc
xchg
cmp
dec
mov
jp
or
and
and
lods
fistpll
das
sub
pop
stos
sub
lcall
push
rorl
xor
lret
add
dec
fidivrs
imul
xchg
xchg
xlat
mov
lea
cwtl
mov
mov
daa
mov
cmc
cmpsl
leave
test
xor
pop
test
fdivl
push
push
push
mov
pop
cltd
fmull
pusha
outsl
jne
enter
sbb
dec
sub
pop
and
enter
dec
jmp
xchg
xchg
repnz
push
mov
pushf
pop
hlt
mov
pop
xchg
ds
shl
ja
repz
fstps
mov
adc
fldenv
sbb
mov
aam
mov
add
add
push
cmc
cmpsl
dec
adc
sbb
mov
mov
push
mov
cmp
out
mov
dec
cmpsb
mov
or
mov
mov
xchg
ficoms
xchg
mov
repz
leave
xchg
adc
out
or
mov
loope
test
cli
mov
scas
pop
dec
dec
ss
adc
popf
mov
jbe
sub
adc
in
or
cld
add
mov
fcompl
xor
pop
dec
dec
dec
mov
sbb
xlat
xchg
sub
addr16
mov
daa
out
push
or
add
or
xlat
movsl
repz
jb
inc
mov
ficoml
stos
and
pusha
jecxz
nop
popl
sarl
and
inc
adc
lahf
inc
and
outsb
pop
lahf
sub
push
jge
push
cmc
shlb
push
jle
dec
fsts
aas
rorb
push
stos
xor
insb
fcmovne
ss
jae
fwait
bswap
mov
sub
mov
aaa
sbb
fcomps
mov
test
fwait
and
adc
test
scas
xor
sti
icebp
or
inc
cmpsl
cmpsb
pusha
xor
imul
les
mov
pop
pop
and
jmp
xchg
jl
mov
push
loop
sbb
fwait
xlat
cmp
pop
mov
pop
mov
jecxz
sub
aas
bnd
push
sub
jge
ljmp
push
ss
adc
mov
pop
je
xor
push
lock
dec
shll
movsb
sbb
jge
iret
stos
negl
jbe
imul
arpl
dec
rcrl
push
es
or
inc
in
cmp
mov
xchg
enter
lret
sub
rolb
xchg
pop
adc
or
movsl
fwait
in
push
out
hlt
mov
ret
cmp
or
arpl
hlt
mov
outsl
adc
inc
xchg
mov
add
cmp
sahf
mov
mov
push
mov
leave
xor
arpl
mov
int3
pop
pop
mov
inc
fbld
or
cmc
fbld
pop
fisubs
pop
jnp
push
mov
fistps
jmp
xchg
shlb
xchg
outsb
aas
xchg
mov
pop
pushf
mov
pop
pop
into
cs
add
jnp
sar
aaa
ja
and
scas
xlat
pop
mov
pop
daa
inc
cs
call
mov
mov
push
push
jge
xlat
ja
repz
adc
dec
pop
mov
fstpl
scas
fidivl
mov
in
ljmp
scas
lods
pop
cmp
add
das
in
push
add
jmp
arpl
decl
popf
push
fimuls
pop
mov
mov
lret
xor
fmuls
mov
je
sub
clc
inc
pop
test
filds
dec
jge
push
push
cmp
lcall
ljmp
jle
pop
push
in
xchg
mov
dec
xchg
movsl
notl
imul
arpl
xor
add
adc
jne
es
and
repz
rorl
andl
jp
testl
xchg
nop
rclb
enter
sub
dec
or
jg
cs
mov
push
xchg
and
inc
sar
rcrb
mov
xchg
jnp
imul
mov
js,pt
pusha
mov
mov
adc
xor
add
xor
movsl
push
xchg
sub
in
addb
and
dec
mov
mov
and
mov
popf
out
cmpsb
mov
rcrb
out
jbe
js
adcl
cmpsb
inc
mov
cltd
sub
push
push
fwait
mov
mov
jae
lods
outsb
inc
lods
lret
jl
lds
popa
ss
pop
cmp
mov
jge
je
mov
jnp
call
mov
into
and
adc
xchg
mov
mov
fsubs
xor
add
adc
nop
add
shrb
cld
iret
orl
push
rcrl
int
mov
fistl
pop
dec
or
sbb
push
sbb
and
xor
xchg
cwtl
mov
mov
sub
push
xchg
mov
je
pop
xor
shll
lahf
cmp
pop
outsb
ljmp
aad
sub
jg
inc
in
out
inc
int3
cmp
cmpsl
iret
arpl
stos
mov
pop
jmp
stos
pusha
scas
or
out
es
sub
sub
dec
cltd
adc
mov
fidivl
add
insb
jne
lods
and
mov
jo
ss
movsb
add
lods
fwait
insb
mov
jo
mov
mov
loope
adc
mov
mov
cmp
jbe
mov
xchg
test
xchg
lret
fimull
mov
ss
jmp
mov
enter
jg
push
jl
xorb
jbe
jns
add
pop
test
pop
mov
adc
lock
push
mov
or
pop
cmp
cwtl
mov
addl
shrb
xor
sahf
test
mov
pop
dec
dec
and
jno
orb
loopne
pop
pop
in
repz
nop
nop
int
mov
cmp
repnz
in
mov
loope
and
sahf
adc
inc
adc
fidivrs
and
fildll
add
hlt
ret
movsl
loop
ret
dec
xchg
fnsave
pop
mov
outsb
iret
shl
mov
or
mov
mov
jbe
jge
xchg
pushf
imul
xchg
add
leave
mov
pop
mov
fs
daa
cwtl
pop
mov
inc
popa
rcrl
adc
lods
lock
mov
movsl
in
testl
push
pop
inc
rolb
leave
dec
add
xchg
movzwl
mov
push
mov
push
mov
ja
dec
push
les
push
int3
adc
repnz
popa
rolb
add
inc
sbbb
in
rclb
xlat
call
mov
filds
lret
gs
jecxz
stos
aad
outsb
loop
xorl
and
ficomps
pop
push
sbb
ds
pop
jne
loopne
xlat
dec
jecxz
cmpsl
mov
push
xchg
lahf
push
inc
or
gs
das
loopne
inc
scas
push
mov
mov
sub
dec
jae
cmp
and
adc
pop
jo
xchg
cmp
sbb
std
xor
sbb
and
jl
sahf
test
sub
sub
mov
xor
shr
mul
push
or
gs
mov
mov
mov
js
dec
subl
push
dec
clc
fildll
int3
imul
rorl
xchg
in
xor
in
add
enter
je
xchg
in
ljmp
lahf
mov
sub
sub
and
inc
inc
jl
leave
outsl
mov
and
inc
add
cmpxchg
loop
jb
add
push
insb
jmp
outsl
je
cmp
pop
loopne
sbb
aad
pop
jmp
les
and
jbe
xor
xchg
es
sbbl
and
les
fildll
mov
fst
aad
out
jl
jge
mov
imul
rorl
es
pop
dec
inc
jno
jl
dec
pop
gs
mov
lret
xchg
cmp
jl
fdiv
fisttpll
jnp
pop
adc
filds
push
neg
push
sub
pop
cmp
pushf
push
cmp
mov
cmp
jbe
rcr
adc
sub
repz
inc
xchg
shll
popa
mov
sti
xor
cmp
jno
push
out
daa
inc
jae
xchg
test
mov
or
and
lret
leave
sbb
ja
mov
mov
adc
inc
fwait
cmp
xchg
lret
ds
sub
shll
dec
jns
mov
dec
pushf
imul
rcll
andl
aaa
xchg
mov
jecxz
sub
mov
push
mov
cmp
mov
inc
shrb
mov
xchg
stos
shlb
inc
jg
jo
nop
sarl
scas
inc
mov
pop
stos
icebp
fcoml
test
int3
idiv
sbb
adc
sarl
insb
lahf
outsl
mov
jp
push
loop
cmp
lcall
adc
mov
iret
fsts
inc
cmp
ljmp
push
cltd
sbb
mov
test
xor
stos
test
adc
add
or
fmuls
jl
mov
jmp
inc
xchg
arpl
sbb
mov
pop
mov
lret
lcall
push
cmc
xor
repz
insb
in
mov
stos
gs
and
ds
pushf
clc
das
out
loop
lea
lds
cltd
lahf
lret
cmc
hlt
mov
lea
pop
mov
lock
xor
push
subb
inc
pop
outsb
adc
stos
cmpsb
bound
outsb
push
sbb
repnz
mov
dec
ret
lods
adc
fcomip
dec
mov
jne
test
in
mov
xchg
sub
cmc
in
dec
lods
xor
jbe
cmp
or
dec
popa
push
stc
out
xlat
add
sbb
pop
stc
sahf
mov
popa
insl
mov
insl
xor
repnz
cmc
push
or
pop
cmpl
stos
or
mov
int
and
int3
stos
lcall
mov
repz
shll
mov
clc
push
jnp
cmpsl
sub
add
ret
inc
mov
lahf
fsts
cmpsb
push
bound
out
gs
insb
lret
adc
xor
stos
jno
xor
push
leave
jbe
or
mov
dec
lods
shll
cmp
stc
in
push
mov
or
and
fs
or
ds
sub
nop
fs
popf
xor
popl
cmp
ret
jg
xchg
je
push
cld
mov
dec
pop
mov
inc
dec
imul
ret
in
ror
inc
mov
push
mov
mov
rorb
outsb
jno
scas
adc
fsubs
push
pop
mov
mull
out
mov
das
sub
inc
cmp
pop
not
jne
inc
scas
fisubl
imul
pushf
pop
ret
icebp
adc
mov
and
jge
jmp
leave
fmuls
adc
fimull
jmp
mov
outsb
ds
ljmp
in
loope
sub
xchg
test
jg
sbb
stc
mov
pusha
add
cmpsb
or
inc
push
ss
push
or
lcall
shr
mov
pop
push
push
mov
into
adc
outsl
sub
sub
test
js
imul
fucomp
xor
pop
arpl
or
ja
incl
sub
and
mov
shlb
std
roll
jnp
jmp
inc
stos
out
cmp
mov
fmul
sub
fisttpll
imul
jle
movsl
clc
push
aas
orb
mov
and
dec
lret
clc
aas
fwait
dec
repnz
pop
out
adc
xchg
adc
dec
fnstenv
jecxz
mov
push
cmpsb
lcall
cmc
mov
inc
xor
int
cmp
addr16
les
je
in
xchg
fnstcw
dec
jno
jae
add
jae
pop
dec
mov
hlt
int3
mov
rorb
xchg
int
jae
das
mov
insb
movl
outsl
xchg
clc
xchg
outsb
sbb
ret
gs
pop
out
mov
cmp
mov
push
adc
shrb
xor
daa
imul
mov
test
bound
movsl
or
sarl
push
in
cmpsb
add
movsl
sub
ret
clc
sbb
mov
or
sub
lods
fidivl
repz
dec
test
xor
sarl
sbb
push
in
ret
push
in
fisubrl
sti
dec
fdivrl
jae
inc
inc
xchg
loopne
xor
xor
nop
in
jmp
sbb
cwtl
outsb
pop
loop
repnz
mov
sbb
das
sub
je
in
lods
pop
ljmp
jns
mov
lods
sbb
mov
xchg
int
setb
mov
out
mov
mov
out
dec
jo
mov
test
sub
mov
xchg
xchg
cmp
push
xchg
sbb
xchg
jp
and
xchg
sbb
and
outsb
insb
cmp
mov
int
xor
or
les
aam
in
mov
mov
outsl
js
pop
stos
mov
sbb
imul
dec
mov
jae
xchg
jnp
jmp
jmp
jo
jmp
xor
sub
inc
adc
inc
arpl
les
inc
sub
cs
dec
filds
push
jge
sub
push
fwait
add
shlb
pop
loopne
inc
lods
mov
cmp
add
xor
or
stos
xor
mov
jae
jge
cltd
lea
loopne
xchg
sbb
dec
mov
dec
ljmp
push
flds
stos
pop
mov
sub
mov
sub
ljmp
jbe
lods
dec
cmp
movsb
stc
pop
jnp
add
xchg
js
mov
add
xor
ss
xor
fnstcw
fsubrs
scas
mov
inc
icebp
jno
mov
shrb
and
xor
out
ret
inc
add
movsb
ds
outsb
cwtl
push
jbe
fstl
dec
orl
push
mov
orb
pop
addl
xor
xchg
add
dec
sub
cwtl
ljmp
jp
daa
xchg
and
sub
fwait
or
pop
sub
mov
jne
add
in
jns
ret
std
pop
test
mov
xchg
and
xor
pushf
fcomip
jnp
movsb
xor
jnp
cmp
sub
lea
loop
bound
push
jg
sbb
sub
push
push
lods
in
test
inc
mov
mov
or
ret
pop
dec
int3
outsl
and
sub
insl
cwtl
xchg
mov
fidivrl
xchg
push
imul
jne
mov
sub
cmp
add
mov
pop
jae
clc
and
adc
or
leave
lcall
add
pop
inc
roll
dec
loopne
or
ljmp
ds
push
push
xchg
call
das
xorb
cmp
inc
fildl
rorl
and
icebp
adc
push
inc
jmp
or
repz
dec
inc
dec
lret
jp
psubusb
jae
and
push
dec
int3
sub
mov
je
push
jne
lret
and
mov
inc
into
jno
pusha
out
fldl
mov
jbe
stos
pop
jo
cmpsb
stos
mov
fisttps
imul
cmp
mov
pusha
scas
lcall
pop
fdivrs
nop
jo
mov
icebp
jp
mov
jle
mov
xor
xor
xchg
xchg
cltd
cmp
repz
aas
xor
adc
outsb
mov
inc
push
jnp
pop
fcmovbe
jg
dec
popf
std
lods
aaa
pop
ds
leavew
mov
mov
daa
bound
xchg
sahf
adc
sub
movsb
add
mov
popf
repnz
loop
xchg
and
nop
movsb
xor
adc
lods
or
jae
pushf
std
add
mov
cmp
hlt
pop
inc
push
jae
adc
dec
cmc
xchg
sub
jo
jae
subb
cmpsb
repnz
or
das
sbb
xlat
push
rol
mov
sbb
and
adc
cmp
frstor
int
mov
imul
int3
jae
xchg
jae
push
loopne
outsl
sub
fdiv
cmp
add
sub
fdivr
sbb
push
jns
gs
imul
or
ja
out
and
test
dec
or
push
xrelease
ss
arpl
and
lods
pop
inc
mov
sbb
lods
or
add
cs
loop
cmpsb
popf
pushf
daa
jae
mov
lahf
mov
ja
les
test
lret
iret
lahf
adc
sbb
inc
sti
cmpsb
cs
icebp
iret
jge
es
sub
mov
in
sub
or
push
test
push
sbb
mov
sub
jne
in
xor
pop
insb
insb
pop
loopne
cs
int
and
dec
mov
movb
notb
test
cmp
xchg
xchg
in
ja
add
lret
or
fbld
loope
push
cmpl
dec
roll
sub
insb
mov
test
shll
sbbl
lret
fwait
hlt
mov
popf
sub
adc
or
ja
enter
push
arpl
sbb
jg
add
cmpsl
gs
inc
or
push
addb
gs
rclb
push
adc
push
lock
xchg
cwtl
icebp
shrl
xorl
stos
rorb
ja
sub
loope
pop
pusha
in
test
jnp
jo
jmp
sarb
ljmp
fs
xor
std
out
cs
sub
mov
xchg
jnp
movsb
das
sub
loopne
pop
negb
add
sahf
push
adc
fbld
sub
scas
mov
mov
jl
push
jno
sub
es
cmpsl
sub
jae
enter
and
inc
std
fsubrp
xor
leave
cld
jns
aaa
jp
cmpsl
fcmovb
outsl
sbb
pop
mov
out
inc
cmpsb
hlt
fisubl
or
in
rolb
or
pop
sub
lock
xchg
sbbl
and
mov
push
cmp
mov
xor
lea
dec
lret
cmp
mov
inc
jno
mov
push
enter
push
fstl
sti
jle
dec
popf
cmp
leave
pop
cld
sbb
out
sub
mov
mov
les
test
sbb
adc
xor
mov
icebp
dec
jns
mov
cwtl
in
ds
xor
dec
mov
mov
sbb
in
push
les
lods
cmp
sub
repnz
mov
cmp
insb
pushf
rcll
push
out
data16
lea
xor
or
jmp
lret
ficoms
pushw
int
push
mov
pop
xor
xchg
inc
push
jl
jmp
push
shl
push
pop
pop
push
xchg
cmc
ret
rorb
ffreep
in
cmp
and
mov
dec
mov
les
sub
test
stc
das
popl
aad
js
dec
mov
mov
insb
out
movsb
push
iret
add
sub
ljmp
fucomip
mov
enter
fbld
inc
sub
lret
lret
imul
es
jb
nop
leave
add
outsb
push
sub
and
outsl
dec
ror
repz
push
or
push
or
push
adc
pop
push
divb
dec
dec
hlt
nop
shlb
add
push
jl
mov
lret
les
shl
hlt
lahf
stc
inc
sar
popf
sbb
xor
mov
adc
pushf
push
jne
mov
xor
out
lcall
push
push
cs
sub
pop
popa
ds
es
les
lret
jnp
imul
xor
cmp
pop
cmp
rclb
xor
add
inc
dec
cmpsb
dec
xchg
testb
mov
xchg
in
lcall
out
loop
sub
xor
adc
insl
shrb
cwtl
push
add
xor
jno
mov
test
lret
adc
sbb
mov
cwtl
pop
mov
sbb
push
add
inc
mov
imul
fildl
ss
cli
mov
pop
jo
int
adc
xlat
pop
push
cmp
push
cmp
fisubrs
pop
std
popa
pop
mov
repnz
mov
inc
lock
ret
cmp
push
fldz
in
test
jb
dec
dec
cmpl
sti
insl
sbb
fldl
mov
les
cmpsb
cmp
shll
mov
pop
xchg
scas
mov
repnz
push
jnp
mov
or
aas
xchg
popa
sahf
xor
adc
xor
jnp
and
or
xchg
jbe
sti
leave
cld
jl
cs
je
xchg
rcll
inc
stos
sub
rorb
mulb
test
popa
loopne
aam
call
xchg
push
inc
inc
xchg
sbbl
jmp
rcl
or
enter
xchg
sbb
dec
lret
mov
fists
cli
je
insl
aas
pop
out
mov
test
popa
pop
cmp
lahf
icebp
mov
lahf
inc
aam
and
and
rol
xlat
jecxz
mov
mov
movsb
out
out
icebp
aaa
push
inc
mov
nop
inc
adc
mov
push
loop
jb
call
aas
cmp
shrl
adc
cli
xor
inc
push
jp
lret
cmc
pop
arpl
adc
arpl
add
pop
cld
addl
in
cmpsl
push
inc
in
push
adc
lcall
lcall
xchg
xchg
jb
fldenv
jbe
push
mov
loopne
cmpsl
xchg
push
ljmp
clc
sahf
cmp
insl
pop
fs
mov
lret
mov
pop
into
sbb
pop
stc
inc
dec
and
and
fs
sbb
es
xlat
xor
xor
add
mov
dec
mov
leave
xor
pushl
lods
orl
loopne
mov
aaa
test
fistps
or
arpl
lods
mov
sbbl
cmc
test
aas
pop
stos
rcrl
dec
xchg
jg
push
mov
daa
cltd
imul
movsw
mov
adc
cmp
mov
js
inc
sbb
call
mov
mov
and
out
dec
js
dec
je
lods
adc
test
jmp
adc
xor
cmp
inc
dec
sbb
int
insl
in
cld
push
mov
popa
add
adc
mov
pop
fs
ljmp
icebp
cs
aam
inc
ljmp
lahf
js
dec
jo
adc
ret
add
xchg
iret
cmp
loop
pushl
mov
pushf
xchg
mov
push
mov
jp
mov
loopne
js
jo
inc
shlb
lcall
shll
je
jl
ret
out
push
xchg
popa
imul
mov
sub
mov
rclb
stc
dec
sub
popa
pop
jne
or
adc
and
inc
push
cmp
jae
cmp
lahf
outsb
cltd
fidivrs
push
fwait
orb
mov
pop
shlb
mov
insl
imul
cli
lret
sub
push
jae
je
rcll
es
mov
jp
ljmp
int3
jmp
clc
push
cmpxchg
sbb
clc
cli
mov
test
clc
jmp
stos
push
inc
cli
mov
jae
clc
mov
pop
inc
jle
sbb
in
inc
mov
mov
mov
sbb
popf
cmp
mov
outsl
inc
insl
add
or
sbb
sti
or
not
dec
sbb
rclb
int
cmp
ret
in
ret
dec
dec
jecxz
xchg
test
fdivl
cmc
sub
jnp
sbb
xchg
divb
fadd
enter
repz
xor
ficompl
cmpsb
stc
pop
pop
stos
fldcw
mov
jo
in
clc
sub
xor
lret
outsl
inc
push
mov
aad
or
outsb
adc
mov
icebp
lock
movsl
pop
lret
lret
and
pop
rcll
loopne
add
mov
sub
outsb
push
push
inc
xor
dec
cmp
sub
push
loop
inc
loope
dec
icebp
loopne
cmp
std
loope
inc
aad
jle
sbb
push
dec
xchg
fs
fcomip
pop
js
mov
add
jns
xchg
or
xor
sub
mov
cmc
cmp
sbb
stos
add
push
test
dec
sbb
lret
dec
mov
inc
into
ficompl
lods
in
hlt
push
mov
insl
pusha
inc
xchg
andnps
jp
and
sub
jmpw
jbe
insb
adc
xchg
inc
fdivl
inc
imul
fs
adc
sar
ret
mov
fsubr
lods
out
mov
xadd
xchg
int3
mov
pop
pusha
jb
cmp
mov
loopne
sub
inc
mov
rcl
xchg
jnp
xor
in
push
or
stc
ja
jne
push
pushf
push
leave
aam
pop
mov
jmp
xchg
movsl
sbb
ljmp
daa
cld
into
js
mov
pop
ss
mov
test
lret
mov
mov
or
inc
lock
cli
inc
and
push
jmp
pop
fdivrl
mov
movsl
adc
xchg
mov
mov
out
push
sub
xchg
je
repz
inc
ja
call
push
push
sbb
cmpsl
fcomps
pop
dec
mov
add
inc
rol
mov
pop
push
roll
les
sbb
sbb
outsl
loope
imul
cmp
and
xchg
mov
add
daa
push
ja
jae
jbe
fmull
xor
jb
aam
lea
popf
xchg
imul
cmc
aas
fistpll
mov
dec
jbe
or
stos
xchg
push
mov
fsubl
or
ja
jle
les
pop
xchg
inc
mov
mov
loopne
jbe,pn
clc
lock
xchg
lock
inc
int3
pop
loopne
in
insl
xchg
scas
shrb
sbb
test
mov
push
xchg
mov
xchg
inc
mov
jecxz
mov
push
cwtl
xor
scas
lea
iret
xchg
jne
xor
cmp
mov
imul
dec
fiadds
loopne
jle
cmp
inc
add
sarl
add
push
pop
fstpt
cmp
sbb
sub
push
mov
out
mov
adc
mov
mov
mov
les
mov
xchg
insl
ja
push
mov
data16
and
arpl
push
aad
icebp
cmpsl
jle
mov
xchg
cmpsl
jne
pop
cwtl
js
imul
lods
add
mov
sbb
sbb
mov
add
scas
sub
cmp
pop
inc
pop
jge
cmp
out
jmp
lcall
jmp
lds
mov
mov
jle
sub
stc
test
xchg
xchg
xchg
sub
mov
pushf
mov
push
sbb
jb
fisubl
imul
fdivrs
divb
lcall
rclb
stos
adc
loop
addl
loopne
push
pop
xor
sub
data16
loopne
stos
sbb
xor
dec
pusha
mov
fstpl
mov
lock
es
sbbb
add
adc
or
jae
cmp
cmp
in
sbb
mov
jb
pop
in
imul
sahf
insl
xchg
scas
push
inc
pop
mov
or
push
test
jecxz
in
pop
jg
loopne
cmpsl
or
orl
push
jle
pop
mov
bound
imul
cltd
or
lret
xchg
mov
adc
insl
inc
push
push
mov
fs
incl
or
mov
pop
mov
out
das
sub
mov
jo
add
push
adc
mov
pop
xor
cmp
mov
mov
mov
idivb
inc
jp
pop
stc
cmc
movsl
cmp
sbb
or
sbb
fbstp
loop
into
xchg
call
inc
data16
int
push
push
flds
and
in
xchg
sbb
pushf
jo
dec
add
ss
es
lock
jl
sbb
mov
adcl
popa
mov
fists
mov
aaa
popf
push
scas
sub
call
arpl
in
push
fucom
js
cmpsl
jne
jns
divl
dec
rcrb
jno
arpl
mov
sahf
inc
and
jbe
loopne
push
cld
cmp
andb
lret
lds
call
mov
add
movsb
cmp
cmp
int
xchg
jl
dec
ja
mov
sbb
addr16
xchg
inc
mov
pusha
out
call
lahf
jl
push
dec
out
repnz
and
ret
addr16
in
cs
je
out
fcoms
cwtl
das
sbb
insb
cmpsl
cmc
cmp
out
rcr
push
inc
jle
cmp
dec
pop
xor
jnp
fmull
pop
xchg
imul
inc
enter
xchg
stos
push
dec
mov
add
mov
and
inc
std
pop
jp
jo
bound
in
test
jmp
dec
pop
cmp
push
or
and
scas
insl
fnsave
push
pushf
pop
xchg
mov
ljmp
mov
mov
add
cmp
push
xchg
mov
cli
fdivr
and
aad
enter
imulb
dec
lcall
xor
or
pop
add
inc
fidivs
pop
mov
adc
pop
pop
mov
repz
lods
jbe
jbe
loop
lds
dec
leave
lret
int3
pop
mov
xor
iret
clc
push
into
mov
push
out
mov
leave
or
gs
arpl
mov
adc
les
stc
ret
lock
or
push
adc
mov
je
les
imul
mov
dec
dec
sysret
in
mov
popa
outsw
inc
inc
sub
loop
out
mov
lds
daa
and
pop
inc
adc
inc
in
ljmp
mov
scas
lret
inc
xor
cli
mov
dec
lods
jg
inc
inc
mov
dec
mov
push
into
jge
mov
add
xabort
and
in
jns
xchg
mov
sbb
mov
adc
std
adc
and
jp
and
stc
mov
fldl
fdivs
mov
or
cmp
int3
scas
movb
cwtl
pop
push
xor
push
lret
inc
fwait
dec
mov
adc
or
sub
jl
std
ljmp
pop
es
or
sub
test
cwtl
jne
xchg
shl
mov
mov
xor
pop
or
repnz
repnz
insl
cmpsb
ret
fidivrs
mov
mov
jne
jge
xor
arpl
test
pop
lret
outsb
inc
rcl
test
in
ds
sub
sub
cmp
out
jae
out
sub
sbb
mov
xorb
push
sti
lods
jecxz
adc
in
pop
jl
pusha
mov
xor
shrl
jns
js,pt
shrl
test
add
inc
stc
dec
jp
shlb
adc
movsl
xchg
cmp
sahf
jbe
push
pop
popf
addr16
sub
div
push
gs
ss
lea
ds
aaa
idivl
inc
add
xchg
cmp
and
sub
adc
pop
push
stc
jle
loopne
js
or
inc
cmp
xchg
mov
xor
inc
shll
xchg
pop
xchg
divl
mov
inc
andb
xchg
xor
pop
xchg
mov
shrl
es
aam
scas
sub
loope
stos
xlat
adc
dec
push
cwtl
insl
cs
or
sub
aaa
loopne
xchg
je
scas
imul
adc
shl
in
adc
jmp
cmpsb
stc
cwtl
repnz
cmp
pop
push
ret
mov
insb
arpl
sub
xor
pop
or
test
aaa
cmpsl
ljmp
sub
lcall
push
insb
or
out
aaa
inc
jecxz
and
outsb
xchg
scas
addl
popf
xor
testl
lcall
sub
adc
daa
sbb
aas
orb
in
out
and
push
daa
idivl
mov
adc
fidivrs
stc
adc
clc
dec
into
cld
outsl
xor
ret
pop
cli
cmp
call
andb
fs
and
sbb
mov
pop
mov
js
mov
and
xor
adc
orb
aam
xchg
rcl
push
sub
fdiv
sti
add
cmp
xchg
bound
repz
andl
cmpb
and
cmp
int
scas
cmp
jbe
fs
loopne
mov
rclb
dec
xchg
cmp
lds
or
sarb
or
sbb
xorb
aaa
aas
pushf
cmp
imul
fsts
mov
sbb
cmp
sbbb
out
sbb
xor
mov
mov
lcall
dec
lods
ja
loopne
fdivrp
mov
push
xchg
fs
mov
fmull
aas
adc
or
decl
lcall
in
lret
insb
mov
inc
sarl
or
jae
fdivl
daa
push
imul
dec
mov
xor
mov
ret
jno
add
add
sbb
rep
cmpsb
hlt
add
inc
pop
bnd
adc
or
mov
mov
in
pop
dec
pop
pushf
jge
dec
sbb
ffree
out
rclb
dec
push
ds
mov
mov
add
push
shlb
loop
int
movb
pop
imul
mov
push
jp
test
xchg
mov
sbb
xor
sarb
sbb
aam
scas
sub
imul
dec
lea
pop
addr16
ret
int3
jae
popf
xchg
into
sub
pushf
cmp
push
or
rcr
sub
xor
in
xor
adc
adc
lods
cmp
aad
and
int3
pop
pop
jno
jmp
daa
icebp
jne
cmp
test
bound
imul
mov
in
stos
jne
aam
jl
dec
sahf
sub
out
add
aad
dec
mov
into
pushf
dec
into
std
lea
push
jo,pt
dec
fwait
xor
cs
mov
movsl
scas
add
and
add
ret
out
jmp
add
jecxz
sub
mov
mov
addr16
idiv
xor
ljmp
mov
mov
xchg
aad
adc
rcrb
icebp
insb
test
sbb
jg
sbb
test
cltd
xchg
xor
sub
and
aas
enter
jle
or
rorl
mov
unpckhps
ja
add
jecxz
iret
jp
xor
gs
dec
addr16
sub
adc
jb
dec
add
mov
inc
ror
jnp
push
pushf
ficomps
testl
int
nop
cs
jmp
xor
adc
cmp
xchg
add
jb
sbb
sbb
call
pop
out
mov
push
test
xor
iret
and
jo
mov
dec
push
stc
xorl
push
inc
push
daa
movsl
or
pop
test
mov
mov
mov
out
mov
pushl
mov
add
leave
mov
add
cld
clc
sahf
and
insl
mov
insl
lea
jge
sub
inc
fwait
and
cmc
jnp
xor
fs
mov
inc
cli
sub
fisubs
cmp
mov
xchg
loop
in
test
lods
fldcw
and
mov
in
popa
dec
inc
lret
mov
das
bound
xor
adc
ds
scas
jmp
in
push
aaa
or
in
test
aam
pusha
push
add
loopne
stos
mov
sbb
notb
inc
int3
cwtl
inc
and
jecxz
pop
cmc
shrb
rcrb
dec
imul
popf
xchg
pop
ret
sar
pushf
ret
loopne
and
fs
and
out
adc
clc
ret
stos
xchg
jnp
or
stos
mov
or
jmp
or
mov
data16
enter
fimull
and
dec
xchg
dec
loop
ljmp
ja
and
out
mov
push
je
nop
insb
or
loope
jbe
ret
fildl
add
push
sbb
iret
mov
sub
jl
insb
inc
mov
gs
jbe
and
stc
in
dec
inc
inc
mov
inc
stos
outsl
pop
jnp
cli
leave
pop
inc
rorb
mov
or
mov
subl
call
xor
test
test
lret
cmp
enter
or
inc
and
insb
repz
push
inc
lods
fmulp
jae
rolb
and
shl
dec
movsl
xchg
outsb
or
mov
insb
adc
add
adc
pop
test
ret
cld
enter
out
add
push
mov
inc
fsts
call
mov
stc
jl
xchg
loop
mov
mov
sub
jno
hlt
enter
jl
push
push
cmc
push
sbbb
add
or
mov
mov
shlb
dec
dec
int
dec
enter
pop
jo
lods
and
lock
pop
sub
xchg
push
ja
mov
ss
ss
mov
push
or
pop
or
fcomp
dec
jl
add
dec
dec
test
jno
aas
jnp
gs
inc
das
add
ljmp
cmp
aaa
or
or
mov
mov
jmp
aas
in
push
xchg
call
stos
dec
mov
push
cmp
jnp
and
mov
cmp
mov
or
mov
dec
mov
push
icebp
or
test
test
ret
jns,pt
cmp
pusha
mov
addr16
cs
xchg
stos
mov
cmp
out
sbb
repz
mov
xchg
jg
mov
leave
out
subb
movsb
aas
insl
ds
xchg
in
adcb
cmp
mov
int
out
sbb
push
sti
loopne
cmc
shr
mov
lods
push
fs
ljmp
mov
xor
mov
push
movsb
ffree
sti
mov
js
loope
xchg
xchg
mov
out
leave
pop
bound
cmc
xchg
mov
or
icebp
inc
sub
bound
ret
das
lock
sbb
cld
xchg
jne
out
ret
aaa
cmp
jmp
inc
push
bound
mov
xchg
cmp
insl
xchg
in
ss
out
jg,pn
lret
pop
cli
pop
jle
mov
xlat
cmp
sbb
dec
ja
mov
popa
or
addb
cmp
sbb
pop
roll
push
jne
int3
and
pushl
in
pop
sub
push
mov
xlat
loopne
adc
mov
iret
insl
jbe
je
addr16
dec
mov
rclb
cmp
movsb
rol
dec
into
or
aad
mov
cmpsl
inc
je
adc
cltd
adc
loop
in
fstpt
mov
jne
xchg
xor
and
iret
mov
dec
ja,pn
lea
outsb
xchg
mov
push
scas
push
aam
inc
jbe
inc
addr16
les
stc
push
jbe
popa
cli
movsl
fmuls
sarl
sti
mov
inc
mov
mov
fiadds
xchg
cmp
push
adc
les
or
jmp
jecxz
pop
into
sbb
push
push
pop
add
aaa
mov
imul
into
je
lea
mov
iret
aaa
lds
and
shrl
inc
int3
lock
add
aad
inc
repz
test
dec
aad
insl
fstl
mov
movsb
out
sbb
mov
enter
jg,pt
adc
jnp
divb
sar
push
cmp
fisttpl
daa
dec
dec
push
add
push
rorl
test
mov
rcrl
int3
pop
xchg
pop
lds
cli
mov
mov
int3
gs
xchg
es
in
rcrl
ds
lock
data16
scas
int3
and
jmp
fnstcw
sub
mov
mov
jno
lret
icebp
cld
push
adc
sub
outsb
or
sbb
cmp
in
and
add
push
imul
test
es
es
popa
lds
and
dec
mov
js
call
jo
adc
xchg
lcall
popf
mov
add
cmp
sbb
xchg
test
sbb
cwtl
cmp
jmp
mov
in
or
sbb
and
aad
cmp
adc
loope
pop
mov
icebp
mov
push
sub
add
test
arpl
push
cmp
cwtl
enter
push
inc
movsl
test
cs
xor
movb
xchg
aad
mov
pop
iret
in
mov
or
mov
jmp
sub
mov
faddp
lret
cmp
hlt
jmp
xacquire
ja
jl
arpl
mov
sub
lds
int3
sbb
dec
adcl
sbb
cwtl
jp
jae
add
mov
push
mov
xchg
mov
sbb
cmp
mov
add
ljmp
paddusb
pop
or
sti
cltd
xor
add
scas
out
or
jae
lods
mov
jb
arpl
or
xorb
loop
mov
xchg
jne
cmp
xor
stos
lea
rorl
adc
ret
outsl
sub
pop
mov
imul
lds
pop
xor
push
add
jp
sub
insl
lcall
add
stc
cmpsb
push
outsb
movsb
mov
xor
pop
mov
inc
scas
lret
rorb
fcmovbe
and
shrb
jmp
inc
sbb
push
dec
mov
popf
stos
xor
es
lret
dec
stos
mov
xchg
inc
mov
ret
jg
and
loopne
lret
jae
std
cmp
or
bound
push
or
xchg
or
in
pop
push
scas
add
mov
lea
dec
ret
nop
sub
rcr
add
pop
fdivrs
mov
cmc
or
lods
sbb
aas
repz
add
ss
jno
push
adc
sti
mov
and
pop
jg
jne
cld
mov
jmp
xor
sahf
xchg
add
aaa
mov
cmp
jne
repnz
push
into
and
sub
repz
pop
lock
rcll
jae
or
mov
fiaddl
inc
lret
addr16
cld
xor
int3
popa
loopne
push
xchg
gs
shll
mov
leave
loope
lds
loope
sbb
push
roll
fsubr
test
addr16
sbb
jae
fsubrl
cwtl
lcall
fwait
sbb
jg
insl
dec
push
jp
xchg
push
rcl
popf
xor
scas
pop
and
fwait
mov
pop
mov
test
fdivr
cmpsl
andb
pop
xchg
pusha
loop
enter
insb
add
fildll
and
imul
insb
clc
xor
or
pop
jmp
ficoml
sbb
or
dec
cmpsl
or
xchg
push
and
inc
xchg
in
aam
lea
inc
dec
fldcw
add
shr
sarb
jbe
inc
add
mov
in
jno
dec
xor
fdivp
xor
xchg
mov
clc
xor
xchg
xor
sub
movsb
xchg
leave
inc
jo
and
sarb
mov
jno
fsubrs
push
pop
jge
mov
flds
xchg
or
cmp
and
mov
inc
dec
roll
sub
sbbb
fmuls
pop
push
cmpsb
dec
mov
mov
mov
sbb
inc
xchg
popf
test
lds
push
aas
dec
or
fldenv
sti
add
out
and
ss
movsb
mov
std
lods
push
jne
add
push
add
or
xor
fucomip
fiadds
roll
add
mul
xchg
jb
sub
cs
orps
cltd
jne
lea
jge
sahf
jne
cltd
sbb
xlat
sub
fs
arpl
add
and
mov
mov
ljmp
xor
add
out
stos
or
mov
lods
add
rcr
in
imulb
cmpsl
mov
dec
int3
mov
dec
inc
pop
insl
in
enter
out
push
loope
rcll
mov
mov
jo
inc
enter
or
dec
jg
addr16
lahf
xor
xor
shld
and
mov
rorb
push
add
inc
scas
push
dec
sub
inc
mov
sbb
mov
jle,pn
xchg
dec
mov
dec
mov
dec
scas
ret
cld
loopne
mov
mov
test
outsl
mov
rorl
add
jae
mov
mov
or
roll
xor
int3
aad
jbe
push
fcmovne
out
scas
insb
fwait
and
out
inc
pop
scas
add
pusha
mov
xchg
lret
clc
mov
mov
mov
mov
xlat
hlt
shl
arpl
lret
cmp
roll
add
sbb
mov
xchg
jno
cmp
push
cmp
xor
dec
leave
fdivl
ljmp
enter
dec
cltd
addl
pop
mov
push
inc
fcoml
inc
xchg
adc
lret
in
adc
shlb
and
fldcw
mov
jle
adc
xor
xchg
subb
cld
std
repnz
sbb
lret
sub
mov
idivl
jae
push
xor
daa
xchg
dec
push
push
cmp
xchg
mov
pop
bound
movsl
fimull
pop
and
fistps
into
push
mov
clc
dec
outsb
mov
andb
sbb
mov
sbb
pushf
es
lods
inc
mov
mov
and
stc
cmp
negl
jp
pusha
cmp
ds
or
mov
push
cmp
mov
adc
addb
inc
vmread
into
mov
incb
or
mov
sub
and
cmpsb
cwtl
mov
pop
sbb
or
cmc
mov
in
push
mov
sbb
fiaddl
scas
inc
rorl
mov
leave
push
xlat
mov
sti
cmpsl
cld
ror
fiaddl
adc
rorl
iret
icebp
test
test
mov
fidivrs
push
lea
mov
adc
movsl
xchg
and
std
hlt
mov
xlat
xchg
inc
mov
imul
and
mov
test
enter
sbb
jmp
inc
in
test
inc
mov
loop
xor
adcl
popf
movsb
test
ret
fs
scas
call
pop
fsubr
sarb
sbb
popf
imul
jge
jmp
popa
mov
bound
cmp
pusha
xchg
shrl
dec
sti
dec
push
fsts
addr16
adc
cs
jmp
popf
mov
mov
cmp
pop
jmp
push
pop
mov
pop
js
cmp
push
mov
mov
push
mov
cmp
push
mov
push
push
ficoml
cld
or
push
sub
jns
sub
or
int
insl
in
sbb
subl
cwtl
or
popf
inc
dec
mov
add
stc
push
lret
cwtl
fs
ljmp
mov
inc
mov
mov
loopne
mov
mov
xchg
cmc
dec
inc
sbb
imul
jecxz
and
jae
mov
not
and
nop
mov
aas
lret
int
inc
test
fstpl
popa
pushf
mov
arpl
repz
data16
dec
mov
or
outsb
test
lds
movsl
sub
jno
stos
mov
cmp
or
mov
ret
push
out
test
dec
adc
insl
xchg
mov
jno
dec
inc
movsb
outsl
loope
lds
and
imul
push
fisubrs
and
dec
addl
sbb
insb
clc
bound
or
and
adc
xchg
loop
mov
cmp
mov
test
add
sub
xorl
hlt
sub
dec
test
jne
shll
xchg
and
fidivs
jg
shrl
mov
xor
pop
lcall
fisubrs
inc
and
pop
insb
sbb
fstp
cmp
cmp
ja
lds
pop
fs
push
or
pop
mov
cmp
dec
js
in
sbb
repz
shl
adc
jno
enter
in
ljmp
and
mov
imul
mov
ljmp
dec
cltd
mov
mov
lea
xchg
push
idivl
adcl
push
push
cli
pop
cli
ret
xchg
and
fnstenv
pusha
stos
xchg
push
fwait
or
mov
pop
jp
and
sbb
mov
xchg
sti
int
fiaddl
jnp
leave
test
mov
movb
adc
xchg
xor
sub
fs
pop
xchg
bound
jno
sbb
inc
jnp
inc
jbe
imul
xchg
lret
mov
cmp
inc
dec
push
adc
pop
out
mov
in
ja
ds
pop
push
lds
xor
sbb
mov
insb
das
adc
xchg
xor
adcl
mov
shl
pop
out
fiadds
sbb
sub
fdivr
dec
aad
repnz
lds
pop
sbb
lods
inc
push
cmp
sbb
inc
out
or
ficoml
jno
jb
xlat
aas
imul
lea
push
les
call
ja
mov
fsubr
xchg
popf
ficomps
sub
mov
dec
popa
iret
and
aam
mov
and
push
aam
pop
xlat
xor
je
xchg
out
lods
or
mulb
pop
aaa
cmp
xchg
shll
or
call
push
dec
pusha
imul
inc
jns
sbb
cmp
out
mov
mov
sbb
lahf
pop
jmp
and
insb
popa
ficomps
rorl
sbb
mov
fs
mov
insb
adc
push
sbb
dec
mov
mov
std
mov
push
or
adc
ret
out
repz
pop
stos
sarl
sbb
pop
and
adc
enter
stc
les
fwait
shl
jmp
sbb
cmp
jne
sub
dec
or
jge
mov
xchg
sbb
imul
in
pop
add
in
or
popa
adcl
fwait
cmp
push
add
pop
jp
jne
hlt
data16
out
ret
dec
fs
cwtl
jge
popa
pop
mov
inc
enter
jns
sub
loop
or
jecxz
repnz
cmp
jge
jbe
pop
and
lock
in
call
hlt
push
sub
push
lret
or
adc
sahf
add
sbb
cld
xor
sbbb
or
mov
out
add
jge
sbb
mov
rorb
add
jge
popf
lretw
aaa
mov
std
xchg
and
sub
pop
mov
mov
sub
lock
pop
ja
xchg
aam
add
into
dec
jl
add
adc
jns
stos
mov
sbb
sbb
xchg
jns
outsl
je
and
int
lea
in
daa
test
call
shll
cmp
adc
pusha
aaa
and
mov
mov
scas
mov
adc
sarl
or
push
sub
out
adc
cmp
mov
enterw
leave
pushf
ds
cmp
jl
mov
cmp
in
xchg
cltd
lods
xor
pusha
mov
mov
xchg
jecxz
jbe
push
dec
movsb
addr16
push
sub
jg
and
std
or
jns
inc
fsubrs
adc
cli
jle
fidivl
dec
or
pop
sbb
sbb
test
fs
adc
popf
popf
mov
pop
enter
sbb
fisubrs
test
adc
insl
pop
stc
sub
inc
ljmp
sub
jmp
in
shlb
aaa
js
cmove
pushfw
jae
popf
pop
push
mov
xor
dec
and
sbbl
mov
mov
push
movl
pop
xchg
add
lea
jb
test
cmc
cmp
out
gs
addb
inc
dec
push
and
sub
mov
push
shlb
popa
jp
jno
mov
scas
mov
out
pop
and
aad
push
cld
enter
and
in
aas
xlat
pop
cmp
mov
das
andb
adc
lods
or
pop
out
sbb
aaa
xchg
push
fistps
inc
dec
imulb
cmp
add
fcomps
fs
jge
cld
xor
mov
sub
sbb
fsubs
lds
enter
bound
ss
sahf
out
int
pop
int3
pop
mov
hlt
mov
aad
lahf
pop
lock
std
push
pop
jp
or
std
enter
aaa
or
stos
das
es
cs
cmp
push
addl
cmpsb
mov
decl
mov
fidivs
cmp
push
test
xchg
out
repnz
push
cmp
outsb
std
aam
jnp
jecxz
cmp
gs
xor
dec
cmpb
enter
out
cmpsb
inc
xor
inc
adc
or
dec
scas
jg
aad
hlt
jne
dec
adc
popa
mov
dec
out
push
mov
insb
in
push
adc
and
or
sub
test
ret
adc
push
cmpsl
xchg
leave
sub
orb
stos
inc
jae
jg
arpl
or
out
jb
inc
rorl
out
push
cmp
sub
ficomps
stc
je
xor
add
xor
fs
adc
fdivs
mov
and
sub
enter
mov
stos
out
xchg
sub
jbe
cmpl
jecxz
jb
stos
push
push
mov
xchg
inc
outsl
mov
lret
aas
scas
xchg
add
xchg
push
push
test
hlt
in
loope
sbb
es
mov
ret
not
neg
bound
push
jp
or
test
cli
xor
add
and
lret
lret
test
stc
outsl
jo
and
sbb
nop
or
xor
mov
adc
lahf
add
flds
repz
pop
adc
arpl
mov
pusha
push
or
ret
sbb
jbe
test
ds
pusha
cmc
stc
mov
ret
mov
dec
push
lea
int3
mov
sub
rol
aad
scas
mov
orl
int3
jg
push
mov
xor
sbb
shll
pushf
dec
sub
fisttpll
call
addr16
movb
icebp
xchg
dec
xchg
in
imul
mov
push
push
cmp
mov
sarl
je
pop
test
xor
or
lcall
sub
adc
xchg
xchg
cmpsl
inc
mov
sbb
push
shl
and
mov
lret
jno
sbb
dec
xchg
mov
dec
mov
ret
mov
aam
xchg
push
push
mov
push
xchg
push
add
std
xchg
inc
imul
push
sub
push
sbb
ret
pop
sahf
mov
mov
cmp
inc
lahf
pop
xor
fnstsw
lret
orb
mov
in
pop
pop
inc
repnz
arpl
cmc
adc
or
xor
in
xchg
sbb
sbb
cltd
call
and
pop
pop
frstor
add
test
ret
loopne
add
mov
push
mov
and
les
sti
data16
mov
pop
outsb
hlt
jp
jbe
hlt
and
shrl
js
inc
add
dec
jge
mov
cwtl
or
clc
pop
insb
adc
outsb
adc
jp
sbb
sahf
subl
popf
push
cmp
imul
dec
stos
xlat
cmp
inc
ret
dec
jmp
outsb
sbb
movsl
push
lret
pusha
aaa
arpl
mov
push
xor
push
out
push
nop
shlb
sub
jae
ret
mov
out
push
or
xchg
addr16
inc
pop
xchg
dec
test
or
fs
pop
imul
pop
repz
jmp
xchg
arpl
xchg
insb
jae
jg
mov
psraw
add
into
mov
pop
pushfw
out
js
mov
cmpsl
bnd
add
inc
stos
push
sbb
call
jbe
xchg
push
sub
add
xchg
push
mov
sti
mov
xchg
fsts
adc
jno
ret
jae
into
aam
sub
jecxz
ret
adc
push
mov
and
pop
dec
mov
or
stos
jmp
sub
xor
aad
ss
dec
aam
pop
mov
rclb
inc
ja
push
xor
popa
daa
xchg
cmp
push
cwtl
rclb
inc
ds
shll
addr16
fwait
out
mov
sbb
dec
std
sub
adc
xor
cld
xor
test
inc
rorb
stos
xor
in
sub
pop
lods
push
pop
pop
dec
mov
and
sub
in
pusha
aas
cmpsb
lds
cwtl
cld
pop
sub
dec
pop
jl
add
mov
pop
loop
shll
xor
mov
dec
sub
cmc
out
push
notb
sub
iret
mov
mov
loopne
scas
cmp
xchg
mov
push
mov
in
arpl
adc
mov
fmull
adc
repnz
xor
mov
xlat
mov
sub
add
das
dec
mov
adc
shll
xor
sub
rcrl
jl
add
lods
pop
sar
sbb
sbb
in
cmp
fwait
movsl
and
xor
xor
inc
test
sub
sub
xlat
shl
mov
fwait
imul
je
pop
cmp
fs
or
popf
inc
add
pop
lods
pop
xchg
gs
and
test
pop
inc
sub
lods
mov
lods
and
lds
test
aam
add
enter
add
nop
xchg
xor
das
decb
mov
ret
test
push
mulps
lds
mov
inc
popa
lea
push
adc
ljmp
sbb
sub
in
dec
ljmp
mov
xor
fmulp
inc
xchg
pop
and
scas
sub
push
mov
aam
pop
insb
in
xor
leave
addl
test
fdivrl
inc
ss
insl
xchg
fcompl
ret
cmpsl
insl
dec
das
loope
cwtl
sahf
inc
out
jmp
cmp
cmc
pop
iret
push
jg
dec
enter
sbbl
stos
and
pop
stos
push
lret
mov
mov
out
sti
loope
sbb
add
push
or
test
rcrb
xchg
sbb
sub
push
add
cmp
add
add
push
daa
and
test
in
mov
pop
xor
sub
leave
sbb
ficoml
sbb
push
fildl
pop
stos
nop
adc
popa
rcrb
jae
bound
fisttpl
addr16
adc
les
shl
dec
paddb
pop
jne
lret
mov
xchg
push
jg
push
cmp
pop
in
bound
inc
jbe
inc
lcall
and
cmpsb
rcll
pushf
push
or
cmpsb
nop
mov
pushl
scas
mov
movl
sub
push
adc
or
push
aaa
inc
push
addl
or
repnz
loope
mov
inc
sub
jbe
mov
ret
jmp
mov
pop
sub
jns
cmp
mov
jge
xor
stos
lods
and
ds
sub
lods
pop
push
pop
fidivrs
pop
lods
dec
mov
fistl
cwtl
jmp
add
fs
and
out
ljmp
loop
or
pushf
or
pop
fiadds
and
push
int
xor
mov
jnp
lods
clc
call
inc
les
jmp
ds
lcall
inc
sahf
iret
push
inc
in
jmp
leave
mov
shrb
xor
mov
popf
int
rcr
mov
stc
stos
cmp
jno
mov
sti
fists
call
cmp
sub
add
mov
mov
enter
pop
xor
insl
jo
loopne
rclb
dec
jns
mov
shlb
mov
push
mov
or
xlat
imul
mov
popa
push
pop
ret
xchg
in
lods
inc
xor
dec
jp
dec
repnz
inc
dec
popa
divps
in
inc
jecxz
dec
xor
mov
pusha
inc
xchg
aaa
jmp
cmovp
and
and
add
arpl
nop
movsb
jns
repnz
inc
xchg
imul
pop
popf
mov
insb
dec
dec
fimull
icebp
js
cmp
xchg
std
fst
mov
jge
lret
jmp
loope
scas
inc
aas
inc
aam
sub
lret
xor
aaa
icebp
jbe
fcom
jmp
xor
mov
in
sti
fs
xchg
minps
pusha
out
cmc
xchg
out
push
sbb
jle
sti
xchg
imul
inc
push
pop
out
popa
push
jae
xchg
enter
cmpsl
mov
daa
clc
mov
pusha
lahf
or
mov
jge
in
cmp
cmc
mov
mov
imul
sub
ret
sub
icebp
push
enter
mov
push
xchg
jecxz
rorb
popf
pop
xchg
push
and
push
loop
adc
int3
fistps
aad
mov
jge
xchg
andb
fs
js
mov
loop
repnz
negb
mov
push
addr16
fdivs
mov
cs
bound
int
push
fisttpll
sub
popa
pop
rcrl
jae
test
push
inc
ljmp
cmp
cld
dec
inc
adc
jmp
mov
shll
test
jl
data16
inc
mov
pop
movb
rolb
pop
adc
in
ficompl
mov
mov
mov
insl
scas
scas
inc
leave
scas
ret
sbbw
aaa
gs
push
mov
adc
fs
dec
aam
add
cmpsb
or
gs
inc
and
filds
into
jae
adc
int3
or
arpl
icebp
push
lcall
pop
adc
je
pusha
cmp
je
pop
ret
sbb
dec
adc
lahf
nop
andb
fldl
push
out
mov
pop
inc
mov
xor
imul
lahf
jge
xchg
push
dec
fdivrl
sbbl
add
dec
arpl
outsl
lock
xchg
dec
jbe
mov
rol
xchg
mov
pop
inc
dec
shlb
mov
fdivs
xor
loop
inc
repnz
data16
rcll
or
out
std
aam
push
scas
sti
fsub
adc
xchg
push
test
and
sub
sar
sbb
pop
or
lods
mov
call
adc
js
inc
push
pop
insb
shl
pusha
rcl
out
ds
in
pop
lret
int3
jge
push
scas
push
mov
cwtl
lods
cmp
lret
outsl
sbb
or
xorl
stos
mov
sbb
inc
sub
sub
lock
cmpsb
pop
push
idivb
jo
pop
mov
imul
repnz
fwait
ret
dec
mov
sbb
cmp
jne
jle
mov
in
mov
test
test
sub
or
push
pop
stc
fcom
dec
pop
sub
into
pushf
fdivr
into
decl
les
mov
mov
fidivs
stc
push
jne
mov
out
out
jp
into
sbb
loop
inc
es
or
push
hlt
out
icebp
mov
ljmp
jae
jg
sti
ret
scas
sar
jbe
pop
movsl
mov
dec
lock
xchg
dec
sbb
ret
xchg
enter
arpl
mov
push
into
inc
enter
pop
mov
dec
and
out
push
rep
cwtl
jnp
sbb
sbb
les
pop
pop
push
enter
add
or
lahf
sahf
in
pop
jns
push
std
movsl
inc
mov
ss
mov
mov
push
out
cmp
jmp
mov
pop
xchg
push
ljmp
mov
dec
add
pusha
stos
jb
mov
imul
test
add
loop
mov
pop
mov
mov
aad
jne
jp
imul
testb
dec
sbb
ja
pop
inc
cs
nop
rcll
sub
adc
dec
mov
sarl
pop
xor
mov
mov
aam
push
pop
loopne
cli
les
add
or
shll
sbb
xrelease
bound
ret
jl
adcl
mov
sub
jnp
pop
push
pop
dec
mov
mov
pop
call
dec
aas
sub
cmp
mov
xchg
mov
jecxz
jmp
jl
je
pop
lock
pop
insb
popa
es
add
in
sub
in
xchg
mov
cmp
xchg
push
mov
gs
adc
ret
int
inc
outsb
std
sbb
mov
insl
jge
movsb
and
or
dec
mov
cs
cmp
or
filds
arpl
imul
mov
mov
pop
mov
sub
jne
gs
jp
out
popa
and
and
shll
pop
popf
push
sub
pusha
mov
repz
out
pop
sti
mov
pop
sbb
out
pop
sub
mov
adc
sbb
adc
movsb
xchg
add
shl
fs
hlt
lock
or
pusha
and
push
aad
push
das
andb
outsb
test
je
or
lds
outsb
pusha
xchg
jns
or
out
loope
mov
movsl
popa
fwait
mov
fcompl
std
or
pop
add
dec
repnz
cmp
adc
xor
adc
xor
sbb
mov
pop
lock
cmp
mov
movsl
out
lods
push
out
sahf
mov
jae
inc
cli
dec
out
push
cltd
ss
ds
in
test
push
scas
xor
cld
xchg
scas
mov
pop
test
roll
mov
mov
dec
cmp
xor
fcmovnb
xor
fcmovu
pop
shl
xor
mov
sbb
inc
xor
lret
hlt
imul
mov
cmp
rcrb
sbb
push
xchg
pushf
push
mov
shl
stc
xlat
cli
or
pop
or
shlb
addl
ss
mov
lret
sahf
adc
push
push
setae
or
push
inc
add
jo
bound
imul
loop
add
or
insl
push
mov
mov
fmulp
push
jns
mov
mov
je
aaa
sub
js
or
out
xchg
add
arpl
movsl
daa
jno
jb
int3
cld
stos
mov
and
push
cmc
cmp
fwait
adc
xrelease
push
inc
cmp
mov
adc
int3
popf
push
mov
rol
mov
bound
imul
or
icebp
dec
repz
out
push
rorl
aad
xchg
das
sub
cmpsl
or
xchg
pop
ret
xor
lret
mov
icebp
pop
pop
mov
push
sub
push
add
jl
jno
mov
jg
sub
ficoms
xor
dec
sahf
add
push
inc
xor
aad
lea
pop
das
clc
xchg
sub
mov
cwtl
inc
ffree
aam
lret
sub
adc
jmp
push
addr16
daa
adc
push
sub
cmpsb
pop
lea
mov
sbb
sbb
imul
dec
dec
stos
in
or
cmpsl
imul
cltd
aad
jns
loope
mov
sar
jle
dec
mov
dec
add
incl
loopne
jl
gs
dec
das
inc
cltd
dec
leave
shl
xchg
sub
sub
negl
mov
push
loop
pop
mov
out
ret
dec
inc
bound
lods
xchg
jecxz
das
jnp
push
and
cmp
scas
loop
sub
ret
shrl
lret
pop
inc
dec
mov
sahf
ljmp
shll
out
jge
mov
sub
inc
xchg
loope
bound
dec
sbb
pop
hlt
xor
pop
sbb
insl
icebp
dec
or
xorb
inc
iret
inc
ljmp
popa
cmp
out
int3
sti
adc
push
cmp
inc
and
pop
push
outsb
jnp
mov
sub
add
mov
push
push
shrl
mov
push
jle
dec
push
jnp
jbe
mov
push
dec
clc
pop
mov
imul
jbe
or
movsl
jg
dec
mov
cmp
dec
dec
cmpsb
mov
nop
cmc
sub
in
xlat
clc
jmp
fdivl
mov
lods
mov
ret
movsl
jns
mov
jle
mov
push
test
aam
cmpsl
add
jo
pop
cs
sub
mov
dec
or
push
mov
ret
cld
fs
inc
add
mov
ja
mov
xchg
jns
or
test
push
pop
xor
sbb
data16
repnz
mov
jge
pop
mov
sahf
add
lret
xchg
daa
pop
xor
pop
lods
hlt
cmp
ss
mov
mov
clc
imul
gs
in
adc
rcrl
cltd
sbb
cli
cmp
sbbl
inc
add
xor
sbb
rcrl
aas
cmpsl
add
jp
xchg
mov
jnp
inc
and
out
in
inc
mov
lods
mov
outsb
xlat
dec
addl
and
sub
setno
sbb
adc
mov
mov
mov
fdivp
movsl
arpl
inc
xor
mov
call
push
adc
sbb
xchg
mov
adcb
dec
xor
in
push
jmp
jae
mov
lahf
mov
outsb
cmp
jle
icebp
mov
shrb
ds
in
adc
sub
fs
fcmovnb
mov
cmp
jle
ret
movsb
lcall
out
rcrb
test
add
adc
add
aad
cltd
scas
xor
fs
lds
jl
mov
loop
stos
push
jecxz
inc
and
mov
ficomps
inc
and
push
out
or
adc
loopne
cmp
inc
jmp
mov
test
insl
ret
ljmp
ret
addr16
int3
add
push
and
mov
cmpsl
and
sahf
push
scas
mov
sbb
xchg
push
lods
fwait
inc
movsb
scas
add
push
pop
ss
add
pop
cltd
aam
pop
xor
lds
or
loopne
scas
sub
mov
fisttpll
imul
aad
adc
out
adc
and
pop
rorb
adc
xchg
leave
fidivrl
sbb
jbe
call
fisubrl
push
mov
daa
mov
push
dec
dec
lret
and
loopne
in
imul
enter
pop
cmpsl
sbbl
hlt
dec
push
icebp
adc
jg
mov
xor
xchg
daa
sub
shll
xchg
add
sub
push
mov
nop
and
mov
or
movsb
sub
clc
xor
jg
mov
jmp
lret
in
add
xor
insl
addl
test
push
nop
cltd
mov
jns
xor
addr16
sub
or
inc
pop
jg
mov
push
mov
xchg
sti
jns
push
aas
jb
mov
ljmp
mov
pop
mov
add
inc
or
fldt
adc
movsb
xchg
cmp
push
lods
pop
and
push
in
aad
fisubs
jae
mov
mov
mov
aas
xchg
bswap
sbb
fsubrl
mov
sub
lock
out
mov
mov
lret
push
out
lea
or
mov
cmp
retw
mov
mov
add
sbb
sahf
lods
int3
and
push
sbb
xorps
scas
pop
pushl
push
fimuls
in
mov
sahf
std
sub
or
lret
adc
mov
jns
pop
divb
fisubs
pusha
cli
arpl
adc
sbb
mov
jb
jne
fs
movl
daa
loopne
sbb
cli
and
and
and
fs
sub
sub
sti
mov
jb
ret
pop
in
mov
sbb
and
gs
pop
push
lret
xor
mov
xchg
and
mov
push
sahf
or
mov
sarl
mov
std
mov
mov
mov
xchg
jp
sub
stc
cmp
inc
adc
imulb
push
jl
scas
sub
lods
jmp
adc
in
jno
clc
in
mov
jl
mov
sbb
pop
pushf
test
out
bound
xchg
xchg
mov
jnp
adc
or
test
pop
loope
xchg
dec
sub
sahf
mov
enter
cmp
push
bound
push
push
mov
imul
xor
fdivrp
fldcw
cld
jnp
fdivrs
or
inc
mov
jp
pop
push
adc
jp
lods
fisubl
mov
hlt
sub
adc
gs
shlb
add
jo
xor
pusha
pop
enter
nop
lods
sbb
pop
mov
mov
test
imul
daa
les
lds
or
imul
lret
xor
xchg
sbb
in
es
xor
mov
dec
sbb
repnz
mov
push
test
int3
add
push
ret
mov
call
ja
adc
or
jl
mov
xchg
xor
xor
cmpsb
testl
add
xor
mov
das
pop
push
or
or
dec
mov
fs
sbb
int3
ret
push
adc
pushf
aad
aam
mov
gs
iret
adc
xchg
pusha
clc
push
insb
and
mov
cmp
jne
add
xchg
adc
popa
cmp
sbb
insl
inc
lcall
stos
inc
or
dec
rcrb
mov
cmp
data16
xor
dec
dec
popf
insl
sub
cs
addl
and
and
push
or
sbb
cli
or
mov
jb
jno
add
rclb
mov
das
sub
mov
shrl
or
inc
arpl
xor
popa
je
out
or
mov
jo
push
lea
inc
lahf
pop
xchg
je
sti
sbb
mov
pop
jns
out
fnsave
je
dec
dec
scas
gs
call
pop
mov
pop
pushf
adc
aas
gs
mov
pop
and
jmp
and
lret
inc
popf
popa
test
or
and
pop
xchg
mov
ss
hlt
add
cmp
ja
add
add
or
es
nop
rclb
mov
adc
ja
mov
loop
mov
fs
mov
jmp
mov
std
cmp
stc
lea
inc
repnz
lea
ret
mov
mov
loop
ljmp
jp
mov
push
jne
stos
lea
dec
loop
pop
pop
mov
fs
out
add
mov
outsb
leave
fdivrl
xorb
sbb
xchg
mov
mov
jns
stc
inc
adc
dec
jl
dec
lret
cmpsl
test
inc
shrb
outsb
ss
int
repz
or
pusha
cwtl
shrb
pop
adc
adc
stc
fnstenv
outsb
xlat
out
fs
loopne
dec
das
sub
push
sub
call
rorl
jne
iret
jae
insl
adc
pop
testb
idivl
popf
and
lods
inc
outsl
lret
mov
insl
lahf
fildll
outsl
cli
jecxz
lret
push
jbe,pt
int3
imul
mov
xor
divl
rorl
xchg
popf
mov
ret
cmp
out
ss
and
adc
sub
push
shll
into
or
mov
and
cmpsl
test
push
gs
push
lahf
or
out
mov
add
sub
pop
jmp
iret
and
inc
sbb
subb
rcl
std
mov
push
jg
daa
out
mov
jle
sub
hlt
dec
mov
or
out
outsl
movsl
pop
loop
mov
hlt
jge
xor
pop
in
push
popf
and
iret
loopne
pop
mov
xchg
inc
call
icebp
repnz
adc
xor
mov
in
lret
std
pusha
pop
add
outsb
push
jmp
dec
adc
cmp
ss
in
mov
js
or
xchg
mov
mov
jns
mov
hlt
les
das
rorl
push
fstpt
imul
pop
dec
sub
les
je
inc
notl
inc
cmp
jno
loopne
shlb
mov
dec
shl
dec
inc
push
fnstsw
repnz
mov
push
push
sbb
jns
gs
mov
push
dec
bound
push
into
or
orb
xchg
lock
lcall
jecxz
add
add
popf
xor
mov
test
cltd
cmc
notl
ret
jne
cwtl
cmpsl
adc
jbe
out
pop
jle
aas
jnp
sub
cmpb
faddl
or
xor
push
fsubrp
pusha
aas
sbb
pop
out
in
sub
clc
test
cs
imulb
rcpps
inc
aad
arpl
ss
mov
addr16
fidivrs
cmp
mov
int
out
sti
lret
addb
push
inc
stos
punpckhdq
push
addr16
xor
fsubrs
cmp
or
mov
stos
dec
push
and
cmp
jmp
and
repnz
or
movsl
enter
out
mov
ss
fistl
and
fs
inc
inc
dec
cmp
inc
movsl
push
mov
adc
sarb
add
lret
push
push
mov
pop
adc
and
frstor
and
psrad
rcrb
mov
outsl
movsl
leave
daa
int3
ljmp
jmp
adc
push
or
and
and
into
scas
addr16
lahf
jno
rorb
jno
jge
xlat
adc
mov
sub
divl
pop
je
lahf
leave
cli
iret
push
xchg
xor
mov
xchg
push
lcall
inc
mov
push
lahf
movsl
fldt
xchg
sub
xchg
cli
mov
imul
dec
loopne
dec
popf
sahf
rol
rcrl
mov
es
xchg
dec
imul
aad
ficomps
or
adc
inc
push
and
insl
loopne
or
int3
lret
js
je
mov
fs
rorb
inc
pusha
pop
mov
mov
dec
mov
mov
fsubs
xchg
movd
add
or
loop
sub
sub
fcmove
loop
mov
dec
inc
repnz
in
sub
ret
stos
mov
sub
enter
lret
daa
jge
sub
cmp
cmc
dec
stos
cmp
inc
pop
mov
sub
popa
cmp
int3
jb
out
add
loopne
mov
pop
lahf
out
stos
arpl
lret
loopne
adc
jne
andl
dec
aaa
fisttps
mov
pop
add
jo
std
push
ret
lret
cmpsl
stos
adc
fnstenv
cmp
sbb
mov
add
aam
jp
jnp
sub
add
push
cwtl
movsb
shlb
rcrl
mov
xlat
std
lret
pop
fs
div
lcall
rclb
iret
sub
dec
mov
adc
jl
pop
xor
dec
lea
in
and
imul
loope
fsubs
dec
daa
hlt
adc
daa
scas
push
jecxz
pop
cwtl
mov
mov
testl
loop
pop
sub
xchg
inc
lret
push
inc
sbb
mov
xchg
pop
aam
cmpb
mov
leave
mov
aas
mov
mov
divl
ret
pop
sub
cmc
or
aaa
in
push
ljmp
fists
sub
stos
cltd
fsubrl
std
adc
leave
cmpsb
repnz
bound
test
popa
pushf
mov
fidivs
xor
fpatan
xor
repnz
xchg
out
add
inc
pop
hlt
ds
pop
stos
push
enter
mov
pop
sub
or
mov
dec
mov
scas
dec
sub
fdivl
push
sbb
leave
ljmp
out
sbb
mov
inc
push
xor
insb
out
jb
push
cmc
or
add
push
xchg
fmuls
inc
rorb
test
ja
fwait
xor
or
sub
sub
in
ret
lcall
repnz
fimull
dec
imul
sarb
into
xchg
rep
pop
push
imul
mov
decb
int3
dec
stc
hlt
mov
jl
imul
fiaddl
fsts
jp
cli
dec
jmp
cmp
faddl
jg
shll
test
hlt
test
insl
xchg
inc
pop
outsb
mov
dec
and
rorb
je
lret
adc
inc
pop
and
int
iret
add
or
lea
stos
scas
sub
ljmp
push
xlat
movsl
xchg
jnp
push
push
pop
iret
push
ret
inc
fidivrl
lret
xor
bound
popf
push
bnd
pop
aas
jge
sub
jmp
push
and
push
mov
xor
adc
jle
sub
mov
aam
aaa
mov
inc
xchg
mov
popa
fistpll
xchg
pop
and
cmp
pop
pop
sub
pop
xchg
dec
xor
cli
mulb
aaa
insb
xchg
int3
fisubrs
mov
repz
jns
rcrl
cmpsb
mov
cli
es
or
mov
jmp
xchg
imul
push
mov
sub
dec
mov
enter
lods
les
loopne
jo
enter
mov
gs
mov
leave
add
cmc
mov
and
test
and
cmp
add
adc
aad
aaa
mov
or
inc
jp
jecxz
popf
adcl
fidivs
sti
dec
sub
in
mov
push
mov
sub
fistps
bound
fld
int
lock
jge
in
xchg
dec
testl
xchg
loop
and
dec
and
lods
lahf
add
mov
mov
fildll
fcmove
aas
adc
push
xchg
xor
xchg
iret
insb
fimull
adc
add
es
imul
xchg
mov
mov
into
test
nop
lds
add
out
jne
lods
fdivs
xor
lock
cmpsl
fisttpll
lcall
lcall
subb
scas
cmp
sbb
loopne
fs
cltd
xchg
les
inc
adc
push
pop
imul
mov
test
aad
inc
sub
in
aas
xchg
mov
push
sub
xchg
push
lea
ret
scas
inc
sbb
andl
fdivrl
add
xor
lret
mov
lods
xchg
xchg
int
imul
pop
xor
pop
push
popa
popf
ja
xchg
aam
popf
push
sub
push
pop
mov
cmp
push
into
scas
jb
or
inc
sub
data16
loopne
or
popf
add
scas
add
pop
jp
movb
pop
mov
iret
in
jne
cli
inc
movsb
or
into
dec
mov
mov
pop
inc
addb
hlt
dec
popf
xor
mov
mov
inc
sbb
into
ljmp
inc
push
lods
adc
inc
dec
idivl
in
not
pushf
xor
loopne
out
nop
adc
outsl
enter
sti
adc
xchg
xor
cwtl
out
cmp
fildll
push
sub
xor
dec
scas
fmuls
or
es
ss
xchg
cmp
outsl
cltd
clc
mov
pop
in
outsb
out
xchg
fsubrs
lret
repz
mov
aam
xchg
jbe
add
mov
xor
mov
fisubl
or
popa
mov
xlat
cmp
out
or
xlat
aaa
inc
mov
push
addr16
jbe
xor
arpl
rorb
xor
test
xchg
gs
daa
daa
fdivrl
fsub
pusha
xor
daa
cmp
rolb
inc
test
and
fwait
imul
push
jecxz
out
push
inc
mov
lahf
pusha
jge
and
dec
mov
pop
xor
imul
or
dec
test
ss
idivb
mov
mov
test
xor
pop
jl
xor
xor
das
sar
mov
les
lods
sahf
jmp
mov
pushf
adc
mov
pop
mov
test
imull
xchg
push
jg
pop
dec
cmpsl
test
xchg
xchg
add
andl
cmp
ret
dec
lret
in
and
int
or
aam
or
in
or
pop
movsb
sbb
dec
iret
dec
outsl
adc
or
or
push
popa
add
roll
lahf
jno
dec
loop
jmp
jo
add
movsb
add
cs
dec
sub
and
or
xlat
enter
iret
aaa
jbe
outsl
mov
test
bound
sbb
jmp
sbb
fs
out
scas
test
mov
cld
gs
int3
sub
inc
sahf
das
and
jg
xchg
cmp
shll
or
add
addr16
mov
pop
mov
loop
jl
adcb
sar
mov
pop
xchg
sbb
lahf
mov
daa
scas
mov
mov
loopne
cmp
and
dec
sub
dec
inc
je
or
jae
arpl
pop
inc
lahf
xchg
add
mov
xor
adc
or
add
sub
xor
pop
iret
push
daa
push
mov
mov
in
and
out
andb
add
cmp
outsl
aas
add
adc
cmp
pop
sar
sarl
jns
sahf
test
xchg
daa
sbb
cmp
add
stc
adc
fwait
push
sub
xlat
xor
fisubrl
lret
xchg
repz
test
or
scas
ja
and
mov
xor
loop
or
faddl
divb
dec
lods
inc
fs
not
add
xchg
xlat
test
out
pop
xchg
mov
pop
dec
rcrb
pop
xchg
sbb
aam
jmp
andnps
push
fcoms
daa
sub
adc
push
mull
movsb
xchg
mov
mulb
int
push
mov
daa
cli
pop
ss
lea
push
sbb
bound
and
jno
jmp
xor
sqrtps
ret
bound
xor
ret
scas
xchg
test
pushf
mov
inc
push
out
mov
mov
sbb
push
cmc
and
mov
and
scas
je
dec
mov
jbe
sbb
dec
in
mov
inc
adc
push
or
and
jmp
sub
loop
lock
cltd
pop
push
inc
jp
lea
cltd
mov
or
jno
and
lea
nop
xor
in
clc
dec
nop
nop
xchg
and
out
es
repz
repz
xor
cs
bound
xchg
nop
popa
sub
inc
clc
in
mov
roll
and
push
loopne
repnz
jge
add
sub
repz
mov
xor
xchg
lds
movsb
fcomps
imul
hlt
jge
push
shll
xor
sbb
lret
ja
pop
jbe
inc
hlt
push
dec
dec
or
and
stos
aam
or
ljmp
jae
inc
mov
sti
es
out
fcoms
imull
xor
sub
push
jne
mov
mov
jne
sbb
sub
inc
jp
jb
dec
aad
out
lret
popa
aad
ja
int
jnp
mov
mov
fwait
xchg
push
pushf
stos
sbb
iret
fidivs
insb
movsb
mov
xor
xor
outsb
push
xchg
es
dec
cltd
lods
sbb
test
insb
and
call
repz
push
lret
and
test
adc
gs
inc
hlt
mov
cmp
adc
popa
push
cltd
clc
in
mov
or
faddl
cwtl
pop
xchg
stos
or
mov
inc
push
xor
inc
testl
mov
movsb
xor
jecxz
in
cmp
shrl
lds
cmpsb
mov
cmp
aaa
faddl
sbb
push
xor
dec
sub
push
lds
lahf
mov
xchg
xchg
out
sub
push
out
cmp
mov
out
mov
mov
aam
aam
and
bnd
arpl
mov
jg
xchg
lcall
int
mov
in
dec
mov
jmp
clc
sbb
loope
or
out
je
adc
sbb
jae
cmpl
mov
aam
jmp
push
jbe
lahf
stos
ds
push
and
dec
sbb
aas
cs
arpl
push
add
idivl
xchg
mov
insb
inc
sub
sub
mov
jno
inc
pop
fstpt
shll
inc
fcomi
cmp
xchg
retw
insb
mov
icebp
test
out
cli
cmpsl
pushf
repnz
mov
and
cmp
pop
adc
mov
dec
fcmovnbe
div
sub
xchg
sbb
and
dec
and
cmp
addr16
ja
mov
xchg
inc
mov
outsl
xchg
mov
and
repnz
jns
xchg
sbb
inc
pop
jecxz
jae
mov
inc
aaa
pop
cmpsl
mov
dec
mov
dec
mov
in
xor
dec
movsb
cs
pop
inc
mov
push
ds
cli
inc
pop
xchg
and
cmp
icebp
push
xlat
adc
out
jge
mov
fimuls
and
push
xor
insb
lret
es
sarb
sbb
jo
rcll
xor
mov
jae
test
xlat
or
movsb
mov
push
mov
scas
mulb
pusha
pop
xchg
xchg
daa
jbe
cmpsl
jge
jae
xor
shrb
mov
pop
pop
iret
inc
ficompl
aas
int3
push
jns
pushf
inc
pop
sbbb
icebp
cmpsb
lcall
and
into
stos
cmp
enter
xorl
or
mov
pop
sbb
aam
lock
mov
imul
iret
push
mov
xchg
fsubr
cmp
xor
or
pop
popf
add
inc
pop
out
push
add
dec
xchg
mov
fimull
pop
and
adc
jns
outsl
mov
sub
test
sbb
cli
xchg
xchg
aaa
daa
inc
inc
sbb
dec
popl
popf
mov
or
mov
mov
orl
mov
aad
daa
ja
fimuls
cmp
cmp
mov
cmp
add
push
pop
xchg
sbb
sub
cmp
push
push
inc
xchg
cmpsb
adc
sti
xor
jo
popf
stc
adcl
stc
loope
mov
loopne
nop
imul
in
outsb
xor
push
icebp
aas
fs
inc
adc
cmc
mov
into
icebp
test
test
adc
push
mov
push
sbbl
shlb
mov
mov
xchg
xor
jmp
test
push
out
mov
rcl
xchg
inc
push
iret
subl
and
push
add
shrl
repz
sub
idivl
inc
xor
ss
nop
mov
hlt
fistps
daa
mov
shrl
inc
dec
adc
push
push
mov
pop
scas
lret
xlat
xchg
and
mov
push
add
mov
dec
in
xor
int
inc
mov
mov
out
adcb
adc
lock
and
arpl
popf
arpl
jmp
out
cmp
out
xorb
mov
mov
scas
sub
rcl
push
dec
sti
push
ds
hlt
and
aam
gs
push
insl
jg
sub
aas
xor
stos
xor
arpl
rol
inc
lea
push
std
enter
pusha
inc
shrl
push
mulb
sbb
cmp
shlb
push
cmpsb
stc
mov
scas
cmp
jns
sbb
xor
loope
xchg
pop
cli
cmp
push
push
sub
out
or
pop
loope
xchg
into
cmp
mov
pop
rcl
incb
push
jmp
aaa
stc
aas
mov
pop
or
dec
dec
lret
out
xchg
inc
or
adc
sarl
sub
jmp
mov
jo
adc
fnstcw
mov
cmpsb
pop
xchg
ret
cltd
out
cwtl
xlat
lahf
pushf
mov
jl
adc
cli
push
jno
or
inc
push
fwait
into
jo
sub
sbb
inc
loope
lods
adc
mov
xor
sbbl
mov
mov
arpl
cmpsb
cmp
sbb
stos
push
lret
lds
ds
or
mov
movsl
sbb
xchg
scas
jle
incl
out
stos
in
add
sahf
sub
xchg
into
and
ds
xor
inc
dec
pop
imul
xchg
xlat
sbb
add
in
mov
add
stos
add
mov
inc
jmp
shll
iret
dec
mov
sub
rclb
and
jecxz
xchg
fsubrp
mov
xor
pop
ret
sub
cmp
push
mov
or
sub
adc
pop
jns
cwtl
js
pop
pop
pop
outsl
mov
sbb
lods
insl
cmc
daa
push
push
loopne
mov
mov
pop
imul
sub
mov
sarl
dec
or
mov
sti
shll
jp
pop
xor
xchg
mov
mov
fstpt
ljmp
call
jmp
mov
andl
add
shll
div
mov
xor
push
xchg
jmp
xor
popa
mov
push
sar
mov
adc
pop
pop
stos
push
fs
in
cmp
fucom
push
faddl
movsb
add
sbb
pop
jecxz
cld
and
jbe
mov
or
in
gs
js
ds
mov
xchg
cld
pop
cmpb
inc
push
pop
jmp
stos
or
call
insl
dec
add
inc
dec
mov
movsl
loopne
inc
scas
cmpsb
sub
jmp
mov
add
int3
push
les
pop
in
sub
adc
icebp
test
xchg
rol
lret
jae
xchg
adc
stos
cmp
dec
and
xor
and
test
movsl
mov
push
test
cmpsb
push
push
xor
sbb
out
pop
lcall
leave
xchg
cld
cld
fwait
jbe
cmpb
xchg
fldenv
or
into
das
sub
add
test
xchg
smsw
dec
dec
xchg
cmp
lcall
push
lcall
xchg
push
sbb
ret
mov
js
sbb
mov
add
jnp
call
sub
push
jp
add
mov
and
mov
xor
push
iret
cli
cmp
add
mov
add
ja
in
jns
pusha
cmp
pushl
add
nopl
sbb
xor
pop
sub
int3
ds
push
dec
xchg
add
mov
ror
fidivl
ficoms
ss
adc
push
icebp
aas
mov
dec
movsl
adc
testl
scas
inc
adc
shlb
jno
test
movsb
out
push
xchg
push
pop
stos
ljmp
lret
cmp
dec
adc
sub
xor
sbbb
jecxz
ljmp
sub
fadd
mov
inc
and
aam
sbb
mov
rclb
dec
pop
xchg
mov
sbb
push
ljmp
ret
push
push
stos
pop
dec
dec
cmp
das
js
mov
sub
arpl
pop
push
mov
dec
jge
jo
std
call
push
imul
rcrl
ret
sub
fidivs
int
push
pop
cmp
dec
or
dec
xchg
adc
ds
xchg
mov
stc
popf
adc
add
aad
xchg
inc
jno
sbb
test
test
daa
ja
adc
add
insb
call
sbb
add
cli
inc
dec
cmp
scas
push
sbb
les
std
movsl
jle
push
mov
fs
adc
outsb
xchg
cmc
fimull
xchg
adc
hlt
es
cmp
inc
cmp
lcall
inc
push
call
lahf
sti
or
andb
cs
rorb
sub
cwtl
jg
add
pop
inc
ja
inc
test
scas
sub
nop
dec
repz
xchg
push
mov
test
ret
leave
pop
aas
inc
cmpsl
test
rolb
push
fmull
inc
push
or
incl
mov
das
gs
push
jl
or
or
std
xor
cld
jae
and
sub
mov
test
xchg
push
add
sub
cmp
add
aaa
add
mov
out
loopne
popa
repz
lods
js
sti
jmp
adc
lods
jae
mov
push
jle
mov
shlb
stc
fs
push
cs
scas
xchg
sbb
mov
jne
sub
in
outsl
jno
and
cmp
lret
pop
repz
scas
xchg
push
in
fs
andl
dec
clc
mov
xor
push
sub
testb
cmp
mov
lds
push
jp
in
dec
pop
call
mov
or
fdivrp
dec
jge
inc
lods
push
icebp
fwait
aad
push
test
push
ss
xor
mov
adc
cmp
or
push
repz
dec
mov
sti
pushf
or
subb
dec
add
mov
clc
fwait
sbb
dec
lret
push
or
aam
or
test
addb
adc
mov
add
pop
mov
sti
mov
mov
pop
rorl
cmp
mov
cmp
rcl
aas
cmpl
mov
xchg
pop
in
test
popa
adc
outsl
pop
lret
movsl
pop
jg
inc
dec
nop
mov
adc
imul
stos
add
push
xchg
push
rorl
in
into
not
jno
push
std
rclb
mov
jmp
pop
ret
mov
push
aas
pop
dec
pop
ja
cmp
icebp
int3
out
aam
sbb
leave
aam
sbb
roll
mov
loopne
stc
aas
dec
ljmp
cmp
add
xor
lock
mov
lock
mov
mov
ja
shrl
dec
movsb
push
lcall
sbb
neg
sahf
dec
call
push
sbb
adc
mov
cmpsb
pop
pop
filds
out
loop
add
std
cmpsb
adc
jne
loope
pop
lret
add
cmpl
mov
sbb
insl
cmp
sahf
fdivl
cmpl
push
sbb
and
mov
jne
loop
insb
inc
pop
out
sbb
int3
and
jp
aam
jae
scas
ficomps
pushf
ret
jge
push
mov
push
gs
add
ficompl
aad
sbb
adc
xchg
jne
ret
inc
xchg
cltd
lods
repnz
mov
sub
ret
and
mov
repz
out
pop
in
bound
ficomps
sub
imul
stos
insb
imull
inc
jmp
push
movsb
aam
dec
insb
xor
out
std
xor
adc
sub
adc
shlb
pop
push
in
mov
dec
push
les
rolb
lods
and
cmp
test
mov
aaa
mov
ss
addl
cli
outsb
test
xor
loopne
cltd
dec
cmpb
sbb
jle
clc
xchg
push
mov
enter
fisubs
rorl
xchg
pop
and
in
je
frstor
clc
and
insl
push
std
push
jmp
xchg
sbb
pusha
sub
aad
lahf
sbb
or
mov
loopne
cmpb
add
push
fdivrs
pop
pop
test
pop
dec
test
push
int
xchg
mov
pop
xlat
sbb
xlat
enter
popf
add
jmp
ds
lcall
dec
and
orl
cli
sub
pop
or
call
cmp
jecxz
ja
and
sbbl
dec
fisubrs
out
mul
sbb
int3
sbb
dec
aaa
push
gs
or
cmp
test
fucomi
pop
lret
push
js
aam
or
push
lock
mov
dec
lods
jae
xchg
stos
dec
xor
add
addb
mov
bound
hlt
fistl
or
fistps
mov
jbe
lret
sbb
cli
inc
mov
mov
int3
in
mov
clc
or
lret
inc
lods
cmc
stc
leave
and
pushf
dec
std
imul
lea
add
push
jne
jle
xor
insb
inc
lds
inc
dec
and
imul
mov
push
mov
jns
adc
shll
inc
pushf
inc
dec
mov
sbb
mov
pop
add
mov
mov
rcrb
push
push
outsl
incl
pop
dec
fdivl
add
in
or
insb
mov
and
sub
add
gs
push
dec
arpl
repz
add
arpl
adc
lahf
adc
push
stos
fadds
test
out
mov
push
jb
adcb
jae
and
mov
out
pop
pop
out
sbb
dec
sub
and
pop
xor
rcrl
js
dec
pop
out
adc
sahf
mov
mov
enter
adc
rol
test
lret
jns
pop
push
cwtl
xchg
in
cmpsl
cmpsb
add
sbb
out
mov
mov
iret
cli
rclb
shlb
cmpsl
dec
add
pop
cld
out
mov
and
adc
imul
arpl
mov
addr16
sub
fstl
shlb
mov
and
loope
pop
gs
inc
incb
addl
sub
adc
xor
mov
mov
ret
or
lods
mov
cmpsl
int3
inc
sub
cmpsl
mov
jle
lret
imul
ljmp
fsqrt
pusha
pushfw
mov
scas
push
cmpsb
or
dec
out
mov
xor
jmp
pop
and
in
out
mov
xchg
fwait
mov
int3
notb
int3
cld
xor
push
xchg
cld
mov
and
je
mov
in
mov
add
and
mov
pop
pop
mov
inc
cltd
std
sub
iret
push
cmpsl
repz
mov
mov
or
fstps
js
mov
mov
push
dec
or
mov
mov
out
dec
cmp
inc
xor
mov
adc
mov
adc
roll
nop
cmc
aaa
out
and
shlb
test
in
loopne
push
jnp
ror
push
stc
lcall
lods
gs
pop
sbb
fmuls
out
sar
or
xchg
and
repnz
mov
inc
mov
mov
lret
lods
std
xchg
dec
cmp
push
push
imul
or
sti
mov
and
mov
push
test
in
xor
insb
std
stos
jg
mov
xchg
mov
adc
push
adcb
lods
std
addb
jb
shlb
push
and
pop
lcall
push
shl
mov
js
cli
pop
fildl
and
pusha
cwtl
mov
sub
and
call
cmpsb
repz
stc
adc
push
int3
mov
sbb
xlat
jmp
ficompl
insb
gs
jecxz
fidivrs
aad
mov
icebp
popa
mov
clc
jmp
mov
imul
xor
jl
shlb
icebp
sbb
sbb
xor
mov
and
scas
inc
jecxz
popf
repz
into
push
push
cmp
jp
call
sbb
add
scas
bound
cli
into
xor
mov
in
dec
out
pop
gs
jbe
adc
xchg
adc
jl
and
ret
lock
inc
out
mov
mov
and
inc
cmp
push
sub
push
or
sahf
js
inc
and
mov
lcall
call
add
pop
xchg
ss
inc
mov
pop
xor
sub
push
cmp
mov
fdivp
sbb
stos
mov
mov
insb
in
out
mov
sbb
int
and
xchg
int3
test
faddp
daa
cltd
mov
sub
out
dec
ljmp
push
inc
mov
push
enter
call
imul
pop
jle
inc
or
fisubrs
pop
mov
test
pop
push
mov
fisubrl
push
lods
iret
loop
push
inc
roll
dec
add
mov
or
sbb
and
cmc
sbb
popa
and
repnz
fstpl
xchg
mov
mov
mov
mov
push
cmp
inc
mov
sub
mov
fiaddl
jns
test
outsl
dec
sub
jo
push
or
pop
dec
shrb
mov
pop
repnz
fdivl
pop
adc
sbb
jl
adc
loope
push
fcmovnb
pop
mov
nop
dec
mov
repnz
xor
xchg
test
rol
adc
pushf
mov
pop
adc
sub
adc
adc
push
sub
or
mov
adc
pop
fidivl
lahf
adc
test
repz
adc
add
pop
adc
mov
mov
xchg
gs
repnz
dec
push
es
adc
xchg
les
inc
mov
scas
jb
bound
outsb
cmc
cmpsb
std
je
sub
insb
movlps
mov
fldt
xchg
bound
inc
stos
mov
mov
xor
sbb
dec
xchg
sbb
and
stc
test
movsl
hlt
jno
mov
cmp
mov
push
dec
rcr
inc
mov
fidivs
aaa
iret
int
mov
jns
xchg
imul
imul
cmp
mov
scas
pop
pop
into
adcb
jge
mov
and
in
adc
leave
mov
je
andl
jb
out
xor
add
add
jmp
sub
push
stos
shrl
cmpsl
imul
push
shr
jp
inc
cld
clc
movsl
adc
div
lock
lea
pop
pop
shl
inc
push
movsb
movsb
movsl
dec
pop
fadd
sub
or
sub
adc
in
pop
and
dec
pop
mov
add
frstor
or
inc
jle
pushf
fdivrs
add
pop
inc
testl
jp
push
pop
adc
enter
outsl
scas
pop
jne
mov
imul
push
push
iret
xchg
jg
or
dec
hlt
cltd
inc
lds
daa
add
cmpsb
xor
sbb
xchg
nop
push
mov
sbb
adc
in
dec
cmp
push
hlt
sub
scas
xchg
xlat
push
aas
mov
movsb
sub
sbb
push
xor
andb
sub
pop
jbe
sub
xlat
pop
arpl
mov
add
inc
test
lock
test
dec
jge
sub
or
enter
mov
cwtl
jno
shr
and
leave
or
jecxz
stos
pop
or
and
and
stc
mov
lods
push
inc
js
test
cmp
lret
sub
push
repnz
inc
xor
xchg
test
shl
ja
out
es
sub
cmp
push
jmp
iret
lret
test
mov
mov
add
fsubs
push
loop
or
jg
push
push
cmp
mov
aam
movsb
pop
pop
call
das
inc
clc
sub
dec
mov
ljmp
fistps
pop
jmp
or
mov
imul
aad
lock
inc
cltd
inc
ret
lret
