sbb
movsl
enter
cmp
jg
leave
mov
mov
pusha
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
scas
pop
fbld
lock
sub
push
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
add
mov
fldt
addr16
dec
sbb
adcb
pop
movsl
ja
pop
pop
enter
cld
mov
xchg
adc
pop
pop
push
repnz
and
dec
out
sub
jb
jp
adc
icebp
mov
jo
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
mov
sbb
push
mov
sub
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
ficompl
repz
sbb
mov
hlt
test
xchg
in
or
cwtl
scas
mov
push
mov
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
cltd
push
xchg
sub
push
adc
or
push
adc
cmpsb
cmp
mov
mov
sub
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
jge
ja
mov
lret
or
gs
mov
popa
or
jmp
cmp
and
sub
mov
mov
fcmovb
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
mov
push
enter
ljmp
fisubrs
pop
out
jge
das
lock
data16
nop
mov
gs
cmpsl
outsb
xor
sub
testl
or
call
in
sub
push
push
lea
push
subl
lea
push
subl
lea
push
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
mov
add
push
pop
xor
cmp
je
sub
lea
push
popl
pushl
pop
dec
lea
and
pushl
lea
pop
repz
jmp
mov
pop
ret
add
push
adc
dec
add
or
adc
inc
push
pop
clc
sbb
sub
mov
mov
and
add
and
add
add
shlb
add
adc
add
add
add
repnz
add
and
add
and
add
add
js
add
cwtl
and
add
and
add
and
add
and
add
add
add
add
push
and
add
add
cmp
add
jo
add
inc
and
add
add
jp
add
pop
and
add
and
add
and
add
add
and
add
and
add
add
add
and
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
add
add
fisubs
add
nop
and
add
and
add
and
add
add
shlb
add
adc
add
add
add
repnz
add
and
add
and
add
add
js
add
cwtl
and
add
and
add
and
add
and
add
add
add
add
push
and
add
add
cmp
add
jo
add
inc
and
add
add
jp
add
pop
and
add
and
add
and
add
add
and
add
and
add
add
add
and
add
and
add
add
add
add
fs
imul
add
dec
add
insb
outsb
inc
add
aam
inc
gs
jb
jbe
push
jns
gs
add
insb
outsl
jae
dec
popa
outsb
fs
add
fs
outsl
outsb
jae
insb
gs
add
sti
add
insb
gs
jae
dec
jne
gs
add
inc
gs
je
imul
push
add
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
add
inc
gs
outsl
imul
jbe
jae
add
add
popa
jo
imul
inc
outsl
jo
inc
imul
gs
gs
inc
imul
gs
je
jb
jne
dec
outsb
outsw
inc
add
fs
outsl
outsb
jae
insb
gs
add
mov
push
insb
gs
enter
jae
gs
popa
insb
jne
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
imul
jb
je
arpl
add
fwait
add
insb
jae
inc
jbe
outsb
je
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
outsb
fs
je
insl
push
add
push
dec
inc
dec
xor
cs
insb
add
push
add
outsb
fs
push
add
inc
jb
dec
jae
add
add
inc
jb
dec
jae
add
or
push
gs
jb
inc
jb
outsl
jb
or
push
gs
jb
inc
jb
outsl
jb
add
inc
push
inc
jae
jb
outsl
jb
push
add
outsb
fs
push
pop
add
addr16
outsl
js
add
add
addr16
outsl
js
add
add
outsb
fs
push
pop
add
addr16
outsl
js
add
inc
jb
dec
jae
add
add
inc
push
inc
jae
jb
outsl
jb
inc
push
push
push
dec
push
cs
insb
add
outsl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
imul
jae
inc
outsl
jb
push
dec
add
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
or
add
add
add
add
add
add
add
and
add
add
andb
add
imul
xchg
xchg
xchg
add
lods
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jge
jnp
jnp
lods
lods
lods
add
test
push
mov
mov
mov
ret
leave
lret
lret
lret
int
rcl
shr
rcl
shl
rcl
shl
int3
into
into
hlt
leave
enter
leave
out
mov
mov
mov
mov
lods
lods
lea
fwait
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
out
lret
rcl
sar
xlat
fcom
std
xlat
xlat
xlat
fcomp
aad
aad
iret
iret
iret
dec
into
int
aam
rcl
iret
inc
vfnmadd231pd
mov
iret
mov
xchg
and
add
push
add
add
add
add
add
add
add
add
lods
stos
lods
add
scas
sbb
mov
jnp
mov
sar
lret
ror
sar
aad
fcom
xlat
call
xlat
fdivr
aam
dec
int
dec
into
into
call
aad
dec
into
int
sarb
mov
lods
lods
std
cmpsb
cmpsl
cmpsb
ljmp
pop
or
or
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
pop
add
push
or
or
sbb
add
add
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
int3
int3
call
rcl
call
fcomp
call
xlat
call
dec
into
int
leave
lret
lret
int
inc
mov
rol
mov
mov
jmp
mov
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
push
imul
pop
pop
pop
fs
sbb
movntps
sbb
xor
cmp
aaa
cmp
cmp
and
and
push
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
sarl
leave
dec
rcl
call
aam
call
iret
sar
leave
leave
inc
inc
mov
mov
lods
scas
scas
jmp
pushf
sahf
xchg
cwtl
xchg
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jo
jle
jle
jg
jg
jo
jno
arpl
mov
cmp
lea
inc
mov
outsb
outsl
outsl
nop
popa
arpl
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
leave
lret
dec
lret
leave
enter
ret
mov
mov
scas
scas
scas
jmp
fwait
cltd
call
xchg
xchg
cwtl
cwtl
lcall
lahf
ds
aas
push
push
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
outsb
add
pop
or
pusha
nop
mov
incb
jl
idivb
jl
jo
jo
push
data16
jne
jge
jg
jp
js
gs
inc
inc
cmp
pop
pop
sbb
adc
or
stos
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsb
lcall
xchg
xchg
incl
addb
xchg
xchg
xchg
mov
mov
xchg
mov
jns
jns
cs
das
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
addl
in
mov
mov
addb
decb
xchg
loope
jo
enter
mov
test
jnp
addr16
cmp
and
and
jg
jge
lcall
shrb
lods
lods
sti
lods
lods
stos
lods
lods
lods
stos
stos
test
std
lcall
decl
jge
js
js
jp
jnp
mov
cwtl
movsb
movsl
mov
sti
mov
mov
mov
mov
mov
lods
scas
stos
test
sbb
or
add
add
add
add
add
add
push
pop
adc
mov
mov
xchg
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
xchg
cwtl
cwtl
stc
xchg
xchg
xchg
in
mov
or
addb
mov
pop
push
push
or
inc
dec
imul
xchg
xchg
leave
lcall
out
lcall
std
mov
xchg
mov
mov
nop
lcall
cmpsb
cmpsb
ljmp
mov
mov
mov
mov
std
mov
mov
movsb
mov
jl
lods
test
add
pop
adc
cmpsl
scas
call
lcall
incl
mov
xchg
xchg
xchg
popf
popf
popf
std
movsl
movsl
movsb
stc
mov
xchg
xchg
in
in
xchg
push
jne
or
add
or
or
daa
daa
push
dec
dec
dec
data16
jno
xchg
xchg
rclb
xchg
std
nop
xchg
decb
xchg
xchg
lcall
movsl
test
lods
cmpsl
lods
pushl
cmpsl
lods
mov
xchg
stos
std
mov
xchg
scas
mov
mov
ljmp
sahf
adc
add
add
pop
adc
mov
jmp
sahf
cwtl
lcall
mov
nop
nop
call
xchg
xchg
sahf
popf
pushf
movsb
movsl
mov
movsl
movsl
movsb
notl
jp
movsl
push
push
push
outsl
dec
dec
dec
pop
pusha
bound
jb
mov
lahf
test
mov
lea
xchg
testl
mov
jmp
mov
mov
pop
mov
xor
js
mov
cmpsb
mov
mov
mov
mov
mov
add
pop
pusha
adc
mov
ljmp
popf
decl
xchg
nop
call
xchg
xchg
call
cwtl
fwait
cltd
fwait
pushf
popf
pushf
sahf
lahf
mov
std
mov
cltd
fwait
out
xchg
xchg
xchg
xchg
les
cwtl
cltd
in
xchg
xchg
out
xchg
cmc
xchg
test
std
xchg
jae
fwait
addr16
sahf
pop
cmp
dec
jg
lods
inc
jnp
mov
jnp
mov
jae
mov
outsl
ljmp
adc
stos
or
ljmp
jg
mov
mov
stos
pushf
movsl
movsl
mov
add
mov
add
pop
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
sahf
pushf
lcall
popf
sahf
lcall
xchg
xchg
decl
cwtl
xchg
call
fwait
cld
cltd
xchg
pushf
stc
mov
xchg
pushf
cld
popf
mov
xchg
push
xchg
push
jle
xchg
dec
jns
fwait
cmp
imul
pop
imul
mov
adc
ljmp
adc
lods
pcmpgtd
lods
adc
mov
push
mov
push
mov
imul
inc
jg
mov
mov
lods
scas
mov
movsb
movsb
add
add
add
add
add
pop
pop
adc
mov
ljmp
popf
call
pushf
lcall
movsl
movsl
jmp
mov
decl
mov
decl
mov
lcall
xchg
dec
jp
xchg
cmp
decl
sbb
pop
decl
add
pop
lcall
push
pop
jmp
sbb
mov
outsl
pushl
pop
jo
mov
and
mov
and
mov
xchg
scas
mov
lods
lods
mov
sahf
lahf
lahf
add
add
add
add
mov
scas
add
pop
adc
lods
mov
shlb
pushf
pushf
sahf
jmp
cmpsb
test
cmpsl
cmpsb
test
test
test
lcall
orb
mov
decl
decl
pop
incl
add
incl
add
mov
pop
call
add
cltd
add
sahf
add
cmpsb
or
mov
outsb
pushl
sub
mov
sub
les
jge
leave
cs
leave
inc
mov
enter
sarb
lret
movsb
dec
mov
movsl
movsb
add
push
push
adc
test
mov
sahf
cltd
lahf
jmp
stos
stos
ljmp
lods
pushl
lods
scas
jmp
jb
decl
push
pop
incl
or
addl
incl
push
incl
push
decl
add
xchg
add
fwait
add
sahf
add
add
ljmp
sub
cmp
dec
cmp
int3
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
movsl
movsl
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
movsb
cmpsb
ljmp
sahf
jmp
scas
scas
pushl
mov
pushl
mov
ljmp
mov
mov
decl
mulps
mov
push
decl
pop
push
incl
add
mov
push
call
add
sahf
add
add
cmpsb
add
lods
add
mov
jb
les
test
lret
dec
inc
call
inc
call
inc
call
dec
xchg
call
dec
xchg
fisttpl
fisttpll
ficoml
call
xchg
std
mov
mov
movsb
movsl
movsb
arpl
mov
add
add
add
lcall
adc
jl
popf
mov
lcall
stos
stos
pushl
mov
pushl
mov
mov
mov
jmp
aaa
outsb
decl
call
adc
pop
decl
push
call
add
pushf
add
mov
add
stos
add
mov
fs
mov
dec
nop
call
push
cwtl
call
push
cltd
fsts
fistpl
fistps
jmp
pop
popf
jmp
pop
mov
jmp
pop
lahf
call
xchg
mov
test
jne
mov
mov
add
add
add
inc
inc
adc
js
mov
mov
popf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
decl
and
push
call
or
popl
push
call
add
mov
add
lods
add
mov
gs
mov
xor
fldenv
fisubs
fisubs
jecxz
cmpsl
jmp
cmpsb
jmp
test
push
jmp
data16
fldl
ret
mov
cmpsl
mov
lahf
sahf
add
inc
aas
adc
jb
fwait
xchg
cltd
call
lahf
popf
lahf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
fwait
xor
lcall
lcall
or
xchg
add
lcall
jmp
add
mov
pushl
adc
rolb
fldt
jmp
outsb
lods
jmp
outsl
lods
jmp
jb
call
jae
jmp
mov
in
jbe
out
jne
in
jae
jmp
xchg
mov
cmpsb
cmpsl
lcall
lahf
add
jge
cmp
cmp
js
lea
lcall
mov
pushl
mov
mov
mov
mov
lods
lcall
xor
mov
cmp
xor
lcall
lcall
add
mov
add
mov
popa
pushl
add
enter
ficoml
jmp
jbe
jmp
jg
in
jg
out
cmpb
lock
push
cmpl
ljmp
mov
test
cmpsl
pushf
popf
pushf
daa
sahf
sahf
lahf
add
add
add
pop
add
aaa
cmp
pop
pop
push
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
mov
ret
rol
pushl
outsb
mov
fwait
cmp
movsl
inc
jl
mov
ss
lcall
lcall
add
test
pop
ljmp
add
mov
add
iret
es
data16
call
mov
push
pop
push
nop
ret
push
xchg
ret
nop
push
xchg
ret
clc
xchg
pop
out
nop
mov
inc
ret
clc
lods
lods
stos
mov
popf
pushf
xor
popf
add
add
add
inc
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
ret
inc
mov
jl
lcall
dec
cmp
mov
push
pusha
lcall
add
cmpsb
add
lods
add
mov
arpl
mov
add
movl
mov
out
xchg
vlddqu
fwait
lcall
clc
popf
lret
popf
int
cld
lahf
int
cli
cltd
lret
xchg
ret
mov
inc
enter
mov
sahf
lahf
mov
add
add
add
xor
or
cmp
dec
jecxz
pop
pusha
call
mov
mov
mov
sar
ret
mov
inc
leave
inc
mov
lahf
jmp
push
xchg
scas
dec
xchg
mov
push
pop
lcall
add
add
mov
popa
mov
add
movl
jbe
loopne
xchg
out
lea
push
movsb
int
mull
cli
test
cld
movsl
into
cli
cmpsl
into
stos
sar
stos
sar
std
test
push
lahf
jmp
mov
dec
lret
mov
mov
lahf
mov
xchg
add
lcall
xor
add
sub
or
inc
bound
pop
xlat
je
jo
mov
sarb
mov
inc
dec
enter
ret
mov
test
mov
push
mov
scas
dec
test
mov
add
mov
add
mov
mov
add
into
add
add
loopne
jnp
in
pop
test
negb
aam
cld
scas
aad
sti
mov
sti
scas
sar
cld
mov
mov
mov
mov
pushl
sar
cmc
movsb
jmp
mov
call
enter
mov
ficompl
xchg
xchg
or
add
add
xor
add
dec
dec
outsb
outsl
jo
cltd
cltd
lcall
fcom
jmp
xlat
fdiv
rcl
sar
int3
int3
into
dec
leave
leave
dec
lret
lret
dec
leave
lret
inc
enter
mov
mov
scas
push
mov
stos
cmp
jmp
add
mov
fs
mov
add
rolb
jo
add
fiadds
je
ljmp
cld
lods
sar
cld
mov
cld
mov
cld
mov
fdivr
cld
mov
xlat
std
rcr
mov
int3
jmp
mov
call
lret
int
mov
mov
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
mov
pop
call
call
loop
fucom
fucom
fdiv
fcomp
fsqrt
fcom
std
into
rcl
mov
imul
jmp
add
mov
arpl
mov
add
leave
add
add
faddl
jne
in
js
out
das
xchg
stc
mov
cld
mov
loopne
std
ret
inc
loopne
inc
inc
loopne
dec
fdivrp
std
dec
loopne
std
std
lret
sti
mov
leave
call
lret
mov
mov
xchg
adc
add
add
incb
std
add
incl
hlt
cmc
cmc
or
out
jmp
jmp
out
sub
in
in
dec
jmp
ljmp
in
out
fcmovu
fsubr
ret
stc
lods
jo
cmpsb
cmp
movsb
adc
pop
ljmp
add
mov
add
into
add
add
loopne
jbe
call
inc
popf
cli
mov
loop
cld
lret
dec
in
dec
in
std
int3
in
dec
jecxz
dec
loopne
std
shl
std
shl
std
shl
std
shl
sti
out
mov
inc
ret
cmpsb
cmpsb
cmpsl
mov
xchg
cwtl
add
add
add
std
incl
std
incb
idiv
clc
add
repnz
hlt
icebp
push
in
icebp
out
pop
in
lock
cmp
out
out
pop
fsubp
loopne
mov
xchg
sti
mov
add
pop
ljmp
add
rolb
dec
add
roll
jo
fiaddl
je
in
jp
in
push
jl
negb
cli
mov
cld
shl
shl
std
shr
shr
shl
std
aad
std
out
std
fsub
std
fldl2e
std
shl
push
ret
aad
jecxz
lret
lret
lret
rep
test
xchg
and
xchg
xchg
add
std
cld
add
std
stc
add
cld
clc
add
div
or
aam
xor
mov
xchg
negb
add
cmpsb
add
lods
add
mov
add
lret
call
add
faddl
jbe
call
sbb
cli
ret
fdivrp
cld
fsubr
fucomi
fldpi
fucomi
std
std
fucomi
std
fsubr
std
fucomp
fsubrp
fsubrp
fucomip
shl
push
ret
call
rcl
clc
lods
stos
stos
lods
xchg
xchg
xchg
outsl
jo
add
add
add
loope
add
mov
xchg
lods
jl
repnz
and
mov
add
mov
arpl
mov
add
int
insl
call
add
filds
jne
jmp
sub
cld
shr
fsubrp
fucomi
fucomi
fldl2e
out
std
aad
std
aam
cld
shl
cli
shl
clc
into
fdivrp
test
out
mov
xlat
sti
mov
mov
fwait
fwait
lcall
cltd
fwait
add
add
mov
subb
imul
add
test
add
mov
add
iret
add
add
add
jmp
xor
sti
leave
loope
cld
int3
loope
cli
idivl
aad
hlt
mov
into
push
mov
int3
ljmp
ljmp
cli
jmp
fsub
cmc
fsubp
fucomip
mov
mov
xchg
add
add
add
int3
lret
add
mov
loopne
xor
pop
ljmp
add
mov
add
into
push
jno
rorl
je
ficoml
jns
loope
cmp
inc
xchg
jmp
scas
lret
mov
out
std
loope
mov
cli
fdivrl
lock
int
fmul
iret
fsubp
rcl
shl
aad
out
loop
in
in
test
out
lock
ljmp
push
lods
stos
lods
adc
test
cmpsl
add
ret
mov
ret
rcrl
lods
aam
dec
jg
pushf
sbb
cmpsl
sbb
scas
es
mov
js
mov
inc
test
ret
push
stc
lret
fs
mov
shll
rcl
mov
int
rol
int
into
shlb
fcom
aad
fcmovu
loopne
gs
in
call
out
in
xor
div
cmc
and
repnz
sbb
fstp
or
mov
int
xchg
add
mov
mov
rolb
mov
test
imul
sbbb
mov
cmpsl
sarb
stos
mov
ret
cmpsl
enter
leave
ret
int3
lret
ror
into
addr16
iret
push
rcl
rorb
inc
aam
xor
daa
ficompl
ficoms
fsubp
loop
loope
jecxz
out
jmp
jmp
out
add
cli
testl
std
add
incl
mov
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
rcll
les
mov
daa
int3
ror
and
rcrl
rcl
rcll
rcl
rorl
rcr
push
aam
fadds
add
add
in
add
in
jmp
add
incl
mov
mov
add
ret
mov
mov
mov
mov
push
rol
or
leave
enter
leave
add
into
lret
aam
add
aad
aam
add
xlat
aad
aad
add
fsub
add
aam
add
loop
add
fsubp
add
in
add
lock
add
std
incl
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
ret
mov
mov
mov
mov
stos
stos
stos
dec
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
mov
aam
into
shr
aad
shl
aam
aam
ror
iret
cli
int
lret
stc
int3
int3
lret
mov
mov
lods
stos
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
cmpl
add
push
push
add
add
add
add
add
add
add
add
add
mov
mov
mov
enter
iret
xlat
call
xlat
call
rcl
dec
int
dec
lret
mov
mov
cld
lods
lods
lods
icebp
xchg
cwtl
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jne
jne
jae
gs
dec
dec
dec
cmp
sub
sub
aaa
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
dec
lret
lret
rcl
call
rcl
dec
lret
inc
rol
mov
mov
stos
stos
stos
sahf
lahf
popf
xchg
cwtl
cwtl
jmp
jno
xchg
pop
pop
pop
dec
add
add
add
add
add
add
jg
addl
test
jp
imul
movsb
push
push
push
stos
push
imul
cmp
cmp
outsl
outsl
jno
scas
scas
mov
mov
mov
mov
mov
ret
mov
mov
mov
ljmp
fwait
fwait
call
xchg
cltd
cltd
fwait
out
test
dec
movups
xor
add
and
add
adc
add
pop
fwait
lcall
popf
xchg
cltd
fcoml
addb
jl
jge
jns
jns
jns
jnp
jp
jp
jb
jae
push
push
push
cmp
aaa
sahf
sahf
pushf
mov
lods
scas
repz
scas
scas
sti
scas
scas
lods
std
test
test
pushf
pushf
pushf
call
test
call
mov
scas
jmp
scas
scas
leave
movsb
movsl
movsl
cltd
jae
je
adc
adc
add
add
add
add
outsl
outsl
outsb
pop
xchg
mov
sahf
cltd
sahf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsb
outsl
outsb
orl
cwtl
cwtl
repnz
xchg
xchg
std
lea
mov
xchg
xchg
xchg
lcall
movsl
test
mov
scas
std
mov
scas
mov
mov
mov
cmpsl
movsb
cmpsb
pop
addb
add
add
add
pusha
or
lods
mov
movsl
sahf
movsb
decl
mov
lcall
popf
lahf
sti
lahf
mov
cltd
call
push
push
push
jo
pop
push
outsl
insl
outsl
outsb
xchg
subb
nop
xchg
lock
mov
lcall
fwait
pushl
outsb
xchg
mov
mov
mov
jge
mov
lods
lods
insl
stos
test
add
add
add
pusha
pusha
pusha
or
mov
in
mov
nop
call
cwtl
lcall
lcall
pushf
sahf
sahf
cli
xchg
xchg
xchg
jmp
xchg
lea
jecxz
orl
cld
xchg
pop
jg
popf
dec
jp
mov
ss
mov
jae
mov
outsl
ljmp
sbb
mov
mov
mov
mov
jle
movsl
movsb
push
pusha
pop
pop
or
mov
lcall
popf
lahf
jmp
mov
xchg
decl
orl
xchg
jno
cld
cwtl
pusha
cmp
dec
js
xchg
cmp
nop
sub
xchg
sbb
cwtl
adc
mov
adc
imul
sbb
sbb
mov
and
mov
stos
mov
lods
scas
scas
xchg
sahf
lahf
lahf
adc
add
add
pop
pop
popa
or
mov
stos
mov
mov
ljmp
test
lcall
pop
jp
mov
push
mov
decl
adc
xchg
push
decl
add
xchg
add
fwait
add
cmpsb
or
mov
je
mov
das
jge
lds
jle
leave
xor
lret
dec
pop
xchg
inc
test
imull
test
add
add
add
pusha
pusha
pop
or
movsb
stos
in
mov
test
mov
mov
mov
mov
mov
mov
movsb
cwtl
lahf
call
adc
mov
push
incl
push
push
decl
add
xchg
add
sahf
add
movsl
add
mov
insb
inc
aaa
test
int3
inc
mov
iret
inc
mov
aam
call
inc
xchg
call
bound
stc
mov
mov
movsl
movsl
mov
add
add
add
pop
or
popf
mov
ljmp
mov
pushl
mov
stos
lcall
pop
popa
call
push
pop
decl
push
call
pop
jmp
add
mov
dec
nop
fstps
ficompl
fistps
loopne
mov
fildll
dec
cmpsb
mov
ret
cmpsb
xor
add
add
dec
pop
jle
jl
fwait
xchg
lcall
scas
scas
pushl
mov
mov
jmp
sub
insl
call
adc
xchg
add
popf
add
cmpsb
add
mov
fs
mov
xor
loope
test
ljmp
in
jb
jmp
jns
call
test
std
mov
test
addb
add
dec
dec
dec
pop
outsl
insl
push
mov
xchg
ljmp
mov
mov
mov
jne
lcall
cmp
sahf
sub
cwtl
or
pop
jmp
pushl
or
call
inc
xchg
jmp
jns
jmp
test
push
xchg
push
xchg
mov
test
push
lcall
add
sub
push
push
dec
pop
imul
mov
mov
mov
mov
ret
mov
sahf
jmp
inc
jg
mov
or
mov
add
mov
arpl
mov
adc
mov
push
xchg
push
cwtl
xchg
enter
leave
stc
lcall
loop
inc
mov
stos
popa
mov
add
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
ret
inc
xchg
cmpsl
jmp
dec
cmp
and
mov
add
mov
fs
mov
add
and
push
mov
sar
clc
test
cli
stos
iret
sti
stos
iret
std
lods
sar
sti
cmpsb
lret
jmp
mov
inc
rol
stos
stos
stos
jne
popf
pushf
or
add
add
push
push
dec
aaa
jb
jb
test
int3
into
out
into
int3
cmc
lret
sti
enter
mov
mov
mov
test
inc
cmp
adc
add
mov
gs
add
into
add
fildl
xchg
clc
xchg
std
mov
mov
std
mov
fdivr
cld
mov
fcos
cld
mov
lret
ret
mov
scas
mov
add
add
add
add
pop
or
aam
dec
loope
loop
fsubp
loope
fadd
fcmovu
fcmovu
aam
xlat
out
mov
data16
test
push
pusha
ljmp
add
lret
call
add
loop
jp
lock
mov
std
std
loopne
dec
dec
loopne
std
leave
sti
out
mov
lret
divb
sahf
sbb
add
add
incl
incb
jmp
or
in
in
sbb
in
in
xor
loop
jecxz
mov
mov
mov
add
pushl
add
int
insl
fldl
je
call
insl
mov
std
ret
sti
shl
call
out
std
shl
call
out
std
xlat
out
call
jmp
push
fdivr
fcmovne
sar
mov
mov
add
std
incb
std
incl
cld
cld
pop
aad
push
mov
pop
xchg
popf
or
test
add
les
push
filds
jne
out
and
std
shl
std
fldpi
std
std
std
xlat
jmp
cld
fsub
cld
aam
push
jmp
rcl
sti
mov
sahf
sahf
das
add
add
int3
into
int3
or
bound
ljmp
inc
add
roll
jno
loopne
jns
out
das
xchg
push
lcall
stc
leave
fdivrp
test
repnz
xlat
repz
out
ret
out
aad
in
vpsadbw
aam
jecxz
fsubrp
enter
stos
test
das
incb
aad
aam
mov
je
or
insl
inc
sbb
lret
and
sub
sti
ficoms
clc
in
mov
out
loop
lret
jmp
fdivrl
lret
iret
mov
in
fcompl
in
jmp
rorl
mov
add
stos
stos
stos
add
xchg
mov
ljmp
xchg
fidivrl
jg
rol
stos
mov
mov
les
rol
int3
insl
aad
iret
pop
ror
iret
dec
fnstcw
loopne
loopne
in
fsubl
jecxz
icebp
adc
in
in
or
std
add
add
add
std
add
mov
jns
mov
mov
mov
mov
ret
enter
rcl
pop
mov
rcl
or
or
int3
int3
add
std
std
add
std
incl
cltd
lcall
or
into
into
int3
add
std
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
ret
mov
mov
ret
ret
ret
mov
scas
insb
stos
lods
lods
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
stos
lods
add
mov
enter
sar
aam
aam
rcl
sar
int
iret
std
stc
mov
test
sarl
gs
sbb
add
add
add
add
add
add
add
add
jb
jno
push
inc
inc
das
cs
inc
and
add
add
mov
mov
cmpl
dec
into
int3
call
aad
dec
into
into
inc
mov
ljmp
sahf
lahf
sti
mov
xor
add
xor
add
sbb
je
je
test
adc
bound
mov
push
insl
jb
popa
pusha
cmp
pop
sbb
mov
in
mov
mov
mov
lods
lods
lcall
xchg
xchg
lcall
xchg
cltd
lds
jae
es
add
add
add
je
jb
fwait
xchg
lcall
test
clc
xchg
test
addl
push
push
dec
inc
mov
pushf
into
movsb
movsb
mov
sti
xchg
xchg
xchg
decb
mov
pushf
fwait
fwait
ljmp
mov
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
xorl
cmpsl
test
mov
xchg
xchg
xchg
cld
sahf
sahf
sahf
cmc
lcall
mov
push
push
imul
jle
mov
xchg
notl
mov
pushl
xchg
mov
test
lods
push
stos
lods
lods
add
add
add
test
test
xchg
xchg
xchg
call
lcall
xchg
fwait
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jbe
out
xchg
arpl
std
lcall
ljmp
pop
outsl
pushl
aaa
jl
mov
mov
imul
into
add
xchg
pop
lods
cmpsb
stos
test
lahf
sahf
popf
jmp
mov
xchg
decl
push
ja
xchg
inc
je
mov
imul
push
call
or
mov
push
insl
pushl
and
inc
sub
ret
inc
xchg
mov
mov
subl
je
push
mov
movsb
test
test
scas
scas
ljmp
xchg
decl
or
mov
decl
add
mov
adc
shll
dec
inc
mov
roll
call
inc
call
push
xchg
dec
cwtl
mov
mov
mov
movsb
mov
add
imul
test
mov
scas
pushl
mov
ljmp
cmp
nop
pop
decl
pop
pop
call
add
add
mov
push
xchg
fistpl
jmp
pop
mov
jmp
data16
call
fwait
mov
mov
mov
test
cmpsb
pop
add
add
bound
adc
pushf
pushf
pushf
cld
mov
mov
mov
mov
scas
lcall
xor
cwtl
and
xchg
push
pop
jmp
add
mov
xor
jmp
jo
call
jp
push
jle
out
jg
ficompl
mov
and
add
add
dec
adc
push
cmp
mov
ret
sar
mov
jmp
inc
jge
mov
add
test
add
ret
or
fisttpl
in
mov
push
xchg
push
cwtl
clc
xchg
jmp
cmpsl
mov
cmpsb
movsl
sub
inc
inc
aas
adc
push
xchg
xchg
mov
inc
sarl
ljmp
sbb
cmpsb
add
mov
fs
add
aad
js
in
outsb
scas
push
cmpsl
into
clc
lods
sar
cld
lods
sar
cld
lods
sar
std
lods
sar
jmp
lret
mov
movsl
ds
incb
xor
xor
inc
scas
mov
mov
aam
mov
aad
rcl
out
leave
leave
leave
cli
mov
mov
jmp
add
add
add
out
xchg
clc
nop
ret
std
mov
fdivr
inc
std
rcr
cld
ret
lock
shl
test
jg
add
add
stos
lods
lods
add
jmp
or
jmp
out
outsb
fisubl
mov
add
mov
add
fiadds
ja
out
cmp
std
int
shl
shl
std
aam
std
aam
push
enter
int
scas
scas
scas
popa
cmpb
std
std
std
add
incb
int3
lret
shrl
lahf
sbb
lods
add
mov
add
loop
jp
hlt
push
movsl
std
enter
xlat
out
out
cld
shl
std
aad
stc
aam
push
enter
int
repnz
mov
xchg
xchg
xchg
pop
ret
ret
mov
mov
cld
lods
push
fs
mov
push
jae
fistps
cmp
insl
lods
cld
out
mov
aam
ljmp
jmp
in
aam
jmp
fcmovnu
scas
push
cltd
lcall
sarl
xchg
dec
and
push
mov
shll
lret
mov
fdivrs
lret
adc
int
fmul
rcrb
rcl
dec
jecxz
fistpll
out
out
out
out
out
sbb
rol
add
mov
cmp
mov
scas
push
mov
mov
les
lds
rol
sbb
fstp
bswap
int3
into
or
aad
push
incl
jg
jg
std
std
incb
stos
std
incb
mov
std
add
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
and
inc
repz
test
arpl
pop
mov
das
push
fsub
jnp
cmp
imul
imul
jge
mov
fisttpll
aad
xor
repz
test
pop
mov
push
movsl
xlat
jecxz
or
mov
stc
sub
cwtl
pop
sbb
mov
insl
lds
cmp
jp
and
adc
cltd
inc
jb
adc
cwtl
das
divl
mov
dec
or
cmp
insb
popf
pop
jnp
lea
cltd
xor
adc
test
xor
xchg
push
insl
xchg
hlt
mov
pop
insl
add
cli
adc
lea
jge
test
in
add
pop
xor
insb
add
push
out
xchg
and
add
fsts
and
sbb
inc
xlat
jle
in
outsl
lahf
pop
cmc
rclb
jl
and
and
ja
ds
cwtl
mov
repz
fidivrl
or
les
cs
mov
push
inc
fidivs
xor
test
lcall
out
and
aaa
dec
insl
add
dec
insb
add
mov
add
test
aas
and
lds
in
test
jecxz
les
add
xor
and
test
cmpsb
cmpsb
out
fcom
pop
hlt
or
add
add
mov
mov
adc
data16
xor
cmp
push
jmp
test
lret
mov
jecxz
das
adc
cwtl
andl
mov
mov
cmp
lahf
cmp
lret
sti
cwtl
cmp
leave
sbb
in
ljmp
mov
add
add
pop
mov
and
cmp
pop
stos
ss
mov
xor
add
sbb
pop
mov
cmp
aam
mov
rcl
fucomip
xor
rolb
jo
inc
popf
xor
jne
mov
adc
jo
sbb
dec
cmp
into
insb
imul
inc
aas
addr16
jo
add
xchg
push
pop
mov
int
loop
mov
push
dec
hlt
pop
repnz
inc
cmp
ja
call
out
leave
adc
jne
sbb
and
sub
inc
nop
mov
ret
stc
cmp
pop
adcb
ss
test
sahf
xor
mov
fldt
rorb
jb
sub
stc
nop
fidivrs
cld
mov
pop
scas
xor
sbbl
push
xor
cmp
push
ljmp
jno
sub
fnsave
es
cld
xchg
push
pushf
lods
inc
into
jb
mov
out
lret
bound
lds
iret
testb
je
push
out
dec
xchg
pop
sahf
imul
sbb
inc
fisubrl
mov
inc
mov
mov
fnstsw
movzwl
test
xor
movsb
cmp
sub
fnstenv
scas
dec
loopne
sub
mov
push
lods
lods
push
xchg
jmp
push
jmp
sub
pop
movsl
dec
loopne
jle
mov
rcrl
lods
inc
dec
repnz
and
bound
shr
repnz
pop
out
adc
lahf
inc
call
es
insl
mov
mov
rorb
cli
cmp
shlb
pop
sbbl
data16
ss
or
mov
fldcw
rorl
fdivl
sub
pop
stos
cli
xchg
fdivrl
std
scas
std
sbb
add
int
and
jmp
jbe
push
test
jb
es
add
jb
fdivl
xchg
stc
jno
mov
adc
testb
pop
scas
inc
inc
xchg
loopne
fadd
pop
push
mov
movsb
cmp
adc
mov
dec
loope
aad
pop
add
adc
push
or
jbe,pt
in
mov
ret
imull
jnp
inc
out
xchg
dec
leave
pusha
jnp
shrl
fwait
jg
roll
jo
xor
call
test
lock
lret
xchg
pop
bnd
repz
xchg
sub
jnp
push
dec
sbb
jbe
lock
mov
cmpsl
ds
std
arpl
sub
test
leave
xor
cli
xchg
popa
clc
push
mov
dec
loope
inc
pop
insl
push
movsl
lcall
sub
orl
data16
scas
inc
add
in
test
stos
or
lock
mov
xchg
pop
scas
imul
repnz
insl
add
sub
sahf
pusha
lods
xchg
sub
mov
mov
or
jecxz
in
std
xchg
jmp
xor
pop
imul
test
outsb
bound
std
xchg
jmp
aad
imul
mov
loop
sbb
imul
dec
fs
in
rcrb
cmp
data16
xor
in
mov
mov
lret
shrl
mov
scas
inc
jne
fnsave
test
push
out
dec
dec
loop
xor
popa
cmpsb
sbb
cmp
dec
out
jp
pop
lock
mov
push
out
aas
jnp
ret
pop
push
sbb
xor
dec
outsl
push
jl
iret
data16
dec
in
push
lea
cltd
outsl
push
int3
mov
mov
cmpl
outsb
sahf
mov
adc
push
lea
cmp
pop
push
int
iret
mov
inc
call
aaa
jnp
data16
pop
repnz
mov
movsl
cmp
ss
ss
cmpsl
sarl
stc
nop
jle
pop
imul
jecxz
jp
adc
pop
fnstenv
sti
xchg
je
sbb
fidivrs
fnstenv
ss
scas
push
in
fnstsw
testl
in
aad
out
ds
outsw
aaa
lods
inc
data16
hlt
call
xor
fs
jmp
aas
pop
hlt
insl
xor
fbstp
mov
outsb
in
test
xor
cmp
add
mov
cmp
aas
push
imul
out
cmp
cs
mov
jne
ljmp
ret
push
ljmp
adc
outsl
mov
sbb
inc
imul
push
ljmp
pop
jne
std
xchg
lock
mov
test
jl
lock
int
hlt
out
sub
sbb
fs
add
pop
call
or
repz
mov
xchg
mov
sbb
adc
sub
sub
push
ljmp
jmp
mov
fildll
dec
and
inc
or
jbe
addr16
mov
and
rcl
cs
lret
cmpsl
ds
xor
push
mov
mov
fisubrl
mov
sbb
pop
jae
pop
test
into
shlb
leave
sbbb
sbb
aam
imul
mov
lds
and
adc
push
sub
pushf
pop
insb
add
mov
fisttpl
das
cmp
sbb
mov
inc
subb
xlat
sti
dec
loop
stc
inc
icebp
stos
inc
and
in
andl
cmp
or
testl
lea
sub
adc
into
cld
and
es
push
ljmp
sti
xchg
leave
popf
mov
lret
in
insb
adc
pusha
negl
cmp
outsl
xor
mov
stc
nop
mov
xchg
or
sub
imul
push
mov
into
and
sbb
sub
cmp
testb
mov
cmpsb
call
or
and
sub
adcb
movsb
loopne
pop
sbb
lock
cmp
lock
cmp
addb
into
gs
ljmp
inc
lock
jmp
das
lret
mov
in
loop
sbb
jne,pt
jo
cmpsl
mov
fnstsw
push
psubsb
inc
sbb
fcomi
bound
insb
subl
mov
push
or
xor
sub
cmp
outsl
push
scas
cmpl
repz
or
cwtl
das
push
and
push
jge
dec
stos
jl
sub
enter
es
adc
push
dec
push
xchg
nop
pop
test
jmp
mov
or
dec
loopne
sub
shlb
adc
popa
clc
adc
adc
outsb
es
scas
push
mov
mov
loopne
clc
adc
dec
push
jne
test
mov
or
sbb
xchg
aaa
loop
test
aas
stos
subb
mov
inc
pop
mov
lcall
repnz
jmp
push
sti
test
cmpsl
dec
push
jae
les
push
mov
out
jbe
adc
xchg
sbb
sub
fxch
dec
clc
sub
push
sub
cmpsb
mov
mov
out
xchg
out
outsb
add
iret
fiadds
jno
stc
shlb
dec
es
cmp
mov
lahf
sub
sbb
pushf
add
leave
mov
jno
jle
js
mov
popf
loopne
pusha
add
loop
fnsave
xor
mov
push
stc
jge
push
test
mov
shll
sbb
movsl
sbb
dec
push
test
inc
lahf
sub
cmp
pop
shrb
imul
iret
jbe
out
je
out
dec
xchg
inc
cld
push
cmpsb
pop
xor
nop
inc
ret
icebp
sbb
movsl
fmul
jae
idiv
out
sub
cmpb
mov
in
scas
fadd
add
add
pop
pop
data16
pop
out
or
faddl
inc
sub
jmp
push
jbe
push
mov
cltd
cmpsl
test
out
xchg
mov
adc
inc
ret
push
lods
jnp
icebp
aam
push
push
xchg
out
xchg
sub
pop
incl
les
mov
dec
aad
and
inc
add
and
pop
xchg
sub
add
insb
dec
cli
or
ja
xchg
sub
cli
hlt
push
push
cmpsb
mov
push
daa
sbb
out
out
xchg
push
subl
jb
stc
aad
xor
push
sub
mov
sarl
pop
js
push
cmpsb
or
in
inc
lahf
inc
cmp
pop
dec
test
mov
mov
inc
pop
out
mov
and
movsl
xchg
mov
inc
fistl
aas
xchg
lock
scas
outsl
scas
mov
shrl
scas
testl
int3
decl
into
outsl
orl
jl
jns
cmc
xchg
fdivrl
std
jp
insl
inc
jp
xlat
mov
out
in
ficompl
xor
scas
scas
inc
loopne
mov
or
lret
cld
fidivs
shr
cwtl
je
dec
and
lret
push
push
jp
popf
lock
inc
jmp
pop
mov
mov
sub
lds
inc
and
add
imul
imul
sub
cmp
mov
lods
jp
fbstp
movsl
xor
fbld
shrl
xchg
push
or
nop
jecxz
or
sahf
hlt
mull
and
fistpl
fwait
push
sbb
push
out
imul
dec
mov
dec
sahf
pushf
rcr
nop
daa
fidivl
aam
mov
pop
repnz
fcoms
jp
adc
cs
lahf
clc
jmp
das
rorl
mov
cmp
jbe
fnstenv
xor
shlb
xchg
loop
push
out
cld
test
outsb
add
andl
push
movsl
push
mov
popa
std
pop
mov
lods
push
icebp
xchg
sub
mov
loope
add
cs
gs
lcall
bnd
pop
icebp
ljmp
adc
dec
and
jns
inc
fadds
rcrl
push
call
sbb
fidivs
xor
cltd
sbb
ja
cmp
xor
pop
pop
out
dec
jnp
mov
addr16
xchg
jmp
mov
or
mov
insl
ljmp
lock
insl
add
sbb
xchg
push
push
movsl
mov
mov
ret
add
fsubrs
sub
loope
lods
testb
stos
and
das
add
push
inc
dec
inc
imul
mov
shrb
dec
or
data16
sahf
xor
lods
push
mov
mov
hlt
sbb
rorl
dec
inc
pop
sahf
dec
hlt
data16
sbb
mov
xchg
inc
das
insb
mov
dec
in
fadd
push
std
stos
jge
clc
push
fbstp
adc
mov
aad
mov
ret
fsubrs
in
rcrb
mov
popf
rdmsr
push
out
push
sub
mov
fsubrl
fbld
in
loop
push
sbb
jae
dec
lcall
cmp
scas
sub
xlat
outsb
adc
ss
xor
pushf
lahf
pushf
push
jmp
mov
jb
into
jnp
int3
xor
nop
daa
subps
mov
fistpll
out
int3
arpl
adc
andl
push
or
push
arpl
mov
push
rolb
pop
sahf
mov
and
fistps
xlat
pushf
clc
xor
gs
cmc
ljmp
adc
aas
jge
lds
xor
ret
mov
push
xchg
outsb
or
cmc
mov
in
fisttps
out
xchg
fisttps
out
push
cmp
add
test
imul
jns
ds
stos
inc
dec
push
xchg
frstor
pop
xchg
sti
aad
fdivrl
repz
rcrl
mov
xor
aam
pop
sub
orb
loopne
cmp
int3
fsubs
or
xchg
cltd
and
cmp
mov
mov
xor
pop
dec
pop
shrl
loopnew
mov
add
shlb
sbb
sbb
xor
or
es
in
jp
out
movsb
out
insb
add
mov
and
xchg
sub
xchg
mov
dec
pop
sbb
loopne
nop
ja
pushf
xor
and
push
loop
leave
mov
rcll
lods
push
pop
out
xchg
outsb
add
daa
pushf
mov
test
xchg
sub
mov
dec
rcr
outsl
je
shlb
xchg
add
insl
xor
mov
xchg
ret
test
sub
imull
dec
loope
popa
push
call
xchg
lods
sbb
cmp
xchg
mov
mov
mov
xor
loopne
cmc
pop
shrl
push
call
repnz
movsl
jle
adc
bound
dec
loope
fmull
push
push
add
add
push
xchg
dec
mov
test
cmpsb
cmp
xor
pop
movsb
pop
fnsave
loop
pminub
test
sub
xchg
xor
or
jmp
push
mov
add
ret
cmp
adc
cmp
ja
outsb
cmpb
xchg
insl
cmc
ffreep
pop
ficompl
cmc
mov
in
outsl
jae
stos
lods
mov
mov
xor
adc
cmpsb
adc
ds
add
add
sbb
jp
xchg
outsl
stos
inc
mov
int3
enter
ret
or
jle
adc
js
popl
mov
rclb
cmpsl
lahf
sbb
flds
lds
pusha
notl
dec
jecxz
jnp
adc
mov
shrl
mov
jo
xor
mov
rcll
inc
repz
inc
or
and
es
decl
inc
fdivrl
xchg
arpl
lds
addb
sbb
jno
sahf
adc
ss
aaa
adc
add
push
sub
inc
int3
pop
not
scas
stc
nop
mov
rcll
scas
or
xor
push
shll
pop
in
jb
dec
push
out
pop
mov
mov
rcrl
adc
sub
std
xchg
cwtl
sbb
sbb
mov
aad
xor
mov
dec
and
popa
ljmp
xchg
movsb
xchg
mov
push
shrb
arpl
mov
jb
inc
faddl
popf
push
movsl
ret
cli
xlat
jmp
ret
fadds
sbbb
repz
loope
dec
nop
daa
dec
dec
push
inc
mulb
fidivs
fmull
xchg
stos
dec
lods
inc
jae
or
lock
mov
dec
testb
arpl
lahf
push
into
fs
pop
jl
mov
pop
lds
jb
daa
sbb
stc
test
ret
sub
sahf
xor
fldenv
and
adc
clc
movsl
bound
enter
stc
lock
add
adc
and
pop
adc
gs
enter
outsb
jne
dec
out
xchg
push
popf
and
insl
add
dec
and
adc
and
mov
popa
clc
push
inc
pop
jg
outsl
push
sahf
cwtl
in
mov
rolb
lcall
and
mov
inc
xlat
mov
aad
cmc
sub
and
out
inc
jl
jp
inc
fidivl
loope
clc
dec
daa
mov
mov
jb
insl
xchg
test
xchg
shll
in
cld
sbb
add
sbb
inc
cltd
xor
insb
pop
icebp
jle
mov
mov
aad
push
in
sub
xchg
pushl
push
inc
shrb
aaa
aas
aad
lock
repz
jecxz
out
push
movsl
or
push
cmp
sub
fs
xchg
cmp
mov
sbb
push
push
inc
xchg
sub
cmp
lods
ret
pop
ds
mov
push
adc
push
and
push
movsl
inc
inc
xchg
cs
jo
ret
xchg
or
shrl
push
imul
dec
xchg
xchg
iret
insl
pop
mov
call
cmp
pop
dec
addr16
fimuls
loope
mov
lock
call
cmpsl
or
mov
rclb
mov
lret
pop
icebp
mov
shlb
fistpll
push
lret
lret
daa
xchg
sub
pop
mov
mov
std
dec
inc
fdivrl
fstl
jns
mov
or
loope
cmp
rorl
xchg
sub
aam
inc
gs
or
sbb
or
sub
cld
xchg
out
mov
adc
ds
data16
ret
inc
pop
in
test
pop
hlt
cmp
jnp
push
push
sub
ds
cltd
xor
push
dec
fisttps
mov
std
xchg
dec
out
dec
mov
add
xchg
cmc
loop
clc
mov
cmpsb
cmc
adc
cwtl
push
push
lds
sbbb
shlb
bnd
cmp
adc
pop
repz
xchg
cmp
adc
mov
out
ja
das
mov
in
xchg
mov
clc
mov
cltd
pusha
adc
insb
mov
int
mov
xor
into
dec
adc
mov
das
mov
adcb
pop
mov
imul
mov
or
lret
xor
adcb
insb
movsb
jbe
mov
ret
mov
sub
lods
add
fwait
xor
cmp
cmp
and
int3
mov
inc
jge
jae
enter
imul
subl
add
jno
pop
mov
xchg
sub
lds
pop
rcll
push
out
jnp
dec
loop
lahf
jge
loopne
jge
mov
nop
daa
cmp
pop
les
and
cmp
jne
dec
cmpsl
dec
mov
jle
leave
pusha
add
icebp
mov
fdivl
jns
mov
or
lret
sbb
push
repz
and
jo
movsb
inc
push
in
jbe
mov
leave
sbb
sub
int3
arpl
mov
into
gs
mov
adc
ss
movsl
addr16
loopne
mov
add
fimull
or
and
sub
lcall
cmpsl
loop,pt
sbbb
add
pop
xor
push
out
mov
pop
push
stos
add
jmp
bndstx
in
push
inc
fmuls
stos
pop
neg
popa
pop
scas
xchg
cld
jge
cs
int3
in
pushf
xor
mov
jne
mov
shrl
lods
xchg
sub
jp
mov
xor
pusha
test
sub
fadds
jno
or
les
jl
jl
pop
sahf
push
in
iret
cmp
add
mov
pop
mov
je
xchg
test
leave
xor
xchg
arpl
mov
mov
cmp
cmp
or
pop
icebp
pop
in
stos
adc
ss
addr16
xchg
sub
mov
fldt
or
mov
pusha
leave
lock
subl
popa
push
outsl
sub
mov
rcll
jp
mov
frstor
data16
mov
shr
sti
andb
mov
fdivl
jmp
rorl
adcl
out
add
es
mov
and
addr16
fmull
gs
sahf
mov
pusha
mov
adc
mov
fildl
xchg
add
shrl
and
lahf
ss
cmp
mov
fcmove
arpl
cwtl
das
andb
and
jg
mov
lret
call
fwait
jb
insl
add
xchg
dec
jno
cld
stos
in
insb
add
int3
int
idivb
add
push
sbbb
mov
fdivl
push
int
mov
popa
pop
mov
ja
jb
cli
stos
fucomp
jg
int
mov
sub
jnp
jae
lods
arpl
into
adcb
mov
mov
aam
fs
xchg
sahf
push
mov
fsubr
lods
sbb
aad
mul
js
push
push
jmp
mov
popa
clc
clc
jb
and
int
and
jle
and
enter
jmp
sbb
dec
outsl
xor
lret
lock
jecxz
adc
aaa
mov
jno
xor
xchg
int3
jle
fwait
cmpsl
in
outsb
add
repz
and
ljmp
fisubrs
movb
xor
int
add
pop
repnz
pusha
fs
cltd
int3
xor
cmc
mov
js
push
add
std
xchg
stos
pusha
push
scas
cmc
mov
jb
push
add
jl
jno
dec
stos
pop
pusha
testl
pop
loopne
push
hlt
sub
sub
dec
popf
xor
into
cld
xchg
clc
cltd
or
inc
jecxz
mov
mov
push
mov
mov
sub
inc
aam
mov
lahf
fnstenv
rcrb
jns
or
les
std
fs
sahf
push
shrl
mov
sbb
xchg
or
movsl
xor
daa
mov
mov
mov
xor
cmpsb
cmp
and
scas
inc
jl
pop
xor
jge
push
je
xchg
out
test
mov
xchg
in
inc
std
xchg
jp
in
test
fwait
es
and
push
pop
movsl
lods
inc
fiadds
cmp
cmp
add
scas
inc
loopne
jge
outsl
add
cmp
pop
out
test
test
push
lods
insl
hlt
push
mov
mov
dec
mov
xchg
sub
xlat
and
pop
divl
xor
dec
test
lret
cmc
lods
jne
push
testl
lods
inc
cmc
mov
mov
sahf
adc
push
ljmp
lods
xor
jge
notb
mov
dec
adc
jl
lods
ss
jno
sti
xchg
stc
xchg
repnz
sbb
xchg
inc
in
cmc
mov
or
and
sti
mov
mov
fisubl
adc
mov
inc
in
add
mov
add
ljmp
movsb
std
xchg
filds
and
add
and
mov
and
fdivl
pop
push
ret
pop
mov
stos
inc
pusha
stos
jl
aam
jne
mov
fsubrp
orl
sub
mov
adc
scas
loop
push
sbb
aas
xchg
sub
lcall
ja
or
shll
push
or
jl
pop
jne,pn
pop
jp
mov
cld
xchg
add
cmc
mov
and
mov
adc
sbb
xchg
ret
divb
jne
inc
add
mov
xchg
push
push
in
xorl
mov
ss
sbbl
xchg
inc
out
je
sbb
les
adc
adc
inc
faddl
cmpsb
outsl
push
roll
mov
loope,pn
adc
push
out
mov
out
gs
in
aad
aam
shl
ss
sbb
push
mov
cmp
jp
mov
mov
fldl
scas
nop
sub
lret
in
xchg
sub
xlat
mov
add
insl
add
and
xchg
sub
jae
xchg
lret
add
insb
je
xor
push
xchg
lock
jbe
std
movsb
jecxz
test
addr16
hlt
cmp
leave
outsb
adc
dec
loopne
arpl
add
ljmp
bound
xchg
jnp
fcmovnbe
outsl
add
sub
or
test
les
xchg
ljmp
and
dec
add
cmp
push
negb
mov
and
stos
mov
flds
mov
cmp
push
out
xchg
inc
cli
lea
adc
jecxz
or
call
cmp
sahf
cmp
mov
ljmp
in
ss
fstpl
pop
push
test
pop
jmp
lods
jl
aam
insb
stc
mov
mov
daa
fstpt
pop
dec
mov
xor
jns
arpl
leave
hlt
xchg
stc
aaa
ss
push
daa
rolb
fnstsw
pop
in
or
test
out
imul
aaa
je
or
mov
mov
fcoms
lcall
bound
adc
mov
inc
lret
pop
popa
out
pop
sub
rcrl
mull
int
mov
pop
shlb
bound
in
pop
and
mov
arpl
ficompl
mov
mov
ds
xor
adc
add
adc
xor
mov
enter
jne
fsubs
fisttpl
repnz
out
mov
fstpl
lcall
or
push
jle
mov
outsl
scas
sub
out
mov
fnsave
std
lods
inc
adc
jmp
xor
xchg
pop
cmpl
arpl
mov
and
inc
icebp
add
push
scas
inc
je
aam
arpl
mov
or
dec
sbb
xor
xor
arpl
lret
push
nop
and
mul
xchg
sbb
shlb
mov
ljmp
shll
cli
jbe
sbb
filds
mov
bound
int3
push
mov
pop
jno
mov
aad
lods
xchg
xor
jl
push
test
xchg
xor
dec
hlt
xchg
jbe
lds
lcall
mov
shl
jnp
aas
lahf
and
or
jp
outsb
mov
jp
fstp
pusha
sti
repnz
js
adc
jg
sub
bnd
lahf
bnd
mov
jle
lret
adc
bnd
sub
nop
jno
hlt
jns
mov
js
stc
sub
pop
add
ja
sub
and
lret
add
int3
lahf
push
push
es
repnz
aas
lea
cwtl
jno
mov
mov
sbb
add
mov
pop
cmp
pop
push
bound
push
aad
xchg
loopne
jp
or
mov
jp
inc
out
xchg
adcl
lock
adc
or
and
popf
sbb
ret
sub
adc
mov
mov
dec
scas
dec
test
fidivs
aam
loope
adc
xchg
inc
es
pop
addr16
scas
cwtl
jns
and
int3
lods
inc
decb
push
in
cmp
shrl
pop
outsb
add
movsb
mov
sub
lds
mov
add
pop
xor
push
pop
mov
pop
fwait
test
mov
lret
popf
xor
dec
and
xchg
mov
jns
call
or
cmp
mov
mov
xchg
sub
jmp
mov
xor
push
shrl
lea
sbb
popf
xor
std
pop
scas
cs
dec
dec
adc
cwtl
mov
fnstcw
or
adc
pop
dec
das
jns
sti
xchg
mov
dec
in
rcrb
mov
jmp
add
mov
push
cltd
cmpsl
ds
fbstp
adc
xchg
sub
jnp
xor
add
jns
push
test
sbb
cmpsb
ja
mov
inc
or
and
xor
pusha
or
lock
imul
pop
mov
enter
lret
imulb
jl
je
pushw
mov
mov
xor
rcrl
inc
mov
inc
cltd
xchg
pop
lea
enter
or
movsb
pusha
lcall
andl
sub
mov
in
xor
jae
ret
test
enter
sbb
loopne
xchg
insl
jle
or
fadds
xchg
into
mov
dec
sbb
inc
divb
adc
xchg
out
subb
xor
fs
outsl
addr16
or
ret
bound
add
outsb
cmp
mov
mov
in
pop
lods
add
lods
sbb
add
pushf
adcb
mull
mov
cmp
ds
push
sbb
mov
shl
cs
cltd
or
lcall
push
test
lcall
test
lock
sub
mov
xlat
push
outsb
bound
aas
xor
out
andl
sub
es
mov
repz
sbb
es
scas
loope
dec
aam
clc
aas
sbb
andb
out
psubusw
add
repnz
mov
sahf
aas
call
jnp
cld
mov
fdivrl
repnz
and
mov
mov
dec
adc
mov
mov
and
jo
popf
mov
daa
fcoml
push
adc
and
mov
xchg
xchg
mov
in
add
jp
or
out
enter
dec
cmp
inc
jae
push
adc
or
mov
shll
pop
mov
mov
mov
nop
xorl
adc
sbb
setl
lds
out
fistpl
mov
lods
jmp
nop
and
outsb
lock
pop
imul
push
jo
pop
push
test
lock
pop
push
pop
mov
mov
fcoms
push
enter
push
rcll
scas
cs
loopne
cmp
jnp
das
stc
add
jp
ret
cmc
xchg
loope
or
cltd
sbbl
gs
xchg
daa
lods
call
out
mov
daa
add
les
adc
sbb
cli
cmovnp
inc
cmp
test
pop
std
loopne
dec
pop
stc
imul
loopne
int
stos
std
fildll
push
fistl
mov
cltd
cs
sub
mov
sub
dec
in
loope
fcomps
sub
outsb
mov
push
shrl
add
push
icebp
in
jo
xchg
cltd
lods
jne
neg
inc
mov
enter
lea
mov
aaa
lcall
movl
and
dec
mov
inc
lea
cmp
pop
sub
icebp
mov
mov
pop
pop
jns
lods
rcrl
xorl
pop
cs
orb
or
lahf
iret
jnp
out
daa
mov
mov
xchg
fisttpll
jb
xor
dec
pop
mov
xchg
sbb
cld
shl
sbb
insl
rcrb
aad
das
xchg
movq
cmpl
xor
cmpsl
into
test
mov
inc
inc
shlb
arpl
mov
pop
dec
xchg
push
push
xchg
leave
adc
or
cmp
xchg
push
arpl
cmp
pop
insb
or
add
push
pop
cmp
pop
mov
adc
shll
push
mov
sub
mov
in
dec
jmp
popf
js
dec
sub
push
or
rorl
into
sub
hlt
sub
mov
fs
sbb
testl
xor
jmp
sbb
repnz
xchg
sub
test
sbb
jb
xchg
jnp
mov
pop
ljmp
stos
mov
jp
pushf
jmp
jae
out
or
popa
shr
lds
jp
sbb
xchg
inc
hlt
xchg
xchg
dec
in
iret
xor
stc
add
sub
hlt
repnz
rcll
idivl
sqrtps
xchg
out
jbe
and
test
adc
push
loopne
cwtl
cmp
in
mov
dec
inc
dec
stos
leave
mov
mov
test
jae
jge
push
fs
fcomps
mov
xlat
ss
or
jne
inc
add
notl
xchg
loope
lea
mov
dec
pop
sub
es
jnp
pushf
or
mov
xlat
repz
in
jb
push
pusha
jb
dec
cmp
test
movb
mov
pop
cmp
push
fisubrs
data16
jne
cmp
inc
dec
ret
push
fidivrl
enter
cli
dec
push
cmp
outsl
fcompl
jo
shll
cs
sub
inc
inc
sar
lods
mov
ds
pop
jb
mov
cmpsl
icebp
jge
inc
pusha
add
cmc
scas
push
cld
xor
hlt
dec
filds
push
fdivrl
add
xchg
imul
jecxz
pop
mov
js
stos
iret
lods
cmpsl
lock
loopne
xor
fs
daa
adc
call
fstp
push
lods
sub
int3
test
xchg
xor
push
rcrl
mov
popf
jb
push
loopne
adc
inc
leave
and
jae
push
adc
adc
ficompl
jno
cmpb
into
or
xchg
jge
push
fwait
mov
cltd
pop
adc
jnp
pop
jg
pop
adc
movsl
into
dec
lea
fisubl
cmpsb
xor
fcompl
stos
or
cld
sub
and
mov
push
adc
mov
es
fisubl
add
dec
jo
and
lds
loopne
jecxz
call
mov
ljmp
aad
or
sahf
dec
test
loope
aas
dec
jge
arpl
mov
repz
xor
and
add
loop
inc
dec
jge
xorb
out
or
sbb
fwait
or
xchg
insb
stos
addr16
xor
adc
cwtl
in
stos
loope
sub
inc
mov
enter
pushf
sti
cmp
test
pushf
cwtl
jno
jo
je
cwtl
xor
mov
pop
loop
sub
aas
fdivrl
add
andl
add
out
xor
xor
mov
mov
std
add
pop
test
sbb
inc
adc
xchg
aaa
movl
repz
and
cmp
push
sarl
inc
adcl
pop
pavgw
xchg
sbb
mov
movq
call
in
mov
mov
push
xor
add
and
fmulp
mov
mov
inc
icebp
gs
cmp
xchg
mov
xchg
and
adc
lahf
sub
adc
or
ds
movsl
bound
push
popf
sub
nop
jo
sub
dec
push
sub
insl
pop
dec
xlat
insl
rorl
pop
mov
sub
adc
decb
add
xchg
mov
cmp
lods
aaa
in
ds
adc
fisubrl
mov
ljmp
mov
inc
repnz
mov
adc
sbb
sbb
sub
je
xlat
es
xchg
pop
pop
loopne
cld
out
repnz
jnp
or
xor
or
insb
rolb
data16
inc
aad
sub
lret
cmp
movl
lahf
sbb
jbe
and
adc
js
sub
fistl
rep
popf
aam
mov
shl
pop
ja
add
jae
and
mov
das
pushf
xor
or
mov
loopne
sahf
test
roll
les
mov
or
addr16
lock
nop
negb
xor
or
sub
sub
rcrl
jbe
js
orl
adc
clc
cmp
or
or
imul
outsl
push
rorb
fsubrs
test
cltd
xchg
mov
xor
or
adc
std
call
cmpsl
nop
jmp
mov
call
xchg
jg
fstpl
scas
jl
dec
sub
lds
xchg
jmp
push
mov
mov
push
cmpsl
jns
xchg
and
test
adc
pop
inc
in
inc
aas
fistpl
dec
push
or
sub
mov
xor
add
inc
cs
lahf
pop
cmpsb
test
sub
inc
mov
push
mov
adc
aas
cmpsb
mov
adc
je
inc
arpl
pop
bound
cmp
cmp
mov
dec
add
enter
cmp
imul
ja
dec
cmp
js
dec
or
icebp
mov
sbb
int
adc
mov
repz
rol
mov
repnz
xchg
add
pop
jnp
cmp
iret
rcrb
push
xchg
lret
pop
sbb
adc
icebp
jle
insb
pop
cmp
sbb
xchg
dec
sti
aam
jb
pop
sbb
pushf
test
pop
ret
shlb
mov
or
in
popf
loop
repnz
pop
xchg
fsubrl
xorl
adc
sbb
fldcw
xor
xchg
xchg
ljmp
cwtl
lock
add
loopne
cmpsb
in
mov
mov
test
fs
dec
adc
xor
and
mov
test
movsl
mov
xor
jnp
insb
xchg
test
inc
outsb
xor
jns
jl
mov
incb
mov
aam
mov
mov
inc
mov
scas
jb
into
mov
divl
mov
dec
insb
fsubrs
mov
lods
shll
das
pop
lods
xor
push
inc
jp
loop
sti
imul
les
mul
js
leave
push
adc
call
sysret
rcr
in
cmp
test
lds
mov
insl
pop
movl
rorb
insl
pop
inc
mov
sub
xor
insl
xor
mov
adc
leave
add
gs
pop
add
int3
add
repz
sarl
ja
pop
in
addr16
sbb
pop
sbbl
rcr
call
jb
divb
in
in
mov
les
and
filds
push
lds
jmp
cmp
sahf
sub
cmpsl
loope
lea
int3
adc
mov
mov
outsl
xchg
insl
jns
sbb
mov
hlt
rorb
dec
or
mov
mov
xor
insb
mov
mov
call
sub
cmp
stos
mov
call
bound
and
les
orl
js
mov
and
data16
test
lock
mov
cmp
xor
decb
fdivrl
cmp
inc
mov
mov
bound
iretw
pop
sub
pusha
or
mov
dec
les
mov
iret
gs
cmp
outsb
ja
mov
in
pop
mov
jp
insb
pop
scas
sub
dec
jbe
pushf
shll
pop
jg
adc
xlat
xor
mov
add
fs
jl
mov
nop
insl
ja
jmp
mov
icebp
mov
cmp
ds
fucom
in
xor
pop
adc
jle
cli
sub
lea
push
arpl
or
sbb
jo
jo
mov
pop
outsl
adc
xor
push
dec
xor
cwtl
push
mov
loope
pop
cs
mov
es
and
ljmp
nop
pop
mov
sarl
pop
stos
mov
xorb
add
inc
add
pop
cmp
dec
int
mov
incl
add
ret
jnp
push
jno
pop
call
or
mov
shll
inc
fbld
or
sahf
cmpsl
insl
mov
mov
js
fmuls
into
mov
in
cmp
jbe
scas
sub
cmp
dec
or
notl
adc
cld
jmp
and
roll
out
cmp
roll
stos
lret
pop
and
and
lods
lcall
push
das
addr16
pop
and
insl
nop
xchg
fisttps
push
ss
mov
stos
jecxz
cmp
cmp
ss
adc
decl
cmp
aad
int3
cmp
in
sbb
ljmp
insb
cmp
lds
movsb
fcmovu
rorb
dec
lret
cli
rcl
iret
imul
cwtl
mov
and
fstpl
sub
jecxz
rcr
add
cs
cs
pop
pop
add
roll
pop
xor
xchg
dec
rol
dec
xchg
les
repnz
cld
pop
rclb
outsl
sub
repnz
jl
or
ss
xchg
cwtl
cltd
sar
shl
fcmovu
das
je
sbb
jg,pt
data16
loop
mov
popa
jnp
xchg
out
sub
push
repnz
adc
pop
adc
sub
and
jg
out
inc
xor
int3
inc
dec
pushf
inc
ljmp
mov
lock
stos
and
fistpll
cmp
mov
daa
xor
insb
test
add
lret
mov
push
std
adc
aam
shl
sbb
pop
adc
cmp
pop
xor
add
xor
mov
andl
pop
and
call
dec
and
fiadds
push
ja
push
push
fwait
out
addr16
push
je
inc
jne
dec
xor
push
add
and
pop
mov
xchg
fiaddl
test
mov
les
jecxz
sbb
pop
mov
and
jp
cmp
imul
cmpl
mov
pop
je
pop
call
test
repnz
push
sarb
hlt
out
xchg
ret
ja
dec
dec
adc
and
leave
das
aad
inc
pop
xchg
popf
mov
ret
jle
and
ret
push
and
and
push
sbb
lret
les
fstpl
mov
scas
fcmovne
jg
or
xchg
lds
scas
push
les
fimull
shrb
adc
fucom
add
xchg
test
out
lock
add
push
cmp
fimull
xor
out
das
dec
and
pop
add
not
mov
stos
mov
jp
push
xor
xlat
cltd
jne
mov
sarb
sarl
jmp
in
aaa
adc
js
cmp
adc
das
sarb
add
out
test
rcrb
in
repnz
cwtl
mov
test
mov
mov
out
jne
jo
push
test
shlb
pop
dec
sub
cmpsb
pop
aas
mov
int3
add
in
out
add
add
das
pop
pop
test
xlat
pop
test
xlat
adc
and
pop
inc
sub
aaa
cmpsb
dec
loop
push
pop
sti
add
sbb
cltd
cmpsl
pop
into
cmp
xor
push
xchg
xor
nop/reserved
sbb
jbe
fisttpl
cmpb
sahf
andl
imul
and
rcpps
push
cmc
les
arpl
xor
sbb
movsl
adc
stc
lret
mov
inc
lods
xor
mov
pop
sub
sub
lret
mov
mov
adc
pusha
sbb
mov
xor
test
mov
jb
cwtl
or
mov
adc
cmc
movsb
outsb
or
lcall
ss
and
shl
clc
jmp
cmp
fsubrp
cmp
fstpl
jae
and
xchg
test
outsl
and
cmp
repnz
jnp
rcrb
jmp
cmp
aaa
arpl
dec
push
mov
and
rcrl
sbb
aam
xor
movsl
std
lds
mov
mov
js
int3
fbld
ds
test
mov
inc
out
repz
mov
mov
mov
int3
jne
outsl
push
pop
nop
enter
push
int3
out
mov
in
shrl
or
and
pop
push
mov
in
dec
mov
ret
cmp
es
sub
mov
mov
jbe
fstps
in
rorl
mov
mov
movsl
xchg
jle
out
leave
je
add
sbb
jg
xorb
inc
sbb
in
insb
pushf
lea
push
mov
es
and
shl
out
inc
cmp
and
sarb
daa
lahf
fs
push
inc
sar
loope
es
jl
std
mov
insl
or
pop
sar
sahf
arpl
jb
cmp
adc
xchg
sbb
inc
hlt
xchg
add
nop
inc
dec
jae
ret
mov
arpl
xor
sub
or
mov
mov
ljmp
push
fucom
pop
sub
pop
cmp
adc
dec
and
out
dec
sub
stos
jae
imul
arpl
mov
and
rorb
jnp
aad
lcall
xchg
mov
sub
es
outsb
aam
sub
adc
lock
ljmp
adc
and
sbb
ds
popf
je
xor
test
push
mov
or
dec
mov
jo
xchg
mov
jo
xlat
lods
aad
faddl
std
or
test
shll
add
sbb
dec
adc
ja
sub
repz
fstps
std
pop
rolb
mov
lret
fldt
add
popa
jle
idivl
xchg
inc
mov
fimuls
in
cs
aam
fldcw
fcomps
cmp
xchg
xchg
or
mov
inc
out
orl
or
jns
pop
xor
jnp
cwtl
jmp
mov
fdivrl
cmpl
adc
subl
add
cld
out
and
jle
enter
cmp
scas
fisubs
fisubl
aad
clc
push
icebp
lods
mov
imul
imul
sbb
cmp
mov
mov
mov
rclb
jo
xchg
pop
pop
jns
cmpl
rolb
adcl
xor
stos
adc
lcall
movsb
cmp
and
cmp
ja
mov
sbb
rclb
jecxz
das
sub
jo
ds
mov
ror
xor
sub
iret
es
cs
xchg
dec
pop
pop
ret
int
cmp
cwtl
ss
mov
mov
pop
xlat
ss
sti
jle
lret
xchg
lods
add
fistps
pop
insl
mov
and
popl
add
mov
popl
daa
pop
pop
sbb
mov
leave
sub
js
push
lea
scas
or
cld
enter
call
das
push
or
xchg
lea
int3
push
cmp
adc
mov
cmp
cmc
pop
mov
or
in
push
sub
push
gs
cmp
xchg
std
dec
mov
xchg
movsl
sbb
gs
aaa
loopne
dec
pop
xor
in
cmp
xchg
jge
movsl
push
cld
jnp
movsb
icebp
xlat
mov
xchg
orl
aam
nopl
dec
mov
pop
cli
test
and
jne
dec
fsts
shrd
lds
inc
test
mov
out
repnz
call
lret
mov
pop
add
and
inc
mov
ss
push
sub
mov
sub
cmp
adc
inc
pop
out
or
daa
insl
adc
pop
lahf
aaa
inc
test
out
push
fstpt
adc
push
loopne
push
inc
mov
cmp
xor
mov
pusha
or
xor
stc
mov
xor
or
test
ret
push
mov
and
int3
jns
xor
out
cmpsb
popf
flds
inc
push
push
or
and
cld
xchg
int
sbb
inc
mov
inc
out
out
and
fwait
cmp
push
jg
xchg
insl
mov
push
sbb
and
daa
cs
xchg
cld
stos
push
mov
mov
xchg
cmpsl
stos
cmpsl
xchg
orb
orb
std
and
mov
cli
pop
jb
sub
jne
mov
dec
cmpsl
inc
pushf
fisubrs
dec
pop
mov
je
pop
xchg
adc
jbe
daa
sub
ds
pop
sahf
fcomp
lods
ret
inc
fistpl
dec
popf
leave
cs
int3
call
push
outsl
leave
imul
dec
sbb
dec
pop
pop
loope
int3
cltd
data16
cmp
movsb
pop
jp
lods
push
inc
sbb
adc
out
xchg
sahf
or
sbb
push
or
das
gs
fstp
push
movsl
mov
aam
xor
cmpsl
inc
lods
lahf
ds
pop
pop
rol
jl
cmc
imul
or
dec
mov
push
leave
inc
imul
pop
sub
sub
push
add
pushf
jns
les
cwtl
nop
mov
jns
aad
dec
adc
push
jnp
sti
push
dec
test
and
and
sub
push
shll
aam
cld
push
adc
mov
dec
adc
and
jnp
loope
pop
dec
mov
push
ljmp
imul
scas
adc
std
mov
inc
mov
test
cltd
aas
sub
ja
cmp
cmc
sub
out
addr16
aaa
and
fsubrs
push
cmp
sub
les
negl
fidivs
aad
inc
jns
add
dec
sahf
aaa
fwait
adc
setl
dec
gs
xor
out
sti
pop
xchg
ret
cmpsl
inc
jns
out
fiaddl
cli
mov
push
push
shrb
outsb
push
jo
jmp
movsb
into
xchg
mov
push
jo
bound
in
xor
pop
sub
in
nop
cmp
lds
cmp
roll
adc
data16
aam
push
cmpsl
cmpsb
outsb
fisttps
adc
push
repz
inc
adc
cmp
scas
enter
push
sbb
jmp
hlt
mov
jg
addr16
shrl
rcrl
inc
cwtl
fsubrl
pusha
sub
lock
mov
xchg
push
mov
jbe
rcr
mov
pop
fs
jecxz
stc
repnz
rclb
lcall
js
shlb
pop
push
outsb
jnp
xchg
loop
imul
imul
dec
das
stc
sarb
out
mov
pop
adc
and
ljmp
gs
and
fucomip
mov
push
inc
pop
jae
mov
fimull
call
pushf
outsl
mov
cmpsl
mov
jae
mov
aas
mov
mov
inc
lcall
or
and
fs
incb
inc
sub
adc
cmpsb
lcall
xor
pop
lret
jmp
pop
inc
mov
arpl
imul
mov
outsl
push
sbb
inc
sbb
mov
dec
mul
jae
nop
imul
out
cwtl
nop
ret
es
add
mov
jae
xor
dec
lcall
xchg
stos
pop
sbb
pop
out
fisttpll
mov
dec
add
lods
xchg
mov
add
jl
test
cltd
adc
sub
cmp
out
inc
sub
je
out
mov
add
pop
fs
pop
call
xchg
cwtl
mov
aas
into
dec
leave
mov
pop
imul
in
jnp
push
insl
cltd
out
xchg
jp
jl
cld
imul
mov
dec
add
or
push
cs
pushf
lahf
imul
push
sbb
mov
idiv
add
jle
push
popa
sub
add
pop
ret
and
jg
xchg
and
je
bound
int3
ljmp
xchg
cld
outsb
ja
cmpb
pusha
pop
popf
push
pop
fs
push
and
jns
int3
sbb
xchg
int3
jns
out
cltd
push
fs
add
xor
mov
mov
mov
xchg
ss
cwtl
lcall
mov
fxch
imul
jmp
xor
jmp
movsb
xor
in
sbb
in
aam
and
data16
push
fsubrl
movsl
in
pop
call
jb
enter
inc
mov
es
icebp
cmpsb
test
fwait
mov
es
aam
or
dec
add
test
mov
inc
jb
out
movsl
or
popf
dec
inc
mov
aas
sbb
jle
or
aaa
shl
loop
popl
in
lds
mov
mov
adc
or
shrl
int
lcall
lods
call
xorl
push
in
mov
jnp
xor
shr
dec
mov
rolb
outsb
stc
pusha
repnz
dec
jp
cltd
pop
scas
mov
test
pop
hlt
fsubs
inc
das
sub
mov
cmp
xorb
jecxz
in
aad
jecxz
popa
push
xor
inc
ret
add
jo
imull
loopne
mov
roll
mov
xchg
adc
jmp
std
call
cmp
addr16
sub
inc
adc
jno
dec
aam
jp
dec
mov
inc
pop
mov
sbb
shr
fstps
pop
and
adcb
xchg
adc
inc
fisttpll
repnz
jnp
push
sub
call
or
mov
cmpb
jmp
xor
int
sbb
jns
or
cmp
test
sbb
in
cltd
int3
inc
lds
push
stos
insl
movsb
xchg
clc
add
add
lret
and
movsb
lods
add
dec
out
lock
fsin
xor
pcmpgtw
testl
call
adc
jle
imul
sbb
lret
jl
cld
mov
sbb
pop
dec
lock
sub
sbb
insb
adc
shlb
orl
add
jb
hlt
push
data16
subl
push
dec
test
enter
push
jnp
adc
or
mov
aaa
pop
sub
sub
das
cs
fstps
add
mov
arpl
sub
jle
jnp
and
or
and
testb
adc
rep
cld
cmp
xchg
orl
push
fldl
out
inc
fwait
push
mov
adc
mov
mov
ret
pop
push
cmpsl
testb
rorl
ret
pushf
lret
pushf
in
cmp
jo
jl
aad
cmp
jne
mov
test
cmc
ss
xchg
loope
loop
lcall
xchg
lea
inc
xor
xlat
push
je
fmull
rcll
dec
add
insl
in
push
addb
mov
mov
aad
sub
xor
push
jg
mov
leave
ljmp
xchg
cwtl
js
lret
mov
outsl
add
or
cmpsb
jnp
pusha
in
roll
cwtl
inc
jns
insb
dec
push
lcall
outsb
push
scas
mov
fcoml
sbb
jg
cwtl
jge,pt
jbe
or
push
fwait
lcall
mov
idivl
dec
dec
stc
lret
inc
out
bound
or
dec
mov
into
push
pushf
pop
or
fisubl
imul
fwait
lds
aas
xchg
inc
and
imul
adc
sub
cwtl
lods
or
push
cwtl
pushf
repnz
mov
test
mov
arpl
sti
rep
mov
add
adc
push
orb
xchg
sbb
jmp
jmp
aad
cltd
hlt
cmp
loope
jecxz
mov
ljmp
mov
stc
xorb
mov
add
jl
aam
movsb
call
fwait
movsb
or
sub
fidivrl
jbe
pop
xorb
out
adc
xchg
push
jae
test
sbb
sbb
mov
and
dec
jae
cmpsl
mov
xchg
sbb
rcrb
sbb
push
es
mov
cs
jne
dec
es
scas
shrl
rolb
cwtl
sub
lock
imul
fs
xchg
call
mov
xor
xor
mov
loop
jno
xchg
add
sub
pop
mov
inc
dec
movsl
mov
insb
stos
pop
lret
bound
xchg
adc
mov
sub
cmp
mov
lds
inc
xlat
add
and
and
mov
inc
fdivs
xchg
stc
fnstenv
mov
out
pop
sti
lds
testb
out
mov
roll
test
adc
in
cmp
mov
inc
fsubp
and
gs
add
aaa
jbe
test
les
push
test
adc
pop
mov
or
movsl
aad
rolb
dec
punpckhbw
add
xchg
sub
xchg
mov
mov
ret
pop
mov
imul
and
cltd
gs
shrl
xchg
stos
rcrl
sub
or
xchg
inc
xlat
xor
push
jmp
jns
xor
push
cmp
push
sbb
mov
sub
mov
out
nop
loope
xor
mov
dec
and
mov
bound
xor
lahf
mov
push
fnstcw
lea
cli
fdiv
stos
or
cld
adc
enter
sbb
dec
cmpsl
push
outsb
push
sub
jb
and
rorb
arpl
test
movsl
les
loope
bound
mov
clc
xchg
xchg
daa
rolb
loope
jo
stos
add
enter
sub
inc
xorb
repnz
in
push
lods
mov
lret
bndldx
add
lock
movsl
cmp
pop
and
data16
pop
div
dec
xchg
imul
js
cmp
or
add
aaa
cmp
dec
cmpsl
xchg
in
sbb
test
enter
and
mov
iret
and
jl
pop
jp
mov
push
and
insb
xchg
stos
jg
sbb
stos
outsl
push
sbb
enter
ja
adc
movsl
cmp
fwait
call
jmp
dec
jecxz
loopne
mov
pop
das
add
out
jl
scas
inc
xchg
push
jge
test
mov
pop
dec
out
pop
inc
clc
push
jg
dec
popa
jbe
or
rcrl
add
inc
ds
sbb
mov
nop
daa
push
xor
inc
ja
cmp
or
sbb
aam
das
rclb
popf
xchg
bound
xchg
mov
pop
push
hlt
cld
xchg
lret
aaa
mov
sbb
xchg
or
nop
bound
xchg
sbb
xchg
xchg
jno
ret
mov
mov
scas
out
xchg
mov
or
fidivl
xor
mov
lock
into
testl
imul
or
shlb
ss
daa
lret
bound
insb
sbbl
cli
inc
fucomp
scas
lods
inc
and
jb
adc
push
out
ljmp
or
sub
pop
jge
nop
jnp
lea
movsl
sub
inc
jnp
cmp
cmp
in
push
pushf
xor
data16
ds
xchg
out
lret
mov
cmp
inc
out
je
or
sbb
pop
or
sbb
and
sub
fbstp
dec
jmp
jg
push
out
lahf
mov
shrl
dec
loopne
repnz
and
jle
inc
stc
jne
inc
cwtl
add
push
ljmp
mov
fidivs
rcrl
xchg
outsb
int3
xchg
cmp
add
sbb
cmp
and
and
and
xchg
lods
repz
pop
dec
dec
xchg
shlb
addr16
mov
bound
fistpll
fnstsw
xor
sbb
cmp
xchg
daa
fadds
in
or
dec
test
sub
xor
jl
add
xchg
cli
fdivr
loop
inc
imul
jns
ss
and
ljmp
add
adc
jl
cwtl
mov
es
rorb
popf
popf
das
xchg
sub
xor
dec
sbb
inc
dec
inc
add
iret
subl
sub
ss
mov
lock
xchg
data16
repnz
stos
scas
ljmp
cwtl
out
push
enter
sbbl
adcl
jae
rcl
fsts
out
cld
bound
dec
idivl
fnstcw
or
into
gs
and
xchg
ret
or
jnp
and
xchg
pop
inc
fmull
in
add
imull
inc
fisttpll
fsubrs
xchg
add
lret
mov
xor
int
adc
int3
arpl
aam
xchg
dec
jecxz
or
jp
testb
pop
aad
popl
out
xlat
decb
xor
mov
mov
daa
and
mov
push
xchg
pop
cmp
jbe
or
jge
sbbl
repz
cld
repnz
pop
sbb
pusha
neg
inc
push
out
jno
imul
lcall
sub
mov
sub
jo
cmp
mov
ja
add
push
sbb
in
xor
inc
xor
pop
lock
or
or
sub
xor
daa
fbstp
xor
xor
aaa
cbtw
das
push
das
int
pusha
xchg
xchg
sub
jnp
push
lods
dec
es
mov
test
jb
and
repnz
xchg
mov
or
shrl
cmp
movsl
fisttpll
sub
adc
sub
int3
xchg
rolb
jns
mov
xchg
jb
xchg
leave
stc
nop
cli
popa
inc
fcoms
cmp
cwtl
jl
or
cmp
pop
aas
jbe
aas
sti
xchg
scas
push
sbbl
sbb
popa
js
push
pop
lds
les
push
out
pop
push
out
xchg
adcb
xchg
sub
cmc
insb
add
jecxz
les
mov
and
xor
insl
add
inc
inc
xlat
xor
in
inc
jne
cmp
lods
inc
push
dec
mov
movsl
dec
testb
dec
cmp
aas
pop
into
gs
dec
jns
aas
aad
les
push
mov
inc
pop
mov
data16
insl
add
gs
out
pop
out
cmpsb
pop
pushf
xor
dec
orl
cmp
inc
jbe
xor
cmp
lods
fiadds
inc
and
sbb
xchg
retw
pop
cltd
ljmp
add
call
outsl
inc
mov
adc
cmp
lahf
popf
fbstp
enter
push
rcrl
ja
adc
pushf
xor
dec
or
xor
dec
cwtl
xor
movsb
ret
hlt
cmpsl
sub
push
out
out
xchg
push
sbb
insl
mov
movsl
dec
out
mov
mov
sub
lea
xor
nop
addr16
nop
sarl
mov
dec
out
stos
cmp
fsubl
loopne
cmp
mov
push
lcall
mov
movsl
pop
inc
mov
lock
aaa
nop
daa
cmpsl
pushf
add
adc
pop
dec
out
xchg
inc
xlat
mov
jp
cld
dec
jecxz
mov
mov
cmpsb
pop
mov
and
xor
sub
adcb
test
popf
mov
clc
jo
cwtl
das
fidivs
push
arpl
sub
cmp
mov
aad
push
xchg
insb
add
dec
lock
cli
xchg
dec
aas
jae
scas
xchg
movsb
cmp
scas
in
test
adc
inc
pop
jo
push
fwait
loope
int3
xchg
lock
pop
jl
dec
dec
outsl
push
cmp
std
xchg
popf
push
mov
add
lods
clc
and
sbbl
or
cmc
mov
sub
pop
push
adcb
and
jg
lods
js
fdivrp
es
or
mov
and
jg
mov
inc
fcmovb
pop
fbstp
sbb
sub
sbbb
lahf
fidivs
adc
stc
inc
aas
es
lahf
rcrl
fbstp
or
pop
nop
daa
push
and
popf
test
cwtl
das
mov
mov
push
insb
inc
imul
pop
popf
addr16
mov
test
inc
xlat
inc
repz
outsl
push
dec
cmp
push
dec
xlat
fbstp
sahf
adc
sbb
lods
inc
dec
sbb
adc
repz
adc
out
xor
sub
xor
mov
xchg
sub
ret
add
push
aas
pop
shlb
ds
or
mov
inc
and
sub
fidivs
lcall
xchg
sub
xchg
cmpb
repz
test
push
pop
loop
push
mov
loop
out
dec
rclb
pop
sahf
xchg
stc
or
mov
mov
cmpsb
cmp
popf
pop
cmp
loopne
push
aam
lret
sbb
stos
mov
or
lret
push
movsl
sti
mov
mov
push
xor
imul
in
orl
bound
xchg
sub
clc
shrl
rolb
add
mov
ret
pop
rcl
insl
add
in
sbb
pop
dec
in
ljmp
pop
sbb
dec
out
aam
pop
enter
cld
or
jnp
mov
sbb
xlat
push
xor
cltd
imul
push
pusha
les
mull
sbb
adc
add
inc
jnp
ljmp
cmp
jg
scas
sbbl
out
adc
pop
xor
dec
inc
and
je
cli
xchg
add
push
mov
mov
jnp
stos
testb
sub
pushf
xor
add
mov
cmpsl
ds
lods
push
in
fimuls
mov
cmp
jp
push
repnz
shl
xor
sbb
stos
mov
fwait
xor
sarb
cwtl
cmpsb
cmp
es
rolb
mov
cltd
mov
xsha1
cmpsb
iret
or
cmp
ljmp
ret
lret
bound
mov
pop
hlt
loopne
mov
inc
cli
call
divl
mov
fsubp
jb
shlb
mov
sbbl
daa
iret
pop
repnz
mov
mov
popf
xor
mov
lds
mulb
out
xchg
shrl
cmp
arpl
inc
fxch
je
or
jnp
or
push
lcall
xor
pushf
mov
jne
push
or
fldl
and
in
sub
aaa
into
fimuls
pushf
xor
aam
push
enter
inc
or
jp
inc
jns
inc
insl
adc
jo
jo
mov
shll
adcl
mov
xchg
ljmp
dec
out
cmp
stc
mov
movsl
cld
xchg
lods
loopne
and
cmpsl
ds
and
mov
pushf
cmp
into
sbb
jnp
add
jle
les
jb
push
and
pop
mov
outsl
adc
or
inc
add
xor
sub
adc
mov
movsb
into
xlat
sbb
or
lret
lcall
mov
mov
xchg
sub
xor
lods
cmpsl
sbb
lds
out
push
xchg
shlb
push
adc
push
mov
jo
mov
movsb
jmp
in
fidivl
push
push
jmp
rcrb
out
test
push
movsl
mov
mov
aam
sub
sahf
pushf
sub
pop
fucomip
or
push
pop
sahf
jge
mov
fisttpll
adc
push
pop
xor
mov
movsl
rcrb
add
inc
fprem
inc
insb
add
popa
clc
dec
jge
xor
lods
test
fidivrs
mov
dec
adc
mov
mov
clc
mov
or
scas
cmp
ds
jbe
ss
nop
cwtl
pop
icebp
lret
out
in
jp
pop
pop
ja
cmp
xchg
sub
lea
scas
inc
fsubp
shrl
add
xor
repnz
in
test
movsb
pop
lcall
and
out
inc
inc
fidivs
push
rclb
sbb
out
jg
sbb
cmpsb
cmp
popf
xor
ret
pop
mov
jge
loopne
je
sub
xchg
pop
aaa
sti
xchg
imul
mov
sarb
rolb
fnsave
into
push
and
push
das
push
in
pusha
jne
push
cmpsl
xorl
cli
aam
sub
sbb
dec
dec
daa
scas
inc
pop
outsl
shrb
jp
lods
ret
cmc
scas
jmp
pop
out
xchg
sub
pop
or
imul
dec
loopne
mov
imul
clc
cli
xchg
sub
movsb
cmp
stos
inc
dec
jg
aad
jp
fs
loopne
mov
sbbl
mov
sbb
leave
inc
jns
push
stos
test
divl
or
std
sti
xchg
das
cmc
mov
imul
aaa
into
mov
mov
cli
xchg
test
ss
lods
pop
sahf
pop
xor
pop
fs
adc
mov
inc
xlat
add
dec
loope
push
lahf
cmp
inc
fcoms
mov
sbb
sub
test
movsb
shrb
add
scas
ss
testl
stc
jnp
jmp
cld
xor
out
mov
test
out
stc
nop
daa
das
or
aaa
xor
push
jae
arpl
mov
jmp
lahf
sub
mov
bound
inc
fldt
mov
sbb
es
sbb
in
inc
and
lea
popf
mov
out
xchg
xor
mov
loope
sub
mov
sub
jge
sbb
insb
xchg
xchg
mov
add
sbb
mov
or
add
pusha
int3
arpl
int
or
sahf
call
es
ja
pop
scas
subl
lahf
ret
mov
fidivs
mov
lods
daa
loop
pop
adc
pop
mov
dec
and
dec
in
clc
xor
jmp
out
xchg
jmp
sbb
lea
lods
inc
mov
sub
add
pop
aad
mov
decb
das
jge
lahf
push
stc
nop
xchg
mov
mov
int3
add
jnp
das
mov
rorb
lahf
rep
add
call
leave
pusha
mov
jne
stos
inc
sub
jne
pop
mov
push
mov
in
test
and
pop
aas
mov
lds
data16
lcall
imulb
add
mov
and
push
insl
xchg
stos
inc
or
gs
xchg
sub
fucomp
test
adc
shll
lods
inc
imul
push
in
mov
mov
imul
sub
fnstenv
xor
mov
loopne
mov
xor
mov
imul
mov
jg
repz
dec
ds
xor
xchg
imul
fwait
fwait
std
xchg
or
fsubrs
cmp
lock
and
cmp
sarb
stos
insl
loop
mov
jne
inc
cmpsl
loope
or
mov
fsubrs
ljmp
fiaddl
and
xchg
loopne,pn
ss
adc
insl
or
pop
std
mov
sub
out
icebp
sbb
data16
mov
sahf
xor
xchg
mov
xchg
adc
sahf
xor
cwtl
xor
js
sbb
jl
push
out
test
or
and
xchg
repnz
jle
cmp
xor
jbe
out
mov
jbe
shl
repnz
mov
and
jle
jne
dec
ss
mov
enter
iret
inc
mov
sahf
xor
sbb
dec
cmc
mov
rol
push
repz
pop
nop
ljmp
enter
pop
or
pop
jnp
in
test
jp
dec
push
mov
dec
pop
jns
add
ret
cmp
dec
dec
pop
call
push
fcoml
std
scas
inc
out
call
ret
xor
push
sbb
loopne
lret
aam
push
enter
inc
sbb
testb
xchg
fimull
mov
cmp
lahf
lea
ss
push
fistpll
into
mov
pusha
mov
cmpsb
jae
fld
jp
mov
mov
mov
pop
sub
jmp
shrl
pop
sahf
orl
fwait
xor
mov
shrl
sub
jns
cmpsl
insl
add
loopne
adc
add
cmpsl
xor
and
xchg
mov
popa
lds
jecxz
leave
dec
loopne
mov
out
clc
mov
shlb
pop
imulb
in
int
mov
fidivl
scas
outsl
push
loope
imul
cli
adc
dec
xor
inc
jno
push
in
scas
andl
ljmp
add
inc
insb
add
inc
adc
xor
inc
fwait
inc
mov
cmp
dec
out
dec
pop
repz
icebp
mov
dec
hlt
mov
cmp
xor
xor
mov
shlb
inc
in
sbb
sbb
inc
jecxz
js
es
bound
xchg
jns
mov
std
sahf
mov
push
out
cmp
inc
or
xor
cmp
jae
mov
ss
popf
xor
ja
idivl
or
push
cmp
xchg
push
jae
in
push
out
xchg
outsb
jl
pop
ljmp
fs
sub
ja
sti
xchg
push
jo
insb
mov
mov
js
mov
stc
nop
daa
mov
inc
mov
xchg
aad
push
leave
testl
shlb
mov
test
jne
fsubl
rcl
repnz
imul
mov
adc
push
arpl
pop
cmp
dec
out
cs
add
call
inc
fadd
inc
mov
jbe
out
xchg
int
mov
sub
or
fmuls
mov
out
jl
dec
scas
in
dec
fnstsw
mov
fsubp
jecxz
cmp
fldcw
add
add
dec
test
cmpsl
mov
mov
mov
rorl
movsl
cld
dec
repz
xor
int3
arpl
subl
icebp
fdivl
xchg
cmpsl
push
add
out
das
cmpsl
dec
popa
clc
test
in
jns
loopne
out
jbe
fbstp
fs
cld
lea
shll
or
mov
jg
push
push
imul
imul
lods
xor
aas
pusha
xor
mov
mov
add
push
scas
inc
dec
in
mov
ret
pop
cmpsl
hlt
ret
pop
daa
cmpsl
pop
sahf
push
inc
pop
hlt
jb
int3
arpl
call
inc
mov
push
out
loop
rclb
inc
dec
in
andl
ja
cli
xlat
inc
faddp
in
and
push
pop
jbe
xor
xorb
push
imul
pop
call
cmp
or
shll
push
cmp
inc
cmp
xor
push
mov
mov
mov
test
mov
stos
fimuls
pop
sub
mov
popf
js
scas
inc
shll
xchg
icebp
xor
in
push
call
xchg
jmp
sbb
xchg
sub
pop
scas
inc
dec
outsl
daa
mov
repz
stos
inc
jae
mov
shl
xor
arpl
stos
inc
ja
mov
shl
mov
aam
or
jbe
sahf
cmp
or
lods
inc
sahf
jle
repz
mov
fisubl
mov
stos
inc
inc
icebp
cwtl
das
and
cmp
shrl
pop
ja
imul
outsb
add
int3
sti
adc
xorl
dec
movsb
lods
inc
sbb
icebp
lods
cmp
popa
imul
adc
mov
and
in
nop
mov
call
in
dec
addb
push
repnz
adcb
das
xchg
ss
jno
sub
and
rcl
jg
adc
repnz
jecxz
scas
jg
push
repz
adc
push
scas
inc
mov
jb
jge
cmpsl
cmp
fists
movsl
xchg
or
fwait
mov
xchg
cs
pop
int
pusha
inc
sub
lahf
enter
inc
shrl
mov
mov
sti
mov
adc
jno
lods
inc
outsb
dec
out
lret
cmc
push
in
fnstenv
jb
test
andb
out
sahf
nop
sub
ja
sub
jmp
fnop
or
fildll
test
xchg
sub
orb
mov
mov
test
sub
fldenv
xlat
pusha
cli
fsubrs
add
inc
or
leave
pusha
adc
mov
sub
jl
mov
ficompl
cs
xor
add
pop
decb
out
cld
jb
adc
add
mov
mov
push
cmpsl
ja
adc
dec
dec
in
xchg
int
mov
xor
pop
cmc
pop
repnz
fs
jb
sbbl
add
les
pop
mov
push
sub
jmp
imul
dec
pop
mov
push
jmp
sbb
fs
add
test
jl
mov
cmpl
jle
lods
stos
fwait
xor
lock
test
scas
sbb
stos
shl
or
jecxz
aam
inc
cmc
movsb
cmp
popf
in
test
or
arpl
pop
xchg
fwait
out
or
cs
lock
icebp
sti
xchg
sub
int
xor
xchg
sub
xchg
add
fldcw
mov
cli
or
test
mov
jns
push
lahf
fdivl
clc
mov
and
cmpsl
movsl
ret
add
mov
mov
fimull
sbb
pop
repz
xor
adc
adc
or
ds
in
pop
sbb
xchg
sub
loop
cwtl
das
mov
fnstsw
mov
mov
inc
jle
jle
cld
xchg
je
jge
inc
xchg
mov
pop
jecxz
add
cmpsb
cmp
cld
mov
mov
xlat
dec
out
test
fnstenv
jp
or
outsl
aaa
jne
add
xchg
sub
mov
mov
jnp
sbb
mov
shrl
push
sbb
je
dec
fbstp
sbb
pop
inc
fimull
pusha
pop
fwait
repz
pop
fnsave
fsubrs
sbb
cmp
ret
pop
nop
loopne
lds
addr16
and
fs
add
iret
cmpsl
pop
cmc
out
push
xor
dec
mov
mov
enter
push
lods
mov
insl
sub
jo
push
ret
jl
xchg
xlat
fnsave
xor
and
pop
divb
mov
push
dec
push
adc
cmp
sbb
pop
jns
jge
arpl
clc
xor
xchg
cmp
leave
and
cwtl
mov
pop
sub
push
aas
dec
sbb
subps
rorl
jb
fldcw
pop
pusha
jge
scas
mov
mov
test
filds
cmpsb
inc
fistl
or
jle
out
add
int3
xor
mov
fisubs
iret
lea
loop
dec
loop
add
shll
push
adc
jno
loope
sub
sub
dec
pusha
idivl
lcall
pop
nop
daa
xchg
cld
arpl
ljmp
lcall
sub
jbe
mov
ds
stos
lock
cmp
lret
cmp
ds
sar
xchg
ret
xlat
jno
fidivl
sbb
jb
idivb
add
or
cmpb
into
pushf
cmpsl
ds
jb
nop
subl
fbstp
rcrl
stc
add
out
mov
mov
or
push
pop
nop
or
and
arpl
aam
xor
int3
arpl
lds
mov
rcl
cli
xchg
leave
jbe
xor
xor
iret
cmp
fnclex
jns
adc
lret
aam
aas
adc
ss
test
sub
mov
fsubr
or
lock
loop
cmp
sbb
and
dec
loopne
xchg
mov
cmpsb
int
leave
pusha
pushf
pop
hlt
lcall
lcall
mov
push
popa
lods
inc
push
cli
or
addr16
fnsave
and
lds
mov
lea
jns
scas
loope
and
stos
push
add
jbe
push
add
dec
out
ret
jns,pn
push
imul
test
std
xchg
push
jmp
push
jmp
mov
and
mov
xchg
xor
test
inc
push
test
in
push
in
sbb
ret
pop
mov
sub
jnp
sub
dec
loope
mov
pop
add
das
andb
lods
xchg
sub
xchg
and
inc
xchg
cmp
fidivl
pop
cwtl
das
dec
lahf
int3
arpl
pop
mov
popf
addb
arpl
repz
cmpsb
lea
fcomip
mov
mov
dec
jmp
test
xlat
shrl
lcall
cwtl
add
jbe
lock
xchg
int
or
push
popf
push
sub
jo
scas
and
sarl
cmp
lods
push
lret
inc
push
out
movsl
cmp
and
push
ja
shrl
in
and
arpl
add
scas
inc
fsub
scas
icebp
mov
mov
fiadds
mov
test
inc
xor
sbbb
add
shrl
jp
nop
insb
into
adc
lcall
pusha
lods
and
into
xchg
inc
fbstp
mov
mov
bound
xor
push
dec
jecxz
loop
xchg
sub
inc
pop
vcvtdq2ps
mov
lea
sahf
loopne
lock
mov
sahf
xchg
sub
inc
inc
fdivl
xchg
shrb
pop
iret
dec
jle
vmwrite
test
xor
dec
sbbb
icebp
call
or
shlb
hlt
stos
cmp
ljmp
ss
ficomps
iret
out
or
loop
dec
loope
add
je
adc
pop
pop
pop
icebp
xchg
push
lcall
ja
clc
mov
es
jle
inc
leave
inc
fisttpl
movsb
xchg
jbe
jbe
outsl
cltd
mov
mov
sbb
push
inc
lods
lods
inc
pop
ljmp
xor
add
pop
repnz
addr16
popa
dec
in
jp
adc
jno
jne
lcall
outsb
add
xchg
out
mov
mov
mov
or
mov
push
jmp
xchg
imul
pop
aas
push
out
jle
bound
mov
sbb
cmp
loop
clc
xchg
xchg
pop
cmc
les
jl
pop
or
xor
push
ljmp
jno
loopne
insl
adc
nop
daa
xor
hlt
outsb
arpl
scas
and
rcll
jg
sbb
jb
xchg
cmp
rorl
adc
jb
cs
mov
and
jne
push
push
insl
xchg
pop
gs
mov
and
pop
int
cmp
sub
push
adc
or
pop
movsl
xchg
pop
test
in
clc
jecxz
adc
sbb
dec
ss
xor
and
mov
outsb
push
adc
inc
das
cmc
mov
jge
xchg
adcb
mov
fwait
xor
aam
enter
push
cmp
dec
out
pop
fsubrs
js
add
mov
loop
mov
std
add
inc
push
push
xor
xchg
pop
mov
out
idiv
outsl
push
sub
add
and
push
mov
sarl
push
loop
xor
ds
repz
add
adc
adc
or
nop
es
movsl
cli
mulb
mov
mov
mov
xchg
andl
ss
loopne
or
icebp
fdivr
popf
pop
das
push
addb
jmp
adc
negl
and
fnstcw
test
leave
int
fwait
iret
xchg
fidivrs
in
call
or
cmp
sub
mov
dec
loop
xor
pop
add
addr16
push
out
test
test
mov
push
sti
sub
sub
stos
inc
cmpsb
dec
dec
fistpll
enter
data16
rcrb
out
dec
icebp
test
and
pushf
lahf
inc
mov
mov
leave
adc
inc
ljmp
xchg
cmp
jle
jmp
or
fimuls
dec
dec
dec
shrb
rolb
cmc
mov
aam
stos
add
jle
shrb
jb
ds
pop
int
push
cld
shlb
mov
rolb
fisttps
std
sub
pop
push
pop
je
xor
push
scas
shr
xor
fists
call
mov
iret
aam
das
enter
push
mov
test
imul
add
stc
add
inc
xor
push
movb
pop
sahf
add
out
lock
nop
daa
js
sbb
sarb
test
jbe
inc
dec
popa
clc
cmp
adc
add
sub
inc
add
movsl
cmp
enter
insl
xor
les
push
pusha
incl
out
fs
or
add
in
test
inc
ficompl
scas
nop
aaa
pop
js
incl
dec
xor
sahf
jbe
out
aam
pop
leave
rolb
inc
add
loope
movsb
lret
dec
fsubp
fsubs
lods
mov
test
pop
cwtl
and
jne
aam
daa
xor
jns
fadds
xchg
gs
mov
arpl
pop
jo
lret
cmc
cmp
inc
popf
or
lahf
mov
mov
sbb
mov
nop
push
ret
std
or
pop
clc
loop
adc
pop
lret
xor
push
and
sub
aaa
cli
xchg
inc
pop
sub
imul
test
push
sub
cs
sub
cmpl
or
xlat
pop
aam
inc
inc
mov
iret
scas
dec
scas
add
shr
cmp
in
mov
jp
outsb
xchg
test
xchg
sti
jl
into
dec
mov
cmpsl
push
aam
jnp
daa
inc
jmp
into
imul
mov
fwait
loop
cmpsl
outsb
jns
lahf
scas
ret
dec
fcoml
add
shrb
xor
sbb
call
push
repnz
std
out
cmpsb
mov
xor
je
mov
int
cld
mov
cli
and
xor
out
out
sub
outsl
sbb
hlt
xor
rorl
pop
outsb
ja
addb
add
or
out
xor
add
inc
mov
ss
fiadds
jecxz
mov
and
sub
scas
rcll
dec
inc
fdivrl
int3
inc
movsl
into
sbb
mov
cmp
cmp
int
and
mov
loopne
add
push
clc
popf
jmp
ja
jl
imul
flds
dec
mov
mov
fwait
data16
in
jecxz
addr16
arpl
subb
xchg
mov
lret
or
jge
mov
imul
jge
rolb
cmp
lret
imul
jle
cmovs
bound
jmp
and
xchg
mov
add
ret
xlat
push
jecxz
push
add
adc
cmpb
cli
adc
xchg
adc
mov
test
mov
cmp
out
add
ja
clc
push
addr16
nop
loop
dec
pop
in
xor
or
imul
stc
pop
sub
ss
and
test
pop
cmp
push
add
jo
mov
ret
adc
inc
loopne
or
jno
mov
push
xor
les
into
arpl
and
fstpt
cmp
mov
mov
das
gs
jg
loopne
inc
lock
daa
popl
pop
ret
ds
loop
daa
pop
cld
cmp
dec
or
xchg
and
out
icebp
clc
mov
roll
lds
bound
push
pop
stos
rolb
cmpsb
aam
xchg
mov
ljmp
dec
repz
outsl
insl
cltd
roll
mov
into
fs
pop
idivb
test
aaa
inc
adc
flds
cmp
dec
cmp
in
pushf
scas
sbb
scas
push
inc
and
jns
mov
mov
popf
sbb
push
iret
loopne
xchg
mov
hlt
stos
inc
lds
pop
rorb
sub
xchg
pop
call
adc
aaa
xchg
inc
or
push
cmp
mov
adc
movsb
addr16
ds
jmp
add
imul
push
dec
cmp
cmp
movsb
add
fisubs
lcall
rcll
sbb
and
xor
and
add
stc
or
adc
push
xor
repz
pop
shrl
enter
rcl
inc
shll
stos
xchg
or
insl
mov
dec
outsb
inc
mov
sbb
sbb
cmp
ja
arpl
les
and
sbb
inc
or
inc
jae
push
jl
fcompl
scas
xor
add
scas
test
int
sub
inc
or
fs
or
ljmp
pop
fdivr
ret
pusha
jae
mov
lds
dec
xor
mov
cmpl
out
cs
cli
fs
out
jns
imul
movsl
int3
jnp
or
push
pop
push
subb
je
ss
or
fildll
sbb
movsb
cmpsl
dec
test
out
mov
js
daa
fs
pop
imul
test
orl
fwait
cmp
cmp
ret
or
lock
cltd
in
js
push
cli
inc
insb
nop
cmp
xchg
in
pop
loop
mov
orb
and
mov
xchg
cmc
mov
ds
dec
adc
inc
lret
xchg
pusha
test
xchg
sub
hlt
sub
ret
out
inc
lret
rol
clc
pop
sahf
xchg
sub
add
ret
pop
push
decb
fidivs
and
pop
shll
jbe
inc
mov
xchg
sub
cld
rclb
outsl
js
mov
clc
loopne
int
cmp
and
inc
stc
hlt
push
xchg
ds
lds
xchg
sbb
and
ret
sub
loope
fmuls
adc
out
adc
insb
cmp
mov
mov
jbe
dec
and
xchg
out
adc
arpl
stc
loopne
rcl
loope
pop
lahf
aas
jae
inc
or
gs
rcll
push
lds
aam
jecxz
rorb
mov
pop
mov
imul
mov
cmpsl
insl
lret
aas
out
fistpl
mov
lret
sti
inc
adc
dec
xchg
xor
iret
push
popa
or
test
iret
out
push
movsb
push
jg
pop
xlat
cmp
jle
dec
pop
xor
pop
fbld
xchg
mov
mov
je
sub
or
pop
mov
xor
pushf
xor
sub
aas
stos
and
push
mov
into
sub
clc
nop
mov
fmulp
aas
ljmp
dec
cld
frstor
loopne
mov
mov
xchg
scas
push
pop
mov
jne
test
inc
mov
mov
push
mov
mov
jmp
dec
jnp
lahf
iret
out
pushl
xchg
fdiv
dec
pusha
push
push
gs
xlat
fdivrp
lcall
paddsw
jbe
hlt
inc
dec
sbb
lea
lea
jle
ffree
daa
pop
push
pop
pop
dec
in
fadds
fs
das
jae
sub
push
mov
xchg
testl
adc
aas
ret
pop
leave
rclb
pop
fsubrl
inc
sti
and
and
cmp
pop
pop
mov
dec
adc
fnstcw
sub
cmp
mov
imul
pop
jp
ret
cmp
pusha
outsb
insl
ds
dec
cmp
sti
movsl
cli
mov
mov
mov
jbe
xor
jg
addb
test
mov
ds
scas
mov
mov
cmpsb
int3
call
sahf
xor
leave
into
add
jle
decl
pop
daa
and
ret
sahf
mov
cmp
push
aas
pop
sbb
sub
xchg
outsl
aas
mov
push
insb
pop
popa
jle
loope
daa
mov
arpl
aam
orl
add
xchg
movq
popa
push
mov
inc
ja
in
lcall
cli
inc
out
test
sub
pop
hlt
das
and
inc
dec
in
into
pushf
xor
cltd
imul
and
and
jne
outsl
cmpsl
aas
cmpsl
cmp
enter
adc
fs
sbb
dec
data16
cwtl
outsb
cltd
xor
shll
and
inc
dec
loopne
push
addr16
mov
test
push
xor
aas
cmp
dec
mov
loop
icebp
data16
and
add
inc
test
jne
mov
mov
cmpsb
cmp
sbb
les
add
loope
xchg
out
cmpsl
call
sbb
mov
inc
in
in
push
imul
cltd
jo
adc
ret
and
sar
and
xor
push
adcl
aam
fwait
xor
cmc
cld
xchg
daa
sti
mov
mov
inc
jmp
hlt
mov
mov
pop
mov
or
iret
into
xchg
pusha
in
sub
mov
dec
in
jne
aaa
push
shrl
pop
xchg
add
call
mov
sub
dec
test
orb
pop
shl
clc
adc
in
daa
xor
add
mov
fcmovbe
imul
lock
pop
bnd
or
adc
stos
inc
add
cmp
nop
pop
rol
pop
add
adc
cwtl
and
mov
jmp
adc
cmp
lfs
xor
push
imul
mov
fstpt
sti
leave
aam
or
inc
pop
test
rcrl
mov
out
xchg
or
lods
xchg
scas
sub
loopne
xor
jecxz
dec
loope
add
jmp
test
pop
mov
mov
sub
lods
inc
das
dec
ret
push
lret
lahf
loopne
shll
xchg
and
push
popf
sub
mov
dec
and
jp
cmp
leave
fwait
inc
fxch
ljmp
pop
cmp
jle
jb
xchg
sub
xchg
pushf
xor
jecxz
dec
adc
aaa
shrl
cmp
jb
mov
mov
dec
jecxz
xchg
clc
add
inc
fisttpll
orl
iret
aad
inc
push
lock
sub
sub
pop
inc
mov
je
in
test
into
or
std
in
cmc
mov
and
ret
adc
test
xor
ror
gs
cli
repz
ljmp
outsl
add
outsl
mov
and
ret
adc
cmp
xchg
insl
xor
bound
test
mov
fimuls
mov
pusha
xor
ret
imul
fsubs
sbb
mov
pop
mov
push
in
popa
fnsave
leave
push
subl
das
dec
loope
nop
daa
or
mov
mov
mov
mov
dec
add
out
mov
dec
lock
inc
in
inc
fcompl
shrl
je
inc
addr16
or
mov
mov
mov
add
repz
mov
es
jb
arpl
cmpsb
xchg
fdivl
shrb
je
mov
out
pop
push
into
insl
lods
lret
aaa
stc
es
jns
loop
clc
sub
out
test
dec
mov
movsb
mov
ljmp
adc
and
ja
xor
pop
cmp
into
mov
xchg
jge
or
ss
ss
add
add
sbb
adc
lret
nop
mov
mov
mov
roll
ss
push
sbb
xchg
dec
fwait
xchg
pop
adc
daa
lods
push
jp
push
sarl
ret
aam
xlat
sarb
loopne
sub
negb
xchg
and
inc
fidivrl
inc
movsl
sbb
or
sub
sub
cmp
push
enter
dec
xor
inc
xchg
repnz
sahf
fsubl
add
hlt
ljmp
scas
mov
push
mov
mov
mov
nop
ds
fwait
mov
adc
mov
dec
push
out
mov
iret
out
jl
int
fs
cmp
mov
lea
push
jae
mov
jae
add
pop
xor
cld
xchg
fdivs
es
imul
jge
mov
das
call
or
mov
les
cmc
fcomps
ljmp
stc
or
adcb
in
cmp
leave
popf
std
xchg
iret
ljmp
aad
xor
out
cmp
in
and
xchg
xchg
pop
icebp
sub
or
mov
sbbl
rorb
out
push
add
mov
jae
fisubl
insl
add
andb
and
std
xchg
xchg
lock
cmpsl
incb
mov
daa
adc
jp
arpl
popa
fwait
jle
orl
sbb
xchg
pop
cmp
call
and
inc
lds
push
call
das
add
cmpsb
popf
push
popa
clc
dec
mov
sbb
cmp
or
add
push
out
roll
jne
xor
cwtl
ja
jns
pop
jne
in
sub
sub
mov
loopne
or
jmp
inc
jbe
sub
fs
lret
bound
lods
pop
repnz
sbb
jp
mov
ret
pop
dec
push
mov
cmp
lret
pop
hlt
mov
lcall
in
in
mov
xchg
test
fwait
xor
cmpsl
sbb
and
inc
dec
in
lods
insb
add
or
cmpsb
imul
popa
adc
enter
jmp
icebp
in
adcb
pop
hlt
addr16
daa
mov
mov
fimull
movsl
sub
or
jnp
inc
lret
cwtl
sub
xchg
pop
ss
push
imulb
lods
call
and
cmc
rcl
out
xchg
mov
mov
in
push
enter
xchg
and
test
sub
leave
addb
push
push
cli
cmp
in
arpl
icebp
mov
and
fidivs
xchg
sub
inc
fldl
add
cmpsb
sbb
cmpsl
lock
mov
mov
jmp
or
jae
add
mov
lods
inc
cmpsl
and
jno
enter
mov
fdivl
sbb
js
and
aad
sub
mov
mov
rclb
fwait
xor
fcmovu
jae
dec
push
in
ds
xchg
test
push
mov
xchg
sub
cmp
stos
cmpl
iret
fnsave
xlat
outsb
mov
pop
repz
pop
fucomip
jns
roll
push
mov
sarl
inc
add
pop
fadds
jge
or
lea
in
sbb
add
adc
xorl
mov
cld
push
mov
dec
or
leave
jp
add
repz
outsl
incb
sti
xchg
jge
lcall
and
outsb
add
xor
shlb
push
gs
xor
mov
push
outsl
add
fwait
mov
std
cs
ss
sbb
ds
dec
js
hlt
and
aaa
test
and
inc
test
dec
pop
sub
ja
scas
pop
pusha
aaa
jge
cmpsb
das
mov
icebp
sbb
cmpsb
cmp
jb
add
pop
and
push
clc
popl
add
dec
loopne
pop
mov
mov
push
dec
gs
jns
adc
sbb
jmp
mov
push
call
leave
adc
lahf
mov
ret
mov
push
lods
lret
mov
jmp
sti
mov
ficoms
cmpsl
out
cld
xchg
mov
fnstcw
shl
stos
es
sahf
adc
cmp
mov
loopne
sbb
or
jns
xor
xchg
lcall
sub
pop
cmc
stc
dec
test
push
aad
dec
cmpsb
inc
fmul
imul
ljmp
inc
jge
cmp
xchg
and
mov
mov
push
cmp
loop
scas
es
adc
in
arpl
jno
fwait
xor
popa
sbb
inc
ret
repz
cwtl
das
out
mov
inc
xchg
push
aad
dec
pushf
xor
sub
es
jnp
inc
dec
push
jg
clc
mov
or
push
sub
mov
mov
ja
in
dec
xchg
sub
fnsave
mov
aaa
adc
cmp
ljmp
outsb
add
cltd
xchg
dec
in
insb
ljmp
sub
lcall
pop
jl
sub
mov
les
push
ljmp
std
xchg
aad
cmp
push
jbe
and
les
pop
leave
pusha
ja
dec
out
sbb
pop
mov
or
movsb
sub
rcrb
jno
mov
fdivl
adc
ss
mov
nop
add
lods
fidivs
pop
jp
dec
lret
lret
mov
push
xchg
inc
popf
xchg
sub
loopne
cmp
test
movsl
cmp
into
shrb
sbb
xchg
sub
cmp
mov
jecxz
and
lret
cltd
xor
pop
push
out
or
jle
insb
sbb
in
pop
repnz
add
push
movsl
ror
jge
loop
in
sti
lcall
in
jge
or
xchg
cmp
rorb
jae
sub
sti
xchg
movsb
jg
fnstsw
lds
fcompl
int3
pop
std
ljmp
push
push
insl
outsl
or
shlb
xor
sbbl
push
or
sbb
sarb
jnp
jp
xor
pop
fwait
repnz
jnp
in
out
push
mov
or
aas
call
or
insb
cmp
xchg
sub
push
xchg
jl
jae
out
xor
or
daa
add
dec
nop
daa
jp
in
orl
shrb
xor
mov
sub
jmp
or
push
sub
jns
lea
lcall
fwait
push
lret
bound
movsl
cmp
xchg
cs
dec
movsb
cmp
pop
arpl
popa
mov
in
and
popf
xor
inc
cltd
xor
mov
stos
rol
in
popf
xor
add
loop
enter
add
fidivs
and
xchg
mov
fiadds
inc
fs
clc
int3
test
lods
mov
loopne
cld
incl
mov
lods
and
mov
sub
in
dec
dec
call
mov
sub
adc
filds
test
rorb
cs
jl
imul
popf
xor
into
or
int
mov
xor
pop
and
fidivs
js
das
stos
mov
xchg
in
mov
lods
ss
shrb
mov
add
imul
pop
and
jo
sub
mov
ret
imul
into
out
sbb
std
adc
js
sub
test
repnz
insl
jnp
pop
sbb
lret
and
jns
idivl
pop
dec
enter
sub
out
test
cmp
bswap
icebp
sbb
mov
loope
sti
mov
dec
sub
int
faddl
xchg
sub
aam
sbb
das
or
pusha
stos
and
ds
hlt
sub
imul
lea
fidivs
adc
xlat
xchg
and
mov
pop
out
push
mov
rolb
sub
and
mov
inc
cmp
xchg
rclb
daa
popa
mov
inc
idivl
xchg
loope
cmp
xor
aam
jo
enter
mov
int3
arpl
in
or
jecxz
cmp
xor
and
dec
cmp
lods
jge
push
clc
push
and
push
ja
jne
mov
outsl
dec
and
pop
dec
mov
test
or
popa
clc
lods
clc
fistps
jo
cmp
xchg
fwait
dec
int
xchg
fsubr
jns
test
or
mov
pop
xchg
shl
std
inc
xlat
jo,pn
aaa
ss
lock
push
jb
push
inc
out
insb
sub
in
dec
sbb
pop
mov
out
mov
cmc
xor
test
mov
or
mov
insl
push
jmp
imul
test
xchg
out
stos
addr16
bound
jo
xor
cmp
push
fstps
adc
add
ss
mov
inc
orps
mov
xchg
adc
jle
inc
int
idivl
movsl
cld
loope
scas
shrl
sbb
pop
jp
jnp
jnp
xchg
xlat
lods
int
into
shlb
mov
ljmp
mov
jb
loop
mov
mov
sbb
or
cmp
or
push
out
mov
xchg
cmp
pop
and
xor
lock
std
dec
pop
ret
scas
cmc
sbbb
shrb
mov
sbb
dec
fists
push
jae
push
inc
xchg
push
ficomps
inc
adc
ficoml
lret
lods
cmpb
imul
popf
fcompl
xchg
push
xorl
test
jp
arpl
inc
aaa
push
mov
push
movsl
cmc
mov
push
in
xchg
pop
repz
loope
fadds
icebp
adc
cmpsl
iret
sahf
dec
loope
lock
pop
cltd
add
jle
mov
je
sbb
xor
xchg
ds
push
or
loopne
int3
cmp
pop
es
fsub
jns
jl
xchg
push
add
and
pop
jb
add
adc
inc
inc
jno
and
or
out
enter
ds
mov
aad
fildl
push
cmpb
pop
fdivrl
rcrb
push
add
push
mov
inc
cld
xchg
adcb
dec
mov
inc
mov
xor
mov
insl
add
stos
test
mov
outsb
jg
mov
push
out
cmpsl
outsl
push
mov
mov
clc
nop
test
mov
pop
jnp
sub
test
insb
xor
lret
lret
movsb
out
movsb
movsl
in
in
and
fwait
mov
jns
cmc
dec
cld
mov
push
mov
fdivl
ficomps
fs
or
cmp
movsb
addr16
arpl
and
jno
std
outsl
jnp
and
xchg
lahf
leave
pop
cwtl
add
sub
popa
out
rclb
pop
out
sub
negb
jle
test
mov
inc
movsl
mov
aas
jecxz
xor
lahf
es
inc
ljmp
inc
inc
lcall
mov
out
xchg
dec
lds
insl
clc
xor
mov
dec
aad
xchg
mov
adc
test
fiadds
jno
out
xor
js
mov
arpl
ret
mov
jge
jp
add
mov
pcmpeqd
push
sbb
sub
mov
pushw
ret
call
fs
jmp
outsl
ror
adc
clc
fdivrp
jle
adc
adcb
sub
or
idivl
push
xchg
sub
cmp
sbb
sub
hlt
jg
mov
inc
test
sub
add
push
mov
push
decl
stc
test
jae
fwait
scas
outsl
daa
out
lea
dec
stc
cmp
lcall
into
lock
mov
jle
mov
notb
inc
enter
js
and
ss
addr16
lret
dec
push
shrl
subb
or
xor
rcrb
repnz
mov
mov
fwait
mov
mov
popa
pusha
mov
xchg
orb
es
mov
mov
insb
or
enter
pop
lods
dec
sub
cmp
fdivl
push
push
jle
xor
hlt
add
adc
rol
sub
push
cmp
or
xchg
rcl
lcall
xchg
ret
scas
shr
dec
fistpll
push
lods
sti
call
fsubrs
push
ret
mov
mov
cli
xchg
add
xchg
xchg
inc
pushf
or
in
dec
in
push
ljmp
adc
sub
mov
test
imul
icebp
jle
push
out
lahf
js
shrl
je
xchg
pushf
mov
sbb
and
jle
cmp
mov
insb
jno
mov
xor
pop
ljmp
flds
sub
int
dec
xlat
push
pop
into
mov
xchg
or
push
ds
xchg
popf
pop
dec
jecxz
jp
mov
pop
test
xorl
dec
punpcklwd
pop
add
sub
cmpsb
sbb
leave
data16
fistps
clc
xlat
inc
push
jle
inc
xchg
shl
push
xchg
cmp
ror
cld
mov
dec
test
loopne
in
lret
add
subb
lods
jle
xchg
mov
imul
scas
dec
int3
in
jnp
lock
adc
sub
leave
cmp
push
mov
insb
lret
shr
cwtl
pop
icebp
leave
or
cmp
into
push
mov
cmpsl
fstpl
push
adc
jne
insl
popf
fwait
mov
int
mov
pop
pop
push
into
xchg
notb
icebp
xchg
in
cld
ljmp
mov
add
insl
pop
mov
add
jp
push
inc
and
stos
aaa
dec
imul
push
sub
adc
xor
push
sub
hlt
int
or
pusha
add
xchg
mov
xchg
xchg
in
ds
imul
xchg
xchg
mov
lcall
fdiv
cmc
aaa
adc
jb
inc
mov
sbb
jae
jg
mov
cmp
out
mov
or
jecxz
jecxz
ljmp
jno
adc
fnstsw
dec
push
std
xchg
sub
sbb
pop
lods
dec
arpl
out
test
push
mov
stc
scas
aaa
jmp
sbb
dec
out
lods
adc
movsl
jl
and
jmp
loopne
jb
cmc
adc
mov
in
leave
aas
mov
push
aam
scas
out
icebp
ljmp
jns
push
call
mov
gs
ret
and
xchg
and
mov
mov
xor
int
test
and
inc
sar
sub
imul
or
not
cmp
mov
sub
daa
mov
push
fwait
in
pop
or
aad
adc
inc
mov
jbe
xchg
cmp
loop
mov
cmpsl
mov
fsubs
dec
inc
and
add
fsubr
sub
lret
fisubl
inc
inc
xlat
lret
ret
int3
insl
push
cmp
idivl
and
test
scas
int3
xchg
pop
inc
jge
in
add
les
ss
insl
add
pop
arpl
xor
fs
cmp
imul
adc
mov
adc
test
stos
je
lret
sti
or
and
cmp
iret
dec
mov
or
jo
fistpll
imul
out
enter
xor
imul
nop
xchg
pop
add
xchg
call
call
fidivl
ljmp
pop
and
adc
dec
sbb
cmp
pop
cwtl
cltd
sbb
cmpsl
inc
imul
shrl
movsl
push
and
ja
or
mov
enter
insl
jmp
fidivs
pop
stc
and
mov
sub
xchg
jbe
sahf
decl
add
lret
sbb
mov
outsl
jecxz
jno
lcall
xchg
imul
scas
loopne
rolb
loope
stc
or
xchg
fmull
fwait
adc
jl
enter
xchg
dec
push
cmp
sub
dec
stos
fmuls
mov
inc
shr
adc
mov
push
outsb
pop
mov
inc
xor
jae
sbb
sbb
or
cmpsl
iret
pmullw
leave
insb
push
daa
dec
loopne
xor
lods
mov
les
sbb
inc
push
in
jno
sbb
mov
scas
jns
sub
mov
out
out
push
in
pop
add
dec
jb
or
lock
pop
fdivp
or
mov
xchg
mov
sub
ds
mov
ficoml
sub
std
xchg
jbe
mov
scas
test
outsb
lahf
call
adc
shrl
imul
xor
pop
jae
mov
lcall
lahf
inc
arpl
jae
nop
jns
insl
insb
out
cld
sarb
xlat
pop
or
stos
int
fcompl
loopne
jmp
aad
sti
pop
std
nop
xchg
add
xchg
dec
lods
sbb
mov
cmc
lcall
into
enter
aas
daa
jns
and
and
xor
daa
inc
sub
push
insb
or
bound
sbb
adc
push
xchg
adc
fs
or
and
cmp
in
and
pop
iret
inc
ror
sarb
shrb
push
shll
insb
mov
into
lods
inc
add
jg
call
aam
out
lret
cmp
ljmp
int
lock
movsl
dec
cwtl
mov
add
pop
inc
xchg
xchg
and
lock
aad
xor
sbb
mov
mov
imul
adc
ja
mov
push
aam
inc
dec
jle
das
out
in
sbb
xchg
jge
ret
out
jae
loopne
idiv
imul
dec
cmc
imul
cmpsl
sbb
jo
iret
cmp
jns
or
divl
data16
mov
fcoml
adc
mov
aaa
xlat
pop
jno
lds
dec
gs
jle
adc
push
pop
xor
dec
cwtl
das
push
push
xor
jecxz
add
repz
in
push
mov
inc
mov
jae
into
popf
xor
add
mov
jno
ljmp
or
adc
enter
sbb
sub
or
mov
repnz
push
test
sbb
cwtl
test
shl
mov
mov
add
imul
into
push
xchg
xlat
xlat
and
movsb
adc
out
sub
test
adc
inc
inc
pop
dec
loopne
addr16
mov
out
push
mov
std
push
icebp
inc
xlat
ds
dec
cmp
je
adc
call
repz
push
push
pop
loope
xor
push
dec
xor
inc
addr16
dec
mov
jno
lock
ds
push
fnstsw
lods
sbb
lods
inc
pop
scas
jge
pop
pop
inc
out
xchg
arpl
jo
pop
lahf
pop
push
pop
icebp
subl
popa
in
sub
cltd
dec
add
lods
inc
sar
out
enter
das
aad
and
insb
mov
sbb
in
pushf
out
mov
mov
jae
sub
js
jns
sbb
sub
nop
nop
js
sbb
pop
repz
cmp
lods
mov
adc
stos
int3
or
aam
sub
arpl
pop
sub
push
push
pop
sbb
mov
and
mov
in
out
inc
mov
pop
scas
dec
and
mov
adc
clc
repz
into
pop
sbb
enter
repnz
adc
jns
hlt
int3
push
cmp
pusha
testl
jnp
lds
sbb
ficoms
stc
sbb
test
shrl
and
mov
stc
insl
xlat
repz
mov
sbb
pop
rorb
das
pop
in
and
out
adc
jmp
leave
imul
inc
sti
fnstenv
nop
jno
jmp
jb
int
xor
push
cltd
push
jge
fldl
jns
jae
jb
mov
dec
in
mov
adcb
into
js
mov
ss
dec
jne
jnp
in
mov
pushf
mov
xchg
subb
cmpsb
jle
adc
dec
jae
int
dec
mov
jl
imul
and
mov
mov
sub
mov
fcoms
mov
test
idiv
vpmacsswd
and
adc
push
jo
cmp
add
call
nop
xor
shrb
popa
mov
outsl
cmp
aaa
mov
out
or
mov
cmp
pop
push
sarl
jle
mov
lret
jmp
int
cltd
pop
xor
lret
imul
add
push
loope
sub
js
dec
cmp
nop
push
dec
movsl
mov
aam
mov
adc
adc
mov
or
subb
icebp
xor
mov
sarl
and
or
cltd
xor
xacquire
mov
xchg
sub
je
bound
jmp
mov
cvtps2pd
addr16
jne
aaa
pop
xor
testl
cmp
scas
scas
jl
loope
jle
mov
fists
int
mov
popf
out
xchg
repz
and
cwtl
clc
push
or
sub
cwtl
jecxz
fsubrp
cli
clc
sub
push
jecxz
mov
mov
push
aaa
into
inc
and
mov
sbb
mov
into
inc
in
mov
ss
lret
cmp
lret
jge
lods
pusha
scas
and
loopne
outsl
roll
jge
fnsave
sahf
mov
or
jle
adc
push
movsl
xchg
push
gs
jbe
ja
out
inc
or
xor
jl
lret
xchg
jp
enter
out
mov
inc
shrl
sub
push
stos
mov
testl
or
les
lea
mov
add
lahf
bound
jb
jnp
xchg
js
ds
mov
loope
pop
repz
add
movsb
ds
inc
xchg
ja
in
pop
mov
movsb
inc
adc
cwtl
pop
daa
in
ss
sbbb
fidivl
xor
cwtl
jno
out
mov
add
push
inc
xor
xor
mov
fsubr
addb
icebp
and
out
stos
xchg
stos
inc
loope
aad
incb
cli
xchg
fs
jp
xchg
scas
mov
add
or
jo
das
arpl
sahf
xchg
loopne
or
mov
mov
mov
and
test
jge
movsl
fbstp
leave
lock
clc
out
sub
mov
mov
inc
enter
jge
jmp
test
xchg
fstl
push
xchg
leave
and
cltd
fldl
addb
jle
xchg
xchg
ret
cmc
imul
ss
push
flds
sarl
xchg
test
dec
leave
into
mov
int
xchg
scas
mov
rcl
mov
or
scas
mov
das
in
ficoms
outsl
pop
int3
cmp
jns
stos
aam
adc
out
or
scas
enter
aam
fnstenv
bound
icebp
mov
arpl
sbb
out
repz
cmp
jecxz
jmp
pop
mov
pop
pop
jne
mov
shll
repnz
add
fdivl
inc
mov
test
cmpsb
cmp
add
jnp
out
sbbb
dec
loope
cmp
fldcw
dec
jecxz
sahf
sub
push
insb
mov
popa
and
xchg
cwtl
loop
or
and
test
push
das
imul
pop
lret
call
aam
std
xchg
sub
xor
push
lock
mov
movsb
daa
jmp
ret
sub
lds
les
scas
or
push
not
push
and
xor
fdivl
mov
test
negl
mov
inc
mov
dec
jns
popf
xor
jnp
xchg
push
hlt
mov
imul
sarb
stc
inc
icebp
in
xorl
outsb
add
pop
or
je
jge
mov
shlb
xchg
or
jge
mov
adc
daa
daa
int
aas
sbb
fwait
stc
repnz
testl
outsl
xor
insl
adc
sub
cwtl
mov
inc
fistpl
hlt
ss
jbe
lcall
movsl
sbb
stos
jns
lods
cmp
dec
mov
rolb
pop
add
add
std
cltd
adc
push
mov
mov
daa
nop
in
mov
mov
enter
xchg
lahf
sbb
idivl
leave
push
pop
stc
cmp
inc
fsts
adc
cmp
pop
ljmp
adc
jp
es
int
jl
arpl
xor
pop
test
out
fdivrs
add
pop
out
and
jg
mov
rclb
test
mov
loopne
jge
ja
in
and
push
push
test
jbe
and
cwtl
mov
lcall
jno
jl
jns
ret
mov
lret
adc
or
fs
out
outsb
sbb
lcall
and
je
add
pop
shrb
jmp
jl
outsl
loop
lods
shrb
cmp
or
lret
lods
jle
dec
ljmp
stos
cmp
icebp
lret
inc
lcall
inc
fisubrl
pop
mov
push
fsubrl
shrl
dec
sbb
dec
shl
mov
push
in
adcl
pop
mov
loopne
fwait
xchg
imul
adc
pop
ljmp
push
mov
mov
dec
add
and
inc
dec
jbe
rclb
inc
add
ljmp
dec
mov
cmp
ljmp
rorl
divl
pop
jmp
movntq
add
jno
push
xchg
mov
inc
shrb
push
mov
movsl
loop
add
test
cld
mov
cmp
and
nop
push
ds
popf
repnz
mov
out
sub
push
cwtl
testb
jge
insl
dec
sub
cs
cwtl
cli
ds
cmp
sub
pop
test
shrl
iret
es
lods
dec
bound
sub
popa
popf
lock
pop
aaa
call
jge
mov
aad
and
pop
icebp
xchg
outsl
push
inc
jo
jb
sub
mov
adc
jne
pushf
mov
xchg
dec
scas
cld
cmp
call
or
jle
pop
push
pop
or
adcl
jmp
mov
cld
mov
adc
stos
or
inc
xor
int
xchg
aaa
mov
inc
pop
mov
addr16
sbb
adc
mulb
add
pop
push
mov
inc
ljmp
out
jbe
sub
stc
adc
sbb
dec
outsl
mov
in
cmp
out
push
out
xchg
out
mov
outsb
cmp
ljmp
jge
in
pop
xchg
add
dec
imul
loope
test
mov
add
divb
rcl
in
jmp
sahf
and
mov
pop
test
push
hlt
sub
add
lcall
jne
inc
les
mov
inc
lret
push
enter
stc
in
scas
dec
punpckhdq
cmpl
and
cmpsl
jg
rol
push
rcrb
es
out
pop
mov
mov
scas
call
jge
sahf
out
notb
dec
fwait
jg
in
cmp
jbe
mov
mov
push
mov
jmp
mov
mov
imul
adcl
push
into
lahf
les
test
shl
adc
lahf
adc
sub
cmp
ss
pop
ret
loope
cmp
mov
hlt
outsb
inc
mov
mov
daa
xchg
push
push
ljmp
inc
dec
fldcw
roll
les
icebp
insb
pop
and
or
int3
ja
sbb
fimuls
stos
data16
fwait
movsl
stc
into
wrmsr
movl
dec
lcall
or
mov
adcb
jo
out
jo,pn
ss
jbe
call
jl
or
mov
scas
xor
mov
mov
rcrb
cli
inc
test
lret
lret
lahf
xor
xchg
sbb
push
push
movsl
sub
inc
fwait
mov
xchg
cmp
mov
ret
outsl
inc
xor
add
mov
sub
lea
cs
lret
rorb
xchg
fmuls
out
adc
cld
nop
add
dec
xor
mov
xor
mov
aaa
into
lret
add
aad
stos
jmp
outsb
push
mov
mov
push
adc
das
test
cli
imul
mov
imul
pop
mov
xorl
sbb
lds
adc
dec
movsb
sub
dec
sarl
sbb
or
xchg
mov
and
push
cltd
in
into
fdivr
mov
mov
adc
into
sahf
push
jge
clc
stos
inc
sub
sarl
mov
adc
addl
test
adc
inc
lcallw
fildll
or
pop
or
movsb
inc
mov
xchg
sub
cvtdq2ps
sbb
jecxz
outsl
push
lahf
test
or
sbb
cld
sub
sbb
shr
xor
mov
fbstp
mov
xchg
mov
jo
fisttps
xor
xchg
roll
mov
or
out
inc
sbb
std
inc
fsubrs
push
push
lods
pop
aas
mov
cmp
sub
push
push
pop
mov
and
ljmp
pushf
add
jb
push
dec
mov
jb
jecxz
adc
imul
mov
std
jmp
inc
sahf
fidivl
arpl
push
jbe
add
adc
and
into
or
movsb
repz
xchg
pop
mov
popa
lds
push
je
imul
inc
nop
add
sub
mov
insl
and
add
mov
scas
xor
push
mov
ljmp
or
jo
pop
sahf
shlb
pop
mov
adc
jecxz
sbb
adc
sbb
rcrl
cmpsb
jge
xchg
movsb
fwait
mov
add
les
imul
popf
mov
dec
and
cmp
je
shll
mov
sbb
pop
xchg
mov
push
in
sub
pop
mov
push
adc
jb
scas
arpl
mov
dec
inc
mov
ja
push
stos
fldl
mov
rol
pusha
imul
insb
aad
in
lds
push
add
loopne
sub
mov
jbe
inc
fdivrs
test
gs
xor
das
cmp
ret
insb
js
aad
movsl
mov
sub
scas
dec
mov
fcomps
cmp
mov
scas
rsqrtps
jmp
das
jp
push
adc
mov
dec
push
je
ret
lret
and
or
mov
mov
jl
loop
jge
mov
scas
sbb
lods
mov
sub
jnp
je
and
adc
aam
xchg
test
dec
in
xchg
out
lds
push
test
ds
clc
leave
sahf
clc
das
sub
insb
clc
je
sbb
push
sub
push
add
loopne
inc
fsubrl
lret
arpl
repz
aas
mov
les
jle
cld
mov
ffreep
ret
cmp
loop
repnz
inc
cmp
cmp
inc
xchg
mov
out
fisubrs
xchg
not
lock
in
inc
pop
lret
dec
pmaddwd
add
sahf
pop
sarb
mov
aas
stc
test
test
int
sarb
mov
adc
sbb
jbe
sbb
cs
pusha
les
cltd
jne
push
stos
notl
sub
jecxz
notb
repnz
xchg
sti
cmp
xor
dec
fwait
mov
mov
mov
fistps
adc
out
ffreep
shr
jle
iret
data16
mov
add
mov
sub
dec
pop
mov
imul
adc
in
add
scas
in
inc
push
xor
xor
sarl
inc
mov
lret
push
jno
mov
popf
es
test
lret
mov
ljmp
xor
std
dec
mov
mov
ret
xlat
enter
sub
jecxz
sbb
bound
sub
cmc
mov
test
sub
test
sub
fwait
sti
xor
xorb
into
xchg
sub
aaa
inc
push
xorl
lods
sbb
stos
mov
jne
arpl
jb
pop
in
movsb
jne
icebp
xor
popa
loopne
fnstenv
aam
andb
adc
imul
pop
jmp
insl
negb
mov
fwait
shll
sub
out
add
decl
mov
sbb
incb
xchg
lods
andl
push
lock
aam
jno
sub
ret
or
outsl
into
mov
cmp
push
fcmovnb
ljmp
repz
push
out
ss
es
sbb
add
loopne
negl
test
add
dec
mov
sbb
movsb
or
pushf
mov
sub
outsl
gs
notl
adc
jno
jg
repnz
jnp
mov
icebp
in
mov
lfs
fsubrs
nop
in
push
popf
sbb
adc
inc
imul
push
outsl
jmp
andl
cmp
mov
inc
mov
pop
in
push
or
mov
test
push
push
outsl
jmp
xchg
stc
test
loope
xor
cli
std
sub
js
jl
out
mov
cmp
int
add
enter
jecxz
push
xchg
xchg
insl
dec
addr16
inc
rcrl
jno
dec
aaa
push
sbb
dec
or
out
ss
sub
movl
mov
aad
shll
xchg
xlat
sti
ret
and
sbbl
sahf
negb
cmp
js
or
xor
xor
mov
rcl
inc
or
subb
sti
mov
xor
dec
std
cmc
mov
cmp
imul
add
outsb
jl
inc
inc
sbbl
stc
xchg
or
adc
mov
fdivrs
addr16
jecxz
stos
mov
stos
mov
pop
mov
rol
in
mov
add
shll
push
jnp
xor
push
ficompl
pop
adc
fldl
mov
lret
je
add
sub
mov
aaa
movl
xchg
inc
das
mov
add
mov
jno
pop
es
jl
mov
mov
arpl
repz
aam
rcrb
add
ss
sub
test
fisttps
pushf
mov
fisubl
inc
out
or
daa
or
scas
imul
cmpsl
jge
enter
xchg
and
orb
xchg
xor
aam
jecxz
aam
inc
pop
loop
vpshuflw
dec
mov
or
insb
jge
stos
pop
nop
stos
mov
sbbl
jecxz
lods
dec
in
aas
pushf
or
push
test
fdivl
push
and
das
repnz
sbb
jge
mov
sbb
popa
mov
inc
and
push
mov
popa
jecxz
outsl
rcr
add
mov
or
test
mov
cmp
mov
xchg
sub
xlat
pop
mov
aad
sub
outsb
ss
pop
clc
test
mov
sbb
adc
jne
scas
mov
lret
sbb
loop
testb
push
pop
dec
ret
ss
or
xor
les
ss
enter
push
and
jecxz
pop
mov
xchg
inc
out
mov
adc
icebp
jmp
jns
cmp
inc
jecxz
ret
shrl
pop
dec
add
lcall
jg
mov
sub
rcrb
pop
push
fildll
das
aaa
mov
mov
lcall
mov
lahf
jbe
mov
or
nop
ds
ret
push
push
jbe
push
mov
repnz
inc
xchg
data16
lret
scas
cmp
push
imul
lcall
inc
xor
ljmp
push
lret
fldenv
mov
popf
data16
xchg
movb
cmpsb
xlat
sbb
or
xchg
lds
xchg
push
cmp
push
add
mov
lock
leave
add
cmp
in
or
add
inc
ficompl
xor
popa
clc
aas
dec
rolb
mov
mov
inc
scas
ret
pop
loopne
xchg
adc
loope
shlb
icebp
mov
dec
sub
jmp
add
shrb
cmp
fldcw
cmp
in
jg
shll
add
adc
xchg
fidivs
lcall
push
mov
add
ret
add
mov
adc
jp
sti
cmpsb
cmc
lcall
out
jge
pushf
aam
sbb
jb
imulb
sub
aam
push
loope
mov
cli
xchg
je
xchg
es
fsubl
and
pop
xchg
arpl
imul
fistpl
icebp
pop
mov
js
jb
mov
cmpsl
fistl
stos
push
inc
into
into
lret
mov
pop
jnp
repnz
push
jg
mov
imul
out
lds
pop
cmp
or
push
mov
or
mov
dec
lods
jmp
mov
fcomps
or
cmp
push
dec
gs
push
jns
xor
mov
clc
inc
mov
js
sub
and
dec
mov
inc
sub
leave
aaa
adc
cmp
aaa
inc
mov
js
jge
push
mov
addb
mov
jo
adc
rorl
adc
lcall
adc
aas
rclb
or
movsb
push
xchg
dec
jbe
sub
add
cmc
mov
cmp
dec
loopne
das
loop
in
adc
push
xchg
jns
xor
cmpsb
ret
cltd
xor
adc
mov
jle
int3
inc
inc
lahf
sbb
insl
ljmp
sub
stc
pop
outsl
cmp
and
cmpsb
je
cmpsl
xlat
scas
push
data16
ds
popa
mov
cmp
stos
pop
movsl
push
stos
inc
pop
push
cwtl
or
aas
sub
push
roll
inc
mov
sub
push
je
sub
adc
cli
pop
jecxz
push
into
popa
imull
cmc
adc
fwait
int
pusha
pop
leave
xchg
nop
into
jle
jmp
arpl
and
or
cmp
inc
test
pop
and
or
jmp
nop
xchg
xchg
imull
add
cli
js
cmp
xor
shl
sub
std
repz
cmp
out
leave
push
hlt
push
fcoml
sub
pusha
xchg
xor
test
ds
fbstp
jmp
add
xchg
ds
pushf
aas
shl
lea
xchg
popf
jmp
xor
je
push
cmpsb
push
sbb
cmp
inc
call
mov
dec
adc
jge
adc
daa
and
jp
adc
dec
mov
mov
mov
gs
inc
inc
dec
repnz
cs
add
cmpsb
cmp
push
xor
mov
jmp
push
or
das
mov
add
dec
adc
jmp
add
es
inc
cmp
dec
dec
arpl
mov
add
add
mov
repnz
scas
cs
dec
mov
fdivp
xor
daa
push
sbb
fdiv
cli
fisubl
mov
sub
adc
rcrb
mov
xchg
ficomps
push
outsl
mov
cmpsb
dec
fucomi
inc
loope
stos
push
sub
push
fcmove
dec
popf
subb
int3
xchg
sub
and
push
add
loope
in
fnsave
cmc
mov
loopne
stos
loopne
in
pop
scas
stos
mov
insl
sarl
dec
pop
xchg
or
cli
cmp
push
loope
sub
aaa
fs
and
test
test
lea
inc
or
push
orl
add
jmp
xchg
xor
jl
fldenv
jge
repz
stc
mov
outsl
inc
adc
push
aaa
testb
cld
in
jp
faddl
push
inc
test
popf
or
push
mov
mov
ja
adc
add
sbbl
mulb
mov
loopne
push
mov
mov
cmp
lods
cmc
nop
lcall
xchg
rcrb
sub
pop
jle
imulb
pop
loopne
popa
lahf
push
ja
jg
imul
outsb
adc
adc
in
cmp
pop
add
mov
aaa
jae
es
insl
sbb
pop
xchg
sarl
test
test
mov
push
jmp
push
outsl
sbb
mov
stos
sub
adc
fs
outsl
mov
adc
lods
dec
lcall
sub
jbe
xor
inc
notl
cmp
or
sub
pushf
sbb
mov
loop
and
adc
mov
enter
sahf
jo
mov
fs
adcb
push
mov
call
mov
mov
or
push
int3
push
fisubs
mov
test
hlt
aad
mov
loope
xchg
out
outsl
iret
insb
popa
pop
ret
hlt
jns
sbb
mov
push
jb
mov
iret
orb
mov
imul
xchg
fcoml
addr16
std
sbb
fnstenv
cmp
mov
pop
dec
adc
jae
pop
jno
dec
add
sbb
dec
pop
push
popf
jo
sub
lods
fnsave
js
pusha
fcmovnbe
push
push
pop
pop
dec
sub
inc
sbb
or
or
adc
xchg
add
enter
xor
xor
sahf
pop
xor
ds
pop
ds
imul
jo
xor
inc
xchg
data16
popl
out
xchg
pop
add
sbb
xor
mov
dec
jo
lahf
rorb
jl
push
push
in
lea
cmp
aaa
jmp
mov
test
pop
dec
int3
rorl
jae
fwait
mov
repnz
pop
adc
xor
jmp
das
dec
mov
xor
lret
xor
inc
test
or
mov
xor
xchg
xor
mov
jae
mull
add
pop
insb
adc
pop
mov
out
or
sub
adc
cmp
cmp
dec
push
shll
lahf
push
mov
add
lock
repz
jge
jg
out
mov
push
sbb
sbb
fimuls
mov
lods
ret
cld
dec
les
mov
je
sub
mov
gs
sbb
xchg
mov
push
popf
lcall
sub
fdivrs
outsb
lahf
ficompl
scas
lods
mov
sbb
mov
inc
repz
mov
cmp
sub
cld
mov
dec
sub
dec
mov
jne
cld
stos
mov
imul
inc
sub
fwait
xor
aas
stos
push
dec
roll
cmp
push
mov
mov
pop
sbb
jnp
cmp
repnz
lret
pop
mov
jecxz
or
cs
nop
stos
mov
dec
mov
mov
jno
inc
sbb
outsl
lret
shl
jno
pop
scas
ja
and
dec
push
jp
mov
xor
clc
gs
mov
imul
lret
push
in
inc
adc
xor
call
cmpsl
scas
pop
add
clc
hlt
sbb
shll
pop
in
mov
jo
mulb
aad
rcrl
jbe
sub
pop
dec
push
fiaddl
push
lret
movsb
fldenv
lock
cs
pop
jo
xor
loopne
fisubl
push
push
divl
lcall
imul
mov
add
stc
mov
pop
lods
dec
sub
add
jmp
mov
adc
movsl
test
mov
xor
sarl
fwait
into
or
mov
mulb
dec
mov
fidivs
xlat
aas
cmp
sbb
inc
cltd
test
push
push
outsb
rcrl
inc
xorl
cmp
lods
sbb
rcl
lahf
pop
inc
jns
mov
mov
pop
outsl
and
mov
mov
inc
or
leave
lods
call
jbe
ljmp
les
fs
push
andb
jmp
mov
jae
pop
mov
fisubs
sysexit
xchg
outsb
sbb
adc
lock
fwait
cmp
sbb
repnz
add
daa
fwait
cli
push
shl
sub
inc
das
xor
jg
popf
sub
dec
call
lods
out
mov
in
sbb
ror
inc
jae
sbb
mov
cmpsb
cmp
fsubr
enter
dec
dec
inc
fiaddl
or
pop
subb
cld
cmp
push
sbb
aam
mov
adc
test
loope
jo
stos
mov
bound
in
or
lock
imul
out
js
push
popf
sbb
in
decl
aas
lea
stos
inc
sar
add
ds
push
flds
cwtl
out
lods
lods
test
ss
enter
mov
lea
fidivl
loopne
stc
pop
xchg
jae
xchg
sub
xor
mov
fidivrs
fcompl
mov
mov
add
dec
int3
fcomip
hlt
xchg
mov
scas
inc
mov
push
and
mov
insl
add
imul
add
inc
cmpsl
movsl
loop
and
adc
push
call
popf
or
pop
xsha256
cmpsb
push
jae
iret
movsb
mov
xchg
inc
fcmove
mov
add
popa
xor
xchg
push
or
or
sbb
lret
dec
xor
scas
stos
sub
xor
fcomps
pop
xchg
sub
imul
jmp
jp
lods
frstor
inc
imul
and
jo
leave
mov
adc
pextrw
test
lds
mov
inc
adc
cli
cmc
negl
adc
mov
mov
mov
mov
outsb
push
inc
xchg
pop
testb
fidivs
pop
mov
jmp
iret
jp
insl
and
ss
add
mov
pop
dec
fistpll
pusha
ja
or
decb
pop
push
xchg
xor
push
lods
xchg
aam
add
xor
mov
loope
cmc
adc
mov
push
mov
push
xchg
gs
call
daa
out
cmpl
clc
ja
daa
jp
test
mov
or
and
push
push
jecxz
daa
movsl
xchg
jbe
dec
scas
inc
clc
cmc
add
loop
int3
jg
mov
mov
imul
jl
add
or
notb
imul
mov
sbb
insl
sahf
sub
jne
pusha
gs
pop
jae
aad
stos
xchg
loopne
mov
scas
jno
rorl
push
push
faddl
cltd
int3
scas
lahf
fldt
dec
scas
subb
stos
insb
shrb
inc
jg
subb
or
scas
inc
inc
pop
out
ds
int
jmp
xorb
leave
pop
cmpsb
add
xchg
rorb
pusha
out
xchg
xchg
hlt
testl
sub
add
ss
sub
xchg
push
les
leave
inc
mov
or
xchg
mov
loop
fcompl
and
xchg
push
jne
fucomip
dec
orb
cli
mov
popf
inc
or
mov
sub
sub
xchg
hlt
xchg
jle
imull
mov
sub
filds
adc
inc
roll
dec
notb
fbstp
out
adc
into
cmp
rorb
fwait
inc
test
jno
lods
mov
jp
and
imulb
lcall
stos
nop
mov
stos
push
add
sub
mov
inc
bound
jno
mov
pop
lret
mov
aas
pop
jle
pushf
inc
negb
xor
popf
aad
pop
imul
sub
movsl
xchg
insb
inc
inc
lahf
jp
inc
xchg
jl
mov
movsl
loopne
loop,pn
push
jmp
std
pop
fs
mov
add
fxch
test
mov
xchg
mov
shrl
push
std
mov
mov
lock
icebp
mov
mov
jmp
sub
aaa
mov
stos
cmp
mov
fadds
or
dec
out
sub
xor
popf
in
mov
xor
pop
mov
sub
mov
movsl
sub
or
cmp
push
inc
mov
rol
mov
sbb
and
dec
cltd
data16
imul
imul
lods
shlb
mov
adc
mov
pop
in
sar
ret
cwtl
mov
sbbb
jg
jmp
jl
push
pop
jbe
jmp
dec
dec
stos
sub
mov
mov
mov
dec
mov
xlat
cwtl
sub
ret
xchg
clc
call
lret
or
pop
add
das
xor
mov
xchg
test
loope
je
jno
xor
cwtl
negl
cltd
xor
sbb
stc
repz
push
js
jo
iret
shrl
enter
popl
inc
mov
loope
lds
shll
clc
sub
xchg
cs
cwtl
pop
dec
dec
sub
pop
dec
pop
cmp
jle
loope
pushf
xor
fcomip
subb
insb
add
loopne
mov
cmpsl
jb,pt
dec
in
roll
add
cmc
push
mov
xchg
mov
fcompl
mov
xchg
or
repnz
fwait
cmp
pusha
cmp
shrb
mov
mov
frstor
cmp
pop
lods
adc
or
out
inc
sbb
notb
test
mov
imul
push
les
sub
sub
les
xor
add
xchg
ja
ret
dec
xchg
fdivrs
rcrl
add
jp
xchg
cmpsl
fs
pushl
inc
jmp
inc
shlb
or
push
decb
push
sarl
xor
hlt
adc
xor
lods
lcall
rcll
in
out
mov
mov
fidivrs
fwait
stos
ss
scas
movsb
pop
dec
inc
adc
jge
stos
xchg
dec
xchg
in
std
inc
sub
sti
into
in
pop
pop
int3
testl
sub
push
push
cmp
pop
icebp
pusha
xor
fs
cld
pop
pop
outsb
loope
mov
sbb
pusha
jmp
xchg
push
mov
fdiv
fcompp
mov
push
jno
fidivrs
push
push
pop
sbb
fisttpll
daa
fs
aad
js
cmp
xchg
xchg
add
xlat
hlt
or
sbb
mov
pop
or
add
xor
dec
out
sti
outsl
mov
jle
xor
adc
push
shrl
sbb
adc
cmpsb
dec
xchg
call
je
jns
repz
mov
insb
ja
mov
sbb
xor
loope
or
xchg
stos
sub
sub
rcrl
mov
mov
cwtl
pusha
and
add
lret
add
scas
cmp
call
out
adc
push
jp
loop
fstpt
fcoms
mov
lods
xchg
gs
xchg
mov
movsl
aam
cmp
shr
aas
inc
outsl
mov
lahf
nop
mov
lods
ljmp
xor
stc
sub
cmpl
mov
jne
push
movb
sub
mov
jne
xor
lahf
xchg
cmp
dec
sbb
lahf
icebp
adc
mov
fists
push
inc
gs
add
sub
sar
adc
pop
xor
mov
add
fsubrl
out
push
inc
lcall
and
lock
xor
pusha
mov
xor
mov
dec
lods
pushf
or
xchg
ffree
arpl
mov
stos
sub
jp
dec
and
adc
pop
cli
popa
pop
mov
or
dec
outsl
aaa
fld
jns
int
pop
push
inc
mov
aam
and
xchg
pop
fists
mov
sub
bound
lds
mull
rol
xor
ja
mov
inc
xor
xchg
mov
flds
in
jb
out
int3
add
sarb
lret
repnz
leave
and
adc
sti
sarl
das
std
pusha
movsb
inc
push
addr16
movsb
mov
inc
sub
rep
xor
sbb
test
mov
js
sbb
and
push
jno,pn
mov
test
roll
lahf
mov
rcl
cmpsl
ds
sahf
push
and
mov
xchg
fucomp
les
pop
mov
popa
stos
frndint
aaa
jmp
or
mov
addr16
jg
stos
icebp
or
loop
cli
daa
lret
push
cmp
std
push
mov
orb
es
outsb
aam
xor
in
mov
movb
rol
jl
fsubrs
daa
xchg
sub
pop
cmc
sbb
dec
dec
sbb
lds
adc
sahf
cmpl
mov
xchg
adc
lahf
shll
sbb
cld
in
ljmp
pop
jg,pt
sbb
pop
into
dec
jnp
aam
mov
sbb
fs
test
rclb
pop
movsb
cmp
push
xchg
aas
push
jge
add
cmp
sbb
add
mov
add
and
jae
and
jb
imulb
out
pop
mov
sub
push
sub
inc
lods
add
push
fldenv
imul
and
fistpl
jp
jl
aam
xor
cwtl
stos
into
push
sbb
iret
insb
jmp
sub
pop
mov
test
adc
scas
inc
repnz
dec
insb
sbb
aam
jmp
repz
psadbw
adc
mov
xchg
mov
ja
push
rolb
pop
pop
mov
cmp
rorl
and
in
addr16
jmp
or
mov
lret
inc
adc
dec
adc
ds
mov
in
fnclex
add
shl
mov
push
movsl
lods
push
add
subb
push
repnz
decb
nop
movsb
push
or
cwtl
jo
sbb
mov
mov
movl
jp
cli
jae
add
pop
scas
jno
pop
ret
lahf
cld
arpl
push
xchg
ljmp
ret
dec
cmp
sbb
sbb
imul
movsl
sub
push
jp
cmp
mov
xor
xchg
movsb
mov
sbb
cmp
push
ret
movl
mov
repz
fnstsw
in
jecxz
imul
gs
add
add
mov
inc
mov
xchg
jecxz
adc
dec
or
push
mov
pusha
mov
imul
lds
testb
add
jne
mov
mov
lods
or
jg
idivl
push
stos
rcll
ja
lods
dec
outsb
lret
call
and
xchg
ret
pop
adc
or
adc
or
cmp
fucomp
adc
or
lret
mov
idivl
test
sbb
mov
roll
outsb
cmp
xchg
xor
aaa
loopne
pop
test
cmp
loopne
adc
cwtl
in
dec
roll
popa
xor
shll
scas
jb
inc
out
icebp
decb
mov
cltd
in
xchg
cmp
shrl
rorl
repnz
enter
xor
adc
cmp
xlat
gs
jle
arpl
mov
mov
fs
xchg
and
add
sub
ljmp
popf
push
lods
and
xchg
pop
xlat
cltd
stos
jbe
je
dec
into
mov
aad
popf
mov
dec
push
scas
adcl
pop
cmpb
adcb
hlt
jg
mov
sahf
repz
or
outsb
add
adc
xchg
shlb
in
cmpsb
pop
scas
sub
push
rcrb
pop
cmc
fnstcw
mov
daa
or
sbb
int3
cmp
cmove
inc
push
je
gs
stos
pushf
int3
cmp
sub
mov
jne
push
jb
pop
aaa
mov
scas
es
pop
fsubr
or
sub
mov
mov
mov
call
std
lock
dec
pop
stos
sbb
cmpsb
sbb
fmuls
sub
ret
dec
xor
or
pop
fwait
ret
popa
jne
fsubr
jne
sbb
add
jno
pusha
aad
arpl
test
loope
cmpsb
adc
mov
lret
mov
fwait
daa
jmp
or
mov
jno
sub
mov
fs
mov
sub
adc
and
int
mov
sub
das
jecxz
push
or
orb
lahf
popa
sub
fs
enter
pusha
jmp
insb
xchg
lods
popf
repz
stos
scas
repnz
push
xchg
sbb
cmpsb
cmp
and
imulb
mov
mov
mov
pop
pusha
sub
imul
pusha
pop
jecxz
cmp
sub
rorl
adc
lods
pop
fs
or
fnsave
xchg
scas
repnz
or
adc
inc
lea
fistpll
ss
fsubl
sbb
lds
mov
mov
or
and
les
iret
movsb
ja
adc
sti
push
leave
pop
test
int
jnp
mov
ja
inc
ret
std
ror
es
xor
fists
mov
fisttps
jl
scas
mov
out
mov
push
out
push
adc
add
mov
mov
adc
mov
pop
inc
cli
jne
ret
jne
pop
mov
insb
inc
pop
or
mov
xor
test
leave
mov
and
dec
xor
dec
mov
fmuls
arpl
in
subl
aam
int3
pop
ffreep
jp
or
xchg
mov
sbb
int
cld
pop
imul
inc
push
sbb
insl
push
ret
lret
xor
sahf
xor
cld
dec
ljmp
jne
pop
xor
mov
imul
dec
dec
add
sar
bound
pop
xchg
cwtl
pop
mov
lret
sub
pop
sarl
jbe
call
and
fcompl
sub
sub
gs
adc
cmpsl
inc
iret
cmp
pop
mov
push
xor
pop
insl
sub
xor
mov
pop
hlt
imul
int
mov
stc
mov
mov
out
scas
cmpb
pop
repnz
into
fidivs
cs
cwtl
shlb
jg
jg
rcrl
push
inc
or
mov
mov
cmpsb
les
loop
and
loopne
das
xor
loope
pop
xor
mov
cmc
jo
es
push
js
mov
imul
cmp
and
xor
ret
mov
jl
lret
xchg
repnz
and
inc
jecxz
mov
fldl
mov
movsl
js
stos
dec
rcr
mov
lret
gs
xchg
test
cmp
push
iret
xor
arpl
out
xchg
add
adc
push
sub
xor
dec
int
dec
aas
out
sbb
sub
ss
push
lea
in
pop
and
push
aaa
out
inc
dec
das
dec
sbb
fmul
fimull
dec
xchg
pop
jecxz
mov
insl
adc
fwait
test
inc
dec
inc
jne
mov
out
subl
and
fdivl
mov
ja
fsubrl
scas
add
add
sti
mov
pop
sub
testb
clc
sub
lods
and
test
into
ja
stos
adc
inc
push
in
pop
mov
in
lds
out
xchg
push
sub
cmp
ljmp
dec
adc
js
jmp
add
dec
scas
pusha
push
and
popf
stc
dec
mov
xchg
fisttpl
mov
mov
cmp
cltd
jo
cld
inc
inc
jno
testl
stos
ljmp
aad
icebp
mov
xchg
sub
out
cmp
mov
push
out
and
js
push
scas
mov
jle
dec
push
xchg
pusha
rcr
mov
xor
push
movsb
cmp
fadds
xchg
stos
xor
icebp
fists
je
bound
popa
idivb
or
and
sub
sub
sarl
hlt
mov
xor
scas
xchg
push
dec
dec
inc
cmp
mov
cmp
pop
pop
repnz
xor
cmc
xchg
jns
bt
lea
out
xchg
out
mov
pop
cmp
test
jae
int3
insb
ret
out
mov
pusha
or
sub
fs
mov
fxch
mov
stc
sbb
inc
inc
inc
jne
nop
cmpsb
jmp
cltd
push
dec
push
in
addb
mov
pop
lcall
mov
stos
cmp
pop
outsb
mov
cmpsl
test
sbb
or
scas
push
mov
mov
mov
mov
rorb
ret
mov
arpl
test
outsl
cmpl
and
js
lods
leave
pop
xor
jmp
mov
push
iret
mov
mov
sub
mov
pusha
call
into
je
arpl
cmp
push
push
sahf
xor
frstor
pop
in
or
insb
cli
scas
sub
push
add
sub
popf
lods
cmp
cmp
ds
inc
arpl
sub
ret
rorl
imul
adc
fsubr
dec
cmp
jnp
lods
mov
mov
adc
imul
add
in
xor
cld
shrl
das
xchg
movsl
jns
pusha
sbb
outsl
push
sbb
jae
adc
push
adc
aam
add
pop
movsl
xchg
sub
lcall
insb
mov
scas
sub
and
xor
and
sub
enter
pop
mov
subl
les
mov
scas
add
pusha
mov
fisttpl
xchg
jl
jge
std
imul
xchg
outsl
adc
aad
inc
ja
cli
ret
movsl
sahf
or
push
fstpl
inc
adc
sub
fs
or
mov
xor
dec
scas
jmp
sti
pop
rcrb
daa
xor
sahf
rcll
sarb
inc
mov
mov
mov
xchg
rcrl
pop
jg
aas
add
js
push
imul
jbe
mov
xor
shr
jns
testb
jno
lret
add
fwait
stos
push
push
nop
pop
lcall
pop
call
cmp
js
adc
js
add
jmp
sub
dec
lods
nop
xchg
das
sub
je
cmp
fdivrl
lods
xor
xchg
pop
aam
dec
test
orl
cmc
addr16
mov
pop
das
imul
ret
dec
cli
mov
cwtl
pop
ss
push
mov
pop
shrl
rcrl
outsl
mov
mov
fs
ljmp
repnz
xchg
lret
popa
xor
mov
arpl
push
negb
inc
cld
rorb
jg
lods
pop
loope
add
lods
shl
movsb
add
xor
push
dec
cmp
mov
pop
int
lea
adc
decl
jle
and
out
jp
rclb
and
dec
xchg
xchg
jg
jecxz
jmp
xlat
stos
dec
das
dec
popa
cmc
out
sbb
notl
shll
cmp
jmp
cmp
icebp
pop
cmp
lods
int3
pop
mov
push
out
mov
xchg
js
jbe
subl
jl
mov
push
lcall
adc
sub
stc
xchg
add
inc
xor
inc
mov
xor
mov
pop
jl
mov
cmp
lcall
mov
sbb
cs
rol
jle
mov
pop
mov
push
sub
push
stos
cmp
pushf
test
enter
inc
jne
int3
lret
inc
popf
ljmp
inc
les
mov
push
sbb
ss
cmp
push
dec
mov
add
pusha
dec
ja
jo
mov
and
in
dec
cmpsb
push
pop
sbb
loopne
sahf
repz
fistpl
dec
out
btc
bswap
arpl
mov
add
ljmp
dec
inc
out
xor
mov
push
cmovo
and
mov
into
and
adc
repz
mov
push
cmp
dec
mov
pop
fiadds
cmpsb
lock
loope
clc
mov
sahf
mov
xchg
dec
mov
adc
nop
sahf
clc
icebp
xor
mov
lret
inc
xor
fs
mov
test
add
hlt
hlt
arpl
lods
pop
mov
inc
popf
hlt
test
push
jbe
shl
dec
out
mov
mov
adc
and
inc
dec
mov
rorb
push
clc
pop
mov
ja
and
les
lock
mov
cmp
ret
mov
movsb
out
mov
lcall
gs
inc
shrb
rcrl
sbb
sub
xor
jl
sahf
rcrl
sti
dec
mov
shl
mov
pop
sub
pop
rsm
scas
inc
shrl
dec
sub
clc
fsubrp
sbb
add
addr16
xchg
push
rorl
lods
mov
lea
cmpsl
push
dec
loop
jmp
cmpsl
pop
icebp
fdivrs
decl
popa
mov
lcall
and
loope
call
pop
or
cli
mov
scas
xor
xchg
out
xor
cmpsb
xor
aad
stc
push
sbbl
or
fnsave
flds
andb
faddp
stos
mov
cld
ror
mov
bound
xchg
xor
dec
mov
pushf
outsb
or
rcrb
mov
in
push
ret
aaa
repnz
arpl
mov
lret
popa
lret
stos
and
fwait
das
les
insl
loopne
or
cmp
or
in
cltd
or
add
gs
add
test
adcl
mov
int3
jo
bound
daa
sbb
dec
push
fs
nop
in
stc
sub
xlat
inc
fimull
and
push
pushf
jge
mov
xor
ljmp
idiv
inc
pop
mov
xchg
pop
fs
ret
into
repz
sub
mov
cmp
jnp
mov
and
mov
dec
fcoml
arpl
movsl
sbb
adc
or
ds
sahf
xor
setne
movsl
push
rcl
mov
mov
scas
jnp
pop
imul
xchg
clc
xorb
sbb
xor
sbb
js
push
and
jne
ds
xor
lea
nop
lds
ja
call
in
movsb
jg
mov
fnstsw
movsb
inc
rcll
fs
xchg
outsb
popa
leave
in
nop
sbb
cli
mov
in
pusha
mov
or
xchg
push
leave
adc
adc
fs
or
test
dec
js
push
cmp
mov
xor
std
inc
lods
aas
xor
clc
or
xchg
lods
inc
popf
inc
pop
jb
mov
mov
inc
cmpsb
sub
xchg
mov
ss
jge
sbb
mov
shlb
mov
mov
jnp
adc
fldenv
les
ljmp
inc
dec
xchg
sbb
jae
jne
lods
jecxz
fucomip
sbbl
sbb
mov
mov
lret
inc
jmp
jno
mov
ret
int
outsl
ljmp
inc
fxch
fbstp
mov
mov
cmp
les
sub
push
or
test
or
mov
xchg
leave
sub
sbb
ljmp
movsb
push
cs
add
inc
test
dec
pop
xor
xor
cmp
orl
and
insb
add
or
and
adc
dec
pop
push
xchg
sub
sub
or
cmc
mov
and
mov
xor
sti
inc
or
push
push
scas
push
popf
loopne
fucom
das
pop
jmp
loop
push
pop
pusha
out
mov
inc
fstl
in
xchg
addr16
mov
mov
into
ljmp
repz
les
pop
decl
jns
loop
dec
jle
testl
jp
icebp
pop
mov
cmc
xchg
cltd
sub
push
xor
movsb
mov
push
out
push
out
std
in
mov
ljmp
or
mov
jb
addr16
adc
cli
xchg
push
ss
cmpsl
push
xchg
data16
inc
push
mov
and
test
and
mov
jne
sub
js
clc
jnp
cmp
and
lock
inc
loope
push
data16
push
imul
data16
stos
jecxz
xchg
adc
or
flds
jmp
xor
jno
int
loopne
out
out
aad
xor
jne
stos
lcall
rorb
dec
and
call
stc
add
loopne
xchg
inc
outsl
andl
in
int
js
std
cmp
xchg
testl
lods
les
mov
stc
test
jo
mov
rolb
outsl
sarb
movsb
test
and
int3
ss
shrb
cmp
inc
sub
and
idiv
adc
mov
out
scas
mov
js
mov
cld
jmp
sti
xchg
sub
ret
ret
cmpsb
cmp
jae
inc
aas
lcall
mov
lds
mov
data16
fsubs
in
test
jl
or
push
imul
repnz
fcoml
imul
cli
dec
pop
sub
inc
and
sbbb
aas
mov
dec
imull
notl
pusha
fsub
sub
jae
subl
dec
mov
inc
mov
sbb
ljmp
sbb
stc
xchg
sbb
mov
rorb
pop
sub
ljmp
cmc
push
dec
out
cmpsl
lret
sub
out
popf
cmp
xchg
sub
arpl
into
stc
nop
mov
lahf
mov
dec
loope
fstp
rcl
imul
sbbl
add
push
mov
cmpsl
loope
out
test
dec
fdivs
adc
out
fisttpl
js
ja
push
cltd
add
xor
lods
or
ficoms
fstl
push
xor
inc
or
jmp
xchg
sub
add
fidivs
jbe
sub
mov
fisubrl
subl
pop
pop
fsubrl
dec
stc
loope
and
jae
push
loop
fxam
and
hlt
addr16
push
dec
lret
or
cltd
das
add
es
jb
fsub
jp
cmp
xchg
daa
js
inc
mov
xchg
pop
outsl
jge
add
mov
mov
push
decb
cmp
outsl
cmpsb
out
xchg
cmp
mov
inc
pop
je
mov
cmp
rclb
testb
pop
scas
punpckldq
sbbl
mov
popa
int
pop
sahf
cs
mov
lods
scas
lds
lret
jl
sar
push
stc
pusha
jp
stos
mov
out
into
lahf
push
sbb
mov
ret
adc
jae
sarw
insb
jl
or
add
lahf
jo
ret
test
xchg
ss
jg
ret
cmp
pop
dec
test
mov
dec
fstps
or
icebp
dec
pop
or
daa
or
mov
pusha
cmp
mov
xchg
adc
xor
push
es
add
mov
ret
divl
pop
fucom
adc
sub
repz
dec
jle
lds
mov
ret
vmread
cwtl
imul
cmp
xor
test
lods
dec
inc
pop
mov
shll
stos
arpl
push
jns
or
inc
jle
pop
cmp
mov
inc
fdivr
adc
hlt
dec
pop
in
mov
in
cmp
mov
dec
gs
cmp
jle
sub
cltd
jnp
movsl
scas
pcmpgtw
adc
adc
jle
xor
jecxz
ljmp
icebp
jnp
hlt
cld
scas
cmp
or
ret
xlat
xor
sbb
mov
in
cmp
test
sub
and
fisttpll
outsb
mov
popf
stos
xchg
adc
in
stos
in
inc
idivb
mov
shrl
ljmp
or
rol
mov
jge
xchg
daa
add
mov
cmp
lret
jbe
pop
test
or
lods
iret
or
mov
test
lds
adc
sub
mov
lret
and
push
popf
rcrb
enter
xchg
cmp
sub
add
or
cwtl
or
xor
outsb
repnz
les
lahf
sti
push
add
and
dec
sbbl
mov
lock
leave
nop
sub
jnp
or
add
std
dec
fbstp
jl
mov
pop
inc
dec
jle
sahf
lods
in
loop
pop
jecxz
movsb
call
sub
xchg
mov
ret
daa
pop
cmpsl
lea
xchg
xchg
sahf
fcmovne
push
dec
cmp
js
mov
mov
ljmp
ret
inc
repnz
mov
mov
insb
shll
out
mov
cli
and
add
in
repz
push
jge
pop
out
repnz
stos
xchg
add
call
add
lahf
xor
fdivrs
mov
fisttps
mov
cmp
and
xor
cmp
lods
add
jae
pop
loopne
cwtl
add
dec
icebp
scas
cmc
sub
mov
mov
ret
loope
jg
ss
mov
addl
fcomp
jae
push
cmpsl
lds
cmpsb
and
sbb
inc
out
jg
push
or
orb
sub
mov
adc
push
sbb
xor
arpl
push
aam
ds
insb
adc
pop
pop
int3
orl
mov
pusha
dec
mov
or
enter
and
jmp
xor
mov
popa
jbe
pushf
bound
sbb
jns
int
fcomps
icebp
test
in
imull
jmp
xlat
dec
lret
jbe
loope
dec
lock
in
cmp
jg
cmp
lea
jle
enter
popf
test
add
daa
aas
dec
pop
pop
stos
adcl
jns
xor
cmpsb
ds
push
lds
stos
cmp
mov
push
movsl
cmp
jmp
ds
outsb
cmp
add
pop
stos
cs
add
dec
jno
dec
dec
fisttps
add
add
pop
roll
in
inc
pop
push
movsl
test
lods
push
xchg
sub
ret
ja
jp
adc
mov
in
adc
mov
aas
dec
sub
xor
inc
arpl
mov
push
mov
lods
in
cmc
mov
lds
idivb
adc
xchg
cmc
incb
dec
sub
mov
mov
xchg
cmp
dec
mov
enter
or
adc
lds
push
scas
sti
out
push
int3
sahf
sbb
pushf
dec
cmpsl
outsl
loop
loop
and
test
icebp
testl
negl
dec
mov
mov
call
jl
jo
pop
adc
push
mov
dec
in
test
pushf
xor
lahf
cwtl
scas
aam
mov
sbb
mov
fistl
sahf
nop
or
push
in
or
popf
aas
push
ljmp
sbb
jns
repnz
and
sub
fs
pusha
push
and
mov
fcomi
mov
ret
jns
pop
or
adc
push
push
pop
in
adc
mov
inc
push
inc
push
push
andl
test
dec
cmp
repnz
or
mov
sbbl
jmp
cmc
xchg
bound
cmp
pop
cmp
cmpsb
out
push
rorl
inc
scas
test
movsb
mov
xor
das
lds
mov
adc
mov
sub
jg
adc
sbb
and
adcl
and
cmpsl
js
sub
sbb
idivb
notl
rolb
iret
add
nop
test
inc
jl
pop
jp
push
add
fisubs
js
or
or
xor
push
out
sub
cmc
pop
clc
popa
sbb
cli
mov
inc
sub
jb
pushf
or
cmp
push
push
and
lock
es
lcall
mov
cmpsb
pop
inc
gs
pop
sbb
xorl
xor
sbb
sarl
fstcw
les
pop
pop
icebp
lds
loop
cli
outsl
lret
mov
aam
and
xchg
imul
int
inc
jp
movsb
mov
cmpsl
pusha
sub
cli
push
cmp
sahf
lods
cmp
pop
test
jo
lods
inc
mov
inc
in
sahf
inc
pop
pop
inc
xchg
insb
inc
inc
popa
lea
test
iret
mov
adc
int
cmc
sbb
cmp
leave
push
insb
fisubl
roll
fsub
sbb
jp
push
xchg
add
out
in
shl
push
pusha
lcall
or
sub
jmp
pop
pop
ljmp
out
aam
mov
xor
jl
mov
xchg
cmpsb
pop
aad
mov
mov
in
imul
xor
mov
addr16
repz
shll
mov
ja
imul
xchg
xor
jmp
and
sub
lret
xor
jnp
pop
xchg
inc
fisubrs
leave
gs
cli
xchg
iret
orb
inc
fcomps
xchg
imul
xor
mov
cmpb
cmpsb
cmp
add
punpckhdq
xor
aad
add
movsb
add
pop
fsubp
div
adc
push
xor
and
push
in
inc
pusha
push
nop
fs
and
stc
or
lods
leave
lahf
sbb
mov
outsl
push
imul
mov
jmp
add
push
or
pop
mov
push
movsl
cmc
lret
dec
sbb
out
or
leave
test
leave
stc
arpl
cmp
jno
fs
int
dec
inc
clc
xor
xchg
sti
jae
mov
out
cmp
sar
pop
mov
out
ss
ljmp
arpl
popa
push
cmp
push
mov
xchg
push
movsl
sbbb
push
cwtl
cmp
leave
mov
aaa
fstps
xchg
mov
pop
inc
hlt
stc
shl
ds
je
xor
addr16
xchg
xor
jmp
add
xchg
jnp
inc
popf
mov
jmp
fimull
inc
out
jae
cmp
jg
mov
cmp
cmp
pop
and
shlb
scas
push
loope
stos
cmp
stos
mov
cs
stc
ss
fiaddl
lods
jns
mov
inc
or
scas
jno
adc
fdivs
push
in
cmp
shrl
test
ficoml
dec
inc
pop
xor
icebp
imul
xorb
lret
stos
push
push
call
mov
fcomip
jle
sahf
or
sahf
xor
lods
in
sub
and
pop
cmpl
lods
stos
inc
jle
dec
fs
jge
add
pushf
cmc
test
pop
testl
pop
loope
das
jle
stc
loope
or
sbb
push
jmp
xor
outsl
imull
jnp
xchg
dec
pop
imul
and
cmc
mov
stos
andl
push
pop
sub
lds
xor
pusha
das
mov
mov
xchg
xor
fsubrl
mov
pop
sbb
and
out
cli
sbb
pop
sbb
shlb
and
or
jb
fistl
xor
push
xchg
mov
xchg
js
dec
aas
shl
or
mov
pop
xor
xchg
andb
nop
das
adc
out
imul
adc
orb
dec
in
idivb
aad
dec
out
inc
stc
or
in
push
sti
gs
insb
fucom
xchg
nop
jl
fnstsw
push
lcall
hlt
lock
cmp
jecxz
sbb
subb
fidivs
lret
ljmp
xchg
jg
mov
test
cltd
sub
lret
pop
sbb
adc
pop
inc
scas
mov
std
mov
jmp
ja
and
inc
test
mov
and
and
pop
test
add
scas
and
jge
insb
pushl
inc
xchg
test
into
sub
and
fdivr
std
xchg
sarl
pop
loope
pop
dec
add
dec
popf
xchg
push
pop
out
dec
and
cltd
test
xor
insb
cmp
pop
jp
int
jecxz
jae
insl
add
sarl
iret
jge
out
repnz
cld
and
lcall
or
push
mov
data16
xor
inc
lea
mov
add
jno
lods
daa
mov
fs
mov
test
lret
aad
and
aad
xchg
inc
sahf
clc
jmp
mov
stos
sti
mov
sub
push
iret
data16
in
xchg
xor
or
in
mov
sub
and
shlb
adc
mov
mov
aad
fwait
or
push
cmpl
mov
mov
imul
cmp
mov
fimull
es
int
jns
mov
insl
je
outsb
loope
sbb
orl
dec
pop
or
outsl
ret
dec
mov
clc
scas
xorl
imul
roll
jo
das
mov
popf
xchg
xor
iret
shrl
jns
idiv
lock
out
cmpsb
and
mov
push
xchg
jg
jb
adc
test
push
or
or
in
leave
cmp
sub
sub
and
inc
pop
pop
dec
loop
wrmsr
dec
clc
xchg
imul
js
cmp
adc
inc
sbb
stos
fucom
outsb
cltd
xor
push
jmp
fs
jnp
xor
push
roll
and
in
loope
pop
stos
pop
fadds
dec
add
xlat
mov
testl
mov
sub
cmp
adc
jl
popf
ret
push
jbe
testb
ljmp
daa
shrb
sbb
lods
push
testl
fmulp
pop
sbb
gs
and
dec
stos
insb
add
stos
mov
test
cs
fwait
lods
cs
pop
inc
sub
inc
push
roll
ja
out
jge
sbb
mov
cmp
mov
jge
mov
and
pop
and
mov
cli
loopne
dec
popf
int3
lret
cmpsb
out
push
pop
test
std
fs
cwtl
xchg
lods
leave
pop
mov
out
or
out
sbb
pop
xchg
int
fwait
jbe
out
sbb
push
popf
mov
leave
int3
mov
test
xor
into
sti
push
or
pusha
mov
cmpsb
sbb
push
cmc
add
es
stos
insb
jae
lret
sub
mov
leave
stc
mov
insl
aas
daa
mov
jbe
rcrl
xchg
adc
ds
iret
mov
jb
cwtl
stos
push
mov
xchg
sub
stos
nop
fisubrl
push
cld
pop
test
psrld
daa
jge
sbb
cmp
movsl
cmp
cmp
rol
arpl
sbbl
jbe
clc
lock
mov
sbb
mov
sbb
sbb
data16
sti
fsubrs
jl
enter
push
cmpsl
jnp
std
lods
les
in
jp
test
dec
add
les
cs
dec
xchg
inc
xchg
add
call
lock
mov
fldcw
and
mov
test
js
ja
mov
xchg
xchg
sub
data16
out
dec
into
lea
jmp
inc
dec
push
fsub
das
xor
mov
out
stos
dec
fsubs
roll
sub
in
pop
je
std
shl
sub
jge
leave
cmpsl
pop
pusha
sub
xchg
sahf
or
sub
leave
xchg
iret
xor
scas
std
out
or
aaa
pop
outsl
push
xchg
jnp
out
adcl
cmp
mov
add
xchg
sbb
sahf
imul
jnp
adc
inc
out
mov
faddp
push
xor
movsl
push
mov
loop
cltd
adc
pop
or
cs
or
mov
out
cwtl
cmp
movsl
add
cltd
pop
rol
ficomps
mov
jecxz
and
xchg
je
inc
mov
or
mov
mov
in
and
popf
push
inc
popf
addr16
add
and
scas
xchg
sub
icebp
jnp
xor
je
ret
adc
sar
in
fcmovnbe
sbbb
and
xchg
mov
cmpsl
outsb
imul
mov
ljmp
lret
pop
lret
sarl
cmp
hlt
inc
roll
cmp
sub
pop
cmp
cmp
in
pop
shrb
mov
frstor
push
loopne
mov
nop
dec
pop
inc
or
inc
hlt
out
popa
ljmp
xchg
xor
scas
shl
mov
arpl
sti
adc
sub
pop
data16
mov
jecxz
jo
xor
mov
fdivl
adcl
mov
or
sarl
sub
test
and
outsb
cmp
outsl
cmpsb
or
dec
jp
stos
xor
in
adc
pop
repz
mov
aas
jo
stos
push
push
or
shll
insl
shll
and
adc
pop
imull
add
jp
jmp
or
ds
sbbb
aam
jmp
adc
push
sbb
shll
xchg
rol
cs
ds
dec
ret
into
mov
fucomp
jo
popa
jnp
jne
gs
dec
in
push
jb
daa
mov
or
pusha
orl
mov
lcall
fmuls
addr16
push
pushf
lahf
xchg
sub
pop
mov
outsl
mov
mov
sbb
scas
shll
lock
scas
and
fdivl
divl
xchg
or
mov
lock
aaa
cmpsl
mov
mov
int3
push
nop
jl
ret
dec
shll
rcrl
mov
cmpl
sbb
shl
out
in
adc
push
sbb
loopne
and
lahf
adc
adc
fmull
bound
movsbl
ret
xorl
shlb
cmp
or
xchg
pushf
cmc
jmp
sub
gs
pop
jae
sub
mov
fwait
add
hlt
cmp
and
dec
jb
cmp
clc
cmp
lahf
jg
lcall
inc
sti
cli
loope
scas
xor
ljmp
imul
lcall
sbb
movsb
cmp
xchg
jbe
lcall
pop
ljmp
adc
fldpi
bound
test
pop
lahf
mov
push
mov
xor
je
mov
call
xchg
mov
lea
sbb
dec
stc
adc
aaa
gs
cmpsl
es
pop
mov
jle
add
in
push
cmpsb
pop
jo
rcrb
aam
adc
cs
push
mov
fdivl
mov
or
cli
xchg
std
js
inc
ret
mov
xchg
test
lcall
sub
aas
xchg
ss
test
int3
xor
lods
inc
adc
shll
mov
popa
cmp
fidivl
or
mov
jmp
stos
xor
fstl
testl
lret
rorb
in
sbb
jecxz
fstps
push
stos
cmp
mov
fucomi
aas
test
aaa
fisttpll
mov
lock
or
mov
pop
enter
inc
out
push
addr16
pop
mov
shrb
mov
mov
cwtl
aas
bound
pop
jmp
xor
dec
stc
mov
jne
sbb
pop
jbe
fdivs
and
push
mov
push
jo
inc
pop
or
dec
and
std
push
or
mov
addl
sub
pop
push
xor
xorl
aam
mov
and
repnz
aam
clc
jbe
mov
push
xor
sbb
inc
pop
insl
std
and
push
mov
shrl
sub
ret
pushf
repz
lds
jg,pt
js
repz
jnp
sbb
insl
in
pop
push
jbe
aaa
test
pop
mov
icebp
inc
repnz
inc
shl
clc
push
inc
cmp
shlb
dec
inc
push
out
jnp
stos
cmp
lods
scas
inc
pop
xor
scas
out
enter
xchg
fnstsw
les
mov
or
add
jge
mov
or
aad
jo
mov
push
cmpsb
xchg
pop
xchg
dec
jl
jg
cmp
loop
jae
aam
pop
xchg
push
sub
and
mov
mov
adc
ljmp
das
jns
xor
dec
jb
adcb
xchg
decl
pushf
xor
aaa
pop
testl
pop
push
jo
dec
jnp
jne
jecxz
inc
cltd
sbb
mov
int3
jg
out
negl
nop
add
push
lds
dec
pusha
mov
ds
push
dec
pop
and
mov
das
push
lret
jnp
jp
dec
lahf
xor
cmp
pop
mov
push
jmp
orb
jge
lret
bound
leave
jmp
dec
scas
sbb
in
es
sub
or
mov
adc
dec
lcall
xchg
addl
jg
loope
mov
pop
xchg
xlat
pop
mov
ja
inc
and
sub
insl
aam
sbb
dec
jne
repnz
dec
or
popa
mov
nop
ficoml
sub
fs
cwtl
mov
adc
pusha
int
rcr
insl
push
jae
hlt
adc
adc
jecxz
repnz
xchg
mov
push
aaa
jbe
imul
inc
fisubrl
jmp
or
fdivs
push
mov
sahf
sarb
xor
jb
mov
jmp
cmp
cwtl
cmp
call
into
push
je
inc
inc
lea
jp
loopne
jb
lahf
adcb
sub
jp
in
jmp
pop
jl
cmp
mov
dec
cmp
push
lea
clc
stc
je
pop
mov
sti
xlat
call
mov
fmull
imul
out
arpl
jmp
es
movsl
ret
mov
aaa
pop
jg
lods
add
mov
xchg
add
xchg
andl
sahf
cwtl
add
sbb
jns
cmp
fadd
iret
jl
cmp
and
mov
arpl
mov
in
xchg
mov
dec
out
test
testb
add
movsl
jecxz
and
mov
inc
sub
sub
push
cmp
in
mov
in
add
in
pop
cmpsb
jl
pop
das
vpsubusb
outsb
pop
inc
xlat
nop
or
idiv
or
or
int
shlb
es
adc
xchg
mov
sub
int3
lcall
jecxz
sahf
jns
add
in
sbb
cld
inc
adc
push
out
fsts
std
dec
sub
sbb
sbb
dec
sahf
jp
clc
sti
testb
push
xchg
scas
aaa
xchg
xchg
add
pop
shr
mov
mov
xchg
jmp
dec
ficoml
fisubrl
and
cmp
leave
insb
mov
les
fsubrl
push
loopne
pop
cmp
lea
adc
jecxz
push
xor
push
iret
popf
sbb
xchg
adc
mov
fcomip
mov
mov
pop
add
mov
pop
dec
mov
mov
dec
fistl
cs
pop
mov
mov
pop
pop
je
ds
jbe
int3
pop
cmp
scas
jecxz
jb
dec
xchg
dec
cmp
dec
shl
daa
fldpi
push
insl
ss
js
sbb
in
xor
ficoml
jg
or
out
xor
fnstsw
mov
sub
iret
jb
arpl
aaa
mov
mov
negl
push
adc
lcall
inc
push
mov
loope
sub
xor
sub
andl
mov
or
xchg
sti
mov
or
fstpl
notb
test
scas
in
fistpll
aam
mov
ret
lea
or
pop
mov
pop
jb
mov
fldl2t
dec
leave
arpl
xor
mov
call
and
lods
movsl
dec
les
or
ja
xor
inc
push
insl
xchg
sub
subb
movsb
jle
test
mov
aaa
stos
daa
es
loopne
or
sbb
ja
stos
push
dec
mov
test
sbb
test
inc
mov
jae
outsb
sub
arpl
jmp
cmpl
push
add
lods
jbe
in
iret
pushf
add
mov
add
dec
sub
add
in
lods
pop
mov
add
mov
aaa
adc
aas
adc
movsb
jp
out
cmpsl
out
test
aas
das
fucomip
stos
loope
test
imul
cmc
loopne
jmp
pop
or
stos
jbe
sub
add
sbb
les
lcall
nop
and
add
push
and
xor
xor
add
loopne
bound
fidivs
fcompl
push
fsubr
mov
lret
or
mov
pop
or
insb
push
stc
cmpsl
imul
jmp
add
inc
inc
mov
das
repnz
punpckhbw
fldcw
pop
or
cli
fxch
sub
scas
inc
ja
stc
pop
mov
sub
mov
loop
sbb
cmc
ss
imul
in
mov
test
ret
pop
stos
sahf
and
mov
sbb
scas
data16
fbld
adc
cltd
cmp
ja
adc
test
call
aaa
or
mov
lcall
leave
ljmp
fidivl
loop
mov
jmp
xor
int3
adc
fs
aaa
mov
adc
inc
or
ja
iret
xchg
adc
push
call
gs
mov
fmull
mov
decl
rcrb
and
out
push
jl
jecxz
push
fdiv
lea
mov
mov
fidivl
les
loope
jnp
sub
xchg
dec
test
push
sbb
sahf
sbb
fldt
mov
sub
ret
int
movsb
xchg
and
xorl
sbb
fistpl
push
incb
jp
xor
mov
push
cmp
pop
ljmp
push
jne
jge
pop
scas
xlat
xchg
in
je
dec
mov
xchg
push
mov
call
mov
jo
cs
cmp
in
xor
daa
pop
xchg
out
inc
jns
inc
inc
test
jo
mov
xchg
push
sbb
xchg
mov
jl
nop
jnp
fildll
cmpsb
in
inc
inc
outsb
repz
sbb
cmpl
jo
lahf
push
mov
jecxz
imul
sbb
inc
or
sub
cs
or
aaa
shlb
cs
mov
sub
pop
pushf
inc
leave
js
insl
rcr
dec
sbb
cltd
lret
sub
decl
jb
push
push
mov
sub
xor
mov
testb
daa
out
push
in
outsb
push
fdivrp
or
jbe
mov
sti
mov
mov
leave
mov
xchg
and
lds
stc
jmp
jle
lcall
and
lds
stc
movsl
sti
jb
pop
or
jae
jnp
fists
push
jne
popf
mov
cwtl
cmp
ret
testl
cmp
cld
lcall
in
test
mov
cmp
fwait
inc
push
inc
push
pop
inc
jbe
cmp
lret
dec
pop
inc
xchg
in
fidivl
cmc
jo
add
push
jae
out
xchg
imul
cmp
jle
xchg
repnz
lret
jp
dec
and
mov
mov
ret
andl
cmpsl
push
aad
aam
into
pop
jbe
lcall
cli
es
ficompl
mov
inc
imul
mov
aad
and
jg
mov
inc
jno
cs
inc
fidivs
dec
iret
dec
adc
hlt
in
in
xchg
sbb
jb
jecxz
jecxz
inc
fisttpl
add
jno
jmp
fsts
test
adc
pop
cmp
add
jnp
xchg
dec
cltd
gs
std
jg
and
xchg
xchg
mov
mov
movsb
fucom
pop
dec
clc
sahf
in
jl
push
pushf
std
sbb
mov
outsl
shrb
testb
xchg
popa
xor
loopne
inc
sti
cmp
addr16
cmp
push
rolb
cmp
xchg
or
mov
jecxz
lods
add
adc
mov
mov
aad
xor
mov
std
or
rcrl
outsb
mov
shrb
popa
int3
jb
xlat
iret
mov
mov
jne
xor
pop
mov
les
cmpsl
aaa
push
fadds
fwait
cs
rol
loop
shrb
push
mov
sub
jno
movsl
ret
dec
push
into
or
mov
sbb
mov
cmp
jp
inc
pop
mov
and
inc
mov
nop
jmp
xchg
xchg
rcll
repnz
push
adc
into
mov
into
es
int
and
push
and
fstp
xor
and
push
push
adc
mov
fdivl
add
inc
out
xchg
sbb
mov
shll
cmp
xor
xor
mov
nop
dec
in
xchg
mov
loop
xorl
loope
fcomps
mov
push
mov
aad
loop
addr16
xchg
xchg
test
pop
xchg
cmp
fistps
inc
cmpb
xorl
pop
cwtl
lcall
cmc
sahf
cmc
mov
fimull
mov
push
or
enter
xchg
inc
push
mov
pop
lds
movsl
mov
pop
leave
aad
cmp
pop
adc
jecxz
ja
mov
push
push
mov
subl
stos
and
in
cmp
mov
mov
movsl
sub
add
mov
push
and
and
repnz
or
inc
stc
and
lcall
and
dec
adc
jge
lahf
dec
jae
std
cmc
and
push
out
les
jmp
cltd
rcrl
scas
test
sbb
sti
or
pop
xlat
mov
loope
jmp
int3
ds
mov
ja
xchg
lods
sbbb
es
jne
adc
mov
pop
jge
fstps
lcall
inc
gs
xchg
dec
push
aaa
popa
mov
aas
shlb
test
inc
out
sbbl
sbb
scas
ret
fiadds
sub
cmp
shll
repnz
lds
jne
pop
dec
jbe
adc
clc
adc
cmc
imul
test
jl
sbb
iret
outsb
push
mov
fsubrl
negl
icebp
pop
sbb
inc
fmuls
pop
neg
adc
push
lods
sub
mov
push
shr
mov
cmp
iret
or
or
cmp
dec
cmc
mov
loopne
sub
inc
dec
mov
jl
and
cmpsb
test
leave
sub
push
and
push
jp
fsubrl
lahf
popf
xor
es
add
push
test
inc
fnstenv
jmp
pop
mov
stos
xchg
sub
stc
add
lock
adc
stos
mov
sti
dec
pop
das
js
imul
mov
sbb
adc
sbb
adc
jmp
loopne
lcall
test
push
ss
dec
popf
dec
cmpsb
add
out
dec
sbb
or
inc
int
arpl
inc
mov
and
aas
outsb
rclb
lea
cmp
test
cmovle
mov
xlat
outsb
xor
cs
sti
cmc
nopl
push
cwtl
pop
shlb
xor
jmp
add
mov
fimull
dec
xchg
shl
imul
dec
icebp
sbb
fists
or
das
jb
pusha
pusha
cs
cmp
mov
pop
dec
cmp
inc
jg
ja
bound
fcomps
mov
sarb
es
shll
adc
mov
and
sbb
mov
inc
cld
int3
dec
outsb
in
adcl
fisttpll
imul
subl
jmp
jmp
cmc
sbb
test
mov
das
jno
clc
jae
xchg
scas
jo
sahf
imulb
and
push
insl
jo
ret
es
adc
ds
jo
sahf
dec
cmp
rol
jbe
xor
sti
push
push
ss
push
or
int3
mov
bound
and
mov
dec
and
jo
inc
mov
or
and
es
repz
cmp
popf
clc
out
inc
or
je
fnsave
xchg
cmp
add
mov
and
in
sbb
adc
movsb
addr16
xor
jle
fcmovnb
adc
mov
pop
xor
fwait
jne
mov
mov
lahf
outsl
adc
lds
repnz
jecxz
or
int3
push
cmp
or
popa
clc
lret
and
sub
pop
xchg
xchg
jl
enter
dec
pop
imul
testl
push
mov
movsl
fidivrs
sub
mov
sub
jp
pop
mov
inc
dec
mov
in
loopne
ror
xor
dec
ficoms
outsl
adc
es
fs
sti
mov
add
scas
xchg
xchg
push
fadds
lock
jge
xor
mov
fistpl
test
xchg
adc
mov
andl
js,pn
add
ds
rorl
adc
or
test
loopne
addr16
fadds
jg
mov
shrb
mov
shrb
mov
icebp
or
dec
arpl
cmp
push
jae
sbb
adc
ficompl
movsl
mov
mov
adc
test
jbe
rol
jb
mov
adc
shrb
dec
gs
sbb
test
andl
mov
ret
pminsw
es
push
test
scas
lcall
insl
shr
jp
jecxz
imul
jo
inc
fwait
mov
mov
ja
xchg
ja
popf
xor
pop
bound
test
dec
lret
mov
stc
sbb
add
cmp
insl
dec
repz
mov
xlat
xor
and
adc
push
mov
lahf
inc
jmp
aam
ret
xor
mov
outsl
iret
adc
push
mov
adc
push
jo
lret
imul
push
or
hlt
add
cld
in
xor
sbb
mov
xchg
jmp
sbb
jge
stos
fwait
xor
xor
cmc
jno
cmp
sub
repz
aam
call
push
dec
xchg
sbb
push
mov
nop
fnstsw
xchg
push
mov
enter
shlb
aad
std
jno
out
xchg
aam
ret
sub
dec
dec
adc
xchg
insl
inc
cwtl
aas
outsl
add
lock
inc
mov
pop
ret
repz
orb
enter
add
outsb
mov
stos
and
inc
and
aaa
aam
push
add
inc
mov
dec
loopne
add
repz
ja
inc
adc
mov
arpl
into
popf
cmp
mov
push
ljmp
fisubl
pop
jge
dec
adc
shlb
mov
mov
fcmovb
test
jg
or
push
push
incl
mov
arpl
data16
std
push
xor
jbe
les
arpl
mov
mov
mov
cmpsl
jp
inc
push
mov
aam
movsb
lds
mov
fildll
scas
mov
orl
stc
xchg
sti
pop
imul
and
push
jle
sub
sbbl
or
dec
push
cmp
jge
mov
rolb
mulb
scas
vdivsd
nop
in
pop
adc
xorl
clc
or
ja
sub
sbb
jp
inc
jl
pop
pop
and
add
fisttpll
mov
aas
popa
jecxz
sbb
test
pop
addl
popa
cmpsl
out
lods
xor
mov
movsl
das
xor
mov
adc
xchg
cmpsl
and
cmpsb
ret
fildl
or
push
ljmp
lods
cld
add
mov
repnz
in
lea
mov
mov
cmp
lock
test
aam
or
call
sfence
out
jge
inc
arpl
out
fs
aad
push
ljmp
jno
fstpt
push
pop
push
jnp
stc
mov
xor
jo
cmpsb
sbb
jo
mov
mov
ljmp
cmp
mov
adc
js
add
neg
jne
cmp
push
cmpb
sarb
push
test
into
inc
mov
idivb
mov
shll
adc
loope
push
fwait
xor
outsb
jmp
jl
pushf
out
xchg
cmp
lods
xor
mov
adc
icebp
les
jmp
inc
gs
or
jg
pop
mov
mov
in
push
sarb
adc
js
arpl
lea
or
cmpb
mov
xor
xor
stos
lret
and
ja
xor
cltd
sub
add
cvtps2pi
jle
dec
add
sbb
imul
fcmove
das
sub
push
push
int3
gs
ret
fisttpll
test
fmuls
adc
arpl
sbbb
sti
inc
mov
and
sti
adcl
mov
xchg
cmp
lods
test
pop
nop
push
push
pop
mov
popa
clc
pop
lods
adc
inc
and
clc
fisubrl
xorb
ljmp
push
xor
movsl
icebp
stos
fs
rcrl
leave
sub
mov
lahf
cmp
jbe
sbb
or
lds
mov
jl
sub
add
push
inc
cmpsl
mov
fcoml
sbb
jbe
mov
negl
adc
sbb
push
xorb
icebp
addr16
push
push
cmpsb
sbb
divl
loopne
lds
adc
int
adc
shrb
mov
rorl
jp
inc
popf
out
andb
loope
lock
rcrl
xchg
insl
pop
fbstp
mov
mov
xor
addb
js
and
mov
push
jp
subl
xchg
push
repz
dec
adc
mov
int
jg
or
push
inc
loope
add
in
cmpsb
lret
ljmp
daa
mov
and
fldcw
push
dec
lcall
or
jae
insl
movsb
sub
sbb
xor
inc
and
daa
ss
fwait
xor
and
neg
ret
sti
popf
jno
or
stc
sub
in
inc
cs
imul
pop
in
jne
mov
sub
adc
inc
mov
in
xchg
repz
pop
popa
loopne
sub
jp
mov
repz
dec
in
outsb
loope
std
shll
mov
xor
cli
and
sub
enter
cli
mov
adc
ret
pop
mov
arpl
test
sbbl
ljmp
adc
test
mov
call
inc
mov
cmp
xchg
inc
xchg
mov
mov
push
dec
dec
xor
fdivrs
fsubrs
scas
inc
jl
cmpsb
dec
jle
into
xor
inc
in
decb
mov
and
clc
push
cmp
test
repnz
sub
xchg
inc
mov
out
or
and
xchg
dec
imul
push
adc
testb
jle
cmp
mov
bnd
lods
mov
adc
pop
sahf
mov
jb
cmpb
cmp
rcll
add
les
ret
sub
xor
shl
jge
stos
aam
push
pop
xor
sbb
shlb
out
inc
add
dec
jge
cmc
push
mov
sahf
pop
repz
push
test
adc
les
and
jnp
inc
pop
mov
leave
xor
jne
inc
pop
mov
pop
or
gs
pop
jl
pop
mov
pop
mov
sbb
outsb
call
repz
int3
mov
dec
movsb
inc
fidivl
push
pop
orb
dec
add
in
cli
cmc
test
imul
pop
and
and
sub
in
jg
cld
outsl
mov
push
inc
cli
mov
pop
loope
test
and
fisubl
or
outsb
dec
sahf
push
cmp
sbb
outsl
loop
rcl
pop
sub
testb
mov
mov
adcl
xchg
sub
xor
hlt
rcrb
adc
out
icebp
inc
loop
js
cmp
pusha
std
rcr
add
or
jl
push
sarb
repnz
testb
sbb
fldenv
xlat
cs
inc
push
clc
je
mov
push
push
shl
inc
mov
fdivl
push
icebp
aam
cs
sub
jg
cli
jle
mov
xor
jbe
jb
jecxz
in
jl
mov
xchg
mov
or
inc
add
fsubs
mov
jmp
and
pop
ret
cli
stos
scas
jno
or
dec
dec
cmp
int3
sbb
push
out
dec
fcomps
test
jo
dec
cmp
ret
jle
sub
out
jno
cmc
push
push
mov
sbb
push
sahf
xor
and
sbbb
test
add
mov
push
cltd
adcl
shl
dec
mov
call
test
dec
repnz
mov
dec
and
and
sub
push
xor
movl
add
test
lock
jnp
sbb
test
pop
test
cmp
jecxz
pop
sbb
inc
ja
jns
outsb
mov
mov
negb
punpckhdq
decb
cmp
int
cmp
cmp
mov
test
fbstp
subb
sbb
fmulp
les
pop
div
gs
in
int
jb
cld
loop
or
jbe
sub
dec
and
mov
aas
sahf
inc
pop
add
fcompl
xchg
adc
dec
popf
fwait
jmp
sarb
stos
lock
sbb
pusha
dec
inc
in
dec
add
xchg
adc
in
mov
test
push
sbb
xlat
test
xchg
int
pushf
sbb
aad
ret
ss
repnz
pop
fisubrs
mov
lods
jmp
push
popa
xor
ja
xchg
pop
jmp
movsl
and
rcrb
mov
sti
inc
xor
push
scas
rorl
sub
cltd
sbb
mov
mov
mov
adc
lret
mov
cltd
mov
shl
push
mov
dec
xchg
inc
fcmovnb
mov
xlat
insl
push
shlb
jne
mov
mov
lods
rcrb
adcl
xor
test
lds
sub
or
addr16
adc
andl
addl
xor
cwtl
cmp
mov
aas
push
jae
jae
jg
inc
int3
test
inc
pop
add
int
adc
lret
push
bound
subb
fucomi
lods
adc
leave
lods
ljmp
es
push
dec
jg
inc
mov
push
in
inc
shrb
mov
mov
xchg
cmpsb
imul
fld
faddl
fsubrp
jmp
mov
mov
mov
data16
daa
cmc
mov
xchg
pop
es
mov
out
xlat
push
pop
sbb
iret
data16
and
cltd
pop
jl
jle
xchg
cmc
adc
push
adc
mov
pop
add
pminsw
rolb
mov
xorb
lds
pusha
sub
out
je
hlt
loope
inc
and
mov
scas
pop
das
pop
pop
adc
mov
sbb
sub
idiv
push
push
cmc
add
and
pop
lcall
and
and
movl
aas
test
push
ds
push
in
cli
push
int
rorl
fs
fimull
mov
and
and
outsl
jle
push
mov
xor
jl
sub
add
lea
xchg
lea
lret
vfnmadd231ss
loop
sbb
mov
mov
jbe
cld
iret
test
int
out
cmp
pop
adc
jns
sub
ficoml
jae
xchg
andb
and
inc
test
mov
jo
push
mov
mov
cmp
lods
in
or
cwtl
popf
cltd
stos
adc
divl
cmp
sahf
aam
dec
cmp
out
in
gs
fildll
mov
xor
shr
push
in
sbb
das
mov
sub
daa
in
popf
icebp
int3
popa
and
adc
dec
pop
loope
jg
jg
and
and
cltd
adc
push
xorb
cmpsl
sub
jle
dec
call
pop
inc
imulb
add
in
add
sub
pop
adc
and
fwait
push
jl
xor
push
sahf
xchg
jo
jae
xchg
out
pop
mov
jg
ss
cmp
scas
in
cltd
xor
mov
xor
push
mov
mov
cmp
je
out
mov
pushf
in
cli
out
mov
fiaddl
ret
push
in
add
xor
mov
shrb
mov
jno
push
mov
mov
cmpsb
pop
outsb
lea
iret
adc
pop
inc
in
ja
or
xor
popf
test
ss
mov
mov
xor
sbb
cmp
or
jae
jecxz
jle
push
xorb
fidivrs
mov
in
cmpsl
jp
add
mov
shlb
pop
adc
outsb
push
mov
rorl
xor
daa
push
cmp
cs
pop
sbb
scas
xor
mov
lods
in
pop
sub
inc
sti
in
lret
subl
js
add
sub
scas
dec
pop
jg
fnstcw
shrb
lea
dec
cmc
cmpsb
mov
add
stc
inc
orb
std
push
ret
cmp
xor
notb
add
push
std
gs
jp
sbb
or
jbe
mov
into
adc
push
or
pusha
mov
nop
mov
adc
sub
sub
mov
add
xchg
sbb
xlat
mov
push
orl
clc
or
mov
add
mov
jmp
xchg
xrelease
cmp
fwait
mov
fisubl
adc
mov
xor
idivl
adc
dec
pop
out
in
popf
in
shll
pop
std
call
mov
std
cmpsb
test
push
mov
xor
push
mov
push
and
popa
adc
ss
es
lret
aad
into
xor
pop
test
sub
test
or
jecxz
and
sti
shlb
jo
xchg
sahf
xor
nop
pop
mov
icebp
out
daa
inc
add
pop
adc
lret
pop
dec
adc
les
jecxz
fsin
mov
or
pusha
fnstsw
jb
jecxz
cmp
adc
inc
cld
outsl
cmp
jg
enter
popf
fs
jecxz
adc
lods
mov
std
jp
sbb
pop
fildl
xor
sti
push
dec
push
sarl
das
cmpsl
fmul
push
inc
out
std
lcall
or
icebp
cmp
mov
jecxz
jmp
sub
add
sub
mov
mov
xlat
int
cmc
add
repnz
lods
pop
cmc
adc
ss
inc
rorb
pop
pop
xchg
data16
ljmp
or
repnz
fistpl
mov
pop
out
cmp
mov
pop
test
sub
inc
bound
negl
je
inc
mov
jmp
ds
jnp
jb
push
mov
push
mov
and
mov
shll
loope
aas
jmp
lcall
stc
dec
sub
scas
js
add
jecxz
push
fidivs
dec
fsts
inc
lcall
cwtl
xor
mov
inc
clc
rcrl
sbb
fwait
sub
inc
lock
push
fnstsw
scas
scas
int
and
rorl
jp
subb
or
cmp
hlt
addr16
rcrb
nop
sub
lock
add
hlt
sbb
add
aaa
push
xchg
lods
jae
add
loope
repz
add
je
jmp
stos
and
insl
pop
or
xchg
cmp
outsl
jns
ja
fimuls
mov
mov
push
scas
out
mul
mov
mov
ret
loop
push
cmp
xchg
jp
aaa
sbb
dec
aad
lock
outsl
xchg
dec
mov
xchg
mov
shr
xor
lock
in
xchg
push
popl
es
jg
jo
add
mov
mov
inc
or
inc
jnp
je
fbld
jno
dec
sub
pusha
cmp
test
leave
loop
mov
inc
adc
iret
sbb
sbb
jb,pn
hlt
out
sbb
adc
sbb
subb
xor
sahf
cmp
pop
fistps
repnz
pop
or
pop
stos
fnstenv
std
mov
adc
out
cmpsl
mov
repz
push
imul
jo
fdiv
les
out
jb
push
out
andl
dec
sub
xchg
lea
pop
inc
out
sbb
mov
mov
or
jg
push
ret
mov
lods
inc
icebp
fnstenv
push
dec
loope
pop
sub
lods
inc
gs
and
sub
repnz
sbb
or
jo
inc
mov
daa
lcall
inc
call
fs
pop
out
inc
mov
xchg
repz
jns
fsubrs
pop
cwtl
jns
sbb
add
sbb
push
sub
xchg
xorb
or
mov
jp
push
mov
push
in
cmp
mov
mov
inc
xchg
cmc
addb
sbb
iret
add
xchg
and
aaa
push
push
xor
push
push
mov
pushf
dec
pop
cmp
subl
ret
pop
pop
and
rol
sub
lods
lods
and
lahf
jb
ret
inc
xorl
jno
xor
sbb
in
cmp
jns
xchg
scas
push
sbb
push
pusha
ret
mov
outsb
loope
lahf
mov
scas
pop
jg
pop
popa
dec
adc
insl
mov
adc
call
cmp
and
das
mov
fildll
pop
pop
mov
imul
mov
mov
cmp
out
cmp
fdivr
les
lret
jne
lods
test
lods
xchg
lock
or
mov
es
shr
data16
xchg
lods
lds
stc
or
cli
js
xlat
andb
adcb
mov
dec
inc
or
iret
in
pop
jmp
sarb
or
mov
mov
adc
imul
pusha
testb
pop
mov
xor
mov
mov
addl
mov
and
xchg
es
cmp
jmp
push
lds
loope
rclb
sub
sub
daa
lcall
cmp
aaa
js
cmp
mov
mov
aam
mov
add
pushf
inc
dec
fsubr
push
mov
mov
push
scas
lcall
jmp
or
adc
mov
test
pushf
jo
movsl
xor
xor
push
lahf
test
fdivrl
sbb
int3
pop
mov
imul
lahf
pop
imul
pop
sub
mov
cltd
jno
popa
shrb
xor
fcoms
rclb
sahf
in
repz
arpl
movsb
cmpsl
rclb
orb
or
mov
mov
nop
jp
dec
loopne
push
daa
cmp
push
incb
ret
xchg
or
add
loop
pop
clc
test
dec
rcr
pop
les
mov
jecxz
pushl
lret
movsl
cmp
inc
ret
mov
mov
mov
fildl
movsl
dec
and
jno
adc
mov
pop
pop
and
inc
test
lds
sbbb
and
dec
icebp
fsubrp
shrl
sbb
divb
jns
and
add
int3
sub
movsl
cld
xlat
outsl
add
je
insl
xor
shlb
jns
inc
lods
cmp
aam
sbb
ja
loopne
rorb
adc
push
mov
vpshlq
mov
mov
negb
in
popa
mov
mov
pop
mov
rcll
clc
push
jmp
pop
popf
sbb
jbe
cli
stos
mov
mov
leave
je
jne
cmpl
sub
std
xchg
shrb
jl
mov
adc
inc
pop
stos
cld
jl
dec
test
add
in
outsb
add
cltd
cmpsl
mov
ds
lods
out
shrl
inc
xor
lcall
cmp
xchg
imul
repnz
inc
xchg
pop
nop
push
popf
lret
mov
mov
mov
stos
shlb
lahf
out
inc
fstps
adcl
cmpsb
cmp
stos
outsb
rcll
mov
sub
stos
fistpl
cmpsl
test
add
je
and
xchg
push
cwtl
sti
or
mov
fisttpll
or
pop
sub
dec
cmp
std
movsl
xchg
mov
or
xorb
push
cmp
insb
fs
ret
mov
add
mov
jnp
sbb
test
pop
mov
movsl
pop
loope
push
rcll
iret
mov
insb
js
pop
data16
push
divb
mov
daa
cmc
stos
xchg
dec
js
popf
mov
sbb
xor
lds
push
dec
and
sub
je
and
nop
cmc
sti
sbb
cmpsb
sbb
mov
jo
in
cmp
lock
add
adc
fxch
fldpi
mov
test
in
mov
jle
repnz
mov
sbb
dec
xchg
cmp
cmp
mov
cmpsb
jo
nop
lock
add
lea
into
adc
sbb
fstl
out
addr16
sub
add
inc
mov
shr
leave
push
cmpsl
adc
xor
mov
ljmp
mov
pop
ret
xor
lds
ret
sbb
cmp
jno
xchg
fbstp
xchg
xchg
add
mov
test
cmc
or
mov
lahf
mov
out
sbb
dec
mov
in
addb
cmpsl
imulb
shl
mov
cli
mov
pop
adc
lock
out
leave
sub
cmp
movsb
imul
sbb
in
leave
rcll
loop
test
jnp
xchg
sarb
and
ret
mov
mov
or
jmp
je
mov
clc
std
insb
add
aas
mov
das
in
xchg
aad
call
icebp
aaa
into
and
shlb
dec
fcmovnb
xchg
imul
and
pop
cwtl
push
test
fwait
xor
loopne
js
dec
jge
cmp
lcall
leave
pop
out
push
and
adc
js
call
push
push
push
fisubl
jmp
aad
cs
enter
pop
mov
dec
cmpb
ret
push
cmp
inc
or
sbb
xchg
movsb
inc
sub
call
jns
outsl
inc
pop
xchg
inc
fsub
sti
rolb
add
adc
shlb
cmc
ret
jbe
mov
push
les
xchg
insb
repnz
cmp
fimuls
rclb
xor
pop
jo
clc
sbb
mov
es
sbb
mul
shl
mov
aaa
int
lea
jo
push
xchg
je
mov
and
lcall
loopne
mov
test
nop
adc
icebp
mov
xor
jne
aaa
mov
sbb
cmp
cmpsb
insb
mov
and
mov
mov
mov
stos
nopl
jp
inc
dec
loop
fcoms
lahf
movsb
mov
loope
mov
fimull
cmp
out
cmp
xchg
vpunpcklwd
mov
jbe
jno
mov
popa
fmull
jl
push
xor
test
jmp
andl
pop
mov
xchg
mov
ljmp
adc
and
xor
inc
pop
outsb
gs
nop
jmp
aaa
lcall
pop
adc
cmpb
cmc
shll
movsl
dec
fdiv
das
mov
cli
ror
mov
sbb
xchg
push
in
lea
push
or
adc
ret
aad
jmp
rolb
mov
aaa
mov
push
mov
push
mov
cmp
mov
jo
movsb
and
and
pusha
movl
xchg
inc
into
rcrb
stc
dec
add
xor
pop
addb
sbbb
mov
scas
loopne
sbb
decb
inc
sbb
cmpsb
cmp
pop
stos
jmp
cmp
out
jbe
aad
movsl
jne
mov
push
mov
push
jae
test
ss
int
mov
inc
sub
cli
xchg
pop
xchg
push
cmp
mov
and
xchg
daa
cmp
les
test
lds
jle
adc
or
cwtl
xchg
add
je
and
or
shrl
mov
sub
xchg
out
lret
mov
mov
adc
enter
insb
cmpsb
test
pop
jns
divb
aam
jecxz
fisubs
int3
mov
add
arpl
popf
ds
arpl
addb
mov
mov
push
jbe
sti
or
ja
aam
out
cmc
xor
aas
xchg
btr
sbb
add
pop
adc
push
adc
push
jmp
xor
jo
nop
cmpl
inc
leave
divl
movsb
ljmp
aas
aaa
sahf
inc
sub
fisubl
mov
adc
inc
add
xchg
xor
and
xlat
sbb
movsl
mov
adc
mov
test
sti
ret
mov
mov
sub
ja
movsb
movsb
sahf
mov
add
push
sbb
stos
xchg
movsb
decb
mov
popf
stc
testl
js
imul
lea
xchg
pushf
daa
mov
fstpl
scas
ds
xchg
add
xor
fbstp
fs
mov
mov
fimull
nop
nop
out
push
ror
movsl
lods
sub
cmpsl
adc
outsb
inc
aam
pushf
mov
insb
enter
pop
fisttpll
inc
cmc
div
or
lods
push
sub
xchg
push
aas
inc
add
push
dec
rcl
ror
call
mov
out
loope
icebp
out
pop
getsec
xor
out
xchg
push
imul
inc
mov
ljmp
stos
cmp
subl
or
push
dec
pushl
add
sbb
lods
pop
imul
popa
pop
stos
push
mov
test
aaa
xchg
push
xchg
fwait
pusha
les
ss
mov
scas
lods
push
andb
movsl
stos
arpl
fdivl
or
push
pop
fwait
xchg
push
sbb
jns
dec
loopne
inc
rcrl
push
arpl
mov
add
icebp
mov
fwait
shrl
out
imul
mov
inc
in
mov
daa
mov
test
pop
inc
mov
push
add
leave
push
addr16
fsubrs
pop
sbb
rcrb
add
call
lods
pop
lods
jge
pusha
lret
pop
xor
cmp
mov
jbe
adcb
loope
jmp
mov
and
aas
ficoml
dec
in
jb
pop
in
lods
lds
xchg
push
popa
in
add
lcall
enter
fsubr
outsl
ret
fwait
cmp
popf
push
pop
data16
cmovnp
inc
and
dec
push
outsb
bound
mov
pop
stos
cmp
cwtl
cmp
hlt
xor
mov
adc
jl
push
insl
ret
cmpsb
xchg
mov
mov
cmpsl
insb
push
fcmovnb
sbb
push
mov
xchg
dec
imul
cmp
push
repz
call
push
not
aas
lods
jb
in
scas
rol
inc
adc
sarl
movsb
ss
orb
pop
mov
into
mov
lret
push
xchg
cmp
aad
in
rclb
pop
lahf
cmp
or
xor
mov
jge
rolb
xchg
ss
add
sub
in
xor
lea
pushf
ds
in
loope
sub
jne
add
loop,pt
fildl
sahf
lret
fsubl
xchg
push
add
std
pop
rclb
or
js
int
popa
lret
jle
xlat
jno
loopne
subb
sub
mov
dec
pop
lds
fistl
push
mov
loopne
inc
jmp
scas
push
mov
aad
cs
and
pcmpeqd
sbb
lcall
in
gs
arpl
lret
jo
out
in
scas
popf
add
hlt
pop
xchg
xor
scas
aas
movsb
xor
adc
mov
stos
jle
aaa
stc
or
je
mov
sbb
dec
imul
loope
mov
mov
push
cpuid
enter
movsl
jmp
shlb
dec
loope
inc
cwtl
repnz
and
cmp
mov
je
call
daa
cmp
cmpsl
inc
jp
call
inc
push
call
xlat
int
xor
jbe
pusha
repnz
in
je
mov
rcrl
jmp
in
xchg
push
cltd
mov
sub
cmp
outsb
inc
mov
sub
adc
mov
pop
mov
and
ds
mov
mov
les
test
mov
or
push
test
scas
test
sub
sub
out
jbe
test
ss
sbb
jg
jle
clc
rcr
xchg
dec
imul
jae
jnp
fistps
or
dec
int3
insl
push
xchg
outsb
jno
lret
mov
movsl
jecxz
inc
gs
mov
mov
cltd
aam
push
push
mov
out
or
rcll
jp
out
stc
fnsave
or
mov
das
shrl
clc
stos
adc
dec
inc
adc
push
iret
shrb
test
jmp
cmpsl
pop
cmc
out
cld
in
sub
xor
test
dec
jb
mov
or
pop
jl
push
push
loope
cld
jmp
lods
pop
pop
jmp
fsubl
pop
je
je
out
sti
test
xchg
jl
mov
add
rorb
ret
das
mov
lahf
mov
notl
xor
shr
data16
push
mov
inc
testb
shll
je
sbb
bound
sbb
enter
inc
push
add
fldcw
scas
sahf
repnz
and
push
leave
mov
ss
repz
faddl
jb
or
jnp
or
into
daa
dec
add
xchg
movsl
mov
mov
movsb
in
test
cli
add
push
mov
enter
inc
std
cmp
mov
sbb
pop
xlat
emms
jb
test
scas
adc
mov
or
fcmovnb
faddl
adc
in
xchg
xchg
mov
mov
pop
movsl
push
and
test
popa
push
inc
arpl
fsubl
xchg
or
mov
cmp
xor
int
jecxz
shr
int3
mov
aam
in
cmpl
aad
hlt
jl
sbb
jle
push
mov
jecxz
lods
jbe
fnstcw
mov
aad
cmp
mov
cvtps2pd
inc
mov
jle
sub
jp
int
and
jp
dec
push
adc
push
mov
xchg
pop
or
cmp
sub
test
mov
mov
rcrb
imul
jecxz
addr16
or
test
mov
pop
lahf
es
movsb
dec
push
push
out
pop
xor
insb
sub
jno
mov
jecxz
bound
in
ljmp
and
xlat
jne
xchg
mov
xchg
sbb
jns
sub
or
lret
in
or
outsl
mov
scas
les
mov
outsl
and
mov
cmp
and
dec
in
pop
aas
insl
cmpsl
sbb
repnz
int
vcvtdq2pd
and
pop
push
out
cld
mov
pop
das
scas
scas
rcrl
xchg
pop
mov
lds
xchg
loope
cmp
ds
dec
jp
lcall
xor
cmp
or
and
arpl
mov
xor
sub
jge
adc
cmp
gs
fcmovbe
rclb
and
jmp
out
xchg
addr16
and
loopne
jb
jnp
imul
jecxz
xchg
mov
mov
sub
xlat
movsb
lds
cld
dec
aam
mov
pusha
es
or
cmp
lods
fsubl
rclb
add
pusha
cmove
jle
lock
enter
sbb
lret
popf
pusha
int3
incl
popa
fdivrl
and
jl
pop
stos
test
add
inc
inc
adc
lock
leave
jmp
js
jo
fidivrl
les
call
sti
inc
test
cmp
bound
pop
lcall
call
jae
and
out
jmp
inc
imul
add
push
pop
push
mov
aaa
out
or
mov
repz
stos
add
popf
popa
mov
xchg
addr16
sub
fwait
arpl
sbbb
les
out
add
inc
nop
xor
inc
or
imul
xor
jmp
adc
inc
cltd
xchg
mov
ljmp
addr16
and
pop
fwait
inc
xchg
arpl
and
push
out
mov
outsl
xlat
call
sbb
cwtl
xor
mov
mov
inc
cmpsl
pusha
enter
pop
std
loope
mov
sbb
inc
aam
std
mov
ja
xchg
ss
xchg
loope
or
add
cmp
xchg
push
pop
ficoml
jno
cmc
and
dec
call
push
mov
inc
mov
pop
mov
push
inc
inc
scas
inc
and
jle
xor
sarl
mov
aad
xchg
pop
in
sub
or
insl
std
fidivs
dec
in
sbb
rcrl
jne
add
sbb
or
mov
inc
in
xchg
jle
std
sahf
push
outsl
or
cwtl
cmp
pop
mov
sub
mov
loope
std
pop
imul
leave
xchg
aad
cmpps
pop
jne
add
movsb
cmpsl
sub
test
jmp
stos
enter
loopne
clc
push
jb
clc
sarb
inc
sbb
pop
jmp
mov
test
fcompl
cmp
std
pop
jecxz
pop
les
jecxz
loope
lret
sub
bound
push
sahf
fists
add
add
mov
fnsave
fbstp
push
jnp
mov
jmp
xchg
ret
pop
xchg
cld
cmp
call
jmp
pop
xchg
push
xor
mov
xchg
cmc
ja
mov
addr16
int
add
loope
fistl
cmc
dec
in
xor
insb
add
jno
sub
and
push
cmp
es
insb
sub
xchg
mov
aas
aad
sub
fcmovnbe
lea
rcll
mov
int3
mov
loopne
mov
les
and
data16
xchg
call
pop
in
pushf
jno
push
push
sahf
mov
frstor
push
mov
lret
lret
imul
es
pop
outsb
cmp
inc
fiaddl
jbe
dec
loop
popa
sbbl
ret
insb
jg
mov
ja
stos
inc
cwtl
xchg
ss
jg
lahf
jge
adc
push
pushf
jl
fstl
push
adcl
setbe
or
jle
repnz
dec
inc
mov
loopne
call
test
pop
push
sahf
mov
fldenv
lret
pop
aas
dec
and
loopne
inc
aad
pop
sub
sub
int
dec
fs
mov
mov
inc
data16
cltd
mov
enter
verw
pop
and
lods
lret
adc
adc
push
push
stos
int3
pop
shrl
bswap
adc
sub
jbe
lods
mov
mov
add
and
sub
pop
xchg
push
jne
ja
mov
mov
ja
mov
xchg
add
aad
xchg
jb
cld
ds
mov
xchg
and
ja,pn
cmp
iret
test
mov
and
fisttps
mov
pop
out
loop
dec
out
xorl
pusha
stc
sti
lods
sbb
fbstp
outsb
jp
dec
mov
jl
and
int
push
push
mov
pop
jnp
push
idivb
shlb
pop
mov
jle
and
add
xor
test
mov
stos
push
cltd
inc
fcmove
es
imul
icebp
cld
or
pop
cmpsb
data16
dec
add
shll
jae
loopne
add
push
repnz
negl
shl
outsb
notl
mov
cmpsl
out
popf
lcall
int3
xlat
out
inc
cmc
lods
int3
arpl
ljmp
insb
inc
add
cs
or
lock
rorb
xor
mov
jne
test
and
jbe
je
insl
aam
mov
pop
fists
lret
jae
int3
das
test
lods
cmp
mov
fadds
xor
push
mov
add
and
push
lea
fldcw
js
xchg
fmul
jbe
in
mov
insl
in
xchg
xor
mov
mov
pop
lods
pop
add
daa
sti
int3
jg
lret
jl
std
lret
push
sbb
mov
xchg
mov
xchg
mov
adc
add
inc
ret
bound
std
xchg
insl
jae
push
pop
into
sub
popa
pop
mov
sub
roll
jecxz
or
xchg
mov
test
sub
sbb
ret
dec
mov
shrb
mov
jecxz
add
push
movsb
pop
or
cmp
mov
and
jb
mov
mov
fwait
xchg
call
xor
stos
cld
inc
push
mov
lahf
mov
cli
lods
loopne
mov
pop
xchg
fst
sbb
clc
pop
sbb
cmp
aas
push
pop
pushf
pop
dec
test
orb
pop
lahf
inc
jb
mov
pusha
pop
test
stos
or
push
dec
ja
dec
jl
jg
pop
xchg
jmp
and
sbb
movsb
xchg
insb
shl
stos
mov
popf
or
jge
inc
popf
xor
adc
lcall
lods
push
cld
mov
mov
dec
repz
xor
fucomip
cmpsl
mov
jb
adc
inc
xchg
push
mov
xor
inc
pop
std
lods
movntq
out
outsb
mov
push
cmpsl
inc
xlat
aam
cmp
orb
mov
inc
pop
gs
sub
jb
cs
xor
int
add
outsb
jbe
fldcw
sbb
stos
push
test
xor
popa
add
outsl
pushl
push
sbb
mov
push
mov
push
cmovae
int
mov
push
stos
fnstenv
sahf
cmp
sub
mov
cmp
lret
out
fs
or
mov
jmp
inc
lahf
aam
or
popf
ret
rcll
cwtl
in
stos
addr16
fdivrs
stos
mov
push
in
or
rolb
xor
inc
mov
stos
in
test
rolb
pop
mov
cmp
jp
stc
pop
push
or
ror
stos
mov
xchg
cmpsb
xchg
mov
xchg
xchg
fildl
xlat
js
movsl
insl
mov
data16
out
cli
push
aas
or
rcrl
fs
sbb
mov
inc
jns
push
mov
mov
call
mov
sub
addr16
and
je
adc
jmp
aam
cmp
test
loopne
push
lcall
mov
faddl
push
dec
ret
sbb
dec
push
roll
fnstcw
add
pop
repz
stos
lret
cld
int3
fbld
fisubl
or
dec
mov
mull
inc
jp
lods
cmp
fdiv
into
fbld
xchg
push
inc
fwait
sub
inc
jl
push
push
mov
xchg
repz
mov
scas
outsb
out
test
sub
adc
xchg
mov
out
mov
js
scas
add
js
jecxz
pop
lcall
pop
aas
sbb
imul
into
push
in
aad
in
and
inc
fstl
outsb
sbbl
mov
push
call
mov
or
inc
adc
push
pop
mov
lret
cwtl
jne
pop
and
mov
xchg
sbbl
aaa
call
enter
sub
sub
test
xchg
test
clc
bnd
sbb
jno
pop
lock
or
xchg
sub
popa
scas
out
xlat
and
xor
repz
mov
stc
pop
adc
xor
in
out
mov
loopne
jns
jb
loop
cli
repz
cmp
pushf
mov
out
ljmp
inc
inc
lret
mov
ds
add
insb
jmp
je
pop
or
xlat
scas
aas
push
loopne
lret
jne
or
insl
add
jmp
dec
flds
insb
mov
push
sub
pop
pop
xchg
cmpsb
jns
out
add
adc
push
inc
adc
and
scas
loop
and
jmp
aad
aad
jbe
lcall
pop
add
dec
pop
pop
jne
mov
ljmp
std
lods
inc
and
sub
inc
jecxz
pop
xchg
sbb
inc
out
or
cs
loop
pop
jg
add
leave
icebp
insb
xlat
in
and
mov
int
sarl
mov
adc
dec
loope
jnp
lcall
mov
adc
xor
loop
cwtl
stos
das
mov
sub
loopne
mov
sbb
lock
xchg
mov
push
insl
adc
pop
int
inc
shrb
popa
dec
movsl
sbb
sub
mov
pop
lret
mov
and
cmc
pushaw
pop
cmp
fucomip
add
out
add
mov
movsl
push
ja
in
aas
mov
mov
or
sbb
dec
fwait
repz
in
jle
push
cli
adc
push
xor
imul
pop
cmp
mov
xchg
mov
mov
adc
adc
pop
inc
add
jno
dec
lock
mov
sbb
mov
push
pop
in
addr16
push
sub
mov
dec
or
jnp
fisubrl
popf
stc
sbb
das
push
fcoms
in
jg
loope
or
xor
cmp
xor
xchg
loop
cmc
dec
xlat
mov
cltd
sbb
sbb
and
mov
orl
jecxz
jp
insl
std
or
sub
mov
xor
xor
inc
sbb
leave
fnsave
aas
xchg
mov
push
add
push
jecxz
mov
enter
lea
pop
push
xlat
mov
or
pop
out
fstpl
fcmovne
push
js
or
adc
or
cmp
loop
sbb
in
or
in
call
xchg
hlt
int3
data16
gs
pop
mov
add
cmp
xchg
inc
fcmovnb
jg
scas
sub
push
test
xor
xchg
insl
inc
pusha
inc
jg
gs
movsl
xlat
inc
xlat
insl
cwtl
push
ljmp
jno
inc
icebp
pop
repnz
outsl
insl
fcmovbe
pop
hlt
add
cmpsb
movsb
ds
enter
push
lods
pop
sahf
and
jmp
inc
stos
xor
dec
outsl
les
mov
push
jecxz
popa
add
cmp
fidivl
out
adc
imul
adc
fs
sbbb
xlat
int3
jne
divb
shl
dec
mov
sbb
jle
out
out
daa
ret
loop
cmc
imul
repnz
cmpsb
add
les
cmp
mov
sti
or
cmp
sahf
xor
sub
das
jp
imul
inc
xor
jnp
jmp
xchg
mov
sbb
sbbb
outsb
call
hlt
clc
rolb
mov
mov
ss
mov
pop
outsb
aad
not
or
xor
jl
inc
and
jp
out
cmp
ljmp
outsb
stos
out
xchg
imul
xor
je
loopne
xor
pop
mov
fsubr
jle
or
shld
push
lods
mov
mov
lcall
and
or
popf
mov
mov
loopne
gs
adc
negl
push
mov
cmc
gs
lahf
sahf
sarl
stc
aaa
roll
jbe
inc
lods
add
mov
pop
scas
sub
or
in
popa
cmp
or
xchg
mov
mov
std
pop
or
rcrl
xchg
jl
push
les
int
adc
and
in
push
or
jmp
loop
adc
jae,pt
and
or
jle
fistpl
or
mov
mov
sub
xor
cmc
pop
and
in
xchg
and
aad
fldcw
dec
inc
loope
sub
in
out
push
jae
jbe
hlt
mov
and
adc
clc
xchg
adc
xlat
insb
ljmp
pop
pop
notb
inc
jae
mov
imul
sbb
in
outsb
jecxz
pop
test
repz
icebp
loope
or
adc
test
inc
call
dec
cld
ljmp
jle
ja
sub
ds
str
xchg
dec
dec
xchg
out
addr16
jmp
cmp
pop
push
insl
fidivl
fcmove
xlat
mov
sbb
mov
jns
orl
cli
test
adc
clc
cwtl
xchg
cmc
les
push
xchg
sbb
inc
inc
stos
mov
jb
push
dec
es
arpl
cmp
test
adc
adc
ret
insb
jle
aam
icebp
cmp
sbbb
xor
clc
int
inc
ljmp
clc
adc
sti
cli
or
jae
rolb
dec
fistps
data16
cmc
data16
hlt
adc
scas
mov
mov
mov
pop
pop
jb
mov
cmp
lret
insb
loop
mov
dec
in
shrb
cmp
je
in
mov
xchg
inc
inc
jp
dec
xor
out
push
aad
orb
push
jno
xchg
mov
es
dec
fistpll
mov
mov
cmc
enter
repz
add
and
hlt
mov
adcl
mov
das
push
rclb
lret
out
dec
inc
pop
fdivrs
out
movsb
add
xchg
addr16
fsubr
jae
pop
or
sub
xchg
sub
push
lods
inc
sub
repnz
mov
sbb
insl
lret
lret
jnp
push
nop
adc
int
jae
leave
cs
mul
std
or
mov
addr16
mov
out
xchg
xchg
cmpsb
aad
sbb
insl
inc
mov
dec
loop
xchg
fucomip
cmc
or
int3
mov
cltd
pop
mov
pop
rolb
outsl
out
pop
mov
lahf
mov
mov
dec
popf
cltd
sbb
decb
pop
push
clc
or
xchg
int3
pop
stc
out
mov
push
pop
jg
bound
jge
sti
add
cld
xor
aad
call
cmp
fwait
dec
mov
stc
nop
jbe
pushf
sbb
data16
adc
outsl
shrl
ss
lock
push
loop
stos
adcb
xor
sbb
sahf
mov
loope
push
pop
dec
lret
bound
sti
push
jg
outsb
sbb
call
dec
out
test
mov
push
jnp
mov
add
jno
xchg
add
movsb
into
sub
dec
adc
ljmp
xor
sub
clc
push
shl
mov
sarb
push
fsubrp
outsb
lret
jge
roll
xchg
sub
in
adc
fs
xor
or
xchg
push
push
stc
mov
cmc
ss
sbb
dec
call
testb
cmp
add
lret
and
in
daa
pop
loopne
dec
xchg
sub
ja
cli
test
cli
dec
pop
push
movsl
push
clc
iret
bound
pop
fstps
jl
push
xlat
mov
add
and
clc
inc
out
cs
aam
ljmp
js
jo
andl
pop
imul
test
sub
adc
or
cmpsl
mov
xchg
shlb
cmp
xchg
std
dec
sarl
stos
aaa
inc
dec
and
mov
cmp
pop
rcrl
mov
mov
int3
inc
and
bound
or
lods
mov
leave
cmp
push
push
sbbb
xchg
xchg
push
in
sbb
daa
push
mov
adc
test
test
fistpll
pop
push
mov
mov
sub
mov
ja
dec
fcoms
lds
insl
jne
test
inc
sbb
xchg
mov
cli
fsubrl
xchg
out
test
xchg
xchg
dec
ss
lahf
lock
mov
fcoml
test
lahf
in
notb
mov
rorb
lods
ds
push
mov
mov
cmp
mov
xchg
jbe
imul
xor
mov
and
clc
adc
mov
dec
call
cmp
mov
mov
cmpsl
out
or
inc
jns
jae
pop
cs
lds
cmpsb
xchg
cld
push
aam
out
add
loop
cmp
jo
mov
aaa
rcr
lods
insb
jno
cli
loop
insb
mov
jl
fldenv
daa
gs
loope
sti
jo
mov
jns
add
into
leave
mov
test
or
inc
xlat
push
cmp
sbb
xor
push
or
push
test
inc
push
rorl
mov
mov
push
fnstsw
pop
daa
mov
adc
lahf
jg
inc
fidivrl
sub
inc
addr16
mov
or
fstps
add
jae
pushf
sti
jbe
mov
in
add
mov
adc
adc
inc
inc
and
push
xchg
lods
mov
pop
bound
and
and
insb
adcb
mov
push
mov
outsb
test
lahf
or
in
mov
jl
ret
push
jne
dec
add
jmp
cmp
sub
rorb
inc
mov
lret
sub
push
js
cmp
mov
cmpsb
sbb
pop
jmp
ds
pop
lret
push
pop
adc
arpl
out
add
jno
pop
adc
or
mov
mov
xchg
sbb
mov
add
push
cmpsb
add
outsl
and
int
and
hlt
pop
and
int3
or
mov
enter
ja
subb
addr16
jp
xchg
pop
add
sub
shrb
push
inc
cs
push
cmp
lcall
in
sbb
push
frstor
push
bound
fucomip
mov
rcrl
mov
int
cmp
imul
addr16
lock
insl
or
icebp
push
mov
pusha
fistpl
cmp
mov
scas
inc
sbb
lret
andl
jmp
dec
and
sub
add
xchg
ss
xchg
data16
xor
enter
out
xchg
in
adc
stc
je
sbb
lods
jecxz
stc
clc
insb
gs
sbb
lcall
movsl
dec
or
sbbl
scas
lret
les
inc
sbb
sub
sub
jnp
adc
arpl
js
cmp
jmp
inc
pop
cmpb
cmpsl
imul
adc
and
dec
mov
cs
es
pop
movsl
cmp
add
pushf
mov
pop
loop
xchg
pusha
fistpll
cmp
xor
sahf
and
cmp
jb
andl
or
cld
or
sbb
jp,pn
cmpsl
jmp
addr16
sub
add
xlat
pusha
loope
pop
dec
and
fmull
fiaddl
cltd
mov
in
notb
pop
pop
call
test
mov
jp
mov
mov
fsubs
xchg
inc
stc
and
in
inc
icebp
fs
addr16
mov
dec
xchg
xchg
cmpl
out
xor
jg
mov
cmc
das
jp
adc
push
les
and
jl
sbb
pop
and
or
leave
iret
pop
sti
imul
sbb
jle
xchg
cmpsb
push
xlat
aad
adc
inc
or
sti
icebp
and
cmp
jg
mov
ja
push
jle
xchg
jmp
inc
stos
jmp
dec
push
mov
xchg
adc
push
jle
xchg
inc
xor
adc
xor
or
cmp
push
pop
aas
cltd
test
ljmp
int
mov
dec
jecxz
test
mov
inc
jno
or
stc
ljmp
call
lea
scas
shll
sub
aas
dec
mov
cmpb
xchg
iret
es
mov
pop
ss
jb
cld
inc
cld
pusha
lods
pop
jbe
inc
enter
push
xchg
jae
xlat
call
sub
jge
fisubl
test
sub
mov
gs
xchg
into
pop
or
aaa
mov
data16
mov
jge
mov
sub
push
icebp
shlb
bound
enter
xor
dec
mov
jge
push
out
daa
jnp
shll
cs
repnz
adc
or
or
stos
xorb
outsl
xor
and
pop
push
push
iret
lods
fwait
subl
push
test
push
sbb
stc
adc
mov
ljmp
sbb
int3
jo
outsl
stc
pusha
jb
sub
xchg
xor
in
into
push
or
push
mov
cmp
dec
dec
pop
xchg
push
test
aam
ret
dec
fdivs
in
sub
xor
cwtl
xor
push
aas
sti
cmp
sbb
sbb
fadd
add
mov
adc
mov
xor
aaa
test
cmp
push
push
jmp
pop
jno
jg
mov
push
test
int3
data16
push
out
xor
out
add
push
fdivrl
adc
data16
sbbl
jmp
xchg
inc
pop
out
loope
xor
in
lcall
inc
loopne
fimuls
ljmp
adc
ja
xchg
push
rcrb
ficoml
cld
add
cmp
jecxz
nop
daa
shll
or
and
cmpsl
ds
xor
mov
jg
and
scas
int3
fsub
xchg
xor
dec
or
test
jnp
xor
pop
mov
fisttpll
jg
sbb
and
jle
std
mov
push
adcb
inc
mov
xor
dec
fucomip
outsl
or
xor
jmp
rcrl
in
iret
mov
icebp
out
insb
jne
int3
adc
std
xor
push
icebp
into
xor
mov
or
lcall
mov
das
cmp
dec
lea
mov
dec
push
imul
cltd
pop
das
add
inc
lahf
outsb
lahf
lods
jo
pop
push
shr
scas
fcomi
loopne
cltd
std
pop
mov
xchg
setp
push
leave
cmc
push
sub
je,pt
arpl
mov
dec
sub
jecxz
cmp
pop
xchg
aad
ret
cmc
inc
lcall
cwtl
xor
pop
mov
addr16
inc
xchg
aad
out
int3
lret
push
xchg
mov
aam
pop
fsubs
xor
jnp
stc
lods
sub
mov
shrb
pop
cmp
push
pop
loop
mov
add
pop
daa
testb
add
mov
ret
movsb
mov
cwtl
stos
inc
xor
and
push
cmp
test
aam
pop
sub
pusha
dec
mov
xchg
pop
ffree
sbb
notl
cmpb
pusha
adc
in
and
arpl
xor
mov
inc
pop
inc
stos
std
or
adc
or
lock
rclb
adc
push
sbb
mov
adc
jp
push
mov
fwait
sub
mov
push
les
fisubrl
popf
add
lret
int
pop
std
adc
mov
mov
frstor
lods
shrb
mov
and
push
imul
or
dec
fildll
mov
jns
bound
adc
mov
leave
jmp
test
and
dec
xor
arpl
imul
mov
jne
xor
sbb
jmp
rolb
fisubrs
sbb
popf
lds
mov
sbb
mov
enter
xor
call
into
cli
inc
rclb
cmp
gs
push
xchg
xchg
ja
dec
cltd
pop
mov
or
xchg
mov
addr16
test
movsb
cmp
gs
insl
ret
pop
sahf
mov
call
add
push
jp
imul
adc
sub
jmp
outsl
les
inc
push
xchg
jnp,pn
dec
faddl
mov
dec
loopne
sarb
push
cmp
adc
cltd
sbb
daa
xor
clc
loop
pop
cmc
jp
arpl
les
stos
mov
aaa
pop
arpl
push
pushf
pop
sahf
push
out
insl
push
and
and
pop
shl
js
incl
dec
xor
shlb
movsb
cmpsl
cld
aad
sti
scas
push
idivb
sub
fdivr
sahf
enter
bound
inc
inc
jbe
dec
ret
shl
and
xor
pusha
push
or
cmp
xchg
xchg
nop
imul
arpl
popa
mov
and
xchg
cwtl
adc
sbb
scas
test
sbb
dec
cmp
inc
fwait
rolb
xor
and
add
jno
ficompl
sahf
push
jae
punpckhdq
pushf
dec
cmp
fisubrs
xchg
jp
xchg
mov
stc
cmpsl
cmp
pushf
outsl
add
cmp
cld
call
and
adc
rol
and
add
inc
push
dec
test
sbb
jp
sub
rclb
aam
add
imul
les
jae
test
jae
mov
ret
mov
test
sub
dec
jns
mov
das
push
add
or
lea
aaa
adc
lcall
cwtl
popa
xor
das
cmp
add
mov
mov
pop
adc
mov
inc
cld
mov
test
or
cmp
cmp
mov
fistps
xchg
mov
iret
icebp
bound
fbstp
js
push
inc
mov
out
gs
nop
fbstp
dec
pop
pushf
jg
fnsave
loop
testb
in
sahf
jne
sbb
sub
nop
sbbl
mov
fisubs
and
inc
popl
adc
xchg
push
jnp
shlb
inc
icebp
or
loopne
fists
mov
mov
or
and
ret
subb
pop
lock
loopne
lcall
or
aaa
jb
and
loop
fsubr
pop
rolb
push
adc
jno
mov
mov
xchg
adc
mov
add
es
push
jl
mov
jbe
push
dec
sbb
inc
add
xchg
cltd
push
montmul
cmpsb
xchg
mov
and
popa
mov
or
adc
loopne
aad
inc
mov
mov
cltd
dec
cmp
jmp
mov
scas
xchg
mov
js
mov
outsb
jecxz
jge
leave
sub
push
shr
mov
jp
stos
xchg
add
or
dec
sub
sbb
inc
hlt
dec
or
popa
adcl
sbb
test
dec
in
jge
jge
scas
pop
mov
into
sbb
ror
mov
pop
jg
cmp
inc
loop
xchg
sub
add
push
sub
push
pusha
xorl
xor
mov
mov
jo
mov
lods
shlb
mov
adc
loopne
cmc
mov
add
sbb
sti
inc
fs
dec
je
addr16
jae
xor
pop
lods
adc
jns
add
sbb
add
adc
ja
xor
sub
bound
les
adc
sub
mov
test
leave
cmpsl
mov
ret
incb
push
inc
sbb
or
xchg
cld
in
mov
push
aas
pop
push
ss
sub
lcall
clc
sti
push
popf
in
mov
in
icebp
adc
push
adc
or
push
jo
mov
ret
pop
js
aam
adc
sbb
out
dec
loope
icebp
push
js
orl
add
sar
sub
sbbb
jnp
mov
dec
mov
jae
adcb
std
mov
das
push
arpl
out
cmp
push
mov
inc
cmp
outsl
mov
in
dec
mov
dec
inc
das
mov
fwait
mov
mov
dec
cli
iret
push
insb
out
ds
leave
lock
mov
iret
xor
leave
cmp
adc
mov
fcomip
mov
mov
cmp
das
test
insl
add
add
in
jno
inc
xchg
xor
nop
or
xor
and
sbb
sub
xchg
jae
mov
mov
cs
inc
push
mov
mov
mov
call
lahf
adcl
std
cmpsb
jle
dec
mov
dec
aam
in
mov
pop
pop
inc
sbb
daa
jge
mov
push
test
mov
arpl
sbb
inc
popf
pop
and
int3
lea
jge
jp
add
call
inc
data16
push
cmp
scas
mov
and
ret
xchg
pop
movsb
mov
adc
lods
cli
and
movsl
xorb
icebp
icebp
adc
stos
jge
push
jbe
in
fstpl
in
add
mov
mov
sbb
inc
sub
pop
iret
jnp
mov
ret
imul
fbld
sbb
xchg
hlt
loop
stos
cmp
mov
scas
leave
test
cli
gs
loopne
push
push
aas
hlt
sti
push
add
notl
jno
mov
scas
mov
cmpb
mov
jmp
add
sub
sub
push
adc
jns
shrl
fistpll
test
push
gs
jp
orb
shr
add
sub
lcall
mov
jno
test
mov
sbb
add
sahf
sti
test
xor
repnz
dec
jl
xchg
xchg
push
imull
in
cmp
sub
xchg
lahf
aad
call
aas
decb
lock
stc
jo
sub
jb
jo
filds
in
out
xchg
and
pop
dec
int
jnp
xchg
enter
sti
cs
mov
repnz
test
push
int
mov
adc
ret
sub
cmp
adc
xchg
outsb
sahf
jae
sti
push
or
jae
andl
fidivrl
xor
cmp
adc
jbe
jnp
push
or
pop
sbb
jmp
and
dec
out
mov
shrb
push
ljmp
leave
pop
mov
jbe
shrb
loope
add
inc
hlt
mov
fs
xchg
adc
push
xor
cs
rcr
lea
das
aaa
inc
inc
sub
data16
clc
pop
cmpsl
adc
std
xchg
mov
out
xchg
lret
pop
sbb
nop
mov
mov
mov
subb
aas
dec
mov
shlb
popf
aam
lahf
and
push
fistl
ss
test
mov
mov
xlat
xchg
sbb
jno
cltd
push
sbb
out
gs
lahf
mov
outsl
test
mov
mov
or
mov
mov
mov
adc
mov
inc
cmpb
lock
imull
adc
movsl
dec
cltd
pop
mov
inc
pusha
xchg
cmpsb
lock
mov
mov
add
iret
mov
push
pop
sahf
jecxz
xor
pop
dec
cmpsb
mov
mov
jg
stos
sub
mov
ret
push
flds
push
popa
push
shrb
enter
fsubr
and
sbb
addl
movsl
in
insl
iret
and
lods
sub
pop
pop
lods
pop
into
jp
and
out
sub
out
data16
or
lds
pop
mov
cmp
popf
je
sti
push
mov
xlat
add
test
out
sbb
cld
dec
push
stos
adc
scas
mov
mov
jecxz
push
lods
jnp
lock
pop
scas
push
rorb
fidivs
jecxz
aad
push
fwait
gs
inc
adc
adc
push
push
xchg
rcrb
clc
xchg
jo
pop
xchg
mov
test
in
or
popf
xor
cmp
push
inc
inc
faddl
das
arpl
ficoms
movb
cmp
pop
cmp
xor
pop
fwait
lahf
in
stc
scas
sub
imul
jb
pop
mov
int
add
loop
add
loop
mov
mov
shrb
and
stos
repnz
mov
ret
movsb
jge
arpl
fdivrl
dec
test
fcomps
xchg
andb
sub
mov
cmp
outsb
add
xchg
pop
rorb
pop
cmp
lods
push
rclb
std
jo
cmp
sub
xchg
insb
cld
xor
std
aad
test
mov
mov
lea
mov
mov
jne
pop
xchg
subb
jbe
cmp
lock
lods
sarb
inc
push
add
aaa
aaa
ja
sub
inc
cmp
js
mov
xor
incb
repz
stos
pop
pushf
repz
sub
repz
shrl
call
test
cmp
push
int
clc
popa
mov
push
and
mov
frstor
in
jmp
or
dec
xchg
mov
mov
or
and
push
mov
into
xor
push
lods
and
sbb
push
push
subb
xor
test
pop
scas
inc
sbb
aad
and
and
inc
lret
xlat
mov
sbb
jb
dec
movsl
hlt
pop
pop
adc
sub
hlt
jge
pusha
movsl
aam
hlt
mov
lds
bnd
mov
les
subb
push
add
xor
xchg
push
mov
jnp
in
and
mov
in
or
call
xlat
jns
xchg
xchg
push
daa
push
fwait
mov
setp
lds
out
jg
xchg
mov
or
jno
pop
dec
add
or
mov
push
mov
push
cld
in
fs
xchg
pop
out
sub
cmp
aad
out
test
imul
hlt
ja
cmpsb
imul
daa
add
mov
dec
add
shrl
mov
icebp
mov
or
sub
sbb
and
call
xchg
inc
sbbl
movb
ja
jge
jmp
lcall
test
inc
fcmovu
inc
mov
daa
jbe
das
cmp
push
push
xchg
lock
add
inc
movsb
add
or
cs
add
dec
scas
mov
leave
nop
movsl
mov
addr16
xchg
in
test
sahf
icebp
orb
cmp
jecxz
xor
or
mov
in
pop
loop
cwtl
push
mov
cmp
aad
pushf
xor
outsb
jl
fidivs
pop
lea
mov
xorl
sbb
mov
fisubl
iret
ret
loop
insl
xchg
outsl
test
mov
hlt
mov
call
scas
mov
pop
cltd
cmpb
xrelease
das
aaa
pusha
stc
xor
sbb
sbb
pop
dec
aaa
arpl
mov
add
pushf
push
pop
inc
fcmovnbe
xchg
mov
adc
fistps
in
out
lcall
nop
dec
imul
fucomp
push
xor
fldcw
lea
mov
dec
fildll
push
out
int3
loope
sbb
aas
les
mov
adc
or
mov
inc
es
xacquire
js
push
lds
cmpsb
les
std
std
xchg
loope
jbe
in
or
lods
mov
push
push
mov
orl
pushf
movsl
sbb
shr
les
sbb
sbb
icebp
add
scas
inc
or
xchg
gs
jb
jb
stos
inc
test
mov
shl
cmpsb
mov
pop
cmp
cmp
call
xor
pop
cltd
dec
adc
or
dec
push
xchg
sub
divl
inc
mov
dec
lds
pusha
les
pop
ficomps
std
mov
jmp
nop
fisttps
sub
rcrb
scas
inc
outsl
fisttpll
push
jmp
cwtd
or
insb
push
mov
sub
or
jl
jo
fstl
pop
addr16
mov
gs
push
clc
ret
jl
pop
inc
mov
test
call
cmp
test
mov
push
or
adc
or
and
pop
sbb
lock
ret
fadd
cmp
repnz
repz
adc
mov
insl
out
mov
and
xor
nop
repnz
shll
into
dec
loopne
aas
inc
repnz
std
pusha
pop
dec
lret
xor
cmp
dec
inc
inc
arpl
repz
inc
loopne
pushf
into
scas
xchg
push
adc
jo
stos
ja
enter
leave
subps
mov
dec
mov
mov
test
mov
vmovd
loop
xchg
daa
pusha
das
jno
lods
subl
les
mov
and
and
mov
lret
cs
sbb
out
pop
stos
enter
push
jbe
xchg
mov
pop
push
imul
pushf
das
in
lods
fnstcw
or
mov
sub
jecxz
popa
pop
hlt
xchg
fcomp
jb
scas
mov
nop
ret
mov
jo
inc
push
mov
push
jnp
xor
dec
aam
sub
in
cli
sar
sbb
mov
sub
or
icebp
cmp
dec
movsl
mov
mov
insl
shlb
imul
or
mov
bound
jl
fbld
jo,pn
pusha
sbb
cli
pop
add
popf
pushf
imul
mov
sbb
dec
pop
test
data16
mov
mov
js
aas
dec
lcall
mov
test
mov
fwait
inc
std
or
test
mov
insb
in
fisubrs
xchg
fwait
sti
shll
pop
test
sbb
aad
in
push
pop
adc
xor
fs
pop
fs
rcrl
in
into
cmp
loop
sbb
lret
fnstsw
cmp
inc
leave
scas
call
xchg
sti
inc
pop
iret
fdivp
loopne
scas
jns
sbb
loop
loop
je
cli
sbb
push
cs
push
or
sub
lahf
insl
push
cmpsl
loope
fisttpl
add
cmp
stos
ret
xor
sbb
shrl
mov
push
js
jo
stos
sub
push
xor
and
popf
xor
ds
js
fcoms
test
push
in
ja
mov
std
inc
dec
cltd
lock
popa
test
cld
or
mov
fcomps
pop
jne
scas
out
inc
sar
sub
or
sbb
cwtl
sbb
dec
push
mov
xchg
inc
daa
xchg
push
sbb
mov
inc
mov
clc
push
or
pusha
cmc
mov
insb
mov
nop
movsb
shl
cmp
in
sbb
mov
fsubrs
add
mov
lds
clc
aam
aaa
mov
ret
cltd
mov
mov
or
out
cmp
aas
rcll
add
out
mov
repnz
pop
cmp
fidivs
add
cmpsl
inc
cmpsb
clc
push
inc
or
leave
lret
js
insb
dec
sbb
jg
cmp
push
or
and
aaa
imul
and
inc
mov
cmp
mov
mov
inc
in
pushf
sub
nop
aam
lods
sub
dec
cld
or
sub
mov
sbb
push
out
rorb
fdiv
sahf
ficomps
dec
mov
sbbb
and
xchg
pop
pop
pop
sub
and
shrl
pop
dec
test
pop
stos
jne
aam
int3
loop
orb
std
mov
sub
push
push
jne
pop
xchg
sti
cwtl
sahf
shl
decb
adc
push
lock
xlat
adc
pop
dec
jecxz
cli
jns
aas
xchg
mov
movsb
hlt
testb
xor
jecxz
enter
adc
sub
push
adc
dec
in
mov
push
das
int3
clc
pop
fbstp
std
xchg
mov
popa
leave
push
cmp
sub
and
test
inc
filds
scas
mov
fsubrp
aam
or
mov
or
mov
push
mov
mov
mov
clc
in
mov
aad
out
scas
pop
inc
pop
daa
call
rorl
pop
pop
jmp
and
jbe
xor
pop
call
test
outsl
mov
add
pop
cwtl
jecxz
into
mov
js
stos
mov
xor
rcl
or
mov
jecxz
inc
inc
mov
sahf
or
shr
jae
and
mov
in
push
pop
les
and
xor
push
fld
and
jne
js
dec
dec
sbb
aam
imul
inc
xorl
shrb
fmuls
jno
xorb
cltd
movsl
sbb
in
fwait
out
sbb
mov
pop
jmp
mov
ret
mov
xchg
jae
inc
insb
adc
jbe
nop
push
popl
out
fsubrs
push
push
cmp
lock
dec
out
aam
js
push
jb
xorb
and
jmp
jp
adc
sbb
add
cmp
push
shll
jl
push
add
xor
lock
in
cmpsl
push
shr
xchg
and
mov
push
hlt
fstpl
mov
cmp
mov
adcb
mov
pop
test
jns
push
adc
xchg
dec
sbb
and
lea
mov
adcl
rcrb
xor
ret
mov
jns
pop
add
dec
mov
mov
cmp
lcall
daa
inc
enter
dec
push
or
dec
push
adc
xchg
int3
outsb
or
lods
fwait
loop
popa
in
scas
add
pop
or
lods
adcb
mov
aaa
int3
push
mov
mov
and
mov
fsubrp
inc
mov
xchg
fldt
das
push
mov
adc
mov
mov
pop
movsb
les
add
subl
repnz
jle
pop
movsb
push
pop
test
mov
arpl
add
incb
sar
push
xor
movsl
mov
pop
mov
imul
sbb
andl
in
add
movsl
jp
jge
and
jp
div
mov
mov
xlat
pushf
cli
sahf
sti
lods
mov
lods
in
lahf
jae
sbb
shll
xlat
pop
jne
sbb
add
and
sbb
add
xchg
scas
call
mov
jge
mov
fiadds
push
popa
push
mov
int3
sti
test
adc
jbe
fidivrs
movsb
push
pop
push
dec
jp
mov
lcall
outsb
loope
and
mov
stos
push
mov
out
call
in
stos
xchg
adc
scas
out
mov
aas
mov
popf
mov
sbb
cmp
mov
js
dec
xchg
mov
sub
repz
adc
cmp
leave
push
filds
lods
inc
cld
push
je
add
jle
add
sub
sbb
imul
testl
jle
scas
push
pop
loope
por
sbb
scas
arpl
push
cmp
testb
jno
shll
jge
imul
shr
imul
stos
xor
add
pop
jae
loopne
adc
sub
insl
scas
out
scas
pop
outsb
dec
in
lahf
inc
pop
ljmp
fildll
xor
rcll
mov
call
pop
or
mov
clc
xor
mov
inc
ljmp
leave
pop
mov
andl
frstor
mov
dec
or
pop
inc
push
jb
mov
adc
or
and
dec
xchg
arpl
std
stos
inc
lods
sub
fs
mov
dec
lods
fnstsw
jecxz
out
mov
int3
in
push
dec
mov
lds
fildl
sub
out
out
in
push
test
add
cs
shll
inc
pop
fmuls
into
imulb
jge
jp
mov
xor
jp
and
clc
lcall
sahf
and
int3
repz
lret
cmc
pop
std
addr16
push
dec
mov
pusha
out
sahf
or
lods
ljmp
pushf
sub
sub
cmp
cltd
outsb
cmp
fwait
pop
and
pop
and
push
inc
add
xor
sbb
mov
pop
pop
pop
je
ds
aam
loop
daa
xchg
pop
xor
scas
jae
fdivrl
pop
arpl
loopne
sub
stc
out
popa
sti
dec
sbb
rorb
sbb
popa
jecxz
pusha
dec
pop
cmp
xchg
mov
sti
and
cltd
mov
into
bound
fbstp
popa
insl
add
pop
push
jmp
cmp
jno
orl
jmp
fnstsw
add
cmp
in
insl
clc
ror
push
push
mov
fstps
mov
mov
jmp
jnp
push
mov
jb
les
pop
cli
adc
xor
adcb
xor
cli
pushf
hlt
popa
dec
mov
sub
dec
pop
push
das
xorb
or
or
sub
mov
xor
jmp
push
sbb
clc
dec
shll
lods
sub
inc
push
stos
sbb
push
pop
mov
lret
icebp
movsl
adc
push
cwtl
fsts
jecxz
in
out
mov
push
sub
icebp
lds
jg
out
xchg
pop
add
mov
dec
loope
jmp
ret
shlb
sbb
mov
add
enter
jge
jbe
movsb
mov
movsl
push
fs
sarl
gs
lods
mov
add
mov
fsubrp
stc
mov
cmp
hlt
mov
pop
outsb
xchg
jecxz
and
cmpsl
mov
inc
sub
xchg
inc
gs
jno
popa
and
shrl
cld
mov
adc
pop
push
insl
stc
mov
ss
test
mov
loope
cmp
stos
outsl
ret
xchg
shrl
rcll
int3
lock
mov
lcall
aas
dec
jp
rcrb
out
pusha
mov
mov
xchg
dec
mov
ret
mov
pop
loopne
in
ret
jb
ret
les
xor
fs
cld
xchg
mov
dec
negb
sub
pop
mov
mov
xor
cli
cli
aam
and
data16
out
je
pop
subl
inc
push
mov
leave
add
rol
mov
cmp
rorl
mov
pop
sbb
xor
lds
stos
loop
xor
add
push
adc
test
data16
xchg
mov
in
int3
pop
dec
and
push
inc
fmuls
jae
xor
loop
lea
cltd
addr16
pop
mov
mov
leave
sti
or
cld
push
mov
jne
es
mov
fwait
popa
fs
ret
pop
jge
imul
dec
int
test
mov
sar
xchg
ret
cmpl
sbb
enter
mov
and
xchg
cmp
icebp
mov
push
and
pop
test
test
mov
stos
adc
xchg
inc
mov
and
aam
lods
dec
jno
sahf
xor
ds
outsb
dec
insb
and
xor
inc
inc
call
js
inc
call
fcmovb
sbbb
cld
loopne
mov
loopne
mov
push
shrl
push
cmp
test
mov
aaa
or
cs
push
xlat
mov
or
cld
inc
cltd
push
add
mov
xchg
cmp
adc
leave
xor
fsubrs
jbe
mov
fcomps
cmpsl
mov
pushf
pushf
dec
pop
call
in
outsl
shlb
mov
jno
push
mov
xchg
ljmp
adc
stos
fadds
loopne
lock
sub
lods
nop
vmwrite
xorb
cli
iret
xor
mov
mov
jl
addb
movsb
out
cld
aad
popf
stc
sub
ljmp
mov
hlt
pop
xor
mov
push
sub
pushf
mov
mov
insl
cltd
shll
mov
mov
jge
or
fldt
xchg
lock
test
in
xor
cmpsl
xchg
cwtl
inc
cli
or
xchg
add
mov
clc
adc
jb
inc
pop
xchg
daa
gs
rcrb
ds
ljmp
lods
or
movsb
jg
rcrl
dec
jp
cmp
mov
xchg
xlat
push
rol
clc
sbb
mov
pop
ds
loopne
xchg
and
mov
leave
push
sbb
jmp
or
xor
dec
icebp
or
andl
loope
leave
xchg
enter
into
lret
movsb
movlps
xchg
adc
jno
push
adc
inc
out
push
inc
push
jno
insl
mov
or
out
lret
lret
jmp
and
aaa
mov
cmpsl
movsl
sarl
clc
jnp
subb
add
xor
cmp
pop
or
add
repz
add
in
sub
rol
mov
inc
data16
xor
inc
sbb
sbbb
mov
cld
dec
les
and
fadd
or
imul
mov
sub
repnz
xchg
imul
es
pop
movsl
in
lret
mov
add
cs
cmpsb
in
test
push
imul
fs
xchg
mov
bound
out
or
out
rcll
pop
test
inc
cmpsl
push
sbb
aas
leave
fbstp
mov
sub
inc
rol
testb
das
imul
cld
dec
pusha
das
icebp
shr
mov
xor
adcb
sbbb
mov
or
mov
xor
cmp
mov
mov
incb
adc
add
mov
fwait
mov
push
mov
add
push
in
ret
mov
mov
test
ret
ret
jle
inc
mov
shll
or
add
test
inc
aas
dec
mov
mov
or
mov
inc
stos
iret
bound
mov
push
lea
fnstenv
sbb
pushw
shl
lahf
xchg
rcrb
jno
rorb
mov
fimuls
ret
jle
jbe
mov
cmp
jge
jns
cmpsl
lcall
bound
lock
mov
inc
shlb
inc
loope
mov
pop
imul
xor
mov
dec
and
adc
sub
andl
lahf
repnz
dec
pop
movb
popf
adc
cmp
push
push
aas
popf
lock
lea
fnsave
lods
sbbl
dec
test
std
fidivs
jge
les
cltd
incl
add
test
lea
std
fwait
scas
pop
outsb
sub
popf
or
inc
lgs
or
jl
lods
push
sbb
into
add
inc
test
imull
xor
repnz
jle
cld
sub
mov
jmp
cmp
jo
xchg
orb
aad
mov
sahf
cmc
ret
fsubl
xchg
inc
dec
shl
mov
lret
xchg
jmp
insb
adc
pop
mov
in
je
mov
mov
fcoms
mov
xor
inc
push
xor
jmp
dec
push
mov
divl
fcmovu
fistpll
das
nop
mov
repz
insl
ss
insl
pop
rcrl
aam
repz
sub
inc
out
dec
mov
jbe
sub
lods
push
inc
jl
loopne
popa
jl
inc
icebp
movsl
xor
inc
cmpsb
xchg
inc
pop
ret
jmp
or
shr
cld
inc
xchg
add
add
add
push
jo
call
cmp
sahf
ret
addr16
cmc
mov
in
mov
cli
sub
int3
push
cwtl
imul
pushf
pop
cmp
sub
call
ss
test
jnp
adc
sbb
pop
xlat
cld
aad
mov
pop
lock
cs
pusha
scas
bound
xchg
pop
and
cmpsb
divl
cmpsb
jae
inc
jns
mul
cli
inc
in
stos
push
pop
ss
test
and
lods
js
mov
or
sarb
xchg
add
call
xor
fwait
imul
or
aad
fsubrs
in
test
dec
hlt
inc
dec
pop
movsb
fucom
cmpsl
push
decb
stc
vpsubusw
sahf
mov
dec
lcall
adc
mull
iret
push
aas
dec
imul
pop
addr16
and
inc
mov
inc
adc
movsb
aaa
ss
adc
loop
std
ss
or
js
jae
cwtl
mov
pop
cmp
pop
push
or
int
mov
dec
inc
cmp
testl
sub
pop
in
out
xchg
jmp
rclb
movsb
out
movsb
jp
dec
test
not
xchg
pop
mov
out
fadds
nop
addr16
adc
out
dec
or
xor
icebp
cs
subl
ds
mov
add
sub
jbe
dec
lods
sarb
xchg
or
aad
ret
stc
adc
mov
adc
int
mov
xor
xor
and
push
insl
xchg
test
rcrb
mov
push
jecxz
sbb
imul
lcall
push
sbb
ds
outsl
in
rcl
mov
insl
xor
push
mov
popa
ret
daa
adc
jp
aas
fdivs
aaa
xor
nop
testl
adc
xor
roll
stc
insl
and
jns
jo
loopew
mov
mov
lods
rclb
mov
lahf
adc
ja
jle
cmc
xchg
mov
mov
sbb
mov
sub
cli
subb
test
pop
mov
in
sub
js
mov
lret
xchg
jnp
ret
sbb
xor
popf
adc
popa
cmp
xchg
and
cmp
stos
and
loop
push
xor
insb
cwtl
xlat
mov
enter
pop
pusha
xor
clc
jecxz
rclb
out
xchg
sbb
aas
std
pop
cmp
jl
mov
jne
jnp
sub
fcmovb
insl
shl
lcall
sahf
mov
add
das
xchg
xor
dec
push
mull
pop
mov
les
jp
xchg
in
test
dec
les
iret
loop
jp
jns
shrb
int3
lods
and
mov
imul
out
stos
xchg
mov
dec
iret
outsb
add
arpl
cmpb
subb
push
in
rol
pop
dec
mov
pop
pop
in
push
adc
jne
adc
popa
jecxz
in
lret
jmp
je
inc
sub
xor
idivl
mov
sbb
mov
js
add
xchg
adc
scas
inc
ret
push
jae
push
loope
scas
js
or
mov
sbb
push
mov
sbb
jo
aad
adc
mov
xchg
adc
inc
sbb
enter
iret
push
jbe
repnz
cmpsl
int
loope
popa
sub
sbb
fwait
lods
mov
and
or
jge
pop
xchg
add
ljmp
sub
cmp
mov
xor
clc
dec
out
xchg
gs
lds
pusha
lcall
mov
dec
test
movsb
pop
push
push
push
nop
daa
hlt
in
mov
mov
sbbl
add
lret
es
enter
cmpsl
add
xchg
in
hlt
adc
clc
je
jo
jbe
cli
xchg
or
xor
inc
add
jg
loopne
pop
mov
mov
in
aam
pop
mov
pop
bound
push
dec
mov
push
dec
in
cmpb
or
aad
or
out
xchg
pop
data16
mov
sbb
or
outsl
cmc
adc
xor
lcall
test
mov
push
test
and
lret
mov
loope
sti
and
lods
adc
fs
rcrb
retw
cltd
push
es
mov
fcomps
fstps
push
cmp
mov
jb
pop
mov
scas
pop
push
movsb
test
xlat
mov
or
mov
ds
movsb
ficoml
test
addr16
negb
push
into
lret
into
out
rcrl
mov
adc
lret
mov
int
test
mov
adc
rclb
push
push
sbb
or
imul
es
lea
mov
add
outsb
incb
sti
push
adc
pop
mov
jl
negb
or
cli
xchg
dec
mov
pop
fisttps
subl
outsb
mov
sub
adc
xor
and
repz
jge
outsl
xchg
add
test
orl
jb
or
mov
jge
addr16
lea
testl
inc
pop
pop
fildll
je
addr16
sbbl
loope
les
andl
add
out
rcrb
sub
mov
out
jnp
and
dec
cmpsl
jnp,pt
adc
test
in
das
and
arpl
fdivp
test
js
sub
jno
xchg
hlt
ja
stos
dec
scas
dec
pop
and
orb
inc
xor
xchg
and
dec
and
enter
gs
sarb
inc
push
pop
cltd
pushf
dec
in
mov
fxch
movsl
or
out
cmpsb
jl
ljmp
xchg
inc
shll
mov
mov
loope
test
inc
inc
pop
js
inc
stos
and
and
pop
add
fxch
ret
pop
jmp
dec
jecxz
cli
adc
push
mov
xchg
jmp
aaa
cmp
lret
lret
push
jae
mov
push
rclb
cmp
jnp
in
dec
mov
in
pop
repz
push
adc
push
mov
shl
adc
and
xorl
stc
or
sbb
mov
add
rorb
inc
gs
xchg
lret
fwait
nop
std
fld
es
xor
jo
dec
fcmovu
adc
rorl
sbb
mov
roll
sti
sbb
shrb
call
inc
pop
sbbl
add
scas
imul
scas
mov
fwait
inc
clc
sub
pop
jbe
ss
mov
mov
adc
sub
pop
ret
popf
inc
in
hlt
pop
cwtl
xor
out
in
test
sub
mov
mov
adc
xchg
cmp
outsb
cmp
inc
jno
mov
repz
pop
lahf
idivl
adc
fs
icebp
pop
popa
add
sbb
jbe
sbb
mov
mov
add
sub
movsl
mov
test
orl
dec
sbb
push
movsl
dec
sbb
rcrl
int3
inc
jp
or
fiaddl
out
push
sub
fmull
mov
fisubrs
fsub
mov
sub
dec
arpl
sbb
stos
out
fdivrl
orl
ss
cli
bound
cmp
mov
xlat
jb
filds
xchg
pop
xchg
cmp
mov
aad
push
mov
pmaddwd
int3
xchg
je
xchg
daa
ljmp
push
push
mov
into
andb
xchg
out
popa
inc
repz
cmp
push
ret
cmpsl
out
mov
int
pop
or
mov
rcrb
out
push
mov
mov
inc
dec
fadds
loopne
xor
xchg
jo
push
mov
jno
rcrb
lods
inc
jle
jg
into
sbb
jl
pop
loop
mov
gs
cltd
cmp
push
jge
ficomps
cmp
stos
enter
int3
add
mov
and
mov
stos
test
push
mov
std
fdivrl
pop
ret
mov
aas
mov
xchg
mov
dec
dec
lahf
jne
nop
ds
ss
jo
lret
push
pop
cmp
and
mov
mov
ss
and
out
movsl
nop
cltd
bound
mov
into
lahf
jbe
add
jg
and
loop
mov
pop
ret
iret
jecxz
cld
mov
fistl
outsb
xchg
push
push
mov
daa
cwtl
dec
fsubrl
add
jb
mov
adc
sbb
rorb
int3
lds
fadd
in
cmp
mov
aam
hlt
sub
cmp
mov
push
add
dec
push
mov
push
scas
mov
xorl
shrl
sub
adc
inc
sbb
add
fldt
mov
in
stos
adc
test
mov
push
int
les
adc
xor
jns
sub
push
mov
inc
inc
je
in
cmc
sbb
and
xor
fs
mov
mov
inc
push
inc
bound
js
jg
stos
mov
xor
and
pop
xor
mov
int
xor
bound
in
ja
lret
mov
mov
leave
sbb
gs
push
bound
xchg
adc
bound
mov
mov
push
aaa
mov
and
shll
jge
or
cmpb
lret
sbb
xor
das
sti
fs
int3
xor
mull
into
adc
xchg
in
fadds
sub
in
pop
jg
stos
cmp
les
dec
and
sub
pushf
mov
jno
test
xchg
scas
sbb
aad
int
lret
push
sbb
jo
fbstp
mov
mov
sbb
sahf
outsl
mov
test
icebp
and
push
popf
and
jnp
jne
push
sub
popf
nop
adc
leave
sti
loope
cmp
add
jg
insl
cld
cmc
mov
xchg
cwtl
movsl
loop
add
and
repnz
add
pop
mov
xchg
pusha
push
push
in
inc
xchg
jb
data16
fsubs
cmp
pop
test
xor
fiaddl
enter
mov
add
gs
lcall
imul
lea
push
outsb
sub
aam
add
sub
js
gs
lret
outsb
mov
cmp
sahf
sbb
or
clc
xchg
push
shll
inc
in
adc
sub
gs
dec
mov
mov
and
shll
sub
adc
inc
add
ror
add
data16
lds
cltd
cmp
les
pop
dec
and
insb
mov
xchg
daa
clc
cmp
add
jne
xor
pop
ljmp
clc
nop
sub
mov
and
ret
pop
aaa
in
inc
jge
pop
loope
mov
or
mov
xor
push
pop
lock
mov
xchg
sub
dec
scas
push
inc
cwtl
cmpsl
mov
pop
sub
pop
xor
int
mov
out
das
flds
mov
mov
add
bound
mov
iret
xor
cld
gs
xchg
pop
pop
cmc
rcrl
cmp
and
bound
push
stc
pop
lods
inc
xor
cli
mov
rolb
pop
jmp
jmp
aam
push
or
cmp
push
xchg
arpl
nop
subb
sub
push
insb
cli
movsl
faddp
pop
xorl
adc
gs
insb
in
aas
dec
cmp
sti
das
cmp
or
push
fldl
adc
xchg
push
test
int3
scas
or
aam
inc
insl
sahf
jne
or
xchg
pop
push
out
push
mov
dec
or
sahf
movsb
lahf
cmp
sbb
mov
cltd
lret
push
jb
mov
sub
xchg
cmp
lret
xor
pop
jp
fbld
pushf
cs
dec
arpl
daa
push
pop
not
ss
lods
ss
inc
fwait
scas
loop
jge
sti
pop
lret
jae
idivl
xchg
pop
sub
loopne
or
mov
test
sub
push
sbb
pusha
rorl
int3
arpl
lds
loopne
gs
ffree
scas
pop
test
mov
test
aad
fwait
outsl
add
mov
vphaddbw
mov
call
mov
ljmp
fdivrp
adc
mov
addr16
pushf
data16
mov
xchg
mov
mov
pop
imul
cmpb
popa
mov
xchg
sub
sbb
inc
mov
inc
testb
mov
and
pminsw
xchg
nop
or
inc
adc
jnp
add
sti
push
leave
shl
cmp
mov
js
or
ret
outsl
rcl
jo
rclb
rorb
or
xchg
push
movsl
mov
aas
stos
pusha
nop/reserved
lea
cmp
jl
aaa
push
inc
cltd
sahf
in
fidivrs
leave
ja
xor
inc
xorl
shr
cmp
adc
loop
dec
cmp
nop
adc
pop
and
and
dec
push
pop
shrl
jbe
loop
stos
movsl
ret
fsubl
dec
mov
mov
cmp
int3
or
xchg
mov
adc
aas
push
fbstp
jle
mov
negb
xor
inc
fdivs
mov
sti
push
fwait
call
push
sbb
push
ds
push
jl
sbb
lock
sahf
fisttps
loop
scas
ret
enter
jp
outsb
incb
inc
aas
loope
insl
push
fisttpl
adcb
pop
stos
jne
jg
insl
leave
cmpsb
add
mov
xor
lret
arpl
jno
nop
pop
andb
inc
push
mov
xchg
pop
add
jnp
lahf
loop
shll
jmp
push
xor
test
stos
add
cmpsb
int3
test
or
mov
jp
add
jge
int3
push
push
jo
call
xchg
mov
js
in
popa
adc
das
punpckldq
xor
jge
dec
push
cltd
cltd
cltd
jnp
out
cltd
sbb
fidivrs
cltd
sbb
loope
fsts
cwtl
xor
in
out
out
aam
sbb
sbb
fcoms
std
and
sahf
repnz
int3
and
int3
mov
imul
mov
adcb
les
pop
xchg
stc
mov
adc
or
xchg
xchg
mov
fnstcw
rolb
loope
das
push
xor
inc
jnp
scas
callw
adc
jle
test
fildl
jecxz
je
mov
pushf
or
push
ss
sahf
test
fdivr
push
fnstenv
fisubl
add
sahf
dec
push
add
lock
inc
inc
lcall
ljmp
ja
shl
je
pop
mov
mulb
rclb
push
data16
push
je
inc
cld
sub
pop
adc
add
in
and
mov
ret
xorl
insl
les
push
cmp
cmp
aas
add
pop
dec
std
test
sbb
inc
mov
popf
mov
jnp
es
adc
out
mov
subl
xor
or
xor
mov
stos
jp
sbb
subl
dec
fs
push
ficoml
lock
ds
inc
repz
aaa
pop
or
push
sub
mov
pop
xchg
dec
mov
not
xchg
mov
lahf
call
mov
xchg
leave
pop
outsl
daa
mov
xchg
cmp
repnz
lods
inc
out
xchg
sbb
adc
xchg
jecxz
cli
mov
xchg
inc
sub
xor
test
mov
xchg
jp
loope
jns
jge
std
adc
or
decb
mov
js
jno
mov
mov
adc
add
arpl
outsb
jmp
aaa
push
push
cli
sahf
and
sbb
jno
call
cmp
pop
test
xchg
clc
or
xlat
pop
cwtl
cld
inc
fbstp
push
frndint
adc
push
out
pop
outsl
jns
cmp
mov
andl
loope
incl
push
pop
stc
sub
fimull
fs
mov
pop
jp
loope
andb
jne
test
pop
mov
icebp
push
pop
sub
add
stos
cli
inc
loope
mov
push
or
xlat
in
orl
repz
jge
out
scas
dec
and
scas
inc
popa
cwtl
rorb
insl
xchg
xor
add
insb
out
outsl
xchg
setae
leave
cmp
xor
call
and
js
xchg
push
cwtl
test
jns
inc
test
mov
data16
mov
test
sbb
test
mov
fsubrp
les
mov
add
repz
add
xchg
add
ret
in
bound
and
mov
inc
lahf
stos
adc
push
cmp
or
in
daa
jae
arpl
jl
gs
xchg
lahf
scas
jmp
jmp
roll
cmc
pop
arpl
aaa
mov
pusha
stos
fldl
orb
popf
pop
arpl
cltd
or
jg
not
fisubrs
cmpsb
fisttpl
fldl
arpl
aaa
sub
adc
movsb
push
fwait
xor
das
mov
push
mov
xlat
push
jo
mov
pop
out
pop
mov
push
out
lock
dec
shlb
jge
jge
frstor
sub
dec
repnz
ret
jp
iret
dec
cmp
xor
lods
repnz
call
push
sahf
cmp
mov
mov
dec
inc
cld
ds
imul
imul
mov
dec
push
lahf
insl
shlb
push
mov
sbb
jecxz
mov
out
scas
push
aad
or
mov
pop
inc
mov
pusha
mov
out
inc
cmp
andb
into
dec
iret
adc
rorb
pop
lock
fsub
adc
ret
fisubrl
ret
loope
fiadds
ret
lods
dec
adc
insl
scas
jnp
jo
cmp
pushf
sbb
rol
push
cmc
inc
add
sub
sti
pop
pop
push
mov
int3
jns
je
push
add
jno
fwait
sub
inc
fs
add
cmpsl
mov
jmp
addl
push
out
mov
outsb
sub
mov
nop
cmp
and
add
scas
inc
subb
lds
int3
dec
rep
pop
cli
ret
in
repnz
and
out
or
cmp
addr16
sub
sbb
push
mov
aam
cmpsl
fucomp
ftst
fsubrs
cli
jge
jl
in
push
pop
sub
sti
cmp
cmp
aam
pop
cld
dec
sti
sub
sbb
xlat
outsl
pop
ds
aas
pop
push
xchg
jbe
into
sub
xchg
jge
dec
mov
and
imul
mov
push
jecxz
test
sub
imulb
arpl
ss
add
fneni(8087
out
test
inc
cmp
jmp
lret
dec
sbb
out
test
jp
imul
lea
lret
sbb
adcl
sbb
xor
cmp
cmp
fadds
xchg
repz
arpl
lret
jbe
pusha
jno
jbe
aam
cmc
sbb
outsb
cmp
mov
int
cmpsl
xchg
repz
loopne
repz
call
mov
fstpl
sbb
iret
stos
xor
test
in
pop
adc
mov
cmp
fidivs
in
pop
sbb
xchg
mov
mov
loop
pop
mov
mov
adc
add
imul
pushf
nop
mov
jge
nop
inc
adc
or
mov
jno
jo
push
cmp
pop
push
cmp
jecxz
cld
xchg
js
clc
jle
scas
stos
jecxz
pusha
test
pop
imul
mov
orb
jg
cli
and
out
mov
in
pop
jg
scas
mov
pop
xchg
add
push
add
push
cmpsb
negl
xchg
adc
xor
adc
push
pop
push
sbb
add
mov
jl
mov
aam
aam
inc
ret
xchg
lcall
insb
js
or
lea
mov
inc
jno
gs
push
cwtl
xor
popl
push
ljmp
imul
inc
xchg
sbb
test
arpl
xchg
test
mov
or
mov
out
popl
sub
xchg
mov
inc
scas
or
dec
sbb
hlt
sbb
push
imul
sbb
push
aam
fisttpl
leave
xchg
fsubl
jmp
addl
test
stos
mov
and
pop
sub
dec
push
test
lods
adc
pop
enter
and
jecxz
loop
mov
loopne
in
sti
scas
cmpsb
adc
mov
or
sbb
cmp
sahf
lods
mov
dec
dec
xchg
mov
filds
in
in
sub
push
leave
pop
cmp
inc
mov
int3
or
in
jge
or
stos
scas
aam
cmpsb
or
faddl
and
lret
incb
pop
aad
dec
push
xor
gs
inc
popf
sub
dec
divb
and
sbb
jl
mov
adc
lcall
in
xchg
and
pop
xor
fwait
fs
jbe
ficoml
mov
or
pop
lcall
in
push
add
int3
fs
inc
jmp
cmp
add
mov
push
push
movsl
xchg
in
pop
lret
xchg
and
cmp
jp
sub
jae
adc
mov
xor
shr
rcl
jno
int
pop
mov
or
cmp
repnz
or
lods
or
mov
mov
iret
jecxz
icebp
loopne
mov
lods
ss
mov
mov
sub
shll
int3
mov
into
mov
in
xor
es
pushw
repnz
push
mov
mov
xor
inc
stos
out
dec
mov
add
add
push
imul
enter
dec
loop
jae
mov
jb
mov
insl
sbb
cmpsb
or
jne
pop
enter
mov
mov
push
xor
lahf
fs
movsb
lds
sub
lret
enter
popf
jmp
cmpsb
xor
icebp
pop
das
or
cmp
cmp
adc
pop
or
cmp
dec
iret
pop
push
lods
push
push
ret
add
push
aas
jbe
mov
stc
adc
inc
cmp
dec
sbb
imul
xor
xchg
test
add
jl
pushf
das
test
mov
or
test
sbb
nop
pop
jns
sbb
std
cmp
xor
out
mov
xor
cmp
mov
out
dec
les
in
pop
push
mov
lahf
shll
push
sub
in
jmp
inc
in
loopne
imul
pop
and
loop
push
xor
and
lret
adc
sahf
jno
dec
in
decb
fsubl
popl
mov
fldt
outsb
mov
push
outsl
pop
and
mov
jb
push
mov
lds
add
dec
int3
mov
pushf
adc
xor
sbb
rcrl
lea
pop
not
or
mov
cmp
test
and
pop
cmp
xchg
sub
or
aam
push
adc
add
xor
sub
repz
adc
adc
jl
adc
cs
outsb
pusha
jnp
mov
not
inc
inc
int
lock
xchg
push
sub
pop
and
movsl
pusha
dec
popa
cld
cmp
es
bound
add
push
and
xchg
jns
push
adc
and
fiaddl
pop
pop
mov
ficomps
fldl2e
clc
or
sub
push
inc
push
push
aas
or
daa
fsubrp
jecxz
xlat
or
sub
xchg
sub
fildll
or
loopne
shl
push
jb
push
mov
test
shrl
xor
je
cmpsb
push
int3
xor
dec
leave
mov
int3
xor
mov
cmp
stos
xchg
outsl
jo
xchg
xchg
imul
imul
jnp
mov
jge
mov
sub
fisubs
jecxz
cld
adc
rcll
jno
cs
xchg
pop
out
push
sbb
sub
jge
mov
cltd
pop
fstl
and
xorl
sbb
mov
jle
jne
pop
pushf
cmp
aaa
movsl
mov
test
div
pop
scas
and
sub
xchg
xchg
stos
jno
xchg
inc
dec
loopne
mov
repnz
dec
inc
and
inc
and
repz
lock
aad
xlat
sbb
sub
push
sub
dec
into
fmull
fidivl
pop
sbb
xchg
leave
lahf
pop
inc
and
cmpl
mov
mov
aaa
pushf
mov
jecxz
and
inc
cmp
xor
sti
and
adc
mov
ret
pop
fwait
sti
sbb
adc
pop
inc
xchg
add
and
lahf
enter
mov
or
lret
jb
sbb
push
cwtl
sbb
inc
in
cmp
insb
or
inc
push
movsb
xchg
lods
jmp
sbb
jb
pusha
and
or
mov
add
ss
add
popf
adc
pop
lock
push
push
sahf
aam
aad
xor
int3
out
out
les
pop
inc
dec
cmp
jnp
insb
outsb
sub
mov
pop
ret
dec
cmp
push
in
mov
xor
test
or
sti
inc
ficompl
adc
cmc
xchg
call
mov
jbe
sarb
lret
cli
or
bnd
pop
ss
sbb
les
rolb
cltd
push
or
dec
inc
clc
insl
add
pop
cmpsl
mov
scas
clc
jns
inc
aas
sub
push
xchg
out
mov
jnp
fadd
adc
inc
mov
icebp
cmpsb
ljmp
imul
pop
into
xchg
add
outsl
push
sbbl
test
push
jp
lds
stc
je
lds
loop
ret
jle
inc
push
call
sbb
sbb
ret
pop
sbb
pop
pop
cltd
push
dec
hlt
bound
inc
sti
jbe
xor
fistps
or
test
sub
mov
xlat
xchg
mov
nop
ss
ret
dec
add
mov
adc
sarl
cmp
into
fwait
jbe
addr16
jb
xchg
xor
jg
xor
adcb
dec
xor
mov
push
xor
adc
adc
sub
addr16
dec
push
je
js
aam
sub
dec
sbb
jg
mov
int3
dec
arpl
jb
pop
push
sbb
add
xchg
cltd
sub
outsb
dec
movsb
cmp
in
xor
and
ret
sbb
pusha
testb
orb
jecxz
fs
jo
push
and
inc
pusha
pop
hlt
sub
pusha
pop
adc
stos
into
movsb
mov
pop
jecxz
xchg
mov
call
enter
mov
in
loop
mov
cmp
pop
ja
lea
xor
mov
lahf
push
adcl
cltd
imul
imulb
in
loope
and
adcb
mov
mov
ljmp
nop
jle
in
lods
inc
xchg
inc
rcl
hlt
ret
push
mov
and
add
sub
cmpsl
push
js
in
aad
cmp
aam
sub
pop
sti
je
pop
push
add
sbbl
and
jo
push
test
sbb
out
dec
mov
movsb
test
push
test
popf
push
mov
xchg
and
iret
add
pushf
or
call
mov
imul
lret
jbe
push
cmp
leave
and
adc
jle
mov
mov
jge
fwait
cmp
rcrb
adc
imul
dec
das
mov
cmp
mov
mov
call
dec
dec
jg
mov
imul
add
dec
aad
cli
mov
cs
dec
jecxz
pop
es
cmp
fwait
icebp
js
fwait
aad
inc
aas
or
and
jns
sbb
outsl
dec
cli
sub
push
call
ficoms
test
lret
in
icebp
adc
jle
xchg
repz
js
setb
lods
js
cmpsb
mov
push
sbb
call
ret
shll
pop
jg
xchg
dec
rolb
js
and
sub
test
ja
add
repnz
aas
shrl
in
aam
and
ds
jo
out
sti
mov
hlt
movsb
aaa
and
jae
lahf
jb
clc
cli
test
jmp
or
outsl
lret
mov
inc
and
push
jp
ss
iret
jmp
jo
xchg
dec
mov
std
inc
cwtl
cmp
push
jg
xlat
xor
fsubl
call
mov
out
inc
mov
jae
ss
gs
push
insb
push
scas
mov
popf
or
xchg
adc
movsl
sub
cs
cmp
dec
or
notb
lods
orl
sbb
out
negl
popa
adc
pop
sub
push
sarl
or
jecxz
loope
inc
les
loopne
push
mov
adc
rcl
and
or
add
sub
sahf
add
or
sub
addr16
bound
push
dec
or
sub
scas
pop
cmp
in
adc
loop
push
adc
scas
nop
arpl
notb
int3
sahf
fwait
lods
adc
lcall
pop
adc
xor
and
adc
adc
add
pop
stos
lock
subb
in
or
imul
push
dec
dec
ret
sub
movsl
data16
adc
jle
xor
aam
jne
mov
sahf
xor
mov
sub
jp
movsl
ret
shll
add
pop
xlat
in
dec
cmpsb
into
push
scas
aaa
leave
insb
adcl
enter
iret
push
test
dec
mov
dec
and
nop
dec
mov
pop
nop
xchg
mov
dec
jg
arpl
adc
mov
es
popf
mov
dec
push
sti
rcl
lcall
add
loope
jb
pusha
scas
fsubr
stos
pop
jb
xor
dec
mov
adc
stos
scas
jne
dec
cs
fsubrl
int3
test
loopne
cltd
or
mov
jecxz
cmp
cmp
jns
and
mov
adc
test
and
cltd
stc
das
xchg
cmp
movsl
jp
sbb
repz
xor
ss
cld
dec
push
push
xorl
jnp
add
inc
stos
adc
pop
lahf
mov
cmpsl
call
lahf
mulb
sub
in
repz
sahf
repz
cli
pushf
inc
stos
std
lods
mov
ljmp
bound
xchg
push
mov
and
xchg
mov
jge
cmp
lret
sti
dec
ret
sub
sbb
fs
adc
jmp
mov
les
stos
inc
pop
dec
gs
jge
cmp
mov
sub
cmp
int3
xor
pop
xchg
mov
mov
add
popf
jb
push
jmp
xchg
test
ror
out
lret
cmpsl
or
xor
aaa
jl
push
movsl
sbb
popa
dec
jge
cld
imul
movups
insb
inc
mov
mov
jo
orl
push
push
pushf
jp
bound
mov
mov
pop
adc
sbb
push
popf
imul
outsl
int3
lahf
test
push
fisubrs
adc
mov
dec
adc
pop
outsb
cld
pop
push
mov
mov
pop
decl
adc
add
rorb
jg
enter
inc
add
popa
subl
xor
push
xchg
loope
mov
jo
push
cld
es
pop
pop
faddp
pop
adc
les
arpl
incb
jle
dec
dec
cmc
test
cmc
mov
sub
es
fmull
mov
unpcklps
sub
lret
je
add
popf
inc
clc
or
fistps
pop
imul
cs
hlt
lret
ss
not
xor
pushf
test
test
pop
xor
mov
shl
push
mov
push
jecxz
insl
jg
mov
mov
jo
pop
mov
iret
leave
addl
inc
adc
xor
jo
and
inc
hlt
testl
orb
mov
fsubrs
cltd
mov
cmp
push
mov
push
orb
mov
out
outsb
and
sub
mov
inc
pop
adc
xchg
adc
or
push
ds
out
dec
out
jb
aas
test
xchg
dec
pop
mov
mov
lea
sbb
cli
pop
outsl
jnp
fcomi
or
inc
push
jmp
inc
test
fwait
sbb
dec
scas
outsb
mov
fiadds
lea
rcr
mov
or
leave
push
push
cld
xchg
sub
xor
repnz
push
sub
mov
stc
aas
fistpll
inc
pop
lods
cmc
ss
mov
xor
jg
adc
xor
jo
push
cltd
and
dec
push
xchg
mov
pop
in
mov
add
sub
stos
push
ds
mov
jmp
mov
adc
fiadds
orb
arpl
hlt
adc
mov
pop
fdivs
and
rolb
adc
sbb
inc
les
jle
cld
pop
pusha
and
and
adc
and
jecxz
fldt
xor
lock
cli
xchg
or
adc
hlt
ljmp
in
test
push
adc
jge
mov
enter
aas
lods
aaa
fs
push
movb
gs
cli
pop
cmp
cmpsl
jp
jmp
daa
data16
cwtl
adc
push
or
sbb
pushf
sahf
jmp
push
in
mov
mov
xchg
xor
or
dec
cmp
loopne
fidivl
repnz
push
mov
mov
out
and
pop
hlt
cld
scas
insl
negb
in
pop
xor
mov
adc
outsl
push
int
jl
ss
jae
and
mov
push
jg
std
jg
push
inc
fadds
push
in
in
jnp
or
lea
loopw
test
loopne
in
jecxz
insl
cmp
mov
sub
mov
into
mov
int3
rorb
in
pop
in
rorb
mov
xor
fsubr
dec
lcall
mov
cwtl
jo
mov
sub
or
ljmp
hlt
pop
iret
sbb
out
jecxz
cmovno
pop
ss
xchg
push
jmp
xchg
pop
test
mov
movsb
mov
sub
pop
mov
and
pop
cmp
cltd
dec
inc
or
mov
rclb
adc
or
lcall
call
xchg
cmp
lds
aaa
mov
sub
cmp
repnz
xchg
xchg
notb
mov
scas
ret
sbb
push
jg
rclb
mov
sbb
scas
inc
sub
or
mov
add
pop
je
mov
sub
inc
inc
adc
enter
enter
movsl
sbb
sub
iret
jmp
dec
pusha
sub
or
cmpsl
lahf
sahf
or
xchg
jb
pop
sub
cmp
xor
push
sbb
cmpsl
lret
lods
dec
and
push
addr16
lea
cwtl
push
mov
adc
mov
scas
cmp
mov
push
or
mov
and
fdivrs
sbb
cs
jno
mov
sub
or
int3
dec
lcall
fdivrl
fnstcw
das
cmp
insb
dec
fisubrl
nop
rep
push
jge
ljmp
adc
jecxz
sahf
imul
movsb
dec
lea
xchg
mov
cmpsl
into
pop
or
cs
push
mov
push
pop
or
popf
icebp
movsl
cmp
sub
push
fdivl
jecxz
add
cmp
sti
xchg
pop
fdivr
ds
lods
movsb
mov
fimull
and
adc
int
mov
pusha
incl
insb
add
in
cwtl
imul
nop
push
push
repnz
jl
sbb
popa
sub
sub
fbstp
jge
test
and
in
cs
add
js
cmp
xor
rorl
pop
add
add
sbb
fbld
fdivp
data16
insl
add
fs
scas
fsubrs
push
cmp
jp
call
inc
cld
sbbl
dec
pop
leave
shrb
lcall
outsb
shl
cli
js
jl
xchg
sub
dec
pop
das
inc
sub
adc
mov
sahf
lods
inc
mov
push
lods
loop
xchg
in
adc
xchg
dec
inc
sub
dec
add
xchg
rcrb
and
pushf
jb
sbb
mov
lods
fisttpll
push
je
sbb
sbb
cmp
mov
xchg
jle
mov
or
jge
stos
push
fmull
test
dec
pop
bnd
pushf
testb
jns
push
stc
add
sub
xchg
mov
les
cmpsl
pop
sub
das
repnz
cs
pop
test
insl
mov
xchg
adcl
jb
mov
dec
sub
orl
loopne
push
xor
mov
add
inc
jno
xchg
dec
popa
scas
call
xchg
xlat
and
mov
inc
fdivrs
into
cmp
cli
rol
sub
sub
jb
add
ret
add
das
jg
or
pushf
loop
dec
sti
adc
mov
dec
jae
cmp
lcall
enter
cltd
jecxz
mov
jle
shlb
add
lahf
lcall
jg
or
and
fdivp
mov
lods
jo
and
stos
jns
sbb
mov
inc
test
dec
mov
push
stos
sbb
mov
mov
dec
push
sbb
in
andl
sbb
iret
inc
mov
xor
jnp
ss
ret
mov
call
fiadds
lret
fwait
xchg
push
daa
inc
nop
add
popf
sub
leave
mov
divb
cmp
cs
jno
iret
pop
icebp
mov
adc
adcl
jg
clc
es
lahf
push
or
cmpsb
pop
sub
fs
jp
daa
aam
aad
je
xchg
xor
sub
mov
xchg
jns
cwtl
lret
cmp
neg
jmp
lods
xchg
cld
es
test
fsubr
jo
sub
imul
jae
arpl
adc
je
mov
sti
xchg
in
rcr
jno
test
addr16
insl
jmp
push
inc
pop
xchg
das
adc
push
iret
cltd
mov
pop
cmp
dec
xchg
aam
jno
fucomi
cmp
xchg
cli
ret
ja
pop
xor
jmp
xchg
roll
bound
mov
fwait
sahf
sub
out
or
jmp
pop
rolb
mov
adc
bound
pop
int3
test
mov
jns
pop
cmp
mov
addb
sub
insl
cmpsb
xor
dec
jmp
mov
mov
or
addl
sub
mov
sub
shrb
adc
jecxz
jno
push
mov
xor
scas
sub
andb
pop
sub
and
shll
add
cmp
dec
and
out
or
mov
sbb
adc
hlt
inc
into
rolb
mov
xor
cmp
add
dec
pop
sub
cmp
repz
push
push
xor
xchg
shlb
mov
lds
test
mov
add
js
push
dec
rol
dec
push
xlat
in
mov
in
push
push
or
dec
mov
adc
cmp
test
fsubrs
movsl
movsl
sbb
jle
xchg
call
mov
js
aam
sbb
or
cmp
pop
sbb
mov
cmc
sub
lahf
mov
fs
mov
mov
jl
subb
pop
pop
enter
insb
push
sub
dec
push
mov
pop
scas
cmp
cwtl
insl
data16
jmp
or
mov
fwait
pushf
inc
push
arpl
sub
mov
pop
bound
sub
addl
pop
mov
data16
jmp
insl
jecxz
sarb
mov
in
test
pop
mov
cmpsl
push
jne
mov
mov
leave
fdivl
mov
ror
adc
sbb
mov
cmc
sbb
movsb
xchg
sub
add
decl
push
insb
and
push
out
adc
sub
pop
add
mov
das
out
jp
adc
mov
movsl
cs
mov
xchg
or
jo
fcompl
mov
cmc
pop
add
cmp
or
jmp
mov
and
daa
rcrb
push
test
sub
sub
push
out
push
fbstp
int3
cmp
int
mov
scas
dec
lods
mov
xor
outsb
outsl
in
jnp
push
mov
adc
dec
pop
pop
sub
cld
shlb
lahf
mov
ja
and
jle
xchg
pushw
xor
fistpll
pop
les
jae
clc
xchg
cmp
cmp
mov
push
mov
out
mov
add
mov
xor
sbb
push
and
rorl
jo
mov
push
push
mov
shll
shl
and
pop
push
xor
jne
test
outsb
push
mov
or
loope
xchg
mov
fists
mov
mov
or
cwtl
cmpsl
sahf
leave
mov
cmp
inc
pop
xchg
and
pop
sub
jo
mov
dec
dec
xchg
pusha
add
addr16
arpl
jg
outsb
insl
sub
mov
repz
dec
add
jg
add
aaa
clc
fcoml
fistpll
lods
inc
pop
inc
cmpsl
test
mov
xchg
and
adc
fs
enter
mov
or
jl
sbb
dec
repz
pop
adc
fcom
jne
sarb
int
pusha
sbb
xchg
cmp
aas
jmp
adc
adc
testl
cmp
out
ljmp
pop
lret
xor
add
or
jmp
cmp
aas
enter
pusha
jb
adc
ss
push
jo
and
push
adc
jge
xor
mov
dec
push
rclb
stc
int
rcrb
mov
call
xor
jae
insb
imulb
daa
outsb
or
hlt
inc
daa
jne
adc
inc
loop
in
call
fadd
outsl
inc
test
add
mov
cmc
or
ds
inc
out
enter
shrb
cwtl
mov
inc
scas
out
outsl
dec
push
push
aam
cli
repnz
fnsave
xchg
xor
js
mov
mov
out
loopne
out
sub
dec
mov
lcall
stos
lods
mov
lret
inc
fcmovnb
mov
dec
jecxz
ret
jo
push
lret
ja
sub
inc
shrl
xor
fnstenvs
sbb
adc
insl
mov
push
jbe
mov
adc
xor
jbe
test
cmp
or
jo
movsb
push
imul
push
mov
inc
mov
push
xchg
mov
pop
in
push
mov
mov
xor
or
stc
and
push
sbb
out
dec
sahf
push
cltd
add
je
xchg
jg
mov
dec
stos
stos
adc
fdivs
fdiv
outsl
add
xchg
jae
dec
test
jns
test
dec
shlb
popf
xchg
test
xchg
data16
push
icebp
mov
or
xor
nop
xor
xchg
ja
lret
test
push
femms
movsl
inc
lea
aad
mov
mov
fnstsw
push
xchg
fwait
adc
sub
movsb
cmp
cltd
sbb
je
out
movsl
test
repnz
lds
jno
pop
mov
mov
mov
dec
pop
pop
in
shr
pushf
or
mov
mov
fildl
sub
mov
lods
inc
in
add
adc
add
pop
leave
and
push
loop
xchg
cmp
pushf
pop
je
inc
test
andl
aaa
xchg
push
push
lcall
jb
sbb
leave
aaa
cvtps2pi
in
jmp
add
sub
lock
xchg
add
inc
ffreep
pop
or
mov
movsb
cmp
xor
ljmp
stc
movsb
sbb
into
sti
pop
iret
cmp
in
pop
sub
insl
scas
mov
mov
jmp
lea
imulb
std
pop
mov
outsl
orl
lods
gs
xor
iret
out
popa
or
jmp
xchg
jae
inc
fucomip
adc
rcrb
cmp
data16
dec
gs
insl
pop
int
xchg
sub
jae
inc
push
cmpsl
mov
xchg
fsubrs
mov
pop
fdivp
fiadds
aam
pop
and
jmp
xchg
pop
and
imul
in
mov
dec
xchg
subl
movsb
inc
push
jae
shl
test
or
popl
inc
cmp
pop
or
leave
cmp
pop
mov
fsubp
jns
mov
fidivrl
fwait
xchg
addl
jecxz
mov
cli
push
jmp
bound
shr
add
pop
push
pop
in
sbb
cmp
inc
inc
flds
inc
adc
mov
bound
inc
jb
add
cmp
fidivs
push
sbb
aaa
out
jns
fstpt
or
ds
mov
pop
xchg
mov
push
sub
cwtl
jo
dec
jae
push
jnp
fwait
nop
xchg
fs
lret
fsts
jae
lahf
mov
stc
call
or
dec
in
jmp
xor
pop
xchg
mov
aad
lods
popf
addb
sub
add
mov
sarl
gs
imul
insb
popf
sbb
fdivrs
pop
lret
cmp
and
test
sbb
loop
movsb
cmp
out
lret
mov
testl
rclb
mov
aad
adcl
pop
jo
test
sbb
stc
xchg
sub
call
or
incl
mov
push
jle
sti
stos
das
dec
xor
cmc
test
inc
push
mov
jge
fsubl
jle
xchg
cmp
inc
addr16
nop
daa
leave
pushf
push
mov
mov
ret
cld
ret
scas
leave
pop
or
mov
lcall
xchg
jge
in
push
repnz
sub
xchg
bound
sbb
shll
xor
inc
aas
outsb
add
xchg
pop
or
dec
jne
mov
into
xchg
into
arpl
push
and
or
enter
xchg
ret
add
out
popf
or
mov
push
and
mov
arpl
fmuls
hlt
shrl
push
sub
dec
inc
and
fnstsw
imul
jo
xchg
xchg
cmc
aaa
dec
hlt
jp
imul
inc
and
in
stos
inc
jnp
lcall
pop
ret
out
dec
sahf
lds
insl
iret
es
ds
test
ljmp
lock
xor
and
dec
and
fidivs
cltd
mov
jnp
stos
lods
push
ja
imul
sbb
pop
fbstp
dec
mov
ret
add
cmp
pushl
or
stos
sti
int3
push
adc
addr16
sub
inc
cmc
sti
xor
dec
fcmovu
into
gs
addr16
sbb
out
inc
inc
in
gs
jp
or
fdivrs
out
fld
into
imul
push
cmc
pop
xchg
xor
cmp
jnp
push
outsl
add
in
aas
sti
ret
insb
mov
mov
mov
push
js
and
cs
or
jae
decb
sub
xlat
mov
or
test
cltd
pop
loop
scas
push
loop
rcrl
dec
decl
xchg
push
jecxz
jmp
fisttpl
movsb
pop
enter
scas
add
push
xor
xchg
cli
cli
sbb
mov
dec
lods
add
and
js
into
popa
push
jo
sub
add
xchg
mov
push
lret
jle
jae
cmpsb
ja
popf
or
xchg
popa
mov
lds
sbb
or
fwait
outsb
jp
jnp
nop
mov
pushf
push
jno
adc
add
movsl
cmp
fsubs
ret
pop
add
cmp
mov
pusha
pop
int3
push
movsl
sbb
jb
xor
sub
xchg
dec
cmp
jmp
mov
or
ss
sub
loopne
adc
into
lcall
in
mov
test
jmp
repnz
and
stos
push
call
xor
sub
xlat
outsl
jmp
leave
push
xor
aas
testl
sti
cmc
cmpsb
test
push
out
clc
jmp
loopne
xchg
mov
sbb
gs
sbb
inc
in
incb
adc
mov
lahf
mov
imul
int3
cmp
pop
sub
int
mov
inc
loopne
aad
stos
add
jne
repnz
xor
lods
out
call
hlt
sbb
jnp
push
cmp
mov
dec
stos
leave
arpl
and
push
insl
mov
push
stos
dec
neg
xchg
lods
out
rclb
movsl
cmp
jne
repnz
inc
daa
mov
push
data16
das
add
popa
sub
xchg
fldenv
cmp
sti
push
mov
inc
sub
xchg
rol
repnz
xor
lods
dec
out
push
jecxz
dec
and
fistl
mov
dec
cld
out
test
xchg
iret
or
lcall
push
lret
fdivs
dec
and
dec
mov
jge
and
jbe
mov
xchg
mov
sbb
mov
xlat
rorb
sbb
out
cmpsb
fcomip
pop
adc
pop
inc
and
movsl
and
dec
cmpsb
push
dec
test
xor
dec
gs
sbb
add
jp
popf
es
pusha
fwait
leave
mov
mov
xor
dec
insl
out
sahf
jo
add
jae
push
stos
shll
lret
movsl
or
sahf
xor
pop
mov
pop
sub
adc
sbb
test
nop
mov
jmp
out
inc
pop
adc
dec
loopne
xor
imul
into
lock
jbe
mov
fisubrs
adc
out
inc
loop
sub
adc
xor
jae
pop
leave
xor
and
and
arpl
or
pop
cli
in
jmp
cmp
out
fs
test
scas
xchg
or
adcb
cmp
xor
mov
mov
push
ficomps
sub
imul
gs
mov
pusha
aaa
push
ljmp
push
iret
fnstcw
push
mov
repz
inc
inc
cmpsb
add
cli
pushf
mov
push
dec
insb
movsb
orb
sub
fsts
mov
xor
fwait
dec
mov
movb
cli
scas
jae
fsubs
sbb
shll
dec
xchg
push
jae
repz
and
hlt
pop
jns
lea
sahf
stos
and
adc
mov
stos
jg
fstpl
dec
ja
xorb
lods
adc
sub
lods
adc
pop
lret
les
popf
cmc
repnz
repz
arpl
ljmp
stos
sub
mov
xchg
loopne
pop
test
mov
push
xchg
mov
lea
push
fldenv
fwait
xor
stos
mov
inc
jecxz
push
jbe
ljmp
out
dec
in
sub
lock
push
sbb
testb
jno
jnp
cmp
pop
stos
adc
push
mov
dec
xchg
mov
xchg
cmpsl
bound
push
rol
xchg
int
push
sti
jnp
mov
lods
imul
repnz
arpl
fwait
aam
pop
sub
mov
inc
push
jae
or
push
test
dec
in
push
pop
pop
mov
movsl
inc
movsl
stos
jl
xor
ss
andb
or
inc
mov
or
jne
scas
push
xchg
mov
fs
pop
clc
scas
mov
xchg
repz
mov
fsubs
jge
enter
fneni(8087
inc
mov
lret
dec
ret
adc
sbb
jg
inc
icebp
mov
inc
adc
testl
imul
adc
cmp
cmp
imul
cmp
pop
push
scas
cmp
push
xchg
push
adc
xchg
mov
push
pop
xchg
xchg
sbb
iret
xorb
es
lahf
or
jns
lds
icebp
mov
out
and
ds
lds
aad
cmc
lret
rep
les
push
aam
jmp
fisubrs
adc
xlat
jno
pop
sub
subb
jbe
push
imul
imul
fldcw
mov
imul
shl
jb
lea
movsb
lods
scas
add
pop
rolb
movsb
adc
inc
fistpl
or
mov
inc
stos
sub
rcl
jle
gs
sub
xor
xchg
shr
dec
repnz
push
or
dec
sbb
mov
leave
pop
out
jp
adcl
or
push
push
fists
js
test
push
rorl
inc
test
mov
fsubrp
mov
ret
sarl
mov
gs
ja
pop
cs
cmp
jae
mov
leave
data16
adcl
push
mov
popa
push
mov
ret
stos
sub
sbb
icebp
mov
cmpsl
shl
out
mov
add
xchg
xor
jp
pop
push
pop
pop
inc
xchg
sub
insl
dec
movsl
inc
dec
mov
lahf
fadd
dec
jns
es
cmc
push
cmp
xchg
push
dec
nop
dec
mov
stos
mov
lret
sub
out
cmpsb
shlb
test
mov
sarb
xor
jnp
adc
or
scas
and
icebp
mov
jl
sub
xchg
mov
mov
ljmp
addr16
pop
jae
mov
test
int3
and
dec
mov
push
ljmp
pop
les
push
in
fs
int
mov
inc
xchg
imul
dec
sub
cmp
or
fisubrl
call
xchg
pop
popa
inc
cmpl
jg
pop
in
mov
jnp
psrld
shl
dec
sahf
sub
leave
and
inc
es
test
je
push
cwtl
outsl
sub
loop
movsl
jae
test
das
pop
cli
xchg
test
cmp
dec
rolb
into
jmp
clc
out
into
push
adc
pushf
jne
cmp
add
pushf
test
sub
sub
inc
ret
lcall
sbb
dec
stos
mov
popf
lahf
or
in
cmp
enter
jbe
dec
add
xlat
scas
inc
or
and
sbb
ds
push
dec
adc
mov
lock
dec
into
lods
mov
fdivp
add
dec
dec
cs
push
jo
leave
loop
icebp
xchg
jmp
dec
push
inc
iret
stos
inc
test
lret
cmp
lods
mov
inc
sahf
rolb
or
pop
xlat
or
jge
aad
test
sarb
add
jne
xchg
imul
out
std
adc
mov
jmp
or
mov
lock
or
push
inc
arpl
mov
xchg
jecxz
sub
insl
ds
aas
dec
or
cmp
push
mov
fistpl
in
adc
fwait
mov
add
push
pop
filds
push
cmpsl
out
xchg
cmc
mov
loop
cltd
adc
push
xor
iret
cli
and
pop
sahf
mov
ret
xor
cli
fnsave
scas
pop
sbb
sbb
fiadds
inc
lret
xchg
imul
popf
sbb
jns
mov
dec
cmp
jge
pushf
lahf
mov
inc
fchs
fisubrs
xor
outsb
gs
sbbb
hlt
call
shll
fdivrp
icebp
insl
mov
sbb
ret
loop
and
push
sub
inc
sbbb
aad
or
popf
jle
mov
mov
cmpsl
sub
pop
or
xorl
xchg
add
mov
sbb
data16
xor
lock
mov
sbb
leave
xchg
shl
mov
inc
cli
xchg
dec
inc
xchg
inc
jo
scas
pop
mov
test
push
xor
add
sbb
add
dec
mov
in
pop
aam
jmp
popf
icebp
xchg
mul
call
seta
insb
cli
mov
add
push
jae
cwtl
xor
inc
and
adc
xchg
jecxz
icebp
adc
imull
or
inc
ds
mov
xor
ret
repz
mov
sahf
mov
imul
cli
stc
lea
cmp
jno
ret
push
add
nop
fiaddl
push
mov
popf
stc
cmp
push
xor
testl
fimull
fmul
mov
pop
push
xor
stc
cli
aad
sub
iret
repz
sbb
ds
adc
test
mov
lea
cli
cmp
push
lock
roll
out
add
dec
bound
leave
push
jnp
push
out
cmpsb
lds
pop
add
cmpsb
cmp
jg
pop
ja
movsb
sub
sbb
add
testb
js
cmp
je
xchg
out
sti
call
in
decb
addr16
mov
negl
or
inc
fnstenv
cs
mov
sarl
add
cmpsb
xor
xchg
xchg
int
dec
mov
in
mov
and
mov
mov
inc
adc
in
push
xchg
cmp
mov
xchg
mov
add
popf
inc
out
sbb
cltd
inc
lods
inc
imulb
imul
pop
lret
jbe
adc
push
cmp
dec
xor
aaa
dec
mov
push
xchg
pop
push
pop
adc
jl
xchg
out
and
dec
add
jp
xchg
push
inc
xor
xor
and
movsl
xorb
sub
sub
jns
lahf
das
push
jg
push
es
ret
lods
lds
mov
xor
add
add
lods
dec
sub
rorb
es
push
movsb
sbb
fldl
fs
ss
cld
sbb
dec
push
hlt
js
mov
out
push
and
push
xchg
data16
popl
dec
lret
or
and
jg
sbb
sbb
leave
pusha
jnp
aam
addr16
out
pop
push
pop
test
in
sub
sub
jle
mov
sub
dec
pop
push
adc
or
arpl
xchg
fs
add
cld
aaa
xor
lret
idivb
jecxz
jo
or
pop
add
outsl
pop
sub
fimull
sarb
inc
mov
je
stc
test
inc
pop
lcall
add
pop
xor
adc
sbb
iret
xchg
jb
mov
ljmp
sub
lods
sub
mov
clc
adc
dec
dec
mov
adc
xor
mov
subps
dec
enter
pop
test
lret
xchg
cmp
jmp
mov
fiadds
inc
mov
loopne
scas
sub
lcall
pop
sbb
pusha
mov
pushl
call
and
mov
add
pop
shl
cmc
lock
test
push
cmpsb
out
jp
mov
nop
inc
jp
popa
push
andl
pop
pop
push
sbb
out
xchg
add
mov
lcall
sub
pusha
inc
mov
pause
mov
ret
bound
test
add
or
push
add
sbb
push
xchg
jnp
shrl
stos
jmp
jne
push
push
sbb
sbb
xor
jl
mov
rorb
test
insb
xchg
and
lahf
mov
add
repz
ljmp
push
daa
loope
sbb
ds
fisubrl
mov
xchg
jp
add
mov
xchg
in
adc
out
sbb
sarb
jle
pushf
xlat
and
cmovnp
jg
jno
and
adc
lods
adcb
jne
pop
dec
jne
out
sbb
fisubrs
jge
mov
inc
mov
fldcw
and
pop
mov
popa
adc
mov
xchg
xor
sbb
xor
lods
and
mov
stos
mov
gs
sub
and
test
lcall
or
cmpsb
pop
and
sub
push
mov
jns
movsb
imul
and
repnz
pop
addr16
sbb
xor
cmp
dec
push
int3
aas
inc
pop
int3
dec
and
inc
out
stc
xchg
insl
shufps
xor
inc
test
adc
sahf
inc
mov
and
adc
cmp
bound
inc
gs
test
xor
jmp
dec
push
jns
aas
les
lods
push
jbe
loope
cmp
mov
inc
dec
dec
in
mov
dec
push
mov
icebp
fcomps
sahf
out
sbb
xchg
mov
and
cmpsl
push
dec
adc
mov
clc
sub
and
mov
mov
sahf
xor
into
mov
mov
xor
mov
mov
mov
mov
mov
adc
popa
mov
inc
nop
push
add
jp
stc
jo
and
add
sub
jno
pop
mov
cmp
xor
push
mov
inc
pop
push
pop
push
inc
fmuls
dec
mov
inc
lret
test
movsb
dec
sub
mov
lea
cmp
xchg
cmp
inc
popa
add
jge
sub
xchg
adc
stos
inc
add
leave
in
es
gs
nop
out
sahf
bound
push
outsl
idiv
loop
outsl
xlat
xchg
adcl
jecxz
push
aaa
pop
cmp
lret
xlat
mov
stc
fadds
ja
xlat
mov
xchg
lods
jne
pop
push
mov
inc
jge
mov
stos
in
imul
lcall
mov
repnz
popf
cmp
sbb
cmc
dec
ss
sub
ds
rcrb
push
inc
pop
test
sub
fcoms
dec
loop
push
dec
icebp
mov
movsl
push
adc
mov
xchg
sub
push
stos
jae
jmp
lcall
cmp
mov
dec
ds
jecxz
mov
imul
xor
xchg
lret
test
mov
mov
push
jmp
sti
call
push
pop
testb
test
cmpsb
popf
dec
outsb
and
mov
mov
adcb
push
jbe
adc
test
dec
data16
rol
jo
cmc
mov
rclb
lds
jno
mov
sti
inc
ds
stos
sbb
sbb
pop
testb
and
mov
add
mov
adc
in
lea
push
sub
out
add
adc
mov
or
xor
mov
hlt
sbb
cmpsl
repz
mov
jecxz
leave
xchg
xor
fldt
push
jo
mov
test
ja
inc
test
dec
aam
mov
ret
fdivrl
push
int3
fildll
jno
je
sbb
test
rolb
mov
pop
mov
shlb
aad
rcl
jne
data16
stos
imul
out
test
loope
xchg
xchg
xor
arpl
jbe
lea
bound
sub
mov
sbb
push
call
inc
loopne
test
testb
fsubrs
fildll
push
lahf
outsl
push
dec
mov
mov
lea
les
mov
cli
test
add
or
pop
xchg
push
bound
mov
clc
cs
pop
pop
scas
mov
mov
pop
lock
mov
cmc
sti
mov
mov
add
loope
xchg
stos
adc
and
sbb
add
xchg
pusha
decb
lods
cmp
or
loope
movsb
add
mov
lock
jle
dec
jle
int3
cmp
mov
pop
xchg
ja
jg
cmp
mov
xor
cwtl
outsb
mov
in
aas
les
mov
lock
dec
add
int
and
push
mov
jl
in
jno
test
sub
std
mov
mov
inc
scas
push
cwtl
adc
in
jns
sbb
sbb
fwait
shl
xor
in
sbb
and
dec
add
sahf
cmp
jge
mov
sub
push
xchg
dec
fs
idivl
sbb
shl
imul
inc
out
cli
add
pop
sbb
jge
aas
sub
scas
and
in
xlat
sbb
dec
mov
ljmp
loope
add
cmp
lods
adcb
dec
inc
std
adc
inc
and
push
adcw
cli
aas
testl
std
jge
add
mov
pop
cmc
mov
xor
ljmp
jne
or
cmpl
cmp
inc
push
pop
mov
mov
lock
insb
or
std
je
pop
pop
cmpsb
add
repnz
inc
mov
aam
add
lods
sub
pop
add
fwait
sub
icebp
movsb
adc
pop
inc
xor
outsl
push
push
pop
add
out
popf
insb
cs
mov
movsl
lea
fisttpl
fdivs
xchg
and
test
mov
movsl
shr
mov
in
mov
inc
fsubrp
pop
sub
jno
inc
inc
ds
in
decl
das
sahf
loopne
lock
aaa
inc
lods
aas
push
aam
out
xchg
lods
xor
pop
into
jl
sarb
gs
sub
sub
inc
cwtl
test
bndldx
mov
cmp
fs
mov
pushf
insl
pop
flds
cli
jmp
or
and
mov
sbb
cltd
pusha
mov
fsubl
lds
push
jnp
movsl
jg
mov
pop
dec
dec
or
call
mov
les
fsts
mov
enter
cltd
cld
dec
and
inc
dec
in
push
imul
hlt
sub
pusha
jno
mov
cli
pop
or
cltd
pop
mov
sbb
inc
aaa
outsb
fldl
inc
mov
xor
mov
ja
sub
jg
aaa
cmp
inc
orl
movsb
adc
xchg
and
aam
out
add
cmp
sahf
xchg
adc
push
test
xchg
sub
push
data16
mov
cld
and
pop
mov
pop
repnz
aas
mov
dec
shrl
outsb
add
jnp
std
jl
pop
test
testl
cs
add
popf
push
ret
sti
push
fistps
in
mov
add
rolb
mov
insb
jle
dec
cli
test
xchg
les
ret
mov
cmp
xor
cmp
iret
jns
bound
testl
mov
pop
jo
inc
push
xchg
sub
mov
inc
inc
xchg
jb,pn
pop
icebp
mov
add
and
outsl
in
inc
es
and
test
mov
jb
out
test
aas
or
out
and
enter
in
ds
jno
daa
lcall
sbb
push
dec
push
xor
out
cmp
mov
cwtl
mov
mov
dec
call
sti
repnz
xor
adc
sbb
pop
imul
sub
push
movsb
inc
add
or
push
and
push
cwtl
and
inc
mov
inc
mov
mov
and
mov
mov
push
dec
jg
test
dec
shlb
push
sahf
mov
insb
popa
pushf
xchg
mov
mov
sbb
daa
cmp
sbb
push
shrl
lcall
sbb
adc
sbbb
leave
jecxz
insb
add
cs
mov
push
jmp
dec
push
and
or
lcall
cmp
pop
dec
push
push
roll
stc
shll
dec
xchg
inc
popf
fisubrs
push
push
pop
inc
and
in
ljmp
fnstsw
pop
push
push
pop
xchg
pop
je
call
mov
add
jno
icebp
and
lret
enter
and
cs
aas
aad
sub
mov
aas
stos
sahf
roll
insb
mov
js
xor
cltd
mov
lret
ret
mov
dec
add
sarl
out
pop
test
mov
ljmp
das
and
xor
inc
cmp
adc
dec
jnp
ljmp
add
jb
shll
inc
mov
movsb
adc
adc
pop
icebp
out
jl
pop
sbb
add
pop
imul
mov
push
loop
sarl
aam
arpl
jmp
icebp
sbb
ds
xor
sbb
aad
mov
lock
lahf
icebp
xchg
inc
add
pop
cltd
out
mov
sub
test
jg
dec
mov
mov
sbb
sub
pop
cld
aad
xor
xchg
dec
adc
adc
mov
outsl
pop
xor
es
mov
dec
pop
push
jl
mov
xchg
andl
jbe
mov
add
test
mov
jno
repnz
fisubrs
and
mov
mov
mov
mov
pop
in
jmp
pop
cmp
lods
mov
loope
jle
add
inc
push
cmc
std
pop
repz
jp
adc
les
insb
shll
push
imul
aaa
push
inc
push
mov
xchg
test
jns
mov
lea
jae
xchg
pop
call
pop
pop
rep
dec
clc
out
inc
mov
mov
mov
dec
pop
cmp
or
pusha
push
push
push
jg
nop
fisttps
sbb
popf
cmp
aaa
jb
fsubl
lock
fnstcw
outsb
jl
cli
out
xchg
popf
inc
lcall
inc
and
fs
cmpsl
out
fsubrs
add
cmp
aam
add
aad
or
cmp
shrb
push
mov
shll
add
adc
iret
adc
loop
fldcw
cmp
xchg
insl
hlt
mov
sbb
popf
sarb
insb
shll
mov
pop
xchg
popf
movsb
cmp
mov
lret
inc
aaa
stos
dec
adc
leave
fstpl
fmuls
adc
cmpsb
imul
fstl
mov
mov
into
inc
push
inc
push
cmp
int
pop
jmp
sbbb
fs
inc
xchg
dec
outsb
mov
std
xchg
xchg
movsl
mov
inc
mov
ljmp
insl
stos
jae
fisttpl
push
jp
mov
xchg
cmpsb
xchg
outsb
loope
sti
pushf
sbb
or
cmp
lcall
sbb
lock
sub
or
addr16
push
adcb
mov
pop
int
mov
xchg
test
jbe
cld
sbb
fstpl
inc
loop
xor
jle
mov
mov
sbb
mov
repz
stc
inc
or
es
adcb
fwait
sub
xor
jnp
jmp
scas
mov
mov
rorl
pop
outsb
dec
pop
mov
movsl
lahf
es
jns
fildll
fdiv
pusha
add
or
cmp
or
inc
jmp
scas
mov
cmpsl
add
out
addr16
sti
fwait
iret
mov
add
fs
adc
dec
mov
adc
mov
xchg
sbb
xchg
cmpsb
les
and
sub
int3
dec
rorb
rclb
xor
or
fnstenv
mov
jp
xlat
and
mov
xlat
pop
mov
add
inc
mov
mov
inc
sti
call
xor
cmpsl
shrb
cltd
lahf
movsl
in
daa
arpl
mov
dec
test
outsl
mov
push
jbe
sbb
ret
inc
push
add
sti
ds
mov
mov
xor
add
test
xchg
dec
pusha
pop
das
mov
mov
daa
push
or
mov
push
int3
arpl
int
add
scas
and
shlb
pop
hlt
int
outsl
sub
outsl
jnp
xchg
loope
int
xchg
sub
jae
mov
not
data16
mov
jl
dec
stos
and
lock
in
nop
xor
insl
cmp
pop
cld
inc
js
cmp
push
fdivl
jne
mov
andb
mov
mov
cmp
sub
mov
clc
pop
stos
xchg
sbbb
add
imul
xchg
aas
leave
pusha
jno
mov
aad
pop
xchg
hlt
pop
cmp
adc
adc
lods
push
xor
push
pop
sarb
push
inc
popf
shrb
dec
cmc
inc
fstps
test
pusha
add
and
push
idivb
out
rorb
and
inc
add
mov
or
in
cmpsb
imul
cmp
pop
je
subb
popf
mov
popa
cli
push
or
fucomip
mov
lahf
popf
mov
jnp
lods
lods
jae
jle
cld
dec
adc
in
sub
xchg
jno
dec
cltd
push
inc
dec
gs
lret
aam
dec
leave
jmp
cmp
adc
call
jno
int3
sbbl
mov
lahf
ss
ret
pop
xlat
inc
test
and
inc
push
xchg
push
or
mov
mov
or
test
jmp
repz
xlat
mov
cmp
in
test
lret
mov
push
cltd
imul
add
nop
outsl
movb
icebp
sbb
pop
out
sub
cwtl
mov
xor
cmpsl
mov
fdivrs
adc
clc
mov
mov
dec
push
das
movb
push
stos
loopne
std
or
adc
xlat
aad
outsb
mov
mov
xorl
add
lods
fwait
scas
aam
loop
cwtl
inc
push
fdivl
inc
in
scas
out
lock
jns
xchg
add
sbb
aaa
and
movsb
mov
nop
outsb
add
cmp
mov
lds
jge
je
jl
jne
or
mov
mov
cmpsl
cli
xor
int
mov
aaa
jge
popf
outsb
push
pop
aaa
pop
mov
cmp
push
cmp
shlb
add
mov
xchg
bound
or
mov
je
sub
mov
pop
loop
test
or
loopne
xchg
push
mov
pushf
dec
aas
jno
xchg
mov
sub
xor
cli
gs
xor
popf
xor
inc
jle,pn
jo
outsb
popa
mov
jmp
and
xlat
test
divb
mov
or
adc
cmp
popa
push
in
addr16
mov
js
mov
addb
inc
xlat
daa
cmpsl
mulb
insb
xchg
ret
ret
sti
dec
std
cmc
lock
movsl
push
andl
imul
js
mov
pop
cmp
cmp
arpl
push
notl
xchg
add
push
jmp
shlb
inc
or
imul
mov
outsl
adc
sbb
add
rclb
jl
cs
adc
popf
call
fsubrs
sub
xchg
sub
js
cmp
lcall
stos
movsl
pop
push
or
push
repz
inc
adc
mov
adc
cs
or
mov
adc
fucomi
dec
pop
repz
in
mov
xchg
scas
notb
loop
pop
mov
fs
push
test
pop
into
xor
pop
xor
popa
cli
test
sub
mov
pop
lea
jo
add
mov
mov
xchg
das
ss
cmpsl
adc
rcll
clc
loop
mov
sbb
sbb
cwtl
sbb
in
dec
push
addr16
jp
pop
jns
fnstcw
lods
pushf
add
shll
rcr
ss
aad
repnz
inc
mov
lds
bound
scas
pop
cmp
push
jmp
jl
adc
add
lcall
xor
test
cmp
xor
in
mov
xchg
dec
add
push
inc
inc
push
scas
pushf
xor
xor
push
push
cs
pop
aaa
xchg
ja
xchg
xor
xor
fcomps
push
daa
outsl
sub
mov
jp
shlb
sub
push
and
mov
adcb
das
pop
mov
lret
xchg
dec
in
enter
daa
mov
inc
iret
nop
push
push
dec
fidivl
fdivrs
xchg
popa
enter
jnp
add
jg
pop
aas
push
ja
mull
jmp
xor
fidivrl
inc
outsl
std
notl
mov
sub
adc
in
xchg
mov
push
inc
add
pop
cmpsl
das
inc
in
andb
aad
pop
pop
push
push
aas
sar
psllq
fists
and
hlt
jns
add
mov
call
rcrl
mov
dec
sub
lock
popa
outsl
loop
inc
cltd
iret
stc
push
bound
lcall
pop
mov
fsubrl
arpl
pushf
into
pop
jno
jecxz
ljmp
mov
test
add
push
lock
adc
je
xor
mov
jle
inc
mov
adc
and
xor
std
pop
stos
cmpsl
and
mov
test
mov
lds
pop
insl
jae
push
testl
jne
or
and
cmp
jg
jecxz
movsb
lea
push
loopne
rclb
mov
mov
imul
push
sar
sti
sub
jns
dec
xchg
or
jbe
movsl
jecxz
sub
jo
ret
loopne
rol
mov
and
stos
fcmovnb
lret
and
shll
inc
push
inc
icebp
sbb
mov
inc
shll
push
andb
add
xor
xchg
xor
in
int
cwtl
and
mov
cmp
sti
mov
mov
jecxz
inc
inc
cmpsb
rorb
inc
dec
mov
ja
or
andl
lea
mov
add
push
data16
inc
cmp
fldt
mov
fisubrs
xchg
cmp
decb
lods
mov
clc
jae
pop
pop
xchg
cli
xchg
fidivrl
loop
pushf
test
sahf
sub
xor
lahf
cmpsl
xchg
roll
movsb
push
inc
shlb
ljmp
push
js
jle
lods
pop
aaa
test
inc
fstl
inc
pop
dec
ja
pop
stos
inc
cltd
enter
xor
rol
fcomi
sub
pop
scas
loop
pop
rolb
inc
mov
add
and
xor
push
jmp
mov
das
push
test
outsl
lret
jo
outsl
ficoml
mov
ret
test
cmpsl
outsl
lret
pop
std
dec
mov
inc
daa
stos
xchg
fwait
rcl
fmul
pop
dec
adc
adc
in
shl
jg
dec
push
loop
mov
test
leave
test
pushf
add
rcrl
ljmp
adc
mov
jmp
pop
sub
cmp
imul
push
jne
lret
sub
and
dec
mov
or
sub
incb
xor
outsl
cmp
adcb
push
in
rorl
imul
push
inc
mov
push
in
and
repz
out
cmp
add
mov
xchg
out
bound
fistps
sahf
jb
adc
mov
sub
shlb
push
test
ds
cmp
test
push
jecxz
cmp
daa
stos
gs
xchg
lock
sub
enter
add
xor
cmp
dec
mov
mov
add
sub
push
stos
fwait
dec
insb
sti
fidivrl
add
xor
loop
push
lods
mov
push
pop
fisubrl
mov
mov
dec
loopne
jl
dec
add
iret
mov
adc
dec
pop
xchg
jbe
in
gs
xchg
jns
inc
push
ja
ret
cs
outsb
cwtl
outsl
mov
mov
pop
xor
mov
mulb
mov
arpl
xor
mov
les
stos
dec
dec
xchg
sub
pushf
sti
into
pushf
scas
mov
cmpsl
in
and
aad
push
out
xchg
mov
mov
sbb
std
test
mov
push
mov
and
sub
int
mov
cmp
fs
rclb
sbb
stc
jl
sub
in
pop
lock
lret
fdivs
sub
dec
dec
dec
test
mov
mov
cmp
fimuls
lds
stos
or
adc
push
and
mov
jb
xchg
mov
pop
lret
xlat
sub
adc
adc
add
out
bound
ret
push
rclb
int3
fucomip
repz
arpl
lcall
sub
sub
pop
pop
jmp
leave
fisubl
add
xchg
mov
mov
movsl
daa
pop
ss
mov
roll
pop
push
dec
fs
int
js
loopne
imul
jecxz
cs
movsl
push
mov
adc
or
test
int
mov
iret
cmpb
and
pop
nop
mov
sbb
sub
jnp
int3
arpl
or
dec
aam
jp
cli
sub
mov
out
or
addr16
pushf
add
inc
jne
gs
repnz
imul
jg
mov
jnp
cmpsb
out
mov
std
add
out
sub
xchg
push
inc
jns
repz
jle
dec
daa
push
adc
movsb
cmp
cld
pop
loop
rorl
sub
test
xchg
inc
leave
mov
mov
xchg
mov
lods
mov
out
fwait
and
mov
outsl
lcall
xor
mov
xchg
sub
push
add
inc
mov
jg
insl
mov
jo
movb
jb
stos
and
or
insb
out
rcl
push
dec
rcr
cmp
jge
jmp
cmp
movsl
mov
cmp
daa
cwtl
daa
enter
insl
jmp
jb
dec
push
int
mov
test
pop
push
jbe
pusha
cmc
push
ret
sub
cmpsl
mov
fnstcw
out
test
dec
test
cs
push
push
repnz
mov
popa
loop
pop
in
xor
xchg
rcl
sub
pop
in
lock
xchg
sbb
movsb
fistl
es
inc
xlat
ljmp
jne
mov
push
stos
adc
inc
lcall
inc
roll
aaa
repnz
jne
test
mov
push
into
xor
jle
push
adc
or
mov
push
insl
into
imul
push
testl
pop
cmc
inc
scas
repnz
and
enter
outsb
add
and
push
scas
mov
or
scas
xor
je
inc
push
ljmp
mov
jmp
xchg
arpl
pop
shrl
or
sub
inc
mov
shll
mov
and
inc
fcompl
movsb
mov
and
sbb
inc
mov
dec
loope
bound
jle
movsl
lcall
test
outsb
shll
es
add
dec
pmulhuw
mov
dec
shl
into
mov
out
cmpsb
cmpsl
ret
xlat
sbb
es
fstl
jle
push
cmpsb
cmp
inc
inc
sbb
jmp
insl
shll
and
testb
mov
ret
and
dec
inc
adc
jecxz
clc
addl
sub
lock
repz
sbb
hlt
testb
ret
lea
mov
fcmovnu
jno
mov
mov
dec
stos
xchg
and
mov
adc
and
cwtl
inc
scas
mov
mov
out
or
fmuls
in
jns
xor
dec
xchg
sti
xlat
sbbl
pop
cmc
lea
jl
jns
inc
mov
cmpsl
outsb
cmc
adc
movsl
hlt
aas
cmp
ljmp
jae
adc
ds
call
in
mov
push
push
inc
ja
roll
pop
shl
jbe
pop
xlat
outsb
xchg
xchg
mov
loop
sbb
add
icebp
mov
inc
sbbb
call
push
mov
jmp
sub
adc
adc
icebp
and
pusha
or
cmp
pop
cmp
les
mov
lods
aas
out
fisubrs
push
jg
shl
mov
xor
not
in
addl
rcl
scas
or
dec
inc
sub
inc
jg
xchg
aam
sbb
mov
ss
aaa
popa
jnp
inc
jne
or
sbb
sub
repz
loopne
call
sbb
icebp
imul
fidivs
sbb
lds
cmp
xor
sarl
enter
xchg
insb
jae
and
ds
inc
inc
stos
mov
les
inc
out
lods
fcoml
add
sub
movsb
cmp
dec
push
lods
fwait
xchg
pandn
int
cmp
stc
js
xor
shr
insb
fistpl
scas
or
sub
mov
jmp
iret
adc
divb
outsb
adcb
insl
call
in
sbb
pop
pop
ss
out
movsb
mov
jecxz
jno
mov
test
inc
out
pop
les
sbb
das
cmpb
outsb
cmpsl
push
out
clc
cmp
insb
jo
icebp
mov
mov
sahf
fnsave
fldl
es
pop
and
lcall
and
loopne
adc
push
loop
lret
adc
mov
rolb
xlat
test
es
sbb
std
xchg
movsb
xchg
ss
sbb
gs
fwait
movsb
insb
add
shr
ja
or
in
cwtl
push
mov
outsb
test
js
mov
test
jno
popf
cmpsb
mov
and
sub
out
inc
push
jno
rolb
pushf
push
pop
mov
inc
mov
scas
mov
jbe
xor
push
inc
inc
je
loopne
mov
xchg
test
jmp
insb
mov
das
out
or
pop
xchg
rol
dec
pop
clc
icebp
sbb
cmpsb
pop
cwtl
adc
sbb
mov
insb
or
xchg
mov
mov
mov
sub
pop
out
lret
cmp
cmpsb
adcb
cmp
jne
cmp
dec
out
sbb
insl
out
divb
add
adc
or
and
rcrl
nop
ljmp
dec
pop
andnps
sub
movsb
pop
add
les
pop
test
and
pop
pop
sub
movsl
inc
cli
jne
jl
jge
inc
mov
xor
stc
cmp
test
fnstenv
dec
loop
clc
sahf
outsb
add
sti
cltd
mov
mov
dec
mov
mov
and
ss
lcall
jecxz
pop
insb
insb
call
jae
in
shrl
adc
addr16
std
push
mov
mov
xchg
gs
and
dec
call
jle
lock
data16
inc
je
push
sbb
sbb
xchg
add
and
and
out
pushf
cli
inc
lcall
popf
sub
xchg
add
cld
mov
icebp
insb
and
int
push
pop
call
cmp
sti
push
mov
pop
inc
push
js
sub
fildll
pushf
xchg
inc
xlat
ret
push
sbb
pop
icebp
xchg
pusha
insb
ds
add
xchg
popa
notb
ret
je
xchg
hlt
imul
popf
adc
push
fnstcw
push
push
xorb
jo
repz
mov
iret
push
mov
sub
adc
xlat
outsb
jno
jnp
fcomps
into
gs
mov
mov
mov
inc
pop
lock
enter
repnz
sub
sub
inc
jecxz
pop
mov
mov
jl
mov
out
out
mov
sbb
xchg
loop
inc
mov
jb
imul
sbbb
rcll
rcrl
add
dec
loop
iret
data16
add
xor
lock
dec
call
leave
push
fildll
sahf
xor
pop
push
mov
mov
std
xchg
movb
pop
stos
adc
push
or
pop
lea
adc
test
fstl
adc
cmp
adc
mov
mov
fistl
pop
xor
mov
jmp
ret
loope
sbb
sti
ja
fdivl
hlt
push
mov
popf
mov
pop
das
sbb
outsb
pop
in
adcl
pop
addr16
sbbl
call
xchg
sbb
imul
cs
sar
aaa
dec
fnsave
pusha
into
jp
sti
ds
mov
jns
decl
mov
scas
fdivrl
push
lahf
rcr
mov
mov
inc
xor
mov
out
and
sub
sbb
into
lahf
push
lods
lret
xchg
std
into
xchg
in
insb
cwtl
popf
lock
or
ds
push
push
jmp
sahf
je
jmp
pushf
fs
or
insb
push
scas
jbe
orb
jb
scas
shr
sbbb
adc
push
inc
ds
test
sbb
push
sahf
outsb
sbb
je
sub
stos
lahf
and
cmc
xor
jle
jnp
ret
pop
fs
imul
jo
xor
mov
push
call
add
scas
and
rcrl
mov
ljmp
and
pop
imul
outsl
mov
shll
mov
pop
inc
cwtl
mov
xor
test
dec
out
lret
rcll
stc
or
stc
js
stc
mov
add
cmp
xchg
mov
sbb
inc
hlt
push
inc
inc
mov
cmp
pop
out
mov
xor
dec
in
hlt
mov
xchg
iret
ret
movsb
push
jne
xor
cmp
cmp
or
cmp
dec
fcmovnb
add
mov
out
call
dec
out
bound
mov
or
dec
inc
xchg
sub
in
sarl
sub
push
jae
jns
jp
dec
lret
fidivl
loopne
xchg
push
sti
adc
repnz
lds
adc
add
pusha
inc
icebp
dec
and
rcrl
hlt
faddl
sti
mov
fistl
pop
mov
sbb
test
jno
sub
mov
push
out
popa
nopl
fwait
xor
mov
mov
mov
mov
pop
fbstp
push
lret
cmp
push
mov
pop
fisubrs
mov
cmc
in
mov
cmp
mov
pop
stos
je
push
add
dec
adc
add
sub
scas
addl
les
lods
ja
cmp
cs
jl
clc
or
sub
inc
xlat
fdivp
dec
add
mov
clc
jae
hlt
mov
xchg
or
or
pushf
push
pop
and
leave
sbb
cli
ficoms
cmp
jg
or
fwait
pop
sahf
lret
fldt
subl
dec
fnsave
cmp
mov
push
mov
into
shrl
gs
fiadds
jbe
dec
jge
jle
pop
data16
rcrl
mov
cmp
je
push
lcall
mov
adc
ss
push
fs
mov
jb
fwait
js,pn
fcomip
inc
push
sub
dec
xor
pop
idivb
cmc
mov
dec
inc
xlat
jle
jmp
test
jae
pop
cwtl
jbe
icebp
push
mov
sub
and
hlt
dec
pop
out
lea
adc
mov
data16
inc
repnz
in
aad
sarl
loopne
cs
cld
mov
jmp
sahf
sbb
cmpps
mov
push
dec
push
mov
and
aaa
dec
addr16
cwtl
pop
inc
push
xlat
xchg
das
mov
jg
sub
imul
push
and
fnsave
mov
sbb
pop
inc
aad
xchg
cmp
bts
aad
rolb
lcall
arpl
aas
jmp
data16
mov
pop
js
push
xor
cltd
cmpsb
int
sbb
pushl
adc
outsl
xchg
inc
bound
mov
aam
xchg
xchg
sbb
call
or
or
mov
pushf
bound
imul
xchg
lahf
inc
jns
iret
and
xchg
inc
inc
adc
pop
cmovb
or
aam
jecxz
dec
sbb
or
dec
xor
adc
push
xchg
mov
push
in
mov
es
fisttpll
xchg
mov
dec
movsb
lds
cmpsl
or
in
add
push
mov
es
in
inc
push
dec
jns
sub
rcrb
sti
in
jae
lret
test
mov
xchg
pop
testb
jnp
jg
pop
pop
andb
push
mov
pop
add
fldl2t
jp
bound
shrb
mov
sub
popaw
sti
adc
stc
mov
into
or
mov
sub
pop
jp
leave
xchg
sub
pop
fucom
fwait
dec
add
in
cmp
add
movsl
and
dec
xchg
push
xchg
push
lods
fpatan
jae
mov
shlb
jb
sahf
imul
fwait
jle
clc
pop
sub
movsl
mov
cmp
sbb
push
lea
sbb
test
cltd
push
jmp
or
icebp
repnz
gs
aam
cmp
xchg
cmc
mov
std
sub
pop
pop
stos
dec
inc
je
int3
mov
cmpsl
mov
imul
push
bound
mov
lods
mov
movsb
jo
arpl
test
movsb
ficoml
pusha
mov
insb
gs
test
stos
adc
movsl
repnz
bound
push
pop
inc
stos
lahf
call
or
cmpsl
sbb
enter
je
iret
xor
dec
adc
sahf
xor
popa
in
adc
pushf
lock
iret
cmp
gs
pop
pop
adc
fwait
loopne
cwtl
int3
flds
bound
cli
adc
loop
scas
lcall
stc
outsl
xlat
mov
and
inc
push
scas
cmp
push
icebp
pop
xor
in
push
adc
aaa
fwait
pop
dec
mov
push
inc
pop
or
add
les
nopl
ror
fadd
xchg
inc
lock
push
cmc
mov
mov
imull
mov
and
jecxz
xchg
jmp
aas
mov
inc
mov
repnz
scas
sub
xor
stc
push
fs
ljmp
lds
push
jbe
mov
pop
xchg
sub
pop
stos
mov
popf
jl
pop
scas
fidivrs
into
fildll
add
es
das
mov
fidivl
jbe
je
jbe
sbb
mov
pop
addr16
shrb
sbb
mov
or
pusha
jmp
and
lahf
stc
loopne
jg
fwait
or
adc
add
fninit
push
mov
cld
or
fwait
ljmp
jbe
xchg
mov
lods
mov
pop
out
insl
add
in
push
sbb
sub
loope
fadds
outsl
jne
sub
divb
inc
pop
push
xchg
jge
leave
sub
fsubs
xor
xor
gs
je
bound
xchg
mov
dec
pop
push
insl
jnp
jo
aaa
repnz
fistl
mov
fldcw
movsl
cmp
lret
repz
ds
scas
sbb
les
inc
gs
cmp
push
cmpsl
vpxor
and
lahf
mov
inc
rcl
repnz
jo
insb
lcall
fimull
shll
mov
popa
aad
pop
jne
jg
lea
hlt
pop
jae
int
mov
pop
pop
in
push
pusha
mul
rolb
rorb
pop
pop
mov
outsb
aam
ret
fwait
pop
mov
and
fadds
mov
xor
inc
mov
cmc
imul
xchg
fcomps
mov
insl
imul
repnz
push
repnz
icebp
xor
js
jp
js
data16
leave
add
mov
sbb
cmpsl
push
xor
jg
je
mov
lods
les
xchg
in
xchg
cmpb
add
fwait
adc
cltd
mov
loope
pop
pop
aas
rcrl
jmp
pop
outsl
pop
fwait
cmp
pop
je
pop
jnp
dec
aam
jl
jns
ja
divb
shlb
add
push
mov
lea
testl
shrl
outsb
cli
push
lret
add
loope
aaa
push
outsl
insl
test
orl
adc
sub
lahf
push
xor
xchg
js
and
test
or
testb
std
mov
push
add
ljmp
test
shll
dec
mov
shlb
popf
lock
test
xchg
pusha
mov
jg
cmp
std
jne
cs
pop
shlb
xchg
inc
test
arpl
in
insl
push
mov
pop
stc
fdivrl
mov
movsb
out
les
rolb
mov
push
push
popf
adc
mov
in
xchg
mov
sbb
add
push
popl
or
nop
inc
insb
clc
xorb
pop
push
movsl
es
pop
cs
sub
jns
ret
es
ret
mov
jo
pop
inc
pop
push
cmp
lret
enter
jmp
and
fwait
cs
push
xchg
stc
imul
sub
es
adc
and
lods
sbb
xchg
insb
pop
cltd
popf
push
sbb
or
clc
rcrb
fstps
aaa
jb
std
jo
sbb
xchg
mov
stos
es
ficompl
push
adc
leave
push
je
jne
dec
pop
or
xchg
jns
mov
cld
jg
cmp
jae
dec
notb
test
stos
stos
out
push
pop
andl
adc
aaa
mov
test
dec
adc
test
aam
dec
loop
sbb
push
xchg
dec
popa
movsb
cmp
mov
cmp
sub
push
roll
loop
in
adc
imul
lock
pop
sub
mov
push
xchg
xchg
push
lods
cmp
int3
add
iret
adc
aas
dec
sarl
mov
sbb
inc
test
xchg
xchg
cwtl
add
mov
cmp
pop
bound
aam
stc
insl
ljmp
and
xchg
fwait
jne
push
loopne
aas
cmp
xchg
cmp
in
xor
or
or
mov
push
scas
jb
ja
push
bound
out
imul
add
and
sub
aad
stos
insl
inc
cs
repnz
jnp
lea
jo
mov
dec
in
push
pop
ret
hlt
push
decb
lock
pop
ja
inc
add
mov
clc
xor
or
mov
repnz
outsl
push
xchg
mov
sti
js
adcb
cltd
out
dec
sbb
shll
pop
fucom
outsb
add
cmp
mov
push
insl
addb
xchg
nop
or
dec
jp
pushf
ret
or
sti
and
sub
nop
icebp
insb
in
ds
repnz
sub
movsl
test
int3
loope
test
mov
aas
adc
fsubr
push
xor
notb
cmp
in
das
aad
sub
mov
aad
scas
ret
fsubs
pop
xlat
mov
int
fs
push
call
cmp
mov
int
dec
cmp
add
push
or
leave
push
xchg
daa
popl
into
lods
inc
add
push
icebp
mov
push
pop
xor
je
movsl
outsl
push
xchg
add
lea
and
sti
xor
inc
fadds
mov
negl
popa
shll
jnp
and
test
movsl
std
sub
or
inc
fwait
aaa
sbb
mov
scas
andl
scas
ds
and
sbb
movsl
mov
std
int
sbb
les
dec
pushf
aad
dec
jbe
add
xor
fisubl
pop
and
pcmpgtb
xchg
xchg
adc
mov
xchg
jg
stos
repnz
dec
pop
jae
shrl
js
mov
sbb
sbb
mov
sbb
cwtl
jae
jge
bound
mov
hlt
mov
ja
popl
fwait
xchg
test
xor
fs
mov
cli
repnz
enter
sbb
fstps
movsb
nop
cli
jne
cmp
gs
adc
mov
aaa
xor
jns
paddsw
xor
dec
pop
xlat
xor
mov
adc
inc
pop
xlat
cmp
hlt
lahf
push
stc
mov
pop
cmp
mov
cmpsl
xor
jne
sbb
lds
inc
sbb
dec
mov
cmp
xor
or
pushl
aaa
enter
adc
icebp
jns
movsb
jmp
lret
popf
scas
std
rcll
push
jo
inc
jp
cmpsb
stos
fs
jg
enter
das
adc
xchg
sbb
js
inc
test
lret
addr16
inc
inc
xchg
jo
ds
mov
je
mov
or
inc
loop
scas
bound
rclb
and
je
xor
arpl
xlat
mov
or
mov
cmp
popa
icebp
lock
push
xor
js
push
sbb
mov
shll
push
dec
mov
jge
xlat
mov
sbb
adc
mov
add
mov
cmp
inc
pushf
out
jne
or
sbb
imul
cmp
pushf
dec
out
ret
jo
ret
push
and
adc
pushf
cmp
lahf
insb
stc
fidivl
imul
add
es
test
sbb
shrl
jbe
pusha
test
das
addr16
pop
loope
hlt
fwait
jns
pop
and
cmpsl
or
and
add
aad
push
in
bound
add
fcomps
pop
sub
cmpsb
js
fimuls
cmp
sub
lret
pusha
or
inc
sbb
sub
inc
mov
popf
xor
mov
test
inc
bound
insb
ja
lock
push
jle
out
push
sbb
push
pushf
sub
mov
xchg
push
call
inc
clc
outsl
decb
pusha
xor
pop
imulb
mov
jnp
push
shld
sbbl
lods
aad
xor
icebp
lea
cs
loopne
dec
rcrb
or
mov
xchg
jno
stos
push
xor
imull
mov
inc
mov
mov
ficoms
mov
mov
push
iret
mov
fcmove
or
loop
mov
sub
jo
mul
gs
outsl
push
mov
cld
decb
sub
cmpsl
fcomps
mov
xchg
das
clc
or
pop
or
push
add
popf
or
lods
loop
test
fbstp
addr16
bound
stos
sbb
je
mov
in
dec
pop
push
mov
movsl
icebp
ds
inc
arpl
adc
aas
lret
es
or
dec
add
pop
mov
pop
lahf
idivl
push
and
je
imul
dec
jno
push
and
pop
mov
outsl
adc
add
add
ret
mov
add
push
std
sbb
data16
inc
pop
and
mov
repnz
and
lahf
div
cld
fistpll
iret
lock
add
call
aam
push
outsl
les
add
mov
mov
xchg
push
pop
jno
movsl
ret
adc
inc
ret
movsb
ja
and
ficomps
and
push
js
mov
push
test
test
mov
jbe
pop
dec
mov
sbb
into
insl
loope
subb
mov
popa
adc
popa
xor
push
mov
outsl
divl
push
int
mov
pop
out
mov
push
test
fiadds
loopne
xor
pop
jle
mov
jae
test
in
mov
sbb
adc
jle
lret
cmp
push
je
push
sbbl
jecxz
xchg
mov
mov
jbe
xor
mov
push
jno
jo
fs
and
mov
int
int
mov
scas
push
shrl
xchg
loop
gs
jle
cmp
loope
or
push
imul
loope
adc
fisubrs
inc
push
jg
ljmp
jl
clc
and
and
test
pop
lods
mov
push
jge
cs
sbb
repnz
cmp
lods
fsub
mov
sbb
sti
adc
les
cmp
adc
dec
mov
outsb
dec
mov
pop
xlat
test
repnz
cwtl
jae
sub
inc
sbb
addr16
sub
nop
shrl
mov
in
push
cmc
dec
test
inc
es
add
and
mov
push
xchg
adcb
into
dec
adc
mov
cmpsb
pop
lahf
xor
or
mov
pop
fbstp
sbb
jno
aad
imul
ret
or
xor
aas
fsubr
lret
sti
or
cld
lahf
xchg
mov
mov
imul
insl
sbb
mov
std
inc
jecxz
insl
push
ret
stos
arpl
sbb
mov
sbb
xchg
xchg
arpl
push
inc
inc
ret
mov
fs
dec
push
inc
ja
inc
push
xchg
adc
fmull
fdivrl
iret
loopne
cmp
sbb
push
xchg
add
imul
pop
jae
hlt
cmp
popa
loop
xchg
fdiv
mov
mov
mov
pop
adc
dec
popf
add
dec
outsl
and
sarb
lods
and
adc
ds
mov
movsl
mov
cmpsb
push
add
dec
frstor
cmp
adc
sub
push
sbbl
and
xchg
loopne
add
nop
sbb
je
dec
sbb
rol
jle
add
shll
aad
jno
adc
mov
dec
leave
cs
pusha
jle
adc
dec
loope
movsb
and
das
mov
arpl
sub
js
dec
hlt
out
or
nop
xchg
lods
shl
jo
out
fpatan
and
clc
inc
or
xor
adc
cld
adc
mov
out
sub
or
cs
dec
loopne
jo
push
icebp
in
aaa
into
sbb
xor
mov
push
ret
pop
cmp
js
ret
xchg
fldt
or
xchg
jb
xchg
adc
sbb
iret
mov
bnd
dec
sbb
les
imul
dec
aam
inc
andb
cwtl
mov
rcll
stc
out
out
ja
mov
sbb
fwait
leave
fnstcw
iret
clc
ds
mov
cmp
fcmove
cwtl
xchg
lcall
cld
push
lock
and
jmp
push
enter
test
lcall
sub
jecxz
inc
nop
mov
push
dec
push
xor
nop
bnd
fstpt
pop
xor
inc
push
shrl
movsl
mov
stos
inc
jbe
jae
loope
pop
mov
mov
cs
pop
mov
fs
mov
mov
dec
cmp
xor
xchg
dec
and
adc
negb
sbb
sub
sahf
idivb
rorb
xlat
repnz
push
and
xchg
xor
xchg
jmp
xchg
inc
sbb
loopne
cmp
cmpsl
adc
addr16
ss
fsubrp
inc
xchg
sbb
inc
jmp
mov
dec
in
sbb
mov
insb
repnz
xchg
dec
adc
fsubl
clc
and
mov
mov
movsl
lahf
scas
shrb
stos
movsb
inc
mov
fwait
lea
xchg
cmp
lahf
inc
fbstp
add
popf
mov
dec
lods
mov
push
idivl
rcr
ret
inc
mov
push
lret
or
push
xor
inc
mov
jbe
lods
and
mov
and
aad
cmp
cwtl
imul
pop
xchg
int3
lea
sti
repz
dec
push
and
adc
sarb
push
push
pop
push
test
or
jae
fwait
mov
lret
clc
mov
int3
adc
std
pop
inc
scas
stos
stos
mov
jno
pop
mov
jge
jl
inc
imul
imulb
push
mov
fidivrs
das
pop
xor
mov
jo
call
pop
and
lret
sti
pop
push
fidivl
shll
mov
aaa
in
inc
sbb
enter
int
negb
xchg
pop
dec
cmp
lahf
push
jmp
hlt
mov
push
push
jecxz
lock
leave
popa
sti
inc
inc
daa
imulb
push
and
push
test
pop
sbb
xchg
pop
repz
add
and
sbb
inc
sub
mov
pop
std
cs
push
add
test
repz
mov
pop
nop
call
pop
mulb
push
mov
pop
aas
pop
int3
cli
cmp
aaa
push
daa
inc
fcomp
fstpl
fstpt
jle
test
inc
outsb
aad
lods
into
cwtl
pop
pop
in
insb
cli
negl
insb
or
jne
or
pop
mov
into
jmp
out
jae
fnstenv
jb
jno
test
sahf
or
lods
xchg
lret
sub
pushl
lcall
pop
sbb
inc
negl
js
sti
cmp
cmp
mov
add
das
jp
adc
mov
mov
mov
test
mov
or
mov
add
fistl
leave
inc
cld
test
pop
pop
mov
dec
loop
jecxz
add
fcompl
or
cltd
mov
sbb
jmp
movb
jecxz
mov
cmp
sub
insb
mov
arpl
or
sub
imul
cmp
adc
ret
jbe
dec
insl
dec
xchg
xor
stos
jp
push
push
push
pop
scas
call
sahf
mov
xchg
ficompl
jbe
ljmp
jae
icebp
cmp
xchg
pop
sbb
fidivrl
movsl
fxch
lahf
mov
jle
jb
repz
rorl
lret
dec
push
adc
and
mov
jnp
in
jl
aas
lods
add
xchg
mulb
dec
mov
ret
pop
xchg
xlat
ja
fsub
cmp
push
jp
push
or
rcll
push
xor
je
jb
and
repz
gs
inc
jne
je
sub
mov
mov
in
test
mov
ret
repz
inc
dec
loope
stos
sbb
jnp
fimuls
lds
pop
mov
int
test
mov
jg
ja
je
mov
es
loop
xchg
jmp
mov
and
scas
rorl
mov
push
sub
nop
dec
into
popf
sbb
repnz
cld
cmp
lea
and
pop
movb
ss
push
or
in
movsb
cs
adc
ret
cmp
push
out
mov
int
mov
push
xchg
movsl
sub
add
std
and
cmp
mov
adc
cmp
test
and
add
int3
ficomps
mov
xchg
cs
out
es
jns,pn
and
mov
inc
lcall
adc
sbb
fsubrs
jmp
mov
loop
dec
xchg
sub
cmpsb
jge
fwait
mov
int3
add
fadd
aas
sahf
jl
rorb
pop
push
cwtl
push
dec
loopne
mov
hlt
mov
jae
out
lret
and
cmp
in
in
jle
ss
push
ds
xchg
in
rcrb
add
pusha
sub
call
fnstenv
xchg
into
addr16
scas
daa
fimull
sahf
xchg
int3
pop
scas
mov
pop
repz
in
sub
xchg
scas
push
dec
in
adc
lds
test
xchg
sbb
test
inc
inc
lods
mov
pop
into
xor
add
sub
inc
icebp
movsl
jg
lods
rorb
pushf
lods
dec
sbb
cld
adc
jnp
movsl
pop
mov
fwait
cmpsl
mov
movsl
xchg
es
sahf
out
movsb
enter
cmp
adc
adc
fwait
push
pop
jae
mov
loop
inc
sub
inc
lods
dec
fwait
xor
cld
inc
inc
aaa
inc
ljmp
xor
popf
inc
sti
push
ljmp
jno
mov
fwait
test
or
data16
dec
mov
pop
daa
mov
xor
fstp
dec
fiaddl
gs
jno
fnsave
hlt
ss
cli
xchg
jnp
cmpsb
cld
int
push
fbld
pop
adc
jns
xor
insl
bound
ss
dec
insb
rorb
in
in
push
cmc
fwait
orl
mov
icebp
cmc
cwtl
fnsave
inc
stc
or
mov
loopne
aad
dec
leave
sbb
scas
js
orb
movl
mov
jmp
in
imul
jns
clc
adc
cltd
jne
dec
fcomip
adc
outsl
outsb
xor
jge
call
jbe
outsl
ret
inc
push
dec
scas
insl
shr
out
xchg
iret
mov
mov
testl
aam
pop
test
add
mov
daa
insl
pop
repnz
mov
xchg
in
or
ljmp
lret
or
iret
mov
out
fadds
and
adc
pop
jne
adcl
and
in
dec
fwait
addr16
es
test
mov
clc
adc
test
std
add
das
repz
test
mov
cmc
ror
push
shll
pushf
jge
cli
push
inc
ljmp
mov
lods
jle
js
fsubl
or
dec
mulb
cmp
in
test
or
adc
rcll
neg
jbe
ljmp
stos
shl
mov
fnstsw
mov
jns
mov
cltd
sahf
and
in
iret
mov
movsl
pop
ret
loop
jnp
scas
lods
and
cld
sbb
inc
push
mov
loop
xchg
and
mov
aas
push
out
into
or
mov
sbb
pop
std
popa
push
ja
mov
stos
or
or
jl
into
ficoml
bound
ja
stos
cwtl
mov
int3
jno
outsl
pop
sahf
pop
dec
bound
insb
outsl
adc
pop
leave
outsl
adc
pop
cmc
popf
cltd
and
sbb
xchg
mov
or
faddl
test
loopne
lcall
push
jne
add
jo
or
xor
adc
sti
cmp
shlb
bound
xor
mov
dec
lods
or
inc
push
fsubrs
push
out
jp
mov
sub
jp
xchg
repnz
out
aas
shll
repz
clc
dec
dec
cmp
mov
or
lea
jp
imul
loope
inc
sub
es
sbb
pop
push
in
adc
add
pop
xor
push
out
jg
inc
int
loope
insl
xlat
mov
mov
inc
sbb
push
sub
fiadds
inc
lret
bound
subb
inc
and
ljmp
lock
rolb
mov
imul
mov
sbb
aam
mov
mov
adc
push
lahf
in
cmc
push
cltd
ror
mov
stos
jne
aad
loope
mov
push
icebp
push
aam
sub
sbb
clc
int3
push
sbb
mov
mov
push
sti
xor
mov
mov
cmc
call
xlat
xchg
pop
mov
lods
xchg
mov
push
std
loope
popa
adc
and
scas
inc
cmpsl
xchg
sbb
cmpsb
loopne
out
xor
mov
jbe
repz
stos
push
adc
add
adc
ret
push
loopne
cld
and
cmp
and
scas
jns
pushf
xchg
icebp
or
mov
outsl
mov
jnp
sbb
cmp
xor
inc
cs
call
sub
decb
shlb
sbb
pop
in
ds
insl
xchg
daa
outsl
lcall
jmp
push
or
ret
sbb
std
ds
adc
ds
repz
jb
adc
pushf
imul
mov
xor
cmp
and
nop
mov
jecxz
inc
mov
or
xchg
test
in
fs
fxrstor
ljmp
sbb
pop
mov
loopne,pn
mov
pop
add
mov
lods
mov
pushf
inc
dec
mov
mov
or
mov
add
add
pusha
xchg
repnz
cltd
shrb
arpl
hlt
imul
jg
push
mov
mov
xor
hlt
and
and
pop
jecxz
call
push
add
leave
loopne
in
pop
sbb
in
stos
or
xor
dec
xor
ret
jp
add
jg
and
xor
sub
test
sbb
and
adc
inc
cmpsb
mov
dec
cmova
fwait
xor
idivb
leave
add
cmp
stos
and
lcall
xchg
push
and
adc
loopne
jbe
ja
movsl
jae
mov
fidivrl
cmpsl
aas
stos
loop
mov
ret
sbb
cmp
dec
daa
arpl
decb
ret
loope
adc
jecxz
loope
test
push
mov
scas
xchg
mov
shr
adc
hlt
xchg
lods
mov
xor
outsb
lods
repnz
inc
rcrl
mov
fists
mov
jmp
or
pop
pop
push
ret
enter
bnd
pop
imul
and
shlb
out
dec
popa
push
in
les
into
out
inc
mov
ret
in
push
adc
hlt
sub
inc
pushf
shrl
fsts
pushf
fldl
mov
je
mov
pop
jge
loopne
jp
fcoml
repnz
dec
sbb
cmp
shr
dec
pop
iret
bound
repz
stc
aam
sub
lcall
xchg
sub
fidivs
popa
add
cmp
lods
sub
dec
or
in
mov
xor
testb
mov
mov
das
fsubs
pop
push
ret
ljmp
mov
xor
pop
in
adc
cmp
xor
dec
sub
idivl
mov
mov
adcl
enter
pop
cmpsb
and
inc
decl
add
and
popf
das
ss
je
fdivp
or
xor
mov
add
mov
clc
xor
lcall
and
jge
fwait
adc
sarl
pop
jl
mov
repnz
test
insl
loopne
pop
push
stc
setae
test
sub
add
inc
sbb
jg
mov
mov
fmuls
fstpt
shrb
fistpll
mov
add
and
ret
repnz
popf
lret
dec
cltd
cmp
ljmp
fnstenv
push
es
cmpsl
std
push
sbb
xchg
adc
or
add
push
sbb
fcmovne
fnstsw
lret
adc
ja
jmp
test
add
mov
pop
add
stos
and
pop
xor
add
mov
xchg
leave
imul
subb
in
dec
js
repnz
scas
bound
daa
push
aas
stos
pop
in
into
test
repnz
adc
inc
out
push
xchg
nop
popf
outsb
or
ficomps
roll
mov
popa
ret
cmpsl
jmp
setge
push
shll
cmp
out
or
bound
pop
mov
leave
jge
add
mov
andb
insl
je
xchg
sub
adc
mov
sbb
imul
mov
and
bound
mov
inc
pop
inc
dec
clc
outsb
pop
xor
push
iret
pushf
inc
in
js
push
cmpsl
sahf
fs
mov
decl
test
pop
or
or
or
jne
jbe
les
jns
adc
pop
xchg
xchg
sub
dec
fidivrl
mov
xor
mov
push
push
fwait
pop
mov
push
add
enter
into
dec
pusha
adc
nop
test
adc
push
scas
jb
lods
imulb
adc
add
insl
or
stos
mov
pusha
stc
aad
sub
int
inc
jo
outsb
scas
iret
fnstenvs
movsb
cld
dec
xchg
jno
bound
and
cmpb
adc
fsubrs
ret
or
pop
repz
fcmovu
in
addr16
sub
int3
movsb
sbb
jp
pusha
into
mov
mov
dec
or
popf
call
adc
jle
rol
ljmp
pop
imul
inc
mov
dec
es
mov
dec
mov
test
push
mov
mov
push
push
cmp
xlat
insl
jbe
fidivs
ret
push
push
fisubrs
sub
rcl
xchg
rep
mov
loopne
negl
addl
in
and
out
adc
jne
mov
in
pop
leave
jne
rcl
arpl
ljmp
inc
push
fisubs
xor
cmpsl
or
cmp
shrl
ds
js
xor
jg
adc
das
inc
cld
jge
and
jbe
cli
inc
stos
ficoms
popf
cmp
loope
stc
loope
outsl
jb
push
movsb
mov
xor
lret
jae
inc
jmp
jbe
repz
in
test
pop
xchg
jbe
daa
or
fnstcw
sub
mov
dec
push
or
das
add
dec
inc
sub
mov
pop
jle
outsb
xor
inc
mov
rol
sahf
fstpl
mov
xchg
stc
push
sbb
iret
enter
and
jb
xchg
pop
xchg
fisubrs
push
inc
sub
out
sbb
sbb
jne
test
xchg
sbb
leave
xorl
movsb
sbb
fisubl
test
pop
repnz
movsl
add
aaa
shlb
lcall
fdivrp
jbe
adc
test
dec
and
xlat
or
das
in
or
jp
repz
std
sbb
jp
push
es
leave
add
cmp
push
xchg
xor
fwait
into
push
pop
push
in
adc
inc
lret
mov
or
cmp
in
cld
loope
addr16
xchg
scas
inc
fdivrl
cmp
or
pop
cmp
and
jp
in
push
mov
jle
ret
mov
xchg
je
testl
lret
sti
mov
inc
in
xchg
sub
mov
rcrb
addr16
mov
int3
jmp
or
cmpsl
xchg
push
inc
testl
aaa
decb
dec
addr16
sbb
les
mov
cmp
xlat
sub
lret
dec
iret
sub
mov
addr16
pop
jae
sbb
scas
aaa
repz
and
dec
sub
sahf
out
push
sub
aam
sbb
addr16
cmp
xchg
cmp
jmp
mov
hlt
addr16
push
daa
aad
mov
int
int3
dec
movsb
aaa
stos
loop
and
add
inc
lcall
into
gs
shld
fisubs
insl
out
lds
and
sub
mov
cmc
push
push
mov
cld
scas
inc
testb
inc
dec
into
and
mov
test
sbb
dec
sbb
cmp
and
fmull
addr16
jecxz
imul
cmp
idivb
jnp
mov
into
out
and
push
push
xchg
xchg
jne
pop
jae
and
inc
xchg
inc
dec
lret
les
adc
sub
jbe
aad
mov
adc
int
push
or
fnstenv
and
mov
jb
xchg
push
and
repnz
cs
fwait
repnz
push
gs
lds
mov
popa
push
dec
pop
dec
cmp
sti
mov
mov
icebp
adc
cmc
cmp
scas
jae
lea
pushf
ss
lcall
add
fxch
pop
push
lcall
mov
cltd
cld
ret
pop
movsb
imull
xchg
cli
xchg
pop
shll
insl
stc
cmpsb
ret
sub
xchg
adc
cli
or
add
xchg
out
xchg
stos
fistps
sti
jecxz
adc
pop
or
shl
sub
jecxz
adc
jae
fwait
push
add
jl
test
jl
lock
xor
dec
add
lods
jg
adc
mov
mov
lds
jecxz
fsubr
adc
out
sub
sub
sub
push
mov
ds
loop
cmpsl
divb
sub
cmc
cmp
cli
das
mov
or
push
mov
dec
cmp
jae
mov
int3
fimuls
push
jno
nop
and
in
shrl
push
adc
vpunpckhwd
add
fs
iret
imul
and
aam
sub
cmpsl
mov
mov
adc
inc
movsl
mov
add
pop
insl
shrl
cmp
flds
mov
pop
mov
ficoml
adc
test
sbb
xchg
insb
ret
test
lahf
push
lea
xchg
outsb
iret
push
jl
in
xor
mov
push
push
jbe
xor
shll
icebp
jno
jle
sahf
out
add
xchg
add
push
arpl
ret
mov
fisttps
push
mov
xor
jns
push
add
mov
std
pop
add
push
ret
mov
sbb
mov
lret
bound
mov
arpl
sub
push
jb
hlt
mov
insl
jle
xchg
sbb
lea
daa
js
push
pop
movsl
scas
push
push
add
mov
xchg
stc
push
dec
repnz
lock
and
shll
fnstenv
push
dec
mulb
sub
cmp
repz
mov
test
push
or
popf
push
sub
and
add
lea
jne
fucomp
fcoms
dec
add
xor
jne
xchg
stc
jo
testb
neg
add
and
add
insb
js
aam
jp
add
sub
test
adc
nop
daa
loopne
jmp
xchg
sub
mov
add
cmp
mov
fcoms
sbb
inc
xchg
rcrb
push
cwtl
pop
xor
and
inc
popl
sbb
cmpsb
insl
cltd
out
stos
repnz
jbe
insb
jle
and
shl
mov
out
sub
and
out
popa
rolb
lcall
imul
pop
pop
jo
mov
mov
out
out
mov
flds
iret
sub
test
shrb
mov
cmp
jg
inc
mov
pop
cmp
inc
cwtl
iret
pop
pop
loopne
inc
jmp
sbbl
mov
shrb
repz
shl
icebp
sbb
mov
cmpsb
adc
fisubrl
lahf
out
test
inc
ror
dec
jmp
sbb
xchg
bound
xor
outsl
xchg
mov
mov
dec
jmp
enter
push
cmp
fstpl
add
or
pop
adc
inc
xor
sub
add
imul
enter
aaa
pop
loop
push
lea
and
sub
jmp
je
mov
sbb
mov
xor
stc
ljmp
jno
punpckhbw
arpl
mov
int3
call
dec
and
adc
adc
leave
inc
mov
addr16
dec
dec
or
sti
sub
and
js
cs
out
push
gs
xchg
stos
test
scas
es
and
push
cmc
repnz
leave
mov
ja
xor
in
pop
test
outsl
jo
adc
pop
incb
fsubs
adc
pop
xchg
rorb
lahf
push
lcall
dec
mov
pop
daa
aad
mov
lock
subl
into
sbbb
jg
pop
sbb
sub
insl
call
adc
imul
fwait
in
pop
ret
jl
shrl
repz
sbbb
push
fsubrs
push
clc
fucomp
addr16
ljmp
xchg
pop
mov
lods
cli
fists
jl
jns
fdivrl
xchg
dec
ss
xchg
add
fmul
inc
pop
mov
fcomp
push
push
movsl
jg
xor
jnp
out
dec
push
std
imul
fdivl
sbb
js
mov
mov
repz
test
sti
fs
pop
dec
mov
jge
cmp
add
sbb
popa
flds
jb
and
loopne
lea
inc
pop
outsl
rcll
inc
lret
adc
mov
imul
jbe
push
adc
adc
outsb
cwtl
call
adc
or
jp
sbbb
fwait
test
or
push
add
xchg
mov
sbb
mov
sahf
push
jmp
sbb
push
arpl
shrb
clc
mov
sbb
das
iret
xor
pop
icebp
xor
rol
or
inc
jecxz,pt
add
mov
lods
test
es
lcall
cltd
mov
in
push
mov
call
scas
xchg
add
dec
out
imul
pop
jle
jl
lds
and
pop
adc
jle
xor
push
add
sbb
pop
arpl
jecxz
leave
mov
fsubrp
mov
sarl
push
ret
adc
js
in
ss
inc
fnstsw
cwtl
mov
clc
or
jg
popa
dec
cmp
xor
lea
push
jnp
and
push
enter
incl
xor
inc
mov
in
mov
mov
insb
or
mov
cld
fsubrl
dec
test
sbb
addr16
test
fcomps
js
jmp
scas
mov
xchg
or
leave
mov
mov
das
in
dec
idivb
or
xor
cmp
scas
pop
icebp
or
ret
push
ficoms
pop
insl
jnp
push
push
imul
sbb
xor
mov
imul
test
js
iret
jbe
call
std
xchg
adc
in
sbb
or
mov
sbb
jl
rep
mov
iret
fdivl
js
pop
push
jae
inc
add
test
in
mov
int3
inc
leave
loope
in
subl
mov
push
lahf
jbe
ret
dec
push
call
sarb
cmp
loop,pt
inc
jle
gs
imul
or
mov
mov
jmp
push
nop
xor
dec
fld
scas
test
mov
mov
lret
sahf
cmp
sub
push
stc
mov
movsb
jno
rorl
orb
inc
or
shl
xchg
out
ret
pop
cmp
loopne
push
es
or
stos
addr16
jnp
jecxz
lods
sbb
int
sub
out
or
int
test
rcrb
shlb
push
mov
pusha
cmpsb
shrb
subb
push
or
ret
adc
lods
daa
int3
xadd
mov
xchg
in
outsb
sti
in
cmp
repnz
jecxz
fldt
rclb
adc
jp
fwait
adc
inc
in
cmc
imul
call
sub
sarb
movsl
sti
pop
fidivrl
adc
xorl
mov
sub
cltd
mov
fwait
test
js
gs
adc
ds
ret
pop
shrb
lods
mov
pop
pop
mov
cmpsb
in
in
and
jmp
jge
rcl
pop
mov
dec
ds
push
imul
cltd
ror
imul
in
add
dec
jl
pop
movl
xchg
push
test
mov
jl
adc
add
ret
pop
mov
iret
mov
cmp
movsb
bound
fcompl
mov
icebp
and
flds
call
mov
and
shll
clc
push
inc
mov
push
cltd
fmul
jae
pop
movsl
sti
pop
insl
inc
dec
popl
popf
sbbl
jno
xor
mov
push
popa
in
rcl
inc
mov
or
lea
lret
push
dec
xorb
in
sub
ljmp
xchg
xor
push
pop
lcall
dec
or
sub
jno
cmp
adc
es
cmpsl
fmuls
cs
int
lea
or
ljmp
jp
out
jle
fbld
or
iret
popa
stos
mov
mov
je
adc
jge
sbb
lock
jne
jmp
lods
xchg
fs
notl
test
cmp
and
iret
fistps
mov
shlb
popa
in
cmp
ficoms
fdivrl
cmpsb
cmpsb
int3
outsl
mov
lea
and
push
adc
jge
in
movsl
je
cmp
imul
test
mov
add
aam
test
mul
pop
rorb
sub
mov
cmpsl
aad
jmp
inc
pop
lahf
js
jo
or
orb
or
cli
push
and
lcall
cld
jns
cs
mov
sbb
add
jno
mov
cmp
lcall
testl
je
xor
aam
sub
rcpps
xor
dec
mov
imul
cmp
push
cltd
pop
sti
es
jge
mov
jg
pushf
mov
jp
mov
movsl
push
adc
dec
or
mov
add
fisttps
xchg
mov
loope
insl
mov
nop
stc
mov
xchg
fsubs
mov
mov
imulb
rorb
jp
jp
clc
adc
inc
rorb
or
sbb
pusha
dec
mov
jno
and
cmp
lret
scas
adc
add
pushf
xchg
add
hlt
jmp
pop
dec
mov
lods
mov
ss
pop
out
daa
es
fucom
mov
dec
mov
fsubrs
and
jnp
iret
add
sbb
mov
jno
in
push
jmp
mov
jmp
clc
ds
xor
popa
mov
fsubrp
jg
cmpsw
ds
jge
dec
cmc
lds
adc
mov
jp
inc
cmp
xor
push
jl
sub
xchg
push
inc
fldl
hlt
fs
es
mov
xchg
sbbb
mov
ror
pushf
xchg
stos
cwtl
cmp
leave
mov
ljmp
push
mov
fwait
iret
sbb
pop
or
push
cmp
adc
adc
shlb
mov
mov
data16
mov
fidivrl
xor
movsl
bound
jl
cwtl
jg
in
mov
jl
push
sub
xor
mov
dec
adc
out
setp
cmp
push
rorl
movsl
xchg
loop
xchg
divl
scas
xchg
arpl
push
scas
dec
push
mov
rcr
and
out
bound
lret
bound
mov
fwait
testb
ss
aad
test
in
push
xor
gs
add
and
jns
add
pop
xchg
mov
je
insb
mov
xchg
notb
cld
popa
fcmovbe
ret
inc
mov
inc
ja
repnz
inc
xor
pop
dec
aam
cmp
movsb
stos
lret
iret
lcall
xchg
mov
cmpsl
mov
data16
pusha
mov
in
pop
add
pop
aas
jnp
push
outsl
shrl
test
in
xor
inc
sbb
rcrl
cmp
jns
pop
stc
push
pop
or
push
dec
jne
mov
inc
fidivrs
out
mov
pop
push
push
ffree
and
cmpsb
fsubs
cmp
lea
andb
push
jle
lods
push
fmuls
push
lret
sbbl
cld
inc
fidivl
das
dec
ja
popa
adc
inc
dec
lea
iret
adc
lret
dec
mov
xor
inc
inc
test
dec
adc
mov
jg
mov
push
test
add
sbb
add
fs
lock
repz
cmp
lret
out
xlat
xchg
sub
leave
mov
testb
xchg
push
mov
cmp
sbbb
inc
jno
cmp
testb
test
pop
lods
fldenv
pop
repnz
xchg
jbe
mov
xchg
enter
lea
pop
pop
test
mov
mov
jno
and
fdivl
int3
test
fs
or
sbb
push
or
sbb
out
cmpsl
xchg
or
imul
lods
jo
mov
sarb
adc
insb
xor
in
pop
inc
cs
cmp
jo
mov
arpl
cmp
or
pusha
imull
mov
xor
lds
int3
or
jnp
mov
jns
das
mov
xor
loop
inc
mov
sub
cld
adc
xchg
mov
test
mov
dec
loopne
xor
add
aad
mov
in
add
push
or
stos
mov
gs
xchg
fcoml
mov
push
insl
inc
clc
pop
ljmp
les
mov
sti
jo
aas
xchg
pop
cmpsb
dec
push
ljmp
fwait
mov
inc
stos
dec
cmpsl
ret
xor
cmp
notb
int
cmp
and
sahf
sub
aaa
or
arpl
pop
mov
pop
lods
aad
fisubl
repz
sbb
mov
int3
xchg
sbb
sti
pop
push
stc
xchg
sub
andl
cwtl
out
shll
call
adcb
sti
mov
xchg
shrb
stc
dec
das
shl
hlt
repnz
rcl
xchg
jbe
test
fxch
push
scas
xchg
pop
in
test
ror
pop
adc
dec
jno
subl
negl
add
xchg
inc
iret
xor
out
cmp
shlb
and
jp
sbb
ss
std
sbb
adc
add
imul
xor
and
test
push
stos
pop
invd
rorl
movsb
mov
xor
push
sub
cmp
dec
jecxz
add
ret
cs
clc
dec
lods
shl
sbb
mov
cld
and
cmpsb
sbb
movsb
and
call
or
cmp
int
popa
sbbb
add
lea
and
or
adc
cmp
dec
fmuls
stos
pop
out
add
scas
sbb
sub
inc
in
inc
jecxz
out
push
or
bound
inc
jle
psrlw
xchg
in
test
mov
insl
stc
push
stos
sub
fstpt
add
call
in
fs
cwtl
adc
imul
sbb
push
ja
push
imul
pop
sti
sub
xchg
popa
data16
clc
mov
int
push
fistps
mov
push
aad
add
repnz
or
aad
ja
js
xor
insl
aaa
jo
mov
mov
jae
sbb
push
fwait
outsb
fists
je
sub
jo
push
outsb
pop
mov
stc
loop
stos
mov
cltd
and
jo,pn
pushf
push
insb
ret
xor
fisttps
mov
shll
cmpsb
add
aam
scas
cmp
sub
ja
xor
push
sbb
mov
call
cld
or
mov
jb
aas
push
jge
xchg
inc
arpl
xchg
je
mov
cmc
fisttpl
test
call
jp
pop
andl
insl
cltd
push
fdivr
subb
xchg
adc
inc
cmp
out
xchg
mov
dec
sub
mov
sbb
pop
aad
sbb
adc
add
xchg
dec
iret
scas
or
fisttpll
inc
jmp
mul
jle
ljmp
movsb
lret
iret
jo
xor
fbstp
mov
sub
mov
imul
xor
dec
ret
jle
scas
mov
dec
cmpsl
jno
sub
popl
cmc
gs
pop
in
enter
add
iret
inc
jns
mov
and
mov
mov
mov
cli
popf
mov
fucom
cli
insl
clc
lret
and
imul
sbb
xchg
shll
orb
and
jae
cmp
test
pop
push
sub
mov
cmp
xchg
js
push
inc
test
sub
add
movsb
jecxz
inc
stc
nop
je
popf
or
loopne
mov
xor
lcall
in
mov
pop
mov
or
mov
and
shlb
hlt
mov
aas
aad
lods
mov
pop
xchg
pop
mov
push
mov
mov
adcl
push
jle
xchg
lods
add
cwtl
fldl2t
leave
out
ror
test
pushf
pushf
hlt
cld
inc
out
jge
xchg
lcall
adc
ds
or
lds
adc
mov
pusha
out
mov
fnstenv
test
popa
add
test
pop
mov
fs
adc
test
iret
push
push
dec
pop
jmp
clc
jg
sub
imulb
enter
mov
xor
je
adc
push
int
jo
aad
mov
dec
xchg
cmp
dec
dec
shl
pop
cmp
in
jle
daa
push
and
into
lods
inc
add
and
sbb
or
jbe,pt
hlt
shl
jg
jmp
push
push
mov
inc
pop
lahf
jmp
jbe
mov
inc
in
in
mov
adc
test
jo
popf
gs
push
test
jo
js
cmpsb
inc
and
cld
and
ja
aaa
mov
cwtl
jns
or
and
rcl
dec
cmp
xchg
outsb
insl
loopne
mov
movsb
stc
repz
sti
clc
inc
push
cmpxchg
add
in
xchg
dec
shl
lods
aas
int3
or
mov
fs
mov
fwait
xchg
sbb
xchg
cs
ds
sbb
xor
inc
cmp
jle
fs
insb
jb
jle
jns
push
cmpsl
subb
aam
jns
pop
or
imul
addb
test
sub
xchg
cmp
push
mov
jo
lods
leave
movsl
cmp
and
push
cmpsb
aam
cmpsl
ret
cmp
xchg
pop
push
dec
test
mov
or
popa
jmp
in
cmp
pushf
repz
lcall
ret
dec
sahf
inc
enter
dec
fsubl
fdivrs
div
cmp
push
add
lret
xor
xor
ret
mov
nopl
mov
jecxz
jmp
adc
test
aam
enter
inc
cltd
lea
ret
outsl
jecxz
btc
add
stos
shll
fnsave
sbb
mov
push
mov
lods
inc
adc
jp
pop
mov
fsubs
mov
cli
std
xchg
cmp
add
ficoml
adc
pop
xor
sarb
shl
xor
lds
fildl
push
and
cmp
in
pop
sub
xchg
dec
cltd
rcrl
data16
sbb
lret
cld
in
decl
stos
test
xchg
mov
lods
mov
and
cmovle
aas
cltd
pop
fdivrl
jecxz
inc
enter
push
pusha
enter
rol
xchg
cmp
dec
popa
mov
rol
sub
pushf
adc
ficompl
inc
adcb
das
jae
jo
sub
lahf
push
inc
lods
test
and
push
mov
add
adc
fnsave
leave
call
fisubl
aaa
jb
popa
and
xor
inc
shll
int
and
pop
addr16
je
or
push
add
loopne
jle
mov
popf
fcomi
mov
out
xchg
ss
pop
scas
inc
mov
push
mov
pop
in
push
xchg
cwtl
jnp
push
inc
xchg
push
frstor
fs
lods
rol
xchg
mov
cmp
mov
addr16
rorl
js
mov
fucomip
rcl
sub
cvtps2pd
fistps
loop
mov
fstpl
cmovnp
sbb
popa
fcoml
aam
lcall
js
or
movsl
sti
push
mov
add
sub
xor
pushl
imul
test
cmpsl
repnz
std
mov
sbbl
adc
xor
sub
mov
xor
insl
roll
popf
jo
jno
or
or
jae
repz
pop
or
into
test
fdiv
cld
adc
mov
adc
sub
dec
in
outsl
xor
stos
imul
je
test
dec
subb
std
cs
add
in
dec
pop
mov
xor
mul
neg
insb
fwait
shrb
cmp
cmpsb
dec
mov
sub
jne
divb
int3
pop
out
mov
sub
adc
aas
das
inc
jno
mov
ficomps
xor
icebp
in
in
mov
ret
xor
jmp
loopne
rol
sbb
add
adc
outsb
mov
ja,pt
shl
cld
cmp
sbb
insl
orl
addb
lahf
cmp
sub
faddl
jns
pop
lds
incl
cmpsb
dec
mov
and
jb
or
jno
je
lcall
or
outsl
add
clc
jb
push
scas
mov
lods
daa
rorb
hlt
in
sbb
sub
ss
loope
mov
test
inc
sbb
fidivl
mov
out
mov
pop
add
push
and
xchg
lahf
repnz
inc
test
lock
lret
jne
push
and
into
add
xchg
cmp
push
shrb
dec
lret
dec
mov
mov
add
mov
dec
testb
mov
out
andb
and
pusha
xchg
or
lds
out
inc
adc
pusha
xchg
fldl
leave
cmp
xor
inc
push
insl
clc
sub
push
mov
cwtl
sti
test
mov
sbb
and
pop
xor
cmp
leave
pusha
pop
shrl
jmp
out
dec
and
test
daa
mov
mov
xchg
push
push
push
iret
rorl
jge
rcl
dec
mov
int
fnstsw
xor
sbb
lahf
xlat
sub
pop
int
inc
fisubs
test
ja
dec
jne
loope
jle
push
cli
hlt
xchg
cmp
xchg
pop
lea
lock
cs
pushf
aaa
mov
add
sbb
rcr
sub
xor
jae
push
in
movsb
negl
inc
sbbb
les
mov
mov
bound
pusha
stc
ficoml
shlb
out
adc
pop
push
add
xchg
add
dec
out
sub
or
daa
and
nop
daa
xor
fildll
xor
jns
shrb
test
xchg
scas
aad
mov
popl
push
gs
xchg
sub
dec
inc
dec
pusha
loop
push
and
mov
out
mov
std
lock
sbb
arpl
clc
pop
loop
insl
aad
mov
in
dec
pop
pop
push
xor
fwait
xor
or
mov
loopne
sub
in
jl
mulb
mov
cmp
lea
cmp
pop
imul
add
xor
dec
mov
es
stc
int
fmull
or
movl
adc
dec
and
test
inc
xor
mov
out
inc
cmp
cmp
cli
icebp
xor
lods
out
movsl
ret
lock
mov
rcrl
mov
and
mov
jle
lret
adc
xor
and
mov
nop
lods
je
xor
into
arpl
cltd
test
mov
inc
pop
sbb
gs
lea
sarl
in
sub
fsubrp
imul
pusha
ret
mov
cmp
or
adc
mov
aaa
mov
mov
inc
in
rcrb
xchg
jp
in
hlt
in
loop
xlat
pop
aaa
pop
or
mov
pusha
dec
out
adc
ss
push
test
pop
rcrl
les
sub
push
sub
and
add
cltd
lds
add
and
addr16
push
aam
rorl
rol
cltd
mov
push
leave
rorb
stc
adc
xor
arpl
jo
ret
hlt
stos
push
notb
cmpsb
je,pt
add
inc
xchg
vshufps
cltd
out
test
adc
lods
lock
cmc
int
and
les
mov
jle
cmp
xchg
aaa
ds
int
adc
jb
lds
fdivl
cmp
loop
and
xchg
sub
adc
fldt
mov
fcompl
fs
adc
test
gs
mov
adc
cmp
loope
pop
cmp
mov
cmp
leave
pusha
push
lret
lret
imul
in
ror
outsb
mov
pop
fs
outsb
xchg
cmp
loop
mov
mov
out
inc
fs
mov
add
cmpsb
push
pop
xor
dec
inc
jmp
mov
mov
lods
leave
cmp
push
roll
ret
mov
subl
mov
mov
stc
stos
xor
mov
push
mov
mov
dec
jo
jnp
inc
loopne
pop
adc
and
das
test
jecxz
js
sub
mov
cmpl
stos
movsb
fnstenv
cs
pop
gs
push
divb
sub
adcb
test
lock
gs
arpl
jnp
pop
lods
ljmp
jno
sub
mov
fisttpl
leave
or
pushf
push
sahf
sahf
xchg
fs
ja
adc
mov
popa
mov
in
sub
mov
fsubrp
inc
pop
add
xor
push
out
push
push
push
xor
xor
mov
ret
jg
jp
das
vpmullw
adc
mov
out
push
push
or
dec
fisttps
in
sti
inc
dec
movsl
std
add
xchg
wbinvd
cli
and
push
or
andb
imull
into
jnp
push
pop
mov
adc
fidivrs
xor
pop
push
and
inc
fcmovb
dec
pop
sbb
mov
xor
hlt
mov
shlb
imul
mov
mov
add
jbe
mov
push
push
push
xchg
mov
arpl
les
sub
cmpsl
lret
inc
cmpsl
insb
mov
lds
push
cwtl
mov
xchg
divl
xor
push
dec
mov
je
mov
cmp
int3
jg
inc
sbb
int
std
cmp
stos
fcoms
cmp
inc
movsb
mov
jb
and
iret
fdivl
adc
mov
lea
daa
xor
sbbb
aam
lods
nop
je
xchg
aaa
cmp
jp
cwtl
xor
scas
cld
stos
mov
cmp
dec
es
movsb
bound
adc
add
mov
pop
addr16
add
fisttpll
push
sub
adc
dec
hlt
incl
test
fsubs
dec
and
or
fidivrs
outsl
or
jg
add
cmp
loop
pop
lods
aaa
into
fst
frstor
int
add
push
es
pop
sahf
jb
es
fnstsw
xchg
movb
jns
xor
arpl
push
mov
pop
cmp
les
shll
pop
or
mov
push
push
frstor
test
push
cmc
or
test
dec
mov
xor
lods
insl
pop
mov
arpl
int3
xchg
lret
push
iret
cmp
in
insl
loopne
popf
xchg
push
test
out
xchg
imul
jbe
xchg
cld
xorl
jae
adc
std
jns
or
call
xchg
lahf
pop
outsl
in
mov
dec
lahf
jno
mov
daa
sti
mov
das
mov
outsb
outsl
jmp
push
add
daa
push
add
mov
adc
in
lcall
xor
incb
cld
shrl
jg
jl
jp
xor
adc
ja
das
test
cmc
adc
jb
loopne
mov
push
and
mov
icebp
adc
ss
sub
je
into
dec
loopne
cmp
test
push
test
out
fmulp
push
ljmp
and
inc
aaa
sbb
mov
cmp
or
ret
sub
adcb
and
mov
sbb
cld
je
testl
adc
cld
xchg
test
cmp
test
sbb
push
push
jecxz
xor
and
lods
ret
mov
lods
cmpsl
jnp
imul
push
inc
popf
xchg
addr16
out
in
pop
test
mov
in
push
adc
mov
fiadds
mov
mov
mov
xlat
xor
pop
mov
pop
sti
stos
loope
jne
jnp
fwait
or
int3
movsb
add
push
in
loopne
jae
fisubs
movsb
jecxz
imul
icebp
gs
jmp
xchg
jl,pn
js
or
inc
sbb
imul
inc
fldl
in
adc
bound
or
mov
lcall
pop
mov
or
sbb
cmpsl
addr16
pcmpeqw
mov
inc
pop
or
push
outsl
mov
xchg
or
xchg
sub
mov
pop
ret
pop
jnp
lcall
iret
jecxz
dec
aad
outsb
adc
jmp
and
fcoml
imul
and
loopne
pop
int3
dec
scas
hlt
imul
xor
mov
popa
cmp
cltd
outsb
loope
cmp
outsl
push
adc
repz
lea
add
or
dec
jl
outsl
ds
xor
mov
ret
pop
push
lods
push
pop
lahf
xchg
adc
cmp
aam
pop
notb
mov
push
arpl
aaa
mov
ffree
flds
xchg
jp
leave
and
pusha
xlat
sbb
mov
pop
pop
icebp
mov
in
xchg
sarl
xlat
mov
add
idivl
pop
aaa
and
push
fcoml
push
cmp
mov
out
leave
loopne
cmpsl
inc
ljmp
cmpsl
and
jl
inc
pop
jp
cmpsb
stos
or
xor
ret
push
push
repnz
in
imul
mov
imul
fcomps
xorl
sbb
jle
cmp
fsubs
scas
roll
lret
cmp
xchg
dec
pop
jle
out
add
cmp
sub
lea
inc
gs
ja
rorb
xchg
inc
fstps
cmp
outsb
popl
rorl
xchg
and
movsb
shrl
inc
clc
shll
jno
mov
call
cs
sahf
clc
hlt
sub
xor
pop
stos
clc
jg
push
pop
lock
inc
pushf
xchg
sahf
daa
jp
negl
mov
loope
dec
mov
mov
in
stos
sub
nop
fadd
or
mov
mov
shlb
push
pop
add
cmc
pop
sbb
das
sub
mov
ja
and
mov
or
into
jae
or
cmpsl
mov
dec
cmp
jno
xor
arpl
mov
xchg
add
pop
dec
cmp
cmp
jle
push
and
repz
jnp,pt
sub
inc
inc
mov
dec
jne
scas
push
test
push
hlt
cmp
pop
mov
push
jmp
aaa
aas
loope
fdivrs
int
dec
movsl
jl
pop
insb
and
scas
push
or
cwtl
das
jge
cwtl
test
xor
xor
ds
fisubrl
std
lods
adc
dec
in
scas
pushf
jg
mov
xchg
dec
icebp
mov
in
pop
pop
cwtl
shrl
cld
leave
xchg
mov
pop
sahf
pop
aas
scas
in
sbb
jne
cwtl
xchg
fstl
jg
sahf
mov
test
pop
pop
insl
push
les
data16
enter
and
into
test
and
divl
mov
xchg
ljmp
int3
or
xchg
inc
mov
aas
xor
bound
mov
inc
sub
xchg
aas
int
repnz
pop
add
out
mov
jo
mov
aas
or
test
push
mov
jb
xor
ljmp
sbb
sub
and
sub
shrb
cli
cmp
add
ljmp
push
jae
xor
cmpsl
int3
and
fmull
insb
sub
pop
es
cmp
test
int
fdivrs
or
xor
outsb
pop
dec
in
iret
lds
pop
movsl
movsl
xor
pop
cltd
jnp
mov
xor
push
iret
sbb
inc
ds
pop
mov
rorl
push
add
mov
aas
dec
repnz
add
mov
out
fst
inc
stc
popf
in
ret
add
pop
pop
xchg
adc
xor
xchg
addr16
fisubl
xchg
sbb
out
xchg
scas
das
repnz
fcmovnbe
pop
repz
dec
lahf
ds
jp
cmc
or
push
addr16
insb
sub
push
cmpsl
mov
in
lods
jo
sbb
and
pushf
scas
push
inc
xor
in
in
call
cmp
push
jl
pop
mov
loope
mov
sahf
test
xchg
repz
mov
add
cltd
repz
and
ss
jl
inc
fwait
mov
repz
cld
xchg
cmp
mov
imul
mov
sbb
shl
mov
pop
in
in
adc
outsl
mov
imul
push
cmc
nop
push
dec
ret
jp
mov
pop
andb
addr16
jp
jecxz
pop
jnp
add
scas
inc
mov
loope
loopne
xor
cmpsb
nop
popf
repnz
lret
push
or
sbb
movsl
popf
call
sub
jns
popf
test
fdivr
and
xchg
fdivrl
aad
notl
and
fdivrl
adc
and
aam
xchg
add
pusha
mov
movsl
out
testl
icebp
aad
adc
sahf
inc
jmp
leave
sub
outsb
das
cmp
repz
call
xchg
shlb
inc
shrb
or
nop
pop
scas
rcll
jmp
test
hlt
push
repnz
adc
push
mov
mov
gs
mov
hlt
push
push
enter
std
xor
cs
mov
loope
push
les
cmp
leave
test
enter
cmp
out
loope
push
imul
inc
test
push
fidivl
pop
adc
xchg
mov
decl
data16
sub
inc
cmp
lahf
stos
sbb
lcall
jb
pop
movsb
xor
push
inc
out
jne
ljmp
inc
repz
mov
and
cmc
dec
cmp
mov
adc
add
in
jmp
adc
aam
sbbb
mov
inc
mov
cwtl
imul
jb,pn
pusha
pop
mov
push
sbbl
push
sarb
cwtl
cmp
popf
mov
adc
cmc
mov
gs
jg
popf
mov
sbb
call
mov
cmp
push
add
sbb
add
pop
mov
sub
xchg
out
push
jae
lds
mov
push
or
mov
lahf
lock
fidivrs
pop
incl
fsubl
adc
xchg
dec
negl
test
cmovg
inc
cmp
and
icebp
cmp
xor
cmp
dec
push
cwtl
std
sub
leave
das
lock
mov
pop
pop
je
cmp
fwait
clc
arpl
push
leave
push
jbe
sahf
xchg
call
sbb
xchg
sub
inc
ret
add
mov
mov
loopne
pop
cld
rorl
or
in
das
test
push
jb
lods
roll
out
and
xor
in
push
push
in
pop
jo
cmpsb
jge
xchg
mov
and
adcl
xor
jbe
xor
mov
fidivrs
icebp
push
adc
xchg
push
or
cs
add
inc
jmp
push
push
fcoml
push
lods
or
cmp
mov
mov
adc
aas
loop
pusha
xor
inc
jb
imul
xchg
cmc
sarl
movl
es
add
roll
in
fbstp
jmp
lahf
inc
in
test
xchg
inc
popw
push
lret
fcomip
mov
in
jbe
add
sbb
stc
popa
and
mov
xor
lds
push
in
mov
incl
mov
faddp
push
out
sbb
rol
iret
mov
jecxz
fistpll
rcr
xchg
mov
or
adcb
cmpsl
or
inc
ret
mov
cltd
loop
mov
jle
stos
sbb
cwtl
and
push
jo
jb
insl
adc
cltd
lret
and
mov
mov
pop
repz
mov
cmc
punpckhbw
or
imulb
cmp
xlat
movsl
mov
cwtl
push
xchg
and
mov
test
cmp
jae
mulb
cmpsb
sbb
aas
movsb
hlt
cmp
pop
jnp
cmp
pusha
aaa
push
jge
adc
xorl
mov
xor
cmpsb
scas
insl
inc
mov
lds
icebp
adc
jmp
push
push
test
js
sbb
in
leave
pusha
pop
dec
or
popf
je
pop
xor
or
loop
and
cmp
lret
mov
mov
mov
cmp
outsl
xor
enter
jp
pop
nop
out
lds
xchg
loop
ljmp
in
test
mov
cltd
pop
cmp
mov
jae
mulb
inc
fstps
mov
imul
jecxz
add
loop
int3
leave
push
gs
xor
mov
arpl
jns
out
inc
fs
lods
std
nop
mov
dec
pop
fsubp
fildl
inc
negl
xchg
insb
and
testb
scas
jns
fsubl
mov
pusha
es
imul
mov
subb
pop
mov
add
in
fisubl
sahf
xor
xlat
inc
inc
call
lods
bound
addl
jl
int3
mov
dec
pop
sbb
pop
adc
mov
dec
jno
dec
data16
mov
movsl
sub
ss
push
cltd
xchg
enter
fwait
push
cmc
adc
jl
rorl
rcrb
test
xchg
cmp
mov
insb
insl
test
cmp
pop
insl
dec
fstl
das
sbb
dec
push
push
mov
sarb
inc
sbb
ret
clc
mov
xchg
pusha
pushf
stc
cmpb
test
jecxz
jg
dec
ljmp
xchg
incl
mov
stos
mov
add
out
cmpsl
sbb
imul
cmpsl
andb
sbbb
mov
test
push
sub
cmpsb
mov
fsts
lea
pop
dec
jns
cmp
fldl
pop
jmp
mov
mov
cmp
mov
out
pop
inc
pop
xchg
sbb
daa
rcl
and
mov
add
xchg
ja
mov
leave
jb
std
lea
pop
fwait
shrb
mov
xchg
fs
fistl
fiadds
and
adc
mov
fnstsw
test
push
mov
sub
inc
divl
ss
out
jno
aaa
into
insb
push
lea
push
in
cmp
fidivrs
out
mov
xchg
mov
mov
pop
mov
pop
addb
outsb
dec
repz
push
push
dec
adc
jns
pop
dec
into
stos
fld
je
rolb
sbb
arpl
cwtl
sbb
cwtl
cmpl
pop
push
push
test
xor
mov
into
arpl
and
lcall
cmpsb
sub
xlat
dec
cmp
imul
lock
sub
lret
cbtw
call
jbe
sub
nop
das
idivl
mov
add
pop
cmp
sbb
adc
sbb
sbb
or
nop
sub
ss
shll
sti
ja
fld1
mov
adc
sahf
clc
lret
icebp
fidivl
push
add
mov
xchg
inc
insb
push
mov
aas
dec
fnstenv
popa
cs
fadds
inc
cld
stc
repz
pop
pop
or
pop
mov
loop
ljmp
inc
pop
lret
xor
pop
out
rolb
pshufw
pop
sub
mov
jb
pop
sub
push
mov
push
pop
jmp
flds
jno
insb
lret
cmp
cs
jmp
lret
jne
and
scas
inc
jae
pushf
xor
xchg
insb
cmc
mov
outsl
das
popf
pop
jg
xchg
sbb
mov
add
push
pop
mov
mov
jle
mov
mov
or
sbb
sub
adc
arpl
cli
clc
push
add
push
and
mov
ljmp
les
aam
sub
mov
sbb
shrb
fldt
enter
aas
out
nop
ss
jle
in
js
in
cmp
sub
ret
fstpl
push
xor
sbb
adc
bound
nop
pop
xor
gs
jns
mov
je
xor
pop
mov
cwtl
lods
add
sbb
out
inc
pop
xchg
repz
rep
vzeroupper
mov
ljmp
mov
mov
xchg
xchg
movsb
fsubrp
pop
xor
andl
jo
inc
sbb
push
in
mov
jbe
mov
cmp
jg
shlb
jbe
mov
lods
inc
pop
ds
pop
push
lret
push
fnsave
xchg
xchg
inc
sub
repz
loope
lcall
push
lret
daa
cmp
xor
ret
repz
and
add
cmpsb
outsl
inc
jnp
pop
ja
pusha
xor
pop
or
mov
cmpsb
clc
lret
movb
popa
push
pushf
cmpsb
std
and
xchg
sahf
xor
aaa
dec
mov
inc
push
cwtl
out
test
pop
in
inc
or
or
out
xor
subb
icebp
sbb
ret
insb
jns
xor
or
mov
mov
fucom
adc
fldcw
push
ljmp
cmp
pop
xor
xchg
adc
jge
xchg
mov
or
jae
xor
lcall
mov
mulb
jle
jmp
push
mov
popa
xor
popf
fs
dec
sbb
xor
inc
icebp
jmp
jl
enter
and
notb
fdivs
sbb
testl
scas
dec
es
repz
sub
push
sub
imul
and
inc
dec
dec
jmp
adc
xlat
mov
or
scas
mov
and
iret
gs
fdivs
push
mov
mov
xchg
mov
je
jnp
lock
std
jecxz
adc
ss
mov
sub
inc
outsb
subb
fcmovnbe
lods
fmuls
nop
loop
std
shl
fdivl
mov
fbld
mov
sub
dec
aad
mov
dec
pop
cmc
push
dec
dec
cmp
jb
xchg
mov
mov
jmp
ds
xorl
nop
mov
jge
enter
inc
xchg
mov
popf
fucomp
mov
in
mov
adc
ror
and
ret
jmp
filds
dec
xchg
add
or
cmp
cwtl
or
gs
cltd
cmc
mov
aas
mov
repnz
sbb
jb
rcrl
add
xchg
daa
mov
fidivl
scas
scas
dec
jns
clc
or
stos
int
pop
push
leave
push
cmovno
or
xor
sbb
pop
mov
cs
popa
outsl
jae
rorl
dec
fists
mov
adc
jg
pop
in
aas
ret
lahf
dec
dec
xchg
into
xchg
cs
push
jmp
jmp
popa
andl
mov
xor
lods
mov
bound
mov
addr16
imul
mov
adc
sub
inc
lods
frstor
leave
mov
je
jae
loope
jg
dec
mov
inc
sbb
xchg
addr16
cli
lods
mov
adc
ror
mov
jge
das
imul
pop
add
out
pop
cmp
iret
outsb
mov
stos
push
lock
int3
push
pop
orl
into
fdivl
cmp
das
adcl
dec
cmpsl
int3
adc
addb
or
jl
outsb
sbb
pop
fistpll
mov
int3
ja
fcmovbe
push
fcoml
inc
pslld
dec
ds
dec
loopne
sub
jmp
mov
mov
je
add
notl
xor
cmp
cltd
arpl
push
sbb
pop
xlat
pop
aam
mov
insb
loop
or
lret
or
ffreep
pushl
dec
mov
pop
inc
decb
loopne
cwtl
xchg
jne
repz
add
popf
ljmp
mov
push
out
ret
or
pop
xchg
sub
pop
push
cltd
icebp
insb
call
in
rorb
or
jns
fs
xchg
dec
cld
stos
mov
mov
ds
loop
xchg
in
aaa
lcall
add
or
jns
push
sbb
cltd
mov
fsubl
bound
xchg
add
stc
aam
sub
fsubrs
xchg
and
inc
mov
mov
jns
icebp
pop
aad
nop
adc
pop
mov
movsb
jae
or
fbstp
xor
cmpl
data16
test
subl
loopne
dec
mov
jo
test
bnd
std
lods
adc
sbb
pop
in
stos
xchg
and
dec
cmc
and
repnz
inc
cmp
mov
mov
idivl
repnz
or
cmp
daa
push
fbld
jecxz
xor
jne
notb
sbb
mov
and
mov
gs
mov
in
inc
sbb
pop
push
movsb
movsb
data16
xor
popa
push
popfw
popa
bound
cmpb
jge
xchg
addr16
push
jns
dec
es
dec
ret
add
pop
cmp
or
dec
pop
and
out
push
loope
pop
test
out
fs
sahf
leave
clc
xchg
dec
arpl
cli
les
shll
loopne
repnz
mov
cwtl
xor
lret
or
arpl
jne
fsubr
cmp
cmc
mov
xor
or
roll
sbb
inc
and
scas
pop
push
arpl
add
lret
pop
pop
inc
lret
jne
sub
fs
push
jno
sub
pusha
into
pusha
xor
lods
inc
dec
lret
jns
push
jmp
mov
jg
cltd
push
mov
jbe
mov
pusha
cmpb
std
sbb
loopne
ss
out
jge
xchg
push
rorl
fs
jmp
mov
mov
xor
cmp
testl
mov
mov
pop
xchg
jp
popf
les
mulb
mov
out
cmpsl
das
testb
sub
mov
pop
inc
scas
dec
xchg
fs
mov
mov
mov
cmpsb
sbb
out
xor
mov
movsl
into
and
jns
jne
mov
add
mov
or
ret
or
mov
push
push
mov
je
jge
xlat
and
lock
idivl
push
mov
jl
cli
aaa
push
aaa
nop
inc
cmpsl
loope
mov
sub
fistpll
push
adc
pop
xor
orl
stos
xor
fs
adc
add
jp
sbb
in
push
jae
ja
cld
stos
add
bound
sbb
push
add
push
xor
sbb
and
movsl
icebp
cli
std
jbe
rcrl
pop
or
clc
inc
out
sub
test
add
fbld
jb
xor
popa
mov
inc
pop
rcl
add
jae
in
pop
adc
cmc
dec
dec
cmp
inc
add
xor
mov
mov
mov
mov
mov
lcall
xchg
icebp
dec
dec
cmp
imul
arpl
jmp
inc
push
shll
jl
aaa
shrb
push
movsl
fcompl
insl
sub
test
and
loop
mov
cld
repz
xlat
lret
inc
add
aam
cmp
orb
sub
popf
repnz
mov
nop
stos
adc
cmc
pslld
loop
sub
mov
pop
test
dec
mov
lret
out
or
and
pusha
mov
sbb
es
roll
dec
mov
and
cmp
jle
hlt
rcr
scas
mov
jp
pop
int3
mov
int
add
xchg
inc
mov
xor
adc
je
arpl
jno
cwtl
mov
test
sbb
pop
mov
push
push
mov
subb
insl
or
adc
inc
pop
andl
or
addr16
jns
subb
arpl
js
aad
fldt
cld
or
inc
xchg
enter
pop
lret
mov
cmpsl
dec
jg
jnp
mov
push
and
sub
je
sbb
xchg
inc
push
testl
pop
xlat
cmpsl
das
jbe
push
mov
mov
testb
fisubs
add
cwtl
clc
loopne
adc
call
in
add
aaa
pop
push
aaa
push
pop
push
fcompl
cmp
stc
notb
test
push
jb
fldln2
mov
lret
mov
pop
push
cmpsl
call
cmp
sbb
xor
es
mov
inc
jmp
ds
xchg
in
das
sbb
mov
push
js
add
pop
dec
add
adc
sbb
pop
xor
popa
push
sti
je
xor
test
scas
out
add
stc
xor
pop
les
pushf
push
or
cwtl
xchg
pop
ffreep
xor
or
cmp
popf
cmp
jle
mov
test
adc
fmul
ret
jecxz
mov
add
icebp
loope
push
mov
fsubr
xchg
mov
lea
ret
mov
add
imul
int
lds
jae
scas
xchg
ljmp
push
xchg
add
xor
jno
push
mov
stos
sub
gs
jle
in
das
jl
pusha
push
jne
push
popa
xchg
pop
aam
fwait
add
jle
mov
adc
arpl
jb
cmp
xchg
je
sbb
jecxz
in
pushf
imul
movsl
into
ret
dec
jl
gs
mov
out
out
xchg
lahf
jl
mov
add
inc
insl
gs
mov
adc
lods
icebp
add
xor
xor
sahf
xchg
adc
int3
scas
jno
scas
and
jo
les
pushf
in
xchg
mov
das
and
pop
xor
mov
push
dec
jge
scas
cs
cld
add
out
push
mov
repz
dec
test
lds
int3
cmp
jl
xchg
mov
pop
cmp
mov
add
out
lods
xor
aad
rcr
xor
push
inc
jecxz
dec
lods
outsl
inc
sub
popf
lods
lds
je
imul
cmp
xchg
stc
mov
jl
lods
pop
insl
pop
add
mov
push
pop
test
inc
jns
cs
mov
xchg
push
int3
jns
xor
jecxz
add
rolb
inc
mov
jne
dec
mov
jl
popl
xchg
xchg
mov
mov
xchg
push
subb
jmp
add
push
cmp
push
movsl
out
or
std
mov
mov
scas
stos
jp
popa
jge
sbb
jno
lret
hlt
mov
loop
push
adc
jns
in
or
lock
fdivrl
and
out
outsl
aaa
clc
push
or
pop
mov
xor
rcl
out
pop
ljmp
ss
rcl
jge
adc
rcrl
mov
add
imul
and
push
icebp
add
loope
out
scas
out
popa
aas
adc
mov
aaa
push
adcb
addb
lds
pop
jl
cmpsb
data16
das
repz
and
insb
inc
in
in
cmp
cmp
fnstcw
inc
fldt
mov
xor
sahf
mov
pop
mov
cmp
xlat
xchg
rorl
mov
testb
fistl
mov
lahf
arpl
inc
inc
xorl
mov
insl
test
out
and
lods
out
inc
push
shl
repnz
lods
adc
dec
cld
lock
and
jle
into
gs
push
iret
mov
out
mov
sub
mov
mov
push
js
push
inc
jp
xchg
aas
fmul
aaa
pop
aad
push
pop
cmpl
ljmp
lock
orb
fucomip
sahf
sqrtps
cwtl
cwtl
adc
xor
adc
adc
inc
pop
fimuls
iret
push
cmp
jecxz
mov
dec
mov
dec
xchg
ds
andb
sbb
push
jge
int
shll
int3
pop
mov
orl
mov
or
movsb
addl
imul
cs
and
shrl
xchg
mov
loop
or
lods
sub
js
cmp
in
inc
fldln2
jmp
test
xor
hlt
aad
ret
dec
in
mov
mov
lds
adc
mov
pusha
fidivrs
add
cli
xlat
insb
and
mov
or
lock
popf
jg
adc
xlat
inc
jno
xchg
mov
sub
lcall
jne
out
shlb
or
test
dec
add
xchg
sbb
ds
clc
push
sub
popa
test
cmp
pop
or
filds
adc
out
iret
pusha
and
adc
inc
out
mov
std
mov
or
pop
or
mov
and
push
xchg
call
arpl
adc
adc
in
aas
fdivl
mov
xchg
mov
in
cmpb
adc
push
jno
fmul
pop
inc
sahf
pop
lret
iret
sub
inc
mov
jg
and
jns
fxch
addr16
stos
inc
rorb
dec
dec
aaa
addl
mov
pop
mov
jo
cmp
inc
cmpsl
pop
test
sbb
in
sub
sub
cld
cmp
nop
or
jge
jno
ret
mov
in
xor
xchg
jmp
leave
orb
inc
jge
stc
fsubrs
pop
push
xor
bound
cltd
mov
and
movsl
or
jge
sub
iret
xchg
adc
andl
jae
rcrb
or
jmp
loope
mov
clc
sbb
and
adc
pop
dec
call
or
arpl
lds
in
xacquire
and
xchg
test
adc
ret
ret
mov
stos
sbb
mov
mov
sub
decb
cs
arpl
clc
adc
or
sbb
dec
mov
or
pop
aas
xor
test
adc
pop
outsb
je
stc
xlat
sub
les
lods
push
jge
lea
mov
lcall
jae
ljmp
lret
cmp
adc
repz
mov
repz
inc
leave
add
dec
cmp
cmp
adcb
insl
scas
in
test
out
mov
mov
mov
cmp
in
jb
xor
mov
push
xchg
test
mov
push
push
dec
jo
js
in
test
mov
call
xlat
repz
jp
sbb
dec
cmp
mov
cmp
dec
leave
fidivrl
add
scas
adc
repnz
pop
xor
das
test
jne
sbb
hlt
mov
push
je
movsl
xchg
sub
cmc
imul
mov
imul
gs
mov
fdivl
jo
or
out
popa
mov
in
mov
adc
cld
cmp
sub
mov
std
out
test
cmp
mov
or
pop
sbb
or
mov
les
in
jno
mov
xchg
sub
xlat
inc
out
mov
enter
jnp
push
dec
es
cmp
and
orb
outsb
jae
mov
movsl
push
or
inc
mov
insb
sar
std
lods
push
iret
push
lcall
adc
xor
push
jmp
mov
sub
loopne
mov
sarb
imul
nop
lods
pushf
mov
cmp
aas
stc
add
dec
xchg
xchg
inc
add
push
fwait
sti
cltd
and
test
sti
and
js
cltd
addb
movsl
add
push
dec
cwtl
decb
xor
pop
rorl
xchg
push
push
jecxz
leave
das
cmp
stc
cli
stc
adc
daa
and
fs
cmp
loopne
cld
xchg
and
fs
in
mov
dec
xor
jmp
stos
test
xor
adc
fstpl
dec
lock
fbstp
dec
imul
daa
ljmp
push
in
xchg
sub
aad
loopne
or
pop
mov
pop
fidivl
jg
jge
bound
arpl
and
in
push
das
xchg
jns
and
fidivs
cs
inc
insb
xor
cltd
fmull
adc
pop
fdivrs
cltd
adc
inc
or
inc
push
aad
rcll
mov
adc
roll
int3
lcall
arpl
push
mov
insl
jae
or
cmpsl
xchg
hlt
mov
pop
cltd
xor
dec
dec
push
inc
fucomp
pop
les
and
xchg
fidivl
push
cltd
jbe
sahf
xor
mov
cwtl
negb
jae
and
xchg
ds
and
loope
sbb
das
mov
scas
nop
xchg
mov
in
fucomp
inc
fcoms
jg
jb
mov
xor
scas
cmp
ss
dec
arpl
iret
sahf
inc
out
xor
cs
mov
cmp
push
xor
leave
cs
adc
xor
fs
mov
int
mov
int3
sbb
mov
cwtl
dec
lcall
inc
adc
push
cwtl
push
mov
mov
test
enter
mov
ja
xchg
ja
push
fs
test
lds
jns
cmp
pop
pop
out
cmp
aam
push
sarb
cld
and
in
notl
mov
cwtl
xor
addr16
lea
xchg
imul
shll
xchg
dec
jbe
ret
in
push
pop
and
lahf
es
loopne
xchg
xchg
cmp
mov
sub
sahf
mov
icebp
mov
add
fiaddl
cmp
xchg
xor
mov
mov
les
cld
lock
jl
mov
addr16
outsl
add
lcall
jle
fldenv
cmp
sbbl
sub
xor
jae
lock
push
push
addb
nop
mov
pusha
imull
sbb
cld
push
and
lods
or
sbb
pop
dec
jo
orb
jg
stos
rcr
xchg
sub
sbb
loopne
mov
and
xorl
popa
mov
pop
jmp
add
xor
push
and
lods
xchg
fnstenv
mov
repz
dec
mov
jae
out
sub
popf
mov
cmp
pop
hlt
push
adc
lahf
stos
das
pop
leave
mov
mull
addr16
jp
iret
inc
xchg
stos
adc
cmpsb
and
add
mov
pop
mov
jb
mov
test
lock
xor
incb
sub
inc
dec
loopne
pop
stos
aas
and
repnz
dec
rorl
sub
jp
daa
das
push
push
jno
pop
lahf
rclb
cmp
shll
pop
mov
or
scas
and
stos
or
cs
gs
mov
add
adc
out
lods
and
or
cs
add
pop
push
popf
gs
out
xlat
xor
inc
push
aam
xchg
inc
hlt
jp
out
movsb
ret
fucomi
pop
xor
popa
in
sub
bound
hlt
xchg
mov
pop
inc
lods
cmpsl
adc
or
lret
in
mov
mov
push
mov
mov
inc
cs
inc
push
out
outsl
xchg
int3
aas
pop
adc
out
xor
lods
stos
pop
rcrl
inc
ffree
sbb
dec
aad
jmp
and
fcomp
mov
mov
mov
loopne
mov
mov
testl
xchg
mul
movsl
sub
ret
repnz
mov
sahf
cmp
iret
and
sub
int3
test
mov
or
cmp
in
lret
sbb
pop
pusha
imul
iret
cmp
movsl
cmp
jbe
sub
aaa
ret
pop
imul
sub
xor
gs
add
sbb
cmpsb
popa
sbb
lret
dec
subb
popl
pop
cmp
fcmovnu
faddl
mov
repnz
mov
push
pop
imul
push
fs
fidivrs
mov
out
add
push
mov
mov
cmp
into
jbe
or
int3
pop
loop
adcb
icebp
xchg
int
lret
dec
test
mov
lcall
in
inc
fidivl
or
clc
or
ret
movsl
jl
in
dec
sbb
push
outsb
imul
adc
sub
xlat
jg
loopne
mov
es
add
pop
test
push
sbb
mov
lock
adc
sarl
or
sbbb
mov
or
pop
add
push
inc
popf
xor
nop
xchg
dec
ret
jle
cmp
mov
fldenv
adc
psubusw
mov
push
lret
xor
cmp
push
insb
sub
jmp
dec
repz
pop
fwait
and
sub
sbb
hlt
jge
pop
cmp
call
and
int
inc
or
loope
sub
dec
fisubs
icebp
sbb
out
out
inc
js
mov
notb
ss
popf
vpaddb
push
lods
sbb
lcall
dec
in
popf
daa
int3
mov
cmp
add
pop
fwait
jmp
sub
inc
push
mov
les
and
cmpsb
cmp
call
add
mov
mov
add
aad
inc
fnstsw
fldenv
in
jmp
fcmove
jo
imul
xor
les
xor
imul
mov
test
sbb
and
insb
push
pop
sbb
pop
mov
xlat
clc
enter
jno
push
aaa
loop
test
dec
sti
xchg
jle
lret
push
mov
jb
mov
scas
bound
push
and
inc
sub
xlat
xor
pop
loope
repz
cmpsl
fnsave
or
cld
push
sbb
test
cmp
rcll
imul
push
jl
es
sahf
push
inc
fists
std
inc
inc
clc
daa
and
or
pop
inc
jmp
cmp
out
sbb
mov
out
push
inc
fs
adc
sbb
sub
xchg
adc
inc
aam
add
add
xchg
das
mov
pop
and
jns
xchg
decl
sarl
add
mov
sub
pop
lret
sbb
loop
ljmp
mov
imul
es
inc
call
sbb
dec
cmp
stc
push
sub
jmp
push
call
push
and
dec
inc
dec
lahf
neg
xchg
sub
jne
add
fnstenv
adc
dec
jae
test
pushf
sbb
mov
cmp
inc
adc
xchg
decl
add
push
shl
jmp
call
mov
lcall
leave
inc
push
jle
xor
test
and
lock
sbb
add
push
stos
mov
pop
adc
fwait
push
push
and
push
std
lret
ss
pop
popa
cmp
mov
inc
lret
inc
inc
fwait
jae
dec
mov
inc
cvtps2pd
cmp
mov
repnz
push
test
xchg
in
popa
orb
jecxz
mov
or
add
out
je
inc
scas
pushf
sub
stc
dec
jnp
mov
in
pushf
xor
aas
adc
jl
jae
dec
and
fistpll
dec
shl
jg
les
pushf
inc
pop
xchg
lods
jbe
push
mov
cmp
or
inc
jmp
lock
jecxz
enter
mov
fdivl
mov
stos
movsl
icebp
in
sbb
and
xor
cmc
mov
push
add
adc
rolb
jmp
jge
mov
jge
lahf
je
mov
js
rcrb
enter
and
sub
mov
mov
dec
loope
inc
push
mov
push
adc
pop
sti
push
xor
or
arpl
xchg
xor
push
out
mov
test
into
shr
das
cld
aad
adc
stc
ljmp
sbb
jae
orl
bts
pop
mov
insb
btc
pop
cmp
push
add
xor
daa
lcall
stc
sub
push
adc
gs
inc
mov
inc
adc
inc
mov
xor
lods
mov
ds
js
loope
scas
adcb
or
mov
outsb
jne
sbb
cmp
mov
cmc
fs
faddp
ss
dec
and
jl
lods
lret
dec
iret
mov
xchg
pop
cltd
mov
xchg
inc
add
dec
dec
pop
pop
xor
int3
mov
mov
into
cmp
cwtl
in
in
dec
inc
clc
and
cmp
jae
add
stos
fnstenv
xor
ret
lahf
pop
mov
gs
shrl
mov
f2xm1
cmp
or
push
movsl
push
pushf
xor
cli
sub
push
pop
xchg
sbb
adc
add
mov
mov
jg
xor
ds
es
subl
dec
sbb
dec
xchg
or
jns
add
ss
jp
xchg
lods
push
gs
test
stos
jmp
pop
jb
pop
pushf
das
insl
sbb
jecxz
lds
push
lods
dec
nop
adc
sbb
jbe
cmp
sub
std
cltd
mov
push
push
push
popa
imul
je
cmp
add
fimull
xor
sub
and
test
jl
cmp
inc
shlb
addr16
pop
xor
mov
cmpsl
and
push
and
movsb
or
lret
fadd
gs
jle
push
cmpsl
addr16
mov
stc
mov
mov
and
lea
mov
jle
pop
cwtl
pop
mov
push
cltd
xor
es
push
test
mov
pop
xchg
aam
sub
add
cmc
cmp
add
jle
mov
lds
xchg
pop
mov
test
cltd
aaa
jecxz
jmp
fmul
sti
xor
jp
sbbl
adcb
repnz
cmc
add
or
mov
jnp
adc
ja
mov
fildl
in
jg
mov
pop
loop
jno
adc
arpl
sub
fnstenv
test
mov
aam
stos
sbb
mov
pusha
shl
push
jecxz
loop
in
adc
clc
leave
sub
cli
sbb
shl
push
out
test
in
pusha
pop
xorb
lret
sbb
stc
add
pop
xor
dec
add
divl
outsb
inc
jae
sub
pop
adc
mov
adcb
mov
lds
pop
jle
mov
insb
adc
cli
pushf
xor
or
and
out
gs
mov
mov
out
das
sar
iret
mov
add
inc
test
xchg
stc
fnsave
ret
inc
dec
lds
mov
inc
push
push
popa
add
xor
repnz
subl
xchg
lret
mov
fs
push
int
xor
cli
testl
mov
xchg
pop
sub
negb
sbbb
in
add
jae
mov
pop
loop
test
test
xchg
insl
sub
cmp
ds
sub
je
add
push
push
outsl
jb
cmp
inc
and
push
pop
das
out
stc
inc
sahf
stos
xchg
in
cmp
mov
pop
cmpsb
xor
inc
loopne
dec
jecxz
sub
mov
mov
add
mov
pop
mov
mov
and
push
adc
pop
out
sbb
ficomps
xor
mov
mov
popa
in
test
pop
scas
inc
mov
hlt
add
pop
pop
ret
jnp
mov
add
and
push
jb
and
leave
adc
cmp
push
mov
int
jb
xor
fs
adc
push
out
test
and
adcb
gs
push
and
xchg
and
cmpsl
pop
xchg
dec
mov
sub
and
push
call
aam
mov
sbb
imul
inc
stos
xor
adc
insl
mov
into
fcoml
xchg
loopne
push
mov
roll
xlat
sbb
into
cmp
cmc
mul
js
pop
adc
mov
xchg
push
ret
in
xchg
outsl
add
test
insl
sub
rcl
jl
add
jl
dec
movsl
ja
orl
or
cmp
mov
xor
icebp
add
xor
xchg
cs
adc
mov
mov
dec
xlat
shll
popa
add
sbb
aaa
mov
inc
mov
dec
inc
xor
je
popa
or
mov
fdiv
pop
mov
pop
adc
cli
xchg
lock
jno
sbb
sti
push
jns
jnp
or
fnstcw
insl
mov
mov
mov
or
mov
jo
bound
xchg
jo
jmp
sbb
aas
jnp
idivb
pop
cmp
es
movsb
jecxz
cmp
adc
or
ds
pop
add
test
stos
lods
ret
mov
xchg
loop
jecxz
fsubrl
loop
filds
inc
pop
push
stos
jns
cmpl
lea
xor
lea
in
test
insl
sbb
cs
pop
test
push
movsl
cmp
mov
pushf
sbb
sbb
mov
cld
shlb
lret
dec
xlat
lds
jg
xor
mov
xorl
xchg
push
xchg
aad
es
push
xorl
lret
add
out
push
popf
out
inc
adc
xchg
mov
sti
push
mov
hlt
mov
addr16
scas
sbb
adc
dec
sub
mov
mov
push
xor
and
ds
jns
jge
jns
adc
ds
bound
lea
or
test
sub
push
adc
idivb
pop
lahf
add
dec
sti
jle
aad
and
dec
arpl
stos
lahf
inc
jecxz
lock
test
jle
fwait
sbb
aaa
add
test
push
or
or
je
les
mov
and
fldenv
push
mov
aam
test
dec
push
popa
iret
enter
pop
scas
pop
cmp
sub
repnz
lods
mov
shl
ds
or
sub
jns
dec
call
cwtl
mov
flds
add
leave
sbb
aaa
jbe
out
rorl
sbbb
pop
movsl
dec
mov
mov
aam
lahf
shrl
and
in
popl
in
mov
lcall
jns
enter
lahf
callw
cmp
jb
iret
je
mov
sub
mov
mov
hlt
in
lods
add
fimuls
jmp
fldcw
xchg
jp
lret
sti
repz
ds
cmp
popf
sub
scas
test
xchg
sbb
push
or
scas
and
push
lcall
jbe
imul
adc
lret
and
adc
lcall
mov
cli
cmp
xor
test
insb
inc
das
sahf
pusha
fwait
in
xchg
icebp
xor
xorl
das
jp
mov
dec
popf
insl
test
mov
ds
mov
jmp
cmp
in
adc
movsb
neg
and
add
popf
shrl
jmp
stos
out
and
stc
jno
mov
arpl
movsl
in
push
mov
xor
loope
mov
sub
cmpsb
inc
cmp
inc
in
sahf
neg
and
mov
pusha
int3
or
sbb
push
mov
push
inc
cmp
xor
das
pop
movsl
scas
sbb
xor
insb
lods
lret
pop
or
sub
dec
mov
aad
lods
int
or
xlat
jno
adc
mov
lcall
sbb
in
ret
clc
popf
mov
or
aaa
xor
idivb
cld
xchg
filds
mov
adc
loop
clc
sub
add
iret
xor
mov
sti
aad
lods
clc
sub
push
fwait
xchg
xor
sahf
test
or
push
inc
aam
loopne
mov
xlat
shrl
ret
xchg
insl
bound
hlt
mov
es
push
inc
or
adcl
in
mov
into
int
rcrb
inc
sub
and
or
sbb
fstpt
mov
pusha
cs
push
sti
cwtl
into
out
std
insb
add
daa
inc
call
mov
into
pop
cmpsl
decb
push
jge
and
inc
fwait
inc
incl
jmp
pop
dec
pop
psadbw
movsl
clc
ds
jnp
add
sub
insb
outsb
inc
pop
ljmp
mov
cmpsl
int
btc
pop
out
mov
xor
loop
out
add
sti
inc
testb
sbb
jmp
mov
sbb
roll
scas
lahf
jnp
mov
call
into
out
loopne
fdivrl
loopne
stos
push
jbe
mov
arpl
push
sub
sub
inc
and
in
ret
inc
jl
fbstp
mov
and
xor
fldcw
and
push
mov
cmp
mov
sbb
fdivs
outsb
xchg
dec
int3
cmc
in
mov
xchg
sub
cltd
popa
adc
ljmp
pop
ds
jo
orb
add
sahf
jbe
shlb
fs
mov
ljmp
cmpsb
mov
jecxz
mov
mov
je
rcr
sbb
imul
sbb
push
std
les
xor
jp
jne
cmpb
das
sti
xchg
test
test
jnp
aas
js
mov
es
push
daa
hlt
jg
das
pop
fisubl
sbb
push
stos
call
ficoml
gs
or
push
das
xchg
push
popa
jl
subb
xchg
add
fcmovu
push
dec
ret
lret
pop
daa
call
loope
les
enter
test
xor
fs
push
or
mov
cmpsb
adc
lods
push
push
mov
stc
jbe
inc
into
mov
mov
or
or
bound
mov
mov
test
mov
rol
dec
cmc
aaa
int
in
mov
cwtl
cs
fstps
or
mov
pusha
add
pop
xor
or
in
shll
xchg
stos
outsl
mov
push
pop
sub
pop
popa
dec
in
clc
inc
xchg
pop
cmpsb
pop
stos
inc
ret
sub
test
lock
outsb
sub
mov
inc
imul
icebp
in
pop
cmc
push
adc
push
jge
xchg
popf
adc
lods
out
adc
ds
jo
loop
or
fwait
maxps
mov
out
mull
xchg
jmp
push
jb
push
cmc
mov
popf
mov
lock
inc
pop
sub
xorl
cwtl
xchg
push
nop
clc
mov
xchg
sub
dec
adc
sbb
outsb
out
pop
data16
repz
dec
mov
lds
adc
out
sbb
es
arpl
mov
xchg
adc
inc
cltd
mov
pop
and
mov
sub
jno
fisubl
add
lods
mov
or
xchg
jg
out
je
or
xchg
jbe
inc
cltd
subl
sub
lock
pushf
pop
xchg
ret
fwait
test
pop
and
mov
ret
ss
push
push
adc
mov
mull
out
jmp
stos
mov
insb
add
cwtl
dec
mov
cmpsl
mov
sub
dec
divb
dec
std
push
in
push
adc
cmp
mov
lret
jns
aas
xor
daa
fs
loopne
xor
xchg
pop
jge
sub
sbb
lahf
xchg
cwtl
sbbl
cs
push
jno
ss
xchg
pop
mov
subl
dec
or
mov
rclb
addr16
test
or
jp
pusha
jmp
jno
popf
popa
mov
dec
cmc
xchg
and
adc
jmp
add
stos
push
icebp
push
cmp
adc
pusha
sub
test
mov
test
iret
jns
cmp
test
dec
movsl
pushf
jecxz
int
in
cmovs
ljmp
mov
lock
push
inc
inc
dec
icebp
lock
loop
test
mov
ds
jl
mov
pop
adc
cld
sub
mov
hlt
cmp
sbb
pop
jnp
dec
and
popf
movsb
decb
ficomps
mov
xor
fwait
and
mov
loope
into
pop
ss
mov
inc
call
push
incb
mov
sbb
push
ljmp
lock
lods
pop
push
aad
cmp
cmp
test
and
cwtl
insb
lahf
mov
mov
pop
movsb
les
fs
pop
rcl
mov
xchg
jno
fcoms
arpl
adc
mov
test
aas
mov
mov
jns
jmp
cli
es
mov
xchg
dec
daa
add
pop
movsb
pop
psrad
add
loopne
cmp
pop
xor
imul
sbb
cmc
cli
nop
push
cmpsl
in
lahf
adc
sbb
jae
xor
adc
aaa
sbb
lods
adc
or
xchg
jns
push
cs
or
sbb
pop
call
xchg
sub
xchg
sub
mov
inc
adc
adc
inc
dec
mov
xchg
mov
aaa
movsl
sub
jmp
jge
into
mov
mov
mov
sbb
sbb
cmp
movsb
cmp
test
cli
jp
in
test
popf
jae
pop
push
or
decb
fimull
jo
pusha
invlpg
and
aaa
adc
xchg
sqrtps
lods
fldt
addr16
mov
mov
out
lods
out
test
out
sbb
int
cmp
js
pop
adc
mov
pop
and
mov
dec
dec
pop
mov
jg
lahf
xchg
mov
cmp
lret
test
outsb
nop
test
xchg
jo
cmpl
cmp
cmp
cld
outsb
aaa
cwtl
sub
lcall
sub
xor
mov
pop
mov
xor
lods
sub
dec
call
or
mov
sbb
sub
out
pop
adc
push
test
rcrl
ret
add
cmp
inc
dec
lods
ss
push
out
fs
sub
in
mov
dec
mov
data16
mov
lods
mov
adc
sub
pop
xor
inc
subl
fwait
push
shrb
outsb
insb
data16
cmp
mov
nop
jo
popf
sub
and
inc
mov
xchg
mov
mov
test
jae
and
mov
aas
mov
push
mov
mov
or
aam
pop
push
lret
add
jo
dec
hlt
xor
sbb
fdivl
andl
aam
test
addr16
mov
cwtl
jae
lret
xchg
pop
leave
mov
add
push
pop
xor
fsubrs
sbb
xor
cli
mov
in
adc
insb
add
outsl
stos
arpl
sarl
shll
ret
pop
addr16
jmp
cmp
icebp
dec
xor
pop
mov
pop
pop
pop
pop
mov
jns
scas
ret
stos
mov
xchg
inc
sbbb
shll
lods
repnz
mov
push
add
inc
dec
aad
jnp
adc
add
cmpb
xchg
stos
sub
mov
adc
sbb
mov
xchg
movsb
inc
add
je
mov
jne
jp
enter
cmp
dec
and
mov
sti
cld
add
cmp
jecxz
fnstcw
lock
jmp
cpuid
hlt
mov
pop
cltd
push
xchg
sti
pop
push
es
xchg
pushf
aam
sbb
inc
dec
popf
outsb
sbb
push
dec
movsb
js
xor
mov
lea
cltd
sub
insb
add
sub
mov
mov
out
xchg
fistps
sbbl
jmp
test
sub
jb
in
inc
push
in
push
jns
les
das
mov
push
in
push
aad
jge
jg
xlat
outsb
out
fdivrp
inc
cld
and
adc
fsts
dec
and
push
test
dec
clc
sbbl
repnz
adc
stos
pop
xchg
dec
mov
or
adc
and
sbb
push
xchg
xchg
repz
movsl
dec
testl
push
sub
inc
xor
jl
lock
push
pushf
push
adc
adc
xor
bound
dec
and
mov
inc
and
and
jp
into
cmpsl
js
inc
mov
stos
adc
in
cmpsl
cs
mov
lcall
dec
arpl
cmpl
or
pop
pop
adc
inc
xor
push
aaa
scas
lret
xor
pop
and
pop
sub
push
in
mov
les
push
jp
hlt
pop
sub
sbb
std
xor
sub
cld
pop
pop
sub
insb
sarl
sub
pushf
mov
or
cli
jae
sub
cwtl
xchg
dec
fs
int3
flds
and
fbld
pop
mov
fdiv
sbb
mov
ds
mov
stos
cmpl
and
jo
or
cmp
cmp
sarb
int3
inc
xlat
fs
xchg
sub
out
cmpsl
or
pop
xchg
cmp
repz
ja
clc
shr
adc
inc
push
inc
int3
xlat
loop
mov
fists
fwait
mov
bound
push
addr16
sbb
lret
pop
cmp
dec
fnstsw
jno
push
jb
in
imull
push
push
or
xchg
mov
scas
mov
push
in
inc
push
ss
lods
adc
xor
in
test
rclb
sahf
cltd
mov
mov
sbb
enter
daa
jnp
sub
sbbb
in
out
sbb
mov
xchg
xchg
outsl
int
test
mov
pop
lods
and
aaa
jp
mov
stc
pop
popa
test
scas
jne
xchg
jmp
sub
or
cmpb
scas
sub
dec
sub
sbb
jb
pop
xor
jnp
xor
xor
movsl
popa
adc
push
je
xlat
xor
test
and
inc
sbb
add
lret
jo
icebp
jecxz
loopne
repnz
js
or
leave
idivb
jno
mov
and
stos
fucomip
lods
lds
mov
stos
das
stos
push
pushl
cmp
jge
psrld
jmp
xchg
xor
adc
rclb
push
dec
ficoml
rorl
lods
inc
pusha
dec
jns
cli
in
mov
movsl
rorb
clc
dec
testl
jp
dec
data16
fsub
mov
stc
xchg
icebp
jb
loop
daa
xchg
js
loope
test
out
in
xor
data16
jb
jnp
xor
clc
sbb
negl
xchg
mov
pop
std
jno
loopne
test
cmpsl
jo
lea
sub
pop
addb
push
jo
cld
cmp
push
sbb
pusha
mov
xchg
pop
dec
mov
mov
dec
adc
cmp
mov
movsb
mov
or
cs
fmuls
ljmp
cmp
cmp
ljmp
mov
pop
inc
fbstp
fmul
lea
int3
jp
dec
fwait
push
xchg
and
xor
adc
cld
in
jp
mov
ljmp
outsb
out
test
mov
xor
adc
add
imul
jo
adcl
xor
xchg
sub
cld
fisubrs
mov
dec
sbb
pushf
xchg
and
jp
mov
mov
dec
lret
sub
push
sbb
leave
xor
test
dec
jnp
lock
sar
arpl
lods
sub
xchg
push
nop
xchg
mov
xor
cmp
out
add
aaa
bound
lahf
adc
in
pop
jp
je
and
sub
loop
out
mov
rcrl
dec
loope
xchg
movsl
jmp
sti
sub
mov
and
notl
dec
int3
cmp
inc
jmp
dec
mov
rcl
adc
mov
cs
hlt
leave
inc
stos
sub
mov
pop
je
and
stos
fimull
jl
dec
test
jl
clc
mov
clc
iret
mov
adc
mov
insb
xor
sub
or
stc
stos
lock
dec
mov
inc
and
push
xlat
adcb
ljmp
xchg
push
sbbb
pop
sub
push
cs
xlat
mov
shll
xchg
enter
jns
in
daa
test
cmc
pop
call
adc
sahf
and
xor
test
test
mov
push
dec
pop
test
inc
xor
enter
mov
and
mov
aaa
xlat
mov
and
es
push
dec
jp
mov
jbe
icebp
into
incl
dec
fstps
adc
push
pop
adc
jmp
aam
sub
pop
cld
in
pusha
or
push
jne
jno
outsb
jb
lock
sub
rcll
inc
int
jecxz
repz
jno
or
jo
or
sub
call
psadbw
pop
jecxz
add
filds
loopne
stc
jge
adc
cwtl
int3
jg
lods
dec
add
add
jmp
lret
cwtl
mov
cmp
out
xor
or
outsl
shr
xor
lds
ret
outsl
fldcw
dec
mov
insl
loopne
add
arpl
mov
notb
jle
lahf
sub
iret
adc
xor
lock
loop
fidivrl
dec
test
fwait
pop
xor
jmp
addl
cs
cmpsb
dec
push
xorb
shlb
sbb
pop
leave
inc
in
aam
push
pop
push
jp
mov
test
lods
aaa
rcll
je
mov
or
xor
or
cmc
dec
clc
mov
jge
jno
pop
outsb
stos
and
scas
mov
in
adc
jge
movsl
inc
xchg
fcoml
mov
mov
stos
imul
push
mov
lcall
fwait
sub
cmp
leave
add
cli
cmp
jecxz
xchg
cmp
rcll
mov
test
sbb
mov
in
lds
cli
movsl
in
add
lock
push
cmp
pop
xor
cmp
mov
enter
push
add
insl
cmpsb
inc
dec
or
sub
ret
inc
adc
fadds
stos
cmpb
mov
sbb
aad
mov
cmp
nop
pop
mov
cmp
mov
jecxz
test
js
adc
add
icebp
js
stos
cmp
inc
out
sti
push
imul
testb
mov
pop
cs
adc
push
push
mov
xchg
and
lock
out
sbb
aaa
loop
in
lock
mov
dec
js
out
cli
mov
shll
jl
mov
or
outsb
lret
mov
push
divb
xchg
jge
les
xor
adc
mov
cmpsb
stos
cld
lcall
push
push
fdivp
sub
call
flds
cmpl
notl
xchg
add
jp
ret
out
pusha
jno
je
mov
and
ja
das
test
add
insl
pop
mov
mov
mov
adc
shlb
lea
fwait
cmp
xchg
outsb
shrl
imul
int3
into
inc
jns
pop
adc
leave
pop
call
lahf
push
push
cmp
mov
dec
and
fisubrl
sbb
inc
lods
shlb
fistps
cmc
jl
or
data16
inc
ja
addb
mov
fiaddl
and
dec
pop
inc
jg
cld
jns
loop
and
xor
lcall
clc
xchg
cmp
pop
cmc
push
pusha
push
aas
into
lock
std
push
inc
jge
mov
cli
es
imul
inc
jne
push
xchg
mov
cmc
mov
xchg
push
dec
call
cmp
xchg
xor
inc
in
fstps
or
ror
jb
jb
pop
inc
in
sahf
pusha
fldl
cmp
add
pop
ja
sbb
push
adc
mov
cli
sbb
cmpsl
adc
jg
jno
jl
add
clc
lcall
adc
and
int3
xchg
mov
insb
pop
jns
lahf
imul
ds
pop
push
push
repnz
test
mov
aam
mov
mov
test
ret
movsl
mov
cltd
aam
mov
cmp
add
pop
push
lcall
cwtl
mov
les
or
xchg
cltd
test
aaa
jp
push
and
mov
lcall
in
ja
jnp
xchg
cmpsb
sub
pop
fbstp
lahf
jg
or
std
mov
xchg
daa
push
mov
das
ret
adc
mov
jmp
pavgw
sbb
lea
or
cmp
or
filds
adc
in
out
xchg
add
xchg
mov
push
cmp
jl
and
enter
mov
mov
mov
shrl
mov
mov
cmp
nop
sub
imul
pushf
les
lods
sbb
push
inc
stc
call
mov
fnstenv
cmpsl
insl
out
insl
test
rcrl
in
push
out
push
pop
divl
outsb
jne
lahf
add
push
sarb
bound
sub
sub
sub
inc
push
push
stos
cmpsl
aam
adc
call
and
pop
add
cmp
push
add
lock
gs
xchg
sub
cmpsl
sarb
pop
sub
cmpsb
idivl
xlat
jnp
mov
loop
mov
sub
cmc
pop
sarl
mov
test
orb
mov
pop
and
aam
jl
ja
fstps
jp
popa
ret
and
push
mov
les
dec
shlb
ljmp
xchg
push
or
and
push
insl
enter
mov
add
jge
nop
ret
incl
sub
ret
pop
mov
lods
adc
cmp
icebp
outsl
mov
pop
in
lahf
mov
sub
cmp
pop
adc
cmc
push
fmull
and
sbb
or
fcomp
lods
sbb
push
loopne
imul
or
push
cltd
push
les
rcrb
sub
daa
hlt
addr16
or
shll
dec
or
cmp
ljmp
mov
fwait
push
lods
imul
cs
pop
mov
fs
in
add
divb
or
daa
loope
icebp
lds
stc
jg
pop
jbe
mov
or
call
add
inc
cmpsl
push
inc
ret
push
jo
scas
mov
sbb
cmpsb
cmp
fwait
inc
pop
xor
inc
sub
outsb
ss
cwtl
mov
sub
cmp
add
test
mov
mov
push
push
movsl
data16
push
insl
in
in
gs
sbb
xor
cmp
and
data16
pushf
jno
mov
jae
daa
or
xchg
int
pop
idivb
movd
mov
insb
addb
push
and
loop
mov
xchg
adc
mov
call
push
inc
inc
int3
out
add
mov
or
fcmovbe
aaa
into
jnp
pop
xor
popf
push
mov
add
nop
por
incb
enter
dec
and
jp
xor
jle
insl
leave
xchg
add
push
or
mov
inc
dec
int3
dec
pop
outsb
in
fwait
sti
fwait
sti
xor
push
push
sahf
jno
pop
pushf
repnz
pop
mov
mov
ret
pop
mov
out
in
lret
or
test
andb
pop
push
inc
xchg
in
jl
gs
xchg
sbb
sbb
sub
adc
inc
push
xchg
mov
sar
dec
aaa
into
clc
repnz
dec
fcoms
adcb
lods
mov
push
mov
fwait
jge
mov
xchg
push
out
pop
adc
data16
mov
and
pop
aaa
pop
sub
in
add
imul
pusha
ret
mov
mov
push
or
mov
xchg
notb
andb
xchg
call
inc
jge
fs
lret
adc
xor
xchg
adc
cld
mov
push
stos
push
adc
adc
push
hlt
cmp
inc
pop
push
aas
mov
ljmp
jno
ficomps
testb
jl
stos
inc
pop
inc
and
shrl
daa
and
fmul
testl
xor
push
xor
popf
mov
loope
fistpl
or
xchg
rcrl
test
sarl
test
pop
ret
loopne
lea
add
sub
push
fists
bound
ja
xchg
push
sub
movsl
cld
or
or
push
call
rorb
mov
out
adc
and
outsl
push
add
stc
inc
bound
inc
jmp
mov
inc
gs
push
mov
mov
lods
cmpsl
ficoms
mov
scas
lds
aam
aad
pop
sbb
inc
adc
rcr
mov
scas
xor
push
out
in
mov
jne
leave
cmc
and
lret
sbb
xchg
and
call
push
and
xchg
fs
loop
nop
jmp
orl
mov
sub
pushf
test
pop
sar
rol
sub
cld
outsl
lds
xchg
pop
and
push
inc
movsb
sti
cmpsb
xor
mov
xor
adc
and
push
in
in
inc
outsb
push
cmc
xchg
mov
push
add
mov
mov
pop
shlb
leave
mov
dec
imul
arpl
jecxz
inc
inc
pop
xchg
or
dec
mov
and
icebp
xlat
aad
notl
mov
push
push
pop
jge
xor
and
dec
mov
lock
sbb
mov
jb
xor
nop
or
scas
inc
test
and
push
dec
xlat
iret
imul
test
mov
jmp
stos
fimull
lahf
imull
cwtl
add
jg
adc
fidivrs
push
out
sub
outsb
inc
das
ja
aaa
pop
jle
mov
in
daa
cmp
or
pushf
cmp
neg
stos
scas
cmc
in
sub
lret
ret
add
outsl
iret
xor
andb
push
clc
mov
mov
ja
in
rcrb
mov
fcoml
sbb
dec
loopne
imul
orb
lock
es
dec
insb
inc
cli
jne
sbb
mov
int3
mov
sbb
iret
nop
add
ja
xchg
lret
lcall
xor
or
pop
std
inc
out
data16
inc
negl
cmpl
mov
arpl
repnz
and
and
sub
and
cmp
inc
cmpsb
jns
cmp
push
cmp
in
in
mov
rclb
test
push
outsl
and
or
xchg
jle
insl
fxch
mov
sub
rcr
xchg
fs
loopne
sub
test
js
cmp
inc
push
ds
jecxz
pop
in
cs
cmp
add
push
jle
inc
xor
add
cwtl
sbb
dec
mov
mov
ffreep
fnstenv
ljmp
sti
ss
scas
jno
push
inc
stc
sbb
rcrb
or
imul
mov
testb
cmpsb
sahf
es
jecxz
dec
sub
test
or
pusha
test
decb
jo
push
lods
daa
fisubrs
mulb
cmc
inc
cmp
mov
ds
sbb
push
mov
mov
mov
jo
and
and
ljmp
push
imul
cmp
push
push
fimuls
scas
call
cmpsb
adc
pop
popf
stos
xchg
insb
jle
push
out
and
mov
sub
xor
fld
or
hlt
or
pop
jl
lea
movsb
sub
ret
test
xchg
scas
or
out
and
and
out
test
cwtl
xchg
movsb
aam
sarl
cmpsb
cs
inc
out
jl
ja
daa
iret
mov
xchg
pop
scas
pop
mov
xor
test
sub
push
jno
sbb
jmp
test
test
and
jb
mov
cltd
imul
sti
sti
repnz
pop
add
outsl
mov
fldl
pop
xor
arpl
mov
cmp
int3
add
lret
mov
out
pop
icebp
jg
rcl
imul
xchg
es
aas
cmpsl
inc
xchg
sbb
loop
outsl
popf
outsl
push
insb
mull
pop
sub
int
xor
jo
push
mov
xor
aaa
push
in
popa
leave
push
cmp
dec
gs
cmp
js
dec
fcomip
fcmovnu
outsl
xor
fistpl
sbb
pop
lahf
and
roll
in
xor
out
push
push
js
bnd
dec
out
fstl
shl
and
leave
lahf
orl
adc
push
rolb
daa
pop
jecxz
jb
flds
cltd
push
sub
pop
mov
rcr
in
mov
add
fcompl
jl
negb
cmp
mov
mull
sar
lcall
enter
out
bound
fsub
jns
call
add
enter
adc
sbbb
sbb
in
enter
lock
dec
arpl
cmp
loope
adc
jle
roll
das
lods
xor
xchg
jae
clc
shlb
mov
inc
scas
cmp
push
push
cmp
pop
dec
in
dec
or
mov
xor
rorb
in
fcomps
shl
xchg
fdiv
les
jns
lahf
push
int3
adc
mov
inc
lods
and
or
adc
mov
adc
add
push
shll
add
sub
movsl
xor
adc
rol
or
mov
stos
fcmove
pop
repz
insb
xchg
adc
mov
or
add
sub
sbb
shr
push
pop
push
mov
fadd
adcl
js
mov
pop
out
fistl
movsl
ds
rcl
jbe
xchg
icebp
sbb
push
movsb
and
and
daa
lock
std
out
jl
mov
jle
push
popf
cmp
int
leave
fstps
dec
jns
pop
sti
std
lret
shll
xor
mov
je
or
adc
push
insl
cld
insl
fdivrs
cmp
jbe
pop
das
das
sub
mov
inc
jno
pop
fldl2e
cmp
inc
ja
ret
loopne
sbb
mov
jge
add
mov
shlb
pop
sbb
out
xchg
jge
dec
ja
inc
fmulp
test
je
in
arpl
dec
and
and
or
fistpl
sbb
shll
test
repnz
jmp
popf
out
jbe
inc
fucom
xchg
pushf
popa
cltd
outsl
insb
sbb
mov
mov
or
popf
inc
out
das
movsb
mov
mov
mov
call
leave
repnz
jge
or
add
inc
sbb
mov
mov
mov
add
in
setle
jg
xor
ss
mov
lahf
std
push
inc
movsl
sub
xor
sbb
push
mov
xchg
ret
and
xor
ds
iret
shll
mov
test
into
inc
pop
pop
mov
or
in
mov
loopne
mov
and
mov
mov
lret
and
mov
ss
data16
clc
cmp
stos
inc
pop
cmc
ja
cmpsb
or
adc
sub
or
sbb
sbb
mov
inc
out
add
dec
scas
into
enter
inc
and
add
or
scas
repnz
sbb
xor
fs
sub
push
mov
push
cs
iret
pop
push
sbb
lods
push
les
or
adc
in
popa
enter
aaa
jns
and
cmc
pop
test
pusha
ret
ud0
int3
pop
mov
mov
sbb
dec
mov
hlt
pop
lea
dec
push
les
sbbb
cs
push
dec
das
fwait
je
cmp
or
fidivl
dec
or
mov
jp
divb
imull
sbb
cmc
mov
add
ficoms
jecxz
inc
ss
inc
mov
inc
leave
push
jmp
pop
mov
or
cmp
test
ret
in
fidivrl
sub
je
pop
fstl
mov
jne
out
rol
out
rep
fwait
adc
cs
adcl
and
fidivs
rclb
fistpll
add
and
or
inc
xchg
mov
dec
lret
js
jecxz
cmp
loope
and
scas
movsl
mov
or
cmp
sbb
rol
sub
shlb
adc
mov
iret
cmp
adc
scas
and
sub
dec
lret
xor
sahf
mov
in
int3
sarb
jmp
xor
bound
add
out
xor
mov
fldcw
in
les
push
cwtl
xor
mov
push
lcall
icebp
insb
icebp
ss
mov
xchg
and
add
mov
jp
ret
sbb
aam
gs
pop
rclb
loop
pop
orl
mov
jns
or
aad
cmp
out
jo
and
aaa
mov
and
push
cmpsb
sbb
loop
add
sub
cs
pushw
js
aas
pop
jo
pusha
ss
pop
xor
pop
adc
icebp
inc
stc
out
lcall
or
popa
andb
mov
fisttps
imul
or
daa
nop
pop
gs
into
enter
lret
mov
mov
mov
jle
sub
mov
outsl
push
xor
dec
icebp
fcoml
mov
loopne
scas
mov
dec
lods
sub
out
icebp
jae
lods
cmp
push
mov
mov
push
sub
mov
cld
stos
pusha
jnp
xor
in
push
and
in
xlat
fsubl
push
or
cmp
in
cld
stos
test
imul
cmp
dec
push
ds
cmp
test
lret
mov
sub
ss
sbbb
lcall
rcll
inc
es
cmpsl
xlat
mov
jb
aam
call
aas
es
inc
sbb
cmp
pop
add
outsl
mov
or
loopne
inc
jns
and
xor
cmp
imul
dec
mov
into
mov
in
push
adc
enter
hlt
cltd
xchg
push
jae
fisubs
mov
lea
xchg
mov
mov
ja
out
push
sub
jmp
ds
out
into
jno
sbb
data16
int3
cmpl
add
inc
sub
pop
cmc
pop
xchg
xor
and
gs
mov
stos
mov
pop
ret
xor
inc
mov
xchg
fcompl
sbb
pop
stc
xchg
cld
negb
cmc
lods
lahf
rcrb
imul
lods
cwtl
dec
ljmp
mov
push
mov
out
adc
mov
arpl
lret
and
clc
inc
inc
mov
lret
push
movsl
shlb
sub
orb
pop
xchg
add
mov
jmp
cmp
push
push
push
repnz
mov
lcall
cwtl
push
add
imul
mov
insb
cmpsb
std
mov
dec
dec
mov
aam
inc
cli
mov
ret
repz
xor
fadds
xchg
xlat
sbb
outsb
mov
mov
mov
sub
mov
adc
or
mov
lcall
out
jno
add
push
je
pop
adc
fsubrs
das
das
mov
dec
mov
sahf
jns
montmul
pushf
aas
mov
loope
jno
imul
push
je
shrl
mov
stc
aas
mov
andb
cmpsl
rcr
cmp
and
pop
jb
scas
jp
inc
aad
filds
divl
call
cmpsl
dec
test
push
pop
in
nop
dec
jg
fdivl
mov
mov
mov
pop
push
cmp
push
adcb
mov
mov
testb
push
push
pop
and
push
decb
lahf
int
pushf
andb
cmp
out
push
icebp
hlt
test
xor
into
mov
xchg
mov
in
stos
adc
mov
lcall
push
ret
add
sahf
add
mov
es
test
scas
icebp
js
inc
xchg
mov
mov
data16
adc
jne
divb
insb
jle
insb
mov
mov
xor
lret
jne
dec
dec
push
scas
aas
mov
andl
loope
mov
sub
je
mov
repz
loop
mov
add
stos
push
mov
push
hlt
pop
into
orl
pop
out
add
mulb
add
add
mov
insl
arpl
test
xchg
pop
jmp
icebp
or
dec
xlat
mov
shll
sbb
push
out
push
fisubs
add
push
inc
stc
popf
inc
jbe
notb
inc
jge
jb
jl
jns
push
imul
mov
shl
pusha
jno
adc
dec
dec
add
inc
shll
xor
pushf
outsl
out
mov
xchg
cmpsl
loope
lret
mov
lds
js
inc
imul
xchg
jnp
and
add
xchg
cmpsl
xor
scas
mov
loop
mov
ljmp
in
cmp
mov
inc
and
bound
insb
lahf
test
mov
jge
xchg
sub
jb
ret
dec
aaa
lret
call
jb
lods
push
sub
addr16
hlt
jg
scas
ljmp
ja
inc
jge
ja
xchg
fs
mov
mov
dec
pop
cmpsb
jnp
arpl
mov
into
and
out
mov
fldcw
pop
adc
dec
inc
xlat
add
je
adc
push
add
fistl
mov
sub
jns
ret
pop
xchg
push
push
push
jne
adc
shl
pop
fcomps
push
fcomp
jnp
cmpsl
cmp
dec
outsb
mov
mov
ret
dec
sbb
fcoms
std
xlat
mov
pop
pop
lock
loop
cmp
lahf
test
mov
sub
sub
in
stos
popf
add
pop
mov
negl
xchg
inc
xchg
jb
in
fwait
sarl
fwait
jecxz
test
adc
sub
shlb
out
push
movsl
xorb
cmp
dec
scas
adc
sub
dec
dec
fwait
mov
cmp
icebp
jne
out
mov
jmp
rcll
or
out
in
inc
ret
xor
xor
in
pop
dec
rcll
dec
fstpl
sbb
inc
lea
addr16
sbb
mov
xor
outsb
jl
mov
enter
mov
clc
dec
inc
shlb
push
in
inc
push
inc
int
les
cmpsl
pop
test
pop
nop
adc
mov
nop
sub
repz
addl
push
jmp
ja
mov
lods
ja
jb
shrb
push
fs
hlt
mov
outsl
ds
nop
mov
ret
or
divl
into
ljmp
dec
xchg
jb
push
outsl
lahf
xchg
jge
cmp
lahf
pop
scas
sarb
mov
lcall
ror
cmpl
fbld
mov
pusha
aam
cmp
mov
push
add
push
jnp
test
and
pcmpeqw
lahf
cmp
mov
jmp
jbe
push
in
shlb
push
cltd
mov
lret
sbb
lods
lea
fidivl
mov
cli
mov
andb
test
aas
pop
imul
push
clc
inc
xlat
and
add
out
sub
pop
sti
cmpb
hlt
jbe
es
jge
or
add
xchg
movsb
cmp
sub
mov
push
adc
hlt
cli
cli
mov
in
mov
or
pop
ja
dec
fnstsw
ja
mov
inc
in
inc
andps
inc
push
and
jecxz
cmc
xor
pop
inc
xchg
jmp
mov
mul
std
jb
push
mov
and
aaa
sbb
loopne
cmp
rorb
xchg
dec
jl
scas
insl
jnp
xchg
cmpsb
into
mov
bound
addr16
xchg
xor
movsb
imul
and
ficompl
add
js
mov
jb
push
cmpsb
or
scas
push
push
lahf
and
sbb
sbb
sbb
jo
movsb
lcall
pop
inc
mov
ss
jnp
mov
pop
loopne
subb
in
and
push
pop
ret
test
mov
pop
test
pop
scas
arpl
xchg
sub
test
mov
scas
inc
add
fidivl
loope
cmp
neg
imul
into
imul
and
jg
in
mov
jecxz
mov
xor
cmp
das
pop
dec
add
add
test
setbe
cmpsb
xor
mov
test
call
out
cmp
pop
cmpsl
test
ja
test
sbb
pop
mov
add
xchg
cmp
aad
call
xor
orb
data16
ljmp
push
or
push
inc
fbstp
jnp
loope
jne
xor
push
jl
clc
nop
pop
dec
xor
arpl
jg
or
xchg
stos
out
insl
push
jae
mov
mov
mov
fstl
lcall
and
pop
adc
push
jge
adc
ss
lret
fwait
xchg
imul
pop
ret
rcl
jns
cmpsl
cltd
aam
dec
dec
cmp
aad
fsts
push
test
jle
daa
jno
stos
sti
add
lret
ret
stc
jg
test
and
fmull
mov
jp
loop
cmp
push
fwait
out
test
push
mov
lea
mov
adc
sbbl
stos
sbb
and
cmpsb
adc
xchg
mov
dec
fcmovnb
call
xlat
jnp
out
jns
jecxz
inc
inc
sub
or
out
daa
out
lods
push
jo
sahf
or
mov
or
sar
ja
add
popf
xor
imull
imul
mov
mov
xchg
sbbb
adc
das
fsubl
rclb
and
mov
mov
dec
push
ja
push
push
adc
jne
xchg
jge
lods
mov
sbb
aas
test
mov
sub
subl
pop
inc
mov
mov
sub
push
adc
sub
mov
and
cmp
test
ds
outsl
dec
sbb
jl
test
add
push
cltd
adc
jmp
or
add
jne
push
rcrb
rclb
mov
call
test
xorl
cmp
cmp
or
pop
jno
jb
lahf
movsb
xor
jbe
iretw
adc
sbb
ljmp
repz
push
sub
mov
lcall
xor
push
sub
cmp
inc
inc
test
in
sbbl
push
popf
xchg
iret
pop
and
fwait
push
push
push
dec
bound
mov
fwait
aad
stos
call
dec
cmpsb
into
push
jmp
mov
jb
ja
inc
jmp
sbb
jns
imul
je
hlt
cli
mov
ficoms
jb
mov
aaa
mov
fs
push
fisubrs
fildl
mov
pop
xchg
clc
aad
daa
mov
mov
dec
mov
pop
xchg
inc
adc
sub
adc
mov
call
lods
pushfw
jns
dec
xchg
das
ret
sub
xor
and
adc
xchg
pop
bound
jl
mov
cmc
sub
out
stc
xchg
inc
sub
mov
out
inc
lret
scas
popa
mov
cmp
xchg
es
insl
aad
mov
cmpsl
popa
jmp
cmp
and
mov
popf
lods
or
mov
fcmovb
out
ret
inc
mov
sbb
ror
sti
mov
sbb
dec
arpl
push
and
mov
andps
fstl
xor
repz
jmp
mov
gs
insl
add
or
jns
mov
dec
add
repz
out
je
jmp
add
pop
cmp
cmpsb
std
or
and
sti
sub
cli
loope
data16
inc
mov
mov
inc
clc
and
ret
repz
pushf
shlb
mov
imul
int3
sbb
dec
mov
std
in
mov
fsubrp
jl
xchg
adc
shlb
mov
mov
mov
aam
pop
pop
loop
pushf
cmp
pop
and
loop
inc
push
push
ficoms
mov
pop
jne
cmc
xchg
adc
popa
sbb
hlt
push
or
fistpl
sub
pop
imul
cmpsl
in
in
mov
cmpl
add
aaa
jb
in
sbbl
or
inc
and
in
and
sub
mov
inc
pop
or
sti
xchg
scas
enter
dec
sbb
mov
cmp
cmp
add
test
xchg
mov
loope
leave
xlat
push
push
stc
push
xlat
mov
hlt
cli
mov
in
mov
leave
cmp
lods
push
pop
insl
int
pusha
and
cmp
hlt
mov
xor
xchg
sub
les
mov
scas
lret
ret
mov
sbb
ds
adc
pop
lods
or
cmp
data16
and
adcl
push
mov
lods
sub
mov
push
cwtl
pop
jb
jg
je
jge
and
call
sbb
mov
insb
fldl2e
aam
mov
stc
or
adc
dec
stos
add
adcb
cmp
es
mov
add
std
xor
push
out
fbstp
adc
in
aad
cmp
pop
add
pop
adc
sbb
loope,pn
xor
andb
js
arpl
mov
xchg
and
int3
push
push
movsl
xchg
std
js
in
scas
call
fldl
lahf
cmp
pop
adc
sub
push
sbb
and
cmp
inc
mov
pop
push
mov
push
std
shlb
jnp
mov
push
stos
outsb
sbb
out
fwait
mov
inc
mov
cltd
dec
sahf
lds
imul
stos
ss
mov
sti
mov
adc
loope
cs
sbb
jle
or
add
dec
adc
ss
pop
pop
mov
pop
enter
jle
sarl
outsl
push
out
pushf
scas
lahf
inc
or
out
lods
pop
loopne
popf
shlb
pop
jno
xorb
cmp
into
push
mov
mov
mov
jecxz
std
mov
adc
jnp
push
je
jge
cmp
mov
dec
cmp
mov
jae
sbb
insl
fiadds
sbb
adc
fistps
xor
push
push
or
inc
cmp
cli
xchg
repz
sbb
mov
adc
and
sub
pushf
and
sbb
jo
dec
int3
stc
or
addr16
or
mov
lods
pop
mov
sub
popa
xchg
pop
jmp
or
jo
in
ja
xchg
add
push
lock
loopne
mov
out
in
rcll
mov
mov
stos
inc
pop
not
test
cltd
push
xor
jmp
dec
stc
push
jae
out
and
pop
lds
cmp
mov
iret
jo
pushl
jb
lods
xor
jecxz
testl
add
xchg
xchg
ud2
lock
int
jno
outsl
push
mov
testb
cmp
hlt
orl
pop
outsb
popf
mov
stos
scas
movsl
push
sti
sar
lea
mov
inc
imul
test
int
lods
outsb
stos
jne
pop
and
jl
mov
shlb
test
push
dec
dec
mov
stos
jle
add
sub
std
cltd
sti
js
sbb
xchg
in
cmp
pop
xor
stos
mov
js
in
push
or
lea
sub
jmp
pop
add
jne
pop
inc
mov
pop
rcrl
jmp
out
dec
sbb
int3
sar
lret
xor
inc
lock
adc
ret
jo
lock
lret
inc
loopne
stc
les
or
push
jmp
les
or
inc
push
nop
aad
rcll
cmp
mov
push
dec
and
pushf
aad
filds
iret
and
mov
ror
fisubl
shl
popa
lcall
jno
mov
mov
jp
fadds
jle
aad
inc
cmpsl
mov
jae
out
jl
dec
scas
or
mov
shr
stos
repz
or
lret
mov
mov
lret
mov
add
repnz
hlt
lods
and
sbb
push
mov
adc
mov
push
adc
repnz
jp
ja
divl
int
clc
sahf
jecxz
mov
ss
push
rcrl
mov
jo
xchg
push
adc
adc
push
rcll
sbb
insb
das
popf
fisubrl
in
cmp
push
ficoml
mov
sub
clc
mov
jmp
icebp
pop
mov
mov
push
imul
mov
aad
fld
std
push
cltd
or
mov
mov
js
mov
out
jbe
or
add
lea
fwait
ds
cmpsl
xor
jns
jmp
fimuls
mov
js
sbb
ss
xor
and
fdiv
ret
int3
cmpsl
xor
fdivs
sub
dec
bound
imul
xor
pop
icebp
cs
sti
sbb
js
inc
call
jae
dec
in
xchg
pop
loop
cmp
xchg
lret
jge
sub
push
or
les
rcll
push
lahf
xorb
mov
mov
mov
out
mov
cwtl
pop
and
xchg
in
arpl
popa
into
test
leave
test
mov
sbb
adc
and
mov
jbe
fiadds
out
scas
push
insl
sub
dec
in
push
bound
shll
or
in
mov
mov
mov
int
popf
daa
adc
lret
fsubl
insb
inc
mov
mov
test
add
or
push
xchg
inc
hlt
push
rcrb
sub
dec
add
bound
rorl
cmp
mov
inc
enter
push
mov
jo
and
cmp
in
jmp
sbb
ds
pop
and
pop
jbe
xor
pop
daa
jecxz
repz
and
pushf
arpl
fbld
jle
test
mov
es
pop
pop
ffree
das
mov
rcrb
mov
repnz
jb
sahf
subw
popf
lods
add
xor
imul
xchg
lods
rcl
rclb
xor
xchg
add
pop
ja
mov
scas
and
inc
add
inc
ldmxcsr
ljmp
sahf
jecxz
call
mov
out
push
mov
pop
fsub
adc
xor
push
mov
rcrb
gs
and
and
in
xor
mov
xchg
xchg
outsl
jnp
mov
sbb
outsb
or
xchg
sarb
push
mov
mov
jmp
pusha
divl
jle
cmp
or
clc
daa
mov
sti
cmp
lcall
mov
push
inc
into
sbb
jl
cmpsl
scas
add
xchg
js
fs
inc
cmc
add
cmp
or
lahf
inc
shll
sbb
sub
sbb
jb
push
stos
pusha
xchg
xorb
and
repz
add
pop
adc
sub
pop
gs
aam
mov
jecxz
xchg
and
sbb
fcompl
mov
loopne
push
in
inc
add
dec
popa
in
lods
adc
xor
push
orl
jmp
adcl
shll
sbb
nop
add
das
ja
cmp
mov
icebp
or
mov
jbe
ret
mov
and
insl
add
rorl
or
pusha
std
mov
push
insb
leave
adc
mov
clc
sahf
sub
cpuid
lea
int
mov
pushf
push
enter
sahf
or
out
scas
xchg
out
loope
or
mov
xorb
scas
lret
xor
adc
iret
or
cmp
insl
mov
fcompl
cwtl
in
frstor
rcll
sbb
sbb
xchg
adc
mov
mov
fidivrl
ret
jo
clc
xchg
push
lods
dec
adc
call
or
add
push
in
divb
enter
pushf
aaa
lods
xchg
mov
xchg
pusha
sub
inc
dec
jp
mov
inc
push
dec
fadds
xor
adc
xor
test
push
adc
mov
push
mov
mov
sbb
je
dec
xchg
shll
pop
shrd
subl
cmp
and
and
jo
not
ret
sub
pushf
or
pop
add
push
movsb
mov
fs
test
enter
xchg
pop
mov
pop
cwtl
and
clc
push
fsubr
cld
pop
push
jle
xchg
cmp
lcall
js
dec
ds
mul
loop
push
imul
test
out
sub
pop
jge
cmp
mov
cmp
aas
pop
int
adc
mov
xchg
addr16
out
sub
adc
test
outsl
jecxz
jl
sub
and
mov
sbb
jp
xchg
mov
mov
mov
adc
jno
dec
and
les
jno
jmp
mov
imul
jae,pt
adc
gs
push
push
je
inc
fs
inc
shrb
lret
pop
fbld
mov
and
add
fwait
rcr
dec
or
xor
inc
add
pop
int
shlb
daa
cmp
jge
fldt
test
lret
inc
mov
addr16
pop
lcall
cmp
ss
push
pop
inc
pop
cmp
push
mov
outsb
hlt
pop
incb
out
cld
inc
inc
imul
mov
xlat
repnz
cmp
cwtl
mov
pop
negb
jmp
icebp
mov
aad
mov
jle
cli
xlat
idivb
sub
pop
mov
nop
push
and
nop
jo
mov
adc
gs
fisubrl
mov
sbb
mov
sahf
cli
inc
out
in
xchg
sbb
mov
shl
mov
leave
hlt
es
fiadds
test
jns
mov
fidivl
sub
or
inc
fstl
pop
cltd
xchg
std
or
dec
dec
xchg
dec
xchg
daa
sahf
dec
push
mov
icebp
out
jecxz
adc
jecxz
loope
and
mov
out
ljmp
je
push
mov
loope
hlt
fadd
mov
dec
xlat
mov
ret
outsl
cwtl
loopne
loope
xchg
lea
push
push
fwait
enter
fdivl
bound
jnp
sbb
lds
xchg
outsl
xor
mov
push
mov
addr16
mov
mov
test
sbb
movsb
sbb
aam
test
mov
mov
aas
sahf
add
pusha
scas
addr16
out
imul
dec
sbb
inc
sbb
or
jl
sbb
aad
ret
mov
xchg
adc
scas
dec
dec
cmpl
pop
imul
push
add
pop
xchg
lea
adc
pusha
mov
mov
cmp
fnstenv
pop
lret
fwait
inc
push
shrb
mov
fisubs
jo
aaa
lret
dec
shll
add
xchg
jle
enter
fisubrs
ret
or
test
xchg
pop
in
adc
into
xor
inc
jge
mov
subl
in
rorl
in
test
rcl
fs
add
lds
cmp
push
jmp
mov
xor
mov
adc
push
inc
push
xchg
mov
repz
clc
xor
inc
fxch
pop
mov
gs
inc
mov
adc
cltd
or
cmp
push
dec
stos
out
call
xchg
adc
mov
xchg
sub
push
popf
xor
mov
lods
imul
fwait
adc
daa
mov
shl
xchg
and
add
jmp
out
bound
dec
out
jecxz
xor
in
pop
dec
xor
pop
inc
sbb
jnp
push
sbb
ror
lret
sbb
call
cld
add
jb
xlat
dec
fnstenv
testb
rcl
addb
sbb
dec
mov
mov
lock
notl
or
fmul
cmpsb
std
movsb
and
lret
test
and
ret
int3
scas
mov
cmp
test
and
mov
mov
and
test
cmpsb
xorb
outsb
mov
jo
imul
jo
mov
stos
cmp
xchg
dec
cmpl
add
inc
jns
jo
mov
mov
cmc
xchg
inc
shll
push
fisttpll
fidivrs
fbld
adc
inc
aas
and
mov
dec
loopne
jnp
insl
add
daa
mov
xchg
stos
inc
dec
xor
inc
lods
aad
or
or
sub
or
pop
cmp
addr16
pop
and
dec
inc
cltd
sub
jb
inc
xor
js
out
inc
fnstenv
adc
and
repz
jns
ds
les
cld
mov
dec
cmp
mov
mov
lcall
adc
inc
and
xor
jo
xor
xchg
xor
jb
mov
call
xor
jmp
xor
ds
inc
fstps
xchg
lds
test
jg
addr16
sbb
push
xorb
xor
cwtl
mov
add
xchg
adc
dec
pop
push
sbb
adc
dec
ljmp
mov
popa
mov
ljmp
adc
insb
cmp
sbb
mov
jg
daa
mov
push
cmpsb
pop
fisubrs
lret
shl
jmp
push
cmp
mov
punpckhbw
lea
scas
das
add
inc
movsb
mov
mov
sub
inc
daa
jns
in
dec
mov
sbb
and
mov
jmp
dec
xchg
cld
or
aam
mov
mov
inc
daa
inc
fdivl
aas
mov
jp
cmp
adc
fldl
andb
idivl
stos
cmc
es
enter
adc
aam
cmp
lock
add
in
ds
lds
jbe
cwtl
mov
jge
mov
imul
test
sbb
std
dec
mov
push
hlt
xchg
mov
push
cmp
sbb
mov
jmp
loopne
xor
dec
lock
test
inc
cltd
fistpl
mov
fcmovbe
dec
std
mov
pop
imul
inc
sub
dec
lret
outsl
dec
or
mov
and
in
and
adc
push
iret
insl
or
bound
out
inc
adc
jecxz
insl
cmp
loope
sahf
xor
sub
or
cwtl
jns
xchg
bound
push
jae
testl
rcl
push
insb
stos
test
aad
loopne
imul
xor
cmc
lds
daa
test
pop
iret
or
imul
mov
push
stc
adc
jne
sahf
push
sahf
mov
pop
cmp
je
lcall
mov
lods
jmp
or
mov
movb
stos
fst
ds
lcall
mov
cmp
cs
lock
pop
add
dec
pop
xor
adc
mov
jl
inc
cld
xchg
hlt
test
sbb
out
dec
shrl
stos
fucom
in
je
fnsave
shll
cmpsl
or
cli
or
out
cmpsl
aam
fdivrl
insb
sbb
insl
movsb
ror
and
mov
pop
jno
scas
mov
mov
inc
mov
insb
xchg
pop
lods
or
jmp
dec
pop
repz
lret
push
sbb
test
mov
sti
js
popa
jl
push
xor
dec
rorl
cmp
mov
mov
popf
test
push
inc
mov
sbbl
test
lock
cli
fcomps
or
ja
add
sti
xor
lret
je
inc
mov
push
cmp
or
ret
cmp
outsl
add
xor
ds
setns
push
inc
mov
loope
sub
scas
lret
push
sbb
jl
call
pusha
popa
jnp
sbb
push
cmpsl
aam
jp
pop
rcrl
roll
test
icebp
mov
shll
in
dec
and
sbb
je
push
subl
adcl
xor
fstpl
pop
pop
xchg
xor
push
xchg
push
outsl
pushf
orl
mov
cs
arpl
pop
inc
pop
sub
repnz
inc
jp
sub
data16
dec
hlt
push
jg
sub
pop
or
fildll
in
lcall
xchg
fcomi
inc
push
jmp
std
sbb
xor
sbb
test
stos
push
sarl
lret
add
push
cmpsb
repz
mov
jge
cmp
mov
pushf
and
test
shlb
pop
movsl
aad
cltd
outsb
loope
cltd
push
mov
dec
cmp
adc
jb
ja
xor
adcl
mov
lods
mov
les
mulb
push
cmpsl
rol
dec
inc
inc
fmulp
mov
std
iret
pop
dec
loop
mov
and
mov
sbb
cmp
push
and
int3
sub
stos
les
sbb
mov
and
push
add
nop
sub
sub
mov
test
xchg
sbb
mov
fsubl
adc
daa
outsl
jl
pop
lock
jge
dec
mov
jno
das
icebp
loop
jnp
fbstp
sub
push
test
fldcw
and
sti
test
sub
mov
loope
cmp
pop
stos
sub
das
adc
cmp
mov
and
shrb
dec
adc
repz
rol
adc
mov
cmp
arpl
push
out
cmc
mov
push
hlt
push
repnz
fnstcw
scas
in
xchg
cltd
iret
les
ds
repnz
ret
addr16
dec
sbb
push
aas
lock
jae
fidivl
sub
inc
fnstenv
hlt
pop
stc
mov
pop
push
lock
and
fsts
jb
ss
lea
mov
into
je
sub
pop
xchg
add
mov
and
call
jb,pt
sbb
fwait
mov
push
xchg
dec
fidivs
inc
pop
aam
mov
in
insb
movsl
data16
aad
out
sub
test
push
push
jne
mov
gs
fisubl
fisubrs
jne
int3
xchg
push
and
jns
push
fdivp
incb
stos
adc
insb
mov
daa
jmp
or
das
or
xchg
adc
outsl
data16
fwait
insl
arpl
push
sub
fwait
stos
dec
icebp
shl
push
sub
popa
lock
pop
daa
shrb
cmp
pop
sub
xchg
and
jg
add
push
std
mov
clc
andl
or
cs
in
mov
push
and
lock
jae
daa
mov
stos
int
push
sub
xchg
jl
les
pop
dec
pop
push
xor
enter
cmp
pop
mov
fsubp
test
and
mov
cli
out
cmp
insl
inc
and
jecxz
dec
and
jmp
in
sbbb
ds
inc
in
pop
popf
lods
js
gs
cwtl
mov
cmp
insb
ljmp
dec
mov
lods
repnz
mov
push
imul
mov
mov
shll
rorl
lock
and
jns
gs
rcrb
js
or
pusha
cmc
jecxz
daa
subb
test
sahf
pop
icebp
xchg
loopne
inc
add
inc
mov
cli
fsubs
mov
push
loopne
or
inc
imul
adc
arpl
fs
imul
push
mov
into
ret
jb
mov
jp
push
das
andb
inc
pop
push
dec
sbb
ret
pop
mov
test
idivb
jecxz
xor
xchg
test
aaa
dec
cmp
adc
lret
sbb
roll
xor
stos
inc
imul
lds
push
leave
mov
adc
adc
push
repnz
mov
sbb
cmc
pop
movsl
cmp
mulb
mov
les
jnp
lret
bound
shll
jp
out
pop
pop
call
clc
out
call
add
mov
xor
mov
inc
and
aas
outsl
mov
jo
lahf
data16
lahf
orb
jl
mov
divl
arpl
clc
mov
fs
mov
andl
scas
movsb
push
lahf
sub
mov
xchg
adc
sbb
mov
fdivrs
or
mov
xlat
add
adc
daa
cmp
dec
out
dec
cmpsb
add
xchg
fmuls
or
sbbb
cmpsb
sbb
xchg
addr16
out
push
mov
xor
inc
movsb
cmp
outsb
jg
repnz
fldenv
repnz
cmp
adc
sbb
test
ss
xor
push
lret
mov
out
xor
call
xchg
sahf
pop
mov
gs
and
xor
xchg
ds
clc
les
push
push
mov
shrl
movsl
pop
dec
in
not
mov
in
hlt
stos
mov
ret
xor
daa
inc
leave
dec
movsb
pushl
arpl
es
andb
mov
pop
sub
cmc
push
cs
fucom
pop
scas
and
mov
mov
ds
pop
or
xorb
repz
call
dec
pushf
and
jo
popa
es
mov
call
xor
add
push
sahf
push
aad
dec
cli
call
in
mov
insb
add
mov
adc
test
and
aam
insb
mov
gs
cld
ror
sub
mov
insl
jp
das
mov
fsubl
outsl
and
testb
movsl
js
mov
sbb
pushf
sbb
xor
or
and
pop
add
xchg
push
ds
shl
mov
loop
xchg
aam
mov
sub
daa
xchg
jg
dec
add
jp
xchg
ror
sbb
or
inc
pop
lock
fwait
imul
js
cmp
loopne
fistps
mov
pusha
insb
enter
lcall
xchg
int
pop
into
ja
int
mov
int
negb
into
xchg
mov
fsts
xchg
pop
clc
and
sub
insl
or
and
enter
mov
dec
test
subl
fstps
rolb
mov
pusha
andb
mov
or
loope
xchg
adc
fdivs
xor
adc
inc
sahf
out
test
mov
mov
fiadds
mov
inc
imul
mov
pop
nop
pop
in
ja
jno
movsb
xchg
ss
jecxz
pop
adc
xchg
mov
movsb
sbb
xor
sbb
push
pop
jg
stos
jbe
cwtl
setle
pushf
add
inc
cmc
in
mov
gs
sub
out
mov
ret
hlt
mov
mov
push
xchg
jl
mov
in
test
lret
adc
push
dec
stc
jb
insb
in
jle
nop
idivl
pusha
leave
ficomps
xchg
sub
fldenv
push
cmp
push
mov
push
scas
sub
jae
loope
and
mov
frstor
movsb
xchg
and
lods
jmp
and
add
insb
test
add
push
push
hlt
mov
adc
int3
push
jmp
pop
xor
cld
imul
dec
test
lret
rolb
test
adc
mov
xlat
mull
aad
fsubs
leave
flds
aad
inc
test
lahf
mov
mov
sub
lods
mov
hlt
inc
inc
lret
data16
mov
fsts
leave
mov
pop
hlt
and
aad
iret
cwtl
jnp
lea
gs
jmp
lcall
and
or
and
mov
dec
insl
ja
lret
pusha
idiv
push
jle
outsl
cmp
jno
popf
xor
inc
pop
cltd
or
mov
mov
leave
fucomp
push
les
enter
outsb
dec
mov
adc
shll
enter
xchg
stos
cs
sbb
jg
add
cmp
in
xor
fwait
in
push
or
jp
testb
pop
stc
lea
lahf
nop
ljmp
arpl
add
mov
mov
or
testb
les
jle
es
jmp
int3
pushf
xchg
test
stc
popf
in
shld
shrb
mov
shll
dec
push
sub
fstps
iret
imul
test
mov
or
lcall
shrl
jp
fcmovnu
mov
adc
data16
sub
lods
notb
sub
xchg
pop
cli
jge
mov
iret
pop
sbbl
imul
in
addl
mov
in
or
mov
mov
mov
pop
lret
xlat
dec
dec
dec
pop
jnp
lods
rorl
push
jne
imul
lds
jl
cwtl
in
lcall
movsl
add
mov
jnp
shl
push
sbb
testl
jge
testl
outsb
push
mov
int
js
mov
sbb
dec
std
cwtl
outsl
and
mulb
push
adc
cmpsb
or
popa
ret
sbb
fs
push
xchg
test
dec
add
or
in
shlb
jo
inc
xor
cmc
inc
mov
loop
mov
and
fildl
or
cmpsb
ljmp
jg
cmpsl
mov
call
cmp
jmp
push
ljmp
test
aas
sbb
cs
mov
arpl
div
xchg
scas
sarl
cmp
pop
fdivl
test
repnz
cli
xchg
int3
xchg
stc
cmp
icebp
movsl
cli
sbb
and
inc
xchg
imul
lcall
adc
js
mov
outsl
sti
mov
test
mov
fimuls
mov
int
aaa
js
xchg
sub
push
call
out
test
rcl
movsl
add
ret
dec
repz
and
dec
aam
rorl
mov
inc
cmp
xor
and
shlb
popf
sub
jbe
movb
cli
dec
addr16
push
mov
js
ds
in
loope
dec
shrb
mov
inc
std
sbb
mov
add
xorb
jp
pop
or
cmpsb
ret
adcb
clc
aad
cmp
jecxz
out
inc
push
xchg
add
repz
sbb
and
nop
xchg
jl
orb
cmp
lcall
dec
lea
pop
mov
push
test
pop
and
test
push
cs
arpl
sahf
xchg
in
dec
sub
icebp
es
sar
add
and
leave
xor
je
cld
mov
pop
lret
push
in
xchg
mov
xlat
mov
lods
mov
les
nop
scas
mov
mov
or
cmc
and
mov
or
incl
in
push
dec
adc
mov
lcall
and
mov
add
sub
andb
pop
cmp
repz
and
sub
rcl
in
das
add
inc
mov
movsl
imul
aam
push
lret
xor
jle
pop
push
sbb
xor
lock
jnp
hlt
lret
add
gs
xor
mov
in
scas
xchg
call
lcall
push
ret
inc
shrl
aaa
jecxz
movsl
outsb
sub
mov
in
je
or
sbb
dec
pop
jno
pop
jl
and
int
insl
mov
lea
dec
xchg
outsl
mov
xchg
call
fldl
std
ffree
subb
mov
add
xlat
xchg
push
icebp
cmp
pop
mov
sbb
mov
xlat
outsb
mov
xchg
jnp
mov
je
aas
xchg
aaa
mov
popa
push
mov
sbb
mov
test
sbb
pop
test
into
xchg
fistpl
xchg
add
cld
push
or
test
mov
popf
stc
sub
xchg
jle
clc
nop
pop
xchg
add
dec
push
adc
mov
pop
pop
aaa
fsts
inc
pop
stc
je
rclb
push
aam
shrb
negb
pop
dec
xchg
dec
in
outsb
mov
and
xor
mov
jmp
jb
jle
mov
add
or
and
loopne
dec
in
add
stos
cmp
xchg
inc
gs
ds
mov
inc
pusha
inc
pop
bound
mov
jbe
pop
push
stos
xchg
push
xchg
fstl
sbb
cld
push
iret
sbb
aas
or
cltd
js,pt
inc
mov
pushf
push
sub
jp
data16
repz
imul
scas
mov
icebp
mov
jl
daa
push
iret
mov
sbb
mov
stos
ret
jp
out
stos
lret
cld
fs
shlb
xchg
dec
mov
mul
mov
xchg
fwait
sub
int
clc
push
insb
aaa
stos
push
cli
xchg
xchg
pop
or
inc
mov
dec
bnd
stos
mov
dec
pop
push
sub
je
xor
inc
lea
incl
sti
xchg
scas
xor
jmp
shlb
packsswb
sub
shl
push
outsl
pushf
outsb
loope
xor
mov
dec
fdivs
dec
in
jecxz
mov
lret
xlat
add
idiv
pusha
cmp
aas
pop
and
inc
dec
loopne
mov
xor
push
pop
jg
movsb
out
cmpsb
mov
mov
or
mov
inc
sbb
ljmp
push
mov
popa
mov
cmp
pushf
adc
loopne
data16
add
clc
bnd
adcl
jmp
adc
fildl
add
and
cmp
jge
mov
jae
cwtl
cmp
nopl
dec
mov
mov
xor
or
xchg
add
test
jno
lock
cmp
jo
andb
mov
cmp
adc
add
inc
loope
xchg
and
mov
shl
sbb
inc
or
xchg
insl
push
jb
jbe
stos
ret
or
les
push
mov
xor
xorl
insb
xchg
lods
popf
lods
inc
fimull
xor
lea
mov
outsl
push
mov
sub
ret
mov
les
insl
arpl
mov
inc
inc
jp
xchg
adc
inc
mov
lock
inc
ret
andl
mov
call
sbb
shl
jnp,pn
insb
lock
dec
and
mov
int
lods
ror
push
fisttpl
xchg
fldenv
pop
jl
sub
mov
adc
in
insb
mov
pop
in
xlat
adc
or
ret
ja
out
sti
in
mov
xchg
jne
inc
jl
xchg
stos
dec
loopne
and
mov
es
or
jb
push
cmc
test
jecxz
test
jbe
punpcklbw
jo
cli
test
adc
xor
mov
test
pop
enter
add
scas
div
mov
add
stos
and
sbb
push
rclb
xchg
imul
sbb
sahf
dec
and
inc
xchg
sbb
cmp
imul
xor
lret
cltd
in
pop
xor
mov
inc
fs
sub
mov
icebp
dec
sbb
jns
pop
mov
lock
daa
pop
jae
xchg
lds
xchg
jmp
fstpl
out
std
repz
sarb
or
dec
cmp
xor
mov
mov
or
xchg
adc
lcall
push
aaa
lods
notl
ds
mov
adc
jecxz
lcall
jp
popf
mov
fwait
imul
lock
adc
adc
movsb
lds
aas
push
pop
outsb
repz
faddl
rcll
adc
icebp
mov
cmp
ja
stos
xor
hlt
dec
ficoml
fnstsw
ds
inc
fldl
popa
test
or
and
xchg
jne,pn
xchg
lock
sub
dec
mov
and
xchg
xor
enter
pop
mul
jl
in
pop
mov
sbb
lcall
jbe
sbbl
das
sub
cwtl
loopne
mov
arpl
jle
out
jo
pop
sub
dec
bound
rcr
jb
popa
dec
sbb
js
lock
pop
js
cmpsb
repnz
adc
and
clc
iret
pop
icebp
dec
pusha
xor
shrb
push
test
jo
xor
mov
dec
out
xchg
lea
and
push
add
imul
fdivp
movd
sbb
push
inc
pushf
mov
cli
and
inc
mov
inc
nop
int3
xchg
cmp
stos
mov
cmovb
push
std
sub
into
xor
jecxz
cmpsl
or
ss
mov
push
es
sub
shlb
dec
or
jp
xchg
lods
test
mov
pop
cmp
aam
sub
dec
sub
jp
xlat
mov
or
enter
xchg
pop
rol
fmuls
sbb
adc
fists
gs
jle
mov
call
dec
insb
push
fidivrs
mov
lcall
dec
xchg
sub
sbb
ret
sub
mov
jg
cltd
mov
push
push
mov
ret
ljmp
jno
jno
sub
mov
mov
mov
jp
in
lret
stc
cld
or
lds
cwtl
pop
scas
lods
nop
push
test
adc
xor
sti
jmp
mov
cmp
sub
sub
mov
scas
idivb
inc
test
cltd
inc
fmull
adc
sub
mov
gs
shr
addl
cwtl
inc
and
push
dec
pusha
sub
mov
mov
test
repz
scas
push
sub
push
mov
rcrl
cmp
adc
lahf
inc
xlat
mov
mov
loop
orl
jl
out
jge
iret
data16
notl
jno
mov
daa
decb
xchg
test
scas
jno
mulb
inc
outsl
jo
push
stc
mov
pushf
cli
lret
loope
push
mov
ljmp
gs
insb
inc
iret
out
vpminsw
aam
call
ret
orl
daa
lock
lods
mov
nop
out
test
sbb
xor
pop
sub
jmp
push
mov
xor
xchg
lds
mov
cmp
fdivrl
test
pop
divb
push
mov
cld
loopne
fwait
stos
pop
sub
push
in
std
fwait
xor
or
dec
inc
mov
cwtl
and
inc
pop
mov
sahf
inc
and
dec
dec
mov
movsl
sub
cmp
or
jmp
cltd
sbb
mov
scas
mov
loopne
mov
icebp
into
xor
dec
out
jne
inc
loope
pop
jp
mov
jne
and
push
and
lds
gs
lods
mov
into
cltd
adcb
lds
in
sub
repz
notb
push
pushf
xlat
xchg
jnp
cli
cld
popf
dec
and
sbb
outsl
test
aad
mov
rcrb
xor
lds
push
je
sub
in
push
jae
dec
loopne
cs
iret
stos
sbb
frstpm(287
cmpsl
dec
ljmp
add
cmp
call
mov
lods
mov
outsb
fcmovnbe
push
or
sahf
mov
test
xor
and
xchg
in
adc
hlt
pop
sbb
testb
fimull
or
fwait
cmp
loop
lods
push
mov
popf
mov
sbbl
xor
iret
jge
ja
out
sub
inc
ret
lretw
call
fstps
aaa
int
jnp
mov
jne
or
pushf
or
stc
das
das
test
push
jns
xchg
mov
push
leave
pusha
mov
dec
rolb
test
jne,pt
in
pop
adc
test
bound
dec
inc
mov
dec
dec
scas
or
mov
adc
push
jb
xchg
scas
mov
rclb
test
inc
sub
negl
add
js
scas
cmpb
sbb
insb
imul
or
scas
mov
bound
rcrb
mov
xlat
cmpsl
sbb
xchg
mov
cs
and
int3
shlb
ret
lret
iret
cld
cmpsl
js
sbb
int
dec
add
lea
push
lock
fdivrs
push
pop
mov
xor
add
sbb
outsb
lock
pushf
adc
jb
xor
test
lahf
mov
push
sbb
cwtl
jle
add
push
mov
push
xchg
test
pop
imul
int3
lds
inc
dec
lcall
inc
fisubs
in
dec
jecxz
jns
leave
pop
aas
inc
data16
and
pop
mov
inc
imul
ljmp
cmp
lcall
pop
imul
push
hlt
inc
push
push
or
daa
mov
inc
test
jmp
movb
fbstp
and
aam
xchg
adc
pop
popa
arpl
jge
negl
aaa
dec
call
adc
sub
mov
pushl
out
mov
sbb
fldl
out
inc
xchg
sub
push
xor
inc
cmp
mov
add
push
sub
outsb
fdivs
mov
sbb
xor
roll
gs
pop
cld
jmp
cmp
dec
leave
mov
and
aam
dec
rclb
pop
ja
xchg
sub
sbb
jle
scas
mov
adc
push
andnps
enter
leave
xor
lret
sub
sbb
sub
push
or
loop
inc
pop
leave
inc
inc
imul
sahf
push
icebp
movsl
xor
mov
dec
fndisi(8087
or
jno
adc
sub
les
push
ds
jo
scas
mov
and
out
int3
fildl
mov
push
cld
xchg
je
cmp
mov
or
pop
lock
add
mov
push
out
lret
icebp
scas
inc
out
mov
pop
cmp
mov
bound
push
je
sub
rcrl
xchg
lods
jae
sbb
in
aaa
xchg
cmp
add
cmp
popf
stc
mov
sub
push
mov
test
or
sarl
dec
shlb
arpl
divb
pop
repz
mov
xchg
test
push
loop
leave
sbb
loope
lods
sbbl
jmp
xor
adc
xchg
insl
mov
movsl
loop
add
loopne
sahf
lea
enter
sbb
scas
movsl
xchg
mov
cld
ja
add
jge
aas
jle
inc
fs
mov
push
test
sahf
xchg
xor
test
clc
and
xor
sti
pop
repnz
test
ret
outsl
jae
les
insl
popf
iret
stc
nop
addr16
addr16
std
dec
inc
clc
cmp
mov
mov
mov
inc
std
test
shrb
add
movsb
icebp
cs
and
insl
and
inc
fimull
in
stos
fiaddl
cmpb
movsb
push
es
or
mov
cwtl
mov
out
test
and
inc
jnp
inc
inc
lea
xchg
ja
and
add
fs
push
jl
pop
stos
fcomip
cmp
cltd
in
testb
add
xchg
xchg
imul
inc
loope
or
daa
icebp
icebp
adc
add
in
repnz
pop
test
mov
adc
cltd
test
outsl
add
sbb
scas
sbbb
mov
pop
das
enter
mov
xor
shlb
fisubl
lds
xlat
jns
fldenv
sub
sbb
call
jo
repnz
addr16
cmpsl
sti
mov
cmpsb
pop
push
sbb
push
aas
popf
or
dec
aad
dec
inc
cmp
adc
dec
lcallw
scas
and
dec
cmp
jl
cmc
dec
loope
mov
nop
and
rorl
roll
jae
cwtl
mov
adc
mov
aad
in
out
aam
jae
and
popf
repz
or
mov
adc
xchg
roll
fisttpll
mov
xchg
push
push
movsb
mov
mov
iret
shll
mov
xchg
inc
cmpsb
adc
pop
lret
inc
rcrb
fsin
mov
lds
or
into
gs
aaa
test
test
les
movsl
nop
dec
and
enter
stos
add
sti
je
lds
cmc
rcrl
dec
push
repnz
mov
mov
inc
lock
dec
paddb
mov
test
pop
cmp
pop
fsubp
jae
push
jo
gs
aad
scas
inc
addr16
arpl
je
xchg
pop
test
idiv
fwait
outsb
jmp
cltd
xor
push
cmpsl
and
push
shrl
dec
adc
mov
add
xor
xor
xor
ljmp
shll
adc
js
inc
stc
mov
aad
fildll
mov
aaa
je
gs
outsb
aad
insb
idivl
data16
cmpsl
cwtl
ja
movsb
arpl
sub
int
aam
adc
addr16
and
hlt
popa
ds
aad
cmp
call
data16
aam
popl
aad
dec
pop
out
cmp
fcmove
mov
int3
out
mov
insl
lcall
sahf
sub
iret
divl
xchg
fdivrs
dec
stos
dec
dec
jnp,pn
pushf
out
loope
pop
jmp
dec
lahf
jl
test
ss
in
jb
sti
loope
jge
add
andb
lods
sti
push
lret
ljmp
fidivs
pop
aas
ss
or
js
popf
xchg
out
adc
lret
imul
loop
enter
or
dec
xchg
fs
insl
mov
sbb
xor
sbbb
push
pinsrw
and
es
push
jge
movsb
stos
js
movsl
cli
xor
push
cmp
mov
and
dec
in
mov
and
das
sbb
pop
mov
leave
pop
inc
mov
add
inc
add
mov
lods
mov
es
pop
push
aad
add
adc
fimuls
push
ret
mov
roll
or
cs
ljmp
mov
cmpsl
imul
out
outsl
push
push
or
jne
je
add
mov
mov
mov
shll
dec
fwait
sub
jns
arpl
int
rclb
inc
sbb
push
fnsave
lods
out
push
xor
jle
into
repnz
fadd
pop
aad
jnp
inc
loopne
into
hlt
inc
scas
and
ljmp
in
or
inc
mov
ljmp
out
inc
pop
repnz
dec
xlat
les
jmp
movsl
cmp
and
xrelease
stc
sbb
xor
xor
insl
cmpsb
imul
cs
outsl
sub
push
add
and
sti
lcall
cld
and
pop
fnstcw
cmp
mov
or
xlat
fwait
push
and
xchg
shll
movsl
lret
sub
lea
adc
adc
mov
fwait
rorl
and
add
test
sub
fwait
xor
nop
jnp
loopne
ficoml
in
sti
in
std
xor
jae
dec
mov
or
loopne
repz
mov
or
lods
cld
pop
aaa
cmp
jo
movsb
pop
lret
push
inc
mov
mov
clc
mov
ds
jg
addr16
popa
jae
fldcw
xchg
cmp
jge
jb
cli
mov
mov
xor
and
and
inc
jp
insl
mov
clc
inc
xlat
sub
sub
into
pop
adc
push
lea
pop
mov
push
jb
fnsave
clc
bound
adc
sbb
xchg
mov
mov
mov
ljmp
bound
adc
pop
js
inc
stos
sub
sbb
push
inc
jno
rcrl
mov
lret
sub
push
xchg
xlat
leave
mov
call
dec
jle
lahf
sub
inc
pop
rcrb
jnp
lea
and
jecxz
imul
js
fidivs
push
dec
sbbl
pop
push
insl
in
lcall
mov
lock
lahf
mov
cmp
lock
cli
sub
popa
add
call
fwait
and
or
sbb
mov
push
xchg
push
jmp
and
sti
movsl
loope
pop
hlt
jbe
cmp
mov
lcall
mov
notl
in
pop
sti
ret
mov
out
mov
sbb
pop
jg
pop
fcompl
pop
push
in
shll
xlat
sbb
test
enter
repnz
mov
sbb
mov
sub
ret
repz
mov
rorl
mov
test
movsl
lds
mov
xor
push
test
fsubs
enter
imul
test
movsb
and
es
cwtl
mov
mov
into
and
hlt
bound
push
fsubrl
subl
movsb
xor
repnz
fwait
ss
imul
les
pop
push
adc
insb
cmp
popf
insb
movsl
cmpsb
cmp
adc
jns
out
sahf
mov
or
imul
mov
or
sarb
push
rcrb
lahf
sbb
stos
dec
rcrb
imul
xchg
out
push
sahf
mov
into
mov
sbb
xor
clc
jp
int
and
mov
cli
fdivs
in
stc
shlb
int3
pop
repnz
mov
cmp
shrb
jbe
pop
mov
mov
cmpsb
dec
adc
notl
lds
incb
pop
adc
cmpsb
push
push
sub
js
rclb
jae
or
adcb
mov
push
pushf
or
std
mov
lods
push
ffreep
mov
jns
popf
stc
jmp
orl
mov
mov
fnstsw
adc
pop
hlt
and
and
dec
repnz
jns
test
fsubs
sbb
out
jo
mov
and
dec
dec
fdivrl
scas
loopne
dec
hlt
fwait
inc
cmp
dec
inc
sbb
lods
repz
cmpsb
fwait
ljmp
sbb
sub
aaa
dec
data16
jge
scas
mov
bsf
xchg
sub
dec
sbb
sbb
inc
xchg
cli
sub
push
std
in
bound
and
add
cld
mov
hlt
pop
cmc
and
outsb
jl
ret
pop
in
lahf
mulb
andb
icebp
inc
dec
and
fbstp
pop
cld
add
pop
lds
mov
add
or
xor
push
jge
mov
mov
insb
lods
mov
add
sbb
dec
push
test
ret
jmp
cs
popf
arpl
pop
stos
and
scas
rclb
xchg
add
mov
pushl
adc
jp,pn
or
shrb
decb
xchg
test
ret
add
enter
inc
je
loop
aas
xchg
xor
iret
outsb
and
aaa
or
xchg
xchg
nop
loop
add
js
in
shrl
nop
inc
xor
fisttpll
lahf
ljmp
les
test
push
inc
sub
lret
rcrl
and
test
push
sub
pop
sub
add
jl
hlt
iret
aas
mov
jne
loope
aam
add
divb
jo
ljmp
pusha
mov
cmpsl
xchg
daa
fmuls
cmpsb
fadds
popa
fwait
dec
push
and
ja
stos
add
ret
sahf
mov
xlat
pop
mov
ss
cmp
push
xchg
jp
mov
xchg
aad
sub
in
jne
iret
inc
or
or
push
dec
push
hlt
inc
inc
sbb
mov
pop
sbb
jmp
mov
sbb
test
add
in
and
mov
test
stos
and
add
stos
add
xor
sbb
adc
cmp
push
cmp
fcompl
sbb
shl
dec
lret
das
jnp
lcall
adc
xor
xchg
push
fiadds
sahf
wrmsr
es
inc
cmp
orb
cmp
push
mov
psubsw
dec
in
mulb
mov
add
adc
jne
xchg
mov
mov
loopne
hlt
test
add
push
push
mov
and
loope
scas
mov
pop
cli
or
jmp
enter
inc
in
rcr
in
insl
inc
mov
jae
mov
mov
test
stos
mov
ds
mov
cmp
sbb
mov
mov
pop
lret
xor
sti
xchg
or
mov
xor
insl
cmp
sahf
sbb
sbb
push
mov
mov
and
sbb
pop
add
push
or
mov
cwtl
sahf
sub
mov
mov
and
repnz
imul
iret
xor
les
test
pop
push
movsb
xor
outsl
add
subb
mov
inc
movsl
insb
sub
inc
sbb
jns
dec
mov
push
stos
adc
cmp
cli
xor
in
ja
mov
nop
aaa
jle
adc
cmp
push
xor
shrb
das
xchg
jo
ret
sti
xchg
movsl
lods
add
mov
pop
add
mov
push
dec
ret
fadds
jns
js
dec
and
mov
pop
loop
add
push
or
cmp
shrb
mov
xor
repz
mov
sub
fnstenv
and
inc
popa
inc
fcoms
cmp
mov
sbb
push
in
push
mov
and
scas
lret
adc
mov
jmp
cmp
and
addb
ss
or
fcompl
sbbb
lea
dec
jb
aad
add
jg
push
or
adc
pop
sub
dec
shl
jg
dec
fisubs
jge
lea
rcrb
jo
adcb
orb
mov
cmp
sub
rcr
ret
call
imul
mov
adc
lods
jmp
pop
adc
xor
push
pop
cmp
xchg
mov
clc
cmp
adc
mov
sahf
mov
push
or
cmpxchg
ss
inc
test
je
add
xor
sub
sub
jp
mov
or
or
outsb
add
outsb
mov
ret
mov
sbb
cwtl
out
cmp
or
es
mov
push
sub
test
aaa
shr
sti
insl
mov
aaa
adc
mov
pop
mov
jmp
pushf
addr16
mov
stos
mov
icebp
sbb
xchg
jp
or
mov
dec
cmp
jge
lock
fsubrp
jb
add
mov
xor
test
cld
fstps
xchg
sub
imull
int3
sbb
sarb
int
mov
lods
lret
adc
scas
loopne
std
rolb
dec
add
adc
popf
lods
mov
sbb
mov
or
add
and
xchg
pop
fdivs
test
sub
scas
sbb
sub
fwait
loopne
insb
ss
inc
mov
cld
out
leave
int
int
inc
fs
mov
fidivs
adc
mov
filds
add
cmpsb
aas
xchg
sarb
popa
mov
clc
push
adc
insb
test
jecxz
push
add
xlat
repnz
xchg
push
adc
xor
loop
push
gs
in
bound
mov
fs
hlt
push
inc
imul
add
call
and
pop
jae
daa
iret
mov
cld
lods
stc
outsb
or
sbb
sub
jle
aad
xchg
nop
call
cwtl
das
jg
iret
push
negb
mov
and
loope
sbb
push
cs
push
loop
negl
in
shl
sbb
dec
pop
cmp
pop
sahf
xor
in
inc
sub
aas
lret
bound
sahf
jns,pn
outsb
add
insl
out
mov
cwtl
cmpsb
push
inc
cmpb
lods
xchg
inc
icebp
movsl
inc
jecxz
mov
xchg
mov
outsb
mov
out
jns
std
imul
out
xchg
aas
and
jns
loopne
push
adc
add
dec
mov
jbe
jns
stos
jbe
push
sbb
rcr
xchg
xlat
or
adc
inc
js
icebp
pop
inc
adc
xchg
rcrb
mov
in
adc
add
pop
pushf
cmpb
loope
ret
xchg
mov
inc
cmp
outsl
shrb
push
xor
aam
in
push
call
or
mov
movsl
xor
test
in
xor
and
mov
push
mov
push
in
mov
mov
shlb
xor
xchg
jecxz
outsb
dec
nop
rcrb
jno
or
cwtl
inc
pop
sahf
je
mov
scas
xchg
and
xchg
xor
inc
xchg
xor
xchg
cltd
sbb
cmc
enter
jmp
add
jnp
pusha
dec
lret
pop
push
mov
and
pop
pusha
and
cld
cmp
push
imul
lret
rorl
add
xchg
jno
cmp
sub
pop
cmc
test
lock
adc
out
cli
adc
pop
loop
ja
or
sbb
sti
lock
pusha
test
sbb
push
push
outsb
and
inc
mov
fidivrs
mov
outsl
in
fwait
xor
mov
dec
cmpl
sub
lret
insl
jo
mov
sbb
ds
dec
cmp
inc
pop
ljmp
dec
scas
dec
cmp
dec
mov
fmull
pop
sahf
daa
aam
or
cli
repz
rcll
or
bound
cmp
dec
jg
nop
movsb
xchg
pop
xor
push
scas
ljmp
sbb
and
rcll
test
stos
inc
mov
xor
in
faddl
rorl
dec
pushf
mov
stc
pop
jecxz
inc
jmp
test
xorl
xsha1
cmpsb
dec
dec
cmpsl
mov
or
imul
mov
mov
fbstp
je
adc
sahf
pop
mov
add
push
mov
sti
sbb
cmp
je
xor
negb
pop
jge
lea
movsb
repnz
cmp
pop
adc
nop
loopne
sbb
jno
mov
notb
push
ljmp
inc
loope
mov
mov
pop
pop
dec
shrb
fstl
add
inc
inc
adc
ljmp
stos
add
pop
jle
xchg
bound
popa
out
aad
xchg
push
in
into
mov
in
in
jnp
jno
xor
jle
push
jmp
cmp
xchg
cwtl
cmp
sti
mov
sub
xchg
idivb
jecxz
out
test
imul
lods
push
bound
mov
sub
pop
shl
cmovle
lret
sub
inc
call
inc
outsb
pop
loopne
dec
jmp
shr
repz
rcl
add
scas
cmc
pop
push
test
loop
inc
dec
fcos
in
cs
push
fwait
lock
repz
lret
add
add
hlt
add
or
shll
int3
jp
pop
popa
rol
jge
and
xchg
stos
test
or
daa
sub
jle
sub
add
push
popf
lea
inc
adc
xchg
adc
cs
sahf
movsl
lret
mov
sub
icebp
push
xor
xchg
test
ficoms
lea
stos
lock
cli
out
shlb
adc
jmp
icebp
mov
cmp
call
or
inc
push
daa
fsts
mov
adc
testl
pushf
xor
les
jmp
xchg
sub
jns
das
int
sub
lds
les
mov
jle
lea
mov
fsub
push
mov
add
push
test
test
mov
add
mov
bound
or
ds
dec
sahf
icebp
dec
add
or
and
mov
or
fcompl
mov
add
int
pop
and
sti
sbb
cli
pushf
jecxz
push
testb
mov
sbbl
into
xchg
imul
and
movsl
and
repnz
test
or
fnstenv
aaa
fs
je
xchg
popf
jo
mov
idivl
sbb
dec
cltd
jle
push
loop
fisubrs
jo
shll
adc
xorl
xchg
cmp
dec
pop
pop
sub
ss
loop
out
add
push
js
scas
xchg
xchg
xor
andl
push
sbbb
insb
cmpsb
mov
add
rol
sub
pusha
pop
sahf
in
or
lcall
jmp
dec
mov
cmp
cmp
jmp
in
mov
xchg
mov
iret
sub
and
cmp
daa
aad
gs
add
mov
lods
lock
mov
stos
pop
mov
jno
sub
mov
icebp
lea
cmpb
xorl
xchg
mov
jecxz
sbb
add
cld
mov
xor
or
jle
test
lds
push
into
gs
jmp
in
pop
lret
insl
dec
adc
repz
flds
addr16
push
and
push
fisubl
fldt
push
jae
xchg
repnz
out
cmpsb
mov
jmp
or
xor
mov
lods
cmc
and
mov
in
scas
pop
mov
popa
loope
pop
mov
lds
adc
rolb
icebp
pusha
push
push
cmpsb
outsb
hlt
popa
cmp
fsubrs
adc
stc
jle
imul
mov
push
jnp
inc
fiadds
addr16
mov
int3
jno
in
std
jmp
xorl
and
xchg
gs
dec
jmp
notl
scas
add
pop
lods
out
clc
daa
or
push
cmpsl
xchg
add
repz
movsb
adcl
outsb
cmp
pushf
xrelease
insl
inc
push
sub
nop
imul
cli
iret
or
das
dec
scas
stos
fs
das
lea
ljmp
stc
inc
arpl
repz
jne
pop
cmpsb
test
imul
push
pop
inc
xor
adc
xchg
dec
mov
cli
aad
loope
stos
xchg
adc
es
or
insl
mov
in
nop
push
inc
rep
add
mov
outsb
dec
push
lds
jns
xchg
mov
pop
mov
shrb
leave
pop
je
cwtl
lods
mov
pop
xor
imul
aaa
inc
aaa
mov
xchg
subb
inc
sahf
mov
mov
int3
in
jmp
mov
idivl
ret
add
push
test
cltd
daa
fdivrl
loopne
fldenv
ficoms
or
dec
jle
push
or
xchg
movsl
cld
fmuls
cli
dec
push
sahf
add
xlat
clc
mov
femms
mov
out
test
sub
adc
cld
add
pop
sahf
jne
arpl
int
cld
int3
dec
clc
add
jo
inc
in
ret
xchg
mov
mov
repnz
inc
mov
div
lcall
inc
mov
les
adc
add
dec
push
insl
test
push
adc
mov
inc
lds
iret
jle
sbb
clc
or
dec
mov
mov
jae
xor
sahf
scas
adc
rcr
dec
imul
dec
mov
arpl
sub
in
dec
in
cmp
mov
sarb
popf
loop
int
outsb
adc
ret
add
dec
or
adc
in
loope
cmc
adc
push
test
pop
outsb
cmc
cltd
adcb
loopne
jae
mov
sti
sub
xor
test
test
jle
and
fildll
lea
dec
pop
scas
ljmp
inc
pusha
pop
ljmp
lock
loopne
mov
xchg
stc
mov
add
call
cli
jl
cmp
and
scas
incb
cmp
mov
inc
es
mov
push
insl
adcb
cld
cwtl
mov
add
pop
inc
mov
in
or
or
mov
xchg
fwait
xor
xchg
push
call
or
out
pminub
mov
add
test
bound
or
cmp
ret
pop
fstps
daa
cmpsb
dec
xor
inc
cmp
cmp
pusha
test
adc
mov
gs
test
push
xchg
jecxz
fidivrs
cli
xchg
mov
adc
and
mov
inc
dec
inc
cmp
push
jno
loope
lcall
clc
sbb
ljmp
mov
popa
and
pushf
inc
imul
inc
int
lods
lds
inc
outsb
loop
fwait
rclb
cmp
sbb
inc
jmp
inc
sub
push
mov
cmc
or
mov
bound
push
mov
in
add
jno
test
mov
and
sahf
cmc
jle
pusha
orb
mov
outsb
jle
pusha
sar
out
dec
and
mov
clc
test
cmp
testb
mov
addb
test
mov
adc
dec
pop
fs
push
inc
clc
add
xchg
int
xchg
lahf
xor
dec
and
cli
xorl
js
pop
imul
addr16
xchg
pop
testb
test
out
hlt
adc
jbe
fnstenv
scas
lods
subb
insb
insl
repz
xor
jno
in
xchg
and
loop
jp
sub
inc
inc
and
jo
jmp
jmp
sbb
cmc
jl
inc
out
inc
jmp
pop
in
inc
cmpsb
repz
xor
cmc
stos
xchg
and
pop
push
stos
fs
das
ret
mov
sbb
lea
jae
or
dec
iret
ss
push
cmp
push
test
aad
jle
push
fidivrs
pop
sbb
clc
or
mov
out
stos
mov
sub
jns
and
cmpsl
sbb
mov
in
mov
push
fldt
cmp
sbb
xchg
mov
in
xor
jg
and
imul
mov
mov
mov
gs
pop
pushf
jle
shlb
std
jo
xor
jl
into
loopne
clc
sub
sarb
or
cmp
idivb
int
push
mov
and
ds
daa
mov
repnz
push
das
jmp
mov
iret
daa
andl
xor
push
add
dec
push
dec
jg
nop
test
inc
pop
ja
cmp
and
jmp
in
pusha
mov
daa
mov
bound
lret
jnp
pop
mov
cmp
xorb
pop
adc
xchg
xchg
push
mov
es
pop
pop
push
rorl
or
jnp
stc
int
insb
into
loope
inc
lret
dec
repz
test
sub
outsb
cmp
test
js
xorl
iret
out
or
pop
stc
in
jo
lret
xchg
js
movsb
mov
dec
cmp
cmp
pop
rclb
mov
out
into
loop
inc
ret
cmp
and
jne
nopl
inc
jecxz
inc
dec
jns
outsb
movsl
rcr
push
cwtl
mov
or
xor
sti
cld
push
mov
inc
fbstp
into
leave
test
std
push
mov
mov
in
pop
fnstsw
fbld
in
sbb
xchg
dec
fs
dec
add
pavgw
dec
bound
xchg
mov
sbb
aas
adc
movsb
push
sbb
cmp
pusha
or
bound
ljmp
out
movb
cmp
sub
sahf
loope
pop
jg
mov
lods
adc
sub
mov
mov
pop
jle
mov
leave
inc
push
aad
popf
imulb
lods
xchg
outsl
push
dec
test
xchg
testb
in
sub
daa
push
xor
push
enter
add
cmpsb
jnp
jns
fisttps
add
cmp
mov
pop
mov
and
xchg
mov
cmp
imul
insb
ljmp
fildl
and
fnsave
cli
jbe
mov
pop
sub
jp
pushf
push
cmpsl
das
cmp
jae
inc
cs
in
jns
mov
xchg
mov
rclb
mov
adc
cmp
and
mov
outsl
movsl
sub
dec
cmpsl
fisubrs
adc
data16
popa
add
push
adc
xchg
fsubr
std
popf
ret
pop
aad
clc
dec
adc
xor
fs
or
pop
sub
nop
andb
dec
std
push
pop
dec
sbb
jmp
lret
pop
loope
adc
jmp
mov
mov
push
jle
rorl
mov
pop
insb
out
int
adc
xor
xchg
mov
and
jmp
jg
and
clc
mov
andb
aaa
jnp
cs
mov
out
nop
popf
mov
xlat
and
cmp
jmp
sub
cmp
cmp
dec
fwait
call
dec
repz
stos
mov
dec
dec
std
pop
fisttps
sub
mov
loope
inc
outsl
push
aas
add
sbb
mov
inc
lret
push
aad
adc
xchg
pop
movsl
fsts
adc
cltd
or
mov
shlb
inc
cli
sub
gs
jne
enter
and
call
daa
aad
and
dec
loop
mov
mov
loop
imul
enter
in
push
imul
push
jmp
ljmp
ret
mov
rorl
adcb
cmc
mov
test
imul
sarl
std
cmpsl
icebp
xchg
add
pushf
test
xchg
xchg
nop
data16
cmp
sbb
sarl
ret
test
mov
outsl
test
gs
mov
adc
lahf
cmp
sahf
cmp
lods
sub
sbb
jle
fiadds
sahf
test
in
cmpsb
rorl
movsb
sub
mov
int3
arpl
pop
movd
mov
dec
cmp
sub
inc
mov
xchg
mov
scas
push
subl
in
orb
push
jo
push
lea
xchg
mov
fidivrs
fsubs
dec
xor
and
and
lcall
mov
mov
dec
out
scas
dec
rcr
daa
gs
dec
dec
out
popf
jmp
lea
rolb
or
fistl
out
or
push
imul
repnz
lahf
adc
loopne
sbb
nop
adc
mull
or
fmul
adc
pop
cmpsb
mov
comiss
or
data16
leave
xchg
stc
in
jns
out
ja
and
xchg
sub
stos
cmp
or
aam
sbb
inc
inc
lock
fs
movl
and
mov
sub
out
mov
mov
dec
in
aad
ds
lods
fwait
out
out
stos
mov
inc
sub
filds
and
push
add
sarl
jae
add
aaa
aas
idiv
xlat
add
outsl
imul
xchg
push
aas
adc
mov
pushf
pop
pop
pop
mov
nop
cmp
mov
hlt
fbstp
movsb
or
popa
pop
inc
pop
test
mov
in
adc
inc
mov
mov
pop
imul
mov
ret
dec
push
xchg
test
repz
lods
jb
push
mov
mov
shrb
adcl
aaa
enter
fisttpll
jge
lds
insb
dec
xchg
leave
fxch
imul
clc
mov
int3
pop
mov
arpl
scas
xchg
push
out
inc
clc
push
lea
lods
adc
push
jge
sbb
or
hlt
data16
pop
outsl
lret
cwtl
xor
push
imul
pop
daa
or
out
pop
lahf
and
and
pop
sbb
stos
in
mov
mov
mov
jle
xchg
or
cmp
imul
enter
std
pop
sub
into
insb
mov
imul
xor
mov
lods
dec
cwtl
add
mov
cmpsl
push
add
aas
add
jns
mov
rcr
jne
iret
jecxz
xchg
fwait
sub
inc
and
xchg
ds
push
ror
jne
jo
xor
and
popf
xor
jnp
divb
fnstenv
or
orl
clc
aad
inc
roll
in
addr16
jne
xchg
lea
jg
sahf
enter
mov
and
dec
and
sub
pop
sub
ss
rcrb
je
push
jno
lock
or
add
cmp
xlat
push
iret
pop
inc
pop
icebp
jecxz
aas
and
insb
les
or
sbb
imul
xor
add
sarb
mov
fcmove
push
xor
push
addr16
out
sahf
and
outsl
or
adc
mov
js
xchg
mov
fisubl
loop
sub
js
jmp
ja
push
call
mov
pop
aas
pop
fistl
mov
sbb
pushf
or
addr16
shld
mov
push
gs
sub
jge
popf
fsubrp
dec
dec
into
insb
inc
loop
jns
dec
iret
mov
mov
mov
push
push
adc
mov
mov
cmc
adc
add
ds
decl
jo
sub
out
out
les
push
mov
jge
add
cwtl
enter
movsl
rcrb
cld
adc
xchg
jle
cmp
sub
add
push
mov
loopne
push
mov
xchg
sbb
fwait
xchg
cmc
mov
js
scas
jmp
sti
jnp
stos
in
mov
push
sbb
out
xor
pop
out
cmc
sbb
inc
pop
fsubrs
dec
add
inc
cmp
or
or
xor
cmp
cli
lret
pop
rorb
jl
arpl
lods
dec
xor
sti
mov
les
insl
scas
add
jnp
faddp
mov
minps
je
stc
pop
hlt
jg
mov
pop
sbb
sarb
mov
cmp
hlt
push
mov
xchg
loopne,pn
icebp
xor
dec
mov
rcr
mov
jb
rorb
push
or
jmp
push
or
xor
jl
add
sub
mov
daa
pop
jecxz
add
xor
loope
mov
shlb
push
adc
movsl
xchg
mov
aaa
xorl
add
xchg
fildl
sbb
cli
mov
aas
nop
mov
cmp
fwait
push
pop
sub
push
jg
mov
push
test
pop
aaa
jmp
insb
hlt
pop
dec
mov
sub
dec
and
mov
popa
lods
xchg
out
add
xor
bound
jl
scas
push
mull
lret
not
sarl
outsb
lcall
je
pop
mov
or
xor
and
mov
cmc
in
adc
pop
mov
mov
imul
mov
fsubs
fistpl
stc
push
and
and
std
inc
int
lret
jbe
stc
inc
pop
hlt
adc
nop
lret
xchg
cwtl
and
pop
pushf
inc
lods
fs
sarl
roll
add
jo
mov
shrb
inc
push
imul
out
rcrl
push
imul
nop
cld
outsl
push
mov
pcmpgtd
dec
cmpsl
aam
sub
stos
and
jg
or
sbb
stc
xor
test
xor
xchg
popf
pop
decb
or
bound
mov
adc
mov
cli
insb
enter
mov
jo
outsl
test
jo
cmc
dec
stc
mov
shl
cmpsb
dec
jecxz
add
sbb
push
icebp
jno
fnstsw
mov
aad
lods
jmp
jno
add
sbb
fs
sbbl
clc
inc
add
sbb
fwait
xor
mov
sub
pop
push
inc
sbb
rcl
leave
pop
jmp
add
or
test
sbb
gs
pop
push
arpl
adc
pusha
push
jmp
into
ret
shrb
stc
lods
mov
and
inc
das
mov
pusha
fs
xchg
lods
mov
test
cli
mov
and
int
mov
test
sbb
mov
sarl
mov
add
loop
in
addr16
inc
sub
repz
dec
pop
fstps
push
mov
shr
jnp
adc
arpl
enter
mov
pop
fs
and
mov
mov
rcl
jnp
inc
mov
std
jl
f2xm1
rcr
and
adc
xchg
and
leave
xchg
stos
inc
addr16
mov
jb
push
scas
cmp
add
xor
fwait
and
cltd
icebp
jbe
cwtl
pop
sub
das
push
dec
lcall
cmpxchg
add
pop
dec
mov
inc
jns
fistps
xchg
rcrl
sub
push
bound
pop
insl
fmul
pop
inc
pop
cmp
cmpsl
stc
pushl
test
xchg
dec
adc
adc
out
das
stos
jno
jmp
out
int
cwtl
call
mov
pop
mov
cmpb
lods
lods
je
enter
jmp
aaa
jb
dec
push
pop
test
xor
lret
and
jbe
add
or
dec
stc
and
adc
adc
jb
inc
mov
ret
int
in
push
outsb
mov
jbe
loop
sbb
xchg
push
dec
in
test
push
psraw
scas
inc
imul
stos
ja
dec
fs
aad
ficoms
test
inc
mov
scas
xor
jb
icebp
xor
in
mov
cmp
ret
pop
push
dec
pop
dec
loopne
and
shlb
sarb
ss
cmpsb
loopne
mov
gs
loopne
pop
pushf
push
nop
cld
jge
mov
das
adc
in
sbbl
jnp
lahf
into
enter
mov
jns
pop
and
cmc
pop
ljmp
in
dec
xchg
imul
sbb
jecxz
mov
scas
and
pop
arpl
inc
fs
inc
mov
pop
ret
and
subl
idivb
xchg
add
xor
pop
jp
lahf
pop
jns
out
stc
iret
sbb
outsl
mov
xchg
jbe
sub
mov
mov
add
xchg
call
aad
outsl
mov
mov
inc
aad
call
or
scas
mov
fbstp
into
add
insl
dec
movsb
fsubr
mov
xor
xor
gs
push
bound
xchg
mulb
mov
stc
and
jno
aam
leave
les
xor
jb
xchg
addr16
add
xchg
aad
inc
in
push
negb
lcall
dec
and
cmp
bound
pushl
add
xor
mov
call
int
je
xlat
ret
xchg
iret
or
jnp
jae
in
pushf
jge
andl
aas
pop
int
jl
mov
jp
pop
xchg
insb
in
adc
xchg
js
mov
mull
dec
dec
fnstenv
push
ljmp
pop
mov
cmpb
sub
lret
loop
jns
repnz
outsl
dec
scas
aam
and
or
leave
push
and
fwait
divl
sub
push
and
aas
loop
lcall
jmp
mov
sub
ljmp
cmp
add
xor
sub
push
jno
pop
mov
jmp
mov
cmpsb
les
inc
fisubs
call
lock
push
stos
out
imul
and
xor
add
mov
inc
jle
inc
mov
rol
out
enter
ret
lret
scas
sbb
out
jae
jne
mov
xchg
xchg
fstl
scas
push
pop
sub
dec
enter
aad
and
fs
sub
insl
and
in
jle
adc
lea
pop
repnz
mov
dec
cwtl
shlb
in
lods
mov
cmc
sbb
jmp
fcompl
xor
or
add
sbb
pop
xor
sub
mov
test
jno
xchg
mov
dec
cmp
shll
mov
pop
mov
insb
dec
mov
repz
mov
imul
repnz
and
inc
pushf
stos
hlt
stos
orb
pop
fcompl
out
mov
add
aas
lret
sbb
add
push
jb
pop
not
into
xor
in
jne
and
xorb
xchg
xchg
push
cmp
mov
repz
inc
cmpxchg
xchg
notb
fisttpll
and
test
or
pusha
stos
lret
push
add
and
push
sbb
repz
mov
stos
jne
inc
xchg
pop
xor
fidivrs
xchg
sar
jns
imul
mov
sahf
mov
mov
mov
movsb
lea
repnz
and
mov
sbb
dec
cs
hlt
adc
ds
inc
dec
dec
iret
sbb
push
mov
dec
gs
cli
es
fadds
sub
sub
call
cmp
pop
ret
mov
addr16
jae
outsl
mov
mov
pusha
icebp
or
bnd
and
or
rclb
adc
sub
stos
mov
inc
xor
sub
push
testl
jecxz
and
cmpsb
fiadds
or
leave
jo
xchg
sbb
sti
xor
and
clc
int
orl
mov
stc
popa
mov
jl
std
add
or
stos
into
fcompl
pop
dec
lcall
mov
mov
mov
sti
fstl
rclb
xchg
sub
hlt
cmp
jbe
into
shrl
mov
inc
or
mov
in
xchg
repz
imul
movb
cmp
xor
cmp
icebp
inc
dec
sbb
pop
outsl
push
mov
outsb
mov
add
rorl
fs
and
cmpsb
arpl
out
xchg
add
inc
push
mov
inc
andl
scas
mov
jg
fnstsw
dec
rorl
das
repz
push
cmc
fdivrl
jle
cmpb
shlb
push
aas
pop
mov
or
lock
loope
xorb
pop
cld
or
and
leave
or
arpl
jne
push
or
rolb
pop
dec
cmp
adc
sbb
xor
scas
jle
xchg
out
adc
sbb
inc
ret
jl
add
cltd
mov
es
shr
int
pop
jns
lret
stos
jg
fwait
mov
leave
xor
test
xchg
mov
popa
xchg
adc
lcall
dec
lock
cmpsl
aas
sahf
or
inc
push
adc
mov
adc
cmpl
cmc
loop
lcall
sub
aaa
hlt
pop
xor
cmp
and
scas
in
into
pop
outsl
add
daa
inc
clc
stc
popf
addr16
pop
ja
mov
xor
dec
ficompl
inc
push
in
jl
out
sbbl
leave
push
adc
subl
rolb
in
mov
lea
pop
sbb
pop
mov
das
sti
cmp
fsubr
inc
or
inc
fsts
adc
pop
mov
cwtl
loopne
xchg
cwtl
mov
aaa
fiaddl
rcrb
push
jmp
aas
jmp
xor
add
fiadds
xchg
and
and
aas
mov
mov
xchg
or
xor
add
adc
popf
jb
ja
dec
arpl
in
dec
movsl
lea
sub
sbb
jne
push
xchg
adc
sbb
dec
and
adc
mov
ret
or
mov
pop
inc
sbbb
or
aad
movsb
xchg
outsb
test
adc
repz
push
repnz
movb
jne
dec
fisubs
push
jno
fisttpll
mov
xor
push
orb
adc
push
mov
mov
xchg
fimuls
jle
jmp
test
xchg
dec
xor
aad
mov
dec
mov
inc
mov
imulb
pop
sbb
mov
pop
sub
inc
jmp
out
pop
or
pop
nop
filds
loop
mov
testb
pop
adc
sub
jge
sub
cltd
fwait
mov
inc
outsl
mov
in
nop
shrb
es
dec
call
add
ret
inc
fdivl
data16
mov
call
repnz
mov
mov
pusha
xor
xor
xor
or
pop
int
into
arpl
pop
and
inc
mov
notl
repnz
mov
test
adc
ret
jae
mov
dec
shrl
add
dec
outsb
xchg
out
lret
sub
add
and
sbb
js
and
fcoms
loop
jno
test
add
adc
fdivrp
ret
jo
lret
stos
dec
cmpsl
clc
or
in
lea
stos
jno
mov
mov
mov
sti
jnp
lret
add
xchg
mov
xchg
xchg
imul
andl
adc
insb
pop
add
mov
cld
out
mov
cmp
inc
ror
imul
xor
inc
add
fidivrs
jns
and
cmpsl
xchg
test
and
push
jo
hlt
test
cli
or
add
push
fsubrl
xor
rclb
mov
push
iret
inc
push
xor
fnstcw
pushf
out
push
dec
test
sbb
bound
cmpsl
mov
xor
int3
or
mov
cmpsl
sbb
pop
imul
pop
loope
or
fs
dec
loop
mov
out
and
sub
mov
inc
out
jbe
adc
fs
fnstsw
fldenv
rcl
lods
dec
cltd
mov
sbb
das
mov
arpl
sahf
shl
repz
icebp
call
aam
bound
lds
add
in
cmp
adc
ljmp
cwtl
das
mov
pop
jno
sub
into
popa
add
cmp
sbb
and
into
push
jecxz
pop
shlb
dec
cs
inc
sbb
inc
mov
dec
push
or
test
aam
fmul
mov
fs
pop
mov
imul
jecxz
inc
mov
stos
ljmp
decb
clc
shrl
xchg
mov
les
dec
mov
addr16
scas
xchg
mov
scas
test
inc
or
sahf
cwtl
adc
push
movsb
shrl
or
dec
fldt
lds
push
je
jno
jecxz
outsl
movsl
ret
cmp
or
rcr
sub
push
dec
push
insb
xchg
dec
ffree
dec
ret
shl
fstpt
shl
pop
sbb
lcall
imul
in
xchg
jo
lret
dec
jne
jge
sub
jecxz
xor
or
outsl
cmpl
push
dec
xor
lds
ljmp
add
insl
outsl
cmpl
lods
add
fcmovnu
fwait
arpl
in
cmpsb
test
test
xchg
xor
movsb
mov
mov
mov
aam
jo
test
popf
xor
mov
std
xor
flds
sub
push
test
or
pop
ret
cwtl
jb
cmp
cld
popf
fidivl
jmp
push
push
mov
and
cmc
xchg
xchg
add
mov
les
test
sub
mov
in
cld
repz
sub
sbb
mov
outsl
ds
insl
cs
cmp
enter
mov
mov
int
and
sub
mov
negb
cmp
mov
sahf
aas
adc
sbb
mov
push
addr16
jno
xor
pushf
sti
xor
mov
insl
cmp
mov
jl
fsubs
cmp
gs
movnti
andl
xchg
repnz
les
outsl
inc
push
lds
jae
and
clc
pop
xchg
mov
ljmp
jbe
jmp
dec
sahf
jl
xchg
jns
outsl
jno
pop
pop
fidivl
or
insl
iret
xchg
xor
std
inc
mov
fnsave
mov
mov
icebp
sti
mov
mov
or
popl
inc
leave
insb
push
icebp
call
add
cmpb
jg
ljmp
jae
popa
cmp
pop
dec
pop
sbb
sti
adc
and
addb
inc
mov
js
mov
dec
jmp
in
push
adcb
cmpsl
cmc
pop
fdivs
stos
mov
shll
imul
mov
mov
jle
xchg
pop
cmpsl
mov
shrl
roll
inc
in
repz
test
lret
mov
adc
lahf
push
jp
xchg
scas
out
add
add
jmp
jnp
push
cmpsb
dec
sbb
mov
push
sub
cli
cmpsb
cld
xchg
fcomps
jns
dec
inc
lcall
and
push
or
into
outsl
fbld
or
movsl
and
dec
sub
xchg
call
xlat
mov
push
cmpsl
and
cwtl
cld
lahf
jae
ljmp
lcall
or
cmp
fdivp
imul
mov
je
pop
xchg
mov
iret
fdivs
sub
mov
lock
loopne
sub
mov
sbb
sbb
imul
movsb
fistpll
adc
imul
jg
mov
sarb
mov
fmuls
jae
dec
enter
ja
mov
xchg
outsb
push
xchg
scas
push
sbb
xor
call
or
cmp
mul
aaa
mov
jo
std
lods
mov
mov
popa
adc
cmpsb
inc
lret
push
hlt
popa
call
pop
push
ja
call
sub
stos
aaa
cmp
out
rcrb
adc
push
lods
add
pop
cwtl
insl
popl
mov
daa
xlat
push
mov
push
imul
int
jo
fisttpll
xchg
lods
outsl
adc
xor
cmpl
adc
enter
adc
stc
imul
incl
mov
sub
jg
fdiv
cmc
lea
mov
or
jno
sub
fildll
inc
shl
jbe
pop
mov
adc
ret
add
add
cmpsb
jnp
cmp
mov
pop
pop
fwait
pop
in
push
sub
data16
hlt
adc
mov
mov
pop
mov
int
les
call
test
shrb
movsl
add
pop
movsb
scas
sbb
ffreep
fdivs
fstpt
sbbl
sub
inc
push
inc
dec
lea
jecxz
fsts
arpl
pop
outsb
mov
inc
push
xor
jmp
xchg
fimuls
push
pop
ds
popf
sub
in
leave
das
and
add
inc
pop
xor
bound
or
aaa
lahf
sti
xchg
sarb
ljmp
adc
xor
mov
pop
lock
rol
loop
cmp
pop
xchg
xchg
lds
jnp
fs
jne
jp
xchg
sub
rcrb
inc
and
push
mov
aad
fdivs
inc
inc
mov
mov
in
aam
jns
push
push
std
cmp
mov
in
fisubrs
inc
push
cmp
mov
xchg
mulb
jge
mov
or
lahf
mov
imul
clc
sbb
je
inc
mov
dec
sbb
lods
aam
mov
adc
inc
sbb
aaa
jecxz
inc
fidivrs
mov
je
push
nop
sub
xchg
stos
push
ss
push
aas
addr16
dec
mov
test
cmpsl
mov
aaa
inc
pop
das
xor
aam
or
dec
cmpps
pop
jecxz
cmp
outsb
and
jae
xchg
sbb
mov
sbb
movsl
xlat
movsl
jmp
jge
popf
sub
movsl
inc
lcall
push
pop
jae
aam
std
pushf
pop
or
out
mov
xchg
push
mov
icebp
cmpsb
jle
cltd
popw
lahf
addr16
mov
nop
jae
mov
cmp
iret
mov
jg
popf
cmp
int
sbb
dec
sbb
cmpsl
push
lret
jp
adc
int
daa
fs
fldenv
mov
dec
gs
inc
pop
fidivl
and
sub
popa
xchg
shl
jmp
inc
jg
sbb
inc
push
inc
clc
push
in
sub
stos
add
negb
int
imul
test
adc
mov
mov
jle
outsl
sub
cmp
ss
pop
inc
pop
jb
les
inc
add
cmp
mov
fistps
mov
or
sti
test
int3
fmuls
push
inc
jae
sub
inc
or
or
dec
dec
stc
add
xor
and
inc
out
mov
int3
jo
mov
pop
pushf
mov
cmpsb
sub
test
add
or
pop
addr16
adc
dec
ret
jno
lcall
cmp
xchg
leave
aaa
inc
roll
add
dec
sub
mov
subb
dec
das
xchg
sub
test
pop
pop
out
sbbb
cmpsb
lea
add
nop
ret
es
out
cli
and
push
mov
js
sti
popa
loope
mov
sub
cmpsb
push
cmc
add
lcall
popf
push
mov
mov
cs
pop
sub
pushf
int
mov
push
cmp
inc
mov
aad
xor
jl
pop
in
push
outsb
fsubr
popf
xor
pop
das
aas
lods
jo
call
ret
loopne
ficompl
jae
les
adc
sbb
inc
inc
adc
or
mov
xchg
loope
cmp
pop
out
lret
test
sub
mov
icebp
jno
push
or
shlb
rclb
inc
ret
jb
mov
sbb
inc
pop
and
test
shl
out
test
jp
mov
xchg
scas
pusha
and
jbe
inc
sahf
add
es
dec
xchg
clc
sahf
cwtl
and
inc
pop
cmp
scas
sti
cmp
shll
fdivrs
movsl
inc
enter
inc
fistpll
mov
aad
cmp
xor
adc
jle
in
out
push
nop
pop
daa
sbb
bound
inc
pusha
adc
adc
shrb
and
xor
jae
xor
fwait
inc
dec
movsb
gs
mov
jl
sbb
in
mov
adc
sbb
or
enter
add
mov
cmp
andb
push
cmc
int3
add
lret
das
aas
sbb
inc
test
or
lock
inc
inc
mov
jecxz
aas
mov
mov
jnp
xor
xchg
dec
cmp
jns
push
in
loope
push
jnp
out
xchg
jno
enter
sbb
mov
call
aad
inc
dec
jle
mov
xchg
fcompl
cmp
xor
xchg
jp
pop
mov
sbb
or
dec
xor
imul
jl
lgs
aas
inc
rcll
push
arpl
aam
leave
jno
clc
mov
lret
iret
pop
fcoms
add
je
outsl
or
ja
or
sbb
pop
cmp
mov
adc
lcall
cmpsb
mov
addr16
jo
call
add
jae
fidivl
xor
inc
ror
pop
mov
sub
sahf
jo
shrl
test
push
filds
orb
push
adc
pop
orb
sub
loop
or
pop
and
fadds
push
not
xor
ficomps
cmp
xchg
sub
mov
adc
mov
imul
repnz
and
push
aad
mov
lods
insb
enter
pop
mov
jbe
sub
push
mov
lahf
adc
mov
shll
mov
cld
sbb
test
cmp
ftst
inc
test
or
loop
test
jo
adc
mov
or
pavgb
in
xor
cwtl
ljmp
dec
scas
pushf
daa
imul
xchg
pop
jbe
add
pushf
xchg
mov
jmp
data16
test
fstl
fcoms
iret
cmpsb
leave
push
adcl
dec
in
ljmp
xor
mov
ret
icebp
dec
xchg
or
add
jae
sub
cmc
decb
jne
adc
lahf
in
jle
fiadds
pop
mov
call
xor
and
out
scas
jl
xchg
jb
sub
adc
cli
pushf
cli
adc
pop
cmp
popf
or
inc
sahf
xchg
and
cld
pop
outsb
sbb
sub
subl
lahf
xchg
je
push
xor
lods
repnz
dec
std
push
cmpsl
jge
into
and
jle
add
xchg
stos
jg
mov
push
fstpt
out
sub
ret
nop
adc
sahf
jae
and
dec
dec
daa
testb
sub
add
sub
mov
scas
test
push
jecxz
iret
or
movsl
mov
bound
inc
fwait
cwtl
fiadds
xchg
xchg
and
pop
popf
pop
hlt
push
aam
shll
imul
sahf
push
lods
push
test
or
xor
and
movsl
fs
jg
inc
cmc
scas
jmp
inc
xor
and
ffree
sbb
sti
cmpsl
jl
mov
fcomps
add
in
pop
mov
out
mov
jecxz
inc
lcall
and
jge
repz
push
mov
iret
and
adc
aaa
or
adc
mov
fadd
mov
arpl
and
ret
push
cmpsl
scas
mov
add
mov
shrl
mov
out
scas
gs
test
loope
loopne
ret
sub
in
aaa
push
jb
dec
mov
xor
sub
add
aam
sub
dec
imul
push
sbb
xor
scas
push
sbb
mov
bound
bound
aaa
mov
xchg
cmp
dec
push
lods
mov
clc
inc
leave
sbb
outsb
push
push
dec
and
mov
jnp
push
jecxz
pushf
or
inc
fsubs
or
inc
scas
lods
push
movsb
out
jae
add
jno
ds
adc
outsb
outsl
push
shrb
sbb
ljmp
insl
cmp
push
mov
insb
scas
fmul
xchg
xchg
jno
das
inc
jns
mov
push
cmp
push
adc
adc
call
cld
adc
mov
scas
inc
dec
data16
aas
enter
out
and
outsb
add
push
pushf
mov
call
rcrl
and
mov
sub
and
cwtl
jnp
jge
leave
inc
shlb
in
inc
push
ret
je
mov
ret
adc
repnz
aas
mov
pop
mov
jb
loopne
gs
pop
cmp
in
pushf
cmp
shlb
mov
addr16
adc
cmp
gs
std
jno
dec
pop
popa
sub
mov
sbbl
out
adc
mov
cmp
sub
push
sub
in
pop
dec
mov
lea
sub
sub
dec
movsl
inc
inc
mov
xchg
sub
cmpb
data16
adc
xor
scas
jb
in
bnd
and
add
in
lods
lds
dec
addr16
data16
or
push
inc
repz
ds
dec
cmp
loop
mov
gs
xlat
repz
rcrb
mov
repnz
sbb
pusha
loop
jp
jg
dec
xor
pop
inc
call
jl
ljmp
rcl
jb
dec
cld
xchg
jae
mov
leave
lods
jnp
pusha
sbb
pop
push
lods
xchg
or
addb
clc
lcall
negb
mov
cmp
pop
in
dec
or
ds
jne
test
aaa
pop
mulb
sbb
push
mov
push
loopne
ret
pop
add
mov
pop
insl
in
gs
arpl
push
pop
xchg
imul
inc
or
inc
cmp
hlt
jle
lods
jnp
and
jno
lds
stos
iret
andb
in
out
sbb
cwtl
inc
out
jb
imul
xchg
fdivrs
jae
enter
push
pop
jmp
imul
and
stos
ffreep
mov
std
adc
aad
push
or
dec
pop
addr16
nop
sub
out
and
mov
test
push
jns
xor
push
lds
inc
mov
icebp
mov
js
std
out
int3
mov
fistps
mov
cs
aam
dec
push
leave
fdivrl
sub
out
mov
lahf
and
sti
mov
les
js
fsubrl
adc
cltd
and
push
mov
cs
push
arpl
and
adc
shlb
mov
cmc
fsubs
add
js
fwait
xor
test
imul
int3
mov
mov
andl
or
sbb
test
rclb
hlt
xchg
aaa
inc
mov
jnp
and
sub
lret
cld
ss
mov
adc
inc
cmpsb
mov
inc
xlat
je
inc
test
add
sahf
ja
push
out
pop
dec
or
inc
subl
popf
inc
out
push
jmp
scas
subb
aad
in
movsb
and
and
mov
in
dec
fldt
in
outsl
jo
push
xlat
sub
xchg
mov
jno
pop
lahf
add
mov
data16
dec
jnp
loop
push
jo
cltd
popa
xchg
cmp
daa
inc
mov
and
mov
insl
jle
pop
call
and
jb
xor
and
orl
es
mov
push
orb
shrl
jg
cmp
sub
adc
sub
jne
pushf
inc
add
push
and
cs
sbb
fdivl
sti
cltd
adc
cmp
dec
ja
mov
fcompl
xor
pop
stc
stos
cmp
int
dec
hlt
push
jo
jb
mov
and
mov
adc
mov
lret
and
ljmp
js
sbb
sub
inc
inc
out
dec
jb
mov
dec
mov
xchg
pop
fwait
adc
xor
xor
mov
les
jns
out
shr
and
jecxz
xchg
loop
stos
mov
sub
mov
std
test
outsb
mov
pop
dec
or
fstl
insb
ljmp
mov
fsubrp
mov
fs
sarl
cli
inc
fcompl
inc
or
in
adc
stc
push
lods
call
or
sahf
sbb
ljmp
shl
pop
daa
movsb
ja
and
mov
testl
das
ds
scas
test
mov
mov
add
mov
sti
and
int
mov
cmpsl
mov
cwtl
subl
fdivp
adc
rorl
insb
jb
repz
sub
pop
test
dec
ficomps
aas
jp
mov
sub
out
into
or
mov
les
divl
ror
in
or
fimuls
rolb
les
mov
sub
pop
push
add
adc
lods
rorl
and
int
lock
outsl
movsl
sbb
aas
lret
xchg
xchg
pop
bound
nop
inc
sub
dec
dec
fwait
xor
pop
add
popf
and
xlat
mov
inc
shrb
add
dec
cmp
mov
call
dec
fiaddl
jns
pop
iret
loopne
popa
or
adc
sbb
pushf
fs
xor
test
xor
sbb
int3
xchg
idivb
cmp
sub
iret
dec
stc
mov
inc
movsl
lret
xlat
mov
fadds
rolb
xor
add
sub
jmp
jae
sub
push
das
dec
adc
testl
pop
push
cmpl
popa
test
aad
aad
les
mov
repnz
mov
sbb
repnz
mov
mov
outsl
nop
shl
repz
push
insl
push
cs
mov
add
daa
cli
mov
int
push
fs
gs
pop
lds
jns
js
pusha
mov
lret
xor
and
jno
and
les
imul
lahf
or
jbe
and
test
push
int3
fiadds
push
je
test
mov
adc
jnp
xor
popf
test
inc
push
inc
shl
adc
aaa
cmp
sahf
addl
mov
popa
sahf
pop
rcll
inc
scas
lea
insl
mov
mov
lea
sbb
inc
insl
pop
subb
or
fwait
sbb
ljmp
xchg
pusha
xchg
pop
jne
inc
cmp
adc
xchg
pop
add
jl
out
jge
push
sbbb
add
xchg
add
cmpsl
pushf
jg
mov
sub
cmp
les
scas
adc
hlt
or
mov
mov
push
sub
lods
fucomi
mov
jge
aad
add
faddl
in
stos
ret
ret
xorb
pop
sbbl
push
xor
aaa
shrb
sub
xchg
cli
lods
push
pop
fstpt
lea
sbb
iret
test
lret
js
push
inc
sub
fcmovu
mov
xchg
imul
rcll
dec
pop
out
test
test
cs
mov
scas
xchg
or
rorb
hlt
jl
out
insb
bound
sbb
cmp
lret
inc
out
cmp
lock
sbb
cs
jecxz
out
adc
xchg
mov
adc
adcl
insb
negb
jae
mov
cmpsl
in
addb
int
lahf
mov
pop
inc
add
adc
fsts
dec
mov
or
push
out
mov
test
imul
clc
lods
sub
pop
push
cs
jg
scas
insb
lret
xorl
xor
mov
dec
pop
cs
arpl
and
ret
insl
inc
xchg
sbb
and
mov
push
push
pop
scas
jnp
jns
dec
sbb
push
cmpl
sub
nop
and
iret
push
mov
fnclex
or
daa
aaa
add
rolb
cltd
adc
das
cli
mov
jge
mov
mov
or
inc
into
jle
pop
push
sbb
scas
jecxz
loopne
mov
push
push
cmp
xchg
dec
mov
mov
js
sbb
push
push
imul
roll
xrelease
jns
lods
push
jbe
jnp
sbb
ss
mov
mov
lea
stos
xchg
dec
sub
push
push
or
pop
in
lds
add
adc
iret
xor
mov
sub
or
in
fistpll
push
dec
aad
jg
jnp
jae
push
inc
rorb
sub
pop
jnp
xor
adc
pop
stos
pushf
and
sub
in
mov
push
in
xchg
mov
das
mov
jae
ljmp
mov
rcll
mov
hlt
lret
add
lods
les
add
xchg
test
rcrb
fbld
repz
and
pop
mov
and
xor
rclb
pop
jg
cli
int3
cmp
nop
stos
ss
shlb
mov
clc
ror
das
adc
and
decb
inc
sub
in
pop
jb
jle
cmp
pop
push
gs
pop
xor
pop
add
jle
push
add
sahf
inc
xchg
ja
movb
inc
clc
mov
cmp
jb
icebp
mov
push
out
dec
popa
adc
scas
cmp
outsl
outsb
jb
in
mov
dec
jae
add
add
movsb
outsl
stc
or
mov
ljmp
dec
mov
jl
aam
enter
jo
pop
jb
xchg
dec
cmp
fstpt
clc
add
ss
fimuls
push
dec
shrb
pop
sti
mov
repz
movsl
bound
in
aas
push
in
cs
sub
repnz
pop
in
push
jp
sub
mov
sub
mov
int3
lea
out
inc
ds
push
hlt
sar
sbb
test
movsb
je
arpl
insb
rcrb
mov
xchg
daa
and
pop
pushf
jne
leave
pop
dec
or
das
repz
es
dec
scas
push
jge
xor
lcall
shr
jno
and
daa
and
pop
sbb
cmp
pop
jg
fwait
mov
loope
add
dec
push
inc
pop
mov
add
hlt
dec
fisttps
sbb
jnp
sbb
fwait
outsl
mov
es
or
inc
aas
sbb
bound
mov
fists
arpl
fists
cltd
xchg
xchg
mov
cmp
loope
imul
ss
lock
notb
sub
sub
out
lds
add
push
xchg
pop
aad
int
out
inc
push
out
out
dec
daa
lahf
mov
inc
stc
cmp
cmpsb
les
jo
ret
push
adc
cmp
add
push
scas
cmp
loop
xchg
adc
add
jecxz
jmp
arpl
fs
mov
and
sbb
mov
lret
jg
dec
mov
popf
stos
sbb
loop
sub
inc
push
xchg
jle
movsb
cmp
sbb
mov
addr16
cwtl
out
out
out
cltd
je
fs
dec
mov
sub
pop
int3
scas
mov
sub
adc
stos
xlat
pop
xchg
lock
push
ljmp
orb
or
pop
out
push
cs
sbb
sub
xlat
xor
andnps
idivl
sbb
movsl
cmp
icebp
fstpl
mov
shrl
add
mov
sub
mov
es
push
inc
pop
cmp
sub
push
inc
sbb
push
sbb
xchg
dec
test
lret
adc
mov
je
jbe
je
mov
push
jne
sti
jbe
pop
mov
int
pusha
hlt
jnp
fstps
fadd
xchg
stc
mov
loop
push
ret
push
out
hlt
jae
mov
stos
xor
push
adc
movsl
inc
push
jno
mov
adc
fisttps
inc
xor
fstps
icebp
push
pop
scas
mov
pop
insl
lea
outsl
nop
shr
test
adc
adc
in
insl
dec
pop
stos
pop
mov
sub
test
rcl
out
push
notb
sbb
shlb
cmovle
cmp
jge
outsl
out
aam
dec
mov
mov
push
mov
adc
xchg
les
xchg
jnp
dec
xor
push
and
pop
mov
jmp
sti
pop
movsl
loopne
aam
inc
xorb
sti
das
addr16
insb
or
mov
rcr
stc
xorl
cmp
in
sti
out
mov
push
and
test
adc
mov
insl
shlb
xchg
rol
mov
or
test
in
fistl
cmp
cmp
jb
push
pop
mov
lahf
cmp
out
adc
addr16
cmp
inc
mov
fsubrl
call
in
push
testl
jg
ret
bound
push
push
shrb
es
repz
xlat
ja
shll
aas
out
std
xchg
push
inc
popf
jp
inc
fnstsw
fldenv
iret
push
faddp
addr16
fmuls
xchg
scas
add
stos
xor
lock
xchg
out
cli
xchg
xchg
or
ror
pop
movsb
cltd
test
int3
es
and
imul
xchg
data16
cltd
sbb
add
xor
push
fnstenv
shll
shl
mov
sub
jns
xchg
sbb
jg
aad
stos
pop
jo
cld
inc
daa
lcall
adc
in
jg
stc
and
jp
lahf
dec
in
add
push
in
arpl
xchg
in
test
inc
add
xor
dec
mov
jl
fimull
push
pop
xorb
fdiv
mov
rorb
int3
lea
jge
sub
movsb
mov
dec
add
sahf
call
sub
and
and
and
and
pusha
ficoml
mov
or
mov
add
mov
outsl
lahf
and
jl
adc
or
dec
push
or
test
cltd
push
jns
call
and
jbe
stos
xorl
scas
push
cmp
mov
fnstsw
sbb
add
cmp
xchg
imul
aam
or
lock
xchg
mov
add
mov
push
or
or
sbbb
dec
fistpll
cmpsb
and
js
ljmp
sti
inc
in
pusha
xor
inc
inc
push
or
out
icebp
clc
sub
jno
in
mov
mov
sub
xor
cs
jns
xor
xchg
mov
das
mov
iret
cmp
hlt
push
cmp
icebp
and
pop
pop
fcmovnb
lret
mov
aaa
and
jmp
leave
mov
xor
sbb
inc
fistpll
jecxz
fs
dec
push
sub
add
adc
sub
push
mov
lods
mov
add
push
mov
out
jmp
fnsave
pop
mov
iret
in
sub
leave
push
ss
pop
and
cltd
adc
mov
cs
outsb
in
stos
adc
add
out
cld
pusha
std
cltd
shlb
sahf
xor
mov
dec
push
mov
rclb
test
mov
jb
pop
pop
cmp
jo
pushf
xchg
or
sbb
push
icebp
add
push
mov
out
mov
test
inc
test
cmp
inc
push
inc
push
out
cmpsl
sarb
inc
fsubs
adc
add
popa
adc
cmp
inc
sti
xlat
stc
jns
ljmp
stos
jmp
pop
js
sub
stos
rep
mov
insb
or
push
lahf
neg
dec
add
sbbl
movsl
add
xchg
ja
loope
sbb
jbe
pop
sahf
mov
ja
push
shl
xchg
pop
movsl
mov
cmp
jg
xor
jp
scas
and
addr16
adc
nop
insl
jnp
mov
xchg
pop
mov
dec
push
out
mov
pop
pop
ja
inc
out
ss
sahf
outsl
pop
mov
mov
sarb
jge
pop
pop
movsb
cmc
adc
mov
popf
mov
sbb
push
aam
cmpl
xchg
add
std
leave
jne
or
sbb
lock
pop
lock
fstps
pop
inc
pop
dec
pop
mov
insl
fwait
pop
ljmp
pop
psubw
cmp
imul
mov
push
stos
xorb
in
fs
into
inc
cmp
icebp
hlt
je
dec
aam
push
sahf
in
inc
jnp
test
mov
add
mov
jmp
and
fisttpl
add
call
stos
es
les
cwtl
ret
bound
int3
test
into
in
cmpsb
fwait
push
push
mov
cltd
pop
xchg
jae
push
imul
xchg
add
es
adc
lcall
addb
scas
dec
jo
std
cwtl
mov
mov
decl
ret
and
lret
xor
jmp
pop
rorl
jmp
jbe,pn
xchg
xor
push
movsl
dec
pop
rol
sarl
mov
sbb
out
push
sub
int3
incb
jl
inc
loopne
add
test
xchg
out
jnp
sahf
mov
mov
or
inc
jge
sbb
sahf
pop
add
ret
cli
rcl
and
pop
push
mov
pushf
or
je
out
inc
sahf
cmp
mov
popa
dec
imul
orb
nopl
jl
dec
add
push
pushf
inc
je
inc
push
jae
aaa
pushw
lds
mov
sbb
jl
adc
mov
in
aad
imul
lret
lds
lds
push
xchg
jecxz
jecxz
lret
ret
bound
xor
jns
cmp
cltd
xor
hlt
ret
dec
es
mov
cmp
fwait
test
sahf
lea
mov
jbe
push
stos
or
cmpl
sub
mov
jns
sahf
test
test
sarl
sbb
aaa
jl
stos
jle
jno
nop
imul
or
cld
shll
cmp
mov
mov
pop
sti
mov
iret
lahf
jmp
adc
mov
fistpl
xor
pop
mov
int3
xor
aad
xchg
into
sub
mov
jecxz
nop
sbb
xor
sar
jae
xor
aad
sub
push
fs
aas
mov
notl
in
es
cmpsl
push
into
push
scas
js
addr16
aaa
sbb
mov
add
mov
rcrb
leave
fldenv
mov
repz
push
mov
jge
cmp
sub
shrl
mov
add
xor
test
aad
call
aaa
push
sub
push
sbb
into
sbb
cltd
sarb
cmpsl
ds
adc
or
repnz
xlat
mov
ja
mov
aaa
into
in
ljmp
sub
xlat
scas
dec
loop
push
pop
sub
add
dec
adc
gs
lds
test
jno
rcr
jp
and
xor
loope
scas
jnp
pop
lods
loopne
push
push
nop
jecxz
sub
mov
arpl
jl
cmp
mov
aad
push
push
les
sarl
jl
stc
cmp
je
fs
sbbw
stos
cmp
test
ds
call
pop
add
xchg
sti
ja
pop
outsb
mov
pusha
or
xchg
mov
stos
cmp
outsl
lock
pop
call
or
mov
cltd
outsb
or
mov
pop
jmp
push
xrelease
mov
mov
in
iret
jecxz
push
push
mov
loop
or
cltd
in
sti
fwait
inc
xchg
sbb
jmp
roll
mov
mov
jl
jne
xchg
add
fdivrp
mov
stos
dec
cmp
mov
inc
mov
cmp
jg
jns
sub
mov
mov
test
shl
add
and
inc
int
inc
test
push
jg
jmp
dec
loopne
jns
outsb
je
ret
mov
cs
push
dec
xlat
jmp
mov
mov
adc
enter
mov
push
sti
leave
fdivp
inc
stos
and
xchg
sbb
daa
movsb
cmp
and
xchg
loope
iret
movl
stos
mov
pop
bound
sub
push
pop
jecxz
movsb
pop
cmp
mov
push
jmp
stos
lds
gs
pop
data16
cwtl
movsb
aas
push
out
shlb
pop
cmc
ja
ret
mov
fisubrl
lock
add
hlt
mov
int3
push
jmp
aaa
andb
push
es
jb
jg
aam
and
data16
push
sbb
ret
int
push
cmc
mov
aad
cltd
pop
sarb
jmp
mov
rcrb
push
xlat
aad
fsubrs
cmpsb
mull
mov
lea
cmp
add
cwtl
mov
in
inc
dec
in
mov
mov
call
jno
sub
lods
ret
mov
cmp
or
cli
cmpsb
mov
mov
adc
in
push
rorb
mov
lahf
mov
ja
push
test
fisubrl
sub
xchg
push
or
and
jge
xor
jne
loop
notb
inc
lods
jbe
xchg
push
addr16
mov
adc
sbb
dec
out
subb
jecxz
mov
push
lret
mov
mov
sub
lds
pusha
ret
adc
nop
lds
outsb
jp
pop
in
push
ja
lds
test
push
cmp
jae
dec
mov
mov
lds
jns
and
ret
and
cmc
inc
scas
push
cltd
fimull
lock
imul
sub
int3
push
fsubrp
pusha
ss
pop
or
cmp
cmp
pop
mov
jmp
cmp
stc
cmp
mov
mov
dec
lock
pop
mov
mov
loop
sarb
les
inc
shlb
pop
pop
lods
xchg
sahf
mov
sub
xchg
jns
dec
cmpsb
call
in
mov
jb
shl
fcmovbe
lea
pop
cld
mov
jmp
in
stos
xor
cmpb
lock
es
or
lea
push
sub
fisubl
xsha256
cmpsb
push
int3
jno
std
jp
sahf
sub
mov
xchg
lcall
and
pop
nop
mov
ss
mov
outsl
loop
cmc
cmp
imul
repnz
adc
sbb
mov
jmp
lahf
cmp
setnp
inc
loope
cwtl
leave
jecxz
call
stos
mov
xlat
adc
shrb
insl
push
incb
mov
cmpsb
and
ja
pop
jbe
sub
add
cmp
loopne
loop
cli
pop
cmp
xorl
imul
or
fwait
aad
fmull
clc
sbb
inc
pop
xor
inc
cmpsl
and
push
fbstp
push
sub
stos
ror
daa
inc
xor
adc
inc
pop
xchg
mov
fistpll
mov
mov
insl
fdiv
mov
es
gs
inc
popf
mov
mov
shlb
and
bnd
test
and
xor
and
imull
dec
sbb
jb
mov
push
aaa
shll
movsb
fs
push
xor
mov
xchg
out
dec
pop
aaa
shll
shl
adc
add
mov
push
lds
aad
insb
add
cmc
ret
adc
pop
stos
stos
xor
mov
adc
lea
inc
sti
sbb
ret
jb
leave
jb
add
notl
call
test
or
and
cmc
dec
shrb
lahf
outsl
jmp
adc
xchg
xchg
shrl
clc
and
push
popf
xor
and
push
inc
add
dec
and
sbb
ds
mov
cs
lret
fbld
aas
jg
mov
push
inc
ret
push
and
inc
popf
jg
call
and
cmp
inc
cmc
push
pusha
or
add
mov
clc
mov
addl
jle
loopne
sbb
add
lret
push
lea
sbb
das
mov
stos
adc
push
mov
call
mov
jg
or
pop
imul
fidivs
mov
fbstp
std
mov
repnz
dec
and
fwait
lret
ss
into
pop
pop
lock
pushf
into
rclb
lret
or
jle
out
dec
adc
sbb
shrb
and
test
dec
add
lret
negb
xor
inc
xor
subl
jo
dec
mov
jbe
hlt
mov
loopne
iret
mov
adc
mov
mov
in
dec
fstpt
push
dec
cmp
lcall
and
mov
pop
push
cmp
dec
loopne
loop
in
adc
dec
scas
push
xchg
add
xlat
mov
cs
cmpsl
subl
cmc
xor
push
xchg
pushf
cmpl
stc
lds
mov
clc
enter
xor
jmp
lods
fldenv
test
mov
inc
jne
sti
arpl
inc
gs
es
add
mov
or
dec
fildl
mov
cmp
adc
sub
fcomp
in
or
das
mov
jnp
sarl
pop
or
sbb
loope
adc
sub
imul
andb
cld
leave
add
test
sbb
adc
inc
mov
push
push
into
sbb
into
xor
aad
xor
jp
sbb
xchg
stc
shrl
adc
pop
jg
cmc
mov
push
push
sbb
ret
and
fnstsw
xor
pop
adc
pop
dec
mov
xor
sti
mov
push
mov
lea
jg
or
xchg
adc
iret
out
fwait
aas
adc
sbb
loop
jl
pop
fildll
mov
jns
mov
cwtl
ljmp
fdivrl
sbb
xchg
ret
xor
bound
aam
fcmovne
jp
leave
lock
jp
dec
xor
add
add
aaa
js
das
daa
pop
push
fdivr
or
mov
add
jle
sahf
clc
jnp
sbbl
sbb
add
push
cmpb
adc
mov
and
jl
imul
pop
pop
out
jl
sbb
inc
sub
push
movsb
jb
cmpsb
cmp
fiaddl
jmp
ficoms
aam
mov
call
mov
xchg
enter
adc
repz
xor
pushf
push
out
in
std
in
das
pop
adc
nop
cwtl
gs
es
stos
fwait
jns
xchg
jne
push
cmc
pop
push
aad
push
in
jle
dec
bnd
or
mov
call
lods
ret
pop
mov
cld
cmp
lods
xchg
and
push
jb
mov
or
jne
cmp
pop
jae
or
xchg
xchg
movsb
cmp
ret
jg
mov
repnz
inc
fwait
std
xlat
loop
or
push
stos
out
cmp
jae
adc
push
jmp
inc
adc
imul
mov
mov
les
stos
scas
adc
or
adc
jp
lods
cmp
inc
mov
ss
pop
cmc
arpl
enter
or
rcll
dec
call
stos
daa
stc
mov
cmp
pop
cmp
in
aas
aam
dec
stos
mov
shll
jnp
fwait
ret
test
call
cmp
push
popf
rol
test
stos
aad
sbb
stc
je
and
in
mov
sbbb
add
cmpsl
sbb
mov
dec
dec
inc
sbb
scas
mov
mov
inc
pop
xchg
stc
jmp
jl
add
inc
fs
pop
add
or
mov
out
mov
mov
push
lcall
int
adc
jle
and
ret
mov
cmp
adc
jmp
cmpb
mov
mov
fdivs
mov
xchg
adc
mov
add
mov
mov
nop
jae
iret
popf
bound
cmpsl
ljmp
test
sub
insb
into
xor
ret
addl
cmp
out
inc
mov
decl
nop
pop
xchg
mov
repnz
inc
mov
iret
pop
mov
sbb
ret
push
dec
loope
and
add
cs
adc
push
mov
adc
cmp
push
aam
dec
lret
xor
das
ret
ljmp
lds
xchg
jne
ret
iret
leave
pop
shrl
push
cmc
shl
jp
int3
fadd
js
add
jg
push
cli
outsl
cs
mov
sub
shrb
je
repz
lods
andl
fs
arpl
aad
inc
stos
lret
lods
xchg
push
popa
dec
cmpsl
in
hlt
pop
loope
fsts
punpckhdq
xchg
add
mov
dec
xchg
scas
lcall
clc
cld
xchg
or
pop
add
shlb
daa
arpl
fbstp
jno
cmc
fisubrs
pop
sahf
add
test
and
xor
push
shlb
and
xor
xchg
shl
out
xor
add
adc
pop
mov
mov
xchg
mov
aad
sbb
push
jle
xchg
push
inc
xchg
stos
jb
hlt
in
lds
push
mov
dec
or
aad
mov
cmp
mov
dec
and
or
mov
fnstsw
sahf
js
sub
inc
enter
jp
imul
push
inc
idivb
mulb
dec
loope
cwtl
cmpsb
lods
mov
pop
repnz
jo
push
clc
mov
mov
mov
sub
out
cli
in
cltd
dec
roll
jnp
adc
mov
jmp
sub
imul
mov
fs
dec
int
in
adcl
add
sub
mov
test
pop
and
mov
mov
xlat
rcll
ret
sub
gs
pop
mov
add
mov
dec
push
push
call
les
jae
loope
fbstp
repnz
dec
jne
cs
dec
pusha
and
sbb
mov
fs
test
test
imul
push
sbb
cmp
pop
add
sti
jns
cmc
adc
sub
cmp
movsl
popa
aam
lahf
mov
jb
mov
push
lret
out
push
adc
xor
mov
andl
xchg
inc
loopne
leave
and
adc
mov
ret
push
cs
cmp
dec
stc
ret
pop
out
dec
cmp
inc
lcall
sbb
fdivs
cmp
push
sahf
push
push
ret
cmc
add
in
ja
aaa
cs
dec
cmp
jno
jno
mov
add
add
test
pusha
test
adc
jle
mov
sbbb
dec
aaa
cmp
push
dec
fld
sbb
fnstsw
mov
leave
fldcw
shlb
jmp
jns
xor
inc
jo
in
js
aad
mov
push
jl
insb
xchg
into
sbb
out
outsl
daa
sbb
lret
and
adc
test
xchg
jmp
rcl
lock
cmovno
push
mov
test
xor
jl
imul
cli
xchg
push
cli
addr16
jle
inc
mov
add
rcl
les
andl
or
xor
push
cld
cltd
ljmp
ret
and
and
les
clc
mov
mov
push
mov
inc
sti
push
imulb
int3
adc
sbb
mov
xchg
fistpl
push
repnz
test
fwait
imul
and
das
push
adc
in
jmp
inc
sbb
xor
add
movsb
xchg
inc
std
or
pop
rcl
cmp
inc
shrb
and
sub
adc
in
jle,pt
mov
popa
xor
jle
cmp
jge
sbb
loop
or
rolb
pop
inc
push
xchg
ret
es
out
movsl
addb
call
ror
mov
cltd
pop
dec
lods
enter
xchg
sbb
aas
push
pushf
popf
imul
jle
push
pop
xlat
mov
mov
pusha
inc
fnstenv
push
jmp
sub
iret
lret
arpl
cmp
mov
sbb
add
daa
outsb
jmp
movsb
mov
jmp
icebp
dec
xchg
dec
inc
out
out
aad
push
push
mov
fisubl
aaa
push
int
or
mov
xchg
sub
insl
add
cmp
gs
imul
test
loop
lret
push
xchg
incb
arpl
stc
dec
or
dec
jp
in
push
mov
inc
mov
cs
inc
stc
adc
adc
decl
fisubrs
push
add
push
fisubl
mov
inc
enter
lret
jmp
hlt
loope
ljmp
cmpsb
add
jo
or
cmc
dec
cmp
or
mov
mov
mov
add
or
hlt
adc
cmp
jecxz
inc
ss
pop
xor
enter
xor
lods
int
or
push
fstps
and
test
scas
sarb
cmp
push
movsl
lock
fdivr
push
testb
pop
arpl
jl
xchg
pop
mov
lret
cmp
rol
xchg
add
scas
xchg
sbbl
inc
in
dec
fcmove
fdivp
js
push
ja
stos
jge
sbb
int
lret
jmp
in
xchg
js
pop
or
shrl
push
mov
popf
idivb
mov
ret
push
mov
scas
test
jg
jmp
mov
mov
sti
add
lret
xor
push
js
and
cmc
loope
jp
in
push
inc
repz
jmp
test
xchg
das
aas
dec
xchg
mov
sub
rorb
dec
sti
test
or
dec
cmp
movsl
cmpsl
rcrb
fistpll
sarl
mov
stos
mov
pop
aas
in
test
aas
mov
dec
fidivl
int3
dec
scas
xchg
aaa
ficompl
test
loop
movsl
sub
insl
pushf
imul
xchg
mov
scas
rcll
pop
and
add
mov
jp
adc
cli
push
xchg
xchg
xchg
leave
das
cmpsl
scas
cli
lret
push
int3
loopne
daa
mov
push
push
sub
xchg
push
ficompl
imul
ret
pop
jg
into
adc
je
lahf
test
cli
or
dec
movsb
mov
mov
cmp
add
or
stos
or
pop
or
xchg
cmpsl
cltd
and
bound
dec
int3
pushf
mov
pop
stc
xchg
daa
mov
sbb
mov
orb
mov
xchg
pusha
sub
popa
cld
sbb
sub
mov
mov
fidivrs
adc
push
fbld
stos
test
arpl
jae
js
scas
lods
int3
push
xor
ss
hlt
push
jmp
mov
cs
push
lea
icebp
mov
push
lahf
or
xorl
xor
pop
cwtl
jae
inc
rcr
repnz
jne
pop
js
movsl
ja
dec
xchg
pop
dec
xor
out
out
push
movsl
mov
shll
pop
shrl
sbb
jle
and
add
jmp
push
fnstenv
xchg
test
adc
pop
jge
mov
sub
jnp
loop
adc
fisubrl
movsb
push
sbb
jge
mov
lret
out
push
push
dec
inc
cmc
outsb
push
sbb
mov
es
sub
adcb
push
scas
shlb
xor
dec
pusha
test
cltd
add
xor
mov
out
pop
or
push
xor
test
cmp
lret
mov
inc
test
enter
push
mov
push
fisubl
pushf
xchg
repz
repz
out
and
cmp
pop
test
fadds
repz
xor
xchg
sub
lcall
outsl
inc
movsb
pop
movsl
in
test
and
test
mov
in
xlat
xchg
gs
sbb
adc
in
xchg
fstpt
push
cmp
sub
test
lcall
adc
jmp
push
lcall
pop
jb
int
je
notb
pop
jp
xchg
jl
pop
xchg
dec
lea
in
add
dec
mov
aas
data16
aam
jp
xor
xor
incl
pop
jne
sbb
pop
cltd
std
rcll
shlb
lods
xor
xor
scas
fwait
dec
and
fbstp
stc
xor
in
adc
mov
inc
pop
inc
test
scas
inc
sbb
fidivs
outsb
insb
xor
xchg
jmp
arpl
mov
or
cmp
pop
test
fistl
add
add
jge
clc
aas
jmp
movsb
lock
xchg
sbb
and
mov
aaa
clc
and
push
mov
add
nop
icebp
push
je
test
jno
cli
and
ficomps
or
pop
cli
shrb
and
nop
push
fldcw
xchg
xlat
outsl
mov
loope
loopne
mov
pushf
add
das
xchg
or
push
mov
popf
jo
test
dec
add
cmp
dec
mov
sti
cmp
adc
pop
imul
pop
and
mov
sahf
mov
dec
jg
inc
lea
inc
cmpb
rcrl
loope
shrb
pop
aad
pop
or
fdivl
mov
sub
adc
lret
lcall
fldl
sub
push
leave
cld
popa
cmp
jne
dec
add
lcall
and
cmp
adc
mov
inc
mov
jp
clc
jno
fildl
mov
push
and
and
xor
jp
sub
xor
fistl
cmp
push
iret
adc
add
sbb
and
jne
dec
frstor
push
mov
ret
add
push
test
fstps
ds
dec
cmpsb
hlt
mov
out
arpl
xchg
add
cmp
xor
pusha
sbb
stos
mov
lods
cmc
repz
mov
andb
and
inc
loopne
arpl
bnd
fcomp
add
dec
and
in
or
sub
ret
incb
sbb
jl
xchg
out
jg
pushl
mov
movsl
mov
fcmovnb
iret
mov
bound
mov
mov
or
push
push
sub
shll
cmpsb
loopne
out
mov
ret
rcl
cmp
dec
add
into
mov
add
xor
ja
or
pusha
je
xor
or
sub
loop
fbstp
pop
jnp
xchg
int
xchg
mov
xchg
aam
je
lods
hlt
push
std
loopne
cmpb
mov
adc
xchg
add
push
xchg
insb
jns
cwtl
xor
shll
cmpsl
test
test
or
cmc
or
jb
in
jno
nop
mov
ret
or
outsb
push
mov
cmp
js
pop
cmp
in
xor
mov
lods
test
rol
lds
push
pushf
notb
in
xchg
bound
cmp
sub
or
mov
sub
lock
cwtl
mov
jnp
pop
dec
aad
sub
xor
inc
outsb
sub
es
push
or
sub
mov
or
nop
pop
mov
pop
repz
outsb
push
nop
xchg
sub
test
out
in
sti
add
or
dec
pop
loope
lock
frstor
adc
push
popl
loope
pop
shlb
push
dec
jp
mov
lahf
clc
xchg
add
es
mov
mov
ss
push
inc
cmc
mov
fsubl
into
jge
xor
sub
repz
shll
shlb
fstpl
jle
cmpsb
lods
inc
sbbb
jae
aas
movsl
call
xchg
stc
outsl
stc
scas
aam
cmp
sarb
std
aaa
mov
add
filds
loop
pop
and
push
mov
icebp
aaa
inc
out
push
dec
jbe
fldenv
rclb
push
in
cmp
jae
sbb
cmp
jbe
xchg
fcoml
mov
mov
mov
adc
test
jmp
or
lea
test
pop
cmp
ja
cmp
add
lret
add
lock
and
jle
inc
stos
push
out
scas
or
inc
cld
mov
jg
sbb
jno
mov
lds
adc
push
xor
popa
and
xchg
mov
leave
mov
repnz
aad
dec
sbb
lds
pop
ljmp
fwait
aas
cmp
je
lret
cmp
and
jno
mov
and
mov
xor
cmpsb
aam
out
dec
xchg
dec
inc
test
sub
xlat
pop
inc
sahf
push
ljmp
out
xchg
popf
out
clc
and
neg
clc
imul
lds
push
add
jecxz
inc
arpl
cltd
ret
or
sub
dec
fidivs
stc
and
fwait
lods
cli
pushf
out
lods
sbb
dec
iret
sub
cmp
pop
into
fimuls
push
mov
dec
pop
outsb
jns
jns
loope
lock
pop
pop
push
dec
push
cld
stc
popf
xchg
mov
pusha
sbb
mov
leave
inc
push
mov
sbb
call
jl
data16
cld
adc
adc
jno
push
scas
xchg
sti
pop
ret
jecxz
jmp
or
in
mov
push
mov
jp
push
scas
outsl
iret
cmpl
lods
pop
inc
test
dec
ret
cmp
pop
mov
push
sub
dec
pop
insl
sahf
pop
scas
sub
pushf
inc
pop
imul
fidivl
push
test
add
enter
das
lods
pop
popa
out
inc
mov
adc
xchg
sti
pop
push
sub
inc
cmp
out
xchg
notl
bound
iret
or
and
int3
arpl
rolb
outsl
fmuls
cltd
sti
dec
out
push
aas
xchg
sbb
cmc
dec
ret
rorl
negb
out
pushf
sbb
sub
jns
lods
and
jmp
lret
adcl
mov
xor
movd
sub
pop
punpckhwd
cmpsl
inc
call
int
fstps
aas
push
lock
cwtl
pop
cmpsl
test
pop
or
cld
arpl
pop
mov
pop
repnz
fsave
dec
pop
jne
dec
bound
test
push
andb
push
test
icebp
cwtl
clc
add
push
fsts
lea
sub
or
cwtl
aas
pop
ja
xchg
loope
push
sbb
sbbl
pushw
and
sbb
lahf
cmpsb
cmpl
in
sbbl
mov
adc
ret
lds
push
dec
or
hlt
and
mov
mov
cmp
jb
inc
int3
popf
jl
push
add
ds
inc
sbb
cld
add
fildl
iret
adc
xchg
xchg
aam
daa
repnz
pop
and
or
jb
mov
imul
pop
in
mov
push
scas
fldenv
lret
adc
xchg
mov
pop
adc
mov
rclb
mov
mov
rcll
xor
add
xchg
jae
inc
ficomps
mov
gs
push
jo
mov
and
inc
and
push
std
aas
insl
cs
dec
push
lods
js
pop
imul
lods
mov
and
fsubrl
aam
mov
xor
mov
rcll
fldcw
xor
push
mov
push
pop
sub
cmp
dec
xor
cmp
pop
fmuls
or
pop
out
jl
lahf
sahf
pop
aam
pop
push
jle
dec
xchg
inc
nop
adc
xor
jo
adc
pop
sub
hlt
pop
jle
orb
data16
sub
sti
xchg
scas
add
aad
nop
pushf
dec
out
loopne
jnp
mov
mov
adc
les
dec
xchg
decl
fstl
add
xchg
jle
xor
mov
or
cmp
test
outsb
cmp
loope
mov
dec
int
jle
pop
mov
movsl
test
cmp
nop
mov
sti
data16
ljmp
sub
lds
cli
sbb
ss
test
or
test
mov
xorb
mov
lds
mov
gs
js
and
rcll
xchg
push
dec
or
out
fidivs
call
adc
push
ret
pop
cli
inc
scas
sub
testb
sub
fwait
adc
inc
or
scas
call
or
jmp
pop
sub
pop
mov
mov
sti
or
fadds
ficoms
mov
sbb
jb
adc
inc
inc
shlb
jne
daa
pushf
and
push
stc
pop
repnz
gs
xchg
sbb
in
add
sarl
mov
scas
decl
xor
testb
ds
inc
jb
sti
cltd
lock
sub
gs
sbb
lahf
sbb
adc
mov
mov
pop
out
inc
sub
xor
xchg
out
mov
sbb
push
lret
adc
rorb
int3
insb
cmp
sbb
sub
xor
ss
out
xchg
add
or
movsl
ds
add
jp
shll
or
or
sub
jle
imul
mov
jbe
sbb
ljmp
ret
orb
push
out
hlt
adcb
orps
test
sbb
stos
mov
mov
cmpb
and
xchg
pop
andb
sub
xchg
jae
out
popa
and
add
push
pop
out
sti
ror
sub
jo
xchg
dec
cmp
pop
fmuls
sub
gs
push
ret
into
and
shl
outsl
pop
fcmovb
or
rcrb
and
cld
sti
xchg
mov
cmp
sbb
cmp
adc
daa
stos
mov
mov
pop
nop
mov
or
add
push
add
and
sbb
mov
pop
jo
pop
das
cmp
mov
inc
ret
fisttps
push
scas
xor
outsb
jle
ret
test
fcomp
inc
pop
std
and
mov
jle
or
fbld
lahf
repz
das
test
mov
fisttpll
daa
adc
addl
add
int
mov
movsl
jmp
js
pop
pop
aaa
mov
test
jmp
or
popa
xchg
and
or
jae
xchg
test
ja
add
dec
xor
fisttpll
cmp
push
clc
inc
cmp
xchg
pusha
test
and
sbb
sub
repz
push
insl
loopne
addr16
push
inc
iret
push
push
int
add
mov
test
outsb
aam
gs
adc
sbb
or
lcall
adc
sub
int3
mov
fnsave
push
xchg
pop
sbbb
dec
pop
mov
add
or
popf
cmp
decb
lods
insb
fdivs
mov
cmp
out
mov
xchg
lods
add
pop
out
adc
jg
jmp
lods
inc
ror
es
ja
loop
xchg
lods
mov
mov
mov
jae
xchg
imul
pop
repnz
pop
mov
cmp
cmpsb
adc
inc
push
xor
cmp
sub
mov
jge
pop
xor
push
add
inc
sub
aam
cmp
int
and
dec
push
dec
aad
mov
adc
push
ds
mov
stos
xchg
adc
push
in
das
shlb
stos
test
jmp
jo
data16
testb
adc
lods
subl
into
lret
movups
out
xor
add
inc
push
out
dec
imul
xor
mov
mov
lret
push
lods
clc
mov
hlt
shrb
js
fwait
jnp
lock
test
pushf
inc
mov
cmpsl
sti
je
lahf
mov
pop
cmp
cmp
pop
repnz
or
push
cmp
or
cmp
mov
or
mov
mov
jecxz
in
cwtl
sub
lahf
stos
add
jne,pt
fwait
or
scas
cmp
orl
ret
sbb
xor
stos
xchg
adc
pop
cmc
dec
dec
orl
ja
jge
mov
xchg
xchg
jae
xor
mov
stc
lret
lret
bound
adc
shlb
push
push
out
nop
int3
imul
push
sti
and
jns
repnz
jle
push
mov
push
fcmovnbe
cmpsl
cmp
scas
mov
jmp
sbb
cmp
sarb
dec
push
repz
popf
jg
push
inc
das
mov
fdivl
mov
xchg
sbbl
xor
mov
jl
fmulp
dec
sbb
imul
sbb
dec
jl
es
addr16
xlat
mov
xchg
pop
pop
mov
dec
data16
inc
loop
insb
inc
loop
mov
ret
fsts
xchg
cmp
adc
pop
mov
or
popa
mov
dec
sbb
sub
std
push
inc
adc
and
rorb
and
loope
or
push
jns
orl
fisttps
jnp
inc
pusha
adc
dec
es
cltd
pop
mov
out
daa
mov
mov
lock
cmpsb
add
in
fnstcw
pop
cli
ret
pop
es
pop
jge
inc
mov
loope
pusha
push
rorb
inc
mov
incb
jmp
lock
ljmp
and
aad
ret
cmp
insl
push
sbb
stos
mov
push
stc
jne
push
xor
lea
mov
popf
shll
jl
pop
nop
out
test
push
jae
jb
xor
fmulp
cwtl
test
leave
stos
mov
insl
sub
movsl
sub
int3
jg
hlt
cmp
mov
negb
jmp
out
push
adc
or
int3
mov
movsb
test
inc
out
push
arpl
jmp
xor
or
add
mov
xor
xchg
stos
sahf
pop
push
out
mov
in
das
outsb
push
enter
jae
fnstsw
xchg
xor
roll
add
inc
xlat
cmp
fwait
out
jbe
pusha
inc
and
mov
mov
fdivl
or
inc
pop
jmp
push
imul
mov
sub
lret
repz
das
jnp
or
lret
stc
fmul
in
jmp
in
sbb
mov
jnp
ss
dec
and
daa
adc
push
xor
mov
daa
and
xchg
in
imul
movsl
data16
daa
mov
mov
pop
mov
inc
jns
ljmp
adc
lret
ficomps
jg
mov
or
pop
cmp
xchg
arpl
adc
xor
sahf
mov
fildll
mov
lar
push
mov
cmp
lea
ret
call
pop
sub
mov
dec
aaa
inc
subl
pop
xor
sbb
fisttps
mov
out
je
js
fistl
xor
adc
int3
out
mov
insl
xchg
out
ljmp
jno
int
aaa
daa
imul
pop
in
cmpsb
mov
mov
push
or
cwtl
test
cli
add
adc
mov
jecxz
sub
inc
aam
push
int3
rcrl
xchg
cmp
stos
outsl
push
and
xchg
div
stos
and
add
js
test
ror
sub
std
aam
mov
push
pop
mov
add
inc
jo
out
das
movsb
push
push
cmpsb
cmp
rorl
loop
or
test
sahf
jmp
shl
dec
aam
repnz
push
xchg
xchg
xor
shlb
jae
repz
movsb
cmp
pusha
sbb
xchg
mov
sbb
sahf
pushf
daa
cmp
xlat
out
cmp
mov
sahf
sbb
and
insb
xor
roll
and
dec
mov
aam
sbb
daa
stos
loope
push
call
and
sub
inc
pop
jge
xchg
loopne
adc
arpl
dec
clc
dec
in
out
mov
cmp
sub
xchg
pop
andl
stos
filds
in
inc
aam
sbb
xchg
pop
mov
jp
inc
out
adc
adc
fstp
inc
mull
jge
mov
pushl
pop
xchg
jns
inc
aam
aaa
inc
gs
xchg
inc
add
aas
mov
adcl
mov
sbb
xor
int
jp
stc
mov
in
xchg
fsubrs
aas
scas
dec
dec
pop
jp
mov
outsb
andl
mov
or
or
cmpsl
mov
mov
mov
push
xchg
lahf
aas
or
push
push
adc
in
or
scas
mov
mov
insb
mov
sahf
xor
in
jp
lds
and
mov
mov
or
pop
jmp
insb
inc
xlat
sahf
push
div
sahf
aas
pop
cmc
jo
push
or
mov
cmp
add
ds
push
rep
mov
pop
cs
dec
std
aas
repnz
mov
fwait
data16
ja
shrl
out
fiaddl
fs
loop
mov
data16
pop
sub
es
and
xchg
jmp
cmp
stos
cmpsb
movsb
insb
adc
mov
push
aam
inc
mov
aad
les
daa
jns
in
lock
pop
daa
mov
fs
pop
mov
rcrb
mov
cmpsl
and
ljmp
cmp
sbb
out
inc
int3
inc
rcrl
pushaw
and
sbb
inc
lds
mov
jmp
les
ret
inc
fwait
andl
and
fucom
les
jmp
xchg
jge
push
push
in
sahf
push
decb
and
mov
lret
mov
jns
pushf
sub
leave
sbb
arpl
nop
int3
cmp
mov
movsb
lea
xchg
cmc
mov
pop
notl
push
aam
popa
std
in
test
in
push
in
fstps
test
push
ret
add
mov
push
xchg
fcomps
pop
fmulp
int
mov
movsl
int
shll
push
fildll
std
jge
jmp
subb
mov
dec
push
dec
jp
rol
mov
in
jmp
int
fs
xor
xchg
push
hlt
stos
or
faddl
jmp
cld
lahf
repz
movsl
icebp
out
adc
push
mov
insl
xor
int
push
pop
dec
push
aas
insb
sahf
sub
fnsave
repnz
ja
ds
mov
scas
fdivp
add
ljmp
lock
das
cmp
shll
lods
push
les
cmp
das
jge
subl
push
fdivr
test
sbb
test
mov
leave
dec
std
pop
insl
xor
loope
sbb
fcmovnb
sub
iret
mov
inc
ds
ja
dec
in
cmp
jle
loopne
repz
lds
andl
mov
push
xlat
adcl
jge
and
idivl
mov
outsl
add
or
sbbl
out
jmp
scas
sub
lea
sbb
mov
loope
mov
loope
push
mov
xchg
sub
push
ret
mov
adc
mov
cmpsl
xor
outsb
dec
in
fnsave
push
aas
andb
mov
sbb
jle
stc
mov
push
sbb
mov
and
jmp
xchg
lock
movsb
cmp
xchg
call
pop
pop
out
sbb
cmp
dec
arpl
mov
cmp
inc
stos
lahf
sub
or
fwait
in
jge
and
popf
sbb
jl
mov
and
das
stos
cs
mov
lahf
ret
gs
in
inc
dec
bound
iret
jmp
adc
dec
outsl
popa
lods
rorl
mov
mov
and
push
inc
xlat
pop
xchg
inc
mov
jecxz
and
insb
jb
push
cmc
bound
add
and
jge
mov
test
fsubl
mov
into
aam
sbb
xor
outsb
pusha
jp
out
test
jnp
imul
pop
xor
pop
mov
jp
insl
mov
fcomi
pop
mov
sbb
fdivrl
das
add
je
pop
insb
sarl
xchg
push
mov
lcall
test
cs
sub
xor
out
cmp
fwait
lcall
and
cmp
mov
les
cmc
iret
pusha
jp
push
add
adc
inc
cwtl
sarl
lock
or
out
jae
fsubrl
pop
adc
fs
cmp
loope
insl
lock
sbb
movsl
push
adc
pop
cmp
jecxz
data16
jge
adc
xlat
ret
adc
ja
cs
inc
mov
mov
rclb
jbe
inc
push
pushf
inc
inc
and
sub
push
cmp
sbb
cmp
fidivs
and
leave
mov
dec
loope
inc
arpl
cltd
add
push
aad
and
imul
test
sub
sahf
scas
adc
pusha
cmp
sbb
inc
add
dec
xchg
sub
xor
test
repnz
inc
xchg
or
push
jb
fstpl
stc
ss
push
push
mov
push
mov
into
imul
mov
je
pop
inc
fimuls
jg
dec
pxor
inc
rcrl
bound
inc
cmp
dec
int
mov
mov
sub
inc
lahf
enter
ja
sbb
cwtl
je
int3
xor
mov
push
sbb
jmp
leave
mov
cmp
dec
fists
jns
andl
xchg
outsb
xchg
add
pop
xor
adc
icebp
aaa
add
ja
pusha
cmp
js
repnz
data16
and
xor
punpckhdq
or
outsl
jne
std
mov
fiaddl
bound
jp
dec
and
push
hlt
mov
sub
jge
dec
cmp
push
test
cmc
iret
xorb
cs
xchg
push
sahf
repnz
or
dec
fildll
xchg
in
stos
ss
int
push
jno
stos
add
addr16
loopne
adc
or
cmp
mov
xor
adc
jecxz
inc
fnstsw
movsl
lahf
outsb
or
sub
fnstsw
insb
xorb
std
or
mov
mov
mov
jb
aaa
dec
negl
lods
ret
lods
inc
loope
aad
cmp
mov
ret
sub
mov
pop
daa
repnz
mov
or
sub
inc
dec
daa
and
push
xchg
jns
ja
mov
xor
dec
inc
fdivrl
jle
cmp
xor
lret
stos
hlt
inc
xchg
jns
sub
inc
sahf
mov
inc
aaa
dec
dec
cli
fidivl
lock
call
jnp
imul
movsb
rorb
cld
mov
js
sbb
inc
mov
mov
push
cmp
negl
lds
out
mov
jns
mov
shll
mov
into
cmpsl
dec
in
add
sub
mov
testl
mov
ja
mov
mov
hlt
jle,pn
add
inc
pop
test
stos
std
aaa
pop
test
sbb
and
xchg
ficomps
neg
mov
popf
loopne
test
mov
iret
and
incb
add
pop
repnz
jnp
leave
fldl
jmp
xor
push
scas
jnp
mov
mov
jl
xor
fnsave
inc
std
scas
jno
dec
test
jl
xor
push
js
loopne
mov
and
outsl
out
iret
jne
adc
outsl
enter
int3
lcall
ljmp
int3
dec
sub
mov
ds
ljmp
movsb
xchg
jb
mov
pop
mov
or
mov
xorb
jle
cld
dec
push
dec
xor
cmp
out
jp
cs
in
adcb
jecxz
in
rcrb
into
pop
repnz
and
push
adc
and
push
divl
ljmp
jno
jle
icebp
adc
int3
add
rorl
cmp
imul
lea
push
ret
cmp
xor
daa
sbbl
rorb
adc
jnp
sahf
pusha
add
leave
dec
dec
push
jae
fwait
insb
rcrl
in
imul
push
xor
jno
pop
sahf
add
leave
pusha
addr16
inc
jb
add
adc
addr16
xchg
pop
jno
dec
push
cmp
or
cmpsl
sbb
ljmp
lods
add
dec
pop
push
add
aaa
xor
adc
addr16
insb
mov
push
lock
gs
push
or
xchg
mov
jns
out
lock
fprem
dec
test
add
fs
fcoms
add
pushf
xor
lds
xor
in
dec
mov
mov
dec
cmpsb
mov
mov
mov
daa
test
mov
push
xor
jle
repnz
popf
sub
outsb
test
test
pop
aaa
mov
pop
mov
xor
idivl
aam
sbb
je
xor
dec
shl
jl
test
rclb
mov
and
xchg
lahf
mov
lret
mov
ret
xor
stos
inc
cwtl
mov
mov
jne
dec
loop
sub
or
xor
repz
cmp
sbb
stos
stos
cmp
and
jno
adc
mov
in
je
dec
testb
pusha
sub
add
test
je
repz
push
lcall
popa
movsb
adc
add
mov
jecxz
sub
lcall
mov
test
std
xchg
sub
cmpb
sub
push
push
add
inc
mov
addr16
mov
cmp
and
cmpsb
mov
lods
mov
sti
adc
xor
or
and
mov
pop
out
mov
inc
sbb
clc
cmp
adc
scas
xor
push
in
std
xchg
xor
mov
loope
adc
xorb
aad
popa
add
cmp
sbb
nop
mov
jne
pushf
xor
cltd
pop
xor
aad
xchg
mov
pop
repz
dec
push
stc
cmpsb
jp
mov
lock
xor
scas
das
stos
xchg
add
push
shll
xor
in
mov
repz
xchg
cmovbe
jne
cmpsb
das
vpsubsb
xor
aam
xor
mov
mov
jo
outsl
add
dec
mov
sbb
push
popf
outsb
out
dec
pop
jbe
out
test
enter
add
cmp
inc
inc
cwtl
xor
mov
xor
gs
ret
xchg
and
repnz
mov
fsub
lea
push
fstl
mov
fdivs
cli
repz
shrb
lea
xor
pusha
sub
adc
or
mov
pop
fsubl
jg
nop
push
mov
xor
mov
lcall
mov
test
jo
addr16
es
cltd
mov
dec
pusha
addl
cmp
out
mov
in
arpl
inc
mov
mov
adc
pop
inc
push
adc
add
pop
mov
cmpsb
jne
cmp
negb
mov
je
inc
int3
pop
xchg
xchg
test
add
push
scas
adc
cli
cmpl
mov
gs
movsb
push
or
jmp
cs
inc
sahf
pop
inc
fidivrl
jbe
lods
loop
push
out
xchg
out
adc
out
sbb
cltd
insl
mov
aad
dec
mov
jns
jo
jae
out
cltd
mov
ficompl
loop
or
mov
xchg
jmp
xchg
jo
or
cmp
add
pop
imul
mov
jg
lds
out
fs
jle
xchg
sbb
rep
mov
outsb
outsl
cli
fisttpll
cmp
test
je
push
idivb
iret
add
push
dec
fwait
scas
jno
lock
mov
iret
rcrb
iret
or
pop
js
cmovl
clc
inc
ret
xor
call
or
outsl
jnp
push
cwtl
inc
popa
jecxz
xchg
test
bound
sbb
push
nop
clc
pop
sub
xchg
and
xchg
std
repz
movsb
inc
ficoml
aas
popa
xor
movsb
dec
push
jno
dec
jne
je
mov
fcmovne
inc
mov
jge
mov
dec
mov
pop
xor
xchg
call
loope
outsl
inc
and
lods
inc
mov
add
mov
or
and
shlb
bound
xchg
sbb
cmp
arpl
lds
jmp
shrb
test
sbbl
push
js
or
pop
loope
popa
lock
or
mov
adc
std
mov
push
in
sub
jnp
mov
jae
inc
sub
push
cltd
int
mov
mov
in
mov
lea
add
lahf
push
jmp
addl
xchg
cmpsb
pop
xor
or
jg
push
push
mov
inc
and
cwtl
lods
lds
push
inc
xor
xchg
push
repnz
lods
js
lret
lret
int3
push
cmp
aaa
push
mov
fucomp
and
ret
jmp
daa
jl
fcoml
or
ds
push
das
mov
pusha
ja
push
mov
mov
inc
outsl
mov
out
pop
ljmp
call
test
fsubl
ud2
test
jo
push
pushf
dec
int3
and
lcall
fisubrl
int3
push
sti
fwait
inc
xorb
lret
jmp
or
mov
and
outsl
lcall
or
lahf
mov
out
fsubs
lcall
inc
cld
push
push
pusha
ret
mov
addr16
xchg
push
and
xor
push
adcl
adc
das
ss
sub
add
cwtl
mov
addl
mov
jne
ret
inc
test
xor
sub
fdivl
shlb
xlat
mov
mov
jg
xchg
rcrb
inc
outsb
sbb
pusha
imul
out
xchg
cmc
rcrb
push
jp
pop
inc
shll
repnz
and
jnp
or
inc
rorl
xor
jne
fists
repnz
ss
push
inc
fiadds
das
gs
or
jb
mov
rolb
cmc
mov
adc
movsl
inc
adc
adc
jmp
and
add
pop
mov
test
pop
mov
iret
movsl
or
mov
push
push
mov
mov
imul
rcrb
hlt
call
out
adc
dec
mov
sti
fnsave
imul
in
enter
repnz
and
test
shlb
push
sub
add
hlt
mov
std
stos
jmp
or
mov
sub
sarb
leave
sub
ds
and
pusha
cmpsb
xchg
jo
push
out
adc
inc
adc
dec
mov
sbb
mov
outsb
test
out
adc
lahf
aad
fisttps
and
adc
mov
outsb
add
jno
mov
adc
add
in
push
repz
pusha
repz
es
xchg
xor
les
ss
pop
xor
movsl
cmp
cmp
pop
sub
xchg
sub
mov
adc
arpl
and
cwtl
das
inc
inc
mull
sbb
sub
mull
dec
mov
jnp
not
add
shrl
xor
cvttps2pi
out
xchg
cmc
ja
jmp
dec
push
xor
push
popf
mov
shlb
arpl
add
mov
fimuls
xchg
repz
mov
or
cmp
sbb
pop
push
mov
movsb
sbb
fisubl
jp
rcrl
enter
mov
outsl
sbb
pop
test
movsb
mov
fildll
adc
out
xchg
dec
mov
loopne
addr16
fucomi
test
jle
mov
inc
jno
mov
jnp
jno
push
mov
xchg
in
ffreep
loop
xor
xor
push
push
mov
leave
inc
cli
repz
xor
mov
lret
test
jo
in
push
inc
push
xchg
imull
scas
lods
push
mull
shl
into
jae
adc
jmp
adc
dec
popf
ret
or
scas
sbb
call
cmc
mov
inc
lea
mov
std
ljmp
sahf
mov
add
aaa
aam
jp
and
mov
add
adc
push
repz
dec
push
lret
clc
or
xchg
adc
mov
dec
cwtl
pop
xorb
mov
sub
stos
mov
bswap
scas
scas
cmp
xor
cmp
adc
loope
or
cmp
loopne
pop
fs
loope
pop
insb
ja
frstor
cmp
jle
test
xchg
mov
enter
enter
jp
movsl
ret
xchg
fwait
and
es
push
sbb
adcl
fistps
or
jg
int3
pusha
and
mov
fs
bound
cwtl
jmp
cwtl
push
and
faddl
outsb
mov
push
inc
add
inc
ja
adc
push
dec
popa
lcall
inc
int3
leave
and
mov
mov
lahf
rolb
pushl
jb
sbb
les
adc
pop
daa
sbb
arpl
mov
jp
pop
dec
fbld
ss
dec
jb
testl
mov
xchg
mov
scas
dec
push
mov
jno
hlt
mov
mov
add
shl
orb
push
sbb
outsb
add
and
mov
mov
pop
xor
fiaddl
into
repz
dec
cmp
shlb
jp
sub
clc
stos
js
aaa
stos
int3
rol
mov
inc
shrb
movsb
xchg
lds
mov
sahf
shlb
std
hlt
notl
xchg
test
add
nop
lods
xchg
insl
loope
sbb
daa
lock
cli
inc
pop
out
stc
hlt
outsl
inc
cwtl
adc
push
inc
fiaddl
imul
xor
jecxz
cli
adc
jns
in
xor
add
mov
test
imul
adc
sub
fbld
fistps
scas
stos
int3
pusha
or
sbb
jo
insl
and
iret
into
adc
popa
notl
or
insb
je
ds
test
insb
mov
rcl
xor
pop
test
stos
add
call
push
fs
daa
or
cmp
mov
sbb
sbb
shl
int
cmpsl
sub
jl
xor
lods
xchg
fidivrl
fsubrp
xchg
icebp
orb
cmp
bound
pop
cmc
xchg
icebp
and
sub
push
nop
xor
test
xor
sbb
push
addr16
mov
jl
mov
cmp
cmp
pop
push
xchg
ljmp
xchg
sbb
inc
popf
or
mov
mov
ljmp
mov
xchg
movd
std
shl
call
cmp
add
push
xchg
jg
shll
test
int
outsl
inc
mov
subl
cmp
mov
xchg
and
xorl
jae
jae
rcrb
inc
testl
gs
mov
mov
mov
push
adc
xchg
fs
dec
sarl
dec
loop
jnp
daa
mov
xchg
mov
pop
pop
sub
icebp
andl
pop
imul
loopne
pop
adc
dec
pop
cmp
mov
test
xor
imul
bnd
xchg
add
mov
pop
rcrl
stc
pushf
dec
fbstp
xor
and
mov
jecxz
sbb
rol
add
rcrb
je
int3
push
lret
pop
and
mov
lret
mov
test
daa
inc
sbb
test
arpl
dec
movsb
mov
mov
push
sub
push
cltd
dec
movsb
mov
jns
scas
pop
clc
inc
lret
xchg
mov
rolb
lcall
cwtl
icebp
cmpsb
int3
cmc
adc
pop
imul
mov
mov
cmp
jp
mov
adc
ja
bound
and
inc
in
std
pop
cmp
leave
mov
aam
mov
and
cmpsb
lret
mov
pop
sarl
outsl
imul
push
mov
dec
sbbb
push
mov
cmp
popa
clc
stos
adc
aaa
pop
xchg
loope
jb
ss
mov
les
test
data16
or
mov
fiadds
cmpsl
rcrl
jle
jecxz
shl
mov
xchg
int
push
lea
jae
pop
sbb
inc
xchg
out
dec
divb
push
push
sbb
mov
push
sbb
fcoms
cmp
sbb
outsl
iret
insl
adc
int3
mov
push
sbb
or
xchg
xor
or
jne
and
adc
enter
int3
push
or
fwait
sti
arpl
and
lret
and
cmp
rcrl
cltd
sbb
inc
dec
mov
cmovl
or
icebp
add
mov
in
and
xadd
add
movsl
inc
pop
jge
fstpl
rolb
repz
push
arpl
sub
push
fnstsw
push
stos
xchg
sub
mov
test
sub
inc
inc
adc
andl
xchg
das
adc
and
jno
pop
xchg
and
rcll
xchg
mov
inc
lcall
mov
outsb
stc
mov
lock
push
test
outsb
mov
test
or
xor
test
and
inc
jns
jb
movsl
aas
jae
test
pop
adc
sti
popf
les
mov
shrb
add
mov
test
arpl
sub
loop
jo
mov
sahf
movsb
fnstsw
push
loop
cmp
lock
repnz
out
outsl
mov
test
insb
sbb
mov
ret
nop
lgs
shlb
rcrb
lret
push
cli
inc
sbb
dec
daa
lret
xchg
sub
xlat
insb
pop
lock
dec
iret
xchg
in
ja
lret
adc
leave
korw
mov
lds
mov
inc
ficompl
xchg
jb
mov
push
ljmp
outsb
sub
in
pop
int
mov
xor
adc
loopne
mov
aad
ds
sub
dec
xchg
cmp
mov
cli
dec
dec
aaa
sub
pushf
movsl
adc
inc
into
in
adc
rcrl
addr16
add
mov
mov
or
mov
jae
xchg
pop
movsl
ja
xchg
test
sbb
rcr
adc
dec
loope
dec
cwtl
pop
xchg
or
xor
repnz
inc
gs
push
fisttpl
arpl
aad
push
xor
outsl
push
sub
lods
mov
fidivl
jnp
stos
jo
or
push
jge
xor
scas
cmp
sub
repz
stc
shlb
inc
pop
inc
clc
pop
pop
hlt
mov
out
sar
stc
movsl
mov
sub
lret
in
mov
sbb
aam
cltd
pop
loop
dec
mov
addr16
aaa
fs
dec
aad
mov
push
hlt
jg
aad
icebp
pop
clc
or
or
ret
popa
enter
cmc
inc
jl
add
xchg
fldl2t
movl
aaa
xchg
jnp
jl
aas
mov
inc
or
cmp
xor
and
cmpsl
mov
ror
gs
iret
gs
lods
fcomi
or
adc
xchg
inc
test
adc
cld
scas
popl
and
fcomi
sbb
cmp
jno
cs
inc
add
fwait
movsb
add
mov
or
inc
pop
das
out
aas
popa
jl
mov
xchg
adc
popa
xchg
mov
sub
std
fsts
jmp
or
js
xorl
add
pop
xchg
lods
ljmp
in
pop
jbe
push
das
xchg
jmp
lcall
lret
push
inc
pop
lds
lret
mov
loop
mov
sbbl
jo
mov
shrl
jg
jno
mov
mov
pop
inc
ret
pop
xor
xor
leave
push
andl
jp
or
xor
hlt
ja
mov
icebp
je
ret
xchg
sbb
mov
das
or
jl
loop
nop
push
cld
dec
or
enter
pop
pusha
push
aam
push
leave
ljmp
mov
stos
rcrb
sub
or
cmpl
or
es
jge
add
cld
mov
mov
add
push
push
popa
dec
or
int3
jmp
push
fneni(8087
insb
js
sbb
pop
cmp
sub
xlat
in
mov
test
sahf
jge
sahf
lods
and
sbb
out
aas
push
jl
pop
cmp
xor
and
jbe
xchg
mov
and
and
sti
test
sub
push
pop
xor
pop
aas
lea
jp
and
imul
jb
push
icebp
movsl
scas
ficompl
ret
cli
aad
or
pop
mov
lret
hlt
orl
jmp
jmp
jno
dec
insl
mov
aad
sbb
into
mov
addb
std
sahf
fs
lret
push
lea
pop
ljmp
jb
sub
out
sub
jbe
imul
or
dec
and
loopne
pop
sub
bound
or
adc
mov
addr16
ret
fwait
add
add
fwait
pusha
int3
ss
sar
jo
shrb
das
insb
cmp
mov
or
loop
adc
aad
loop
cltd
inc
imul
or
enter
test
xchg
mov
push
cmp
jno
stos
mov
lods
xchg
test
push
dec
in
lahf
jnp
jp
mov
mov
mov
xor
decl
inc
scas
cmp
cmc
popa
xchg
or
sub
mov
jb
pusha
loop
popf
cltd
push
pop
sbb
sbbl
jecxz
or
in
sub
or
cmp
jno
sbbb
add
je
fidivl
or
xchg
je
inc
mov
pop
dec
aad
push
jl
mov
jbe
jge
mov
lahf
das
xchg
orb
mov
out
or
sub
insb
cmp
inc
and
ret
pop
ret
xor
adc
sub
loop
mov
mov
add
scas
cmc
xchg
push
add
mov
sub
popf
jnp
or
or
dec
stos
cwtl
aaa
decb
xchg
xor
cwtl
jge
adc
pop
mov
in
pop
xchg
pop
dec
or
cli
sbb
clc
inc
jns
pop
scas
cmpsb
sbbb
dec
lds
add
pop
fs
out
outsb
scas
arpl
mov
adc
test
out
fcoms
inc
pop
push
test
or
sub
ljmp
cmp
inc
outsb
loopne
pop
div
dec
pop
and
rorb
and
ja
insb
xor
or
jle
sbb
stc
sbb
add
test
dec
adc
mov
mov
ret
jle
shll
dec
lods
mov
divb
int
pop
fs
lock
xchg
sub
rorl
in
mov
sub
xor
mov
sub
je
xchg
push
mov
sbb
idivl
or
movsb
daa
mov
pop
sahf
jno
clc
cwtl
out
dec
jp
jp
xor
lss
inc
das
jns
add
sbb
pop
cmc
popf
shl
or
sub
outsb
inc
in
js
mov
ja
mov
pop
xor
mov
pushf
mov
jecxz
addl
mov
test
frstor
or
xor
mov
imul
das
push
dec
mov
lahf
xchg
cmpsl
push
mov
sti
mov
nop
cltd
push
mov
clc
aam
or
std
sbb
setns
jnp
lds
adc
mov
cmp
outsl
push
jmp
test
cmp
xchg
dec
iret
fsubrl
cmp
mov
inc
pop
add
lds
sbb
cmp
popa
xchg
jnp
mov
inc
leave
syscall
and
cmp
cwtl
mov
into
push
adc
push
lods
sub
ss
xor
loop
push
jmp
or
ja
xchg
mov
int
call
adc
xchg
mov
sub
imul
push
adc
ss
adc
mov
cli
sar
push
testb
fprem1
xchg
ficompl
sti
push
fldcw
fwait
pop
mov
push
mov
subl
fildll
int3
sti
cmpsb
cmp
mov
pop
mov
jle
loop
xchg
fwait
push
test
cmp
stc
push
cmp
push
xchg
out
pop
sbb
pop
cmpsb
out
sbb
rorl
jnp
jg
mov
and
lret
int3
lea
arpl
jg
jnp
xor
sbb
shll
ja
repnz
shrb
fst
repnz
xchg
push
insb
adc
mov
pop
sbb
xchg
mov
pop
jne
das
jmp
dec
roll
pop
shrb
or
cwtl
and
movsl
or
mov
fnsave
xor
fcomi
nop
jecxz
je
nop
jl
mov
aad
lds
xchg
dec
pop
rcrb
rorl
rol
scas
test
call
imul
push
inc
add
out
add
arpl
inc
test
scas
xchg
push
icebp
shlb
jge
sbbb
repz
je
stos
cmc
mov
jmp
add
stos
lcall
rorb
xor
mov
and
in
int3
jecxz
ret
push
inc
cmc
daa
push
fs
fcompl
pop
dec
push
add
out
aaa
push
pop
movsb
dec
jle
imul
loop
pusha
cmc
mov
adc
sub
push
outsb
adc
fistps
adc
ds
int
add
mov
xchg
jb
fwait
sbb
mov
sbb
sbb
mov
les
push
mov
xor
sub
or
xor
loopne
in
jns
mov
sahf
and
push
in
xchg
lcall
sbb
jle
je
in
addl
iret
dec
cmp
push
xchg
in
inc
ret
lea
mov
adc
cwtl
stos
xor
and
push
xor
inc
stos
jmp
mov
out
or
jp
adc
add
test
scas
push
aas
xorl
cmp
rcrb
ret
icebp
adc
in
dec
in
mov
or
imul
sub
or
sbb
sbb
mov
pop
les
loop
xchg
or
sub
hlt
and
out
pop
pop
pop
adc
cld
pop
repnz
push
cmp
bound
mov
push
testl
bound
lcall
cli
inc
xchg
mov
iret
push
ja
in
adc
xlat
cmp
pop
popa
dec
sti
inc
mov
cwtl
push
lock
xor
ljmp
popl
scas
aam
mov
push
mov
rorl
leave
popa
push
cmpb
es
pop
xchg
icebp
movsl
lods
mov
popa
add
inc
pushf
cmc
dec
xchg
add
mov
jb
xlat
scas
add
imul
cli
pop
push
add
outsb
lods
in
iret
inc
dec
push
js
cmp
aaa
push
pop
dec
sub
jb
xchg
sub
pop
mov
push
hlt
scas
mov
mov
and
and
repnz
fiaddl
in
push
mov
movsl
hlt
xchg
push
addr16
lods
jp
ja
ss
xchg
adc
cwtl
in
data16
xchg
aas
shrl
arpl
outsb
cmp
mov
je
test
cmp
mov
enter
aad
jno
mov
clc
in
sub
inc
fcompl
movsl
fisttps
loopne
mov
into
add
aaa
push
out
jbe
adc
imul
inc
pop
outsl
sbb
sbb
cmp
cmp
je
test
fs
cld
xorl
loope
lods
inc
mov
gs
repz
jnp
adc
xor
xor
xor
aas
dec
test
mov
test
cmp
cli
mov
sbbl
xchg
mov
pop
lock
faddl
xchg
test
jge
sub
mov
cmp
mov
ds
inc
aas
fidivl
push
or
or
in
ja
push
inc
push
push
shlb
sahf
in
adc
xchg
or
mov
inc
jo
cmp
notl
test
pusha
jae
xlat
incb
sub
push
stos
inc
mov
inc
cli
mov
enter
jl
sbb
in
idivl
pusha
inc
push
nop
scas
aaa
and
ds
xor
jecxz
insl
xor
ret
mov
stc
adc
mov
cmp
sub
or
imul
push
push
aaa
jbe
adc
add
scas
mov
mov
mov
push
cmp
insb
das
add
fisubs
mov
add
mov
add
dec
aad
push
jle
fisubl
rcr
xchg
xlat
icebp
out
shll
ja
sub
jge
loope
ljmp
xchg
leave
jns
inc
push
je
pop
gs
dec
xchg
or
es
cltd
fbld
fdivp
add
or
xchg
sahf
subl
pop
shrb
cmc
sar
dec
dec
lods
sub
pop
add
sbb
cli
push
test
or
inc
das
das
jbe
into
xor
aad
aas
push
sahf
cli
mov
pop
popf
enter
mov
loope
imul
imul
in
mov
mov
inc
fdivl
loop
bound
das
jno
sub
sbb
hlt
mov
and
mov
imul
lret
xor
popf
adc
jae
jbe
mov
stc
xchg
mov
push
movsl
js
fcompl
in
push
in
pushf
jmp
ret
out
sahf
lret
push
adc
inc
mov
mov
je
pop
mov
and
xor
enter
push
sarb
sub
sti
stos
adc
add
int
aam
xchg
fimull
add
in
pop
jno
adcl
cmp
inc
cmc
out
out
loope
fisubrs
inc
orb
adc
test
xchg
add
insb
es
rcll
sub
cltd
loopne
mov
mov
das
and
mov
mov
push
jmp
xchg
icebp
movsl
push
mov
xor
xchg
mov
lods
mov
scas
lea
inc
sahf
lods
adc
fsts
xor
dec
cmpsl
jg
imul
sbb
test
xchg
sub
mov
cmp
sub
dec
xchg
add
mov
das
inc
and
jecxz
ja
and
or
xor
xchg
cmp
fs
adc
test
sub
outsl
loop
xchg
insl
incl
divl
sahf
xor
mov
icebp
or
pop
sbbl
mov
mov
adc
icebp
inc
add
mov
xchg
sbb
aas
mov
or
jo
mov
fiadds
mov
jg
loope
stos
bound
loopne
jle
and
sbb
sub
add
cmp
int3
dec
rorb
pusha
cmp
mov
lea
movsb
cltd
mov
shl
aas
cmp
out
lods
cmp
aaa
inc
sarb
clc
test
call
sub
push
xor
and
dec
sbb
popa
or
aad
insl
cs
adc
out
stc
mov
out
pop
adc
lods
enter
fstps
divl
cmp
sub
jmp
mov
pop
mov
push
xchg
add
xchg
sbbl
mov
sahf
jge
test
mov
outsb
aas
hlt
or
outsb
rcr
daa
iret
sbb
jg
sbb
outsl
dec
cmpsb
insb
repz
data16
sub
add
dec
test
imul
mov
add
inc
sub
fsubrl
push
xchg
repz
test
jmp
jmp
or
mov
cmp
xlat
aad
pop
mov
fldcw
repnz
loope
push
outsb
mov
leave
jo
xchg
sub
xchg
in
out
sub
ficoml
and
xor
jp
adc
les
mov
std
sub
pop
ss
out
pop
sub
mov
leave
jo
imul
inc
clc
mov
push
aad
in
sub
add
popf
or
jno
es
testl
jae
ficompl
leave
jo
inc
lahf
test
ret
jl
sbb
je
push
pop
leave
jmp
aaa
mov
xlat
push
or
jecxz
adc
aam
loope
push
jbe
inc
lcall
push
xchg
add
jecxz
and
inc
sbb
mov
or
cs
clc
pop
adc
bound
mov
repnz
arpl
mov
sti
hlt
in
leave
jle
sti
or
pushf
cmpsl
inc
and
pop
push
fdivl
adc
sub
jg
into
mov
data16
pop
mov
add
test
sbb
jns
sbb
mov
in
push
mov
adc
push
mov
std
dec
movsl
outsb
jle
push
sub
lahf
repz
icebp
fincstp
outsb
das
cmpsl
dec
inc
xchg
popf
or
mov
and
sbb
inc
popf
or
sarb
mov
fidivs
xchg
mov
xchg
jp
mov
std
mov
rcl
lret
adc
dec
add
test
mov
into
insl
lods
cmp
in
leave
pop
ss
ja
cli
xor
push
push
iret
adc
call
mov
jno
push
cltd
xor
dec
outsl
pop
lcall
jg
xlat
outsb
dec
sbb
or
pop
and
rcl
je
jmp
dec
add
sbb
test
test
and
push
mov
xchg
sub
imul
stos
testl
nop
push
fsubrl
jb
pop
or
mov
mov
pop
testb
pop
out
nop
sbb
inc
je
pusha
xor
xor
movsl
cmp
push
pop
sahf
ret
out
cmp
fsub
and
add
sbb
popf
mov
cmp
aad
aam
push
sub
or
stc
adcl
pop
xor
jb
loope
stos
inc
jecxz
or
ss
or
loope
iret
jb
cmp
std
xchg
push
xor
dec
decl
pusha
push
inc
enter
push
gs
pop
dec
cwtl
call
mov
add
outsb
insb
dec
xor
mov
jle
xchg
fdivs
dec
imul
imul
pop
ret
sbb
out
imul
dec
fsubl
adc
test
mov
jne
sti
add
mov
or
clc
cmp
shl
lret
add
iret
shr
adc
data16
cmp
das
into
fidivrs
xchg
add
testb
out
sub
or
xor
cld
sub
and
sbb
cmp
cltd
add
inc
mov
shr
outsl
popl
sbb
add
push
sbb
mov
pushf
adc
xchg
sub
popf
ljmp
cmpsb
loop
xlat
sarl
pop
sub
mov
jnp
cmpps
push
inc
xchg
adcb
clc
xchg
pop
sbb
jb
arpl
ror
aas
dec
in
addr16
adc
insb
add
xor
cmpsb
gs
and
mov
leave
clc
test
mov
cmp
pop
repnz
pop
jnp
cs
add
mov
ret
inc
fstps
mov
lret
mov
mov
or
shl
push
popf
pop
fmuls
xchg
scas
inc
ret
jg
jb
imul
add
pop
xchg
inc
mov
adc
mov
adc
mov
push
jg
ljmp
push
sbb
sub
or
cmp
pop
lods
outsl
xchg
mov
mov
inc
leave
mov
lret
pusha
push
ret
popa
or
push
shrb
mov
imul
sbb
xor
sbb
aaa
add
std
push
out
stos
inc
jns
js
jne
out
cmp
das
lock
mov
mov
pop
scas
cmp
cmpsb
mov
push
xchg
mov
sbb
push
mov
fisubrs
inc
xor
gs
lret
sub
add
cmp
xlat
sbb
add
insl
popl
jmp
fucom
out
dec
loop
pop
ljmp
mov
gs
xor
aad
mov
xchg
sub
sbb
fimull
mov
pop
xor
lcall
scas
or
mov
add
inc
jp
gs
sbb
and
cmp
pop
sbb
stos
add
jmp
popa
and
in
mov
les
pop
cld
sub
xchg
mov
xor
into
pop
and
inc
in
enter
and
cmp
sbb
enter
popa
repz
mov
xlat
aam
mov
imul
push
out
jne
loope
add
addb
cmp
push
mov
test
push
xchg
push
xor
out
es
insb
push
inc
ljmp
and
xchg
add
ja
cmp
or
fcomp
jle
or
in
sub
je
xchg
mov
mov
fs
clc
mov
cmp
dec
mov
push
add
pop
push
xor
add
add
in
and
cli
inc
jno
shll
rorl
pop
push
insl
cmp
push
rclb
mov
test
inc
jns
inc
gs
jp
cltd
and
mov
fstpt
out
xchg
xor
mov
rorb
push
mov
mulb
out
jne
adc
jae
xor
loope
dec
out
inc
adc
push
push
push
frstor
sbb
ljmp
jno
add
and
rolb
pop
mov
fimuls
jae
jnp
sarl
mov
imul
movsb
out
ljmp
sbb
sub
push
or
ficomps
int3
bound
xchg
pop
aas
rorl
mov
inc
sbb
sarl
in
ss
call
xchg
into
sub
test
push
movsl
sbb
or
cmpl
inc
lods
jns
dec
sahf
imull
shlb
roll
add
nop
mov
outsl
cltd
mov
or
mov
popf
fsubrs
subb
sti
pop
and
int3
fld
jnp
add
hlt
add
sarl
push
push
jl
loope
loopne
xchg
shll
jmp
cld
test
shll
imul
dec
ljmp
xchg
js
fsubrp
ds
add
stos
hlt
lock
xchg
fwait
xor
mov
xchg
iret
orl
enter
loope
popa
loope
adcb
xorb
out
and
rcr
mov
cwtl
js
stc
push
repz
gs
fdivl
outsl
mov
popa
pop
adc
movsb
cli
pop
test
test
mov
fcompl
loop
push
inc
or
popa
dec
mov
aad
and
fmuls
dec
mov
test
xchg
adc
mov
jne
pop
out
or
notl
or
das
lret
or
fldl
xchg
test
addr16
imul
lret
mov
ja
ljmp
movsl
ret
jnp
xchg
out
enter
push
sub
and
fiadds
sub
inc
mov
pop
add
in
jns
lds
adc
jo
stos
fstpl
cltd
stos
lahf
ds
in
dec
popf
outsb
ficomps
and
imul
xor
movsb
loope
mov
test
jp
ja
dec
cmpsb
aaa
fmuls
xchg
jnp
inc
jp
imul
sbb
and
inc
gs
and
adc
dec
and
mov
dec
pop
jmp
and
nop
push
aas
notb
xor
inc
sahf
xlat
mov
lods
fsub
vpsllq
sub
jns
push
mov
in
addr16
stos
ss
aam
and
nop
mov
sbb
callw
or
fidivl
out
mov
cmp
stos
in
xor
xchg
mov
xor
repnz
cwtl
inc
push
jb
jns
loope
mov
add
pop
ja
jb
inc
and
punpcklbw
sti
lds
inc
jmp
push
pusha
sti
pop
mov
sbb
mov
out
adc
mov
das
cmp
pop
jmp
pop
fwait
call
std
inc
fs
mulb
pop
or
xchg
pop
rcpps
mov
push
cmp
lds
stos
cmp
cs
lret
mov
xchg
sub
or
xor
mov
and
pop
mov
out
push
lret
jae
lods
sub
rcrl
nopl
stos
in
ror
mov
sbb
mov
iret
adc
fsubrs
and
ficomps
negb
rcrb
movswl
insb
jb
push
and
push
scas
mov
add
into
mov
jle
sahf
fldl
sub
xchg
jo
lahf
hlt
mov
mov
in
das
jae
pop
hlt
jnp
dec
sarl
jl
test
inc
push
out
or
xor
pop
fsubrp
pop
lock
and
lea
arpl
ds
lods
mov
ds
and
fidivl
mov
mov
cmp
into
xor
mov
test
mov
sbb
cltd
xorl
js
mov
push
addb
sub
iret
lcall
jp
and
iret
sub
adc
data16
int
jbe
push
sub
and
xchg
sbb
cmp
lods
jmp
xchg
xor
movsb
rcr
fadd
dec
mov
inc
dec
inc
push
clc
push
dec
movsb
add
sbb
hlt
popf
xchg
add
adc
clc
cmp
ds
xor
dec
cmp
or
out
mov
dec
sbb
loop
push
lcall
sub
popa
push
push
xchg
sbb
jp
es
cmpsb
insb
add
adcl
add
sbb
mov
scas
out
sti
sub
push
and
test
js
fcoms
mov
sub
test
or
sbb
sub
push
add
mov
add
mov
shlb
mov
or
pusha
das
add
call
pushf
flds
cwtl
jmp
jb
shrb
popf
xor
pop
cmp
add
sti
jmp
cmp
mov
movsb
in
enter
test
push
fbld
subl
xchg
cmpsl
loope
shr
xor
pop
xchg
mov
and
gs
mov
mov
bound
dec
xchg
stos
loopne
out
add
aam
xchg
sub
loop
adc
xchg
aaa
fisubrs
add
jns
lcall
add
mov
adcb
ja
lret
cwtl
test
lret
in
pop
inc
stos
add
adc
cmp
push
dec
jecxz
or
push
inc
cmc
sbb
and
xchg
xlat
push
outsl
push
clc
jae
or
mov
jle
fld
andb
add
jle
sahf
push
dec
lock
mov
pop
xor
fwait
fs
and
mov
and
mov
lahf
sub
lods
pop
ret
and
mov
cwtl
jae
and
mov
xor
push
sub
jle
xchg
cmpsb
mov
arpl
fs
test
ss
xor
icebp
sub
hlt
xchg
adc
inc
mov
movsl
adc
aad
adc
movsl
ret
push
daa
push
dec
outsl
xor
mov
cmp
roll
flds
aaa
jns
jg,pn
das
jle
imul
add
icebp
movsb
and
lret
sbbb
cld
inc
pop
addr16
xchg
jg
sbb
jge,pn
lds
pop
jnp
xchg
inc
fsubl
leave
lock
pop
sarl
pop
outsb
or
xchg
call
icebp
cmp
out
cld
imul
jp
hlt
dec
andl
fdivl
mov
adc
out
stos
mov
js
jno
xchg
jge
mov
lods
jns
lahf
cmp
lret
pop
out
sbb
xchg
or
cmp
out
jmp
notl
pop
in
pop
fwait
daa
adc
sub
test
ffree
lret
sub
mov
pop
dec
add
es
jno
cld
dec
push
push
je
lcall
fdivs
clc
mov
jecxz
cltd
pop
xor
xchg
xchg
rolb
add
mov
out
push
loopne
testl
push
idivb
fists
push
test
rclb
add
pop
loope
inc
stc
or
pop
xor
jp
cmp
ljmp
call
mov
jne
adc
inc
stc
jae
mov
pop
enter
xor
sahf
cmp
mov
lcall
xor
repz
out
inc
dec
clc
cmpsb
mov
mov
or
jno
xchg
ljmp
imul
cli
jle
jmp
cltd
mov
lret
inc
cli
or
and
dec
jecxz
jle
das
lock
loopne
push
popf
cmpsl
adc
dec
out
cmp
xchg
xchg
dec
fnsave
in
aam
loope
lret
bound
scas
mov
push
movsl
mov
sub
rol
jns
mov
or
xchg
aas
pushl
jns
cwtl
ljmp
addl
inc
dec
pushl
cmc
xor
xchg
jbe
out
mov
stos
sub
dec
xor
je
push
dec
setbe
inc
out
fmulp
out
mov
loop
xchg
fnsave
adc
adc
sbb
or
cmpsb
jbe
jp
xchg
aad
jle
hlt
not
rolb
repnz
dec
aas
inc
mov
arpl
push
out
cld
test
push
rorb
shl
push
and
inc
fistpl
movsl
pop
jl
inc
popa
jl
roll
cltd
fimull
rcr
out
mov
aaa
pop
ds
adc
aaa
shll
xchg
inc
cmp
js
insl
scas
dec
popa
loope
nop
mov
mov
scas
jecxz
xchg
add
add
ja
cmc
sti
push
dec
xor
mov
cmpsb
into
fsubl
imul
cmp
int3
pop
dec
aas
lds
lods
jae
or
lret
in
sub
add
xorb
addr16
inc
xchg
in
xchg
repnz
dec
outsb
jb
loop
add
mov
rorb
loopne
sbb
sub
xchg
xor
ficoml
das
add
mov
mov
ja
daa
mov
repz
mov
or
adc
mov
mov
mov
push
sub
mov
aas
xor
lds
add
inc
stos
fcoms
test
cmp
clc
cmp
sbb
cmp
mov
cmp
jnp
pop
ret
inc
jnp
or
inc
fsubl
add
pop
mov
outsb
dec
jle
orl
cld
mov
lods
std
mov
pusha
repnz
sub
psubusw
push
js
jle
subb
jl
xor
daa
movsl
sbb
jge
call
mov
arpl
aad
pop
mov
xchg
mov
xchg
sti
xchg
dec
jecxz
pop
repnz
rolb
mov
jns
jl
mov
fldl
das
stos
jmp
inc
inc
pusha
dec
and
sub
mov
push
aas
lret
fs
mov
test
adc
pop
ljmp
movsb
jle
pop
movsl
jmp
sbbb
mov
or
addl
ret
repz
adc
dec
pusha
bound
mov
push
lahf
adc
fmull
jle
cmp
pop
mov
dec
dec
repnz
ret
mov
sarl
rolb
pop
mov
test
mov
pop
push
and
xchg
inc
xchg
push
adc
mov
mov
fidivl
hlt
mov
add
sbb
rclb
push
inc
add
mov
movsb
or
xchg
icebp
mov
mov
int3
fsubp
popa
cmpl
inc
stos
cld
mov
shrl
les
or
aaa
imul
and
xchg
xor
xchg
imul
and
subl
cmpb
imul
test
gs
sub
insb
je
and
xor
adc
xchg
mov
dec
sbb
in
cmpsb
dec
mov
scas
inc
cmpl
push
xchg
scas
inc
mov
cli
es
dec
fdivrl
aad
int
insb
test
sahf
shlb
push
imul
and
addr16
shlb
popa
adc
sbb
push
callw
add
nop
sub
outsb
sub
in
das
push
lods
pop
lock
mov
roll
add
scas
lahf
test
mov
test
push
lret
mov
sti
test
popa
inc
mov
pop
imul
fimull
fsubs
jb
lods
lods
and
xor
dec
fnstenv
and
pop
push
or
and
inc
ret
pop
jp
lahf
pop
adc
inc
mov
in
test
imul
test
sbb
lea
xchg
ret
jae
mov
sti
push
cwtl
cs
in
fisubrs
push
fsubl
bound
xor
jbe
andl
inc
fsts
insb
cmp
fisttpl
bnd
mov
pop
js
out
shl
cmp
cmp
loop
lahf
in
rol
aam
adc
rcrl
add
push
cld
jae
sbb
inc
dec
cmpps
incb
xchg
lahf
xchg
and
xor
in
dec
adc
out
push
push
les
sub
mov
xlat
daa
pop
out
dec
negl
test
insl
jne
lahf
pushl
push
scas
jge
jecxz
icebp
mov
pop
out
xlat
fists
bound
scas
jmp
outsl
cmp
bound
shlb
outsl
push
jl
xchg
inc
stos
adc
push
add
test
pop
pushf
out
or
jle
and
dec
pop
sub
lds
push
cld
jp
aad
push
popf
repz
stos
fs
sbb
or
adc
out
std
lds
jbe
fwait
sub
cltd
and
popf
stc
push
out
movsb
push
fnstcw
sbb
out
xchg
mov
adc
movsl
mov
popa
cltd
mov
popf
shrb
xchg
lods
sti
xor
xor
movsb
sbb
fwait
xor
ljmp
add
mov
or
sahf
into
rclb
mov
ret
jl
cmc
or
mov
jp
ret
ret
ds
inc
sbb
popa
push
rclb
nop
and
test
mov
dec
or
nop
jl
out
dec
xor
lds
add
sbb
and
pushf
sub
andl
mov
sbb
mov
xor
mov
pop
js
jmp
push
mov
pop
lcall
stos
mov
pusha
gs
cmpsl
mov
xor
mov
shrb
cmc
iret
add
push
mov
mov
adc
fldt
test
aas
mov
icebp
mov
cld
push
add
test
std
arpl
inc
mov
jg
out
jns
stos
xchg
and
xchg
insb
sti
cmp
lcall
out
xchg
in
out
add
push
xor
outsb
jl
popa
sbb
xor
enter
jg
inc
lea
into
outsb
adc
add
shl
jg
add
test
sub
sub
shll
cmp
in
dec
repnz
cmp
roll
pop
jle
imul
ss
in
lea
pop
outsb
divb
push
dec
cmp
popf
cmp
mov
pop
repnz
movsb
add
pusha
loopne
inc
popf
xchg
dec
dec
es
das
mov
aas
mov
clc
sub
sbb
enter
xor
iret
std
daa
cmp
stos
or
lcall
dec
jns
fistpll
fs
popa
fmull
dec
mov
pop
outsl
push
or
or
sti
jbe
mov
fnstsw
push
arpl
testb
fadd
add
pop
not
lock
cmp
xchg
xchg
mov
push
xchg
xor
xchg
xor
push
cs
cmp
sbb
pushf
pop
or
cltd
aas
mov
repz
pop
cmc
pop
push
adc
cmp
sub
sbb
mov
inc
dec
xor
cmp
cli
fwait
push
mov
out
jp
jmp
and
jno
movsb
or
add
mov
add
aaa
pop
or
dec
ds
int3
pmovmskb
out
mov
iret
xchg
mov
lahf
cmp
pmuludq
mov
rol
loope
imul
imul
push
sub
popa
jmp
cltd
scas
or
in
mov
daa
push
inc
push
cmp
xor
shl
cmpsb
dec
movsb
and
imul
aam
mov
shl
add
movsl
insb
or
inc
sbb
push
add
out
out
sbb
lods
fildll
pop
ret
fwait
loop
push
mov
xor
test
mov
dec
mov
mov
jl
adc
shlb
push
mov
bound
sbb
and
jmp
pop
stc
in
mov
popa
xor
enter
fnstcw
rorl
sub
shll
jecxz
movsl
in
iret
xchg
add
out
test
jno
push
or
insb
add
pop
jecxz
sti
fidivs
stos
push
lods
xchg
stos
jmp
xchg
mov
out
xchg
dec
iret
push
sbb
sbb
popf
ret
imul
jo
dec
mov
out
daa
out
aad
rolb
add
xor
lods
arpl
push
jle
subl
sbb
fidivs
mov
shlb
sbb
xchg
test
stos
push
call
fdivl
rolb
sub
out
test
jb
in
lret
jno
mov
in
lea
cmp
fs
out
sbb
es
dec
adc
mov
xor
inc
shrb
loop
lea
jae
and
adc
fistpll
loope,pt
sbb
pop
mov
lret
push
test
inc
pushf
adc
stc
in
sbb
rcll
pop
lock
js
jbe
push
in
lods
cwtl
outsb
loope
lea
xor
push
and
pop
fldt
cli
and
out
cmpsl
repz
push
inc
add
inc
arpl
add
das
inc
and
sub
imul
sub
sub
inc
aad
mov
dec
imul
imul
mov
cs
pop
imul
pushf
sub
push
xlat
mov
mov
jmp
fstpt
xor
xor
cld
push
je
mov
stos
inc
lea
dec
fcomp
jae
cmpsl
pop
cmpsl
cwtl
mov
xchg
loop
test
rcl
mov
lret
test
inc
stc
loop
xchg
push
add
mov
jbe
cmpsb
daa
outsb
inc
aam
inc
fcmovu
adc
stc
jne
xor
mov
bound
lcall
mov
xor
bound
push
pop
inc
es
fnstsw
and
int
fildl
cld
adc
daa
inc
sub
sub
popa
ret
cmp
ret
repnz
xchg
pusha
cmp
sbb
mov
xor
mov
call
xor
imul
test
pop
inc
inc
add
jno
xchg
stos
jno
popf
cmp
repnz
mov
push
adc
mov
test
div
aad
out
mov
or
fadds
jp
loopne
jl
enter
std
repz
sub
cmpsl
ret
mov
cmpsb
out
cltd
adcl
sub
pop
scas
sbb
or
scas
ret
in
in
loope
cltd
and
dec
mov
xchg
and
cmp
xor
inc
jle
repnz
inc
fmuls
push
jmp
aas
or
clc
dec
mov
stos
loope
mov
lds
iret
divb
mov
incb
test
mov
cwtl
sbb
out
lds
fcom
popa
loope
xchg
mov
ss
shl
inc
sub
jmp
add
add
insl
jg
fstpt
jbe
stc
push
lea
mov
cltd
pop
mov
scas
mov
fst
shll
lds
xchg
pop
fmul
jbe
addr16
pop
cmpsb
sub
ds
cmp
test
xor
xchg
and
push
out
lods
loop
cwtl
pop
ds
lock
sbb
je
push
scas
mov
inc
data16
add
int
xchg
adc
adcl
pop
jb
xlat
sti
jp
ss
frstor
mov
jle
imul
repz
stos
pop
xchg
dec
or
sub
xchg
sub
in
dec
add
xlat
rcrb
xchg
mov
movsb
mov
push
sub
mov
adc
test
mov
std
fists
stos
fisubrs
inc
push
dec
in
and
std
arpl
cs
data16
mov
xchg
inc
in
inc
cli
mov
in
xchg
pop
fwait
sti
inc
jecxz
fcomps
stos
sbbl
xchg
pop
xchg
jno
mov
imul
or
testl
inc
in
or
adc
fidivrs
into
fs
fiaddl
aas
ljmp
cmp
push
mov
test
loopne
aas
xchg
add
inc
ja
xchg
xor
dec
pushf
or
ficoms
xchg
xor
cmpsl
aas
xchg
sbb
pop
jnp
add
fiadds
out
xchg
push
loop
mov
jmp
dec
sbb
rcl
mov
push
or
into
and
shlb
imul
jnp
fwait
xchg
lret
fstp
sub
cmp
mov
mov
xor
sti
je
jecxz
add
mov
pop
fdivs
push
shll
addl
add
push
xchg
sub
sub
push
and
imul
jg
mov
mov
adcl
outsl
daa
fdivrl
out
mov
jo
push
inc
pop
fwait
add
ds
fld
pusha
repz
out
ja
out
mov
jge
fmuls
sahf
pop
insl
or
sahf
jp
cmpsl
stos
and
mov
dec
mov
sub
mov
sub
mov
adc
ret
inc
xchg
pop
les
jo
out
mov
ret
push
repz
pop
js
push
xor
cltd
in
mov
pop
add
sahf
pop
out
iret
arpl
imul
jcxz
and
cmp
ficoms
add
mov
add
mov
int3
loopne
pop
xchg
out
pop
xchg
or
notrack
xchg
mov
sub
xchg
sbb
xorl
xor
push
adc
jp
rorb
addr16
mov
js
xchg
dec
rorb
jle
jl
jge
adc
leave
and
lahf
mov
sub
and
push
out
lret
pop
dec
pop
int
fs
mov
sbb
mov
into
mov
and
stos
or
cmpsl
fdivrl
aad
add
push
xor
jge
cmp
mov
sbb
sbb
or
push
cmp
out
push
jg
shrb
jle
rol
mov
leave
int3
pop
dec
xchg
outsb
repz
sbb
jecxz
sarb
ficoml
mov
xchg
mov
pop
push
call
or
inc
inc
lahf
mov
mov
jmp
jo
xchg
mov
mov
push
addr16
scas
test
cwtl
pusha
push
ret
mov
push
mov
sar
ret
pop
fnstenv
jno
incl
jecxz
fwait
and
jle
aaa
dec
push
out
dec
jmp
fsubrl
int
leave
sub
xor
lret
lret
push
or
mov
fmull
shrb
mov
or
outsl
shrl
lea
adc
mov
addr16
add
out
popa
adc
sbb
insl
test
les
lds
in
inc
bound
subl
shrl
adc
ss
xchg
es
lea
push
outsl
push
mov
xchg
pop
mov
push
jbe
fs
mov
jmp
call
loope
mov
xchg
adc
hlt
pop
das
into
scas
sarl
pop
cld
cmc
scas
inc
daa
push
dec
cmp
or
daa
mov
inc
ret
fidivl
jmp
cwtl
mov
xor
shrb
mov
nop
sub
scas
push
test
hlt
cmp
inc
push
lcall
inc
push
mov
ss
movsl
sbb
xchg
bound
mov
out
xchg
dec
movsb
dec
jns
test
pop
in
fwait
into
pop
ss
lcall
scas
add
sub
hlt
xchg
insl
sbb
aas
push
mov
lret
xchg
adc
pop
movsb
cmp
ja
out
ret
test
cmc
sbb
js
cld
gs
scas
js
push
cs
xlat
jb
push
mov
push
xor
mov
arpl
mov
and
mov
xor
adc
mov
pop
in
inc
cmp
or
fcmovne
xor
mov
andb
in
fists
add
pushl
mov
mov
cli
aaa
inc
mov
add
mov
or
mov
push
and
and
out
jecxz
mov
inc
leave
adc
jno
leave
movsl
push
lahf
pop
jne
std
jl
ljmp
sahf
scas
push
insb
add
loopne
xchg
push
movsl
lret
xchg
jecxz
dec
mov
and
ds
flds
out
cli
inc
sbb
std
lahf
push
fs
mov
popf
int3
lods
jecxz
pop
sbb
add
mov
cmpsl
mov
pshufw
stos
mov
xor
pop
mov
cmp
or
lods
out
push
xchg
sub
fdivs
jnp
pop
outsl
fcmove
adc
ficoml
inc
jle
ljmp
pushf
xor
ret
sub
push
out
jmp
xor
fadd
or
cmp
push
mov
mov
test
mov
repz
scas
aam
push
mov
stc
nop
movsl
dec
xor
pop
fwait
push
loope
jge
mull
imul
pop
mov
rorl
mov
call
or
nop
call
fimull
arpl
sub
out
push
fistpll
xor
push
loope
or
aaa
sub
cmp
fcompl
mov
scas
ret
xor
sub
dec
lods
sub
sbb
jge
fisubs
xchg
jp
xchg
sbb
cli
push
mov
in
pop
dec
repnz
out
xchg
in
dec
into
xchg
mov
and
nop
sbb
and
insb
loop
xchg
filds
hlt
push
cs
and
sub
jmp
jb
push
arpl
mov
ljmp
pop
mov
jp
inc
push
jno
mov
scas
xchg
xchg
leave
jne
pop
fwait
push
cwtl
sbb
rcrb
clc
cmpsb
clc
jg
mov
dec
pop
scas
dec
xchg
scas
mov
ror
pop
pop
rol
sub
push
cs
hlt
out
pop
out
ds
out
adc
sbb
or
jns
lock
dec
data16
mov
lock
or
inc
fcompl
mov
jbe
les
jnp
mov
dec
enter
sub
xor
pop
and
lea
stc
dec
xor
add
or
arpl
mov
cli
test
lods
frstor
stos
pop
fdivrl
adc
mov
jb
into
movsb
and
mov
leave
pushf
out
push
pop
inc
into
and
les
cwtl
pop
add
cmp
sub
sbb
mov
mov
jge
sbb
mov
mul
mov
sub
int
mulb
lods
sahf
aad
test
sub
dec
fsubrp
int3
mov
push
repz
movd
popf
scas
mov
xchg
test
popa
cltd
stc
popf
sbb
jecxz
add
ljmp
push
cmc
mov
jo
mov
inc
xchg
push
inc
testl
lea
jbe
jle
dec
sbb
ss
gs
addr16
outsl
inc
xlat
repz
and
cmp
add
fcmovu
jb
loope
mov
in
xchg
ss
enter
cmp
mov
sti
scas
mov
adc
and
fidivrs
or
std
mov
pop
lret
mov
pop
push
call
inc
test
sbb
and
xchg
mov
cmp
adc
std
xchg
je
mov
pop
jne
push
jmp
dec
xor
decl
int3
and
mov
fstpl
scas
cmp
mov
fistps
push
imul
fadds
nop
repnz
lds
mov
adc
cmp
add
or
arpl
mov
mov
cltd
add
pop
cmp
sub
lahf
pop
lock
inc
ss
ja
daa
mov
adc
test
scas
dec
add
sub
test
mov
jns
lret
cmp
pushf
scas
sbb
mov
xlat
mov
sbb
inc
js
ficoml
adc
jnp
sbb
and
mul
incb
hlt
nop
pop
adc
test
and
jg
aas
popa
lock
push
nop
pop
cmp
rcll
inc
inc
fs
dec
out
ljmp
insl
dec
lods
adc
pop
seta
jl
xor
incl
das
inc
xchg
idivl
mov
pop
lods
ret
leave
test
js
add
fnstsw
fwait
test
int
or
ret
xchg
mov
test
jns
pop
adc
pop
stos
data16
xchg
lods
jecxz
insl
xchg
jmp
out
mov
adc
inc
adc
xor
aam
inc
push
loopne
imul
js
cmp
ds
loopne
xor
xchg
jl
and
push
mov
orl
imul
ficoms
xor
jns
mov
cmc
out
repnz
lea
aam
icebp
dec
mov
mov
ss
mov
inc
into
jbe
scas
jno
pop
sub
or
sbb
loopne
xor
bound
lcall
test
xor
lcall
or
testb
pop
stos
pop
mov
sub
sahf
nop
pop
insl
mov
dec
aas
adc
xchg
fnsave
dec
add
in
test
cmc
sbb
sub
in
xor
mov
xchg
and
sub
jne
inc
sbb
pop
ds
cmp
inc
pop
dec
push
pop
fistpll
add
sbb
andl
mov
cmpsl
scas
and
or
or
or
fsubr
xchg
dec
jae
xchg
xor
xchg
push
int3
mov
int
cmp
arpl
jmp
jno
inc
fwait
add
inc
in
into
push
loop
cmp
lock
loop
pop
fwait
jnp
loope
add
daa
inc
push
mov
enter
inc
cmp
loope
jno
jno
sub
movb
addr16
mov
push
test
pop
mov
aam
mov
mov
test
shrl
or
or
sbb
mov
and
out
pop
in
adc
push
cs
adc
mov
mov
rcrl
test
jle
cmp
popf
xor
sub
popa
cli
mov
sbb
scas
add
jge
pop
mov
cwtl
das
pop
das
sub
clc
inc
mov
lock
sub
add
nop
sub
out
js
into
pop
sahf
dec
test
mov
mov
cmpsb
fs
xchg
xor
add
adc
jl
or
or
jbe
jno
jno
nop
cmp
shlb
out
stos
push
rorb
lock
test
movb
enter
fldl
lcall
xlat
sub
in
pop
mov
add
sub
dec
fidivrl
les
and
mov
mov
or
mov
cli
fwait
push
push
fnstcw
adc
das
repnz
mov
fstpt
xor
pop
push
inc
dec
cmp
xchg
sbb
scas
mov
and
jmp
jnp
push
push
push
lods
insl
pop
sbbl
outsb
fwait
dec
xor
add
jmp
mov
data16
push
jb
fsub
insl
sub
js
pop
mov
aam
add
leave
pusha
mov
sub
ret
int
stc
push
pop
mov
daa
mov
repz
fnstcw
lock
leave
fxch
push
loopne
loope
mov
lea
movsb
lods
inc
xchg
sbb
stc
mov
mov
test
sahf
adcb
mov
popa
mov
mov
stos
sbb
mov
cltd
jmp
or
xchg
call
loopne
fisubl
add
xor
in
inc
push
lods
push
xchg
aas
mov
xchg
pop
xor
push
fidivs
in
rclb
cmp
shrl
imul
mov
fbstp
in
push
add
push
inc
xor
jo
mov
and
inc
cmp
test
xchg
sbb
pop
or
sbb
push
sbbl
nop
sti
pop
dec
loope
jg
imul
or
shrl
dec
pop
pop
dec
xor
cld
sub
dec
fstps
cmp
mov
sbb
mov
jbe
or
out
add
mov
dec
and
fisubs
sub
push
lret
out
leave
lahf
fstp
pop
push
mov
mov
xor
cmp
pop
outsl
cmp
pushl
insb
jns
push
stos
lea
sahf
in
adc
dec
pop
inc
fs
divl
movsl
and
push
sbb
pop
xchg
scas
sbb
push
push
aam
xorl
cwtl
popf
repnz
iret
stc
mov
fistl
or
mov
adc
push
or
dec
and
mov
push
arpl
or
iret
lods
sbb
insb
out
cmp
rcrl
in
mov
sub
jns
jle
mov
cli
push
add
or
jecxz
pushf
outsl
aad
jge
cmp
sub
clc
jae
cmp
idivb
add
lea
fwait
out
divl
sub
or
inc
dec
push
jmp
xor
jmp
loopne
in
adc
repz
and
out
sti
sub
sbbl
xor
push
in
ljmp
jmp
aaa
je
out
pop
adc
loop
imul
add
xchg
or
test
sbb
dec
xchg
bound
sbb
xchg
loop
cmp
addr16
mov
inc
gs
mov
jle
rorb
int3
and
inc
jbe
mov
stos
lock
mov
popa
rorl
insb
pop
repnz
out
xlat
adc
pop
and
hlt
mov
mov
je
gs
cmp
call
ret
pop
sub
push
jns
stc
xchg
mov
push
outsb
out
sub
outsb
or
xor
adc
and
and
mov
lret
add
popa
ret
pushf
scas
std
mov
mov
cmp
xor
dec
lret
out
pop
inc
or
push
aas
sub
push
push
or
cmp
add
jae
cmpsl
dec
out
mov
mov
push
stos
sahf
rcrl
jl
mov
push
lahf
push
push
arpl
pop
mov
mov
mov
mov
lods
mov
add
lods
fstpl
and
push
outsl
call
loop
dec
jnp
cmovno
push
or
cmpsl
mov
cwtl
dec
nop
xlat
cs
adc
dec
pop
mov
shr
pop
push
xchg
jge
jns
mov
mov
iret
inc
in
out
inc
add
sti
xor
stc
or
inc
fsts
test
scas
cmp
cwtl
jbe
testb
imul
je
arpl
dec
xchg
mov
mov
sti
ffree
mov
orb
lea
lea
mov
jl
in
clc
ret
aaa
nop
pop
cmp
rorl
es
std
push
xchg
jmp
fistpl
cmp
xchg
pop
sub
xchg
mov
jns
cmp
mov
dec
cmp
test
lret
ja
push
inc
inc
lahf
div
fdivl
dec
mov
mov
hlt
adc
push
lret
das
cld
jbe
mov
push
cmc
cmp
mov
ficompl
xor
fld
test
push
jl
inc
jb
xchg
xor
dec
cmc
cmpl
jmp
sub
inc
xor
testb
enter
inc
xor
imul
push
out
push
leave
sti
aad
outsb
inc
das
dec
mov
insb
int3
shr
jb
test
mov
push
pop
cmp
pop
les
adc
cmp
in
lret
addb
test
xor
dec
test
movq
pushf
je
xchg
daa
push
jno
lret
ret
add
mov
add
sbb
and
insl
in
adc
mov
andl
repnz
out
cli
pushf
test
xchg
outsb
add
test
push
sub
add
dec
push
in
test
xchg
ja
repz
sbb
sahf
push
shr
pushf
pop
insb
clc
mov
pop
not
jecxz
dec
shll
xchg
scas
repnz
xchg
ret
roll
movsb
pop
icebp
insb
mov
js
jne
or
mov
or
and
pop
xor
xlat
fs
add
leave
enter
movaps
jmp
pop
rolb
xchg
sub
dec
push
test
mov
or
add
xor
add
nop
andl
movsb
xor
cmp
inc
repnz
test
loopne
dec
ss
mov
lcall
inc
pop
or
jge
mov
into
push
rcrl
unpckhps
scas
mov
popa
xlat
hlt
mov
gs
push
push
sub
repz
jae
loopne
adc
and
jl
jne
popf
mov
mov
insl
mov
xchg
pushf
mov
cmp
pop
rcll
test
fidivl
loope
add
into
lods
add
xchg
push
je
xchg
add
sbb
mov
jl
and
adc
pop
push
cmp
fnstenv
lods
xchg
cltd
sbb
sub
fistpll
pop
int
cwtl
loop
mov
mov
or
xor
adc
leave
mov
movsl
lea
rcrb
xor
out
sbb
adc
mov
mov
inc
lea
testl
mov
jnp
imul
and
imul
jnp
dec
mov
cmp
mov
fstps
pop
jns
xor
out
ja
jg
inc
pop
imul
xchg
callw
into
ds
jle
or
lods
mov
out
pop
lret
dec
aaa
jb
in
jp
sarl
shrb
xchg
push
mov
cltd
loope
shrb
loopne
inc
arpl
adc
data16
lret
sbb
int
scas
fisubrl
hlt
data16
mov
mov
pop
fidivl
rcl
out
dec
test
fsts
add
mov
mov
andl
incl
cltd
sub
cmp
sbb
sahf
clc
inc
pop
pop
jne
jmp
push
and
jecxz
jmp
les
adc
lods
xchg
repnz
int3
loopne
jecxz
leave
sub
sub
lahf
push
jno
and
mov
lea
jb
bound
outsl
sbb
stos
out
leave
sub
imul
rol
adc
jmp
mov
sbb
push
xor
mov
movsl
imul
push
or
mov
mov
aas
xchg
out
in
call
mov
push
and
ljmp
aam
add
ss
lcall
jl
cltd
xor
outsb
or
xchg
push
mov
ror
mov
and
insb
ret
mov
cmp
andb
xchg
out
mov
jb
sub
add
add
xchg
mov
inc
and
add
jo
lea
jl
xor
cld
inc
cmp
cmp
rclb
in
test
lret
cld
pop
add
nop
and
mov
or
stos
dec
lea
jne
sub
ret
dec
movsl
add
rcrb
les
mov
and
inc
int3
fists
dec
out
cmp
imul
sbb
inc
jmp
fisubrs
sub
or
xchg
mov
cmp
stos
mov
fcoml
mov
enter
dec
lods
mov
xor
icebp
jbe
ljmp
mov
xor
push
fs
inc
or
jg
fsubs
dec
call
cmp
push
fmull
cs
pop
cmpsl
inc
and
push
lea
movsl
mov
fcmovbe
nop
imul
cmp
fs
cmp
add
les
and
movsb
xor
repz
stos
fwait
xor
iret
mov
inc
mov
ss
mov
mov
cs
sub
jle
pop
lods
sbb
xor
lods
cwtl
popa
mov
push
call
sbb
mov
mov
xchg
call
push
lcall
adc
leave
lods
mov
imul
inc
xlat
ja
fdivrs
xchg
jno
mov
repnz
inc
and
jecxz
testb
bswap
aas
add
cmp
jge
adc
mov
cs
mov
mov
xchg
gs
xchg
mov
xchg
nop
cmp
fimuls
jmp
xor
mov
xor
push
je
mov
sar
lea
popf
scas
inc
popa
loopne
and
sub
mov
cltd
mov
and
in
test
repnz
jae
movsb
leave
je
les
push
mov
fnstcw
or
mov
cltd
mov
mov
stos
inc
out
add
pop
cmp
mov
stos
outsb
aas
xchg
mov
repz
lods
mov
divl
mov
in
test
cmpsb
testb
enter
popa
push
cmpsl
sub
cmp
outsb
add
insb
out
adc
pusha
cmpsl
je
xchg
movsb
stos
adc
mov
es
mov
push
adc
andl
jbe
flds
imul
js
mov
fnstsw
sbb
popf
pusha
testl
jae
xchg
bound
mov
push
xchg
stos
inc
add
sbb
insl
in
imul
cmpsl
rcrl
push
popf
stos
imul
ss
stc
repz
out
test
aam
stc
enter
sbb
loope
sub
xchg
dec
jecxz
sub
xchg
in
sbb
sub
dec
test
pushf
sbb
push
call
mov
fadds
xchg
clc
inc
leave
addr16
jno
inc
fiaddl
lret
in
fidivl
sti
add
loop
mov
inc
mov
mov
push
call
enter
push
ljmp
and
jp
pop
and
jne
xchg
int3
fsubp
hlt
mov
jl
test
and
cld
cli
xchg
hlt
movb
push
push
and
sbb
adc
negl
adc
xchg
pop
inc
dec
or
sub
or
loopne
sbb
pop
and
dec
ret
add
cmpsb
cmp
clc
pop
dec
iret
popf
inc
push
dec
dec
aam
aam
xor
mulb
mov
inc
cmc
mov
add
xchg
out
in
adc
xorb
pop
inc
leave
shlb
inc
cwtl
sub
sti
cli
loopne
inc
push
es
mov
pop
stos
lods
sub
cmpsl
lret
cmp
pop
mov
cli
daa
daa
out
std
add
clc
adc
pop
and
insl
pop
mov
pop
rcl
cmp
adc
jae
loop
das
cmp
jl
sub
xor
icebp
add
inc
pop
or
insb
testl
sub
or
xor
push
fwait
out
lret
lods
bound
sbb
pop
stc
dec
test
jae
lea
in
ljmp
adc
sbb
sbb
pop
xchg
or
jno
outsl
sbb
adc
mov
add
inc
dec
xorb
lock
sub
sbb
int
mov
call
and
imul
adc
sbb
xchg
adc
sbb
dec
push
mov
mov
xchg
add
or
push
mov
fucomip
and
fwait
sub
push
cwtl
cmp
cmc
gs
jne
pop
pop
call
arpl
pop
sub
pop
xchg
bnd
shlb
xor
jo
cwtl
mov
adc
mov
jno
jmp
mov
pop
inc
in
aad
adc
mov
mov
es
rorb
fsubl
cld
loope
and
addr16
mov
rcll
mov
jnp
jecxz
pop
fmul
mov
scas
mov
iret
fisttpl
lods
lea
and
mov
or
mov
inc
push
mov
push
mov
nop
xchg
xor
xlat
lret
filds
mov
cmpsl
cmp
and
int3
mov
rcl
push
sbb
inc
dec
mov
jnp
mov
out
dec
cmp
push
sbb
fmuls
add
stc
or
test
sti
push
mov
inc
xchg
rol
cs
pop
fidivs
xchg
loop
loop
inc
scas
cli
lds
js
fcomps
adc
enter
jae
dec
fwait
dec
xchg
shl
test
xchg
mov
mov
andl
mov
cltd
lock
pushf
ss
push
sbb
xchg
mov
cmp
inc
stos
jmp
movsb
fstpt
divl
outsb
mov
inc
push
outsb
aad
stos
shll
and
jmp
mov
addb
mov
pusha
mov
aas
or
hlt
ds
push
mov
jne
mov
xor
cmp
icebp
leave
mov
aaa
outsb
sarl
jnp
dec
pop
sub
and
cmp
jbe
mov
stos
push
repnz
mov
and
mov
jecxz
fisttpll
and
sub
int3
lret
mov
mov
and
shrl
cmp
mov
mov
fldl
es
dec
mov
mov
fcmove
mov
into
out
shrb
xchg
into
adc
cmpsl
lock
icebp
fs
es
into
pop
int3
cmp
jbe
xor
xchg
clc
and
pop
push
sbb
xchg
and
fstps
imul
mov
mov
pop
inc
out
ja
cmp
movsb
lcall
jae
out
xor
je
sub
pop
mov
jge
jle
sbb
adc
adc
enter
aam
dec
inc
rcll
rcrl
xorl
fimuls
lret
add
mov
jmp
std
adc
mov
push
les
jg
dec
fmull
mov
data16
mov
mov
push
ss
push
jne
popf
stos
add
mov
xchg
xor
push
enter
mov
lods
cmp
movsl
or
shrl
sbb
mov
lea
pop
stos
mov
in
push
in
dec
adc
clc
in
ljmp
sub
in
lods
xchg
sub
mov
cli
jg
inc
cmp
imul
xor
js
sbb
in
movsl
lds
or
xor
into
popa
jg
cld
xor
cmpsl
ret
aas
jne
wrmsr
cltd
adc
sub
pop
insl
adc
or
and
es
cli
bnd
pop
mov
ftst
pushl
cmpsb
sbb
mov
and
cmp
cld
push
repnz
hlt
int3
xchg
out
enter
inc
ret
test
lock
mov
xchg
test
lret
scas
cs
cltd
mov
and
das
mov
sub
sub
test
dec
bound
push
adc
xchg
leave
scas
add
addr16
mov
mov
fstps
lcall
fnstenv
in
test
push
jp
je
mov
jmp
test
inc
in
sbb
test
fimull
sub
mov
inc
push
xor
pop
mov
fstps
subl
rcr
outsb
push
jecxz
sub
cmpsb
mov
scas
or
cmp
stc
std
aad
cmp
sbb
repz
ljmp
sub
sub
aas
ret
hlt
leave
xchg
add
mov
div
adc
repz
dec
data16
lret
shll
imul
aas
test
and
fwait
aaa
int3
xchg
orb
sub
push
shrb
lods
test
das
sub
sub
insl
in
in
mov
loop
adc
in
adc
int
xor
rol
shll
mov
sbb
or
outsb
lods
mov
pop
lret
cld
jl
data16
sbb
and
dec
and
test
add
xchg
in
ds
je
mov
push
mov
cld
lret
std
mov
xchg
arpl
movsl
je
call
pop
push
cltd
aaa
movb
dec
idiv
adc
push
cli
pop
mov
mov
or
clc
mov
mov
hlt
mov
push
push
decb
int3
jle
dec
mov
fimull
and
aam
or
jle
jecxz
test
inc
xchg
lds
insb
adc
ficoml
test
insb
inc
fadds
adc
push
xor
or
adc
mov
cmpsl
out
dec
adc
andb
loopne
bound
rolb
nop
jnp
jl
ljmp
incb
mov
lcall
out
pop
inc
test
aas
dec
mov
xor
sbbl
ljmp
clc
in
or
and
push
sbb
inc
js
pop
test
dec
mov
ret
out
mov
leave
iret
xor
sub
notl
call
fs
push
shrl
mov
ljmp
dec
fisubl
or
std
and
pop
jle
inc
fidivs
mov
cmpsl
xor
sub
testb
repz
cs
nop
mov
push
mov
mov
inc
lods
subb
outsl
mov
add
and
pusha
dec
push
jb
xchg
out
sahf
sub
stos
and
jmp
push
pop
push
or
ret
inc
jne
repz
sub
cs
pusha
aaa
pop
jbe
daa
pop
test
mov
push
jecxz
mov
rcl
cmp
in
imul
movsl
je
xchg
push
outsb
push
pop
xor
in
cld
pop
fdivl
loop
inc
sbb
repz
sbb
push
pop
or
out
jne
test
ficoml
lock
push
xchg
push
inc
mov
sar
or
pushf
decb
repz
jle
scas
outsl
lahf
bound
mov
add
push
iret
inc
jb
out
sub
jns
fwait
stos
jne
sbb
or
shll
or
out
test
loopne
loope
mov
xor
jmp
loop
fxch
mov
movsl
jl
push
mov
std
addr16
jb
sub
andb
mov
pop
shlb
push
lods
push
xchg
dec
and
xor
adc
ss
inc
jbe
cli
std
nop
daa
das
nop
xchg
push
je
scas
movsl
in
rcrb
enter
cld
mov
arpl
and
cmpsb
push
sti
nop
xlat
ret
jnp
sub
xchg
pop
shlb
dec
ja
cmp
out
rorl
pop
movswl
jecxz
dec
adc
or
imul
push
das
cmp
popa
cli
out
jnp
out
adc
ss
cwtl
test
pop
fidivs
mov
cld
jb
push
inc
inc
mov
je
lret
xor
sbb
loop
out
dec
mov
fs
and
dec
dec
push
push
out
fnstcw
or
loop
gs
outsl
lahf
test
jno
outsl
adc
orl
lret
jecxz
outsb
add
into
loope
incb
adc
push
inc
pop
cmc
dec
sub
lods
jecxz
dec
xchg
mov
adcl
or
xchg
jo
std
negl
int3
out
add
dec
push
mov
lods
js
mov
adc
and
dec
cwtl
repnz
fstpl
mov
icebp
sub
pop
aam
scas
aas
or
xor
dec
roll
or
sbb
cli
testl
add
je
and
mov
xor
ficompl
sbb
imul
movsb
add
push
mov
push
fnsave
test
or
cmp
fcoml
dec
popa
pop
repnz
cmp
pop
lods
aas
lock
push
jb
add
add
xlat
sub
cmc
mov
aam
push
mov
pop
sub
or
leave
fldenv
pop
or
push
adc
xchg
je
dec
rclb
data16
xchg
pop
mov
xchg
sub
sbb
mov
scas
les
cmp
les
ret
jg
mov
ret
mov
dec
xchg
dec
into
dec
imul
pop
out
rcll
leave
pop
cmc
stc
pushf
ficoml
loop
adc
lods
in
cld
fstps
xor
subl
out
or
insb
add
and
out
mov
js
or
xor
cli
lea
push
test
cmp
add
xchg
xor
mov
mov
lret
push
inc
iret
insl
mov
stos
mov
mov
xchg
lods
inc
outsl
push
add
and
orl
fcmovbe
lahf
lds
pop
jg
jmp
xor
mov
xor
repnz
aaa
push
fwait
add
sbb
push
sbb
inc
push
je
imul
stos
xchg
xor
scas
jns
cmpsb
insl
add
jecxz
test
or
mov
icebp
call
jmp
icebp
mov
pop
cmp
pop
stc
inc
jge
mov
bound
xchg
mov
adc
popf
into
push
mov
fildl
xchg
sub
stos
add
sub
rcrb
es
jp
fisubrs
test
lret
pop
pop
stos
add
pop
dec
dec
sub
pop
adc
mov
sbb
jmp
xchg
aas
dec
mov
add
loopne
mov
or
movsl
push
call
xchg
fnstcw
xchg
mov
cmp
fst
mov
push
mov
xchg
scas
test
call
sbb
dec
test
in
andl
xchg
sub
sub
mov
pop
add
sahf
sub
inc
fisubl
fcomps
clc
insl
push
inc
pop
push
cmp
out
xor
in
cld
pmullw
add
jbe
int
sub
adc
lods
mov
iret
and
xchg
and
imul
xor
clc
ret
inc
std
mov
xchg
pop
jne
cwtl
xor
in
cmc
xor
sub
mov
sbb
stc
xchg
add
ret
mov
push
loop
jbe
jl
pop
clc
leave
jo
mov
push
stc
nop
xor
cmpsl
xchg
ficoml
ss
inc
jo
ds
aad
call
pop
insl
icebp
rcll
inc
test
pop
and
push
inc
lcall
pusha
cmp
xchg
test
adc
es
cmc
jmp
daa
ss
std
ss
fisubl
mov
xor
or
fistpll
jns
fstps
call
mov
gs
cmp
push
cltd
push
ja
test
sbb
daa
mov
pop
pop
xchg
pop
into
sbb
subb
sub
pop
repz
cmc
cmp
out
sub
movsl
inc
mov
stos
dec
lods
cmp
xor
lea
mov
mov
mov
rorl
stc
cmp
insb
jg
rolb
sahf
jmp
mov
push
xchg
sub
stos
mov
fdivl
pop
xor
pop
jg
scas
movsl
sub
push
pop
repz
hlt
sbb
dec
jns
bound
mov
adc
in
add
int
test
loopne
push
lcall
push
jbe
ret
stos
mov
xor
inc
pusha
mov
popa
test
outsl
pop
ljmp
das
es
push
test
shrl
mov
jns
insl
add
cltd
push
repz
jle
jmp
les
loop,pn
clc
rcll
ficoml
jmp
jb
push
xor
cmp
daa
push
in
ret
in
fisubl
and
aas
int3
add
decb
jae
push
or
cld
or
pop
sahf
adc
mov
pop
push
sub
pop
je
mov
enter
add
or
fisubrs
adc
imul
xchg
lea
dec
adc
rolb
faddl
shlb
cwtl
lds
or
push
cld
into
jmp
test
testb
sub
mov
insb
mov
insl
les
inc
testb
lret
arpl
or
xor
daa
dec
es
pop
ss
xchg
lods
inc
adc
add
mov
outsl
out
push
clc
mov
andb
or
pop
fnstcw
iret
add
push
sbb
fisubs
clc
daa
in
andl
sub
or
dec
ja
dec
adc
ss
pushw
ja
int
pop
lahf
mov
loopne
sarb
mov
insl
stos
cld
push
xchg
sbb
lret
cmpsl
ret
cmp
nop
daa
in
jno
jecxz
pop
xchg
vmovupd
loope
cmp
mov
ljmp
lahf
dec
push
addps
add
ss
sahf
mov
adc
add
cmp
jge
fistpll
rolb
out
loopne
sbb
lds
test
idivl
push
ficoml
mov
in
add
lret
dec
faddl
sti
stc
inc
aaa
or
xchg
movsl
cld
ret
std
cmp
mov
jae
mov
mov
out
dec
lret
cli
cwtl
das
xchg
sbb
aas
cmpsl
lods
xchg
pop
scas
lods
ss
xchg
mov
cwtl
cmc
bound
jp
mov
push
outsl
cmp
es
and
push
nop
pusha
aam
out
cltd
in
push
push
sahf
jmp
pop
inc
fiaddl
mov
jae
pusha
mov
imul
push
cmp
test
add
inc
sbb
repz
stos
aaa
cmpl
and
ljmp
sub
call
lods
inc
daa
mov
pop
lret
fidivrs
out
sbb
mov
cmpsb
test
inc
inc
fwait
cmpsl
je
in
test
dec
or
jno
mov
inc
xchg
xchg
and
sahf
mov
mov
adc
pop
xlat
xchg
aaa
adc
in
mov
je
xchg
in
into
aaa
outsl
pop
clc
inc
in
ret
add
in
test
cmp
in
sub
das
inc
mov
adc
repz
faddl
sbb
xchg
out
push
leave
jnp
jge
mov
mov
sbb
xor
movsb
ret
in
aad
mov
pop
loopne
push
push
push
inc
add
movsl
das
shlb
inc
mov
test
mov
sahf
add
jne
jb
sbb
ret
xchg
dec
in
test
fs
shll
mov
add
je
push
dec
std
or
push
cmpsl
out
dec
rcl
sub
out
push
out
xor
jle
xor
push
daa
jnp
popa
inc
lods
mov
in
lods
fcmovb
sbb
cmp
jae
cmp
subl
cmp
jp
popa
pop
repnz
fwait
repz
xchg
pop
add
mov
and
and
mov
fidivl
dec
xchg
loop
lcall
fld
arpl
pusha
pop
repz
and
xchg
xor
arpl
ficomps
cwtl
mov
jge
inc
scas
vphaddubw
dec
mov
cli
cmp
aaa
clc
xor
or
mov
pop
ja
ret
cwtl
in
enter
adc
loopne
push
xor
stos
xchg
dec
xchg
call
or
mov
mov
push
fucom
imul
dec
pop
fisubs
mov
add
lds
ljmpw
scas
adc
ljmp
push
push
jae
out
repz
xchg
cmp
popa
mov
mov
or
jns
mov
adc
lods
inc
sub
adc
jno
or
mov
mov
and
dec
fistpll
xchg
xchg
daa
fs
mov
lea
pop
aaa
or
pop
movsb
sahf
lds
movsb
cmp
mov
xor
cmp
aam
add
and
mov
sub
cltd
pop
lret
push
cmp
dec
cli
fistpl
xchg
mov
sarb
cmp
incl
into
mov
cwtl
fcom
enter
cmp
sbb
push
xlat
inc
cmp
mov
cmp
jo
cmp
dec
push
mov
ljmp
jle
stc
dec
dec
popf
pop
mov
push
clc
sub
and
outsl
enter
inc
aaa
sbb
stc
xchg
stc
mov
mov
in
jg
cld
dec
push
mov
pop
lret
fisubl
mov
jbe
mov
xchg
sub
mov
dec
jno
and
lahf
xchg
shrb
cmp
pushf
das
xor
lret
mov
push
cmpsb
and
sub
fucomip
pop
mov
sbb
imul
loopne
sub
inc
push
cli
andl
or
mov
lods
cmp
pop
jnp
jge
cmp
clc
xchg
mov
aad
jmp
ss
setp
or
test
jge
ror
stos
xchg
repz
idivb
jno
add
jecxz
iret
push
mov
stos
and
pop
inc
xor
jbe
outsl
cmpl
ret
icebp
mov
stos
pop
sahf
cs
and
ljmp
adc
push
xchg
mov
ret
arpl
xchg
cltd
jb
push
jge
test
testl
cli
cmp
dec
jp
mov
lret
js
out
adcl
addl
push
xchg
pop
imul
repnz
cmpsb
shlb
les
fistps
mov
and
fiadds
xchg
sub
push
fistpll
push
mov
outsl
ljmp
imul
test
and
mov
xor
inc
stc
aaa
lcall
jae
or
arpl
xchg
popf
ret
or
mov
push
daa
inc
inc
xor
loope
xchg
mov
iret
stos
data16
aam
ljmp
cli
cmp
subl
push
sarb
sub
shll
xor
fstpl
sub
rorl
or
lret
mov
mov
jge
dec
dec
test
popf
add
daa
and
mov
add
xchg
cmp
movsb
cmp
ret
ret
jp
je
push
pop
sbb
xchg
xor
fldenv
int
adc
lret
int
add
adc
jb
lahf
sbbb
and
push
popf
or
das
sub
mov
cmpsb
and
fwait
loop
pop
jecxz
xchg
popa
fadds
fiaddl
and
cmpsb
jg
push
add
adc
pop
cmp
push
out
rolb
sbbb
fdivs
popa
cmp
and
sbb
clc
xchg
pop
movsl
dec
mov
mov
cmp
and
aam
dec
loopne
mov
jecxz
outsb
addr16
sbb
loop,pt
out
jns
cmpsl
adc
rorb
mov
fiadds
dec
sti
xchg
ja
xchg
pop
stos
sbb
sarl
or
sbb
cs
add
lahf
out
cmp
push
pop
fisttpl
std
or
imul
sub
pop
sarl
push
stc
jp
mov
scas
adc
push
popf
add
stos
aas
xchg
mov
pushl
mov
popa
jle
sbb
push
cwtl
or
mov
jnp
lods
subl
adc
lods
or
shlb
mov
dec
les
int
or
outsl
loopne
adc
add
add
gs
std
xor
incb
test
adc
sbb
cmp
decb
jmp
sub
cmpsb
push
dec
and
jno
repz
lahf
gs
and
jl
fcmovne
lds
push
inc
or
mov
nop
repnz
cmp
nop
adc
add
add
cmp
clc
cmpsb
jp
sub
ljmp
cltd
xor
jb
mov
fcoml
push
sub
inc
dec
test
in
shrb
adc
add
mov
shrl
jecxz
adc
fs
add
loop
bound
lret
jmp
out
inc
rep
pop
mov
jb
das
hlt
pop
in
insl
and
dec
aad
mov
pop
sti
inc
dec
aam
daa
clc
mov
adc
inc
push
xchg
lahf
sub
data16
dec
and
jnp
or
into
adc
inc
out
mov
ficomps
in
mov
push
dec
inc
fildll
ret
ja
push
in
mov
pop
adc
flds
fsubrp
gs
pop
adc
jo
jbe
mov
mov
xor
push
sbb
sub
pop
pop
sub
rcrl
and
mov
aad
call
pop
jbe
aaa
cmpsl
ret
push
test
mov
lcall
inc
or
dec
mov
mov
mov
mov
daa
or
pushf
or
imul
outsl
popf
pop
cwtl
das
orl
dec
xchg
outsl
inc
inc
stos
mov
addr16
adc
aas
push
enter
dec
test
push
divb
pop
jle
aam
adc
mov
pop
pop
repz
mov
cmp
pop
jp
mov
xchg
dec
out
loope
loop
mov
xchg
sub
mov
mov
add
ret
mov
stos
pusha
xchg
insb
sbb
mov
into
seto
push
lods
int
fildll
addr16
aad
int3
insl
jb
aad
jmp
out
cmp
and
cmp
xor
sbb
pop
sti
mov
xchg
sub
je
lods
sbb
push
ret
xchg
mov
into
cmpsb
cmpsl
repnz
js
mov
mov
and
add
or
cmpsl
dec
in
test
or
or
lods
mov
test
push
inc
mov
fsubs
pushf
mov
mov
enter
push
lods
lret
leave
imul
adc
or
and
int
fbld
xchg
popa
adc
cld
pusha
sbb
adc
pop
cmp
ret
outsb
pop
dec
pop
xor
data16
cmp
mov
ret
xchg
jecxz
mov
jb
inc
pop
sbbl
or
xor
pop
shrl
xor
fwait
test
cwtl
push
add
xor
in
pop
out
rcr
cwtl
cwtl
das
add
mov
dec
frstor
test
and
shll
push
ljmp
popf
and
mov
loop
pop
xor
dec
sub
inc
out
mov
jo
xor
out
sbb
xchg
sbb
and
test
lret
imull
mov
negl
fsub
mov
cmp
outsb
push
inc
xor
adc
cmp
lret
pop
inc
sub
mov
add
xor
imul
outsb
adc
or
shl
add
es
inc
pop
adcb
add
sub
adc
and
mov
add
clc
or
mov
dec
mov
cmc
mov
popa
and
in
push
pushf
and
push
add
mov
pop
insl
sahf
test
sbb
mov
es
loope
mov
rcr
repz
push
inc
fnsave
pop
pop
jecxz
cld
push
dec
add
lock
cmp
cmpsb
mov
dec
pop
add
pushf
fsubrl
mov
lret
movsb
lcall
je
xor
negb
jl
clc
cmp
outsb
fstl
int3
or
cmc
or
fistps
mov
inc
out
paddw
setle
popl
jle
cmp
cmp
jg
sti
xchg
lahf
push
lahf
outsl
repz
pushl
jo
aad
and
lds
stos
in
jns
mov
add
or
icebp
mov
adc
lret
aaa
mov
fs
push
clc
mov
test
and
cmp
xor
mov
lret
cmp
mov
icebp
data16
test
inc
test
lea
sbb
inc
push
push
mov
sub
movsb
test
cmp
leave
stos
jp
clc
mov
sbb
inc
push
test
mov
sbb
inc
fmuls
and
cmc
or
scas
mov
dec
mov
sahf
rol
xchg
add
xchg
cmc
lock
ret
iret
mov
sahf
cs
add
call
rclb
push
shlb
inc
lret
imul
pop
fsubr
pop
sti
fwait
sti
scas
push
push
sub
cmp
jae
jns
pop
fnstcw
cwtl
mov
mov
shr
scas
xor
ds
push
iret
adc
ret
sbb
rorb
add
mov
mov
jg
pop
xor
xchg
ret
xor
iret
lahf
outsb
jnp
into
enter
pop
sub
dec
dec
in
push
dec
fadd
rcrl
movsb
mov
jns
push
int3
mov
jp
lahf
ss
sbb
inc
shrb
pop
scas
lret
idiv
das
or
xchg
dec
rolb
shlb
adc
pop
add
mov
pop
scas
mov
add
or
jg
fldenv
mov
push
mov
inc
js
lret
dec
push
lcall
lcall
or
push
mov
push
inc
fdivrl
push
movsb
cmp
fs
pop
mov
popf
pop
jnp
cmp
xor
or
cmp
ss
lcall
das
mov
jno
mov
xchg
mov
and
mov
dec
dec
loopne
xlat
in
popa
inc
ds
or
ret
cltd
daa
inc
adc
jbe
cmp
stos
pavgb
add
repnz
icebp
jnp
nop
gs
pushf
js
repz
xor
js
imul
mov
xchg
pop
and
test
dec
into
insb
mov
in
add
pop
inc
or
je
xchg
fadd
clc
cld
inc
fisubrl
fdivs
mov
fcmovu
sbb
adc
lret
sbb
sub
repnz
lods
xchg
jne
test
lret
gs
xor
xchg
cmp
ret
and
dec
xor
jbe
xchg
pop
jno
inc
sbb
mov
xor
add
xchg
mov
add
pop
hlt
dec
data16
xor
test
dec
pushf
outsb
inc
int
pop
nop
push
mov
mov
cs
sbb
mov
and
push
mov
mov
cwtl
das
push
sbb
stos
cmp
inc
add
pusha
ljmp
dec
or
cmp
and
mov
pushf
lahf
ss
pop
rclb
fwait
and
int3
dec
popa
xor
inc
jno
inc
mov
cli
or
sbb
pop
adc
out
xchg
or
mov
sbb
dec
dec
test
shlb
cmpsl
mov
fsub
adc
icebp
sbb
jmp
inc
fmul
js
loopne
push
mov
ljmp
rorb
aam
shll
lds
jb
out
jg
imul
hlt
les
orl
sbbl
cli
cltd
hlt
mov
imul
pop
jbe,pn
aam
push
and
iret
test
mov
jnp
outsl
repz
mov
ds
inc
fstp
push
xor
out
rcll
mov
cld
push
cli
mov
mov
es
mov
pusha
pop
dec
mov
scas
roll
cmp
mov
push
imul
push
adc
inc
mov
aad
outsl
icebp
andb
dec
mov
insb
sub
fsubr
jp
or
and
cmpsb
adc
imul
int3
and
fidivrs
fdivrl
or
mov
pop
jg
out
lds
cmp
push
arpl
gs
mov
adc
fmul
lcall
cwtl
das
adc
sub
mov
ret
inc
jmp
mov
in
sbb
sbb
in
dec
test
cmp
cmp
out
test
jb
cmp
aad
or
test
jg
lock
std
mov
pop
xchg
jmp
add
outsb
lock
or
stc
ds
or
js
sbb
xchg
pusha
dec
and
mov
push
sbb
push
jae
mov
ret
pop
mov
push
ja
stos
jne
stc
sbb
orb
hlt
das
push
mov
ret
lea
mov
xor
pop
or
sahf
xor
outsl
test
inc
test
je
mov
and
call
dec
stos
add
jo
mov
insb
sarb
dec
cmp
ds
in
movsb
dec
mov
scas
mov
dec
fists
les
into
jecxz
in
repz
lea
enter
mov
pusha
add
mov
enter
sub
pop
and
jge
sub
mov
popa
sub
iret
push
mov
lock
aam
cld
xchg
cli
xchg
mov
rcrl
into
cld
mov
inc
rcl
inc
int3
add
push
aas
in
lahf
insb
in
test
sub
cli
or
adc
fwait
xor
lret
movsl
mov
popf
xchg
xlat
stos
mov
cmp
dec
loopne
mov
jmp
pop
aam
test
pop
xchg
arpl
xorps
ljmp
cmp
or
add
adc
push
and
jecxz
ret
testb
mov
in
inc
xor
add
adc
enter
mov
leave
pusha
and
mov
mov
xor
outsl
fs
js
js
testb
adc
stos
pop
sbb
or
jmp
test
or
mov
dec
subl
dec
mov
rcrb
mov
push
testl
repz
sbb
add
cmpsb
or
sbb
inc
and
rcrb
xor
shrb
sbb
jb
dec
pop
aas
ja
js
xchg
mov
jl
mov
jle
dec
cmpsl
jbe
sub
out
mov
dec
jne
test
push
adc
mov
pop
inc
stos
or
pop
cmpsl
sub
ret
enter
dec
loopne
and
jle
or
xchg
mov
sub
push
sbb
add
hlt
pop
xor
ljmp
insb
das
inc
lods
adc
mov
jnp
loop
pop
jle
mov
test
out
dec
pop
pop
shrl
jecxz
repz
mov
adc
nop
loope
cltd
pushf
es
or
imul
test
cmpsb
es
mov
or
jo
jp
imulb
je
jne
inc
mov
in
inc
jecxz
imul
ret
shll
add
push
push
test
addl
jae
and
cmp
fimull
mov
or
data16
adc
add
mov
sbb
cmp
fisttpl
mov
aas
xchg
cmp
xchg
movsb
iret
pop
test
sbb
cmc
pop
out
cltd
sub
insl
push
shll
push
push
pushf
inc
pushf
pushl
xchg
dec
repnz
and
xchg
push
es
fisubs
daa
imul
sbb
inc
cli
fidivs
movsl
fdivr
movsl
lret
inc
in
adc
add
adc
mov
ss
add
out
xchg
adc
cmp
das
sbb
out
jg
arpl
push
in
adc
out
adc
pushf
xor
mov
fdivl
xchg
or
pop
add
movl
stos
or
movsl
hlt
cmpsb
popl
ds
aas
gs
jmp
dec
faddl
pop
push
adc
or
inc
cli
mov
data16
adc
inc
inc
in
xchg
push
int
jns
push
fcmovu
lcall
xchg
push
lods
inc
testb
mov
sbb
loope
push
data16
scas
movsb
cmp
mov
mov
cmp
out
lretw
test
clc
mov
cld
adc
test
cwtl
mov
pop
scas
jne
aam
stos
mov
out
psubusw
dec
adc
mov
cmp
mov
pop
xor
sahf
xchg
or
icebp
push
sub
mov
mov
clc
cmp
stos
add
fmull
sarl
fstp
mov
fnstsw
movq
leave
xor
push
addr16
jnp
out
scas
movsb
mov
lea
mov
stos
xchg
arpl
mov
pop
xchg
test
push
xor
lret
ljmp
push
std
call
adc
fdiv
fmuls
push
lcall
arpl
mov
lahf
loop
cltd
mov
daa
and
fldt
pop
in
mov
xchg
jns
xor
add
and
mov
lret
xor
cmp
fidivrs
xlat
cmc
into
je
xor
nop
loopne
aam
imulb
lcall
stos
ja
fnstsw
addr16
jg
sub
xor
mov
dec
mov
xchg
sti
shll
xchg
sub
dec
pop
lock
mov
xor
xchg
xchg
pop
into
or
or
inc
dec
out
imul
insb
cmp
sti
add
mov
adc
fs
pop
push
pop
jno
cmp
push
insb
imul
jp
mov
sbb
outsl
adc
mov
wbinvd
jbe
fdivl
inc
xchg
mov
enter
fsubr
mov
ss
repz
xchg
test
mov
xor
cltd
gs
mov
repz
stos
push
pusha
les
lea
dec
or
rorb
fstpl
mov
stos
call
fisubs
adc
cltd
clc
sbb
pop
mov
or
inc
mov
xorb
lret
jecxz
lds
ret
aad
clc
pop
dec
popa
add
jle
and
or
in
pop
mov
popf
movsl
pusha
cli
aaa
adc
mov
jecxz
jo
add
xchg
fnstenv
arpl
sub
rol
scas
push
sbb
out
pop
repnz
pop
fucomi
test
les
jbe
or
sub
push
aam
movsb
push
bnd
arpl
in
andl
pusha
aad
inc
popa
data16
aas
ljmp
mov
scas
lods
ljmp
or
dec
ret
lret
cld
in
push
dec
pop
or
add
imul
xor
push
and
mov
xchg
jmp
ljmp
push
test
cwtl
sti
in
jbe
mov
out
pushf
dec
jmp
inc
out
es
cs
loope
jge
das
jbe
push
xorl
cmp
add
push
add
xchg
cmpsb
add
cmp
ljmp
jb
push
test
mov
push
mov
cmp
dec
cli
mov
hlt
frstor
movhps
jl
sbb
outsl
jmp
xchg
jo
mov
mov
pop
cmp
imull
mov
in
in
mov
dec
lods
mov
mov
loop
sub
xor
sahf
cmp
pop
sti
mov
mov
sbb
jbe
xlat
inc
sub
dec
inc
fstpt
add
sub
xor
jmp
int3
push
cmp
popf
addr16
and
lahf
mov
sti
mov
xor
ja
iret
sbb
fstps
push
push
dec
je
sar
mov
mov
repnz
inc
roll
jbe
dec
sub
push
sahf
mov
outsb
jl
mov
inc
pop
sbb
inc
and
daa
jecxz
fnsave
sub
jecxz
push
loopne
rol
lret
mov
rorb
adc
incl
das
adc
sbbl
dec
dec
lret
orl
and
sti
repz
xorl
fmul
sub
push
or
iret
out
sbb
jb
sub
psubd
mov
cmp
dec
sub
test
xor
and
or
nop
add
ret
popl
inc
icebp
pmulhuw
adc
imul
xchg
fisubrs
inc
mov
jno
pushf
xchg
shrb
aaa
pop
add
sbb
arpl
ffreep
push
movsb
out
pop
push
jbe
cmpsl
aas
add
icebp
sub
push
or
cld
mov
push
rorb
sti
mov
xchg
add
push
popf
outsl
rcll
out
and
je
cmp
mov
pop
adc
ret
into
gs
xor
bound
mov
orl
xchg
daa
incb
nop
test
divl
loope
cmp
iret
fucomi
fidivrl
cld
inc
mov
loopne
dec
inc
inc
outsb
xchg
test
inc
int
bound
adc
fwait
in
int
daa
out
into
outsl
movsb
cmp
inc
mov
sub
sbb
test
inc
call
add
repnz
or
lds
nop
dec
in
aad
mov
fstl
daa
in
xor
fmull
jnp
inc
pop
lods
stc
push
jp
xchg
inc
fcoml
mov
leave
adc
push
sub
leave
pusha
scas
xorb
inc
xchg
ret
cmp
insl
cmpsl
mov
addb
iret
out
mov
loope
arpl
lret
jge
cmp
fs
xchg
or
sub
es
shrb
inc
pop
out
in
movsb
jno
push
mov
inc
ret
jp
xor
jno
hlt
dec
pop
pop
call
imul
adc
xor
xorb
arpl
loop
clc
inc
outsl
std
or
xorl
xchg
sub
xchg
xor
cmpsb
sub
xchg
decl
sub
and
inc
jmp
ljmp
lret
jne
push
out
or
lds
xor
jmp
jecxz
shr
push
icebp
fistpll
and
add
aaa
nop
popa
sub
roll
add
iret
cmp
aas
mov
inc
pop
insb
inc
aaa
icebp
mov
test
sbb
mov
and
xchg
or
cmp
or
and
xor
xor
fadd
push
mov
hlt
mov
add
stos
jnp
popa
xor
dec
arpl
or
stos
mov
pop
xor
ret
test
mov
enter
orl
push
sub
pop
cmp
xchg
fs
cmpsb
cwtl
push
rclb
and
and
ret
inc
fnsave
popa
sti
or
sub
jge
mov
ja
jecxz
jae
out
mov
add
xor
jg
in
xor
fcomps
mov
les
lock
mov
dec
into
fdivl
ret
sbb
outsl
and
adc
push
clc
dec
jns
xchg
and
cmp
lea
out
ret
out
push
jmp
push
jmp
in
in
pop
cltd
push
xchg
or
jno
cmpsb
or
sbb
call
adcl
push
sbb
or
push
cmp
stc
popf
jbe
mov
xchg
add
shrl
and
and
cs
jnp
dec
in
xorl
stc
nop
dec
jno
sub
pop
cli
jmp
clc
rolb
mov
push
inc
push
pop
out
lods
sbb
cmp
aaa
outsb
pop
int
leave
cmp
mov
das
add
pop
iret
mov
outsb
je
pop
cmpb
mov
lahf
ss
nop
insb
inc
fldt
nop
bound
idivl
dec
pop
insl
movb
hlt
adc
sub
sub
jg
mov
pop
mov
pushf
sarl
stc
int
dec
inc
mov
push
push
call
mov
fidivl
mov
gs
bound
jl
push
cld
scas
fisubl
dec
sbb
shlb
push
xchg
icebp
setle
and
shlb
cld
lret
mov
pop
push
call
out
jo
jle
lods
push
jg
ljmp
scas
sti
pop
cwtl
frstor
jmp
push
mov
cmp
pop
shrb
in
sbb
sub
dec
rcll
jmp
lds
cld
and
lret
or
jg
lret
mov
in
pusha
lahf
int
in
dec
inc
mov
std
rcll
dec
pop
leave
cmp
xor
imul
out
es
addr16
jae
xor
xchg
add
pop
xor
mov
push
icebp
jecxz
cs
push
sub
or
xchg
mov
xchg
lock
sbbb
ss
insl
cltd
mov
pusha
xorl
lds
das
pop
sbb
rcrb
cmp
fldl
xor
out
adc
enter
into
jmp
lret
push
sbb
ss
xchg
mov
imul
into
mov
cmp
insb
ret
mov
movsb
push
sarl
mov
adc
push
lret
xor
call
insl
jo
inc
sbb
pop
mov
test
in
jl
push
mov
xchg
pop
incl
and
pop
movsl
dec
fwait
pop
mov
ss
xchg
mov
stos
lock
in
cmp
pop
fidivs
sbb
pop
imul
test
xchg
imul
outsl
cmp
shrb
out
mov
push
mov
popf
or
leave
and
into
and
cmc
mov
leave
mov
adc
jp
push
and
inc
bound
push
push
andb
icebp
dec
mov
insl
test
js
mov
mov
xor
fwait
push
sub
inc
jb
xchg
sub
adc
clc
ret
pop
push
popf
xor
mov
loopne
lods
inc
xchg
adc
lahf
xor
inc
pop
jecxz
cltd
push
test
out
stc
inc
lods
into
cs
sbb
test
or
lahf
or
stos
cmp
in
scas
dec
sbb
sub
mov
push
mov
push
mov
pop
and
sbb
inc
pop
nop
pop
push
loop
jns
es
aaa
mov
add
push
and
in
cbtw
mov
inc
lahf
xor
fnstcw
inc
stc
iret
sbb
rorb
clc
shll
cmp
aam
sti
push
jge
enter
nop
cld
jnp
sbb
push
mov
or
rcl
sub
lret
out
jae
inc
mov
in
xor
xor
xchg
xor
mov
fisubrs
and
into
push
xchg
test
lods
and
aad
lret
divb
pop
es
shlb
cld
cltd
mov
loope
je
or
adc
mov
je
nop
mov
sbb
movsb
dec
ss
inc
test
dec
popa
xor
aas
push
pop
sti
enter
jbe
iret
mov
cs
and
fistps
repz
ja
out
sbb
les
lock
adc
xor
lock
push
repnz
pushf
inc
mov
xchg
xchg
orl
jae
test
jne
pop
andl
repnz
xor
xor
mov
fucomi
and
pop
mov
add
pop
ret
adc
xchg
sub
cmc
cmp
sbb
xor
imul
sub
and
mov
leave
clc
adc
and
mov
outsb
mov
jns
fcomip
repz
dec
jne
fldenv
shlb
into
push
mov
and
adc
cmpb
inc
inc
or
jbe
cmp
in
lods
inc
aad
push
jo
icebp
mov
push
jno
push
adc
inc
pop
xchg
cmp
aad
sbb
ret
sbb
and
dec
push
jp
push
inc
data16
sbb
pop
rcrb
push
call
cmc
shll
pop
adc
jb
mov
clc
and
js
or
das
int
fpatan
xchg
and
sub
je
imul
xor
jbe
mov
sbb
lods
inc
mov
sub
call
xor
je
and
pop
pop
push
mov
mov
add
cmp
add
out
rcrb
and
outsb
scas
push
push
push
or
jmp
pop
insb
add
sub
mov
inc
fs
xor
adc
ret
aam
data16
cmp
adc
add
stos
inc
je
gs
sbb
rcrl
mov
and
xchg
sub
xor
mov
dec
dec
cli
xchg
inc
jecxz
xchg
shl
sahf
xor
push
xchg
xor
push
in
sti
xlat
mov
aad
data16
push
aad
bswap
out
mov
fs
lea
les
add
push
imul
fstl
mov
mov
xor
and
pop
pop
sbb
pushf
lea
mov
pop
jp
das
jg
dec
stc
notb
stc
adc
mov
pop
repz
int3
ss
cmp
and
insb
adc
sbb
fwait
adc
jnp
addr16
fldl
cli
or
mov
dec
jle
lods
push
or
mov
leave
xchg
iret
add
lret
xlat
loope
vpsubq
mov
pop
mov
push
mov
xor
imul
imul
fsts
jbe
jne
pop
push
fadds
push
sub
sarl
out
push
dec
dec
test
mov
out
faddl
mov
push
mov
lcall
cwtl
and
nop
dec
fnsave
inc
mov
sbb
int
jmp
lret
cmp
push
pop
jp
stc
pop
xor
js,pn
pusha
dec
clc
push
rolb
xor
ficoms
jecxz
into
push
add
loopne
movsb
or
add
push
mov
rorb
pop
pop
lock
add
roll
xchg
icebp
adc
test
jmp
lea
or
cmp
lods
add
mov
stos
jle
xor
fnstenv
stos
push
movsb
subb
fldcw
add
jae
sub
outsl
jns
cli
push
mov
test
mov
pop
cmp
cmpsl
pop
jmp
push
rol
inc
jno
inc
popa
in
and
mov
jns
mov
pop
out
dec
inc
call
adc
loope
cmp
fs
scas
ljmp
aas
xchg
xor
fucomip
mov
jg
shll
jns
pop
rcll
pop
dec
leave
push
or
cmp
add
lds
jle
fisubrs
mov
mov
pop
dec
dec
pushf
or
dec
jle
gs
mov
int
sarl
test
mov
arpl
dec
xor
mov
shll
mov
cmpsl
hlt
aam
adc
rolb
mov
cmpsl
sbb
push
jmp
ret
pop
xchg
outsb
or
ret
fwait
mov
adc
aad
cmpsb
popa
bound
test
sub
mov
insl
insl
sub
pop
shlb
popa
sub
arpl
iret
lock
or
pop
clc
or
xchg
xor
adc
aad
jmp
pop
cmpsl
adc
jns
or
adc
jg
sub
jge
mov
sahf
push
fadd
lds
enter
or
mov
std
cltd
xchg
in
push
mov
lret
dec
aad
xchg
or
push
in
mov
sub
jne
mov
xchg
cltd
repz
xor
int3
sbb
dec
dec
jns
xlat
xor
cmc
inc
sbb
mov
int3
arpl
adc
rcr
jbe
sbb
test
ljmp
dec
outsl
mov
dec
mov
xchg
mov
add
call
gs
dec
or
or
mov
cmpsb
pusha
and
and
dec
xor
call
movsb
imul
call
dec
fwait
jae
push
jo
mov
stos
adc
push
repz
and
addb
xchg
sbb
cltd
fdiv
mov
in
mov
cltd
mov
or
push
mov
in
xor
frstor
enter
call
andb
or
mov
and
out
sti
dec
loop
mov
jmp
mov
movl
dec
cwtl
push
fs
leave
mov
xor
jl
outsl
ret
ret
inc
xchg
push
xchg
ds
icebp
xchg
or
popa
cmpsb
mov
or
out
mov
add
push
movsb
mov
divl
jno
pop
iret
dec
xchg
mov
dec
xchg
adc
inc
sbb
or
sbb
mov
notb
push
mov
jmp
mov
loopne
hlt
ds
rclb
pop
in
adc
sbb
and
cmpsl
repz
gs
sbb
mov
dec
mov
fdivr
sub
mov
or
push
into
mov
fbstp
adc
dec
aaa
xor
pusha
and
push
mov
roll
gs
lock
lret
xchg
popf
andb
inc
mov
mov
xchg
ljmp
call
lods
cmc
mov
stos
mov
out
sub
je
pop
mov
andb
lods
enter
mov
repnz
fsubr
adc
ja
sarl
xor
push
pusha
pop
mov
pop
xor
imul
call
mov
imul
and
lret
stos
mov
mov
jnp
andl
pop
es
mov
call
or
sub
cmp
jge
into
cld
inc
lret
mov
add
sbb
rol
mov
mov
mov
mov
sub
xchg
mov
movsl
mov
xchg
add
cmp
or
mov
hlt
xchg
pop
imul
dec
mov
iret
loopne
int3
sbb
mov
xchg
mov
jnp
mov
or
mov
dec
sbb
mov
push
pop
sub
pop
ja
enter
push
push
jns
mov
out
mov
sub
mov
jp
jl
enter
mov
xlat
test
pop
jno
inc
dec
pop
push
rcrl
mov
sahf
sbb
out
jge
pop
xor
sbb
je
mov
push
jle
or
adc
cltd
ss
mov
xchg
mov
test
or
adc
shl
in
xor
cmp
dec
pop
sti
fwait
mov
dec
jmp
mov
jb
fwait
and
es
insb
and
pop
pop
test
sub
add
gs
test
mov
icebp
cwtl
sbb
xchg
adc
cmpsl
dec
rcrb
fldt
mov
push
test
sbb
in
inc
repnz
pusha
jmp
mov
lret
ds
xor
pop
cmp
pop
fwait
arpl
lods
push
inc
xor
repnz
cmc
es
mov
adc
pop
sahf
mov
sbb
push
rcl
fistpl
repz
sub
jbe
xchg
and
js
and
data16
fmull
sbb
int
pop
into
negb
in
outsb
pop
sub
mov
pop
add
out
out
aad
fildl
scas
ja
ret
or
jne
daa
push
mov
clc
rcll
dec
dec
sub
cmp
add
mov
mov
in
and
mov
push
inc
movl
xchg
std
cmpsb
sbb
ficomps
jle
scas
in
pushf
jno
jb
ret
pop
ss
sbb
repnz
mov
sbb
push
sub
fnsave
mov
or
int3
lock
call
call
test
jmp
cmp
mov
push
loopne
movsl
pop
or
mov
cmp
outsb
jp
es
pop
add
aam
and
fdivrp
sbb
mov
mov
push
or
insb
mov
mov
xor
pusha
add
cpuid
mov
push
outsl
outsl
scas
mov
jns
cmpb
sub
dec
push
pop
push
sub
or
loop
stos
mov
xchg
mov
repnz
pop
shlb
jne
add
push
sbb
push
push
add
mov
cmpsl
cs
pop
cmp
sbbl
add
outsb
cmp
aam
scas
ret
mov
test
adc
mov
out
push
sub
xor
add
sub
push
inc
pop
fiadds
addr16
pop
imul
sbb
mov
jl
js
icebp
or
mov
imul
lcall
cwtl
mov
sbb
sti
std
int
aaa
lea
movsb
inc
mov
or
adc
xor
pop
jecxz
xor
jle
cs
and
cmpsl
fimuls
lret
data16
out
insb
adc
loop
or
jl
mov
mov
jb
out
ret
and
inc
ds
stos
sub
push
inc
loop
cmp
popf
add
popf
mov
pop
adc
adc
mov
xor
std
adc
mov
in
ficompl
xor
push
mov
pop
movsl
lret
arpl
cmp
sbb
aam
jbe
daa
and
adc
and
mov
and
jle
leave
mov
sub
jecxz
dec
sub
dec
out
xor
sbb
and
sbb
test
nop
shlb
sbb
inc
adc
leave
je
adc
loop
or
cmpsl
das
cmp
sub
pushf
std
stc
sahf
xor
lock
pop
add
cli
popf
mov
repnz
js
pop
ret
mov
cwtl
aaa
in
xor
aas
mov
lods
sarl
cltd
cwtl
mov
and
cmp
cmp
dec
insl
cmc
ret
jle
mulb
sbb
movsl
cmp
sahf
inc
cltd
inc
inc
out
scas
inc
in
xor
ljmp
clc
movsb
pop
xor
lods
test
jge
loope
cwtl
xchg
and
mov
sub
inc
dec
push
cmpsl
divl
xor
sahf
push
js
call
andb
mov
adc
fldenv
xchg
jmp
outsb
mov
and
sti
lods
outsl
insl
testl
movsb
fcomip
mov
sbbl
clc
sti
dec
repz
xchg
xor
gs
imul
xor
pop
stos
xchg
das
jbe
adc
out
test
pop
addl
fistps
cmp
pushf
icebp
or
fdivrs
sti
push
and
or
or
xchg
je
dec
aam
lret
ret
sarl
mov
sub
shll
push
shr
data16
xor
pop
test
xchg
add
scas
cmp
das
loop
dec
inc
loop
bound
pusha
dec
dec
pop
dec
push
shrl
mov
dec
lock
insl
mov
adc
sbb
nop
sti
lods
out
push
clc
add
push
mov
or
pop
xor
movsl
stos
clc
push
test
mov
add
dec
or
xor
or
icebp
adc
cltd
push
xlat
push
pop
hlt
adc
jb
xchg
mov
in
add
mov
mov
add
shlb
movsb
inc
xor
add
pushf
jecxz
and
sbb
roll
inc
inc
jnp
in
in
cltd
and
add
std
mov
sbb
xor
push
adc
sahf
push
and
or
inc
xchg
test
mov
inc
test
jbe
pop
push
das
addl
sub
and
lahf
daa
ljmp
push
or
stc
hlt
es
fdivrs
iret
or
in
pop
mov
je
xchg
add
xor
jg
aad
bound
jb
clc
aas
stos
mov
xchg
data16
ret
sub
xor
enter
idiv
push
lret
stos
mov
pop
sub
xor
jecxz
adc
push
cltd
aaa
test
frstor
mov
or
push
push
dec
xchg
and
leave
pop
push
dec
ss
sti
shrb
sbb
hlt
ja
lock
or
sub
fldenv
push
cli
mov
addb
negb
mov
jb
stos
jbe
push
dec
int3
out
lret
repnz
mov
jns
or
call
ret
cmp
xchg
out
loopne
xor
dec
inc
bound
mov
stos
mov
arpl
daa
xlat
pop
sub
mov
jl
lcall
ja
fsubr
dec
gs
sbb
pop
mov
in
inc
push
int
pushf
decb
sahf
xor
xor
mov
or
out
pop
xor
inc
nop
jnp
cmp
out
and
iret
aaa
sahf
mov
adc
test
iret
enter
repz
mov
cld
nop
popf
aas
rcl
and
mov
or
in
aaa
dec
sbb
shrl
dec
sbb
faddl
jb
xchg
mov
fstl
sub
lahf
jns
jne
and
jb
or
xor
inc
leave
mov
push
adcb
add
pop
sub
xor
pop
imul
lcall
jns
fstpt
into
mov
fstpt
mov
lret
xchg
rcrb
sub
mov
iret
out
sbb
pusha
int
inc
or
es
pop
push
jge
addr16
leave
pop
mov
mov
add
imul
lods
sbb
ds
jge
mov
hlt
andb
or
add
or
test
mov
fldl
push
lret
dec
int3
sbb
add
sub
sbb
jbe
jl
add
jno
inc
add
imul
or
mov
sti
sahf
add
sub
xchg
int3
andl
sbb
movsb
mov
das
jge
mov
icebp
sbb
cld
sbb
dec
sbb
pop
hlt
xchg
jns
arpl
rolb
not
repnz
pop
sub
dec
ds
popf
aam
xchg
mov
cmp
out
repnz
adc
and
mov
pop
mov
mov
mov
das
cli
or
mov
arpl
mov
cltd
add
cwtl
imul
mov
pop
cmc
jb
lahf
fidivl
push
popa
inc
pop
int3
fsubr
add
and
mov
aaa
ret
mov
xorb
aad
movsb
add
xor
test
xchg
jmp
mov
aas
mov
xchg
out
jnp
or
sbb
loop
fcompl
or
imul
mov
loopne
mov
cmpsb
loop
sti
lock
stos
push
cltd
jle
repz
int3
sub
adc
daa
dec
rcll
mov
add
aam
loope
cmp
sbbl
dec
aam
ss
movsb
out
sti
ficoms
jg
jo
push
or
mov
sbb
in
cwtl
push
out
and
movsb
aaa
sbb
add
and
call
jb
sub
insl
out
adc
test
and
leave
mov
mov
pop
cmpsl
dec
out
stc
inc
fsubrs
sbb
sbb
mov
xchg
pop
popa
test
out
sub
aaa
into
push
dec
loopne
or
cmp
jmp
out
dec
jnp
std
lods
imul
sub
cmp
call
out
movsb
inc
popf
xor
cmp
lcall
outsb
frstor
imul
or
cs
pop
icebp
add
sbb
sub
dec
mov
jmp
loop
aam
jns
shrl
push
pop
icebp
andl
js
push
lock
lds
push
jb
and
inc
fisttpl
mov
out
mov
and
jg
adc
lret
mov
dec
jmp
dec
mov
and
cwtl
inc
mov
inc
bound
pop
mov
xchg
or
jle
push
cltd
lds
out
push
adc
pop
mov
pop
paddq
pop
push
repz
jae
aaa
pusha
sarl
or
push
negb
xlat
jmp
or
mov
ja
sub
shlb
jbe
iret
daa
mov
pop
test
nop
in
add
cltd
xor
clc
inc
mov
sub
cmp
mov
push
mov
push
pop
sbb
jno
inc
sbb
sar
xor
push
lds
jb
xchg
andb
push
outsl
shld
aad
xor
icebp
lds
add
sub
xor
test
mov
rcrl
aas
popa
add
scas
push
sub
xchg
mov
insb
sar
roll
adc
jle
mov
mov
js
push
sbb
sbb
cli
std
loopne
das
and
outsb
adc
sbb
test
movsb
in
pop
out
mov
shll
loope
jmp
add
xchg
xor
stos
jnp
pop
imul
pop
jl
ror
dec
in
in
dec
pop
lahf
out
ror
mov
push
adc
fcmovne
xorb
stc
nop
and
mov
in
ret
push
dec
in
mov
shr
fsubr
test
pushf
xor
loope
pmaxsw
cs
xchg
div
dec
imul
pop
lock
decb
pushf
js
daa
inc
rcrb
sbbl
cmp
loopne
subl
inc
pop
sti
into
loop
bound
jecxz
push
xchg
and
jnp
fdivl
xchg
outsb
add
out
fsubl
lds
mov
cld
pop
push
outsl
pop
cltd
cmpsl
inc
mov
aam
pop
mov
mov
mov
dec
push
xchg
xor
jbe
mov
out
fisubrl
lcall
mov
outsl
enter
inc
fnstsw
adc
int3
out
or
stos
clc
enter
mov
cmc
inc
push
inc
icebp
and
sbb
and
sbb
movsb
repnz
push
nop
add
xchg
mov
and
lahf
adc
lret
xchg
data16
dec
inc
fwait
cmpsl
imul
dec
cli
sub
dec
aaa
pop
out
push
xor
inc
arpl
jg
xchg
es
add
xor
adc
outsb
dec
mov
movsb
popa
push
xchg
sbb
push
cwtl
mov
and
popa
jo
es
push
xchg
jno
jecxz
test
xor
jne
jmp
xchg
stos
push
nop
xchg
mov
fbstp
dec
xchg
icebp
cmp
cmpsb
add
xchg
test
leave
dec
hlt
sti
jmp
xor
xchg
mov
out
xchg
xor
mov
jle
push
inc
push
mov
or
jmp
jb
cmp
xorb
xchg
mov
xchg
or
lahf
rol
shrl
dec
mov
dec
cmpsb
ljmp
pop
notl
fld
ret
push
jg
lds
mov
sub
aad
rcr
xor
dec
bound
pop
jae
or
ror
or
fstl
or
inc
adc
out
mov
nop
xor
jne
mov
test
mov
push
mov
cmp
lods
pop
aaa
test
inc
sarb
je
out
sub
cltd
test
iret
adcl
mov
decb
movsb
stc
mov
jnp
adc
and
arpl
dec
testb
cmp
sub
and
mov
jmp
out
inc
std
cltd
jmp
xor
mov
pop
pushf
stc
adc
popf
stc
pop
fdivrs
imul
or
mov
push
xor
stos
mov
out
ret
jp
outsl
cmp
arpl
cmpsl
scas
stc
enter
sub
cmp
call
loope
out
std
xchg
aas
fidivrl
cltd
lret
xchg
xchg
mov
andl
in
stos
pop
adc
xor
fdivrl
popa
mov
pusha
divb
loopne
data16
adc
mov
mov
mov
rol
fstps
and
jmp
push
fwait
out
or
mov
push
lahf
data16
rcl
jnp
nop
sub
mov
adc
jmp
int
repz
push
fstpt
push
aaa
fidivl
testl
sub
dec
dec
cmp
and
into
dec
pop
jns
adc
pop
ficompl
push
lds
dec
movsb
movsb
loop
jl
in
insl
sub
outsb
sub
or
es
rol
push
les
or
stos
in
rclb
lret
xchg
push
pop
shl
dec
imul
pop
imul
xor
iret
sti
xorb
xchg
lods
add
push
push
outsb
test
jecxz
sbb
xor
cld
out
cld
jo
cmp
jl
jb
cmpsb
sbb
mov
pushf
mov
jb
nop
mov
ljmp
push
fucomi
sbb
ljmp
mov
pop
cmpsl
leave
sbb
push
and
popa
xchg
xor
sub
rcrl
sbb
cmp
sbb
mov
test
xchg
mov
nop
xor
sub
jle
jmp
sbb
push
out
xchg
and
sbb
mov
pop
leave
jne
popf
popa
arpl
lds
mov
dec
cld
popa
shrl
lods
insl
xor
loopne
aaa
lea
jae
fbstp
push
adc
gs
inc
stos
addr16
fsubrl
shll
adc
xchg
add
xchg
lahf
test
daa
jb
mov
mov
aaa
dec
int3
xchg
dec
ljmp
call
pop
push
jle
mov
and
scas
sbb
repz
adc
or
xor
out
mov
xchg
ss
mov
sub
cli
insb
ret
call
sarb
xlat
mov
jae
nop
fsubr
add
adc
repnz
and
and
repz
test
mov
or
adc
scas
adc
cli
cmp
xchg
mov
adcb
jge
popa
stc
loop
mov
dec
add
mov
adc
pop
hlt
loopne
mov
pop
stos
jnp
cmp
fstl
pop
into
int
mov
lret
das
push
and
add
sub
test
shlb
dec
loope
cmpl
icebp
popa
or
sub
push
jns
mov
jecxz
into
lods
cmp
xchg
je
inc
call
test
mov
shll
fstl
hlt
sarb
aas
aad
insb
sub
icebp
and
js
fmull
in
push
sbb
fisubl
aas
jne
jo
sub
out
add
and
cld
push
inc
iret
data16
out
std
nop
das
jbe
xlat
sbb
adc
and
inc
insl
add
add
lods
xor
lds
xor
pop
or
popf
xor
lea
push
and
dec
orb
sbb
mov
or
mov
push
bound
mov
xor
pop
je
jg
loop
lcall
jnp
fsubrs
pop
popf
mov
out
xor
mov
js
flds
xchg
sub
into
subb
ljmp
hlt
loop
adcl
in
insl
inc
stos
adc
mov
hlt
mov
js
ja
cmp
mov
sub
aad
dec
pop
jno
fnstsw
xchg
imul
scas
inc
das
fdivl
push
or
inc
xor
and
cmp
jge
call
dec
push
mov
popf
fimuls
xchg
xor
xchg
inc
ja
out
in
in
in
addr16
jecxz
inc
mov
mov
sub
outsb
stos
jbe
cltd
ret
addl
aam
jae
mov
xor
xchg
mov
mov
xor
enter
fbld
adc
push
hlt
mov
notl
sbb
bound
aad
lcall
sub
movsb
mov
inc
outsb
repnz
and
dec
loopne
test
rcr
scas
add
dec
shll
fstpt
sbb
or
lcall
pop
mov
sub
jmp
mov
stc
or
xchg
repnz
popf
call
les
jns
fadds
daa
or
imul
test
cmp
add
leave
arpl
notb
jb
xchg
add
adc
mov
dec
cmpsl
mov
xchg
repnz
sti
fstl
mov
cs
and
inc
test
jno
fs
les
mov
ja
leave
movsb
jno
sub
xchg
jae
mov
mov
loope
jb
outsl
mov
pop
loope
push
in
cmpsb
lock
xchg
icebp
andl
lahf
shll
push
xor
inc
fisubl
ffreep
in
js
jne
push
cs
sarb
hlt
nop
xchg
scas
in
mov
andb
mov
pushf
movsb
mov
in
fcos
push
std
sub
mov
daa
mov
out
lret
cmp
and
mov
pop
mov
repz
cmpsl
cli
push
fnclex
dec
pop
sti
shlb
mov
xchg
mov
outsl
dec
mov
cmpb
mov
test
test
int3
and
xor
pop
cli
jb
add
mov
dec
push
bndstx
rcrl
imul
sub
xchg
fidivl
mov
stc
mov
inc
mov
outsb
in
xchg
pushf
inc
arpl
add
adc
mov
cwtl
insl
xchg
mov
andl
stc
fistpll
pusha
cmpsl
sbb
or
lds
adc
jnp
lds
pusha
in
loopne
cwtl
lret
into
ret
inc
icebp
mov
lahf
ljmp
lods
clc
and
mov
lock
adc
push
add
add
ss
gs
lea
cltd
arpl
adc
add
mov
jmp
js
and
pop
out
xchg
jne
push
xchg
dec
rcrl
test
mov
pop
outsb
push
aam
and
das
sbb
mov
cmpsb
xchg
aas
push
imul
cmpsl
sbb
sub
ljmp
jge
fwait
ret
test
aam
pop
outsb
in
in
fsubrl
cmp
aaa
xchg
sub
lock
and
sub
hlt
mov
aaa
repz
dec
pop
pop
cltd
jmp
aaa
addr16
idivl
xchg
dec
ja
jp
adc
xchg
lock
scas
arpl
sbb
jle
lcall
popa
mov
mov
sub
in
clc
lret
or
loop
fstps
pop
mov
lret
les
andl
xchg
mov
and
or
filds
mov
dec
mov
cmpsl
imul
je
xor
test
aas
repz
xchg
notb
data16
aad
dec
jbe
jge
test
xchg
in
ss
out
std
jns
sbbl
mov
ret
loop
pop
push
lret
jp
arpl
push
fsubrs
mov
push
dec
divb
mov
leave
sbb
lea
popa
cwtl
sub
es
lods
mov
mov
scas
stc
hlt
add
pop
mov
sub
mov
cltd
pop
sub
cmpsl
jl
push
out
fildl
inc
pop
add
xor
push
add
negb
rcrl
xor
scas
cmp
out
fistpl
mov
sub
dec
nop
adc
jo
xlat
cli
mov
add
cmp
jo
in
mov
ret
mov
cld
and
add
push
std
xchg
xchg
or
sub
fldt
pop
pop
insb
mov
mov
xorl
pusha
adc
lds
xchg
xor
mov
out
mov
push
fistpl
xchg
sarl
and
push
out
shrb
inc
inc
sar
loope
lds
dec
xchg
xor
pop
insl
inc
fcmovne
popf
add
mov
stos
fwait
stos
push
xchg
cmp
enter
mulb
add
sbb
jb
jecxz
pop
pushf
sar
nop
add
mov
push
jb
outsb
adc
popa
mov
jle
das
cmpsl
mov
mov
pop
add
inc
dec
hlt
movsb
lahf
fisubrs
lahf
nop
mov
js
mov
mov
push
jae
adc
rcrb
inc
fisubrs
and
data16
add
sbb
cmc
faddl
lret
adc
in
inc
das
shl
ja
add
and
ja
enter
jge
repnz
mov
in
push
icebp
lods
and
jmp
popa
sti
mov
sbb
mov
mov
jbe
incb
and
inc
cmpsl
and
dec
mov
adc
adc
orl
sarb
movsb
inc
es
jmp
push
sbb
out
and
push
sub
mov
sarl
rcrb
mov
push
icebp
pop
in
and
dec
out
leave
adc
loope
sbb
cli
mov
mov
fbld
mov
sahf
sti
mov
mov
pusha
dec
mov
mov
data16
cmp
movsb
dec
push
ljmp
popa
inc
test
rcr
popa
call
enter
and
ret
mov
xchg
in
aad
adc
adc
add
scas
cmp
pop
jl
out
mov
xchg
pop
cmp
fs
mov
psrld
arpl
adc
jmp
movsb
xchg
cmp
jmp
insb
lret
sahf
shr
scas
les
jnp
fwait
pop
inc
scas
mov
jne
jmp
pop
push
push
loop
push
and
lods
pop
mov
xchg
sub
mov
divb
dec
jecxz
push
pop
ja
sub
movsl
xchg
add
out
std
mov
adc
inc
arpl
inc
shl
popf
shll
movsl
or
mov
aam
in
flds
mov
xchg
imull
mov
jmp
lret
pop
cld
ret
pop
sub
loope
mov
aad
adc
das
cmp
and
push
sub
scas
hlt
pop
loopne
test
mov
js
mov
dec
adc
out
dec
in
shlb
jb
cmp
dec
xchg
leave
lret
sbb
push
ljmp
pushf
pop
test
pop
xor
push
jb
pop
adcb
add
jmp
arpl
frstor
lods
js
xor
mov
xlat
mov
jo
mov
fs
mul
ret
fucom
jecxz
mov
mov
mov
dec
cmp
dec
mov
cmpsl
jno
arpl
jbe
mov
imul
gs
add
mov
jge
scas
pop
imul
mov
dec
fcomip
add
imul
stos
dec
add
mov
into
bound
dec
int
ss
dec
hlt
or
das
jnp
push
inc
add
cmp
bound
jmp
notb
pop
mov
pop
push
jmp
cmp
mov
cli
or
cli
or
ss
pushf
fwait
mov
int
mov
lahf
and
in
dec
addr16
std
xchg
cmp
es
ret
and
dec
pop
pop
dec
call
sub
fisttpll
shl
aaa
jnp
repz
mov
and
cmpsl
or
mov
add
adc
push
pop
or
and
fldenv
mov
dec
cli
out
scas
bound
enter
stos
xchg
inc
push
push
jb
sub
dec
cmp
ds
pusha
repnz
mov
mov
push
push
mov
xchg
test
push
adc
in
out
xor
add
mov
jmp
jb
sub
dec
test
popfw
sub
repz
pushl
data16
push
inc
stos
sti
mov
ljmp
or
movsl
ret
fsts
out
cmp
add
jne
imull
mov
jge
sbb
movl
int3
and
push
sti
gs
mov
int
pop
ljmp
add
lods
mov
bound
in
sbb
adc
fdivl
in
ror
mov
pop
popw
fldcw
and
int
jle
scas
scas
int3
bound
mov
loope
lds
add
aad
jbe
pop
mov
xchg
sub
xchg
mov
mov
adc
add
xchg
mov
mov
lock
incl
nop
xchg
pop
rcll
out
stos
test
aam
cwtl
test
mov
test
mov
ret
xlat
cmpsl
rolb
jnp
lods
pop
push
loop
test
inc
mov
fldcw
out
push
adc
sub
mov
lds
in
pop
out
push
jnp
inc
xor
mov
mov
xor
mov
bound
je
test
fstps
jo
ja,pn
lock
pop
adc
sbb
std
or
out
pop
hlt
sub
mov
lret
jnp
sti
adc
ja
gs
cli
pop
push
jle
cmp
insb
sub
mov
pop
inc
sub
ljmp
loopne
mov
imul
cmpsb
cmp
mov
aaa
arpl
xchg
pop
fbld
xorl
ret
pop
shll
add
and
xchg
in
and
push
and
mov
push
fsubrs
push
push
push
lock
frstor
xor
add
pop
push
movsb
in
push
pop
mov
aad
int3
loope
lcall
cmpsb
inc
sub
mov
dec
les
data16
xor
xor
fidivl
push
cmp
push
les
cmp
mov
pop
xor
xlat
xchg
pusha
jo
popf
sub
cwtl
mov
pop
fwait
sub
cmp
jmp
pusha
bnd
aas
call
jge
sbbl
leave
sbb
outsl
xor
sbb
das
lcall
jae
mov
int3
das
pop
stc
lcall
jne
pop
sti
cmpsl
ss
repz
ss
jne
ja
mov
cltd
ret
add
daa
pop
or
sub
xchg
and
pop
mov
in
mov
or
dec
in
out
add
pop
imul
fildl
add
sub
push
in
inc
mov
int
ljmp
jne
fldt
pop
loopne
fsubs
push
aas
fwait
jb
mov
out
jo
cli
xchg
jg
mov
sbb
out
cmp
mov
lock
cwtl
icebp
cmp
add
dec
cmc
lods
inc
daa
mov
xor
je
bound
or
orb
dec
call
xchg
jp
mov
push
and
pusha
or
faddl
mov
pand
into
mov
fucomi
insb
in
int3
arpl
ljmp
out
lcall
and
sub
jecxz
lret
das
mov
arpl
sub
mov
ret
sub
or
imull
mull
jne
pop
lret
dec
mov
js
sbb
xchg
jbe
lods
cmpsl
mov
xor
mov
rcrl
or
push
mov
fcomi
xchg
push
imul
push
mov
insb
push
lds
cli
int
mov
popf
mov
shrl
or
rolb
lea
jo
dec
cs
pushf
mov
stc
shl
push
in
jmp
mov
and
pop
jecxz
inc
es
sub
xor
test
inc
jecxz
das
andb
sub
rcrl
xor
and
pop
setno
mov
push
cmpsb
push
xchg
or
stos
xchg
mov
bnd
sbb
add
jp
add
int
repz
cmp
lea
lods
loop
mov
das
movsb
inc
stos
xor
aad
dec
push
jmp
ficomps
pop
subb
dec
fdivrl
cmc
add
rcll
dec
in
xlat
mov
movsb
dec
pushl
mov
dec
add
jns
push
xlat
cmp
cld
xchg
pop
pop
iret
jmp
or
dec
and
dec
lods
mov
into
cmp
insb
stc
fidivs
int
loope
pop
scas
pop
mov
adcb
mul
dec
mov
ret
es
jnp
mov
lods
mov
scas
ror
dec
jbe
in
push
pop
test
ret
mov
xor
shll
mov
ret
rcll
inc
shl
call
push
in
out
icebp
push
mov
je
rol
cmp
js
shr
addl
xchg
and
cmp
mov
addr16
mov
mov
mov
adc
xlat
in
insl
int3
fucomp
xor
je
cmp
es
pop
dec
fnstenv
add
lahf
addr16
pusha
divl
pop
jle
adcl
mov
scas
in
adc
push
cmpsb
mov
or
jbe
mov
mov
lret
mov
mov
les
xchg
sub
mov
rcrb
inc
aam
repz
cmc
and
ss
int
push
push
mov
cmpb
adc
shrl
insb
js
mov
adc
fbstp
dec
sbbl
jge
je
jmp
sbbl
add
and
sbb
xchg
dec
jae
leave
stc
ljmp
outsl
ja
lret
ljmp
test
dec
flds
shl
adc
jecxz
aaa
daa
push
and
test
mov
or
mov
lahf
subl
mov
popa
mov
cltd
fcoml
pop
fldcw
sti
push
jg
movsl
movsb
mov
aaa
outsl
jecxz
fwait
xor
push
jo
lock
mov
sarb
ret
adc
mov
frstor
aas
outsl
aaa
outsb
call
inc
mov
popa
cmpsl
or
scas
mov
pusha
ss
hlt
push
jmp
or
sbb
ss
imul
push
out
stos
arpl
mov
ds
jb
mov
push
cmp
jne
xchg
das
sahf
lahf
and
repnz
pushf
mov
clc
mov
es
inc
add
jne
repz
and
adc
outsb
xor
sub
stc
icebp
in
sub
lods
or
lret
in
xchg
push
jno
lds
or
jae
sub
mov
adc
pop
roll
push
gs
sbbl
loopne
cld
dec
scas
and
jmp
jmp
sub
cmc
adc
hlt
ss
outsl
test
xchg
out
jno
pop
mov
int3
push
xor
es
call
add
loopne
cmp
cmp
fstpl
lods
call
aad
xchg
aas
sub
pusha
pop
sarb
ljmp
mov
cmp
xor
dec
loop
jl
mov
mov
pop
cmp
int3
arpl
jle
cmc
repz
push
ds
in
inc
pop
popf
jp
lahf
popf
cli
inc
lds
roll
and
lahf
mov
aad
stos
push
sub
jae
mov
inc
iret
mov
push
fists
push
cmpb
movsb
mov
mov
xchg
aas
loopne
push
adc
sub
movsb
enter
cmpsl
mov
ret
repz
xor
xchg
outsl
into
dec
stos
shl
insl
add
add
arpl
pop
out
cwtl
mov
mov
repz
shrl
lods
notl
push
dec
jp
cmpsb
stos
outsb
fadd
inc
inc
add
outsb
mov
pop
out
pop
add
pop
hlt
aaa
jnp
jmp
and
adc
jb
cs
insl
mov
fcomip
jl
daa
mov
or
push
icebp
mov
test
adc
mov
insb
insb
call
xchg
pop
lahf
ljmp
ret
int
mov
lret
imul
xlat
imul
mov
clc
or
rcrl
mov
test
dec
ljmp
adc
jp
jecxz
cmp
movsl
and
push
aad
addl
dec
in
cmp
xchg
add
fists
aam
jmp
adc
mov
jmp
aad
inc
in
outsb
push
mov
lret
mov
stos
push
inc
gs
xor
imul
ret
repz
call
mov
cmp
sub
mov
pop
cmp
add
cmp
xchg
sbb
mov
lahf
nop
and
lret
ret
ds
call
loope
and
aad
sbbl
lds
call
dec
push
mov
or
out
rorl
push
cld
push
fisubl
imul
dec
mov
in
xchg
hlt
pop
jp
xor
sbb
push
das
cmpsb
movsb
ret
xchg
cmc
movsl
movsl
dec
pop
cltd
sbb
lret
jle
addr16
int3
out
cwtl
cltd
xor
jg
imul
mov
xchg
jb
sub
loopne
jmp
pop
aad
adc
out
addr16
jbe
and
mov
sub
popa
inc
divb
adc
mov
fwait
inc
mov
cmp
pusha
shr
xchg
and
jmp
and
xchg
int3
cwtl
and
ror
lods
cmp
jp
mov
idivl
mov
test
jae
shlb
xchg
mov
push
xchg
lret
punpckhwd
sub
push
lods
push
sbb
ds
out
dec
lret
adc
mov
aaa
add
dec
push
mov
and
xorl
mov
js
xchg
xchg
lds
inc
mov
fsubs
insl
sbb
pop
xor
mov
inc
xchg
sub
push
add
cmp
stos
pop
cmpsl
push
pop
lret
jbe
cli
ss
add
add
in
jns
sub
lds
dec
out
daa
add
or
das
aad
cmc
push
xchg
mov
lahf
rol
je,pt
dec
sub
ret
dec
leave
test
fwait
sbb
dec
mov
push
mov
test
popa
jae
call
pop
pop
in
adc
xor
pop
mov
push
xor
ret
cld
mov
push
jnp
jmp
inc
mov
in
sbb
push
inc
lds
sub
cli
sub
pop
adc
mov
outsb
inc
push
xor
push
jmp
push
jge
in
scas
das
sbb
std
stc
xor
sub
insb
insl
rcl
and
inc
lods
inc
js
test
lock
push
stc
fdivp
mov
lret
dec
fsubs
pop
insl
push
ja
sbb
mov
movsb
nop
insl
xlat
add
xor
fistpll
push
lds
shrb
mov
cs
in
and
dec
arpl
pop
mov
fisubrl
cmpb
scas
lcall
adc
jge
and
stos
mov
das
and
jg
xchg
sub
icebp
pop
inc
clc
sbb
cmp
dec
sbb
mov
daa
jmp
daa
xchg
push
scas
mov
aam
or
or
xchg
pop
push
orb
fildll
pop
jno
cli
jo
sub
lods
inc
inc
dec
rorl
add
push
out
in
test
or
stc
add
inc
mov
mov
mov
fists
test
push
scas
jbe
sbb
stc
loopne
sub
xchg
xor
pop
repz
lret
ds
sbb
push
push
jno
add
adc
mov
pusha
loop
fwait
hlt
or
sub
lahf
pop
xchg
sbbl
push
cltd
test
push
mov
sub
xchg
std
cmc
and
pop
test
leave
xlat
sti
repnz
jbe
and
mov
xchg
mov
dec
dec
jbe
ret
push
mov
stos
jecxz
cltd
dec
cmovne
fsub
and
add
mov
leave
outsb
add
dec
fsubrs
jno
lods
test
stc
clc
or
xchg
xchg
hlt
mov
repz
in
jae
xlat
fadds
mov
sahf
pop
jb
xchg
sub
xchg
movsb
xchg
les
notb
mov
ret
pop
insl
jns
cmp
dec
xchg
mov
cmp
fnsave
call
xor
xchg
insl
dec
gs
sbb
aaa
imul
les
add
mov
sub
lret
push
jg
push
sbb
inc
in
call
loopne
ljmp
fucompp
push
xchg
sbbb
es
ret
in
cli
mov
mov
jb
inc
fsubrs
je
lds
xchg
pop
xor
cmpsl
psrad
imul
neg
mov
subb
push
jl
scas
loope
push
das
test
ljmp
adc
sub
cs
fistps
mov
xor
mov
les
out
inc
and
lret
pushf
mov
test
jbe
fwait
scas
fcmovne
enter
bound
sbb
clc
xor
and
inc
icebp
fidivrs
daa
incb
or
mov
adc
dec
xor
int3
adc
iret
or
cli
loopne
and
fs
inc
adc
sub
stc
or
movsb
jg
sub
xor
fs
jge
lahf
pop
mov
pop
and
dec
or
xchg
in
sub
testl
lret
fnsave
lret
sahf
push
mov
fldcw
xlat
sbbb
mov
add
stos
rorl
shll
inc
pusha
daa
imul
xchg
dec
out
nop
dec
jmp
mov
push
call
rcrl
jecxz
negl
pop
fs
or
pop
test
inc
jge
mov
jns
mov
stos
jg
dec
popf
ret
imul
xchg
je
movsl
icebp
xor
add
out
dec
xor
xor
mov
loopne
sbb
add
cs
push
icebp
push
test
fsubrl
adcl
xchg
xor
ds
out
rcl
push
mov
push
mov
es
arpl
int3
push
montmul
cmpsb
sub
mov
in
pop
jbe
lea
xor
mov
jp
push
inc
test
pop
add
js
scas
mov
lea
int3
cmp
dec
pop
xchg
sbb
lds
adcl
in
adc
push
push
xor
xchg
push
xlat
cmc
shl
mov
push
nop
in
jmp
xchg
stos
inc
ret
jge
lock
dec
movsl
icebp
mov
lods
in
dec
xor
push
xor
int3
cmpsb
push
push
in
jmp
push
and
push
cltd
sbb
imul
push
cli
es
je
test
andl
leave
loop
scas
adc
and
les
adc
daa
dec
fbld
or
es
push
and
scas
sub
hlt
inc
mov
jbe
mov
test
xchg
outsb
cmp
fcomip
rolb
inc
and
iret
cltd
and
adc
add
dec
or
addb
in
out
pop
sbb
cmp
mov
js
outsl
mov
sub
testl
jno
cmp
mov
adc
rcrl
aaa
mov
pop
sub
inc
loope
adc
and
xchg
jne
jne
adc
ja
aam
or
in
movsb
out
lahf
cmp
xchg
cltd
xor
mov
xchg
stos
sbb
mov
stc
arpl
lock
cmc
push
xchg
fsubrs
insl
pop
jne
testb
sbb
aad
or
add
jecxz
das
lcall
push
addr16
pop
and
aas
sti
or
fs
jne
bound
xchg
xor
repz
cmp
push
jno
test
or
mov
ret
movsl
sahf
mov
sub
movsb
dec
test
lret
push
pop
sub
jge
mov
jb
mov
push
or
or
lahf
stos
aam
or
sbb
or
aam
adcw
pop
mov
push
out
add
mov
js
int3
arpl
adc
clc
ret
out
fs
xor
aas
dec
mov
and
xor
les
movsl
inc
xlat
in
cmpsb
inc
bound
push
jns
enter
popf
outsb
adc
je
dec
xor
out
inc
dec
jns
mov
push
and
stos
jbe
pop
ja
and
sbb
pushf
cmc
sbb
mov
lahf
cmc
ficompl
lahf
pop
jne
lods
cmpsb
sub
cmpsl
cltd
mov
push
push
scas
pop
adc
cmpsl
cmp
mov
fcmovbe
inc
sub
mov
jo
bound
loopne
inc
pop
lods
mov
test
jmp
mov
hlt
sub
inc
mov
jge
shr
and
insl
bound
into
mov
pop
hlt
inc
movsl
mov
aam
jnp
loopne
test
mov
cltd
sub
jg
jnp
jmp
fcomps
mov
push
sbb
loop
sbb
sarl
mov
dec
or
cmp
dec
filds
ljmp
fwait
or
test
in
andl
pop
in
test
out
adc
stc
cmpb
adc
pop
in
nop
call
dec
and
fisttps
data16
xor
or
movsb
std
mov
sbb
xor
sti
fdivrs
xchg
lds
cmc
movsb
xor
addr16
enter
adc
mov
xor
ljmp
iret
subb
dec
in
leave
icebp
ds
mov
push
aam
adcb
fstpt
adc
mov
pop
pop
movsl
sbb
pop
std
cmp
mov
fistpll
lcall
xchg
cmp
pusha
and
std
sub
mov
lcall
dec
mov
push
rorl
dec
sahf
clc
jle
and
popf
sahf
mov
xor
insl
iret
jp
mov
hlt
dec
push
jecxz
in
pop
jae
sahf
mov
cmc
mov
daa
inc
dec
jb
or
mov
cs
leave
inc
fdivs
jmp
aam
add
pop
mov
in
push
adc
cs
cwtl
gs
inc
push
call
xchg
add
inc
das
mov
sbb
adc
and
jmp
and
cmc
and
cmp
call
or
adc
aaa
loopne
mov
dec
in
ror
xor
jmp
pop
push
movsb
das
push
adc
in
ss
jecxz
nop
into
lahf
inc
sbb
dec
sub
ja
fiadds
lea
mov
out
inc
pop
sbb
cltd
or
sbb
mov
mov
push
outsb
xorl
sub
and
xor
jno
data16
jns
xchg
jns
inc
push
aas
inc
sbb
pushf
mov
rorl
cmp
ja
cmpsl
jge
fldpi
and
cmp
mov
pop
pop
rorl
aaa
xor
mov
mov
jnp
and
cmpsl
sub
scas
hlt
mov
sub
add
daa
cli
test
lods
dec
inc
fnstcw
movsl
in
mov
add
jle
pop
daa
push
aas
mov
ss
push
push
push
push
or
insl
rorl
inc
sbb
cmc
jo
mov
dec
adc
push
dec
arpl
xchg
pop
xor
arpl
push
adc
add
rclb
mov
lock
out
in
jnp
xlat
mov
dec
mov
aad
les
mov
int
rclb
mov
fucom
mov
jge
inc
fsts
js
xchg
stos
adc
sub
adc
or
in
jl
xor
cmpsb
pop
dec
cltd
inc
or
nop
imul
mov
into
orl
push
aam
push
add
xor
mov
decb
mov
adc
cmc
fwait
mov
mov
pop
or
or
jnp
mov
les
das
mov
xchg
shrl
sub
mov
rcll
loop
addr16
loopne
cwtl
fldl2t
leave
lods
fbstp
je
sbb
or
inc
dec
fs
jge
sub
or
stos
loop
shl
sub
cmp
in
xchg
sub
cs
dec
movb
inc
cltd
xchg
faddl
push
push
ja
fisubrs
xlat
leave
pusha
pop
mov
cmp
ds
repnz
inc
sub
lea
sub
xchg
fidivs
negl
dec
inc
loopne
pop
push
cld
add
sbb
push
xor
insb
mov
pop
jae
repz
pop
loope
int
mov
xor
mov
dec
pop
dec
test
insl
ficomps
or
xchg
insl
cmp
add
cmpsb
mov
mov
jg
imul
add
stos
out
daa
jge
inc
jmp
icebp
jp
mov
adc
mov
jmp
dec
mov
sbb
imul
sbb
ljmp
jno
shlb
and
mov
scas
stos
shl
popf
and
lds
pop
out
push
pop
test
dec
rorb
cltd
mov
aas
jmp
fldenv
insb
add
cmp
mov
mov
testl
push
push
xchg
cs
pop
push
sbbl
inc
cmpsb
call
adcl
imul
mov
cmpsl
jns,pt
repz
test
mov
add
cltd
popa
in
mov
jns
repnz
mov
lret
push
mov
jo
mov
xchg
pop
xor
pusha
sahf
mov
dec
lahf
ss
stos
sub
inc
data16
ja
movsl
sbb
jns
popf
mulb
inc
int3
sbb
inc
dec
sbb
loope
pop
fimull
lods
rcrl
xchg
sub
xchg
mov
cmp
bndstx
test
scas
hlt
addr16
stos
dec
and
idivb
cltd
dec
or
movsl
stc
je
mov
ljmp
cmp
out
pop
lret
pop
push
push
mov
shrb
rcr
je
inc
in
icebp
jns
sti
push
fsubrs
dec
out
sbb
adc
movsb
push
ja
das
ret
cmp
call
sbb
xor
int
xchg
mov
out
dec
out
sbb
aam
int3
insl
scas
daa
outsl
outsb
repz
int
btc
xchg
adc
loop
mov
fiadds
pop
je
repz
mov
mov
cltd
in
push
dec
and
and
lahf
stos
lret
cmpb
push
inc
jge
jg
pop
pop
xor
out
pop
lahf
enter
push
icebp
dec
sub
xchg
xlat
jbe
lods
xor
ficompl
xlat
mov
jle
aaa
stos
pop
in
aam
adcl
pushf
pusha
in
mov
sub
mov
fisubl
subb
int
imul
in
inc
pop
dec
sahf
push
push
nop
and
push
iret
push
lea
cmc
cli
push
in
in
jg
add
popf
xor
ficoms
push
test
lret
cld
test
jo
sbb
xchg
sub
mov
ret
hlt
jle
sub
dec
rcrb
add
sub
mov
lock
into
lds
and
scas
stos
into
gs
jae
sub
push
arpl
int
int
daa
push
xchg
xor
stc
and
add
jmp
test
fsubs
and
pop
sbb
pop
hlt
pop
fidivrl
psubusw
adc
nop
idivb
out
cmp
mov
push
push
cmc
jno
out
mov
imul
mov
jnp
sub
cli
xor
gs
fstps
push
int3
mov
stc
out
jbe
rclb
icebp
xchg
dec
inc
pop
jl
push
test
inc
xchg
dec
xor
push
adc
loope
cmc
add
sub
seto
dec
pusha
pop
sbb
or
cld
mov
int3
outsl
mov
xchg
fildl
adc
ss
inc
lods
lods
sti
push
or
ljmp
dec
ljmp
ljmp
jle
push
jg
andl
push
mov
adc
jbe
das
mov
lret
insb
mov
inc
in
push
cwtl
mov
mov
xchg
xchg
aaa
mov
lock
xchg
add
push
add
lds
cmc
xor
int3
stos
add
ret
or
fmul
inc
lret
pop
in
adc
testl
or
pop
mov
imul
xchg
mov
add
mov
shlb
mov
js
mov
faddl
dec
mov
pushf
adc
pop
mov
sbb
or
les
mov
add
mov
dec
lock
shlb
xchg
mov
xor
jbe
inc
sbb
ss
imul
mov
mov
mov
cmp
or
pop
aas
subl
js
push
movsl
out
sbbb
mov
mov
adc
cmp
dec
dec
vpsubq
ja
lods
popa
xorb
lds
ror
or
popf
xor
jg
pop
lea
add
fucomi
shll
jno
and
repz
cwtl
dec
inc
dec
mov
shr
mov
mov
movsb
stos
and
mov
and
stos
add
clc
movsl
pop
rcrb
or
xchg
imul
mov
push
aas
push
pop
sti
mov
repz
sbb
js
mov
lahf
scas
push
sbb
jl
cmp
push
xchg
pop
cmp
mov
inc
std
mov
lret
jecxz
ret
push
mov
fldcw
sbb
inc
scas
imul
lret
mov
leave
jecxz
adc
addb
or
fwait
xchg
out
xchg
mov
jmp
push
sbb
xchg
scas
jmp
pop
repnz
aam
cmp
shll
addr16
enter
sub
loope
sub
add
test
or
push
push
push
push
ds
cmc
rorb
sbb
pushf
mov
add
pop
shll
mov
outsb
jl
addr16
test
mov
mov
and
push
fidivrl
pop
arpl
cmpsb
dec
inc
bound
pop
popf
cmp
or
test
add
lahf
mov
aam
xor
fbld
in
xchg
in
shll
inc
dec
dec
stc
lds
pusha
pop
mov
mov
outsl
testl
cmpps
mov
imul
pop
xor
jno
dec
mov
mov
and
adc
dec
pop
outsl
add
fdivrs
push
fwait
repnz
push
or
dec
mov
subb
subb
add
scas
mov
lea
or
sbb
sbb
test
pop
xchg
xor
mov
nop
iret
and
popf
shl
cmp
adc
cmp
fcoms
or
mov
pusha
xlat
popf
inc
popa
rcll
lds
inc
ret
lods
imul
adc
cli
fimull
fnstenv
add
and
mov
rcll
pop
mov
mov
xor
sub
push
or
sahf
dec
xor
lods
sub
jmp
jne
rorl
mov
jge
jns
jge
add
sub
lahf
mov
add
dec
adc
pop
inc
loop
push
adc
pop
js
or
stos
mov
or
decl
cmpsb
sbb
sbb
test
sub
pop
ret
or
sbb
pop
pushf
mov
lods
cld
xchg
fisubs
xchg
addb
enter
mov
mov
mov
cmp
and
sbb
pop
je
adc
imul
and
dec
or
add
lcall
or
js
test
in
jp
adc
push
jb
adc
in
mov
arpl
sbb
nop
inc
cltd
adc
out
outsb
sbb
out
push
or
cmp
sub
or
jge
inc
mov
in
rolb
or
call
push
std
and
mov
outsb
divl
imul
sub
jo
jg
outsb
jl
inc
mov
push
cmp
cld
add
jbe
rcrb
movsb
aam
sbb
or
cmp
pop
das
sbbb
mov
scas
lods
imul
pushf
sbb
into
cld
or
sub
dec
iret
popf
cld
push
out
shll
jno
xchg
jnp
jnp
mov
orb
push
xor
pop
inc
repnz
and
push
pop
mov
fldt
add
xor
lcall
inc
call
and
dec
cmc
inc
sahf
jns
inc
aad
or
repz
xchg
sub
in
aam
dec
mov
sti
jle
push
insb
or
jp
cmp
aaa
sbb
test
adc
leave
je
imul
lods
push
mov
outsb
sbb
je,pn
xor
jecxz
or
loope
mov
mov
sahf
add
jno
movsl
jmp
out
push
mov
sarb
inc
sbb
xor
mov
out
inc
and
mov
lret
hlt
cmp
gs
daa
sub
lock
les
sbb
dec
out
aas
jne
std
cli
fwait
add
pop
aas
lret
xchg
and
pop
pop
push
in
nop
jge
ret
mov
jle
clc
arpl
mov
sub
dec
lods
mov
sub
push
aam
adc
scas
shll
test
outsb
xor
jne
xchg
jge
sbb
aaa
mov
dec
in
fists
push
lods
push
scas
fwait
add
xor
lods
or
into
pushf
sub
sarb
and
add
std
mov
adc
lahf
movsl
ss
inc
loop
imul
dec
std
clc
in
push
scas
sub
mov
mov
mov
xor
rorl
pop
out
int
insb
cmp
sub
xchg
or
ret
pop
lahf
aad
sub
push
mulb
dec
sub
call
stc
loope
repz
jle
loope
pop
jns
int
ja
aad
in
push
call
movsl
add
cltd
mov
fs
test
into
stos
arpl
and
pop
xchg
fidivs
in
vpaddusb
sbb
int3
mov
sub
outsl
sar
lods
cmpl
test
insl
rorl
jns
jle
cmp
aam
adc
mov
std
xchg
rclb
bound
push
mov
js
jg
nop
insb
or
xchg
push
dec
fsubrp
jl
sbb
cwtl
loopne
push
inc
cld
mov
in
scas
fimull
andb
mov
dec
or
and
addr16
push
xlat
loopne
and
and
jp
fmul
test
dec
dec
mov
mov
aaa
into
cli
and
push
mov
pop
xsha1
cmpsb
cmp
call
rorl
pop
orl
sub
jno
xor
cmp
pop
je
add
add
xor
mov
push
les
mov
loope
movsl
push
mov
aam
jo
stos
mov
ret
xor
fsubrp
cltd
les
pop
sub
mov
movsb
repz
fadds
mov
xchg
je
sbb
xor
mov
cmpsb
imul
jl
subb
fidivl
sub
out
sub
mov
mov
out
add
cmpsb
js
outsb
sub
cmpsl
scas
jno
push
or
test
sub
dec
shlb
or
mov
inc
in
push
xchg
js
fdecstp
mov
subb
sbb
les
add
lret
repnz
dec
call
in
popf
lods
inc
lret
shr
and
pop
icebp
test
stos
mov
mov
xor
mov
outsl
mov
mov
pop
sub
leave
and
mov
fiaddl
ljmp
call
sbbl
and
and
loopne
sbb
adc
jp
xchg
sub
pop
aaa
dec
lea
mov
mov
cmp
je
cli
mov
es
dec
cmp
loop
out
pop
mov
ljmp
das
jge
icebp
pop
and
mov
adc
es
cmp
inc
gs
push
out
cltd
jo
dec
push
jae
mov
cmp
nopl
pop
int
popf
outsl
mov
fiadds
hlt
mov
lret
movl
out
mov
cwtl
push
repnz
icebp
outsl
repz
push
add
int3
jbe
xchg
test
leave
mov
jae
sub
loopne
add
jbe
cs
jbe
jo
lahf
xchg
pop
lds
and
ljmp
imul
inc
into
aam
add
int
ret
mov
xor
mov
jl
mov
xor
or
xchg
mov
fisubl
mov
addr16
cwtl
stos
lds
sub
inc
add
inc
hlt
push
mov
test
loope
pop
sub
mov
push
andl
or
aaa
mov
sbb
and
test
xlat
jp
in
push
mov
lret
incb
sub
cltd
sti
fwait
inc
cmp
push
in
sbb
movsb
dec
loop
jae
sbb
xchg
mov
jnp
dec
mov
push
cmp
xchg
dec
out
jbe
jmp
cmp
stos
std
adc
mov
cmp
adc
and
jb
sub
jecxz
ja
push
rorl
mov
cmpl
pop
xor
js
push
xor
mov
cld
fldt
sahf
mov
inc
loopne
jbe
lea
cltd
inc
repnz
cli
cltd
xor
pusha
xor
mov
cmpsb
lret
push
jmp
pop
adc
xorl
push
or
xor
xor
cmpsl
mov
sti
les
inc
jmp
jmp
or
inc
dec
jecxz
lret
push
xchg
loope,pt
mull
scas
out
add
test
and
stos
aad
lea
add
fisubrl
cmp
xchg
sub
lahf
popa
movsb
xchg
rol
dec
adc
ss
aad
movsb
or
inc
fisubl
daa
arpl
inc
out
jmp
cmp
shl
pusha
fildl
cmpsl
enter
cmp
xlat
and
dec
clc
movsl
int3
push
fadds
shl
add
jg
mov
xlat
mov
out
fwait
es
mov
xlat
pop
arpl
pop
mov
loop
mov
js
pop
cmpsb
dec
jge
jmp
aam
insb
dec
je
jp
cmpsb
daa
sbbb
cmc
push
arpl
mov
jecxz
xchg
adcl
xor
and
std
push
mov
test
xchg
mov
popa
andb
je
mov
out
fwait
xchg
push
xor
out
aad
push
test
test
mov
icebp
mov
xchg
mov
addr16
movsb
aas
popf
and
aad
fldcw
insb
test
jbe
jnp
mov
bound
xchg
xchg
cmp
mov
inc
loop
push
mov
push
push
sbb
pushl
dec
pop
fdiv
sub
cmp
arpl
int
test
rolb
push
xchg
jmp
idivl
call
mov
rcll
push
inc
mov
push
push
sahf
adc
mov
mov
loope
arpl
int
lds
leave
xor
loop
fisubrl
inc
outsl
shr
fwait
adc
es
enter
mov
clc
sahf
adc
sbb
sub
mov
fsubr
xchg
mov
mov
leave
popa
sub
push
movsb
inc
pop
ret
fistpll
jecxz
mov
int3
push
jmp
mov
in
aam
xchg
nop
add
pop
cld
sti
sahf
inc
pusha
shrb
aaa
loope
stos
lds
inc
cmp
jge
iret
lahf
jae
push
xor
jno
xchg
insl
sbb
mov
addr16
movb
inc
out
aaa
aad
insl
or
mov
push
aaa
xchg
repnz
fdivrs
xchg
into
mov
mov
mov
jmp
fdivrl
shlb
xlat
add
cmpsb
xchg
push
ja
lods
cs
out
pusha
neg
add
xor
arpl
das
loope
dec
pushf
pop
lret
xor
xlat
jmp
mov
inc
pop
mov
or
fistpll
pusha
and
adc
loope
pop
loope
inc
jno
in
icebp
movsl
or
loop
sbb
sbb
jge
cmp
dec
je
push
ds
fisttpll
mov
sbb
pop
scas
jmp
adc
xchg
lock
inc
mov
cwtl
imul
jmp
int3
push
sub
fbstp
aam
jmp
cmc
stos
mov
shl
adc
pusha
jge
push
int
inc
fs
stos
cmp
dec
mov
in
mov
push
sub
mov
push
mov
xchg
adc
dec
mov
lds
xor
rol
mov
push
cwtl
and
inc
xor
scas
in
or
aaa
or
sbb
aaa
out
cld
push
cltd
inc
stc
xchg
mov
movb
sbb
outsl
cmpsl
out
cmp
pop
mov
adc
sub
cs
push
xchg
dec
and
jl
pop
leave
cld
push
je
fdivs
int
xor
mov
sbb
lds
jle
sti
sahf
sahf
mov
scas
push
sub
mov
js
sbb
ret
jnp
sbb
sbb
jns
in
mov
ja
cli
mov
add
mov
std
fs
xor
dec
mov
jbe
imul
rolb
lahf
dec
dec
inc
mov
mov
lret
adc
dec
lods
mov
hlt
adc
jnp
lahf
orps
mov
and
fmulp
int3
push
dec
imul
sub
shlb
inc
mov
adc
add
lea
shll
daa
insl
jge
push
xchg
jge
adc
cmp
nop
adcl
faddp
pop
aas
out
mov
mul
inc
mov
loopne
movsb
adc
mov
out
xor
cli
mov
push
cmc
sub
lods
add
fstpt
mov
test
rolb
repz
push
xor
icebp
mov
fwait
out
cmpsl
xchg
push
out
movsl
sbb
test
into
arpl
push
cmp
add
mov
push
jae
pop
call
dec
test
pop
sub
icebp
movsl
and
jnp
add
dec
push
push
mov
cmc
or
out
xor
std
lret
in
dec
pop
ret
adc
mov
lret
pop
inc
jmp
lea
sahf
adc
cmpsl
cmp
mov
jno
imul
jne
lock
mov
dec
sbb
jp
cmp
push
out
scas
mov
nop
or
cmc
stc
push
sbb
inc
cmp
das
xchg
cld
cmp
das
pop
adc
mov
mov
inc
cltd
outsl
add
fcmovnb
sbb
or
mov
cmp
movsb
in
fistl
add
sbbb
or
xchg
mov
fisubrl
clc
jmp
andl
jmp
mov
mov
sub
mov
lret
fldt
mov
aad
js
repnz
push
cs
xlat
mov
jno
adc
push
sub
cmp
out
xchg
sub
add
mov
out
dec
ljmp
pushf
and
cmp
mov
ret
fisubrs
or
jns
add
out
or
add
xchg
cmp
stc
mov
lcall
xor
test
and
lods
sahf
cmp
and
dec
cs
sub
xor
mov
push
push
dec
out
mov
cltd
pop
sarl
cs
and
add
hlt
rcrl
arpl
loope
repz
adc
outsl
dec
loope
fs
out
shll
and
push
or
cmp
test
xor
notl
pop
inc
loope
test
xchg
adc
ja
inc
dec
jne
std
mov
xchg
sub
xchg
xchg
adc
addr16
pop
in
adc
mov
aad
dec
push
adc
dec
push
jle
jl
mov
push
mov
adc
call
pop
sub
pop
push
orb
pop
add
cs
xchg
aam
lcall
pop
in
lods
xchg
dec
or
sub
sub
and
ja
cmp
negl
pop
loopne
pop
jmp
inc
mov
out
out
dec
fisubs
dec
lods
dec
loop
imul
xlat
push
imul
mov
adc
push
rolb
shl
movsl
cmp
add
ret
pop
idivb
roll
sub
mov
mov
add
xchg
out
jnp
mov
or
or
outsb
sar
cmc
ret
mov
loope
rcrl
shl
movsb
or
mov
inc
int3
push
add
fisubrl
sbb
jns
jb
cld
mov
iret
push
stos
jne
adc
sub
ret
testl
std
mov
cwtl
cmpsb
lret
adc
testb
sub
ret
adc
pop
lret
bound
ret
xchg
and
mov
mov
sar
scas
and
jl
stos
in
sbb
xor
mov
dec
adc
dec
imul
push
mov
and
xor
mov
dec
mov
stc
push
add
inc
xchg
jno
imul
xor
pop
push
jl
xor
add
sub
sub
pop
inc
or
ds
lods
pop
loope
inc
stos
xchg
in
outsb
push
addr16
je
fadds
pop
jne
pop
mov
inc
popa
sbb
ret
jle
mov
in
insl
sub
sub
xchg
pop
push
ljmp
pop
mov
pop
aad
addb
bound
pusha
ss
mov
sets
push
add
fnstenv
dec
out
out
xorb
push
in
je
inc
ljmp
xor
cmpsl
jo
xor
mov
aam
cld
jecxz
push
loope
sub
add
mov
jmp
addr16
dec
and
cli
fcoml
out
xchg
push
fbstp
js
jb
adc
xor
int3
test
sbb
add
notb
in
into
mov
cs
sbb
xchg
ds
shll
pop
xor
fidivl
rcrl
stos
orb
leave
sbb
enter
es
fstpt
frndint
icebp
rol
and
pop
cmpsl
jo
or
add
mov
orb
jnp
adc
pushf
nop
repz
sub
sbb
cmp
cs
sub
lds
pop
pop
xchg
sub
jo
inc
pusha
cmpb
mov
sar
cmp
jge
dec
xor
roll
fs
adc
lahf
add
repz
lods
jecxz
sbb
test
xor
outsb
jnp
push
movsl
imul
jb
lahf
bound
mov
loope
int
mov
dec
xlat
adc
into
lods
ds
push
mov
mov
scas
xchg
sbb
je
mov
jl
xchg
push
adc
mov
cmpsl
lds
fnstsw
ss
pop
fsubp
xor
pop
jecxz,pt
cs
xchg
cmc
add
shl
jge
in
adcl
test
into
xchg
insb
ja
fdivp
mov
orps
adc
mov
loope
adc
or
or
outsl
jb
sbb
and
push
call
hlt
dec
cmpsl
aas
dec
enter
pop
psrad
jns
test
loope
add
ss
sub
rcrl
in
lcall
jae
mov
and
or
into
xchg
mov
inc
sub
and
mov
sbb
pop
sbb
push
cli
or
xchg
xchg
push
nop
popf
mov
cmp
push
cmpsl
lahf
cmp
mov
orb
xor
adc
mov
cmp
nop
nop
in
push
cmc
lods
hlt
push
lahf
sbbb
jge
cmp
rclb
mov
lret
nop
repz
and
adcb
lods
add
pop
inc
pop
out
jne
fiaddl
test
mov
aam
out
or
jmp
lahf
inc
jae
test
out
cmp
jae
ret
jbe
cmc
sbb
subb
mov
and
sbb
insb
shrb
icebp
add
icebp
or
cmp
out
outsl
aad
cs
in
push
xchg
jmp
arpl
insb
pop
cltd
popf
pop
ljmp
repnz
mov
test
sbb
xchg
add
ret
sub
mov
icebp
movsl
sub
shl
pop
popa
ljmp
std
gs
cs
ja
dec
sbbl
mov
pop
mov
in
inc
test
sahf
shlb
dec
cmc
xor
sahf
and
pop
out
xchg
add
icebp
sahf
gs
fsts
push
das
jne
add
mov
jbe
sub
cli
xchg
dec
dec
shl
mov
outsb
inc
fstpl
out
ds
inc
jns
mov
xchg
pop
fimull
out
push
je
pusha
xor
adc
movsl
and
pop
cmpl
xchg
dec
inc
adc
inc
loope
daa
mull
dec
sub
ret
lock
sub
das
jae
cltd
je
fsubrl
fs
mov
out
xchg
mov
aad
cld
and
adc
mov
fnsave
inc
pop
lea
mov
pop
bound
insb
cwtl
push
out
push
push
or
xchg
jne
pop
nop
xor
aad
push
mov
fidivl
int3
jg
push
call
movsb
pop
jmp
imul
mov
inc
fisubrs
inc
push
fwait
mov
and
mov
popa
clc
scas
mov
lea
dec
cld
lcall
mov
jb
jle
mov
imul
jo
loop
jns
int
lahf
arpl
movsl
jge
mov
jb
cwtl
das
adc
aad
pushf
or
out
jge
inc
fcompl
repz
andb
and
xchg
xchg
fisubs
rol
in
xor
adcl
add
jo
insb
add
xchg
or
sbb
jns
inc
stos
jnp
xor
gs
cmp
add
fbstp
and
cmp
xor
ja
mov
ja
pusha
pop
lods
inc
mov
das
adc
rcrl
push
out
xor
outsb
mov
sbb
nop
bound
xchg
mov
mov
lea
xchg
test
lret
addr16
in
push
sub
adc
rcll
or
shrl
test
mov
out
cmpsl
jns
rclb
pop
repnz
ret
jns
outsb
popf
dec
fists
daa
in
xchg
pushf
pop
mov
mov
shlb
xor
bound
leave
jmp
inc
sbb
jmp
scas
es
dec
cli
fsubrs
outsl
sub
pop
or
pusha
cmp
mov
jle
sbb
sbbl
stos
inc
xchg
pop
sbb
ljmp
call
push
mov
jle
aas
pop
jno
push
popf
ds
sub
ret
dec
clc
jg
in
jg
push
lods
shll
sbb
adc
aaa
aas
push
gs
rorb
sub
cmpsl
mov
aad
or
pop
out
cmp
lret
sti
aaa
rcrl
jge
dec
nop
ja
ret
ljmp
jno
std
stos
stos
inc
loope
hlt
mov
mov
dec
ficomps
punpckhdq
imul
mov
lds
and
sbb
xchg
sub
mov
xor
pop
testl
stos
dec
push
in
jge
pop
mov
sahf
jae
ror
cmp
sbb
ss
mov
std
inc
fisubrs
mov
cld
jl
pop
repnz
inc
fcmovb
pop
pop
dec
in
clc
adc
aas
inc
fdivs
shrb
mov
lock
std
xchg
and
testl
xor
sbb
test
outsl
shrl
dec
das
jg
mov
add
push
adc
xchg
enter
mov
pop
mov
fisubrs
jno
sub
jge
sbb
leave
adc
xchg
push
pusha
testl
cmp
sahf
pop
lds
dec
fucomip
push
lcall
test
leave
frstor
sub
add
xor
pop
pop
scas
lea
fsubrs
mov
stos
in
in
orl
ja
push
cmp
mov
fs
sub
add
aaa
mov
repz
cmpsb
xor
add
call
les
add
negl
xchg
cmp
les
testb
sbbb
or
adc
movsb
cmp
jmp
jnp
ret
pop
pop
out
mov
scas
xor
out
popa
leave
icebp
mov
xorb
adc
inc
fsts
adc
inc
fiaddl
mov
xchg
in
mov
cmp
enter
clc
adc
int3
arpl
adc
inc
add
or
sbb
pop
dec
add
xlat
insb
add
icebp
pop
out
and
ja
dec
cli
lcall
repnz
and
mov
dec
stc
cld
xchg
sub
ljmp
push
outsl
push
dec
icebp
ljmp
add
and
jg
and
add
xor
sbbl
jmp
mov
incl
mov
xor
jmp
cmp
imul
add
insl
xor
or
jmp
ret
repnz
pop
pop
loop
rclb
daa
mov
inc
es
push
ficoml
int
sahf
lcall
sub
loopne
rolb
add
repz
and
push
and
jns
rclb
ret
pop
sbb
jns
ret
dec
in
hlt
mov
xor
sbb
aad
aad
aam
xor
shll
insl
dec
mov
sub
push
xor
imul
push
mov
aam
jo
xor
lahf
arpl
les
mov
scas
inc
or
adc
inc
mov
sti
xchg
adc
insb
add
inc
fstpt
mov
data16
adc
shrl
mov
and
in
mov
outsb
add
pop
xor
mov
aas
and
pop
jne
out
test
cwtl
das
fdivp
mov
das
jge
aam
xor
sbb
jno
icebp
mov
mov
xlat
stos
inc
push
inc
inc
fnstenv
push
jmp
aad
adc
js
jno
inc
mov
movsl
in
xchg
or
pop
icebp
dec
mov
jge
fadd
pop
adc
inc
ja
cmp
in
and
je
arpl
and
hlt
inc
fisubrl
push
fdivl
jge
cs
testb
popa
push
lods
xchg
cli
push
in
sub
scas
inc
xor
loope
add
sarb
mov
sbb
out
insl
arpl
jbe
mov
xlat
rclb
testb
out
or
and
xchg
stos
inc
stos
ret
and
std
xchg
dec
loopne
sbb
mov
call
adc
insl
enter
mov
enter
add
add
cmpsb
sub
sub
lods
adc
sbb
sti
fs
jnp
mov
loop
imul
cmp
pop
pop
repz
xlat
outsb
cmp
sahf
xor
mov
repz
jnp
loope
iret
xchg
inc
fnsave
movsb
test
pop
in
mov
jg
lods
xchg
sub
jge
xor
cs
fbstp
dec
and
jle
addr16
pop
mov
mov
mov
ja
into
inc
cwtl
das
jae
or
ret
cmp
push
movsl
sbb
movsl
cmp
or
lea
pop
mov
test
ret
pop
mov
cmp
scas
iret
fnsaves
xchg
sub
in
test
in
dec
es
insb
add
mov
data16
cmp
mov
fiaddl
pop
ja
push
daa
lahf
mov
int
ljmp
cwtl
inc
xlat
int
xchg
arpl
dec
in
mov
mov
fiaddl
rol
xor
sbb
xchg
stos
mov
fldt
inc
or
cs
pop
jmp
push
and
mov
or
lcall
ss
repz
sub
lea
rclb
cmc
popf
adcb
out
sbb
lahf
ss
test
icebp
mov
adc
inc
fcomi
or
mov
xor
jge
leave
scas
adc
jnp
dec
jecxz
daa
or
pop
mov
xor
jp
lods
pop
mov
add
pop
sbb
dec
test
mov
bound
andb
sahf
jle
jge
cmp
push
mov
mov
sbb
fdivs
cmp
popa
dec
daa
mov
out
push
call
inc
dec
xor
jle
movsb
cmp
shlb
pop
adc
and
adc
into
mov
push
call
or
mov
mov
xchg
je
cmc
sub
inc
mov
push
adcb
cltd
mov
int
mov
inc
mov
mov
sbb
lcall
xchg
inc
addr16
ljmp
adc
pop
push
test
ret
cmp
adc
jge
jo
push
dec
clc
xchg
jo
dec
mov
xor
addl
xchg
cmp
adc
cwtl
xchg
xor
cmp
dec
cmp
and
jecxz
rorb
mov
in
jge
repnz
mov
jns
dec
enter
pop
cmp
imul
cs
dec
pop
adc
shrb
jp
and
mov
dec
lret
sub
mov
nop
xchg
sbb
jae
mov
mov
mov
rorl
sub
int3
mov
insb
test
inc
mov
and
inc
xchg
js
fdivr
inc
call
or
xor
push
jecxz
pop
mov
ficomps
jne
rorb
and
adc
cwtl
jbe
inc
inc
sbb
adc
call
inc
decb
cld
sub
out
sbb
jmp
popf
sbb
jp
popf
push
stos
sub
mov
lcallw
jae
jo
adc
jne
mov
lea
jmp
leave
cwtl
adc
push
adc
jge
stc
jb
shll
pusha
fwait
inc
cmp
pop
pop
lcall
sbb
test
mov
dec
ret
lcall
sti
pushf
mov
cmpsb
xchg
add
test
in
pop
adc
jl
fwait
repnz
sbb
movsl
jge
imul
pop
xor
and
sti
dec
clc
sub
adc
xchg
test
add
xchg
adc
xlat
xchg
fs
mov
fistl
xlat
hlt
sub
scas
les
mov
push
adc
jle
mov
popa
mov
popf
mov
ljmp
sub
sub
add
add
out
jp
int
out
sbb
je
sti
dec
icebp
sub
sbb
dec
adc
test
mov
and
shll
xchg
inc
loopne
fdivl
add
jbe
inc
mov
test
cmp
sbb
jge
inc
xor
sbb
xor
dec
call
and
cmp
pop
rol
outsb
xor
dec
mov
or
mov
jno
insl
movsl
pop
and
lahf
mov
mov
or
lcall
sub
jg
jo
jne
dec
popf
mov
lea
daa
je
ret
sahf
cltd
jne
mov
xchg
mov
adcl
jb
and
test
push
pop
push
or
adc
xchg
mov
pop
push
fisttps
out
addr16
pop
xor
pop
les
push
and
push
lcall
mov
movsl
mov
fisubs
loope
and
daa
test
push
mov
out
ficoms
fimuls
loop
lods
pop
or
mov
lds
jmp
lds
cld
xor
fxam
fisttpll
rorb
scas
ljmp
iret
pop
ret
cmp
push
fisttpll
int3
rorl
ret
inc
ret
loop
sarb
lods
ds
cli
mov
pop
sahf
andl
cmpsl
mov
sub
pop
testb
jbe
push
inc
mov
lods
and
lds
jecxz
fcmovnb
mov
mul
loopne
aam
or
add
pop
iret
cmp
out
and
lds
stos
ret
ror
cmp
in
inc
enter
test
stos
jbe
pop
out
mov
fwait
ss
into
inc
loop
jmp
mov
adcl
sahf
outsl
shrl
aas
es
inc
lret
insl
jo
dec
dec
sub
stos
inc
repnz
inc
lcall
xchg
mov
lahf
xchg
pop
inc
xlat
daa
mov
jnp
arpl
inc
rcll
push
dec
outsb
mov
popa
push
outsl
push
dec
push
xor
insb
cwtl
ss
inc
jle
jl
inc
cmp
mov
scas
notb
stc
pop
pop
lds
inc
fcoms
iret
outsb
fbstp
jne
mov
mov
fs
cmp
popa
cli
jmp
lods
inc
mov
xchg
lods
push
jmp
xchg
sbb
jae
mov
inc
ljmp
pop
loope
jl
negb
mov
cltd
gs
call
cs
lret
dec
dec
insb
aas
loop
pop
mov
mov
imul
push
loop
aad
push
sarl
enterw
xor
push
iret
loopne
fimull
lods
inc
insl
sti
mov
gs
sahf
fs
stos
fwait
xor
sbb
fwait
mov
cld
int3
pop
addb
daa
jno
mov
mov
dec
out
outsb
xchg
rep
rolb
jnp
std
jo
push
nopl
fwait
test
mov
cmp
pop
pop
ljmp
adc
outsl
mov
popf
adc
push
rorl
mov
inc
mov
outsb
test
push
incl
cmc
into
sub
pop
mov
jno
lret
push
aam
addl
xor
cmpsb
sub
leave
nop
cmp
cmc
xchg
sbb
ljmp
sub
fsubrs
addr16
mov
lds
xor
mov
loop
decl
mov
jo
fs
dec
ret
sub
pop
repnz
jne
xor
adc
xor
sub
rcl
daa
in
sub
out
cmpb
cmp
aas
pop
test
roll
out
fs
clc
xor
push
sub
negl
lock
test
fcomps
adc
dec
shr
dec
incb
movsl
cmp
inc
das
ficompl
add
insl
mov
ds
jmp
aad
sahf
xchg
data16
sub
mov
cld
or
les
jo
and
and
mov
xchg
cmpsl
mov
jb
xchg
push
mov
xchg
push
data16
imul
std
xchg
mov
ret
out
adc
mov
stc
negb
xorl
in
mov
push
lds
imull
jmp
adc
fildll
jecxz
test
jb
jb
mov
inc
imul
mov
xchg
ljmp
imul
clc
xor
sarb
jecxz
push
loop
xchg
repz
add
push
xchg
push
push
dec
mov
xchg
imul
sub
mov
out
loope
sbb
jmp
dec
add
mov
in
pop
call
mov
pop
adc
mov
out
and
add
dec
cmc
push
xchg
ja
les
mov
stos
mov
rorl
jns
popf
rcll
fldl
jnp
into
popa
imul
jge
sarb
lahf
push
jmp
outsl
das
loope
repz
sub
mov
mov
sub
xlat
dec
je
inc
mov
inc
pop
jge
mov
dec
mov
pop
or
pushf
mov
add
xchg
mov
push
xchg
insb
mov
jno
dec
sbb
jnp
dec
aam
pop
pop
lcall
add
xor
pop
fmuls
sub
dec
lods
xchg
jbe
xor
xchg
xchg
fidivs
cld
push
faddl
testb
xchg
and
adc
outsl
cwtl
stc
cmp
and
out
push
sahf
int
dec
ficoms
adc
stos
stos
mov
add
pop
adc
and
xchg
mov
imul
jecxz
push
int
mov
in
or
adc
jbe
jbe
stc
inc
push
pop
loopne
push
adc
mov
cld
test
lods
cld
sbb
in
into
inc
mov
and
inc
fsubp
gs
and
popf
inc
jecxz
ss
sbb
call
scas
inc
test
out
jl
mov
cmpsb
popa
sar
stos
pop
lret
aam
xchg
ljmp
mov
scas
scas
pop
repz
mov
or
movsl
push
in
in
sbb
mov
push
mov
mov
pushf
pusha
cli
std
push
shlb
sahf
test
cmpsl
mov
mov
std
fwait
xor
loop
test
dec
pop
into
cmp
jp
adc
mov
ja
jg
out
dec
sahf
jp
pop
mov
inc
adc
adc
push
add
test
adc
das
scas
push
mov
xor
inc
lcall
sbbb
rol
inc
jmp
shrl
cmp
popf
xor
pop
gs
insl
dec
xor
jbe
mov
sbb
xchg
stos
pop
mov
inc
or
mov
loop
scas
arpl
mov
mov
mov
test
sub
fidivrl
popa
stos
mov
incl
and
int3
push
mov
pop
ret
push
testb
cmp
lahf
mov
cwtl
sbb
lret
mov
in
ds
iret
add
inc
fdivl
leave
ds
push
cmp
push
cmc
sbb
rclb
jmp
stc
xor
sub
pop
lahf
in
jle
mov
mov
xor
je
mov
aam
dec
ret
lods
testl
lcall
adc
or
inc
mov
pop
scas
pop
pop
outsb
dec
dec
pop
mov
bound
jmp
das
mov
stos
and
push
test
out
rcrl
in
syscall
mov
cmp
dec
into
in
aad
add
lret
outsl
sub
insb
inc
jmp
or
push
popf
push
jae
push
push
mov
inc
daa
movsw
xchg
popa
xchg
xchg
pop
or
pop
insl
add
int
loopne
xchg
movl
gs
pop
xor
jecxz
arpl
fldenv
fisubs
inc
int3
ffree
mov
xlat
mov
in
pop
fdivs
mov
mov
bound
mov
cld
mov
enter
fs
in
movsb
addr16
hlt
pushf
xor
jno
mov
movsl
cli
dec
add
cltd
inc
xchg
stos
pop
and
push
in
jp
loop
pop
and
loop
pop
add
pop
sub
dec
jge
add
dec
jb
imul
jecxz
pop
lods
jnp
inc
sub
pop
push
lahf
outsl
pop
push
add
jg
or
adcb
daa
jmp
loopne
and
test
jae
popl
sbb
cmc
push
jle
movsl
lods
pop
cmpsb
cli
clc
push
int3
mov
ficoms
lock
out
jnp
repnz
or
stos
adc
das
scas
jmp
in
push
loopne
jnp
cmp
popl
sahf
cmpb
rorb
jbe
decb
rcll
test
cltd
xchg
leave
cmp
out
mov
cld
and
lret
jo
sarl
hlt
mov
scas
push
adc
sbb
cmp
js
arpl
xor
inc
sahf
xor
insl
lcall
pop
gs
mov
pop
xlat
dec
dec
mov
mov
push
sub
sahf
jo
stos
aas
push
xchg
and
sub
cmp
ja
mov
fldenv
cmp
push
or
daa
xor
jb
rcrl
jb
xchg
mov
test
data16
bound
loope
inc
mov
sti
mov
push
sub
icebp
add
mov
test
and
ljmpw
cmpsb
xchg
das
out
and
dec
cmp
test
lret
int3
scas
addr16
xor
push
shlb
in
xlat
mov
cli
cmp
rclb
jns
sub
mov
jmp
bound
and
and
js
fmuls
adc
or
js
out
inc
sub
sbb
or
dec
mov
jb
add
aad
fcoml
iret
inc
cmc
push
arpl
mov
lea
xchg
jbe
mov
cmp
xchg
loope
sbb
movlhps
dec
loopne
pop
fsubr
daa
in
in
imul
jb
call
iret
nop
lea
push
inc
js
pop
pusha
inc
les
jns
ret
cmp
das
loope
data16
inc
in
add
mov
test
popf
push
ficompl
mov
out
jp
lret
test
insl
sub
dec
jb
push
pop
inc
and
sub
in
fiaddl
and
test
mov
fld
fisttpll
out
mov
and
fwait
test
and
pop
mov
jbe
movsl
inc
or
lods
push
push
addr16
inc
fisubrl
mov
clc
outsb
adc
dec
outsb
and
dec
pop
pop
cld
imul
cmp
push
std
mov
or
mov
scas
push
iret
add
out
dec
and
cmp
shll
xlat
ds
sbb
fst
dec
out
add
test
pop
ret
shlb
test
xor
mov
faddl
scas
xchg
outsb
or
lahf
xchg
mov
lods
scas
inc
insb
daa
jle
jno
cwtl
js
xor
mov
cmpsb
lock
rclb
mov
lock
adc
lahf
mov
inc
or
arpl
and
bound
sub
imul
fsubs
xor
loop
bnd
push
push
frstor
mov
mov
sbb
cs
push
cmp
sbb
sub
sahf
jge
je
stos
add
cmpb
mov
xor
fisubrl
loopne
xchg
or
adc
dec
loop
mov
inc
sbb
sub
push
orl
cmp
aas
icebp
push
xchg
push
or
push
inc
dec
in
jno
adc
or
mov
xor
lret
lock
fiadds
adc
push
mov
mov
pop
je
dec
test
jmp
mov
movsb
ficoms
lods
unpckhps
mov
fs
mov
or
mov
rcrb
jmp
add
popf
leave
pop
jmp
mov
xchg
sub
inc
lods
pop
imul
mov
fists
das
in
imul
inc
and
cmpl
jns
push
mov
dec
add
pusha
mov
out
xchg
xlat
pop
aam
pushf
mov
sbb
enter
pop
into
push
fcom
push
jne
or
pop
into
mov
out
es
insb
rcrb
inc
fsubrl
jae
ja
jnp
fsubs
mov
into
and
out
push
ss
movsl
test
lret
sbb
mov
and
xor
or
int
lcall
subl
jp
int3
lret
stos
xchg
into
inc
sbbb
lods
inc
sbb
cmp
loope
je
adc
jnp
mov
nop
xor
sub
insl
repnz
int
adc
in
push
rorl
pusha
std
inc
das
lds
lcall
out
data16
fidivs
inc
stos
stos
iret
inc
faddl
int
or
cwtl
push
lods
add
or
orb
add
cwtl
loop
cli
call
cmc
xor
mov
in
divl
outsl
enter
and
imul
stc
sub
leave
or
xor
mov
mov
adc
mov
clc
inc
sbb
int
mov
fistl
fwait
enter
mov
xlat
jmp
xor
test
movsb
js
cltd
cmp
outsb
ret
jg
test
lret
lock
xchg
mov
popa
hlt
sbb
cmpsb
mov
inc
mov
xchg
mov
rorl
mov
into
leave
out
shlb
mov
out
aad
into
mov
mov
loope
imul
sar
inc
shlb
mov
sti
stc
clc
fmull
mov
xlat
repz
test
mov
cmpsl
orps
xchg
notb
and
sub
ljmp
andb
jge
fs
sub
inc
dec
in
xchg
rclb
and
inc
xchg
mov
cltd
mov
or
xor
inc
lahf
mov
in
popf
mov
clc
dec
lock
inc
xor
pop
loopne
cmp
push
pop
sahf
xor
roll
fs
dec
ret
mov
jmp
ja
push
scas
rclb
jb
inc
xlat
push
cltd
dec
roll
push
sarl
pop
mov
xchg
incl
pop
lods
push
xchg
push
cmp
and
sti
dec
leave
repnz
mov
es
lahf
xchg
xchg
fnsave
loope
pop
iret
test
test
out
sub
pop
push
jae
dec
push
sti
es
dec
fistpll
lods
pop
sbb
and
cmpsb
lcall
pop
dec
in
pop
xchg
pop
repz
test
dec
rol
jmp
cmpsb
test
rcr
enter
or
int3
fnstenv
lret
sub
fbstp
cltd
int
das
fisttpl
xor
sar
lret
ret
xor
fcom
scas
pop
call
or
sbb
in
add
fwait
aad
int3
shr
enter
sub
ljmp
lret
aam
testl
adc
xor
inc
lcall
sbb
sub
mov
and
stos
jecxz
mov
test
pop
popf
call
xchg
sub
pop
mov
xor
push
sbbb
dec
mov
mov
loope
mov
jg
mov
fdivs
mov
shrb
mov
push
and
outsb
jb
outsb
gs
sub
jle
dec
and
adc
ja
test
test
mov
in
mov
pop
jl
int
inc
dec
push
dec
inc
mov
jb
pop
mov
sub
decl
ljmp
mov
fisttpl
lret
sub
cld
xchg
fisubrl
sarb
pop
adc
scas
inc
mov
fsubr
and
pusha
rcl
cmp
es
rcr
ss
test
inc
or
insb
add
sub
movl
popf
lcall
xchg
jno
mov
dec
rol
not
cmp
lret
lock
add
es
fisttps
jae
or
les
mov
add
mov
fmuls
sbb
sbb
movb
aas
mov
ds
jle
xor
gs
xor
jne
push
dec
sub
mov
adc
sbb
add
adc
and
iret
mov
adc
icebp
out
mov
hlt
xor
jmp
int
push
mov
sbb
cmpsb
imul
and
cmpsb
pusha
xchg
inc
fidivs
adc
mov
push
xor
aad
loopne
mov
cmp
mov
sub
insb
add
sbb
cmp
add
pusha
xor
push
jl
push
jns
mov
pop
and
push
cmp
jmp
jbe
or
loop
jmp
arpl
cmp
les
dec
jo
hlt
xor
ss
dec
lret
jle
shrb
inc
iret
mov
into
push
sbb
push
mov
icebp
mov
pop
add
pushf
cmpsb
dec
shl
adc
cld
stos
cmpsl
or
decl
and
test
ja
rclb
sub
mov
xchg
hlt
inc
int
add
xchg
add
or
or
jp
push
or
fwait
inc
mov
xlat
jp
lods
cmp
add
jecxz
imul
mov
mov
bound
lahf
dec
sub
push
out
pop
fwait
xor
and
and
push
xchg
cmp
cmp
mov
push
mov
sbb
push
jmp
loope
imul
scas
lret
jle
movsl
jg
and
dec
cmp
jmp
xlat
xor
aam
popf
push
scas
dec
scas
or
mov
arpl
mov
cmp
out
push
mov
fscale
lea
test
mov
loop
lds
repz
push
inc
pop
test
andb
enter
sbb
or
sarb
dec
aad
xor
sub
int
fstps
mov
sub
test
mov
mov
out
mov
repz
fsubrp
push
leave
std
scas
inc
fadd
pushl
ret
std
fcoml
mov
inc
pop
in
xchg
mov
mov
mov
sbb
fdiv
xchg
pop
ret
aad
or
int
jmp
inc
hlt
hlt
fsubs
xchg
pop
xchg
scas
popa
jmp
dec
mov
jbe
inc
mov
xor
dec
ret
pop
add
push
ss
in
xor
orl
add
in
mov
inc
les
test
fnstenv
mov
ja
cmp
inc
xor
sbb
push
mov
aam
push
xchg
pop
sar
sub
xor
or
cmpsb
test
call
mov
ljmp
scas
cld
push
shr
jne
loop
lahf
mov
jmp
mov
xor
dec
outsb
loope
mov
loop
outsl
mov
test
sub
pop
pop
mov
or
out
adc
cmp
mov
dec
dec
sbb
push
dec
jb
push
push
call
iret
jbe
into
cmp
daa
in
lea
jae
scas
jae
or
cmpsl
pusha
mov
adcb
js
sahf
jae
jg
sbb
cltd
je
scas
jne
cmp
sbbl
in
aaa
jbe
adc
pop
je
mov
fwait
xor
stos
xchg
sub
sbb
push
dec
mov
xor
outsl
mov
ret
testb
push
adc
mov
lcall
call
int3
or
fs
push
popa
mov
jno
lods
inc
out
mov
bound
in
push
pop
pop
jmp
jae
scas
pop
sahf
fisttps
es
rcpps
xor
int
movsl
stc
adcb
adcb
aad
or
dec
sahf
xor
pop
sahf
mov
inc
lods
icebp
fidivl
iret
int3
arpl
inc
clc
ja
ljmp
jne
lahf
cmpsb
ljmp
stc
cmp
jmp
dec
mov
shrb
loope
and
icebp
xor
inc
data16
popa
mov
jg
mov
push
popf
pop
or
xchg
jg,pt
mov
nop
roll
add
pusha
notl
in
xor
push
je
mov
pushf
xor
mov
scas
inc
adc
inc
fidivrs
xor
movsl
cmp
jl
test
jge
int3
add
sub
dec
or
lds
mov
sbb
insl
imul
test
inc
faddp
fs
sub
test
dec
xor
jnp
mov
call
cmpsl
push
jo
test
addr16
stc
movsl
xchg
sub
sbb
dec
cmc
pop
rep
in
ret
cli
stc
nop
sub
xor
push
dec
pop
mov
aaa
outsl
push
imul
outsb
lds
ds
inc
jo
dec
jecxz
xchg
leave
and
fsubrl
push
call
mov
add
pop
xor
in
mov
pop
je
ret
xchg
loop
int3
aas
nop
daa
jno
rclb
scas
test
aam
and
pusha
sbb
cmpsl
mov
ja
stc
adc
cmp
jo
pop
cmp
es
aad
mov
mov
xor
jns
js
leave
and
ss
sub
iret
push
push
sub
repnz
add
mov
mov
add
es
ljmp
xchg
test
or
icebp
shl
inc
push
sub
jecxz
ja
mov
adc
push
cmp
dec
pop
fsubl
shlb
pop
mov
cmp
adc
sbb
push
xchg
shl
test
pop
es
inc
push
add
adc
add
cld
shl
sti
inc
push
and
xor
jge
shl
xchg
push
data16
cmpl
stc
arpl
sbb
sub
pop
cld
push
jne
mov
xor
mov
das
lock
and
sbb
cs
pop
xor
orl
push
movl
gs
sbb
data16
fwait
adc
fisubrs
push
push
in
rorb
sbb
pop
adc
cs
xchg
mov
jnp
or
fsubr
and
xor
rclb
outsb
int
pop
mov
lds
inc
dec
mov
mov
scas
adc
pushf
fnstenv
insl
jmp
shll
mov
pop
jbe
push
subl
jmp
into
inc
out
mov
inc
mov
or
mov
aaa
clc
xchg
sti
popa
fisubl
les
xchg
pop
inc
sub
inc
push
sub
inc
lea
sbb
xchg
lret
std
lahf
lret
jo
push
pop
dec
or
and
sti
pop
jecxz
or
fdivr
sbb
ror
push
sbb
xchg
leave
jne
sub
and
cld
mov
mov
xlat
call
lea
mov
aam
adc
ret
xor
jno
je
ss
cmp
jae
inc
call
in
insl
sbb
and
jge
mov
mov
push
fbld
dec
xlat
or
in
cmpsb
adc
aam
rolb
push
cmpsl
push
ret
inc
mov
sbb
adc
pop
cld
int3
inc
lret
ss
cli
ljmp
mov
mov
movsl
dec
mulb
ret
popf
dec
inc
jno
dec
mov
insl
rorl
xchg
rcl
pop
hlt
popa
adc
aam
cltd
xor
and
mov
adcb
cmp
lea
pop
pop
repz
in
mov
filds
daa
mov
bound
pop
je
jns
test
adc
jns
mov
jnp
sbbl
or
dec
jle
dec
in
adc
enter
out
add
js
nop
lcall
adcl
and
xor
fwait
outsl
push
or
xchg
loope
add
jae
inc
and
xchg
push
bound
mov
mov
sbb
stos
sub
shlb
xchg
rorb
sbb
pop
repz
movsb
mov
movsl
scas
sub
fsubl
dec
pop
sti
je
jl
test
mov
push
shll
negb
mov
lahf
bound
es
clc
mov
scas
ret
push
movsb
xor
enter
and
int
sbb
xchg
add
repnz
or
mov
scas
rcrb
fiadds
xchg
jo
out
shrl
loop
mov
hlt
mov
das
data16
loope
push
int
stc
pop
aaa
sbb
sub
lock
lahf
je
cmpsb
sub
sub
out
je
ja
fbstp
lahf
inc
jg
sub
cld
idivl
movsb
pop
push
out
je
add
pusha
rcrl
ret
push
and
mov
mov
sti
idivb
movsb
orl
scas
rorl
xchg
lods
mov
mov
dec
test
add
fstpt
inc
das
fdivrl
or
pop
mov
lods
mov
es
lea
and
xchg
aaa
xchg
push
sarb
dec
sbb
repz
xor
jns
cmp
les
pop
scas
xor
mov
adc
and
aaa
jne
ret
push
and
stos
sub
cmp
fisttps
mov
or
jne
dec
mov
sti
add
push
scas
xor
aaa
cmpsb
daa
gs
push
testl
jb
fcmovnbe
mov
lock
fildl
mov
lock
jg
int3
or
icebp
pop
fstpl
push
or
sub
push
popa
mov
dec
in
jg
jae
aaa
imul
adc
in
pop
xchg
mov
testl
in
jmp
je
in
insl
icebp
jle
int
jns
in
loopne
mov
in
clc
sub
adc
in
rcll
pop
pop
lods
xchg
mov
pusha
jb
mov
xchg
push
scas
in
pop
mov
dec
test
push
cwtl
lcall
mov
pop
addl
mov
cmpb
movsl
nop
inc
mov
mov
push
cmp
lret
sbb
mov
cmpsb
mov
dec
mov
pop
stos
xchg
imul
mov
rorl
mov
mov
pop
xchg
inc
cmpsb
xor
and
insb
out
testl
rol
mov
lea
movsb
mov
dec
scas
cld
pop
xchg
xchg
insl
in
jg
adc
push
gs
inc
lret
nop
mov
mov
adc
lahf
dec
outsb
add
push
xchg
cmc
cli
nop
pop
shrb
xor
xchg
mov
movsl
mov
sub
cwtl
arpl
jne
jg
scas
push
cmp
mov
pop
ljmp
inc
push
and
mov
inc
mov
mov
adc
push
jecxz
pop
mov
mov
scas
sub
rcrl
rorl
popa
addl
adc
into
and
scas
pop
and
pop
lahf
xorl
loope
or
pop
add
test
mov
test
fcompl
xorb
inc
mov
incl
and
cmp
lods
pusha
xchg
add
or
jo
push
push
push
enter
int
jbe
adc
rolb
leave
nop
test
rorb
jo
nop
push
lea
rorb
pusha
aam
xchg
inc
inc
or
pop
adc
sub
scas
cmpsb
sub
int
add
adc
cmp
mov
mov
mov
mov
inc
ret
dec
xchg
cwtl
aas
stos
mov
push
cli
loope
lahf
inc
bnd
cmovno
jo
pop
jbe
inc
mov
adc
insb
ds
adc
jle
cmp
mov
test
fucomip
jbe
cmp
pop
sub
adc
int3
push
shll
and
shrb
jo
subb
cmp
mov
mov
call
cmpsl
pop
and
pop
push
mov
outsb
push
jge
cltd
rorb
pop
flds
add
xchg
xor
sti
push
es
cmp
push
cwtl
lea
orl
dec
rsqrtps
les
lods
and
loope
loopne
mov
mov
cmp
dec
add
inc
or
fisubl
in
mov
test
adc
inc
cld
mov
pop
add
xchg
outsb
cmp
pop
clc
fs
dec
pop
mov
add
push
xchg
push
mov
int
push
ret
subb
pop
mov
enter
mov
loop
insb
sbb
cmp
roll
mov
mov
xlat
ljmp
adc
pop
push
rcrb
rcrb
ret
mov
lods
cs
dec
xchg
aaa
repnz
mov
mov
jmp
rorb
loopne
inc
outsb
add
cs
dec
mov
lcall
inc
adc
insb
xchg
inc
push
out
xchg
mov
mov
movsl
repz
cwtl
aaa
daa
jne
or
inc
or
mov
cmpsb
movsb
xor
loopne
gs
push
fwait
sbb
ret
mov
or
cmpsl
sub
andb
imul
pop
jle
sbb
rolb
into
daa
sarl
push
aaa
mov
and
cmp
fwait
dec
int
pop
sub
ljmp
les
mov
in
inc
push
mov
scas
icebp
pop
adc
cmp
dec
mov
cli
ret
jl
and
es
daa
mov
pushf
mov
out
nop
xor
cmp
and
lcall
adc
jbe
jp
popa
outsb
pop
stc
aas
jnp
movl
mov
xchg
push
arpl
or
adc
lea
push
xor
das
sub
dec
call
pop
imull
mov
loop
and
pop
aas
sbb
enter
jmp
cmc
jg
andb
pop
xchg
or
into
fsubrl
dec
adc
inc
or
and
shl
jbe
push
adcl
dec
fidivrl
mov
rcr
or
mov
mov
or
jne
daa
pop
inc
fidivrl
xchg
xchg
jle
jne
mov
fdiv
shl
outsb
in
jecxz
or
std
mov
adc
mov
pop
xor
jno
leave
adc
cmp
sbb
dec
clc
pop
adc
push
jnp
jle
add
lret
push
jmp
fsub
xor
outsb
cmp
das
flds
push
inc
vmread
mov
mov
xor
ror
nop
pop
jge
sbb
cmpsl
sub
mov
xor
cli
xor
stos
sub
lds
jno
je
adc
je
or
outsl
or
and
fidivs
int3
mov
cmp
lret
ds
pop
sub
jno
hlt
pop
mov
test
enter
dec
xchg
xchg
cli
pop
sub
xor
add
cmc
popa
push
dec
je
jle
insb
add
push
mov
outsl
add
bound
or
push
add
aad
into
lods
xor
fdivl
add
out
mov
testl
pop
mov
scas
cwtl
inc
adc
flds
xor
jb
femms
lods
sub
test
orl
pop
clc
push
ret
xchg
cs
sbb
adc
xchg
inc
xacquire
scas
pop
jns
mov
pop
add
lea
loopne
repnz
or
pop
lret
sub
push
shl
popa
in
loope
pop
shll
into
popf
xor
mov
jb
push
add
or
push
mov
leave
cmpsb
fistpll
sbb
xchg
add
fs
xlat
xorb
and
sub
mov
into
adcb
aam
icebp
addr16
pop
lret
mov
pop
pusha
hlt
ficompl
call
jmp
inc
fcompl
inc
frstor
mov
add
xor
dec
adc
test
pushf
inc
cmp
icebp
push
pop
sub
mov
sub
pop
add
mov
daa
cmc
daa
xor
in
pop
icebp
pop
and
push
leave
mov
movsl
sub
mov
push
add
lock
push
push
lea
andl
into
jl
hlt
faddl
push
int3
aaa
push
pop
adc
insl
in
fildl
lock
roll
mov
cltd
cmp
stos
stc
pop
sub
mov
ret
ss
hlt
push
and
mov
sub
movsb
xor
aaa
xchg
imul
aad
adc
xor
sub
hlt
pop
jo
fldl
mov
mov
inc
adc
mov
inc
rcr
inc
adc
adc
movsb
pop
push
jge
mov
mov
push
ljmp
int
and
aaa
pusha
call
jbe
sti
pop
mov
jns
fnsave
insb
pusha
das
mov
xorb
push
add
pop
push
arpl
andl
ss
pop
push
fcmove
nop
mov
in
jo
movsb
lea
addr16
test
rolb
sbb
into
aaa
add
ret
mov
sarb
roll
movsl
or
xor
rcrb
xor
jmp
xchg
cmc
xor
xlat
movsb
xor
adcb
ret
mov
sub
inc
xchg
mov
fidivl
shr
mov
mov
or
push
mull
aaa
nop
inc
jno
add
out
outsb
adc
jae
xor
and
dec
loopne
inc
or
aaa
sbb
xor
bound
add
sub
cmp
test
shrb
idivl
lahf
int3
pushf
push
sbb
rolb
mov
shll
cmp
insb
leave
pusha
lahf
xor
shlb
or
cmp
lock
adc
lods
xor
sarb
in
jp
lcall
outsl
mov
xchg
pop
cwtl
in
imul
inc
into
lods
cs
mov
loope
movsl
lea
jecxz
mov
jb
fdivrl
push
nop
sbb
push
or
test
fxtract
popa
push
movb
sar
cmp
jecxz
pop
insl
cmp
pop
inc
jle
pushf
inc
xchg
xchg
cmp
mov
pop
xchg
test
inc
adc
dec
das
and
gs
jnp
loope
xchg
and
sahf
xor
xchg
jno
cmp
cmp
adc
cmp
insl
repz
or
sub
or
outsl
pop
mov
xchg
jo
insl
cmc
mov
sbb
adc
mov
push
xchg
pop
pushf
aas
xor
cmp
cmp
ss
sahf
aas
repz
pop
test
enter
pop
std
fwait
cs
add
mov
bnd
rcrb
jmp
jbe
inc
clc
pop
mov
mov
xor
lahf
mov
enter
lock
outsl
adc
jno
stc
pop
xor
fiadds
dec
jl
cmp
push
fwait
ret
xchg
adcl
xchg
jl
xor
lcall
adc
cmp
push
cli
jp
mov
inc
imul
lea
jb
inc
jns
sbb
mov
out
jb
sbb
inc
scas
mov
xor
dec
sysenter
jbe
pop
mov
lods
mov
push
lret
cld
pusha
sub
mov
insb
cli
negb
fisttpl
xchg
ss
inc
pop
or
inc
xchg
enter
jo
sbb
loopne
push
icebp
pop
fstpl
cld
pop
lock
xor
lret
mov
or
push
xchg
int
jbe
inc
adc
mov
hlt
pop
mov
cmpsb
dec
pop
iret
mov
mov
bound
fs
in
dec
push
add
hlt
lcall
test
mov
dec
in
xlat
sub
jmp
adc
or
xchg
push
pop
xchg
ds
out
jo
pop
mov
out
ret
mov
in
dec
sahf
adc
mov
in
insb
icebp
lods
insl
in
lret
jb
adc
xchg
add
sarb
stos
sub
scas
movsb
xor
pop
xchg
pop
scas
inc
mov
insl
test
mov
lret
movd
cmp
cmc
in
ss
dec
pop
mov
cmpsl
or
iret
xchg
rolb
sbb
icebp
inc
adc
lods
inc
adc
cli
pop
mov
fsubrs
pusha
sbb
dec
dec
xor
arpl
and
je
cmp
xchg
cmp
mov
cld
fs
ja
sbb
and
cltd
xchg
xor
or
cwtl
icebp
inc
dec
or
lret
repnz
jmp
imul
dec
push
aam
pop
int
cwtl
int
push
mov
mov
sbb
inc
nop
push
shlb
popf
aas
xchg
mov
insl
push
adc
mov
stos
xchg
adc
jp
fnstcw
insl
cltd
aas
pop
dec
mov
adc
fwait
pop
adcb
mov
cli
mov
scas
adc
cmpsb
ss
stos
out
jno
add
xchg
mov
rcr
jp
lcall
xchg
popf
mov
cmp
push
test
jbe
in
cli
cld
mov
bound
loop
push
adc
int
mov
xchg
jl
mov
dec
outsb
jg
mov
scas
outsb
hlt
lea
lea
jno
jmp
incl
mov
lods
add
pop
jo
xor
push
cmp
aad
jno
push
add
flds
lock
out
add
in
insb
out
push
xchg
cmp
jg
xor
xchg
xchg
add
fcomps
dec
mov
lret
mov
gs
cmpsl
push
clc
out
jo
push
hlt
jne
pop
orb
push
js
xchg
adc
xchg
add
int3
nop
sub
leave
xchg
in
dec
andps
push
clc
int3
xor
and
push
ret
mov
in
enter
cli
and
and
xchg
xor
cs
push
daa
scas
xor
cmpl
fisubl
popf
inc
inc
or
sti
or
test
shl
out
inc
hlt
and
cmp
sbb
inc
sarl
notb
in
dec
test
pusha
in
and
pop
add
sub
cli
aad
mov
add
mov
sti
pop
jmp
dec
loop
jl
orl
clc
pop
push
stc
in
dec
pop
sbb
std
and
and
xchg
mov
jp
xchg
movsb
sub
call
sti
xchg
in
pop
dec
sarl
into
popf
into
xchg
adc
inc
xchg
cmp
sti
fs
testb
push
ja
fwait
pop
rorb
lock
inc
jne
cltd
inc
lods
bound
aad
mov
nop
cmp
insl
lret
xor
sbb
inc
or
test
and
pop
roll
mov
push
dec
rorl
jle
push
adc
fiadds
adc
cmp
roll
dec
lock
inc
outsb
xchg
mov
mov
mov
inc
adc
fs
sahf
dec
lcall
enter
movsl
adc
ret
fstl
rclb
sbb
pop
mov
lret
popa
icebp
push
adc
mov
and
pop
sti
cmpsb
cmp
js
mov
cmp
mov
pop
stos
cmpsb
xor
nop
stos
bound
scas
mov
int
mov
pshufw
mov
dec
or
xchg
xchg
sub
sti
jp
js
clc
pusha
subl
fstps
into
push
divl
add
mov
jo
push
mov
les
cs
jmp
dec
or
mov
cmpsl
mov
cmp
cmpsl
xor
and
in
pop
ds
push
repz
dec
roll
push
xlat
mov
fiaddl
ss
sbb
lock
dec
adc
loop
add
fldl
testl
sbb
in
les
shl
jo
lds
ret
lock
sahf
cmp
out
ds
sbb
add
inc
fisttpll
repnz
dec
fwait
sarb
popf
popf
inc
xorb
loopne
rcrb
shrl
cmp
lahf
cmp
les
mov
cmpsl
jae
paddsw
adcb
daa
mov
mov
xlat
fwait
test
aad
enter
or
pusha
mov
subl
scas
sub
xor
shrl
mov
jl
fs
jle
adc
mov
je
imul
fwait
cmpsb
push
pop
lcall
adc
test
dec
adc
iret
and
mov
orb
lahf
inc
xor
ficompl
mov
dec
sarb
fdivrs
sbb
test
mov
push
mov
sub
cmp
fsubrs
sub
rorb
mov
pop
inc
aaa
mov
xchg
cmc
pop
cmpsl
push
add
shl
sahf
dec
cwtl
cmp
lds
scas
out
sub
jnp
repz
stc
in
xor
push
cld
pop
xor
xchg
push
push
lods
xchg
and
imul
sahf
inc
and
stos
inc
jmp
imul
pop
ret
mov
xchg
adc
mov
xchg
add
insl
push
out
jbe
jle
jle
push
sti
push
insb
fs
es
shrb
xor
sarb
adc
inc
or
push
popf
aas
icebp
dec
jo
loop
push
negl
mulb
imul
jecxz
mov
enter
and
cltd
aaa
js
rorl
loop
inc
mov
mov
add
inc
lret
insb
popf
xchg
jb
sbb
pusha
lock
jbe
out
jge
and
fwait
xor
pop
fiadds
negb
xor
mov
ljmp
sbb
ffree
lea
fcoms
sub
jp
testl
aam
xchg
xor
into
xchg
imul
add
mov
mov
lock
xor
subl
mov
mov
cmp
mov
xchg
ret
xchg
fwait
jge
test
fdivrl
es
pop
jle
xor
stos
daa
mov
cmp
js
inc
jl
fsubs
fmull
push
mov
xchg
lods
pop
cli
lret
xchg
out
mov
mov
dec
pop
insl
rcrl
push
push
lods
sub
or
mov
daa
js
mov
mov
addr16
fdivrp
inc
pop
cltd
push
in
jo
lret
inc
pop
sbb
ljmp
frstor
mov
ss
adc
jno
mov
popf
push
fidivs
mov
sub
in
test
xor
pop
test
and
rorl
pushf
cmp
pop
icebp
or
and
test
or
and
ja
xchg
es
sub
push
cld
gs
pop
mov
mov
fstps
sbb
dec
lea
arpl
xchg
cmp
mov
xchg
cmp
outsb
out
fildll
ds
or
mov
mov
xchg
aaa
adc
inc
callw
mov
scas
mov
push
add
pusha
aas
fwait
ret
or
sbb
insb
cmp
jne
mov
cmpsb
sbb
out
dec
push
dec
adc
ret
sbb
negb
dec
dec
adc
ret
ret
pop
add
sbb
test
popf
sbb
dec
mov
sahf
inc
jmp
scas
ss
pop
add
es
and
cld
fildl
test
jbe
sahf
rcl
jl
lret
icebp
pop
loop
cmpsl
sub
lret
imul
mov
mov
lods
cmpsb
xor
lahf
mov
mov
ret
and
je
cmp
cld
xchg
dec
xchg
xor
dec
jne
ficomps
sub
cmpsl
clc
bound
aaa
mov
sub
jg
mov
mov
stos
bound
sar
push
jns
jmp
icebp
popa
lahf
cmp
adc
jp
sbb
jae
aad
gs
or
push
das
stos
arpl
pop
cld
in
andb
repnz
daa
std
add
out
loope
ret
xor
lea
das
sbb
push
leave
inc
fdivr
jno
mov
sti
jle
xor
jmp
leave
int
mov
xchg
aaa
pmullw
jb
pop
imul
push
push
jno
add
movsl
mov
xor
mov
mov
stos
sub
repnz
les
movsl
push
stos
inc
in
test
data16
enter
dec
adc
repnz
cmpl
ljmp
add
int
xlat
jnp
and
test
leave
push
out
inc
jl
clc
sti
or
cltd
out
negb
int
jle
mov
call
imul
dec
push
and
mov
pop
jmp
hlt
pop
cld
inc
stos
mov
jmp
sbb
mov
and
inc
adc
enter
int3
mov
es
lea
mov
aam
mov
mov
xor
sub
lds
lahf
repnz
gs
roll
xchg
add
call
clc
js
in
dec
or
cld
push
sarb
inc
adc
sbb
jno
lcall
loopne
outsb
js
pushf
mov
cmpsl
icebp
mov
push
cmp
test
xchg
cmp
xlat
push
cld
jb
int
mov
lods
scas
xor
add
mov
pop
jp
addr16
jne
in
jne
push
in
add
sub
cltd
add
jae
mov
fiadds
aad
xchg
aaa
xchg
add
jb
lds
dec
pop
xchg
inc
pop
xlat
push
add
and
mov
push
cmp
adcb
jge
testb
jp
pusha
imull
mov
jb
into
or
jnp
sbb
inc
push
insb
push
and
iret
mov
arpl
fistl
or
xor
pop
into
dec
adc
push
jo
lods
xchg
inc
sub
jge
cs
or
pop
sub
mov
aas
xchg
aam
cmc
and
xchg
inc
outsb
cli
and
fmul
add
push
add
test
jge
push
ja
mul
negb
jbe
ds
push
cmp
pop
lcall
lahf
mov
mov
cmpsb
sub
cmp
orl
pusha
out
and
cltd
std
jmp
cmp
sarb
jbe
sbb
std
jg
les
mov
fwait
cmp
mov
aam
les
testl
imul
add
imul
push
inc
pop
in
addl
imul
andb
jbe
test
test
pop
add
jbe
sbb
data16
jnp
insl
lock
pop
add
dec
cvtdq2ps
mov
sarl
dec
adc
mov
scas
add
dec
jp
inc
pop
pshufw
std
inc
xor
jl
xchg
push
and
pop
sbb
int3
lods
sarl
sbb
int
ret
cmp
leave
or
test
rorb
jle
or
adc
sub
mov
ret
dec
cmc
pop
jl
fs
bound
leave
in
push
push
sti
and
sub
mov
inc
or
and
push
imul
arpl
je
pop
test
test
mov
repz
mov
push
jns
int
sub
loope
loop
sub
daa
and
mov
cmc
and
test
xlat
jl
jb
mov
push
stos
xor
pop
mov
sbb
sahf
fwait
mov
pusha
cmp
rol
inc
or
mov
push
lea
and
dec
xor
xor
sahf
and
call
jg
pop
cmc
sub
jl
int3
xchg
inc
jecxz
stc
pop
jb
jae
pop
jno
stos
and
cmp
pop
nop
adc
mov
rolb
cwtl
add
lods
inc
sub
and
clc
and
iret
xchg
bound
shll
jae
int3
pop
mov
and
and
xor
adc
push
cli
and
mov
jecxz
imul
mov
xchg
mov
mov
sub
rcll
push
jp
loopne
aad
in
jb
add
faddl
cli
pop
cwtl
sahf
push
add
pop
mov
int
lahf
cmp
sbb
jg
push
jb
xor
leave
sub
mov
test
pop
or
push
push
call
xchg
ficoms
test
add
mov
add
xchg
xchg
jne
out
call
cmp
imul
lods
jae
movsb
sub
arpl
mov
jecxz
cmp
mov
sbb
push
xchg
mov
fmuls
xor
xchg
roll
pop
pop
adc
rorb
cld
lcall
mov
xchg
movsb
mov
int3
scas
movsl
stos
sub
sub
movsb
test
out
insl
inc
fstp
jle
sahf
mov
addr16
sbb
mov
and
inc
iret
cmp
sbb
adc
cli
inc
pop
std
push
out
cmc
mov
mov
aam
cmpb
shlb
ret
popa
cmc
and
dec
loop
inc
sub
add
loopne
fbstp
in
jg
sbb
inc
leave
sarb
jmp
cltd
pop
rorb
add
ret
mov
fnstenv
sahf
cwtl
pop
add
scas
int
xchg
dec
mov
sarb
mov
push
rorb
or
out
and
popa
lahf
ret
into
lret
fcomps
pop
add
psadbw
adc
fwait
jb
and
in
filds
shl
cmc
mov
mov
fnstcw
shll
mov
cwtl
sarl
inc
orb
and
hlt
pop
daa
mov
lock
repz
mov
movsb
outsb
std
xchg
mov
rcrl
mov
adc
mov
jnp
inc
dec
popf
pop
jmp
pop
add
mov
call
ss
xchg
mov
mov
loopne
fldl
push
xor
clc
inc
cli
pop
mov
movsb
fstpt
in
lret
mov
or
xchg
lea
lock
fcoms
ret
pop
mov
xabort
xchg
sub
add
jmp
repnz
add
pop
push
fisubrl
fnsave
jae
mov
fdivrs
or
hlt
mov
push
add
mov
push
ret
loop
jb
in
jl
inc
add
shl
pushl
adc
mov
mov
and
pusha
jmp
adc
dec
adc
pop
inc
lods
call
mov
gs
and
mov
cmp
xchg
rcrl
push
stos
push
xor
xchg
push
iret
xchg
in
les
jne
je
or
fadds
mov
lods
dec
push
mov
mov
outsb
repnz
lock
sti
and
dec
push
sub
push
ljmp
pop
xchg
dec
mov
out
imul
test
mov
mov
aam
adc
dec
or
add
fidivrs
pop
mov
lock
inc
and
push
push
xor
leave
pop
xchg
pusha
nop
fidivrl
jae
xchg
xlat
fdivs
lcall
jb
pand
xchg
cmp
mov
mov
jae
inc
enter
pushf
lahf
cmp
je
sti
call
divb
inc
push
and
enter
popa
mov
pop
mov
ss
mov
sub
mov
mov
loop
lret
repz
cld
xchg
xor
flds
xchg
flds
mov
pop
add
fnstsw
mov
andb
mov
cmp
adc
in
stos
xor
hlt
test
imul
cld
das
scas
pushf
inc
pop
clc
dec
xor
and
pop
mov
dec
push
sub
pop
jg
loopne
pop
or
int3
sub
test
cmp
loopne
inc
adc
push
test
pop
mul
jne
inc
mov
les
push
mov
cmp
mov
xchg
jg
or
das
fs
mov
cwtl
cmp
stos
pop
mov
fdiv
push
mov
pop
jg
or
mov
mov
pop
sti
add
rolb
rcll
xchg
push
mov
jo
dec
je
adcb
loopne
scas
int3
mov
xor
lret
jno
insl
jmp
and
sbb
mov
rolb
pop
shlb
or
adc
cmpsl
in
push
lock
pop
stc
js
repz
push
aas
xor
pop
hlt
mov
mov
ss
fmull
sub
cld
rorl
cltd
add
mov
fnstcw
mov
inc
or
xchg
bound
xchg
inc
or
rclb
and
jns
movsl
add
pop
or
dec
dec
mov
imul
inc
ds
pop
add
inc
push
addb
sahf
inc
scas
sbb
inc
rclb
mov
lahf
sbbb
dec
jmp
cmp
scas
jmp
xchg
ds
xor
in
dec
mov
jle
inc
sbb
xor
mov
mov
or
in
subb
repz
jnp
jae
jp
pop
xchg
mov
mov
jb
add
jnp
mov
push
mov
lahf
imul
hlt
dec
arpl
jl
lea
xchg
cmp
push
dec
adc
mov
inc
push
sbb
arpl
rorb
lods
adc
add
or
sub
adc
xor
scas
fiaddl
arpl
data16
xor
xchg
cmp
xorl
xchg
inc
xor
sub
and
flds
xchg
mov
stos
sub
mov
popa
cmc
mov
test
rorb
or
in
xchg
mov
hlt
test
push
pushf
iret
in
je
into
add
inc
out
aam
add
jnp
sahf
pop
test
lret
xor
int3
ss
insb
imul
pop
pop
test
sbb
xor
and
push
lret
cld
jae
sbb
out
enter
jp
push
pushf
sbb
aad
dec
adc
stc
pop
mov
in
imul
popa
lock
insb
jmp
push
popa
or
leave
mov
push
pop
cld
int3
xor
andl
mov
push
cmp
pusha
clc
dec
pop
nop
loop
outsb
std
lret
das
out
xchg
shlb
pop
cli
hlt
or
shr
out
in
mov
movsl
pusha
repnz
insl
add
mov
ret
xchg
subb
mov
or
xchg
push
out
push
mov
icebp
pop
adcl
es
daa
push
shlb
lcall
mov
jae
or
ret
fidivs
mov
fsts
sub
mov
daa
xchg
mov
inc
xlat
loopne
sbb
or
xchg
inc
inc
xchg
cmp
xchg
aas
mov
push
cmp
jp
mov
out
sbb
scas
xor
push
jbe
repnz
iret
xchg
je
sbb
push
negb
pop
mov
pop
sbb
lret
cli
nop
scas
xor
ljmp
mov
dec
adc
mov
outsb
add
daa
mov
push
mov
xchg
int3
fmul
pop
push
out
push
mov
xor
jge
inc
cmp
jno
add
mov
pop
icebp
ret
aad
mov
pop
sub
pop
cmp
cmc
stos
mov
imul
xor
xchg
mov
movsl
mov
xlat
outsb
clc
sub
pop
sbb
lea
loope
insl
adc
sahf
jp
ljmp
int3
xchg
inc
pop
movsl
cmp
arpl
xchg
jb
pop
movsb
mov
and
testl
add
mov
mov
scas
call
shr
add
sahf
xor
pop
repnz
push
and
adc
mov
cs
popa
clc
sub
mov
cmp
push
jl
aam
mov
repnz
lock
test
inc
fnstenv
push
das
movb
in
jmp
imul
cmp
lret
mov
jge
push
call
shl
outsl
push
adc
lds
lea
inc
jecxz
ja
stos
inc
mov
fcmove
pusha
or
pop
mov
cs
pusha
cmp
add
repnz
mov
adc
inc
fcoms
xchg
addr16
imulb
lret
cld
fcmovnbe
push
push
pushf
xor
icebp
mov
mov
cmpsb
mov
fsubrs
shrl
mov
dec
loop
imul
test
lret
cld
rsqrtps
inc
sbb
jo
xchg
jo
pop
mov
ret
loop
cmc
pop
lods
inc
cmp
add
mov
mov
lods
jmp
aam
add
lahf
xor
repz
pop
jp
nop
movsb
inc
fcmovnbe
mov
das
jecxz
stc
daa
add
adcb
pop
aad
mov
repz
out
mov
test
inc
fidivl
push
das
movb
dec
in
call
imul
cmp
insb
dec
mov
jnp
push
jmp
into
fbstp
adc
lds
mov
jne
lods
inc
mov
fxch
popa
or
pop
mov
sub
cmp
popf
mov
pop
repnz
loopne
adc
and
xchg
cs
imull
leave
jle
sti
push
sbb
icebp
mov
mov
cmpsb
mov
fnstenv
shrl
loop
push
lods
fwait
jne
add
enter
push
push
ljmp
jno
xchg
outsb
les
mov
es
loop
repz
scas
inc
cmp
cwtl
inc
pop
int3
arpl
lods
ljmp
decl
lahf
xor
pop
repz
es
mov
cwtl
das
loop
stc
es
dec
ss
adcb
push
aad
mov
repz
in
mov
test
inc
fidivl
push
das
movb
dec
in
out
lods
sbb
imul
cmp
imul
jp
push
jmp
int
jo
adc
lds
mov
je
lods
inc
mov
add
or
pop
mov
sub
jg
cmp
popf
mov
pop
repnz
fistpll
adc
fsts
xchg
cs
mull
enter
fcom
push
sbb
xor
sub
mov
mov
cmpsb
scas
ret
hlt
shrb
loop
imul
add
movl
cmp
xchg
insl
les
mov
es
loop
repnz
add
mov
mov
stos
ljmp
decb
lahf
das
or
push
es
mov
cwtl
das
loope
stc
and
inc
adcb
push
aad
mov
repz
in
mov
test
inc
fidivl
dec
das
movb
dec
in
out
lods
pop
hlt
imul
cmp
push
mov
jns
push
jmp
int3
fnsave
pmaxsw
pop
and
mov
jae
lods
inc
mov
add
or
pop
mov
sub
jg
cmp
popf
scas
mov
mov
fidivrs
adc
inc
fsts
arpl
mull
jle
stc
xlat
shrl
sbb
mov
push
mov
rcr
repz
sub
popl
dec
loop
push
imul
jmp
xchg
clc
or
ljmp
jno
nop
insb
les
mov
es
loop
icebp
add
inc
adc
cwtl
inc
push
int3
arpl
stos
ljmp
std
or
cmp
mov
lea
cwtl
das
loopne
stc
and
mov
xor
adcb
push
aad
xchg
repz
jmp
push
sbb
aas
fidivl
dec
das
jg
clc
pop
mov
push
lods
push
repz
cmp
imul
jmp
lret
fdivl
push
in
lds
mov
jb
lods
inc
mov
add
or
pop
mov
sub
jg
cmp
popf
scas
mov
mov
fnstsw
mov
fsts
xchg
bound
movsl
xorl
clc
shrl
sbb
mov
mov
cmpsb
lods
rcr
repnz
sub
popl
dec
jecxz
pushw
lods
xchg
jb
add
mov
testl
cmpsl
ds
pop
jno
mov
pop
popf
scas
es
jecxz
lock
cltd
inc
push
int3
arpl
test
sbb
sti
or
cmp
mov
mov
cltd
xor
icebp
stc
and
mov
pop
jne
insl
xchg
hlt
mov
jmp
adc
outsl
dec
xor
jle
clc
pop
lahf
dec
in
jecxz
lods
adc
insb
add
xor
addr16
mov
ja
push
jmp
lret
pop
or
pop
push
mov
jno
lods
inc
mov
add
push
in
mov
sub
jg
aaa
ds
jnp
popf
lods
mov
int
mov
or
cs
das
pusha
jb
clc
mov
les
not
aam
push
sbb
mov
mov
cmpsl
stos
mov
cs
nop
inc
push
dec
in
fs
scas
xchg
jo
add
ret
mov
cmc
or
push
test
dec
pop
jb
mov
pop
fwait
lods
nop
daa
fistpll
inc
xor
add
test
mov
fdivs
or
aaa
dec
daa
mov
mov
lcall
mov
sbb
insl
test
hlt
mov
call
adc
outsb
dec
xor
jl
stc
nop
rcrl
scas
adc
insb
add
xor
mov
jne
push
ljmp
jno
or
pop
sbb
es
cmp
lods
inc
mov
add
add
daa
jmp
aad
jp
sahf
stos
xchg
int3
and
adc
pop
inc
fistl
cwtl
das
pop
jno
stc
mov
ret
adcb
rcl
imul
ss
and
mov
cmpsl
test
lret
sti
adc
xchg
inc
sbb
in
arpl
scas
xchg
outsb
imul
mov
int
rorl
cmp
aas
inc
pop
jae
mov
pop
cltd
lods
xchg
sub
mov
scas
inc
xor
add
test
mov
xlat
mov
jecxz
or
ss
daa
mov
mov
xor
out
arpl
pop
mov
sbb
insl
adcl
out
push
sbb
adc
insl
dec
xor
jnp
stc
nop
rcrb
adc
insb
add
xor
int3
gs
mov
je
push
ljmp
jno
or
pop
sbb
es
cmp
jnp
jg
inc
mov
add
add
and
pop
xor
aad
jns
sahf
stos
xchg
lret
and
adc
push
inc
fisttpl
cwtl
das
pop
jo
stc
mov
ret
hlt
rcl
imul
lahf
ss
and
mov
mov
cmpsl
test
leave
cs
cli
xchg
inc
sbb
dec
bound
scas
xchg
insl
imul
mov
int
rorb
aaa
adc
or
stos
xchg
sub
mov
scas
inc
xor
int
sbbl
nop
movsb
jmp
mov
loop
or
xor
push
jl
mov
lcall
std
mov
sbb
insl
adcb
mov
out
push
sbb
adc
insb
dec
xor
jp
stc
nop
mov
loopne
scas
adc
insb
add
xor
and
push
ljmp
jno
or
pop
sbb
es
cmp
jnp
jle
inc
mov
add
add
and
push
xor
aad
js
sahf
test
lret
sti
xlat
jp
or
cwtl
das
pop
outsl
stc
mov
roll
add
repnz
mov
cmpsl
cmpsl
mov
cs
cli
xchg
inc
sbb
dec
popa
sbb
sahf
mov
int
mov
push
in
adc
or
stos
xchg
sub
mov
scas
inc
das
or
lcall
and
aad
aas
loope
or
xor
daa
mov
xchg
lcall
cld
mov
sbb
insl
adcl
mov
test
imul
jns
stc
nop
mov
fists
scas
adc
insb
add
xor
and
push
ljmp
jno
or
pop
sbb
es
cmp
jnp
jge
inc
scas
lea
cltd
mov
loopne
mov
and
adcb
aad
ja
sahf
test
pop
repz
and
adc
sbb
fisttpl
cwtl
das
pop
outsb
stc
lahf
jl
dec
scas
rolb
add
ss
and
mov
push
cltd
jne
cmpsl
cmpsb
mov
cs
cli
xchg
aas
sbb
dec
pusha
sbb
popf
mov
int
mov
push
in
xor
push
jae
mov
xchg
test
in
jmp
or
lcall
and
aam
aas
loopne
or
xor
mov
xchg
lcall
sti
mov
sbb
insl
adcb
mov
in
push
push
cmc
adc
push
xor
js
stc
nop
mov
ficoms
scas
paddsb
xor
and
push
ljmp
jno
pop
out
pop
sbb
es
cmp
jnp
jl
inc
scas
mov
cltd
mov
fbld
mov
and
adcb
aad
jbe
sahf
cmpsl
sbbl
and
adc
sbb
sub
stc
sahf
jnp
dec
lods
mov
aam
add
lahf
ss
and
mov
mov
cmpsl
movsl
mov
cs
cli
xchg
sbb
dec
pop
sbb
pushf
mov
int
mov
push
in
xor
test
inc
push
jae
xchg
pop
xchg
test
sub
mov
jnp
sti
scas
inc
sub
dec
int
sbbb
mov
aas
fcomip
or
xor
mov
test
lcall
cli
mov
sbb
insl
jg
lahf
ss
mov
jecxz
push
adc
aaa
inc
xor
ja
stc
nop
mov
fstl
scas
push
jmp
add
mov
jo
push
ljmp
jno
push
in
pop
pop
sub
jnp
jnp
inc
lods
mov
cltd
mov
fisubs
mov
and
adcb
popa
jne
sahf
cmpsb
sbbb
and
adc
sbb
daa
cwtl
das
pop
insb
stc
popf
jp
dec
lods
mov
aam
call
lahf
ss
and
mov
mov
test
mov
jb
lds
testb
xchg
cmp
dec
in
pop
sbb
fwait
scas
ss
mov
push
in
xor
test
or
cmpsb
xchg
sub
mov
jl
stc
scas
inc
sub
add
cmp
jle
and
shrl
or
xor
jne
jge
test
fwait
xor
call
mov
sbb
xlat
outsb
jle
lahf
rcrb
push
adc
adc
addr16
xor
jbe
stc
nop
mov
fistl
scas
or
insl
add
cs
and
push
ljmp
jno
add
pop
push
es
es
aaa
in
imul
lcall
and
push
cs
pop
jae
lahf
movsb
sbbb
lds
mov
add
inc
fmull
cltd
xor
arpl
fwait
js
dec
stos
mov
aad
std
push
aaa
inc
push
hlt
mov
mov
test
out
xor
hlt
or
xchg
cmp
sbb
cltd
lods
aaa
into
fidivrs
push
in
xor
stos
inc
inc
push
jae
andl
xchg
movsb
xchg
sub
mov
jge
imull
pushf
cmp
fs
and
iret
lods
inc
fcomp
lock
xor
mov
adcl
xor
out
cli
sbb
mov
sbb
outsb
jge
lahf
ss
loopne
push
adc
adc
inc
xor
jne
stc
nop
mov
ficoml
scas
or
insl
add
sub
mov
outsb
jg
ljmp
jno
add
pop
adc
ss
push
mov
lcall
and
push
sub
or
mov
es
add
inc
fmull
cltd
xor
arpl
lcall
sbb
lret
cld
push
mov
mov
mov
test
out
xor
repz
sti
xchg
cmp
out
pop
sbb
cwtl
lods
aaa
into
fnstsw
push
in
das
or
jae
andb
xchg
mov
out
in
scas
inc
sub
add
fs
and
into
stos
inc
fcomp
out
or
das
inc
daa
mov
adcb
aad
arpl
pop
idivl
sbb
xlat
outsb
jl
lahf
ss
fistpll
stos
and
inc
xor
je
stc
nop
mov
fsts
scas
or
insl
add
sub
int3
pop
cmp
ljmp
jno
add
pop
adc
es
xor
lods
inc
test
lret
cld
fisubl
mov
push
sub
pop
jno
lahf
mov
ret
es
add
inc
faddl
cltd
xor
arpl
cltd
jbe
dec
test
sbbl
sti
or
hlt
mov
mov
test
in
xor
repnz
sti
xchg
cmp
dec
out
pop
sbb
xchg
stos
aaa
into
fdivrl
push
in
cs
inc
ds
jae
sbbl
sub
mov
jge
cmc
scas
inc
daa
push
add
fs
and
int
inc
fcomp
out
or
cs
daa
mov
adcl
arpl
push
idivb
sbb
xlat
outsb
jnp
lahf
ss
fidivrs
stos
and
inc
xor
jae
stc
nop
mov
dec
out
fcoms
scas
or
insl
add
sub
and
ljmp
jno
add
pop
adc
es
xor
jl
jbe
inc
test
add
sti
fldenv
mov
dec
sub
pop
jo
lahf
mov
ret
repz
jnp
add
cltd
xor
cli
cwtl
jne
dec
cmpsl
mov
aad
cli
or
aaa
ds
mov
mov
test
in
xor
icebp
add
dec
out
pop
sbb
xchg
stos
aaa
into
push
in
sub
dec
jae
sbbb
nop
mov
out
jecxz
scas
inc
es
int
jns
and
int3
test
or
sub
dec
jge
adcb
xor
in
cli
adc
aaa
sbbl
jp
lahf
ss
fnstsw
stos
and
inc
xor
jb
stc
nop
mov
dec
out
xlat
pop
scas
or
insl
add
sub
and
push
ljmp
jno
add
pop
adc
es
xor
jl
jne
inc
cmpsl
xchg
lcall
and
dec
sub
pop
outsl
or
lods
shll
repnz
jnp
add
xor
arpl
xchg
je
dec
cmpsb
mov
aad
stc
or
mov
push
nop
insl
adc
jecxz
xor
lock
xchg
adc
inc
push
sbb
xchg
test
mov
call
or
or
enter
xchg
sub
mov
jge
repz
inc
and
inc
int
js
and
lret
test
fcomp
in
or
sub
daa
mov
jg
inc
fadd
mov
arpl
adc
mov
sbb
xlat
outsb
jns
lahf
ss
fdivrl
stos
pop
xor
jb
inc
xor
jno
stc
nop
mov
dec
out
pop
scas
pop
in
add
sub
and
push
ljmp
jno
faddp
pop
adc
nop
daa
push
xor
jl
je
inc
cmpsb
test
lcall
and
dec
sub
pop
outsb
or
stos
shlb
icebp
int3
jnp
adc
inc
pop
lcall
jb
dec
movsb
mov
sbb
testl
cmc
mov
mov
stos
pushf
scas
fnsave
xor
out
add
xchg
xor
push
out
push
sbb
xchg
cmpsl
cmp
fdivs
in
sub
stos
inc
cmp
or
leave
pusha
lea
out
loopne
mov
and
push
popf
xor
jbe
and
test
inc
ljmp
sub
jle
jge
inc
ffree
sahf
pushf
xor
loope
sti
adc
mov
sbb
fsubrs
xchg
lret
push
or
adc
sbb
ds
outsl
cmp
out
aam
scas
add
daa
ss
mov
push
mov
or
fmul
pop
push
pop
xchg
sub
out
popa
jb
inc
movsb
addb
vpcmpgtb
aam
mov
dec
es
xlat
push
insb
or
test
lret
out
adc
jno
mov
loopne
pop
dec
mov
sub
inc
incb
jge
test
mov
imul
fcmovnb
rcrb
and
push
mov
ds
sub
jl
pop
and
mov
outsl
loop
dec
addb
std
xchg
and
pop
cmp
lods
or
jnp
lods
popf
cs
jecxz
push
nop
and
push
cmpsl
pop
ror
mov
or
adc
adc
fiadds
sub
mov
insl
sbb
decb
adc
ss
pushf
inc
xchg
lcall
fsubr
sar
call
pop
pop
push
sbb
add
hlt
cmp
dec
xlat
ret
ficompl
adc
aam
pop
pop
sbb
sbb
jl
jg
add
insb
scas
in
add
cs
jecxz
pop
repz
add
pop
sub
lcall
mov
ljmp
jns
jne
scas
jge
add
push
fbstp
scas
add
int3
jp
or
ss
clc
jnp
add
bound
test
sub
mov
and
mov
les
lret
sbb
push
inc
test
lret
inc
sbb
aad
inc
out
add
dec
addb
mov
pop
sbb
pop
push
shll
jmp
dec
and
arpl
icebp
lock
mov
pop
stos
lock
ss
cli
call
int
ja
inc
cmp
xorb
lock
pop
ret
sahf
pop
push
icebp
add
and
cli
dec
data16
mov
sbb
dec
and
fdivs
test
sub
mov
mov
dec
inc
and
mov
scas
mov
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
push
xchg
xchg
roll
sbb
mov
jg
cmp
jbe
data16
dec
jne
sbbl
sahf
test
or
mov
scas
stc
xchg
les
outsb
xchg
int3
and
dec
lock
call
out
sbb
lods
sarb
data16
testl
lahf
cmp
loopne
stos
lret
or
repz
divl
mov
and
mov
dec
mov
ja
fldl
sti
jmp
nop
lds
jns
push
stos
je
fdivp
sub
mov
jbe
and
push
mov
ja
test
mov
fwait
inc
je
adc
dec
sbb
and
int3
iret
push
nop
jno
aad
repz
push
xchg
mov
mov
bound
iret
sub
das
inc
xchg
lcall
jne
flds
xchg
leave
sub
in
cld
pop
lahf
fs
jmp
aas
dec
sbb
enter
mov
js
or
sti
lahf
in
pop
out
sbb
jns
inc
mov
int
xchg
jnp
scas
movsl
lods
movsb
orl
daa
mov
inc
int3
fstps
insl
cmc
pand
ficompl
icebp
and
cwtl
xor
push
repnz
rclb
cmp
mov
cs
cmp
aaa
adc
add
scas
dec
mov
aaa
adc
inc
mov
or
mov
sub
adc
push
fnstcw
jo
add
xor
ret
rcrl
xor
cmp
mov
psllq
addr16
add
cmp
paddw
dec
pop
jnp
push
jne
or
jo
or
incl
xchg
stos
pop
dec
inc
int3
out
clc
insl
or
xor
test
orb
mov
or
stos
or
sbbb
and
mov
push
mov
and
push
and
add
or
dec
xchg
js
imul
sti
jb
insb
mov
fwait
cmpsb
push
jno
sub
in
xchg
enter
sbb
loop
popa
into
aaa
and
jge
xor
lret
leave
fiadds
clc
mov
sahf
test
mov
mov
addr16
cwtl
imul
addl
cmp
movsl
pop
mov
out
and
mov
sub
popa
negl
sub
insl
xchg
pop
or
mov
sbb
push
ret
leave
repnz
mov
mov
sbb
jbe
push
fildll
cmp
cli
repz
or
pop
sub
xchg
add
scas
je
mov
mov
cmc
pop
xchg
add
add
in
jge
xor
pop
in
aad
cmp
test
orl
repz
sbb
bound
xchg
insl
in
adcb
jge
sbb
repnz
adc
decl
out
sbb
cmpsl
popa
icebp
stos
les
out
push
push
jecxz
mov
dec
push
movsl
xchg
scas
ret
xchg
add
scas
shlb
push
outsb
push
mov
push
sbb
dec
mov
or
mov
pusha
push
push
stos
shll
lea
popf
xchg
mov
pop
sahf
inc
adc
cs
push
scas
rorl
rclb
into
add
push
mov
add
cmc
insb
lea
enter
sbb
cs
js
sub
shr
daa
xlat
mov
mov
inc
lds
inc
cmp
inc
mov
jle
jae
mov
outsl
jae
dec
mov
jle
je
dec
mov
dec
je
cmc
rcl
iret
movsb
das
arpl
enter
imul
pop
inc
cmc
insb
xchg
repnz
call
in
cmp
adc
and
jge
sarb
cli
xchg
das
jl
inc
pop
xchg
int
or
adc
scas
test
andps
push
jb
aaa
xchg
mov
mov
xchg
mov
pop
pop
sbb
repz
or
sub
lods
cmc
or
inc
std
js
aaa
mov
mov
inc
jae
mov
pop
cmp
dec
jp
sub
jns
adc
sub
pop
sub
and
fdivs
jp
jge
or
sarb
adc
shr
sbb
mov
mov
inc
roll
lods
push
std
fmull
push
push
adc
lods
mov
push
cmp
adc
xchg
not
sbb
stc
mov
xchg
pushf
pop
or
sbb
gs
cmp
xchg
popa
movsb
xchg
ja
mov
dec
js
mov
mov
push
xor
cli
out
addr16
push
cwtl
mov
dec
incb
jbe
out
jae
jmp
jle
push
mov
sub
out
int3
lea
js
xchg
jne
mov
pop
mov
adc
mov
jp
fcoml
shlb
mov
mov
das
dec
inc
and
sbb
in
sarl
dec
jl
and
aam
test
jb
adc
icebp
jmp
add
jns
clc
stc
dec
out
addr16
or
mov
test
iret
xor
ror
cwtl
or
lcall
mov
or
insl
call
sbbl
fisubrl
or
sub
shlb
jae
xchg
cwtl
imul
jno
cmpsb
cmp
add
jge
cmp
fdivs
lret
pop
jbe
neg
and
push
out
in
outsb
popa
pusha
xchg
fwait
fwait
mov
bound
mov
je
sahf
arpl
mov
xor
mov
jp
or
pop
dec
jae
inc
add
xor
adc
jns
or
xlat
jge
pop
lahf
pop
cmpsl
aad
mov
int3
ss
inc
cmp
sbb
vmptrld
dec
jbe
sar
pop
into
fwait
loopne
roll
fs
lret
iret
mov
mov
push
lods
sbb
cmpsb
pop
sbb
xor
data16
pop
cltd
dec
rcrb
das
dec
fs
mov
out
dec
dec
xor
cmp
int3
xor
jle
insl
pushf
pusha
fcmovnb
repz
je
in
bound
or
sub
ret
fs
pop
cli
aaa
adc
pop
shll
mov
pop
loopne
nop
jns
sub
and
sbb
add
or
cltd
push
stc
xchg
mov
sahf
and
jno
out
pop
mov
sbb
pop
mov
pop
jno
jecxz
pop
mov
and
loope
pop
mov
mov
mov
je
pusha
fst
dec
aad
cmp
insl
shrb
ret
adc
lcall
mov
in
leave
gs
lahf
popa
xchg
lret
movsb
lods
loope
and
sbb
nop
push
mov
stos
sahf
mov
jmp
jb
xor
lods
mov
outsb
or
lods
ljmp
mov
and
push
sub
adc
leave
mov
mov
adc
shl
mov
sub
mov
cmpsb
xor
cmpsb
adc
and
dec
insb
mov
out
int3
pop
in
je
shrl
pop
sbb
lock
mov
sarb
sub
fcomi
jl
mov
ret
inc
into
in
sub
das
and
mov
dec
in
push
and
mov
rclb
lea
pop
mov
rorb
mov
.byte
.byte
