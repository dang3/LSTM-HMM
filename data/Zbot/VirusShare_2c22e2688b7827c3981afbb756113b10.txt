push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
pop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
ret
stos
xor
mov
mov
pusha
call
add
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
jmp
ret
cld
xor
lea
add
mov
mov
shl
sub
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
je
mov
sub
ja
push
pop
je
clc
popf
push
pushl
decl
ret
sbb
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
add
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
push
pop
push
mov
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
sub
cmp
jne
mov
pop
ret
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
shlb
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
bound
add
sub
add
fisubs
add
mov
add
jbe
add
cli
and
add
add
mov
and
add
and
add
add
add
add
out
add
and
add
and
add
and
add
add
jbe
add
push
and
add
and
add
and
add
add
add
add
sbb
add
dec
and
add
and
add
add
add
add
adc
add
cmp
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
xchg
and
add
add
shlb
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
bound
add
sub
add
fisubs
add
mov
add
jbe
add
cli
and
add
add
mov
and
add
and
add
add
add
add
out
add
and
add
and
add
and
add
add
jbe
add
push
and
add
and
add
and
add
add
add
add
sbb
add
dec
and
add
and
add
add
add
add
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
popa
je
inc
imul
jns
add
movsl
add
je
gs
imul
rolb
insb
outsl
bound
dec
outsl
arpl
add
add
gs
outsl
jbe
inc
imul
jns
add
aad
inc
imul
gs
add
je
imul
bound
gs
add
dec
add
popa
insb
inc
insb
popa
addr16
add
add
popa
jo
jb
add
xchg
add
je
jne
jb
outsb
je
push
add
repnz
imul
jb
je
arpl
add
call
inc
imul
bound
gs
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
push
jb
jbe
je
push
jb
imul
inc
add
add
je
jne
jb
outsb
je
jb
arpl
jae
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
inc
gs
je
dec
popa
outsb
fs
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
push
add
outsl
jae
dec
popa
outsb
fs
add
inc
gs
je
imul
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jnp
push
gs
outsl
arpl
add
jnp
inc
gs
imul
outsb
addr16
add
xchg
push
push
gs
jae
addr16
add
jae
push
gs
jne
jae
jb
outsl
jae
add
push
imul
js
push
add
into
pop
dec
outsl
popa
fs
jne
jae
jb
add
pop
dec
jae
outsl
outsl
insl
gs
mov
inc
imul
dec
gs
popa
addr16
add
mov
dec
jae
imul
jae
popa
addr16
add
sbb
ja
jo
imul
or
jae
dec
gs
popa
addr16
add
popf
pop
dec
outsb
jae
jb
dec
outsb
jne
add
pop
dec
jae
imul
push
push
inc
push
xor
cs
insb
add
or
inc
arpl
jb
gs
outsb
fs
jb
popa
jns
or
inc
arpl
gs
js
insb
imul
jb
gs
push
add
arpl
outsb
jbe
jb
inc
arpl
inc
arpl
jae
add
add
arpl
outsb
jbe
jb
push
inc
push
outsl
inc
arpl
jae
add
dec
push
dec
inc
push
push
inc
cs
insb
add
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
dec
xchg
enter
sbb
mov
pop
stos
popf
pop
fisubrs
or
mov
out
mov
pop
inc
lds
bound
dec
dec
mov
or
inc
adc
stc
lods
inc
stos
jmp
enter
fstl
dec
push
arpl
mov
mov
cmp
xor
cmc
and
cmp
fmull
aaa
xchg
sarb
and
in
cmp
inc
push
shl
test
xor
cmp
jp
fimuls
std
out
dec
add
xor
aam
cmp
jmp
push
das
push
notl
and
xor
xor
mov
push
cmp
das
idiv
push
jge
xchg
add
inc
pop
cmp
movsb
push
sbb
xchg
mov
jge
mov
dec
sub
cmpsb
rol
sbb
fidivs
sub
jae
out
enter
and
in
jne
ret
xchg
testl
in
xor
sub
mov
mov
sub
bnd
outsl
lea
std
xlat
cmpsb
pushf
arpl
mov
cli
push
xlat
stos
dec
push
pop
sub
js
and
mov
cmp
bound
repnz
js
inc
jle
in
push
cmp
rorl
xchg
arpl
ljmp
pop
sbb
mov
cmpsl
pop
sahf
std
mov
push
and
xor
mov
daa
popa
ss
rcll
or
push
aaa
adc
and
xchg
in
imul
push
pop
push
sahf
push
push
mull
es
xchg
gs
or
adc
jno
insb
into
mov
and
push
mov
jp
mov
clc
or
push
pop
xor
ret
in
dec
imulb
aas
cs
sub
test
hlt
sbb
pop
and
pop
xor
or
movsb
js
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
popa
add
test
add
clc
xchg
add
add
add
add
add
or
add
mov
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
scas
lods
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
lods
lods
mov
mov
lcall
jge
add
jl
lods
lods
stos
add
cmpsb
cmpsb
push
mov
mov
mov
ret
ret
stos
leave
lret
into
int3
int3
rcl
in
rcl
shl
iret
ror
hlt
into
int3
int
leave
repz
leave
leave
out
mov
mov
lods
stos
stos
lea
cltd
fwait
and
jae
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
lret
lret
rcl
cld
xlat
fdivr
xlat
xlat
xlat
aam
rcl
sar
int3
int3
into
aad
rcl
sar
mov
mov
iret
movsb
movsb
movsl
xchg
mov
das
and
add
push
add
add
add
add
add
add
add
add
stos
stos
lods
add
lods
scas
sbb
mov
jnp
mov
mov
dec
lret
lret
iret
iret
aad
aad
xlat
fdivr
xlat
xlat
xlat
call
aad
dec
int
dec
into
int3
call
aad
dec
int
mov
mov
mov
std
test
cmpsl
ljmp
pop
fs
or
add
add
add
add
add
pop
add
add
add
add
add
add
push
push
pop
add
dec
add
pop
add
or
inc
or
sbb
push
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
leave
dec
int
call
rcl
call
xlat
fdivr
xlat
fcom
call
dec
into
into
dec
lret
into
int3
int3
inc
sarl
pushl
cmpsl
test
mov
cltd
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
bound
push
push
bound
pop
fs
sbb
das
prefetchw
sub
sbb
xor
cmp
aaa
cmp
and
add
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
rol
ret
dec
leave
dec
iret
sar
aad
aad
aam
call
rcl
dec
mov
inc
ret
ret
mov
mov
scas
scas
lods
jmp
pushf
cwtl
cwtl
xchg
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
jno
jg
jle
jge
jg
jo
jb
bound
mov
cmp
inc
inc
mov
outsl
outsl
jo
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsl
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
dec
lret
leave
dec
leave
inc
mov
mov
scas
scas
lods
jmp
fwait
call
xchg
xchg
cwtl
xchg
xchg
cltd
lcall
cmp
push
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsb
outsl
add
pop
or
jp
nop
mov
incb
jnp
idivb
jl
outsb
outsb
outsl
out
addr16
fdivs
je
jg
jle
jns
js
arpl
fs
inc
inc
cmp
sbb
sbb
movups
lods
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsl
cmpsl
lcall
xchg
xchg
incl
addb
xchg
xchg
sahf
mov
mov
mov
jns
js
das
das
xor
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
jno
fwait
lahf
in
mov
mov
addl
mov
mov
jle
jno
jb
je
je
jge
jge
test
jp
addr16
cmp
and
jge
cmp
movsb
movsl
movsl
shrb
lods
lods
sti
stos
stos
stos
stos
lods
stos
stos
stos
test
movsb
movsb
movsl
std
cltd
lcall
xchg
jge
jp
jp
jp
jp
xchg
cwtl
movsb
movsl
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
nop
xchg
incl
xchg
mov
std
cwtl
cwtl
cwtl
stc
xchg
xchg
xchg
in
mov
or
addb
xchg
pop
push
push
push
rdmsr
inc
inc
inc
dec
imul
xchg
xchg
leave
cltd
fwait
lcall
lcall
mov
decl
mov
lcall
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsb
mov
jp
scas
test
add
pop
adc
test
call
cltd
xchg
xchg
incl
test
decb
xchg
sahf
popf
popf
std
movsl
mov
mov
in
xchg
in
xchg
push
jne
or
add
or
inc
es
daa
push
dec
dec
dec
data16
jb
xchg
xchg
rclb
xchg
xchg
std
mov
call
sahf
sahf
jmp
stos
pushl
movsl
scas
mov
xchg
stos
std
mov
xchg
scas
mov
mov
ljmp
mov
add
pop
pop
adc
mov
jmp
popf
cwtl
lcall
mov
call
xchg
xchg
xchg
xchg
pushf
popf
popf
movsb
movsl
mov
mov
xchg
cwtl
fstpt
movsl
push
push
push
outsl
dec
dec
dec
popaw
popa
arpl
je
mov
jle
test
int
nop
xchg
in
nop
xchg
testl
lea
jmp
mov
mov
pop
nop
mov
ss
mov
ja
mov
movsl
mov
mov
mov
lods
lods
lods
mov
movsl
mov
add
mov
add
pop
adc
mov
ljmp
popf
decl
call
xchg
xchg
call
xchg
lcall
sahf
mov
movsl
std
movsb
mov
cltd
out
nop
xchg
nop
xchg
xchg
les
cwtl
lcall
lea
stc
xchg
xchg
std
xchg
jb
lcall
jmp
jnp
mov
jns
mov
jb
mov
outsb
ljmp
pcmpgtd
stos
or
ljmp
jle
mov
mov
stos
pushf
movsb
mov
movsb
add
pop
pop
adc
mov
ljmp
popf
call
xchg
xchg
lcall
pushf
pushf
lcall
popf
popf
lcall
xchg
cwtl
call
xchg
xchg
call
lcall
cltd
sahf
stc
mov
mov
xchg
imul
cwtl
dec
jp
lcall
pushf
push
push
jmp
arpl
test
packuswb
lods
adc
scas
adc
mov
imul
mov
insl
mov
fwait
lods
mov
scas
lods
scas
movsb
movsl
mov
add
add
add
add
add
pop
pop
adc
mov
ljmp
popf
call
popf
popf
lcall
mov
movsb
jmp
xchg
cwtl
decl
mov
decl
ja
cltd
jb
lcall
call
sub
pusha
call
or
call
add
lcall
ljmp
sbb
mov
outsb
pushl
push
jo
mov
and
and
shll
mov
xchg
lods
mov
scas
scas
mov
mov
movsl
movsb
add
pop
pop
adc
scas
mov
shlb
lcall
mov
jmp
stos
test
cmpsl
cmpsb
cmpsl
lcall
decl
inc
outsl
decl
decl
push
pop
incl
add
incl
add
mov
push
call
add
lcall
jmp
push
outsl
pushl
sub
mov
sub
les
inc
sub
cmp
movl
inc
mov
scas
lret
movsb
dec
mov
movsb
movsb
add
push
push
adc
test
mov
jmp
test
ljmp
lods
lods
pushl
lods
scas
jmp
jno
decl
push
pop
incl
pop
push
incl
push
incl
add
xchg
push
decl
add
xchg
add
lcall
jmp
adc
mov
aaa
cmp
aaa
cmp
cmp
int
xchg
sarb
xchg
sarl
call
cmp
call
inc
xchg
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
mov
mov
lahf
fwait
sahf
jmp
lods
scas
pushl
mov
pushl
mov
ljmp
ja
decl
or
mov
pop
incl
or
xchg
push
incl
add
mov
push
call
add
popf
add
mov
add
stos
add
pushl
cmp
into
inc
mov
rolb
call
dec
nop
call
dec
xchg
fmuls
fmull
ficoml
call
test
mov
mov
mov
mov
mov
add
add
add
inc
dec
adc
jp
mov
test
sahf
ljmp
mov
pushl
mov
pushl
mov
mov
movsb
xchg
decl
sbb
pop
pop
decl
pop
decl
push
call
add
popf
add
add
add
stos
add
mov
fs
mov
dec
mov
push
xchg
call
push
fwait
ficoml
fstpl
jmp
pop
sahf
ficomps
jmp
pop
lahf
jmp
pop
mov
call
test
mov
test
jne
mov
lahf
add
inc
inc
adc
js
mov
movsb
test
lahf
cltd
sahf
ljmp
mov
pushl
mov
mov
pushl
xchg
movsb
call
call
call
call
or
nop
add
add
fwait
add
mov
add
lods
add
mov
gs
mov
xor
fisubl
fisubs
fbld
jmp
cmpsw
jmp
data16
jmp
cmpsl
call
addr16
call
test
mov
test
mov
lahf
mov
add
add
add
inc
inc
adc
jp
xchg
lcall
fwait
sahf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
cltd
xor
cltd
das
outsb
call
pop
call
add
lcall
jmp
add
mov
pushw
adc
rolb
fldt
jmp
outsb
lods
jmp
jno
jmp
jb
call
je
in
jne
out
je
out
je
in
jae
jmp
mov
mov
cmpsb
cmpsl
lcall
lahf
add
add
insb
insl
js
mov
popf
pushf
lcall
mov
mov
mov
mov
mov
cmpsl
lods
lcall
xor
lahf
cmp
sahf
aaa
jne
sahf
xor
lcall
lcall
add
movsl
add
stos
add
mov
arpl
mov
fs
mov
sbb
ficoml
jmp
js
ljmp
jmp
mov
out
cmpl
push
test
push
cmpl
mov
test
pushf
daa
sahf
sahf
lahf
add
add
add
add
ss
pop
pusha
pop
jne
jg
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
ret
ret
ret
mov
mov
mov
cmp
inc
jl
movsl
inc
jg
movsb
ss
lcall
lcall
pop
ljmp
add
mov
data16
mov
add
call
and
movsb
jmp
mov
push
mov
push
xchg
ret
push
xchg
sar
xchg
ret
push
xchg
ret
stc
xchg
pop
out
mov
fidivl
clc
stos
lods
stos
mov
sahf
popf
xor
pushf
sahf
add
add
add
inc
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
xchg
pushl
mov
mov
inc
inc
mov
jge
lcall
dec
jg
lods
dec
cmp
xor
pop
lcall
add
add
lods
add
mov
fs
mov
add
enter
fdivs
jmp
ja
in
xchg
push
cltd
enter
push
fwait
push
lcall
clc
pushf
lret
sahf
int
cli
popf
int3
cld
lcall
fbstp
cli
mov
mov
lahf
mov
nop
add
add
add
das
sub
outsb
push
dec
dec
jecxz
pusha
pusha
call
mov
mov
mov
mov
inc
vshufps
inc
mov
lahf
jmp
dec
xchg
scas
push
xchg
mov
push
pop
lcall
add
lods
add
mov
mov
add
movl
jbe
filds
in
mov
push
movsl
int3
push
movsl
int
mull
sar
cli
cmpsb
iret
sti
test
iret
test
iret
push
lahf
jmp
mov
dec
lret
mov
mov
sahf
mov
xchg
add
fwait
lcall
xor
sub
inc
inc
inc
bound
push
xlat
je
jno
mov
rol
rol
mov
ret
ret
ret
dec
leave
enter
pushl
push
test
lods
push
mov
scas
dec
xchg
lahf
sbb
pop
jmp
add
mov
fs
mov
add
int3
add
add
fists
out
pop
cmpsb
push
lahf
lret
lods
sar
cli
mov
sti
mov
cld
mov
cld
mov
std
mov
std
mov
mov
std
mov
cld
mov
push
cmpsb
jmp
mov
dec
lret
mov
mov
mov
xchg
xchg
or
add
add
xor
add
dec
dec
outsl
outsb
outsl
mov
aad
xlat
jmp
xlat
fdiv
iret
rcl
std
lret
int3
into
dec
lret
lret
dec
lret
leave
dec
leave
lret
leave
mov
scas
jmp
push
mov
lods
cmp
jmp
add
mov
arpl
mov
add
roll
outsl
call
add
filds
jne
ljmp
cli
scas
sar
cld
mov
mov
fdivr
mov
cld
mov
fcos
inc
fcos
mov
int
call
lret
mov
lahf
sahf
jo
xchg
xchg
or
add
add
xor
xor
add
pop
or
leave
movl
jmp
out
loope
loope
fsub
fdiv
xlat
cli
aam
std
int
iret
mov
push
test
stos
sub
mov
add
mov
popa
mov
add
lret
add
add
fildl
jne
jecxz
js
out
das
xchg
stc
mov
cld
mov
loope
std
loopne
inc
loopne
inc
loopne
inc
fdivrp
std
enter
std
dec
fdivrp
std
lret
sti
mov
lret
lret
iret
mov
mov
xchg
adc
add
add
incb
std
add
incb
repz
hlt
or
in
in
pop
jmp
in
sub
in
in
dec
call
jmp
jmp
aad
jmp
mov
xchg
cmpsb
cmp
movsl
push
jmpw
add
mov
arpl
mov
add
int
outsl
call
add
add
ljmp
sti
mov
in
std
lret
jecxz
dec
in
dec
in
std
int
dec
jecxz
dec
loope
shl
shl
std
shl
call
in
cli
fdivr
out
mov
xlat
inc
cmpsl
cmpsb
mov
cwtl
xchg
add
add
add
incb
std
add
clc
testb
repz
hlt
icebp
push
out
lock
pop
in
repnz
cmp
in
in
pop
loopne
loopne
mov
xchg
sti
mov
add
pop
ljmp
add
roll
inc
add
roll
jo
flds
je
in
jnp
jmp
jle
cmc
pop
test
cli
mov
std
shl
shl
std
shr
call
out
shl
std
out
std
fsubr
std
fsub
fldl2t
std
fucomi
shl
push
ret
jecxz
lret
repz
xchg
xchg
and
cwtl
xchg
add
cld
add
stc
add
cld
cli
add
div
or
aad
xor
jae
negb
add
add
lods
add
mov
add
lret
add
rolb
jb
fldl
jbe
out
js
in
sbb
clc
jbe
sti
fldl2t
fldl2t
fucomi
fucomi
std
fsubr
fucomi
fucomp
fsubrp
std
fsubrp
fsubrp
shl
push
ret
jmp
aad
call
rcl
clc
lods
lods
lods
lods
xchg
xchg
xchg
jo,pn
outsl
add
add
add
loop
add
enter
mov
xchg
repnz
and
lahf
add
cmpsl
add
mov
arpl
mov
add
into
add
add
fiadds
jae
jmp
sub
std
shl
std
fsubrp
fucomi
fldl2e
fldpi
fsubr
std
aad
aam
sti
iret
loop
sti
shl
clc
int
push
lret
fdivr
test
lret
rcr
call
xlat
sti
mov
mov
lcall
add
add
add
fcom
add
leave
lds
scas
xchg
jmp
add
mov
arpl
mov
add
rolb
jo
fadds
jae
loope
jns
jmp
aaa
xchg
cli
xchg
cld
leave
loopne
sti
lret
cld
test
aad
hlt
mov
into
push
mov
int3
jmp
mov
sar
ljmp
imul
fnclex
cmc
fsubp
fsubrp
mov
mov
xchg
add
add
add
int3
int
mov
rol
mov
cmpsl
loopne
ss
mov
add
mov
data16
mov
add
into
or
rorl
fistl
ja
loopne
cmp
call
scas
lret
ljmp
std
loope
ret
cld
fidivs
mov
leave
ljmp
into
fsubp
rcl
shl
fcmovnb
out
loope
in
in
test
out
out
popf
call
lret
lret
push
lods
lods
stos
adc
test
cmpsb
add
rolb
ret
ret
sahf
stos
aam
dec
cmp
sbb
cmpsl
sbb
scas
and
js
mov
inc
xchg
les
stc
leave
arpl
hlt
rorb
out
mov
mov
leave
lret
int3
rcl
lret
mov
into
shlb
fcom
aam
fcmovu
fnstenv
gs
jecxz
out
out
call
cmc
repz
div
and
repnz
sbb
fcmovnu
or
mov
into
add
add
add
mov
rolb
mov
test
lcall
jbe
ljmp
mov
sarb
stos
mov
les
ret
ret
int
int3
jp
int3
shlb
iret
iret
push
iret
rcl
dec
xlat
aad
rcl
aam
daa
ficompl
fcmovnu
fcoml
fsubp
loop
fucomip
in
out
jmp
add
sti
testb
std
std
add
incb
std
incb
mov
mov
shrb
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
push
rol
inc
ret
leave
lds
enter
int3
ror
and
rcrb
iret
aam
iret
aad
or
fcom
push
rcr
fadds
fcmovnu
add
add
in
add
in
jmp
add
incb
mov
mov
add
rol
ret
mov
rol
sub
mov
mov
push
rol
or
enter
leave
leave
add
int3
lret
aam
add
xlat
aad
aam
aam
xlat
aad
xlat
add
fsub
add
aad
add
loopne
add
add
out
add
icebp
repnz
incb
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
mov
les
mov
mov
ja
stos
test
cmpsl
test
and
add
add
add
add
add
add
add
add
mov
push
mov
enter
into
iret
jmp
rcl
cmc
rcl
sar
into
into
iret
cli
int
lret
stc
int3
lret
lret
hlt
mov
mov
iret
stos
lods
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
jg
addl
push
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
cld
rcl
iret
aad
call
aad
call
rcl
dec
int
dec
int3
lret
mov
mov
cld
stos
lods
stos
icebp
cwtl
xchg
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jne
jae
jne
data16
dec
dec
inc
cmp
sub
sub
ss
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
dec
lret
rcl
sar
aam
sar
int3
int3
lret
mov
mov
mov
ljmp
sahf
sahf
xchg
cwtl
xchg
jmp
outsl
jno
adc
add
xor
add
add
add
add
cmpl
test
jp
imul
pop
pop
pop
movsb
push
push
push
stos
push
push
outsb
insb
outsb
push
pop
pop
cmp
cmp
pop
jno
jo
mov
mov
mov
mov
mov
mov
mov
rol
inc
mov
mov
ljmp
pushf
pushf
call
xchg
xchg
cltd
cltd
cltd
out
test
dec
adc
wrmsr
add
add
add
add
add
pop
cltd
fwait
fwait
add
popf
cwtl
cltd
fcoml
addb
jnp
jl
js
jp
jnp
jns
jp
jns
je
jae
push
push
push
cmp
aaa
popf
pushf
sahf
mov
scas
scas
repz
lods
lods
sti
scas
lods
lods
std
test
popf
popf
call
xchg
call
mov
lods
jmp
scas
scas
leave
cmpsb
movsl
movsl
cltd
je
jae
adc
adc
add
add
add
add
outsb
insl
outsb
pop
nop
mov
sahf
cltd
sahf
incl
mov
sti
xchg
xchg
xchg
lock
nop
nop
fimuls
mov
jp
pop
and
inc
inc
dec
outsb
jo
orl
cwtl
lcall
mov
xchg
xchg
xchg
lcall
cmpsb
test
std
mov
scas
mov
mov
mov
movsl
mov
jg
pop
pusha
pop
or
lods
mov
cmpsb
lahf
movsb
decl
mov
call
sahf
lahf
sti
mov
cltd
lcall
push
push
jo
pop
push
outsl
imul
jle
subl
mov
lcall
popf
pushl
outsb
xchg
mov
mov
jge
mov
scas
stos
insl
stos
test
add
add
add
pop
pusha
pusha
or
mov
in
movsb
test
call
xchg
xchg
call
cwtl
lcall
sahf
popf
cli
xchg
xchg
cwtl
jmp
xchg
xchg
aam
mov
nop
jbe
notb
pop
jle
popf
dec
jnp
mov
aaa
jbe
mov
je
mov
outsb
pushl
sbb
pop
mov
scas
scas
jle
movsl
movsl
push
pop
popa
popa
or
mov
call
lahf
popf
jmp
mov
xchg
decl
addl
xchg
jae
cld
cwtl
pusha
cmp
dec
js
nop
cmp
xchg
sub
xchg
sbb
call
or
push
pushl
sbb
mov
and
mov
test
scas
xchg
lahf
popf
sahf
adc
add
add
popa
popa
pop
or
mov
stos
movsb
test
mov
cmpsl
test
stos
test
test
decl
cmp
mov
decl
adc
or
mov
call
add
test
pushl
sub
jge
lds
jg
das
cmp
lret
pop
xchg
inc
test
mov
cmpsl
test
add
add
add
pop
pusha
pusha
or
movsl
test
ljmp
mov
pushl
mov
jmp
inc
jno
mov
pop
decl
or
add
push
call
add
sahf
add
add
mov
insl
inc
ss
inc
mov
iret
inc
mov
roll
call
inc
nop
call
arpl
stc
mov
mov
movsb
movsl
movsl
daa
incb
add
add
popa
pop
pop
or
lahf
mov
ljmp
mov
mov
mov
stos
call
sbb
popa
decl
or
popl
push
call
add
cmpsl
add
lods
add
jne
iret
dec
xchg
fcomps
ficompl
jmp
pop
mov
jmp
pop
mov
dec
cmpsl
mov
ret
cmpsl
xor
addb
add
add
dec
pop
jl
jp
pushf
xchg
lcall
scas
scas
pushl
mov
mov
lcall
sub
insb
call
subps
xchg
add
popf
add
cmpsl
add
scas
add
mov
xor
jmp
outsb
test
in
stos
call
jo
in
jno
jmp
jp
call
cmpsl
mov
shrl
cmpl
dec
dec
dec
pop
insl
outsl
push
mov
xchg
ljmp
mov
mov
mov
je
lcall
cmp
popf
sub
xchg
or
pop
jmp
add
mov
inc
or
inc
xchg
jmp
js
jmp
mov
in
cmpl
hlt
xchg
out
mov
mov
test
push
cltd
lcall
sub
push
push
push
dec
pop
addr16
loopne
mov
mov
sarb
sarb
jmp
inc
cmp
sub
cltd
pop
pop
jmp
add
mov
arpl
mov
push
jbe
fbld
in
mov
push
cltd
cwtl
clc
cltd
lret
pushf
lret
clc
xchg
jmp
lods
inc
mov
stos
popa
mov
add
add
xor
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
ret
ret
inc
ret
mov
cmpsl
jmp
dec
test
mov
add
ljmp
add
mov
add
and
push
mov
sar
stc
test
sar
sti
stos
sar
cld
stos
sar
sti
test
jmp
mov
dec
rol
stos
stos
test
or
add
add
dec
dec
push
aaa
je
jb
stos
test
int3
out
iret
int
lret
lret
leave
lret
lret
enter
mov
stos
pusha
ljmp
adc
test
pop
pushl
add
into
add
fildl
jmp
xchg
mov
std
mov
std
mov
fdivr
sti
mov
xlat
std
mov
jmp
ret
scas
lods
lods
mov
add
add
add
add
pop
or
aam
dec
loop
loopne
loope
fadd
fcmovnu
fcmovu
aad
fsubr
shlb
test
jae
cmpsb
pop
popa
ljmp
add
leave
add
add
or
icebp
push
mov
sti
loopne
inc
loop
std
enter
leave
std
enter
lret
cld
out
mov
leave
divb
pushf
sahf
sbb
add
add
std
incl
incl
jmp
or
in
in
sbb
in
in
xor
loopne
loop
mov
mov
mov
add
mov
inc
add
int
insl
faddl
je
call
insb
mov
sti
sti
shl
shl
call
out
shl
std
out
xlat
call
push
enter
lret
sar
mov
mov
add
std
incl
std
add
cld
pop
aad
mov
pop
xchg
lahf
or
test
pop
pushl
add
roll
jno
loopne
jne
in
and
shl
fldl2t
cld
fsub
xlat
call
fsub
std
aad
push
enter
rcl
sti
mov
sahf
sahf
das
add
add
int
into
or
fs
mov
add
mov
add
add
loopne
ja
out
das
nop
push
fwait
enter
loope
cli
leave
fdivrp
test
aad
bnd
out
ret
sar
in
sar
in
jmp
shl
in
fucomp
leave
mov
stos
test
das
incl
aam
push
mov
jae
or
mov
insl
inc
sbb
lret
and
sub
sti
ficoms
clc
in
mov
out
loop
leave
jmp
fidivrs
int3
leave
faddp
sarb
in
fistpl
in
call
rorb
mov
add
stos
lods
stos
add
xchg
movsl
les
pop
mov
mov
fidivrl
jg
rol
stos
mov
lahf
mov
sarl
enter
int
aam
iret
pop
rcl
rorb
xlat
fdivrs
loopne
fisubrs
in
fsubl
loop
lock
in
jmp
faddl
incb
std
add
mov
outsb
scas
mov
lods
mov
push
mov
mov
xor
leave
and
rcl
pop
rol
adc
rcl
or
or
into
into
add
incb
std
std
add
add
add
int
pextrw
or
int3
into
int
stos
stos
stos
add
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
lcall
ret
enter
leave
enter
mov
ret
mov
scas
mov
stos
lods
lods
xor
jae
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aam
aam
rcl
sar
int
iret
std
stc
mov
test
jle
sbb
sbb
add
add
add
add
add
add
add
add
jae
jb
addr16
dec
das
cs
inc
and
add
add
mov
mov
cmpl
dec
int
call
rcl
dec
int
inc
mov
ljmp
mov
mov
add
xor
add
sbb
je
je
test
aad
jo
ret
bound
outsl
insl
outsl
jb
bound
pusha
pusha
pop
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
xchg
lcall
cltd
cltd
lds
jb
daa
es
das
add
add
add
add
je
jae
fwait
xchg
fwait
mov
xchg
mov
mov
test
addl
push
push
push
inc
mov
pushf
into
mov
lahf
lahf
sti
xchg
xchg
xchg
decb
mov
lods
cmpsl
stos
cld
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
jg
lods
movsl
test
stos
mov
mov
mov
cld
sahf
pushf
sahf
cmc
cwtl
cltd
lcall
push
push
imul
jle
mov
xchg
testl
xchg
pushl
jb
mov
scas
lods
push
lods
lods
lods
add
add
add
mov
mov
lods
cld
xchg
xchg
xchg
lcall
cltd
cltd
call
cltd
cltd
std
xchg
xchg
xchg
out
xchg
mov
loope
jbe
out
xchg
bound
std
fwait
inc
jbe
movsl
cmp
sub
jo
mov
outsb
pushl
pushf
lods
lock
mov
imul
int3
add
test
pop
lods
cmpsb
stos
test
popf
popf
sahf
jmp
cmpsb
call
imul
inc
je
lea
imul
sbb
pop
call
or
mov
outsb
mov
and
inc
sub
les
inc
lcall
test
add
add
je
mov
movsb
test
ljmp
mov
lcall
sub
adc
xchg
push
decl
add
xchg
add
mov
adc
shll
lret
call
inc
mov
aam
call
push
xchg
dec
cltd
mov
mov
mov
movsl
mov
add
imul
test
mov
lods
pushl
mov
mov
call
push
pop
decl
add
mov
add
mov
push
xchg
fistpl
jmp
pop
mov
jmp
movsl
call
pushf
mov
mov
mov
cmpsl
cmpsb
cmpsb
pop
add
add
bound
adc
pushf
lcall
mov
mov
mov
pushf
dec
jle
pushf
xor
cltd
and
xchg
pop
pop
lcall
add
mov
xor
out
mov
in
jp
out
jl
out
jle
fistpl
mov
mov
add
add
dec
adc
imul
mov
mov
mov
ret
mov
arpl
jmp
add
ljmp
add
ret
or
fimull
in
mov
push
xchg
push
xchg
clc
xchg
enter
inc
mov
movsb
sub
aas
inc
aas
adc
push
xchg
xchg
cld
rol
inc
sarl
ljmp
sbb
movsl
add
mov
arpl
les
push
adc
jmp
scas
clc
test
stc
stos
sar
sti
lods
sar
sti
lods
sar
cld
lods
sar
in
scas
leave
inc
mov
cmpsb
ds
incl
xor
xor
outsl
jno
inc
scas
mov
mov
aad
mov
aam
fnop
aam
out
lret
leave
lret
xchg
jmp
add
les
imul
add
call
pop
std
mov
inc
cld
ret
inc
fcos
out
mov
shl
test
dec
jg
addb
add
add
in
or
out
jmp
outsb
fcmovu
fldenv
mov
add
mov
add
fiadds
ja
lock
dec
in
shl
call
in
call
out
aam
push
enter
into
in
scas
scas
scas
popa
cmpl
add
std
add
std
push
int3
int3
shrl
sahf
sbb
stos
add
mov
add
jecxz
jp
cmc
push
cmpsl
cld
enter
xlat
out
std
in
std
aad
std
aam
cli
shl
push
xlat
fmul
shl
mov
mov
xchg
xchg
xchg
pop
mov
mov
cld
lods
add
mov
or
fistps
jg
ljmp
cli
in
mov
into
bnd
ret
out
aad
jmp
fcmovu
scas
ret
ret
les
fwait
cltd
add
mov
popf
lods
xchg
inc
and
push
mov
shlb
lret
js
mov
mov
lret
int3
outsl
fmul
rcrb
rcl
dec
in
fistpll
out
call
sbb
mov
mov
cmp
mov
lods
push
mov
mov
ret
les
int3
sbb
bswap
int
or
aam
std
add
incl
lods
std
add
mov
std
add
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
leave
fdivs
xchg
sub
push
out
test
add
or
in
test
inc
and
or
ja
sub
add
inc
ficoms
add
sbb
cmp
sbbl
vprotb
mov
fstl
outsb
rclb
fs
fs
repz
xchg
inc
fsubs
mov
sub
shr
jle
jae
or
out
cmp
pop
jbe
xchg
and
scas
push
mov
sub
jbe
int
add
push
jmp
pop
shrl
sbb
dec
stos
out
xchg
insl
xchg
sub
shrl
adcl
loopne
addr16
sbbl
or
js
sub
ds
mov
ficoms
mov
cld
jecxz
fbstp
add
sbb
xchg
std
xchg
les
cmp
stos
rclb
cmp
push
mov
mov
fdivl
push
movsl
sbb
popa
idivl
iret
sub
cwtl
jbe
or
push
mov
jns
test
inc
fsubl
lret
repz
pop
cmc
jne
xchg
sub
dec
jl
cmpb
stos
pusha
or
or
out
xchg
inc
fistl
or
cld
test
sub
add
adcb
and
push
popf
sahf
xor
movsb
lock
sbb
inc
pop
bnd
mov
adc
insb
rclb
xchg
cs
into
repnz
test
out
xchg
fs
xchg
decb
sub
push
sub
orl
dec
loopne
pop
into
mov
arpl
pop
xchg
push
pop
movsb
cmp
ret
enter
add
js
sbb
dec
enter
insb
and
dec
mov
movsb
cmp
rol
pop
add
lea
mov
stos
jecxz
xchg
test
xor
xchg
std
inc
fldcw
mov
mov
cld
lret
sbb
dec
stc
call
icebp
mov
ret
hlt
sahf
and
iret
adc
jl
inc
ret
call
sub
loope
cmp
call
xchg
sub
cmp
pop
and
mov
movsl
mov
jp
out
data16
jecxz
cwtl
das
and
test
jno
mov
jbe
mov
sub
push
jmp
dec
sbb
shrb
mov
mov
fcompl
or
das
js
popa
aaa
sub
push
mov
mov
fsubrl
or
xchg
scas
andl
pop
and
push
sub
ja
je
loope
jnp
xchg
lods
push
mov
sbb
rclb
movsl
cmp
jb
lock
les
notb
loop
inc
pop
xchg
sub
xchg
push
dec
pushf
mov
mov
mov
cmp
mov
pop
repnz
cmpsb
xchg
lods
jns
fidivs
xchg
xor
dec
jecxz
push
mov
test
add
mov
icebp
mov
add
cmpsb
jl
lds
sub
jp
out
dec
loop
sti
add
je
pop
mov
xchg
xchg
lahf
cmp
cmp
repnz
repnz
pop
outsb
inc
jns
jbe
loope
rcll
xchg
adc
mov
sbb
shrl
mov
sarb
ficompl
or
xsha256
cmpsb
push
sub
sub
sub
mov
mov
fsubrl
push
daa
shrl
das
xchg
popa
jp
xchg
or
pop
pop
and
push
sub
js
jb
loope
jnp
xchg
lods
les
cmc
into
sbb
push
inc
and
xchg
pop
fdivl
enter
sub
or
fbstp
fnstsw
dec
std
or
pop
push
in
xchg
lret
sti
add
aaa
cmp
add
adc
dec
loopne
or
pop
cmp
push
out
push
loope
pusha
adc
jno
cli
nop/reserved
push
call
shrl
or
sbb
call
out
xchg
and
push
out
call
adc
inc
pop
jae
dec
fidivrs
psubusw
or
pusha
testl
adc
xchg
mov
sbb
dec
add
popa
clc
mov
ret
hlt
mov
pop
icebp
inc
cli
lahf
xor
xchg
push
int
xchg
mov
call
xor
push
lea
mov
fists
and
xchg
jnp
xor
scas
push
mov
fwait
xor
and
cld
pop
inc
aaa
into
jno
cmc
mov
movsb
icebp
mov
adc
bound
adc
add
jecxz
inc
dec
daa
mov
or
sbb
iret
dec
xor
sbb
or
sbb
dec
cmp
push
jno
aad
push
cmpsl
xor
lret
dec
inc
lahf
ss
test
push
mov
push
dec
dec
sti
xchg
jl
jmp
cli
flds
stc
xor
mov
adc
add
imulb
outsl
push
adc
xchg
insb
loope
pop
adc
in
icebp
add
inc
pop
in
js
int
push
add
xchg
inc
aam
int
aad
inc
or
mov
push
pop
inc
fmull
lret
fstpt
or
fnsave
fidivl
ret
repz
dec
push
sbb
push
push
rcll
dec
loopne
and
fbstp
shrb
shl
mov
call
add
pop
lock
sbb
repnz
das
or
repnz
add
sbb
push
hlt
fnsave
leave
jnp
push
pop
mov
int3
cld
loopne
test
das
repz
scas
inc
aaa
sarb
add
push
clc
popl
lea
xlat
push
jmp
add
adc
jae
or
pop
fs
dec
sbb
lret
loope
xor
jns
push
add
jmp
clc
call
pop
repnz
or
dec
loopne
lock
or
in
iret
and
imul
and
pop
cmc
cmp
jmp
arpl
in
or
and
jmp
and
les
clc
adc
addl
and
fnstenv
cmp
arpl
sbb
test
movsl
xorb
cmpsb
lea
in
repnz
fstl
xor
imul
mov
test
in
xlat
jbe
add
es
stos
push
bound
inc
stos
mov
xor
lret
aad
std
pop
mov
aam
jmp
stos
inc
cli
cmp
lds
xor
pop
scas
pop
ffreep
push
insb
cmc
add
jb
sub
lcall
fnsave
mov
xor
in
dec
jecxz
mov
into
gs
shrl
icebp
fidivl
lds
shl
cli
cmp
sub
andb
mov
icebp
js
and
cmpsl
ds
in
out
fdivl
cmp
pop
jno
out
cs
xor
hlt
ljmp
cli
ds
ljmp
and
inc
jle
ja
push
call
in
adc
inc
cmp
push
mov
mov
stos
inc
dec
ss
addr16
pop
add
mov
jnp
cs
pop
rcll
cmpsl
add
dec
sbb
pop
dec
and
xchg
pop
aam
decb
ret
int3
arpl
adc
orb
lea
mov
dec
out
adc
inc
or
mov
xchg
fs
xchg
mov
test
call
or
pop
cmp
imul
sub
call
or
jp
cld
mov
sub
dec
pop
idivb
inc
pop
in
insl
test
add
pop
push
and
mov
stos
inc
xchg
fwait
mov
add
ss
inc
adc
icebp
mov
scas
gs
test
jnp
add
xlat
xor
add
andl
mov
fnstenv
jl
cli
push
out
sub
lret
adcl
sbbb
mov
jo
jne
pop
outsl
aas
xchg
sbb
enter
xchg
jmp
testb
pop
xchg
sub
mov
rclb
mov
imul
scas
jns
fdivrl
sbb
lods
mov
ss
sbbl
outsb
repnz
mov
xchg
mov
jno
mov
loop
jno
pushf
or
inc
lds
push
pop
gs
mov
std
xchg
pop
dec
jecxz
pop
jns
mov
test
in
outsl
sbb
lret
negb
pop
addr16
stos
mov
loop
dec
lret
and
mov
cmp
push
sbb
icebp
sahf
sub
xchg
pop
fmulp
out
sarb
add
push
lock
stos
xor
stos
icebp
sbb
fs
push
imul
sbb
push
insb
jb
ja
xor
mov
fwait
and
inc
sub
lds
sub
add
push
cmp
lods
popf
and
sub
cmpsl
cld
mov
push
call
or
outsb
sub
adc
add
fwait
add
pop
nop
test
push
inc
push
jns
jbe
imul
inc
pushf
cmc
pop
mov
cmp
mov
push
stos
scas
movsb
sub
arpl
mov
or
loopne
push
iret
pusha
mov
int3
or
lcall
dec
andl
dec
cmpsb
in
sbb
xchg
xchg
fsubl
xchg
push
sbb
jno
divl
or
jp
test
sbb
mov
inc
mov
pop
mov
push
or
gs
adc
imul
sbb
sub
xchg
sub
fwait
xorl
xchg
push
sub
jbe
pop
mov
dec
sub
int
xor
mov
dec
popf
cmp
jge
mov
sub
jns
mov
scas
mov
in
insb
js
sub
ret
cmp
in
mov
xor
mov
sub
movsb
fnsave
jbe
push
adc
jbe
add
mov
enter
and
mov
add
push
incl
cmp
out
add
fildll
mov
inc
inc
lcall
jns
fucom
popa
add
pop
cli
int
xchg
inc
iret
jne
dec
mov
jl
ja
loop
ljmp
mov
adc
aam
xchg
ss
icebp
enter
das
adc
test
and
xchg
pop
aas
test
sub
jnp
in
fcompl
sbb
fs
jb
inc
mov
mov
or
mov
dec
add
dec
and
shrl
adc
sahf
lret
push
xor
sub
mov
sub
push
xor
push
mul
xor
test
adc
inc
mov
inc
and
scas
and
test
std
jg
dec
sub
jae
ljmp
add
xchg
jnp
pop
test
push
dec
and
or
movsb
dec
popa
pushf
inc
or
dec
push
xchg
cmpsb
or
insl
dec
cltd
mov
fidivrl
rcrl
es
fistpll
shl
mov
pop
lock
cmc
mov
movsb
xsha256
cmpsb
rcrl
scas
inc
mov
pop
hlt
stc
lods
enter
insb
add
lods
mov
xchg
in
jae
mov
cmpsb
fdivs
ljmp
ret
adc
xor
mov
add
sub
ljmp
jmp
vaddsubpd
out
cmpsb
pop
mov
andl
sub
ja
test
nop
dec
mov
pop
scas
pushf
cmc
lds
xor
jnp
lcall
adc
lock
cmp
cmp
montmul
cmpsb
add
xor
test
push
mov
aam
outsb
push
lea
aas
das
cmc
mov
leave
adc
mov
xor
bound
dec
out
test
xchg
add
insb
inc
or
and
lock
leave
loop
inc
cld
loop
icebp
adcl
pusha
push
lods
js
push
jns
jle
jg
sub
shl
pop
in
and
push
dec
ss
cmp
xchg
test
jb
or
nop
daa
xor
scas
inc
xchg
fbstp
lea
xchg
sub
pop
ljmp
scas
or
adc
mov
jbe
inc
fdivl
loopne
cli
sub
sbbl
loopne
lahf
ss
or
mov
mov
xor
xchg
fdivl
outsb
stos
inc
outsb
lock
xchg
adc
leave
pusha
pop
cmp
cli
xchg
cmp
rorb
inc
fcompp
out
fdivl
loopne
cli
jne
sbbl
sahf
sbbl
data16
ss
mov
inc
mov
aad
bound
sti
xchg
cmp
sbb
iret
mov
into
fsubr
daa
mov
or
inc
fcompl
mov
cli
outsl
ja
sub
sbbl
mov
es
fs
out
inc
sbb
lods
inc
push
aas
fidivs
jg
popa
jnp
cld
xchg
mov
or
repnz
mov
dec
or
mov
fsubs
gs
clc
mov
int
push
add
sub
les
test
loop
cmp
fnstenv
popa
repnz
testl
jmp
add
jge
dec
in
xchg
push
jmp
inc
lock
adc
rcrb
cltd
xor
lock
mov
jle
ja
sbbb
cmp
in
repz
adc
pop
loop
adc
mov
aad
cwtl
push
nop
cli
insb
add
adc
lds
rcrl
fstps
xchg
bnd
push
mov
mov
push
or
jl
jp
aas
cli
jl
lcall
and
dec
fistpll
or
repz
pop
hlt
popa
adcb
mov
imul
aad
rcl
cld
mov
sti
cli
pop
lock
adc
call
jp
pop
xchg
cmp
sbb
out
loope
cmp
mov
and
cs
aas
and
out
test
pop
hlt
dec
and
scas
mov
adc
movsl
cltd
xor
into
data16
aam
mov
sbb
insl
mov
int3
hlt
mov
fistl
test
mov
xor
fucomip
orl
lock
scas
dec
bnd
repz
sub
ret
dec
jp
sbbb
xchg
shrb
cwtl
mov
xchg
mov
sti
push
movsl
sub
inc
sub
mov
ljmp
xchg
sbb
push
ss
rcll
pop
xchg
mov
push
pop
inc
imul
pop
cmp
test
ret
push
stos
shrl
das
jnp
dec
cld
add
adc
mov
lods
mov
aad
sub
insb
or
loop
and
mov
imul
push
mov
add
xchg
sub
cli
ret
mov
add
ret
mov
xor
and
aas
test
cmpsl
pop
lods
pop
mov
lds
jnp
sub
sub
cltd
xchg
ljmp
xor
call
dec
pusha
push
popf
inc
popa
dec
loopne
fs
lods
inc
enter
outsl
xor
filds
sbb
stc
stc
lret
cmp
jecxz
pop
je
ret
popf
sahf
xor
dec
push
xchg
xchg
popa
mov
sbb
aad
call
shl
out
and
dec
or
test
movsl
cs
ja
xchg
sub
mov
mov
insb
push
adc
shrl
ds
xor
sub
xchg
cmpsl
movsl
mov
pop
pop
call
insl
aas
sbb
hlt
mov
je
or
in
mov
adc
aas
cmpsb
cmp
dec
push
pop
hlt
jl
iret
data16
xchg
jnp
scas
adc
test
mov
enter
test
shrl
ret
into
mov
in
dec
filds
push
shlb
sub
outsb
das
cld
xchg
jne
test
fstpl
mov
iret
das
inc
rclb
push
in
loop
fidivs
push
test
stos
cld
xchg
jmp
mov
movsl
pop
pop
mov
pop
jno
ret
je
into
gs
adc
xchg
movsb
out
push
mov
sbb
iret
popa
movsl
cmp
mov
mov
enter
shl
or
and
mov
jecxz
sbb
push
xlat
cmp
cmc
sub
pop
icebp
gs
sbb
ud1
shrb
xchg
sub
loope
mov
sbb
push
imul
mov
jae
xchg
sub
pushf
into
gs
mov
push
imul
subl
loop
push
inc
or
or
mov
add
fidivs
cmp
dec
fwait
gs
ret
imul
in
sbbl
nop
push
cmp
jb
push
js
push
js
nop
daa
aam
fnsave
mov
xchg
sub
fidivl
inc
sbb
pop
xchg
aaa
into
or
and
push
jmp
jg
or
leave
cmpsb
cmp
and
pop
inc
pop
rcrl
loop
cltd
and
data16
add
outsl
out
push
mov
mov
mov
cmp
shl
pop
icebp
mov
pop
out
nop
mov
jbe
pop
add
jno,pn
movsl
cmp
lcall
in
shrl
add
push
aaa
icebp
mov
icebp
mov
push
xsha256
cmpsb
adc
sub
sti
rorb
pop
push
pop
repz
imul
leave
adcb
int3
divb
cmp
inc
mov
mov
shrl
xchg
adc
popf
lock
or
in
stos
cmp
sub
add
fisttpl
add
lods
mov
test
iret
mov
jp
std
xlat
outsb
js
add
push
sub
mov
jp
stos
mov
cmp
fdivs
fistps
dec
push
insl
add
imul
mov
and
aad
test
dec
ret
pop
ljmp
jge
xchg
repz
add
inc
outsl
adc
pushf
fistpll
mov
inc
xlat
pop
hlt
jp
pop
cmc
in
addr16
push
adc
aas
test
xchg
fwait
xor
mov
dec
cmp
outsb
jnp
shrl
xchg
cmc
mov
es
xchg
cmp
stos
outsl
and
xor
ror
cmp
std
stc
sti
sbb
popf
adc
lds
stos
jle
jecxz
into
jbe
fcmovne
push
push
cmc
xchg
sub
mov
push
lcall
ret
daa
les
in
xchg
in
mov
jns
add
add
ret
fistpl
mov
in
inc
fsubl
cmp
push
test
sbb
jae
mov
xlat
xchg
sub
mov
mov
mov
jp
sti
out
sub
jmp
mov
push
lcall
mov
leave
push
out
sbb
sub
cmp
lds
xchg
sub
out
stc
nop
and
mov
popf
cmc
scas
sbb
inc
push
cmp
cmp
aam
pusha
push
call
loope
jl
mov
xchg
sub
push
in
sub
xchg
fnstcw
shlb
mov
inc
jns
int3
arpl
movsb
repnz
lock
and
scas
jl
xor
ja
sub
int
dec
jecxz
out
push
in
pop
jmp
mov
push
add
loope
pop
mov
imul
ljmp
inc
int
jb
cmp
cmpsb
jne,pt
mov
pop
mov
pop
xor
orl
push
loop
inc
outsb
fwait
and
sti
jno
jne
test
jns
bound
lret
les
mov
movsb
dec
push
xor
push
inc
imul
lods
js
cs
xor
adc
mov
push
mov
mov
or
je
int
jg
int3
decb
mov
cli
xchg
lcall
outsl
fwait
je
jl
mov
in
xchg
lock
into
or
pop
insl
jecxz
out
inc
test
icebp
cmp
cmpsb
mov
cwtl
inc
test
inc
cmpsl
jg
dec
xchg
add
lcall
pop
jp
xchg
cmp
in
hlt
jp
popa
subl
jmp
lea
insl
scas
je
inc
stos
cmp
inc
mov
push
neg
sub
push
cwtl
pushl
mov
xchg
xor
lods
mov
stc
cmc
sub
movb
mov
daa
cmp
xlat
sub
and
jbe
fptan
add
ds
clc
in
loopne
inc
sub
es
aaa
push
popa
mov
mov
or
enter
aad
xor
idivl
in
out
sbb
xchg
aad
mov
xchg
pop
std
jp
push
dec
mov
push
adc
or
in
int
inc
inc
cltd
jb
inc
or
int3
inc
fstps
add
gs
mov
mov
aaa
scas
push
mov
ja,pn
xor
mov
add
sub
cwtl
mov
xor
sub
mov
cli
addr16
cmp
inc
ss
push
shl
aaa
lea
dec
push
cmpsl
and
xor
push
jmp
mov
icebp
test
mov
mov
cmp
jg
and
mov
push
cld
shrl
aam
mov
sti
cmp
shr
mov
stc
les
notl
adc
jecxz
movb
pop
loope
lcall
add
xchg
shr
test
push
xchg
xlat
push
push
fstps
lcall
sti
mov
lahf
and
mov
xchg
mov
fcmovne
push
fwait
jnp
add
aad
jl
imul
and
sbb
xchg
movsb
int3
loope
xlat
cmp
mov
aad
nop
call
cmp
push
mov
ss
pop
out
jb
xchg
in
pop
dec
push
or
adc
or
std
or
leave
mov
cmp
push
jg
dec
or
fwait
xor
mov
in
xchg
icebp
mov
outsb
add
push
push
jmp
pop
jl
mov
or
dec
mov
mov
xchg
push
jle
mov
fadd
outsb
jg
das
push
aaa
sub
mov
mov
jnp
mov
dec
jle
or
pusha
mov
and
lods
sbb
push
dec
mov
sub
xchg
mov
xchg
pop
cmp
mov
jno
call
or
add
dec
test
xchg
rcrl
roll
cmp
jg
mov
lods
fwait
fwait
idiv
mov
rorl
cwtl
pop
push
sbbl
cld
xchg
pop
adcl
mov
add
int3
das
insb
jbe
icebp
loopne
pop
cmp
cmp
or
popa
cmp
jg
imul
xchg
pop
iret
mov
imul
data16
xor
add
scas
xor
test
jns
pop
jle
arpl
add
jp
jnp
adc
sbb
fnstenv
sub
test
mov
adc
push
pushf
shrb
jecxz
daa
sub
jmp
iret
adc
stos
decb
add
nop
mov
insb
push
push
jp
push
xor
mov
inc
ret
ret
and
cltd
or
daa
add
fsubrl
dec
rcll
iret
add
cmp
cltd
xor
pusha
inc
xchg
inc
pop
jl
lret
test
out
stc
cmp
and
iret
sub
cmp
imulb
aad
ret
lret
push
mulb
shll
decb
mov
add
aad
dec
loop
into
das
std
add
sub
subl
fcomp
push
mov
faddl
into
cmp
mov
andl
sbb
out
scas
cmpsb
xchg
jmp
movsb
out
lret
and
mov
outsb
int3
push
jae
idivb
pop
ja,pt
cmp
xor
nop
push
ficoml
inc
xchg
movsb
dec
dec
hlt
fs
imul
divl
lds
in
adc
stos
mov
adc
loop
stos
movsl
stc
xchg
xchg
jp
cmpsb
mov
into
sbb
sbb
scas
mov
enter
subb
out
into
inc
mov
cmpsb
inc
shll
fsubs
cltd
jge
jp
lret
cmc
lock
addb
pop
sahf
in
push
xor
adc
push
jnp
out
push
es
ret
jmp
iret
lret
push
into
jne
fldl
pushf
stos
lds
adc
sti
xchg
insl
xor
jmp
in
ss
push
cmpsl
pop
pop
mov
sbbl
lods
loopne
xchg
out
adc
sub
dec
pushf
popf
or
pop
cmp
or
mov
mov
dec
pop
sub
je
enter
cmp
jae
in
sbbl
add
lods
adc
mov
les
sub
mov
aas
push
fninit
xchg
or
push
xchg
insb
pusha
enter
push
insl
imul
pop
jb
mov
cltd
cwtl
and
inc
sub
shrl
call
mov
leave
inc
pusha
cltd
rep
iret
ja
cmp
pusha
cmp
mov
xor
les
mov
fwait
mov
cmp
and
jo
cmc
mov
cmp
dec
movsb
xor
push
mov
loope
cmp
sbb
add
bound
ret
outsl
jmp
rolb
clc
sub
mov
and
rorl
js
aad
mov
loop
mov
cmp
xchg
addr16
xchg
movsb
cmc
add
adc
fnstcw
mov
sub
cmpsl
dec
mov
jmp
xor
xor
lret
add
push
add
into
shl
lahf
orl
mov
push
ljmp
ret
lret
ljmp
push
mov
sbb
movsl
loope
dec
or
lcall
ljmp
int
push
jo
rol
cmpsb
fidivrl
cmp
jge
xor
hlt
jno
sub
or
mov
mov
lret
mov
mov
sbb
pushf
xchg
stos
bound
int
int
jnp
mov
add
lahf
test
in
cmp
xchg
ficomps
sub
les
push
push
jl
inc
push
jne
mov
addr16
lret
or
pushf
mov
call
mov
repnz
into
push
iret
and
dec
jl
loope
in
or
fcoml
pusha
cs
mov
and
dec
push
je
insl
mov
jp
lea
fwait
inc
fisttpl
jg
aad
dec
lock
nop
sub
addl
cmp
mov
lret
xor
xchg
inc
mov
cmpsl
jns
fwait
sub
jne
pop
leave
pushf
pop
and
cs
fcomps
push
jl
push
testl
adc
sarb
pop
jecxz
jns
test
stc
addl
pop
lcall
addr16
arpl
or
out
cli
shll
mov
adc
fdivrs
mov
jle
out
ss
repz
scas
out
xchg
xor
movsb
xor
jae
inc
sbb
xor
jle
mov
adc
pop
inc
cld
mov
push
cmp
stc
addr16
je
ret
addb
cmpsb
mov
ds
fcompl
fistps
push
adc
mov
aas
out
pop
cwtl
xorb
cwtl
cmpb
mov
push
ret
push
adcl
cmp
orb
sbb
sbb
push
push
mov
fimuls
jns
ja
mov
pop
cmp
mov
decb
or
xor
sbb
iret
ljmp
fcos
mov
jae
js
cld
ss
push
push
xlat
not
dec
push
aaa
into
inc
ret
cmpsl
and
hlt
lahf
sub
out
sbb
and
test
mov
xor
outsb
sbb
jae
pop
popf
sbb
mov
lahf
push
es
out
fwait
push
cmpsl
nop
xchg
add
roll
mov
std
data16
test
pop
adc
loope
in
jp
dec
cmp
jo
adc
adc
movsb
mov
test
addl
js
jecxz
fstpl
lods
sti
scas
mov
add
pop
sub
xlat
and
loopne
leave
push
pushl
sub
sarb
inc
xchg
or
push
and
cmpsl
pop
push
int
mov
sub
les
dec
roll
and
dec
repnz
iret
mov
jno
je
push
jne
and
xor
inc
pop
push
pop
mov
testl
out
lods
outsl
lahf
and
int3
jbe
ret
push
lock
hlt
popf
mov
mov
or
daa
out
imul
jmp
mov
mov
cmpl
dec
insl
dec
das
fnstsw
pop
das
and
mov
cltd
decl
cs
adc
cli
xchg
ret
rcll
jmp
inc
je
fnstenv
and
jmp
call
inc
lods
cmp
or
pop
xor
cmp
push
jne
cmc
in
mov
cmp
test
pop
xchg
lds
packuswb
cmp
or
push
hlt
mov
lods
aad
addr16
cmp
iret
mov
jle
sarb
lcall
jmp
scas
leave
jl
push
sub
es
push
lds
mov
add
xor
xlat
cmp
push
fldz
dec
push
pushf
stos
shr
push
sbb
mov
mov
rcll
bound
in
std
push
push
push
sub
rol
ret
rcll
push
xchg
push
shlb
mov
dec
call
adc
sbb
xchg
loopne
sub
aad
adc
adc
sub
dec
ret
imul
lcall
roll
ljmp
xor
je
mov
fldl
lret
cmc
jp
out
in
cmp
xor
hlt
mov
stos
mov
mov
sub
int3
or
push
shrb
push
nop
mov
dec
repnz
jecxz
setg
add
push
fisttpl
mov
mov
rcl
cwtl
add
add
or
cmpsl
in
out
mov
aad
jo
push
fwait
jbe
rolb
dec
mov
xchg
mov
out
xor
jecxz
mov
cmp
pop
pusha
ds
cmc
leave
add
cs
push
repz
stos
ret
bound
test
ror
int
xchg
jne
adc
in
jmp
lea
hlt
movsl
aad
bound
cli
ss
pop
cmp
or
pop
mov
mov
xchg
xchg
jge
mov
mov
or
push
xchg
mov
ljmp
inc
jbe
js
pop
xlat
loope
jp
imul
enter
clc
add
jne
cld
cmp
lods
std
or
cmc
je
loope
push
dec
dec
add
sarb
test
dec
cmp
mov
adc
cmp
xchg
cmp
nop
sub
jle
xchg
push
das
jb
dec
add
lea
stc
and
add
aad
jle
lea
jge
inc
scas
cs
movsl
adc
pushf
xor
sti
and
xchg
sbb
mov
pop
mov
inc
aaa
aad
jns
loope
subb
in
faddl
test
xorl
inc
mov
dec
je
test
and
aaa
sub
mov
inc
push
mov
ss
mov
xor
mov
pop
jle
add
rclb
xchg
push
cld
jne
mov
jmp
pop
xchg
push
sbb
ficoms
lds
or
and
mov
jmp
ret
jae
cmp
pop
jbe
pop
shrl
mov
rcrl
inc
stc
or
adc
ja
sub
mov
popa
cmpb
bound
in
not
pminsw
notb
sub
shrb
sbb
les
je
sbbl
jmp
hlt
outsb
aam
les
iret
imull
adc
mov
rcl
fidivrs
pusha
scas
adc
sbb
int
or
in
cmp
fstl
inc
mull
xor
je
pushf
push
sarb
pop
mov
cwtl
icebp
xor
pushf
jge
stc
dec
mov
fsubrs
cmpsb
and
add
cltd
xchg
mov
ja
xor
or
rorl
dec
sbb
insb
adc
adc
xchg
xor
pop
stos
out
sahf
pop
idiv
inc
push
fstpt
or
fildll
iret
fcmovu
mov
fs
add
iret
mov
popf
repnz
sbb
mov
mov
mov
mov
mov
stos
daa
shlb
mul
mov
and
in
or
xlat
sbb
cld
lds
add
jnp
pop
pop
jl
add
sub
sbb
fisubs
sbb
push
or
cmpb
mov
add
sub
jno
xchg
icebp
mov
push
mov
push
mov
add
mov
mov
dec
xor
das
cmc
lret
and
test
or
cli
push
xor
push
xchg
out
rorl
xor
jl
xor
hlt
int
test
popf
lds
xor
call
ja
loope
clc
repnz
outsl
mov
push
shr
lret
jae
popf
test
mov
mov
adc
ret
rcr
fs
xchg
test
mov
and
loopne
sub
sti
mov
adc
inc
insb
add
adc
xchg
or
scas
popfw
loop
repnz
sbb
cwtl
add
sbb
popf
jae
aaa
push
dec
ret
rcrb
dec
icebp
dec
popf
mov
mov
inc
dec
mov
cmp
pop
adc
mov
xchg
cmp
jecxz
fdivrs
add
ja
adc
jmp
hlt
xchg
cmp
mov
std
pop
mov
jo
cmp
jnp
pusha
xlat
mov
sub
xor
cmp
nop
out
in
cmp
adc
xchg
pop
pop
xchg
push
mov
mov
xchg
arpl
sub
fmuls
cmpsl
imul
push
xchg
leave
popa
repnz
cmp
fwait
push
shrl
gs
mov
mov
pop
sbbb
lods
xlat
mov
jns
pop
js
mov
js
je
int
shlb
hlt
cwtl
cmp
pop
mov
outsb
mov
mov
lret
jnp
adc
pushf
rcrb
sahf
shlb
jnp
out
sar
and
push
jl
add
dec
jmp
push
lods
sbb
xchg
imul
stc
movsb
stos
lahf
xchg
fsubr
aas
jle
fistps
xchg
push
cmp
imul
and
pop
sbb
pop
mov
dec
jle
ret
test
dec
negb
enter
fcomps
sti
mov
xchg
test
bound
in
add
inc
rorb
ret
lcall
push
cmp
adc
lods
adc
xchg
push
mov
fimuls
adc
je
ljmp
loope
jb
inc
les
cli
push
insb
or
sub
xor
lcall
fldt
out
sub
cs
fcmovne
jne
jns
add
ret
cmp
sub
pop
dec
xchg
sbb
mov
sbb
mov
insb
cld
adc
mov
dec
out
add
adc
in
push
das
adc
xor
test
xchg
aaa
mov
cli
inc
push
jno
repz
dec
adc
ss
xchg
inc
and
xchg
imul
sahf
sbb
ret
jno
sti
cmp
xchg
out
jp
pop
cmp
in
or
sbb
mov
lock
xchg
sbb
fsubl
leave
xchg
jnp
repz
push
out
adcb
mov
add
sarb
inc
mov
mov
in
and
sbb
popf
jae
push
ror
add
jle
jecxz
flds
jne
ret
addl
das
sub
fmulp
jl
mov
dec
add
fidivs
fcomps
mov
push
xlat
xor
inc
and
jge
pop
test
aas
iret
bound
loop
jne
mov
testl
arpl
xor
push
sbb
xchg
pop
adc
mov
pushf
push
pushf
dec
shld
or
lea
cmp
xchg
mov
jae
out
bound
mov
movsb
cmpps
xchg
push
push
push
mov
xchg
pop
push
cmpsb
sti
xchg
mov
sbb
xor
push
mov
jl
dec
cmp
or
mov
pop
ja
idivl
xlat
sbb
loop
mov
movsb
dec
lret
ja
icebp
dec
xorl
jno
dec
adc
pop
or
out
andl
adc
xchg
jbe
ret
sarb
cmpsl
fnclex
cs
repnz
cli
sub
aad
jmp
push
sbb
jmp
adc
jb
test
push
sbb
jg
push
sahf
mov
lea
mov
and
jb
push
fistpl
sti
xor
shlb
mov
inc
pusha
pop
scas
cmp
jmp
dec
out
xchg
push
or
push
sbbb
cmc
fistpl
pop
int3
lods
fsubl
and
cs
movsl
pop
mov
pop
outsl
sub
mov
sbb
stos
xchg
jnp
sub
inc
inc
cmp
stc
push
and
push
jno
xchg
ret
loope
push
add
movsb
call
mov
push
movsl
iret
xor
xor
pop
mov
mov
out
and
das
jae
addl
out
cs
cwtl
push
sbb
sbb
xor
dec
dec
adc
mov
daa
cmc
mov
cs
inc
mov
xor
inc
in
addr16
les
add
cmp
add
adc
jne
or
insb
pushf
test
movsl
jo
pop
fstpt
call
push
shrl
xchg
xor
inc
fsubs
movsl
cltd
clc
or
out
add
in
xchg
push
out
lret
mov
mov
xchg
fadds
dec
sbb
sbb
dec
mov
fildll
cmc
add
imul
mov
shl
push
popf
shrl
sbb
sbb
push
and
dec
inc
scas
pop
add
lds
imull
or
or
mov
inc
imul
dec
jge
jmp
lret
das
cmpsb
xor
adc
jbe
xchg
ffree
sbb
pop
jnp
jb
jp
lds
xor
insb
dec
cmpsl
outsb
enter
not
xchg
add
sbb
and
adcl
data16
orl
jecxz
jne
dec
popf
cli
pop
shrb
addl
in
cld
fisubs
mov
mov
ja
pop
push
divl
mov
xlat
push
adc
dec
xlat
or
popa
orl
inc
lcall
add
sbb
nop
cmp
bound
test
lea
out
lahf
cwtl
loopne
sbb
cmp
cmp
shlb
lea
addl
mov
mov
mov
adc
adc
jno
xchg
inc
mov
nop
sahf
pop
repnz
daa
mov
in
gs
or
sub
out
loope
cmpsb
mov
adc
ljmp
inc
lret
in
push
lds
adc
or
movl
in
and
jecxz
dec
gs
aas
les
add
xchg
ds
add
inc
sbb
xor
xlat
push
sbb
cmp
aad
sub
mov
test
xor
add
mov
mov
mov
bound
pop
in
or
sub
sub
lods
pop
inc
xor
or
gs
movsl
cmp
mov
pop
jb
mov
sbb
dec
xor
data16
lock
vmovntdq
gs
dec
cmp
pop
les
push
xchg
jne
idiv
test
jo
adc
jg
movsl
and
dec
push
cmp
aas
xor
dec
je
pushf
mov
inc
mov
pop
and
call
add
insb
ljmp
pop
jl
add
popf
cmp
in
in
out
or
sub
xchg
mov
iret
cltd
pop
add
test
push
cmp
aas
xchg
dec
jge
mov
mov
pop
mov
int
inc
mov
lods
xchg
in
push
insl
ficompl
imul
lock
sti
cld
fcmovnu
aam
popf
and
and
fcoms
lea
scas
bound
jno
xchg
mov
insb
call
cmpl
push
adc
scas
lcall
pop
pop
jecxz
inc
dec
loop
int3
fwait
mov
loopne
xchg
sahf
cmovo
inc
cs
aas
mov
lret
or
push
ljmp
pop
and
dec
mov
arpl
mov
cmp
or
jge
mov
loope
ret
inc
imul
xchg
lods
mov
xor
sbb
xor
rorl
jmp
sbb
jae
outsl
push
mov
movsb
fnstsw
ja
and
jb
cmp
fstpl
loopne
inc
xchg
mov
jo
mov
popf
js
pop
inc
dec
or
mov
scas
out
pop
sti
mov
cmpsl
push
pop
pop
push
pushf
mov
xor
fcmovne
push
pop
in
sbb
inc
out
cmp
add
int3
test
out
xchg
cli
test
mov
pop
cmp
mov
mulb
inc
xor
and
add
pop
mov
xchg
pusha
int3
loop
xchg
loop
nop
cmp
xor
jo
xor
inc
lret
pusha
es
lods
pinsrw
fcomip
out
push
xor
rcrb
pop
xchg
dec
pushf
jl
or
or
js
add
lret
xor
cld
cmc
out
insb
xor
inc
sbb
cld
dec
jb
loope
test
xacquire
pop
aad
nop
xchg
inc
pop
loope
xchg
push
mov
xchg
cmp
pop
mov
pushl
mov
jne
mov
sbb
and
ss
add
or
outsb
jo
inc
xchg
adc
adc
pop
out
jns
cwtl
cld
inc
mov
adc
loop
dec
mov
leave
hlt
mov
scas
scas
loope
leave
aas
mov
mov
and
mov
push
xor
cmpsb
in
jg
pop
push
or
cwtl
popf
in
shlb
clc
fldl2t
pop
sti
add
stos
inc
add
adc
lock
or
aad
lcall
aas
pop
popa
pop
outsb
adc
ss
sub
jbe
sbb
ss
lock
or
adc
pop
and
push
imul
inc
inc
jno
lods
mov
mov
jmp
xchg
out
loope
fimuls
sub
xor
ret
out
orb
in
in
mov
fildl
sbb
pop
sbb
lcall
adc
test
cli
iret
and
or
mov
ret
xor
push
xlat
jmp
mov
test
testb
xor
sbb
leave
xor
clc
bound
test
pop
cmp
mov
push
leave
mov
adc
xlat
xor
inc
xor
ret
jbe
pushf
je
out
jg
pusha
xchg
pusha
mov
js
cmp
test
pop
or
pop
push
xchg
add
sub
lods
mov
test
xor
enter
sub
add
aam
xor
pop
and
adc
xchg
and
or
xchg
data16
cmpsb
fdivl
mov
pop
sub
fs
push
inc
lret
mov
int
aaa
pop
cmc
enter
nop
in
lock
jno
mov
mov
aam
pushf
mov
stos
dec
xchg
xor
mov
jmp
call
mov
and
and
jbe
cmp
xor
mov
scas
ret
sbb
test
movsb
or
cmc
jae
sub
xor
jns
xlat
pop
test
dec
mov
addr16
out
add
jecxz
pop
push
push
mov
int3
mov
pop
pop
pop
icebp
or
inc
ss
cmp
jge
pop
mov
lcall
lret
je
sarl
lods
mov
sbb
sahf
pop
lds
das
loopne
imul
cmp
xor
mov
mov
repz
sub
mov
inc
sbb
mov
cmp
cltd
fisubrl
and
dec
int
loope
sbb
iret
data16
mov
sub
hlt
pop
nop
shll
or
jle
sub
shll
out
xor
loopne
cmp
mov
dec
mov
shll
shrl
rclb
adc
mov
ja
mov
and
xchg
or
push
jnp
xor
xchg
not
jns
push
mov
lea
out
data16
aaa
dec
mov
outsl
mov
lcall
insb
popf
scas
mov
jecxz
pop
sub
inc
stos
mov
sti
xor
push
and
in
mov
out
les
xchg
es
les
xchg
rol
mov
sbb
movsb
fdivrl
lods
push
jp
outsb
xor
leave
aam
jnp
push
mov
inc
and
lods
test
cmp
push
sbbb
and
outsb
movsl
loopne
stos
sbb
insb
mov
dec
out
add
add
push
cli
jg
test
das
pop
and
xor
cmpsl
fdivs
pop
ret
outsb
jae
inc
jbe
scas
xchg
xor
andb
mov
adc
xchg
mov
outsb
jecxz
sub
jno
mov
inc
xchg
addr16
mov
insl
stos
jae
dec
push
or
adc
adc
sub
xchg
pop
jecxz
in
xchg
in
xor
inc
lea
jae
push
add
lcall
or
js
mov
lds
test
cmpsb
push
sub
xor
mov
and
cwtl
movsl
ljmp
jo
ret
cmp
xchg
cmp
in
test
and
and
out
jecxz
xor
loope
sub
enter
push
data16
lods
sti
cmpsl
dec
add
jb
xchg
jb
add
mov
mov
adc
loop
addl
and
mov
rcll
test
dec
mov
lahf
stc
sbb
jb
sub
fwait
and
addr16
cmp
adc
sbb
dec
repz
and
mov
push
dec
imul
jle
sbb
or
fldcw
mov
adc
sub
aas
stos
sbb
inc
ret
pop
jl
out
hlt
jnp
ret
fimuls
notl
sbb
mov
or
sub
sub
mov
sub
mov
rolb
sti
jecxz
pop
into
pop
daa
adc
cmp
mov
js
xor
enter
shlb
push
or
mov
inc
shrb
add
jae
ficoml
inc
or
adc
sbb
dec
mov
dec
or
xchg
inc
jle
xor
pcmpgtb
adc
int3
loop
dec
popf
mov
pop
push
incb
jmp
mov
mov
mov
loop
mov
mov
cmp
sub
mov
xchg
ret
jne
aam
dec
mul
or
or
mov
pop
rol
adc
jne
imul
fs
xchg
xchg
mov
sbb
inc
or
sarb
arpl
out
mov
jbe
fisttps
out
cmp
xchg
sub
pop
push
popf
lea
inc
test
int3
arpl
add
xor
out
sub
cld
test
jge
jg
xlat
sahf
es
sub
inc
xlat
and
jle
pop
lock
fnsave
jl
repnz
xchg
adc
mov
and
and
aaa
into
mov
into
gs
push
in
add
in
andl
mov
stos
xchg
daa
mov
std
jmp
shrb
cmp
insb
jb
mov
adc
xor
sbb
leave
dec
xor
in
fwait
xchg
jae
mov
add
inc
sub
scas
pop
arpl
ret
mov
out
or
jle
and
push
pop
cli
xchg
je
and
test
into
xor
enter
push
in
test
jge
cmpsb
jae
fadd
add
icebp
stc
xchg
sub
adc
mov
jle
inc
fcoms
mov
imul
bnd
and
jle
cmp
pop
sahf
jbe
popf
xor
xchg
and
ljmp
std
xor
push
mov
mov
jmp
pop
out
adc
jp
imul
orl
jne
mov
sub
nop
daa
insl
dec
cmp
inc
mov
aam
and
std
xchg
arpl
std
xchg
mov
loopne
and
daa
mov
adc
addb
xchg
pop
push
loope
push
sbb
xchg
sub
gs
gs
jg
xchg
jae
loope
sbb
sbb
adc
gs
lods
rol
cmp
loope
xchg
sbb
and
mov
data16
mov
ret
sti
loope
jo
sbb
cmp
cli
mov
shll
cli
loope
xchg
sbb
lret
inc
cmp
and
and
lahf
xchg
rol
stos
stc
loop
rcrb
gs
inc
cmp
push
data16
lahf
xchg
rol
jl
loope
push
sbb
jno
cmp
sbb
cmpsb
cmp
rol
inc
cld
loop
test
push
cmpsl
ds
cmp
xchg
imul
mov
jle
loop
aam
adc
sahf
dec
cmp
jae
push
std
xchg
xchg
rol
mov
cli
in
loope
sbb
and
pop
xor
addb
mov
loop
or
push
movsl
daa
ds
xlat
addr16
pop
bnd
lods
inc
mov
sbbb
rcll
out
xlat
outsb
sbb
test
arpl
pop
mov
les
fistpll
mov
sub
mov
mov
bound
and
enter
test
aam
movsl
jbe
fisubrs
rolb
mov
add
cmpsb
jne
lods
scas
movsl
cmp
sarb
or
jo
pop
sub
shlb
enter
shl
jge
adc
in
dec
sub
dec
push
outsb
cmpsl
ds
ja
xorl
add
jnp
sub
insl
add
js
xchg
ret
inc
frndint
hlt
shrl
push
sub
inc
dec
sbb
ja
push
out
xchg
xchg
daa
mov
jmp
mov
sbb
lahf
ss
mov
add
loopne
dec
sbb
push
jmp
cmp
addb
arpl
loope
xchg
sbb
out
xchg
cmp
xchg
sub
les
xchg
out
shl
xchg
cs
cmp
sub
add
jg
ja
scas
inc
rcrb
or
ds
imul
sbb
mov
fbstp
shrl
or
je
cvtpi2ps
jnp
xor
outsb
imul
scas
mov
mov
insb
add
fsubrs
add
push
push
and
fistpl
je
mov
daa
mov
or
sub
in
orl
mov
les
lock
pushf
xor
int3
arpl
jnp
xchg
imul
xchg
mov
push
out
mov
jecxz
adc
push
or
cmp
xchg
xchg
pop
lret
bound
mov
or
dec
std
mov
es
push
xchg
inc
cld
xchg
xorb
ficoml
jl
dec
sti
fdivl
insb
stos
inc
xchg
inc
dec
loop
mov
adc
sahf
sbb
enter
dec
jmp
sti
xchg
cltd
xor
mov
mov
mov
mov
mov
pop
mov
bound
jl
rorl
ret
pop
sub
dec
loop
dec
jl
js
adc
imul
cld
xchg
and
add
cmovb
stos
jl
mov
imul
fwait
mov
xchg
sub
fmul
bound
xor
in
pop
nop
mov
lret
orb
jmp
adc
and
push
aaa
repz
lret
bound
cld
xchg
movl
daa
mov
jbe
xor
sbb
scas
jecxz
mov
rcrl
loope
sub
cmpsl
movl
sti
xchg
cmovae
xorl
mov
xchg
dec
in
mov
scas
mov
loope
fcoms
cmp
jo
jae
jno
and
lret
daa
int3
jmp
push
adc
aaa
sbb
jo
sub
lret
andl
in
push
jmp
fiadds
sbb
xchg
cs
mov
dec
lods
fcoml
cld
sub
push
pop
sbb
enter
cld
xchg
mov
rcrl
sbb
xchg
dec
push
inc
faddl
test
gs
xchg
mov
jns
jmp
or
push
xchg
rclb
xchg
sub
mov
ret
adc
cwtl
dec
pop
leave
pusha
mov
mov
fistpll
pop
test
adc
inc
dec
ss
jo
push
stos
lahf
fs
les
xor
dec
xor
arpl
push
mov
mov
das
mov
add
das
push
repz
pop
dec
fadds
stos
pop
out
fmul
mov
repnz
imul
pop
inc
ja
jge
fldcw
xchg
cmpsb
inc
into
fsubrp
ja
in
jb
sub
mov
data16
iret
lods
mov
shlb
frstor
add
sub
ss
arpl
sahf
jnp
dec
cmpsl
mov
or
lret
mulb
sbb
fsubrl
popf
sub
fisubrs
movsl
out
mov
aam
jl
pop
movsl
pop
bound
lret
xlat
outsl
imulb
call
sub
mov
mov
and
leave
or
lods
aaa
out
hlt
sbb
mov
push
cmp
xchg
out
sbb
fistpl
sub
push
test
jo
hlt
xlat
push
adc
and
jbe
push
adc
rolb
rcll
repnz
fs
aad
sahf
jnp
mov
push
jecxz
shrb
cld
stc
xorb
or
aas
pop
jg
daa
xchg
lods
dec
scas
scas
les
aad
pop
add
cmc
test
cmp
insl
pop
dec
and
jge
mov
in
sti
in
test
and
sbb
jnp
mov
shl
xchg
add
rsm
push
sbb
jo
mov
mov
mov
fcoml
fnstsw
loope
cmp
inc
dec
jmp
push
lods
inc
jp
jle
fisttpll
outsb
or
cld
adc
sbb
or
fs
cmp
fnstenv
ret
cmc
es
dec
insl
or
inc
xchg
ficomps
jl
and
mov
jb
aaa
xchg
addr16
stc
xchg
sub
movb
push
repz
jae
pop
sti
test
es
dec
fwait
push
mov
mov
mov
pusha
lret
lret
stc
sbbb
sbb
fistpl
jne
adc
and
addr16
jp
xchg
lcall
lock
sbb
test
cmp
lods
popf
mov
mov
int3
mov
or
ss
aad
cltd
xlat
data16
push
jecxz
int3
add
xor
ds
push
inc
mov
nop
outsl
bound
test
lods
dec
in
xchg
and
sbb
ret
jno
push
lret
js
lea
stos
push
fwait
loope
hlt
test
sbb
shrl
les
mov
push
ffree
xorb
call
mov
push
xchg
loop
rorl
mov
push
sub
fstps
push
in
push
mov
mov
fstl
xor
xor
push
test
lret
cld
loopne
or
call
pop
jno
mov
lods
ret
inc
into
and
inc
and
test
push
outsl
push
movsb
mov
in
test
push
int
inc
sbb
xchg
imul
mov
and
mov
test
cmp
cmpsl
ds
pop
lds
ret
pop
xchg
lods
out
fidivs
add
cmp
pop
or
aam
or
daa
add
xor
xchg
jp
add
jae
test
mov
pop
std
inc
fsubrs
ds
das
jo
pop
idivb
dec
leave
xchg
jge
out
imul
fwait
xor
and
mov
push
pop
test
cmpsl
mov
xlat
outsb
jno
lds
hlt
mov
inc
inc
fidivrs
adc
fidivs
mov
sbb
lret
mov
inc
mov
cltd
xor
lret
fadds
push
shlb
push
out
push
mov
test
add
pop
inc
mov
cmpsb
out
ret
enter
push
shrb
sub
add
mov
adc
hlt
adc
or
push
ljmp
jb
sahf
jp
fsubrs
iret
pop
out
pop
push
ret
pop
imul
mov
mov
push
into
outsl
adc
lahf
jmp
insb
sbb
das
into
jmp
ljmp
jb
push
jmp
xchg
out
xchg
push
mov
rcll
xor
les
push
push
out
je
aam
xchg
adcb
out
xchg
xor
xchg
sub
push
adc
test
iret
popw
fstps
adc
lcall
or
sbb
lea
sub
jge
pop
inc
add
movsb
pusha
push
lcall
jl
leave
cwtl
sub
push
lcall
mov
dec
and
sahf
xor
hlt
cltd
mov
inc
jl
out
das
bound
ficompl
es
into
inc
adc
jno
xchg
inc
jp
cmp
sub
ds
dec
pop
insb
dec
sbb
or
out
in
andl
adc
lea
stc
fwait
push
add
test
xchg
sub
mov
cli
inc
sbb
popa
lea
push
jne
in
test
pop
and
jne
jbe
in
add
push
jne
jnp
or
mov
adcb
wrmsr
movl
dec
jecxz
cmp
push
outsb
mov
add
fsubrs
pop
mov
cmp
lock
jb
lea
mov
loopne
jne
mov
fnsave
and
mov
and
jae
movsl
or
cmp
mov
clc
pop
xchg
sub
mov
sub
insl
xchg
sub
xor
es
mov
in
cmpsb
movsb
cmp
jo
int3
stos
or
ss
push
aad
jle
dec
test
mov
lea
cmp
and
jno
xchg
lods
jne
loopne
mov
pop
lret
pop
clc
jl
fs
mov
mov
sbb
or
frstpm(287
pop
dec
dec
jle
sbb
or
inc
pop
dec
lods
mov
pop
sub
pop
repz
call
mov
ss
jmp
cmpsb
push
mov
in
mov
xchg
mov
adc
ret
movsl
or
adc
sub
xor
inc
stos
and
inc
adc
sub
aas
xor
mov
mov
jl
insb
fcompl
inc
and
jno
fisubrs
push
sbb
inc
ja
test
leave
jle
sbb
xchg
rorb
outsb
and
sbb
mov
shll
cmpsl
adc
popa
push
sbb
jecxz
divl
dec
roll
add
leave
insl
hlt
call
iret
nop
xchg
mov
add
sarl
popf
xor
jns
icebp
imul
pop
enter
sahf
xchg
sub
adc
adc
mov
inc
outsl
sbb
mov
int3
xchg
sub
lcall
dec
push
or
xchg
je
ret
data16
gs
jmp
dec
cwtl
decb
data16
cwtl
cmp
adc
scas
mov
mov
push
ret
push
es
sbb
mov
loope
rclb
sbb
jecxz
push
out
mov
lret
std
pop
pop
out
xchg
test
mov
mov
mov
push
mov
movsb
int3
arpl
gs
xchg
push
cld
xchg
dec
rolb
sbb
scas
dec
std
inc
fsubr
arpl
loopne
mov
sbbl
dec
pusha
mov
push
add
les
mov
inc
out
int
pop
push
sbbl
pop
insb
sub
movsl
push
mov
or
cmp
inc
or
xor
mov
fsubs
loopne
sub
cltd
push
in
subb
loopne
sub
mov
sub
dec
loopne
pop
adc
dec
fwait
out
test
mov
mov
sbb
xor
lds
mov
shrl
add
dec
xor
adc
mov
fmuls
or
sbb
out
out
test
or
lods
sbb
mov
lds
or
push
mov
insl
add
sub
or
sbb
sub
pop
sahf
sahf
lods
and
jmp
add
lahf
xor
and
xchg
sub
or
sbb
sub
test
lods
and
in
sub
push
popf
aaa
loopne
add
pop
mov
bound
enter
push
loop
cmp
test
lods
and
shl
lds
sbb
add
push
mov
add
insb
es
mov
inc
cltd
inc
inc
fdivl
nop
daa
iret
mov
hlt
mov
lds
mov
and
sub
cltd
out
stc
and
jo
into
dec
add
jbe
xchg
mov
inc
outsb
loope
fcoml
outsb
sahf
xor
push
in
test
test
xchg
push
out
or
and
ds
pop
outsl
cmp
stc
mov
sbbl
adc
pop
xchg
cmp
cmp
mov
mov
pop
sahf
jnp
loop
adc
jecxz
cmp
fstpl
mov
pmaxub
pop
adc
fidivrs
cmp
imul
add
sbb
or
and
jg
lret
jns
or
xchg
jp
test
jns
push
push
and
pop
imul
pushf
cltd
jbe
or
icebp
mov
syscall
pushf
aas
cmp
test
lods
push
mov
mov
data16
dec
sti
loop
sub
sbb
sbb
inc
pop
divb
xchg
and
movsl
out
lds
pop
cmc
sbb
stc
jl
and
enter
adc
mov
mov
ds
dec
in
lcall
mov
test
mov
and
sahf
cltd
lds
inc
in
stc
adc
cmp
cmp
and
cmp
sbb
jb
int3
fs
sub
pusha
xchg
ds
lea
lods
test
fmul
and
sbb
push
lds
ret
inc
fdivs
test
jbe
and
arpl
adc
int3
xchg
push
mov
out
cmp
pop
mov
faddl
lods
loop
out
out
repnz
or
sub
movsl
hlt
xor
out
pop
pmaddwd
pop
out
popa
clc
push
addb
ret
hlt
push
popf
out
mov
xor
inc
inc
fldl
mov
js
hlt
loop
out
xchg
out
and
jecxz
pop
mov
int3
popa
clc
sbb
mov
pop
sahf
dec
leave
jmp
mov
mov
aaa
into
repnz
cltd
sbb
push
iret
addr16
cwtl
push
test
xorl
mov
inc
mov
push
es
out
and
out
jmp
add
pop
jp
es
imul
data16
and
add
inc
cwtl
cmpsb
cmp
hlt
in
fcoms
cmp
cmp
faddl
stc
nop
nop
shlb
mov
mov
rclb
jle
mov
mov
rcl
outsb
add
xchg
outsb
sub
pop
insl
ret
pop
pop
je
xchg
roll
flds
and
hlt
jae
dec
movsb
call
push
call
mov
testb
jne
sub
shll
int
xor
inc
cmpsl
sub
push
sbb
or
dec
rclb
test
mov
pop
inc
es
stos
xor
testb
and
aaa
dec
jnp
int3
lods
jnp
lods
imul
nop
cli
fwait
fwait
xor
mov
inc
pusha
xsha256
cmpsb
push
outsb
push
out
xchg
movsb
cmp
lret
out
cld
inc
push
movsl
xor
sbbl
cmpsl
popa
es
sbb
mov
xor
pop
add
xor
mov
movsl
add
adc
sbb
outsb
xchg
dec
testb
das
iret
data16
mov
mov
xchg
and
push
in
in
fsub
jge
add
cmp
jl
xchg
sub
jg
aaa
jo
xor
ljmp
insl
ss
hlt
push
pusha
jno
xchg
xchg
rclb
push
lods
out
dec
and
cmp
push
in
test
int
shrl
cmp
push
cmp
push
sbb
sub
scas
inc
loope
dec
fistps
ficoms
test
lods
mov
ffreep
push
call
daa
mov
leave
pusha
subl
mov
stos
outsb
add
adc
or
dec
dec
scas
inc
orb
loopne
jmp
test
hlt
outsb
add
jb
popa
clc
fcomps
aaa
mov
leave
pusha
sbb
pop
hlt
ret
add
jb
or
popa
ljmp
push
xor
push
jmp
rorl
cmp
mov
sbb
push
call
data16
xchg
sbb
pusha
jle
push
in
outsb
add
add
or
cmp
push
lods
fisttps
cmpxchg
test
jle
xchg
jae
and
cs
outsl
push
in
adc
jle
loopne
movsb
cmp
mov
jle
mov
mov
mov
and
cld
mov
mov
fs
push
pop
out
inc
cmpsl
add
idiv
movsb
cmp
notl
out
inc
fimull
in
fstps
call
and
pushf
xor
dec
and
jle
push
in
jbe
ret
pop
lret
xor
loop
add
mov
addr16
outsb
mov
ret
cmc
mov
shl
jl
pop
adc
dec
inc
hlt
mov
leave
lcall
out
cmpsl
xor
fmuls
pop
cmc
dec
pusha
lea
mov
mov
mov
lret
popa
ss
out
mov
outsl
xchg
stos
add
in
pop
mov
pop
push
scas
aaa
dec
cmp
jnp
xor
xchg
push
ljmp
outsl
add
jo
mov
adcl
into
popa
push
repnz
cmp
jg
dec
out
jnp
add
aad
and
sub
fstps
inc
fnstsw
imull
sarb
push
ljmp
pop
cmp
mov
push
ret
outsl
add
fsubrs
and
lea
lea
adc
cmpsb
mov
mov
fdivl
leave
or
cs
out
insb
outsl
push
sahf
subb
fisttpll
mov
andl
int
mov
dec
loopne
mov
test
fucomi
test
and
and
mov
inc
fdivrl
lret
mov
mov
or
movsb
into
scas
inc
add
dec
loopne
pop
into
gs
jbe
test
ret
mov
cmc
push
adc
dec
ja
les
enter
push
jmp
jecxz
adcb
or
and
push
dec
out
scas
mov
jg
and
gs
jg
xor
clc
scas
mov
and
aad
ss
decb
das
daa
popa
clc
xchg
inc
fbstp
addr16
xchg
js
lds
outsl
push
jl
sbb
xor
test
in
aas
shr
inc
fucomi
fsubrs
adc
jnp
xor
gs
andl
lahf
mov
xlat
lahf
or
iret
push
std
and
mov
sbb
loop
push
scas
aam
call
xchg
das
lods
rcll
stos
ret
lds
div
adc
dec
adc
jp
ret
mov
test
in
adc
aas
or
mov
adc
rorl
or
jl
add
pop
inc
movsb
cmp
or
lds
lods
pop
in
pop
negb
ss
test
orl
mov
pop
sub
mov
movsb
xchg
xchg
or
mov
pop
mov
mov
in
int
pop
out
adc
dec
push
sbb
xchg
rcll
cmpsl
ret
shlb
je
inc
fimull
push
movsl
push
gs
xchg
data16
lock
movsb
pop
sbb
mov
outsb
imul
arpl
popa
add
stos
inc
cmpsl
pop
call
and
push
jg
cmp
sub
sbb
imulb
mov
je
adcb
sahf
fbstp
inc
out
ss
js
sub
mov
cmpsb
ja
lahf
ss
lahf
test
rorl
fwait
aas
stc
aas
sub
cmc
inc
inc
fsubrs
je
data16
pop
mov
std
or
scas
dec
lahf
ss
into
rcll
push
aam
iret
popw
out
push
fdivs
push
imul
call
cwtl
das
adc
es
das
imul
xchg
pop
mulb
ficomps
addps
pop
jl
mov
jno
mov
int3
sub
xchg
adc
lods
inc
sbb
out
mov
leave
lock
lods
lock
adc
pop
inc
das
pop
negb
scas
sbb
dec
cld
das
pop
repz
push
push
out
ficomps
scas
shlb
jle
adc
mov
push
lods
and
cmc
mov
push
dec
out
push
jge
xchg
sahf
arpl
adcb
push
mov
inc
push
push
popf
inc
push
rcrl
fs
add
xor
pop
or
mov
test
push
xor
inc
testb
dec
imul
in
cmp
mov
test
mov
cmpsb
pop
testb
mov
cmp
jae
adc
iret
jb
adc
mov
test
adc
or
lock
stc
or
sbb
test
mov
test
jnp
lahf
pushf
and
dec
call
sbb
or
leave
pop
jg
jge
jne
xchg
xchg
jae
and
inc
out
js
mov
cmp
pop
ds
ljmp
mov
and
mov
sub
ds
mov
movsb
cmp
push
movsb
insb
add
push
fidivs
decl
mov
stc
inc
lods
inc
js
pop
mov
xchg
dec
loop
in
pop
fsubrp
in
andl
pop
notb
roll
ret
xchg
sub
movb
ss
lret
bound
jns
fldcw
insb
add
jne
xchg
or
adc
lods
inc
adc
cmp
mov
cmpl
mov
add
cs
pop
sub
lret
bound
ret
hlt
push
pop
inc
push
or
dec
ja
call
cltd
xchg
testl
lods
or
xchg
cmp
push
fwait
xor
mov
shl
pop
jbe
push
or
jae
popa
pop
scas
push
push
jnp
test
dec
push
lods
sbb
fisubs
push
clc
mov
insl
testb
in
ljmp
shlb
out
mov
fs
loop
xor
fs
mov
imul
xlat
sti
xchg
or
pop
and
arpl
shrb
fdivl
xorl
inc
add
xorb
mov
test
push
jmp
add
mov
cld
pop
sti
xchg
mov
icebp
mov
mov
inc
and
cmp
and
push
fdivl
fsubrs
ror
jnp
fimuls
cli
xchg
jp
sbb
sub
inc
insl
inc
mov
adc
pop
repz
bound
lds
xchg
sbb
pushf
xor
lods
inc
cmp
sub
repz
sub
shll
xchg
push
adc
pushf
xor
fidivrl
rorb
sbb
mov
push
frstor
adc
sbb
clc
fsubl
inc
sbb
pop
repnz
fisubs
shlb
ret
pop
ja
pushf
xor
and
cltd
idiv
xchg
jmp
in
or
adc
or
sbb
dec
scas
mov
sbb
scas
pop
out
pop
push
clc
jg
dec
lods
inc
ds
jg
loope
montmul
cmpsb
inc
or
mov
je
mov
mov
arpl
dec
lock
xor
pop
or
xchg
imul
adc
scas
pop
mov
dec
dec
fistpll
idivl
sub
lods
jg
push
lahf
call
loopne
stc
jg
sub
sbb
cmpsb
lahf
cwtl
das
rcr
sti
xchg
lret
stc
das
sub
shrb
inc
enter
aaa
into
outsl
pushf
pop
test
fwait
xor
clc
sbb
pop
push
xor
stc
add
dec
stos
inc
cmp
mov
mov
push
stos
in
sbbl
ljmp
xchg
out
add
lahf
jbe
inc
and
shll
loopne
test
lods
sbb
js
xchg
xchg
add
and
cmp
pop
mov
and
out
xlat
outsb
mov
or
mov
lods
jge
data16
jle
stc
mov
sbb
xchg
imul
pop
mov
icebp
out
lret
bound
stos
sbb
lahf
cs
cmp
out
xor
rorl
push
loop
aaa
into
xchg
roll
mov
ds
sub
ds
jae
test
push
push
stos
in
fsubl
leave
push
testb
pop
inc
and
rcrb
pop
int
mov
popa
in
cld
push
xchg
inc
flds
add
test
lods
inc
ficompl
call
lods
inc
xor
shrl
push
lret
mov
mov
fsts
add
push
mov
sub
imul
ss
lds
ss
pop
xchg
push
test
movsl
add
enter
mov
test
add
sub
lcall
ds
rorb
clc
es
outsb
lds
cmp
sub
push
push
scas
dec
movsl
popa
pop
in
arpl
dec
cwtl
xchg
sahf
jl
cmp
fwait
jg
cltd
mov
sbb
loop
jno
fcoml
stc
add
imul
push
call
outsb
fimuls
andl
jl
sub
adc
fcom
es
add
outsb
inc
packsswb
sahf
jl,pn
mov
aaa
jnp
insl
mov
test
push
fs
mov
jle
jne
add
fstpl
adc
sbb
and
pop
repz
jle
inc
jecxz
mov
jp
icebp
pop
jae
or
xchg
mov
jne
xlat
iret
jnp
ljmp
inc
call
aaa
mov
cmpsb
fistpl
sbb
ret
cmpsl
lret
jmp
fmul
enter
loopne
or
stos
movsb
xchg
es
xor
mov
add
and
push
fisubl
and
jnp
add
insl
xlat
dec
sbb
add
xor
movsl
int
out
xchg
pop
movsl
shl
jns
dec
or
lret
xchg
loope
pusha
outsb
add
fadds
mov
popa
jno
sub
xchg
les
cs
fwait
jno
cmp
popa
imul
xchg
loope
mov
in
cwtl
nop
xchg
push
movsb
lcall
mov
js
cs
push
xor
push
test
fsubl
jmp
add
or
push
mov
mov
aad
fistpl
inc
mov
repz
lods
int3
arpl
dec
adc
xor
pop
divb
xchg
xchg
fwait
xor
clc
ret
cld
mov
ja
push
fsubrs
sahf
xchg
shrb
sbb
and
adc
cs
cmp
jne
xor
adcb
push
sarb
fdivl
setl
inc
inc
cli
xchg
js
mov
scas
lret
outsl
out
ss
scas
push
dec
out
mov
int
mov
push
jmp
or
es
cld
pop
out
xor
cli
xchg
push
push
jbe
xchg
scas
mov
les
int
sti
mov
xor
in
mov
inc
dec
data16
xchg
cwtl
outsb
leave
pusha
mov
shl
repz
pop
es
xor
push
jne
mov
scas
mov
ret
repz
mov
sub
dec
insb
stos
jg
pusha
divl
sarb
add
push
out
es
cli
or
lahf
ss
sub
sbb
mov
ss
pop
repnz
mov
adc
dec
pop
scas
jns
stc
nop
stos
cltd
xor
scas
std
jmp
ljmp
jno
outsl
jno
in
mov
ret
repz
lds
xchg
and
sub
addr16
hlt
pushf
xchg
lods
int
ficomps
clc
xor
adc
jno
and
mov
clc
xchg
xor
dec
xor
cmpsl
mov
cli
std
clc
andb
adc
xor
mov
mov
test
daa
cld
xchg
and
scas
inc
cs
sbb
adcl
push
in
sbb
or
outsb
dec
es
rcrl
inc
adc
stc
push
ss
gs
mov
cmpl
or
sbb
sub
imul
mov
loopne
lods
adc
sbbb
xor
arpl
aaa
stos
test
mov
mov
rclb
sbb
mov
ret
xor
cmp
and
movsb
sub
fistps
mov
popf
xor
or
rcr
test
and
test
paddsw
jl
clc
add
movsb
fucom
mov
int3
jp
imul
pushf
hlt
inc
adc
out
inc
jnp
fidivs
inc
movsl
xchg
xorb
popa
in
push
mov
fcomip
inc
or
int
and
js
sub
int
js
jmp
xor
icebp
add
adc
movl
scas
mov
ret
xor
mov
das
jae
push
movsb
jge
add
jne
fistps
ret
add
mov
or
fidivs
test
pop
mov
xchg
mov
fistps
mov
iret
jmp
rcrl
or
lods
outsb
sub
fwait
iret
jp
mov
xchg
cs
or
add
mov
pushf
xchg
shll
mov
inc
inc
sub
jno
shll
xchg
dec
out
mov
outsb
add
push
push
sahf
inc
xor
xchg
xchg
out
ret
pop
or
jge
std
sub
xor
push
jg
push
mov
mov
js
das
cltd
cmpl
xchg
mov
jo
jne
mov
push
es
inc
cmp
stc
jl
insb
bound
lret
pop
add
and
popf
pop
inc
ljmp
mov
push
jbe
jne
xchg
xor
repnz
and
cmp
cmpb
aad
movsl
inc
cmp
insb
lahf
cmp
or
out
or
mov
pop
mov
inc
add
repz
sahf
adcb
andl
fs
rorl
ror
fldenv
out
xor
fildl
es
xor
jno
jbe
adc
out
mov
inc
jo
and
cmpsl
bound
pop
outsl
std
mov
xchg
rolb
pop
gs
faddp
xchg
xchg
ret
icebp
jmp
popa
ss
je
pop
fbld
cmpsb
stos
repnz
rolb
sarl
js
pop
cwtl
mov
in
cmp
lea
cltd
sti
mov
sbb
fmull
xor
lods
out
jmp
inc
and
xchg
pop
shlb
scas
jl
xchg
add
adc
or
fnstcw
xor
ja
jb
pop
xchg
loopne
push
xchg
mov
test
inc
shlb
imul
sbb
or
add
out
mov
push
lea
or
mov
mov
cli
jge
adc
outsb
push
nop
mov
xor
inc
mov
orb
push
mov
fisubl
movsl
cmp
divl
or
sahf
inc
rol
pop
loope
bound
and
inc
fcoml
cmpsl
jmp
mov
mov
sbb
scas
jo
jne
mov
jo
clc
push
loope
stc
jle
rorl
inc
jp
pop
xor
sbb
les
or
mov
stos
mov
pop
xchg
pop
add
or
and
mov
stos
jge
outsb
cwtl
divb
jb
sub
pop
or
xchg
andl
sti
xchg
xchg
aam
iret
adc
or
mov
or
je
adcl
mov
sub
fisttps
mov
shlb
cmp
out
gs
xchg
ret
hlt
xchg
inc
and
aad
mov
in
mov
mov
repnz
test
jo
scas
jmp
scas
into
clc
pop
jl
jge
jnp
pop
stc
repz
mov
in
fdivrl
mov
fstl
jle
pop
push
cltd
xor
sub
and
mov
add
and
cwtl
outsl
pop
jb
movsb
jbe
test
mov
mov
out
cmpsb
xchg
in
mov
addr16
adc
adc
mov
cwtl
pop
cmp
add
or
fucomp
repnz
lock
test
adc
add
mov
les
mov
push
xor
mov
sub
das
cmp
cmc
mov
loopne
std
cmp
mov
call
inc
ljmp
lcall
adc
out
imul
inc
jl
cs
pop
ret
xchg
cmp
rep
push
and
mull
movsb
pop
loop
cmc
pop
addr16
mov
cli
pop
jno
cmp
push
sbb
push
xchg
dec
sbb
lock
inc
jmp
fisttpll
js
add
push
adc
sbb
icebp
jp
fildl
pop
std
xor
sub
jo
lahf
cmp
leave
add
pop
push
mov
adcb
pop
ret
cwtl
pop
mov
pusha
and
jns
xchg
jb
fdivrl
jne
cmpsb
aas
inc
adc
push
xchg
rclb
pop
popa
cmc
insl
push
shrb
mov
and
and
jle
xor
jb
sahf
cmp
inc
movsl
adc
lods
fdivl
loop
add
xchg
sub
cmp
mov
add
push
jb
daa
stos
jae
enter
repz
ss
sub
ljmp
cmp
push
xchg
xlat
fdiv
or
mov
adc
mov
sbb
mov
mov
mov
movsl
and
xchg
les
push
add
fistpll
xchg
mov
cld
sti
imul
jo
pop
repz
cmp
das
inc
lock
xchg
push
mov
push
lock
scas
rorb
mov
cwtl
das
daa
xor
scas
lods
xor
cmpsb
mov
in
aam
dec
mov
adc
aaa
les
jge
lods
cmp
mov
inc
jmp
arpl
jl
push
lds
mov
and
adc
lret
mov
jno
nop
clc
mov
cmp
inc
xor
std
push
cmp
push
dec
inc
jo
sti
cltd
pop
pushl
jmp
jns
sub
push
imul
mov
cmpl
stos
mov
xchg
add
pop
mov
pop
std
mov
in
insb
in
xchg
outsl
mov
mov
jp
mov
push
sti
pusha
sub
mov
mov
outsl
push
mov
leave
outsb
pop
andl
psrlq
pop
jmp
push
lock
push
mov
testb
jmpw
adc
lods
sbb
add
daa
jmp
dec
pop
mov
pop
or
inc
xchg
sbb
repnz
shl
out
in
int3
repnz
cmc
imul
sbb
push
xlat
pop
mov
out
fmul
stos
or
xchg
sub
mov
jns
aaa
in
test
xchg
jae
add
push
je
xchg
jb
cmp
ss
cmpsb
cmp
push
cmp
xchg
stos
jecxz
jle
pop
fs
js
sbb
and
shrl
push
sahf
aas
inc
test
cmp
xchg
sub
cmpsb
inc
addr16
mov
orl
jno
rcll
push
call
sbb
loope
popa
adc
and
sbb
add
and
int
adc
cmp
and
aam
and
aam
push
inc
out
mov
xchg
fwait
test
mov
or
in
clc
adcb
aam
loop
mov
ss
ss
jno
shll
dec
fcomip
inc
jb
js
data16
ss
lahf
ss
push
outsl
push
mov
mov
and
aas
stos
inc
xor
leave
pusha
and
scas
pop
movsl
out
xlat
push
xor
ret
push
xor
push
imul
xchg
fldcw
testb
leave
inc
addl
pusha
cmpsb
sub
jge
sarl
mov
lret
fisubrl
pop
roll
or
xchg
repnz
call
and
pop
sarl
aad
cmp
test
push
mov
mov
fisttpll
push
lret
cwtl
das
std
das
insb
add
mov
push
orb
mov
imull
pop
pop
sbb
test
lods
push
fwait
into
add
in
and
mov
inc
jb
mov
les
cmc
mov
inc
out
jl
dec
pop
enter
lcall
mov
add
fimuls
xlat
mov
in
inc
iret
xor
fstpt
inc
and
lret
or
adc
pop
add
movq
popf
stc
cmp
pop
sbbb
add
stc
mov
xchg
sub
lea
filds
loopne
inc
jge
lock
sub
and
add
adc
and
dec
dec
xorb
jbe
cmpsb
lock
add
cltd
push
js
dec
xchg
jmp
movsb
cmp
or
mov
cmc
ret
pop
cmp
nop
dec
loopne
jp
pop
icebp
loop
xchg
int
jns
xor
push
xchg
mov
shll
mov
fcoml
shrl
in
or
cmpl
sub
xsha256
cmpsb
aad
mov
mov
adc
loop
xor
test
add
test
mov
xchg
and
sub
or
cmp
sub
pop
xchg
ret
pop
jl
std
lods
call
xchg
add
xlat
push
lds
sbbb
jp
jecxz
mov
aaa
out
push
decb
mov
lea
mov
xlat
and
dec
jecxz
outsb
jge
cltd
push
sahf
xor
imul
or
insl
loopne
and
pop
out
add
xchg
sub
and
xchg
mov
iret
in
mov
bound
mov
add
push
push
gs
and
xchg
pop
push
sub
scas
icebp
loopne
push
and
inc
flds
xchg
cs
sahf
jmp
sarl
cmpsl
test
lret
mov
fmul
fs
add
jns
out
mov
loope
les
add
mov
ret
xchg
or
add
les
xor
lods
sub
sub
pop
dec
sub
and
in
dec
rcll
jo
jno
xchg
xlat
outsb
leave
adcl
hlt
insl
xor
adc
test
in
add
cmp
jmp
int3
scas
inc
mov
fbstp
out
mov
inc
outsb
add
jbe
movsl
cmp
xchg
out
xchg
fistpl
dec
popf
test
cmp
das
jne
mulb
dec
sub
jg
pop
cmc
push
sbb
inc
jne
push
jecxz
std
and
dec
loopne
ret
adc
cld
sbb
mov
fwait
mov
into
lods
adc
sahf
aas
add
arpl
pop
out
ret
inc
inc
jecxz
and
in
or
imull
call
or
pop
mov
push
jmp
mov
mov
roll
repnz
arpl
leave
daa
mov
fsts
mov
push
mov
dec
mov
xchg
fstl
jmp
dec
jecxz
jg
jp
xlat
dec
in
inc
popa
clc
sub
cld
popa
clc
in
adc
shll
push
lds
mov
mull
push
jmp
movsb
push
pushf
xor
lds
xlat
mov
leave
fsubr
test
jmp
rcr
inc
std
and
lret
sbb
mov
adc
inc
cmpsl
adc
jp
fildll
sar
push
out
xchg
cld
xchg
mov
push
out
jbe
xchg
sub
cmp
mov
clc
movsl
aad
pop
xchg
stc
nop
aad
mov
stos
lret
pop
scas
mov
fstpl
mov
adc
out
xchg
sub
in
mov
jne
dec
jecxz
xchg
mov
or
jno
sub
mov
inc
push
out
mov
mov
dec
dec
pop
scas
aas
jecxz
mov
push
enter
je
mov
cwtl
in
test
xchg
idivl
xchg
test
lahf
mov
mov
stos
push
out
and
ret
and
and
pop
ret
dec
add
aas
aad
xchg
sub
testb
or
popa
jnp
pop
lock
push
and
sub
add
icebp
roll
cltd
les
xlat
data16
clc
loop
ljmp
loope
clc
pop
mov
sahf
aam
adc
cltd
xor
mov
mov
mov
std
xchg
mov
push
iret
mov
dec
adc
cmp
adc
outsb
push
mov
addb
mov
mov
pop
lock
mov
mov
in
sbbb
xchg
sub
call
cmp
test
rcl
imul
mov
fnstenv
fidivl
lret
mov
fnstsw
iret
or
ret
mov
call
jbe
jg
lock
jo
or
cmpsb
cmp
bound
mov
clc
inc
jmp
iret
repz
push
mov
jo
addr16
fbstp
push
out
and
mov
xor
jae
and
leave
mov
add
adc
jne
mov
dec
loop
mov
lcall
rcrl
inc
fmull
mov
mulb
testb
inc
adc
and
inc
flds
in
test
push
out
xchg
and
js
decl
lock
and
bound
mov
ret
and
inc
or
jecxz
sahf
xor
mov
push
xchg
js
sbb
inc
xchg
jge
add
out
push
and
sbbl
sub
test
cmp
popf
xor
pop
jns
dec
inc
imul
jo
or
adc
cmp
js
cli
push
adc
in
das
sbb
les
push
xchg
test
mov
filds
sahf
rorb
repz
fstpt
cld
add
lret
xchg
out
or
dec
pushf
sub
sbbb
sbb
fcompl
dec
push
out
mov
push
popf
push
push
popa
clc
lea
ss
arpl
push
jmp
mov
xor
lods
mov
mov
inc
or
add
lods
inc
inc
mov
cltd
loop
test
pop
xchg
push
bound
popf
mov
mov
xor
and
inc
mov
stos
and
jmp
jecxz
loopne
inc
sbb
lret
jge
in
push
adc
mov
icebp
mov
lea
nop
aaa
into
add
ja
xchg
divl
add
adc
daa
mov
inc
fimuls
mov
movsl
pop
shrb
push
jecxz
dec
insl
pop
repnz
sti
xchg
sub
addb
mov
stos
inc
test
add
pop
fwait
xor
ljmp
lret
mov
xchg
iret
pop
repnz
xchg
sub
cmpsl
and
jne
mov
pop
xchg
mov
or
test
scas
mov
xlat
mov
mov
xchg
dec
sub
inc
and
jb
out
pusha
sbb
fidivl
mov
cs
mov
lret
xor
jnp
ja
pop
scas
lods
mov
in
inc
inc
ss
pop
insb
push
xchg
sub
and
pop
rclb
push
jmp
jns
shrl
pop
pop
mov
lods
cmp
in
pop
jp
xchg
lahf
mov
and
je
ja
inc
xor
ss
lea
pop
repz
loop
shll
push
cli
pop
xlat
push
mov
jge
fsubrs
je
fisttps
ljmp
sub
es
or
fistps
into
dec
insb
jbe
mov
push
inc
fisttpl
aas
testb
repz
outsb
add
mov
cmp
call
jo
mov
dec
cmpb
mov
out
push
dec
negl
lock
bound
sbb
mov
addr16
mov
inc
frstpm(287
xlat
stos
inc
aad
inc
fnstenv
test
jmp
adc
jg
xchg
pop
outsl
enter
push
dec
bound
mov
add
es
mov
mov
int3
xor
push
lods
push
mov
dec
out
and
mov
cli
cmp
pushf
sbb
movsl
mov
pop
scas
shll
push
out
xor
add
shl
jp
xlat
dec
out
es
jb
adc
or
dec
loopne
sub
push
movsl
mov
cmpsl
ds
inc
lds
xchg
jbe
fprem
stc
sbb
pushf
jnp
mov
lock
mov
mov
and
or
das
xor
push
pop
out
xchg
lds
jno
ficompl
in
pusha
cmp
movsb
mov
das
push
inc
push
popf
jno
scas
inc
mov
xchg
mul
mov
xlat
push
cmpsl
ds
popa
cmpsb
cmp
out
dec
loop
dec
or
ds
data16
adcb
call
dec
mov
pop
mov
jb
dec
loope
xchg
scas
inc
and
push
mov
inc
mov
movsb
mov
add
push
stc
pop
mov
daa
cmp
jne
imul
xor
cli
xchg
lods
push
inc
xlat
gs
test
fldl
mov
out
out
enter
xchg
jae
sahf
xor
inc
lret
dec
pop
jg
aas
push
inc
xchg
js
aaa
push
repz
test
xor
add
jne
pushf
adc
cmc
jnp
sub
pop
mov
mov
mov
jle
pop
out
pcmpgtd
outsl
or
sbb
cltd
sbb
or
jl
mov
cltd
dec
idivl
stos
in
arpl
xchg
pop
out
ja
push
jne
xchg
xchg
push
jbe
lret
mov
out
je
pop
xchg
pop
lods
js
pop
xor
nop
incb
pop
fdivs
iret
adc
push
sti
xchg
jbe
jle
shll
cwtl
xor
adc
in
je
inc
rolb
adc
push
and
inc
rcl
sub
and
ljmp
jo
cmp
je
or
dec
scas
inc
les
aad
ja
mov
xor
lock
push
rcll
sbb
lea
outsl
gs
movsl
cmp
pop
test
or
in
mov
iret
loopne
aaa
mov
xchg
xchg
xlat
add
dec
lahf
fdivrl
ficoms
stos
jae
lret
pop
mov
push
repz
lock
lret
out
jmp
daa
mov
ficompl
lods
and
out
inc
inc
xor
popa
inc
rorl
psubb
sbb
mov
add
mov
mov
and
dec
shlb
cs
enter
sbb
or
sbb
jmp
jmp
les
sbb
sub
mov
mov
inc
push
mov
cmc
mov
mov
pop
jg
mov
push
ja
xchg
imul
or
xchg
xchg
out
mov
mov
fildll
or
or
pop
lds
mov
mov
insl
ljmp
cmp
mov
push
adc
test
pop
movsb
cmpsl
scas
inc
std
lds
aas
stos
fbld
outsb
sub
dec
loope
mov
movsb
cmp
out
test
dec
mov
push
js
push
inc
jae
or
push
nop
daa
insl
mov
fidivs
push
mov
or
imul
jne
mov
mov
xchg
and
mov
ret
or
repnz
test
add
mov
cmp
test
mov
pop
out
loop
aam
in
xchg
fdivrs
xor
fsubrs
popa
xchg
jae
or
sub
repnz
xor
lret
and
sub
out
dec
scas
inc
lods
test
sub
dec
incb
xor
sub
sbb
dec
icebp
mov
out
pushf
xor
les
mov
mov
scas
xchg
divl
call
insb
shrl
mov
mov
jbe
adc
loopne
adc
arpl
mov
jb
mov
mov
xchg
pop
repz
repnz
jb
xor
pushf
xor
iret
sbb
addb
fcmovbe
cs
xchg
jns
inc
fdivl
fnstenv
into
enter
push
jmp
xchg
insl
add
test
mov
xchg
sub
add
cld
xchg
add
loopne
loop
xchg
sub
movsl
popf
es
je
cmp
or
fdivs
push
out
xor
test
fstl
test
fidivs
mov
pop
icebp
ss
adc
ds
cmp
jg
sub
inc
or
jo,pt
jo
xchg
xchg
lret
inc
lret
cmp
js
and
fldl
imul
ds
lds
pop
les
out
xchg
jae
sbb
stc
jo
mov
cmpsl
inc
fsubrl
into
add
test
xor
sub
cmp
mov
aad
pop
leave
adc
adc
and
dec
jecxz
xchg
mov
mov
jne
aad
bswap
scas
jecxz
push
movsl
and
push
test
push
outsb
ja
sbb
xchg
xchg
arpl
loopne
mov
addl
push
dec
mov
jle
pop
cmovge
mov
pop
outsl
loop
cwtl
adc
jae
mov
sbb
testb
adc
pop
inc
inc
push
movsl
push
addr16
xchg
ss
jmp
arpl
movsl
xchg
test
add
out
pop
and
nop
daa
scas
scas
xor
clc
iret
shrl
sbb
leave
cmpsl
adc
ret
stc
mov
sub
mov
ret
repz
rcrl
inc
fcoml
mov
shl
mov
jb
push
ds
dec
mov
lret
rclb
sub
pop
ret
es
aaa
call
xor
jae
push
adc
and
mov
and
push
adcl
or
jge
inc
jno
lcall
sub
bound
adc
adc
fbstp
ss
movsl
test
fs
xlat
and
xchg
jp
es
and
pop
out
or
cs
fistpll
dec
stos
popf
data16
sbb
ret
pop
fdivrl
sbb
lret
out
jmp
mov
add
mov
jmp
std
mov
fimuls
cmpsb
in
mull
ret
or
jle
mov
loopne
xchg
ret
jnp
out
in
sbb
aam
aaa
jmp
or
arpl
adc
test
lret
loopne
pop
repz
enter
dec
in
test
add
mov
jmp
testb
dec
outsl
push
popa
sar
xchg
jmp
or
pushf
aam
sbb
mov
add
push
and
sbbb
js
dec
stos
lret
cld
lret
xlat
outsb
std
sbb
stos
inc
sahf
mov
dec
or
lds
pop
je
mov
push
sub
ja
dec
mov
jne
pop
lods
inc
pop
ja
and
mov
dec
arpl
outsl
cmp
pop
lea
data16
xchg
cmp
je
pop
push
imul
lods
mov
xchg
out
into
fbstp
adc
inc
push
std
xchg
inc
dec
cmp
cmp
mov
addr16
testl
sbb
mov
pop
mov
jmp
scas
inc
ficompl
cmpsl
adc
push
imul
mov
les
seto
xor
add
mov
sbb
in
mov
dec
cmpsb
cmp
sarb
jae
add
test
mov
jae
pop
add
jo
jmp
popa
cmp
jp
das
jno
jg
outsb
push
popf
lahf
push
lret
adcb
setl
or
ret
es
mov
xlat
xchg
stos
pop
out
xor
mov
or
sbb
sub
cmp
lahf
ss
loopne
fwait
rorl
inc
cmp
inc
cmpsb
adcb
aam
aaa
enter
cld
and
xchg
pop
lea
dec
icebp
mov
mov
scas
ja
and
lock
mov
lcall
fidivl
icebp
cmp
in
ret
pop
sub
mov
cmp
repnz
sbb
jmp
or
jnp
mov
add
es
popf
xchg
pushf
sub
cmovge
xchg
inc
sarb
or
imul
mov
push
pop
lods
cmp
addb
ret
push
out
inc
mov
push
movsl
xor
push
inc
fiadds
test
repnz
jno
std
cli
test
pop
mov
cmp
jb
sub
jle
jle
push
sub
xchg
outsl
push
cmp
cltd
xor
scas
scas
inc
and
mov
push
int3
jno
hlt
fs
and
mov
mov
pusha
push
cmpsb
das
adc
adc
xchg
xorl
imul
fdivl
pop
rcll
add
jmp
lods
bound
int
int
fs
out
add
movsl
scas
inc
and
xchg
sub
fnsave
std
and
inc
mov
mov
fldenv
mov
out
push
test
mov
divl
aad
jns
cmp
xchg
lcall
loop
dec
in
add
das
pop
int
inc
addb
mov
loope
xchg
pop
push
jmp
out
je
and
sti
mov
sbb
or
add
pop
xor
outsb
shr
cltd
xor
or
in
stc
and
mov
mov
push
lret
and
mov
xor
in
push
sti
fwait
mov
xor
imul
rorl
mov
fisubrl
push
divl
mov
aam
sbb
out
inc
mov
mov
repz
mov
dec
andl
push
out
xchg
jne
daa
adc
add
in
mov
mov
xor
stos
xlat
popf
xchg
cld
inc
fmul
cmpsl
outsb
xchg
add
inc
fst
xchg
jmp
xchg
cs
and
icebp
int3
sub
cli
lods
mov
sbb
lea
lds
out
push
rcr
jbe
aam
ficomps
fiadds
repnz
adc
jmp
fdivs
out
and
lock
lods
lods
pop
or
mov
add
js
dec
add
mull
repz
adc
push
ss
out
jg
pop
adc
movsb
mov
loopne
fidivrs
add
or
mov
sub
insl
rolb
pop
sti
in
test
mov
and
jb
push
cwtl
popl
mov
push
je
push
je
fldenv
inc
xchg
sub
mov
cwtl
das
lods
dec
outsl
push
inc
vcvtsd2ss
fists
dec
mov
add
jno
adc
xor
test
and
and
test
xchg
sub
jb
into
cmp
shlb
std
sub
add
and
neg
jae
mov
add
outsb
mov
and
cmpl
aad
inc
insb
lcall
pop
leave
pusha
push
mov
xorb
aad
sub
push
xchg
cmp
cli
outsl
xchg
ds
pop
clc
push
pop
punpcklbw
mov
jb
mov
add
fdivl
and
pop
push
lods
mov
push
cmpsb
push
outsb
inc
cltd
push
jp
mov
pop
ljmp
adcl
xor
lahf
mov
xchg
mov
cmp
sbb
test
dec
in
inc
je
arpl
sub
out
daa
in
nop
mov
or
addl
inc
jae
shrl
xchg
int
adc
shlb
lahf
shlb
and
loope
pop
mov
adc
test
pop
leave
mov
clc
inc
into
into
sub
push
shlb
sbb
xchg
pop
ret
jmp
mov
xchg
xchg
cmpsb
dec
adc
adc
dec
xor
mov
xor
pop
or
mov
sub
shl
xchg
adc
fs
adc
test
shrl
leave
repnz
sub
in
inc
jae
sti
cmp
stos
pop
loop
push
lods
pushf
add
pop
jne
movsb
cmp
pop
sbb
cmp
stc
nop
test
mov
jnp
xchg
sub
rcrl
ret
mov
stc
nop
je
dec
in
je
adc
mov
jae
ror
inc
mov
or
push
out
jmp
stos
pusha
neg
icebp
popf
mov
push
lea
mov
lcall
shr
cmp
repz
adc
hlt
add
sub
pushl
jmp
sub
xchg
cmp
adc
mov
mov
mov
fadd
jne
inc
lds
out
and
cmpsb
cltd
lcall
push
fildll
fistps
push
out
pop
leave
mov
xchg
aaa
xchg
sub
push
in
lods
mov
das
cltd
les
dec
loopne
sbb
setb
add
movsb
jl
int3
cmp
sti
xchg
sub
movsl
mov
stos
inc
cld
cmc
mov
jnp
imul
xchg
hlt
lret
cmp
sub
dec
and
xor
mov
jge
push
je
movsb
movsl
leave
pusha
xlat
lds
xchg
sbb
push
loop
outsl
outsl
sub
test
nop
sub
or
arpl
mov
adc
jae
aad
jmp
push
rcr
mov
or
xor
ljmp
inc
cmpsb
aaa
out
dec
add
push
mov
div
lahf
inc
int
jecxz
loop
test
lock
mov
pop
in
ror
pop
out
mov
pop
and
sub
aad
andb
stos
sub
or
push
loope
push
inc
subb
pop
mov
fwait
xor
mov
sahf
mov
insb
mov
xchg
xor
jbe,pt
popa
test
imul
int3
mov
cld
out
xchg
sub
inc
in
mov
jbe
lds
mov
in
mov
push
popa
inc
das
out
roll
jne
aaa
leave
add
adcl
inc
daa
mov
mov
subb
test
pop
fidivl
mov
lods
hlt
mov
and
mov
out
test
movsl
pop
xchg
andb
xchg
adc
add
xchg
push
sbb
fs
cmp
lret
lcall
mov
adc
iret
insb
imul
popf
mov
and
lea
arpl
inc
cli
mov
push
imul
test
xor
jmp
stos
ret
jne
xor
mov
jo
flds
daa
in
jb
sub
loop
sbb
out
or
dec
add
pop
idiv
mov
je
popa
fucomi
and
ja
sbb
mov
ss
or
mov
xor
fmul
in
out
outsl
dec
cmp
xchg
push
mulb
data16
mov
fidivs
lods
push
repnz
xor
ja
sbb
jmp
std
fisubs
mov
push
xor
lds
roll
mov
in
subl
push
dec
adc
rclb
xchg
ficomps
jo
dec
cs
pop
jo
cmpsb
cmpsl
shrl
add
mov
scas
imul
negl
mov
or
pop
dec
mov
jmpw
aaa
lods
inc
popf
pusha
dec
xchg
pop
icebp
cwtl
sub
das
dec
loopne
mov
fwait
jns
test
mov
outsb
scas
fdivrl
outsb
stos
and
jo
lods
sbb
insl
xlat
gs
test
icebp
push
or
xlat
adc
pushf
cwtl
push
mov
imul
lret
daa
sub
adc
je
sbb
ret
or
jmp
mov
mov
mov
nop
daa
or
and
les
xor
daa
fldl
push
dec
ret
add
pop
and
add
aaa
or
ja
inc
pop
lods
sbb
shlb
push
inc
dec
mov
mov
mov
cmpsb
xor
add
test
mov
xchg
cmp
mov
or
repz
jnp
pop
pop
sbb
mov
popa
or
ret
xlat
or
xor
arpl
dec
cmp
xlat
jl
ds
pop
inc
inc
mov
xchg
jne
xchg
loop
shlb
mov
push
scas
xchg
add
push
adc
mov
test
lods
inc
fstp
or
mov
sahf
lret
mov
divb
xor
jmp
add
xchg
inc
jbe
jl
sub
mov
adcb
add
inc
pop
pcmpeqd
inc
xchg
mov
fsub
fisubrl
stc
fidivl
cmp
jns
dec
stos
push
faddl
jb
into
call
aas
pop
imul
pop
mov
les
mov
sbb
pop
dec
les
in
mov
aad
cmc
sbb
js
shl
fsubl
mov
push
shr
xchg
sbb
inc
and
sub
scas
and
imul
or
shrb
pop
imul
push
outsb
fisubs
nop
and
fbld
movsb
sub
sbb
out
and
mov
push
fsubrl
addr16
cmpb
test
mov
popf
out
ret
cmp
popa
dec
cmp
sub
jns
stos
lods
ja
inc
and
and
sbbb
mov
xchg
test
stos
scas
ss
push
fcmovb
pop
test
push
dec
lret
mov
test
pop
push
aas
pop
je
adc
inc
out
push
aad
cmp
cltd
stos
mov
ror
repnz
mov
or
or
andl
inc
roll
loop
mov
push
add
xchg
test
cmc
jnp
xchg
std
jno
push
add
mov
icebp
out
pop
lock
cmp
or
aam
ja
xlat
imul
out
jge
xchg
pop
cmp
push
sbb
addr16
fnstcw
ficompl
sub
mov
cmpb
ret
inc
jmp
cli
push
mov
mov
jnp
pop
aam
std
imul
or
pop
sbb
cmp
int
rolb
jbe
add
mov
sub
bsf
outsl
flds
push
adc
pop
mov
ror
sub
dec
subl
mov
dec
mov
popf
das
xor
addr16
push
loopne
addr16
cltd
lcall
andb
pop
jmp
sbb
pop
dec
push
sahf
dec
push
cmp
outsb
sahf
sub
mov
jne
or
fs
pop
int3
inc
cmpsb
inc
int3
or
xchg
aaa
xchg
js
mov
xor
test
out
mov
sub
jg
outsb
fwait
push
aas
pop
mov
cltd
xchg
xor
jl
jnp
sbb
fcoml
or
sub
adcl
xchg
dec
or
aas
xlat
pop
hlt
mov
stos
dec
in
push
mov
aad
fisttpl
movl
mov
push
adc
and
mov
fiadds
movsb
pop
repnz
outsb
stos
popa
mov
addb
push
add
fisubrs
or
mov
test
fdivs
fistps
adc
clc
and
dec
inc
mov
loopne
jo
ret
sbb
aam
ret
add
mov
sahf
loop
or
jns
dec
mov
jnp
push
std
shrl
xor
shll
jno
movsl
pop
or
outsl
lods
js
ja
and
xchg
add
loopne
repz
dec
in
jne
jle
mov
mov
loope
inc
or
or
adc
cltd
push
mov
push
jge
stos
mov
testl
dec
iret
clts
push
out
mov
movsbl
sbb
sub
es
fcoml
and
test
testb
popa
arpl
xchg
sub
dec
mov
xor
push
xor
lret
mov
aas
dec
test
adc
add
inc
mov
and
inc
shll
jbe
movsl
xchg
xchg
sub
dec
dec
mov
pop
cmp
sbb
mov
fmul
repz
test
mov
jecxz
aas
cltd
cli
or
ret
fwait
pop
lods
jmp
mov
jb
sbb
mov
roll
adc
and
push
inc
sahf
orl
sbb
mov
arpl
adc
xor
pop
xchg
call
adc
test
sbb
sarl
shrb
jo
repnz
cmp
jb
xor
pop
xlat
outsb
dec
jecxz
insb
sbb
ds
mov
enter
push
ret
adc
push
popf
dec
inc
aaa
pushf
test
std
test
xor
aad
cmc
pop
jecxz
mov
in
sub
cld
dec
mov
push
jmp
fcmovnbe
dec
lock
add
test
mov
cwtl
xchg
sub
dec
xlat
loop
mov
adc
iret
push
xchg
aas
adc
stos
add
dec
mov
movsb
testl
mov
and
insb
cmp
ja
insb
cmp
fsubs
in
scas
rclb
rcrl
insb
mov
pushf
mov
popa
push
popf
xchg
popa
or
cmp
das
test
adc
jb
mov
or
inc
leave
mov
adc
ret
fadds
bound
inc
data16
orb
push
xor
lcall
loope
sub
xlat
jge
lods
jno
inc
and
incw
out
inc
arpl
dec
fildll
dec
cmp
movsb
cmpsl
xor
loopne
mov
fsts
mov
imul
cli
gs
push
xor
push
sbb
stc
jb
push
sbb
popa
mov
pusha
neg
out
xchg
pushf
xchg
jb
stos
adc
lahf
outsl
jae
orb
cmp
sbb
and
int
jle
push
daa
xor
or
int
pop
jae
ds
aaa
pop
push
xchg
lock
jne
lret
adcl
loopne
addb
and
pop
add
cmpsl
push
stos
js
out
push
or
push
xchg
popa
pop
shr
out
mov
xor
jno
and
xchg
and
call
pop
nop
in
loopne
std
push
sbb
cmp
call
int
rcrl
paddsw
xor
mov
repz
pop
scas
xchg
xchg
cmp
lret
mov
sbb
xor
dec
cmp
jb
sbb
outsb
and
lcall
and
sbb
push
pop
outsl
cmp
pop
dec
cli
sbb
or
stos
pushf
jg
fisubs
enter
outsl
sub
pop
push
pushf
push
scas
inc
mov
aam
and
ret
out
pop
inc
inc
push
push
inc
jmp
jp
sbb
mov
pop
lahf
movsb
and
jns
mov
imul
add
hlt
or
mov
in
add
adc
mov
mov
incb
jg
xor
jbe
dec
dec
gs
jl
mov
jmp
fidivl
or
cs
int3
andb
cmp
inc
adc
xchg
ficoms
push
mov
ret
fcmovne
pusha
fwait
addr16
adcl
pop
cld
xchg
mov
push
mov
cmc
adcb
lahf
ds
jb
xor
loop
insb
add
loope
jnp
lock
ficomps
sub
pop
cmp
mov
push
jecxz
or
nop
adc
cmp
aaa
push
jecxz
outsb
add
aas
mov
rcll
mov
mul
mov
cltd
cs
enter
das
jmp
test
outsb
and
xchg
push
adc
jne
push
mov
popf
xor
cmc
mov
nop
pop
jne
clc
dec
cli
dec
mov
push
popf
push
push
xor
jno
sbb
push
mov
mov
jl
sbb
dec
fucom
insl
xor
cwtl
xor
icebp
xor
out
push
push
dec
jle
xchg
mov
pop
fdivl
stos
cmp
and
subb
add
jno
xor
or
lcall
lods
scas
inc
xchg
dec
mov
es
loope
cld
jne
js
or
test
cmp
pop
xor
mov
inc
mov
jb
add
sti
mov
sbb
popf
cmpsl
nop
mov
add
lock
adc
adc
xor
push
jb
inc
andb
inc
pop
mov
jmp
inc
repz
stos
jmp
mov
xchg
mov
add
or
xchg
or
jae
adcl
fdivrs
addb
inc
mov
xlat
enter
daa
scas
call
or
and
out
push
jle
aaa
pop
cld
out
cmp
jg
xor
fs
orb
fidivrs
rcl
lea
mov
xor
aam
xor
loopne
or
xor
xchg
push
sbb
cmp
or
repnz
sarl
repnz
clc
popf
dec
shlb
dec
mov
or
sti
lcall
in
xchg
orl
add
call
bound
mov
dec
loopne
movb
insl
addr16
dec
lahf
push
fildl
imul
imul
divb
fwait
sti
sarl
clc
shll
push
mov
ss
xor
push
adc
xchg
dec
pop
retw
out
xor
fs
sti
sbb
pop
dec
inc
lock
jb
push
orb
xor
je
jmp
aaa
cmp
movsl
jo
js
test
das
and
out
in
fcompl
add
sbb
dec
jne
jecxz
push
xlat
xchg
out
mov
xchg
cmc
mov
insl
outsl
shlb
push
in
mov
jbe
push
pop
iret
xchg
add
addr16
es
push
inc
movsb
orb
push
xchg
imul
jno
arpl
add
je
adc
and
inc
mov
push
in
sahf
xor
negl
gs
push
mov
add
rorl
scas
sbb
adcb
or
cld
jae
add
xor
ret
mov
xchg
push
test
out
xchg
mov
jmp
dec
sbb
pushf
mov
decb
mov
std
sub
xor
push
gs
andb
mov
cmp
mov
insl
repz
pop
sub
xchg
dec
push
js
or
stc
stos
cmp
xchg
and
pushf
add
outsl
ret
mov
dec
push
sti
bound
lods
cmpsl
inc
ja
pop
push
push
scas
je
adc
mov
mov
dec
push
sbb
pop
or
mov
jp
or
fcomps
adc
xchg
sub
movsb
loope
andl
adc
lret
bound
aam
ds
dec
adc
mov
mov
and
popf
push
cmpsl
andb
movaps
fistpl
call
sbb
adc
lods
mov
hlt
dec
xor
jmp
or
or
stos
push
and
pop
add
add
imul
inc
and
add
cmpsl
movsb
pop
inc
js
adc
fsubr
lds
jbe
inc
scas
add
sbb
jl
inc
jns
lret
lock
dec
sub
imul
inc
push
mov
and
jmp
cmp
pop
sbb
lcall
adcb
mov
scas
inc
push
roll
add
xchg
push
and
sarb
jl
dec
pushf
inc
imul
fnsave
xchg
and
daa
dec
aas
jp
pmulhw
pop
pop
adc
test
add
ss
mov
aaa
repnz
mov
sbb
push
lcall
pop
jbe
adc
xchg
xor
jb
jmp
stc
nop
mov
mov
outsb
fcoms
scas
or
xor
pop
adc
ss
push
mov
lcall
and
test
aas
pop
leave
lret
sti
sbbb
or
inc
ds
jl
dec
pop
int3
pop
mov
cld
pusha
stos
jb
push
push
push
fnstsw
push
ljmp
xor
add
in
lret
sahf
mov
sub
dec
shrl
fs
rcrb
xchg
lret
push
push
add
dec
scas
cmpsb
adc
xlat
lret
adc
pop
dec
or
mov
shlb
jle
sbb
sub
xchg
stos
cmp
subl
lods
inc
test
xchg
int3
into
cmp
mov
mov
call
sbb
test
je
adcl
sbb
cmpsb
mov
jp
loop
push
movsl
cld
push
cmp
lahf
cmp
dec
notl
cmpsl
rcll
out
icebp
pop
out
push
jno
xchg
mov
mov
stos
scas
fisubrs
aas
fisubrs
aaa
cwtl
cmp
popf
pop
movsb
mov
xchg
or
test
mov
fmulp
push
adc
popf
imulb
jns
sbb
inc
loopne
leave
or
andb
xchg
movsl
mov
and
and
lea
jae
or
ljmp
call
xchg
out
in
sbb
adc
decl
test
fidivrl
iret
in
push
sti
in
add
and
frstor
das
test
movsl
pop
mov
sbb
add
inc
mov
out
cld
or
jae
pop
adc
dec
pushf
mov
ljmp
sub
pop
sarb
add
push
scas
sub
cwtl
inc
sbb
adc
lods
xchg
pop
hlt
fwait
sub
hlt
loopne
and
cs
xchg
mov
dec
pusha
dec
jno
nop
cmpsb
pop
daa
enter
jmp
aad
and
jb
mov
sub
xchg
push
or
loopne
xor
cltd
mov
adc
shl
mov
iret
mov
iret
js
pop
call
or
jno
ljmp
bnd
cld
ljmp
mov
dec
dec
hlt
icebp
add
xchg
xor
inc
std
inc
xlat
into
cmp
movsl
imul
scas
lret
insb
inc
inc
loopne
jne
mov
loopne
ret
adc
mov
mov
cmp
add
ror
push
dec
ja
les
cmp
inc
fdivrl
inc
mov
iret
adc
jmp
pop
lock
inc
mov
mov
mov
aas
jecxz
push
movsl
inc
mov
or
xchg
jmp
cld
inc
adc
test
sbb
pop
stos
gs
loop
iret
mov
bound
setle
aam
inc
in
jb
adc
cmpsl
xor
mov
rcrb
sbb
mov
sub
mov
jb
xor
pop
xchg
call
and
mov
cmp
xor
outsl
push
fdivrl
inc
xchg
in
clc
sub
call
sbb
push
sub
cmp
or
iret
lret
xlat
sbb
call
ret
orb
xchg
dec
pusha
dec
pop
scas
pop
push
cwtl
xchg
popf
dec
lret
inc
testl
int
ds
push
add
test
stc
int3
fisubrl
fs
icebp
je
and
fnstsw
or
int
jl
mov
sub
fnsave
mov
std
inc
pop
ficomps
movsl
imul
mov
push
or
jecxz
loop
xchg
adc
jle
inc
mov
stos
inc
cld
das
leave
negb
jle
push
ficoms
pop
shl
mov
lahf
insl
cmp
out
cltd
push
stos
lea
jne
iret
mov
pop
test
xchg
or
lcall
cmp
xchg
mov
xor
push
mov
icebp
cmp
lret
aas
and
stos
lahf
rcl
mov
lret
scas
jb
mov
into
test
mov
sub
mov
lock
xchg
out
push
in
daa
filds
js
mov
daa
or
jnp
clc
stos
and
sub
dec
push
pusha
popf
jle
fwait
adc
adc
pop
adc
mov
sbb
push
int3
push
pop
ret
jb
mov
push
xor
pushf
pop
pop
xchg
into
mov
jmp
dec
outsl
jnp
push
add
aas
pushf
daa
ret
sbb
lahf
xor
add
push
stc
shlb
push
pop
inc
jo
inc
inc
fidivs
jo
jp
aad
repz
xchg
or
popf
shl
sub
inc
jns
dec
push
add
bound
js
daa
ljmp
jne
sub
gs
sub
jbe
mov
pop
mov
or
fdivs
xorb
mov
dec
mov
into
aas
scas
iret
leave
insl
or
xor
rcrb
sub
mov
fs
dec
mov
add
mov
les
adc
sahf
dec
stos
pop
fistpl
pushf
mov
sbb
xor
mov
sub
or
dec
sbb
int3
push
loopne
in
add
lods
stos
mov
lods
mov
ret
jmp
mov
adc
push
or
inc
push
test
add
fcoms
push
add
jne
mov
fisttpll
or
mov
sub
fisubs
pop
cmp
gs
ss
pop
push
outsl
cmp
rcl
pop
mov
mov
add
inc
sti
jmp
mov
mov
pop
out
pop
arpl
jne
jbe
cmpsl
nop
aad
ret
rcrb
imul
mov
std
or
cmp
xchg
mov
pop
cmp
mov
pop
out
gs
adcl
cmp
push
out
push
pop
adcl
pop
pop
and
in
aas
mov
adc
in
repnz
cmp
clc
ret
stos
sub
frstor
and
lods
rcl
insl
add
lea
addr16
sub
push
test
xchg
cmp
sbb
aas
nop
push
mov
jg
sahf
mov
or
ss
sub
inc
out
out
dec
and
push
jecxz
les
mov
arpl
dec
push
add
cmp
cmp
pop
movsb
push
jb
inc
dec
loop
sti
jmp
je
sbb
mov
lea
mov
aad
lock
aas
out
jno
push
in
repz
adc
adc
or
insb
repz
cltd
repz
enter
std
ljmp
mov
inc
add
lret
jb
mov
mov
ret
insb
jecxz
int3
shr
hlt
scas
in
test
adc
adc
pusha
sti
loope
and
inc
mov
inc
jb
dec
cwtl
fsubs
inc
imul
mov
push
jae
out
jg
in
adc
mov
sub
lret
dec
hlt
data16
lea
ret
rcll
ret
f2xm1
mov
mov
jl
fisttpll
add
sbb
push
and
mov
shl
pop
cmpsl
outsb
jnp
cmp
dec
cwtl
stc
loopne
repz
inc
lea
in
or
jge
gs
xchg
dec
sub
sbb
pop
into
push
dec
push
inc
gs
ficompl
pushf
ret
ficompl
inc
cmpsl
jp,pt
pop
call
push
push
ljmp
pushf
xchg
nop
jge
xor
lahf
adc
leave
adc
ss
cwtl
mov
jo
into
sti
cmc
aam
add
repnz
add
lret
jo
jmp
xchg
int3
pop
outsl
stos
leave
popf
lods
cli
cld
fwait
or
mov
test
subl
or
loop
pop
push
xchg
test
adc
push
ret
adc
inc
push
dec
jecxz
aaa
enter
cmp
mov
or
adc
fstl
mov
push
inc
arpl
and
in
inc
pop
dec
pop
cmp
jecxz
sbb
mov
mov
push
ljmp
popa
cld
jae
xor
inc
fcmove
dec
test
jae
subb
test
stos
lock
dec
xor
filds
mov
mov
mov
mov
lock
sbb
stos
mov
out
lret
push
icebp
jae
loope
std
mov
mov
mov
jmp
or
and
xor
movsl
scas
cwtl
mov
push
inc
cmp
cmp
sbb
sub
jl
adc
aad
cmp
insl
xchg
mov
movsb
jae
push
mov
xor
cmp
lock
and
lret
in
mov
into
pop
mov
jl
popf
xor
cld
gs
mov
enter
lds
clc
iret
lds
sbb
inc
cli
inc
pop
xor
and
ja
jns
sub
dec
lcall
movsl
arpl
inc
js
leave
mov
xor
imul
aaa
xchg
pusha
lcall
mov
aad
repz
fsubs
pop
cmpsb
repz
sti
inc
sub
dec
shl
lock
lahf
std
mov
fs
pmaxsw
xchg
mov
push
movsl
push
push
pop
sahf
fadds
add
cmc
sbb
pop
lahf
pushf
inc
dec
sub
leave
pusha
or
push
cmovnp
cs
sub
push
aam
cmc
mov
push
inc
scas
push
sbb
das
jg
arpl
test
push
stos
jne
gs
xor
xchg
pushf
dec
push
clc
int
sub
xor
stos
jmp
mov
dec
sbb
ret
push
inc
out
ja
mov
mov
inc
fadds
out
pop
cmc
push
out
jnp
push
or
ljmp
lds
inc
nop
daa
js
in
add
adc
or
push
loope
sub
shlb
aad
lods
into
test
repnz
out
jne
sbb
mov
push
in
rorb
test
enter
inc
xchg
sub
loopne
into
cmp
cs
pop
inc
fxch
movb
or
mov
das
ret
adc
cmpsl
jns
fdecstp
mov
lock
ljmp
aam
fistps
daa
bswap
push
inc
dec
cmpsb
mov
in
shl
sbb
movb
das
jg
mov
mov
jo
jns
ret
mov
sbbb
shrl
cmp
sbb
dec
lea
fisttps
fs
pop
lahf
jnp
sbb
add
fnsave
jle
int3
mov
adc
ss
xor
inc
fisubs
add
lahf
jle
lret
push
cmpsl
stos
outsb
shrb
xchg
jp
inc
sbb
loopne
js
xlat
add
out
cli
out
push
sub
mov
cmpsl
call
xor
out
pop
sti
xlat
call
andl
stc
sub
jp
or
fists
sbb
sbb
cmp
push
outsl
rcrb
sbb
pop
mov
dec
mov
imul
xchg
pushf
mov
inc
lfence
es
lds
ret
sahf
pop
xchg
bound
fwait
nop
sub
ret
jnp
scas
inc
test
mov
cwtl
jl
test
mov
fsubrs
add
bound
pop
aaa
jnp
jb
xchg
dec
or
decl
outsb
lds
lcall
jnp
jb
cli
shrb
mov
rcll
inc
icebp
outsb
sub
inc
jp,pt
fisubl
and
jo
fidivs
pop
psrad
std
iret
adc
xchg
sub
push
testl
nop
int
mov
xchg
lcall
add
lods
xchg
adc
or
xor
push
test
pop
scas
adcb
outsl
push
cs
add
arpl
cmp
xor
aad
fs
adc
dec
mov
aam
fwait
xor
stos
popa
mov
pop
sub
popa
inc
adc
cmp
lcall
xchg
out
test
sbb
and
cmc
cs
pop
add
and
mov
sbb
icebp
and
cmp
cmp
inc
sbb
adc
and
out
cmp
and
xchg
andb
push
pop
sub
fpatan
pusha
pop
jno
jbe
scas
mov
pop
outsl
loop
hlt
mov
push
aas
pop
mov
shrl
rorb
in
cmp
mov
xchg
lahf
mov
sub
add
mov
andl
mov
rclb
imul
popa
arpl
mov
or
cmp
lret
lret
cmp
pop
in
push
and
sub
pop
add
inc
mov
ss
int3
shrb
imul
dec
sub
lcall
push
out
inc
shrb
fsubs
push
mov
lods
fmulp
pop
mov
dec
cmpsb
jns
imul
dec
in
loopne
xchg
leave
add
xor
mov
adc
inc
lock
out
cld
dec
and
enter
jecxz
xchg
test
nop
leave
int3
jg
cmp
mov
repnz
add
dec
mov
lds
iret
pop
scas
push
loope
mov
rcrl
sbb
jmp
cltd
and
pop
fst
mov
fbld
xlat
cltd
mov
mov
push
adc
pop
mov
stos
mov
pop
test
adc
add
das
daa
imul
lcall
push
mov
mov
lahf
into
in
jl
test
push
jle
negl
push
cmc
mov
pop
fsubrl
cmp
dec
stos
and
sub
out
pushf
dec
pop
rol
push
jae
loop
lcall
jns,pn
pop
adc
mov
fists
push
cltd
je
fnstenv
cmp
insb
ret
and
repz
pop
xchg
sub
mov
lds
pop
mov
mov
dec
adc
pop
das
cmp
insl
mov
gs
shrb
fstps
jmp
out
daa
mov
sub
fsubrl
insl
adc
arpl
test
lock
sub
push
decb
in
and
push
or
sub
addb
loop
adc
fwait
lods
sbbl
fs
cmp
sub
cmp
xchg
sub
mov
sbb
mov
dec
ljmp
repz
js
jge
js
repnz
jge
repz
xlat
pop
cmp
pop
pop
mov
rcl
jns
mov
shr
scas
cwtl
test
sti
or
call
test
mov
lcall
sbb
xor
and
jl
inc
arpl
mov
lods
inc
arpl
sub
clc
les
cmc
sbb
test
xchg
dec
je
stos
mov
mov
lahf
es
or
mov
das
dec
jecxz
lea
adc
pusha
dec
mov
add
mov
jmp
pop
sbb
sub
repnz
outsl
repz
adc
hlt
fs
les
add
sbb
jg
fwait
and
mov
in
daa
or
add
or
sbb
jp
mov
add
dec
es
in
loope
xor
mov
inc
sbb
or
mov
loope
inc
ljmp
imul
dec
push
xor
push
faddl
jg
hlt
dec
ds
outsb
aam
push
add
data16
dec
lods
lahf
or
cmc
jno
adc
jp
das
je
xchg
stos
jns
dec
in
cltd
push
inc
test
js
in
mov
int3
jo
ret
nop
punpckldq
fnstenv
test
mov
add
cmp
stos
mov
nop
inc
dec
sub
mov
jno
inc
mov
add
or
sahf
lcallw
sbb
add
sbb
cmp
shll
lods
and
jmp
inc
outsb
xchg
mov
or
ficomps
mov
and
mov
jge
mov
std
jmp
jge
scas
or
fdivrl
pop
fistl
adc
cli
xchg
stos
mov
sbb
adc
les
or
sbb
pop
adc
sub
imul
or
ja
fidivs
adc
lods
inc
push
icebp
adc
movsb
jno
fisubs
dec
repnz
addl
leave
test
sbb
push
dec
lret
ret
mov
inc
enter
pop
insl
es
sub
mov
add
xchg
mov
shll
aam
mov
sub
pop
nop
loopne
inc
adc
push
or
je
outsl
cmc
lods
pop
fildl
push
aam
inc
mov
xor
arpl
loope
in
mov
dec
sarl
add
push
and
pop
xor
aam
mov
inc
sub
or
mov
insb
jecxz
xchg
adc
mov
mov
xlat
iret
push
out
fists
mov
pop
jmp
cmp
outsb
jns
dec
and
xlat
xlat
ret
fimuls
clc
pop
push
es
sub
test
jnp
stos
lret
jp
movsb
arpl
fs
int3
cmpsb
mov
out
sbb
add
push
cltd
ret
pop
fucomip
je
sbb
inc
xchg
adc
jb
xor
test
test
mov
movsb
dec
rorl
add
sbb
lods
imul
arpl
shl
cmp
mov
dec
in
adc
ss
xchg
cs
push
es
pop
xchg
adcb
shl
mov
dec
dec
and
fnstsw
cmp
push
int3
sbb
insl
das
xchg
mov
lcall
sbb
loope
add
jbe
addr16
insb
xchg
shr
mov
jns
shrl
mov
aam
lret
push
or
mov
sub
pause
jnp
ret
xchg
inc
arpl
iret
pop
hlt
push
mov
inc
sub
popf
out
dec
dec
cld
sahf
in
mov
in
mov
insb
add
roll
mov
movsl
das
sbb
loopne
jle
in
insb
notl
jp
lock
sahf
xor
dec
adc
xchg
mov
push
lds
mov
nop
in
or
out
sub
mov
inc
push
pushf
mov
repz
lea
or
xor
push
scas
and
arpl
jge
pop
sbb
test
cmpsl
mov
outsl
jns
sub
inc
dec
add
in
scas
inc
pop
sbb
xor
push
test
cld
ljmp
es
jl
add
pusha
inc
sbb
inc
push
adc
xor
mov
cwtl
pusha
xchg
cmp
mov
jle
lea
inc
add
and
inc
stos
orl
es
mov
jnp
lods
xor
mov
nop
pushf
push
stos
in
mov
adc
xchg
jns
xchg
jae
cs
lahf
pusha
icebp
mov
movsb
pop
cmp
adc
adc
jp
mov
jno
push
xor
lahf
mov
jb
mov
shlb
cmp
insl
cmp
rorb
jo
mov
push
jnp
pop
adc
fbstp
xor
and
fmull
das
dec
ret
inc
das
imul
push
sbb
loope
mov
add
mov
into
stc
cmp
or
arpl
test
xchg
test
mov
fucom
add
mov
loopne
jmp
add
mov
jae
push
pop
psraw
out
je
push
mov
adcl
or
fnstenv
or
mov
push
fs
sbb
dec
inc
insb
decl
mov
test
push
bound
bound
fisttpl
ret
cmp
push
insb
mov
mov
dec
push
jle
jo
enter
push
jg
push
outsl
mov
sub
jne
jle
xchg
gs
decb
pop
and
popf
push
mov
loop
jl
mov
pop
add
push
movsl
imull
arpl
fldenv
push
dec
xor
lods
mov
xorb
or
inc
push
dec
data16
fildll
cmp
push
jecxz
insl
push
mov
and
add
push
inc
jecxz
movsl
pop
xchg
nop
mov
pop
call
mov
mov
shl
jl
cli
jns
cs
call
xchg
and
mov
ror
enter
fs
xchg
adc
push
stc
scas
cmp
in
fs
pop
clc
insl
mov
cmp
roll
or
lods
fnsave
xor
lahf
ds
in
or
test
lahf
xchg
jge
push
and
les
ret
inc
lahf
xchg
dec
rorl
mov
daa
jmp
mov
outsb
iret
pusha
jl
add
adcl
mov
gs
mov
repnz
push
mov
adc
test
sbb
pusha
pop
pop
xor
sub
cmpsl
dec
dec
dec
sub
test
mulb
cmp
mov
adcb
lock
and
mov
out
sbb
shl
pop
dec
mov
imul
std
ss
jp
test
stos
mov
push
andl
fxch
xchg
jb
call
in
inc
enter
push
jne
jae
pop
inc
clc
jae
cmc
inc
jne
test
fnsave
jecxz
jmp
jo
xor
mov
fdiv
cmp
or
add
lods
aaa
adc
dec
stc
pop
hlt
mov
push
mov
xor
pop
cs
cwtl
xor
add
adc
jg
iret
movsl
cmp
imul
aam
adc
loopne
dec
mov
jmp
cmp
push
jg
in
cmpsl
adc
xchg
cltd
jns
popa
jb
cmp
dec
push
or
jae
test
and
pop
out
jmp
mov
setns
imul
xchg
es
pop
inc
fdivs
or
clc
xchg
test
test
popa
movsb
sarl
add
lds
xor
ljmp
cltd
nop
aas
out
test
popl
fwait
pop
ret
push
leave
and
pop
cmpsl
fsubr
js
pushf
stc
sub
mov
arpl
enter
push
scas
sarl
lods
push
push
test
daa
ret
mov
rorb
and
sub
mov
cmp
dec
lock
jbe,pn
xchg
rolb
movsl
adc
sub
cmc
lahf
sub
jmp
pop
imul
push
adc
aaa
stc
dec
mov
xor
imul
mov
pop
insl
lcall
pop
inc
xchg
scas
xor
push
sub
mov
push
pop
test
or
add
jae
repz
dec
in
testb
movsl
in
fistps
es
stc
sahf
xor
stos
xor
das
mov
adc
mov
jb
dec
int3
out
mov
dec
icebp
xchg
ficoms
xchg
iret
cmpsb
cmp
out
inc
lods
dec
pop
mov
mov
clc
cmpsb
out
xchg
movsb
or
pop
mov
xchg
push
ret
mov
or
ret
sbb
pop
pushf
jg
loope
and
stc
sub
push
cmpsl
sbb
ret
sbb
lret
sbb
call
enter
outsl
sbbb
sub
dec
xchg
jne
push
sahf
inc
outsl
divb
jbe
icebp
xchg
add
xchg
mov
xchg
xor
ss
mov
jnp
lret
jno
xchg
out
std
lahf
jg
inc
out
inc
push
aam
mov
xchg
xchg
dec
mov
and
fcoml
bound
xor
xchg
fsubl
aam
test
bound
pop
inc
dec
cmp
imul
sbb
cmpsl
mov
dec
idivl
xor
add
mov
out
dec
psllw
xchg
sbb
ret
mov
xor
sub
mov
push
test
mov
or
aam
pop
mov
js
sti
xchg
add
incl
xor
call
cmp
mov
dec
out
iret
inc
lret
int
in
pop
scas
pop
cmp
mov
out
daa
lahf
gs
xlat
cmp
test
mov
push
and
mov
fdivrl
sub
std
out
out
int
jecxz
mov
lcall
dec
mov
sbb
jne
xchg
inc
fcmovb
jbe
out
or
scas
sarb
into
js
or
xor
test
cmpsl
outsl
jns
add
bound
inc
mov
mov
dec
shlb
cli
push
adc
or
mov
mov
dec
jns
sahf
push
add
scas
int3
lret
notb
lea
lock
rorl
pop
ficoml
lret
jo
into
movsl
scas
out
cld
fcomi
xchg
mov
push
rcl
sbb
fs
sahf
mov
xor
jecxz
and
inc
test
fstpl
cmp
dec
mov
and
inc
jbe
cmp
jl
cs
sub
aaa
dec
xchg
add
addr16
sti
jns
mov
pop
add
pop
jnp
data16
add
jecxz
mov
imul
fldenv
call
loopne
sahf
cmc
in
call
std
mov
sti
mov
sub
mov
fs
cld
add
adcl
pop
pop
cld
sarb
in
fcmovbe
add
cli
sarb
add
push
insb
xchg
cmpsb
push
fildl
out
loop
mov
mov
lock
repnz
mov
add
stos
xchg
sub
mov
xor
loope
cltd
bound
jmp
mov
out
add
adc
mov
xchg
cmp
inc
mov
or
xchg
push
push
stos
jp
test
push
cmp
jmp
add
scas
inc
xchg
mov
lret
cmp
in
inc
or
pushf
aas
inc
cmp
and
rcll
sbb
xchg
in
jb
lcall
loopne
cs
subl
loope
popf
add
or
imul
outsb
or
sbb
xor
jl
in
push
into
movl
arpl
mov
into
add
sbbb
cmp
inc
imul
jl
push
and
mov
movsl
icebp
mov
jb
cmpsl
xor
sbb
out
push
adc
int3
shll
xor
mov
sub
push
xor
es
in
pop
lahf
fnstcw
rolb
sub
jno
cld
dec
push
xor
gs
aaa
pop
movsb
mov
nop
push
mov
aam
fstl
int3
add
ret
and
stos
xchg
push
add
not
xchg
mov
sarl
jbe
pop
fnstcw
loopne
jp
neg
jo
mov
test
mov
imul
lock
inc
loopne
enter
sbb
xchg
out
mov
or
aaa
cmp
jg
sbb
icebp
test
popf
cmp
mov
stos
sub
inc
xchg
pop
ret
inc
ror
push
je
mov
stos
sub
xor
mov
mov
aam
mov
sub
enter
add
in
test
cwtl
adcl
sahf
jno
mov
mov
scas
in
mov
push
mov
xchg
pop
mov
lods
leave
pusha
fistps
out
pop
mov
push
mov
mov
sbb
add
sbb
stos
cmp
pushf
inc
mov
dec
sahf
and
jge
insl
outsl
adc
jne
cmpsl
push
pop
push
mov
push
data16
jle
mov
popa
push
xchg
and
enter
fs
cs
das
jb
pop
jo
push
mov
or
cld
fnsave
pop
sbb
xchg
popa
test
jae
pop
ja
xchg
cmc
adc
xor
pop
cmovle
xchg
pop
mov
imul
lds
xchg
jp
jmp
push
bound
dec
mov
les
pop
test
jnp
xchg
test
and
add
add
nop
lds
fwait
or
int3
cmc
or
sub
rclb
or
imul
loop
add
repnz
xor
movsb
call
or
add
jecxz
jge
jo
lods
mov
xlat
pop
pushf
jo
cmp
cli
pop
ficompl
lds
test
lret
sti
mov
mov
loope
arpl
cmc
jmp
cmp
mov
or
jnp
inc
jo
push
std
add
je
sbb
ljmp
scas
lods
std
push
negl
mov
out
out
mov
push
mov
pop
adc
cmpsl
pushl
enter
xchg
xor
aad
pop
push
aas
dec
daa
jp
stos
test
mov
adc
movsl
mov
out
cs
mov
pop
pop
mov
xor
gs
dec
or
push
jmp
push
cld
lods
mov
jno
jmp
aad
inc
stos
inc
out
lock
inc
dec
xchg
adc
mov
xchg
movsb
nop
sub
xchg
pop
mov
outsl
mov
movsl
pushl
xlat
mov
add
lds
nop
daa
jbe
mov
cwtl
scas
xchg
jne
push
mov
orb
stc
adc
out
test
stc
lahf
leave
push
mov
cmp
daa
xor
aas
sbb
lods
add
in
xor
push
scas
jge
push
sbb
jle
aas
mov
jbe
shlb
add
fucomp
jbe
or
pop
jle
test
iret
and
mov
cmp
jle
mov
push
mov
sub
xor
rcll
arpl
mov
and
sub
aaa
push
fldcw
pop
push
inc
push
mov
adc
into
pop
jbe
mov
push
in
cmp
arpl
jb
pop
filds
adc
jne
push
cwtl
popf
mov
push
cli
cld
cmp
mov
test
fnstsw
lmsw
xchg
jmp
mov
stos
test
jp
xchg
lods
jle
cmp
mov
cmpsb
dec
es
sbb
inc
xchg
mov
hlt
add
or
pop
mov
sub
mov
adc
inc
out
dec
mov
cmp
or
pop
adc
adc
xor
mov
pop
push
inc
pop
push
xor
push
adc
aaa
int3
ss
cmpsb
push
push
jne
mov
insl
adcl
ret
inc
push
mov
adc
xor
xchg
mov
sbb
pop
das
idivb
ja
and
testl
sub
pusha
xorb
add
mov
add
test
dec
pop
xor
sbb
jmp
xchg
aaa
and
aas
adc
sbb
imul
out
pop
scas
lods
fists
or
addl
loop
outsb
inc
inc
fisttpll
cwtl
lods
int3
sub
rcrl
clc
push
or
incb
xchg
xchg
in
movsb
push
cld
mov
test
sub
outsb
call
push
or
pop
or
test
mov
dec
jge
mov
fmuls
lret
ja
lcall
and
hlt
fs
xchg
xchg
cmc
sub
ljmp
fs
cmpsb
jl
scas
jmp
pop
lret
js
cmp
mov
adc
cmp
dec
idivb
out
lahf
push
orb
test
cmp
pushf
dec
arpl
mov
into
shr
xor
pop
js
pusha
data16
push
stos
out
scas
notl
pop
pop
movsl
cmp
fsubs
lcall
rcll
into
xor
xlat
push
mov
xchg
ss
jp
cmc
fsubs
pop
mov
iret
dec
sub
mov
loopne
rorl
loop
inc
mov
add
sbb
or
lea
lahf
mov
jb
stos
mov
movsb
xchg
xor
push
cwtl
mov
les
or
push
mov
sbb
stos
mov
or
ja
fmul
fcmove
outsl
subl
or
pop
jne
inc
cmpsl
subb
cmc
shr
jnp
div
mov
jmp
hlt
insl
add
out
rcrl
mov
dec
popa
and
test
pop
mov
or
out
out
dec
test
xchg
ja
in
push
cmp
and
adc
aaa
call
lea
shrb
loope
stos
stc
mov
mov
inc
frstor
fdivs
fimull
fs
jmp
xor
sub
or
sbbl
jecxz
xchg
movsb
ja
aad
mov
cwtl
incb
mov
jl,pt
aad
cltd
mov
bound
jmp
xor
cld
cmp
jecxz
push
mov
lods
test
shlb
insl
mov
test
lret
cmp
mov
mov
mov
or
popa
test
mov
inc
push
or
loope
ret
jge
push
aaa
dec
pop
imul
gs
lret
sbb
out
pop
mov
xchg
jecxz
lock
fadd
movsl
out
push
mov
call
inc
sbb
add
scas
pop
push
cmpsl
sbb
cmp
lcall
sahf
ret
ja
lods
mov
or
and
cmp
movsl
addr16
sbb
fnstsw
and
adc
mov
shrl
js
movsb
das
push
mov
pop
repnz
icebp
sub
xchg
push
sub
mov
call
rol
dec
movsl
mov
sbb
into
and
insl
aad
inc
pop
pop
dec
aad
pop
lods
daa
push
and
pop
lea
adc
outsb
sub
mov
inc
push
hlt
adc
inc
inc
bound
pop
leave
fwait
out
gs
out
and
xchg
es
cmp
in
adc
xchg
mov
push
jo
mov
cwtl
xchg
insb
popf
lock
nop
lahf
jl
and
mov
sti
push
sahf
mov
cmp
mov
cld
pinsrw
ljmp
and
jge
ss
bound
insl
jnp
fwait
xchg
shr
xchg
pop
test
push
pop
movsl
mov
push
cli
jp
sub
ret
lea
push
dec
ja
cltd
xor
lcall
adc
addr16
mov
lock
rorb
xchg
mov
inc
jg
shlb
push
mov
ja
out
cld
les
outsl
sbb
enter
loop
aaa
adc
mov
ret
faddp
push
pop
out
and
ljmp
out
pop
mov
sbb
test
cltd
hlt
punpckhdq
push
pop
negb
sub
mov
mov
fmull
pop
das
sar
and
loopne
mov
addr16
cwtl
leave
push
sbb
popa
movsb
cmp
add
out
data16
dec
out
sub
shll
jmp
icebp
leave
pop
fwait
addr16
sub
fwait
aas
repz
and
add
push
out
je
cmpsb
push
repz
add
aam
loopne
mov
mov
sbb
jns
fisubrl
gs
sti
leave
jl
sub
push
ss
or
loop
unpcklps
into
jo
cmc
mov
push
test
bnd
dec
fldenv
or
mov
loope
das
cmp
push
dec
lods
in
dec
pop
in
daa
push
cli
je
mov
ljmp
jns
bound
and
dec
fnstenv
xchg
or
pushf
sub
mov
fcomps
inc
in
dec
pop
std
cmp
pop
cli
lea
dec
jo
cmp
insl
std
adc
adc
jb
out
xor
popl
jmp
mov
pop
lock
stc
scas
frstor
inc
and
xchg
or
fisttpl
add
nop
cmpsb
pop
lahf
mov
pushf
rorl
xchg
out
jno
mov
push
in
xchg
add
pop
sti
cli
jecxz
fcoml
and
pop
mov
bound
stc
xor
xor
or
fdivs
mov
cmpsb
pop
mov
push
enter
jb
cmp
lods
add
popf
or
jb
jmp
add
jnp
cmpsl
orb
mull
mov
jp
test
out
bound
adc
lods
andl
jno
int3
dec
loope
in
or
and
fistpl
dec
loopne
push
popa
sbb
pop
icebp
std
push
int
fdivs
js
in
mov
fidivl
mov
lds
dec
mov
fwait
sub
adcb
inc
sub
mov
mov
test
out
mov
push
aam
fnsave
jp
leave
scas
push
outsl
fisttps
gs
fwait
lods
icebp
movb
or
jo
cmp
or
lcall
je
dec
jns
insb
mov
addr16
loopne
jmp
pop
andb
jbe
inc
adcb
xchg
pop
mov
pop
cs
xor
sub
push
pop
sahf
mov
dec
pop
add
jbe
mov
dec
push
cmpsl
rclb
jns
lret
loopne
gs
sub
dec
scas
out
adc
sbb
ss
sti
test
cwtl
mov
stos
jae
mov
dec
cmp
lahf
sbbl
or
fs
sbb
dec
fisubrl
jmp
dec
adc
mov
sarb
adc
xor
sub
repnz
mov
cli
shr
pushl
mov
jl
adcl
repnz
cwtl
subl
lods
dec
in
xchg
jecxz
add
add
xor
fldenv
loopne
sti
sarl
inc
xchg
cs
dec
int3
jmp
aas
mov
adc
xchg
fbstp
notl
outsb
notb
cmc
mov
xchg
pop
mov
dec
and
jmp
cmp
xorl
xor
insb
mov
push
pusha
loopne,pt
lret
in
push
daa
push
dec
jmp
int
cmpsb
scas
mov
add
sti
add
and
adc
xor
and
xchg
push
popa
clc
add
xor
nop
add
stos
dec
inc
fs
mov
xchg
outsb
push
popf
insb
fiaddl
or
mov
or
push
fimuls
clc
sub
pop
pusha
and
aas
mov
icebp
mov
loopne
repnz
mov
je
pop
cmp
dec
insb
arpl
push
pop
mov
sbb
pop
mov
adc
pop
xchg
popf
mov
cltd
sub
lret
mov
xor
inc
test
mov
sahf
sbb
inc
push
jns
inc
jae
call
fldt
iret
mov
and
lcall
sbb
fists
orb
out
aam
dec
xchg
dec
jmp
xlat
mov
xchg
push
bound
out
mov
rorl
loope
push
pop
dec
push
jge
cmp
mov
in
sub
xchg
dec
mov
sbb
pop
and
mov
push
jl
pop
lods
fildll
mov
cmp
adc
fbstp
sub
xor
xchg
jecxz
imul
shll
dec
push
nop
test
or
mov
xchg
outsb
icebp
mov
inc
inc
cmp
push
mov
jecxz
inc
lahf
push
mov
jnp
pop
dec
push
mov
adcb
push
sbb
mov
loopne
xor
pop
shlb
int3
jg
int3
lcall
stc
test
stos
pop
repnz
movsl
fidivs
jl
aam
xchg
xor
scas
push
lcall
in
jecxz
xor
into
jno
popl
and
lods
xor
xchg
jle
sbb
popa
jle
jae
sbbb
ds
jge
mull
insb
addr16
mov
add
lock
aas
and
pop
push
nop
sub
mov
aad
push
fisubl
xchg
jle
popa
mov
pushf
sub
pop
mov
xchg
push
push
lods
lods
dec
pop
mov
in
movsb
xor
out
iret
imul
mov
push
clc
mov
ret
sub
movsl
mov
xchg
add
sub
mov
xchg
or
lods
and
movsb
jns
pusha
notl
jmp
mov
push
mov
test
push
fldcw
bound
rorl
mov
pop
mov
push
sub
ret
mov
call
out
and
dec
in
fcmove
sahf
clc
bound
out
out
dec
out
in
popf
rcrl
mov
out
in
sbb
mov
xor
dec
iret
fcomps
int
dec
ljmp
sbb
inc
shll
xchg
lds
jmp
in
mov
mov
inc
jmp
push
fsubp
imul
jae
jl
jns
out
lret
dec
lea
xchg
ss
shr
lods
sbb
adcb
mov
and
testl
es
add
out
jo
push
cmp
arpl
cmpsl
rcrl
sub
inc
adc
cmpl
dec
xor
sbb
addb
mov
push
ljmp
scas
rorl
js
das
and
push
mov
cltd
je
les
lods
imull
mov
push
jns
addr16
jno
fwait
jae
data16
cwtl
out
jo
leave
je
sti
inc
sti
fwait
mov
fmulp
dec
lret
jbe
data16
and
adc
or
cmpsb
stos
fidivrl
pop
lea
inc
aaa
push
scas
mov
pop
fstps
adc
xchg
mov
adc
leave
cmp
jne
fbld
movsb
xor
movzbl
test
ficoml
mov
mov
in
mov
jmp
sbb
cmp
lds
add
repnz
xchg
pop
movsl
push
cmp
inc
rcl
xor
sub
and
xchg
xor
lea
call
scas
sub
xor
cwtl
loope
pop
xor
loope
mov
cmp
std
pushf
xor
sbb
outsl
daa
out
pop
mov
xchg
lret
push
lods
inc
or
cmp
ret
sub
aam
and
mov
ret
push
insl
push
enter
pop
push
fisubl
cwtl
add
jne
mov
adc
inc
jae
mov
faddl
fdivrs
add
jne
neg
in
rcrl
pop
adc
sbb
jmp
sbb
sbb
push
xchg
in
xchg
sub
int
decl
mov
pop
pop
fildl
sti
sbb
test
lret
ds
jne
subb
xchg
mov
adc
pop
andb
inc
loop
mov
inc
shlb
popaw
sub
and
cwtl
ss
addr16
mov
pop
push
stos
pop
sub
cmp
mov
out
xor
inc
mov
push
or
mov
fs
dec
mov
mov
daa
arpl
xlat
call
inc
lcall
cmp
xor
lods
fmull
test
inc
push
aaa
testb
in
dec
mov
bound
inc
mov
loopne
mov
add
xor
int3
pushf
cmp
out
xchg
push
mov
int
ds
outsb
int
pop
pop
dec
sub
mov
sub
sbb
push
pop
mov
jle
add
daa
mov
cmp
std
add
cmp
arpl
mov
mov
ljmp
shlb
push
out
sti
mov
lret
jl
jne
lds
inc
ret
or
cmpsb
les
sub
int3
push
testl
jecxz
ss
test
and
call
xchg
push
dec
xlat
lock
xor
mov
dec
mov
inc
shrl
shlb
xchg
fwait
adc
ret
leave
out
cmp
fisttpl
pop
or
push
or
xor
ja
ret
lods
cmc
push
sbb
mov
js
adc
fstl
xchg
sub
xor
rcr
push
push
xchg
pop
loope
add
dec
fwait
pop
push
xor
inc
repnz
jae
xor
arpl
lret
xor
jle
jge
xorl
cwtl
jge
in
std
inc
pusha
daa
scas
call
push
mov
stc
arpl
mov
push
sub
mov
cmpl
dec
sarl
bound
arpl
inc
sarl
sub
sbb
je
sub
push
fmuls
adc
pop
adc
out
xor
je
fstps
imul
jmp
imul
xor
adc
mov
pop
call
cmpsl
js
push
lods
out
and
loop
hlt
xchg
roll
jp
addr16
xchg
popa
ffreep
fisttpll
xor
jo,pn
sub
xor
aam
sahf
adc
leave
xchg
dec
jecxz
out
xchg
sbb
daa
les
mov
aas
push
test
push
adc
xor
notl
mov
xor
push
inc
lea
out
xchg
dec
xlat
add
pop
repnz
es
pop
arpl
subl
int
xchg
jb
test
shlb
xchg
insb
push
xlat
orb
or
jnp
sub
xchg
repnz
incb
popa
stos
dec
popf
xchg
xchg
lock
loope
test
repz
enter
or
sub
pop
cs
stos
fisubs
mov
sub
imul
lock
xor
adc
ss
inc
out
fs
fdivrp
aad
and
sbb
cmp
lret
pop
jmp
push
sub
js
mov
or
mov
sub
inc
das
movsl
sub
imul
addr16
repz
stos
add
push
mov
push
xchg
lcall
scas
lcall
idiv
into
and
inc
xchg
jmp
push
mov
lods
xor
out
sub
pop
hlt
push
pminub
ss
jl
jae
adc
cmpsb
dec
sbb
sahf
lahf
outsl
xor
inc
dec
and
xchg
call
mov
lock
pop
sbb
mov
sub
push
push
xchg
ret
rorb
enter
xor
cmp
in
fcomps
mov
leave
test
leave
fprem1
leave
or
jne
int
push
push
stos
popa
call
stos
xchg
ror
sub
mov
adc
loopne
cs
xchg
add
xor
andl
pop
jnp
cmp
push
add
imul
cmp
sbb
aad
andb
lods
pop
neg
pop
je
mov
pop
mov
xchg
test
add
inc
jmp
scas
mov
and
dec
ja
inc
popa
hlt
cmpsl
dec
loope
pop
loope
jns
lods
out
dec
lcall
lcall
mov
fcompl
mov
pusha
stos
repz
inc
roll
xchg
pop
pop
and
lea
xchg
pop
scas
pop
fstpl
mov
popa
cli
lcall
imul
mov
dec
or
jnp
jecxz
lcall
lods
daa
rclb
outsl
sti
push
imul
sarl
pop
adc
push
cltd
sub
dec
cltd
mov
pop
dec
jb
push
cmp
xor
push
mov
push
shl
arpl
and
dec
push
test
scas
mov
add
andl
stc
adc
shrl
adc
add
call
cmp
xchg
shr
cmc
pop
aam
xor
iret
call
mov
and
xchg
adc
and
adc
les
lret
pop
js
jb
xor
mov
jl
ja
lods
popa
xchg
out
mov
push
xor
imul
add
sbb
scas
or
scas
or
mov
fisubrl
or
lods
outsb
mov
xor
pop
test
lcall
fs
dec
into
sahf
addb
adc
std
int
xor
sub
add
and
loope
sub
xor
pusha
or
pop
insb
mov
data16
decb
loope
repz
mov
xchg
ja
sbb
std
adc
sbbl
mov
mov
scas
add
jne
dec
test
pusha
mov
out
and
xchg
lea
in
push
popf
addb
add
pusha
jp
dec
movsb
xor
inc
sbb
or
pop
fsubr
push
lea
hlt
mov
jns
or
pop
adc
rolb
dec
mov
pop
jmp
arpl
sbb
jmp
xchg
test
cli
rcll
sarb
xor
call
xchg
repz
test
xor
jns
mov
xchg
clc
cmp
push
pop
in
inc
mov
hlt
xchg
je
movl
mov
fcmove
jge
sbb
fsubs
movsb
mov
mov
and
sbb
or
data16
cld
dec
movsl
fwait
mov
nop
lock
mov
bound
pop
mov
arpl
sbb
out
lock
lds
or
sahf
mov
sbb
scas
loope
test
push
cmpsb
lods
stos
aam
xchg
sub
mov
loopne
es
js
mov
and
mov
sub
dec
add
icebp
xor
xchg
xchg
inc
xchg
gs
cmp
dec
xchg
out
cmp
shll
fsubs
loopne
push
adc
cmp
lods
xor
mov
xor
adc
mov
xchg
lretw
xlat
sub
adcl
push
xchg
addr16
dec
out
popf
mov
mov
hlt
and
inc
push
repnz
jp
mov
lret
pop
pop
out
dec
jb
sbb
lret
ret
outsb
dec
mov
je
leave
xchg
mov
or
aam
sub
push
repnz
out
outsl
loop
cmp
shll
jo
lret
jmp
lret
int3
bound
xor
mov
pop
dec
scas
fdivs
pop
dec
mov
and
sahf
or
inc
xchg
fs
cmpsb
sbb
mov
fwait
nop
das
lods
cmp
dec
or
and
cmp
dec
testb
adc
ljmp
mov
inc
leave
mov
or
push
in
mov
pop
pop
repz
cmpsl
xor
in
shr
loopne
push
cmc
out
dec
icebp
subl
mov
push
cli
dec
cmp
out
sbb
push
mov
mov
dec
je
scas
mov
ret
dec
jecxz
lods
jnp
popf
in
push
and
jo
push
sbb
call
inc
repz
loopne
jnp
cmp
adc
xor
dec
pop
fists
mov
mov
das
pusha
fldenv
mov
int3
aam
add
xor
push
xor
cltd
arpl
fistpll
fmul
add
mov
fdiv
lods
xchg
notb
pusha
stc
sbbl
cmp
inc
jae
jns
sub
adc
mov
shl
mov
mov
mov
in
cmpsb
repnz
mov
je
pop
fnstsw
popa
popa
testl
and
xchg
ficoml
push
cmpb
pop
cltd
fmul
or
imul
xchg
sub
test
mov
jle
outsl
mov
cmp
adc
cmp
lods
faddl
add
ss
rclb
xchg
pop
xor
push
jne
push
loope
add
inc
lods
shlb
inc
cwtl
and
int
setne
fmull
call
lret
dec
mov
mov
dec
xchg
pop
aad
pop
mov
lcall
cwtl
das
push
and
repnz
aaa
sub
xor
sbb
rolb
aam
xchg
les
das
mov
shrb
mov
inc
pop
push
loope
ret
xchg
jge
imull
in
std
repnz
adc
cmpb
jp
in
mov
fdivl
sbb
out
lods
dec
sbb
pop
dec
fbld
data16
add
jno
cmp
cmpsl
and
add
popa
sub
jnp
xor
push
fisubrs
lret
pop
push
lods
pop
dec
rolb
jmp
dec
enter
xchg
int3
cmp
cmpsl
bound
jp
dec
fmuls
xor
and
or
arpl
cmp
and
lea
mov
ja
mov
lods
in
cmpsl
sbb
loope
xor
out
notl
in
inc
cmp
int3
cmp
mov
pop
push
inc
fwait
ret
jp
inc
and
test
arpl
int
mov
iret
xchg
push
sub
and
shll
xchg
sbb
scas
leave
xchg
mov
iret
popa
inc
pop
lret
test
add
out
cmp
and
movsl
xchg
adc
sbb
adc
sub
fcmovne
addr16
fs
dec
repnz
cmpsl
sbb
adc
adc
add
std
test
inc
sub
nop
and
push
shlb
rol
ret
out
shrl
cs
pop
adc
ret
cmp
jnp
mov
mov
add
xchg
sub
decb
mov
addl
mov
cmp
scas
gs
sbb
mov
mov
test
mov
and
scas
stos
cmpsl
xchg
nop
mov
leave
movsb
repnz
bound
adc
rcrb
cmp
sti
pop
imul
rorb
mov
mov
adc
or
mov
xchg
divb
popf
cmpsl
lcall
sub
movl
adc
mov
fistps
ljmp
dec
call
lea
pop
mov
in
sub
sub
and
push
mov
cmp
pusha
aad
sbb
pop
lret
scas
bndstx
iret
jle
fdivs
scas
fildll
cmp
loop
mov
fstpl
push
stos
lret
jne
and
mov
rorl
adc
jg
mov
jnp
lea
pushf
push
movsl
into
pusha
push
pop
data16
sbb
sahf
lods
cmp
jmp
test
inc
fs
out
xchg
mov
fiaddl
addl
push
mov
mov
sub
outsl
push
mov
jnp
and
push
outsl
mov
popa
cmp
dec
pop
mov
popf
inc
repz
mov
lcall
sbb
sub
out
test
popf
jno
jb
sub
jecxz
sub
lods
mov
mov
and
stos
adc
mov
inc
mov
movsl
subb
push
jp
xor
cmc
jnp
daa
mov
hlt
mov
mov
push
push
aas
fnsave
icebp
inc
stos
cmp
jae
add
loop
aas
outsb
mov
xchg
sbb
sub
xchg
pushl
stos
mov
fwait
stc
nop
lea
daa
pop
xor
fcom
hlt
adc
mov
adc
xor
mov
jns
jnp
mov
mov
adc
aaa
pop
lea
into
aad
aad
movsb
sbb
mov
or
adc
pop
pop
ljmp
leave
adc
add
sbb
and
push
outsb
imul
lods
adc
add
inc
pusha
int3
jp
fucomip
mov
fisttps
cld
adc
dec
pop
jp
sbb
stos
or
pop
arpl
push
xchg
shrl
or
inc
jo
hlt
loope
pusha
mov
or
mov
push
fsts
push
or
mov
hlt
aaa
cli
stos
xor
or
sub
int3
ds
fistl
pusha
mov
call
flds
rcll
rcll
lock
sub
imul
lahf
popfw
in
sahf
push
lods
jmp
fwait
xor
scas
int3
dec
mov
dec
loope
lret
jl
mov
jge
pop
sub
in
xchg
ret
stc
bound
pop
or
leave
cmp
cli
cmp
sbb
cmpsb
leave
shr
imulb
xor
sub
cld
scas
cmp
aaa
adc
cmp
gs
cld
mov
stos
insl
sbbl
sbb
clc
cmp
decl
jmp
jecxz
inc
pusha
mov
xor
loop
adc
aas
sub
out
mov
sbb
sbb
outsb
xchg
sbb
lret
iret
out
add
mov
mov
mov
xchg
dec
push
sbb
cmp
xor
jmp
orl
rcrl
pop
sahf
mov
lret
jp
adcb
bound
pushf
mov
js
fs
xor
push
mov
fistpl
sub
pop
int
inc
popa
cltd
stos
mov
icebp
fisubrs
add
lret
jbe
mov
fidivrl
adc
mov
in
xchg
push
fwait
and
loope
pop
movsl
jl
add
repz
mov
mov
mov
mov
mov
adc
add
ss
cmp
loopne
cmp
push
insl
pusha
shll
aad
xchg
repz
dec
bound
adc
cmp
inc
ljmp
push
loopne
jge
test
scas
popf
jo
xchg
and
fldt
and
pop
cmc
pop
xchg
push
push
add
data16
mov
sub
lea
sbb
or
cmpsb
or
cmp
lods
test
push
and
xchg
mov
addr16
add
push
loope
gs
mov
pop
mov
and
aas
push
testb
jno
dec
pop
sub
imul
fidivrs
cli
fistpll
aaa
mov
test
add
lods
and
sahf
pop
sti
fmul
jg
mov
pop
mov
cwtl
ffreep
mov
cmpsb
dec
pop
in
lret
or
cld
push
ljmp
pop
jmp
rcrb
clc
mov
repz
negl
adc
cmp
xchg
mov
or
mov
or
imul
xchg
inc
jnp
inc
mov
testb
imul
loopne
xchg
cld
adc
incb
xchg
daa
mull
mov
jne
and
sub
inc
sub
sub
adc
shrb
out
aas
and
lret
notb
cmpsb
jnp
jmp
daa
aam
or
cltd
imul
cld
addr16
das
in
sub
ret
ffreep
mov
pushf
xor
lods
leave
sbb
ret
sti
pop
mov
cmp
std
inc
mov
cmp
mov
jbe
cmp
dec
in
pop
pop
jne
call
in
xor
lea
andb
jae
push
popl
ja
lea
or
mov
sbb
push
rcrl
imulb
fidivrl
inc
push
fldcw
shrb
test
aas
outsb
sub
pushf
jns
xor
call
dec
insl
rcr
fistps
insb
adc
sbb
xor
or
dec
push
mov
push
and
mov
mov
cmc
xchg
adc
in
add
inc
shlb
les
sub
and
push
mov
cli
inc
dec
jb
mov
scas
fsubrp
les
cmp
or
pop
mov
ret
cmpl
mov
int
adc
inc
stos
jbe
inc
and
daa
add
lock
cwtl
insb
fcompl
cld
nop
fnsave
mov
outsb
bound
js
mulb
jmp
mov
in
in
add
movaps
push
aad
out
addb
or
ljmp
jge
and
insl
outsb
xlat
shll
jmp
mov
mov
pop
popf
hlt
gs
aad
pop
xor
lea
pop
bound
pop
mov
push
or
adc
or
clc
mov
jg
into
mov
inc
push
fdivrl
int
outsl
push
mov
xchg
or
faddl
push
pop
vpsubusb
decb
push
loope
outsl
scas
out
adc
and
rorb
insb
std
xchg
xor
adcb
dec
fsts
jge
mov
inc
mov
out
in
js
fsubrl
mov
add
adc
stc
or
xchg
pushf
jecxz
or
fsubl
movsl
addr16
addr16
fwait
int3
lds
loop
loope
and
movsb
jno
popa
inc
gs
jmp
and
repz
cmovs
cmpsb
sti
adc
notb
xor
lock
dec
mov
hlt
mov
sbb
orb
in
mov
out
js
decb
inc
mov
dec
mov
mov
les
xchg
mov
sub
pop
cmp
xchg
jae
dec
adcb
or
sub
mov
xchg
lret
mulb
sub
pop
repz
xchg
mov
mov
les
sub
daa
js
fs
cld
scas
inc
mov
cmp
push
sbb
js
addr16
push
loopne
notb
aaa
cmc
out
push
lods
inc
mov
add
jb
adc
enter
push
out
nop
test
dec
and
sti
aam
sub
pop
imul
mov
imul
push
adc
ss
inc
xchg
lcall
int
lcall
cli
cmc
mov
clc
clc
popa
insb
ret
add
jne
xchg
sbb
push
jo
clc
inc
jge
fisubrs
push
xor
ljmp
cltd
xor
lret
ret
lock
adc
inc
leave
daa
mov
jne
xchg
adc
jnp
clc
inc
leave
lea
cmpsl
js
pusha
lods
inc
push
out
mov
or
cwtl
in
aad
xchg
movsl
dec
loope
mov
addr16
pop
jp
dec
inc
incl
xchg
cli
mov
push
or
or
mov
addr16
stos
stos
ret
dec
out
dec
lea
cmp
dec
out
bound
lock
fidivrl
mov
cmp
idivb
push
nop
rcll
sub
and
fstps
sbb
mov
rcr
dec
imul
repz
or
cs
mov
stos
jne
orb
jo
jmp
push
cld
das
sbb
pop
fisttpl
pop
cmp
cmp
dec
rcr
ss
add
jmp
into
faddl
test
psubsw
xchg
or
clc
shrb
std
fnstenv
jbe
ds
jl
pop
call
cmp
pop
hlt
xchg
jbe
loopne
aad
testl
xor
pop
sub
jge
cmp
add
jbe
pop
shlb
inc
insb
jns
jge
lea
push
cmp
xor
pop
ss
xchg
xchg
fcomps
mov
push
dec
jecxz
pop
cs
fwait
fs
sahf
xchg
cmp
in
test
stos
sub
decb
call
sbb
nop
and
xor
js
lock
push
mov
push
in
xor
lods
fdivs
xor
arpl
sahf
scas
cs
das
repnz
ret
shlb
jl
cmovg
mov
inc
jg
iret
adc
mov
loopne
cwtl
pop
adc
pop
mov
pop
das
or
aas
ret
xchg
xchg
mov
outsl
fmull
test
js
mov
imul
jbe
and
out
add
xchg
push
cmpsb
push
sub
jmp
mov
popf
negb
fisttpl
push
inc
jns
movsl
jae
mov
jmp
pop
movsb
and
mov
xchg
or
ljmp
lea
ret
loope
jecxz
cmp
fstpt
pop
repnz
loope
push
mov
insb
xchg
jne
ljmp
mov
sti
mov
and
lahf
adc
ss
sti
mov
sub
stc
push
mov
shl
pop
aad
xchg
push
jl
imulb
sub
ljmp
inc
fmul
jns
mov
sub
jbe
enter
xor
push
push
mov
mov
xchg
sbb
mov
xlat
mov
jmp
das
dec
pop
and
incb
push
das
arpl
inc
xchg
mov
mov
xor
xchg
or
cmp
adc
ja
xchg
sbb
and
pop
lea
xor
lock
jl
js
addr16
out
mov
dec
add
les
cwtl
das
jo
mov
into
mov
std
push
jmp
shrb
lods
daa
mov
lods
inc
dec
shll
dec
gs
dec
add
or
in
lds
test
jno
sub
or
sub
dec
mov
adcl
inc
lcall
mov
adc
dec
cmpb
mov
or
loop
lsl
arpl
rclb
add
and
fbld
jnp
and
mov
lret
xor
adcl
adc
jg
push
inc
jo
or
adc
inc
cmp
popf
push
mov
icebp
ror
lret
adc
sbb
andl
xchg
pop
sub
lods
jno
out
mov
rcl
insl
outsb
pop
jg
dec
les
jl
div
dec
movsb
add
sub
outsb
sub
sub
dec
inc
mov
mov
testb
mov
loop
dec
loope
or
push
clc
push
rorl
adc
adc
dec
int
mov
mov
aad
lcall
push
add
out
out
adc
addb
cmp
ret
ljmp
push
dec
add
sbb
jp
inc
call
inc
les
lods
rcll
js
adcl
add
lods
out
push
xchg
es
jbe
movsl
sub
jmp
xchg
std
or
je
sbb
dec
aad
sub
push
mov
add
xchg
sub
jae
je
sub
mov
jmp
push
jo
mov
or
dec
cmpsl
add
enter
push
jecxz
push
add
dec
jg
dec
mov
nop
out
movsl
or
hlt
ds
cmp
sbb
sub
xchg
xchg
cmp
xchg
in
mov
add
mov
mov
pusha
insl
loopne
cmovb
bound
fwait
or
dec
cltd
adc
xchg
lahf
push
dec
rolb
xchg
into
add
aam
or
cmp
lock
and
or
mov
adc
cli
add
decb
int3
mov
jecxz
fidivrl
jb
or
xchg
scas
and
popf
add
or
fcompl
mov
inc
call
mov
das
adc
jl
int3
jns
xchg
mov
pop
ja
ret
or
xchg
cmp
jae
sbb
pop
inc
push
adc
xchg
in
call
mov
mov
call
aas
pusha
ss
xchg
js
loopne
in
sub
ficoms
jp
lret
jb
stc
sbb
aaa
mov
lret
pop
or
test
ja
push
xor
mov
pop
cmp
bound
lahf
mov
dec
sbb
mov
pop
test
and
jecxz
xchg
jnp
fsub
jnp
pop
dec
add
test
xchg
jns
mov
xchg
push
and
in
cs
or
test
pop
and
or
test
push
shlb
je
lods
sbb
int
subb
icebp
cmp
sbb
xchg
nop
mov
xchg
iret
inc
fidivs
pop
xor
test
dec
jecxz
xor
jg
inc
fcmovnb
sbb
test
stc
cmpsb
outsl
orb
mov
sahf
or
rorl
lods
xchg
cmc
xchg
adc
mov
xchg
jl
push
add
dec
and
pop
mov
dec
adc
fldenv
ss
pop
sub
xchg
pop
imul
push
mov
lahf
out
push
hlt
fcoml
int3
mov
push
jae
into
mov
and
push
lea
cmc
mov
fsubrl
insl
sub
lret
in
gs
sub
arpl
fisttps
jne
and
pop
cmp
xchg
arpl
push
lcall
and
xor
outsl
or
pop
icebp
mov
test
rorb
pop
mov
inc
pushf
mov
shr
xchg
clc
fldenv
lods
aam
sbb
cltd
int
mov
adc
loopne
pop
ds
subl
pop
or
ret
repnz
xchg
stos
adc
mov
fdivp
jno
sub
lret
mov
mov
adc
pop
jb
dec
jl
xchg
lods
cmp
les
into
daa
pop
push
push
loopne
jo
xchg
out
cmp
dec
aaa
int3
aaa
push
cmp
loopne
adc
cmp
cli
aaa
pop
data16
sbb
sbb
add
lods
jmp
fwait
and
mov
and
mov
and
pop
ds
mov
lds
fldl
stos
sub
dec
pusha
outsb
sub
adc
insl
notb
sbb
jbe
jnp
and
test
lods
imul
ficoml
insb
hlt
xchg
stos
mov
xchg
dec
loopne
mov
mov
add
les
icebp
and
stos
jno
pop
repz
jb
out
add
adc
stos
sbb
and
iret
or
adc
jl
mov
add
jne
and
leave
test
mov
cwtl
jb
mov
dec
out
sub
data16
mov
das
or
or
ss
imul
add
iret
dec
mov
add
insl
cmp
sahf
fcom
xor
jg
sub
ljmp
cmc
adc
insb
adc
daa
xchg
call
sbb
lods
dec
mov
mov
sbb
lret
loopne
nop
mov
add
jo
dec
movsl
inc
mov
fwait
pop
xor
testl
mov
std
adc
adc
jbe
cmp
jne
rcrb
movsl
mov
jle
xor
mov
shrb
sti
int3
ret
sbb
and
lret
push
fwait
js
mov
push
lret
scas
mov
loopne
cltd
std
jmp
sbb
je
outsl
adcl
mulb
cmpl
rorb
subl
xor
pop
push
jbe
movsl
mov
mull
sarl
xchg
icebp
mov
repz
clc
dec
xchg
cmpsb
fisubl
addr16
mov
dec
inc
and
mov
addr16
inc
push
mov
sbb
cs
inc
ror
jns
pusha
aas
pop
push
fs
pop
xor
rcrl
mov
inc
pushf
subl
push
sub
jb
mov
movsl
dec
dec
xchg
shl
int
iret
xchg
pop
add
pop
mov
or
das
das
and
fwait
sub
cmpsb
mov
dec
repz
loopne
jae
cmp
xchg
push
jmp
sbb
sahf
hlt
cmp
call
gs
sbb
xor
push
aas
push
adc
lock
lret
mov
jl
mov
popf
imul
pushf
leave
sbb
mov
pop
sbb
scas
pop
dec
mov
inc
xchg
lahf
cwtd
and
xchg
add
xchg
sub
cmp
xchg
pop
xor
mov
pop
jne
pop
lock
mov
xchg
mov
leave
lods
mov
push
xor
mov
test
movsb
test
int
aad
clc
out
mov
xchg
ret
outsl
nop
clc
popl
and
and
xchg
dec
arpl
in
push
adc
xchg
imul
sbb
xchg
pop
pop
cmp
cmp
pop
rol
and
shll
adc
ficompl
int3
adc
sbb
add
sbb
cmp
jb
pop
and
aad
andb
roll
mov
aaa
into
xor
jmp
push
xchg
add
sub
jmp
mov
mov
cmp
jbe
xlat
adcl
jb
lret
insb
add
scas
mov
jmp
xchg
adc
stc
loope
sub
dec
jo
test
lahf
insb
dec
mov
pusha
push
test
xchg
aaa
iret
cld
movsl
lret
lahf
pusha
inc
adc
cmp
or
mov
mov
inc
dec
and
sub
outsb
push
and
test
lret
xchg
mov
ds
fcompl
jp
dec
popf
je
and
xor
inc
jne
fmuls
mov
ss
sbb
xor
insl
repz
xchg
pop
xor
in
sbb
inc
lods
arpl
inc
popf
xor
pop
fwait
cs
inc
aas
or
mov
add
out
rcll
rorb
xchg
shll
jg
loop,pn
xor
dec
xchg
insl
mov
pop
daa
and
xor
add
mov
call
cmp
andb
repnz
mov
adc
jle
clc
push
int3
adc
xchg
out
sub
jb
sbbl
xchg
movsl
add
fdivl
jnp
jns
stos
ljmp
mov
add
ret
and
or
mov
xchg
cs
sub
pop
rcl
imul
fwait
jbe
jno
inc
mov
sarl
dec
mov
js
or
sbb
fiaddl
mov
jo
sub
outsb
cmp
jl
sub
popf
push
movsl
into
xor
jp
cmpsl
sbb
in
inc
insl
jg
addr16
mov
fisttps
sbb
test
movsl
jecxz
xbegin
cmp
loopne
je
mov
mov
sbb
pop
ror
jno
jecxz
lods
addl
sbb
dec
adc
inc
push
lods
negl
lahf
testb
int
and
push
adc
inc
cmp
inc
outsb
bound
orl
pop
shll
adc
stos
sbb
sub
setg
es
jae
cmp
js
lock
mov
in
fnstcw
fwait
jmp
xchg
push
out
mov
push
es
mov
dec
mov
mov
mov
pop
in
in
std
outsb
aad
adc
imul
leave
jl
lcall
xor
or
cld
dec
and
push
ret
jle
stc
or
sub
in
xchg
dec
rcr
mov
or
lea
sbbl
loop
std
loope
mov
ret
pop
mov
rcrl
insb
lcall
cmpsb
sub
enter
incl
iret
aas
mov
or
insb
fucomi
inc
sbb
sbb
loop
add
loope
and
mov
add
xchg
sub
js
sub
sahf
xchg
sub
test
std
hlt
pop
push
data16
je
inc
and
jmp
cli
enter
sbb
mov
inc
subb
rcr
xor
xor
mov
ds
mov
aas
adc
fstps
into
nop
divl
xchg
pop
pop
sbb
pop
ret
call
test
addr16
or
mov
sub
sbb
rcrb
or
out
js
xor
fistpll
xor
dec
or
loope
mov
dec
jae
jns
mov
and
stos
scas
mov
mov
jbe
jnp
popf
andb
mov
mov
jmp
mov
inc
jnp
cmp
add
int
in
dec
mov
pushf
es
adcl
movsl
outsl
call
dec
dec
mov
push
ret
adc
push
or
or
xor
sub
jo
pop
fs
mov
jnp
inc
pop
test
lret
sbb
cmp
sahf
xor
lds
sub
xor
push
push
out
mov
scas
leave
jo
shrb
jbe
pop
lret
dec
mov
jno
dec
push
bound
mov
push
pusha
ret
hlt
pop
icebp
es
test
insl
inc
js
xor
lret
push
stc
sarb
sub
loop
test
cmp
popf
pcmpgtb
jmp
xchg
lcall
shl
cld
aaa
add
imul
ss
insb
scas
or
fwait
jbe
data16
cmpsl
ja
jno
dec
dec
dec
das
js
sbbl
adc
mov
jg
add
dec
divb
jb
dec
call
mov
or
mov
inc
pop
mov
jge
dec
adc
jnp
inc
pop
cmp
pmulhw
jmp
bound
adc
lcall
std
ja
jo
mov
fcompl
aam
add
fs
stos
sub
add
inc
mov
lods
shll
mov
rcl
cltd
mov
add
ret
mov
cmpsb
mov
rolb
addr16
daa
in
adcl
sub
add
xor
dec
mov
fdivrl
add
mov
in
push
xor
push
lock
movsl
icebp
aad
mov
and
imul
cmc
pop
pop
jge
repz
outsb
inc
test
mov
push
jle
mov
int
push
cmpsb
arpl
xchg
movsl
cmp
stos
in
pop
outsb
ret
pop
jp
lret
mov
inc
pop
cmp
mov
cmp
fmulp
outsl
pop
add
mov
mov
jge
rorl
pop
in
xor
xlat
add
mov
sub
sub
lds
xor
iret
mov
inc
mov
jne
mov
add
inc
fsubrl
loopne
jae
and
scas
or
addl
aaa
imul
sub
mov
and
fnsave
in
hlt
scas
lahf
push
cli
mov
adc
cmpsb
adcb
mov
dec
fcmove
aas
pop
pop
repz
idivl
jbe
loop
cmp
sub
cmp
mov
int3
sub
std
mov
ds
push
sub
ret
clc
pop
push
mov
pop
outsl
pop
fildll
or
bnd
addr16
in
scas
inc
cmp
cld
jecxz
sbb
icebp
or
inc
stos
movsb
cmp
test
cmp
xchg
or
sbb
dec
flds
mov
jno
fstps
and
test
add
xchg
mov
je
enter
sbb
cld
leave
lods
stc
jae
mov
test
cmp
sub
pop
xchg
dec
dec
mov
orb
int
andb
inc
jns
jbe
mov
repnz
dec
mov
jne
movsb
sbb
vgatherqpd
dec
addr16
into
fcmovnbe
fldt
push
dec
stos
mov
jns
mov
pop
shl
insb
shr
std
sub
ja
cs
push
movsl
mov
xor
sar
rolb
xor
mov
push
in
lds
jnp
inc
out
push
mov
push
stc
jno
cmpsb
mov
xor
cltd
cmp
push
jg
das
jge
mov
inc
rolb
fucomp
dec
dec
imul
mov
jo
mov
test
and
inc
decl
lds
sarb
pusha
negw
add
mov
bnd
ds
inc
mov
test
in
push
pop
stc
mov
out
mov
mov
mov
adcb
pop
push
xchg
dec
sub
or
rol
sub
sbbl
test
aaa
jl
jecxz
inc
roll
aad
jb
jmp
xor
pop
and
sub
enter
pop
gs
inc
xchg
fs
inc
js
or
mov
xchg
loope
loop
fcmovbe
lds
jo
jns
addr16
xchg
inc
add
inc
mov
loope
add
inc
stos
test
jecxz
xchg
in
sbb
mov
jle
jb
xor
sbb
push
lret
mov
sbb
jmp
aad
xchg
mov
shll
xchg
ficoms
dec
or
sbb
or
lahf
loopne
sbbb
cli
sbbb
add
nop
pop
adc
jmp
xor
add
jbe
add
inc
popa
pop
test
mov
xchg
jmp
clc
inc
out
daa
pop
loope
fcmovb
mov
loopne
scas
inc
loope
xor
stos
xor
ss
push
jo
call
inc
pop
cmpsb
pop
mov
fbstp
outsb
loope
inc
or
mov
push
imulb
insw
hlt
scas
pop
push
cwtl
xor
mov
fcoms
std
sbb
pushf
mov
movsl
call
jecxz
arpl
outsl
sbb
mov
xor
pop
ss
jne
xor
imul
add
std
fsubp
addb
mov
out
add
ss
push
out
sbb
dec
lcall
dec
lret
aad
push
cmp
outsb
pop
pop
pop
loop
xchg
pop
icebp
sub
jns
and
mov
out
lods
out
sub
and
and
cmp
popa
enter
mov
jne
aas
pop
rcrb
bound
and
pop
push
movsb
out
aad
jl
mov
dec
les
call
je
xchg
insl
mov
cmpsb
xlat
pop
testb
push
or
cmpsb
sub
xlat
cwtl
pop
rcrb
sbb
pop
test
jp
je
in
scas
xchg
lods
pop
clc
fst
mov
sub
pushf
fwait
cli
movsl
das
jp
popa
lds
adc
incl
sbbb
sar
push
outsb
push
mov
xor
rolb
sbb
movsl
fidivrl
iret
or
add
lock
cmp
xchg
push
and
push
jne
lahf
push
int
ret
jmp
movsb
sbb
jge
aaa
int
or
push
pop
ror
test
sahf
xor
pop
aam
das
lret
cltd
mov
dec
loopne
mull
out
cmpsl
mov
mov
mov
inc
movsl
fcmovne
xor
icebp
or
das
jne
sub
sbb
cmpsl
add
cmc
xor
xor
mov
inc
and
fs
and
rclb
mov
sahf
lock
cltd
lahf
mov
std
daa
jnp
cmpsl
icebp
xorb
or
push
pop
pop
cmpsb
lret
out
fnstsw
cmp
lret
ljmp
insb
cwtl
insl
jle
int3
mov
mov
lods
push
out
mov
jne
xchg
mov
push
jno
ds
pop
xchg
clc
outsl
cld
xlat
or
mov
add
aad
out
iret
in
dec
sahf
xor
pop
dec
mov
and
lret
in
std
in
and
ja
aam
fwait
xor
shlb
clc
xchg
adc
xchg
imul
mov
test
inc
cmpsl
push
lods
addr16
sub
push
sub
pop
push
fwait
xchg
stos
xchg
mov
mov
leave
pop
jno
shrb
mov
into
adc
adc
decl
xor
test
orl
mov
sub
dec
fwait
and
mov
iret
mov
sbb
push
add
addl
loope
fs
shrb
enter
lea
sahf
ss
xchg
cmp
scas
lods
mov
and
pmuludq
mov
xor
sbb
outsb
push
cwtl
stos
jb
xchg
cwtl
sbb
sti
dec
or
stos
jns
shlb
or
hlt
push
out
test
jnp
leave
repz
outsb
adc
call
aas
shl
pop
push
sub
adc
enter
out
fcmove
and
push
xor
sbb
sarl
xor
ffree
rclb
adc
add
xchg
fnsave
mov
mov
repz
repnz
mov
push
in
aad
pop
dec
pop
imul
mov
imul
jbe
mov
jmp
ss
mov
in
lret
lods
pop
roll
xchg
testl
jnp
cltd
sub
cmc
pusha
out
adcl
movsl
mov
popa
in
jp
inc
mov
push
mov
repz
into
mov
fcompl
xchg
stos
push
scas
pop
test
inc
sub
cltd
xchg
jnp
js
icebp
xor
js
add
inc
push
notb
mov
ljmp
popf
orb
jecxz
jecxz
xlat
jle
and
lahf
pop
insb
roll
popf
cmpsl
inc
push
shlb
test
mov
icebp
dec
push
lret
jb
cmp
mov
popl
popf
mov
subb
nop
imul
sub
aas
lock
jne
loope
jno
mov
subl
cs
and
dec
or
out
in
inc
jecxz
push
xor
inc
cmpsl
sub
lahf
jne
ss
inc
out
js
inc
aas
add
xlat
and
pushf
dec
fldcw
adc
popw
ret
repz
jno
std
lds
jg
sbb
adc
push
pop
and
cld
jno
mov
jge
add
gs
in
imul
mov
lods
mov
mov
mov
lods
shlb
pop
mov
xlat
pushf
push
or
sub
pop
xchg
rolb
fstpl
ds
mov
inc
dec
lret
out
into
and
in
pop
ret
fstl
test
pop
fists
jp
ja
jnp
aad
mov
add
mov
mov
xchg
roll
pop
dec
jg
rclb
loopne
xchg
sbb
xchg
ds
inc
cmp
jecxz
insl
push
stos
xlat
mov
mov
and
sbb
ds
mov
sbb
mov
mov
cld
pop
imul
cwtl
scas
inc
lret
cmp
push
fsubrs
inc
lods
push
inc
xor
sub
inc
sbbb
push
push
fdiv
aas
jns
lods
mov
daa
mov
popf
addl
mov
into
jb
cs
jns
test
pop
outsl
leave
sahf
ja
mov
nop
daa
les
repz
push
push
pop
push
mov
lret
pop
mov
dec
mov
mov
pop
icebp
ret
insb
es
inc
push
or
mov
push
ljmp
jno
repz
lds
sbb
sbb
les
imul
ja
add
ret
andb
mov
xor
mov
add
and
rcrl
sub
scas
push
aad
dec
rorb
mov
xlat
mov
andl
int
mov
mov
fwait
dec
mov
testb
movsl
insl
mov
inc
push
xchg
mov
repz
and
sbb
mov
pop
cmp
jge
jecxz
call
fstps
sbb
adc
xor
push
ja
aad
xchg
sub
mov
addr16
pusha
push
mov
xchg
mov
adc
xchg
jge
mov
test
iret
faddl
mov
sub
fsubrs
xchg
sbb
jmp
imul
add
fadd
jge
clc
stc
nop
daa
sub
cvtpi2ps
inc
inc
stc
je
out
push
mov
adc
insb
jbe
out
dec
sbb
in
adc
push
or
mov
xchg
and
test
push
movsl
adc
pop
jmp
mov
ret
jecxz
cmc
push
pcmpeqd
dec
mov
mov
es
mov
cmp
clc
jae
and
daa
scas
les
test
popa
clc
repz
dec
icebp
xchg
mov
lret
cmp
or
in
add
and
mov
lcall
outsb
xor
xor
call
inc
mov
jmp
aam
addl
lahf
incl
sbb
test
lret
jb
mov
jl
test
stos
sub
iret
and
dec
sub
xchg
fistps
lea
jl
shlb
bnd
cmpsl
push
mov
xchg
dec
rep
pop
icebp
in
sbb
add
movsb
xchg
jecxz
jecxz
mov
push
inc
and
mov
gs
pop
push
push
add
dec
es
lods
sti
cltd
fsqrt
mov
out
aad
xchg
mull
movsb
js
pop
out
add
dec
aas
xor
xchg
or
fwait
mov
sub
stos
mov
subl
je
sarb
insl
lock
push
xchg
jp
fbld
inc
sahf
xor
nop
sbb
sbb
cld
sub
sub
fldcw
cwtl
cmpsl
cmp
inc
adc
repz
ror
push
xchg
cmpsl
xorb
lret
movsb
mov
gs
adc
gs
mov
into
int3
in
aas
jae
jno
icebp
test
adc
adc
movl
xchg
cmp
stc
nop
gs
ret
pop
sahf
mov
jb
xor
jmp
popf
addl
insb
pop
cli
mov
cmpsl
push
push
inc
imul
inc
push
dec
push
in
jns
mov
addl
or
pushf
mov
pop
rep
jno
outsl
push
mov
inc
mov
cmp
sahf
popa
cwtl
stos
or
xor
enter
clc
push
test
pop
arpl
arpl
sahf
lock
mov
cmp
jmp
xor
leave
or
sub
test
leave
add
mov
movsl
jle
shrl
dec
dec
pop
mov
cmp
mov
mov
pop
lock
notb
loope
sti
lahf
daa
insl
pushf
shrl
in
insb
rcrb
lock
ja
inc
mov
punpckldq
push
ljmp
outsl
jns
icebp
fsubs
roll
les
cmc
mov
stc
subl
inc
enter
or
rol
push
imul
lret
lods
push
popf
fucomp
lds
sub
add
push
adc
rolb
jecxz
in
les
xchg
aaa
sub
xor
fwait
push
cmpsl
lea
jge
inc
jp
jbe
add
xchg
es
inc
test
cmp
inc
fdivrs
or
jae
mov
ret
repz
xlat
outsl
insl
enter
inc
jmp
lock
movsl
fnstcw
and
lds
sub
dec
push
cmc
mov
ret
adc
nop
dec
cmp
data16
mov
inc
out
pop
push
mov
mov
mov
push
fdivl
dec
sbb
xchg
mov
insb
mov
mov
mov
cmp
pusha
jle
pop
shll
stos
xchg
sbbb
mov
add
inc
and
xchg
xchg
inc
enter
test
xor
pop
repnz
rcrb
inc
jns
stc
ret
jnp
addr16
pop
mov
jne
jle
outsl
sub
lret
jae
enter
movsl
inc
and
leave
popf
and
cli
mov
jno
pusha
roll
ds
mov
std
int3
inc
mov
xlat
sbb
jecxz
fbstp
and
push
pusha
divl
fisubs
push
add
cmpsl
mov
lock
jne
lds
enter
mov
dec
loopne
test
pop
push
mov
sub
push
push
mov
insb
test
call
daa
scas
pop
out
fisttps
inc
repz
jmp
scas
add
add
add
sbb
pop
scas
fimuls
repnz
int3
inc
and
movntps
jne
enter
cmp
lret
lock
inc
shll
ds
int3
lds
xorl
insb
mov
cltd
xchg
jmp
ret
mov
xor
dec
jmp
mov
leave
pusha
pushf
or
add
pop
fbstp
sti
push
mov
int3
or
dec
and
sbb
std
inc
shrl
xchg
add
inc
rorl
lret
jae
and
insb
xorb
mov
adc
adc
mov
popl
cmp
repnz
xchg
jnp
push
xchg
notl
mov
add
scas
xchg
add
scas
sahf
mov
adc
push
jecxz
pushf
fdivr
inc
in
test
mov
scas
push
cmp
in
cmc
and
mov
inc
call
subl
loope
ficoml
leave
flds
push
xchg
in
lcall
or
mov
pop
jae
xor
lahf
or
lods
inc
sub
cli
addl
lret
xor
and
dec
int3
ljmp
jbe
mov
imul
mov
pop
pop
cmc
cmp
shrb
scas
int3
push
insl
sti
pop
lahf
sub
mov
scas
inc
int
icebp
mov
inc
sbb
nop
sub
add
js
adc
mov
cs
inc
pop
push
pop
aaa
pop
mov
gs
dec
negl
adcl
jne
push
popa
xor
fadds
xchg
add
jmp
xchg
xor
adc
push
test
xor
xadd
push
push
andb
sbb
pop
pop
lds
pop
into
idivb
clc
lods
pop
mov
icebp
fisubl
fnstsw
push
add
outsb
add
pop
idivb
insl
add
mov
inc
xchg
inc
fildl
clc
adc
push
pop
scas
add
loop
cld
fwait
int
xchg
aad
cs
mov
inc
mov
lods
inc
test
mov
push
push
add
sub
xor
and
jne
cmpsl
pop
dec
and
aad
fdivrs
sbb
push
ret
lret
mov
push
push
jmp
jle
jo
jmp
hlt
sbb
push
sub
imulb
cmp
sub
push
cmp
mov
sarl
pop
ss
out
ja
outsl
loopne,pn
shlb
mov
cltd
test
jae
pop
loop
inc
inc
data16
movsb
mov
out
push
cld
or
fildll
add
xchg
cmp
pop
jmp
ret
shr
jge
dec
inc
fldenv
shll
fs
lds
test
add
fidivrs
cmc
lret
aaa
loop
js
lcall
xchg
sar
int3
pushf
dec
pop
dec
lret
test
jp
repnz
xchg
xor
inc
mov
addr16
jecxz
mov
push
out
fwait
test
adc
cmp
pop
cli
adc
xlat
push
stc
and
je
push
fcomps
adc
mov
xlat
imul
dec
jno
jle
stos
xchg
and
dec
fnstcw
scas
cmc
movsb
pop
mov
xor
cli
add
xor
in
xchg
cld
aam
adc
nop
ret
jo
scas
dec
loopne
popa
push
or
aaa
ds
out
or
orl
jecxz
pop
imul
xchg
sti
movlhps
repnz
aaa
mov
es
test
inc
push
lret
mov
inc
jno
testb
rcl
xchg
xlat
or
mov
and
sbb
lds
lahf
fdivrl
shlb
out
xchg
aam
jnp
inc
sbb
sahf
xchg
and
jno
lods
jge
cmp
jnp
pop
cmpsb
cmc
popa
aad
dec
jne
inc
jno
jp
jecxz
insl
in
lods
xchg
dec
add
aad
mov
and
push
incl
xor
inc
pushw
pop
adc
adc
test
daa
stos
inc
adc
rolb
aaa
loope
imul
pop
xor
stos
inc
cmp
loop
in
insb
push
push
jge
test
imul
lcall
lods
cmc
cmp
dec
faddl
cmp
xlat
jbe
mov
mov
jg
dec
cmc
call
or
pop
fldt
or
sahf
pop
xchg
mov
mov
cli
rorl
adc
inc
mov
xlat
and
jle
cli
scas
mov
push
xor
adc
sub
dec
push
dec
mov
ror
shll
xchg
imul
xor
jnp
andl
jmp
push
xchg
lcall
cmp
cmp
pop
sbb
stc
testl
out
clc
pop
jo
dec
incl
mov
rclb
imul
pop
jbe
insb
add
outsl
mov
push
sbb
and
dec
adc
pop
jbe
aaa
cwtl
push
or
fbstp
cwtl
xchg
and
mov
sti
jae
push
cltd
test
and
xor
mov
jp
push
stos
push
sub
test
cwtl
xor
addl
add
xor
mov
mov
cmpsl
movsl
nop
pop
into
inc
lretw
add
ljmp
and
mov
rol
std
gs
push
sbb
mov
rcrb
jae
popa
in
jns
mov
xchg
imul
imul
repz
jbe
fcmovbe
imul
fisubrl
int3
pop
mov
lods
leave
mov
mov
sub
mov
aam
stos
jo
adc
xor
outsl
lock
roll
pop
dec
mov
cli
fcmovnbe
and
in
gs
pop
mov
jae
adcb
pop
adc
scas
sub
pop
mov
not
sbb
popf
lods
inc
pop
and
ds
ljmp
sbb
push
jmp
enter
jmp
sbb
int3
adc
outsl
sbb
pop
mov
stc
es
stos
cmc
inc
mov
mov
bound
mov
test
jb
out
repnz
mov
jle
lods
movsb
enter
pmaddwd
jo
sbb
sub
jnp
aad
sub
push
pop
les
sub
mov
out
lock
fwait
cmp
out
push
push
sub
arpl
mov
cmp
stc
insl
je
jge
popl
lea
test
js
pop
xor
push
xchg
mov
jl
rcll
add
loopne
mov
shr
sti
inc
or
je
xchg
xchg
fld
sub
cmp
pushf
dec
xchg
jge
sbb
cltd
fsubrs
mov
jae
cmp
and
add
lcall
and
add
mov
dec
mov
in
sbb
sar
xchg
add
mov
mov
xchg
inc
sbb
dec
in
mov
notb
inc
popf
hlt
cmpsb
and
jle
cli
daa
lcall
sbb
cmp
push
inc
cli
dec
aam
outsb
cmp
int3
hlt
mov
imul
push
push
jbe
subl
and
lret
cmp
push
fwait
rclb
lahf
stos
cmc
xor
pop
xchg
rcll
mov
jge
fdivrs
cmp
popf
adc
inc
lcall
and
or
cmpl
pop
jg
add
xchg
adc
es
fwait
stos
xchg
jp
lret
out
jge
outsl
stos
mov
ss
sbb
jno
jle
sbb
push
mov
mov
fnstsw
sub
pop
test
cld
scas
mov
addr16
test
iret
andb
out
jbe
out
or
aaa
xchg
ss
lock
push
icebp
gs
stc
loopne
sbb
dec
fdivl
dec
pop
mov
iret
stos
inc
in
inc
pop
adc
inc
push
push
mov
push
into
popf
or
ljmp
cmp
lock
inc
jns
rorl
sbb
pop
lods
sbb
xor
xor
pop
mov
loopne
outsb
rcrb
mov
push
add
cmpsl
xorl
sbb
inc
pop
sub
int
push
js
es
notb
stos
test
cmpsl
jecxz
fdivs
aad
fcompl
add
mov
jle
ds
adc
xlat
xor
or
lea
out
dec
movsb
mov
psubsb
sti
cwtl
sub
gs
ret
imul
test
and
out
mov
and
imul
jl
mov
add
push
movsl
or
xchg
adc
leave
rcr
jne
sbb
inc
dec
repnz
test
jg
sti
mov
mov
int
jecxz
dec
decb
in
mov
sbb
mov
nop
mov
cwtl
outsl
xor
pusha
and
jb
mov
jne
push
xor
mov
ret
fcmovb
arpl
inc
stc
cmp
jnp
arpl
cld
sbb
insl
mov
cmc
pop
pop
or
inc
andb
push
loop
jae
pop
imul
jle
xchg
std
ds
xchg
jge
fnsave
mov
fnstenv
ja
mov
std
push
fnsave
jo
ja
dec
add
xor
test
inc
clc
movl
outsl
or
mov
lcall
fcmovbe
adc
cmp
push
fs
dec
cltd
addb
sbb
sbb
mov
jmp
jae
jmp
sub
sbb
out
xchg
addr16
es
data16
fwait
dec
jecxz
loope
notl
jae
fidivs
js
imul
out
insl
inc
ja
push
test
insl
rcr
sahf
test
imul
and
mov
cmp
push
gs
aad
stc
xchg
outsl
mov
out
cmc
mov
fidivl
inc
jne
jl
rcll
insb
or
xor
mov
insl
rolb
in
xchg
imul
sub
js
push
adc
popf
es
lock
cmp
outsb
push
leave
dec
cs
call
fiadds
mov
dec
test
outsb
sbb
dec
cmp
cmp
lahf
in
repnz
jbe
or
add
sbb
push
ljmp
jno
scas
cwtl
push
les
in
mov
popa
daa
and
gs
adc
add
es
pop
cmp
or
cli
jg
aas
iret
fs
dec
mov
in
in
mov
fmull
pop
dec
xor
sahf
xchg
in
leave
mov
arpl
xchg
sbb
pop
test
testl
push
sahf
or
fwait
cmp
roll
and
pop
shrl
shll
pop
or
imul
xchg
pop
dec
push
repnz
dec
cmp
sub
les
jb
gs
repz
add
mov
or
adc
push
insl
std
mov
fldl
jg
fbstp
lds
sti
imul
js
add
push
or
je
stos
ds
xchg
iret
inc
mov
push
scas
jb
sbb
out
and
insl
push
cs
aas
test
sahf
and
sub
push
dec
scas
les
test
lods
aas
mov
xor
push
sub
rcr
mov
mov
pushf
flds
push
sbb
pop
lock
xor
mov
cld
fadds
cltd
sbb
and
in
push
xlat
sti
std
xor
jae
loope
test
cwtl
je
lods
or
xchg
ja
inc
stos
js
jno
inc
sbb
sbb
mov
lds
out
xor
or
ds
mov
rol
sbb
cmp
imull
xchg
mov
fimuls
mov
call
adc
montmul
cmpsb
les
and
inc
inc
mov
xchg
mov
aad
pop
push
repz
jl
lea
into
repz
push
adc
pop
insl
bound
push
push
aas
loope
dec
ror
and
mov
cltd
sub
add
pop
outsb
adc
sub
mov
sub
lds
sbb
and
lret
pop
js
imul
hlt
sbb
sub
mov
scas
jo
loopne
jno
std
loop
jae
in
fsubrs
mov
and
imul
and
lock
add
inc
inc
xlat
jae
das
cmp
divl
icebp
mov
push
xor
pop
mov
add
ret
xor
push
fcomip
cmp
jmp
mov
das
add
stos
mov
insl
sub
pop
or
push
int3
and
mov
stos
mov
inc
mov
andl
movsb
inc
loope
and
ds
push
mov
mov
rorl
push
sar
push
nop
push
ss
xor
and
fcoml
push
lods
xor
repnz
fwait
loope
cltd
ds
fwait
mov
inc
sbb
cwtl
das
inc
js
jge
cmp
ljmp
call
es
stos
outsb
in
sbb
sub
xor
iret
jo
mov
adc
cs
nop
xchg
cmp
mov
gs
nop
push
lret
adcl
fdivs
pop
es
inc
sub
lahf
push
aam
mov
stos
stos
mov
cld
mov
push
xor
mov
xor
test
push
inc
or
inc
pop
mov
faddl
aad
popa
or
xchg
and
push
lea
xchg
jb
and
cmp
mov
sbb
bound
xchg
xor
fsubrl
lods
add
xor
mov
cltd
pop
inc
sbb
in
inc
mov
int
push
shrb
adc
data16
adc
push
jbe
js
push
add
idiv
sbb
jge
dec
lock
adc
adc
ja
pushf
pop
stos
xchg
movsl
cmp
mov
mov
xchg
sbb
icebp
lret
cmp
in
push
xchg
push
cmp
jl
mov
shl
push
mov
cmp
fldcw
cld
test
ljmp
mov
ss
mov
cmp
mov
inc
pusha
ss
movsb
lock
popf
mov
imul
inc
dec
and
fwait
in
inc
mov
scas
sub
mov
roll
and
insb
das
push
add
divl
das
push
mov
insb
test
loopne
icebp
mov
cmpsl
ret
mov
insb
push
jnp
cmp
lock
adc
in
es
mov
sbb
in
dec
or
shrl
ret
std
imul
call
mov
xchg
outsb
adc
pop
mov
cmpsb
cld
stc
dec
fildll
add
std
sub
lea
movsb
pop
sbb
rorb
cs
js
pop
inc
subl
fimull
push
stc
jo
stos
lea
sahf
pusha
lods
xor
ficomps
push
call
xchg
mov
adc
aas
push
push
xor
inc
sub
popf
or
out
cltd
loope
mov
loop
lods
inc
test
adc
and
xor
xchg
push
inc
gs
add
in
mov
in
adc
mov
jbe
outsl
dec
lahf
insl
or
push
jbe
fsubrs
sbb
stc
int
jno
xor
jp
xchg
imul
in
in
int
mov
or
sbb
dec
jl
cmp
xchg
iret
add
test
mov
pop
fistl
addr16
rcrb
pop
jecxz
mov
mov
xor
inc
fdivs
shrl
call
dec
out
das
in
test
js
in
jo
jno
daa
xchg
cmp
pop
stos
cmp
stc
in
mov
stc
popa
xor
xchg
push
cwtl
or
nop
hlt
push
xchg
or
dec
je
pop
mov
cmc
jae
cli
xchg
pop
mov
fisubrl
pop
dec
inc
fidivs
gs
push
pop
dec
out
adc
jecxz
cld
jp
jno
popa
push
add
inc
loopne
out
xchg
lds
cmp
cmc
lods
inc
jecxz
push
out
les
shll
xor
popa
inc
aaa
call
mov
mov
sub
fwait
repnz
fnsave
outsb
add
dec
loop
xchg
dec
outsl
lock
cmp
filds
das
addr16
mov
loope
jns
subb
repnz
pop
mov
jae
jmp
mov
mov
sar
fidivrs
loop
xor
dec
test
jbe
pop
dec
iret
ds
mov
inc
mov
imul
pop
and
imul
in
push
adc
pop
repz
sbbb
aas
popf
push
cli
int
pop
xor
outsl
insb
add
rcll
fcoms
mov
out
movsb
push
in
adc
stos
inc
and
inc
mov
test
and
imull
decb
popf
rcrb
nop
mov
js
mov
add
pusha
jne
scas
xor
lods
mov
stos
xor
stos
jmp
xchg
mov
sub
ss
mov
mulb
cmp
mov
inc
push
push
sbb
mov
lret
lcall
ljmp
rcr
test
mov
cltd
lock
int
inc
fnstcw
push
out
out
mov
decl
lret
sbb
push
addl
jns
sub
sub
stos
jnp
mov
push
push
xchg
pop
in
add
xchg
xchg
jg
mov
mov
in
wbinvd
jne
mov
addl
fdivs
frstor
iret
lret
scas
aas
dec
stos
push
push
add
aad
decl
cmpsb
cmp
and
addr16
scas
ret
mov
movsl
outsb
fcoms
pop
inc
test
sahf
push
inc
inc
aas
jo
mov
sbb
test
in
cmp
add
idivb
pop
inc
push
sub
dec
scas
lahf
cmp
inc
add
sub
mov
adc
xchg
test
mov
jle
dec
jmp
andl
dec
cmp
push
mov
andb
ss
mov
std
shrl
imul
addr16
es
jp
loop
stos
dec
inc
xchg
stc
cmp
jge
add
dec
dec
push
mov
dec
mov
push
adc
lret
icebp
xchg
lods
and
mov
xrstor
xor
imul
sub
in
adc
dec
ret
and
xor
adc
jle
lret
add
dec
iret
addr16
sahf
lods
imulb
mov
push
mov
xchg
dec
gs
xor
and
mov
push
cmp
aaa
arpl
mov
push
movsl
insb
incl
lock
push
jno
mov
sub
push
sarl
mov
or
aaa
and
jge
sub
or
mov
in
mov
orl
xor
pop
pop
jl
mov
addr16
bnd
and
cmp
divb
cmp
or
adc
stos
mov
ret
arpl
jne
test
mov
mov
jbe
dec
in
jne
pop
add
push
pop
leave
in
push
stos
xchg
mov
or
scas
out
sbb
xor
sub
lock
xor
inc
je
jnp
push
jmp
adc
test
cltd
inc
push
test
je
mov
xor
and
mov
movb
pop
xor
and
shrb
and
pop
add
fdivr
rcl
mov
daa
jp
inc
sbb
inc
push
sti
cmpsl
mov
imul
pop
adc
xchg
scas
enter
icebp
dec
cmc
push
sbb
mov
iret
arpl
decl
jnp,pn
lods
ljmp
es
dec
jns
pusha
stos
mov
inc
jg
call
xchg
lahf
fimull
imul
pop
fs
out
push
lds
pushf
orl
repz
xor
pop
aaa
sti
cli
sbb
or
int3
cmp
push
inc
sbb
repz
loopne
sahf
pop
daa
aad
lds
ja
dec
inc
pop
sar
or
add
aam
insl
sbb
and
jmp
rcrl
xchg
test
decl
push
sub
add
cmpsl
pushl
or
pop
repz
mov
repz
push
movsl
push
jle
jns
inc
mov
add
pushf
xor
jbe
adc
inc
cmc
mov
sub
sbb
daa
outsl
xchg
sub
into
mov
mov
xchg
add
jae
and
xchg
adc
testb
mov
and
pop
ret
jnp
pop
xchg
xchg
push
xor
int
shr
out
out
jo
adc
push
fxch
imul
and
adc
cmp
cmp
shrl
jbe
add
xor
sub
cmp
sbb
dec
dec
clc
data16
mov
rcl
or
out
and
pop
gs
es
test
sub
pop
scas
inc
adc
inc
pop
push
ror
add
add
mov
fwait
pop
mov
mov
mov
adc
aam
into
dec
xor
or
mov
push
insl
pop
xlat
and
jae
dec
movsl
cmpsb
leave
push
pop
lret
inc
or
scas
pop
into
gs
mov
pop
andl
mov
sahf
mov
xor
mov
sbb
add
cmp
out
test
cmpsl
rol
pop
mov
shrb
test
loop
xor
jbe
repnz
cmp
dec
jge
inc
sbb
rorb
outsl
insb
xor
push
lods
aaa
xor
imul
repnz
mov
js
inc
js
leave
test
ljmp
mov
cmp
adc
mov
or
push
mov
mov
xchg
out
in
ret
mov
xchg
outsl
mull
sbb
scas
inc
cmp
stc
cmp
insl
push
mov
or
imul
mov
js
addr16
ret
pop
sub
push
leave
add
jbe
jnp
sbb
jl
fldcw
jb
xchg
scas
xlat
xchg
and
mov
iret
bound
repz
bound
out
cwtl
stc
inc
inc
jb
xchg
pop
inc
out
je
mov
sub
lea
xorb
aad
xor
add
repz
out
imul
inc
jo
ljmp
xor
and
repz
stos
inc
ror
jecxz
cmpsb
mov
push
sbb
sub
xchg
rolb
scas
and
and
mov
iret
scas
xor
and
cwtl
cmp
leave
mov
in
mov
stos
es
in
test
xchg
cmp
adc
test
sbbb
mov
and
in
lcall
bound
xchg
in
bound
cmpsl
jbe
shrb
fwait
scas
mov
lahf
or
and
inc
push
or
int3
mov
xchg
pusha
notl
popf
mov
or
leave
cmp
in
cltd
sbb
jecxz
movsb
out
xchg
insb
fisttps
imul
pop
or
stos
cmp
cld
cmp
mov
mov
inc
fwait
sti
mov
mov
call
outsb
repz
mov
mov
lods
and
sbb
data16
dec
push
fmull
mov
scas
gs
aad
sub
pop
popl
fdivrl
push
lods
dec
mov
and
sbb
arpl
popf
insl
jmp
dec
pushf
xchg
fdivl
adc
sub
and
pusha
adc
dec
movsb
mov
lret
bound
stos
jmp
fcom
ret
pop
lods
addr16
mov
out
and
dec
jmp
sub
xchg
xchg
sub
adc
push
jbe
mov
push
aaa
sbb
push
repz
pop
sbb
pop
push
mov
negb
xor
in
stos
cmpsb
xor
arpl
cmpsl
push
cmpps
ds
mov
add
push
fwait
mov
cmp
outsb
or
fnstcw
adc
adc
mov
push
lock
xorl
test
aaa
into
iret
sbb
test
mov
stc
in
js
lahf
mov
fnstenv
cld
jmp
loopne
dec
and
jbe
add
aaa
ss
sub
aam
sti
pop
nop
data16
sar
or
int3
test
in
es
xchg
sbb
dec
je
fcoml
push
dec
add
add
ja
test
sbb
and
lahf
sti
faddl
cmp
cli
out
insl
mov
fcmovbe
imul
mov
mov
vpcmpgtd
pop
mov
lock
sbb
mov
xchg
xchg
mov
push
outsb
cwtl
stc
pop
out
iret
stos
pushf
jp
inc
sub
gs
aas
decl
mov
in
scas
or
lods
subb
sub
pushf
add
and
iret
in
lcall
std
inc
cld
cmp
push
shl
pop
ljmp
push
ficoml
cmp
xchg
sub
xor
inc
mov
push
push
jmp
aam
jns
mov
pop
push
daa
mov
vmovups
add
outsl
or
std
repnz
pushf
rolb
cld
add
ret
dec
jmp
jg
push
mov
stos
pop
xchg
mov
push
nop
jmp
jp
orb
lock
jns
imul
repnz
rcl
gs
inc
mov
out
jl
mov
loope
xor
mov
in
test
cltd
loopne
mov
mov
push
ret
pop
push
mov
sub
inc
scas
pop
inc
dec
cmpsb
sbb
repz
pop
imul
mov
add
or
sbb
outsl
ja
pop
xlat
cltd
sbbl
fs
clc
adc
aam
push
xchg
push
lods
mov
lret
pusha
int
fs
mov
and
out
call
ret
mov
loop
insb
push
loopne
imul
or
add
dec
pop
insb
or
pop
popa
sub
xchg
push
fxch
mov
mov
add
dec
jle
shrl
nop
fimuls
lods
or
pop
mov
das
shll
pop
and
xchg
shll
mov
ja
cs
scas
test
or
cmpl
fildll
and
ficomps
lods
cld
sub
enter
aad
xlat
mov
push
stc
lods
sub
pop
enterw
push
call
xchg
xchg
roll
sub
aam
mov
push
dec
fildll
jmp
das
rcrb
push
outsb
stc
xchg
shlb
lret
xchg
push
fnstenv
fnstcw
pushf
pusha
cmpsb
xchg
dec
jg
jl
sub
lahf
dec
ret
xor
dec
es
imul
std
xor
cmpsl
sets
lods
inc
push
sub
sub
imul
test
or
dec
into
jl
fildll
jnp
popf
mov
fistl
testb
clc
out
sbb
dec
shl
aam
mov
inc
fmul
push
cwtl
pop
adc
adc
sbb
out
add
push
inc
insb
pop
cmp
jb
and
adc
daa
jbe
adc
sbb
repnz
ljmp
loope
lock
dec
ljmp
sub
lret
xlat
testb
pushf
pop
fs
int
ljmp
xor
mov
sub
popf
lcall
mov
sbb
pop
xchg
stos
insb
sbb
pop
loopne
imul
mov
loope
xor
add
cmpsb
mov
ds
dec
dec
push
lret
mov
sub
mov
fstps
mov
add
or
mov
mov
in
cmpb
add
xlat
jbe
push
in
out
ret
std
mov
xor
xchg
push
cld
pop
sub
jne
loope
push
lods
test
shufps
stos
faddl
mov
pop
mov
ret
lret
es
dec
dec
mov
imul
mov
adc
jo
pop
lock
fs
sub
imul
cmp
pop
xchg
jg
fcoml
lock
int3
outsl
int3
add
push
jae
jae
mov
scas
fdivp
xlat
mov
cmp
je
sbb
out
aam
clc
fsubrp
dec
pop
sub
out
subb
mov
data16
cwtl
popl
int
dec
adc
or
jns
jnp
or
pop
dec
pusha
testl
jbe
shll
push
xchg
ror
or
jb
ret
xchg
inc
imul
jge
add
lret
xor
xor
pusha
mov
rolb
test
cs
cmpsl
jmp
mov
flds
pop
push
mov
or
sub
loopne
push
clc
int3
push
mov
dec
push
leave
xchg
mov
jae
push
pusha
nop
mov
out
or
popa
or
les
cwtl
enter
mull
jns
pop
push
pop
mov
cmpsb
ret
outsl
outsb
sti
repz
and
adc
pop
inc
cmp
scas
lock
out
inc
test
xor
shl
cld
aaa
push
pop
stc
cmp
mov
rolb
mov
shl
add
mov
out
inc
pop
mov
hlt
sub
mov
pop
jnp
dec
lret
pop
stos
and
mov
rorl
andb
stos
adc
dec
mov
xor
shll
outsb
add
mov
or
jp
rcrl
xor
insl
dec
push
or
and
pop
xor
orb
cwtl
xchg
lds
xchg
mov
lods
xchg
jmp
mov
nop
daa
in
test
dec
ljmp
sub
lds
leave
xchg
sub
shll
icebp
add
cmp
mov
mov
push
cmp
lods
sub
test
hlt
dec
jge
inc
mov
pop
leave
fnstenv
cli
pop
inc
arpl
jbe
enter
inc
push
test
dec
imul
fistl
repnz
frstor
xchg
popa
lret
and
mov
xchg
push
jno
push
repnz
jp
in
cwtl
loop
cltd
mov
in
adc
pop
lds
sub
dec
into
js
or
outsl
mov
push
xchg
rclb
mov
lea
rorb
icebp
adc
inc
fwait
add
push
shrb
push
push
bound
adc
stc
pop
lcall
adc
pop
maxps
clc
adc
addb
mov
shlb
cltd
ss
jmp
xchg
cmp
outsb
xor
or
sub
inc
push
add
inc
cmpsl
out
xchg
add
cmp
pop
push
rcrl
cmp
sarl
int3
dec
loopne
push
sbb
push
mov
es
jge
jmp
hlt
sbb
idivb
ss
cmp
inc
jae
add
lea
lds
sbb
cmp
cltd
pop
jne
imul
and
pop
dec
cli
and
clc
jecxz
jno
pop
dec
fists
mov
cltd
push
dec
xlat
add
push
in
dec
and
mov
test
stos
jnp
cmpsb
cltd
rorb
lret
sbb
inc
dec
sbb
jp
pop
ret
adc
push
cmp
mov
mov
xor
dec
lahf
sub
cld
sahf
clc
dec
inc
sub
ja
mov
subb
out
subl
or
loop
sub
hlt
cmp
adc
incb
movsb
sub
ja
out
jg
ja
pop
movsl
mov
adc
adc
mov
movsl
inc
cmp
fistpl
bound
xchg
jmp
dec
cmpsl
sub
adc
test
inc
sub
cmp
iret
aad
jbe
shrl
sub
xchg
push
scas
and
push
mov
les
adc
sub
mov
dec
call
or
cmp
aaa
stos
lret
into
mov
hlt
add
jnp
cld
add
add
sahf
insl
inc
rclb
nop
mov
icebp
leave
pusha
push
jae
rcll
add
xchg
or
sti
aaa
aam
push
iret
xlat
inc
sbb
sub
daa
fwait
jae
and
sbb
into
test
sub
lock
rcrb
insl
xor
inc
xchg
sbb
xor
imul
ror
pop
mov
rorb
xorb
pop
adc
scas
mov
enter
sub
mov
sub
dec
add
das
mov
scas
pop
ljmp
push
xchg
test
leave
and
imul
jecxz
and
lcall
cwtl
shl
jnp
ret
add
pop
cmp
ljmp
sbb
stos
xorb
decl
mov
pop
inc
jl
xchg
push
imul
cli
pop
mov
mov
pushf
in
or
aaa
mov
and
lock
and
and
adc
push
ja
lds
jp
rcrb
jl
lods
mov
fsubp
jge
sbb
rcr
das
xchg
rcr
mov
pop
dec
pop
fisttpl
jecxz
das
pop
inc
cli
inc
ret
add
cmpsb
int3
jno
xor
mov
add
incb
dec
sbb
mov
test
push
adc
jne
aas
loope
xor
cld
fwait
mov
cltd
xchg
push
push
pop
dec
xor
push
lods
popf
jle
rcll
scas
jns
sub
cmp
popf
shrl
xchg
ljmp
and
push
push
add
or
test
sbb
inc
andl
inc
cmpsl
cmp
xor
shl
pop
jecxz
push
in
cli
mov
imul
mov
minps
test
ja
in
xor
lcall
rcll
mov
out
add
iret
popa
add
das
iret
iret
bound
filds
cmpsl
cmp
fadd
push
xor
xlat
jmp
leave
fisttpl
cmp
shrl
or
mov
sub
xchg
sub
mov
daa
mov
push
mov
das
add
scas
das
adc
mov
imul
iret
in
in
add
sub
xchg
cmpsl
dec
pop
mov
ret
and
xchg
aas
dec
lea
aad
jnp
mov
add
std
repz
ds
scas
inc
add
dec
xchg
push
inc
push
xchg
pop
icebp
add
scas
sub
sub
inc
cli
ja
adc
add
push
cmp
cmp
pop
mov
das
jmp
cmpsl
sbb
cwtl
mov
mov
and
ss
hlt
sub
push
push
sahf
and
lret
insb
sbb
cmp
ret
fcomi
push
or
in
add
bound
scas
push
ja
movsl
sub
push
or
pop
outsb
out
xchg
mov
call
lods
pop
cmp
out
push
daa
xor
jl
pop
mov
xor
xchg
jmp
in
add
pop
or
pop
and
inc
lahf
decl
add
inc
mov
dec
pop
xchg
mov
addr16
jae
popa
mov
or
dec
ja
pop
imul
mov
test
cs
push
pushf
jmp
push
push
mov
pop
aas
sar
mov
sbb
xchg
test
and
mov
jle
push
and
adc
mov
jle
sbb
cmpsl
pop
cmp
mov
push
pop
sti
test
and
stos
xchg
in
and
push
repnz
and
mov
xchg
je
int3
loopne
or
mov
lea
mov
pop
pop
fistpl
cmp
add
jne
icebp
add
in
test
subl
or
mov
jns
sbb
sbb
rolb
dec
add
fsubrs
pop
push
popf
fucomi
xchg
xchg
xor
cld
or
cmp
push
xchg
pop
dec
popf
repnz
int
hlt
ret
in
fwait
imul
mov
sub
xchg
mov
xchg
push
je
cmp
in
mov
or
loopne
adcl
cmp
or
jbe
mov
inc
sub
or
mov
movsb
fmull
test
pushf
adc
and
and
arpl
cmp
and
shr
jo
add
cmp
js
pop
add
mov
push
cs
cmp
jl
cmp
fucomip
jnp
cmp
loope
or
adc
adc
loope
sub
mov
push
sbb
mov
pop
xor
imul
ficoml
test
aad
imul
cld
and
out
xor
pop
inc
fs
xor
add
push
ds
push
xor
lretw
fstl
cmp
aas
add
jb
pusha
call
jb,pt
mov
dec
dec
pushl
dec
add
adc
inc
cltd
daa
insb
out
scas
pop
inc
pusha
cmp
add
aam
stos
push
add
fwait
repnz
and
stc
leave
dec
inc
ficoms
inc
daa
cmp
xor
or
sbb
mov
inc
pusha
in
mov
aam
pop
jg
pop
xchg
pop
mov
push
mov
jge
or
cmp
add
pop
or
adc
repnz
daa
and
inc
fcmovb
in
scas
adcl
add
push
cmc
xor
es
aad
imul
dec
into
pop
in
int3
insb
rorl
outsb
adc
inc
or
dec
mov
movb
adc
cmp
xlat
mov
outsb
movsb
jno
enter
popf
inc
in
fcomps
jmp
leave
inc
push
cmpsl
xchg
mov
insl
rolb
mov
nop
aad
mov
imul
fcomp
sub
fstpt
push
cmpb
mov
adc
or
scas
sub
js
out
sbb
out
movsl
mov
inc
push
test
dec
test
xchg
push
in
ficomps
xlat
sbbl
leave
outsl
ret
outsl
or
dec
pop
repz
and
cmpsb
and
mov
mov
mov
mov
outsb
jl
rcll
xchg
inc
cmp
ljmp
mov
dec
xor
xor
mov
push
cs
fcmovnbe
pop
fsubr
cmp
leave
lds
xor
dec
mov
int
fildll
jae
mov
loop
mov
mov
mov
sbb
mov
inc
push
arpl
fdivp
cltd
andb
mov
mov
test
pop
push
leave
fstpt
sbb
add
repz
dec
xor
xor
jo
or
xor
mull
push
outsl
dec
xor
xchg
divb
icebp
adc
and
lcall
movsb
or
sahf
mov
sub
push
ret
call
jne
or
sarb
jns
pop
cmpsl
sub
movsb
mov
in
in
dec
cmp
pop
cmp
mov
add
inc
lea
inc
mov
leave
adc
push
cmp
imull
push
cmpsl
xor
pop
mov
lods
adc
push
mov
lock
cmp
sub
cltd
xchg
xchg
fildll
jl
scas
pop
cld
cmc
paddusw
stos
jmp
jnp
icebp
xor
ds
sub
xchg
and
jmp
xchg
stos
call
add
xlat
repnz
fstpt
cmpsl
mov
shl
xchg
inc
fs
dec
push
repz
sub
enter
adc
add
in
and
addb
rorb
mov
sahf
out
cmp
add
jp
pop
divl
in
push
push
shll
loop
movsl
mov
cmp
repz
jge
or
push
jnp
add
int
fucom
push
mov
inc
and
fildl
inc
js
test
mov
sub
mov
mov
test
lcall
cmp
repz
lods
or
xchg
aas
pop
es
xchg
jns
fstpt
mov
cmp
adc
mov
inc
in
fnsave
xor
cwtl
lock
out
pushf
dec
subb
std
in
jg
xchg
cmp
jg
lds
add
and
iret
adc
inc
xchg
sub
pushf
jo
icebp
cwtl
mov
and
out
lahf
mov
mov
sub
icebp
sar
movsb
or
aas
cmpsb
adc
pusha
lahf
std
sbb
xor
jg
xchg
popa
sbb
rep
adc
sti
addr16
inc
push
jo
pop
stc
add
xor
xorl
lea
xor
jmp
push
push
pop
aaa
push
fmul
fs
loop
lods
cmp
dec
xchg
xor
dec
inc
jle
rep
cs
xlat
sahf
incl
out
div
pop
and
les
enter
inc
lods
stc
cli
add
mov
ret
mov
dec
mov
aam
scas
nop
jo
mov
pop
loop
inc
clc
daa
mov
pop
inc
add
ss
push
sub
lock
mov
xor
inc
inc
cmpsl
ds
pop
push
mov
ret
xlat
les
dec
add
test
test
sbb
fldenv
cmp
xor
cld
xchg
xchg
addr16
sbb
lret
lea
bound
xchg
fwait
or
dec
pop
mov
adc
jg
cmp
into
adc
test
mov
jle
xor
xchg
test
outsl
gs
mov
pop
and
mov
test
mov
dec
decl
pop
jns
mov
hlt
enter
mov
ja
repnz
sarl
jge
and
dec
in
cmp
cmpb
rcrb
es
jecxz
lods
xchg
xlat
call
mov
mov
cwtl
out
js
xor
sub
aaa
das
pop
cmp
jno
minps
loop
lcall
xchg
mov
int
lahf
lret
sbb
out
and
imul
mov
cmpb
icebp
js
inc
inc
fdiv
out
xchg
stos
sbb
lods
add
es
subb
adc
cmc
push
ret
outsl
sti
push
xchg
adc
jae
xchg
shlb
sub
jg
fisubs
mov
dec
pop
sub
testl
arpl
mov
sub
ror
cmp
jmp
xor
mov
fiaddl
cmpsb
gs
mov
lods
jbe
fs
push
xchg
dec
in
in
mov
std
push
inc
sbb
les
mull
jmp
xlat
mov
cltd
sti
fwait
jg
fwait
sub
xchg
adc
mov
sub
pop
shrl
les
xor
popf
repz
xchg
iret
push
jo
imul
fcmovnb
cmp
test
lret
mov
sub
pop
xchg
sahf
popf
cmpsl
xor
mov
pop
std
rorl
xchg
or
data16
iret
mov
jae
out
out
mov
loope
push
sbb
push
daa
adc
mov
into
out
pop
adc
and
xor
cmpsb
out
fadds
lea
clc
and
fcmovne
sbb
jo
es
or
repz
pushf
pop
data16
and
clc
xor
or
pop
xor
lock
inc
fdivrs
in
or
ds
negl
dec
xor
aaa
push
int
into
sbb
in
jnp
ja
jg
out
mov
out
fsin
dec
xchg
xor
xlat
int
inc
clc
push
mov
aad
jmp
cmp
jg
mov
ds
adc
out
cmc
cmp
or
push
mov
cmp
jbe
push
decb
cmc
adc
loop
jbe
fisttpl
pop
add
add
cmpsb
ss
jno
xlat
dec
adc
roll
push
xchg
insl
sub
aam
std
cs
xor
shll
cs
inc
jno
cli
cmp
ja
mov
movsb
jge
stc
jne
rcl
outsl
cmpb
in
mulb
mov
popa
or
xlat
and
mov
mov
xor
sub
lret
sarb
sti
test
aad
cmc
xchg
jecxz
pop
adc
aad
orl
mov
adc
js
sti
stc
xor
ret
cld
inc
cmpsb
aam
xor
das
xchg
xchg
inc
or
int3
xchg
dec
loop
imul
pop
push
in
push
leave
pop
cmp
scas
repz
jecxz
cmp
pusha
ss
std
loop
cmp
js
scas
mov
mov
stc
shlb
rcrl
mov
xlat
test
mov
mov
mov
fs
pop
loope
xchg
cmp
pop
adc
mov
mov
les
add
repnz
sbb
cmp
adc
xchg
pushf
sbb
xchg
pop
into
mov
popa
fsubl
add
ja
inc
mov
mov
test
jae
push
andb
jl
add
xchg
in
aad
dec
jmp
movsl
dec
icebp
pop
lcall
repnz
xchg
xchg
sahf
loop
adc
xor
mov
mov
or
popf
bound
cmp
lcall
add
nop
jmp
call
pop
cmp
push
push
out
pop
adc
mov
cli
pusha
xchg
mulb
cli
subb
sbb
fsubl
xor
clc
adc
sbb
into
fimull
call
daa
mov
loop
int
cwtl
insb
mov
adc
in
lods
pop
sub
aas
xchg
cmp
ret
adc
sub
addb
in
out
or
and
lock
sub
cs
je
inc
or
inc
insl
xchg
sbb
sahf
mov
popf
mov
dec
hlt
pop
lock
jl
out
xchg
stos
add
lock
rcl
ret
xchg
out
and
xor
pusha
add
test
ja
pushl
mov
jge
sbb
xor
fsubs
and
mov
mov
pop
in
sbb
cmp
loop
pop
sbb
mov
insb
fistps
jbe
call
pop
shlb
push
shll
dec
out
aas
push
pop
pop
xchg
mov
clc
mov
xlat
cmpsb
xchg
mov
rcr
mov
xchg
inc
pushf
and
add
out
les
fidivl
sub
int
std
mov
mov
push
dec
das
scas
pop
inc
inc
sahf
xor
repz
cmp
inc
loop
cld
hlt
push
fstl
fs
insb
pop
insb
loop
stos
push
jp
inc
push
int3
les
mov
mov
and
sbb
cmp
xchg
sahf
addr16
adc
hlt
out
stos
aam
outsl
add
xor
dec
pop
push
shr
dec
lret
dec
mov
pop
xchg
mov
das
push
inc
addb
or
lret
pop
lret
and
cmp
xchg
jne
and
push
insb
fistpl
inc
fbstp
and
cmp
xchg
ret
add
arpl
fisubrl
adc
push
inc
pop
popf
aaa
gs
inc
fbstp
pop
lods
push
jmp
testl
jp
push
imul
das
inc
ss
adc
dec
pop
stos
xchg
jo
test
lret
pushl
mov
adcb
scas
hlt
mov
adc
ljmp
shlb
imul
sub
cmpsb
pop
test
in
fwait
inc
inc
sbb
scas
ret
cmp
aas
jo
pop
jmp
adc
fnstsw
sbb
dec
or
ljmp
jl
repz
pop
mov
xor
rorl
xchg
sub
dec
fists
adc
inc
aam
or
lods
loop
jnp
push
lods
adc
jb
adc
test
jnp
cmp
xor
push
fsubs
mov
sbb
sbb
mov
mulb
push
out
popf
inc
ds
dec
mov
lea
stc
adc
inc
or
adc
shlb
xchg
dec
cmpxchg
sarb
stos
add
fistl
js
cmovl
mov
lods
lcall
adc
fs
repz
dec
icebp
out
jmp
and
mov
jns
outsb
inc
xlat
mov
cmp
es
mov
xchg
pop
mov
fdivrp
in
inc
ljmp
in
lea
vmread
push
fsts
aad
cwtl
push
hlt
pop
ret
stc
popf
jle
rcrb
loope
xor
ljmp
pop
stc
inc
stos
fcmovb
fisubs
icebp
daa
jbe
sbb
adc
rdtsc
rcl
xor
add
ljmp
loopne
enter
mov
pop
mov
mov
pop
sub
push
inc
push
ds
mov
out
xchg
dec
cmp
push
cmpsb
outsl
test
sbb
mov
std
mov
je
arpl
mov
pop
cmp
icebp
sbb
out
pop
lahf
rolb
std
mov
xor
and
mov
sarb
popf
addr16
outsb
cld
push
mov
inc
aaa
push
mov
jne
and
movsl
cmp
out
iret
push
and
push
adc
jmp
sbb
adc
sub
jnp
sbbl
jno
dec
loop
ljmp
call
loop
dec
inc
popa
iret
xor
jae
sub
jl
push
mov
lods
in
sub
repz
scas
rolb
mov
inc
mov
pop
xor
or
loopne
push
xchg
leave
pop
pushf
cmpsb
mov
in
into
mov
pop
ja
shrb
cmp
sbb
loope
sbb
int
sysexit
xchg
jmp
cs
and
xchg
sarl
pop
ds
inc
cmpsl
dec
rol
mov
pop
jmp
icebp
and
mov
in
add
lcall
push
mov
pop
sub
outsb
int
popl
sarb
and
subl
mov
mov
popa
bnd
and
adc
das
jno
jp
and
xchg
loope
iret
mov
notl
cmp
iret
hlt
jmp
xlat
imul
les
jae
aas
fsubrs
fldcw
dec
arpl
inc
insl
xlat
fldcw
xchg
test
jbe
pop
in
push
divb
pop
or
xchg
adcb
push
sub
jbe
daa
xchg
cs
xor
cmp
js
push
cmpsl
stos
dec
mov
rcr
inc
inc
mov
cltd
push
dec
sarl
gs
cld
pop
cmp
out
shrb
cmpsb
in
add
xor
in
loope
add
fistl
mov
fidivrl
inc
jmp
stos
sub
fildl
jbe
pusha
daa
andl
shrl
jge
loop
inc
in
rcr
cmp
mov
push
iret
pushf
cmp
cmp
push
in
fisttpll
lock
loopne
mov
leave
test
mov
popa
or
ror
jae
shll
pushf
sbb
mov
addb
in
inc
or
add
insb
pop
xor
cwtl
stos
outsb
xor
fidivl
mov
push
fisubl
cmpsb
cmp
cmp
inc
shlb
xchg
mov
xchg
cld
ljmp
lahf
inc
in
sti
xor
sbb
fcmovnb
push
xor
push
jbe
mov
mov
sbb
inc
pop
outsl
sub
lahf
pop
push
in
or
dec
mov
outsl
imul
ljmp
sbb
sub
mov
int
mov
jbe
push
jg
inc
in
jo
push
mov
inc
test
sub
xlat
pop
cltd
mov
mov
mov
or
sbb
mov
dec
int
inc
ja
lret
xchg
aaa
push
int
call
lock
out
inc
orb
push
jmp
push
sbb
outsb
xlat
push
imul
dec
jae
scas
insl
data16
int3
mov
sbb
shlb
xor
push
call
sarb
push
mov
jo
repnz
xlat
fnstenv
push
arpl
mov
arpl
dec
popf
ds
lret
push
outsl
mov
lret
sbb
mov
sbbl
das
jl
ja
lock
ror
popa
add
subb
cmp
adc
ja
imul
mov
into
lret
frstor
std
scas
ss
mov
notb
je
adc
mov
xor
mov
int
add
jbe
add
mov
mov
pop
or
xor
mov
or
lock
mov
and
push
pop
sub
dec
push
cmp
push
data16
gs
pop
xchg
outsb
leave
js
xchg
mov
int3
nop
fistpll
loop
mov
fldl
pop
cmp
or
push
scas
dec
adc
int3
stos
sub
cmpsl
es
jle
jo
mov
jmp
and
jge
xor
jo
push
mov
sub
mov
insl
or
lea
add
outsb
loope
stos
sahf
push
and
stc
adc
or
push
lods
es
and
lods
data16
call
xor
fwait
aas
shlb
add
shrb
add
popf
push
cmpsl
and
les
out
push
mov
add
rcl
sub
jmp
out
add
or
and
pop
pop
xor
into
cmp
into
mov
or
mov
jo
pop
push
jb
push
xchg
pop
stos
es
or
sbb
push
pushf
sti
sbb
sub
ljmp
or
dec
lahf
shll
in
aas
sub
xchg
cltd
inc
movsb
xchg
dec
call
push
xchg
xchg
xor
mov
sbb
mov
lret
mov
sbb
push
mov
mov
in
stos
jne
ret
iret
inc
test
adc
rorl
repz
jns
pushf
mov
in
fsubrp
cli
mov
inc
loope
adc
lret
jbe
notl
pop
mov
xchg
lret
mov
cld
push
jbe
pop
push
push
aam
jl
idivl
mov
sbb
inc
pushf
rcrb
fsubl
or
pop
rcll
les
out
shlb
out
outsl
mov
in
and
mov
rol
mov
movsl
sub
scas
inc
int3
pusha
sbb
out
xor
int3
fs
sahf
mov
fcmove
test
lahf
xchg
daa
mov
scas
cmp
stc
enter
mov
mov
scas
push
loope
cmpsl
mov
sahf
mov
rcr
lds
cmpsl
cli
jmp
test
scas
xor
xchg
shll
out
jg
insb
jne
in
lock
xchg
cld
lcall
in
inc
dec
pop
mov
sub
lods
pop
mov
daa
adc
push
ss
outsb
clc
call
dec
hlt
mov
or
cld
ds
jecxz
addr16
inc
push
out
push
and
rcl
adc
inc
lcall
cwtl
add
aad
jg
loop
xchg
adc
push
fucom
xchg
cmp
adc
lods
hlt
fidivs
lret
movsl
dec
lahf
in
inc
leave
roll
pop
cmp
insb
mov
push
rcr
jp
es
sbb
pusha
or
ja
adcl
inc
jl
leave
ret
sbb
enter
dec
push
cli
push
mov
and
sbb
outsb
add
add
jno
xchg
mov
sahf
pop
or
sbb
mov
pop
xchg
mov
push
movsl
mov
imul
jl
lret
dec
pop
popf
dec
fistps
jnp
mov
xchg
inc
ds
xor
aam
ss
ljmp
stos
or
pop
stos
adcb
mov
imul
jle
ja
sbbb
idivl
mov
and
and
dec
gs
and
repz
push
xor
sbbl
fsubr
adc
pusha
pop
mov
sti
lods
lea
jbe
stos
ret
stos
subb
pop
mov
out
cmp
mov
pop
sbb
xor
fcomps
xor
clc
xchg
push
and
push
xchg
jp
sti
fsubr
sub
ja
inc
mov
xchg
sub
mov
xor
adc
pop
jecxz
sub
aaa
xchg
sub
xor
inc
sbb
cmpsl
push
sub
lcall
stc
lea
aad
outsb
adcl
xor
ret
es
mov
mov
push
cmpsl
add
xchg
sub
test
scas
enter
adc
addr16
stos
and
mull
mov
inc
divl
mov
clc
iret
jl
pusha
idivl
sbb
lds
lret
incb
xor
jl
movb
cld
sbbb
mov
push
stc
add
mov
nop
notb
xlat
icebp
jno
sbb
cmp
aam
jne
xor
pop
movb
ja
jmp
ret
shlb
in
pop
pop
xor
dec
ss
pusha
out
push
movd
jge
cwtl
and
dec
inc
loop
addl
js
fimuls
fistpll
jmp
pop
cmpsb
jne
xchg
dec
push
lods
cs
xchg
mov
mov
mov
mov
and
faddl
out
and
push
outsb
lret
sbb
add
or
pop
jp
cmp
add
aad
inc
push
lods
es
rol
lret
mov
scas
rcll
aad
into
cmp
dec
mov
hlt
mov
and
adc
adc
jp
xor
movsb
mov
cmc
outsl
lds
out
popf
jge
lcall
je
mov
fidivs
add
int3
jae
pushf
fs
insb
pop
and
into
or
jp
fsubs
leave
mov
and
cmp
cwtl
push
pop
inc
call
imul
das
mov
push
cmp
and
insb
push
lahf
sub
mov
mov
clc
add
xor
xchg
rolb
cmpsl
push
loop
outsl
xchg
sbb
movsb
mov
aam
fisubrs
imul
test
ja
mov
pop
fcompl
cmp
mov
inc
bnd
fidivrs
adc
icebp
mov
cmpsb
push
inc
outsl
insb
jle
insw
mov
inc
or
or
or
lods
shl
repnz
cwtl
pop
jle
mov
pop
popf
or
dec
nop
daa
jg
mov
xchg
add
sbb
pop
test
or
pop
mov
push
mov
sub
xlat
je
inc
data16
cmp
inc
cmpsb
xor
mov
jns
dec
dec
dec
clc
iret
mov
adc
pop
loope
xchg
mov
hlt
imul
push
xchg
sahf
mov
push
mov
enter
mov
insb
inc
and
pop
mov
cmp
call
test
ret
dec
push
dec
call
imul
repnz
mov
ret
leave
mov
in
mov
sti
pop
sub
aaa
in
gs
loope
stos
sub
fcompl
pop
lds
stos
stc
mov
daa
mov
pusha
mov
fistl
jno
ficoms
jo
push
mov
cmpsl
cmp
stos
push
adc
fbstp
xor
dec
mov
xchg
jb
pop
int3
push
mov
jmp
mov
push
jnp
jb
xchg
mov
ja
mov
add
lea
add
push
scas
add
popa
dec
in
pushf
je
stos
mov
adc
dec
addr16
sbb
repz
test
inc
pop
xor
neg
aad
popf
mov
jle
or
jg
add
add
push
push
sbb
dec
sub
add
leave
dec
fcoms
lods
repnz
stos
je
adc
mov
popa
je
cmpsl
aam
mov
test
in
lahf
mov
add
pop
mov
pushf
icebp
mov
lods
call
in
lods
mov
cltd
xchg
dec
sbb
mov
das
mov
sbb
cld
cmp
jae
jbe
stos
or
test
dec
sub
insb
fldcw
dec
push
jo
push
outsl
test
or
out
xor
cwtl
sahf
pop
jl
lds
sub
push
sti
lret
fdivs
loopne
push
adc
in
sahf
outsb
enter
and
and
ljmp
push
jg
repz
inc
cmpsl
cmp
xor
pop
jecxz
xor
mov
mov
mov
sbb
xchg
add
adc
je
mov
and
int3
arpl
pop
and
xchg
cmc
outsb
jl
add
dec
pop
lds
pop
in
jae
rcrl
popa
dec
rcrb
pop
dec
cmp
mov
add
push
or
or
es
lock
xchg
jae
ljmp
pushf
cmpb
bswap
out
xlat
test
mov
in
in
lods
jmp
insb
inc
sub
cmc
adc
fstps
movsb
mov
cwtl
xor
out
test
or
es
hlt
adc
mov
outsl
shr
adc
push
setl
aam
popa
xor
in
test
negb
aas
cltd
fwait
push
hlt
mov
adc
stc
jb
jmp
dec
daa
rcl
std
arpl
mov
cmp
xor
clc
bound
push
mov
push
pop
inc
pop
cmp
stos
xor
inc
mov
cmp
icebp
sub
test
daa
dec
sub
addb
inc
fbstp
pop
cmp
out
rcrl
mov
inc
je
fcomi
pop
hlt
dec
add
push
nop
push
aas
insl
loop
dec
push
ret
or
mov
lds
adc
cmpsl
xor
stc
pop
movsb
sub
inc
adc
inc
arpl
inc
xchg
sub
sbb
pop
and
out
xchg
jo
neg
jno
dec
sahf
push
jmp
pushl
hlt
inc
out
sbb
mov
jge
dec
scas
xchg
decb
cmc
les
fmuls
cmpsl
push
lods
xlat
sbb
ja
jns
rcl
sub
cltd
std
out
push
and
in
xchg
cs
push
inc
pop
mov
nop
dec
inc
mov
mov
cwtl
lcall
push
mov
push
cltd
jp
in
mov
sbb
cld
mov
lcall
push
out
test
lea
jbe
imul
add
xchg
cmp
paddw
mov
add
add
icebp
fdiv
pop
xchg
decl
push
punpcklbw
bound
test
test
insb
or
jl
sub
int
or
clc
mov
push
insb
xor
mov
push
sbb
mov
sti
inc
sbb
jecxz
xor
cli
cmpsl
mov
insl
xchg
sub
pop
cwtl
pop
jg
enter
mov
sbb
lods
add
jecxz
ficomps
fbstp
mov
or
push
sbb
pop
repnz
iret
das
inc
jnp
xchg
inc
scas
xor
pop
test
lock
cmc
inc
test
ss
sbbl
jp
and
fldl
dec
inc
scas
pop
push
inc
cmp
and
cmp
xor
dec
pop
dec
inc
and
dec
jo
sub
hlt
jg
popa
mov
and
pop
call
pop
ret
jo
and
pushf
lahf
lcall
cmp
xor
sub
aas
data16
aas
test
and
test
cld
test
pop
inc
orl
loope
adc
scas
shlb
fbld
add
dec
into
jno
test
mov
adc
ds
addr16
rcl
lret
and
inc
adc
inc
dec
roll
add
inc
pushf
jmp
pop
xchg
sbb
divb
cmp
push
sub
mov
push
aad
xchg
leave
stc
je
into
xchg
xchg
ljmp
loopne
push
test
xchg
sub
or
push
xor
dec
xchg
mov
push
dec
in
inc
das
ret
sub
je
xchg
sbb
mov
test
test
xor
es
xchg
mov
dec
mov
pop
xchg
rcrl
icebp
or
repnz
push
aaa
lret
xlat
icebp
popf
stc
lock
push
xor
push
popa
hlt
mov
jge
pop
adc
lods
cmpsl
es
sbb
lret
push
pop
sbb
out
or
jbe
sarb
outsb
out
inc
sbb
aaa
std
inc
leave
ss
pop
sub
mov
dec
fists
add
mov
loope
and
repnz
pop
xchg
inc
jo
andl
adc
enter
subb
pushf
mov
loop
insb
mov
push
test
ret
inc
xlat
insb
mov
and
and
in
rep
dec
orl
add
fildl
adc
ljmp
mov
adc
lea
fmulp
pushf
cltd
shlb
cmpl
jmp
movsb
pop
adc
xor
ljmp
js
inc
mov
fdivrl
inc
push
push
adc
xor
mov
je
or
orb
add
outsb
mov
ret
cmp
inc
sbb
imul
jo
je
pop
xorl
mov
inc
inc
addr16
jl
into
lods
and
pop
dec
push
push
sarb
mov
sub
and
push
and
cmp
out
cmpsl
or
add
imulb
or
imul
xchg
in
push
inc
imul
inc
sbb
mov
fwait
sbb
mov
mov
or
pop
xor
ljmp
sub
in
mov
movsl
pop
repz
mov
in
out
fnstsw
sti
jmp
add
sbb
adc
jecxz
inc
mov
push
xchg
pop
pop
mov
shl
add
xlat
jmp
nop
adc
mov
and
pop
push
ds
and
push
pop
loope
cmp
pop
ret
mov
pop
fstl
and
cmp
fnstcw
xor
mov
pop
mov
int
out
in
mov
dec
inc
mov
movsl
aam
push
scas
cwtl
or
mov
adc
push
arpl
fnsave
aam
mov
pop
shrb
andb
sbb
jg
fstl
xchg
mov
shrl
fdivl
xor
pop
and
lods
mov
sbb
add
addr16
push
testl
push
dec
inc
adc
pop
mov
stos
dec
mov
mov
outsb
xor
adc
das
fs
jg
test
adc
xchg
sbb
mov
divb
cmpsb
and
daa
mov
fs
and
sahf
xchg
jmp
fdivrp
dec
add
hlt
pop
jnp
push
sub
push
inc
movsl
adc
int
mov
sub
shll
cmpsb
mov
ret
sub
sbb
push
popa
out
bound
insl
mov
cld
jmp
fildll
mov
std
shr
or
shl
mov
stos
icebp
dec
push
pop
mov
into
insb
out
add
cld
sbb
dec
mov
add
test
outsl
pop
test
clc
pop
or
divb
pop
popf
jns
xchg
sub
dec
scas
cmc
mov
out
adc
andl
outsb
mov
inc
sub
rorb
imul
fisubrl
mov
xor
and
data16
inc
lock
shrb
mov
gs
sub
jne,pt
sub
mov
idivl
or
mov
nop
mov
add
sbb
mov
pop
movd
xlat
lds
xchg
outsb
call
fildll
ret
add
dec
sub
test
xchg
ja
and
mov
add
call
sub
in
pop
pop
jp
shrl
jnp
pop
shlb
adc
sub
xor
lret
movsb
cmp
and
cs
xchg
hlt
lret
inc
mov
sub
inc
lock
das
inc
mov
sub
xchg
mov
or
cmp
sub
js
xchg
dec
ss
jge
dec
mov
cmp
cmpsl
int3
mov
mov
push
cmp
xor
mov
pop
jl
adc
mov
cmpl
pop
and
stc
aaa
into
sub
stc
test
clc
lret
xor
movb
xor
xlat
sub
mov
push
inc
aas
add
push
test
aam
sub
int3
adc
ja
out
test
call
sarb
dec
movsl
mov
add
jecxz
ljmp
xor
push
push
rclb
js
outsl
mul
mov
cmpsb
add
sbb
repz
adc
leave
fcmovnu
fdivrl
adcl
incb
into
mov
add
jmp
add
cmpb
jge
lea
out
xor
jnp
pop
mov
jns
imul
addr16
fs
cwtl
pop
mov
mov
in
xchg
mov
add
jp
aad
insb
push
loop
push
push
cltd
push
inc
pusha
ss
repnz
mov
cmp
push
mov
inc
inc
inc
mov
sub
dec
sub
mov
push
stos
pop
sbb
and
push
pop
lock
pop
add
stos
cmp
stos
pop
push
je
fs
push
mov
adc
and
jp
pop
in
xchg
sub
add
cmc
ss
adc
rcrl
into
jo
jge
mov
xor
cmc
pop
imul
pop
lods
and
sub
dec
aam
mov
xor
not
xchg
pop
pop
call
pop
jecxz
hlt
or
rcl
sbb
arpl
cmc
sbb
loop
idivb
sarl
repnz
clc
fldpi
cmpb
addr16
cmp
mov
hlt
pop
mov
push
jl
lcall
jmp
outsb
cmp
pop
pusha
adc
sti
pop
pop
rol
add
mov
jl
pop
cmp
mov
xor
xorb
pop
loopne
or
cmp
out
daa
cmp
and
inc
lcall
pop
cs
sahf
mov
sbb
mov
orb
cmp
pop
nop
aaa
push
je
outsl
pop
fildll
xor
call
test
je
mov
outsb
rclb
mov
or
sbb
aad
andb
xchg
addr16
mov
stc
test
addr16
add
jnp
dec
sub
cs
cmpb
mov
jmp
sbb
mov
mov
push
sarl
or
mov
xchg
add
scas
and
std
insl
sbb
push
aas
add
stos
xlat
xchg
dec
fsubrp
dec
test
into
mov
insl
rorb
xchg
insb
dec
sub
repz
dec
pop
hlt
jecxz
adc
in
jnp
imul
jns
pusha
inc
lret
shl
lock
incl
and
dec
sbb
pop
sbb
jg
pop
std
cltd
lds
add
in
mov
or
hlt
addr16
jle
ret
sbb
shlb
dec
sub
jecxz
sub
push
jmp
cmp
jle
xor
pop
data16
repnz
or
jmp
or
popf
jo
xchg
cld
test
add
cmc
inc
push
sbb
jl
mov
or
sub
sub
das
sbb
outsb
lds
testb
clc
pop
or
cs
jmp
push
scas
imul
adc
pop
mov
cmp
mov
fs
jge
mov
pop
sbb
stos
jl
enter
stos
sbb
popl
pop
arpl
test
loope
mov
jge
cmp
sbbl
data16
scas
jg
loopne
cmpps
jns
jge
jl
out
push
in
pop
or
mov
mov
imul
sub
mov
push
rcrl
jnp
add
fildll
cmp
loopne
mov
inc
ret
xor
dec
sarb
dec
stos
push
jb
inc
inc
enter
es
data16
enter
mov
cmc
inc
push
mov
shrd
adc
add
dec
test
cltd
in
jae
incb
and
or
mov
jbe
js
scas
jmp
pushf
mov
daa
mov
jg
ret
and
rol
mov
bswap
mov
es
shl
pushf
cmp
xlat
shlb
call
inc
test
jl
in
or
push
cli
lcall
push
mov
cmpsl
and
adc
scas
scas
ja
leave
cmpsl
fadds
out
insb
cmp
int3
pop
imul
pusha
fwait
mov
je
pop
pop
inc
dec
or
mov
mov
aaa
int
lock
and
rolb
or
cmp
shrb
test
or
adc
add
loop
jmp
rclb
xchg
imul
cbtw
cmp
mov
dec
lods
rolb
pop
orl
lret
test
fstpl
jb
jmp
dec
pop
testb
pushf
xchg
in
call
adc
pusha
or
push
jo
mov
push
push
psraw
sbb
add
adc
cld
iret
xchg
cmp
fcoml
iret
pop
xorb
xchg
fdivs
mov
sub
idivl
lock
xor
cmc
cmp
js
sbb
es
cbtw
lret
jne
and
popa
jp
inc
insb
xchg
jnp
enter
sbb
aam
push
sahf
mov
les
hlt
mov
xchg
jl
js
pop
mov
out
arpl
and
test
jp
push
data16
cs
cmpl
outsb
or
imul
mov
ss
xchg
or
mov
mov
ret
mov
pop
pop
lret
rcl
int3
and
or
fnstsw
fildll
les
or
adc
mov
lock
xor
cmp
xor
dec
outsb
mov
sbb
push
popf
lods
aas
xchg
cmpsb
xchg
cmc
repnz
ds
je
xchg
inc
add
mov
hlt
cmp
push
dec
cmp
pop
shl
push
jnp
xorb
ljmp
cmp
aad
xchg
sub
scas
inc
add
jae
adc
push
inc
xor
mov
xlat
outsl
add
cmp
jae
jae
mov
jno
add
orl
js
pop
push
cltd
mov
movsb
icebp
repnz
mov
fildl
fcompl
es
lahf
aaa
int
inc
cmpsl
xor
or
dec
push
or
mov
cltd
je
into
adc
into
dec
faddl
push
imul
daa
push
jge
xchg
add
fwait
ss
lcall
sbb
mov
enter
cli
jmp
out
data16
push
mov
xchg
mov
imul
push
add
push
cmp
jne
inc
jo
es
js
cmp
lahf
xchg
push
inc
fs
jno
mov
inc
lods
cmp
in
or
add
movsb
push
movsl
jb
push
daa
sub
jns
loope
je
andb
daa
ljmp
shl
sub
lds
clc
aad
es
inc
stos
jne
inc
and
inc
leave
mov
jle
sub
inc
push
and
xchg
mov
test
pop
rorl
xchg
mov
repz
out
pop
or
stos
je
pusha
push
int
push
pushl
out
cwtl
add
adc
int3
cmp
pop
idivl
mov
sbb
scas
ret
pop
pop
movsl
jae
fsubrs
lods
ja
fbld
push
push
xchg
int3
shlb
mov
ja
fsub
cmp
icebp
mov
mov
mov
fldcw
test
xchg
call
and
jge
push
cltd
pusha
sahf
jle
mov
push
pushf
pop
cmp
lcall
adc
mov
mov
arpl
shr
adc
es
insb
movsl
test
dec
js
jnp
adc
into
mov
mov
cwtl
push
mov
test
addr16
stc
mov
outsb
ljmp
add
sub
mov
std
in
leave
pushw
cmp
push
sahf
inc
clc
sbb
push
adc
add
inc
jp
push
and
arpl
lcall
adc
push
fdivr
sbb
pop
lcall
cwtl
push
add
jmp
mov
mov
xor
pop
mov
call
aad
icebp
mov
lea
xor
loopne
mov
mov
testl
lods
mov
add
ljmp
orb
mov
adc
es
mull
dec
pop
mov
push
dec
dec
subl
dec
iret
shlb
jl
in
xchg
inc
idivl
popa
les
ret
call
mov
sub
bound
mov
or
insl
cmp
add
cs
pop
les
das
outsb
mov
aaa
add
lret
insb
mov
shr
jg
jns
leave
outsl
flds
pop
xlat
mov
mov
cmp
and
jge
mov
inc
int3
lret
push
out
jge
xor
adc
imul
mov
adc
lds
lods
jge
pop
icebp
imul
out
mov
and
out
mov
sbb
loopne
mov
and
xchg
lods
add
inc
pop
xor
adc
push
pop
fdivr
mov
push
stos
clc
aaa
jg
bound
or
icebp
ds
jle
fwait
sub
lahf
push
jbe
xor
lods
push
ss
mov
sahf
aam
cs
rcrb
cmp
outsl
inc
or
and
adc
add
aaa
inc
adc
jb
mov
rcrl
pop
inc
aaa
jnp
mov
jb
add
ret
js
movl
fmul
fmuls
cmpsl
jbe
fadds
jmp
dec
cmp
ljmp
push
std
cmp
fnstsw
adc
sub
mov
outsb
xor
arpl
and
cld
inc
es
jmp
scas
subl
mov
clc
inc
sub
and
std
sahf
loop
mov
adc
pop
jmp
jle
out
inc
pusha
cld
lcall
push
mov
and
inc
loop
in
push
cmpsl
mov
xor
stc
adc
lahf
dec
push
cmpsb
or
in
add
mov
mov
mov
std
inc
shlb
cwtl
mov
mov
dec
dec
mov
outsb
dec
pusha
xchg
mov
subl
cwtl
fwait
out
cmpsl
cld
lods
inc
popf
fwait
sbb
dec
test
in
mov
or
mov
adc
lahf
lahf
push
test
stos
out
notl
xchg
jle
xchg
xchg
add
test
xchg
std
aas
jl,pn
shll
stos
cmpsb
fs
mov
sub
out
ljmp
std
out
das
mov
cmp
sti
mov
gs
leave
and
out
rclb
jmp
jbe
add
bound
outsb
outsb
sub
mov
hlt
mov
mov
pop
lods
sub
neg
int
sub
cli
sbbl
fildll
sbb
mov
rcrl
adc
insl
loopne
add
mov
adc
push
fnstenv
mov
lahf
mov
rcrl
xchg
jae
fsubr
cmp
fs
push
sarl
sbb
insb
ret
outsl
sar
and
lret
push
jge
aam
filds
sbb
mov
jl
push
sahf
sub
and
fcomi
push
in
jl
cwtl
daa
jge
test
cli
xchg
icebp
dec
aam
in
lahf
aad
add
mov
push
fmuls
jae
repnz
adcb
cmp
mov
loopne
jg
inc
in
shrb
ja
add
mov
popa
pop
mov
add
cwtl
sub
ffree
dec
cmp
sbb
fidivrl
add
xor
add
jb
add
cltd
push
push
mov
mov
sub
aad
adc
imul
mov
rorl
cwtl
mov
rolb
hlt
mov
push
jo
sub
pop
cmp
mov
cmp
int
add
push
mov
imul
in
negb
arpl
mov
jo
xor
dec
sbb
cld
sbb
pushf
mov
push
idivl
or
movsl
psrad
std
inc
mov
iret
jmp
sarl
inc
cmp
and
repnz
shrb
adc
mov
pop
and
mov
xor
fucompp
push
and
sbb
cmc
push
test
inc
sbb
cmp
sub
mov
nop
mov
and
cmp
loope
or
bound
push
nop
and
mov
inc
cmp
repz
mov
mov
jmp
sbb
push
lret
push
cmp
shrl
stos
adc
xchg
jl
loope
repnz
mov
add
js
xchg
in
sbb
cmpsb
push
outsl
push
stos
stos
push
mov
inc
xor
mov
sbb
fwait
mov
hlt
jnp
pop
mov
xchg
rclb
lcall
cltd
addl
jno
lret
jo
pcmpgtw
stos
mov
mov
out
or
xchg
int
jl
fldcw
and
lds
or
pop
cmp
mov
sbb
and
rcrl
jns
cmpsl
dec
loop
mov
out
xchg
mov
pop
in
movsl
outsb
pop
mov
lret
jp
daa
mov
cli
and
iret
test
in
jge
jecxz
adc
leave
lret
add
fildll
jecxz
adc
roll
shl
lods
adc
jne
cs
cmp
or
add
ja
out
les
lods
dec
mov
std
adc
mov
enter
or
and
popf
or
mov
pop
push
pop
dec
sarl
jg
inc
lea
aaa
insl
add
outsb
pop
nop
push
rorl
add
repz
mulb
data16
and
test
push
mov
loop
mov
test
dec
enter
shrl
xor
mov
jl
push
pushf
inc
xchg
lock
or
das
xchg
pop
push
mov
out
bound
jbe
call
repnz
dec
call
ja
jo
adc
xor
or
sub
insl
lock
lcall
add
xor
subb
dec
dec
cmovge
ret
xor
pop
ss
sbb
jnp
mov
xchg
and
mov
shlb
jne
inc
arpl
out
dec
push
dec
out
adc
aaa
into
adc
mov
mov
cld
jae
mov
popa
in
cmp
jns
adc
movsl
dec
push
out
fsubs
jne
adc
loopne
mov
movsl
xor
jl
pop
daa
sub
pop
jg
add
out
orl
imul
mov
sbb
rcr
adc
mov
inc
imul
dec
in
adc
mov
jmp
sbb
decb
test
push
xorb
subl
scas
add
push
scas
inc
xchg
addr16
int3
jg
adc
jbe
dec
ljmp
mov
mov
mov
in
mov
mov
icebp
pop
or
cltd
in
mov
jge
aaa
jns
jecxz
adc
pop
lea
sub
shlb
mov
mov
xchg
nop
sbb
jg
add
jns
mov
sti
sbb
ljmp
jp
inc
adc
sbb
cmc
loope
jecxz
outsl
out
rolb
xchg
add
pop
int3
cmpsb
test
aad
xchg
sbb
jp
sarb
aaa
cld
pop
sbb
ret
add
outsb
fwait
rclb
mov
imul
frstor
sbb
inc
mov
add
jnp
jmp
add
pop
sbb
sbb
jo
mov
addr16
outsb
lds
insl
rcrl
xlat
cmp
pusha
xor
cmp
pop
nop
loopne
mov
andl
das
push
imul
mov
sbb
xchg
rorb
add
leave
push
fisubrl
cld
mov
imul
lcall
sbb
out
jmp
rcl
sbb
nop
xchg
cmp
ja
imul
cmp
jne
and
push
movsl
or
dec
xchg
jg
jg
jge
lods
imul
sub
subl
dec
pop
or
sarl
sub
sbb
xchg
call
pop
push
movsb
jg
xor
mov
and
dec
mov
loop
movsb
jecxz
out
out
pop
cmp
arpl
out
lds
lods
xchg
clc
inc
and
cmp
jge
cmpsl
or
cltd
fsub
pop
adc
mov
fdiv
stos
loopne
adc
pop
stc
and
xchg
jo
jne
outsb
or
xchg
sti
pusha
lock
push
jno
das
movsl
inc
aas
mov
fdivrl
inc
xor
add
hlt
or
stos
js
fcompl
xchg
push
push
mov
mov
mov
scas
mov
lods
stc
sarb
into
cmc
mov
iret
adc
insl
sti
xchg
mov
fcomps
push
popa
pushf
cmp
lods
lock
les
xchg
sub
sub
mov
imul
and
jo
bound
cmp
stos
ret
das
sbb
rorl
mov
sub
hlt
sbb
sub
dec
icebp
dec
repnz
add
ljmp
jns
dec
mov
into
pop
dec
push
inc
cmpsl
inc
stos
popa
ss
mov
cmp
shl
call
test
je
jo
jmp
push
inc
cmp
repz
lds
popf
jp
les
js
arpl
pop
mov
sub
mov
ret
cld
and
imul
loopne
push
cmpsb
mov
mov
jp
movl
and
pushf
cmpb
push
arpl
lahf
hlt
cmp
es
cltd
movl
and
lahf
push
subb
mov
add
pop
push
movsl
loope
movsb
loopne
adc
lds
dec
negl
xchg
imul
lods
in
aad
xchg
dec
out
jns
jo
jmp
jne
mov
jbe
inc
pop
mov
mov
test
cli
adc
cmpb
sbb
or
push
adc
stos
fcmovu
fdivs
aad
data16
xor
xor
pop
xchg
xchg
stos
cs
pop
aaa
jge
sub
andl
push
rol
pop
mov
loope
sub
lock
fiaddl
jmp
mov
shl
test
sub
shlb
aam
inc
mov
mov
adc
inc
daa
inc
out
xor
shrb
dec
lea
dec
lock
mov
mov
adc
add
mov
jmp
and
sub
dec
jmp
xlat
mov
lods
mov
shr
lcall
cmp
xchg
mov
andl
xchg
icebp
rcrl
ja
repnz
push
ret
sbb
fbld
push
mov
mov
ss
ds
cmp
negb
pop
adc
loope
ret
cmpl
pop
jl
inc
jb
dec
mov
int
outsb
inc
jp
or
js
or
pop
push
jecxz
xchg
cmpl
xchg
loope
xor
lea
das
mov
mov
and
dec
loop
sarb
add
imul
into
mov
mov
loope
jge
mov
out
jp
pop
aas
push
mov
into
xor
mov
lret
mov
mov
outsb
mov
and
xor
and
adc
test
sub
jg
test
xchg
push
ja
or
mov
mov
mov
mov
jp
add
scas
stos
mov
xchg
test
lret
add
push
mov
cmp
aaa
mov
rcrl
or
add
popa
nop
mov
xchg
sub
jecxz
or
loopne
out
aam
movsl
ror
mov
cwtl
push
pushw
or
or
fs
es
ja
inc
xchg
sub
mov
cmp
mov
jp
js
pop
out
mov
gs
jge
mov
xchg
pop
sbb
or
adc
or
outsl
dec
decb
inc
insl
aam
ret
and
inc
sub
mov
sbb
clc
pop
mov
addr16
int3
or
hlt
adc
ss
push
cmc
pop
push
mov
daa
mov
and
je
xor
cld
pop
das
out
pop
push
push
leave
adc
call
repnz
push
notb
fcompl
scas
sbb
cwtl
mov
jl
add
xchg
add
sbb
rclb
out
push
pop
dec
xchg
mov
xor
das
stos
fnsave
cmp
inc
bound
call
les
jle
xchg
dec
inc
push
pop
lahf
xor
in
dec
pusha
scas
mov
lods
orl
or
aas
int
pop
ljmp
cmp
pop
jmp
loope
pop
jns
jb
sbb
pop
mov
arpl
in
xor
aaa
adc
inc
inc
xchg
std
xchg
inc
cld
push
aam
bound
mov
mov
sbb
or
sarb
cmp
or
mov
and
xor
cmp
andl
sbb
roll
jecxz
lods
adc
vpslld
mov
mov
js
xchg
push
jecxz
pop
and
rcrl
fs
sbb
inc
shrb
pop
outsb
int3
es
fadds
shlb
fimuls
movsb
imul
jns
pop
jns
pop
das
sbb
nop
les
push
push
push
pushf
sbb
mov
xchg
jbe
xlat
hlt
mov
pop
daa
sarb
cld
or
stc
out
test
push
dec
fisttpl
stos
mov
rcrb
sub
hlt
push
scas
mov
sub
sub
adc
lahf
fs
inc
inc
shrb
push
dec
leave
pop
inc
jp
and
out
test
cmp
and
push
cmpsl
push
mov
fwait
xchg
ds
leave
cld
mov
int
and
aad
adc
jne
dec
shlb
adc
lods
inc
ss
mov
out
cmpsl
push
mov
mov
dec
xchg
inc
xchg
dec
cmp
push
aas
sub
and
pushf
dec
xchg
fcomi
bound
mov
imul
lock
ja
fs
xor
jl
push
lods
popf
or
sbb
or
jnp
xor
mov
mov
nop
mov
pushf
mov
push
jmp
xchg
lods
test
jb
cli
xchg
mov
mov
xchg
mov
cwtl
inc
jmp
or
stc
adc
pop
mov
add
mov
notl
repz
cs
sbb
jp
in
xchg
push
mov
mov
int
inc
push
ficoml
insb
inc
sti
movsl
mov
frstor
and
divl
lods
sbb
iret
add
cmpsl
mov
add
jg
inc
and
jp
fldenv
cmp
dec
negb
sub
mov
mov
rcll
js
fnstenv
mov
js
imull
data16
fldenv
pop
dec
xchg
dec
out
sub
sbb
stos
fsubrp
fcoms
scas
or
fidivrl
push
out
subl
xor
xchg
mov
xchg
mov
lods
sbb
add
push
mov
testl
movsb
mov
push
sub
sub
ds
imul
inc
or
dec
mov
subl
lcall
js
fsubs
inc
xchg
add
sahf
sub
cltd
jno
xchg
adc
xor
cmp
pop
shr
xchg
or
jns
insb
rorb
test
es
imul
mov
jle
sub
jno
je
not
mov
aam
xchg
add
ss
adcb
sti
pop
fidivl
mov
jns
jle
lods
mov
mov
add
add
inc
jne
cwtl
inc
or
add
mov
hlt
dec
dec
les
push
adcl
rclb
fisubrs
cmp
fidivrl
ffree
popf
pop
lcall
loop
das
mov
mov
mov
cld
push
clc
leave
mov
sub
xor
sbb
les
mov
and
icebp
mov
pop
mov
in
stos
outsl
gs
inc
jae
jb
xchg
xor
mov
int3
ficomps
xchg
sahf
xor
inc
or
ja
xchg
mov
int
loopne
mov
mov
xor
fisttps
sbb
adc
das
std
lahf
mov
push
and
mov
outsb
add
arpl
rclb
cli
mov
lret
ja
shlb
sub
and
push
adc
push
mov
lret
mov
fldcw
dec
mov
dec
inc
sarl
dec
sbb
sbb
push
lret
or
jp
fwait
xor
outsl
movsb
pop
out
call
cmp
push
pop
xchg
scas
lcall
test
ret
iret
jle
jp
lods
rcrb
mov
inc
adc
inc
jns
daa
aas
movsb
rorl
cld
sarl
push
dec
imul
pushl
in
or
mov
rol
adc
leave
xchg
mov
fmul
jns
getsec
sub
and
adcl
dec
push
push
bound
insb
lods
mov
add
mov
bound
push
adc
hlt
pop
out
and
push
xor
repnz
std
xchg
push
mov
sub
cltd
pop
pop
xor
das
pop
shrb
dec
out
mov
sahf
push
fcmovnu
xchg
mov
push
push
sarl
clc
and
loopne
out
mov
fmull
cli
inc
xchg
scas
jno
pop
je
ja
xchg
mov
popa
xor
adc
mov
and
icebp
or
jae
movsb
call
or
shrb
cmp
mov
push
and
pushf
jbe
dec
jle
mov
sbb
jne
xor
gs
push
nop
leave
xor
add
cmp
inc
or
sbb
mov
cmc
insl
dec
mov
jb
mov
sti
pop
jnp
dec
subb
cltd
je
inc
lea
jbe
sti
push
icebp
mov
mov
test
movsb
notb
pop
outsb
loop
nop
jnp
push
mov
jge
push
sub
fadd
test
push
vmwrite
mov
addr16
xchg
in
sub
xor
add
or
adc
test
xchg
mov
fcoml
dec
subl
loop
mov
sbbl
dec
or
adc
dec
and
cmpsb
xlat
and
sbb
mov
rorb
out
dec
dec
cmp
arpl
sbb
inc
pop
jl
or
xor
jg
inc
xchg
cs
push
push
add
aam
cli
nop
mov
inc
std
xchg
hlt
mov
fldenv
push
push
inc
fwait
pop
pop
stos
mov
les
and
push
mov
sub
dec
out
mov
xchg
call
mov
and
inc
fucomip
inc
or
wrmsr
icebp
cltd
sub
push
testl
gs
cmpsl
jmp
fldt
rclb
adc
sbb
fidivrl
mov
in
fadds
mov
mov
js
movsl
jge
sbb
mov
mov
ja
xchg
mov
fsubs
sbb
inc
cmp
enter
and
mov
inc
xlat
std
push
lock
push
pop
testb
data16
xchg
insl
add
int
sbb
add
movsb
cmp
mov
pop
pop
push
cmp
sub
or
frstor
icebp
mov
sub
xchg
sub
cwtl
pop
ljmp
push
outsl
mov
lods
lods
mov
in
jp
rcr
fucomi
xchg
mov
pop
hlt
dec
dec
scas
push
sbb
jnp
js
fnsave
in
stos
cld
sti
aas
cs
mov
negb
cmp
xchg
adc
xchg
fidivl
lcall
xchg
rclb
das
dec
out
xor
dec
outsb
pop
notl
fdivrl
mov
xor
or
mov
jae
nop
imul
or
push
pop
xchg
sub
and
mov
stc
in
call
loope
imul
test
in
jg
push
mov
or
xchg
dec
xchg
sub
push
mov
aaa
mov
cmp
sbb
cmp
repnz
dec
in
cmpl
mul
stos
pop
fadd
bound
or
scas
dec
lahf
cwtl
iret
shrb
inc
fistpl
mov
mov
adc
sar
negb
xchg
rorl
mov
leave
push
dec
int3
das
cmp
xchg
xor
mov
xchg
add
xor
mov
jns
jmp
movsl
lods
and
in
jne
in
xor
adc
mov
xchg
aam
sbb
fs
mov
mov
push
pushf
clc
or
sub
cltd
sbb
and
leave
mov
repz
pop
mov
mov
jecxz
inc
and
push
data16
cwtl
jbe
outsb
test
cmc
je
fs
xchg
movsb
xchg
sub
and
push
gs
lcall
int
sub
imul
flds
sbb
aas
sub
mov
loop
mov
into
test
pop
lret
mov
sahf
jmp
sbb
outsl
lock
pop
pushf
ljmp
and
pusha
outsb
cwtl
dec
into
dec
sbbb
jl
cli
xchg
jecxz
enter
xor
cmpsw
fsubr
fmuls
add
imul
popf
mul
ja
inc
push
xchg
lds
inc
in
je
add
pop
push
hlt
arpl
int
cmp
cs
push
sub
repz
jb
lds
and
mov
or
xchg
jb
adc
jmp
xchg
jns
aam
ret
ror
mov
insl
lock
mov
repnz
iret
sbb
inc
fcomi
push
mov
iret
mov
adc
fdivs
lods
aas
arpl
dec
pop
insl
divl
into
and
pusha
ss
sbbl
cmp
mov
sub
or
loop
mov
pop
xchg
sub
ds
and
fldcw
jb
lret
and
add
xchg
xor
stc
je
ficompl
scas
or
ja
mov
xchg
mov
sbb
fidivl
pop
sbb
xor
arpl
sbb
adc
jno
shrb
cmp
sub
fwait
out
lock
xor
ss
rorb
gs
push
pop
adc
orl
mov
test
aad
filds
jge
add
clc
mov
mov
sbb
loop
xchg
sarb
fstps
lods
mov
ja
rcll
sti
jbe
push
or
fstps
add
dec
push
frstor
push
insl
add
add
mov
pop
mov
ss
xchg
jmp
je
dec
pop
mov
ret
nop
lods
and
into
loop
shlb
subb
or
mov
add
hlt
push
or
push
xor
daa
push
sub
js
jne
sahf
push
mov
push
js
pop
mov
pop
ja
das
out
test
jl
adc
xchg
imul
sub
or
orb
ds
inc
insl
add
jae
mov
mov
mov
mov
leave
jne
xor
lods
dec
dec
das
xchg
sub
mov
in
mov
push
mov
stc
lock
inc
push
and
or
pushf
test
movsb
lcall
or
mov
xor
cmp
aam
xchg
xchg
adcb
cmp
sar
add
pop
and
cmp
cmp
push
popa
cmp
cmp
dec
jmp
sbb
mov
imul
jmp
jle
xchg
lock
cmpsl
sbb
lahf
push
hlt
es
xchg
int
or
sbb
pusha
ljmp
cli
or
cmpsl
jb
jbe
xchg
cmpsb
loope
sub
lock
inc
bound
push
jne
lock
ja
lcall
scas
pop
gs
in
add
mov
add
jae
loop
or
sbb
cmc
xchg
scas
mov
out
inc
hlt
mov
je
fsubl
xchg
scas
test
out
dec
and
je
dec
sbb
xchg
add
mov
dec
leave
add
lea
outsl
dec
stos
bound
out
xchg
in
test
repz
aad
aad
nop
test
or
popf
xorb
and
mov
orb
add
aad
cmp
cld
jb
adc
push
xor
mov
xchg
sahf
in
xchg
jg
sbb
dec
mov
data16
jbe
shlb
push
test
add
and
xor
add
and
enter
in
mov
ret
mov
ja
mov
pop
mov
add
cmp
ja
test
add
sti
push
lods
jo
mov
filds
dec
mov
xchg
outsl
cwtl
xchg
push
mov
mov
loop
sub
stos
icebp
pop
cwtl
out
xchg
inc
stc
sbb
pop
ret
gs
sahf
cs
add
lods
dec
adc
stos
mov
jae
pop
push
rcl
xchg
push
pop
cmc
outsb
xchg
jo
mov
sbb
pushf
int
add
inc
xchg
dec
mov
xor
cwtl
xor
ret
pushf
repz
pushf
xor
add
ds
jns
jo
xchg
pop
push
and
sub
test
int3
push
and
push
ret
inc
pop
xchg
cmc
clc
into
xchg
sub
paddusb
pop
mov
add
repz
or
lret
std
fiadds
ljmp
andb
push
adc
pop
mov
paddusb
pop
xlat
xchg
pop
mov
popf
cmp
hlt
scas
enter
inc
lretw
jmp
cld
in
pop
stos
jmp
sub
cltd
mov
sbb
notb
dec
pop
and
ss
shl
fsubl
sarl
loopne
jb
sbb
or
in
lea
dec
scas
push
popf
cs
sbb
xchg
in
sbb
loopne
cmp
jl
jp
push
pop
pop
inc
lcall
ljmp
dec
adc
push
pop
aad
inc
cmc
clc
sbb
int3
jno
std
push
insb
scas
ret
popf
sti
xchg
pcmpgtw
cli
mov
loop
cwtl
in
or
arpl
pop
test
push
scas
cmp
mov
pop
and
cld
sub
dec
jmp
sarb
push
mov
cwtl
das
stos
mov
cld
or
mov
mov
xchg
or
cmp
xchg
scas
xchg
mov
cmp
jnp
push
push
or
or
int
and
sbb
mov
js
dec
daa
mov
mov
jns
sub
adc
xchg
jbe
sub
stos
int3
fnstcw
push
add
lods
cmc
repz
fucom
add
fbstp
dec
mov
shr
pusha
scas
and
mov
stos
cmpsl
lcall
jmp
cmp
ljmp
mov
aas
mov
data16
mov
push
mov
enter
sbb
pop
push
aam
sbb
movsl
mov
movsl
imul
mov
sbb
push
nop
dec
push
sub
out
cmpsl
mov
xor
jp
dec
mov
xor
les
push
jb
and
and
stos
add
mov
mov
mov
and
push
xorb
movsl
and
sub
lock
and
add
cmp
cmp
lock
lea
inc
sub
xchg
cmp
outsb
lds
or
jbe
dec
mov
aas
cli
or
pop
cmp
lods
ljmp
pushf
dec
and
lea
sbb
inc
popa
cmpsb
movsb
mov
addr16
mov
sti
lcall
adc
sbb
xor
ficomps
ss
addr16
in
in
xor
jmp
ss
pusha
fsubrp
in
mov
lea
lods
adc
fmulp
and
add
xchg
cmp
or
jns
xchg
sbb
add
xchg
daa
inc
fldt
push
out
pop
je
pusha
push
icebp
jne
paddusb
xorl
loope
fimull
dec
shrl
jp
xor
lock
pop
push
in
sbb
cli
negl
sub
add
dec
adc
fst
cli
adc
lret
pusha
fucom
aas
outsl
jge
dec
jne
test
scas
push
lods
call
xchg
mov
or
mov
lahf
xor
jge
push
std
mov
stc
inc
adc
sub
mov
mov
repz
ds
jle
adc
sarl
mov
test
xchg
nop
inc
jmp
negb
std
into
scas
rcl
cmpsb
pushf
and
daa
mov
cli
push
inc
push
add
scas
fildll
daa
cld
adc
push
push
fwait
scas
inc
int3
mov
cmp
arpl
mov
xchg
insb
mov
lcall
stc
adc
cmp
icebp
fistps
inc
pushl
stos
sub
mov
jbe
movsb
roll
daa
dec
pop
xchg
xor
out
add
fnstsw
rorb
dec
data16
jnp
inc
ret
test
fs
dec
arpl
ds
sbb
test
push
sahf
ljmp
ja
sahf
stos
cbtw
frstor
arpl
jns
xor
adc
shld
mov
sub
filds
dec
fsub
iret
mov
mov
int
inc
xchg
jecxz
jbe
sbb
movsl
sbb
sub
or
inc
pop
test
cltd
or
adc
adc
cmc
insl
jg
lods
dec
mov
rorb
andb
and
jecxz
jmp
or
inc
sahf
enter
xor
das
xchg
in
sti
les
mov
add
pushf
pop
movsb
pop
push
jnp
fidivrl
xchg
mov
lods
push
add
pushf
mov
xchg
push
mov
dec
push
jno
fimuls
or
addr16
mov
fwait
outsb
cltd
mov
shl
rcrl
incl
push
inc
sbb
mov
imul
sbb
mov
ret
iret
cmpb
sbb
cs
sahf
ss
cmp
xchg
iret
mov
xor
in
fstl
jns
enter
sti
out
inc
and
sbb
rol
jecxz
sbb
mov
and
enter
aam
pop
cwtl
into
cmc
inc
fsub
aad
jmp
iret
add
push
mull
xchg
and
dec
jecxz
push
add
mov
mov
loopne
mov
mov
jmp
lock
popf
xor
aaa
int
outsl
movsl
inc
ret
ss
scas
call
inc
adc
sbb
pop
mov
icebp
mov
sub
push
pop
lret
cmp
movsb
shrb
out
loopne
or
in
lods
xchg
xor
sub
clc
inc
repnz
clc
sbb
bnd
and
jecxz
push
push
fmul
mov
push
sub
adc
mov
and
pop
sarb
shrb
dec
push
popf
dec
mov
cmpsb
fnstsw
xchg
and
dec
loop
push
imul
shr
in
and
mov
lcall
jns
shll
popf
jle
subb
int3
add
in
sarb
mov
pop
jle
gs
je
sub
push
ljmp
idivl
xor
adc
shll
xchg
xchg
mov
test
out
jecxz
xchg
cltd
lods
repz
out
mov
data16
jle
add
scas
sub
std
and
xlat
jmp
imul
popa
sbb
dec
push
push
jge
jno
pop
fsub
jmp
push
jae
cltd
outsb
mov
push
pushf
xor
and
out
das
and
and
movb
lods
idivb
cwtl
insl
pop
ss
push
cmpsl
out
jae
inc
cmp
std
sarl
sti
inc
xchg
adc
fwait
icebp
and
cmp
dec
bound
pop
in
jg
and
xchg
adcl
clc
push
cwtl
jnp
mov
in
call
mov
mov
or
inc
adc
dec
gs
inc
xchg
repnz
aam
jno
mov
add
push
mov
xor
dec
out
xchg
shrl
fdivl
shrb
jp
insl
scas
dec
stos
sub
movsb
scas
inc
pcmpeqb
cltd
xor
add
into
test
push
dec
daa
mov
xlat
lea
xchg
shlb
into
out
outsb
test
lock
movb
ret
pop
cmc
mov
mov
out
sub
mov
mov
in
jmp
adc
aad
add
xor
loope
shrb
jnp
add
xor
xchg
out
clc
rcpps
jo
cmp
sbb
or
sbb
fcomip
xchg
insw
ds
nop
mov
jp
jae
xchg
sub
add
sub
jne
fisubrs
arpl
cwtl
inc
jnp
lcall
pop
lcall
dec
mov
pusha
ret
ljmp
cmp
xchg
adc
cmp
loopne
fwait
jbe
inc
pop
in
gs
leave
mov
das
rcrl
sub
imull
sub
int
sub
sbb
rorl
and
push
fimull
jmp
push
sbbb
lods
in
pop
cmpsb
xlat
cmp
sub
cli
xchg
jecxz
cmp
jmp
jmp
adc
pop
jle,pt
inc
jp
enter
pop
cmc
shrl
fldl
or
jecxz
mov
pop
hlt
sub
fstl
test
add
pop
pop
inc
stc
mov
mov
push
fisttpl
dec
loop
and
inc
gs
out
cld
push
cltd
je
jns
cmp
out
pop
loopne
mov
xchg
pop
repnz
or
imul
xchg
testl
repz
push
inc
cmpsl
inc
and
add
mov
pop
repz
or
jecxz
call
sbb
push
arpl
orl
pop
imul
loop
jg
push
add
mov
cwtl
push
jbe
popa
dec
loop
aam
sub
mov
dec
xlat
cmc
out
xlat
adc
nop
mulb
je
jp
and
jo
icebp
push
outsb
add
jmp
inc
std
aad
gs
lret
sbb
ss
adc
shlb
pop
pop
das
xchg
imul
ret
jno
fiadds
imul
sbb
mov
lods
jp
xchg
hlt
int
imul
imul
xchg
adcl
cmp
sarb
sarb
push
lcall
dec
dec
push
mov
cmp
and
mov
in
sbb
mov
aad
adc
int
sahf
shr
dec
call
popa
scas
out
sbb
cwtl
out
data16
shlb
inc
adc
sbb
sub
ja
lahf
pop
lods
loop
fidivrs
mov
sbb
lds
cmp
pop
out
outsl
sub
push
cmp
cwtl
cmp
pop
fdivl
mov
fsub
mov
push
aam
lret
leave
xor
sbb
xor
hlt
loop
lcall
int3
fimuls
daa
mov
inc
xchg
and
lcall
push
negb
mov
sbbl
loop
xor
add
pop
xor
in
pop
inc
pusha
sarb
pop
scas
pusha
pop
out
sub
add
or
inc
mov
out
inc
ljmp
lret
fidivrl
push
xchg
mov
jle
mov
sub
sub
xlat
inc
push
stc
or
outsl
scas
push
sub
insb
fcoms
addr16
adc
into
insl
jge
sbb
push
add
movzbl
sub
push
mov
inc
push
cmp
scas
fildl
sahf
xor
mov
dec
sub
in
lret
or
push
nop
adc
mov
and
or
gs
rcll
nop
js
or
jns
test
test
sub
add
lods
xor
sarb
mov
lock
cmovge
xchg
xor
cmc
fdivrl
enter
dec
xchg
jo
popa
mov
xchg
lods
jno
movsl
adc
mov
xor
fadds
ficoml
lret
daa
adc
movsl
add
les
cmpsb
cltd
xor
or
jnp
mov
inc
inc
frstor
lods
mov
push
incb
mov
loopne
call
pop
adc
lret
lret
data16
and
movsl
jb
jle
mov
jne
js
std
xchg
enter
ss
icebp
xchg
add
in
adc
xor
lcall
gs
push
jno
cltd
adc
mov
dec
inc
sbb
rolb
jae
ja
decl
push
add
mov
inc
adc
add
icebp
xchg
in
push
push
fcompl
or
jmp
in
xor
dec
sbb
movsl
and
jae
lret
inc
push
insl
clc
add
mov
int
xchg
sbb
in
inc
or
jae
ljmp
ret
and
cltd
stos
sti
or
dec
mov
aaa
and
fildl
scas
lahf
push
int3
lock
rorb
es
push
into
push
aas
arpl
mov
mov
testl
push
push
jg
pop
movsl
inc
add
xchg
or
sahf
mov
rcrb
adc
and
xor
mov
fisubs
call
cmp
ret
enter
in
in
xchg
xorb
xchg
shl
ret
lret
cltd
repz
push
aad
jbe
cld
adc
mov
sbb
into
sub
stc
shlb
xchg
mov
iret
xor
clc
cs
sub
ret
add
dec
xchg
add
add
aam
pop
cli
jne
dec
pop
push
imul
xchg
push
cld
icebp
add
popf
test
pop
fs
lret
jne
neg
outsb
sbb
out
pop
jp
mov
mov
ljmp
xchg
cmp
dec
or
sti
lock
and
fisubl
ds
jmp
cmc
pop
jmp
nop
dec
test
cmp
pop
pop
mov
cmpsl
stos
test
xchg
cs
mov
inc
jbe
adc
adc
xchg
decb
xor
lods
pop
lock
data16
adc
test
lods
push
mov
repnz
adcl
rorl
loop
add
mov
adc
imul
jle
dec
lods
mov
aaa
xchg
test
push
bound
clc
mov
jne
js
rcrb
adc
xor
sbb
inc
mov
dec
sahf
stos
repnz
mov
mov
jle
pop
cmpl
les
shrl
mov
or
rol
addr16
data16
pop
pop
insb
push
and
mov
call
in
repz
and
je
loop
cmp
mov
or
inc
dec
fldenv
aam
sub
and
sbb
icebp
mov
arpl
fnstenv
ret
outsb
jle
mov
ret
xlat
xor
lods
inc
push
push
add
les
shrl
jp
insb
in
and
lea
std
hlt
cmpsb
lret
xchg
mov
xchg
sub
cmpl
cwtl
or
cwtl
mov
jnp
inc
inc
or
fs
jmp
or
fisubrl
stc
js
sub
xchg
adc
test
pop
jne
pop
cmpsl
jns
frstor
cli
fwait
and
pop
stos
daa
arpl
mov
sbbl
or
lahf
jge
mov
mov
aas
xor
jae,pt
fucomi
push
mov
adc
stos
cmpb
fnstsw
fsubr
int
and
aam
je
pop
xor
adc
sti
sub
lods
mov
cmpsl
push
pop
mov
cmp
push
jnp
jg
dec
mov
pop
popf
sarb
xchg
sti
movsb
jecxz
inc
ret
pop
jb
mov
xchg
rclb
add
push
push
adc
dec
mov
xor
cmp
mov
push
pushf
lods
and
iret
stc
popf
arpl
xorb
pop
fimull
xor
jg
test
or
mov
push
xchg
sub
roll
adc
mov
leave
xor
jmp
loop
add
jmp
xorb
fmuls
cmpb
inc
leave
jno
mov
andl
push
into
call
arpl
push
ret
shlb
das
cld
xchg
aam
push
push
xor
jmp
lret
and
dec
push
gs
sub
sbbb
nop
push
or
ja
mov
jecxz
mov
cwtl
cmp
sub
or
pop
or
mov
jno
dec
dec
mov
inc
push
adcl
sbb
cld
gs
mov
mov
mov
and
lcall
pop
fs
push
push
aas
mov
popl
into
mov
push
gs
sbb
mov
xchg
sbb
add
jno
dec
sub
jo
xor
sti
xchg
cli
push
fdivp
lea
xchg
cmp
push
adc
or
aad
imulb
lock
adc
cmp
popf
cli
fisttps
and
call
cmpsl
push
movsl
mov
mov
xor
push
sub
pop
idivl
lods
mov
out
mov
cltd
or
mov
sbb
cmpsl
cmp
sub
test
insb
pop
fucomip
jg
xor
ret
adc
mov
scas
rcrl
pop
xchg
adc
jbe
mov
rcll
cmp
sti
js
mov
adc
jnp
and
pop
sahf
fcmove
sub
sti
and
sub
bound
pop
or
sti
jp
lcall
and
cmp
adc
sahf
dec
inc
push
jge
adc
dec
add
dec
mov
lcall
mov
cmp
push
mov
and
jnp
xor
sub
xor
inc
popf
push
xchg
ja
fimull
or
scas
cmp
adc
roll
addr16
enter
shrl
jp
push
pop
sub
mov
out
mov
mov
jb
dec
add
push
xor
cli
mov
daa
mov
xchg
mov
in
mov
add
sarl
scas
ffreep
jbe
imul
loopne
cmp
adcl
rorl
fcomip
or
add
data16
pop
mov
sub
lock
push
cmpsl
jno
jp
sbb
jge
int
cmc
insl
or
xor
jecxz
cmp
mov
inc
mov
aaa
dec
lcall
test
shl
outsl
inc
pop
jecxz
rcr
adcb
vorpd
jb
push
or
dec
mov
jne
push
outsb
orb
repnz
dec
in
jbe
rcr
mov
stc
push
lret
or
je
movsb
imul
shl
jo
sub
fwait
in
and
test
ja
loopne
pop
cmp
sbbl
nop
in
and
and
frstor
jmp
and
mov
push
decb
jg
push
cwtl
inc
inc
pop
je
jg
adc
push
sub
out
pop
and
test
scas
shl
pop
out
dec
ret
sub
lods
fisttpll
mov
je
js
ret
scas
dec
sbb
jp
or
loope
pop
push
xchg
rorb
push
xlat
repz
or
adc
sub
cmp
push
loop
dec
sub
aas
pusha
xchg
loopne
push
mov
stos
mov
outsl
daa
cld
xor
push
and
into
and
rcrl
popa
sti
jno
push
or
pop
call
or
aas
push
data16
ret
add
xchg
std
mov
cltd
sub
jp
cmp
enter
out
int
int
psadbw
test
and
ficomps
cmp
jo
loop
cmp
rep
jmp
sub
mov
call
in
adcl
or
sub
pop
mov
ljmp
and
das
cli
xor
outsb
cmpsl
cmpsl
xchg
lret
data16
xchg
mov
push
fimull
andb
push
mov
pop
sub
xor
repz
or
cmp
xchg
test
inc
and
addl
xchg
lock
nop
xor
pop
xchg
mov
fsubr
xchg
cmpsb
dec
lret
jp
popf
inc
sbb
or
cmp
cmpsb
mov
and
sbbl
mov
jge
test
fdivrs
cmp
jecxz
popa
jg
add
aad
cmpsl
mov
jns
jg
loopne
inc
pop
xchg
pop
je
test
inc
hlt
loopne
xchg
cmp
mov
test
sbb
sbb
loop
fildl
or
scas
out
dec
fiadds
mov
movsl
mov
mov
mov
pop
test
dec
jle
lret
xchg
adc
test
loop
test
jo
nop
dec
pop
test
cmp
mov
or
mov
jb
sar
repnz
mov
int
in
jne
rcl
pop
mov
mov
cmp
scas
fistps
cmp
xor
lock
jne
shl
dec
pop
iret
ror
mov
sub
or
cmp
push
gs
mov
mov
inc
xor
dec
int3
mov
imul
int
in
test
lods
cld
mov
lods
mov
dec
stos
inc
jns
in
stos
adc
daa
sbb
add
lahf
sbb
inc
push
push
jb
inc
lret
mov
cmp
popa
cmp
sbb
push
mov
jno
mulb
adc
mov
xor
je
pop
repz
loope
cmp
jg
ss
push
mov
rol
mov
mov
or
jmp
sbb
addr16
icebp
sbb
frstor
mov
inc
lods
xchg
dec
clc
adcb
mov
divb
lret
fidivrs
xchg
rorb
aad
fld
inc
dec
mov
call
mov
xor
inc
or
xchg
xor
addl
mov
sub
es
gs
inc
mov
jmp
sbbl
scas
cwtl
pop
loope
dec
pop
test
inc
xor
sub
sbb
stc
cltd
and
jae
cli
and
sub
cmc
pop
ret
cmp
clc
sahf
fwait
pop
push
in
mov
insb
add
shrb
sbb
inc
pop
in
mov
lods
fiaddl
in
fwait
imul
mov
or
lods
or
popf
cmp
pop
scas
dec
mov
adc
dec
mov
dec
pop
mov
movsl
push
rcrb
pushf
pop
add
jno
outsb
lahf
sub
repz
push
cmp
leave
dec
loopne
xchg
addr16
mov
ds
xchg
adc
outsl
adc
dec
inc
mov
dec
aas
repnz
int
push
cli
gs
adc
inc
in
sub
sbb
jnp
cmp
xchg
adc
jge
pop
adc
mov
and
push
out
outsb
xor
clc
ss
pusha
les
imul
push
imul
add
clc
xor
lcall
enter
xchg
mov
push
lock
jecxz
sarb
daa
pop
cltd
clc
ljmp
mov
test
es
roll
mov
xlat
scas
cmp
lods
into
adcl
pusha
clc
insb
mov
sub
popf
inc
mov
push
out
xchg
cmp
lcall
adc
lret
pop
fdivl
sub
ret
mov
xor
cltd
mov
jl
out
pop
call
and
push
mov
inc
jmp
test
push
pusha
jno
negb
cwtl
pop
sub
cmp
out
das
xor
jnp
push
jl
cmp
jne
icebp
loop
jb
aad
fisttpl
enter
cmp
stos
hlt
adc
mov
and
sub
fistpl
sbb
mov
jg
sbb
pop
jne
xchg
arpl
pop
push
push
in
sub
inc
repz
notl
scas
pop
mov
mov
dec
mov
ss
je
incl
lcall
jnp
xor
pop
dec
testb
cltd
cmc
lahf
stos
cmp
ficoml
out
jg
fbld
dec
andb
cs
lahf
test
in
cmp
hlt
cmp
and
adc
scas
and
push
jb
out
data16
or
aaa
mov
push
inc
inc
mov
xor
cs
ds
sub
pop
or
fisubl
jecxz
iret
outsl
add
pop
inc
inc
pop
jae
out
loope
pushf
push
adc
cmp
leave
xor
lds
inc
divl
xchg
or
lods
fcompl
hlt
ja
mov
repz
or
imul
imul
daa
push
or
test
ljmp
push
or
dec
repz
jns
fs
sbb
or
cmpl
inc
ror
jo
test
addr16
rclb
sahf
xor
inc
inc
xor
add
xchg
pop
inc
mov
mov
push
and
dec
pop
ret
dec
push
out
test
hlt
cmp
stos
testl
pop
add
imul
sti
test
mov
mov
xor
gs
ret
inc
push
pusha
jbe
push
ss
das
dec
loope
jnp
ret
popa
push
fidivrs
push
mov
mov
mov
sti
cmpsb
pop
movl
ret
test
movsb
pop
xchg
add
push
push
adc
and
insl
out
mov
imul
jle
mov
sub
sbb
lock
hlt
inc
or
setb
jb
mov
jae
out
mov
ljmp
loope
movsl
loopne
aas
mov
mov
xor
daa
dec
mov
arpl
insb
lret
lret
push
les
mov
js
fistps
call
shll
jae
add
sbb
inc
subb
push
adc
shlb
lcall
xor
adc
add
fdivs
jle
ret
or
fldcw
loopne
fldenv
gs
mov
sub
stos
std
in
jmp
mov
mov
inc
stos
in
out
arpl
stc
les
xchg
xchg
test
das
cmc
out
scas
scas
push
jmp
push
jno
cmpsb
lret
fwait
jmp
stos
mov
dec
dec
rol
fabs
sub
sub
and
pop
aad
cmpsl
sub
inc
lods
jl
jo
call
pop
sbb
insb
or
xor
ja
push
test
std
push
or
add
stos
sub
xor
mov
stos
adc
or
fstpl
out
clc
mov
movsl
push
mov
push
sub
pop
call
arpl
ffree
pushf
pop
ja
sub
jno
cmpsb
mov
lret
inc
gs
sub
lret
inc
and
push
sbb
test
jl
popf
rcl
sub
add
ja
aaa
lods
xlat
pop
lret
jmp
cbtw
sbb
push
cmpsl
xchg
pushf
mov
repnz
andl
xchg
std
sarl
xor
sub
push
in
mov
test
pop
in
nop
scas
pop
test
mov
das
movb
idivl
jo
les
pusha
ret
jne
fsubrp
cmp
mov
xor
mov
ret
stos
mov
add
daa
in
adc
out
adc
fsts
xor
ljmp
cmp
test
or
pop
adc
mov
or
mov
xor
and
call
mov
into
cs
push
imull
pop
lahf
aas
es
scas
aaa
dec
out
lcall
rolb
icebp
push
mov
jnp
jns
paddb
mov
adc
ss
push
pop
in
std
scas
xchg
fldl2t
jmp
out
sub
inc
andb
addr16
xchg
fcmovbe
cltd
sbb
js
push
jns
mov
dec
cmp
bnd
test
and
imul
out
sbb
cltd
mov
stos
mov
pusha
jbe
mov
repnz
inc
out
mov
insl
sub
out
xor
les
icebp
push
jns
or
mov
es
sub
cmp
pop
imul
leave
or
sbb
jle
adc
xor
push
mov
loopne
inc
arpl
ret
sbb
mov
mov
jb
cmp
dec
inc
dec
lcall
dec
popf
sub
cmpsl
sbb
xchg
push
je
mov
pop
in
int3
out
int3
sbb
lcall
mov
jmp
cpuid
mov
addl
lea
std
xor
mov
movsl
pop
sbbl
jmp
add
or
mov
mov
pop
cmp
ret
sarl
sub
push
mov
sub
sbb
enter
scas
sub
fsubr
fs
shl
cmpsl
popa
sbb
ret
mov
push
fdivs
mov
xchg
ss
pop
mov
ljmp
mov
mov
push
dec
dec
pop
sub
rol
cmp
sbb
in
les
jnp
mov
dec
mov
jb
or
add
test
test
xor
xor
push
pop
in
mov
mov
jmp
sub
push
or
in
addr16
in
pop
fildll
push
add
inc
xchg
cs
out
xor
mov
cltd
jb
or
mov
inc
scas
into
xchg
ds
push
sbb
mov
cmp
outsb
lods
sbb
movsl
inc
in
xchg
cltd
aam
jmp
xchg
daa
push
sbb
xchg
dec
sbb
xchg
std
or
push
sbb
hlt
dec
jge
xor
jnp
in
das
adc
into
icebp
lret
push
js
push
jne
adc
enter
dec
shlb
icebp
xor
jg
mov
rcrb
lock
xor
fwait
aaa
fstpt
mov
movsl
push
mov
aad
daa
adcb
popa
cmp
jl
insl
add
popf
mov
jo
xlat
popl
and
fs
aaa
lea
xchg
loope
in
fwait
in
cmp
adc
ss
mov
inc
fstp
xchg
lret
out
rorl
inc
adc
xchg
xchg
sbb
loope
fwait
hlt
or
jmp
out
push
jbe
in
addb
cmp
sub
aas
jmp
push
and
pop
xchg
mov
and
sbb
push
cld
sbb
hlt
decb
mov
adc
mov
stc
add
clc
mov
push
jae
lds
stos
xorl
loop
movsl
xor
adc
mov
icebp
cmp
loope
rcll
mov
push
lock
out
outsb
out
jl
cmc
push
mov
lcall
adc
mov
js
fldl2t
out
sti
sub
sub
arpl
fnstcw
mov
in
xchg
push
mov
push
and
inc
imul
cmp
inc
pop
mov
push
cwtl
scas
sub
mov
add
pop
mov
ret
mov
or
mov
fidivrl
cltd
or
lods
inc
inc
jmp
lret
nop
and
les
xchg
aad
cmpsl
insl
sub
sub
test
mov
hlt
pop
repnz
jge
xchg
mov
ljmp
inc
fs
cmp
dec
repnz
sti
adc
push
pusha
fcmovb
mov
mov
out
dec
cmpsb
call
shr
repz
sbb
mov
stos
jmp
cmp
xchg
sbb
int3
jae
clc
inc
pusha
inc
xchg
div
mov
cmp
or
in
or
imul
es
push
les
bound
mov
xchg
out
out
in
sbb
lea
cs
fs
stc
stos
mov
mov
dec
and
lahf
stos
int3
jbe
jmp
fnstenv
out
fld
or
negl
xchg
shll
sbb
orb
ja
sub
push
fwait
fwait
pop
into
mov
xchg
sub
clc
jmp
cld
mov
fldcw
popf
andb
inc
sub
ss
pusha
dec
enter
or
out
int3
xchg
push
pop
push
loop
mov
mov
and
aad
outsl
dec
sti
fbstp
and
lds
mov
int
push
inc
dec
pop
jns
and
pushf
add
sti
fsts
lret
jp
fs
push
pop
sbb
bound
in
cmp
inc
inc
lock
pop
loope
mov
sbb
andb
lods
cmp
inc
jbe
mov
in
ss
fcmovnbe
scas
inc
aam
mov
lock
jae
lret
pushf
mov
dec
fldenv
inc
inc
dec
dec
movsl
repnz
and
mov
jns
xor
mov
arpl
loope
mulb
ljmp
pusha
cmp
sub
cmp
jbe
pop
das
sbb
jae
pop
addr16
ja
lea
push
incl
loop
test
inc
mov
mov
aad
call
popf
addb
in
sub
jo
xchg
pop
out
sub
xchg
or
std
mov
push
insl
and
lret
ficoml
jecxz
pop
push
mov
sub
sbb
sahf
pop
dec
mov
mov
and
lds
repnz
mov
pop
fbld
cld
out
and
ret
xlat
mov
xor
int
and
pop
das
sub
fwait
aad
xchg
es
pop
inc
lahf
inc
pop
mov
jbe
lret
test
jb
mov
test
mov
and
mov
cmp
or
mov
jp
sbb
not
insb
data16
in
push
hlt
xchg
lods
sbbl
mov
push
push
les
sbb
push
xor
ss
xchg
mov
mov
push
xchg
lahf
jbe
inc
or
lret
push
movsb
xor
push
out
stc
hlt
and
pushf
pop
stc
or
test
push
aam
jnp
popf
jge
mov
cmp
push
roll
mov
out
add
jbe
mov
adc
jne
inc
inc
inc
je
cmp
repz
fstl
loop
js
cmp
fnop
xor
mov
add
push
subl
jmp
pop
mov
fnstsw
aad
xchg
sarb
or
jno
sub
test
in
iret
dec
jl
mov
jbe
aam
adc
in
xorb
xchg
imul
divb
idivl
add
push
outsb
jg
stc
pop
fbstp
cli
xchg
stc
pop
mov
mov
xchg
outsl
and
movsl
xlat
test
cli
lret
hlt
push
cwtl
fsubs
lcall
pop
outsl
jno
aas
stos
pop
xchg
inc
mov
or
adc
jo
loopne
xchg
call
and
addr16
fnstsw
add
lods
aas
addl
jnp
shll
arpl
push
movsl
sub
dec
sub
push
gs
iret
mov
mov
adc
int3
mov
adc
out
out
jno
fwait
jb
inc
inc
loopne
xchg
stc
and
jo
jl
mov
mov
jbe
cli
jnp
clc
test
mov
lds
and
fcoms
repnz
add
cmp
out
ss
insb
xchg
adc
insl
dec
mov
lcall
stos
in
pop
jns
inc
add
lcall
test
in
sbb
mov
addb
jne
push
out
sub
shlb
inc
mov
xor
notl
xchg
gs
gs
add
xchg
sbb
aad
popf
ret
jnp
mov
mov
out
or
loop
jp
cli
fidivrl
iret
or
xchg
pop
xchg
inc
mov
popf
pop
xlat
cmpsb
mov
sub
shlb
jge
inc
fcmovbe
push
mov
jl
clc
lods
or
stc
or
fsubrp
xor
xor
fisubrs
cmp
add
sbb
sbb
fadds
adc
and
mov
and
call
outsb
and
inc
cmc
mov
mov
mov
or
call
inc
sahf
mov
xor
imul
jnp
scas
loopne
pushf
imull
sbb
mov
sbb
fbstp
in
jb
or
pop
mov
pop
xor
fnsave
adc
mov
mov
rclb
xor
out
add
xor
xchg
out
sbb
cltd
push
outsb
outsb
adc
cmc
sbb
clc
or
dec
ja
xchg
hlt
or
mov
shrl
jl
lret
jl
sbb
iret
inc
lds
push
sbbl
adc
sbb
rorb
leave
jns
xchg
mov
fsts
dec
pop
into
cmc
jnp
mov
out
lods
or
daa
jbe
les
fs
scas
inc
das
push
add
jo
jle
jns
cmpsb
mov
mov
mov
out
icebp
int3
ret
pop
sub
adc
jb
add
mov
mov
rcll
xchg
adc
adc
cmp
sbb
aam
cmpsb
daa
push
mov
stc
or
add
dec
gs
out
es
das
adc
cwtl
add
inc
into
mov
xchg
stos
in
xor
mov
dec
negl
shl
stc
lret
enter
mov
sub
shrl
shlb
movsl
sbb
cld
repz
mov
es
mov
outsl
pop
std
mov
mov
fsubrs
out
mov
mulb
jns
add
lock
adc
rolb
scas
lcall
into
into
cmpsl
cmp
call
mov
in
aas
xor
push
scas
out
jbe
sub
mov
imul
pop
lock
adc
int
lcall
fistpll
jecxz
mov
cld
stc
adc
adc
addr16
xchg
ljmp
sbb
sub
movsb
push
clc
mov
dec
clc
push
in
imul
je
cmpsl
call
pop
out
out
mov
and
xchg
dec
enter
fnstcw
sbb
push
jns
lock
xchg
mov
sbb
sub
push
sub
xor
mov
push
imul
fiaddl
js
mov
push
fnsave
shll
and
fcoms
mov
dec
dec
or
adc
mov
push
jmp
inc
pop
xor
xchg
test
leave
stos
and
pop
jne
rcrl
shufps
aam
inc
push
xchg
pop
hlt
scas
jp
mov
jmp
ficoml
std
xchg
mov
xor
fiaddl
call
bound
repz
fs
dec
sbb
jge
mov
or
mov
jb
fistps
adcl
fstpt
push
sbb
fs
sbb
ljmp
inc
fidivl
cmp
pushf
jp
dec
sub
mov
mov
push
ljmp
popf
xor
sub
xor
lahf
mov
std
data16
and
mov
lods
in
sbb
cli
or
cmp
fidivrl
mov
gs
mov
dec
sbb
jno
jl
outsl
fisubrl
out
fs
add
xor
push
stc
inc
xchg
aaa
imull
mov
jmp
out
cld
and
and
das
es
into
pop
jns
jns
xor
sbb
outsb
sbb
cltd
inc
push
xchg
sub
push
in
mov
pop
das
inc
dec
or
rorl
sbb
rolb
push
xchg
sahf
stos
les
cmpl
jae
pop
in
inc
ret
mov
push
inc
mov
fisubrs
inc
idivl
cmp
popf
push
insb
iret
xor
cmp
or
sbb
lahf
xchg
cmp
popw
cwtl
jae
test
cmp
pop
ja
jecxz
add
mov
inc
ret
lods
inc
nop
ss
jmp
lret
sbb
test
push
stc
je
xlat
mov
icebp
dec
arpl
rep
stos
add
push
xor
popa
mov
xchg
push
fs
aad
out
add
dec
and
and
lods
fs
pop
notb
jne
adc
repz
jne
or
fsubl
push
mov
lods
arpl
pop
dec
cmp
daa
cli
xchg
or
jne
mov
pop
shrl
fcmovnb
cmpsl
jecxz
sbb
in
and
sub
xchg
shrl
inc
daa
into
popa
and
dec
gs
xchg
imul
ds
pusha
adc
and
inc
bound
add
mov
pop
scas
inc
push
jl
lods
jmp
mov
in
pusha
or
dec
pop
inc
fcoms
ficoms
mov
ficoml
in
add
iret
inc
divb
loopne
clc
adc
into
in
cmp
roll
movsb
add
inc
sbb
push
xor
pop
pop
xor
in
mov
push
std
push
mov
fcmovnu
roll
xchg
push
popw
sub
test
mov
mov
xor
outsb
mov
mov
ja
jle
and
shlb
jg
jge
xor
aaa
sahf
cli
adc
push
ss
mov
lret
in
fsubrs
add
loope
xor
push
in
rolb
nop
imul
jmp
dec
aas
lds
pop
mov
mov
test
rcrb
lahf
xchg
push
inc
xor
out
push
lahf
dec
scas
cmp
sub
sbb
aad
pop
scas
cmpb
mov
ret
test
or
outsl
mov
out
test
dec
imul
jl
jmp
ret
push
jno
test
clc
pop
sub
cli
push
loop
or
jns
push
outsl
pop
pop
mov
dec
pop
mov
dec
pop
xchg
dec
adc
pusha
pop
mov
or
cli
or
into
cmp
repnz
cmp
jmp
icebp
xchg
mov
aam
nop
add
ja
pop
ljmp
inc
test
dec
rcll
add
mov
push
sahf
xor
out
cmp
sahf
or
or
mov
sub
sbb
scas
inc
sub
testb
sbb
and
fwait
xor
mov
or
adc
rorl
pop
push
adc
ret
and
shll
stc
adc
add
loop
in
add
or
stc
jbe
sub
cld
lds
test
mov
ja
in
fildl
sub
or
pusha
loope
ss
push
mov
adc
fcom
pushf
imul
mov
xchg
repnz
mov
mov
xchg
dec
out
fisubrs
mov
sbb
test
dec
loopne
cmpsl
sub
pop
mov
nop
add
mov
xchg
mov
cmp
repnz
cmpsb
mov
hlt
dec
rsm
or
or
int3
enter
lret
sbb
jecxz
cmp
sub
imul
cli
ds
ficomps
xor
sbb
and
mov
jo
pop
add
dec
mov
mov
ss
mov
ret
pop
sub
push
mov
sub
xchg
mov
xorl
mov
push
es
dec
iret
shll
adc
sub
jne
mov
loope
filds
pop
jnp
sub
pop
jno
inc
pop
outsb
mov
aas
jg
mov
lahf
xchg
gs
inc
jne
es
mov
daa
mov
jge
adc
inc
or
jmp
mov
jnp
in
jno
ss
popf
push
cmp
jecxz
stos
aaa
shr
sbb
xlat
lock
xchg
mov
orl
mov
sub
aad
xorb
stos
mov
test
sbb
add
add
mov
xchg
xchg
push
stc
fmul
fldl
push
pop
xor
std
sti
aam
cmpsb
cltd
jne
inc
repnz
loope
push
jecxz
adc
inc
mov
adc
movsb
pop
inc
sbb
sbb
sbb
jmp
das
push
sahf
push
ds
push
fcomps
jl
daa
fidivs
dec
sbb
dec
in
in
add
test
stos
sub
ljmp
jecxz
enter
cmpsb
in
jmp
jg
fists
mov
dec
pop
es
mov
lds
arpl
mov
aad
push
nop
sbb
xchg
shlb
push
jecxz
add
roll
sub
push
scas
xor
adc
outsl
stos
mov
jmp
jecxz
pop
jmp
xchg
ror
and
out
jno
push
test
jne
test
or
or
fidivrl
mov
jae
loopne
jp
xor
mov
or
popf
dec
dec
push
inc
call
in
cmp
xchg
xchg
inc
pop
cwtl
xchg
out
movsb
daa
cld
cli
cwtl
pop
adc
xor
test
cs
dec
pop
shrl
mov
aad
dec
in
addl
or
add
mov
rcl
sbb
pop
icebp
mov
sub
decb
sbb
lea
in
mov
push
jno
or
cmp
addr16
repnz
mov
mov
dec
pop
mov
mov
aam
ja
ja
inc
out
jg
jecxz
xor
stc
cmp
push
jae
xor
imul
pop
dec
imulb
cmp
movsb
ds
sbb
adcb
daa
inc
lcall
mov
fcom
adc
jns
ss
add
cli
inc
dec
test
xor
xchg
xchg
jmp
xchg
cmpsl
pop
xor
out
push
movsl
add
gs
or
mov
adc
test
sarb
xor
mov
outsl
dec
pop
push
test
cwtl
decb
fnstenv
out
das
mov
ret
pop
rorb
push
lea
mov
lods
pop
ds
cmc
loop
pop
push
dec
filds
cltd
scas
add
test
fistpl
imul
xlat
jmp
lcall
and
inc
or
adc
or
out
mov
dec
pop
int
mov
jp
pop
adc
xchg
add
testl
sbb
imul
xor
test
das
js
jmp
dec
rorb
out
and
enter
push
adc
adc
pop
popa
xor
push
pop
ds
mov
icebp
xchg
xchg
pop
sahf
les
fcmovu
dec
and
inc
pop
adc
lcall
dec
fsubrp
dec
pop
add
mov
test
xchg
and
repz
mov
clc
and
inc
mov
jecxz
std
das
cmp
rcrb
daa
xchg
rcr
fdivr
or
add
dec
dec
in
decb
push
mov
ljmp
lock
jmp
sub
mov
shll
jo
xchg
js
jne
pop
xor
jecxz
outsl
dec
ret
ds
std
jnp
aaa
cltd
cli
xchg
cmp
fdivrp
jne
mov
xor
push
cmp
adc
insl
adc
push
addr16
jle
mov
xchg
pop
inc
mov
add
lock
repz
mov
ss
xor
xchg
ss
push
stos
xchg
stos
mov
filds
popf
cltd
sbb
xorb
sub
sub
mov
fwait
cmpsb
inc
xlat
stc
movsl
push
lcall
dec
and
cld
sub
fcomi
mov
inc
jns
movsl
xchg
lret
jecxz
int
ja
and
test
xchg
sbb
sbb
in
gs
push
mov
xchg
mov
push
aam
xchg
adc
orl
stos
sub
lock
sahf
jb
xchg
dec
aam
std
test
fsubrs
mov
imul
js
popf
je
lods
cmp
sahf
jbe
pop
mov
add
leave
sub
call
lods
xor
push
int
xchg
stos
push
fidivl
cmc
jnp
in
lods
mov
xchg
aam
xor
pop
cld
fsubr
sub
sub
pop
repz
aaa
dec
lds
out
dec
add
jnp
addl
xchg
dec
out
stc
scas
lds
inc
gs
adc
mov
cld
or
sbb
mov
testb
xor
insb
cmp
sub
jbe
repz
outsb
les
in
bnd
mov
scas
fistpll
inc
pusha
sbb
int3
stos
repz
iret
sub
aad
leave
add
sbb
sbb
sbb
movsl
stos
aam
push
push
enter
in
mov
mov
xchg
xchg
insb
fists
mov
call
lea
xlat
push
test
and
faddl
hlt
pop
sbb
in
jp
sbb
cmpsb
cltd
xor
shlb
arpl
leave
mov
xchg
push
push
adc
jbe
push
dec
add
mov
push
testl
ret
inc
adc
mov
pop
hlt
mov
mov
add
sbb
mov
hlt
inc
push
adc
sbb
mov
ja
aam
adc
mov
popa
jl
stos
clc
or
pushf
inc
push
mov
sub
cmpsl
mov
andl
push
and
mov
sub
push
fadds
pop
xor
or
aas
adc
daa
into
cwtl
das
sub
cs
lret
pop
cli
xchg
cmpsb
aam
cli
mov
movsl
xchg
and
adc
lahf
out
cwtl
in
pop
push
jp
adc
mov
pushf
jg
jnp
es
call
mov
fwait
jnp
scas
popf
jne
inc
push
stos
or
jb,pn
inc
jb
shlb
push
push
das
sbb
mov
adc
jae
cmp
push
jbe
inc
aam
stc
push
mov
adc
inc
xchg
mov
lcall
fs
push
push
nop
pop
lcall
scas
xchg
xor
icebp
dec
cmc
push
inc
jo
mov
clc
sahf
cli
push
mov
xor
jnp
adc
inc
sbb
clc
dec
andb
push
test
push
jl
fnstenv
negl
mov
add
pop
push
out
aas
mov
add
cmp
jmp
test
dec
adc
cltd
data16
mov
or
js
lds
in
test
inc
xor
add
adc
jg
jecxz
xor
adc
sbb
nop
imul
lods
sub
shrl
dec
and
loop
lock
nop
and
addr16
push
mulb
popf
sub
call
or
sti
push
push
in
cmp
xor
mov
push
cs
imul
dec
jae
xchg
mov
shl
add
add
orl
inc
mov
aaa
arpl
fdivrs
sbb
out
in
and
pop
bound
mov
jae
and
mov
cmp
cmp
std
nop
mov
xor
scas
int
xor
push
pop
push
inc
ljmp
inc
in
enter
mov
std
jnp
sbb
lcall
test
lods
fsubrl
cmpsb
fstpt
mov
pop
movsl
dec
aam
mov
mov
push
push
dec
in
cmpsl
sti
mov
sahf
jno
and
je
add
xchg
adcb
sbbl
mov
loope
fs
xchg
mov
jge
mov
fisttpll
mov
fstpt
rorl
in
mov
jae
adcl
sub
and
shl
test
sbbb
mov
push
sahf
fldcw
cmp
in
test
js
add
sbbw
add
jl
decl
lahf
xlat
add
sbb
jns
xchg
pop
pop
loope
mov
sub
mov
or
mov
lcall
out
stc
loopne
enter
mov
cmp
mov
add
scas
cmp
sub
sbb
sbb
movsl
dec
test
xchg
sub
mov
in
sysexit
jmp
popl
jnp
loop
dec
dec
inc
mov
mov
adc
aas
push
les
in
das
repnz
in
pushaw
lret
movsl
hlt
adc
cmp
loope
jne
in
xchg
aas
inc
push
mov
lods
ja
push
and
adc
dec
repnz
insb
pushl
ror
dec
out
xor
dec
xor
andb
clc
or
pop
ret
or
mov
adc
jmp
loopne
or
xchg
add
sub
sub
sbb
adc
cs
movsb
inc
inc
xchg
clc
and
fisttps
mov
fcoms
mov
cli
jl
arpl
jmp
xor
xchg
xchg
adc
xor
ja
aad
lock
test
mov
cmpsb
add
cmpsl
shld
lcall
push
in
lahf
into
addr16
inc
jo
dec
mov
je
loop
xor
dec
jmp
lock
cmp
push
ljmp
jno
out
cmp
iret
into
shll
xchg
sub
or
in
scas
xor
mov
xchg
stc
push
mov
inc
push
xchg
rol
int3
cld
push
pop
mov
stc
iret
fstps
imul
jp
pushf
push
mov
pop
dec
sub
jle
test
mov
sbb
in
mov
cmp
cmp
insb
pushf
sbb
lret
iret
test
mov
push
mov
sbb
mov
data16
mov
movsl
jno
push
mov
adc
push
xchg
ja
das
int3
gs
jns
jle
jl
std
dec
sbbb
negl
jl
dec
mov
lret
fimull
cltd
lods
incb
popf
xor
popf
or
shr
xchg
dec
daa
scas
push
jecxz
or
adc
fs
jno
or
jl
jbe
outsl
jbe
popa
outsb
rcl
jecxz
push
ja
or
dec
loope
and
pop
add
or
in
filds
cli
xchg
pop
loope
scas
push
fdivrl
loopne
add
subl
mov
movsl
adc
dec
mov
lahf
jg
in
add
aas
mov
les
scas
out
xchg
inc
arpl
fdivrp
inc
clc
std
scas
in
sbb
pushf
ds
jp
xlat
pop
jbe
xor
fildl
rcr
nop
mov
xlat
daa
dec
push
push
sbb
inc
xor
jmp
loop
jge
fimuls
xchg
fiaddl
mov
push
ljmp
adc
lcall
cmc
loop
pop
test
mov
xor
pop
imul
sbb
jae
jle
mov
dec
or
daa
mul
cmpsb
rcll
ja
adc
pop
and
ficoml
call
je
int3
cmp
xor
aam
cmovbe
xchg
sub
lret
adc
ljmp
mov
or
jge
lods
adc
sbb
sbb
add
push
mov
inc
or
shrb
dec
add
std
repnz
orl
jle
jecxz
stos
and
dec
xchg
sbb
xchg
test
aaa
and
mov
mov
sarb
and
dec
add
dec
mov
test
int3
inc
in
je
and
test
es
mov
popf
inc
jmp
dec
in
ficoml
jl
jecxz
cmc
popa
fsub
dec
or
aam
pop
mov
xor
jge
mov
cmp
shlb
cmpb
stos
dec
stos
mov
push
jnp
add
loop
cltd
xor
data16
inc
rorl
lds
sbb
inc
enter
xor
rcll
push
add
bnd
outsl
jno
pop
es
rcr
dec
pop
mov
in
xor
mov
fwait
xor
popf
ja
cmp
jmp
aaa
jg
xchg
test
mov
sti
adc
mov
cmpsl
loop
sbbl
push
lds
mov
out
xor
xchg
push
cmp
mov
or
xor
ja
enter
nop
sahf
dec
notb
cld
mov
mov
xchg
daa
add
cmpsl
pop
scas
and
mov
mov
jp
dec
roll
jno
jo
mov
cmpsl
pop
scas
and
popa
clc
push
jg
ds
jg
cmpsb
pop
lods
sbb
dec
push
je
int
jecxz
jnp
divl
xchg
cli
and
lds
jbe
add
out
and
in
inc
xor
xchg
push
mov
pop
mov
shlb
loope
adc
out
outsl
jnp
loopne
insl
call
fldenv
ljmp
lods
adc
push
into
pop
xchg
std
xchg
cmpsl
cmp
adc
add
movsl
sub
add
pusha
divl
fsubr
pop
out
out
xorl
xorb
add
ret
lock
jno
mov
adc
sbb
loop
push
inc
fwait
movsb
or
jg
arpl
cmp
mov
in
mov
dec
fsubrs
add
push
mov
pop
andb
mov
pop
movsl
stos
icebp
lea
dec
jnp
fisubrl
and
pop
add
fbld
fstpt
xor
jl
mov
xor
pop
pop
pop
loop
mov
xchg
jmp
adc
mov
mov
leave
pop
out
ja
mov
sub
sbb
adc
inc
push
and
pop
sbb
pusha
stc
or
fstpt
add
dec
rcrb
rcrl
negl
sub
push
jg
cmp
jne
js
xlat
xchg
mov
or
daa
es
incb
fistl
daa
sahf
sub
shrl
xchg
shr
sub
inc
xor
negb
or
sbbb
inc
call
xor
loopne
test
test
stos
jp
lea
cmp
les
pusha
popf
mov
inc
xchg
and
adc
jl
clc
jae
push
test
jl
fwait
lea
shll
inc
test
or
nop
stos
repz
loop
sbb
sbb
mov
fstpl
add
xchg
jae
outsl
rcr
xchg
aam
dec
fstpl
jmp
inc
xchg
ss
push
or
cmp
shl
mov
dec
repnz
push
test
inc
cs
out
mov
std
std
xchg
cwtl
fsincos
pop
testb
ret
mov
xchg
iret
fcmovne
js
pop
outsl
fs
jp
jl
mov
or
sub
mov
lods
mov
fidivl
dec
test
into
mov
dec
in
lahf
mov
inc
xor
adc
out
hlt
mov
jno
cmpsb
fimuls
push
push
lods
sbb
fnstsw
jl
or
push
ss
mov
loope
mov
xor
fldt
add
sarb
fprem
jae
sbb
push
mov
mov
sbb
push
jp
add
fidivrs
int
cltd
push
sbb
lcall
test
insb
stos
inc
aas
les
pop
out
mov
mov
mov
sti
pop
dec
mov
jle
adc
cmp
mov
pop
adc
adc
bound
lods
pop
sbbb
mov
jo
leave
in
pop
test
movsl
ret
jle
mov
inc
xlat
pop
clc
xchg
cmp
jl
add
sarb
es
jg
sbb
xchg
jge
and
mov
test
sarb
faddl
int3
adc
pop
nop
push
add
mov
pop
sub
outsb
inc
sbb
mov
ret
insl
sbbl
mov
hlt
mov
push
mov
sub
xor
sbb
mov
xchg
mov
mov
pushf
pop
fnsave
fs
xor
mov
push
mov
pushf
and
je
loop
add
in
sbb
add
xor
dec
add
imul
enter
mov
inc
mov
fs
mov
sarl
hlt
dec
dec
fsts
rclb
push
lahf
and
icebp
sahf
xor
xchg
fdivp
mov
add
ret
xlat
and
push
dec
arpl
mov
pushl
les
cmp
mov
idivb
daa
inc
mul
mov
fldt
mov
mov
jnp
jo
clc
jo
cmpsb
rcrb
sub
insl
xor
sahf
dec
in
popf
repz
fisubrl
dec
pop
fsubl
ret
xchg
mov
sbb
push
lret
cltd
or
shl
test
outsl
xor
fdivrl
and
cli
push
in
std
inc
push
stos
sbb
nop
hlt
dec
cwtl
and
sbb
and
dec
mov
fidivl
rcll
sub
xchg
adcb
fcomps
out
movsl
fidivl
jmp
mov
ret
jge
dec
jno
jg
icebp
movsl
cmc
mov
aaa
mov
cli
dec
aam
mov
mov
into
sub
ljmp
sbb
das
mov
std
sub
int3
aas
mov
jo
pop
scas
sbb
mov
aad
inc
pushf
pop
repnz
sbb
cmp
mov
sbb
xor
add
call
pop
out
adc
mov
jbe
imul
cwtl
mov
lret
lahf
push
loope
mov
xchg
test
popf
adc
sbb
sbb
stos
mov
adc
xchg
push
int3
es
loope
iret
jno
aad
mov
jbe
lods
jmp
jae
jmp
sbb
outsl
inc
pop
data16
gs
lock
mov
ret
push
or
jb
subb
mov
add
aaa
in
in
lods
inc
call
or
xlat
cmp
std
pop
imul
pop
lret
jae
push
inc
pop
inc
out
pop
mov
adc
adc
mov
fdivs
or
sub
sti
xor
jns
adc
nop
xchg
mov
jbe
mov
out
push
push
call
add
test
or
adc
mov
in
bsf
xor
pop
test
jp
shl
jg
mov
ds
inc
call
or
mov
stos
dec
outsb
jl
scas
or
in
sarl
cltd
jg
cmp
lds
dec
mov
scas
xchg
sti
roll
insl
push
mov
ret
jmp
dec
cli
mov
fildl
push
popf
xor
andl
xchg
call
fmuls
fisttpl
jle
push
inc
add
push
jmp
mov
jb
dec
push
mov
dec
fcomps
into
gs
mov
cmpsb
in
jp
or
pop
mov
shrb
shrb
in
cmp
mov
sub
roll
insb
push
or
add
in
and
cmp
xchg
adc
mov
ja
inc
das
cwtl
pop
fstpl
push
mov
jns
lcall
mov
testl
mov
nop
push
out
adc
dec
lea
mov
xchg
inc
fwait
mov
sbb
jle
xchg
fwait
dec
loope
mov
icebp
iret
xchg
xchg
lods
outsl
lahf
mov
shr
in
jle
fidivs
hlt
rcl
mov
mov
lea
out
orb
ss
sbb
xchg
push
inc
fisttpll
and
addr16
data16
push
push
xchg
mov
jecxz
mov
mov
jecxz
test
mov
dec
hlt
adc
xchg
ror
outsl
push
movsb
xor
xorb
push
mov
in
jle
xchg
sub
xchg
sub
int
ja
sbb
out
loopne
pop
ret
ret
cmpsl
jl,pt
cmpsb
inc
xchg
fldl
sub
inc
fcoml
mov
imul
cmp
dec
imul
add
lds
pop
xchg
add
xlat
pop
dec
add
mov
adc
repnz
xor
es
mov
xor
idivl
daa
jp
add
aam
and
lods
fldenv
flds
or
mov
cwtl
mov
aas
js
sahf
and
stc
stos
in
aaa
or
test
sbb
xchg
lahf
jo
sbb
js
arpl
insb
ljmp
xlat
jl
mov
into
add
adc
shll
imul
pop
stc
int
mov
pop
dec
dec
pushf
adc
inc
daa
stos
inc
in
arpl
mov
mov
sbb
dec
dec
jp
xor
jl
cmp
dec
add
xlat
xchg
xorb
pop
add
cmp
cwtl
or
cmp
jp
je
jb
test
stc
mov
pop
xor
jne
test
add
xor
xor
fldenv
out
cmp
leave
sbbl
mov
mov
lahf
inc
mov
popl
in
ss
test
aaa
cld
adc
push
push
fld
fistpll
rorb
rcrl
cmp
jbe
cmp
cmp
ja
xor
jmp
fimull
call
lock
jns
cmpsl
pop
xchg
cld
lcall
push
in
aas
pop
xchg
dec
push
pushf
jmp
cmpsb
aaa
mov
mov
fcoml
adc
push
in
insb
or
jne
fildl
hlt
adc
jge
mov
mov
mov
in
jns
jne
and
pop
lret
xchg
gs
aam
dec
mov
loope
in
call
pop
pop
stc
mov
push
shrb
xchg
jnp
aad
jns
push
movsl
adc
or
dec
xchg
int3
lret
sub
pop
insl
mov
sahf
push
jno
xchg
or
lret
jg
fmuls
jmp
mov
fdivl
imul
bound
add
call
lea
stc
loopne
les
adc
adc
cwtl
pusha
mov
cmpb
iret
addb
add
xor
clc
sbbl
insb
aas
mov
sti
sbb
adc
ret
mov
jp
sbb
fstl
lods
push
inc
sub
push
aad
leave
dec
test
js
out
jl
sbb
scas
mov
ret
mov
pop
loop
xor
lret
out
das
cmc
loopne
pop
mov
mov
mov
push
lahf
inc
aad
sbb
mov
call
push
inc
ror
repnz
dec
stos
and
lods
xlat
int3
aam
jns
popa
movsb
into
jle
hlt
pop
repz
and
mov
jb
mov
mov
mov
inc
xlat
jmp
cmp
pop
push
scas
jmp
mov
fs
stos
int3
das
mov
add
pop
pop
daa
dec
add
clc
pop
sbb
cmp
cwtl
mov
outsb
out
dec
sbb
aaa
sbb
pusha
aas
jecxz
lcall
roll
cmp
push
jne
jecxz
or
mov
push
divl
ret
pop
adc
adc
add
pop
and
fs
out
mov
inc
sbb
aaa
stos
shlb
popa
ret
loop
dec
es
jns
xor
stos
xchg
fistl
nop
mull
ja
cmp
mov
mov
movsl
daa
mov
movsb
je
fmull
test
daa
xchg
in
or
or
mov
repnz
scas
jmp
loope
shll
inc
nop
jmp
sarl
cmp
ror
clc
sub
test
sub
or
cmp
sbb
adc
xchg
test
pop
mov
mov
insb
pop
out
jge
cli
outsb
icebp
popf
cmc
loopne
dec
and
add
subb
adc
dec
mov
lds
inc
arpl
jnp
rep
and
jp
jne
fs
sub
fs
subb
rcrl
ds
lock
pop
orl
xor
lods
sub
push
dec
and
out
cmpsl
add
mov
push
out
cmpsl
push
in
jae
xchg
pusha
xor
xchg
dec
inc
lret
popa
mov
leave
pushf
and
ljmp
mov
jnp
xchg
jp
adc
out
jbe
mov
jmp
adc
fbld
xchg
pop
out
fs
ss
nop
xchg
jb
ss
scas
add
in
or
fnstenv
xchg
test
loope
hlt
ret
fists
or
fisubrs
addr16
dec
gs
gs
xor
scas
add
xor
dec
rcll
sub
pop
and
loopne
push
mov
sub
test
shll
pop
xor
notl
hlt
ja
dec
xor
jmp
cmpsb
iret
cmpb
lock
mov
lea
inc
outsl
incl
cltd
xor
lret
sbb
pop
and
jae
rorl
rcrl
leave
pop
xchg
daa
sbb
or
add
das
movsb
or
dec
xchg
stos
add
cmp
xchg
cmpsl
repnz
pop
mov
xchg
outsb
xlat
mov
jmp
iret
fistps
stos
inc
sbb
pop
insl
orb
pop
xchg
add
pop
push
or
neg
std
sub
sub
test
int
test
xchg
scas
gs
outsl
push
sti
add
and
scas
push
push
cmc
cltd
out
mov
clc
and
clc
in
pop
mov
lea
loope
insb
dec
xchg
fnstcw
pusha
inc
ss
call
jo
inc
lret
sbb
mov
push
ja
xchg
popw
cltd
movsl
xchg
cmp
je
inc
xchg
sub
js
push
xchg
mov
sbb
jmp
adc
xchg
adc
push
add
in
jmp
es
pop
mov
inc
and
movsl
mov
adc
gs
xchg
enter
jns
fs
sub
cmp
les
mov
sub
out
clc
jae
cmp
add
inc
xor
mov
cmpsb
pop
ss
jnp
sbb
jmp
and
insl
adc
mov
repz
xchg
idivb
dec
lock
aad
jae
sbb
dec
sbb
mov
or
jbe
in
xchg
cmpsl
mov
in
sbb
add
and
push
fcompl
jge
data16
xor
je
adc
mov
xchg
mov
sub
mov
mov
jp
xor
icebp
mov
mov
push
sub
into
push
testb
sub
shrl
dec
adc
in
es
mov
les
lock
out
les
mov
repz
mov
in
ljmp
aas
vandnps
call
sti
adc
pushf
orb
xchg
push
sub
out
popa
fadd
cmpsl
mov
mov
iret
push
sub
jb
sbbb
mov
adc
out
shl
sub
int
sub
loopne
pop
push
mul
jle
jae
incl
or
mov
pop
stos
inc
mov
push
mov
bound
imul
js
mov
dec
jecxz
rorb
dec
add
test
lods
and
mov
dec
pushaw
sub
repnz
mov
cmp
xlat
and
mov
and
stos
push
das
mov
xor
hlt
xchg
inc
adc
jge
dec
jbe
or
stos
in
adc
int3
stos
xchg
push
test
hlt
sarb
aam
nop
repz
xor
or
mov
les
adc
aaa
das
add
clc
sbb
mov
xchg
and
mov
fldenv
adc
and
dec
test
push
filds
xor
mov
mov
fdivrs
push
add
shr
and
out
stos
xchg
ret
sub
jg
nop
cmp
pop
insb
mov
mov
mov
sub
popa
cld
add
repnz
in
jbe
and
jge
jmp
pop
bound
pop
ja
stos
cmpsl
or
xchg
cmp
and
pop
movsb
hlt
ja
outsl
pusha
xchg
rsm
mov
out
aam
inc
push
leave
stc
mov
mov
aad
aam
or
in
inc
iret
jmp
xlat
fwait
lds
negb
add
jb
add
pop
xor
es
loope
shr
icebp
add
hlt
cmp
pop
add
pop
das
popf
jmp
loopne
stc
cmpsb
fsubrs
inc
xchg
int
or
loopne
mov
enter
lods
push
xor
repz
jmp
test
adc
pop
adc
mov
idivb
dec
cmp
inc
fstpl
fnsave
and
cmp
or
pop
xchg
out
sub
fs
inc
imul
and
divps
jns
cmp
sbb
inc
push
loop
inc
ret
sub
mov
xchg
xor
add
fnstsw
iret
adcb
outsb
sub
adc
mov
xchg
xor
jle
mov
mov
cmp
mov
xor
lcall
xchg
in
loop
pop
out
fsubr
daa
push
lods
mov
or
mov
mov
mov
inc
fnstsw
and
push
nop
cmp
jae
callw
push
xor
xchg
pop
adc
lds
xor
mov
cmp
dec
int3
cmp
push
dec
int3
out
outsb
fsubl
decl
add
add
pop
xchg
sbb
adc
adc
ror
xor
jecxz
xchg
shlb
in
int
jmp
xchg
pushl
pop
jp
fsubl
dec
xchg
dec
xor
std
out
jns
xchg
fxch
addr16
mov
and
stos
push
addl
notl
or
and
arpl
insl
mov
pop
mov
dec
stos
testb
sbb
shll
int
push
adc
xor
dec
push
mov
adc
insl
cs
jmp
sbb
adc
dec
mov
mov
cmpl
cwtl
cs
mov
andb
add
lahf
outsb
mov
or
push
or
pushf
loop
or
and
out
xlat
jg
mov
adc
xchg
sti
xchg
jno
loop
jp
imul
mov
inc
popa
push
sbb
int
or
mov
imul
das
imul
jmp
cmc
xlat
pushf
loope
enter
movsb
mov
and
jne
fbld
js
cli
fwait
in
push
mov
pop
out
xchg
mov
les
add
mov
push
inc
ja
stos
push
adc
jne
testb
test
notl
pop
lret
popa
sbb
ret
ret
cmp
and
pusha
fstl
and
sbb
dec
push
cmp
add
jp
mov
rcl
loopne
push
pop
lret
cmp
sub
loope
fdivrs
dec
pop
push
lcallw
mov
cmc
adc
lods
out
push
out
add
xor
in
and
xchg
xor
dec
sbb
push
dec
outsl
inc
xorl
xchg
mull
push
lahf
fldt
clc
adc
fcompl
xchg
in
int3
xchg
mov
test
test
push
arpl
mov
orl
sahf
repz
push
repnz
lds
inc
ljmp
jnp
lea
pop
push
aas
adc
int3
test
enter
dec
jmp
jl
or
fstps
scas
inc
loopne
cmp
inc
test
dec
in
notl
pop
loope
pop
rclb
adc
stos
out
dec
fdivr
dec
push
jne
adc
stos
mov
xor
xchg
in
xor
in
mov
pop
push
cmp
mov
and
movb
inc
pop
and
pop
pop
iret
cmp
cmp
repz
mov
jp
pop
sti
or
or
mov
arpl
es
popa
cmp
mov
rorl
test
loope
pop
jno
dec
jnp
icebp
test
inc
inc
cli
cli
fcoml
test
push
cmpsl
out
into
lahf
adc
or
xchg
dec
add
and
adc
pop
xlat
outsb
mov
gs
test
pushf
xor
in
out
stc
fwait
outsl
push
lret
mov
repz
lds
pop
sahf
out
push
dec
push
xor
sti
mov
xchg
data16
lods
inc
in
outsb
xchg
mov
mov
jmp
jl
cvtpi2ps
fsts
roll
stos
jmp
cmp
xchg
in
or
mov
jo
in
arpl
push
pop
loopne,pt
fstl
mov
stos
add
std
cmp
in
mov
inc
mov
test
pop
xor
mov
push
jbe
adc
or
mov
jnp
xor
pop
and
jno
xchg
add
dec
mov
test
mov
sub
adc
es
add
sbb
sub
test
es
insl
jbe
fbstp
mov
decl
movsl
ret
rcrb
insb
test
inc
out
mov
cltd
lods
xor
data16
lret
movd
dec
in
test
aas
shrb
mov
and
test
ljmp
cmp
mov
ret
aad
test
and
xlat
dec
xor
andb
pusha
add
stos
inc
pop
repz
xchg
dec
push
sti
ds
fstpl
dec
add
pop
cmpsb
out
mov
in
imul
popl
rcrb
loopne
sbb
xchg
repz
movsb
stos
jbe
daa
lcall
fs
mov
int
xchg
add
in
sbbl
jecxz
mov
jne
fldt
pop
movsb
dec
lcall
clc
imul
lods
pusha
neg
shlb
cs
cwtl
inc
dec
movsb
cmp
int3
cmp
inc
aaa
jbe
mov
pop
mov
cmp
fidivs
outsl
ss
mov
cs
cltd
push
add
inc
and
add
out
push
dec
cltd
ret
or
sbb
insb
mov
pop
fs
js
add
fiaddl
or
mov
cmp
in
sub
inc
push
leave
mov
sbb
xor
pop
mov
sti
cld
fistpl
jno
push
shl
mov
cmpsl
popl
xchg
bound
xchg
adc
cmp
test
mov
pop
bnd
fnstenv
add
iret
mov
test
mov
gs
call
fistpl
jo
dec
mov
orl
mov
push
shrl
test
mov
adc
sub
cmpl
test
cli
jne
scas
xchg
cmp
pop
lock
addl
sub
lods
or
ja
add
icebp
add
aaa
rcrb
scas
xlat
pop
push
es
lods
fisubrs
hlt
adc
pop
daa
inc
dec
ss
pop
mov
mov
lret
add
shrl
mov
push
das
movsb
pop
jno
add
cmp
das
mov
mov
insl
arpl
lea
testl
xchg
cmpsl
push
dec
fcomps
cwtl
das
xchg
ret
pop
jns
mov
movsl
cmc
add
es
push
mov
or
jp
loopne
mov
pop
in
rol
lods
sbb
je
je
sbb
call
sahf
or
adc
gs
fnstsw
dec
jns
pop
loope
inc
sbb
in
sub
movb
inc
adc
mov
mov
imul
icebp
jns
mov
shlb
jae
jl
fildl
or
movsl
in
mov
testb
push
add
cmp
add
pop
leave
clc
mov
mov
mov
gs
sbb
mov
imul
or
mov
push
sbbb
inc
test
movsl
and
xchg
scas
clc
push
fstps
xchg
repz
cs
push
leave
out
mov
fdivrp
popl
stc
testl
jb
sbb
shrl
push
sti
cmpsb
shlb
roll
mov
fs
negl
jmp
jb
pop
fistpl
inc
push
xor
pop
xchg
out
rcrb
lret
cltd
inc
sub
movsb
repnz
pop
fsubp
mov
test
sbb
pop
sub
pop
push
xor
icebp
sub
rcrl
sti
pop
jae
lds
sbb
test
jnp
inc
es
xor
mov
push
lds
inc
dec
cmp
movsl
ret
push
popf
mov
add
aas
add
icebp
pop
cmpsl
ds
add
cmp
loop
outsb
inc
dec
push
sbb
xorb
subl
dec
repnz
fnstenv
adc
jbe
mov
mov
mov
insb
test
dec
addr16
adc
cmp
mov
out
in
jns
test
xor
imul
sbb
ljmp
fmul
mov
popf
imul
dec
mov
inc
daa
mov
inc
push
iret
aad
ss
mov
sbb
push
sub
fildll
or
adc
out
cmp
popf
cwtl
rcrl
lcall
icebp
cmpsb
out
test
pop
out
push
in
das
pop
mov
adc
mov
outsb
jae
adc
addl
mov
or
jecxz
daa
call
jge
sti
scas
hlt
notb
dec
cwtl
negl
xchg
push
fs
mov
adc
cld
das
xor
mov
push
push
or
fldlg2
enter
push
jmp
xor
popf
jl
inc
pop
sub
aaa
push
cmpsl
jnp
push
mov
dec
ds
dec
das
sbb
cmp
mov
mov
jl
xchg
cmp
std
imul
insl
mov
xchg
jge
and
inc
jne
pop
and
aam
xchg
pop
xchg
dec
in
push
mov
push
pusha
movsb
sub
lret
xchg
mov
push
mov
adc
add
inc
lods
and
and
xlat
push
xor
push
mov
in
jle
push
sub
movsb
or
adc
js
aad
sti
addr16
cmpsl
cmp
clc
sub
adc
es
mov
lret
pushf
repz
stos
push
and
fbstp
test
into
sbbl
cmp
jg
orl
jg
imul
mov
test
in
fstps
cwtl
fimuls
aas
in
mov
in
dec
cmp
test
push
add
push
sbb
ljmp
push
adc
pop
pop
js
fldt
xchg
jg
cli
pop
push
jmp
int
push
in
jo
and
xchg
sbb
in
sbb
hlt
inc
add
test
out
test
mov
add
pop
cmp
or
fistpl
sub
or
dec
mov
addl
push
shrl
pop
sub
cld
inc
inc
fadds
jmp
daa
cli
daa
cmp
imul
jb
cld
or
test
lahf
xor
xchg
push
in
fildl
rorb
pusha
cmp
nop
adc
fmul
addr16
adc
and
cli
mov
sbb
rolb
inc
sbb
sub
mov
fisttpll
arpl
sbb
push
test
cmc
add
nop
test
inc
xlat
jns
pop
hlt
rcl
imul
push
mov
rcl
inc
lock
lahf
daa
nop
stos
rcrl
sub
jecxz
cmp
in
out
xor
repz
loopne
in
push
pop
lcall
push
bound
shlb
push
jmp
cmpsl
push
xchg
lret
daa
sub
loopne
cmp
sti
xchg
add
ja
push
gs
add
cmp
xchg
sbb
sahf
sub
test
xchg
sbb
mov
mov
cmpsb
aaa
popa
orl
mov
popa
js
fisubl
mov
add
lock
and
inc
xlat
dec
adc
or
aad
stos
jae
pop
cs
ljmp
imulb
mov
int3
fmull
iret
aaa
jae
hlt
lret
popa
add
adc
call
outsl
cmp
or
dec
jne
mov
sbb
in
mov
in
jb
cwtl
adc
addr16
andl
movsb
xchg
test
sbb
push
sub
mov
loope
repnz
mov
loopne
pop
movb
jno
lods
push
fisubs
fmul
add
xlat
cltd
test
push
inc
mov
jge
inc
xor
pop
adc
and
stos
dec
test
or
mov
push
jp
cld
or
sub
js
push
and
sbb
adc
xlat
pop
in
or
mov
add
xchg
cmp
ficomps
inc
fisubl
jb
mov
rclb
jmp
mov
enter
pop
in
sub
outsl
pop
xlat
jle
sar
pop
lahf
scas
cmp
adc
leave
mov
rol
adc
xchg
mov
adc
inc
cli
mov
mov
imul
rclb
aaa
popf
adc
lcall
popf
pusha
ljmp
mov
inc
mov
ret
pop
mov
pop
cmp
xor
rorb
mov
ret
call
mov
dec
rorl
addl
pop
or
inc
mov
insl
ret
into
mov
fimull
or
mov
xor
leavew
loopne
lock
je
pop
sub
into
and
movsb
adc
cmpsl
lods
mov
cpuid
orb
mov
mov
cmp
xchg
adc
cmp
push
mov
jge
in
adc
and
xor
mov
push
mov
gs
fisubs
xchg
mov
fisttpll
das
test
mov
xchg
add
sbbl
data16
xor
scas
mov
adc
inc
cmpl
std
ror
pusha
lds
movsb
mov
pop
push
jne
inc
repnz
pop
std
dec
or
ret
or
insb
mov
mov
push
lds
in
jns
lret
int
add
out
ds
stos
outsl
xchg
repnz
or
jmp
pop
inc
cmp
jno
mov
mov
mov
xor
inc
repnz
lcall
inc
sub
sbbl
jmp
lods
lea
mov
xchg
push
lea
rcrl
jecxz
push
pop
dec
adc
inc
push
das
cmp
test
lret
int
inc
ficoms
gs
loop
mov
lret
add
out
mov
adc
xchg
pushf
jb
nop
sub
es
fsubrl
push
adc
push
sbb
sti
das
adcb
cs
sbb
fadds
lods
add
fwait
repnz
dec
test
sahf
sub
lods
ret
inc
push
cmpsl
out
gs
dec
int3
add
sub
push
or
repnz
mov
loop
push
add
mov
and
fidivs
add
mov
push
cwtl
clc
inc
or
push
daa
mov
out
and
sarl
add
cmp
sub
mov
dec
sbb
and
int3
xchg
cmp
test
lock
pop
je
icebp
enter
int
dec
dec
enter
push
dec
popf
into
mov
inc
adc
je
fs
jno
ss
sbb
test
lods
daa
leave
test
stc
jg
pop
aad
faddl
cwtl
sub
popf
xchg
dec
and
mov
mov
xor
arpl
push
push
jg
es
insl
mov
lahf
mov
pop
daa
xor
dec
std
cwtl
mov
or
cmc
lea
leave
sbb
fstl
xor
popf
mov
mov
repnz
inc
out
jg
arpl
xchg
adc
cmp
mov
push
push
arpl
cmpsb
xor
imul
lock
xchg
and
inc
or
jbe
mov
stc
lret
sub
int3
pushf
bound
fld
pop
or
push
loop
cmp
mov
adc
push
pop
adc
push
nop
jle
ret
data16
xlat
cmp
jb
push
int
lock
inc
pop
test
ja
mov
inc
xchg
dec
pusha
pop
push
or
or
xor
inc
dec
mov
push
add
scas
add
popf
pusha
sub
seta
mov
ja
mov
movsl
dec
pop
pop
jl
stos
loop
mov
cmpsl
repz
rorl
add
pop
xchg
mov
les
flds
and
fld1
push
icebp
xchg
mov
pop
mov
cmpsb
dec
pop
scas
jnp
scas
mov
mov
mov
into
subl
cmp
xchg
movsb
scas
inc
inc
xchg
out
int3
inc
jo
enter
dec
or
divl
jecxz
mov
and
jmp
sbb
jo
clc
mov
dec
push
leave
ds
lods
dec
mov
push
in
xor
xchg
js
dec
jae
sub
out
loop
mov
decb
mov
sub
pop
stos
cs
jne
dec
out
clc
ja
mov
fwait
and
and
push
jae
adcb
cmp
dec
mov
data16
scas
inc
shrl
mov
xor
or
cwtl
hlt
popf
js
jno
insb
shlb
push
negl
sti
xchg
dec
sbb
into
call
and
cmp
add
scas
movsl
push
iret
daa
inc
lock
xchg
sub
in
pusha
or
mov
aaa
add
fstpt
mov
adc
or
in
xchg
xchg
ret
loop
sarl
fcoms
mov
rorb
fistpll
jecxz
adcb
leave
jae
stc
cs
mov
das
and
add
enter
pop
sbb
mov
sahf
ljmp
pop
cmpsb
addr16
int3
cmp
imul
js
scas
sbb
sbb
cltd
jp
mov
pusha
pop
lahf
imul
cltd
push
cmp
std
lcall
and
rcrb
push
jle
mov
gs
popf
fnsave
jns
cltd
pop
sbb
in
lahf
cs
in
mov
inc
pop
adc
lock
outsb
push
sub
ds
pop
lret
add
out
ss
inc
and
inc
fcoml
inc
lret
outsb
xchg
ja
jno
xor
arpl
jecxz
cmp
adc
xchg
aam
cmp
mov
or
xor
and
and
mov
cmp
and
sub
std
dec
sub
lret
add
jae
xchg
sub
inc
out
or
data16
repz
jns
out
data16
jp
cmpxchg
xor
cltd
xor
mov
push
fsubrs
adc
mov
jle
inc
loop
mov
imul
sahf
adc
dec
dec
pop
mov
movsb
pusha
inc
or
pop
push
dec
xor
adc
sbb
inc
cmp
shrl
popa
faddl
xchg
outsl
mov
mov
and
loop
mov
sbb
rcrl
stc
mov
je
or
jb
out
test
insl
popf
pop
jne
pop
cltd
sub
sub
push
push
jbe
aaa
call
aad
dec
lods
cmp
sub
mov
xor
int
mov
push
cltd
pusha
mov
mov
rol
lret
out
in
mov
push
aam
jno
les
jae
lods
xchg
fadds
out
sbb
cmpsb
mov
mov
setle
sbb
imul
or
xchg
clc
lea
jge
jns
mov
lds
or
pop
xchg
in
adc
sbb
sbb
in
es
leave
sbb
cmp
dec
popf
xchg
mov
push
orb
clc
jne
push
pop
lods
shl
mov
inc
sub
dec
push
mov
pop
xor
inc
lcall
stos
mov
addr16
mov
cmpsb
mov
xchg
inc
aad
subb
push
pop
out
ret
mov
lods
bound
out
pop
mov
fildll
test
ret
nop
fnsave
or
push
add
jge
adc
ss
int
mov
popa
popa
mov
add
out
push
aam
js
cmpsb
mov
dec
loop
pop
lcall
das
cmpsl
rcrl
jo
sahf
sbb
in
ret
ret
jmp
sub
mov
repnz
cmpsb
sbb
jl
jecxz
xchg
and
rcl
btr
cltd
jge
mov
xchg
mov
ja
les
push
jmp
out
mov
mov
mov
cmp
ret
outsl
inc
sbb
loopne
je
sbb
sub
mov
mov
imul
pop
xchg
add
mov
fildll
inc
fucomip
call
in
adc
scas
mov
push
loopne
xchg
mov
in
mov
daa
jns
pop
ret
cli
xchg
outsb
fisubs
out
adc
fmul
insb
js
stos
pusha
pop
or
mov
aad
cs
sti
rolb
lahf
pop
xor
int3
jp
pop
mov
pop
scas
cmc
add
negl
adc
lcall
cmp
sub
dec
jmp
aas
push
fbstp
or
int3
mov
gs
fdivl
xchg
pop
js
and
ss
jmp
xor
mov
fs
inc
push
cli
xchg
fistpll
lock
add
lea
push
cmc
aam
out
fcoms
or
jp
movsb
idivb
inc
xchg
repz
in
call
das
scas
hlt
mov
movsb
repnz
jmp
nop
dec
sbb
fwait
cmpsb
call
inc
push
fidivrl
sub
lods
adc
pop
inc
in
mov
jp
out
inc
bound
and
sbb
mov
push
in
and
jp
daa
rcl
add
adc
lods
call
adc
repnz
add
ja
lods
xor
or
clc
push
mov
pop
in
call
jl
adc
adc
or
jno
sti
jns
shll
jp
mov
or
jnp
shll
mov
inc
scas
out
movsl
in
push
cmp
outsl
test
jae
decl
out
cmp
mov
js
testl
mov
jmp
adc
ror
xchg
or
rcr
or
scas
data16
je
cltd
inc
cmp
mov
jbe
xorb
mov
adc
aaa
adc
pop
cmp
mov
rcrb
mov
cltd
jb
popa
mov
sbb
pushf
adc
jns
add
subl
fwait
mov
push
in
mov
or
mov
repnz
pop
out
hlt
ret
rcrl
call
xchg
cmp
xorb
push
mov
inc
jecxz
ret
adc
aad
xor
ja
mov
inc
popa
xchg
ret
ds
hlt
popf
je
or
jo
mov
xor
pop
mov
mov
or
arpl
sbb
fadd
jno
sbb
test
scas
push
lock
shlb
adc
movsl
orl
popa
cmp
mov
cmp
inc
cmpsb
std
push
call
xchg
nop
and
popf
pusha
pop
and
lret
xchg
jle
dec
mov
adc
insb
add
icebp
adc
js
sub
pop
hlt
add
inc
fstl
push
add
gs
daa
push
ds
imul
shlb
add
cmp
or
aaa
pop
imulb
xor
jmp
inc
test
or
test
mov
push
mov
push
in
inc
mov
jb
imul
sbb
mov
sub
loope
andb
fisttps
jmp
mov
in
es
and
ret
inc
push
dec
rcrl
or
cs
cmp
ret
outsb
push
pop
es
pop
repnz
xchg
adc
mov
mov
or
cmpsl
rcrl
sarl
mov
shr
and
push
pushf
or
ja
clc
mov
lcall
stos
setp
mov
imul
lea
pusha
decb
push
insl
add
pop
outsb
lahf
push
mulb
or
pop
jl
lods
mov
insl
xor
adc
in
aam
int3
movsl
in
cmpsl
bound
into
jp
adc
lods
test
mov
xchg
mov
ja
jbe
test
dec
mov
or
scas
and
roll
push
ja
jo
sarb
and
inc
mov
lods
jne
push
jmp
dec
icebp
pop
ds
inc
xchg
cmp
dec
out
aam
les
xchg
mov
jp
sub
xchg
das
inc
mov
out
or
xchg
mov
cmp
fiadds
js
inc
sahf
xor
test
mov
push
decl
mov
push
jecxz
imul
cmpsb
mov
adc
loopne
inc
negb
iret
fimuls
mov
sbb
in
push
icebp
pop
add
or
sbb
test
push
stos
push
sbbb
sbb
js
lea
into
adc
pop
ljmp
in
xchg
mov
inc
in
lock
push
adc
int
add
push
sbb
add
pop
jbe
or
cmp
ds
mov
mov
mov
mov
inc
fsubrp
int
ret
das
rdmsr
incb
mov
add
cld
mov
movsb
jb
and
adc
repnz
ret
dec
scas
fsubrl
cmp
sbb
cmp
sub
insb
hlt
mov
movsl
mov
je
mov
ljmp
xchg
push
add
xor
pushf
jns
cmpsb
out
add
inc
fidivs
jo
pop
sub
push
repnz
stc
xlat
test
pop
mov
fistps
mov
add
jle
jno
xor
and
int
in
stc
lcall
xor
in
cltd
sub
dec
pop
cltd
imul
mov
push
or
repz
push
in
jg
push
aaa
inc
fisubs
sub
inc
fiadds
mov
add
jae
push
jecxz
mov
repnz
push
testl
mov
or
lcall
scas
lock
push
adc
mov
out
sub
aas
or
jne
push
dec
sarb
je
jbe
adc
mov
aaa
gs
mov
push
adc
aas
cmp
xchg
adc
cmp
add
inc
sub
mov
push
lcall
pop
or
inc
jge
repz
aaa
insb
mov
lods
cmp
hlt
icebp
insl
inc
cmc
pop
fwait
cmpsl
jge
mov
mov
imul
sub
test
outsl
inc
pop
add
pop
fldcw
adc
dec
pop
mov
cltd
add
pop
and
sar
adc
mov
sbb
pop
xchg
stos
cmp
in
es
aaa
inc
sahf
lods
in
xchg
in
dec
cmp
pushf
cmp
divb
rcrl
sub
cs
mov
or
jg
out
cmc
roll
sub
testb
icebp
outsl
xchg
lods
mov
leave
pop
icebp
cli
sti
ficompl
sbb
sarl
pop
xchg
mov
cmp
xorl
push
and
mov
sub
lods
adc
ds
dec
pop
and
movsl
shr
std
pop
adc
mov
sbb
xor
xchg
fiadds
mov
cmpsl
add
jp
mov
mov
push
mov
adc
lds
mov
mov
push
mov
popa
cwtl
mov
adc
test
jnp
mov
cmp
pop
out
int
adc
inc
movsl
push
mov
js
push
mov
insb
imul
sbb
test
jnp
add
sub
or
call
fst
inc
fcomi
std
xor
mov
cmp
aas
dec
mov
nop
aaa
sbb
cmp
push
sub
enter
add
into
aaa
leave
in
pop
test
jb
sub
nop
dec
pop
xchg
fs
ficoml
mov
jmp
inc
sub
fimull
adc
mov
cmp
test
cmpl
sub
lea
push
adc
mov
jne
jle
sarl
or
nop
mov
lcall
jo
push
mov
jg
orl
jns
add
ja
dec
es
adc
xchg
sar
lcall
test
call
ret
xor
mov
mov
mov
inc
mov
pop
xor
push
adc
cmp
push
adc
push
sbb
cmc
movl
push
scas
sub
fs
aam
or
and
les
push
mov
add
jecxz
lods
jle
test
xchg
xchg
xor
push
shl
ficomps
push
cmpsb
mov
and
jge
push
xchg
jp
dec
les
mov
inc
and
mov
loop
pusha
adc
xor
jl
sub
add
jl
and
sub
gs
jle
pop
mov
sahf
ss
jne
lods
dec
push
in
pop
jo
int
inc
lea
mov
out
cs
sbb
cmp
dec
outsb
inc
pop
jo
mov
loopne
adc
out
cwtl
aas
sbb
dec
pop
xor
xor
lds
aam
mov
inc
dec
scas
inc
es
xor
mov
sarb
in
or
fnstenv
lahf
test
mov
rolb
mov
subb
or
dec
std
test
loopne
pop
icebp
daa
loopne
sub
cwtl
decl
lret
loop
aaa
cmp
lods
sub
inc
xlat
lock
dec
xchg
out
insb
xor
jmp
xor
mov
sub
mov
mov
add
test
fistpl
mov
fsubr
xchg
mov
out
add
mov
aad
out
sbb
jge
xchg
in
orb
mov
fstl
pop
les
and
mov
fiaddl
aad
add
inc
call
jne
lods
jno
icebp
adc
aas
xchg
adc
or
pop
jne
in
or
push
xchg
lahf
call
sub
xlat
bsr
ret
loop
lret
mov
cltd
dec
adc
add
mov
push
adc
xor
and
dec
js
in
das
test
jl
gs
jb
lods
jl
shlb
adc
mov
mov
or
out
xchg
add
cld
pop
xchg
leave
cmp
sub
iret
add
dec
sbb
lods
fcoml
add
or
adc
xchg
ss
dec
movsb
inc
mov
mov
iret
shrw
sbb
ss
rcll
out
sti
sub
shrb
pop
xor
mov
cs
frstor
ret
je
iret
imul
xchg
mov
ljmp
and
in
mov
call
ret
xchg
stos
pusha
pop
rcl
pop
xchg
jle
mov
fxch
in
jle
outsl
add
fidivrs
fidivrl
fbstp
push
rcrl
rcrb
lods
or
mov
push
cli
push
mov
push
sub
mov
or
xor
mov
mov
push
push
adc
movsb
test
test
loopne
pop
test
pop
xor
cmp
inc
movsb
sub
stos
pop
mov
pop
cmc
mov
sub
in
jnp
daa
mov
mov
push
push
inc
out
popf
push
in
stos
cmp
jecxz
lret
push
pop
clc
popa
jge
mov
popa
dec
or
call
subps
jg
repz
out
or
inc
mov
enter
out
jle
rolb
cmp
hlt
jne
xor
inc
inc
in
clc
outsb
lds
test
insb
data16
push
xchg
icebp
mov
addb
test
out
lcall
push
lods
push
sahf
sub
ljmp
ret
ficompl
mov
pop
lret
ret
ds
in
cmp
jo
jp
push
xchg
mov
inc
sub
pop
fs
add
fstl
or
incl
fwait
mov
loopne
stc
and
ret
cmp
xlat
mov
dec
mov
jo
pusha
add
clc
sahf
sahf
sub
lret
adc
or
push
sub
sahf
sti
dec
dec
or
adc
xor
jge
fstps
fs
pop
add
movsb
xchg
or
lods
jp
fistps
xor
sbb
scas
ss
cmc
dec
imul
lods
inc
pop
aas
inc
jl
and
or
aam
mov
ret
out
dec
inc
and
dec
ds
push
pop
jnp
cld
inc
das
or
jne
stos
jns
out
sbb
fdivl
fmull
pop
in
mov
fwait
insb
lods
enter
and
jecxz
lahf
mov
mov
mov
add
fdivrs
pop
cltd
add
sub
fisubs
ljmp
ret
mov
or
sub
add
cmp
add
jns
mov
shlb
adc
fimuls
daa
jl
mov
or
sbb
jnp
ffreep
arpl
xor
adc
jge
jae
lcall
pop
mov
fiaddl
aas
add
cmp
push
mov
ds
test
xchg
rep
xchg
shlb
dec
mov
pop
sarb
mov
sub
movaps
add
sbb
add
shrb
repz
notl
outsb
jp
popf
xchg
adc
repz
les
cmp
popa
xor
test
pop
andb
cli
xlat
outsb
in
outsb
sbb
jle
sahf
lods
aaa
adc
shll
cmp
push
lahf
je
lds
pop
iret
push
mov
jno
pop
es
loop
jnp
xchg
das
js
add
andb
push
hlt
fbld
fwait
mov
jnp
add
cwtl
push
dec
add
int3
pop
mov
lea
dec
and
add
loope
repnz
out
xchg
dec
adc
jb
jl
cmp
arpl
mov
push
add
arpl
and
pop
mov
push
pop
out
push
or
pushf
lret
mov
add
loopne
pop
or
loop
cltd
adc
pop
or
loop
sub
icebp
mov
cmp
in
inc
sbb
in
cmp
jb
lock
xchg
mov
lods
or
and
add
push
test
clc
test
shlb
out
dec
pop
cmpsl
or
pop
fdivrl
nop
push
dec
mov
mov
out
cli
dec
sahf
into
popa
add
jno
ja
push
mov
and
and
test
jae
mov
pop
sbb
and
dec
cmp
lret
jl
and
dec
shlb
mov
stos
insb
js
pop
sub
les
push
add
xchg
cmc
adc
jne
push
out
shrb
push
inc
adc
and
inc
movsl
loop
add
sbb
mov
fs
push
das
stc
xchg
fwait
cld
lahf
testl
lret
je
jle
leave
mov
xchg
sub
xor
bound
jmp
test
lahf
rcll
or
mov
lcall
data16
daa
pop
add
push
test
sub
ja
bound
loope
insl
adc
jmp
in
inc
jecxz
cltd
dec
data16
push
jno
sti
mov
rcrb
addr16
addr16
js
inc
mov
pop
clc
cmp
add
cmpsl
nop
sub
and
pop
xchg
mov
dec
xor
popa
add
jo
inc
fucom
jnp
cmpsl
in
lods
jg
iret
cmp
mov
insb
add
cmpsb
shll
icebp
scas
ffreep
pop
and
cmp
jmp
sarl
adc
lea
cmp
ficompl
mov
or
aad
ficoml
pop
je
ret
loope
push
xchg
xchg
jnp
sub
and
into
ss
aad
mov
and
out
in
pop
repnz
je
arpl
negl
jns
cltd
dec
push
pop
push
leave
dec
mov
cmpb
test
insl
sub
add
pop
test
and
dec
pop
test
jge
rcrb
lea
push
sub
pushf
push
adc
mov
ja
fsubs
adc
test
int
fildll
repnz
adc
scas
mov
dec
push
mov
add
mov
mov
mov
mov
adc
add
or
xchg
fsubrs
nop
nop
mov
sahf
push
sub
popf
mov
das
add
pop
test
sub
push
sbb
or
push
mov
movsl
pop
adc
mov
xor
iret
cmp
mov
test
push
mov
cmp
mov
popa
jl
dec
out
test
fbld
dec
or
inc
hlt
nop
and
outsb
sub
adc
dec
orl
push
or
pop
pushf
stc
scas
inc
decl
data16
mov
and
mov
mov
arpl
in
jae
xor
adc
sub
sbbl
xchg
mov
aaa
dec
pop
outsl
shrl
insb
mov
xor
hlt
fidivrs
stc
pop
stos
mov
shrl
mov
gs
xchg
cmp
mov
sbb
cmc
mov
sub
test
in
pop
mov
and
cwtl
dec
rcrb
inc
xchg
mov
push
popa
clc
or
and
outsl
mov
cwtl
test
jl
cmp
repnz
and
xchg
sti
fistps
mov
jnp
add
xchg
mov
fwait
lock
movsb
fistpll
adc
lock
jmp
mov
fcomps
mov
je
mov
jb
cmp
jae
pop
and
in
cli
adc
xor
xchg
arpl
mov
adc
leave
mov
mov
xchg
pop
sbbl
sub
lods
inc
push
add
xor
adc
add
or
inc
pusha
addb
fidivs
sbb
popf
outsl
negl
js
daa
lcall
sub
fisubrs
add
mov
lds
push
pop
stos
lods
mov
and
mov
bound
out
add
data16
inc
stos
mov
test
mov
cs
popf
xor
std
cmpb
ljmp
mov
sbb
and
or
adc
cs
and
mov
dec
mov
nop
jne
in
aad
push
and
sub
nop
pusha
clc
mov
dec
roll
popf
pop
in
sbb
pop
jbe
or
cmpsb
and
and
push
mov
xchg
jno
push
dec
fwait
add
je
sbb
out
pop
lret
rolb
inc
pop
xlat
sahf
insb
popf
mov
and
jmp
out
fdivr
xor
push
pop
inc
cltd
fsubs
iret
jecxz
sbb
push
shrb
mov
fwait
pop
or
and
inc
in
jae
data16
ret
lret
mov
mov
pop
mov
or
inc
sbb
sub
push
js
out
push
or
fwait
xor
ret
jnp
or
addr16
push
xor
ljmp
imul
sbb
inc
sbb
xchg
push
xchg
pop
jmp
fisttps
adc
mov
push
shll
add
mov
push
push
xor
mov
mov
push
mov
xchg
dec
push
enter
and
insl
arpl
mov
xchg
push
lock
repnz
dec
adc
mov
subb
mov
fld
inc
pop
fwait
negl
ds
jae
call
std
or
insb
in
inc
fst
push
addr16
push
mov
sub
int
pushl
test
jnp
js
out
push
xor
xchg
sub
fildl
je
ret
mov
pop
jbe
popw
xchg
cwtl
add
xchg
xor
xchg
lahf
xor
cli
in
orl
enter
jb
jo
data16
push
adc
mov
push
pop
lock
mov
mov
in
daa
add
aam
xchg
outsb
sub
pop
mov
or
cmp
lea
sub
sti
or
push
inc
mov
sub
jge
test
fidivl
push
mov
imul
dec
add
icebp
mov
movsl
xchg
popa
pop
loopne
icebp
lcall
cltd
push
fldenv
cmp
mov
gs
test
dec
loopne
ss
cmp
mov
push
mov
mov
add
or
es
xor
or
sub
in
dec
sub
adc
negb
add
and
mov
stos
es
mov
int
jnp
shrl
clc
pop
repnz
inc
dec
mov
mov
mov
and
pop
test
lods
outsl
addb
lret
mov
push
pop
jmp
mov
xorl
push
aas
mulb
add
popf
xor
jns
cli
fsubs
adc
jnp
cmp
xor
mov
out
daa
into
notl
inc
pop
pop
in
jp
pop
int3
stos
mov
jle
jge
xor
add
add
aam
test
lock
jnp
mov
test
dec
mov
icebp
hlt
adc
jne
adc
lods
sub
cmpsb
mov
bound
dec
enter
lods
xchg
aas
call
dec
mov
jp
scas
addr16
imul
outsl
sub
shlb
lret
es
pop
jbe
and
dec
mov
adc
cwtl
sub
xor
in
sbb
push
movsl
popa
xor
push
push
in
daa
pop
outsb
dec
iret
mov
dec
and
clc
lret
rclb
cmpsb
cmp
xor
adc
leave
ljmp
divl
ficomps
jp
mov
mov
inc
dec
pop
mov
popf
fs
lret
lods
push
mov
ficomps
call
popa
sub
push
add
dec
pop
aad
mov
xchg
adc
mov
shll
je
mov
out
cmp
fists
cwtl
test
and
mov
mov
lahf
sbb
cmp
mov
or
push
cltd
sub
dec
cmp
fstps
das
mov
ja
jmp
out
fs
and
mull
sti
pusha
adc
lret
xlat
les
mov
inc
mov
fwait
std
xchg
sbb
scas
divl
dec
mov
ret
mov
push
xchg
pop
cmpsl
add
lods
xor
adc
rol
les
popf
in
lcall
and
pop
jg
mov
sbb
mov
mov
sbb
mov
mov
inc
mov
das
dec
jge
or
push
mov
push
xchg
jecxz
stos
cmp
push
cmc
jbe
mov
repnz
icebp
stos
mov
loope
sbb
fwait
or
sbb
loop
lcall
cmp
cli
or
inc
pop
xor
mov
lahf
stc
xor
jmp
andl
andl
mov
jno
test
or
mov
movsl
mov
les
js
jns
cmp
sub
xchg
push
xor
xchg
push
push
pop
lock
sti
push
pop
sahf
lods
and
push
mov
push
and
sbb
mov
mov
call
jmp
push
and
or
dec
adc
je
lahf
xorb
lret
or
jae
into
gs
mov
fmul
mov
scas
add
dec
test
loope
jb
jmp
cwtl
jae
adc
movsb
xor
cli
shrb
push
mov
or
fs
mov
mov
fst
pop
push
or
fs
xlat
in
mov
sbb
fisttps
jae
pop
icebp
in
xchg
pop
cmp
leave
dec
jl
lret
dec
loopne
cltd
push
sub
cmp
scas
jmp
in
test
push
push
fsubs
inc
pop
cmp
cltd
push
scas
call
lcall
inc
in
pusha
jo
xchg
push
and
sti
adc
ja
and
out
lods
lods
test
stos
inc
mulb
push
out
cmp
pusha
divl
es
into
stc
jmp
sub
fsubrs
push
je
mov
adc
xchg
add
cmp
lret
jmp
jmp
xor
xchg
ss
faddp
pop
adc
out
push
mov
sbbl
lods
sbb
pop
inc
dec
mov
fidivl
mov
and
mov
and
mov
dec
imul
mov
mov
sti
cwtl
push
fisttpl
xchg
cs
es
das
mov
fdivp
and
in
mov
cltd
or
cmp
cmp
xor
mov
fsqrt
pusha
movsb
subl
das
or
dec
mov
sub
dec
mov
subl
cltd
std
popf
add
out
scas
and
fcmove
nop
daa
mov
sbb
les
sbbb
dec
fstpt
xchg
mov
out
jmp
and
fidivl
lds
dec
add
cmp
and
sub
es
sub
sub
sub
in
nop
lret
fnstcw
cwtl
in
push
push
push
sti
call
out
sahf
xor
sub
gs
leave
fsts
add
imul
int3
xchg
daa
push
scas
push
ja
movsl
cmpsl
mov
cltd
or
sbb
push
bound
and
aam
out
hlt
add
int3
movsl
loopne
loopne
pop
mov
popf
cwtl
in
cmp
and
pop
mov
xchg
mov
sub
test
sub
out
jb
ret
dec
cmp
imul
in
scas
ret
jo
ret
popf
mov
xchg
out
scas
sbb
les
jecxz
lods
mov
into
mov
sbb
xor
mov
ja
mov
outsl
out
or
enter
dec
or
push
loop
pop
adc
add
mov
add
int3
xor
add
enter
int
dec
or
lods
xor
fistpll
xchg
shlb
in
rclb
add
xchg
cmpsl
xchg
data16
xchg
cmc
fidivrl
cmpsb
lret
and
pusha
imul
mov
jl
push
test
cltd
js
mov
das
or
pop
add
out
cmp
adcb
sahf
or
xor
dec
loope
rcll
sub
sti
jo
dec
pop
sub
fldenv
dec
xor
add
lock
mov
aas
dec
rorb
fisubrl
lret
fldenv
cld
shll
test
scas
sbb
lock
jb
push
mov
xchg
stc
xchg
push
insl
shlb
mov
addb
loope
push
sub
mov
sub
aam
mov
cwtl
std
iret
push
sbb
fwait
icebp
add
and
xchg
xor
sub
mov
jp
lods
mov
add
loop
mov
dec
jb
mov
aas
rorb
inc
xchg
subl
jne
hlt
xor
lock
hlt
push
ds
rcll
stc
lock
movsb
fdivs
push
pop
push
fcomp
es
cwtl
jmp
jmp
test
and
mov
jno
xor
or
test
lret
dec
in
aad
adc
xchg
sub
dec
lods
bound
inc
dec
cli
mov
push
adc
stos
pop
scas
aam
jle
cmc
mov
lahf
or
adc
xor
xor
mov
sahf
xor
mov
out
popf
push
ret
in
popf
lahf
jno
adcb
cmp
cmc
cmp
xor
jmp
sbbl
movzbl
les
cmp
or
in
daa
mov
ret
lret
divb
or
push
mov
fldcw
dec
and
nop
xchg
dec
add
jmp
and
push
call
roll
in
test
out
cmpl
xchg
sub
and
add
mov
xchg
ror
ja
adc
cli
and
adc
pushf
jecxz
int
out
fcmovb
lods
nop
leave
cmp
sub
xor
dec
inc
pop
fistpll
push
adc
lods
bound
test
push
notb
push
inc
adc
inc
lahf
test
out
fdivl
testb
mov
or
in
add
lcall
aas
imul
pop
lds
mov
cs
incb
je
cli
lahf
ljmp
lods
jg
fsubl
or
das
jp
shlb
shl
rol
fidivrs
sarb
test
repnz
sbb
sub
fwait
sti
add
and
adc
fwait
stos
in
mov
jne
popa
dec
or
ljmp
popl
xchg
lock
and
sbb
cmp
cmp
icebp
hlt
scas
jno
adc
sti
das
call
bound
out
cmpsb
sbb
mov
insb
pop
mov
xchg
rolb
or
xchg
lahf
add
pop
test
mov
pop
pop
lea
ss
xor
mov
jp
lods
enter
inc
int
je
popl
movsb
repz
lods
insb
add
xor
adc
sub
cwtl
or
adc
dec
shl
insl
fwait
bound
xchg
mov
outsl
add
outsl
mov
stos
inc
sub
sub
int
int
clc
inc
push
xchg
adc
pop
scas
stos
pop
fwait
and
iret
inc
test
imul
cltd
test
mov
imul
stos
ljmp
divb
inc
and
mov
jg
xor
cmpsb
ds
add
mov
divb
lea
lar
xor
movsl
xchg
icebp
ds
and
cmp
xchg
aas
mov
push
int
pop
cmp
pop
es
aas
dec
cmp
mov
out
loope
fisubl
in
icebp
adc
xchg
mov
pop
dec
mov
xor
xor
mov
jmp
cmp
js
fcomps
or
xchg
xor
pop
pop
or
cmpsb
les
enter
adc
bound
dec
mov
mov
sahf
imul
scas
insl
jmp
pop
mov
or
je
call
test
in
and
inc
mov
mov
and
fcomi
xchg
mov
leave
jns
xchg
sub
insl
shlb
jp
dec
fcoms
adc
mov
shll
xchg
fists
and
jo
and
and
jp
shl
push
outsb
add
pop
mov
arpl
xchg
inc
pop
sahf
jb
push
daa
and
pushf
scas
mov
stos
cmp
out
pop
push
sti
xchg
and
push
lods
xchg
incb
daa
adc
jg
test
cmp
nop
je
xlat
sbb
divb
inc
shll
scas
push
jae
loop
sti
jg
pop
insl
jle
fidivrs
xor
mov
addb
fs
add
in
push
jp
add
and
cmpsb
mov
cmpsl
pop
mov
bound
in
aaa
flds
repz
pushf
fs
aad
pop
dec
pop
mov
sahf
pushaw
lret
cltd
iretw
push
mov
ss
setbe
shll
or
mov
dec
repz
sbb
fs
aaa
xchg
loop
loope
in
shrb
stos
or
inc
or
jb
inc
imul
insb
or
push
daa
imul
insl
push
push
rorl
es
clc
xor
movsb
popl
mov
and
test
cmp
pop
testl
lcall
scas
mov
popa
jns
aad
out
add
cmpsb
js
mov
fimuls
sbb
inc
lcall
enter
cwtl
dec
pushf
xchg
insb
mov
pop
divl
fdivs
add
xchg
pushf
jecxz
cld
in
inc
sub
dec
dec
add
sbb
test
cmp
jle
xchg
sbb
popf
and
jbe
es
push
stos
sub
rol
enter
fwait
push
jne
mov
or
repz
rcrl
mov
outsb
pop
mov
loop
ficompl
push
inc
aam
gs
jne
pop
xor
scas
mov
inc
dec
stc
leave
int
out
daa
aaa
pop
imul
movsb
test
test
ss
sub
out
bound
nop
pop
repz
je
sarl
je
iret
mov
into
inc
loopne
push
add
popa
lea
pop
out
push
das
in
xchg
add
inc
dec
dec
iret
jmp
cmp
icebp
pop
or
std
popf
es
or
or
inc
imul
jno
je
cli
je
cs
fimull
mov
dec
pusha
mov
sbb
add
call
or
jae
mov
mov
add
sbb
dec
out
cmpsl
ja
lahf
cbtw
test
std
xchg
daa
and
push
test
in
jno
jnp
mov
mov
or
cld
lock
aam
in
push
in
xchg
pop
outsb
testb
gs
mov
cmpsl
sbb
cmpsb
stc
push
pop
add
fs
insb
ret
dec
dec
clc
and
pop
mov
fst
outsb
cmpsl
cwtl
pop
outsb
ffree
mov
push
xor
incb
jno
add
imul
bound
sbb
repz
scas
push
cmp
add
pop
cli
xor
sub
outsl
aam
cwtl
sub
hlt
inc
cs
popa
sahf
mov
sub
rolb
ret
outsl
sub
pusha
adc
cmc
mov
mov
outsb
ret
and
mov
pop
pop
mov
xlat
sub
aas
mov
add
fisubrl
jns
xor
adc
fcoml
mov
pushf
jns
lret
mov
loop
sti
xchg
imul
push
sub
dec
lods
out
int3
gs
notb
shll
jo
jbe
cwtl
call
push
je
inc
push
push
push
in
lahf
testl
fwait
lods
iret
inc
pop
add
push
addr16
pop
fildll
lret
cmp
es
push
mov
outsl
jne
js
xchg
sbb
pop
push
test
mov
in
push
dec
lcall
push
push
ret
outsb
push
arpl
adc
sbbb
repz
sub
mov
mov
xlat
ja
test
cli
push
sub
jbe
into
fiadds
mov
sub
inc
mov
int3
pushf
repz
daa
add
mov
lahf
mov
adc
jecxz
push
stc
shrb
fstps
outsl
dec
idivl
jle
arpl
pop
mov
dec
scas
push
leave
xor
and
pop
test
add
dec
jae
shlb
mov
and
imul
inc
and
les
jns
sbb
mov
andb
lahf
xor
jae
out
in
mov
pop
jae
test
jle
pop
sub
pushf
shr
rclb
cwtl
mov
dec
cmpsb
and
mov
mov
push
inc
push
outsl
mov
adc
pop
inc
imul
arpl
outsb
dec
jns
pop
and
fs
stos
xor
and
xorl
daa
or
je
insl
sub
cmc
inc
fwait
enter
dec
dec
movsl
xor
jmp
push
pop
sahf
jne
add
lret
mov
test
pop
mulb
ret
lea
add
add
jg
hlt
mov
ljmp
xchg
mov
movsb
pop
mov
sbb
cmp
lahf
dec
lret
cwtl
sbb
mov
xchg
dec
jns
jo
push
lcall
jmp
movsb
xchg
test
cwtl
stos
mov
loopne
jb
jbe
mov
fs
xchg
pop
xor
je
and
xor
ds
stos
dec
lret
adc
jl
jb
movsl
aaa
xchg
or
fnstsw
push
xchg
jecxz
pop
out
inc
out
daa
lods
xor
js
jl
pop
imul
pusha
cmpsb
gs
xchg
repnz
push
xchg
or
or
push
xchg
jmp
pop
add
int3
mov
push
sahf
icebp
adc
and
add
jae
fsubl
loop
and
add
xor
pop
icebp
repz
inc
decl
sub
mov
outsb
test
in
lret
bound
cmpsl
stc
test
jge
scas
lods
add
mov
loopne
arpl
into
pop
adc
nop
mov
xor
and
push
in
repnz
test
mov
dec
mov
jb
or
sub
push
cmp
pop
call
test
ficoml
movl
inc
adc
xor
pop
repz
jb
jae
iret
call
add
jmp
jge
imul
pop
movsb
cmp
outsl
icebp
sub
fsubrl
pop
fnstsw
rcrl
pop
cwtl
mov
xor
std
mov
fbstp
imul
repnz
mov
scas
out
test
dec
mov
sbbl
iret
es
mov
mov
aam
test
mov
frstor
push
jg
ret
shl
mov
pop
sbb
test
push
inc
inc
std
dec
scas
repz
jne
and
jb
inc
leave
or
push
out
push
je
inc
sbb
mov
mov
arpl
lods
js
rcrl
dec
adc
scas
jae
pop
outsb
test
pushf
loop
daa
add
cli
outsl
push
sub
lods
js
add
adcb
or
lods
roll
inc
and
ucomiss
mov
enter
ret
ror
jne
mov
sub
mov
sub
mov
popf
hlt
mov
push
pop
push
movsl
es
cmp
pop
jno
push
ret
fcomps
sub
pop
add
xchg
add
mov
push
sbb
mov
sbb
jp
push
lcall
test
mov
sub
inc
push
stos
mov
dec
jns
or
mov
push
pop
scas
and
insl
or
cmp
adc
in
sub
xchg
mov
lds
mov
lret
ds
pop
repz
sbb
sub
xchg
movsl
jl
inc
out
cmpsl
out
lcall
and
cmp
jne
mov
add
stos
xchg
leave
sub
mov
mov
sub
mov
insb
sbb
push
es
adcl
adc
cli
xchg
inc
aaa
push
push
imul
xchg
xor
and
sbb
outsb
lock
fcomps
inc
je
sbb
cmp
mov
xchg
jp
xor
enter
xor
push
jmp
push
out
stos
ret
mov
lock
neg
mov
jo
inc
adc
jbe
add
jno
mov
int
mov
add
xor
mov
and
xchg
mov
sbb
lds
ds
shrb
hlt
mov
mov
or
adc
sahf
mov
mov
mov
jnp
inc
or
push
pushf
lods
xchg
add
adc
mov
xchg
addr16
fstl
cwtl
inc
incb
inc
fldt
push
movsl
xchg
cmp
pop
or
aam
lcall
in
enter
loop
stos
and
mov
mov
dec
js
mov
xchg
hlt
jne
sarl
jno
imul
js
dec
iret
dec
popa
pop
add
dec
pop
add
dec
cmpsb
lock
aas
mulb
popf
aas
cld
or
in
repz
push
insl
push
mov
sbb
test
pusha
sahf
out
into
shll
lea
mov
test
loopne
loopne,pn
cmp
repnz
inc
fcomps
in
dec
loope
jbe
sub
sti
and
adc
push
idiv
jb
cmp
xor
and
movsl
in
outsl
adc
lock
mov
dec
loope
int3
mov
sub
pop
mov
out
insb
lds
jo
test
adc
mov
lods
push
sub
cmp
popa
cmpb
sbb
ds
pusha
xchg
stos
mov
mov
stos
stos
dec
rcr
xchg
push
push
cmp
xchg
sbb
sbb
xor
iret
xor
push
ja
lret
push
repnz
xchg
sub
adc
dec
ret
dec
push
in
xor
xor
push
icebp
or
arpl
cli
jne
fsubr
gs
mov
inc
pusha
sarb
push
popf
and
mov
dec
int
scas
jo
cmp
pop
jae
pushf
pop
jae
pop
ss
add
mov
inc
int3
xor
mov
jns
testl
pop
shrl
xchg
out
jnp
into
xor
in
cmp
cmp
pop
mov
dec
iret
xchg
push
sbb
and
inc
cmpl
or
inc
xchg
and
sub
and
mov
lahf
push
push
xor
shl
pop
cmp
add
push
cmp
push
iret
push
bound
cltd
pushf
push
int
jb
sahf
stos
and
daa
dec
xor
scas
push
popf
dec
cmp
ret
pop
mov
stos
or
inc
stc
icebp
addr16
and
adc
stos
ja
lahf
lods
and
test
fisubl
imul
out
push
mov
adc
mov
fbstp
push
ret
test
sbb
pushf
outsb
inc
jecxz
mov
clc
add
call
sti
ss
sahf
jnp
addb
add
mov
fsubrl
dec
movsb
sbb
sub
es
cmp
mov
inc
lods
inc
js
jo
push
dec
mov
push
and
es
xchg
inc
and
lret
lods
and
rolb
mulb
fprem1
mov
inc
dec
pushf
and
leave
inc
bound
scas
test
mov
jecxz
sub
js
cmpsb
cmp
mov
les
mov
jmp
inc
mov
mov
lock
pushf
xor
sub
fmull
mov
lods
jecxz
lds
lods
push
sub
jnp
pusha
fmull
mov
push
jle
mov
ja
repnz
stos
adc
lds
divb
imulb
test
or
adc
sbb
jecxz
jnp
lret
repz
in
inc
mov
dec
pop
dec
inc
shl
mov
mov
lods
rorl
or
jg
pop
lahf
xor
jp
or
mov
push
movsl
mov
cmpsl
push
or
mov
sarb
add
into
shll
sbb
mov
dec
lods
dec
fsubrl
mov
outsb
loope
test
enter
lret
and
cli
mov
mov
and
into
add
xor
or
push
mov
add
adcl
xchg
or
xchg
cld
sub
dec
hlt
repnz
jbe
ljmp
xchg
lret
cmp
jbe
iret
mov
in
std
pop
sti
les
std
xchg
testb
mov
je
jb
xlat
mov
imul
mov
jecxz
mov
xor
push
inc
pop
mov
pop
push
pop
ds
cwtl
jmp
sub
pop
adc
add
or
sub
jecxz
pop
in
call
add
sub
mov
repnz
sarl
push
mov
sarl
and
das
adc
inc
xor
sub
flds
mov
jge
dec
cmp
jb
icebp
test
or
sahf
cmp
sub
mov
lock
and
cmp
add
add
lods
lock
inc
jae
or
pop
xchg
or
ljmp
sbb
cld
test
xor
inc
call
cmc
add
xor
das
adc
push
mov
lret
jl
lock
shll
roll
mov
sahf
inc
nop
sub
pop
push
cmp
fsub
cmpsl
mov
cmp
adc
inc
nop
mov
dec
pop
or
nop
pop
xor
fisubl
dec
cs
inc
adc
shll
sub
pop
mov
sbb
dec
movsl
cmp
xor
jne
inc
xor
dec
jbe
push
adc
pop
dec
add
fistl
mov
jne
xchg
aad
pop
inc
mov
in
outsb
sahf
jne
mov
adcl
in
sbb
xchg
xchg
jecxz
ficoms
mov
dec
mov
mov
mov
adc
fisubs
pop
mov
and
fninit
mov
mov
push
mov
jns
rcrb
insb
cld
mov
outsl
pop
ret
cmp
daa
sub
es
dec
push
add
push
jo
sbb
out
mov
mov
push
lods
xor
push
dec
xor
cmpsl
les
jno
mov
cmp
out
xor
inc
add
int
sbb
lds
cmpsb
test
push
mov
dec
es
loop
imul
xor
jns
mov
sbb
mov
sbb
fsubrs
ss
lods
pop
out
int
cmpsb
fdivs
sti
out
ret
dec
notl
sbb
xchg
sbb
in
inc
add
movsl
jl
and
jl
mov
cmpsl
cmp
outsl
sub
jnp
lea
and
lds
add
rcrb
mov
sbb
xchg
pop
loope
xchg
mov
jns
pushf
xchg
adc
push
mov
imul
repz
sub
lret
or
cmp
pop
ds
out
test
cmc
icebp
cmp
icebp
xor
mov
mov
sti
mov
ljmp
ss
jb
cs
cmc
xchg
in
adc
inc
or
pop
jae
mov
jp
xor
out
fbstp
add
dec
mov
xor
cltd
jmp
sub
or
push
daa
hlt
testb
stc
adc
sub
call
xor
mov
into
push
add
scas
rolb
push
loope
shll
ljmp
ja
and
jmp
fwait
xchg
das
mov
add
bound
mov
popf
adc
cmp
addr16
mov
loope
mov
mov
lcall
cld
js
andb
inc
pusha
repnz
sub
add
pop
cmp
push
push
pop
mov
mov
lret
sbb
sub
sub
lret
jne
popf
in
dec
std
push
nopl
mov
insb
dec
shrl
mov
aad
add
dec
fxch
sbb
in
or
xchg
cs
movsb
push
jl
iret
mov
ja
rclb
je
je
adc
push
sbb
xor
dec
loop
sahf
out
cmp
and
pusha
clc
mov
push
daa
aas
sarb
sub
xor
nop
or
cmp
sub
cmp
sahf
mov
jl
xchg
scas
int
lock
ret
push
mov
mov
sub
xlat
lods
inc
or
mov
pop
clc
dec
pop
sbb
push
fsubrs
fadd
sahf
sub
insl
and
sbb
hlt
adc
cmp
pop
daa
movsb
fildll
movb
mov
sbb
mov
ss
daa
add
movsb
clc
push
repnz
addb
data16
and
or
aaa
bound
outsl
and
dec
xchg
nop
xor
shrb
pop
sar
xchg
jle
xchg
sub
cmc
sub
lock
dec
loop
je
push
mov
add
setge
mov
in
xchg
or
mov
sub
dec
loopne
shlb
add
push
ret
cwtl
gs
xchg
sahf
dec
into
outsb
push
sbb
add
insl
jge
and
aas
aas
rolb
ds
bound
add
fidivl
and
cmp
adcb
in
cs
in
mov
pop
sbb
test
int3
jmp
jle
in
fisttpl
js
lods
inc
jns
jnp
rcrl
in
lcall
int3
xor
inc
outsl
daa
jmp
stc
pop
jge
xor
jnp
pop
inc
and
fbld
gs
xchg
push
mov
xchg
mov
cmc
sbb
or
cmp
pop
lods
inc
xlat
and
cmc
jae
rorb
inc
jl
jbe
mov
mov
fdivr
push
aas
js
mov
stc
dec
and
dec
mov
stc
cmc
in
out
lods
push
fidivl
push
push
loopne
leave
clc
in
ljmp
or
mov
xor
out
xchg
shrb
pop
imul
in
mov
testb
negl
pusha
adc
std
rolb
mov
clc
pminsw
jb,pn
movsb
xchg
mov
mov
mov
jmp
mov
pop
push
js
jp
popf
cmpsb
aam
hlt
inc
lds
outsb
sbbl
fbld
rcr
sbb
push
jns
mov
in
ret
loope
stc
add
dec
pop
xlat
jecxz
iret
lock
lret
test
push
or
fwait
and
int3
neg
mov
sahf
and
cmp
pop
pop
popf
stos
in
iret
adc
push
add
loop
pop
dec
xor
pop
jecxz
and
add
int3
sub
loopne
arpl
and
jbe
xor
cmp
xchg
mov
adc
ret
mov
jp
mov
fs
pop
aad
xchg
dec
movsl
cs
out
xor
dec
decl
sti
pop
push
push
jecxz
push
call
jl
push
dec
lods
fwait
out
fistps
sub
scas
sub
insb
mov
inc
ljmp
dec
into
sub
dec
lods
mov
test
lea
das
mov
mov
jge
mov
cmp
cld
or
fwait
ret
pop
int
and
mov
loope
cmpsl
pop
test
mov
mov
pop
push
adc
mov
bnd
sub
pop
or
fidivs
inc
insb
jmp
roll
dec
xchg
cwtl
aam
lret
imul
mov
xchg
inc
cmpl
jne
xchg
cmpsl
push
mov
les
push
cld
in
cmp
pop
popf
sub
repnz
push
cmp
pop
das
cmp
arpl
sbb
ds
shr
call
push
into
and
bound
mov
popf
inc
inc
in
test
mov
pop
in
pusha
push
shrb
jbe
test
add
and
pop
cmp
xor
sti
adcl
mov
cmp
sub
mov
outsl
push
push
jns
add
es
xor
inc
enter
lahf
das
mov
dec
out
pusha
cmp
jne
mov
sbb
in
leave
pop
aaa
sbb
xor
or
ss
lret
mov
in
push
in
mov
imul
xchg
popa
out
mov
and
movsl
xlat
es
leave
test
movsl
pop
addr16
addr16
scas
lea
cs
lret
mov
cs
sar
pop
ss
xchg
jp
out
scas
orb
or
push
mov
push
loop
jg
push
mov
insl
int
shrl
in
dec
push
dec
push
jo
pop
or
dec
movsb
clc
jle
lock
xchg
cmc
push
or
out
pop
repz
push
out
popf
and
in
jge
cmp
ss
push
mov
xor
ds
mov
sbb
pop
insl
sti
adc
or
xchg
sub
in
dec
inc
mov
js
push
mov
fwait
aam
sub
in
jnp
lret
das
mov
inc
scas
inc
pop
xchg
sbb
lods
lods
faddl
cmp
mov
enter
and
mov
xor
aaa
dec
movsb
out
outsb
ljmp
fcmovnu
mov
es
lret
dec
sub
jnp
clc
sub
pop
sub
mov
scas
mov
sbb
jae
and
mov
ret
add
cli
inc
xchg
and
fstpt
jnp
mov
fimuls
in
insb
outsl
shrl
idivl
mov
sbb
sub
push
or
mov
in
add
sub
mov
xchg
inc
std
mull
js
jecxz
add
cmp
scas
hlt
mov
sbb
mov
stos
in
ljmp
insb
cs
lock
incl
add
and
sub
leave
push
add
pop
ret
or
push
xchg
inc
lock
sub
fdivl
iret
popa
add
inc
jno
fsubp
xchg
icebp
xchg
adc
movsl
mov
cmp
leave
push
or
or
push
inc
frstor
outsl
rolb
adc
clc
xor
ss
pop
cli
push
xor
sub
out
aam
mov
cmpl
push
call
mov
add
stc
sbb
cmp
cmp
xor
push
outsl
rclb
cmp
imul
pop
pop
movb
cmp
jmp
insl
mov
mov
popa
aad
sbb
sti
rolb
jp
adc
int
add
mov
or
rclb
pop
add
leave
test
push
xchg
sbb
test
bound
push
inc
aad
icebp
into
sub
fmuls
add
jne
fs
addr16
movsb
insl
test
push
andl
inc
sub
xor
inc
fiadds
outsb
ja
sbb
ja
push
mov
cmp
cmp
mov
xchg
push
js
inc
enter
mov
lock
int3
fs
mov
in
sub
adc
xchg
jecxz
fisttpl
idivl
cmpsb
daa
ds
or
test
jne
pop
fisubs
and
sar
mov
push
bound
inc
leave
xchg
inc
loopne
es
nop
sub
xor
mov
mov
push
stc
bound
or
mov
xchg
arpl
adc
scas
mov
inc
loopne
movsb
mov
mov
or
jge
mov
addl
hlt
push
loope
adc
neg
arpl
outsl
jmp
adc
mov
fld
push
lods
jp
test
adc
xchg
sti
scas
call
fstpl
je
mov
or
cs
mov
sahf
out
fyl2xp1
adc
push
mov
xor
jo
dec
out
js
in
mov
lahf
call
push
or
mov
jb
push
push
rcll
jbe
mov
pop
mov
in
jl
cs
sbb
mov
or
mov
add
mov
cmp
mov
push
jnp
xlat
push
xchg
pop
xor
mov
test
push
imul
cmp
cltd
cs
loopne
std
repnz
xor
out
cmp
and
pop
je
js
shrb
test
call
outsl
sbb
adc
lds
mov
in
jecxz
lods
cmp
insb
scas
push
scas
or
mov
mov
enter
cmp
popf
mov
pop
sbb
ja
adc
sahf
mov
and
aas
or
leave
add
xchg
bound
test
cmp
mov
and
je
sub
pop
jle
sbb
xchg
and
lahf
arpl
adc
mov
and
daa
add
pop
pop
cmpsl
out
sarl
pop
push
loope
loopne
push
sbb
and
mov
xor
add
mov
int3
add
rclb
xor
cwtl
adc
ret
xchg
sub
mov
test
inc
or
lea
sub
add
ret
mov
cmc
xchg
xlat
mov
aad
shll
jnp
in
or
jns
ds
push
xchg
cld
lcall
cs
add
mov
xlat
cmpsb
xor
cld
shr
lods
jmp
jle
arpl
arpl
xor
xor
push
jge
xchg
and
dec
xchg
outsb
fisttpl
xchg
cmp
push
repnz
lock
push
adc
outsl
stos
test
xor
lret
mov
cmp
sub
xchg
movsb
mov
adcb
insl
loopne
andb
mov
inc
cmp
test
xchg
call
pusha
push
inc
arpl
xchg
das
aaa
stos
test
in
insb
ljmp
sbb
mov
mov
insb
sbb
lea
sbb
loope
ja
sbb
jns
jg
sbbl
incl
pop
sub
jae
xchg
mov
inc
mov
adc
mov
add
out
loopne
mov
and
jg
adc
out
add
pop
ret
sub
outsb
in
dec
fcompl
and
inc
cmp
push
icebp
ficomps
xor
jecxz
inc
cmp
in
out
xchg
dec
and
lahf
jl
stos
lea
negl
insl
shlb
aaa
jne
das
sbb
leave
pop
pusha
imul
scas
lock
fdivl
add
push
mov
fisubs
out
repnz
xor
xor
pop
insl
sub
mov
sbb
and
pop
arpl
add
xchg
xchg
ss
cmp
fidivs
add
scas
dec
test
decl
and
and
and
fiaddl
ds
fnsave
nop
mov
push
sbb
popf
push
or
adc
add
sub
shll
xor
adc
fbld
jp
enter
imul
inc
dec
xchg
es
jp
xchg
add
sbb
pop
int3
cmpl
push
shrb
adc
insl
sub
cli
pop
insl
mov
pop
dec
cmp
das
movl
ret
cmpsl
aad
int
add
jo
push
mov
shl
xor
cwtl
in
mov
outsl
stc
cmp
js
decb
mov
xchg
dec
xchg
pop
jo
inc
cmp
dec
loop
sbb
jecxz
dec
lcall
mov
jo
pop
and
and
ljmp
cmp
xchg
mov
lds
push
iret
arpl
into
hlt
mov
pop
or
loope
fsubr
pop
inc
xchg
frstor
jge
ss
jg
push
subl
push
mov
and
mov
cmp
int
push
loop
imul
movsl
pop
inc
push
fnstcw
lret
pop
nop
out
pop
or
push
inc
pop
fsts
inc
nop
lds
mov
or
in
insl
xor
mov
hlt
nop
imul
pop
lea
cmp
daa
out
stos
rorl
adc
je
push
inc
es
cmp
xchg
cmp
push
jbe
fcomps
arpl
xchg
andb
les
pop
adc
mov
in
xor
or
insl
ret
fsubp
test
pop
sub
orb
aam
mov
pop
and
stc
popf
call
fidivl
lods
orl
lcall
int3
mov
aas
dec
sbb
jp
pusha
nop
inc
test
push
xchg
or
out
fsubrs
sbb
jle
mov
pop
icebp
mov
jl
inc
and
xchg
aaa
loope
and
jge
je
jecxz
pop
call
sub
hlt
adc
shll
popf
xlat
add
cmp
lahf
popf
and
bound
lcall
incl
mov
aam
and
outsb
sub
ja
cmp
mov
addr16
mov
js
lods
addr16
cld
push
lods
pop
sbb
test
and
mov
xchg
rol
jno
cmp
fdivs
popf
push
stc
push
out
xchg
mov
cltd
divl
sub
inc
and
lcall
insb
or
mov
test
test
and
mov
jns
aam
pop
fwait
push
in
inc
mov
xchg
mov
jecxz
jae
cmpsb
jge
popa
das
lods
outsb
inc
jnp
xorb
and
mov
push
sub
jo
push
dec
aad
loop
jne
iret
repnz
add
inc
in
jge
bound
jmp
mov
xlat
lret
xlat
or
out
xchg
dec
sbb
lcall
nop
movsl
cwtl
jns
cltd
insl
out
jnp
es
loope
aad
in
outsl
dec
fst
sbb
dec
lcall
dec
xchg
in
lret
insb
mov
enter
jle
sahf
adc
inc
push
adc
or
mov
into
or
enter
popf
lods
push
and
rolb
sbb
daa
or
push
inc
adc
punpckhwd
inc
xlat
lahf
ret
xchg
imul
loopne
mov
cmp
jecxz
inc
pop
hlt
mov
inc
inc
jo
jge
aam
adcb
es
movsb
dec
adc
lss
dec
arpl
cmp
out
mov
adc
rcr
mov
iret
es
outsl
mov
inc
pop
dec
cmp
fnstenv
pop
push
and
movsl
cmc
xor
movl
loop
and
out
cmp
popf
dec
lret
jle
and
mov
adc
sti
xchg
enter
xor
mov
xchg
pushf
stos
enter
or
addl
rclb
pop
xchg
xchg
xor
mov
mov
popa
cmp
pop
call
ret
repnz
push
out
inc
and
rcrb
orb
inc
decb
notl
jbe
pop
push
je
pop
add
sti
mov
mov
xor
push
dec
lcall
nop
jae
flds
jb
add
xchg
ficoml
adc
cmc
add
inc
adc
pop
je
jno
notb
dec
add
xorb
mov
cmc
xor
shl
jo
push
scas
jno
out
mov
push
rcrl
ret
es
jno
and
test
lea
xchg
fcmove
xor
jp
out
insl
jnp
push
js
je
mov
jbe
aas
dec
mov
rclb
vmwrite
and
cmp
popf
shll
xor
fistps
sti
pop
push
cld
repz
cwtl
inc
popf
rolb
adc
adc
inc
dec
xor
cmp
sub
inc
out
xor
mov
or
pop
pop
mul
ds
pop
sub
mov
test
movb
dec
enter
std
xor
jae
pop
adcb
jl
test
sahf
je
aas
sub
lods
mov
push
add
jge
gs
and
out
dec
jmp
in
push
shld
out
ficoms
test
dec
int3
arpl
ja
push
test
stc
mov
and
inc
jmp
or
xchg
cltd
std
fwait
cmpsl
pop
jb
jl
xchg
scas
icebp
push
test
inc
movsb
jne
xor
inc
jb
mov
cmp
pusha
mov
cmpsl
cmp
adc
call
ret
or
inc
or
mov
jge
pop
fld
cmp
ss
fiaddl
lcall
and
test
sbb
pop
add
leave
push
ds
filds
movsb
data16
fmull
stc
push
dec
or
test
cmpsl
pop
out
dec
pusha
inc
ret
enter
mov
stos
addr16
jno
inc
test
push
and
fidivl
les
ret
mov
or
loope
fsubr
aas
cs
icebp
adc
dec
or
je
aad
gs
and
lahf
lahf
add
jmp
in
jo
mov
shll
leave
fsts
mov
sub
lock
jne
and
push
cwtl
mov
out
pop
in
push
cmp
or
sbb
jns
or
mov
loopne
mov
bound
sbb
adc
xchg
nop
cmc
and
jb
mov
dec
xchg
push
jne
insb
mov
jp
or
and
sbb
lea
mov
and
cld
fistl
and
mov
jge
int
dec
adc
or
push
xchg
adc
dec
adc
sbbb
sti
out
sub
mov
test
xor
push
outsl
es
inc
jo
and
cs
add
pop
push
cmp
pop
dec
movsb
or
movsb
loopne
stc
mov
ljmp
rorl
int
mov
push
push
inc
cmp
jae
lret
mov
in
std
jno
mov
xchg
push
sub
jbe
fisubl
stc
daa
lcall
inc
fsub
in
test
sahf
jle
mov
decl
and
push
ljmp
ljmp
inc
xchg
and
fprem1
aas
mov
mov
divl
lcall
loope
sbb
inc
pushf
loopne
add
loope
inc
out
sti
adc
xor
arpl
ss
repz
jae
push
mov
rcrl
sub
inc
add
fimuls
adc
fcoml
cmp
js
mov
pop
inc
xchg
dec
pop
out
cmpsb
mov
jle
lret
cld
mov
dec
into
stc
pushf
dec
out
xchg
jg
std
loop
cmp
lds
pop
pop
rorb
scas
cli
add
xor
jecxz
clc
cli
add
sbb
mov
jne
ss
leave
push
rol
pop
push
mov
insb
pushf
cwtl
dec
inc
dec
add
push
pop
aam
jp
mov
data16
mov
jecxz
ss
add
dec
aad
aas
test
jmp
cmp
add
xchg
sbb
das
rolb
cmpl
mov
jbe
cmpsb
stos
int3
mov
dec
mov
lods
inc
rorl
sub
mov
cmp
leave
mov
je
shll
je
cld
mov
les
std
jne
cmp
test
loop
fcomps
std
fsubrl
mov
inc
add
xchg
sbb
aam
push
or
xor
mov
cmc
xchg
sub
push
cmc
xchg
loopne
mull
dec
rorb
pop
pop
cmpsl
xor
outsb
imul
jmp
addr16
and
out
jge
push
add
sub
lcall
insl
sbb
sub
cmp
lds
lret
pop
sbb
push
call
je
outsl
ret
push
mov
mov
jnp
pushf
in
inc
mov
lcall
inc
mov
cli
mov
js
lcall
mov
out
pusha
sbb
xchg
sub
inc
repnz
jg
mov
cmp
lcall
out
cwtl
xor
dec
and
mov
imul
call
pop
and
lods
ss
adc
sub
or
or
out
mov
push
xor
int3
iret
jb
test
pop
test
fldcw
arpl
imul
pop
ds
mov
loopne
adc
test
cwtl
fnsave
lods
cli
inc
fisubrl
fistps
sub
fcoms
ss
push
movsl
in
mov
mov
punpckhdq
rcrb
leave
pop
in
push
adcb
cmc
xchg
pop
jb
cld
cmp
imul
out
inc
mov
iret
in
outsb
or
xchg
xor
movb
daa
adcb
lock
sarl
mov
in
push
sbb
or
fidivl
mov
enter
or
cmp
aad
ret
dec
in
and
pop
imul
fistpl
jmp
pop
incl
mov
and
jo
pop
inc
clc
je
clc
push
lds
dec
mov
cltd
mov
jl
dec
push
les
adc
mov
dec
test
pop
scas
aaa
cmpsb
rcrl
aad
add
movsl
scas
sub
aas
xor
mov
popf
xor
mov
aad
cwtl
das
addr16
outsl
xor
sahf
mov
das
inc
aad
fimuls
mov
or
insb
pusha
sbb
push
mov
add
fcomps
and
and
imul
mov
lret
adc
and
lret
cwtl
jbe
inc
cwtl
frstor
rol
aam
mov
cmp
xor
mov
imul
mov
ret
add
rcll
xchg
dec
xor
hlt
mov
pop
mov
mov
and
fs
and
stos
mov
xchg
mov
add
rcrb
dec
and
insl
or
sbb
std
insl
add
cmp
hlt
hlt
lcall
scas
push
test
int3
xor
testl
movsl
sub
pop
icebp
lods
dec
insb
out
fwait
or
lods
pop
call
data16
push
inc
pop
test
and
pop
addr16
push
jecxz
inc
sbb
push
cmp
mov
mov
fdivrs
sbb
push
add
ljmp
fldt
xchg
mov
push
jle
inc
arpl
sahf
adc
push
push
aas
in
insl
scas
xor
adc
mov
jbe
xchg
in
in
xlat
pusha
pop
adc
mov
frstor
push
adc
fwait
popf
push
movsl
icebp
call
cmp
mov
cmp
pop
inc
sbb
loope
js
or
mov
or
push
scas
call
or
mov
sub
imul
fsubrl
icebp
arpl
lret
addr16
jo
xchg
sbb
inc
mov
pop
loope
push
out
aad
test
shll
shll
inc
roll
test
cmc
jno
stc
mov
mov
push
jnp
push
imul
sbb
pop
scas
aaa
mov
mov
mov
ja
test
js
shrl
hlt
mov
es
leave
and
test
lcall
inc
pop
push
out
movsb
repnz
rolb
ss
das
jmp
push
lea
cmpsb
imulb
sahf
or
das
mov
insl
mov
mov
mov
xorb
pop
sub
sub
addr16
mov
push
orl
in
js
inc
push
jecxz
mov
xor
fdivrl
push
add
sbb
or
frstor
xchg
rcll
push
add
les
mov
jnp
cmp
test
sub
dec
mov
sbb
decb
xor
mov
inc
dec
mov
sub
pop
pop
loope
repnz
cs
cli
inc
push
lea
and
pop
enter
mov
and
lret
leave
or
fstpl
fmuls
outsb
jp
ret
sub
push
sbb
push
scas
inc
sub
loop
sbb
lret
add
push
push
mov
imul
clc
in
daa
mov
fsubrs
jp
popf
mov
movsl
lcall
mov
lcall
dec
cld
xchg
cmp
and
jmp
or
push
loope
pop
lcall
sbbb
mov
adc
shll
enter
xor
imul
pop
leave
push
lahf
push
or
and
xor
movsl
out
test
repz
sahf
aam
daa
and
dec
and
push
js
xchg
cmp
enter
lret
fs
cwtl
push
adc
gs
out
cmpsl
aaa
xchg
lret
lcall
enter
xlat
outsl
inc
test
shrb
pop
ss
test
xor
dec
test
xchg
lcall
inc
rcrb
sub
int
test
ret
xlat
stos
leave
cmc
mov
scas
cli
mov
in
sub
into
shr
xchg
pop
lock
dec
dec
scas
jle
ja
push
push
sub
outsl
mov
push
xor
mov
push
mov
push
push
and
lret
jns
push
mov
xchg
insl
inc
pop
fucom
fcomi
mov
stc
shld
mov
pop
add
daa
lea
lods
pop
lea
into
stos
bound
lea
cli
mov
add
test
mov
xchg
sub
jg
pop
stos
scas
fstp
clc
mov
nop
pop
repnz
jae
push
lods
or
int
pop
stos
mov
and
and
mov
add
xor
adc
shll
sbbb
mov
cmp
mov
in
fstps
inc
mov
into
dec
testl
pusha
and
dec
filds
ret
pop
pop
xor
sub
sub
push
pop
jge
add
cmc
movsl
cmp
pop
ds
jp
ret
jg
dec
es
loope
add
je
jecxz
imul
aaa
fldcw
xchg
pop
and
lock
faddl
adc
xor
fiadds
shr
and
fstl
out
ds
repnz
and
pop
scas
rep
jb
in
ja
mov
cmp
jp
lods
pop
iret
loope
add
jbe
add
adc
or
push
js
push
mov
mov
add
xchg
mov
inc
push
mov
mov
jnp
aaa
pushf
jle
cmpsb
xchg
or
popf
jp
outsb
fisubl
test
inc
cwtl
mov
mov
mov
dec
fmul
mov
mov
jnp
and
call
or
push
dec
pusha
pop
shlb
push
cld
imul
ret
push
mov
mov
sub
js
push
lods
pop
in
mov
stos
push
lret
push
sub
mov
push
add
sbb
ds
jno
push
pop
mov
sub
std
add
push
xor
in
popa
xor
stos
inc
lahf
loopne
or
mov
inc
pop
mulb
inc
mov
mov
int
sbb
mov
sub
xchg
adc
jle
ret
mov
dec
inc
imul
dec
xchg
bound
rorb
imul
push
mov
mov
rorb
sub
sub
daa
push
or
shrl
cmpsl
divl
sahf
lock
dec
push
dec
dec
inc
jle
shrb
jnp
gs
icebp
mov
or
cmpsl
sub
adc
hlt
fistpll
jle
into
and
mov
repz
add
scas
push
or
icebp
xor
inc
outsl
mov
inc
pushf
fisttpll
and
xor
xchg
fimull
jle
fmull
add
xor
inc
subl
xor
in
movsb
jecxz
mov
mov
and
mov
sub
sub
or
cmc
mov
rcll
in
fstpt
jbe
jnp
movsb
stos
fsts
mov
stos
ret
xor
ret
fs
fs
fimuls
test
mov
dec
dec
imul
jne
push
inc
arpl
inc
sbb
fucomip
jle
or
lret
push
dec
add
out
adc
mov
sbb
push
lahf
cmp
je
cmp
cs
clc
fstl
in
adc
cmp
ret
cmc
movsl
cld
mov
repnz
mov
fcomi
call
and
in
test
inc
or
xchg
cmp
push
jbe
jge
sub
mov
xchg
dec
loop
inc
jb
xchg
xchg
movsb
jecxz
mov
dec
jl
leave
jecxz
fstl
push
mov
jns
xor
lahf
sbb
aaa
aas
repz
outsb
shll
add
enter
hlt
mov
fnstsw
mov
pandn
adc
push
jne
and
mov
pop
test
subb
lcall
push
jle
imul
push
add
sahf
scas
add
fnsave
popa
idivl
fdivrl
cmc
jmp
or
idivb
push
sbb
push
add
xor
mov
fldcw
adc
or
jmp
xor
add
push
lods
pop
dec
fwait
mov
movb
add
xchg
mov
rcrb
cmp
cld
cmpsb
xchg
dec
mov
push
je
dec
inc
fwait
xchg
rorb
repnz
jmp
jge
jo
mov
loopne
inc
xchg
ja
xor
js
xlat
loopne
mov
adc
dec
cs
and
and
ja
jnp
cmpb
pop
ja
nop
clc
inc
lods
movsb
lret
and
nopl
pop
xor
mov
push
mov
bnd
inc
or
imul
add
or
gs
call
loope
outsl
push
mov
add
adc
stos
stos
inc
fstpl
not
sub
pop
scas
pop
movsb
xchg
rep
lret
loop
jne
push
ljmp
jno
clc
add
cmp
out
out
repnz
xchg
sbb
lahf
loopne
sub
fdivl
into
cmpxchg
jne
lret
xchg
jo
jne
mov
xor
jno
inc
mov
xchg
jecxz
mov
addr16
add
rol
push
ljmp
jno
mov
jge
or
jae
cmp
add
pop
ja
call
mulb
stos
inc
dec
clc
sbb
ror
jne
and
enter
and
and
xchg
cs
clc
pusha
lock
jae
sbb
mov
adc
test
xchg
mov
sub
cld
xlat
cmp
lcall
je
loop
fwait
cmp
fs
shrl
aaa
add
jge
xor
lea
cmp
dec
jge
adc
dec
adc
sbb
iret
lds
or
sbb
int
scas
mov
sub
inc
push
stc
xchg
xor
inc
pop
out
sbb
nop
aas
insb
mov
add
cmp
testl
faddl
adc
or
xor
dec
cmp
pop
icebp
jp
fsubrs
ljmp
cmp
adc
adc
lahf
mov
shrl
cmp
mov
add
lea
cltd
or
shlb
xchg
repz
mov
out
adc
int
xor
mov
inc
fidivs
xor
dec
push
cmp
dec
dec
mov
lods
lret
int3
in
dec
push
in
jns
movsb
mov
in
inc
into
gs
mov
jnp
dec
aaa
or
cmp
aam
rolb
iret
les
clc
push
xchg
sub
dec
xchg
jmp
movsb
jle
fldcw
stos
pop
xor
cld
cmc
mov
cld
dec
sbb
xor
add
cld
movaps
out
xchg
jnp
and
inc
push
mov
push
inc
cmpsl
mov
jns
pusha
cmp
daa
jno
lock
add
psrad
rclb
inc
mov
jbe
cmpsb
lock
sahf
cld
lcall
cli
lea
add
mov
lea
adc
push
sbb
sbb
insb
jl
nop
push
xor
or
push
cmp
mov
rcr
mov
or
repz
inc
ret
jecxz
imul
loopne
loopne
nop
imul
arpl
sbb
mov
imul
fsubrl
push
sbb
add
mov
dec
pop
xchg
sbb
imul
lods
bound
mov
in
dec
ret
hlt
jo
and
inc
shrl
push
data16
cmp
push
loop
int3
loop
clc
testl
sub
scas
ja
out
xor
or
inc
cltd
stos
and
xchg
or
das
incl
xchg
jmp
xchg
loopne
pusha
rorl
cli
out
mov
dec
mov
hlt
jno
cwtl
sub
add
jp
repz
test
leave
push
ljmp
jno
xchg
icebp
fwait
push
cmpsl
cmp
insb
xchg
insb
adc
aaa
hlt
dec
mov
mov
in
add
addr16
pop
out
test
inc
mov
sbb
cwtl
dec
mov
and
sbb
inc
push
xlat
push
xchg
or
enter
jns
fwait
aam
xchg
repnz
inc
sarb
fadd
sahf
lods
outsl
inc
push
call
pop
push
lret
icebp
xchg
cmp
cltd
stos
inc
notl
js
dec
sbb
and
jno
aas
mov
pop
cmp
fs
mov
test
add
out
test
rolb
mov
int
mov
push
stos
inc
dec
mov
call
jge
daa
xor
lea
inc
and
addl
cld
inc
push
xor
xchg
pop
testb
or
popa
jge
rclb
sbb
mov
mov
sahf
sub
xor
and
repnz
mov
lret
popa
test
lret
call
push
jae
mov
jnp
movsl
neg
mov
add
mov
push
xchg
xor
sbb
test
jg
pop
xchg
mov
sub
mov
roll
dec
call
insb
pop
mov
popa
notl
mov
aad
xor
pop
hlt
dec
sarl
push
sbb
popf
xor
inc
pop
sub
shr
ficompl
stos
jmp
aas
out
push
mov
aad
cld
pushf
fnsave
stc
clc
in
adc
inc
xchg
add
mov
or
loop
jno
in
aas
and
stc
push
test
js
outsb
stos
dec
dec
dec
dec
nop
hlt
mov
mov
insb
das
fwait
popa
popa
lea
xchg
lret
jno
mov
ds
sarb
outsl
shll
mov
or
cmp
cmc
xchg
sub
lock
mov
xor
push
cli
adc
pinsrw
repnz
aam
mov
pop
pop
popf
hlt
or
xchg
testl
or
cwtl
xor
lahf
fstl
movsl
mov
jb
cmp
loope
pop
pop
dec
dec
mov
xchg
adc
into
xorl
push
xor
mov
imul
cmp
inc
dec
std
adc
cs
leave
xchg
mov
fpatan
sub
and
into
jmp
or
xchg
dec
adc
fldl
and
push
stos
xchg
sub
push
or
cmpsb
insl
outsl
sub
xchg
test
adc
fstl
inc
mov
inc
ficomps
jle
or
gs
jo
int3
sahf
sub
adc
mov
jae
enter
dec
xchg
arpl
aam
sbb
fwait
push
bound
xchg
icebp
scas
inc
cmpsl
dec
pop
lahf
testl
leave
dec
xchg
push
push
cmp
arpl
xchg
push
xchg
cmp
add
mov
rorb
test
imul
je
out
fisttpll
jbe
fbstp
jnp
sub
loope
add
repnz
clc
sti
jmp
or
shll
mov
clc
and
sarb
push
call
jecxz
sub
orb
dec
fnstenv
adc
dec
cld
iret
and
sub
jge
scas
xor
pop
adc
enter
sbb
add
push
sub
cmp
repnz
or
fisubrl
or
nop
or
in
sbb
inc
xchg
mov
xchg
or
lcall
scas
subb
or
xlat
cmp
xchg
push
test
and
cli
inc
mov
sub
mul
jns
mov
sbb
push
mov
test
jns
pusha
adc
jne
ja
or
lds
out
jge
lods
shll
test
inc
jge
ja
xor
xor
inc
dec
xchg
push
xor
inc
sub
bound
ja
cwtl
stos
add
sub
cmpb
cmp
inc
and
outsl
fisubl
adcb
add
xor
dec
inc
dec
dec
testb
aas
push
xchg
and
push
add
jge
int
stos
jno
lahf
xor
push
lods
adcl
mov
gs
out
mov
movsb
mov
mov
or
mov
push
outsl
lds
std
mov
fnstsw
pop
lahf
jbe
frstor
dec
dec
pop
cmp
lret
dec
and
lods
stos
ficompl
int
rol
scas
addb
arpl
pop
scas
or
int
hlt
dec
and
js
pop
mov
mov
pusha
mov
scas
addr16
pop
mov
xor
js
or
imul
xlat
out
push
cli
shl
aas
sbb
cmp
push
jge
or
push
push
rcr
pop
jl
or
adc
adc
je
mov
into
in
push
daa
and
add
fdivs
inc
je
pop
xchg
push
mov
cmp
sbb
sbb
idivl
adc
lahf
je
int3
pop
mov
xor
push
pop
js
adc
jecxz
jno
stc
mov
and
pmulhuw
mov
imul
push
mov
pushf
or
insb
and
cmpsb
fnstcw
testb
es
mov
pop
pop
mov
or
adc
aaa
or
ret
cltd
jb
or
push
sub
dec
add
dec
rcl
sub
mov
mov
dec
mov
out
adcl
into
mov
lahf
fwait
mov
es
xor
or
push
bound
xor
xor
inc
jo
mov
and
push
jmp
add
fisttpl
dec
mov
push
adc
add
dec
mov
dec
add
jmp
call
pop
push
push
enter
loop
jbe
test
xchg
xchg
mov
loop
lods
sbb
leave
sub
push
repz
sub
mov
sub
jecxz
imul
push
dec
xlat
cmp
or
xchg
and
mov
mov
push
adc
loop
pop
sub
adc
arpl
outsl
jecxz
in
fists
xchg
repz
or
mov
and
fcomps
clc
sbb
jecxz
mov
fnstenv
in
popf
inc
or
push
cld
pop
sahf
lahf
bound
std
insl
jl
pop
xor
mov
xor
xlat
inc
xor
xor
mov
dec
mov
jno
inc
xchg
imul
repnz
mov
dec
into
and
sub
fs
push
fisttpl
jmp
mov
mov
sbb
mov
adc
push
movsb
jge
stos
fwait
jo
and
lahf
and
mov
adc
inc
popf
sbb
and
test
loopne
addb
mov
inc
cwtl
lea
sbb
fcoms
jnp
test
rclb
adc
xor
xor
inc
sahf
jnp
fs
sub
pop
pop
push
sbb
add
jbe
sbb
xor
sbb
or
daa
cmp
pop
xchg
lods
sbb
mov
push
pop
cmpl
ds
cmpsb
aas
mov
insl
ret
adc
jo
fisubrs
pop
and
fildll
jnp
adc
out
adc
in
sbb
mov
aas
jno
stos
mov
js
dec
push
lods
js
test
repnz
xor
mov
push
pop
dec
ret
pop
aam
dec
fdivl
jb
in
stos
fidivrl
push
dec
jae
lock
les
sbb
pop
nop
pop
fstpt
or
and
mov
pop
mov
sbb
push
xchg
data16
les
rcll
leave
cmpsb
mov
and
int
add
push
fsubr
xchg
and
mov
out
sbb
xchg
adc
aaa
pop
mov
mov
mov
fsts
inc
adc
loop
and
push
xchg
and
je
out
xor
xchg
adc
and
adcl
fnstenv
or
sub
lea
xchg
push
cs
dec
popa
add
dec
push
cmp
mov
call
dec
data16
and
pmullw
add
xchg
out
outsb
jle
mov
add
and
mov
jmp
or
stos
xchg
leave
fmul
mov
jg
or
push
daa
push
sbb
or
xor
incb
sarl
js
push
popa
adc
or
pop
mov
dec
push
cmpsb
sbb
lds
jb
arpl
inc
xchg
int
andl
fnstenv
adc
xchg
pusha
fcmovbe
xchg
stos
xor
movsb
cmp
aaa
push
jp
pop
repnz
jg
xor
out
jns
and
ja
movsl
lret
mov
iret
cmp
test
cmp
fisubrs
into
arpl
mov
xlat
imul
nop
pop
mov
jno
repnz
pop
scas
sub
mov
push
fisubrs
rorb
cmp
fdivrs
fidivs
xor
lods
out
cld
pop
add
mov
and
jbe
or
stos
mov
sub
mov
lcall
push
xchg
cwtl
sahf
in
cld
xorb
lret
ss
jno
xchg
lock
cmp
shl
pop
loop
jbe
pop
loopne
dec
subb
lcall
data16
pop
les
mov
sub
data16
imul
cmp
cmc
insl
fmuls
pop
aas
jno
cmp
test
fs
inc
lds
mov
adc
testb
sub
add
lahf
ror
sub
or
cs
enter
cmpsl
jae
nop
sub
test
testb
inc
push
clc
popl
push
xor
aad
push
mov
clc
jae
and
jo
scas
or
and
mov
mov
pop
mov
fidivs
xchg
into
sub
pushl
jno
dec
xchg
jb
test
loopne
in
ds
daa
clc
fidivl
lret
pop
insl
cli
insl
mov
shll
int3
dec
cmp
push
sbb
cmpsl
ss
je
loope
mov
aas
dec
loope
xchg
call
add
xor
and
xor
xlat
sbb
mov
pop
jg
rorl
cmpsl
push
push
movsl
inc
enter
in
ret
push
xchg
popl
mov
loope
adc
xchg
negl
mov
loop
fcmovne
adc
cmpsb
pop
sbbl
mov
lahf
hlt
xor
xor
rclb
inc
cwtl
inc
rep
cmp
loope
cmp
lds
ja
lods
aas
int3
adc
mov
repnz
pop
push
loopne
test
fwait
and
or
fmuls
mov
lock
mov
cmp
dec
mov
jl
mov
andl
fadds
xchg
jne
sub
add
adc
add
inc
in
test
mov
ret
cld
loopne
cltd
adc
out
add
cmp
subl
ficoms
int3
shll
push
mov
push
push
lods
fwait
jne
pop
and
mov
sbb
lock
rcrb
sub
mov
or
adc
not
push
pop
cli
or
jle
mov
mov
jns
nop
imul
add
out
mov
cmpsb
ret
jo
and
data16
fwait
data16
mov
or
mov
fisubl
scas
cmp
push
add
xor
cmpb
lods
shlb
lock
mov
outsl
xchg
inc
sub
push
fsts
mov
repnz
test
outsb
mov
jno
pop
cmc
and
fwait
in
pop
add
out
insb
inc
xchg
mov
inc
sahf
addr16
push
add
adc
popf
lahf
addr16
jg
mov
jecxz
out
lods
jp
mov
rcrl
sbb
popa
arpl
pop
mov
nop
out
cmpl
mov
es
out
inc
adc
pop
cli
or
aam
stos
lock
cwtl
cmp
testl
jge
xchg
xchg
mov
int3
jg
jno
loope
inc
dec
pop
cld
xchg
icebp
cmpsb
dec
dec
xchg
dec
call
loopne
not
movsl
cmp
hlt
or
cltd
out
xorl
cmp
popl
inc
popf
fldt
sbb
inc
lret
add
and
mov
aaa
scas
jbe
push
pop
lods
sub
pop
jge
inc
das
subb
inc
inc
leave
jae
das
les
mov
shrb
dec
adc
leave
data16
mov
je
shrl
xor
xor
xor
fistpl
fidivs
movsb
xchg
sub
cmpsl
add
dec
cmp
pop
movups
inc
fistps
dec
xchg
test
into
ljmp
popf
xchg
addr16
push
jecxz
mov
xor
mov
and
int
mov
xor
jl
cmp
add
push
and
jnp
sub
mov
outsl
mov
lea
add
inc
mov
xchg
fs
ja
outsb
and
xchg
xlat
or
pop
cmp
xor
dec
addl
nop
jnp
daa
or
xchg
out
xchg
pop
xor
std
pop
addr16
push
loop
sub
in
add
lcall
pushf
aam
loop
push
push
jge
pushf
xor
mov
fdivrl
xor
lea
rolb
inc
xchg
mov
mov
daa
or
rcr
shl
jl
adc
lcall
dec
data16
jmp
aaa
test
movsl
xchg
aad
notb
fadd
or
out
shll
mov
sbb
xor
xchg
pop
push
jg
stc
and
xchg
cs
shrl
ret
fbstp
call
inc
std
jo
mov
mov
and
repnz
dec
addl
in
dec
lea
jbe
cmp
jecxz
fwait
cmp
pop
out
mov
imulb
repz
imul
or
xchg
cmp
push
jmp
mov
in
pushf
or
fwait
rcrl
sub
cmp
mov
xor
repnz
adc
push
insl
test
mov
xchg
xor
repnz
cld
loopne
xchg
sbb
mov
lock
inc
push
into
sbb
cmp
fbld
sub
dec
add
in
fcomps
call
nop
mov
pop
loope
jecxz
sub
insl
lods
nop
mov
cmp
nop
jmp
or
mov
xor
push
gs
xchg
sbb
xchg
dec
push
sub
leave
xchg
jge
add
repz
or
mov
movsb
sub
sahf
rorl
jp
addl
mov
insb
enter
sub
sbb
mov
jbe
sti
into
fcompl
add
int
mov
mov
xor
les
pop
or
jns
sub
push
fldl2t
andl
movsl
adcb
sub
ret
pop
movsl
pushf
inc
mov
test
arpl
cmpl
jae
adc
adc
pop
jg
call
or
sub
xor
adc
fsubrs
fs
fldcw
sbb
loop
outsl
pushf
cwtl
lcall
scas
roll
jns
fdiv
push
test
rcrb
cli
and
or
pushl
arpl
fdivl
jge
sbb
subl
inc
mov
or
int
jmp
lods
and
in
test
sbb
xchg
jmp
pop
push
repz
add
jp
stc
jo
mov
rcr
inc
lds
lret
adc
pop
dec
or
ds
pop
xchg
fcompl
dec
pop
repz
scas
adc
add
rorb
data16
insl
add
out
push
push
test
dec
jecxz
cmpsb
jge
and
sti
fs
or
mov
mov
add
mov
jae
mov
testl
add
push
and
jno
test
and
pushf
movsl
push
sub
in
mov
xchg
out
les
js
and
sbb
movsl
das
add
push
stos
arpl
sbbb
push
jmp
faddl
xchg
imul
div
fcompl
xor
inc
fmul
inc
ret
push
adc
pop
cmpsb
pusha
or
push
mov
clc
outsl
adc
inc
mov
sub
mov
ret
sub
mov
jecxz
sub
cwtl
cmp
imul
enter
lret
lcall
mov
lret
pushf
in
mov
test
scas
push
pop
push
mov
shlb
clc
or
dec
pusha
push
sub
adc
pusha
fistps
cmc
fisubs
daa
pop
out
push
pop
xor
sbb
fists
lret
pop
sbb
sti
pop
movb
rcrl
push
lock
mov
or
lahf
cmpsl
not
rcr
add
cmp
and
inc
popa
pop
sub
sbb
inc
push
jle
cltd
sub
pop
in
and
mov
aaa
cmp
mov
lea
outsl
cmp
mov
mov
mov
adc
mov
jae
out
mov
push
jp
sysret
jge
inc
or
push
mov
sarl
push
lea
jle
sub
and
repz
imul
imul
jl
bound
mov
gs
jmp
mov
movsb
inc
stc
inc
dec
add
pushf
mov
fs
aas
es
inc
bound
cwtl
mov
pop
add
add
out
shll
push
lcall
cwtl
stos
rorb
fisttpl
push
repnz
sti
pop
push
sbb
inc
mov
leave
inc
sbb
mov
es
jno
adc
jg
clc
inc
nop
adc
loopne
xchg
mov
adc
push
outsb
and
stos
xchg
add
movl
pop
out
push
fidivrl
xor
jno
push
mov
aad
test
jb
xchg
jp
scas
imul
in
nop
bound
sub
cltd
leave
int3
or
scas
and
jg
xchg
and
imul
repz
mov
les
mov
and
inc
imul
repnz
mov
insb
sub
mov
or
jo
ret
xchg
call
jns
test
cmpsb
pusha
jbe
push
mov
fildll
push
aad
sbb
cld
daa
mov
and
mov
inc
sahf
int3
into
xchg
js
mov
int
fwait
bound
jnp
loop
dec
adc
les
inc
push
adc
xchg
inc
loope
mov
mov
popf
mov
inc
jnp
aam
cmpsb
ds
aam
out
adc
jp
sbb
mov
mov
push
push
out
sbb
and
stos
and
aas
shlb
xchg
repz
xchg
xchg
sbb
or
sub
fisubrl
xchg
sub
jno
gs
jne
das
stos
sbb
push
aas
sbbl
add
rcrb
sarb
sub
cld
addr16
outsb
incb
or
pushf
pop
sbb
push
cmp
lods
lods
add
cmp
inc
loope
cmpl
or
jae
out
movsb
and
jl
add
xchg
fmul
dec
stos
inc
jl
or
dec
adcl
mov
jle
fs
loop
into
jno
sar
jbe
clc
movd
sti
xchg
int
xchg
inc
pop
bound
aam
loop
test
dec
mov
loope
inc
dec
push
sub
lods
cmp
pop
add
stc
or
push
sar
lea
inc
xor
pop
adc
push
mov
mov
mov
fsubrl
fbld
cmpsl
loop
test
cltd
test
cmpsb
negl
daa
cmp
lods
jmp
or
dec
pop
ficompl
inc
dec
add
ret
push
sarl
jne
xchg
fwait
push
movsl
and
scas
mov
sbb
push
xchg
add
shrl
loopne
imul
lea
mov
dec
or
mov
cs
shr
test
sbb
gs
jb
sbb
push
and
xchg
cli
xchg
mov
hlt
and
in
cltd
inc
arpl
jo
ja
mov
in
aam
pop
dec
inc
adc
inc
inc
and
push
mov
jae
mulb
sub
dec
stos
jl
cltd
scas
mov
loop
shlb
jbe
cmp
fsts
ret
pop
mov
jge
jg
pop
aaa
adc
jb
aaa
cmpsb
pushf
flds
aam
cli
lretw
push
es
jg
xor
arpl
out
sahf
stos
es
cmp
and
repnz
pop
sub
clc
bound
inc
arpl
mov
jns
in
ffree
je
jmp
xlat
mov
jge
xor
xchg
mov
sbb
sbb
mov
inc
pop
rol
mov
aad
dec
cmc
cli
inc
into
insl
xchg
iret
add
jbe
xchg
mov
test
imul
mov
xchg
xor
push
pop
daa
inc
pop
xchg
subl
shrl
jno
pop
push
stc
in
orl
sub
add
cmp
mov
hlt
pop
push
shlb
mov
mov
daa
std
inc
push
xor
cmp
shlb
fdivrl
xchg
sbb
es
fdivrl
jb
iret
int
inc
sbb
fwait
pop
aaa
mov
mov
addl
js
push
test
ror
gs
mov
inc
or
leave
rorb
mov
test
pop
movsb
adc
adc
add
xor
push
sbb
push
test
int3
dec
pop
xorb
adc
pop
icebp
sbb
das
arpl
gs
clc
and
mov
std
lcall
loope
lcall
add
inc
mov
in
dec
and
push
cwtl
cmp
out
inc
inc
pop
add
jbe
mov
dec
insl
lahf
push
jae
push
int
push
int3
push
popf
cmp
movups
fistps
jmp
mov
jns
xchg
jb
les
add
outsb
mov
jno
mov
das
cs
sub
cmp
sbb
mov
into
inc
mov
dec
in
aas
dec
loope
mov
sub
lret
jae
or
stos
lahf
cs
mov
sub
sbb
lds
sbb
jns
dec
and
std
inc
ds
icebp
jno
stos
in
popf
and
inc
mov
sbbb
lret
or
lock
test
jecxz
pop
test
arpl
add
jmp
pop
cltd
test
mov
mov
sub
push
addl
stos
xchg
mov
push
mov
and
in
sbb
cltd
and
jge
or
cwtl
lret
mov
das
and
aaa
mov
push
mov
mov
sub
push
aas
and
pop
mov
shlb
aam
xchg
cmp
sub
cmp
imul
sub
mov
add
mov
and
sbb
inc
ret
push
push
mov
jge
xor
mov
clc
adc
pop
clc
pushf
xor
sub
cwtl
icebp
add
cmp
sahf
push
subl
cmp
pop
scas
out
pop
lret
mov
dec
xchg
xor
pop
mulb
adc
ja
xchg
push
mov
pop
mov
int
out
test
pop
push
icebp
hlt
xchg
arpl
in
lods
les
or
or
sarl
lahf
push
in
jg
xor
lret
jns
loopne
lret
cmpsb
std
jg
mov
mov
add
jg
fiaddl
and
xor
push
movsb
xor
pop
dec
jno
mov
stc
cmc
add
cs
sbbl
fwait
ja
clc
test
adc
mov
or
test
loope
mov
cmc
mov
fninit
push
ljmp
repnz
aas
jnp
outsb
imul
imul
je
mov
jb
cli
push
mov
es
adc
jmp
nop
cmc
jns
mov
les
idivb
test
push
xchg
mov
fstl
notb
sbb
mov
pop
in
mov
testl
and
in
daa
cmp
sbb
mov
jmp
cmpsl
mov
aad
loope
lea
mov
inc
cmc
dec
pop
mov
aad
rcrb
je
scas
mov
mov
int3
sarb
cmp
jp
fimuls
dec
adc
fldl
out
sti
cld
call
sahf
stos
iret
push
in
fstps
mov
movsb
stos
aad
sarb
scas
mov
mov
into
movl
mov
cmpsb
sbb
pushf
pop
dec
in
jl
fisubrl
popf
insb
rcll
out
mov
sub
cmpsl
mov
push
push
mov
push
lret
lret
adc
mov
fs
sbb
push
xchg
add
ror
out
or
out
inc
daa
lods
sub
repz
pop
addr16
inc
jp
inc
int
mov
inc
dec
or
xor
cs
and
in
int3
into
jl
mov
pusha
out
fcompl
subb
cltd
out
inc
inc
mov
inc
xor
mov
xchg
filds
addr16
out
sub
adc
push
sub
out
xchg
xor
mov
iret
int3
andl
jge
cmpsl
cmpsb
in
pop
add
mov
mov
xchg
pop
xor
test
ret
and
xor
jae
sbb
push
sbb
or
add
mov
fists
inc
rorl
mov
push
clc
das
rorb
pop
sbb
jb
out
dec
mov
jp
sbb
aas
cwtl
mov
pop
or
mov
fistl
cmc
mov
mov
xlat
or
xor
push
dec
sbb
sbb
cmp
cmp
push
push
adc
je
mov
inc
pop
mov
lods
inc
outsl
sbb
inc
jp
dec
mov
jno
ds
push
mov
xchg
lods
mov
aas
lea
pop
or
mov
xor
push
in
push
dec
and
sbb
xchg
mov
movsl
adc
ret
jns
ja
int
xchg
out
aaa
or
ja
ss
sbb
aas
fbstp
jle
jp
sbb
daa
adc
sub
xchg
pop
push
adc
imul
jnp
jmp
pop
int3
repz
pop
inc
mov
jp
or
jl
pop
cmp
push
mov
mov
into
fldl2t
daa
imul
and
scas
inc
stos
push
mov
sbb
lea
add
xchg
ss
sbb
sub
scas
or
ds
xor
xchg
mov
mov
ja
push
lods
mov
push
xor
xor
cltd
mov
fs
inc
movd
xor
popa
gs
je
gs
test
popa
add
ds
arpl
inc
xchg
ds
sub
ja
push
imul
out
daa
inc
pop
jecxz
kmovb
pop
or
or
pushf
push
pop
xchg
cmp
ss
push
adc
push
xor
neg
add
shrl
out
xchg
imul
jge
xchg
mov
inc
sub
or
int
mov
adc
call
pushf
subb
movsl
add
shrb
add
cwtl
das
sbb
inc
cmp
cmp
pop
cmp
mov
jge
mov
xor
push
push
lret
lcall
or
lcall
fdivr
dec
xchg
shrb
arpl
inc
inc
les
repz
ret
call
cli
cmp
pop
imul
xor
sub
subl
iret
jmp
cmp
inc
sub
movsb
push
aad
adc
cwtl
add
inc
adc
xor
inc
decb
enter
stos
ljmp
loope
fimuls
ljmp
inc
ljmp
pop
scas
adc
pop
imul
cmc
jl
test
js
call
cmp
xchg
test
cltd
lcall
cltd
jbe
mov
aad
inc
add
dec
int
dec
xchg
add
pop
adc
jnp
sahf
sub
sbb
inc
js
jae
imul
stc
shrb
mov
cmp
xchg
cli
pop
cld
cmp
imul
dec
out
sbb
leave
mov
ljmp
mov
xor
adc
jo
inc
push
dec
into
gs
sbb
xor
xchg
cmc
cmp
sbb
fnstsw
stos
cmp
adc
xchg
test
rolb
fs
push
mov
bound
scas
into
adc
mov
aaa
xchg
xchg
add
insb
add
pop
call
test
xchg
mov
imulb
push
cmc
imul
add
jl
bound
xor
mov
push
in
push
out
clc
jno
sub
pop
je
jnp
shlb
push
fisubrl
imul
popa
cld
bound
out
rcrb
cmc
xchg
and
xor
in
ja
push
mov
loope
fs
data16
sbb
dec
les
sti
lret
int
out
imul
inc
jl
xor
and
xchg
sub
clc
dec
ljmp
adc
or
sub
fidivrs
test
sbb
popa
xchg
ret
mov
sbb
jmp
mov
inc
icebp
jl
in
mov
adcb
pop
outsl
std
xchg
add
cmpsb
jo
or
fwait
pop
notb
mov
cmpsb
lods
lods
jo
sbb
mov
imul
pop
pop
int3
arpl
mov
clc
jg
stos
test
nop
pop
push
movd
cmpsl
lret
and
add
pop
push
out
sbb
xchg
add
mov
dec
data16
int
add
daa
sbb
les
imul
mov
cwtl
mov
shl
pop
lods
pop
sub
jg
pop
test
sahf
out
add
imul
xchg
adc
xchg
inc
js
sahf
mov
inc
mov
nop
in
fdivrl
push
adcb
in
pop
cltd
andl
mov
shlb
aam
add
pop
and
fsubr
sbb
iret
mov
cmp
rcrl
mov
inc
pusha
mov
xchg
insl
and
add
cmc
ds
jo
mov
and
push
add
xchg
fimull
lock
lods
dec
cmp
dec
and
jg
xor
stos
lds
lock
sbb
movsb
ljmp
scas
mov
dec
or
sarb
push
data16
das
xlat
mov
daa
fs
pop
jl
loope
mov
mov
bound
decb
xor
jecxz
das
cmp
mov
das
mov
imul
pushf
jno
sahf
push
xchg
sub
dec
jbe
jl
mov
fs
addl
mov
cmp
jb
pop
mov
xorb
sahf
lds
in
xlat
pand
daa
xchg
adc
lcall
insl
notl
faddl
icebp
mov
push
add
dec
dec
push
add
cwtl
pop
mov
cltd
js
adc
dec
and
rcll
cwtl
xchg
or
sub
in
lcall
and
or
bound
cmpsb
xchg
movsl
jmp
mov
es
lods
sub
pop
sub
push
fsts
iret
test
xchg
repz
sub
fisttps
shll
adc
jl
orl
scas
pop
xchg
xor
test
test
sti
pop
jmp
fxch
jmp
adc
jle
xor
pop
cmp
ds
cmp
push
cmp
fldl
sub
mov
test
addr16
adc
dec
sub
ds
adcl
mov
test
xlat
jl
sbb
out
sbb
and
cwtl
imul
movb
or
pusha
inc
or
cli
mov
jp
pop
mov
mov
inc
flds
loope
rolb
sbb
jmp
je
inc
shll
test
sbb
cmp
shl
push
in
xchg
pop
xor
xchg
xor
pop
aam
inc
es
jp
rolb
fcoml
jbe
adc
imul
inc
cmp
pop
rcrb
push
negl
pop
adc
movsl
xchg
dec
adc
notb
push
mov
push
cs
pop
xor
lods
faddp
dec
push
dec
add
jge
int
movsb
lcall
ss
ret
pop
pop
adc
xor
jmp
adc
sbbl
cmp
lret
pop
and
ljmp
lock
or
sbb
lods
cmp
or
test
fucomip
stos
inc
mov
cmp
iret
stc
jl
stos
ds
add
and
das
add
pusha
cwtl
push
dec
dec
lods
out
jae
cmp
inc
fs
std
fldl
push
push
add
fisubrs
pop
mov
test
mov
push
bound
adc
pop
hlt
ss
xchg
imul
sbb
jb
sbb
sbb
jp
fimuls
iret
mov
sbb
mov
pop
and
inc
popl
test
pop
mov
int
cltd
inc
ljmp
jb
mov
gs
cmpsb
add
and
push
adcb
xchg
push
mov
push
adc
sub
cli
je
sub
mov
xchg
jns
fcompl
out
pop
add
or
mov
fisttpl
or
and
popa
std
sub
adc
das
aam
mov
jecxz
jb
addr16
clc
inc
inc
insl
daa
or
outsl
lea
lret
cmp
mov
fistpll
jo
jae
pop
fidivrs
push
gs
out
cmp
outsb
adc
sub
xchg
dec
insb
add
sbb
push
iret
mov
fninit
lock
push
dec
nop
sbb
mov
pop
sub
mov
pop
data16
out
push
mov
jnp
into
mov
test
ja
jmp
test
pop
add
aad
push
push
sti
cwtl
leave
jle
push
leave
mov
out
sub
jge
jnp
mov
xchg
jnp
sbb
aas
fsubrs
cltd
movswl
fildl
mov
mov
fadds
mov
or
inc
xchg
push
call
stos
call
int3
inc
out
mov
into
mov
je
addr16
push
pop
cmp
xchg
jae
in
push
xchg
test
adc
xchg
arpl
iret
mov
fisttpll
cwtl
aaa
fisttps
cmp
lods
inc
movsl
jns
inc
pusha
adc
lret
in
and
mov
out
push
adc
addb
dec
in
lret
idivl
and
scas
mov
adc
sub
inc
lods
outsl
inc
and
icebp
enter
xchg
nop
mov
dec
movsl
inc
xlat
xchg
mov
jb
lahf
das
mov
es
dec
into
repnz
mov
lods
aam
adc
ss
xlat
stc
adc
jo
push
clc
mov
out
dec
xchg
data16
xor
xor
mov
pushf
xor
pop
rorb
pop
mov
xor
lret
int3
add
push
mov
dec
fxch
sahf
stc
enter
mov
push
leave
pop
push
daa
dec
lods
popa
xor
rorb
in
in
push
jge
inc
mov
jo
and
cmpb
test
inc
inc
jp
mov
out
movsl
and
mov
pop
adc
popf
frstor
or
add
adc
xor
pop
lds
jns
dec
push
inc
subb
ljmpw
cmp
loopne
ficompl
sbbb
adc
sbb
addr16
and
or
or
xchg
fldt
nop
stos
int3
mov
jg
fptan
adc
loopne
cwtl
sub
jmp
insb
ret
shrb
imulb
mov
xchg
mov
sbb
jmp
movsb
lds
mov
rclb
popa
dec
cmp
mov
jb
mov
in
xlat
cs
inc
cmpl
bound
xor
inc
int
jae
fdivl
aam
mov
cmp
dec
test
inc
pop
sahf
mov
and
mov
xor
pop
sbb
cmp
clc
popa
lds
shrb
js
ret
and
xchg
dec
fwait
and
jnp
dec
pushf
xor
add
and
jno
sbb
mov
int
aam
fdivl
sub
data16
cmpsl
ds
int
xor
in
mov
bound
lret
jg
push
orb
sub
jle
pop
inc
fs
inc
stos
arpl
test
xchg
into
jno
les
dec
mov
call
lahf
sbb
mov
mov
cwtl
arpl
pusha
xor
pusha
inc
add
xchg
daa
into
mov
push
dec
push
mov
sbb
sub
test
xchg
in
inc
int3
pop
sbb
mov
mov
lods
shr
fadds
lods
aas
fldl2e
in
mov
jne
adcl
sahf
cmp
jmp
add
jg
inc
ds
add
mov
je
fs
mov
fadds
mov
mov
ficompl
or
push
push
ljmp
fcmovne
mov
dec
rorl
add
rorb
cltd
jo
cs
sbb
testl
cmp
ljmp
jmp
cmp
sub
or
ret
hlt
clc
fwait
or
sub
fbstp
inc
inc
scas
and
test
dec
fsubrl
mov
adc
add
sub
push
adcl
stc
or
xchg
and
arpl
add
insl
ja
lods
jo
test
out
mov
lret
jb
pushf
rorl
stc
adc
into
fldenv
iret
and
xchg
jo
pusha
sbb
cmp
cmp
js
mov
bound
in
cmp
ret
imul
mov
dec
lcall
inc
clc
jmp
lea
mov
test
jbe
push
aas
enter
add
shll
inc
pop
dec
xchg
mov
fxch
push
jb
je
cmp
inc
fildl
pop
popf
jns
bound
inc
inc
dec
loope
test
pop
mov
adc
push
sub
insb
push
add
jne
iret
sbb
arpl
jle
pop
push
inc
call
repz
test
sbb
outsl
mov
jge
dec
jmp
repnz
or
push
add
cli
cmp
pop
shll
push
sub
mov
and
out
cld
jns
xchg
cwtl
inc
scas
cld
in
add
cs
fsubr
mov
jbe
imul
jae
aaa
or
repnz
xor
ja
mov
popf
lods
fistpl
dec
mov
and
ljmp
cmp
loope
dec
les
sbb
and
lds
adc
sbb
repnz
xchg
scas
jno
aaa
js
xor
cmp
loope
icebp
adc
push
xor
cmpb
dec
dec
ss
sbbb
add
xchg
pop
scas
or
dec
xor
rcl
mov
dec
jl
les
lods
out
movsl
inc
jp
jns
dec
adc
mov
inc
gs
dec
mov
test
out
mov
jnp
and
sub
mov
out
dec
push
out
sub
jne
clc
or
add
dec
cmpsb
pop
lret
or
mov
mov
dec
pop
std
and
fisttpl
aaa
mov
cmc
lods
ljmp
and
xor
pop
mov
inc
jmp
adc
inc
in
xor
push
cmp
xchg
push
mov
adc
sbb
ljmp
test
xchg
mov
sbbl
push
mov
stos
xlat
leave
push
or
cmp
mov
jnp
mov
mov
mov
jg
aad
iret
fildl
mov
aas
loop
mov
mov
cld
push
and
inc
popa
and
push
xor
fsubs
pop
std
push
das
test
cmp
add
dec
bound
sub
fmuls
xor
dec
adc
cld
into
addr16
shll
rcrl
sub
jne
in
out
push
sahf
add
jmp
cmc
xchg
daa
inc
sbb
cmp
pop
push
push
mov
shll
out
xchg
or
jne
js
or
test
addl
mov
loope
adc
and
inc
cmp
fsubrs
andb
adc
test
sbb
add
mov
and
push
scas
inc
inc
mov
add
outsl
lahf
ljmp
mov
sbbl
fstpt
rcr
fdivs
dec
cmp
shr
adc
inc
push
pop
out
mov
movsl
push
arpl
popa
js
fs
ljmp
and
jg
shr
iret
dec
fstpl
push
push
cltd
xor
andl
mov
push
jmp
cltd
push
fisttpll
xchg
jb
xor
xor
call
mov
push
outsl
xlat
adc
lea
insl
mov
cmp
mov
pop
arpl
jl
inc
pop
cmp
ja
push
and
ljmp
sbb
mov
imul
and
mov
es
xor
imul
js
xchg
push
pop
sbbb
popf
icebp
xchg
jp
sbb
ja
pop
cmp
cwtl
push
xlat
add
loope
inc
cmc
push
push
adc
add
mov
jae
mov
jae
mov
sbb
ss
xor
inc
test
imul
mov
jle
loop
mov
rcl
push
jmp
sub
das
daa
mov
cmpsb
les
push
add
mov
adc
sub
add
fcomi
xchg
sub
insb
sbb
dec
decl
jb
or
leave
vdivsd
dec
in
cmpb
cmp
jmp
fsubs
push
scas
xor
outsl
sub
mov
imul
xor
test
out
fildl
or
fdivrs
movsl
dec
sub
fldcw
add
cli
xor
adc
in
outsl
jns
divl
cmp
push
mov
fdivrl
cmp
sbb
inc
daa
sbb
arpl
sti
xor
jp
hlt
shl
stos
dec
mov
out
mov
sbb
scas
xchg
jno
repnz
xchg
push
out
jns
sysenter
lahf
inc
idivb
jne
aas
adc
sbb
test
add
lea
push
push
addl
test
in
mov
xchg
jle
pop
push
push
pop
lock
mov
add
insb
push
push
mov
popf
inc
cmp
orl
lcall
fldpi
into
gs
jnp
lret
outsl
imul
xchg
cmp
cs
test
cmc
lret
icebp
mov
aaa
sbb
xchg
fsubrs
pop
sbb
add
adcb
push
scas
cmpsb
pop
pop
xor
dec
xor
mov
inc
in
sbbb
pop
imul
fs
inc
and
bound
dec
hlt
pop
ja
mov
stos
mov
add
movsl
out
xchg
sub
fldcw
les
aad
sub
and
sbb
sbb
xchg
dec
roll
testl
sub
push
sub
dec
into
pop
pushf
notb
push
adc
out
xchg
call
int
pop
jmp
mov
sarl
imul
mov
dec
lds
mov
out
in
dec
notb
ss
pusha
inc
jl
ss
popa
fwait
xor
xlat
cmp
xor
xor
jb
or
mov
cmp
pop
xchg
js
jae
out
dec
xlat
mov
cmp
out
dec
insb
add
mov
mov
es
mov
mov
rorb
add
jbe
outsl
rcl
xchg
xchg
sbb
mov
outsb
jne
add
sbb
in
push
push
std
cltd
jae
scas
orb
or
inc
cmp
adc
jbe
pop
xor
lods
test
outsl
sbb
decb
mov
adc
imull
imul
xchg
xor
xor
fs
inc
cmp
data16
les
lock
std
jecxz
jp,pn
icebp
sahf
outsl
or
or
add
es
imul
xchg
pop
call
out
movsb
js
or
push
aas
dec
leave
mov
pop
pop
std
dec
lret
pop
cwtl
mov
jnp
test
pop
fnsave
cmpsb
loope
pop
sti
fwait
nop
movsb
and
in
ss
stc
cmp
pop
jmp
adc
dec
or
jle
push
cwtl
es
or
mov
add
fisubrl
add
insl
in
and
inc
xchg
jns
mov
clc
dec
push
push
ret
arpl
loope
test
mov
int3
dec
in
push
fcomps
push
mov
mov
adc
rcrl
leave
iret
add
loopne
mov
movsl
mov
xor
sub
orl
mov
adc
pop
repz
mov
pusha
stos
dec
movsl
out
and
add
xor
inc
jge
loop
pop
sahf
and
movsb
or
xchg
adc
sbb
test
push
jb
cmp
sbb
dec
pop
mov
sbb
fsubr
xlat
push
mov
dec
xor
call
or
jg
outsb
mov
ret
pop
mov
in
mov
sbb
andb
outsl
dec
and
outsb
inc
lahf
add
or
or
je
push
jecxz
rcrb
cmpsl
sbb
call
add
int3
mov
mov
xchg
and
push
lods
mov
adc
andl
leave
insb
and
push
pushf
adc
push
pushf
cltd
jp
jge
xchg
mov
pop
clc
stos
into
out
xchg
sbb
push
outsl
gs
push
add
mov
mov
mov
jp
loop
push
lret
rol
mov
jle
lret
outsb
add
xchg
xchg
adc
lret
adcb
mov
xchg
sbb
sbb
cmp
in
loopne
or
addl
pop
in
push
or
ja
ret
test
lret
adc
scas
jb
jbe
into
jne
in
aam
jbe
pop
arpl
cmpsb
lock
rclb
xchg
dec
aaa
xchg
add
aad
lahf
push
data16
dec
cmpsb
es
xchg
jl
in
je
movsl
lods
dec
add
sub
ljmp
mov
test
xchg
mov
xchg
sti
or
mov
fmull
mov
jle
test
and
clc
dec
aam
les
sbb
mov
in
pop
cwtl
mov
adc
arpl
or
push
adc
push
mov
lock
xchg
insl
mov
pop
jp
push
pop
pushf
pop
sbb
js
xchg
stos
push
ret
sbb
outsb
lahf
dec
dec
out
mov
andb
cmp
mov
jne
dec
xchg
mov
sub
ljmp
pushf
pop
sub
xchg
ret
jae
mov
mov
pop
push
mov
xchg
jl
push
lods
inc
cmc
jge
fnstenv
sbb
xchg
fsubs
ss
test
ror
mov
xor
in
jg
adc
adc
sbbb
cmp
cmp
in
rcll
cltd
mov
ficompl
arpl
scas
inc
add
sbb
dec
adc
cmp
sub
jne
jne
or
inc
in
push
cmp
ds
pop
imul
scas
pop
scas
fistps
xor
repnz
push
dec
dec
xor
jns
or
loopne
adc
push
rclb
test
dec
add
or
cwtl
test
jno
xor
into
jbe
in
jle
stc
aam
push
cmpsl
cmp
jmp
pop
int3
pop
sarb
dec
sar
repnz
loop
insl
mov
shr
xchg
sbb
or
rol
pop
mov
push
push
jmp
jle
dec
and
repnz
cmp
pop
push
sub
xchg
ss
cs
lcall
push
lock
xchg
outsl
fstl
jmp
shl
push
lock
push
xchg
sbb
mov
cmp
mov
add
xchg
in
leave
out
fldl
push
clc
pop
jg
je
idivb
inc
adc
push
sbb
scas
cmp
fnstenvs
fsub
mov
adc
xchg
call
or
xchg
xor
dec
dec
pop
pop
outsb
sbb
aas
mov
imul
jb
push
xor
cwtl
jae
and
sti
mov
push
fldt
int3
sub
stc
inc
mov
movsb
pop
out
pushf
scas
movsl
rorb
loop
push
fdiv
add
movsb
mov
mov
dec
outsl
cwtl
adc
push
popa
pop
in
outsl
dec
pop
add
push
push
mov
jno
push
jmp
push
shll
pop
cmpsb
pop
iret
fs
sbb
clc
lea
mov
push
subb
dec
adc
sbb
xor
fwait
roll
sub
cmpsl
jmp
fldenv
test
es
orb
fdivrl
pop
jnp
mov
icebp
inc
sbb
add
or
cli
sbb
jo
jae
daa
mov
mov
mov
push
decl
mov
push
out
popa
push
cmp
mov
movl
jge
xor
fcmovu
xor
mov
test
xor
repnz
iret
jnp
mov
fsubrl
push
xchg
mov
adc
mov
push
jmp
and
fildl
dec
das
idivl
clc
mov
sahf
repz
xchg
jecxz
jmp
mov
xchg
test
jbe
neg
inc
imul
enter
out
mov
fcmovne
xchg
inc
and
xor
stc
mov
int
sahf
test
dec
dec
mov
add
insb
aaa
pop
loope
iret
and
jecxz
jno
xor
xchg
icebp
movsl
dec
hlt
add
cmp
in
sub
inc
dec
stos
inc
fwait
leave
jo
jg
leave
cltd
insl
lea
sar
mov
jno
xchg
or
scas
xchg
aaa
lahf
je
push
push
xchg
lock
repnz
test
adc
in
xor
jg
enter
dec
jmp
dec
pop
cwtl
dec
jae
insl
mov
repnz
and
movsl
push
or
sub
sub
adc
cmc
xchg
cld
push
xchg
mov
jl,pn
xchg
sub
test
clc
mov
fsubs
and
repz
rcrb
jp
xor
popf
repz
mov
cmp
jno
cmp
ss
mov
enter
in
cmpl
xchg
xchg
popf
cld
out
scas
sahf
sbb
cs
jno
testb
outsb
loopne
in
sbb
mov
pop
dec
stc
xor
es
pop
jae
test
mov
insb
mov
adc
mov
cmp
xchg
lcall
lds
leave
rorl
cwtl
or
cmovae
xor
and
push
xlat
outsb
or
movsb
mov
add
lea
idivb
pop
cmp
in
das
pop
fildll
or
sub
out
dec
fiadds
pop
andb
mov
mov
push
test
mov
idivb
shlb
mov
into
loop
popa
xor
test
and
pop
imul
fidivs
fcoms
gs
cmpsl
mov
fiadds
ficoms
add
fnstenv
jae
shl
fbld
addl
and
mov
push
jno
frstor
jnp
fadds
mov
aam
out
or
call
roll
repz
mov
loope
sub
insb
outsl
jnp
add
push
or
sub
lahf
jmp
xchg
sahf
int
add
fstpt
stos
xchg
push
push
cltd
wrmsr
push
je
lods
jmp
sbb
push
jo
add
in
push
shll
push
cmpsl
cli
inc
aad
andb
sbb
rolb
pushf
cli
pushf
xchg
xor
jp
mov
add
jl
push
out
popf
push
mov
mov
clc
test
lock
inc
loop
mov
in
cwtl
dec
dec
pop
mov
je
sub
stos
test
cs
test
enter
out
cltd
push
in
mov
cmp
pusha
push
ljmp
dec
shl
jle
push
mov
xchg
sub
jne
leave
decb
adc
mov
les
daa
xor
mov
in
pushf
in
sub
adc
out
test
xlat
scas
inc
sti
rclb
into
sub
ficomps
lret
or
xor
inc
inc
sarl
imul
jg
negb
sub
insb
inc
xchg
adc
rcl
xchg
popf
lods
mov
mov
int
cmp
dec
ss
sub
pop
add
xlat
dec
pop
lret
lahf
inc
cmp
add
or
mov
dec
scas
out
sub
and
bound
xchg
int
std
lods
mov
pop
cmp
xchg
test
inc
clc
aaa
mov
fs
push
in
in
add
xlat
fcompl
jecxz
push
push
repz
or
mov
cmp
jo
cmp
pop
call
and
dec
lock
lods
jnp
insl
adc
inc
dec
adc
inc
arpl
push
push
pop
divl
aam
push
mov
cmp
scas
fnstenv
aad
jb
or
sub
mov
mov
add
pop
test
shlb
nop
sub
jo
aas
push
pop
mov
inc
mov
dec
stos
mov
dec
cmp
add
pop
rol
lea
shr
xchg
ja
xchg
adc
inc
pop
mov
jmp
ja
aam
add
test
mov
pop
out
push
mov
pop
hlt
mov
inc
xchg
sub
aaa
add
jge
sub
jb
cmp
test
icebp
nop
jno
imul
sbb
aas
inc
mov
in
out
rcl
and
js
pop
cs
call
lock
popf
call
push
movsl
in
xchg
out
loope
push
jae
add
mov
or
inc
sbb
pop
mov
push
pop
imul
cld
xor
fidivrl
test
cli
imul
jae
mov
loope
push
lea
xor
aas
push
pop
xchg
call
and
fs
inc
sub
ljmp
mov
pop
sbb
lret
insl
xor
jl
repz
mov
stc
fcomp
sub
or
add
movsb
xchg
in
inc
lds
mov
push
sbbb
sub
js
idivl
sub
push
mov
leave
add
scas
cmpsb
aam
fcmovb
jbe
or
push
scas
dec
or
adc
push
inc
xor
xchg
das
mov
es
out
fdiv
dec
test
bound
add
fsts
xor
fsubrs
negl
pop
sbb
mov
xchg
xchg
mov
push
sahf
mov
jle
je
sub
inc
xlat
add
mov
shl
xchg
adc
mov
loop
sub
or
orl
rclb
nop
hlt
mov
mov
adc
or
lods
and
push
in
cmp
jmp
push
cmp
scas
clc
lret
adc
stos
xchg
xchg
lods
sbb
cmp
jno
or
fsubrp
dec
push
or
ljmp
sub
int3
cltd
sub
and
sahf
pop
mov
inc
aad
xchg
or
jne
js
or
clc
les
jp
insb
xlat
scas
aad
negb
push
jmp
stos
sbb
mov
cmpsb
arpl
pop
sbb
jl
ljmp
sahf
xor
inc
mov
outsl
push
mov
into
lea
out
lcall
jne
pop
repz
xchg
and
shll
cmp
loope
sbb
pop
idivb
add
data16
or
mov
xchg
push
mov
dec
enter
dec
jp
movlps
mov
cwtl
xor
js
cmp
into
cltd
clc
jae
addr16
lret
repnz
fdivrs
mov
pop
xchg
dec
cmp
aad
pop
stc
cmp
stos
add
daa
mov
mov
test
jbe
std
out
adc
mov
movsb
cmp
into
ja
push
mov
ror
movsl
and
or
ds
cld
mov
cmpsl
hlt
int
cmpsb
fnstcw
sub
fs
ss
jge
mov
pshufw
and
call
cmp
out
inc
mov
fsubr
adcl
je
scas
ret
pop
dec
jecxz
out
mov
cmp
insl
mov
int3
cmpsl
sub
loope
push
sarb
sub
cmp
call
dec
pop
sub
sub
push
jno
lds
repnz
je
fwait
fwait
xor
bound
adc
rcrl
ret
bound
daa
imul
and
negl
in
jae
je
inc
dec
pop
mov
fwait
or
jne
idivl
add
push
pusha
mov
cmp
shl
xchg
xor
clc
push
fstps
repz
sub
push
lods
aam
loope
lds
in
xchg
cmp
pop
xorb
push
ja
xor
stos
movsl
and
adc
jl
loopne
mov
idivl
mov
push
xlat
pushf
pminsw
cld
aam
xor
stos
shlb
jle
xchg
jmp
push
scas
test
sbb
push
popf
xor
dec
cltd
add
or
call
xchg
sub
bound
jb
dec
aaa
das
dec
arpl
or
in
stos
mov
lock
add
mov
and
jo
dec
das
mov
pop
push
call
sub
or
mov
insl
xor
int3
pop
push
mov
ficoml
or
inc
aaa
push
adcb
and
sub
insl
or
mov
mov
int
jg
hlt
push
dec
out
lcall
insl
jnp
pop
mov
pusha
add
cmp
and
mov
xchg
icebp
cmp
lcall
push
int3
sbb
mov
pop
inc
ficompl
mov
into
jo
sti
ljmp
je
into
and
dec
and
jge,pn
mov
pop
repnz
mov
pop
mov
sub
adc
lock
add
adc
cli
mulb
and
pop
mov
shll
ds
dec
mov
jb
test
dec
lods
xor
sub
dec
shlb
mov
or
add
pusha
cmp
xor
xorb
sahf
push
pushf
clc
jge
fisttps
fnsave
jno
lret
xor
sbb
jge
incl
out
cmc
pop
pop
vunpckhps
cs
mov
frstor
sub
mov
xor
movsl
cmp
les
loop
ret
pop
mov
mov
mov
xchg
add
aad
xor
arpl
pushf
sbb
or
loope
or
jmp
enter
xor
mov
pop
in
pop
adc
into
shrb
adc
fxch
jg
sbb
test
mov
ret
pop
in
mov
jb
andl
sahf
les
cmc
mov
dec
in
push
in
push
imul
aas
lcall
mov
add
mov
cld
and
sbb
pop
or
add
pop
clc
or
call
std
lock
add
stc
ret
mov
out
push
xor
arpl
js
fdivrs
nop
and
cmp
ss
movsb
jle
mov
fisttpl
ret
fsubs
jb
cmpsb
pop
xrelease
add
mov
push
test
cmovae
in
cmp
cmc
out
adc
inc
push
fiaddl
mov
push
imul
mov
and
rorl
xor
or
ja
fidivrl
hlt
pop
cmp
push
jbe
fsts
cmp
into
add
push
les
pop
push
repz
sub
int3
sub
jmp
dec
iret
fucomi
push
stc
or
cwtl
dec
es
inc
addl
jbe
loop
ds
xor
ret
test
je
add
push
std
lods
cmc
pop
fidivrl
jmp
jmp
fldt
sti
enter
mov
rclb
mov
dec
sbb
push
sbb
rclb
fstpl
outsb
lret
add
imul
or
andb
lahf
in
add
adc
inc
jbe
pushf
push
cmp
adc
das
add
jne
xor
cwtl
data16
repnz
sub
je
dec
dec
pop
adcb
push
and
fadds
fucomip
jmp
or
mov
push
scas
xchg
and
jg
ljmp
xchg
loope
push
pop
repz
dec
fs
cltd
std
mov
sub
xchg
xchg
dec
jl
add
faddl
cld
inc
mov
xchg
xlat
xor
cmp
dec
push
popf
jnp
pop
cmp
in
dec
mov
cmp
inc
mov
sub
jl
sbb
xor
arpl
cli
or
or
jnp
xchg
mov
pop
and
add
jp
les
adc
pusha
sbb
lea
pop
addr16
in
or
xor
cmp
inc
pushf
out
mov
mov
jnp
jb
repnz
movl
daa
out
pusha
js
out
js
int
or
push
fistl
in
mov
mov
pop
adc
ret
adc
push
jns
arpl
jle
xchg
mov
jmp
clc
out
scas
xchg
xchg
scas
outsl
ds
mov
jge
sbb
or
rcr
mov
clc
or
test
sbb
push
jmp
push
idivl
mov
popa
xor
arpl
lock
scas
divl
test
sub
add
pmaxsw
cmp
pop
nop
jl
mov
bound
fsub
mov
lahf
jo
enter
icebp
bound
movsb
fistps
mov
adc
es
adc
add
cmpsb
and
test
xor
jbe
sub
pop
es
mov
pop
cmpsb
mov
loopne
hlt
sbb
loop
jg
jge
rol
ds
mov
push
and
loop
push
mov
lods
rolb
xlat
into
shl
jo
and
mov
ret
pop
sbb
ret
fidivrs
jmp
push
subl
jbe
mov
add
inc
xchg
cmp
loope,pt
fistpl
xlat
pop
out
or
jmp
sbb
sub
test
mov
cmp
add
sbb
sub
aas
insl
inc
inc
xchg
add
mov
inc
fs
jmp
mov
mov
aaa
jbe
pop
leave
int
fmuls
bound
int
jo
cmp
enter
dec
sub
rcll
mov
imul
aad
mov
adc
pop
outsb
or
sbb
dec
js
nop
push
xchg
mov
and
popl
lret
dec
test
lock
test
jnp
test
imul
ljmp
stos
daa
add
and
pop
xchg
pop
rcl
scas
stc
mov
repnz
icebp
xchg
into
push
movsl
pushl
and
mov
fbstp
movsl
stos
lret
jne
jno
fs
xchg
xchg
sub
shl
stc
dec
mov
clc
sbb
sarl
lds
mov
lea
adc
mov
mov
stos
jmp
inc
adcl
std
jne
or
jb
out
xor
test
cld
pop
icebp
or
lcall
jae
loop
mov
lret
adc
inc
xor
or
mov
or
rcll
leave
js
mov
cmpsb
cltd
mov
or
lock
pop
outsb
xor
xor
sub
dec
ljmp
jb
out
cmc
neg
inc
adc
mov
lods
jle
mov
fiaddl
lds
stos
push
sub
xor
mov
push
in
mov
xchg
push
imul
mov
mov
add
fwait
cmpsl
notb
pop
push
mov
movsl
inc
in
jp
lea
xchg
dec
or
cmc
aam
mov
inc
sub
jb
test
sub
shll
or
xor
xchg
or
popa
jnp
adc
inc
mov
push
data16
cld
rcrb
cmp
bound
and
mov
cld
and
addr16
fwait
xor
daa
mov
dec
jb
sahf
shr
jmp
rorb
popf
lods
add
mov
push
cmpsl
adc
insb
sbb
arpl
fnsave
mov
xchg
scas
cmp
aam
fwait
xor
cmpsb
jnp
scas
pop
inc
lcall
and
jne
cmp
rcr
fs
inc
xchg
sarl
push
push
ret
push
popf
hlt
xor
mov
inc
xor
xchg
cmp
les
fdivs
push
imull
into
jecxz
in
dec
cmc
cmp
push
dec
cmc
nop
xor
repz
fldt
sub
rorl
push
sti
mov
dec
xchg
imul
test
dec
movsb
mov
pop
aam
mov
mov
mov
testb
dec
lods
rolb
mov
out
mov
movsb
jg
insb
loop
and
cmp
in
sub
pop
or
mov
cltd
imul
xor
and
rorl
xlat
jl
or
mov
ret
push
inc
lds
jg
push
popf
add
cs
mov
cmp
xchg
sti
xchg
stos
leave
mov
mov
ret
or
das
into
movsb
sub
xchg
mov
adc
or
daa
out
add
nopl
jno
xchg
in
out
adcl
jb
sub
clc
sub
adc
in
xchg
mov
push
push
cwtl
mov
cmp
outsl
nop
cmp
push
xor
inc
loopne
xchg
adc
sbb
out
sub
sub
pushf
out
mov
sahf
lods
popa
mov
clc
or
sbb
jae
mov
cli
xchg
pop
mov
test
fnstenv
pop
je
fsubr
mov
sti
jbe
enter
mov
pop
movsb
mov
popa
lods
loop
pop
lcall
and
inc
or
sbb
push
add
mov
shl
jne
sub
push
dec
cmp
fisttpl
and
subb
loop
add
add
scas
inc
lcall
and
int3
sub
int
lea
mov
fdivl
sub
xchg
clc
nop
out
mov
inc
or
sbb
rclw
xchg
rcr
hlt
mov
pop
mov
cmpb
loop
je
cld
or
call
cmc
insb
scas
fdivrl
xor
inc
sub
scas
lock
loope
fistpll
dec
add
jno
push
sbb
sbb
adc
jecxz
daa
cmp
rcll
xor
cmp
sbb
jbe,pt
in
test
add
jbe
jmp
push
pop
scas
xchg
jp
or
jo
daa
lcall
adc
stos
arpl
orb
and
xor
int3
cltd
aad
out
test
in
jg
add
xor
add
sbb
jge
fisubrl
sbb
and
pop
fimull
shr
xor
popa
or
mov
adc
xor
das
jl
jno
pop
sub
adc
dec
int
xor
inc
adc
xor
repz
and
outsb
sbb
loopne
test
adc
push
mov
js
cmc
pop
push
adc
sbb
jg
mov
cmp
inc
fldenv
xchg
ss
fldenv
movsl
sti
and
adc
movsb
shl
rcr
push
test
adcl
xor
push
jmp
test
or
mov
mov
dec
out
lds
cmp
inc
cmp
jp
rcl
ret
add
test
inc
imul
cmp
mov
mov
shll
test
sbbb
mov
scas
cld
inc
fucomip
inc
clc
or
push
scas
lahf
mov
and
xor
jp
dec
push
inc
jns
stc
sub
or
iret
or
cs
je
adc
nop
mov
push
mov
push
mov
fmull
and
cmpsl
in
push
sbb
std
inc
xor
sahf
push
inc
xchg
xchg
mov
imul
xor
jl
adc
lahf
sbb
mov
imul
addb
int3
rcl
cmpsb
push
outsb
push
sub
sbb
aad
fwait
scas
iret
adc
pop
lret
mov
pop
negb
imul
shrl
sub
mov
ret
pusha
pop
cmpsl
xchg
pop
jae
push
int
out
jnp
sbb
stos
or
shrl
sbb
sub
push
and
sub
mov
pop
cmp
cmpsl
pop
dec
xor
loope
adc
int
push
roll
push
jae
or
xor
lods
pop
fsubrp
jecxz
cli
lock
lret
xchg
out
inc
push
hlt
jb
mov
enter
imul
shll
jo
pop
loop
mov
jae
pusha
cmpsb
lock
orb
nop
daa
mov
pop
cmc
adc
sub
std
cltd
push
add
scas
ret
pop
test
mov
mov
adc
mov
popa
cmpsb
jns
or
test
stos
lds
sub
notl
xorl
pushf
adc
mov
mov
push
outsl
fisubs
ret
fdivrl
mull
adcl
adc
jmp
mov
je
sub
dec
call
and
push
mov
insb
fists
mov
andb
sbb
inc
pop
fidivs
push
test
cmp
pop
stos
inc
or
lahf
fcomp
xchg
and
lret
xchg
movsl
cmp
outsl
sbb
fwait
ret
lcall
sbb
pop
mov
scas
xor
outsl
iretw
fidivl
add
sarb
jl
jae
xor
cltd
dec
lahf
adc
mov
adc
jecxz
xor
cmp
iret
pop
in
adc
xchg
lock
or
movsb
pop
stos
shll
dec
jns
adc
out
mov
insl
jge
in
jge
adc
dec
and
repnz
jge
or
insl
mov
or
fsubs
jbe
mov
outsl
inc
ds
scas
cmp
cmp
pop
and
pop
hlt
fldenv
andb
and
insb
stc
dec
pop
fisubl
ljmp
sub
pusha
xor
or
mov
int
call
imul
inc
xchg
shl
pop
mov
in
shrl
mov
jge
pop
or
cmp
iret
stc
inc
cmc
dec
jle
pop
push
sbb
adc
or
aaa
stos
inc
imul
clc
adc
aad
mov
pop
lcall
lods
lret
lds
icebp
mov
inc
pushf
inc
fxch
je
mov
into
leave
fpatan
inc
loop
fisttpll
sbb
sub
in
gs
mov
pop
xchg
adcl
aas
bound
push
jae
add
sub
imul
fs
jns
ror
mov
nop
imul
mov
sbb
jb
pop
xchg
fidivs
cltd
shll
shl
sbb
push
mov
mov
jmp
mov
mov
les
or
xchg
shr
addr16
push
or
icebp
std
clc
int3
push
cmp
xlat
out
sub
mov
xchg
lahf
mov
push
sahf
xor
repz
pop
fbstp
cltd
inc
ret
rcrl
jnp
inc
enter
in
sti
xchg
lret
xor
sahf
fcoml
jl
outsb
leave
repz
fisubrs
jecxz
sbb
add
sub
jge
sub
aas
dec
into
pop
add
outsb
lds
scas
lea
push
cmp
lret
test
shll
shrl
shll
lods
mov
pop
sbb
jns
mov
stos
push
mov
jne
add
dec
divb
outsl
xchg
or
cli
sub
scas
jnp
add
push
dec
ss
aas
dec
pop
repnz
dec
lock
cltd
xor
push
mov
hlt
lea
jne
cmp
adc
mov
jbe
lods
cs
mov
out
pushw
and
mov
mov
inc
add
mov
into
sbb
pop
adc
mov
add
scas
cmp
inc
cmpsl
bound
fwait
push
add
inc
and
xchg
sub
jb
repnz
add
fucomp
mov
clc
mov
sub
aam
sbb
or
xor
sarl
repnz
les
call
mov
jp
cmp
xor
jbe
fcmovu
mov
inc
flds
adc
leave
fs
push
xor
out
dec
sbb
mov
shl
shrb
nopl
jne
clc
or
and
ss
fwait
es
jne
dec
push
int
pop
in
lret
movsl
push
push
inc
pop
dec
lock
aas
dec
cmp
lcall
inc
mov
ret
pop
sti
sub
sub
fsubrl
pop
jo
mov
ljmp
mov
cli
xor
xchg
xor
inc
xchg
xor
push
gs
ret
adc
jns
outsl
xor
fldcw
sub
adc
add
xor
cmc
jno
aas
push
rcrb
push
sti
pop
test
adc
mov
aam
xchg
rcrb
cltd
or
adc
int
push
mov
mov
jmp
add
cmp
ret
ja
pusha
xchg
mov
cli
cmp
mov
inc
lods
lea
xchg
add
cltd
mov
leave
fiadds
test
enter
mov
clc
mov
out
or
cmp
dec
dec
leave
int
imul
pop
cld
cmpl
dec
xor
dec
sbb
jb
out
xchg
jl
sbb
jg
sbb
imul
push
arpl
aas
test
cmc
pop
jo
lcall
push
imul
and
shll
push
int3
xor
cmp
xor
xchg
lea
ficoms
repnz
pop
or
pushf
inc
cmpsb
fisubs
xchg
dec
fidivrl
insb
movsb
sbb
mov
insl
xor
iret
inc
lret
daa
lcall
adc
dec
and
mov
lods
xchg
jnp
les
fistl
mov
xor
mov
inc
sbb
jns
arpl
mov
xor
xchg
icebp
adc
js
call
into
and
fs
jmp
fdivp
mov
push
testb
adc
rorl
lcall
push
jg
pop
add
nop
out
insb
jmp
push
icebp
stos
ss
and
popa
dec
pop
outsb
jge
in
mov
daa
mov
jb
mov
fdivr
or
sbb
mov
icebp
mov
adc
mov
sahf
dec
sarl
mov
or
xor
xchg
jmp
cs
push
insl
into
jno
or
mov
adc
rorb
sbb
fdivrs
xchg
xor
pop
pop
xchg
lret
rcrl
pop
or
arpl
xchg
adc
xchg
push
int3
cli
in
mov
push
jecxz
or
push
shll
fwait
inc
pushf
adcb
loop
pop
push
inc
mov
push
jmp
xchg
ret
xor
sbb
inc
mov
rorl
scas
pop
leave
sub
sbb
shrl
jp
ret
mov
jg
into
mov
ret
frstor
adc
es
in
inc
out
in
inc
arpl
out
adc
dec
mov
iret
insb
shl
addr16
inc
int
cwtl
mov
fprem1
sub
add
loope
mov
cmpsb
sbb
pop
fwait
push
inc
xchg
fmull
out
mov
ficoms
sub
xor
je
cwtl
mov
mov
dec
roll
add
scas
add
push
mov
pop
adc
cmp
add
mov
push
outsl
add
sbb
mov
sub
push
das
push
insl
jb
and
outsb
cs
xchg
cld
xchg
sub
mov
mov
jl
addb
mov
sbb
jl
std
pop
ja
mov
je
xorl
push
dec
test
sub
insb
pop
inc
mov
sub
or
lret
xchg
dec
cmp
xchg
pop
out
adc
cli
popa
mov
push
push
sbb
fdivrs
adc
mov
les
mov
addr16
jno
mov
pop
cmp
sub
jp
xor
addr16
lods
adc
test
icebp
cli
lahf
ss
and
test
popf
fsubrs
push
int3
leave
in
das
dec
in
mov
insb
sub
and
adc
xchg
adc
mov
cmp
cmp
and
inc
push
in
ja
pop
push
ret
scas
mov
jne
sbb
xlat
sub
xor
inc
xchg
ficoml
pop
mov
mov
and
jle
stc
jmp
and
addr16
lods
add
mov
or
add
hlt
popf
pop
sub
test
xchg
test
test
push
hlt
imul
pop
jns
jmp
add
mov
leave
inc
and
and
cwtl
dec
rorl
and
jle
js
inc
cmp
xchg
jmp
adc
fs
outsl
jge
cmpsl
rcl
lock
mov
adc
sbb
mov
inc
stc
xchg
mov
cmp
mov
mov
xchg
in
test
aas
mov
gs
andb
sbb
stos
int3
das
stos
das
fmuls
sub
sub
out
loope
ret
cltd
adc
icebp
mov
fidivs
ljmp
mov
sub
ret
das
imul
mov
mov
jae
push
jno
loop
mov
mov
dec
imull
sub
mov
dec
add
pop
pop
int3
add
outsl
jnp
cmp
adc
and
and
out
fsts
loop
and
jg
sub
stos
inc
sub
scas
ja
dec
enter
std
xchg
orb
int
push
xor
jbe
ljmp
out
cld
pop
imul
sbb
stos
jecxz
push
mov
in
test
int3
sub
jo
or
roll
cmpsl
out
adc
insl
add
insl
frstor
fstpl
add
xchg
in
xor
xchg
mov
in
jp
imul
popf
sarl
or
rcrb
add
fsubr
jmp
inc
jno
add
adc
clc
int3
sbb
sbb
aaa
dec
dec
and
dec
xchg
pop
mov
mov
hlt
push
xor
xchg
cmp
push
daa
lcall
xor
jp
shrb
mov
test
stc
xor
sub
mov
out
popf
pop
cld
clc
out
movsl
idiv
push
aas
inc
xor
mov
push
imul
mov
mov
adc
sub
shrl
mov
daa
out
xchg
jno
and
stc
imul
cmp
mov
repnz
push
mov
test
movsl
cmp
ret
pop
xchg
xchg
jae
mov
sub
int3
jge
push
test
shlb
push
call
mov
fdivrl
mov
mov
xchg
mov
inc
sahf
xchg
and
inc
int3
sbb
push
pop
ret
mov
add
add
xor
out
and
and
decl
mov
push
pushf
or
aas
int3
jge
mov
imul
jmp
pusha
xorl
xchg
stos
stc
or
hlt
cmp
in
mov
pop
rcrb
jmp
sub
mov
cmp
das
mov
popf
jl
mov
cmp
jnp
imul
cmp
xor
lods
mov
xchg
inc
maxps
or
mov
outsb
mov
jl
push
push
mov
jle
dec
insb
bound
pop
test
sbb
mov
jno
inc
icebp
and
mov
pop
out
lock
and
xorb
movsl
xchg
ja
pop
hlt
flds
add
pop
adc
mov
shll
mov
popf
call
or
addr16
dec
or
jns
imul
out
test
aad
cmp
loop
jbe
sbb
dec
test
ja
mov
push
push
mov
push
mov
std
adc
sti
dec
pushf
repz
in
ret
orl
dec
call
outsl
movb
sbb
int3
jno
lea
ljmp
dec
ret
jle
push
fstl
push
out
ljmp
call
js
outsl
out
push
jae
jl
cli
lds
mov
or
out
or
and
mov
mov
push
aaa
and
mov
dec
les
cmp
aam
mov
dec
ja
neg
mov
dec
rcr
test
sub
aam
aaa
aas
inc
inc
aas
dec
jb
mov
cmpsb
xchg
out
push
sbb
jne,pt
outsl
dec
gs
roll
cmc
cmp
test
aam
or
inc
push
std
hlt
sbbb
pop
pop
lock
or
test
popl
pop
mov
pop
int
stos
xor
pop
cld
into
or
push
mov
imul
daa
mulb
push
pop
push
ljmp
jno
sub
negb
jae
mov
dec
inc
in
call
adc
inc
popf
mov
leave
inc
outsl
sbb
jle
nop
pop
jb
fnstsw
push
lods
pop
daa
dec
divb
lods
in
dec
pop
add
or
jno
lcall
cmp
std
sbb
sub
adc
cld
pusha
pop
xchg
sbb
fs
mov
pusha
andb
fidivs
dec
sub
fwait
fs
aam
mov
dec
in
mov
adc
shll
mov
cwtl
jge
sbb
jmp
sbb
das
sbb
dec
sbb
xchg
jbe
jns
sub
test
and
adc
adc
pop
idivb
mov
fldcw
mov
pushw
sbb
repz
rcll
pop
xor
mov
mov
mov
sbb
sub
arpl
outsb
notb
mov
lret
jge
jns
lcall
cmp
xchg
mov
adc
bnd
jmp
movsl
icebp
repz
imul
jnp
ja
out
fidivrs
insb
fistps
lods
or
mov
test
stc
je
inc
xchg
ja
xor
jb
jnp
fs
lahf
stc
xorb
jle
movsb
andb
sub
lds
rcrl
or
enter
cmp
into
inc
xchg
add
jne
add
fistpll
xchg
sahf
daa
std
js
repz
movsb
ja
lods
mov
lret
int
negl
cld
and
pop
dec
loopne
jo
in
jp
sbb
stc
add
mov
pushf
test
dec
cmpsl
iret
cmpsb
lds
out
pop
orl
cmp
push
pop
xchg
es
fcmovb
fildl
bound
aaa
pmaxsw
sbb
loopne
mov
push
inc
mov
mov
fcmovu
mov
decb
int3
pop
scas
and
cld
sbbl
and
ljmp
sub
mov
mov
mov
or
imul
sub
rcrb
sbb
and
cmp
ret
nop
mov
mov
inc
lock
mov
mov
enter
or
add
pop
mov
mov
dec
push
pop
inc
cmp
pop
lahf
out
loop
push
pop
cmc
mov
fildl
nop
insl
adc
or
arpl
jp
test
test
pop
add
inc
fdivr
ror
fnsave
mov
fwait
xlat
jg
xor
fidivrs
jns
jmp
mov
add
mov
mov
lret
ret
test
and
mov
and
insb
xor
adc
lret
bound
pushf
out
inc
inc
test
sbb
test
pop
sti
lods
mov
out
test
stos
xor
xor
sub
and
push
imul
stos
inc
xchg
dec
scas
and
cmp
cld
aad
mov
sub
xchg
int
hlt
pop
mov
push
pop
xor
fs
xor
mov
jecxz
push
push
xchg
mov
cs
cmovs
jno
sbb
insb
jg
subl
push
mov
call
mov
cmc
adc
fdivrp
and
push
dec
push
xchg
js
mov
adc
inc
dec
adc
dec
push
pop
bound
push
lret
and
sub
pop
negb
mov
inc
jo
dec
stos
sbb
or
insb
or
or
call
mov
pop
test
gs
int
cmpl
in
mov
mov
inc
out
ja
cld
cmp
sbb
mov
ret
in
jns
out
lea
mov
int3
fcompl
xor
and
sub
dec
push
cltd
movsl
mov
jb
clc
lods
sub
or
rcrb
inc
fldcw
lret
xchg
dec
dec
fnstenv
test
push
lahf
push
jmp
aaa
into
xchg
xor
push
xlat
das
movsb
push
popa
pop
push
push
or
jnp
adc
aam
cwtl
insl
mov
xchg
sub
cmc
addr16
aad
mov
stos
mov
test
dec
dec
mov
stc
js
mov
fidivrl
xorl
mov
mov
movsl
and
movsl
scas
dec
dec
add
jbe
cwtl
pop
dec
jae
push
pop
loop
stos
xchg
mov
mov
fisubrs
sub
jb
mov
add
xor
mov
or
int
sub
cmpsb
cltd
pushl
bound
xlat
icebp
push
in
xor
xchg
cmp
loop
inc
test
dec
push
gs
jle
out
sbb
pop
testb
dec
xchg
testl
fwait
push
imul
stos
xor
movsl
push
shl
rcrl
push
les
adc
sub
inc
fsubrs
mov
gs
out
push
or
mov
sub
lahf
stos
ss
xor
shlb
mov
ljmp
imul
jne
push
inc
sti
jnp
in
jmp
popf
pop
popf
xor
and
mov
scas
cmpl
pop
or
jne
clc
pop
mov
shll
adc
xchg
ret
dec
dec
cmp
pop
in
xchg
lret
sbb
jo
in
out
pop
shl
dec
imul
adcb
mov
cld
outsl
pop
das
aam
add
fnstcw
out
popf
add
shlb
shrb
lahf
jge
shr
mov
jae
jle
jbe
adc
sbbb
ja,pt
dec
jecxz
stos
pop
rcrb
inc
clc
add
sbb
push
aaa
loope
pop
lock
xchg
or
std
or
sub
aad
inc
jg
shl
lods
jmp
sbb
jmp
popa
xchg
lods
cmp
int3
pop
loop
jmp
adc
out
mov
lret
stos
popa
stos
imul
adc
les
cltd
popa
inc
push
push
mov
mov
push
adc
shll
jecxz
cs
add
gs
scas
mov
jo
scas
outsb
cs
stc
ja
lods
insb
pop
fisttpll
xor
jle
ss
adc
or
stos
loopne,pt
fsub
jae
leave
js
or
rcl
in
xor
pop
outsb
mov
mov
insl
sahf
into
xchg
outsb
idivl
push
inc
ljmp
pop
out
xor
jae
scas
push
in
push
or
test
lock
lods
mov
xor
mov
and
orl
ljmp
push
mov
cmp
sarb
mov
mov
cltd
das
cmpsl
xchg
stc
fcmove
pop
push
sub
pop
sahf
cwtl
into
adcl
es
push
mov
ja
jb
movsb
cmp
roll
mov
push
mov
rorl
mov
sub
mov
pop
jo
add
lds
repz
sbb
data16
clc
outsl
sbb
shrl
out
pop
cmc
mov
movaps
popf
and
rorl
pop
insl
lods
adc
and
xor
mov
xchg
push
addr16
push
jae
jae
sub
pop
mov
jge
sbb
pop
repz
inc
and
sub
mov
fdivl
lahf
push
add
test
jne
fcoms
lea
push
pop
mov
mov
xor
out
add
jg
mov
je
imul
and
add
pop
std
notl
popa
repz
out
dec
adc
cld
aaa
jno
ss
aaa
lret
fnstcw
inc
jmp
push
mov
scas
cmp
xchg
push
rcrb
and
cld
fsubr
fsubl
andb
add
pop
push
out
or
std
lods
and
xor
aad
jns
jae
call
hlt
pop
sbb
add
loop
fsubs
push
pop
in
or
mov
outsl
xor
cmp
add
idivb
adc
sub
jle
inc
sbb
test
icebp
lcall
stos
call
mov
repnz
cmc
mov
pop
jns
fimuls
pop
xor
lret
pop
fsubrs
cmp
pop
jg
andl
pop
hlt
cmpsl
repz
sub
inc
xchg
in
xchg
stos
shrl
les
inc
out
lods
mov
lret
mov
adc
mov
adc
cmpsl
lret
or
cmpsl
mov
ficompl
inc
mov
ss
aas
add
sbb
jne
ljmp
fwait
data16
mov
push
into
imul
mov
mov
stc
dec
cli
lock
mov
scas
cli
pop
fisttpll
jp
push
cmp
cld
dec
pop
push
add
adc
mov
pop
gs
pop
in
push
push
ret
jmp
lds
out
dec
sbb
ss
rorl
idivl
push
add
pop
sub
test
stos
and
and
mov
leave
add
inc
mov
cmp
lods
lds
cmp
adc
mov
xor
mov
add
sbb
jp
in
mov
xchg
scas
je
cmp
jmp
adc
pusha
xchg
sbb
rcrl
push
loop
push
outsl
xchg
mov
loop
aas
dec
push
xchg
nop
shlb
scas
aad
sub
jp
lcall
push
out
stos
shlb
push
divl
and
add
push
push
push
xchg
lock
and
test
out
sti
adc
sbb
push
dec
loopne
js
xchg
mov
inc
add
push
mov
movl
cmp
pop
cwtl
push
lds
es
mov
test
and
call
xchg
jne
repz
test
int
dec
into
cmpsb
mov
subb
jg
sahf
jb
sbb
cmc
pop
sti
les
aam
push
xor
xor
cmpsb
ret
jle
imul
xchg
bnd
lods
inc
loope
inc
lret
imul
js
jb
jb
nop
inc
ror
mov
xor
cmpsl
sti
or
shld
call
addr16
ljmp
mov
xchg
add
dec
xchg
scas
je
fidivs
pop
mov
test
mov
xchg
push
jae
pop
jmp
or
ficoml
mov
fldcw
cmpsb
sub
sub
inc
jge
or
and
fdivl
ficompl
cltd
scas
jmp
or
or
push
jmp
jecxz
sahf
xchg
xlat
push
loope
sub
repnz
nop
or
fsubrl
jo
stc
dec
push
pushf
jns
cmp
add
pop
orb
clc
xrelease
sbb
cmpsb
inc
cmpsb
mov
inc
push
and
pop
int
and
sub
in
and
idivl
fsubrs
cwtl
sub
inc
cmpsb
cli
xchg
ja
jo
pop
in
cmpsb
in
shl
test
xchg
mov
es
pop
mov
add
arpl
mov
mov
xor
cmc
ljmp
pop
dec
mov
jnp
cmp
jbe
sbb
add
aam
addr16
xchg
xor
mov
aas
cwtl
mov
jge
cmp
add
ljmp
adc
pop
in
pop
addl
dec
insl
or
xor
in
jp
xchg
mov
push
mov
pop
out
dec
push
sub
in
nop
into
andb
pusha
mov
cld
sub
icebp
in
dec
pop
dec
fwait
int3
and
leave
jne,pn
inc
stos
mov
push
aaa
and
cmpl
fdivrs
dec
out
jge
mov
inc
aad
cmc
pop
add
adc
mov
imul
jl
testl
jl
ljmp
jge
cmp
mov
jmp
or
cs
inc
add
int3
cld
push
or
mov
fcomp
xor
pop
aam
mov
xor
testb
mov
std
out
push
xor
and
loope
in
pop
mov
dec
mov
inc
ficomps
push
loopne
xchg
cmp
lea
inc
call
sbbb
ss
mov
into
imul
jnp
rcrl
adcl
movsb
das
outsb
popa
mov
jb
icebp
and
xor
xlat
push
sub
out
xchg
popf
push
jmp
nop
cmpsb
lock
mov
xor
in
xor
test
pop
mov
pop
cli
pop
popa
jle
inc
ret
clc
outsb
das
call
mov
fs
adc
addl
test
push
lret
les
lret
or
push
test
or
inc
mov
movsl
hlt
and
adcb
and
jno
hlt
push
lods
mov
adcl
in
orb
lods
mov
gs
ja
lds
xchg
test
jmp
movb
sbb
lahf
and
lret
out
mov
dec
and
cmp
subl
inc
imul
jae
adc
aas
pop
sub
inc
loope
je
jne
cld
jl
loopne
sbb
cmc
jecxz
imul
xlat
hlt
mov
dec
loope
andb
adcb
pop
xor
push
and
iret
jl
push
lds
out
cmpsl
aas
push
or
filds
int
fxch
mov
sahf
add
jbe
dec
pop
and
push
ficomps
pop
push
lods
push
lods
pop
dec
pop
xor
pop
sub
adc
lret
add
jno
nop
xlat
mov
mov
dec
jge
mov
test
fistl
mov
or
shlb
sbb
cli
in
repnz
jle
mulb
cmp
and
daa
fwait
push
movsl
in
fimull
leave
movsl
mov
dec
push
xchg
lods
out
mov
push
pop
xor
iret
int
jnp
cmpsl
or
mov
add
jecxz
pop
adc
int
ret
pop
cmp
faddl
iret
lret
es
dec
ljmp
inc
cmp
sbb
adcl
xchg
hlt
test
int
xchg
mov
xor
cli
sub
and
jg
pop
insl
push
out
sahf
cmpb
cmp
mov
aas
stos
mov
mov
pop
xlat
jne
sub
xchg
imul
push
fcompl
xor
xchg
pop
cmp
roll
imull
adc
adc
add
mov
cmc
sub
cwtl
mov
cmpsl
xchg
jns
out
movsb
sbb
sbb
out
xor
or
test
lods
dec
mov
imul
xchg
popa
jb
iret
inc
and
xlat
mov
fldcw
jne
add
mov
dec
cmpsl
pop
int
push
rcl
das
loopne
xchg
sub
addr16
jg
mov
dec
cli
mov
pushf
mov
dec
pop
divb
pop
mov
test
cmp
jnp
shlb
fld
cmpsb
cmp
pop
loop
notl
mov
sub
in
push
or
jp
inc
fmuls
jo
inc
push
addr16
fcmovne
jbe
out
push
sahf
mov
pop
lcall
aas
adc
icebp
dec
push
in
imul
std
cmpsb
mov
sub
rolb
xor
subb
lds
loope
je
imul
adcb
dec
icebp
leave
jns
and
xchg
stc
lea
xchg
lahf
jo
add
mov
or
adcb
stc
xor
xchg
pop
jo
or
sub
popf
or
std
aaa
outsl
add
push
ja
xor
mov
fnstenv
cpuid
xor
push
sub
ror
cwtl
sub
jns
fsubl
add
xor
sbb
lods
mov
cltd
ja
stos
mov
cwtl
and
pop
int
mov
dec
movsl
lock
dec
cld
sbb
cmc
push
cmp
mov
xchg
outsb
adc
pop
roll
std
lock
sub
lret
repz
mul
jge
xchg
push
ljmp
ljmp
fbld
rcr
xchg
sub
fadds
repz
fidivrs
sub
leave
dec
or
mov
mov
fbld
xlat
pop
scas
enter
daa
test
dec
sarb
lea
imul
pop
mov
ret
nop
pop
xchg
mov
pop
cmp
ljmp
jae
loope
mov
push
mov
fsub
in
ret
cmp
mov
mov
lahf
dec
pop
in
mov
dec
mov
jmp
adc
sub
lds
addr16
dec
popa
adc
dec
shll
mov
xor
or
test
test
inc
mov
mov
aad
roll
pop
pop
sahf
aas
and
inc
pop
dec
inc
fcomps
adc
jne
outsb
push
aam
add
out
cltd
sub
dec
sub
xchg
daa
aam
push
sbb
rcrb
inc
xlat
sub
xchg
or
insl
mov
or
sub
pop
fsts
shll
xor
aaa
mov
pop
aam
int3
sbbl
pop
in
movsl
std
pop
inc
pop
ss
arpl
je
and
mov
add
sub
xchg
sub
pop
ja
iret
xor
adc
and
pop
gs
or
inc
jge
aaa
mov
js
outsb
inc
repnz
cli
popf
or
adc
inc
inc
xchg
adc
mov
fistl
bound
outsb
inc
push
loop
mov
or
lock
fisubl
push
xchg
push
rol
mov
xlat
rcrl
pop
mov
mov
shrl
cmp
mov
sbb
scas
std
loop
or
xor
xchg
jp
adc
pop
sbb
int3
imull
sub
mov
out
es
incl
sahf
lock
movsb
pushf
in
stos
dec
sub
sub
pop
jno
sub
adc
lods
std
and
adc
mov
push
cli
js
and
stos
lds
andl
mov
je
cmp
push
les
mov
mov
cs
outsl
cmp
adcl
and
pop
pop
fsubrl
mov
mov
std
mov
xchg
add
fucompp
stc
lret
imull
push
xchg
dec
and
ja
aad
in
xchg
testb
rcrl
clc
and
mov
imul
sub
adc
cmp
rcll
iret
cs
std
mov
and
and
lock
mov
outsl
cld
lcall
movsl
inc
cmp
movsl
scas
push
leave
dec
cmp
cmp
mov
jo
out
push
mov
lahf
filds
adc
pop
jno
test
in
mov
xchg
dec
dec
imul
push
jl
aas
sub
aas
cli
push
rcrl
add
adc
call
fldt
out
xchg
jnp
add
mov
ficomps
rcrb
sbbb
jno
fidivs
stos
stos
mov
out
cmc
add
push
push
in
jb
out
pushf
mov
inc
mov
popl
std
jno
outsl
ljmp
xchg
mov
mov
jle,pt
or
out
test
adc
cmc
aam
nop
shl
loopne
fs
scas
stos
ficoml
dec
rorb
fistl
sbbb
or
in
push
ljmp
mov
aad
push
and
push
mov
xchg
jl
les
dec
repz
ljmp
stc
ret
iret
loope
imul
sbb
lods
mov
arpl
adc
inc
mov
sub
orb
cmp
cmp
pop
or
xor
out
jb
sbb
and
add
mov
push
fmul
shlb
xchg
add
mov
clc
imul
insl
fs
and
fdivs
pop
mov
fadd
sbb
or
les
mov
pop
mov
lcall
jl
mov
sub
arpl
outsl
adc
jae
test
xor
sub
dec
and
push
out
xchg
add
cmp
mov
ja
mov
loopne
testb
jnp
cmp
xchg
stc
inc
stc
iret
inc
imul
xchg
pushf
ja
fdivrl
jle
sub
dec
xchg
mov
jnp
shll
inc
mov
popf
mov
popa
inc
rcl
xor
ret
pop
call
cmp
mov
aaa
enter
push
adc
push
mov
adc
test
aas
ficoml
mov
inc
mov
dec
mov
sbb
sti
push
push
jge
push
scas
stc
je
dec
mov
adc
mov
sub
xchg
out
ss
or
sbb
jp
pop
cmp
stos
jb
add
cli
fwait
gs
fs
aaa
loopnew
and
addr16
mov
cltd
cld
adc
js
sahf
pop
xor
jne
jb
sahf
mov
arpl
movsb
hlt
xor
push
insb
add
sti
andl
or
inc
andl
add
ds
movsbl
mov
ljmp
sbb
sbb
loopne
xor
mov
into
imul
movsl
scas
add
jge
add
iret
scas
sub
andb
out
iret
inc
addr16
xor
jbe
leave
aaa
loop
jne
push
rorl
xor
popl
sbbb
or
xor
inc
jnp
out
jns
xchg
cli
movsb
sbb
sub
dec
and
adc
and
mov
sub
insb
adc
cmp
push
cmc
notl
cmp
cmp
jo
test
stc
int
sub
daa
lea
idiv
or
loop
test
andl
loopne
fisubl
mov
xor
sub
repz
jmp
cmp
adc
in
xchg
inc
sbb
loopne
xlat
out
imulb
es
imul
stc
pusha
sub
push
ficoms
sbb
bound
insb
xlat
sbb
testl
jbe
mov
mov
or
loopne
dec
rcrb
out
add
dec
or
mov
call
lcall
jne
sub
push
fisubl
jnp
movsl
mov
jecxz
adc
jl
js
lock
fsubrs
outsl
jnp
dec
shrl
or
lret
scas
stos
jno
fmuls
enter
outsb
push
push
mov
fs
pop
hlt
jne
add
jp
inc
add
pushf
dec
pop
inc
xlat
lea
jno
ljmp
mov
iret
bound
jl
and
adc
push
ja
xchg
xchg
sbb
in
sub
mov
lds
and
push
in
xor
ds
sub
push
int3
test
mov
pop
pop
stc
or
cmp
insl
cmc
mov
dec
gs
adc
inc
pop
fidivl
xor
int
push
fcmovnbe
repnz
imul
xchg
outsl
mov
pop
cmp
lock
pop
xchg
adc
mov
sub
lock
xchg
in
shl
cmp
and
fidivs
test
cmpsb
mov
mov
sahf
rorb
push
inc
mov
jbe
stos
out
popf
stos
in
xchg
aaa
fxch
push
lea
mov
pop
test
div
mov
clc
push
outsl
popa
enter
mov
sub
fwait
out
icebp
cli
shrl
add
jnp
adc
jmp
mov
xor
xor
pop
jno
idivl
shll
popa
lret
cmpb
jo
lret
cmp
sub
sbb
and
pop
sub
push
sub
xchg
xchg
mov
rclb
test
jo
push
mov
test
xchg
xor
and
mov
les
addr16
cs
xchg
in
xchg
dec
ljmp
xor
shl
xchg
into
negl
mov
leave
imul
xchg
pop
mov
inc
and
mov
icebp
lock
sbb
cmp
push
sbb
cmp
popa
xchg
push
rcrl
xchg
in
icebp
cld
pop
icebp
sub
repz
mov
mov
jle
inc
divl
not
dec
adc
sbb
cmp
push
push
cmp
sub
sbb
cmovs
cmc
ss
loopne
idivb
call
or
mov
out
lds
in
push
and
push
mov
jge
imul
loop
lahf
inc
adc
or
call
dec
sarl
pop
mov
scas
cmp
ja
cmp
movsb
push
aam
pop
dec
push
fwait
inc
dec
dec
imull
jnp
mov
sti
fwait
pop
lahf
hlt
dec
mov
pusha
shlb
jge
pop
jne
sub
popf
mov
or
mov
pop
xor
xchg
neg
pop
xor
push
test
leave
inc
insl
adc
xor
leave
jl
add
aad
fists
jmp
or
or
mov
sti
and
test
aaa
adc
jecxz
fdivrp
sub
xchg
mov
xor
xchg
test
enter
jns
dec
inc
cltd
cmc
sbb
sbb
es
into
xchg
sbb
mulb
mov
mov
shlb
xor
sub
jg
push
add
xchg
inc
sub
daa
pop
sahf
pop
jle
pop
dec
std
sbb
imul
xchg
aaa
sbbl
add
cltd
mov
sbbl
fnsave
lcall
mov
outsl
lock
inc
dec
or
jns
insl
push
xchg
sub
or
into
jge
insl
stos
popf
dec
in
iret
insl
roll
dec
je
call
cmpb
jae
lret
xchg
xor
xchg
push
xchg
jbe
loop
mov
lahf
adc
dec
push
pcmpgtb
xchg
subb
mov
lods
cmp
test
cli
inc
stc
out
mov
je
mov
shll
aad
icebp
ljmp
ret
in
test
mov
mov
lods
adc
cld
adc
and
inc
lret
cmp
mov
sub
roll
invlpg
iret
mov
fcoml
sub
xor
movsb
xor
sarl
inc
inc
adc
jp
jno
xchg
es
cmp
in
js
outsl
js
jge
jg
mov
shr
and
fidivrs
incb
fistl
outsl
push
mov
pusha
mov
pop
out
fs
fwait
xchg
sub
xorb
sbbl
add
mov
loope
mov
gs
insb
mov
mov
push
jg
or
test
sub
repz
xchg
and
scas
aam
ljmp
jno
std
inc
outsb
lds
sti
in
push
sub
pushf
xchg
pop
pop
sub
jp
add
icebp
in
das
sbb
lahf
dec
push
sti
xchg
in
pop
movsb
addr16
leave
pop
push
popf
cmp
daa
mov
push
inc
pop
out
or
sar
inc
movsb
add
pop
sub
jp
jae
mull
dec
push
xchg
popf
push
xchg
cmpsb
out
aad
jns
xchg
mov
mov
sbb
inc
test
shrl
jne
pop
xor
pop
and
push
les
fcmovne
fcoms
js
lock
push
les
mov
xor
sub
jae
inc
gs
jp
lret
add
data16
cmpsb
lock
add
clc
loope
xchg
push
adc
stc
jne
xor
ret
fsubrs
shlb
iret
xor
fucomip
push
adc
nop
push
ljmp
pop
push
dec
es
lcall
jmp
mov
lret
scas
in
es
into
push
fistpl
int3
pusha
ss
cmp
repz
sti
or
jp
stos
inc
imull
jbe
das
test
add
leave
mov
inc
leave
fnstcw
shll
jge
push
pusha
jb
popf
sub
xor
or
lahf
sbb
ss
rolb
popa
pop
hlt
rclb
adc
loop
stc
cwtl
pop
cltd
xor
xlat
mov
cmp
cmpsb
std
mov
add
lds
sub
out
je
fs
push
jb
test
add
mov
pushf
neg
xchg
aad
mov
sbb
jl
testb
out
adc
subl
mov
hlt
xchg
jbe
mov
sbb
pop
push
cli
aam
push
addb
frstor
and
ljmp
inc
pop
sti
or
insl
pop
add
pop
xor
inc
out
mov
movsl
sub
add
test
inc
xlat
jge
or
imul
dec
cmp
jg
push
jns
mov
lock
and
cmp
stc
les
push
pop
outsl
add
fsubl
js
or
cmp
movsl
stos
inc
lahf
ret
aad
or
hlt
mov
jl
mov
add
jb
fldl
nop
push
xchg
jp
dec
sub
fdivl
xchg
sub
js
xor
shll
sbb
fisubrs
sbb
push
jno
or
push
pop
mov
adc
enter
out
pushf
cmpsl
sbb
into
mov
mov
xor
sbb
data16
std
aad
adc
outsb
cmpsl
push
and
sub
fwait
sti
jge
dec
push
fcoms
mov
dec
sti
test
dec
push
repnz
xlat
and
xor
fldcw
pop
mov
loop
and
or
add
xchg
shlb
jne
pusha
dec
loope
jmp
jg
imul
xchg
in
xor
pop
cmp
sub
jl,pt
xchg
pop
dec
dec
and
and
je
lods
ja
xchg
inc
out
cmp
test
icebp
sbb
insb
push
xchg
inc
movsl
dec
in
ret
stc
cmp
imul
push
mov
imul
scas
cltd
inc
andb
jae
push
fucomi
mov
stos
push
inc
pop
enter
mov
xchg
iret
popf
mov
adc
negb
add
ficompl
fistps
out
lahf
push
jb
or
inc
cld
and
push
jbe
inc
jg
ja
push
adc
je
cmp
xor
mov
mov
stc
stc
inc
sbb
imul
ret
repz
cmpsl
jle
addr16
clc
mov
sbb
mov
loope
imul
pop
addl
icebp
pushf
xor
ret
push
scas
jns
inc
clc
loope
xchg
cltd
lret
ret
sbb
fcomps
mov
out
push
adc
data16
inc
and
stc
movsl
jle
daa
leave
jmp
aas
rcl
push
add
sarb
push
js
inc
movsb
cmp
pop
mov
inc
mov
jns
cmp
xchg
call
iret
mov
adc
add
inc
sti
and
xor
inc
xlat
dec
aaa
adc
cmp
ret
cmp
mov
sub
fs
cmpsb
mov
fbstp
or
sub
pushf
add
mov
mov
dec
in
cmc
inc
fcmovnbe
push
xchg
xchg
stos
jbe
leave
popa
mov
mov
adcb
fwait
shl
das
mov
insl
aaa
lcall
sbb
enter
pop
sahf
test
or
pop
imul
pop
neg
mov
adc
add
xor
adc
pop
jp
int3
sub
fsubrp
mov
pop
inc
dec
fistpl
scas
add
dec
lret
popa
fbstp
sub
cmp
int
call
push
jl
jge
ja
mov
popa
mov
repz
sub
push
bound
dec
hlt
mov
push
add
mov
test
mov
test
sbb
std
aaa
xor
addl
or
mov
fsubr
push
adc
ror
inc
fld
jmp
jmp
mov
sbb
insb
cmpl
mov
push
sbb
or
xchg
mov
shlb
or
sahf
pop
jno
shlb
js
and
mov
movsb
jnp
pop
aad
insb
sub
xchg
rol
add
icebp
xor
pop
test
dec
fs
lea
ficompl
vcvtsi2sdl
leave
movsb
jne
sbb
jl
into
xchg
dec
insb
aas
std
mov
cwtl
and
mov
xor
adc
pop
push
aas
push
fldl
sti
mov
jp
stos
mov
in
in
pop
out
mov
mov
subl
dec
inc
inc
mov
int
xor
or
nop
stos
mov
sbb
jmp
sbb
jo
insb
jb
cmp
cmp
jns
pop
ret
scas
xchg
mov
sbb
dec
sbb
lcall
push
xchg
mov
ret
in
outsb
pop
jne
mov
mov
in
sbb
mov
les
int
or
repz
ds
out
xor
aam
fisttpll
sbb
jecxz
xchg
fdivl
or
and
imul
xchg
xchg
push
xchg
cmp
xchg
and
mov
dec
pop
dec
or
adc
lahf
jg
ret
pop
xor
shll
stos
jne
shlb
idiv
xchg
and
add
push
out
adc
mov
aam
jge
jne
cmpsl
cmpsb
cmpsb
sbb
adc
shlb
dec
xor
testb
imul
xor
hlt
out
dec
jl
mov
shrb
in
push
imul
push
lods
aam
sub
mov
cltd
addb
ljmp
fldenv
xchg
cmp
in
cmpsb
sbb
mov
mov
push
pushf
xor
imul
loop
shl
sbb
or
enter
shrl
aam
stc
mov
dec
outsb
jno
hlt
mov
fs
aad
inc
sbb
movsl
cli
xor
mov
xor
in
incb
rep
insb
ja
push
test
fidivrs
push
mov
sbb
and
mov
or
xchg
mov
fildl
and
stos
loopne
repz
sub
mov
imul
loop
fsubr
in
pop
jns
xchg
stos
mov
inc
mov
scas
and
adc
test
sub
pop
mov
dec
add
scas
pop
test
mov
test
mov
arpl
push
fildll
jp
daa
jo
dec
add
mov
ljmp
decl
jmp
mov
int3
arpl
movsl
lcall
sbb
call
dec
sub
lcall
sbb
mov
pusha
fwait
mov
insl
loopne
adc
adc
lods
fsubrl
push
jae
loopne
or
dec
add
cmpsb
push
sub
sbb
js
ffree
test
xor
in
and
add
xor
packssdw
imul
push
push
inc
or
iret
mov
fidivl
daa
push
stc
adc
pop
das
inc
ljmp
jb
jbe
dec
push
fists
pop
fcmovbe
repz
lods
inc
fdivrs
das
enter
mov
or
leave
fs
push
and
pop
mov
in
jl
pusha
nop
jns
aad
dec
jns
pop
icebp
mov
outsb
sbb
pop
add
jb
jb
push
xchg
xchg
and
jo
and
pop
loope
pop
mov
in
cmp
pop
cmp
repnz
xchg
push
movsl
add
cmp
stos
jge
fucomp
mov
xchg
inc
push
in
pop
jecxz
out
cmp
shl
lahf
mov
jb
subl
jne
jp
lds
test
je
mov
add
icebp
push
cltd
pop
test
sub
mov
add
into
ja
ret
cwtl
adc
sahf
jne
jnp
or
call
or
addl
hlt
xacquire
or
push
jecxz
jle
mov
mov
or
stos
sahf
mov
scas
mov
push
sub
xlat
outsb
dec
ss
push
je
jb
mov
lock
sbb
es
inc
xorb
and
bound
pushw
or
mov
push
jle
mov
adc
jge
shrl
dec
test
push
test
jb
arpl
fxch
mov
mov
push
mov
inc
sarb
fisubs
add
or
mov
aam
addl
inc
adc
mov
test
mov
mov
pop
das
or
into
xchg
jge
leave
mov
lock
or
aas
push
aas
bnd
xchg
push
cmpsb
jecxz
inc
in
dec
mov
ret
shrl
jmp
inc
xor
inc
add
xchg
sbb
push
add
jo
sti
and
out
add
leave
cld
fidivrl
bound
mov
dec
sbb
daa
jp
sbb
jbe
imul
hlt
cmp
mov
leave
push
and
rcr
jno
jg
lret
add
aam
sbb
pop
es
jnp
jne
mov
int
pop
cmpsl
bound
test
sub
outsl
dec
xorl
stos
xchg
push
aad
jg
pusha
scas
xchg
mov
imul
inc
and
in
xchg
mov
negb
fidivs
mov
lds
test
lcall
cwtl
stos
repnz
inc
inc
testl
scas
cmp
loopne
psraw
imul
xchg
lret
arpl
mov
arpl
mov
in
faddl
sub
inc
sbb
mov
mov
inc
mov
mov
leave
xlat
add
inc
stos
sahf
xor
sub
pop
jecxz
xchg
insl
mov
xchg
imul
hlt
lds
cld
sub
pop
pop
sbb
mov
mov
ds
and
add
les
mov
push
enter
subl
pop
js
push
lahf
test
cld
mov
mov
cmp
scas
addl
cli
xchg
ret
add
adc
fists
pushf
mul
add
aaa
test
cld
imul
in
daa
test
sbb
je
bound
jge
js
shrb
in
clc
jmp
leave
sbb
dec
mov
ror
je
icebp
test
lahf
jae
mov
fnstenv
or
movsl
por
mov
xlat
imul
xor
xor
lret
push
clc
cli
push
sub
and
ror
or
stos
shlb
inc
pop
repnz
scas
inc
shl
push
dec
xchg
repnz
dec
adc
mov
sub
add
aad
call
mov
pop
stos
inc
xlat
std
sti
jnp
imul
iret
xchg
out
jg
lods
sub
scas
rcl
lret
aam
ret
mov
adc
sub
sbb
xchg
dec
std
shll
in
test
push
movsb
gs
push
out
jle
xor
outsb
inc
inc
or
mov
bound
adc
sbb
negb
imul
or
jb
pop
add
mov
dec
xchg
stos
sbb
xchg
pop
adc
mov
inc
inc
out
and
inc
or
or
iret
negl
sub
test
dec
lahf
aas
notl
adc
jg
add
sahf
or
push
adc
xlat
push
cmpsb
and
xchg
icebp
or
aam
xchg
push
repz
xchg
imul
bnd
movsb
sbb
and
push
jecxz
popf
push
fsubrp
scas
xchg
je
dec
js
mov
popf
pop
mov
dec
xor
dec
jl
adc
cmp
push
outsb
fsubr
lahf
jno
je
mov
cld
outsb
jae
psubw
ja
scas
and
jmp
mov
jmp
outsl
jge
cmp
hlt
dec
notb
push
icebp
mov
mov
sbb
ss
je
dec
cmp
movsl
ret
and
or
mov
aam
sbb
mov
jne
push
movsl
adc
dec
int
popf
lods
stc
add
cld
lcall
in
lds
mov
push
xlat
fnstcw
or
loope
or
mov
test
shr
sub
rcll
lock
mov
or
xcrypt-cbc
cmpsl
push
inc
add
jns
stos
stos
xchg
fwait
lods
fcos
icebp
adc
dec
outsl
jns
cmp
mov
jp
push
push
iret
cmpsb
push
push
fcmove
das
icebp
arpl
xchg
insb
mov
dec
pusha
out
fsubrp
out
mov
ret
xor
sbb
cli
pushf
in
jecxz
dec
leave
cmp
add
inc
mov
test
sub
aas
into
push
inc
cmpl
mov
jno
repnz
inc
icebp
mov
inc
daa
add
dec
inc
jg
or
mov
fdiv
inc
pusha
xorl
dec
mov
inc
sahf
inc
xlat
vmwrite
lock
sbb
js
movsl
jae
inc
mov
dec
stos
sahf
or
pop
cmc
or
jecxz
jl
push
mov
clc
outsb
sub
movsb
loopne
adc
or
cmp
pop
in
into
fiaddl
and
fcompl
out
fisttpll
in
cli
and
aaa
mov
loopne
mov
and
addr16
insl
imul
sub
gs
and
sbb
jnp
push
jl
adc
in
jle
sbb
sbb
xor
insl
mov
lahf
das
pop
ret
push
sti
das
pop
hlt
push
mov
mov
cltd
jb
cwtl
data16
loopne
out
push
inc
sarb
jo
shlb
xchg
loope
and
mov
mov
js
sub
sub
push
movsl
mov
jb
subl
xchg
xor
mov
cmp
loope
out
mov
mov
sbb
out
or
mov
pop
push
mov
sbb
dec
lahf
ss
pop
ds
gs
dec
dec
out
cmp
sub
mov
fs
cmp
mov
xchg
loope
dec
sbb
xchg
jl
push
cs
mov
test
lcall
and
mov
mov
and
push
jmp
cwtl
dec
mov
push
ljmp
mov
mul
jo
inc
pop
dec
scas
mov
jecxz
outsb
lods
int3
pop
outsb
inc
mov
cwtl
or
idivb
shll
insb
jl
stc
add
or
std
xchg
inc
pop
loop
inc
mov
pop
fs
test
dec
ds
repz
mov
sub
rolb
add
add
test
xchg
add
hlt
dec
pop
std
xchg
mov
mov
sub
hlt
sub
lea
sub
xor
aaa
nop
mov
mov
add
adc
xorb
and
lret
bound
sbb
popf
and
pusha
fistl
sahf
and
fnstsw
mov
lock
add
dec
jl
add
ss
nop
or
dec
aaa
cmovle
loop
ljmp
jge
pop
stos
push
adc
and
bound
testl
cmc
sbb
outsb
adc
xchg
and
cmc
sbb
rclb
xchg
clc
stos
cli
cld
mov
mov
sub
xlat
repz
sti
xchg
sbb
pop
push
aam
movsb
cmp
pop
lds
pushf
and
pop
aas
push
pop
insl
adc
cmp
add
loop
rcrb
push
inc
mov
or
scas
sarl
fiadds
lcall
aaa
fsubs
adc
mov
call
pop
cmp
sbb
add
sbb
clc
dec
dec
inc
inc
test
subl
adc
out
fdivr
lods
mov
icebp
mov
aaa
cmp
mov
mov
dec
mov
jo
mov
cmp
stc
jl
sub
inc
test
inc
pop
in
inc
inc
push
cli
adc
xchg
es
dec
mov
inc
fsub
add
mov
out
rorb
mov
pop
jmp
mov
repz
sub
mov
lds
jg
push
icebp
sub
add
scas
clc
iret
pop
loop
push
insb
sub
xchg
or
cmp
and
xor
sbb
and
adc
daa
inc
repz
push
call
shrd
and
jae
and
stos
jg
pop
lea
out
fiadds
call
mov
int3
adc
or
loop
scas
mull
test
lods
popa
les
add
xchg
xlat
cwtl
mov
out
rcrb
shrl
xorl
scas
and
or
pop
mov
cmpsb
add
pause
mov
sub
mov
lahf
test
pop
mov
pusha
ljmp
stos
repz
sti
xchg
fstl
test
sbb
cmpsb
or
push
inc
loop
and
in
mov
cmp
ret
mov
or
jnp
mov
mov
daa
cwtl
mov
mov
out
mov
scas
dec
repnz
push
movsl
sbb
loope
xlat
out
sub
xchg
jge
mov
add
xor
jbe
xchg
int
mov
xor
lods
test
or
out
sahf
or
fs
mov
push
jmp
nop
push
pop
icebp
dec
loop
into
inc
popa
sub
imul
sub
or
cmc
push
pusha
adc
xchg
enter
inc
mov
hlt
outsb
jnp
xchg
ljmp
lods
add
xor
das
xchg
dec
jns
repnz
jle
or
push
cli
push
push
xchg
movsl
out
push
and
out
stos
leave
mov
mov
notl
shlb
lcall
in
jmp
sub
add
jb
xor
in
sbb
rcl
cmc
push
out
mov
mov
outsb
and
in
pusha
jge
mov
das
sti
ret
lret
push
es
loop
jbe
sbbl
repnz
dec
xchg
sub
push
dec
mov
mov
rcrl
dec
dec
adc
leave
pop
jge
push
jmp
in
imul
mov
lds
pop
jno
push
push
ja
push
stos
sub
roll
pop
mov
push
and
jb
pusha
andb
push
mov
sbb
mov
rorb
imul
push
lea
sbbl
lds
sub
xchg
xchg
addb
std
sub
jp
pop
pop
stos
mov
xchg
xchg
jle
sar
cs
loope
jge
dec
testb
push
pusha
jecxz
cmp
xor
mov
ja
jg
jne
push
mov
mov
or
pop
out
mov
in
fdivs
xchg
mov
jno
and
mov
push
dec
aas
push
call
fsubrs
testb
fnsave
imul
xchg
lea
adc
dec
add
or
inc
cs
ds
push
movb
outsb
lret
pushf
addr16
mov
fmuls
inc
pusha
loope
fisubl
lods
and
mov
ficoms
adc
arpl
xchg
scas
or
scas
mov
icebp
push
lods
mov
xchg
mov
jle
add
adc
and
xchg
sub
dec
sti
dec
mov
adc
inc
bound
test
sub
add
notl
sub
in
dec
cwtl
mov
in
in
lea
cmp
add
inc
adc
xor
pop
xlat
loopne,pn
data16
test
jne,pn
aam
fimull
sbb
stos
pop
lods
push
fwait
inc
mov
push
addl
sub
ror
ss
jne
or
xor
js
shrl
adc
jl
es
xlat
pop
into
lahf
lds
dec
push
daa
dec
add
and
jo
jecxz
es
mov
mov
ds
lret
push
lds
outsl
sbb
leave
out
xor
push
scas
jb
mov
lcall
push
push
mov
dec
cmp
sbb
mov
hlt
xor
add
jl
cli
lcall
xchg
push
dec
insl
cmp
mov
sub
jne
or
fisttps
mov
in
test
xorl
sbb
dec
loop
lret
incl
cmp
pop
mov
inc
popa
test
lods
add
sahf
orl
xchg
pop
push
jnp
in
aas
mov
dec
lahf
and
mov
cmpsb
sub
adc
enter
cmpsb
inc
imul
fisubrl
adc
jg
icebp
cmp
jmp
add
orb
and
sbbl
call
mov
rorb
rcrb
test
add
in
lds
xchg
dec
mov
repnz
cltd
lods
cwtl
pop
dec
jl
and
xchg
lea
push
aam
outsl
push
mov
imul
imul
jno
xchg
mov
ret
insl
jb
jmp
mov
dec
inc
ds
in
lret
mov
fnstenv
test
out
test
inc
xor
stc
je
fmul
push
lret
inc
out
cmpsl
js
pop
div
fldl2e
nop
das
mov
jbe
lock
out
jo
pop
scas
int
pop
or
adc
pop
adc
in
jp
fwait
push
jbe
push
jge
data16
inc
xlat
out
push
mov
cmc
push
bound
mov
movsb
fcmovnbe
pop
cmp
adc
mov
out
mov
fiaddl
scas
or
lcall
aam
cs
add
push
mov
test
pop
rol
mov
pop
imul
mov
and
jp
ret
pop
dec
jecxz
ljmp
push
mov
das
cmp
nop
mov
jge
push
out
repz
xor
cmp
sbb
dec
jecxz
jno
test
lcall
aas
mov
sub
test
sub
inc
add
outsb
xor
adc
aad
notb
test
jae
adc
fnstcw
and
add
icebp
fadds
jg
pop
cmpl
pop
movsl
mov
lret
adcb
movswl
cmpsl
xchg
jbe
fimuls
xchg
cmpsb
and
jle
mov
xchg
imul
pusha
adc
cltd
sbb
mov
cmc
outsb
test
jp
imul
sub
xchg
xchg
sub
out
mov
sub
pop
adc
mov
push
mov
rorl
pushf
sti
ss
rep
sbb
ret
xchg
add
in
std
push
xchg
pushf
incl
push
xchg
fnsave
sub
leave
repnz
xor
adc
popf
dec
addl
jg
xor
mov
shrb
push
nop
add
sub
lret
test
std
out
pop
sbb
imul
mov
inc
pop
cmp
jb
inc
xlat
adcl
mov
nop
lea
adc
cmc
adc
cmp
pop
push
je
addr16
mov
lret
cs
sbb
jo
sbb
push
aam
into
cmp
stos
sti
inc
fadd
mov
xchg
cwtl
pop
mov
mov
xor
dec
and
std
jo
ror
dec
add
icebp
mov
dec
push
jbe
jne
jo
mov
mov
in
jle
test
dec
jns
shrb
push
sahf
insl
cmpsb
lahf
in
das
or
rorl
push
xor
sbb
jo
das
add
es
jbe
inc
pop
cmp
push
and
cmpsl
and
cmp
jno
out
ljmp
lods
ja
add
jno
jb
cmc
scas
pushf
jnp
into
iret
mov
shlb
jno
popa
andl
dec
movsl
mov
pop
outsl
enter
mov
jae
out
sbb
gs
shlb
inc
and
int
rorb
frstor
movsl
sub
mov
add
push
ret
jb
arpl
sub
inc
push
or
add
loopne
ret
inc
mov
lock
imul
adc
cmp
gs
and
inc
xlat
mov
call
mov
rcrl
push
push
iret
jle
repz
insl
stos
adc
and
sbb
pop
jecxz
sbb
clc
inc
fsubrl
js
sub
mov
frndint
lcall
push
fists
sbb
test
push
js
xor
das
out
adc
aam
inc
arpl
push
jb
mov
mov
and
mov
and
sbb
xchg
jge
add
mov
movsb
dec
pop
pop
mov
xor
sbb
stos
outsb
and
pop
aad
and
pop
lret
add
jo
data16
fwait
shrl
into
pop
jbe
and
mov
fldl
out
into
enter
mov
sarl
and
push
inc
jmp
andb
xchg
lahf
frstor
out
les
scas
jge
jmp
mov
rcrl
je
push
xor
imul
or
pop
mov
sahf
loopne
shl
imul
jne
xchg
aam
in
pop
inc
sub
pop
aaa
push
imull
push
xchg
sbb
xor
subl
lea
fidivl
dec
add
xchg
test
lcall
add
sarl
scas
inc
out
sbb
adc
fadd
jge
test
int3
push
mov
test
fdivl
jns
sbb
mov
test
sti
pop
mov
ljmp
lcall
add
sbb
xchg
test
xchg
dec
stc
inc
adc
sub
aad
test
or
push
xor
inc
fbstp
sub
lret
mov
jno
lock
fnstenv
and
and
outsl
jge
mov
add
jne
cmpsb
push
dec
aad
push
sti
jle
dec
daa
sub
push
pop
or
cmp
dec
lcall
sub
adc
icebp
mov
and
out
aas
js
push
cs
jno
inc
scas
ds
std
inc
sub
lret
jg
popf
push
and
pop
loop
gs
sub
sub
or
mov
mov
or
inc
les
orb
push
lret
into
mov
fildl
and
jge
aam
pop
xchg
icebp
lds
xlat
insb
dec
push
scas
adc
dec
iret
sbb
les
cmc
jnp
dec
pop
add
ret
and
sub
ficoms
dec
shll
pushf
inc
ja
icebp
push
aas
test
jbe
fiadds
mov
mov
mov
xchg
mov
cld
dec
in
sha1rnds4
inc
add
add
ja
cmovae
sub
push
pop
nop
push
jb
adc
stos
jmp
mov
fwait
sbb
mov
xchg
dec
loop
setge
mov
les
fidivl
push
sbb
inc
xor
adc
pop
test
mov
mov
jb
jno
mov
cmpsb
loop
and
or
push
cs
cmp
sti
push
add
inc
repnz
dec
push
inc
ljmp
call
jns
cmp
push
and
push
sbb
rcl
pop
test
add
mov
push
es
sbb
call
xor
jle
test
cld
add
or
ret
or
call
test
addb
icebp
popf
into
dec
pop
adc
or
int3
push
mov
adc
sbb
jmp
jbe
sbb
dec
loopne
mov
or
movsl
add
push
jmp
inc
mov
mov
mov
push
lret
outsb
push
and
aad
xor
adc
rclb
xchg
fsubs
mov
ljmp
jbe
dec
in
testb
xchg
xor
dec
bnd
mov
mov
xrelease
push
lahf
pop
das
cli
iret
sbb
gs
xor
insl
jl
mov
mov
int3
cmp
lock
in
add
out
aad
push
iret
bound
and
inc
mov
ficoml
imul
fsubrp
add
fwait
mov
negb
or
jge
fs
pop
lods
sub
fdivs
xlat
scas
je
sbb
enter
fsts
in
pop
in
mov
jg
aas
and
sub
sub
mov
fisttpl
fwait
shl
xor
and
pop
jb
push
data16
data16
pop
das
repnz
cmp
adc
adc
xor
jb
xor
mov
aad
stc
bound
ja
orb
pop
add
stos
pcmpeqb
cmp
mov
jg
call
jge
insb
mov
fstpt
push
jmp
or
test
cmpsb
icebp
stos
stc
movsl
in
int
fucom
lret
shrb
add
mov
pop
addr16
in
loope
mov
or
mov
repz
mov
fsubl
and
sbb
sti
jae
mov
push
adc
ficoml
add
cmpsl
xchg
or
push
jg
push
push
pop
cmp
cmpsb
sbb
into
adc
test
mov
sti
loopne
adc
les
cmp
cmpsl
lret
out
jmp
ja
ds
lock
movsb
push
std
inc
pusha
xorb
add
or
xchg
imul
sub
insl
jge
jp
mov
scas
xchg
icebp
mov
addl
mov
es
mov
fnsave
sub
xchg
xchg
cmc
in
lret
ds
pop
pop
ret
and
add
movsl
cmp
mov
jbe
shll
jle
xor
and
nop
test
test
ja
inc
insl
testb
stc
dec
fdivs
xchg
cmp
mov
ja
jae
add
xchg
aas
sbb
jl
cmpsb
jns
mov
in
jnp
data16
mov
sbb
fnstsw
out
push
aad
in
ja
scas
pop
cmp
mov
lods
inc
cmp
inc
std
mov
scas
jg
hlt
jb
jmp
push
out
addb
out
jne
pop
fsub
stos
mov
fadd
push
pop
shll
push
int
mov
mov
mov
popa
mov
addb
mov
lods
mov
mov
mov
cmp
std
sbb
mov
or
pop
adc
xchg
or
push
aaa
jg
sub
sti
pop
aaa
fbld
xchg
outsb
fs
mulb
in
lods
ret
and
adc
push
jge
test
mov
dec
mov
and
shrl
add
sub
mov
lahf
cmp
movsl
push
cmp
jo
jno
lds
dec
dec
dec
push
and
cltd
iret
and
sub
mov
dec
push
jae
adc
pop
fdivs
int3
cmp
lcall
pusha
push
aam
daa
xchg
ss
lds
shrb
insl
adc
leave
sbb
mov
pop
adcl
inc
ja
jmp
or
popf
mov
ljmp
ss
add
dec
popf
add
jp
push
pop
and
push
push
dec
adc
xor
inc
sbb
in
inc
fnstenv
push
outsb
mov
mov
dec
shl
inc
xor
inc
mov
pop
lcall
jecxz
xchg
dec
das
ret
jl
mov
aad
pop
movsb
lret
mov
call
and
fdivl
std
int
pop
lds
jge
mov
pop
cmp
int
mov
divb
push
jmp
xchg
std
sub
xchg
inc
fld
cltd
mov
jae
fucomi
arpl
mov
mov
mov
adc
ret
fldenv
cmc
sub
push
testb
pop
aas
and
bnd
je
adc
andb
stos
clc
fwait
out
call
sbb
mov
in
out
mov
jne
adc
inc
inc
dec
cmp
dec
hlt
sub
lret
lret
rcrl
in
push
lahf
xor
in
pop
das
sbb
loop
sub
cwtl
jge
in
xor
sub
daa
pop
or
or
mov
add
aad
jmp
push
xor
pop
xor
inc
decb
fcompl
mov
pop
ds
mov
adc
add
sub
mov
ljmp
aas
push
pop
and
mov
fimuls
mov
push
loop
adc
xchg
jb
dec
dec
xor
movsb
lahf
sub
inc
sbb
xchg
repnz
mov
test
hlt
imul
lock
jnp
scas
adc
sub
cmp
mov
pop
addr16
pop
and
sbb
int3
loop
sbb
gs
out
and
fs
ds
mov
popf
xor
es
outsb
mov
ja
clc
inc
iret
imul
shll
inc
jecxz
inc
int
dec
iret
cmp
out
insb
and
sbb
ret
hlt
cli
data16
add
xchg
push
scas
cli
mov
das
cmp
mov
jl
mov
add
test
xchg
test
int
test
mov
cmp
push
xchg
cmc
mov
jne
int3
out
fs
cmp
cmpsl
pop
lods
aas
or
pop
cmc
xchg
pusha
pop
shlb
test
loopne
adc
sti
sbb
xchg
mov
cmp
pop
xorl
cmp
popf
in
sub
push
and
sub
adc
jl
popf
cld
xor
addl
icebp
mov
mov
not
rorb
jg
adc
mov
call
cmc
jle
jl
pop
add
hlt
add
sub
int3
xchg
or
jg
ja
cbtw
sbbl
arpl
sahf
popa
imul
rcrl
scas
add
sbb
ret
das
shlb
or
xchg
andl
cmp
dec
mov
ret
push
gs
xor
adc
out
aas
xchg
jge
lea
adc
pusha
xor
cwtl
test
popf
lods
movl
testl
repz
mov
xchg
adc
sub
mov
jno
push
hlt
mov
xor
fcompl
decb
jns
push
fwait
pop
pop
mov
fs
test
mov
jecxz
dec
mulb
dec
aam
xchg
daa
or
fwait
ja
pop
push
jl
mov
mov
push
imulb
push
call
lods
lea
and
pop
push
push
jb
out
dec
push
mov
gs
xchg
pop
jne
in
test
ds
pop
sbb
mov
movsb
out
pop
mov
int3
mov
mov
inc
cmpsl
mov
enter
pop
adc
adc
jae
mov
imul
add
movsl
test
jo
shll
pop
cmp
test
jmp
dec
out
jmp
outsb
rcl
xchg
sbb
cmpsb
dec
fists
mov
or
mov
sbb
mov
fcmovnb
pop
shrl
in
imul
mov
out
xchg
mov
dec
lods
mov
shlb
add
test
outsb
ret
mov
sbb
js
mov
and
jg
pop
cmp
pop
sbb
mov
cmp
sbb
jbe
fisubs
sub
pop
inc
cmp
outsl
lods
mov
pusha
push
adc
lret
test
out
jnp
imul
lods
mov
sbb
jle
inc
pop
outsl
in
sbb
push
mov
icebp
cmp
dec
and
test
pop
lds
adc
push
dec
adc
mov
out
jl
ret
rcr
lea
ds
mov
or
jp
xchg
and
in
pop
push
jne
addl
scas
add
fistpl
push
jno
add
addb
int
out
xor
in
mov
js
enter
stos
push
mov
std
test
std
fstps
inc
adcb
test
enter
fstps
ret
ja
sub
cmp
pop
adc
pop
xor
fcomps
popf
dec
mov
insl
orl
adc
shl
es
aam
pop
out
xchg
push
mov
lea
jns
inc
in
bound
cmp
mov
fldl
iret
sub
mov
jle
and
insl
mov
push
inc
mov
iret
inc
sbb
mov
nop
mov
imul
fimull
stos
test
pop
xor
mov
push
iret
ljmp
pushf
cli
mov
aad
jbe
sbb
fisttpl
rol
out
out
aam
loop
jmp
dec
sub
sub
rolb
lds
insl
fidivl
mov
das
inc
dec
mov
popa
aaa
into
push
mov
mov
cmc
dec
int
jo
nop
or
and
cmp
jmp
popl
push
sarl
mov
push
mov
pop
cld
xchg
hlt
mov
fmuls
cmp
dec
mov
push
repnz
popf
push
dec
dec
inc
xchg
in
push
xchg
cmp
mov
or
mov
sbb
xor
xchg
jno
repz
mov
in
scas
sbb
repnz
and
out
mov
and
aas
xor
xorb
mov
mov
sbb
mov
push
or
pop
daa
sub
adc
cld
and
xor
popa
test
outsb
and
rorl
sub
xchg
sub
aaa
scas
call
mov
jle
pusha
mov
jle
leave
es
ljmp
inc
inc
dec
jmp
imul
push
stc
nop
cmp
test
add
mov
fdivl
test
adc
mov
add
out
fwait
mov
push
call
cmp
sahf
fdivr
pop
adc
push
mov
xor
movsl
push
ret
sbb
cmovae
aas
sub
xchg
or
and
dec
sahf
jmp
mov
xor
cmp
xor
inc
fcmove
inc
xchg
xor
out
dec
fiaddl
or
mov
add
pop
dec
lds
sub
scas
sbb
push
pop
pop
fsubrl
pop
mov
stos
inc
test
or
test
rcll
jb
push
sahf
add
call
mov
jbe
and
jno
adc
mov
push
pop
cmp
rolb
mov
stc
mov
or
mov
sub
xor
into
push
daa
daa
aad
add
les
xchg
stos
cld
pop
imul
sbb
int
scas
push
sub
call
lods
call
pusha
mov
nop
leave
out
pop
gs
sub
mov
jnp
add
push
cmp
mov
xchg
cwtl
in
in
pop
jbe
xchg
fsubs
les
not
imul
clc
and
dec
repnz
mov
movsb
inc
loope
icebp
cltd
cmp
rcll
aad
lods
add
sub
or
xchg
push
out
iret
data16
inc
jne
jae
mov
stc
int3
cmpsl
inc
jmp
jecxz
push
sbbl
cwtl
xor
lret
adc
or
and
pop
jmp
fldcw
dec
push
jl
pop
sub
cmc
cmp
aad
lret
push
pop
jl
dec
mov
bound
in
test
xor
fwait
arpl
ss
mov
add
aas
sbb
xchg
aad
ret
mov
sbb
incb
lcall
mov
pop
fldenv
mov
or
mov
rcr
mov
sbb
and
ss
imul
les
push
cmp
sbb
cmc
push
in
mov
mov
hlt
jmp
pop
mov
xor
sub
shlb
xchg
jne
push
cmp
mov
test
inc
and
or
add
ljmp
add
add
bound
xor
je
and
imul
sbb
rcrl
and
add
inc
push
xchg
out
or
repnz
fidivl
mov
inc
pop
push
xchg
jp
test
fldenv
xchg
mov
pusha
int3
pusha
push
mov
and
popf
add
xchg
mov
lea
pop
and
xchg
decl
and
xchg
cmp
xor
fsubrp
xor
loopne
xor
decb
test
sub
inc
mov
add
push
mov
and
aam
inc
popa
push
mov
rol
shr
pop
push
and
pop
push
cmp
mov
adc
test
out
popf
popf
sahf
jo
adc
in
ja
xor
ds
pushf
psraw
pushf
imul
cld
inc
pop
outsb
test
push
jmp
dec
mov
loope
xchg
fidivrl
push
pop
jns
dec
stos
sub
dec
jbe,pt
cs
sbb
mulb
insl
in
sar
xchg
jns
jmp
mov
xor
mov
xor
jmp
or
js
divb
add
popf
leave
mov
and
stc
mov
imull
sub
outsb
cli
push
xchg
out
es
cli
out
test
inc
movsb
popa
rolb
sbb
push
xor
aad
jb
in
insb
mov
and
cmp
mov
cmp
fdivr
ss
add
add
gs
fldcw
fidivs
cmp
mov
jns
fimull
js
sub
jecxz
aad
lcall
in
pop
lahf
rcl
sbb
mov
sub
stos
mov
pop
icebp
xchg
inc
push
das
jns
or
aaa
js
in
dec
push
push
ja
push
out
add
imul
enter
cmp
gs
xchg
and
add
fsubr
je
in
jp
mov
dec
sbb
fsubr
pop
jbe
mov
aaa
lock
pop
fnstenv
jg
jns
jmp
jle
repnz
jp
out
pop
pop
adc
cmp
movsb
shlb
idivl
imul
adc
pop
mulb
test
aam
pop
out
jp
adc
cmc
rdmsr
leave
insb
pop
ret
ret
push
call
les
dec
popa
dec
jae
dec
push
adc
xlat
mov
and
adc
les
sub
mov
pop
fstpl
sarb
daa
jne
out
lods
push
push
cmp
and
dec
adc
popa
faddl
fdivl
clc
xor
sbb
adc
adc
mov
out
pop
sbb
mov
mov
es
adc
movsb
repnz
cld
scas
leave
add
and
ret
inc
loopne
inc
jae
test
cmpsb
dec
push
pop
int
scas
aam
fcoms
cmp
sbb
xor
jp
mov
push
ss
rorl
outsb
cs
push
shll
mov
xchg
xor
mov
push
ficoml
cmp
sub
out
cmp
or
cmp
jb
ja
or
mov
jle
pop
mov
cmpsb
std
xchg
xchg
and
dec
mov
adc
xor
mov
sahf
lds
mov
xor
and
add
pop
mov
pop
xchg
call
adc
jbe
mov
jmp
adc
out
fwait
daa
into
adc
ljmp
sbb
pop
add
shlb
push
pcmpeqw
add
xchg
pop
jecxz
adc
cmp
push
push
movsb
cmp
addr16
movsb
out
sub
adc
mov
arpl
aas
ljmp
pop
cli
insl
lods
dec
mov
scas
out
mov
lds
xor
enter
cwtl
ret
in
xor
jae
dec
sub
jg
divb
and
jg
data16
repnz
or
dec
rorb
push
nop
jle
outsb
or
mov
fbstp
das
or
inc
inc
fdivr
add
mov
mov
push
lea
cld
xchg
call
push
sahf
rcr
cmp
dec
jge
sub
push
scas
repnz
js
xor
jno
aaa
lret
fildll
ja
mov
adc
mov
gs
sbb
popa
push
sub
bound
shlb
dec
test
ljmp
xchg
push
out
fsubrp
inc
xchg
cmp
xor
and
aad
sbb
push
or
jae
adc
sbb
pushf
push
out
sbb
popf
js
dec
ss
test
ret
sarl
dec
mov
mov
fincstp
loope
es
loopne
inc
cltd
push
cmp
imul
mov
int3
cmp
jns
inc
jmp
fsubl
dec
fcmovu
and
fidivrs
add
in
jge
sub
xor
inc
xor
add
push
int3
fwait
and
dec
and
sub
push
adc
popl
loope
xor
jp
jmp
aad
pop
nop
sub
rcll
lret
bound
cwtl
loopne
lret
fistps
adc
push
loop
scas
ret
xlat
out
sub
dec
daa
sbb
addb
add
mov
mov
scas
and
inc
adc
mov
pop
loopne
lds
jecxz
cmp
test
into
gs
ret
adcl
mov
push
sahf
sbb
mov
cli
mov
sbb
pusha
loopne
push
adc
sbb
jb
pushf
sub
inc
mov
add
push
sbb
add
decb
inc
jmp
sbb
popa
dec
sbb
push
sahf
jnp
popl
cwtl
decb
jnp
and
in
push
sub
out
fistl
ss
loop
scas
movsl
push
popf
add
das
mov
les
sahf
outsl
test
adc
mov
mov
sub
mov
out
daa
in
in
pusha
fcmove
jle
ja
je
je
leave
stos
jecxz
pop
out
fistpl
cmpl
xchg
lock
inc
inc
mov
sbb
js
mov
lock
push
out
xor
jns
cmc
mov
push
mov
fidivrl
cmp
jge
sbb
jge
inc
les
xchg
sbb
int3
loopne
mov
sub
addr16
lods
nop
dec
xlat
mov
ds
jno
rcr
mov
lahf
popa
outsb
scas
push
pop
mov
cld
jbe
retw
adc
dec
gs
mov
ret
ds
sbbl
dec
pop
push
lods
or
push
lahf
stos
mov
mov
stc
sub
daa
pop
inc
add
divb
ret
dec
jo
cmp
adc
stc
pop
imul
mov
je
xlat
cmp
popa
inc
pop
dec
cmc
scas
sub
ret
nop
mov
pushf
mov
lods
pusha
loop
mov
pop
sbbb
jb
cmpsb
cmpsb
xor
jmp
adc
popf
dec
inc
jns
and
dec
repnz
ret
cmp
insl
adc
ss
sub
ds
jecxz
cmpsb
dec
jae
stc
push
out
jecxz
cs
jno
add
hlt
xchg
addr16
jae
xchg
out
xor
pop
mov
inc
inc
or
mov
bound
push
fcomps
mov
mov
int3
shr
rcrb
adc
pop
xor
inc
je
dec
dec
sti
aaa
mov
fwait
cmc
fwait
inc
insl
jae
push
jbe
stos
cmp
cmp
inc
push
enter
push
out
xchg
dec
xchg
ret
sbb
pop
shrl
mov
dec
lods
inc
jo
sarl
and
push
popf
cmp
adc
movsb
xchg
pop
sbbl
lret
sbb
and
mov
cli
push
fsts
adc
das
sbbl
fldenv
outsl
jbe
jmp
movsb
cmp
int
mov
xchg
lods
popa
mov
jecxz
rclb
shr
roll
sets
jbe
sub
or
push
fbstp
xorl
sub
filds
pop
fwait
or
pop
popl
shll
jecxz
dec
or
sub
adcl
mov
rclb
in
xchg
addr16
mov
dec
loope
xchg
xor
mov
or
adcb
lcall
cld
mov
xor
sbbb
adc
jl
stos
pcmpgtd
lock
or
mov
lahf
andl
les
push
jns
icebp
sbb
xchg
mov
add
mov
mov
ret
scas
out
mov
gs
ja
pop
cs
fcompl
decl
lret
xlat
loopne
shl
in
add
sub
cwtl
int3
imul
or
sbb
pop
shrb
and
jnp
jo
sbb
clc
inc
loope
ds
nop
push
sub
pusha
xor
les
cmp
or
cmc
adc
stos
leave
fs
sbb
adc
jle
adcb
jmp
mov
pop
xchg
sub
xchg
fnstenv
adc
test
les
adc
mov
push
dec
pop
mov
push
mov
loop
test
scas
cmp
out
pop
sub
pop
outsb
sbb
loope
out
or
lea
adc
adc
sarl
xchg
mov
inc
add
push
cmpsb
or
push
dec
es
xor
fidivs
push
inc
cmp
jne
sbb
in
insl
in
cmp
add
mov
daa
in
rcrl
inc
fistpll
add
inc
lret
scas
daa
fldl
mov
test
mov
cwtl
popa
andb
pop
ljmp
pop
sahf
xor
lock
arpl
data16
mov
in
cmp
sub
in
out
sahf
jl
imulb
es
mov
xchg
ja
insb
add
enter
lret
dec
pusha
fildll
fdivrl
ja
in
in
dec
dec
lret
lret
es
jp
cs
cmp
addl
mov
and
and
inc
lcall
shl
data16
dec
sbb
adc
dec
or
js
mov
sbb
arpl
push
add
adc
addr16
das
in
or
dec
cli
pushf
loope
insb
jle
js
mov
push
cmp
cs
fstps
cmp
inc
mov
cwtl
std
lret
and
or
push
mov
call
es
push
push
cmpl
cmp
paddusb
inc
mov
mov
nop
xor
cmp
test
cmc
fsubrl
out
mov
cltd
jmp
int3
popl
ficoml
or
fnstsw
popa
js
inc
insl
cmpb
mov
mov
rcr
xchg
add
popa
inc
add
add
mov
mov
jns
or
and
and
out
and
push
inc
fiaddl
or
mov
add
inc
hlt
subb
sarb
dec
loope
pop
scas
mov
adc
call
fs
jnp
xchg
fisubrs
dec
fsub
js
jns
rol
aas
shr
jo
pop
out
or
in
sub
lret
mov
cmp
push
mov
out
xlat
cmpsl
push
movl
xchg
repnz
jmp
add
ss
cltd
mov
orb
addl
xchg
loopne
pop
add
pop
sbb
lods
cmpb
pop
addr16
jo
jne
mov
adc
ret
cwtl
inc
cltd
inc
mov
inc
div
cmpb
pop
dec
xor
xchg
inc
fsts
inc
out
divl
pusha
push
in
in
xchg
dec
push
jmp
scas
sbb
mov
cmp
add
xor
cld
dec
pop
into
cld
stc
mov
iret
and
dec
jnp
dec
fstpt
push
ljmp
jno
scas
loopne
adc
add
insb
mov
and
fldt
int3
xor
push
push
test
mov
inc
add
dec
lahf
out
inc
sarl
in
push
pop
stc
adc
cmp
xor
movsb
out
ja
mov
shl
adc
popf
xchg
jno
je
cld
cmpb
ret
popf
mov
inc
add
sub
mov
lcall
cwtl
or
dec
ds
push
or
mov
int
sbb
sbb
sbb
clc
loopne
and
movb
inc
mov
fisttpll
fxch
lods
adc
into
popa
js
sub
test
mov
and
mov
aam
inc
inc
jp
sub
lret
inc
adc
jecxz
and
repz
lea
jp
lret
jmp
shl
add
fldt
push
loopne
outsb
add
std
pop
clc
jnp
mov
lcall
xchg
jb
mov
and
fidivrs
and
addr16
int3
scas
lcall
test
sbbl
in
jmp
mov
cmp
and
fcoml
ret
mov
into
insb
in
std
aad
ret
xchg
aas
lods
inc
into
pop
inc
jbe
jns
jno
dec
fnstenv
add
jo
lods
sub
xchg
scas
mov
cmpsl
mov
lods
inc
sbbl
and
cmpl
adc
jmp
sub
dec
imul
pop
mov
sbb
rorl
out
inc
mov
shr
jae
divb
mov
xchg
test
cmp
mov
sbbb
adc
xchg
imul
arpl
xchg
add
outsl
sti
mov
sub
fucomip
cmp
sub
arpl
dec
xchg
roll
push
rcrl
daa
pop
int
sbb
pop
sub
and
loopne
mov
movb
int3
mov
push
test
movsb
mov
xor
cmp
cmp
jno
mov
xchg
mov
xor
cwtl
mov
decl
clc
lret
mov
mov
lods
cmp
pusha
add
inc
inc
jmp
scas
lea
mov
enter
dec
sbb
cltd
xor
xor
mov
cmpb
jb
xor
xchg
xor
aas
dec
cs
add
fstpl
mov
hlt
test
call
out
in
pop
outsl
out
loopne
div
mov
mov
jne
jns
ss
sbb
xor
sbb
cmpsb
stos
movsb
xchg
rolb
xlat
andl
cmpsl
cmpsl
aas
cltd
int3
dec
loope
mov
std
pop
lcall
in
jp
out
cmp
loope
mov
inc
in
clc
jmp
scas
xor
aas
repnz
mov
std
mov
push
ret
rcll
jecxz
clc
mov
jb
dec
cmpsb
xlat
scas
mov
test
test
into
int3
pop
dec
dec
aad
lock
leave
lcall
inc
fdivs
push
pop
testb
cld
lcall
in
add
pop
cmp
decb
inc
mull
es
pop
dec
push
jmp
mov
add
sbb
cmp
or
fnstsw
lods
push
icebp
imull
xchg
js
jns
or
and
iret
adc
cmc
sbb
sbb
cmpsb
test
jg
pop
repnz
mov
mov
xchg
xchg
cli
xchg
ret
mov
insl
ficomps
mov
fnstenv
cmpsb
popf
dec
push
ret
jmp
ret
es
setb
enter
and
push
fmull
fiaddl
movsb
mov
dec
shl
inc
lret
pushf
push
in
xchg
jecxz
mov
pop
sahf
xor
mov
fsubrl
jne
hlt
cwtl
xor
xchg
cwtl
xchg
add
sub
sbb
add
or
mov
mov
int3
in
incb
call
aaa
iret
and
add
mov
and
aam
test
inc
push
dec
inc
push
xchg
xchg
mov
pushf
insb
jge
mov
mov
pop
mov
sbbl
or
hlt
xchg
rolb
mov
mov
scas
mov
int
insb
rcrb
xor
cmpsb
add
sub
dec
mov
jecxz
sbb
dec
fstl
xor
stc
mov
int
sar
andl
stos
sbb
xor
aam
or
mov
inc
aaa
mulb
cs
out
mov
push
insl
sub
xchg
add
jno
add
and
sbb
dec
lret
pop
mov
int3
loopne
push
ror
jecxz
js
or
jbe
stc
sbbl
add
les
jnp
stc
lods
inc
push
cmpsl
mov
data16
sarb
adc
adc
fwait
mov
or
mov
ficompl
in
mov
dec
adc
int3
jecxz
fdivl
testb
and
adcl
arpl
sbb
sub
in
lods
jbe
cmovae
ror
mov
inc
sbb
clc
jns
jnp
push
or
cld
fnstenv
mov
adc
pop
ds
aam
jne
rolb
or
ja
pushf
xchg
mov
mov
rcll
or
inc
cmp
and
cmpsb
aam
repnz
cltd
jbe
mov
je
mov
test
in
add
scas
arpl
inc
inc
xor
cmp
gs
adc
pop
rorl
insl
fcmovnu
mov
andl
mov
adc
inc
sbb
add
orl
jg
popw
nopl
sti
lds
fstpt
cli
mov
das
and
jo
inc
shlb
cli
fbld
lret
sbb
inc
js
negl
imul
mov
enter
dec
sbb
rol
push
push
out
je
int3
sbb
mov
push
icebp
cld
sbb
mov
sahf
dec
xor
ret
ja
sbb
frstor
out
js
lea
negl
loop
andb
lds
or
sahf
cld
push
mov
mov
sbb
cmp
jecxz
addb
fstps
sbb
dec
in
aam
pushf
mov
inc
xchg
jbe
hlt
xchg
push
test
push
jl
inc
mov
xchg
xor
mov
in
popf
loopne
sbb
mov
stos
mov
aam
dec
mov
ja
int
sbb
sub
js
into
stos
add
scas
cmp
shlb
jo
mov
bound
stos
inc
ljmp
jmp
test
mov
ss
fcomps
je
mov
mov
gs
adc
ret
push
in
cmp
bound
push
fs
movsb
inc
push
or
xor
lret
pop
ret
adc
jecxz
xlat
sbb
lea
adc
sti
das
js
mov
adc
mov
lods
push
mov
lret
in
incb
aas
jle
push
out
outsl
shlb
xchg
sbb
adc
sub
or
bound
iret
pop
dec
mov
pusha
mov
push
push
xor
dec
fcmovu
mov
and
mov
dec
cltd
adc
shlb
je,pt
imul
xchg
jmp
dec
xchg
movq
std
sti
mov
outsl
rorl
inc
in
jns
in
shll
inc
out
push
jle
pop
mov
mov
adc
std
cs
mov
and
adc
or
popf
xor
push
bound
fcomi
inc
bound
xchg
sbb
and
cld
aad
xor
roll
sbb
sub
stos
decl
sub
dec
pop
dec
data16
cmp
ljmp
cwtl
das
lea
shrl
shll
mov
jno
sahf
mov
and
je
in
adc
or
mov
push
push
sub
inc
inc
test
mov
xchg
push
stos
jp
jle
ret
lods
xchg
pop
sbb
pop
dec
jl
xor
into
adc
mov
ljmp
push
dec
orb
sub
lods
loope
inc
push
mov
xor
mov
fstpt
lret
repnz
and
pop
push
dec
testl
std
jecxz
mov
stos
pop
xchg
loopne
ja
or
dec
cmpsb
cmpsl
cmp
add
aaa
fsts
enter
adcb
inc
popf
repnz
ds
pop
stc
jae
stos
xchg
inc
sbb
call
iret
sbb
in
sbb
push
out
mov
outsb
inc
jns
sbb
mov
lret
in
or
loop
test
mov
add
test
or
test
xor
es
in
mov
out
jnp
ljmp
dec
push
jb
jno
push
mov
and
subl
sarb
aam
jge
cmp
arpl
test
pop
or
mov
ljmp
jle
push
push
nop
stos
sbb
in
test
mov
jbe
lret
inc
mov
jbe
mov
mov
pop
xchg
das
addr16
mov
pop
jb
out
cld
inc
shrl
les
jg
sub
add
das
ret
add
lods
mov
sbb
ja
pushf
mov
test
andb
loop
adc
adc
test
lea
xlat
mov
ja
idivb
or
fsubrp
and
sub
lahf
ret
add
dec
push
sti
or
push
xchg
adc
mov
fisubrl
xor
rcl
jo
enter
xor
jmp
hlt
lahf
sbb
jns
push
jo
mov
jmp
dec
inc
jbe
sub
push
iret
jnp
frstor
aad
popa
repnz
xchg
push
ja
or
xchg
jmp
sub
pusha
push
cli
repnz
data16
adc
sub
xor
and
stos
sbb
or
jge
sub
xor
mov
fdivp
cmpsb
push
fcmovnu
insl
add
lods
jmp
fldcw
pop
dec
cmc
jbe
mov
int
mov
cmpsl
jbe
cmp
xchg
mull
popf
popf
pop
out
xchg
mov
clc
mov
iret
push
xchg
cmp
or
stos
in
dec
dec
sbb
pop
mov
iret
push
in
xchg
pop
cs
push
jmp
rcl
or
lahf
int
inc
fstpl
out
dec
ror
push
or
dec
push
mov
jmp
out
dec
loopne
jecxz
leave
adc
jmp
add
mov
js
push
test
jb
inc
loop
push
lods
mov
shlb
push
popa
jno
dec
xchg
mov
je
sti
or
pop
hlt
icebp
fwait
shll
pusha
loop
jg
or
dec
cmp
out
ret
push
ja
popl
sbbl
repz
dec
pop
adc
mov
add
fcoml
push
xlat
xchg
jecxz
out
fldt
aas
xchg
add
loope
dec
mov
xchg
pop
mov
push
xlat
push
aas
dec
and
fbld
and
add
in
cli
lcall
add
sar
in
ds
scas
aaa
inc
add
push
movsb
ficomps
in
test
cs
cli
cmp
lods
dec
cmp
adc
cmc
push
jg
sub
sahf
push
dec
dec
out
out
sub
and
out
ror
fst
outsl
mov
hlt
mov
insb
fists
adc
mov
icebp
and
pushl
notb
dec
fwait
fwait
xor
stos
negb
mov
out
addr16
outsb
push
movsl
jg
mov
lcall
dec
and
sub
cmc
insb
rcrl
aaa
or
mov
xchg
jmp
ds
and
add
pop
out
push
jecxz
shlb
inc
stos
sub
arpl
push
sbb
outsb
add
jb
enter
sbb
nop
dec
dec
inc
push
outsb
aas
cmp
mov
fmuls
inc
adc
adc
xor
sbb
sub
out
pop
jge
outsb
sub
cwtl
addl
jmp
mov
pop
dec
mov
push
jmp
int3
stos
cmp
loopne
sbb
inc
stc
scas
mov
jbe
dec
push
xchg
jne
outsl
sar
push
jl
sbb
clc
insl
lods
pop
mov
dec
hlt
mov
jne
in
and
leave
push
ljmp
jg
repz
xlat
fnsave
xchg
rcr
popa
sarl
mov
jae
jle
shrb
push
outsb
loope
or
pop
adc
or
enter
je
or
test
js
cmpsl
int
pop
jmp
add
sbb
popf
push
sbb
jge
cli
in
jge
adc
insl
sub
inc
pop
cmp
jns
mov
pop
out
xchg
les
jne
fbld
xchg
mov
out
lods
pusha
lcall
mov
mov
xchg
dec
test
xchg
call
dec
cltd
inc
loop
mov
icebp
movsl
addr16
icebp
xchg
jg
lods
inc
icebp
sti
xchg
push
mov
icebp
js
sub
ds
lahf
xchg
lods
sar
fidivs
imul
aad
xlat
aad
cld
mov
das
bound
mov
mov
daa
ljmp
lcall
dec
pop
loope
pop
imul
in
repnz
pop
adc
test
pushf
cmpsl
enter
lods
ljmp
popf
stc
adc
lea
int3
xchg
cli
lahf
xchg
inc
xchg
je
mov
cmpl
push
sarl
jb
dec
es
fwait
cmp
and
xchg
aas
sub
mov
fnsave
push
in
test
jno
xchg
stc
xor
lea
shrl
mov
outsb
jmp
push
mov
nop
dec
rcrl
dec
jnp
adc
and
push
or
lret
test
jecxz
inc
in
jbe
dec
insl
dec
jmp
mov
jmp
jns
out
ljmp
out
fidivl
pop
jl
scas
mov
cli
add
shrl
lods
outsl
inc
bnd
cmp
in
cmpl
imul
pop
or
jecxz
dec
pop
stos
cmp
xchg
repz
or
sahf
out
jle
mov
jmp
fs
sub
cs
jp
mov
movl
orb
mov
mov
pop
ds
sub
cmp
aaa
xor
decl
and
lret
enter
lcall
imul
and
enter
push
push
icebp
dec
add
rol
inc
mov
test
push
jmp
cmc
and
sbb
push
adc
shlb
dec
ljmp
in
lods
ljmp
pop
mov
xor
sbb
rcrb
dec
pop
je
cmpsb
mov
sbb
scas
push
out
jp
mov
cld
pop
stc
outsb
test
push
mov
mov
sub
pusha
mov
call
int
mov
loopne
cmp
sbb
shr
in
lcall
jo
cli
inc
mov
cmp
das
sub
mov
push
js
pop
mov
aam
mov
subl
popa
lcall
arpl
ljmp
push
cmp
aas
mov
stos
xlat
push
stc
and
test
xchg
aam
sti
add
mov
sub
sub
pop
orl
mov
or
enter
xchg
popf
push
test
and
lods
dec
mov
cmp
mov
rorl
adc
sahf
cs
popa
insb
sub
fldl
test
nop
inc
sbb
dec
push
push
xlat
push
jle
outsl
cmpsb
pop
jo
sarb
pop
popa
inc
arpl
rcrb
adc
inc
fisttps
pop
adc
mov
and
adc
lret
sbb
cmp
jae
adc
clc
mov
mul
xor
add
sahf
scas
push
mov
inc
scas
sbb
mov
ja
sbb
mov
sbbl
jns
notl
cld
xchg
cmpb
push
lods
mov
leave
std
arpl
mov
fst
push
outsb
test
pop
pop
adc
push
mov
jo
aas
fs
aaa
into
push
mov
add
les
mov
arpl
in
gs
pop
inc
add
arpl
loope
ss
outsb
add
fcoml
scas
iret
out
jb
pop
ret
inc
outsb
add
mov
pop
scas
aad
outsb
add
xor
pop
mov
insl
mov
popa
inc
std
xchg
xor
mov
sahf
xor
cmp
pop
fimuls
pop
scas
dec
aaa
adc
movl
in
fdivrs
pop
add
sub
sbb
fstl
add
push
mov
into
pushf
mov
in
push
push
lahf
ss
adc
mov
xor
pop
in
adcl
jmp
lds
mov
jo
mov
push
push
call
outsl
dec
inc
sbb
xchg
cmp
add
add
dec
inc
mov
out
out
xchg
test
test
and
adc
inc
mov
mov
mov
movsb
lods
outsl
xlat
push
int
jp
push
sbb
push
push
lcall
xor
jg
in
sti
and
andb
inc
ja
xorb
or
dec
dec
jns
test
and
jo
mov
add
inc
fbstp
push
popa
pop
mov
push
inc
ret
rorb
push
lahf
mov
add
push
fdivr
fwait
lea
xor
sahf
cmpsb
filds
test
out
mov
popf
decb
and
cmp
fimuls
roll
xor
jae
jge
sub
loope
cmp
outsb
loop
jg
enter
xor
gs
inc
push
push
mov
push
repnz
push
leave
push
mov
sub
into
shrb
jmp
mov
cld
addr16
daa
pop
popa
fcoml
mov
mov
out
inc
gs
outsb
test
mov
lods
leave
data16
inc
dec
and
pop
lds
xchg
std
mov
repz
shrl
scas
push
xor
fildl
test
test
jne
imul
arpl
loope
xor
pop
dec
mov
sarb
jl
lcall
jae
lret
arpl
inc
push
clc
rorb
xchg
je
lods
push
sub
dec
movsl
std
cmp
cmpsl
ja,pt
ja
shrb
push
movsl
inc
pop
cmp
xor
lods
xchg
sub
pop
outsb
add
out
aam
pop
mov
cmc
pop
pop
pop
xchg
imul
push
call
mov
mov
fmull
adc
inc
lods
cmp
push
push
add
mov
stos
leave
pusha
fnsave
out
sub
jnp
enter
and
mov
test
push
mov
push
int
lret
shrd
mov
jmp
lahf
pop
daa
fstpt
cmp
mov
pop
mov
dec
shl
sub
cmp
pusha
scas
mov
jmp
rorb
pop
iret
andl
lret
cmp
insl
mov
jge
mov
adc
cwtl
in
mov
or
hlt
xchg
mov
xchg
clc
test
xor
add
mov
add
outsb
mov
pushf
add
mov
pop
inc
flds
xchg
mov
add
jb
out
xchg
mov
movl
mov
pop
repz
stc
imul
pushf
ja
inc
inc
cwtl
pop
mov
jns
adc
fisubs
jne
outsb
xor
fdivl
cwtl
sub
mov
sarl
add
xor
sbb
out
dec
lcall
aaa
adc
into
sahf
sbb
imull
cld
rorb
xchg
mov
imul
stos
jbe
inc
xor
jae
mov
sarl
cli
pop
xchg
mov
mov
pop
movb
jg
cmpl
and
lods
mov
sbb
cmpsl
mov
rorb
shr
mov
test
ficoml
je
or
imul
stc
dec
cmp
pop
sbbl
pop
fbld
push
out
jnp
in
pop
movsl
inc
pop
xlat
cmp
out
sub
insl
shlb
push
push
idivb
mov
aaa
dec
daa
js
jo
add
sti
xor
xor
cmc
push
xor
jge
insb
in
ljmp
shrl
push
mov
add
fidivrs
xchg
xchg
mov
fisubrl
or
sub
mov
xor
or
or
inc
popa
push
mov
mov
push
out
in
xor
cmp
inc
push
dec
cmp
insb
dec
inc
stos
dec
lea
aaa
shll
ljmp
jno
addr16
pop
hlt
add
jnp
push
insb
into
xor
cmp
lds
or
xchg
test
rclb
repz
sbb
outsw
cmp
repz
ret
push
or
fstpl
ljmp
xor
push
je
movsl
and
rcrb
ss
fistps
fwait
inc
jl
mov
in
lods
negb
aam
fmul
repz
out
cmc
sub
adc
fcomp
push
or
movsl
shrb
jmp
jp
jno
xchg
outsl
daa
xchg
inc
idivl
mov
xchg
call
lock
iret
lahf
ss
mov
mov
into
cmp
ljmp
and
int3
dec
aas
adc
in
rcl
stc
mov
les
mov
sub
mov
cmc
scas
mov
mov
test
jg
hlt
pop
sub
xor
ds
loopne
pop
push
jmp
jno
cmpsb
ret
cmp
ljmp
cmp
jmp
or
mov
daa
mov
push
xchg
mov
mov
outsb
inc
and
mov
int3
inc
pushf
es
fisttps
mov
mov
fcomi
imul
jbe
shll
xchg
mov
test
cmpsl
test
jo
mov
shlb
cli
pushf
xchg
add
mov
cmp
nop
imul
inc
jae
adcl
lcall
pop
pop
cld
jne
push
inc
lcall
sahf
clc
or
mov
into
sbb
mov
and
xor
cld
or
pop
mov
loopne
in
test
push
lods
mov
dec
jecxz
sbb
mov
mov
test
jo
pop
sub
and
jae
in
sti
push
shr
adcb
lret
aam
mov
mov
jmp
sbb
mov
mov
rcrb
inc
pop
shll
cli
xchg
ja
sbb
cmpsb
lahf
daa
adc
std
sbbb
and
jae
iret
pop
lock
mov
scas
jae
and
mov
add
daa
mov
push
fidivrl
add
cmpsl
in
dec
fidivs
in
push
xchg
es
mov
lods
fstp
rorb
jae
mov
jge
inc
xchg
dec
sahf
or
stc
insb
cmp
and
insb
fistps
fidivrs
rcr
dec
fwait
pop
in
cmpsl
ret
aas
xchg
pop
cltd
push
jmp
push
push
outsb
stos
xchg
sub
sbb
sub
subb
neg
data16
pop
dec
add
jne
and
and
int
popf
xor
jo
xchg
loope
dec
shll
cmpsb
cmp
loopne
dec
mov
dec
mull
stos
push
mov
pop
cli
in
pop
dec
lods
mov
mov
cmpl
outsb
stos
in
inc
mov
inc
rolb
add
sub
mov
mov
pop
imul
fisttpl
and
pop
mov
lods
sbb
iret
and
daa
or
mov
sbb
outsl
jp
lds
or
icebp
mov
sbb
adc
jae
in
or
gs
lret
sub
popf
or
sahf
or
out
testb
cmc
adc
xor
insb
adc
cltd
push
lea
fidivl
xchg
sbb
fstpl
and
popf
xor
push
sbb
sahf
mov
mov
mov
cld
lret
notb
dec
mov
push
outsb
in
stc
and
inc
push
xor
aaa
jmp
cli
sbb
xchg
hlt
pop
xor
jmp
sbb
into
arpl
pop
subb
dec
int3
scas
ret
ror
push
add
dec
decl
in
pop
mov
jb
dec
xchg
je
pop
in
mov
push
cmpsb
and
stos
inc
pop
adc
movsl
mov
jecxz
imull
mov
insb
xchg
sbbl
cmp
lahf
inc
mov
sbb
sarl
fdivr
adc
pushf
dec
push
dec
and
push
insb
fdivp
movsl
xchg
mov
das
repz
lods
cmp
xor
daa
xor
xchg
dec
mov
sub
pop
test
pop
mov
loopne
sbb
js
ficoms
mov
lods
add
jnp
jb
loop
push
fdivs
icebp
insb
imul
mov
cmp
xor
cmp
push
aaa
mov
mul
jne
lock
push
or
lock
sub
adc
stos
in
enter
sub
mov
mov
cwtl
lcall
mov
adcl
subb
xchg
push
mov
push
psubsb
cmpsl
repnz
ficoml
jnp
daa
stos
test
add
sub
inc
ja
stos
add
repz
jnp
or
sahf
sub
lds
jbe
aam
loop
fs
fyl2x
pop
shr
das
lea
dec
and
xor
movsl
cmp
xchg
sub
in
adc
add
cmp
inc
xchg
jns
mul
js
sbb
push
sbb
aas
int3
stos
add
in
loop
pushf
aad
pop
adc
cmp
push
cmpl
mov
or
ja
sbb
xchg
adc
push
xchg
sub
lcall
mov
pusha
mov
add
int3
xchg
push
mulb
jmp
cmp
test
scas
or
jns
js
inc
fsts
lret
add
test
inc
js
outsb
add
sub
cmp
cmp
daa
jnp
les
into
es
fisttpll
xor
cmp
and
imul
push
mov
jne
popf
fwait
push
inc
push
mov
stc
in
enter
mov
mov
mov
scas
les
inc
rcll
lcall
jo
outsl
shlb
push
loop
dec
into
xchg
dec
dec
and
push
sub
jp
icebp
lods
sub
cltd
jns
cmp
out
push
jne
insl
mov
pop
jmp
aas
or
lea
jns
xor
mov
and
lea
into
fwait
std
or
jmp
and
xchg
jb
imul
fs
insb
aam
push
mov
fistl
push
fdivs
int
sub
popf
push
xchg
aad
int3
repz
stos
in
repnz
pop
dec
insb
add
fimuls
mov
or
jb
sub
sbb
out
inc
mov
mov
test
xlat
mov
push
js
cmpsb
test
js
aas
stos
cmpb
notl
ret
mov
dec
inc
dec
lock
xchg
sub
push
cmpsl
mov
in
mov
cmp
inc
or
jbe
push
cltd
xchg
stos
cmp
pop
push
scas
aaa
mov
pop
add
lea
pop
dec
xor
cmpsl
loop
add
sbb
jns
test
les
outsb
loope
and
cmp
fimuls
jns
inc
mov
outsb
sub
test
call
leave
or
fwait
pop
test
cmp
cmp
xchg
lahf
data16
xchg
xchg
mov
stos
and
or
mov
int3
push
fstpt
cmp
cmc
sub
scas
pop
mov
shl
jnp
xchg
aas
fadds
push
dec
cmp
fidivrl
jae
pop
pop
mov
insl
test
rcrl
stos
ss
push
mov
jge
psraw
sbb
jge
add
ss
xor
mov
nop
jp
push
out
cmp
jae
or
fwait
es
xchg
enter
aad
dec
popa
mov
sbb
js
cmp
push
int3
mov
add
mov
arpl
jb
sbb
mov
nop
insl
cmp
loop
sbb
lock
push
imul
sub
push
ret
xlat
or
dec
mov
push
scas
inc
into
sub
push
test
pop
aaa
sbb
xchg
shlb
jecxz
pop
ljmp
jle
scas
mov
loopne
in
sub
loop
jnp
cld
sbb
jg
xor
fdivrl
xchg
xchg
push
sbb
js
jne
pop
iret
pushf
cltd
mov
push
xor
shll
rclb
hlt
ss
and
mov
inc
pop
mov
inc
inc
roll
fmul
xor
rcll
es
lods
mov
out
sub
aaa
adc
loopne
add
xor
loop
out
add
cmp
decb
mov
fsubl
ret
arpl
cwtl
jo
jo
ret
and
inc
add
cmpsl
add
pop
push
or
add
lret
andl
scas
gs
and
outsb
xchg
stos
dec
xchg
dec
dec
inc
idivl
cltd
rclb
lods
dec
cmp
lahf
mov
inc
fldl
jb
jb
sub
or
ret
outsb
dec
fldenv
in
mov
mov
and
fisttps
xchg
into
popa
jnp
cmc
loopne
and
add
imul
pusha
add
popf
fldenv
mov
lock
in
dec
and
loopne
movsb
push
les
fnsave
fnstsw
push
movsl
dec
mov
push
and
pop
in
jge
stc
pop
fcmovnb
imul
inc
pop
pop
repnz
out
dec
cmc
scas
jp
test
andl
in
imul
movsl
push
sub
lret
out
leave
dec
mov
jle
jnp
xor
mov
pushf
in
lcall
jmp
in
push
mov
out
scas
repz
pushf
and
pop
loopne
push
ljmp
adc
xchg
xchg
dec
lea
fistl
test
jecxz
xor
inc
and
scas
and
inc
push
mov
sti
fwait
hlt
mov
and
sub
inc
imul
xchg
pop
dec
ficompl
inc
and
cs
jmp
jae
xchg
sbb
jecxz
adc
jg
lret
push
mov
add
lahf
enter
test
shrd
add
imul
call
xchg
in
loopne
mov
push
xchg
rolb
sub
subb
push
fstpl
sub
ret
fs
data16
pop
lret
ret
add
out
mov
imul
mov
scas
sub
dec
mov
xor
in
add
pop
pop
push
call
push
mov
call
sbb
ds
das
inc
jg
xlat
pop
cmpsb
sub
mov
aam
inc
xchg
sbb
cmpsb
loope
dec
or
fs
fistps
cmpsb
fimull
add
cmp
mov
mov
popl
sbb
lea
es
mov
adc
mov
fildll
je
jno
dec
push
add
pop
jp,pn
pusha
cmp
pop
test
push
fcmovnb
insb
daa
in
cld
xorl
aaa
cwtl
dec
negb
stos
fucomp
mov
iret
mov
fs
lds
movsl
jl
xchg
xchg
shll
sub
add
addb
sbb
push
fistl
xchg
in
cmpsl
jno
mov
stc
ss
stos
xchg
lret
addr16
or
mov
mov
icebp
add
addr16
mov
dec
rcll
add
dec
cwtl
cmp
dec
lods
xchg
pusha
xor
je
lock
xchg
in
nop
sahf
xchg
clc
scas
sub
xlat
pop
fidivs
call
ja
pop
out
js
adc
sub
lahf
sub
pop
add
dec
push
int
mov
bnd
sub
xor
mov
filds
or
popa
sbb
notb
adcl
xchg
mov
and
mov
call
push
lcall
sbb
cmp
inc
xchg
mov
xchg
sbb
negb
jg
pop
sub
hlt
sbb
adc
dec
xor
in
stos
out
sub
fs
out
dec
push
jae
sub
fsubr
fisubl
jno
xor
cmp
inc
cwtl
mov
or
jno
sub
inc
cld
notl
fistpl
xor
leave
mov
mov
inc
pop
cltd
pusha
cmp
arpl
sbb
ret
aas
stc
push
cmp
cmp
out
aam
add
mov
test
icebp
rcrl
xor
pop
mov
pop
sbb
cmp
rorl
jge
push
push
stos
lcall
inc
push
inc
push
jno
ljmp
xchg
jmp
aas
mov
inc
ret
cltd
xor
repnz
out
jmp
mov
and
xor
xor
out
adc
in
test
cmp
mov
mov
cld
inc
dec
scas
pushf
jae
cmc
mov
jmp
cli
pushf
cmp
cmpsl
jle
adc
mov
outsl
imul
or
adc
inc
shlb
cmp
icebp
xor
add
mov
mov
jmp
cmp
push
andb
mov
sub
cmpl
shll
movd
add
xlat
int3
cld
shll
in
cmpsb
mov
inc
fs
imul
fists
es
xchg
insl
jg
imul
xor
jno
mov
xchg
jne
lods
inc
inc
adc
sub
push
ds
ljmp
inc
lea
mov
dec
jecxz
jp
fsubrl
fmull
cmp
test
ret
das
sub
les
hlt
jge
add
jae
jp
jns
daa
adc
and
daa
push
jecxz
and
lret
push
push
mov
popa
gs
inc
insl
addb
push
int3
push
daa
ret
jecxz
xchg
mov
adc
aaa
dec
rolb
inc
cmp
xchg
insl
daa
lret
jne
pop
and
divl
mov
fstl
dec
dec
cmp
sbb
rol
adc
jg
in
adc
insb
inc
sbb
faddp
arpl
lock
stc
popf
jmp
push
out
movsl
jmp
sub
jle,pt
pop
push
xor
inc
fnstcw
ss
mov
sbb
xor
gs
aam
mov
lock
mov
test
sbb
cmpsl
pop
add
iret
fiadds
fmulp
test
or
pop
push
inc
sbb
outsl
inc
push
ret
mov
nop
jb
popa
rcrb
cmp
and
push
mov
pop
scas
push
sub
pop
add
shll
mov
shl
pop
pop
ljmp
inc
lret
into
cmp
mov
fbstp
mov
shrl
data16
adc
add
sub
jp
inc
stos
mov
lret
jno
out
mov
or
cmpsl
or
jmp
pop
sub
ss
cmc
repz
mov
ljmp
dec
stos
dec
mov
add
inc
fisubl
test
add
xchg
insl
or
int
cmpsb
jge
cmp
or
dec
dec
das
sbb
stos
pop
into
and
push
gs
xor
fnstcw
xchg
sti
leave
mov
cmpsl
push
test
cwtl
negb
mov
daa
outsl
leave
test
enter
and
int3
xchg
xchg
insb
mov
shl
add
and
adc
mov
xor
pop
xlat
push
call
not
addb
daa
or
cmp
mov
daa
push
mov
repz
pushf
fldt
or
jge
scas
loope
push
adcb
or
shll
dec
mov
fmulp
iret
jb
cmp
in
mov
inc
lahf
fiadds
pop
shl
xchg
push
sub
mov
xor
xchg
add
inc
loopne
xor
popa
push
lahf
popa
test
adc
mov
rcrl
xor
insb
fsub
mov
sahf
fbstp
or
or
dec
aas
sbb
insl
pop
lret
nop
leave
cmpsl
mov
sub
loop
dec
mov
outsl
outsl
gs
fists
fsubs
and
int
cli
adc
xor
push
sti
xchg
dec
cmp
add
hlt
pushf
sub
sub
in
pop
sbb
or
mov
mov
xchg
in
int
add
loope
sub
scas
sbb
pop
int
inc
int3
sub
sti
and
aas
mov
pushf
xchg
fdivrl
dec
pop
int3
push
pop
fcmove
int3
mov
pusha
add
out
cli
loopne
jmp
pop
fwait
fs
sub
dec
and
push
gs
inc
pop
scas
or
add
fs
inc
and
into
das
push
std
out
xchg
pop
push
pop
push
cmp
xor
mov
xchg
inc
mov
lock
fisubs
mov
jecxz
adc
dec
mov
cmp
std
cmp
in
and
and
inc
fdivl
pop
or
xlat
jbe
and
cmpsl
out
xchg
cmp
or
fwait
pushf
and
sub
mov
cmpsl
sub
inc
fsubrp
js
jae
addb
stos
lea
outsb
testb
push
adc
outsb
ja
scas
test
pop
or
daa
repz
mov
mov
jbe
and
mov
or
pop
cmp
xchg
cmp
mov
push
and
stos
xchg
cmp
jnp
lods
movsl
hlt
xchg
add
cmp
mov
out
push
xor
repnz
aad
faddl
les
ret
repnz
jno
mov
enter
xchg
shrb
repz
icebp
mov
cwtl
xchg
cmp
dec
cs
and
mov
testb
lret
mov
and
insb
mov
fstl
cld
xchg
jmp
or
shl
pushf
fs
cmp
sbb
or
and
push
sub
push
cmp
scas
or
stos
inc
and
push
jo
test
data16
int
cld
mov
ja
mov
leave
insb
adc
aam
adc
jne
dec
add
mov
out
push
push
dec
lret
lods
outsb
pop
out
fmull
adc
push
xor
jmp
out
out
popf
fmull
pop
jbe
lods
dec
mov
inc
cmp
inc
push
rcl
jmp
cli
iret
fmuls
mov
fmull
push
fsubr
mov
aas
ss
movsb
out
push
sti
xchg
push
dec
hlt
mov
cld
dec
dec
xor
or
sti
in
adc
mov
mov
dec
incb
pop
xchg
jno
sahf
cs
out
lods
push
fnstcw
pop
pusha
and
add
mov
pop
pushf
push
inc
fcompl
cld
jle
dec
sbb
stos
push
ljmp
push
imul
lea
push
or
int
scas
int3
outsl
push
mov
fstl
fcmovbe
jl
sarb
ljmp
dec
insb
add
jmp
and
lods
push
ja
mov
xchg
cwtl
xchg
push
cmpsb
cmp
dec
in
in
lret
shl
and
pop
out
test
sbb
fidivs
mov
push
jb
data16
aad
push
mov
pusha
mull
inc
jle
lods
std
jge
cs
jo
lods
xchg
sub
pop
push
loopne
mov
cltd
fildl
insb
std
sub
and
fsubl
ret
add
jge
das
ss
mov
mov
data16
ljmp
inc
ljmp
call
adc
sti
aaa
fwait
xor
inc
jmp
clc
xor
inc
jecxz
cmp
dec
stos
push
mov
fstpl
mov
scas
push
jbe
mov
push
int
mov
pop
test
testl
mov
pop
cmp
lock
cmp
xchg
jb
add
adc
inc
stc
sub
xchg
loopne
fwait
inc
pop
add
adc
sub
dec
dec
in
add
icebp
divl
test
xchg
ss
mov
cmp
cmp
cmp
sub
mov
mov
jp
repz
cmp
jo
adc
push
fisubl
lods
xchg
mov
mov
and
scas
dec
lcall
push
stc
mov
add
lods
outsb
sub
jle
mov
jg
jecxz
aad
fisttpll
aad
out
pop
jg
xor
xchg
add
pop
dec
pop
out
inc
cli
insl
mov
cmpsb
pop
pop
mov
and
in
mov
mov
popf
mov
jle
test
ja
arpl
fstpl
out
sbbb
movsw
rcl
sti
or
lods
arpl
sbb
add
mov
test
dec
sub
ja
push
lods
std
test
push
nop
test
jge
repz
loope
pop
test
push
mov
inc
ss
mov
in
inc
push
push
cmp
mov
test
andl
cmp
and
cmp
push
aaa
das
mov
inc
jbe
or
leave
xor
outsb
mov
pop
outsb
fwait
sub
add
sarb
or
pop
inc
loopne
mov
dec
inc
inc
int3
mov
pop
scas
xchg
add
xchg
loope
dec
adc
mov
cmp
ljmp
imul
es
adc
leave
adc
add
pushf
std
test
and
jg
cmp
stos
lcall
cs
sbb
jge
jmp
inc
mov
adc
popa
xorb
adc
mov
or
sub
push
gs
xor
add
in
jae
dec
sahf
mov
mov
clc
hlt
cli
jo
mov
sbb
mov
ror
add
sbb
repz
xor
lods
adc
imull
xchg
enter
inc
test
mov
mov
ret
cld
push
or
fidivl
in
mov
mov
inc
jae
iret
js
jg
lock
out
int3
ds
repz
pop
loopne
enter
jmp
aam
popa
in
cwtl
or
sub
mov
xor
sub
xor
lret
add
ret
inc
in
lea
dec
cltd
ja
sbb
sbb
cmp
aaa
pop
jnp
sbb
jge
fadd
mov
mov
test
lea
idiv
pusha
sub
hlt
pop
dec
out
call
sbb
sub
jge
sub
inc
cli
cs
inc
mov
int3
fmulp
or
add
jle
add
shr
out
mov
pop
pop
mov
sbb
aam
mov
xchg
test
push
aas
lods
push
das
out
gs
and
mov
cs
int
inc
fmull
jge
int3
add
cld
ds
pop
mov
loopne
out
sbb
adc
stos
and
pop
mov
push
cmp
mov
and
mov
insb
test
hlt
push
mov
pop
jecxz
mov
arpl
enter
je
cmp
ja
fnstenv
ret
sbb
mov
popf
rorb
mov
mov
pop
mov
pop
mov
dec
push
cmpsb
out
inc
pop
add
sarl
push
adc
jno
push
out
jmp
mov
or
cmp
adc
mov
sbbb
sub
xchg
out
mov
jb
add
cmp
add
arpl
js
insl
cmpsb
lock
cmpsl
out
mov
xchg
xchg
push
cmp
sub
sub
lock
jge
adc
ja,pn
iret
and
stos
insl
test
inc
sahf
mov
sub
std
insb
testl
arpl
push
ljmp
and
dec
cli
pushf
jecxz
fs
out
popf
jne
cmc
push
sbb
inc
and
sbb
pop
xchg
jg
fidivl
sbb
push
mov
clc
mov
jge
adc
aas
shrl
and
mov
pop
mov
or
adcb
push
stos
imul
jl
xlat
xlat
push
sub
inc
dec
xchg
cmpsb
lock
icebp
dec
stc
inc
or
jne
aas
repnz
stos
sub
xor
inc
leave
or
idivl
fbld
sti
test
andb
ljmp
call
lock
sub
mov
movsb
cmp
push
into
jae
xor
mov
inc
mov
dec
out
inc
outsb
aam
pusha
js
mov
stos
addr16
inc
xor
arpl
and
mov
fwait
fs
xor
jbe
lods
test
or
pop
pop
mov
aaa
add
mov
and
mov
mov
cmp
pushf
adc
mov
sbb
pop
jae
pop
mov
rorl
mov
adc
sbb
fwait
xor
jnp
or
repz
int3
test
inc
and
adcl
scas
dec
cs
or
sub
sub
ss
pushf
enter
cmp
or
lock
dec
cmc
cli
faddl
int
xchg
fstps
add
and
sahf
sbb
ret
lea
out
push
dec
mov
int3
adc
stos
cld
mov
inc
fdivs
pushf
xor
mov
jp
testb
mov
push
in
mov
inc
mov
je
fildl
rcrb
loope
and
push
repz
cmp
inc
faddp
pop
pop
xor
mov
iret
sbb
push
in
shrb
call
test
xor
mov
mov
cmp
addr16
subl
pop
outsb
and
sbb
adc
lea
xchg
decb
sbb
sbb
fildll
adc
dec
ret
in
repnz
repnz
xor
inc
pushf
scas
inc
and
leave
xor
add
pusha
pop
cmp
pop
mov
in
xor
adc
mov
subb
mov
ret
decl
stos
pop
mov
dec
ret
pop
mov
add
mov
and
and
mov
call
aad
arpl
outsl
decb
fidivs
pop
nopl
cwtl
adc
xchg
aam
pause
ljmp
lret
inc
jo
xor
inc
out
andb
mov
repnz
xchg
jno
aad
mov
mov
push
lretw
fistps
mov
call
or
mov
mov
flds
call
or
inc
fwait
mov
ret
inc
outsb
in
scas
jg
andb
xchg
das
fbld
clc
add
xor
push
and
dec
rolb
mov
jbe
popa
pop
or
in
sub
jmp
mov
push
call
pop
push
in
jb
into
stos
xchg
pop
mov
jbe
mov
idivl
adc
mov
lods
push
or
jl
arpl
xor
sbb
and
sbb
mov
insb
inc
movsb
pop
mov
inc
lahf
mov
nop
stc
and
sub
enter
xor
les
pop
dec
jb,pn
popf
in
aad
clc
push
out
xchg
and
adc
jecxz
cmpsl
aad
jnp
jae
imul
jb
xor
xchg
sub
ds
xor
lcall
inc
mov
cmpsb
out
pop
insl
fisttps
cmc
or
shll
neg
ljmp
stos
les
mov
jo
jmp
lock
imul
jmp
popa
adc
inc
repnz
xor
setg
inc
mov
test
add
push
aas
cwtl
imul
push
in
pushf
insb
dec
loope
mov
pop
dec
fmull
pusha
jl
add
roll
cmp
stos
incb
adc
cmp
fdiv
push
jb
mov
fstl
int3
or
jae
out
jle
adc
jb
popf
incl
fdivl
add
int3
stos
mov
lods
cltd
lahf
cmc
sub
cmpsb
in
pop
push
inc
adc
cmp
add
es
outsb
mov
cmc
lds
test
push
cwtl
imul
ss
leave
fldcw
into
rcll
sahf
push
das
shlb
add
movsb
sbb
xchg
jl
add
repz
sub
inc
mov
xor
out
push
daa
stc
push
cmp
xchg
mov
push
inc
xor
js
enter
xor
out
pop
push
cmpsb
mov
xchg
mov
aad
xor
sti
imul
inc
lock
jmp
leave
add
lea
push
test
aad
hlt
rorl
and
mov
mov
cmc
adc
rol
das
divb
cmp
jmp
dec
sbb
daa
es
push
je
pop
testb
add
push
bswap
jecxz
sahf
arpl
sti
jne
sub
mov
rcr
pop
loope
push
sbb
sbb
jae
fs
push
push
bound
xorb
sub
lahf
test
mov
mov
fisubrl
mov
xor
sub
outsb
hlt
fwait
clc
int
sub
jle
jnp
outsl
in
cs
pusha
test
in
push
xlat
jmp
js
mov
lods
gs
les
rorl
negl
mov
push
cli
nop
xchg
and
imul
aaa
push
jmp
push
or
fs
mov
adc
or
lea
cmpsl
lahf
xchg
mov
fstpl
test
jne
inc
fstl
cmp
jp
xor
ficomps
arpl
iret
movaps
xor
scas
pop
popl
push
sub
imul
arpl
mov
mov
mov
inc
mov
bound
push
lcall
cld
test
lret
lret
aaa
sar
xorl
loop
shll
cmp
ror
repnz
fcomip
push
jae
cmp
or
xor
in
pusha
xlat
adc
rorb
xchg
jbe
lret
sub
push
fstpl
movsl
mov
notb
push
or
scas
inc
add
or
mov
int
push
adc
jno
out
nop
fsubrs
das
mov
mov
dec
add
add
cmpsb
lock
jb
or
mov
in
orb
mov
fistpl
insl
jecxz
arpl
inc
xor
push
data16
cmp
adc
insl
fimull
adc
loopne
mov
hlt
mov
ljmp
loopne
mov
push
xchg
imul
fsubrl
xchg
movsb
shl
ret
lcall
jne
sbb
andl
hlt
dec
xchg
dec
aaa
pop
cmp
sarb
add
pop
aaa
xor
mov
scas
std
insb
push
mov
adc
bound
shlb
or
sbb
sub
dec
call
add
lret
andl
push
sbb
or
fadd
push
or
pop
icebp
out
cmp
adc
mov
sbbb
pop
jecxz
mov
into
loopne
shrb
sub
mov
pop
test
sbb
pop
out
jbe
sbb
mov
mov
sub
ja
js
sbb
movsb
ds
and
mov
es
ljmp
bound
fnsave
jo
stc
jb
adc
or
sbb
adc
cmovo
std
xchg
inc
je
pop
cld
in
sbb
ss
xor
test
xchg
aas
icebp
sub
push
cmp
cmp
push
or
es
inc
stc
inc
into
dec
add
movsl
stc
push
jge
andl
and
inc
add
int3
js
xor
aad
mov
movd
pop
mov
scas
and
sub
xor
xor
out
gs
xor
test
insl
bound
lcall
jne
jle
sub
sub
movl
rorl
jae
mov
out
mov
pop
mov
notb
cld
mov
cmp
das
imul
dec
in
jle
inc
in
adc
sbb
lret
sti
lock
mov
cmpb
xchg
pop
rol
jge
pop
pop
test
loope
sub
and
add
fwait
sbb
jns
lods
movsb
pop
and
add
dec
xchg
mov
lret
add
stos
cli
xchg
scas
cmpxchg
lret
xor
push
sbbb
adc
iret
lcall
adcb
les
loopne
dec
lods
addr16
and
push
sbb
push
jle
sbb
and
mov
movsl
cmp
add
push
imul
movsl
mov
icebp
sub
loopne
insb
adc
into
sub
jnp
loopne
xor
loop
clc
mov
imul
xchg
addr16
fs
mov
test
dec
pop
xor
hlt
std
iret
sbb
arpl
fwait
sahf
push
in
push
pop
jbe
inc
xchg
mov
mov
push
jns
test
fwait
int3
rolb
mov
jle
sub
push
ljmp
out
es
xchg
cli
cmp
mov
dec
cli
inc
pop
mov
pop
and
mov
pop
pop
fsub
dec
pop
adc
out
sbb
add
jo
lock
push
xchg
stos
jno
imul
jecxz
push
aaa
mov
out
mov
outsb
js
insb
mov
imulb
jp
lea
inc
inc
jp
sti
fs
xor
add
sub
and
add
rolb
cmpsl
jle
dec
jmp
or
test
push
inc
jp
push
pop
nop
lods
dec
dec
test
dec
repz
pop
fildl
and
aas
mov
push
repz
leave
jg
nop
jne
pop
cmpsl
and
mov
jecxz
mov
cli
jmp
or
clc
fs
sbb
out
xchg
dec
in
xchg
outsb
out
xchg
push
push
pop
adc
pop
sbb
mov
or
jbe
sbb
xor
xchg
popa
clc
xor
xchg
shll
ror
andl
and
cmp
xchg
xchg
loope
ret
ficoml
in
xlat
cmc
cmp
scas
cmp
test
jns
add
push
pop
out
mov
rcrl
inc
lock
and
ret
mov
hlt
mov
mov
xchg
cmc
cmp
push
jne
fwait
add
inc
mov
jns
in
aaa
push
loop
ja
rolb
xchg
jmp
xchg
inc
testb
push
adc
imul
inc
push
adc
js
ds
out
cmp
in
insl
add
pop
mov
ror
adc
jb
shrl
xchg
sbb
cld
add
xchg
psrad
rorb
and
adc
out
divl
shl
inc
stos
fdivrl
inc
xchg
sti
hlt
pusha
inc
mov
adc
or
jl
shrl
jge
pop
mov
pop
lods
jge
test
pusha
pop
in
sbb
xor
sbb
dec
push
lret
push
insl
sub
popf
pop
repnz
ss
dec
in
test
imul
mov
clc
mov
ljmp
lea
add
lods
lods
xchg
data16
dec
push
mov
mov
ljmp
add
das
loop
gs
ss
dec
popf
inc
xchg
in
clc
mov
push
repnz
sti
test
out
push
dec
push
jecxz
sti
imul
jl
or
mov
std
jo
mov
nop
out
repnz
xor
cmp
lahf
stos
mov
test
xchg
ficompl
sub
lds
scas
cmp
lods
repnz
push
jne
adc
sarl
mov
mov
adc
mov
add
lret
sti
insb
call
xor
es
cmpsb
stos
aas
adc
inc
rcl
roll
push
loope
loopne
xlat
sbb
call
xchg
sbb
mov
dec
insl
inc
push
icebp
pop
into
push
mov
fdivl
and
je
jbe
xor
cmp
dec
shr
fdivrs
faddl
test
ja
dec
std
xchg
jnp
pop
jne
pushf
sbb
push
in
sbb
or
jnp
pop
sub
jmp
hlt
ja
pop
test
mov
dec
mov
test
mov
les
push
mov
ss
fbstp
cwtl
js
leave
jle
adc
push
clc
and
mov
jne
push
and
mov
ds
sbb
sbb
sub
pop
out
dec
jb
push
fistpl
cltd
push
popa
xchg
push
inc
inc
pop
divl
push
leave
test
lea
inc
mov
mov
mov
push
subb
rorl
mov
mov
dec
mov
mov
pinsrw
bound
testl
ss
test
fiadds
jbe
inc
sub
or
pop
dec
inc
add
ja
iret
cmpsb
fistpl
leave
inc
ret
xorl
leave
push
call
or
lds
jbe
inc
inc
out
inc
push
popf
fldl
inc
cmp
jno
mov
clc
pop
and
fnstcw
mov
lret
test
fs
jg
sti
pop
mov
lret
or
fucomip
pusha
dec
push
adc
test
enter
cmp
mov
xchg
mov
sbb
scas
xor
je
and
into
fsubl
int3
xchg
stc
js
sbb
adc
cmp
jae
popf
ss
addb
aam
and
sarl
and
jmp
stos
and
lcall
in
push
mulb
lcall
fdivr
inc
push
fucom
pop
pop
cltd
lock
enter
lock
lods
dec
push
or
fidivrl
dec
imull
sbb
mov
cltd
dec
mov
cmpsb
andl
sub
cmp
mulb
nop
pop
popa
pusha
jp
and
dec
sbb
rol
adc
idivb
and
sub
sbb
sbb
adc
popf
out
fisttpl
in
sbb
outsl
int3
movsl
mov
loopne
imul
popf
xor
sub
ja
fcmove
cmp
cli
xchg
cmp
xor
ja,pt
es
lock
incb
insl
add
inc
stos
sbbb
mov
or
faddp
adc
and
and
imul
mov
inc
loop
int3
in
sub
and
push
sahf
xchg
or
in
and
adcl
aam
shlb
add
js
xchg
xor
arpl
loop
int
outsl
inc
aam
fbld
out
push
imul
dec
popa
xor
insl
lcallw
int3
adc
and
movsl
inc
rclb
pop
imul
push
mull
jbe
and
jl
aam
push
cli
jle
aaa
adc
sub
and
sar
jb
push
cmp
jge
rol
pop
lds
dec
cmp
xlat
sbbl
and
ret
sti
daa
dec
icebp
xchg
xchg
in
adc
mov
jecxz
mov
jmp
sti
xchg
cltd
sti
insl
cltd
out
lret
sub
xchg
sbb
lock
push
out
xchg
cmp
fcomps
int3
dec
or
adc
les
mov
mov
sbb
pop
ss
adc
je
mov
das
movsb
popa
xchg
aam
scas
push
aad
jno
jge
insl
cmp
jnp
dec
mov
add
jg
test
popa
xor
push
imul
imulb
cltd
pop
adc
decl
and
adc
sbb
lcall
dec
popa
lret
negb
in
jge
das
jnp
push
rol
jmp
andb
mov
xchg
xchg
mov
test
mov
int
scas
test
xor
rorl
pop
cmp
jno
mov
popa
repz
push
cwtl
push
ss
cmpsl
lahf
divl
gs
sbb
lahf
dec
lcall
dec
scas
xchg
les
mov
cmc
cmp
jl
je
pop
jg
dec
pop
inc
add
jl
mov
ret
cmp
ret
dec
cmp
sub
lock
dec
out
mov
xchg
sbb
mov
stos
cmp
add
in
cmpsl
and
cs
pushf
adc
pop
mov
mov
cmp
dec
popa
adc
sbb
and
in
sahf
dec
inc
or
mov
adc
clc
fildl
ss
and
jns
sbb
sbb
imul
dec
add
sbb
push
sbbl
xchg
in
int
jmp
xchg
addr16
rol
shll
dec
xchg
cmp
dec
test
xchg
pop
insl
sub
fldcw
fidivrl
aas
xor
xlat
cmp
add
inc
and
addr16
insl
stos
jp
fidivs
sub
out
jbe
inc
fwait
sbb
jnp
sbb
stos
int3
in
std
fs
imull
adc
xchg
mov
iret
adc
dec
dec
fnstenv
scas
ret
cmp
xchg
les
ror
js
jne
int
stos
xchg
repz
test
push
push
fnsave
stos
ljmp
adc
or
popf
inc
lcall
inc
sub
daa
cmpsl
fnsave
hlt
mov
rorl
sbb
pop
fbstp
aas
iret
fildl
insb
pop
hlt
sahf
mov
jnp
scas
push
xor
inc
pop
cs
scas
ja
fistpll
sub
cmp
leave
pop
mov
popa
push
jl
fstpt
xor
out
js
xchg
dec
and
imul
sub
mov
imul
outsl
sbbl
jg
movsb
pop
ss
addl
pop
sbb
add
xor
popa
ljmp
push
fsubrl
push
dec
fsubrs
xchg
fmull
sbb
mov
call
pop
stos
rcrl
cmp
fldt
enter
pusha
mov
xchg
clc
shrl
repz
sub
jp
stc
nop
pusha
fwait
cmp
lock
mov
push
cwtl
ljmp
cld
lret
jns
xor
mov
mov
shl
push
xor
push
movsb
test
lret
sub
mov
lret
jnp
daa
jg,pt
mov
test
not
iret
imul
cmc
mov
xchg
cld
mov
pop
sbb
in
lds
mov
shrl
mov
notl
sub
sbb
js
mov
lahf
jbe
mov
inc
inc
xlat
fidivl
test
insb
int3
loope
lret
pusha
inc
fsts
out
insl
xor
rcrl
sbb
jge
mov
clc
mov
jge
daa
in
xchg
aas
push
bound
mov
int3
mov
mov
cli
push
mov
add
mov
enter
mov
addr16
clc
pop
xchg
cld
pusha
ss
push
mov
xchg
rorb
loopne
clc
iret
add
idiv
dec
inc
stos
dec
or
pop
pop
fildl
int
test
or
outsl
test
adc
out
out
sub
push
imul
or
xchg
call
add
and
nop
xor
adc
xor
sti
jbe
fisubrl
xor
fnstenv
and
popf
ja
pop
xchg
int3
pusha
clc
js
cmp
lock
dec
loope
or
push
sub
pop
ja
and
int
sti
mov
fisttpll
mov
mov
ljmp
loopne
es
add
adc
aas
adc
cltd
test
in
push
testl
aam
mov
pop
or
ja
stc
sub
js
loop
push
nop
stc
mov
mov
xor
ja
sbbb
and
xchg
cld
mov
or
insb
and
xchg
out
jge
jbe
cs
jno
fsubrs
push
cltd
jb
add
hlt
pop
subl
jp
aas
cmpsl
push
jge
or
orl
sub
fs
clc
cmp
cmp
mov
push
je
pop
adc
and
push
cld
jb
dec
sbb
hlt
imull
sbb
sbb
jge
pop
jmp
cld
sub
out
cmpl
pop
cmpb
mov
adc
js
cmp
mov
shrl
push
lcall
and
add
popf
mov
icebp
nop
lea
mov
mov
in
stos
push
je
shl
mov
and
or
lods
insl
xchg
in
add
dec
shl
rclb
pop
inc
push
push
punpckldq
adcl
fiaddl
xchg
dec
lods
shrb
in
repnz
xchg
testb
lock
push
ds
jg
ror
push
push
in
mov
test
fwait
scas
outsb
pop
inc
gs
mov
sahf
sbb
cmpsl
mov
jge
add
cmpsb
ds
pop
mov
xchg
scas
jl
and
pop
ja
mov
or
movsb
mov
in
iret
mov
and
fldcw
pop
add
pop
ljmp
stos
repnz
push
xchg
sub
int
idivb
dec
push
in
movq
mov
movsl
jns
push
xlat
aam
or
gs
mov
push
mov
dec
mov
lret
call
sub
and
leave
xchg
mov
mov
out
stos
push
std
pop
jae
mov
jle
cli
lret
dec
inc
mov
push
ljmp
sbb
sub
mov
cmp
in
dec
repz
sarl
rol
imul
and
dec
push
xchg
in
push
cmc
daa
mov
or
out
or
call
jo
push
sub
ds
add
cmp
cltd
and
and
mov
sub
cli
mov
lret
push
mov
hlt
push
in
mov
sbb
xchg
repz
dec
jnp
sub
lahf
icebp
lret
cmp
xor
movsb
gs
dec
cltd
std
loope
mov
aam
cmp
rcrb
and
add
mov
sbb
outsl
pop
in
adc
mov
sub
lds
int3
fidivrs
add
in
cs
pop
paddw
insb
enter
test
in
outsb
add
jne
mov
stos
mov
xchg
pop
int
stos
jne
xchg
mov
mov
push
cmpsb
call
and
mov
imul
pushf
dec
call
mov
in
test
fsubs
push
nop
pop
pop
mov
aad
ljmp
add
clc
jo
imul
mov
pop
addb
mov
in
add
and
mov
sub
ret
ss
mov
jecxz
sbb
and
fisubrs
div
adcb
andl
push
jo
rcl
push
jmp
jbe
and
adc
and
pop
jle
mov
sub
rorl
mov
or
pop
testb
jge
cmp
push
in
adc
push
shl
daa
inc
add
cmp
orb
push
jnp
lds
das
fdivl
mov
fs
inc
cmp
pop
cmc
fdivrl
inc
lret
ficoml
notl
cmp
pop
or
mov
xor
ljmp
mov
mov
mov
mov
out
mov
std
jecxz
sarl
cmp
or
vpaddusw
je
inc
repnz
jae
inc
repz
ret
popa
stos
repnz
sub
inc
test
cmp
xchg
dec
popa
stc
in
and
je
jno
outsl
xchg
test
and
cmp
dec
out
mov
scas
daa
mulb
ficomps
lea
ret
sub
or
push
ljmp
xchg
aaa
shrl
inc
pop
sbb
adc
mov
xorl
lock
sub
enter
lcall
jns
stos
pop
jl
cltd
nop
xchg
push
push
mov
push
nop
sub
mov
mov
cmc
pop
loop
cmpsb
jns
ds
jle
xor
jnp
mov
pushl
sub
incb
flds
sbb
sub
pop
add
ret
sbb
je
mov
or
xchg
pusha
cmc
mov
outsb
sti
or
int3
xor
or
pop
ja
xor
push
cli
cmpsl
imul
push
add
sahf
jb
cmpsl
inc
outsb
jle
jns
adc
int
xor
xor
xchg
jge
es
dec
arpl
cmp
enter
mov
mov
sub
dec
add
in
jbe
mov
pop
imul
or
sahf
mov
push
sbb
inc
stos
push
loope
pop
lods
movsl
adc
jae
idivl
insl
push
xchg
push
loope
jb
outsl
dec
xchg
das
imul
and
mov
loope
cmpsb
lock
scas
xchg
push
or
cmpsl
lock
inc
pop
rcll
imul
and
xchg
ja
jne
iret
rclb
xchg
or
add
stc
jge
hlt
push
loop
push
adc
cmpsl
outsb
out
dec
jns
popa
ja
pop
xor
test
scas
mov
scas
mov
lock
hlt
mov
movsl
das
mov
or
fmuls
add
push
jbe
cmp
stos
jbe
je
jp
leave
out
jae
xchg
push
insl
popa
or
sarb
jmp
call
pop
jg
xchg
jle
leave
and
push
dec
movsb
push
xchg
xchg
shrb
sti
repnz
adc
testl
inc
cli
cltd
cmpsl
repz
pusha
ljmp
or
adc
push
mov
gs
movsl
mov
pop
movsb
aam
int
adc
mov
data16
xlat
test
inc
or
jb
pop
sbb
add
es
test
sbb
push
test
mov
jnp
sar
jae
and
inc
rorb
int3
jo
xchg
cmp
and
scas
adc
cmp
cli
jb
adc
pop
gs
pop
lock
clc
inc
pop
sbb
and
mov
dec
mov
shlb
mov
sbb
stos
mov
shrl
xchg
jle
insb
aam
dec
adc
repz
jmp
movsb
push
aad
lds
or
scas
sub
add
lcall
inc
mov
enter
mov
cmpsb
enter
sarl
adc
icebp
addr16
or
shl
orl
xchg
xor
pop
rorl
adc
xchg
adc
sub
aam
testb
or
inc
cld
pop
push
adcl
dec
fwait
or
subb
fnsave
icebp
xchg
inc
sub
cmp
pop
in
inc
sub
js
dec
dec
mov
divb
jne
push
inc
enter
xor
insl
dec
push
cli
push
mov
aam
inc
fsubs
ljmp
les
cmp
rol
testl
mov
push
mov
dec
loopne
fbstp
add
and
mov
ja
out
loope
cmp
ljmp
call
adc
push
fmul
lret
and
dec
out
or
mov
sub
mov
xor
add
or
adc
insb
sbb
lea
jbe
xor
cmp
ds
testb
inc
mov
push
cmp
xchg
imul
mov
test
sbb
jae
roll
push
jecxz
push
cmp
and
aas
cmp
jo
aas
sahf
cmp
jbe
inc
dec
adc
ljmp
or
fmul
cmp
inc
dec
shr
cwtl
adc
pushl
mov
xchg
mov
pop
adc
aas
inc
test
les
movsl
lea
int3
inc
loop
and
push
inc
lret
sbb
stos
popf
push
ss
int3
insl
sub
gs
std
pop
lock
jno
mov
inc
cmpsb
mov
xor
mov
cmp
add
outsb
push
pop
jae
add
ret
adc
xchg
enter
inc
add
stos
jge
pusha
and
fisttpl
and
cmc
lret
into
neg
jle
cs
inc
cmpsl
mov
in
fbstp
bound
adc
gs
cmpsl
insl
push
dec
and
es
add
ret
pusha
clc
cli
scas
or
hlt
lcall
ret
sub
push
push
and
nop
daa
xor
js
push
xor
adc
and
movsl
imul
push
fstpl
and
xchg
push
jb
or
jle
mov
enter
xor
loope
push
shll
js
in
hlt
fnsave
inc
xchg
or
out
jecxz
mov
cmp
gs
dec
scas
cmp
lea
inc
fildll
or
enter
aas
sar
pushf
or
jmp
and
sahf
mov
inc
fisttpl
popa
clc
xchg
mov
push
int
jge
das
mov
sub
imul
out
xchg
mov
xlat
repz
mov
cs
or
or
cmpb
jecxz
push
enter
jbe
or
int3
mov
fildl
enter
mov
mov
dec
orl
cli
mov
cli
int3
roll
mov
std
push
and
jns
push
sub
or
shll
jnp
mov
mov
in
dec
mov
scas
repnz
cmp
add
adc
por
adc
aaa
ds
push
add
in
mov
and
and
cld
cmp
loope
insl
add
jae
adc
and
lds
mov
inc
outsl
scas
mov
ficomps
xchg
cmp
mov
pop
cltd
scas
imul
xchg
cmc
imul
cwtl
daa
cmc
fcoml
cs
leave
cmp
out
jmp
xor
add
jns
pushf
jns
test
scas
pop
jne
mov
pop
cmp
cmp
add
aam
daa
fbld
jmp
inc
mov
dec
lahf
cwtl
imul
ljmp
adc
cmpsb
sbb
lods
outsl
inc
insl
aas
mov
jmp
sub
add
cltd
cmpsb
push
lds
inc
pusha
pop
clc
orl
jp
pop
xchg
push
out
nop
dec
les
insb
push
cmpsb
mov
dec
adc
push
std
sbb
xorl
dec
aaa
shrb
jp
pop
and
or
ja
xchg
cmp
icebp
movsb
and
pop
sub
push
fdivrl
or
imul
sbbb
bnd
pop
adc
cmp
fstpl
add
inc
mov
clc
cmp
test
int3
lret
mov
pusha
lock
repz
cmp
cmp
lret
inc
aad
js
pusha
dec
push
inc
dec
push
ds
sahf
mov
mov
mov
sahf
clc
rep
mov
jmp
aad
incl
fbld
loop
stc
test
push
js
jne
xor
int3
cmpl
push
dec
add
sub
lret
and
dec
movsb
xchg
dec
pop
clc
loop
adc
decb
cltd
cmp
inc
lret
pop
inc
lcall
xchg
icebp
lret
out
fistpll
js
leave
test
sub
int3
pop
sbb
push
mov
fistpll
out
mov
mov
mov
mov
sahf
jo
mov
and
lock
add
mov
jo
addr16
outsb
sbb
cmc
mov
inc
xchg
pop
jp
fbstp
popa
jl
sub
sub
scas
add
out
in
orl
jbe
mov
ja
fwait
jbe
in
lea
lcall
test
std
shrl
sbb
inc
fbld
mov
frstor
mov
bound
mov
mov
repnz
and
ss
xor
xchg
pop
push
pop
inc
mov
push
adc
push
inc
jmp
into
gs
pop
test
loopne
dec
sarl
movsl
mov
call
int
pop
int3
sbb
in
xor
push
outsl
push
ret
aad
mov
mov
insl
sti
or
fstpt
mov
or
mov
into
in
js
mov
sub
mov
loopne
aaa
sahf
mov
inc
sbb
aaa
jmp
outsb
mov
or
subb
add
xor
mov
scas
hlt
mov
and
ds
mov
xor
pop
ja
mov
mov
adc
dec
or
cmp
imul
sub
dec
pop
pop
cmp
cmp
sti
add
push
cmpsl
ret
jns
gs
mov
pop
pop
mov
loope
xor
mov
arpl
jo
movsb
testb
jle
mov
mov
lcall
cltd
cs
mov
daa
cmpsb
pop
test
andb
loopne
pop
shll
or
ja
add
ljmp
xor
and
dec
mov
sub
out
sub
mov
sub
rorb
lods
ljmp
inc
ds
xor
js
sub
pusha
out
push
mov
pop
hlt
xchg
xor
jnp
cli
idiv
fs
repz
mov
movsb
movsb
push
dec
mov
mov
push
jg
loop
and
sbb
pop
ljmp
dec
ret
add
dec
push
outsl
in
sbb
dec
push
mov
mov
in
sbb
fists
push
adc
lcall
cltd
push
mov
jmp
lret
lret
aad
push
flds
mov
xchg
xchg
mov
dec
jno
das
pmulhuw
jne
rorl
movsl
in
lret
dec
loop
xor
aaa
pop
and
nop
add
cmp
cmp
xor
enter
cmp
cli
subl
addb
rcrl
sub
dec
cmp
push
shlb
sbb
mov
shll
fadds
jno
sub
in
test
sti
aas
mov
lcall
xchg
add
cmpsl
fnstenv
add
dec
dec
mov
pop
lret
dec
fst
in
lods
sbb
push
in
pushf
into
cmp
sub
aaa
xchg
dec
adc
hlt
loop
int
cmc
push
jae
in
xchg
inc
fimull
arpl
test
mov
dec
dec
aas
aad
out
cwtl
gs
in
daa
ljmp
push
fistpll
dec
xchg
out
hlt
in
pop
add
sub
add
xor
xchg
hlt
mov
aaa
pop
dec
sahf
mov
outsl
dec
insb
xchg
adc
in
fimuls
ja
xchg
aaa
or
lret
push
test
inc
notl
jns
mov
mov
fdivs
test
jmp
cmc
fidivrs
mov
push
sbb
mov
popf
lds
jae
cmc
and
loope
loope
ja
lret
xor
mov
jp
stos
jne
and
mov
inc
sbb
scas
or
adcl
jno
mov
lock
pop
leave
dec
scas
mov
stos
inc
mov
push
mov
mov
sub
aaa
cmp
inc
lcall
adc
or
dec
das
addr16
jbe
mov
andl
push
cld
mov
push
in
das
cli
imul
gs
adc
and
or
adc
add
mov
xor
mov
sbb
jo
shr
and
sbb
mov
ljmp
xlat
pusha
ss
and
mov
push
cltd
adc
push
inc
pop
lret
cmp
inc
push
and
mov
das
mov
sbb
jbe
clc
sbb
push
outsl
cmp
sub
movsb
inc
xlat
lcall
and
out
mov
pusha
stos
ret
sbb
lds
pop
into
popa
fidivl
mov
mov
mov
out
sbb
ja
cld
test
shlb
push
stc
popf
mov
addb
nop
mov
jbe
int3
xchg
movsl
push
pushf
xchg
shrl
ljmp
push
sbb
inc
and
xchg
jbe
inc
into
aad
repnz
test
insl
rol
or
or
ret
repz
mov
nop
mov
repz
inc
xchg
add
jns
xchg
in
push
sbb
syscall
sbb
pop
stos
pusha
and
pop
mov
jle
adcl
aam
aad
and
int
cmp
push
out
sub
mov
sub
shr
xlat
lahf
testl
cmp
test
xchg
clc
and
mov
or
mov
lea
cmpsb
into
push
mov
cld
lcall
in
push
stos
sub
xchg
adc
adc
jno
xchg
push
cmpsl
ret
adc
fcmovnu
mov
aas
dec
stos
jns
pop
cld
jbe
jp
sbb
push
fcomps
in
sbb
push
pop
mov
mov
sarb
cmpsl
mov
push
mov
pop
stos
pop
bound
mov
jne
xor
add
cmp
jne
xor
jnp
sahf
sti
push
inc
mov
sub
pop
inc
push
aam
mov
std
push
mov
jmp
orl
sub
adc
sbb
and
lea
jl
or
dec
mov
insl
dec
scas
ret
std
stos
mov
lods
and
pop
int
push
push
std
cs
das
lods
shll
arpl
fcos
jo
or
jno
mov
hlt
push
in
scas
rorb
into
sbb
addr16
out
pop
imul
pop
xor
dec
movsl
jle
fisttpll
icebp
xlat
sbb
lods
outsb
mov
in
ss
inc
data16
lds
adc
cs
jg
lods
mov
rcll
jle
int3
pop
lret
push
dec
scas
mov
ret
popa
stos
rcrl
mov
inc
cli
outsb
cli
cmp
jae
jp
hlt
sbb
sahf
sub
or
and
addr16
sti
lret
cmpsl
dec
getsec
mov
sbbl
lds
lret
xchg
push
dec
scas
inc
icebp
or
pop
leave
imulb
push
pushf
cmp
and
sub
imul
sub
push
sub
andl
aad
jle
in
into
fnstsw
incl
inc
int
sub
fisttpl
pop
sbb
stos
push
sahf
cmp
push
repz
jns
gs
out
xorl
movsl
fcmovnu
pushf
mov
repnz
sub
sbb
sub
lea
jmp
inc
xor
xchg
imul
jmp
or
aas
ljmp
xchg
sbb
lahf
rorl
fimull
les
in
in
dec
repnz
mov
sub
fxch
stos
inc
mov
fwait
dec
xchg
movsb
inc
lretw
jl
punpckldq
stos
mov
or
adc
pop
pop
sbb
dec
mov
jo
and
inc
stc
outsl
popf
in
pusha
sbb
mov
mov
cltd
add
stc
push
fldcw
inc
ret
dec
outsb
aad
and
ja
pop
mov
lods
xsaveopt
inc
stc
mov
inc
insb
mov
fwait
pushl
ret
outsb
jnp
std
mov
dec
and
adc
popa
xor
lods
pop
enter
jns
mov
jmp
or
out
add
lods
jp
mov
pushf
mov
lods
loope
push
push
clc
popa
aaa
fcmove
sbb
cmp
cmc
test
dec
push
leave
rcrb
aaa
push
jno
rolb
adc
and
jno
leave
data16
dec
mov
aaa
mov
jl
pop
lods
xchg
in
mov
cmp
inc
lcall
and
xchg
cmp
sub
cmpb
jns
mov
fidivl
arpl
stos
mov
leave
and
adc
inc
push
dec
cmp
jmp
adc
cmp
xor
sub
jns
sub
popa
fmul
sub
in
inc
and
sub
jle
rcr
push
add
js
jmp
pop
or
pushf
pop
xchg
jge
ficoml
xlat
vpmuludq
outsl
mov
push
sub
movsb
adc
jp
lret
lret
cmp
lret
mov
hlt
mov
cwtl
das
pop
mov
call
dec
push
mov
into
ds
xchg
rclb
addr16
test
inc
mov
in
call
and
out
mov
and
repnz
mov
xchg
jmp
push
and
ret
addl
push
xchg
add
push
and
ss
or
mov
sub
rcrl
aad
pop
arpl
in
and
mov
mov
dec
outsl
and
mov
or
push
andb
and
in
cmp
xchg
pop
call
pop
sub
int
imul
ljmp
inc
addr16
fnstcw
and
cld
rol
mov
call
insb
shlb
cltd
pop
aaa
stos
punpcklbw
jl
dec
xor
dec
cli
push
rolb
test
into
fwait
aad
jl
mov
adc
out
std
cltd
sub
vpaddsb
xor
add
pop
mov
mov
ljmp
fdivs
aam
fcmove
int3
push
mov
icebp
pop
mov
imul
jae
inc
aam
jnp
fidivs
mov
sarb
gs
dec
das
ficoml
lcall
push
imul
out
jl
pop
inc
push
adc
push
mov
adc
lock
sub
inc
push
ljmp
mov
scas
mov
sti
sbbl
or
in
xor
xor
test
repnz
scas
leave
jecxz
push
cmp
jecxz
in
in
adcl
jb
jb
ret
out
dec
fdivl
pushf
dec
mov
pushf
xchg
sub
inc
cmpsb
jne,pt
iret
jle
jae
adc
xor
stos
adc
sub
sub
xchg
outsb
jp
pop
push
pushf
ds
pop
dec
push
jmp
add
out
test
pop
xchg
inc
sarb
popa
enter
inc
sbb
enter
mov
push
cmp
cs
pop
mov
mov
add
mov
sbb
cld
mov
test
lods
add
sbbl
lods
nop
je
cmpsl
in
cmp
imul
imul
test
sbb
movsl
sbb
mov
or
fidivrs
addr16
imul
movsb
jle
lret
mov
fcomip
adc
jg
insb
jbe
mov
ret
fisttpll
movsb
movsb
mov
loop
fnstenv
and
jae
ret
inc
cli
push
in
pop
push
sbb
mov
imulb
leave
cmp
push
mov
sub
enter
jo
insl
jg
scas
int3
lcall
inc
pop
lcall
push
sti
mov
aad
adc
int
dec
cmp
les
pop
test
subl
pop
lret
addr16
scas
ret
lock
out
sbb
jno,pt
fmuls
pop
dec
add
pop
dec
sub
icebp
jb
sar
insb
cmp
mov
sbb
push
sub
int3
cmp
and
jl
imul
out
std
ret
ja
adc
out
cmpsb
mov
outsl
xlat
ss
testb
mov
adc
push
sbb
xor
out
and
sbb
jae
sarb
pop
dec
jg
ja
mov
popw
add
add
mov
sub
jae
notb
jecxz
inc
inc
add
insb
stos
test
aam
insl
inc
shrb
xlat
mov
or
insb
sbb
push
inc
rolb
push
mov
pop
js
ficoml
arpl
out
jmp
or
gs
and
xorb
mov
sbb
mov
shll
jmp
fstl
mov
outsl
enter
out
fnsave
popa
cld
cli
leave
mov
in
xchg
popa
adc
sbb
movsl
popa
leave
int
ret
add
lods
call
add
dec
mov
or
fisubs
clc
mov
movsb
and
addl
xchg
sub
fisttpl
ficomps
fsubl
and
aad
das
inc
call
and
dec
subl
mov
imulb
les
gs
scas
fidivs
mov
data16
decb
mov
mov
jae
into
pop
push
lea
push
xchg
or
mov
in
add
fwait
pop
and
cltd
pop
lcall
jbe
xlat
sbb
mov
cmp
cltd
pop
or
add
dec
bound
xor
enter
xor
xchg
jge
in
dec
dec
ret
cmpsb
pop
xlat
shll
insl
ja
daa
jmp
test
fisubrl
mov
push
fidivl
push
xor
repnz
and
lahf
sahf
fdivp
dec
int3
mov
loopne
push
testb
inc
ror
hlt
adc
push
dec
mov
lods
fiadds
push
push
jae
ss
ud0
mov
adc
imul
fadd
jle
xchg
sti
insb
add
lock
xor
push
sbb
xchg
xor
movsb
and
mov
xchg
sbb
ret
aas
loope
mov
lcall
lcall
shr
dec
push
cmc
adc
adc
int3
jne
ljmp
sub
dec
es
gs
fdivrl
stos
rcrb
pusha
or
mov
lds
cli
iret
jge
jp
mov
pop
mov
loopne
cwtl
add
sbb
mov
lret
outsb
js
mov
pop
insb
mov
pushf
dec
and
sarb
aad
pushf
jmp
cmp
cmp
mov
sbb
stc
and
dec
sbb
adc
push
aas
sti
jmp
pop
insb
jo
adc
movsb
dec
es
xchg
repz
in
fldt
ja
stos
in
jecxz
add
push
xlat
cmp
lods
scas
add
sbb
push
fildl
mov
jno
xor
push
jnp
roll
test
dec
and
xor
fidivrs
push
pop
call
mov
fwait
roll
popf
mov
fs
lock
sbbb
test
add
mov
inc
adc
mov
aad
mov
add
ret
hlt
inc
cltd
imul
fisttpl
pop
pop
adc
stos
rcll
adcb
sarb
stc
adc
push
hlt
clc
add
and
fdivrs
dec
fcmove
pop
aam
jno
and
call
iret
mov
cmpl
or
jmp
push
daa
cmp
cltd
mov
xchg
cmp
jb
shll
adc
jp
add
add
sarb
lret
bound
aaa
pop
adc
daa
jmp
in
xchg
dec
xchg
mov
pop
xchg
lret
mov
int
popa
mov
rcrb
out
andb
lcall
fsubrl
enter
xor
sbb
ficomps
daa
dec
scas
lods
popw
sbb
push
pop
clc
stos
testb
out
jmp
push
js
popf
dec
movsl
rolb
adc
stos
xchg
test
repz
and
adc
cwtl
das
mov
sub
scas
shrl
cmp
xchg
ret
xlat
ret
xor
push
cmpb
sarb
push
iret
ljmp
push
push
lods
inc
xchg
mov
stos
mov
repz
adc
fisubrs
mov
or
mov
pusha
jl
shll
scas
cmp
cmp
mov
dec
sar
xchg
jecxz
loope
inc
mov
adc
movsl
cmp
pop
ret
aaa
xchg
out
adc
inc
call
xor
push
dec
push
imul
add
ret
jne
insl
push
or
pop
data16
pop
xlat
outsl
inc
cmp
data16
xchg
xor
ret
leave
cmp
mov
loope
movsb
mov
out
sbb
jo
cwtl
ror
xor
fiadds
inc
es
or
addl
in
ret
jge
mov
pop
xor
outsl
or
xchg
mov
xchg
fs
pop
out
sti
cmp
jo
fsts
hlt
inc
push
testl
sbb
jge
pop
adc
lret
les
arpl
test
jne
fisubs
jae
fisubs
mov
dec
cwtl
pop
cltd
mov
in
xchg
push
or
inc
cmp
lahf
pop
or
sub
add
cltd
cmp
hlt
scas
pop
cmp
pop
notl
int
shl
loop
leave
push
aam
lahf
adc
mov
add
and
loop
das
add
idiv
out
mov
shl
dec
lea
and
mov
or
mov
mov
es
xor
ret
jne
jns
cmc
mov
mov
in
loop
cmp
ds
pop
pusha
cltd
mov
gs
mov
add
mov
test
mov
mov
jo
repz
jb
iret
push
in
popa
xor
xchg
imul
xor
leave
cmp
fldl
mov
daa
stos
out
and
pop
adc
repnz
hlt
dec
jle
sbb
outsb
jnp
ss
pop
aas
arpl
ljmp
pop
jecxz
iret
flds
mov
hlt
and
out
jmp
cmc
jo
pushf
jp
into
test
and
jmp
dec
jno
bnd
pushf
sbb
pop
push
gs
ss
xchg
jmp
cmp
and
repnz
movl
in
and
mov
mov
xor
flds
enter
int
std
pop
inc
fimull
arpl
xchg
out
clc
pop
mov
push
data16
cli
mov
cmp
sub
fs
xchg
pop
lcall
data16
test
in
cltd
lret
in
sub
dec
jecxz
jecxz
cmp
xchg
mov
push
pop
inc
sbb
inc
mov
in
pop
enter
jnp
cmpsb
test
and
lret
aam
enter
js
cs
lcall
xor
inc
mov
mov
loope
test
cltd
int
movsl
icebp
add
pop
push
fwait
adc
add
mov
or
sbb
fimuls
movb
pushf
movsl
add
mov
and
jns
push
stos
mov
or
xchg
jge
cmp
xchg
ficomps
dec
sub
outsl
adc
fwait
int3
arpl
push
sbb
repnz
lahf
mov
int
clc
sbb
fcompl
jmp
in
or
mov
sub
adc
dec
mov
xor
shl
addr16
popa
push
mov
adc
push
iret
mov
ss
push
pop
or
out
and
mov
jne
pop
repz
mov
jp
xchg
push
ret
sbb
cmp
das
add
sub
jb
adc
cwtl
arpl
out
aaa
pushf
jp
dec
jmp
mov
jno
mov
mov
mov
outsb
lods
mov
mov
jecxz
dec
fdiv
dec
sarl
daa
fs
pop
mov
es
mov
cli
mov
push
push
cwtl
loopne
pop
icebp
sub
mov
xchg
in
inc
lret
clc
or
test
fwait
int3
arpl
mov
cmp
call
add
ficoml
idiv
pop
rep
pop
mov
dec
test
xchg
mov
int3
arpl
sahf
ljmp
in
sarl
mov
adcb
xchg
add
mov
insl
sub
pop
mov
xchg
mov
add
cmp
es
sub
cli
sub
pop
mov
std
or
shll
out
les
mov
adcb
jnp
loop
shlb
or
imulb
scas
ds
lea
fstpt
or
outsb
scas
xchg
clc
jecxz
inc
arpl
cmp
test
mov
mov
adc
les
outsl
mov
add
pop
std
inc
cmp
push
jecxz
js
pop
outsb
ja
daa
clc
push
mov
hlt
jns
js
mov
loopne
add
inc
sub
cmpsb
mov
jmp
dec
jnp
ljmp
inc
xchg
push
sbb
adc
or
jecxz
mov
lret
and
xlat
scas
mov
cmp
sbbl
xchg
sbb
in
mov
notb
jb
imul
aaa
data16
lds
inc
fstpl
mov
xchg
out
imul
shl
subb
ret
shll
mov
loop
xor
sub
movsb
cwtl
popa
jno
mov
test
or
mov
pop
cmp
add
stc
jb
lahf
mov
or
shlb
pop
pop
js
mov
out
add
jmp
cmpsb
ja
je
push
iret
data16
out
es
mov
or
stc
xor
mov
mov
dec
scas
frstor
inc
fisttpll
imul
outsl
inc
std
jo
mov
imul
add
stos
popf
adcb
sbb
sub
cmp
pop
insl
cmp
mov
or
sub
outsb
cmpsl
dec
loope
pop
scas
jg
jp
aas
mov
xchg
add
cmp
stos
mov
test
xor
mov
jmp
subl
iret
lahf
inc
lcall
add
mov
jmp
cmp
fwait
ss
in
mov
out
xchg
xchg
and
hlt
mov
and
rclb
lds
jne
sbb
shll
into
orl
lods
and
fdivrs
stos
and
or
mov
stos
insl
stc
or
clc
rol
pop
push
out
es
sub
add
adc
ja,pn
test
dec
popa
orl
negl
ss
and
js
in
iret
dec
push
mov
mov
iret
sahf
in
mov
scas
jno
ljmp
icebp
aas
inc
stos
jo
clc
lret
xchg
sbb
call
fsubrp
ret
push
into
mov
imul
dec
and
sbbb
js
jno
dec
std
inc
pop
outsb
mull
aaa
mull
lar
add
adc
or
mov
loopne
int
add
sbb
xchg
sarl
inc
arpl
and
inc
pop
lds
out
inc
mov
dec
jecxz
push
bound
push
xor
roll
pop
push
fsubp
ror
std
mov
add
and
enter
sub
sbbl
or
fidivs
push
cmp
sbb
jne
les
fwait
sti
and
mov
enter
roll
pushf
xor
lea
xor
mov
rcr
xchg
ljmp
push
dec
pop
addb
stos
aas
xchg
inc
repz
xchg
xchg
cmpsb
cmp
pop
xor
and
dec
adc
cmc
cmp
xlat
push
push
loopne
data16
pop
adc
push
test
cmpsb
push
jg
hlt
cmpsb
fcomps
arpl
ss
popf
pusha
push
pop
xor
jl
add
sub
or
sar
hlt
clc
xchg
mov
sbb
lea
jae
movsl
inc
push
outsl
dec
pop
lock
lret
cmp
addr16
mov
leave
xor
inc
adc
aam
movsl
movsb
sbb
aaa
cmp
push
cmpsb
arpl
fucomi
push
rcrb
xor
shll
mov
fiadds
dec
je
adc
insl
sbb
gs
imull
loop
orb
mov
stos
std
sbb
repnz
loope
fisttpll
bound
inc
mov
lds
and
pop
mov
push
lahf
loop
or
in
sub
mov
and
imul
call
and
xchg
mov
mov
test
mov
ja
cmpb
ror
mov
js
imul
orb
js
adc
cld
popa
pop
loope
mov
loopne
cli
sbb
outsb
push
fstpl
xor
movsl
out
sbb
sbb
ds
data16
int3
sub
adc
dec
or
rcrb
bound
mov
sub
int3
dec
dec
gs
add
dec
xor
jle
fsubl
inc
lea
xor
ss
add
fildll
test
daa
mov
mov
add
xchg
xchg
mov
mov
andb
sbb
out
inc
mov
mov
jge
sbb
jge
call
add
jle
lds
clc
push
movsl
add
jae
in
test
and
enter
icebp
xlat
ret
jp
push
pop
dec
dec
sub
andb
int
dec
js
sbb
jb
test
jle
xchg
incl
add
or
pop
and
pop
fmull
inc
stc
fidivrs
int3
push
jb
pop
push
push
outsl
iret
lods
shlb
push
mov
jbe
pop
push
ss
mov
loope
stc
test
sahf
sub
inc
sbbl
sbb
cmp
add
and
in
xchg
add
xchg
imul
adc
push
mov
mov
adc
adc
mov
test
lret
ret
push
mov
pop
hlt
aam
cmp
insb
repnz
pop
sbb
jge
xchg
je
fwait
and
sub
or
pop
push
adc
icebp
add
sub
inc
or
mov
or
pop
inc
sub
dec
lea
pop
cmp
dec
rcl
sbb
imul
fnstsw
lds
shrb
cmp
jg
jle
movsb
inc
rorl
or
test
fucomip
movsl
adc
daa
or
clc
sahf
mov
js
rcl
and
mov
rep
std
psllw
inc
test
movsb
fmuls
outsl
or
push
or
xor
cld
sub
iret
adc
js
push
icebp
add
aam
sbb
add
fnsave
icebp
xor
jne
shll
lret
pushf
jg
out
imul
jp
or
leave
test
call
xor
push
in
mov
sarl
sbb
lret
std
in
lds
lret
cld
fs
jns
scas
inc
enter
jg
pop
inc
inc
fsubr
jge
lock
fidivs
js
inc
adc
test
adc
or
stos
pop
dec
jecxz
shrb
mov
mov
adc
into
mov
jg
mov
jnp
lods
popa
jnp
pop
jg
pop
rolb
enter
push
sbb
mov
call
sbb
fldpi
mov
bound
stc
sbb
rolb
cmp
adc
lcall
pop
gs
and
mov
cmp
lods
int3
shll
push
hlt
or
cmpsb
mov
leave
xchg
xchg
cwtl
fidivs
dec
fdivs
out
outsb
call
and
jp
xchg
jg
xchg
mov
pop
repz
shlb
mov
push
mov
or
repz
pusha
mov
addl
push
popl
fistps
popl
cmpsl
loop
stc
cmp
adc
mov
jmp
mov
xor
in
sub
push
mov
int
xor
inc
loopne
fsubr
dec
sbb
test
lea
pop
icebp
xlat
fisubs
mov
xchg
mov
pushf
add
fmuls
fwait
dec
mov
cltd
inc
iret
and
pop
xchg
addps
jns
hlt
mov
fidivs
and
jnp
add
cmp
dec
mov
xchg
incb
push
rcll
ret
mov
xlat
int
fdivp
cmp
or
pop
add
rclb
jg
mov
mov
vpmulhw
insl
xor
mov
pop
fstl
dec
push
ds
das
icebp
jle
push
mov
mov
test
or
shl
adc
add
cmp
jo
sub
inc
popa
mov
shl
in
aas
mov
data16
add
xor
inc
push
pop
lock
pop
imul
lock
lods
jns
xchg
sub
idivl
pushf
and
sub
sbbl
jb
repz
xor
aam
or
stos
dec
maxps
sbb
stos
fldcw
xor
ja
fwait
mov
addr16
xchg
jmp
cwtl
xor
jno
stos
jmp
scas
sbb
aad
call
sbb
cltd
mov
and
roll
sbb
cli
xor
xchg
ja
sahf
test
adc
in
push
test
sbb
lods
inc
mov
jo
pusha
mov
push
jnp
jb
icebp
loopne
cwtl
xchg
pop
repnz
inc
inc
repz
jno
pusha
insb
fnsave
sbb
push
push
jge
dec
mov
fsubs
jno
dec
sbb
sarl
and
and
sbb
lcall
push
daa
adc
and
jbe
shl
les
std
inc
fidivrs
or
sbb
push
mov
adc
sub
push
pop
xor
pusha
mov
shlb
cmp
sub
mov
lcall
inc
out
pop
mov
pop
popl
mov
popa
pop
mov
sti
xlat
repz
gs
test
scas
cmpsl
add
aas
ficomps
sahf
insb
dec
mov
or
jl
js
insl
icebp
ss
test
pop
ret
pandn
jne
and
pop
sub
jmp
imul
popf
adc
lcall
enter
push
loop
mov
cmpl
and
xor
mov
sub
adc
jg
sbb
pop
xor
sbb
insl
or
sub
xor
dec
xchg
jo
popf
mov
mov
sti
fcmovu
dec
cmpsl
mov
inc
mov
pop
xorl
std
or
jno
lret
sbb
sahf
pushl
es
add
outsl
hlt
pop
sarb
pusha
xchg
mov
andb
mov
dec
dec
subl
dec
add
in
movsb
xacquire
clc
adc
mov
or
cmpsl
pop
cmp
outsl
inc
pop
sahf
fldt
xchg
xlat
rorb
pop
shl
cmc
mov
mov
inc
xchg
testl
lock
shl
push
add
mov
pop
pop
incl
loopne
xchg
xchg
add
or
lods
inc
mov
je
xchg
push
int3
xchg
jbe
xlat
xor
mov
jle
scas
jb
pushf
xchg
mov
mov
test
leave
pusha
mov
test
sub
out
xchg
or
cmpl
out
aad
test
lret
xchg
xorl
or
orl
jl
pop
pop
mov
enter
aad
repz
cld
add
js
sub
push
push
pop
jne
mov
or
xchg
jg
inc
add
cmp
jle
push
xchg
fcmovnbe
adc
pusha
inc
jmp
icebp
test
cmp
ds
mov
aaa
sahf
shll
xor
fsubs
pushf
inc
in
jge
sub
push
ret
pop
inc
mov
jb
out
mov
push
pop
lret
xor
je
fmul
sub
mov
add
and
and
xchg
xchg
jg
into
push
dec
jp
int3
out
sbb
stc
cmp
xlat
lea
jbe
addr16
and
dec
popa
xor
aad
cmpb
inc
in
cmp
fnstsw
clc
xor
dec
jnp
hlt
push
dec
cltd
sub
xchg
jmp
pop
cmp
sti
dec
scas
cld
idivl
add
cli
jl
sub
dec
out
jo
push
pop
loope
test
inc
push
mov
cmp
sbb
lret
jmp
push
lods
addr16
and
or
pop
aas
loop
pushf
xor
push
and
dec
jp
inc
outsl
outsl
cmp
fs
dec
mov
jecxz
nop
sti
test
fwait
cmp
inc
pop
mov
fwait
test
add
dec
jmp
jnp
insb
popf
mov
dec
mov
in
andb
lock
sbb
cmc
test
rcr
pop
seta
sbbb
or
jp
js
jns
cltd
adc
repz
jne
dec
gs
movsl
mov
add
add
pop
dec
nop
out
cmp
mov
pushf
mov
mov
out
inc
mov
movsb
insl
fnstcw
inc
jo
bound
cmpsl
and
pop
or
xchg
icebp
push
push
jno
stc
popf
cmc
movsl
daa
cmp
push
movsl
lds
and
daa
clc
inc
fnstenv
cmpsl
sub
or
xor
mov
pop
jne
imul
lcall
push
jns
loope
inc
lcall
cmpsl
mov
fidivl
cmpsb
ret
dec
dec
inc
imulb
add
cld
push
jmp
std
mov
xchg
xchg
jp
push
and
jbe
faddl
aaa
push
xor
sub
fs
popf
xor
xchg
mov
sarb
pop
int
inc
pop
in
jno
push
push
jnp
mov
nop
pop
push
dec
sbb
arpl
mov
movsl
inc
push
ljmp
lret
fcmovnu
pop
mov
mov
in
xlat
js
sub
push
adc
rcrb
mov
clc
inc
leave
fsts
lea
aas
mulps
or
pusha
add
sub
push
mov
or
xor
in
push
mov
rorl
sub
addr16
add
iret
push
cmp
xor
add
pop
sub
or
push
pop
popf
out
mov
sub
or
mov
xor
in
inc
fs
mov
ljmp
mov
pop
lea
or
jp
pop
sub
mov
push
test
cmc
dec
subb
test
dec
pop
loop
push
or
inc
loop
sarb
push
pop
fisubl
testl
push
flds
add
jmp
jmp
mov
sbb
jbe
les
cmp
ftst
jnp
popa
jecxz
gs
add
mov
adc
inc
lods
mov
sub
mov
ds
cs
cmp
mov
adc
or
xchg
adc
fmul
std
in
bound
sbb
outsb
fldenv
aam
fs
mov
mov
test
dec
out
stc
dec
ror
bound
lods
xchg
jmp
adcl
cwtl
int
sbb
lcall
jo
mov
clc
mov
aad
cmp
cmpsb
mov
sub
enter
aaa
xor
out
aad
mov
or
jmp
xchg
pusha
push
cli
xchg
mov
das
adc
ss
arpl
jne
lahf
ss
xchg
mov
mov
adc
je
stos
or
xlat
pop
js
cmc
test
push
mov
xor
mov
fs
jl
push
lea
test
aas
ret
mov
mov
out
cmpsb
mov
fdivrs
insb
arpl
jno
fistps
jmp
in
clc
jo
imul
inc
or
jnp
pop
lds
cmpsb
pop
fdivrl
mov
out
out
sbb
xor
cltd
jno
mov
jmp
enter
mulb
cmp
sub
push
fiadds
sub
in
pop
sub
or
cmp
daa
jmp
dec
pop
jno
fildl
sbb
xchg
jle
idivl
push
pop
pushf
ljmp
popf
lods
dec
jecxz
adc
in
dec
in
stc
pop
xchg
cld
adc
leave
inc
fwait
xor
fbstp
shlb
and
fildl
fiadds
dec
outsb
shl
xor
or
out
xor
sbb
or
mov
jb
pop
cltd
inc
jg
scas
xchg
out
push
rcr
std
pop
inc
outsb
sub
sbb
push
pop
lret
sub
pop
inc
addr16
dec
cwtl
mov
aad
and
cltd
icebp
sub
stos
inc
inc
sbb
jg
std
sbb
push
cmp
scas
clc
mov
jae
mov
adc
imull
cmp
es
pop
pop
inc
in
ret
push
xor
mov
insb
cmc
scas
push
fisttps
sub
xchg
dec
in
jae
push
imul
mov
jo
mov
imul
sub
ss
clc
pusha
sti
insl
jo
sbb
into
add
in
push
or
enter
jg
rol
mov
jg
out
mov
sub
push
popa
xor
and
jmp
sub
inc
push
lods
mov
test
out
mov
fidivs
pop
adc
ret
mov
mov
and
lret
nop
mov
lods
cld
and
or
mov
pmulhuw
addl
aad
dec
call
pop
inc
rorb
pusha
fldcw
xorb
adc
xor
cmp
data16
jne
sti
jg
ret
xchg
adc
imul
aad
je
adc
rcr
dec
pop
lds
lock
cs
pop
popf
cmc
arpl
xchg
jl
shrb
mov
sub
mov
popa
ret
scas
adc
jmp
add
repnz
mov
rcrl
jo
bound
or
push
imul
cs
push
leave
dec
loop
jae
adc
mov
ret
cmp
pop
mov
jmp
jl
imul
pop
mov
xor
ret
pop
or
mov
mov
out
ljmp
jno
bound
push
cwtl
add
xchg
mov
scas
push
cwtl
loopne
cmp
mov
pop
push
imul
cmp
int
xor
ss
adc
lods
jl
xor
cmp
and
fisubl
lcall
lcall
dec
mov
cld
in
shll
addb
fstps
cmp
push
aad
ret
dec
pop
clc
in
mov
add
cmp
push
push
ljmp
sbbb
dec
lret
push
pop
fstpl
cmpsb
dec
and
inc
fbstp
test
mov
cmpsl
std
bound
mulb
pop
out
aas
ljmp
jmp
mov
cmp
ret
xchg
cld
cmp
dec
ljmp
add
sub
lret
adc
loopne
jae
mov
mov
je
mov
sbb
test
mov
lods
add
std
orl
js
mov
push
adc
push
push
loopne
inc
scas
cli
inc
adc
xchg
test
incb
ljmp
mov
ja
loope
cmp
sbbl
jno
mov
enter
cld
ljmp
es
jae
inc
mov
dec
outsl
inc
inc
pop
ret
arpl
fldt
mov
or
fnstsw
jbe
lds
pushf
daa
push
and
scas
stc
test
push
xor
mov
jl
xor
out
repnz
adc
and
mov
sub
popa
jb
xchg
arpl
push
sbb
inc
cmp
jp
addr16
nop
lahf
xchg
sub
insb
sti
filds
js
test
push
mov
and
pop
pop
gs
sahf
mov
or
xor
daa
pushaw
push
cmp
cmpb
mov
and
pop
pop
aas
dec
pop
aam
subb
add
mov
mov
pop
mov
jb
imul
filds
shl
cmp
push
mov
pop
imul
pop
pop
xor
repnz
faddl
loopne
sqrtps
stos
fisubrl
insl
add
pop
ret
xlat
adc
lcall
push
dec
in
or
add
bound
nop
fisubrs
lods
fdivrl
xor
xor
dec
loop
pop
outsb
jns
shrb
leave
dec
test
push
aas
mov
fnsave
loopne
dec
ja
xchg
cmpsb
pop
ret
fldl
sbb
rcrb
mov
mov
das
xchg
aad
dec
dec
nop
repnz
adc
lods
xchg
mov
push
jne
xchg
mov
scas
imul
mov
sbb
test
icebp
movsl
pop
dec
out
stc
hlt
ret
loope
insl
sub
dec
fwait
test
and
and
cli
mov
pop
xor
lods
or
push
test
test
int3
jmp
pusha
pop
test
adc
je
or
mov
pop
push
repnz
mov
push
dec
je
in
push
inc
imul
inc
pop
push
sbb
jae
stc
lcall
pop
decl
mov
lods
out
sbb
add
push
cltd
std
sub
cmc
jae
push
sbb
sub
dec
dec
jnp
in
cmp
add
cs
adc
pop
arpl
pop
mov
jae
notb
mov
adc
push
repz
and
repnz
dec
mov
aam
pop
mov
repnz
adc
push
addl
sbb
pop
cmp
lods
xchg
add
popa
sub
push
cmp
jno
xchg
xchg
mov
out
fdivr
xchg
in
insb
dec
mov
mov
push
insl
rcr
iret
imul
mov
mov
xor
or
adc
jmp
and
in
push
faddl
sbb
ss
inc
das
mov
mov
inc
xchg
mov
inc
rol
jmp
dec
mov
mov
lahf
dec
pop
xchg
cmc
pop
cmp
arpl
mov
dec
push
xchg
pop
ljmp
mov
xchg
mov
inc
cltd
lds
out
adc
push
inc
sub
mov
xor
inc
push
cmp
gs
pop
sbb
iret
xorb
sub
xchg
out
test
stc
xor
and
sti
adc
insb
out
cmp
push
adc
push
add
das
movsb
jbe
pop
ret
pop
outsb
lds
insb
arpl
sysret
pop
dec
sub
cmpsl
out
push
loop
xor
cld
repz
xor
push
call
mov
or
mov
je
push
xchg
movsl
ficoml
clc
xchg
or
sbb
imul
leave
adc
imul
std
adc
push
inc
pop
sub
ss
xchg
xchg
pop
mov
pop
ds
mov
pop
cmp
ret
adc
rcrb
jae
pop
jmp
dec
pusha
and
xchg
scas
xor
inc
cmc
out
adc
cmp
in
out
lcall
ljmp
arpl
mov
mov
xor
inc
inc
xchg
pushl
sub
and
sbbl
shlb
adc
scas
and
mov
dec
outsl
jnp
in
mov
test
out
push
pushf
pop
jmp
pusha
out
pop
jmp
cli
or
je
rorb
mov
inc
push
int
cmc
jge
and
pop
addr16
adc
pop
add
mov
push
dec
sub
cs
mov
sub
xchg
loop
jg
xor
pop
loope
push
cmp
ret
pop
addr16
ret
std
pop
jns
jae
mov
mov
lcall
int
jb
mov
mov
cmc
outsl
push
outsb
adcb
sarb
scas
dec
popf
adc
inc
jb
xor
lahf
enter
mov
cmp
add
gs
arpl
outsb
pusha
lahf
in
adc
stos
sti
icebp
or
loopne
ds
inc
ret
pusha
and
fcomi
rorl
mov
adc
or
mov
mov
push
jge
insl
scas
and
repz
ljmp
cmpsb
negl
jg
ficomps
out
xchg
mov
popf
pop
adc
add
aas
mov
xchg
out
and
int
dec
or
out
jnp
xor
pop
in
inc
lcall
clc
and
aam
mov
add
lret
icebp
or
dec
push
jg
mov
pop
pop
mov
fistps
cmpsl
repnz
sub
adc
scas
out
das
pop
jae
push
in
dec
cmp
lds
adc
shl
lock
mov
femms
inc
sbb
push
pop
ljmp
fcomi
cmp
and
adc
fcoml
fs
decb
mov
cmpsb
pop
xor
mov
add
in
adc
jnp
adc
push
sub
out
rorb
lods
dec
and
mov
scas
xchg
pop
scas
mov
xor
and
loope
xchg
mov
ds
nop
in
ficomps
sti
xor
insl
inc
in
jbe
push
in
aaa
adc
les
or
push
add
dec
mov
cs
jge
sahf
push
dec
fucomi
mov
movsb
cmp
adc
lcall
xchg
mov
pop
outsb
lods
mov
push
inc
fimuls
ret
fildll
cs
pop
dec
out
mov
xchg
insb
and
sbb
mov
mov
inc
pop
and
pop
scas
pop
mov
and
cmc
addl
scas
mov
cli
int3
adc
jmp
movsb
imul
mov
mov
mov
ret
cmpl
stos
movsb
pop
addr16
testl
in
les
add
jmp
cmpsb
sbb
xchg
sub
push
sub
xchg
mov
pop
in
push
jo
sbb
inc
inc
imul
loop
mov
lock
aaa
data16
adc
jp
sbb
dec
test
push
repnz
loop
imul
push
les
mov
call
add
in
test
clc
cmpsb
testb
test
lcall
xchg
sbb
or
jnp
fwait
push
cmp
cmp
iret
leave
js
aaa
and
xor
and
in
insb
pop
shlb
lea
push
and
fiaddl
movsl
add
push
fsubrl
adc
cmpb
fsubrs
pop
into
les
mov
dec
in
rorb
pusha
add
subl
mov
xchg
ljmp
jmp
mov
xchg
or
cli
cmp
xor
lret
cld
xor
and
aad
jmp
or
daa
pop
out
movsb
call
jb
push
mov
test
jle
fldl
push
in
pop
xchg
push
aaa
push
jle
mov
mov
add
test
fld
push
lret
push
lcall
outsb
outsb
pusha
and
inc
xor
hlt
adc
mov
mov
pop
imul
add
sub
ret
pop
or
loope
lds
js
xor
mov
push
dec
out
insl
in
push
and
sahf
test
mov
push
push
cltd
inc
pop
int
sti
jno
lods
sub
lret
xlat
push
insl
stos
fildll
mov
or
std
inc
and
dec
mov
or
mov
xchg
inc
lret
xchg
add
in
aas
andl
push
mov
ficoms
dec
mov
or
sub
add
jo
scas
or
mov
scas
inc
dec
pop
jb
xor
xchg
cmp
icebp
iret
enter
ljmp
add
cmp
pusha
inc
push
mov
mulb
jne
inc
add
dec
shll
or
call
mov
pop
sbb
push
cld
fsubr
ror
xor
adc
ret
push
jp
faddp
cmpsb
sbb
and
dec
fbstp
mov
mov
xchg
pop
pop
push
je
push
xor
aaa
xchg
mov
bound
in
ret
popf
arpl
lds
mov
add
cld
or
sbb
mov
shll
push
in
aam
cltd
mov
jo
xor
dec
icebp
addr16
fstl
out
shlb
fs
xor
test
les
lret
divl
shl
iret
adc
int3
sbb
es
add
mov
add
je
pop
sahf
jl
mul
iret
mov
imul
or
nop
stos
dec
inc
ljmp
out
xchg
popf
testb
xorl
jnp
shll
xchg
cmc
in
push
sub
fcoml
add
daa
or
inc
out
in
xor
mov
sbb
inc
lret
cmp
sbb
rorl
pusha
xorb
int3
fisubrs
inc
sbb
or
out
xchg
push
sub
push
cld
test
js
push
sbb
aas
mov
cmp
dec
mov
fadds
popa
pop
loop
mov
adc
inc
pop
pusha
test
popf
sbbb
push
xor
push
aad
adc
adc
mov
fs
std
enter
cmpsl
push
or
fisubrl
mov
test
in
xor
or
aas
push
add
inc
das
cmp
insl
pop
xor
bound
push
movsl
inc
sti
push
add
xlat
pop
mov
lcall
in
in
dec
dec
loop
mov
stos
jnp
sub
mov
dec
push
test
ds
push
pop
mov
out
aad
mov
subl
mov
mov
shlb
notb
daa
scas
insl
sub
sahf
pop
sub
ljmp
xor
add
clc
frstor
arpl
pop
dec
xlat
enter
jp
je
pop
inc
in
mov
cmpsb
xchg
sti
jle
dec
xchg
aaa
fmul
scas
mov
mov
inc
push
in
gs
pop
inc
lds
mov
int3
test
jbe
fbstp
and
dec
push
push
lea
sahf
loope
les
mov
sub
lret
daa
into
pop
or
imul
daa
pop
fdivr
lret
repnz
cmc
stos
fisubrl
dec
xorb
aaa
jno
add
aam
sbb
shr
add
fisubrl
xchg
inc
sub
lock
push
push
add
push
jne
imul
adc
or
lret
movb
ss
xor
mov
and
cmp
mov
outsb
mov
stc
lods
pop
jmp
adc
and
es
lods
scas
xchg
shll
mov
pop
outsl
movsb
xor
inc
repnz
in
dec
pop
push
mov
dec
adc
pushf
cli
dec
pop
xchg
xor
out
mov
and
inc
cmpsb
gs
or
add
xor
test
pop
hlt
jge
lahf
push
jl
xor
lds
and
sahf
push
movsl
icebp
xor
fs
out
mov
ljmp
fadds
movsl
xor
lcall
cmp
aad
out
adc
cli
push
jmp
sub
mov
push
mov
xor
stc
icebp
mov
jg
out
stc
rcll
hlt
sbb
flds
orl
cld
xchg
pop
lahf
push
movsl
adc
xor
insb
jbe
xchg
jmp
arpl
dec
loop
xchg
lcall
insb
bound
jno
or
xchg
or
cmp
ds
pusha
enter
call
or
repz
sub
adc
sub
pushf
lods
cmp
fisubrs
popa
add
mov
outsl
in
jp
movsb
xchg
mov
xchg
outsb
cmp
mov
and
xchg
out
inc
bound
push
ja
push
notl
fiaddl
ja
mov
jo
mov
push
cmp
mov
push
jno
lock
jmp
and
push
pop
cld
xchg
aaa
test
fists
pop
loope
fildl
out
sbb
fnstcw
jge
dec
in
xchg
mov
jmp
jne
in
xlat
out
add
mov
pop
dec
cld
pop
cld
inc
sbb
cmp
pop
nop
dec
into
pop
ret
std
ret
lcall
xor
xor
adc
sub
fadds
sub
movsb
mov
insb
jl
xor
cmp
addl
movsl
push
not
shr
test
mov
pop
push
js
sub
test
mov
aam
or
addb
fdivrs
inc
fistps
pop
xchg
aam
data16
ss
mov
aam
out
lcall
cmp
std
dec
fcmovbe
xor
in
test
xlat
add
lea
push
pop
loopne
push
cmp
enter
sub
xor
xchg
pusha
out
xlat
or
negb
push
cmp
jmp
jg
push
rcr
bnd
lret
fdivs
loope
mov
push
mov
mov
cmpsl
notb
dec
xor
adc
dec
mov
repz
xor
mov
inc
scas
sarl
fidivrs
sahf
fs
add
push
repnz
jns
xor
lds
xor
push
and
aaa
into
stc
lcall
xor
push
xchg
pusha
gs
inc
push
jecxz
mov
fs
adcb
aad
push
pop
mov
inc
in
xor
sub
cmc
leave
pop
mov
es
adc
rorb
xchg
inc
jp
adc
andb
mov
gs
adc
mov
call
test
push
stos
roll
out
and
pop
push
mov
adc
lods
std
les
pmullw
rcr
push
push
ds
es
fldenv
and
stc
or
leave
fidivrl
into
fimuls
sarb
insb
jne
xor
lods
mov
dec
sub
lahf
in
mov
outsl
pusha
repnz
shrb
mov
imul
fistpl
mov
or
add
jno
icebp
mov
pop
xor
lods
mov
jg
jno
enter
inc
add
jl
aaa
xchg
push
jno
jmp
cmp
or
lea
or
jl
dec
mov
shrl
jmp
jecxz
sarl
arpl
pop
bswap
pop
mov
mov
cmp
jecxz
sub
mov
fwait
int3
rolb
lahf
xor
jp
aad
mov
addb
jmp
cld
inc
cmpsl
mov
fidivl
out
bound
rorl
jle
add
dec
dec
test
jae
dec
xor
int3
popa
jg
adc
push
ja
aas
in
in
loop
shlb
mov
add
cltd
mov
dec
dec
pop
repz
mov
ficomps
xchg
push
popf
ret
cmp
loop
jbe
das
push
mov
cmc
sbb
test
fldenv
jl
mov
mov
addr16
and
mov
push
cmp
sub
dec
je
push
mov
lods
and
mov
xchg
repnz
mov
ror
jnp
inc
mov
sub
push
jne
inc
insl
stc
adc
popa
mov
pop
sub
cmc
xchg
jg
and
xor
arpl
cmp
sub
divps
outsb
insl
sub
or
cs
les
repz
jae
mov
test
cli
inc
cwtl
jne
sbb
sub
testl
xlat
mov
jno
loop
in
jp
sbb
lods
sbb
or
das
adc
mov
loopne
js
cmp
lcall
mov
outsl
mov
shlb
dec
iret
repz
cs
mov
adc
les
lea
jne
mov
daa
xchg
dec
and
cmp
cmpl
scas
rcr
sub
cwtl
insl
lds
mov
dec
loope
rcr
aam
das
pop
scas
and
sub
out
inc
inc
jo
lock
lock
jp
sbb
or
stos
mov
jmp
leave
inc
mov
daa
loopne
int3
mov
push
or
bound
or
sbb
inc
sbb
mov
pop
inc
pushf
pop
cmp
pushf
and
int
mov
mov
call
mov
or
fimull
ljmp
shll
test
xchg
lcall
jbe
loop
popf
adc
jne
adc
pushf
xor
sbb
xchg
mov
xor
gs
outsl
sub
testb
outsb
adc
adc
in
daa
out
xchg
xchg
mov
cmp
test
sahf
xor
ss
out
xchg
ds
pop
pop
and
pushf
push
xchg
pop
hlt
add
cs
test
sub
or
int
inc
daa
jbe
pop
in
mov
sbb
scas
push
mull
mov
mov
in
mov
fldenv
cmp
into
cmpsl
vmovaps
pop
jo
shl
jle
out
aam
sub
push
add
aaa
loopw
sti
and
inc
sbbb
stos
popf
jl
xchg
sub
dec
inc
rol
jecxz
aas
adc
stos
dec
jne
jl
pop
cwtl
lret
sbb
xchg
cmp
xor
jl
xor
add
xorb
mov
shrl
ljmp
xchg
in
rcll
test
xrelease
xchg
out
ret
inc
cmp
aas
xchg
push
popa
leave
sbb
nop
data16
mov
cmpsl
add
test
dec
loop
iret
sub
sbb
push
dec
cwtl
into
mov
jae
mov
inc
and
icebp
cmp
mov
xchg
je
jmp
cmp
sub
xchg
mov
mov
sahf
sahf
dec
fdivs
repz
addb
leave
and
stos
pop
movsb
push
leave
mov
cld
imul
insb
ret
shrl
fdivp
dec
mov
or
out
sarl
xchg
aas
hlt
mov
inc
or
push
push
pushf
or
jae
jmp
popa
out
daa
xor
mov
jmp
das
adc
pusha
lret
mov
imulb
inc
pop
sti
pop
sub
xor
cmpb
mov
and
add
xorl
inc
scas
les
test
jg
xchg
lret
enter
inc
fnstenv
enter
push
in
fsubrl
mov
ss
repnz
jae
cmovns
xchg
push
ds
sub
addr16
leave
flds
outsb
jns
stos
ret
into
pop
icebp
dec
xchg
xchg
daa
inc
mov
adc
icebp
jp
es
pushf
cmp
aaa
mov
push
ja
cmpsb
mov
ljmp
das
or
jge
pop
or
pop
or
sti
nop
mov
sbb
mov
gs
push
out
sub
inc
stos
xchg
mov
outsl
int3
in
sti
add
mov
sbb
mov
into
pop
clc
decl
andb
dec
stos
das
mov
mov
mov
orb
or
outsl
xlat
cmc
ret
cmc
rcr
rol
insl
test
mov
ja
and
rolb
imul
fs
mov
test
cmc
xor
call
mov
xor
mov
test
push
fwait
push
popf
insb
push
xor
cmp
les
into
cmc
mov
sbb
fdivrl
lret
outsl
aas
mov
icebp
add
addr16
mov
inc
cmp
add
push
in
dec
xor
sarl
out
sbb
mov
mov
xchg
incb
fs
mov
arpl
mov
jns
andl
lret
popf
sbb
ror
outsb
pop
sbb
mov
xor
jge
aaa
sub
sub
clc
pop
sub
adc
fbld
or
movsb
or
popa
scas
push
movsl
fistps
mov
sbb
int3
mov
xor
fcmovnu
xchg
cli
fstps
mov
sub
xor
mov
mov
popf
jmp
or
out
inc
sbb
dec
mov
pop
mov
and
inc
data16
adc
add
fstpt
bound
insl
and
xor
lock
mov
pop
stos
ret
add
mov
ljmp
lea
inc
inc
ror
add
mov
xor
fdivl
push
or
aas
shl
fcom
scas
jnp
in
iret
dec
insl
add
push
leave
sub
ja
adc
pop
or
fs
mov
or
pusha
das
scas
jmp
mov
xor
insb
jle
dec
lock
insl
out
sub
test
repz
and
test
mov
psubq
inc
sahf
aaa
mov
mov
inc
gs
das
cli
mov
test
leave
jecxz
fidivs
add
enter
xchg
sbb
addr16
xlat
ss
mov
sbbl
das
add
and
out
leave
repz
jb
int3
jae
xchg
xor
mov
pop
xchg
or
pop
pusha
push
xor
mov
jno
xor
scas
mov
cmp
out
pusha
or
push
scas
aas
jmp
jo
xor
sbb
or
iret
xchg
mov
lret
adc
clc
or
dec
cmp
pop
es
push
cmp
inc
and
pop
aaa
mov
aam
movl
data16
push
jo
rcl
or
repz
jecxz
addr16
add
arpl
repz
addr16
add
xchg
cmp
fwait
xor
test
xor
les
xor
lock
sbb
loopne
int
into
mov
in
mov
add
push
fbstp
out
xor
mov
push
mov
add
dec
ljmp
lock
and
and
lods
jo
cmpsb
cmpsb
nop
lods
mov
lods
ret
hlt
into
dec
pop
mulb
lods
inc
jmp
mov
add
in
sahf
xchg
pop
adc
or
inc
dec
adc
inc
lret
cmp
pushf
insl
outsb
sets
xor
mov
mov
imul
jo
mov
pop
mov
loop
sarb
cmp
mov
pop
or
mov
pop
push
cmpsl
call
lods
push
pusha
movsb
ss
xchg
sbb
ret
push
mov
ss
out
fmuls
test
inc
bswap
xor
push
or
sub
nop
lea
sub
lcall
cmp
push
test
ret
push
stos
inc
fcmovu
gs
pushf
test
jge
jge
xlat
daa
push
add
test
mov
push
adc
test
cmpsl
stos
cmp
ja
shlb
nop
insl
and
aas
imul
lock
idivb
push
inc
xor
sbb
mov
and
dec
or
fs
mov
aas
xchg
add
or
sub
xchg
sub
sbb
push
mov
imul
xchg
scas
adc
xorl
mov
fidivs
xchg
jp
nop
sub
fwait
out
dec
mov
imul
sub
mov
inc
mov
ds
dec
inc
popa
jnp
jle
aad
scas
add
lds
push
fildl
adc
sub
xor
in
or
pop
div
loope
aam
xchg
aas
lea
cmp
in
cwtl
mov
and
ja
cmp
inc
and
xchg
push
jns
sbb
imul
jmp
or
je
xchg
mov
add
out
sub
mov
and
mov
sub
in
insl
in
outsb
adc
jne
or
call
xchg
mov
ficomps
addr16
adc
sahf
mov
repnz
aam
mov
addr16
inc
insb
rcl
pop
icebp
or
push
pushf
sahf
stos
or
stos
cmp
push
movsb
inc
xchg
sub
pop
aaa
movsl
mov
xchg
fs
push
pop
mov
fwait
movsl
loope
xchg
je
push
jbe
cmp
dec
sbb
ds
sbb
aad
aaa
js
cld
lock
notb
ss
arpl
imul
or
mov
add
xor
fst
inc
sub
and
fwait
add
inc
xchg
stos
sahf
and
pushf
or
sub
jo
mov
push
sub
dec
xor
jle
jp
rclb
push
mov
pop
adc
or
fiadds
daa
pushf
mov
mov
pop
in
sahf
jl
hlt
std
repz
icebp
pop
scas
ret
mov
mov
dec
mov
stos
out
mov
test
ja
cmp
sub
arpl
pop
into
stos
je
sub
pusha
add
mov
and
std
outsb
pop
mov
fs
iret
in
inc
add
mov
shl
notl
dec
cli
ss
sub
adc
push
cmp
aad
imul
push
jb
jbe
repz
xchg
and
dec
xchg
sub
mov
sahf
mov
enter
push
aad
push
and
enter
push
and
movsl
xchg
xchg
fadds
mov
mov
inc
andl
or
push
call
jne
outsl
or
out
cmpsl
ds
inc
repz
lds
push
sbbl
sbb
jp
mov
mov
push
sbb
mov
xor
push
mov
jmp
pop
test
cmp
rorb
js
daa
decb
sbb
hlt
sbb
stos
cmp
ja
fisubrl
pop
fstps
push
dec
or
and
dec
jno
notb
popa
clc
mov
add
flds
mov
jp
inc
add
data16
push
xor
jne
cmp
or
add
dec
pop
scas
imul
in
adc
scas
cltd
xor
leave
aas
ret
lods
mov
fwait
mov
shl
ljmp
dec
jnp
jge
mov
add
adc
xor
mov
mov
repnz
ficomps
push
mov
mov
lods
out
pop
test
inc
xchg
push
sub
xchg
addr16
loopne
test
lahf
notb
lret
scas
insl
inc
out
inc
stos
inc
mov
mov
push
inc
xlat
adc
adc
rcrl
scas
dec
cmpsb
testb
xor
fstl
fldt
jg
popf
push
mov
mov
push
lods
sahf
addr16
push
notb
adc
movsb
sub
mov
sub
scas
inc
sub
arpl
push
nop
test
adc
dec
cmp
push
mov
pop
and
cld
jg
mov
rcr
je
leave
das
in
sbb
push
add
call
dec
sbb
ret
mov
push
repnz
sub
push
rcr
xor
lahf
test
dec
push
mov
fucomip
xchg
jp
xor
mov
in
cmc
dec
cmpsb
mov
out
push
push
pop
mov
and
pushf
cmp
or
ljmp
add
popf
sbbb
idiv
pop
mov
movsl
mov
jmp
repz
inc
dec
jecxz
inc
mov
std
adc
mov
push
fs
repnz
fnstcw
pop
clc
jmp
adc
pop
pop
mov
xchg
es
sarl
jle
pop
sbb
ret
dec
icebp
inc
jp
mov
or
imul
cmc
mov
mov
mov
and
clc
mov
sub
and
add
pop
lret
negb
dec
mov
leave
enter
ljmp
add
and
xchg
and
loope
mov
jmp
adc
bnd
xchg
xchg
fstpl
adc
xchg
mov
stc
jmp
jecxz
add
scas
push
pop
mov
es
lods
jmp
adc
enter
es
sbb
popf
xor
clc
jmp
jge
rcl
sbb
pop
mov
loop
notl
push
or
ss
adc
xchg
dec
sub
dec
or
mov
push
mov
mov
shlb
inc
outsb
movb
jmp
and
mov
mov
pop
repz
in
sbb
icebp
jp
ljmp
mov
fldpi
orb
cltd
mov
xchg
ss
orl
xchg
pop
insl
in
jg
jle
xchg
xor
adc
inc
mov
cmpsl
cltd
inc
pop
or
adc
mov
sbb
lods
ret
insb
fucomip
popf
in
insb
ds
xor
loop
je
cwtl
sahf
add
outsb
sub
movsb
fisttpll
clc
int3
sub
rorl
inc
pop
lcall
lahf
inc
daa
jae
frstor
mov
xchg
pop
sub
pop
mov
or
dec
jl
cmp
cmp
insb
hlt
adc
pop
mov
push
xor
pop
jge
mov
push
aad
push
insl
out
notb
daa
adc
ss
cmpsl
ds
insb
cmp
dec
sbb
adc
and
hlt
sbb
mov
mov
rcll
sub
add
push
test
icebp
ss
cli
das
inc
sub
nopl
xor
loopne
mov
shrb
push
dec
test
inc
int
xchg
cmp
adc
in
stos
sbb
int3
pop
movsb
std
cwtl
stc
das
clc
mov
test
popa
and
movsl
push
popf
addr16
xor
or
sub
fldl
inc
mov
jne
out
sbb
dec
dec
xlat
and
push
pop
sub
movsb
repnz
inc
or
inc
fimuls
xchg
mov
xchg
and
jmp
pop
sbb
loope,pt
pop
arpl
push
mov
cmp
inc
pop
es
gs
in
add
sub
clc
cmpsb
push
mov
mov
sub
jl
sub
or
loopne
dec
and
ror
out
push
mov
scas
jnp
pop
mov
pop
popa
jns
pusha
shl
mov
dec
scas
mov
or
aad
fadds
jge
stc
inc
in
test
push
inc
decl
in
sbb
sbb
test
push
mov
stc
icebp
subl
orl
jge
sbb
push
mov
lods
jne
negl
loop
out
and
mov
and
div
cmp
test
xchg
push
cmp
inc
dec
sub
pop
outsl
dec
lahf
les
movsl
dec
mov
stos
vmovaps
inc
neg
jae
loope
fistpl
mov
ret
roll
inc
xor
test
inc
sub
or
fs
xchg
test
pop
lcall
mov
add
mov
rorl
add
push
xor
and
clc
cmpsl
pop
jl
dec
scas
mov
rorb
and
xchg
popa
jns
mov
add
repz
or
loopne
fists
rol
call
sbb
cli
jae
xchg
cs
aad
sub
mov
dec
pop
xor
aas
cli
xchg
mov
mov
gs
mov
adc
movsb
xchg
push
mov
addb
push
inc
jns
pop
and
push
dec
in
adc
add
mov
jg
mov
pop
aam
mov
push
cmp
xor
pop
in
or
popf
sub
aad
jnp
mov
pop
mov
addb
stc
daa
mov
xor
ret
or
cmpsl
pop
mul
stos
ret
or
adc
jecxz
jp
mov
mov
mov
jo
and
jae
repz
dec
cs
mov
dec
lahf
cmp
sub
ret
int
in
jnp
push
jp
outsb
cmpsb
das
add
mov
xor
adc
sub
negb
mov
push
out
lea
fbstp
out
ret
out
mov
mov
sub
inc
adc
xor
sbb
mov
jmp
sbb
xchg
and
jle
mov
stos
inc
add
out
lock
shll
or
lahf
mov
add
jno
stos
ljmp
pop
hlt
push
sti
add
jecxz
push
adc
cmc
repnz
adc
xorl
insb
and
repz
ja
pop
fstpt
fwait
addr16
imul
push
push
bound
es
sbbl
dec
lahf
lahf
fst
jg
mov
hlt
daa
arpl
std
mov
inc
jle
jae
cmp
and
popf
lods
aaa
lcall
nop
sub
xchg
outsb
jb
jns
nop
push
jmp
rorl
mov
mov
daa
mov
xlat
sbbb
sub
mov
add
dec
add
xchg
xchg
mov
add
sbb
and
pop
std
js
test
mov
ds
jbe
lret
fmul
or
mov
cmpsb
call
sub
xchg
pop
xor
add
sbb
imul
int
jo
or
mov
mov
fiaddl
out
jno
lock
pop
ljmp
sub
js
cltd
std
nop
dec
gs
cmp
mov
inc
sahf
push
call
les
pop
rcrl
or
add
mov
xor
pop
mov
jl
ds
add
and
inc
sbb
movsb
jns
and
dec
mov
fucomip
jo
mov
je
xor
and
inc
sti
sbbl
popa
sbb
sbb
test
cmpb
or
and
jge
rcrb
xor
clc
xchg
mov
cmp
fisubl
stc
cmp
movsb
shr
add
and
xchg
xchg
inc
xlat
ret
enter
andl
mov
dec
loopne
pop
and
into
stos
addr16
je
inc
mov
lods
addr16
test
push
out
or
xlat
mov
mov
add
arpl
push
add
mov
push
in
enter
imul
lods
jo
pavgb
pop
addr16
cmp
repz
fstpl
jo
fcmovbe
iret
xor
cmpsb
sub
jmp
mov
test
jb
fidivl
push
jae
test
adc
mov
mov
inc
iret
and
cmp
inc
cltd
inc
test
out
xchg
or
test
das
negl
jge
sbb
fs
fsts
insb
out
jae
jae
pop
test
mov
add
shl
mov
mov
outsl
push
sub
sbb
ret
or
insl
xor
pop
data16
stos
mov
and
pop
ljmp
pop
jno
xor
mov
movsl
push
jl
mov
into
mov
lds
pop
sub
add
mov
pop
mov
sub
shlb
cltd
fdivrl
mov
jnp
icebp
orl
icebp
mov
daa
outsl
jp
shrl
mov
sti
pop
jmp
loope
out
cltd
aas
inc
mov
jecxz
push
adc
or
sar
dec
dec
sbb
pushf
pop
insb
mov
shll
int
loope
ret
sub
inc
test
fidivl
sahf
push
js
xchg
insb
adcl
jns
inc
jmp
pop
rorb
scas
add
clc
lahf
iret
xchg
jbe
loop
mov
outsl
sub
shlb
fstps
add
inc
popa
fmulp
xchg
push
inc
outsl
lcall
test
xchg
pop
xor
jo
sub
and
out
adc
insb
jmp
pop
xchg
dec
mov
movsl
and
jg
repz
jno
push
xchg
loop
pop
xor
ret
adc
sti
icebp
sti
push
push
mov
push
std
inc
hlt
iret
mov
push
and
push
test
jecxz
fiadds
mov
push
stc
jb
filds
movsb
lds
mov
outsb
sub
mov
subb
mov
push
mov
xor
jge
clc
insb
mov
mov
and
addr16
inc
push
ss
mov
mov
ss
xchg
out
sti
shrb
xor
imul
push
jmp
mov
pop
jecxz
dec
icebp
mov
fucomip
das
mov
das
jmp
dec
inc
pushf
popa
ljmp
jl
sbb
mov
sub
dec
movsl
inc
mov
data16
in
leave
call
push
push
insl
jbe
adc
imul
fsubrl
sti
xchg
movsb
add
data16
cmp
lds
add
mov
pop
add
fcoml
sahf
imul
mov
shll
mov
and
cmc
jb
xchg
cs
mov
addr16
adc
adc
pop
ss
les
outsb
sub
test
sarb
push
pop
out
lods
lret
sbb
addr16
jl
sub
mov
adcb
jg
or
cltd
arpl
inc
and
sbb
inc
pop
adc
repnz
inc
mov
popf
std
or
push
test
mov
call
jo
push
mov
jo
xor
fistpl
sahf
jno
jp
mov
dec
in
js
sbb
inc
xchg
sub
out
test
addr16
aas
xor
or
mov
xchg
jo
js
nop
in
shl
cmp
cmc
add
daa
imul
and
push
and
xchg
push
ja
sti
test
inc
pop
jbe
clc
popl
xlat
scas
xor
in
aad
popa
xor
ds
push
push
add
sbb
adc
xor
cmc
ljmp
lcall
call
adc
adc
lock
incb
pop
cmp
dec
insl
inc
fcomps
xchg
rclb
lds
jns
xchg
lods
adc
insb
or
push
out
mov
xchg
inc
movsl
mov
xor
mov
sbb
notl
sub
fs
sub
xchg
loope
std
xchg
imul
cwtl
xchg
les
jbe
loope
xor
mov
inc
iret
push
jecxz
jae
jne
popf
sub
dec
and
sahf
pop
sbb
je
inc
hlt
jmp
cli
dec
fiaddl
imul
ds
pop
and
xchg
insl
mov
mov
outsl
stos
scas
xchg
xor
out
mov
cs
in
lret
loope
mov
jns
xchg
movsl
cmpsl
sti
mov
adcb
xchg
push
lahf
pop
shrb
add
pushf
movsb
loopne
lcall
adc
shll
xor
mov
iret
mov
sub
dec
mov
jmp
dec
aas
pop
cmpsb
push
xchg
push
mov
test
loopne
add
lods
add
movsl
xchg
push
pop
mov
lods
add
aad
fisttps
fwait
stc
int3
mov
adc
sbb
arpl
cmpsb
mov
ds
add
inc
mov
push
xor
sbb
push
dec
mov
adc
fstps
fidivs
pop
mov
popa
sti
add
adc
adc
mov
sbb
sbb
adc
je
jae
cs
fwait
add
pop
or
mov
push
cmp
rcll
mov
pop
push
aas
lret
lahf
ss
cmp
inc
insb
addr16
and
mov
cmpsl
ret
push
add
cld
xchg
or
mov
sbb
and
mov
montmul
pop
add
adc
xchg
sub
lahf
xor
jg
shlb
movsl
ret
mov
stos
or
outsb
adc
pop
dec
pop
jno
es
push
outsl
cmp
lret
leave
xchg
jmp
pushf
or
sti
jmp
pop
sbb
cltd
sbb
cmc
shl
es
scas
cmp
cs
lock
sub
loopne
mov
sub
loope
addb
mov
jmp
mov
into
test
xor
and
mov
mov
lret
xor
fbstp
jmp
imul
icebp
test
outsl
inc
fisttpll
arpl
inc
jge
inc
roll
in
rcrl
cmp
iret
and
pop
pop
inc
mov
jp
mov
add
jp
sub
push
es
push
dec
cltd
push
xchg
mov
fcoms
repnz
mov
roll
andb
shll
inc
ficoml
ss
lock
fbstp
aam
out
into
sbb
mov
sub
outsl
cmc
push
jg
xor
fstpl
jbe
jnp
mov
out
fwait
xor
inc
sub
loopne
fmull
push
ljmp
ret
test
push
frstor
mov
fs
mov
out
mov
cld
pop
push
pop
addr16
jnp
enter
in
leave
push
jmp
mov
inc
std
push
ret
rolb
fs
jae
sti
test
adc
adc
pop
inc
xor
cwtl
dec
push
in
jg
lcall
rol
pop
jb
repnz
and
ret
sub
dec
loope
int3
add
inc
cltd
outsb
jle
and
jno
xor
lock
cld
pop
arpl
popf
scas
ljmp
leave
cltd
fcompl
in
leave
push
pop
aam
std
ret
sub
dec
hlt
and
jnp
stc
jmp
shrb
lret
push
push
add
inc
jne
cmp
lahf
rol
cmpsl
cmp
jo
adc
ja
notl
sub
sbb
mov
mov
rolb
sub
scas
jnp
dec
rol
pushf
xor
xchg
arpl
and
dec
out
inc
push
popf
out
xchg
in
ja
mov
inc
mov
cltd
push
insb
lret
ret
cltd
sub
pop
fwait
popf
push
sub
fdivrl
lret
and
fwait
loop
xchg
lock
sub
and
adc
int3
mov
jle
adc
leave
adcb
into
cmp
loopne
test
outsb
ret
sbb
sarl
pop
imul
cmp
push
jmp
push
inc
cli
sub
in
daa
fildll
sub
arpl
xor
lahf
test
jbe
jno
and
xchg
ds
mov
xor
jnp
iret
data16
xor
lahf
in
jl
push
inc
fistpl
jl
fmulp
adc
fs
gs
negb
mov
mov
dec
xchg
fld
pop
arpl
sti
push
aas
adc
adc
lods
pusha
neg
jno
lea
aad
int3
clc
mov
sbbl
shrb
jne
xchg
es
mov
xor
ja
outsb
xor
fidivrl
xorl
or
add
pop
cmp
add
lcall
sbb
cmp
mov
xchg
dec
sbb
and
mov
std
xor
adc
pop
fs
inc
fidivrs
inc
faddl
mov
insl
inc
jl
xchg
jns
xor
xchg
sbb
dec
jb
ret
mov
xorl
jns
mov
or
pushf
xchg
cmp
push
cmp
mov
jecxz
inc
popf
cmp
lds
int3
or
mov
pop
push
rclb
leave
mov
arpl
aas
mov
add
mov
dec
pop
jnp
mov
imul
mov
lds
popa
lret
dec
jl
mov
xor
out
into
sbb
sahf
insl
inc
shrb
out
lret
test
jmp
inc
sahf
jo
and
imul
lock
push
sbb
xchg
jnp
dec
pop
jecxz
or
test
pop
xor
pop
cmc
xchg
mov
aas
dec
out
lcall
cwtl
cs
hlt
sbb
sub
cltd
pop
mov
xorl
rol
sbb
jo
scas
hlt
out
rolb
sbb
mov
std
mov
jb
je
mov
mov
in
test
jmp
mov
push
jecxz
shlb
pop
jl
aad
adc
pop
js
xor
cs
xchg
cltd
dec
push
out
mov
repz
adc
je
lea
popa
sbb
or
stc
xor
mulb
mov
sahf
xor
mov
adc
pop
sbb
push
loope
shrb
and
cld
sbb
int
or
cmp
jbe
cli
push
mov
orb
leave
das
sub
or
nop
xor
lock
jp
clc
lcall
rcrb
ss
or
or
cwtl
adc
adc
cld
jmp
mov
lds
mov
jle,pt
outsb
loope
adc
pop
inc
jge
incb
pop
mov
popf
stc
pop
loop
sbb
push
adc
dec
in
add
and
lahf
push
sbb
insb
scas
dec
dec
out
pop
push
nop
pop
pop
mov
fsub
inc
fisubrs
es
mov
xor
pushf
out
test
or
sub
jae
jno
mov
mov
arpl
test
inc
sbb
jl
jbe
jo
pop
js
pusha
or
in
xchg
aam
mov
push
arpl
out
sbb
sbb
rclb
insl
sbb
inc
mov
hlt
jmp
stc
popf
lds
jecxz
pop
push
scas
add
mov
popf
fs
mov
pop
scas
mov
push
inc
cltd
pusha
imul
jne
mov
nop
ret
dec
mov
jmp
jmp
xor
mov
idivl
ljmp
pop
push
inc
xchg
and
ficompl
std
xchg
dec
mov
les
pop
sbb
popa
jae
jae
test
or
popf
pop
xchg
sub
add
mov
mov
cmp
cmpsb
adc
hlt
lods
add
pop
cmp
or
fwait
pop
imul
pop
jne
mov
sbb
push
testl
jbe
aas
aam
fcoms
hlt
in
test
mov
inc
ss
jo
loope
and
adc
rcll
pushf
insl
inc
and
cmc
lahf
mov
jge
test
push
in
test
sub
jbe
jb
mov
test
mov
movsl
dec
dec
adc
cmp
negb
push
adcb
jno
xlat
jne
sbb
push
icebp
add
shlb
jge
or
dec
xor
mov
jle
imul
pop
mov
imul
fs
stc
pop
xchg
int
pop
jp
addr16
mov
inc
data16
nop
out
add
fs
nop
popa
xchg
sub
in
add
negb
rcpps
ja
jl
add
clc
insl
pop
fbstp
icebp
adc
xchg
adc
idiv
jmp
daa
cmp
and
mov
and
hlt
or
gs
test
rcr
or
dec
sbb
pop
cmp
pushf
jl
pop
and
xchg
jmp
stos
jo
pop
mov
dec
adc
inc
fmull
enter
jge
loop
or
jbe
mov
data16
mov
sub
jns
idivl
ja
rclb
loop
sbbl
add
mov
pop
mov
stos
cmp
js
mov
mov
cli
adc
mov
mov
les
mov
roll
fdivl
loop
push
push
xor
inc
dec
pop
push
add
ljmp
ljmp
jbe
ret
lods
xor
xor
jg
xor
es
mov
mov
mov
jl
leave
pop
sbb
out
in
das
mov
gs
jae
mov
and
lret
mov
push
mov
inc
in
cltd
pop
sarb
insl
out
xor
inc
fidivl
add
sub
out
cltd
xor
or
std
cmp
dec
mov
sbb
push
aad
xlat
insl
mov
js
cld
pop
sub
jg
shlb
jns
je
std
cli
jecxz
or
xchg
jb
push
js
push
sbb
rcll
mov
repnz
jl
cmp
outsb
and
inc
pop
enter
cmp
test
push
aaa
dec
or
adc
xorb
aaa
ja
inc
test
mov
mov
iret
push
mov
push
fsubr
scas
arpl
or
xor
sub
and
data16
cmp
data16
popa
pop
stos
add
dec
xor
cmpsb
in
dec
pop
jo
aaa
movsl
add
lahf
cmp
es
rcrl
cmp
stos
adc
mov
inc
cmpsl
lret
sub
mov
mov
and
cli
mov
inc
jbe
rolb
sub
sti
shrl
or
add
repz
jb
sahf
pop
mov
xchg
std
mov
or
cltd
movsl
stos
mov
outsb
faddl
or
test
decl
daa
jecxz
lahf
sub
daa
pop
xorl
scas
push
dec
cmp
dec
fimuls
rorb
xor
mov
scas
cmp
jbe
push
popf
or
mov
ret
fwait
push
outsl
gs
aas
bound
or
or
sub
pop
ja
sub
mov
cmpsl
jp
xchg
mov
push
inc
fadds
pop
jecxz
nop
addr16
nop
mov
pop
lea
mov
ds
push
mov
push
insl
mov
mov
js
xor
mov
xor
mov
nop
sahf
add
adc
int3
arpl
cwtl
das
lods
ljmp
test
test
cmp
dec
mov
inc
push
movsb
ret
roll
fwait
or
cmp
popf
mov
sbb
mov
test
clc
push
xor
sbb
int
xchg
mov
es
fdivs
shrl
pusha
xor
adc
je
push
mov
xchg
test
shlb
test
stc
cmp
inc
pop
outsb
mov
dec
pop
cmp
or
mov
ja
adc
or
popf
xor
lods
mov
stos
cmp
inc
push
ror
pusha
cmc
ret
inc
xor
inc
mov
sarb
xchg
add
imul
sub
out
aaa
sbb
stc
fbstp
mov
rol
test
jl
insb
pushf
xlat
gs
xchg
xchg
nop
test
je
sbb
test
inc
add
outsb
inc
lea
outsb
inc
arpl
jp
mov
out
jle
xchg
test
aad
mov
add
nop
and
push
iret
add
shll
loop
cmp
scas
mov
and
add
data16
lahf
out
jae
fsubrl
push
cmp
push
sbb
mov
cmpsl
ds
xchg
call
mov
scas
bound
sbb
jg
xor
adc
mov
pop
xchg
jo
push
loopne
xchg
sub
shll
and
adcl
cmpb
int
mov
ret
hlt
fucom
jge
fcompl
es
lds
mov
or
jae
sub
cmp
ja
bound
call
loope
outsl
testl
sbb
push
aas
repnz
ret
jae
add
inc
sub
cld
mov
mov
ja
sbb
jle
xchg
jae
icebp
xlat
mov
mov
stos
daa
out
or
mov
fs
mov
xlat
mov
loop
adc
leave
mov
movsl
repz
pop
sbbb
mov
push
adc
mov
fisubrl
inc
pop
imul
xchg
push
mov
mov
ret
test
ja
loop
push
shll
decb
xor
xchg
jae
stc
xor
and
lret
jg
jp
push
lods
push
fwait
mov
pop
dec
jo
pop
es
xchg
inc
mov
data16
mov
or
ret
pop
scas
sarw
dec
bound
mov
cmp
push
xchg
cmpsb
gs
mov
adc
jp
jge
add
dec
cmpsb
outsl
bnd
fisttps
xor
inc
je
mov
call
cmp
sub
scas
pop
lock
mov
sbb
xor
lcall
mov
mov
push
pop
addr16
or
pop
jmp
inc
ds
inc
pop
outsb
mov
mov
mov
sub
je
push
out
icebp
adc
jecxz
push
mov
sbb
ds
add
repz
pusha
cmp
lods
mov
jp
add
cwtl
lods
push
adc
inc
jb
shlb
dec
fstl
jmp
adcl
aaa
xchg
add
mov
rcll
push
xchg
add
dec
push
out
lock
aad
cmpsb
jns
mov
lahf
out
xchg
test
inc
movsl
mov
shlb
xor
icebp
mov
cwtl
push
dec
and
jbe
cwtl
pop
in
stc
pop
rcrb
loop
mov
insl
in
stos
xchg
data16
ret
dec
sahf
jecxz
and
xor
mov
fcmovbe
imul
repnz
daa
cs
adc
mov
dec
xor
cld
adcb
xchg
fmul
mov
cmc
push
mov
ds
and
dec
test
aad
orb
push
adcb
sub
loope
mov
movsb
mov
mov
push
test
add
js
push
add
out
scas
mov
int
push
in
mov
lret
stc
out
aas
sub
lods
push
cmpsl
dec
mov
out
stos
xor
stc
cmc
cmpsb
cmp
ljmp
outsb
push
mov
je
shufps
sti
pop
sub
push
adcl
jmp
mov
mov
data16
pop
mov
mov
insb
or
les
or
lock
pop
pop
and
mov
mov
dec
notl
sbb
arpl
or
mov
lahf
sub
inc
cs
negb
push
mov
std
jns
mov
cmp
call
xchg
add
cmp
ret
test
out
add
fnstenv
add
scas
xchg
addr16
sbbb
arpl
clc
std
data16
leave
ret
fisttpll
mov
cmp
or
mov
addr16
xor
rclb
les
xchg
cmc
inc
add
sti
int3
push
movsl
rolb
sbb
fnsave
testl
scas
mov
je
jge
dec
jo
dec
out
cmc
or
jmp
bound
push
adcb
or
mov
xor
jge
shrl
add
ret
pop
cmc
test
shlb
jle
dec
sub
add
push
xchg
outsl
push
mov
sarb
dec
loope
insl
jg
ljmp
mov
test
inc
stos
aam
test
pop
mov
sub
scas
scas
negl
pusha
std
out
bound
xchg
lock
jp
dec
sbb
out
jecxz
cs
push
xchg
pop
loop
cmp
fsubrl
adc
push
sub
sti
dec
ficompl
cmpsb
xchg
das
or
lods
neg
int3
push
xor
ss
and
int
push
ja
pop
and
cmpsl
lods
or
loop
daa
or
fadds
ljmp
call
sbbl
jge
jnp
lds
shl
fs
or
pop
push
and
jbe
shl
bound
cmp
hlt
inc
cwtl
adc
mov
fldcw
iret
xlat
ss
or
lock
adc
insb
std
xor
int3
pop
xchg
std
mov
imul
jle
mov
pop
ds
xor
out
xchg
fcoms
inc
and
jno
mov
fisubs
insb
pop
outsb
mov
std
inc
decb
stos
test
sub
sbb
dec
leave
cmc
pop
repz
popf
xchg
xchg
inc
clc
mov
lret
mov
dec
or
push
lret
cmpsl
lock
xor
push
xchg
sub
ljmp
push
push
add
cmp
and
test
cmp
jge
sub
pop
nop
add
popa
cli
jnp
cli
addb
jb
dec
dec
jmp
or
mov
push
shll
sub
jmp
xor
movaps
sub
mov
sbb
xchg
dec
adc
pop
stc
mov
cld
jnp
loop
jge
add
aad
sbb
push
outsb
cmp
xchg
or
ret
outsl
subb
out
dec
insb
stc
nop
out
push
push
pop
popa
mov
insb
inc
test
xchg
fcmovu
shr
decb
sbb
jnp
shr
sub
aad
mov
cmp
cs
adc
cs
and
or
xor
sub
jmp
mov
loopne
stos
out
outsl
mov
add
push
ja
or
or
and
sbb
rol
cmp
enter
int
mov
pusha
dec
mov
cmpsb
test
cmc
stos
jbe
mov
pushf
inc
xor
mov
dec
je
mov
shrl
dec
mov
add
ret
hlt
xor
push
bound
xchg
push
or
jp
mov
mov
mov
stos
and
insl
mov
fbstp
push
fsubrl
pop
pop
repz
jb
into
stc
jp
or
lods
pop
add
lds
sahf
xchg
arpl
in
rcll
movsl
sbb
insl
adcb
push
jecxz
cmp
cli
inc
pop
mov
jle
inc
push
ret
mov
jecxz
xchg
jne
cmp
xchg
pop
jno
adc
sbb
jge
pop
cmc
pop
jbe
inc
jmp
cld
fbstp
cs
lods
add
jle
dec
and
inc
adc
push
xor
test
and
sub
push
outsb
cli
imul
inc
divb
sub
adc
outsb
mov
loop
jne
add
xchg
and
jne
adc
sbb
jle
push
lods
aaa
jl
fildl
inc
in
loope
xchg
jle
mov
pop
dec
xchg
lods
ss
pop
insl
inc
mov
rcrb
xor
mov
iret
push
mov
xchg
data16
lahf
cmp
ds
das
fs
faddl
sti
shlb
mov
xor
sahf
dec
add
add
dec
stos
xor
out
clc
mov
add
outsl
mov
jne
das
cmp
lahf
ss
or
inc
add
fildll
popa
jns
add
jl
inc
shll
push
inc
andl
jae
add
ret
cmpsb
xchg
sub
push
jmp
inc
out
push
xchg
ljmp
insb
mov
in
mov
add
mov
inc
fwait
xor
stc
mov
pop
pop
int
and
hlt
sbb
dec
fsin
cmpl
sarb
cwtl
mov
push
aas
mov
xor
and
jg
pop
es
jle
addr16
push
adc
mov
or
xor
rcrb
jb
dec
repz
loopne
adc
dec
cwtl
das
jp
and
pushf
fildll
cmp
mov
or
outsb
icebp
cli
jo
repz
iret
fcompl
or
ja
cmp
and
xchg
fistpl
add
xchg
fstl
or
jmp
in
cwtl
dec
xchg
inc
dec
lahf
ss
push
inc
pop
dec
out
push
cmc
cmc
mov
push
cmp
push
xchg
in
out
cmc
repz
mov
les
mov
push
sti
dec
push
imul
fsubs
or
popa
mov
sbb
nop
xchg
jmp
xor
push
imul
or
repz
and
jne
in
xor
push
popf
xor
cwtl
cwtl
sub
rolb
das
mov
popa
cmpsl
mov
sbb
xlat
outsb
jo
sbb
sbb
ret
cmp
ljmp
mov
fsubrs
clc
push
lret
bound
leave
je
push
mov
fs
fsubr
sub
mov
mov
or
or
inc
jae
mov
loope
push
cmp
mov
movsl
sub
idiv
gs
leave
mov
std
dec
xor
pop
jg
push
bound
out
or
fmuls
hlt
data16
addr16
mov
ret
xchg
or
adc
das
jl
jp
lds
insb
adc
or
xor
les
fisubrl
in
mov
enter
cwtl
mov
xlat
lods
std
ret
mov
jmp
and
fs
push
jb
ficomps
ja
push
dec
push
outsl
jo
fxtract
add
mov
lea
mov
sbb
jge
jne
clc
cmp
cld
lea
adc
sbb
mov
test
out
aas
nop
daa
mov
in
dec
push
icebp
mov
ret
hlt
sub
out
push
icebp
mov
push
mov
mov
inc
mov
and
mov
pushf
push
sbb
push
push
int3
dec
cmp
add
xchg
cmp
mov
sbbl
shr
xor
inc
popa
sbb
clc
push
adc
insl
and
arpl
inc
insl
lods
push
jo
loope
mov
icebp
xchg
adc
shll
test
call
lds
adc
rcrb
lds
leave
int3
out
jnp
repz
popf
xor
dec
sbb
pushf
push
xor
outsl
test
pusha
outsb
or
jle
sbbb
incl
xchg
xor
repz
ljmp
pushl
mov
push
clc
mov
js
les
pushf
xchg
loop
in
xor
jbe
add
cmp
out
out
pop
insl
sub
mov
andb
xchg
in
pushf
dec
addl
push
mov
das
iret
cmp
divb
mov
fcomps
jg
adc
lea
es
shl
js
adc
hlt
mov
add
mov
lret
lahf
dec
ds
add
fimull
add
push
xchg
fldl
into
and
mov
scas
out
xchg
pop
test
jp
loop
test
pop
jae
fwait
ret
out
and
cs
xor
jecxz
xor
inc
xor
sti
and
imul
push
int
outsl
orl
mov
bound
xor
sub
or
mov
mov
xor
lods
cmp
les
push
std
push
mov
adc
movsl
cmp
rcrl
shrb
leave
pop
andb
test
movsb
dec
jg
and
mov
clc
inc
lea
test
pop
cmc
adc
dec
xor
cmpsl
xor
push
rorb
negl
mov
sbb
sub
repz
or
pop
sbb
sbb
mov
and
rcr
add
dec
xchg
lods
popf
leave
pusha
into
aaa
or
addr16
out
push
outsb
test
fistl
out
push
loop
inc
js
inc
aas
ljmp
popa
das
cmp
popa
mov
int3
pusha
aam
loope
dec
fwait
shrb
je
cmp
fdivrs
pop
icebp
arpl
cmp
imul
push
lock
xchg
mov
push
mov
call
daa
lea
jmp
movsb
sbb
push
lods
pop
add
repz
mov
int3
subl
lret
add
std
shll
xchg
bound
pop
in
mov
adc
nop
daa
push
leave
lret
ljmp
mov
or
mov
ljmp
js
lret
lahf
rcrb
and
loopne
icebp
js
jne
cmp
imul
mov
lock
sahf
pop
cmp
or
adcb
and
push
sub
cmp
pop
and
push
imul
inc
mov
mov
sbb
dec
fmul
mov
cmp
xor
jmp
xor
mov
test
fwait
rolb
inc
dec
leave
xor
jne
mov
xchg
test
sbb
and
xchg
xchg
test
ret
push
push
or
loope
fimuls
pop
mov
test
sub
jns
or
sub
mov
pop
pop
inc
nop
push
addb
scas
mov
cmp
sbbb
and
add
fsubrl
rcrb
pcmpgtd
push
mov
mov
xlat
popf
mov
xchg
test
jp
and
xchg
xchg
jnp
lods
sahf
dec
mov
aaa
xor
inc
sbb
mov
ss
outsl
adc
out
adc
mov
xchg
pop
cmpb
ret
aad
sub
subb
inc
and
xor
pop
or
jno
jnp
loop
aam
movsb
add
scas
lcall
sbb
xchg
cmp
mov
lea
mov
or
xlat
mov
ror
mov
data16
fdivl
push
push
sbb
xchg
insl
add
inc
mov
dec
loop
dec
pop
or
loop
pop
push
repz
imul
mov
popf
and
jg
xor
mov
mov
insb
xchg
sahf
dec
xor
jecxz
movsl
dec
xchg
leave
cmpsl
shrl
xchg
jno
cmp
fidivs
pop
or
icebp
lcall
cld
add
sub
xchg
in
jbe
outsl
stc
xor
cltd
arpl
lea
adcl
sbb
xor
sbb
inc
mov
pusha
and
lods
mov
dec
pop
dec
jecxz
cmpb
lahf
fbstp
stos
xor
js
test
pop
lea
mov
mov
and
push
sbb
adc
sahf
movsl
insb
mov
jle
fwait
movsb
in
fwait
test
int
jl
xchg
fwait
fwait
inc
int
loop
sub
ljmp
jno
push
js
stc
mov
dec
andb
clc
jno
and
out
xchg
push
inc
fs
xchg
sub
mov
aam
and
and
cltd
sub
lret
movsl
insl
sub
push
fwait
mov
lock
test
mov
xor
cmc
adc
in
test
push
or
cmp
jecxz
or
xor
mov
je
imul
xchg
xchg
xchg
mov
push
sbb
or
aaa
dec
push
and
sbb
das
ja
in
aad
mov
mov
cmp
fimuls
out
pop
mov
fldcw
mov
or
outsb
in
es
loop
inc
data16
sahf
xor
shr
mov
insl
cwtl
and
nop
fstps
out
pop
mov
cmp
cmp
add
mov
fisubs
jp
pop
adc
inc
jnp
xchg
jns
push
insl
insl
sub
sub
push
rcrb
mov
and
decb
jg
xor
dec
push
stos
mov
imul
test
pop
cmp
mov
adc
sub
int
pop
fidivs
xor
test
jbe
mov
jecxz
lahf
ss
insl
jmp
int
mov
add
setge
adc
mov
hlt
frstor
enter
fisttpll
repnz
faddl
scas
lcall
push
sub
cwtl
std
xchg
mov
adc
shrb
xor
repnz
shrl
cld
mov
dec
nop
lea
xor
daa
xchg
inc
mov
filds
xchg
clc
add
call
loopne
mov
sbb
je
repz
cwtl
sub
mov
arpl
lcall
and
daa
xor
cmpsb
ljmp
shl
fnstcw
stos
pop
dec
xlat
jp
mov
out
pusha
jecxz
sbb
sub
sbb
jb
xchg
in
adc
nop
in
jl
cmc
cmc
mov
mov
insb
mov
push
ret
inc
sbb
ret
push
fistpl
ret
dec
cld
xchg
scas
fbld
and
dec
fmul
jo
js
and
adc
mov
pushf
scas
xchg
xlat
and
push
repnz
es
iret
jmp
test
aas
dec
jb
fcoms
xchg
cmp
mov
in
std
mov
push
mov
enter
pop
sahf
push
ret
aad
cld
adc
mov
push
mov
push
in
das
lea
mov
aam
lods
add
lods
scas
out
pusha
lea
mov
cmpsb
xchg
or
push
sub
add
das
xchg
mov
or
lea
fistl
js
in
addr16
jo
rclb
ud2
jecxz
mov
aas
cmp
mov
jmp
pop
pop
jo
flds
shrb
push
cmpsl
sub
dec
cmp
sbb
nop
mov
jge
pop
gs
adc
push
mov
dec
sbb
in
js
push
lret
adc
pop
arpl
test
repz
jle
hlt
inc
decl
icebp
sub
lret
xchg
push
into
gs
aas
in
sub
in
stos
dec
repz
stos
cmp
mov
daa
sbb
push
xor
repnz
cmp
cmp
xchg
in
mov
adc
test
scas
push
sbb
sub
mov
inc
in
les
bnd
cmp
sbb
or
in
push
sbb
push
lods
inc
fadds
je
sub
ss
xchg
cmc
push
dec
mov
pusha
arpl
push
inc
mov
or
stc
ss
jge
inc
enter
stc
or
cs
sbb
loopne,pt
mov
xchg
mov
pop
and
neg
outsl
out
movsl
jae
daa
add
arpl
and
lret
mov
adc
mov
sub
xor
int
outsl
mov
mov
fiaddl
test
cmpsb
sbb
das
bound
mov
lods
popf
xchg
rcrl
ds
orb
sahf
cmp
push
mov
mov
movsl
pop
add
clc
in
sub
test
jnp
in
adc
jg
sub
push
pop
pop
hlt
ja
lds
and
daa
push
push
gs
ja
decl
pop
aad
mov
rolb
in
out
xchg
lahf
clc
xor
inc
addb
bound
fucomi
out
cld
sbb
sbb
ffreep
cmp
hlt
add
and
fldenv
mov
hlt
sub
add
inc
outsl
test
xchg
inc
jb
je
lea
and
ljmp
ja
sbb
lret
and
jnp
aam
jmp
stos
clc
push
in
imul
loope
ret
mov
mov
add
mov
and
lds
aad
jnp
mov
aas
and
call
and
mov
pop
lahf
jo
jne
or
jg
pushl
sub
pushf
sbb
sbb
pop
or
stc
or
push
das
loop
cli
test
adc
addr16
mov
test
pop
xchg
insl
sbb
xchg
mov
addr16
shr
mov
xchg
mov
loopne
rcl
or
xchg
call
and
insb
xor
dec
jno
xor
mov
push
std
mov
es
mov
fcompl
or
movsl
stos
js
mov
leave
jp
js
aam
mov
push
scas
jae
fucom
test
push
gs
jge
je
stc
xchg
pop
sub
mov
jno
sbb
into
aad
mov
insb
add
adc
outsb
lahf
clc
gs
sub
fldl
mov
dec
mov
imul
jle
cmp
or
aaa
test
andl
mov
and
jmp
xchg
dec
push
out
cmpsb
loope
jnp
incl
lods
rcr
push
adc
addr16
fs
and
xor
mov
fildl
dec
xlat
ss
adcb
je
sbb
fnstcw
push
pusha
testl
add
ljmp
mov
jno
test
fisttpl
sub
dec
mov
mov
fs
int
aad
add
scas
add
je
lock
jb
outsl
cld
pop
int
pop
push
negl
mov
pop
xchg
sub
pop
outsl
jo
adc
mov
jmp
mov
pop
stos
icebp
imul
jae
mov
lods
stos
pop
lahf
push
int
dec
js
sub
mov
lret
stos
mov
jge
cmp
pusha
sahf
dec
xlat
sub
sub
inc
std
cmp
mov
xchg
lds
lea
mov
add
fsubrs
mov
push
sub
negb
or
sub
sti
lock
pop
test
and
rcrb
insl
mov
lret
hlt
filds
xor
popa
data16
cmc
inc
frstor
adc
cwtl
inc
fs
js
inc
jmp
push
subl
in
xlat
in
add
add
sub
jns
aaa
mov
sub
lods
divl
or
nop
adc
xor
ja
not
cmc
mov
lcall
repz
call
adc
popf
sbb
sbb
pusha
or
push
jbe
sub
lods
push
push
jno
pop
xchg
aaa
xor
loopne
loop
mov
lret
push
repnz
nop
mov
sub
xor
mov
bound
iret
and
fstl
and
shlb
sti
jge
mov
mov
dec
movsl
push
aas
sbb
inc
loope
js
xchg
ret
pop
pushf
inc
lret
pop
cmp
push
or
xchg
out
and
add
stos
mov
inc
add
int3
mov
shl
or
sub
push
add
mov
ljmp
xchg
cmp
shrl
repz
jecxz
cltd
je
push
insl
lock
subb
or
sub
cmp
sub
xchg
mov
movsl
cli
sub
pop
pop
lock
cld
jae
inc
outsl
or
cs
and
shll
mov
hlt
xor
pushf
shll
xor
pop
inc
bound
sbb
sbb
dec
sbb
pop
out
out
clc
adc
inc
jbe
test
xchg
ficoms
or
mov
xchg
notl
sub
in
sti
sti
dec
imul
push
push
pusha
call
sahf
pushf
adc
jno
adc
xchg
sub
jnp
sahf
and
sub
mov
movsl
sbb
or
jmp
push
and
or
mov
mov
fists
mov
jnp
mov
jne
test
jo
arpl
sarb
test
or
in
push
sub
mov
loop
adc
imul
jns
adc
xchg
jg
add
pop
and
mov
dec
sbb
es
fwait
test
nop
pop
cld
mov
inc
es
shl
sub
and
ret
push
mov
or
xor
aam
mov
xchg
mov
loopne
test
dec
fbstp
inc
jns
into
and
out
push
fcomps
bound
popa
xchg
pop
sbb
imul
inc
ss
jno
bound
pop
lods
inc
mov
dec
popa
ja
lret
lret
in
and
jg
fst
sbb
pop
and
hlt
lret
sub
adc
jg
add
scas
popf
xchg
scas
jno
mov
mov
adc
xlat
test
ss
mov
lcall
adc
push
mov
jmp
push
pushf
scas
inc
pop
ja
das
test
fildll
ljmp
jmp
pusha
cmpsb
jne
inc
nop
fldl2e
popa
shrb
sbb
jno
jge
pop
xchg
pop
push
sahf
scas
dec
imul
lahf
es
push
and
pop
call
dec
cmp
outsb
popl
ret
sub
sbb
pop
call
jno
push
mov
and
inc
scas
push
dec
outsl
cmpsb
rcll
into
inc
es
push
insb
inc
aad
dec
or
xchg
push
call
test
ja
divl
adc
js
imull
dec
add
repnz
iret
aas
add
lods
popf
xor
add
mov
xchg
add
mov
or
cmp
loop
mov
pusha
aam
imul
js
call
cmc
cld
shll
inc
pop
imul
xchg
or
das
nop
mov
jne
fstps
mov
inc
sbbb
arpl
or
jnp
enter
adc
jb
xor
mov
jns
fs
or
adcb
pop
sahf
jecxz
lahf
lods
inc
iret
pushf
cs
popf
fwait
out
loope
gs
xchg
imul
mov
sub
ficomps
cmc
fwait
clc
lret
mov
inc
enter
fisubl
push
lods
test
inc
xor
jbe
int3
lret
cwtl
inc
stos
mov
shrl
or
fwait
ret
outsl
test
lcall
movsl
outsl
xchg
mov
lds
jnp
adc
push
int3
pcmpeqd
dec
sub
insl
pop
dec
int
jne
lahf
jbe
xchg
dec
ss
popa
lock
add
dec
sbb
sbbl
in
ss
testb
sub
imul
repnz
xor
cmp
xchg
push
aaa
mov
xchg
dec
aas
push
xor
es
mov
mov
rcrl
push
sub
cwtl
das
lds
xor
mov
iret
jo
xor
sbb
inc
sub
lea
outsb
add
xchg
stos
cs
call
ror
rol
scas
add
sub
xchg
movsl
imul
stos
xchg
mov
jnp
or
adc
js
nop
daa
das
nop
sahf
mov
pop
rorb
xchg
ror
and
mov
stc
mov
or
xchg
inc
fldl
pop
imul
cwtd
in
popf
mov
jbe
ljmp
loopne
in
cmpsl
sbb
cs
rorb
leave
xchg
out
adc
xchg
sbb
mov
mov
jns
out
cmpsb
add
dec
pop
push
xchg
fucomi
push
repnz
and
fnsave
jle
sbb
out
jecxz
sbb
mov
jl
adc
mov
lods
not
outsb
sbb
es
push
das
movsl
cmp
fadds
roll
jecxz
mov
adc
xchg
mov
int3
shrl
push
inc
inc
mov
out
std
jnp
dec
loope
call
push
clc
loopne
daa
inc
pushf
add
pop
ss
subl
push
imul
xchg
add
sub
dec
scas
jmp
push
push
jmp
push
jno
cmc
scas
sub
ja
add
test
repnz
adc
jno
inc
xchg
inc
bound
dec
jns
hlt
sub
jge
add
nop
sub
and
push
xor
test
je
subb
shrl
pop
roll
mov
push
sbb
xor
jge
xchg
fwait
xor
cmpsl
mov
mov
pop
ss
pop
aas
lar
rorb
mov
xchg
jecxz
bound
testb
test
lret
arpl
stc
mov
sub
jb
in
inc
sti
xchg
shlb
enter
aaa
pop
testb
mov
push
or
mov
test
and
pusha
js
dec
push
lock
cs
or
sahf
jl
out
dec
push
insl
out
mov
dec
dec
ljmp
push
inc
sub
jb
stos
popa
flds
jnp
cmpsb
sbb
pop
xchg
add
sub
movsl
jmp
push
jbe
pop
pop
lods
jo
mov
ret
lea
and
xor
repnz
popa
bound
shr
inc
inc
jno
ljmp
sub
les
std
int3
mov
sub
rcrb
jno
mov
mov
adc
push
movsb
xor
repz
pop
insb
lret
pop
insb
adc
pop
scas
sub
call
cwtl
adc
fidivs
icebp
mov
push
push
sbb
imul
jl
mov
sbb
lcall
stc
test
enter
jge
mov
inc
fildl
push
out
dec
mov
es
and
xlat
adc
gs
mov
rolb
sbb
stos
out
out
repnz
repnz
test
mov
iret
pop
add
sbb
imul
lods
pop
mov
pop
lret
mov
insl
and
repnz
test
mov
popf
popl
xor
or
xor
push
dec
inc
fistl
rcl
hlt
or
in
mov
inc
push
dec
pop
ja
mov
mov
movsl
sbb
or
mov
push
cltd
stos
jecxz
sub
sub
in
ret
fdivrs
mov
into
test
mov
adc
xchg
stos
sub
pop
mulb
fdiv
xor
jge
sti
loop
cli
push
xchg
fwait
daa
add
cli
data16
jge
xchg
xor
pusha
cs
ficomps
xchg
call
push
notb
mov
xchg
cwtl
push
bound
mov
mov
cmp
jnp
inc
pop
sbb
sahf
xor
ds
mov
je
inc
fcmovbe
loop
cli
or
insl
push
sub
in
cmp
jne
cmc
mov
fsubr
nop
lcall
scas
in
xor
dec
arpl
adc
fsubl
mov
mov
add
jge
ficoml
aam
mov
movsl
cmp
push
push
lahf
pusha
mov
push
sahf
imul
cmp
and
xchg
push
imul
les
sbb
mov
sahf
imul
add
out
movsl
cmp
push
imul
mov
ficompl
push
ret
mov
and
sbbl
xchg
adc
stc
in
sbb
lret
in
rcrb
lea
mov
adc
les
add
insl
pop
in
adc
push
jmp
cs
add
jo
mov
mov
xlat
hlt
adc
stc
movsl
lds
lret
push
or
and
js
mov
in
cwtl
mov
jmp
mov
jno
in
lcall
ljmp
imul
cltd
and
ljmp
mov
cwtl
loope
xchg
add
mov
xchg
pop
icebp
fwait
mov
and
mov
mov
jne
popa
stc
xchg
xchg
std
inc
push
mov
aad
stc
cwtl
and
fistpll
cmc
cmp
loope
mov
inc
cmp
rcl
mov
xor
inc
movsl
nop
sub
adc
das
dec
mov
push
mov
loop
jl
nop
je
mov
cmp
mov
imul
xor
lods
mov
js
add
dec
daa
ret
mov
cmpsb
cwtl
dec
mov
dec
mov
icebp
out
push
pop
mov
cmp
dec
and
inc
int
test
mov
jge
imul
stc
mov
xor
out
mov
sbb
or
sub
dec
push
ljmp
sbb
dec
mov
add
in
fcmovnu
mov
jmp
lock
xor
cmp
insb
roll
add
mov
les
lret
loope
lods
mov
adc
in
insb
insb
rcl
push
cmp
popf
jae
iret
fimuls
lea
cli
xlat
sub
rclb
xchg
cmc
daa
mov
inc
sbb
xchg
sub
xlat
pop
push
aad
testb
rclb
test
push
sahf
inc
adc
pushf
xor
pop
aaa
dec
fcoml
pop
sti
mov
loope
dec
xchg
lea
call
stos
daa
cwtl
dec
sub
leave
push
insb
cli
cmp
sti
push
inc
pusha
aam
mov
dec
jle
lcall
std
mov
xor
pusha
test
push
ljmp
jno
sub
sbb
insb
les
loope
fmull
sbb
push
push
fnsave
inc
push
outsl
sub
dec
test
mov
stos
into
mov
add
mov
loop
xlat
cli
xor
mov
xchg
sub
xor
dec
pop
or
in
std
push
xchg
dec
push
rclb
mov
insb
bound
pop
cmpsb
lcall
push
mov
shrl
std
or
pop
call
xchg
or
add
aaa
jnp
pop
les
push
std
pop
adcb
dec
pop
push
cmp
pop
dec
cld
adc
mov
add
ja
pop
pop
cmpsl
inc
sbb
jl
cmc
data16
sti
sub
roll
dec
push
mov
ret
fidivs
and
mov
lret
bound
push
adc
daa
and
pop
mov
lret
bound
ret
repz
or
stc
jle
sub
and
or
in
lret
stc
jle
sub
jno
stc
aad
pusha
fsubl
jle
or
mov
sbb
enter
jg
sub
and
or
jg
cmp
mov
sbb
scas
out
add
aaa
push
add
sbb
mov
adc
adc
jno
xchg
sub
imul
mov
test
or
pop
xchg
cmp
mov
int3
jg
push
sub
fdivl
mov
push
add
or
lgs
cmp
aam
pop
repz
jge
inc
sarl
xor
dec
add
fiadds
mov
mov
mov
cmp
je
mov
sub
iret
sub
inc
jmp
xchg
andb
push
adc
fs
pop
test
xchg
inc
orl
cmp
ljmp
adc
xchg
ljmp
out
sub
mov
aaa
cwtl
repnz
lds
sahf
sbb
and
and
loop
sbb
aas
in
xchg
into
cmp
pop
fcom
in
sbb
shrb
mov
inc
pop
xchg
cs
aad
mov
in
cwtl
stos
cmp
jae
loop
and
xchg
sbbl
fwait
jno
mov
fists
pop
popa
fnstenv
push
mov
ficoml
loope
jg
fdiv
xlat
push
cmp
call
add
sbb
cld
stos
dec
cmp
inc
cs
mov
sub
scas
xchg
sbb
loop
cltd
test
daa
mov
hlt
jle
and
push
xor
push
adc
test
jo
addr16
fmul
and
or
fldl
inc
xor
sbb
lcall
cmpsl
enter
push
xor
sub
push
lret
cmp
and
sub
cmp
or
or
jo
xchg
cmp
pop
and
cmpsl
clc
or
jmp
or
pop
icebp
adc
mov
or
loope
xchg
or
cmp
mov
pop
jg
sbb
iret
jns
jbe
add
and
or
mov
out
insl
mov
lahf
sub
popf
jecxz
data16
jne
es
mov
sti
roll
rcrb
dec
jno
xor
cwtl
cmp
jle
and
xlat
push
outsl
sbb
out
movsl
fcmovb
jns
je
or
test
mov
jmp
les
cmp
repnz
ljmp
push
sbb
add
cmpsb
pop
xchg
pop
movsb
std
cwtl
mov
std
stos
mov
cmpb
cmp
sub
and
movsb
cmp
push
mov
enter
jg
insb
mov
mov
adc
xchg
inc
clc
and
movsb
scas
or
cmp
aaa
jne
movsb
pop
xchg
out
sub
decl
jg
add
xor
adc
nop
les
fsubr
test
in
shll
fsubrs
pop
mov
imulb
lods
or
jp
mov
or
mov
sbb
inc
xorl
test
mov
rclb
popf
jne
repnz
or
jnp
xor
addr16
or
shr
jle
rolb
ficoml
sbb
mov
out
incb
addr16
jb
sub
scas
fistpll
pop
daa
add
sub
jns
sub
push
in
mov
xchg
sbb
pop
jo
jae
shll
fldcw
repnz
daa
data16
cmc
in
add
int3
adc
std
loope
loopne,pt
cmp
jns
mov
jp
stos
ficoms
inc
insb
and
xchg
xchg
inc
mov
xlat
xor
test
push
pop
lods
cmp
jp
les
dec
std
mov
outsb
mov
sub
shrb
outsl
insl
stc
fsubs
and
lods
xchg
adc
fdivs
stc
loope
outsb
in
out
test
mov
mov
andb
int
ds
icebp
lods
outsl
inc
popa
adc
cmp
repz
mov
inc
in
push
dec
dec
and
sub
jecxz
shrb
in
out
inc
xchg
push
jne
test
mov
js
cvtps2pd
repz
push
cwtl
loope
lret
loop
dec
adcb
jbe
jo
xchg
sti
xchg
push
into
cli
fwait
xor
movsb
repnz
add
push
ss
push
adcl
fdivl
pop
mov
loopne
adc
xchg
and
pop
xchg
imul
push
aam
mov
cmpb
mov
cmp
ror
adcl
add
add
outsb
xor
push
je
xlat
mov
mov
inc
jae
test
push
inc
in
xor
sti
and
sub
bound
mov
jge
cmpsb
inc
add
outsb
pop
addr16
ret
into
mov
push
jp
fimull
pop
imul
call
cmc
dec
push
push
push
cld
outsb
ja
data16
xchg
cmp
inc
cli
adc
push
daa
mov
addr16
xor
sub
shlb
sarl
rclb
xchg
shrb
dec
lea
data16
xor
ja
mov
je
lret
out
bound
push
stos
inc
test
sub
xor
std
bound
push
xchg
repnz
mov
jnp
ja
nop
faddl
xlat
jnp
jo
mov
xor
jecxz
movsl
xor
or
aaa
mov
dec
cmc
push
sbb
rorb
stc
inc
xchg
xor
fwait
pop
lcall
lcall
jp
and
dec
faddp
es
imul
dec
xchg
jne
movsb
push
cmp
dec
sub
jnp
fs
xchg
pop
push
int3
push
jne
pop
sub
frstor
dec
fnstenv
or
cmp
xchg
jg
adc
imul
daa
out
ret
les
sbb
pop
rcr
cmp
jb
cmp
xchg
jbe
loop
lea
pop
pop
addr16
cli
and
push
xchg
outsl
in
cmc
repz
mov
push
inc
popf
xor
or
xor
pusha
add
insl
or
icebp
sub
mov
push
test
mov
aad
leave
adc
mov
and
out
sub
adc
ret
arpl
mov
in
or
push
adc
stos
adc
dec
into
leave
cmp
lret
sti
ror
jnp
dec
insl
lcall
in
mov
jle
clc
shlb
adcl
test
xor
das
cmp
sbb
dec
es
pop
xchg
test
les
pop
sbb
int3
sahf
les
je
sbb
inc
and
in
ss
push
scas
sbb
ljmp
fdivr
pop
mov
je
bound
outsb
mov
cmc
pop
jbe
inc
pusha
push
inc
or
add
push
in
xor
in
jl
push
jae
mov
lds
and
lea
jmp
test
or
jp
mov
xchg
lahf
repnz
icebp
sbb
negl
stos
movb
jno
push
leave
inc
andl
adc
leave
and
scas
adc
jp
mov
es
test
adc
adc
sub
subl
jmp
lods
inc
loopne
xchg
adc
outsb
add
pop
aas
adc
test
push
or
ljmp
fnstcw
add
mov
mov
xor
outsl
push
jp
test
std
ss
cmp
jl
or
pop
jle
pop
shl
mov
xrelease
in
push
jl
movsb
mov
cmpsl
mov
aad
dec
pop
sbb
stos
adc
data16
mov
and
rcl
insl
cltd
stos
inc
add
pop
imul
push
mov
sbb
lret
mov
lahf
push
adc
sbbb
std
dec
jecxz
int3
pusha
or
mov
std
jae
test
repnz
test
adc
sahf
sub
mov
shlb
add
subb
adc
jp
and
jle
out
daa
inc
dec
jl
cmp
dec
pop
push
sub
into
and
movsb
push
out
inc
arpl
mov
dec
and
xor
push
testl
xor
add
adc
inc
sbb
js
cmpsl
idivb
popa
mov
jg
incb
shll
fmuls
push
popa
mull
cmp
pop
cmp
dec
mov
mov
jmp
pop
mov
add
lret
pushf
sub
xchg
or
testl
or
cwtl
rclb
in
rorb
xor
jbe
rep
shl
inc
add
rclb
pop
mov
cmpsl
stc
xlat
mov
subb
pop
pop
cmpsl
pop
cs
mov
ss
aad
call
cli
inc
lcall
push
xorl
fcmovnbe
into
mov
push
jmp
fistl
and
inc
stc
xor
imul
subb
sahf
lods
mov
push
add
cmpsb
mov
sbb
orb
popf
jle
mov
jmp
sarb
cmp
adc
out
jmp
cmp
mov
mov
orl
push
test
and
ljmp
sub
idivl
ja
dec
adc
outsl
scas
dec
mov
lret
inc
imul
loopne
push
pop
dec
or
repnz
sub
scas
mov
sub
pop
loopne
add
inc
cmp
negl
arpl
sahf
ret
adc
je
cltd
sti
iret
ljmp
fisubs
rcrl
jnp
push
pop
mov
int3
cld
add
xor
jo
ret
pop
out
bound
aam
inc
pop
and
jne
repz
imul
mov
pop
mov
aad
push
cs
mov
mov
rcrl
jno
xlat
ficompl
xchg
pop
cmp
aam
enter
hlt
test
lcall
mov
jmp
pop
adcb
mov
jo
iret
mov
push
xor
jge
andb
xchg
out
adcl
jmp
cmp
enter
cli
or
mov
cmpsl
and
add
int
cmp
dec
cmpsb
push
int3
loopne
pop
jecxz
sub
call
icebp
sub
add
sti
mov
faddl
mov
jmp
ja
int3
xor
into
fisubs
std
lods
nop
stc
and
hlt
mov
gs
push
leave
test
lret
bound
lcall
push
testb
enter
rolb
lret
push
sub
mov
js
cmp
dec
gs
mov
out
mov
and
das
mov
enter
sub
jo
xchg
aaa
push
xor
mul
movsb
xchg
xchg
subb
ljmp
dec
mov
jnp
movsl
pop
and
jbe
push
int3
les
cmc
in
xchg
pop
pop
lret
testl
adc
or
cmp
incl
outsb
inc
call
and
int
cli
inc
sbb
adc
mov
ljmp
dec
out
call
fs
jp
das
mov
popa
out
scas
pop
enter
cmp
outsb
outsb
pop
imul
add
cwtl
arpl
xchg
or
xchg
sub
pop
sub
addl
xchg
xlat
mov
out
jg
ljmp
lcall
cwtl
mov
ror
out
push
std
or
mov
fbstp
inc
shrl
jmp
stc
inc
aad
lahf
inc
out
bswap
mov
or
nop
xchg
add
add
popa
add
leave
push
repz
fdivrp
scas
dec
jbe
cmp
pop
cmp
sbb
push
cltd
cmp
movsb
cmp
sub
fcoms
ja
lret
les
rcrb
fldenv
call
in
in
inc
dec
fisttps
or
icebp
cmp
jecxz
mov
ds
dec
xchg
push
xlat
cmp
mov
decl
and
sahf
and
outsb
or
sub
and
rol
push
adc
add
jp
lret
adc
lods
lock
cmp
mov
cmp
sbb
pop
jge
aad
sbb
mov
stos
arpl
arpl
jbe
jb
aam
mov
jne
daa
mov
sub
xor
test
sbb
pushf
clc
cmp
shr
sub
jp
lock
jmp
jp
pop
int
pop
sub
push
mov
pop
lock
mov
inc
cmp
loop
enter
mov
lret
dec
clc
xchg
out
js
into
jno
pop
mov
push
orb
gs
adc
push
sub
mov
sbb
test
std
ja
inc
mov
loope
fcmovnbe
lock
ret
sub
push
add
lods
xor
test
cmp
hlt
aaa
loope
jne
cli
jl
mov
movhlps
add
repz
inc
sub
stos
or
mov
ret
jae
sub
rcll
xor
pop
sbb
dec
jp
inc
and
xor
jecxz
push
pop
repnz
or
push
movb
xchg
hlt
and
mov
push
bound
mov
adc
enter
inc
fcoml
dec
loopne
mov
test
adc
push
sub
dec
pop
cwtl
repz
roll
pop
mov
in
cmp
icebp
rcl
or
push
cmp
pop
scas
mov
scas
add
in
xchg
sti
xchg
ljmp
inc
cwtl
adc
fdivs
sbb
negl
in
xchg
push
test
hlt
std
bound
fstpl
daa
pushf
mov
dec
dec
pop
xchg
leave
outsl
stos
xchg
mulb
push
fistpll
jp
ja
and
movsb
iret
test
sbb
mov
jne
shll
dec
and
mov
ss
xor
and
push
andl
pusha
sbb
push
inc
jp
fiadds
lahf
inc
jae
mov
mov
sub
cmp
aam
scas
push
movsl
and
fwait
movsl
stc
pop
mov
xchg
fwait
pop
add
jbe
push
imul
dec
test
lcall
sbb
inc
mov
sbb
subb
addr16
ret
jl
and
jb
dec
fdivs
jecxz
bound
mov
xchg
je
and
mov
or
mov
and
mulb
jb
stos
cmp
mov
or
adc
sub
fldcw
push
sub
inc
push
mov
push
cli
add
adc
bound
imul
cli
movsb
dec
sub
inc
mov
stos
mov
inc
stos
loopne
mov
or
adcb
pop
xor
sbb
adc
test
mov
or
je
js
jb
movsl
dec
in
icebp
movsl
pushf
mov
je
mov
lahf
jnp
adc
dec
pop
sar
mov
inc
pop
jg
je
subb
sbb
leave
nop
xchg
into
ja
add
shrb
add
push
mov
xchg
adc
fs
in
lret
push
and
inc
mov
jmp
pop
adc
sub
mov
xor
test
repz
mov
xor
dec
fs
adc
lea
je
fisttps
or
xchg
jge
jge
lcall
fwait
out
div
out
orb
jmp
or
fistpl
mov
pop
lods
xor
daa
sub
movsb
jmp
rcr
scas
and
add
hlt
fdivrl
push
in
lods
sbb
out
stos
push
outsl
aam
xor
xchg
dec
int
test
imul
aas
push
bound
sbb
xchg
push
fisttps
mov
test
jl
and
rcr
movsl
pusha
cmc
in
frstor
movsl
mov
push
and
lret
lret
mov
jg
mov
adc
xchg
shll
mov
jecxz
push
stos
outsl
loop
cli
imul
adc
repnz
adc
or
ss
imul
push
hlt
jo
loopne
repnz
push
int3
ja
dec
loop
inc
sbbl
inc
stos
inc
out
orb
leave
enter
mov
sbb
jne
jecxz
shll
adc
mov
mov
in
fmuls
lcall
cltd
sub
mov
dec
jg
jecxz
pop
mov
adc
xchg
loop
pop
in
sbb
add
adc
jmp
pop
sub
notl
push
xlat
jmp
call
and
sub
sub
mov
add
sub
ret
shlb
xorl
aam
inc
shll
or
cmpsl
inc
mov
pop
call
sbb
sbb
addr16
mov
repnz
jo
in
adc
sahf
cmp
sub
cwtl
cmp
dec
jp
pop
popa
and
rcll
out
mov
adc
push
pop
xor
rcrb
mov
cld
cmp
cmpsb
je
jmp
add
mov
sub
sahf
repnz
pop
jno
xlat
imul
push
adc
sbb
loopne
arpl
or
gs
testl
push
inc
mov
ljmp
pop
insb
lea
test
add
aaa
pop
jg
adc
std
inc
add
push
xor
mov
pop
mov
into
dec
addr16
jp
in
in
out
imul
outsl
iret
subb
xor
pop
sbb
clc
add
inc
dec
in
jbe
ds
and
leave
xor
cmp
sahf
push
mov
inc
cli
pop
sarb
lcall
mov
popa
adc
icebp
cld
or
popw
addb
mov
mov
sbb
mov
stos
inc
dec
pop
mov
pop
stos
add
mov
das
xchg
add
pop
loope
xchg
and
pop
stc
repnz
fcmovnb
lret
test
push
mull
into
enter
xchg
xlat
icebp
jnp
rolb
mov
pop
mov
pop
fstl
cmpsb
mov
mov
mov
pop
cmp
fs
mov
jnp
cmp
test
jg
pushf
addl
xchg
push
mov
iret
and
mov
lcall
popf
test
popf
mov
lret
bound
mov
cmpsl
mov
adc
int3
pop
sub
jge
fld
cmpsb
clc
outsl
inc
dec
mov
xchg
cmpsb
sub
fists
sub
pop
outsl
xor
icebp
mov
addr16
gs
jb
jmp
aad
push
aas
xchg
jo
loope
dec
adc
call
inc
and
das
xchg
pop
xlat
xor
test
sbb
mov
pop
xor
add
push
cmc
stc
xor
sbb
xchg
call
js
stos
es
adc
add
arpl
lods
repnz
sarb
mov
insb
filds
ja
lock
or
xchg
push
out
ret
mov
gs
and
outsl
pushf
pop
mov
or
std
mov
cmp
push
mov
lods
mov
xchg
sbb
mull
or
mov
sbb
aam
mov
jne
aad
push
aad
push
dec
cmpsb
les
pop
mov
cld
jae
sub
into
adc
fwait
loop
and
imulb
mov
add
xchg
adc
test
insl
enter
add
mul
shrb
hlt
rcll
loop,pt
mov
mov
cli
adc
dec
aad
negl
aam
adc
jae
xchg
mov
dec
cmp
loopne
inc
mov
xor
nop
mov
or
data16
fs
cmpsb
xchg
adc
mov
clc
push
push
pop
ret
xchg
sub
icebp
cwtl
add
mov
push
out
jle
push
cmp
movsl
add
xchg
ljmp
dec
lods
dec
icebp
mov
cmp
ljmp
jmp
or
adc
pop
sahf
mov
or
insl
sub
in
inc
xor
push
loopne
push
icebp
test
gs
stc
push
out
dec
iret
mov
mov
mov
scas
mov
pop
sbb
and
icebp
stos
cmp
stc
clc
push
andl
or
xor
les
mov
xchg
sti
sub
out
xchg
sahf
pop
jb
and
adc
sti
arpl
jbe
pop
out
lock
movsl
daa
fdivs
scas
push
pextrw
pop
loopne
test
rcrl
test
inc
xor
jecxz
xchg
pop
fdiv
inc
push
dec
ficoms
xchg
test
ret
mov
xlat
lods
mov
or
cmp
adc
push
and
xor
outsb
int3
pusha
sub
into
xor
mov
cmp
xchg
mov
es
xchg
vmovdqa
sbb
std
or
dec
in
push
add
jl
or
mov
ss
mov
adc
inc
sbb
je
cltd
and
pop
xor
lock
and
pushf
addr16
movsl
pop
sbb
add
leave
das
dec
and
div
mov
and
addr16
and
out
test
mov
inc
mov
inc
adc
fwait
je
mov
or
jp
cmp
lods
xchg
in
fcomps
or
and
lcall
push
push
out
jmp
dec
out
sub
sub
sub
sub
and
ffree
orb
xorb
push
mov
cmp
mov
pusha
clc
jg
sarl
aad
lahf
sbb
mov
push
hlt
inc
cli
ret
add
mov
cmp
dec
add
rorl
test
jp
cwtl
cmp
fwait
lds
incb
cltd
mov
push
cmp
cmc
mov
xchg
lods
push
push
pop
or
in
lods
adc
movb
pop
arpl
movsl
cmp
test
mov
adc
subl
cmp
mov
dec
loopne
add
je
sub
dec
pop
cwtl
sti
fwait
cwtl
ret
mov
std
xchg
clc
les
mov
jnp
imulb
ret
leave
pusha
jns
sbbl
lcall
xor
cld
xchg
stos
shll
int
jl
sbb
and
xor
iret
popa
xchg
cwtl
cltd
mov
dec
loopne
fcoms
das
fstl
pop
repnz
outsl
das
clc
popa
nop
cmc
mov
xor
xchg
dec
vpshufd
push
js
sub
lods
cltd
js
mov
cmp
pop
mov
test
pop
fdivl
inc
and
pushf
shrb
and
movsl
dec
loopne
adc
in
sbb
cmpsb
cmp
adc
ss
cli
sub
pushf
mov
pusha
sti
and
sahf
push
sbb
scas
adc
call
sbb
ds
div
jo
fsubs
pop
icebp
add
js
push
and
push
into
ja
shll
add
outsl
xchg
cmp
xchg
add
ss
movsl
and
ja
int3
mov
js
dec
mov
pop
sub
inc
faddl
out
test
and
push
cmp
insb
fisubs
mov
leave
pop
push
in
cmp
xor
sbb
or
mov
sub
sub
mov
inc
dec
dec
loope
fstl
scas
push
mov
pop
call
or
pop
mov
popa
clc
sbb
movsb
cmp
add
pop
xchg
pop
xlat
add
cmpsb
cmp
mov
les
rorl
in
and
adc
test
insl
ficompl
mov
mov
loop
cmp
cwtl
das
sub
xchg
nop
dec
rclb
jle
xlat
mov
cmp
sub
lds
sbb
jbe
xor
jecxz
test
add
call
sbb
scas
jne
jo
inc
xchg
xor
and
sbb
xor
inc
mulb
daa
push
out
ja
xor
fidivrl
dec
in
adc
inc
push
fidivs
ja
in
movsl
mov
jae
clc
fsubrl
or
lods
inc
imul
stc
mov
popa
mov
fildl
cltd
or
aad
mov
lods
inc
xor
repz
push
lret
bound
mov
jmp
popl
pop
sahf
pop
data16
xchg
cwtl
insl
adc
mov
mov
cmp
cmp
push
jmp
fildll
enter
inc
push
incb
lods
push
popf
sub
iret
adc
inc
push
outsl
push
mov
mov
leave
push
daa
mov
sbb
dec
loopne
push
push
movsl
inc
dec
sub
mov
popf
arpl
iret
push
aas
inc
push
xchg
sub
lahf
imul
or
mov
xchg
mov
sbb
mov
and
xchg
out
leave
add
xor
mov
pop
sbb
or
xchg
jmp
cmp
mov
cmpsb
call
or
inc
mov
mov
fldl
or
popa
or
clc
cmp
pop
out
mov
xor
push
scas
mov
fsubrl
aas
pop
std
pop
sub
movsb
stos
dec
add
mov
iret
sbb
dec
lock
fsubs
push
popf
or
out
sub
add
shll
xchg
stc
call
inc
fsubs
push
ljmp
pop
sahf
or
mov
jo
xchg
sub
jno
fld
sbb
jns
xchg
push
stos
lea
in
xor
cmpsl
jle,pt
sbb
fcmove
and
jge
je
popa
stos
jge
pop
sahf
test
push
imul
pop
mov
cmp
jns
xchg
cmp
xchg
cmc
push
jnp
test
lds
jecxz
ret
es
xchg
push
out
xchg
xor
pop
negb
jbe
and
mov
aam
enter
dec
in
sub
xchg
pop
test
cld
fmul
fs
decl
ret
sbb
in
mov
insb
imul
das
hlt
shrl
add
ret
pop
pop
adc
daa
dec
iret
add
xor
sub
mulb
jmp
dec
mov
outsl
push
adc
or
in
in
mov
out
outsl
negl
and
repz
fnstenv
sti
add
sub
fs
and
mov
xchg
and
pop
cmc
and
loope
push
mov
and
stc
nop
insl
hlt
push
movsl
sub
mov
sub
into
je
in
sub
mov
test
loope
xchg
adc
xchg
fadds
cmp
pop
jnp
pop
repnz
xor
fisttps
mov
test
sbbb
xchg
or
inc
push
cmpsl
ds
arpl
or
fbstp
sbb
mov
nop
loopne
sbb
push
lahf
ss
jge
xchg
mov
pop
imulb
xor
sbb
insb
mov
push
lods
dec
xorb
les
xchg
stos
aaa
fidivl
push
in
xchg
stos
test
fistpl
sahf
xor
jbe
lods
inc
mov
je
lret
test
inc
ficoms
xchg
xchg
flds
cwtl
or
jo
xor
xchg
sub
mov
int3
arpl
add
mov
loopne
stos
adc
aaa
repnz
clc
mov
sub
sub
lods
ret
cmovp
sarb
loope
cmpsb
mov
inc
ljmp
cmp
and
sarb
shrb
push
out
mov
push
jecxz
test
outsb
outsl
mov
insl
add
dec
dec
in
ds
mov
iret
mov
cmpsb
jecxz
dec
in
aas
in
test
fnsave
cmpsl
ds
xor
mov
mov
push
loope
test
sbbl
int3
mov
cltd
xor
mov
jecxz
lock
xlat
outsb
jg
std
xchg
mov
sbb
jns
push
call
sarl
into
scas
dec
pop
scas
jns
imul
aam
sub
cmpsl
dec
scas
inc
addb
pop
lret
outsb
pop
repnz
push
xor
mov
xlat
outsb
les
push
lahf
pop
pop
lock
mov
frstor
mov
xor
and
cmp
mov
cmp
shll
push
daa
and
imul
lods
mov
enter
aam
fnstsw
sub
and
mov
jle
inc
mov
ds
cmc
rcr
hlt
add
lret
bound
iret
out
data16
adc
mov
sbb
push
cmp
pop
js
jb
push
test
mov
out
std
out
sub
inc
pop
push
dec
out
xchg
mov
lahf
rol
sbb
daa
adc
loop
jle
mov
cltd
lahf
sub
int3
mov
jl
pop
push
mov
test
xor
mov
in
bound
or
call
push
jo
mov
jnp
loope
xchg
or
sbb
xor
out
xchg
mov
sub
iret
cmp
cld
add
out
test
pop
repnz
lcall
mov
ss
pop
icebp
sub
jg
and
inc
fsts
cltd
xor
adc
mov
rcl
adc
sbbl
aas
dec
popf
arpl
iret
shl
ja
push
cmpsl
sbbl
push
es
fldl
sub
xchg
push
movsb
bound
in
pop
ret
or
jmp
and
loopne
leave
inc
jb
push
scas
lock
cmc
pop
pusha
mov
jno
dec
iret
repnz
xor
lcall
mov
jecxz
adc
cmp
insl
fcmovbe
js
mov
addr16
aas
shll
out
fidivl
lcall
jp
pop
fldl
in
push
int
or
inc
lahf
pop
xor
pop
pop
mov
pop
inc
out
imul
dec
out
sbb
leave
and
repz
fisubl
jae
flds
xor
arpl
mov
jle
add
sub
inc
lds
imul
sbb
jg
lds
pop
pop
lds
mov
fs
xor
sub
cmpsl
add
mov
ss
lret
cmp
pop
inc
ss
and
jle
jge
add
ljmp
inc
fisttpl
test
shll
jne
jecxz
test
stos
dec
mov
pop
mov
lock
aas
call
pusha
cmp
testl
jge
sbb
sub
dec
xor
cli
jno
cmp
jae
and
movsb
xchg
inc
int
icebp
pop
add
mov
testl
leave
stos
pop
mov
sahf
xor
shlb
lea
xchg
pop
out
les
push
out
sub
mul
pop
lds
jnp
xor
inc
mov
and
push
out
jae
hlt
sub
xchg
sbb
mov
out
xor
fsubl
sarb
inc
popf
icebp
test
outsl
mov
cwtl
xor
fnstenv
dec
xor
mov
push
aad
arpl
xor
sahf
xor
lahf
mov
jns
subb
out
lahf
xor
cmp
cli
sub
filds
in
mov
outsl
int3
fldenv
sti
out
xchg
sub
movsb
adc
and
push
sahf
shlb
or
lods
ficomps
subps
inc
fsubr
jge
jno
lods
and
or
jl
cltd
adc
pop
add
pushf
pop
push
adc
xor
jbe
clc
sbb
loopne
lcall
push
filds
cli
es
adc
pop
cltd
cmpb
push
insb
jbe
xchg
arpl
outsb
mov
push
push
dec
push
insb
add
scas
enter
mov
mov
mov
xchg
xchg
nop
mov
jbe
mov
ficomps
fmuls
sbb
test
lret
in
loopne
dec
xlat
test
mov
lods
es
movsb
outsb
xchg
imul
xchg
sub
and
sbb
addr16
iret
inc
gs
and
xchg
inc
xlat
inc
inc
jae
cmp
mov
pop
ret
jb
ja
inc
lods
mov
inc
leave
daa
sbb
notl
js
movsl
inc
and
push
pop
push
iret
test
out
or
out
jmp
call
push
mov
sti
out
shl
mov
into
fdivs
aaa
adc
scas
subb
ja
jmp
cmp
shll
pop
pop
ss
and
or
jg
adc
and
mov
mov
or
push
lahf
jp
outsl
mov
lcall
xor
in
push
mov
push
pop
and
dec
jae
fiadds
xor
js
ds
sub
or
mov
adc
subb
pop
stc
and
sbb
and
in
dec
mov
scas
bound
movsb
jmp
repnz
and
aaa
popa
rorl
ja
sahf
test
cmpsl
pop
aas
lret
jl
aad
mov
repnz
or
into
mov
rorb
jbe
addb
pop
movsl
pop
jge
mov
cmp
clc
aad
mov
out
sahf
outsb
mov
ljmp
cwtl
shlb
or
fisttpl
leave
pop
test
enter
mov
sub
popa
xchg
mov
pusha
xchg
and
pop
jo
pop
hlt
es
arpl
mov
xor
pop
jecxz
xchg
sbb
outsb
mov
int
pop
pop
sarl
xor
insl
daa
fsts
in
adc
aas
icebp
inc
imul
sbb
and
xchg
lock
ljmp
rolb
pusha
mov
addb
idivl
push
adc
jns
sbb
outsb
popa
clc
push
xlat
dec
mov
les
rclb
clc
adc
cmp
add
add
repnz
clc
add
loopne
shll
mov
das
repnz
in
sbb
jg
push
inc
pop
fstl
push
aad
push
cli
mov
in
mov
mov
popf
xchg
push
lods
pusha
fsubrl
in
das
push
jmp
test
add
fsubl
in
das
fidivrs
loopne
int
jge
lds
aas
repz
int3
das
jp
mov
add
movsl
jae
cwtl
movsb
repnz
aaa
fsub
or
out
aam
inc
iret
orl
adc
jno
mov
stc
fs
test
test
sbb
dec
iret
inc
mull
dec
rclb
cmpb
jo
frstor
cmpsb
subl
repnz
lods
jmp
sub
jp
cmp
cld
xchg
sub
outsl
push
mov
push
out
mov
dec
test
mov
adc
jne
lods
and
xchg
cmp
add
test
adc
push
aad
pop
jmp
scas
mov
push
dec
gs
cmp
xchg
xchg
insb
cmp
std
jnp
ss
jl
lsl
pop
into
cmp
jmp
push
mov
or
cmp
mov
test
sbb
test
push
cmp
out
push
pusha
pushf
inc
outsb
lcall
jno
sahf
jmp
jmp
shll
jmp
int
mov
pop
loopne
rol
push
jmp
fdivs
into
or
sbb
sub
repz
and
repz
ss
insl
ret
xchg
adc
inc
es
lcall
mov
cs
lods
inc
push
sub
push
ja
xchg
cmp
add
orl
xchg
jle
cmp
cmp
pop
ss
push
loope
fs
es
mov
sarl
sbbl
sbb
insb
icebp
sarb
and
aam
rcrl
fnstenv
out
repnz
mov
loopne
ret
cmp
shl
mov
adc
push
mov
hlt
fistpl
out
loop
add
movsl
addb
ja
jae
mov
adc
pop
xchg
fsts
pop
rorl
js
ds
pop
mov
jno
mov
mov
jl
scas
call
mov
fldl
dec
test
iret
sub
sahf
in
test
icebp
mov
icebp
pop
or
inc
test
cmp
xor
xchg
or
movsb
adc
push
arpl
daa
pop
test
mov
jns
cmp
rclb
fdivs
dec
mov
repnz
pusha
inc
lcall
dec
mov
cs
jno
pop
imul
dec
pop
repnz
add
mov
clc
inc
cmp
pop
int
insb
js
mov
insb
mov
or
inc
adc
mov
fdivr
enter
mov
xchg
ret
sub
movsb
je
jecxz
mov
dec
mov
push
lods
inc
mov
pusha
mov
movsl
xor
xchg
dec
gs
out
pop
jb
inc
push
xchg
insb
push
jns
cmp
ljmp
pop
adc
out
ja
jns
xor
cltd
xor
ss
xchg
and
xrelease
add
test
push
or
std
add
leave
lret
cmc
sub
roll
loope
cmpsl
xlat
imul
into
cmpb
xchg
xchg
mov
fstpl
sub
neg
je
repnz
imul
mov
insl
push
loop
test
mov
dec
mov
pop
fimuls
leave
xchg
sub
push
aad
dec
pushf
pusha
std
loop,pn
jae
fisubl
adc
lds
int
shrl
cmp
mov
pop
cld
cwtl
jg
pop
and
pop
rorb
test
cltd
or
adc
push
mov
and
pusha
sti
dec
inc
dec
mov
xor
push
int
jle
mov
sbb
jae
mov
hlt
pop
mov
movsb
add
test
and
mov
cmc
jmp
aaa
ljmp
outsl
cs
mov
les
pop
ret
pop
movsl
push
dec
out
shrl
arpl
ficoml
and
lods
arpl
call
sbb
out
and
xchg
aas
or
imulb
xor
or
jo
xchg
jl
insb
mov
popa
pushf
push
in
sbb
sbb
and
leave
cmp
xor
xorb
int3
jg
pop
cmp
outsb
rcrb
sub
mov
repnz
out
out
das
mov
scas
adc
sti
cmp
pop
pop
imul
outsl
idivl
inc
mov
pusha
jecxz
ret
dec
cmp
lods
pop
add
mov
dec
ficoms
nop
push
sub
pop
mov
push
shrl
subl
hlt
sbb
cmp
outsl
lods
pushf
std
das
or
jg
inc
inc
scas
sub
or
lahf
inc
mov
clc
push
mov
int
push
jmp
ret
mov
rcrb
loope
mov
les
push
out
call
push
iret
or
out
mov
leave
popa
mov
lock
addl
sbb
dec
lcall
imul
xchg
xchg
mov
mov
mov
int3
sbb
out
dec
mov
or
outsb
xchg
inc
mov
aas
cli
xchg
jno
pop
rorl
sub
mov
jo
pop
aam
xor
vmwrite
les
daa
popl
fcoms
or
nop
inc
cmpsl
insb
push
and
sub
add
sbb
cltd
cmpb
repz
js
stos
inc
fcoml
int3
int
loope
stos
fs
fidivs
inc
xchg
jl
gs
push
stos
pop
hlt
daa
outsb
out
push
cmp
sbbb
pop
shl
adc
gs
mov
jg
cmp
out
cmp
popl
popf
mulb
std
dec
mov
lods
add
pop
adc
dec
loop
je
xchg
adc
pop
push
cmp
add
aas
imul
stos
pop
cmp
inc
lret
jmp
mov
or
pop
stos
ja
or
fstpt
lcall
push
jg
add
push
dec
mov
cmp
pop
mov
imul
sub
jecxz
insl
lds
dec
fldenv
out
mov
dec
sbb
adc
dec
jge
sti
sbb
pop
in
jg
cmp
imul
jo
adc
lods
data16
jbe
jp
push
cwtl
xchg
pop
xor
ret
sbb
lret
test
xor
jmp
in
mov
pop
in
adc
out
push
inc
scas
mov
repnz
int3
int3
test
sub
leave
mov
or
ljmp
adc
sahf
sbb
shrl
aad
mov
mov
pop
hlt
fcoms
call
les
xor
cmpsl
outsb
pushf
addr16
xor
mov
mov
mov
lock
jns
pop
loope
inc
lock
xor
dec
jmp
inc
inc
addr16
push
rorb
cmp
ret
and
xchg
jl
cmc
cmp
sbb
cmc
mov
out
test
or
jbe
in
sbb
repnz
mov
push
cmp
das
mov
loop
pop
adc
std
xchg
gs
xor
and
lahf
bound
cmp
inc
xchg
insl
pop
mov
jbe
dec
xchg
lea
mov
jp
mov
mov
movsb
jle
cli
sub
inc
push
enter
push
rcpps
out
dec
xchg
test
pop
dec
and
push
test
mov
lcall
sahf
popf
imul
mov
shll
aad
fcmovnbe
mov
mov
fdivrs
stos
inc
lret
and
fbld
pop
rolb
cmp
cmpsb
fistpll
out
cmc
or
ret
in
cli
inc
aad
and
mov
xchg
mov
imul
dec
mov
jnp
xor
ja
mov
xchg
insl
pusha
cmpsb
dec
add
pop
icebp
fidivl
aas
icebp
rcll
sub
shlb
xor
mov
or
call
mov
xor
loopne
adc
rclb
xor
xchg
outsl
pop
adc
dec
push
call
mov
push
xor
mov
xor
or
stc
and
adc
aaa
xchg
gs
or
lret
bound
int3
jo
jmp
mov
int
jno
mov
cmpsl
inc
aam
cmp
ja
dec
push
mov
movsb
or
bound
dec
fistps
sahf
xchg
cmpsb
jp
lret
cmpb
and
mov
jle
mov
xchg
add
in
movsl
push
ljmp
inc
lds
mov
jge
push
pushf
push
xor
cmpsl
scas
jb
loop
lock
iret
jg
in
jle
fildl
leave
outsl
cld
insb
fwait
mov
jmp
lock
int
jg
out
mov
out
sti
xor
mov
ret
loop
push
mov
mov
or
je
in
mov
pop
shlb
std
xchg
xor
repnz
push
lea
dec
or
xchg
xor
lds
sbbl
cmpsb
mov
outsb
daa
lock
xchg
cmp
mov
in
mov
dec
sar
add
lret
mov
stc
nop
sti
jns
or
pushf
push
ljmp
jae
pop
dec
or
pop
xchg
pop
testb
jno
hlt
dec
push
lret
bound
mov
inc
fcompl
jne
inc
pop
inc
test
sub
nop
flds
or
pop
dec
pushf
jbe
dec
pmulhw
cmp
cmp
insb
push
inc
lock
xor
out
insb
es
cwtl
inc
daa
fldl
xlat
push
sbb
xor
xor
rcrl
and
arpl
xor
je
jge
mov
in
out
mov
xor
sub
inc
ret
out
jp
int
lods
cmp
pop
pop
sub
popf
sub
hlt
stos
or
inc
mov
ljmp
leave
movsb
cmpsb
jns
into
add
xchg
mov
imul
sbb
dec
out
sbb
hlt
leave
dec
mov
int
mov
sub
aas
mov
adc
add
mov
sbb
add
jl
test
cmp
shrl
push
cmpsl
bound
call
xchg
cwtl
mov
sub
jp
aad
cltd
gs
ret
cmc
pop
in
sbb
test
sub
jmp
mov
or
pop
mov
jmp
data16
scas
or
jl
xchg
addl
test
jae
cmp
mov
push
or
cmpsl
jnp,pt
pusha
enter
fisttpll
rorl
aam
mov
loop
push
ret
movsb
cmp
std
cmp
loop
loopne
faddp
cmpsl
push
movsl
fadd
inc
lds
jmp
cmc
mov
decl
aas
icebp
leave
and
fiadds
xchg
sub
call
out
fstl
xor
cli
popa
in
cmp
push
leave
data16
inc
ret
and
push
jmp
mov
repz
aam
divl
mov
sar
out
fsub
mov
cli
or
cmp
icebp
mov
mov
mov
or
mov
stc
popa
fstpt
cmp
data16
push
and
sub
lahf
lea
leave
dec
stos
jle,pn
mov
iret
inc
lret
dec
test
mov
imul
in
movsb
pop
mov
ljmp
and
fistps
addr16
adc
pusha
mov
xchg
xchg
xchg
mov
imul
cld
roll
rcrl
fstp
adc
inc
sarl
cmp
cmc
fiaddl
nopl
jmp
cs
fisubrs
out
push
aad
jo
test
and
mov
mov
cld
outsl
mov
push
mov
cmp
mov
popf
or
push
enter
push
fdivrs
sub
jo
lcall
xchg
test
push
dec
sti
xchg
push
cwtl
das
insl
sbb
in
mov
inc
mov
shlb
mulb
out
sar
leave
inc
leave
fucomi
xchg
jmp
mov
mov
das
xlat
jae
jmp
or
jl
lret
push
subl
mov
jle
out
inc
sbb
lcall
dec
test
cmp
out
xchg
dec
or
inc
es
mov
out
idivb
push
popa
stos
push
fiaddl
out
pop
dec
lds
aad
ds
test
jmp
scas
int3
cmp
divl
push
loop
mov
sub
sub
push
adc
movsb
cmp
fs
je
int3
repz
aam
mov
add
addr16
mov
add
stos
push
pop
pop
adc
lods
dec
cltd
xor
mov
cltd
or
lds
xchg
jp
or
in
lods
int
or
mov
fcoms
xchg
leave
jnp
and
arpl
mov
jmp
fnsave
cli
ss
out
fsubrs
mov
and
and
in
ss
int
je
in
dec
les
add
pop
adc
addr16
das
loope
xor
movsb
add
adc
loope
dec
in
mov
inc
xlat
mov
xchg
std
fidivs
adc
cmpsl
pusha
test
in
xchg
mov
jg
call
mov
xor
add
loope
rcll
aam
jmp
mov
int
sub
xchg
sub
pop
dec
mov
stos
jnp
xchg
pop
jp
push
lret
scas
inc
push
mov
xor
pop
aaa
or
loop
sub
daa
push
ret
sub
scas
xor
sub
sub
lea
mov
hlt
pop
inc
mov
dec
pop
add
pop
push
scas
pop
dec
cmp
fistpll
mov
dec
xor
jp
mov
repz
dec
nop
jnp
adcl
mov
jmp
pop
js
int3
arpl
arpl
std
push
xchg
mov
lds
push
arpl
pusha
movsl
lds
add
call
lret
mov
movsb
popa
push
repnz
loop
mov
mov
mov
xor
mov
lcall
sahf
lcall
scas
movsb
dec
das
repnz
bound
hlt
mov
mov
xadd
fstps
gs
in
xor
outsb
mov
in
add
addl
popl
jmp
test
stc
sbbb
sbb
jmp
jl
and
inc
outsb
loop
fdivs
inc
fisttpl
push
sbb
add
shlb
andb
push
mov
fcomi
cmp
lods
mov
mov
xchg
cs
cli
mov
inc
aam
mov
jne
jo
es
cmp
adc
popf
jmp
sbb
jns
xchg
mov
cli
arpl
outsb
in
pop
mov
dec
faddl
fdecstp
xor
std
cli
and
mov
jmp
mov
sti
pop
add
mov
mov
ja
adc
call
loopne
stos
enter
sbb
hlt
xor
jmp
pushf
sub
in
push
test
in
lods
outsl
mov
jo
jnp
xchg
mov
andb
orl
jl
gs
dec
ss
mov
insl
inc
lahf
push
jecxz
pushf
mov
fnstenv
fdivrl
jns
ljmp
clc
je
hlt
cs
xor
fs
lret
and
sbb
dec
sarb
scas
fs
cmpsl
or
dec
sarl
sub
xor
ljmp
pop
mov
dec
in
sbb
jae
xor
hlt
mov
stos
lret
sub
mov
pop
hlt
pop
mov
in
cli
stos
pop
idivb
sub
xchg
rcrl
out
add
xlat
mov
clc
sub
sub
add
jp
add
sbbl
adc
js
negl
sub
mov
push
lods
insl
cmpsb
mov
mov
push
mov
movb
loope
xchg
pop
inc
mov
and
jl
fisttpll
lcall
add
movsl
cmp
pop
ret
push
push
jecxz
inc
sub
jmp
orl
add
out
sub
lods
cmpsl
cmp
shlb
dec
dec
roll
loopne
lods
ss
cmpsb
sbb
xlat
mov
shrl
loop
jb
dec
pop
out
jl
stc
nop
addr16
jbe
iret
mov
scas
mov
dec
jbe
push
ljmp
jno
mov
out
test
es
lods
inc
pop
nop
sub
sarl
stos
loop
fists
int
cmp
data16
and
lahf
push
xchg
mov
add
insb
je
and
enter
das
ljmp
cli
mov
pop
hlt
dec
or
aad
insl
sbbb
pop
pop
repz
incb
das
jno
adc
les
add
pop
mov
sub
mov
dec
in
scas
dec
fiadds
repnz
call
imul
adc
test
xsha1
cmpsb
lret
jnp
jmp
lret
sbb
ret
pop
xor
push
popa
xor
mov
add
mov
mov
or
xchg
cs
push
sub
dec
mov
xor
push
cmpsl
jle
rorb
mov
pushf
loop
addr16
shlb
fsubl
test
stos
mov
fbstp
xor
negb
nop
cmpsl
dec
jmp
dec
das
repnz
mov
pop
mov
nop
scas
mov
inc
mov
sub
in
xchg
into
push
aad
aas
dec
rep
sub
inc
sub
fwait
aas
push
and
pusha
faddl
rol
jne
pop
sub
out
cli
xor
dec
sub
mov
dec
shl
fbstp
jge
push
xchg
bound
cmpsb
pop
inc
iret
es
mov
shrb
sbb
lock
int
sbb
repnz
ret
pushf
lret
in
js
inc
pop
and
fisubrs
sub
sbb
es
jecxz
or
les
inc
cmp
idivl
adc
push
imul
lcall
or
pop
add
dec
cltd
adc
scas
sub
mov
lret
cmp
and
add
sti
into
aad
mov
sti
xor
inc
inc
mov
clc
rorl
rcrl
loopne
adc
push
iret
adc
orl
lcall
dec
mov
xor
test
arpl
pop
dec
push
xor
push
and
ja
dec
adc
cmc
popa
data16
pop
rcl
sub
mov
cld
sbb
out
mov
imul
in
roll
pop
mov
adc
push
test
mov
rcrb
pop
mov
lds
sarb
ftst
push
push
mov
mov
inc
push
xor
pop
fdivrs
cwtl
lock
cmp
cmp
ds
mov
sub
scas
mov
sub
clc
arpl
popl
jmp
dec
lahf
aaa
xchg
pop
sbb
dec
insb
mov
imul
out
rorl
test
mov
cld
jmp
mov
add
pop
mov
lret
and
stos
dec
popf
adc
jo
sbb
add
mov
in
daa
cmp
mov
ja
pop
aad
or
mov
cli
setne
repnz
pop
xor
jo
cmpsb
and
sbb
jb
pop
xchg
xchg
dec
gs
mov
js
sbb
pop
inc
xchg
aam
sub
data16
mov
xchg
or
cmp
cmp
push
mov
and
dec
jp
sbb
add
mov
sub
aaa
and
stc
nop
mov
inc
push
incb
xor
add
or
push
js
dec
push
jl
sub
cmc
jge
ds
push
loope
nop
pop
hlt
mov
inc
fisubl
inc
xchg
sub
addb
dec
loop
xchg
stos
inc
push
imul
dec
out
mov
jmp
mov
jecxz
sub
add
test
mov
jecxz
loope
nop
jno
add
mov
mov
loop
adc
add
insb
add
and
mov
push
push
lds
sub
lods
push
and
sar
shrl
fimuls
paddusw
call
pop
jecxz
push
xchg
orb
cmp
pop
sti
mov
into
mov
fdiv
pusha
push
lock
adc
dec
stos
sub
int3
mov
cwtl
adcb
xchg
dec
mov
adc
pop
jbe
adc
dec
stos
sub
jno
or
pop
push
lcall
xchg
lahf
push
mov
inc
sbb
dec
clc
pop
xor
pushf
inc
in
xchg
cmp
scas
xor
adc
jbe
and
mov
xor
push
das
in
aam
arpl
rcr
je
lods
mov
test
scas
ss
inc
or
mov
call
mov
inc
mov
out
mov
dec
adc
addl
jp,pn
adc
in
je
inc
mov
mov
das
mov
sahf
inc
inc
in
sbb
push
pop
loopne
cmp
and
xchg
cmp
sub
inc
or
sahf
inc
leave
bound
add
imul
outsl
repz
inc
or
xor
dec
out
sbb
add
push
out
insl
jge
cmp
and
aaa
pop
add
in
popf
mov
cmp
xor
gs
adc
ret
sub
inc
or
pop
add
mov
xchg
addr16
scas
mov
jae
cmp
push
pop
add
daa
ss
mov
stos
mov
cwtl
push
cld
pop
mov
stos
inc
or
mov
nop
cmp
mov
lahf
inc
or
pop
mov
dec
inc
or
test
mov
sub
xchg
cmp
test
and
les
pop
cmpsl
xor
mov
and
mov
lods
cmp
cmp
in
sub
sbb
cmp
and
into
outsb
nop
cmp
or
mov
lods
xor
xor
and
cmp
es
adc
roll
test
test
mov
lods
mov
cmp
jg
fdivrl
push
push
mov
xor
sub
inc
adc
xchg
inc
adc
push
out
xchg
loope
add
mov
push
mov
movsl
push
add
lea
fwait
inc
adc
fsts
sbb
fadd
xchg
mov
jecxz
dec
or
mov
sbb
mov
mov
jl
dec
mov
pop
xchg
enter
fidivl
mov
ud1
dec
or
push
roll
insb
out
pusha
sbb
pusha
jl
or
mov
mov
rolb
inc
xor
dec
rcrb
pop
imul
insb
dec
or
cmc
rolb
sbb
push
mov
jnp
sub
pop
lock
mov
sbb
insl
call
rep
sbb
xchg
sub
fistl
ljmp
fwait
je
xor
scas
push
add
div
mov
and
jmp
dec
icebp
std
repz
in
pushf
cmp
pop
xchg
inc
lds
int3
mov
test
xor
push
jbe
les
inc
les
adc
dec
sbb
inc
xchg
push
push
call
divl
iret
cmp
sbb
ret
sbb
or
movsl
sbb
popf
xchg
ja
push
ret
sbb
lret
rclb
and
lds
lods
sub
lahf
adcb
in
imul
pop
rcll
stos
nop
inc
push
mov
orb
imul
sub
pop
mov
pop
mov
fildl
or
dec
adc
pop
mov
sbb
mov
dec
or
into
xchg
orb
notl
repnz
in
cmp
push
push
push
add
mov
andl
cmp
inc
shlb
fidivl
scas
mov
aas
pop
add
cmp
stos
sub
mov
loope
std
pop
mov
ljmp
mov
sbb
lods
hlt
pushf
cmp
xchg
aas
push
jge
mov
test
push
fisubrl
fidivl
incb
arpl
ss
xchg
cmp
in
add
pop
jmp
mov
test
sub
mov
test
mov
jle
push
sub
daa
pop
mov
inc
div
jb
sub
int3
xchg
daa
aas
push
sti
inc
aaa
aaa
popf
cmp
push
decb
das
pusha
call
push
jp
repnz
in
les
mov
xor
add
dec
adc
xor
push
cli
cld
imul
ljmp
dec
cmp
mov
cltd
dec
adc
sub
in
push
lret
nop
insb
mov
sar
jg
lock
faddl
int
test
inc
and
xchg
jl
jns
dec
adc
insb
mov
add
aas
adc
test
push
mov
and
mov
mov
xchg
or
pop
lret
rcrb
cmc
pop
add
jnp
push
call
jmp
cmp
daa
cld
mov
push
xor
jg
mov
insl
lock
imul
add
outsb
and
lret
xchg
pop
rol
mov
mov
and
test
cmp
push
mov
out
dec
add
lock
loope
xchg
les
imul
clc
shlb
enter
repnz
jl
push
stc
pop
push
cmp
lea
and
jp
cmp
fcmovu
add
or
or
pop
repnz
or
pop
movsb
sub
fidivs
fcomi
lea
or
in
jb
jb
jmp
jb
sub
fisubs
fucomi
or
insl
cmp
scas
sub
insb
cmp
pop
mov
dec
or
in
push
xchg
sub
int
int3
arpl
adc
insl
out
insb
dec
inc
adc
ja
fs
cmp
sub
pusha
dec
push
dec
rcl
addb
mov
xchg
stc
pop
jg
and
out
add
daa
jmp
inc
or
aaa
movsb
loopne
lds
and
and
sbb
pushf
mov
mov
xchg
inc
sub
es
cmp
pop
push
je
adc
add
arpl
pusha
pop
cmp
idiv
pop
cmp
jl
pop
and
test
lods
int3
insb
cmpsl
xor
mov
mov
jp
xor
test
bnd
fwait
rorl
movsl
lret
mov
scas
sub
stos
out
addr16
test
inc
mov
inc
cmpsl
xchg
shrl
mov
cs
in
out
xchg
divl
or
es
and
in
push
jmp
sub
lods
dec
dec
adc
mov
xchg
cmp
adc
rcrb
mov
mov
mov
call
cmpsb
sub
or
sbb
dec
push
clc
lahf
mov
push
cli
sub
das
mov
ds
loopne
out
rcrb
xchg
sub
testl
lock
inc
sbb
push
xchg
sub
or
sub
xchg
push
cmp
ret
lea
xor
and
stos
jle
and
insl
cmp
sahf
mov
xchg
adc
push
insb
hlt
scas
out
fldl
mov
lods
and
loopne
filds
add
iret
nop
xor
icebp
imul
fiaddl
xor
or
jb
inc
push
push
push
cltd
mov
mov
cmp
sbb
into
mov
mov
mov
push
cli
setae
jnp
pop
jl
div
rorb
fadd
mov
sarb
jne
push
push
rorb
mov
add
mov
mov
and
stc
inc
or
shll
sub
mov
je
das
mov
bound
adc
dec
adc
rorb
insb
pop
repz
dec
jp
repnz
mov
cli
into
sarb
sbb
add
and
faddl
shrb
mov
test
mov
inc
jae
jg
pushf
sub
push
std
xchg
jne
test
insl
fidivrl
scas
adc
in
repnz
push
pushl
loopne
mov
lret
sbb
hlt
cmpsl
inc
adc
lods
pop
hlt
pop
mov
fdivrs
sbb
mov
push
xor
loop
pop
stc
lods
add
and
sub
dec
sub
mov
pop
mov
out
xor
cmpsl
jb
dec
mov
stos
inc
ret
jno
int3
mov
mov
adc
out
addr16
aam
fldl
insb
addr16
dec
shr
jno
lcall
repnz
dec
adc
loop
notb
inc
popa
in
loope
loope
dec
cmc
addr16
jmp
add
je
and
pusha
scas
or
enter
add
push
out
jmp
jmp
mov
xlat
cmp
or
loopne
xor
cmp
sub
cmp
out
subb
aas
lcall
mov
movsb
jo
lods
and
stc
mov
dec
jmp
test
stc
inc
rcll
mov
add
add
and
or
insl
cmpsb
sbb
xchg
dec
mov
sbb
lock
popf
inc
adc
inc
dec
aam
shrb
inc
fldl
je
xlat
jns
bound
adc
mov
mov
lret
xchg
aas
mov
fidivl
stos
dec
or
popa
jmp
sub
fcmovbe
test
shl
pop
mov
mov
sbb
mov
mov
dec
or
push
out
popa
testb
insl
cs
xchg
xor
mov
cmp
mov
inc
add
push
clc
cli
push
cld
fs
add
shl
sbb
pop
mov
lods
push
clc
test
call
cmp
aad
and
fdivrl
test
pop
pop
dec
cmp
cli
inc
lret
out
cmp
addr16
rcl
or
scas
adc
cmp
es
mov
in
and
fdivrs
std
out
imul
pop
cli
call
testb
lea
and
fwait
xor
jae
xchg
pop
add
adc
clc
popa
inc
inc
adc
xchg
xchg
cmp
ja
clc
pop
xor
or
push
imul
icebp
sbb
add
jp
mov
mov
pop
mov
mov
bswap
or
pop
mov
scas
push
mov
push
in
mov
icebp
stos
jle
addb
dec
adc
lods
cli
out
aam
in
sub
dec
popa
out
imul
and
mov
ds
inc
adc
stc
pop
mov
movsb
int3
mov
clc
push
jmp
adc
movsl
cli
sub
push
lods
mov
dec
mov
pop
mov
inc
adc
mov
pop
mov
pop
lret
insb
and
pushf
cmp
dec
xchg
add
out
outsb
out
stc
pushf
cmp
sub
ss
cs
sub
enter
out
movsl
cmp
sbb
push
ret
pop
subl
mov
je
das
cmpsb
cmpsl
sub
dec
jp
sub
fwait
jg
pop
xchg
adc
mov
scas
inc
jle
jge
jmp
test
adc
orl
cmp
cli
pop
in
nop
lock
in
cmp
mov
in
and
data16
mul
jae
sbb
arpl
adcb
bswap
outsb
ss
lods
push
jne
cmc
test
pusha
icebp
mov
movsb
or
addr16
jo
jle
js
pop
push
add
dec
ja
js
sub
frstor
jno
push
jp
int
lea
mov
xchg
loop
loope
inc
adc
mov
mov
and
dec
push
jae
fsts
jecxz
pop
mov
int
inc
pop
push
add
pushf
popf
cmp
inc
adc
data16
cwtl
repz
xor
lods
xor
mov
cmp
pop
adc
scas
aaa
cmp
fcomip
pop
mov
mov
hlt
jns
jb
jg
orb
repz
sbb
inc
pop
sti
sbb
lds
iret
sub
xor
mov
scas
and
ss
loope
popa
fdivl
adc
push
sahf
inc
lock
inc
or
jecxz
mov
stos
and
movsb
scas
mov
dec
adc
jbe
add
add
into
addr16
pop
sahf
sbb
lret
negl
xchg
ds
pusha
pop
popa
jecxz
pusha
mov
mov
ret
cmp
adc
int3
mov
mov
adc
adc
int
dec
ret
xchg
inc
imul
rcll
inc
xor
andl
fnstenv
add
jae
aaa
sbb
sub
mov
xchg
push
loopne
stc
ljmp
pop
mov
test
clc
jnp
xchg
inc
pusha
popa
xchg
inc
js
pop
mov
insl
xchg
mov
xlat
je
sbb
or
cmp
mov
leave
fwait
push
les
es
aas
movsl
cmp
in
into
sub
clc
and
inc
jmp
lock
push
mov
mov
in
jbe
push
stos
ss
frstor
lods
add
cmp
add
sbb
xlat
push
icebp
pop
pusha
add
xchg
clc
jne
adc
in
loopne
inc
cmc
imul
aam
pop
add
add
cmpsb
sub
jnp
movsl
sbb
pop
adc
pop
jb
repnz
das
addr16
cld
cmp
movsl
xor
and
mov
push
push
inc
adc
mov
xchg
int3
xor
rcll
or
rorb
xlat
jg
jns
adc
out
inc
pop
hlt
clc
addr16
inc
inc
add
inc
cmp
das
lock
inc
fcomip
pop
jecxz
mov
clc
mov
jno
push
imull
cmpsb
sub
inc
or
xchg
sub
aad
xor
int
xor
outsl
popf
xchg
insl
icebp
jle
pop
cld
fsubrs
xor
sub
lret
enter
cmp
fwait
add
mov
xchg
mov
add
in
jmp
stos
shl
test
ud1
pop
add
inc
xlat
lea
sub
mov
inc
movsb
addr16
jae
or
fs
inc
cmpsl
or
lret
jne
and
push
cld
fwait
xor
jnp
leave
movsl
daa
sarl
add
iret
pop
hlt
pop
repnz
pop
out
mov
dec
pop
push
add
xor
aam
wrmsr
jae
xchg
push
call
jmp
lea
mov
roll
ja
add
int
xor
les
cmp
jg
aad
ret
add
add
mov
mov
jmp
popa
outsb
out
js
push
insb
outsl
dec
adc
jl
shrb
jb
sti
fucomp
outsl
sahf
in
lods
cld
lret
and
es
cmp
je
lret
int3
lods
xchg
mov
dec
cmc
xchg
inc
push
xchg
or
or
int
sbb
loope
adc
test
cltd
cmp
and
aas
push
fidivs
and
push
xor
xchg
gs
mov
movsl
lea
cmp
movsl
mov
fs
testb
rcrl
or
xchg
mov
in
out
mov
dec
nop
cmp
adcb
inc
jmp
arpl
cmp
xor
push
arpl
movsl
sub
jae
leave
pop
cli
mov
in
imul
adc
inc
cwtl
inc
insl
push
sarb
jnp
out
mov
cmp
test
push
enter
dec
push
lods
scas
clc
pop
lds
mov
lret
into
pop
push
add
jno
in
sbb
test
fisubrl
mov
stc
pop
lcall
pop
jmp
popf
xor
loop
mov
lds
adc
mov
fwait
es
mov
stos
out
test
addr16
cmpsb
adc
inc
jno
jns
xchg
mov
clc
cmp
or
cltd
aaa
and
negb
std
bound
filds
mov
and
lcall
lods
lock
cmpsl
xor
in
mov
add
iret
ljmp
arpl
xchg
jne
sub
mov
sahf
in
jno
push
sbb
stos
stos
loopne
and
push
iret
add
push
rclb
cmpsb
xor
jge
jecxz
popf
inc
stc
mul
insb
cmp
sub
test
mov
adc
add
mov
lods
sub
and
jle
leave
mov
lcall
and
rcl
enter
mov
and
xchg
inc
in
aas
inc
adc
icebp
dec
or
jmp
test
jmp
adc
dec
lea
negl
mov
adc
repz
cld
fisubrs
mov
lock
xchg
es
stos
sbb
jae
xor
outsb
jmp
iret
dec
std
in
imul
sub
dec
or
jb
int3
inc
vmread
lret
out
and
jo
pushf
sbb
mov
lock
adc
sbb
ja
call
pop
add
rorb
aam
es
xchg
xchg
pop
add
fildl
dec
and
fsts
in
insb
fbld
fnstsw
arpl
add
inc
adc
mov
stos
sub
ret
fistpll
jns
and
gs
add
xchg
sbb
cmp
cmp
sbb
movsb
cmp
nop
daa
jnp
ret
fwait
out
shlb
pusha
imul
aas
xor
gs
stos
data16
scas
xor
and
fiadds
scas
or
iret
popf
push
sti
loop
mov
push
xchg
jge
ret
inc
int
cli
pop
xchg
in
mov
xchg
cmp
ret
setle
out
jae
xchg
cmp
popa
mov
xchg
jbe
inc
or
scas
fs
js
jmp
sub
cltd
cld
pop
mov
mov
enter
xor
jnp
test
std
pusha
movsb
sarb
movsl
out
mov
push
cld
mov
mov
push
adcb
push
mov
add
mov
jg
pushf
movsl
dec
pmulhuw
jns
push
repz
inc
push
push
inc
or
rorl
mov
les
aad
lea
add
andl
inc
or
rorl
ret
mov
mov
mov
mov
mov
cltd
cltd
mov
hlt
scas
cwtl
cmp
xchg
leave
addr16
pop
lock
stos
in
add
insb
mov
mov
sbbl
dec
push
es
repz
ja
pop
outsb
negb
test
xor
jmp
mov
in
push
call
rep
sub
or
int
pusha
mov
xchg
pop
or
imul
popa
stos
jl
xchg
mov
mov
loope
pushf
add
mov
jp
ret
xchg
adc
push
cmpl
jno
rolb
mov
lods
jl
sbb
add
int
pop
mov
out
sub
cmp
stos
daa
stc
and
mov
push
les
push
movsb
ficoml
fcmovu
pop
sbb
cmp
ret
sbb
sub
repnz
sarl
push
pop
xchg
sub
or
decl
dec
xchg
insb
andl
sbb
jo
fildll
test
cmpsl
cwtl
fildl
rcll
orb
mov
nop
lock
shll
repz
jbe
sbb
add
sub
mov
inc
sub
xchg
xor
test
inc
jae
testb
imul
sti
lods
xor
es
xor
jne
pushf
inc
xor
and
mov
dec
cmp
mov
sti
xlat
xchg
inc
fsub
sarb
add
dec
ret
stos
and
imul
mov
lods
sub
mov
mov
add
xchg
inc
int3
test
sarb
int3
cmc
xchg
inc
icebp
out
mov
mov
lcall
push
jl
negl
mov
out
pusha
lock
loopne
movntps
insb
in
pop
xor
xor
icebp
mov
mov
jns
xchg
imul
mov
imul
insb
lea
fisttpl
fidivs
test
test
arpl
push
jge
adc
dec
rolb
jns
inc
pcmpgtw
sbb
lds
or
fdivrl
mov
pushf
ds
lret
push
lea
leave
xchg
inc
add
xchg
inc
pop
in
push
ja
dec
pop
cmc
insb
cmp
mov
mov
repnz
test
in
and
mov
fstpt
sub
ret
test
jmp
sub
fs
sarb
cmp
jo
mov
xchg
cmp
dec
int3
mov
xchg
xchg
inc
cmp
adc
pop
cli
xchg
or
cmp
and
jnp
jp
outsb
push
xchg
aam
out
jae
pop
sarl
or
cmp
aas
mov
jecxz
sbb
cwtl
icebp
push
dec
int3
sbb
mov
test
data16
sbb
cmpsb
sub
fstpt
sbb
jmp
nop
dec
mov
dec
push
popf
popf
inc
imul
dec
adc
clc
push
dec
add
das
sahf
sub
jmp
imul
ret
mov
idivl
add
vaddps
inc
jnp
and
pop
jne
fmuls
xchg
mov
mov
mov
pop
cli
pop
jl
jnp
inc
or
es
push
add
cmp
pop
sti
inc
push
mov
hlt
cmp
sub
js
and
mov
mov
dec
jae
or
into
mov
shl
setg
pusha
mov
jp
and
add
and
pushf
aaa
add
xchg
rorb
shlb
aaa
fwait
xchg
into
xchg
in
stos
xor
mov
scas
orb
xchg
cmpsb
jnp
loopne
pop
push
das
stc
pop
add
cmp
bound
mov
std
movsb
lret
sbb
and
dec
add
xchg
cmp
jbe
mov
test
loope
out
jo
xchg
mov
std
pop
out
das
test
sti
xchg
inc
enter
in
pop
nop
cltd
repz
and
or
and
xchg
add
aaa
xchg
mov
pop
pop
loopne
out
or
mov
nop
xchg
das
xchg
lret
cli
cmp
insl
insb
sbb
lds
fstl
in
jl
mov
dec
push
scas
fsubrp
jno
mov
fiaddl
outsl
int
sbb
mov
inc
inc
adc
out
add
cmpsb
stc
jmp
push
add
sbb
jle
adc
aad
mov
mov
mov
push
jb
xchg
sbb
lcall
mov
lods
sub
iret
loope
jmp
pop
xor
sub
pop
pop
insb
addr16
mov
arpl
aas
mov
hlt
shl
ja
or
fs
push
sti
add
jns
lock
adc
xor
aam
xor
inc
mov
cwtl
inc
test
adc
aad
les
imul
jae
int
xchg
iret
mov
pop
mov
or
std
das
push
sbb
int3
shll
sbb
fstpt
jbe
xor
and
mov
push
stos
aad
sub
push
add
add
stc
nop
xchg
cs
mov
out
lret
pop
or
pop
xchg
aaa
jbe
filds
std
mov
ret
jmp
xchg
adc
jle
adc
add
xchg
mov
stos
icebp
jmp
hlt
mov
cs
lods
xlat
adcb
push
aam
pushf
xchg
inc
pop
div
bound
push
leave
movsb
jae
enter
or
pop
pusha
mov
in
inc
clc
pop
hlt
mov
jl
dec
mov
jo
mov
jp
cli
stc
in
jmp
call
leave
int
fiaddl
mov
or
fidivrs
mov
mov
mov
fs
js
dec
cmpsb
xchg
mov
mov
lret
mov
mov
insb
pop
push
loop
xchg
mov
jge
data16
xchg
cwtl
frstor
leave
dec
setbe
pop
add
addr16
pop
mov
sbb
mov
dec
jecxz
sarb
add
jae
adcl
jnp
inc
push
insl
dec
or
inc
xor
rorb
movsb
xor
or
lret
dec
or
and
stc
pop
mov
push
lret
pop
and
adcb
pushf
cmp
xchg
mov
movsb
xchg
inc
popf
out
lods
inc
shll
xor
xlat
cmpb
aam
fs
popa
push
in
pop
pop
fs
mov
clc
or
and
cmp
loope
orb
out
jb
ret
lahf
inc
subl
cmc
jo
and
mov
mov
adcl
fnstcw
test
clc
push
dec
ja
push
out
insl
es
add
call
push
outsl
push
and
fidivrs
and
insb
fidivrs
sahf
adc
orl
jp
sbb
sub
and
fistpll
inc
lods
sub
mov
mov
mov
sub
sub
lcall
insl
dec
gs
xchg
cmp
mov
mov
sbb
adc
aas
lcall
adc
daa
fadds
cs
ret
lahf
gs
xor
xchg
or
fwait
jbe
pop
stc
mov
push
add
pushl
addr16
in
or
pop
and
pop
push
mov
xchg
jne
mov
shrl
xchg
arpl
mov
popf
jg
add
sub
ficoml
mov
mov
cmp
push
stos
xor
xor
adc
xchg
ds
add
lret
cmp
push
ja
adc
jmp
cmc
mov
cmp
mov
mov
scas
sub
out
call
xor
sub
int
cmc
lea
mov
adc
mov
pop
cld
add
pop
jb
xor
sar
das
adc
int
add
aad
lea
push
adcl
pop
dec
and
jno
or
orl
cltd
inc
fcmove
imul
xchg
jmp
mov
push
and
push
clc
cmp
iret
xchg
in
or
aad
mov
pop
call
cli
and
cwtl
mov
xchg
mov
loope
mov
mov
xor
cwtl
inc
movl
fs
sub
loop
mulb
cmpsl
jle
fldl
in
add
jnp
add
stos
rcll
pop
dec
mov
sarb
pop
rorl
pop
add
push
jg
mov
mov
pop
sti
in
lods
enter
inc
adc
dec
push
add
test
mov
dec
or
push
lds
or
shrl
and
fwait
inc
aas
jne
xchg
lcall
ret
mov
iret
xchg
movsl
mov
jb
jp
mov
roll
pop
jmp
gs
sub
loopne
cmp
mov
mov
lods
sahf
test
jno
in
loop
pop
scas
idiv
pop
dec
mov
dec
and
cmp
repnz
pop
add
or
jmp
stc
pop
mov
jecxz
inc
or
jle
cmp
stc
push
dec
adc
xchg
cmp
mov
lds
cmp
imul
pop
push
mov
ljmpw
repz
xor
fistpll
and
push
mov
mov
push
movsl
inc
test
sub
push
cld
push
stc
incl
lcall
pusha
push
dec
push
dec
xchg
fstps
nop
aas
in
lds
adc
and
ret
clc
mov
bound
sub
xchg
orl
adc
out
mov
cld
sub
out
bound
adc
in
popf
daa
dec
adc
mov
rorb
andl
xor
sbb
inc
insl
lock
ljmp
loope
ret
mov
mov
xchg
pop
sbb
sub
dec
add
sbb
xchg
cmp
push
add
les
push
iret
sti
adc
sub
sbb
mov
sub
filds
iret
in
cmp
xlat
cmc
in
pop
adc
mov
xor
xor
scas
inc
hlt
les
sbb
push
lods
lea
popf
inc
es
fs
cmpsb
xor
popa
push
jo
adc
sub
ds
stos
pop
add
add
mov
push
xor
cmp
hlt
pop
daa
das
hlt
fs
iret
lea
pop
ljmp
cltd
repnz
loop
xchg
sbb
into
mulb
xor
lahf
in
cs
hlt
out
das
push
xchg
mov
insl
cmc
cmpsl
cmpsl
sub
shrl
jp
out
dec
or
cli
fdivl
clc
xchg
sub
dec
pop
lcall
mov
xchg
mov
orb
outsl
fsts
ret
or
daa
or
mov
aad
loopne
es
sti
cltd
cmp
fldenv
ret
adc
mov
dec
push
shll
mov
xor
ret
lock
sbb
gs
cmc
pusha
lcall
adc
out
nop
inc
dec
cld
lock
movsl
das
push
adc
call
mul
jo
jo
nop
xchg
pushf
cld
pop
call
imul
rclb
es
out
jl
jecxz
movsl
cmp
mov
pop
lock
roll
push
cmpsl
js
xor
dec
xor
xchg
jle
hlt
in
and
out
mov
and
sub
pusha
ljmp
rclb
pushf
xor
shrl
mov
xor
insl
cmc
in
or
pop
in
adc
je
aad
in
imul
leave
mov
mov
mov
test
cmp
and
pop
push
adc
gs
or
inc
jbe
xor
inc
cmp
xchg
mov
sahf
jecxz
sbb
fdiv
cmpsl
sub
adc
inc
push
sti
jae
cmpsl
sub
bound
jge
lea
jo
out
int3
jne
cmp
mov
mov
xor
cs
xor
fs
aad
mov
mov
jb
aam
inc
mov
xchg
movsb
xor
xchg
aad
es
ds
xor
mov
sbb
ret
cmpsb
aad
test
xchg
cmp
shrb
jno
aad
lcall
cmp
ret
sbb
loopne
out
imul
lret
sahf
mov
movsb
cs
mov
loope
andl
sbb
je
jae
test
jns
push
xor
xor
fs
mov
and
imul
sahf
mov
mov
jns
lods
xor
scas
pop
data16
cwtl
mov
js
mov
call
cmp
pop
push
ljmp
jno
loop
pop
lock
add
daa
ss
ja
pop
push
scas
inc
mov
sub
stos
int3
arpl
int
dec
std
ljmp
push
or
cmpsb
mov
push
movsl
clc
hlt
inc
inc
stc
ja
dec
loop
cwtl
adcb
mov
sahf
xor
inc
ds
cmp
ret
mov
clc
push
or
jp
aaa
push
lods
push
mov
mov
fistl
or
ds
sub
pop
xrelease
jp
fcmovbe
lods
inc
add
daa
lret
dec
mov
cmpl
imul
push
popf
cmc
repnz
and
cmpsl
jns
inc
fisubl
les
cmc
in
dec
jecxz
pop
adcb
ds
jo
sahf
xor
ret
mov
cmpsb
cmp
inc
aaa
les
fs
nop
xchg
mov
jns
mov
scas
call
or
int
das
push
mov
pop
push
jmp
cmpl
loopne
pop
icebp
add
xchg
sub
scas
inc
xchg
sub
fcmove
mov
std
sti
jmp
sub
dec
or
movsb
mov
div
inc
fsubl
sbb
lds
arpl
jne
dec
jecxz
xchg
sbbl
out
jmp
mov
inc
cmp
push
outsb
arpl
jb
mov
pop
call
or
jnp
xor
add
mov
fsts
or
aas
xor
jno
pop
push
pop
hlt
test
es
jnp
fcom
lods
inc
add
cltd
xor
mov
jg
jmp
insb
ror
pop
sahf
cld
repz
inc
adc
mov
ret
repz
inc
cmp
add
lahf
ss
push
in
loop
ds
fdivl
xor
cli
xchg
xchg
mov
jp
mov
scas
out
add
cmp
push
in
mov
aam
lods
jae
pop
repnz
xchg
sub
and
push
push
mov
test
cs
into
gs
mov
sti
stc
in
subl
aam
dec
dec
or
mov
ret
adc
and
das
movb
sti
jae
dec
in
xchg
sbbb
mov
mov
and
mov
aas
xchg
fdivl
mov
pop
out
cli
xchg
adc
in
cmp
sbb
mov
and
or
inc
xlat
xor
jb
pop
push
pop
cmc
cmpl
movsb
jl
iret
scas
inc
add
lcall
dec
mov
subl
icebp
hlt
mov
sbb
mov
jne
inc
fcompl
shlb
call
sbbb
cmp
data16
and
loopne
aas
adc
pop
gs
sti
xchg
xchg
xchg
jnp
mov
mov
flds
cltd
or
cmp
aaa
sub
mov
pop
push
in
mov
aad
stos
je
fmul
pop
repz
xchg
sub
and
push
push
mov
xorl
cmpsl
movsb
into
gs
enter
imul
subl
aad
dec
dec
or
mov
ret
repz
inc
fstpl
adc
fs
jno
dec
in
xchg
sbbb
mov
mov
and
cmp
inc
xchg
mov
jae
mov
pop
in
cli
xchg
adc
out
cmp
sbb
mov
and
push
incl
xor
jb
pop
push
pop
cmc
cmpb
lods
mov
scas
inc
add
lcall
dec
mov
andl
lock
mov
sbb
mov
je
inc
fcompl
mov
dec
in
adc
add
mov
and
fildll
je
xor
pop
fs
sti
xchg
xchg
test
jnp
mov
mov
fadds
cltd
or
and
mov
lods
test
pop
repz
cld
xchg
sub
and
push
dec
mov
xorl
aam
mov
stc
cmc
in
andl
insl
dec
dec
or
mov
rcll
repnz
inc
fstpl
ds
outsl
dec
out
nop
sbbb
mov
mov
and
ss
inc
xchg
mov
jae
mov
pop
in
cli
xchg
push
push
out
cmp
sbb
mov
and
add
inc
fsubrs
es
pop
push
pop
testb
jge
aam
scas
inc
cmc
fwait
xor
and
fs
dec
mov
andb
or
and
sub
jb
inc
fstpl
fs
out
in
out
adc
add
arpl
and
test
jne
xor
pop
bound
xchg
popl
sbb
pop
add
shlb
and
xchg
stos
cmpsl
jne
fxch
pop
hlt
std
cli
xchg
sub
jl
push
dec
mov
jg
lcall
lds
test
inc
or
sahf
cwtl
sub
leave
mov
inc
ficomps
adc
leave
inc
cmp
cld
insl
fs
out
mov
add
adc
lea
xor
push
pop
stos
inc
popl
leave
pusha
loop
sti
xchg
or
call
mov
push
push
popf
mov
into
mov
and
fcmovbe
push
in
add
inc
fldcw
dec
pusha
idivl
xchg
sub
lret
cld
repz
xor
inc
mov
andl
or
push
pop
sub
dec
aas
adc
jo
inc
ficomps
mov
push
out
push
test
inc
xor
mov
and
fldt
jbe
cs
std
xchg
lea
sbb
add
and
test
xlat
test
lret
sti
clc
xchg
sub
sbb
mov
jge
fwait
xor
ret
mov
test
pop
fsubrs
inc
or
jne
testb
mov
dec
fistps
adc
lret
data16
imul
xchg
mov
out
mov
and
fs
lods
inc
lea
lret
fdivr
xchg
or
jmp
mov
push
pop
sahf
xchg
iret
scas
cmpsl
and
in
add
inc
fisubrl
and
dec
popa
clc
jge
xchg
sub
enter
icebp
popf
xor
sbb
dec
inc
mov
test
ret
repz
inc
cmp
dec
fistps
mov
push
call
xor
gs
mov
and
mov
pop
in
stos
inc
or
loopne
cmp
pusha
pop
pop
xchg
mov
jle
lods
sbb
fst
add
shll
and
pop
out
xorb
test
jbe
aad
pop
idiv
notb
dec
dec
mov
jnp
pushf
xor
ret
hlt
out
out
test
push
fnstenv
inc
or
jae
testl
in
out
fists
sysenter
lret
inc
cmp
imul
sbb
mov
cmp
rclb
lods
inc
mov
lret
cld
xchg
or
ljmp
push
or
lods
cmpsb
es
clc
inc
fldt
and
push
dec
stc
jnp
xchg
sub
mov
clc
out
sahf
xor
dec
inc
mov
test
rorb
call
sub
inc
cmp
lods
insb
gs
loopne
lea
mov
fists
adc
xchg
arpl
cmp
mov
pop
loop
lods
inc
or
js
sub
popa
pop
push
call
scas
stos
sbb
popf
add
cmp
and
push
dec
pop
lock
cmpsb
mov
pusha
idiv
hlt
xchg
sub
sbb
dec
inc
mov
jns
popf
xor
lcall
repnz
out
xchg
adc
jno
inc
or
cltd
xchg
sub
ret
mov
dec
loopne
or
addr16
addr16
push
ljmp
jno
jecxz
mov
daa
aaa
rcrl
scas
inc
mov
int3
arpl
aam
xchg
push
ljmp
push
or
stos
movsb
es
std
testb
jbe
push
dec
stc
jns
xchg
sub
mov
imul
sahf
xor
dec
inc
mov
xchg
mov
clc
sbb
sub
inc
cmp
lods
push
dec
loope
mov
mov
fstl
push
or
pop
popa
pop
movsl
cmp
orb
loope
lods
inc
pop
add
jns
sub
popa
pop
push
add
lods
test
mov
into
push
popf
cli
cmp
sub
and
icebp
jge
inc
fisubl
popa
clc
div
xchg
sub
dec
inc
mov
jbe
sahf
xor
leave
mov
lock
cmp
stc
nop
xchg
sub
sarb
loope
or
int
xor
fs
push
jmp
test
or
fsubs
xor
push
scas
inc
mov
ja
test
xchg
add
jmp
das
and
or
test
daa
mov
cli
hlt
inc
fsubl
inc
arpl
ja
xchg
sub
cwtl
sbbl
hlt
jmp
ss
ds
xchg
mov
stc
nop
push
cvtps2pi
inc
aaa
pop
scas
push
mov
add
fistl
or
mov
cmp
cmpsb
cmp
mov
les
shrl
jp
es
bound
add
stos
cmpsb
pop
mov
int3
pop
sahf
std
clc
cmp
mov
jnp
inc
ret
stc
hlt
out
xchg
and
sbbl
je
lahf
ss
xchg
shrl
mov
icebp
mov
adc
jae
cmp
cmpsb
insb
arpl
xchg
xchg
lea
scas
out
dec
loop
or
into
cmp
imul
mov
or
xlat
movsl
cmp
add
pop
pop
push
mov
xchg
js
cmpsl
into
gs
call
sub
dec
or
cmpsl
mov
pop
lock
repnz
frstor
sbb
dec
inc
fs
jne
xchg
sub
enter
repz
shrl
cmp
push
outsb
push
fdivl
mov
cli
xchg
adc
lds
xor
dec
jecxz
xchg
int
mov
add
fsts
push
mov
cmp
jb
pop
pop
cmpsl
mov
daa
mov
lds
scas
inc
add
in
xor
arpl
add
test
lret
sti
idivl
aad
sbb
pop
repz
inc
fsubl
shll
out
cwtl
das
and
sbb
mov
jae
mov
imul
mov
mov
push
fnsave
adc
xchg
mov
lds
fimuls
pop
cmp
cmp
push
bound
in
mov
je
fst
cmpsb
cmp
xor
les
push
mov
test
jns
movsl
into
xlat
rolb
xchg
add
in
subl
push
mov
dec
or
cmpsb
sahf
sub
clc
lock
frstor
sbb
dec
inc
fs
jae
xchg
cs
xchg
sbbb
shlb
sbb
imul
push
insb
repnz
jae
mov
cli
xchg
adc
sbb
nop
test
int
mov
add
xlat
push
jmp
add
jb
pop
pop
test
mov
scas
stos
pop
scas
inc
add
in
xor
int3
arpl
add
test
and
cli
idivb
aad
sbb
mov
jns
inc
fcompl
shlb
in
cwtl
das
pop
adc
dec
jb
mov
imul
mov
mov
or
adc
xchg
mov
lds
dec
jecxz
push
cmp
aaa
das
push
popa
pop
push
in
mov
je
cmpsb
cmp
xor
les
push
mov
cmpl
movsb
into
gs
iret
add
sub
push
mov
dec
or
movsl
popf
sub
imul
inc
frstor
sbb
dec
inc
fs
jb
xchg
cs
xchg
sbbb
mov
mov
imul
push
imul
cwtl
mov
jae
mov
cli
xchg
adc
cmp
pop
dec
in
test
int
mov
add
push
jmp
add
and
sub
pop
push
test
mov
daa
lods
stos
pop
fmul
scas
inc
add
in
xor
int3
arpl
cltd
xorb
cmpsl
mov
or
sbb
mov
js
inc
fcompl
mov
cwtl
das
push
adc
dec
jno
mov
imul
mov
mov
or
je
cmp
cmpsl
imul
lds
fmull
add
push
pusha
push
push
in
mov
je
fcmovnbe
cmpsb
cmp
das
sub
pop
pop
push
mov
cmpb
lods
mov
add
sub
pop
mov
dec
or
movsb
fwait
sub
imul
inc
fstpl
sbb
dec
aas
fs
jo
cwtl
das
popf
xchg
sbbb
mov
mov
insb
inc
aaa
mov
mov
mov
cli
xchg
ud2
xor
cmp
sbb
mov
insb
add
aam
jmp
add
or
test
daa
stos
test
scas
inc
cld
in
cs
fs
dec
add
movsl
mov
or
and
sub
jbe
inc
fstpl
fs
out
ljmp
inc
cmp
mov
insb
ret
push
call
or
jne
adc
mov
fimull
or
cmp
xor
imul
push
push
out
xchg
and
shlb
sub
dec
mov
cmpb
stos
mov
add
es
and
js
ds
cltd
sub
lret
repz
jmp
ficomps
jnp
dec
cmp
cltd
xor
mov
mov
insl
inc
xor
hlt
mov
mov
test
or
sbb
mov
insl
add
rclb
add
mov
xor
or
stos
inc
xchg
sub
lret
cld
cli
out
sub
into
gs
dec
add
jle
in
andl
or
and
sub
dec
inc
pop
cmc
je
inc
ficomps
mov
lcall
cmp
cmp
mov
push
out
hlt
mov
or
jbe
xor
test
lea
sbb
or
cmp
xor
insb
add
out
test
and
shrb
sub
and
pop
push
dec
mov
jle
in
test
lret
sti
repnz
test
or
jbe
aas
mov
rcrl
jmp
jl
inc
cmp
insb
addr16
mov
mov
outsb
inc
xor
push
gs
cmc
mov
mov
stos
in
cld
xchg
or
xor
cmp
mov
pop
push
out
jle
iret
scas
stos
outsb
add
add
mov
xor
je
push
push
stos
inc
test
sub
leave
mov
sti
clc
out
sub
add
jl
in
test
ret
or
and
sub
inc
inc
pop
cmc
jb
dec
fistps
mov
lcall
cmp
cmp
mov
pop
in
hlt
mov
pop
loopne
cmp
adc
mov
mov
dec
in
add
shlb
sub
push
pop
lock
lods
movsb
ja
into
test
add
xchg
sub
and
pop
push
dec
mov
jge
in
cmpsl
sahf
shrl
enter
icebp
out
xchg
sbb
mov
jne
aas
sahf
xchg
sub
mov
dec
loopne
adc
cmp
imul
xchg
mov
dec
ljmp
outsb
ds
pop
fs
cmc
mov
mov
stos
jecxz
std
xchg
or
sbb
mov
shrb
iret
push
out
add
mov
das
and
push
push
stos
inc
xorb
cmpsl
mov
mov
cli
mul
jge
sbb
addr16
dec
add
jp
out
test
ret
repz
inc
xlat
push
adc
pop
cmc
jo
dec
loopne
xchg
jl
ret
mov
lcall
aaa
mov
cmp
mov
pop
in
hlt
mov
push
loope
cmp
adc
mov
sbb
in
cmp
xor
insb
add
pop
lock
lods
mov
test
push
xchg
sub
and
pop
push
dec
mov
jnp
in
cmpsb
pushf
shrl
movl
xchg
sbb
mov
jae
inc
xlat
popf
xchg
sub
lds
dec
loopne
adc
inc
cmp
imul
mov
frstor
outsl
cmp
pop
testb
mov
stos
loop
std
add
inc
rorl
jecxz
sbb
outsl
xchg
xchg
mov
push
add
mov
jmp
sub
jnp
mov
mov
daa
icebp
jmp
fcoms
dec
mov
xor
and
xchg
rcr
cmp
js
inc
mov
mov
or
pop
inc
ret
adc
cmpsl
in
jno
orb
sbb
shll
dec
or
xchg
lods
repnz
scas
daa
sbb
or
fwait
out
movsl
loop
aaa
dec
push
push
addr16
test
mov
addr16
mov
pop
in
mov
push
jne
in
and
add
mov
stos
fisubl
sbb
clc
jo
aam
aas
cwtl
mov
or
ret
les
neg
int3
insl
cmp
aam
stos
dec
sub
inc
into
sub
and
inc
and
sub
sub
test
into
ret
jecxz
mov
stc
cli
xchg
dec
and
or
lret
or
lods
fs
test
sbb
add
inc
xchg
es
xor
repnz
lock
ror
add
push
into
and
push
lret
icebp
cmp
cwtl
adc
or
lret
or
dec
pop
jns
mov
or
daa
jne
hlt
ljmp
cmp
pop
mov
push
inc
sbb
sar
fs
jns
jo
xor
jl
fadds
mulb
push
imul
aaa
dec
cmpsb
mov
movsb
pop
mov
mov
adc
jle
jl
jbe
fstl
out
mov
pop
xor
scas
fdivl
jno
fisubrl
lahf
mov
lods
lcall
iret
mov
push
mov
mov
aas
adc
iret
rcrb
mov
jbe
pusha
scas
je
jbe
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
mov
mov
dec
xchg
jge
mov
cmp
jle
jb
lret
mov
pop
cmp
sbb
call
mov
ljmp
fnstenv
iret
outsb
mov
mov
fimull
js
bound
js
in
int
ret
xor
ja
inc
rcll
mov
rcrb
mov
popa
and
mov
xchg
ret
ja
cwtl
insb
inc
adc
movw
jne
inc
mov
jecxz
inc
lods
mov
iret
and
fistpll
inc
mov
xor
inc
js
rcrb
mov
pop
cmpsl
ja
jmp
icebp
es
push
rep
xchg
xor
rcll
sbb
negl
sub
sub
mov
mov
cmpsl
arpl
xchg
cli
and
add
jae
repz
cwtl
fs
testb
fwait
xchg
push
add
lock
fwait
jmp
out
cs
and
rol
fildl
test
mov
loope
or
test
rolb
xchg
mov
mov
sbb
pop
push
imul
sbb
cmp
into
lods
cwtl
insl
push
xor
pop
cmc
mov
mov
mov
and
push
fiaddl
sbb
dec
cs
add
ss
sub
js
call
outsb
out
lcall
add
cli
leave
nop
insl
out
pusha
sbb
fwait
icebp
jge
mov
fildl
scas
push
stos
movsb
cld
inc
addr16
and
shlb
js
mov
out
popf
inc
mov
mov
inc
adc
das
repnz
cli
push
test
mov
lods
ficoms
or
jne
outsb
and
mov
add
push
push
add
inc
push
sub
mov
mov
call
inc
mov
fimull
ret
mov
aas
lods
mov
outsl
gs
loop
xor
fidivl
or
lock
lods
movsb
rcrl
mov
fisubl
mov
insb
cwtl
mov
pop
addr16
icebp
mov
subb
cmp
dec
push
cmp
inc
lds
mov
push
xor
adc
push
in
scas
lods
mov
negb
emms
rclb
adc
and
scas
cli
mov
loope
movsb
xchg
mov
imul
push
cmp
mov
xchg
jae
fstp
les
lcall
insb
adc
jmp
xchg
mov
test
push
cmp
dec
bound
out
lods
xchg
icebp
aam
sbb
and
ficoms
aas
lods
ljmp
lds
cmpsl
inc
jae
movsb
popa
jg
int
jae
pop
out
mov
es
outsl
sahf
dec
loop
jbe
pusha
lea
adc
adc
lods
pop
mov
or
movsl
adcb
aad
mov
idivb
mov
cmp
or
jl
or
adc
push
jmp
pop
movsl
out
stos
scas
insb
push
jle
icebp
xchg
push
scas
ret
fcomi
xchg
test
mov
mov
and
jecxz
in
subb
adc
mov
push
cmp
lret
in
xchg
insb
xor
xor
add
dec
mov
fisubl
inc
mov
sub
rolb
inc
scas
pop
xchg
push
mov
aam
and
xchg
movsb
sub
jg
cld
jg
xchg
jbe
ret
addr16
movsb
lods
or
mov
repnz
rcrb
shl
lea
jnp
das
rcr
or
imul
mov
out
sub
imul
outsl
xchg
mov
in
mov
jo
mov
rcll
jp
xor
xor
das
int3
daa
xor
loope
adc
adc
push
outsl
loop
rorb
mov
sub
cmp
cmp
add
repz
inc
lea
sarl
daa
dec
push
mov
sbb
add
pusha
mov
cli
add
leave
adc
out
push
xor
pop
sbb
aaa
dec
inc
cmp
sub
imul
and
out
imul
fbstp
cltd
xchg
orl
pusha
and
cmp
mov
dec
sbb
rolb
dec
sti
mov
xchg
hlt
sbb
cmp
repz
icebp
push
mov
ret
jmp
jb
pop
cmp
pop
stc
dec
jno
or
push
idivb
lea
jle
jmp
xlat
jnp
mov
push
popf
lods
sub
dec
popf
das
sti
xor
je
movsl
out
sub
add
enter
mov
pop
stos
push
jne
arpl
mov
popa
mov
inc
or
jmp
inc
push
push
in
push
jge
sbb
cmp
jae
mov
cli
repz
mov
je
add
in
arpl
gs
jmp
mov
inc
mov
or
push
mov
cs
jo
push
mov
fs
inc
dec
sub
arpl
or
push
mov
mov
lods
mov
fs
lret
add
xor
jg
push
jns
adcb
jg
xchg
outsl
mov
daa
lret
lcall
xor
xchg
mov
daa
pop
push
dec
stos
cmp
adc
fwait
repz
popf
jmp
fidivl
xor
push
repnz
testl
sub
mov
push
dec
mov
push
sbb
jo
add
outsl
xchg
cld
jnp
cmp
and
sub
ds
and
ret
cmpsb
out
and
scas
jbe
xchg
lock
dec
adc
out
jmp
fs
cmp
cwtl
push
cmp
loopne
and
and
cmp
push
ja
xchg
lods
sub
inc
add
add
lods
pop
mov
push
arpl
data16
popf
mov
daa
xchg
sub
add
jnp
adc
out
adc
in
adc
pop
imul
xchg
loopne
add
imul
add
mov
aad
jmp
push
aam
and
iret
jmp
lret
jecxz
sbb
pushf
ss
stos
ss
push
fs
mov
and
cmpb
