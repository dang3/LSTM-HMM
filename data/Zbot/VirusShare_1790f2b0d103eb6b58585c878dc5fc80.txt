push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
lcall
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
add
jmp
xor
mov
mov
pusha
call
add
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
jmp
ret
std
xor
mov
cld
add
mov
mov
shl
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
mov
jbe
mov
popf
dec
call
add
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
lea
sub
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
xor
xor
movl
add
and
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
add
cmp
jne
mov
pop
add
jmp
stos
call
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
inc
and
add
and
add
add
and
add
add
and
add
and
add
add
stos
and
add
and
add
and
add
and
add
add
lcall
add
and
add
and
add
add
add
add
inc
and
add
add
js
add
push
and
add
and
add
and
add
and
add
add
in
add
mov
add
add
add
dec
and
add
add
ss
add
and
add
add
add
add
add
add
and
add
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jle
add
movsb
and
add
add
aam
add
jo
add
and
add
add
and
add
and
add
add
stos
and
add
and
add
and
add
and
add
add
lcall
add
and
add
and
add
add
add
add
inc
and
add
add
js
add
push
and
add
and
add
and
add
and
add
add
in
add
mov
add
add
add
dec
and
add
add
ss
add
and
add
add
add
add
add
add
add
je
jb
jbe
je
push
jb
imul
push
add
inc
imul
insl
gs
insb
outsl
jae
add
insb
jae
jb
outsb
inc
add
push
push
je
imul
inc
add
out
inc
gs
imul
bound
gs
add
xchg
add
je
jne
jb
outsb
je
push
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
imul
outsb
je
outsl
insb
add
dec
outsl
arpl
dec
outsl
arpl
aam
inc
gs
jb
jbe
push
jns
gs
add
add
popa
jo
gs
jb
jns
data16
je
je
dec
popa
outsb
fs
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
push
add
outsl
jae
dec
popa
outsb
fs
gs
add
gs
inc
imul
jo
outsb
dec
jne
gs
add
cmpsb
add
je
gs
imul
roll
dec
gs
jo
jb
add
cmp
fs
imul
add
repnz
imul
jb
je
arpl
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
mov
push
push
gs
popa
addr16
outsl
js
add
mov
push
dec
inc
gs
gs
imul
inc
jb
addr16
arpl
jo
inc
imul
js
jb
arpl
outsl
outsb
inc
add
lods
add
gs
insb
inc
bound
je
add
add
addr16
imul
adc
inc
insb
insb
push
outsb
jb
imul
jb
gs
mov
inc
push
add
inc
gs
popa
insb
insb
outsl
arpl
sbb
insb
imul
outsl
outsb
add
add
addr16
jne
jb
inc
imul
push
dec
inc
gs
popa
insb
insb
outsl
arpl
ret
add
inc
jb
add
push
dec
inc
dec
dec
xor
cs
insb
add
add
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
inc
gs
jbe
imul
imul
push
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
or
push
push
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
dec
inc
inc
inc
inc
push
xor
cs
insb
add
add
inc
push
dec
xor
push
inc
arpl
outsl
insb
add
dec
push
inc
push
dec
xor
fs
insb
add
add
rcrl
xchg
jbe
rcrl
sbb
or
xor
das
adc
aaa
dec
pushf
sbb
push
insl
and
das
das
aam
add
ljmp
cmc
jns
push
pop
mov
bound
inc
faddl
mov
es
jg
std
xchg
fisubrl
dec
xchg
bound
mov
mov
loopne
iret
cmp
push
ss
push
mov
pushf
fstl
pop
fsubrs
rclb
ljmp
lods
adc
add
inc
scas
mov
mov
mov
push
sbb
or
movsl
pusha
pop
mov
imul
nop
scas
nop
cmc
pusha
mov
cli
jns
xor
mov
mov
xor
dec
arpl
add
jns
in
xchg
test
mov
les
aad
inc
dec
rolb
xchg
stc
dec
mov
lods
mov
adc
sbb
pop
repz
les
bound
insb
cmp
adc
add
in
insb
popa
movsl
cli
xor
fbstp
fs
pop
mov
pop
push
inc
cmp
mov
xor
jb
into
xorb
ljmp
fcompl
popa
aaa
mov
and
or
daa
loop
shlb
addr16
jnp
ds
xchg
dec
ffreep
add
lock
in
sub
mov
inc
div
lret
mov
cmp
leave
mov
setnp
sub
and
repnz
arpl
into
fcmovne
xlat
sbb
mov
std
fstpt
pop
movsb
lea
lahf
xchg
psubq
mov
or
fisttps
pop
dec
mov
or
mov
outsb
push
inc
movsb
sbb
mov
push
xor
fwait
lods
fwait
inc
lret
cmp
fs
test
mov
stos
xchg
lds
adc
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
jno
add
add
add
add
add
xchg
add
test
add
mov
or
add
mov
add
ss
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
movsb
pop
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jnp
jp
stos
stos
lods
add
cmpsl
push
mov
mov
mov
ret
les
int
int
rcl
shr
rcl
shl
ror
shl
into
int3
int
leave
enter
leave
enter
mov
mov
stos
lods
lods
lea
fwait
cltd
and
jne
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
out
leave
leave
not
rcl
cld
xlat
fdivr
fcom
fcomp
xlat
aad
aad
ror
sar
int
int
aad
dec
iret
iret
inc
std
mov
mov
lods
iret
movsb
movsb
mov
dec
cs
and
add
push
add
add
add
add
add
add
add
add
lods
stos
lods
add
lods
scas
sbb
mov
jnp
mov
sar
mov
lret
lret
rcl
sar
aam
xlat
fdivr
fcom
call
dec
into
int3
dec
int
call
aad
dec
int3
int3
inc
rol
mov
mov
scas
std
cmpsl
cmpsl
test
xchg
xchg
xchg
mov
pop
pop
or
or
add
add
add
add
add
pop
add
add
add
add
add
add
push
push
pop
add
inc
add
pop
add
push
or
inc
or
sbb
push
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
dec
int
call
rcl
fcomp
call
xlat
fdivr
aad
aam
int3
int3
int3
dec
lret
lret
int3
int3
inc
mov
mov
mov
cmpsb
test
jmp
lcall
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
push
imul
pop
fs
sbb
sub
cmp
aaa
cmp
and
push
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
ret
enter
iret
sar
aad
aad
call
rcl
dec
leave
inc
mov
ret
ret
ret
mov
mov
lods
lods
lods
jmp
sahf
xchg
xchg
xchg
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jl
jge
jg
jb
jb
arpl
mov
cmp
cmp
inc
inc
inc
mov
outsb
outsb
outsb
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsb
movsb
movsl
add
mov
mov
mov
mov
mov
mov
mov
inc
enter
lret
lret
lret
enter
mov
mov
ljmp
mov
cltd
call
xchg
xchg
cwtl
cwtl
xchg
fwait
lcall
cmp
femms
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
outsb
add
pop
or
jl
xchg
mov
incb
jp
idivb
jp
outsl
outsl
outsb
out
addr16
jne
jae
jge
jge
jp
jp
fs
inc
inc
cmp
sbb
sbb
movups
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsb
lcall
nop
incl
addl
xchg
xchg
mov
mov
cwtl
mov
js
jns
xor
das
add
add
add
add
add
add
add
add
add
add
mov
pop
push
addl
in
mov
mov
addb
decb
xchg
loope
jno
enter
mov
addl
xchg
push
cmp
ss
push
jge
jle
lcall
shrb
lods
lods
sti
stos
lods
lods
stos
stos
lods
test
movsb
movsl
std
cltd
cltd
cltd
xchg
xchg
xchg
decl
jle
jns
jp
jp
jns
mov
cwtl
movsb
movsl
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
nop
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
cwtl
cwtl
stc
xchg
xchg
xchg
in
mov
enter
int
mov
push
pop
pop
push
or
inc
inc
dec
insl
insb
insl
jl
xchg
leave
lcall
out
lcall
std
mov
mov
xchg
mov
lea
lcall
lods
lods
mov
mov
mov
mov
mov
std
mov
mov
movsl
mov
jl
scas
cmpsl
lods
add
adc
test
mov
incl
xchg
decb
xchg
pushf
popf
sahf
std
movsb
movsb
movsb
stc
mov
xchg
xchg
in
nop
in
test
jne
femms
dec
add
add
or
inc
daa
sub
dec
dec
outsw
jo
test
xchg
xchg
rclb
xchg
xchg
std
lea
nop
call
sahf
lahf
jmp
lods
pushl
cmpsb
scas
mov
xchg
stos
std
mov
xchg
scas
mov
mov
ljmp
mov
add
pop
pop
adc
mov
jmp
pushf
cwtl
fwait
decl
mov
call
xchg
nop
xchg
xchg
xchg
popf
popf
pushf
movsl
movsl
mov
movsl
movsl
movsb
notl
jl
movsl
push
push
push
outsl
dec
dec
dec
pop
popa
bound
je
mov
lahf
test
mov
mov
xchg
testl
mov
jmp
lahf
pushl
insb
xchg
mov
dec
xchg
mov
sub
mov
movsb
mov
mov
mov
mov
movsb
movsb
add
pop
pop
adc
mov
jmp
mov
call
xchg
xchg
call
xchg
lcall
sahf
sahf
lahf
mov
movsl
mov
out
xchg
xchg
nop
xchg
xchg
les
lcall
xchg
cmc
mov
xchg
cld
xchg
adcb
fwait
imul
ljmp
jp
mov
je
mov
outsl
ljmp
adc
stos
or
ljmp
jg
mov
mov
stos
pushf
movsb
movsl
mov
add
mov
add
pop
adc
mov
lcall
nop
xchg
call
lcall
mov
popf
call
xchg
xchg
decl
xchg
xchg
call
fwait
cld
cwtl
xchg
sahf
stc
sahf
fwait
sahf
stc
lahf
xchg
pushf
cld
pushf
mov
xchg
imul
xchg
dec
js
cltd
jne,pt
cltd
sub
popf
push
imul
movsl
adc
ljmp
pcmpgtd
stos
pcmpgtw
scas
adc
mov
imul
mov
imul
aas
jg
rcrb
imull
movsl
sub
movsl
mov
add
add
add
mov
pop
pop
adc
mov
ljmp
pushf
call
pushf
popf
lcall
movsl
movsb
jmp
mov
decl
mov
xchg
xchg
js
lcall
xchg
dec
jnp
xchg
cmp
call
push
popa
call
or
call
add
cltd
add
lahf
add
push
pushl
pop
jo
mov
jo
mov
and
mov
and
aas
test
ret
xchg
scas
mov
scas
scas
mov
mov
movsb
mov
add
add
add
pop
pop
adc
lods
mov
shlb
lcall
mov
cmpsl
ljmp
test
cmpsb
lcall
mov
mov
decl
cmp
mov
arpl
mov
decl
or
addl
test
push
decl
add
xchg
add
xchg
add
cltd
add
sahf
add
test
popa
pushl
es
mov
sub
inc
sub
inc
sub
les
jg
xor
cs
leave
mov
cld
mov
mov
movsl
movsl
movsl
dec
mov
movsb
movsb
add
push
push
adc
test
ljmp
lahf
jmp
test
ljmp
stos
lods
pushl
lods
scas
jmp
jb
decl
push
pop
incl
or
addl
incl
add
mov
push
decl
push
call
pop
lcall
add
scas
adc
mov
ss
cmp
leave
cmp
dec
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
movsl
movsb
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
mov
lahf
lcall
lods
lods
scas
pushl
mov
pushl
mov
ljmp
mov
mov
push
decl
push
push
decl
or
test
push
decl
add
xchg
add
pushf
add
mov
add
lods
add
pushl
cmp
dec
inc
mov
roll
call
inc
mov
fmuls
call
dec
xchg
fisttpll
fistl
call
test
std
mov
mov
movsb
movsl
mov
or
add
add
add
add
dec
dec
adc
jnp
movsl
lahf
mov
lcall
test
pushl
mov
pushl
mov
mov
scas
mov
mov
outsl
decl
decl
adc
decl
push
decl
add
xchg
add
pushf
add
mov
add
test
popa
pushl
and
call
push
cltd
call
push
fwait
fistl
fistl
ficomps
ficomps
jmp
pop
lahf
jmp
pop
mov
fadds
mov
cmpsl
jne
mov
mov
add
add
add
inc
inc
adc
js
lahf
fwait
popf
jmp
sahf
cltd
sahf
ljmp
mov
mov
mov
mov
mov
mov
ljmp
inc
je
xchg
and
xchg
and
call
arpl
xchg
sbb
or
call
add
fwait
add
mov
add
stos
add
mov
gs
mov
xor
fisubs
fisubs
jmp
fs
in
cmpsb
call
push
ljmp
faddl
mov
cmpsl
cmpsb
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
adc
jp
xchg
cltd
call
lahf
fwait
popf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
lcall
lcall
pop
callw
add
cltd
add
mov
add
stos
add
mov
pushl
adc
roll
jmp
outsl
lods
jmp
jno
call
jb
jmp
mov
jmp
mov
out
je
out
je
in
jb
jmp
mov
mov
cmpsl
test
mov
sahf
sahf
add
jge
ds
outsl
js
mov
sahf
pushf
pushf
pushl
mov
mov
mov
mov
mov
cmpsb
scas
lcall
xor
mov
cmp
xor
cltd
push
call
call
add
movsb
add
test
pop
pushl
add
add
enter
fistl
jmp
jbe
call
jle
in
cmpl
push
xchg
push
cmpl
mov
mov
stos
test
sahf
pushf
popf
daa
lahf
mov
lahf
add
add
add
add
aaa
cmp
jne
jg
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
sarb
rol
pushl
outsb
mov
cltd
cmp
movsb
inc
jge
movsb
inc
jle
mov
pop
arpl
xchg
add
pushf
add
mov
add
lods
add
mov
fs
mov
add
shll
cmp
movsl
call
mov
lock
mov
push
xchg
ret
nop
xchg
clc
xchg
mov
out
nop
mov
inc
lods
stos
mov
popf
sahf
xor
pushf
popf
add
add
add
inc
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
mov
sar
ret
ret
mov
jge
lcall
dec
cmp
dec
test
movsl
xor
popa
lcall
add
add
stos
add
mov
fs
mov
add
leave
push
insb
fdivs
jmp
jns
in
xchg
ret
push
cltd
push
lcall
negb
lret
pushf
lret
cld
lahf
int
cld
lahf
int
cld
cwtl
lret
push
xchg
ret
fistpll
enter
mov
lahf
mov
nop
add
add
add
xor
outsb
push
dec
dec
jecxz
pop
popa
call
mov
mov
mov
sar
mov
sar
mov
ljmp
dec
mov
movsl
sub
fwait
push
pop
lcall
pop
ljmp
popa
mov
add
leave
add
rorb
fiadds
in
mov
push
cmpsb
int3
push
movsl
int
mull
sar
cli
cmpsb
into
cli
test
cld
stos
sar
cld
test
iret
push
lahf
mov
dec
enter
mov
into
sahf
lahf
sahf
dec
xchg
xchg
xchg
add
fwait
fwait
add
add
add
xor
sub
sub
inc
inc
inc
bound
push
xlat
je
jb
mov
mov
ret
mov
ret
vpaddd
leave
leave
inc
rol
mov
cmpsl
jmp
mov
scas
dec
xchg
sahf
sbb
lcall
add
lods
add
mov
mov
add
int
insl
call
add
ficoms
out
pop
test
negl
sar
cld
mov
cld
scas
aad
cli
scas
sar
mov
std
mov
cld
mov
std
mov
mov
mov
push
movsl
jmp
mov
call
lret
mov
mov
lahf
sahf
mov
or
add
add
xor
add
sbb
dec
outsb
outsb
outsb
mov
mov
aad
fsubr
xlat
test
into
into
dec
leave
lret
lret
leave
dec
lret
lret
leave
enter
lods
jmp
push
mov
lods
cmp
lcall
add
lods
add
mov
fs
mov
add
rolb
jo
fadds
jae
filds
jne
ljmp
sti
lods
aam
cld
mov
mov
fcos
cld
mov
fdivr
std
mov
xlat
std
rcr
mov
int
out
enter
int3
mov
mov
xchg
or
add
add
xor
add
add
pop
or
enter
loop
out
call
test
in
leave
fsub
fsubp
fcomi
fcomp
fdivr
aam
xlat
std
int
iret
mov
push
ljmp
sub
mov
add
mov
mov
add
lret
add
aam
jb
fldl
ja
jecxz
js
in
das
xchg
push
mov
cld
mov
loope
inc
loopne
inc
loopne
std
fdivrp
inc
loopne
dec
fdivrp
dec
dec
fdivrp
dec
dec
loopne
cli
mov
lret
leave
iret
mov
mov
xchg
adc
add
add
std
incb
std
std
add
std
incl
repnz
or
in
in
pop
in
out
in
sub
in
in
dec
call
call
jmp
aad
fcmovnu
jmp
mov
xchg
cmpsl
cmp
mov
add
stos
add
mov
fs
mov
add
into
add
fadds
je
filds
js
call
inc
pushf
cli
mov
loop
std
lret
dec
in
dec
jecxz
std
into
in
std
int
dec
loopne
call
in
dec
loop
shl
std
shl
cld
fdivr
in
mov
xlat
inc
cmpsl
cmpsl
mov
xchg
cwtl
add
add
add
incl
std
std
add
stc
clc
add
hlt
icebp
add
repnz
in
icebp
out
pop
out
repnz
cmp
out
in
pop
loopne
loope
lds
sti
lahf
es
movsl
add
stos
add
mov
fs
add
leave
add
roll
jno
fildl
jne
in
jp
in
adc
negl
cld
mov
shl
dec
jecxz
call
call
std
shl
aad
call
out
jmp
fucompp
cld
shl
push
aad
in
lret
repz
xchg
xchg
and
xchg
xchg
add
std
cli
add
std
stc
add
cld
stc
add
div
or
aam
xor
mov
xchg
negb
add
test
pop
ljmp
add
ret
add
lret
add
roll
jb
faddl
ja
call
sbb
cld
loopne
cld
fld1
fldl2t
fucomi
fucompp
std
fucomi
fsubr
fsubr
fsubr
fsubrp
std
fsubrp
jmp
jmp
cld
aam
push
ret
aad
out
fdivr
rcl
sar
stos
stos
stos
lods
xchg
xchg
xchg
outsl
outsb
jo
xchg
xchg
xchg
add
loop
add
mov
xchg
lods
jnp
repnz
pop
lcallw
add
mov
mov
add
int3
add
add
loopne
jne
call
sub
shr
fsubrp
std
fucomi
std
call
call
cld
shl
cli
iret
loopne
cli
iret
loopne
clc
iret
test
in
mov
call
fdivr
mov
mov
cltd
fwait
fwait
cmp
fwait
cltd
add
add
mov
subb
insb
lcall
add
mov
arpl
mov
add
rolb
outsl
call
add
loope
jp
ljmp
cld
xchg
sti
leave
cld
int3
loope
cld
stc
rcr
idivl
sar
icebp
mov
iret
in
mov
lret
jmp
ret
jmp
ljmp
in
mov
mov
xchg
add
add
add
into
int3
add
rol
mov
cmpsb
loopne
xor
jmp
add
mov
data16
mov
add
dec
push
jb
rorl
jbe
fistl
ja
loopne
cmp
dec
cwtl
jmp
scas
lret
call
mov
std
loope
mov
cli
lock
int3
in
enter
rcl
shl
fcmovb
out
loop
in
out
test
in
out
popf
jmp
lret
stos
lods
lods
adc
cmpsl
cmpsb
cmpsl
add
ret
mov
ret
rcrl
lods
aam
dec
cmp
sbb
cmpsb
sbb
jno
mov
jns
mov
inc
test
ret
stc
leave
arpl
hlt
rorb
mov
mov
leave
lret
int
ror
int
aam
shlb
xlat
aam
jg
fcmovnu
jb
loopne
gs
in
call
out
in
xor
div
cmc
and
repnz
sbb
or
mov
into
add
add
add
rolb
roll
mov
test
imul
mov
fwait
in
lea
sarb
mov
ret
mov
cmpsl
enter
leave
ret
mov
leave
int
iret
int
addr16
iret
push
iret
rcl
dec
aam
xlat
inc
aam
aad
aad
xlat
daa
xlat
fcmovnu
sbb
adc
in
push
in
call
lock
add
sti
testb
sti
add
incl
incl
mov
mov
shrb
mov
mov
mov
mov
mov
mov
mov
mov
ret
lds
mov
daa
lret
rcl
and
aam
rcl
aam
iret
aad
or
push
aam
add
fcmovnu
add
add
jecxz
add
in
jmp
add
std
add
mov
add
rol
ret
sub
mov
mov
push
ret
or
enter
enter
lret
aad
add
aam
aam
aad
xlat
add
add
fabs
add
aam
add
loop
add
fsubp
add
out
add
lock
std
incl
std
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
les
ret
les
mov
mov
ja
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
mov
aam
into
into
jmp
aam
cmc
rcl
sar
iret
into
into
cli
int
int3
stc
int3
lret
lret
hlt
mov
mov
iret
lods
lods
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
cmpl
add
push
push
add
add
add
add
add
add
add
add
add
mov
mov
mov
cld
rcl
into
aad
call
xlat
call
iret
iret
dec
into
into
dec
int3
lret
mov
mov
icebp
cltd
cwtl
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
je
je
jne
fs
dec
dec
dec
cmp
sub
sub
aaa
aaa
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
lret
int3
call
rcl
call
aam
dec
int3
int3
inc
mov
rol
pushl
stos
test
cwtl
xchg
xchg
jmp
jno
xchg
pop
push
adc
xor
add
add
add
add
cmpb
jl
jp
addl
aam
imul
push
push
push
stos
push
outsb
outsb
push
pop
pop
cmp
cmp
pop
outsl
outsl
outsl
adc
mov
mov
ret
mov
mov
jmp
pushf
lcall
xchg
xchg
fwait
fwait
lcall
dec
dec
dec
adc
adc
add
add
add
add
add
pop
fwait
fwait
fwait
add
popf
xchg
lcall
addb
jnp
jge
js
js
jns
jnp
jns
jns
jae
jb
push
push
push
cmp
jae
pushf
pushf
pushf
mov
scas
lods
repz
scas
lods
sti
scas
scas
scas
std
cmpsl
test
pushf
call
test
call
mov
lods
jmp
scas
lods
leave
movsb
cmpsb
cmpsb
cltd
jb
jae
adc
adc
add
add
add
add
insl
insl
insl
pop
lods
movsb
stos
loop
lcall
mov
nop
sti
xchg
xchg
xchg
lock
xchg
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
outsl
orl
cwtl
repnz
xchg
xchg
std
mov
call
pushf
lahf
ljmp
stos
scas
std
mov
scas
mov
xlat
cmpsb
movsb
cmpsb
pop
jg
jg
pop
pop
popa
or
scas
mov
movsl
lahf
movsb
decl
lea
lcall
sahf
mov
negl
jle
stos
push
push
push
jo
pop
pop
outsl
insl
outsl
outsb
xchg
subb
xchg
lock
lcall
mov
pushl
pop
mov
jge
mov
lods
lods
insl
stos
stos
stos
or
add
add
add
add
pop
or
mov
in
mov
xchg
call
xchg
xchg
lcall
lcall
popf
lahf
sahf
cli
xchg
xchg
xchg
jmp
xchg
xchg
aam
lea
out
xchg
jne
notb
pop
jg
pushf
dec
jl
movsb
inc
jp
lods
aaa
js
mov
jae
scas
push
insl
pushl
sbb
pop
mov
mov
mov
jle
movsl
movsl
push
pusha
pop
pop
or
mov
in
mov
xchg
lcall
mov
mov
decl
addl
cld
xchg
pusha
cmp
dec
jp
cmp
xchg
sub
xchg
sbb
cltd
punpcklwd
lahf
push
pusha
jmp
sbb
sbb
mov
jo
mov
and
rcrb
mov
scas
lods
xchg
popf
lahf
sahf
adc
add
add
popa
popa
popa
or
stos
mov
test
mov
cmpsb
ljmp
test
lcall
pop
jnp
mov
imul
sub
mov
pop
incl
or
mov
decl
add
popf
add
or
jae
mov
sub
jge
enter
leave
xor
xchg
inc
test
divl
test
add
add
add
pop
popa
popa
or
movsb
test
ljmp
scas
scas
pushl
mov
jmp
inc
jb
mov
pop
decl
or
add
push
decl
add
mov
add
mov
insl
inc
aaa
test
lret
inc
mov
rolb
call
inc
nop
call
inc
xchg
fmuls
call
popa
sahf
inc
cmpsl
mov
mov
mov
incl
add
add
pop
pop
popa
or
mov
ljmp
mov
mov
mov
mov
mov
lcall
pop
call
pop
pop
decl
add
xchg
add
sahf
add
cmpsb
add
lods
add
mov
dec
nop
call
push
pushf
fistpl
fistps
loop
mov
fildll
dec
test
cld
mov
mov
cmpsb
stos
cmpsl
xor
add
add
dec
pop
jl
jp
fwait
xchg
cltd
jecxz
lahf
mov
pushl
mov
mov
lcall
sub
lcall
and
xchg
adc
add
popf
add
add
scas
add
mov
xor
jecxz
stos
jmp
outsl
stos
ljmp
in
jb
jmp
cmpsl
mov
shrl
jg
add
add
add
dec
pop
outsl
outsb
push
mov
cwtl
pushl
mov
mov
mov
jbe
lcall
cmp
pushf
sub
lcall
add
mov
add
mov
gs
or
xchg
jmp
jns
ljmp
push
test
push
xchg
fisubrl
mov
push
cltd
fwait
lcall
sub
push
push
push
dec
pop
imul
mov
mov
mov
mov
ret
mov
sahf
jmp
inc
cmp
sub
lcall
ljmp
add
add
int
ja
fbld
in
pop
push
xchg
ret
push
cltd
cltd
push
cltd
leave
stc
lcall
loope
inc
mov
stos
popa
mov
add
add
xor
add
pop
pop
pop
fisttpl
mov
mov
rol
ret
mov
test
cmpsl
pop
xchg
stos
dec
cmp
and
add
add
mov
mov
add
and
push
mov
sar
clc
stos
into
sti
test
sar
std
stos
sar
sti
cmpsl
int
call
mov
stos
jne
sahf
sahf
or
add
add
dec
dec
dec
aaa
jb
je
stos
stos
stos
ror
int3
int
lret
cmc
leave
lret
lret
std
enter
mov
popa
ljmp
adc
add
mov
gs
add
into
add
fiaddl
jmp
xchg
cld
mov
mov
cld
mov
fdivr
cld
mov
fcos
sti
mov
enter
scas
lods
mov
add
add
add
add
pop
or
aad
dec
loope
loop
loope
ffree
fcmovnu
aad
out
shll
test
push
popa
pushl
add
lret
call
add
or
push
mov
cld
ret
loopne
std
loope
inc
loope
std
leave
loopne
dec
loopne
dec
loope
std
out
mov
lret
mov
xchg
pushf
pushf
sahf
sbb
add
add
std
incl
std
incb
jmp
in
sbb
in
in
xor
loop
jecxz
les
mov
mov
add
mov
arpl
rolb
dec
add
fldl
jbe
jmp
outsb
mov
cld
cld
shl
call
in
call
out
shl
call
out
std
call
push
fcos
fcmovne
sar
mov
mov
and
add
add
std
add
incb
std
std
pop
aad
aam
mov
pop
xchg
popf
or
pop
pushl
add
rolb
outsl
jmp
add
out
and
std
shl
std
fsubr
fsubr
xlat
jmp
std
fsubr
cld
sti
shl
push
enter
iret
aad
mov
popf
popf
das
add
add
into
int
or
fs
mov
add
mov
add
aam
jb
loopne
ja
in
xor
sti
int3
loopne
stc
lret
test
repz
aad
bnd
out
aam
in
aam
out
aad
in
shl
in
fsubrp
mov
test
incl
aad
push
mov
je
or
mov
insb
inc
pop
jb
int3
and
aad
xchg
loopne
fwait
clc
loop
mov
out
loop
leave
jmp
fdivrl
leave
sarl
in
ficompl
in
jmp
rorb
mov
add
stos
lods
stos
add
xchg
movsl
les
push
xchg
mov
fidivrl
jg
rol
lods
mov
lahf
mov
shlb
leave
jge
lret
insl
aam
iret
pop
ror
iret
dec
fnstcw
loopne
fildll
jecxz
fisubs
in
repnz
jmp
or
std
add
add
add
incl
mov
mov
outsb
mov
lods
jns
mov
mov
mov
mov
xor
leave
enter
rcl
pop
mov
rcl
or
loope
or
int3
int
stos
stos
lods
add
std
add
std
add
add
add
into
into
pextrw
or
int
int
lods
stos
stos
add
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
lcall
rol
enter
leave
leave
mov
ret
mov
mov
mov
stos
stos
lods
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
lods
stos
lods
add
mov
jmp
aad
aad
rcl
sar
into
into
into
std
vshufpd
mov
cmpsl
sarl
gs
pop
push
add
add
add
add
add
add
add
add
jno
jb
data16
dec
dec
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
into
int3
call
aad
dec
int
dec
mov
ljmp
lahf
mov
mov
add
add
add
add
jae
jae
xchg
adc
outsb
outsb
ret
arpl
outsb
outsl
outsb
jb
popa
popa
cmp
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
xchg
xchg
lds
jae
es
and
pop
add
add
jb
jb
popf
xchg
pushf
mov
test
xchg
xchg
test
test
push
push
push
push
inc
mov
popf
into
movsb
mov
mov
decb
lcall
lods
cld
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
adcb
mov
cmpsb
cld
mov
mov
xchg
xchg
xchg
cld
pushf
popf
pushf
cmc
cwtl
cwtl
cltd
in
addl
imul
jg
xchg
aam
mov
pushf
mov
mov
lcall
jo
mov
scas
scas
push
lods
lods
stos
add
add
add
scas
test
xchg
xchg
xchg
call
cltd
lcall
cltd
cltd
std
xchg
xchg
xchg
out
xchg
mov
loope
jne
out
xchg
fs
push
jnp
pushf
inc
ja
cmpsl
aaa
jbe
lods
sub
mov
outsl
pushl
ss
mov
mov
imul
into
add
test
pop
lods
cmpsb
stos
test
popf
sahf
lahf
jmp
movsb
movsl
call
jge
mov
xchg
inc
jae
mov
push
mov
pop
lcall
or
ljmp
and
mov
daa
jp
lds
inc
cltd
mov
mov
scas
subl
jne
push
movsb
fwait
mov
cld
test
mov
ljmp
mov
decl
or
xchg
push
decl
add
mov
adc
shlb
dec
ds
roll
call
inc
call
dec
xchg
dec
cwtl
mov
mov
mov
mov
add
add
push
cwtl
xchg
xchg
test
lahf
mov
pushl
mov
movsl
call
push
decl
or
xchg
add
mov
add
mov
push
xchg
fistpl
jmp
pop
mov
jmp
cmpsb
call
lcall
test
cmpsl
pop
add
add
arpl
adc
popf
fwait
pushf
cld
mov
scas
mov
mov
scas
lcall
jno
lcall
lcall
add
mov
xor
call
jnp
out
jle
push
jle
ficompl
mov
and
add
add
dec
adc
push
cmp
mov
rol
mov
bound
jmp
add
pop
pushl
or
fmull
in
mov
push
xchg
xchg
leave
push
xchg
jmp
cmpsb
mov
movsb
sub
inc
inc
aas
adc
push
xchg
xchg
cld
ret
inc
inc
mov
xchg
ljmp
sbb
cmpsb
add
mov
fs
add
adc
in
insb
scas
push
cmpsl
int
stc
lods
iret
cld
lods
sar
cld
scas
sar
lods
iret
in
scas
enter
mov
ds
std
add
xor
add
scas
mov
mov
aad
mov
aad
rcl
shr
lret
enter
xchg
jmp
inc
add
aam
jb
out
xchg
clc
nop
mov
fdivr
cld
ret
cld
rcr
cld
ret
icebp
mov
shl
test
dec
jg
addb
add
add
in
in
or
jmp
out
outsb
fcomp
fldenv
mov
add
mov
add
fiadds
ja
lock
dec
in
shl
call
in
std
aam
shl
push
enter
int
lods
scas
scas
popa
addb
add
std
std
add
incl
lret
lret
shrb
mov
add
mov
add
jecxz
jns
cmc
push
movsl
std
loopne
out
out
cld
aad
sti
aad
sti
aam
push
leave
xlat
fmul
shl
mov
mov
xchg
xchg
xchg
pop
mov
mov
cld
lods
add
mov
or
jg
ljmp
cli
out
mov
shl
call
shl
out
aam
ljmp
scas
lcall
add
rol
mov
lods
xchg
and
shll
jbe
mov
xlat
mov
lret
vmovdqa
int
pop
xlat
dec
in
loope
out
out
out
out
in
sbb
rol
add
mov
scas
arpl
lods
mov
ret
cs
mov
int
fisttps
int
int3
or
aad
push
std
incb
jg
addl
stos
std
incl
rol
add
incl
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
rcrl
aad
dec
scas
xor
mov
ss
mov
hlt
call
daa
in
mov
sub
gs
hlt
push
enter
test
cmc
xlat
mov
push
add
stos
shll
ds
push
dec
aad
add
push
pop
push
sbb
jne
insb
add
lods
adc
push
cltd
dec
sbb
adc
push
jl
pop
fs
mov
xchg
lcall
sahf
sbb
and
jbe
jp
orl
mov
jge
repnz
xchg
dec
adc
cmp
lods
mov
call
inc
mov
pop
push
pop
mov
scas
mov
stos
push
cld
pop
push
repnz
enter
add
sbb
into
dec
push
jbe
pop
ss
je
and
mov
loopne
xchg
lds
loopne
scas
push
test
adc
adc
sbb
and
or
sbb
add
pop
loope
cmpsl
jp
or
adc
popa
inc
or
inc
push
lcall
sti
dec
add
sbb
enter
popl
jbe
in
cs
clc
add
movsl
mov
fdivrs
mov
clc
inc
iret
out
inc
arpl
push
and
rcrl
imul
leave
sub
dec
into
xchg
inc
jns
adc
and
das
addr16
shrl
fwait
les
pusha
push
arpl
das
sub
and
jae
add
or
sbb
ja
ficompl
imul
sub
adc
sbb
hlt
cmpsl
jge
push
inc
mov
mov
dec
ljmp
and
scas
dec
loop
ss
add
sub
add
call
and
fiadds
inc
inc
sub
cld
xor
xchg
sbb
out
lods
jp
pop
divb
xchg
cmp
or
addb
inc
inc
adc
out
pushf
xor
push
add
sub
jg
pop
xor
movsb
mov
dec
in
mov
cmp
lret
cmp
mov
sbb
stc
push
outsb
adc
jbe
js
add
cld
popa
out
imul
stos
cmp
pushf
xchg
sbb
and
inc
mov
rorl
adc
dec
lods
jns
cmpl
cmpsl
lds
daa
xchg
adc
push
cmc
xor
mov
add
negl
popf
push
push
add
jl
decb
push
out
stc
repz
sarl
push
inc
scas
xor
lret
fwait
dec
sarl
or
xchg
dec
add
sbb
fnstcw
dec
add
mov
cmpsl
mov
xchg
pop
sbb
jmp
test
xchg
into
cltd
test
xlat
lret
out
mov
jb
repnz
xor
mov
adc
mov
or
fcoms
popa
xchg
scas
sti
adc
xorb
dec
xchg
sti
pop
mov
jecxz
in
enter
loopne
lock
aaa
pop
insb
out
mov
cltd
jmp
pop
mov
dec
movsl
testl
xor
mov
inc
test
sbb
xor
repz
in
dec
daa
outsb
pop
cmpsl
push
sub
stc
and
addr16
ds
mov
leave
mov
xchg
xchg
push
and
lds
pop
enter
cmp
mov
jl
add
iret
xchg
xchg
in
xor
fldcw
loopne
pop
xor
je
adc
leave
ja
orl
dec
cld
and
and
jle
andl
and
cmpl
mov
stos
lods
push
aad
test
mov
mov
jp
lds
arpl
ret
sbb
hlt
mov
xchg
xor
subb
push
mov
push
lock
decb
js
cmp
jo
jo
push
hlt
les
dec
xor
cli
fnstenv
std
pop
and
lea
cmp
test
test
and
sahf
imul
test
mov
stos
push
pushl
out
divl
insb
imul
arpl
pop
ljmp
cmp
mov
cld
push
loop
insb
outsb
jno
lock
or
inc
lea
pop
cwtl
fsubrp
jne
lret
mov
test
add
inc
dec
adc
pop
stos
dec
pop
push
push
insl
orl
in
insb
xchg
pop
mov
mov
mov
pop
lret
push
stos
xor
lret
std
arpl
frndint
fs
push
xchg
notl
add
mov
xchg
mov
mov
cld
mov
and
lock
push
pushf
pusha
and
out
ds
inc
loopne
icebp
inc
js
cmp
ret
mov
mov
mov
push
outsl
enter
xchg
lahf
insb
xchg
pop
aaa
imul
nop
fsubrl
jmp
shll
vcvttsd2si
pop
push
add
lahf
and
cmc
pop
pop
sti
iret
mov
add
ds
sbb
aas
pop
lcall
inc
and
insl
jnp
xor
and
test
mov
test
xchg
shr
xchg
sub
cs
in
lret
xchg
sub
xor
jae
mov
les
sarb
mov
push
es
fists
stc
ljmp
or
mov
inc
jno
popa
arpl
pop
lock
cmp
out
mov
mov
mov
push
rolb
cwtl
les
sub
mov
fidivl
adc
jbe
cmp
imul
push
fistps
cmpsl
ds
ds
or
and
call
push
sbb
lods
jb
push
add
mov
push
out
sahf
mov
sbb
adc
pop
test
lds
js
pop
push
in
out
cmp
lods
pop
movsb
bound
cwtl
push
gs
sub
mov
inc
jmp
or
dec
sbb
dec
insl
cli
xchg
lahf
push
add
mov
out
adc
into
inc
adc
in
xchg
arpl
pop
xchg
mov
out
aad
pop
and
inc
loope
lcall
sub
pop
cmc
sbb
ds
cmp
sub
adc
stos
xor
sub
push
cmp
mov
xchg
add
xchg
adc
xor
loope
es
mov
push
in
fcmovb
rclb
pop
scas
sub
fbstp
dec
xor
xchg
cwtl
lahf
push
ljmp
jno
and
sarl
pop
pop
out
xchg
lods
inc
leave
mov
or
sbb
xchg
sub
cmp
mov
mov
shrl
loop
mov
xor
or
clc
mov
fnstcw
or
dec
loopne
sub
addr16
jns
mov
sbb
rcr
jo
out
mov
lahf
or
dec
dec
xor
call
pop
inc
or
mov
push
clc
leave
int
rcrb
fisttpll
or
in
pop
scas
std
cltd
or
xor
movsb
and
push
cld
cmp
cmp
pusha
sub
fcmovnbe
jg
jns
dec
stos
jmp
outsb
or
sti
repnz
std
cltd
shrl
mov
push
cli
in
test
mov
fnstsw
ljmp
xlat
fidivrl
add
pusha
imull
leave
jle
sti
out
cmpsb
cmp
dec
inc
les
jo
push
mov
ret
fnstenv
call
clc
mov
push
lods
fwait
mov
mov
ficomps
rcpps
inc
xor
bound
or
mov
es
mov
or
scas
inc
cmp
shrb
pop
int3
arpl
scas
ljmp
add
mov
push
push
daa
mov
movsb
cmpsb
inc
rorl
xchg
mov
fwait
insb
mov
out
mov
pop
sahf
inc
adc
bound
js
push
lock
pop
addr16
sub
mov
imul
sbb
push
mov
icebp
mov
dec
fbstp
or
out
xchg
mov
pop
out
push
cmpsb
mov
loopne
add
imul
in
adcl
loop
push
push
and
xor
iret
data16
push
sub
inc
mov
nop
daa
push
test
scas
lds
sahf
imul
aam
xor
scas
bound
pop
mov
jbe
ds
rclb
shlb
inc
outsl
push
xor
mov
ret
push
lds
mov
pushf
push
mov
push
insb
adc
loopne
incl
add
cmp
add
push
sbb
je
in
inc
inc
fdivs
mov
mov
pop
test
subl
pop
daa
jbe
push
jge
add
push
xchg
and
jmp
lea
mov
ret
es
sbbb
inc
jmp
pop
imul
push
dec
insl
push
out
pop
lock
xor
sbbb
call
dec
in
lcall
pop
insl
aaa
into
xchg
cmp
enter
add
sub
int3
fnstenv
repnz
jecxz
addr16
add
aaa
jbe
in
test
xor
xchg
fwait
cmc
jne
xor
dec
out
push
testl
push
xchg
cmpsb
shlb
push
mov
push
cmp
jns
mov
xor
inc
scas
shrl
jmp
xchg
xor
push
data16
inc
xchg
push
xor
int
stos
inc
insl
imul
xchg
mov
cltd
pushl
xchg
xchg
or
dec
mov
outsb
and
testl
cli
pop
sbb
mov
pop
lds
push
outsl
sbb
shrb
xlat
ss
and
xchg
xchg
jo
mov
into
gs
pop
pop
jg
lds
cltd
xor
movsl
cmp
fst
outsb
add
scas
cltd
xor
adc
hlt
jnp
fisubl
dec
int
sbb
push
out
insb
cmp
inc
into
je
shr
mov
aam
into
gs
mov
call
or
pop
jnp
inc
fstps
ss
jo
mov
out
ret
mov
sbb
sti
cmpsb
dec
out
call
fnsave
rclb
push
ljmp
stos
inc
dec
mov
adc
sub
fdivl
ret
test
lock
fmuls
lahf
leave
add
fdivl
and
push
std
icebp
mov
pushl
int
adc
leave
push
mov
xchg
dec
loope
fnsave
sub
mov
fsubrl
fs
inc
xlat
ret
pop
push
add
pop
aam
stc
push
xorb
cltd
pop
mov
sub
inc
fnstcw
pop
jmp
and
jb
dec
fs
mov
idivl
das
lods
sbb
mov
sbb
jbe
sbb
dec
in
cmp
xchg
sub
roll
ret
and
in
add
mov
cs
or
mov
pop
mov
mov
fnstenv
cs
mov
ret
mov
or
lods
mov
xor
mov
leave
sti
scas
inc
in
arpl
push
push
mov
cld
addr16
adc
nop
daa
cmp
xor
add
fwait
xor
fldt
mov
push
or
mov
jl
jb
push
movsl
scas
xchg
nop
daa
add
es
xchg
push
ret
pop
imul
mov
cmp
fdivl
pop
jbe
push
mov
clc
arpl
scas
inc
imulb
gs
push
jmp
pop
std
xchg
inc
test
pop
repnz
xor
lods
jae
shrb
fbstp
loopne
lret
pop
cmc
inc
repnz
sbb
mov
in
xchg
dec
loopne
insb
fsubrs
sub
fwait
aaa
adc
sub
dec
fbstp
rcll
scas
cmc
popa
xchg
sub
fnsave
out
test
jmp
xchg
xchg
pusha
stc
cmp
shlb
inc
mov
jo
inc
lods
jle
pop
out
into
sbb
push
xor
jnp
inc
jp
imul
jp
int
sbb
mov
std
or
jge
push
movsl
cmp
in
jecxz
mov
repz
mov
sub
xchg
inc
pop
scas
inc
js
ljmp
jge
lods
outsb
add
arpl
fidivs
xlat
pop
add
stos
mov
add
nop
stos
inc
into
dec
les
rclb
in
test
data16
jbe
xchg
dec
orl
push
xchg
jge
or
mov
sbb
pop
icebp
lods
imul
shlb
call
in
mov
adc
cld
xchg
out
out
pop
aaa
into
js
mov
movsl
cltd
movsb
cmp
push
fwait
xor
ss
pusha
fs
mov
jle
cmc
ds
mov
push
aad
jnp
jns
stos
push
jb
in
mov
scas
cld
popf
xor
lret
fisttps
scas
pop
scas
and
pop
movsl
inc
sbb
adcb
inc
xor
gs
repnz
ljmp
push
mov
xchg
xchg
repnz
dec
pusha
idivl
cmpsl
and
and
xor
push
jmp
inc
call
jnp
pop
mov
sarl
pop
repz
or
nop
ljmp
and
lcall
nop
loopne
loop
jb
dec
xchg
xchg
pop
movd
outsl
mov
ret
pop
add
fidivl
addr16
loope
mov
add
and
cmpsl
pop
dec
stos
inc
cmp
pop
cmc
adc
mov
fisubrl
dec
popa
push
cmp
hlt
and
pop
adc
out
test
test
pop
sbb
shlb
popa
sbb
mov
loopne
mov
xor
pusha
in
aam
imul
xchg
lahf
or
es
popf
int3
or
adc
outsb
add
inc
outsl
in
scas
fs
push
pop
lcall
aaa
aam
jno
std
xchg
cld
push
outsl
push
inc
sbb
and
mov
or
ss
fnsave
xchg
cs
push
repz
cltd
jno
out
xchg
sbbl
stc
nop
shl
cmp
adc
hlt
mov
mov
cmpsl
xor
test
out
and
jb
imulb
add
ss
xchg
loopne
and
insl
fidivs
inc
das
testl
daa
push
mov
fdivrl
stos
xchg
xor
mov
inc
insl
jno
push
addr16
jae
jg
push
mov
push
xchg
sub
mov
push
outsl
std
xchg
xor
stos
inc
jb
ja
pop
xchg
mov
dec
pop
xor
sub
sub
cmp
mov
insl
pop
mov
mov
mov
mov
insb
or
cmp
lods
sbb
sbb
pushf
ret
hlt
mov
mov
daa
add
pop
mov
fnstsw
movsb
or
divl
testl
sub
fcoml
pop
dec
mov
mov
mov
inc
add
daa
fsubrs
inc
cli
xchg
jbe
icebp
mov
gs
dec
sarb
mov
mov
in
inc
in
cmp
add
loopne
enter
sub
cmp
sbb
shlb
imul
dec
loope
mov
mov
int3
lcall
fcomps
fcmovbe
push
add
mov
xor
iret
shll
adc
ss
inc
mov
add
std
cmp
mov
mov
test
mov
data16
mov
ret
and
out
push
mov
pop
fwait
xor
ret
repz
lahf
mov
clc
inc
lods
mov
push
jl
fsubrs
inc
shll
int3
xor
mov
jb
pop
fs
xor
inc
sti
cmpl
adc
inc
jecxz
or
mov
mov
fldcw
out
xchg
jno
iret
push
popf
rorb
cmp
lods
mov
pop
rcrb
imul
dec
out
mov
dec
in
mov
cs
jns
out
outsb
push
jno
xchg
sub
inc
push
adc
mov
jb
orb
test
or
pop
aaa
cmpsl
das
cmp
testb
push
push
xchg
cmp
pushf
sub
pop
lods
ljmp
and
push
movsb
rcrb
cmpl
mov
push
push
cmp
pop
lea
fidivl
cmp
scas
push
mov
into
stc
inc
mov
jg
pop
add
adc
push
clc
sub
out
leave
push
ror
js
jmp
mov
add
test
fnsave
mov
loop
cmpsb
cmp
mov
ret
fadds
imul
inc
incb
push
push
inc
sub
push
xchg
mov
arpl
mov
imul
ficoml
pop
stos
push
imul
ret
ljmp
push
in
xchg
xchg
fwait
xor
ja
mov
lcall
push
call
mov
ret
enter
addr16
pop
repnz
movsb
es
loop
call
dec
cli
xchg
inc
push
mov
mov
int3
divl
in
lea
call
popf
xor
cmp
cwtl
jp
fdivl
fwait
gs
das
push
cmpsb
cmp
jo
loop
or
xchg
sub
mov
arpl
cs
sub
cmp
imul
test
xor
sub
mov
dec
lods
cs
test
sbb
rclb
test
sbbl
dec
mov
fcmovb
pop
jmp
or
jnp
sbb
lcall
add
inc
sub
xchg
pop
popa
xchg
sub
and
inc
fdivrl
shrb
ror
pusha
ret
adc
leave
test
mov
icebp
pop
icebp
loope
es
pop
xchg
sub
in
in
cmpsl
jns
aad
imul
rcrl
arpl
cmpb
sub
dec
xchg
add
jbe
ret
rcrl
fidivl
add
addr16
cmp
pushl
jge
inc
cltd
sahf
xor
xchg
xor
push
cmpsb
das
add
cmpsb
dec
gs
inc
sub
bound
and
test
inc
lds
insb
add
mov
cmp
rcll
xchg
mov
pop
repz
adcb
push
ja
inc
out
stos
fsubrs
mov
dec
out
pop
out
add
repz
in
clc
fists
stc
test
or
loope
cs
js
or
iret
sub
cmp
movsl
je
cmp
in
xchg
in
test
push
xchg
sub
adc
cmc
cmc
ret
pop
out
ss
dec
dec
filds
xlat
outsb
int
lds
shrb
pusha
jl
push
test
call
mov
bound
leave
xchg
popf
clc
push
fdivl
and
loopne
or
nop
daa
bound
out
dec
and
jg
popa
mov
inc
faddp
inc
faddl
dec
stos
shll
sub
xor
rcrl
add
imul
aam
pop
repnz
mov
pop
pop
and
scas
out
fldcw
aaa
into
cltd
rclb
je
in
xorl
push
outsl
popl
decb
mov
fcoml
jmp
sub
cmp
aam
inc
or
adc
cmpb
xchg
fisttpl
adc
mov
cld
outsl
push
cs
lret
bound
or
pop
popf
xchg
fwait
xor
mov
int
mov
rclb
mov
out
scas
inc
push
or
mov
das
int3
arpl
mov
in
andl
int
dec
inc
or
cmp
dec
jecxz
pop
shrl
gs
mov
ja
mov
pop
div
jno
or
or
andl
push
lret
sbb
daa
push
dec
in
dec
xor
outsl
jns
stos
stos
nop
push
call
lock
lahf
jb
sbb
inc
xchg
es
inc
inc
gs
pop
popa
pop
cmc
inc
jle
mov
popa
push
movsl
xchg
pop
ds
mov
in
jle
mov
jp
push
out
sahf
fwait
dec
fistps
adc
addl
aaa
into
rol
and
shl
sub
lret
repz
in
int3
in
sub
mov
fildll
jmp
pop
lock
aaa
into
lcall
aam
fldl
iret
lahf
pop
lock
cmp
roll
push
hlt
xor
and
inc
inc
fstl
int3
arpl
jp
dec
test
das
dec
xlat
shlb
outsb
pop
cmp
nop
daa
popf
pop
mov
imul
dec
mov
loopne
pop
enter
sbb
pop
mov
fidivrs
add
stos
inc
ja
fwait
xor
mov
jne
xor
and
pop
testl
mov
fbld
in
mov
and
jb
arpl
ficoml
or
pop
dec
dec
in
jle
adc
mov
sahf
mov
mov
cmp
call
or
cmp
jae
pop
js
fs
pop
testb
push
mov
insb
add
mov
mov
mov
ret
mov
mov
es
lds
fnsave
mov
and
in
aas
mov
fldenv
cmp
or
push
push
fbstp
ret
and
inc
lahf
ss
movsl
cmp
xor
js
je
daa
push
lock
add
pop
pop
mov
es
ficoml
sub
add
dec
lods
mov
and
xor
loope
clc
into
lcall
imul
sub
je
mov
mov
repz
fldl2t
orb
imul
int
sti
xchg
and
xor
sbbl
jbe
mov
mov
jg
popf
mov
in
test
hlt
sbb
push
jno
xchg
cmpsl
push
push
scas
mov
jle
sub
mov
notb
mov
add
in
xor
xor
dec
out
pop
sbb
sbb
inc
fcmovne
popa
lret
pop
fwait
xor
xor
std
repnz
out
jnp
outsb
imul
fwait
mov
addl
in
cmpsb
cmp
xchg
fdivl
jo
hlt
bound
or
xchg
mov
hlt
mov
adc
aam
addr16
lods
cmc
ds
int
hlt
daa
or
mov
aaa
xchg
jno
or
fcoms
mov
add
ss
inc
cmpsb
inc
jnp
cmp
das
lods
cmpsl
insl
add
or
lret
adc
rcr
jnp
out
lds
out
xchg
mov
mov
test
lret
sti
notb
push
dec
dec
scas
inc
jnp
movsb
cmp
ret
mov
mov
in
test
pushf
pop
testb
testb
push
and
movsb
pusha
ss
pop
fbstp
ljmp
in
and
aaa
into
pushf
sahf
push
in
test
or
inc
add
mov
into
gs
xlat
inc
test
jbe
in
and
xchg
xchg
push
inc
repz
cltd
out
sub
arpl
lret
sbb
lcall
push
in
and
mov
int
mov
or
inc
je,pn
pusha
mov
push
int
addb
xchg
icebp
rorl
in
js
push
pop
in
cmp
push
andb
fcoml
roll
xor
xchg
aas
ret
cltd
es
or
das
xchg
cwtl
fnsave
fldenv
pushf
xchg
cli
jbe
fprem
pop
out
sub
adc
fldenv
xor
fnstsw
adc
pop
sarl
leave
sub
mov
ljmp
rcl
jns
xorl
test
inc
inc
ret
pop
xchg
push
and
sub
pop
add
xchg
cmp
and
addb
jo
mov
lcall
subl
pusha
mov
std
aam
movb
jb
mov
ja
mov
inc
sub
push
repnz
lock
leave
into
gs
sub
adc
ljmp
jnp
gs
nop
cmp
pop
movsb
and
push
out
xchg
subl
adc
stc
xchg
pop
shrb
sbb
inc
push
jg
lods
push
paddw
dec
iret
mov
out
adc
xlat
cmp
jp
mov
add
sbb
dec
fwait
lcall
lahf
jno
mov
call
sti
xor
in
negl
or
iret
data16
cs
je
test
mov
cmp
xchg
pushf
mov
or
in
les
test
mov
mov
dec
not
push
je
rorl
out
xchg
or
roll
cmp
sbb
icebp
mov
stos
and
in
xor
or
enter
insl
pop
out
mov
sarl
push
and
aaa
addr16
pop
and
scas
int3
ds
rcll
les
xchg
sub
imul
aas
sub
mov
movsb
dec
add
xchg
dec
adc
xchg
cwtl
inc
push
subl
lret
les
ficoms
rorb
inc
ret
sti
test
lret
mov
int
loop
pop
adc
pop
push
sar
mov
push
jmp
insl
xchg
jne
pop
push
cmp
jno
push
andl
aaa
adc
sub
stos
adc
sub
lret
sbbl
enter
mov
test
xor
xlat
jge
ficoms
movsb
mov
js
fdiv
push
out
pop
cli
mov
mov
fdiv
in
xor
pop
push
push
lods
mov
cld
repnz
add
or
sub
cld
mov
add
pop
stos
push
mov
push
imul
mov
loop
sbb
jne
in
jge
push
inc
dec
sbb
inc
dec
scas
jae
inc
jmp
inc
lea
mov
sub
xor
mov
xchg
push
lret
cld
mov
into
push
mov
push
into
xchg
loope
pop
mov
clc
sti
xchg
sub
push
mov
dec
outsb
add
lcall
hlt
or
add
loop
ds
mov
addb
jl
add
jno
imul
jmp
add
dec
loope
lock
cwtl
push
dec
test
and
inc
mov
xor
ret
ds
jno
cmp
lahf
push
pop
mov
mov
movsl
mov
dec
mov
std
inc
js
roll
fwait
add
xor
mov
cmc
loopne
xor
in
mov
mov
cmpsb
mov
push
mov
and
in
ret
pop
sbb
scas
mov
stos
and
sbb
test
shr
imul
pusha
pop
dec
mov
mov
dec
adc
mov
dec
rcrb
xor
loopne
and
push
data16
adc
xor
std
gs
mov
mov
xor
mov
cwtl
lds
fmuls
fimull
fs
out
mov
hlt
jo
mov
in
shl
mov
into
pop
add
lret
mov
xchg
call
movsl
lds
xor
xchg
hlt
insb
xor
addr16
stos
sti
cmp
insb
inc
pop
adc
sbb
bound
inc
mov
test
cmp
or
pop
rol
jae
not
inc
lcall
aas
add
xor
jae
dec
gs
lahf
outsl
aas
insl
add
nop
push
sbb
test
jo
pop
xchg
in
ret
jp
dec
enter
mov
sbb
ret
mov
cld
push
pushl
mov
stos
cmp
lret
out
lahf
ret
or
or
xor
sub
dec
mov
ret
push
jbe
clc
in
sub
fbstp
jo
add
adc
rolb
arpl
clc
outsb
sub
lcall
in
repz
dec
popf
xor
outsb
sbb
jb
push
shll
jbe
fwait
addb
faddp
nop
cs
loop
stos
adc
ffree
xor
mov
sbb
sbb
add
iret
or
bound
stc
repz
repz
push
sbb
sar
test
dec
jno
xor
add
scas
loopne
outsb
pusha
negl
sbb
mov
out
mov
insl
outsb
xchg
leave
xchg
mov
jle
jl
out
jp
mov
xchg
cmpsl
ds
or
mov
cmp
lds
aaa
into
ja
mov
lret
lcall
push
test
mov
out
fmul
push
or
add
sbb
jbe
decl
xchg
sbb
dec
mov
pop
pop
sti
faddl
lods
or
aas
push
mov
clc
cli
xchg
mov
cli
push
jns
xchg
lds
sti
cmp
dec
stos
cld
aas
sub
mov
or
gs
fistl
cmp
cmp
mov
xchg
push
repz
dec
aaa
fiaddl
adcb
dec
rol
pop
add
xchg
fdivrl
aad
lds
adc
mov
xchg
mov
testl
push
scas
repz
or
loopne
dec
inc
jge
arpl
jbe
aaa
and
nop
or
dec
jbe
cmpsl
enter
je
ret
stos
jno
xchg
out
lock
xorb
in
insl
mov
dec
pop
mov
xchg
fidivl
jne
call
push
in
or
mov
pop
sub
xor
or
aaa
pop
out
loope
test
add
adc
xchg
lds
jb
leave
cmp
pusha
inc
jle
stc
push
pop
push
clc
lret
cmpsb
jb
test
jo
ljmp
mov
loope
inc
aaa
dec
and
loopne
adc
pop
fstps
and
add
mov
movsl
in
mov
popa
jmp
lods
out
mov
dec
out
aam
ficoms
pop
out
xlat
and
int
lret
jnp
jmp
cli
dec
push
cmp
xchg
adc
inc
aas
add
pusha
idivl
or
pop
sub
fildl
push
std
ljmp
or
or
jo
mov
jp
sti
mov
push
cli
mov
cmp
fidivrl
lock
and
les
fdivs
aad
fldl
insb
adc
arpl
sub
xchg
pop
inc
iret
addr16
sbb
jae
jecxz
enter
pop
iret
std
xchg
add
cmc
int3
pop
iret
or
inc
mov
cld
lods
aad
insb
dec
cmpl
jle
outsl
shll
add
aam
jnp
pop
lods
mov
pop
das
inc
pop
int
test
fadds
dec
imul
hlt
aaa
or
repz
mov
aaa
fcompp
sbb
cltd
dec
scas
or
loop
negl
rclb
hlt
ret
nop
and
or
addr16
xor
and
inc
mov
cmp
imul
movsl
jbe
je
jp
cmp
adcb
mov
test
mov
and
fiaddl
ret
std
xchg
inc
clc
dec
dec
push
int
xor
loope
lods
jbe
mov
int
mov
cltd
jp
fdivrl
xlat
das
shr
fnstsw
rorl
mov
fcompl
push
mul
pop
in
pusha
jl
ffreep
jo
push
sbb
enter
and
adc
sbb
xchg
adc
test
mov
outsl
jbe
mov
and
fwait
inc
fcmovne
jmp
inc
push
stos
fcompl
lret
lcall
push
dec
mov
pop
mov
sbb
in
mov
push
mov
dec
pop
dec
mov
std
lods
or
insb
xor
cmpsl
and
enter
cld
sti
push
cld
add
dec
jmp
fcomps
cmc
push
popf
jae
lret
imul
dec
push
sub
pop
jno
bound
ss
jnp
pop
cmpb
lods
mov
and
sti
sbb
mov
inc
sahf
andl
pop
cmc
shlb
pop
cmpl
scas
mov
push
push
inc
fdivs
sarb
std
inc
dec
in
push
cwtl
in
fistps
stc
xchg
cmc
out
and
jno
inc
jne
mov
popf
ds
xor
inc
flds
pop
repz
gs
repz
jl
cmpsb
sarl
pop
loope
mov
ja
scas
outsl
andb
pushf
test
loopne
sahf
stos
jb
mov
dec
mov
jb
imul
movsb
push
es
cmpsl
mov
inc
add
pop
mov
scas
les
cmc
fidivrs
mov
mov
ss
push
in
or
jno
cs
pop
cmpsb
aaa
inc
in
dec
adc
les
xchg
push
insl
mov
dec
in
jb
xor
cmp
jge
add
jbe
inc
out
sarl
add
leave
dec
sahf
addr16
imul
add
test
jp
mov
cltd
dec
out
pop
push
xchg
pop
push
rol
sub
cli
lods
inc
sub
aad
sahf
gs
sbb
pop
loopne
adc
pop
into
lahf
or
cmp
int
push
xchg
stos
jne
dec
mov
dec
push
mov
jle
mov
aam
xchg
jmp
ljmp
lds
add
imul
mov
sub
mov
and
leave
jl
bound
mov
jl
aad
or
pop
or
mov
lea
fldt
sbb
adc
pop
inc
fimuls
rcrb
fcomps
sbb
dec
inc
push
imul
repnz
jb
pushf
jp
xchg
sub
and
popa
mov
cld
daa
cmp
dec
lods
fwait
hlt
dec
or
shll
inc
dec
shr
dec
mov
or
lcall
mov
iret
jnp
mov
mov
fwait
cmp
stos
jp
ret
or
lahf
sub
push
sub
mov
outsl
repnz
arpl
jns
pop
jnp
jb
sbbl
xchg
pop
adc
or
in
js
ret
es
mov
aad
inc
dec
jb
cld
mulb
jb
jno
mov
adc
dec
sbb
sub
jmp
test
and
lret
movsl
inc
dec
aaa
lcall
data16
stos
mov
insb
mov
fildll
lock
add
mov
sbb
sbb
xchg
sbb
mov
or
rcl
xor
cmpsl
or
stc
mov
xor
jg
or
xchg
push
ss
cmp
sti
or
adc
in
movhps
add
arpl
xchg
jb
push
sub
ret
fiaddl
cs
fidivl
pop
xchg
cmp
shlb
xor
sub
jne
cmp
mov
xchg
jbe
push
stc
and
sbb
les
dec
jne
sub
shll
movsl
hlt
sbbb
leave
and
lret
adc
insl
repnz
mov
testl
cmp
arpl
lods
push
nop
inc
push
mov
mov
sub
xchg
leave
mov
movsb
jg
fildl
ret
ror
repz
ficompl
sbbl
mov
cmp
mov
xchg
and
ffreep
je
cmp
outsb
push
pop
jg
movsb
das
fstpt
imul
fnsave
cmp
mov
dec
xorl
sahf
or
push
push
pop
adc
mov
mov
add
into
ljmp
or
rcll
push
jno
xchg
jno
faddl
add
movsb
shl
or
xchg
jns
xchg
insb
dec
add
adc
pushf
xor
stos
shrb
in
pushf
mov
adc
jae
sbb
mov
jo
push
mov
xlat
je
mov
push
sbb
js
fidivl
dec
cs
or
mov
jle
inc
out
lret
xlat
cltd
cli
mov
xchg
xlat
call
loopne
icebp
clc
dec
cltd
test
ds
incl
cwtl
clc
decl
sub
movsb
adc
cmp
cmp
dec
test
or
fwait
pop
push
movsl
shll
fdivrs
cmp
clc
xor
andl
pop
ret
pop
out
mov
inc
out
sub
push
fcoms
and
aad
scas
jl
loopne
in
into
add
mov
cltd
pusha
idiv
mov
out
push
inc
fst
or
in
mov
or
mov
push
stos
mov
mov
negb
std
xchg
notb
pop
fwait
js
test
mov
add
and
test
and
and
dec
and
fs
and
or
sub
data16
xchg
insl
push
pusha
push
adc
test
sub
jns
fs
in
mov
adc
jge
or
mov
pop
mov
cmp
jnp
inc
ret
push
push
xchg
gs
ret
jns
daa
movl
shll
jmp
lds
jmp
outsl
cmp
pop
mov
sub
xchg
daa
shll
fcomps
inc
js
jne
fidivrs
insb
imul
sbb
divb
int
jbe
out
push
sti
sti
mov
int3
or
cmp
adc
inc
divl
push
add
push
inc
faddl
adc
cli
jne
call
bound
pop
and
iret
mov
xchg
xlat
outsb
arpl
xlat
dec
push
mov
andl
insl
mov
daa
lahf
push
clc
xchg
sub
pop
cmp
inc
lcall
push
jge
jb
sub
mov
scas
sbb
lret
jne
lea
mov
xor
xchg
sub
lahf
pop
mov
jge
push
and
xorb
cmp
mov
fdivrs
divl
fadds
add
mov
push
js
mov
jecxz
fwait
jae
int3
or
shrb
mov
loope
sub
inc
mov
sbb
dec
push
dec
aam
sbb
imul
sub
push
sbb
dec
jl
xlat
push
xor
adc
xchg
out
stos
dec
in
or
adc
xchg
sub
sbbb
mov
scas
inc
fwait
sub
jae
aaa
clc
mov
sbb
adcb
adc
add
fwait
push
xor
insl
or
jne
mov
inc
aaa
loop
aas
test
jle
inc
xchg
int
pop
pushf
repnz
sub
jle
inc
outsb
leave
push
inc
jae
or
fisubl
jb
adc
addr16
ret
cmp
enter
dec
aam
into
mov
sub
out
mov
outsl
mov
addr16
cmp
outsb
cmpsb
lock
jne
sbb
push
pop
cmp
and
std
and
mov
call
sbb
cmpsl
rorl
fidivl
into
mov
jge
fadd
fisubrs
loop
les
test
sahf
xor
push
or
pop
or
mov
in
rorl
cli
pop
xor
aad
out
or
js
xor
xchg
or
push
jns,pt
scas
add
fs
jge
test
sahf
push
int
test
or
cmp
fadd
pop
loope
orl
incl
fsubs
cwtl
mov
les
push
in
cwtl
xchg
dec
loop
mov
scas
in
xor
ljmp
mov
lahf
dec
mov
xchg
mov
icebp
sub
add
or
out
mov
gs
insb
fdivrp
rorb
sub
cli
dec
hlt
pop
jl
and
fldl
pop
push
ja
iret
add
pop
in
mov
dec
push
cmp
or
mov
push
shll
lods
call
cmc
push
push
ficoml
xchg
pop
adc
cmp
test
movsb
lahf
xchg
std
lahf
jae
fucomip
adc
out
or
test
adc
mov
xchg
scas
push
fistps
xor
push
jge
fisubs
sbb
add
std
cmp
xchg
aaa
pslld
jge
xchg
mov
mov
and
inc
out
in
dec
mov
xor
jae
sbb
xchg
stc
xchg
jb
adc
xchg
mov
jecxz
xchg
sbbl
push
push
mov
sbb
add
ret
hlt
add
inc
xchg
mov
xor
or
jbe
loopne
and
sar
out
aam
xor
cld
incl
inc
fs
pop
jo
mov
inc
outsb
or
mov
stc
xchg
sub
and
mov
adc
mov
leave
mov
clc
dec
into
leave
push
add
je
bts
adc
sbb
sub
add
ss
std
es
int3
push
jmp
mov
subb
ficomps
outsl
push
xor
xchg
fisubrl
jbe
pop
adc
mov
sbb
push
jle
lret
je
jb
push
adc
push
lock
movsb
or
aas
sub
jo
int
mov
push
adc
adc
outsl
mov
mov
js
inc
dec
dec
sbb
jp
sub
cwtl
in
leave
cmp
or
push
pop
pop
push
in
aad
xchg
pusha
push
jns
xor
lods
out
pop
xchg
cmp
jmp
push
xchg
pushf
xor
aas
sub
and
enter
pop
xor
in
imul
movsl
icebp
jmp
inc
mov
lods
push
mov
repz
ds
inc
push
ljmp
pop
repz
mov
adc
mov
or
push
enter
ja
subb
dec
rcrl
mov
addb
clc
jne
loop
pop
lret
mov
sub
cmpsb
mov
push
push
mov
add
je
sub
inc
mov
ret
repz
arpl
inc
mov
js
call
lret
outsl
sbb
test
ret
repz
or
jo
pop
icebp
inc
xchg
sub
ret
sets
dec
fists
xchg
sub
or
aas
xchg
adcb
cmp
lods
cmp
in
jecxz
pusha
adc
push
add
enter
ds
enter
mov
mov
leave
fwait
aaa
push
iret
das
lahf
push
popa
mov
cmp
or
adc
and
xchg
mov
cmpsl
mov
aam
xchg
cmc
dec
arpl
jl
add
jbe
roll
mov
jae
mov
mov
mov
imul
mov
cmpsb
and
jmp
cmpsb
js
clc
push
sbb
inc
and
mov
test
mov
xchg
jno
push
data16
idivl
mov
xor
pop
jbe
in
repz
mov
hlt
insb
test
sahf
pop
pop
lods
popf
cld
pop
shrl
mov
jge
mov
ljmp
jno
int3
dec
clc
or
xchg
scas
pop
mulb
mov
fidivrs
pushf
aam
into
cmp
and
out
je
jl
shlb
inc
and
dec
xor
inc
mov
nop
mov
notb
sub
outsb
add
mov
iret
sub
add
cmpsl
call
inc
mov
lds
lea
movsb
push
pop
out
test
stos
in
adc
ds
fnstenv
repz
ret
pop
mov
push
inc
enter
inc
orb
jp
xor
inc
fisttpll
popf
int3
aad
cli
fldenv
hlt
adc
jl
data16
pop
insl
and
mov
mov
pusha
call
gs
popa
mov
fstl
jns
sbb
inc
jmp
gs
ror
pop
push
mov
out
pop
movsl
fucomi
rorl
insl
xlat
dec
scas
mov
pop
popf
jns
inc
ja
cli
out
or
and
inc
dec
fldenv
jl
jl
scas
xor
loope
out
xor
pop
rorl
mov
lods
mov
inc
fisttpll
xchg
lret
out
decb
in
gs
fdivrs
push
inc
adc
inc
stc
dec
inc
fisttps
adc
cld
push
pop
out
test
xor
pop
push
and
lahf
and
xorb
rorl
shll
mov
inc
clc
dec
adc
mov
dec
mov
add
cwtl
xchg
cmp
test
mov
cmpsb
std
xchg
xor
dec
cmp
cmpl
sbbl
inc
jl
add
push
xchg
lods
sbbl
enter
sub
mov
push
mov
mov
mov
ds
sbb
cmpsl
sbb
push
adc
repz
fnstsw
pop
sub
sub
dec
mov
mov
imul
lahf
ret
pop
inc
jb
and
lods
xor
outsl
mov
jno
test
sub
jge
jge
hlt
sahf
mov
push
lds
xor
imul
loope
pop
mov
sti
cmp
dec
push
push
xchg
cltd
test
or
push
mov
dec
fistl
cmpsb
cmp
adcl
push
ljmp
pushf
das
xor
dec
jne
mov
js
loop
pop
push
adc
pusha
aas
cld
and
adc
push
lret
sub
push
jb
insb
rcl
gs
xchg
pop
jl
subb
cmp
add
push
fs
das
ret
push
ja
or
into
jbe
jbe
lahf
cs
push
dec
jbe
loop
jmp
push
push
test
popa
ja
adc
ret
mov
sbb
stc
mov
fildl
add
push
shlb
std
xor
inc
push
pushl
xchg
sub
mov
mov
mov
lea
pop
test
cli
lds
jmp
out
ret
es
pop
cmpsb
insl
jb
cs
mov
mov
adc
mov
scas
push
rcr
loope
cmp
pop
xor
xor
lret
fnsave
push
inc
stos
stos
sbb
xor
sbb
mov
fs
jmp
and
lds
fs
sbb
cmpsb
int3
cmp
pop
mov
mov
push
in
lods
inc
jge
in
xchg
cmp
jne
mov
stos
inc
pop
iret
call
pop
push
notb
mov
jo
lret
jge
cld
jle
sub
stos
inc
jns
sub
lcall
mov
cmp
movsl
imul
je
mov
sar
test
scas
fstps
xor
imul
mov
rcl
insb
or
adc
push
add
mov
jae
sub
add
adc
mov
jle
into
outsb
fbstp
out
push
pop
je
lods
ds
stc
das
pop
pop
imul
mov
lea
push
inc
daa
xlat
outsb
ret
push
pop
xchg
fsubrs
repnz
jle
cld
sbb
gs
sub
popf
sbb
loop
mov
pusha
call
sub
adcl
or
push
sahf
xor
cltd
je
test
pop
mov
pushf
xor
push
lcall
adc
pop
scas
and
mov
inc
imulb
inc
sub
out
adc
jle
lret
popf
jne
lret
nop
mov
aaa
lahf
fwait
xor
fcomps
mov
test
xchg
mov
cli
or
add
aaa
xchg
dec
mov
xchg
test
movsl
ds
pop
lods
fidivl
jl
outsb
jp
sbb
add
lds
scas
inc
sub
shll
leave
int
cli
dec
lods
inc
popf
xchg
out
cltd
mov
inc
popa
adc
ds
outsl
push
scas
cmp
inc
ss
test
lret
sbbb
dec
mov
test
lcall
test
push
enter
adc
pop
into
pop
push
sbb
fistpl
add
in
inc
sbb
pop
cmpsl
inc
mov
inc
pop
inc
add
xchg
aaa
push
out
mov
data16
outsb
xor
mov
dec
stos
xor
imul
mov
add
xorb
or
inc
or
mov
adc
mov
lahf
adc
stc
imul
fidivs
pop
bound
fstl
mov
fmulp
fisubs
outsb
cwtl
das
mov
adc
push
jo
add
mov
pop
sbb
pop
scas
inc
cltd
daa
out
xchg
xor
loopne
xor
and
imul
std
inc
movsl
test
lret
iret
xor
movsl
push
insb
or
jle
inc
in
pop
sbb
shrl
repz
push
lds
add
scas
leave
and
lods
ja
arpl
cmpsb
mov
sahf
lea
push
xchg
movsb
jno
pop
mov
ja
int3
xchg
pop
loopne
cli
fldcw
jne
daa
mov
xchg
movsl
dec
cmp
lea
ret
fwait
sbb
cmpsl
add
cmp
repz
push
sbbb
mov
push
int3
dec
xchg
push
xchg
dec
inc
cmp
pop
pusha
addl
xchg
scas
jle
xchg
sti
jb
xor
aas
jne
sbb
js
roll
nop
dec
xchg
loope
cs
pop
mov
loop
pop
xor
xor
in
xchg
push
or
and
pop
jmp
aaa
aad
out
inc
mov
fidivl
les
push
dec
jecxz
xchg
mov
out
ds
iret
addr16
add
rcll
jbe
ror
pop
aaa
test
push
ljmp
pop
inc
out
sbbl
out
repnz
push
mov
or
mov
pop
icebp
lret
mov
xchg
cmp
js
cmp
test
repz
aas
das
outsl
shrl
pop
mov
sbb
xor
pop
dec
nop
sub
out
mov
std
cmp
lahf
pusha
orl
cmp
jo
daa
notl
xchg
xor
jne
lock
inc
or
cmpsl
jmp
into
mov
arpl
rcll
lock
push
fbstp
sub
scas
testl
mov
and
sub
mov
pop
iret
fists
sbb
inc
decb
pop
gs
sub
insb
xor
test
lar
jle
jne
sbb
insb
cmpb
imul
xchg
lcall
add
and
insb
sbb
mov
call
dec
in
cmpsb
call
mov
sub
dec
dec
outsb
test
xor
xor
jo
testl
fs
jmp
pop
xchg
mov
jae
sub
pop
jle
mov
mov
aas
dec
pop
and
in
lock
add
inc
sbb
mov
mov
movsl
scas
cmpsl
ret
pusha
aaa
jns
ss
rcll
and
aaa
outsb
in
dec
imul
aas
test
leave
xor
adc
out
push
daa
mov
or
mov
inc
and
dec
fcomps
fnsave
icebp
mov
and
push
out
fiadds
inc
mov
jne
les
popa
movsl
xor
xchg
jno
dec
clc
pop
mov
outsl
or
mov
ret
aam
cmp
mov
into
in
adc
cmp
xchg
pop
push
pop
push
movsl
push
adc
and
les
mov
lock
jns
adc
jbe
ds
imul
sub
ja
inc
fstpt
adc
popf
bound
push
insb
daa
mov
stos
mov
int3
jbe
ret
cmpsb
jmp
xchg
sbb
shlb
inc
lahf
shrl
sbb
sub
fildll
push
out
sbb
cmc
dec
and
push
out
clc
stos
cld
mov
fimull
clc
enter
andb
cli
loopne
mov
xlat
jp
cmp
cmpl
xchg
mov
pop
inc
fmul
jge
inc
pop
mov
push
mov
frstor
sbbl
std
sbb
sti
enter
test
movsl
gs
std
roll
push
fcmovnb
cmp
xlat
xor
test
loopne
outsl
adc
ljmp
ja
in
pusha
cmp
jae
scas
frstor
add
push
movsl
push
adc
add
inc
adcb
cmp
sub
outsb
push
repnz
push
dec
clc
popl
icebp
push
scas
cmpb
popa
mov
push
cmp
insl
mov
sbb
lods
xchg
ficompl
mov
enter
push
sub
push
sbb
jne
sub
shr
sbb
pop
imul
pop
bound
test
mov
sbb
decl
add
inc
scas
xor
sub
dec
iret
stos
add
insb
dec
fildll
frstor
push
nop
lods
outsl
push
fists
clc
sahf
adcb
lds
call
mov
xchg
aam
repnz
hlt
lea
xor
cmpsb
xchg
pop
mov
jp
mov
mov
xor
push
stos
fildll
nop/reserved
iret
adc
inc
lock
stos
adc
in
ret
divb
stc
fsub
lret
jmp
pusha
xchg
cmp
jb
inc
mov
xchg
cmp
inc
ljmp
je
cmp
in
insl
fwait
rcrb
pop
ret
or
lds
push
ret
dec
test
dec
mov
das
mov
pusha
push
aas
lea
stos
xorb
pop
inc
cmpsl
outsl
in
xor
add
in
repnz
pop
cmpsb
xchg
jg
lahf
adc
daa
xchg
sub
stos
into
call
pop
stos
sbb
push
inc
test
xlat
push
je
stos
lods
jae
lea
xchg
jnp
dec
dec
les
mov
push
sbbl
fs
xlat
int
dec
push
flds
sub
sbb
sbbb
je
jmp
or
xchg
sbb
les
insb
fisttps
stos
push
mov
mov
sbb
lcall
or
jmp
out
cmc
pop
scas
pop
mov
xchg
arpl
dec
ss
push
je
cs
add
dec
in
lret
ljmp
gs
pop
push
pop
mov
sub
hlt
add
aam
push
inc
aas
lea
jp
shr
into
push
mov
inc
sbb
fsts
mov
hlt
cs
sub
lret
idivb
jo
mov
pop
jbe
pusha
dec
hlt
roll
jnp
and
push
xlat
outsb
push
stos
jecxz
or
cmc
adc
insb
pop
fnstcw
add
aas
test
loope
sub
cmp
repz
mov
ds
cld
test
xchg
maxps
wrmsr
decl
outsb
fwait
stos
test
cs
add
lcall
out
in
push
push
mov
jno
out
stc
ljmp
mov
add
aas
mov
mov
sbb
addr16
inc
cmpsb
daa
pop
arpl
push
push
int3
ficompl
jb
rcr
xchg
les
or
das
shll
sbb
sub
lods
fcomps
sbb
xchg
pushf
pop
jp
lret
cmp
xor
movsb
flds
aaa
or
in
aaa
outsl
inc
into
loopne
fdivs
add
dec
pop
loope
dec
in
bound
aad
imul
add
push
test
add
mov
je
rol
enter
inc
jo
aam
jmp
push
push
int
stc
mov
inc
or
xchg
add
call
xchg
lret
pop
pop
insl
cmp
imulb
andl
loopne
lock
repnz
pop
or
push
push
add
pop
cmp
dec
shl
js
int3
push
xchg
sbb
push
add
leave
mov
rorl
cmp
mov
add
nop
xor
mov
mov
jle
jno
mov
mov
mov
stos
fidivrl
in
test
adc
pop
add
dec
add
cmp
add
ds
fildl
mov
push
sbb
cmp
js
add
decl
movsl
enter
adc
sub
pop
mov
jae
mov
xchg
std
inc
mov
xchg
push
jae
xchg
and
xor
loopne
inc
mov
cltd
std
dec
out
inc
ja
lret
test
jmp
mov
or
or
aad
pop
inc
jge
mov
test
loopne
incl
pop
push
loope
xchg
xchg
leave
add
call
call
ljmp
cmp
imul
push
int3
fidivl
jbe
sbb
mov
addr16
inc
fmulp
popf
jno
or
js
sub
into
pop
movsb
jo
pop
subl
pop
push
je
loop
inc
shrb
dec
repnz
clc
imul
pop
cmp
in
cli
mov
mov
mov
jnp
aas
xchg
mov
pusha
jmp
daa
icebp
sbb
out
iret
jb
insb
dec
repnz
gs
sbb
dec
loope
xchg
mov
push
adc
jbe
lret
lret
or
adc
dec
add
bndstx
negl
js
popa
dec
test
es
call
pop
test
and
es
sub
inc
in
cltd
loopne
divl
jg
inc
stos
or
enter
sbb
jbe
subb
jecxz
inc
cmpsl
mov
mov
cld
xchg
fists
sbb
mov
inc
enter
jbe
shll
ret
icebp
stc
or
mov
push
out
int
pop
add
mulb
les
roll
cmp
mov
mov
mov
stos
inc
lock
or
dec
push
call
pop
xor
push
std
xchg
insb
mov
fcmovne
or
or
les
fwait
cld
outsb
lret
mov
dec
or
xorb
mov
push
dec
loopne
in
dec
cwtl
cmpsb
addr16
fsubs
cmc
or
stc
test
cwtl
mov
dec
ret
mov
fiadds
enter
gs
and
stos
insl
xor
jmp
push
mov
movsl
mul
movsb
rol
decl
clc
icebp
movb
dec
push
cmpsb
pop
sbbb
movsb
pop
xor
shl
decl
daa
out
test
push
xor
sbb
in
out
std
into
push
lret
mov
cmp
call
dec
or
push
jmp
mov
jae
lret
fwait
push
mov
movsb
addl
pop
aas
sbb
movsl
mov
jnp
es
stos
rcr
xchg
roll
pop
sub
sahf
inc
jbe
imulb
cmp
int3
cmp
add
out
fsubrl
notb
cltd
je
xchg
pop
bts
icebp
or
cmp
leave
cmp
stc
mov
pop
cmp
js
mov
mov
je
pop
push
pushf
pop
dec
js
gs
push
and
out
fmull
mov
scas
or
dec
gs
jp
pop
mov
insb
sbb
sbb
lea
pop
cmc
fs
cs
andl
pop
mov
xlat
daa
jbe
mov
adc
adc
test
negl
cli
mov
mov
mov
popa
addr16
xorl
or
adc
shl
repnz
lods
dec
adc
inc
repnz
mov
lds
cs
js
inc
mov
insb
adc
imul
gs
xchg
mov
orl
jge
cmp
inc
cmp
rorb
pop
jne
pop
imul
cmpsb
test
pushf
stc
call
mov
sbb
test
lret
jl
shrb
mov
sub
fadds
jmp
adc
pop
sbb
mov
xor
loop
jg
pop
mov
and
sub
mov
lahf
cmpsl
ds
aad
xchg
pop
cmc
int3
lfs
pop
and
xlat
push
mov
pop
push
mov
jne
rep
int
pop
cmp
mov
jge
sub
dec
fbld
adc
sub
mov
push
addr16
mov
test
cli
push
or
dec
in
es
push
jne
add
dec
push
fidivrs
inc
fstpt
fldenv
push
stos
xor
pushf
repz
jbe
in
inc
fcomps
pop
fsts
and
movsl
mov
xchg
idivb
loopne
and
stos
cmp
cmc
pusha
pop
inc
cmp
jne
ds
cmpb
pusha
fisttpl
push
popf
das
cs
mov
call
aas
dec
ja
in
jecxz
pop
pusha
jge
fidivs
cs
cli
xchg
xchg
aas
stos
cmc
sbb
cmp
dec
cmp
mov
hlt
cmp
lods
ljmp
pushf
out
push
pop
enter
cld
lods
leave
mov
adc
xchg
mov
or
push
jne
xor
push
push
sub
mov
add
rol
or
add
arpl
xor
sub
and
pop
pop
sbb
popl
sub
sub
push
subb
fwait
inc
stc
dec
mov
shl
add
cmp
cmp
mov
xchg
cmpsb
clc
lds
das
iret
ss
mov
out
push
add
or
add
clc
pop
lcall
cmc
mov
adc
mov
pop
aas
add
mov
sahf
jle
cli
je
xchg
iret
xchg
frstor
movsb
inc
ret
or
aaa
xchg
repz
mov
push
in
mov
ds
test
xor
cmpsb
arpl
ja
rcrl
and
or
adc
test
cmp
adc
scas
cltd
xchg
fyl2x
adc
cli
sbb
mov
bound
mov
popa
cld
sub
pop
xor
jle
add
clc
sarb
repnz
sbb
sbb
das
cld
jo
mov
ret
add
cli
xchg
sbb
jp
and
lods
lods
mov
out
lock
es
aad
icebp
push
xor
lahf
jp
adc
push
scas
rcl
cmpl
pop
mov
popf
inc
pop
push
jne
popf
mov
sbb
clc
jg
data16
inc
outsl
cmc
push
and
or
je
nop
pop
mov
movsl
mov
xchg
addr16
mov
mov
adc
sti
dec
test
out
push
push
out
mov
xor
mov
mov
inc
insl
push
cmp
push
dec
nop
aaa
xchg
jl
std
dec
fisttps
xor
xchg
fistps
pop
jno
imul
je
pop
xor
dec
lar
cmp
dec
and
lds
jp
int
repz
mov
dec
mov
jg
xor
arpl
mov
pop
or
movsb
adc
mov
or
aad
or
jno
in
xchg
incb
dec
popf
jg
ss
inc
inc
fs
jp
push
add
out
ficomps
or
jmp
pop
shrl
inc
push
jnp
push
jno
lahf
push
fcompl
cmc
dec
popa
stos
in
je
repz
in
cmp
cmp
xchg
lock
xor
pop
sarb
cwtl
imul
imul
fstpl
mov
dec
arpl
xchg
aaa
ss
dec
mov
cltd
call
inc
test
push
or
gs
insb
mov
push
out
lock
sbb
int
lds
sti
insl
push
mov
ja
and
cmp
jne
test
sti
push
shr
mov
int3
cmc
push
call
mov
and
mov
xchg
pop
lret
add
mov
pop
adc
mov
je
dec
mov
add
jecxz
cltd
out
repnz
push
add
sbb
clc
adc
in
dec
pop
push
jp
or
in
xor
lahf
xor
cltd
das
add
out
jae
lea
mov
mov
fistl
loopne
push
pushf
dec
sub
fildll
call
fidivrl
xor
sub
cwtl
inc
mov
xchg
sub
test
and
sub
mov
dec
decl
jbe
mov
jae
lret
daa
mov
dec
cli
fimuls
mov
add
cmpl
jae
test
lods
mov
jmp
cmp
add
jnp
or
bound
mov
gs
add
xchg
test
mov
jns
inc
push
jmp
cmp
push
xchg
outsb
mov
add
and
sub
stc
rol
fcmovne
cwtl
sbb
out
out
jae
xchg
sub
add
xchg
add
and
pop
ud2
mov
mov
fcmovnb
out
cld
cmc
into
aam
push
mov
sarl
icebp
pop
cwtl
or
lods
inc
pushf
push
push
ss
ficoms
adc
ret
sbb
xchg
ret
mov
repnz
push
push
and
stc
jns
fcomps
cli
cmp
jae
fstl
pop
lods
pop
in
dec
adc
fldcw
rcrl
pop
flds
jp
xchg
sub
movsb
jno
rcl
mov
mov
repnz
push
pop
xlat
mov
pop
adc
cmp
inc
mov
dec
shlb
imul
mov
pushf
and
outsl
jnp
xorl
lods
adc
test
into
xlat
push
xchg
and
cs
mov
cmpsb
fs
xchg
mov
mov
push
jmp
pop
ds
push
or
into
push
aad
cmp
xchg
and
js
push
test
mov
movsb
and
daa
loop
test
mov
jl
fwait
push
jmp
iret
stos
jmp
xchg
mov
inc
or
repz
stos
mov
xor
sbb
mov
add
or
pushf
sarb
cmp
pop
adc
add
nop
pushl
scas
lea
cmc
mov
insl
push
xor
sub
hlt
adc
cli
out
fcompl
fldl
addl
fcoml
mov
adc
jl
scas
dec
dec
cmp
push
mov
pop
je
xor
xchg
push
pop
pusha
or
mov
adc
rcrb
aam
and
jno
mov
mov
cmp
cmp
out
subb
cmp
add
addr16
or
adc
jbe
inc
lods
jp
test
cmp
xor
es
cmp
into
fiaddl
mov
fbld
cmc
inc
call
mov
cmc
repz
cwtl
out
cltd
xchg
sub
imul
cmp
xchg
cwtl
push
cltd
test
ss
loopne
enter
mov
xchg
adc
out
movsl
push
imul
movsb
jp
dec
stos
out
popf
push
test
lods
cld
scas
inc
aam
inc
lods
mov
sahf
push
aad
push
inc
pop
addr16
jno
scas
lret
aam
jmp
and
push
iret
mov
jbe
daa
popa
mov
imul
fs
dec
sbb
dec
or
mov
dec
dec
jmp
mov
divl
mov
jp
enter
jne
mov
imul
rcr
test
pop
pop
shll
sahf
repnz
outsl
cmp
pop
fcoml
rclb
int3
insl
loopne
xchg
sarb
sbb
lods
jp
js
pop
pop
inc
ret
movsb
test
in
mov
dec
mov
mov
test
push
sub
jae
and
or
cmp
loop
pop
sub
lea
dec
stc
shrb
pop
xlat
jbe
scas
push
sbb
mov
cmp
bound
rorb
cwtl
xor
mov
adcl
daa
out
jmp
push
int3
fcmove
or
and
pop
mov
mov
fucom
in
jmp
and
fs
add
into
or
cmp
inc
ljmp
ss
loope
and
inc
testl
out
mov
mov
ljmp
stc
js
dec
sbb
inc
push
xor
insl
scas
mov
sbb
fldln2
cmp
inc
xor
out
out
dec
xor
mov
lret
cli
dec
cmp
jo
xchg
mov
out
sbb
rorb
imul
fcomps
ficomps
push
or
testl
sbb
ror
dec
aaa
lret
sub
mov
aas
cli
or
stc
adc
fs
cld
jp
or
cmp
out
mov
inc
stos
add
out
lcall
lret
mov
adc
sub
pop
cltd
je
push
add
lcall
mov
sub
pop
imul
mov
scas
xchg
inc
test
bound
jae
dec
xor
hlt
add
int
aas
push
jl
push
mov
xlat
mov
mov
cs
test
mov
vpsllw
pop
fisubl
leave
popa
enter
push
aaa
xchg
mov
hlt
or
call
sub
xchg
jb
inc
ss
mov
call
dec
das
xchg
push
pop
or
lahf
lret
mov
lods
loope
adc
xor
push
push
jl
test
test
out
sbbb
mov
xchg
xchg
test
add
adc
xor
inc
push
and
inc
test
lret
dec
cmc
and
sub
icebp
shr
push
sub
inc
jns
fisubs
loope
jo
repz
xchg
mov
ret
iret
leave
and
adc
xchg
xchg
dec
pop
cmp
outsb
dec
push
mov
fwait
pop
mov
dec
mov
loop
pop
aam
aam
stos
jb
jne
jbe
sbb
and
movsb
mov
outsl
mov
cmp
push
lock
sbbb
sub
hlt
jg
cmp
add
cmpb
mov
fidivl
and
sub
xor
jmp
in
sub
std
ljmp
and
dec
mov
insl
dec
scas
rol
mov
sbb
dec
dec
je
cltd
das
inc
cmp
packssdw
mov
or
fdiv
out
test
pop
cmp
popf
mov
mov
out
jp
lock
les
iret
das
xchg
outsb
push
out
or
sub
hlt
sub
inc
testl
incl
or
iret
xor
repz
mov
stos
dec
mov
add
pop
fidivl
lcall
call
add
xchg
and
and
jns
mov
mov
pop
mov
sbb
dec
jo
sbb
push
subps
fwait
icebp
dec
mov
xchg
mov
leave
test
add
stc
fnsave
mov
mov
and
test
mov
jmp
mov
lods
jno
testl
inc
test
dec
lock
je
sti
add
sbb
outsb
gs
daa
lea
bound
sub
icebp
movsl
xchg
jp
and
in
outsb
mov
adc
movsl
push
loope
ljmp
fidivrs
repnz
xor
mov
incb
bound
dec
pop
inc
inc
test
jae
cmp
mov
mov
fs
or
jg
adc
pop
xor
inc
lods
loopne
sub
jp
add
shlb
mov
test
sbb
popa
ss
xorb
fstl
jg
sti
pop
sub
inc
popa
dec
imul
mov
js
scas
pop
js
dec
aad
xor
pop
jbe
ret
mov
leave
cli
jg
mov
xor
push
dec
inc
gs
sbb
lcall
adc
ss
ds
xor
xor
fucomi
xchg
in
testb
mov
ret
call
dec
lods
and
sub
repz
pop
or
enter
lea
stos
stos
xchg
test
mov
pop
mov
mov
ficoms
aad
jae
mov
lcall
cwtl
push
inc
mov
sti
inc
jbe
mov
jp
sub
into
rcr
pop
pop
ds
cmp
sbb
mov
cltd
movb
mov
push
mov
out
test
xchg
add
loope
stos
mov
and
cmp
xchg
pusha
inc
push
push
sub
or
cmp
out
int
out
call
shrl
rcrl
scas
xor
mov
in
xor
stos
or
sahf
movsb
addr16
cwtl
loope
call
mov
pop
jge
je
mov
mov
int3
jmp
lret
sti
mov
aam
and
mov
jb
xchg
movsb
push
call
int3
lds
jp
sub
push
push
pop
pushf
iret
xchg
repz
dec
mov
outsb
xchg
jmp
add
mov
icebp
sub
js
inc
xchg
xor
and
jne
lods
xchg
arpl
dec
cmp
cld
pop
js
pop
les
insb
daa
mov
movsb
sti
inc
lods
xor
add
pop
cli
xor
fildll
pop
arpl
fs
pop
jle,pn
shrb
into
dec
sarb
dec
lock
mov
fnsave
mov
repz
addr16
sahf
cwtl
jmp
or
and
aaa
or
movsb
mov
xchg
cmpsb
dec
dec
jle
lcall
lar
jl
mov
std
lret
mov
and
cmpsl
push
pop
adcb
push
test
or
inc
xor
test
jns
dec
loop
std
inc
sarl
insb
ret
jae
insl
dec
and
dec
xchg
lret
lret
cmp
cmc
adc
xor
aas
loopne
xor
jmp
pop
xchg
or
aam
out
addl
or
bound
mov
mov
sub
xchg
sahf
mov
shll
mov
sahf
js
out
pop
or
cld
aas
sub
adc
xchg
pop
jb
cli
or
mov
fldt
cmp
xor
mov
sbb
into
gs
lahf
call
sub
bound
rorb
inc
clc
mov
and
pop
lahf
xor
es
xor
imul
xchg
test
rcrl
push
in
xchg
fistpll
xor
loop
jmp
push
mov
jne
jns
stos
ds
fs
xchg
lods
jmp
jecxz
popf
xor
add
mov
mov
push
pop
mov
sbb
outsb
ja
mov
fcom
aaa
lret
xor
ret
shlb
cmp
pop
js
push
jg
sub
xor
lds
je
in
mov
pop
ret
mov
test
xchg
dec
or
dec
mov
jp
sub
mov
push
inc
inc
test
scas
ljmp
inc
push
ret
stos
inc
hlt
movb
imulb
cmpsl
pop
and
mov
test
lods
mov
jl
aaa
jmp
outsl
sti
jo
icebp
jo
and
sub
cmp
sbb
push
dec
adc
idivl
and
scas
scas
inc
mov
rorb
test
mov
popa
inc
cmp
sub
lret
inc
dec
mov
cmp
sarb
cwtl
sub
jp
popf
outsb
push
lret
xchg
or
xchg
push
xchg
sbb
setp
xchg
ljmp
add
cmp
loope
jmp
dec
mov
cmpsb
sti
mov
je
iret
fisttpll
cmpsb
out
shll
cmp
rolb
cmp
cmp
sbbl
sarl
outsl
add
outsl
sub
pusha
lcall
lret
data16
adc
mov
in
jne
lret
out
data16
adc
pop
repnz
test
jg,pn
dec
out
pop
dec
xlat
sub
lcall
lods
mov
sarl
out
xor
or
pop
mov
sbb
loop
call
ljmp
jl
shr
lds
jl
mov
jo
and
sub
fstpl
sti
into
jle
int3
lret
bound
sub
cld
repz
jbe
and
psrlw
inc
push
movsl
js
mov
inc
push
sub
push
fcompl
jge
xor
or
fst
inc
addr16
iret
fnstenv
mov
xchg
or
cmp
imul
xchg
mov
cmp
mov
add
xor
jo
fcompl
movsl
cwtl
push
mov
mov
add
dec
insl
loopne
xchg
in
mov
clc
xchg
je
imul
in
or
jbe
repnz
pop
rcrb
insl
xor
pop
cmp
inc
popa
fsubrl
dec
adc
push
je
addps
inc
sub
jno
push
push
or
add
in
movsb
ss
adc
adc
int3
adc
mov
sbb
sub
das
lods
idivl
and
js
arpl
jb
out
roll
and
mov
push
push
sub
jbe
testb
cmpsl
stc
mov
movsl
int3
lods
inc
dec
mov
lcall
push
in
test
fwait
lods
fmull
xchg
mov
ret
addb
and
enter
test
movsb
rcll
sub
and
mov
int
cmp
push
inc
mov
pop
lods
inc
pop
jge
scas
sbb
push
lods
mov
je
cmp
xchg
jmp
lds
pushf
arpl
imul
sbb
and
cmp
jle
or
test
in
or
pop
dec
in
int3
mov
test
aas
lea
fists
fwait
out
lods
dec
dec
adc
clc
js
xchg
pop
addr16
jmp
jae
lods
dec
mov
test
and
or
sbb
mov
fdivrl
int
and
mov
sub
pop
lods
mov
stos
mov
popa
cmpb
xlat
sbb
outsb
test
and
das
inc
mov
fistpll
dec
xor
addb
aas
cwtl
cmpsb
dec
loope
repnz
jbe
jmp
cmpsl
sahf
mov
mov
clc
in
fstps
add
inc
das
mov
cmp
dec
pop
xor
dec
lret
out
insb
imul
sub
xchg
sbb
cwtl
jg
cwtl
and
pop
pop
xor
js
inc
aad
or
sub
pop
imul
jmp
sbb
push
mov
nop
adc
jmp
aaa
adc
xor
lea
pop
das
sbb
clc
jge
ljmp
lods
cli
shll
add
outsb
xchg
jns
mov
jmp
and
mov
pop
nop
dec
pop
push
dec
jno
lea
jmp
fmull
add
roll
cmp
inc
mov
lea
sahf
pop
bound
inc
inc
mov
fmull
rclb
inc
adcb
xor
xchg
or
in
sub
push
roll
xlat
xchg
pop
icebp
or
push
push
popf
dec
enter
jle
nop
mov
sub
sub
adc
cmc
ja
xchg
cltd
imul
sbb
lret
out
leave
stos
push
or
pop
jo
rorb
mulb
ficoml
inc
jge
dec
dec
rclb
jo
sub
jae
push
mov
push
dec
mov
dec
out
dec
inc
pop
leave
ret
mov
lahf
and
xchg
cmp
ror
cmc
pop
das
mov
out
mov
sbbb
cmc
sub
outsl
cmp
bnd
pop
iret
jno
arpl
test
leave
fs
stos
lahf
lods
loopne
and
stos
inc
mov
stos
dec
cmp
js
enter
jmp
rcrb
jbe
jne
mov
mov
push
aaa
sahf
push
hlt
mov
frstor
mov
lods
push
lods
loop
or
into
pushf
mov
les
mov
fstpl
enter
in
push
push
and
lds
sbb
and
hlt
in
add
add
rcrl
pop
xchg
dec
xor
cmp
es
hlt
push
data16
divl
jo
and
jns
mov
pop
scas
mov
pop
xchg
sbb
ss
mov
cmp
fsts
xchg
dec
cmp
int
push
les
rcrb
sbb
and
fstpt
cmp
popf
mov
dec
mov
sub
cltd
xor
je
mov
inc
out
jbe
es
xchg
out
lods
cs
icebp
int
or
and
imul
out
push
xor
sbbl
gs
cmp
clc
mov
push
push
orl
jle
or
xlat
dec
sahf
push
fs
cmp
adc
jmp
add
cmpb
or
ret
daa
xchg
fstp
cmp
sub
imul
loop
repnz
aaa
or
aas
test
inc
mov
imul
mov
jb
sub
and
shrw
mov
adc
xor
sbb
lcall
mov
repnz
flds
mov
stc
dec
sbb
cmpsb
mov
push
mov
aad
mov
push
inc
lret
aas
adc
push
and
cmpsl
in
das
mov
popa
imul
cmpsb
jbe
pushf
out
mov
lret
in
xchg
pop
cmp
xor
dec
mov
dec
add
xchg
insl
cli
arpl
dec
mov
xchg
mov
xor
test
mov
movsb
cmpsb
cmp
mov
js
dec
or
std
mov
cmp
xorb
push
lock
push
stos
jl
imul
fcmovnb
sub
lds
dec
in
xchg
dec
adcl
inc
rcl
ja
int3
arpl
dec
xor
daa
ss
sub
fisubrl
das
dec
cmp
jmp
in
mov
fiadds
cmpsl
mov
lock
and
scas
and
mov
xchg
outsb
stc
lds
loopne
outsl
xor
adc
mov
jb
push
mov
into
sbb
mov
cs
lcall
cwtl
inc
mov
insl
clc
int
lret
insl
sub
xor
xor
mov
dec
add
jp
pop
dec
stos
aad
pusha
pop
lret
cmp
shll
mov
lods
pop
lret
sti
cmp
jle
dec
dec
addr16
iret
imul
notl
das
or
ret
scas
mov
add
xchg
add
xchg
int3
push
lahf
add
mov
cmp
test
icebp
icebp
arpl
sub
enter
addl
or
ja
sbb
push
mov
cmp
and
loopne
mov
inc
mov
sbb
cwtl
mov
inc
aam
in
add
into
jne
loopne
adc
xchg
and
or
jb
stc
fisubrs
lahf
sbb
rorl
cld
nop
push
aad
xchg
out
leave
sbb
xchg
sarl
dec
stos
test
xchg
xor
xor
iret
jmp
mov
aaa
dec
shlb
sub
mov
dec
sbb
fildl
jmp
inc
pop
es
jns
orb
inc
fnstsw
stos
decl
test
int
cmc
rclb
add
popf
cmc
sbb
push
mov
rcrb
pminsw
jb
mov
inc
ja
popf
sub
push
and
cltd
inc
dec
inc
ret
mov
jo
jle
xor
cld
mov
fcmovb
les
cli
mov
fists
inc
cltd
inc
popa
cwtl
fistps
ficoms
addr16
mov
cmp
mov
push
nop
jnp
xchg
out
push
fnstcw
or
jbe
mov
xchg
dec
push
fadds
xchg
rdmsr
leave
inc
mov
mov
ret
push
pop
pop
xor
ljmp
mov
cmpsl
popa
jnp
mov
mov
sti
jns
lea
cld
mov
scas
leave
push
loopne
cmp
sub
mov
lea
adcb
cmc
or
dec
int
ds
movsb
enter
mov
popf
hlt
mov
adc
hlt
inc
ret
subb
sahf
test
lcall
xchg
es
movsl
cmp
push
roll
aas
dec
cmp
rcrb
jle
popl
push
pop
cltd
jl
inc
lahf
test
inc
in
in
faddp
push
gs
mov
in
insb
ljmp
mov
sub
dec
iret
dec
outsl
shrl
scas
imul
in
shll
fcmovnbe
mov
movsl
cmc
push
sub
insl
ror
xchg
inc
icebp
inc
outsl
jo
adc
xchg
cmp
push
sahf
lock
push
mul
adc
ds
xor
fstpt
mov
fidivs
push
xor
or
fmull
push
daa
outsl
jb
cmp
pop
sti
test
jnp
sarb
push
fld
pop
sti
adcb
add
hlt
and
push
std
cmp
or
add
iret
mov
push
test
insl
mov
dec
xor
jecxz,pt
inc
or
or
sub
lea
xchg
inc
in
fidivrl
mov
aad
push
clc
sahf
xchg
pop
sub
mov
lret
stos
sbb
cmp
shl
or
xchg
subb
icebp
mov
fstps
pop
das
or
xchg
xor
jp
jns
xchg
dec
add
out
add
aas
or
add
movsl
jmp
dec
dec
mov
scas
add
inc
jg
scas
mov
mov
jg
xor
fdivs
daa
pop
notb
inc
dec
fs
mov
push
jno
or
int
insb
add
imul
sarl
mov
push
pop
jge
mov
mulb
or
test
push
lret
adc
aaa
shll
pop
dec
push
mov
scas
std
or
sub
rclb
outsb
sub
dec
imul
jnp
sarb
or
jne
and
sbb
sbb
loope
push
adc
popa
pusha
pop
loopne
pop
out
cmp
popa
inc
sbb
cmp
and
mov
loope
dec
push
xchg
rorb
fcmovnu
or
cld
xchg
sub
push
fwait
dec
sbb
jecxz
jge
subl
push
pop
out
shll
jecxz
cmp
cmp
int
mov
movsb
adc
mov
xchg
outsb
out
cmpsb
aam
or
shrb
loop
jp
dec
test
movsl
or
and
pop
xlat
or
xchg
rorl
mov
adc
inc
dec
and
sahf
push
cwtl
mov
or
les
icebp
repnz
inc
lret
aad
rcll
lds
dec
je
icebp
jno
mov
add
inc
mov
and
movsl
stos
test
sub
repz
jp
lock
sub
sarb
dec
cmp
mov
lea
data16
inc
pushf
push
adc
xchg
fisubrl
ficomps
pop
int
xchg
aas
push
scas
pop
sub
mov
test
push
je
push
scas
inc
cmpsb
adc
shll
push
outsl
out
push
mov
lods
cmc
push
push
cmp
jle
adcl
mov
arpl
mov
enter
mov
clc
xorl
dec
fsubr
dec
xchg
out
dec
ret
jns
pop
decb
lcall
cwtl
mov
push
inc
dec
dec
lea
pushf
in
test
xchg
rorl
adc
fistps
ficompl
je
mov
ja
inc
shll
add
rol
pop
stc
jnp
xor
inc
or
js
ds
pop
adc
inc
dec
jl
fmul
push
mov
ret
leave
pop
xor
icebp
enter
in
xchg
arpl
pop
jmp
dec
push
lods
mov
xchg
rcl
pop
iret
movsb
cmp
das
les
xlat
sbb
mov
pop
push
test
das
or
xchg
inc
and
aam
fdivrs
push
pop
jb
addr16
cwtl
sar
dec
mov
leave
fnstenv
cmp
das
popa
and
or
fdivrs
pusha
jl
mov
add
and
popf
mov
into
scas
inc
jecxz
pop
outsl
lods
enter
js
fldl2t
shrl
xor
mov
loopne
aam
das
fstps
mov
pop
mov
push
sub
inc
push
ficoms
mov
dec
shrl
es
mov
and
adc
les
or
je
je
jno
and
loope
and
pop
loop
adc
es
cmp
notb
mov
out
mov
mov
mov
dec
jle
insl
cmp
dec
pop
push
dec
insl
aam
xor
ficoml
or
movsl
xor
loop
loope
cwtl
mov
mov
pushf
adc
loope
in
das
leave
sub
pop
int3
pop
stos
pusha
mov
jae
repnz
cmp
add
pop
push
loop
cmp
inc
jns
rolb
jg
fadds
xchg
or
imul
jle
jg
xor
arpl
jge
or
vpsubb
adc
push
mov
and
xchg
xchg
sub
aad
cmp
in
lcall
mov
arpl
pop
or
cmpsb
lahf
pop
jl
clc
or
iret
sbbl
movsb
jl
mov
mov
andl
fnstsw
pop
pop
repz
lods
jno
pop
imul
mov
cli
sub
sub
clc
xchg
and
in
cli
pop
mov
mov
addr16
pusha
sbb
fs
inc
lret
pushf
sbbb
xor
das
cld
pop
and
int
adc
inc
out
xor
sub
hlt
sub
fcompl
fcmovb
add
scas
pop
mov
test
add
test
cmp
add
loop
iret
push
push
repnz
xchg
and
stos
adc
dec
jmp
xor
fldl
push
sub
cmp
jo
loopne
pusha
int
in
out
or
int
lcall
jnp
xor
shlb
popf
adc
sub
addr16
nop
push
test
pop
mov
push
sub
xchg
insb
pop
imul
test
rorl
movsb
lcall
movsb
mov
xchg
sub
repnz
inc
xchg
popa
mov
arpl
cmp
aas
mov
std
fcoms
test
xchg
sub
clc
sbb
cmc
sti
and
sbb
stos
ds
add
pop
mov
cltd
fiadds
scas
xchg
mov
push
add
icebp
adc
outsl
jecxz
ss
int
dec
sbb
fmull
in
popf
pusha
mov
jge
fcomps
push
outsl
ja
bound
cmpsb
jo
xchg
icebp
int3
mov
ljmp
jno
dec
jnp
xchg
imul
stos
cld
montmul
cmpsb
mov
cwtl
je
js
test
or
cwtl
dec
adc
cli
inc
insb
mov
push
cli
lea
rorl
mov
and
imul
insl
mov
ljmp
mov
and
bound
jb
lds
lret
repnz
jp
cmp
jb
and
int3
xchg
mov
xlat
inc
das
mov
ret
lock
sar
adc
sbbb
dec
test
sahf
jno
stos
adc
out
test
sub
shlb
out
shl
xchg
inc
popf
pop
xchg
pushl
mov
jge
mov
mov
xor
xchg
sub
cld
int3
pop
sti
sbbb
lret
es
imul
xchg
mov
mov
call
or
mov
outsb
das
xchg
test
mov
push
fdivs
or
lods
or
sbb
sub
pop
inc
xor
jno
leave
inc
add
sbb
cmp
and
push
cmpsb
loope
xchg
xor
in
mov
iret
dec
cmp
xorb
stc
jno
sbbb
jb
mov
adc
mov
xlat
enter
mov
test
int
fs
mov
mov
mov
aad
add
popf
lahf
sub
iret
sbb
lds
mov
fsubrs
adc
add
inc
in
xor
sbb
imul
mov
sbb
add
mov
inc
arpl
dec
mov
call
push
daa
jnp
andb
stos
fisubs
push
and
cmpsl
in
es
dec
add
out
movsl
xchg
out
mov
dec
push
movsb
mull
int
scas
les
or
icebp
ficoml
js
movsb
fwait
cld
adcl
push
in
mov
sti
cmp
je
cs
out
xchg
or
enter
and
filds
dec
pop
scas
loopne
sbb
pop
or
int
mov
lret
jbe
adc
je
popa
nop
daa
cmp
scas
rorl
call
push
insb
pop
movsb
mov
sub
xor
jns
jnp
mov
test
fwait
or
inc
nop
repnz
jecxz
mov
outsl
jecxz
imul
xchg
mov
daa
movsl
in
xor
push
mov
inc
mov
in
cmp
or
mov
xchg
push
inc
hlt
mov
push
jnp
test
adc
adc
sbb
mov
mov
push
xor
jne
out
ret
rcll
cld
scas
dec
mov
dec
mov
fstp
inc
fmul
xchg
cmpsb
sub
mov
push
outsb
lds
repz
cmpsl
push
cltd
out
dec
lret
lret
insb
sbb
insl
int3
mov
movsl
jl
fs
int3
aam
dec
push
and
dec
xchg
cs
sbb
movsl
add
adc
mov
dec
repnz
fnstcw
xor
leave
mov
push
cltd
jno
imul
cmp
jo
cmp
xchg
scas
sbbl
add
sti
sbbl
outsl
add
lea
sti
mov
pop
cmpb
aad
das
lds
add
in
mov
xor
aaa
jp
jmp
xlat
push
sbb
jo
pop
cmp
mov
push
cld
xchg
cmp
sub
jge
mov
insb
popf
sahf
pop
lret
dec
dec
cmp
scas
xor
pop
mov
sub
jns
pop
stos
add
pop
adc
inc
jns
adc
add
push
adc
pop
fdiv
cmp
mov
adc
and
cmp
fld
sub
rol
mov
or
stos
lods
mov
jle
push
insb
stc
jno
adc
leave
jb
jno
movsb
push
std
test
mov
das
test
int3
out
pop
int3
mov
iret
cmpb
dec
aad
xchg
sbb
es
ss
popa
icebp
sbb
cmp
aas
inc
inc
pop
jmp
cmp
aaa
xchg
pop
mov
or
cmp
push
loope
lcall
fwait
clc
xchg
int
mov
in
inc
test
into
pop
arpl
jl
xlat
outsb
push
inc
std
mov
pop
mov
test
xor
pop
cmp
lods
addr16
js,pn
stos
lret
rclb
jo
call
or
clc
sahf
sub
not
shr
mov
cmp
lods
mov
dec
jae
dec
xor
jmp
cmp
sub
hlt
push
iret
or
mov
insb
push
jbe
cmp
push
scas
sbb
jl
mov
mov
push
fsubrs
in
mov
pop
ret
pop
sub
lods
cmc
std
loope
das
push
mov
push
jl
push
pop
int3
adc
out
jne
mov
andb
popf
pop
push
jno
fidivrl
pushf
pop
icebp
inc
int3
aas
pusha
aas
loop
dec
outsl
mov
adc
jae
push
or
movsl
test
loop
test
mov
pop
lahf
or
mov
jl
pop
adc
cmp
pop
xchg
test
mov
stc
popf
popa
lods
push
out
loop
cmpsb
xchg
dec
fdivs
imul
and
jbe
pushf
pop
fisubrl
cmpsl
mov
nop
out
adc
add
test
stos
dec
push
test
xor
je
pop
loopne
pop
push
mov
loopne
test
lret
fcomip
sbb
dec
sbb
das
adc
aaa
imul
stc
push
cmpsb
iret
data16
data16
and
ja
mov
and
sub
cmc
mov
enter
jmp
jle
pop
popf
lock
stos
mov
inc
pop
fistpl
arpl
mov
leave
push
shrl
test
clc
or
testl
mov
fistpl
cmpsb
push
xchg
int3
arpl
imul
dec
and
js
repz
out
adc
inc
cmp
lret
fucomip
out
scas
jne
nop
sub
sahf
mov
xchg
movsb
cmp
sub
sub
in
pop
hlt
push
sub
adc
or
mov
push
adc
pusha
decl
adc
js
and
inc
push
lret
and
pusha
bound
insl
xor
fwait
adc
and
add
add
xor
lods
lret
dec
rcrb
loop
sub
sbbl
aam
scas
pop
sahf
test
push
insl
sub
cmc
dec
sahf
dec
jo
inc
cld
pop
int3
push
sti
sbb
clc
outsl
dec
jle
pop
mov
cmc
adc
mov
shl
mov
inc
push
bound
push
in
push
gs
stos
cmc
paddusb
lods
xor
jecxz
dec
int
in
rep
xchg
test
and
pop
ficoml
pusha
call
in
mov
inc
andl
dec
cmp
sarb
aad
dec
or
js
ret
in
cmp
ret
jo
push
pop
adc
das
test
sbb
gs
repz
or
addb
xabort
pop
popa
push
fwait
cmp
inc
sbb
in
xchg
push
je
jno
fucom
les
repz
mov
cs
cmp
dec
in
xchg
dec
ret
fs
and
cmc
jl
nop
bound
push
and
stc
lcall
jp
pushf
jg
mov
mov
adc
adc
pusha
xorb
xor
lock
cmp
test
sub
ds
pop
mov
sbb
jnp
test
ds
bound
pop
loop
pop
mov
mov
nop
cmp
jmp
cwtl
pop
sub
lcall
call
scas
jo
lahf
pop
add
sbb
push
xchg
xchg
test
nop
jae
and
mov
std
and
jge
cli
sub
jg
or
test
fcomps
pushf
pop
sub
orps
lret
test
inc
insl
sarb
inc
fdivs
pop
pop
stos
bswap
dec
push
add
xor
inc
mov
lods
mov
std
mov
and
subb
mov
sbb
sub
outsl
mov
fidivl
pop
inc
and
mov
pop
stos
dec
lock
rcr
out
shr
ja
outsl
mov
shrb
int
inc
fs
pop
mov
addr16
rcl
jecxz
mov
mov
ljmp
cmc
sub
add
push
sub
and
andl
popl
sahf
shrb
pop
outsb
and
mov
lods
out
push
and
xchg
fsubp
mov
and
or
ss
jl
pop
mov
jb
jne
fdivr
pop
xchg
nop
stos
enter
test
repnz
cld
ret
dec
lret
cs
sub
xor
lcall
pop
adcl
ja
dec
into
gs
xchg
mov
sbb
leave
xchg
inc
cltd
dec
sti
test
lahf
cmp
aaa
or
inc
xchg
lods
imul
cmp
xchg
je
cmp
mov
mov
inc
roll
mov
push
clc
inc
lret
pushf
decl
mov
cld
ret
sub
jmp
jecxz
push
adc
imul
jge
into
mov
dec
jb
adc
or
inc
mov
stos
add
mov
lret
std
js
or
lahf
pop
fldl
fidivrs
xlat
lods
pusha
insl
testl
mov
add
xor
jne
loop
push
lock
int3
add
or
hlt
push
lcall
mov
xlat
mov
inc
xchg
adc
jb
mov
leave
dec
negb
pop
shl
lret
and
lds
loope
les
mov
loope
mov
imul
jmp
sub
imul
jo
adc
fistpll
and
xchg
jae,pt
aas
cli
mov
adc
int
mov
adc
sbb
fdiv
jae
jns
jbe
outsb
out
mov
stos
or
cmp
push
mov
adcb
adc
sub
out
inc
fbld
sti
fildll
adc
inc
pop
or
lcall
jae
jp
and
js
cmp
imulb
jo
jge
adcb
gs
insb
jle
xchg
stos
jne
lret
addr16
fidivrl
dec
loopne
int
arpl
xchg
dec
and
cmp
adc
ret
test
pop
mov
dec
jl
int
mov
sar
insl
loopne
and
jnp
iret
out
jns
das
pop
lahf
hlt
ret
mov
jno
mov
bound
mov
loope
xchg
test
cs
xchg
inc
stos
insb
loop
push
inc
fisubl
mov
shlb
data16
push
adc
inc
loope
xchg
lods
clc
movsl
jl
out
jl
mov
lcall
push
je
cli
fsubrp
jmp
xor
cmp
movntq
mov
test
mov
int
xor
xchg
cmp
adc
dec
enter
sbb
mov
add
mov
mov
pusha
outsl
sub
dec
lods
mov
aaa
repz
aaa
mov
sbb
push
movsb
test
xlat
repz
and
rorb
and
mov
push
add
mov
push
mov
sub
rcr
mov
add
or
dec
cmp
repnz
mov
mov
sub
loop
pop
sub
inc
lret
lret
insl
add
les
lea
inc
leave
lret
sbb
xchg
andl
xchg
arpl
ja
xor
in
inc
std
pop
jns
and
je
lods
bound
imul
inc
imul
cld
lret
mov
jp
sahf
loope
fisubrs
sbb
pop
cmp
ljmp
into
jp
imul
inc
addb
cmp
mov
imul
scas
mov
sti
cwtl
jle
cltd
and
add
sbb
jb
xor
add
rclb
xor
sub
stos
ret
add
sbb
sub
mov
in
xor
pop
jp
push
jge
xor
or
xchg
jge
mov
xor
lock
or
rclb
mov
xchg
mov
frndint
inc
mov
pop
stos
mov
jns
sbb
jle
pop
xor
in
mov
add
daa
leave
push
sbb
js
insl
dec
dec
lahf
cltd
inc
pushf
out
rcrl
pop
or
sub
rolb
jp
test
jbe
sub
int
or
dec
or
push
fwait
sbb
add
xor
fdivl
aas
xchg
pop
jp
popf
stos
cmp
mov
shr
add
rclb
int3
jno
or
sahf
gs
insb
leave
jb
xchg
and
cmp
xchg
cwtl
push
mov
push
jl
fdivs
andl
mov
sti
xchg
sahf
mov
push
dec
xchg
ss
mulb
lret
or
sbb
call
push
pop
ljmp
sti
lea
fucomip
cmp
mov
lods
hlt
pushf
sub
lods
aas
pop
dec
mov
lea
adc
push
fwait
aaa
cmp
adc
push
jbe
inc
mov
sub
inc
mov
lea
xor
inc
and
jae
ss
pop
das
mov
xchg
arpl
imul
cmp
sbb
mov
xchg
incl
xor
mov
push
xchg
stos
cmp
push
cmc
mov
pop
cli
or
cmp
xor
arpl
xchg
sbb
inc
cltd
aad
push
lcall
imul
loopne
aam
gs
cmpl
pop
dec
pop
pop
pop
out
mov
xchg
cmp
or
and
fldl
gs
dec
jg
cld
shll
movl
rorl
add
inc
sub
in
dec
loop
daa
jbe
subb
shlb
adc
enter
pop
scas
adc
sahf
pop
adc
xor
scas
push
popf
fisttps
xchg
stos
sti
jmp
mov
add
vpaddw
ret
gs
imul
push
movsl
lds
into
and
cmp
sbb
mov
iret
out
aam
jmp
imul
jnp,pn
or
cwtl
loop
fisttpl
in
inc
and
cmp
icebp
add
arpl
sbbb
pop
add
test
mov
andl
leave
jb
pop
lods
inc
jo
int
mov
leave
ljmp
shrl
sub
rcrb
xchg
xchg
popa
addb
andl
dec
or
clc
es
sub
call
adc
leave
cmp
int3
arpl
test
jecxz
mov
or
pop
jne
cmp
es
xchg
jnp
inc
lods
inc
inc
push
in
je
adc
inc
popf
pop
icebp
lret
push
daa
and
repz
push
call
call
out
jae
cmp
mov
or
stos
cmc
mov
arpl
jns
cli
pop
push
shrb
insl
mov
fcomi
lahf
jo
fwait
xor
mov
mov
enter
jbe
xor
nop
or
inc
es
pop
mov
or
xlat
mov
data16
scas
pop
sbb
paddb
mov
mov
rclb
or
stc
mov
and
xchg
lret
fs
push
mov
and
fsubrp
or
mov
jle
push
and
iret
xor
sbb
test
into
mov
outsl
lcall
inc
pop
sbb
scas
xchg
scas
fisttps
lcall
rorb
cmpsl
cmp
and
ss
push
imul
sbb
sub
fiaddl
mov
outsb
ds
xor
push
fisubl
jae
jecxz
mov
leave
das
xchg
and
mov
xor
fwait
outsb
push
in
jns
in
call
std
in
or
out
sbb
lcall
lea
iret
stc
pop
mov
fchs
js
mov
jnp
push
iret
push
js
or
js
int
je
das
pop
push
shlb
pop
or
je
mov
push
out
js
fcomps
jns
lahf
mov
pop
xchg
mov
repz
dec
adc
movsw
sub
mov
mov
shrl
mov
jge
icebp
inc
sbb
leave
sub
cmp
mov
xchg
push
ss
fcomps
aad
sti
nop
adc
lds
mov
mov
pop
xor
and
pop
std
divl
jno
inc
and
jns
pop
inc
mov
jo
cltd
xchg
jp
subl
test
xchg
stos
ds
fldcw
nop
jecxz
mov
mov
lds
scas
pop
insb
loope
pop
rcrb
jle
lret
cmc
inc
cld
roll
lds
les
rorb
mov
jmp
cmpl
ljmp
add
roll
mov
xchg
dec
dec
xchg
dec
aad
add
and
rol
cmp
pop
and
mov
cmp
xorl
adc
outsb
leave
pop
imul
jnp
iret
pop
pop
mov
push
sbb
dec
negl
lret
es
push
jmp
mov
ds
and
arpl
dec
mov
shl
movsl
ds
inc
scas
aaa
mov
lds
mov
insl
imul
or
gs
cltd
call
js
lcall
repnz
orb
pop
push
or
cmp
test
sbb
dec
es
jae,pt
in
std
lods
xchg
cmp
insb
jb
cmc
xor
lods
inc
or
int3
arpl
dec
mov
andl
xchg
or
ret
ret
push
push
std
or
jae
mov
mov
xor
fxch
sbb
push
push
jbe
jb
fiaddl
xchg
xchg
cmp
movsl
sub
cli
mov
adc
and
pop
and
test
inc
xlat
xchg
gs
stos
sbb
out
xchg
mov
lods
mov
outsb
push
dec
in
pop
push
imul
xor
pop
fldenv
sub
iret
push
pusha
cmp
push
ficoms
shlb
pop
push
dec
addr16
cli
pop
dec
vcvttpd2dq
divb
sub
xchg
or
cmp
shl
stos
fnstenv
pop
adcb
mov
bound
ljmp
outsl
test
aam
bound
inc
dec
mov
add
cmp
repnz
xchg
cli
lods
fcmovnu
mov
shl
test
loope
xchg
mov
push
out
and
inc
jne
inc
fcompp
sbb
xchg
ret
inc
add
pop
test
jmp
not
pusha
or
or
mov
xor
jge
cmp
add
xor
stc
je
fstps
pop
and
inc
subb
add
js
xchg
stc
pop
jge
add
jp
jge
mov
mov
mov
or
jecxz
es
and
sti
inc
iret
and
cwtl
mov
push
mov
out
test
pop
or
push
in
ret
pop
js
in
repnz
mov
int
sub
mov
inc
dec
int3
adc
dec
jecxz
pop
bound
mov
push
cmp
fldl
mov
cmpsb
in
sub
sbb
push
push
push
icebp
popa
inc
sub
lahf
pop
jle
repnz
aas
ja
out
pushf
cmp
mov
sub
and
or
or
mov
jp
inc
iret
fldt
push
shrl
es
mov
push
inc
fcmovu
fistpll
fldenv
pop
adc
mov
sarb
sbbl
call
and
inc
mov
enterw
dec
frstor
stos
sub
faddl
out
insl
out
fwait
jo
mov
decb
mov
adc
in
jb
dec
push
out
sub
mov
pop
jns
push
cmp
push
pusha
into
push
xchg
imul
mov
loope
adc
imul
adc
adc
test
gs
dec
insb
nop
sahf
cmp
jg
jp
mov
addr16
pop
cmp
lret
cmp
adc
enter
dec
xchg
push
pop
add
lret
jl
ret
cmpb
push
jo
sub
cmpsl
loop
insl
pop
ficoms
insl
das
ljmp
aas
xlat
mov
daa
mov
add
fs
push
cli
xchg
hlt
orl
push
aam
jp
sub
pop
lcall
ret
subl
jl
lret
mov
cs
in
cmp
subl
ljmp
mov
push
std
rcll
insl
xchg
test
into
mov
sbb
xchg
mov
lcall
sahf
sbb
jo
push
shrl
pop
cmc
popf
cmpsl
sub
stos
xchg
xchg
cmp
repnz
in
and
fsubrl
inc
scas
mov
inc
scas
std
out
dec
lahf
leave
repz
xchg
push
cltd
idivl
pop
popf
pop
xor
dec
cmpsl
pop
in
jl
rdtsc
adc
rcr
mov
push
dec
sub
enter
pop
mov
in
xor
call
mov
pushf
andb
int
jae
push
inc
aad
mov
test
lods
push
in
push
out
sub
lcall
in
xchg
in
and
jne
or
xchg
jle
sti
daa
lret
stc
mov
adc
inc
push
fstpl
pop
imul
push
adc
inc
xor
roll
xor
imul
leave
xchg
or
inc
xor
out
mov
in
jno
pop
aaa
out
fucomi
xchg
adc
mov
daa
cmp
stos
sbb
cwtl
and
sub
ds
popf
and
jbe
clc
inc
and
fstpl
mov
testl
jb
out
daa
adc
je
and
xor
inc
rclb
lret
xor
pop
popa
jl
push
call
cld
or
andl
das
scas
sbbl
aas
add
and
movsl
sti
inc
orb
xchg
add
test
repz
add
sbb
mov
add
fidivl
push
test
pop
mov
sub
movsb
jnp
mov
add
push
mov
or
dec
mov
adc
test
fst
test
adc
mov
aam
sbb
pusha
xchg
dec
mov
std
mov
mov
dec
or
mov
or
mov
mov
call
rcrl
jp
jp
cmp
jl
arpl
mov
adc
pop
sahf
jbe
push
pop
xchg
and
xor
mov
and
add
push
adcb
jg
cmpsl
mov
int3
push
inc
decb
jnp
repz
das
add
nop
or
cmp
jp
mov
js
mov
ss
loop
call
pop
adc
imul
aas
mov
loope
sub
fnstenv
mov
jns
inc
jo
adc
adc
popa
outsb
push
fwait
subb
fiadds
out
test
fwait
jl
mov
inc
push
xor
out
xor
push
fwait
repz
mov
cmc
je
adcl
or
jae
fcomps
and
call
sbb
into
adc
cmpl
add
je
scas
inc
sub
or
aam
int
jecxz
adcb
jae
and
rclb
cmp
imul
pop
cltd
adc
sbb
mov
push
ljmp
jb
aas
popl
xchg
movsb
mov
repz
jns
idivl
dec
xchg
lcall
mov
outsb
sbb
idivl
mov
nop
in
mov
jae
aam
jne
mov
add
rcrl
mov
pop
and
stos
sub
out
sahf
sahf
hlt
xchg
sub
mov
iret
dec
add
jb
je
mov
addr16
aaa
js
cwtl
mov
pop
jbe
into
mov
lea
daa
shlb
loopne
and
xor
popa
clc
addr16
inc
loope
or
lods
cmp
sub
or
clc
mov
inc
minps
test
gs
loope
inc
and
sarb
lret
scas
push
out
adcl
je
outsl
mov
inc
and
notb
mov
stc
push
add
aaa
lahf
pop
stc
lds
jae
ret
xorb
test
mov
ljmp
or
rcll
adc
mov
pop
push
pop
int3
icebp
fidivrs
pushf
daa
inc
fstl
fidivl
fs
and
outsl
pop
icebp
inc
xlat
and
jns
cmp
pop
icebp
or
add
xchg
or
fs
xchg
popa
sub
addr16
mov
sbb
mov
pushf
outsb
imul
addl
or
rol
push
out
xor
and
sbb
dec
mov
push
fsubrl
iret
mov
aas
es
jle
dec
shlb
xchg
insl
orb
dec
aam
fwait
pop
mov
mov
fs
push
and
popf
inc
arpl
cltd
xor
lods
arpl
mov
jmp
mov
pusha
xchg
sbb
inc
xchg
loopne
inc
push
adc
incb
cld
iret
or
cmova
inc
dec
xor
mov
adc
and
adc
fwait
adc
push
xchg
ret
cli
test
outsl
inc
jecxz
xchg
or
cmp
mov
cmp
or
dec
dec
std
test
shlb
adcb
cld
rcr
push
popf
fs
pop
or
pop
xor
xchg
dec
lods
sti
pop
imul
fdivr
push
or
jb
sbb
js
sub
mov
call
adc
or
lods
nop
stos
push
push
lahf
pushf
jb
in
fwait
xor
sub
inc
rcr
insl
mov
hlt
mov
out
mov
test
push
das
cmp
sahf
fists
pusha
addr16
jp
lea
push
push
push
movsl
mov
cmp
fstl
lds
mov
jecxz
data16
push
arpl
sbb
test
push
adc
ja
stos
sbb
int
int3
aad
cmp
ficoms
pop
repz
data16
sarl
pop
pop
bound
xchg
fildl
scas
movsb
pop
mov
rorb
jmp
xchg
pop
xchg
in
ljmp
out
popf
lcall
or
ja
insl
sub
or
aam
push
mov
data16
pop
ss
xor
loop
lock
xlat
out
test
lock
pop
xor
lods
cli
loope
push
in
xor
or
lods
std
mov
test
cld
dec
xor
jmp
gs
mov
ds
jno
pusha
leave
or
sub
es
loope
loop
insl
aas
and
loopne
sahf
or
mov
lahf
jbe
inc
loop
jo
je
or
pop
mov
repz
stos
xlat
inc
fdivl
test
fmull
cmpsl
in
jbe
push
stos
inc
xor
pop
cwtl
mov
aaa
mov
and
xchg
mov
inc
mov
out
jp
mov
stc
int
stos
mov
scas
jb
and
cld
cmp
and
hlt
and
add
add
mov
clc
ficoms
incl
and
sahf
daa
push
orb
xchg
adc
and
jno
or
rolb
test
cmp
mov
iret
push
out
ficoms
push
or
cmp
sub
cmpl
enter
arpl
and
fnstsw
jnp
mov
mov
jnp
mov
cs
stc
negb
jecxz
add
lcall
cli
jns
std
cltd
inc
outsb
mov
mov
je
enter
pop
outsl
push
mov
lds
xor
nop
outsl
and
xchg
add
push
xor
lock
inc
cld
xchg
xor
testb
or
popa
imul
pop
mov
jle
jl
xor
inc
ret
jmp
cld
pop
push
out
add
ds
push
or
arpl
sbb
data16
xchg
int3
lahf
sbb
gs
pop
cltd
fwait
push
out
inc
mov
imul
in
insb
std
or
stc
out
dec
fidivrl
push
popa
cmp
roll
adc
stos
mov
xor
push
jbe
in
bound
fdivl
ror
mov
mov
popf
shr
push
inc
aaa
shr
xchg
shll
push
mov
movsb
jge
into
enter
je
sub
ficomps
shr
daa
int
jne
sbb
mov
jmp
push
popf
pop
mov
xor
in
jecxz
adcb
out
mov
shlb
in
fwait
mov
das
test
lret
xlat
mov
pop
xchg
mov
fstps
mov
scas
inc
xlat
mov
loope
sbb
push
mov
sbbl
mov
inc
mov
bound
mov
dec
dec
mov
dec
in
dec
incl
aad
in
cs
jmp
and
stc
sub
fsts
jb
ljmp
ret
mov
ficompl
or
and
inc
adc
jae
int
and
mov
sub
out
pop
xchg
movsl
mov
mov
ret
idivb
pop
xchg
idivl
jo
jg
dec
aam
loop
jns
clc
loopne
ret
adc
and
cmc
repz
inc
push
jae
lcall
popa
mov
bound
mov
inc
xchg
repnz
inc
pop
xchg
lcall
cmp
and
sbb
hlt
cmp
popl
cmp
lods
add
arpl
out
stc
cwtl
lret
and
imul
push
mov
shl
cmp
in
stos
xor
clc
jno
lock
lea
leave
inc
fadds
and
adc
std
aam
aaa
in
es
cmp
sti
or
js
loopne
mov
es
sarb
mov
inc
or
lods
mov
sub
daa
movsb
xor
nop
test
int
fbstp
or
and
inc
lea
add
inc
mov
add
jecxz
enter
data16
ret
out
or
add
icebp
fistpl
hlt
lret
mov
push
rorb
inc
push
scas
lret
int
stc
push
incl
mov
insl
shrl
adc
and
setnp
sbb
insb
add
popa
notl
ja
lock
mov
inc
dec
loopne
stc
xchg
sbb
push
sarl
cmpsb
and
jle
loopne
push
sbb
mov
aam
cmpsl
addr16
push
mov
jecxz
insb
in
pop
push
jae
daa
call
cmpsb
pop
sub
cmp
jp
or
or
pop
sahf
mov
test
insb
mov
pop
jbe
pop
popf
mov
xchg
scas
adc
push
popa
lods
xchg
adc
sbb
imul
mov
mov
or
adc
js
mov
test
test
mov
adc
push
jno
scas
push
xchg
shr
sub
inc
ljmp
inc
fcmovnb
push
fisubs
in
mov
push
addb
push
sbb
add
mov
data16
xchg
je
mov
mov
cmp
popf
lods
nop
add
adc
and
cs
es
add
imul
stos
cmp
test
mov
push
insl
scas
push
mov
out
jl
xlat
jle
in
test
mov
push
rcrb
inc
aad
xchg
pop
and
lahf
push
out
xchg
inc
mov
leave
sub
test
sub
fmull
mov
cmp
sub
jecxz
leave
aam
add
test
pushf
fsubrs
rcr
jbe
sub
push
push
std
or
sti
fmuls
stos
les
sbb
sbb
cmp
lods
hlt
in
jmp
pusha
mov
xchg
mov
jg
cmpsb
mov
rcl
push
mov
xor
mov
xchg
sbb
cwtl
shrb
add
lret
ljmp
fwait
or
jl
cmp
in
dec
mov
adc
dec
lahf
hlt
cmp
fwait
mov
movsb
test
ljmp
jbe
sub
xor
pop
sub
dec
push
imul
ja
xor
out
std
aam
jne
rclb
cmp
inc
repnz
pop
mov
or
cwtl
pushl
xor
or
out
mov
mov
fldl
add
sbbl
xlat
fidivrl
lahf
xchg
dec
mov
xor
ret
arpl
dec
pop
mov
rorb
aad
sahf
divl
jnp
pop
or
jbe
mov
int
xchg
mov
push
pusha
testl
push
push
mov
sbb
jle
sub
and
cs
jo
add
xor
mov
inc
jb
repz
inc
lret
xchg
mov
jb
sbb
pusha
sbb
ja
rol
fadds
sahf
jl
popf
push
out
pop
shrl
dec
xor
xchg
loope
cmpsl
jp
push
rcl
fwait
cs
cmc
outsl
insl
sbb
testb
jle
pop
cld
fidivrs
adc
jg
xchg
ss
push
mov
jnp
call
add
dec
mov
and
mov
add
or
enter
fnstsw
sbb
dec
xor
lods
rcrb
fsubrp
fcompl
push
test
scas
adc
ficoms
push
or
aaa
cmpsl
ret
push
mov
mov
adc
adc
gs
cmp
leave
cmp
idivb
insl
or
clc
popl
data16
loopne
or
xor
sbb
in
cmp
adc
stc
and
addr16
push
add
in
inc
and
push
imul
jno
add
inc
insl
fdivl
out
jo
mov
aas
push
fldt
fwait
mov
inc
sbb
adc
pop
sbb
pop
mov
faddp
inc
ds
stc
sbb
lods
ficompl
xor
es
push
out
and
setg
out
cli
stc
pop
or
fbld
roll
dec
neg
fimuls
mov
pop
push
scas
mov
dec
pop
mov
pop
jo
adc
jge
mov
stc
add
sbb
sub
jne
nop
divl
and
xchg
idivl
and
out
xchg
into
iret
add
in
test
adcb
les
xchg
xchg
insl
ljmp
pop
rorb
int3
xchg
adc
jp
pop
hlt
gs
repz
arpl
cmp
mov
stos
shlb
xlat
aas
push
sti
push
or
pop
dec
repz
stc
nop
ja
dec
pop
push
aad
or
sbb
mov
shl
xlat
lds
ret
fsts
fsubs
pop
cmpsb
pusha
jo
push
fwait
xor
or
fisttpll
es
cmp
cmp
push
fisubs
and
xchg
and
inc
gs
fcmove
sbb
out
add
hlt
pusha
add
or
test
cmp
sbb
sub
bound
scas
push
or
in
xchg
ret
push
xchg
mov
push
adc
mov
outsl
add
push
ljmp
fnstsw
push
imul
imul
jge
mov
and
and
leave
push
ja
adc
into
sarb
insl
mov
jb
pop
or
mov
mov
lods
xchg
xchg
xchg
outsb
dec
cmpsl
adc
sub
jo
test
sub
andb
sub
and
sahf
rol
or
push
out
mov
cmpsb
into
xor
and
subps
dec
movsl
jge
mov
dec
movsl
icebp
loope
xorl
test
ja
push
push
mov
ret
jnp
lea
mov
out
cmp
add
mov
jle
xchg
icebp
mov
rcrb
add
pushf
in
add
aaa
add
push
pop
loop
dec
popa
rolb
jecxz
cmp
sub
test
xor
inc
dec
repnz
out
ficomps
hlt
push
test
jns
xor
jge
iret
fistl
dec
add
pushf
cli
mov
imul
jg
sbb
mov
or
push
push
daa
data16
xchg
add
outsb
adc
mov
dec
test
in
mov
inc
mov
xor
inc
pusha
adc
add
xchg
dec
out
jno
sahf
test
jns
loope
sub
add
shlb
fs
xchg
adc
cltd
xor
out
lea
inc
in
lods
imul
sbb
int3
lahf
ss
or
xor
in
jae
iret
adcb
lods
inc
pop
pop
hlt
inc
cmp
jb
in
ljmp
out
test
ljmp
insl
jne
mov
or
les
adc
or
mov
leave
cs
pop
rcll
mov
popa
popa
cs
orb
sub
das
dec
dec
aaa
mov
push
mov
test
mov
jae
or
cmp
mov
dec
mov
fldt
mov
push
adc
loopne
scas
push
push
pop
mov
fwait
push
mov
inc
popa
sub
xlat
aas
pop
mov
sub
in
jecxz
xchg
add
jmp
sbb
lods
cmp
lret
pop
mov
and
je
pop
sbb
dec
loopne
cmp
icebp
jmp
cmp
cwtl
loope
sarb
xor
jne
repnz
adc
dec
and
lcall
sti
aas
mov
out
loopne
int3
xor
jbe
notb
inc
rcrl
jmp
mov
repnz
and
and
pop
sub
cmp
jnp
lock
ret
outsb
fsubp
xchg
add
sub
rorl
xchg
jp
dec
in
push
in
jp
push
sub
dec
jb
subl
in
pusha
hlt
clc
nop
daa
sub
pusha
sti
ret
dec
shrl
fwait
in
mov
jl
in
mov
dec
call
mov
ret
mov
mov
and
in
pop
loop
mov
dec
pop
lock
push
imul
mov
mov
mov
or
test
cmp
xor
or
pop
adc
sub
mov
les
xchg
and
cmp
mov
and
push
stos
cmp
js
int3
mov
dec
and
je
mov
mov
xchg
in
fsqrt
mov
mov
iret
mov
jb
xor
icebp
fs
xchg
imul
dec
ds
pop
jo
add
mov
clc
inc
stos
stc
push
xchg
fdivrl
out
sbb
or
and
sub
pop
sbb
xchg
div
pop
xor
and
cli
aam
movsl
and
or
nop
or
add
mov
jl
enter
arpl
xchg
imul
push
call
add
outsl
loop
stos
popf
dec
mov
iret
xor
popf
lods
and
int3
pop
xchg
pop
out
inc
add
enter
stos
adc
std
xchg
mov
jb
imul
sbb
lret
cmp
aas
call
add
loop
inc
xlat
adc
cs
xor
inc
out
add
push
orl
or
lret
cmpsl
rorb
lds
imul
jne
in
add
decb
mov
imul
jge
push
pushf
cld
mov
inc
xor
cmp
xchg
out
int3
pop
pop
lds
mov
jae
push
xor
xchg
shrb
inc
sub
jns
mov
cld
leave
fstpt
shl
lods
mov
mov
ret
and
leave
mov
jns
cmp
jb
and
andl
test
inc
sub
pop
popa
xor
mov
lcall
aam
neg
addr16
out
leave
mov
fbld
push
roll
xchg
bnd
push
lods
and
xor
push
out
cld
fstpt
sub
jnp
pop
lods
out
adc
xchg
pop
fs
sbb
popf
addr16
lret
mov
rclb
add
inc
fcomps
xchg
or
pop
imulb
mov
xchg
loop
iret
mov
jmp
daa
outsl
sahf
mov
pop
sbb
lock
lcall
ja
push
icebp
repnz
jbe
jl
sahf
push
std
xchg
outsl
nop
pop
nop
sbb
repz
cmp
cmpsl
out
les
xchg
enter
in
aad
pop
addr16
lret
fbstp
leave
cmp
loope
push
sbb
js
test
sbb
xchg
js
or
pop
jns
adc
ljmp
mov
ret
jge
and
leave
popf
cmpsl
aad
in
stos
imul
cmp
aas
pop
jae
jne
adc
dec
loopne
shrl
xlat
imul
test
mov
stos
jl
mov
mov
aaa
dec
arpl
sub
sbb
push
jle
adc
jl
or
out
arpl
dec
or
aaa
pushf
aad
mov
mov
in
stc
push
inc
faddl
arpl
outsl
pop
loope
cmp
cmp
fs
iret
lahf
add
bound
js
jl
cmp
push
daa
mov
push
push
mov
mov
sub
cli
inc
and
in
lret
dec
fistpll
fcmovne
and
dec
mov
loope
scas
mov
xchg
xchg
stos
jns
mov
mov
pop
xorl
loop
jecxz
fnstsw
dec
mov
mov
shrb
or
lret
out
push
aad
jne
push
push
into
fiadds
lds
pusha
jb
push
scas
pop
sbb
dec
lds
and
notb
cwtl
pop
dec
cmc
arpl
sbb
mov
loopne
ja
cmp
jo
int3
cmp
pop
xsha1
cmpsb
mov
mov
push
add
subl
push
and
adc
and
hlt
mov
inc
icebp
jl
popf
xchg
in
js
lock
call
jno
hlt
mov
incb
add
out
xchg
out
push
outsb
adc
add
adc
mov
push
or
lret
mov
cmp
scas
mov
mov
fnsetpm(287
mov
push
cmc
xor
lret
in
xchg
jo
leave
jnp
push
movsl
sub
test
xor
fbstp
cwtl
rorl
ret
js
and
sbb
std
hlt
imul
push
lret
outsw
sbb
stos
mov
push
je
mov
test
xchg
dec
popf
xor
add
movsb
mov
inc
push
or
push
mov
jmp
dec
ja
sub
imul
xchg
andb
and
or
mov
in
mov
in
ljmp
pop
int3
pop
movb
xchg
ret
bound
sbb
icebp
inc
jb
xchg
into
enter
shr
mov
sti
into
loope
pop
loop
xor
adc
mov
ja
inc
sub
in
ret
dec
mov
iret
es
sti
lea
and
add
aad
mov
adc
push
pop
addb
jo
xchg
mov
inc
add
xchg
and
lret
push
push
lods
xchg
push
and
lahf
ss
xor
inc
mov
jbe
dec
pushf
jae
inc
ljmp
out
pushf
mulb
mov
sar
leave
jbe
gs
mov
cmpsl
mov
pop
dec
repnz
iret
lock
xlat
inc
xor
ud1
aaa
inc
fdivrs
pusha
andb
movl
scas
sbb
aam
and
lret
or
xor
sub
inc
sahf
repz
filds
loop
or
mov
aaa
jbe
outsb
mov
jp
std
data16
xor
sbb
add
shrb
or
sub
enter
jno
leave
lret
jne
insl
and
lods
mov
add
jg
ljmp
mov
add
es
pop
outsb
outsl
adcl
stos
test
repnz
loopne
sbb
add
jmp
xchg
push
inc
and
add
mov
mov
mov
rol
or
loopne
fwait
mov
mov
or
add
aaa
mov
icebp
xor
mov
in
std
nop
out
or
sbb
dec
popf
cld
xor
imul
sub
aad
inc
push
and
dec
adc
shr
inc
xchg
cmp
or
pop
push
pop
movsl
sub
xchg
xor
cld
push
pop
mov
adc
aad
push
mov
scas
mov
je
dec
out
adc
ja
bound
xchg
xchg
fucomp
clc
mov
xchg
mov
addr16
cmp
mov
pop
cmp
sub
ds
dec
push
xor
dec
pusha
xor
xor
push
inc
dec
xor
inc
ds
dec
mov
out
push
inc
out
pop
xchg
in
cmp
icebp
dec
push
jnp
cmc
call
mov
cmc
xchg
mov
and
and
pop
insl
xor
push
hlt
xchg
outsb
lock
aad
push
mov
negl
mov
jb
pop
cmp
test
xchg
test
in
mov
inc
push
aaa
adc
fs
enter
outsb
clc
shll
aaa
out
adc
mov
outsb
inc
aam
push
sub
test
pop
cli
sbbl
cli
inc
bswap
std
test
sub
and
lahf
adc
jne
xor
mov
nop
jne
lods
mov
dec
ja
aad
imul
je
daa
or
xchg
pop
fsubl
cmp
in
cwtl
mov
pop
enter
shrl
mov
outsl
rcll
cmp
addl
mov
add
out
out
lcall
adc
into
aas
aad
mov
loop
cli
pop
pop
stos
pop
push
sub
inc
in
leave
sub
movsl
xchg
pop
add
add
xor
mov
mul
pop
mov
fsubp
pop
aam
cmc
push
push
or
test
pop
in
std
mov
xor
mov
aam
ljmp
and
and
inc
mov
cli
pop
pusha
pop
add
test
fdivl
push
gs
pop
inc
arpl
add
out
addl
das
mov
and
fucomi
in
test
pop
repnz
cmpsb
je
das
cmp
lahf
push
int3
push
cmpsb
add
popf
mov
jmp
push
int
repnz
mov
data16
in
mov
cmc
stc
mov
repz
pop
adc
push
fdiv
adc
popa
andl
leave
out
mov
ljmp
push
mov
jne
mov
stos
lds
sarl
or
inc
adc
fsub
adc
sub
inc
repz
stc
jo
insl
movsb
xor
stos
mov
jns
ret
inc
and
and
and
les
xor
fisubrs
iret
fstps
push
imul
adc
pop
pop
daa
mov
insb
jae
inc
mov
int
repz
testl
popa
aad
dec
cmp
adc
mov
dec
out
cli
mov
adc
fnstcw
shr
mov
mov
fcos
sub
sub
lret
xlat
mov
repz
cmpl
cmpsb
mov
pop
sbb
jae
fcmovne
rcll
pop
daa
addr16
ljmp
lahf
adc
mov
mov
xchg
xchg
aaa
scas
and
push
in
mov
xchg
adc
jb
and
inc
adc
fisubs
pushf
in
sub
add
cmp
sbb
mov
test
jno
mov
push
xor
add
push
nop
in
repz
push
sub
or
ds
mov
inc
sbb
mov
push
or
push
mov
mov
sbb
adc
js
aaa
rol
in
xor
outsb
inc
divb
sti
scas
sub
pop
loopne
mov
lods
inc
mov
cmp
fists
lea
xor
mov
xlat
loope
das
pop
dec
mov
outsb
sbb
pop
out
sub
fidivrl
sbb
in
insb
js
lock
lods
xchg
push
push
test
xchg
mov
mov
xor
xchg
sub
dec
push
sarb
loope
mov
add
shl
lea
push
loop
dec
or
push
cmp
in
sbb
jb
mov
nop
and
dec
loop
aad
mov
pop
aam
int
add
add
mov
out
add
pop
adc
add
nop
stos
add
adc
push
add
add
js
mov
push
mov
jl
out
into
repz
into
pop
cmp
pop
push
adc
pop
mov
pop
pop
shr
addr16
mov
std
inc
imul
push
arpl
push
jg
pushf
test
into
enter
mov
push
lods
inc
rcr
dec
loopne
std
dec
mov
aaa
hlt
popl
aad
cltd
jno
lret
sahf
xor
mov
inc
movsl
aaa
call
pop
mov
dec
testl
lahf
shrb
xor
ljmp
ljmp
jne
inc
mov
push
sbbl
xchg
popf
cli
jns
inc
aas
adc
popa
in
cmp
adc
sbb
add
insl
movsb
push
orl
cmp
xchg
add
dec
lahf
sub
and
loope
leave
jb
push
aad
fdivp
adc
jmp
cmp
cmp
add
lds
mov
inc
test
inc
cltd
sbb
inc
insb
and
push
jmp
mov
dec
ret
imul
and
roll
adc
mov
mov
leave
shll
int3
movsb
and
push
inc
adcb
inc
jbe
enter
bswap
mov
ja
nop
outsb
stc
push
sub
cmpsb
insl
in
pop
jnp
addl
push
xchg
or
stos
ljmp
call
inc
push
push
pop
dec
mov
and
push
rol
push
lret
dec
imul
mov
dec
in
push
xor
jge
inc
push
je
in
int
shl
movsb
lock
jne
xchg
in
rclb
dec
lods
add
outsl
add
adc
mov
mov
pop
lahf
popa
shrl
imul
jno
jg
outsl
push
pop
pop
xor
mov
adc
inc
fbld
out
sub
adc
push
jae
movsb
je
fidivrs
outsb
and
sti
in
dec
inc
mov
cmpsb
fstpt
aam
dec
xchg
pop
jbe
out
frstor
insl
xor
hlt
sbb
sbb
inc
ret
insb
add
fiaddl
xor
ja
mov
dec
aam
popf
dec
icebp
mov
test
xchg
add
or
xchg
and
jge
andb
push
jge
fs
inc
add
mov
orl
adc
xchg
dec
sbb
pop
pop
shr
dec
mov
cmp
cwtl
daa
out
popa
mul
mov
sti
repnz
lahf
das
loopne
lahf
adc
push
fs
pushf
ss
push
lds
cmp
xchg
outsb
pop
out
testl
jp
pop
jl
cmp
loopne
mov
subl
add
jge
loop
xchg
cltd
lahf
or
inc
outsb
insb
scas
fsub
push
jo
jae
dec
aad
aas
aam
push
sub
jg
pop
imul
mov
cmpl
loopne
and
inc
icebp
pushf
and
inc
imul
fbstp
fxch
mov
pop
jne
fwait
mov
int
sub
idiv
jbe
outsb
and
inc
cmpsb
mov
push
cmc
fs
and
rcr
imul
mov
std
repz
or
testb
fdivrl
sub
push
imul
xorl
mov
rcrl
mov
divl
pushf
mov
push
imul
ljmp
jb
lea
cmp
cmp
mov
shll
inc
stc
push
cs
mov
pop
xor
sbb
add
mov
jne
hlt
iret
sar
and
and
jnp
popa
insb
mov
test
scas
push
out
ss
call
or
dec
loopne
push
shlb
push
std
shll
aaa
repnz
mov
mov
dec
insb
js
sub
cwtl
jmp
cmc
negl
fdivl
add
cmp
mov
pop
mov
xchg
sub
sub
mov
or
das
into
enter
dec
aad
lret
test
in
mov
sbb
pop
mov
fistpl
pop
ret
xor
cwtl
outsl
fdivrl
add
int
sti
xchg
cmp
daa
add
nop
push
and
and
cmp
push
loopne
repz
add
rolb
out
mov
sbb
inc
rcl
incb
mov
mov
xchg
jne
ja
mov
ret
sar
std
mov
pop
or
sbb
stos
test
clc
push
push
dec
push
sub
xchg
dec
stos
lahf
mov
mov
insb
rorl
cs
xchg
insb
mov
push
clc
into
je
mov
cwtl
out
xor
ficompl
lods
mov
clc
hlt
xchg
icebp
pop
push
xchg
daa
lods
ljmp
pushf
pop
faddl
sti
je
and
xlat
or
lds
push
dec
sub
xchg
ror
mov
mov
or
iret
ja
push
stos
cwtl
js
inc
fldl
std
mov
adc
cli
cmp
out
vmwrite
mov
sbb
or
push
mov
sub
or
rorl
movsl
adc
mov
lcall
pop
sti
xchg
hlt
jns
inc
mov
add
xorb
ja
out
jg
xchg
mov
pop
scas
movsb
or
fcoml
mov
int
movl
jge
mov
inc
pop
es
jnp
fisubrl
test
in
cmc
sub
es
jo
mov
nop
xlat
insl
rorl
mov
or
pop
sub
or
lahf
ss
sub
xchg
pop
je
andb
adc
cmp
xchg
push
clc
dec
sbb
and
shll
jge
stos
xchg
test
dec
jns
andb
xchg
stos
push
sbb
and
lret
or
pop
push
mov
out
aad
sub
sbb
inc
add
mov
mov
lret
in
adc
js
data16
lock
mull
jmp
bound
inc
int
mov
push
rcrb
nop
nop
hlt
addr16
xchg
aad
mov
movsl
ret
rcr
test
stos
dec
push
test
in
mov
jns
loop
lds
xchg
adc
pop
jae
inc
xor
cmc
aas
lret
enter
push
sbb
out
imul
push
jbe
ret
push
mov
jge
xor
adc
adc
push
jne
mov
xchg
out
icebp
mov
mov
jecxz
popa
loope
adc
shlb
cmpsl
push
mov
divb
orb
fsubl
mov
sub
lock
adc
fs
out
aad
sti
jo
in
out
cmc
daa
rorl
mov
stc
jle
jl
enter
js
push
and
pop
std
or
aaa
jo
or
adc
sbb
test
cmp
testb
dec
inc
push
mov
lret
and
ja
fadds
int3
dec
xchg
jmp
mov
mov
mov
mov
or
cmp
push
imulb
jae
pop
aas
dec
je
mov
xor
add
cmp
xchg
adc
lds
out
decb
jecxz
push
xchg
jno
les
cli
aam
test
mov
pop
insl
jb
test
adcb
or
and
dec
inc
mull
imul
or
mov
out
or
jne
clc
in
dec
loop
jae
mov
push
xchg
jg
cmc
and
add
xchg
loop
les
hlt
int3
in
pop
dec
push
xchg
sub
test
xchg
mov
call
xchg
in
incb
mov
rcrl
adc
outsl
sub
cmc
cmp
in
xor
xor
in
mov
out
xchg
loope
jge
enter
jnp
aas
iret
and
jecxz
cmp
ret
pusha
lret
cmc
mov
xchg
test
add
dec
cwtl
sub
adcb
jbe
inc
popf
push
adc
clc
outsb
mov
adc
das
mov
jecxz
push
addr16
sub
xchg
xor
mov
cpuid
or
adc
lret
inc
mov
jne
jbe
jns
dec
imul
jge
xor
out
bound
push
stos
jnp
mov
jg
mov
jbe
lea
cmpsb
aad
cmp
sbbb
add
das
adc
mov
dec
mov
mov
sbb
out
pop
data16
dec
jno
cmp
clc
mov
push
in
mov
sub
pop
stc
jmp
lret
jae
js
xchg
fisubrl
iret
and
or
jne
sub
sbb
lods
jnp
xchg
push
sbb
out
std
test
and
push
dec
cmp
call
jge
inc
and
lret
sub
ja
dec
and
lret
xchg
cli
sbb
xchg
sub
push
dec
xor
icebp
ret
push
sbbb
lock
sub
arpl
jmp
pop
mov
cmp
push
in
pop
pop
jmp
nop
sub
xor
scas
inc
gs
inc
mov
mov
xchg
push
mov
fidivs
push
stos
and
pop
xchg
inc
gs
or
pop
div
inc
dec
jne
push
xor
out
push
rcrl
into
bound
pop
movsb
push
pop
pop
sahf
xor
shll
pop
test
fs
inc
das
mov
shrl
cmp
testb
fwait
mov
ljmp
cmp
push
inc
inc
xchg
call
and
lahf
hlt
aas
sub
mov
rcr
das
add
movsb
imul
out
outsb
aam
ret
jne
cltd
popl
push
sub
daa
cli
adc
sub
in
push
lret
rcrl
jns
leave
adc
pusha
sbb
xchg
sub
adc
cmc
inc
xor
subb
jne
jecxz
pop
jno
test
clc
test
adc
jno
stos
popw
cmp
jecxz
push
dec
movsl
fwait
xor
jo
les
add
adc
fisubrl
cmc
fidivs
arpl
push
mov
mov
cltd
arpl
cmp
int3
outsl
ss
gs
notl
xchg
mov
or
in
cmpsl
add
pop
inc
mov
cmpsb
arpl
insl
add
jmp
or
sti
jae
insl
push
int3
scas
inc
add
stos
rcl
fwait
fs
xor
sub
xchg
sub
xchg
push
sub
out
ret
push
std
fisubs
jnp
xchg
loope
adc
jb
movsb
push
sbb
out
lods
insl
lret
mov
dec
push
mov
pop
jmp
add
xchg
mov
nop
cs
popf
dec
ljmp
addr16
test
cli
add
or
pop
mov
and
lea
dec
es
push
jmp
push
push
xchg
jmp
in
test
sub
xor
jnp
adc
xor
inc
xor
pusha
adc
fwait
or
js
cmp
mov
dec
sbb
push
sub
scas
or
gs
int
movsb
sbb
pop
fsubs
insb
cs
ffree
nopl
fnstcw
push
int3
jo
imul
lds
sbb
addr16
xor
add
lods
sub
test
outsl
divb
adc
int3
mov
mov
fildl
mov
inc
mov
sbb
add
push
mov
push
and
cmp
aas
stos
fsub
out
sahf
xor
push
cmp
jne
sarl
popa
clc
js
fwait
bound
pop
cld
lcall
aam
jno
or
mov
lcall
mov
cmp
rolb
mov
and
sub
mov
add
lods
cmp
and
fistpl
adc
inc
pop
adcl
adc
push
pop
sub
push
ss
push
pop
mov
push
cs
arpl
xchg
jo
dec
cmpsl
pop
out
mov
mov
je
aam
fwait
mov
xor
pop
in
testb
push
mov
inc
mov
jb
xchg
hlt
leave
inc
push
test
jnp
divl
stc
or
xorl
addr16
stc
jl
add
mov
xor
cmp
cmpsb
push
notl
xor
adc
jmp
data16
lret
fsubl
mov
jne
push
push
test
loop
testb
jnp
xchg
dec
jae
cmpsl
out
sbb
je
js
mov
out
xchg
sarb
aad
cld
lods
lret
xchg
sub
data16
push
push
dec
bound
xchg
test
out
decl
xor
outsl
cmpsb
dec
dec
sarl
jae
dec
push
xchg
pop
and
lock
movaps
hlt
adc
outsl
push
and
cmp
mov
and
add
imul
pop
popf
inc
xor
dec
jmp
dec
xlat
sbb
add
cmp
sbb
mov
add
sbb
test
mov
pop
xor
mov
cmp
sar
adc
inc
rcr
bound
data16
mov
fsubrl
jno
stos
clc
inc
fcmovne
rol
push
push
popf
jmp
push
add
cwtl
xor
dec
xor
adc
and
jo
cltd
pushl
loopne
int3
fidivrs
mov
xor
fsubrl
dec
jmp
pop
out
push
xchg
in
aad
repz
jg
push
test
lds
ja
xchg
xor
test
lods
notb
out
daa
cli
sbb
jbe
sbbl
push
mov
mov
clc
repnz
movsl
aaa
dec
loop
jmp
rep
cmp
xchg
ret
jge
jmp
or
push
jo
push
ja
mov
lods
addb
mov
cltd
and
lret
mov
xchg
ret
ss
lret
dec
dec
jl
sbb
jbe
rcl
push
clc
sahf
shrl
test
std
adc
cmpsl
sbb
es
dec
mov
test
sub
jns
loopne
gs
pop
cmc
cmp
inc
xor
pop
lds
pop
fwait
mov
add
mov
ficompl
loop
adc
call
insb
jl
inc
pop
sahf
jo
pushf
popa
add
stos
insl
aas
pop
cmc
xchg
xchg
sub
shr
jae
dec
shr
pop
fsubrp
dec
cmpsb
dec
loopne
loope
xchg
jo
addr16
xchg
sbb
mov
lea
push
mov
dec
fdivrs
sbb
xor
jne
xchg
dec
add
ds
mov
dec
aaa
jo
and
shlb
inc
or
or
das
adc
xor
xor
jo
jle
out
jne
sbb
mov
mov
mov
call
mov
cmp
lea
push
int3
gs
fwait
mov
and
lret
fld
push
mov
lock
push
xchg
dec
cld
xchg
inc
mov
sbb
hlt
lahf
cmp
xchg
mov
dec
lods
cmp
pop
stc
inc
mov
xlat
inc
flds
cmp
popf
pop
addb
add
cld
and
xchg
mov
test
aad
push
pop
gs
xor
or
das
push
insb
popa
cmp
xor
or
mov
xor
flds
or
inc
jg
mov
or
mov
dec
adc
jecxz
mov
clc
xchg
inc
xor
or
aam
iret
sbb
push
movsl
enter
mov
inc
hlt
fmull
cwtl
mov
and
loope
mov
dec
rol
push
pushl
add
cmp
jne
pop
mov
mov
lcall
out
and
push
cld
insl
sub
or
rcr
fcmovu
jb
xchg
mov
inc
xor
xor
cmp
fadds
push
jp
xchg
and
sub
xor
sarb
aam
mov
or
adc
or
outsl
cli
loopne
adc
mov
call
and
insl
cwtl
lods
imul
xchg
dec
ja
cmpl
xchg
in
aas
xor
test
sub
aam
cld
aam
out
cmp
stos
divb
outsl
push
push
pop
lea
add
jb
mov
xchg
mov
and
leave
aas
rol
and
push
mov
jl
out
mov
ud1
cmp
andb
xchg
push
xlat
jmp
and
mov
lahf
inc
inc
faddl
fst
push
mov
push
xor
call
in
cmovg
mov
shll
add
jp
or
fstps
and
xchg
lret
cmp
mov
push
adc
lods
inc
push
sub
sub
dec
add
rolb
pop
adc
adc
int3
mov
ljmp
out
es
flds
shlb
mov
mov
mov
dec
nop
jne
ret
insl
xchg
ja
cmpsl
repnz
les
mov
mov
push
pop
repz
mov
movsl
jno
xchg
mov
test
adc
shl
or
loope
jnp
dec
daa
out
inc
fadds
jle
push
push
stos
dec
and
out
pop
icebp
mov
adc
int3
sub
fcomps
xchg
movsl
sbb
les
add
sub
enter
sbb
pop
jle
and
call
in
bound
jle
and
push
mov
push
in
adc
mov
je
lea
dec
in
push
add
add
sti
or
inc
adc
jns
repnz
out
daa
and
andb
leave
jecxz
loopne
xor
je
inc
das
sub
addb
ja
bound
addr16
push
mov
or
call
mov
push
jg
testb
lock
push
inc
or
add
push
test
xchg
stos
sub
xor
stos
rcrl
cld
dec
scas
mov
sarl
fldenv
out
pop
sahf
fisubs
pop
test
dec
jecxz
leave
jb
xchg
fwait
out
cmpsl
fnstenv
ja
icebp
fbstp
int
adc
call
adc
cmp
adc
les
pop
dec
mov
cmc
lea
add
sbb
jnp
and
jbe
fwait
push
rcrb
jnp
std
push
sar
pop
lds
fistl
add
or
push
mov
push
ss
lock
out
or
xchg
cld
sbb
mov
test
sahf
mov
addr16
popa
cltd
pop
push
jb
push
sub
inc
jg
cmp
xor
or
dec
xchg
sub
rcrb
xchg
push
and
std
leave
or
and
cmpb
push
orl
mov
dec
sbb
add
mov
and
cmpsb
movsb
mov
lret
test
fmuls
mov
and
into
test
pop
repz
dec
out
jg
rolb
xor
in
push
add
lock
ljmp
jne
lahf
add
in
fwait
jg
int3
push
mov
sti
lret
into
cld
out
stos
cli
es
adc
icebp
nop
loop
aas
lock
inc
lcall
dec
and
xor
sahf
mov
cmp
test
and
shll
push
pfadd
cmp
pop
xchg
mov
into
gs
lock
scas
addr16
clc
push
insl
inc
mov
lods
jno
pusha
data16
push
hlt
mov
push
outsb
add
outsb
gs
jecxz
adc
xchg
push
leave
bound
into
js
test
shll
cmpsl
sbb
test
ss
ja
add
dec
test
dec
lret
push
cltd
sub
and
xchg
jle
pop
cmp
stos
lods
int
pop
lret
loopne
subb
sbb
stc
popa
push
lahf
imul
xor
dec
lret
pop
stos
or
sbb
scas
cmp
sahf
push
mov
mov
divb
iret
push
gs
push
mov
push
lock
icebp
mov
jecxz
adc
mov
adcb
adc
rolb
inc
int3
movsl
fisttpl
adc
pop
lods
test
xor
aaa
mov
test
out
daa
xor
and
mov
pop
sahf
push
add
hlt
movsb
cmp
sub
adc
sub
push
pop
push
cmpsb
inc
insl
testb
jnp
in
and
inc
je
pushl
or
pop
adc
rolb
stos
push
fsubl
mov
xchg
lds
es
out
cmpsl
push
movsl
inc
xchg
enter
or
call
xlat
adc
and
dec
imul
dec
pop
repnz
scas
gs
shll
jns
inc
imulb
jg
insb
add
jo
popf
movsl
xor
push
aas
aad
es
dec
inc
pop
cli
sarl
pushf
lcall
mov
sub
xor
stos
sti
loopnew
sti
pop
adc
stos
inc
adc
dec
fdivs
add
xor
jp,pn
pusha
es
aad
xchg
ret
mov
lahf
stos
sbb
jb
dec
pop
icebp
test
fadds
jg
test
lahf
jne
pop
fdivrs
fisubrl
jb
iret
mov
push
xchg
pop
xor
mov
scas
xor
out
mov
jb
xor
inc
lret
cmp
push
arpl
out
pop
sbb
clc
or
adc
push
cs
push
adc
xor
xor
mov
push
fwait
or
push
das
out
hlt
jp
and
push
ret
pop
mov
sti
addr16
xchg
lea
rclb
fs
xlat
xchg
popa
fmull
and
add
sarl
imul
sbb
mov
sub
or
xor
ret
fbstp
fwait
sti
sbb
fwait
ss
mov
gs
lahf
push
aaa
stos
out
lcall
xchg
jecxz
leave
insb
push
rcrl
jge
int
mov
push
mov
push
subb
mov
mov
dec
lea
push
mov
pop
das
push
and
test
testl
inc
push
jmp
lods
adcb
stos
inc
add
sbb
xor
sti
inc
int3
sub
sbb
adc
push
adc
adc
bound
jns
inc
xor
sbb
cli
movl
fstp
ljmp
sub
aad
cmp
js
jo,pn
dec
mov
ljmp
or
jle
iret
xchg
aad
adc
hlt
push
lcall
mov
das
push
pop
clc
add
xor
loopne
cmp
icebp
or
outsl
xchg
mov
loope
sub
push
and
mov
jmp
pop
cmp
insb
inc
sbb
dec
adc
add
and
out
ja
sub
lods
popa
xchg
cmp
xor
pusha
ljmp
stos
cmp
jl
cmp
or
test
lret
lock
jae
pop
dec
sub
inc
lcall
mov
push
cs
repnz
add
neg
sbb
xchg
jmp
push
std
xchg
rorl
or
mov
dec
and
mov
adc
fs
fcoms
xchg
ss
hlt
cmpb
aam
mov
stos
repz
xchg
xchg
daa
les
je
push
shll
mov
test
push
xor
fidivl
dec
sbb
inc
and
or
sbb
pop
jmp
mov
sarb
adcl
or
xchg
xor
cltd
js
sub
shll
xchg
mov
mov
sub
jb
shlb
js
shrb
mov
out
cmc
testb
out
sbbb
jg
jne
pop
sub
and
mov
addr16
lcall
sbb
jo
mov
imul
or
sbb
aam
mov
flds
sar
cmpsl
inc
sbb
mov
stos
sub
cmp
shlb
push
dec
jge
rcrl
dec
or
mov
and
out
xchg
sub
and
lea
xor
dec
aaa
push
mov
ret
mov
pusha
jnp
pop
xchg
sbbl
push
mov
ret
adc
sub
inc
sti
cmp
adc
pop
push
fimull
mov
push
loopne
stc
test
sbb
cmp
sub
inc
outsl
loop
xor
xchg
adc
add
lahf
xor
sbb
dec
lea
clc
xchg
hlt
outsl
or
popf
addr16
jg
or
lahf
popa
loopne
stos
mov
or
push
add
lods
xor
mov
or
xchg
mov
aaa
shll
xor
xchg
sbb
xchg
aad
negl
push
sahf
pop
cmp
mov
cs
mov
test
mov
clc
dec
jmp
push
mov
int3
enter
lods
cmpsb
ljmp
lret
pop
outsb
lods
push
pop
jle
ss
push
sbb
das
int3
pushl
decb
dec
mov
jmp
push
pusha
lcall
mov
push
xchg
dec
loope
mov
fnstcw
mov
bound
xchg
xchg
fwait
sti
icebp
mov
jbe
pop
cmc
jo
push
lea
push
std
leave
xchg
ja
jmp
imull
and
stos
in
cmp
imul
xchg
arpl
cmp
xchg
mov
adc
ss
pop
daa
jmp
push
sbb
aaa
cmpsb
jge
sub
xchg
movsb
sub
sbb
sub
jae
mov
push
out
cltd
xor
pop
repz
and
xor
movsl
cmpsl
push
test
lds
jmp
daa
data16
arpl
out
mov
cmpsb
cltd
in
push
push
mov
xchg
scas
ret
mov
mov
int3
icebp
arpl
test
jnp
jle
dec
jecxz
and
lods
rclb
xor
scas
test
pop
inc
iret
mov
daa
dec
ds
sub
mov
mov
insb
mov
cmp
add
inc
pop
add
scas
ja
bnd
addb
or
pop
mov
rcll
pusha
jno
sahf
mov
les
mov
dec
bound
dec
dec
mov
roll
jecxz
mov
pushf
lahf
pop
add
jmp
push
mov
arpl
mov
aaa
pop
add
and
cmp
test
xlat
dec
dec
out
add
outsb
sub
xlat
jbe
sbb
mov
pop
data16
cmp
adc
jns
test
in
mov
xor
mov
mov
dec
imul
lahf
arpl
push
imul
xor
mov
add
fdivrl
wbinvd
in
adc
dec
and
jae
fs
mov
xchg
inc
dec
out
or
inc
dec
mov
jo
fistpll
add
mov
test
fstp
fs
mov
icebp
mov
in
mull
xor
pop
pop
and
lock
call
scas
lds
lea
hlt
leave
sub
push
fisttps
lret
popa
inc
jl
in
in
call
fisubrl
jnp
adc
jns
or
xchg
mov
add
cmp
fucompp
lds
js
pop
add
movb
test
rcl
test
scas
andl
std
pop
xor
int3
iret
sbb
sarb
daa
es
fistps
xchg
adc
imul
add
sub
jge
loopne
test
sub
aaa
mov
nop
scas
xchg
dec
cmp
pop
inc
sub
ljmp
movsl
cmp
pop
pop
mov
mov
fimull
gs
sbb
add
dec
adc
xchg
leave
push
adcl
arpl
int
xor
push
push
imul
inc
movsb
mov
pop
cmp
jecxz
je
aaa
pop
pushf
and
add
je
scas
inc
inc
sub
addb
insl
in
and
lds
mov
push
inc
js
call
ss
fdivrs
jmp
shl
add
aam
push
call
in
ljmp
cli
aaa
and
xorl
loopne
pop
inc
int
lods
shll
ds
rolb
mov
mov
pop
iret
mov
js
xor
mov
mov
push
bound
je
loop
test
imul
xor
pop
xchg
in
in
mov
cmc
mov
xor
mov
pusha
loopne
lock
xchg
push
jo
jge
cli
icebp
cmp
in
inc
sbb
pop
jecxz
lret
inc
popa
in
xor
sahf
pop
cmpl
mov
adc
mov
notl
and
lret
std
lods
out
adc
repnz
das
addr16
les
jecxz
and
addr16
xchg
pop
lret
jb
sbb
pop
mov
test
adc
xor
fsubr
lods
ljmp
xchg
jo
loop
adc
push
sub
jae
decl
jl
cld
pop
push
stos
rolb
popa
jbe
ret
sub
mov
adc
mov
pop
pop
outsl
mov
cmp
cltd
jns
lahf
mov
mov
call
jecxz
imul
or
xor
mov
mov
jb
dec
sbb
rcr
xchg
add
mov
fpatan
xor
loop
shl
lret
dec
scas
cmp
jno
xchg
adc
test
ret
lcall
repnz
jbe
inc
test
mov
mov
sbb
popa
clc
jae
test
xor
repnz
push
jno
addr16
sbb
xchg
stos
rclb
repnz
sbb
cmp
dec
pop
daa
cmp
js
inc
testl
or
ss
cmp
shll
mov
lods
jp
les
sbb
stos
ljmp
scas
fwait
push
test
dec
jnp
loop
xor
mov
xchg
fcoml
dec
cmp
insl
inc
rolb
fidivrs
nop
push
adc
js
aas
lahf
lcall
cmp
lahf
das
ret
fmull
lods
loopne
cmpsl
mov
fmuls
inc
fs
jmp
outsb
adcl
repnz
dec
aad
jne
pop
jb
dec
push
or
dec
or
sub
out
inc
test
incl
outsb
jae
mov
and
ret
shr
bound
shrb
insb
cmc
orl
mov
lods
aaa
push
sub
push
inc
jb
pushf
jae
and
inc
adc
enter
cltd
sub
mov
push
ds
jb
cmp
dec
mov
push
in
ret
lahf
push
adc
rolb
mov
clc
push
sahf
mov
mov
and
jns
cs
aaa
into
add
sbb
ja
cmp
shlb
scas
adc
mov
insl
inc
inc
std
insb
add
push
jb
imul
aaa
fucom
cwtl
into
mov
rcrl
adc
jg
mov
mov
popa
les
pop
into
dec
mov
jns
cmp
cs
add
adc
push
cmc
and
pop
push
lds
dec
in
cmp
out
iret
imul
xor
popa
mov
mov
outsl
push
and
inc
fnstenv
fsubs
mov
fldenv
cmp
xor
loopne
scas
lds
cmp
xchg
mov
fmulp
xchg
xchg
mov
sbb
popa
ds
jbe
pop
xlat
pop
mov
pop
mov
add
xlat
repz
movsl
mov
repnz
loopne
xchg
fdivrl
lret
sub
rcrb
xchg
sbb
dec
negb
lahf
lea
lret
lret
mov
mov
dec
dec
cld
lahf
adc
lahf
or
jmp
fs
imul
loope
pop
pop
mov
jns
fimull
aam
int3
ret
test
mov
lret
out
cmpsl
ret
stos
lods
and
jo
and
lods
and
mov
and
gs
int
xchg
insb
lret
jg
push
sub
mov
out
cmc
jo
int3
mov
mov
pop
shl
cmp
xchg
repnz
jns
ret
sbb
add
addl
mov
sbb
int
outsb
popf
sahf
xor
mov
movsb
cmp
jnp
cmp
inc
shrl
jae
mov
add
and
pop
push
into
jmp
int
push
add
mov
jne
cs
xchg
movl
daa
jb
shrb
addl
adc
jbe
les
mov
loop
sbb
ss
fbld
daa
outsl
jb
mov
sub
push
push
and
das
fdivl
add
xor
pop
bnd
ss
idivb
lods
hlt
add
sub
in
out
outsb
mov
shrb
add
into
lock
adc
sbb
dec
nop
std
push
mov
push
les
out
insl
pop
int
jb
iret
ja
inc
sub
ja
push
pop
sub
pop
bound
xor
pop
sbb
xchg
sub
addb
lahf
jno,pn
gs
mov
inc
ds
adc
add
dec
mov
push
int3
outsl
or
fistpll
aam
jo
jg
xchg
scas
aam
adc
outsb
rolb
pusha
mov
mov
jp
call
and
jo
or
int
in
push
mov
or
bnd
cs
cmp
xor
fs
std
xlat
jns
test
mov
inc
lods
sbb
xchg
adc
test
rcrl
ss
aam
jnp
push
xchg
pop
adc
dec
sarb
rorl
sub
jp
sub
in
sub
aam
daa
idivl
adc
rcll
call
pop
fwait
je
ror
mov
movsl
int
rcrl
loope
mov
jo
mov
xchg
lcall
jae
icebp
or
mov
repz
inc
sbb
jp
es
jnp
ljmp
mov
jae
adc
data16
push
jmp
add
arpl
pop
inc
aam
int
hlt
dec
out
xchg
lcall
xor
jl
mov
or
pop
sahf
xchg
mov
and
xorl
or
mov
push
and
add
or
mov
mov
cmp
sub
les
jo
xor
js
xchg
mov
dec
stos
fnstenv
mov
push
insl
and
cmpsl
imul
inc
push
sarl
aam
adc
sub
stos
sbb
inc
scas
pop
js
shrl
xor
test
popf
out
add
sub
clc
dec
out
ss
push
sub
insl
add
out
pop
fdivrp
xchg
push
test
adc
std
pop
cmpsb
or
shr
inc
repz
fidivrl
addl
and
ss
cmp
pop
push
rcl
icebp
mov
or
shlb
lods
fldenv
and
movsl
pop
sahf
insl
shll
jle
mov
dec
or
mov
sbb
ss
imul
outsl
aad
mov
in
arpl
bndstx
imul
xchg
test
xchg
pop
pop
mov
enter
or
push
inc
xchg
das
bound
add
pop
fstps
dec
cld
cmp
sub
add
dec
rcll
mov
nop
dec
cs
lods
sahf
xor
gs
hlt
addr16
in
add
rorb
adc
mov
adc
push
add
xor
fildll
jmp
test
das
mov
fwait
sub
enter
push
jmp
push
pop
repz
stc
pusha
imull
jmp
sti
cmpsl
jl
xor
jno
ret
cmpsb
add
sbb
daa
dec
insl
hlt
mov
icebp
adc
fsubs
jmp
lods
jo
and
xor
and
jno
add
flds
cwtl
dec
cmc
sub
mov
mov
lret
xchg
jne
dec
or
or
xchg
bound
push
jge
mov
lret
push
out
out
adc
jmp
in
cmp
xchg
mov
icebp
mov
sub
cld
mov
loop
cli
add
cmp
pop
inc
rorb
incl
adc
adc
xchg
adc
cmp
jb
scas
sbb
dec
sub
xchg
mov
movsl
xlat
push
jge
sub
aaa
pop
es
es
adc
aad
in
cwtl
repnz
mov
in
push
xor
pusha
dec
loop
or
cmp
mov
int3
fisubs
lea
out
mov
in
xor
mov
mov
pop
cmp
mov
adc
jecxz
xchg
call
cmp
dec
dec
lret
insb
pop
add
sub
insb
xor
xor
add
testl
adc
cld
inc
xor
mov
jp
or
mov
movsl
aad
inc
cld
les
aad
mov
sbb
popf
sub
lcall
adc
push
push
lods
and
sahf
repz
into
js
aas
ja
xchg
out
pop
lret
sbb
ljmp
test
sahf
in
mov
lret
and
movb
push
lds
xchg
dec
or
xchg
cmp
jbe
cwtl
xchg
inc
push
jecxz
inc
jecxz
ss
fcmovnu
movsb
lds
cld
bound
loopne
xor
jp
mov
pop
call
push
roll
cmpsl
jp
ja
inc
pop
sahf
jne
jp
insb
pop
lds
mov
adc
xchg
aaa
cmp
stos
xchg
cmp
clc
ret
mov
aad
push
pop
dec
cmp
mov
scas
outsl
mov
dec
cltd
and
mov
sub
jo
loopne,pt
sub
ficoms
cmp
xchg
fsubs
cmc
cmp
adc
or
push
sub
or
or
sbb
es
jb
adc
fdiv
sub
imul
jae
dec
ret
js
or
push
mov
fwait
gs
push
push
xor
int3
test
leave
test
inc
pop
mov
daa
and
pop
cmpsb
int
sbb
xchg
mov
repz
jne
cmovl
jne
lret
out
mov
adc
xor
and
inc
push
aas
mov
loop
movsb
in
inc
in
mov
mulb
in
outsl
out
rolb
into
popa
insb
mov
das
sti
in
test
dec
lret
mov
mov
jns
cmpsb
loop
and
cmp
or
lret
jge
lock
mov
xor
scas
mov
cmp
xor
stc
out
push
repnz
push
outsl
push
sub
dec
jo
xorl
fbld
adc
dec
pop
mov
cmpsb
or
pushf
or
or
and
fcmovnb
bound
sbb
sub
mov
insl
lss
fcoms
out
shlb
jae
cltd
jl
ljmp
jmp
ss
lods
pop
leave
jno
jno
fdivrp
jp
cmp
arpl
pop
out
mov
cltd
jo
mov
movsl
movsl
push
jae
rcll
clc
fists
mov
shll
xor
cmpsb
sbb
stos
sub
fmull
add
ficomps
push
out
inc
repz
mov
lret
call
dec
icebp
sbb
push
ja
scas
clc
sub
int3
imul
push
push
icebp
mov
das
mov
sti
ret
sub
jae
arpl
or
sahf
mov
dec
push
fiaddl
adc
into
jecxz
push
cwtl
jecxz
xchg
in
cmpsl
mov
loope
xor
mov
push
sub
lods
in
stc
sub
dec
imul
movsl
mov
insl
push
add
out
insb
xor
pop
test
mov
lahf
fldenv
sbb
rorb
call
push
dec
pop
inc
cmp
out
inc
push
es
cmpsb
sub
cmpsl
jnp
and
cmpsb
fcomip
xchg
movsb
cld
xadd
mov
ljmp
inc
frstor
jg
sub
lret
scas
andb
scas
in
cmp
cmpsb
mov
add
or
push
cmpsb
stos
xor
and
mov
sbb
pushf
ds
outsl
cmpsl
mov
call
insb
inc
lds
push
fdivrs
dec
pop
push
push
scas
adc
xchg
adc
add
push
push
movsl
adc
pop
es
push
sbb
or
sub
aam
or
mov
das
arpl
pop
push
pop
orb
enter
or
xor
je
mov
pop
jb
cmpsb
push
leave
lods
pop
inc
sbb
shlb
inc
ret
pop
std
push
ss
xor
sub
stos
fdivrs
push
cmp
and
cmp
dec
mov
dec
push
fisttpl
add
pop
push
cmp
cld
pop
push
xor
xchg
adc
in
mov
jne
js
add
mov
dec
cmp
fsubs
cmp
push
mov
div
adc
dec
frstor
sarl
mov
imulb
dec
jnp
cmp
cltd
adc
cmp
or
xor
insb
icebp
sahf
mov
mov
loopne
pop
ret
rclb
sbb
dec
arpl
xor
sub
pusha
push
sub
push
xor
sbb
data16
stos
xor
aas
mov
hlt
jbe
pop
js
add
das
outsb
push
mov
inc
jbe
and
aad
adc
pop
xchg
cmpsb
dec
ret
dec
inc
fdecstp
cltd
cmp
pop
shrb
clc
mov
jg
stos
jbe
icebp
adc
fwait
pop
mov
push
mov
xor
dec
bound
cld
cmpsl
xchg
fisttpl
aad
popa
mov
mov
fdivr
push
rol
adc
push
lret
call
jae
mov
push
and
les
lret
movsl
add
push
movsl
aam
xchg
stc
mov
add
and
imul
adc
mov
mov
xchg
xor
call
dec
push
divb
mov
jmp
push
popa
outsb
sbb
push
lret
mov
jmp
cltd
in
inc
insl
setno
out
ror
repnz
fmull
popf
lahf
ss
add
popa
andb
add
pushf
pop
outsl
out
push
sub
cmc
add
xor
lret
into
flds
insb
push
lock
adc
jne
imul
lods
adc
lcall
movsl
and
cmp
and
jmp
sti
and
and
lods
test
dec
xlat
mov
lret
imul
adc
ljmp
or
mov
movsl
and
and
daa
mov
pop
sahf
in
mov
or
popf
jmp
sub
pop
mov
lcall
stos
mov
xor
insb
push
mov
popa
sub
mov
xchg
add
sbb
sbb
in
and
or
xor
xchg
mov
int
mov
popa
loop
pop
popf
sub
sti
cmp
xchg
shrl
call
sbb
pop
dec
arpl
cs
push
fmuls
mov
pop
add
mov
mov
xor
xor
mov
jg
lods
repnz
scas
xchg
inc
call
lcall
mov
jl
adc
lahf
adc
out
data16
adc
push
jmp
sub
repz
dec
sbb
pop
outsl
aad
mov
aaa
test
lcall
pop
sub
cmp
push
fsub
mov
aas
mov
adcl
push
mov
les
pop
fdivrl
lahf
fisttps
or
mov
scas
cltd
pop
jbe
mov
pop
pop
leave
jns
sbb
mov
out
and
cmp
inc
stos
adc
and
push
adcb
jmp
insb
test
xchg
int3
push
mov
mov
mov
add
inc
arpl
mov
pop
sub
int3
fwait
pop
push
inc
subl
fsubl
mov
jae
mov
popa
sub
outsb
int
lahf
xor
jp
loop
xor
mov
dec
push
mov
notb
lret
add
scas
aas
cs
xchg
xchg
sub
pop
fidivl
in
jb
mov
cmp
shl
std
seta
adc
jne
test
fidivl
leave
mov
scas
bound
call
mov
dec
daa
leave
in
insl
add
adc
sbb
mov
aas
aaa
pusha
pop
cmp
add
int3
mov
mov
cmp
das
repz
inc
mov
push
test
push
and
and
adc
sbb
pop
xor
mov
xchg
adc
inc
push
sub
daa
jns
mov
dec
sbb
call
scas
int
in
lahf
daa
aad
leave
ss
ljmp
cmp
dec
cmc
arpl
rorb
nop
and
stos
fisubs
sub
sub
inc
inc
add
js
push
out
cmp
fcomps
popa
ss
mov
test
out
mov
xchg
mov
pop
inc
cltd
lret
push
adc
lret
inc
ljmp
jle
pop
lcall
mov
repnz
in
std
sub
xor
jnp
jno
in
sub
mov
sbb
mov
repnz
ret
ret
popf
pop
outsb
aaa
rclb
and
bound
pusha
push
sub
adc
sbb
dec
sbbl
sbb
movsb
add
inc
inc
scas
outsl
pushf
sbb
and
dec
sbb
stc
inc
dec
jle
aad
test
test
sub
pop
ret
or
mov
dec
sbb
push
jns
out
jno
pop
mov
inc
ret
mov
cmc
gs
scas
inc
lahf
cmpsb
ds
orb
adc
ret
jb
sbb
ror
cmp
cld
popf
shlb
xchg
movsl
adc
jbe
fwait
test
mov
loop
xlat
dec
sub
scas
add
mov
cmpsl
fisttps
pusha
sub
mov
mov
jle
fwait
xrelease
push
stc
lock
sbb
jle
jmp
aam
xchg
or
lcall
out
or
add
sub
jge
sbb
cmpsl
stos
or
jmp
out
mov
xchg
sub
loopne
pop
aas
push
sub
pop
lret
lret
js
sti
xchg
pushf
dec
je
inc
jl
loopne
popa
incb
mov
dec
pop
adc
jbe
pop
mov
fstpt
stos
sbb
mov
xor
notl
add
push
jle
ret
mov
adc
fs
mov
jbe
dec
cmc
lahf
push
sbb
inc
mov
bound
xor
sbb
and
mov
test
lcall
cwtl
bound
call
int3
loope
decb
adc
sub
cmpsb
idivb
dec
arpl
pushf
and
dec
roll
sub
xor
iret
xchg
mov
pop
stc
lea
jge
inc
int3
add
jmp
loope
fcoml
inc
cltd
into
lods
push
mov
std
mov
push
or
or
mov
ljmp
mov
in
and
dec
add
int3
iret
pop
int
popf
js
xorl
in
insl
xchg
cwtl
mov
ret
pop
xor
jno
xchg
lret
xor
add
lock
and
add
hlt
adc
sub
mov
test
mov
out
cli
and
sub
repnz
cmp
jno
scas
pusha
fildl
mov
mov
push
xchg
addl
lret
cltd
push
ljmp
addl
push
outsl
sbb
in
adc
ja
xchg
rorb
mov
push
aas
inc
mov
sub
add
in
jb
ljmp
lret
or
mov
xor
test
adc
inc
jo
push
mov
insb
call
push
mov
int3
stos
cltd
in
xor
cmp
shl
aam
jle
mov
loop
imul
jecxz
pusha
rol
insl
push
insb
mov
inc
inc
pop
divb
pushf
push
or
es
jge
out
mov
les
clc
pop
aad
jae
pop
movsb
aam
cmp
xchg
loop
mov
and
mov
jb
sub
sbb
push
pop
adc
jno
cltd
fsubl
mov
mov
movsb
push
push
mov
jno
aaa
es
mov
mov
stos
adc
negb
into
xchg
sub
ficoms
test
push
call
repnz
push
inc
out
add
in
mov
mov
sub
ja
shrb
sbb
inc
dec
int
data16
sub
mov
ret
or
popa
add
popl
mov
ja
shrl
iret
cmpsb
cmp
add
pop
add
stc
xor
push
es
or
mov
dec
mov
into
xor
dec
or
in
fiadds
ret
cmc
scas
mov
or
mov
xchg
xchg
or
pop
add
fidivrl
icebp
inc
std
ret
sahf
rcrl
call
gs
rcll
mov
cmp
sbb
outsw
pop
outsl
mov
cmc
ss
jp
dec
lods
outsl
cmp
inc
push
mov
adc
inc
push
dec
pop
cmp
iret
into
add
lahf
cs
repz
cli
xchg
jecxz
enter
xchg
jl
cmp
xor
mov
push
cmp
testl
dec
inc
pop
ds
jns
jae
and
stc
xchg
or
popf
xor
xchg
pushf
imul
in
push
jmp
ljmp
int
popa
xor
xchg
jp
aaa
adc
ret
dec
cmp
in
aam
popa
mov
insl
pop
inc
inc
test
addr16
lods
xchg
imul
or
xor
inc
je
sbb
cmp
fistps
repnz
push
sub
addb
call
movsl
imul
mov
incl
int3
mov
fstl
pop
jge
xchg
pop
xor
notb
pop
fcoml
vpsubq
cmp
pop
pop
insb
mov
jnp
ret
jp
in
push
rcrl
out
xor
and
or
incb
in
sub
cmp
fisubs
cli
loop
cli
mov
mov
mov
popa
inc
sbbl
test
xchg
xor
xchg
lret
pusha
mov
test
cli
mov
mov
std
insl
stc
pop
fisubs
or
jne
insl
fcmovnbe
pop
pop
push
xchg
call
or
in
int
int3
in
adc
data16
es
addr16
out
stos
in
jae
out
cmp
cltd
xor
cmp
xchg
mov
lock
mov
loope
mov
scas
imul
adc
mov
insb
add
cmp
pusha
sbb
rep
pushf
std
pop
adc
je
in
int
leave
jns
pop
mov
cltd
inc
fdivrl
aas
pop
fs
inc
or
sub
xchg
xor
roll
and
mov
ljmp
sahf
inc
pusha
xlat
imul
dec
dec
add
pop
sbb
stc
adc
mov
adcl
and
insl
mov
andb
xchg
test
data16
sub
jno
cmp
or
jns
hlt
inc
pop
or
ret
push
sub
push
inc
cmp
pop
push
push
gs
and
cmp
sti
movb
xchg
xchg
mov
push
dec
and
fimuls
push
rolb
loope
shlb
aas
fcompl
fnstenv
loop
nop
clc
inc
test
adc
mov
cmp
shrb
cmp
adc
pop
test
lods
movsb
jg
dec
mov
add
xor
jbe
pop
out
push
push
mov
fimuls
outsb
xchg
or
movsl
or
repz
test
adc
and
pop
inc
inc
out
xchg
push
sub
aaa
jge
push
jp
pop
lods
out
stos
jo
push
out
ja
push
mov
int
jl
rol
pop
mov
sbb
sahf
pop
jecxz
jg
dec
pop
xchg
cmpsb
dec
xor
aad
or
fwait
cmpsl
insl
lret
addr16
pop
scas
mov
rcl
gs
fists
popf
dec
sub
jae
flds
dec
in
or
adc
mov
push
imul
mov
sub
mov
fucomp
out
or
push
mov
mov
sar
mov
lret
jecxz
xor
outsb
stos
xchg
and
lds
bound
jb
test
cmp
dec
xlat
push
movsl
mov
scas
stos
decl
aam
add
int
dec
les
mov
nop
repnz
dec
or
xchg
xchg
mov
dec
jecxz
stos
sbb
jae
adc
int
imul
push
insb
cmpsb
jbe
xchg
and
hlt
mov
shll
jl
adc
leave
lea
insl
sbb
xor
imul
xlat
push
lea
test
pop
mov
inc
fldl2e
add
ljmp
jno
imul
xchg
insb
inc
loope
aaa
ret
pop
imul
sbb
jae
mov
js
mov
sarl
push
imul
jb
mov
loop
inc
cmp
pop
imul
jae
pop
mov
mov
aaa
into
add
les
and
fbld
ret
xchg
outsb
mov
pop
cmc
push
es
iret
xchg
sti
mov
cli
roll
mov
faddl
sbb
pop
push
jmp
or
repz
lds
inc
adc
mulb
daa
call
push
xor
arpl
mov
test
es
cmpsl
popf
jae
popa
movsb
leave
int
jnp
sub
jl
jg
jne
mov
jg
jecxz
cmp
cmpsb
push
test
jmp
loopne
mov
ret
into
icebp
jnp
cmc
out
cmpsb
ficoml
js
and
lahf
push
loop
stos
dec
scas
cs
and
stos
xchg
movsl
sbb
jmp
mov
inc
cmpsb
xchg
inc
fsubrs
xor
xor
pop
jge
inc
test
jle
rcrb
outsb
fisubs
movsl
fstpt
mov
xor
pop
cmp
loop
aaa
pop
out
xor
inc
push
pushf
enter
ss
mov
nop
lret
fsubs
dec
xchg
jg
fnsave
mov
jne
push
or
repz
fnstcw
add
rcrl
xor
jbe
insl
pop
rolb
pop
mov
lret
subb
repnz
clc
popa
out
call
xor
pop
scas
pop
int
icebp
inc
icebp
fnstenv
mov
jl
and
add
das
addb
push
add
mov
mov
fiadds
fsubl
or
xor
sub
hlt
pop
imul
jbe
inc
dec
dec
test
aaa
daa
pop
sti
add
aad
aas
and
aad
adc
pop
xor
dec
out
mov
xchg
and
enter
popa
scas
mov
flds
xchg
fstps
std
call
ds
or
cmp
imul
ret
hlt
xchg
popl
lahf
and
jg
jecxz
jb
addb
cs
xor
and
int
xor
sti
adc
popf
lret
and
cld
pop
cwtl
add
mov
or
and
jnp
sti
adc
sbb
xchg
push
sub
sbb
pop
adc
stos
lea
lea
push
sbb
in
sbb
dec
mov
cwtl
xor
shr
pop
push
loope
pop
jnp
mov
mov
movsl
insb
dec
dec
add
out
int
fnsave
je
sbb
cmp
or
out
xchg
stc
or
add
cmp
jbe
mov
out
pop
scas
fadd
pop
push
fmull
imul
int
fidivl
loopne
shrb
mov
sbb
push
lea
mov
aam
xor
outsl
xor
xchg
jmp
leave
data16
insl
mov
es
out
test
jmp
loopne
int3
lock
test
stos
jmp
gs
pop
add
jg
outsl
mov
std
xchg
adc
push
test
sbb
out
or
cmp
jge
shll
jecxz
aaa
mov
add
sbbl
cmp
xor
stc
xorl
jmp
cli
imul
xchg
xor
pop
scas
xchg
fcomi
adc
andb
mov
sbb
xor
sbb
ljmp
mov
addr16
or
mov
mov
data16
pop
and
shlb
sbb
jbe
cwtl
mov
inc
pop
loop
or
adc
cwtl
fcomps
pushf
mov
movsb
fstpt
mov
jg
pop
adc
aam
mov
add
pop
mov
and
cmpl
ljmp
inc
xor
aad
movl
dec
outsl
ss
and
fstp
mov
jne
mov
push
xchg
pop
nop
cs
add
fstpt
pop
push
push
pop
testl
daa
ljmp
xor
stc
mov
loopne
loope
cs
inc
mov
test
push
jo
inc
mov
lcall
and
iret
pop
lds
jmp
fnstsw
and
xor
es
xrelease
dec
dec
mov
fsubrl
sbb
inc
xor
and
dec
dec
in
test
or
xor
daa
and
arpl
js
pop
icebp
lods
cltd
test
out
or
fstps
dec
pop
sarb
pop
clc
int3
pop
in
orl
mov
scas
cwtl
cmp
push
sub
mov
je
imul
imull
inc
sbb
lcall
or
fxch
xor
mov
mov
test
cmp
aad
out
outsb
add
pop
push
int
clc
jne
xchg
pop
rorl
dec
and
xor
fwait
mov
and
add
pop
pushl
ja
and
in
add
pop
or
add
xchg
daa
mov
push
fisubrl
mov
clc
sbb
aad
lea
xchg
cmp
adc
lahf
cmp
lcall
outsb
xor
scas
mov
add
push
lods
cwtl
shrl
hlt
sub
cmp
add
jns
mov
nop
insl
sbb
push
sub
and
and
inc
add
add
aas
sbb
pop
aaa
mov
test
movsb
test
add
fsubrs
adc
add
inc
subl
insl
adc
add
and
das
roll
cmpb
and
lods
jae
icebp
or
daa
in
repz
in
add
loope
mov
arpl
add
popa
pushf
xchg
jae
stos
popf
mov
repnz
push
movsb
adc
fmuls
sarb
loope
pop
push
dec
cmpsb
xor
je
ljmp
jns
add
daa
or
push
lea
add
jbe
fbld
mov
sub
popf
add
bound
insb
fsubrs
aas
inc
shl
cmp
arpl
sbb
aas
filds
adc
das
daa
into
popf
mov
shr
sub
prefetch
or
inc
inc
jg
pop
sbb
adc
jnp
sbb
xor
cmp
pop
cmc
mov
fsubp
fstps
mov
mov
out
ret
inc
fsubrp
inc
repz
sbb
jecxz
jbe
ss
dec
push
ja
in
inc
ret
sti
push
mov
pop
lcall
mov
int
mov
lret
outsb
loopne
and
cmc
mov
xchg
pop
mov
push
stos
jge
out
dec
adc
xor
in
dec
mov
xchg
push
xor
lret
jno
cmp
out
xor
faddl
jge
pushf
loop
ja
addl
out
inc
imul
sub
incl
or
gs
xchg
mov
les
scas
inc
out
dec
pop
in
fnstcw
sti
and
test
xchg
loop
mov
loopne
das
xchg
lret
cmp
jb
loop
orb
and
andl
pop
incl
repnz
ret
fdivrs
repnz
enter
or
inc
xor
jne
in
push
sub
and
push
fcmovnu
fimuls
sub
adc
lds
and
mov
push
seta
adc
mov
push
in
inc
adc
inc
movsl
xor
mov
rolb
jg
stos
bound
mov
shlb
or
xchg
lock
sub
outsb
xor
repz
mov
xorb
test
or
cld
mov
fld
push
fmul
jg
aad
ret
into
pop
inc
and
rcll
shlb
stc
and
cld
sub
mov
inc
pop
mov
push
sahf
xor
cmp
inc
xor
or
repz
jb
je
es
ja
sbb
inc
push
leave
flds
sub
xchg
imul
imull
push
insl
aam
sub
cmp
inc
inc
repnz
or
incb
mov
nop
xor
int
xor
gs
and
cmp
dec
mov
inc
mov
jle
lock
hlt
icebp
mov
push
incl
mov
cli
and
fcmovnu
sti
rcrb
out
sbb
lea
movsb
cmp
mov
daa
jno
ret
aad
orb
cmp
jge
pusha
dec
cmp
xor
sub
inc
pop
xchg
sub
and
inc
xchg
movsl
mov
or
shl
daa
frstor
and
les
cmc
pop
call
mov
sbb
or
loopne
jb
inc
pop
rorb
xchg
lret
jae
stc
fs
divl
and
ljmp
push
jmp
push
mov
jmp
push
cwtl
push
popa
push
sarb
pushl
loopne
push
inc
arpl
jle
in
adc
cmpb
mov
xchg
cmc
mov
fidivrl
xchg
daa
cs
inc
ret
lods
and
std
int
xchg
std
imul
mov
or
lods
sbb
mov
lahf
push
pushf
xor
mov
adc
into
faddl
push
pop
insb
js
nopl
sub
ret
push
cltd
insb
mov
mov
fldz
shlb
and
iret
pop
shl
sti
jmp
sbb
inc
movsb
out
sub
adc
xchg
setg
je
cmp
add
jno
push
je
dec
push
pop
gs
pop
mov
aad
xchg
pop
lock
mov
ja
test
or
mov
jbe
mov
mov
pop
jo
scas
xchg
or
adc
pop
jb
xchg
je
cmp
dec
or
lds
out
xchg
add
outsl
or
mov
notb
loop
pop
in
in
popf
xor
lcall
into
xchg
push
or
out
int3
jns
mov
inc
xchg
aas
rorb
sbb
pop
or
xor
outsb
mov
or
xchg
nop
xor
in
out
sbb
popf
mov
rclb
test
jle
add
sbb
inc
jecxz
mov
dec
arpl
mov
in
fcomps
pcmpgtd
jb
and
jae
popa
add
jmp
sti
stos
jo
das
iret
xor
cli
cmp
push
jo
jg
jne
and
mov
jg
aad
ljmp
cli
jnp
mov
or
cmp
or
ret
cmpsb
jecxz
insb
enter
das
jbe
push
pusha
mov
fwait
and
cmc
or
mov
sbb
je
push
adc
ret
ret
shlb
aas
mov
jl
adc
sbb
mov
sbb
add
rcrl
dec
imul
int
mov
inc
out
jecxz
fsubr
xchg
lods
add
xchg
stos
jge
and
fsubrs
ret
loop
jmp
mov
pusha
aad
loopne
add
movzbl
aaa
push
xor
inc
pop
lahf
xchg
stos
jmp
test
shr
loope
and
pop
fstp
xor
stc
xchg
test
lea
andl
mov
xorl
or
stos
out
pop
dec
and
shlb
mov
push
lret
stos
test
inc
arpl
fisttpl
mov
mov
push
jg
leave
adc
mov
xchg
pop
jns
xchg
stos
scas
jp
cwtl
adc
mov
sbb
adc
cltd
std
int3
push
add
movsl
or
nop
stc
dec
js
loop
xchg
mov
mov
and
je
mov
add
sub
loop
pop
shl
popl
lds
or
imulb
dec
jno
xor
fldcw
arpl
test
or
mov
sbb
and
jge
xchg
lods
mov
sbbb
testb
and
mov
adc
pop
xor
int
lahf
rcl
mov
xor
fwait
insl
xor
jmp
bound
ss
or
mov
cmpsl
jp
fldcw
loop
jnp
push
xor
out
not
sbb
dec
idivl
mov
add
push
push
jl
insb
pop
jae
leave
scas
clc
and
sub
pop
jg
lock
pop
fnstenv
pop
sub
mov
das
mov
stos
xor
rcrb
mov
out
addb
ja
sbb
mov
shl
jmp
push
pop
int3
outsb
mov
cs
fldcw
dec
fmull
ljmp
mov
ror
lods
push
arpl
pop
add
ss
in
lcall
cmp
clc
xor
pop
negl
mov
sub
loop
sub
jg
adc
xchg
push
mov
push
leave
mov
mov
or
adc
sbb
mov
in
scas
or
or
cmp
cmp
push
xchg
sub
xor
xor
mov
pop
sbb
dec
pop
cmp
ljmp
mov
mov
movsl
push
sub
aad
iret
push
mov
lahf
pop
aad
jb
dec
sub
aas
and
xchg
aad
pop
add
jmp
jecxz
xchg
cmp
pushf
pop
outsb
mov
popa
xchg
in
enter
out
or
jb
sarb
jne
cmp
or
sub
hlt
xor
mov
clc
jnp
mov
jle
inc
bswap
adc
dec
fimull
mov
cmpsl
fs
iret
dec
mov
xchg
pop
cli
ljmp
bound
lret
jno
push
mov
movsl
sbb
int3
mov
dec
inc
sbb
sbb
cmp
push
ja
sbb
xchg
jle
stos
mov
mov
pop
cmpb
lahf
or
or
push
mov
ja
push
and
push
cmpsl
lds
jmp
mov
shll
shrb
repnz
stos
add
jno
mov
or
ljmp
and
scas
mov
xor
or
sub
in
icebp
sub
sbb
inc
lds
cmc
push
outsl
loop
push
clc
ja
jle
cmpsb
es
and
inc
xor
les
mov
divb
adc
and
and
fcmove
or
ss
test
push
adc
inc
mov
popf
bnd
push
mov
or
dec
sub
xchg
jg
or
mov
aas
arpl
mov
add
sub
data16
stos
xchg
mov
dec
in
std
adc
or
lods
push
sarl
xor
lods
out
xor
jbe
sbbb
mov
int3
mov
mov
sbb
rcr
dec
pop
fsubs
xchg
pop
xchg
sbb
mov
jg
leave
xor
cli
push
ret
cmp
fmuls
xor
nop
or
add
sub
arpl
jnp
and
icebp
adc
or
adc
mov
in
sub
lock
sbb
pop
fs
arpl
inc
inc
jecxz
dec
xorl
bsf
call
add
mov
mov
pusha
sub
rcll
and
cld
cmp
xor
push
mov
outsb
stos
xchg
sbb
xchg
mov
pop
xor
push
mov
and
in
sti
xchg
mov
sub
sbb
add
pop
clc
mov
jne
loopne
xor
mov
subl
jb
push
mov
push
ja
xor
test
int3
lods
dec
push
sub
into
mov
push
or
in
lea
out
mov
cmpsl
pop
rcrb
adc
lods
adc
mov
lock
adc
cmc
mov
in
sbb
adc
jbe
push
sbb
inc
sub
mov
cmpsb
lea
mov
adc
imull
fdivr
adc
aaa
js
dec
fs
cmc
xchg
mov
mulb
xchg
subl
jmp
loope
lret
and
pusha
cmpsl
lret
push
mov
fsubl
test
fwait
sbb
cmp
jmp
fadds
fdivl
mov
push
in
xchg
lods
mov
pop
pop
jl
inc
cs
or
out
test
aaa
push
out
jae
xchg
je
icebp
jnp
lds
mov
push
xor
sbb
jne
mov
inc
roll
or
inc
cmp
pop
dec
adc
sbb
and
popf
sub
add
mov
test
cmp
inc
cmp
jge
mov
repnz
pop
insl
incl
or
and
cld
pop
ja
mov
cli
mov
repz
or
jle
sub
mov
pop
xor
sbb
in
les
and
adcb
incb
int3
pusha
gs
cmc
xchg
adcl
cld
repnz
xorl
pop
shlb
cwtl
and
lret
inc
adc
xchg
or
stos
bound
jmp
pusha
insl
stc
enter
dec
inc
add
into
xchg
and
out
cmc
mov
call
and
jp
icebp
xchg
popl
pop
cmp
and
xor
cld
adc
in
push
stos
lds
scas
imulb
sbb
mov
or
or
out
or
addl
aam
vpaddsw
push
ret
hlt
andl
lods
ret
testl
hlt
mov
sub
sub
lret
shrl
dec
sbb
push
daa
outsl
fidivs
pop
jne
xchg
lret
sbb
orl
cli
mov
movsb
or
arpl
cmp
xchg
out
ljmp
pop
jo
xchg
or
cmp
pop
imul
les
ss
lods
inc
and
dec
cwtl
lret
pop
shl
mov
sbb
frstor
and
mov
sbb
pop
jae
lahf
jp
lods
pop
mov
mov
gs
or
mov
andb
xchg
mov
jae
xor
std
add
pop
cmp
sub
jns
int3
gs
mov
test
pop
rorb
push
cld
lods
ret
pop
sbb
cld
popa
stos
dec
adc
daa
fildll
rcr
lods
lds
dec
and
rcrl
adc
cmp
pop
sub
jg
subb
dec
dec
inc
es
imul
mov
ss
xchg
add
mov
das
mov
mov
lds
mov
out
inc
or
insl
test
std
jge
or
xlat
or
ret
cmp
inc
popf
and
push
push
push
mov
jb
fnsave
xchg
pop
or
iret
mov
xchg
fiaddl
mov
fisubl
jp
das
adc
fs
out
into
xchg
and
mov
add
mov
dec
fildl
loope
loope
andb
jp
sbb
outsb
mov
rclb
mov
cmp
jns
fs
sbb
dec
xchg
dec
cmpsb
in
xchg
mov
test
cmpsl
jno
vpunpcklwd
sub
roll
mov
xchg
inc
clc
movsl
repnz
loopne
inc
jae
sti
es
xchg
push
test
je
aas
lret
pop
popa
jmp
sbb
rol
iret
mov
or
icebp
out
mov
cmc
push
popf
movsl
sub
ret
and
imul
inc
lcall
addr16
flds
repz
repz
int3
pop
cmp
pop
ja
jae
in
push
pop
lea
mov
and
pop
in
pop
je
mov
dec
cli
aad
cmp
shrb
lods
mov
aad
xchg
dec
xor
insb
sbb
jns
pop
pop
xor
stos
cmp
pop
ss
imul
fiadds
jo
mov
in
adc
or
popa
cmp
inc
jno
std
lods
es
or
std
dec
mov
cs
stos
inc
adc
popl
dec
out
xchg
mov
push
sub
jns
mov
ljmp
sbbl
aaa
add
pushf
mov
out
fnsave
pop
in
sbb
push
add
scas
je
xor
ficoms
or
daa
pop
test
dec
adc
stc
xlat
mov
push
cmpsl
outsb
sar
jb
cmp
xchg
cli
pushf
sub
mov
sub
notb
xchg
jb
xchg
mov
xchg
sbb
and
fsubl
outsb
aad
inc
icebp
movsl
adcb
mov
dec
mov
lret
repnz
mov
pop
sarl
int3
fdivrs
sahf
mov
inc
push
es
call
and
or
in
mov
pop
lcall
mov
and
pop
ret
inc
bnd
rclb
stos
repnz
popa
cmpsl
lcall
sub
int
loope
jbe
cmp
mov
js
sbb
push
jmp
adc
inc
fcoml
loop
xchg
repz
jno
pop
sub
jp
or
sub
in
mov
pop
pop
cmpsb
jns
les
out
add
xor
xchg
sub
inc
scas
jno
mov
push
scas
xor
push
jb
mov
and
and
test
inc
in
pop
xchg
popa
stos
pop
sbb
add
or
jmp
nop
fmuls
clc
mov
jmp
dec
xchg
mov
shl
repnz
mov
test
mov
daa
mov
int
inc
push
bound
xor
ds
mull
data16
ljmp
addr16
dec
lret
jp
lds
adc
and
push
push
sahf
mul
or
int
repnz
inc
sbb
and
adc
nop
pop
ss
js
fwait
and
stos
sub
stos
jmp
out
test
pop
fwait
test
jns
xchg
inc
adc
sahf
xchg
ss
lret
pusha
subb
mov
rorb
das
xchg
adc
jne
xchg
dec
add
pop
inc
push
or
inc
cld
pop
sbb
pop
fxch
movsl
sahf
jno
cs
fsub
fdivrl
or
push
mov
loop
dec
dec
inc
mov
and
or
push
pop
xor
sbbb
inc
pushf
repz
push
test
aaa
ret
pop
mov
push
cmpb
or
iret
mov
jecxz
sub
cmp
aaa
insl
imul
lods
mov
rcr
mov
cmp
jg,pt
adc
adc
ljmp
test
ds
jne
aas
fisubrs
aad
sbb
inc
jp
test
fwait
push
sub
mov
xor
sahf
imul
jo
ja
stos
xor
jl
cwtl
inc
fdivrl
iret
stos
mov
mov
outsb
das
enter
push
lock
cmp
rcl
pop
call
js
int3
jnp
pop
push
push
adc
adc
pop
inc
movl
andl
jl
mov
mov
test
mov
insl
jg
push
mov
pop
stos
shrl
cwtl
fldcw
add
jmp
stos
arpl
ljmp
or
out
ret
rcl
jns
dec
jmp
int
mov
xchg
insl
cltd
mov
pop
jl
xchg
xchg
loop
mov
mov
or
pop
fisttps
loop
mov
sbb
sbb
sbb
push
dec
sub
mov
mov
lods
cltd
jns
add
outsb
sbb
sub
gs
aaa
pop
mov
js
cwtl
and
in
xor
push
adc
pop
inc
into
imulb
jmp
ss
push
shll
xor
dec
nop
pop
mov
and
jmp
cli
jne
xor
push
es
lcall
popa
xor
cmp
push
or
rcrl
jmp
jnp
and
mov
xlat
loop
stc
mov
adc
and
push
std
aas
or
lock
adc
shl
andl
mov
call
mov
and
mov
xchg
insl
ss
mov
pop
fiaddl
out
cmp
sbb
fstps
imul
lret
fcomps
jae
xchg
lea
cmpsb
jmp
sub
cmpsl
lods
int3
dec
push
in
inc
ss
add
fdivs
gs
ret
int
and
lret
outsb
lods
inc
out
or
inc
mov
lret
push
add
nop
aaa
test
aaa
or
cmpsl
mov
fdivs
mov
push
push
sbb
mov
std
push
or
sbb
loopne
mov
out
push
or
xor
cmp
hlt
rclb
pusha
mov
mov
pop
lods
or
inc
in
es
and
outsl
test
stc
push
jg
shlb
nop
imull
cmp
pop
arpl
push
inc
stc
jbe
push
pop
mov
test
sbb
xchg
fsubs
in
test
fmul
fisubrl
in
call
mov
loopne
add
outsl
cmp
dec
sbb
xchg
xor
or
jbe
cmpsl
ds
lods
inc
inc
mov
inc
ljmp
inc
lock
sbb
jl
push
fnstenv
or
cmpsl
insb
ja
sub
test
jbe
test
adc
xchg
add
jne
push
stos
js
mov
lods
add
lock
arpl
cmp
stos
or
repnz
dec
out
negb
clc
add
insb
jns
test
js
sahf
repnz
into
sub
pop
jae
nop
jne
test
lods
ljmp
mov
inc
sbbb
ret
outsb
push
push
push
faddl
aad
cmp
subl
call
xchg
jns
lret
aam
push
push
icebp
jl
cmp
mov
ss
sub
xor
cmp
mov
rclb
push
xchg
add
jp
aad
push
cmpsb
scas
test
mov
xsha1
cmpsb
dec
jae
test
mov
popa
es
notb
jne
mov
mov
sbb
shll
into
inc
shl
mov
dec
sti
popf
xchg
sub
mov
inc
sbb
adc
cld
or
mov
fstpl
aam
dec
push
sarl
sbb
add
addr16
or
mov
mov
out
test
rcl
cmp
sbb
mov
and
xlat
pop
das
cmp
repz
sbb
jl
test
dec
jecxz
push
push
ret
xor
mov
jns
loop
cmpsl
lds
clc
sbb
dec
cmpsl
ret
push
clc
jnp
pop
xchg
test
add
hlt
mov
adc
mov
xor
call
ret
fimuls
daa
pop
mov
sub
jecxz
jle
mov
xchg
sar
and
jnp
mov
add
loope
stc
sahf
jmp
jmp
xchg
xor
std
fadds
xchg
mov
jle
shrb
popa
inc
movsb
cmp
ds
pop
cmpb
cmpsl
mov
out
fcomip
repnz
jp
test
mov
mov
push
mov
cli
movsl
xchg
lahf
sahf
sub
test
xor
dec
shl
int3
movsl
pop
movsl
cmp
rcrb
test
push
jge
shrb
mov
aam
mov
aad
ret
or
sarl
idivb
dec
fiaddl
cmpsl
ds
jmp
add
sbb
xchg
adc
addr16
sbbl
or
dec
cmc
sub
cmp
insb
outsl
es
or
pop
scas
pop
pop
int3
fwait
test
cmpsl
mov
cltd
sub
pop
mov
call
pop
decb
pushf
clc
jl
pop
in
push
ljmp
cmc
mov
xchg
aam
clc
add
xchg
mov
ret
lahf
xchg
sub
and
insb
dec
cmp
aaa
jnp
loopne
shll
xchg
data16
cmp
mov
cmc
loope
jb
mov
xor
scas
lret
test
mov
mov
xor
push
push
movsl
mov
rcl
jae
pop
out
mov
test
test
sub
mov
dec
jp
mov
push
xor
lahf
aad
outsl
rorl
fwait
lods
insl
insl
jmp
lcall
jl
out
out
sbb
mov
lock
mov
push
pop
mov
sbb
fisubl
push
fdivr
cmp
xor
dec
dec
sbb
xor
lock
xlat
jmp
jl
cmpsb
data16
jo
cmp
push
sub
js
fisttps
lcall
vmovups
mov
stc
ss
in
sub
cli
jle
leave
sub
in
subb
mov
fdivrs
jnp
shll
scas
push
sub
icebp
xor
into
pop
enter
xchg
inc
in
testb
out
in
gs
xorl
inc
hlt
loop
fdivrl
add
das
dec
inc
sahf
fs
xor
dec
mov
jb
jle
xor
loope
movsl
stos
inc
add
push
je
push
lods
sbb
and
dec
pop
pop
sub
mov
shl
repnz
lret
leave
jg
mov
add
daa
inc
mov
popa
inc
std
dec
cmpsl
sbb
xor
dec
icebp
sti
iret
jecxz
adc
xchg
xchg
stc
mov
ret
add
mov
or
lods
imul
fcom
fisubl
mov
mov
xchg
sub
pushf
daa
inc
into
mov
sbb
add
in
dec
mov
pop
mov
sbb
xchg
adc
lcall
aam
pop
mov
bound
ljmp
out
or
jg
ss
loop
and
xlat
mov
push
sub
leave
adc
out
cmpsb
cmpsl
ds
push
cmc
pushf
into
ret
mov
hlt
push
cmpsb
insl
dec
mov
insl
jge
mov
loopne
mov
cltd
xchg
in
lods
cmp
mov
subb
iret
fs
outsl
xor
pop
inc
in
aaa
xor
jp
dec
pushf
fcmovnu
lods
out
inc
cmpsl
repz
or
ja
clc
sbb
pop
int
jns
sahf
daa
and
pop
sarb
adc
es
mov
out
and
sti
sti
xlat
imulb
lret
sub
mov
sbb
call
popa
insl
fstpl
sahf
jns
sti
ljmp
xchg
jmp
cmc
inc
sbb
loopne
fistpll
shrl
ljmp
rclb
dec
mov
mov
adc
push
xorl
mov
ret
push
mov
xor
loop
jg
cli
pop
mov
sub
push
call
clc
out
push
sbb
mov
ret
fadds
inc
jbe
mov
push
movsl
jae
mov
jge
jnp
or
aam
loop
cwtl
mov
push
jns
cld
adc
dec
push
mov
push
jo
shrb
cli
and
gs
jle
out
notl
mov
sti
repnz
sarb
jb
bound
les
ss
movsb
xchg
dec
cmp
negb
enter
addb
xorb
fwait
pop
add
or
loopne
xchg
andl
hlt
rcrl
and
test
nop
push
xor
or
jge
out
stos
jbe
xchg
mov
sbb
outsl
adc
push
outsl
out
push
mov
sahf
dec
stos
iret
sbb
shrb
lret
lock
cmp
or
xchg
mov
ds
pushf
test
je
shl
push
mov
ljmp
pushf
cli
in
es
je
sti
xchg
popf
gs
push
sub
outsl
daa
add
or
adc
push
popa
frstor
xor
fldl2t
mov
and
and
pop
test
sub
inc
popf
dec
cmp
dec
push
test
lods
mov
jge
mov
enter
sub
or
scas
inc
dec
xchg
leave
push
shrl
sbb
js
push
cli
xchg
mov
dec
out
xchg
shlb
fsub
xchg
mov
mov
or
inc
pop
pusha
adc
lods
icebp
aas
push
imul
mov
roll
insl
sub
repnz
add
sbb
pop
dec
fildll
call
or
inc
dec
mov
mov
adc
jns
adcb
xchg
xor
stc
add
adc
stos
push
xor
orb
jl
mov
push
mov
xchg
jae
repnz
push
inc
hlt
lds
xor
inc
pusha
add
ficompl
cmp
jnp
je
xchg
test
pop
rorl
dec
lods
add
and
or
mov
cltd
int3
inc
xlat
jge
out
jae
pop
mulb
cmp
and
test
cmpsl
xchg
xor
cmpsl
outsb
test
flds
lahf
inc
jb
pop
and
cmp
sbb
stos
pop
out
sbb
in
xchg
stc
adc
mov
mov
rcrl
repz
insl
pop
xchg
pop
xor
push
mov
lds
mov
push
movsb
xlat
shll
dec
push
xchg
xchg
loop
jae
repz
dec
mov
mov
cltd
sbb
mov
movl
cmp
and
fiaddl
adc
loope
in
cmc
mulb
adc
push
imul
lock
pop
popa
cmp
mov
mov
js
jecxz
jo
test
sarl
dec
dec
pop
push
xlat
scas
xchg
js
loop
je
and
xchg
in
add
add
shll
add
je
out
mull
pusha
inc
fcoml
je
lods
xor
cmpsl
xor
fwait
xchg
sbb
xchg
sbb
or
sub
push
xchg
cmp
mov
mov
and
lret
in
repnz
dec
ja
jl
xor
out
push
and
je
out
bound
mov
test
mov
pop
scas
das
mov
sbb
mov
push
mov
jle
ret
frstor
dec
aaa
lahf
fsubl
ljmp
jb
call
subl
loopne
outsb
mov
fwait
test
adc
je
pop
xor
sbb
mov
push
xor
shlb
jne
cs
js
in
or
loopne
xor
xlat
aad
fdivrl
repnz
popf
jge
mov
mov
int
test
jle
mov
and
ret
push
outsl
push
in
lcall
sarb
xchg
and
push
jge
out
movsb
jecxz
xchg
je
das
cli
push
push
xor
stc
adc
xor
dec
arpl
cmp
jbe
insl
mov
mov
repnz
out
sub
call
push
scas
inc
pop
fmull
subb
cmp
out
lahf
aam
aaa
mov
xchg
adc
aam
ja
xchg
xor
sbb
xor
mov
jle
sub
sahf
pop
pop
push
in
stos
pop
movsb
mov
js
movsb
jns
pop
repnz
pop
mov
adc
ror
mov
loope
add
test
cwtl
sbb
inc
lods
outsb
add
xchg
into
lret
cmp
push
dec
cmp
imul
push
add
push
les
jge
cmc
dec
pop
daa
xchg
or
and
les
rcll
repz
xchg
sub
jmp
dec
inc
cltd
pop
push
rsqrtps
xchg
and
cmp
test
lods
pop
push
loope
lahf
cmp
fldt
fisubs
sbb
mov
hlt
mov
repnz
call
inc
rcrb
or
out
jnp
adc
data16
addr16
movsb
pop
cs
adc
jl
pop
xchg
sub
cmp
dec
xor
in
mov
in
inc
ret
jno
test
jecxz
xchg
test
outsl
pop
xlat
cmp
mov
sub
pop
push
inc
dec
pop
js
lds
mov
push
ret
imul
pop
lods
ljmp
pushf
xor
hlt
jge
shrl
mov
fxch
testb
jg
and
push
pop
sbb
sbb
and
cwtl
jo
inc
push
negb
mov
in
enter
push
cs
jp
lock
lahf
cmp
mov
jbe
pop
cwtl
xchg
dec
sub
insl
cmpsl
inc
into
je
pop
cmp
and
aad
xchg
sub
stc
sbb
add
fdivrl
mov
in
pusha
xlat
xchg
xor
xchg
xor
xorb
sahf
int3
arpl
andb
js
gs
push
scas
add
push
leave
xor
insb
sbbb
rcrl
lea
mov
mov
sahf
call
outsb
mov
sub
pop
aam
mov
mov
mov
push
loope
roll
call
or
cmp
lea
jl
pop
sub
insl
cmpsl
nop
push
scas
sbb
sub
subl
lret
stc
ja
adc
shrl
out
dec
fs
push
lcall
sahf
or
into
shll
push
adc
roll
daa
adc
ss
inc
daa
fistpl
arpl
scas
adc
sbb
jmp
aaa
push
in
and
shll
ds
clc
pop
das
cmpsl
daa
pop
repz
movl
adc
inc
lods
sarb
mov
fwait
mov
mov
mov
test
cwtl
mov
js
imul
dec
push
mov
push
mov
loop
pop
aam
mov
imul
dec
xchg
xchg
xor
push
pop
mov
mov
and
jp
xchg
jne
adc
rclb
mov
imul
mov
sbb
mov
mov
cmp
loope
fistps
sbb
mov
sub
imul
fcoml
mov
and
test
push
ljmp
aas
push
add
lods
adc
pop
nop
lods
cmp
repz
xor
cmp
inc
or
rcrb
pusha
mov
dec
jmp
jae
sub
mov
inc
add
push
sarl
hlt
push
test
inc
add
inc
fdivp
out
sub
insl
arpl
jne
cltd
or
cwtl
inc
mov
stc
repnz
sbb
cmp
in
push
or
mov
jns
ficoml
fwait
lcall
ss
mull
ret
ret
neg
xor
addr16
pop
sub
aaa
mov
pop
mov
sbb
add
shl
test
ja
scas
dec
arpl
int
js
push
push
fdivs
jae
popf
sub
jb
mov
mov
cmpsl
out
push
call
pop
popa
in
ret
leave
js
xlat
or
and
add
mov
jle
jo
or
mov
pop
push
in
cmp
push
xchg
mov
and
mov
push
loop
stc
nop
mov
pop
pop
lret
test
lahf
dec
jnp
ja
cmp
gs
jmp
xlat
std
imul
jge
sub
scas
xchg
dec
pop
pusha
add
repnz
mov
lds
mov
mov
insl
xor
sbb
xchg
jb
clc
aas
or
fists
inc
jmp
or
gs
ror
roll
push
insb
sub
inc
xor
jae
rorb
push
enter
jno
leave
mov
out
mov
psrld
loopne
into
sbb
test
add
in
or
mov
arpl
mov
loopne
mov
loop
jmp
push
pop
outsb
mov
aam
fcomps
fimuls
sbb
dec
push
jmp
and
dec
mov
adc
je
mov
sub
cmp
lret
cwtl
mov
sti
mov
or
mov
fisubrs
in
or
fstpl
fs
sbb
sbbb
dec
pushl
sbb
jge
xchg
mov
lods
push
insl
scas
add
int3
mov
fld
out
cs
mov
push
dec
jne
add
push
scas
dec
push
daa
mov
es
addb
xchg
pop
inc
stc
insl
jle
out
fcoms
loop
jp
pop
pushf
xor
lcall
mov
jecxz
test
in
rcl
xor
push
in
mov
cmc
mov
and
imul
test
push
jno
cmpsb
xchg
fdivrs
mov
stc
movsl
cmp
bnd
or
push
cs
cmp
jo
cld
xchg
mov
sbb
mov
insb
scas
add
pop
aas
push
sub
xchg
xor
cli
lret
and
es
adcl
scas
pop
ja
pop
jns
subb
pop
lret
aaa
mov
push
pop
jae
leave
je
pop
lods
and
jl
sub
test
test
das
jmp
sub
mull
mov
sbb
sbb
lahf
or
add
pusha
mov
pop
addl
or
mov
sbb
inc
pop
ss
std
in
test
lods
aaa
loop
and
sbb
dec
add
lret
popf
stc
lret
xchg
mov
mov
mov
sahf
inc
jo
ja
clc
movsl
std
inc
lods
jmp
rcll
in
mov
inc
popf
orl
bound
and
fildll
jbe
cld
pop
repnz
movsb
int3
mov
sbb
into
xor
clc
inc
and
arpl
daa
mov
and
inc
mov
add
stos
icebp
add
int
sbb
mov
adc
sub
cmpsb
xor
add
inc
jns
in
xchg
lods
sbb
mov
pop
mov
mov
pop
jp
jnp
daa
xchg
sub
lds
movsl
push
repz
mov
mov
into
test
jl
imul
fwait
adc
mov
jmp
and
mov
push
inc
loopne
dec
shl
push
shrl
xor
or
xchg
pop
cmp
add
lea
fmul
frstor
clc
sbb
push
inc
jbe
mov
inc
jae
shll
es
jmp
leave
repz
and
or
or
das
pop
add
mov
push
fwait
mov
movsb
jo
mov
lds
loop
mov
int
fnstenv
arpl
dec
cmp
test
and
out
jmp
push
les
addb
gs
inc
pop
mov
divb
dec
xchg
lcall
clc
mov
and
stos
adc
sub
add
cmc
sbb
stc
xchg
bound
sti
stc
xchg
cltd
mov
orb
push
rcl
or
xchg
add
enter
pop
mov
inc
and
test
imul
aad
insl
sub
fstps
jmp
sbb
cld
push
rcrb
arpl
mov
push
mov
mov
sub
dec
jmp
scas
lock
push
adc
dec
popa
push
sbb
ja
lds
or
and
outsl
adc
cmpsl
cmpsb
decl
mov
push
lock
lds
scas
lods
or
sbb
stos
mov
cmpsb
lea
call
push
in
sbb
pop
movsb
and
jnp
je
cmp
rcrb
inc
dec
inc
divb
shlb
test
jno
cmp
stos
mov
inc
ja
int
push
mov
test
iret
add
adc
int
mov
inc
fwait
push
cmp
or
div
jns
adc
and
inc
pop
jne
jne
mov
jae
mov
lods
or
and
lock
and
popa
mov
fs
sub
movsl
and
adc
repz
sub
ret
ret
sbbb
out
sbb
and
jle
push
loopne
aad
jp
mov
fcmovnu
hlt
lds
in
pop
sahf
in
xchg
xchg
adc
inc
mov
dec
aaa
cmp
jae
mov
loope
test
lcall
and
pop
negl
push
xchg
ljmp
push
in
inc
iret
repnz
aas
jmp
repnz
lret
add
popf
sbb
div
cmp
sbb
dec
pop
dec
dec
call
dec
icebp
aad
es
push
dec
mov
push
loopne
xchg
enter
pop
repnz
push
pushf
cs
sub
jmp
cwtl
stos
hlt
or
cmp
pop
mov
in
push
arpl
mov
pop
in
mov
ret
add
cmp
sbbb
fisubrs
test
in
xor
fucomi
icebp
push
mov
lock
rcl
inc
mov
test
inc
xor
mov
or
pushf
inc
sub
loope
out
xor
and
fwait
mov
lods
orb
ret
fmull
rcrb
pop
movsl
adc
pusha
out
adc
movsl
lea
enter
addr16
cwtl
ds
fnsave
aam
in
out
xor
sti
bound
cmp
dec
addl
aad
mov
decl
arpl
sarb
cmp
mov
jns
aam
int3
pop
nop
sub
imul
stos
cwtl
fcomi
pop
xor
lods
mov
push
pushf
das
pusha
pushf
ret
xorl
pop
adc
and
inc
fadds
lods
pop
jae
loop
notb
in
bound
adc
jle
push
das
int3
es
jl
mov
dec
cmp
lods
mov
xor
outsb
sub
cltd
je
lds
mov
scas
xchg
fs
push
inc
mov
enter
sub
fldenv
adc
test
cwtl
out
test
mov
sub
hlt
inc
call
adc
xor
xchg
fst
fucompp
cwtl
or
pusha
imull
rcrl
imul
and
lret
stc
pop
sbb
in
dec
shrb
adc
mov
sbb
xchg
mov
popa
outsl
jb
pop
lock
addr16
sub
out
shll
lods
and
inc
mov
test
aaa
into
fistl
push
and
or
add
ds
sahf
mov
inc
lcall
inc
mov
pop
mov
pop
mov
lods
and
mov
je
jge
pop
jno
mov
or
sub
addr16
loope
sbb
push
push
popa
push
and
rorl
fwait
pop
insb
outsl
popf
jge
lret
mov
push
adc
test
bound
add
icebp
outsl
repz
je
ljmp
mov
inc
dec
xor
add
pop
mov
stc
repz
dec
fidivl
push
xchg
or
sub
sbb
or
cli
xchg
test
pop
xor
sbbl
add
shlb
and
pcmpgtd
mov
mov
jmp
or
mov
clc
hlt
in
es
xchg
out
mov
incb
dec
cmp
cmpsb
andb
xchg
mov
mov
adc
outsb
arpl
fwait
jno
mov
in
sbbl
push
dec
xchg
add
es
nop
rcrl
push
test
xchg
ja
mov
push
mov
cli
mov
mov
gs
inc
ljmp
xor
dec
popf
xor
fld
pusha
or
push
cltd
int3
outsb
add
or
pop
test
sub
decb
cli
and
aaa
add
cld
xor
cs
xchg
xor
or
repz
hlt
cmp
cmp
mov
loop
add
out
shlb
sbbb
add
jge
popf
mov
daa
enter
jne
out
add
lret
lea
and
call
mov
pop
sbb
scas
into
sub
sbb
aas
dec
and
and
test
lods
push
jb
out
lds
push
fcomip
cmpsb
mov
pop
fcmovnb
mov
icebp
lock
inc
testb
mov
movsl
inc
xchg
add
mov
pop
xchg
fsubrs
aad
mov
lods
xchg
mov
xchg
cltd
pop
cli
inc
jecxz
push
mov
adc
mov
mov
out
es
std
push
mov
in
dec
inc
sub
ret
aam
adc
xlat
mov
shl
lods
lods
push
pop
shl
mov
dec
loop
mov
push
frstor
movl
dec
imul
sub
fmuls
sub
mov
arpl
fwait
add
and
out
aaa
and
pop
jp,pn
mov
repz
lods
movsb
mov
push
xchg
pop
mov
mov
pop
test
mov
inc
dec
sbb
adc
mov
js
ret
bound
pop
cmp
pop
dec
dec
les
inc
dec
stos
mov
out
scas
aas
xchg
cmpsl
cmp
pop
outsl
andb
mov
sbb
inc
mov
inc
and
mov
cmp
lret
ror
adc
insb
sbb
es
push
or
cs
cmpsl
xor
lods
xor
fidivrs
mov
ljmp
or
cmp
jns
or
mov
scas
insb
xor
aad
and
fwait
sub
int
add
shrb
nop
mov
inc
imull
mov
shrl
sbb
into
les
shlb
cltd
imul
inc
out
add
add
outsl
lock
mov
pop
stos
xlat
jnp
xor
push
shrl
mov
and
mov
dec
jp
mov
iret
xlat
xor
daa
jle
lcall
and
pop
lock
jb
jle
xchg
cmp
adc
test
orb
xchg
jp
out
stos
scas
shlb
hlt
xor
repz
in
xchg
xor
inc
pop
mov
mov
sub
add
lret
push
fbstp
jbe
jo
adc
nop
aad
sub
mov
fcmovbe
cmc
or
pop
mov
xor
push
lods
aas
pusha
iret
mov
push
enter
out
sub
mov
mov
shlb
aam
mov
mov
xor
lods
lods
lret
dec
dec
sbbl
pop
and
mov
adc
cs
jbe
jbe
sbb
mov
imul
call
and
xchg
stos
jb
orl
arpl
mov
xchg
movsl
test
dec
in
add
dec
in
loopne
mov
mov
int
out
rcll
xor
and
push
imul
mov
stos
xchg
mov
adc
adc
xor
loopne
adc
push
or
nop
pop
xor
imul
cmp
xchg
push
add
push
ljmp
loope
push
ret
add
xchg
mov
filds
testb
xchg
scas
jne,pn
pop
cmp
lock
fnstcw
push
out
mov
andl
setge
call
dec
test
lock
push
es
add
or
xchg
testb
pop
stos
jmp
and
push
les
xor
js
push
jae
popa
div
mov
cmp
or
inc
loopne
sub
fistps
test
mov
arpl
or
sub
ja
shl
mov
ror
cmp
in
and
adc
in
lret
bound
cmpl
pop
jbe
jecxz
mov
add
incl
int
sub
cmpsb
ret
sub
loop
inc
dec
out
inc
sbb
add
and
xlat
test
ret
jae
jmp
mov
mov
push
shrl
pop
cmp
repnz
shlb
mov
dec
add
and
mov
sub
cmpsl
mov
and
xchg
je
cmp
int
shlb
mov
mov
jmp
je
fsubs
mov
sub
popa
aas
dec
xchg
imul
imul
insb
mov
pop
cmp
ret
push
xchg
lods
int
or
push
out
cld
lret
sbb
and
sbb
sbb
cwtl
lods
mov
sarl
sub
roll
and
sub
or
sbb
std
jge
test
nop
cs
jb
sbb
and
and
cmpsl
mov
lods
dec
bnd
jle
pop
out
xchg
pop
popf
lods
mov
xor
add
icebp
dec
test
outsb
cltd
mov
mov
add
xchg
dec
cmp
jne
lock
rsqrtps
pop
push
lods
test
aad
add
enter
mov
call
rcrl
cmc
xchg
mov
mov
rcll
in
mov
sub
out
add
stos
jne
aas
cld
gs
adcl
xchg
xchg
mov
jo
mov
push
fstpt
insb
sahf
iret
ss
mov
push
or
push
stos
lcall
das
mov
shl
lds
js
adc
inc
dec
loope
in
data16
jecxz
dec
sbb
movsl
cmp
dec
arpl
xor
les
xchg
stos
add
lret
aaa
mov
testl
mov
daa
sbb
mov
notb
sub
mov
inc
push
pop
lret
mov
daa
mov
mov
mov
inc
data16
mov
aaa
notl
incl
pop
xor
fst
outsb
mov
sti
jecxz
mov
fcmovbe
pusha
xor
hlt
mov
fs
pop
dec
outsl
js
add
icebp
leave
cltd
stos
aad
and
clc
cmp
and
jp
ret
mov
popa
xor
jg
push
rolb
cmp
out
and
push
lret
add
fnsave
mov
setp
repnz
popf
xchg
xor
inc
or
jbe
std
arpl
push
push
mov
jne
mov
jo
jecxz
imul
or
sbb
mov
mov
loope
sub
cltd
into
add
inc
sub
add
out
lds
add
xor
repnz
rcr
je
cmpsb
push
fstl
test
pop
cld
cmp
mov
or
pop
cmp
inc
gs
add
loop
push
outsl
add
das
mov
pusha
sbb
and
cmp
cmp
fmuls
dec
push
js
lret
and
cmp
icebp
xchg
mov
testb
xor
repz
fdivl
push
mov
int
daa
sbb
push
aam
dec
sbb
icebp
xchg
cmp
repnz
add
add
jl
or
clc
add
rcr
sub
repz
or
insb
mov
test
sbb
sbbb
inc
hlt
or
push
xchg
fcomps
loopne
jb
andb
insl
xor
jbe
sahf
fwait
cmpsl
jmp
test
lock
dec
gs
vpmacsdql
push
add
mov
lea
pop
jmp
xor
sbb
jecxz
or
out
xor
test
sti
lahf
divl
fistps
outsl
lcall
ss
xor
sbb
ja
ds
mov
xor
popa
frstor
sbb
and
icebp
cld
xchg
pop
and
leave
sub
xchg
add
inc
jne
push
dec
test
cmp
das
mov
mov
aad
dec
pop
jns
imul
into
enter
fnstenv
push
test
shrl
xor
cmpl
jb
repz
pushf
ja
inc
and
inc
mov
jl
mov
dec
sbb
leave
inc
mov
adc
adc
pop
cmp
lret
std
mov
mov
and
shll
loope
int
xor
dec
mov
arpl
or
mov
mov
push
ficompl
adc
imul
incb
push
mov
ss
scas
cmp
cmp
add
jno
mov
outsb
loop
dec
bound
testb
xchg
add
push
ret
negl
push
mov
subl
jns
push
and
mov
push
pop
cmp
mov
fmull
stos
roll
and
fnstcw
icebp
lcall
inc
or
push
out
imul
cmp
sub
add
das
mov
cmpsl
or
mov
shll
mov
cmpsl
test
pop
fprem1
ficomps
sub
push
mov
test
dec
das
adc
push
xchg
push
rcll
shll
fisubl
ds
js
loope
fsubr
test
das
cmp
push
adc
data16
dec
in
js
sub
in
sahf
sahf
sbb
movsb
enter
int3
inc
adc
rcrl
sbb
lea
rcrl
lret
daa
cwtl
xor
sub
pop
push
and
movsb
icebp
mov
arpl
adc
orb
mov
pop
xor
out
popf
sbb
pop
shrd
sbb
movsl
inc
pop
adc
ljmp
push
stos
jae
fsub
andl
sbb
pop
xrelease
mov
jp
std
xchg
pop
mov
stos
testl
pop
int3
arpl
jge
loopne
lods
stos
rcl
mov
dec
icebp
and
xchg
sub
jb
aad
in
jns
ret
or
jne
push
nop
ret
push
sbb
lahf
imul
daa
data16
insb
out
mov
repz
jle
add
xlat
dec
ret
jge
and
pop
pop
mov
pushf
mov
jecxz
sbb
repz
lret
lret
cmp
clc
iret
pop
push
cmpsl
pop
or
pusha
cmp
or
add
je
xor
fists
scas
adc
inc
scas
pop
hlt
stos
jmp
ljmp
mov
cwtl
add
add
lods
inc
testl
lods
jbe
sbb
or
push
sub
push
sub
outsb
shlb
addr16
mov
sbbb
mov
sub
mov
icebp
mov
ss
xor
lock
xor
out
pop
leave
into
jge
stos
dec
idivb
adc
mov
adc
xor
bnd
cmp
inc
sbb
mov
and
push
mov
cs
sbb
ret
ret
daa
sbb
in
ret
arpl
pop
push
andnps
outsl
fisubl
and
ljmp
call
inc
int
jbe
mov
sbb
cmp
movsl
fwait
sahf
orl
pop
pop
insb
dec
pop
int
push
cmpsl
xor
xorl
loop
push
pop
fwait
cmp
pop
xor
dec
fcoms
mov
aaa
jmp
xor
xor
dec
mov
xchg
into
xchg
xor
xchg
xor
and
cltd
imul
cmp
sbb
mov
cs
test
loopne
xor
jge
insl
movsb
cld
cmp
sub
mov
pop
in
adc
repz
push
std
ss
jle
jl
jae
add
cmp
xor
pop
test
call
push
ljmp
cmp
fstpt
pop
les
lcall
pop
fstps
inc
aam
and
cltd
outsl
push
sbb
mov
jg
sub
push
loope
rcrl
mov
lahf
pop
xor
dec
shlb
cwtl
stos
es
fstpl
mov
push
lods
gs
sub
cmp
xlat
pop
ret
sub
fistps
mov
cmp
loopne
mov
pop
push
and
jno
rclb
in
xchg
outsl
push
enter
and
push
lcall
pop
add
push
iret
insl
or
pop
fldl2e
cmpsl
jp
xlat
outsb
cmpsl
mov
fdivrl
jno
cmp
stos
ljmp
sahf
call
mov
fdivr
test
xor
shlb
push
test
mov
shl
jns
mov
leave
jecxz
ss
insw
cmp
rcr
pop
sbb
cmp
mov
mov
jbe
es
mov
or
scas
daa
cwtl
pop
scas
adc
adc
jb
or
mov
sbb
mov
movsb
adc
mov
sbb
jns
push
jb
push
jnp
rolb
ret
fidivrs
push
adc
adc
pusha
pop
cs
mov
fsubrp
push
adc
das
mov
sbb
jl
imul
movsb
add
test
sub
fcoms
sub
cli
pop
imulb
insl
sbb
push
mov
mov
mov
jae
lock
and
int
and
in
mov
cmpsl
out
xchg
xor
jecxz
nop
add
xlat
jns
iret
test
add
out
out
into
cmp
pusha
cmp
pop
lds
lret
dec
lock
repz
jnp
dec
cmpsl
rcrb
cmp
pop
ljmp
mov
popa
aaa
aam
in
push
jno
cmp
and
enter
ja
lods
add
cwtl
dec
fsubl
xor
out
lods
dec
cmc
mov
mov
pop
dec
pop
fcoms
lcall
jnp
pop
xchg
roll
dec
jecxz
cmp
imul
mov
imull
jp
cmp
lahf
icebp
mov
aas
rcrl
jno
ds
lds
jg
xchg
negb
xchg
pop
mov
pop
andl
mov
push
shl
and
jl
dec
cmp
cmpsl
pop
stos
out
jnp
adc
dec
insl
lret
mov
call
insl
push
mov
cli
mov
cs
jbe
xchg
mov
inc
xor
and
cmp
dec
pop
sbb
movsb
lret
out
loopne
mov
push
insl
sbb
adc
outsb
scas
out
js
pop
scas
shrb
jno
das
ffree
andb
pop
test
mov
push
push
call
stc
inc
les
pop
jno
dec
or
xlat
ret
outsl
cli
fildll
mov
cmc
mov
shlb
outsl
dec
jg
mov
flds
mov
xor
outsl
add
mov
xchg
xor
outsl
movsl
adc
jb
arpl
inc
sahf
xchg
and
mov
push
out
loop
mov
xor
rcr
addl
or
insl
cmp
cmp
insb
loop
pushf
in
fwait
mov
pop
gs
aas
jnp
add
pop
jne
or
sub
sbb
jbe
sbb
xchg
ljmp
xor
mov
xchg
stos
mov
cmp
aam
adc
popf
leave
add
mov
jp
xchg
mov
stc
fcoml
aad
lea
jno
pop
movb
push
pop
adc
mov
pushl
loope
shlb
xchg
out
add
enter
repz
das
enter
inc
or
or
dec
xor
xorl
shl
xchg
pushf
lock
es
push
push
xchg
jbe
jno
movb
mov
stc
xorl
ljmp
popa
xor
movsl
andb
cld
cwtl
aaa
stc
inc
mov
mov
movsb
roll
push
or
addr16
sub
push
jecxz
jge
out
add
mov
sub
ja
jno
sbb
outsb
outsl
and
push
insl
jge
aas
cltd
fldlg2
sbb
fwait
movsl
sbb
imul
dec
pusha
mov
movsl
out
in
gs
fidivrl
jl
adc
xor
lods
add
hlt
cmp
and
lock
or
cmp
rorl
mov
fadds
inc
xor
and
pop
xchg
jb
sub
pop
test
divb
popf
jecxz
iret
jp
xchg
les
mov
pop
mov
push
mov
mov
into
rcl
js
xor
or
call
sbb
call
push
lahf
aaa
lahf
sub
fidivrl
mov
xor
lods
movsb
sahf
fstl
sbb
push
enter
push
mov
and
pop
dec
sbb
inc
jecxz
pop
popf
jp
mov
and
jb
sbb
in
xlat
mov
or
pop
daa
xorl
xor
jg
mov
out
dec
popa
add
xchg
das
mov
repnz
rolb
shlb
pop
ret
stos
xchg
mov
or
dec
mov
fists
xlat
subl
mov
sbbb
out
imul
dec
dec
les
test
ret
imul
mov
mov
dec
jmp
in
aam
mov
dec
mov
test
adc
dec
or
xchg
aaa
pop
xchg
out
call
cwtl
jae
addr16
arpl
push
aas
pop
xchg
les
or
outsb
enter
jl
and
test
xchg
ljmp
cs
hlt
mov
les
pop
push
idiv
andl
dec
cmp
xchg
aam
ret
push
jmp
push
inc
sbb
out
dec
popa
mov
mov
jmp
inc
mov
adc
vmovntps
cmc
xlat
cmc
dec
pop
xlat
cmpsl
mov
pushf
lea
fwait
and
sahf
mov
jge
pop
ljmp
push
das
jns
sbb
xlat
repz
cmp
mov
movsl
add
js
mov
js
jecxz
leave
test
add
stos
stc
popl
pop
outsb
mov
cld
mov
pop
adc
pop
sub
mov
call
cmpsl
pop
inc
adc
jb
sub
pop
mov
jmp
lods
insb
movsb
mov
scas
sar
adc
iret
insb
add
xor
or
cmp
cmp
mov
or
xlat
inc
cmpsb
inc
nop
int3
or
jb
inc
stos
testl
pusha
insl
or
cmp
das
push
mov
gs
sbb
jle
stos
pop
sbbb
mov
js
shll
test
cmp
daa
fistpl
into
jo
inc
mov
push
push
sub
mov
jne
xchg
fs
divl
jbe
mov
mov
sti
ret
inc
push
bound
xor
ljmp
jnp
leave
push
shld
adc
or
test
sub
inc
xchg
scas
fists
rcrl
pop
out
mov
pop
cmp
ret
rorl
mov
loop
les
dec
mov
lock
pusha
mov
add
mov
ficoml
mov
pop
mov
loope
and
mov
and
push
pop
out
lods
mov
add
stos
pop
jno
mov
mov
inc
fidivs
gs
sti
sahf
inc
mov
fucomp
inc
outsb
adc
movsb
andl
leave
mov
adc
sbb
add
xchg
outsl
push
adc
movsl
insb
pusha
pop
jle
int
mov
add
push
cmc
addr16
jge
test
inc
into
adc
out
mov
adc
xchg
out
mov
dec
loope
and
push
outsb
and
test
fstl
push
rorl
push
jmp
addr16
inc
out
xchg
sub
xchg
sub
add
inc
ficoms
mov
and
mov
jns
jae
xor
stc
lret
mov
and
imul
popf
xor
mov
lcall
xchg
clc
cmp
pop
xchg
in
cwtl
dec
das
inc
test
xchg
arpl
dec
in
fwait
incb
loopne
mov
pop
mov
adc
mov
ficompl
jae
and
lods
inc
mov
icebp
cmp
push
jb
dec
dec
pop
in
adc
ret
pushw
imul
in
mov
cmp
lcall
sbb
jp
mov
push
fdivs
or
les
pushf
xchg
data16
xor
adc
cmp
fcoms
mov
scas
mov
add
mov
mov
ret
xor
xor
pop
cltd
and
call
push
ljmp
xchg
dec
psllw
cmp
aaa
mov
icebp
cmp
jge
dec
and
sahf
stc
je
cmp
stos
jnp
in
add
cli
jge
sbb
lahf
notl
lods
imul
jno
in
xchg
in
add
insl
lret
jno
dec
aaa
lcall
dec
cli
fisubrl
cmp
sub
scas
push
mov
imul
es
out
sbb
push
pusha
adc
int3
sbb
push
or
xchg
addl
inc
loopne
bound
dec
inc
xchg
lret
jae
in
in
inc
daa
and
lret
aam
int
mov
pop
leave
fdivl
out
jmp
pop
jge
call
xchg
adc
add
in
ret
mov
imul
push
and
lea
roll
test
inc
mov
std
fwait
outsl
int
mov
lods
shr
clc
popa
dec
mov
sub
mov
or
mov
pop
fcmovb
adc
rorl
inc
inc
scas
fcmovne
push
aaa
or
inc
fcmovnbe
push
push
jno
adc
clc
test
sahf
xor
int3
mov
xchg
mov
loop
je
movsb
testb
mov
or
test
sub
lods
stc
sub
sbb
mov
stc
mov
xor
mov
push
mov
fchs
clc
stos
inc
sub
fcmovnb
enter
cmpsb
push
xchg
pop
lret
jge
aad
cmp
shlb
jge
push
sbb
mov
jae
pop
icebp
pop
sub
js
fidivrl
pop
adc
push
fadd
inc
pop
mov
lock
xor
ret
nop
push
mov
nop
push
or
fwait
scas
inc
das
xchg
shlb
mov
jns
xor
push
xor
xchg
lret
push
dec
rcll
insl
add
mov
movsl
icebp
into
loope
mov
pop
repz
add
and
cli
fisubrs
repnz
data16
add
fidivl
rcrb
push
sub
rorl
pop
dec
mov
pop
dec
xor
xchg
incl
lock
repnz
or
mov
das
aam
cmp
outsb
dec
adc
push
sbb
dec
dec
push
or
ds
cwtl
out
jnp
dec
loopne
and
fsubrp
addr16
xchg
jecxz
sbb
xor
sub
push
xor
mov
or
dec
loop
sub
in
test
jbe
xchg
pop
lods
pop
sbb
lds
xor
push
cmc
add
into
adc
out
out
push
stc
inc
out
sbb
xadd
push
sbbb
pop
mov
jp
stc
adc
mov
hlt
adc
lods
sub
and
pop
sbb
jo
jo
fs
scas
ret
pushf
add
out
inc
pop
jb
mov
test
add
dec
pop
push
jns
pop
lahf
mov
stos
nop
fcoml
call
orb
dec
mov
xor
mov
mov
mov
imul
adc
or
cli
inc
mov
outsl
addr16
fmull
addr16
jne
je
mov
lret
gs
jl
and
cs
popf
xlat
imul
or
stos
inc
pop
je
mov
dec
xchg
out
jmp
xchg
dec
popa
xor
call
ljmp
call
inc
enter
adc
xchg
sub
imul
daa
mov
adc
jecxz
mov
push
jae
dec
jmp
add
faddl
sub
hlt
xlat
bound
out
sbb
push
mov
out
or
call
fimull
jno
jl
aaa
pop
pop
dec
arpl
fnstenv
push
jl
and
adcl
push
jmp
bound
jbe
mov
or
push
mov
jbe
adc
jne
push
mov
add
mov
repnz
cs
cmp
pop
mov
xchg
mov
push
pop
sub
ss
or
sbb
rcrb
addr16
sahf
adc
mov
aam
int
inc
mov
ds
push
mov
sub
jb
or
or
ss
adc
and
ljmp
inc
jb
add
iret
ljmp
dec
cmp
icebp
xor
stos
sub
lock
lods
and
fwait
mov
fs
dec
movsb
xor
mov
addr16
jo
fwait
test
inc
mov
jns
cmpl
lods
int3
lods
repnz
sti
cmp
sub
xchg
xchg
and
mov
ss
inc
sub
lock
and
fidivl
pop
pop
shlb
push
pop
outsb
jecxz
sbb
icebp
popl
movsb
fwait
sbbb
inc
fadd
hlt
pop
sbb
cmp
cmp
lds
push
jae
mov
inc
fistl
cld
ja
jns
mov
inc
imul
popa
cmp
test
push
test
pop
sarb
mov
sub
loope
mov
aas
or
push
scas
mov
les
pop
inc
and
fimull
push
lods
mov
lret
add
dec
adc
insl
xchg
mov
jl
hlt
xchg
jae
sbb
or
movsl
jecxz
sti
xchg
lods
ret
push
push
in
push
jmp
fsubs
in
shl
stos
mov
sti
insl
fisubl
xor
outsl
add
out
xchg
mov
mov
sbb
and
mov
clc
imul
adc
lahf
and
cmp
push
xor
cwtl
ret
mov
and
aaa
in
mov
call
mov
clc
sahf
mov
push
call
std
xchg
scas
inc
dec
sub
mov
into
inc
push
mov
inc
fldenv
sarb
pop
mov
mov
xchg
pop
cmpsb
hlt
scas
cld
int3
pop
daa
mov
rorl
xor
xchg
out
daa
outsl
and
movsl
adc
dec
lods
test
adc
mov
pop
inc
testl
outsb
test
xchg
add
fwait
adc
mov
in
dec
out
test
jmp
notl
push
ret
adc
jle
hlt
xor
pusha
shll
push
fsubl
push
mov
sar
jb
insb
lret
bound
mov
mov
call
push
cmp
pop
pop
jae
sbb
cmpsl
dec
cld
stc
sbb
jle
movsb
aaa
xchg
mov
mov
out
adc
mov
insl
ror
std
cmpsb
cmp
jle
rcrl
shl
stos
test
dec
sub
or
or
cmp
pop
mov
out
sbb
hlt
dec
subl
fdiv
sahf
mov
add
mov
xchg
int3
add
div
add
jp
and
cmp
push
sbb
jae
xchg
call
aam
inc
lds
jbe
ret
xchg
dec
dec
popf
push
nop
std
add
dec
cmpsb
xor
and
test
out
jge
pushf
test
mov
cmp
lods
and
faddl
xchg
jbe
lea
sub
daa
mov
jbe
and
xor
ja
jmp
fbld
test
add
lea
lahf
sbb
sub
test
mov
arpl
mov
dec
jno
jle
or
dec
rorl
popf
faddl
les
cmpb
shrb
add
lret
lea
push
adc
fildll
pop
imul
out
mov
mov
shll
sub
sbb
mov
arpl
jo
leave
shrb
movsb
add
sti
test
ja
imul
sub
jmp
or
gs
pop
scas
cmp
lret
bound
lods
popf
sbb
in
jb
or
in
mov
xchg
sub
add
mov
cli
jne
jle
fsubl
push
pop
imul
xchg
icebp
popa
shrb
cmp
jg
es
mov
and
in
sub
cs
mov
push
inc
dec
fsub
outsb
or
push
ss
test
mov
xchg
xlat
sub
sbb
idiv
mov
out
repnz
call
test
sub
ror
in
inc
sahf
subb
jmp
push
xchg
dec
push
lea
sarl
push
jo
daa
data16
shrl
mov
ds
leave
cmp
xor
xor
jb
sbb
xchg
dec
fiadds
mov
push
bound
xchg
inc
rcl
cld
push
or
hlt
cltd
mov
jp
push
xlat
jne
mov
pop
and
pop
es
or
jle
push
ja
dec
jns
push
push
xor
xchg
jne
and
aaa
pop
pop
aaa
cltd
xlat
mov
mov
push
inc
aaa
push
and
gs
xlat
sbb
dec
jecxz
stos
sbb
xchg
mov
sbbl
ficomps
mov
xor
jbe
out
xchg
fs
jnp
popf
or
addl
mov
nop
shrd
fwait
mov
xor
and
cmpsl
lret
sti
enter
into
and
push
ret
movsb
pop
add
fnstenv
arpl
mov
inc
or
cmp
mov
pop
xchg
jnp
jg
ret
aad
and
cltd
mov
xor
movsb
outsl
adcb
in
inc
bound
mov
xchg
push
cmpsl
mov
mov
mov
push
leave
jne
cmpsl
mov
imul
cwtl
cmp
movsb
mov
xchg
dec
and
xor
mov
loop
sbb
add
es
pop
into
mov
push
data16
push
jg
xor
mov
pop
jmp
jecxz
xchg
sbb
and
outsb
xchg
mov
add
add
add
in
mov
scas
cmpsb
sbb
sbb
pusha
pop
enter
lret
pop
and
cmp
js
es
sarb
imul
mov
xor
rclb
push
push
out
xchg
jne
pop
pop
xor
dec
dec
mov
jg
sahf
lods
cmpb
or
dec
pop
imul
xor
inc
push
jnp
insb
jno
jbe
push
mov
out
loope
jg
sub
mov
enter
add
xor
lahf
inc
sbb
rorb
add
in
dec
ret
clc
sub
or
into
and
fxch
sub
adc
subl
lret
cmp
and
mov
jo
bound
in
mov
dec
rorb
aaa
push
xorb
das
xor
pop
xor
or
sbb
mov
rcl
push
inc
inc
rclb
sti
jo
bound
pop
insl
arpl
jo
ret
or
daa
cmp
pop
ljmp
mov
pusha
cmp
mov
push
fnstcw
pop
out
enter
aaa
cmpsl
int3
adc
and
add
sbb
jbe
lahf
inc
inc
mov
add
jp
jnp
insb
gs
outsb
pop
xchg
mov
sub
cmp
mov
test
dec
dec
sub
dec
out
sbb
pop
ljmp
inc
cmp
in
out
xchg
jmp
sbb
mov
cmp
mov
test
scas
daa
das
loope
addr16
aam
add
nop
cmp
inc
cmc
nop
cmpsl
rol
fwait
pop
and
sbb
add
or
cmp
xor
mov
xchg
insl
sbbb
stos
inc
out
sub
sbb
aas
clc
or
sahf
jns
dec
and
or
xor
mov
ss
test
sbb
dec
aas
enter
pop
cli
inc
sbb
lcall
inc
pusha
aas
subl
movsl
cmc
sub
dec
stos
dec
stos
in
outsb
mov
fwait
xor
push
jmp
in
aaa
insl
add
fcomps
outsl
jno
pop
xchg
scas
mov
mov
xor
js
pop
push
imul
jns
mov
push
repz
add
icebp
inc
cs
inc
mov
xchg
out
lods
mov
sbb
jnp
jl
aaa
pushf
loope
std
xor
out
cli
jno
pavgw
xchg
ljmp
dec
or
hlt
mov
scas
leave
or
xor
xor
test
incb
bound
ret
pop
lods
or
fdivr
sub
inc
xor
mov
cs
scas
arpl
cmp
cmp
mov
mov
mov
jo
rorl
push
stc
sub
jle
clc
pop
jg
adc
mov
mov
lcall
je
push
addr16
roll
xrelease
stc
and
push
push
sbb
hlt
call
in
pop
xchg
subl
jg
mov
or
outsb
notl
mov
inc
mov
inc
arpl
xchg
das
cli
dec
int3
or
gs
ja
dec
and
inc
shll
out
stos
dec
mov
in
data16
aaa
cwtl
xchg
aam
inc
push
inc
mov
pushf
lods
lret
fcomp
mov
and
shl
daa
cmp
repz
jne
pop
mov
cmp
shll
std
mov
mov
cmp
mov
adc
ret
jmp
push
les
scas
adc
pop
push
dec
pop
sub
and
mov
xchg
sub
adc
adc
enter
xor
std
cmc
cmp
es
inc
les
jbe
lahf
jo
push
xchg
lods
pop
jmp
mov
enter
xchg
ret
loopne
and
sti
cltd
push
roll
mov
pop
xchg
jmp
fidivl
sahf
out
in
sbbl
loop
or
mov
and
test
dec
sub
pop
sahf
or
mov
or
pop
fwait
aas
lds
lahf
mov
movsb
adc
dec
dec
es
mov
sbb
je
gs
jge
fiadds
and
mov
dec
arpl
stos
xchg
push
call
inc
out
mov
es
push
aam
in
sub
popf
cmp
cld
stos
lods
adc
inc
sti
stos
inc
sub
cwtl
push
mov
enter
ret
loope
xchg
lock
std
ret
hlt
adc
scas
pop
jo
pop
rorb
xor
incl
jle
cmc
out
mov
rorl
out
xchg
dec
sub
mov
jns
pushf
push
shll
aad
test
inc
lahf
shrl
and
inc
inc
lahf
jb
xchg
repz
sbb
stc
push
sbb
insb
adc
outsb
pop
xchg
push
fwait
sahf
jg
lcall
jno
jmp
add
movsb
jl
rcll
into
fwait
addr16
push
fadds
std
cld
loopne
mov
and
mov
or
bound
test
mov
addb
inc
xchg
dec
repnz
mov
add
push
mov
mov
dec
mull
xchg
shll
mov
jecxz
jmp
inc
iret
mov
add
and
and
xchg
repz
or
pop
rol
jle
sbb
push
testl
xchg
xchg
or
xor
lret
movsl
stos
xchg
ss
dec
and
xor
test
dec
jno
adc
pop
int3
xor
jle
mov
adc
adcl
sub
cmp
jb
or
iret
je
out
addl
loop
xchg
cmp
test
and
sbb
mov
es
fs
inc
push
out
dec
sbb
sbb
mov
inc
into
pop
daa
xchg
aaa
or
aas
ss
into
leave
pop
in
data16
cmp
xlat
jle
mov
sbb
cmpsl
imul
cmp
jecxz
enter
pop
lock
cmp
xchg
sbb
mov
pop
add
add
and
dec
repnz
in
mov
sub
sbb
add
aam
lret
jmp
and
pop
cltd
dec
xchg
jmp
outsb
jl
lock
enter
push
jo
comiss
mov
mov
fs
sub
xlat
jae
cld
push
or
dec
faddp
insb
les
icebp
jg
mov
aad
mov
out
subl
es
pop
sahf
xor
jnp
mov
jecxz
adc
stos
ljmp
dec
cwtl
cli
pushf
cli
aaa
notb
loope
cltd
xor
inc
jno
pop
in
loope
push
aas
std
xchg
outsl
jns
shlb
test
neg
adc
test
fwait
scas
mov
daa
and
sbb
cmp
pusha
or
cmp
push
mov
inc
lret
leave
int
push
nop
icebp
outsl
cmp
ja
dec
cvtpi2ps
out
cmp
fnsave
pushf
mov
sub
jle
fcmovnbe
and
sbb
sbbb
sbb
push
inc
out
mov
stc
lcall
sub
movsb
aas
neg
cli
pop
rclb
subb
mov
pop
push
push
xchg
mov
cld
loope
ss
jo
sbb
sti
ror
aas
sbb
lock
xor
mov
jle
push
jb
enter
push
push
sbb
fnsave
mov
pusha
lret
imul
cmp
xchg
scas
mov
loopne
push
xchg
mov
mov
ret
daa
cmp
and
jne
andl
mov
sarb
add
inc
and
gs
popf
xchg
xchg
scas
ss
xchg
cs
gs
push
sub
push
or
les
mov
adc
addr16
sub
in
dec
adcl
pop
aas
shll
push
xchg
push
sbb
adc
xor
mov
fimuls
cli
stos
aas
fwait
dec
cs
inc
pop
fdivrs
sahf
sbb
add
cmpsb
dec
or
xor
jp
push
std
pop
test
jbe
jno
cmpsb
adc
fdiv
mov
loope
jae
jle
mov
push
mov
into
dec
ror
push
std
loop
inc
popf
and
in
inc
test
dec
scas
ror
ljmp
jbe
inc
xor
inc
mov
lcall
jmp
or
fdivrs
fwait
add
test
add
xchg
fwait
lods
mull
cs
push
xor
jmp
inc
xor
mov
in
out
cltd
clc
adc
ret
das
jne
ss
les
fldcw
push
mov
mov
and
mov
movsb
cmp
insl
inc
cmp
rorl
out
stos
out
aam
mov
scas
pop
sub
cmp
enter
push
push
sahf
adcb
cltd
roll
enter
daa
inc
inc
test
into
ficomps
push
cs
xor
lods
or
mov
sub
les
dec
and
pop
testb
ds
add
cmp
xchg
fistpl
mov
mull
jo
sbb
rorb
add
andb
cmpsb
mov
sub
mov
movsb
mov
incl
notb
add
out
push
outsl
sbb
insb
cld
push
dec
lret
mov
dec
jg
scas
cmp
cmp
rcll
mov
dec
loop
dec
add
movsl
imul
xor
dec
add
mov
jnp
lock
mov
ja
das
insb
cmp
adc
xchg
out
adc
adc
mov
hlt
pop
addr16
or
lods
lock
mov
jle
sub
shlb
test
or
push
call
sub
jo
data16
data16
pop
lock
fnstcw
movsb
xor
push
add
fwait
std
push
je
pop
je
insl
push
mov
das
cmp
sub
enter
inc
fidivs
pop
cmpsl
clc
xchg
lods
xchg
sbb
cltd
outsb
lods
cmpsb
lock
sar
xor
xchg
sub
sbb
mov
adc
push
mov
mov
push
repz
xlat
inc
add
sub
xor
xor
sub
cmpsl
push
dec
mov
fdivs
and
in
enter
jge
and
pop
pusha
mov
or
rcll
dec
lahf
pop
je
lahf
cltd
push
or
and
adc
mov
aad
sahf
mov
out
lret
adc
or
jnp
add
loope
in
mov
cli
sub
dec
adcb
scas
xchg
outsl
mov
lcall
lcall
outsl
sub
aad
xor
repnz
rcr
push
xchg
rol
leave
cmpsl
fucomp
adc
cmp
xor
dec
mov
scas
dec
ds
xor
xchg
lea
push
dec
pop
movsb
mov
sub
pop
dec
and
mov
cmpsl
sub
mov
js
test
aad
sub
arpl
pop
and
sub
pusha
jl
clc
loop
push
sub
xor
rol
aad
xchg
mov
fmul
fcomps
or
popa
andl
pop
outsb
cmpsl
outsl
les
cltd
cmpsl
int
into
fisubs
or
nop
and
jecxz
aad
jne
dec
inc
js
add
stos
mov
mov
pusha
add
sbb
divl
loopne
popa
hlt
jg
in
data16
push
test
cli
xchg
push
sbb
cld
sub
mov
stc
push
mov
and
push
jmp
and
jge
test
push
mov
pop
lods
call
adc
inc
push
sbb
mov
fcomip
xchg
mov
add
filds
in
dec
or
push
sti
daa
adc
jp
dec
lock
stos
test
aam
jne
sub
pop
mov
nop
mov
fs
pop
imul
pushf
inc
and
mov
cmp
or
loopne
stos
cmc
mov
incb
inc
ficoms
push
fsts
adc
push
lcall
dec
ljmp
into
add
mov
lret
push
sub
loop
xchg
jbe
adcl
cltd
outsb
test
lods
outsb
or
lcall
sbb
dec
or
popf
repnz
out
dec
lods
rclb
mov
jecxz
loope
push
and
dec
dec
push
jle
xlat
add
lods
mov
push
mov
jp
xor
enter
inc
sbb
pop
outsl
push
cs
outsl
dec
aaa
push
jbe
dec
mov
mov
cmp
and
push
pop
jb
bound
mov
popf
xchg
lea
mov
pop
push
sub
std
jae
inc
inc
insb
jle
addr16
lret
sarb
jg
stos
in
inc
mov
es
xchg
imul
pop
cmp
std
dec
and
hlt
loopne
es
andl
or
pop
ror
out
mov
cmp
inc
or
pop
add
int3
dec
mov
mov
repnz
iret
pop
imul
adc
sti
lret
iret
lahf
imul
std
push
mov
mov
xor
dec
in
push
cmpsl
jp
xchg
outsb
mov
xchg
cmp
jb
xchg
arpl
hlt
push
jbe
or
outsl
ficompl
test
mov
imul
sub
pop
cmp
fdivrp
adc
loop
inc
in
movsb
mov
pushf
adc
and
lock
sti
xor
or
add
arpl
sbb
push
in
add
jno
or
and
testb
sbb
cmpl
cmp
loopne
inc
sub
call
stc
mov
movsl
pop
inc
pop
into
jle
stos
jle
mov
loope
mov
add
insb
sbb
daa
mov
shlb
es
xchg
xchg
and
push
mov
jmp
imul
fsubrs
lcall
insl
inc
inc
aam
xor
jb
lea
mov
xor
popa
cmpl
lret
stc
add
xchg
lcall
xchg
cld
push
enter
pop
inc
dec
and
add
xchg
popf
adc
lods
rol
adcb
lret
out
sbb
jle
lahf
xchg
in
pop
int
mov
push
jmp
test
sub
xor
push
cld
push
adc
cld
imul
mov
jle
sub
mov
dec
push
adc
out
mov
and
and
sbb
jle
jl
pop
sti
shl
or
pop
inc
daa
incb
stc
test
inc
jge
fnstenv
dec
rorl
adc
daa
inc
enter
xor
push
sub
aas
insb
mov
out
xchg
stc
or
cmp
lds
cmpb
outsl
jnp
iret
mov
cmp
nop
push
cmpl
insl
stos
push
jnp
les
movsl
lea
and
mov
addb
js
jbe
xchg
sub
push
or
stos
nop
bound
jp
fadd
adc
sub
inc
ret
das
adc
inc
push
mov
mov
push
call
add
insb
ja
adc
lcall
in
sub
xor
and
add
lods
pop
mov
stos
jecxz
xchg
arpl
lahf
mov
jnp
mov
xchg
add
lret
lret
test
jg
scas
inc
fistpl
les
je
shll
aad
shrl
shrl
repz
adc
jp
dec
aaa
fsub
je
mov
insl
repz
test
aam
mov
cs
out
lahf
pop
insl
fs
cmp
popf
jp
pop
lret
pop
popa
stc
popf
add
sub
fdiv
and
inc
fidivs
repz
xor
jmp
clc
dec
or
shll
mov
rorl
cmp
rcrb
mov
popf
pop
adc
jl
test
adc
in
insl
add
push
xchg
enter
mov
lock
punpckhdq
jbe
es
fldl
cs
xchg
xor
scas
jne
popa
shlb
sub
or
inc
ds
push
and
mov
mov
outsb
les
push
xor
scas
sub
dec
incl
pop
cmc
scas
mov
sub
mov
imul
lmsw
js
or
xchg
push
scas
jg
push
mov
add
gs
mov
movsb
lock
mov
xchg
pop
add
jnp
mov
fldt
ret
rcr
ja
cld
mov
dec
clc
into
idivl
cmp
and
sub
pop
addr16
xor
je
clc
cmp
idivl
inc
adc
dec
in
clc
adc
mov
into
test
mov
adc
popa
jg
cmp
mov
fwait
mov
aaa
push
or
pop
loope
in
xlat
lds
int3
sbb
adc
call
sub
cmpsb
mov
cld
mov
push
shll
fcmove
mov
cmpb
subl
or
repnz
cmp
sbb
nop
cltd
jo
and
fwait
adc
sbb
and
pushf
lods
cmpl
lahf
ret
xor
lahf
mov
pop
xchg
cwtl
arpl
ds
loop
adc
mov
sub
jo
loopne
and
pop
jno
inc
loop
push
outsb
or
jo
pop
lahf
pop
jne
mov
out
adc
mov
mov
jb
popf
xlat
xchg
add
push
push
ljmp
pusha
mov
addr16
ss
lret
ret
aad
pop
insl
push
testb
xchg
test
dec
call
cwtl
xor
xor
sbb
mov
adc
adc
aas
cmpsl
mov
je
cmp
inc
mov
sbb
xor
fnstsw
push
cmpsb
inc
icebp
or
pop
jnp
sub
mov
pop
pop
rcr
mov
mov
pop
hlt
mov
aas
cmpsl
negl
ljmp
mov
mov
mov
test
adc
fidivl
add
popa
push
mov
and
push
push
es
and
xor
inc
mov
fisubrs
xor
sub
xorb
jae
pop
xchg
mov
mov
xchg
and
pop
push
jb
cli
popa
lea
rorl
mov
out
rcrb
icebp
cs
and
push
cs
push
xchg
lods
rclb
mov
mov
jns
int
add
daa
mov
jp
mov
popa
sbb
ja
mov
jp
cmp
cmp
fimuls
inc
dec
dec
icebp
test
fs
push
push
cmpsb
inc
neg
mov
cmp
jbe
addl
inc
fildll
xchg
jge
inc
icebp
mov
pop
outsb
vsubpd
push
xchg
sti
mov
in
mov
int3
mov
aaa
cmp
mov
ret
mov
xor
int3
lss
lea
adc
or
ret
movsl
and
movsb
mov
dec
sbb
xchg
sbb
clc
ja
popaw
mov
fmul
or
loopne
orl
inc
test
fwait
or
outsl
mov
and
dec
cmp
mov
loopne
loop
mov
cmp
mov
jge
adc
sbb
or
jl
lret
mov
xor
ret
push
out
mov
add
in
dec
loop
stc
add
insb
push
mov
push
mov
jns
mov
fisubl
xchg
adc
add
test
lods
dec
mov
add
ja
aaa
mov
or
xchg
jg
icebp
das
jbe
pushf
fwait
notl
outsl
lret
insl
repz
mov
cltd
sbb
mov
adcl
push
sub
mov
jae
inc
add
dec
mov
data16
arpl
mov
in
inc
outsb
in
add
test
icebp
ficomps
daa
outsb
cmpsl
jge
inc
pusha
dec
fistpll
mov
imul
adc
sti
mov
jle
and
cmc
sub
aam
cmp
loopne
fwait
xor
mov
inc
ja
fists
sbb
xchg
add
mov
loope
sub
inc
sub
scas
dec
loopne
shlb
pop
in
lods
jns
lods
stos
jle
adc
out
sbbb
and
lock
mov
dec
insb
loopne
push
adc
mov
sub
dec
mov
mov
enter
shlb
les
insl
decl
int
imul
adcb
scas
insl
stc
lahf
lods
cmpsb
sbb
xor
in
lock
iret
mov
icebp
movsl
and
pop
in
add
sub
loopne
jbe
out
jno
push
in
inc
sub
push
or
add
push
movsl
adc
je
lea
and
xchg
mov
adc
sbb
insl
ret
icebp
into
sbb
loopne
jae
push
inc
fiaddl
out
cld
btc
mov
fadd
mov
mov
enter
mov
or
insb
xor
mov
jno
test
push
outsl
cmp
inc
mov
add
loope
pop
xchg
rclb
cmp
xor
jne
stos
popa
out
mov
jb
in
sub
xchg
stos
xchg
sub
cmpl
lahf
push
add
loope
pushf
in
xor
push
mov
lahf
pop
imul
mov
jge
push
jmp
and
and
sub
push
jbe
popf
mov
stos
sub
ret
dec
mov
mov
xchg
movsl
rcrb
test
fisubl
je
lods
push
repnz
out
xor
xchg
add
jbe
xor
test
jl
jns
cmp
mov
pop
sar
aas
nop
repnz
popf
xor
cwtl
es
xor
lahf
push
inc
mov
mov
lret
xor
fists
sbb
jno
in
loope
xor
push
xor
mov
xor
pop
movsl
test
and
loopne
add
stos
rcl
shr
hlt
hlt
mov
sub
and
inc
pop
xor
cmpsb
xlat
mov
and
xchg
in
mov
push
push
jmp
ret
pop
hlt
push
adc
dec
mov
adc
pop
pop
jecxz
sbb
inc
push
cwtl
xor
jo
push
dec
adc
mov
call
jo
out
jne
subl
ja
cwtl
jg
adc
clc
jmp
in
adc
insb
cmp
sti
jo
and
je
inc
icebp
mov
outsl
rcrl
imul
out
mov
mov
xchg
das
cmc
and
popa
xor
xchg
cld
mov
jno
fucomi
mov
add
lret
lret
loope
in
rorl
sahf
jmp
push
jae
int3
ss
push
sub
dec
pop
js
xor
inc
inc
inc
xlat
fnop
repz
data16
cs
add
jmp
call
or
mov
adcb
push
cmpsb
add
mov
shrl
sub
lea
cs
call
stos
mov
int
aas
or
xchg
flds
jb
cmp
inc
and
mov
xchg
fmul
sub
xor
push
mov
imul
lods
adc
nop
inc
loopne
lock
push
mov
ud2
xchg
cmc
enter
test
js
sbb
dec
jp
xor
xor
pop
cmp
and
movsb
mov
jl
inc
xchg
cmp
pushf
add
push
clc
sahf
lret
sbb
std
and
hlt
cs
sub
or
dec
mov
stc
push
test
int3
out
fildl
les
pushf
xor
lahf
jl
mov
movsl
dec
pop
add
aas
scas
dec
mov
pop
and
sbbb
dec
loope
jno
lods
sbb
mov
jbe
fmuls
adc
jb
push
xor
inc
fstl
pusha
cmp
sub
ljmp
sub
mov
mov
mov
ret
push
sub
and
std
sbb
sub
push
rcr
bound
in
cmpl
jae
adc
leave
jg
cmp
jo
xchg
outsl
rcll
mov
push
mov
rcrl
insl
jno
pop
or
aad
enter
lret
sub
std
repnz
and
jnp
mov
shr
bound
lret
push
lret
lods
fwait
push
loopne
ja
aas
shll
test
jnp
xchg
sub
shl
inc
jno
mov
dec
xchg
enter
rcrl
jbe
dec
add
in
pop
scas
clc
test
push
and
xchg
in
cmp
mov
ror
in
add
out
pop
add
rcl
js
sub
test
inc
sbb
test
dec
loopne
cmpsb
mov
xchg
sub
loop
xor
cwtl
mov
out
xchg
and
jns
add
mov
lret
sbb
lret
fwait
lods
jo
inc
out
pushl
insl
and
jmp
pop
jne
xchg
lods
xchg
mov
aad
push
add
je
test
mov
rcl
push
pop
xchg
sub
imul
test
dec
xchg
jnp
xchg
mov
cmpsb
sub
loopne
rcl
inc
sbbb
inc
push
adc
jae
push
add
lret
lret
mov
lret
lret
xorl
xchg
shlb
xor
or
add
es
movd
lret
inc
xchg
dec
xchg
sub
push
decb
lods
jns
call
ja
std
mov
xor
int3
ds
mov
pop
xorl
fidivs
push
shr
int
pop
dec
ljmp
aam
dec
cmp
jge
xor
xchg
inc
loop
sti
mov
stc
popf
test
cmpps
lods
ljmp
xchg
jecxz
push
inc
mov
lahf
pop
and
cvtps2pi
mov
bound
test
xchg
icebp
inc
mov
push
mov
fsubrl
pop
ret
stos
push
pushf
sub
mov
loope
push
stos
lds
mov
add
sbb
fcmovnb
loopne
xchg
out
xchg
or
cmp
or
fsts
sbb
pop
mov
add
add
push
pop
les
add
inc
xor
shlb
test
mov
clc
sub
mov
clc
and
arpl
jnp
int3
cmp
ljmp
ret
and
aam
stos
xchg
cld
inc
pop
ret
cmc
aaa
sub
mov
jle
ss
and
and
sahf
xor
xor
fs
add
mov
test
imul
mov
add
mov
pushf
jnp
and
dec
js
scas
lea
js
ljmp
sahf
cs
icebp
adc
dec
and
in
ja
add
dec
insb
rorl
fstps
pushf
loope
cmpsb
jnp
shrl
inc
push
int3
pop
jle
lret
bound
pop
push
cmp
cltd
adc
xchg
inc
fbstp
sub
push
in
nop
xchg
jnp
mov
mov
push
push
mov
lock
pop
cmpsb
jo
mov
orl
xchg
add
push
out
xchg
les
inc
pop
mov
pop
cmp
pop
in
pop
dec
jns
jne
out
add
push
fildll
jnp
and
fdivrl
mov
ja
outsl
imul
negb
lds
loopne
xor
sbb
addr16
mov
mov
aad
popf
cmpl
bound
xchg
mov
ret
faddl
or
jo
jge
jp
in
mov
push
mov
cmp
ficompl
out
adc
push
mov
ljmp
and
pop
popa
aas
or
adc
add
lcall
popf
lock
aad
add
daa
pop
cmp
sbb
test
stc
add
or
dec
in
es
stos
mov
mov
or
jle
mov
mov
push
xlat
lods
repz
xchg
das
push
mov
sub
xor
dec
and
fstp
bound
mov
jno
sub
sub
repz
cmp
mov
fs
ss
cwtl
cmp
adc
shlb
dec
push
fbstp
xor
dec
dec
daa
imul
lret
lret
pop
loopne
mov
ret
push
mov
inc
outsl
stc
test
push
mov
inc
icebp
cmp
pushf
xor
xchg
xchg
or
push
push
push
and
mov
inc
lock
dec
loop
inc
adc
or
pusha
mov
je
xchg
add
jns
cmp
shll
std
int3
nop
mov
shr
sbb
or
mov
pop
test
loopne
inc
daa
ljmp
push
inc
mov
clc
int3
xchg
shl
pop
shlb
dec
push
mov
inc
mov
mov
das
mov
add
dec
adc
xor
insl
enter
dec
or
mov
mov
ljmp
stc
xor
pusha
pushf
adc
test
mov
xlat
adc
ja
fsts
push
fwait
jg
mov
jb
adc
addr16
xorb
mov
inc
push
add
out
sahf
out
cld
call
daa
ljmp
push
inc
dec
push
rcl
lea
loope
inc
pop
pop
fs
xchg
fpatan
in
cmp
mov
jmp
mov
movsl
das
adc
loope
pop
push
mov
test
sbbb
testb
xchg
loop
and
cmp
inc
aad
scas
xchg
les
inc
repz
dec
ja
mov
xor
push
or
mov
sub
call
decb
repz
dec
clc
pop
in
mov
mov
sub
cli
push
aas
es
dec
aam
les
insb
mov
mov
scas
jno
out
sarb
or
outsl
pop
sahf
mov
pop
insb
and
push
test
sbb
call
jb
pop
leave
pop
insb
fistpll
fbld
test
scas
imul
pop
xchg
xchg
or
popf
andb
sub
pop
jmp
mov
nop
push
jmp
inc
negb
pop
adc
shrl
out
lds
cmp
sti
testb
aas
xor
inc
xor
out
ret
jmp
aaa
loope
insb
hlt
fs
jmp
xchg
fiadds
dec
cmp
call
ficoms
and
fs
xor
loopne
dec
sub
mov
fnstcw
push
mov
sbb
aad
stc
mov
push
sbb
add
or
lret
sub
imul
xchg
call
sbb
or
jne
pop
cmpl
or
negl
add
divl
inc
jno
inc
cmc
xchg
mov
push
mov
cmc
or
mov
insl
mov
or
sub
fs
sub
jbe
loop
lahf
mov
aas
aam
pop
mov
subb
xchg
jp
pushf
pop
sub
ret
pop
pop
cmp
push
and
or
fisubrs
mov
xchg
pop
or
inc
pop
inc
ds
outsb
push
sbb
out
into
cmc
mov
adc
inc
enter
jmp
dec
lods
jne
push
sti
inc
ds
push
lods
jmp
enter
and
daa
stos
xchg
pop
jb
out
sub
mov
xchg
es
dec
jg
imul
rorl
pop
push
mov
xor
fildl
addb
test
ljmp
adcl
fsubl
pop
dec
sbb
jp
insl
jl
mov
test
jge
inc
and
adc
xor
insl
push
add
jmp
add
pop
xor
fcoml
cmpsb
mov
push
mov
adc
jno
popf
mov
sbbl
fistpl
mov
test
aam
and
xlat
orb
adc
and
out
cmpsl
popf
xor
mov
addr16
inc
pop
bound
hlt
mov
xchg
pop
xor
sbb
push
inc
fdivrs
jae
test
pop
xor
ds
xor
xlat
push
popf
or
mov
sbb
filds
insb
jns
mov
es
fsub
cmp
mov
pop
enter
jg
fucomip
sbb
mov
ror
add
rclb
out
shll
rcrb
pop
jecxz
mov
cmp
mov
pop
mov
in
and
xorl
sub
lods
sbb
fs
into
jb
arpl
pop
push
and
lods
sub
or
pop
jle
mov
adcb
test
sahf
andl
push
testb
insl
jge
sbb
inc
push
dec
push
cmpsl
sbb
je
sub
cmc
xchg
push
mov
mov
inc
fistpll
jg
jns
loopne
mov
push
ljmp
lock
nop
add
int
loop
in
ficompl
mov
mov
mov
lcall
mov
add
jmp
or
pop
sahf
fidivrl
movsl
and
jno
xor
and
push
orb
dec
mov
xchg
repnz
mov
montmul
cmpsb
inc
ds
inc
and
test
mov
fmul
or
xchg
pop
pop
mov
cmpsb
sub
inc
push
adc
add
gs
xchg
xor
fwait
jp
jecxz
mov
ret
cmp
sub
ret
outsb
icebp
aaa
shlb
enter
dec
sbb
jmp
sub
push
pop
out
mov
cmp
xor
lret
mov
je
inc
ds
pop
js
or
push
jmp
or
repnz
mov
scas
sub
pop
iret
stos
jge
sub
in
lret
ds
jne
sbb
or
xchg
add
cmp
sub
sbbl
dec
mov
push
into
sbb
lcall
dec
inc
fsubs
ret
popa
fsubr
into
xchg
adc
inc
mov
ja
push
ret
pop
cwtl
adc
jne
iret
pop
in
dec
inc
stc
dec
mov
pop
mul
jl
sahf
rcr
jle
inc
data16
mov
jl
mov
push
movsb
mov
jns
cmc
push
fwait
outsl
add
sarl
loop
pop
shrl
adc
adc
add
xor
adc
inc
fisubrs
dec
gs
ja
and
out
mov
or
mov
xchg
insl
in
inc
arpl
jne
pusha
and
xchg
pop
ljmp
mov
shrl
sbb
jecxz
cmp
and
in
xchg
inc
das
aad
and
sub
xor
add
adc
lret
imul
sub
dec
pushf
add
xchg
test
fistl
xchg
xlat
sub
mov
es
ljmp
rorl
cmc
adc
mov
call
mov
pushf
add
into
mov
mov
push
ftst
push
mov
insb
dec
in
aad
dec
ljmp
pop
int
sub
vphadduwq
mov
lods
insb
sub
sub
aaa
sub
addr16
xchg
ja
jge
mov
push
nop
int3
jg
add
enter
aad
mov
and
cld
pop
out
gs
cmpsl
xchg
sub
scas
dec
test
xchg
bound
ljmp
mov
outsb
jge
push
andb
mov
movsl
adc
mov
push
jns
addr16
pop
out
fimull
adc
mov
leave
loope
mov
lods
xchg
lods
cmp
lcall
in
and
fucomi
add
arpl
mov
sbbl
arpl
cmp
mov
test
mov
sbb
nop
and
ds
ss
mov
adc
mov
xchg
push
lods
out
cmc
jne
and
stos
lods
mov
lret
pop
std
push
add
push
sti
dec
adc
outsb
pop
icebp
adc
mov
outsl
enter
or
pusha
in
jp
repz
nop
out
clc
mov
stos
aam
shlb
mov
rcrl
std
enter
jle
mov
mov
dec
or
add
cmpsb
jns
pusha
push
lret
jbe
xchg
ja
out
adc
push
cmp
xchg
ds
ds
xchg
or
jecxz
enter
adc
pop
inc
scas
ror
aad
mov
or
pop
xor
jmp
sbb
mov
push
nop
and
int3
sub
adc
outsb
xlat
jmp
jae
fmull
pop
jbe
je
leave
mov
xchg
mov
iret
and
cmc
pusha
lods
push
test
pop
adc
sub
pop
scas
push
mov
inc
iret
mov
mov
cltd
outsl
mov
mov
adcl
xchg
call
inc
sbb
lds
aas
lret
and
or
dec
jne
fdiv
mov
push
lods
push
pop
mov
pop
add
fcoml
ljmp
inc
mov
dec
adc
lret
int
pushl
xor
xchg
call
bound
xor
pop
mov
jmp
adcl
leave
add
pop
mov
loope
fwait
jl
je
mov
aam
xchg
insb
and
cwtl
hlt
sbb
inc
pop
lcall
shrb
popa
loopne
mov
jb
test
mov
rclb
push
add
lcall
inc
cmp
fisttps
xor
jns
gs
sahf
mov
jo
std
das
jmp
not
jo
inc
in
loop
lock
sahf
mov
callw
sbb
sahf
push
jle
or
stos
push
stc
popf
sbb
outsl
pop
aas
jle
popa
sahf
lcall
pop
lcall
sub
dec
stos
ljmp
jb
mov
or
lcall
jne
divb
cld
sub
ss
ficoms
iret
cmpsl
stos
cld
test
push
xchg
ja
or
pop
dec
sbb
shlb
fstl
pop
push
sahf
adc
pop
ljmp
mov
mov
ret
pop
push
repz
dec
sbb
dec
out
mov
xor
pop
inc
mov
data16
xchg
mov
push
add
lock
movsl
inc
ret
xor
dec
jge
aam
inc
pop
in
dec
mov
sub
cmp
out
jbe
jle
imulb
push
cltd
test
cmpsl
xchg
fistpl
sub
sbb
cmpsl
cmp
cmp
push
in
loopne
sbb
mov
mov
shufps
mov
vminsd
dec
and
ficoms
dec
es
pop
and
test
out
mov
fs
mov
xchg
dec
fucomi
out
pusha
jl
in
jge
je
sbb
mov
jle
sub
or
popf
repnz
ljmp
insb
dec
mov
stos
jne
fs
dec
sbb
iret
or
daa
outsl
ss
in
rcll
repz
dec
out
sbb
je
push
sbb
xchg
jne
lcall
fsubrs
mov
jae
addr16
xor
ss
arpl
pop
jbe
inc
test
jae
inc
movsl
xchg
xchg
mov
insl
jno
dec
dec
mov
mov
rorb
repnz
imul
pushf
bound
in
sbbl
push
inc
lahf
inc
jecxz
mov
sarl
push
montmul
cmpsb
test
sub
shll
das
push
pop
adc
xor
ss
sub
repz
inc
daa
jns
adc
mov
std
jl
imul
push
bound
or
and
lahf
mov
int3
sub
popf
cld
and
mov
fstps
or
lcall
push
or
mov
fstl
fidivrs
int
add
mov
adcb
cmc
sub
fstp
mov
shlb
imul
jbe
loopne
cs
cmp
cmc
dec
mov
jmp
pusha
mov
shlb
sub
int3
sbbl
insb
lock
or
add
fdivrs
in
imulb
add
push
mov
mov
ja
hlt
aad
int3
and
push
mov
stos
es
sti
jno
fistl
inc
mov
sub
rcl
into
gs
push
mov
push
xor
add
dec
sbb
add
test
mov
sub
ja
negb
xchg
in
in
pop
out
sub
pop
mov
pop
push
or
mov
aam
out
test
mov
mov
inc
jl
jg
xor
shl
and
lea
mov
jmp
xor
lods
mov
int
xor
xchg
int
pop
push
stc
je
push
es
mov
in
lcall
xor
fidivrs
ror
dec
mov
jne
fsubs
pop
and
loope
or
jb
jecxz
or
mov
mov
mov
dec
mov
or
lock
sub
xchg
add
push
scas
imul
aam
mov
xlat
jmp
insb
sbb
adc
enter
daa
in
jae
inc
fdiv
dec
incl
rcrb
jmp
dec
mov
and
jg
inc
shrl
stc
cltd
sub
lock
add
mov
jo
mov
repz
outsl
jecxz
push
fwait
mov
movsl
test
imul
cmp
or
lds
mov
cld
aas
mov
rclb
sub
int
inc
ja
cmp
mov
jp
pop
sbb
test
mov
ds
insl
xor
pop
inc
stc
pop
jbe
xchg
les
dec
div
pop
enter
inc
jg
push
jno
mov
mov
mov
movsl
in
xchg
push
jae
or
inc
stos
int
mov
dec
enter
mov
andl
stc
ja
ljmp
pop
addb
jbe
addr16
and
and
imul
mov
jno
out
sub
subl
or
and
fmull
xchg
outsl
repz
dec
cmp
mov
ret
insb
out
lcall
xor
push
imul
push
jb
faddl
loop
adc
jo
add
adc
inc
dec
ss
movsl
mov
imul
jbe
loopne
and
inc
xor
test
aaa
into
test
push
fdivrp
icebp
cmpsb
cmp
aas
mov
xorl
gs
pop
push
lods
mov
pusha
jb
adc
xor
bound
pop
xchg
cmp
push
mov
cmp
mov
aad
pop
mov
pop
jno
les
sarb
mov
sub
jl
dec
into
sti
iret
add
and
cmp
xor
dec
adc
aam
cmp
cmp
aam
mov
ret
js
push
or
push
inc
pushf
dec
jno
mov
jbe
xor
xor
add
test
subb
and
pusha
popf
xchg
dec
sbb
jne
add
push
icebp
inc
pop
ja
in
add
jb,pn
mov
movsl
mov
out
enter
fistl
xchg
mov
or
add
or
fpatan
inc
sub
jmp
scas
stos
and
adc
pop
jno
fadd
xchg
mov
sbb
push
call
push
push
sbb
mov
sub
xor
push
jnp
dec
jnp
inc
inc
test
xor
mov
push
push
out
dec
xchg
ljmp
call
mov
sub
jp
fsubs
jbe
pop
lock
cs
ret
roll
push
scas
lea
bound
xor
jno
xchg
xchg
gs
fwait
outsb
push
mov
dec
gs
pop
fists
sub
jae
mov
out
or
lcall
sahf
mov
pop
push
dec
aaa
ss
dec
sbb
shlb
mov
or
iret
dec
and
mov
or
rcll
push
mov
cmp
inc
and
pop
add
std
cmpsb
mov
shll
xchg
fdivrl
and
push
mov
xchg
cmc
sbb
lods
cli
clc
sahf
in
inc
daa
inc
jae
in
mov
xchg
cmp
push
ja
mulps
xor
sbb
cmp
mov
xchg
inc
dec
fdivs
xchg
aam
dec
xlat
mov
ffree
push
cltd
insb
mov
and
adcb
inc
lds
insb
daa
insb
mov
mov
lret
not
test
enter
add
repz
loope
sti
xchg
dec
fadds
test
iret
mov
jbe
inc
pop
pop
inc
add
cltd
sbb
stc
mov
outsb
faddp
fistl
jmp
cmpsb
in
or
out
imul
adc
mov
mov
das
push
mov
test
ja
cmpsb
fnstenv
mov
push
filds
ret
clc
testb
or
cltd
xchg
jb
out
xchg
adc
add
call
outsl
pushf
sbb
pop
je
mov
add
push
sti
cmp
pop
out
jns
xchg
jge
pop
lret
mov
inc
sbb
lahf
mov
and
cmp
cmp
rolb
test
jne
sbb
or
hlt
aas
arpl
jl
shrb
pop
pushf
pop
shlb
and
push
jne
and
mov
fnsave
mov
sbbl
addr16
inc
xor
enter
cmpsl
inc
jae
inc
jne
push
insb
and
push
xor
mov
ja
and
call
ret
gs
je
push
je
into
leave
decl
sbb
mov
insb
cli
push
lret
sti
test
jge
lea
scas
lods
adc
xor
les
push
imul
mov
sub
cmp
push
sbbl
fwait
xchg
or
dec
in
insl
ja
das
jp
ljmp
hlt
loope
enter
adc
sub
pop
push
and
imul
mov
xchg
imulb
push
in
and
pusha
dec
and
in
mov
push
mov
cwtl
das
mov
popa
sbb
jne
pop
pop
icebp
add
rclb
sbb
cmc
xchg
adc
dec
mov
lcall
xor
dec
and
add
mov
push
rorl
mov
xchg
dec
ret
je
pop
cmpsb
inc
pop
ja
jns
xor
cmp
pusha
sbbb
shlb
pop
pop
test
gs
aaa
cmp
pop
lock
sbb
and
ss
sbb
mov
ja
cli
xchg
pop
aaa
dec
lods
inc
ds
jle
popa
pop
dec
aaa
adc
push
popf
cld
xor
dec
fsts
mov
sar
push
sahf
sub
jl
push
fs
fists
add
inc
daa
mov
push
stc
push
or
test
pop
pop
testl
mov
xor
imul
rcrb
or
xor
insb
sbb
xchg
insl
ja
jp
sub
adc
sub
inc
pop
pop
mov
cmpsl
push
in
mov
imul
sub
cvtdq2ps
dec
pop
hlt
jnp
cs
dec
loop
sub
cmp
dec
pop
cmp
cmpsb
lret
mov
jmp
shlb
aad
test
das
andb
dec
cmpsb
frndint
fsubrl
push
push
sub
data16
push
das
mov
fadd
in
xor
ret
gs
pop
jo
leave
pop
xor
fbld
push
shrb
cmp
mov
imul
pop
cs
aas
xchg
cs
testb
xchg
pop
mov
sarl
out
or
mov
push
inc
adc
cmp
fs
adc
repnz
test
std
cmp
or
das
xchg
adc
adc
mov
adc
mov
rcr
cltd
pop
xlat
aad
ret
dec
jae
sub
add
pop
loope
xor
popa
xor
dec
mov
pop
xlat
imul
ds
outsb
ds
lea
pop
pusha
gs
jge
es
fdivrs
or
fldt
movsb
enter
outsl
ret
inc
dec
add
xchg
xchg
popa
xor
clc
lcall
sub
and
cmpsl
dec
mov
orb
ds
or
jmp
cmpsl
lds
stos
xor
in
jp
into
add
imul
imul
and
mov
mov
aad
sub
into
iret
ret
mov
icebp
sub
fnsave
sti
dec
je
sti
or
scas
movsl
and
mov
imul
in
in
jae
xchg
push
sbb
pusha
enter
jmp
cmp
sub
in
add
jge
dec
icebp
push
inc
dec
pop
jbe
mov
fistpl
mov
out
jmp
or
mov
xchg
fisttps
std
add
dec
xor
jg
pusha
adc
xchg
and
lods
aaa
testb
dec
shlb
pushf
stos
in
pop
out
ret
subl
dec
rolb
and
jno
or
push
jo
pop
popl
scas
sub
xchg
call
addr16
call
std
dec
mov
add
push
pop
or
inc
and
push
pop
rorb
jle
int
neg
icebp
js
popf
pop
dec
mov
jnp
inc
adc
and
sbb
enter
cmp
sub
ja
bnd
repnz
lds
int3
jne
sbb
ja
jbe
orb
ret
movsb
scas
popf
jge
call
fstps
notb
xchg
repz
push
movsl
sub
dec
mov
sbb
test
mov
into
arpl
or
mov
test
popf
mov
pop
insl
push
push
in
fisubrl
sbbl
gs
ret
sbb
in
pop
jno
mov
in
fnstsw
mov
iret
push
in
loop
push
or
push
add
enter
out
cmc
mov
mov
into
mov
push
xor
jg
dec
popa
xchg
pop
movsb
jns
or
jns
cmpps
ror
popf
sub
cmpsb
mov
or
mov
fildll
int3
sub
out
dec
cli
adc
cwtl
lods
add
addr16
jmp
into
sub
mov
cmp
pop
imul
mov
daa
in
mov
iret
loope
cltd
adc
js
stc
xchg
push
sbb
push
sbb
pop
mov
pop
sbb
push
or
mov
fisttpl
inc
or
out
add
sub
jae
in
andl
inc
xchg
and
sbb
cmp
jns
and
out
rclb
stos
ss
jbe
push
pushf
stos
sbb
add
or
adc
xchg
or
mov
mov
push
popf
mov
mov
jnp
push
adc
dec
xchg
add
sbb
xor
xchg
sbb
fsubp
mov
sbb
push
dec
and
in
pushf
cli
jns
mov
out
rclb
outsl
loop
scas
popa
fcompl
cmp
les
out
js
fidivs
ficompl
pushf
ss
scas
out
xchg
xchg
mov
mov
jae
mov
subl
int3
pop
cmp
subb
xor
sub
imul
popa
push
enter
ficoml
loope
scas
jb
mov
je
stos
inc
cmp
cwtl
mov
and
ss
xchg
inc
jae
push
and
inc
fsubrs
shlb
mov
mov
sub
das
loope
lea
push
dec
and
adc
cmp
mov
jbe
push
scas
pop
mov
jge
addr16
in
das
jne
popf
stos
jns
pop
mov
mov
sub
loop
add
out
test
dec
mov
jg
sarb
jno
sbb
sub
lahf
dec
lods
jl
jl
lcall
and
sub
xchg
mov
addr16
xchg
jnp
fsubrl
push
jo
xor
jl
mov
outsb
mov
cs
dec
ret
je
andl
inc
test
jnp
cli
test
les
or
dec
popf
sub
test
sbbl
scas
fsin
pop
das
or
nop
daa
iret
pusha
call
pop
shrb
mov
dec
cmpsb
sbb
rol
out
fdiv
pop
fcoms
and
repz
popf
negb
imul
cmp
jbe
fwait
out
lods
dec
fdivs
xchg
sti
jne
push
inc
in
mov
loopne
jns
inc
in
xor
lock
inc
mov
mov
mov
xchg
sub
push
pop
imul
test
mov
sub
or
add
inc
subb
jb
lahf
shl
repz
aam
xor
push
pop
dec
add
sub
lea
pop
xor
in
popf
hlt
mov
and
cmp
cmpb
je
inc
pop
add
ljmp
lcall
ja
out
pusha
mov
ljmp
push
or
mov
inc
hlt
mov
add
jno
inc
in
adc
aaa
rcrl
loope
insl
lcall
mov
jbe
sbb
notb
cmp
pop
fidivrl
jmp
arpl
call
sbbl
add
and
cmp
outsb
inc
out
cmpsl
mov
xor
and
cld
sub
sub
fcmovu
mov
xchg
cmp
pop
mov
or
sub
mov
sub
or
dec
cmp
cltd
scas
or
pop
xor
bound
ljmp
mov
push
dec
stc
je
stc
aam
insl
cmc
repz
scas
mov
push
bound
das
lods
mov
mov
pusha
cmp
sub
dec
out
scas
mov
aad
jbe
add
popa
lods
into
cs
dec
test
cli
pushf
into
xchg
sbb
movsl
and
lock
mov
sbb
sbb
xor
js
stos
in
test
jno
arpl
movsb
int3
dec
mov
dec
stos
daa
push
and
mov
xchg
stos
in
pop
xchg
adc
sbb
mov
stos
in
into
in
jo
decb
and
pop
or
int3
shll
pusha
mov
and
lods
dec
sbb
cmp
pop
sahf
push
lret
and
sub
xchg
in
jbe
push
mov
jmp
nop
push
sub
aas
inc
scas
jo
dec
add
sbb
sbb
jnp
aas
xor
loope
mov
popf
inc
aad
dec
add
pop
cmp
lret
fistpl
repz
inc
sbb
add
mov
sbb
jmp
or
pop
lock
push
out
pop
fisubs
stos
mov
mov
loope
test
cmp
push
loop
cmp
into
movsl
idivl
push
shlb
push
push
addr16
push
pusha
test
mov
push
cli
dec
push
popa
adc
add
xor
lret
jo
push
lahf
mov
outsl
lahf
mov
dec
arpl
jno
bswap
aas
or
int3
pop
aad
dec
aaa
rcll
mov
xor
dec
stos
std
clc
lret
bound
es
cmp
sbb
sbb
lret
movsb
imul
cs
lds
mov
mov
pop
xor
into
enter
inc
jmp
cmc
dec
loope
inc
ret
test
lahf
jp
jmp
jb
in
mov
pop
fwait
xor
or
inc
and
jno
enter
or
orl
outsl
xor
je
push
adc
xchg
ja
addb
xchg
adc
pop
mov
pop
adcl
xor
push
pusha
pop
or
sbbl
pop
xchg
jp
sbb
out
popa
jbe
jnp
xchg
push
aad
pushf
mov
jb
das
addr16
push
imulb
mov
lods
cmpsl
mov
js
adc
and
mov
ss
lds
inc
jl
cltd
xor
mov
or
jge
data16
mov
ja
adc
fistps
or
pop
mov
or
dec
push
xchg
adc
jge
stc
add
hlt
adc
ror
mov
mov
add
sub
pop
xchg
inc
mov
inc
out
call
sbb
aaa
into
push
xchg
push
sub
in
jne
pusha
push
stc
fs
add
js
mov
aad
cmp
jp
test
inc
xor
jbe
add
inc
pop
aaa
out
xor
aaa
jb
cmp
lret
call
or
pop
pop
test
mov
jecxz
mov
fyl2x
call
jb
add
add
and
and
imul
or
stos
add
fldt
push
push
iret
in
push
call
push
jg
mov
mov
fiadds
popf
seto
in
aam
fisttpll
mov
fwait
jp
dec
pop
push
xor
add
mov
and
push
xchg
and
gs
repz
inc
nop
mov
lret
shrl
xorl
in
call
mov
out
xchg
mov
mov
fmulp
les
shlb
or
scas
cli
xor
jne
fwait
cmp
lea
stc
push
mov
idivl
fsubs
leave
lahf
sbb
sbb
jp
lods
inc
dec
adc
icebp
jno
in
out
or
push
xchg
stc
mov
in
not
lcall
mov
adc
mov
repnz
enter
adc
mov
call
outsb
mov
lcall
lahf
testl
inc
es
cmp
std
test
pop
dec
das
ret
cmp
mov
leave
sub
push
jne
mov
cmc
sub
fcomps
ja
and
jnp
and
scas
mov
adc
lret
lret
mov
jmp
push
mov
fs
out
and
pop
out
or
mov
sti
dec
fdivrs
xchg
add
int3
rclb
push
or
sbb
mov
fistpl
gs
pop
xor
mov
addr16
cmp
pusha
dec
push
sbb
imul
in
fwait
add
movsb
js
data16
dec
jo
or
test
adc
popa
sbb
sub
in
popf
adc
fwait
popf
sbb
bound
rcl
lock
and
xor
subb
sahf
sbb
and
and
arpl
and
cmp
inc
stc
push
aad
inc
or
push
sbbl
add
mov
in
inc
cwtl
jno
mov
xlat
xchg
and
inc
cmpl
lock
loope
lods
mov
hlt
mov
stos
jo
xor
lock
add
push
fistl
orb
imul
and
stos
ljmp
testb
addb
sub
jmp
inc
or
std
push
addl
ficoms
ja
daa
daa
jb
lcall
adc
cld
jmp
mov
inc
es
dec
aam
xchg
jecxz
lcall
cmc
in
and
les
imul
mov
jl
notb
push
mov
and
ret
jmp
sub
icebp
in
cld
enter
jle
cmp
xor
inc
add
push
nop
cmp
pop
rorl
mov
and
leave
xchg
sahf
push
insb
sub
jecxz
fists
mov
and
jne
aaa
push
bound
mov
cmpsl
shl
mov
jns
fadd
fidivs
cld
psubsb
shll
mov
jg
sub
jle
mov
push
ficomps
iret
push
push
call
outsb
xor
push
movsl
mov
xor
call
cmp
addr16
push
in
ret
push
xchg
sub
hlt
inc
shr
aam
fnstsw
fidivrl
mov
gs
push
inc
clc
push
test
inc
xchg
dec
shlb
js
pop
jbe
adc
and
sti
pop
sub
cld
jae
add
pop
mov
sub
orb
xchg
mov
add
inc
pushf
cli
ljmp
test
sarb
cmc
mov
enter
dec
jno
inc
leave
es
cmp
mov
int
add
loop
and
jo
add
lods
and
jne,pn
jp
cmp
xlat
cltd
scas
or
cs
push
sub
fsubrl
jl
pop
mov
imul
gs
out
push
mov
xchg
ja
leave
xor
push
scas
dec
je
jge
sbb
jb
mov
jl
addl
sub
pop
insb
mov
lahf
mull
call
cs
jbe
aas
lods
push
stc
adc
or
dec
clc
add
push
mov
and
or
test
xchg
outsl
jl
add
dec
data16
lret
and
shlb
xor
xchg
push
out
popa
sbb
fsubr
pop
add
iret
sub
repz
std
adc
push
aad
insb
adc
inc
lea
jns
pop
repnz
cltd
xlat
mov
sub
sbbl
scas
jo
pushf
push
jl
scas
jnp
out
nop
cmp
sub
lock
sub
mov
mov
arpl
cmp
lods
sub
ret
sub
int
sbb
jb
fdivrs
rolb
in
push
mov
div
sti
push
mov
lahf
ds
mov
sub
sarl
je
jp
call
xchg
dec
mov
add
jmp
cmp
popf
ret
adc
ret
pop
repz
aad
push
jnp
inc
sub
push
clc
leave
cltd
outsb
je
fsubr
pop
inc
icebp
mov
sub
outsb
stos
jge
adc
adc
and
out
jbe
loope
adc
or
ret
aaa
aam
out
inc
push
or
push
fisttps
xchg
jns
push
clc
inc
jo
dec
mov
inc
dec
out
adc
pop
nop
clc
xchg
sub
cmp
dec
jecxz
leave
fucomp
sub
pop
test
jne
test
dec
xlat
add
aam
aas
add
jbe
pop
xchg
xor
bound
add
pushf
xor
pop
xor
mov
cmc
xchg
mov
js
pop
pop
pop
inc
fmulp
mov
clc
imul
cltd
loope
pop
scas
xchg
andl
pop
jecxz
sbbl
xchg
std
cmovnp
cmp
ds
push
mov
xchg
xchg
rorl
andb
jl
mov
push
in
pop
xchg
rcll
cmp
hlt
pop
mov
inc
push
push
cs
mov
dec
mov
lds
div
push
loopne
movsl
pop
adc
mov
or
mov
stc
push
sbb
pop
ror
lea
mov
mov
not
dec
pop
mov
or
mov
testl
stos
loopne
cmpsb
pushf
push
outsl
aad
xchg
pop
cmpsb
adc
aam
jg
push
jle
cmpsb
mov
xor
lret
pop
mov
xchg
insb
outsl
pop
insl
xchg
push
mov
shll
gs
add
cmpl
inc
inc
imul
jge
add
popa
divb
in
lret
out
jp
jo
popf
shl
mov
movsb
push
mov
mov
adc
xchg
gs
jb
pushf
lahf
lret
ds
sbb
mov
lret
aas
shr
outsl
outsl
loopne
ret
adc
mov
xchg
nop
mov
push
pushf
push
out
dec
adc
or
repz
cli
sbb
insl
call
sahf
jg
ds
lcall
xlat
xor
int
mov
andb
jb
push
int3
pop
xor
in
dec
mov
sbb
cwtl
sub
lock
in
pop
pusha
cwtl
sbb
jns
test
lods
mov
xchg
inc
std
andps
push
fsubl
pop
pushf
jp
pop
lds
inc
loopne
test
decb
std
ds
in
push
mov
sbb
cmpl
pop
sbbl
and
repnz
adc
push
mov
or
lret
jl
fdiv
mov
sub
push
bound
adc
sti
push
scas
orb
cmp
xchg
notl
inc
cwtl
rcrb
pop
xor
mov
dec
fs
stc
push
out
rcrb
mov
sbb
js
adc
mov
mov
fcomps
fsubs
test
fsubl
mov
mov
xlat
xor
dec
aad
mov
pushf
pop
xchg
push
in
xchg
or
inc
in
mov
repz
ret
insb
adc
pop
mov
pushf
mov
jp
adc
sar
rcrb
pushf
xchg
lock
rcrl
leave
xchg
hlt
mov
jo
cmp
xor
nop
ljmp
pusha
iret
lret
sti
adc
scas
pop
iret
pop
lcall
in
mov
stos
sahf
mov
imul
lock
cli
mov
lock
xor
add
push
lret
push
rcl
sbb
sub
mov
mov
pop
adc
iret
pop
inc
lds
loop
adc
pop
mov
fsub
jp
ljmp
cli
aam
loope
call
inc
dec
loop
adcl
fwait
cmpsb
or
ret
fcoml
arpl
icebp
imul
ss
dec
cmp
out
fidivrl
jg
inc
xchg
pop
or
pop
sub
loopne
dec
cmp
fidivl
lods
sbb
jle
push
sbb
jnp
test
sub
mov
int3
push
adc
mov
xchg
and
push
es
bound
std
les
sub
xchg
xchg
push
jnp
jno
pop
rorl
sbb
scas
cltd
push
add
lods
repz
add
testb
std
push
push
insl
inc
fwait
sbb
or
hlt
mov
loopne
lds
adc
push
sub
cmc
dec
push
inc
hlt
cmp
pop
ds
imul
in
mov
insb
adc
clc
scas
jno
inc
test
push
out
das
mov
jae
sub
mov
sub
leave
pop
or
sub
dec
scas
call
and
insl
es
mov
jae
jns
stc
jno
mov
jae
xlat
mov
mov
mov
inc
push
xchg
imul
popf
mov
mov
scas
repnz
mov
jmp
out
sbb
add
aad
movb
fwait
xchg
out
fs
push
imul
lret
dec
pop
pushf
aad
test
xor
sti
inc
sub
push
inc
arpl
movsl
inc
xchg
mov
cmp
ret
jne
push
jmp
lods
mov
aaa
ss
std
mov
inc
inc
push
sbbl
pop
add
insl
imul
mov
enter
addr16
ret
cld
xor
daa
rolb
and
nop
mov
cld
sub
push
cli
ja
fsubrl
mov
in
cmp
adc
xchg
sub
and
xchg
pop
outsl
cmp
sbb
rcrb
xor
mov
cmp
cltd
in
lret
movsb
jg
repz
push
out
dec
pop
dec
or
sbbl
jl
pop
fidivrs
movsb
out
pop
dec
test
cli
jnp
out
inc
pop
sti
xchg
mov
jne
std
pop
scas
pop
cmpsb
ret
xor
sbb
and
inc
imul
fstl
push
xchg
and
pop
sti
mov
inc
mov
ja
sarl
fisubrl
fsubs
dec
dec
fidivrl
cmp
mov
add
mov
push
in
orl
mov
sbb
movsb
out
cmc
jecxz
mov
or
cmc
add
pop
cmp
dec
cmp
cltd
stos
shll
cmp
push
shrb
inc
mov
xchg
sub
xchg
lret
data16
xor
inc
scas
ret
movsl
stc
xor
out
lods
inc
enter
sbb
popa
mov
inc
jae
fs
push
stc
lods
push
daa
js
shlb
jo
in
leave
rcr
jo
sub
es
mov
sub
pop
sarl
cmpsl
ds
mov
test
push
inc
enter
adc
push
sbb
pop
pushl
lods
xchg
fnstsw
gs
adc
lods
nop
ss
mov
lock
inc
xchg
std
sti
pop
ret
fcomip
xchg
pop
mov
and
jp
hlt
lahf
in
gs
cmp
and
call
orl
jbe
sbb
cmp
lret
or
mov
in
test
stos
mov
xchg
adc
fstpt
mov
and
cmp
jl
mov
popf
adc
movl
lcall
in
fsubs
loopne
ss
or
pop
jmp
xlat
add
mov
fidivrl
mov
add
clc
inc
into
dec
xor
add
test
adc
in
push
push
jno
loope
jle
mov
les
mov
in
mov
xchg
sub
fucomip
push
scas
cli
or
cmp
push
jecxz
aam
aad
jno
je
mov
adc
movsl
lds
je
cmc
lret
seta
add
xchg
ss
push
xchg
push
xor
fxch
xchg
orl
sti
outsb
push
out
dec
add
mov
ja
or
ja
loopne
push
loope
inc
out
cmpsl
cmpsl
adc
shll
dec
std
int3
repnz
mov
loope
sub
out
dec
in
lahf
gs
jmp
cmp
ljmp
popf
xor
lcall
mov
insb
jno
pop
xchg
sub
jp
mov
inc
pop
cmpsb
mov
sbb
cmc
lds
std
xchg
mov
push
movsl
dec
movsb
out
push
or
mov
dec
repz
testl
jmp
enter
mov
mov
adc
movb
add
arpl
cmp
xor
jp
push
in
sbb
cmp
movsb
shlb
or
lds
adc
test
xor
pop
xchg
xlat
imulb
dec
popf
inc
insb
scas
push
mov
inc
pop
jmp
mov
popf
sub
jmp
xchg
mov
add
inc
repnz
fstps
mov
shlb
cmpl
out
mul
cmp
arpl
into
shll
insb
frstor
ljmp
fwait
xor
sub
inc
ret
ja
xchg
pop
xchg
jo
inc
and
inc
xlat
outsb
jns
scas
fisttpll
testb
mov
nop
jg
inc
stos
mov
mov
ficoml
enter
add
daa
in
and
push
mov
nop
mov
mov
rorb
movsb
je
data16
push
mov
inc
imul
xor
insb
out
sbb
cld
cltd
lds
lahf
repnz
in
test
push
sbb
lock
in
and
int3
test
imul
int
fdiv
rorl
aaa
adc
out
insb
inc
xor
cmc
cli
adc
xchg
xchg
push
dec
mov
dec
cmpsb
in
and
adcl
or
xchg
mov
mov
xchg
push
push
imul
mov
fistpll
lret
out
mov
xorb
daa
cs
jae
out
mov
insb
rorb
inc
push
lds
clc
inc
roll
push
data16
inc
mov
dec
hlt
mov
clc
divl
xchg
mov
iret
dec
dec
adc
jge
pop
jnp
jmp
movsb
sbb
in
mov
push
ljmp
pushf
jo
mov
in
jle
adc
sbb
das
mov
subb
mov
jne
xchg
xor
testl
ljmp
add
neg
mov
jb
out
std
ss
lret
xor
lahf
arpl
fwait
jmp
mov
jmp
shr
in
decl
lcall
pop
mov
not
aaa
imul
lods
inc
aaa
aam
popa
repz
stc
sub
pop
je
push
mov
or
or
loopne
jnp
mov
sbb
mov
icebp
je
xchg
add
add
xchg
outsb
inc
push
shll
sbb
movsl
loopne
out
mov
sbb
lahf
lods
orb
rclb
fistpl
test
cmpsb
dec
cs
and
shrl
addb
add
jae
push
daa
adc
xchg
stc
inc
jmp
mov
sti
es
repnz
outsb
cmp
ret
cmp
mov
pop
sbb
pop
cmp
xor
clc
aas
mov
fidivrl
sbb
hlt
sub
sti
cmpsb
sub
xchg
cmpsl
gs
jb
in
mov
sbb
inc
fstpl
pop
sbb
push
cmp
mov
cmpsl
vmovapd
out
pop
test
jne
insl
lret
and
stos
mov
or
rcl
sub
sub
loopne
add
imul
mulb
jb
out
iret
inc
mov
pop
mov
shl
test
sbb
sahf
dec
xchg
jbe
push
adc
cmp
aas
iret
push
or
cld
fmull
pop
jmp
fs
add
mov
push
lock
mov
pop
mov
mov
jo
sub
aad
int
sbb
cld
in
sub
sub
sub
hlt
inc
cmp
and
fcompl
push
divb
jle
arpl
or
dec
mov
adc
je
cmp
push
cmp
jbe
cltd
ljmp
lds
insb
push
fs
ja
jle
out
sbb
pusha
fldt
jecxz
andl
or
push
shlb
es
sub
inc
dec
jle
jl
pop
outsb
jge
dec
jecxz
jp
xor
ret
jle
lea
sbb
cld
popa
push
fsubs
imul
push
imul
inc
mov
ret
imul
les
sbb
dec
popf
cwtl
add
insb
xchg
std
jg
das
cltd
and
push
xor
leave
pusha
arpl
out
push
in
xchg
das
xlat
jno
fisubl
mov
mov
shll
xorl
movsl
les
mov
mov
mov
test
repnz
imul
jne
es
add
xor
push
xor
mov
movsb
push
jne
les
mov
pop
mov
cmp
iret
cld
mov
pop
add
sbb
ret
jecxz
or
das
push
repz
std
cltd
adc
or
fcoml
mov
pop
push
push
call
dec
jmp
ret
cltd
xchg
jne
xchg
mov
cwtl
xchg
cmp
fwait
lods
cmp
mov
adc
imul
xchg
mov
ja
sahf
xchg
mov
and
pop
aaa
inc
inc
pop
jp
pusha
ss
movsl
aaa
mov
xor
fxch
clc
mov
mov
adc
stos
decb
popa
add
das
aaa
inc
sarl
adcb
sub
dec
add
out
popa
test
movsb
pop
addl
icebp
mov
inc
push
popa
clc
adc
jmp
cwtl
jg
sub
imul
cmp
pop
stos
mov
cmc
out
iret
lea
lahf
pushf
test
push
cld
sbb
pop
adc
fstpl
cmpsb
call
dec
lods
xor
or
cmp
mov
push
adcb
lret
lret
cld
mov
lock
adc
pop
add
sti
adc
jmp
xor
lret
or
iret
pop
insl
imul
jo
movsb
sub
cmp
fs
mov
inc
stos
sub
adcl
and
adc
pop
push
jl
iret
jge
mov
lret
loopew
aad
inc
add
inc
inc
cmc
pop
data16
sbb
imul
or
or
movsl
push
mov
cmp
mov
adc
in
jmp
ret
mov
sti
add
out
xchg
sub
scas
xor
dec
lods
dec
jg
popf
sbb
dec
inc
out
inc
les
jp
cli
rorl
cmpb
xor
bound
jmp
pop
int3
cltd
push
in
or
adc
out
bound
je
xchg
loope
inc
cld
sti
mov
xchg
outsl
loop
xchg
adc
push
jne
mov
stos
cs
sub
ja
sbb
push
movsl
cmp
mov
inc
hlt
mov
or
mov
enter
and
aad
mov
insb
or
cld
sbb
inc
and
push
add
or
inc
lret
push
movsb
xchg
or
mov
lds
fisttps
jge
add
mov
mov
cmc
fsts
lods
or
adc
test
lds
jae
jnp
pusha
movsl
js
idivb
add
cltd
or
out
int
inc
dec
add
ds
mov
mov
add
faddl
mov
mov
pop
sub
aas
xor
les
dec
dec
movsb
sar
xchg
mov
cmc
pop
mov
das
mov
insb
and
dec
insb
jg
dec
mov
cmpl
ljmp
lds
fxtract
pop
mov
push
lret
mov
pop
add
lock
push
aam
lds
fs
jecxz
xchg
xor
push
cmc
push
movb
or
mov
cmp
daa
pop
test
push
lods
fistpl
rcll
push
mov
aad
lret
cld
mov
sub
lret
fs
adc
loopne
xor
leave
mov
sbbb
ss
cli
pop
sbb
dec
xchg
cmpl
loope
hlt
sbb
cs
mov
dec
int
rolb
push
xor
lcall
sti
mov
inc
pusha
lods
mov
sahf
sub
cmp
lcall
nop
mov
fs
mov
pop
fcoms
clc
adc
mov
shll
or
add
xor
out
leave
and
fistpl
xchg
das
sbb
icebp
movsb
fisttps
lea
jo
rcrb
lret
xor
pop
rolb
mov
cltd
xchg
dec
ds
dec
mov
je
fs
mov
xchg
mov
add
fstps
jg
pop
not
adc
jnp
sarl
cld
clc
xchg
fidivl
sub
aaa
xchg
movsl
dec
pop
xlat
dec
push
lea
std
movswl
pop
mov
jge
xchg
push
fdivr
or
sub
sbb
sbb
mov
test
dec
lods
mov
jb
sbb
sub
pop
popa
clc
nop
popf
jl
ljmp
xor
pushf
cmp
or
rorb
push
insl
mov
fwait
outsl
jle
mov
shl
add
mov
rcrb
test
sub
cmpsb
sbb
cmp
dec
dec
leave
inc
sub
lock
lods
mov
dec
xor
out
push
rclb
mov
das
cli
sbb
jo
sti
add
daa
mov
mov
into
enter
mov
andl
in
dec
push
mov
insb
shll
add
jl
mov
es
inc
imul
insb
cmpsb
push
mov
scas
stos
cmpsl
jo
aad
xor
and
add
mov
gs
cmc
push
xchg
sub
rcrl
std
jle
jae
cmp
inc
rorl
push
cwtl
xor
movsb
jle
les
xchg
inc
daa
or
addr16
inc
and
mov
lret
daa
test
ret
lea
out
stos
dec
hlt
xchg
adc
xlat
imul
mull
ret
xlat
fwait
jecxz
mov
cmpsb
ret
or
mov
out
leave
xor
data16
dec
adc
jge
fs
inc
popf
test
repnz
cmp
sbb
in
mov
bound
in
inc
enter
cltd
ds
jle
inc
push
jmp
sbb
cld
push
mull
adc
inc
jmp
inc
stc
xchg
hlt
in
mov
cmp
mov
aaa
data16
cmp
pop
sbb
jae
in
push
push
jne
je
xor
or
jl
popf
sub
dec
fistl
or
test
mov
inc
lahf
call
or
jnp
ja
ja
popl
xor
loop
xor
jecxz
xchg
push
int3
enter
xor
sarl
push
xlat
and
daa
cmpl
imul
jmp
lret
insb
andb
xchg
inc
mov
dec
mov
xor
popa
dec
fildll
movsb
or
pop
jns
gs
fnsave
cmp
cmp
sahf
jae
push
cmp
lahf
insb
js
push
ja
daa
xor
pop
leave
pusha
dec
loop
add
mov
shrl
sub
or
clc
jne
sub
xchg
sub
mov
mov
sub
dec
xchg
andb
out
inc
fisubs
add
fcmovnb
mov
and
inc
cld
ds
imul
add
jle
push
in
add
jne
nop
cmpsl
pop
mov
xchg
enter
daa
push
imul
les
aas
sbb
fucom
ja
inc
pusha
hlt
cld
xor
mov
out
dec
mov
shlb
vpsraw
and
jg
sbb
lcall
xchg
js
pushl
dec
or
push
sbb
fidivrs
add
adc
xor
mov
lea
jge
cmpsb
daa
out
stos
inc
loopne
fldcw
adc
sbbl
mov
adc
jnp
lcall
int3
xor
and
or
add
cmc
popa
dec
fists
cmpsl
jge
push
jmp
fldt
dec
mov
out
sahf
dec
repnz
loopne
imul
mov
inc
faddl
mov
loope
push
mov
mov
mov
mov
mov
push
push
add
add
aas
or
mov
or
hlt
push
stos
adc
push
jbe
nop
jbe
mov
jle
mov
cmpsl
pop
inc
pop
xor
jne
or
sub
mov
gs
mov
fsub
addr16
test
lea
fucomi
sbb
insl
jb
lahf
incb
xor
cmp
xor
or
xor
test
outsb
fidivrl
and
dec
aad
fildll
mov
mov
add
cmp
xor
push
rol
aam
test
sbb
pop
icebp
test
xchg
add
outsb
dec
lahf
scas
pop
fwait
pop
cli
addr16
daa
sub
nop
addr16
add
cmp
out
inc
or
or
popf
test
aas
push
sbb
daa
mov
popf
stc
aaa
mull
popf
sbb
mov
pop
mov
lds
imul
dec
pop
bound
insb
pop
mov
fsubr
mov
add
outsl
push
or
bound
stos
lock
pop
dec
push
inc
push
xlat
cmpsb
std
adc
add
sbb
jo
push
inc
dec
fists
jb
xchg
inc
push
inc
icebp
cmp
sub
xchg
cli
inc
lds
lods
mov
in
xor
dec
fmull
mov
cmc
ja
dec
jge
cmp
jbe
in
sbb
sbb
jmp
xlat
scas
cmp
mov
cmp
dec
jno
cmc
popa
xor
ror
sahf
aad
dec
xor
insb
dec
arpl
pop
jmp
xor
in
mov
fdivs
cmp
bound
ret
dec
stc
cmp
scas
rcrb
sbbl
or
sbb
shll
std
push
in
out
and
xor
incl
inc
fmul
adc
xlat
das
scas
inc
mov
icebp
inc
fsubs
sbb
sbbl
nop
negl
loope
jb
and
inc
nop
ja
loop
jle
lods
cmp
inc
sti
mov
fisubl
mov
out
push
in
ret
in
ljmp
inc
test
cmp
xor
sti
mov
popa
into
enter
in
arpl
xchg
loopne
dec
cmp
mov
lgs
pop
xchg
movsb
jmp
dec
cmp
cmp
jecxz
pop
and
outsb
inc
pop
xor
xor
mov
adc
or
xor
xchg
cmpsb
addr16
mov
sbb
push
rcrb
jns
inc
dec
lcall
mov
fildl
mov
mov
jmp
mov
mov
in
push
rorb
push
xor
mov
idivl
add
jae
ret
pop
xor
mov
push
mov
inc
decb
xor
fstpl
nop
std
jnp
sub
fadds
sbb
pop
out
cmpsl
and
xchg
std
cs
sbb
dec
jecxz
call
push
enter
shlb
outsb
bound
xor
fdivl
mov
fcmovne
mov
pop
imul
push
jne
loopne
fdivs
popf
and
push
loop,pt
ss
lret
hlt
sti
mov
inc
adc
repnz
fsubl
mov
dec
repnz
inc
fmulp
fmuls
fs
daa
ds
sbb
mov
ljmp
mov
test
mov
insb
add
pop
movsb
jg
mov
cmp
loop
fistl
ss
fldt
repnz
fistps
mov
and
cmp
js
mov
jns
dec
pop
sub
fs
jp
add
jl
std
enter
add
jle
jb
or
ret
cmpsb
nop
stos
mov
and
xor
or
scas
std
push
sub
xchg
ss
push
fsubl
int
ret
ljmp
arpl
mov
mul
lcall
aad
rcrl
jno
pop
xchg
ret
sbb
mov
enter
ret
shl
dec
pop
repnz
inc
xchg
push
mov
dec
jno
hlt
xchg
nop
cmp
mov
or
outsl
sub
ret
sti
cwtl
scas
iret
iret
jp
out
popf
aad
daa
mov
mov
loop
pop
dec
mov
dec
cmpsl
dec
xlat
lahf
ror
clc
shll
push
adc
inc
lcall
cmp
jne
mov
xchg
sub
stc
int3
pop
mov
rcrb
add
push
loopne
or
push
inc
adc
int
rolb
sub
cmp
dec
shlb
dec
gs
jl
addr16
add
decb
and
leave
mov
insl
sahf
mull
shl
push
cmpsb
lahf
stos
xor
shl
pop
std
out
sbbb
inc
les
pop
sbb
call
into
fldenv
jp
push
xlat
fistps
pop
lcall
das
fwait
mov
adc
lret
call
fdivrp
xchg
in
add
jo
bound
mov
cmp
imul
mov
insb
shlb
repz
and
mov
fldcw
pop
inc
pop
cmp
xlat
xor
sbb
sub
cmpsb
and
xchg
cmpsb
jp
mov
loope
lcall
not
sub
dec
jno
mov
mov
notb
mov
ja
mov
sbb
fistpl
jecxz
aam
orb
rcll
pop
cmpsb
push
push
in
push
inc
out
fidivs
fcmovne
adcb
loopne
sbb
mov
dec
in
stos
adcl
fs
fnstsw
cmp
ljmp
mov
push
add
and
fbld
subb
adc
ss
out
mov
mov
in
int3
rcll
jecxz
outsb
movsl
sub
mov
aad
roll
pop
mov
jg
dec
cmp
insb
incb
pop
lods
lea
scas
fimull
pop
in
mov
popa
add
outsb
inc
popf
sbb
sbb
jb
sbb
xchg
dec
pop
mulb
popf
scas
pop
repz
les
sub
fwait
idiv
lods
std
leave
pop
cmp
mull
adc
cli
jle
lods
xchg
fwait
sub
jns
xchg
xlat
je
data16
pop
xchg
ss
xor
inc
ret
in
inc
pusha
inc
fdivrl
cmp
fsubrs
mov
ret
sub
fwait
pop
in
and
sahf
inc
mov
sub
pop
push
mov
jl
sarl
popa
adc
lods
fstpt
ds
cli
xor
ror
int3
imul
and
sub
outsl
mov
das
insb
fstpt
push
inc
sbb
sub
insb
stos
jno
adc
or
aaa
pop
lods
in
les
imul
lcall
push
pop
lock
cmpsl
out
dec
das
lahf
and
cmpsl
push
sbb
xor
or
fiaddl
popf
inc
push
lock
mov
xor
nop
rcrb
enter
sub
out
sbb
xchg
add
sar
mov
sar
movsb
mov
sti
test
pushf
mov
mov
push
inc
inc
insl
push
inc
in
inc
pop
jbe
inc
sbb
dec
mov
sub
ret
data16
and
enter
loope
add
mov
xor
mov
mov
sbb
jnp
adc
jae
or
and
arpl
mov
fidivs
mov
mov
push
push
out
mov
lea
js
jo
jmp
pushl
mov
jge
xor
aam
push
aas
mov
aas
icebp
int3
and
lea
jle
stos
das
jecxz
and
mov
jbe
test
scas
mov
leave
call
cmpsl
xor
and
lret
push
adc
in
adc
xchg
jg
adc
pushf
cli
and
lret
jbe
lea
sbb
pop
or
gs
jmp
call
out
xchg
mov
pop
sub
cmp
xor
mov
aaa
mov
es
fdivp
lcall
cmpsb
xor
inc
push
fsubrl
test
lock
imull
mov
adc
fisttpll
ds
sub
inc
mov
xor
lock
inc
lea
mov
mov
sbb
push
ja
ret
dec
nop
push
jge
in
addl
push
ds
jge
add
ss
sbb
gs
mov
ret
or
pop
out
pop
sub
jbe
lock
roll
xor
sti
test
insb
sahf
jb
xchg
lea
hlt
jbe
loope
iret
mov
jecxz
sbb
mov
jle
jne
xchg
mov
mov
stos
rorb
ret
pushf
int
mov
das
dec
dec
aam
aaa
sbb
xchg
cmp
rorb
test
xchg
sbb
sub
add
dec
stos
jbe
adc
add
sbb
ds
outsl
fimull
xor
push
stc
or
divb
fcmovb
ljmp
fisubs
pop
sbbl
sub
xchg
mov
sbb
iret
jb
inc
jb
fstpl
xor
jmp
loop
jne
test
dec
mov
pop
sbb
outsl
mov
push
cltd
scas
pop
out
bound
or
daa
ljmp
or
add
push
scas
addb
adcl
test
in
sbbl
test
sub
and
testl
xchg
and
int3
push
aas
rclb
adc
in
scas
sbb
mov
fidivrl
push
or
aas
push
jae
pop
dec
imul
scas
pop
mov
adc
in
and
in
popf
out
jecxz
lea
rcll
pop
mov
lret
push
mov
or
inc
xorb
pusha
push
or
jle
outsl
sub
jl
shrl
adc
js
pop
test
push
adc
cs
cmpsb
faddl
fidivrl
cmp
divl
xchg
out
imul
inc
mov
xor
loop
mov
rcll
icebp
xor
inc
pop
cmc
mov
pop
add
xor
ret
sbb
idivl
jp
and
loopne
mov
sub
dec
jb
mov
sahf
or
enter
pop
sub
mov
js
mov
test
negb
incb
cmp
mov
test
and
push
jns
ja
dec
cltd
xor
out
enter
push
shll
mov
adc
jb
in
push
lret
idivb
cmp
cmp
sub
popa
jbe
xor
sbb
jmp
inc
or
cmp
jg
nop
adc
cld
js
into
das
and
scas
div
xor
and
les
jmp
or
iret
jge
mov
jp
jge
data16
ret
hlt
xor
xchg
pop
icebp
fwait
xor
insb
or
sbb
loopne
cmp
nop
dec
fs
sub
inc
add
fbld
je
mov
inc
es
sub
fsubl
or
lret
pop
outsb
dec
add
test
sub
ja
mov
mov
mov
lds
xor
int
sub
and
cld
mov
lods
pop
mov
ret
adc
jle
jae
and
stc
pushf
jg
into
sbb
cmp
cmc
jnp
fnstcw
mov
sbb
ljmp
mov
stc
add
imul
outsb
sub
jno
jecxz
cmp
cld
and
add
repz
stos
adc
fcompl
outsb
or
jb
sub
push
sub
lock
dec
fnstsw
in
sti
test
sub
xchg
outsb
dec
jbe
mov
roll
or
push
add
test
adc
adc
cltd
jg
dec
pop
xchg
adc
mov
clc
bound
mov
loope
ljmp
pop
push
jl
dec
xchg
pop
mov
testl
stos
jo
cvtps2pd
outsl
inc
xchg
jnp
sub
cli
mov
outsl
push
lods
jmp
loopne
shlb
test
mov
and
xorl
jns
pop
xlat
int3
dec
imul
xchg
push
push
test
insb
push
sub
std
inc
mov
push
stos
fmul
outsl
adc
adc
cmc
mov
and
js
dec
dec
out
lahf
mov
mov
add
rcrl
in
mov
fdivl
add
aad
scas
xchg
loope
push
inc
cmpsl
mov
pop
jge
inc
mov
cmp
xor
xor
mov
shrl
xor
dec
repnz
inc
pop
out
dec
push
test
dec
notl
mov
jo
add
std
xchg
mov
sarb
cld
sub
lea
ret
pop
mov
pusha
add
mov
das
sti
or
das
mov
mov
xor
cwtl
sub
mov
insb
xchg
cli
fs
ficoml
repnz
paddw
shl
xchg
out
enter
cmp
push
ror
jl
mov
mov
outsb
ret
in
test
fisttps
and
cs
insb
inc
cltd
or
or
mov
push
push
sbb
pop
cmc
pop
nop
fnstenv
addb
fs
bound
mov
mov
xor
cmp
add
call
adc
aad
mov
jl
push
cltd
cmp
or
xchg
call
push
clc
sbb
push
push
adcl
pop
jmp
popa
sub
inc
pop
mov
lea
dec
add
imul
cld
cli
cmc
testb
jno
repnz
pop
enter
and
sub
xchg
dec
mov
or
mov
ljmp
ret
jge
addr16
or
pushf
sub
pop
hlt
enter
dec
sub
mov
ret
mov
lds
or
aad
inc
fnstcw
fiaddl
pop
test
push
mov
out
leave
cmp
movsl
cli
push
jmp
sti
fdiv
adc
daa
adc
push
xchg
xor
enter
loop
fldenv
lcall
push
mov
cs
push
pushf
daa
call
dec
orb
push
or
or
fsubrs
and
loop
push
pop
xor
dec
fcoml
lock
movsb
das
test
lds
je
sbb
mov
and
add
xchg
mov
xor
mov
je
jno
lds
in
jle
mov
xor
sub
mov
enter
ret
addl
xor
das
aaa
cmp
mov
ds
xchg
push
jle
mov
in
in
mov
jb
daa
sbb
xchg
push
push
movsb
xchg
push
in
std
addl
int3
fisubs
imul
repnz
out
cltd
sub
adc
xor
sub
jns
cmp
cmc
adc
es
push
adcb
xchg
ljmp
mov
push
jmp
fcomi
out
mov
je
adc
mov
add
imul
lea
xor
cld
jmp
and
jno
into
stos
es
out
loopne
fldl
out
xor
pop
movb
lahf
add
and
inc
gs
ss
mov
push
out
pop
sbb
xchg
rclb
ljmp
mov
cmp
rcr
stos
push
popf
fsubl
popf
jo
fstl
ss
push
sbb
mov
push
jo
out
add
rcrl
lods
mov
pop
or
mov
or
pop
cmovp
jle
sub
xchg
jg
add
decl
xchg
test
xchg
jmp
mov
xchg
jno
andb
mov
mull
in
mov
jbe
or
cmp
aam
leave
fisttpll
adc
shlb
pusha
sub
lret
rcr
lret
jbe
mov
adc
lret
movsb
cmp
in
add
lods
lods
test
dec
ret
pop
out
inc
fmuls
sub
and
lods
pop
cmc
lods
mov
jl
lock
or
sbb
mov
in
inc
xchg
sub
sti
mov
in
fwait
cmp
stc
je
bound
pop
imul
mov
xor
sahf
in
fwait
push
in
pusha
sbb
ret
ss
and
jmp
pop
xchg
in
lods
jg
test
adc
mov
int3
adc
ss
out
push
pop
jl
fs
sub
and
ja
dec
inc
push
test
mov
fdivl
fs
xchg
and
xchg
pushf
sub
and
jge
ds
mov
int
loopne
pop
repz
or
stos
test
shrl
mov
movsl
fwait
or
shlb
jecxz
push
push
mov
pop
push
gs
push
xchg
cmp
and
xchg
sub
rorl
jo
add
andb
adc
jno
loope
sub
jmp
cmp
or
xor
insl
movsl
addr16
push
sbb
jbe
dec
mov
push
rcll
adc
cli
lea
movsl
cmp
aad
pop
adc
jge
or
pop
xchg
jnp
dec
ret
mov
mov
push
inc
clc
dec
fistps
int
mov
xor
cmp
pop
cmpsb
popf
pop
out
rolb
inc
mov
movsb
cmp
xchg
and
rorb
jp
sub
es
ret
pop
sbb
mov
cmp
mov
xchg
dec
ficomps
cmp
call
mov
imul
int
add
pop
into
sbb
dec
mov
imul
jl
pop
sub
inc
add
xor
mov
fsubl
and
cmp
in
fwait
sbb
or
add
insl
xor
daa
add
jmp
out
fsub
xchg
xor
mov
leave
out
fdivl
cld
cmpsb
mov
push
test
cli
mov
or
cmp
shll
jmp
incb
sub
ljmp
fnsave
adcb
enter
popf
xor
lods
jmp
pop
das
loope
out
dec
and
add
xor
mov
arpl
xchg
out
inc
into
icebp
push
ja
and
into
jl
cmp
xor
ret
fildl
push
jecxz
cmp
mov
lea
nop
xchg
aas
lods
and
or
into
pop
test
fnsave
sbb
int
mov
dec
add
jge
iret
push
inc
int
xchg
xor
or
push
fidivrs
into
test
leave
scas
movsl
sub
xchg
push
inc
jns
mov
dec
pop
nop
out
cmp
fsubr
cmp
dec
add
test
ljmp
fimull
xlat
jnp
push
pop
or
test
mov
push
xor
mov
loop
xchg
mov
shll
add
jp
xor
sbb
push
pushf
mov
into
push
loope
aam
lret
je
jne
ficoml
data16
cmp
pushf
mov
xchg
daa
cli
xlat
and
add
das
lret
out
mov
push
mov
mov
into
jl
mov
mov
fistpl
orb
inc
sbb
pop
pop
insb
xchg
popf
jno
cmp
push
xchg
cs
add
add
fiadds
cwtl
pop
inc
dec
dec
fnsave
jno
cld
sub
mov
dec
out
lds
stos
lods
jb
add
add
ret
call
call
cs
stc
inc
or
sbb
mov
sbbb
in
mov
mov
fcompl
cmp
sub
stc
ds
ds
lods
mov
jae
sbb
dec
mov
xchg
stc
in
jge
iret
lods
call
push
in
movsb
lods
sub
push
loope
aam
hlt
dec
out
mov
sub
filds
adc
int
or
iret
sbb
scas
orb
lahf
cs
pop
test
fwait
lods
int
mov
and
mov
into
lahf
stos
test
je
inc
daa
out
je
into
xchg
xchg
testb
jnp
cmpsl
aas
pushf
cmp
mov
inc
mov
pushf
int
mov
scas
mov
add
stos
and
push
lret
andl
inc
call
pop
xchg
adc
mov
and
sub
mov
mov
lea
adc
hlt
es
xchg
pop
leave
lcall
iret
nop
xchg
imul
es
fidivrs
rorl
iret
dec
cmp
pop
xchg
ja
adc
mov
jle
xor
push
aad
mov
ljmp
cs
cmp
push
dec
ret
or
adc
cmc
dec
pop
sbb
xchg
int3
xor
lods
fwait
and
lidtl
sbb
in
pop
loopne
add
or
jo
sub
test
cli
lcall
in
icebp
xchg
adc
cmpsl
scas
das
mov
mov
mov
lods
movsb
aas
dec
movsl
add
mov
lcall
push
movsb
mov
int3
arpl
xchg
mov
jmp
xchg
xchg
sub
dec
or
cvttps2pi
pop
sub
lret
pop
outsb
std
and
mov
in
daa
pop
jmp
sub
adc
mov
xor
sahf
lds
inc
xlat
cmp
mov
mov
fdivrp
aas
fs
pop
pop
inc
fmuls
mov
loope
dec
fsubrl
and
xor
mov
movsl
outsl
fisubrl
in
and
stos
inc
aaa
push
cmpsb
mov
mov
cmpsl
mov
daa
pop
addr16
adc
jb
dec
xlat
pop
out
or
xor
sbb
cmp
and
pop
and
aad
pop
add
ja
scas
xor
push
mov
pop
clc
jbe
shl
xchg
sub
and
inc
xor
popf
xchg
add
test
call
aad
cmp
and
ja
scas
std
sbb
mov
lds
sbb
xchg
lea
aam
inc
or
sub
rclb
push
cmpsl
jae
mov
xchg
mov
push
push
sub
jle
xchg
enter
sub
cmpsl
fcomi
outsl
push
and
adcb
mov
sbb
test
cli
lcall
jbe
push
test
xchg
push
std
aas
test
loop
shll
sti
add
mov
inc
sub
imul
fildll
push
mov
mov
mov
das
jg
push
inc
daa
mov
hlt
cmc
fadds
mov
testl
mov
sti
jns
push
mov
xor
add
stc
icebp
pop
mov
xor
push
cmp
jl
pop
pop
repnz
daa
push
int3
imul
lcall
inc
fcompl
nop
and
arpl
test
shrb
loopne
in
or
outsl
push
jp
imul
add
cmp
push
dec
stos
push
out
daa
lea
xchg
cmp
rcrb
dec
stos
lret
mov
mov
mov
dec
push
jb
test
adc
xchg
cwtl
xor
outsl
mov
pop
cmc
ja
in
in
sbb
jbe
xor
mov
mov
add
inc
fwait
or
sti
adc
lahf
xor
inc
mov
inc
imul
ja
loopne
sti
pushf
or
jb
test
lret
mov
data16
or
cmc
shlb
jg
push
sub
jg
pop
dec
sahf
clc
jecxz
pushf
push
in
ret
push
dec
sbb
jg
or
out
and
popf
or
xchg
xor
mov
xchg
cmp
jb
sbb
imul
mov
adc
leave
pop
sahf
stc
ret
mov
cwtl
call
test
stos
cmp
sub
or
xor
lods
pop
pushf
pop
cwtl
int
hlt
adc
ficoml
xor
jnp
dec
rcrl
cld
test
fistpl
push
pop
cltd
pop
xchg
das
mov
inc
mov
ljmp
sub
cmp
rcl
test
addr16
mov
stos
or
icebp
hlt
gs
adc
inc
idivb
cmpsl
test
push
loope
bound
mov
push
insb
add
jns
jnp
adc
xchg
data16
test
dec
testl
and
sub
lret
leave
addr16
rcll
or
fadd
mov
jp
dec
loopne
fcompl
stos
aaa
pop
or
fdivl
adc
rorl
xor
dec
push
adc
lret
jg
inc
mov
int3
jg
pop
jp
mov
out
test
jmp
outsb
icebp
inc
dec
fbstp
add
int
scas
pop
sahf
loopne
and
scas
test
fucomi
jb
sub
jne
cmc
inc
mov
jle
pop
xchg
xor
arpl
and
xlat
outsb
pop
lds
jp
rclb
sub
dec
dec
mov
push
sarl
pop
xor
mov
jmp
stc
in
and
pop
test
mov
mov
inc
loope
push
addr16
sbb
cmp
icebp
mov
dec
mov
and
lods
stos
rcl
je
dec
or
xchg
dec
fistl
dec
push
mov
jle
stos
es
stos
test
inc
std
or
and
leave
sub
dec
mov
aaa
jl
push
adc
daa
ljmp
xchg
jecxz
test
in
add
mov
dec
adc
xor
loop
decb
daa
dec
stc
xchg
out
or
test
xchg
stos
and
xor
icebp
xchg
sub
pop
lret
lock
mov
stos
cmp
fwait
adc
sbb
mov
mov
ja
mov
aam
cmp
jge
aad
pop
pop
dec
xlat
out
push
cmp
cmp
jp
fcompl
add
mov
jecxz
cmp
lds
dec
lds
shll
cli
xchg
pop
inc
outsl
xor
fldt
outsb
push
pop
movsl
xor
out
pushf
jae
into
adc
leave
mov
dec
and
js
aad
xchg
jmp
dec
sbb
insl
cwtl
mov
jge
sti
nop
jle
repnz
dec
leave
xor
in
aas
push
std
subb
push
mov
or
inc
cmp
xor
sbb
rcr
repnz
push
aas
inc
in
leave
repz
pop
adcl
or
shrl
test
xchg
fmull
clc
out
ja
xor
dec
inc
pusha
jne
mov
fwait
inc
pop
inc
mov
movsb
jp
stos
out
sbb
es
pop
cwtl
mov
and
push
dec
scas
out
jno
mov
mov
arpl
lods
daa
test
stc
mov
lods
pop
adc
out
out
int
stos
ds
xchg
test
cwtl
aaa
addl
jmp
or
xchg
mov
scas
mov
popf
xor
adc
mov
xchg
pop
jl
movsl
cwtl
push
out
leave
movsl
fimuls
loope
stos
icebp
lods
xchg
pusha
cmp
add
shlb
dec
out
mov
cmp
jae
outsl
iret
decl
cmpl
roll
imul
dec
repnz
xlat
xor
xchg
lret
mov
hlt
aas
inc
sub
dec
pop
out
out
cld
push
test
mov
aad
push
add
mov
in
clc
sub
stos
xchg
in
leave
fwait
sub
and
add
mov
dec
and
shlb
mov
gs
decb
mov
loop
or
test
notl
dec
inc
add
dec
cmp
outsl
cwtl
fildll
test
adc
mov
dec
scas
sbb
add
mov
push
popa
mov
push
insb
lcall
mov
lock
outsb
xor
mov
popf
dec
add
in
cwtl
xlat
xchg
sbb
jae
dec
daa
mov
sub
jp
pop
out
dec
clc
push
aad
lock
mov
into
movl
inc
jge
out
rcll
mov
or
sub
mov
pop
nop
daa
dec
testl
paddsw
xor
mov
das
pushf
icebp
push
out
and
mov
outsl
push
jge
add
xchg
jo
add
mov
jle
lds
push
xchg
xorb
out
ss
mov
jbe
mov
mov
test
addr16
sbb
xchg
lods
cs
lea
or
mov
aam
xor
shlb
popf
stc
insb
jns
pop
add
pop
loope
or
pop
fmull
inc
cmp
add
push
frstor
sub
xchg
jl
mov
leave
cmp
pop
scas
push
jecxz
mov
mov
and
inc
push
dec
cli
lcall
clc
aad
hlt
sub
or
stos
shll
fisubs
jp
mov
mov
ret
inc
cmp
lds
sbb
inc
ret
pop
cmp
push
mov
ror
filds
jecxz
sbbl
scas
inc
pop
and
outsb
xor
dec
in
sbb
or
pop
imul
mov
pushf
xchg
pmaxub
inc
mov
jne
das
fwait
xchg
sbb
xchg
inc
lock
add
pushf
mov
out
out
repnz
xchg
push
test
xor
pusha
cmpl
in
in
jne
pop
jbe
cmp
mov
popa
jo
xchg
sbb
lret
mov
inc
jno
icebp
mov
stc
popf
pop
inc
stos
cmp
dec
inc
fstpl
inc
xchg
test
mulb
xchg
add
xchg
xchg
imul
mov
ljmp
flds
out
insb
pusha
hlt
les
mov
pop
lods
add
movsl
nop
jmp
mov
and
jle
fnstcw
cltd
or
dec
test
mov
test
cmpsb
cmpsb
mov
adc
jge
xor
fwait
sub
xor
mov
movsl
sti
out
leave
sbb
out
cmpsl
and
cmpsl
bound
inc
fistpll
add
int
lods
popa
popa
pop
adc
ss
fsubrs
and
out
mov
insl
addr16
hlt
and
sbb
sub
cmp
pop
fbstp
testl
pushf
mov
rorl
dec
cli
sub
jmp
xchg
sub
les
and
imul
pop
sbb
fildll
push
iret
movsb
or
loope
lea
pop
out
test
adc
sbb
inc
dec
dec
lret
mov
rorl
pop
lea
cmpsb
enter
mov
xchg
jae
movsl
mov
inc
in
sbb
push
fldcw
mov
insl
add
in
movsb
pop
add
js
xor
push
xchg
nop
dec
or
loop
fisttpl
sbb
cmpsl
push
xor
orb
jnp
sub
jno
into
scas
xor
or
xor
inc
dec
and
cmp
push
in
jne
or
imul
xchg
mov
cltd
push
pop
lock
into
jno
or
movsl
dec
lods
or
test
rclb
stos
push
frstor
mov
imul
cld
sub
pop
mov
sub
inc
loop
xchg
jb
xchg
mov
addb
mov
mov
xorb
cs
lods
out
lcall
in
xchg
xlat
in
sub
stc
sbb
cltd
rcr
imul
daa
jmp
mov
je
and
pop
sbb
push
cmp
mull
das
mov
sub
pushf
fcoml
pop
shrl
pop
out
and
sar
push
or
inc
push
mov
xlat
mov
and
add
mov
je
mov
sub
and
mov
shrb
popf
stos
stos
or
aam
stos
or
popa
mov
inc
pop
aas
or
jle
xor
xor
or
and
pop
xchg
push
mov
scas
shl
aaa
xor
inc
test
and
fstl
jo
push
mov
jge
jns
pop
stos
cwtl
test
fnstcw
jo
aaa
int
adc
jp
sub
aaa
inc
jecxz
shrb
cld
dec
out
popa
cmp
enter
xchg
in
int
popa
js
sbb
jno
mov
sub
sub
ror
push
add
xchg
sub
aam
adc
jmp
pop
in
loopne
and
mov
sar
lcall
lea
test
outsb
cs
mov
xchg
scas
sbb
push
mov
dec
mov
adc
or
mov
jae
cmp
scas
insb
pop
xchg
mov
cmp
in
js
jns
adc
inc
xor
fucomi
call
in
xor
sbb
jns
shlb
test
aam
lds
and
fs
lret
xchg
pushf
jmp
daa
int
inc
cmp
jge
in
cli
mov
movsl
test
dec
inc
mov
jecxz
dec
cltd
jae
mov
cmpb
or
in
inc
sbb
mov
mov
shll
filds
das
cltd
sbb
sub
adc
xchg
lods
mov
cmpsb
dec
dec
mov
lret
dec
add
mov
mov
mov
out
pop
outsl
adc
or
mov
repz
int3
clc
repnz
push
xchg
jo
ret
das
fldt
or
inc
mov
call
xchg
orl
loopne
pop
or
stos
fnstsw
pop
mov
mov
cwtl
pop
nop
rcll
or
outsl
cmp
testl
mov
ss
rcrb
xlat
lods
rcrb
fildll
mov
out
loop
imul
mov
daa
push
dec
cmp
dec
jmp
push
sti
xchg
test
xchg
movsl
and
adc
test
sbb
ret
jae
dec
xor
rcrl
mov
push
jle
cmp
push
loope
mov
call
les
lcall
inc
stc
jge
jp
addr16
push
or
in
pushl
int
jl
xchg
adc
inc
fsub
sub
lcall
scas
in
andb
or
ds
dec
mov
shrl
lds
movsl
and
sbbb
inc
inc
sub
push
jb
mov
xchg
sub
ret
dec
pop
out
xchg
or
outsb
pop
hlt
out
leave
mov
xchg
jns
sahf
or
repnz
mov
in
imul
adc
xchg
fwait
xor
test
push
adc
or
jle
mov
sbb
jecxz
test
lret
adcb
int
mov
pushf
scas
push
insl
mov
pop
jge
fnstsw
adc
pusha
cmpsb
adc
scas
and
repnz
pop
push
popa
pop
adc
lret
in
std
daa
rcl
sbb
push
scas
aaa
or
xor
sbb
mov
adc
inc
in
fcomip
es
jnp
iret
imul
stos
mov
stos
enter
scas
shl
or
sbbb
aas
das
pushl
aad
bound
xchg
and
sahf
push
popa
mov
movb
mov
hlt
mov
test
in
out
ja
outsb
test
ds
fs
mov
adc
mov
xor
mov
ficomps
mov
mov
repnz
loope
pushf
gs
cwtl
jp
xlat
xchg
frstor
ret
cli
aam
jl
dec
int
sti
test
push
fstps
out
stc
lea
push
sub
jmp
mov
mov
dec
xchg
pop
fdivrs
add
bound
dec
jl
sbb
sahf
pop
addr16
ficomps
orl
xchg
scas
or
dec
movsl
push
dec
jb
scas
aad
fildl
addr16
shlb
jnp
stos
jns
nop
dec
aad
jb
fdivr
ljmp
cmpsb
jns
pop
loope
shll
fsubp
int
call
lods
out
or
xor
lods
rolb
movsl
icebp
fcmovu
cltd
je
xchg
addr16
inc
adc
out
xchg
jmp
lock
das
lahf
jb
aas
pop
into
out
fdivp
inc
sbb
or
push
je
cmp
popf
pop
into
cmpsl
ret
mov
xchg
dec
push
les
decb
fwait
and
sub
or
test
loope
pushf
iret
fcmovnbe
sub
jbe
adc
inc
pop
mov
in
test
adc
leave
addr16
dec
and
adc
add
in
jp
pop
push
inc
out
mov
cmp
lea
mov
movsb
cmp
insl
rolb
imul
data16
pop
mov
aam
aaa
loop
clc
mov
mov
xor
mov
es
pushf
lods
jae
or
mov
xlat
insb
adcl
fistl
in
pop
gs
mov
outsl
cmpsb
mov
ds
cld
jne
sbb
dec
pop
jmp
mov
sbb
data16
xlat
cwtl
into
adc
out
lahf
dec
and
mov
aaa
inc
std
mov
cmp
sti
sub
xchg
or
testb
subb
cmp
xlat
add
and
push
jo
pop
jae
xchg
add
ret
mov
sub
or
push
scas
inc
mov
arpl
jg
sub
inc
cmp
cmc
inc
push
cmp
mov
and
jno
jle
sbb
aam
addr16
cmp
and
dec
fistps
dec
push
push
lahf
mov
mov
and
push
xchg
push
iret
mov
cltd
cmp
push
jp
fisttpll
lea
sbb
cld
mov
test
push
or
xor
cmp
imul
test
insl
fidivl
mov
mov
das
nop
addr16
pop
in
add
add
mov
or
adc
push
lds
pop
movsl
ret
inc
push
add
mov
or
push
pop
xacquire
mov
lcall
dec
mov
and
mov
sub
insl
add
sbb
pop
dec
cmp
stos
mov
std
xor
jo
mov
mov
sahf
js
pop
outsl
jp
jbe
and
ljmp
or
push
jns
jp
fidivrs
sub
repz
push
push
mov
push
sub
imul
push
cltd
xchg
pop
test
xchg
les
arpl
pop
stc
push
add
inc
testl
ret
sbb
testl
push
jb
ja
cli
popf
stc
ss
out
in
lea
jge
dec
sub
fwait
cmpsl
mov
je
push
das
dec
dec
xchg
jbe
mov
cltd
push
or
mov
cwtl
xor
mov
xchg
pop
and
cmp
jle
or
cmpsb
mov
pushf
cltd
inc
out
div
dec
sbb
jns
and
or
cli
or
dec
aas
lahf
pop
aad
nop
sti
clc
jg
out
repz
clc
add
icebp
add
fwait
movsb
and
adc
xchg
pop
jb
fists
ja
jecxz
out
hlt
mov
popf
stos
cmp
push
mov
mov
push
outsb
push
in
dec
icebp
adc
ror
ret
sbb
sub
push
pop
ss
lret
in
sbb
pop
add
add
sub
sbb
jmp
dec
sub
mov
into
inc
pusha
add
stos
js
frstor
dec
and
xor
nop
test
sub
adc
lahf
outsl
test
mov
movsl
mov
push
dec
sbb
pop
sub
jno
insb
out
mov
js
push
lods
fcmovnb
inc
mov
popf
add
mov
jg
add
adc
sub
inc
bound
xchg
popa
or
mov
cmp
xchg
mov
cmpsl
pop
loopne
mov
xchg
cld
xchg
stc
xchg
ljmp
cli
push
adcl
loop
and
int
es
imul
out
xchg
out
or
mov
imul
test
js
in
xor
adc
cs
cmp
push
shrb
jbe
incl
pop
jno
xlat
movsb
mov
dec
cmpb
pop
sbb
popa
clc
jo
add
dec
aam
test
lret
mov
int3
inc
inc
movq
mov
or
iret
and
inc
bound
scas
lods
sarl
mov
add
outsb
insb
loope
and
mov
sbb
ficompl
add
and
cmp
ss
and
inc
in
inc
cmc
mov
das
adc
xlat
lret
and
push
nop
adc
inc
pop
sbb
pop
and
xor
pop
neg
inc
xor
jge
scas
sbb
sbbb
cmp
bound
into
mov
mov
arpl
insl
sbb
or
imul
mov
cmp
insb
test
xor
in
ret
pop
push
rorb
pop
popf
and
movsl
pop
aas
into
mov
fistl
int
stos
inc
dec
push
in
test
cld
xchg
dec
ljmp
jl
push
sub
lahf
cmp
xor
clc
sub
dec
test
dec
fidivs
fsubs
rcrb
movsl
cmp
xor
push
cmp
cs
cmp
leave
cmp
sub
dec
repz
out
icebp
outsb
dec
add
cltd
sarb
xchg
cs
stos
mov
clc
xchg
jmp
cs
mov
push
adc
add
inc
jmp
cld
fmull
push
adc
enter
sbb
in
pop
int
lret
incb
mov
add
in
cmp
adc
ret
fisubrs
mov
xor
lods
dec
xor
ja
loop
movsb
push
mov
jo
fdivr
push
xchg
jle
mov
cmp
cld
mov
and
aaa
pop
mov
div
jmp
jge
sbb
push
or
mov
jbe
cmpsl
cmpsb
sti
int
flds
test
cmp
mov
shr
add
stos
inc
das
daa
and
cmc
sub
decl
sbb
outsl
xchg
jns
imul
in
les
repnz
and
mov
mov
repz
dec
adc
xchg
xlat
and
cld
sub
fmul
cmpsb
xor
and
decb
imul
and
rsm
mov
pusha
mov
enter
ss
repnz
xor
push
test
jmp
mov
xor
mulb
in
xchg
in
inc
filds
add
lret
xorb
jmp
sub
movsb
mov
adcb
in
pop
xchg
gs
sbb
scas
xchg
ljmp
mov
arpl
enter
xchg
lret
jecxz
jg
and
sahf
cmp
xlat
push
inc
pop
cmpsl
aas
dec
add
cld
inc
fidivs
push
je
dec
cmc
orb
shlb
and
and
and
mov
shl
fs
jb,pt
jge,pn
add
and
pop
push
loope
insb
jl
inc
inc
dec
pop
clc
rorb
pop
outsb
into
lret
xor
mov
sbb
pushf
sarl
out
pop
dec
or
add
mov
icebp
mov
dec
out
mov
xor
pop
pop
dec
pop
in
in
mull
dec
cli
xor
sub
fldcw
ja
stos
cmp
pop
ja
jecxz
test
dec
bswap
xchg
sub
aas
push
sbb
pop
lret
out
stc
ret
call
mov
and
jae
xor
adc
mov
and
ds
das
les
mov
lret
mov
fldt
xor
jle
jns
push
icebp
arpl
in
leave
xchg
or
rcr
sbb
mov
sbb
push
jno
out
sbb
add
fdiv
jbe
push
mov
popa
repnz
sarb
cld
out
jno
ljmp
lret
pusha
pushf
push
push
out
mov
cmp
aam
loopne
mov
cli
es
ja
xchg
mov
cs
xchg
int
jnp
nop
push
js
lock
sub
iret
mov
jl
sub
pop
dec
adcb
xchg
jno
pop
pop
adcl
mov
push
jge
jo
out
push
lea
shlb
inc
mov
mov
popa
fcomip
lret
lret
cmp
sarl
dec
out
outsl
sbb
sub
add
ret
lods
push
rol
adc
mov
pushf
push
rcl
inc
add
jp
sbb
pop
pop
mov
cli
fnstenv
jmp
data16
loope
lahf
cmp
sub
sbb
sbb
or
das
shlb
test
mov
dec
mov
sub
jbe
in
pop
jg
mov
lods
inc
cmp
aam
xlat
dec
inc
sarb
mov
pushf
adc
cmpsb
lret
addr16
cmp
dec
mov
rol
jne
pop
movsl
jl
or
mov
push
clc
outsl
or
sbb
inc
test
les
in
add
sbb
ljmp
insb
add
outsb
lahf
dec
bound
lret
inc
test
inc
stc
arpl
enter
jl
and
push
movsb
sbb
aas
sub
mov
cmpsb
gs
pop
js
mov
or
lods
cmp
stos
fidivrl
and
in
test
push
insb
sbb
lret
fisttpl
das
repnz
icebp
ds
mov
cmp
xlat
pop
push
aad
ljmp
xor
sbb
inc
pop
jns
call
mov
ja
cmp
add
inc
test
lret
xchg
push
cmp
bound
movsl
in
test
jae
inc
pop
push
xchg
cs
std
cwtl
andl
push
push
and
addr16
or
loop
xor
fldt
xlat
sub
fstl
pop
sahf
test
repnz
push
inc
gs
add
movsb
test
sub
add
mov
testb
xchg
xchg
dec
ret
lods
jns
out
dec
sub
shrb
es
cmpsb
call
or
and
rcll
push
inc
gs
push
jns
push
mov
mov
fistpll
test
outsb
arpl
pop
stc
xchg
sub
or
xor
jo
movsl
loopne
fisttps
lcall
dec
jno
in
mov
inc
loope
jno
xorb
ds
aaa
lcall
fcom
stc
cmp
or
mov
pushf
out
xchg
lahf
or
test
and
rolb
cmp
push
test
cmp
mov
imul
gs
push
enter
outsb
jmp
flds
popf
idivl
sbb
jecxz
aas
mov
add
mov
dec
fnstsw
cmp
repnz
nop
into
sbb
adc
mov
mov
rol
pop
add
jns
dec
movsb
push
in
ljmp
test
stc
adc
fdivs
pop
sub
dec
xchg
movsl
cmc
mov
mov
ret
ret
pop
stos
pop
das
adc
ret
mov
mov
les
xchg
fidivs
leave
movzbl
and
fucom
stos
sbbl
jp
inc
xchg
and
mov
sub
adc
ss
pop
addl
outsb
or
push
int
sbb
sbb
ret
call
xor
rclb
mov
push
add
inc
push
jbe
sbb
popa
lods
xor
test
mov
jle
pop
sub
fidivs
in
xchg
adc
sar
mov
sbb
loopne
ret
cmp
xor
xchg
jp
jmp
out
push
scas
cwtl
das
testb
adc
ja
and
push
cmp
pop
in
mov
mov
fsubrs
ret
cmp
nop
sbb
sub
jg
and
iret
mov
inc
popa
jg
xchg
pop
lods
jl
pop
cli
jae
sub
xchg
sub
les
test
jo
stos
test
xor
sub
test
jo
dec
in
dec
push
pop
in
mov
inc
fs
insl
push
mov
ret
jno
xorl
das
and
mov
jne
stos
daa
lods
xchg
int3
in
loope
xchg
adc
cmpsb
jge
mov
je
adc
push
sub
mov
cwtl
es
sbb
sub
test
gs
ja
aas
jbe
pop
push
pop
fidivrs
jb
sbb
xchg
sbbb
and
mov
gs
pop
pop
enter
sbbl
xor
inc
aad
sub
mov
xchg
repz
lds
add
xor
into
adc
jo
mov
mov
cltd
loopne
cmp
adcb
rcrb
jnp
adc
fidivrs
movsl
ror
dec
dec
mov
cltd
mov
mov
lret
adc
lahf
stos
mov
shrb
arpl
incb
inc
cld
mov
mov
jnp
jae
scas
sub
sbb
int
cltd
in
mov
push
and
or
inc
xbegin
sbb
outsl
lea
adc
popf
xor
add
or
mov
xorl
add
stos
jp
jne
mov
adcl
dec
pop
mov
cmp
jno
inc
push
push
inc
scas
xor
ret
add
push
mov
out
sub
inc
icebp
sub
mov
aad
rcl
insl
enter
stos
int
test
jae
or
push
out
je
shrl
adc
cmpsb
test
ja
addr16
lock
inc
js
stos
es
lret
inc
sbb
lret
popa
cwtl
sbbl
shl
or
cmpsb
testb
jae
lods
pusha
ret
jnp
xor
xlat
mov
fldl
mov
and
xchg
jl
cmp
push
out
mov
fs
mov
adc
jecxz
and
push
jmp
jle
testl
pop
push
xor
xor
mov
movsl
cmp
bound
push
xchg
mov
push
mov
cltd
das
fldcw
mov
or
insb
sti
mov
sbb
mov
pusha
sbb
outsb
ss
mov
jo
mov
xor
movsb
int
stc
out
sub
jo
sbb
push
test
fs
ror
adc
xchg
mov
loope
fisttps
sub
pop
lock
leave
push
imul
inc
dec
sbb
and
js
mov
scas
daa
mov
sarb
mov
pop
stos
in
mov
cmp
ret
lret
filds
data16
lock
pop
lods
adc
xchg
jne
scas
jns
loopne
jno
sub
jmp
and
iret
sub
mov
ret
fmull
int3
or
sbbb
scas
cmp
jno
dec
xor
jle
add
jmp
mov
jo
and
ret
add
xor
test
pusha
or
stos
cmp
loopne
shlb
add
xchg
cmpsb
lock
dec
mov
add
ucomiss
inc
lcall
mov
xor
pop
enter
iret
movsl
sti
rcr
jnp
dec
lods
push
adcb
dec
pop
ret
mov
mov
push
repnz
push
rcll
mov
movsl
mov
add
cmp
add
mov
mov
mov
sbb
sub
xchg
pop
test
dec
jae
mov
jae
cli
orb
out
cli
jne
icebp
and
lods
mov
stos
push
push
and
test
mov
push
xor
mov
mov
into
out
push
jle
add
push
and
sub
test
pop
insb
xor
mov
inc
pop
adc
stc
outsb
mov
outsb
imul
scas
inc
daa
aad
sbb
mov
negb
pop
mov
push
insl
inc
sar
sbb
mov
adcb
dec
popa
jmp
out
xor
ja
cmp
mov
dec
in
arpl
mov
xor
push
out
loope
xor
lods
js
pop
sub
add
fisubl
xor
icebp
stc
nop
and
lcall
push
cmp
sbb
iret
adc
gs
xchg
mov
adc
fldl
xor
mov
push
in
mov
loopne
mov
push
and
out
stos
inc
add
jno
push
mov
dec
xrelease
cmp
daa
loop
pop
pushf
add
mov
daa
or
mov
jno,pt
inc
mul
cmpsl
ds
mov
aaa
repz
sbb
mov
addl
sbbb
add
das
cmp
adc
fwait
add
and
ljmp
fnstcw
xchg
pop
ret
repz
sub
fstps
gs
movsl
cmp
add
jno
inc
repnz
cmpl
icebp
pushf
pop
fcomps
inc
rcrl
pop
push
jns
cs
movsb
jle
jns
sarb
popa
nop
sar
call
dec
cli
pop
repnz
sbb
cmp
lock
jnp
sbb
movsb
pop
jnp
aas
and
jbe
cmp
bt
mov
and
push
xor
icebp
sbb
mov
daa
es
fiaddl
loope
in
adc
loope
mov
inc
push
fcomps
insl
sbb
adc
xor
andl
push
in
fwait
xchg
hlt
addr16
notb
test
mov
fcmovne
int
or
push
sub
xchg
push
out
pop
icebp
dec
roll
jno
xor
incl
insl
cld
lock
sub
xor
jnp
xchg
lods
pusha
mov
gs
lods
push
out
xchg
call
xchg
push
jbe
into
enter
push
cli
repnz
ds
jne,pt
sub
sub
sub
pushf
inc
outsl
lret
fisubrs
mov
gs
xor
ja
adc
pop
gs
pop
adc
mov
aad
test
xorl
cld
inc
cltd
ret
leave
push
shrl
sub
inc
push
push
in
fdiv
pop
fs
xlat
fdivrl
es
int3
lret
leave
and
cmpsl
lds
pushf
inc
hlt
push
test
pop
lods
lret
popl
data16
imul
xor
add
jae
imul
mov
cli
sbb
xorl
cld
lcall
mov
pop
jmp
cmp
pusha
xchg
dec
push
popa
ret
sub
ja
mov
std
jnp
xchg
rorl
cmc
mov
jp
xchg
aad
xor
stc
or
cld
ljmp
jb
mov
fistl
add
in
stos
subl
shll
les
shl
sarl
iret
jg
cmpsl
out
and
push
jmp
or
jo
adc
push
xor
cmp
sub
jle
movsb
mov
xchg
leave
cmp
add
push
mov
in
test
lret
mov
xor
pop
bound
jae
inc
mov
aam
addr16
addr16
fistl
push
mov
or
aas
pusha
repz
daa
sub
ret
pusha
scas
idivl
ss
aaa
lods
cmpsb
xchg
mov
fcoml
lret
and
sub
mov
cmpb
dec
xchg
xchg
add
aaa
imull
in
movsb
cli
popl
sub
aad
int3
sub
dec
stos
in
repnz
sbb
rcrb
add
scas
dec
shlb
pop
inc
leave
push
jnp
push
cltd
jo
lret
in
jns
adc
pusha
sbb
int3
adc
or
jmp
jbe
sbb
js
dec
xor
push
sahf
dec
adc
pop
sub
adc
movsb
test
mov
mov
pop
ds
push
jmp
mul
dec
jmp
jg
int3
mov
dec
dec
push
push
add
enter
sub
fists
sub
push
inc
ficomps
popf
xor
pusha
push
xchg
mov
xchg
adc
push
mov
cld
fldcw
sbb
lahf
ss
jle
jns
cmc
mov
mov
imul
pushf
adc
fcmovnu
mov
jge
mov
push
jge
cmp
stc
scas
mov
jecxz
pmaxub
in
aad
push
adc
push
repnz
inc
adc
in
cs
push
sub
icebp
pushf
fistpll
stos
jmp
ljmp
nop
dec
pop
jb
mov
and
pushf
int3
fs
cmc
mov
nop
cwtl
and
adc
sbb
cmp
xchg
jle
fs
enter
inc
and
xor
and
xor
out
das
add
stc
lods
shll
fsubr
repnz
lods
mov
mov
adcl
cmp
cmp
sub
lret
cmp
jecxz
adc
mov
movsl
jecxz
lock
dec
inc
xchg
es
mov
lds
cli
inc
pop
lea
mov
mov
mov
sbb
xchg
f2xm1
iret
or
jp
iret
nop
pop
jle
xchg
in
mov
push
out
inc
xchg
fdiv
mov
push
jp
adc
shlb
sbb
mov
jmp
lcall
mov
mov
scas
fcoml
mov
fstpl
jecxz
mov
xchg
push
mov
inc
les
imul
cmpsl
out
leave
outsl
sub
test
push
lock
mov
add
arpl
jge
outsb
aad
pop
clc
aas
mov
fwait
sti
and
pop
lods
and
jmp
or
pop
push
out
adcb
mov
in
sbb
aas
dec
in
mov
cmpsb
lock
inc
fs
cmp
sbb
loopne
adc
cmp
adc
xor
jge
mov
pop
jo
mov
sbb
add
mov
inc
xlat
mov
rcrb
pop
or
lds
dec
jb
out
lahf
jb
dec
mov
icebp
sbb
lds
cmp
ret
dec
movsb
iret
mov
push
dec
sahf
ret
lret
call
lods
mov
mov
out
out
pop
dec
dec
cmp
mov
nop
mov
mov
dec
cmpsl
jl
leave
call
fadds
sahf
enter
pop
mov
cmp
cmp
xchg
mov
loope
xchg
xchg
insb
mov
jl
dec
lcall
and
aad
add
xor
popa
add
pop
fcoml
call
mov
dec
pop
aas
adc
int
addb
fwait
jo
orb
iret
adc
imul
jmp
pop
mov
sti
push
mov
adcb
js
faddl
fbstp
sub
addr16
nop
xchg
sahf
cmp
mov
pop
in
test
jno
lds
or
stc
push
dec
stc
dec
movsb
or
mov
add
mov
pop
loope
sbb
xchg
cmp
std
mov
mov
jnp
lock
and
pusha
rcrl
test
jo
push
mov
fnstenv
cmpsl
stos
nop
imul
aaa
lock
aaa
mov
shrb
adc
mov
push
rcrl
sbb
cmp
mov
jb
fcoml
sbb
xchg
xchg
cmp
int3
imul
sub
jb
mov
andl
int3
adc
aas
jmp
cmpb
add
and
mov
xchg
push
addr16
inc
iret
push
fists
xchg
cmp
cmp
xchg
cmp
dec
gs
dec
mov
decb
mov
push
mov
sbb
xchg
mov
ja
lods
pop
mov
ljmp
push
jae
adc
setns
pop
es
scas
push
xor
adcb
fnstenv
mov
push
mov
aas
rcrb
adc
push
jmp
adc
jb
jae
push
stos
xor
dec
mov
push
xor
decl
fs
mov
loop
sbb
mov
js
es
xor
call
jbe
ret
icebp
or
push
cmpsl
pop
jb
mov
nop
adc
lock
outsl
les
out
es
dec
mov
mov
ficompl
pop
xchg
sti
push
das
fbstp
je
sub
fnstsw
mov
cmp
sbb
dec
loop
imul
adc
hlt
addr16
mov
mov
push
nop
mov
shr
push
add
loope
xchg
loop
shll
pop
cmp
lret
or
jae
ds
test
pcmpgtw
mov
push
mov
test
xor
pop
adc
test
loope
lret
mov
jo
test
pop
mov
push
fbstp
mov
adc
cmp
cmp
cltd
sub
ss
sub
adc
push
mov
stos
ja
pop
iret
cmp
js
inc
mov
fcoml
add
inc
pop
jb
in
and
ljmp
iret
pop
out
push
dec
mov
arpl
lcall
inc
mov
dec
pushf
test
jbe
mov
stos
mov
sub
aaa
stos
pop
ret
hlt
jnp
cli
les
in
dec
mov
pop
fmul
aam
lahf
ss
dec
cmpsl
or
sub
icebp
push
xor
movsl
add
jl
add
mov
pop
aam
xchg
fstps
xor
pushf
jo
jne
mov
int3
icebp
ud0
dec
cmpsl
cld
lret
or
enter
dec
sub
daa
stc
or
outsb
jbe,pt
inc
and
cmc
mov
inc
movsb
mov
mov
test
adc
mov
ljmp
in
rorl
mov
insl
js
mov
jecxz
or
mov
arpl
mov
test
jbe
sbb
mov
mov
xorl
jne,pn
adc
lea
mov
mov
sub
das
das
out
test
je
ret
les
push
mov
mov
nop
add
pop
adc
lods
fidivs
cmc
and
cmp
out
xchg
dec
or
add
sub
pop
addr16
fnsave
sbb
mov
jne
push
push
pushf
in
daa
repz
inc
arpl
mov
fimuls
aas
push
lea
stc
pop
sub
repnz
xor
jns
add
push
call
dec
or
cmp
add
cmp
lcall
push
test
mov
in
fisubl
std
or
scas
inc
shlb
mov
icebp
int3
fsub
xor
sahf
lret
call
and
and
mov
cltd
imul
jns
adc
jb
cmp
mov
xor
mov
sub
pop
sub
mov
xchg
pop
cmc
add
xor
adc
jmp
pop
aas
popa
lcall
xchg
jl
add
es
xchg
lea
lock
xchg
xor
adc
ret
data16
jne
inc
mov
lret
in
jnp
push
mov
pushf
shrb
adc
xchg
testb
push
scas
repz
inc
mov
mov
ja
jl,pt
cmpsl
push
mull
in
push
loop
cmp
xchg
or
jns
pop
sub
andb
push
mov
lret
ficomps
cmp
cmp
cltd
lds
ds
jno
in
aam
sub
xor
insb
push
call
or
and
cli
shll
dec
insb
and
scas
push
cwtl
adc
xor
daa
rcrl
push
cwtl
or
pop
pop
lcall
xor
inc
sbbb
jno
mov
sbb
mov
iret
fisubrs
cmpsb
lret
loopnew
add
sbbl
xor
add
mov
mov
and
sub
out
rcrl
xor
pop
repnz
sub
adc
dec
xor
push
dec
dec
fwait
fwait
in
dec
stos
rcrb
add
lret
mov
push
mov
sbb
and
add
lods
enter
fwait
loop
arpl
xchg
daa
mov
cmp
push
dec
xor
lcall
lcall
iret
and
cld
loope
push
adc
rcrb
mov
sub
mov
test
jle
or
insl
jnp
sbb
or
lret
and
sub
repnz
jmp
sbb
fwait
push
insb
inc
xor
jb
inc
fdivrl
lahf
int3
rcrw
cmpsl
in
xor
clc
lock
ss
out
sti
test
push
jb
ret
enter
cmpsl
or
ret
push
jge
dec
sar
data16
pop
lret
and
fidivl
xor
pop
mov
jl
and
cmp
pop
mov
lods
bound
mov
je
mull
jo
mov
lahf
cmp
aad
lret
add
push
cmp
lea
out
insb
mov
cmpsl
scas
in
int
sbb
jecxz
and
dec
or
repz
push
mov
data16
sahf
push
orb
jg
insl
cmc
gs
icebp
ret
rcrb
repnz
mov
or
mov
pop
xor
pop
cmp
push
inc
test
jg
in
repnz
mov
jnp
mov
push
lcall
dec
push
in
mov
stc
call
cltd
add
dec
ret
xchg
sub
outsl
mov
xchg
mov
les
push
add
insb
cwtl
mov
mov
shrl
lea
sbb
cmp
xor
inc
testb
and
mov
sbb
mov
mov
imul
push
cld
and
or
sbb
or
xor
xchg
pop
ljmp
push
out
out
mov
inc
or
adc
mov
dec
ja
repz
iret
xchg
shl
fisubrs
lds
aad
leave
xchg
xor
cmp
mov
jne
stos
es
dec
movsl
ret
je
iret
add
int
mov
dec
std
pop
jnp
cmpsl
sbb
sti
sbb
sbb
pusha
or
push
sub
call
mov
lock
or
or
dec
or
push
imul
pushf
fsubrs
mov
imul
popf
test
sbb
xorl
and
add
jmp
lret
adc
jbe
xor
sbb
cwtl
push
jg
test
data16
cs
push
in
jb
or
mov
pop
leave
xor
inc
scas
pop
lahf
fisttpll
mov
mov
pop
insl
add
xor
fbld
sti
cmpsl
lcall
and
inc
inc
sbb
mov
mov
repz
mov
iret
in
dec
dec
pop
pop
out
xor
mov
call
inc
push
std
push
nop
xor
in
movl
out
out
xchg
ret
hlt
pushw
pop
push
ds
jno
mov
fld
and
xchg
fs
mov
and
sbb
jmp
dec
fisttpll
ja
in
mov
push
scas
lds
adc
xchg
fstpl
sub
adcl
ret
xor
xor
pop
ja
push
mov
test
xor
sub
sbb
xlat
es
les
mov
push
fisttps
pop
sti
clc
or
sub
add
lea
nop
aas
popa
enter
aas
mov
je
sub
jno
cmp
pop
lock
and
xchg
and
jo
fbld
jb
add
dec
xchg
loope
jmp
mov
cmpsl
lods
ss
xchg
inc
dec
inc
rorb
mov
fstp
mov
test
or
mov
sbb
les
in
aaa
les
inc
dec
cmc
cmp
cmpsb
aaa
divb
aam
sbb
iret
xchg
das
cmp
fisubrl
test
scas
push
mov
adc
jnp
movsl
xor
lods
push
cmp
xchg
rclb
cltd
xor
sbb
fnstcw
sbb
roll
scas
cs
loop
mov
call
hlt
jns
gs
lods
pop
pmulhuw
lldt
pop
fisttps
movsl
cmp
fsubrl
pop
push
or
fwait
pop
loopne
nop
out
mov
push
xchg
sub
lods
pop
dec
adc
jle
xor
fstl
sbb
cmp
out
add
and
ljmp
shll
aaa
aam
repnz
pop
xchg
fs
mov
jb
sbb
fdivs
ret
cmp
fisubrl
mov
fsubs
dec
out
push
jnp
in
sbbl
sbb
xchg
mov
jp
jne
lock
sbb
pusha
mull
and
mov
stc
push
stc
jmp
or
test
sub
lcall
aaa
or
cmp
mov
sbb
lock
add
je
sbb
jnp
insl
rcpps
mov
fdivp
scas
mov
mov
jbe
outsb
xor
push
inc
mov
mov
adc
cmc
push
arpl
or
mov
inc
outsl
sub
cld
outsl
sub
dec
in
js
subb
add
xor
xchg
ss
xchg
stos
cmp
push
scas
mov
inc
es
xorb
dec
lds
and
adc
outsb
mov
push
ljmp
jno
ss
pop
add
jmp
lods
xor
scas
pop
add
lret
int
xchg
fidivrl
fmuls
push
loopne
stc
add
inc
adc
push
gs
out
test
sbb
lods
les
test
inc
push
cli
rclb
and
add
push
adc
shlb
fcomip
push
test
xchg
stos
adc
pop
je
xor
dec
add
fisttps
nop
or
sbbb
cmp
pushf
roll
mov
movsl
movsb
lock
add
stc
sahf
clc
pop
in
arpl
out
or
sub
and
sti
fwait
dec
dec
out
inc
ficoml
adc
sub
push
add
mov
rorb
gs
adc
imul
mov
mov
dec
fdivrl
imul
xchg
mov
hlt
cltd
mov
out
popa
jp
xchg
adc
jo
push
repz
and
or
mov
pop
sub
push
shl
push
lea
test
cld
mov
shll
push
jmp
mov
jge
mov
inc
adc
or
ret
jo
call
or
outsb
cmp
rcl
in
cmp
insb
pop
xor
pusha
daa
mov
fcoml
cmpsl
add
stos
mov
push
cli
lret
jbe
pop
scas
pop
xchg
push
mov
sub
dec
pop
insl
push
ljmp
mov
int
das
sarl
int3
js
repnz
xor
sub
mov
outsl
ficoml
ret
ficomps
clc
call
sub
iret
pop
push
dec
pop
xchg
dec
out
mov
call
hlt
xorb
push
je
sti
push
bound
xchg
mov
push
and
adc
out
clc
call
adcb
mov
lret
insl
mov
sub
add
jnp
sub
leave
movsl
pop
ret
stos
gs
push
rorl
cwtl
or
or
inc
sub
lcall
or
out
mov
test
jns
xor
fs
jns
mov
dec
sub
ret
mov
lods
fdivr
sbb
lea
or
pop
adc
push
xor
out
dec
dec
mov
mov
ficoms
gs
jbe
psubb
or
inc
in
dec
xor
mov
aas
mov
sbb
nop
jmp
lahf
and
aam
adc
jns
mov
mov
push
lcall
idivl
or
aaa
outsl
cmp
daa
shrl
mov
test
xor
enter
fstpl
jecxz
sbb
cmp
jne
add
lcall
into
pop
fists
or
sbb
mov
rcll
dec
pusha
int
je
hlt
rcrl
xlat
aaa
aad
into
dec
push
out
inc
adc
in
mov
leave
push
sub
pop
jae
cmp
movsl
sub
push
fadds
adc
fwait
repnz
lcall
xchg
mov
out
xchg
pushf
subb
mov
adc
pop
inc
stc
xor
ja
out
and
push
or
movsb
inc
adc
enter
test
mov
lock
xor
push
dec
stc
cmpsl
dec
mov
mov
insl
sub
outsb
or
out
xchg
pop
add
adc
xor
pop
sbb
dec
clc
pop
adc
jecxz
nop
flds
lock
or
ss
mov
fdivrl
hlt
add
pop
popa
mov
pop
push
cmp
cmp
or
jns
scas
mov
ficoml
xor
mov
mov
pop
popf
xchg
test
lds
cli
xchg
mov
dec
mov
dec
in
jl
adc
push
shl
pop
mov
dec
in
enter
jg
mov
mov
je
clc
andl
xor
jg
push
inc
popa
mov
sbbb
dec
mov
mov
push
inc
sub
xchg
xor
push
add
mov
push
aas
push
xchg
and
jecxz
and
jp
lds
inc
adc
or
lcall
cmp
mov
pop
pop
push
sti
dec
push
fldcw
imul
push
or
je
leave
and
lds
jg
xor
aad
hlt
cli
sahf
xor
div
in
stos
and
repnz
fisubs
out
iret
sbb
xor
add
cmc
cmp
adc
cmp
sbb
jne
add
or
mov
push
out
mov
testl
xor
push
sbb
aaa
cmp
pusha
cmpsl
fistpll
xchg
mov
fs
cmp
or
sub
push
dec
jge
xchg
cwtl
in
inc
mov
ljmp
and
in
cmpl
sub
popf
push
cmpsb
add
pop
cli
and
in
imul
adc
xor
lret
lahf
imul
adc
cmpsb
gs
es
mov
mov
nop
arpl
cmp
pusha
add
cmp
xor
push
cmpsb
test
add
adc
out
inc
subb
and
incl
inc
repnz
test
rolb
mov
jne
jb
xchg
dec
aaa
mov
je
and
adc
pop
repz
adc
das
cmpsb
inc
fwait
rcrb
add
pusha
inc
frstor
pop
push
sub
std
lret
pop
incb
cmp
stc
cltd
xor
in
mov
sub
stos
jb
xchg
pop
leave
add
sub
shrb
and
or
sbb
in
enter
pop
fdivrs
xchg
mov
fldl
or
out
mov
repz
xor
cmp
stc
xchg
mov
sbb
xchg
mov
xchg
stos
inc
test
je
xchg
mov
lret
jns
mov
test
dec
mov
sbb
dec
shlb
xchg
jo
lods
pop
jno
push
pop
jge
std
daa
xor
lea
or
adc
sub
mov
or
flds
popf
xor
cli
andl
pop
jb
inc
gs
cmp
cmp
lret
xchg
loope
leave
sub
cmp
dec
sti
leave
push
mov
lods
cmpsl
pop
dec
fists
sbbl
stc
fdivs
int
fs
cld
xchg
lret
push
mov
xor
bound
jno
leave
xor
sbb
inc
andl
insb
xor
jle
jae
ds
out
test
and
mov
inc
jle
xchg
stc
cmp
add
sub
call
es
jle
and
jmp
push
mov
iret
ds
xlat
sub
iret
orl
insl
movsl
cmp
mov
gs
scas
pop
movsb
orb
mov
testb
mov
data16
push
cld
jmp
pushf
mov
adc
or
inc
push
mov
fnsave
pop
lret
jne
jge
push
outsl
in
sbb
mov
cmpsl
test
ljmp
or
cmp
or
aam
xor
push
enter
daa
add
mov
sahf
repz
andb
mov
sbbb
cmp
mov
ffree
mov
insb
inc
inc
mov
stos
fnstenv
sti
mov
or
jl
sub
xchg
leave
and
fistps
add
xor
sbb
push
jecxz
pop
sub
sub
adc
rorb
xor
inc
sbb
pop
xor
cmc
push
aaa
push
push
or
aam
jbe
xchg
fcomip
push
pop
mov
int
fbld
test
addr16
das
mov
leave
pop
mov
cli
mov
aam
jp
inc
int3
pop
addr16
in
cld
sub
cwtl
adc
ss
mov
repz
call
test
push
push
mov
mov
movsl
in
movsb
arpl
shr
cld
mov
and
popa
mov
in
out
lds
fucomp
insb
cmpsb
jno
adc
mov
pop
pop
insb
add
cltd
in
mov
jle
mov
out
push
insl
dec
outsl
or
lods
std
jo
adc
push
inc
jl
inc
scas
dec
xchg
lcall
fbld
pop
movsb
clc
ret
fisttpl
jecxz
xchg
cld
xor
mov
mov
dec
sub
jl
iret
dec
sbb
jbe
mov
sbb
fwait
int
shll
aaa
cmpsb
xor
notl
pushf
dec
mov
jl
sti
inc
push
lcall
iret
and
mov
mov
call
js
ljmp
out
xchg
std
jns
outsb
insb
mov
or
or
jne
pushf
mov
or
pop
outsb
mov
rol
lcall
lods
xor
fdivrl
loope
cli
adc
jg
fnstcw
test
sbb
in
mov
stos
repnz
ss
daa
dec
cmp
aad
mov
jmp
jge
xchg
test
mov
es
push
ret
pop
adc
and
int
add
mov
jmp
mov
mov
pop
inc
or
arpl
xchg
or
mov
pop
dec
sub
sub
out
repnz
notl
jbe
push
hlt
ja
add
adc
jns
popf
pop
jns
in
jl
push
mov
out
popa
out
xchg
je
pop
test
je
sub
adc
xchg
loop
into
mov
adc
movsl
test
sbb
mov
mov
xchg
push
sub
mov
pop
test
xchg
xchg
add
cli
or
pop
mov
mov
inc
orl
mov
jl
imul
pop
and
and
mov
scas
popf
jg
cmp
sti
out
mov
sub
mov
jl
enter
sbb
ja
sbb
adc
jbe
rcrl
xchg
stos
in
fists
imul
push
inc
outsb
in
jae
dec
xchg
and
sbb
lahf
pop
fmuls
mov
out
adcb
sahf
repnz
inc
sahf
xor
jg
mov
sbb
mull
roll
and
push
scas
ret
popa
js
bound
and
popf
jbe
sub
xlat
lock
sub
stos
pop
xchg
sahf
scas
mov
data16
ficoms
cmp
sbb
push
es
inc
sbb
push
cli
iret
mov
hlt
imul
movsl
push
ror
jbe
xor
or
mov
xor
stc
je
cs
movsb
fistl
out
cld
sub
xchg
mov
or
in
xor
jmp
jnp
xor
test
sahf
dec
dec
mov
aaa
outsl
jo
das
sub
pop
xchg
hlt
push
sbb
mov
outsb
add
fisttps
adc
sbb
xor
xor
cmc
pusha
mov
mov
addb
mov
stc
fldl2t
sbb
xchg
movsb
pop
xor
movsl
rcrl
mov
sub
sub
pusha
cmpsl
nop
xchg
dec
push
dec
testl
cmpsb
lock
inc
dec
stos
enter
push
sub
mov
sub
dec
lods
sbb
cmp
bound
push
cmp
enter
xchg
lods
movsb
pop
cld
inc
pushf
aaa
jp
arpl
clc
daa
lds
cmpsl
sbb
mov
hlt
and
xor
inc
jb
xchg
cmpsb
in
out
adc
cmp
mov
lahf
mov
popf
sbb
pop
dec
jecxz
shrb
mov
push
mov
imul
mov
test
das
frstor
mov
xor
cmp
add
in
shlb
aam
xchg
popa
and
shlb
pop
dec
and
iret
fnstenv
js
pop
sub
filds
addl
or
insb
inc
cmp
pop
popf
nop
push
mov
pop
xchg
stc
pop
mov
ljmp
cld
and
xlat
jmp
xchg
fidivrl
jl
mov
sbb
test
inc
dec
gs
sbbb
sub
addl
icebp
cmp
mov
dec
mov
clc
adc
loopne
mov
in
mov
sub
sub
and
cltd
mov
int
das
in
adc
dec
push
jle
jp
fldl
fwait
leave
movsb
dec
push
in
insl
inc
mov
aam
call
dec
in
lcall
nop
pop
or
test
mov
dec
js
add
dec
and
mov
stos
push
mov
sub
iret
push
icebp
jmp
add
gs
cmpsl
adc
imull
jl
addr16
push
push
sahf
sti
pop
inc
push
enter
outsl
sub
fwait
sbb
push
movsb
sahf
jno
in
mov
mov
mov
xchg
sub
lret
dec
cmc
nop
aas
popa
mov
popa
mov
xor
loope
into
lahf
pop
mov
lcall
push
addl
mov
mov
sbb
push
push
fcoms
scas
xchg
xchg
aad
mov
lret
pop
in
sbb
add
xchg
jl
and
and
fbld
nop
push
outsl
clc
adc
ds
mov
jbe
loopne
lods
push
mov
xor
jecxz
imul
shrl
sti
pusha
pop
adc
daa
outsl
push
push
pop
mov
shlb
adc
xchg
sub
pop
cld
sbb
dec
jle
mov
shll
popaw
in
sub
sbb
ret
sahf
data16
ret
outsl
dec
out
movsl
testl
pop
adc
sbb
fwait
jb
imul
lea
or
jl
adc
loopne
popf
inc
xchg
mov
iret
push
jb
and
cmp
mov
sub
mov
and
lock
nop
fbld
push
outsb
scas
cmpsl
data16
xlat
fmull
leave
jnp
imul
lds
jne
mov
cmp
pop
gs
adc
int
push
bswap
fnstenv
jb
cmp
fnstenv
ljmp
push
fcoms
cwtl
and
inc
pop
sub
cmp
or
sub
cmp
mov
lods
shrl
push
sbb
push
mov
dec
or
mov
and
pop
in
int3
sbb
sub
cmp
clc
xor
jmp
sahf
es
sarb
int
jg
mov
jg
int
test
das
push
fs
add
mov
movsb
shrb
mov
cmp
push
add
mov
inc
jge
shrb
dec
into
lret
mov
data16
push
jno
mov
aad
test
testb
xchg
xchg
adc
cmp
pop
lahf
lcall
add
xchg
cmp
inc
stos
xchg
icebp
popf
push
iret
cmp
in
xchg
dec
cmp
add
sub
or
mov
js
push
in
cmp
xchg
mov
outsb
mov
dec
xchg
rcrb
enter
xchg
mov
pushf
pcmpeqd
mov
lea
mov
push
fwait
sti
int
sub
test
inc
dec
push
push
into
sti
mov
sti
ret
mov
ret
add
insl
hlt
pop
xchg
cmp
hlt
mov
rorb
daa
lds
sbb
mov
xchg
cmp
inc
fsubl
iret
arpl
clc
inc
out
jl
fidivrl
sbb
mov
or
jns
mov
inc
adc
pop
push
inc
scas
fdivp
pop
push
mov
push
fnstcw
stos
icebp
iret
repnz
test
mov
dec
loope
lahf
sub
ret
cld
sbb
outsb
add
adc
mov
pushf
arpl
xor
stos
mov
lock
sbb
es
scas
push
lds
and
mov
mov
xlat
sbb
add
push
jae
ds
dec
jmp
jmp
cmpsl
or
in
inc
shrb
cwtl
sbbl
xor
je
jge
in
cmpl
xchg
test
add
lock
pop
std
xchg
dec
xchg
adc
pop
mov
insl
sbb
sbb
jmp
sbb
sbb
add
adc
push
xor
mov
inc
pop
lahf
dec
xchg
rcrb
fwait
mov
push
fbstp
aam
addr16
push
add
pxor
mov
fidivrl
mov
fs
int3
int3
jne
add
shlb
loopne
inc
cmp
je
inc
pop
xorl
fcomps
mov
or
or
jle
outsl
and
xchg
repnz
cmpb
ljmp
cmp
mov
lret
mov
lea
cmp
jle
stos
cmp
lock
jp
mov
lods
jecxz
movsb
xor
aad
imull
jg
mov
or
in
pop
sbb
lcall
inc
xchg
enter
pop
cld
sub
xchg
pop
shrl
test
out
loopne
and
in
or
push
xchg
dec
and
jl
xor
incl
aad
call
jns
mov
xor
sbb
dec
xor
xchg
pop
outsb
adc
mov
sbb
mov
ss
shrl
movsb
sub
int
sub
mov
test
mov
pushw
insl
adc
mov
mov
aad
xor
lahf
add
add
mov
stc
adc
aaa
sub
add
xchg
filds
insl
add
pop
vpcmpeqb
enter
sbb
sub
mov
xor
jbe
je
mov
cwtl
dec
lahf
dec
inc
sbb
jg
inc
sahf
ret
and
adc
outsl
fistps
and
fs
andl
ret
push
les
cmc
mov
bound
mov
or
inc
mov
mov
std
cmp
or
or
aam
sub
mov
ljmp
sbb
add
insl
pop
mov
inc
out
dec
hlt
or
inc
flds
and
inc
adc
test
xor
mov
orl
jno
lds
aad
cs
out
vmptrld
dec
out
cmp
shr
ss
sbb
cmp
or
inc
pusha
filds
in
mov
xor
shlb
xorb
ljmp
push
mov
cmp
fldl
testb
ret
fnstenv
mov
ret
sar
enter
sbb
cltd
clc
ds
xchg
sub
cli
cmp
cmpsb
sub
bound
sarl
daa
inc
inc
push
jmp
sbb
stc
ss
call
daa
outsl
push
push
add
pop
mov
push
inc
les
div
push
outsb
mov
xchg
es
rcr
in
xor
test
xchg
mov
jae
pushf
imul
loop
stos
xchg
push
sub
aad
rorl
ret
inc
push
jecxz
and
xlat
jb,pn
fmull
pop
not
les
mov
ret
cmpsb
xor
js
cmp
inc
jmp
popa
xor
push
xchg
mov
or
sbb
xor
mulb
push
cmpsb
mov
mov
xchg
ss
sahf
in
mov
dec
push
incb
mov
xor
aad
jg
cmc
out
mov
cmp
pop
cmp
fbstp
jmp
mov
jae
mov
aaa
xor
movsl
mov
loope
mov
adc
adc
orb
lret
xchg
stos
in
xor
imul
in
pop
mov
ret
mov
dec
loopne
out
out
cltd
jg
sub
jmp
sbb
out
jno
in
and
rclb
xchg
xchg
cmp
shrl
inc
dec
loope
orb
leave
sar
mov
pop
scas
add
or
inc
inc
add
push
shlb
data16
rcrl
loope
gs
fists
jg
push
in
jo
pop
jo
jae
xor
aad
cmc
aad
out
push
jo
mov
dec
mov
popl
add
jmp
inc
bound
push
jne
jmp
decb
inc
or
or
adcb
scas
push
inc
bound
mov
dec
in
mov
pop
mov
je
lahf
dec
pop
fwait
inc
scas
sub
or
cltd
std
jmp
testl
cld
push
stos
fld
xchg
arpl
lcall
add
lods
lods
fcoml
fsubl
arpl
inc
out
and
pop
cmp
scas
xlat
fsubs
pushf
sarl
sub
shrl
repz
out
mov
xor
adc
xchg
mov
popa
inc
fcompl
xor
ja
push
inc
pop
ja
test
push
pusha
andb
mov
mov
daa
inc
mov
xchg
cmp
lahf
clc
sti
lret
out
popa
jmp
movsl
add
cmpsl
popa
push
loope
cltd
xor
in
mov
jmp
movsb
xchg
ret
jbe
mov
out
test
and
out
sahf
adc
mov
sbb
inc
int
sub
ret
jne
or
lcall
mov
xchg
add
stc
je
ficoms
mov
sahf
xchg
mov
fcmovne
xchg
push
push
dec
ds
pop
cmp
mov
js
dec
fsubrp
jns
push
js
mov
sti
push
call
mov
call
or
lret
ds
scas
test
push
popa
arpl
sub
mov
aad
push
add
sub
mov
ret
cltd
stos
cmp
push
out
xor
std
xlat
bound
dec
jmp
jle
aad
xchg
ret
dec
sub
mov
or
mov
mov
adc
dec
jmp
test
cmp
imul
dec
imul
adc
lret
add
in
jg
aad
pop
adc
mov
pop
gs
push
negb
scas
add
in
and
repnz
xlat
jge
cmp
lock
stos
mov
inc
xchg
dec
call
addl
sub
or
lea
dec
cmp
push
imul
popf
sti
xchg
cs
sub
clc
mov
mov
pop
icebp
mov
jmp
mov
and
fs
in
gs
inc
sub
leave
addr16
or
decb
or
or
cmp
mov
mov
xor
sbb
leave
mov
dec
and
popf
xchg
inc
call
pop
add
iret
ss
test
mov
mov
jnp
mov
pusha
shlb
adc
out
test
push
popf
or
sbb
pop
scas
pop
pusha
xor
jmp
push
hlt
lret
xor
mov
ds
outsb
shr
push
inc
test
sub
xchg
sbb
mov
imul
fs
sti
adc
xor
mov
aaa
jbe
xchg
stos
adc
push
nop
mov
or
lds
mov
dec
xchg
jle
ficompl
pop
ror
xor
arpl
mov
mov
aaa
cmp
lcall
xor
push
decl
xchg
notl
cmc
inc
xchg
cmp
mov
cmp
rolb
stc
loop
xchg
add
js
repnz
sbb
jo
sub
xchg
xor
mov
xchg
andl
push
xchg
add
bound
lds
fiadds
and
add
shrl
mov
ret
dec
popa
popa
or
aaa
mov
push
je
add
test
scas
pop
in
jo
ret
dec
cli
adc
loopne
or
cmp
rol
aad
gs
pop
and
sbb
gs
jae
mov
sbb
lock
inc
call
dec
cld
scas
stos
add
lds
sub
mov
mov
xor
stos
sub
adc
add
rcll
jne
divl
imul
pop
ds
out
xchg
or
fnstsw
mov
aas
roll
es
sbb
jl
mov
bound
adc
adc
sbb
rcrb
in
cmp
jle
xchg
sub
cmpsl
jl
add
scas
jno
mov
xchg
js
mulb
sub
inc
dec
cmpsb
push
jns
test
xchg
pop
jmp
pop
dec
mov
mov
in
or
lret
into
xor
dec
loopne
jne
decb
ljmp
pop
sbb
outsl
xchg
adc
and
stc
test
mov
lods
xor
fnstenv
in
les
fsubr
aad
popa
adc
movsl
int3
pop
push
popf
nop
das
jg
mov
push
push
popa
pop
cmpsl
out
aam
mov
mul
add
dec
cmp
loopne
repnz
adc
cmp
mov
or
mov
loope
sub
push
dec
mov
inc
mov
push
inc
bound
lret
add
dec
xlat
lcall
cmpsb
jo
cmp
and
pop
inc
loope
dec
loope
out
cmpsl
sbb
push
and
das
xchg
cltd
popa
clc
jae
pop
and
adc
arpl
addr16
aas
xchg
sub
and
rorl
test
shll
add
xchg
xchg
outsb
xchg
out
jb
and
lcall
push
xchg
pop
call
cltd
xor
cmp
inc
popa
mov
jl
push
pop
and
lock
lods
push
mov
mov
test
scas
push
repz
shl
addr16
jmp
or
clc
cmp
and
ljmp
nop
int3
lcall
cmpsl
imul
mov
push
data16
iret
lods
xchg
int3
outsl
in
lret
repz
sarl
pop
repz
sub
es
push
jb
add
js
in
ret
mov
call
mov
xchg
addr16
leave
test
push
and
in
int
sub
leave
cmp
sti
imul
pushf
sbb
in
rcr
sbb
notl
and
jb
mov
ret
cli
inc
roll
xlat
push
andl
inc
stos
xchg
mov
pop
dec
sub
scas
sti
sbb
js
fsubrs
lcall
es
loope
jl
hlt
mov
sti
and
aaa
fcoms
xchg
cmpl
jae
fsubl
fstps
sbb
mov
out
orb
or
sahf
dec
xlat
mov
lods
mov
mov
int
cmp
clc
popf
xor
hlt
pop
push
or
loop
add
inc
pusha
push
std
pusha
and
adc
sbb
cmp
rclb
mov
test
push
out
sahf
aas
sub
pop
mov
jmp
or
in
xchg
adc
and
ret
dec
int3
shlb
add
lahf
mov
cs
mov
out
call
xor
jl
in
fsubs
or
jle
mov
jp
scas
movsl
decl
xlat
shl
lcall
and
gs
dec
cmpsb
add
cs
or
push
mov
jle,pt
or
xchg
arpl
mov
ja
and
mov
adc
into
enter
addl
mov
aas
fwait
cld
cltd
imul
cmp
dec
mov
ljmp
cmp
mov
addr16
xchg
imul
and
outsb
cli
into
mov
adcl
jp
pop
jae
int
add
mov
andl
aaa
daa
in
adc
in
mov
test
jecxz
scas
mov
adcl
xchg
inc
fcompl
or
mov
repnz
aam
cld
push
fcmovne
add
mov
jae
mov
xchg
andl
xchg
or
dec
xchg
inc
test
sub
lds
cwtl
sbb
push
pusha
or
jnp
sbb
xchg
shlb
shl
push
fnstenv
les
ljmp
shll
dec
mov
add
xchg
daa
leave
div
pop
icebp
loop
add
ds
jo
icebp
mov
addr16
ljmp
inc
repz
ficompl
pop
inc
fsubrp
jg
cld
lock
movsb
pop
test
xchg
jle
cmpsb
loop
dec
inc
iret
xor
and
xchg
pop
adcb
aas
inc
pop
pop
call
push
sahf
fwait
sbb
sub
dec
fbld
cmpb
cmp
bswap
test
ds
inc
inc
imul
aad
enter
insb
jmp
mov
cmp
ficompl
pop
outsl
test
imul
add
stos
cmc
negb
outsb
adc
pop
mov
imul
mov
int3
faddp
adc
les
dec
repnz
fdivs
push
data16
shrb
xor
sub
add
inc
into
das
mulb
dec
in
adc
pop
testb
rcr
out
and
dec
mov
inc
sub
sbb
ds
sub
mov
icebp
mov
xor
test
aas
push
sbb
loope
dec
popf
stc
jnp
jge
mov
mov
push
movsb
adc
pop
aad
fadds
sahf
cmc
cmpsb
inc
and
pop
lods
inc
push
fistpll
inc
lcall
and
je
sarb
xchg
dec
loope
jmp
movsl
or
fistpl
push
aas
push
lods
jo
or
mov
dec
ret
adc
pop
jmp
arpl
and
pop
mov
jle
shrb
stos
jb
pop
dec
int3
es
sub
int3
loopne
mov
push
arpl
fnstenv
mov
xchg
or
push
push
dec
sub
lods
pop
lock
scas
xor
in
ss
push
jbe
push
call
test
imul
cmpsb
pop
add
cmpb
adcb
pop
xor
and
fimuls
js
jmp
shrb
in
add
aas
sbb
jo
add
out
xor
aad
je
mov
int3
cmpsl
enter
shll
mov
roll
dec
xchg
xchg
fcoml
and
dec
pop
hlt
adc
mov
push
stos
repz
scas
jg
xor
inc
int3
int
cmp
insb
and
push
std
les
xor
jno
cmp
inc
mov
push
jmp
movsb
into
pop
or
enter
push
xor
nop
inc
mov
lret
test
dec
add
xchg
jmp
xchg
pop
cmp
testb
xchg
ja
mov
stc
aas
in
shll
fdiv
mov
jl
call
orl
aam
aad
push
pushl
mov
nop
xchg
lret
and
mov
and
testl
or
dec
add
jg
hlt
ret
or
pop
pushf
jecxz
dec
scas
cmp
and
xchg
adc
add
sbbb
dec
cmp
pop
aam
ror
sbbb
loope
nop
cmp
mulb
cmc
pusha
out
movsl
adc
dec
pop
sbb
enter
xor
sub
fisubrl
fcomps
out
adc
sti
or
aam
xor
mov
dec
ds
cmc
outsl
outsl
rcrl
sub
push
add
scas
icebp
fsubrs
imul
mov
sub
out
jns
xchg
add
cmpsl
cmp
fsubs
add
pop
jp
pop
mov
mov
push
out
dec
pusha
adc
js
xor
xchg
jecxz
pop
sti
out
fisubrs
or
jbe
sbb
xchg
pop
xor
adc
fnstenv
mov
mov
sub
daa
rcl
xor
jg
shrb
xchg
mov
lods
add
cltd
mov
xchg
in
cwtl
pusha
arpl
mov
nop
test
into
mov
pop
insl
adc
mov
in
arpl
xor
xor
ja
add
cltd
xor
xchg
cmp
jae
nop
test
ja
mov
daa
std
mov
push
aas
sub
or
cwtl
pusha
or
and
sub
adc
es
mov
jno
jle
je
pop
sahf
and
fists
cmp
mov
add
xor
idivb
jnp
fdiv
das
adc
icebp
outsb
jl
imul
push
dec
dec
fsts
mov
cmp
adc
sbb
aaa
adc
and
aam
popf
je
icebp
mov
xchg
stos
faddl
xchg
mov
mov
push
stos
mov
andl
arpl
or
xor
rorl
mov
fldenv
adcl
mov
and
add
lock
dec
mov
xor
pop
inc
mov
bound
jg
stc
inc
addb
lock
dec
jge
in
scas
push
dec
jo
or
fisttpll
repz
icebp
adc
jge
mov
xor
jle
dec
sti
inc
call
stos
dec
lret
negl
sub
jg
mov
pusha
testl
and
gs
out
sbbl
inc
mov
inc
imul
std
adc
jb
hlt
cmp
sarl
xchg
cwtl
cmp
mov
fldcw
adc
cmc
jg
es
rcr
je
andb
push
cli
mov
test
cwtl
push
cmpsb
and
mov
aas
mov
xor
or
mov
jp
mov
add
pop
jns
ret
cmp
addr16
inc
roll
pop
lods
lcall
ljmp
mov
iret
inc
push
sbb
xchg
add
add
add
std
fcomps
daa
out
pop
arpl
dec
repz
add
fucomp
jecxz
popf
mov
or
cmp
stc
pusha
sarl
lahf
sub
arpl
ds
fwait
popf
and
pop
sbb
ljmp
jge
xchg
cmp
popa
stos
negb
test
sti
push
cmp
jmp
adc
cli
ds
jmp
jno
pop
mov
jae
pop
call
leave
int3
xor
andb
movsb
notb
mov
pusha
sub
int3
sbb
xor
jl
xchg
or
popf
mov
cmp
xlat
lock
cmpsb
and
mov
xor
lds
cmp
mov
mov
mov
sbb
and
inc
gs
and
fs
flds
inc
push
xor
xor
push
jl
lret
je
daa
test
add
mov
into
je
js
or
gs
scas
ja
bound
xchg
and
cmp
cmp
jl
fwait
add
and
push
pop
inc
xor
push
jecxz
fcmovnb
cmp
je
into
enter
and
movswl
lahf
aaa
pop
inc
pop
xor
int
daa
inc
and
xor
test
lcall
stc
and
out
aam
jo
xchg
call
or
and
jbe
pop
xchg
push
adcl
sub
jg
xor
sub
jns
and
jmp
out
inc
bound
in
mov
inc
bound
dec
push
leave
int3
pop
inc
cmp
adc
mov
mov
lahf
or
pop
adc
js
insb
ds
es
push
jmp
xor
mov
xchg
xor
lcall
dec
pop
inc
mov
and
es
pop
xlat
popf
mov
xchg
adc
in
mov
push
lcall
mov
or
outsl
lods
push
cmp
jl
push
mov
dec
mov
mov
xor
mov
jmp
sub
pop
aaa
notl
sub
clc
pop
and
das
cli
xchg
dec
mov
dec
daa
pop
push
test
movsl
scas
insl
sbb
mov
fwait
sti
out
jle
add
xor
cmpsb
sub
xchg
ss
cmp
sahf
xchg
in
inc
or
imul
testl
fiaddl
adc
jle
in
fwait
adc
or
mov
or
inc
int
cmp
out
pusha
sbb
stos
dec
inc
test
cmp
popf
cmp
imul
or
cmpsb
imul
pop
cmc
mov
loop
mov
les
leave
mov
mov
std
loop
in
jne
sub
add
es
dec
rorb
sub
sub
adc
mov
xlat
ljmp
mov
or
sub
push
and
arpl
xchg
cmc
jle
jp
pop
negb
xchg
dec
fnstenv
cmc
test
xchg
mov
js
fs
insl
in
xchg
in
mov
pushf
mov
mov
in
je
test
xchg
jp
popa
shll
jmp
mov
pushl
push
pusha
push
or
icebp
in
push
pop
fstpt
sub
xchg
sub
mov
in
pop
cmp
stos
pop
rol
cmp
or
sbb
dec
data16
imul
mov
scas
orb
sbb
xor
addl
or
imul
jns
in
cmpsb
push
push
es
pop
xor
pop
movsl
sbb
jns
lods
mov
sbb
add
icebp
pop
imul
arpl
ljmp
shl
test
cmpsl
adc
xchg
mov
cmp
push
outsl
sti
jle
push
add
in
fwait
insl
popf
or
mov
iret
or
leave
cmpsl
gs
arpl
mov
xlat
repnz
mov
add
push
out
mov
test
adc
into
or
lea
and
pop
outsb
xlat
lods
rclb
aaa
icebp
daa
mov
scas
in
pop
xor
xchg
inc
lods
mov
and
mov
lret
mov
cmpsl
ja
adc
jp
mov
scas
out
xor
sbb
mov
in
fs
in
xchg
lcall
loopne
inc
lods
adc
shl
jae
pop
in
pop
xchg
loopne
or
fdiv
push
push
int
test
dec
add
jnp
mov
dec
push
jge
sti
shlb
or
cltd
xor
adc
addb
pop
rcrl
xor
jns
insb
jecxz
test
push
mov
mov
push
enter
and
test
cmpsb
hlt
popa
or
dec
xchg
mov
stos
adc
das
out
sub
addr16
mov
pop
in
out
cld
stos
and
lods
repnz
fmulp
mov
push
test
int
in
inc
pop
gs
enter
mov
das
inc
stos
stos
cld
push
aad
add
sbb
js
inc
jne
aad
repz
push
push
adc
fwait
pop
and
data16
inc
int3
mov
sbb
faddl
pop
lret
jg
inc
out
mov
hlt
xchg
xor
hlt
pop
sub
cli
push
pop
jle
and
lock
mov
xor
xor
sbb
sbb
and
insb
iret
xor
lods
leave
pop
out
mov
pop
lds
arpl
imul
arpl
xchg
sbb
inc
lock
push
lcall
sbb
sbb
mov
jo
fs
stos
lret
mov
mov
mov
test
fs
mov
outsb
xchg
sub
scas
mov
sarb
add
pop
inc
popf
or
das
mov
notl
ds
jg
xor
fidivs
add
jecxz
push
mov
mov
and
das
xchg
mov
jns
add
es
xchg
inc
pop
lahf
stos
mov
cmp
icebp
adc
xchg
cmpsb
sub
out
sbb
hlt
adc
xchg
cmp
push
sub
mov
fs
int
and
sub
sub
out
add
lock
imul
xor
adc
mov
or
mov
ss
add
xor
shll
lahf
push
stos
inc
inc
mov
insl
xchg
stos
in
xor
ljmp
add
gs
mov
mov
cmp
adc
std
xchg
pop
test
aam
mov
je
jge
and
in
mov
mov
xchg
test
mov
sub
inc
ret
les
adc
scas
in
mov
mov
fcomps
pop
clc
sahf
rorb
imul
or
cmpps
popa
inc
mov
fildll
outsl
push
ds
int
pop
fwait
roll
ficoms
push
dec
add
mov
adc
in
nop
xlat
outsl
or
jno
lds
or
lea
xlat
and
stc
rol
aaa
scas
push
or
stos
ret
cmp
jo
and
ret
jmp
call
mov
mov
fcmovnbe
jmp
scas
fbstp
adc
and
xchg
cmc
out
sub
mov
int3
pop
popa
jmp
cmpsb
jp
rclb
loope
dec
call
rorb
stc
popa
push
lds
andl
out
push
hlt
loopne
sub
les
mov
pop
aam
push
aam
mov
gs
movsl
lcall
mov
gs
cmpsb
shlb
loopne
cwtl
push
or
cli
test
es
not
add
or
mov
xchg
mov
nop
inc
icebp
lea
push
arpl
fdivrs
testl
aad
inc
inc
push
out
in
jne
mov
mov
mov
fisubl
lods
test
dec
and
clc
pushf
add
arpl
stos
inc
inc
test
mov
xchg
dec
dec
icebp
pop
cmp
push
pusha
dec
add
sti
ficomps
jmp
stos
cmp
mov
xchg
psubusb
jl
cmpsl
adc
out
out
shlb
push
out
jl
cs
sarb
cmp
js
sub
mov
inc
test
lret
sahf
cwtl
cli
xchg
lret
add
lahf
xor
xor
xchg
sub
jp,pn
mov
lret
jb
test
and
das
adc
mov
out
xchg
adc
subb
enter
push
mov
dec
repnz
dec
sbb
lods
dec
push
mov
jmp
mov
jo
aas
lock
inc
mov
xor
jbe
mov
xlat
or
stos
xchg
mov
lds
sahf
pop
dec
dec
xor
inc
sbb
in
add
pop
js
sub
mov
fldcw
aad
dec
aad
jp
loop
mov
and
mov
jb
push
mov
lret
push
xchg
andl
insb
lahf
cmp
rcl
out
pop
inc
pushf
popf
in
loopne
mov
cmpsl
push
mov
dec
mov
pop
minps
sub
or
cmp
or
aad
push
out
pop
cmpsl
outsb
stc
or
outsb
adc
inc
lea
pop
pop
fisttpl
shrl
sub
dec
insl
out
push
cmpsb
push
cltd
ds
dec
js
cmp
mov
test
and
adcl
arpl
fdivrs
pushl
lods
scas
xor
pop
into
sub
jg
outsb
mov
cwtl
xchg
xor
or
push
cmc
dec
adc
insl
jge
mov
jp
inc
cltd
mov
dec
in
xor
jne
cmc
sub
adc
jb
out
jp
sbb
lret
xchg
inc
sbb
iret
adc
fnsave
push
xchg
pop
loope
jle
jnp
cmp
add
dec
out
pop
pop
add
jl
add
out
addps
shlb
push
into
ljmp
stos
nop
push
xchg
cli
inc
dec
jl
mov
jg
fldl
jnp
jmp
adc
dec
scas
mov
test
rorl
jno
sbb
cmpsb
push
in
test
or
pop
loop
pop
enter
inc
fs
mov
or
jmp
or
pop
out
sbb
inc
stos
dec
sub
mov
fists
std
jg
xchg
ret
icebp
out
arpl
loop
in
iret
add
adc
in
xchg
dec
ret
cmp
add
jb
inc
movsb
das
rcrl
mov
push
add
or
rcr
mov
dec
lret
mov
adc
and
cs
mov
push
xchg
adc
fcmovbe
lods
mov
add
insb
aad
adc
sbb
lret
insl
nop
inc
jnp
xor
gs
repz
adc
add
inc
scas
and
into
xor
xor
loopne
lea
in
das
xchg
add
fisttps
sub
dec
sub
loopne
cld
movsb
addr16
cmp
fdiv
mov
sahf
xor
dec
aaa
inc
add
jns
fcmovnu
nop
loope
fmull
jl
sub
and
mov
jo
test
outsl
xor
fcomi
cltd
pop
and
push
lret
clc
lods
mov
fs
mov
pop
popa
aam
test
popa
leave
xchg
mov
xchg
in
scas
ret
lcall
inc
inc
adc
loop
cmp
dec
sub
mov
pop
push
popf
pop
pop
xchg
imul
push
fsubrl
je
pop
cmpsl
add
push
je
cmp
out
icebp
inc
sbb
test
add
sub
jo
mov
scas
clc
jg
std
scas
pandn
cmp
xor
ljmp
adc
es
es
mov
leave
pop
ss
test
scas
xchg
xor
fwait
cmpsl
or
sub
xor
mov
test
fstl
xchg
or
mov
mov
ret
outsb
daa
scas
jae
lret
mov
pop
dec
xchg
rclb
call
test
sub
hlt
xlat
addr16
outsl
out
sbbl
adc
inc
push
fidivs
sub
loop
int
sbb
iret
lea
sbb
scas
xchg
lds
mov
xchg
dec
inc
push
in
int3
jne
pop
popa
scas
inc
jae
cli
jno
jae
sub
xchg
loope
insb
aas
rcrb
scas
sbb
inc
sbb
addr16
aad
leave
mov
or
push
incl
in
gs
xchg
cmp
in
std
divl
cwtl
sub
jle
inc
int3
arpl
or
dec
ljmp
cmpsl
jbe
mov
mov
loop
cmp
cld
add
mov
push
push
xchg
faddp
and
adc
push
or
rolb
mov
sti
sbb
shll
sub
int3
arpl
outsb
mov
lahf
dec
in
dec
mov
pusha
out
in
push
or
jns
pop
pusha
sub
or
loopne
outsl
out
lods
push
push
sbb
repnz
adc
mov
mov
mulb
stos
cmp
jmp
ds
pop
mov
nop
xchg
ds
rcr
scas
mov
sahf
and
adc
jne
jno
arpl
adc
cmp
call
xchg
sbb
push
into
sbb
js
or
push
popa
mov
push
mov
ljmp
jle
mov
or
dec
dec
in
call
sbb
jle
pop
out
jg
das
jle
fwait
inc
test
popa
pop
pop
sbb
push
cltd
inc
ds
movsb
xor
mov
push
sub
pop
aas
sub
mov
addb
mov
ret
jne
push
dec
out
jae
std
gs
je
or
pop
adc
xchg
mov
test
das
cmc
jns
in
mov
mov
jne
mov
or
repz
mov
mov
cmp
mov
pop
fidivs
dec
call
insb
sub
pop
inc
push
add
sahf
clc
mov
popf
add
ljmp
cmp
or
push
mov
xor
aaa
push
add
pop
and
in
out
jbe
pop
int
jne
int
cli
xchg
cmpb
sub
mov
mov
push
jne
push
mov
in
in
mov
cltd
inc
xor
cld
pushl
aad
cwtl
adcl
inc
aas
hlt
xchg
jge
sbb
fldenv
js
mov
add
cli
xor
andb
dec
mov
mov
pushf
scas
inc
roll
cld
shl
rorb
xchg
xorb
or
jg
leave
and
ret
pushl
jp
dec
dec
pop
add
dec
and
dec
pop
ret
lock
dec
sbb
repnz
popf
lea
mov
dec
hlt
fwait
xor
notb
mov
inc
jae
out
ret
aas
test
jg
ret
jae
pop
cmpl
jle
rcrl
jns
lods
push
lret
pop
mov
mov
cld
sti
xchg
pop
or
orb
stos
or
adc
mov
push
idiv
lcall
in
xor
repz
dec
aam
cmc
lds
stc
popf
mov
add
data16
mov
ret
mov
pop
sbb
addr16
cli
mov
ret
enter
jno
iret
jb
es
pop
jbe
pop
lods
pop
mov
dec
xchg
sub
add
xchg
push
push
shrb
sub
shr
xchg
stos
and
pop
repz
pop
repz
mov
adc
in
lea
ss
inc
stos
test
call
arpl
into
cmp
andb
sbb
addr16
adc
test
sti
push
scas
insl
les
cwtl
pusha
sbb
insl
mov
fildll
add
push
cltd
cmp
xchg
cld
jnp
sbb
mov
push
hlt
fs
xchg
sbb
cmpl
rcrl
out
in
popf
inc
movb
xor
into
and
bound
repnz
faddp
in
test
pusha
imull
outsb
push
jb
in
mov
fisubrl
loopne
shll
mov
add
fists
mov
pop
addr16
inc
scas
mov
push
jo
lock
lret
ljmp
push
adc
add
xchg
dec
or
dec
ds
mov
pusha
scas
jne
test
adc
loope
test
push
arpl
jno
jl
ret
imul
ret
xchg
stos
or
lods
mov
loope
stos
xchg
jl
lock
pop
push
mov
std
cli
bound
add
lds
repz
mov
pop
xchg
stos
xor
adc
cmp
cmpsb
cmp
push
add
sbb
xor
xlat
dec
inc
frstor
imul
fisttpl
pop
repz
and
adc
cmpsl
bound
mov
adc
mov
orl
aam
in
jo
jne
sub
dec
cmc
dec
lea
shr
loopne
push
movsl
and
or
cwtl
inc
inc
pop
mov
gs
or
dec
out
stos
cs
imul
aas
mov
add
push
mov
xchg
or
add
out
test
js
fidivrs
data16
outsl
mov
je
pop
xchg
or
rorl
loopne
fmulp
xor
mov
jmp
cld
pop
mov
mov
cld
loopne
or
cmpsb
dec
jnp
add
push
pushf
aad
mov
fxtract
push
or
add
cwtl
pop
dec
in
loopne
adc
mov
jae
pop
cmp
xor
pop
dec
hlt
bound
add
dec
mov
inc
pop
or
int3
or
and
mov
xor
icebp
mov
lea
sub
clc
ja
sub
dec
out
pop
pop
icebp
cmpsb
cmp
jne
push
add
test
xchg
test
sbb
pusha
jmp
jo
imull
lahf
and
push
mov
xchg
sub
xchg
xor
lcall
fnstenv
shrb
jp
fldt
lret
push
cld
xchg
add
mov
push
call
pop
repz
js
in
mov
out
mov
enter
lods
movsl
jle
lahf
add
outsl
jge
mov
sarl
cmp
out
xchg
idivb
add
mov
inc
xchg
movntq
out
into
dec
ja
adc
xorb
xchg
into
test
sti
xchg
sbb
add
loopne
inc
cmpsb
ret
dec
dec
inc
sbb
cmp
jns
arpl
xchg
inc
neg
test
and
sbb
stos
inc
lock
test
jecxz
lea
fsubrl
mov
jg
jb
xor
mov
mull
jmp
sub
aaa
lret
mov
das
rclb
orl
dec
add
inc
jecxz
call
dec
or
es
pop
test
lods
and
cmp
or
push
arpl
dec
lods
scas
cmpb
or
dec
seto
cmp
push
dec
push
popf
dec
loopne
push
xchg
fstpt
adc
pushf
int3
lret
mov
shlb
sbb
mov
inc
cmp
mov
pop
pop
into
xchg
stos
adc
inc
int3
pop
xlat
cmc
daa
lods
shrl
sub
sub
add
jg
adc
add
add
jbe
xor
push
pop
mov
mov
call
mov
ret
jle
in
in
push
sub
pop
sahf
or
and
xlat
and
es
mov
fnstenv
or
jl
mov
xor
shrb
pop
lcall
jge
aad
out
popl
js
inc
das
je
int
sar
std
xchg
sti
mov
mov
int
jmp
dec
call
or
jb
mov
rcll
das
jns
call
dec
mov
test
xlat
cli
and
insl
movsl
cmp
lahf
and
idivl
aad
test
dec
push
pop
inc
out
sbb
inc
jno
sbb
dec
scas
inc
call
pushl
out
subb
jle
sub
lret
push
mov
push
into
enter
in
adc
fcmovb
rcrb
ss
mov
jle
mov
insl
frstor
adc
sbb
enter
inc
pop
fidivl
popa
and
mov
mov
sub
or
jg
sub
dec
fstl
adc
cmp
out
mov
cwtl
test
add
cmpb
mov
fdivl
out
ret
or
push
pop
and
push
jns
and
lret
mov
negb
jo
bound
call
mov
cld
sub
outsl
test
adc
pop
leave
shll
mov
imul
cld
mov
dec
mov
out
inc
loopne
test
pop
inc
pop
les
xchg
popa
mov
call
xchg
scas
scas
dec
dec
adcb
sbb
cmpb
lods
push
dec
xchg
and
iret
test
addr16
movsb
cmp
jno
arpl
mov
fs
adc
loopne
jae
push
in
je
call
mov
sbb
xor
sarb
push
jbe
adc
mov
sahf
add
out
and
rcrb
xchg
and
cmp
cld
xlat
repz
mov
inc
cs
mov
adc
dec
cmc
ja
loop
outsb
loope
mov
cli
js
pop
adc
popf
push
mov
mov
jb
shr
lods
mov
sub
fisubl
imul
test
sbb
push
leave
push
inc
stos
mov
cli
push
ret
iret
push
insl
jl
stc
ret
lahf
in
dec
jecxz
or
test
jle
shlb
addr16
mov
mov
ret
adc
cmp
fisubs
lret
stos
in
gs
inc
mov
out
or
outsb
test
pop
lods
mov
sbb
rcrl
lods
loop
cmp
add
push
lds
shl
cwtl
mov
sbb
sbb
mov
inc
mov
sbb
lods
subl
fcomps
pop
jp
lcall
add
inc
sbb
cmpsb
ja
cli
movsb
outsl
daa
mov
add
sub
sarb
shll
stos
inc
jb
les
jge
icebp
ffree
fistpll
or
dec
cmp
and
mov
idivl
mov
movsb
popa
test
sub
ss
pop
addr16
pop
inc
sbb
xchg
lds
clc
call
sbb
je
cmp
jnp
dec
add
inc
add
sub
loop
cld
cld
add
cwtl
dec
insb
jno
dec
out
pop
mov
cmp
mov
mov
cmp
push
pop
addl
addl
cmc
jecxz
inc
leave
push
jl
inc
inc
dec
loopne
lock
int
repz
test
cmp
scas
pushf
push
addr16
sahf
push
xor
in
js
adc
nop
popa
sub
test
mov
pop
mov
mov
mov
pop
jge
orb
fs
xor
jmp
insl
insb
outsb
xor
test
mov
pusha
leave
sbb
dec
mov
adc
xchg
shlb
cli
inc
mov
adc
fisubl
std
mov
jle
sarb
imulb
mov
roll
xchg
scas
and
rorl
push
mov
mov
sbb
mov
mov
in
xchg
psrad
xlat
repz
subl
pop
aas
data16
push
adc
mov
cmp
xor
repnz
xchg
cltd
divb
pop
insl
cmovle
inc
mov
aad
pusha
in
test
or
in
sub
push
aas
insl
mov
cmp
jmp
pop
adc
adc
and
std
ljmp
adc
mov
and
roll
test
sbb
stos
repz
arpl
pop
fsubp
cld
mov
push
jmp
in
adc
push
je
and
dec
and
push
add
sub
jecxz
xor
xor
cmc
jo
in
inc
or
and
cs
dec
leave
cmp
jmp
arpl
mov
popf
dec
ja
out
sbb
or
jne
loop
clc
cmpsl
outsb
rclb
popa
lahf
movsl
ljmp
insb
dec
cmc
sbb
xchg
sub
xchg
and
inc
xchg
arpl
jne
cmp
shl
cld
push
mov
lret
roll
pop
stos
mov
loope
bound
inc
test
arpl
lret
mov
test
jns
daa
cmpsl
notl
fcmovb
jp
jle
xchg
movsl
int3
and
adc
lcall
push
inc
push
inc
shl
cltd
jge
aas
in
xchg
pop
addr16
je
xor
or
cmp
lret
lea
lret
cli
mov
cmp
andb
jo
push
push
out
dec
push
jns
inc
dec
and
push
shll
ja
pusha
rol
mov
es
sbb
cs
xor
mov
imul
adc
cwtl
cwtl
test
xor
rorl
dec
loop
adc
xchg
lock
fsubr
fiadds
xchg
sbb
and
xchg
inc
js
addb
pushf
xor
jns
fstps
pop
push
sahf
faddl
or
frstor
dec
pop
lahf
jg
clc
or
push
out
pop
outsl
mov
adcb
aad
pop
scas
pop
call
test
push
mov
mov
add
dec
and
jl
scas
mov
ror
ret
inc
inc
mov
cmp
stos
inc
bound
mov
aad
dec
fistpll
mov
jae
jmp
aaa
xor
adc
and
pop
cmpsl
sbb
stos
es
stc
xchg
dec
xlat
out
lea
sub
mov
mov
jo
ficompl
sbb
dec
dec
movb
pop
pop
in
push
mov
xchg
data16
in
icebp
push
daa
pop
sub
stos
je
or
aam
pop
clc
dec
fbstp
sbb
xchg
out
sub
bound
mov
inc
clc
mov
mov
sti
pop
jle
rorb
imul
repz
and
push
mov
adc
add
leave
add
data16
mov
and
add
popf
js
shrb
or
lock
xor
imulb
stos
sub
inc
cmp
xchg
jne
and
and
std
or
mov
adc
ss
les
adc
jmp
insl
xor
test
pop
pop
xor
scas
mov
das
shrb
in
mov
or
cmp
jle
jl
sbb
stos
call
in
xor
jl
ret
ret
pusha
idivl
leavew
xor
sub
add
or
enter
or
popa
cmp
xor
mov
xlat
arpl
xor
cwtl
movsl
dec
frstor
add
cmp
mov
or
jno
add
in
pop
or
loop
dec
mov
stos
xchg
ss
cmp
xor
into
xchg
out
mov
jg
inc
inc
cli
adc
shrb
stos
or
fmul
push
or
jecxz
dec
mov
js
fnstsw
sbb
ja
sub
or
cli
aad
jno
push
ss
xor
adc
cwtl
jnp
pop
push
pushf
pop
insl
dec
stos
inc
xchg
lock
pop
test
push
sti
inc
sbb
mov
or
sbb
insb
outsl
push
flds
andb
mov
pusha
ss
xchg
or
mov
pop
fdivrl
jbe
ds
dec
cltd
mov
insb
jnp
xor
xor
fiadds
inc
adc
ss
pop
push
ja
int
push
cmp
jo
or
mov
add
inc
call
sbb
popf
lods
mov
push
cltd
inc
push
mov
mov
mov
aad
mov
mov
aas
jp
gs
mov
lcall
mov
into
mov
and
test
xlat
loop
jno
insb
jl
scas
into
loop
ljmp
outsb
mov
movntq
out
jno
fistpl
hlt
inc
and
mov
stos
push
orb
pushf
mov
lahf
xlat
aas
lahf
add
cli
jns
out
je
sub
cmp
addl
shrl
div
pop
cmc
xor
lods
xchg
adc
jae
cmc
mov
subb
add
repnz
insl
movsb
jecxz
fidivs
push
jnp
das
popa
out
fmull
jmp
jbe
dec
push
sub
jl
jecxz
in
jb
bound
jmp
jecxz
hlt
push
sbb
fwait
sbb
int
int3
jg
gs
pop
cmp
sub
pop
jae
add
xchg
inc
or
aam
and
jno
fsub
clc
cmc
xchg
mov
loop
push
nop
pusha
out
and
sub
idivb
pop
jmp
push
imul
cmp
scas
mov
ds
clc
fbld
jb
fldenv
sbb
ss
xor
repnz
dec
mov
jge
sbb
je
jecxz
addr16
in
shr
pop
mov
test
mov
sar
data16
es
test
imul
fcmove
pop
jg
mov
push
mov
mov
jle
push
sub
dec
adc
fcoms
mov
push
or
call
or
mov
xchg
adc
pop
fcmove
mov
fwait
xor
pop
addb
inc
scas
inc
and
fdivl
sub
mov
in
mov
outsl
mov
popf
mulb
stc
jle
jnp
cmpsb
push
adc
ja
rcrb
aam
clc
or
fistpll
iret
nop
pop
mov
mov
in
jecxz
push
push
shl
scas
add
loopne
push
xlat
sub
lcall
inc
mov
inc
sub
jp
sbbl
flds
stos
js
movsb
pop
inc
dec
and
call
sbb
test
out
adc
add
sbb
pop
pop
loopne
popf
repz
rol
pop
fs
jno
rolb
scas
daa
xchg
aaa
dec
jp
mov
xchg
enter
sbb
ja
pop
and
or
sbb
jecxz
mov
scas
add
mov
jno
sub
mov
jns
inc
adc
mov
mov
cwtl
lahf
pop
mov
and
das
test
pop
jmp
inc
jmp
rolb
aas
mov
mov
jae,pn
add
cli
sahf
xorl
cmp
loop
dec
clc
add
out
sub
adc
cs
fnstenv
fwait
repnz
xor
xchg
cli
xchg
push
mov
es
jo
push
ret
cltd
adcb
cltd
cmpsl
sub
jb
out
mov
push
xchg
stc
icebp
mov
lods
stc
nop
pop
or
mov
push
mov
scas
mov
outsl
inc
inc
pop
pop
repz
cwtl
mov
mov
movsl
pop
push
aad
adc
mov
je
push
and
sbb
jecxz
dec
adc
sbb
shlb
les
dec
repz
jecxz
dec
in
sbb
xor
imul
pop
or
lods
data16
ljmp
adc
bound
mov
lods
dec
pop
pop
jae
mov
dec
test
and
je
jae
fstpl
repz
cli
inc
inc
adc
xchg
out
sahf
and
mov
aam
rcl
xor
or
lds
sub
mov
jp
pop
nop
fld
jno
pop
add
dec
inc
xor
inc
loop
dec
mov
jp
cmc
push
adc
jecxz
xor
inc
jl
jmp
insb
dec
stos
fsts
andl
push
aad
xchg
sete
dec
inc
and
adc
inc
fisubrs
out
insb
cmp
je
mov
test
out
jae
mov
out
sbb
jns
fadd
js
push
ljmp
cmc
pop
mov
cwtl
jae
rcrl
add
fisubs
out
daa
xor
and
dec
or
idivl
insl
gs
mov
int3
jo
mov
mov
mov
or
sbb
into
outsl
jnp
outsl
jl
lods
inc
sbb
jle
sti
sub
pop
dec
xor
dec
or
sub
sbb
sti
fwait
adc
sbb
mov
or
adc
mov
jmp
cmp
cltd
push
cmc
insb
mov
repnz
pusha
add
test
insb
movsb
sbb
pop
fnstcw
mov
adc
orb
scas
sbb
fs
sub
sar
jl
daa
out
movsl
mov
mov
add
pop
fsts
scas
mov
mov
leave
adc
or
insb
stos
push
mov
xchg
in
xor
xchg
out
inc
jmp
lret
mov
call
loope
clc
inc
insl
les
add
lds
sarl
std
loopne
mov
jecxz
xchg
dec
add
dec
mov
xor
jmp
cli
inc
cmc
incl
inc
jg
sti
fldl2t
xor
xor
jmp
or
sbb
les
push
jne
cmp
outsb
mov
pop
cltd
sahf
mov
pop
pop
push
clc
jae
cmc
fists
jnp
inc
push
or
ljmp
les
int
push
pop
imul
adc
or
mov
lcall
mov
push
mov
sbb
cmp
ds
or
xchg
lods
dec
mov
movsb
insb
insb
xor
sbb
sahf
rorb
jo
and
out
fmull
and
adc
mov
lcall
xorl
mov
dec
js
cld
rcrb
add
lock
xor
and
push
sub
inc
lods
inc
arpl
mov
xchg
lret
mov
xor
pop
and
mov
xchg
and
adc
sti
mov
adc
xchg
mov
dec
and
shll
lock
int3
scas
jae
xchg
fcompl
jb
in
mov
dec
mov
dec
pop
jno
or
cmp
adc
hlt
inc
cltd
pop
imul
mov
js
cmc
pop
hlt
out
out
fsts
pop
fwait
dec
jnp,pt
insb
test
movsl
inc
cmp
jne
cs
push
push
mov
and
imull
rcrb
aam
ficomps
cmp
xor
or
and
xor
fisubrl
sti
xchg
pop
cmp
cmc
es
sbb
out
and
push
lret
in
mov
cld
adc
mov
test
add
fsubrs
xchg
mov
xor
clc
push
mov
shr
std
das
outsb
xchg
xlat
mov
fucomi
inc
inc
lcall
enter
add
aam
out
or
xor
sti
in
lock
les
pop
mov
mov
cmp
ss
cmpsl
jle
fisubrl
repz
daa
mov
cwtl
sub
lea
rorl
aaa
xchg
and
inc
cmpsb
mov
fmull
leave
adc
mov
sbb
and
ficompl
call
dec
cs
push
ret
push
sub
in
loopne
mov
rcl
repz
jnp
pop
mov
xorl
mov
scas
mov
sub
sbb
aas
sbb
repz
nop
adc
dec
maxps
mov
push
pop
scas
test
testl
fucomi
js
dec
inc
test
mov
cmp
or
pop
mov
mov
pop
scas
movsb
pop
movsb
push
lds
pop
mov
jl
jg
divb
push
movsl
icebp
int
push
out
cli
push
stc
popf
aaa
push
xor
movsb
xor
pusha
out
or
push
ja
iret
jmp
and
flds
lods
inc
pmulhuw
inc
dec
and
rol
cmp
inc
clc
xchg
fadd
jnp
cmp
in
cmpsl
ficoms
std
mov
mov
ror
pop
loop
dec
jnp
mov
dec
stos
jne
xchg
cli
and
cmp
std
inc
lahf
push
int3
iret
in
sbb
call
push
dec
jg
divl
and
test
imul
mov
in
in
push
sub
adcb
jb
inc
xchg
jp
stos
pop
sub
imul
addr16
sub
je
idivl
sbb
call
and
jle
cmpsb
daa
inc
les
insl
add
lock
push
into
mov
push
outsb
mov
std
inc
mov
int
lods
jge
loope
mov
ret
add
xor
mov
aas
rcrl
add
or
cmpsl
mov
stc
and
mov
popa
popa
or
or
mov
test
mov
jo
lea
xchg
cmpsl
ja
cmp
xor
stos
and
pop
mov
shll
xchg
xor
je
add
addr16
fs
adc
fisttpl
mov
stc
fistps
es
add
lods
push
mov
and
fidivl
and
ficompl
inc
xchg
jnp
mov
imul
jmp
ja
xlat
mov
gs
stos
mov
sub
inc
sub
stos
inc
lods
ja
jp
inc
xchg
push
push
in
idivl
pop
aad
pop
cmp
rolb
adc
fistpl
mov
dec
lock
data16
or
dec
lret
and
cs
mov
stc
test
mov
push
ja
pop
test
sahf
push
adc
or
js
lahf
sbbl
push
in
mov
pop
sub
add
jbe
and
int
or
cs
lods
inc
mov
sub
mov
and
mov
pop
jno
enter
in
dec
movsb
xchg
add
inc
inc
push
faddl
sub
cmova
shr
loopne
jle
or
jbe
xor
test
xor
imul
sub
xor
cmpsl
arpl
test
call
outsb
rcrb
mov
nop
daa
jecxz
call
dec
ret
inc
mov
sahf
cmp
xchg
outsb
sbb
mov
ret
cwtl
addr16
add
enter
and
add
jne
jne
xor
shl
imul
lods
mov
das
jl
scas
cs
sub
inc
lods
call
int
and
jl
xor
cmp
pushf
mov
pop
pop
cmp
in
pusha
xchg
dec
add
or
jl
xchg
mov
inc
xchg
push
sbb
out
gs
xchg
adc
aas
jmp
out
cli
pushf
inc
mov
cmc
pushf
mov
sti
jl
sbb
mov
lods
mov
xor
dec
or
or
adcb
cs
cmpb
sbb
rcrl
fs
repz
or
jno
repz
cmp
push
cmp
inc
dec
inc
rorb
inc
negl
clc
js
pop
mov
mov
in
push
dec
lea
lcall
hlt
xchg
sub
add
mov
scas
ret
push
in
out
inc
sbb
mov
mov
lret
popa
fs
xchg
inc
arpl
push
in
mov
pop
hlt
adc
shll
shlb
and
movsl
jo
scas
insl
dec
push
test
cmpsl
add
movsb
les
out
incb
mov
cmp
or
loop
sub
ret
pop
dec
pop
shr
sbb
call
xchg
in
xor
xor
pop
push
cltd
mov
aad
fsubrs
jo
stos
mov
inc
xor
mov
ret
arpl
sti
xchg
loopne
insl
in
stos
sbb
pop
pop
mov
inc
sub
pop
test
adc
stc
jge
repnz
gs
fstpl
icebp
aaa
fsub
js
jmp
imul
scas
ljmp
xchg
stc
ljmp
roll
pop
add
inc
fsubrs
adc
or
mov
jae
dec
sbb
cmp
add
or
dec
mov
push
cmp
push
xchg
cmpsb
pusha
cmp
jg
lahf
lcall
pop
xchg
mov
or
inc
mov
jle
call
lea
lret
xchg
xchg
movsl
and
int3
fadd
sbb
jecxz
push
test
mull
and
adc
std
inc
pop
in
pusha
push
push
cwtl
aas
aaa
lcall
addl
sub
stos
insl
adc
jl
test
out
push
pop
mov
mov
iret
or
add
ds
push
out
inc
mov
xchg
test
jae
inc
lret
cmp
pop
andl
jnp
fdivrl
fdivr
xchg
or
push
fbld
outsb
add
repnz
pop
outsb
sbb
and
icebp
psrlq
inc
and
jmp
xor
loope
scas
mov
outsb
addl
das
insb
outsl
jb
pop
push
sbb
pop
add
jle
add
test
dec
pop
insb
or
int3
adc
int
pop
ja
inc
xchg
push
call
ret
mov
movb
xchg
cmpsl
inc
filds
or
jle
or
out
cmpsl
loope
aad
jb
rcll
mov
xor
inc
xor
cmp
notb
mov
and
push
jecxz
mov
xor
cmp
pop
cmp
pop
add
add
cli
push
mov
pop
pop
sbb
mov
mov
inc
ret
jp
stc
inc
scas
ret
loope
cmpsl
push
xchg
dec
aam
or
mov
jmp
not
std
inc
ret
and
in
xor
out
add
mov
push
repz
cmp
gs
pop
mov
rcrl
mov
jl
inc
call
mov
cmp
ds
repnz
mov
mov
cltd
and
fimull
add
push
cs
cmpsb
cmp
add
outsb
and
mov
mov
pop
sbb
or
push
data16
jb
mov
jl
mov
jno
xchg
inc
fs
push
out
in
inc
push
inc
xor
call
or
and
dec
push
mov
jnp
xor
loop
lcall
repnz
sub
adc
mov
shl
call
lret
cmp
xor
pop
fsts
add
loopne
test
and
cmp
arpl
int3
outsl
adc
xchg
filds
xor
jno
scas
fnsave
inc
jae
xor
fxch
lds
stos
in
jmp
mov
cwtl
sbbl
xor
fbld
mov
aam
data16
pop
fnstcw
dec
in
aas
stc
nop
pop
test
lret
jbe
iret
cmpsb
jae
sub
mov
push
inc
lods
rcrb
mov
sbb
and
mov
mov
sbbb
add
lcall
xchg
push
dec
adc
daa
cmpsb
or
sbbb
scas
in
and
bound
and
and
or
or
push
add
stos
mov
pop
and
movsb
ret
daa
hlt
xchg
int
js,pt
loope
jne
dec
xlat
jne
inc
dec
test
dec
push
dec
aaa
jbe
mov
daa
push
mov
outsl
cmp
dec
adc
add
xor
mov
cmp
sub
mov
xor
xchg
sbb
adc
add
cmpsb
cmp
enter
jmp
adc
sti
in
pushf
imul
clc
sbb
dec
lea
mov
cmp
mov
inc
push
mov
in
adc
js
cmp
jecxz
lods
out
ret
sub
lret
pop
outsl
sub
mov
xorb
lahf
inc
inc
pushf
mov
repz
mov
cmp
arpl
mov
rorb
mov
add
push
je
jns
in
push
cli
sbb
movsl
lcall
int3
adc
orb
arpl
push
enter
dec
jbe
jg
pop
repz
jno
rcl
inc
fiadds
filds
cmpsl
rclb
movsb
sti
xchg
out
rcll
push
sub
les
fistpl
push
jecxz
xchg
mov
pop
and
pop
lret
out
movsl
cmp
sarb
mov
daa
mov
and
aad
arpl
push
dec
sbbl
cmp
into
repnz
addr16
jno
ss
cmp
pop
insl
inc
cmp
addb
mov
pop
mov
inc
mov
dec
cwtl
je
xlat
and
les
outsl
rcrl
mov
daa
pop
test
sbb
in
inc
sbb
fidivs
test
fmul
fadd
mov
adc
cwtl
sub
push
inc
fcomps
imul
addb
movb
js
push
scas
xchg
jl
pop
jae
pop
mov
int3
mov
sbb
xchg
lea
stc
in
mov
adc
sub
sbb
sub
mov
mov
fisubs
cs
pop
pop
push
out
pop
ja,pt
in
and
push
adc
cmpsl
xor
push
mov
xor
ljmp
scas
rolb
push
cs
pop
clc
xor
dec
mov
jg
or
aam
ja
stc
or
pop
test
jl
cmp
mov
mov
adc
mov
pop
and
fisubrl
fnstenv
or
mov
add
arpl
cmpsl
and
cmpb
sub
mov
inc
not
popa
int3
mov
lcall
sub
push
mov
ljmp
inc
call
inc
sahf
cli
mov
imul
mov
les
mov
lods
rcrb
xchg
adc
sub
mov
dec
pushf
mov
adc
push
jbe
mov
inc
sti
inc
push
or
enter
es
in
clc
and
lret
out
mov
test
inc
pop
dec
add
cmp
js
test
xchg
xor
out
jnp
sbb
test
jmp
sbb
cmp
in
mov
adc
aaa
dec
pop
dec
nop
arpl
insl
or
and
hlt
fadd
sub
jle
or
and
jge
push
imul
ds
push
es
adc
call
xchg
dec
test
mov
adc
sbb
jb
ror
shll
mov
cmp
mov
je
mov
adc
sbb
mov
jnp
int
daa
add
daa
add
pop
jne
sbb
outsb
inc
mov
xchg
xchg
jnp
mov
lahf
adc
mov
rol
test
call
dec
pop
fdivrs
mov
ret
xor
stos
push
pop
lock
xchg
push
adc
adc
add
fsubrs
inc
jl
push
lea
or
jg
sarl
or
pop
jnp
pop
test
fstl
or
or
rcll
mov
lahf
sbb
lea
push
push
sub
ja
adc
movsl
out
and
mov
outsl
cmpl
sbb
popa
and
sub
out
push
fld
mov
xorl
fmuls
or
push
xlat
or
mov
lret
jge
adc
aaa
ljmp
insb
aaa
enter
push
addl
cld
lcall
in
jp
loop
notl
test
and
push
movsb
cs
ror
adc
aad
push
les
test
mov
outsb
loope
pop
ljmp
jo
andl
cmp
int
insb
adc
data16
mov
aaa
pop
pusha
lea
popa
sti
clc
sahf
ss
enter
call
xchg
jl
and
pop
sbb
cs
test
xor
xchg
cmc
push
pop
xlat
out
fidivrl
ja
add
xlat
jns
in
lods
stc
pop
dec
dec
aam
sub
cmp
cltd
mov
and
adc
mov
inc
repnz
dec
dec
fisubs
fwait
xor
fcoms
inc
popf
fcoms
inc
int
stos
cmp
xchg
je
add
xchg
mov
sarb
fstps
lret
push
push
sub
leave
push
cltd
je
adc
mov
pop
ret
loopne
inc
push
rcl
subb
add
mov
or
jg
test
sbb
movsb
dec
jl
ss
xchg
push
sub
dec
jl
xchg
test
push
fcmovb
pop
adc
test
mov
sbb
nop
and
mov
es
scas
sub
mov
add
fmull
jbe
jmp
cmpsl
push
outsl
add
inc
out
mov
arpl
fcmovbe
insb
loopne
hlt
je
inc
in
dec
les
dec
xchg
mov
jecxz
sbbl
adc
xor
or
adc
insb
jge
iret
shlb
sbb
mov
cmp
leave
iret
sbb
hlt
mov
loopne
ds
cmc
notl
push
inc
mov
xor
xlat
outsb
aaa
clc
pop
out
xchg
pop
sub
lcall
imull
cmp
mov
and
cwtl
es
fs
ss
adc
jg
shll
loopne
pop
out
popa
adc
xchg
movsl
cmp
dec
ja
insl
repz
loope
mov
cmp
sub
fstpl
push
lret
jno
loopne
push
jg
fcoml
push
ret
add
xchg
out
rep
cmp
aaa
mov
loop
dec
outsl
sub
sbb
inc
cmpsb
adc
or
aas
pop
lods
jle
pop
jp
dec
and
into
shlb
cmp
mov
cwtl
sbb
push
cli
sbb
stos
jp
andb
xsha1
cmpsb
or
add
mov
jae
xchg
arpl
mov
js
out
lret
call
sub
std
inc
dec
loopne
or
lods
iret
push
sahf
les
aam
ss
lcall
jae
fdivs
pop
pop
ds
pop
xchg
xchg
push
scas
in
test
pushf
jge
push
lods
xchg
pop
mov
ds
mov
cltd
dec
push
lods
push
add
add
xchg
ss
arpl
sub
repnz
push
gs
lock
clc
cmp
xor
mov
sub
push
gs
adc
out
sbb
or
ret
sbb
sarb
fnstsw
dec
test
pop
jmp
aaa
pop
scas
nop
add
cmp
adc
mov
jno
push
stos
adc
sahf
fadd
movsl
addr16
mov
std
adc
lods
cmp
out
xorb
movsb
mov
jecxz
fmulp
xchg
les
outsb
adcb
in
sub
pop
pop
mov
imul
rol
daa
popa
jle
pop
nop
xchg
shrb
inc
cmpsb
cmp
mov
gs
cmpb
xchg
jmp
aaa
icebp
iret
push
jnp
jmp
cltd
stos
sub
mov
inc
mov
aad
loop
fdivrp
test
jo
mov
mov
fildl
push
xor
fldt
movsl
fimuls
xor
adc
pop
lock
dec
mov
pusha
lret
int
fs
ja
and
aam
inc
int
cmc
ljmp
adc
aaa
bound
inc
fisttps
mov
jle
mov
test
mov
sbb
sub
adcl
add
inc
shr
mov
lea
cld
mov
inc
loope
xchg
jns
lds
cmpsb
jge
inc
sub
filds
mov
jb
jecxz
sub
cmp
arpl
ror
inc
gs
roll
xor
insl
push
rolb
sub
pop
loope
out
call
repz
in
imul
dec
jne
divb
xchg
push
mov
dec
cmp
lea
stos
xor
loopne
imul
sub
and
mov
sarb
jg
in
aaa
xchg
cmpsb
jnp
fcom
mov
mov
in
test
enter
sar
push
aad
cmpsb
cmp
xor
pop
sahf
xchg
std
cltd
mov
shlb
jns
and
imul
add
sub
cmp
data16
pop
arpl
push
hlt
loop
imul
push
xchg
sahf
cs
mov
in
popf
pop
pop
or
sbb
jge
mov
mov
mov
mov
xchg
jae
pop
xor
in
and
xchg
xchg
xchg
stos
inc
je
clc
push
pop
push
sbb
mov
add
jg
js
jo
aam
mov
dec
fistpll
fsubs
push
cmpsl
incb
and
sahf
push
ljmp
jmp
xor
test
mov
mov
sbb
nop
jae
mov
sbb
int
fnstsw
pop
dec
and
jl
pop
jne
push
mov
pop
pusha
xor
xchg
pop
xor
stos
js
pop
sub
aad
sub
mov
sti
jp
mov
dec
dec
shrl
push
into
outsl
mov
adc
pop
pop
icebp
cs
jg
ds
push
xor
or
dec
mov
add
lret
jb
xchg
sbb
jle
mov
ds
movsl
cs
xchg
jl
inc
jno
mov
clc
lret
sub
sbb
mov
bound
insl
stc
pop
sbbl
lret
inc
fdivr
sub
inc
inc
pop
sbbb
mov
lret
loope
or
movsl
cmp
lods
inc
push
add
iret
xchg
lcall
push
jge
mov
xchg
dec
aad
mov
pop
flds
xchg
add
popf
ss
sahf
xchg
in
push
scas
sub
andl
cmp
push
xor
pop
popa
jnp
inc
in
push
cltd
lret
adc
aaa
xor
sar
in
jl
lret
pop
fisttpll
pop
adc
or
jl
sub
outsl
adc
adc
test
in
mov
ficompl
js
ljmp
les
psubsb
out
dec
in
cmp
pop
push
insb
sub
shl
xchg
sbb
mov
dec
add
lock
cld
mov
inc
das
movb
dec
jecxz
adc
lock
cmc
shl
cmp
rol
push
out
dec
adcl
out
push
in
xchg
les
mov
or
daa
jnp
repnz
ret
mov
cmpb
roll
les
jbe
icebp
cmp
dec
repz
insb
mov
std
cmp
out
test
or
test
add
mov
xchg
push
ja
dec
or
xchg
cmp
xchg
pop
daa
repz
shr
push
aas
inc
dec
movsl
xchg
dec
push
mov
mov
test
es
or
aaa
push
xor
mov
fsubl
sub
insl
clc
push
jg
adc
jbe
and
jge
repz
inc
mov
cli
subl
mov
jbe
call
dec
incb
fnstsw
lock
jns
subb
mov
iret
aas
adc
pop
cmp
sti
rorb
fwait
jp
jecxz
jmp
ds
stos
out
xor
mov
inc
or
mov
in
push
xchg
out
pop
fs
xor
jl
daa
mov
pushf
xor
ret
pop
dec
mov
in
sub
mov
rcll
sub
movsl
icebp
stos
in
push
and
xor
loop
pop
push
movsl
xchg
test
xchg
stos
mov
jmp
lock
ja
outsb
mov
sbb
fcmovnb
test
fldt
sbb
sub
mov
sub
mov
adc
xor
mov
lods
jo
fsubl
add
repnz
push
inc
pop
loope
test
cltd
push
cld
sti
fs
dec
cwtl
loop
add
cmp
es
mov
outsl
adcl
xor
ja
aas
popa
mov
cld
lret
push
jg
enter
int
mov
adc
jecxz
lea
or
sbb
mov
dec
push
lds
pop
inc
sub
push
mov
mov
nop
mov
push
xchg
mov
iret
je
sub
stos
repz
test
push
scas
fs
cmp
lret
and
das
mov
stc
nop
sub
push
in
cmpsb
pop
in
pop
jp
push
cld
jo
data16
push
fisubrs
stc
xchg
add
lret
push
adc
jg
mov
or
roll
fbld
mov
xor
xchg
dec
and
ljmp
inc
or
cmp
sub
notl
push
dec
jae
jp
mov
mov
mov
mov
adc
rcrb
push
mov
sub
cmp
jmp
fimuls
mov
in
fcoml
lods
hlt
test
pop
jecxz
pop
dec
xchg
xor
mov
test
sub
or
jp
mov
pop
sub
jmp
aaa
mov
xor
and
scas
push
or
rorb
and
bndstx
popa
inc
adc
adc
psrad
sub
daa
mov
in
jae
pushf
ljmp
cwtl
rcr
outsl
add
scas
xor
jno
inc
fs
bound
into
pop
inc
or
cld
xor
inc
jo
fpatan
scas
sbb
ss
mov
icebp
sbb
scas
xchg
sub
dec
mov
pop
and
push
push
inc
lret
nop
sbbl
pop
fcomip
cmpsb
iret
xor
inc
in
lcall
dec
cmc
adc
in
jnp
lret
jae
add
idivb
mov
pop
pusha
cmpb
jo
sub
test
popf
nop
bound
sbb
inc
push
lret
int3
sbb
rcrb
xchg
pop
arpl
adc
cwtl
add
clc
in
and
scas
jne
leave
sbb
pop
ljmp
cmc
xchg
jae
add
mov
mov
pop
xchg
pop
and
xor
xchg
mov
aas
dec
adc
add
pop
xchg
add
ss
adc
xor
pop
repz
out
test
mov
mov
sub
jmp
stos
in
mov
sbb
sbb
stos
ds
jae
lahf
call
or
lea
sub
in
fdivs
jnp
gs
addl
jnp
inc
mov
std
loope
pop
dec
mov
sub
std
cmp
cmp
shrb
dec
out
sub
test
mov
dec
mov
fbld
push
inc
pop
andb
movsl
call
push
lods
fs
or
sub
inc
sbbb
push
push
xchg
xor
jecxz
add
lods
bound
out
pop
mov
icebp
xchg
rcrb
mov
sbb
pop
cmp
imul
push
in
mov
clc
pop
out
iret
mov
jbe
fwait
sub
leave
outsb
test
mov
fs
into
jg
lahf
and
xchg
push
repnz
test
pop
fmull
mov
fwait
stos
insb
jl
jecxz
popa
sub
cmpsl
mov
push
lcall
jmp
xchg
xchg
jmp
icebp
insb
lret
insb
ret
push
aad
mov
pushf
std
jb
jno
pop
and
into
pop
mov
jecxz
or
mov
ss
push
out
and
popf
stos
fisubs
and
sbb
ret
loope
mov
xchg
push
mov
shl
xchg
out
add
je
hlt
sbb
addr16
ret
mov
loope
fldcw
mov
mov
inc
sti
imul
cwtl
aam
dec
std
shll
movsb
jg
hlt
std
inc
xlat
in
mov
xlat
lock
mov
sub
aas
movl
or
ds
xor
lahf
push
add
mov
xchg
mov
int
insb
jg
cs
sub
push
call
mov
cwtl
es
or
test
out
roll
repz
mov
and
movsl
lea
adc
xlat
repz
xor
rcl
push
sti
push
movl
mov
shl
cmp
cmp
or
aam
mov
pop
push
dec
sahf
mov
sbb
inc
cmp
add
dec
fnstenv
push
add
les
dec
stc
rcr
inc
ljmp
ljmp
inc
push
cmp
pop
in
jnp
je
fcompl
jmp
inc
shll
mov
xor
mov
inc
fisubs
jns
add
std
cmp
or
xchg
sti
or
sub
out
sub
cltd
sbb
stos
faddp
jo
cmp
rcrb
jno
xchg
enter
pop
sub
iret
or
jmp
out
adc
aaa
jmp
xor
mov
ret
or
push
dec
nop
daa
cld
mov
ss
mov
aas
xor
add
add
mov
loop
jae
push
jbe
scas
mov
subl
pushf
mov
jle
mov
je
popa
out
test
fimuls
push
bound
adc
xchg
pushf
push
lea
dec
lods
push
lcall
ret
outsb
mov
dec
loope
popa
pop
in
mov
mov
or
dec
add
test
cmp
fisubs
fimuls
lea
lods
or
je
jle
xchg
stc
std
cwtl
das
minps
xchg
mov
ss
mov
sbb
push
jnp
push
pop
lcall
cmp
jbe
rol
pop
sbb
cmc
lea
mov
stos
lods
rorl
rcll
pop
ffreep
xor
mull
push
jle
jae
jp
jp
pushf
xor
lcall
jno
or
hlt
push
out
inc
adc
aas
incl
pop
push
push
add
or
cmp
sbbb
mov
arpl
je
mov
pop
sarb
lcall
xchg
popf
shrl
xor
xchg
cmpsb
icebp
movsl
mov
jp
pop
out
mov
adc
stc
sahf
pop
pop
std
jo
clc
call
negl
adcb
push
xchg
and
andb
and
rep
inc
push
adc
ja
loope
add
ficoms
out
data16
jb
arpl
pop
pushl
lahf
mov
pop
fwait
aaa
mov
insl
shlb
inc
lcall
and
or
sti
int3
adc
sub
lds
dec
das
rol
aam
icebp
shr
and
dec
mov
stos
pushf
inc
int3
xchg
lret
stos
xor
aad
adc
xchg
push
mov
int
and
xor
jecxz
pop
inc
sti
jbe
movb
testl
xchg
cwtl
test
push
fisttps
push
push
fwait
lods
decl
mov
xchg
pushf
rcrl
and
cmpb
dec
outsb
dec
std
cwtl
push
stc
dec
pop
rorb
insl
ljmp
mov
nop
loope
mov
jb
mov
jmp
jns
cld
nop
insl
add
sbb
test
sub
mov
mull
dec
cmpsb
sbb
mov
bound
mov
mov
imul
cmp
out
shll
add
movsb
mov
jb
imul
divb
lcall
call
jno
es
data16
aaa
fsubrs
addr16
bound
xchg
cmp
out
mov
lds
sbb
mov
in
mov
dec
std
andl
add
es
test
mov
push
push
scas
test
test
ffreep
sbb
fs
addr16
leave
fwait
xchg
es
scas
repz
cmp
jle
decb
mov
or
rcl
push
pop
hlt
mov
call
sahf
xorb
movsb
scas
inc
fwait
push
outsb
mov
pop
add
add
imul
fwait
mov
idivl
cmc
push
popf
push
hlt
pop
cmp
lods
fwait
pushl
and
add
inc
pop
movsl
and
mov
sbb
filds
repnz
sub
enter
or
test
int3
shll
cwtl
rcll
xor
in
repz
cmc
arpl
pop
mov
push
mov
nop
insb
loopne
xor
adc
inc
not
push
aam
rcrb
lods
cmp
push
mov
daa
push
lods
fnsave
sub
adc
je
xlat
movsl
ret
outsl
fisubrs
shrb
cmp
out
or
push
int
add
test
dec
mov
pop
int
mov
xor
out
push
lods
shl
jnp
pop
xor
cmp
push
push
push
fmuls
imul
cli
lea
mov
xchg
cltd
pop
xchg
sub
and
cmp
scas
out
jnp
leave
movsb
jnp
movsb
pop
insl
mov
push
negb
je
ret
iret
data16
mov
rcr
adc
sbb
fwait
xor
movsb
std
pop
fldl
mov
jbe
cmc
mov
sahf
add
insb
or
ret
dec
jl
aam
imul
icebp
lods
push
jno
mov
cld
mov
cs
jb
enter
outsb
mov
push
mov
into
or
xor
loop
jns
push
jnp
cltd
test
cli
pop
outsl
cs
xchg
mov
mov
loopne
fnstsw
sub
push
aas
or
rcrb
loop
cmp
outsl
jl
and
jle
int
jg
cmp
lcall
push
enter
xor
popa
in
xchg
mov
int3
loope
jb
push
push
cwtl
xorb
jmp
and
push
pop
sub
cmp
jo
and
cmc
clc
sahf
adc
call
cs
push
mov
mov
pusha
sub
and
xor
cmc
pop
lea
les
mov
call
lcall
fs
xchg
mov
popf
and
inc
inc
call
mov
mov
pop
jae
push
popf
pop
pop
cmp
mov
dec
loopne
inc
xchg
xchg
jb
addr16
cs
popa
test
mov
pop
sbb
in
xor
je
pusha
dec
fisttpl
add
jmp
aaa
pop
jno
mov
sbb
sub
loop
jo
mov
and
repnz
inc
data16
std
in
xor
daa
insb
pop
std
mov
imul
lods
aad
or
pushf
jg
insl
cmp
imul
imul
lret
fcompl
or
inc
nop
aad
pop
repz
jmp
inc
in
dec
cmpsl
sub
or
mov
fwait
lods
xchg
test
inc
inc
popa
inc
xchg
jbe
xorl
add
nop
sbbl
xor
in
lock
add
inc
xchg
mov
inc
mov
mov
stos
clc
ja
hlt
or
cmp
shll
and
inc
cwtl
cmpl
cmc
xlat
adc
mov
imul
mov
and
mov
inc
jmp
mov
ja
repnz
pop
imul
xor
ss
mov
mov
loopne
fwait
rcl
ds
cltd
pop
and
mov
pop
cmp
xchg
ja
or
lea
test
sbb
and
mov
mov
testb
stc
xchg
or
outsl
out
add
add
add
cmp
sub
sub
pop
imul
testb
xor
inc
or
push
cmp
rorl
popf
icebp
ljmp
push
jbe
pop
jecxz
aad
mov
sub
loopne
pop
cmp
xchg
fisubrs
addr16
inc
pop
mov
ret
ret
fs
loop
shll
push
inc
repz
popf
popa
mov
daa
insl
jg
xchg
mov
stos
xor
pop
jbe
jns
jnp
loope
sbb
and
mov
or
nop
daa
fisubs
scas
inc
scas
push
or
int3
cmp
clc
jb
pop
dec
leave
lret
xor
add
push
jnp
sbb
pop
sete
sahf
sbb
push
rcrl
cmp
cmp
aaa
pop
out
cld
mov
mov
and
and
mov
test
sbb
push
xor
rcrb
inc
stos
nop
xchg
dec
aaa
mov
sbb
notb
iret
and
sahf
into
lock
movsl
sti
inc
pushf
ds
jecxz
stc
aas
aas
push
repnz
lea
xchg
das
inc
into
and
mov
push
scas
fisubrs
or
shl
cli
test
mov
push
pop
push
ja
das
sti
sbb
sub
jp
sbb
add
jp
outsl
xorb
pop
test
aas
scas
ja
push
xor
lcall
cwtl
sub
cltd
xor
mov
fcomps
push
lcall
push
lods
repnz
enter
mov
xor
push
insb
cmp
lods
mov
imul
xchg
ss
or
cmc
inc
enter
fnstenv
fsts
sbb
jle
push
and
cwtl
out
fucom
or
cwtl
mov
test
shlb
xlat
pop
imul
or
ja
sub
dec
mov
inc
lock
inc
aam
sti
push
mov
sti
jp
pusha
sub
orl
adc
and
lds
int
xchg
sub
fs
inc
push
sub
xchg
sbb
fidivl
mov
inc
or
js
icebp
insb
xor
adc
jae
adcl
js
mov
xchg
jb
adc
jbe
and
mov
sbb
gs
xlat
rep
push
insl
mov
mov
gs
gs
inc
popf
cmpsl
js
int3
xor
push
mov
push
ljmp
idivb
mov
add
mov
sbb
and
leave
jl
cld
aad
dec
and
sbb
hlt
adc
icebp
cli
mov
jp
jmp
cli
aam
xchg
xchg
mov
fsts
stos
les
out
adc
inc
negl
shll
clc
jbe
and
sbb
push
outsl
sbb
clc
xchg
movsl
xchg
xchg
mov
mov
xor
jne
dec
mov
addr16
sahf
roll
mov
shll
add
sub
lods
jno
push
dec
dec
adc
decl
push
inc
outsl
fmuls
loope
lock
mulb
add
sahf
call
ja
cmpsl
mov
in
daa
xlat
sub
mov
mov
xlat
popf
and
iret
clc
add
dec
adc
pushf
scas
xchg
sbbl
lock
movsl
or
mov
dec
int3
test
sub
lock
adc
jecxz
mov
in
cmc
add
or
enter
test
in
movsb
lods
cmp
xor
lds
pop
sbb
dec
jg
sbb
cmp
pushf
aam
jecxz
ds
pop
push
push
jmp
sti
dec
adc
mov
mov
inc
fists
dec
xchg
imul
add
int
popl
inc
mov
sbb
push
dec
inc
lret
pop
adc
xchg
rclb
sbb
pop
or
jae
jle
lea
mov
mov
add
xchg
or
ror
push
add
stos
and
je
mov
adc
mov
inc
mov
dec
cmp
inc
pop
std
ffree
mov
out
fnstenv
sbb
faddp
inc
rcrl
test
or
sbb
inc
pusha
je
out
jge
and
xor
in
jno
push
out
xchg
negl
out
jno
ljmp
pop
mov
mov
in
daa
adc
xor
and
sub
movsl
lret
sub
lods
lock
cmovnp
jle
sahf
cmp
pop
xchg
popf
ljmp
ljmp
into
mov
mov
clc
fidivrs
incb
daa
jns
ret
xlat
sti
outsb
mov
sub
gs
les
cltd
mov
or
xorb
pop
lods
test
mov
mov
jo
and
push
jl
stos
inc
cli
inc
out
outsw
and
inc
mov
xchg
sub
lret
mov
fdivl
fcompl
xchg
sbb
fwait
aaa
xchg
adc
push
int3
push
dec
cmpsb
cli
in
cltd
jb
xchg
sbb
insb
stc
nop
test
imul
xor
push
mov
imul
jno
mov
imul
xchg
adc
jmp
imul
mov
imul
testb
enter
sbb
sahf
adc
clc
xchg
std
dec
rol
xchg
dec
mov
outsl
loop
loopne
mov
fnstsw
je
mov
test
aam
mov
xchg
loop
lcall
fldl
int3
cmc
addr16
in
cs
jge
inc
mov
in
aam
dec
or
sub
mov
push
or
lods
and
idivl
and
mov
mov
jae
imul
insb
icebp
cmp
cwtl
cmc
int3
dec
inc
mov
fsts
mov
sub
std
inc
adc
shrl
sub
cs
es
pop
pop
and
lds
inc
test
test
pop
popa
inc
sbb
enter
xor
push
dec
pop
daa
stc
add
bnd
test
jnp
in
pop
insl
sbb
xor
es
nop
leave
jno
adc
fldt
xchg
xchg
pop
ss
adc
cmp
aaa
cmp
stos
ds
add
call
in
adc
mov
outsb
add
popf
out
mov
push
pop
and
xor
xchg
addr16
adc
sub
repnz
jmp
fmul
and
inc
loope
pop
imul
fcmovb
fdivrs
sbbb
arpl
cmp
lcall
push
sahf
test
jns
xor
pop
mov
int
add
fcomip
testb
es
jo
pop
popf
dec
inc
pop
mov
loop
jmp
mov
push
in
andb
ds
mov
jno
sub
push
sub
mov
xor
loop
mov
insl
xchg
dec
stos
push
gs
or
add
aas
lret
into
enter
xchg
cwtl
sbb
xor
cmp
cmp
dec
popf
in
sub
pop
jmp
cmc
orl
lods
pop
inc
and
inc
outsl
jnp
dec
addr16
jl
or
inc
fnstenv
push
popf
ljmp
sbb
and
insb
jp
push
pop
jmp
push
add
cmp
and
or
mov
mov
les
int3
xchg
bound
mov
sub
lods
mov
sbb
stos
jp
pusha
mov
les
pop
jle
mov
movsb
cmpsb
bound
jbe
js
inc
jmp
fisubl
es
xchg
js
mov
pop
mov
sub
jne
inc
pmulhuw
xor
adcl
clc
outsl
push
sub
jne
xchg
mov
sahf
scas
test
pop
adc
testl
cltd
sub
repz
sub
cs
fcomi
xor
fwait
mov
insb
xchg
pop
sbb
adc
and
or
jge
out
sbb
push
lahf
dec
and
push
mov
enter
push
je
daa
push
push
mov
ss
jne
dec
movsl
repnz
sub
bnd
loopne
cmc
adc
jmp
dec
jmp
sub
add
sbb
fmull
and
mov
jns
sbb
idivl
cs
fisubs
insb
pop
outsl
mov
sub
or
push
mov
sub
imul
mov
in
inc
xlat
popf
inc
iret
das
call
mov
add
repnz
aas
mov
stos
inc
pop
aad
or
sbb
add
iret
outsl
fsubrl
push
flds
sbb
fildl
imul
inc
test
mov
adcl
and
push
dec
in
roll
or
negl
rsm
and
dec
add
lahf
stos
inc
cmp
fnstcw
lcall
push
frstor
lea
mov
arpl
pop
sbb
test
scas
sbb
or
push
inc
sub
cmpsb
xchg
in
cmp
out
mov
cmp
xchg
jg
lea
jle
stos
add
leave
jecxz
stos
fdivrs
rorl
push
and
cmpps
into
cmp
cmp
pop
in
test
iret
sbb
aam
jle
lds
inc
pop
fsubrp
mov
pop
jbe
sub
adc
imul
xchg
mov
mov
inc
xchg
jbe
iret
shl
mov
push
arpl
cmpsl
cmp
sub
sub
xchg
call
jo
xor
test
rcrb
scas
cmp
sub
pushl
mov
fsts
sti
sub
lods
push
lea
sbb
insb
scas
popf
mov
lea
pop
inc
dec
enter
mov
mov
pop
sbb
pop
adc
dec
xor
mov
fcmovnu
mov
stc
mov
push
icebp
jnp
sbbb
js
es
push
outsb
stc
inc
xchg
fstps
add
les
outsb
inc
pop
mov
sbb
repnz
xchg
les
ja
movsl
cli
test
cmc
setnp
int3
in
andb
mov
pop
outsl
jbe
test
mov
lahf
mov
into
sub
and
xchg
rdtsc
sarb
xor
mov
or
push
popf
xor
and
pop
popa
lods
fldt
hlt
mov
addl
std
pop
dec
mov
aad
sti
fstpl
mov
stc
aaa
xor
stos
add
sub
sbb
cmp
aas
iret
cmpsb
jmp
cmp
in
pop
bnd
lods
fildl
neg
pop
dec
stos
stos
add
push
imul
idivl
iret
call
dec
int3
sub
pop
test
inc
xor
popa
repnz
xor
and
scas
mov
inc
jmp
fadd
out
mov
pushf
dec
cmp
or
xor
sub
aaa
sub
dec
xchg
add
dec
dec
gs
adc
in
sub
negl
test
je
sub
fdivrp
mov
mov
lock
ss
gs
mov
cltd
loope
pop
adc
imulb
or
stc
adc
lret
into
ret
dec
clc
push
inc
popa
add
jecxz
sarl
mov
adc
sub
test
inc
imull
inc
fstpl
mov
mov
hlt
test
es
mov
push
ss
pop
cs
pop
pusha
push
mov
jle
imul
cmp
out
lods
rcll
in
xchg
adc
inc
pusha
push
repnz
push
cmp
lods
sbbb
pop
out
adc
aam
sub
sbbb
adc
scas
fsubr
jmp
fsub
xor
jmp
clc
cltd
push
mov
incl
mov
sub
je
mov
mov
cmp
mov
imul
xchg
popf
and
inc
fidivrl
leave
cmp
jmp
lods
shr
pop
sahf
nop
mov
lea
gs
jmp
and
inc
mov
test
addr16
insl
aad
add
xchg
adc
mov
enter
test
imul
shlb
cmp
ljmp
jbe
dec
test
inc
movsl
mov
jp
pop
in
jmp
push
push
popa
out
sahf
mov
xchg
mov
adc
je
movsb
loope
rcrl
mov
inc
sub
inc
lds
lea
push
insl
jge
sbb
mov
or
add
jp
mov
in
imul
daa
cs
imul
cwtl
or
shrl
insl
sub
xchg
push
or
repnz
ss
mov
fstl
sbbb
lds
xchg
jae
push
mov
mov
pop
push
xchg
mov
into
movsb
cli
add
lods
dec
xchg
mov
dec
ret
adc
rcrl
or
jbe
dec
test
and
iret
xor
dec
scas
outsb
mov
mov
sbb
xchg
and
xlat
cmpl
mov
ljmp
test
or
inc
xchg
sub
ret
cmpsb
loope
add
inc
lcall
aad
sbb
sarb
add
push
jmp
mov
inc
scas
repz
mov
in
shl
les
imul
sbb
addr16
inc
ret
inc
insb
mov
dec
fisttpl
add
mov
notl
xor
adc
pop
hlt
and
jb
pop
icebp
mov
mov
cmp
in
loop
sbb
mov
dec
push
out
fildl
fildl
sub
pop
or
push
push
pop
push
ss
popa
loop
mov
lock
lods
hlt
inc
pop
insl
push
adc
mov
add
add
lods
mov
mov
or
inc
in
pop
or
insb
repz
fildl
or
movsl
cmp
or
icebp
dec
push
pusha
call
lahf
push
lret
aas
clc
es
lds
or
pop
xor
jle
xor
call
imulb
inc
jge
in
in
add
jge
fdivl
sbb
rorb
ret
mov
sub
xor
cmp
inc
inc
popa
loopne
lcall
sbb
push
repnz
xor
sbb
jns
out
xor
es
test
cmp
add
imul
rcrl
pop
fcomi
mov
jo
fbld
imulb
xchg
bnd
mov
rorl
lds
pop
adc
xchg
cmp
lods
xchg
movsb
pushf
sti
pusha
mov
subb
in
outsb
mov
scas
cmc
ret
sarb
shrl
adc
cltd
and
adc
adc
cmpsl
es
sbb
adc
mov
cmp
and
out
fcoml
outsb
clc
lea
add
mov
push
adc
mov
mov
mov
xor
stos
mov
mov
dec
cmpsl
jecxz
cmp
imul
fcomip
sbb
mov
fbstp
in
mov
lahf
cld
data16
shrb
nop
sbb
push
mov
xchg
push
aaa
faddl
cld
mov
ret
loope
sbb
loop
movsb
and
popa
movb
inc
inc
jnp
jnp
iret
addb
sbb
mov
lods
cli
cld
adc
cmpsb
out
lods
mov
and
add
pop
xlat
pop
stos
cwtl
xchg
out
insl
call
dec
hlt
xor
add
add
cmpsl
jecxz
pop
cmp
dec
add
and
scas
movsb
fists
imul
cmpl
xchg
push
pop
lods
jp
aam
pop
adc
sahf
std
xor
int3
sbbb
outsl
push
gs
rcrl
cwtl
cs
mov
js
inc
xor
lods
mov
xchg
jae
data16
cmp
cmp
icebp
stc
and
inc
jle
stos
daa
lock
adc
fld
cli
hlt
sbb
pusha
stos
imul
xor
adc
mov
into
lods
pop
testl
cmp
cmp
out
or
aam
push
mov
punpcklwd
cli
xchg
cmpsb
cmp
sbb
repz
mov
es
xchg
pop
cmp
leave
cmp
mov
popf
xor
rol
aaa
stc
jl
int3
pop
js
js
aad
xor
jge
mov
sub
lret
jno
cmc
sahf
test
cmovbe
or
mov
lret
orb
inc
mov
fnstsw
mov
js
mov
aad
dec
data16
or
pop
shlb
dec
or
sahf
lock
in
aas
or
mov
ja
clc
cli
mov
push
xchg
mov
test
and
popf
cwtl
mov
rcrb
xorl
ret
imul
leavew
out
cld
add
xlat
mov
cmp
bound
loopne
mov
jnp
inc
fsubrs
push
push
rcrb
xor
dec
cmp
dec
mov
adc
push
popf
mov
cmc
testl
sbb
outsl
loop
mov
pop
and
xor
in
nop
stos
adc
shrl
ss
xor
push
lods
add
int3
pop
inc
sub
add
and
or
out
nop
mov
pop
push
mull
or
shufps
stos
jbe
cmp
inc
imul
popa
push
pop
fwait
xor
sbbb
pop
lcall
add
into
cmp
fidivrl
push
mov
fildll
sahf
mov
cmp
adc
out
loop
lods
push
push
sub
push
cmp
dec
dec
in
xor
enter
aas
outsb
cmp
loop
div
pop
outsl
inc
mov
pop
sahf
adc
rclb
ss
lcall
sahf
push
pop
fbld
aas
inc
icebp
cwtl
xor
ja
jae
mov
nop
mov
pop
cmc
and
loope
notl
inc
popa
xchg
insb
shrl
lds
cmp
ret
andb
xchg
mov
fcoml
stos
sbb
ret
sbb
mov
int3
outsb
or
ja
lahf
stc
in
andb
push
xor
jno
ret
in
jbe
gs
xlat
jge
lea
adc
in
cmpsb
sub
jnp
mov
push
pop
into
and
push
lea
mov
movsb
and
stos
out
add
push
adcl
xchg
cmpsb
and
and
xchg
push
pop
lret
sub
adc
mov
and
sbb
int
nop
fdivs
sbb
adcb
sbb
pop
test
xor
enter
lea
sub
xor
subl
sbb
clc
adc
lock
push
lods
mov
fadds
lods
add
mov
cli
aas
int3
out
inc
lods
inc
out
cmp
ljmp
fwait
cmp
xchg
jl
and
mov
push
adc
outsb
cmpsb
mov
addr16
cmp
testl
lahf
pop
mov
nop
or
lcall
pusha
in
sahf
cmp
push
or
mov
mov
subb
jle
ljmp
pushf
pop
cld
mov
ror
jle
cmp
mov
hlt
xor
inc
pop
pop
aas
pop
cmpsb
jbe
sub
push
rcll
nop
dec
decl
nop
mov
enter
xchg
push
xlat
dec
mov
jecxz
mov
sbb
testl
ja
imul
jmp
pusha
dec
mov
popf
mov
es
xor
call
mov
mov
or
daa
iret
aas
adc
addl
push
mov
inc
fs
xlat
aad
cld
mov
adc
pop
jne
test
and
cmpsb
cwtl
xchg
jo
mov
clc
lea
jns
sbb
cmpsl
jmp
pop
mov
add
or
xor
xor
xor
adc
ja
push
jp
imul
cmpsb
cmp
pop
sbb
push
mov
or
dec
cli
xorl
iret
stc
and
jl
sbb
aam
xlat
nop
xor
xor
lds
addb
outsb
pop
lcall
mov
jmp
gs
dec
mov
mov
inc
in
test
fwait
mov
in
jnp
or
inc
and
pop
jmp
mov
fadd
pop
lock
in
icebp
ret
mov
es
out
stos
or
xchg
adc
sub
mov
mov
gs
xchg
jle
inc
enter
bnd
addl
movsb
sub
add
lret
push
fnsave
pop
in
enter
mov
mov
pop
cmpsl
inc
push
push
repnz
rorl
cld
xlat
xchg
add
add
push
lret
fcomps
push
mov
mov
lret
jp
pop
jle
arpl
xchg
mov
pop
loope
or
cmp
inc
lahf
jae
add
daa
negb
aad
rep
xchg
and
push
mov
pop
mov
inc
inc
jecxz
jle
dec
or
jnp
cmc
adc
dec
push
and
aaa
mov
mov
push
dec
push
xor
sub
push
stos
and
dec
mov
shrb
enter
arpl
aam
add
test
scas
out
inc
lret
cmp
pop
fldl
ret
pop
sbb
push
int
cmp
cmp
push
mov
test
repz
sbb
sub
rcrl
mov
fs
pop
orb
sub
ljmp
push
call
or
and
push
shl
jmp
aam
cmp
mov
pushf
xor
push
aas
dec
and
ljmp
sbb
stc
sbb
lea
xchg
mov
push
mov
stos
or
lret
mov
mov
xchg
xor
je
mov
push
sbb
dec
pop
add
ja
pusha
sarb
mov
cs
push
cmp
ret
pop
adc
jp
mov
xchg
das
test
mov
pop
into
sub
clc
aaa
dec
aad
std
mov
loop
cltd
aas
fimull
scas
das
popf
cltd
push
repz
inc
sbb
outsb
xor
pop
lods
dec
adc
sbb
ja
loop
clc
dec
pop
cmp
push
sub
pop
imul
xchg
mov
ds
in
arpl
push
pop
loop
add
mov
dec
xchg
pop
lea
pop
pop
sbbb
ja
push
cmc
xchg
orl
testl
out
and
rcrl
insl
loopne
repnz
mov
push
inc
pop
push
pop
stc
dec
add
cmp
mov
mov
in
aam
pop
or
js
pop
pop
sbb
lods
je
pop
hlt
sahf
loop
aam
jge
loop
jae
inc
mov
loop
in
popf
push
sbb
leave
add
jmp
andb
aas
imul
mulb
push
mov
pop
orb
hlt
scas
mov
sbb
popf
sbb
iret
negb
mov
loop
push
outsb
pop
xor
xchg
or
mov
lret
clc
xchg
cmpsb
inc
sub
rolb
insb
jg
sahf
push
clc
stos
inc
mov
lea
into
push
ret
and
cmp
lcall
in
xchg
stc
enter
xor
fidivl
arpl
nop
dec
cmp
pop
xor
jae
imul
enter
loope
cmp
mov
daa
jge
outsl
jnp
jp
xchg
inc
jecxz
mov
ljmp
push
xchg
je
pushf
lret
xchg
repnz
push
mov
bound
outsb
jne
ljmp
xlat
iret
movsl
add
cmpsl
jl
jecxz
out
sti
movsl
les
mov
push
arpl
cmpsl
adc
fstpl
and
and
mov
hlt
sbb
cmp
pop
stos
stos
insb
cld
imul
xchg
subb
push
xchg
xchg
xchg
jne
cmp
mov
sbb
fistl
xlat
cmc
pop
sahf
or
loop
pop
iret
std
dec
stos
jae
pop
dec
movsb
repz
mov
cmc
jno
sub
xlat
outsb
add
outsl
hlt
adc
xchg
inc
xchg
lods
pop
fldl2t
jae
xorb
adc
xor
shlb
int
cld
and
cmpsb
dec
inc
std
cmp
and
fiadds
mov
das
jg
loope
dec
pop
sub
insb
adc
lea
jb
xor
mov
movl
int
subl
push
or
push
dec
cli
scas
ljmp
cmc
enter
cltd
xor
dec
xor
mov
arpl
inc
xchg
add
lcall
xor
std
xor
cld
cld
and
sub
jnp
mov
adc
or
jb
das
mov
fcomp
nop
out
pop
xlat
pop
daa
pop
sub
fdivl
out
cmp
pop
mov
mov
fiadds
bound
imul
cmp
push
shrl
data16
mov
fcoml
fcoml
cwtl
dec
or
adc
std
imul
xor
enter
mov
cmp
dec
mov
fistpll
lret
es
cmpsb
outsl
pop
lock
shrl
and
loopne
sub
lock
test
nop
daa
cmp
fcoml
mov
hlt
shll
mov
mov
jecxz
or
sbb
bound
fwait
popa
jecxz
shl
shr
xor
inc
sbb
shll
xchg
push
and
fs
and
insb
mov
out
in
inc
mov
mov
call
cmp
hlt
das
rcrb
mov
out
cmp
stos
cmp
xor
andb
mov
enter
push
push
pop
sub
mov
popf
xor
inc
add
cmp
fwait
inc
stos
or
cmp
gs
mov
iret
mov
data16
or
mov
shl
pop
cld
das
sub
sahf
dec
in
mov
adc
subb
test
mov
jne
lret
add
jge
outsl
adc
arpl
shll
mov
mov
and
jmp
je
push
xchg
ja
mov
pop
mov
jmp
pop
cli
mov
scas
test
inc
imul
mov
mov
enter
test
dec
inc
push
outsl
rep
dec
xor
rcll
sar
mov
push
push
rcrb
push
insb
mov
fbstp
fdiv
mov
inc
mov
jne
cmp
sbb
xchg
push
mov
or
movsb
push
push
ja
cmp
sub
pop
cmpsb
out
in
std
in
cmp
and
mov
pop
fildll
insl
fdivrl
outsb
pop
std
hlt
mov
mov
cmp
adc
dec
xorb
mov
addr16
out
add
fcmovne
arpl
aas
aaa
dec
pushf
ljmp
lret
sbb
pop
mov
mov
shrb
enter
test
lock
je
push
mov
xor
test
sub
pop
popf
sbb
lret
inc
fwait
cmpsl
xor
mov
cmp
nop
cmp
insl
aam
pop
sbb
aas
or
adc
sub
js
mov
or
into
mov
mov
roll
mov
je
data16
xor
sti
fwait
cmp
mov
dec
sbb
mov
mov
shrl
scas
adc
jmp
cmpb
fcmovnbe
add
lods
cmp
sbb
adcb
call
into
in
jnp
xor
cmpsl
add
jp
mov
add
fwait
cwtl
cmpsb
in
arpl
xor
xchg
mov
sbb
dec
movsl
push
xor
std
jns
cmc
mov
push
lods
pop
sbb
hlt
dec
inc
xor
cmp
xchg
hlt
push
loop
inc
and
lds
rclb
icebp
ss
aad
dec
fsubs
rclb
mov
adc
mov
mov
pop
dec
jb
test
mov
jecxz
sbb
or
mov
fwait
sti
dec
xchg
cld
jae
gs
movsb
in
jae
imul
fcom
xrelease
pop
push
repz
xor
sub
mov
rcl
ljmp
test
inc
xor
insb
movsl
std
push
xor
ret
aas
outsb
sbb
dec
dec
mul
test
pop
push
lcall
ja
sahf
add
out
inc
xlat
loopne
cmp
js
pop
jle
xchg
push
outsl
call
adc
jp
xchg
mov
jg
test
in
xchg
mov
jae
jmp
out
hlt
or
xchg
out
sbb
sahf
pop
or
dec
mov
test
imul
pusha
push
mov
inc
push
out
test
fld
pop
cli
jo
dec
mov
jbe
or
pusha
shrl
pop
inc
pop
in
enter
mov
fldl
sti
je
test
jmp
in
shll
cmp
imul
mov
pushf
adc
shlb
testb
cmp
test
xlat
jb
ljmp
icebp
pop
cs
jecxz
lret
sub
and
sub
repnz
je
xchg
imulb
fcoml
movsb
stos
mov
xor
arpl
cmp
rclb
test
push
pop
das
add
adc
and
daa
or
lea
cs
pop
cltd
iret
push
lods
inc
inc
repnz
ljmp
dec
xchg
mov
and
cld
mov
in
jo
inc
fs
adc
fdivl
out
in
inc
test
ficoms
lret
decl
fs
sub
and
stos
inc
into
fnstcw
dec
insb
leave
pop
ljmp
xor
pop
les
or
mov
sub
enter
fwait
pop
sbb
cmpb
sbb
imul
sahf
push
add
push
dec
cli
mov
inc
push
jp
pop
inc
ret
push
add
out
stos
cmp
fstpt
xchg
jns
leave
int
cmpsl
push
pop
je
push
stos
dec
js
js
ss
inc
dec
ror
imul
or
jge
loope
pop
jecxz
add
xor
outsb
call
test
mov
addr16
int3
jns
xor
fdivr
iret
jecxz
stos
shll
cmp
or
fcompl
rcrb
test
and
lret
mov
and
xchg
insb
jl
mov
jb
or
cld
jbe
notl
adc
sahf
and
bswap
fnstenv
sub
add
ss
int3
xor
sti
jecxz
popa
sub
lods
shr
jl
test
repnz
xchg
and
xchg
call
pop
add
mov
jge
cmpsb
mov
sbb
adc
push
lods
dec
sub
mov
mov
into
cli
daa
xor
jno
sub
stos
dec
inc
hlt
add
push
push
scas
pusha
push
sbbl
sbbb
jl
sbb
jp
mov
jecxz
movsl
sbb
arpl
int
fists
pop
int
ljmp
xchg
adc
pushf
cli
pushf
mov
adc
mov
add
xor
adc
stos
mov
test
int3
adc
pop
cmp
jle
dec
inc
and
mov
jmp
mov
daa
outsl
fidivrs
imul
mov
cmp
push
imul
lret
pop
mov
inc
mov
ja
push
sahf
ficoml
jns
pop
stos
insl
fst
add
es
repnz
mov
test
push
ret
cld
das
cs
popa
sbb
test
insl
cld
cmc
mov
int3
sbb
jg
and
pop
loope
insl
dec
push
sbb
pop
int
out
and
jecxz
pop
xchg
lahf
mov
fs
pusha
test
ja
jb
sub
mov
popa
or
loope
mov
sahf
in
mov
iret
rcrb
fs
sub
scas
in
test
aad
cli
lret
ja
push
or
mov
das
mov
aad
sbb
loope,pt
in
call
adc
je
mov
add
out
lahf
adc
jbe
xchg
test
shlb
push
out
loope
cmp
cmp
inc
add
cmp
cwtl
inc
sbb
jbe
inc
pop
shll
mov
inc
inc
stos
out
imul
int
lcall
add
sub
adc
lcall
sub
clc
pop
inc
inc
inc
xchg
lea
fnstsw
xor
sub
cwtl
jecxz
and
lds
movsb
loopne
jbe
xchg
mov
addr16
sbb
ja
insl
xchg
add
aam
pop
mov
adc
lods
mov
push
test
fistl
movsb
rorb
or
mov
or
arpl
push
sub
mov
mov
push
pop
movsl
lods
push
jg
cmpl
pop
pop
rorl
mov
fisubrs
mov
jne
xor
mov
sbb
xchg
mov
scas
repz
lret
mov
dec
mov
push
mov
push
push
test
or
cmp
xchg
push
sub
sub
stos
or
pusha
insb
jb
cmpsl
cmpsl
push
dec
fdivs
lret
cmp
negb
andb
outsl
or
push
lret
or
imul
adc
dec
xor
out
mov
fwait
in
ljmp
cwtl
iret
pop
cmc
lods
cmp
push
jmp
test
popf
cli
lret
push
cmc
hlt
shrl
nop
stos
dec
push
push
jmp
insl
pop
xchg
xlat
push
mov
sti
jecxz
fsubs
mov
xchg
inc
in
jge
ret
dec
jo
pop
loope
sbb
cld
cmp
popa
adc
stc
mov
lock
imul
test
shll
push
mov
repnz
jbe
aad
vcvtpd2dqx
sti
cmpsb
test
ret
pushf
pop
shrl
or
jno
sub
rcrb
pop
sub
ret
cmc
scas
mov
inc
cwtl
fdivrs
fcmovnu
enter
dec
popf
add
adc
and
rolb
loope
pop
xchg
pop
test
mov
hlt
mov
clc
inc
rcrl
push
in
jno
in
push
cli
inc
inc
cmp
call
add
lock
add
add
push
mov
pop
jle
jmp
dec
out
xor
and
pop
outsb
adc
or
mov
fmul
repz
scas
call
mov
ficoms
pusha
and
data16
ja
adc
pop
lods
es
stos
mov
inc
int3
imul
nop
pop
push
movaps
lock
out
and
imul
lret
xor
jns
inc
stc
xchg
push
cwtl
fs
xchg
cmp
fimuls
mov
mov
mov
sub
dec
mov
add
nop
pop
sub
mov
scas
add
pop
dec
icebp
bswap
jnp
and
mov
inc
fs
jnp
inc
repnz
adc
jae
push
into
cmc
mov
dec
push
inc
jecxz
push
insb
addb
mov
fcmovne
dec
js
andb
mov
ret
subb
iret
stc
or
mov
sbb
mov
hlt
or
or
push
push
aas
fdivrl
cmpsb
cmp
mov
pop
or
adc
push
movsb
or
fistpll
push
out
xchg
push
aas
dec
lea
xchg
add
lcall
aad
mov
xor
in
jp
sbb
cli
sbb
mov
std
repnz
fwait
mov
outsl
lahf
adc
lahf
hlt
mov
push
inc
lret
stos
lock
outsb
leavew
push
fmuls
cmp
jno
push
test
xchg
push
test
pushf
nop
push
testb
nop
and
jp
in
jno
inc
fistpl
mov
mov
aad
fcmovb
push
jecxz
movzbl
insb
outsl
pop
aam
fwait
ja
jmp
lods
mov
rol
jbe
and
adcl
icebp
jo
and
or
sarb
mov
fst
jae
mov
mov
sub
pop
mov
jns
mov
inc
fmulp
fsubr
mov
xchg
jns
cmp
loope
push
stc
pop
lods
mov
dec
xor
scas
push
pop
loopne
push
dec
stos
adc
outsl
push
and
insl
add
pop
mov
lock
mov
dec
movsl
cmp
mov
cmpsl
out
pop
ret
pop
mov
sub
sub
pop
cwtl
jbe
adc
out
inc
loop
cmpsb
cmp
repz
sahf
pop
jge
cmp
ds
xchg
nop
int3
and
mov
repnz
add
test
repnz
add
pop
loope
and
pop
mov
jmp
mov
lods
adc
mov
es
xor
mov
lods
scas
jge
scas
iret
inc
fistps
gs
inc
cmc
imul
or
out
mov
ret
mov
sbb
sbb
stos
std
and
fdivr
jl
aad
jecxz
mov
cmovnp
daa
adc
dec
popa
gs
test
stos
in
sbb
fs
repnz
or
aam
shrb
adc
dec
mov
inc
jnp
inc
stc
jnp
fbld
mov
fildll
test
sbb
cmpsl
shl
out
dec
inc
mov
daa
push
xor
inc
enter
fisubrs
pop
push
push
rcrb
aad
je
push
scas
aaa
xor
cmpsb
push
mov
and
dec
mov
xor
or
xchg
jnp
jns
sub
cwtl
lods
or
andl
mov
lret
into
xchg
jae
xchg
shrb
mov
lcall
and
imulb
push
push
jmp
pop
sub
jbe
scas
xchg
iret
data16
aad
fildll
shll
push
bound
inc
data16
jne
cltd
sbb
aam
lret
stc
and
fsubs
pop
mov
es
adc
out
jge
xchg
flds
call
mov
xor
pop
lods
inc
dec
dec
mov
mov
lds
testl
sarb
pop
rol
push
les
jmp
rol
dec
repnz
shl
or
int3
mov
sbb
pop
push
ss
loopne
push
fs
lock
das
xchg
pusha
stos
cmp
mov
xchg
mov
inc
cmp
ja
frstor
idiv
jle
jl
fwait
jle
and
enter
and
mov
mov
mov
je
test
cmp
cmc
mov
pop
fsubs
out
jno
mov
arpl
out
and
sti
outsl
inc
mov
jo
sarl
lcall
cwtl
mov
outsl
jnp
lods
push
cld
sbb
dec
popf
cmp
xchg
sbb
push
imul
and
jmp
out
test
inc
cmpsb
mov
sub
xor
fldcw
inc
arpl
mov
loop
shll
inc
prefetch
or
push
xchg
ficomps
mov
mov
daa
adc
sub
out
push
mov
mov
in
jb
stc
lcall
je
adcl
push
int3
sar
dec
push
hlt
mov
push
lods
bound
jnp
jno
imulb
cmp
pop
add
add
fcmovu
popf
fadd
je
jno
cs
pusha
into
pop
jbe
fcmovb
pop
or
insb
jle
sub
aam
aad
mov
pushf
mov
xor
and
fimuls
fildl
mov
mov
cmpsl
inc
test
sub
push
cld
and
mov
in
jae
jge
fnsave
adc
mov
les
fsubl
ficompl
test
rclb
shl
out
cltd
cli
in
cmp
aaa
adc
push
inc
pop
iret
fcoml
cwtl
and
inc
xchg
and
mov
xchg
loop
mov
sti
xchg
out
lock
inc
mov
test
js
mov
lcall
xchg
std
pop
jl
int3
out
out
sahf
mov
pop
movsl
mov
daa
push
sub
add
lods
pop
push
test
mov
mov
call
xor
sahf
mov
add
xor
push
pop
dec
je
iret
sub
cltd
adc
push
jecxz
loope
pop
pop
ljmp
push
addr16
and
cmp
add
or
roll
inc
add
popf
in
in
mov
push
mov
mov
test
push
je
outsl
sahf
xchg
mov
popf
inc
mov
jp
in
xorl
nop
xchg
fwait
pop
mov
test
inc
stos
mov
int3
xchg
dec
push
pop
arpl
xchg
or
in
insl
stos
sub
sbb
inc
sti
fcoml
xor
test
cwtl
mov
in
jle
movsb
cmpsl
jnp
inc
mov
pop
outsl
fucomi
or
push
iret
pop
xor
jmp
and
scas
cmp
push
mov
mov
pop
loope
repz
inc
shl
mov
push
in
popf
cmpsl
mov
or
xor
mov
jle
sbb
fiadds
cltd
lcall
rorl
outsl
leave
ljmp
pop
mov
or
into
sub
clc
mov
aad
stos
jg
rorb
xor
push
movb
arpl
mov
xchg
ret
cmc
and
fdivs
js
xchg
stos
mov
adc
mov
inc
mov
les
in
arpl
int
pop
repnz
sub
mov
adc
xor
pop
or
cmpsb
adc
xchg
lods
pop
lret
pop
sub
lret
pop
lahf
std
pop
out
or
mov
mov
mov
imul
cmp
cltd
popa
scas
push
xchg
push
ficoms
add
xor
jmp
sub
leave
mov
testl
cmp
fstpt
or
jnp
mov
and
ret
cmp
imul
cs
into
test
jne
and
dec
jle
jp
push
mov
ja
mov
popf
xchg
cltd
outsl
test
out
and
add
sbb
mull
pop
dec
scas
push
cmp
and
xor
xchg
pop
adc
mov
hlt
push
iret
gs
cmc
mov
push
popf
mov
sub
fs
ja
push
xchg
pop
icebp
xlat
daa
xor
daa
icebp
mov
jge
xchg
ljmp
jl
push
call
jbe
xchg
or
pusha
mov
jb
add
adc
orb
jge
int
hlt
arpl
or
pop
mov
pop
xchg
mov
orb
push
rcrb
pop
sbb
push
xor
xchg
xchg
gs
pop
cmp
jbe
and
fwait
sti
push
enter
pushf
xchg
jp
xchg
pop
jmp
addr16
pop
dec
hlt
stos
loope
daa
es
aas
test
mov
sbb
adc
mov
in
hlt
dec
in
ja
mov
lea
cmp
pop
pop
leave
mov
pop
jge
cld
xor
iret
data16
lcall
cwtl
outsb
scas
cmp
mov
cmp
iret
or
shll
cltd
sub
dec
inc
fs
inc
sub
nop
xor
lds
hlt
sbb
mov
cmp
imul
mov
xchg
xchg
xor
lahf
cmp
shr
shlb
jbe
pusha
ja
xchg
repnz
xchg
pop
mov
lcall
mov
ret
inc
inc
loope
push
test
add
ret
jmp
ficoml
mov
adcb
scas
shlb
pop
mov
enter
dec
cmp
dec
mov
pushf
daa
das
pop
iret
push
jno
mov
fldcw
mov
stc
mov
cmc
mov
inc
in
mov
mov
and
push
and
mov
aaa
inc
dec
jmp
pop
call
in
fwait
repz
test
std
sahf
xor
xchg
cmc
cmp
aas
xor
cmp
pop
jbe
push
pop
pop
lret
nop
pushf
jmp
insl
pushf
pop
cld
in
add
mov
out
jbe
lds
dec
int
pop
adc
aad
xor
inc
daa
sti
shrl
inc
enter
in
fisttpll
mov
sbb
pop
mov
stos
xlat
or
rcrl
popf
fwait
sbb
sbb
hlt
or
repnz
add
cmpsb
adc
adc
pusha
jl
push
ss
xchg
inc
sti
scas
movsl
jecxz
mov
fsubrs
cmpl
xor
outsb
push
jge
cmpsb
fwait
cmc
call
idivl
xchg
sub
dec
inc
push
loop
dec
cmp
test
pop
push
pusha
hlt
mov
xchg
mov
sub
test
pusha
jle
adc
stos
int3
into
pop
cmp
pop
push
je
push
inc
fistpll
mov
inc
adc
mov
push
rclb
addb
lock
sub
dec
mov
and
jmp
dec
daa
or
xor
mov
jge
iret
sbb
bound
and
iret
fwait
sub
mov
ja
adc
sub
mov
or
dec
sub
addr16
icebp
push
xchg
inc
aaa
shrl
les
mov
popa
push
jmp
jno
mov
mov
stos
sbb
adc
std
mov
adc
xor
mov
das
pop
xor
mov
cmp
das
push
mov
mov
cmp
mov
jle
inc
sarl
inc
into
or
clc
jnp
mov
test
mov
das
jle
xchg
lock
push
in
icebp
sbb
add
lds
addb
int3
cs
jne
sub
arpl
ja
xchg
jecxz
cltd
popa
adc
ret
icebp
shll
les
enter
jne
mov
mov
int3
lock
cld
add
adcl
sbb
nop
jae
les
xor
lahf
dec
icebp
in
add
js
jbe
test
xchg
call
add
dec
js
je
popa
fwait
lret
pop
ret
mov
data16
cmc
mov
data16
push
nop
add
mov
pop
adc
cmp
pop
fwait
sub
inc
jo
jmp
iret
mov
adc
fwait
dec
aam
int
adc
imul
pop
scas
hlt
fsubs
add
mov
fs
ret
orl
bound
push
scas
shll
lahf
out
mov
outsl
jecxz
or
fnsave
repz
sub
in
rorl
cltd
cld
push
subb
and
mov
sub
jle
cmpsl
arpl
fdivs
clc
ja
dec
xchg
cs
jae
pushf
and
mov
jp
inc
sarb
not
inc
push
jmp
ja
shl
mov
pop
outsl
inc
sahf
sahf
mov
jo
mov
repz
fs
in
jnp
sbb
dec
loop
cltd
andl
pop
loop
rcll
idivb
outsb
hlt
insl
add
dec
mov
fildl
lret
cmp
jo
imul
scas
test
cli
xchg
les
sbb
sti
pop
mov
pop
cmpsb
xchg
cld
inc
fbstp
add
enter
shll
fmul
mov
xchg
pop
imul
inc
xor
lcall
cwtl
jae
adc
or
or
mov
adc
movsl
shlb
sub
daa
lcall
adc
mov
into
jg
add
sbb
or
lahf
pop
insl
and
xor
arpl
out
out
ja
or
adc
cmpsl
mov
into
xchg
jmp
cmc
xchg
and
inc
repnz
jne
ljmp
je
ds
ss
fisubrs
divb
aam
sub
jo
push
push
xchg
scas
and
testl
mov
dec
cs
xchg
jge
xchg
rcrb
das
or
daa
sub
mov
xchg
or
inc
mov
pusha
int
pop
cli
mov
and
xchg
push
or
pop
cld
scas
loope
push
and
jl
xchg
out
dec
sbb
mov
fbld
jp
rcrl
rcrb
movsb
pop
aas
mov
add
rcll
imul
movsw
push
je
adc
push
or
out
pop
call
add
mov
ja
xchg
sahf
add
dec
jo
addr16
push
sbb
jle
xor
sahf
mov
int
lret
push
sub
pop
mov
xchg
mov
insb
jl
in
inc
fnsave
sti
daa
xchg
mov
sbb
dec
and
popf
and
mov
mov
in
pushf
sub
loopne
loope
add
test
adc
andb
adc
lret
mov
cmp
loope
dec
fmul
out
mov
mov
shlb
push
inc
cltd
or
push
inc
pop
pop
jmp
mov
jmp
mov
je
xorb
shll
insb
nop
ss
dec
cmpps
nop
stos
mov
pop
or
aad
sbb
xor
je
sbb
xchg
ret
pushf
enter
sub
popa
xor
es
push
jmp
xchg
pop
andb
add
mov
lods
inc
push
sub
nop
push
cmc
dec
jns
into
fndisi(8087
sbbl
out
mov
dec
inc
out
jg
pop
cmp
loope
std
lcall
in
orl
imul
cmc
add
mov
pop
jecxz
shlb
lea
cs
test
lock
stos
je
push
xchg
out
and
inc
cld
add
lea
sbb
fdiv
jle
adcb
xchg
inc
mov
lahf
out
dec
adc
inc
jo
or
subb
mov
shl
add
inc
push
lock
push
outsl
movsl
call
repnz
jmp
cmc
cmpsb
push
arpl
push
or
xchg
pop
dec
mov
int3
cld
pop
lock
pushf
jns
xchg
xor
insb
arpl
xor
fistpll
repnz
pop
mov
push
push
add
mov
cld
pushf
mov
dec
xlat
test
and
addr16
leave
push
xchg
ljmp
je
add
adcl
insb
repnz
sub
pop
test
int3
sahf
sub
andb
fldl
cmp
cmp
mov
xchg
mov
mov
in
jl
push
jae
rorb
outsl
pop
call
mov
outsl
fidivl
mov
scas
aaa
mov
fnstsw
mov
shll
les
pusha
adc
mov
jp
insb
cli
sbb
outsl
push
push
addb
insb
es
and
ret
mov
jne
ret
iret
fsubl
xor
jns
push
sub
push
sbb
inc
loopne
in
cmp
sbb
loop
data16
adc
in
jb
sti
andl
cmp
mov
int3
mov
mov
push
bound
inc
push
mov
leave
in
sub
xchg
jo
mov
lcall
dec
sbb
in
push
insl
out
pop
cmp
cmp
inc
fdivs
cmp
scas
pop
pusha
xor
cltd
push
xchg
fidivl
fwait
mov
mov
or
mov
aas
pop
std
in
adcl
clc
push
fwait
and
mov
popa
add
mov
stos
xor
out
ja
mov
loopne
das
cltd
clc
inc
mov
mov
aas
stos
lock
int3
mov
test
sub
scas
pop
cmp
test
std
shlb
std
sbb
and
sti
iret
out
push
add
test
mov
push
sbb
dec
mov
fsts
shl
mov
xlat
xor
dec
or
mov
dec
pop
inc
ja
mov
scas
sahf
cmp
mov
ss
jo
pop
dec
sub
mov
cmp
cmp
hlt
cmp
xor
insl
hlt
add
mov
mov
add
adc
daa
mov
lock
xchg
sbb
sbb
stos
push
lret
cmpsb
sub
mov
mov
push
xor
push
cmpb
cmp
jge
stc
insb
mov
shl
pop
xchg
dec
xorl
jae
mov
dec
shll
and
hlt
iret
dec
das
stc
jp
mov
out
outsl
sbb
mov
mov
dec
mov
jns
mov
pusha
pop
shrb
add
jae
addr16
dec
les
adc
or
lock
sub
mov
popl
leave
divb
gs
shrb
ret
jno
pusha
iret
arpl
lock
lods
and
fndisi(8087
mov
mov
jge
icebp
movsl
loop
inc
call
mov
push
inc
cli
stc
sbb
sbb
sub
or
fidivrl
arpl
test
push
adc
sub
sub
jne
daa
arpl
mov
add
sub
mov
insl
add
jno
pusha
aaa
lods
pop
pop
add
cmpsb
js
mov
dec
add
xchg
test
into
adc
push
xor
sbbl
popa
sahf
into
pop
mov
jbe
test
aaa
or
fisttpll
addr16
movsl
aaa
addb
mov
arpl
cmp
xlat
cmp
push
nop
es
adc
and
add
nop
jnp
push
stc
scas
lods
mov
pop
cwtl
int
push
pop
inc
adc
xor
ja
fdivrs
call
sub
add
js
xchg
xor
jns
fistps
cmp
lahf
out
mov
xchg
or
dec
int3
adc
movswl
jnp
xchg
mov
mov
pop
xchg
mov
dec
aam
std
aaa
mov
es
xor
inc
subl
imul
ljmp
push
stos
dec
cltd
mov
lret
fs
fisubs
imul
fdivl
push
scas
cmp
and
push
or
sub
mov
sub
pop
push
std
rcl
pop
mov
jns
mov
stos
mov
lret
push
xor
in
jbe
add
les
imul
dec
sbb
inc
inc
dec
jecxz
bound
movsl
stos
ljmp
das
adc
loope
push
push
fisttpl
dec
and
cld
out
and
jg
les
jbe
xchg
test
and
pop
cmpl
cwtl
mov
test
orl
adc
adc
orl
cmp
in
dec
dec
and
fucomp
jp
jne
dec
daa
sahf
xchg
out
jae
or
cmp
inc
inc
mov
in
mov
or
ss
pushf
sub
nop
pop
ds
cmp
cs
xchg
fistl
testb
test
mov
scas
and
mov
fdivrp
jne
into
mov
xchg
cmp
mov
jns
xor
inc
outsl
pop
int
adc
lret
lcall
xor
clc
and
scas
push
aas
pusha
ret
cmp
xor
mov
aad
lcall
mov
sbb
pop
test
mov
fbstp
pop
addr16
cs
mov
dec
inc
cli
out
js
and
in
test
add
mov
jns
and
push
data16
cmp
cmp
arpl
jne
adc
outsb
jnp
js
test
jb
das
jo
sub
mov
outsl
cmpl
outsb
sub
lret
subb
pop
aas
int3
adc
jle
inc
xchg
inc
xchg
push
sub
sbb
repz
sub
stos
inc
pop
scas
call
jmp
cmp
lds
xchg
out
sbb
pop
dec
push
ds
repz
sub
popa
fstpt
into
enter
dec
jle
sti
icebp
je
movsl
adc
aaa
jne
push
fidivrs
lods
mov
pop
adc
ss
jle
daa
out
sbb
subl
push
mov
xchg
xchg
xor
inc
pop
or
lock
sub
mov
imul
fs
movb
into
out
cs
repz
enter
xchg
jmp
pop
pop
ss
fadds
or
icebp
das
lahf
sti
push
cmp
in
adc
sub
mov
out
inc
loope
or
loop
jmp
inc
dec
js
jle
pop
pushf
pop
jmp
pop
cmp
mov
dec
mov
mov
lods
movsl
sub
pop
mov
out
inc
push
push
or
mov
testl
cwtl
test
xchg
mov
jl
rolb
popf
add
loop
ret
mov
pop
daa
pop
shr
lea
lcall
pop
jp
movhps
adc
and
adc
adcb
mov
pop
and
lods
push
test
push
fnsave
or
add
inc
push
sahf
clc
loopne
cmp
test
xor
cmpsb
insb
sub
call
xchg
xor
clc
fmul
ds
not
mov
push
popf
xor
cs
cmp
mov
mov
inc
inc
and
pusha
bound
iret
int
or
fistpl
jo
and
rolb
jge
jle
lret
mov
push
pop
adc
aam
aaa
ret
push
loop
mov
sahf
sbbb
aad
and
jle
xor
cmp
mov
sub
iret
addr16
dec
lret
cmpsb
mov
ja
pop
jno
add
fsubr
sub
push
xchg
int3
push
adc
in
lock
push
xchg
incl
push
adcb
out
sbb
mov
adc
addr16
adc
mov
push
mov
loopne
iret
push
fwait
cmp
or
add
add
lret
testb
repnz
push
push
mov
ret
add
mov
dec
push
add
cmp
rcrl
shr
add
lods
pop
stos
push
test
push
call
mov
addr16
cli
ficomps
add
add
aam
pop
rol
push
sbb
int
das
cli
push
imul
lea
push
mov
add
xor
cwtl
cwtl
add
daa
sbbl
push
data16
enter
mov
fstpt
inc
fwait
jecxz
xchg
insb
sub
and
cmpsb
aam
and
scas
ret
hlt
or
cwtl
out
dec
hlt
in
sub
lods
inc
rcrb
mov
fisubrl
mov
push
sub
rclb
pop
mov
mov
out
sub
dec
push
push
dec
enter
sub
lock
or
jg
mov
sbb
ds
push
mov
pop
les
enter
inc
add
sbb
adc
adc
fsubrl
jbe
pop
call
dec
pop
xor
ds
pop
jo
mov
stc
ret
adc
nop
dec
mov
lahf
jp
movsl
addr16
push
cmc
cltd
leave
push
mov
repz
negb
rcl
rcrb
pop
pop
stc
sbbl
jle
iret
jnp
pop
and
inc
fwait
fs
setge
rol
cmp
mov
fldl
jle
rol
cmp
iret
mov
fisttpll
mov
inc
shrl
cmp
jle
cltd
shr
dec
stos
test
fbstp
mov
ljmp
jge
sub
pop
or
test
ds
mov
push
ljmp
dec
sbb
lea
push
scas
aas
xchg
jg
test
cs
shrl
aaa
aad
dec
sahf
cmp
pop
test
cwtl
sti
mov
mov
aaa
mov
fsubrs
hlt
xchg
frstor
out
xchg
pop
ljmp
cmc
mov
mov
shll
jne
std
js
mov
cmp
das
mov
cmp
sbb
adc
jnp
pushf
mov
in
xchg
mov
xlat
and
into
bound
out
insb
dec
rcpps
jmp
call
sbbb
push
arpl
dec
loopne
int3
outsl
sarb
testb
dec
pop
add
cs
out
call
push
data16
movsl
iret
lea
cmc
sbb
or
and
xchg
sbb
mov
data16
cltd
data16
pop
xor
xor
mov
cmp
sbb
sub
jae
mov
ror
out
in
out
mov
incl
mov
pop
mov
test
daa
inc
fnsave
pop
cmp
repz
inc
adc
ljmp
call
push
jns
xor
push
or
mov
xor
jmp
test
add
test
loope
ja
inc
enter
dec
mov
enter
dec
aas
cli
dec
and
in
test
jnp
fldl
pop
jo
bound
mov
fists
pop
cmpsl
mov
testb
inc
in
imul
test
inc
push
outsl
popf
push
mov
xor
jecxz
cmp
cmp
cmp
ret
mov
fildl
iret
data16
sub
sahf
dec
in
xchg
jne
imul
ja
xchg
cmp
cmc
mov
sbb
mov
cmp
mov
popa
pop
inc
fstpt
sub
sbb
jmp
addl
popa
iret
enter
inc
add
xchg
sbb
fldenv
lods
stos
and
mov
xor
popf
sbb
xchg
in
pop
push
ds
sbb
mov
js
out
mov
add
lods
sti
cmc
cmp
scas
fdiv
dec
xchg
popa
adc
cs
push
xor
jle
lret
push
jl
pop
mov
sub
sub
mov
xor
test
pusha
mov
or
inc
cmp
cmp
cmc
mov
and
out
fwait
ljmp
stc
sahf
push
out
or
add
inc
js
dec
in
mov
fs
and
push
call
fistps
mov
push
fidivs
vpshufd
mov
add
mov
imul
dec
leave
out
test
outsl
mov
pop
pusha
cmc
mov
mov
mov
jo
shlb
std
iret
mov
jae
pop
out
xchg
insl
add
fistl
test
test
sbb
jno
jbe
lret
cmpsb
popa
es
jb
add
pop
jg
dec
outsl
add
loope
mov
mov
mov
xor
fldt
mov
dec
out
mov
add
out
data16
lcall
dec
clc
jne
icebp
push
mov
sub
add
movsl
cmp
push
fs
test
inc
fadds
and
outsl
xchg
adc
sub
adc
xchg
jae
in
addl
jmp
pop
sbb
xor
cld
or
ret
ficompl
add
cmpsb
jnp
nop
test
mov
adc
mov
mov
and
mov
cli
xchg
stc
and
stos
notl
scas
jp
rolb
mov
arpl
ja
je
pop
sahf
outsb
scas
sub
cs
repz
mov
jecxz
loopne
sbbb
pushf
cli
popf
adc
outsl
push
test
movsl
push
adc
push
push
mov
inc
icebp
add
iret
dec
mov
inc
dec
add
mov
pop
mov
aad
adc
popf
cmp
push
movsb
call
stos
ret
mov
lods
ja
bound
js
push
mov
test
mov
lahf
ror
sbb
ljmp
cmp
aad
mov
fdivrl
pop
mov
stos
loop
bound
push
call
or
lret
or
imul
into
adc
pop
psubusb
gs
subb
aaa
aam
pop
lahf
andb
lea
mov
jge
mov
add
xor
dec
dec
dec
mov
add
repz
imul
mov
mov
mov
push
sub
ljmp
sti
ja
xor
inc
xor
fisubrl
shrb
insb
subb
lahf
pop
fisubs
shrb
lods
mov
pop
lcall
ja
dec
xchg
push
movsl
push
aad
fs
sbb
push
je
dec
xchg
stos
inc
add
inc
fcmovnb
pop
es
dec
xchg
cmp
add
stos
xchg
mov
or
mov
dec
mov
fwait
xor
jmp
adc
adc
jmp
mov
ds
cltd
insl
mov
adc
xchg
mov
push
push
cmc
in
mov
std
push
stos
xchg
sarl
imul
aam
shr
aaa
imulb
lds
fmull
jl
shrl
xor
test
aaa
mov
mov
imulb
shlb
pop
shrb
push
jae
mov
lret
dec
adc
sub
lods
or
popf
pop
jo
cmp
xchg
and
flds
adc
sub
insb
popf
xchg
ficoms
mov
test
cwtl
xchg
push
in
mov
jb
mov
jmp
enter
out
push
lret
sbb
pop
jmp
or
and
loopne
push
call
xor
enter
jno
andb
inc
faddl
ds
neg
pop
pop
push
popa
loopne
xchg
testb
add
mov
hlt
cmpsb
mov
daa
adc
mov
in
lea
iret
loop
mov
aam
and
cmp
ret
xlat
pusha
add
scas
jb
je
outsb
mov
call
push
xor
fwait
das
ljmp
iret
inc
hlt
inc
loop
sub
dec
out
fcmovnu
cs
rolb
pop
je
xor
xchg
je
xor
xor
cwtl
or
or
in
lcall
jb
push
inc
inc
xor
jmp
movsb
ss
pop
scas
cmp
mov
jae
daa
imul
int3
shrl
cmc
lds
divl
add
aas
pop
dec
pushf
push
repz
push
js
inc
in
scas
les
xor
scas
sub
pop
push
cmp
add
jl
repz
test
leave
pop
sbb
push
mov
lahf
in
xor
mov
mov
repnz
jns
push
cmp
clc
mov
xor
inc
lret
mov
repnz
testl
stc
jl
mov
jp
pop
mov
negl
push
shll
xchg
sbb
sbb
rcrl
push
divb
dec
loope
cmp
lock
mov
xor
dec
loopne
add
inc
pop
rorb
cmp
inc
mov
jns
dec
push
mov
nop
pop
inc
sti
jo
mov
jae
arpl
mov
out
add
data16
insl
in
add
lods
aam
push
pop
inc
sahf
add
pop
lods
or
in
sub
ret
outsb
and
push
pop
and
test
mov
popa
cmp
sbb
gs
xchg
rolb
push
xchg
lahf
movsl
cld
dec
mov
or
out
or
xor
gs
or
daa
smsw
fmul
xchg
loope
iret
data16
in
std
and
inc
fcomps
leave
scas
add
outsl
jae
sub
push
stos
aad
nop
push
dec
sbb
cltd
push
insl
cld
xchg
pop
and
popf
dec
push
jmp
movsb
sarb
sbb
or
cwtl
jecxz
sub
addr16
jno
mov
cmp
fs
mov
jns
dec
add
inc
and
mov
jno
in
xchg
fidivl
lahf
mov
pop
loop
repz
out
daa
sbb
jb
outsb
push
or
stc
nop
pop
aas
sarb
inc
dec
repz
imull
lahf
lahf
ss
mov
sbb
in
push
imul
vaddsd
jl
stos
in
out
sbb
jge
add
add
lret
lods
inc
add
lahf
jp
and
int3
shr
in
sub
push
outsl
leave
cmc
inc
xlat
loop
repnz
mov
scas
repnz
loopne
rcl
xor
sub
push
lods
mov
sbb
leave
cmpsb
std
sub
outsb
jns
sti
mov
dec
data16
sub
decl
sub
out
pusha
imul
jecxz
pop
insb
or
popf
jbe
sub
movsl
arpl
cltd
cmp
mov
cmp
push
movsl
mov
dec
ja
xorl
xor
pop
repz
xchg
inc
cli
mov
insl
add
adc
and
mov
stos
adc
push
jl
nop
stos
jb
mov
fidivs
mov
stos
inc
imul
pushf
addr16
pop
mov
inc
loope
mov
push
xor
or
jae
ret
sub
imul
dec
outsb
shlb
dec
aad
iret
sub
jo
mov
shrl
pusha
xorb
xor
insb
jns
jge
sub
xchg
in
aas
dec
ror
sub
mov
mov
adc
jg
cmp
jecxz
shrb
in
leave
push
arpl
mov
push
mov
xchg
mov
jbe
in
inc
inc
jns
iret
jle
xor
jmp
shll
dec
inc
pop
stos
or
cwtl
or
cmpsl
cmc
pop
mov
jmp
xor
lods
and
sub
mov
inc
jo
cwtl
mov
clc
jge
out
into
andb
out
adc
sub
repz
mov
jb
jg
test
xor
jle
inc
pop
das
add
adc
outsl
test
sub
mov
les
fstl
negl
mov
das
inc
or
int3
xchg
das
cs
add
mov
or
insl
adc
test
shl
jbe
or
xor
push
sub
mov
or
outsb
pop
and
int3
aaa
cmp
mov
and
aas
mov
es
xor
sti
xchg
mov
jp
sbb
std
and
push
add
mov
push
loopne
gs
pop
adc
and
mov
cmp
mov
clc
jne
or
leave
je
cs
or
pusha
mov
xlat
leave
std
pop
shrl
xor
dec
push
pop
jo
ljmp
add
inc
dec
mov
mov
inc
sbb
sbb
cmp
sbb
xchg
je
fwait
lret
psraw
jns
dec
lahf
push
lcall
pop
fmull
cli
enter
nop
push
and
mov
and
lea
add
pop
cmpb
cli
les
xchg
jno
adc
push
or
mov
pop
mov
adc
fldl
fsubrs
addr16
mov
fwait
aad
ret
inc
popf
fs
and
jge
mov
leave
sub
xchg
dec
fcmovb
pop
stos
jnp
sti
inc
das
jns
adc
sub
add
mov
push
lahf
test
or
dec
loope
xchg
mov
xor
test
xor
dec
pop
repz
dec
fimull
leave
aam
dec
int3
outsb
push
out
pop
sub
mov
inc
scas
sti
testl
push
js
popf
sub
sbb
out
add
mov
arpl
out
mov
inc
mov
inc
add
push
or
sbb
jp
movsb
dec
dec
pop
nop
test
xchg
movsb
out
sarb
lods
pop
lret
and
pop
sub
es
mov
add
and
push
js
mov
jle
mov
mov
or
das
mov
xchg
or
in
add
lods
dec
mov
movsl
int3
inc
loopne
test
sbb
sbb
sub
aaa
repz
xlat
cmp
js
add
es
push
pop
inc
push
push
sub
dec
cmp
fs
sub
or
or
or
jbe
add
cmp
xlat
cs
adc
xor
and
fwait
bound
add
adc
and
lds
pop
repnz
out
dec
sahf
cmpsl
pop
jmp
insb
je
mov
cmpsl
subl
xor
sub
cmpsl
and
add
add
push
push
mov
inc
jl
call
push
into
imul
notl
jp
adc
idivl
push
inc
call
or
xchg
int3
xchg
popa
fmul
xchg
jmp
mov
dec
adc
mov
jae
mov
pushf
dec
shr
cmp
add
repnz
int
addl
inc
call
sbb
imul
xchg
fwait
and
mov
ds
mov
push
fisubrs
push
sbbl
or
lahf
and
ret
lahf
mov
insb
js
shrb
lcall
xchg
or
xchg
mov
pop
sbb
scas
call
sbb
or
xchg
push
xor
or
into
pop
movsl
test
arpl
scas
outsl
dec
cmpsl
xchg
rolb
cwtl
and
lcall
and
sbb
in
mov
inc
sbb
xlat
mov
mov
out
out
adc
aas
mov
xor
xor
mov
into
pop
nopl
aad
lret
outsb
test
icebp
push
imul
fsubr
mov
mov
cltd
sub
pop
mov
nop
sub
and
sub
pop
xor
fists
push
push
adc
mov
adc
shll
xchg
sub
add
jno
jo
add
add
repz
pop
cmc
pop
push
fisubrl
sti
inc
dec
in
movsl
pop
repnz
out
and
adc
xor
or
dec
mov
cmp
add
jle
out
xor
int
movsb
mov
xor
pop
cwtl
repz
push
push
adc
cmp
or
pop
cld
jnp,pn
push
sub
adc
cmc
xor
mov
add
ficompl
shlb
arpl
movsl
xor
mov
nop
daa
jl
jge
shll
pop
pop
mov
lahf
call
aas
pop
mov
aad
or
sbb
idivl
insb
inc
cmp
clc
outsl
js
aad
cmpb
out
test
inc
fisttpll
mov
loop
ret
mov
js
and
push
push
imul
fmull
inc
cwtl
mov
lahf
jmp
jg
js
test
dec
outsb
adc
addr16
pop
ja
lods
xor
jbe
mov
sbb
jmp
mov
into
dec
add
mov
mov
mov
jns
std
cltd
shrb
shll
add
and
xchg
imul
mov
pop
jae
insb
push
addr16
xor
xchg
arpl
test
ljmp
scas
fistps
push
ret
add
lcall
std
mov
aas
push
adc
scas
mov
imul
pop
lods
lea
fdivs
mov
cmp
mov
xlat
in
cld
cmpsl
mov
bound
shll
out
loopne
fwait
jle
repnz
aas
sub
jns
jbe
xor
jne
jg
cmp
pop
popf
js
aaa
repnz
or
mov
or
das
cmpsl
lea
mov
xchg
xchg
xor
dec
arpl
testb
push
ficompl
or
in
sub
pop
es
cmp
dec
lahf
mov
or
cmp
pop
lock
jo
nop
inc
mov
and
pop
clc
xchg
push
lret
jb
push
mov
pop
push
push
cltd
mov
movsb
loopne
and
add
cmp
lock
xchg
gs
in
dec
mov
loop
repnz
cltd
sub
cmp
adc
pop
call
fsubrl
xlat
mov
aas
xor
push
mov
cmpsb
push
xor
lock
test
aaa
xor
pop
jecxz
inc
dec
es
sub
pushf
sarb
test
leave
ss
adcb
cld
cld
sbb
or
sbbb
outsl
aam
push
mov
push
out
mov
xor
jle
xchg
lock
pop
out
aas
pop
mov
push
sbb
pop
sahf
lret
addr16
add
mov
and
mov
sub
add
test
loop
mov
ljmp
and
jns
es
push
stc
adc
dec
jae
pop
icebp
cmp
jg
cmp
sub
pop
into
lea
mov
or
xor
out
stos
mov
and
mov
xchg
xorb
rclb
cmp
mov
mov
jcxz
mov
jne
xchg
jge
adc
pop
jecxz
mov
mov
push
jmp
push
hlt
push
inc
into
shr
jmp
into
fsubl
mov
inc
test
rol
leave
fiaddl
xor
fisubs
aaa
pop
repz
std
xor
fdivrl
repnz
dec
push
inc
idivb
sbb
fdivp
pop
mov
cmp
jp
test
dec
adcb
mov
clc
jg
sahf
xor
fldt
gs
pop
inc
mov
mov
in
iret
aas
mov
mov
repnz
dec
sbb
into
fmulp
jbe
bound
sbb
shl
jl
add
lret
or
adc
pusha
shlb
and
mov
add
out
stc
jno
or
fs
fldt
jg
insl
enter
dec
je
jnp
fidivs
xchg
popa
mov
xor
xchg
add
adc
pop
in
arpl
lret
int3
loopne
add
jns
test
sbb
pop
mov
sbb
xchg
bnd
jl
lcall
or
in
cmp
shrl
mov
pop
arpl
bound
int
dec
sub
imul
add
jns
or
lcall
pop
test
scas
fsubrl
dec
fbstp
fstpl
mov
or
mov
negb
cmp
push
add
ljmp
outsl
ja
aas
xor
push
cmp
mov
xchg
add
in
adc
push
mov
mov
push
cmp
mov
pop
mov
jp
into
xchg
sbb
push
or
mov
mov
inc
mov
mov
pop
pusha
not
xchg
adc
pusha
test
or
push
pop
jne
xchg
add
jb
adcb
sbb
xchg
loop
popf
inc
xor
sbb
adc
scas
xchg
pop
sub
jo
ret
xchg
cmp
xchg
push
xchg
or
pop
adc
mov
stos
push
movsl
and
sub
inc
jbe
cmp
xchg
fmull
add
enter
xchg
mov
push
push
test
pop
sub
jp
push
js
rcrl
jp
push
mov
imul
sbb
mov
or
inc
push
cmc
dec
or
cmp
arpl
loopne
cwtl
icebp
sbb
in
inc
cmp
dec
pushf
mov
movsl
xor
lds
adc
mov
iret
jb
cmc
and
ds
jae
enter
mov
pop
out
pop
jg
aad
sbb
add
nop
push
addl
insl
mull
fcmovne
cmpsl
mov
fadd
fidivs
pop
sbb
fsts
gs
lret
gs
xor
pop
xor
xor
out
xchg
fs
add
xor
cmp
and
inc
popa
jb
push
in
ret
arpl
adcb
push
outsl
imull
cli
jne
sahf
mov
push
cltd
decb
ret
gs
and
les
push
add
scas
push
dec
dec
pop
mov
adc
pop
testb
sub
xlat
mov
je
cmp
pop
fimuls
sub
jns
adc
or
popf
sub
push
cmp
push
pop
cmp
cmp
cmp
inc
scas
xchg
jne
ret
push
call
ffree
push
xchg
or
sti
testl
pushf
jecxz
fidivl
xor
shlb
xchg
mov
dec
repnz
jne
jle
jg
cld
cli
inc
pop
in
ja
outsl
inc
mov
out
mov
cltd
lret
inc
xchg
xor
mov
fwait
pusha
sbb
cwtl
mov
sub
out
lods
inc
loopne
add
cmp
jnp
push
dec
add
jns
in
add
sahf
data16
cmp
jo
test
mov
cmp
outsl
push
inc
lds
inc
inc
rorl
xor
or
dec
mov
or
cmp
addr16
fmull
test
cld
lret
shll
fs
fucomip
scas
push
xor
mov
and
imul
lret
sti
fisubrs
repz
lret
push
xor
jnp
lcall
in
mov
hlt
xchg
add
cmp
das
movsb
andl
clc
cmpsl
sub
imul
rcl
sahf
negb
adc
shrl
loope
lods
mov
mov
scas
inc
dec
je
cwtl
in
push
shr
mov
stc
mov
popf
notl
add
jge
jle
dec
in
inc
or
ljmp
or
scas
mov
cli
xchg
movsl
cmp
jns
outsl
lods
sub
dec
mov
divb
ret
pop
test
in
call
dec
jg
pop
aam
xchg
mov
dec
out
cld
mov
popf
cltd
repnz
inc
andl
xchg
stc
call
scas
dec
sbb
or
push
loope
inc
xor
call
push
stos
adc
xor
push
leave
and
sbb
jb
mov
jmp
or
in
xchg
pop
mov
lock
insb
rcr
bound
movsl
or
cmpb
jo
stc
nop
mov
bound
xchg
stos
rorb
sbb
mov
pop
xor
imul
cmc
mov
mov
or
adc
inc
inc
add
xchg
fsubr
int
popa
xor
inc
add
push
dec
mov
or
sub
and
pop
cs
test
add
rcrb
add
cld
mov
cld
xchg
xchg
out
out
or
sbb
and
jbe
cmpsl
inc
xchg
add
push
cmpsl
ds
enter
int3
dec
hlt
fs
xchg
push
xchg
xchg
push
gs
xchg
mov
cs
push
xor
clc
sti
or
push
push
mov
ljmp
push
mov
mov
mov
jnp
rcll
fcoml
ljmp
mov
pop
adc
in
inc
and
ljmp
pop
and
scas
pop
leave
rolb
pop
push
arpl
xor
pop
rsqrtps
in
clc
jp
pop
jle
inc
mov
mov
scas
add
xlat
repz
pop
cmp
xchg
dec
ficoms
stc
shl
adc
mov
inc
outsb
mov
ds
daa
xchg
and
and
mov
jge
js
movsl
leave
int
xchg
xor
movsl
push
adcb
pop
mov
outsl
inc
jo
push
jb
xchg
aad
ljmp
inc
lcall
dec
stc
pop
stos
jne
scas
pop
out
ja
scas
mov
int
and
inc
fadds
outsl
aad
leave
pop
pushf
ja
lahf
leave
fs
cmpsb
fiaddl
or
pusha
mov
pop
push
mov
daa
jp
adc
pop
and
je
sbb
adc
sub
and
sbbb
inc
mov
std
cltd
lods
mov
out
adc
jle
xor
shl
xor
std
testl
clc
inc
popf
shrb
mov
sti
std
out
add
imul
fs
bound
roll
movsl
sbb
xor
mov
andb
stos
xor
push
pop
loop
lcall
and
pop
add
imul
xchg
dec
add
mov
jl
cs
xchg
pop
push
mov
movsb
jns
lods
mov
dec
add
fnstenv
call
sub
jp
mov
in
adc
inc
sbb
xor
les
pop
pusha
inc
ljmp
cmp
enter
out
insl
jge
lret
xchg
sub
int
push
daa
mov
mov
sti
pusha
xchg
jle
shll
rolb
pop
cmp
popf
xor
nop
pop
loop
sbb
xchg
vsubss
mov
inc
mov
js
shr
int
loope
xor
jo
mov
sahf
es
ret
scas
or
dec
popf
pop
stc
popa
xchg
xchg
bound
pop
movsl
adc
test
movsb
add
and
scas
and
or
jae
mov
sub
add
and
mov
add
mov
int
add
sarb
lods
test
adc
mov
insb
jp
mov
or
sar
call
or
jge
stos
dec
inc
icebp
lds
movsl
xlat
push
mov
inc
inc
xchg
xchg
lret
fiaddl
iret
fdivl
ss
loopne
jle
mov
repz
xchg
sub
ds
ds
lahf
mov
clc
fsubr
pop
fbstp
cmp
cmp
xchg
xchg
push
clc
sarl
test
cmpsl
loop
cmp
in
mov
lret
pop
push
ljmp
adc
mov
loope
in
mov
pop
fsubrl
fmull
adc
repnz
sub
xchg
scas
or
sbb
mov
xorl
daa
adc
pushf
dec
jae
cmp
out
shrb
mov
bound
pop
movsb
repnz
and
hlt
scas
notb
fidivl
or
orl
cmpsb
xor
pop
sub
cmc
mov
mov
pop
loopne
enter
jmp
push
mov
rol
insl
pop
fstpl
cwtl
sub
add
push
xchg
xchg
ret
jp
dec
dec
dec
adc
icebp
xor
loop
add
arpl
adc
mov
sub
lock
arpl
or
mov
sti
nop
mov
lea
and
ja
push
dec
dec
loope
es
std
insl
insb
sub
in
jae
xchg
pop
aaa
or
data16
xchg
adc
xor
les
ret
cmpsb
icebp
and
rcr
and
push
add
cltd
cmpsb
shll
insb
mov
fsin
repz
pop
and
pop
mov
sbb
jmp
das
sbb
inc
shl
xor
cmpsl
sub
xor
jnp
cmp
fcmovne
leave
add
xor
xor
stos
cmp
sti
inc
ficoms
cltd
mov
xor
pop
inc
dec
lods
loop
scas
push
jp
inc
push
xor
popf
add
jmp
out
push
pop
push
or
xlat
sub
xchg
dec
sub
lahf
pop
imul
hlt
adc
lret
inc
add
leave
es
pop
push
adc
or
pop
jb
mulb
shll
repnz
jp
jo
or
arpl
inc
fwait
and
push
xchg
repnz
aaa
cmp
push
add
cs
cmp
ret
and
pop
faddl
push
movsl
imul
cmc
pop
pop
imul
dec
leave
pop
out
push
lods
enter
jmp
jb
mov
pushf
sbb
inc
fdivs
inc
fwait
adc
push
shll
daa
dec
add
add
sub
mov
mov
inc
sbb
mov
lret
xor
pop
sbbb
mov
jg
call
loope
lock
mov
dec
mov
cmp
pop
push
cmp
mov
push
dec
mov
cmp
dec
xor
sub
pop
inc
outsl
mov
out
aam
nop
xchg
sbb
mov
imul
push
test
pop
dec
and
mov
call
or
jns
push
test
inc
sbb
mov
fs
pushf
xchg
das
adc
xchg
ljmp
sbb
leave
fidivrl
daa
iret
js
pop
mov
int
mov
es
cwtl
lret
call
insb
enter
dec
and
pop
mov
and
iret
subl
mov
into
gs
lods
fwait
xchg
das
in
mov
icebp
notb
xchg
xor
lcall
jbe
dec
xchg
xchg
sbb
jnp
aam
pop
push
loopne
imul
fadd
pop
lret
sub
sub
cwtl
movsb
in
inc
pop
push
dec
scas
subb
jecxz
testl
xor
fwait
test
int3
out
and
test
jo
ljmp
lahf
xlat
in
test
mov
std
int
repz
hlt
inc
mov
ret
adc
scas
inc
xchg
mov
int3
arpl
pop
push
cmc
mov
mov
mov
xchg
xchg
sbb
out
lods
inc
mov
sbb
imul
aaa
into
push
outsl
out
push
xchg
mov
pop
dec
mov
movsl
repnz
xchg
adc
cli
jmp
sub
adc
xor
stos
pop
sub
shrl
pop
xor
cltd
sbb
adcl
pop
ret
add
enter
aas
xor
lock
sbb
in
cmp
mov
insb
push
shlb
loop
push
cli
or
push
lret
je
sub
pop
mov
movsb
fs
push
rcl
sbb
inc
imul
xor
aad
mov
mov
popf
fsubrl
jge
inc
out
inc
sahf
sbb
out
mov
xor
out
insl
pop
icebp
mov
sbb
int
xchg
jp
insl
ja
pop
cwtl
jp
add
jp
iret
ret
mov
mov
jns
pop
lock
lods
or
push
aaa
pop
sti
xlat
sbb
mov
mov
fwait
ror
ret
dec
jp,pt
rcl
stc
popa
sbb
insl
sub
adc
xchg
jmp
ret
push
mov
cmpsl
es
add
imul
lahf
test
stos
inc
pop
je
jbe
lock
inc
push
xchg
mov
pop
jp
pop
ret
push
mov
inc
mov
inc
jg
pop
scas
add
ss
dec
push
xor
stos
roll
sub
popf
outsb
pop
aaa
push
inc
cwtl
fsubrl
cmp
sbbb
ds
xchg
push
in
mov
dec
and
sub
xchg
add
test
cmp
jmp
sbb
xchg
fs
pushf
mov
inc
in
pop
cmp
dec
and
ret
fbstp
or
sarl
int
stos
arpl
pop
mov
aad
push
pop
jg
insl
ret
pop
cmp
pop
xor
pop
lret
and
ret
pop
ret
out
into
pop
mov
arpl
pop
add
shll
imul
out
stc
mov
pop
mov
dec
into
adc
mov
imul
dec
shll
sbbl
mov
movsb
mov
call
arpl
cli
lahf
push
outsl
mov
or
into
nop
pop
iret
jnp
dec
jp
pop
mov
popa
cld
inc
pop
test
lret
int3
clc
lcall
popf
mov
fsts
cli
or
inc
sbb
cmp
xchg
sub
lods
lret
popa
dec
js
push
in
test
pop
fiaddl
fisttps
cmp
std
out
lea
mov
idivl
loopne
lcall
inc
lret
push
movsl
cld
int3
push
inc
sbb
mov
mov
adcl
repnz
jge
jne
jmp
dec
pop
into
sub
mov
call
fstpl
jl
loopne
mov
arpl
cmp
mov
and
pop
dec
insl
nop
out
jo
es
je
int
push
xor
adc
inc
stos
out
sub
lods
xchg
push
sbb
dec
ja
cmc
mov
adc
or
icebp
movsb
pushf
adc
dec
or
cmp
repz
dec
jo
jg
pop
mov
ficoml
jecxz
scas
mov
lahf
rolb
fucomp
out
xchg
push
mov
sbb
and
add
sub
ds
in
inc
dec
and
sbb
push
or
sbb
sahf
fsub
divb
inc
in
inc
pop
cltd
xor
fs
repnz
pop
addr16
ljmp
jno
cmp
sbb
out
cmp
jle
push
jo
inc
scas
cmpl
rcll
xchg
inc
fadds
mov
fldcw
ljmp
inc
pushf
jl
push
xor
push
lods
ja
cmp
push
adc
faddl
mov
shlb
dec
lahf
cmpb
inc
push
add
test
ret
and
cmpsl
outsl
push
xchg
or
xchg
sbb
les
cmp
jae
xor
push
in
add
test
pushf
and
popf
xor
mov
push
loop
scas
mov
sbb
push
ss
lcall
xor
pop
fistl
mov
inc
or
add
jae
test
add
les
imul
mov
dec
pop
xor
push
in
repz
xchg
jb
ret
inc
iret
data16
sahf
adc
int
out
and
loop
dec
adc
imul
pop
imul
icebp
push
push
mov
xchg
lcall
push
js
mov
inc
out
les
mov
jne
add
pop
sub
rcrl
cmc
mov
mov
cmp
nop
lods
mov
dec
loop
lods
test
or
xor
fldenv
sahf
rcr
out
push
xchg
in
test
push
adc
fnsave
sbbb
mov
sub
pop
mov
mov
ret
xchg
jmp
inc
fmuls
sbb
mov
jb
fistps
push
push
jne
mov
mov
icebp
in
lock
push
or
sub
jne
dec
stos
test
pop
jecxz
setno
mov
btc
repnz
jb
aas
popa
adc
and
mov
jne
pop
incb
adc
mov
shr
test
jnp
cmp
jbe
push
mov
insb
fs
jmp
mov
dec
cmp
test
mov
jge
mov
lods
mov
cmpsb
imul
in
ret
pop
cmp
mov
push
ja
fcmovu
pop
mov
jle
cli
cmpsb
cmp
repz
js
cmpsl
lds
push
xchg
fnstenv
sbb
pop
scas
stos
add
dec
ror
popf
jb
and
mov
js
sub
lahf
popf
stc
xchg
loope
adcl
mov
jnp
ss
cli
jbe
pop
ljmp
and
aad
jecxz
testb
and
dec
cld
lret
test
popf
hlt
add
jne
adc
xchg
sub
jecxz
pop
aaa
scas
xchg
jne
mov
pop
pop
mov
and
mov
jmp
jg
dec
or
fists
fs
pop
pop
scas
jno
sti
jp
and
xlat
and
push
pop
push
cmpsl
add
lds
add
mov
mov
xor
cmp
push
push
mov
inc
int3
dec
push
jns
pop
jns
dec
jge
repz
jbe
push
mov
fld1
adc
cli
clc
sub
cmc
cltd
stos
in
test
and
xlat
rorb
movsb
xor
sub
pmaxub
cvtpi2ps
arpl
mov
fsts
inc
mov
push
dec
loopne
adc
clc
inc
cmp
jno
inc
fisttpll
rol
out
xor
adc
test
inc
mov
mov
ror
adc
inc
fidivs
sbb
mov
ret
inc
mov
stos
repnz
fwait
jp
sub
jne
pop
lahf
movsb
inc
notl
jmp
mov
lods
sub
inc
movl
lods
add
dec
pop
cmp
aaa
std
xchg
imul
lock
mov
xchg
pop
mov
testl
add
push
mov
stc
in
sub
or
ss
fcmovnu
sub
scas
mov
inc
jb
xchg
in
mov
div
daa
sbb
xchg
js
xor
cmp
ficompl
js
dec
dec
out
or
add
and
mov
dec
adc
adc
inc
cmp
jae
int
cli
xchg
jg
iret
lcall
push
inc
xchg
inc
ret
mov
mov
and
inc
loopne
mov
hlt
stc
test
push
cmp
inc
test
mov
xlat
adc
popa
pop
dec
xchg
addr16
pushf
bound
ja
and
sti
fwait
jmp
dec
cmpsb
test
loopne
andb
and
cmp
xlat
add
loopne
cmpsl
cmp
sub
js
adc
lahf
call
push
nop
push
lahf
dec
cmp
mov
xchg
mov
aaa
add
push
test
or
enter
pop
loop
fldenv
sbb
xor
mov
aas
dec
fdivr
xchg
jp
cmp
cli
ss
movsl
jecxz
cmpsb
adc
gs
test
sbb
loope
loop,pn
arpl
clc
aad
jmp
mov
cmpsb
cmp
fists
push
or
inc
mov
je
cmpsb
mov
fnsave
fisubrl
cmp
fisttpll
and
repz
mov
add
imul
mov
mov
xchg
pusha
shld
push
dec
cwtl
stos
sbb
inc
adc
mov
fsubrp
mov
fidivl
xlat
push
pop
nop
push
loope
xchg
sbb
insl
sub
sbb
movl
cmpsl
pop
inc
xchg
bound
popa
sbb
mov
pop
lret
push
loop
xchg
fnstsw
push
push
sbb
addl
fbstp
pop
xor
inc
dec
and
cmp
int3
in
sbb
lds
push
cmpsb
jle
cmp
addr16
mov
into
stos
in
jae
stos
lds
scas
test
and
lret
fidivrs
add
push
push
push
inc
cmp
shll
js
push
pusha
nop
cmpsb
mov
cmc
jb
lahf
xor
rclb
test
sbb
lret
inc
add
inc
mov
and
sub
and
jo
inc
inc
int
add
adc
std
or
push
adcb
cmpsb
xor
cld
push
jbe
pop
mov
mov
sub
mov
dec
fcomip
test
or
lret
das
xlat
adc
pop
pop
pop
insb
addl
cltd
enter
lret
add
ljmp
sbb
mov
cltd
xchg
cld
shlb
and
dec
inc
test
cmp
jg
jecxz
xor
mov
adc
shrl
imul
xor
shll
shrl
into
iret
out
xor
mov
repnz
stos
cmp
xchg
out
mov
dec
jno
cltd
xor
xchg
xor
bound
movsl
std
dec
sub
aam
xor
add
dec
cmp
push
test
gs
scas
repnz
mull
addr16
int3
jmp
lea
out
add
xchg
mov
xor
popa
outsb
mov
or
adc
cmc
aaa
imul
lahf
add
lahf
icebp
inc
fcomps
mov
in
fs
cmp
pop
in
adcl
or
cmpsl
addr16
cmp
jb
jecxz
test
add
xchg
mov
ficomps
loope
xchg
xor
insl
adc
and
or
inc
dec
push
fsubr
add
jbe
inc
stos
or
mov
jnp
daa
mov
xor
or
mov
inc
movsl
roll
and
insb
push
and
outsl
aaa
inc
sbb
and
test
aas
std
arpl
xchg
pop
push
inc
cmp
mov
lds
in
iret
inc
jb
cld
xchg
lret
jbe
in
scas
inc
pushf
add
sti
pop
daa
mov
push
ret
mov
mov
mov
es
xchg
mov
xor
and
sub
dec
shlb
add
cltd
xor
ror
arpl
or
or
js
mov
xchg
sbb
jnp
arpl
sbb
rclb
shlb
or
mov
out
test
ja
and
ljmp
fistps
mov
stc
lds
and
cmpsb
cmp
push
jg
push
sub
out
sub
add
sbb
cmp
int3
in
sbb
xor
cmp
push
jo
sbb
inc
movl
pushf
lods
fs
and
stos
mov
std
fiaddl
or
pop
xlat
insl
sbb
lahf
clc
in
subl
sub
scas
xchg
sbb
sarl
mov
dec
mov
fidivs
mov
xchg
lret
leave
push
jno
jmp
stos
test
mov
fildl
mov
in
sbb
leave
fwait
mov
mov
mov
jle
aaa
cwtl
pop
jno
and
push
xchg
inc
pop
lock
ljmp
push
in
adc
icebp
jbe
add
fld
int
inc
xchg
pop
sbb
cmpsb
icebp
mov
shrl
lods
jo
mov
icebp
push
cld
int3
xchg
adc
int3
inc
fxch
xor
push
test
int3
scas
call
fidivs
add
add
adc
mov
loopne
addr16
xchg
xchg
enter
mov
cmpsb
addr16
testl
mov
fadds
lea
mov
xor
or
lcall
xchg
mov
std
cmpsl
adc
dec
or
adc
aaa
mov
xor
cltd
fmull
loope
and
fisubs
outsb
push
push
adc
ret
mov
push
popa
mov
dec
pop
je
adc
xchg
jno
les
pop
or
iret
mov
inc
mov
inc
mov
popa
fsubs
add
pop
jbe
je
jbe
outsl
imul
in
ret
cmp
les
sbb
ret
jo
push
jae
push
dec
lahf
lcall
cmp
movsl
shl
sub
pop
clc
out
add
sbb
jbe
hlt
add
mov
mov
add
call
dec
loop
outsb
and
adc
xor
mov
dec
shrl
lcall
sbbb
scas
dec
mov
jno
sarl
mov
es
gs
aaa
mov
imul
xor
repz
push
outsb
into
cmp
sbb
add
cli
push
bndstx
inc
pusha
das
jns
cmpl
aam
js
or
pop
clc
sub
xchg
movsb
add
pusha
xor
mov
jle
mov
sub
sub
dec
add
ror
mov
sub
cmp
jmp
jg
jg
push
ja
jnp
out
scas
inc
push
popf
sti
das
mov
or
inc
arpl
dec
scas
push
out
push
dec
adc
ljmp
mov
mov
pop
mull
cltd
mov
xor
lock
loopne
and
js
mov
lods
fidivs
dec
loope
sbb
mov
pop
push
scas
imul
xor
dec
xor
das
inc
inc
xchg
loope
inc
push
movsl
mov
shll
add
out
pop
ljmp
or
pop
rcr
outsb
in
pop
xchg
mov
inc
lods
aaa
fnstenv
int
or
mov
xchg
cmp
lret
pop
aam
jae
cmc
or
mov
lds
fs
in
fwait
imul
negb
jg
sbb
xlat
sbb
lods
js
mov
push
fisttpl
lock
mov
in
push
aam
cmp
out
mov
mov
lret
lgs
sub
push
ljmp
inc
mov
sub
add
lods
cltd
orl
adc
jbe
inc
movsb
cltd
popa
jnp
repnz
mov
mov
pop
jns
fisubrl
inc
xor
adc
adc
add
add
and
lock
sbb
cli
movsb
adc
decb
or
mov
dec
add
mov
mov
mov
jae
push
call
xor
pushw
dec
dec
xchg
push
and
test
call
push
fstpl
mov
in
lock
cmp
inc
out
aam
lock
adc
pushf
mov
fistpl
push
ss
cmp
adc
out
sti
loope
inc
repz
mov
das
cmp
popf
mov
rcll
push
data16
adc
adc
jo
xor
test
jns
cwtl
out
inc
pop
call
mov
inc
cltd
add
into
pop
icebp
xchg
and
push
ja
inc
cmc
mov
fistps
mov
dec
pop
xor
mov
adc
adc
subb
dec
and
dec
add
je
dec
and
mov
dec
scas
mov
ja
mov
sub
rcrl
out
inc
adc
shrb
sbb
bnd
lock
pop
sbbl
lods
jmp
xor
push
mov
repnz
icebp
pavgw
cmp
test
pop
xchg
out
add
popa
mov
movzbl
js
pushf
jmp
inc
sbb
sub
stos
xchg
lock
js
std
jmp
fdivs
jns
pop
loopne
out
leave
mov
jle
aaa
enter
push
arpl
pop
sarb
int
mov
mov
mov
mov
loop
inc
and
negl
mov
sbb
lods
dec
xchg
mov
or
movsl
mov
filds
dec
out
jb
or
pop
hlt
sub
imul
lock
in
fldl
inc
out
fwait
call
test
mov
fs
int3
inc
jmp
js
hlt
sarl
popa
mov
sbb
mov
cwtl
int
xchg
dec
push
addr16
mov
sub
pop
je
rcrl
bswap
cmp
xchg
jmp
mov
jb
xor
stos
inc
or
js
lock
pop
std
adc
jne
mov
dec
mov
mov
xor
cmc
mov
das
lea
push
mov
shrb
filds
fnstsw
pop
lods
cmpsl
sub
push
jae
dec
xor
cmpsb
jno
es
es
pop
daa
xchg
iret
jle
jp
lock
sbb
outsb
das
adc
icebp
and
loop
int3
lcall
fdivrl
pop
mov
ret
inc
test
insl
mov
or
inc
and
and
jns
enter
lock
xor
mov
xlat
cmc
je
cmpsb
and
inc
cmc
ret
std
int3
dec
das
test
adc
out
imul
jmp
ret
xor
fidivl
js
cwtl
dec
xor
loope
push
notl
cmp
stos
adc
pop
mov
push
dec
mov
sub
es
shrl
cmp
movsb
mov
ljmp
in
xor
adc
arpl
xchg
sbb
popf
cli
push
stos
pop
in
paddb
adc
inc
push
cmp
movsb
data16
xor
pop
repz
xchg
inc
shl
pusha
cmp
xor
or
shll
ljmp
jb
rcrb
sbb
jns
push
inc
mov
xchg
scas
xchg
pop
inc
push
jnp
fldcw
loop
test
sub
fwait
rorb
repz
dec
or
pop
test
xchg
add
clc
ss
xor
fidivl
cmpsb
inc
lret
jae
inc
and
inc
lret
out
popa
jg
test
jmp
cmp
rcrl
sub
lret
lods
jmp
push
lock
stos
das
sbb
pop
pop
cmp
inc
test
mov
push
cmpl
fldl
in
mov
popa
inc
lret
iret
lods
int
adc
out
sbb
outsl
ret
lret
jne
jno
iret
data16
pop
add
jns
lds
jp
mov
ficomps
mov
out
fwait
sub
sbb
addr16
jb
sbb
xchg
pop
rol
pop
cmc
sbb
test
jmp
dec
push
repnz
fdivl
movsb
inc
cwtl
mov
pop
xor
pop
mov
popf
add
jp
sarb
repz
adc
cmp
insb
sub
mov
lcall
aad
in
jmp
adc
into
inc
mov
mov
inc
mov
and
sub
imul
insl
sub
dec
cwtd
imul
cmp
dec
ljmp
jg
insl
sub
pop
cmp
push
stos
ret
dec
fidivrl
movsl
pusha
jno
mov
and
fisubrs
xchg
dec
push
scas
xlat
scas
xchg
mov
dec
xlat
int3
add
aas
mov
sbb
fldt
ret
out
rol
xchg
pop
dec
aad
repnz
hlt
push
into
int
or
mov
aad
xor
xchg
int3
cli
or
mov
sbb
push
jbe
dec
loopne
leave
hlt
push
into
or
fdivrs
jae
fwait
das
mov
cmpl
mov
rcr
in
bound
imul
jmp
test
roll
jmp
hlt
jecxz
or
cmpsl
mov
in
ja
imul
add
in
outsl
inc
and
pop
sahf
adc
insb
lods
mov
ret
lcall
jne
cmp
rorl
js
gs
test
sti
cs
test
dec
cmp
outsl
push
popf
dec
cmc
mov
mov
mov
loope
test
lea
jle
xlat
sbb
data16
cs
add
lea
mov
clc
test
xchg
dec
cs
jmp
cs
addr16
push
lds
sti
or
dec
or
repnz
and
addr16
xlat
pop
dec
pop
hlt
cmpb
xor
movsl
fdivrl
mov
outsb
pop
push
in
lret
mov
inc
adcb
xchg
push
lods
lea
popf
sbb
out
add
js
insl
outsb
test
clc
jecxz
sub
loop
xor
fcoml
lret
mov
adc
cmp
loope
lret
outsl
mov
jge
int
dec
push
imul
movsb
dec
ficoms
adc
cmp
jb
mov
repz
das
xchg
jns
lret
mov
int
or
sub
movsb
xchg
mov
hlt
cmp
cli
push
sub
push
rol
pop
add
test
int3
arpl
mov
ficoml
adc
xchg
fcmovu
jbe
cmp
or
lds
jl
cltd
rolb
mov
jae
cmp
shl
cltd
lock
loopne
lods
into
or
mulb
xor
pop
cltd
out
idivl
shlb
mov
js
and
sbb
insl
rcrb
xchg
sbb
shl
lods
add
mov
push
decl
inc
mov
ss
sub
jno
dec
sub
mov
cmp
push
jp
enter
gs
fnsave
xor
ficomps
xchg
jo
negl
aaa
mov
leave
add
das
push
jb
dec
icebp
sbb
lea
imul
pop
lds
inc
pop
iret
out
mov
cmp
outsb
orb
push
cmovs
ffree
push
jecxz
inc
and
sti
mov
jp
push
imul
cmp
xor
dec
imul
push
scas
or
aaa
jp
sub
jns
or
push
mov
pop
loop
test
pusha
lcall
xchg
and
xchg
in
mov
cld
add
and
mov
dec
or
inc
call
xchg
sbb
ret
call
pop
xchg
scas
pop
push
out
js
dec
cmc
jl
or
mov
out
test
ljmp
fcomps
addl
adc
cs
jb
adc
test
push
cmpsb
pop
daa
add
pop
xor
push
xchg
sub
inc
idivl
movsb
sbb
leave
push
gs
pop
lcall
cmpsl
dec
push
xchg
inc
mov
sub
jns
xchg
pop
push
les
add
and
mov
into
inc
jne
xchg
rcrl
xchg
pop
add
orb
pop
nop
scas
pop
cmpsb
xor
sbb
inc
cmp
ss
dec
xchg
ktestb
cmp
mov
pop
iret
fidivrl
or
xlat
inc
inc
aad
inc
xor
jmp
sbb
cmpl
aad
ret
notb
cmp
loopne
jnp
sbb
outsl
leave
repnz
xchg
in
inc
int3
sbb
pop
push
mov
cmp
cmpsl
mov
dec
lds
sbb
and
aad
mov
cmpsb
leave
pop
or
cmp
insb
gs
add
setge
push
mov
cmpsb
cmp
scas
aaa
aas
mov
imul
repnz
dec
sub
jge
fistl
sahf
inc
fmulp
lret
cmovbe
ror
ljmp
into
ss
pop
dec
push
adc
sub
inc
inc
mov
mov
pushf
jno
data16
rcl
nop
daa
ret
outsb
int
pop
jo
out
mov
and
addr16
add
inc
cmp
cmp
int3
arpl
cmp
xor
ljmp
push
fistl
xchg
scas
and
fdivs
in
out
iret
movl
mov
cmc
pop
push
cli
or
xchg
jl
push
orb
mulb
pop
sub
mov
ror
jb
push
int3
push
mov
fistl
jo
cmpsb
nop
mov
pop
sti
mov
enter
fmuls
clc
push
jne
std
cmpsb
filds
mov
sqrtps
lret
lret
movsb
mov
sub
repnz
aad
out
sbbb
out
incb
ret
or
jle
shl
inc
push
jl
outsb
mov
lret
ret
leave
inc
push
or
jecxz
sub
push
in
outsb
ret
movsl
push
add
pop
jne
mov
pop
adc
sbbb
lds
jo
and
push
sub
dec
pop
fadd
inc
cltd
push
pop
sti
fidivrl
popa
and
cmpsb
movsb
iret
popf
enter
enter
push
fs
mov
and
pop
je
test
xchg
loop
in
push
add
cmp
push
testb
mov
mov
rcll
xlat
add
xchg
add
mov
xor
cli
push
shr
ret
loopne
out
mov
and
jp
cwtl
mov
sbb
add
mov
push
pop
mov
jno
and
pop
aaa
fdivrs
xchg
popf
xor
cmp
movsl
jne
orl
data16
test
push
leave
sub
pop
repz
test
xchg
mov
outsb
dec
pop
jl
test
sub
insl
cmpsb
mov
mov
or
in
test
outsb
push
mov
dec
ja
or
rcr
or
pop
cs
pop
ret
sub
adc
mov
stc
mov
or
in
dec
jp
repz
inc
int
cld
js
sbb
pusha
orb
imul
fcmovnb
pushf
mov
adc
mov
jg
mov
push
popl
push
xor
bound
inc
inc
add
mov
mov
add
es
add
lret
shlb
sub
popa
inc
in
cmc
mov
sub
cmp
imul
in
sub
mov
push
jle
cmp
jl
jo
inc
sub
ds
mov
iret
out
jge
aaa
stos
mov
add
cltd
dec
sub
pop
test
sahf
push
les
add
loopne
js
mov
push
push
inc
scas
fxtract
aas
mov
cmp
add
out
jne
jbe
mov
adc
cmp
push
repz
sbb
sbb
cld
mov
out
mov
pop
mov
cmp
dec
cmpsb
in
pop
gs
and
pop
mov
add
cmp
scas
pop
xor
insb
mov
ret
psubusb
push
dec
adc
xchg
xchg
pushf
int3
mov
or
xor
std
fwait
lea
out
jne
adc
sbb
push
xor
xchg
cmpsb
mov
mov
lret
push
movsb
xchg
ljmp
imul
and
or
stos
cli
adcb
out
sbb
pop
jo
mov
and
test
lahf
fldl2t
pushl
mov
in
inc
pop
arpl
loope
insb
pop
pop
imul
mov
rclb
test
pushf
bound
jp
xor
push
fsubrs
sbb
imul
clc
or
aam
fadds
inc
fwait
rol
dec
ret
push
inc
lods
mov
lods
pop
lcall
cmp
loopne
mov
push
mov
pushf
jbe
dec
push
dec
jae
andl
jle
mov
pop
or
out
jle
cld
dec
cmc
dec
mov
mov
out
or
or
add
inc
lds
mov
out
push
jo
cmp
pop
xchg
mov
popf
jae
fsubl
inc
push
push
jo
xchg
xchg
add
cmc
ja
idiv
xchg
cmp
pop
fcoms
ljmp
clc
lds
jbe
pop
scas
push
xchg
cmp
and
mov
push
lret
xchg
add
xchg
adc
lcall
mov
or
add
xorl
fcomi
inc
pop
xchg
rolb
jnp
fs
fstps
dec
and
test
push
sub
cmp
sub
xchg
hlt
not
cwtl
test
gs
push
ja
dec
inc
xchg
hlt
stc
jp
sbb
mov
sub
cmc
or
dec
loopne
ds
lret
daa
ljmp
add
aas
int3
mov
jmp
outsb
clc
sahf
out
mov
pop
call
push
lock
inc
clc
fstpt
pushf
shrb
aas
add
test
jmp
rcrl
dec
ficoms
jae
sti
inc
shll
and
push
dec
push
data16
adc
jns
pop
sub
xor
pop
mov
pop
xor
inc
pop
icebp
pop
shrb
fldenv
dec
lods
outsl
in
and
cmp
and
mov
popa
adc
movsb
outsl
out
dec
jl
clc
fcomps
cld
stos
rcrl
fldl
cmp
std
insl
and
cpuid
cmpsb
ds
fnstcw
xchg
testb
cmp
out
xchg
cmpsl
or
cmp
std
fisubl
ffreep
mov
sti
fdivs
cmp
inc
sub
sub
sbb
shlb
push
std
cltd
je
out
test
xor
add
mov
mov
cmp
sub
data16
jns
push
xchg
sub
movsb
mov
sub
cmp
add
dec
pop
inc
fidivrl
mov
sbb
cli
in
jae
sbb
aas
dec
iret
pop
mov
outsl
out
xchg
les
lds
mov
test
call
add
lahf
push
ret
cmp
in
pop
call
int3
pop
in
int3
in
es
pusha
xchg
sti
jp
ret
push
inc
jmp
test
jne
andb
jp
mov
sahf
mov
xchg
pushf
xor
bndldx
pop
bound
jg
jne
and
es
loope
xor
popa
clc
ror
ja
jmp
jg
mov
pop
mov
mov
adc
sbb
icebp
xlat
ljmp
mov
popf
push
add
push
ror
push
sub
jae
xor
repz
mov
dec
mov
push
int3
fs
xchg
rolb
iret
fucomi
sub
push
cmp
push
xor
cmp
in
push
ss
jns
jge
dec
and
pop
mov
arpl
outsl
andl
mov
push
xlat
fwait
or
test
lods
push
lahf
iret
xchg
inc
jb
pusha
cs
push
and
out
stc
mov
movsl
orl
cmp
fs
test
push
xor
dec
adc
xor
shl
movsw
insl
mov
gs
jg
inc
test
cmp
stos
test
mov
xor
xlat
inc
aad
jmp
in
test
add
mov
cmc
enter
dec
push
movsl
inc
lret
arpl
ret
inc
jg
jb
lcall
js
sub
inc
or
mov
aad
xchg
dec
sbb
inc
sbb
outsb
enter
fwait
push
push
mov
out
xchg
dec
fcompl
pop
pop
lcall
and
inc
xchg
xlat
repz
cmpsl
and
test
addr16
pop
pop
mov
js
push
pop
pop
sbb
in
inc
cmp
mov
and
mov
mov
push
dec
add
fdiv
int3
jg
js
in
imul
pop
add
xor
jbe
iret
push
test
lods
jno
lret
mov
scas
fcoms
adc
xor
xchg
pusha
shll
mov
and
jl
test
test
mov
or
inc
rorl
push
add
std
pop
inc
pop
repz
loop
sti
dec
in
jp
push
jl
inc
outsl
insb
out
lods
test
into
test
repnz
sub
sub
sub
lret
iret
das
cmc
xchg
scas
outsb
lds
mov
pop
mov
push
push
jb
cld
cmp
ss
xchg
pop
dec
stc
jg
pop
ret
call
cmp
popf
es
cmp
mov
data16
leave
int
mov
movsb
incb
and
push
xchg
inc
cmp
dec
mov
jbe
jne
psubusb
outsb
cs
xorb
jnp
iret
nop
rorb
push
mov
aaa
fldenv
push
jae
frstor
repnz
int
std
pop
negb
mov
pop
lds
push
movsb
dec
loopne
out
shlb
push
pop
stos
test
and
outsb
dec
xor
gs
push
lods
jo
sub
decb
or
popa
lods
shll
adc
ss
cmc
xchg
popa
cmpsb
lcall
ss
fsubrp
fidivs
loope
pop
imul
sbb
shll
enter
dec
insb
int
xchg
pop
xchg
fadds
and
add
jo
mov
lret
inc
loop
pusha
aas
xchg
jbe
xor
pop
mov
xchg
loop
inc
adc
loope
jno
xor
adc
mov
pop
jo
scas
pop
aas
push
jae
movsb
dec
dec
xchg
inc
inc
xlat
pop
sti
aam
in
je
lcall
and
mov
xor
dec
jmp
or
in
jo
popa
aaa
xor
jp
or
cmp
mov
fistps
mov
sub
les
in
mov
or
inc
push
adc
cli
sarb
aad
lcall
enter
hlt
adc
cmpsl
pop
mov
pop
out
outsb
fidivrl
gs
inc
xchg
mov
mov
xchg
xlat
xchg
cmp
mov
outsl
leave
sub
cltd
arpl
jo
out
lcall
les
mov
pop
fildll
insl
enter
mov
sbb
aas
xlat
pop
xlat
shl
dec
lahf
repnz
std
sbbb
jo
dec
push
or
popf
mov
cmp
mov
jb
inc
js
sub
popf
or
dec
or
sbb
ljmp
push
push
cltd
testl
stos
xorb
sbb
imul
push
into
mov
cmpsl
out
ja
jmp
cld
setg
pop
rorb
daa
imul
lods
mov
or
cmovp
mov
movsl
test
stos
js
shlb
shlb
mov
sub
aas
sahf
inc
sti
or
das
adc
pushf
and
insb
push
add
xor
loop
pop
xchg
xchg
xorb
xchg
cmpsb
sub
and
or
mov
bound
push
cmp
jb
sub
mov
stos
xchg
enter
mov
cmp
and
rcrl
mov
imulb
aad
cmp
hlt
mov
push
pop
out
push
outsl
mov
cmpsl
mov
pop
inc
or
aaa
iret
inc
push
loope
mov
jl
jl
cmp
mov
xor
daa
adc
jp
std
mov
fnsave
mov
stos
out
or
sub
sub
roll
push
dec
sbb
xchg
outsb
sub
inc
inc
in
lahf
push
mov
iret
pusha
sbb
sub
dec
pop
add
push
rep
js
or
xor
mov
jae
clc
jg
sub
aam
mov
cmpsl
dec
inc
lods
dec
pop
les
andb
outsl
sbb
xor
aam
mov
jb
out
mov
enter
dec
rolb
out
and
shll
lds
mov
lret
jmp
movsb
push
out
jge
sub
and
xorb
pop
repnz
xchg
sbb
sbbb
nop
and
add
jbe
add
push
out
mov
mov
scas
jne
mov
scas
add
add
fistps
mov
mov
push
adc
add
mov
mov
ret
adc
and
and
pop
mov
inc
inc
jo
fstpt
in
outsb
imul
dec
fdivp
aam
fmulp
adc
mov
mov
jns
mov
shlb
mov
jbe
std
sbb
cmpsl
lret
jmp
outsb
jle
iret
cltd
stos
or
mov
pushf
dec
mov
and
jo
pop
lcall
xor
insl
mov
adc
outsl
test
adc
jp
mov
in
xchg
xchg
test
scas
xchg
cmp
adc
push
xchg
cmp
mov
imul
outsb
cld
out
and
pop
fidivrl
divb
call
sbbb
mov
jp
adc
and
push
fldenv
mov
scas
ret
adc
xchg
adc
jno
xchg
js
int3
lods
mov
repz
push
insl
arpl
and
imul
or
in
into
insl
test
mov
jg
inc
push
or
arpl
dec
inc
push
lahf
negl
lahf
sub
fcoms
lea
fists
mov
je
int3
repnz
mov
mov
pop
das
mov
xchg
mov
mov
int
movd
pop
mov
xor
fndisi(8087
in
fwait
or
ds
or
and
jb
or
fimuls
and
lock
sub
push
cmp
add
xchg
mov
push
insl
dec
insl
jge
mov
jmp
jp
outsl
in
sbb
sbb
jmp
and
inc
ret
dec
in
rol
in
cmc
icebp
jae
mov
sub
cmp
mov
sbb
aad
push
inc
push
cmp
out
cld
push
mov
repnz
imul
roll
jecxz
popa
repnz
not
clc
sbb
faddl
mov
cmpsb
mov
jb
hlt
insb
mov
cld
mov
and
das
icebp
aaa
sub
pushf
sub
sbb
or
daa
and
aas
sub
sub
mov
insb
xchg
mov
movsl
mov
push
mov
or
and
icebp
sbb
inc
mov
je
or
xlat
cmp
mov
imul
fstps
mov
pop
call
loopne
jge
adc
shll
loopne
pslld
sahf
pop
fst
bnd
test
pop
cmp
scas
insl
jp
lcall
fwait
sub
pop
jbe
cmp
pop
roll
jo
cmpsl
ret
les
dec
shll
mov
imul
lea
add
cmp
xchg
daa
popf
xchg
adc
add
mov
fbld
dec
sbb
fs
mov
and
repz
pop
test
out
dec
rol
push
cmp
popf
leave
dec
pop
popf
in
mov
cmp
mov
bound
fs
lods
rcll
push
inc
or
aas
push
dec
cmp
mov
loopne
pop
or
jno
cs
ljmp
pushf
mov
mov
lods
testl
pop
lahf
xor
jnp
jl,pt
pushf
dec
cli
or
cmpsl
sub
jns
lea
add
sbb
mov
test
cltd
xor
fbstp
push
cwtl
addr16
mov
add
push
pusha
sbb
adc
and
mov
cmp
lods
lods
es
add
push
push
xor
stos
inc
out
xchg
enter
leave
sbb
xchg
jg
xchg
fwait
xchg
dec
or
gs
jns
js
sti
es
into
out
hlt
dec
sub
aam
aad
jnp
mov
push
cltd
inc
lret
iret
mov
vsqrtpd
jl
cmp
fiaddl
jmp
int
inc
fnstenv
push
jmp
adc
fmulp
mov
nop
adc
jecxz
ret
adc
mov
sbb
orb
and
push
test
sub
dec
cld
addl
or
nop
jecxz
dec
fnstcw
jae
push
dec
dec
outsl
into
pop
arpl
dec
mov
imul
insl
xchg
mov
pushf
out
cmp
dec
jp
jge
mov
idivl
dec
in
pop
test
gs
lret
mov
out
das
rorl
xchg
pop
adc
inc
fisubl
into
push
sub
xor
mov
jg
mov
out
xor
outsb
sub
in
cvttps2pi
mov
jl
int
cld
movsb
sbb
jno
and
mov
sbb
jg
jbe
pop
mov
int3
push
lods
sbb
mov
mov
mov
out
sub
inc
cltd
hlt
mov
lock
es
sahf
pop
fdivrp
jb
inc
cmp
adc
inc
ja
adc
sbb
cs
mov
cmpsl
jmp
add
out
jnp
mov
cs
xchg
mov
pop
bnd
mov
das
cmp
scas
or
inc
or
out
shr
push
cmp
inc
jge
cltd
std
aad
mov
xor
or
pushf
les
cmp
loopne
lock
fdivl
add
xlat
popa
mov
mov
add
leave
int
xchg
popf
jg
dec
aas
add
out
repnz
mov
xor
and
or
cmovne
sub
lret
orl
adc
movsl
dec
mov
jo
add
or
push
lods
insb
mov
lret
inc
idiv
push
cmpsl
rcrl
jl
add
cmc
pop
or
ret
prefetch
jno
sbb
and
sti
ds
jb
lds
pop
ja
mov
scas
pop
xor
mov
shlb
rol
clc
ret
sarl
inc
xchg
pop
loope
in
jg
xchg
ljmp
and
or
dec
jl
in
fdiv
cmp
push
bnd
je
movsb
mov
pop
cmp
push
imul
mov
lock
lods
mov
xlat
stos
sub
mov
cmpsl
adc
mov
adc
sbb
or
loop
rclb
addr16
mov
lret
add
inc
xor
orl
mov
adc
mov
xchg
popa
mov
and
jge
xor
sbb
xlat
or
mov
in
test
dec
scas
inc
cli
pop
adc
fdivrl
mov
pop
addl
push
aam
pop
cmp
sbb
dec
cld
cmp
popl
decl
jg
add
mov
ffree
jp
cmp
dec
sbb
bound
lods
enter
sbb
push
in
inc
int
pop
cmp
aaa
add
lock
xor
xchg
xorl
dec
pop
sbb
jns
mull
test
dec
pop
nop
btc
add
jl
or
mov
loop
adc
xchg
cmpsl
mov
or
jp
dec
enter
mov
sub
lret
mov
arpl
jmp
dec
sbb
pop
sahf
jb
mov
in
jb
cmpsl
scas
or
js
xor
mov
cmpsb
mov
or
add
pop
repnz
ja
in
data16
movd
ljmp
popa
lea
and
es
lcall
mov
ret
jp
pushf
repz
sahf
dec
loop
inc
mov
les
push
dec
loop
notl
icebp
jmp
lea
mov
adc
test
test
jl
add
pop
sbb
or
jecxz
icebp
adc
aad
cld
mov
cmp
mov
idivl
clc
ret
lds
pop
fdivs
or
mov
rolb
inc
leave
xchg
sbb
fcoml
mov
cmp
pop
ret
and
mov
cmp
roll
sbb
hlt
mov
jb
js
mov
pop
jno
sbb
adc
sbb
std
ljmp
inc
sarl
jle
popa
mov
aas
jbe
sahf
mov
in
pop
mov
cwtl
outsl
repz
jmp
adc
jl
mov
scas
loope
add
push
push
lret
adc
sub
add
div
push
shlb
lds
or
imul
inc
mov
mov
inc
mov
arpl
call
daa
mov
jle
shll
fnstsw
add
out
push
sub
daa
leave
dec
sbbl
imul
js
repnz
fidivs
dec
fs
sub
out
add
xor
mov
in
pushf
adc
test
test
dec
dec
jl
test
mov
xor
fwait
in
inc
fimuls
fxch
dec
and
pop
out
lahf
pop
cmp
dec
cmpsb
aaa
add
cmc
mov
lahf
jle
xchg
fsts
fwait
and
jmp
ja
push
mov
cmp
rcll
push
mov
xchg
negl
fistl
add
inc
xchg
jb
stos
push
roll
jp
repz
adc
in
popa
pop
scas
and
xor
scas
xchg
jp
test
xor
push
out
add
adc
mov
or
je
dec
dec
cmp
sbb
dec
negb
xchg
in
test
adc
stos
cwtl
dec
das
das
out
xchg
adc
xor
lea
incb
sub
and
sub
mov
cld
jns
mov
sbb
pshufw
jnp
add
mov
icebp
in
sub
hlt
lcall
popf
pusha
int
xor
mov
in
shrl
incb
push
aam
jmp
rorl
dec
out
aas
in
out
aam
add
fidivl
xchg
xchg
ret
ljmp
jno
sbb
out
pop
dec
jbe
imulb
in
enter
call
jl
inc
leave
push
pushf
cmc
pop
pushf
hlt
mov
lea
fimull
mov
pushf
pushw
push
push
jae
xor
adc
scas
mov
lods
rclb
bound
in
test
sarb
dec
and
stos
es
jbe
xor
dec
sbb
mov
subl
mov
sbb
incl
nop
push
push
mov
sbbl
jbe
mov
lret
mov
jecxz
int3
lcall
lcall
aad
dec
outsl
pop
lcall
adc
fsubrl
repnz
lahf
cmpsl
loopne
sub
sub
mov
sub
clc
sub
dec
xchg
inc
or
mov
loop
lods
dec
push
test
les
nop
sub
adc
pop
jle
add
lods
xchg
dec
mov
rorl
lcall
adc
pop
pusha
mov
xchg
push
sbb
jmp
cmp
or
rclb
push
lcall
adc
negl
int
xchg
in
cs
mov
mov
inc
ja
jl
mov
jg
push
add
mov
xlat
sbb
out
cli
fadd
insl
popa
xorb
imul
daa
aaa
dec
pop
push
repnz
mov
jno
pop
aad
out
clc
fcompl
repnz
cmp
test
sbb
sbb
bound
dec
push
aad
push
pop
jns
cmp
test
cmp
lret
loopne
lahf
xor
pusha
ret
mov
andl
or
mov
and
push
inc
mov
je
lret
pop
cmp
dec
scas
adc
dec
add
xchg
leave
jecxz
ret
jmp
jns
stos
add
lcall
enter
mov
push
fcomi
sub
cmp
mov
repz
shl
xchg
jle
orl
test
mov
shrl
out
pop
loop
in
outsb
fmuls
add
xor
jmp
out
out
pop
ret
scas
or
enter
mov
dec
cld
push
jns
xlat
stos
mov
dec
push
imul
frstor
sub
ja
lret
mov
xchg
iret
sub
adc
mov
xor
vpacksswb
in
iret
icebp
shlb
fwait
push
inc
mov
cltd
aam
fdivrl
xchg
sti
push
inc
jno
push
leave
iret
sbb
je
dec
jecxz
sub
jg
lret
push
hlt
sub
loope
dec
iret
imul
push
xlat
addr16
inc
and
pop
fdivl
lea
ljmp
pop
out
xchg
and
in
pop
lea
into
out
pop
scas
mov
testl
int
fsubrs
out
cmp
in
cld
test
and
xchg
in
in
push
push
pop
xchg
outsl
cli
adc
add
add
lods
or
and
dec
dec
mov
pop
lods
lea
xchg
sub
pop
mov
mov
rcrb
xlat
or
addr16
les
inc
adc
jle
hlt
mov
clc
les
out
fucom
loop
cmp
shll
pop
xchg
je
lret
out
outsb
sub
in
sbb
mov
xor
call
das
sbb
pusha
mov
adc
ds
push
lock
shrl
fmuls
lea
icebp
lret
insl
jge
inc
dec
dec
mov
insb
dec
add
or
fwait
test
int
mov
push
jg
test
mov
pop
gs
xchg
clc
inc
fwait
xor
mov
shl
mov
subb
push
test
shll
mov
test
xlat
rcrb
cld
lcall
in
lds
scas
shr
in
adc
mov
mov
jmp
xor
mov
cmp
add
mov
in
push
push
cmpl
xchg
sbb
or
xor
sub
inc
pop
scas
loopne
jp
pusha
inc
xlat
repz
cmp
loopne
dec
push
dec
negl
mov
adc
scas
inc
adc
cld
inc
pop
mov
adcl
xchg
pop
imul
stos
cmpsb
je
push
xor
lods
mov
ret
js
xor
jb
out
loope
xor
jp
out
add
es
fwait
pop
ja
dec
cmp
mov
xor
xchg
inc
into
or
pusha
test
adc
inc
mov
mov
inc
jp
jnp
ja
jne
mov
outsb
mov
lods
xchg
fstpl
stos
jl
icebp
pop
int3
dec
mov
js
sub
sbb
fistpl
cmp
int
mov
lcall
mov
xchg
xchg
push
je
jp
lods
cmp
adc
scas
lcall
sbb
inc
push
fisubrl
jo
xchg
dec
jns
mull
ret
sbb
mov
inc
mov
scas
cli
mov
icebp
je
imulb
daa
or
inc
push
mov
xchg
data16
pushf
ja
imul
rcll
dec
mov
jnp
lods
xlat
sbb
insl
sbb
pop
into
add
lret
adc
loopne
cli
call
add
xor
cld
test
mov
jae
loopne
sbb
arpl
cmp
or
outsb
pusha
adcb
pop
cmp
and
frstor
loope
subl
cwtl
mov
andl
aad
scas
inc
icebp
call
push
dec
mov
xchg
adc
xrelease
fwait
ja
subw
aad
mov
xchg
das
test
adcb
outsl
dec
dec
mov
out
jl
test
inc
jle
inc
fcompl
aaa
adc
sub
iret
pop
mov
imul
leavew
xchg
mov
out
xchg
daa
cmp
push
fcoml
mov
jmp
fmull
jno
mov
arpl
stos
les
loopne
mov
and
inc
ljmp
mov
mov
int3
mov
pop
cmp
xchg
jge
testb
out
out
jo
xor
out
xchg
and
lods
mov
sub
call
outsb
jmp
xor
xor
lahf
pusha
subl
rorb
stos
cmp
and
mov
add
push
nop
imul
jbe
out
jae
adc
ljmp
jno
fimull
popf
es
lock
stos
lret
in
add
mov
mov
or
pushl
rorl
loope
mov
in
inc
lahf
mov
lret
gs
push
jno
push
push
gs
mov
push
and
sahf
cli
or
leave
dec
sub
ljmp
pushf
je
out
push
shl
jmp
adc
andl
xchg
mov
stc
loopne
aam
repnz
insl
outsl
push
inc
cltd
push
cs
ja
stc
pop
mov
lods
lahf
stos
sub
mov
rcrb
or
add
aas
cld
iret
xor
loop
insl
adc
stos
das
lods
xorb
data16
push
into
push
or
hlt
mov
in
jle
aam
mov
xor
add
mov
ficompl
jg
lods
outsl
rclb
and
mov
inc
jecxz
pusha
insl
mov
xor
aaa
mulb
in
xorl
dec
loope
int3
xchg
outsb
jns
push
adcl
dec
pop
stos
xor
sub
ret
lahf
ss
or
es
fnstenv
pusha
leave
jg
xchg
mov
mov
jns
mov
rol
pop
lea
adc
inc
or
pop
sub
ret
popf
in
aas
push
bound
test
cmp
shlb
xchg
lret
aad
subb
xor
xchg
fsubrs
test
mov
mov
out
mov
and
mov
mov
sub
lods
cmp
jae
add
mov
lods
adc
dec
test
cld
xchg
or
iret
sbb
outsl
adc
je
scas
into
and
jmp
out
cld
ret
in
or
jl
nop
ret
shrb
jle
dec
dec
loop
mov
ss
lods
ficoms
in
push
xchg
or
dec
inc
mov
fldl
addl
sub
stos
push
fsubs
jo
es
lods
or
fwait
sti
fstpl
pop
xchg
xor
lods
ljmp
call
aas
inc
inc
sub
pop
test
or
ljmp
xchg
lods
iret
inc
dec
mov
or
cmp
nop
inc
cmp
jno
mov
xorb
or
test
insl
add
and
enter
ds
insb
outsl
sub
scas
jecxz
inc
cwtl
add
inc
push
shl
aas
cmp
mov
or
push
mov
pop
aam
and
inc
clc
or
pop
outsb
cltd
xor
jns
xlat
orl
jecxz
jl
das
fwait
ss
or
movsl
incb
in
es
inc
xor
mov
pusha
fs
popf
outsl
lea
inc
movsb
popf
popa
and
mov
xchg
and
and
mulb
inc
ds
idivl
ds
inc
jg
nop
daa
jns
jmp
or
subb
adc
mov
jb
xor
cmc
jbe
jge
sub
jae
jge
jge
idivl
popf
sub
cmpsl
xchg
or
jnp
shrl
in
pop
popa
cld
pop
xor
adc
cmpsl
ja
sub
sbb
dec
xlat
cmpsb
cmp
mov
ret
ss
lods
pusha
push
add
shlb
add
or
xchg
test
add
mov
cs
sbb
add
xor
mov
pop
pop
cmp
jbe
imul
cltd
jl
mov
mov
insl
fnsave
sub
mov
in
jmp
aaa
lods
mov
clc
insl
jno
pushf
in
stc
adc
xchg
mov
jle
mov
andb
stos
lods
xor
les
xlat
cmp
lret
mov
mov
mov
ja
idivl
cli
sbb
jecxz
mov
xchg
sbb
xchg
ljmp
ja
add
dec
mov
ret
xchg
lahf
push
fwait
stos
insb
mov
outsl
jle
cmpsb
cmp
sbb
sahf
popa
xchg
int3
pop
mov
adc
lods
shrb
mov
xchg
aad
adc
mov
push
nop
das
ret
mov
jb
xor
push
cli
dec
fnstcw
subl
out
sub
cmp
mov
cwtl
in
inc
mov
xor
add
and
test
fwait
loope
lea
test
jge
in
mov
shll
or
adc
mov
sti
lcall
or
add
xor
mov
push
fcomip
fsubr
arpl
xchg
imul
inc
push
mov
mov
sub
popa
bound
pop
ds
mov
fwait
mov
imul
pusha
ljmp
mov
dec
pop
cld
xchg
inc
sbb
adc
mov
pop
pop
push
sub
cmpsl
pop
xchg
and
push
inc
mov
xchg
sbb
sbb
pop
aas
mov
xor
orb
pop
pusha
add
inc
and
inc
cld
push
inc
push
jge
out
ror
popa
add
jne
and
cli
or
adc
adc
push
cli
push
adc
mov
xchg
loopne
mov
adc
stos
int3
dec
push
lods
jno
icebp
sbb
adc
fwait
sti
lods
mov
xor
loop
iret
pop
hlt
and
mov
xchg
or
sbb
int3
stos
or
pushf
push
jo
mov
pop
in
js
xor
aam
jae
fadds
aam
fstps
mov
icebp
sbbb
cli
mov
jge
jmp
sbb
fstpt
in
lahf
lret
fbstp
xor
push
mov
pop
push
lret
int3
sbb
into
xor
out
pop
xchg
add
dec
roll
das
xor
xchg
push
jne
push
repz
mov
mov
divl
cltd
fstps
xlat
into
fisubl
sbb
cs
xor
mov
add
push
mov
sbb
pop
pop
xor
adc
inc
or
adc
pop
scas
ljmp
adc
ret
mov
push
mov
cs
je
div
pushf
jo
sbb
cs
popf
in
movsl
cmp
testb
jge
aaa
inc
and
fdivrl
roll
cld
push
fbstp
add
movsl
push
mov
jbe
mov
sahf
outsb
enter
mov
leave
enter
pusha
aam
sbb
xor
and
jecxz
mov
fcmovnbe
mov
popf
cvtps2pd
jo
push
cli
xchg
out
add
sbb
push
sbb
inc
pusha
test
push
mov
out
lahf
or
fwait
xor
jp
jno
sbb
std
inc
cmc
cmp
dec
pop
divl
aas
stos
ret
inc
data16
mov
inc
pusha
or
shld
inc
push
clc
jne
sbb
out
mov
lds
pop
and
lea
iret
fwait
xchg
jl
lds
ja
mov
pusha
mov
adc
sti
and
es
pusha
inc
push
mov
movl
loope
test
dec
pop
pop
cli
or
mov
dec
mov
pop
xchg
push
or
call
mov
stc
lods
pop
aaa
outsl
sbb
mov
xchg
arpl
lods
sbb
or
xor
or
cmp
fisubl
mov
enter
pop
jmp
fisubrs
push
xchg
push
mov
or
int
and
cmp
mov
jmp
adc
inc
sub
lea
cmp
fistl
addr16
cmp
jecxz
lds
dec
jmp
ret
mov
cwtl
xor
add
lods
roll
adc
jbe
push
sbb
data16
push
mov
dec
mov
sti
movsb
loope
mov
and
scas
inc
mov
nop
rcr
pop
push
loope
sbb
xchg
stos
mov
bound
jo
add
xor
fists
jne
je
or
test
subl
into
push
inc
into
shr
pop
push
int3
jp
in
ret
fisubl
or
add
sub
cmp
std
idivl
or
pop
pop
xchg
pop
jmp
cmpsb
sub
push
push
push
fwait
push
cmc
lods
out
movsl
xorb
jnp
pop
and
sti
lcall
cwtl
mov
adc
jmp
jae
xchg
or
es
xchg
cmp
jae
imul
repnz
int
addl
ss
in
or
in
push
fidivrs
lretw
cmp
decb
sub
outsl
push
or
and
test
mov
dec
aad
clc
lahf
inc
jge
adc
push
rolb
mov
js
add
in
mov
cld
jmp
jo
fnstcw
cmpsl
ret
or
sub
push
lds
xchg
loop
loope
les
psadbw
cld
add
test
or
adc
ja
cmp
jge
fildll
and
add
pop
shl
imul
testl
xchg
inc
fmul
movsb
push
rclb
fldt
js
jmp
and
lods
jecxz
or
mov
inc
xor
std
fs
push
cmp
jp
mov
adc
and
jb
outsl
iret
in
xor
repz
sub
fldt
jp
rorb
repz
push
outsb
cltd
adc
scas
popa
fildl
jb
or
loopne
inc
fiaddl
sbb
movsb
jnp
push
xor
add
fucomip
rcrb
dec
cmp
mov
sbbl
iret
shll
dec
mov
rcl
lret
pop
ja
mov
data16
pop
std
mov
aas
push
pushf
mov
popa
inc
xchg
jg
ds
xor
mov
ret
into
xor
iret
jl
push
mov
pop
xor
sbb
sbb
je
cmp
inc
in
adc
adc
sarb
xor
pop
mov
push
sub
lds
ja
pushl
push
mov
xchg
or
lds
or
cld
add
das
mov
add
or
and
xchg
pop
das
adc
add
push
inc
and
rcl
lahf
cwtd
sub
inc
gs
iret
xor
adc
addb
xchg
pop
ljmp
sbbb
cmp
xor
mov
push
in
push
lods
mov
sbb
mov
fiadds
mov
push
cmp
mov
cmp
xchg
or
shl
nop
repz
xchg
scas
loope
sub
xchg
jns
int3
mov
out
cmc
ljmp
add
stos
jno
adc
push
in
insl
lcall
test
pop
xor
leave
sub
cmp
js
mov
arpl
cli
cmpsl
out
into
fidivrl
mov
pop
pop
sub
and
loope
jmp
leave
xchg
cmp
cmp
dec
sbb
std
into
loop
inc
test
es
jecxz
int
insb
xor
out
push
insl
sbb
fs
mov
cmp
bound
test
mov
xchg
cmc
or
jae
dec
insb
inc
pop
mov
rolb
sbb
push
mov
jge
decb
repz
xchg
imul
dec
xchg
daa
cmp
scas
je
sbbb
fadds
inc
insl
dec
scas
adc
adc
out
shl
rorb
cmp
pop
fistl
push
jae
xor
lock
mov
aam
xchg
push
inc
lods
or
xchg
cmp
adc
call
hlt
sar
bound
fcomps
adc
mov
scas
pop
inc
data16
data16
stos
sti
aaa
outsb
dec
push
hlt
cmp
pushf
gs
lret
test
sahf
xor
xchg
mulb
nop
pop
sbb
fdivl
sub
cmp
in
test
inc
inc
ficoml
insb
mov
jnp
mov
decb
or
jns
mov
pop
jno
movsb
and
dec
push
aas
lds
xor
shr
adc
and
mov
in
inc
lea
mov
jno
xchg
xchg
loopne
rcll
mov
inc
jne
out
daa
add
mov
xchg
cmp
fstl
push
mov
movsl
lock
xor
xchg
in
mov
sar
xchg
js
stos
lds
outsl
jnp
inc
mov
movl
and
add
or
mov
les
hlt
cmp
mov
aaa
dec
xor
psraw
inc
push
sub
imul
sbb
xor
sbb
add
mov
push
in
test
push
mov
ret
shl
leave
inc
fst
popa
ss
bound
das
sbbb
jbe
add
jns
xor
enter
cmp
mov
pusha
mov
push
lret
xlat
xchg
int3
mov
pop
loope
xchg
test
aas
negl
sbb
pop
inc
and
jae
mov
mov
adc
or
imull
cmp
fnstcw
or
ds
hlt
loopne
rol
push
ljmp
lcall
xchg
mov
mov
pop
pop
push
xchg
jns
ljmp
imul
add
or
pop
outsl
sub
add
mov
jmp
jnp
fcoml
pop
mov
mov
add
movsl
popa
mov
sbb
fidivrl
scas
xchg
jb
lahf
jl
cmp
incl
ljmp
pop
mov
aad
or
sti
cs
addr16
sbb
push
movsb
xchg
add
xchg
adc
adcl
fwait
aam
cltd
push
fstps
scas
cmovs
mov
pop
bound
mov
int
or
aad
bound
iret
cltd
xor
iret
sub
pop
pusha
fmull
sarw
fldcw
pop
fwait
je
cltd
mov
lret
ret
fmul
daa
iret
into
fwait
popa
push
roll
or
adc
in
add
loop
dec
cmpsb
add
es
cmp
test
into
lret
mov
sub
and
lock
lods
push
mov
sahf
std
pop
xchg
and
cltd
mov
dec
and
hlt
sub
fwait
mov
jl
mov
or
mov
loope
int
and
adc
xchg
sbb
inc
adc
addb
jecxz
out
push
cmpl
and
xor
or
push
jl
repnz
enter
jo
sbb
mov
not
inc
loopne
xchg
decl
lret
or
pop
mov
call
mov
sub
bswap
daa
and
or
bound
xchg
ror
jbe
xor
les
push
sbb
or
cmpsl
push
loop
jb
xchg
jno
cmp
sbb
mov
scas
push
cli
setle
cmpsb
xchg
clc
std
je
sub
mov
push
aad
icebp
push
dec
jge
jb
mov
or
cmp
xor
xchg
lock
sbb
mov
fstl
test
pop
sub
fs
fs
cmp
sbb
push
aaa
into
mov
push
in
ficompl
jae
or
call
out
xchg
mov
mov
add
stc
cmp
adc
push
nop
mov
popa
addl
pop
and
dec
pop
cs
and
jge
lahf
mov
or
mov
push
adc
xchg
jl
and
push
and
push
in
ds
in
loope
testl
xchg
or
dec
sbb
inc
pop
push
jno
push
xchg
add
dec
fists
loope
xchg
pusha
pushw
push
cmp
ds
shrb
mov
sbb
mov
adc
inc
mov
enter
sbb
and
mov
xchg
and
lea
js
popf
adc
jg
xchg
cmp
gs
inc
daa
cmp
pop
into
cltd
imul
inc
push
push
add
sbb
sub
outsl
push
daa
inc
fiadds
cld
cmp
stos
dec
inc
sarb
add
pop
mov
mov
jl
popf
rolb
mov
jmp
jb
mov
or
mov
mov
xchg
jl
pop
pop
mov
loopne
pop
ret
les
fisubs
pop
call
sub
out
mov
mul
iret
cmpsb
xchg
adc
pop
leave
mov
add
fs
into
nop
adc
stos
and
cmp
ja
and
ss
out
xlat
jle
lea
add
ss
jg
fsubrs
jbe
bound
mov
or
insb
or
jle
and
xor
xchg
test
inc
cmp
mov
in
fwait
enter
subl
mov
mov
sbb
negl
ret
add
add
jns
cli
sub
dec
adc
out
adc
pop
fidivrl
rorb
jle
cli
mov
in
jns
inc
cmp
insl
and
xor
ja
int
xlat
jg
movlps
pop
cmp
negl
aas
call
jmp
xchg
sub
cmpsb
sbb
movsl
mov
sarb
in
fdivrs
xchg
lret
addr16
repz
and
jg
cmp
jg
aas
outsb
fadds
dec
sbb
fnstcw
jb
cmp
jbe
test
bound
ficomps
rclb
push
cmpsl
in
daa
iret
jo
fcomip
dec
test
mov
fdivs
or
mov
in
outsb
fstps
inc
arpl
int3
sbb
adc
outsl
xchg
add
pusha
jg
je
sbb
aaa
push
sub
push
and
adc
movsl
cmp
jmp
ret
xlat
lods
mov
fwait
test
mov
push
pop
icebp
test
xor
orb
mov
mov
inc
sbb
sbbl
rolb
add
or
sbb
aaa
and
cli
and
xchg
rclb
and
imul
incb
inc
or
outsb
adc
mov
pop
push
adc
dec
iret
pop
mov
cld
adc
push
add
push
mov
scas
sub
fsubrs
add
loope
pop
testb
daa
adc
mov
adc
test
pop
pop
pop
sbb
mov
ret
in
and
xor
jmp
push
lahf
jo
ret
loope
jecxz
lods
rorb
enter
aaa
jle
inc
fmul
sbb
push
out
arpl
clc
sahf
sbbl
inc
into
call
test
scas
loopne
pusha
testl
jle
adc
ficoml
cmc
sbb
jne
pop
outsb
repz
inc
dec
adc
lea
and
lds
cld
add
lea
mov
pop
add
icebp
jecxz
out
mov
jns
mov
mov
sarb
sub
xor
aas
dec
std
xchg
push
mov
xchg
movsl
std
lret
aas
sahf
sub
int3
call
xchg
xchg
sahf
push
popf
iret
mov
js
shrl
xchg
lods
jns
clc
pusha
lock
test
fmull
clc
xchg
mov
dec
xchg
lods
fs
or
je
push
out
xchg
cli
jg
xor
jecxz
adc
and
lret
ds
cmpl
jp
out
out
sbb
stos
jg
add
daa
pop
test
hlt
lret
pop
add
mov
add
jnp
pop
je
xchg
aad
and
rol
pusha
add
and
xchg
pop
xor
push
in
mov
out
cld
pop
add
aaa
mov
push
scas
jae
mov
in
and
mov
daa
mov
adc
xor
lret
dec
std
xchg
jle
and
pop
sbb
int
jp
add
cmp
ret
mov
fisttpll
or
sub
dec
dec
and
test
std
cmp
mov
stos
or
and
xchg
clc
insb
mov
sbbl
cld
or
xor
loop
fmul
pop
shl
cmp
test
shll
test
pop
cmp
jg
pop
in
add
popa
lods
jge
mov
inc
dec
mov
js
cwtl
shlb
cwtl
insl
stos
repz
out
mov
xchg
jno
in
dec
sbb
pop
push
shl
nop
mov
and
inc
cmpb
add
sbb
adc
push
call
icebp
mov
dec
mov
xchg
sub
movsb
mov
sub
das
test
cwtl
jmp
dec
pop
bound
mov
xor
cmpsb
xchg
cs
push
push
lock
and
add
xor
andb
mov
pop
push
push
fsubl
jns
popf
stc
push
test
lret
cwtl
mov
adc
std
cltd
jns
shr
mov
sub
adc
pop
fidivs
rol
gs
int
cmpps
mov
push
icebp
incb
cmp
xchg
push
insl
or
insb
jp
sbb
add
adc
lock
push
pop
mov
mov
mov
cs
mov
sbb
pop
push
sbb
mov
add
test
lock
mov
ret
js
loopne
test
repz
cmp
cmp
push
andb
sub
test
dec
add
push
mov
imul
xchg
add
push
lds
scas
push
lods
or
mov
dec
pop
and
inc
in
jmp
inc
xchg
cltd
decb
loopne
push
bound
iret
iret
pop
movsb
jo
cmp
push
mov
sub
xor
addr16
push
mov
push
in
fisubs
mov
dec
stc
lods
ficompl
lods
or
inc
mov
pop
int
mov
je
jmp
mov
dec
ljmp
pop
sti
dec
mov
jl
arpl
sub
push
cmpsb
dec
or
das
adc
pop
jb
mov
std
fs
xchg
push
xchg
stc
popf
in
clc
xor
cli
adc
fcomps
imul
mov
jmp
outsl
add
clc
repnz
cmp
mov
into
getsec
pop
and
out
daa
jp
cmp
sub
xchg
mov
pop
mov
repnz
ror
mov
cmc
push
jle
push
in
xor
scas
sahf
mov
fldenv
pusha
enter
cmp
xchg
int3
mov
push
cmp
shl
dec
fadds
leave
les
lock
in
movsb
push
cmp
loope
shl
stos
sarb
and
das
stos
sub
xchg
in
mov
pop
aaa
dec
dec
cs
fstpt
jno
int3
fmul
inc
in
test
out
dec
enter
mov
jge
add
xor
jg
mov
sub
test
stos
xlat
fwait
sbb
pop
imul
fistpll
lock
sti
pop
cmp
cmp
push
sub
lahf
fnsave
ja
add
mov
nopl
cwtl
lods
insb
rcr
outsl
mov
lret
cmpsb
pop
cmp
outsl
cs
sub
into
repz
cmp
jg
in
enter
arpl
hlt
pop
aam
sbb
or
sub
xchg
test
jg
jmp
rol
xchg
jae
mov
mov
pop
movsl
fnstenv
dec
movsl
aaa
push
xchg
jl
cmp
sbb
dec
test
jecxz
mov
je
sub
outsb
inc
push
jae
dec
mov
push
jbe
mov
lods
popf
int
xchg
je
adc
adc
fidivs
push
inc
add
scas
xor
es
out
sti
mov
jge
pop
mov
push
adcb
push
nop
mov
dec
dec
push
in
je
icebp
mov
xor
cmp
pop
push
mov
mov
pop
dec
add
stc
mov
gs
inc
jmp
cmpsb
fsts
cld
mov
enter
pop
mov
movsb
out
pop
shlb
stos
sbb
pop
xchg
pop
out
dec
ljmp
cmp
mov
and
add
adc
std
insl
inc
into
sub
xor
lahf
push
divb
mov
dec
pop
loope
arpl
pop
decb
pushf
cmc
push
jno
test
scas
lods
cmpl
ljmp
fidivrs
outsl
jnp
pusha
test
mov
sub
sub
pusha
cmp
cltd
mov
arpl
loop
xchg
xor
adc
pop
xchg
inc
cli
int
jno
loop
cwtl
mov
test
int
das
adc
decl
leave
movl
sub
jp
cli
ljmp
dec
inc
fdivrs
mov
cmp
xchg
xor
cmpb
scas
sub
inc
loope
enter
jl
jl
sbb
adc
scas
icebp
mov
scas
mov
hlt
iret
sahf
and
pop
and
lret
lods
cmc
loopne
mov
mov
push
insb
aam
sbb
push
popf
cmp
clc
sbb
dec
mov
mov
sbb
mov
adc
ret
cmc
pop
add
jl
jg
mov
push
scas
dec
cmp
jp
enter
pop
add
jecxz
sbbl
insb
dec
in
xchg
adc
popa
push
sbb
xchg
dec
leave
pop
outsl
adc
es
sahf
fsubs
or
cmpsb
add
push
xchg
jle
imul
mov
decl
cli
insb
aad
outsb
add
fadds
mov
xchg
test
jbe
mov
int
mov
fbstp
out
in
jo
lods
inc
jecxz
add
mov
lcall
psubb
idiv
xchg
jmp
movsl
sbb
push
ss
stos
out
das
push
jge
xchg
add
or
xor
pop
xchg
pop
sbb
mov
sahf
imul
sahf
movsb
jmp
dec
loopne
or
test
sbb
stc
cmp
out
cld
dec
clc
in
insb
cmp
ret
jno
push
jno
daa
mov
pop
les
std
sti
push
jno
sti
lock
enter
call
je
aad
iret
jecxz
ret
jmp
or
fwait
adc
mov
and
jl
inc
into
gs
inc
pop
in
popf
in
or
push
jne
aad
orl
je
mov
clc
xchg
sub
push
mov
xchg
lea
sarb
inc
fiadds
pop
gs
fisubs
arpl
jmp
addl
push
in
jne
stc
nop
fs
mov
pushf
adcl
lods
out
filds
jge
and
loopne
lret
cmp
std
push
xchg
mov
lods
inc
loopne
cmp
add
arpl
insl
jnp
lcall
mov
mov
adc
ss
rclb
mov
stc
mov
push
pop
xchg
xchg
pop
ret
sbb
xchg
pushf
pop
add
insl
int3
dec
jecxz
shll
or
call
lea
sub
into
pop
xor
ds
lea
in
jp
in
push
or
add
push
int
dec
repz
aas
lret
bound
inc
dec
andl
dec
loop
aas
or
add
ret
adc
cwtl
daa
cmp
xlat
add
arpl
mov
xor
loope
dec
pop
fcom
jae
sbb
add
xor
mov
out
loop
dec
sbb
add
add
pop
movsb
sub
adc
and
xor
dec
aas
mov
mov
loope
les
add
scas
xor
stc
or
mov
mov
inc
sahf
xor
xor
inc
enter
lds
scas
dec
jecxz
sti
test
imul
rcrl
fdivl
inc
loope
mov
xchg
ficoml
jno
es
into
xor
jno
ljmp
mov
pop
shr
push
adc
gs
pop
mov
lcall
fnstenv
push
pop
inc
push
inc
fsubrs
sbb
cmp
out
pushf
loopne
movsl
loope
xor
cmp
push
inc
mov
xchg
outsl
clc
or
mov
into
push
pop
or
jp
hlt
aad
mov
xchg
or
popa
ror
and
es
stc
rcll
mov
push
adcb
xor
imul
mov
xchg
int3
xchg
mov
xor
sub
lea
jbe
leave
or
cmp
cmp
sbb
jo
cmc
adc
cs
push
push
dec
xchg
add
pushf
push
out
es
push
lods
mov
std
lock
shr
ds
mov
aaa
adc
inc
xor
int
fstp
popf
outsl
test
repnz
pop
xchg
mov
ljmp
inc
adc
mov
fldcw
sahf
mov
insl
les
ja
xchg
in
dec
and
mov
xor
xor
sub
push
push
cltd
in
sti
sti
shr
dec
xchg
inc
stc
popa
mov
push
lahf
testl
out
pop
aam
hlt
pop
jmp
movsb
scas
es
sbb
shlb
pop
rcrl
icebp
stos
ljmp
lock
ds
lahf
je
out
rep
adc
cltd
lret
sti
insb
and
addb
push
dec
inc
mov
popf
mov
loopne
jo
xor
xchg
mov
stos
xchg
jb
jle
imul
add
mov
imul
call
dec
add
pop
sahf
push
and
cld
jno
mov
inc
sub
mov
cmpsl
iret
data16
rcl
rcrl
add
xor
adc
jb
pusha
fistl
jno
in
mov
aaa
and
dec
or
es
popa
sbb
stos
xor
xor
xor
inc
pop
mov
popf
dec
pop
shll
dec
sbb
mov
sbb
ret
icebp
test
pop
addr16
push
dec
push
or
rcrb
nop
gs
cmp
mov
dec
adc
imul
icebp
push
pop
pop
mov
into
jge
jnp
out
sbb
pop
adc
adc
xchg
fs
mov
push
sbb
les
cld
pop
sub
ss
lahf
jns
jbe
movsb
stos
mov
cmp
out
rcrl
push
das
jns
cltd
mov
ja
mov
sbbl
loopne
adc
pusha
mov
cltd
push
popf
adc
sub
lods
pusha
sbb
and
adc
mov
push
stos
sahf
or
mov
fsts
adc
dec
pop
pop
ss
pop
mov
pop
or
mov
mov
enter
cmp
cmp
andl
sub
rcll
pop
movsb
cmp
ret
repnz
push
push
je
hlt
mov
or
xlat
test
pop
movsl
ret
pop
cmc
cmp
and
push
cmp
xlat
aad
lret
or
inc
in
dec
and
push
in
test
and
int
sbb
sub
xchg
jb
push
xor
lods
inc
aaa
subl
pushf
sub
icebp
adc
lret
xchg
jne
ret
movl
cmpsl
dec
fnstsw
xchg
enter
jp
mov
cmc
testb
ret
outsb
daa
xor
shlb
xchg
rcrl
or
int
or
and
rcll
mov
jo
jp
imul
cmpsb
inc
movsl
push
ds
push
adc
imul
jo
add
mov
push
mov
pop
cmp
mov
xchg
fisttpll
xor
mov
pop
cmp
mov
and
pop
push
pop
cld
fstps
mov
mov
fwait
shl
cwtl
push
mov
and
scas
xchg
dec
jmp
jnp
sub
movsb
pop
cmp
pushf
mov
mov
aas
jmp
out
pop
xchg
ss
les
dec
es
mov
inc
stc
test
fmulp
testl
call
into
sub
imul
lds
fdivs
push
push
insl
dec
flds
lret
fldcw
jbe
ret
fwait
cmpsl
fmul
rcrb
mov
rcrb
jg
stos
bound
icebp
dec
inc
cmpsl
mov
data16
scas
arpl
fwait
xor
add
popa
ret
popf
popa
mov
dec
aas
pop
in
std
add
sub
lcall
dec
push
mov
clc
les
jo
outsb
jg
mov
push
aaa
mov
mov
mov
call
movsl
mov
adc
insl
movsb
lods
or
jo
sti
jne
sub
enter
lods
arpl
and
scas
sbb
xchg
push
js
in
pop
mov
outsl
nop
xchg
cld
in
mov
cmc
dec
dec
mov
shll
cld
lds
scas
adc
scas
das
sbbb
gs
adc
cld
outsl
lcall
push
addl
inc
or
in
inc
adc
loop
imul
pop
in
je
pop
aam
xor
lods
ss
push
jle
xor
outsb
clc
or
fsubrs
fldl
push
mov
notb
or
inc
test
push
out
lcall
sbb
enter
cli
xchg
add
cli
mov
pop
int3
sub
jge
push
lea
cmp
or
xchg
jne
mov
ja
repz
dec
cmpsb
dec
int3
arpl
and
xor
mov
cmp
rcrl
cmp
mov
aaa
movsl
mov
pop
daa
pop
xchg
lds
idiv
pop
scas
push
bound
es
enter
and
aam
pop
cmp
lock
sub
leave
or
inc
adc
xchg
ljmp
add
in
sti
test
pop
fwait
add
rol
jbe
xchg
cmpsb
pop
xlat
imul
clc
imul
pushf
sub
mov
inc
out
out
gs
repnz
dec
in
cmpsb
ja
push
pop
cmp
sbb
dec
das
mov
aaa
pop
push
inc
inc
xchg
clc
call
and
push
jo
popl
incb
push
jecxz
popf
sti
xchg
stos
sub
nop
out
fcomi
repnz
cmp
xor
sub
mov
and
sub
mov
xchg
lahf
mov
scas
mov
xlat
scas
inc
cld
mov
xchg
sub
sbb
lea
or
sahf
ss
ljmp
inc
sub
addr16
shlb
sbb
cli
cld
pop
enter
mov
dec
cmp
pop
sar
pop
lea
enter
xchg
add
inc
mov
sti
adc
test
mov
repnz
mov
xor
dec
push
mov
pop
test
cmp
movsb
jb
fldcw
mov
dec
leave
push
div
adcb
inc
leave
jbe
cmp
or
and
mov
add
mov
lahf
leave
push
xchg
cmc
jg
movsl
ja
ret
test
sti
psubb
dec
lahf
in
sbb
fwait
cmpsl
hlt
sub
mov
in
push
sbb
add
push
scas
jle
repz
mov
dec
xchg
and
mov
pop
mov
imul
mov
lcall
mov
fnstsw
cwtl
or
aaa
subb
das
add
call
and
cmp
cmp
push
imul
lcall
cli
mov
pop
jl
cmp
addr16
pop
push
and
lods
loope
sbb
dec
lods
cmp
shrl
div
mov
test
mov
cmp
mov
push
jmp
adc
or
ret
leave
pop
cmc
popa
clc
xchg
fisubs
push
xor
lods
cmp
mov
mov
pop
cltd
and
fnstcw
sub
mov
jbe
xchg
push
fmuls
out
out
lds
xchg
pop
dec
fwait
dec
inc
icebp
inc
jbe
test
jg
movsl
mov
dec
push
mov
test
ret
sbb
test
loope
inc
cmp
xchg
test
push
add
xlat
into
sbb
aaa
add
pop
dec
jae
rcrl
sbb
mov
sbb
push
inc
push
pop
icebp
test
jne
xor
add
inc
adc
movsl
push
adc
pop
xor
fs
sbb
or
push
mov
mov
adcl
pop
mov
lods
bound
xor
sbb
ret
rcl
pop
sub
nop
repz
pop
dec
xchg
dec
push
sub
data16
pop
mov
sbb
int
push
push
sti
pushf
inc
mov
mov
popa
movsb
lods
push
out
pop
outsb
fadd
stc
outsb
gs
cmpsl
ret
dec
sar
add
cmp
dec
pushf
std
out
and
mov
inc
jg
jg
es
mov
aad
sub
lods
xchg
pop
in
or
imul
sub
test
fdiv
and
imul
add
sub
lret
mov
lock
mov
outsl
lea
cmpsl
jg
pusha
xchg
mov
jbe
xor
mov
fstps
rcrb
add
das
andb
negl
adc
or
cmp
pop
or
push
aad
imul
and
imul
push
movsb
mov
test
lret
sub
gs
loopne
imul
xchg
sub
jo
insb
clc
in
int
sbb
lea
stos
adc
fistl
stc
mov
mov
ret
and
aaa
pusha
clc
std
xlat
mov
scas
dec
aaa
adc
jno
jmp
test
cmc
popf
xorb
jp
push
cwtl
mov
rcrb
into
fdivrs
or
in
cmp
imul
dec
jle
xchg
mov
shld
push
cmp
xacquire
mov
movsb
or
mov
cld
scas
rcl
inc
test
add
cld
test
xor
imull
sti
ficomps
out
or
shr
addl
adc
dec
orb
or
cmp
xchg
push
jmp
xchg
repz
faddl
push
gs
pop
data16
lret
into
inc
stc
aam
adc
dec
fwait
aaa
adc
arpl
cmp
bound
hlt
scas
in
movsl
ljmp
shll
lcall
mov
popa
clc
jbe
stos
jmp
xchg
jg
adc
xor
cmovb
js
js
repz
sbb
dec
pop
adc
push
jmp
ss
stos
mov
or
testb
push
nop
in
ret
mov
scas
inc
loop
dec
insb
add
mov
push
out
adc
cmp
enter
out
mulb
xchg
xchg
adc
lret
mov
jmp
mov
ret
mov
ss
out
lret
lahf
sub
push
mov
adcb
push
mov
js
jg
pop
cmp
or
mov
and
inc
jbe
test
leave
outsb
lret
mov
mov
sub
push
lods
scas
inc
fdivrp
in
sbb
aas
lea
xchg
push
repz
mov
xchg
pop
negl
das
stc
insb
xor
pop
loope
dec
mov
outsl
jnp
fcom
xchg
lock
jnp
dec
aad
adc
repz
shrl
push
xor
loopne
xchg
pop
loop
aad
sbb
pop
xchg
sub
hlt
mov
pop
jmp
xor
mov
sbb
fdivrl
clts
mov
and
scas
mov
push
pop
sahf
cli
push
sarb
sub
push
mov
insb
add
jns
call
add
jo
mov
mov
or
lods
or
outsl
insb
jnp
fisttpll
stc
nop
pop
mov
ret
test
pop
dec
inc
mov
mov
fs
pushf
mov
stos
jne
ret
insl
cmpl
mov
push
je
cmovl
data16
xchg
int3
sub
push
sbb
inc
xchg
test
pusha
mov
sbb
mov
mov
call
pop
stos
add
xchg
aam
ja
xchg
addb
loopne
jp
inc
add
stos
sub
mov
int3
cltd
xor
mov
flds
iret
fnstenv
cmp
pusha
notl
iret
push
jge
mov
mov
push
jl
roll
in
jae
push
negb
mov
scas
mov
push
sub
push
lret
mov
pop
push
or
imul
in
pop
sbb
inc
push
add
inc
lcall
inc
fiadds
cltd
pcmpeqd
shll
lret
and
xchg
mov
inc
push
jmp
adc
xor
fiaddl
daa
js
mov
inc
inc
nop
ds
ret
arpl
scas
ljmp
rorb
ja
repz
or
das
sti
pop
and
push
pop
outsb
push
pop
mov
test
sub
xor
enter
push
jns
popa
add
in
sub
push
mov
sbbb
pushf
xlat
xor
ds
lret
repz
mov
mov
lods
sahf
test
mov
xor
aad
lret
push
int3
arpl
ljmp
mov
cmc
add
jb
pop
movsb
lahf
cltd
sahf
iret
loope
or
lds
insl
add
lods
mov
push
call
popa
decl
lret
stc
pop
jno
lods
push
out
mov
ja
shr
cmpsl
addl
push
enter
adc
cmp
sub
push
je
lds
mov
fdivrl
sub
in
lods
jle
arpl
mov
mov
xchg
xorb
jg
adc
xchg
sarb
inc
xor
fcoml
jnp
cwtl
or
push
out
dec
and
jecxz
jle
mov
xchg
inc
fisttps
shrl
push
jecxz
outsl
xchg
in
dec
pushl
dec
sbb
icebp
insb
aaa
outsl
sub
pop
lds
insl
inc
shlb
into
add
ret
and
ja
into
dec
out
test
stc
or
cs
xchg
xor
xchg
lock
mov
les
mov
popa
inc
sub
cmp
mov
in
push
xor
or
mov
into
faddl
ss
xor
mov
mov
cmp
out
pop
cltd
stos
xlat
testl
add
mov
dec
sub
lret
nop
pop
jno
add
shrb
sarl
pop
cwtl
lds
test
loopne
stos
mov
roll
sbb
test
popf
mov
ficomps
jmp
dec
cmpsl
imul
mov
pop
rorb
sahf
mov
and
sub
mov
pop
jnp
scas
stos
mov
sbb
in
jl
add
adc
add
mov
fisubl
inc
add
inc
fmull
pop
mov
out
and
repnz
jbe
adc
int3
add
xor
mov
lret
jbe
lods
je
adc
mov
cmp
int3
pop
pop
sub
xchg
cmp
ret
lahf
pop
test
inc
pop
sub
adc
dec
dec
aaa
jl
mov
push
or
cmpsb
cmp
mov
lds
outsl
or
insl
ret
jno
out
hlt
mov
sbb
push
mov
mov
and
adc
dec
inc
xor
orl
xchg
rorb
mov
xchg
sub
ss
pop
sar
mov
xor
aam
es
pop
hlt
lea
inc
mov
subb
sbb
int3
mov
ficoml
or
mov
jmp
adc
lahf
add
pusha
jl
jle
sti
sub
cmp
inc
cmc
mov
mov
sub
add
cli
repnz
jae
mov
fbstp
pop
xor
into
mov
in
inc
and
push
cmp
xchg
push
loopne
or
aas
dec
jbe
inc
loope
out
cmp
sbb
add
sbb
push
mov
mov
aaa
aas
dec
bound
aad
jnp
jmp
mov
sub
xor
lahf
jo
call
ljmp
mov
and
inc
std
test
push
add
int
stc
dec
gs
dec
push
in
nop
in
lock
mov
cmpsb
add
rorl
out
lds
rorb
inc
aad
enter
cmp
rolb
loopne
lea
push
out
rcrb
icebp
sub
cmpsb
call
mov
aas
cltd
rcr
cmp
xlat
sbbl
into
mov
mulb
outsb
in
out
cltd
and
mov
pusha
lds
lret
add
ret
hlt
jl
mov
leave
int
mov
xchg
mov
sbbl
or
fistl
lds
ljmp
scas
sbb
cmpsl
lea
jecxz
jns
outsb
and
cmc
mov
adc
ret
repz
xchg
or
jb
ja
lds
mov
and
insb
add
jo
sub
xchg
aas
test
rorb
xchg
mov
lock
adc
fcomps
mov
mov
add
mov
pop
sbbb
stc
mov
sub
dec
scas
jmp
adc
xchg
adc
jnp
cmpsl
test
jg
sbb
sub
inc
out
or
cmc
mov
lock
add
or
icebp
stc
xlat
jno
or
jns
xchg
pop
jnp
sarb
mov
in
dec
aas
test
jmp
mov
lods
jmp
jnp
das
iret
lods
ljmp
call
fdivrl
call
mov
inc
popf
jno
push
repz
dec
jb
idivb
sub
stos
imul
mov
daa
mov
insb
jne
int3
ljmp
insl
fst
adcl
push
out
adc
add
inc
push
push
mov
push
or
mov
ja
arpl
mov
or
dec
xor
push
mov
adc
pop
mov
mov
adc
lods
lds
imul
aaa
leave
cld
push
loop
daa
jae
sbb
adc
xlat
pop
fmuls
pushl
xor
bound
cmc
sahf
mov
jl
sahf
lods
dec
lcall
mov
pop
int3
arpl
xlat
outsb
mov
nop
daa
aam
push
aad
jle
mov
ret
jbe
idivl
jmp
adc
mov
cmp
inc
inc
cmp
inc
dec
cwtl
cld
mov
xor
lret
iret
cmp
sub
adc
and
mov
add
test
jecxz
aas
add
jg
pop
lret
xlat
jns
add
cmpsl
mov
fldt
cmp
sub
icebp
inc
pop
or
ljmp
ljmp
push
outsl
lods
add
and
mov
ret
jp
and
push
jmp
jp
jo
jnp
mov
rol
push
in
dec
jmp
imul
call
xor
mov
pop
sbb
movsl
pusha
dec
data16
fistps
mov
or
rorl
stos
pusha
push
mov
out
inc
mov
iret
jns
push
and
mov
popf
or
shlb
mov
push
dec
jecxz
out
scas
popf
mov
mov
lds
push
xor
mov
and
push
mov
inc
ss
add
pop
popf
and
clc
lcall
and
and
popf
sub
lret
mov
movsb
lods
mov
mov
shrb
insb
add
jbe
mov
testb
cmpsb
adc
xchg
repz
decb
mov
cmp
pop
mov
cmp
outsl
out
mov
sahf
jo
mov
mov
ds
push
out
dec
xlat
into
mov
aas
xchg
out
lods
loopne
stos
mov
xorl
shl
xor
or
mov
pop
imul
sub
out
mov
cli
mov
filds
dec
pop
sbbb
jae
sub
ljmp
jmp
bound
xchg
fwait
int3
inc
mov
mov
pop
sub
mov
jg
sarb
loopne
sub
adc
push
push
xchg
jmp
inc
ja
xor
cmc
push
mov
cmp
daa
mov
outsb
or
mov
lret
adc
mov
sub
rol
ret
mov
or
subl
int
mov
jle
lock
cmp
jne
inc
sbb
sbb
int
mov
or
jae
jg
push
roll
notl
cmp
out
imul
adc
call
icebp
push
mov
mov
sub
adc
mov
fwait
std
je
das
mov
pop
push
inc
push
mov
inc
sub
insl
jmp
push
mov
dec
stc
or
shlb
mov
ror
sbb
loop
and
and
mov
push
out
jg
daa
cmpsl
pop
and
mov
fwait
cmpsl
pop
xchg
dec
and
jb
iret
jae
ss
mov
fidivl
lds
sbb
outsl
fwait
xchg
lret
das
jg
or
xorb
push
or
outsl
xchg
out
aas
push
and
imul
pop
mov
mov
push
test
outsb
scas
test
outsb
lret
notb
jbe
rcrb
jge
bound
lock
push
lea
arpl
inc
inc
sub
jo
dec
scas
push
repnz
shl
and
dec
sub
inc
loop
ret
int
or
out
lahf
mov
sarb
test
adcl
clc
cld
gs
cltd
pop
or
push
sbb
rsqrtps
xor
hlt
mov
fcomi
xor
popa
mov
fadds
adc
sbb
jp
pop
and
push
push
sub
jp
or
xor
jo
cmpsl
ss
adc
cltd
mov
lret
adc
sbb
scas
fwait
xor
sbb
jecxz
aam
and
cmp
add
js
or
addb
nop
mov
cmp
std
cmc
cmp
je
sahf
jl
mov
ljmp
inc
lock
call
cli
iret
inc
push
push
mov
jne
cmpsl
call
inc
sub
leave
push
in
cli
test
cmp
fsubrp
ret
or
or
in
test
mov
jg
pop
pop
loopne
mov
ljmp
sbb
jns
into
es
std
jnp
mov
or
mov
nop
jge
jmp
xor
inc
sti
xchg
pop
std
repnz
sbb
pusha
test
std
mov
jg
ja
inc
fcomp
daa
pop
out
jl
dec
xchg
pop
outsb
sub
pushf
lea
mov
or
fnstcw
sub
ja
shrb
adc
mov
fwait
pushf
and
sbb
cmc
gs
push
movsb
or
jne
iret
daa
enter
dec
push
repnz
pusha
das
aam
jmp
test
mov
or
or
inc
insb
jnp
iret
cmpb
lahf
les
xorb
test
xchg
mov
cli
xchg
push
sub
repz
shrl
in
addb
rcr
xchg
pop
or
pushf
sub
mov
inc
ret
mov
movntq
xchg
pop
mov
addr16
jg
fildll
out
inc
lret
adc
unpckhps
sarb
pusha
imull
sub
ljmp
aad
jae
push
jmp
xor
sti
fwait
adc
lea
jno
sub
imul
stos
int3
xchg
and
inc
bound
dec
jl
jl
add
xchg
push
push
stc
mov
ficomps
pushf
push
out
mov
sbb
out
xchg
imul
xchg
xor
mov
jecxz
mov
icebp
adc
dec
mov
sbb
xlat
pop
in
repz
movsl
pop
cmc
add
into
xchg
sub
into
fbstp
repnz
push
push
ja
repz
push
push
insl
inc
repnz
add
fcompl
sub
push
jmp
rcl
inc
test
test
outsb
xorb
leave
cs
mov
imul
mov
sub
add
pop
lret
pop
inc
mov
pop
xchg
leave
pop
out
inc
add
xlat
repz
loop
cmpsb
fstp
cmp
pop
jmp
lcall
push
repz
add
int3
shrb
pop
adc
push
dec
xor
jle
jnp
insl
and
add
xor
dec
lahf
mov
dec
fisttpll
adc
movsb
scas
jnp
push
rcr
insb
sar
inc
frstor
out
push
aas
push
or
dec
test
lret
pop
xchg
jae
inc
dec
arpl
fmulp
push
loope
jbe
in
cmp
jmp
fiaddl
mov
push
addl
cmp
cmp
mov
in
cmp
ljmp
mov
lcall
ljmp
imul
out
mov
mov
movsl
stos
mov
ja
xchg
out
cltd
xor
mov
push
xchg
rcrl
push
enter
fwait
outsb
in
imul
inc
xlat
mov
mov
sub
xchg
cmp
pop
sub
nop
sub
sbb
sub
enter
popa
jmp
mov
and
xorb
sub
inc
dec
jecxz
push
push
mov
fstpt
int
loope
addr16
jle
add
fstpt
pop
stos
inc
pop
iret
push
scas
cmpsl
jg
xchg
ficoms
bndldx
mov
loopne
int3
xchg
sbb
xor
dec
sub
addb
fsts
push
fidivs
dec
push
es
incl
pop
ud1
mov
push
xorl
xor
xor
dec
nop
mov
ret
jl
inc
es
push
pop
mov
fnstsw
sub
pop
fs
inc
jo
sti
xchg
inc
movsl
or
repz
outsb
mov
cmc
aaa
rcl
pop
ss
gs
jb
stos
mov
mov
jmp
iret
nop
xchg
and
sbb
in
popa
mov
aaa
pop
cwtl
sub
jl
out
aas
mov
add
inc
pusha
cli
daa
jb
rol
xchg
inc
lods
dec
inc
aas
popf
mov
daa
dec
lret
sti
mov
daa
mov
inc
fnstsw
add
xchg
fldt
inc
inc
mov
mov
out
push
xor
mov
out
xor
in
pop
pop
hlt
nop
push
decl
addr16
mov
add
in
das
fs
orb
push
add
stos
fldt
adc
xchg
jnp
sub
mov
pop
jo
mov
in
arpl
imul
inc
mov
xchg
out
dec
dec
dec
cmp
cmp
xchg
aaa
into
hlt
cmp
push
lods
in
nop
jo
mov
xor
test
jbe
ret
dec
loop
push
daa
outsl
and
inc
pop
into
insl
mov
push
inc
scas
test
xchg
mov
xchg
loopne
mov
dec
pop
sub
lds
mov
cmp
jp
mov
aam
jbe
cmp
int3
mov
std
fbld
xchg
jge
jg
or
and
dec
lcall
das
out
pop
out
sub
pusha
add
notb
rorb
leave
mov
in
popf
mov
int3
movsl
mov
popl
push
xor
inc
mov
or
imul
xor
cs
sbb
imul
sbb
outsl
add
push
inc
cmp
iret
inc
xor
es
daa
je
lods
sbb
adc
shlb
dec
push
popa
jle
insl
jge
push
mov
sar
daa
mov
sti
sbb
and
popf
pop
dec
jne
inc
sbb
enter
push
aas
fisubs
and
cwtl
shrb
cmp
or
test
push
xlat
pushf
and
stos
xchg
cmp
es
repnz
or
push
test
data16
jmp
add
xorb
sar
cwtl
or
in
cwtl
incb
cld
daa
ss
jo
dec
fisubs
and
inc
xor
shr
cmpsb
loopne
inc
in
xor
inc
jmp
xor
fadds
inc
in
mov
shrl
push
pop
std
inc
mov
xchg
bound
in
and
add
pop
push
inc
fcoms
cmpsl
movsb
and
mov
mov
rcll
xor
lock
loop
rcll
aad
pusha
xor
lods
xor
test
push
ljmp
call
cmp
xor
push
inc
sahf
xchg
dec
push
push
outsl
cmp
mov
daa
xchg
pop
aad
sarb
rolb
lret
fs
int3
push
subb
mov
xorl
int3
mov
cmp
xor
ret
cltd
jmp
dec
loope
sti
push
imul
pusha
imull
inc
daa
lcall
cwtl
das
mov
addb
mov
sbb
mov
mov
ds
push
push
pusha
aad
outsb
sbb
and
push
inc
xchg
sub
dec
xchg
fdivrs
mov
dec
adc
sbb
dec
arpl
stos
push
call
sbb
cmc
mov
add
loope
movsl
jbe
pop
lods
sbbl
cmp
std
sub
ljmp
xchg
inc
lret
repz
bound
sbb
and
loopne
lock
lods
xor
es
aas
mov
add
adcb
int3
arpl
outsl
test
ljmp
rol
popf
cmc
lret
push
fidivl
scas
add
fwait
fidivs
adc
gs
xchg
adc
sbb
call
pop
addr16
mov
xchg
jmp
shlb
insl
lods
fcomi
in
inc
jg
into
popf
adc
sbb
mov
mov
push
or
xor
mov
stos
xchg
shrb
inc
sbb
aam
lock
mov
cs
rcrb
jns
lea
pushl
stos
mov
out
dec
jnp
cmp
jl
shlb
cmc
mov
lock
aas
cmpsl
es
or
sbb
push
or
in
orl
add
out
or
sahf
fs
adc
mov
cmc
jecxz
cmpsb
call
aas
push
xor
pop
sbb
mov
leave
dec
in
stos
or
scas
push
clc
sbb
push
in
clc
and
cwtl
pop
fmul
jg
je
add
cmpsl
xor
in
rcll
pop
sbb
dec
fistpl
mov
mov
cmc
loop
cmp
pop
adc
andb
bound
dec
and
inc
jge
fidivrs
push
pop
into
testb
push
test
sub
sbb
mov
cltd
in
cltd
sbb
mov
movsb
push
adc
cmp
cmp
subb
add
mov
cmp
in
imul
mov
mov
add
or
fs
add
fwait
xchg
insl
add
mov
pop
mov
popf
cmp
push
mov
mov
icebp
sbb
sub
dec
pop
iret
or
inc
mov
cmpsb
sub
pop
divl
jge
lahf
icebp
lret
mov
pop
mov
jmp
jp
rorb
repnz
shrl
xchg
push
cmp
popf
sub
fs
add
and
bound
xchg
rcl
mov
cwtl
xlat
pop
adc
loopne
sbb
add
sub
movsb
xchg
jae
or
xchg
push
scas
fldl
mov
or
hlt
mov
lret
cwtl
out
test
jne
xchg
inc
decl
add
mov
mov
sahf
sub
or
sbbb
push
repnz
inc
mov
add
filds
jp
xor
or
jo
sbb
mov
rcr
popa
mov
xlat
es
outsl
test
mov
mov
lods
xchg
jmp
icebp
iret
jnp
fildl
mov
pop
ror
adc
jnp
mov
lcall
bound
lock
mov
push
fnstenv
adc
xchg
xor
sbb
dec
shlb
and
sub
pop
sbb
inc
push
pusha
pop
cmp
mov
fldl2t
cmp
shlb
in
pop
icebp
mov
fwait
push
test
jmp
jle
sbb
scas
cmp
adc
repz
xor
cmp
jo
imul
and
mov
or
hlt
lret
jo
fsubrp
push
fcmovnu
dec
mov
mov
fdiv
dec
jecxz
cmp
rcll
lods
or
and
push
or
xchg
xchg
mov
std
jmp
pop
lock
mov
fwait
xor
bound
cmp
xchg
push
jmp
cli
shll
inc
aaa
push
xor
shll
lods
push
mov
xchg
gs
scas
lahf
imul
loop
js
test
mov
dec
dec
and
inc
sbb
jo
gs
mov
adc
out
push
push
or
cmpsb
movsl
sahf
inc
sahf
dec
jp
fwait
in
xchg
icebp
ja
xchg
leave
pusha
sbb
cli
dec
mov
out
and
iret
fwait
mov
idivb
hlt
pop
add
add
mov
jnp
sbb
or
mov
xor
mov
inc
add
scas
fwait
pusha
jge
jmp
outsl
or
popl
sub
imul
test
sub
lcall
sti
pop
and
add
pop
adc
and
xor
xchg
test
leave
gs
sbb
cli
aam
xor
sbb
test
mov
das
mov
sbb
mov
xor
cmpsb
mov
test
sub
inc
inc
mov
and
push
loopne
cmpb
cmp
shl
mov
ret
cs
inc
add
stc
xor
fistpll
push
sbb
movsl
cmp
scas
lods
js
add
mov
pop
icebp
mov
xor
test
scas
repnz
or
icebp
je
pop
mov
sub
sbb
cmp
mov
cmp
pop
repz
cltd
inc
dec
lret
mov
add
cld
xchg
test
ss
test
jmp
sub
aam
inc
fmull
mov
sbb
inc
mov
push
sub
fucom
leave
ror
call
fwait
ljmp
sarl
notb
mov
or
rorb
sti
andb
mov
iret
out
lret
xlat
mov
add
mov
mov
jl
insb
imul
ss
dec
int3
mov
loop
inc
loope
mov
test
aaa
xchg
sub
bound
dec
loopne
jl
subb
jmp
cmp
mov
mov
mov
pop
in
pop
bnd
arpl
popf
adc
or
or
lcall
lcall
lcall
sbb
mov
push
lods
jmp
pop
aad
adc
mov
fmul
cmpl
mov
pavgw
addr16
sub
jb
jb
lods
pop
jae
pop
popf
inc
stos
inc
mov
fcmovne
or
sbb
add
cmp
stc
mov
call
dec
fistps
orb
or
push
jnp
jge
mov
push
stc
fwait
rclb
aas
dec
add
fisubrs
out
rcrl
xor
ret
add
mov
fwait
sbb
inc
pop
arpl
dec
jmp
sbb
mov
imul
bound
aas
xor
dec
push
inc
in
xchg
test
rcrl
xchg
mov
insl
in
pop
mov
cmp
pop
cmp
mov
push
popa
jns
imul
insl
lock
jbe
jnp
and
sbb
sbb
push
ror
or
movsl
test
xor
pop
rcl
sbb
outsb
mov
adc
lcall
and
ficoml
cs
mov
mov
loope
xor
push
inc
adc
es
xor
xchg
lock
imulb
movsl
inc
addr16
int
repz
rcll
adcl
sbb
repz
pop
adc
jae
das
add
cmp
jp
sbb
adc
pop
push
icebp
xchg
bound
sti
ficoml
out
imul
mov
mov
pop
lods
clc
inc
push
js
push
shlb
xor
adc
dec
insl
cmp
push
outsb
mov
out
inc
push
mov
or
push
in
ss
icebp
cmp
add
mov
cmp
stos
rcrb
jno
movsb
repnz
push
ficomps
jnp
into
lea
ljmp
xorb
pop
lock
inc
fwait
lret
adc
mov
lods
mov
adc
jecxz
add
imul
fwait
pop
sub
divb
std
push
loop
imul
scas
push
fimuls
lahf
ss
jnp
jae
xor
data16
pop
data16
jp
push
imul
enter
shll
inc
and
fwait
icebp
mov
sub
shll
loope
loope
cmp
or
adc
andl
ret
dec
stc
or
dec
mov
mov
mov
xor
jmp
neg
pop
inc
mov
cmp
push
imul
cmpsb
jle
xorl
push
dec
fidivrl
addr16
aaa
lods
mov
pushf
mov
sbb
dec
sbb
int
aam
in
imul
pop
mov
in
adc
xchg
dec
mov
loopne
stos
nop
fucomip
ljmp
mov
pop
repz
dec
fldl
testl
push
ss
sbb
adc
mov
and
push
fnstenv
sbb
out
push
jg
or
adc
pavgb
cmp
adc
add
mov
mov
jnp
mov
sbb
outsb
ret
pop
fwait
xor
pop
nop
mov
adc
inc
pop
stos
mov
adc
je
sarl
in
add
mov
xchg
lea
push
adc
lahf
jns
sub
dec
lret
shlb
mov
pop
icebp
or
stos
fisubl
jl
add
jle
rcrb
mov
out
lahf
pusha
mov
icebp
pop
sub
outsl
iret
mov
cmp
aad
xchg
out
cmp
loop
sub
loop
divb
sub
mov
out
xchg
ja
xchg
add
sub
rclb
add
mov
and
dec
addr16
xor
add
ljmp
push
out
jbe
and
mov
fldenv
inc
in
cmp
adc
outsb
jb
xchg
push
stc
fdiv
mov
sbb
jbe
cltd
xchg
xor
mov
mov
int
imul
shll
lods
cmp
mov
ret
inc
repz
xchg
fnstcw
test
push
repz
cmp
lock
in
cmp
or
daa
mov
mov
imul
and
jbe
add
jl
pop
iret
ds
mov
ficoml
nop
pop
setg
ss
dec
imul
dec
mov
enter
pop
mov
lret
cwtl
pusha
cli
or
aas
fwait
arpl
repnz
and
xor
jl
shlb
les
xchg
jle
xchg
xor
or
leave
add
xchg
sub
icebp
les
pop
or
xor
lods
imul
xchg
in
pop
sbb
cmp
mov
inc
push
mulb
xor
in
cmp
xor
xor
cwtl
arpl
lcall
dec
insl
cmpsl
cli
lahf
jae
sbb
jp
stos
lds
fisttps
pop
dec
lea
outsb
xor
aad
orl
sbb
and
aad
fucomi
push
dec
clc
adc
push
out
gs
sub
pop
pop
adc
and
das
aas
test
xor
mov
inc
mov
cltd
std
mov
loopne
pop
mov
mov
decb
inc
repz
test
ret
push
daa
jp
xor
xlat
jmp
dec
bound
imul
mov
adc
pop
xor
scas
jb
mov
jmp
lds
jg
mov
pop
popf
scas
mov
inc
icebp
or
pop
mov
lock
mov
pop
jbe
lret
shl
mov
dec
insb
dec
aad
jnp
inc
gs
repz
shlb
inc
data16
out
jge
jno
rol
or
mov
or
stos
add
xor
es
aam
gs
inc
lods
mov
jo
jl
sub
andl
stc
ljmp
ja
sbb
dec
mov
push
sub
les
jle
pop
mov
sbb
andb
icebp
push
mov
test
cmp
and
notl
mov
pusha
decl
lahf
lods
xor
js
push
out
daa
sahf
aaa
ret
add
shl
fldl
pop
dec
dec
mov
mov
adc
cmpsb
cmp
sti
and
in
aad
test
xchg
push
mov
into
mov
pop
sti
cmp
insl
mov
fidivl
adc
cmp
faddl
pop
jb
sahf
sub
xor
std
sbb
rorb
and
enter
mov
pop
sub
in
inc
pop
mov
test
adc
pop
adc
dec
imul
sahf
test
cmc
movsb
cmp
inc
mov
xor
data16
push
jle
and
inc
movl
pop
and
aas
add
in
ret
outsl
cmp
add
lret
bound
cmp
push
sbb
xchg
cmp
scas
lahf
jns,pn
addr16
mov
inc
mov
push
das
or
xchg
mov
jmp
mov
xlat
cmpsb
aaa
into
out
xor
inc
adc
dec
inc
mov
dec
mov
popa
hlt
lods
inc
pop
mov
imul
test
es
imull
sar
jle
out
mov
or
repnz
or
cli
sbb
stos
cmp
loope
and
mov
jbe
cmp
aad
aam
dec
negb
addr16
jmp
lds
lahf
xor
jecxz
outsl
cmp
pop
cmpsb
jae
fildl
in
push
push
lock
std
into
mov
fcomip
push
lods
jns
dec
xor
jl
mov
or
scas
dec
mov
pop
adc
nop
inc
popa
aaa
push
push
sub
push
in
mov
testl
xor
add
mov
pop
imul
jecxz
xor
dec
sbb
pop
arpl
sbb
sti
mov
inc
mov
mov
mov
xchg
lock
jb
and
pop
push
call
pop
stos
outsl
jge
jp
jb
imulb
add
mov
mulb
movb
push
jl
xchg
mov
int
out
sbb
stc
ret
dec
jbe
xor
movsb
les
sahf
fnsave
or
jno
jns
mov
rcrb
bound
test
pop
jmp
dec
pop
push
ret
jnp
mov
cld
add
push
cmp
mov
imul
mov
add
loope
sbb
pop
xchg
loope
mov
test
shlb
pop
jno
icebp
mov
xchg
loopne
add
sub
cmpsb
pop
add
mov
and
std
push
add
mov
xchg
jecxz
add
push
adc
push
sub
iret
mov
pop
xchg
iret
jg
loope
inc
fadd
subl
mov
add
mov
push
lea
mov
popf
push
jbe
js
popl
loop
pop
and
xor
sti
xchg
jnp
jmp
or
xchg
js
aad
into
fldcw
push
icebp
sub
xchg
jae
dec
into
mov
loopne
addr16
adc
negb
cmp
aas
dec
inc
imul
add
es
push
or
lahf
jmp
lea
insl
mov
test
mov
inc
nop
shr
shll
xchg
push
sbb
jecxz
cmp
rolb
pop
sbb
jne
pop
mov
jmp
pop
xor
andb
push
loop
test
add
mov
loopne
add
loope
loope
push
xor
not
cmc
clc
jns
mov
cs
push
xchg
lret
dec
decl
sbb
pusha
cmp
mov
imul
inc
sbb
std
pop
xchg
jb
jno
add
jbe
aaa
adc
cmpsb
ret
xchg
push
jmp
in
das
cli
out
movsl
stos
jmp
mov
jp
inc
loopne
mov
sub
mov
pop
dec
sbb
subl
out
jmp
or
cmp
inc
fstl
imul
repnz
or
je
adc
lea
pushf
xor
mov
stos
jnp
repnz
pop
jns
lea
lcall
add
xor
jns
or
mov
pushf
adc
cmc
xchg
out
push
sbb
popa
mov
sbb
loop
sbb
jnp
sub
out
pop
push
inc
pop
push
dec
cld
movzbl
ds
add
es
in
aaa
or
xchg
push
inc
push
cmpsl
jo
loope
sahf
push
test
imul
int3
xchg
js
ljmp
fstpt
or
xchg
mov
shrb
fisubs
aas
add
mov
fmuls
test
movsb
mov
cmpb
pop
and
cmpsl
aas
pusha
inc
sub
jae
inc
cli
sub
dec
lret
ret
sub
mov
outsl
test
loope
xorb
push
orl
sub
daa
ljmp
incb
xor
mov
add
mov
aad
int3
lret
push
inc
aad
stc
cmp
and
cmp
or
and
pushf
pop
xchg
or
push
cltd
cmpsl
xor
nop
mov
add
repz
or
or
fmull
pop
cmp
and
outsb
and
popa
xor
mov
push
test
push
mov
rcrl
leave
pop
sub
arpl
cmpps
xor
int
push
or
into
cmpl
cld
push
lds
ljmp
ror
jl
xor
insl
mov
sbb
ja
outsb
cli
sub
popf
icebp
adc
arpl
aaa
sub
adcl
jle
pop
mov
xchg
or
xor
mov
add
in
nop
xlat
adc
aam
jo
scas
int3
fucomp
push
cld
test
movsb
mov
shr
or
loope
cmc
push
lahf
or
daa
sub
add
nop
mov
and
faddl
xchg
jns
and
cmp
cltd
call
lret
adc
and
in
out
out
bound
xchg
inc
movsb
iret
icebp
fsubrl
xchg
pop
add
cli
sub
pop
cld
xchg
push
mov
mov
pop
or
dec
rorl
repnz
das
shrl
or
sub
repz
push
sub
xchg
bound
sbb
arpl
jge
push
cmpsl
daa
jnp
sub
js
dec
mov
push
cmp
inc
or
movsl
cmp
pop
jne
adc
test
aam
ja
scas
inc
xor
lret
mov
dec
outsb
add
les
mov
pop
cmp
ret
xchg
sub
xor
mov
sub
xchg
popf
and
ret
cwtl
pop
pushf
xor
xchg
cs
pop
xor
test
sbb
ds
xor
call
arpl
push
shll
mov
jg
dec
outsb
sahf
push
xor
xchg
jmp
mov
or
push
mov
das
dec
rcll
sbbl
hlt
mov
int
inc
xchg
std
adc
sbbb
cmc
aas
ficoml
daa
cmp
call
push
xchg
lret
jmp
dec
sbb
test
or
bound
xor
cmp
jne
fldt
jmp
out
dec
mov
lret
xor
and
push
jbe
aad
cmp
loop
sbbl
sub
adc
mov
push
call
mov
push
pop
dec
lcall
xchg
jmp
xor
fimuls
cmpsl
aam
imul
mov
or
fmuls
fwait
cmc
loop
mov
out
and
pop
jmp
add
call
adc
jge
es
xor
xchg
push
test
mov
inc
cmp
pop
icebp
adc
hlt
jg
mov
mov
jl
xor
nop
fnsave
cmp
mov
adc
xchg
test
js
or
dec
dec
mov
dec
pop
mov
push
enter
dec
add
jnp
xchg
lods
jmp
xchg
sbb
adc
or
jmp
add
out
aaa
mov
loopne
fnsave
pop
addl
test
jae
enter
pop
ljmp
jno
repz
mov
test
adc
dec
lea
and
inc
stos
or
jecxz
outsl
sub
roll
xchg
es
jns
dec
sbb
sbb
adc
sub
xlat
movsb
pop
or
lds
xchg
sub
out
loope
popf
xor
aas
xchg
movsl
insb
fnstcw
fdivs
pusha
xchg
push
push
push
mov
fnstenv
testl
hlt
push
add
and
add
daa
push
out
aam
negl
nop
cmpb
mov
test
fistpl
ret
xor
stc
push
sub
lcall
call
xor
sub
inc
push
pop
dec
fnstsw
or
in
xlat
dec
mov
mov
pop
addl
mov
cmpsl
xlat
shl
imul
in
arpl
xor
xor
stos
inc
adcb
repnz
stc
popa
lods
mov
cmpsl
ret
sub
mov
and
lahf
mov
lahf
inc
jno
out
or
mov
lods
xor
movd
sub
outsb
or
daa
insl
mov
mov
std
shll
data16
daa
and
dec
dec
mov
insl
push
out
add
insl
xchg
mov
inc
push
ds
fstpt
das
int3
and
aad
mov
stos
rclb
cs
xchg
mov
test
mov
lret
insl
lret
bound
mov
mov
ret
xchg
push
lret
adc
xchg
dec
in
sahf
mov
in
or
outsb
fcmovu
jp
mov
mov
add
adc
jnp
mov
mov
fbstp
mov
dec
aaa
dec
jmp
mov
adc
jne
adc
icebp
cld
push
push
adc
push
dec
fidivrl
push
sahf
mov
push
inc
push
fdivr
rorl
pop
push
fcomi
ret
pop
and
xor
jb
pop
push
push
xchg
xor
aam
rcrb
xchg
dec
jge
scas
test
xchg
ljmp
mov
mov
pop
jl
out
icebp
popf
loop
loop
jnp
into
add
ja
jecxz
outsb
dec
subb
push
sub
inc
xor
xor
stos
jmp
xchg
fs
push
adc
jecxz
cmp
cmpsw
add
lea
mov
sbb
xchg
pusha
mov
mov
inc
pop
cwtl
fwait
push
movsl
inc
cmp
sahf
mov
sub
xchg
aam
mov
mov
adc
or
gs
lods
mov
ret
and
call
add
mov
xchg
sub
and
push
int
stos
notb
add
cmp
jne
sub
neg
add
sbb
mov
mov
mov
pop
pop
std
cmp
nop
roll
dec
out
pop
stos
mov
xchg
test
cmp
loop
xorb
mov
scas
adc
int3
jg
mov
clc
sub
mov
xchg
mov
lcall
cltd
incb
notb
push
in
cmp
pop
or
add
ss
adc
scas
cmp
mov
inc
pop
lods
jmp
mov
imul
imulb
adc
mov
inc
push
lock
xor
adc
aaa
push
mov
jae
out
loopne
ret
pushf
and
and
push
fs
sub
mov
cli
sarl
xchg
movsb
inc
and
js
mov
int
psubsw
test
xchg
sbb
lea
xor
add
stos
and
dec
pop
mov
cmpsb
incb
popf
out
mov
mov
std
or
pop
mov
out
and
fdivl
test
xor
pop
rcrl
ljmp
pop
call
and
inc
lock
inc
stos
insl
push
mov
mov
scas
lock
pusha
dec
pop
cmp
orl
mov
pop
call
xchg
out
pusha
sbb
add
pop
test
push
insl
push
adc
inc
pop
imul
sbb
cmp
add
push
fimuls
bound
js
add
nop
inc
jl
sub
mov
popl
sub
pop
pop
jmp
call
mov
dec
enter
xor
pop
xor
into
jbe
das
adc
sub
mov
shlb
rcrb
mov
sbb
jns
aaa
dec
jl
inc
push
pop
test
mov
push
dec
sub
roll
mov
push
push
mov
jno
out
aas
loope
orl
pop
and
sub
iret
ja
fldt
stos
cmp
xchg
ret
out
mov
and
mov
movsl
cmp
dec
dec
in
addr16
stc
out
cmp
mov
in
inc
dec
and
cld
push
jb
andl
jecxz
test
mov
std
xchg
jbe
adc
jns
js
ret
andb
pop
dec
mov
ljmp
mov
inc
adc
sbb
jno
pop
mov
add
add
adc
out
lods
shlb
fldl2t
mov
sbb
sub
lock
rorb
nop
mov
mov
mov
fstps
insl
out
cmp
sahf
cmp
mov
xor
jns
hlt
mov
xlat
push
sahf
mov
insl
mov
cmpsb
inc
lfs
out
dec
loopne
xchg
cmp
sbb
sti
or
mov
xchg
pop
loopne
xchg
or
mov
sbb
je
cmp
mov
in
push
dec
enter
push
pop
jae
mov
out
or
mov
out
jbe
in
std
xchg
cmp
shrb
call
popa
xor
mov
shr
popf
jle
and
pop
adc
sahf
sub
push
cmp
jge
lods
dec
out
pop
test
in
mov
das
and
adc
or
int
repz
push
jno
inc
sub
xchg
jmp
dec
xchg
xor
dec
mov
lcall
mov
dec
jge
and
setg
jle
and
push
push
and
sub
xor
fidivs
lods
mov
and
mov
pop
in
push
outsb
stos
enter
pop
in
push
lods
fcmovbe
movl
xor
insl
add
mov
mov
loopne
pusha
addr16
xor
out
das
loopne
xchg
adc
mov
das
in
sbb
xor
mov
aad
lods
hlt
dec
and
sbb
jo
jp
push
repnz
sbb
sub
daa
inc
sarl
int3
loop
lcall
int3
xor
sub
repnz
pop
push
into
push
xchg
insl
mov
mov
cmp
mov
movsb
daa
inc
hlt
mov
xchg
gs
and
sbb
xor
movsl
jb
loopne
mov
xor
push
push
nop
loopne
push
notb
inc
movsb
pop
add
popa
test
push
add
xor
dec
leave
mov
fimull
or
shlb
push
test
mov
mov
call
mov
ret
mov
test
movsl
xchg
cmp
xchg
inc
cmpsb
mov
xlat
gs
pop
call
mov
pop
mov
and
enter
notl
aad
mov
mov
push
shlb
mov
leave
fstpl
sub
jmp
dec
mov
sub
cmp
and
cmp
inc
pop
jne
xchg
js
mov
mov
sub
int
dec
loop
cld
push
repnz
xlat
push
outsl
xchg
lret
cld
mov
sbb
es
xchg
lcall
outsb
add
inc
xchg
loop
call
mov
cmc
sub
push
in
sbb
xchg
adc
rorb
adc
dec
mov
notb
sbb
les
jbe
push
jb
test
les
xchg
mov
in
xor
mov
adc
call
or
mov
cmp
fcoml
xor
cli
or
mov
inc
sbb
arpl
dec
pop
mov
and
fcoml
push
sbb
std
sbb
loopne
sub
inc
mov
push
lods
call
cltd
repnz
aaa
inc
out
mov
and
test
pop
loope
ss
push
gs
mov
dec
bndstx
stos
inc
out
adc
xchg
mov
xchg
addr16
mov
sub
and
rcrb
inc
dec
mov
mov
in
test
ja
test
sbb
das
insb
jmp
adc
cmp
mov
rcll
sub
ds
pusha
adcb
std
dec
int3
arpl
jne
fimull
inc
mov
mov
push
cmpsb
mov
rcll
add
inc
sarb
stos
inc
push
andl
into
push
dec
xchg
cmpsl
and
loop
pop
out
mov
push
mov
add
push
xor
shr
or
push
sub
mov
dec
jecxz
je
inc
xlat
dec
cmc
mov
ret
lods
int
std
dec
loopne
ja
mov
insb
or
insb
xchg
lds
inc
add
lock
xor
in
sti
inc
dec
fnstenv
push
je
insb
cld
and
pushf
xor
mov
mov
push
jp
lret
nop
adc
jne
inc
push
jbe
push
jb
pop
adc
push
repz
test
jp
sbb
mov
in
xor
xchg
mov
fistps
scas
cli
adc
ss
mov
mov
shrb
add
and
fimull
in
clc
test
sub
call
mov
and
cs
cmp
xchg
cmp
js
jmp
and
data16
std
xchg
sbb
fs
mov
mov
xchg
push
or
cs
mov
scas
mov
daa
inc
push
pop
jo
mov
lds
mov
adc
mov
int
inc
xchg
outsb
cmp
adc
imul
sub
stos
cmpsl
mov
mov
push
mov
data16
loope
mov
in
add
mov
pop
outsb
pop
mov
mov
dec
movsl
pop
loope
aas
shl
fisubl
dec
adc
lret
adc
sbb
popf
and
lods
mov
fnstenv
test
adc
or
rorl
or
loope
andb
add
jne
pop
insb
fistpll
and
test
ds
or
inc
mov
jmp
cmp
mov
push
sub
adc
pop
shr
pop
sbbl
dec
push
jmp
loopne
adc
mov
mov
jns
sarl
or
xchg
sub
loopne
mov
or
mov
daa
mov
je
add
js
test
not
mov
xchg
movsb
mov
es
jne
hlt
mov
jg
sub
push
scas
mov
jmp
enter
mov
jno
popa
mov
andl
or
pushf
rol
jge
inc
loop
sbb
fcoms
cmp
insb
push
enter
jb
lret
fsubrl
inc
fiaddl
enter
and
fmul
popf
imul
out
arpl
ficompl
mov
dec
sub
or
loopne
stc
jnp
insl
lods
adc
sbb
mov
lock
adc
push
cmc
ljmp
jns
jg
test
bnd
lods
sbb
jne
mov
add
push
lret
mov
add
jbe
out
dec
sbb
push
ja
imul
ret
pop
sbb
cli
cmpb
aad
subb
test
dec
inc
aad
cs
movsl
dec
loope
repnz
fwait
jle
push
lret
cld
sar
xor
push
out
pusha
and
loope
or
call
adcb
mov
lock
aaa
sub
insb
push
int
setp
test
cmp
lock
stos
xchg
sub
scas
lds
inc
pop
out
mov
adc
leave
hlt
bound
and
push
shrl
xchg
ds
dec
ss
xchg
jle
push
pushf
hlt
or
pop
sub
mov
cmp
push
pop
scas
mov
or
jmp
std
xchg
mov
push
cmpsb
testb
push
test
popf
adcb
movsl
test
aam
mov
nop
cmc
mov
push
pop
mov
cmp
jl
std
loop
aad
lcall
and
cltd
mov
sbb
sub
in
fld1
push
ja
push
sub
pop
pop
jo
movsl
insb
sub
mov
mov
lret
fucomi
movaps
loope
sbb
nop
dec
test
sub
and
hlt
add
xor
xchg
ror
cltd
out
jl
scas
test
dec
iret
inc
in
jecxz
jl
sub
insb
xchg
cmpsl
and
rcll
pop
push
mov
add
daa
inc
mov
push
pop
dec
push
clc
mov
mov
in
out
push
pop
xchg
popf
aad
mov
sar
inc
data16
test
pop
ficoml
dec
in
jg
jbe
std
insb
add
les
cmpsb
mov
into
sub
pop
shl
aaa
adc
inc
fadd
dec
icebp
movsb
dec
outsl
arpl
mov
add
push
iret
scas
jnp
aad
out
sbb
sbb
mov
aas
jno
jecxz
mov
mov
sbb
loope
das
jne
and
pop
fsubs
icebp
mov
push
dec
mov
in
xchg
or
sub
clc
test
shl
mov
aas
rcrb
inc
mov
mov
je
enter
xor
subb
test
stos
push
fcmovnb
popa
or
addr16
add
xor
add
icebp
jle
lods
outsb
dec
out
lds
imul
roll
js
cmpsb
lods
mov
mov
lret
in
xor
jle
repz
in
sub
fdivr
testl
xchg
sbb
pop
cwtl
mov
leave
sbb
std
insl
adc
jl
add
pop
testb
imul
dec
scas
sbb
adc
cli
cmp
adc
cmp
icebp
pop
cmpsl
and
xchg
ret
or
pop
cmpsb
roll
in
xor
inc
nop
lods
movsb
fwait
xor
lret
insb
movsb
inc
mov
fsubs
xor
pop
out
push
subl
sbb
jae
test
dec
addr16
add
mov
dec
xor
iret
jne
jae
cmp
cli
test
cmp
addl
in
mov
iret
imul
sbb
mov
sub
ret
jle
jecxz
out
repnz
subl
in
popf
outsl
or
mov
sbb
push
out
or
cmp
ja
cltd
jg
lret
adc
jp
pop
gs
imul
xchg
rcrb
cld
xor
push
xchg
inc
add
aaa
xor
sub
adcl
stc
xchg
lea
in
cmc
test
inc
jl
aam
fsubs
ja
out
cmp
push
adc
jecxz
aas
loope
jmp
andl
mov
stos
push
or
mov
mov
jle
jmp
push
and
pop
arpl
add
add
mov
fldcw
aam
iret
in
mov
cmpsb
inc
mov
sub
hlt
jb
sbb
pop
or
or
cmp
inc
in
push
aaa
int3
push
neg
data16
into
jne
sahf
in
pop
rclb
mov
ss
cmpsl
out
test
or
xchg
fcmovnb
loopne
cmpsb
fldcw
wrmsr
repnz
fbld
push
mov
aaa
mov
stos
mov
insl
xchg
ja
mov
xor
pop
xchg
mov
jmp
ja
jecxz
dec
aad
dec
or
test
mov
outsl
jns
mov
adc
outsb
push
ljmp
add
pop
lock
dec
pop
push
add
pop
test
xchg
sub
jnp
sub
lods
fwait
xchg
inc
lahf
es
aas
dec
or
cmp
adc
lret
xchg
gs
int
outsl
push
and
daa
cmp
loop
dec
adc
xchg
cmp
push
lea
xor
and
popa
inc
loopne
ret
std
addr16
xchg
jge
pop
mov
aad
jnp
imul
jecxz
cs
repz
into
cld
xlat
mov
rorl
test
inc
sbb
insl
dec
push
inc
fmull
sbb
jbe
mov
in
loope
call
mov
in
idiv
insb
inc
ret
shll
mov
xor
dec
lods
sub
fucomi
aad
fmul
push
pop
std
ds
cmp
aas
inc
fdivl
js
repnz
arpl
xchg
or
ret
cmp
push
or
cmp
xor
mov
lcall
clc
dec
fs
call
adcb
lahf
lods
negl
jne
fists
loope
clc
mov
jecxz
jno
mov
add
repz
xchg
hlt
andb
inc
add
movl
xchg
lods
or
rcrb
movsl
sub
loop
sub
ss
xchg
jb
push
pop
out
ljmp
cmpsb
pop
jo
add
push
andl
fs
fs
pusha
out
pusha
dec
decb
sbb
inc
jb
cld
pop
or
xor
mov
pusha
mov
adc
sub
sbb
jmp
popa
sbb
repnz
mov
xchg
inc
sbb
fsubr
mov
jmp
sbb
or
aam
adcb
adc
pusha
sbb
add
push
jmp
sbb
mov
mov
pop
sbb
add
sbb
push
scas
popa
dec
jecxz
cmp
enter
adc
loope
cmc
pop
out
fs
push
mov
sub
cmp
xchg
loopne
push
mov
fldcw
in
clc
sbb
js
sub
mov
dec
addr16
xlat
add
lret
inc
cld
adc
mov
inc
xchg
fucom
mov
fnstsw
out
sbb
filds
mov
push
pop
mov
mov
inc
cmpsl
sub
bound
jno
mov
pop
imul
or
aad
adc
aaa
mov
or
cmpsl
mov
push
pop
scas
cmp
test
les
les
adc
pop
daa
xor
jg
xor
mov
icebp
mov
in
inc
cli
mov
leave
loop
cld
mov
jmp
pop
and
inc
fcomps
mov
cltd
sub
clc
lret
icebp
popa
sbb
mov
shlb
shrl
inc
andl
cmpsl
sbb
sub
loope
cmp
adc
test
dec
movsl
mov
inc
cmpsl
or
dec
or
add
adc
shl
push
jne
xor
daa
cmp
or
mov
in
clc
cvtps2pd
inc
pop
mov
sarl
js
push
cld
push
mov
sbb
sub
loope
jle
rcrl
lods
inc
filds
int3
arpl
mov
push
xor
inc
add
je
or
jecxz
add
push
add
cld
mov
sub
sahf
stos
orl
sbbl
xchg
cltd
or
fstl
cmp
mov
pusha
sarb
ret
insb
jmp
pop
push
jmp
loopne
lds
cltd
jmp
decb
mov
pop
adc
aam
jg,pn
loope
sub
adcl
or
mov
xchg
out
sub
mov
pop
sahf
cmpsl
dec
aad
movsb
outsl
mov
push
test
mov
in
loope
ds
cmpsl
jmp
push
inc
xchg
sbb
aad
jns
jns
push
in
iret
sbb
cmp
movsb
inc
call
mov
mov
shlb
aad
push
mov
jae
sbb
outsl
add
scas
notb
mov
scas
adc
arpl
adc
ss
icebp
repz
nop
and
mov
ss
cmpsl
mov
mov
clc
push
ret
stc
mov
adc
xor
push
movsl
stc
push
xchg
mov
xchg
sub
ret
and
mov
sub
scas
xorb
dec
pop
mov
rcll
or
imul
lock
jg
jb
xchg
stc
jne
adc
repz
lods
ret
xchg
mov
iret
adc
ljmp
add
rolb
repz
xlat
sarb
in
jnp
mov
mulb
scas
add
jle
faddl
scas
mov
fidivl
js
addr16
pop
insl
xorb
mov
mov
add
shrl
cmp
testb
xor
jne,pn
add
add
xor
pop
in
orl
or
pop
sbb
mov
push
aam
mov
and
and
cwtl
pop
push
jmp
push
cmc
jo
cmp
mov
aad
leave
lret
bound
and
sub
jne
xor
cmp
jne
lcall
and
mov
aas
les
and
push
xchg
or
jne
jb
enter
pop
popf
loopne
cli
xchg
sbb
jge
or
pop
mov
add
lahf
jns
xchg
mov
xchg
sbb
cltd
icebp
int
mov
jg
push
lock
push
inc
lock
hlt
or
xor
mov
xchg
add
mov
xor
or
idivb
daa
subb
pop
sub
sbb
push
adc
iret
gs
shr
sbb
ds
jl
and
cmp
fisubs
pop
in
push
pop
orb
add
adc
dec
jbe
mov
mov
arpl
or
test
jle
ret
adc
cld
or
mov
mov
pop
xchg
pop
sbb
sahf
push
lods
lods
sbb
sbb
mov
ja
aad
xor
cmp
in
les
addb
test
clc
mov
es
lock
enter
ljmp
lods
clc
insl
out
cmp
pop
clc
out
popf
js
lea
xchg
enter
in
cld
add
es
push
das
in
ret
iret
fimuls
in
stos
mov
xor
adc
dec
repnz
jmp
or
hlt
lret
popa
pop
add
push
inc
and
das
sbb
adcb
dec
repz
test
loopne
dec
es
jo
or
sbb
push
mov
rorl
mov
imul
sahf
movsb
mov
jo
push
popf
sbb
mov
out
xchg
test
daa
cli
lcall
sbb
outsb
sub
dec
std
mov
pop
lcall
popf
insb
xchg
jae
enter
inc
fs
gs
mov
inc
shlb
push
pop
movsl
testl
aad
mov
scas
jns
adcb
mov
or
in
dec
stos
sub
add
jmp
and
loope
xchg
pop
mov
cmp
idivb
and
dec
fwait
pop
xor
mov
push
pop
xchg
out
add
mov
xchg
jmp
and
cld
fsubl
adcl
push
sahf
movsb
xor
xchg
mov
jo
lods
incl
mov
xchg
cmpsl
adc
repnz
in
add
inc
push
mov
add
cmp
pop
fsubp
mov
int
aaa
push
movsl
inc
cmc
scas
jp
sub
leave
sub
test
jb
adc
sbbb
jge
dec
pop
scas
aam
ja
movsb
mov
jne
add
push
add
inc
inc
in
call
lahf
divb
daa
rol
scas
lret
jae
repz
popa
xchg
in
sbb
aad
adc
es
jl
mov
mov
sub
inc
sbb
orl
call
adc
sub
daa
mov
adc
fidivs
inc
dec
incl
shlb
adc
and
xor
and
fnsave
fmull
push
xor
sahf
insb
insl
mov
outsl
dec
and
xor
shll
or
jne
push
or
aad
pop
jmp
push
cwtl
ret
push
dec
sti
or
sub
pop
jmp
aam
fsubr
push
test
ljmp
cld
sub
push
or
fwait
jecxz
outsl
and
jb
fcoms
inc
jns
dec
out
std
adc
fimuls
adc
jle
loopne
nop
das
xor
repnz
adc
sbb
dec
add
fs
and
mov
int3
pop
rcrl
mov
repnz
das
in
xchg
imul
repnz
in
inc
data16
jmp
pop
mov
enter
dec
xchg
arpl
mov
cmp
mov
adc
pop
or
inc
add
pop
pop
mov
popa
xor
scas
mov
int
mov
add
pop
sub
or
pop
jno
fwait
sub
xor
js
push
push
sub
push
ret
aaa
scas
xchg
and
pusha
inc
cltd
imul
das
xchg
insb
aam
jo
fwait
stos
hlt
mov
jp
in
fwait
inc
xchg
lret
test
cltd
in
xor
sbb
sbb
jnp
lahf
mov
jo
add
jp
mov
ficoms
xor
cmp
orb
jge
sbb
xor
push
insl
add
leave
shrb
and
in
jle
jne
mov
insb
pop
jmp
out
das
push
in
test
or
dec
mov
fs
iret
dec
cmp
sub
push
jmp
cs
inc
into
dec
idivl
sub
adc
cs
jge
add
push
cs
sub
lock
jae
sub
xchg
daa
or
sub
je
adc
pop
sbb
fucomip
cmp
and
fisubrs
sbb
mov
pop
cmc
dec
pop
mov
fs
pop
iret
cmp
jmp
loope
mov
fildll
pop
imul
push
imul
xchg
xor
pop
dec
mov
lds
in
out
aaa
adc
jecxz
dec
fdivp
stos
or
cwtl
fwait
loop
sarl
xchg
in
dec
shrb
mov
cmp
lock
movsb
push
mov
test
sbbl
gs
jae,pn
sbb
adcb
in
mov
jo
insl
rolb
xchg
inc
fstps
mov
xor
adc
lahf
mov
pop
lock
in
sets
pop
xchg
sub
sbb
mov
repz
mov
mov
fsts
lcall
cltd
sbbl
pop
mov
jl
addr16
rcrl
push
fcompl
xchg
mov
xchg
xor
adc
rorb
or
pop
and
mov
rcl
inc
fisttps
xchg
data16
push
scas
fildll
mov
movsl
icebp
adc
or
fwait
cltd
out
rcrl
mov
dec
bound
xlat
inc
clc
and
in
fcoml
mov
or
push
push
or
xchg
mov
sub
loopne
sbbb
ret
cmp
xor
lcall
and
or
fisttps
and
in
sub
or
cmp
xchg
push
iret
xorw
das
insl
add
fcmovbe
jg
fsubr
aaa
xchg
inc
pop
push
xor
push
data16
pushl
pop
or
xchg
imul
jge
rcrl
sbb
pop
outsb
xchg
idivl
cltd
mov
test
fdivs
sub
and
and
mov
xchg
mov
sbb
and
cmp
scas
push
sbb
lea
fsubrs
mov
into
sub
mov
xchg
push
sbb
jge
out
lret
mov
add
lret
in
mov
sbb
clc
push
adc
xchg
mov
nop
out
out
jno
out
frstor
pop
adc
jns
jp
lcall
xchg
mov
int
mov
addr16
lods
inc
and
lret
push
and
pop
int3
ror
enter
push
push
jmp
xchg
rcrb
test
ret
push
nop
outsb
enter
pop
insl
mov
rorb
add
rcrl
pop
mov
adc
mov
mov
js
mov
mov
out
test
xor
fsts
js
out
mov
popl
sub
pop
scas
test
shr
jbe
xchg
push
pop
pop
out
imul
jg
mov
mov
out
sub
xchg
push
add
scas
jns
and
lcall
fldenv
ret
jne
aas
outsb
dec
loopne
ss
pop
ss
xchg
mov
jge
stos
sbb
cwtl
inc
fldcw
dec
insl
add
dec
popa
clc
andb
and
sub
popa
clc
es
sbbb
pop
mov
cltd
adc
stc
inc
xchg
and
imul
dec
addb
sbb
add
add
sbbb
cmc
mov
cmp
insb
add
sahf
test
xchg
aam
dec
pop
lea
ret
aaa
pop
outsb
jge
cs
pop
out
cmp
push
jae
test
adc
push
mov
push
roll
lret
sbb
cmp
xchg
in
lahf
mov
dec
stos
insl
add
outsl
ja
pop
cmp
mov
cltd
pop
and
jp
std
mov
or
into
stos
xchg
mov
stos
mov
ljmp
and
mov
push
into
jb
mov
push
add
shlb
xlat
xor
subl
rolb
xchg
xor
jmp
test
sbb
lea
adc
jge
stos
dec
fnsave
ja
in
lcall
fwait
adc
out
mov
imul
add
xlat
pop
dec
fmulp
jne
xor
jns
imulb
icebp
loop
out
cmp
or
rcrb
stos
out
cmp
mov
mov
mov
shrb
mov
push
pop
jmp
test
jns
add
loopne
jae
xor
pop
or
dec
loope
fisubrs
or
mov
jb
ss
dec
xchg
xlat
nop
out
or
shrb
lahf
fbstp
mov
fdiv
inc
mov
mov
xchg
jge
jg
ret
mov
push
xchg
not
pop
in
inc
and
pop
and
aad
lahf
aaa
inc
fistps
sbb
lret
and
xchg
push
inc
sbb
fisubs
nop
out
cs
inc
pop
mov
gs
test
insb
mov
push
xchg
das
cmp
mov
jle
mov
shrb
mov
out
int
mov
jne
out
xor
scas
pop
mov
adc
cmc
jl
hlt
pusha
pop
xor
leave
test
sbb
shlb
insb
sub
dec
sbb
ja
out
xchg
adcb
pop
xlat
je
das
inc
push
push
jge
ret
push
xchg
lods
into
push
fucomp
push
shlb
enter
test
push
mov
jno
adc
sti
or
mov
in
cmp
cltd
xor
jle
daa
inc
inc
ds
dec
pop
xor
adc
out
push
movsl
cmp
shrl
mov
adc
push
inc
mov
popa
dec
add
rcrl
stos
mov
push
call
cmp
call
mov
shll
xlat
jmp
out
outsb
add
sbb
or
pop
das
mov
lods
cld
jns
pop
insl
push
mov
xchg
xchg
cmp
js
int
push
popf
int3
lret
sub
jl
test
cmpsl
ss
stos
mov
or
call
jno
clc
xchg
sub
pusha
fmull
icebp
mov
test
sub
jecxz
cli
jns
nop
inc
test
mov
js
adc
cwtl
pushf
mov
sahf
mov
dec
or
mov
push
jb
outsb
test
dec
test
jl
or
ss
mov
sbb
dec
cli
dec
inc
outsb
loope
call
orb
xchg
cli
push
ss
adcb
and
pop
daa
xlat
outsl
idiv
mov
mov
or
aas
and
jbe
cmc
dec
jne
pop
add
cmpsl
xchg
or
das
push
xor
repz
mov
push
mov
mov
fwait
pop
cmpsl
fwait
lods
inc
sbb
xchg
pcmpgtd
jae
jle
jge
sub
add
loopne
mov
jmp
push
loopne
jmp
mov
dec
dec
mov
push
sub
or
jno
inc
stos
fstps
mov
mov
out
add
ljmp
push
inc
dec
cmp
ds
push
lea
iret
mov
xchg
or
fwait
in
in
ja
push
cmc
les
ja
cli
cwtl
add
mov
scas
cli
xchg
loopne
mov
out
and
fs
outsb
addr16
mov
es
mov
xchg
repz
inc
adc
out
lds
mov
jb
sub
insl
adc
out
mov
fldl
lret
repz
sbb
mov
arpl
xchg
sub
xchg
cmp
hlt
mov
lods
jmp
cmpsb
sbb
inc
pop
out
daa
fs
sti
cmp
pop
inc
xlat
dec
cmp
pop
push
fistl
xor
jmp
adcl
pusha
mull
out
sbb
lret
negl
sti
dec
pop
mov
test
mov
sbb
mov
dec
loop
repnz
pop
sbb
jae
jecxz
enter
fs
scas
mov
push
stos
sub
fcomps
xchg
dec
lcall
xchg
xchg
jg
andl
lea
setae
lods
sahf
dec
aam
sbb
xchg
fistl
sub
or
sub
jp
js
xchg
imul
jg
stos
inc
popa
inc
push
add
sub
imul
insl
fs
orb
stc
leave
push
mov
mov
push
or
mov
sbb
mov
jmp
lahf
aad
and
lahf
fdivr
cmc
rorb
icebp
push
jp
loope
add
shlb
popa
mov
pop
lock
add
movsl
mov
call
pop
out
add
adc
jae
mov
lea
mov
movsl
sub
mov
dec
jp
jg
fidivl
fbld
jne
and
dec
loopne
test
sbb
fcompl
mov
popa
loopne
pop
cltd
mov
pop
and
stos
outsb
call
out
sub
fadd
add
pop
pop
call
pop
xadd
mov
push
jg
sbb
push
jae
or
cwtl
sbb
aam
fisttps
addr16
pop
movsb
push
mov
mov
and
cwtl
xchg
aam
and
popf
stos
outsb
data16
pop
mov
lret
xchg
inc
and
addr16
mov
loop
jle
adc
pop
int3
mov
and
clc
test
loope
jo
cmpsl
jns
loop
nop
fxch
push
je
mov
mov
aam
add
shlb
test
jmp
pop
inc
fldcw
aaa
add
imul
pop
sbb
mov
add
fidivrs
adc
fs
mov
add
je
fnstsw
jo
fucompp
xchg
dec
dec
or
dec
mov
push
xor
mov
lds
add
cld
xchg
xlat
sub
mov
cltd
or
stc
cmp
sbb
mov
sti
mov
clc
xchg
out
mov
aas
pop
push
out
aaa
cmpsb
cmpsb
add
jne
scas
pop
adc
cmp
jl
sub
xor
and
cld
xchg
shrb
iret
mov
add
inc
push
push
into
xchg
cvtpi2ps
add
mov
jb
mov
cwtl
xchg
nop
xor
test
test
pop
dec
mov
sti
sbb
in
les
outsl
jnp
cmp
mov
icebp
mov
popf
rclb
ret
data16
mov
xor
sub
aas
lock
mov
xchg
mov
jge
mov
fildl
xchg
mov
es
subl
hlt
jno
js
inc
xchg
cmp
adc
mov
fdivs
cmc
movsb
and
xchg
sbb
lret
movsb
mov
into
fdivl
push
in
insl
les
addb
out
call
mov
add
ja
fildl
push
les
xor
data16
mov
add
mov
cmp
mov
nop
jmp
or
test
insl
int3
out
add
daa
mov
or
fisubrs
hlt
mov
loope
add
test
adc
das
aad
jl
cld
pushl
dec
lcall
xlat
fnsave
sarb
add
pop
mov
test
mov
sbb
shrl
sbb
in
pop
sahf
xor
fs
cmp
xor
add
pop
mov
jle
shll
sbb
xor
call
jb
push
fs
popa
dec
cmp
adc
mov
aaa
into
insl
inc
mov
ja
push
jne
pushf
or
inc
lcall
andl
push
dec
pop
in
lods
adc
pop
pop
or
enter
cmpsb
mov
imul
push
mov
loope
sub
hlt
insb
sbb
xor
push
dec
pop
rcl
adc
mov
pop
repz
push
sub
jno
add
ljmp
shlb
jo
les
mov
fldenv
xchg
fs
and
xchg
add
adc
nop
mov
mov
or
mov
push
cltd
fst
sbb
fwait
or
mov
push
bnd
push
stc
push
add
aas
push
jp
cltd
lock
cltd
sbb
cmpsl
in
sub
mov
push
sbb
pop
dec
pop
mov
mov
pop
push
iret
mov
jmp
sub
push
push
jae
sbb
icebp
mov
fwait
into
rorl
adc
insl
and
mov
aas
fistpl
aam
cmp
scas
sbb
jae
jmp
push
push
popf
sbb
dec
je
mov
fs
jg
hlt
mov
pop
add
push
sti
mov
ret
dec
jo
push
lods
adc
hlt
lret
ss
mov
hlt
cmp
jl
pop
ja
dec
js
jp
cmp
fldenv
push
leave
addb
adc
movl
sti
adc
or
daa
lret
aaa
popa
dec
lret
pusha
mov
jno
stos
fstpt
xchg
jno
int
cmp
lret
fidivs
sub
shl
push
bndstx
lret
mov
pop
bound
pop
push
mov
call
mov
xchg
out
dec
dec
mov
add
sbb
shld
jmp
sbb
out
faddl
add
jbe
clc
sub
xor
jg
inc
jle
push
popf
outsl
xorb
jle
xor
mov
and
jb
sti
into
and
in
mov
push
mov
jl
adc
into
push
in
orl
xchg
mov
mov
ds
or
mov
pop
lock
inc
sarb
cld
push
push
es
and
scas
push
sahf
aaa
xchg
test
ljmp
cmpsl
fwait
cli
pop
aas
or
jp
dec
pop
negb
push
cmp
loop
imul
lret
outsb
cmp
in
add
mov
ljmp
xchg
lahf
pop
mov
jge
scas
jb
les
fs
lods
mov
xchg
loop
ljmp
stos
shl
xchg
xchg
aas
push
jecxz
xor
sbb
stc
fnstsw
pop
outsb
mov
mov
and
sub
lcall
jbe
dec
and
xor
mov
clc
inc
xchg
ffree
pop
push
insb
mov
fucomp
daa
push
aas
push
insb
je
outsb
xchg
cltd
leave
cmp
sbb
xor
popf
repz
mov
jb
mov
mov
adc
bswap
dec
push
imul
cmp
xchg
pop
rcll
add
stc
jno
push
aam
cmp
sub
rorb
push
movsb
ds
sbb
push
andl
aad
pushf
rcrl
jg
loop
inc
push
cmp
out
ret
pop
sti
or
inc
fsubrl
mov
mov
incl
xchg
int3
movsb
lods
sub
or
push
into
cmp
cmp
out
sahf
or
test
mov
xor
sbb
xchg
cmpsl
inc
mov
dec
pop
lods
jnp
xchg
dec
sbb
xor
jge
arpl
push
cltd
sbb
xor
lods
std
mov
movsb
or
je
ds
fcoml
clc
mov
push
xchg
jb
outsb
sub
lods
mov
or
jno
fsts
scas
adc
mov
movsl
xor
and
cmpsl
jbe
jecxz
jb
out
cmpsb
mov
mov
mov
testl
cli
mov
push
aad
jmp
dec
in
repz
aad
in
jp
data16
xor
popa
push
inc
mov
sub
push
test
aam
add
addl
rolb
sub
jns
pop
mov
add
jp
pop
pushf
in
je
cli
adc
push
mov
in
addr16
in
dec
lds
xor
xor
jb
mov
jns
push
sbb
rolb
movsl
hlt
dec
ficomps
xchg
ja
sbb
out
sub
sub
out
and
test
inc
dec
orb
lods
icebp
jno
xchg
out
inc
mov
and
sti
aas
push
ss
cmp
das
repz
push
inc
cmp
push
jb
jo
mov
dec
push
lret
pop
test
pushf
loopne
daa
or
or
addr16
movsb
push
repz
cwtl
stos
pushl
sbb
adc
popa
stc
push
cmp
sub
jge
inc
pusha
sbb
add
mov
push
mov
inc
xchg
cmc
in
or
inc
loopne
in
push
jp
inc
cmpsl
push
mov
js
iret
dec
mov
addb
adc
ja
incl
mov
out
lahf
dec
aaa
lds
mul
adc
mov
jg
mov
pop
das
or
cmp
daa
scas
jl
or
fnsave
xor
cmp
sbb
dec
shl
cmp
fidivrl
fdiv
daa
and
push
xor
push
cmpsl
jns
cltd
adc
mov
push
xor
mov
loopne
shll
sbb
cmp
mov
cmp
xchg
push
fimuls
xchg
push
aam
mov
jp
sub
mov
test
test
cmpsl
out
testl
mov
jae
add
xor
jmp
xor
push
sub
fldl
loopne
cmpsb
inc
imul
cmp
nop
push
pop
and
repnz
pop
cmpsb
loop
lcall
pop
outsl
sbb
call
mov
dec
aad
cmc
mov
xlat
icebp
push
jo
stc
sub
lods
pop
mov
fwait
sti
jbe
sub
sbb
stos
mov
fidivl
mov
cwtl
ss
cwtl
aaa
int
cmc
mov
std
mov
shll
lods
ljmp
es
lods
push
int3
fcompp
adc
jecxz
jae
sbb
testb
pop
push
lods
rcrl
scas
inc
jns
pop
inc
movsb
mov
add
or
push
movsl
pop
jle
rcrb
pop
cmp
mov
sbb
stc
dec
push
movsb
loope
enter
cmp
ja
cmp
mov
mov
test
dec
xchg
xor
test
lea
scas
mov
xchg
push
jg
test
xor
sbb
inc
or
jns
ljmp
pop
stos
push
rcrl
incl
fistpl
xchg
arpl
inc
scas
cli
mov
push
xor
sbb
dec
inc
xchg
pushf
pusha
mov
adc
sub
mov
mov
adc
push
add
js
jns
psrad
fwait
xchg
gs
xor
mov
hlt
push
and
dec
in
std
mov
cmpsl
xor
add
lret
sbb
mov
xor
repnz
or
movsl
aas
idiv
nop
rcll
push
repnz
outsl
mov
mov
shrl
sti
std
addr16
and
ja
pushf
xor
cwtl
sbb
adc
hlt
dec
in
fsubs
mov
xchg
cs
fstps
inc
fwait
jo
xor
cmp
mov
mov
out
jbe
dec
mov
je
mov
mov
aam
pop
jg
cld
mov
pop
outsb
pop
xchg
sbbl
push
cmp
lret
ja
ret
mov
mov
pop
and
add
shlb
loopne
jo
sbb
ja
mov
negb
test
lret
fbld
lret
loopne
and
add
lret
inc
fdiv
movsb
daa
sti
lods
sbb
and
inc
scas
add
sub
out
mov
mov
push
inc
dec
cwtl
enter
dec
sbb
out
jne
push
xor
das
mov
sub
dec
les
std
sub
sub
mov
sti
and
ret
fxch
scas
inc
fs
or
pushf
stos
ljmp
fwait
jmp
fdivrl
pop
push
popf
pop
test
cmp
mov
pop
adc
xor
pop
out
mov
jbe
pop
mov
cmp
fists
gs
sub
roll
test
in
dec
cmpsl
jnp
jmp
cmp
hlt
push
hlt
dec
mov
stos
xchg
add
pop
out
xchg
mov
inc
fdivrs
sahf
dec
dec
push
outsb
mov
adc
mov
push
xor
sar
xchg
sbb
dec
fcoms
jg
add
daa
cmp
aam
inc
popa
clc
jae
cmpsl
ret
xchg
mov
or
adc
dec
js
inc
loop
mov
inc
in
test
pop
dec
mov
loope
push
outsb
xchg
sbb
and
pop
dec
jle
jge
jnp
cmpsl
mov
or
xchg
ret
add
cs
xlat
jns
mov
test
out
fucom
cs
cmp
xlat
andl
or
iret
pusha
pop
jg
in
push
mov
dec
sub
aad
bound
dec
mov
out
sbb
pop
ja
push
insb
repz
test
jmp
std
pop
js
shlb
mov
xchg
call
inc
push
adc
push
xchg
sbb
inc
or
lret
ss
fstps
ds
imulb
fcomps
mov
push
mov
or
pusha
dec
loop
jmp
mov
push
jmp
les
sbb
lahf
jo
jnp
xor
notb
mov
cmp
out
shll
push
jo
push
sbb
dec
push
out
lea
imul
aas
or
stc
mov
aad
xchg
lret
lods
cmp
mov
lock
jbe
mov
stos
xchg
jns
rol
int3
cmp
push
popf
or
fwait
lock
dec
dec
sub
addr16
ret
repz
mov
es
leave
pop
jp
jmp
stos
loopne
adc
sub
dec
in
add
and
push
popa
jg
lahf
jns
out
ror
push
fiaddl
cmp
leave
pushf
loop
into
scas
jo
mov
les
add
test
sti
lock
xchg
mov
jg
lahf
push
or
mov
int
insb
xchg
daa
sahf
pusha
push
fcomps
mov
mov
clc
or
cpuid
dec
push
in
push
sub
add
flds
xlat
inc
in
sti
js
cwtl
jns
add
inc
pop
add
fdivrs
push
int3
jo
pop
pop
mov
in
out
sbb
mov
add
inc
inc
fnstenv
fists
cld
and
and
movsl
cltd
test
bound
jecxz
cmc
insb
mov
cmp
mov
outsl
pop
pop
adc
enter
add
daa
loop
xor
mov
add
pop
xchg
mov
or
movsl
xor
js
dec
add
jbe
mov
inc
dec
fwait
adc
push
aaa
loopne
cs
frstor
mov
inc
lds
gs
or
mov
lret
ss
xchg
fildll
mov
jnp
fdivrl
andb
hlt
out
sti
insl
in
jg
popa
push
les
cmpsl
mov
in
out
xchg
lret
iret
mov
loopne
movsb
jo
fidivs
pop
mov
xor
adcb
pop
lock
jmp
add
jge
insb
mov
jbe
mov
fldcw
shlb
lret
test
sub
aas
xchg
das
or
aam
or
outsl
push
lret
iret
fadds
push
or
stos
aad
cmpsb
mov
xchg
repz
jmp
call
inc
xlat
repz
fiadds
mov
or
jnp
mov
repz
sahf
scas
pusha
cld
mov
subl
jmp
lea
xor
movsb
scas
push
pop
popf
pop
mov
jne
fidivs
ja
and
cmp
into
insb
lret
addr16
sub
sub
push
pop
sti
sub
mov
mov
mov
adcl
jo
stc
jge
rcll
test
xchg
add
inc
add
stc
or
xchg
ds
mov
outsl
pusha
lods
cmpsb
les
jg
pop
insb
cmp
stc
mov
xchg
mov
lret
mov
outsb
push
adc
int3
call
jle
popf
cmp
mov
inc
ret
ds
add
adc
jmp
jmp
cmp
ljmp
das
loope
xchg
sbb
sub
adc
sbb
and
adc
leave
cld
fs
push
sbb
and
xchg
push
in
dec
data16
xor
std
roll
cs
ljmp
mov
sub
into
sub
mov
adc
dec
shll
and
or
mov
inc
cmp
or
mov
sub
cmc
shrb
lds
pop
pop
dec
mov
push
jl
jno
dec
cmp
pop
cmc
in
mov
lret
push
xlat
int
into
das
jno
adcl
sbb
out
jp
jl
xor
scas
rcrb
jecxz
addr16
add
in
jne
pop
mov
sti
mov
xlat
sbb
fnsave
jno
add
filds
inc
divb
or
fdivs
xor
gs
add
jno
dec
pop
mov
rorl
loope
setae
pop
fstpl
out
push
test
adc
push
lret
aaa
clc
lea
or
shrb
or
xlat
jae
mov
and
cmpsl
lods
clc
pushf
sbb
push
jb
ss
mov
xchg
jl
xor
xorb
jbe
push
mov
xchg
mov
std
out
and
gs
cmp
xchg
mov
retw
insl
test
shll
js
xchg
mov
ficompl
js
add
call
fstpt
jo
pop
testb
nop
daa
or
inc
xlat
test
adc
mov
adc
andb
sbb
or
aas
jg
ret
pop
xor
sub
loopne
xchg
sub
scas
out
insb
dec
loop
or
mov
mov
sahf
ja
loopne
inc
fldenv
pusha
imul
pop
push
shrl
cmp
xor
mov
jecxz
push
popf
lods
cwtl
pop
scas
leave
int
jb
push
fsubrs
sbb
xchg
mov
mov
aas
fbstp
cwtl
jecxz
lret
cltd
pop
push
or
dec
loop
and
testl
jmp
lds
int
rol
pop
push
xor
inc
in
pop
dec
pusha
xor
in
cmp
es
mov
fimull
sbb
jmp
inc
faddl
int
xor
pop
shrb
aas
adc
or
jp
dec
loop
aam
in
cmp
clc
sbb
dec
cmp
push
stos
pop
rol
jbe
int3
gs
repnz
add
fadd
in
idiv
and
dec
loope
std
adc
adc
pop
outsl
das
popf
and
lea
mov
push
imul
xchg
sbb
test
int3
adc
mov
mov
add
cld
xor
lcall
out
xor
push
sub
jae
mov
sub
in
lds
ds
jecxz
jmp
xor
int
pop
dec
out
push
out
insb
in
mov
shll
into
add
mov
in
push
push
insl
xorb
mov
xlat
outsb
mov
ret
cmc
mov
popa
outsl
push
xchg
or
and
pop
insl
mov
cmpsl
sub
int
nop
sub
negl
jmp
jecxz
jle
lods
add
psubd
sub
xor
bound
and
testb
adc
mov
or
add
mov
push
movsb
sbbb
andl
mull
sub
pop
lcall
scas
mov
test
jmp
call
or
mov
jl
push
jmp
mov
fstp
jo
icebp
sbb
pop
push
sub
mov
inc
fst
rorl
add
fs
sub
add
mov
shl
sti
push
out
sub
outsb
pop
negb
mov
enter
sti
jp
sub
call
es
jmp
cli
decb
movsl
and
stc
es
fnstenv
sub
push
notb
lods
es
shrl
xor
and
mov
sub
sti
xchg
sti
repz
lods
and
mov
push
xor
pop
lock
in
stos
inc
and
sbb
xor
ja
sti
in
mov
and
xchg
cs
cld
pushf
xor
int
hlt
jmp
rcrl
aas
aaa
jle
jbe
push
out
xchg
test
add
and
inc
sub
pop
movsb
dec
cmp
add
cmpsl
mull
pop
dec
testl
inc
cmpsb
inc
jno
jae
cmpsl
ds
xchg
fbstp
push
cmpsb
cmp
adc
xor
xchg
jns
mov
inc
out
dec
fildll
adc
icebp
mov
out
mov
or
ret
repz
push
push
and
push
enter
ret
in
repnz
into
push
mov
ret
xrelease
pop
mov
sub
sti
mov
inc
gs
mov
jecxz
test
push
cmp
insb
les
clc
mov
mov
fisubrl
fs
out
popa
clc
in
xor
cmp
imul
in
cmp
subl
imul
pusha
out
aas
cmp
insl
cmp
pushf
xor
cmpsb
push
in
cmp
push
imul
out
mov
lds
xchg
js
xor
out
scas
out
xchg
cmp
imul
cmp
imul
stos
sbbl
cmp
jg
rclb
popa
clc
ljmp
ret
repnz
and
jg
pop
repz
jle
pop
dec
mov
icebp
add
or
and
xor
push
add
loopne
push
inc
in
test
jl
stc
movsl
arpl
xlat
sub
jno
inc
gs
jbe
in
sub
lea
dec
jge
cmpb
ret
enter
shrl
movsl
test
fcomps
in
jnp
in
test
fwait
ret
pop
lret
xchg
sbbb
xchg
push
mov
andb
andb
xchg
xchg
rclb
mov
mov
dec
in
arpl
xchg
xchg
sbb
mov
adcb
arpl
xchg
xchg
scas
inc
ret
dec
mov
shrb
jle
into
scas
mov
movsl
mov
jb
xchg
mov
insl
test
mov
jo
shll
inc
jo
test
shrb
mov
jo
lods
movsb
andb
mov
lret
jge
mov
jg
dec
scas
dec
xchg
jnp
ret
pop
xchg
lahf
xor
int3
mov
xor
ljmp
cmp
push
insl
pop
lret
pop
icebp
mov
loopne
dec
adc
sub
out
push
int
test
je
xlat
fcoms
or
pop
out
jns
cmc
mov
cmpsb
cmp
xchg
dec
pop
icebp
jl
xlat
outsb
shlb
jle
dec
or
cmp
stos
inc
sbb
sbb
xor
in
shrl
push
lret
add
jnp
lcall
sbb
orl
sub
sbb
scas
inc
xchg
add
xor
lods
inc
mov
arpl
xchg
ss
fdivl
in
adc
adc
mov
aas
call
insl
add
ds
rep
push
adc
ds
push
in
sbb
js
pushw
pop
lock
and
incb
cld
mull
mov
call
sub
idiv
xchg
daa
sub
add
loope
out
and
dec
cmp
add
mov
ret
clc
jecxz
in
sbb
push
movsl
imul
add
jmp
movsb
cmp
or
xchg
inc
cmp
jmp
cltd
mov
imul
fldcw
or
jle
cmp
pop
or
mov
cmp
sar
adc
add
ljmp
jae
test
mov
cmpsb
scas
xlat
les
shl
xlat
outsb
and
inc
lea
push
aam
xchg
mov
cs
jecxz
sbb
mov
cmp
add
xor
mov
fsubp
js
cld
pushf
mov
cs
pop
dec
cmp
cmp
mov
pop
cs
daa
mov
pop
dec
inc
pop
jge
dec
fs
sahf
loop
iret
int3
xchg
test
and
xor
dec
inc
mov
jae
inc
fcompl
mov
add
or
mov
fistl
mov
xor
invd
pop
lock
pop
ja
rcll
push
mov
ljmp
shll
leave
add
cmc
mov
fbstp
ret
repz
cmp
add
push
shrl
sar
xchg
push
push
mov
dec
push
iret
cmp
ret
inc
xlat
dec
bound
jae
sub
dec
sub
popa
lcall
mov
in
andl
decb
xchg
cltd
cld
cmc
push
mov
js
xchg
repnz
push
mov
les
mov
mov
clc
fiadds
mov
mov
cmc
addb
cli
lahf
imul
arpl
pusha
add
hlt
xchg
aaa
addb
xor
sbb
lods
cmp
jl
pop
lret
inc
lods
mov
xor
in
or
cmp
cmpb
loopne
dec
movb
adc
inc
pop
cltd
xor
sbb
test
sbb
xor
adc
adc
lods
lret
gs
sbb
or
insl
jmp
outsl
pushf
ja
mov
divb
cmp
xchg
decb
jecxz
push
add
jg
in
ds
std
sub
in
fnstsw
stc
sub
mov
sub
cmp
sub
dec
data16
push
jnp
jl
cmp
popl
sbbl
jle
dec
jle
sbb
jl
mov
mov
fbstp
aad
loop
ja
dec
inc
notb
inc
rcrl
inc
jb
pop
dec
std
sub
jno
inc
push
pop
mov
imul
xchg
mov
sahf
sub
and
test
xor
cmp
mov
loope
sbb
or
adc
movsl
cltd
add
sbb
call
xlat
outsb
into
mov
loopne
int
pusha
icebp
cmp
sbb
dec
pop
mov
in
push
mov
mov
loop
and
mov
call
fdivl
mov
rorl
lcall
in
sub
push
sbb
cmc
push
loope
xor
shlb
xor
and
and
call
sbb
imull
imulb
cltd
movsl
cltd
ja
sbb
movsb
sub
dec
nop
loop
xchg
add
pop
popf
fstpt
std
mov
iret
and
test
insl
inc
add
push
mov
clc
mov
dec
insb
jmp
ret
mov
lcall
sbbb
pop
or
cmp
mov
insl
sub
cmpsb
pop
xor
jb
ds
rorb
sbb
jp
repnz
mov
jge
adc
bound
xor
pop
xchg
push
stc
and
repz
mov
mov
xor
fisttpl
jle
jl
mov
jne
aas
xchg
mov
push
or
mov
cmpsl
ljmp
popa
and
and
adc
xor
adc
mov
jge
add
pusha
cmp
jle
sti
lods
fiadds
arpl
or
mov
xor
xor
jb
into
dec
sbb
lods
pop
inc
fmuls
scas
fimuls
or
ret
sub
jmp
mov
data16
xchg
xor
jnp
mov
add
popf
into
push
and
and
pop
add
cmp
push
ljmp
inc
enter
daa
cmp
jge
inc
insb
push
rorl
mov
pop
mov
outsl
mov
aad
cmp
inc
dec
in
lret
mov
adc
xor
les
cwtl
gs
scas
mov
xchg
enter
sbb
dec
ror
adc
or
cmp
cmp
aad
lock
cld
push
movsl
lret
lods
lret
lds
fcmovne
dec
mov
fistpl
or
pop
rcll
xor
fcompl
inc
fisttpl
cmp
dec
insl
lock
pop
stc
jg
int
jo
xor
jl
mov
xchg
adc
xchg
out
xchg
fisubs
mov
int
leave
fnstenv
clc
push
into
repnz
mov
ret
push
or
push
cmp
add
aas
push
pusha
push
filds
dec
cltd
push
inc
cmp
sbb
jle
or
fcmovnbe
dec
in
add
or
pop
fistl
cmp
or
hlt
aad
pop
mov
mov
cmp
jp
inc
mov
mov
pop
jg
cmpsb
les
cmc
jecxz
leave
aad
mov
mov
mov
int
push
call
sub
inc
ret
dec
sahf
das
add
adc
add
stc
mov
lock
rorb
ficoms
push
add
push
xchg
dec
push
enter
pop
dec
aas
aaa
jmp
xor
and
mov
repnz
inc
mov
xchg
js
mov
cmpsb
xchg
stos
negl
negl
lret
sub
fidivrl
cmp
pusha
mov
jne
push
aad
push
mov
push
lds
xlat
push
mov
imul
repz
xor
sbb
mov
push
cld
sbb
xchg
paddd
std
lock
add
lahf
sub
adc
pop
repnz
xchg
lcall
xchg
ja
adc
out
and
push
lret
testb
fs
inc
leave
jmp
mov
pushf
xor
ds
mov
lock
mov
xchg
shr
adc
out
sbbb
adc
stos
aas
sbb
cli
adc
xchg
or
mov
out
fimuls
mov
mov
lret
ret
sbb
test
adc
pop
leave
or
lods
arpl
add
popf
push
mov
pop
mov
sbb
scas
jne
cli
xor
mov
call
les
rcrb
mov
mov
in
lods
aam
faddl
mov
stos
clc
xlat
test
into
repnz
push
into
xchg
xor
mov
iret
popa
gs
lods
fsubrs
pusha
lcall
data16
mov
adc
ret
bound
std
cmp
nop
cmp
adc
dec
push
sti
xchg
test
aam
cmpsl
sbb
hlt
nop
daa
ljmp
or
add
push
aam
data16
sbb
cmp
xchg
and
clc
xor
call
negl
loope
adc
and
pop
movl
aas
mov
movsl
xor
or
sub
insl
lahf
imul
push
and
add
jae
sbb
xor
sub
mov
mov
and
test
pop
mul
cmpsl
sbb
sub
fs
xchg
imul
mov
fs
mov
lret
popf
mov
inc
mov
cmpsb
std
pop
int
sub
mov
sarb
jbe
fdivl
sub
test
pop
mov
xchg
lcall
push
out
sub
pop
rcrb
out
sub
sbb
in
cmp
daa
cld
xor
imull
out
into
arpl
xchg
movsl
cmp
xchg
or
dec
mov
ret
call
test
sbb
jno
negl
xor
testb
mov
mov
out
push
mov
int
dec
out
aaa
jmp
outsb
stos
and
idivl
push
mov
out
xchg
sbb
sbb
fnstcw
sub
cmpl
xlat
into
into
dec
mov
fbld
stc
adc
push
flds
push
add
int
and
in
jp
jmp
sahf
jl
add
testl
cmc
sbb
sub
lods
pop
pusha
mov
fwait
xor
and
lret
negb
jno
mov
into
or
stos
aam
push
or
fsubrl
int
xchg
mov
jo
lret
fidivs
in
cmp
mov
repnz
f2xm1
push
test
jo
cmp
icebp
and
sbb
push
push
cwtl
pushf
stc
in
pop
ret
mov
mov
dec
push
mov
mov
lock
pop
dec
fisttpl
add
dec
jmp
xor
inc
out
push
stc
ficoml
pop
test
jp
xor
fdiv
cltd
iret
iret
mov
pop
lods
repz
test
pop
in
lret
mov
rorb
mov
imull
sub
into
xchg
xchg
int3
pop
fmull
lret
mov
lock
aad
mov
cwtl
rcl
testb
es
pushf
movsl
lock
int
fs
fsubr
dec
rol
fidivrs
mov
add
stc
xchg
leave
jg
fldl
cmp
rolb
push
test
out
xor
js
fistl
cmp
std
sbb
das
lahf
mov
leave
inc
mov
lret
adc
repnz
scas
sarl
out
and
jp
mov
testb
mov
adc
xorb
std
xchg
pop
push
insb
mov
dec
sub
repnz
dec
sub
aas
iret
sub
xlat
lcall
fidivs
and
leave
rcll
insb
cs
call
test
push
stc
push
in
and
jg
xchg
inc
test
outsb
sbb
adc
xchg
scas
fs
in
inc
addr16
mov
lods
outsl
jge
outsb
push
pop
sahf
imulb
and
cmp
add
pop
nop
cmp
sub
movsb
aad
add
xchg
xchg
in
sbb
xchg
sarl
xor
inc
cmp
icebp
cmp
jno
dec
inc
lret
fsubrl
lret
and
push
dec
test
testb
jl
mov
fwait
jl
mov
adc
jle
out
dec
fcoms
jle
aam
sarb
cmc
ret
cmpsb
in
push
mov
push
int
sarb
js
cltd
xchg
jecxz
cld
xchg
push
push
dec
daa
or
xchg
arpl
inc
inc
add
xor
scas
bound
cmp
push
inc
sbb
jae
xor
mov
es
cwtl
xor
lods
test
xor
jo
sbb
popf
jbe
fsubs
inc
fdivrl
bound
mov
adc
jmp
push
daa
sbb
xor
cmp
adc
imul
adc
shrb
inc
std
das
inc
bound
dec
pusha
xor
pop
scas
jae
mov
cmp
xor
ds
sbb
test
ficoms
jmp
cmpsb
leave
es
jmp
pop
shl
sbb
loop
mov
divl
mov
add
out
sub
mov
repnz
and
pop
mov
loopne
cmp
xor
add
ss
pop
mov
fs
xor
mov
in
or
sub
fistpll
in
ds
mov
fdivs
stos
in
cmp
les
pop
sub
sahf
jg
mov
dec
xor
gs
jbe
pop
ss
mov
push
movsb
test
jae
insb
je
cmp
cmp
and
mov
imul
jle
inc
sub
stc
mov
cltd
cwtl
mov
mov
push
std
jne
in
push
fidivl
callw
mov
loopne
je
sub
jg
cwtl
mov
dec
dec
fisttps
test
insl
fisttpll
mov
test
mov
ret
gs
mov
pop
adc
mov
ja
shrl
sub
mov
add
mov
in
aas
es
mov
xchg
into
push
or
xor
pop
cld
into
fsubrl
pminub
or
call
fdivr
and
aam
popa
mov
fidivrl
aad
cmp
aam
int
mov
adc
gs
loopne
push
aad
inc
cmpsb
dec
mov
fistpl
ret
mov
test
dec
shrb
cld
xchg
jl
lea
jmp
aam
sub
add
xchg
adc
adc
data16
fisttpl
je
enter
fcmovnu
imul
lret
pop
lock
hlt
mov
jmp
mov
jp
jecxz
lods
imul
dec
loopne
data16
imul
sub
aam
out
pop
adcl
xchg
insl
mov
in
pop
leave
jnp
cmpsb
dec
faddp
pop
call
or
fisubrl
incb
shrb
sub
cmp
and
rorl
in
lret
mov
mov
flds
addl
inc
addb
jge,pt
jge
test
cli
or
lock
aas
adc
mov
jmp
fistl
loope
jb
push
lcall
sub
out
das
jecxz
jl
or
jle
jmp
sbb
and
sub
daa
jnp
sarb
andl
lods
inc
pop
mov
mov
clc
jge
mov
addb
jp
adc
jne
les
lret
lret
jb
add
outsl
in
sbb
cmpsb
pop
cli
aas
repnz
sbb
out
jl
rcrb
mov
mov
adc
mov
xor
cli
lret
lds
cmp
fisubs
jae
shrb
shll
and
xchg
test
xorb
out
mov
push
and
mov
sub
fldt
fisttps
push
jno
popa
movsl
ret
sub
mov
cmc
add
mov
cmc
cmpl
or
stos
adc
jl
push
push
imul
arpl
lret
aad
jmp
gs
mov
out
pop
aad
scas
movsl
cmp
inc
cmp
inc
imul
push
imul
scas
test
or
mov
lock
test
shll
sub
or
sbb
test
fidivl
pop
add
xchg
js
aad
cmp
fwait
xor
jge
jp
stos
cmp
jne
cmpsl
inc
pop
popa
imull
std
sub
in
sub
cmc
mov
in
icebp
lds
sbb
adc
sahf
add
and
cmpl
inc
les
lcall
stc
mov
sbb
mov
sbb
mov
loop
popl
cmpxchg
add
arpl
ret
xchg
adc
or
mov
and
mov
push
mov
lods
push
inc
mov
xor
pop
ret
ljmp
pop
push
or
js
xor
pop
mov
push
rcll
arpl
or
jge
jg
call
add
dec
cmpsb
jno
inc
fidivrs
jmp
stos
fildl
adc
ret
sbbl
icebp
sub
data16
xor
adc
mov
call
pop
sub
fisubs
xchg
outsl
jmp
inc
mov
repnz
pop
mov
cmp
aas
mov
mov
enter
inc
rolb
movsb
popa
push
mov
insb
mov
mov
icebp
mov
mov
in
cmpsl
ds
pop
jl
cmp
inc
stos
inc
sbb
jecxz
inc
stc
jne
sbb
jg
jecxz,pt
dec
clc
popl
mov
cmp
sub
inc
or
dec
adc
sbb
push
and
je
cmp
xor
insl
shlb
dec
ljmp
pop
xchg
cmc
mov
out
mov
std
dec
mov
sar
xchg
or
cmp
mov
pop
cmpsl
adc
adc
rcrb
cmp
in
inc
lds
imul
and
jmp
jns
and
mov
mov
rcll
pop
xor
mov
push
int
std
and
int
inc
test
test
das
loope
mov
sahf
adc
sbb
bound
lcall
mov
icebp
sbb
das
fcoml
shrl
cwtl
int3
cmp
and
loope
sub
insl
loope
jo
jg
xlat
ljmp
je
pop
lock
xchg
int
clc
sub
in
sub
std
or
mov
icebp
lods
push
shl
mov
loope
xchg
cs
add
jb
hlt
sub
xor
fstpt
call
fdivs
stos
pop
mov
and
test
mov
mov
xchg
pop
jp
bound
dec
mov
test
dec
mov
das
daa
push
rclb
sbb
fbld
in
ret
ret
xchg
into
pop
in
mov
cltd
sub
jg
and
std
xor
add
cmp
sbb
ss
inc
int
outsl
lret
loope
shll
scas
bound
stc
xchg
xchg
enter
add
imul
mov
lods
gs
cwtl
sub
or
sub
ljmp
std
sub
pop
or
les
and
dec
mov
out
gs
in
lea
lret
lock
xchg
mov
jmp
cmp
mov
add
repz
mov
in
stos
or
add
call
test
call
lret
mov
mov
scas
dec
in
rcrl
fsts
xor
neg
jne
stos
add
std
dec
push
pop
mov
pop
cmc
es
or
out
jmp
adc
shrb
loop
dec
rorb
pop
sarl
rclb
mov
filds
daa
inc
cmpsl
xchg
xchg
icebp
mov
adc
add
out
xchg
xor
xchg
arpl
mov
dec
ret
ret
adc
or
cmp
push
mov
pop
adc
imul
pop
dec
cmp
nop
scas
dec
add
dec
sarb
cmc
shrl
xor
or
push
fadds
add
ljmp
insb
push
xor
xchg
pop
incb
movsb
addr16
nop
cmc
jo
mov
xor
adcl
out
xor
scas
inc
push
inc
mov
in
inc
push
in
mov
inc
mov
xchg
test
test
mov
std
leave
sbb
cltd
dec
js
push
in
mov
dec
loopne
add
dec
pop
sarl
xor
dec
in
xchg
jle
dec
sub
push
fcomps
hlt
pop
mov
pop
sahf
aas
filds
jnp
mov
xchg
push
jns
xor
push
adc
out
out
xor
mov
aas
out
add
push
jle
inc
lods
jmp
push
jne
inc
inc
push
inc
mov
imul
lods
mov
push
int3
dec
sarl
rol
dec
out
cmp
aaa
imulb
adc
mov
decb
and
mov
sahf
je
sbb
lahf
sub
mov
adc
sbb
cmp
int
imul
loope
inc
ss
xor
pop
subl
sbb
aaa
jmp
popa
xor
call
sub
loop
jns
out
sbb
cmp
add
out
scas
push
xchg
mov
mov
clc
rorb
push
into
xchg
sub
xchg
xchg
sub
testb
pop
out
cwtl
mov
nop
lea
imul
scas
outsb
sbb
dec
in
jno
loopne
repz
jo
stc
loopne
fimull
add
das
movsl
dec
dec
cmp
rcrl
lret
xorb
mov
adc
inc
xlat
or
lods
inc
push
cmp
cmp
xchg
rorb
lock
sbb
xchg
xor
sbb
mov
pop
ret
jmp
pop
push
mov
jmp
push
das
cmp
or
mov
testb
sub
xor
push
out
sahf
popa
enter
or
xor
jbe
sub
and
test
push
decb
outsb
pusha
pushf
dec
test
loope
inc
jne
push
xorl
insb
jo
pop
inc
arpl
fcompl
cli
inc
fs
std
xchg
test
lret
jmp
or
dec
ficoml
sub
mov
filds
mov
cmp
pop
repnz
cmp
aam
imul
pop
leave
push
mov
das
xchg
test
cmp
mov
push
inc
fwait
addr16
mov
dec
push
jmp
test
adc
xor
lahf
xchg
fstl
loopne
inc
sub
pop
sahf
fwait
int3
pop
aad
mov
sub
stos
jno
cli
dec
in
mov
cmp
imul
sub
hlt
lods
loope
sti
sti
aaa
int
sbb
cmp
icebp
ficoms
sub
das
mov
pop
pop
lods
mov
repnz
mov
test
lods
inc
into
stc
xchg
jo
scas
sbb
test
in
test
cld
sub
aam
pushl
mov
push
movsl
faddl
fiaddl
cli
cmp
enter
pop
jmp
xchg
xchg
jno
outsl
push
in
orl
xchg
and
out
in
and
in
aad
mov
test
dec
pop
mov
les
test
mov
stc
mov
movsb
addr16
mov
sub
nop
mov
test
lods
sbb
dec
inc
mov
lret
push
xor
int3
pop
rcrb
outsb
ficoml
adc
outsl
ret
mov
adc
enter
cmpl
js
sti
jb
mov
iret
shll
inc
int
mov
mov
loope
mov
xor
gs
ja
xor
lcall
ret
sbb
push
icebp
sub
inc
mov
xor
dec
xchg
stos
call
dec
sub
pop
imul
and
mov
stos
inc
add
add
pusha
push
bound
mov
test
lret
sti
push
pusha
divl
sbb
mov
mov
fstps
shlb
mov
push
inc
push
fsubrs
popfw
xor
movsb
testb
notl
sub
xor
cmp
lock
das
and
mov
cmpb
xrelease
stc
rolb
add
and
xchg
sub
add
test
mov
arpl
fsubrp
adcb
pusha
neg
xor
dec
mov
faddl
rcl
sub
push
pop
repz
lock
fdivl
inc
ja
ja
cli
pushf
pop
lods
xchg
sub
stos
ljmp
movsl
push
inc
flds
fbstp
xor
fs
dec
mov
imul
mov
int3
repnz
out
jge
and
call
and
push
stos
inc
and
jge
lea
sahf
adcb
les
jne
sbb
mov
add
fidivl
add
outsb
dec
rcr
repz
push
xor
and
xchg
push
mov
ret
scas
test
ja
jae
scas
dec
jo
pop
les
cmp
push
test
rcl
add
jo
in
sbb
aam
out
cmc
dec
pop
push
mov
inc
fsave
call
adc
push
arpl
in
xchg
dec
popa
mov
jp
mov
jnp
pushf
cmp
inc
mov
jp
fadds
jecxz
bound
xchg
or
dec
mov
push
xchg
mov
and
incl
push
push
xchg
insb
xlat
fmuls
add
call
adc
mov
movsl
sbb
mov
ljmp
stos
rcll
cmpsl
out
stc
push
mov
dec
call
adc
test
and
push
mov
and
aad
in
das
mov
mov
mov
adc
inc
push
xor
outsb
cs
je
js
inc
aam
lock
ss
pop
enter
add
xchg
dec
hlt
std
or
lret
inc
mov
lods
jns
ljmp
mov
out
inc
mov
lds
jnp
fiaddl
adcb
test
jle
pop
jmp
dec
sbb
mov
jne
test
lock
outsl
popl
push
flds
sub
or
mov
and
mov
mov
les
insl
jmp
fists
hlt
pop
fmull
into
mov
loop
dec
lods
fs
ja
mov
adc
dec
or
repz
pop
push
insl
mov
sub
sub
test
call
sbb
cmpsb
int
mov
in
inc
inc
adc
repz
mov
fdiv
mov
fisubl
dec
lret
fwait
dec
idivl
pop
mov
jp
xchg
enter
adc
insl
jbe
sub
xchg
fcompl
lcall
pop
mov
cmp
or
and
lods
aas
dec
mov
push
aas
mov
cs
jp
inc
pop
cmc
ss
add
enter
and
jg
mov
in
adc
orb
mov
aaa
cmpsb
cmp
and
or
iret
pop
loop
dec
jo
jmp
xor
faddl
stos
inc
je
stos
inc
outsl
adc
inc
faddl
and
xchg
cmp
stos
xor
loopne
dec
mov
inc
out
and
and
xchg
jge
xchg
outsl
out
push
xor
push
cmp
adc
push
mov
fs
inc
jmp
js
es
mov
mov
xchg
cmp
daa
in
std
inc
mov
jb
cli
xchg
adc
mov
lods
loop
pop
jnp
add
inc
cmp
rcrb
fidivs
dec
or
cmc
popa
shrb
cmp
ret
or
aad
rorl
int
add
xchg
inc
xor
sub
iret
pop
movsb
jmp
push
mov
scas
enter
jle
shlb
sub
push
ficompl
fadds
aad
sub
mov
stos
cmp
add
cld
arpl
fiadds
mov
or
inc
movsl
pop
mov
lods
push
cli
adc
es
jle
xor
idivl
sub
shll
repz
adc
rcrl
aas
loope
adc
das
imul
insl
push
jb
jl
outsb
repz
filds
and
jecxz
dec
syscall
repz
mov
adc
inc
call
outsl
hlt
mov
addb
cmpsl
sub
sub
scas
pop
jb
add
movsb
sahf
inc
mov
stos
negl
nop
mov
xchg
cmp
mov
iret
xchg
inc
pop
loop
hlt
xchg
mov
push
testl
hlt
mov
dec
syscall
fwait
jmp
push
xchg
cmp
fs
sub
jb
jg
push
negb
gs
cmp
les
out
fimuls
stc
mov
jecxz
ja
pop
scas
xor
scas
pop
incl
xlat
orb
pop
leave
add
icebp
pop
or
dec
inc
pop
cmpsb
sub
mov
ja
and
jp
mov
orb
xchg
mov
orb
xorb
pop
sarl
in
outsl
push
das
mov
pop
jg
mov
movl
popfw
inc
cmp
ds
pop
sub
and
push
mov
lahf
fistl
mov
btr
in
adc
and
rorb
pop
pop
add
outsb
lock
sub
mov
out
inc
sti
add
add
fs
imul
loopne
xlat
xchg
push
loope
aam
cmp
dec
test
mov
shll
dec
pop
nop
dec
jns
pop
lret
lock
mov
and
testb
ss
xchg
sarl
into
orl
xchg
cmpsl
mov
fidivrs
stos
xor
dec
cmpsb
cmp
cmc
dec
out
pop
lock
sub
lods
fidivrs
sub
jg
jb
jmp
sbb
adc
fidivrs
dec
mov
stos
mov
test
lock
cmc
out
repz
arpl
add
test
pop
sub
leave
insb
dec
pop
sbb
lret
mov
adc
pop
lods
fidivrs
repz
mov
mov
push
add
outsb
fstpt
sbb
pop
pop
sahf
sbb
add
xchg
mov
jne
roll
and
adcb
xchg
inc
lret
adc
fstps
jo
or
push
mov
jmp
notb
incb
push
inc
roll
sti
mov
adc
call
iret
mov
int3
mov
jl
sub
lret
lea
test
cmpsl
xor
inc
adc
fs
push
gs
mov
mov
add
in
cmpsb
hlt
popa
and
and
sarl
xchg
andl
je
movsl
or
iret
fnstcw
insb
sub
popa
loop,pn
mov
xor
sub
jae
ljmp
xor
push
subb
bound
mov
xchg
imull
je
scas
addb
aaa
mov
das
loope
mov
xor
imull
in
pop
jmp
add
popa
loopne
stos
sub
ds
les
ret
mov
inc
pop
mov
mov
mov
adc
and
pop
clc
pop
cmp
lds
mov
stc
pop
gs
push
add
pop
cli
sbb
mov
jecxz
fdivrl
call
pop
dec
inc
repnz
rclb
pop
popf
cmp
in
mov
rcll
fldenv
sahf
adc
pop
or
aam
dec
pop
sbb
in
xchg
in
xchg
repz
adc
std
jbe
xchg
test
pop
into
pop
mov
popa
call
insb
add
jmp
jge
cltd
push
push
or
xor
add
xlat
and
out
or
adc
loope
out
pop
mov
lcall
add
sbb
dec
adc
rolb
pop
push
xchg
cmp
push
insb
lock
xor
sbb
cmp
push
rorb
adc
lcall
in
push
ljmp
lods
daa
mov
pop
mov
xchg
cmp
or
cmp
jne
imul
pop
rorb
mov
mov
test
aaa
pushf
loope
xchg
cmp
pop
dec
jo
xlat
mov
insb
test
mov
cmp
out
jae
xor
xorl
cmp
imul
data16
pop
aaa
jbe
sbb
jmp
adc
js
xchg
cmp
loop
jo
jl
out
inc
jo
sbb
mov
add
mov
stos
or
daa
shl
pop
lock
mov
fwait
outsb
scas
xor
adc
scas
xor
mov
stos
add
test
or
cmpl
xor
push
lods
das
stos
mov
aaa
mov
mov
pushw
lods
add
repnz
mov
call
pop
add
lds
scas
sub
lcall
pushf
sbb
mov
mov
pop
out
jo
cmp
or
test
xor
aas
cwtl
daa
mov
rorb
inc
rcrl
mov
mov
mov
xchg
xchg
aam
jns
leave
adc
jo
lods
push
or
lods
sub
push
inc
adc
mov
and
in
es
add
xlat
adc
mov
lret
inc
ja
bound
sub
leave
xchg
mov
jae
jge
lahf
out
ds
mov
movsl
xorl
lahf
xchg
outsb
out
imul
mulb
pop
sbb
mov
cmpsb
lcall
jmp
outsl
fisttpll
inc
inc
pop
mov
xor
cli
pop
fiadds
mov
pop
pusha
repnz
ds
sbb
sbb
inc
mov
loope
outsb
in
sub
aaa
lahf
cmp
stos
cs
jbe
nop
cwtl
xchg
into
push
push
mov
out
scas
lock
jnp
mov
subl
aad
add
outsb
or
inc
jno
pop
repz
in
in
push
jp
mov
add
addr16
dec
shl
pop
jmp
adc
pop
idivb
lahf
cli
and
outsb
mov
hlt
not
cmpxchg8b
mov
sbb
dec
in
cmp
je
mov
mov
dec
adc
fsubrl
mov
xor
fidivrs
mov
adc
and
or
mov
fdivs
mov
mov
or
aam
add
jae
sub
mov
cmp
cwtl
inc
aaa
jg
movsl
mov
lods
in
addl
scas
push
push
add
mov
jle
mov
mov
mov
daa
mov
scas
dec
imul
repz
pop
int
jecxz
mov
jns
sbb
dec
insb
pop
push
mov
mov
dec
sar
enter
sbb
mov
adc
sbb
gs
adc
mov
or
scas
sbb
data16
aas
xchg
mov
sub
mov
lret
mov
sub
cmp
xlat
jl
push
cmpsl
sub
rol
mov
mov
jmp
or
mov
lods
sub
pushf
sub
jno
roll
mov
sub
or
inc
mov
pop
sbb
je
daa
cmp
mov
stos
ss
fbstp
pop
test
testb
mov
in
xlat
xchg
cld
rorl
inc
cmp
xor
lahf
push
stc
pop
and
scas
pop
mov
xchg
in
imul
xchg
sub
xchg
inc
sub
xchg
inc
adc
and
test
or
or
lahf
sub
ret
jne
sbb
sbb
das
cmc
xor
sub
add
mov
ficompl
ret
sub
push
mov
mov
outsl
imul
sub
test
lds
mov
cmp
dec
push
or
xchg
sub
in
jns
cmc
dec
test
add
mov
arpl
push
fildl
ja
jbe
lea
ss
mov
es
mov
orl
jb
mov
jmp
fwait
and
or
pop
xor
movsb
mov
stos
ja
mov
push
cwtl
mov
fcoml
dec
jb
cmc
ret
pop
ret
push
xchg
inc
jbe
mov
jo
sub
testl
push
ret
in
movsl
ret
sbb
push
sbb
add
stc
pop
mov
or
leave
push
jae
adcl
jb
sbb
inc
gs
cmp
inc
adc
test
sbb
ret
repz
dec
adc
in
jne
cmp
sub
cmp
loope
stos
das
mov
xchg
cmp
orl
and
xchg
pop
test
cltd
aaa
push
jb
adc
into
sbb
leave
ss
aam
adc
std
jge
push
lret
or
and
add
jo
or
pop
push
pop
mov
mov
sub
incl
mov
mov
sbb
test
repnz
lea
jecxz
adc
sub
add
orl
or
ja
mov
push
cld
and
mov
push
xor
jp
add
shrl
movsl
adc
mov
mov
ss
mov
and
sahf
jg
inc
or
imul
jno
js
insl
dec
cmp
lahf
lret
xchg
xchg
xlat
test
ficoml
sarl
shll
inc
adc
fdivrl
cmpl
int3
jnp
fsubrl
arpl
scas
sub
neg
dec
push
sbb
mov
dec
jmp
pop
lods
ss
cmc
and
mov
push
xor
lahf
ds
xchg
xor
jp
lret
popa
pop
cld
ss
pop
decb
push
rcr
xchg
push
mov
or
jne
rep
inc
and
std
xchg
aas
inc
jle
push
orl
add
push
scas
int3
xchg
cmp
mov
je
push
pop
out
jl
jno
sub
xchg
inc
ja
xchg
outsl
popa
hlt
pop
push
ljmp
push
adc
xchg
fcmovnu
cmp
les
inc
rsm
orb
sbb
inc
adc
adcb
mov
and
loope
aad
mov
sbb
adc
leave
push
push
jnp
jo
xor
test
inc
lods
sub
dec
mov
lret
daa
mov
mov
cmp
jecxz
mov
nop
pop
pop
iret
cmp
xchg
inc
shll
pop
push
addr16
cwtl
jno
leave
jmp
adc
inc
mov
sub
into
clc
popa
movsb
jmp
or
push
dec
push
std
sub
pop
jns
mov
int
mov
fwait
inc
cmp
pop
push
xchg
fiadds
mov
lcall
addl
and
mov
lcall
sbb
xchg
fdivrl
pop
xchg
aas
scas
movsb
call
aaa
adc
cs
dec
lret
mov
mov
mov
mov
fs
fdivrs
cmc
loop
call
mov
mov
cltd
cmp
mov
xchg
xchg
inc
clc
push
dec
sub
xor
imul
test
push
pop
sbb
sub
leave
lea
fadds
imul
jnp
jb
adc
movsl
cmp
inc
mov
fcompl
cwtl
dec
adc
mov
jns
je
insb
andl
insl
ds
adc
mov
test
lcall
lahf
mov
lods
xchg
xchg
inc
seta
lock
sahf
sarb
int3
jae
adc
arpl
call
mov
jne
loop
fcmove
add
mov
lahf
inc
jnp
mov
push
mov
or
pop
push
cld
or
mov
pop
clc
iret
in
inc
pop
sbb
and
stc
xchg
inc
push
sbb
outsb
out
sub
cmp
or
mov
push
jnp
mov
bnd
push
aad
fs
outsb
in
testl
adcb
sub
push
mov
push
sahf
xor
outsl
andb
push
cmp
xchg
dec
cmp
add
subl
adc
call
stc
pop
pop
mov
aas
add
mulb
pop
cmp
test
mov
push
add
and
das
lods
sub
xchg
xchg
sbb
fwait
in
pop
push
int
pop
jge
mov
mov
mov
ja
je
mov
lcall
movsl
div
pop
je
out
jbe
xor
adc
xchg
inc
psrld
pushf
aas
adc
decb
dec
adc
mov
add
imul
adc
orb
scas
shl
sub
mov
xchg
add
jp
jg
dec
adc
imul
loopne
sub
pop
jecxz
jb
ss
test
pop
daa
fbstp
inc
jbe
xchg
nop
insb
in
test
fnstcw
xchg
or
sub
loope
ds
adc
jl
js
fs
pushf
cmp
push
repnz
lods
jnp
sub
mov
mov
add
sbb
call
inc
jno
and
sarl
stos
ss
mov
ljmp
cmp
fwait
callw
dec
push
and
ja
aad
push
daa
cmpsb
xor
pusha
xor
cmpb
and
jecxz
jge
mov
pop
push
add
push
and
dec
xor
jl
lret
push
xor
sarl
out
inc
sbb
imul
cmc
pop
push
jo
je
adcl
cmp
xchg
aaa
jle
js
clc
insl
jge
xchg
in
imul
ret
mov
stos
out
jno
sbb
xchg
clc
xchg
sub
mov
test
jmp
les
ret
xchg
cli
xlat
clc
pop
arpl
fbstp
jle
ret
lcall
dec
sbb
mov
stos
data16
cmp
inc
jle
nop
cmp
ret
pop
jg
add
mov
mov
mov
push
ljmp
inc
adc
inc
in
jb
add
sub
pop
notl
add
mov
mov
iret
inc
adc
out
outsb
into
lea
ljmp
sarl
outsl
out
or
push
jp
mov
mov
outsb
jmp
sbbl
sub
sbb
add
ljmp
mov
out
jae
xor
in
sbb
shl
mov
add
test
repz
popa
cmp
test
sbb
sti
inc
jp
pop
jecxz
insl
cmpsb
or
xor
push
mov
mov
dec
or
add
sbb
ret
or
into
dec
loope
push
filds
fstps
rorb
pop
add
popf
jno
mov
stos
xchg
inc
ss
daa
push
pop
add
xor
jns
or
sub
mov
mov
mov
fstpt
scas
dec
or
mov
stos
xchg
test
int
int3
popf
loopne
or
lahf
cmp
xchg
leave
mov
in
addr16
cmp
into
and
jg
sbbb
popa
pop
hlt
xchg
xchg
mov
into
hlt
sbb
es
pop
cmpsb
xor
dec
push
cmp
mov
sti
sub
aaa
jmp
flds
inc
sbb
mov
cwtl
popa
repz
adc
mov
mov
lcall
or
lcall
int3
int3
test
repz
out
outsb
daa
jno
add
movb
lret
pushf
cmp
add
mov
sarb
movsl
cli
gs
fs
sbb
stos
cmp
add
lret
xchg
adcb
xor
mov
xchg
stc
ret
and
stos
jp
loope
mov
roll
cmc
daa
insb
jmp
out
icebp
pop
xchg
sbb
or
sbb
dec
pop
adcb
mov
out
mov
jmp
push
mov
xchg
xchg
sub
popf
jno
test
lods
xor
lea
mov
scas
sub
movsb
mov
mov
mov
out
mov
cli
fs
aas
adc
test
sub
push
cld
pop
fdivl
cltd
cmp
xor
adc
mov
insb
dec
aaa
sahf
inc
lret
popf
cmpsl
sub
and
jns
hlt
cmpsb
sub
pop
sti
gs
ljmp
into
dec
bsf
sbb
lahf
push
fnstsw
es
mov
dec
pusha
insb
lods
sub
jns
loopne
out
and
sarb
adcl
rorb
pop
push
daa
lock
mov
and
lcall
push
loop
xlat
clc
fs
sub
das
cmp
sbbb
pop
inc
or
cmp
or
cmp
sub
mov
push
cld
mov
dec
adc
sahf
inc
jo
imul
arpl
nop
test
mov
out
je
adc
xchg
cmp
cmpsb
sarl
cmp
mov
mov
ret
fcoms
nop
test
mov
pop
add
inc
lret
push
loopne
or
jnp
mov
aaa
xor
push
std
cmp
dec
adc
mov
pop
jb
add
out
out
jno
hlt
push
mov
and
loopne
out
sbb
imul
fiaddl
sub
arpl
nop
jmp
cmpsb
sub
cmpsb
test
jecxz
pop
add
sbb
mov
and
add
dec
insl
mov
sub
jp
push
cmp
cmc
das
mov
push
loop
jecxz
push
xchg
cmp
mov
fidivrs
pop
test
loope
push
sub
dec
lret
test
insl
out
lea
rcll
adc
jbe
sub
push
inc
aas
aas
lcall
call
movsb
jae
cmp
lcall
enter
addr16
lods
xor
adc
sub
mov
test
jp
fbld
mov
stos
add
orl
sti
adc
filds
mov
mov
ja
pop
xor
or
sub
pop
mov
dec
ss
notl
aaa
lcall
out
push
lods
cli
pop
sbb
sbbl
jbe
and
xchg
pop
jnp
enter
adc
sahf
das
mov
out
ror
pop
add
outsb
add
jg
call
sbb
sarb
pop
add
int3
cmp
mov
or
pusha
mov
push
sti
gs
fs
jmp
leave
mov
out
orl
fnstcw
inc
pop
insl
repnz
mov
das
andl
rcl
pop
sbb
adc
xchg
cmp
rorl
and
mov
int3
and
lods
inc
sbb
mov
xchg
pop
mov
sti
push
orl
and
or
data16
dec
sbb
jno
lahf
lahf
aas
push
rcll
dec
outsb
cmp
mov
sbb
sub
sub
mov
daa
sbb
int3
cld
xor
popa
sbb
mov
adc
push
add
pop
cmp
es
fsts
xor
inc
sbb
mov
testl
repz
sub
push
or
or
cmpsb
jns
cmp
mov
movsl
ret
xchg
mov
scas
cs
xlat
mulb
xchg
bound
fldl
popf
push
out
mov
mov
mov
notb
or
pop
mov
rorb
ljmp
xchg
fwait
inc
or
enter
sbb
cwtl
push
dec
or
bswap
ds
adc
nop
sub
nop
xor
pop
test
sbb
jp
mov
sbb
lret
imul
fwait
adc
push
shr
rcll
jge
inc
orb
outsl
pop
popa
hlt
mov
adcb
sahf
cmp
test
rcrl
dec
push
xor
cmpsb
pop
and
aaa
out
push
sti
xchg
testb
cli
aad
cltd
sub
inc
or
les
xor
xrelease
adc
jnp
dec
or
sbb
inc
mov
jae
xchg
daa
mov
aas
ljmp
mov
in
fcomi
pop
inc
adc
pop
int3
xchg
out
jae
adc
push
stc
or
pushf
pop
arpl
sahf
shlb
ljmp
sbb
ficomps
out
or
pop
lret
or
mov
pop
pushf
aas
nop
cmc
int3
adc
mov
les
lcall
xchg
mov
cs
mov
mov
sub
pop
add
push
mov
cmc
out
fisttps
push
leave
xchg
cld
pop
test
ljmp
jg,pt
decb
loope
lcall
daa
cmpsl
or
push
insl
in
and
xlat
cmp
and
pusha
or
in
xchg
sub
iret
fstl
dec
or
pop
mov
das
mov
xor
popf
cmp
adcl
repz
cmovle
inc
out
mov
test
mov
cmp
jg
cli
ret
aas
movsb
in
in
loop
data16
or
xchg
cmp
mov
pop
pop
xor
push
int
add
push
jle
addl
ret
mov
stos
add
les
or
xchg
sub
out
les
outsl
mov
sub
inc
cltd
aad
push
mov
push
push
int3
inc
jbe
ficoml
pop
sbb
sahf
aaa
cmp
push
xor
mov
mov
push
js
bound
dec
jmp
mov
jns
mov
jge
insl
fnstenv
mov
loope
stos
out
and
movsl
cld
cmp
lock
and
out
addr16
xchg
jae
push
jno
arpl
aas
gs
sbb
xchg
mov
cmp
fucomip
insl
mov
jo
jecxz
dec
outsb
sti
pop
cs
movsb
xor
in
xchg
fs
push
int
lahf
js
and
idivl
xor
sbb
pop
hlt
xor
cltd
xor
push
sarl
pop
mov
or
test
xor
cltd
arpl
add
jmp
stc
out
jne
in
xor
arpl
movsb
pop
sbb
fisttps
cmp
or
sarl
mov
jno
push
addr16
rolb
inc
lea
aas
mov
xor
sahf
mov
int
inc
movsb
fidivrl
lcall
popf
adc
ss
xchg
xor
xchg
cmp
mov
aad
xchg
insb
out
sub
in
in
sub
mov
mulb
mov
and
cmp
shll
hlt
jns
cmp
cs
cli
test
addb
mov
test
mov
xchg
das
test
jne
or
xchg
bound
int3
les
mov
sbb
xchg
adc
movsl
xor
inc
cmc
data16
out
lods
xlat
mov
mov
test
sub
sub
mov
adcb
test
mov
fistpll
stos
out
testb
add
test
or
out
dec
sub
inc
push
enter
add
mov
pop
hlt
stc
xchg
cmp
jmp
mov
loopne
lcall
int3
scas
xor
movsb
xor
and
pop
in
jl
dec
mov
mov
mull
cltd
cmp
mov
adc
mov
xorb
movsb
mov
sbb
dec
ss
ret
sahf
pushf
inc
xor
mov
pop
sub
mov
lods
cld
popa
push
movsl
orb
jl
and
cmp
xchg
out
sub
sarl
jno
std
popa
mov
packsswb
mov
jl
movsl
lret
ljmp
sub
daa
mov
ss
ljmp
pushf
push
jge
mov
call
add
inc
in
dec
inc
rolb
cmp
mov
and
movsb
sbb
inc
add
mov
xor
xor
mov
subl
adc
jae
pop
mov
les
cmp
je
outsb
sub
andb
xor
and
push
sbb
cwtl
inc
sbb
dec
or
dec
xor
mov
pop
mull
mov
push
data16
pop
call
repnz
add
inc
out
imul
aas
lock
push
jmp
nop
ret
fimuls
lds
imul
out
test
std
pop
mov
mov
dec
or
xor
roll
mov
subb
adc
stc
inc
sub
sub
sbb
es
arpl
roll
imul
fstpt
movsl
stos
sub
adc
jl
inc
xchg
sub
imul
loop
test
add
ja
mov
leave
push
into
mov
lret
jo
fcomps
sbb
mov
pop
stc
sub
cmp
mov
mov
fldl
cmp
jae
sti
sbb
cmp
outsb
adc
lea
dec
jmpw
loope
adc
push
cli
or
push
ljmp
pop
dec
xchg
adc
ret
test
jne
test
jo
mov
lea
dec
sbb
in
mov
mov
cmp
enter
mov
in
pop
stos
loope
das
test
dec
mov
inc
adc
lods
adc
adcl
mov
rclb
mov
repz
pushf
mov
sahf
jmp
cmp
cmp
push
or
inc
pop
scas
sub
insb
ljmp
mov
loope
icebp
sub
mov
mov
gs
int3
xchg
ss
je
fsubrs
add
xor
dec
insb
hlt
jmp
cld
orl
ret
decb
shlb
or
dec
mov
dec
stc
sahf
sbb
call
lret
fcompl
aaa
fwait
call
xor
scas
and
repz
cltd
inc
xor
sub
mov
push
popa
cmpsb
mov
add
and
inc
fdivl
cwtl
jno
pop
stos
cmp
int
arpl
xor
subb
adc
sbb
aam
fstpt
add
push
mov
insl
neg
jle
jbe
push
aam
mov
scas
push
push
ret
xorl
mov
inc
imul
adc
jb
mov
cmpsb
cmp
add
jp
xchg
mov
mov
data16
xchg
xor
adc
inc
or
jo
sahf
or
xor
aam
sub
or
outsl
sbb
dec
testb
rolb
out
add
bound
xchg
clc
jno
and
in
scas
xor
push
call
pop
mov
mov
pop
add
in
jbe
and
add
int3
mov
lods
out
jb
xlat
into
xchg
loop
ret
mov
or
in
inc
cs
push
lods
sub
xchg
cs
adc
movl
sub
insb
fsubrs
pop
jge
sbb
mov
or
decl
push
je
jl
jb
or
mov
mov
in
rep
push
push
call
cmc
scas
sub
stc
mov
jp
enter
or
test
ficoml
sahf
mov
mov
or
cmp
stos
xor
sub
test
and
xor
cmpsl
jnp
mov
sarl
jge
cs
xchg
les
adc
sti
gs
mov
andb
push
mov
xchg
cmp
fisttpll
pop
js
sarl
outsl
jbe
inc
or
or
sub
pop
jnp
push
push
in
movl
sub
subl
cmp
mov
imul
out
je
pop
lret
jb
std
inc
mov
loop
jnp
inc
shlb
xor
sbb
arpl
jp
nop
cmp
movsl
sub
jo
lcall
mov
movsl
in
jnp
mov
cmp
aam
das
xor
mov
jmp
popf
pop
jbe
lahf
enter
push
adc
pop
mov
pop
in
lea
push
mov
and
fdivrl
aas
loope
jno
sbbl
add
xchg
xor
mov
xor
out
out
jbe
sub
xor
outsl
imul
push
sti
sbb
inc
sbb
push
sbb
popa
repnz
xchg
bound
or
in
or
jg
cmp
popa
rcll
jae
loop
test
stc
lret
mov
orb
ret
nop
aam
jp
insl
paddusb
jns
das
rorl
fisttpll
jnp
lea
int
int3
rcr
ja
adc
add
iret
xchg
inc
sbb
fnsave
inc
push
rclb
push
lret
fidivrl
or
jl
xchg
xchg
out
lods
and
cmp
std
pop
pusha
rorl
jg
add
cli
jmp
add
insb
fs
popf
cmp
mov
cmp
mov
jmp
mov
inc
repz
and
arpl
xchg
or
jne
jmpw
mull
push
inc
adc
jb
pop
dec
add
cmp
in
pop
out
pop
jmp
ret
cmp
sub
inc
cmpb
sbb
mov
test
iret
fstps
push
in
dec
pop
push
in
xor
push
in
test
lcall
fldl
dec
adc
dec
jnp
fdivl
pushf
dec
in
mov
mov
mov
popf
jns
fmul
xchg
or
popa
or
sbbb
shrl
enter
jl
push
imul
and
sub
xchg
dec
insb
push
adc
mov
mov
mov
xchg
sub
pop
add
lret
xchg
ja
repz
aaa
bound
and
push
clc
mov
repz
mov
scas
addr16
push
cmpsl
mov
lret
mov
pop
jmp
cmpsl
dec
adc
lret
cld
xchg
jae
in
mov
daa
cmpsb
out
je
cmp
xor
push
int3
fisubrl
insb
dec
or
mov
mov
mov
aas
xorl
mov
inc
or
dec
jnp
or
sahf
xchg
call
pusha
fmull
aam
je
sbb
daa
push
add
xchg
inc
fldl
cmpsb
fs
xlat
popf
pop
hlt
into
clc
sbbb
lock
and
jle
cltd
xor
mov
dec
enter
and
aad
sbb
cli
xchg
js
repz
sbb
shr
int
jecxz
adc
push
jmp
xor
jb
ret
add
fisttpl
inc
imul
int3
arpl
ljmp
xor
lahf
bound
add
mov
pop
mov
aad
fildl
int
aam
daa
stc
pop
pop
pop
repz
jns
pop
stos
jno
adc
les
push
push
pop
mov
dec
jb
jb
push
insb
pushf
kmovb
mov
sbb
inc
push
int
bound
xchg
mov
dec
in
push
jae
inc
push
insl
add
popa
xchg
sub
mov
inc
out
test
gs
pop
xor
orl
or
add
shlb
and
test
jp
gs
fwait
pop
hlt
int3
testl
cmp
cltd
xor
mov
dec
icebp
fnsave
aad
sbb
xchg
ja
repz
sbb
mov
loope
adc
dec
in
jae
roll
sub
mov
or
scas
inc
push
mov
fs
fsubr
orb
jecxz
add
add
mov
pop
mov
aam
faddl
es
push
sbb
sbbl
mov
ret
hlt
push
mov
dec
inc
jno
jae
push
cli
xchg
idivb
sbb
aas
imul
xchg
mov
dec
in
or
insl
add
pusha
xchg
sub
mov
inc
in
test
data16
pop
das
pop
in
test
or
aam
sub
xor
and
orl
jns
gs
aad
pop
hlt
lret
testb
pop
dec
mov
xor
mov
dec
je
out
insb
sbb
jbe
repz
mov
lea
test
jmp
das
adc
in
mov
rolb
adc
mov
or
cmpsl
ds
mov
fs
fucomi
orb
or
push
andl
mov
roll
add
cmp
cli
push
sbb
repz
ja
sbb
lret
cld
rcrl
dec
adc
dec
inc
jo
jae
addr16
cltd
ret
cli
xchg
cmc
mov
sbb
ds
xor
nop
mov
dec
in
or
or
add
xor
push
mov
mov
test
data16
cld
pop
cs
in
test
lods
or
sar
sub
das
cmc
and
addb
js
gs
aam
pop
hlt
lret
sbb
in
jnp
push
dec
mov
xor
mov
dec
out
fnsave
aad
sbb
xchg
jne
repz
sbb
mov
fildll
adc
push
in
insb
xor
bound
imul
loopne
sub
xlat
mov
or
inc
data16
fs
orb
jp
or
push
andb
mov
pop
mov
rolb
add
cmp
cli
push
sbb
jbe
sbb
leave
lahf
ss
rcrb
dec
adc
jae
data16
cwtl
ret
hlt
mov
sbb
cmp
pop
xor
mov
dec
in
or
add
xor
xchg
sub
mov
inc
jecxz
test
data16
pop
sub
dec
in
subb
lcall
and
addl
cld
rcrl
sbbl
jmp
adc
ds
xor
mov
dec
ret
out
fnsave
aad
pop
inc
sti
xchg
je
repz
sbb
mov
fisubrs
in
imul
in
mov
mov
fists
and
xor
ds
xchg
fs
fldpi
orb
jecxz
add
add
mov
pop
mov
roll
add
cmp
cli
push
sbb
jne
sbb
enter
mov
mov
dec
inc
outsb
fdivl
gs
xchg
sar
repz
sbb
cmp
aaa
into
xchg
pop
xor
mov
dec
in
or
add
xor
sub
mov
inc
loop
test
xor
pop
sub
in
test
stos
or
sar
sub
sub
dec
inc
fiadds
mov
pop
hlt
enter
and
inc
mov
xor
mov
dec
ret
je
in
insb
push
inc
sti
xchg
jae
repz
sbb
mov
push
cmp
push
dec
in
mov
mov
ficoms
and
xor
ds
test
fs
lds
jmp
or
jecxz
add
mov
push
jle
mov
movsl
rolb
add
cmp
cli
push
sbb
je
sbb
lahf
ss
mov
mov
dec
inc
insl
fdivl
fs
xchg
sar
repnz
mov
adc
mov
or
test
xchg
pop
xor
lea
dec
in
or
add
xor
mov
and
cmpsb
test
data16
pop
sub
test
test
add
sub
and
jg
aas
jne
gs
rcll
sbbl
jmp
mov
xor
mov
dec
shr
je
jecxz
insb
adc
repz
sbb
mov
fsubrl
or
cs
in
mov
mov
fstl
and
xor
ds
test
fs
lds
jmp
or
jecxz
add
or
push
jge
mov
movsb
iret
inc
faddl
cmp
cli
push
sbb
jae
sbb
lahf
ss
mov
mov
dec
inc
insb
fdivl
arpl
insb
xchg
mov
repz
adc
mov
or
test
xchg
pop
xor
mov
dec
in
or
ljmp
pop
xchg
sub
scas
mov
loope
test
xlat
add
data16
pop
sub
test
test
add
sub
and
jg
ds
mov
pop
repz
repnz
call
mov
das
insl
cltd
mov
dec
shr
je
loop
imul
xchg
jb
repnz
sbb
mov
fldt
lds
push
in
imul
push
mov
xchg
sub
rorl
inc
arpl
cmpsb
cmp
mov
les
xlat
jmp
or
loop
ljmp
or
push
jl
mov
mov
les
sti
push
push
pop
repz
jb
sbb
mov
das
in
sbb
dec
inc
imul
popf
popa
aad
xchg
mov
repz
adc
mov
pop
adc
xchg
pop
xor
mov
dec
in
pop
jne
cmp
insb
add
pop
xchg
sub
scas
mov
loopne
test
aad
shlb
test
sub
test
test
mov
int
sub
sub
and
jle
ds
lahf
data16
rclb
test
and
jp
sbb
cmp
cwtl
das
imul
dec
mov
loopne
imul
cld
xchg
jno
repnz
sbb
mov
cmp
adc
aaa
push
in
push
mov
jge
add
rorl
inc
bound
cmp
mov
les
in
orl
loop
std
sub
mov
dec
jnp
mov
mov
ret
repz
gs
push
adc
repz
jno
sbb
les
das
jmp
rclb
mov
ds
jne
pop
aad
xchg
mov
repz
adc
mov
add
cmp
xchg
push
xor
mov
in
push
jbe
cmp
insb
add
dec
mov
subb
aas
roll
shrl
hlt
pop
es
out
xchg
cmpsl
or
cltd
lret
stc
sub
sub
and
jge
ds
sahf
addr16
xchg
pop
repz
sbb
in
adc
inc
mov
das
imul
fbstp
imul
std
xchg
jo
repnz
sbb
mov
cmp
adc
lds
ss
out
sub
pop
mov
mov
fistl
pop
add
mov
popa
and
data16
les
aad
test
leave
loop
sti
sub
mov
dec
jp
shrb
inc
fdivrp
sarb
dec
adc
jo
sbb
ret
mov
das
jmp
or
jbe
pop
aad
mov
repz
nopl
xor
cmp
xchg
push
xor
xchg
dec
in
add
insb
add
pop
xchg
sub
dec
mov
jle
mov
ficomps
shrl
repz
pop
and
inc
in
js
or
cltd
lret
ret
and
jl
ds
popf
addr16
nop
pop
repz
sbb
jecxz
adc
ss
das
push
mov
jbe
fst
imul
std
xchg
outsl
xor
mov
sbb
mov
cmp
adc
lds
xor
dec
jecxz
xchg
mov
ficoml
pop
add
mov
pusha
and
data16
les
aam
test
enter
daa
or
dec
jns
shrb
inc
fdivrp
mov
data16
dec
adc
outsl
test
mov
ret
hlt
mov
das
call
or
jbe
pop
aad
mov
repz
push
sbb
aas
add
test
xchg
push
xor
test
dec
in
add
push
ss
insb
add
pop
xchg
sub
dec
mov
jge
mov
fstpl
shrl
repnz
pop
and
out
xchg
or
cltd
leave
imull
ret
and
jnp
ds
pushf
addr16
pop
repz
sbb
loop
adc
mov
das
addr16
rcrl
mov
mov
imul
std
xchg
outsb
das
repnz
sbb
mov
cmp
adc
lds
xor
out
gs
dec
jecxz
xchg
mov
fsts
pop
ljmp
dec
pop
and
data16
lds
in
test
jecxz
stc
and
add
test
and
cli
mov
data16
dec
adc
inc
insl
test
lahf
bound
xchg
shlb
out
rcrl
mov
jbe
pop
insl
lea
hlt
mov
or
mov
add
stos
xor
rorl
mov
out
loope
dec
out
add
xor
insl
add
push
xchg
sub
dec
mov
jl
mov
fistpl
shrl
icebp
pop
and
xchg
mov
add
es
jns
aas
insl
lcall
mov
loope
adc
inc
mov
xor
rcrl
mov
mov
fcmovnbe
insb
or
repz
sbb
mov
cmp
adc
das
movb
dec
in
test
mov
imul
xlat
xchg
sub
int3
mov
sub
aas
push
jge
scas
jb
pop
movsb
shr
test
in
clc
and
mov
dec
jne
shlb
inc
fdivrp
mov
data16
dec
divps
inc
imul
mov
lcall
pop
mov
jbe
pop
xlat
outsb
mov
cmc
mov
or
cmp
adc
xor
lea
leave
subl
out
add
xor
outsb
add
xchg
and
mov
fstps
push
and
xchg
mov
add
repz
and
and
ja
inc
xlat
insb
cwtl
addr16
lea
mov
loopne
adc
mov
xor
rcrl
mov
jbe
fcmovbe
insl
or
std
xchg
push
hlt
mov
sbb
mov
cmp
push
shll
movl
dec
in
xorb
ja
add
lret
mov
std
sub
inc
push
jnp
lods
jno
pop
mov
vhaddpd
and
mov
dec
jae
shlb
fdivp
mov
data16
dec
push
pop
idivb
imul
out
mov
xor
xadd
push
mov
jbe
pop
fsubrs
mov
xchg
out
testb
call
xor
rorl
pop
out
fisubs
jbe
xor
outsb
add
test
and
mov
fcomps
addr16
enter
out
test
out
jne
or
rcll
sub
and
and
jbe
inc
xlat
insb
xchg
data16
enter
mov
loopne
adc
cmp
lcall
xchg
jne
fcmovbe
insl
or
cld
xchg
imul
adc
or
das
push
in
pusha
and
je
mov
insb
add
lret
mov
std
daa
mov
pop
push
test
lods
jno
pop
mov
in
mulb
or
dec
jb
shlb
inc
fdivp
mov
data16
inc
or
test
lcall
cmp
mov
xor
push
rcrl
mov
jbe
pop
fsubrs
mov
xchg
out
testb
adc
das
pop
cmp
mov
leave
subl
or
daa
push
xchg
sub
mov
xlat
fwait
stos
inc
int
shlb
out
enter
out
test
out
je
or
rclb
sub
and
and
jne
inc
xlat
imul
cmc
mov
fistpll
cmp
cmp
lcall
test
jne
insl
or
cld
xchg
push
mov
mov
jg
test
or
xor
add
push
in
pop
and
in
xorb
insb
add
lret
cld
es
pop
sbb
into
gs
jo
pop
mov
ret
in
cmc
pop
or
inc
jno
shlb
inc
fdivp
mov
data16
inc
or
idivb
pop
jge
nop
mov
fwait
xor
or
mov
jbe
push
fsubrs
mov
xchg
in
testb
std
adc
cs
cmp
mov
leave
subb
out
std
jbe
das
hlt
outsb
add
addl
jns
mov
lcall
sub
enter
out
test
out
jae
or
iret
xchg
add
shll
and
je
inc
xlat
push
data16
mov
mov
fidivrs
cmp
xor
rclb
mov
jne
fcom
insl
or
hlt
mov
sbb
scas
fidivrl
iret
or
xor
add
dec
in
jg
or
rclb
and
and
test
gs
outsl
pop
mov
ret
hlt
push
or
inc
jo
shlb
inc
fdivp
mov
data16
inc
or
cmp
test
cwtl
pop
jge
mov
fwait
xor
or
pop
add
jbe
push
fsubrs
mov
xchg
in
testb
cld
adc
sub
dec
xor
jg
pop
out
jbe
rep
add
addb
js
mov
aad
stos
inc
lret
not
addr16
enter
out
test
jge
popf
or
into
xchg
add
out
sub
and
and
jae
inc
xlat
imul
sbb
fnstsw
cmp
xor
rclb
mov
jne
xlat
insl
or
xchg
data16
mov
mov
jge
test
or
xor
add
in
pop
and
push
jle
or
rcll
and
and
inc
push
sbb
gs
lret
cld
shl
repz
add
inc
outsl
sub
mov
roll
mov
data16
inc
or
cmp
sbb
mov
fwait
xor
or
pop
cmp
pop
fbstp
push
fsubrs
mov
xchg
jecxz
testb
sti
adc
sub
cmp
mov
leave
jle
pop
out
ficompl
jbe
dec
int
jg
mulb
cwtl
mov
cmpsb
jge
or
cwtl
xor
pop
insb
pushf
xor
out
shrb
imul
lcall
mov
aam
idivl
inc
or
mov
jno
vmovlpd
mov
sbb
sti
dec
lret
imul
int
ret
jns
pop
sbb
jb
jmp
sbbl
xor
pop
mov
push
das
repz
lahf
adc
cmp
popa
into
mov
adc
std
loopne
stos
outsb
push
sub
fdiv
mov
call
cmp
sbb
inc
ljmp
int
sub
insl
dec
fmull
sahf
mov
int
cmpsl
cmp
xor
xor
or
or
negl
cltd
jno
orb
ljmp
push
sti
sub
add
shll
adc
std
movsl
push
adc
data16
mov
insb
pop
and
popa
scas
scas
shll
mov
jp
mov
jecxz
or
rorl
cli
das
jmp
push
cli
faddl
aas
mov
sbb
xor
cmp
sub
nop
and
mov
push
adc
icebp
mov
jae
in
std
jecxz
mov
push
mov
lcall
loope
jle
push
jle
mov
mov
push
or
bound
mov
jle
jp
sbb
inc
bound
test
push
dec
push
jns
cmp
lea
fstl
ret
pop
pop
sti
js
add
fs
cmp
jae
fs
sub
mov
outsb
clc
pop
rcll
jne
sti
xor
jle
rorb
in
lods
mov
das
movsl
or
int
int
push
rol
pusha
pop
pop
icebp
repz
loope
jp
sarl
adc
xchg
hlt
jmp
xchg
pop
repnz
orb
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
sub
cmp
clc
or
mov
lds
mov
jbe
stc
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
in
test
inc
cmpl
xchg
pop
in
fs
sub
push
cmovge
imul
add
lcall
push
xchg
fcomps
insl
