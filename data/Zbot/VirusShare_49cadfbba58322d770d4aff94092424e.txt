sbb
add
cmp
dec
push
ja
jp
shlb
lods
sub
movsl
mov
xchg
xchg
mov
lea
jne
inc
pop
adc
mov
cld
div
add
push
cli
pop
inc
xor
adc
movsb
and
dec
or
xchg
ja
popa
inc
sarl
inc
jae
adc
pop
out
in
mov
and
push
es
jno
popf
jmp
push
inc
in
imul
out
xchg
xlat
mov
lods
nop
sbb
jge
jns
imul
test
repz
push
xchg
cltd
clc
icebp
aas
movsb
inc
gs
mov
stos
mov
pop
sub
in
mov
inc
xor
dec
in
mov
fisttpll
mov
inc
cltd
shlb
or
or
popa
mov
stos
mov
add
in
std
pop
incb
mov
movsl
fmuls
and
mov
jmp
xchg
cld
push
inc
out
mov
ja
fs
push
outsl
adcb
add
pusha
lcall
pop
sahf
js
cmpsb
adc
push
jbe
imul
sub
mov
lcall
shll
nop
or
mov
shll
loopne
adc
fistpl
call
aaa
pop
test
pop
clc
ror
push
lea
cltd
popa
and
xor
pop
pop
lea
test
inc
pop
cli
and
xchg
mov
mov
mov
vpsrld
sub
xor
sub
mov
inc
mov
add
push
fxch
scas
xorw
inc
cmpsb
lcall
pop
dec
or
in
insb
jecxz
xchg
xadd
jl
mov
in
frstor
hlt
add
das
pop
pop
cwtl
and
push
dec
test
daa
movsl
aas
and
push
or
mov
rclb
sbb
pop
inc
jbe
outsb
insb
movsb
or
mov
xchg
les
pop
insb
cs
lcall
push
cmc
movsl
clc
in
es
movsb
jnp
popf
xor
xchg
popf
sub
jbe
fldenv
loop
cmp
lahf
es
out
inc
xchg
push
mov
fnstsw
clc
or
push
aas
imul
cmp
xor
xor
xchg
or
std
or
push
mov
jae
pop
push
dec
std
cmp
dec
inc
jmp
loop
rcrb
push
ds
es
push
fsubrp
test
rcll
andl
dec
dec
mov
call
mov
inc
jge
jo
jbe
add
xchg
fimull
fisttps
mov
mov
lea
dec
add
subb
popa
inc
fidivrl
inc
sub
dec
jmp
pushf
sub
pop
movsb
mov
insl
push
add
push
cld
mov
xor
cmc
inc
clc
adc
call
inc
lock
xor
xchg
mov
pusha
jmp
aaa
cs
sub
test
xchg
push
push
jbe
pop
jle
hlt
das
xchg
sbb
inc
adc
cltd
jns
xchg
inc
xchg
or
pushf
sarb
fdivs
adc
icebp
mov
iret
jo
jecxz,pt
mov
xor
popl
test
xchg
repz
pusha
lock
jl
mov
dec
popa
jle
push
cltd
cmp
enter
jns
aad
sahf
sub
outsl
sbb
je
rcrl
lods
pop
pop
lds
pop
aam
shlb
sti
dec
es
cwtl
in
mov
cli
icebp
test
xor
add
inc
iret
jl
jae
mov
lret
and
imul
xor
push
push
jg
push
dec
iret
jmp
dec
lahf
stc
pop
sub
loop
sbb
jecxz
jno
cmp
add
mov
add
mov
shlb
dec
jg
push
mov
ds
insb
push
into
and
cmp
mov
stos
lods
pusha
cltd
pop
or
push
test
das
pop
fdivl
pop
push
stos
xchg
xor
les
gs
mov
sub
mov
cmpsb
xchg
mov
lods
sbb
cmp
insl
and
pop
mov
movsl
inc
addb
jbe
add
adc
and
and
mov
or
sbb
xchg
jmp
jb
into
js
pop
test
mov
mov
push
shrl
mov
adc
pusha
popa
into
jae
and
mov
lret
fcomps
imul
insl
add
sahf
adc
sub
and
inc
int
imul
jns
cmpsl
movsb
mov
mov
sub
xchg
inc
mulb
mov
sub
subl
xor
pop
mov
mov
sub
adc
pop
cs
les
lcall
or
cmp
ret
adc
ficoml
call
mov
sub
push
mov
xor
stos
or
nop
int
jne
jecxz
fistpl
ja
pop
dec
add
fimull
popf
pop
dec
mul
pop
mov
les
ret
mov
stos
jge
test
mov
stc
inc
shr
add
not
add
push
xor
cmp
jae
mov
stc
lret
aas
add
hlt
inc
js
mov
push
leave
fs
iret
dec
dec
xchg
sub
fistps
cmp
mov
lea
push
inc
mov
aas
jb,pt
enter
call
adc
out
in
ds
mov
dec
les
adc
iret
xchg
xor
stos
and
bound
cmp
add
imul
aad
movsb
and
add
jae
gs
mov
dec
lea
push
ljmp
inc
xor
adc
out
ljmp
jmp
arpl
hlt
rorb
dec
jnp
push
push
icebp
inc
call
inc
cmpsb
or
pop
pushf
pop
push
lcall
mov
mov
push
sub
cmp
cmp
add
loop
cmp
cld
inc
outsb
cmp
ret
mov
bound
jnp
lods
sub
fwait
or
iret
imull
loopne
cmp
pop
xchg
and
ror
rcrl
mov
ss
repz
inc
loope
sbb
adc
jo
bound
pop
das
inc
xchg
add
dec
xchg
stos
scas
outsl
inc
xor
or
add
mov
mov
push
push
or
jb
adcl
xchg
xor
adc
push
lcall
fsubrs
scas
lahf
cmpsl
push
mov
push
je
mov
xor
inc
fs
mov
rclb
ds
cmp
aam
mov
xor
hlt
and
fstps
add
xchg
dec
enter
or
cmp
fwait
dec
mov
mov
scas
movsb
pop
imul
push
push
mov
lods
clc
stos
rcrb
les
cmpsl
mov
xchg
xlat
pop
test
aas
insl
out
in
pop
dec
loope
imul
fs
mov
mov
mov
out
push
fs
add
sti
mov
mov
bound
lret
or
inc
xchg
pop
mov
fisubs
fs
sub
bound
insb
add
sahf
mov
cmp
loop
je
mul
sub
sahf
lret
push
bound
mov
into
shrl
fwait
xor
push
adc
lea
mov
sbb
scas
dec
dec
xchg
pushf
lahf
jo
les
fisubrs
mov
sbb
loope
push
add
fwait
push
pop
xchg
push
sti
pop
incb
sbb
cmp
in
xchg
aam
jae
pop
arpl
xor
loopne
pushf
insb
in
into
or
subb
mov
xor
imul
pop
xor
popf
pop
loope
or
lods
jae
mov
mov
stos
xor
mov
dec
call
inc
ljmp
insl
dec
sbb
movsb
xchg
and
mov
in
mov
mov
push
jb
lret
sbb
lds
je
push
add
maxps
cmc
into
loop
lcall
aas
ds
pop
fstl
cmp
cmc
jp
xlat
add
lds
sub
in
or
in
add
aam
or
cmp
mov
sub
shrl
dec
cmp
cltd
dec
rcr
loopne
aad
adc
jl
and
cltd
pop
shll
fs
mov
add
sub
je
jb,pn
sbb
fsubrs
sub
dec
dec
and
nop
shr
mov
adc
adc
mov
popa
shll
out
cmp
int
test
fldl
ss
xor
push
sbb
xchg
les
pop
sarb
xor
pop
pop
fdivs
pop
cwtl
test
and
jae
jge
fcomps
xchg
pop
jge
cmpsl
movb
stc
subl
xchg
loopne
out
sub
lock
call
in
sbbl
xor
sti
test
pop
xchg
lods
iret
push
bound
inc
cmp
test
cmpsl
push
nop
out
std
inc
into
and
dec
mov
pop
lods
mov
inc
fistps
enter
insl
inc
icebp
loopne
les
leave
jbe
mov
je
rcl
push
repz
dec
jae
inc
enter
xor
or
xchg
lret
jl
ret
push
lea
sub
and
cld
lods
cwtl
movsb
insb
mov
pop
dec
adc
mov
imul
cmpb
in
push
jne
and
in
xor
jbe
psubd
mov
dec
sub
push
mov
cmpsl
icebp
out
mov
sarb
adc
jmp
std
jg
or
setne
sub
shl
test
push
sbb
pop
add
sub
sarb
and
insb
cli
lods
or
xor
dec
dec
xchg
test
dec
push
lret
jnp
pushl
push
xor
xchg
mulb
je
int
mov
ss
or
test
adc
lret
adc
ds
and
jecxz
inc
insl
mov
fidivl
int
xor
pop
jo
adc
andb
ljmp
into
insb
idiv
sbb
inc
and
nop
stos
mov
sub
jns
mov
mov
add
xchg
popa
out
push
or
inc
je
loope
ret
dec
int3
iret
lea
mov
jle
ret
jns
enterw
leave
ret
and
push
sub
dec
lcall
sbb
push
xor
jecxz
out
jo
movsb
outsl
push
aaa
idiv
test
jl
ljmp
std
sub
test
add
inc
dec
add
movsl
imul
rorb
mov
cmc
xchg
pop
mov
popl
sbb
adcl
jg
fisubl
push
lcall
mov
stc
cmp
clc
shrl
fists
repnz
popf
ja
sbb
mov
push
mov
and
push
sbb
xor
adc
xor
push
loope
lock
pop
xchg
sub
bnd
or
push
sahf
mov
repz
mov
adc
enter
mov
cwtl
daa
push
iret
jns
mov
cmp
xchg
jb
int3
mov
int3
andl
popa
pop
movsb
sbb
xorl
ds
xchg
dec
pop
mov
and
icebp
jecxz
mov
jl
pop
sarb
pop
iret
cmp
mov
cmp
jg
aaa
or
pop
jb
adc
lods
and
jne
mov
jb
ljmp
in
aam
xor
add
adc
nop
mov
xchg
je
andb
nop
add
dec
clc
and
sub
mov
inc
push
and
dec
inc
mov
push
push
mov
cmc
mov
adc
push
dec
popa
stc
push
xor
push
out
int
cmp
add
sahf
xchg
mov
inc
cmc
sub
jo
scas
pop
mov
das
loope
stc
ret
add
loopne
addb
sub
xor
daa
mov
call
mov
push
jae
pop
dec
dec
cmp
push
or
sbb
mov
and
and
dec
cmp
movsb
loop
sub
inc
xor
or
sbb
jbe
jg
scas
xlat
fnstsw
fists
and
push
jns
mov
mov
dec
ffreep
and
mov
scas
or
jno
cwtl
arpl
lock
daa
xor
test
loope
iret
sub
fmulp
push
popa
lret
cs
cmpsl
lods
jbe
xchg
push
dec
jecxz
push
mov
out
mov
adc
fcompl
loope
xchg
popa
jge
clc
and
test
jnp
outsb
bound
mov
mov
adc
int3
scas
mov
dec
pop
clc
orl
iret
enter
lcall
nop
mov
cmpsb
loop
adcb
imul
insb
cs
cwtl
cmp
orb
les
jmp
imul
sub
xlat
push
jl
test
cmpsl
fidivs
mov
xlat
outsl
dec
and
dec
push
push
fimull
fldt
mov
sbb
or
std
rol
cmc
inc
pop
push
mov
xlat
les
push
jl
dec
jnp
adc
cmp
fcoms
cmp
js
xor
test
cmp
movsl
dec
and
push
stos
cmpsb
mov
lea
sahf
xor
sub
lret
daa
mov
test
pop
loopne
addr16
sub
cmp
lcall
pusha
movsb
cmpb
addr16
mov
adc
cmpsl
adc
mov
pop
mov
enter
jo
jae
scas
or
dec
pushf
pop
in
cwtl
inc
int
xor
xlat
out
mov
push
pop
clc
cmp
and
out
out
xor
adc
or
jle
clc
mov
jo
mov
mov
jo
xor
js
test
cmpsb
xor
push
push
fucomi
mov
jno
xor
jl
or
mov
mov
data16
dec
fwait
adc
mov
and
cmpsl
ljmp
stc
repnz
dec
xor
js
pop
sbb
inc
inc
hlt
out
pop
lret
lock
sub
int3
lods
push
std
adc
pop
push
mov
push
jbe
cmpsb
xor
dec
adc
loope
sub
push
arpl
mov
add
bound
fistpll
mov
xchg
push
cmpsb
aam
sub
or
adc
mov
cmp
stos
test
push
aaa
xchg
outsl
inc
cmpl
out
and
ret
xchg
jnp
jne
lock
push
test
pop
and
jne
dec
pop
inc
decl
das
inc
cld
sub
pushf
aad
in
repz
stos
fstps
pop
jmp
jl
dec
push
pop
test
jmp
dec
sbb
scas
ret
cltd
pop
incl
pusha
dec
dec
xor
push
clc
idivl
sarl
push
lcall
loop
sbb
in
xorb
cmp
pop
inc
or
jmp
jmp
sub
mov
mov
push
adc
sbb
loope
clc
enter
outsl
icebp
or
mov
movsb
js
icebp
mov
out
fcmovbe
lahf
dec
jbe
or
mov
adc
sti
mov
push
out
cmp
cmp
rorb
adc
mov
fnstcw
lahf
addr16
mov
jg
push
filds
inc
addr16
int
clc
xchg
pop
or
bound
arpl
xor
dec
xor
sub
movsl
jl
enter
js
test
adcl
andb
pop
es
sar
lods
loope
lahf
movsl
dec
sub
out
xchg
enter
jo
lea
aas
dec
orl
gs
hlt
pop
in
ds
push
mov
inc
xor
cmpsl
fidivs
cmp
pop
pop
ss
cli
bound
rcr
mov
cmp
cmp
sbb
lock
cmp
xor
orl
and
scas
mov
cld
mov
mov
mov
push
pop
mov
dec
arpl
sti
xchg
mov
xchg
sub
jl
dec
jne
xchg
or
cltd
lods
jo
lcall
rolb
fldcw
jle
stc
stos
popl
xchg
xor
test
inc
push
idivl
clc
loop
jge,pt
sub
js
inc
fldenv
imul
iret
xor
add
fwait
hlt
jo
into
popf
clc
sahf
pop
xorb
in
inc
jnp
pushf
xchg
sbb
inc
adc
ds
stos
fwait
adc
xchg
cvtps2pd
sub
cmp
mov
or
aas
test
call
ds
hlt
pop
add
insl
out
add
in
ret
hlt
dec
or
adc
std
dec
cmp
call
aas
xorb
push
shll
add
cli
or
mov
ja
xor
mov
sbb
cli
insl
inc
and
lds
movsl
pusha
pop
push
ret
mov
mov
push
das
adc
xchg
and
cmc
repz
loopne
js
stos
ljmp
pusha
loop
ret
lret
pop
pop
push
jns
arpl
movsb
lcall
dec
ljmp
out
movsb
cmp
cwtl
in
xchg
les
pop
pop
add
push
mov
adc
loope
inc
das
outsb
mov
pop
adc
scas
iret
test
inc
out
stos
mov
js
push
ret
das
adc
movaps
inc
lea
hlt
pop
leave
jg
xchg
sbb
shlb
adc
jl
or
pop
shr
out
pusha
test
mov
bnd
push
in
push
push
lcall
arpl
adc
add
movl
xor
ret
fs
idivb
aas
in
ja
cmp
jnp
mov
mov
insb
push
mov
sarl
push
dec
js
int
or
lds
pop
stos
and
test
pop
and
gs
fsub
pop
and
mov
inc
pop
ficomps
xchg
out
cld
mov
and
lods
or
aad
dec
hlt
inc
outsb
fistl
inc
mov
test
test
cltd
pop
cli
push
dec
rcrb
pop
xor
jecxz
pop
add
or
add
mov
or
rclb
punpckhdq
mov
push
hlt
and
ds
dec
inc
inc
dec
testb
and
mov
pop
adc
mov
mov
test
outsb
lds
sti
loope
fiadds
inc
and
xorl
sahf
xchg
mov
test
fcompl
loop
sbb
sub
jg
push
mov
aad
pop
cmp
adc
xorl
mov
xchg
cltd
popa
adc
int
inc
dec
fucomi
or
aaa
add
leave
into
pop
jo
sar
xchg
movsb
or
or
push
mov
pusha
ss
mov
mov
cmp
sub
sar
push
or
scas
jno
mov
push
cmpsb
std
out
push
iret
inc
xor
std
sti
decb
xchg
mov
fadds
ret
popa
lret
adc
push
jge
orl
popl
stc
repz
test
push
sub
pop
out
stos
adc
out
repz
mov
push
pop
and
ss
mov
or
inc
add
icebp
sbb
add
mov
out
int
mov
fcmovnu
mov
xchg
lahf
cmpsb
out
pushw
int
push
sub
pushf
das
js
pop
sbb
cld
xchg
jo
adc
xchg
ffreep
cmp
inc
orb
cli
mov
dec
sub
es
adc
clc
add
cmp
push
mov
mov
outsb
pusha
pop
rorb
mov
notl
push
mov
xchg
loop
out
pushf
lahf
xchg
pop
sti
xchg
xchg
pushf
dec
in
inc
scas
es
mov
push
repnz
and
and
sbb
cmp
adc
push
push
jle
dec
mov
rol
in
adc
xor
pop
mov
bound
xor
sub
push
mov
or
mov
or
add
lea
pop
or
arpl
loopne
sbb
insl
and
add
mov
es
jg
xchg
scas
mov
cmc
aam
push
push
nop
bound
in
loope
popf
jno
jne
or
pop
mov
pop
mov
cld
push
dec
jg
xor
pop
push
xor
testb
mov
in
adc
pop
imul
xor
inc
adc
lock
enter
rcl
inc
test
into
pop
movsb
bound
sub
inc
mov
insb
xchg
outsl
data16
aaa
nop
push
pop
out
mov
lcall
out
pop
sahf
sub
clc
push
or
fdivrs
inc
mov
ret
xor
aam
icebp
inc
fistpll
mov
jmp
fcomps
or
push
xor
dec
movsl
inc
mov
xchg
inc
pop
or
int3
cli
or
insw
std
sti
and
mov
pop
cltd
aam
pop
lods
cld
in
jne
mov
pushf
int
cmp
daa
and
dec
sbb
out
loop
shlb
sub
std
sbb
push
das
daa
pusha
or
subb
adc
xchg
push
adc
in
mov
aas
scas
enter
pop
js
cwtl
push
pop
aam
cld
scas
lds
xlat
dec
dec
es
scas
cmpl
adc
jno
decl
fsubrs
scas
add
fmull
fwait
inc
adc
imul
xchg
ret
jbe
push
lds
fwait
out
sbb
jnp
in
aam
jmp
aaa
out
cmp
dec
push
add
xchg
jne
ja
mov
adc
sub
insl
pop
and
push
outsl
data16
in
lock
pop
pop
roll
stos
jle
scas
push
movsl
ja
inc
cmpb
push
add
addl
cmpsb
or
clc
das
fdivl
shll
adc
mov
sub
jmp
sbb
or
inc
sub
decl
dec
ret
sbb
jg
ror
testl
ret
idiv
mov
stos
cs
sbb
and
lods
xor
cmpsl
lds
sbb
mov
jp
stos
inc
testl
lock
popf
and
andl
decl
and
jns
aas
enter
mov
cmpsl
in
mov
dec
push
shl
in
int3
in
push
cmp
int
and
seta
andb
sbb
es
arpl
stc
shrl
mov
aam
insb
aad
inc
sarl
es
pop
pop
add
sub
nop
je
fwait
int
lea
inc
inc
mov
adc
gs
and
mov
adc
or
lods
call
xchg
cmp
mov
movsl
adc
push
inc
iret
or
xchg
and
jns
into
int3
fsubrs
add
sub
pop
jp
and
mov
repnz
sub
out
lahf
dec
sub
lret
ds
adc
insl
popf
lods
pop
scas
xorb
push
add
add
mov
or
xor
add
daa
and
cmp
js
shl
les
push
pop
pop
sti
mov
mov
xchg
xchg
paddusw
jmp
mov
pop
adc
test
dec
add
popa
test
jle
push
imul
sub
xorb
sbb
cmp
sbb
adc
adc
mov
dec
fs
fimull
inc
in
xor
lcall
lods
aaa
sub
mov
cmpsb
sbbb
and
aas
insb
test
dec
or
jg
daa
and
xor
mov
adc
mov
outsb
and
mov
push
xchg
xchg
mov
pop
jns
cmp
xchg
or
dec
sbb
lds
adc
repz
jge
jecxz
cmp
je,pn
scas
xor
fs
cld
leave
xchg
or
test
repnz
outsl
and
or
pop
lcall
xor
outsb
push
add
or
dec
aam
lea
xchg
aas
dec
shlb
inc
inc
sub
add
lret
adc
xchg
aam
test
push
adc
loope
add
adc
out
add
and
pop
jmp
inc
out
pop
inc
inc
cmpsl
adc
pop
jg
in
lcall
lods
and
or
pop
shll
jno
push
lcall
mov
out
xchg
pop
sub
fwait
inc
mov
mov
fs
lahf
out
push
lcall
jmp
arpl
jne
flds
addr16
scas
rcll
xchg
repnz
or
pop
sub
add
adc
inc
mov
push
movsl
mov
movsl
gs
dec
push
sahf
jnp
gs
int
mov
mov
lods
imulb
sbb
or
out
jmp
mov
mov
sbb
push
loope
scas
mov
sub
add
loope
hlt
sub
sub
dec
movsb
repnz
dec
test
sbb
mulb
jecxz
adc
xor
movsb
fldl
mov
mov
cmp
stc
jo
adcl
add
bound
mov
outsb
je
jle
sbb
mov
incb
insb
ss
les
in
test
mov
cmp
push
adc
stos
sub
xchg
sbb
sbb
data16
jno
sub
pop
loopne
cli
aam
lret
bound
pusha
or
pop
sub
sbb
sub
jle
mov
jno
jnp
rorl
inc
cmp
pop
jle
cmp
and
insb
nop
cs
cmp
mov
xchg
outsl
mov
pop
dec
mov
test
icebp
stos
mov
pop
aaa
inc
inc
subb
cmp
lcall
dec
add
sub
lahf
sub
inc
loope
icebp
inc
sub
or
shlb
testb
cwtl
mov
fstps
sti
std
or
icebp
cld
out
mov
fs
add
jo
lods
std
push
mov
and
and
inc
cmp
sub
sbb
arpl
xor
js
inc
add
lea
or
cld
jmp
jecxz
stc
vaddps
test
stos
sbb
mov
inc
pop
js
inc
inc
icebp
lret
mov
sbb
push
fisttpll
jae
movsb
and
jge
xchg
push
int3
fcomps
push
mov
sub
test
xchg
mov
popl
add
mov
dec
in
mov
cmpsb
fdivp
cmp
into
dec
repnz
cwtl
mov
lock
gs
mov
icebp
cmp
je
mov
dec
ret
lds
test
add
pop
imul
inc
incb
inc
mov
insb
roll
loopne
daa
pop
jne
inc
or
mov
push
mov
daa
ret
or
sbb
roll
insl
jmp
push
aad
mov
out
jns
and
add
das
cld
lret
jae
retw
loopne
push
cld
nop
jns
inc
pop
xchg
cld
sub
push
sub
aad
sub
stos
shl
sub
jmp
das
les
jnp
push
sahf
jle
iret
xchg
dec
jb
inc
sbb
push
pop
out
or
incb
jnp
pop
pushf
dec
aad
fs
pusha
xlat
mov
mov
sbb
push
dec
lea
int
cmp
mov
jmp
xchg
roll
ja
pop
sub
decb
testl
ds
pop
test
mov
js
add
data16
shrl
push
lods
pusha
out
sbb
sub
xchg
lea
dec
add
mov
lods
push
adc
mov
adc
out
adc
push
or
test
adc
jne
push
xor
ja
xchg
cmp
popf
and
sti
jns
inc
pinsrw
fildll
shlb
das
cli
popa
pop
cmp
jge
sbb
addr16
xchg
leave
sbb
xorl
xor
enter
loope
loopne
push
xchg
mov
jle
or
xor
xchg
mov
leave
fnstcw
leave
xchg
push
jg
hlt
pop
dec
dec
test
jl
mov
sbb
cmpsl
jl
cmp
enter
and
jo
cmpsb
push
pushf
sbb
mov
mov
ret
pushf
mov
jae
adc
dec
sti
in
lea
sbb
cmp
mov
out
int3
push
xchg
das
mov
fdivl
sarl
jno
mov
pop
mov
sbb
in
or
xchg
push
jmp
inc
push
cld
decb
mov
cmp
adc
xor
int
or
sbb
js
lcall
cmpsl
mov
adc
fwait
clc
add
jne
dec
pop
jmp
in
fistps
dec
popl
das
push
shlb
add
js
pop
call
js
outsl
jae
dec
sub
fstpl
jns
sahf
fildll
out
jg
mov
aad
sti
dec
mov
pop
xchg
adc
fdivrs
dec
sub
testl
divl
and
test
push
ret
rolb
into
out
das
jb
test
outsl
out
sahf
subb
jle
push
arpl
hlt
jl
mov
mov
ja
push
test
dec
jae
fstpl
repnz
gs
or
shrb
fistl
cmpl
es
xor
icebp
jp
lret
add
nop
xchg
mov
mov
sti
movsb
xchg
stos
aas
inc
mov
jecxz
into
cmp
mov
mov
cmp
and
jns
imul
mov
shll
cmp
cmpsl
lahf
mov
rorb
push
in
loope
aad
xchg
ret
fldl
scas
sbb
js
push
dec
sub
fcompl
push
inc
and
insl
mov
mov
out
lock
xchg
lahf
rorl
push
fwait
ret
inc
dec
lret
lods
jns
cmp
mov
out
loop
nop
stos
scas
pusha
add
sub
mov
pop
sbb
cwtl
mov
cwtl
je
andl
sti
rorb
lods
and
ret
and
ss
mov
mov
leave
xchg
cs
shr
call
fdivrl
and
stos
adc
pop
adcb
xchg
sbb
cmp
shll
cmpsl
sub
inc
aas
test
jmp
push
or
dec
mov
imul
jp
push
ret
or
insb
xor
nop
dec
push
dec
and
adc
pusha
mov
andl
cmp
dec
push
jg
push
addr16
lds
sbb
inc
add
inc
xchg
clc
bound
testb
mov
sbb
or
lret
inc
es
outsb
inc
sub
fidivrs
xor
push
pop
leave
out
xor
rcrb
jnp
and
mov
cmpsb
inc
sarl
push
mov
rcrl
jb
inc
cld
loopne
mov
rolb
and
frstpm(287
jle
push
inc
cmp
push
xchg
cmp
or
rolb
mov
push
sub
xchg
das
das
jp
jb
iret
dec
movsb
aad
cmp
gs
test
loope
insl
nop
and
cmp
mov
mov
test
imul
outsl
lahf
rolb
push
add
xchg
loope
mov
jae
mov
adc
bound
pop
mov
xor
push
flds
add
std
stos
sbb
sarl
out
imul
xor
jp
xchg
and
sub
jge
xor
mov
shrl
sbb
dec
or
daa
xor
lds
sub
dec
xchg
mov
fdivr
dec
sub
xchg
les
adc
mov
push
sbb
mov
cltd
dec
pop
out
int3
push
cmpsl
or
fsubrs
and
pop
leave
fistpl
pop
push
cmc
mov
adc
pushf
hlt
xor
call
arpl
notb
jb
iret
cmpsb
movsb
and
and
dec
int
out
int3
cmp
popa
jae
adc
cli
pop
jg
mov
insl
mov
ret
sbb
cld
les
xor
aam
cmp
mov
sub
nop
ret
es
pop
in
xor
mov
repz
and
pop
ljmp
int3
mulb
lret
or
repnz
lods
fiaddl
mov
sub
push
rcrl
sbb
mov
cmpsb
add
gs
mov
push
movsb
mov
shll
sbb
xor
hlt
inc
add
pop
iret
mov
cmp
rcl
xor
data16
adc
into
push
xorl
sub
cmp
stos
or
jb
mov
inc
rorb
addr16
hlt
xor
loopne
repnz
fimull
xchg
mov
jb
scas
int
shr
lock
andb
loope
mov
mov
daa
cmpsb
xchg
mov
addr16
rcl
shlb
inc
pop
cs
mov
adc
lcall
lds
mov
shr
xchg
sbb
mov
lret
mov
dec
dec
mov
push
insl
xor
inc
fbld
rorl
pop
mov
and
test
push
outsb
hlt
loopne
xor
cmp
xchg
push
in
cmp
std
lret
lea
roll
sub
je
lds
jge
test
orb
lea
out
sub
xchg
inc
in
popf
gs
test
daa
xchg
loopne
in
jle
aam
test
loope
sbbl
sub
dec
jb
mov
outsl
xlat
cs
je
test
std
pop
push
add
xchg
add
mov
xchg
fcmovb
xor
mov
sub
repz
mov
iret
test
out
add
or
pop
or
clc
inc
or
insl
call
jmp
xor
rcr
enter
add
xor
in
les
push
sub
ss
rcrl
dec
scas
es
push
clc
rorl
adc
xor
movntps
push
jno
addr16
push
mov
pop
scas
xchg
cmp
dec
repnz
xor
cmp
jmp
mov
inc
rol
pushf
mov
adc
cmp
xchg
jmp
mov
pop
mov
mov
out
jl
cld
call
xchg
sub
push
xor
or
and
pop
rclb
push
jae
cli
adc
adc
inc
aad
test
es
xlat
hlt
jp
test
cld
pop
das
lret
fwait
sbbl
dec
loope
mov
cmc
adc
inc
aad
jno
imul
and
push
adc
clc
fsubs
out
inc
jbe
cmp
stos
mov
cwtl
lock
pop
push
mov
insb
aad
xor
xchg
daa
sbb
push
ljmp
jle
test
dec
cmp
and
adc
cltd
and
scas
xchg
pop
push
in
cmp
pop
xor
stc
inc
adc
aam
jl
sub
push
mov
xor
aas
xor
aam
repz
mov
hlt
js
jne
and
lahf
shr
xor
push
jbe
popl
mov
or
ret
jo
xchg
mov
sti
dec
arpl
sahf
mov
test
loop
adc
jge
je
cmp
pop
xor
mov
jno
testb
sub
adc
loop
fnsave
sbb
pop
fidivs
cmp
mov
sub
cmp
pushf
jg
cmp
faddp
add
xchg
cmpsl
pushf
push
push
xlat
in
adc
out
popf
add
stc
mov
fs
cmp
mov
sub
sub
or
mov
cmpsl
cmp
dec
clc
mov
adc
cmp
lds
add
insb
movl
xchg
add
add
dec
lock
jo
je
icebp
mov
xchg
or
imul
sbbb
mov
jg
jno
or
sub
mov
fadd
sti
cmp
adc
pushf
sub
icebp
and
fldenv
push
jne
cli
sbb
xchg
mov
into
popf
mov
test
push
mov
or
push
or
mov
int3
pop
aaa
xor
imul
lea
lock
in
ja
cmc
cmp
xchg
pushf
imul
adc
imul
inc
test
or
shll
cmp
mov
push
xlat
bound
dec
in
xorl
decb
xchg
xchg
push
js
pop
mov
rcl
add
adc
mov
inc
pop
lcall
aad
iret
mov
dec
add
lods
fsubrl
into
jle
sbb
aam
pop
sub
js
xchg
hlt
mov
dec
lods
sti
xchg
mov
mov
divb
insl
lock
sbb
mov
push
cld
adc
fcoml
enter
aaa
push
fcoms
sbb
dec
inc
dec
cmc
dec
adc
out
or
hlt
les
inc
push
lods
mov
jo
clc
inc
pop
jge
scas
push
andb
cmp
lcall
mov
ds
outsl
sub
es
xor
or
imul
incl
call
idivl
cld
pop
add
dec
sti
xchg
jo
inc
pop
push
scas
rcrl
popa
push
mov
out
xor
and
jmp
outsb
and
cmp
inc
lcall
shr
call
and
mov
jecxz
outsb
rcr
and
sarl
ja
imul
bsf
add
mov
xor
js
xchg
sarl
sub
sbb
in
sub
mov
or
pop
lods
mov
es
add
push
rcll
adc
pop
dec
sub
cmp
loopne
jo
pop
stc
push
dec
test
xor
cmpsb
jg
sub
adc
movsb
dec
cmp
in
or
imul
sbb
jge
lgs
movsl
dec
add
in
insb
insl
repz
data16
std
aam
aaa
mov
lods
test
adc
shl
jmp
sbb
mov
push
jb
push
das
mov
pop
orb
ljmp
aad
cmp
lret
jmp
cmp
mov
xor
cmp
or
xlat
out
inc
testl
movsl
insb
out
out
mov
lock
mov
outsb
dec
mov
cmp
sbb
shll
iret
sahf
int
sbbl
and
into
imul
orb
add
xchg
xchg
int
jge
jg
hlt
push
jl
and
jp
pusha
lret
lea
bound
aaa
cmp
jo
mov
in
fmull
ljmp
sub
mov
dec
lahf
jbe
mov
cltd
xor
mov
sbb
sbb
outsl
mov
and
insb
xchg
fst
iret
jnp
loopne
ljmp
mov
insl
mov
cmp
repz
imul
inc
mov
add
xchg
mov
std
lret
nop
fistps
mov
fstpl
or
sbbb
testb
jle
sahf
add
into
xor
ret
fstps
cmp
sub
insb
sbb
out
cmp
aad
mov
clc
jg
pop
push
inc
jb
xchg
cmp
jmp
ret
sub
lods
pop
jg
pop
sti
cmpsb
cs
push
dec
test
xchg
adc
arpl
idivb
movsb
and
call
test
pop
push
add
add
loop
shlb
xchg
push
in
cmpsl
and
jg
push
div
cld
call
pop
bound
nop
das
jae
clc
xchg
rcrb
lcall
gs
sbb
xor
test
js
adc
xchg
or
jecxz
dec
adc
add
lcall
cs
cltd
inc
enter
fnsave
cmp
dec
cmp
shlb
int
push
std
or
mov
mov
dec
mov
and
fcmovb
pusha
jnp
pop
or
les
mov
mov
inc
xorl
mov
mov
loopne
imul
and
loopne
mov
cmp
inc
loop
lea
mov
out
movsl
mov
or
pop
mov
push
push
in
mov
insb
dec
aad
jp
dec
ss
mov
jno
sub
jbe
dec
pushf
daa
fbld
cmp
data16
jge
inc
movzbl
push
fsubp
mov
sub
mov
or
pop
cmp
xor
dec
and
incb
push
mov
jmp
or
sbb
adc
push
mov
and
or
int3
insl
fld
lods
or
scas
mov
mov
pop
cmpsb
mov
int
cltd
add
lsl
mov
ret
xchg
jno
xor
and
int3
mov
pushf
movsb
inc
imulb
enter
sbb
fs
cmp
push
xchg
lea
sbb
pop
push
push
std
xchg
mov
mov
mov
in
psadbw
out
jmp
jl
jmp
test
and
adc
loop
sbb
add
mov
inc
jbe
xchg
xchg
stc
xlat
stc
and
out
sahf
lahf
negl
fiadds
sub
fs
jle
sub
cmp
xor
adc
xchg
lods
pop
inc
lret
mov
jp
js
cmp
pop
jl
outsl
cwtl
pop
mov
pop
sbb
mov
out
xchg
movsl
push
cwtl
ret
mov
jo
insl
gs
loop
jne
and
mov
imul
test
ret
inc
cltd
cmp
adc
test
out
mov
xor
mov
mov
and
pop
mov
repnz
fldl
cmpsl
test
add
cmpsl
jp
shlb
add
lods
pop
mov
adc
and
add
cwtl
dec
xor
xor
lret
mov
shrb
sbb
cmpsb
adc
popa
arpl
sub
mov
push
push
cs
movsb
cmp
dec
jns
cmpsb
add
insl
imul
dec
xchg
cmpsb
enter
stos
cmp
bound
loop
test
sbb
imul
icebp
xor
and
aam
cmpsb
daa
lcall
dec
and
daa
das
in
push
rcl
and
jp
xchg
icebp
cmp
sbb
add
mov
nop
popf
icebp
repz
or
jge
cmp
test
mov
aam
and
mov
jne
ss
insl
adc
mov
inc
sarb
push
adc
jb
sub
mov
ds
xchg
adc
mov
sbb
and
stos
test
in
push
bound
jo
fcmovu
mov
mov
pop
jl
test
data16
scas
scas
mov
loopne
jmp
imul
inc
mov
xchg
jmp
or
loop
fnstsw
xchg
jg
or
dec
inc
push
stc
xchg
rorl
loopne
icebp
scas
add
es
pop
les
inc
lods
xchg
mov
out
fidivl
cmpsb
or
or
jle
fnstcw
add
jecxz
mov
cmc
lea
fildl
scas
lea
movsb
movsl
outsl
xchg
sbb
mov
mov
arpl
inc
cli
inc
int3
mov
pop
inc
ja
sub
arpl
jns
enter
sbb
xchg
sub
mov
mov
test
fcmovu
cmp
or
ret
xor
or
push
in
std
push
cmpsl
loop
shlb
pop
sub
int3
adc
daa
mov
inc
addr16
lods
mov
mov
aam
std
sbb
das
and
push
orl
adc
ljmp
xor
bswap
fsub
sub
pop
movq
sahf
xchg
mov
loop
stos
lods
mov
bound
jnp
inc
imul
cmp
or
aas
mov
inc
out
or
in
mov
mov
sbb
and
sub
cmpsb
movsb
clc
imul
imul
cmp
mov
adc
cld
insb
into
jle
mov
cmpsl
mov
fnstsw
dec
aaa
xor
rcrl
pop
adc
stos
lahf
dec
mov
pop
lods
mov
pop
xchg
jns
in
stos
in
pop
sti
push
imul
cmp
add
jne
loopne
lock
in
cmp
jne
fiaddl
test
mov
xor
sbb
cmp
sbb
dec
dec
inc
xchg
jmp
sbb
fidivs
jl
divl
cmp
sbb
mov
mov
xchg
push
or
popa
cmp
clc
scas
mov
mov
dec
cwtl
dec
fldl2t
adc
iret
lods
lcall
sub
in
test
in
jp
std
mov
repz
aam
test
rep
xorl
iret
jmp
jb
out
or
pop
xchg
dec
jo
fiadds
or
sahf
aam
cld
lds
in
jae
test
fwait
lds
in
jmp
mov
bound
aad
mov
test
mov
movsb
dec
insl
fisttpl
jge
or
sbb
stc
out
cmp
test
pop
or
xchg
push
xchg
addr16
hlt
and
daa
out
out
push
shr
pop
sub
in
jae
dec
int
nop
enter
jns
push
out
lret
and
sarb
mov
xor
loop
scas
cmp
addr16
lret
testl
inc
mov
mov
cltd
sbb
clc
and
cld
scas
lods
push
and
mov
pop
arpl
shlb
inc
fdivrp
out
add
adc
scas
and
cmp
loop
dec
sahf
scas
testl
mov
testl
shr
push
cmp
xorb
ficoml
in
xlat
data16
pop
fdivrl
repnz
jo
sub
int
cmp
pop
test
sbb
jmp
dec
lea
push
scas
aam
int3
dec
dec
or
adc
pop
fisubs
xchg
fs
push
mov
rol
pop
push
fnsave
outsl
cli
outsb
gs
sbb
add
cmp
test
sub
scas
sbb
jb
push
cld
push
rclb
mov
xor
out
inc
pop
icebp
insb
cmc
iret
pop
enter
int3
and
xchg
jnp
dec
inc
jmp
pop
add
clc
dec
dec
xchg
arpl
xor
add
jne
mov
cwtl
jns
jp
lods
cmp
es
or
push
add
or
pop
jmp
sbb
jo
mov
adc
cmpsl
aaa
stos
jg
xlat
je
into
stc
loopne
stos
add
sub
add
out
lods
aaa
imul
scas
cltd
add
sbb
movsl
sbb
dec
std
inc
shrb
imul
mov
ret
inc
xchg
inc
ficomps
into
sqrtps
das
xchg
lcall
pop
jb
pop
cmp
aas
in
movsb
mov
pusha
push
push
xor
dec
scas
push
xorb
xor
push
bound
repz
push
lret
iret
jp
pop
mov
mov
int
jne
cmp
mov
out
popf
mov
sahf
int
loop
push
aad
dec
out
jecxz
pusha
push
insb
pop
adc
adc
lods
repnz
xchg
inc
fstpt
adc
je
push
inc
xor
loop
insl
sahf
xchg
xchg
inc
test
cmp
push
inc
pop
dec
mov
cmp
lret
inc
mov
icebp
adc
int
popf
xor
fcomip
mov
inc
mov
das
call
leave
push
sbb
mov
mov
cs
mov
insl
bound
add
inc
xchg
sub
push
mov
adc
es
xchg
inc
jmp
and
inc
mov
stos
fisubrs
insl
mov
dec
push
repnz
or
ja
fnstsw
pop
mov
mov
jae
rcll
and
add
xchg
pop
ss
sbb
pop
sarb
pop
sahf
ljmp
repnz
loop
pushf
or
outsb
stos
mov
jb
ret
push
add
fbstp
adc
push
pop
dec
stos
loope
outsl
xor
fs
repz
jnp
hlt
sahf
dec
repz
insb
and
xchg
cmp
dec
xchg
mov
xor
inc
fidivrl
and
lahf
push
adc
js
mov
adc
fstpl
ret
xchg
mov
cmp
pop
xor
jno
xchg
cmp
push
idivl
adc
cmpsl
lret
movsl
xchg
push
pop
mov
or
push
and
inc
push
xor
scas
in
inc
adc
mov
ja
mov
mov
jecxz
pop
and
outsb
cwtl
push
jg
dec
loope
dec
push
in
and
iret
ret
cmp
shlb
sahf
mov
mov
mov
push
lds
add
lock
and
mov
and
in
popf
inc
mov
pop
mov
jae
aas
mov
movb
aad
sub
fiaddl
inc
add
mov
xor
cwtl
pop
sarl
clc
leave
sub
push
dec
insl
mov
call
adc
rcrl
xor
push
lret
hlt
dec
cmp
cmp
xchg
addr16
pop
fisttpll
in
push
aaa
jns
jne
insb
cmp
aas
ljmp
pop
aad
xor
xchg
cs
lods
imul
ret
inc
sbb
mov
cmp
in
sbb
inc
ds
lcall
mov
cmpsl
mov
scas
imul
movsb
and
cmp
jne
aas
rorl
ffreep
mov
imul
jg
adc
xorl
jne
pop
xchg
adc
mov
icebp
dec
mov
sbb
dec
sbb
cwtl
jmp
scas
sub
xchg
lahf
leave
jae
test
dec
out
dec
repz
xchg
mov
mov
ss
mov
call
mov
jno
mov
jecxz
jl
sbb
dec
adc
mov
je
mov
mov
scas
jnp
inc
lahf
add
xchg
add
push
xchg
sub
movsl
lea
mov
stos
xchg
sbb
jecxz
xchg
push
add
shr
imul
nop
test
xchg
add
xor
test
sub
push
aam
sti
adc
push
xchg
cld
es
js
xor
xchg
push
mov
sub
popf
sub
fdivrl
ficoml
xchg
pusha
cmp
cs
cmpsl
mov
mov
in
push
popa
jmp
dec
pop
and
dec
xor
inc
and
inc
mov
xchg
dec
cmp
ret
pop
dec
std
lods
sbb
inc
insb
fistpll
and
pop
fstps
icebp
inc
dec
xor
rolb
adc
repz
adc
icebp
stos
and
orl
mov
cmp
dec
les
jbe
jbe
add
xlat
lods
fists
mov
push
enter
shlb
nop
imul
jmp
adc
dec
mov
fstps
fwait
and
lret
lret
insb
cltd
rclb
gs
ljmp
jp
lea
inc
cmp
bswap
adc
popf
xchg
out
flds
sti
cmp
push
push
mov
clc
push
jp
hlt
push
mov
jnp
in
mov
xlat
cmp
cld
jg
fwait
leave
sti
std
jl
xlat
cmp
fiadds
add
movsl
or
cmpsl
cli
and
mov
and
in
dec
dec
fwait
outsb
push
fbstp
sti
fiaddl
int3
rolb
sbb
mov
xor
push
and
jo
daa
jno
push
xchg
addr16
in
fmull
mov
push
jle
jo
subb
aad
jge
xchg
pop
fmuls
int
mov
mov
bound
aad
nop
lds
or
les
sti
mov
loopne
jg
sarb
cmp
xchg
ljmp
lret
mov
push
mov
sbb
sahf
dec
mov
pop
add
fs
jo
sbb
cmpsb
sbb
mov
pushf
inc
sbb
ds
and
mov
push
xor
inc
mulb
jb
cli
push
stos
test
pop
mov
outsb
jle
sub
fcmovnbe
xchg
les
mov
push
fildll
mov
mov
adc
in
sbb
daa
mov
sbb
repnz
jle
pop
cmp
jl
add
push
push
nop
push
mov
xlat
add
daa
cmp
mov
jns
cli
in
dec
sbbl
loope
in
rolb
inc
in
fldcw
and
jbe
mov
out
pop
cmpl
scas
test
push
xchg
jae
lods
mov
or
mov
out
adc
and
push
cmp
add
sub
movsb
pop
jg
gs
and
and
sbb
lds
mov
cmp
xchg
inc
pop
js
mov
andb
push
inc
daa
cmpsb
lcall
rcrb
mov
push
test
sub
lcall
insl
push
cwtl
out
fldcw
repz
cltd
jmp
pop
shrb
mov
and
adc
mov
push
js
xchg
xor
mov
mov
pop
mov
test
add
mov
ja
imul
sub
sub
movsl
mov
add
cwtl
cld
leave
cmp
cltd
inc
fidivs
mov
aam
jae
into
jbe
popa
gs
ds
jmp
sarb
inc
inc
ja
mov
js
pop
mov
shrd
movsb
mov
pusha
insl
inc
cmc
inc
stc
popa
xor
stos
pusha
addr16
inc
int3
inc
sub
loopne
xchg
jbe
cli
pop
xchg
stc
mov
xchg
mov
mov
std
and
lret
adc
push
jnp
jns
mov
movsb
adc
shll
inc
incb
or
cmpsl
cmp
aaa
and
sbb
scas
shll
sub
mov
xor
les
mov
adc
pop
mov
mov
test
test
out
mov
cmpsl
imul
jns
insl
notl
mov
ret
mov
and
cltd
push
inc
aad
push
sbb
xchg
mov
jnp
jp
out
jecxz
dec
lock
inc
data16
inc
jno
or
test
sbb
jo
xor
or
jp
mov
hlt
mov
jl
insl
mov
ds
lea
loopne
into
stc
hlt
popa
sub
xchg
in
cwtl
fldl
xchg
sbb
psrad
into
add
mov
inc
subl
hlt
out
pop
and
pop
test
mov
inc
mov
mov
stos
pop
fs
or
dec
or
ja
rcrb
cmp
test
xchg
mov
out
loope
push
mov
movsb
out
jno
loop
sub
and
adc
je
and
add
test
pop
xor
push
shrb
mov
push
arpl
stos
into
mov
dec
push
push
and
push
sahf
shlb
scas
or
rcll
cli
push
pusha
mov
cld
jecxz
inc
adc
mov
movsb
pop
test
mulb
fadds
fldl
xor
dec
inc
repnz
mov
or
outsl
leave
mov
cmp
pop
jle
adc
inc
pusha
cmpl
out
scas
movsb
jne
cmp
mov
pminsw
imul
mov
rorb
cmpsl
icebp
stos
xor
shll
cli
imul
mov
jl
dec
scas
fwait
orl
fwait
pop
push
rcll
dec
sub
shlb
outsb
sub
jp
rolb
sbb
std
mov
mov
test
cmp
js
shlb
sub
ss
mov
sti
xchg
mov
pushf
cmp
pop
lods
vmread
scas
adc
gs
jmp
inc
cmp
arpl
lcall
lret
adc
sbb
cmp
andl
inc
lods
cwtl
lds
lcall
popl
adc
int3
add
loope
adc
vcvttps2dq
xlat
pop
mov
fstpl
xor
push
or
add
ljmp
xchg
daa
imul
scas
outsl
mov
and
jl
js
push
jno,pt
xchg
sub
adc
pop
lods
outsl
or
into
mov
dec
clc
sahf
jmp
add
mov
push
jmp
hlt
cmpl
mov
xchg
mov
adc
and
xchg
adc
push
rorl
shl
rolb
ret
imul
stos
aaa
sbb
movsl
mov
sub
icebp
pop
adc
or
and
jne
repz
sbb
xchg
cmpsb
lock
stc
shll
aad
jecxz
mov
fcmovu
mov
pop
nop
aaa
int
sti
sbb
mov
test
mov
andl
inc
cmp
int
push
and
test
cltd
dec
dec
jg
bound
pop
jg
push
sub
mov
sub
int
push
or
jb
lcall
lcall
std
ds
lcall
push
fcomps
andl
add
pop
xor
repz
test
loope
shll
addr16
mov
enter
xorb
in
mov
push
stos
inc
rclb
in
movsl
inc
adc
mov
pop
std
cmp
pusha
iret
add
mov
jnp
push
mov
mov
xchg
loop
pop
fcoml
sub
stos
cmp
push
push
pushf
xchg
iret
mov
inc
xor
sahf
rcll
mov
add
js
cld
adc
dec
enter
out
popa
jp
xchg
cltd
iret
idivb
fs
mov
ljmp
sarb
shll
dec
bound
mov
pop
xor
lea
scas
sbb
shr
jmp
pop
dec
je
xor
cltd
cmp
cltd
fcmovnb
adc
cld
inc
mov
popf
xchg
aad
ret
or
repnz
sbb
mov
hlt
roll
int3
mov
dec
cs
inc
add
out
es
sub
imul
test
les
stc
pop
inc
sti
xchg
adc
lods
pop
jo
idivl
lea
add
fucomp
cltd
or
mov
mov
stc
loope
dec
repz
adc
dec
addr16
js,pt
adc
xor
ja
in
jno
movsb
cmp
ss
inc
ja
aam
shll
mov
incb
adc
add
dec
fwait
cmp
mov
icebp
dec
mov
mov
jns
jnp
mov
addl
je
add
gs
mov
jmp
inc
add
push
mov
mov
movsb
pop
sbb
ficoms
cmc
inc
pusha
mov
mov
xchg
insl
js
jo
xor
xchg
inc
hlt
cs
lcall
adc
push
mov
mov
stos
lds
push
in
repnz
jg
clc
or
orb
loop
call
jns
mov
push
ficompl
in
inc
test
out
mov
add
stos
in
xchg
or
nop
cld
mov
insb
push
fsubl
push
dec
fmuls
dec
inc
int3
jnp
sbb
aaa
sbb
in
or
mov
or
and
pop
ret
adc
inc
pushf
rolb
inc
mov
pop
sub
daa
ficoml
push
daa
push
mov
mov
es
mov
adc
leave
sub
nop
adc
in
adc
or
dec
cmp
je
repz
shrb
out
mov
call
add
das
fs
cwtl
mov
push
push
lahf
in
daa
inc
roll
movsl
fsubl
shr
and
pop
int3
das
pop
dec
cmpl
movsl
sub
fstpl
xchg
stos
data16
sbb
popa
mov
jmp
jg
xorb
xchg
outsb
in
fnstsw
loopne
add
pop
int
das
pop
loop
xor
les
das
adc
insl
aas
dec
clc
inc
ds
repnz
adc
rcrl
push
insl
jp
shll
xchg
jmp
mov
fsubl
dec
bound
cmc
pop
push
into
xchg
insb
mov
test
sar
in
push
cmpsb
add
es
dec
add
mov
leave
test
xor
mov
inc
int3
pop
insl
cwtl
push
or
andb
mov
sbb
sub
sub
fistps
cmp
mov
repz
fcmove
mov
adcb
test
adc
js
push
push
cmc
pop
stc
pop
cmp
push
stc
lahf
mov
mov
jecxz
add
int
gs
aam
rcll
cmp
cli
mov
lods
in
xor
sbb
add
xor
sub
xchg
pop
bound
jo
sub
xchg
arpl
popa
rcll
cmp
fldl
push
xchg
sub
repnz
clc
pop
mov
leave
dec
sbb
cmp
and
test
inc
pop
lods
sbb
xor
cmp
repnz
jecxz
andb
mov
lret
clc
fwait
pop
adcb
adc
and
in
jne
fistps
mov
out
outsl
adc
cmp
pushf
bound
or
pop
testl
ret
lock
rcrb
sub
mov
ret
adc
sbbb
lcall
movsb
lahf
mov
lea
insl
xor
inc
sbb
push
pop
dec
ja
loopne
push
or
and
sub
subl
jo
mov
aad
or
pop
mov
cltd
es
cmp
inc
pop
sahf
js
push
daa
daa
call
insb
sti
loop
push
mov
add
adc
movsl
mov
int3
inc
lock
sub
mov
jg
cmp
jae
mov
cwtl
lahf
mov
jno
imul
pop
xor
clc
pushf
xchg
sub
fnstenv
aam
xlat
gs
push
xor
mov
sbb
mov
scas
pop
mov
std
jne
aam
jnp
nop
outsb
push
mov
fldenv
test
cmc
int
outsl
xchg
fadds
sbb
inc
add
leave
cs
js
ss
pop
mov
inc
xchg
outsb
cmpsb
ficoms
int3
cltd
aam
adc
jae
shrb
sub
jmp
push
jp
push
mov
or
shll
clc
cmpsb
cld
cld
or
mov
and
mov
jo
movsl
mov
jg
or
sbb
enterw
jae
cwtl
ss
int3
add
test
pop
inc
jge
aaa
xor
cmpsb
sbb
jnp
push
cmp
pop
mov
adc
in
mov
mov
and
push
lahf
push
pop
lods
daa
scas
cmpsl
jnp
push
or
and
adc
cmp
arpl
mov
sahf
mov
add
aam
loopne
sbb
inc
test
cmp
les
and
rcl
mov
cmp
xchg
lods
push
and
and
mov
and
out
aas
scas
sub
cmp
fs
cmpsl
repnz
imul
in
lds
push
xor
sbb
icebp
rcll
xchg
pop
nop
std
pop
in
add
outsl
stc
repz
jnp
jne
cmp
data16
adc
lcall
sbbb
push
jl
int
mov
sub
in
mov
jo
cmp
clc
xchg
xchg
mov
adc
jnp
pop
pop
mov
ja
lea
dec
pop
rol
push
xchg
int3
daa
repnz
lds
test
pop
fisttps
inc
or
shlb
les
push
push
lock
xor
sbb
jle
sub
pop
ret
add
adc
xchg
adc
fwait
cmc
sub
out
sub
or
pop
cmp
stos
push
and
std
mov
pop
jbe
arpl
add
sbb
addr16
inc
mov
sbb
rolb
mov
out
addr16
pop
mov
push
and
jns
lcall
or
add
hlt
lods
or
xchg
test
lea
push
ljmp
sub
xor
call
ret
dec
ljmp
mov
mov
mov
mov
add
xchg
sub
jmp
das
xor
mov
lea
or
jne
outsb
pop
sub
shl
loop
push
xchg
jge
or
push
ljmp
add
cmpsl
gs
or
inc
int3
mov
and
jbe
popf
jp
cmp
jnp
data16
push
das
icebp
or
cmp
xchg
lret
pop
mov
xor
jl
mov
outsl
insl
mov
outsl
dec
addl
fiadds
sub
push
push
iret
cmp
test
pop
pop
inc
push
test
mov
adc
es
push
out
adc
push
cmpb
push
push
mov
and
mov
sub
lods
lahf
mov
ja
pop
adc
xchg
adc
das
sbb
mov
sub
out
sbb
es
jecxz
mov
push
pop
xchg
lock
scas
lock
popf
jnp
pop
inc
or
cmp
shrb
aad
sbb
inc
xor
sbb
add
xchg
lret
xchg
loope
lret
or
fdivr
push
sub
in
adc
and
push
arpl
sub
pusha
data16
les
and
ret
xor
push
push
jecxz
shll
cmp
hlt
mov
or
mov
inc
out
pop
in
xlat
cmp
dec
loope
divb
push
push
mov
mov
jl
loop
pusha
inc
or
mov
nop
dec
outsb
subb
lods
aam
add
movsl
lods
daa
inc
out
inc
push
add
mov
xorb
mov
fistpll
or
loop
fs
adc
repz
sahf
rorb
ljmp
and
mov
shlb
inc
outsb
add
scas
loope
into
mov
lahf
repnz
outsb
xchg
pop
dec
cmpsl
xchg
xor
sub
sbb
int3
mov
aad
ret
outsb
in
xchg
and
shlb
data16
mov
add
mov
sbb
or
adc
fistpll
ret
pop
aas
and
les
and
outsl
in
lahf
into
mov
push
dec
xchg
jno
push
lret
mov
jo
fwait
jecxz
mov
sti
repz
scas
adc
bound
insb
test
les
mov
pxor
dec
dec
and
loop
movsl
mov
sub
xor
ret
dec
mov
fld1
jb
ss
scas
lods
adcb
or
pop
lcall
push
subl
sub
xchg
fistpl
shlb
negb
mov
dec
mov
sbb
std
cmp
dec
ret
jno
jns
push
std
inc
pop
mov
xchg
leave
ja
lods
mov
iret
imul
dec
nop
in
loope
sahf
aam
movsl
cltd
ret
push
es
xor
cmp
enter
xor
decl
or
je
arpl
pop
loope
xchg
jae
push
iret
cld
iret
repz
arpl
lods
xor
mov
lcall
jo
xchg
mov
or
lea
mov
subb
out
mov
mov
mov
push
sub
and
shlb
mov
cwtl
push
outsl
pop
call
inc
dec
mov
or
bound
imul
outsl
lcall
jns
gs
dec
pop
dec
sbb
rclb
sbb
push
jo
cli
sub
es
loop
jb
cmp
dec
jge
push
jl
clc
ret
test
jle
arpl
imul
mov
push
loop
xor
add
sub
push
jecxz
dec
lea
je
imul
sbb
nop
repnz
imul
xor
loop
out
inc
lcall
sbb
testb
rcl
insb
push
cmp
add
adc
fdivp
mov
into
loopne
lock
pop
inc
xchg
dec
xor
jno
sti
lods
loop
push
mov
adc
jbe
fstps
shl
xchg
pop
mov
pop
jg
lods
jae
pop
sbb
sbb
sahf
xchg
or
lret
sub
aaa
clc
aaa
mov
aam
mov
cld
xchg
or
sbb
movsl
cli
ja
jns
loop
inc
push
aaa
adc
adc
popf
out
inc
mov
cmpsl
or
pop
xor
adc
xorb
sbb
test
test
lret
mov
mov
mov
push
cmc
pop
adc
fadds
nop
mov
push
xchg
mov
dec
call
mov
js,pt
mov
jnp
dec
cld
cs
ja
adc
popa
cld
loope
inc
xor
jbe
je
sub
test
jg
dec
std
dec
cmc
inc
out
xor
mov
repnz
push
xchg
aaa
sahf
inc
mov
pop
loopne
add
add
loopne
or
in
test
lcall
inc
xchg
jno
pop
mov
int
loope
jecxz
shlb
push
call
outsl
mov
pop
jne
out
data16
xchg
or
adc
jno
and
mov
js
add
mov
xor
push
cmp
jnp
and
pop
inc
scas
mov
lret
ja
movsl
mov
roll
xchg
leave
push
push
aas
and
or
inc
scas
pop
add
pop
jmp
orl
fildl
int3
lret
and
mov
and
lahf
cmpsb
jo
adc
mov
mov
sub
std
xor
mov
fisttpl
push
cld
sbb
testb
insl
jbe
popa
mov
and
ret
imul
add
cmp
add
jo
push
stos
xchg
or
out
mov
adc
xchg
mov
in
cmp
sbb
pop
loopne
out
adc
push
push
movsb
daa
jge
cld
cmp
jl
sbb
inc
xchg
xorl
out
or
rcl
sub
imul
xor
mov
mov
sub
rcrb
movsb
push
jns
stos
idivb
pushf
js
sub
testl
sahf
test
lds
xchg
inc
test
daa
scas
push
or
lea
fadd
fldenv
movsl
loope
add
inc
pushf
inc
scas
sub
sub
fnstenv
mov
rep
fwait
xchg
and
aaa
xchg
mov
insl
enter
jl
or
fwait
mov
call
shll
cmp
je
pop
rolb
lcall
pop
lods
fistl
inc
lds
dec
daa
lret
call
outsb
clc
cs
out
inc
fldcw
push
insl
push
clc
mov
sti
mov
fcom
test
sbb
test
daa
pusha
fdivrp
push
je
mov
mov
das
jmp
in
jno
or
push
jle
inc
or
pushf
leave
fcomps
pop
ret
shll
mov
loop
aaa
inc
pop
sbb
jge
cmc
les
or
xor
out
and
jns
xchg
insb
ja
repz
ss
and
inc
cmpl
je
lock
aam
push
cmp
mov
cmpsb
rclb
enter
out
fimuls
mov
in
js
test
jo
add
stos
jbe
cmc
pop
or
or
insb
dec
mov
xlat
pop
cmpsl
inc
flds
fcmovb
movsb
inc
insb
push
sbb
pop
or
ja
mov
mov
in
icebp
into
mov
and
inc
adcl
mov
xor
daa
cmp
mov
add
adc
cs
std
fistl
add
stc
mov
sbb
cwtl
js
test
mov
adc
dec
mov
popa
xchg
mov
mov
inc
add
pop
in
xchg
jmp
and
outsl
out
and
xor
les
cmpsl
mov
outsl
in
mov
pop
push
pop
mov
lret
shl
mov
adc
or
pop
sbb
test
loop
nop
je
sub
cltd
fdivrp
fistpl
stc
hlt
call
daa
mov
sub
add
mov
in
pop
lock
mov
cmp
test
std
shrl
ret
scas
and
push
jne
lcall
dec
inc
mov
xor
stc
xor
sub
lea
mov
xlat
fisttps
shll
add
nop
mov
ds
test
push
mov
xchg
imul
pop
adc
gs
filds
jns
js
dec
es
call
sbb
fdivrp
mov
or
xchg
imul
shlb
fisubrl
test
enter
cltd
imul
pop
pop
test
push
sub
sti
xor
jle
loop
add
mov
in
push
or
jb
mov
test
bound
xor
add
aam
in
pop
insl
push
lods
mov
cmp
arpl
enter
xchg
adc
dec
jb
mov
mov
mov
inc
test
push
dec
and
pop
lds
ds
push
shlb
xor
mov
pop
leave
inc
sub
sar
stc
cmp
orl
push
inc
xlat
gs
orb
jae
sub
mov
mov
in
ret
adc
sub
xchg
mov
mov
cs
popf
mov
add
and
xchg
icebp
rcrb
in
mov
mov
fwait
pop
daa
mov
jbe
ljmp
lcall
fisubrs
sub
add
inc
repz
mov
cli
iret
ljmp
insl
ljmp
enter
in
iret
enter
adc
and
mov
int
cmp
outsb
lds
push
out
push
aas
push
or
js
add
mov
cmp
xor
add
inc
ret
or
int3
sub
es
sub
jecxz
call
xlat
mov
xchg
insb
outsb
xchg
push
xchg
aam
xor
rcrl
icebp
cs
cmp
ficoml
pop
pusha
shrl
mov
aas
clc
ds
dec
mov
lcall
pop
outsb
mov
out
lds
call
cmp
and
add
imul
fistpl
pop
filds
insl
dec
push
inc
cli
fldt
push
push
rorl
cmp
gs
ret
mov
loopne
xor
dec
popf
ret
adcl
filds
ljmp
cmp
dec
clc
xchg
icebp
jge
sbb
roll
adc
xor
in
popa
lods
insb
sub
fists
clc
jne
adc
lret
xchg
idivl
cmp
insl
mov
push
mov
lcall
dec
aam
loop
testb
rorb
sub
sahf
inc
push
lock
out
xor
dec
jp
adc
jle
cld
push
jbe
mov
cltd
mov
add
dec
scas
out
call
adc
sub
add
xchg
sub
mov
xlat
mov
push
pop
std
mov
gs
cmp
add
mov
jno
inc
out
les
into
cmp
fchs
or
push
mov
or
cmp
jae
aaa
pop
stos
mov
push
xchg
hlt
jae
adc
enter
sti
imul
cmp
and
or
addl
scas
mov
cmp
push
dec
and
sbbb
lret
mov
mov
inc
mov
rcr
xchg
mov
inc
loop
inc
sbb
jae
fwait
push
loopne
mov
in
mov
imul
pusha
rclb
push
sbb
inc
lea
shl
pop
shrl
loope
push
sarl
xor
mov
sbb
sar
outsl
or
xor
sub
sbb
fimuls
sbb
insb
sbb
adc
loope,pn
out
dec
testb
or
and
daa
jmp
shl
inc
mov
or
jne
mov
repnz
cmp
cmp
int3
jecxz
mov
mov
mov
mov
cmp
xorl
outsb
scas
push
sbb
inc
cmp
out
cmc
test
and
ret
lock
outsl
call
or
fcomps
xor
repnz
jge
sub
inc
mulb
xor
sub
sahf
add
cmp
das
adc
imul
adc
out
push
lds
cmp
imul
pop
sub
xlat
ds
mov
pop
mov
xor
xchg
fdivr
fnstenv
fiadds
cwtl
imul
sahf
push
out
in
lods
push
fidivrl
das
mov
jbe
mov
int3
push
loop
out
pop
xor
loopne
aad
xchg
fwait
cli
shll
pushf
fldenv
ret
popa
xor
test
inc
inc
int
cmpsb
popf
lcall
add
xor
inc
cmpb
fdivrs
in
daa
mov
add
mov
leave
mov
into
pop
sub
push
jg
jg
push
call
xor
pop
adc
nop
xor
clc
les
adc
xor
ret
test
out
sub
ss
aas
or
mov
lret
jb
stos
dec
ja
aaa
lcall
loop
mov
sub
push
inc
pop
hlt
add
push
xchg
push
loopne
mov
fbld
outsb
sbb
mov
outsb
jno
outsb
pusha
in
aam
xor
jbe
and
jns
push
jb
xor
dec
fidivrl
mov
mov
gs
inc
push
shl
int3
imul
sti
push
dec
and
mov
or
andl
jp
jae
pop
andb
mov
test
andb
in
mov
sbb
stos
out
push
scas
xor
cmp
dec
push
stos
mov
jno
cld
mov
sbb
cmpsl
and
sub
lret
mov
lahf
sub
clc
icebp
push
in
scas
enter
mov
adc
and
loope
ss
aaa
dec
dec
jmp
cmp
clc
jo
test
mov
mov
rcrb
std
es
pop
xchg
or
repnz
sbb
push
or
and
daa
mov
mov
mov
sub
mov
jae
dec
sbb
fldl
jno
insl
add
lret
mov
or
in
lea
sbb
sarl
adc
lret
xchg
jns
cmpb
rcrl
push
jle
adc
pop
xlat
in
jge
push
out
or
outsl
in
js
lea
mov
inc
fsubl
les
push
xchg
fsubl
xchg
stc
mov
aas
notb
dec
inc
les
xchg
pushf
push
pushf
cmp
lds
adc
lock
scas
cli
pushf
inc
les
es
dec
xchg
mov
jo
cmc
cli
cmp
sub
pop
jge
push
dec
mov
sbb
or
push
testb
lea
sub
adc
lea
mov
out
faddp
dec
adc
push
imul
push
out
aam
push
sub
lahf
pop
enter
aas
imul
sub
jnp
rol
sbb
lock
test
ret
cmpsb
ret
clc
jge
das
mov
ja
jo
clc
push
movsb
adc
popa
out
dec
loopne
xor
dec
cmpsl
jmp
repnz
movsb
ret
jecxz
clc
das
xchg
ficoms
adc
dec
pop
sub
xorb
pushf
fld
xchg
xchg
scas
pusha
loopne
call
xor
mov
jmp
fisubrs
loopne
icebp
inc
mov
pop
inc
enter
push
adc
inc
test
scas
dec
loope
cmp
add
lods
push
add
ss
dec
or
test
push
xchg
pop
sbb
adc
push
xchg
stc
fisubs
jno
xchg
aas
xchg
cmp
mov
sub
divb
push
int3
das
push
add
into
inc
es
movsl
std
mul
xchg
add
daa
lods
xchg
lods
sti
mov
mov
aas
mov
icebp
jnp
cld
cmp
rcr
adc
into
fisubrs
stos
jo
jae
clc
jg
in
movsl
fidivrl
dec
jns
movsw
sub
aad
or
inc
hlt
movsb
lea
sti
shl
fdivr
movsb
insl
scas
jno
cwtl
xor
cmc
pop
stc
add
sub
mov
cmp
jge
iret
mov
sub
scas
in
pop
sbb
fdivs
lods
outsl
adc
mov
in
mov
xor
ds
sbb
inc
jl
testb
ret
scas
add
mov
mov
addb
stos
mov
pop
jle
adc
loop
out
aas
enter
xor
mov
mov
std
add
cmpsl
push
in
mov
xchg
jmp
mov
sti
jbe
in
mov
popf
or
xchg
xor
sub
imul
test
frstpm(287
mov
leave
addl
inc
pop
pop
xor
daa
or
rcrb
bound
jge
inc
mov
or
scas
loop
inc
neg
push
push
hlt
insl
aam
and
dec
xor
addl
int3
jl
lahf
mov
outsb
cwtl
mov
fldl
aad
push
and
mov
loop
hlt
aas
fisubrl
cmpsb
sub
int3
cmpsl
icebp
fmul
cmp
test
xchg
ja
test
adc
and
pusha
inc
xor
jne
inc
out
shrb
test
pop
ss
es
aaa
leave
fisttpll
pushf
dec
bound
data16
es
pusha
scas
push
pop
leave
in
push
adc
pushf
inc
add
lea
mov
sub
xor
scas
loop
pop
lahf
lret
ret
shll
push
push
cmp
mov
lcall
adc
jg
outsb
cwtl
pop
inc
sbb
inc
sbb
xchg
lret
lock
outsb
xchg
clc
repnz
push
fldenv
mov
repz
or
sbb
push
jbe
shlb
dec
sub
xchg
loop
and
or
xor
sti
lcall
mov
cmp
lods
jge
mov
cs
push
inc
das
aaa
mov
dec
or
nop
sub
das
add
mov
stc
push
jmp
inc
scas
int
xchg
cmp
ljmp
xlat
push
movsb
cmp
dec
sub
and
mov
inc
pop
insl
int3
xchg
pop
mov
or
daa
test
dec
sti
cli
xor
iret
aaa
jg
xchg
mov
movb
sbb
mov
fnsave
xor
imul
xchg
loopne
mov
and
imul
loopne
xchg
sbb
jno
jbe
addr16
test
and
fiadds
and
push
scas
out
inc
xor
cmp
sbb
test
mov
cmpsb
cmp
xor
adc
ds
dec
adc
add
inc
xor
testb
lcall
aad
mov
imul
lods
aas
das
imul
call
sbb
sarb
fsubrs
ss
xor
or
movb
jbe
imul
aad
or
mov
pop
xor
pop
jmp
xchg
out
ja
and
fld1
mov
cs
or
daa
push
popa
ljmp
dec
scas
sub
nop
inc
pop
pusha
dec
cmpb
push
and
cs
enter
jecxz
lret
lods
int3
and
mov
ljmp
aas
push
fiadds
das
sub
or
leave
mov
and
stc
jcxz
int3
jecxz
ret
cs
cmp
jmp
cmp
jmp
inc
icebp
mov
jae
in
push
mov
mov
test
cmp
pop
repnz
xlat
testl
shlb
or
test
dec
cmpsb
mov
jb
mov
aaa
sbbb
or
lds
push
sbb
scas
and
push
sbb
arpl
mov
loope
sub
pop
dec
in
in
mov
roll
dec
stos
jnp
movsl
cli
fisubrs
cmp
aaa
mov
xor
rclb
out
cmpsl
pop
dec
jne
hlt
test
test
ror
hlt
pop
pop
xchg
dec
mov
cmp
ret
lods
mov
addr16
mov
xor
sub
jge
std
fcomp
lods
xor
in
pushf
std
or
cmpsb
movsl
push
loope
ret
mov
mov
xchg
adc
jae
dec
sti
lds
inc
jb
push
lods
jb
fwait
test
lods
stos
nop
push
jbe
es
mul
shrl
xor
mov
js
mov
inc
fwait
int
cmp
cmc
std
aaa
jl
loopne
popa
and
jmp
sub
lcall
jp
pop
push
xchg
lahf
stos
aad
adc
daa
pushf
mov
pop
xchg
les
inc
or
dec
cmp
daa
and
pop
idiv
and
and
shl
sub
bound
xchg
cmp
pop
out
mov
adc
or
cwtl
jae
jle
push
pusha
add
sbb
aas
or
inc
pop
psadbw
cs
or
inc
fcoml
xchg
addps
cltd
shrl
bound
clc
sub
and
and
shlb
aad
ljmp
pop
cmpsb
scas
adc
test
jmp
enter
scas
and
loope
add
je
arpl
mov
js
jge
xchg
data16
dec
fsts
xor
sbb
sub
popa
andl
fmull
data16
iret
pop
daa
arpl
mov
mov
sub
imul
dec
repnz
mov
clc
bound
mov
mov
bound
test
ss
rcrb
mov
arpl
fimuls
es
in
neg
xor
lock
xchg
leave
bound
out
stos
icebp
push
ret
xchg
sti
inc
lods
dec
sub
mov
loop
cmp
rcrb
jae
inc
js
xor
mov
aam
mov
aam
fidivl
cltd
shl
xchg
cmp
cmp
into
mov
push
adc
and
frstor
sub
les
fisubl
aad
int3
mov
pop
cmp
mov
arpl
jae
mov
mov
movsl
cmpsl
jecxz
mov
inc
sbb
leave
fisubs
cmp
lods
and
cli
mov
and
rol
mov
mov
dec
jnp
addr16
sti
sbbl
mov
adc
enter
stos
or
fabs
popa
fsubrl
push
mov
add
aas
loopne
test
cmp
int
mov
push
pop
lret
or
jecxz
or
js
sbb
popa
add
add
add
shl
sub
orb
inc
fs
jae
mov
mov
test
testb
fwait
xchg
lahf
sub
sbb
adc
cwtl
adc
test
dec
ret
pop
jmp
inc
movsb
rcrb
je
xor
jb
xchg
push
inc
xor
jae
jg
mov
fstl
jg
mov
outsb
test
aad
dec
pop
nop
inc
imul
enter
jle
rol
inc
arpl
les
jbe
and
adc
pop
adc
push
mov
pop
cmpsl
mov
cmpsb
repnz
or
sub
push
ja
add
not
add
add
call
push
add
sarl
sbb
mov
lret
add
es
add
paddd
inc
idivb
mov
sub
imul
xchg
sub
cmp
shrb
rcl
aam
mov
sarl
cmp
jnp
jmp
jp
pop
bound
jl
jb
dec
mov
movsl
add
jp
dec
add
sbb
pop
mov
dec
sbb
rol
or
cmc
mov
in
scas
mov
cmp
out
paddq
inc
adc
popa
mov
loopne
mov
push
test
or
or
aas
insb
xchg
fbld
sahf
inc
or
xor
jg
push
test
cmpsb
push
or
ja
mov
push
mov
jg
add
and
fadd
push
rclb
pop
xchg
clc
incb
jns
in
cld
subl
xlat
sahf
imul
int3
cmp
insb
add
int3
into
inc
shll
push
lods
std
mov
or
xchg
add
and
dec
enter
testb
iret
in
mov
xchg
mov
jae
lods
pop
xchg
outsb
lahf
cmp
mov
stc
inc
add
add
push
lods
and
or
jg
adc
push
jge
daa
and
idivb
mov
dec
mov
jg
fcoml
sbb
and
jmp
cli
movsb
negl
cmc
push
les
jmp
in
cmp
jle
stos
sub
adc
in
outsb
ficomps
imul
xchg
insl
mov
enter
pop
call
ja
das
insl
into
pop
jnp
adc
subl
cmp
fsubrs
pop
mov
es
mov
ja
in
popf
sbb
in
ret
jno
xorb
push
and
and
inc
je
shlb
fcompl
pop
mov
push
mov
sbb
jmp
add
ss
adc
xor
les
cmp
lret
dec
test
inc
or
mov
movsb
testb
arpl
xchg
push
sub
and
adc
addr16
rcrl
mov
popa
mov
xrelease
icebp
out
push
xchg
or
das
jmp
pushf
push
mov
mov
mov
popf
enter
out
cld
mov
in
mov
push
cmp
testb
mov
lock
inc
push
cld
loopne
jns
jge
jb
jmp
pop
xchg
mov
lret
cmp
cld
xchg
push
push
mov
mov
ja
sbb
repz
outsb
or
mov
test
pop
dec
imul
stos
xor
mov
xor
fisubl
mov
jecxz
test
xor
mov
add
pushl
mov
sub
and
gs
xchg
sbb
pop
fwait
mov
mov
mov
fdiv
push
lret
sub
push
int
inc
shl
push
push
lret
int
cwtl
ds
mov
xchg
dec
adc
fwait
mov
pop
add
push
imul
or
jo
cmp
jo
and
push
adc
ret
fnstcw
cltd
inc
cmp
add
jg
mov
xchg
into
push
test
pop
cmpsl
push
dec
lds
cmp
std
lret
cmp
pusha
jb
and
aad
rorb
push
out
test
lea
add
test
iret
fdivrs
inc
fldt
push
clc
dec
in
dec
push
fldt
pop
pop
xlat
lret
sub
sbb
mov
loop
loope
scas
arpl
icebp
push
ror
mov
lea
mov
and
or
pop
or
ja
mov
mov
bnd
loope
dec
mov
push
sbb
jae
gs
add
mov
inc
iret
stc
sub
dec
jmp
push
bound
or
cmp
fcomps
test
iret
pop
push
in
pop
cmp
sarb
xchg
add
jl
push
mov
sub
popa
push
jmp
fcomip
mov
sahf
out
xchg
arpl
das
into
and
mov
test
mov
and
stc
mov
call
call
and
add
pop
dec
xchg
mov
inc
push
out
pop
fucomip
add
pop
mov
push
jae
xor
icebp
sbb
rol
nop
xchg
lcall
test
aam
sbbl
cmp
jecxz
sub
inc
mov
scas
into
add
xchg
inc
lods
test
and
shrb
gs
nop
sub
fidivrl
imul
je
mov
aas
jno
cmp
jo
jns
jp
xchg
in
aaa
int3
jle
push
fbstp
fbld
movsb
shll
push
stos
push
xchg
and
int
data16
icebp
ret
adc
ja
add
aaa
mov
sub
outsl
push
mov
cmp
xchg
and
cli
pop
pop
test
xchg
stc
mov
jecxz
dec
sysenter
popl
nop
fcmovnu
jns
sbb
fimuls
ret
xlat
jge
data16
loopne
in
or
subb
jo
loope
pop
mov
mov
popf
sub
add
popf
std
push
cmc
xchg
sub
call
jmp
push
insl
les
inc
cmp
dec
adc
pop
xchg
js
push
div
lcall
mov
ds
push
mov
cmp
mov
rcl
test
jbe
les
scas
cld
mov
xor
lds
adcb
and
gs
cmp
pop
repnz
int
dec
adc
adc
pop
or
stc
adc
inc
daa
xchg
daa
stos
adcl
lahf
ret
enter
push
sbb
fwait
inc
inc
sahf
and
sbb
adc
push
cmp
sbbb
das
into
dec
mov
pop
jno
jl
shrb
clc
ss
push
mov
mov
mov
adc
or
push
add
add
jbe
sahf
pop
ds
cvtpi2ps
mov
pusha
pop
or
out
dec
in
hlt
adc
mov
cmp
add
stos
loop
cli
mov
rep
mov
pop
aas
push
jecxz
out
fists
shll
fisttps
lock
outsb
outsl
cltd
mov
add
mov
jne
out
xchg
pushf
or
scas
outsb
sahf
and
movsb
mov
lock
jb
sub
fmull
out
clc
cs
arpl
cmpsl
sbb
push
xchg
sub
sub
adc
ret
sbb
jmp
xchg
loopne
sub
shr
mov
sysenter
push
into
aam
pop
mov
mov
mov
fwait
inc
inc
out
imull
std
rorb
adc
push
inc
enter
push
in
dec
mov
pop
jae
mov
lcall
stos
aas
js
incl
add
mov
push
imul
ja
cmp
je
inc
push
lods
mov
repz
mov
psubw
aam
bound
and
push
push
push
cli
shrl
dec
out
roll
push
add
adc
push
push
es
push
cmp
aas
ret
jmp
pusha
jbe
push
rcll
pop
and
imul
sbb
mov
pop
cmpb
push
jmp
idivb
mov
adcl
lret
loope
lea
sbb
fidivrl
dec
loop
dec
ss
sbb
cli
lea
mov
lret
out
aaa
and
fstpt
xor
popa
loopne
hlt
add
sub
and
xor
xchg
int
scas
and
and
mov
shll
shlb
popf
lret
jge
gs
mov
pop
dec
stos
mov
fcoml
pop
cmpb
cmp
adc
inc
enter
out
ljmp
enter
xor
pop
stos
adc
repz
cmp
bound
mov
xchg
add
add
mov
push
sbb
pop
mov
stos
inc
add
pushf
fiadds
aaa
fdivrs
stos
cld
repz
sub
ja
int3
push
pop
sbb
jle
fidivs
and
mov
mov
aaa
testl
ljmp
dec
das
jo
invd
xchg
and
outsl
test
jge
imul
movsb
push
cmp
mov
mov
lcall
jo
cmp
push
out
in
xor
fimuls
pop
jp
xchg
fucomi
adc
push
or
cmp
xor
mov
jp
mulb
rclb
sub
jmp
fistpl
sub
inc
lds
sbb
out
test
pop
sti
jl
imul
push
dec
and
inc
bound
inc
jnp
xchg
fs
pop
sarl
cmp
inc
stos
fstp
adc
mov
push
sahf
xor
lock
scas
cwtl
enter
mov
xor
mov
lods
ret
retw
movsl
je
fnstcw
lds
int
mov
fwait
repnz
sbb
hlt
mov
popa
arpl
lcall
pop
aas
in
arpl
and
and
mov
arpl
outsl
dec
rcrl
idiv
andb
add
ss
stos
in
ror
ss
push
mov
add
push
mov
flds
ret
push
jns
mov
imul
jmp
div
push
fildl
jecxz
jae
mov
pop
fidivrl
adc
mov
cmc
cs
dec
push
sbb
inc
sbb
mov
sti
sahf
mov
es
or
call
stos
pop
pop
out
add
lods
fldl
dec
stos
aaa
mov
fdivp
xor
shrb
jb
test
sub
mov
lods
and
fdivl
fs
les
fistl
cmc
add
dec
stc
sti
push
dec
in
inc
inc
test
mov
pop
xchg
pop
imul
pop
pop
cmp
dec
inc
lcall
add
cmp
into
mov
mov
lcall
mov
dec
mov
lds
or
mov
pop
jmp
pop
or
add
and
nop
ss
push
stos
into
push
jg
adc
aad
sbb
into
pop
jmp
push
aad
mov
push
jo
or
repz
pop
sti
push
push
inc
inc
or
mov
mov
outsl
aam
xchg
push
stos
aaa
inc
and
mov
test
pop
out
cmp
dec
mov
leave
cs
test
aas
inc
cld
pushl
jne
test
xchg
nop
bound
std
pusha
outsl
xor
ret
mov
push
adc
sbb
data16
shr
and
loope
dec
call
inc
pop
sbb
mov
jb
ret
ss
mov
xchg
es
sub
lods
adc
test
pusha
add
js
mov
pop
or
dec
out
hlt
pushf
stos
or
int
lods
mov
cmpsb
jno
or
mov
push
not
mov
fwait
loope
add
pusha
jp
adc
adc
int3
hlt
sub
cld
xor
xchg
lock
pop
out
scas
out
mov
pop
xchg
stos
stos
push
add
in
mov
xor
shr
xchg
stos
dec
mov
xor
pop
mov
bound
inc
rcll
jge
gs
repnz
int
push
lods
xor
or
mov
push
dec
data16
scas
add
test
outsb
pop
add
repnz
jg
xor
das
pop
iret
cld
cmp
or
cmpsl
mov
dec
push
and
or
push
push
mov
sbb
std
mov
fiadds
ljmp
ret
int
cli
cltd
movsb
mov
aaa
xchg
xor
xchg
add
nop
shl
iret
sub
mov
push
shll
pushf
lahf
push
xchg
in
in
jbe
lods
ss
nop
orb
pop
fisttps
sbb
and
mov
subl
mov
nop
mov
and
in
and
in
int3
cltd
fs
ss
loop
sub
push
mov
insl
pop
aad
ss
mov
lods
scas
icebp
in
sbb
mov
sub
aad
dec
popa
scas
xchg
sbb
arpl
push
sbb
loop
sbb
int
es
addr16
cmp
ror
inc
testb
adc
rorb
inc
in
push
jmp
scas
inc
push
ret
push
xchg
test
xchg
repnz
clc
mov
das
repz
fcmovb
cmc
inc
adc
cmp
cmc
xorl
arpl
shr
sahf
jns
xor
jg
push
mull
out
aas
and
xchg
adc
in
mov
lock
cmp
cwtl
adc
stc
fmul
push
pop
fs
rorl
or
and
adc
cmpsb
or
jne
adc
jp
sub
inc
testl
clc
inc
arpl
push
pop
jne
cmp
add
pushf
sar
cmpsl
lret
mov
pop
or
xchg
mov
daa
dec
pop
iret
push
repz
jne
sbb
test
lcall
add
in
lock
cld
fsubrl
int
mov
mov
mov
nop
pop
mov
or
sub
outsb
pop
in
jp
add
sbb
add
cmp
pop
xchg
les
or
xchg
sub
sbb
push
pop
aam
cwtl
pushf
scas
int3
aas
outsb
mov
push
clc
enter
cmp
jl
fs
loopne
mov
mov
jne
sub
add
nop
jo
push
sarl
leave
mov
shrl
or
adc
lods
pop
into
push
mov
jno
or
jno
cmp
inc
push
ja
add
or
outsb
inc
cltd
loop
pop
xchg
add
ret
dec
adc
jle
insb
adc
iret
hlt
add
call
lahf
and
mov
mov
lds
adc
nop
push
pop
iret
cmp
inc
add
cmp
out
aad
or
out
mov
int3
lea
adc
ljmp
popf
mov
sti
dec
insb
mov
popf
xor
inc
push
jno
lock
adc
or
ret
sub
dec
cmp
lds
imul
jb
pop
das
in
fwait
aad
sbb
fldenv
or
mov
mov
jno
shr
adc
sub
stos
add
enter
jbe
pop
lds
rcrb
cmpsb
sbb
xchg
push
lcall
or
and
icebp
pop
outsb
pop
mov
mov
lods
jb
pushf
mov
pop
shrb
out
mov
shlb
rorb
and
fimull
mov
icebp
out
sub
adc
adc
or
in
cmovo
push
data16
dec
push
cmpsl
jecxz
pop
and
aaa
and
test
mov
dec
xchg
mov
subl
lods
ja
cmp
inc
fdivp
sbb
es
pop
mov
mov
out
outsl
jo
aad
out
push
xchg
push
cmc
mov
pop
mov
and
add
sub
repz
les
xchg
cmp
cmp
or
or
cli
mov
nop
fsubl
movsb
aas
and
rcl
mov
bound
bound
adc
je
inc
lods
into
inc
scas
jnp
push
clc
addl
std
push
sar
mov
mov
les
adc
inc
cli
sbb
loop
and
xchg
push
xor
xchg
xchg
pop
and
jecxz
mov
aad
pop
sub
bnd
jnp
insl
lods
adc
dec
mov
push
divb
inc
sbb
cmpsl
jg
sbb
push
cmpl
stc
repz
cmp
aad
cmp
outsl
insl
push
sub
clc
notl
jo
and
ffree
jecxz
adcb
fbld
cltd
sbb
pop
sub
leave
outsb
or
jmp
adc
sbb
in
and
mov
les
out
mov
mov
jnp
mov
jo
push
mov
cld
push
pop
fimuls
inc
imul
xchg
or
cmp
mov
dec
sub
sub
lahf
fwait
and
frstor
sub
ret
cmp
mov
sbb
or
or
fwait
cmpb
out
mov
xorl
xor
repz
pop
sbb
ret
into
iret
into
cmpsb
add
pusha
mov
cmpsl
int
xchg
out
pop
and
pusha
loopne
xchg
movsb
lret
lret
sbb
adc
jg
arpl
push
jle
test
shll
in
movsb
push
aam
dec
ja
inc
shrb
adc
mov
gs
mov
ljmp
gs
rcl
xlat
or
lods
sarb
cmp
dec
subw
xor
inc
ss
jne
outsl
jl
pushf
mov
xchg
adc
adc
mov
aad
imul
pop
aad
cs
push
fsub
js
stos
inc
xorb
arpl
jb
cmp
stos
sub
bound
lret
fbstp
imul
dec
call
outsb
scas
bound
mov
sahf
mov
xchg
cmp
jle
or
pop
sahf
sarl
nop
ds
mov
xor
jmp
sbb
inc
ss
adc
cs
dec
roll
lret
gs
xor
dec
mov
cmp
add
addr16
inc
rcr
mov
jo
scas
xor
mov
adc
test
cmp
aas
fs
push
inc
adc
aad
shll
fsubrl
fsts
scas
cmp
pusha
xor
rcr
in
mov
sahf
mov
cmp
mov
cmp
dec
dec
xchg
dec
ficompl
xor
cs
lods
pop
inc
inc
repz
in
mov
lahf
or
aaa
pusha
sbb
das
fdivrp
pop
movsb
decb
inc
cli
fidivs
stc
in
iret
jno
dec
or
lcall
jecxz
and
ja
mov
shl
cmpsb
aas
aaa
lea
fisubl
inc
das
push
pop
dec
adc
outsb
cwtl
gs
lods
test
add
cwtl
std
dec
mov
fdiv
insl
aaa
in
je
push
jecxz
testl
int
xor
dec
data16
nopl
pop
call
xor
cli
aad
or
shlb
loop
ror
adc
xor
insl
insl
lcall
outsl
test
mov
loop
aad
jg
out
in
xlat
and
push
stos
adc
repz
adc
sbb
fwait
adc
push
push
in
push
rcrb
cmp
adc
je
xor
mov
push
lock
xchg
inc
jae
mov
nop
push
movb
xchg
jne
movsb
cli
inc
sarb
jae
jno
ss
js
pop
xchg
out
das
lret
push
mov
mov
push
gs
call
adc
shl
sar
push
inc
mov
xchg
mov
das
jecxz
rorl
adc
jmp
sub
mov
mov
jecxz
mov
adcb
mov
mov
insb
shrl
mov
iret
lock
xchg
mov
outsl
sub
daa
add
shrl
mov
fstps
shlb
imul
xor
scas
addb
cmp
mov
test
lret
rolb
sbb
or
imul
insb
pop
in
xchg
push
out
loopne
jae
add
mov
or
sub
xor
mov
movsb
ljmp
test
lcall
hlt
xor
aam
in
repz
mov
cs
sub
lcall
push
fcoms
std
aad
xor
or
mov
mov
roll
xor
push
stc
insl
adc
dec
divl
mov
arpl
loopne
mov
jle
fbstp
adc
sbb
pop
sbb
loope
fstpt
out
pop
cli
cmpsb
test
mov
daa
xor
mov
mov
dec
fdivrl
xor
sub
xor
jl
test
test
lret
dec
xlat
inc
insl
into
xor
cmp
ds
leave
notl
inc
or
testb
aaa
xor
cltd
dec
rcrb
ds
mov
mov
dec
test
mov
jg
stc
loopne
pop
std
jle
cmp
adc
push
out
fists
xchg
lret
nop
cs
out
adc
and
pop
push
pop
lock
mov
les
mov
and
popa
enter
xor
ror
or
rcrb
je
jo
in
loopne
mov
std
clc
xor
and
cmpsb
fists
adc
hlt
pop
jnp
and
lock
pop
pop
xor
cmp
rclb
mov
jb
or
push
fildl
xor
adc
outsl
mov
pop
dec
mov
lea
inc
jmp
int3
dec
ret
fwait
pop
inc
pushl
or
xchg
dec
mov
lea
xchg
xor
or
xor
dec
or
mov
jmp
fsts
sub
dec
mov
xchg
sub
fisubrs
pop
pushf
cmp
dec
push
in
movsl
rorl
push
sub
mov
into
sahf
and
rcrb
mov
outsb
dec
std
sub
ds
fists
mov
dec
mov
cli
dec
jge
ror
or
xor
inc
lods
in
fs
mov
fdecstp
xchg
pushf
push
lods
mov
adc
and
incl
mov
or
mov
xor
mov
sub
loop
cmc
jno
push
or
mov
inc
add
aaa
xchg
jp
gs
or
scas
xchg
or
imulb
lahf
loopne
cmp
xor
pop
push
test
loope
test
in
dec
fildll
hlt
xchg
scas
inc
jns
iret
stc
inc
sbb
dec
fildll
pop
or
cli
mov
fcomip
inc
sbb
cmp
lcall
inc
mul
inc
das
mov
aad
jp
in
jg
clc
jecxz
add
lds
pop
lock
or
lret
jo
sbb
dec
fisubrs
int3
pop
call
enter
lock
xor
roll
enter
dec
sub
leave
push
inc
mov
pop
mov
loopne
or
mov
andl
rcll
ret
inc
jo
js
sbb
ret
or
lcall
movb
cmc
dec
inc
stos
loope
fmuls
out
mov
push
xor
sub
dec
ret
or
mov
scas
insl
jb
out
rclb
loopne
mulb
mov
outsl
xorb
nop
mov
pusha
jb
mov
repz
shr
sbb
push
cltd
stc
dec
arpl
popa
jmp
das
sbb
and
xor
stos
lahf
aaa
xchg
xchg
xchg
shr
es
inc
mov
sti
pop
mov
outsl
sahf
mov
pop
movsb
outsb
in
lds
inc
out
ficoms
pop
mul
int3
push
cwtl
nop
jno
xor
fadds
testb
push
iret
inc
xchg
xor
inc
outsl
insb
aas
in
add
xchg
test
jbe
test
fsubr
inc
mov
add
cmp
cmp
pop
jb
mov
pushf
sti
jb
daa
nop
mov
mov
lods
xor
outsb
sub
sbb
xor
ljmp
add
pop
adc
jbe
xchg
dec
mov
int
mov
adc
das
andb
imul
cmp
mov
pusha
inc
insl
subb
mov
fs
sbb
pop
sbb
ficompl
test
xchg
adc
sbbl
mov
or
dec
xchg
icebp
fndisi(8087
cmp
divl
cmp
stos
mov
adc
inc
fldt
cld
jge
pop
mov
jg
lods
jle
out
pop
js
lock
mov
add
push
pop
cld
jecxz
loope
shrb
aam
loope
inc
sahf
lods
jp
fisttpl
rorb
sbb
fistl
iret
dec
mov
push
popf
jno
cwtl
mov
jmp
mov
hlt
push
aad
cmpsb
or
xchg
out
out
xchg
out
xor
push
stos
and
push
adc
jno
je
mov
jb
adc
adc
xchg
adc
popf
scas
stc
push
dec
inc
mov
arpl
ljmp
sbb
pushf
inc
out
addb
dec
popf
mov
ffreep
and
scas
sbb
out
jne
clc
das
std
imul
jne
ss
push
or
and
stos
xor
dec
mov
or
idivb
push
push
xchg
inc
inc
cli
adc
ljmp
xchg
mov
mov
insb
stc
je
mov
and
ret
fwait
mov
repnz
mov
dec
or
jp
mov
fisttpl
xor
in
popf
xor
scas
jp
loop
cmp
adc
xchg
ljmp
sarb
mov
sub
push
mov
add
hlt
pop
mov
iret
aas
test
inc
dec
xchg
xchg
xchg
ss
inc
push
add
lds
xchg
out
cmp
lock
and
cltd
xchg
dec
and
loope
mov
scas
mov
inc
fcmovbe
inc
loopne
cmp
cmpsb
and
movsl
push
dec
arpl
push
mov
dec
imul
lds
fldt
jl
outsl
call
aas
rclb
std
int3
ja
mov
cld
jge
lret
ds
ljmp
mov
push
and
jmp
hlt
xor
into
clc
faddp
jmp
pop
icebp
orb
out
and
or
subb
cmc
lds
xchg
ljmp
cmp
rcrl
stos
mov
dec
dec
aam
xchg
mov
xor
cpuid
gs
xor
cmpsl
pushf
and
xchg
adc
and
sbb
cmp
sbb
cltd
lods
jno
inc
pop
je
cwtl
jle
pop
daa
in
push
pusha
add
dec
push
es
and
std
cvtpi2ps
mov
and
std
repz
inc
xchg
xlat
rcrb
popa
out
jne
or
dec
std
cmp
dec
iret
xor
cltd
fcomps
and
add
sub
mov
mov
mulb
enter
mov
notb
clc
xor
or
lahf
scas
dec
cwtl
dec
out
sbb
pop
ret
repnz
fwait
mov
jge
dec
in
notl
sub
jmp
outsl
movsl
stos
js
int3
push
and
or
xchg
movsb
cmp
and
cli
in
call
pop
sub
pop
ljmp
sub
insb
sbb
movsl
and
cmp
dec
pop
dec
ljmp
in
mov
fnstcw
push
mov
lret
and
pushf
mov
xchg
mov
dec
cli
cmp
push
or
jnp
enter
fnsave
jle
je
lods
rcr
dec
inc
jo
push
arpl
cmp
ds
pop
sub
push
out
add
adc
std
rcll
cmp
mov
addr16
lock
mov
not
jge
shll
pop
mov
pop
push
lods
pop
pop
popf
in
jno
add
mov
ljmp
and
popa
daa
pop
mov
jp
push
add
out
xlat
dec
clc
fnsave
cld
or
int3
pushf
and
cmc
out
or
movsb
fbstp
add
push
and
jp
les
jns
mov
inc
lods
mov
jg
stos
inc
lcall
roll
stc
adc
dec
out
stc
inc
mov
xchg
call
xchg
xor
ds
mov
push
add
leave
mov
dec
out
fxch
mov
dec
insl
scas
mov
mov
lea
dec
xchg
inc
call
jo
push
mov
jae
inc
jge
dec
cmp
adc
push
jle
and
jno
hlt
stos
mov
adc
enter
aad
jnp
mov
ds
push
mov
mov
ret
les
dec
dec
movsl
movsl
push
and
xor
add
outsl
xchg
sahf
popf
mov
mov
cld
mov
idivl
mov
hlt
int3
pushf
in
pusha
dec
adc
into
inc
fwait
dec
and
int
and
xchg
shrl
ret
jae
jl
or
jns
outsl
out
dec
rcrl
int
popa
mov
sub
sub
movsl
lret
xor
jmp
lret
test
sti
stos
lods
add
add
sub
mov
push
repz
call
add
mov
push
xchg
pop
iret
adc
sbb
and
jae
or
and
les
fwait
cmpsl
jge
push
das
sub
dec
pop
adcl
dec
aam
mov
stc
or
in
add
push
mov
outsl
push
cmp
icebp
out
push
cmp
and
xchg
out
out
mov
rcr
xchg
fmull
pop
lods
repz
mov
jg
aaa
pop
cmpsb
cld
ret
out
test
and
lret
xchg
mov
inc
fists
jo,pn
push
add
adc
and
icebp
push
inc
mov
clc
xor
inc
xchg
aam
sub
aas
fidivs
cmc
xor
mov
pop
std
ret
lret
outsl
push
cmc
and
mov
cmpsl
xchg
xlat
fs
push
lods
out
ficomps
shrb
adc
mov
xor
or
adc
sub
mov
mov
mov
mov
sub
je
aas
adc
outsb
out
or
jo
das
add
movsl
xchg
add
mov
sub
shlb
push
iret
adc
sbb
lock
iret
xor
andl
hlt
je
xlat
sbb
xchg
xchg
pop
mov
add
xchg
xor
pop
and
xor
pop
push
leave
mov
lahf
and
xor
mov
dec
push
dec
inc
push
pop
lret
mov
inc
fwait
pushf
push
jb
cli
add
mov
in
cmpsl
push
sub
in
adc
push
mov
pusha
lret
mov
aas
out
push
imul
cmp
mov
inc
jmp
lcall
in
dec
or
popf
push
bound
iret
cmpsl
data16
ds
sbb
outsl
shrb
outsl
aaa
jb
sub
lds
jmp
jl
notb
pushf
mov
aaa
fwait
addr16
shrl
inc
dec
popf
xchg
scas
sbb
inc
push
jp
stos
jg
mov
mov
cmp
push
xor
inc
out
pop
mov
ret
mov
mov
add
sbb
mov
jb
jae
cmp
or
sub
push
repz
add
fnstsw
mov
adc
xchg
dec
xor
sub
mov
out
push
and
iret
mov
outsl
jns
test
ret
mov
pushf
xchg
jo
leave
sub
and
nop
cltd
jae
shlb
hlt
test
and
out
lds
pusha
and
ja
je
inc
jbe
shrb
cmpsl
push
jbe
mov
fdivrl
or
cs
or
in
mov
lods
inc
lds
xor
lock
inc
push
or
cwtl
cli
xchg
movsb
aas
rcl
mov
mov
mov
fstps
enter
push
pushf
rcr
push
dec
aad
mov
call
insb
xor
push
fists
movsl
jno
es
lret
popf
std
lahf
ljmp
push
roll
cmp
adc
scas
cs
lds
inc
jae
fdivl
jmp
in
cmc
push
addr16
mov
push
sarb
das
push
sarl
mov
scas
xchg
sbb
xchg
enter
adc
push
jb
icebp
push
fbstp
and
pop
xor
rcll
mov
adcl
int
push
pop
xchg
sbb
push
rcrl
cmp
es
je
fidivrs
or
jnp
aad
and
mov
pop
mov
daa
and
into
into
test
int
push
fisubrs
xchg
cmp
pop
stos
fdivl
or
imul
out
inc
xchg
lea
xor
and
push
jb
sahf
xchg
push
xchg
mov
cmp
shl
xor
jb
push
ja
pop
fdivl
push
mov
lret
jmp
fisttpl
popl
stos
cmp
je
stos
mov
xchg
hlt
jns
xor
pop
movsb
je
daa
xchg
xlat
xchg
adc
addb
pop
sub
pop
lea
adc
pop
mov
cli
lock
jg
mov
lcall
or
cli
lock
call
mov
lock
ret
fldt
mov
mov
cs
out
jae
loope
jo
adc
mov
push
dec
sub
shrl
dec
scas
scas
call
popf
dec
popf
xor
xchg
cwtl
push
sub
das
hlt
xchg
cwtl
jae
sub
out
arpl
mov
push
cmpsb
inc
popf
gs
inc
sub
pop
pop
je
jne
xor
out
xor
pushf
xor
fwait
je
scas
sbb
dec
icebp
mov
xlat
or
call
add
sahf
pop
mov
cmpsl
mov
jmp
mov
ljmp
cmp
sub
sub
add
add
pop
dec
cwtl
aas
sub
push
fbld
out
test
sub
je
pusha
mov
xor
xor
repz
bound
jge
xchg
call
cld
cmp
adc
jl
cmp
sbb
push
dec
push
add
inc
push
and
and
das
mov
lds
jle
or
mov
cmp
xchg
sub
jle
sub
shr
negb
mov
inc
and
adc
mov
cmpsb
dec
cli
xchg
or
or
jne
push
repz
push
or
pop
cmp
pop
xchg
ret
loope
fdivrs
testb
add
shrl
fwait
or
cmpsb
pop
add
mov
jle
mov
adc
xchg
and
sbb
in
add
ja
mov
sbb
ljmp
cmpsl
js
sub
cmp
push
sub
aam
pop
add
icebp
sub
jae
ror
pop
call
push
data16
fwait
jg
mul
outsb
int
cmp
cs
jmp
sbb
pop
repnz
movsb
push
adc
pop
push
jae
jne
test
out
adc
sub
test
arpl
sahf
pop
mov
cli
jns
cltd
sbb
rclb
gs
lock
and
aaa
not
jno
lods
in
mov
cmpsb
push
lcall
imul
jecxz
dec
lds
popl
cs
cli
push
in
cmovb
jl
punpckhwd
mov
das
outsb
add
fldenv
imul
xchg
mov
das
inc
adc
in
adc
pop
rclb
scas
popa
dec
aaa
adc
or
in
jbe
push
mov
add
stc
mov
test
sbb
push
jae
test
cs
aad
shr
xor
lods
movsl
or
call
add
mov
mov
sub
call
dec
aam
popa
mov
aam
push
inc
out
hlt
and
pop
or
jb
aas
cmp
divl
movsb
inc
sub
rcrl
mov
stos
outsl
mov
test
cmp
pushf
sahf
mov
mov
out
shlb
xchg
mov
loope
xchg
mov
cwtl
rcl
push
testb
lret
push
movsb
jg
xlat
xchg
popf
call
mov
xchg
sarl
pop
xor
mov
fildl
pop
mov
and
xor
mov
outsl
mov
push
cmp
dec
adc
lods
cli
mov
aad
push
adc
orb
in
adc
add
icebp
xor
xchg
mov
shl
rcll
pop
pop
orb
imul
repnz
dec
mov
pop
rclb
das
adc
ret
je
outsl
lret
jecxz
adc
and
adc
nop
push
arpl
shlb
gs
les
cmp
xlat
cltd
sub
inc
and
in
xor
xor
std
nop
fcoms
sbb
in
jp
xchg
mov
push
rcll
push
mov
cmpsl
loope
shll
inc
repz
leave
fistpl
inc
out
or
cmc
fsubrl
sbbb
negb
and
xchg
jne
fcmovnb
cmp
movsl
mov
or
xchg
push
pop
sbb
xchg
xor
jno
aam
insl
jae
fwait
mov
in
dec
inc
daa
and
mov
xor
inc
or
jae
xor
push
out
xchg
push
ret
aam
hlt
ds
loope
cmp
pop
std
aas
dec
movsl
ds
cmp
cmp
xchg
roll
pop
mov
or
aaa
cmp
mov
fisubrl
mov
dec
lcall
push
stos
xchg
js
jg
dec
xchg
mov
xlat
adc
sbb
data16
push
insb
loop
ja
aad
adc
imul
inc
test
ds
fisttps
add
ja
out
pop
lea
xor
or
xchg
jecxz
in
cli
imul
lret
sub
pop
jg
pop
cmc
aam
sub
jnp
in
iret
pop
dec
adc
in
aaa
push
inc
testb
inc
xor
hlt
adcb
and
dec
shrl
arpl
mov
les
je
add
loope
ja
shr
insl
mov
or
sub
rcll
dec
adc
mov
mov
bound
sbbl
jne
sbb
and
iret
mov
fsubr
sub
jns
inc
call
insb
in
mov
xorb
mov
das
sbb
lret
add
clc
out
scas
cld
mov
add
aas
js
xlat
jne
xchg
cmp
ret
int
arpl
jno
lahf
sbb
lea
sarl
leave
orl
es
and
fisubs
pop
in
les
fs
sub
jmp
arpl
out
test
xchg
sub
mov
mov
daa
andl
xor
cmc
push
xchg
jecxz
rol
loopne
pop
and
imul
rorl
lret
inc
jge
es
inc
jnp
pop
push
test
mov
ss
mov
movsl
push
stos
push
pop
xchg
add
jae
mov
out
mov
xchg
mov
mov
sub
iret
mov
xor
call
movsb
mov
ja
outsl
fsubp
addb
or
fwait
sbb
aas
fwait
js
test
inc
das
or
adc
push
imul
test
lds
movsb
inc
xchg
mov
sahf
inc
push
jae
out
push
iret
cmp
pop
sarl
cwtl
sbb
push
stos
sbb
push
fdivrl
les
or
out
and
stc
lret
insl
dec
mov
sbb
and
std
js
leave
fwait
sub
dec
mov
xchg
add
call
mov
pushf
div
sbb
dec
xor
push
addr16
out
inc
decb
mov
pop
ret
jmp
or
add
sahf
shll
mov
lahf
bound
aas
push
out
dec
mov
xor
pop
push
and
scas
mov
cmpsb
sbb
daa
mov
inc
cmp
mov
std
insl
mov
fs
repz
mov
cmpsl
xchg
hlt
push
lret
fmul
pushf
push
dec
mov
sbb
or
sub
mov
adc
dec
jbe
jne
lret
repnz
dec
jle
pushf
mov
and
das
dec
jge
adc
mov
pop
in
cs
or
mov
lret
push
aad
fisttps
insl
or
mov
mov
mov
cli
out
cmp
in
sbb
mov
ds
in
outsl
sub
sbb
jnp
dec
xchg
sbb
popa
ret
fsubs
sbb
pop
adc
testb
stos
xchg
cltd
and
adc
iret
mov
daa
and
mov
hlt
jle
inc
jle
int3
sub
push
fdivl
arpl
adc
push
or
cmpsb
pop
add
cmpsb
loopne
sbb
xchg
mov
mov
jmp
and
popf
xchg
push
subl
shrl
stc
pop
inc
mov
insb
jo
mov
js
imul
test
leave
or
shlb
ret
push
add
lret
test
sbb
push
sub
pusha
mov
decl
adc
cmpsl
add
mov
xorl
jmp
std
push
rorb
mov
mov
in
aad
inc
in
push
cmp
mov
mov
std
adc
mov
mov
aas
sbb
jmp
in
or
jp
cs
sbb
add
cmpsb
arpl
push
inc
ret
dec
fs
push
pop
push
out
mov
push
scas
jl
mov
sbb
mov
push
push
ss
std
cmp
out
dec
imul
mov
int3
daa
inc
lahf
stc
aas
mov
aaa
pop
dec
in
insl
add
add
jl
and
push
push
mov
push
mov
and
mov
js
scas
push
jle
inc
cltd
jmp
inc
repnz
mov
adc
push
or
and
sti
in
fnstcw
fsubrl
sub
mov
sbb
adc
out
rcrl
fstpt
arpl
sbb
mov
lret
push
cmp
rcrl
and
xor
push
shrl
or
lret
xchg
push
imul
adc
jae
out
xchg
or
cltd
shl
scas
pop
fcoms
pop
stos
and
ds
inc
lds
lahf
in
cmp
adc
lods
jle
and
pop
add
dec
cs
cmp
decb
insb
ret
jae
ret
jo
cmp
sbb
mov
sub
adc
in
test
sbb
mov
jmp
popa
lods
lods
or
lea
jmp
jne
jo
bound
in
pop
dec
push
subb
mov
inc
push
enter
data16
ss
outsl
mov
or
cmp
inc
sahf
ljmp
adc
lea
data16
sub
cmp
pop
xchg
sub
scas
ds
pop
mov
and
and
nop
sbb
data16
into
outsl
mov
notb
lahf
or
loopne
cld
cmp
pop
lods
lret
jp
jg
add
dec
mov
lea
bound
loop
and
cmp
insl
mov
mov
fimull
fcoms
inc
fsts
aas
cmp
sub
add
daa
mov
push
adc
mov
add
shrl
out
jp
mov
mov
jnp
outsb
test
cmpsb
repnz
aas
aas
fcmovnu
pop
dec
inc
int
dec
mov
pop
jle
ret
into
icebp
out
movsl
sbb
dec
mov
dec
xchg
xorb
scas
imul
adc
xor
fldl
sbb
xchg
scas
sahf
pop
adc
push
ds
sub
insb
cs
aaa
aam
sub
push
cmp
cmp
pop
outsl
xchg
xorl
mov
in
mov
dec
bound
pop
and
mov
and
out
aas
inc
jmp
test
or
cli
push
dec
mov
xor
aad
mov
pop
xor
fstps
adc
in
or
sub
call
imull
arpl
or
and
stos
mov
xor
sysret
mov
and
imul
jno
dec
jae
inc
add
inc
pop
push
pslld
and
or
jg
sbb
out
inc
mov
loope
ljmp
adc
lds
ret
popf
sbb
cld
iret
jmp
pop
pop
and
add
xor
addb
mov
scas
jo
or
into
enter
jp
rcr
and
roll
mov
in
add
sahf
popa
jp
push
cmp
adc
push
pop
mov
cli
jmp
cmp
ffreep
ds
loope
mov
push
rcr
fstp
test
inc
popf
or
jmp
test
fnstcw
push
aas
mov
in
int
xor
mov
push
movsl
shr
jnp
xor
mov
pop
xchg
cmp
mov
adc
icebp
pop
rol
rorb
and
orl
das
aaa
out
idivb
loopne
sbb
jecxz
negb
jbe
stc
pop
sbb
rolb
in
arpl
lods
das
lcall
sub
sbb
imul
scas
sub
mov
fwait
push
inc
in
jge
xor
movsl
pop
sti
cmpsl
cmp
jecxz
arpl
leave
pop
xor
xchg
mov
movsl
inc
cmc
enter
or
out
fsubrl
jbe
and
ret
addl
add
mov
push
sti
jae
data16
loope
dec
mov
aad
push
add
dec
scas
push
test
ljmp
xchg
orb
and
incl
sbb
pop
inc
sub
clc
mov
mov
popf
mov
dec
jnp
or
das
mov
into
sbb
jo
dec
fisubs
cli
push
movsl
sahf
mov
movsb
push
jbe
xchg
loopne
lea
push
daa
jge
and
push
movsb
cmp
push
xor
xor
imul
leave
mov
push
cmp
shl
cs
xchg
pop
hlt
or
outsl
jbe
orb
inc
dec
cld
adc
outsb
jnp
mov
add
jl
xchg
mov
lock
mov
sbb
jns
fcomps
sbb
dec
leave
pop
push
decb
dec
imul
ljmp
and
ljmp
jl
mulb
pop
jecxz
outsl
mov
push
mov
push
insb
cmp
mov
ret
or
push
inc
call
and
xchg
jle
stos
sbb
inc
out
mov
in
jo
mov
jp
popa
test
push
sub
and
adc
push
xor
pusha
call
and
fisubs
aas
fwait
xchg
lds
cs
mov
pop
sbb
nopl
pop
lds
fisubl
loope
inc
push
inc
sbb
adc
inc
push
jmp
in
mov
mov
sbb
ja
jnp
and
push
addr16
push
jo
add
mov
xchg
flds
dec
xchg
inc
sbbb
in
xor
sub
jne
mov
js
dec
or
push
mov
jl
movnti
sub
pusha
sbb
aad
lds
aaa
out
insb
ror
pop
xchg
shll
pop
in
or
int
cmp
lret
xchg
in
pop
loope
inc
fnstenv
mov
jmp
lds
xlat
jb
std
mov
jmp
ds
rolb
daa
inc
addr16
add
sub
outsl
sbb
add
out
push
push
mov
cwtl
sub
xor
loop
faddl
leave
mov
or
loope
ja
clc
pop
lods
pop
mov
std
xchg
mov
icebp
mov
xor
inc
jg
test
je
fldt
in
lock
fstpt
cmp
and
fidivl
mov
in
lods
push
ja
data16
mov
scas
adc
fbstp
loope
or
cld
sub
push
loop
or
cmc
pop
aaa
inc
in
xchg
push
xor
js
loope
inc
cmp
lret
mov
or
xor
mov
js
or
sahf
mov
sub
lods
pop
fs
and
jbe
test
jecxz
mov
jp
push
inc
out
mov
lcall
insb
sbb
in
push
push
in
dec
sbb
sahf
rclb
insb
ds
mov
mov
cltd
dec
sub
mov
pop
xlat
xchg
xchg
gs
xor
adc
sbb
ljmp
cli
rorl
ljmp
pop
subb
add
test
pop
mov
sub
in
xchg
cmp
xor
loop
cmp
or
inc
push
aad
or
jnp
pop
in
mov
cs
mov
cmc
and
add
mov
push
ret
or
xchg
repz
cmp
repz
stos
sahf
cmp
lods
daa
jno
mov
popf
mov
leave
ficompl
pop
mov
push
sub
cld
push
pop
fisubrl
push
hlt
fistpll
andb
cmpsb
outsl
fs
push
xchg
jbe
dec
clc
adc
sub
or
pop
mov
sub
stos
mov
scas
cmpsb
xor
push
imul
mov
fxch
popa
mov
cmp
daa
mov
cmp
hlt
mov
push
pop
bound
iret
and
mov
stos
pop
mov
add
push
add
xor
cli
lods
pop
aam
sub
popa
pop
int
mov
std
lret
sub
dec
test
xor
sbb
insb
pop
cmp
loop
sbb
nop
xchg
inc
into
jbe
adc
push
mov
cmpsb
pop
mov
sbb
outsb
inc
stos
mov
mov
jle
cmpsb
push
push
pop
ljmp
add
cmp
mov
jmp
ret
xor
enter
aaa
push
push
mov
loop
push
shlb
movsb
mov
mulb
inc
bound
test
call
mov
adcb
pushf
iret
mov
out
scas
stos
inc
cltd
fisttpll
enter
int
scas
sub
jne
es
addr16
inc
xchg
pop
call
incl
mov
mov
or
jecxz
ja
movsl
xorl
test
out
sbb
inc
mov
sub
cs
nop
or
in
testb
xor
and
mov
repnz
sub
idivb
lds
jo
cmp
mov
pushf
lret
fldl
movzbl
mov
push
lahf
mov
scas
jae
imul
push
js
lods
rcrb
push
push
in
xchg
dec
fs
int3
xchg
push
mov
repnz
and
cmc
push
jp
and
repnz
clc
out
mov
icebp
xor
jo
mov
sbb
adc
popa
mov
jge
sub
jnp
xor
sbb
xor
loope
imul
ds
mov
xchg
jae
cli
xor
dec
ljmp
adc
test
icebp
fs
jb
xorl
cmp
fidivs
icebp
in
xchg
in
pop
mov
xchg
adcl
cmp
cmp
xchg
inc
adc
punpckhbw
outsl
dec
std
addr16
push
xchg
add
adc
sub
fisttpl
movsb
rorb
popf
and
cmpsl
jg
and
mov
pop
imul
out
pop
test
sub
sub
inc
out
dec
cmpsb
js
inc
cmc
pop
imul
stc
icebp
lahf
loopne
aas
lcall
jecxz
outsb
in
jb
sbb
jbe
bound
stc
inc
mov
test
mov
pop
call
orl
xchg
ds
fsubr
cli
stos
scas
mov
xchg
xor
es
sbb
sbb
cmp
es
addl
test
loop
sti
sbbb
lds
test
and
xor
xor
lods
or
xchg
bound
dec
int
jecxz
in
pushf
mov
push
les
loope
adc
add
loopne
out
in
shlb
aaa
dec
repnz
jmp
mul
push
mov
lock
jbe
adc
lcall
or
sub
adc
ljmp
dec
hlt
fimull
mov
arpl
adc
ror
in
jo
sub
ret
loope
pop
daa
andl
add
xor
pop
sarl
cs
jnp
push
stos
mov
imul
push
das
add
repz
lret
shrl
xchg
push
mov
push
stc
or
loopne
xchg
mov
cmp
mov
testl
jg
push
loope
add
cmpsb
pop
fidivrl
mov
sarb
aam
ja
push
fldt
mov
inc
ljmp
fs
mov
jno
pop
outsl
sar
mov
icebp
psadbw
mov
push
ljmp
stc
add
addr16
mov
xchg
aad
lgs
xchg
or
inc
mov
rcrb
jle
xchg
dec
xchg
jns
push
mov
jae
add
scas
cld
inc
scas
xor
dec
loopne
push
aam
mov
mov
inc
mov
inc
clc
sbb
jg
stos
movsl
adc
mov
outsb
xchg
xor
lock
js
adcl
cmpb
popf
xchg
push
std
stos
pushf
sub
clc
sbb
cltd
or
repnz
sbb
pusha
sub
jle
mov
mov
and
lahf
dec
das
fbstp
sub
and
jnp
jnp
xorb
iret
xchg
sti
inc
mov
enter
das
loope
xor
and
cli
mov
jbe
lcall
dec
push
sbb
mov
addr16
aas
data16
icebp
inc
fbld
loop
and
lods
pop
xorps
add
xor
sub
pushf
cmpsb
pop
jecxz
movl
dec
jnp
jmp
push
jle
shrl
sub
arpl
xor
in
mov
in
and
out
sbb
cmpsb
mov
mov
push
pusha
mov
in
and
aam
mov
mov
cmp
jbe
pop
cmpsl
mov
adc
cwtl
test
std
shl
cmpsb
test
icebp
movsl
add
lods
push
xorl
pop
add
outsb
sbb
push
data16
fildll
xchg
inc
add
xor
out
lds
push
dec
mov
out
mov
roll
leave
int3
clc
aaa
and
pop
out
mov
cmp
aad
shll
pop
add
mov
dec
push
in
push
test
push
xor
test
jae
sub
cmp
dec
imul
and
in
jge
sbb
shl
stos
push
xchg
mov
call
push
js
sub
jno
cld
or
testb
jne
mov
push
imul
mov
cwtl
mov
pop
movsb
sbb
pusha
add
in
inc
shrl
into
mov
mov
xor
pop
aas
push
leave
outsb
dec
dec
push
popa
int
cmc
dec
pop
mov
sarl
ds
jnp
inc
hlt
push
push
in
shrb
arpl
jnp
loopne
xchg
mov
mov
daa
xchg
add
mov
stos
xor
jae
push
iret
sbb
lea
mov
sbb
sbb
fmul
push
mov
nop
pushf
xlat
shll
sub
fdivs
mov
sbb
pop
clc
addr16
mov
stos
jge
mov
movsl
inc
sti
mov
xchg
dec
jne
push
sti
popf
lods
push
mov
testb
pop
push
mov
jmp
inc
mov
mov
jp
scas
sub
out
or
ret
xchg
or
outsl
jnp
xlat
xorl
andl
cwtl
fldl
lcall
int3
out
scas
outsb
sahf
dec
jnp
mov
or
lcall
sub
mov
add
mov
test
aam
dec
jp
ficoml
push
mov
cld
and
sahf
sub
pop
mov
dec
sti
inc
jg
in
rorb
push
add
fucomi
or
loop
jne
jecxz
aaa
pop
lret
sbb
adc
mov
les
and
inc
jnp
dec
lcall
adc
pushf
popf
imul
call
xorl
aad
pop
push
dec
push
jmp
pop
push
dec
test
enter
jecxz
es
push
xchg
ror
mov
add
ss
push
xchg
movsl
lcall
sub
mov
and
sub
cmp
mov
add
push
into
xorl
filds
ret
adc
push
xlat
dec
pushf
or
inc
pop
push
ror
add
aam
and
inc
out
fnsave
pop
loopne
gs
popa
sub
test
call
jl
cmp
in
pop
test
cli
pushf
lcall
sub
lea
cltd
enter
xchg
lock
pop
add
movsl
aad
test
lds
dec
js
jbe
pop
rcrl
les
flds
outsl
sbb
roll
mov
jmp
out
cmpsb
dec
int3
lock
dec
hlt
aam
les
mov
je
fisubrs
daa
inc
pop
dec
inc
pop
sahf
fwait
and
fdivs
daa
ljmp
sti
rorb
shl
pusha
inc
stc
les
sahf
mov
jbe
or
mov
fstpt
jns
in
or
fdivl
mov
fnstcw
sbb
sbb
dec
mov
and
cmp
push
xor
jae
stos
mov
push
mov
iret
imul
add
movsb
insl
test
and
jle
test
or
sub
inc
lods
loop
jae
leavew
imul
and
adc
mov
or
pop
movb
rsqrtps
cmpsl
cwtl
outsl
and
mov
cmp
hlt
cs
xor
push
gs
ds
imul
sub
test
test
add
and
into
imul
testb
push
arpl
xor
pop
push
sub
stos
aad
and
mov
lret
stc
jge
sub
push
jae
dec
stos
push
cli
adc
fucom
jg
mov
js
inc
fwait
sub
or
push
and
adc
mull
sarl
push
adc
jae
mov
pop
out
setge
scas
insb
xchg
ljmp
and
cwtl
lds
add
pop
cmp
inc
cmc
in
xor
xchg
or
cmpl
push
cs
fiaddl
inc
out
inc
mov
sub
cmpsl
test
andb
sub
sahf
and
xor
mov
or
or
dec
mov
test
lcall
out
aam
rcrb
cmc
aam
js
pop
mov
sbb
mov
and
ds
repnz
sti
jecxz
push
pop
cmp
add
outsb
pop
in
imul
xchg
addb
mov
bound
ss
mov
divl
and
cltd
xor
bound
jno
cltd
icebp
mov
pop
sub
inc
in
sub
dec
aaa
dec
ds
dec
mov
push
in
cli
arpl
out
icebp
jp
add
mov
inc
push
and
push
test
cli
push
sbb
add
mov
dec
scas
int
jmp
sahf
push
stc
outsb
and
mov
in
and
shlb
pop
xorb
cmpsb
movsb
cmp
movsl
jle
sub
and
leave
sub
fs
dec
test
imul
lahf
dec
xchg
mov
inc
add
fcoms
push
add
div
dec
inc
inc
mov
enter
call
xor
mov
or
loope
rolb
loope
push
sub
arpl
mov
add
dec
in
loope
cmp
stos
leave
add
jnp
mov
sub
mov
push
xchg
pushf
imul
cmpsl
xor
sbb
sarl
inc
aas
cs
out
lcall
push
les
adc
mov
out
and
xchg
notl
es
and
adc
jl
adc
mov
sub
fildl
adc
sbb
mov
lcall
and
add
mov
sub
je
dec
insl
fwait
in
stc
and
xlat
sub
inc
inc
inc
stos
jl
xchg
stc
in
mov
popa
xor
or
mov
dec
adc
out
lret
mov
fwait
sarl
icebp
sti
divb
adc
sbb
jnp
mov
in
jle
lock
inc
adc
mov
cmp
add
call
push
popa
nop
xchg
sub
and
push
outsl
pop
lret
lods
aam
cld
test
popa
je
jne
jmp
insl
mov
fldenv
xor
pusha
imul
jo
pop
xlat
test
repnz
or
jecxz
loope
lcall
sub
and
pop
dec
and
imul
adc
and
fs
out
push
sbb
out
mov
mov
mov
mov
out
mov
fdivrs
je
mov
lret
pop
mov
jmp
insb
pop
sub
movsb
and
ja
add
addr16
xor
aam
lea
movsl
call
movsb
stc
push
ja
hlt
pop
addr16
mov
push
test
inc
and
icebp
fcompl
adc
xchg
insb
push
fs
fldt
push
mov
adc
loope
cmp
jno
lahf
xor
sarb
xchg
mov
into
or
push
inc
mov
rclb
movsb
cmp
mov
gs
bound
adc
push
jae
lods
in
cmp
and
or
or
jnp
popl
lahf
rcrb
mov
xchg
and
add
adc
mov
adc
gs
sub
pop
arpl
push
aad
xchg
enter
cmp
inc
or
mov
xchg
or
popf
dec
jno
and
ljmp
inc
jl
in
std
sub
cmp
jns
cmpsl
outsl
adc
out
mov
inc
mov
in
fsubs
fs
mov
push
lret
sbb
mov
add
xor
fisubrl
jl
mov
gs
rcrb
jno
enter
imul
inc
cli
imul
xor
mov
push
cltd
push
loop
mov
test
mov
mov
shlb
repz
je
jecxz
push
lret
out
les
mov
sub
mov
mov
pop
arpl
int
lret
pop
test
pusha
je
cmpsl
and
cmp
add
xchg
outsb
scas
mov
sbb
push
add
mov
hlt
sbb
shlb
je
xlat
add
into
sbb
scas
call
clc
inc
inc
cwtl
mov
inc
jne
fs
negl
sbb
rcl
xchg
into
and
adc
xor
and
mov
cmp
mov
movsb
sub
jbe
rcrl
xchg
mov
repz
es
mov
scas
jmp
jmp
cld
imul
enter
cmp
lods
and
jle
sub
test
js
in
mov
mov
int
xchg
popl
das
gs
icebp
fadds
nopl
xchg
pop
jae
pop
insb
call
aam
enter
mov
and
add
imul
xor
pop
dec
lods
addr16
jmp
daa
mov
jae
pop
into
adc
jb
inc
lods
je
dec
mov
xlat
and
lock
cmp
jmp
dec
cwtl
push
xchg
sti
sbb
enter
jge
add
frstor
push
jo
push
or
scas
add
outsl
rolb
rorb
popa
cmpb
mov
xor
ljmp
inc
mov
enter
call
mov
pop
mov
push
lret
into
pusha
int3
lahf
shl
adc
imul
adc
and
sbb
lods
dec
mov
inc
out
cmpl
pop
arpl
out
sub
lcall
inc
dec
xchg
jg
dec
pop
pop
or
aad
jne
out
pop
imul
orb
enter
push
inc
push
mov
test
dec
sbb
lock
mov
xchg
mov
mul
insb
neg
pushf
out
lahf
mov
out
ds
iret
jbe
pop
pop
clc
faddl
movsb
push
add
adc
in
mov
mov
jo
sbb
test
ss
xchg
lds
sub
inc
shrl
mov
adc
inc
jno
inc
test
mov
jle,pt
fs
into
mov
push
outsb
out
mov
outsl
xor
leave
lods
int
xor
mov
adc
pop
jo
mov
push
jp
leave
je
add
in
shll
into
dec
pop
out
push
push
adc
out
jge
sub
jg
gs
or
dec
sub
lcall
insb
push
lcall
pop
pop
cmp
pusha
js
addr16
stos
xchg
aaa
jl
in
stc
dec
movsl
pushf
fistl
xor
jecxz
fcomps
xchg
in
rcll
mov
hlt
sti
xor
push
push
or
jmp
test
adc
sbb
dec
lret
push
fnstenv
rcll
jno
xor
sbb
xchg
sahf
push
aad
or
testl
out
rcrb
movsl
shll
fstl
mov
in
out
sub
gs
xchg
mov
lea
fwait
cwtl
jae
mov
mov
lds
cmp
fadds
and
cld
test
jp
mov
mov
add
arpl
mov
cmp
xor
sbb
xchg
pop
adc
cltd
xor
jp
daa
cld
inc
dec
lret
loope
lods
push
jg
fistps
arpl
pop
mov
jae
jge
ss
dec
mov
jg
xor
mov
pop
sub
mov
cmpsl
popf
lods
inc
add
inc
clc
sbbl
xchg
adc
adc
icebp
and
jle
gs
mov
les
jg
inc
ljmp
jle
xlat
imul
fcompl
adc
jbe
jb
or
rolb
push
and
testl
mov
adc
push
call
jg
push
in
test
cld
femms
push
fucom
ret
adc
add
xchg
cmp
dec
out
sbb
mov
int3
in
cmp
xchg
adc
xchg
adc
pop
mov
xchg
testl
lcall
ret
pop
dec
push
jae
sti
movsb
imul
aam
ja
dec
or
shr
push
and
cld
fs
xchg
dec
sarl
mov
sub
or
sub
mov
outsl
or
cmpsb
das
cld
mov
fisttps
imul
pop
fdivl
sbb
cmp
xchg
in
mov
gs
aas
sub
fnstsw
fistl
dec
push
pop
aas
in
inc
fwait
xlat
cmp
lock
fcoml
and
sub
fucomp
pop
aas
in
dec
mov
std
jg
lret
icebp
popf
pop
jnp,pn
leave
mov
sub
pop
cwtl
or
jno
div
shlb
sub
fidivrs
mov
lea
test
inc
aaa
dec
xor
or
das
fstpt
loopne
filds
xchg
loop
sub
adc
in
and
xor
push
push
add
mov
sbb
idivb
add
push
lret
push
roll
jnp
pop
fwait
mov
movsb
inc
add
icebp
cmc
scas
push
dec
mov
inc
xorb
xchg
mov
inc
mov
pop
stos
inc
dec
mov
cld
shlb
hlt
mov
mov
std
sbb
cmp
mov
leave
mov
mov
or
pop
add
xchg
popf
push
add
push
test
aam
xlat
sbb
test
lock
add
cmp
dec
mov
push
inc
neg
or
sub
and
repz
and
out
scas
push
dec
outsb
icebp
in
inc
and
pop
inc
mov
dec
cltd
inc
xchg
out
or
fdivrs
lock
mov
inc
sub
mov
xchg
scas
sahf
es
jmp
xor
cmp
pop
mov
je
lea
lods
adc
fidivrl
cmp
int
push
add
lret
jbe
gs
call
popf
popa
cmc
mov
xchg
push
daa
jg
mov
fs
int
cwtl
sub
stc
jno
pop
inc
push
int
jle
addb
inc
xchg
out
flds
inc
stos
fdivs
scas
bound
aad
xor
aam
pop
rorl
shlb
popf
lock
xchg
mov
daa
sahf
ss
jp
lahf
mov
fdivl
xor
lds
or
sub
lea
cmp
xchg
test
pusha
mov
inc
sub
push
inc
das
xor
pop
rclb
bound
xchg
pop
jnp,pt
pushf
jecxz
stc
add
andb
cltd
mov
cmpb
test
mov
dec
icebp
pop
into
fsubrl
mov
push
push
mov
ljmp
cld
push
cmp
adc
aas
testb
mov
loopne
and
mov
and
sbb
mov
inc
hlt
aas
mov
lret
push
shrb
stos
jmp
lds
ja
sub
push
mov
stos
in
dec
out
xchg
ucomiss
sbbl
sahf
inc
add
or
or
das
push
pusha
jp
cld
fldl
cwtl
cmp
xor
fdivl
mov
jg
fcomps
jns
add
xchg
js
lahf
jmp
mov
lods
fucomip
push
jl
test
mov
loopne
inc
or
push
mov
hlt
cmp
popf
aas
xchg
sti
xchg
mov
in
ret
popf
mov
js
jnp
add
fs
daa
icebp
or
fmuls
fmul
dec
jle
jg
mov
dec
xchg
jmp
ja
dec
inc
mov
in
jnp
jne
sub
push
das
fsubr
cmp
xchg
sbb
or
into
xorb
mov
inc
shlb
xor
loopne
mov
lret
popf
negl
lods
xchg
or
mov
sbb
int3
fists
arpl
mov
cmp
xchg
mov
pop
add
rcll
and
fldl
loopne
enter
mov
loop
insb
loope
aad
xchg
inc
adc
mov
iret
out
sub
cs
out
clc
jne
shrl
sub
scas
xor
and
cmp
pop
nop
pop
and
loop
lret
xor
and
mov
push
in
sub
pop
cs
sbb
subb
xchg
mov
rol
jecxz
pop
nop
cld
mov
cmpl
mov
mov
mov
lcall
test
push
call
pop
or
push
dec
sbb
mov
inc
stos
scas
jg
in
stos
fistl
cmpb
in
addr16
fs
test
clc
cmc
aad
call
call
ret
int3
adc
sub
lods
adc
mov
push
das
call
jae
add
xchg
push
ret
pop
xchg
mov
jb
push
pop
mov
inc
add
imul
xchg
in
and
xlat
or
push
insl
pop
sub
xor
sbb
cli
mov
cwtl
dec
cltd
jbe
es
pop
xchg
and
adc
mov
mov
mov
rcrb
repz
mov
and
ret
push
add
or
push
mov
shld
in
ljmp
adc
addr16
bound
lret
inc
sbb
bound
ja
jg
push
dec
popa
adc
push
stc
sbb
inc
std
mov
imul
xor
nop
sbb
cmp
jg
jmp
fcomps
mov
cmpsl
inc
jl
mov
in
lahf
cwtl
loopne
push
sbb
push
aad
lods
out
xchg
outsl
ret
sub
aas
lods
add
je
xchg
sbb
out
push
add
dec
mov
pop
ret
pop
pop
pop
orl
sub
pop
adc
inc
enter
fstps
and
movb
mov
lock
leave
in
sbb
sub
shlb
jbe
xchg
lret
jno
cmp
mov
push
mov
pop
repnz
pushl
data16
fistl
mov
inc
ret
mov
inc
jge
lock
xchg
mov
mov
outsb
cmp
pop
subl
into
jo
ret
or
hlt
adc
int
push
lret
cmpsb
pop
mov
ret
rclb
into
bound
andb
jmp
dec
mov
pop
in
stc
dec
dec
jle
mov
pop
mov
jnp
cmpsl
in
xchg
in
in
and
dec
push
xchg
outsl
inc
call
ret
iret
or
xor
inc
push
cwtl
bound
es
enter
ljmp
movsb
cmp
mov
ficompl
jl
push
lods
pusha
pop
je
cmp
mov
mov
xchg
and
pop
rcrb
ja
push
clc
jns
cltd
les
pop
jmp
xor
ret
add
and
mov
cli
jb
push
cmpsl
call
cltd
or
dec
ss
orb
dec
data16
lret
sahf
or
arpl
cmp
cmp
subb
inc
stc
add
jp
clc
fs
cli
repz
shll
push
cmp
adc
imul
sbb
dec
sub
jle
pusha
in
mov
call
pop
jg
fstpt
push
jmp
shrb
pop
add
neg
adc
and
in
fwait
xchg
xchg
adc
pop
mov
popa
adc
lret
push
div
mov
mov
fimuls
mov
fdivl
push
cmp
lods
jle
mov
xchg
add
imul
cmpsb
push
and
push
setnp
mov
xor
jo
xor
adc
fstpl
insb
mov
jge
popf
stc
aad
mov
xchg
popf
jns
push
push
cli
push
out
cmp
xchg
adc
fiadds
shlb
inc
mov
ds
pop
ss
xorl
xor
sub
jmp
frstor
imul
fistpll
sarb
mov
lds
jb
icebp
push
stos
in
imul
jge
pop
sbb
notb
mov
mov
push
xchg
mov
mov
movsl
fisubrl
faddl
ljmp
push
sahf
mov
imulb
das
push
es
ss
rcrl
fisubrl
dec
pusha
loopne
imul
cmpsb
add
push
sub
mov
add
sbb
or
in
mov
push
aas
ja
pop
jbe
ret
rcl
pop
clc
jge
repnz
aas
cmpsl
and
lret
aas
and
adc
cld
fadds
test
mov
lea
cli
cltd
js
aas
xchg
pusha
test
movsb
insl
movsb
push
leave
xchg
lcall
das
or
iret
cmp
push
js
dec
cld
dec
aas
dec
repz
jb
pop
add
mull
leave
add
push
sub
out
xchg
inc
xchg
aad
and
fcos
scas
mov
out
ret
ret
cmp
add
outsl
or
lahf
mov
je
push
inc
aam
fs
loop
inc
inc
mov
aam
ret
dec
repnz
ret
sub
addb
and
inc
insl
aas
push
xor
mov
fisttpl
jl
pop
ss
inc
lcall
sbb
mov
sub
js
das
negb
add
ror
repz
xor
enter
gs
jns
add
ljmp
push
adcl
popf
jmp
insl
and
clc
es
in
and
loope
cwtl
out
stos
negb
and
fbstp
sbb
in
dec
int3
mov
push
sub
add
fs
lcall
lret
pop
in
ds
fadds
stos
inc
xor
sub
sti
pop
push
test
rorb
in
popa
bound
mov
out
sbb
push
outsl
mov
cmp
repz
insl
leave
icebp
notl
fdivrl
sbb
loopne
fisubl
push
mov
js
popa
push
cmp
into
pop
pop
pushf
pop
shrb
aaa
cmp
cmp
mov
push
std
mov
into
mov
pop
test
dec
les
into
pusha
cmp
insb
scas
testl
sub
mov
int
cs
sbb
mov
imul
repnz
fmuls
fcmovnu
jno
mov
sbb
fiaddl
out
xchg
xlat
fldcw
push
pop
pop
sbb
dec
mov
xor
imulb
xchg
or
mov
dec
cwtl
shrb
sarl
pop
stos
ret
sub
or
fiaddl
mov
add
adc
ss
push
sbb
loopne
adc
out
imul
dec
mov
jge
sahf
push
int
in
fdivrl
xor
stc
lods
in
add
inc
mov
lret
lea
rorl
loopne
fld
call
ret
push
jbe
jno
subb
test
jb
xchg
outsl
dec
fnstcw
cmc
or
pushf
xor
mov
mov
dec
pop
add
mov
inc
adc
arpl
aas
ret
xchg
pop
adc
cwtl
mov
sub
pop
dec
xchg
mov
inc
or
stos
xchg
dec
jae
xor
movsb
sti
stos
leave
pop
xchg
add
fcomip
leave
rdpmc
mov
push
or
fiadds
jbe
rep
xor
int3
leave
cmpsl
push
cltd
rclb
and
out
mov
cmp
daa
pop
or
movsb
sbbb
fldl
fisttpl
mov
enterw
hlt
inc
jns
xlat
xchg
ds
mov
xorl
push
cs
js
pop
inc
aas
popa
push
ficompl
imul
icebp
dec
mov
xchg
mov
cmp
pop
in
ljmp
cwtl
sahf
push
jnp
cmpsb
ret
jo
dec
dec
mov
adc
rolb
mov
lea
sub
jae
ja
fdivrl
dec
push
jo
xor
jle
sub
insl
cltd
adc
add
pop
in
es
dec
mov
adc
dec
int3
hlt
out
rolb
mov
out
push
push
push
xor
ret
dec
adc
dec
xchg
and
sub
or
insb
cli
loop
push
std
mov
push
push
pop
nop
jae
sub
dec
push
divl
rcll
lea
mov
cmpsl
test
es
adc
insb
mov
mov
rorb
subl
outsl
mov
push
xlat
push
decb
xchg
push
dec
push
cltd
or
js
adc
inc
pop
movsb
add
in
add
sti
jl
scas
daa
mov
call
push
adc
sub
inc
ret
pop
ret
out
pop
lcall
ja
fwait
addr16
in
lea
cmc
inc
pop
xchg
pusha
lahf
add
jmp
les
rcr
pushf
jmp
out
inc
pusha
stos
pop
popf
jne
jle
ret
insb
stos
push
lock
in
stc
out
ljmp
inc
lret
popf
test
mov
inc
mov
inc
jle
lcall
lret
rcl
fmull
jnp
clc
ja
pop
dec
aam
inc
sti
dec
and
or
xchg
lcall
sarl
push
imulb
fstps
mov
pop
lock
ds
inc
insl
fs
test
lock
sar
mov
rorl
pop
jb
test
aad
mov
out
icebp
rcll
imul
decb
insl
sbb
insb
push
push
dec
and
sub
bound
inc
and
cmpsl
sbb
mov
xchg
xor
lods
push
hlt
out
fsubl
test
leave
mov
call
mov
push
add
pop
pop
ret
lds
rorl
orb
leave
push
lret
ret
sub
and
push
cmp
shlb
mov
hlt
dec
mov
rclb
push
cmp
subb
push
movsb
sti
fldt
lret
cld
xor
lea
push
mov
neg
in
in
dec
imul
dec
mov
push
into
hlt
stos
push
sahf
fcomps
ss
int3
loop
push
dec
jp
movsb
outsl
push
mov
sbb
out
loop
jbe
cli
push
ret
inc
xchg
dec
std
xchg
push
inc
xor
mov
mov
pop
cmp
jmp
out
out
fdivl
dec
jbe
aaa
and
fists
aam
gs
es
mov
popa
loope
sar
inc
loop
repnz
add
aaa
mov
xchg
inc
jmp
into
imul
xor
dec
push
xchg
jae
fcmovu
push
gs
sbb
cmp
adc
push
divb
rcl
xor
sub
pusha
xor
daa
mov
filds
test
insb
imul
pop
pop
xchg
bnd
rcll
lret
or
dec
add
xor
sahf
fidivl
les
cmp
sbb
push
sub
cwtl
fisttpl
cld
mov
es
mov
lods
push
inc
cmp
insl
push
adc
pop
cld
cmpb
fcoml
xor
out
cmp
es
clc
and
ror
fldcw
test
cmp
aam
test
push
sub
mov
ffree
stc
and
xchg
add
or
pop
rcll
dec
lret
mov
sub
dec
xchg
dec
imul
das
pop
pop
lret
ret
mov
jmp
mov
xor
xchg
cld
in
push
ss
cmp
cmpsl
addb
gs
pop
aaa
pop
or
mov
mov
push
jbe
repnz
add
icebp
call
out
mov
jno
mov
sub
dec
inc
rolb
inc
dec
jno
out
sbb
jns
fwait
jecxz
cltd
adc
jo
pop
cmpsl
dec
add
es
arpl
dec
jmp
test
imul
xlat
push
ret
bound
es
rorb
fcoml
jecxz
jmp
mov
sub
out
inc
inc
xchg
mulb
ljmp
sbb
jb
add
jns
mov
out
add
ret
add
add
sub
cmp
jne
imul
sbb
in
ss
int3
out
notl
fdiv
cmp
loop
fiadds
push
js
push
fisubrl
sub
shr
inc
or
icebp
push
insl
or
iret
and
sub
aam
mov
bound
aam
or
out
or
mov
scas
lret
pop
or
add
jp
or
inc
push
xchg
in
add
mov
xchg
gs
repnz
mov
sub
jmp
insl
mov
insl
cmc
enter
idivb
lods
sub
sub
mov
pop
in
dec
add
aaa
jg
xor
xor
pop
lock
and
or
xor
inc
jl
insl
jo
lahf
push
mov
sti
int
cmp
inc
fisubs
jns
mov
ljmp
and
xor
rorl
cmp
mov
scas
xor
push
jg
imul
shrl
iret
cmp
mov
adc
fstl
ret
mov
stos
sbb
arpl
and
test
rcrb
sbb
xchg
scas
fstpt
rcr
sbb
movsb
fwait
pop
out
in
movsb
sub
pushf
jg
push
sbb
sbb
or
mov
cmp
add
cmp
or
ja
stos
popf
adc
clc
adc
ljmp
lds
dec
xchg
push
pop
xchg
aam
cmp
xchg
push
loope
pop
pop
xor
test
push
xchg
mov
inc
dec
ficoms
inc
pusha
inc
and
jae
ret
cmp
das
and
mov
inc
pop
loop
fldl
mov
inc
loop
or
into
stc
fcom
push
xchg
testl
xchg
loope
bnd
test
sub
sbb
addb
dec
push
push
mov
push
mov
imul
pop
pop
ret
xor
fwait
movsb
jb
jbe
inc
xlat
aas
push
cmp
outsb
lock
pop
mov
cmp
mov
scas
test
daa
jbe
xor
ds
subl
xorb
mov
dec
loop
ret
dec
pop
or
inc
mov
dec
xchg
and
push
xor
cltd
mov
popf
and
adc
xor
sbb
loop
mov
shrl
mov
sub
mov
xor
pop
mov
imul
adc
push
and
sbb
sub
ret
jl
js
call
sbb
clc
mov
push
cmc
adc
dec
es
push
lock
std
insl
xchg
cmpsb
das
mov
push
adcl
pushf
lcall
add
add
test
pop
lcall
ds
arpl
stos
scas
cmpsb
add
pop
addr16
push
or
and
mov
in
cmpsl
mov
mov
pop
xor
adc
sub
movups
pushf
mov
insl
cmp
arpl
add
arpl
bound
insb
push
jo
out
add
jbe
shll
sahf
jecxz
and
xor
lret
outsb
fmuls
xor
lock
lock
test
mov
sub
sbb
leave
std
insb
cvttps2pi
dec
loop
pop
aam
lcall
std
fiadds
xor
push
lret
sbb
sbb
outsb
mov
dec
rcrl
mov
jno
xchg
inc
inc
out
clc
mov
xchg
xor
lds
xor
in
push
jne
insb
rorl
jle
leave
dec
into
sar
repz
dec
lods
dec
fcoms
mov
push
push
rcll
lods
add
or
stos
ret
or
jmp
lods
push
xor
shrl
xor
jmp
mov
mov
push
dec
or
emms
sbb
cmp
lock
mov
sub
ja
sbb
repz
cmp
mov
out
lods
out
orb
ss
and
sbb
shll
shl
push
mov
es
jl
cld
adc
fsubs
call
jo
cmpsb
pop
mov
jmp
lret
sbb
cmp
rcll
enter
orl
or
dec
inc
and
cltd
out
out
rol
hlt
pop
xchg
cmpsl
aam
sub
fisubrl
jg
pop
inc
jge
and
movsl
push
cmpsl
addr16
nop
cltd
clc
sbb
mov
in
mov
xor
leave
mov
insl
dec
sbb
mov
push
aaa
insl
shlb
inc
and
sub
dec
and
xor
imul
mov
mov
push
outsb
jbe
lret
jb
stos
jbe
fidivrs
dec
fwait
jne
aad
sahf
mov
pop
lea
je
mov
jl
fdivr
mov
mov
mov
clc
lds
jle
and
inc
outsb
jns
pop
fistl
int3
jno
push
adc
mov
mov
push
dec
mov
rorb
sbb
ds
stos
in
mov
inc
xchg
jo
adc
sbb
sti
stos
fbld
xchg
inc
aam
cmp
negl
pop
sti
mov
ret
mov
out
mov
inc
or
push
ror
lock
mov
inc
dec
xor
adc
insb
and
sub
ret
fldt
inc
xchg
xchg
in
lahf
jle
out
lods
les
les
cmc
sub
leave
pop
cltd
repz
or
pop
pop
pusha
mov
push
sub
mov
ds
cmp
dec
in
sti
call
ss
in
call
lret
lret
les
test
push
add
rcrb
pop
push
cmp
andb
loop
push
int
inc
pop
or
adc
mov
mov
xorl
xor
or
int3
inc
add
dec
cmp
repnz
jo
pushf
pop
fnstenvs
std
aad
aas
sbbb
push
not
jg
pop
mov
pop
imul
push
sub
in
mov
mov
push
push
mov
xchg
sub
push
fs
pop
adc
or
mov
sub
aad
cwtl
and
lods
push
shlb
push
push
mov
cs
shll
mov
xor
je
pop
outsb
lods
cmpsb
push
loope
jp
test
mov
jecxz
insb
cmp
push
out
push
mov
or
pop
movsl
and
fcoml
orl
inc
push
mov
jae
scas
push
in
movsl
inc
sub
push
and
lea
lea
clc
ss
idivl
scas
jge
movsb
xchg
dec
repz
orl
xlat
sbbl
loopne
push
aaa
shlb
ljmp
or
mov
mov
mov
cmp
xchg
dec
pop
lahf
inc
cmpsb
mov
pop
pop
in
pushl
nop
es
pop
ss
push
sub
cmp
mov
enter
aas
stc
jmp
xor
sarl
mov
in
in
out
dec
in
sahf
loope
cmp
fldcw
stc
iret
pop
pushf
pop
jmp
decb
fidivl
xchg
inc
mov
adc
add
cmp
gs
xlat
in
mov
clc
outsb
cmp
call
mov
outsl
es
xchg
movsl
sub
ja
push
addr16
dec
out
jle
mov
push
cli
mov
repnz
lret
xor
fdivrs
add
pop
or
push
cltd
or
repz
jae
jbe
mov
sub
cmp
and
movsb
popf
xor
pop
aas
ljmp
jle
iret
popa
cld
aam
lds
cmpsb
xchg
mov
push
cltd
imul
movsb
lea
outsb
push
jbe
or
dec
in
call
shl
inc
sub
mov
sti
push
adc
or
arpl
mov
test
test
les
into
and
pop
mov
cwtl
lock
mov
mov
cmpsl
or
mov
loopne
mov
dec
mov
inc
pop
pushl
cli
call
outsb
imul
cmp
dec
mov
das
test
jae
mov
xor
or
jnp
nop
sti
sbb
movb
orl
push
inc
loope
adc
aas
mov
test
in
push
out
dec
and
jb
or
fidivrl
sbb
pop
fldl
nop
mov
fsubrs
push
dec
out
sbb
shlb
push
sti
lcall
mov
mov
aad
pop
movsl
daa
jb
cmpsb
test
fstl
stos
fwait
dec
js
fcoml
ljmp
jnp
stos
in
fisttps
js
sti
inc
insl
bound
pop
xor
shl
mov
jns
push
dec
xor
inc
pop
dec
dec
pop
ds
adc
mov
xchg
repnz
fs
mov
test
push
cwtl
add
lret
loop
out
and
or
dec
cld
jp
pop
push
fwait
mov
xor
or
inc
into
sub
fistps
pop
dec
sbb
inc
mov
ljmp
dec
pusha
lahf
pop
mov
xor
and
test
jmp
scas
cmpsl
sbb
and
mov
cmp
clc
ljmp
jg
jmp
or
out
cmovg
or
inc
std
sub
sbb
aaa
mov
jnp
movsb
mov
cltd
cwtl
jle
lods
cmpsb
sub
adc
pushf
insl
lods
je
cwtl
jnp
push
jnp
jb
mov
call
enter
fsubp
jbe
outsl
js
std
jmp
fcomp
je
mov
sub
and
mov
jno
dec
jnp
dec
cltd
nop
bound
dec
dec
push
sbb
add
adc
push
loopne
imul
xchg
xchg
xchg
fwait
adc
sub
sbb
push
negl
mov
push
cmp
cmp
popf
adc
mov
fxch
inc
out
js
inc
pop
sub
insb
dec
stos
daa
mov
dec
jne
mov
cmp
pop
es
push
xor
pop
int3
mov
dec
xor
or
cmpl
xchg
xor
outsl
or
pusha
cmc
mov
xlat
xor
xchg
pop
mov
sub
test
mov
cld
jnp
movsl
push
pop
cs
icebp
mov
and
cmp
push
sub
mov
add
out
popf
and
ds
cs
fbstp
rclb
out
shlb
outsb
push
jmp
movsl
xor
mov
ss
shlb
jnp
addb
sub
mov
inc
or
push
fistps
enter
sarb
mov
fwait
daa
mov
pop
lret
addr16
mov
mov
pop
sbb
dec
pushf
stc
aad
icebp
dec
xchg
mov
push
or
nop
sti
mov
push
dec
inc
shl
cmp
sub
inc
mov
jp
jnp
es
stos
jmp
push
adc
add
fcompl
adc
sbb
inc
pop
enter
rcrb
lcall
xchg
cmp
shlb
iret
push
sbb
sub
mov
dec
lds
mov
push
fldcw
xchg
pop
or
aaa
mov
sar
stos
jmp
mov
mov
repz
aas
jo
fmulp
and
imul
ljmp
or
pushf
push
scas
stc
andb
subb
stos
xor
and
lret
mov
push
jnp
fs
clc
test
mov
adc
lret
add
ds
repnz
xchg
notb
cmc
cmp
stc
hlt
cmp
or
andl
push
xchg
add
shrb
ret
mov
sub
sahf
sub
dec
mov
adc
fcoms
nop
testl
mov
pusha
add
imul
clc
out
dec
jle
stos
fbld
push
pushf
jnp
fnstenv
dec
xchg
and
adc
inc
xorl
dec
rcr
add
out
bound
mov
in
add
shl
stc
ss
inc
imul
icebp
daa
lret
dec
cmp
and
mov
cmp
mov
or
add
and
xor
iret
cld
push
pop
test
mov
xor
mov
test
fmul
sbb
rcrl
pop
loope
or
lods
add
nop
imul
dec
adc
xchg
ret
cltd
pushf
pop
cmp
out
xchg
add
fisttps
mov
in
aad
dec
aaa
scas
adc
stos
in
xor
lcall
enter
inc
or
push
jle
jle
jle
jnp
mov
loopne
loopne
mov
mov
ret
add
dec
sbb
dec
fsubs
inc
lock
into
arpl
iret
cld
cmp
mov
mov
ljmp
fldt
and
stc
ret
jl
testb
popf
add
jne
inc
shrb
sbb
jbe
test
jno
pop
out
mov
mov
clc
jnp
mov
and
mov
add
and
incw
push
cmpsl
loopne
xor
arpl
mov
sahf
and
inc
arpl
push
fwait
cli
mov
sbb
int3
adc
shlb
mov
cmp
push
jge,pt
inc
sti
ret
rorl
xor
out
xor
add
loope
xlat
test
fstl
fucomi
in
loope
fdivrl
into
sbb
push
loop
mov
rorl
cmc
pop
jne
out
sub
or
pop
xor
jnp
data16
jmp
test
lods
ss
shl
mov
sbb
movsl
rcl
push
cld
in
iret
inc
test
fidivrl
in
xor
icebp
fidivl
mov
stos
fisttpl
imul
ss
lock
dec
inc
imul
push
xchg
jle
pop
cmp
push
push
mov
lock
mov
pop
sub
ror
lods
mov
ret
rorb
fnstenv
aam
inc
fwait
mov
or
and
and
fmul
sarb
mulb
xchg
inc
mov
jbe
das
das
xlat
pop
pop
clc
stos
int
es
int
or
push
decb
cmp
mov
scas
jb
xchg
sub
aaa
lcall
xchg
push
cmpsb
adc
pop
std
ljmp
inc
jns
rorb
mov
jae
lcall
jecxz
clc
dec
lcall
lahf
leave
ja
sarb
push
or
mov
mov
aas
sbb
mov
inc
fnstcw
ds
ljmp
xchg
mov
cmp
gs
fldenv
push
sub
xor
or
jne
nop
dec
icebp
adc
sub
sub
cmp
adc
out
push
dec
cmp
ljmp
jb
mov
dec
xor
mov
sub
add
lea
inc
mov
repnz
aam
add
sbb
out
testb
imul
test
std
inc
out
js
xchg
xor
divb
daa
repz
lds
jmp
jae
repnz
or
xchg
ficoms
cli
push
idiv
es
push
call
cwtl
loopne
sub
scas
lret
xchg
loopne
bound
dec
xor
popa
sti
int3
cmc
daa
out
push
lds
dec
pop
test
xlat
out
pop
or
fstpl
sub
xchg
ss
sub
xchg
pop
cmpsl
push
cmpsl
xchg
adc
movsl
dec
imul
mov
and
stc
sbb
es
cmp
sub
sbb
mull
aaa
xchg
fisubl
jno
adc
and
sahf
mov
push
inc
clc
cmp
cmp
js
gs
sbb
stos
xchg
and
lods
gs
insb
xor
push
test
pusha
adc
or
rcl
fistpll
es
in
aaa
pop
xchg
andb
cmpsl
sbb
sbb
dec
mov
loopne
push
mov
or
leave
inc
mov
mov
je
add
dec
add
lret
jns
in
mov
cwtl
movsl
mov
cwtl
jp
push
push
sbbl
dec
adc
test
leave
jne
cmp
mov
pop
icebp
mov
sbb
adc
sub
pop
cmp
jg
subb
dec
jecxz
adc
cwtl
sbbb
pop
xor
jns
lcall
or
fadd
rol
arpl
dec
inc
stc
scas
test
cmp
jmp
cli
loope
mov
lahf
das
cmp
pushf
add
dec
test
aaa
or
push
push
scas
pop
pop
pop
scas
fcoms
sbb
shlb
test
adc
pop
mov
sub
mov
out
add
jno
push
mov
pushf
mov
push
fimuls
fdivl
ret
ret
scas
push
scas
aad
jmp
movsl
jl
sbb
xor
sysenter
xchg
rcrb
push
pop
lcall
jmp
sarb
sahf
je
jle
mov
leave
pop
rolb
popl
sub
pop
inc
into
adc
mov
lea
cmc
sub
sahf
in
sahf
jno
xor
gs
push
repz
and
pusha
add
loop
sbb
leave
sti
xchg
push
repz
mov
decb
sub
xor
ret
dec
subb
adcl
mov
int
jecxz
add
aad
out
jp
mov
fdivr
push
jl
stc
rorl
in
inc
or
outsl
cmpsl
push
adc
adc
jp
sub
mov
xorb
push
cmp
adc
sarl
adcb
dec
rcrl
fnstsw
js
lahf
sub
out
stos
cmp
lcall
push
lods
jns
outsb
push
lds
cmp
and
aas
sub
insb
sar
out
es
cwtl
xor
punpckhdq
in
out
or
add
adc
pop
add
lret
or
mov
ljmp
jae
xchg
es
psrld
add
pop
jns
sub
mov
fs
pusha
fcomi
movsl
xchg
adc
ret
push
and
sbb
sbb
sub
pop
jnp
aaa
je
sub
or
sub
mov
mov
jecxz
push
xor
lods
inc
or
jne
lea
mov
adc
mov
cmp
mov
arpl
bound
into
leave
mov
fstps
in
mov
xchg
pop
xchg
out
movsl
test
jmp
inc
fadd
add
mov
mov
or
and
pop
mov
sbbb
push
repz
lods
add
mov
mov
xchg
nop
add
mov
sti
add
ret
mov
inc
jg
negl
jne
fstpl
mov
shl
or
and
ret
iret
lcall
or
popa
xlat
mov
jge
push
ret
cli
nop
lock
jecxz
hlt
std
xor
inc
scas
icebp
adc
addl
inc
lahf
sub
jecxz
mov
fcoms
and
jmp
xchg
bound
jno
fwait
or
mov
testl
sbb
mov
cmc
movsl
mov
in
popa
jl
pusha
push
rorb
dec
jl
xchg
xchg
lock
push
and
mov
push
loopne
mov
mov
pop
out
outsb
movsl
out
mov
push
mov
lret
xlat
and
repz
mov
add
xchg
jne
js
aad
xor
cs
lock
bound
adc
and
int
imul
mov
jmp
arpl
test
push
popf
inc
push
pop
insl
iret
loop
sbb
sub
out
cmove
repnz
jecxz
sbb
into
iret
push
lods
xchg
xor
es
and
test
jl
in
lret
push
sbb
sbb
xchg
dec
add
sbb
shll
fsubs
outsb
test
pop
xor
dec
movsl
jg
sbb
dec
ret
sbb
sti
jp
arpl
fsubl
lcall
push
jge
adc
sarb
pusha
dec
fists
in
inc
mov
and
push
addr16
into
hlt
and
iret
adc
and
test
mov
test
ljmp
sbb
pop
idivl
dec
bound
aam
jecxz
jg
inc
scas
inc
rorl
data16
icebp
test
xor
test
in
decb
cmp
inc
movsl
mov
lock
mov
xlat
das
pop
test
jne
fdiv
mov
in
xchg
dec
lcall
ret
jb
jl
lock
jnp
cld
shll
cli
repz
sbb
push
lods
lret
inc
out
adc
fimuls
mov
xchg
pop
mov
fsubrs
mov
sahf
cltd
lahf
fwait
ret
cmp
mov
filds
ret
xor
cmp
inc
jecxz
add
out
adc
add
jne
dec
filds
add
popf
inc
lret
mov
hlt
insl
xchg
enter
xchg
mov
int3
shrl
jo
xchg
xor
add
sub
in
movb
out
dec
outsl
rcl
add
mov
movsl
leave
add
rolb
sub
cmp
and
clc
push
sbb
aam
negl
imul
dec
sbb
je
ljmp
jne
mov
mov
xchg
int
xchg
movsb
mov
minps
int3
mov
lahf
je
cmc
add
sbb
std
cli
repz
das
outsl
dec
mov
push
and
mov
inc
jl
icebp
xchg
add
into
pop
sbb
jne
xor
inc
sub
out
mov
icebp
mov
stos
or
cmp
push
pop
mov
mov
sbb
dec
aas
xlat
push
jno
sbb
jbe
cmpsb
mov
in
icebp
loope
jg
int
mov
pop
dec
repnz
and
fsubl
adc
call
sbb
repz
jecxz
das
hlt
mov
in
lahf
cmp
dec
add
xchg
ds
icebp
shll
in
mov
cld
xor
jbe
cwtl
sbb
je
adc
xchg
scas
pusha
outsb
push
aam
adc
cli
dec
clc
in
mov
cltd
lret
mov
lods
ss
mov
sub
xchg
std
icebp
jp
aaa
cmp
push
cltd
jge
int
jo
fsubs
mov
das
in
cmp
push
adc
lret
stos
mov
in
adc
pushf
adc
sbb
je
das
arpl
sub
repnz
dec
add
sub
outsl
loope
adc
loope
or
jne
and
push
lret
xchg
push
add
xchg
dec
xor
aas
or
loop
test
inc
cmpsb
push
cmp
ja
outsb
dec
push
aad
shl
add
push
mov
ljmp
sbb
dec
xchg
sbb
mov
and
out
add
jo
sbb
movsb
ret
lret
xchg
sbbl
mov
scas
popf
ficoml
mov
add
adcb
rcr
es
cmp
pop
mov
sbb
mov
sbb
test
mov
xor
inc
xchg
out
adc
cmp
in
test
sbb
mov
sbb
and
adc
xrelease
jle
jp
mov
ret
xchg
out
stos
mov
xchg
scas
mov
mov
clc
and
push
jmp
jmp
push
popf
lcall
fldl
xchg
fwait
arpl
or
test
adc
sub
fiadds
xchg
fstl
push
mov
sub
bound
fsubrs
or
cmp
jmp
jmp
mov
lea
xor
lods
sti
and
xchg
mov
push
loopne
and
push
fisttpll
sub
hlt
inc
nop
mov
sub
shlb
insb
cli
scas
cmp
scas
push
sbb
mov
nop
xchg
cmp
mov
out
rcrl
dec
lcall
inc
repz
movb
jnp
fdivr
adc
cld
xchg
mov
test
sub
push
jle
xchg
add
mov
cld
jae
in
cmp
adc
lods
xchg
mov
and
loopne
sahf
xchg
insb
sub
cmc
jno
fs
fbld
es
xor
and
daa
cmp
call
push
lcall
popf
faddl
mov
fcmovnbe
loopne
out
aaa
adc
sub
shrl
loopne
xchg
imull
and
pop
iret
cmovg
scas
mov
and
adc
dec
sbb
sub
bound
cmp
test
sarl
pop
or
aam
inc
pop
jg
mov
shll
out
jo
pop
pop
xchg
fisubl
loop
mov
jne
je
addb
mov
fbld
lret
fnstcw
in
pop
idivl
dec
pop
mov
ficomps
adc
sub
dec
ds
das
popa
int3
ret
and
jo
jne
fisttpl
sti
xor
or
out
and
xor
loope
outsl
fisttps
inc
leave
adc
sbb
cmp
xchg
jnp
pop
test
sub
aas
xchg
in
jne
sub
cmpsb
aaa
push
into
or
pop
xchg
out
jne
cmp
mov
pop
jns
mov
pop
mov
and
sbb
call
mov
jge
es
pop
shrl
les
jnp
sub
or
mov
mov
enter
cmp
push
inc
mov
sbb
dec
push
or
inc
sbb
xchg
sahf
loope
pop
inc
stc
mov
addb
dec
pop
ds
mov
repz
xchg
rclb
pop
push
outsl
pop
js
adc
mov
jle
pop
push
pop
cmp
sub
cmp
call
imul
add
pop
xor
stos
loop
sbb
xchg
push
pop
xchg
and
ja
mov
js
sbb
mov
sbb
lcall
les
fdivrp
pop
xchg
arpl
sbb
inc
pushl
push
test
push
sub
adc
pop
fwait
pusha
outsb
lea
inc
mov
roll
dec
leave
or
lahf
insb
xor
cmp
outsb
ljmp
mov
test
inc
add
push
sti
sub
sbb
lock
cmpsl
inc
push
lret
lahf
rolb
dec
loop
outsb
add
hlt
push
mov
push
in
int
and
rolb
cmc
jns
jmp
sbb
mov
sub
adc
rcrb
hlt
adc
les
dec
ja
test
bound
add
fistpl
add
cmp
sub
pop
rolb
push
psllw
in
adc
mov
mov
fwait
clc
dec
push
loope
stc
sbb
lret
leave
enter
mov
cwtl
ss
xchg
loopne
push
mov
pop
js
test
dec
mov
loope
xlat
aaa
and
xchg
sbb
pop
or
fcmovnbe
movsl
dec
les
les
pop
ss
call
sub
outsl
cmp
in
shll
lods
test
das
mov
mov
subl
mov
ret
outsl
and
lds
cmp
cld
popa
jmp
push
or
ficoml
outsb
mov
mov
ds
bound
mov
push
cli
popa
cs
add
rcrl
jnp
movsb
clc
das
in
sbb
mov
jl
jb
xchg
push
sti
mov
push
dec
icebp
mov
sbb
mov
mov
pop
mov
cli
loopne
xor
mov
loop
inc
jecxz
into
js
xchg
xor
jl
mov
scas
dec
jge
jg
test
lods
jl
fists
inc
dec
cli
cmpsb
mov
pop
xchg
xor
xor
jbe
pop
mov
pop
and
sbb
mov
xchg
inc
lock
jno
add
cmp
or
ss
lods
xchg
adc
test
mov
cmc
sti
inc
jg
mov
sbb
mov
test
not
jmp
loop
mov
sahf
shrl
mov
pushf
inc
out
cwtl
sbb
outsb
mov
out
mov
inc
jnp
call
repz
fisubl
out
add
adc
push
cli
pop
jmp
aaa
fists
cmc
cmp
push
jo
pop
sbb
xor
jecxz
imul
leave
and
push
ljmp
push
repz
push
ret
cmp
xor
and
outsl
and
mov
lcall
mov
pop
push
push
shrb
xchg
cmpsb
rcr
mulb
mov
insl
fmull
andl
or
dec
loope
aam
mov
cmpsb
sarl
or
dec
pop
sbb
sub
adc
icebp
dec
aas
pop
fmul
and
xlat
mov
sbb
dec
cmp
out
dec
mov
in
in
movl
pop
add
and
pusha
sub
push
daa
stos
add
movl
jb
xor
ficompl
push
icebp
inc
jne
fsubr
cmp
cmc
pop
jae
outsl
lds
outsl
push
add
inc
jbe
inc
insl
movsl
cwtl
stc
push
sbb
ds
sub
or
mov
sar
mov
jnp
dec
rorl
ja
stc
inc
orl
pusha
dec
adc
cli
jge
xorb
shr
sbb
inc
imul
mov
fstp
lea
lds
imul
and
mov
xor
popf
push
xchg
dec
xor
sti
mov
call
add
outsl
mov
cmc
mov
fisubrl
pop
push
pop
sbb
cmp
sbb
inc
push
dec
dec
cs
out
mov
push
in
je
inc
cmp
outsb
cmp
inc
imul
fwait
clc
push
ss
pop
xorl
in
lcall
inc
xor
or
pop
jmp
es
popf
stc
dec
sbb
xchg
fbld
jnp
shll
push
pop
push
mov
and
mov
push
mov
imul
cltd
xchg
sbb
or
or
and
xchg
jle
mov
or
cmp
out
adc
scas
dec
adc
clc
icebp
adcl
scas
jb
gs
cmp
sub
ss
in
inc
flds
add
mov
mov
shll
sahf
aad
outsb
adc
std
test
mov
ds
sti
pop
mov
iret
cmpsb
aad
jns
adc
cmp
mov
fwait
mov
jb
pusha
out
lds
roll
or
pop
cmp
fbld
negb
jne
shlb
pop
xor
rolb
addr16
test
adc
pop
in
dec
aas
dec
jge
xchg
xor
aad
movl
push
sbb
testb
jns
xor
adc
push
mov
js
xor
jns
dec
jmp
adc
loope
sub
jmp
jae
into
fadds
sub
dec
jecxz
push
or
movb
mull
sahf
ljmp
sti
push
insb
rcll
es
shrb
pop
cmpsl
cmp
xchg
aas
inc
push
push
pusha
jecxz
push
stc
mov
add
push
push
cmp
xchg
int
xchg
mov
sbb
xchg
movsb
clc
mov
pop
mov
out
addl
pop
aad
push
mov
popa
add
inc
mov
shr
out
xlat
mov
and
dec
insl
dec
sti
mov
in
test
lods
mov
cld
aad
fcomi
dec
xchg
mov
fidivs
outsl
rcrl
jnp
add
and
xor
mov
jp
cld
pop
lods
jge
testb
push
jae
mov
push
movsl
shl
push
pushf
stc
sbb
adc
mov
or
leave
mov
movsl
out
sbb
pop
iret
inc
mov
dec
adc
push
fists
jb
inc
test
loope
xchg
adc
mov
scas
add
mov
push
push
mov
insb
mov
fnstsw
aaa
inc
jne
sbb
lods
xchg
ret
in
inc
shl
jno
cmp
sahf
mov
cmp
jge
inc
adc
ljmp
pop
pop
adc
nop
inc
stos
mov
les
sbb
push
jno
out
int
sbb
pop
out
inc
cld
dec
out
mov
mov
mov
hlt
lret
mov
arpl
mov
push
cltd
pop
xor
imul
cmp
lcall
xchg
inc
cmp
loop
jo
jno
loop
leave
jge
cmp
inc
xor
in
xchg
out
faddl
sbb
adc
mov
inc
decl
vphsubbw
push
and
mov
jl
cmp
mov
inc
aaa
sti
inc
jle
cmp
sahf
rcrb
sbb
scas
shlb
in
push
popf
jge
inc
fistpl
push
inc
xchg
push
lods
dec
cmpl
in
in
mov
pusha
out
xorb
jnp
daa
clc
orb
mull
imul
adc
push
mov
roll
jge
mov
shr
stc
sub
lock
push
xchg
cmp
xor
mov
stos
fisubrs
addr16
and
jno
ffreep
pusha
push
imull
aaa
lods
sub
lods
mov
stc
inc
mov
or
cld
lret
js
movsl
and
in
and
inc
lahf
setle
mov
mov
cs
jnp
cmpsl
push
inc
lahf
inc
pop
out
fnstsw
cmp
repz
sarb
lret
add
sub
push
lret
sub
dec
aas
sbb
xor
cmpsl
mov
insb
xchg
and
sub
pop
mov
insl
loopne
inc
sbb
jmp
adc
stc
movsb
sbb
dec
pop
lods
add
clc
push
negl
shll
fcmove
or
add
das
pop
sbb
mov
dec
insb
pop
fdivl
imul
cmp
aas
sti
arpl
stos
jb
mov
xor
or
xor
nop
test
fwait
cli
punpckhdq
icebp
loope
int3
xor
mov
out
pop
add
mov
repz
mov
or
xchg
mov
cltd
int3
inc
cmp
mov
ss
and
add
dec
test
mov
call
stc
popf
push
insl
pop
dec
mov
mov
aad
add
sub
lods
jnp
jg
jle
js
scas
xchg
add
aad
mov
fwait
aaa
fnstcw
mov
push
and
aas
dec
pop
roll
xchg
rolb
les
xor
ds
in
lret
ficoml
leave
shlb
xchg
mov
jp
sbb
lods
jmp
sub
popa
repz
rcl
stos
fcoms
pop
subb
and
in
mov
shr
xor
and
xor
mov
test
or
loopne
daa
inc
iret
inc
movb
ret
push
xor
adc
ret
mov
mov
jns
into
mov
and
inc
test
xor
jle
fwait
stc
cmc
pop
movsb
nop
pop
call
and
add
xchg
dec
sti
shll
cmovnp
cmc
div
fs
xor
pop
push
movsb
push
popf
fildll
testl
nop
popf
sub
mov
mov
lcall
add
out
test
mov
pop
dec
xchg
outsl
and
enter
pop
and
push
or
and
xchg
js
inc
sub
subb
push
or
push
jne
ds
sub
jg
mov
jae
hlt
fmuls
pop
inc
adc
mov
push
insl
xchg
out
adc
stc
xchg
cmpsl
ds
stc
cmp
add
in
jg
inc
repnz
es
sarl
test
pop
sub
xchg
out
lods
sbb
and
or
push
xchg
adc
mov
fldcw
std
negb
mov
or
fwait
mov
and
cmp
xlat
jge
fldcw
xor
xchg
gs
pop
out
fcoms
aas
lcall
aad
bnd
pop
call
xchg
imul
call
pop
jp
loope
pop
mov
inc
fstp
in
adc
scas
inc
cmpsb
push
cmp
jne
inc
dec
sbb
loope
shl
add
stos
or
inc
out
dec
repz
mov
inc
inc
lods
jbe
lods
sub
sbb
pop
jo
and
addr16
inc
int3
loopne
inc
add
insl
inc
jno
add
movzbl
imul
jge
push
hlt
sahf
cmp
adc
stos
or
or
enter
push
stos
stc
outsl
jo
xor
aaa
dec
add
mov
pop
lret
jg
lods
enter
sub
ficompl
and
adcb
dec
imul
sbb
sbb
rolb
aas
jno
mov
subl
or
divl
sub
popf
andl
arpl
test
jl
inc
shr
es
jp
sub
sahf
xor
xor
imul
cmpsl
push
pushl
cmc
lret
mov
sti
adc
and
mov
sarb
sbb
sub
imul
outsl
fsubl
cmp
mov
fildl
nop
inc
xchg
mov
mov
or
lods
xor
mov
sub
cwtl
test
mov
dec
adc
mov
xchg
xchg
addr16
cmp
inc
inc
add
pop
sbb
lea
inc
aas
or
ret
ss
add
out
xchg
aam
push
mov
mov
dec
mov
cltd
push
aas
out
int
jno
mov
cmpsl
notl
out
int3
pop
sahf
in
sbb
js
enter
dec
int3
in
xor
sti
cmp
dec
enter
addr16
jge
xchg
dec
iret
lahf
xor
xor
sbb
insb
pop
mov
test
cwtl
jmp
ja
js
pop
inc
sub
std
enter
fmull
mov
shlb
adc
shlb
xor
xor
addr16
mov
ret
inc
cmpsl
pushf
aas
cmpsl
out
movsb
add
mov
fst
mov
sbb
mov
xchg
mov
inc
movsb
test
xchg
xor
lds
inc
rcll
fwait
icebp
movsl
js
jae
xor
add
adc
or
loop
jl
orb
loope
loope
jbe
adc
mov
rolb
imul
fistps
aad
and
mov
int3
inc
push
pop
lcall
adc
mov
sbb
mov
sbbb
xchg
icebp
insb
xlat
mov
daa
push
and
cwtl
aas
sbb
jb
cmp
inc
sti
scas
jecxz
cmpsb
pop
ss
mov
cld
arpl
sub
lea
or
and
mov
js
stos
lods
ds
aaa
cmpsl
inc
es
inc
and
int3
jb
cmp
xchg
jecxz
xor
and
lock
es
daa
jns
clc
sub
sbb
test
push
jb
sbbb
cmc
clc
dec
jmp
ljmp
adc
push
fildll
xchg
xor
mov
push
lcall
ss
addb
xchg
andl
bound
pushf
or
aad
mov
pop
sub
mov
add
je
out
lods
mov
sbb
mov
lods
outsl
cmp
enter
mov
int
pop
jae
push
push
mov
cmp
je
mov
sbb
mov
lds
push
lcall
cmpsl
aad
inc
out
xor
pushf
int
inc
cmp
push
xchg
pop
push
jg
mov
push
fs
pop
insl
lcall
test
mov
sub
sub
das
jl
mov
push
lahf
enter
sbb
out
lods
ret
std
jle
xchg
xor
lret
lahf
push
mov
stos
cmpb
clc
arpl
push
dec
rcrl
shrl
test
lods
mov
cmc
jl
xchg
popf
imul
mov
and
push
insb
incb
imul
leave
jle
dec
jg
xchg
call
cld
jmp
and
mov
insb
mov
cmpl
sub
sub
mov
sub
lds
sbb
outsb
or
cmc
jae
call
lds
sub
inc
filds
cmp
sbb
in
movsl
ficompl
push
mov
push
cltd
push
decl
sub
pop
cmc
jge
adc
das
adc
stos
hlt
add
or
mul
push
out
jecxz
cmp
ret
sbb
sbb
sbb
ds
dec
xchg
add
sub
lret
cmovnp
mov
mov
xor
dec
pop
mov
or
shl
shl
cmpsl
sbb
push
add
sub
sub
out
insb
divb
add
imul
xchg
sbb
xchg
lcall
mov
daa
pop
or
pop
mov
mov
ficomps
xor
pop
aam
cmp
push
jge
stc
fcmovnb
sub
jecxz
cmp
fildl
outsl
adc
push
call
xchg
insb
mov
iret
into
ficomps
nop
test
cmp
or
xchg
insl
and
jbe
sbb
xchg
mov
jmp
dec
stos
push
mov
jle
adc
sbb
inc
loopne
lods
cld
sbb
out
xor
popf
vunpckhpd
out
xchg
sbb
imul
ret
test
inc
jmp
xor
cltd
cmp
push
mov
fsubs
xor
mov
or
addr16
sub
and
pop
test
repz
sbb
xchg
dec
mov
xchg
adc
sub
test
clc
lahf
psubsw
add
pop
add
iret
lahf
sub
inc
lret
cmovge
push
hlt
push
mov
jg
xor
xchg
pop
xor
push
mov
or
in
lods
dec
inc
loop
mov
push
adc
bound
je
mov
ja
je
mov
cmp
fcoml
mov
pop
out
xor
into
add
imul
out
push
xchg
pop
jg
je
in
sti
ficoml
xchg
jne
shlb
push
push
inc
sub
les
enter
push
popa
sbb
outsl
cs
ljmp
mov
fwait
aad
adc
dec
test
inc
mov
and
test
ret
outsl
div
sub
push
jmp
xor
mov
loopne
xorb
or
add
pop
icebp
push
in
pop
jmp
sbb
pop
mov
fadd
cmp
je
dec
and
js
and
incl
je
out
adc
popf
mov
xor
out
inc
shrl
fdivrp
rcrb
loop
and
mov
xor
shrl
es
mov
or
popa
push
movsl
mov
iret
jo
cmpsl
popa
pop
out
fsub
mov
pop
sbb
std
add
je
sarb
push
mov
in
filds
mov
cmc
or
lret
ret
test
popa
sbbb
jl
add
jns
rol
ss
stc
xchg
inc
inc
adc
imul
adc
push
sarb
push
add
in
inc
addl
jne
ss
mov
iret
sbb
sub
xor
arpl
inc
cmpsb
add
pop
scas
mov
lods
jge
jns
notl
mov
repnz
jo
inc
lods
or
ds
xor
pop
jne
add
es
and
lock
cwtl
pop
mov
mov
add
ljmp
sbb
aaa
mov
call
test
pop
mov
sbb
idivl
sub
fldt
jne
mov
sbb
sub
lds
push
mov
push
jge
jle
push
jne
mov
and
jg
cmovp
jl
and
repnz
or
fcoms
adc
sbb
call
lods
rorb
cmpsb
sbb
ja
mov
daa
dec
xchg
cmc
or
les
xor
dec
pop
movsl
ret
mov
fisubrs
aam
fwait
mov
add
enter
inc
or
jp
inc
mov
cmpb
mov
rorb
jno
jl
fisttpll
in
lock
jb
cwtl
lcall
xor
fs
mov
mov
daa
lret
rcl
out
sub
test
dec
jge
mov
and
es
xor
cs
mov
in
test
sbb
jne
or
xchg
mov
push
dec
mov
aad
lret
mov
enter
test
or
into
xchg
mov
mov
std
jg
ret
cs
or
add
out
aad
into
mov
iret
sar
jno
pop
fsub
mov
movsl
pop
int3
out
mov
inc
hlt
xchg
hlt
add
and
pop
aam
push
and
inc
mov
pushf
push
mov
xlat
aas
stos
inc
push
in
pop
test
test
xchg
mov
scas
xchg
stos
mov
imul
xchg
adc
and
out
aam
and
adc
aas
dec
loop
sub
mov
jnp
xchg
subb
imul
cmp
sbb
xor
pop
in
icebp
dec
repnz
repz
push
lret
adc
mov
pop
push
and
cmc
fcomps
test
mov
sbb
jl
dec
fs
pusha
insl
push
gs
aaa
loop
mov
push
pop
mov
cltd
lret
cmp
fstl
jl
movsl
dec
inc
push
addr16
adc
pop
and
in
xorb
lcall
push
jecxz
sub
fimull
mov
ljmp
stos
xchg
mov
shl
insb
pusha
in
ja
mov
dec
outsb
icebp
rcl
mov
and
arpl
sub
sbb
test
push
and
mov
ficomps
in
popl
jns
mov
jge
jle
in
inc
out
mov
insb
xor
aas
pusha
add
inc
sbb
mov
jl
je
mov
je
in
add
pop
xor
stc
js
stc
mov
mov
inc
push
push
imul
ds
int3
or
pop
add
adc
or
iret
out
mov
data16
scas
popf
int
push
testb
fadd
jo
xchg
mov
sub
clc
mov
cmpsb
inc
ds
add
in
pop
dec
mov
push
add
pop
bound
sbb
cmp
pop
mov
jg
jle
adc
add
xchg
rolb
test
inc
clc
mov
movsl
pop
xchg
inc
cld
lahf
test
into
pop
dec
sub
lods
push
dec
push
mov
push
pop
xchg
dec
mov
and
xor
sbb
dec
xchg
push
dec
jno,pn
inc
mov
loop
jo
push
pop
xchg
ret
std
mov
fcmovu
fstl
lea
gs
lret
mov
stc
push
outsl
data16
lds
mov
out
xor
sub
pop
jbe
inc
sete
rcl
lahf
inc
dec
pop
in
mov
adc
lret
jnp
leave
and
mov
mov
push
xor
fs
dec
xor
pop
sahf
mov
mov
push
out
out
mov
adc
push
enter
ret
mov
sub
ds
arpl
ds
adc
testb
dec
push
dec
jl
bound
cltd
xlat
sahf
adc
stos
ss
adc
fwait
xchg
mov
adc
frstor
push
cmp
sub
mov
mov
ret
insb
ficoms
jnp
cmp
push
imul
mov
shll
lret
cmpsb
mov
sub
sub
sub
cmp
sbb
mov
outsl
sbb
dec
outsb
scas
jle
lret
cmc
xorl
out
dec
inc
movsb
mov
sub
jbe
jmp
push
popa
mov
stc
adc
xchg
inc
sub
inc
or
lock
or
out
adc
ss
out
fmul
jecxz
cmp
mov
sbb
paddd
sbb
les
dec
inc
cmp
outsl
and
sub
sub
sub
or
xchg
lret
jp
pop
insl
jae
or
lods
cwtl
push
fnstcw
loope
sub
sub
pop
jmp
push
fisttpll
lods
push
xlat
std
jmpw
xchg
test
shll
les
or
lret
jecxz
mov
cld
mov
mov
xchg
mov
or
cmp
jmp
ret
into
out
xlat
sub
out
mov
jns
mov
jns
push
lods
push
in
mov
sarb
fidivs
jo
lds
insl
je
ljmp
sbb
jl
adc
xchg
inc
mov
sub
xchg
or
lcall
push
and
daa
and
inc
jae
jecxz
icebp
clc
in
jno
fwait
ds
ds
sub
xor
jmp
loopne
aam
jo
insl
popf
fs
pop
push
mov
xchg
sbb
aam
stos
xor
mov
mov
xor
add
mov
dec
mov
clc
fmul
call
and
int
inc
mov
aaa
aas
fsubrl
jne
loopne
inc
mov
scas
loopne
jns
loopne
adc
aad
jne
fisttpll
mov
lock
xchg
sahf
mov
ja
pop
rcr
adc
ds
daa
sub
pop
stos
adc
mov
ds
cltd
jmp
cwtl
rcrl
sbb
mov
aas
fisubrs
dec
adc
adc
lds
cmpsb
and
dec
ss
mov
ret
in
rorl
stos
or
push
lahf
inc
xor
push
mov
pop
mov
dec
mov
mov
ljmp
out
loop
xor
xor
test
pop
push
mov
mov
xor
xchg
jns
xchg
fstps
cmc
jle
sahf
sbb
xor
daa
sbb
sub
xor
mov
dec
xorl
or
dec
stos
stos
pop
jae
pop
pop
mov
fcmovnbe
sub
lret
cld
ja
pusha
adc
cli
jo
or
push
xchg
inc
in
pop
fldenv
mov
lock
adcb
loope
xor
in
fcomp
shll
arpl
movsl
lcall
into
movsl
sub
lds
cmp
dec
mov
movsb
push
out
cmpsb
adc
lods
int3
test
mov
stos
pop
rolb
mov
xchg
mov
push
lret
fbld
imul
mov
sbb
inc
pushf
inc
arpl
xchg
outsb
fnsave
jne
aam
cmp
xchg
cld
ljmp
loopne
outsb
xchg
sbb
pop
pop
std
test
fiadds
jnp
sbb
push
inc
inc
lock
popf
sbb
sub
dec
xchg
pusha
add
jb
mov
fsubr
fbld
dec
jbe
cmp
cld
stos
xchg
pop
push
popf
aad
xchg
push
jb
push
sti
shr
popa
push
jbe
lods
pop
jecxz
sbb
adc
mov
cmp
clc
test
mov
or
cmp
imul
xor
xchg
scas
mov
cs
movsb
mov
push
popf
mov
fs
fucom
add
and
cmpsb
ret
leave
or
std
push
insl
mov
xchg
mov
push
inc
int3
push
insb
cmc
or
fadds
pushf
or
fs
ja
jg
lds
and
lahf
sbb
testl
cmpsb
fmulp
mov
pop
mov
push
sbb
dec
and
jmp
or
xchg
inc
push
arpl
push
loop,pt
push
test
and
in
add
fdiv
loopne
push
sbb
dec
dec
pop
out
repnz
xchg
mov
lock
dec
push
movsb
cmc
ficoml
ljmp
add
incl
idivb
pop
frstor
xor
cwtl
mov
das
lahf
dec
jnp
stos
inc
je
xchg
pop
push
xchg
mov
push
cmp
sbb
les
cmp
xor
jae
test
fnsave
jl
lock
xchg
dec
nop
sub
pop
notb
dec
popf
xor
push
ret
sti
or
fcmove
sub
add
stos
jge
vpunpckhdq
repnz
xor
xlat
and
inc
movsl
mov
cwtl
xchg
pusha
repz
sbb
pushf
fcoms
fbld
lock
dec
mov
in
dec
or
jnp
std
out
rcll
jbe
inc
mov
cmp
inc
push
sub
and
movsl
test
hlt
push
repz
xchg
out
enter
xor
decb
adc
cmp
and
inc
aam
int3
sbb
cmp
negl
lods
push
fists
cmp
cmp
imul
inc
push
xlat
dec
stos
or
out
movsb
lock
jno
fmuls
jns
mov
dec
add
aaa
popf
mov
in
mov
pop
pop
sub
stos
inc
pop
scas
and
or
popf
dec
outsb
add
mov
lds
inc
pop
jno
lods
jns
addr16
mov
mov
inc
mov
pop
mov
mov
loopne
mov
icebp
repnz
les
sbb
div
sub
rolb
iret
push
stos
notl
adc
movsb
jns
aam
cmc
nop
jp
cmp
test
ds
test
pop
fistps
or
rcrl
ds
dec
dec
fsubl
or
addr16
and
fildll
jge
out
out
mov
jns
push
pop
das
xor
jne
pusha
loopne
adc
pop
dec
sbb
jecxz
dec
dec
loopne
dec
mov
pop
cmc
enter
or
xorb
imull
out
mov
into
aaa
cmpb
sbb
loope
movb
sbb
pop
dec
adc
pop
cwtl
fcomip
pop
pushf
pop
ret
lahf
movsb
popf
stc
pop
std
adc
loope
pop
je
nop
dec
cs
jp
ss
inc
push
xchg
jns
hlt
sub
dec
jp
mov
stc
push
lods
push
xor
ss
fs
into
sub
lret
inc
inc
aaa
stc
daa
imul
pop
mov
cmp
sbb
cmpsl
and
jo
dec
je
and
dec
mov
inc
loop
cltd
outsb
dec
push
rcll
addb
inc
test
push
push
icebp
testb
or
sbb
rcl
jo
pop
aam
jge
add
sub
pop
int3
hlt
mov
add
lcall
mov
push
in
stos
jecxz
inc
ds
push
cmp
rolb
fdivrl
jns
add
inc
jmp
rclb
enter
cmpl
in
mov
es
stc
fcomps
loope
or
jecxz
loope
push
daa
xchg
fs
dec
or
test
test
cwtl
mov
movsl
fidivl
xchg
xor
in
jmp
lds
push
ficoml
xchg
xor
aaa
jmp
push
stc
test
je
xor
pop
xor
sbb
addr16
sbb
pop
divb
test
xlat
sub
sbb
mov
sub
enter
scas
lcall
fidivl
nop
cmp
add
or
pop
cmp
data16
call
mov
add
lods
jecxz
rclb
mov
push
mov
out
enter
imul
ret
jecxz
ss
lea
sub
push
cli
incl
jl
daa
les
jecxz
int
mov
add
cmp
test
xchg
or
dec
mov
inc
out
imul
shlb
inc
xchg
aam
mov
pop
notl
or
lods
sbbb
push
into
push
inc
aas
hlt
mov
gs
jecxz
and
out
in
dec
mov
scas
sub
test
ja
sub
fmull
mov
cmp
push
mov
pusha
and
mov
or
test
pushf
mov
cmp
insb
inc
pusha
or
scas
mov
in
test
ds
pop
leave
inc
inc
popf
mov
dec
jae
jb
jmp
std
inc
mov
outsl
xor
sbb
sbb
out
popf
in
push
fucom
and
push
das
jbe
adc
ret
lock
stc
push
sub
and
sub
movsb
popf
jmp
outsb
xor
bound
loop
dec
leave
push
cmc
mov
jae
mov
xchg
shl
lea
sbb
or
mov
into
paddsb
jo
cli
xor
push
mov
add
mov
inc
or
mov
je
add
data16
xchg
adc
dec
outsb
rolb
sub
out
add
pop
lock
rorl
bnd
adc
adc
mov
xchg
popa
jnp
repnz
aam
mov
scas
jne
loope
push
ret
les
sarb
mov
out
ret
scas
xlat
enter
sub
std
jle
inc
btc
xor
pop
inc
push
inc
sarl
adc
mov
inc
sahf
je
and
lods
aaa
cmp
stos
aad
mov
and
dec
nop
inc
scas
in
loope
xlat
ja
push
ja
or
das
fdivs
inc
sub
es
in
fmull
imul
cmp
push
aaa
push
out
and
mov
and
or
daa
adc
jbe
mov
mov
jmp
xor
daa
stc
xor
ret
aaa
gs
xor
sti
clc
je
rol
stc
fsubrl
adc
mov
movsb
cmp
sbb
int3
ss
push
lahf
leave
or
mov
rorl
scas
test
mov
mov
test
adc
jle
int
pop
push
lret
loope
adc
dec
into
lods
sbb
lcall
adc
mov
movsb
insb
iret
sub
xorb
push
cmp
cmc
jle
add
mov
adc
fisubs
mov
xchg
jl,pn
cmpsb
shll
pop
sbb
or
in
mov
xor
fbld
in
out
insb
mov
push
outsl
in
jne
rorl
inc
shlb
xchg
jg
inc
fldenv
xlat
add
xor
mulb
outsl
pusha
xchg
lret
pop
xchg
cmpsl
sbb
scas
lret
inc
test
mov
cwtl
insb
leave
push
mov
or
scas
pushf
mov
and
cmpsl
xlat
jo
cmp
mov
push
lods
call
sub
orb
push
push
sub
rep
call
mov
nop
jnp
mov
xor
and
mov
push
dec
nop
fiaddl
adc
push
daa
or
sub
in
test
lods
mov
mov
sub
pop
shl
add
push
or
test
mov
jbe
mov
lods
insb
inc
das
xor
rcrl
xchg
pop
mov
std
xchg
in
addr16
jl
outsb
jne
mov
jno
fldcw
xor
shlb
sarb
jl
sbb
sbb
jae
das
adc
adc
loopne
push
mov
sub
mov
out
and
pushf
sub
rclb
mov
fists
pop
mov
out
aad
movb
popa
icebp
data16
ss
push
fcmove
les
jns
scas
pop
nop
in
dec
inc
add
push
ficompl
and
scas
pop
inc
ficoms
imul
jns
xchg
xchg
push
pop
or
insb
int
pop
cmc
sbb
and
jo
or
mov
or
daa
sub
push
and
jmp
sbb
push
out
jnp
mov
mov
into
lahf
pop
pop
addr16
hlt
sbb
inc
lods
mov
aas
testl
sbb
shrl
dec
movsl
xchg
sub
mov
xor
add
repnz
and
jns
aas
popf
adc
loop
les
pushf
in
ds
cmp
sbb
cmp
iret
cmp
pop
cmp
sbb
and
push
std
sbb
pusha
cmp
xchg
rorb
pushf
jg
lock
inc
rorb
push
imul
test
adc
out
js
jo
and
inc
and
aam
mov
mov
sub
loopne
mov
push
faddl
gs
jbe
pop
das
mov
adc
sahf
insb
mov
or
repnz
mov
fcom
push
inc
addr16
xchg
sbb
push
add
xchg
mov
mov
and
mov
es
cmpsl
imul
stos
fiadds
cmc
xchg
or
cmp
scas
sub
sbb
or
popf
jb
mov
loope
clc
lret
js
cltd
pop
sub
mov
mov
xor
push
sub
in
mov
mov
fwait
orl
mov
pop
ret
test
enter
sbb
shll
gs
out
es
add
scas
jns
mov
pop
fsub
aam
lret
mov
xor
sub
outsb
test
pushf
enter
std
xchg
cmp
push
dec
mov
and
xor
ds
sub
test
mov
lods
xchg
stos
or
add
inc
dec
mov
test
in
jecxz
addb
imul
enter
in
or
call
push
pop
and
xchg
repnz
pop
lret
lcall
xor
mov
cld
addr16
clc
pop
or
jns
mov
dec
sbbl
fwait
mov
insb
xor
cmpsl
xor
addr16
pushf
fstp
or
jg
bound
and
dec
mov
xorl
add
testl
xor
ja
jbe
sub
test
in
push
jae
pop
lods
lods
dec
cs
ljmp
sbb
lock
jo
jmp
imul
xor
stos
lret
jno
push
cmc
pop
popf
out
xor
and
mov
sbb
movsb
add
push
add
and
shr
add
jb
cli
test
pop
fbld
xchg
call
cmp
mov
lods
or
xchg
dec
adc
cli
dec
add
call
loope
pop
jg
rcll
sbbb
jns
xchg
mov
outsl
cmpsb
jns
ss
movsl
fst
pop
cli
fistpll
out
loope
sbb
out
leave
jl
fs
test
aas
push
jg
push
cmp
and
inc
or
add
fstpt
pop
mov
movsb
frstor
jg
pop
pop
testl
mov
dec
jl
push
jno
inc
pop
rep
sahf
mov
pushf
xchg
sbb
adc
cmp
roll
xchg
lcall
pop
pop
dec
mov
stos
fidivl
cs
in
test
pop
and
adc
cmpsb
or
inc
test
xchg
cmp
js
in
ss
cmp
aam
test
mov
pop
cmp
push
aaa
jecxz
adc
mov
sbbl
and
call
dec
add
sbb
inc
out
xchg
mov
xor
dec
cmp
lcall
cwtl
cmp
popa
cld
das
call
pop
test
add
cmp
stos
push
call
dec
sbb
movsl
inc
cld
dec
lods
adc
nop
lock
jmp
inc
jg
and
jb
cmp
int
out
test
push
rcr
out
cmpsl
mov
in
hlt
dec
repnz
dec
or
lods
insl
inc
movsb
test
mov
add
push
mov
fidivs
mov
jnp
jns
sbb
std
in
out
arpl
and
jecxz
mov
sbbl
nop
jle
iret
push
mov
test
mov
inc
pop
lcall
jns
mov
add
ljmp
xor
jmp
sub
fistpl
pop
pushf
mov
lock
push
dec
arpl
jne
test
sub
int
cmpsb
xlat
gs
cmp
mov
enter
mov
pop
negb
adc
and
ds
sbb
int
jne
ss
lea
jge
and
sub
enter
jle
inc
gs
xor
push
dec
shrl
jno
add
pop
cli
scas
popf
cmp
out
push
fwait
pusha
jns
or
je
mov
mov
xor
leave
pop
add
sahf
adc
sub
push
pop
into
aad
and
adc
push
call
leave
mov
and
or
or
repz
fwait
loope
loopne
add
movsl
fcoml
imul
ss
or
or
jmp
and
pop
outsb
jo
mov
stos
ja
popf
ljmp
imul
addl
pop
and
push
dec
cmp
lock
cmp
into
lcall
push
aam
mov
push
jbe
sbb
popa
pop
and
pop
pop
inc
xchg
cmpl
pop
lea
int3
and
jle
adc
mov
pop
sbb
mov
enter
jp
aad
inc
mov
mov
push
fcoms
cmpsl
mov
arpl
hlt
and
in
pop
mov
inc
shrl
nop
sub
flds
push
jle
js
push
lret
pop
lods
adc
mov
test
scas
jno
mov
cwtl
movq
cmpsb
mov
std
cmpsl
mov
sbb
test
xor
xchg
inc
hlt
add
cwtl
pop
in
fidivrl
xor
pop
sti
mov
xor
rolb
dec
dec
sbb
xchg
clc
and
inc
cmpl
pop
daa
out
xchg
inc
mov
add
sets
mov
fnstenv
daa
ss
mov
jns
cmpsl
mov
cmp
xor
das
fwait
imulb
xchg
cs
adc
dec
js
orl
mov
add
mov
push
out
arpl
push
sbb
pop
test
mov
hlt
cltd
push
mov
int
mov
icebp
scas
enter
nop
test
addr16
or
inc
loop
mov
scas
cmpsb
sub
aaa
pop
das
into
push
add
xchg
jae
sti
js
leave
pop
dec
cmp
insl
push
cmp
fsubl
cmp
inc
int
mov
add
push
int3
daa
jecxz
setno
fidivl
dec
cmp
lods
sub
repnz
imul
mov
movsl
call
popa
inc
bswap
jo
dec
jg
xchg
xchg
in
rcrl
or
or
mov
pop
arpl
inc
sbb
push
mov
jg
cmp
jbe
add
jl
stos
xchg
cmpsb
mov
add
push
jecxz
es
push
pop
pusha
aaa
push
mov
popa
push
cli
pop
fisubs
mov
outsl
es
popa
fnstenv
xlat
adc
sub
imul
lds
imul
push
dec
adc
push
popf
mov
dec
int
mov
icebp
sti
ret
ret
xor
cld
sub
enter
jne
cmpl
ret
fiadds
mov
and
mov
nop
xor
cwtl
adc
outsl
or
push
inc
jne
adc
fisubl
nop
mov
shrl
inc
push
cmp
cmp
push
dec
push
push
mov
mov
jl
repz
pop
test
stos
ficompl
inc
push
aaa
or
jg
jmp
mov
mov
sbb
add
in
mov
mov
mov
popa
incb
and
test
fdivrl
insl
cli
dec
int
push
and
rorb
jl
mov
or
adc
and
push
xlat
lret
mul
xchg
sahf
in
shrb
sarb
xor
cmc
mov
jmp
arpl
xor
ljmp
fistpl
and
stos
int
lret
popf
inc
xor
add
stc
sahf
or
sub
fldl
or
sub
push
push
cmpsl
cmp
fcmovnbe
xorb
push
rolb
dec
neg
adc
sbb
cmpsb
or
lods
sahf
hlt
cmp
inc
sbb
pushf
andb
jbe
es
jge
add
adc
mov
rcrl
les
push
cli
lahf
into
xchg
mov
xchg
push
sbb
xchg
xchg
clc
lahf
or
xor
push
jae
xchg
jge
int
fisttpl
int3
xor
jb
loope
mov
mov
mov
cs
inc
test
imulb
sub
bound
sub
cmp
popf
rclb
push
or
aad
lods
inc
mov
cmc
mov
mov
adc
mov
lods
jbe
mov
sub
loope
into
push
adc
imul
imul
shrl
icebp
mov
mov
or
adc
and
fists
loop
pop
dec
xor
cmp
ret
mov
mov
push
ret
adc
popf
inc
mov
push
movl
addr16
pop
jnp
push
mov
std
push
movsl
cld
mov
jnp
out
pop
mov
sbb
and
jmp
push
lret
pop
lds
lods
xchg
daa
xor
test
mov
pop
add
pop
mov
jecxz
mov
ljmp
cmp
out
repnz
push
arpl
mov
xchg
shl
adc
mov
inc
flds
push
dec
pop
das
cli
xchg
push
sub
out
insl
fmuls
mov
mov
and
sub
iret
clc
add
xchg
inc
mov
mov
push
sub
imul
xchg
leave
iret
movsl
xorl
sub
fs
andl
mov
les
xchg
sub
test
xchg
push
sar
icebp
aas
push
in
mov
dec
jnp
mov
test
xlat
call
push
mov
sarl
pop
and
add
jle
repnz
rcl
sbb
out
js
xchg
popa
jmp
pop
or
sub
popf
hlt
es
arpl
es
or
in
mov
and
lods
xchg
sti
gs
inc
adc
push
mov
scas
in
stos
push
ficoml
pop
xlat
adc
imulb
mov
jne
pop
mov
into
imul
cmpsb
push
inc
sub
or
sub
xchg
mov
cli
push
push
sub
data16
cmp
rolb
clc
push
cld
gs
enter
cmp
sub
add
jbe
jmp
pop
adc
call
xchg
incb
in
jl
xchg
xchg
arpl
es
mov
jp
jns
xchg
enter
mov
outsb
outsb
or
push
in
and
outsb
daa
add
push
sbb
stos
andb
popa
arpl
adc
jle
xor
xchg
les
cld
sub
inc
bnd
push
add
fadds
inc
and
xor
mov
sbb
test
movsb
pop
or
ds
or
jmp
ds
adc
insb
loopne
test
pushf
pop
mov
push
mov
mov
sub
dec
in
add
jo
add
test
push
outsl
loope
pop
add
add
mov
mov
leave
add
js
loope
notb
sub
in
andb
adc
test
mov
xorl
lcall
lods
push
sbb
mov
inc
shl
push
ret
mov
inc
dec
or
or
clc
jge
insb
sub
outsl
cmp
lcall
rorb
lock
xchg
pop
enter
pop
in
xchg
sbb
or
or
std
cmp
rol
xchg
cmp
sub
sahf
mov
arpl
fcoml
aad
fists
js
sub
mov
out
cwtl
adc
loopne
jno
jg
cmpsl
fwait
movsl
daa
fidivrs
pusha
mov
dec
out
pop
out
mov
rcrb
lret
lock
sar
push
ds
pop
test
dec
push
jle
push
std
sub
les
inc
hlt
dec
enter
out
cmp
mov
push
addl
xor
lock
lcall
ja
pop
pop
jle
cli
sub
sub
or
jns
iret
and
adcl
pop
add
pop
push
push
pop
xlat
cmp
movsl
cmp
cmpl
add
pop
pushf
cld
shlb
mov
out
leave
jge
loopne
cmp
mov
int3
lahf
push
xchg
es
std
mov
xchg
and
xchg
add
cwtl
pop
sbb
mov
sti
pusha
daa
xor
inc
insl
push
pop
divl
or
lods
adc
mov
imul
cmp
nop
push
cmp
test
sbb
mov
ljmp
das
sub
add
pop
sub
xlat
add
or
jo
xlat
cmpb
pop
lahf
sbb
loop
sub
add
sbb
arpl
pop
pusha
out
movsb
cmpsl
lods
push
das
dec
jbe
add
adc
inc
or
push
push
mov
sub
jne
cltd
movsl
lods
ret
mov
push
scas
outsl
mov
xor
loope
xor
xchg
nop
sbbb
add
pop
in
out
adc
pop
stc
enter
out
leave
jnp
push
jmp
or
or
xchg
and
sub
push
mov
pop
sbb
pop
icebp
sub
sub
push
movsl
cmpsb
fistl
pushf
mov
pop
dec
or
nop
sar
cltd
fs
int
xor
lcall
xchg
pop
fs
pop
in
dec
data16
cmp
scas
push
pop
mov
leave
out
popf
xor
fstpt
push
push
in
jae
pop
adc
loopne
jb
jge
jmp
jle
adc
lea
push
sbb
pop
xchg
cmc
add
cmc
mov
pop
mov
xlat
ds
in
hlt
stos
cmp
lret
xor
pop
aas
xchg
sti
xchg
sbb
mov
pop
std
sbb
mov
jbe
sbb
xchg
cmc
sbb
fistpll
jle
inc
cmp
and
lahf
sub
je
sub
jnp
mov
xchg
sti
loopne
dec
adc
dec
fs
add
roll
mov
lret
adc
xor
or
enter
in
gs
inc
loope
out
pop
or
xchg
or
sarb
dec
xchg
cmp
mov
inc
push
popf
inc
sbb
insb
mov
pop
out
xlat
inc
shlb
int3
daa
out
ficoms
add
mov
push
push
mov
add
lret
push
add
add
js
push
push
loop
mov
xorl
mov
shrl
ljmp
sbb
inc
in
adc
push
dec
inc
ret
lods
xor
jmp
lock
movsb
mov
xchg
je
repz
in
pop
rorb
push
cld
mov
cmp
jge
dec
inc
push
add
fbld
in
xorb
sub
adc
add
sub
out
mov
mov
test
es
push
and
or
jns
aam
hlt
idiv
movsb
pusha
cs
cli
cs
xchg
pop
cmp
loop
sub
add
jae
mov
lock
push
push
es
int3
push
js
sbb
outsb
popa
lods
movsl
in
inc
imul
mov
int
xchg
fadd
imul
imul
int3
xchg
rol
pop
mov
or
lret
xor
sbb
sub
mov
or
mov
or
inc
into
cmpsb
mov
ja
mov
inc
rclb
push
daa
fs
dec
dec
lahf
std
pop
cmp
pusha
adc
mov
mulb
xchg
mov
fwait
or
imul
mul
add
outsl
xor
arpl
pop
jge
stos
in
xchg
stos
incl
mov
adc
loop
fisttpll
mov
jbe
stc
and
fimuls
inc
popa
add
cmp
jb
push
adc
iret
sub
scas
push
jp
push
inc
aad
jecxz
ficomps
dec
adc
and
dec
insb
daa
mov
push
addr16
mov
xchg
inc
push
cmp
rcrb
mov
iret
mov
ffreep
ror
cmpsb
sub
or
cmpsl
lods
or
adc
popl
je
imul
stc
adc
popa
pop
aaa
inc
jmp
mov
or
push
mov
xor
dec
shrb
repnz
pop
push
ret
fcompl
and
sbbl
int
not
loop
add
pop
pop
les
push
jle
or
out
je
xchg
int3
in
stos
test
push
test
popf
mov
imul
pop
adc
push
sbb
rorb
cmpsl
sbb
or
aad
sbbl
in
sbb
in
jg
mov
or
out
lea
inc
sbb
nop
sti
xchg
mov
dec
call
dec
mov
or
xchg
and
mov
aas
jb
inc
push
lea
sub
mov
lods
out
movsl
rcrl
jecxz
push
dec
dec
inc
inc
dec
cmp
push
in
dec
or
lahf
movsl
out
xor
mov
or
add
fwait
in
insb
push
push
sti
or
or
pusha
loop
sti
inc
clc
stos
dec
jns
pop
adc
bound
jle
stos
push
loope
ljmp
mov
call
cli
sahf
stos
sbb
and
lock
inc
and
mov
dec
dec
popa
lock
pop
add
mov
push
xor
jmp
mov
xlat
or
add
jge
loop
and
xchg
pop
dec
cltd
pop
paddusw
pop
push
push
mov
fildl
sub
push
or
dec
mov
xlat
movsb
movsl
hlt
push
popf
jnp
add
sub
jmp
xor
flds
lock
stc
les
mov
arpl
outsl
cltd
out
rcr
jne
outsl
mov
test
mov
clc
pop
std
add
or
cmpsb
lea
test
out
jae
and
cmpsb
jno
out
adc
mov
aas
imul
mov
ret
inc
push
aam
pop
scas
mov
and
mov
out
dec
mov
dec
clc
cli
xchg
sub
push
or
daa
and
addr16
xchg
lock
mov
test
add
vmovdqa
out
pop
shl
mov
inc
dec
mov
sub
ss
hlt
cmp
loop
call
push
out
nop
out
add
je
mov
test
mov
scas
mov
popf
in
pop
adc
jge
faddl
lods
xchg
xor
leave
add
xchg
imul
in
xlat
ficomps
je
mov
and
cmp
push
mov
add
fisubrs
pop
or
jle
jb
movsb
test
cmpsl
and
daa
dec
mov
out
iret
in
outsl
cwtl
lock
repnz
sahf
cli
nop
jle
cmp
pushf
ss
ja
cwtl
pop
dec
aaa
pop
add
jnp
in
test
jae
sub
xchg
push
add
cmp
mov
ret
pop
arpl
mov
ja
cmp
jbe
xlat
fnstcw
rcll
xchg
loope
cmp
push
fcmove
jmp
jnp
int
push
cmp
std
int3
xchg
inc
cmpsb
fs
push
xchg
dec
aad
mov
addr16
xchg
cmp
push
enter
inc
mov
jo
sub
sub
lcall
mov
mov
mov
adc
std
sbb
call
jp
dec
imul
int
mov
loope
push
mov
fnstenv
rorb
movsb
mov
adc
sub
pop
mov
jns
dec
mov
xor
xchg
push
and
mov
push
inc
cld
pop
cmpl
sub
outsb
mov
ds
push
fidivrl
lcall
lea
std
inc
and
xchg
out
push
lods
std
sub
stos
repz
test
sbb
cmp
xor
inc
jp
leave
push
in
mov
sub
xor
loopne
test
cmc
add
push
mov
aam
lds
repz
xchg
mov
mov
jns
pop
cltd
pop
fcoml
cmp
les
cs
or
adc
xorb
jle
and
hlt
bound
or
xlat
repnz
ljmp
stos
stos
or
cmpsl
insl
ds
cwtl
leave
lcall
xorl
daa
xor
pushl
fstpl
xor
xchg
push
xor
dec
addl
in
repz
shll
shlb
fmull
es
test
and
mov
xchg
roll
cmp
add
xor
cmp
adc
repz
mov
lar
shrl
push
std
popa
in
xchg
sub
add
into
cmpsl
pop
or
neg
dec
shl
out
sahf
lea
push
jno
aad
push
test
in
cmp
cmp
shr
in
xchg
adc
adc
cmpsb
mov
or
testl
adc
xor
adc
hlt
mov
mov
jecxz
lods
xor
test
or
std
sub
inc
cmp
jns
mov
bound
rcr
pop
icebp
movsb
mov
mov
jae
pop
shrl
icebp
jl
test
sbb
fsubs
leave
stos
sub
push
out
out
inc
rcl
sub
add
insl
movsl
xchg
and
imul
jl
leave
xlat
cltd
inc
mov
lods
xorl
sbb
in
mov
jno
xor
or
jp
sub
cmc
jl
in
test
daa
ja
into
rcll
int
cmc
push
mov
and
jle
inc
aam
mov
push
xlat
stos
lock
xlat
mov
data16
adc
cli
push
test
jne
jle
mov
jbe
mov
loope
pop
mov
push
cwtl
adc
sbb
add
or
mov
xchg
or
xchg
adc
push
dec
xor
cmpl
cmp
xlat
fwait
xchg
cmp
in
loopne
rcr
fucom
lock
mov
xor
fsubl
fmulp
lcall
int
lock
and
push
pushf
push
mov
sbb
pop
rcrb
pusha
outsl
popl
inc
ret
sbb
pop
or
call
cmc
push
dec
push
pop
loop
nop
fdivs
mov
rcr
stos
repz
dec
cwtl
add
aam
ds
mov
std
and
rorl
addr16
or
mov
ret
pop
mov
repnz
cmp
jecxz
jbe
in
enter
out
outsb
negl
dec
push
test
lret
lcall
aaa
rclb
dec
fisubrl
icebp
out
popa
cmpsb
and
into
dec
test
mov
loope
subl
loop
xchg
rorl
and
push
sub
aam
int3
fbld
add
xor
testb
inc
stos
jle
xchg
insb
push
aaa
xchg
clc
pop
push
and
sub
lds
jne
sbbl
aas
into
insl
xor
mov
adcb
adc
insb
sub
xabort
pop
faddl
dec
mov
add
mov
mov
imul
xchg
sbb
icebp
sub
mov
push
test
add
pop
or
imul
xor
nop
xor
gs
sbb
pusha
enter
into
fisttpl
mov
or
inc
sbb
popf
or
jle
push
push
and
mov
push
mov
push
test
xchg
push
sahf
or
fimull
in
jae
cmpsb
sbb
outsl
into
fwait
and
cltd
or
daa
pusha
movsl
pop
cmpl
dec
sub
mov
cld
into
incb
fisubl
push
out
push
das
orl
sub
pushf
mov
pop
fs
pusha
pop
scas
push
mov
pop
push
push
sti
push
cmp
sbb
or
inc
cmp
int
pop
out
incb
sbb
movsb
sahf
dec
mov
dec
xchg
imul
or
dec
cltd
jp
add
cltd
mov
inc
in
dec
loop
xor
adc
dec
lods
cmpsl
lret
inc
sub
push
xchg
outsl
add
fbstp
jne
call
inc
cwtl
jecxz
mov
jp
jp
pusha
or
imul
ljmp
lss
pushf
dec
or
lea
mov
mov
ja
leave
das
push
fisttpll
cmpsl
incl
adc
push
ss
es
enter
ret
dec
leave
out
bound
leave
int3
aad
cmp
dec
mov
inc
loop
daa
std
mov
movsb
pop
jb
xchg
cmpsb
cmp
ja
and
pop
xorb
xlat
xor
push
xor
inc
insl
sub
and
int
pusha
ja
cmpsl
xlat
outsl
lret
and
add
adc
inc
sub
es
cli
shll
test
mov
cmpsb
sarb
aaa
daa
or
movlps
into
es
cmp
arpl
insl
fistpl
addr16
lods
enter
arpl
ds
jns
lret
xor
js
call
into
xchg
inc
loopne
jecxz
inc
fs
imul
aaa
mov
jp
lds
mov
pop
cmp
pop
sub
repz
fnsave
mov
adc
cld
loope
into
call
adc
or
into
in
xchg
inc
inc
sti
cltd
sbb
inc
sub
ljmp
out
subl
mov
js
andb
fildl
mov
rcl
imul
push
jae
push
nop
xor
jmp
cmp
or
popf
mov
notl
and
repz
fsubrs
mov
pop
lret
mov
sti
addr16
push
aad
sahf
or
mov
add
orb
xor
xchg
xchg
ljmp
out
aam
inc
loopne
imul
rolb
movsl
pushf
pop
sbb
rol
jge
adc
das
out
shlb
add
lock
xchg
pop
ss
mov
shr
cmp
sub
enter
nop
dec
cltd
scas
prefetch
and
pop
jle
aad
stc
ja
xor
jecxz
movsb
dec
scas
push
xchg
negb
cld
movsl
xor
xchg
aaa
repnz
scas
cmpsl
outsb
xor
cmp
jbe
jg
dec
mov
mov
xor
sbb
dec
jae
jbe
push
dec
bound
mov
pusha
or
std
in
jmp
stos
repz
pop
sbb
dec
and
inc
jmp
hlt
mov
inc
rcrb
gs
lahf
xchg
xor
xchg
lahf
ret
sub
lea
ja
pushf
insb
sbb
fldcw
and
addr16
repnz
xchg
cmp
sbb
daa
shrb
jb
xor
mov
daa
adc
adc
jecxz
pushf
out
data16
ja
sbb
jp
cltd
adc
mov
push
imul
mov
ret
shlb
jle
add
and
mov
aas
stos
rcrb
cmp
dec
xor
lret
aam
ret
mov
shrb
jno
fisubrl
and
dec
cwtl
pop
loopne
ret
repz
shlb
push
xchg
aas
stos
xor
mov
mov
es
sbb
push
je
pop
mov
pop
cmp
xor
sbb
mov
popf
sbb
dec
jmp
cmp
dec
jle
data16
in
dec
add
jno
nop
mov
dec
test
mov
jle
out
or
lahf
dec
dec
ret
push
clc
test
mov
nop
pop
sbb
jle
popa
cwtl
pop
fimuls
or
mov
sbb
push
xor
mov
loope
lcall
jbe
or
subb
mov
std
xchg
jp
inc
sub
xchg
insb
fstps
push
pop
mov
add
icebp
dec
std
iret
iret
mov
out
sbb
dec
pop
std
cmp
lcall
clc
xchg
dec
loope
pop
filds
pop
inc
cmpsb
xchg
mov
mov
fcomps
mov
shll
aaa
pop
jbe
cmp
dec
xchg
mov
push
jnp
xchg
and
int
scas
shlb
add
cmp
repz
xor
lahf
mov
add
sti
jbe
rorl
adcb
cmp
dec
bound
inc
adcl
xorl
cmp
into
xchg
out
mov
data16
xchg
js
xchg
popf
pop
aam
mov
xor
xchg
pop
cmc
inc
mov
lds
mov
pop
xchg
or
mov
mov
into
movsl
xchg
int
clc
and
les
mov
mov
xorb
pop
sti
sbb
imul
mov
mov
in
xchg
mov
jno
inc
test
dec
hlt
jmp
push
imul
push
fidivrs
insb
mov
jmp
lds
out
pop
into
scas
clc
mov
sbb
lock
add
mov
addr16
mov
inc
pop
lock
cli
dec
cmp
test
in
mov
mov
xchg
movl
push
in
add
xchg
adc
xchg
push
xchg
cmp
mov
ss
or
jecxz
or
sub
negl
push
popf
test
push
lds
bnd
mov
pusha
nop
fwait
data16
cmp
xchg
fisttps
pop
dec
pop
iret
cmp
arpl
pop
xchg
cmp
push
bound
mov
cmp
out
xchg
mov
cmp
insl
mov
in
imul
rcrl
fisubrs
dec
test
push
push
fstp
mov
cmc
test
mov
clc
lock
sub
out
xchg
in
call
jae
mov
stc
rcrl
sbb
je
cmpsl
sti
std
xor
xchg
inc
or
ret
mov
stc
xor
jns
cmpsl
ror
jmp
arpl
std
mov
or
pop
jno
addb
or
cmc
adc
mov
loop
loopne
loopne
data16
mov
clc
stos
dec
stos
cmp
jbe
mov
mov
mov
push
cmp
lahf
and
jg
mov
jae
or
mov
enter
mov
aam
lock
lahf
and
jnp
jge
push
ret
dec
mov
mov
cmpsl
lods
mov
push
adc
sbb
lea
sarl
inc
add
es
cltd
std
push
daa
cltd
push
jno
sub
lods
push
jae
mov
sub
mov
icebp
jecxz
rclb
cmp
gs
test
loopne
dec
and
mov
dec
xchg
jbe
loope
add
mov
pop
sti
sub
cmp
das
dec
pop
outsb
or
cmp
push
imul
les
arpl
icebp
andb
push
sbb
mov
and
xor
repnz
xor
fisttps
inc
aad
dec
jmp
fmull
pop
jmp
js
jecxz
sub
adc
ljmp
pop
xor
xor
push
sbb
fdivrp
xchg
pushf
subl
mov
xor
adc
cwtl
dec
imul
or
jne
daa
fmulp
cli
cwtl
jae
inc
mov
jo
inc
imul
sub
jb
incb
les
pop
xor
xchg
lods
sbb
loopne
and
jb
sbbl
push
rorb
shlb
es
orb
lds
gs
stos
sub
mov
jo
ljmp
jp
mov
pop
std
xchg
cmp
ret
adc
pop
mov
test
xor
xchg
lods
xor
fisubl
and
scas
dec
stos
data16
push
sub
sub
mov
lods
shrl
in
inc
fidivrs
ja
int3
rcr
pop
push
pop
mov
mov
jbe
mov
lret
std
add
jle
jl
sub
jle
push
mov
lods
jmp
push
sahf
cli
sub
es
notl
insb
aam
rclb
jp
mov
or
jp
jo
imul
in
outsb
push
lahf
mov
push
inc
inc
daa
or
aad
and
cmpsb
add
outsl
push
cltd
xor
test
es
cmp
mov
fimull
std
cltd
lret
pop
inc
testl
in
adc
xor
pop
add
mov
out
cld
movsl
imul
dec
jecxz
pop
je
jno
xor
in
push
repz
insb
rcrb
out
cwtl
lret
leave
idiv
jo
xchg
dec
test
sbb
or
stos
or
cmp
nop
inc
data16
rclb
aas
inc
mov
das
mov
and
xor
shlb
lea
je
testl
pop
ja
or
xchg
cmpsl
push
mov
shr
les
fcoml
adcl
mov
daa
loop
sub
icebp
add
js
xchg
inc
mov
stc
sub
mov
jmp
lcall
mov
popa
cmpb
and
cltd
adc
rclb
fidivs
pop
mov
xchg
adc
fidivrs
pop
push
push
or
icebp
fninit
ljmp
mov
and
bound
dec
xchg
loop
mov
testb
lea
das
mov
icebp
mov
fsub
jbe
dec
leave
xor
sub
inc
test
mov
aam
jmp
gs
fmul
jb
cmpsl
lock
cltd
cmp
out
fistps
add
lods
clc
in
les
outsb
sub
call
lcall
stc
leave
pop
cmp
xor
fcompp
mov
mov
sarb
and
push
inc
adc
or
ss
mov
xchg
shll
repnz
jne
movsb
pop
loope
nop
push
sbb
in
sub
push
cmc
add
sbb
lock
or
pop
sub
inc
or
iret
iret
lods
mov
mov
stos
mov
std
jle
dec
test
inc
into
xor
in
aas
inc
cld
test
sbb
xor
repnz
jo
mov
aad
xchg
mov
xchg
mov
loop
xlat
fnstcw
inc
test
and
and
in
or
stc
outsb
stc
xchg
sysret
in
fcomi
test
fcomip
test
dec
cs
dec
gs
sub
mov
jp
dec
adc
cwtl
roll
ljmp
insl
leave
pop
fstp
sar
xchg
js
mov
loop
jl
pop
push
mov
xor
addl
imul
xchg
fstpl
mov
and
cmpsl
xchg
outsb
lods
popa
mov
aas
sbb
pop
xor
or
popf
inc
adc
stc
push
in
imull
pop
pop
cmp
sbb
cs
sbb
sub
dec
mov
mov
std
jae
adc
fidivrs
subb
daa
loop
xchg
mov
sarl
jno
imul
mov
mov
sbb
stos
test
rorl
ret
clc
out
mov
loopne
int3
mov
pop
negl
mov
stos
lret
jmp
mov
clc
pop
jg
inc
adc
scas
push
pushf
add
sbbl
int
clc
inc
lret
inc
aam
out
adc
and
fs
ror
dec
mov
mov
mov
pop
cli
sbb
jg
adc
push
inc
rolb
rcr
gs
or
jae
pop
leave
movb
mov
in
fcompl
sbb
jbe
out
bound
inc
into
mov
pushf
rcr
push
inc
insl
and
and
inc
sub
lods
popa
loopne
mov
ficoml
and
cli
inc
add
adc
and
movsb
in
dec
sbb
std
scas
pushf
out
and
cmp
cwtl
sbb
xor
sti
add
xchg
jmp
mov
mov
push
xor
roll
adc
mov
mov
clc
sub
cli
xchg
loope
fstl
pushf
dec
imul
sbb
out
inc
add
out
movsb
movsb
jbe
sarl
add
rorb
sbb
dec
add
nop
jmp
sbb
xor
inc
pop
jl
inc
xlat
cmp
mov
pop
pushf
in
xchg
scas
out
movl
xor
dec
pop
add
or
xchg
mov
xorb
mov
add
in
add
mov
addb
jbe
lret
push
add
mov
cmpl
push
lcall
jmp
jp
js
mov
cli
sbb
mov
jb
cmp
mov
cmp
enter
mov
test
nopl
mov
sar
and
or
push
or
inc
stc
hlt
mov
lret
and
adc
test
inc
add
fisubrl
jbe
in
loop
fistl
jecxz
sbb
es
loop
outsl
push
mov
inc
or
sbb
mov
fsubl
mov
shlb
sahf
xchg
push
mov
inc
jae
std
sub
dec
sbb
out
jg
filds
out
lcall
xor
dec
test
fimull
data16
fildll
add
inc
push
pop
repz
adc
push
sub
icebp
fdecstp
ja
mov
jnp
mov
notl
jecxz
inc
mov
fwait
push
push
dec
sbb
cltd
daa
imul
out
jge
fistl
stos
xchg
je
imul
fisubrs
hlt
dec
scas
mov
aam
pop
inc
test
cmp
push
mov
test
mov
fldl
mov
cmp
inc
push
adc
xlat
or
push
push
dec
jns
lea
push
xor
ss
lret
fstl
and
xor
mov
mov
and
add
cltd
pop
ficoms
add
pop
xor
or
lods
and
xchg
sub
test
call
cltd
stc
std
xchg
push
out
rcrl
inc
les
jae
and
xchg
dec
int3
jno
scas
xchg
cmp
orb
push
gs
rorl
push
insl
imul
test
xchg
or
mov
pushf
movsb
sbb
push
stc
jecxz
xchg
adc
adcl
scas
outsl
pop
outsb
ret
or
add
cmp
xchg
das
sub
adc
mov
mov
addr16
xchg
xchg
add
jae
fnstsw
lret
gs
cmp
insb
jmp
dec
or
and
iret
add
sub
jmp
out
pusha
and
mov
fs
sbb
es
inc
mov
mov
out
clc
cmp
cwtl
pushf
popa
divb
pop
cmp
insb
push
ret
fldenv
lret
jnp
pop
cmc
sarb
xlat
sahf
scas
cmp
sub
or
jno
sub
int3
js
shlb
lret
mov
mov
xchg
sub
das
insl
imul
outsl
inc
outsb
mov
outsb
call
dec
add
mov
inc
pop
push
and
daa
imul
lock
mov
outsb
out
popf
out
xor
mov
xor
adc
cltd
pop
clc
or
dec
sbb
cld
mov
pop
jae
xor
dec
into
cmp
push
cmc
scas
in
pop
jb
outsb
fimuls
sub
stos
sub
inc
loope
push
outsl
in
jmp
pushl
and
xchg
sub
pop
aad
loop
cs
cmc
cmp
sbb
push
enter
movsl
clc
adc
xchg
scas
mov
es
rcrl
movsb
lret
inc
sub
pop
sbb
aas
cs
push
mov
subb
sarl
movsl
ret
movsb
ja
rolb
inc
mov
lds
ret
adc
hlt
mov
subb
adc
dec
mov
push
xchg
popf
js
lret
sub
dec
enter
mov
mov
jno
outsl
and
scas
mov
dec
repz
lahf
sub
inc
sti
cmpsl
test
enter
les
push
imul
pop
arpl
pop
lret
or
call
mov
loope
inc
fnstenv
imul
into
loop
xchg
scas
add
dec
sbbb
cmp
mov
xor
rcll
daa
fiaddl
aam
jo
pop
lret
js
and
adc
aam
pusha
and
cmp
cli
pop
loopne
push
out
fldenv
and
pop
cld
lods
xchg
js
adc
lea
addb
adc
enter
xor
lds
dec
adc
popa
push
arpl
xchg
xlat
pop
call
mov
add
inc
data16
lcall
out
cmp
xlat
rorb
dec
xorl
lahf
cmp
push
dec
xor
nop
repz
imul
nop
leave
or
test
aam
or
adc
cmc
dec
adc
fsubrp
cmc
xor
in
push
dec
add
mov
and
jle
adcb
imull
pop
stos
out
mov
dec
mov
xchg
add
lods
int
sub
and
or
pop
cmp
mov
imul
shll
or
or
stos
sbb
dec
fstpt
sbb
adc
das
inc
rcrb
scas
movb
sbb
mov
js
rcll
and
pop
test
filds
sbb
icebp
dec
jo
xchg
dec
test
into
aaa
pop
arpl
adc
jmp
test
shlb
lret
lea
add
cltd
iret
inc
jp
in
xor
add
push
push
jmp
cmc
stc
enter
ljmp
jge
int
pop
movsl
pmullw
sub
es
in
pop
push
je
pusha
cmpsb
fst
in
and
incb
fs
sbb
scas
jp
ljmp
cmp
hlt
mov
xorb
shll
mov
das
insl
adc
int
in
pop
jecxz
into
ret
jp
adc
and
sbb
stos
adc
pop
shll
push
fs
xchg
mov
neg
aad
in
rcr
dec
push
dec
push
out
mov
xor
fs
adc
mov
pop
mov
pop
addr16
popf
inc
inc
jbe
sahf
out
jo
jbe
jb
popa
rcrl
xchg
pop
dec
les
xor
push
js
cmp
pusha
sarb
add
push
fbstp
test
dec
push
or
jecxz
and
sub
mov
push
mov
or
repz
cmp
enter
stos
test
out
lret
cmp
fcmovbe
stos
adc
mov
xchg
insl
sbb
inc
or
je
lahf
mov
sub
jnp
mov
cmp
inc
jg
mov
adc
xchg
push
push
out
mov
mov
xor
fld
enter
push
xorb
push
rcrl
mov
mov
lods
pop
movsl
pop
adc
add
fsubrl
mov
inc
fs
int3
arpl
aam
jecxz
out
scas
sbb
sub
clc
enter
push
sbb
flds
mov
aaa
add
int3
or
loope
pop
sbb
dec
mov
mov
mov
jle
lea
jno
or
call
or
xchg
les
shrb
aam
popf
and
loop
push
es
jg
dec
leave
jmp
arpl
shll
pop
jne
pop
lret
or
sbb
aam
cmp
mov
xchg
xchg
lock
ss
test
inc
sti
popf
sarl
inc
lds
lcall
pop
mov
add
jecxz
mov
pop
sbb
inc
outsb
xor
clflush
push
or
adc
bound
sbbl
push
xchg
xchg
repz
cmp
pop
add
mov
mov
dec
push
int
ja
jge
dec
rolb
dec
xor
stos
adc
fidivl
stos
lret
ss
xchg
add
gs
inc
xor
pop
imul
lahf
js
and
mov
outsl
lret
push
or
imul
jmp
or
sbb
insl
pop
outsl
loop
out
mov
and
inc
mov
adc
mov
popf
mov
test
xchg
imul
sarb
jmp
push
mov
decb
and
lcall
mov
jo
jmp
fcompl
jbe
xchg
adc
cmpb
in
ss
test
add
pop
and
fistpl
push
xor
pop
xorb
stc
iret
and
xchg
scas
pop
adc
push
cmpsb
push
jbe
xchg
push
subl
int3
pusha
push
sbb
int
movsl
push
mov
lods
pop
add
mov
pop
cmp
int3
test
jg
pop
test
jg
pshufw
lods
adc
jmp
sbb
add
int3
push
pop
insb
and
imul
push
int3
lret
js
ret
lds
roll
stos
pop
in
into
pop
pop
inc
scas
adc
inc
add
stos
push
jl
arpl
fstpl
jno
pop
jno
push
xchg
mov
ss
pop
addr16
popf
or
leave
hlt
cltd
jno
daa
popa
in
jle
jb
cmp
cwtl
cmp
lret
mov
jmp
icebp
pop
shll
xchg
mov
inc
mov
mov
sarl
cli
call
sbb
cwtl
push
rcl
xor
xor
nop
jecxz
pusha
mov
mov
ret
mov
iret
push
cmp
fmuls
testl
xchg
mov
out
scas
sahf
add
push
jne,pt
fnstsw
js
sbb
jecxz
jle
cs
popa
aad
daa
cmpl
inc
xchg
out
rclb
popa
lods
ffree
push
rcrb
into
lock
xchg
xchg
sub
adc
call
xchg
aad
jns
xor
sub
test
or
hlt
ss
sbb
push
lret
addb
roll
testl
jns
and
into
adc
dec
pop
enter
fwait
sbb
inc
jno
pop
inc
sti
xchg
jmp
sub
cmc
mov
fcomps
negl
fistps
div
je
fdivrp
nop
int
pop
pop
rcl
je
push
cmp
sub
push
arpl
insb
xor
mov
inc
mov
mov
lret
jl
mov
mov
aas
inc
bound
pop
movsl
lcall
xchg
pusha
cwtl
jl
and
jmp
mov
aad
cmp
sub
jmp
lods
shl
xchg
fs
add
into
stc
jl
ja
in
inc
push
mov
leave
sub
mov
mov
push
in
inc
loopne
lret
xor
jo
and
daa
cmpsb
lods
out
cmpsl
loop
lods
pop
incl
jmp
lahf
mov
idivl
outsl
jge
imul
pop
push
hlt
jle
xchg
fsubrs
insl
call
popf
push
pop
jns
xchg
dec
int3
xchg
fstp
mov
dec
mov
in
bound
dec
rclb
or
sub
xchg
mov
enter
xor
fs
add
push
push
inc
jle
mov
mov
push
lods
xchg
xchg
repz
aas
fstpl
xor
mov
mov
rcrb
or
mov
mov
push
pop
xor
jl
rcll
in
pop
sahf
andb
cmpsl
mov
or
mov
or
mov
cli
sub
aam
cmp
aaa
add
pop
inc
mov
mov
into
sub
cmpsb
loopne
sahf
out
mov
xchg
push
xchg
gs
loopne
hlt
pop
nop
pop
lds
cmp
aas
jno
fucomi
arpl
xchg
mov
les
mov
sub
jmp
jge
pop
xchg
jmp
pop
mov
push
jle
callw
cmp
xchg
push
mov
xor
or
sarb
and
addb
ficomps
pop
aaa
subb
hlt
mov
xor
testl
xchg
mov
shrl
movsb
pop
sbb
aas
inc
push
adc
mov
jnp
fisubl
cmp
and
lahf
or
mov
leave
push
out
push
and
inc
icebp
xor
add
xchg
xor
cmp
sub
rcrl
xchg
frstor
fisubl
lcall
rolb
push
mov
sub
mov
out
out
jae
imul
loope
popa
and
stc
jo
inc
aaa
sbb
lods
xor
dec
add
lret
and
repz
stc
xchg
iret
hlt
lret
or
lea
pusha
test
and
mov
add
jl
dec
jge
jae
mov
filds
es
aad
movsl
imul
xor
fstpl
mov
push
fsubr
pop
movsb
rorb
cmc
pop
push
call
std
push
adc
mov
pop
jo
mov
adc
xchg
scas
test
std
and
adcb
js
mov
call
aaa
jmp
mov
jecxz
add
rep
loopne
or
sbbl
and
jecxz
repz
xchg
inc
out
sub
movsb
movsl
mov
cmp
jl
popa
and
xchg
jb,pt
dec
gs
je
push
mov
test
call
add
push
sbb
clc
cmp
jno
imul
imul
sahf
inc
cltd
jbe
and
sbb
push
int
aad
imul
loopne
mov
mov
cmc
mov
jp
adc
arpl
jmp
lds
jne
xchg
addb
repnz
jle
sub
jo
aaa
addb
adc
outsl
pop
inc
addr16
and
add
jl
xchg
cmp
pop
mov
ficoms
lret
xchg
cli
or
mov
outsb
int3
sarb
fidivrs
iret
jp
nop
mov
mov
cmp
ljmp
scas
loopne
dec
jmp
and
dec
imul
push
popa
pop
fsubrp
push
xlat
fisttpll
sysenter
rolb
push
mov
push
or
dec
insl
mov
repz
inc
and
aaa
test
daa
filds
jb
outsl
shrl
repz
xchg
sbb
add
pushf
mov
push
jg
cmp
push
or
cmp
addr16
andb
xchg
stos
pusha
in
jmp
push
in
int
int3
jb
push
dec
push
cld
adc
div
addr16
add
xchg
inc
pushf
daa
fcomps
push
xchg
mov
xchg
cmp
nop
mov
lds
lods
popa
mov
push
cmc
cmp
loope
das
repz
pusha
xor
push
sbb
mov
movsb
pushf
push
jae
jae
dec
sub
or
inc
repnz
add
clc
cmpsb
and
aad
xor
xchg
cmp
cmp
adc
nop
inc
jle
push
enter
and
aas
lods
cmc
dec
and
and
outsb
rcr
jge
pop
mov
xor
inc
sub
push
mov
pop
xchg
xor
mov
test
pop
fadd
sbb
loope
scas
fmul
push
inc
loopne
jmp
inc
jb
and
sub
sub
or
push
or
outsb
out
shll
rol
decl
mov
xor
jne
cmp
and
es
adc
dec
jl
lods
cmp
cmp
ret
sbb
in
sahf
shrb
scas
test
leave
sbbl
xchg
in
fnsave
sub
cmp
insl
fwait
and
mov
xor
incl
insl
sub
lret
add
stc
in
jae
sub
fisttpll
addr16
mov
stos
or
mov
cmp
xor
adc
sahf
sbb
outsb
pop
test
pop
test
inc
inc
imul
orb
rorb
push
adc
mov
lock
and
fisttpl
xchg
mov
pop
je
sbb
imul
rol
aaa
lret
mov
cmpsl
and
sub
sub
xor
js
mov
cs
mov
and
mov
loope
in
xchg
repz
mov
push
adc
cmp
or
mov
push
mov
mov
mov
bnd
rol
inc
inc
pop
dec
dec
test
ffree
sub
dec
mov
enter
fsubrl
cli
push
inc
je
adc
loope
push
pushf
dec
xlat
pop
pop
cld
faddl
xchg
pop
dec
mov
push
lret
ljmp
dec
enter
xor
repnz
ss
cld
jmp
xor
adc
frstor
inc
mov
push
popa
jmp
dec
lds
jae
rcr
dec
insl
out
shrl
fwait
push
jb
enter
jle
mov
add
jmp
push
paddb
rorb
ficomps
jnp
outsb
out
out
enter
and
aam
ja
pop
les
inc
test
xchg
cmpsl
mov
sub
pop
add
leave
movsb
nop
out
cwtl
cli
out
cmpsb
jo
lods
push
jmp
pop
ja
jno
outsb
clc
out
or
imul
or
insb
rcll
js
popf
mov
sub
aam
pop
ss
mov
pop
sbb
scas
aaa
push
mov
outsb
add
out
ds
es
lret
loope
and
pushf
rcl
popf
pop
popf
pusha
push
fisubrl
notb
popa
aad
xchg
rolb
sub
xchg
imul
dec
hlt
call
sub
fsubrs
stc
pop
jno
fsubrl
and
shlb
push
and
jmp
test
addl
fwait
je
scas
rorb
aaa
sub
dec
push
add
push
fsubl
imul
sub
sub
sub
stc
xchg
cmp
and
xchg
dec
shll
test
mov
insl
mov
and
cmp
in
sub
cs
cwtl
je
shrl
mov
jg
pop
mov
pop
enter
mov
sahf
gs
loop
arpl
pop
mov
pop
ds
clc
sbb
mov
lret
rclb
bswap
xlat
nop
sbb
repnz
std
pop
or
and
and
dec
dec
fidivrs
jge
in
test
sbb
std
fsubrl
cltd
aaa
out
jo
or
mov
xchg
sbb
push
mov
inc
sti
out
cltd
add
mov
lret
std
inc
sahf
popf
or
cli
mov
mov
xchg
ret
addb
test
pop
cmp
pop
xchg
adc
add
clc
loop
iret
das
sar
ja
stc
aas
pop
hlt
xor
xchg
cld
add
mov
adc
mov
push
fwait
jl
dec
and
shlb
sar
shrl
aam
cmp
push
insl
fstpl
push
add
cwtl
mov
dec
out
push
nop
mov
sahf
ficoml
mov
mov
mov
lret
add
rclb
cs
lret
sahf
mov
mov
insb
sbb
out
lea
dec
arpl
popf
mov
cld
mov
cltd
xchg
pushf
fcmovnbe
dec
lea
adc
inc
ljmp
pop
aad
cltd
fmul
lds
lahf
insb
adc
sbb
mov
fists
enter
rorl
pop
mov
mov
cmp
js
add
mov
mov
int
inc
jno
cmp
push
sarl
lock
scas
fistpl
ret
mov
loopne
xchg
push
fwait
test
fdiv
arpl
or
sarl
out
xor
mov
xor
pop
rcll
mov
sub
ljmp
or
sti
sti
mov
and
push
shrb
cmc
sbb
sbb
or
gs
repnz
cmp
scas
cmp
movsb
mov
sub
shll
adc
cmp
out
outsb
frstor
cmp
adc
sahf
adc
push
movsl
xor
jecxz
push
push
inc
push
fcmovu
test
push
dec
xor
jmp
sti
add
pop
imul
notl
mov
mov
addr16
sub
sarl
and
test
push
scas
andl
pop
aad
jp
pop
pushf
sbb
cmc
je
inc
add
lret
enter
mov
mov
mov
inc
mov
xor
dec
out
sub
mov
cmp
jns
add
cli
cmp
mov
bound
xchg
lcall
xor
or
cmc
mov
adc
into
fsubr
sbb
jns
ljmp
jl
and
push
ja
pop
xchg
sub
inc
decb
stos
jo
iret
mov
clc
or
loope
fcoml
outsl
subl
mov
movsl
cs
out
dec
add
cmp
stc
imul
adc
scas
inc
cmc
jnp
fwait
addr16
bound
mov
xchg
sub
gs
jg
out
negl
push
sbb
roll
mov
popa
pop
sahf
push
in
fidivl
adc
xchg
cmp
pop
push
cmp
dec
mov
das
fwait
mov
add
imul
pop
xchg
inc
test
sbb
inc
cwtl
ds
jmp
xchg
cmpsl
jbe
jl
mov
mov
push
xchg
xchg
jge
or
imul
scas
subb
add
lret
loope
out
add
movsb
xor
int3
pop
mov
jbe
dec
xchg
leave
fwait
xor
xor
or
jecxz
mov
jle
jmp
outsl
outsb
xlat
mov
fldenv
jo
mov
fistl
clc
rclb
stc
fs
cltd
testl
jg
mov
popf
loope
push
push
xchg
movb
jmp
inc
mov
jge
sbb
push
xchg
negb
adc
jb
jno
sbb
fiadds
sub
jbe
iret
outsl
adcb
push
sub
push
in
cwtl
pop
out
dec
les
push
out
push
out
icebp
cli
sub
enter
lahf
mov
dec
sub
ss
gs
xchg
and
push
sub
nop
ret
add
aas
imul
imul
lea
jp
add
xor
and
fisubs
mov
dec
rolb
in
inc
mov
and
xor
fimuls
es
pop
mov
and
pop
add
mov
sub
inc
xchg
imul
icebp
pushf
sub
fldenv
shlb
jecxz
je
stos
pop
push
into
push
out
insb
cmp
pop
lcall
movsl
test
enter
cmp
cltd
push
cmp
repz
adcb
mov
push
push
sbb
jmp
pop
cmp
add
sub
add
loope
jg
mov
outsb
outsb
xchg
ss
xor
add
aaa
mov
cmpsb
ret
xchg
sub
stos
mov
cmpb
in
jmp
sbbb
iret
fs
xchg
fdivs
cmp
mov
jge
iret
loope
adc
dec
into
outsl
rcrl
int3
jmp
sub
and
inc
sub
ret
mov
std
adc
cmp
inc
ja
inc
mov
repz
xor
in
dec
idivb
gs
imul
jb
fnstsw
cld
mov
push
pop
loope
mov
add
push
ret
add
or
fimuls
mov
jg
mov
outsl
js
shrl
sub
sub
fimuls
pop
cmp
jge
jb
xor
es
scas
xlat
sar
xchg
mov
xorl
fcompl
pusha
fiadds
imul
xor
in
sub
inc
test
mov
xchg
rclb
mov
je
cmp
inc
gs
mov
ss
adc
sbb
ret
mov
orb
mov
inc
jle
pop
xchg
xor
mov
pop
sbb
xchg
mov
test
arpl
xlat
aaa
out
mov
sub
call
adc
ja
sbb
sahf
lock
je
icebp
rorb
dec
mov
in
scas
movsb
icebp
andb
push
inc
test
inc
xchg
or
or
lds
jno
add
sti
out
sbb
icebp
jns
xor
mov
push
repz
mov
fs
mov
and
jo
jmp
xchg
movsl
iret
dec
cmpsl
jecxz
xchg
mov
loope
cvtps2pi
xchg
jb
mov
mov
mov
out
sbb
or
es
int
pop
dec
call
fisttpll
push
dec
in
js
lea
into
and
mov
jns
pop
test
out
test
shlb
sti
mov
push
push
or
outsb
inc
fs
dec
pop
add
jl
jmp
out
adc
mov
stos
je
loope
push
stos
and
pushl
push
lret
cmpsb
lea
push
jmp
repnz
xchg
aas
inc
cmc
int3
mov
int3
push
or
mov
nop
mov
lds
and
out
call
add
jbe
fidivl
mov
call
sub
push
adcb
into
jp
aad
pop
divb
fnstcw
lahf
test
mov
push
loop
sbb
mov
cmp
or
pushw
add
outsl
and
mov
rcrl
faddp
gs
jae
and
xor
mov
bnd
pushf
pop
cmp
jg
rorb
mulb
push
stos
jb
mov
adc
push
xchg
call
jae
in
imul
stos
mov
aaa
loope
es
sbb
daa
lret
pop
je
cld
jge
push
scas
add
mov
adc
icebp
in
lea
add
adc
xor
out
outsl
xchg
jne
sub
in
push
dec
sarb
or
or
psubsb
xchg
lcall
xchg
mov
out
xchg
addr16
jb
ret
add
add
lret
repnz
fmuls
pop
or
jp
mov
and
push
sbb
jp
scas
or
inc
roll
es
insb
rorl
push
inc
leave
popf
dec
sar
mov
movb
jge
jo
popf
call
faddp
mov
jbe
push
in
ss
mov
mov
int
cmp
jmp
les
push
jno
sub
inc
cmp
pop
xchg
imul
icebp
sbb
and
push
aas
jmp
subb
scas
outsb
sub
popa
sub
jg
inc
je
outsl
push
popa
fmuls
pop
mov
out
xlat
loopne
scas
pop
inc
mov
lds
je
xchg
pushw
clc
sub
sub
pop
mov
icebp
inc
jl
test
pop
shr
mov
dec
and
rorb
adcl
or
inc
out
cli
sub
iret
stc
pop
cld
das
pushf
test
pmulhw
dec
shlb
sbb
jecxz
adc
sub
jnp
dec
mov
mov
mov
aas
fbld
sub
popf
inc
loopne
sahf
push
mov
jo
push
jns
out
cmc
inc
jno
add
jl
aam
js
sbb
jbe
daa
and
cmp
repnz
lret
test
pop
rolb
dec
faddp
cli
outsl
stos
les
dec
sub
into
mov
mov
cmp
push
push
lsl
mov
pop
outsb
hlt
mov
push
testl
fwait
repnz
sub
outsl
push
mov
ljmp
inc
or
or
in
fisttpl
or
dec
push
mov
cld
nop
imul
pushf
lret
mov
dec
xchg
xor
inc
mov
outsb
bound
sub
add
and
mov
ret
dec
sub
cs
dec
div
or
cld
jg
push
pop
dec
je
test
sub
iret
jp
pop
add
cmp
rcr
loopne
cmp
out
lahf
or
in
mov
das
push
test
pop
push
sbb
stos
les
ja
ljmp
mov
cmp
cwtl
and
xchg
xchg
inc
mov
in
clc
push
dec
sahf
push
idivb
and
incb
call
adc
int3
dec
sti
dec
jp
sub
xor
rcl
xchg
push
aaa
roll
mov
jns
lcall
push
mov
sbb
mov
mov
add
xchg
pop
mov
push
xchg
dec
int3
xor
adc
pushf
scas
cs
mov
mov
mov
enter
add
ret
or
jbe
pop
aas
mov
iret
cmp
cmp
xchg
push
stos
mov
test
lods
cmc
sub
scas
cmp
leave
out
cmp
stos
pop
mov
cld
and
das
and
pop
fsubrp
mov
push
mov
pop
pop
lds
push
or
inc
ljmp
shlb
lods
push
jns
sbb
add
or
push
add
call
jae
mov
iret
pop
jne
test
cwtl
and
repnz
orb
popf
pop
insl
sbb
scas
out
shll
inc
icebp
jecxz
dec
cwtl
movsl
xchg
xchg
jg
cld
pop
add
pop
pop
fstpl
cs
push
cmpsl
mov
lds
push
sub
sub
ss
loopne
mov
adc
movsb
xchg
or
xchg
inc
dec
lds
outsb
outsl
lahf
jl
cmpsb
xlat
xchg
xor
pop
pop
outsb
fidivrs
outsl
insb
adc
mov
loopne
imul
xor
xor
lcall
in
out
cmp
push
ja
adc
ds
or
xchg
add
mov
xchg
enter
lds
out
test
push
insl
aas
mov
jg
pop
push
mov
decl
pavgw
sbb
daa
dec
les
xor
fwait
mov
sub
and
push
mov
jg
sahf
add
sub
adc
popa
sbb
jle
in
cmp
mov
pop
sub
sbb
push
sub
adc
sub
cwtl
or
loope
ljmp
mov
aam
lret
dec
or
test
xchg
pushf
sub
ror
xchg
jp
filds
cmpsb
leave
sahf
fs
dec
sub
add
cmp
fisttpl
mov
dec
out
cmpsb
push
es
pop
sbb
xlat
mov
inc
xor
mov
mov
fdivrs
sub
and
hlt
fnstenv
pusha
lds
push
lods
xchg
xchg
mov
cli
xchg
mov
test
in
xchg
ja
xchg
ret
inc
lret
bound
adc
push
incl
faddl
pop
stos
push
dec
iret
push
stos
out
fstl
dec
xchg
adc
jne
and
push
inc
mov
cld
fimull
mov
xchg
and
dec
ja
ffree
pop
push
mov
inc
dec
xchg
adc
fwait
pop
add
gs
data16
cmpsl
repz
push
subl
test
popf
gs
test
lds
sub
orl
add
push
fimuls
rol
push
pusha
scas
pop
repnz
into
or
lcall
stos
or
pminub
loope
add
and
pop
js
lret
dec
xchg
jo
mov
fisttps
hlt
push
shrb
push
xorb
push
xchg
cmp
xor
pop
xchg
clc
pop
jae
or
mov
cs
pop
test
xor
adc
add
pop
ret
add
rolb
and
push
or
add
insl
adc
imul
lcall
jbe
mov
xchg
adc
sub
dec
jae
sub
or
dec
mov
sbb
loope
xor
addb
icebp
adc
aad
andb
push
cmp
add
dec
ds
sahf
out
pop
add
sub
push
pop
hlt
and
push
cmpsl
sub
push
inc
push
jge
inc
loopne
jno
dec
pop
les
fs
pop
mov
arpl
jnp
cwtl
sub
and
fs
xchg
xchg
dec
pop
stos
and
addr16
mov
int
cmp
test
and
mov
stos
and
test
loopne
xchg
icebp
out
mov
adc
je
dec
add
lock
or
adc
test
mov
loop
ds
mov
lcall
pop
pusha
ret
cmove
stos
inc
out
pop
divl
aad
stos
out
popa
jne
jmp
popa
pop
pusha
jnp
or
xchg
ja
shll
sub
jo
jle
cwtl
fs
int3
mov
mov
pop
mov
xor
decb
jb
mov
jl
arpl
xor
rcrb
xor
sbb
fldenv
or
xor
and
out
repnz
mov
pop
adc
cmc
shll
bound
cmpsl
mov
enter
dec
cmc
pop
mov
sarb
cmpsl
insb
pop
scas
ja
aad
movsb
sub
and
and
sbb
out
xchg
add
dec
sbb
cmc
in
icebp
clc
mov
cld
daa
ja
es
loopne
repz
or
sbb
sub
pop
adc
outsl
std
nop
mov
mov
aad
aas
cmp
mov
pop
push
popa
mov
xchg
mov
lret
aaa
sub
arpl
inc
add
imul
pushf
call
adc
mov
xchg
lods
shrl
lods
jbe
movsl
pop
fcoml
je
dec
inc
or
mov
cmp
mov
cmpsl
pop
add
dec
or
scas
pop
mov
sub
lea
test
jge
orl
sbb
sub
and
jg
fsubr
mov
stos
push
data16
cmp
in
roll
mov
int
jns
clc
dec
mov
stos
mov
sub
jbe
dec
arpl
adc
push
dec
aam
inc
int3
daa
sbb
push
imul
jecxz
test
out
leave
std
jl
pop
gs
xchg
inc
sub
andb
pushf
inc
repz
sub
push
xchg
repz
call
bound
out
roll
sahf
add
mov
stos
jno
leave
adc
add
sub
jp
vmovhpd
mov
mov
push
jns
push
lods
out
pop
inc
adc
int3
std
sub
dec
arpl
stos
dec
adc
repz
pusha
in
pop
sbb
sbbl
dec
mov
dec
mov
dec
out
and
xor
xlat
popa
xor
jo
pop
pop
xchg
lahf
hlt
lods
inc
xchg
ja
rorl
fisttps
shlb
insl
out
daa
test
xor
dec
neg
push
cmpsb
or
pop
sarb
lahf
loopne
jmp
jmp
mov
stos
inc
push
xchg
sub
idiv
xchg
jae
dec
push
clc
sti
icebp
cmc
je
mov
mov
xchg
pop
lahf
arpl
ret
mov
fidivrs
sub
add
mov
cmp
inc
lea
mov
hlt
cmp
insb
pop
sbb
fisubs
mov
pop
sbb
imul
add
mov
lret
rep
cmp
xchg
cmp
pushf
fsubrs
je
movsl
out
mov
pop
xor
cmova
aaa
fdivr
cmp
mov
in
sqrtps
sub
inc
insl
inc
push
pop
test
imull
cmc
jno
lods
jbe
xor
mov
cmp
cmpl
insb
clc
inc
nop
mov
mov
enter
loopne
dec
jno
les
repz
fisubs
lcall
fdiv
jo
jns
mov
incb
shll
into
fildl
fmuls
mov
rcl
cmc
mov
int
mov
add
jp
sbb
es
rorl
std
add
adc
or
xchg
inc
rolb
lret
push
and
arpl
in
xchg
push
out
movsb
lcall
push
xor
cmpsl
adc
repz
std
mov
cmp
rcr
movl
std
mov
pop
jno
hlt
sbb
test
ret
push
sub
mov
sbb
jg
lea
lock
aam
or
jne
ret
fimull
sbb
les
and
aaa
stos
mov
mov
push
mov
dec
ret
std
adc
jno
std
mov
cmp
clc
fdivs
xor
aas
mov
jne
dec
xor
xlat
loop
jl
ret
jno
ljmp
jns
int3
mov
xlat
xor
sub
xchg
decl
xchg
mov
sub
push
mov
sbb
or
lock
or
xchg
setns
pusha
arpl
js
pop
xchg
mov
push
leave
mov
cltd
xchg
mov
mov
daa
jo
or
aaa
inc
push
loope
ret
dec
xchg
jl
jb
fprem1
mov
jb
sbb
push
fdivrl
and
es
pop
mov
out
inc
sti
adc
add
xor
add
dec
out
sub
mov
shrb
and
add
ljmp
add
shl
sbb
or
dec
sahf
xchg
xor
lcall
icebp
je
and
imul
jge
data16
mov
adc
and
mov
adc
jp
cs
test
xor
pop
aad
or
inc
cmpsb
nop
sub
sbb
or
fstl
dec
in
stos
fisttpl
roll
cmp
cwtl
addl
jge
std
xor
fsubl
les
in
or
addr16
push
xor
jno
add
dec
cli
int3
xchg
xchg
mul
js
sbb
inc
dec
sbb
adc
or
add
dec
inc
lea
lcall
dec
test
or
cld
adc
in
bound
cmp
inc
mov
not
jle
in
and
scas
jb
xor
xor
lcall
cmc
ljmp
push
dec
es
xor
cmpsb
fisubl
jp
movsl
push
sarb
pop
dec
insl
inc
pop
popa
sti
add
insb
dec
mov
jae
into
daa
dec
jg
stc
iret
xchg
mov
xchg
shr
xlat
loope
jg
lahf
mov
iret
mov
or
fistps
mov
out
and
int3
jae
push
js
shlb
lods
xlat
xchg
enter
jns
repz
lds
jl
xor
dec
je
or
xchg
mov
jge
adc
mov
add
push
adc
daa
mov
aam
sub
es
sub
into
cmp
je
sub
xchg
or
sbbb
pop
data16
ljmp
jmp
inc
out
mov
mov
cmp
shr
pop
mov
xor
repz
pop
cmp
jg
add
fdivr
test
xorl
xchg
push
lods
inc
sbb
jns
sbb
pushf
out
or
mov
pop
xchg
in
dec
js
lret
sbb
and
inc
push
jecxz
popf
pop
mov
fmuls
ja
add
sub
rcrl
jle
xchg
and
lahf
into
cmp
imul
adc
into
subb
jns
mov
in
decl
dec
outsl
sbb
rcrl
out
pop
sti
mov
mov
int
lods
mov
and
sub
lock
jb
sbb
mov
dec
es
mov
jg
pop
add
jecxz
ljmp
jg
adc
xchg
cmpsb
and
fsub
inc
xchg
dec
mul
rcl
inc
mov
stc
cwtl
xchg
jle
filds
popf
int3
and
pop
stos
or
gs
push
test
inc
jecxz
sub
imul
js
mov
fistpll
lcall
ret
stc
add
mov
sbb
pop
cmc
icebp
jge
sub
jae
aas
bound
adc
or
mov
mov
movb
dec
cld
aam
xorl
aam
jle
bound
je
cmp
bnd
aad
push
add
pop
testb
mov
movsl
repz
pop
inc
mov
frstor
loop
sub
dec
mov
push
gs
push
adc
lret
sbb
stc
mov
and
hlt
test
dec
xchg
xchg
mov
mov
sub
xor
in
xchg
jle,pn
test
dec
adc
mov
ds
stos
mov
pop
out
sbb
adc
sbb
lret
jmp
sbbb
sub
repz
movsb
popa
push
cmpsl
xchg
push
rorb
push
loopne
pop
scas
outsb
dec
xchg
int3
imul
push
xchg
mov
xchg
inc
addr16
sarb
enter
dec
mov
push
xchg
xor
sarb
flds
test
xchg
adc
stos
lret
jbe
into
pop
shll
inc
jg
pop
test
jo
shl
and
mov
mov
movsl
orl
mov
jp
dec
xchg
nop
cmpsl
pop
icebp
dec
pop
dec
push
sbb
push
inc
xor
jmp
inc
sbb
hlt
cmp
pop
call
push
pushf
sub
cmp
or
pop
xchg
mov
hlt
mov
pop
mov
mov
rcll
sahf
mov
fstpt
cmc
sti
shlb
lret
inc
adc
push
rcr
jnp
xorl
xchg
mov
stos
push
pop
imul
out
stc
sti
ljmp
and
inc
add
xor
inc
cltd
push
jnp
fxtract
xor
lea
jae
out
dec
adc
pushf
xor
pop
dec
inc
mov
adc
adc
lods
orps
cmpsl
sub
cs
int3
xchg
nop
sti
and
add
scas
add
inc
call
bound
repz
jmp
movsb
sar
cltd
ret
fcmovbe
cmp
ficoml
jno
jo
xor
adc
or
out
sbb
sub
mov
jmp
and
jae
inc
testl
dec
sub
inc
cmp
sbb
inc
scas
out
jo
add
dec
iret
push
or
pop
cli
scas
mov
imull
or
shlb
pop
int
in
or
bound
inc
pop
add
cmp
lock
add
into
inc
pop
inc
andb
jl
sbb
mov
jb
jne
push
jge
es
inc
sub
xor
test
rcrb
arpl
call
out
movsb
add
xor
add
ljmp
cwtl
fadd
int3
das
fstl
stc
xchg
fmull
sbb
dec
adc
xor
repz
test
mov
push
sbb
loopne
out
aam
sub
stos
adc
xlat
xchg
andl
repnz
dec
or
pop
push
xchg
mov
jne
enter
jmp
xor
cltd
jmp
fcom
scas
push
stos
lock
js
inc
or
mov
fsubr
cld
pop
push
dec
test
sbb
inc
out
stos
fst
pop
cwtl
push
or
inc
add
sahf
cmpb
inc
nop
scas
repnz
fldenv
out
test
mov
dec
rolb
push
rcrb
xchg
scas
loop
or
inc
xchg
mov
fwait
xchg
cmp
ret
imul
xchg
jnp
fiadds
stos
cltd
ret
sahf
cmp
aas
rclb
jbe
sbb
xor
xchg
filds
mov
js
mov
fwait
jno
cmc
cmp
popf
aaa
ja
jmp
adc
and
dec
adc
push
pushf
pop
fxch
ljmp
iret
cmpl
xor
sub
dec
add
int
repz
and
in
cmc
lea
and
xor
sar
mov
inc
dec
jg
cmp
mov
pushf
or
mov
dec
out
mov
or
mov
push
sbb
mov
add
xchg
mov
xor
xchg
push
aad
mov
pop
lea
mov
jo
add
xchg
mov
popw
mov
cwtl
hlt
sbb
imul
xchg
mov
and
fstps
aam
mov
xchg
icebp
xchg
ljmp
out
andb
cli
nop
xlat
cmc
lahf
ljmp
xor
add
sub
loop
jb
push
rolb
and
out
jbe
dec
repz
mov
push
dec
arpl
cmp
bound
push
xor
jbe
adc
cmp
rolb
push
gs
sbb
mov
repz
mov
pop
sti
and
aad
mov
lret
test
divb
popf
in
jmp
mov
mov
popa
aaa
jbe
xchg
xlat
jno
lods
jns
mov
nop
ds
jne
jle
sbb
test
pop
jle
cmpsb
test
sbb
mov
loop
cli
lods
cmp
and
rcr
cmc
dec
imul
xchg
sarl
das
lods
fsubrs
fmul
aas
mov
sub
sbb
clc
adc
push
sub
in
sbbb
xor
push
mov
cmpsl
out
mov
sub
outsb
pop
fcmovbe
sub
jl
and
mov
nop
xor
jnp
sbb
mov
int
popl
sarb
jl
aaa
ja
pop
ja
adc
jmp
pushf
xor
inc
xor
in
jge
call
jge
or
jns
or
sti
add
xchg
fs
sbbl
inc
lods
in
outsb
test
gs
mov
xchg
aas
adc
leave
std
mov
cmp
in
gs
in
mov
sbb
out
lods
lea
adc
mov
mov
mov
mov
or
out
roll
rorb
push
mov
lret
push
movsl
jg
jge
sub
push
outsl
test
mov
push
jl
fstpt
xor
pop
mov
mov
xor
pushf
out
dec
es
xor
arpl
nopl
fdivp
cs
push
cmpsl
adc
mov
adc
cmpsl
adc
enter
call
mov
ret
cltd
mov
mov
and
inc
stos
pop
lea
sbbb
ljmp
pop
sbb
dec
cltd
icebp
adc
xor
sub
cmp
pusha
xor
sub
pop
fisubl
dec
push
jne
jmp
lahf
mov
inc
mov
mov
rclb
add
ja
loopne
xor
sub
inc
fcompl
lret
xor
xor
sub
pcmpeqw
in
sub
fbstp
int
mov
stos
out
imul
mov
movsl
sbb
xor
jp
das
mov
loop
jg
adc
je
leave
xor
je
shrb
mov
adc
ror
pop
mov
into
call
jns
loop
sbb
cmpl
adc
js
pop
fcompp
add
pop
jns
ss
xor
inc
shlb
iret
icebp
mulb
xchg
gs
clc
and
cli
sbb
sbb
arpl
out
jg
dec
jo
and
dec
shll
stos
xchg
fisubl
stos
or
jb
xchg
aaa
arpl
imul
and
pusha
jns
jne
pop
into
int
xchg
rcrb
add
ds
add
cmp
sub
xchg
fdivrs
push
xor
push
rcrl
cmp
loop
jle
icebp
inc
out
pop
dec
fs
movsb
rcl
sbb
movb
outsb
lcall
lcall
mov
jmp
ficoml
mov
and
enter
sbb
lret
repnz
jg
int3
sub
jmp
inc
ficoms
sub
test
jne
dec
push
in
mov
or
mov
ret
ds
mov
cmp
jmp
bnd
sbb
mov
rolb
icebp
movsb
jns
dec
hlt
iret
incl
adc
imul
dec
test
loope
jg
mull
ja
pop
dec
fmul
out
inc
xchg
dec
pusha
pop
jl
out
adc
push
sbb
pop
push
aaa
xor
adc
jb
adc
test
jp
scas
dec
push
pop
cmp
inc
fsubrs
push
mov
roll
test
or
imull
popa
jl
sbb
subb
imul
dec
shl
push
rcr
pop
popf
lcall
dec
jo
jno
imul
out
divl
lock
idivl
xchg
fbld
adc
xor
pop
loope
js
or
dec
and
or
sahf
push
jnp
mov
stos
mov
mov
lcall
ljmp
sub
div
inc
pop
dec
loop
test
mov
xor
push
jno
xor
sub
loop
addl
inc
push
sub
pop
adc
xor
xchg
movsl
ja
jo
inc
int
or
xchg
testb
in
dec
mov
lock
popa
mull
dec
jle
sarl
push
bound
mov
xor
dec
fldenv
pop
push
loope
cs
or
mov
cmp
sbb
dec
push
push
call
inc
enter
mov
jbe
je
out
in
jne
mov
dec
flds
lret
cld
std
in
push
rcrl
leave
aas
pop
pop
les
mov
mov
scas
inc
imul
inc
pop
insb
cmpsl
push
lods
or
sub
ret
jns
enter
lahf
mov
test
sahf
xchg
add
sub
loope
cltd
out
std
mov
jb
rcl
inc
scas
enter
push
jno
jl
loopne
out
aam
pusha
inc
xor
mov
add
adc
scas
aam
mov
mov
fmul
lahf
push
ds
jmp
fs
lret
sub
and
in
enter
filds
je
out
int3
sbb
std
repz
adcl
insb
imull
dec
mov
lds
fwait
fwait
gs
ds
adc
mov
inc
adc
lock
jmp
in
xor
cli
cld
sti
test
jge
mov
shlb
pop
pop
inc
add
repnz
lods
sub
les
imulb
test
mov
mov
loopne
mov
in
ljmp
loopne
adc
out
out
push
cmp
test
ss
mov
lods
push
pop
sub
and
repnz
cli
icebp
pushf
nop
sbb
arpl
and
pop
inc
adc
daa
ljmp
sbb
shlb
dec
fidivl
jecxz
push
scas
shlb
test
out
jae
push
dec
shrl
inc
push
fwait
dec
cmp
adcl
lret
pusha
jno
pop
or
xor
fs
sub
out
sbb
std
add
and
in
or
aam
jns
dec
and
gs
decl
enter
testb
insl
push
rolb
push
fstpl
mov
mov
push
mov
adcl
imulb
pop
stos
mov
rolb
mov
loope
inc
in
aaa
mov
imul
andb
cmp
dec
movsl
sbb
mov
dec
rcrb
mov
cmp
lods
out
shlb
popa
push
lea
adc
cmp
cwtl
fistps
lods
push
in
in
out
mov
pop
push
jo
out
inc
adc
int
or
test
pop
mov
add
mov
ja
pop
lret
iret
fistpll
add
jecxz
out
loopne
into
ret
xor
cli
lods
repz
push
ret
lahf
js
leave
dec
outsl
dec
addr16
sbb
adc
mov
inc
nop
lret
jmp
dec
cmp
filds
in
dec
xchg
mov
imul
out
ficoms
in
xchg
pop
and
inc
xchg
adc
into
or
push
dec
ja
sbbb
outsl
fidivrl
iret
pop
lods
bound
outsb
sbb
and
call
mov
sbb
fbld
sbb
sbb
mov
ds
xchg
loopne
mov
lret
push
jbe
pop
gs
pop
and
adc
aaa
out
imul
clc
push
js
popf
int3
lea
loopne
shr
adc
ss
hlt
sub
inc
outsl
repz
loope
lret
pop
inc
xchg
rcrb
scas
iret
sub
int
stos
cs
daa
mov
adc
xchg
movsl
rcr
xor
cmp
int3
out
xchg
jmp
sub
push
inc
pop
fs
mov
xor
push
loopne
sbb
rorl
mov
cmp
imul
nop
xchg
outsl
inc
int
lds
movsl
push
dec
pop
adc
shll
fistpll
mov
fsubrl
cs
cmc
fdivrl
sbb
push
add
stc
ret
lds
nop
sti
popf
xor
jo
mov
mov
mov
cli
dec
adc
push
jmp
mov
test
in
loope
outsl
scas
lahf
inc
aas
mov
ror
mov
xchg
in
jno
lock
inc
pop
mov
cwtl
jmp
mov
xchg
daa
test
push
ss
mov
dec
mov
inc
sbb
mov
jg
pop
dec
jae
adcl
and
inc
popa
pop
lods
insl
pop
gs
aas
xor
insl
lret
enter
xchg
xor
push
adcl
dec
inc
ret
cmpsl
pop
xlat
mov
fstl
mov
das
stc
fistl
stc
addr16
mov
dec
adc
call
es
xor
fstps
jle
pushf
jmp
cli
leave
movsb
pop
inc
pop
sub
xor
cltd
ljmp
fwait
dec
insl
cli
fwait
mov
dec
test
xchg
add
nop
or
pushf
lods
jg
inc
subl
push
js
jle
pop
fwait
add
in
aam
push
setg
daa
xor
jae
clc
add
xor
sahf
iret
cs
jl
push
and
cmp
fwait
push
rorb
pushf
mov
adc
sub
fimull
aaa
ss
dec
xor
add
and
push
xor
sbb
push
sub
fidivl
push
cmpsb
jge
aas
add
mov
cmp
push
gs
xchg
mov
jle
pop
mov
and
add
adc
xor
cmpsb
imul
rcll
scas
and
stos
out
outsl
ljmp
lahf
dec
inc
sub
test
adc
inc
push
out
rcr
push
mov
xchg
roll
dec
mov
mov
into
push
dec
dec
jg
inc
in
jns
xchg
cmp
int
repz
ljmp
sub
mov
aam
dec
ret
test
pop
add
in
pusha
lahf
cmp
icebp
addr16
jmp
fadds
jne
adc
inc
cmp
mov
add
mov
movsl
sbb
xor
push
cmc
or
push
fmul
jns
push
pop
lahf
sub
mov
shl
add
enter
cld
jge
test
bound
cmp
sbb
testl
sub
test
mov
cmp
pushf
das
ss
fldcw
push
cmp
mov
ds
cwtl
xchg
sub
scas
add
lcall
pop
addr16
rclb
jp
dec
jo
es
push
sbb
iret
sbb
repnz
hlt
push
pop
mov
cmpb
imul
add
and
negb
or
jbe
dec
adc
dec
add
cmc
jbe
xchg
add
push
iret
shr
and
sub
pop
aad
dec
sub
daa
xor
jg
push
xchg
push
mov
mov
push
jne
lcall
pop
out
pop
jne
jl
imul
loop
test
xchg
lcall
jo
mov
sub
push
inc
pop
mov
fistps
push
push
push
cmc
mov
js
mov
mov
insb
mov
lock
mov
jle
icebp
test
sbb
dec
in
fcmovne
mov
jmp
hlt
push
lods
rol
pushl
insb
jle
push
or
inc
fldt
out
xor
jmp
xchg
lahf
fwait
ss
mov
lahf
jnp
fwait
xor
out
cmpsb
mov
leave
mov
das
push
shlb
inc
push
repnz
rorl
push
sar
pushf
lds
enter
sbb
jle
xchg
mov
inc
lods
shll
jno
shlb
jg
loopne
push
mov
and
ljmp
fdivs
push
push
icebp
nop
push
pop
lds
push
push
cld
out
iret
int
adc
xchg
ret
cltd
daa
cs
inc
jnp
pop
push
insb
mov
ds
outsb
cmp
jmp
out
hlt
sub
mov
xchg
sti
or
test
out
repnz
mov
and
lea
add
sbb
in
int3
lock
outsl
jmp
insl
insb
sub
sub
jns
jecxz
dec
jecxz
mov
test
and
add
test
iret
outsl
push
fwait
dec
xchg
inc
inc
shrl
scas
gs
xchg
aam
adc
inc
xchg
popa
add
fs
and
jae
shrl
out
mov
push
mov
outsb
lahf
jg
ss
ret
cs
adc
push
movsb
push
adcl
adc
in
xor
inc
repnz
push
jns
ret
xlat
mov
sbbl
sbb
repnz
sbbl
enter
push
ss
stos
and
jnp
fs
shlb
push
cmpsb
adc
repz
add
mov
xlat
sbb
loope
jns
adc
ror
mov
insb
cmp
adc
or
inc
or
stos
xor
xchg
xor
mov
pushf
rcll
push
fcoms
cli
inc
sub
push
inc
test
add
rol
stos
out
in
dec
sti
into
cmc
jmp
push
sarl
push
jge
sub
mov
ss
sbb
sarb
fdivrl
cmpsl
sub
xchg
jecxz
jae
dec
roll
mov
ja
icebp
sbb
cltd
imul
mov
loope
sub
sarb
sti
lods
sti
test
leave
ljmp
test
push
shll
mov
mov
shrb
mov
not
jbe
insl
add
or
fstpt
fists
sbbb
push
in
xchg
dec
jb
inc
cli
fmul
push
mov
inc
push
call
xchg
inc
jno
lock
pop
mov
or
pop
rcrb
dec
lahf
ficompl
testl
add
int3
mov
and
jbe
sbb
das
clc
hlt
nop
jg
add
jbe
or
and
inc
cld
xchg
lods
daa
mov
lods
pushf
outsb
fdivr
aad
iret
int3
int3
popa
sub
cmp
inc
test
or
fbld
sbb
cmp
jb
pop
hlt
hlt
and
jecxz
lahf
movsl
insb
mov
les
push
dec
mov
sbb
ret
sbb
in
mov
inc
out
push
nop
push
or
jge
bound
jbe
ja
data16
add
pextrw
pushf
inc
and
ret
and
rcrb
sbb
std
jns
sbb
cmpsl
lret
ljmp
push
mov
in
das
or
loop
lock
adc
mov
xchg
fdivs
inc
push
jmp
xchg
push
or
ret
ss
sbb
movsb
sarl
movsb
cmpsb
lret
and
aad
pop
push
pop
fwait
bound
fistpll
aad
pop
cmp
out
or
xchg
and
adc
xchg
scas
lods
and
mov
sbb
lcall
cmp
pop
adc
push
push
les
xor
inc
lret
je
cmp
les
jg
inc
enter
xor
leave
mov
fs
out
sub
lahf
fnstcw
and
sub
jno
mov
sbb
mov
add
jecxz
pop
pop
aaa
or
bound
xor
sub
pop
and
pop
sbb
aaa
mov
fcoml
and
push
and
test
sub
adc
movsb
jecxz
xchg
push
dec
fstps
push
lret
pop
push
ljmp
jbe
jae
pop
dec
stos
adc
and
nop
mov
sub
xchg
clc
jl
cmp
or
imul
lcall
mov
or
cmp
pop
mov
push
add
ret
mov
cmp
icebp
incb
not
pusha
aad
xor
xchg
xlat
or
lods
pop
push
sbb
int
push
push
aam
and
sub
mov
sbbb
cmc
dec
pop
push
mov
mov
sub
cmp
mov
stc
fdivr
mov
fcomps
mov
test
dec
scas
lahf
sbbb
xor
xchg
cmpsb
mov
cs
dec
ds
loope
inc
xor
subb
addb
dec
in
fwait
cmp
dec
jno
jp
ljmp
cmc
jp
push
lret
test
pop
jecxz
sti
imull
add
hlt
inc
arpl
or
mov
mov
cmc
fstpt
xchg
or
and
mov
cs
lock
cmp
jmp
jmp
jecxz
adc
jno
mov
test
xchg
filds
dec
lds
ja
cwtl
out
scas
inc
clc
push
les
inc
cld
lret
or
repz
scas
adc
std
pop
push
mov
and
fiaddl
jecxz
int3
xor
dec
aad
lret
sub
jg
ficomps
mov
movsl
add
or
aad
lods
test
in
insb
xchg
sub
outsb
mov
outsl
xor
shll
push
std
xchg
ljmp
test
and
jne
js
sub
addl
push
pop
xchg
gs
jp
dec
mov
hlt
inc
fildl
and
inc
and
in
dec
push
in
jg
sbb
out
loop
cmp
sub
dec
jo
adc
repnz
push
clc
mov
cli
xor
xor
js
mov
mov
cmpsb
dec
mov
dec
fldl
neg
mov
add
js
sbb
xor
es
outsl
jnp
movsb
sub
aad
pop
loopne
jbe
std
dec
jnp
addl
xor
sahf
push
sub
mov
mov
cmp
aam
sti
repz
inc
mov
pop
jnp
pusha
arpl
fabs
dec
mov
adc
aas
pop
icebp
popa
pop
dec
pop
ja
cs
cld
cld
aam
lods
mov
stos
jg
fucom
das
fnstcw
int
xchg
aam
dec
lcall
imul
pop
xchg
loope
adc
pop
cmp
push
dec
and
mov
jo
cli
inc
inc
mov
icebp
lock
jb
in
jns
inc
movsb
mov
invd
leave
jno
mov
mov
outsb
js
roll
push
iret
jg
sbb
icebp
in
fldenv
mov
mov
in
adc
scas
push
popf
mov
mov
mov
xor
jns
push
or
mov
jno
mov
or
test
es
pop
repnz
jno
loopne
sbb
mov
add
test
out
add
push
mov
cmp
mul
popa
inc
imul
cmc
orb
xor
decb
dec
push
cltd
subb
jl
movsb
fcompl
roll
faddl
dec
xlat
out
push
cmpsb
mov
fcoms
add
fldcw
dec
xor
sahf
cmp
jecxz
xchg
adc
mov
jle
imul
mov
or
in
jne
mov
mov
shrl
cmp
rclb
pop
cmp
jno
ds
fnstenv
pop
and
fildl
sbb
xchg
popf
das
add
cwtl
popf
pop
mov
jnp
imul
sub
push
push
pop
adcb
push
xchg
jnp
shll
sub
in
int3
mov
clc
jmp
ret
adc
movsb
xchg
jl
jae
popa
push
gs
fistpl
dec
fwait
jo
mov
lods
xor
pop
mov
jge
mov
pop
pop
pop
jae
xchg
popf
notl
aas
xor
repz
int
addl
aad
inc
xchg
cwtl
lods
je
and
iret
sub
aad
sbb
adc
bound
clc
insl
pop
in
mov
lock
mov
pop
mov
sub
sbb
pop
cmp
leave
loop
int
xchg
rcrl
stos
lock
stos
das
in
andl
shl
xchg
es
mov
inc
inc
outsb
sub
test
jp
xchg
mov
filds
das
jl
mov
aam
enter
outsl
dec
pop
movsb
fwait
mov
test
cmpsb
adc
dec
aam
mov
bound
mov
rcl
mov
cmp
fidivl
fcoms
aaa
mov
js
mov
jns
sbb
jo
cmpsl
sahf
loopne
mov
pushf
mov
add
mov
insl
and
dec
xchg
jmp
cmp
int
dec
popa
inc
and
add
out
cld
movsb
scas
mov
mov
ds
popa
out
popa
outsb
jbe
dec
xor
cmpsl
pusha
jmp
popf
push
pop
lods
dec
cmp
mov
loopne
in
int
lret
push
jmp
xor
mov
daa
sub
cmp
cmp
mov
cmp
xchg
int3
outsl
add
imul
test
jp
nop
test
les
shll
cltd
test
pop
js
cmp
lds
jle
popa
loope
jbe
push
and
sbb
es
mov
mov
fxch
pop
xchg
push
fistl
push
mov
sbb
insl
jle
sub
cmpsb
cmpsb
jmp
shll
adc
loopne
or
aad
add
nop
sarl
add
adc
test
scas
push
add
mov
cmpsl
cmp
fs
push
pop
sbb
and
mov
push
inc
pop
leave
movl
sub
repz
xchg
ds
push
pop
inc
jl
rcll
cli
sbb
xorb
mov
test
jnp
fnstcw
xlat
mov
sbb
and
or
mov
or
cltd
aad
js
movsb
aam
cmp
and
jbe
xor
test
daa
dec
inc
jnp
mov
ficoms
movl
int3
pop
mov
jge
pop
push
or
sbb
adc
ja
xor
inc
and
cmc
cmp
pusha
mov
cltd
rorb
inc
cmpb
scas
pop
cmc
lods
mov
mov
sti
push
shlb
aaa
sub
unpcklps
fistl
xchg
mov
and
fs
in
inc
cmpsb
idiv
pop
into
xchg
xor
adc
addr16
mov
adc
pop
rolb
popa
dec
scas
test
ds
into
adc
add
adc
fsub
adc
jo
xchg
adc
and
xchg
adc
lock
push
push
mov
and
jae
mov
mov
insl
pop
insb
shl
add
mov
jecxz
repz
pop
adc
or
out
sub
xchg
sbb
push
enter
pop
out
ror
pop
cmpsb
xchg
data16
arpl
inc
fsubs
out
mov
pop
cli
mov
cli
push
mov
lods
sub
mov
bound
popf
pop
jo
jo
sub
push
push
xor
jle
in
addr16
leave
sbb
imul
popf
xchg
sbb
lahf
jg
mov
roll
ficompl
and
jmp
fcoml
iret
add
push
int3
ljmp
cld
xor
inc
sti
xor
mov
add
jl
jns
cmp
int
das
xchg
scas
jmp
xchg
sub
jmp
popa
push
les
mov
mov
dec
pop
ret
mov
test
cmp
ret
dec
adc
cli
out
jp
or
xchg
negl
xchg
gs
mov
lods
fimull
lret
inc
lds
sbb
xchg
cmp
jns
insb
scas
xchg
mov
xchg
cmp
mov
push
mov
fadd
mov
dec
out
mov
pop
jb
add
test
pop
loope
sbb
pop
dec
sarl
or
add
popa
lcall
or
cmp
pop
out
pusha
mov
jp
in
sbb
xchg
sbb
jmp
push
dec
push
mov
adc
lock
push
ficomps
pop
mov
cmpsl
orl
jno
jbe
xchg
cmp
gs
sti
add
ljmp
pop
add
xchg
xchg
cmp
mov
es
repnz
fisubs
xchg
cmpb
dec
leave
dec
sub
or
imul
cmpsl
push
xor
out
xor
jge
xor
and
scas
loop
ret
jge
pop
lea
or
aaa
and
pop
cli
xchg
jns
data16
ror
mov
rcl
popf
or
in
mov
clc
jne
sbbl
pop
sbb
insb
push
cs
push
rcll
mov
push
jmp
and
cmc
or
xor
out
mov
cwtl
adc
mov
xlat
sbb
adc
lock
leave
mov
jbe
inc
call
je
test
lcall
js
push
mov
int3
jb
stc
dec
and
stos
add
test
sub
push
icebp
mov
sbb
mov
push
imul
xor
mov
xor
mov
cld
aas
pushf
es
lds
test
dec
xchg
cmp
call
in
std
xchg
lcall
insb
fcmovnu
mov
leave
flds
cmp
dec
mov
or
scas
loop
jo
and
sub
rcl
xchg
clc
cwtl
cmpsb
int3
inc
xor
ja
ret
es
into
cmp
pop
ss
pop
stos
lret
lcall
sub
bound
sbb
out
outsb
mov
inc
cmp
fisubs
mov
jbe
jne
dec
push
sahf
pop
jp
sub
out
and
dec
imul
cld
pop
shrl
fdivl
repnz
xor
data16
pop
sbbl
push
test
les
push
imul
dec
lock
jb
xor
aam
mov
iret
adc
xor
pop
mov
push
mov
in
js
sbb
jmp
cmp
push
sub
mov
ljmp
js
loop
jbe
cmp
inc
push
add
roll
mov
mov
xchg
mov
ds
pop
fistl
jp
pop
mov
cmp
enter
push
enter
ds
cmpsl
daa
jo
lds
sub
xor
dec
out
fsubr
sbb
nop
cmpb
out
imul
mov
dec
mov
sti
bound
fildl
in
adc
jge
mov
or
inc
mov
push
int
ffreep
sub
out
insb
xor
mov
cmp
movsb
jnp
sub
negl
test
mov
jp
mov
dec
pop
jl
push
xorl
or
cmp
mov
gs
jo
jno
push
xor
not
call
sti
push
inc
mov
push
js
sub
cmc
xchg
mov
data16
aad
inc
movsb
push
pop
ficompl
call
xor
and
stos
jno
inc
mov
pop
div
sub
icebp
aas
das
jge
nop
jno
mov
insb
dec
mov
sahf
cmp
xchg
lods
insl
mov
add
loop
cmp
push
jns
push
adc
sub
jbe
mov
push
pop
test
cmpsl
dec
inc
mov
notl
imul
mov
divb
cli
xchg
jo
in
je
cmp
lock
cmp
mov
mov
pushf
aas
stos
mov
shll
iretw
out
bound
or
jp
lret
enter
jmp
out
or
sahf
loop
sbb
stc
xor
mov
cwtl
sub
mov
pop
xor
jno
cmp
or
out
arpl
push
dec
add
mov
inc
fbld
sub
jno
push
loope
and
push
add
jp
cmpsb
xor
sarb
cmpsb
iret
add
sub
jno
and
lock
test
cld
lods
inc
add
outsl
sti
add
xor
scas
sahf
xor
pop
mov
cmp
push
cmp
xlat
or
mov
sbb
xlat
movsb
adc
mov
movsb
not
sbb
or
fsubrl
jbe
ficoms
and
or
fcompl
mov
xor
fs
pop
aad
sub
shrb
in
xchg
pop
out
inc
add
pushf
hlt
mov
mov
aad
jecxz
push
sub
std
movsl
inc
fsts
enter
adc
adc
jge
pop
sub
shl
push
out
xchg
lret
mov
jle
and
pop
out
dec
mov
ljmp
pop
scas
lret
or
rcrl
sbb
dec
gs
or
xchg
repz
and
and
mov
enter
es
jmp
fildl
cmp
stos
push
inc
and
lcall
incl
mov
ljmp
imul
imul
sbb
lret
outsb
adc
sub
fwait
push
jp
mov
in
dec
pop
pop
repz
das
lss
sub
mov
mov
cmpsl
test
adc
inc
push
in
shl
xchg
cmpl
dec
inc
xchg
mov
js
out
mov
jl
dec
mov
das
push
xor
pop
out
mov
inc
pop
jmp
insb
mov
mov
adc
add
stos
sub
sbb
xor
push
lea
xchg
in
pusha
ret
jmp
pop
and
out
lahf
nop
sar
add
mov
es
cltd
mov
test
gs
fiadds
mov
lcall
jno
mov
jge
push
fisttpll
inc
aam
push
call
mov
push
loopne
push
fimull
xchg
js
clc
xchg
aas
inc
adc
test
rolb
inc
push
icebp
nop
movsl
popa
xchg
mov
pop
xlat
data16
push
std
pop
cs
mov
lcall
sahf
cmpsl
dec
arpl
add
xchg
and
aad
mov
jg
mov
ss
mov
pop
push
mov
sbb
out
mov
bound
xor
cmp
mov
out
pop
loop
out
mov
cmpl
and
sub
jno
loope
add
mov
add
cwtl
and
cmp
xor
shrb
es
loope
adc
imul
mov
fs
fbstp
adc
movsl
shll
pop
cld
fmuls
lea
pop
sbb
movsb
ret
mov
out
sub
outsb
out
xchg
enter
out
pop
xchg
pushf
repz
lcall
pop
cmpsl
pop
icebp
mov
add
loopne
scas
xor
or
xchg
lret
imul
das
sbb
jmp
jge
fcompl
or
icebp
repnz
lret
xchg
jns
stc
cmp
xlat
dec
jbe
pop
inc
xor
inc
aaa
sub
mov
adc
push
jge
mov
or
mov
mov
inc
mov
pop
aad
addl
sub
shlb
int3
sahf
mov
sbb
cmpsb
push
dec
inc
push
dec
push
aad
jg
pop
out
add
scas
js
mov
adc
js
repz
testl
sarl
dec
xlat
cli
in
jo
hlt
mov
sbb
rcrl
lcall
pop
mov
xor
push
std
cld
fcmovbe
adc
pop
inc
and
xor
fs
mov
ja
xor
lret
mov
ss
add
cmpsl
fcomps
stc
movsb
push
movsb
insb
imul
imul
lods
fcmovnbe
iret
fidivrl
mov
call
dec
fs
jle
ljmp
enter
lret
push
rorl
or
loop
scas
jnp
fstpt
and
inc
gs
stc
or
sti
mov
shrb
and
ret
movsl
out
xchg
cmc
ja
int3
mov
stos
stc
push
sbb
push
push
xor
imull
sarl
mov
aas
dec
std
pop
xor
pop
pop
inc
fsubl
sub
ds
ror
daa
pop
mov
mov
mov
add
mov
pusha
sub
jmp
push
push
and
sbb
fisubl
arpl
daa
lcall
lahf
mov
mul
sbb
or
insl
sarl
out
movsb
cs
xchg
and
mov
pop
xchg
leave
jmp
sbb
pop
les
jae
popa
jge
and
cmp
xor
cmp
cmp
cld
lret
jmp
out
mov
xchg
dec
jo
push
popf
cmp
pop
inc
mov
pop
and
inc
rcrb
sbb
and
test
inc
movb
lcall
daa
fstpl
lcall
test
jmp
xchg
xchg
mov
out
adc
test
repnz
add
pop
and
inc
or
call
rorl
adc
stos
insb
nop
cmp
iret
mov
or
jg
mov
cmp
hlt
stos
sbb
outsb
insl
push
adc
jl
mov
shll
jmp
add
outsb
dec
popf
fidivs
cmp
into
push
push
repnz
call
fcomip
stos
or
mov
pop
xchg
es
cld
sub
out
or
daa
cmp
sub
sbb
in
add
repnz
jbe
dec
mov
add
xchg
stos
inc
and
pushw
push
test
jns
call
bswap
dec
imul
pop
add
sub
mov
sbb
movsl
xor
testl
jae
and
push
push
insl
shlb
or
ret
ds
sti
decb
mov
and
push
sbbl
popf
test
scas
mov
push
insb
or
adc
lret
fadds
popa
ds
addr16
cs
mov
les
in
aad
push
arpl
or
adc
loope
mov
inc
cmpsl
jp
dec
lock
test
and
lock
addl
int
pop
je
ltr
jle
lock
fiadds
pop
arpl
test
adc
sahf
sbb
clc
ds
fmul
sub
jno
sbb
xor
stos
cmp
push
rclb
cmp
gs
mov
leave
icebp
adc
shl
jo
cmp
clc
mov
aam
add
cmp
push
dec
leave
mov
das
mov
jne
andnps
in
shr
dec
sti
mov
mov
outsb
orb
add
pop
fwait
lcall
mov
loope
add
pop
and
jns
pop
insb
cwtl
xor
pop
shrl
repz
sub
pop
lds
les
les
sub
repz
push
mov
loope
mov
fnstsw
xchg
cmpsl
lea
xor
pop
jb
lcall
sub
lds
push
xchg
cmpsb
iret
fidivs
pop
pop
rcl
mov
movsl
mov
mov
aam
test
push
cmp
fldl
push
cmc
cmp
fistpll
dec
pushl
mov
jbe
push
inc
out
sbb
add
loop
jns
es
lods
jmp
int
xchg
ret
xor
xchg
shlb
dec
les
mulb
mov
xor
movl
in
rol
clc
xor
push
jp
sub
xchg
add
xchg
mov
rorl
adc
inc
mov
cmp
cmp
addr16
test
cmpsl
push
cmpsl
jbe
scas
and
gs
lahf
xor
mov
inc
les
mov
xchg
mov
adc
ds
lods
dec
cwtl
ljmp
xor
lahf
dec
xchg
pop
xchg
outsl
mov
stc
adc
xchg
outsb
mov
fldl
std
les
cmc
iret
hlt
test
push
loopne
jge
ret
xchg
push
mov
inc
daa
xchg
cld
cmp
rolb
jg
add
inc
dec
cld
lret
std
repnz
add
jne
jns
adc
hlt
cld
xor
xor
sub
ss
push
leave
xchg
loop
jecxz
out
jmp
mov
jae
enter
cmp
jecxz
lods
imul
xlat
outsl
mov
jae
pushf
inc
ret
mov
mov
and
dec
imul
stc
jb
out
lods
aaa
repz
and
popa
daa
lret
jnp
xor
push
fninit
sub
sti
dec
pop
loopne
int
xor
shll
cmp
aas
add
push
inc
jns
pop
es
sarl
lods
xlat
xchg
inc
pusha
mov
in
popf
mov
bound
sbb
pop
lods
mov
and
xchg
and
rcll
subb
aas
daa
ret
out
lds
push
dec
iret
push
push
pop
test
push
cli
add
add
out
inc
fs
add
clc
adcb
cmp
lock
nop
push
call
fidivl
or
mov
lahf
push
fwait
aad
mov
xlat
cmp
mov
jle
nop
pop
push
cmp
js
cmp
jo
add
or
imul
xchg
dec
mov
sbb
add
xchg
les
xor
das
xchg
inc
jbe
lock
insl
gs
mov
in
xchg
push
out
mov
ja
pop
jmp
xchg
or
loop
jg
xchg
gs
test
xchg
loope
insl
mov
fadds
cmp
add
mov
faddl
aam
pusha
or
jmp
aad
xchg
adc
xor
inc
fbld
int
adc
lods
mov
fs
js
cwtl
es
mov
sarb
mov
repnz
std
add
sub
sbb
dec
iret
xor
repz
cmp
cld
cmp
and
in
inc
loop
shlb
dec
std
fs
loopne
inc
int
pushl
into
cwtl
push
cmp
jbe
lods
and
outsb
mov
cli
sub
push
pushaw
test
sbb
testl
mov
pop
pop
popf
popa
out
iret
jo
pop
push
add
stos
lret
sub
mov
pop
outsb
mov
add
hlt
test
add
daa
dec
ret
in
jo
xchg
mov
xacquire
add
ljmp
out
outsl
xor
inc
sbb
int
xchg
or
sub
andb
arpl
jns
outsb
fdivrs
and
rdmsr
fcomp
cmp
idivb
add
scas
jnp
lock
mov
add
aad
inc
add
enter
jno
aam
pop
leave
scas
inc
cmpsb
movsl
into
in
aaa
push
mov
jnp
imul
out
mov
in
fstl
imul
repz
mov
cmc
add
sbb
push
cmp
in
pop
and
hlt
pop
mov
or
pop
mov
xor
push
sbb
jmp
outsl
sbb
clc
int3
adc
out
ja
es
gs
cmp
xchg
lahf
popl
push
sub
mov
xor
fdivl
fdivs
stos
rcrb
test
sub
lods
mov
loope
and
cmp
loopne
push
mov
pop
fsubrl
or
cli
pop
loop
and
fsubrl
add
jg
add
ja
mov
xchg
in
push
cmp
add
and
cmpsb
xchg
or
sub
jns
sbb
out
sbb
xchg
fs
dec
pop
jmp
lods
fstpl
iret
fsubrp
inc
mov
xchg
rorb
jle
xchg
inc
stos
pop
jne
rclb
stos
adc
arpl
ja
fisubs
mov
lret
js
jp
stos
sbb
mov
add
cs
aaa
mov
mov
xchg
ds
jbe
imul
inc
dec
loop
cs
ss
cmp
xor
movsb
lcall
pop
jbe
dec
pop
lahf
mov
les
lret
cmp
cmpsl
outsb
scas
dec
push
pop
pop
cmp
push
fistps
pusha
lcall
fistps
sub
popf
and
xchg
mov
leave
adc
fidivrs
mov
mov
mov
add
inc
cmc
loopne
mov
fcomps
jo
fwait
xor
jecxz
push
lahf
daa
or
push
into
pop
test
iret
mov
daa
or
push
sbb
jno
hlt
movsl
xor
out
es
mov
inc
push
xchg
push
xchg
mov
int
xor
stos
lds
cmpsb
mov
mov
push
movsl
nop
loopne
inc
popf
sub
mov
scas
cld
in
mov
adc
mov
add
adc
dec
mov
xchg
ret
mov
push
bound
prefetch
sbb
push
mov
mov
or
fists
dec
jg
enter
and
fsts
or
outsl
sbb
mov
sahf
ljmp
xor
cmp
cmp
pop
jo
xchg
jae
shrb
test
stos
inc
mov
popf
dec
mov
movsl
mov
ss
cltd
mov
cs
stos
mov
stos
sbb
and
sahf
pop
sahf
mov
mov
enter
je
addr16
push
jecxz
in
push
xchg
mov
xor
adc
jl
cmp
xchg
aad
ljmp
testl
or
mov
xlat
dec
stos
sub
and
cmpsl
out
add
mov
mov
mov
xor
pop
dec
das
and
shr
xchg
das
inc
ret
mov
clc
clc
jb
xor
sbb
sub
xor
sub
lea
movsb
lea
mov
adc
sub
push
js
out
mov
jge
xor
mov
scas
xor
orb
movsl
dec
fsubr
js
pop
mov
xlat
clc
jnp
adc
dec
xor
repnz
into
dec
mov
enter
je
clc
aad
stc
mov
mov
mov
jmp
adc
mov
or
pop
sbb
fisttps
js
or
loope
outsl
stc
jb
inc
pusha
sbb
movsl
jnp
stos
add
cmpl
xor
pop
mov
add
clc
dec
shl
je
movsl
nop
imul
mov
lea
inc
cmpsb
enter
push
mov
int3
sub
mov
ret
mov
dec
insb
mov
in
cmp
pop
xor
xor
dec
mov
icebp
pop
push
daa
pop
mov
pushf
add
xlat
fisttps
int
repz
push
or
push
xchg
pop
jae
mov
outsb
pusha
mov
mov
repnz
gs
sbbb
clc
jbe
jbe
fistpll
mov
inc
repnz
mov
int
adc
mov
jns
cli
mov
or
mul
in
mov
adc
and
test
mov
push
xlat
pop
bound
push
hlt
push
gs
dec
sti
aad
test
mov
fsubl
add
pop
hlt
shll
imulb
or
dec
push
dec
mov
js
adc
jbe
adcb
mov
add
aad
nop
in
xor
dec
mov
pop
clc
push
push
inc
and
test
mov
cmp
mov
cltd
and
sbb
cltd
pop
mov
fnstenv
fcmovnbe
push
test
sbb
in
mov
dec
mov
data16
cmp
andb
fnstcw
push
xlat
adc
int3
or
push
mov
xchg
sub
cmp
adc
rcrl
rclb
mov
movsl
add
cmp
sahf
add
inc
cmp
pop
popf
pushf
and
hlt
into
or
lahf
rol
push
xlat
cmp
mov
push
sub
fdivrs
mov
shlb
scas
test
out
mov
outsb
outsb
shlb
mov
cmc
ja
add
in
xchg
popa
and
inc
mov
fs
xorb
enter
lahf
in
pop
mov
daa
xchg
inc
mov
lahf
mov
imull
xor
push
sbb
ficomps
mov
cmp
mov
adc
enter
push
and
jb
repnz
movsl
rorb
add
fisubs
push
shrb
jb
pop
add
ret
mov
loope
push
and
xchg
inc
cs
lock
imul
mov
ret
mov
sub
adc
jnp
xor
inc
insb
sub
sub
aam
xchg
sbb
mov
inc
clc
pop
mov
lcall
adc
sub
add
punpcklwd
call
sahf
cmp
lds
test
repz
dec
popf
lret
adc
mov
jmp
cmpsb
push
int3
xor
ret
loop
inc
leave
pusha
jne
jno
mov
or
pop
out
cmp
aas
cmpsb
aas
jecxz
jg
cmp
outsl
lcall
mov
roll
sbb
test
push
ljmp
nop
dec
aad
and
imul
push
sub
fmuls
lret
pop
lcall
jecxz
xchg
inc
clc
jge
pop
out
aas
add
fdiv
lods
cld
lcall
data16
mov
test
add
add
push
addl
daa
pop
cmpsl
ss
adc
and
scas
mov
ja
xchg
ljmp
pop
outsl
mov
daa
fdivr
gs
adc
repz
add
mov
cltd
rcrb
inc
xchg
lret
loop
es
sti
fiaddl
push
sub
fisubs
inc
jle
inc
jbe
jle
int
jnp
mov
stc
and
and
lock
dec
test
mov
jo
shl
es
xchg
leave
xchg
cmp
ffree
and
inc
xor
mov
out
and
and
jno
sub
dec
call
arpl
mov
sub
push
jne
shr
scas
les
pop
or
fcoms
out
repz
sub
or
lcall
inc
dec
ret
xchg
mov
jle
adc
sub
pop
dec
aam
imul
sbb
sub
add
aam
sbb
aaa
hlt
cwtl
or
add
jle
pcmpgtd
pop
rclb
sti
push
cs
filds
test
cmc
fmuls
lds
push
fstl
push
out
ds
add
lea
orl
add
fidivl
inc
xor
shrb
jns
jb
jnp
mov
sub
addl
iret
enter
sbb
dec
mov
js
mov
add
mov
fisttpl
out
sub
jo
in
lods
roll
adc
popf
je
xor
popf
outsb
clc
enter
mov
cmp
test
mov
xor
mov
jecxz
push
inc
ret
jmp
out
mov
jne
sub
jo
mov
mov
pause
insb
jle
push
cmpl
push
inc
xchg
inc
mov
sahf
xor
loop
out
sbb
dec
adc
cltd
punpcklbw
adc
lret
out
adc
dec
or
test
les
out
adc
mov
popa
icebp
mov
and
push
ret
in
mov
adc
ljmp
sti
xlat
sbb
jb
add
sbb
xor
sub
cmp
orb
xor
adc
fcompl
ret
and
add
sub
inc
stos
cli
push
jne
add
scas
jmp
fnsave
pop
pop
cmp
repz
mov
sbb
xor
dec
mov
in
out
mov
movsb
pop
push
arpl
rclb
mov
or
int
nop
mov
add
repz
add
scas
pop
inc
push
cmp
aad
mov
jle
xor
aam
sahf
notb
xorb
aaa
mov
fmuls
cltd
push
cmp
mov
mov
mov
scas
add
adc
addr16
adcb
mov
inc
repz
mov
push
add
loope
xor
sbb
cmp
fstps
cmc
jne
andl
loope
dec
xchg
cmp
call
loope
add
jb
loope
xor
aam
imul
clc
out
inc
xor
incl
jmp
fcompl
add
repz
cmp
mov
and
shlb
sti
movb
inc
mov
out
cli
jmp
out
inc
mov
mov
scas
loope
movsb
pop
cmp
dec
cli
mov
xor
jmp
outsl
hlt
mov
mov
dec
jge
or
mov
je
sub
cmp
or
test
daa
mov
push
push
stos
push
out
mov
aad
je
in
cld
push
jecxz
add
in
cld
mov
mov
int3
add
nop
sti
out
js
cmp
adc
iret
jns
mov
hlt
and
dec
jmp
call
and
mov
int3
jne
scas
pop
dec
inc
repz
xchg
addr16
cmpsb
push
insl
sahf
jp
dec
jmp
mov
or
je
cli
dec
jp
mov
insl
pop
mov
arpl
cmp
int
dec
stc
int3
stos
aas
push
fisubrl
mov
imul
push
xor
into
mov
mov
outsl
scas
in
sti
jb
or
mov
sub
cwtl
mov
inc
and
cli
sub
xchg
and
dec
cmp
mov
add
add
daa
xor
dec
or
inc
sub
mov
sub
daa
jmp
pushf
inc
pop
jo
mov
js
dec
int3
cmc
lcall
sbb
xchg
stos
push
js
cmp
outsl
scas
lcallw
xchg
add
mov
into
out
mov
loopne
and
and
cmp
xor
repnz
inc
jbe
mov
hlt
fdivl
sbb
cmp
stc
mov
jge
jle
stc
js
hlt
cmpsb
pop
rclb
mov
in
push
pop
ret
mov
push
mov
arpl
test
mov
sbbb
das
lcall
cmp
imul
call
movsb
popa
mov
jb
ror
jno
repz
shlb
xor
push
push
xchg
or
movsl
dec
into
cmp
jb
cmpsb
push
sbb
repz
pop
enter
and
sub
sbb
loop
or
int3
rorb
in
sbb
inc
mov
cmpsl
add
cld
and
push
push
jae
mov
add
sbb
mov
in
outsb
loopne
dec
movsl
mov
test
dec
push
dec
mov
xchg
push
scas
jge
out
imul
rcrb
sti
aad
cmp
lret
movsb
mov
mov
sahf
test
int
gs
sbb
negl
pop
fsubs
clc
lret
cltd
cli
jmp
mov
jg
push
xor
ret
fs
sub
rcrb
lcall
lea
jo
push
push
pusha
mov
mov
iret
adc
sbb
repz
cmp
dec
es
pop
mov
nop
ja
cmpl
sysenter
mulb
mov
repnz
push
data16
add
fsts
jg
ds
outsl
les
mull
cmpsb
lea
mov
or
mov
xor
lea
popf
xchg
push
adc
sbb
cmp
mov
scas
sarb
in
pop
jns
sbb
lcall
call
cmpsl
stos
lret
pop
aad
cmp
mov
jmp
jno
test
sarl
movsl
cmc
or
out
ret
mov
jge
jb
mov
pop
push
xor
daa
pop
test
clc
and
sub
add
test
nop
aas
test
ret
xor
out
push
cld
pushf
rcl
and
loop
cltd
dec
cmp
leave
inc
ds
adc
pop
repnz
outsl
out
aad
xor
lret
into
in
dec
inc
cmpsl
imul
jbe
mov
out
rol
cmp
fldl
pusha
hlt
incb
insb
nop
sti
sbb
mov
mov
push
js
push
pop
jp
je
sub
ret
mov
xchg
lahf
int3
adcl
xor
or
sub
jmp
jno
sub
jbe
push
popa
mov
dec
insl
test
iret
call
jbe
sbb
mov
push
dec
cmpsb
adc
mov
push
xchg
test
xchg
lcall
pop
push
push
les
dec
sub
shrl
dec
js
flds
out
push
inc
mov
leave
fwait
sub
and
lret
or
sbb
lods
pop
sub
dec
nop
push
in
add
push
stos
jnp
lret
aad
push
es
dec
push
cmc
push
in
xor
or
pusha
lahf
mov
ja
or
loope
and
xorl
sub
loopne
sub
mov
add
mov
fstpt
lcall
cmp
das
sbb
push
mov
sbb
lahf
cld
inc
test
popa
scas
hlt
outsb
inc
xor
mov
cmp
pop
test
in
and
cli
inc
sbb
outsb
movsb
clc
xchg
fstpt
mov
pop
mov
inc
leave
mov
and
lret
loopne
fwait
adc
out
mov
std
fwait
pop
pop
or
rorb
xchg
jmp
iret
adc
dec
repz
sbb
repnz
xchg
jecxz
jp
mov
sub
shl
mov
xchg
cli
push
cli
mov
psubw
xchg
lds
mov
inc
icebp
popf
jmp
pop
aaa
call
xchg
es
lret
imul
ljmp
mov
mov
pop
pop
es
sbbb
inc
pop
push
cld
xchg
ja
sbb
xor
mov
loop
xchg
loop
cmc
inc
decb
enter
jp
mov
sub
lods
sub
test
mov
ror
sbb
ds
lret
fcoml
mov
scas
test
mov
mov
jo
insb
jbe
call
jae
lahf
sub
mov
mov
xchg
xor
and
cmpsb
pusha
pop
lret
rcrl
fsubs
jns
cwtl
in
loope
ja
push
or
xor
aad
je
mov
adc
ds
and
adc
clc
lret
fistl
subb
mov
mov
sub
cmp
imul
adc
hlt
shrb
jmp
call
inc
lds
sbb
scas
xchg
lahf
mov
and
xchg
push
cmpsb
add
inc
stc
js
movsb
jge
jno
mov
mov
sub
ljmp
inc
dec
push
mov
cltd
sub
jmp
adc
fdiv
sahf
repnz
jnp
or
jne
add
sbb
stc
inc
adc
xor
add
gs
fisttpll
xor
js
mov
xchg
cmpsl
adc
xor
insl
sub
bound
jg
fyl2x
mov
dec
mov
sbbb
lahf
mov
mov
shll
enter
loope
xchg
inc
mov
cmp
lds
popa
push
mov
add
push
cmpl
sub
inc
fwait
pop
sbb
inc
loopne
mov
daa
negb
mov
imul
add
imul
jp
push
xchg
adc
xor
cmp
pop
cmp
cmp
or
pop
mov
mov
jp
scas
pop
dec
push
inc
xor
gs
push
mov
and
inc
cmp
xor
int3
mov
cmpsl
dec
popf
inc
pop
cld
push
int3
push
mov
dec
push
mov
cmp
jge
lea
xchg
add
cmpsl
decl
cmp
es
mov
stc
loope
xchg
push
push
push
sbb
pop
nop
leave
push
mov
mov
pop
movsb
das
sub
inc
pusha
or
cmc
subb
cmc
and
sub
sub
adc
pop
cmp
test
imul
xor
push
stos
in
sbbl
sub
mov
push
pop
icebp
pop
mov
inc
xchg
imul
dec
push
and
lret
sbb
inc
dec
pop
fcomip
or
sbb
xorl
test
loope
cltd
cmpsb
ret
xor
testb
int3
pop
nop
mov
lds
enter
stos
cmpsl
cwtl
mov
stos
dec
sbb
push
or
hlt
stos
jle
cmp
adc
leave
xchg
dec
inc
mov
xchg
pop
inc
fisttps
addr16
ds
test
mov
testl
or
add
cvtpi2ps
int3
ret
clc
decb
mov
lcall
cltd
sahf
inc
jnp
cwtl
aas
adc
mov
jl
scas
adc
ljmp
cld
mov
addr16
in
out
push
cmp
cli
add
cmp
fcoml
fldt
inc
or
mov
incb
jmp
sbb
jg
out
xor
shlb
ret
dec
mov
dec
in
sub
add
ljmp
sbb
ja
sbb
mov
out
pop
or
fucom
adc
push
or
aad
ja
xchg
test
push
lret
fistl
or
cs
jo
xchg
xchg
xor
xor
les
lret
adc
dec
and
push
test
js
icebp
sbb
or
sti
imul
mov
mov
cwtl
pop
pop
in
adc
mov
and
push
mov
sbb
and
sbb
stos
cmp
xor
out
sub
pop
dec
loop
jp
or
popl
cli
lret
sbb
mov
jae
add
arpl
je
mov
pop
inc
rcrb
movsl
and
or
xchg
int
popa
mov
mov
test
roll
xor
add
rorl
fbstp
outsl
scas
cwtl
test
push
fwait
jb
scas
icebp
clc
inc
pop
leave
jp
xor
mov
and
push
scas
lret
stos
xchg
sbb
sti
push
nop
pop
and
or
divb
adc
rcrb
jb
neg
push
adc
sub
arpl
push
pop
xchg
inc
pop
jmp
rcl
cmp
int
xchg
mov
adc
push
add
mov
lods
mov
data16
imul
cmp
test
out
inc
ret
mov
int
cmpb
gs
pop
jae
jbe
pop
bnd
jecxz
sbb
movsl
in
arpl
sbb
xor
sbb
icebp
xchg
jno
inc
mov
clc
ds
lods
shrb
pop
xor
dec
pop
xchg
pop
jge
xchg
enter
adc
fdivs
pop
repz
loop
add
mov
mov
cli
jnp
jne
dec
in
addl
fistps
inc
or
mov
popa
movsl
dec
daa
push
lret
sbb
mov
push
jge
imul
sahf
adc
lds
sub
mov
stos
pop
das
out
incl
popa
out
sbb
in
adc
jge
and
ljmp
lret
int
fistpl
mov
outsb
mov
cmp
out
out
xchg
mov
and
cmc
mov
pop
int3
ret
mov
shlb
loopne
and
insb
jmp
cmp
gs
inc
jns
andl
push
sahf
inc
fs
add
sahf
repz
xor
pop
push
int3
popf
sbb
and
inc
pop
into
lock
jne
pop
xor
ds
or
ret
sbb
jns
das
jo
sub
push
shr
int
or
mov
test
jnp
or
enter
push
push
fsubs
push
ret
sbb
scas
mov
faddl
jbe
hlt
les
es
ret
test
or
cmp
add
mov
pop
inc
cli
mov
mov
mov
cmp
mov
xorb
nop
mov
add
movsl
pmullw
mov
adc
stc
rclb
icebp
xor
lea
lret
mov
rcll
sub
dec
jle
addr16
mov
stos
pop
stos
inc
pop
dec
sub
ret
insb
mov
xor
xor
pop
jns
int
xchg
cld
jg
push
aam
stc
cs
and
jb
fidivrs
add
mov
in
ficoml
test
pop
pop
inc
cmpsb
cmc
sub
fwait
and
gs
pop
sbb
push
subb
xchg
icebp
mov
enter
in
mov
popf
and
fwait
adcb
push
enter
mov
xor
jmp
or
xchg
jl
in
dec
data16
sub
cwtl
repz
sub
cmp
xor
add
add
stc
and
and
cs
int
sub
xor
push
mov
jmp
mov
fcom
cwtl
lcall
xor
les
orl
shrl
in
lret
push
lahf
lahf
test
js
cwtl
jl
mov
sahf
push
std
xor
xor
cli
push
mov
pop
adc
jp
out
jecxz
loop
dec
outsl
mov
cltd
and
in
cmp
add
jo
mov
or
jecxz
imulb
cmc
cmp
lock
xchg
cmp
or
fisubl
adc
inc
xor
sahf
or
mov
mov
inc
push
pushf
pushf
mov
ret
lcall
pop
mov
inc
popf
cmpsl
cmp
inc
test
pshufw
pop
pop
xor
test
jge
sbb
arpl
test
arpl
popf
scas
mov
and
sbb
es
movsl
or
inc
xor
incb
dec
imul
cli
and
scas
les
scas
shlb
inc
cmp
cmc
mov
mov
shl
mov
test
mov
push
jno
in
movsb
xchg
dec
rolb
jb
xchg
scas
fldenv
add
in
gs
out
aad
jmp
gs
sahf
lea
and
jp
insl
mov
loopne
and
pop
div
cmpsl
push
insl
hlt
and
pop
jg
mov
jp
sub
sub
sub
dec
xchg
imul
inc
pop
mov
xor
dec
adc
xchg
outsl
mov
adc
jmp
sbb
fiadds
push
cs
inc
inc
pop
pop
pop
dec
xchg
cld
mov
in
adc
cmp
sarb
jo
imul
mov
sub
enter
xorl
mov
adc
or
mov
push
xor
inc
inc
test
jno
cmp
dec
mov
cwtl
and
movsl
sbb
lret
mov
xchg
call
xchg
out
push
xor
xchg
xor
push
xor
sahf
cltd
jl
push
mov
sti
jge
pop
pop
je
daa
sbb
inc
or
gs
jb
mov
sbb
out
sbb
and
xchg
jns
xchg
push
push
ret
sti
fnstsw
push
cmc
hlt
push
mov
jo
fadds
xchg
mov
stos
aam
mov
repnz
jmp
and
fildl
jae
fistl
aad
roll
movsl
je
test
dec
ret
pop
xchg
sbb
pop
xchg
bound
jbe
push
je
xlat
rcrl
or
ja
fldenv
lahf
mov
fdivrs
in
push
and
out
mov
mov
iret
sbb
sahf
lahf
pop
ss
sbb
sub
or
shll
call
jmp
hlt
add
mov
movl
mov
push
cmc
adc
cwtl
mov
push
fsubrs
repnz
fwait
add
inc
xlat
fbld
filds
insb
std
idivl
gs
mov
mov
push
pop
divb
inc
loop
enter
and
enter
scas
adcb
mov
fmull
mov
or
xlat
push
pop
lea
mov
daa
jg
pop
adc
sbb
push
xchg
mov
cwtl
jo
ljmp
ret
sbb
jmp
xchg
daa
rcll
jg
xchg
pop
mov
jle
outsb
push
icebp
sub
fbld
stc
lds
test
in
imul
or
lahf
icebp
test
or
cli
leave
add
arpl
insl
sbb
fisubrs
push
cmc
pop
mov
dec
jae
jne
push
inc
movsl
push
test
das
lods
sbb
jg,pt
lods
dec
jge
pusha
push
or
or
stos
aam
lret
test
js
cmp
xor
mov
lret
mov
dec
adc
xor
lcall
xor
push
sub
out
sbb
mov
insl
aad
add
xchg
and
cmpsl
fidivs
pop
jg
jno
add
fcmovnb
push
aam
adc
cmp
stos
mov
scas
lea
fsub
sbb
push
xchg
lds
out
ret
cmp
xchg
lods
cmp
out
and
es
jns
test
push
cs
inc
dec
jmp
xchg
push
bound
and
inc
xchg
add
mov
xor
pop
push
xor
sub
mull
test
outsl
add
dec
cmp
fists
call
pop
mov
bound
popa
shl
push
inc
add
sbb
xchg
lea
in
and
jg
lret
leave
outsl
loop
call
test
mov
dec
imul
mov
push
dec
or
pop
inc
rcrl
cmp
icebp
mov
es
lea
andb
cmp
movsb
xor
popa
inc
das
int
sub
fucom
sub
cmp
jge
pop
xchg
inc
xchg
lret
scas
mov
out
setno
testl
js
stos
lock
adcb
out
in
sbb
jns
lret
mov
out
mov
cmc
mov
into
ljmp
xchg
mov
inc
mov
cld
call
addb
dec
stos
mov
in
icebp
adc
cltd
fcomip
xor
leave
imul
test
pusha
adcb
and
mov
hlt
inc
xchg
mov
jne
mov
push
iret
int
push
lods
icebp
xchg
add
cld
sub
pop
je
push
leave
stc
push
mov
or
push
xor
cmpsl
add
test
pop
inc
and
leave
push
push
cmp
jns
xchg
push
xchg
sbb
push
and
jne
ret
filds
repz
jne
xchg
icebp
sahf
loopne
andl
mov
push
and
xchg
rclb
mov
out
xchg
cmp
mov
pop
fldcw
popa
scas
mov
jns
xor
fimull
or
movsb
in
cli
push
cwtl
cmp
xchg
loop
lds
jnp
cmp
mov
mov
fwait
rorb
inc
jnp
xchg
push
mov
sub
subb
add
mov
nop
repnz
lahf
call
fstps
lcall
lds
adc
adc
fcoml
mov
lock
cmp
mov
adc
jb
mov
or
fdivs
scas
cmp
add
sub
iret
outsb
sbb
aas
movsl
inc
movsb
pop
enter
or
xchg
push
testl
adc
test
push
les
lahf
ds
ss
mov
cwtl
shll
addr16
xor
jnp
xchg
jecxz
push
in
cmpsb
addl
fmul
pmaxsw
pop
dec
decb
mov
mov
aam
push
rol
push
imulb
mov
js
mov
clc
loope
fildll
push
cltd
jmp
popf
push
xor
in
sub
xchg
pop
das
sub
loopne
jmp
push
mov
mov
mov
lahf
jge
and
sarb
and
pop
roll
sub
mov
out
jae
ficoms
push
outsl
cmp
mov
adc
lahf
or
idivl
or
xor
pusha
movsb
pop
adc
cmpsb
xchg
xor
or
push
jnp
ljmp
insl
xorps
push
inc
pop
cltd
push
test
mov
pop
dec
lods
mov
add
mov
mov
aad
jno
in
mov
add
lds
ret
shrb
or
les
inc
les
pop
cli
inc
dec
mov
movntq
out
push
push
jle
je
pop
data16
aaa
and
jno
push
arpl
and
lea
cwtl
movsl
or
push
push
dec
aas
stos
insl
jle
scas
push
pop
jno
xor
mov
jecxz
testb
sbb
jbe
js
sub
push
mov
pushf
loope
out
jnp
xor
dec
sbb
fistpll
lock
mov
cmp
cmp
ljmp
fpatan
mov
fdivl
add
movsl
scas
mov
pop
mov
daa
subb
mov
lret
movsb
mov
ljmp
popa
mov
xor
and
cmp
mov
and
cmp
outsb
push
xchg
hlt
dec
jae
inc
fmull
out
push
out
in
cmp
ss
in
cmc
loop
out
xchg
nop
loop
sub
xor
in
push
sub
rclb
leave
repz
mov
gs
push
xchg
mov
aaa
loop
insb
and
cli
xchg
mov
aas
inc
pop
mov
push
xlat
in
fstps
insb
iret
mov
bound
adc
cli
jge
js
sub
pop
js
mov
mov
add
add
dec
cld
or
and
lds
daa
lds
or
push
dec
ds
cmp
out
sub
je
faddp
lea
imul
fdivr
call
pop
ror
xchg
xor
add
sub
sti
xchg
fldenv
push
mov
push
jmp
rcll
daa
or
cmp
insb
sahf
int
lcall
adc
mov
call
jle
sub
iret
je
popf
test
pop
push
jg
adc
cli
mov
popa
cld
inc
shl
call
inc
bnd
push
in
fsubr
test
sahf
add
std
icebp
in
outsl
sbb
sub
shlb
adc
sbb
aas
inc
insb
jmp
pop
sub
jb
xor
lcall
add
dec
lds
movsb
xchg
test
sub
push
shlb
outsb
xchg
jge
mov
lds
dec
std
outsb
fnclex
mov
mov
rcrb
int
pusha
mov
sub
adcb
nop
jp
jmp
add
mov
or
daa
adc
mov
push
popl
bnd
xchg
ds
cs
subps
jb
push
jo
xor
or
mov
shl
mov
dec
push
lret
sahf
popf
popf
dec
pop
xor
inc
or
sbb
mov
testl
sbb
enter
jmp
and
loopne
daa
or
mov
adc
xchg
andl
adc
jno
aas
sub
in
fwait
dec
pop
sub
pop
xor
test
jnp
lods
imul
mov
inc
data16
pop
lods
xor
add
xchg
je,pt
xlat
test
cmp
ret
push
scas
loope
out
pop
push
adcb
or
xchg
cmpsl
and
cmp
xor
lahf
jo
xor
enter
ficomps
or
fneni(8087
sar
jge
fwait
das
aam
cmpsb
shr
push
hlt
jns
push
rol
jbe
pop
jecxz
loop
repz
jb
cmp
jle
and
jb,pn
dec
fistpll
push
xor
daa
dec
cmp
dec
repz
cmp
push
mov
xchg
js
mov
imul
fidivrs
test
loope
aad
fistps
ss
cmovne
or
lods
lcall
pop
es
push
jae
pop
cmc
push
inc
add
gs
addr16
mov
jns
int
shll
xchg
and
ja
sub
movsb
std
xchg
xchg
mov
out
mov
stc
out
mov
jge
mov
shrl
jbe
mov
jge
repz
std
aas
mov
scas
xor
push
inc
insl
inc
inc
lahf
xor
imulb
pop
jge
or
mov
rolb
inc
rorb
xchg
adc
push
lret
cltd
push
imul
pop
xchg
mov
and
mov
jmp
aad
lahf
lods
lea
push
push
fmuls
outsb
and
dec
xlat
cmp
sub
mov
mov
adcl
stos
mov
push
mov
insb
arpl
scas
add
xor
mov
in
pop
arpl
xchg
fstps
jns
mov
stos
ds
sbb
movzwl
repz
les
scas
sub
push
pop
out
ret
mov
xor
aad
and
mov
xchg
or
xabort
out
add
mov
pop
gs
stc
xorb
cmpsl
add
cmp
xchg
or
outsb
mov
out
popf
sbb
addr16
or
outsl
sbb
rol
rcrb
jle
insb
lcall
sbb
jmp
push
imul
cltd
and
lahf
std
popf
xor
movsl
and
cmp
and
adc
inc
nop
out
jbe
sbb
ja
lods
inc
dec
pop
sub
bound
xlat
pop
xchg
ja
push
daa
in
push
sub
jne
xor
cld
lock
add
pop
mov
movsb
jge
jle
stos
pop
cmpl
imul
cltd
mov
cmc
mov
xor
stc
ljmp
mov
mov
push
std
movsb
and
clc
js
xor
or
push
sahf
sub
inc
and
scas
pop
push
pop
sbb
mov
arpl
insl
push
dec
jo
lods
jb
repnz
aam
ret
adc
movsl
push
inc
leave
mov
pop
xor
adc
inc
cld
mov
inc
mov
pushf
bnd
imulb
adc
loop
jge
scas
inc
mov
fsincos
sub
ja
cmc
and
mov
imul
add
dec
pop
in
sbb
hlt
das
das
mov
adc
xchg
shrb
or
in
int
in
xorb
jge
sbb
filds
and
push
lahf
cwtl
in
dec
xchg
sbb
adc
jns
mov
fmul
in
stos
pop
mov
add
sbb
jbe
inc
dec
ljmp
cmpsb
fisubs
xchg
lret
dec
inc
andb
popf
pop
std
dec
cmp
cmc
push
pushf
leave
jmp
mov
ret
das
sub
stos
jb
jne
inc
insl
lea
loope,pt
dec
adc
ss
jge
pop
out
xchg
out
fstps
mov
out
popa
or
cld
sbb
mov
xor
out
sub
xor
ds
pushf
pushf
mov
out
cmp
jg
push
sbb
mov
into
adc
adc
pop
rcll
stc
sub
inc
lods
cmp
iret
jl
into
sub
cltd
scas
std
inc
push
and
clc
dec
cmp
jge
in
cmp
fdivrs
pop
lea
mov
mov
lret
int
std
mov
cltd
dec
movsl
arpl
js
xchg
sbb
je
enter
jbe
sbb
pop
fistl
imul
xor
rcl
shl
or
sbb
scas
adc
fldcw
aas
add
jns
les
lods
push
pop
sbb
dec
lds
jmp
ret
or
dec
pop
cltd
push
dec
xlat
lret
cld
xorb
pop
jmp
mov
ret
xor
out
aas
iret
dec
adc
pop
jns
cli
inc
int3
imul
push
into
sbb
cli
ds
movsl
add
pushf
sbb
dec
dec
mov
dec
jnp
dec
sbb
mov
jge
inc
sub
das
sbb
stc
sub
iret
and
mov
mov
pop
push
dec
call
or
repz
ret
aaa
stos
xchg
js
ss
jns
cs
jle
pop
cmpsl
sbb
mov
dec
clc
in
fwait
sbb
xchg
lret
aaa
mov
flds
push
imul
sub
pop
push
add
aam
xor
push
fstps
or
mov
into
xchg
repnz
add
rorb
aas
ret
jl
lea
jmp
xchg
int3
test
leave
scas
inc
jp
aaa
add
dec
add
int3
out
cmp
jbe
cmpsb
sub
xor
popf
dec
les
push
mov
ja
shll
xor
cmpxchg
mov
dec
dec
cmp
call
shll
push
dec
fsts
in
xlat
scas
test
add
icebp
arpl
nop
arpl
dec
dec
add
and
scas
and
fimull
mov
imul
sbbl
js
push
shrb
std
pop
xchg
je
sbb
cli
cmpsb
jl
cmp
mov
jg
pop
add
ss
testb
adc
pop
dec
adc
push
push
call
test
lret
arpl
push
scas
mov
fidivs
fidivrl
cmp
subb
and
mov
adc
leave
jmp
ss
insl
test
mov
mov
sbb
scas
or
push
fimuls
sbb
push
sbb
negb
popa
arpl
push
out
icebp
dec
pop
adc
imul
hlt
fidivrs
mov
push
pop
jle
lock
mov
cmp
push
push
int3
and
jno
dec
pop
or
aam
jl
lods
adc
cmpsb
nop
push
inc
and
movsl
imul
dec
clc
std
loope
and
ss
cli
popa
test
pop
adc
in
push
lods
std
testb
or
sbb
or
dec
pop
inc
mov
or
sbb
cmp
adc
or
mov
xchg
jne
add
call
jno
xchg
shlb
add
dec
pop
jne
xchg
pop
lods
xchg
cltd
rorl
into
mov
add
sub
andb
test
add
xchg
iret
mov
jbe
fisttpll
bnd
cmc
stc
nop
cs
add
test
and
cltd
cli
test
xor
scas
stc
push
pop
dec
in
cmp
pop
xchg
dec
and
xchg
mov
xor
fwait
jbe
es
out
stc
cmp
mov
mov
push
pop
xchg
cwtl
or
inc
fmuls
pop
pop
scas
sbb
fsubrp
mov
enter
jecxz
dec
jp
sarb
jbe
mov
ljmp
lahf
int
sub
and
mov
loope
inc
leave
call
subl
cmpsb
mov
adc
lretw
push
cmp
xor
fchs
lcall
pop
jbe
or
lret
dec
lods
hlt
dec
pop
ja
dec
jnp
xchg
jb
add
push
aam
push
cwtl
paddb
das
jno
roll
xor
movsl
repz
lock
mov
jl
inc
and
aas
pop
leave
jbe
sub
repnz
shlb
addl
push
lods
sub
sbb
or
add
out
mov
adc
testl
in
stc
add
sbb
fs
and
add
mov
cltd
lods
test
pop
jl
pop
aam
hlt
bnd
xchg
popa
decb
nop
xor
loope
cltd
mov
test
ja
xor
into
xchg
cmp
call
mov
push
and
loope
ds
into
fisubl
lcall
add
add
test
push
mov
in
mov
jns
ret
out
es
dec
shlb
pop
pop
sbb
scas
js
popa
or
push
cmp
adc
jo
push
fs
incl
push
sub
mov
js
sbb
mov
and
add
daa
cmpsb
test
pop
ja
pop
pop
xchg
fnstcw
cltd
scas
dec
or
lock
xchg
push
inc
adc
hlt
repz
mov
mov
outsb
inc
popf
mov
push
shlb
test
cwtl
aam
pop
sbb
out
inc
std
loop
icebp
outsb
cmc
sub
mov
push
mov
cmpsl
jne
dec
repz
call
leave
dec
cmp
xchg
jge
push
adc
inc
mov
sbb
lea
pop
out
adcl
xor
inc
jle
out
lcall
push
sbb
lret
fimuls
cmpl
pusha
addr16
adc
les
imul
fcmovnb
stos
dec
loop
or
mov
sar
or
pop
loope
mov
mov
lock
aas
and
add
mov
sbb
xor
nop
cltd
mov
mov
lea
push
lahf
out
pop
cli
andl
push
call
lock
aam
into
sbb
iret
and
sbb
jmp
into
jbe
xor
mov
inc
xor
mov
pop
mov
jbe
loopne
push
subl
sti
adc
adc
push
sbb
xchg
out
push
push
xchg
mov
loopne
test
adc
bound
aad
jb
std
push
mov
mov
test
push
enter
xchg
sbb
cmp
jle
sbb
repnz
sti
jp
cmc
sub
lock
mov
push
stc
pushf
stos
inc
xor
incb
xchg
xchg
xchg
in
ss
sub
sub
outsl
testb
mov
mov
in
sbb
mov
mov
nop
out
fisubl
fs
in
sub
mov
movsl
mov
pop
or
sbb
dec
mov
mov
add
out
push
fstpt
lds
ja
and
jle
sbb
or
sahf
stos
fisubrs
int3
lods
pop
pop
test
dec
pop
lods
xor
lock
enter
std
inc
sub
dec
das
stos
hlt
or
sahf
mov
adc
xchg
out
pop
xchg
sub
out
dec
adc
jp
push
adc
push
add
push
das
in
push
call
pop
out
pushf
shll
dec
push
push
jae,pn
cmp
mov
push
push
into
fstl
shlb
xor
pop
mov
in
and
enter
lea
mov
mov
pop
fcmovu
out
pop
or
inc
mov
test
enter
jmp
stos
or
push
push
enter
cmp
push
lahf
test
test
adc
push
aam
cmpsl
sub
out
push
pop
jno
push
or
dec
rcr
inc
xchg
mov
adc
add
or
cmp
push
andl
mov
adc
inc
push
mov
into
repz
mov
dec
cltd
cmp
aad
add
leavew
cltd
push
stos
test
jno
push
add
xchg
pop
movsl
sub
repz
adc
inc
pop
out
repz
je
sub
adc
cmp
pop
cmp
imul
call
inc
lret
inc
add
jmp
push
add
dec
xor
cmc
imul
xor
orb
cmp
mov
add
mov
inc
xor
sbb
xor
push
fs
xor
inc
and
sub
idivb
sahf
sub
sar
sub
lcall
test
daa
push
popf
and
mov
out
ja
sarb
aad
sub
cmp
mov
ss
add
pop
xlat
inc
or
jmp
lahf
lods
pop
mov
andl
cs
jp
cwtl
cmpsl
xchg
into
out
lret
or
or
dec
setns
jp
cmp
mov
pop
jb
pop
inc
push
dec
scas
test
je
andl
cmp
mov
mov
int3
cltd
rolb
sub
and
cwtl
ss
ret
pop
aam
cltd
arpl
cwtl
in
daa
or
insl
xor
ljmp
lret
aad
popl
mov
jns
rclb
mov
iret
hlt
push
in
ss
mov
rcrb
mov
mov
pop
or
mov
xor
dec
cmp
inc
fcmove
mov
idivb
outsb
sbb
inc
adc
sbbl
cmpb
mov
xor
mov
cmp
inc
push
xorb
or
ret
dec
add
sub
bound
loop
and
es
imul
fsubs
enter
mov
mov
cmc
cltd
mov
dec
xchg
fidivs
xchg
scas
dec
gs
clc
sahf
lret
fcoml
popf
jb
test
test
sbb
call
xor
lock
ret
inc
fsubrl
lret
movsb
stos
mov
lahf
in
adc
aad
jecxz
or
adc
sahf
movsb
mov
mov
rorl
test
inc
mov
xchg
addr16
push
sti
and
or
adc
jle
mov
cmp
sbb
mov
test
mov
dec
or
push
test
cmp
xchg
pop
insl
inc
sbb
outsl
push
mov
js
and
cltd
jp
fldcw
rolb
mov
and
iret
out
enter
lahf
and
popf
loope
clc
jo
xchg
and
lcall
icebp
inc
mov
mov
mov
inc
push
shll
and
fsts
das
stos
sbb
adc
icebp
inc
adc
fwait
jle
fcmovnb
push
lret
dec
pop
int
enter
xchg
in
push
mov
daa
and
dec
jns
xchg
adc
rcrb
jne
xchg
cmp
dec
bound
cld
mov
ds
mov
mov
jmp
shlb
cmp
outsb
mov
push
sbb
or
jns
stos
xchg
or
inc
mov
sar
adc
dec
cwtl
mov
add
scas
mov
xchg
out
in
lock
cmpsl
in
jo
xchg
test
cmpsb
and
stos
mov
pop
lock
repz
int3
stos
jbe
shll
cmp
hlt
in
add
adc
fs
inc
imul
pusha
imul
imul
xchg
jb
jp
xchg
lods
nop
sbb
xchg
fsubr
stos
pusha
cpuid
daa
jmp
mov
nop
pop
mulb
sbb
shll
mov
pop
jl
fcmovne
adc
test
and
pop
sbb
cld
add
add
ss
cmp
stc
movsb
add
cltd
dec
xchg
and
sub
mov
and
out
es
xorl
xlat
jge
cmovb
xlat
inc
mov
rcrl
das
jle
psllw
rcl
int3
pop
cmp
cmp
jns
int3
loop
sbb
das
bswap
negb
inc
or
adc
sbb
dec
popf
dec
pop
push
sbb
xchg
cltd
fs
sub
mov
sbb
in
imul
dec
ss
ja
push
scas
mov
or
pushl
cmpb
mov
popf
mov
inc
aad
punpckhwd
cs
sub
jecxz
mov
aas
aaa
scas
dec
mov
nop
sub
sbb
dec
pop
mov
adc
xchg
movsb
dec
add
incb
cli
mov
and
pop
xor
push
shll
insl
adc
push
or
std
jns
inc
cmp
or
stos
push
ljmp
test
das
mov
pop
adc
jae
rol
pop
xchg
push
adc
mov
movl
sbb
mov
pxor
sbb
mov
xor
arpl
xor
push
pop
adc
daa
jno
das
mov
mov
cli
cmp
jge
stos
lea
adc
dec
shl
xlat
add
mov
pop
and
mov
jno
cmp
test
push
dec
sti
push
out
jb
imulb
imul
xchg
sarb
push
sbb
push
cmp
out
mov
movsl
dec
cmp
mov
call
aaa
cmp
xchg
push
mov
out
scas
add
les
lret
ss
jge
in
mov
mov
xor
xchg
sbb
iret
jl
xchg
and
add
in
enter
mov
push
inc
push
cmp
pop
into
inc
xchg
repz
fwait
push
mov
loopne
mov
ds
jge
mov
mov
test
push
add
scas
test
mov
xor
lds
sbb
pop
xor
jno
fidivs
mov
in
outsb
decb
sar
test
fcomps
enter
addr16
push
ljmp
mov
sbb
cs
mov
push
iret
fsubs
pop
inc
stos
mov
and
push
movsl
xchg
arpl
xchg
inc
fistpl
stos
cwtl
test
lcall
fst
inc
mov
xor
fists
scas
std
lock
add
test
int3
pop
sbb
push
dec
cmp
inc
gs
clc
outsb
jg
push
mov
mov
fnstsw
stc
xlat
mov
or
dec
ss
out
or
repnz
out
jbe
adc
add
jae
cmp
arpl
cli
xchg
addl
mov
push
mov
cmpsl
movsl
cmp
cld
adc
stc
add
rcrl
nop
or
xlat
cltd
xchg
icebp
in
lods
xor
mov
movsl
aam
mov
imul
sbb
lock
sahf
mov
or
add
adc
cld
sub
mov
mov
subb
aad
dec
push
sbb
inc
cmp
jae
mov
es
push
or
mov
mov
repnz
cmp
pop
xor
fsqrt
cmp
sahf
push
test
mov
test
or
gs
jge
clc
clc
outsb
mov
dec
scas
adc
test
repnz
mov
inc
scas
lock
cmp
jl
push
push
xlat
add
vmread
inc
test
dec
rolb
fisttpl
imul
fisttpl
insl
and
jg
push
test
nop
fwait
subps
jge
das
xchg
movsb
nop
inc
push
lea
std
mov
ja
cwtl
ds
adc
cwtl
pop
push
and
cmp
lock
fimuls
ja
dec
add
shl
or
inc
add
fwait
push
xchg
cmpsb
pop
test
mov
movsb
and
cltd
xchg
inc
mov
mov
sbb
jne
xchg
sub
pop
inc
gs
mov
leave
or
rorl
sahf
cld
and
dec
jmp
ljmp
cmp
inc
rcl
fs
in
xchg
cmc
pop
xchg
mov
mov
mov
pop
sbb
sub
movsl
add
je
aad
stc
fwait
inc
jl
jg
dec
push
inc
fwait
mov
mov
ret
ljmp
xor
shr
outsl
mov
push
sbb
adc
arpl
xor
or
lods
and
daa
std
cmpsl
outsl
popf
in
sbb
cwtl
lods
adc
and
out
sub
or
pop
aas
add
mov
jmp
push
cmp
inc
icebp
inc
pop
lcall
mov
mov
fcomp
jae
stos
daa
pop
aam
add
movsb
add
push
or
aam
in
and
out
sbb
fcoml
xchg
mov
shrl
and
mov
lods
aaa
das
and
pop
in
es
pop
enter
mov
xor
xchg
xchg
test
mov
lods
jecxz
rolb
das
jno
xchg
pop
push
icebp
sub
xor
inc
or
cli
clc
fsqrt
and
inc
mov
inc
scas
loopne
lret
rcrb
loope
daa
test
lcall
clc
leave
clc
cmp
inc
push
into
cld
jbe
xchg
jmp
pop
inc
jb
inc
movsb
push
xchg
jle
mov
andb
inc
addr16
sub
mov
push
push
addr16
in
jns
movsb
jge
sbb
add
dec
and
jmp
push
clc
loope
and
push
in
fdivr
fistl
in
int
jnp
in
jecxz
les
pop
xchg
sbb
mov
je
out
lret
lcall
data16
lret
add
sbb
fnstcw
idivl
or
mov
loope
dec
pop
icebp
mov
rcll
pop
lods
pop
pop
xchg
adc
or
imulb
mov
sub
xor
int3
cmp
adc
es
and
out
clc
sub
dec
fsubrs
sbb
lcall
cmc
jl
jg
popf
mov
fcompl
testl
inc
jp
jl
push
loopne
fistpl
and
inc
aaa
sub
leave
add
and
xlat
lock
imul
mov
jo
loopne
inc
pop
mov
sbb
divl
out
and
inc
lock
ljmpw
popa
call
mov
das
mov
push
insl
dec
imul
push
mov
push
push
ja
or
insl
inc
int
mov
xchg
inc
movb
scas
sub
inc
cmp
aad
sub
imul
lcall
jno
shl
scas
div
cmc
loopne
cmp
lods
fldcw
mov
or
xchg
roll
xor
fsubr
jne
dec
mov
mov
scas
arpl
leave
xchg
inc
ret
pusha
pop
inc
push
mov
and
sub
into
add
xor
pusha
adc
test
and
or
or
xchg
fbstp
pop
das
inc
cs
sub
mov
imul
fwait
mov
mov
push
jge
cmp
rorl
push
fadds
mov
xor
sti
sbb
call
mov
in
pop
adc
dec
cltd
mov
cmp
push
insl
adc
shr
push
and
mov
add
testl
or
push
cmp
pop
sbbl
and
mov
sbb
or
enter
das
jno
xchg
loopne
mov
xor
sub
ss
pop
inc
and
stc
mov
xor
ja
lods
inc
cmp
cmp
jge
pop
adc
mov
cmpsb
adc
or
es
inc
fimull
mov
or
inc
nop
xlat
pop
push
xchg
movsb
push
mov
cld
pop
inc
cli
lods
dec
xchg
sbb
movsl
imul
aas
push
les
mov
pop
mov
add
mov
lods
cs
into
inc
sbb
push
sar
sub
adc
lret
addr16
popa
mov
mov
pop
fdivrl
inc
jp
ljmp
subb
mov
ja
pop
jmp
mov
jmp
cmpb
in
mov
stos
pusha
popa
and
mov
lahf
stos
out
xor
dec
cld
test
cmp
int
mov
outsb
data16
lock
or
xor
out
jne
imul
mov
jne
mov
iret
adcl
ljmp
xchg
jno
ret
sbb
dec
popf
pop
or
cld
mov
cmp
mov
pause
inc
dec
leave
dec
lret
es
ja
imul
jle
cmpsb
mov
xor
dec
aaa
xchg
xchg
inc
ret
mov
pop
sub
push
or
adc
adc
sahf
dec
fildll
mov
push
aam
adc
std
mov
jno
jecxz
out
and
dec
cs
pop
out
div
xor
xchg
push
daa
js
out
xchg
enter
xchg
fiaddl
fwait
lahf
sub
sub
or
cmp
insl
dec
dec
mov
imul
add
xlat
mov
mov
xor
je
sti
push
cltd
dec
rolb
ds
lret
dec
cmpsb
xor
shlb
repnz
cmp
std
nop
mov
out
jl
xchg
in
rorl
mov
xchg
jp
jbe
jbe
fldcw
lret
push
inc
cmp
adc
int
movsl
and
popa
xchg
pop
inc
stos
cmp
stc
ror
mov
sahf
add
jae
mov
in
gs
push
popa
imul
cld
push
je
test
xchg
mov
xor
cltd
dec
sbb
aad
dec
nop
imul
cmp
out
sbb
xchg
sbb
lods
or
push
sub
mov
sbb
push
push
fdivs
fstpl
xchg
push
int3
lret
fldcw
fwait
mov
idiv
mov
adc
or
out
xlat
xchg
push
in
pop
aaa
pop
jo
test
cmp
addr16
stc
icebp
sub
or
mov
pop
add
push
mov
add
lds
mov
cld
shl
les
std
sbb
jnp
inc
sbb
stos
mov
in
addr16
sub
jg
gs
cli
mov
push
fcomps
pushf
outsb
xor
pop
sbb
and
divb
lds
cmpsl
and
out
mov
sbb
add
jbe
mov
adc
jbe
add
bound
sti
nop
loop
jl
cmp
mov
lcall
or
mov
push
mov
shl
inc
xchg
lds
lods
stos
imull
sbb
push
iret
jnp
sbbl
xchg
les
push
int
sbb
mov
insl
xchg
repz
mov
pop
sbb
sarb
jp
sbb
push
pop
pop
sub
and
lock
stos
mov
push
daa
mov
lcall
ds
xchg
cmp
loope
jp
sbb
inc
das
aam
pop
sub
out
or
subl
jg
ds
mov
mov
sbb
xchg
hlt
lahf
xchg
push
xchg
ss
pop
cmpsb
pop
adc
mov
aam
sti
in
add
mov
adc
or
ret
xor
sahf
in
std
in
add
jne
ds
and
inc
mov
jae
out
mov
xchg
sub
mov
js
filds
sub
mov
icebp
hlt
les
inc
lret
xorb
sarl
pop
jae
inc
fwait
shl
adc
popa
xchg
cmc
mov
pusha
adc
push
mov
push
add
xchg
jecxz
insl
mov
xorb
sarl
andb
mov
mov
mov
mov
cmc
jmp
icebp
and
cs
adc
lods
lcall
mov
and
cmp
pop
lcall
in
xchg
push
inc
stos
mov
add
cs
jae
dec
dec
xor
sbb
pop
cld
jbe
aam
insl
lret
and
adc
jecxz
inc
out
rolb
mov
gs
sbb
iret
push
jg
or
mov
sub
xchg
icebp
incb
xor
test
xchg
jno
push
mov
mov
cmp
inc
repnz
mov
and
movsb
lret
fwait
xor
push
cltd
cmc
mov
fisubrs
dec
sbb
add
xor
sub
mov
fxch
inc
push
or
loope
cs
inc
push
fsub
cmp
das
jo
add
cli
int3
add
mov
sbb
pop
xlat
xchg
mov
or
std
into
mov
pop
add
push
test
ljmp
ja
push
faddl
xor
out
jne
and
pop
in
or
mov
xchg
in
mov
mov
fisttps
dec
xchg
mov
jnp
fnstsw
insl
add
lahf
imul
inc
pop
add
xor
gs
insl
jns
pushf
inc
jle
pop
push
pusha
pop
sbb
icebp
js
rorl
into
popf
lcall
mov
popf
stos
xor
ds
repnz
out
imulb
jge
lcall
inc
mov
jo
sbb
push
adc
mov
or
jno
push
xchg
xchg
jne
jg
ret
pop
js
xchg
lods
push
dec
mov
or
popa
add
fistl
insl
or
mov
xor
mov
test
loope
mov
adc
cli
inc
cmp
push
pop
add
jb
mov
push
lock
enter
lds
aaa
fisttps
fmull
in
and
xchg
subb
and
pop
mov
mov
lods
lods
dec
addb
mov
imulb
pop
je
movsb
pusha
aad
push
fwait
mov
dec
popa
pop
aas
mov
loop
aad
xlat
ljmp
jmp
out
jno
cmp
nop
bound
adc
cmp
pop
jo
jg
jno
pop
jl
test
jbe
or
adc
ret
int
loopne
jl
add
pusha
jge
call
inc
adc
push
jecxz
push
sub
outsl
xchg
dec
sub
adc
or
stos
movsl
mov
pop
push
fcmovnb
scas
mov
fstpt
cmp
sbb
adcb
repz
inc
xchg
inc
cwtd
fdiv
jo
insb
push
mov
mov
ret
push
inc
cmp
pop
sub
fistpll
jmp
or
jae
and
outsb
std
arpl
inc
xchg
ftst
clc
lds
les
into
aam
orl
mov
and
rcrl
pushf
loope
icebp
xchg
stc
or
cltd
push
cs
pusha
fists
jno
sahf
sbb
sub
repz
out
or
test
popa
daa
inc
mov
arpl
adc
mov
xor
ljmp
pop
aaa
imul
aam
push
sbb
jnp
in
and
into
mov
jp
dec
inc
stc
out
mov
stc
mov
stos
dec
fwait
jns
and
je
dec
sub
jnp
test
cmpsl
clc
movsl
or
mov
mov
push
add
xchg
sbb
jp
mov
pop
mov
add
xor
dec
test
pop
mov
shrb
inc
inc
pushf
aas
dec
loop
push
pop
fcompl
mov
cmc
mov
dec
mov
pop
adc
xor
outsl
out
sub
add
cs
pop
pop
cmp
into
jecxz
js
js
push
mov
adc
cli
out
out
dec
mov
mov
sub
mov
das
shll
or
shll
jmp
cmc
call
insl
lea
jp
cmp
cmp
jmp
cmpsb
xor
and
xchg
or
repz
cmc
imul
nop
cwtl
mov
jae
push
sub
movsl
fidivrs
shl
pop
inc
repz
xchg
adc
adc
push
dec
cmp
sahf
xrelease
pop
fs
je
mov
insl
mov
jmp
mov
lock
mov
and
jl
jmp
mov
dec
sahf
dec
fwait
pusha
enter
mov
sbb
cmpsb
imul
addr16
sti
cltd
rolb
add
pop
enter
jge,pn
clc
dec
cmp
mov
aaa
sbb
pop
cli
mov
pop
pop
std
and
adc
cli
inc
andl
das
mov
int
inc
sbb
insb
fadd
fisttpl
popa
xchg
call
pop
jg
xacquire
dec
xchg
test
fldl
insb
dec
shll
repz
jecxz
or
mov
loope
mov
in
test
add
imul
mov
or
inc
jge
mov
mov
push
shlb
arpl
imul
adc
insb
cwtl
mov
ficomps
inc
dec
call
ret
js
int3
add
jle
mov
xchg
or
xchg
loope
mov
gs
ss
jmp
aam
int3
pop
mov
jb
push
test
aam
lds
xchg
aas
add
sbb
shll
inc
aas
es
sub
cmpsl
or
xor
xor
cmpsl
xor
insb
jns
int3
movsl
mov
int3
pop
mov
inc
mov
and
add
mov
inc
in
jns
repnz
roll
dec
and
jge
cmp
mov
or
pushf
les
push
mov
sbb
mov
gs
popl
pop
clc
test
xchg
xchg
insb
dec
sti
xchg
mov
mov
jb
jge
outsb
test
push
sbb
push
or
fistpll
cld
or
out
ds
aam
push
pop
and
mov
popf
pusha
out
aad
pop
inc
xor
jne
mov
mov
out
fsts
das
notb
or
insl
mov
mov
or
lret
repz
or
and
xor
cwtl
mov
sbb
jb
cmp
jne
arpl
mov
rclb
mov
bound
sbb
loope
out
dec
sahf
push
ret
xchg
push
xchg
movl
jae
das
sub
dec
adc
jge
push
fnstenv
sub
adc
test
add
inc
addr16
test
xchg
jl
mov
andl
rcrb
push
dec
sti
or
enter
fcmovnbe
pop
jnp
cli
mov
idiv
or
adc
faddp
daa
fs
pop
mov
mov
inc
push
jg
pop
cmp
mov
arpl
lret
fucomip
jge
scas
insb
dec
push
outsb
sub
mov
or
je
sub
inc
das
pusha
adc
pop
pop
push
or
cld
icebp
mov
out
into
xchg
xlat
xor
add
popf
xchg
cmpl
jnp
inc
push
push
arpl
xchg
or
aaa
cmp
push
mov
add
mov
nop
lea
cmp
call
jns
mov
subb
ficomps
fdiv
sub
mov
fistpl
jne
jmp
mov
adc
or
sbb
fs
pop
xor
jns
jmp
jns
roll
into
mov
inc
out
enter
rcll
mov
jmp
imul
pusha
mov
gs
xchg
or
add
and
adc
push
sub
pusha
xchg
or
test
cltd
sarb
test
dec
lds
sbb
shl
or
ss
testb
jge
nop
xor
cmp
rsqrtps
ja
cld
mov
addr16
cmp
sbb
xchg
cli
faddp
test
xchg
stos
xchg
jae
imul
dec
jge
test
pushf
shll
jge
rcrb
mov
mov
cmp
or
adc
inc
rcrl
pop
testb
sbb
addr16
insl
push
pop
and
xchg
xchg
jle
or
inc
ss
pop
add
stos
shlb
inc
mov
add
pop
push
xor
ljmp
daa
or
push
and
scas
ret
nop
sub
jmp
mov
add
fs
sbb
sub
stos
pop
adc
cmp
mov
mov
jle
mov
sbb
aaa
push
outsb
xchg
mov
jae
popf
nop
push
adc
out
jb
fucom
push
fidivs
xchg
fsts
cmp
push
jmp
test
push
aad
ja
ja
ja
out
dec
jge
scas
mov
scas
cmp
test
and
pop
movq
mov
xor
enter
movsl
sbbl
int3
popa
add
mov
test
imul
ljmp
and
mov
jmp
lock
sbb
outsl
clc
xor
add
insl
jnp
sub
push
jne,pn
inc
inc
dec
mov
pop
cmp
dec
add
xor
daa
dec
push
imul
and
and
rorb
mov
aam
jg
movsb
mull
notb
aas
inc
test
and
dec
stos
insb
icebp
cmp
das
inc
test
out
add
shll
xor
ss
dec
dec
das
adc
cmp
fidivl
push
movsl
adc
mov
inc
jnp
clc
inc
and
sahf
push
push
lret
xor
fsub
mov
mov
in
adc
jbe
cmp
enter
daa
cmpsb
xor
inc
sub
pop
xor
test
pop
mov
jecxz
arpl
push
sbbb
lods
or
mov
cwtl
mov
fwait
pop
mov
seta
mov
dec
adc
xchg
cmp
cmpb
mov
push
rcrl
out
push
mov
stc
inc
cmpsl
xlat
data16
inc
xor
mov
cmp
inc
add
test
inc
cli
bound
cmpl
xchg
pop
movsl
mov
jp
push
mov
mov
dec
mov
mov
inc
add
push
test
data16
and
xor
fistpll
mov
mov
pop
out
cmp
ja
or
dec
stc
mov
jecxz
gs
mov
pusha
aam
ret
ret
js
fldenv
sar
push
mov
mov
aaa
test
dec
cmp
pop
ret
xchg
cmp
sbb
push
loopne
or
and
mov
and
jle
mov
enter
sbb
jb
test
scas
sub
ja
jb
repz
adc
sub
faddl
cwtl
scas
das
scas
mov
insb
arpl
or
imul
into
xor
in
mov
call
push
mov
xor
cwtl
jge
shlb
pop
imul
lret
mov
les
xor
cwtl
in
adc
cmpl
mov
sub
lock
jbe
mov
inc
mov
loopne
test
dec
push
jl
sahf
sahf
nop
test
repz
popf
mov
popa
int
inc
out
aaa
push
mov
inc
lahf
test
aaa
psubq
ljmp
push
sbb
jge
xchg
in
or
jge
add
bswap
ficomps
and
ds
add
pushf
cltd
cmc
jnp
dec
and
test
mov
mov
and
call
jns
dec
mov
aaa
popa
fldl
sbb
test
cmp
fildll
mov
cwtl
xor
nop
ljmp
lea
std
test
pop
inc
push
inc
lret
pop
mov
jb
adc
sbb
add
loop
xor
test
mov
loope
lret
stos
sub
addr16
inc
sub
data16
ret
push
clc
test
cmp
xchg
cmp
addr16
popf
dec
push
movsb
dec
scas
push
insl
das
inc
push
sub
fcoms
xchg
xchg
and
popa
popf
mov
iret
mov
adc
test
mov
and
cmpsb
inc
ds
xor
fisubrl
in
sub
leave
hlt
push
mov
shl
in
xor
icebp
insb
adc
scas
ja
xor
aas
jne
lods
ss
adc
aas
rcrb
icebp
mov
mov
pop
adc
imul
ljmp
lahf
xchg
xor
sub
fs
mov
sbb
loope
mov
loop
testl
into
fldenv
clc
sbb
and
dec
mov
lds
aas
insb
xchg
lret
push
addr16
js
jb,pn
imul
cld
or
outsb
and
jo
cmp
xor
loop
push
xor
mov
mov
adc
xor
add
dec
jl
jno
mov
xchg
cmp
mov
loopne
jle
out
cmc
add
movsb
shrb
push
scas
arpl
cmpsb
sbb
mov
mov
in
push
and
mov
je
ds
hlt
cmc
sarl
loope
or
mov
xor
jb
mov
loope
out
lods
addr16
imul
dec
pop
fstpt
sti
hlt
jg
popa
mov
inc
ret
mov
and
xor
fwait
lds
dec
adc
add
cmp
sub
dec
and
push
or
fbld
pop
push
inc
int
mov
pop
xor
loop
xchg
add
popa
and
shll
dec
xor
add
nop
mov
in
lret
test
pop
inc
scas
loop
out
scas
addb
idivl
lock
pop
sbb
cmp
push
or
cmpsl
add
add
push
adc
xor
pusha
mov
xor
pop
dec
mov
rorl
shl
lret
and
fisttpl
mov
out
sub
repz
orb
xlat
rclb
repz
xchg
push
add
xor
rclb
cld
int
mov
inc
push
sti
loope
and
dec
and
sub
mov
lret
out
mov
push
data16
jmp
pop
jnp
cmp
scas
cwtl
xchg
jns
bound
and
sub
sti
fisubrs
push
iret
sti
sbb
mov
add
sbb
inc
pop
xor
fstpt
ljmp
int3
push
sbb
pop
out
push
pop
lds
pop
pusha
std
arpl
sub
jb
push
lret
add
mov
xlat
cmpsl
push
aam
leave
in
ss
lret
mov
sahf
dec
xor
jl
push
into
out
mov
aam
push
out
adc
or
int
jge
mov
icebp
pop
scas
mov
out
cmpsb
xor
xchg
orl
lahf
out
push
out
jl
xor
scas
adc
scas
push
push
jle
xor
lahf
in
movsb
sub
cmp
shlb
sahf
fistpl
int
xchg
inc
hlt
int3
iret
mov
ficoml
mov
sub
daa
imull
stc
xlat
jbe
pusha
sub
cmpsl
pop
cmpsb
lcall
icebp
cmp
dec
inc
inc
mov
imull
jmp
jnp
fwait
sub
mov
outsb
xor
iret
cli
and
cmp
mov
pop
and
jp
lcall
add
test
sar
dec
push
jmp
ds
pop
lods
and
mov
jmp
les
mov
adc
cmp
es
orb
les
lds
or
mov
mov
aam
lea
or
outsb
jp
jnp
fsubl
mov
das
test
xlat
pop
and
dec
stos
rorl
sar
xchg
fsubrl
aas
lret
mov
inc
test
sbb
ss
dec
loope
pop
mov
mov
mov
nop
cmpsl
cmp
xchg
stc
mov
dec
nop
cmp
cmp
ret
cmpsl
mov
out
jmp
sbb
dec
adc
fisubrs
sbb
mov
mov
es
jl
icebp
popf
xor
decb
mov
outsb
outsl
inc
sti
jmp
fs
pop
push
adc
sbb
jnp
clc
adc
lods
les
in
mov
sbb
cmpsl
dec
ljmp
sub
mov
enter
iret
mov
jae
aaa
and
pushl
jno
push
clc
adc
fisubrl
fstl
cltd
sub
sbb
dec
lock
dec
pop
jns
inc
push
jecxz
lods
xor
movsb
dec
rcl
mov
and
dec
aas
ja
pushf
and
jp
push
faddl
mov
and
stos
testl
pop
out
mov
dec
fidivl
dec
sbb
inc
sahf
jnp
mov
dec
inc
aas
mov
pop
lds
add
or
test
scas
sbbl
fcmove
sbb
sahf
adc
inc
pop
xchg
addr16
pusha
fnstcw
repz
decb
cs
rolb
int
aas
lret
mov
insl
out
ss
mov
popf
ret
dec
and
cmp
xor
mov
loopne
push
out
scas
jp
shrd
or
push
es
aas
xorb
mov
sbb
enter
xor
enter
mov
sub
push
inc
add
push
mov
inc
xchg
adc
std
outsl
in
fstl
pop
dec
push
inc
jns
xor
add
cld
cmp
mov
push
dec
fs
jae
mov
cli
inc
or
lds
push
jmp
jmp
cmp
and
xchg
jl
lea
mov
jmp
in
push
ficomps
push
fwait
pop
lods
add
xor
arpl
andb
scas
imulb
lods
mov
hlt
or
mov
in
mov
loop
call
inc
and
jl
sbb
mov
xor
aam
or
push
lods
dec
lret
les
xor
lret
pop
das
inc
xchg
sbbb
mov
jmp
aaa
clc
out
int
jle
sbb
mov
pusha
sbb
clc
fidivl
mov
hlt
jecxz
or
stc
cmc
xchg
jbe
jmp
maskmovq
negl
repnz
cmp
xchg
xchg
movsb
xor
rorb
lods
loop
sbb
jns
loope
fisttps
inc
adc
jge
in
repnz
push
stc
or
or
adc
mov
sbb
jge
pop
mov
nop
loop
addr16
mov
jg
and
inc
rcrb
gs
popa
test
dec
sahf
push
xor
das
cmp
shll
fimull
fldenv
fistpl
ret
or
pop
pop
jnp
and
aad
xor
lods
dec
outsb
lock
xchg
les
mov
cmp
lods
add
sbb
dec
shrl
pop
and
dec
cmp
inc
jns
je
cmp
loop
popl
outsb
sbb
leave
outsb
into
fwait
adc
cmp
inc
push
ss
mov
jnp
mov
ds
ljmp
sub
aam
add
cmpsb
sub
mov
dec
or
cmp
mov
and
push
into
es
sub
fcmovnu
pop
xchg
aam
and
and
cmpsl
sbb
hlt
pop
sub
pusha
xchg
mov
dec
pop
add
in
fwait
stc
add
fidivrl
jmp
cmp
sbb
mov
xlat
sub
jno
pop
scas
decl
movsb
push
fistps
rclb
jbe
dec
adc
xor
mov
sbbl
test
sbb
xor
add
pop
repnz
and
lods
or
sub
outsb
xchg
dec
mov
inc
ret
inc
xchg
mov
mov
xor
add
xchg
jae
popf
jns
push
stc
rcll
ja
leave
xor
fbstp
cmp
jmp
fiadds
cld
mov
xchg
daa
repz
adc
cwtl
mov
test
dec
ds
xchg
xchg
push
push
or
sub
pop
mov
je
pop
scas
and
lds
int3
xchg
sbb
insl
xchg
cld
sub
push
lret
jle
enter
dec
js
mov
out
xchg
fsubs
dec
xchg
clc
in
mov
enter
pop
xchg
push
stos
or
add
lods
sub
xchg
push
or
dec
pop
push
xor
push
int
pop
popl
bnd
scas
add
cld
nop
nop
and
mov
fnstenv
fadd
adc
loop
adc
mov
stc
out
dec
stos
inc
les
daa
ljmp
stos
adc
test
mov
xchg
subl
jge
cmp
pop
and
push
mov
push
add
cwtl
fnsave
sbb
pop
sub
jmp
lahf
fcmovne
paddsw
or
shrl
fwait
push
repnz
jmp
sub
shll
frstor
mov
xchg
sbb
xchg
in
jmp
test
push
bound
cmpsb
cmp
add
call
jg
lods
cmp
mov
push
inc
sti
mov
add
out
mov
inc
add
orl
bound
push
icebp
cwtl
iret
pop
int3
jmp
sub
filds
mov
xlat
lret
aaa
scas
in
sub
cld
lds
jp
and
clc
fnsave
hlt
aad
lea
addr16
loope
mov
mov
cmpsb
dec
ss
cli
test
lahf
inc
inc
cmp
insb
xchg
rcl
fidivrl
dec
sub
dec
fwait
sbb
xchg
fcmovnbe
outsl
or
cmc
call
repz
mov
and
xchg
mov
jns
movsl
cmpsl
xchg
cmp
inc
mov
jp
add
stc
cmpsl
inc
jle
dec
fcoms
data16
popf
lods
or
sbb
movsb
and
cmc
jmp
loopne
mov
sub
mov
jecxz
and
sbbl
out
test
cltd
mov
add
movsb
inc
repz
push
xchg
aam
hlt
mov
xchg
cmp
xlat
sbb
xor
dec
mov
les
sub
and
sbb
sbb
mov
mov
sbb
cmpsl
pop
js
pop
jns
jns
xor
and
or
popf
dec
cmp
inc
out
stos
cmp
jecxz
add
inc
pop
adc
les
imul
mov
push
jl
adc
xchg
jns
mov
fldl
adcl
jb
mov
mov
push
movsb
out
and
aaa
jle
cmp
sbb
sbb
shrb
shl
or
icebp
adc
imul
add
jnp
sbb
jae
data16
andb
sbb
std
xor
mov
or
xchg
mov
aad
mov
push
test
cmp
cwtl
sub
imul
adc
pop
inc
mov
int3
adc
sbb
clc
jbe
push
rolb
into
add
add
lea
mov
inc
lcall
xchg
jl
scas
das
sbb
or
fsubp
arpl
mov
les
sub
dec
lcall
mov
pushf
push
pusha
pushf
pop
xor
jno
adc
and
mov
stc
mov
nop
cmpl
mov
out
push
dec
hlt
movsl
leave
dec
nop
sbb
jne
test
xor
fldl
outsl
adc
adc
push
lock
rcrb
out
shll
mov
pop
xor
adc
lret
push
fstl
inc
xchg
bound
in
dec
pop
ja
xor
cmpsl
aas
adc
sbb
adc
outsb
jne
inc
mov
pop
pushl
sub
jge
push
adc
cmp
rcrb
and
sub
mov
stc
arpl
clc
aad
jl
das
mov
push
jae
insl
lahf
insl
mov
stc
add
mov
mov
mov
stos
jmp
mov
repz
jno
cmc
pop
fwait
xchg
testb
stc
adc
sub
sbb
lret
mov
and
push
sbb
jl
mov
lret
xchg
popf
js
shll
cmp
popf
cmpsb
dec
jnp
call
jl
xchg
pop
sbb
ds
inc
xlat
sbb
mov
jae
inc
scas
adc
add
fstp
cli
pop
push
xlat
mov
sub
cmpsl
shr
cmp
or
aaa
pop
addr16
adc
sahf
aam
stos
ret
fwait
in
push
call
mov
movsl
pop
scas
pop
cmp
leave
mov
jb
enter
lds
mov
xchg
sbb
mov
add
adc
jp
or
jbe
xchg
push
popf
cmpsl
imul
shl
daa
mov
xor
fiaddl
pop
jbe
push
add
cmp
popa
xor
cwtl
or
inc
lahf
sbb
mov
mov
inc
mov
into
stos
scas
add
data16
sub
movsl
fstpl
xlat
mov
xchg
mov
out
jns
notb
xchg
add
rcrb
clc
scas
mov
insb
int
loopne
or
xor
add
inc
lods
loopne
adc
out
imul
xchg
fcmove
jne
data16
inc
and
cmpsl
je
and
cmpsl
sub
std
sbb
jnp
pushf
mov
aaa
inc
addr16
mov
mov
ja
add
push
xchg
enter
jge
cld
xor
out
push
cmp
out
divb
std
pushf
cld
mov
cmpl
jge
mov
lock
dec
outsl
imul
in
test
fbld
pushf
xchg
std
stos
pop
add
lds
mov
dec
fcmovb
insb
mov
push
addr16
sahf
push
shrb
enter
or
jo
dec
cwtl
adc
in
pop
xor
imul
ret
mov
or
mov
pop
inc
push
loope
jl
mov
sti
xchg
imul
cld
mov
arpl
aaa
adc
mov
push
and
xchg
sbb
das
mov
loop
jle
mov
jne
push
jo
into
arpl
ljmp
push
xlat
add
arpl
cmp
rclb
mul
add
or
add
incl
push
fs
mov
loopne
test
pop
xchg
add
sahf
gs
and
sbb
mov
pop
or
aad
push
or
stc
add
leave
imul
imul
clc
mov
ret
mov
or
rclb
pop
mov
xor
insb
xor
mov
pop
pop
aaa
mov
ds
imul
clc
push
adcb
gs
sub
leave
fsubs
xchg
ss
xchg
jnp
cmp
mov
fwait
fs
mov
adc
mov
in
icebp
je
cmc
std
inc
leave
push
add
sub
cmp
push
rclb
jmp
lret
or
xlat
inc
mov
popl
ss
mov
mov
dec
adc
cmovle
sub
mov
ss
or
dec
inc
mov
push
int
enter
lcall
xor
or
adcb
lret
outsb
inc
pop
mov
out
lods
loope
cli
ret
aad
test
js
leave
and
stos
testl
push
jle
or
stc
dec
out
stos
and
cld
jecxz
in
inc
jnp
adc
dec
cmpsl
leave
dec
mov
loop
xchg
sub
inc
mov
pushf
out
es
ja
ror
cmp
xor
pop
jno
pop
adc
icebp
sbb
adc
mov
in
inc
adc
xor
rolb
mov
stos
lock
push
imul
add
in
out
ret
lcall
xor
xor
jmp
and
testb
pop
xchg
push
mov
adc
movsl
js
jne
jae
mov
sarb
mov
pop
fisubl
jb
dec
xor
ret
sub
addb
iret
out
out
push
mov
xor
pop
sbb
dec
popa
jbe
shlb
xchg
mov
scas
call
jmp
mov
iret
dec
cltd
stc
pop
xchg
sub
movsl
and
loope
inc
test
push
mov
inc
leave
or
test
sahf
gs
add
cmp
mov
and
in
outsl
repnz
push
aaa
in
stos
and
sub
inc
cmp
callw
inc
pop
lods
jge
sbb
incl
dec
orl
stos
xchg
cmp
iret
sbb
adc
pop
mov
pop
push
stos
xor
cs
in
inc
cltd
cmp
pop
mov
std
jle
or
cltd
jle
mov
lock
dec
ffreep
icebp
add
mov
sbb
ret
ljmp
push
lret
ret
ds
push
lock
mov
test
clc
cmp
testb
inc
loope
sbb
aaa
fsubrp
mov
jae
pop
pop
xchg
pop
jg
xor
stos
push
push
cmp
sbb
les
out
pop
jbe
scas
push
inc
sub
mov
mov
pop
xchg
inc
leave
xor
fwait
lods
cmp
lds
mov
push
lods
and
inc
mov
in
push
inc
pop
ds
pop
dec
and
inc
mov
adc
pop
shlb
repnz
icebp
shrl
sbb
in
xchg
iret
pop
out
aad
sub
push
push
stc
dec
sub
and
sbb
adc
out
adc
push
pop
xchg
test
mov
movsl
fidivrs
mov
cmpsl
cmc
push
incb
out
mov
or
lret
pop
mov
xor
mov
frstor
dec
lea
jecxz
xchg
sub
mov
jno
sarb
test
shrb
mov
and
stos
cmpsb
movsb
rcl
shll
pop
mov
and
inc
pop
cs
lock
inc
mov
xor
out
les
repz
movd
push
mov
sbb
clc
jne
push
shll
jp
mov
fistl
data16
jno
test
mov
mov
and
mov
bound
xchg
sbb
in
push
popf
cmp
and
sbb
dec
das
aam
xchg
xchg
ss
clc
hlt
mov
rorl
fisubs
cli
pop
stc
sbb
add
addr16
frstor
scas
sub
inc
adc
mov
andb
push
aad
mov
pop
mov
fmull
mov
and
push
lds
cmp
jecxz
test
cmpsl
mov
mov
xchg
jp
jns
push
jno
mov
mov
sahf
or
mov
cld
push
icebp
frstor
mov
jb
pop
mov
in
in
fidivs
or
dec
jmp
fistpl
sbb
mov
mov
sub
insb
mov
idivb
addr16
pop
and
mov
fwait
das
jle
stos
jnp
in
stos
in
scas
cld
jg
lret
aam
clc
into
in
mov
icebp
mov
push
testl
fistl
push
or
inc
dec
pushf
addr16
lahf
sbb
rcll
inc
xor
jmp
int3
push
lock
enter
call
frstor
or
dec
add
adcl
jno
das
insl
or
jl
int3
mov
outsb
mov
push
adc
mov
mov
loope
cld
fprem1
imul
lret
pop
orb
loope
sub
push
cmp
dec
fsubrl
std
add
push
xlat
call
push
or
cltd
rol
out
stos
adc
pop
repz
jno
sbb
mov
rcll
inc
inc
out
add
add
stos
call
add
jge
or
push
cli
adc
lret
xor
movsl
jmp
pop
mov
and
pop
negb
xchg
jg
sbb
loop
scas
pop
out
sub
cltd
xchg
rol
push
mov
lcall
pop
jmp
in
and
cmpsl
sub
cltd
sub
mov
inc
adc
daa
dec
repz
jmp
add
and
jno
mov
pop
mov
xor
adc
xor
xchg
cmpsb
dec
lcall
loop
dec
xchg
or
iret
ljmp
jne
cmpsl
cmc
jno
sub
loop
into
xchg
cmp
dec
inc
ljmp
push
outsb
int
cltd
inc
lods
jmp
loop
pop
je
orl
adc
sbbb
ret
fcompl
sub
jno
fdiv
push
push
mov
push
jmp
out
fidivs
xchg
add
aad
xor
ret
xchg
and
scas
rolb
pop
or
cmc
cmpsl
popf
dec
stc
std
das
mov
xor
pop
inc
xchg
or
rcl
mov
testb
shlb
mov
test
mov
inc
fsubr
movb
mov
daa
or
xchg
and
mov
mov
fdivrs
push
mov
xor
ss
mov
out
pop
stos
shl
mov
mov
iret
add
mov
mov
inc
dec
rclb
clc
xchg
xor
pop
and
pop
push
add
jmp
push
sub
and
mov
mov
in
les
in
dec
stos
dec
into
inc
fsubrl
pop
jle
arpl
cmpsl
mov
push
enter
add
das
add
inc
aas
jp
jns
jg
test
mov
cmp
inc
push
flds
pop
stos
dec
pop
je
sbb
outsb
test
xchg
popa
call
in
cmp
mov
mov
imul
or
mull
mov
js
mov
sbb
imul
pop
xchg
add
cwtl
fisubrl
outsl
mov
xchg
stos
xchg
mov
push
repz
es
mov
xlat
ljmp
inc
push
scas
mov
push
out
jo
mov
inc
repnz
faddp
mov
call
pop
jb
movsb
shlb
arpl
es
and
sbb
mov
cli
fldl
dec
clc
xor
int3
jge
add
mov
mov
and
adc
fdiv
mov
xchg
test
mov
cld
sub
mov
add
mov
fdivrl
imul
pop
push
cli
insl
sbb
dec
adc
xchg
call
jg
mov
or
cmc
cli
sbb
into
sbb
jp
xor
std
movsl
push
and
push
or
loop
movsb
jne
cmpsb
cltd
dec
pusha
addr16
xchg
inc
idivl
mov
sub
push
test
packssdw
enter
or
imul
inc
pop
cld
sti
xchg
jp
mov
mov
fwait
jae
jg
loopne
or
push
pop
push
call
xchg
cmp
jb
mov
lds
das
dec
dec
pop
les
sbb
test
movsb
mov
lcall
or
mov
mov
xchg
ds
ljmp
enter
mov
mov
ret
insb
cmpsl
push
aas
stos
insl
out
xorl
and
mov
xchg
lahf
jmp
and
cli
popf
mov
add
clc
dec
lods
fneni(8087
bound
ret
pusha
stos
sub
fs
loope
daa
leave
inc
adc
test
mov
loope
pop
sub
mov
push
call
or
xor
cmp
sub
inc
inc
insl
arpl
imul
jmp
jbe
cld
imul
les
pop
pop
pop
xlat
dec
ja
jae
and
push
sub
adc
cwtl
cli
jmp
pusha
dec
add
repz
test
in
inc
xchg
das
mov
cmp
cld
adc
mov
add
push
xchg
mov
jbe
fsubrs
aad
and
insb
adcb
lock
xchg
push
jge
jecxz
adc
push
mov
mov
popa
fimuls
test
xor
xchg
jmp
mov
dec
faddl
cmpsb
push
and
loopne
es
dec
bound
sub
pusha
nop
dec
jnp
mov
sahf
xor
cmp
mov
dec
pop
xchg
test
call
mov
gs
roll
bound
ficomps
das
cmp
ror
jmp
jbe
mov
daa
jp
lea
imul
aas
and
xchg
xchg
nop
or
in
int3
and
and
mov
and
inc
jg
stos
push
fidivrl
loopne
adc
dec
lods
xchg
rcrl
pop
mov
mov
mov
inc
xor
lds
jecxz
mov
push
bound
sbb
adc
out
sbb
sub
adc
out
pop
mov
inc
lahf
lock
xor
lret
subl
std
fistps
cld
jae
push
jmp
jmp
testl
ja
dec
fs
call
dec
adc
iret
or
dec
xchg
ret
inc
dec
mov
dec
sbb
mov
aas
mov
pusha
and
push
in
jnp
call
stos
mov
outsb
nop
jno
cwtl
test
stos
loop
sbb
xor
addb
inc
mov
mov
inc
mov
arpl
xchg
ds
mov
dec
and
pushf
pop
gs
mov
adc
mov
lahf
mov
pusha
sbb
jnp
push
cmp
pusha
or
out
adc
pop
push
jns
imul
out
fs
xchg
and
in
sub
adc
into
jns
pushf
scas
enter
push
aas
arpl
pop
fst
xchg
ret
sub
js
dec
mov
jb
cmpsl
decb
xor
into
loop
inc
ret
movsl
dec
mov
add
jl
adc
xor
ret
add
cmp
icebp
lcall
stos
adc
adc
aas
mov
xchg
dec
inc
das
imul
movsl
adc
mov
and
mov
xor
jb
outsl
add
dec
push
daa
in
push
fldenv
hlt
stos
cld
jb
movsb
icebp
ds
mov
add
fwait
pop
adc
je
aad
stc
ljmp
addb
test
jns
pop
push
xorl
or
es
mov
adc
lock
outsl
in
lods
test
aas
xor
shll
lea
push
mov
in
cs
enter
cmp
dec
and
das
negl
lret
pop
outsl
imul
mov
dec
xor
in
fdivl
inc
test
xchg
test
mov
stos
jp
mov
std
or
jle
jne
int3
push
add
insl
jb
inc
fwait
mov
cmp
jns
pop
push
inc
mov
pop
or
pop
out
test
sbbl
xchg
icebp
ja
push
sub
mov
pop
sbbl
mov
in
divb
mov
repnz
cmp
xchg
in
repnz
mov
je
mov
loop
in
ret
add
rcrl
xchg
sbb
mov
cmc
adc
call
shlb
add
ljmp
aam
inc
mov
insb
mov
shll
add
xchg
and
fsubrs
mov
repz
sub
or
insl
mov
sahf
add
push
inc
adc
shll
push
movsl
xchg
push
pop
xchg
imul
in
jns
xchg
push
dec
test
push
int3
les
fs
mov
lret
iret
and
test
rorl
jne
out
pop
xchg
jnp
nop
sub
xchg
fcmovne
mov
inc
mov
je
pop
cmpl
repz
movsb
jle
into
push
inc
movsl
sbb
push
add
outsb
inc
adc
pop
ja
neg
clc
mov
xchg
xchg
adc
out
insl
push
mov
mov
xor
test
stc
pop
movsl
push
xchg
daa
ficoms
mov
push
out
pop
sub
mov
cltd
lret
das
mov
jne
aas
shlb
dec
cmp
ret
pop
pop
and
popf
jp
sbb
adc
leave
mov
add
out
push
das
fwait
mov
lock
ljmp
mov
pop
mul
mov
xchg
dec
lret
out
test
imul
mov
mull
dec
int
in
inc
mov
push
sbb
pop
sub
lret
pop
jo
int3
shrl
pop
jno
or
enter
xor
mov
ret
in
push
xorb
mov
loop
je
por
jmp
lods
inc
inc
pushf
dec
mov
and
inc
jbe
das
xchg
inc
jnp
notb
cmpb
mov
mov
andb
lds
pushf
dec
or
xor
repnz
jg
shll
pop
subl
adc
cs
aas
scas
sbb
aad
xor
rclb
in
jecxz
jno
fistps
cli
jo
arpl
add
and
adc
or
add
lret
dec
ret
xchg
or
inc
loopne
sub
and
cmpsl
mov
cmp
scas
xchg
loopne
adc
mov
enter
popf
ljmp
test
push
pop
out
adc
dec
sbb
pop
sbb
cmpsl
jl
sbb
testl
inc
inc
sub
or
je
pop
aad
pop
add
cwtl
icebp
lock
rol
mov
cmpsb
rcr
xchg
ljmp
adc
adc
add
sbb
mov
subb
cmp
insl
fwait
cs
mov
jle
inc
dec
test
inc
inc
aad
aam
pop
lods
inc
pushf
pop
jl
xor
ja
out
jae
mov
pop
add
xor
sti
mov
dec
or
xlat
xor
fistl
mov
mov
mov
out
scas
sub
xor
imul
int3
jnp
jne
insl
mov
push
xchg
sub
adc
mov
and
mov
add
and
outsl
mov
mov
icebp
xchg
je
dec
fsts
lahf
push
lock
stc
cmpb
ret
movsl
int3
pushl
xor
xchg
push
and
xor
pop
sub
popf
cmp
mov
das
cmp
inc
sbb
int3
ja
jbe
fidivl
dec
lds
adc
pop
mov
fs
test
mov
mul
mov
jae
stos
inc
into
mov
dec
push
bnd
mov
pop
fimull
vprotd
cld
out
repnz
adc
shrb
test
xchg
loopne
mov
lock
out
jne
fnsave
xor
jbe
dec
in
test
push
scas
add
lds
mov
in
xchg
jo
dec
add
adc
mov
addl
andb
and
das
cld
add
lahf
sbb
clc
sbb
xor
sar
in
xchg
jo
mov
repnz
mov
and
and
add
dec
or
push
cmp
mov
lods
lcall
rcll
ret
pop
sbb
and
push
add
mov
dec
mov
leave
push
push
jecxz
outsb
mov
int
pop
andb
xchg
add
pop
push
inc
imul
wrmsr
aam
jg
ret
mov
xchg
mov
mov
sarb
add
aam
xchg
cmpsl
inc
stos
and
cmp
lods
sbb
jnp
dec
mov
into
cmp
dec
popa
shrb
mov
mov
popa
xor
xchg
and
xor
movb
adc
add
dec
jl
repz
into
push
xor
xchg
jmp
or
jle
push
push
loop
sbb
dec
inc
jbe
dec
sbb
dec
sub
mov
ret
fwait
leave
xchg
xchg
mov
test
scas
loopne
adc
test
mov
sgdtl
dec
mov
rcl
cld
pop
sahf
and
sbb
add
and
fmul
loop
rorb
xor
jl
mov
ja
sbb
jne
fstpl
xchg
bound
push
es
mov
mov
inc
subb
sub
pusha
stos
sub
rcrl
fsqrt
xor
cmp
jb
jle
femms
nop
ret
lds
add
outsb
adc
sub
int
ficompl
popf
dec
sub
cmp
cltd
adc
cld
neg
jb
std
inc
cli
xor
into
dec
mov
push
or
test
jp
mov
and
mov
jae
repnz
add
inc
in
mov
cmp
add
int3
mov
shlb
and
sbb
loop
push
adc
xor
xor
rorb
shrl
xchg
stos
inc
das
add
scas
add
inc
lock
test
outsl
inc
mov
and
xor
jmp
in
aam
add
xor
das
and
ret
push
fldt
repz
xchg
test
cmp
data16
fldcw
pusha
lcall
shl
out
das
add
je
ror
arpl
rcrb
dec
fistl
lods
stc
or
sub
push
dec
fs
pop
pop
inc
jmp
cmp
out
loopne
push
adc
leave
or
xlat
into
cmp
mov
mov
scas
mov
sahf
jnp
das
fstpt
sub
pop
sub
scas
lock
push
xor
aad
loope
xchg
and
or
insb
fisttps
xchg
stc
in
pop
pop
pusha
sub
mov
outsl
fwait
xchg
fldenv
test
or
dec
add
cmp
or
popf
sarb
dec
adc
add
jno
shlb
jge
jo
sbb
fnsave
fdivs
ficoms
mov
and
cmpsl
cld
dec
jae
fistps
mov
test
add
lret
lock
dec
jp
fs
fcmovbe
mov
dec
popa
mov
fwait
and
or
sub
ret
out
dec
xchg
and
popf
pop
arpl
and
sbb
mov
jmp
sub
rclb
stc
mov
adc
mov
pusha
pop
mov
fstpl
iret
xchg
addr16
psubd
or
fs
call
dec
inc
cmp
adcb
call
cmp
adc
mov
and
mov
mov
cmp
mov
shrl
clc
sbb
lcall
push
mov
ljmp
and
incb
push
xor
inc
ja
mov
xlat
or
pop
and
jmp
stos
mov
mov
xchg
flds
jnp
mov
push
cli
and
jne
jmp
mov
aam
ja
mov
pop
cmp
mov
icebp
or
cmp
xor
es
repz
lock
and
sbb
cmpsb
pop
bound
adc
push
jae
pop
sub
sbb
cmpsb
ret
shrl
xchg
hlt
or
xchg
movsl
fwait
xor
mov
xor
ljmp
mov
sub
andps
lods
xchg
imul
or
in
mov
int
xor
pop
fwait
les
add
cmpsl
popl
mov
insb
popa
jge
pop
mov
dec
ret
ss
sub
pop
cmp
icebp
mov
fcmovne
stos
repz
imul
sbb
lea
inc
ficoms
mov
mov
out
or
sbb
push
mov
ljmp
cmc
xor
rol
inc
ljmp
xchg
adc
push
aas
push
addr16
sub
sub
rorl
daa
js
outsb
out
dec
and
mov
xor
jmp
outsl
and
push
clc
jle
jp
jle
sbb
clc
mov
cmp
add
in
sbb
in
movsb
or
mov
cmpsb
and
adc
adc
mov
lds
outsl
cmp
fidivs
in
imul
and
repz
arpl
cltd
jno
aaa
stos
push
sbb
xor
push
jnp
pop
pop
dec
in
xchg
sub
sbb
shlb
cmp
ret
cmp
movsl
push
sbb
repz
cltd
lods
adc
lds
lret
sbb
cmp
and
xchg
lfence
loope
loopne
es
sbb
icebp
lcall
cmp
call
jno
lods
cmpb
dec
lahf
cwtl
sub
adc
jbe
jle
call
push
loop
mov
sahf
mov
std
cltd
dec
xor
xchg
sarl
inc
pop
mov
popa
mov
adc
xchg
fidivrl
mov
lret
arpl
or
stos
sub
jl
jl
xchg
out
mov
test
ror
mov
xor
out
push
daa
mov
gs
push
mov
inc
mov
lcall
sub
pushl
lret
inc
aam
add
test
pop
imul
dec
maskmovq
testl
lds
adc
cli
sbb
push
inc
pop
cmp
pusha
cmp
jecxz
divb
xchg
orb
scas
cmp
ljmp
push
add
pop
gs
jg
imul
push
inc
push
dec
push
notl
mov
mov
and
add
xchg
sub
mov
mov
pop
and
sbb
pop
pop
shrl
sub
mov
sub
fcomps
sub
cld
stc
mov
inc
adc
dec
rclb
aaa
cwtl
cmpsb
jbe
rcl
xchg
or
mov
jge
inc
mov
xchg
add
jg
xchg
xor
mov
add
out
faddl
fucomip
mov
pop
mov
pop
fcmovu
jb
xor
pusha
outsb
fsubs
cltd
in
jae
cmp
test
lods
cmc
fwait
test
aam
lea
push
mov
ljmp
aas
adc
push
mov
jns
leave
jecxz
mov
or
mov
data16
repz
aam
cld
inc
and
add
mov
and
lret
push
jl
and
jle
ds
and
push
xrelease
stos
insb
aaa
cmp
xor
mov
fnstcw
ja
push
adc
pop
pop
inc
sbb
mov
push
std
cwtl
pop
add
pop
int
in
popa
dec
and
lock
jbe
cs
cmpsb
fld
fdivrs
inc
out
mov
imul
push
mov
roll
xchg
cmpsl
cmp
loop
subl
inc
xchg
mov
and
inc
pop
xchg
sbb
mov
mov
repnz
pop
xor
cmp
inc
fstps
cmp
push
movsl
dec
xor
loop
cmc
scas
xchg
hlt
push
jge
add
cmc
flds
push
cld
es
mov
mov
jl
clc
inc
pop
sbb
js
shlb
inc
sbb
add
adcl
out
adcb
call
dec
push
hlt
hlt
into
cli
mov
sti
mov
scas
push
xchg
cwtl
lds
into
sub
fsts
mov
jns
test
xor
daa
mov
test
cmp
jge
or
outsb
jo
sbb
xor
sub
ret
arpl
and
mov
push
mov
test
lea
imul
cmp
dec
testl
cmp
daa
push
mov
cmc
sti
testl
insl
adc
pop
jnp
add
jae
es
jae
push
sbb
jae
in
adc
push
outsl
stos
fnstcw
cmp
movsl
mov
or
mov
pop
cs
fbld
outsb
adc
push
jae
mov
stos
call
addr16
pop
and
pop
jbe
pushf
jno
fldt
inc
rorl
sarl
out
ret
sbb
mov
aaa
or
mov
xchg
xchg
jg
aam
mov
aaa
mov
mov
neg
sbb
add
add
mov
lds
imull
fs
arpl
test
pop
loopne
mov
adc
adc
test
mov
outsl
inc
je
or
and
or
ss
xchg
mov
push
ret
inc
test
into
loopne
mov
xor
repnz
mov
inc
sahf
mov
lds
das
pop
loopne
cld
stos
cld
cltd
xchg
scas
inc
and
sti
fcmovnb
loop
mull
icebp
xchg
sub
cmpsb
stos
add
add
xor
cmc
in
dec
cmp
jle
arpl
xor
lahf
cmc
sbbl
in
jno
inc
dec
jecxz
repnz
aam
or
pop
fiadds
inc
popf
sahf
cmc
inc
cld
ss
imul
rorb
lret
pop
sbb
cmp
clc
call
add
fsubr
push
std
scas
sbb
icebp
pop
insl
xchg
xchg
lock
mov
sub
and
jmp
jecxz
add
daa
outsb
aam
mov
test
sbb
lock
addl
loopne
ror
mov
dec
mov
je
pop
ljmp
xor
int3
mov
mov
mov
xor
cli
cs
lds
add
mov
mov
std
cmpsl
sub
in
mov
lds
test
push
cbtw
test
popf
pop
and
pop
sti
stc
testl
xor
mov
dec
sbb
popf
icebp
jbe
mov
add
aam
movsl
sub
jge
and
lahf
int3
int3
jno
xlat
sbb
clc
mov
xchg
movsb
imul
fbstp
mov
push
loopne
das
cmp
mov
daa
pop
movsb
shl
xchg
ja
in
cmp
nop
shll
pop
popf
movsl
xlat
sub
daa
test
xchg
test
sub
shll
jmp
cmc
or
in
jmp
cmpsb
pop
pop
movsl
inc
test
pusha
insl
xor
loop
jl
add
popa
addb
add
pop
pushf
mov
daa
imul
fcomps
xchg
inc
push
cwtl
outsb
mov
jb
pusha
xchg
jmp
incl
adc
fsubs
cmp
adc
sti
arpl
ljmp
in
sarl
push
leave
inc
shrl
push
sbb
inc
test
mov
xchg
sub
mov
lcall
sahf
xchg
pop
stc
test
add
jle
add
lret
cmp
cs
cmp
ljmp
imul
and
clc
aaa
inc
aas
adc
and
jns
adc
jmp
mov
cld
loopne
jmp
fisubl
test
test
mov
sets
sub
pop
jne
aas
mull
flds
clc
add
mov
lods
repz
adc
das
lret
popa
aad
mov
push
push
add
stos
mov
sbb
lods
or
nop
scas
or
sbb
sbb
xor
or
xchg
jle
imul
cmp
jae
pop
fcmovnu
aad
and
loop
stos
lret
cmpsl
rcrl
out
push
sub
pop
sahf
js
test
in
push
mov
push
in
aam
pushf
mov
addl
xlat
out
inc
std
inc
das
jnp
push
sub
adc
push
movzbl
in
stos
dec
scas
shll
add
hlt
mov
add
shll
sti
xchg
push
fsubs
add
ret
ds
inc
mov
lahf
sub
in
popa
out
dec
xchg
fwait
or
cmp
fs
fisttpl
pop
test
cld
jge
dec
and
mov
loope
aas
inc
xchg
stos
push
enter
and
cld
inc
in
aaa
inc
push
iret
inc
dec
ficomps
pop
cmp
cmpsb
nop
ret
jecxz
jo
mov
dec
sbb
add
aam
push
lret
and
cmp
ds
stc
xchg
daa
out
push
daa
inc
in
mov
into
or
jmp
in
dec
xor
adc
add
mov
cltd
hlt
fnsave
mov
jmp
push
aad
das
in
aas
test
xchg
sbb
mov
jno
loopne
xor
mov
add
movsl
mov
jmp
mov
mov
test
mov
mov
dec
pop
call
cmpsb
add
xlat
out
fisttps
jo
arpl
mov
les
movsl
cmp
and
dec
fdivs
fcmove
test
fistpll
fisttps
add
jnp
nop
xor
pusha
mov
shll
addr16
pop
mov
lcall
or
xorb
addb
inc
and
xor
mov
mov
dec
xchg
sbb
mov
aas
jno
sar
fcoms
push
pop
icebp
sbb
ds
mov
sar
shr
test
aaa
dec
jo
jge
movsb
cmp
sub
adc
pop
jp
mov
mov
ret
jge
into
insl
and
cwtl
sbb
or
sub
iret
mov
mov
daa
push
out
test
les
push
iret
pushf
orl
push
xor
pop
into
iret
shlb
jns
rcrb
testb
in
lret
sarl
lock
aad
aas
xor
adc
popa
cmp
sub
lods
popa
dec
inc
or
addr16
ljmp
and
das
fdivr
mov
rsm
imul
xchg
and
xchg
leave
pop
mov
jg
mov
inc
cmp
dec
cld
add
loopne
push
repz
dec
mov
in
xchg
in
aas
out
or
add
or
imul
adc
or
or
cld
test
sub
mov
ljmp
push
aaa
repnz
mov
xchg
sahf
fs
jne
shlb
ja
pop
jae
cmp
std
in
fwait
imul
aad
loopne
or
scas
in
jno
movntq
mov
add
cld
mov
test
in
and
adc
in
cmpsb
mov
add
and
sbb
xchg
jl
pop
jp
adc
mov
out
dec
cmp
jg
adc
sub
nop
aam
push
add
loope,pt
sub
sub
mov
mov
pushf
inc
push
out
dec
add
adc
mov
lcall
lss
add
push
cmovge
mov
add
ror
cwtl
inc
or
sahf
mov
push
mov
sub
and
xchg
mov
add
inc
add
push
out
sub
das
imul
out
repz
xchg
push
xchg
mov
mov
movsb
jmp
cltd
or
mov
fwait
xor
fsubrs
lret
lret
pop
les
add
mov
mov
and
mov
aas
js
xor
cmp
fwait
invd
sub
jns
or
test
and
ja
jo
in
xchg
sub
int3
sbb
adc
repnz
push
repz
mov
in
add
pop
pop
aas
pop
jb
rcrb
dec
mov
stc
outsl
dec
xchg
mov
mov
in
fwait
stos
fwait
int3
ficomps
push
adc
pushl
xchg
bound
mov
xchg
fistl
out
lcall
js
sub
adc
push
and
and
movsb
jmp
lock
xor
in
sub
cmp
xchg
jnp
or
add
and
sbb
enter
jle
aad
pop
pop
stos
jnp
test
daa
in
add
lcall
test
xor
mov
dec
frstor
xlat
cmp
mov
fs
jmp
mov
add
mov
lods
pop
mov
repnz
mov
arpl
and
push
rcl
xchg
xor
xor
aas
call
mull
xlat
jbe
loope
test
in
in
push
outsb
vhaddps
in
mov
ss
cmp
aad
adc
mov
inc
loope
xchg
lods
clc
and
push
call
pusha
ja
or
pop
adc
xor
dec
dec
and
mov
stos
scas
repz
mov
mov
cmp
iret
imul
add
adc
mov
jg
push
xchg
cli
lcall
ret
adc
push
mov
dec
adc
dec
lods
in
or
lods
insl
mov
mov
mov
push
or
push
adc
mov
stc
jp
mov
es
hlt
fstpl
stc
clc
stc
rol
mov
jg
mov
insl
sub
mov
or
inc
pop
mov
jb
cmpb
jge
sbb
mov
rcrb
cmp
cmpsb
sbb
push
ljmp
test
xchg
mov
xchg
cmp
pop
dec
or
and
outsb
and
repnz
pop
push
xchg
out
or
sbb
roll
nop
adc
mov
mov
mov
test
mov
cld
jb
pop
mov
cmp
adc
dec
push
sub
pop
add
xchg
sub
fnstsw
stc
jns
or
bound
in
pop
out
dec
xchg
lods
insl
push
xchg
pop
mov
push
movsl
leave
pop
shr
mov
push
sub
fstps
lea
mov
push
dec
aaa
push
sub
or
test
sub
mov
or
sbb
stos
push
aaa
js
dec
inc
cmpsb
cltd
mov
cmp
jbe
pop
mov
sbb
push
xor
pushf
aas
cld
sahf
pusha
test
mov
out
leave
fadds
sbb
pop
fmull
cmp
int3
test
push
pop
lcall
push
dec
std
add
outsl
dec
xor
in
pop
cld
mov
fcmovne
or
jmp
xor
sbbb
push
xchg
add
mov
sbb
arpl
dec
cmp
scas
mov
add
roll
inc
out
outsb
sahf
or
add
add
lea
sub
push
sbb
dec
sub
push
dec
cmp
dec
in
stc
lret
push
bound
js
xchg
mov
fwait
stc
jl
loopne
bswap
cld
outsl
jp
mov
loopne
jle
std
pushf
insb
aam
or
jno
mov
stos
into
mov
insb
mov
ficomps
in
sbb
add
push
xchg
test
inc
aad
iret
dec
lods
push
mov
cmp
xchg
jbe
cld
sbbb
lds
cmpsb
xor
stos
inc
or
icebp
test
dec
and
jmp
cld
jp
out
fisttpll
pop
pusha
cmp
add
inc
dec
bound
iret
sbb
xchg
add
mov
fsubl
mov
push
jp
push
mov
mov
pop
jg
daa
pop
aad
mov
mov
dec
test
xchg
and
add
mov
xchg
les
and
xchg
lahf
ret
lcall
mov
and
lock
add
insb
imul
mov
into
mov
push
and
call
pop
and
or
and
aad
mov
add
inc
in
enter
cmp
dec
movsb
popl
dec
jnp
mov
cltd
and
rcr
aas
sti
adc
roll
and
hlt
in
jl
aaa
push
ljmp
mov
fisttps
test
dec
mov
pop
mov
nop
scas
push
icebp
jg
ss
divl
das
inc
aas
sbb
jnp
sti
cmp
pop
mulb
dec
aad
xor
push
pop
and
mov
lret
mov
and
jo
xchg
jge
mov
and
sub
pusha
std
cmpxchg
mov
xchg
sub
mov
clc
sub
mov
repz
dec
xchg
jnp
fmull
cmp
clc
inc
enter
add
inc
fstps
jle
mov
mov
and
lcall
cli
lret
mov
hlt
or
push
rorl
lods
jge
ret
inc
dec
push
lea
lods
dec
pop
mov
mov
xchg
add
jge
mov
mov
fs
jg
leave
sti
jg
fidivrs
inc
leave
pop
push
cmp
cwtl
sahf
cmp
jp
xchg
std
add
inc
imul
clc
xchg
sbb
and
sub
test
xor
pop
out
or
es
adc
mov
les
or
mov
or
sbb
daa
sbb
mov
and
pop
push
push
xchg
jo
mov
mov
adc
imul
add
xchg
sub
mov
jb
aad
ja
mov
into
add
imul
jo
outsb
jnp
pop
push
rcrb
rclb
rcll
mov
call
push
rcrb
cmp
test
dec
push
adcb
repz
into
or
mov
mov
cmpsb
repnz
lret
icebp
jge
lret
in
in
shr
aas
or
leave
cwtl
pop
cwtl
outsl
add
mov
call
and
movsl
lcall
push
or
in
sbb
sbb
adc
mov
mov
dec
std
inc
dec
push
lret
sub
pop
sub
sbb
neg
push
orb
sbb
adc
ret
rcl
movsb
jecxz
push
jne
pop
cmp
popa
xor
pop
setle
inc
fwait
call
add
push
pushf
cmpsl
test
inc
mov
lock
aad
dec
add
bound
sub
pop
fcompl
push
dec
mov
inc
rcl
xchg
in
notl
cltd
sar
adc
sub
xchg
jl
lock
mov
into
or
in
jo
pop
sbbl
xor
cmpsl
fdivl
and
adc
cmp
int
mov
in
mov
nop
outsl
pop
adc
jo
jb
jmp
lret
popf
leave
push
test
stc
dec
adcl
inc
cwtl
lret
lods
int
cltd
inc
sarb
inc
mov
xchg
stos
rcll
in
aam
loop
add
hlt
xchg
pop
xchg
xchg
std
daa
movhps
shrl
lock
sbb
mov
cmpl
mov
dec
adc
sahf
push
pop
dec
inc
sbb
clc
jne
push
sti
imul
ss
push
pop
in
jmp
mov
in
inc
xchg
jno
inc
rcr
lods
xchg
leave
lcall
mov
sub
mov
inc
in
mov
fcompl
jecxz
cwtl
adc
loope
gs
in
or
sahf
call
arpl
mov
or
fdivrp
pop
sbb
insl
inc
dec
int3
pop
and
enter
xchg
stos
loopne
mov
fisubl
sbb
imul
loopne
jp
movsb
ss
adc
lahf
xchg
add
sbb
sub
push
mov
jg
hlt
icebp
mov
lea
and
mov
pop
or
lret
push
lods
sbb
sbb
jmp
daa
pop
xor
dec
ret
sub
xchg
fs
cmc
xchg
lock
ljmp
movsb
cmpsb
and
mov
mov
dec
and
mov
push
popl
mov
clc
pop
fbstp
xor
mov
test
repnz
push
cmp
divl
or
xor
and
sbb
push
adc
mov
and
jmp
or
push
gs
out
incl
js
mov
adc
sub
cli
fstp
pop
rclb
mov
lods
cmpsl
test
pop
or
in
pop
insl
orl
inc
aaa
mov
jle
fsubl
jb
push
xchg
dec
pop
mov
or
cmp
mov
pop
out
and
jecxz
push
pusha
adc
adc
pop
insl
divb
ds
mov
std
mov
xor
cwtl
xchg
push
out
add
push
cmpl
or
dec
xchg
loop
lds
mov
push
leave
imulb
cmpsl
jb
mov
xchg
in
cmp
test
repnz
ss
jle
dec
int
mov
jge
in
pop
mov
jns
sti
and
xchg
cs
repz
mov
out
sahf
cmp
insb
pop
jle
cmp
loope
mull
xor
aaa
jbe
loope
inc
mov
mov
cli
ss
bound
mov
pop
and
test
aad
in
fstp
sbb
mov
int3
xchg
push
js
add
pop
xchg
mov
mov
addb
adc
mov
popf
ds
mov
ror
sbb
dec
xchg
scas
cld
icebp
push
xchg
out
jmp
dec
mov
xor
and
pusha
fistpl
mov
sbb
pushf
sbb
push
das
sub
test
fisubrs
sti
outsl
aaa
lahf
jp
mov
cmp
dec
stos
ja
popa
xor
and
push
mov
jb
ss
in
or
push
mov
jo
out
adc
and
xchg
and
scas
cmp
jmp
cwtl
push
dec
cmp
push
std
notl
insb
shl
jl
sub
les
or
xchg
rol
and
add
shll
outsl
outsl
xor
loope
popf
cmpsl
sbb
lea
rep
adc
xor
pop
inc
adc
icebp
fwait
jne
xchg
scas
adc
inc
sbb
cwtl
imul
jmp
ds
sarl
int
jle
rcrb
ja
inc
or
inc
daa
loopne
fimull
dec
add
ljmp
enter
push
mov
aas
add
ja
in
clc
inc
in
es
dec
ds
shll
loope
jne
xchg
sub
jle
push
lret
shrb
insb
inc
mov
fs
pop
mov
xchg
xor
addr16
pop
and
cltd
jae
nop
add
push
ja
aam
dec
mov
dec
sub
inc
fimull
push
mov
dec
aad
mov
fdivp
aaa
fimull
xor
aas
test
cmp
or
jl
cmp
aam
pop
out
push
xor
aad
jae
add
js
cmc
sub
cltd
mov
inc
add
pop
xchg
lahf
in
sbb
push
mov
dec
shrl
jle
xor
pop
inc
pop
or
movsl
push
cmp
jle
ret
into
fisttps
xchg
adc
int
sbb
out
lret
clc
dec
das
out
stc
add
into
movsl
push
out
cwtl
or
add
fisubs
insb
xor
scas
mov
iret
jns
push
inc
cmp
lahf
cmpsl
clc
sbbl
lods
or
fcomps
popa
sub
lea
loope
fadds
sahf
aam
cmp
xor
cmpsb
sbb
movsb
out
nop
fisubrl
negl
cmp
xor
xor
pop
jl
pushf
lds
adc
xchg
inc
sub
add
arpl
sub
adc
sarl
or
pusha
daa
xchg
inc
into
and
mov
shr
scas
data16
xor
push
pop
pop
push
mov
les
inc
out
and
fcompl
ds
xlat
pop
mov
or
fcomip
imull
sub
xchg
stos
jnp
xor
inc
mov
push
pop
pop
mov
and
icebp
jecxz
xor
push
out
push
fdivs
es
aad
xchg
adc
push
shrb
xchg
push
jecxz
ljmp
xchg
daa
mov
jg
push
mov
int3
and
dec
into
jge
cmc
lret
sbb
cmpsl
pop
push
xor
icebp
sti
scas
mov
fcmovnb
stos
sbb
mov
stos
mov
sub
adc
dec
mov
mov
leave
xor
jne
loope
xchg
ja
stos
jns
iret
rclb
inc
icebp
xlat
adc
aam
popa
dec
je
leave
out
pop
ljmp
xor
mov
ficomps
addr16
jp
dec
fsub
mov
js
mov
fstpt
es
mov
or
jnp
data16
into
in
push
mov
xorb
int3
fnsave
popf
jecxz
insl
stc
mov
sbb
ja
out
insb
int3
cmp
insl
lea
nop
test
sahf
popa
test
pop
pop
jnp
iret
add
sbbl
sub
testl
out
add
pushf
or
adc
lcall
dec
sbb
xlat
shll
push
mov
out
pop
xor
adc
clc
mov
ret
imul
inc
lods
scas
jle
jo
enter
aam
mov
cmp
pop
jle
cs
shrb
std
fwait
in
adc
fiadds
pop
and
mov
insb
sti
mov
stos
inc
pusha
jle
jle
adc
dec
lcall
lods
lcall
sub
fiaddl
into
adc
adc
push
add
cmp
mov
inc
ja
clc
insl
inc
push
notl
push
data16
dec
xchg
jae
cmp
mov
pop
jb
fs
push
sub
push
mov
sbb
cmpsb
lock
jno
jbe
sub
imul
sub
lret
xchg
mov
addr16
jmp
sub
cmp
cmp
inc
jae
dec
in
and
mov
mov
daa
clc
xor
xchg
xchg
or
sbb
push
pop
xchg
pop
inc
cmp
pop
mov
ficompl
push
push
mov
es
jno
mov
je
fistpl
and
loop
xlat
into
lock
mov
jle
push
xchg
mov
out
sub
dec
cmpsb
dec
arpl
stc
loop
inc
mov
add
ja
cltd
into
je
push
movsl
xor
aad
sub
push
fsubl
mov
fmuls
push
mov
or
imul
mov
push
lods
dec
or
dec
sti
sti
mov
lock
dec
mov
imul
pop
adc
ret
mov
iret
int
sub
mov
xchg
shl
cmpsb
fwait
xchg
adc
jae
loope
mov
ret
aaa
mov
inc
and
fldl
js,pt
push
aas
add
jo
dec
sbb
inc
jns
push
lods
jecxz
or
decb
int
mov
fwait
pop
mov
cmp
mov
push
xchg
mov
cld
ret
hlt
call
sahf
aaa
xchg
push
or
lds
mov
ss
repnz
push
mov
mov
lods
adc
mov
dec
cmp
ret
xchg
sahf
hlt
lcall
or
add
xchg
je
fnstcw
sbb
aam
iret
jno
jle
push
dec
xchg
mov
ficompl
jl
lcall
xor
inc
inc
mov
mov
cwtl
mov
sbb
fisttps
mov
ss
mov
pop
ror
inc
push
sarl
and
mov
lret
leave
aad
push
loope
mov
fidivrl
lods
pop
std
jl
sbb
js
jecxz
inc
cmp
mov
push
xchg
sub
pop
pop
into
pop
xchg
xorb
jae
mov
stos
hlt
aaa
adc
lds
add
or
jno
jle
lods
xor
xlat
inc
les
push
jge
insl
and
xlat
stos
mov
cmpsl
test
cmp
xor
cmp
push
scas
xchg
pushl
sbb
lahf
outsb
ret
pop
adc
xor
xor
jb
divl
jb
scas
test
rcl
mov
cmpsb
into
xchg
xor
cmp
loop
mov
popa
mov
xchg
lods
mov
push
jg
cs
adc
jmp
adc
sub
adc
call
xor
dec
ljmp
out
aas
clc
mov
stos
test
mov
ret
icebp
imul
push
add
sbb
lcall
aad
adc
mov
adc
scas
stc
push
sbb
imul
shl
add
mov
int3
mov
inc
dec
fs
cmp
cs
popl
push
aas
stc
ss
insl
loop
push
and
addr16
int
pop
aad
add
mov
arpl
cmp
out
pop
add
fistps
adc
add
fistl
lea
mov
mov
aas
sub
cli
ret
jle
and
cli
or
mov
pop
nop
add
mov
and
into
stos
cmp
dec
lods
xlat
shrl
pop
arpl
or
mov
jmp
xor
mov
inc
jb,pt
pop
shll
pusha
or
sub
imul
mov
addr16
jge
ss
jno
adc
mov
add
xchg
aam
pop
ljmp
mov
push
test
and
or
scas
repz
sti
xchg
sub
sbb
push
arpl
stos
lds
xor
sbb
sub
jp
int3
imul
xlat
in
rcl
sbb
push
sub
repz
aad
push
stc
mov
sbb
and
cltd
fwait
arpl
movsl
jo
sub
add
fdivr
xchg
xchg
fistpl
mov
int
and
mov
outsl
adc
or
inc
push
rorl
sub
jle
sahf
and
or
movl
xchg
hlt
fs
insl
repnz
jb
scas
je
pop
je
mov
inc
xchg
jae
sub
mov
rcrb
lret
inc
lea
scas
pop
inc
sub
cmp
pushf
fs
lea
int
sub
jns
mov
enter
subl
insb
fidivl
add
inc
shr
loopne
filds
fdivrs
lea
je
cmp
enter
outsb
push
faddl
pop
movsl
pop
aam
inc
add
jnp
frstor
push
into
in
inc
mov
xchg
lret
dec
dec
cmp
jle
add
xor
inc
sbb
in
adc
in
inc
mov
jbe
jae
cs
dec
ds
dec
loop
shl
cmp
push
scas
test
sub
inc
insb
mov
fcom
in
push
aaa
mov
in
mov
cmpsb
mov
sub
pop
dec
fsub
stos
push
dec
mov
pop
and
sub
cltd
and
es
and
rolb
mov
mov
lock
cltd
push
jbe
xchg
aam
xchg
jne
leave
lahf
jmp
fbstp
stos
insb
mov
nop
jno
add
in
popl
or
push
cli
lods
lods
in
ss
jg
sbb
sub
or
adc
mov
mov
sub
or
inc
mov
push
int3
pop
aam
and
sbb
push
mov
sub
or
pop
inc
and
push
adc
adc
subl
repz
jl
mov
lods
test
mov
dec
pop
daa
inc
adcl
cmpsb
les
inc
and
xor
inc
mov
pop
mov
movsb
leave
pop
xchg
stc
mov
xor
adc
add
pop
cmp
xchg
lcall
sti
das
cmp
loopne
in
xor
jno
lods
mov
push
test
and
in
ja
push
lahf
imul
mov
xlat
xchg
sub
into
push
pop
pop
js
add
std
sbb
js
jns
bound
xchg
cmp
cli
int
clc
mov
popf
out
rcl
test
xchg
mov
nop
not
cs
repz
repz
mov
jae
popa
push
je
pop
pop
push
lea
out
sub
mov
pop
xchg
out
mov
pop
addr16
and
cwtl
mov
roll
negl
cmp
lea
addr16
sub
sarl
or
lret
push
hlt
jmp
xchg
outsl
mov
push
loope
push
xchg
mov
ja
insl
test
je
push
insl
shll
mov
sbb
pushf
inc
sbb
add
push
sub
or
sarl
and
or
pop
aas
inc
repnz
in
loope
mov
int3
mov
mov
dec
testb
in
xorl
sbb
addl
mov
adc
arpl
push
sarl
mov
loop
and
adc
divb
cmc
jg
mov
sbb
jmp
pop
fisttpl
mov
cmpsb
sbb
dec
mov
mov
add
ret
xchg
mov
fsubs
mov
inc
sbb
sbbl
js
outsb
and
shrb
testb
cmc
les
jecxz
ss
imul
rolb
pop
adc
push
sub
sub
rcrl
mov
pop
add
mov
aam
jge
dec
jo
pop
and
xlat
jg
sbb
mov
loopne
insl
aas
dec
inc
mov
adc
js
aaa
and
add
out
pop
push
fsubrl
sbbl
sbb
into
cmp
cmp
orb
loopne
or
daa
pop
aam
stc
daa
push
movsl
clc
sub
aad
shl
stos
mov
pushf
pop
aaa
out
and
stc
cmp
sbb
pop
dec
pop
xchg
mov
out
add
test
cmp
lret
xchg
rclb
inc
outsb
mov
jecxz
pop
out
jecxz
movsb
in
mov
inc
xorb
sub
data16
dec
aas
ds
psubusb
and
lea
cmpsb
jmp
push
loopne
stc
cwtl
ja
jo
popa
add
lods
pop
sub
lock
add
mov
lods
jge
mov
adc
addl
fstl
je
sub
jl
xor
sti
jbe
sbb
enter
std
clc
dec
dec
adc
dec
in
cmp
xchg
pop
ffree
mov
jo
stos
xlat
jmp
or
jnp
rorb
xchg
jae
aad
push
fisttps
mov
mov
int3
mov
push
or
ja
lret
aas
insb
sub
lcall
fstl
out
scas
jecxz
mov
cmp
fdivr
jecxz
popa
and
testb
push
je
xchg
pop
rolb
inc
sbb
pop
cwtl
dec
aaa
inc
cmpsb
lahf
push
scas
aad
pop
rorb
cmpsb
pop
ljmp
inc
mov
hlt
push
lods
cmpsb
push
test
pop
cmp
loop
mov
xchg
dec
fsubl
stc
xchg
push
mov
ror
fs
push
jecxz
jo
loop
and
sbb
sbb
sbb
je
xchg
push
insw
cmp
mov
add
imul
mov
das
push
xchg
mov
dec
cmp
xor
push
pop
add
hlt
lahf
addb
sub
ss
cmpsl
je
rorb
cltd
outsb
xchg
lcall
push
dec
cmpsl
loope
ficoml
aad
popa
ret
mov
jae
aad
push
pop
adc
push
sbb
mov
popa
mov
out
test
inc
lahf
out
jbe
cmp
bound
in
stos
dec
test
rorb
sbb
cwtl
pop
js
enter
clc
aaa
push
push
cmpsb
jbe
fnstenv
repnz
mov
dec
xchg
add
mov
inc
jnp
mov
insb
inc
aad
push
test
add
leave
ficoms
pushf
out
cli
fwait
andl
std
andb
daa
cmp
aad
outsb
push
rcl
push
pop
data16
std
lcall
nop
test
push
pop
sub
add
push
push
fisubrs
push
push
mov
ss
push
int3
push
and
mov
push
push
cli
adcb
dec
loope
pusha
push
stos
cmpl
adc
aad
pop
xor
outsl
dec
nop
push
arpl
lret
stos
push
cmp
pop
test
jecxz
int3
push
pop
inc
in
stos
mov
inc
aas
pop
sub
sub
and
fnstenv
popa
loopne
sub
push
fs
inc
ja
mov
mov
addl
inc
stos
sub
ficompl
aas
sub
call
and
inc
push
arpl
mov
mov
clc
push
mov
les
add
push
dec
mov
insb
jmp
data16
sbb
mov
lods
aas
ds
dec
sub
pop
ss
dec
inc
mov
mov
sub
xor
pop
cmp
outsl
pop
jge
pop
cmpsl
dec
mov
lahf
pop
loopne
cmp
pop
xchg
xlat
cmp
ds
iret
mov
pop
or
out
sbb
cmp
fsubrl
shrl
leave
leave
les
push
mov
ffree
adc
or
in
cmp
mov
popf
jl
mov
sub
out
lahf
and
repnz
adc
bound
and
lret
push
fisttpl
cmp
dec
es
dec
loop
xchg
nop
sub
outsb
outsl
inc
sbb
mov
inc
pop
jmp
mov
inc
jbe
xchg
out
adc
xchg
imul
mov
insl
cmp
mov
mov
adcl
popa
into
or
test
pop
rcl
mov
out
mov
dec
lds
test
fisubl
inc
iret
icebp
push
or
int
cmpsl
cmp
pop
test
les
shll
push
sub
in
imul
push
jae
std
cli
sbb
adc
mov
pop
xchg
add
mov
fnsave
cmp
add
call
es
jp
test
cmc
imul
js
popf
jns
lret
mov
loop
push
pop
aam
loopne
add
std
imul
mov
inc
jo
out
dec
inc
mov
xor
jb
nop
lds
mov
js
rorb
ja
mov
or
js
jp
call
rclb
and
fstps
or
add
dec
sub
or
jo
out
jge
decb
sub
ds
mov
scas
rorl
stc
push
cmp
movsl
push
cltd
addr16
push
add
int
insl
pop
push
std
repnz
mov
xor
sahf
jnp
sar
popfw
inc
popf
out
repz
xchg
sarb
push
fdivrs
push
cmp
ud1
fistpll
jbe
into
out
pop
add
and
sbb
xchg
hlt
lods
xor
popf
jno
lret
jmp
loopne
lret
leave
pop
sub
test
sub
sbb
pop
sub
push
pusha
and
mov
dec
inc
dec
sbb
vmread
shlb
popf
pop
jns
adc
jnp
mov
lea
lods
out
adc
stos
roll
aaa
mov
fiadds
lods
and
out
popf
mov
inc
mov
out
test
es
and
test
push
nop
or
adc
mov
push
fwait
fsub
cmp
mov
cli
mov
push
shrl
pop
fistl
push
loope
sbbl
jns
imull
mov
jecxz
push
and
xor
andl
jb
fmulp
js
outsl
rcrl
addr16
jge
jecxz
testl
scas
and
loope
mov
stos
or
xlat
aam
lahf
test
sbb
or
mov
pop
push
loop
insl
jns
in
sub
test
inc
push
dec
mov
cmc
dec
dec
add
and
and
fistpll
lock
es
sub
lret
rcrb
dec
xchg
add
ss
or
std
push
cmp
imul
adc
sbbb
dec
ror
cmp
fildll
shll
sub
sbb
xchg
cmp
mov
es
or
or
mov
and
mov
dec
sub
xchg
mov
dec
int
push
out
into
xor
fcoms
gs
lret
mov
shl
push
mov
jge
push
adc
cmpsb
lods
and
pushf
data16
add
lcall
and
dec
in
in
mov
aam
xchg
fwait
jb
mov
jmp
xor
and
xchg
enter
out
xchg
ljmp
inc
lret
xor
andb
or
fmuls
mov
jl
and
mov
xor
ret
cs
adc
mov
lahf
inc
add
ret
subl
imulb
push
into
lcall
cltd
pop
xor
mov
mov
sbb
leave
insb
sbb
int3
mov
ret
shll
sub
mov
int3
fnstcw
or
into
push
insl
cmc
mov
or
shlb
push
scas
xchg
mov
push
adc
sub
dec
and
pop
imul
or
push
add
mov
insl
mov
sub
sub
in
aas
popa
ficoml
popf
dec
ss
fxch
mov
iret
in
paddb
sbb
xchg
and
decl
xor
xor
xor
push
sub
push
pushf
loope
cmpsb
sbb
push
sub
cltd
shl
insb
inc
xchg
lea
lcall
sbb
pusha
sbb
stc
cmpsb
mov
jo
add
data16
std
adc
in
dec
xchg
jnp
call
lret
and
xchg
sub
rcl
fildll
int3
jns
cmp
icebp
sub
pop
mov
pop
or
jbe
inc
mov
dec
lods
hlt
movsl
jg
ja
lods
adcl
mov
into
movsl
loope
xchg
iret
xor
dec
jo
adc
int
cli
ds
lock
xchg
and
jo
movsl
inc
pop
repnz
out
shlb
jecxz
or
xlat
fdivrl
mov
rol
xchg
mov
add
sub
ss
push
shrb
push
jae
adc
sarl
mulb
xor
mov
pop
std
sub
incb
dec
jbe
in
test
popf
cmp
loop
push
ljmp
jg
push
mov
stc
sbb
mov
popf
cmp
fnstsw
cli
cmp
sbb
mov
rclb
mov
push
aad
loop
mov
sbb
je
mov
mov
sbb
subl
call
xchg
push
rcrb
push
xchg
mov
sahf
pop
repz
mov
jb
push
lret
mov
xchg
sbb
out
push
add
imul
xchg
lods
test
int
nop
cmp
stos
aas
dec
scas
inc
or
rclb
add
cwtl
mov
xchg
pop
imul
mov
outsl
sbb
std
shll
jg
mov
das
add
push
pop
call
lea
es
cli
add
xchg
es
int3
inc
cmc
inc
cmp
fldenv
xchg
xor
std
push
and
mov
insb
data16
lret
bound
sub
ss
movsl
lcall
or
push
rcll
or
add
adc
jb
or
sbb
mov
cmpsb
push
and
xor
jle
sub
sahf
adc
cmp
jp
sbb
cmp
and
js
repz
fistpl
mov
jno
in
mov
aaa
xchg
out
cmp
adc
mov
fsubrl
inc
mov
pop
outsb
sbb
mov
sub
hlt
pushf
jae
mov
xchg
add
xchg
std
rcr
cmp
imul
mov
adc
dec
fs
das
popf
sbb
sub
outsb
mov
ja
or
add
mov
mov
je
je
ret
out
rcll
inc
pop
je
clc
inc
push
push
into
mov
inc
aam
test
push
xchg
inc
push
cmp
ja
notb
cmp
mov
mov
sub
push
lcall
add
pmaddwd
jne
sahf
daa
icebp
dec
fistpl
pop
icebp
xchg
fwait
mov
call
push
dec
or
cmp
imul
fstpt
push
push
cmpsl
push
mov
and
xchg
push
sbb
xchg
or
add
outsl
push
aam
jne
cmp
pop
lods
dec
cwtl
cmp
xchg
mov
jle
xchg
mov
xchg
xor
pop
sub
inc
aaa
pusha
or
out
ljmp
dec
xor
xor
mov
ficoms
inc
cs
adc
and
mov
push
or
mov
pop
cmpsb
test
pop
shr
mov
mov
jecxz
dec
sbb
dec
xchg
dec
add
fstpt
pushf
nop
aad
xor
inc
nop
jbe
xor
in
fisubs
sbb
rcll
add
lret
xlat
jmp
add
adc
aaa
jg
pushf
ja
test
jnp
xchg
dec
mov
jg
mov
out
shll
cmc
add
or
cwtl
sahf
xchg
lds
push
xor
mov
pop
mov
mov
and
mov
xorl
rorb
push
push
es
imul
push
and
pop
sbbb
mov
adc
cmc
cli
push
cmc
pop
sub
repz
outsb
aaa
jbe
mov
imul
shll
scas
stos
adc
mov
mov
outsb
es
cmp
insl
mov
mov
jnp
mov
cmp
sub
outsl
mov
adc
lret
cwtl
jnp
jno
or
test
aad
scas
sbb
jns
push
popf
aam
xchg
add
and
and
sub
pop
insb
push
fidivs
push
stos
aaa
lock
sbb
xchg
sti
lahf
mov
inc
cmp
push
jnp
cmp
jb
jecxz
and
fstps
das
adc
js
int3
and
inc
jns
imul
sub
dec
mov
aam
mov
lods
pop
bound
push
std
popa
ret
or
xchg
test
ja
push
sbb
and
pop
ds
pop
dec
mov
or
xor
loop
and
mov
jle
jbe
or
jae
sbb
lds
xchg
adc
bsr
dec
mov
xor
mov
fsubl
dec
mov
aam
xor
loop
popa
lcall
test
aas
pop
or
addr16
lock
mov
mov
and
jo
inc
dec
aaa
adc
cmpsl
mov
inc
orb
int3
xor
sti
stc
add
mov
push
sti
fidivrl
dec
sbb
mov
popl
sbb
sub
mov
lods
mov
xor
sub
sahf
clc
repz
xlat
pop
cli
cmp
mov
inc
cltd
iret
push
push
repnz
push
dec
dec
rolb
push
xchg
arpl
movsb
jbe
lret
fwait
push
mov
jne
jle
std
flds
mov
push
or
xchg
hlt
xchg
xchg
xlat
jns
lret
imul
int
fldenv
jmp
push
mov
and
int
test
pop
decl
xor
in
fxtract
stos
mov
fisubrs
cs
push
arpl
xchg
insb
insb
mov
xchg
mov
subl
xor
jmp
dec
mov
jne
xor
mov
mov
pop
pusha
or
dec
mov
std
inc
loopne
jae
aam
inc
jns
push
dec
rolb
mov
sbb
lods
sbb
mov
pop
into
cld
xchg
insb
xor
pop
dec
sub
out
sarb
dec
pop
jo
xchg
mov
jg
cmp
xor
cmp
jnp
leave
xchg
cmp
les
mov
pusha
and
sbb
cs
imul
xchg
repnz
rclb
sub
lods
mov
pop
shll
push
push
add
stos
repz
outsl
movsl
cmc
jp
orl
aaa
sbb
sub
adc
fwait
clc
cmpsb
xchg
into
imul
mov
xor
sub
sbb
call
rclb
mov
dec
jg
mov
mov
or
jmp
xchg
push
pop
cltd
cmp
cmp
loopne
xor
pop
imul
pop
jbe
jae
pop
int3
or
xchg
and
js
mov
fwait
imull
jo
mov
push
jl
sub
mov
sahf
push
out
jns
stos
push
cmpsl
adc
add
test
or
push
jge
lahf
scas
popf
jno
add
clc
adc
add
lods
sbb
pop
mov
out
add
sarb
jge
enter
mov
push
pop
or
data16
sub
subl
push
sbb
sub
clc
js
mov
ret
jns
in
xchg
push
jnp
lret
jmp
orb
xchg
jge
push
xorb
push
inc
test
out
imul
cmpsl
sarl
cmp
xchg
fucomip
jne
out
lret
pop
lea
add
xor
and
shll
test
clc
data16
mov
xor
xor
xor
or
xchg
aam
das
fs
addr16
popa
xor
pop
mov
xlat
ljmp
and
mov
cmp
jp
sti
bound
adc
pop
push
dec
sub
jne
or
sbb
xchg
and
jbe
dec
daa
sar
stos
in
dec
ss
aam
sbb
mov
cli
xor
add
call
fwait
enter
int3
icebp
pop
sub
jne
dec
loopne
fs
mov
leave
pop
cmpsl
cmp
pop
ret
dec
lea
sbb
pop
mov
sbb
pop
cmpb
xchg
lret
mov
fisttpll
push
out
pop
fsubrl
lea
dec
lods
sub
xchg
sub
mov
loop
test
sbb
lcall
push
into
dec
xor
int3
mov
lcall
addr16
push
adc
sub
mov
or
push
pop
push
aam
fbld
lret
mov
jb
mov
enter
into
xchg
jecxz
or
dec
adc
gs
sbb
mov
xchg
sub
std
shll
ds
shlb
out
popf
int
arpl
jmp
dec
loop
or
inc
pop
repnz
ds
gs
fwait
ja
or
aad
cmp
mov
dec
sti
jmp
psraw
inc
and
cli
cmpl
out
sub
insb
cmp
add
aad
nop
out
inc
divw
pop
sub
and
rcr
stos
pop
lods
ds
pop
jae
pusha
mov
ficoml
stos
adc
and
adc
cmp
xor
sti
cmp
jno
cmp
ljmp
or
push
pop
dec
aad
in
pop
xor
aaa
iret
pushf
mov
pop
push
sbb
and
mov
or
mov
ds
jecxz
addr16
pop
repz
sub
das
mov
addr16
stc
cli
sub
sahf
mov
sbb
sbb
outsl
getsec
ja
add
mov
sub
sub
imul
dec
xor
jnp
push
dec
cmp
test
cwtl
push
into
mov
add
imul
mov
and
add
inc
mov
repz
jno
dec
sti
repz
and
inc
popf
pop
xchg
data16
popf
xchg
test
push
ret
dec
les
cmp
push
insb
mov
ficompl
ds
mov
or
cltd
fs
pop
sahf
mov
iret
lahf
pop
lds
adc
lods
ret
out
bound
lret
sbb
sbb
sub
js
outsb
push
xchg
push
mov
sub
or
xor
jg
mov
lea
test
inc
cmc
fs
icebp
add
inc
bound
xchg
fldl
fwait
jle
orps
pop
outsl
pop
xlat
add
xchg
aas
stc
xchg
push
rep
sbb
mov
inc
in
xlat
push
loopne
lret
pusha
xorb
imul
mov
mov
inc
pop
add
xor
adc
or
inc
mov
dec
into
add
cmp
icebp
xor
and
enter
sub
ficompl
repz
pop
hlt
inc
lret
pop
push
addr16
mov
sbb
shl
and
daa
and
repnz
mov
scas
rorl
cld
jecxz
pop
imul
or
jmp
mov
xchg
or
jno
mov
inc
xchg
push
sti
adc
ja
cmp
jne
dec
sbb
and
or
or
ja
xchg
addr16
andl
clc
pushf
scas
mov
out
outsl
sub
jg
rorb
call
fcoms
add
mov
pop
adc
rcll
aas
and
dec
fisttpl
ljmp
xor
cmpsl
sbb
push
popf
jae
dec
imul
push
and
mov
pop
mov
fwait
jo
inc
adc
adc
out
fisttpll
jle
inc
outsb
jb
and
pop
out
aam
xor
adc
or
iret
dec
cmp
adc
lret
je
sub
js
mov
mov
push
lret
jno
push
adc
jmp
inc
push
shll
xchg
xchg
sbb
loope
clc
cmpl
mov
fwait
dec
xor
push
scas
push
aas
imul
in
push
and
lahf
sti
xor
jb
jge
fidivl
adc
xchg
shrb
add
add
jns
aam
xchg
and
cmp
or
in
test
push
pushf
nop
mov
pusha
cmp
dec
push
mov
push
push
icebp
cmp
jmp
imul
mov
into
fsubl
xchg
mov
push
sti
push
aad
in
cmp
mov
xchg
clc
cmp
jmp
in
xor
jp
ret
xor
pop
int
xchg
sbb
adc
jp
sub
pop
fcmovne
scas
ror
jecxz
insb
dec
in
shrl
mov
fs
sbb
lea
sahf
out
push
add
ds
jns
call
stc
das
adc
mov
adc
add
mov
inc
push
iret
insl
popf
mov
call
in
clc
push
xor
mov
mov
scas
dec
xchg
push
push
jo
sarl
arpl
adc
js
jno
hlt
hlt
sub
ret
mov
loopew
adc
stos
sbb
repz
pop
fwait
cmpb
sub
dec
lds
and
jp
daa
and
dec
dec
js
fcom
jg
push
push
sub
xor
clc
jae
mov
adc
dec
and
rcrl
in
or
xor
push
cmpsl
sti
sbb
ja
in
out
jp
pop
add
ret
mov
add
addr16
mov
pushl
dec
mov
out
and
ljmp
ds
sti
fistpll
jno
jb
add
sbb
add
cmp
arpl
add
dec
cmovl
jg
fcoml
ljmp
sti
mov
ror
sub
movsb
mov
lret
mov
mov
out
jl
lahf
dec
pop
loop
call
pushf
sahf
jbe
movsb
int3
jae
mov
and
sahf
xlat
push
push
xor
int
sub
stos
mov
fdivrl
ret
xor
aam
pop
cmp
aas
inc
jb
xor
loopne
xor
shlb
dec
imul
push
mov
add
xchg
add
or
int3
add
mov
lahf
dec
inc
lds
in
jecxz
cmp
xor
shl
inc
cmc
cltd
imul
mov
cmc
inc
inc
or
sub
sahf
xlat
add
mov
mov
and
fsubrl
push
lahf
outsb
rorl
push
arpl
mov
sub
mov
mov
mov
pushf
add
jmp
sub
push
in
pop
enter
lret
and
fcmovnb
clc
mov
lret
stc
decl
shl
loopne
add
mov
and
stos
cmp
jmp
or
icebp
fcmovnu
xchg
mov
inc
adc
js
loope
dec
xchg
mov
shlb
pushf
pop
aad
dec
fwait
les
shrl
clc
xor
scas
pop
pop
mov
push
jmp
fucomp
mulb
mov
cmp
sbb
sti
cmpsl
sub
push
push
ss
cwtl
iret
addr16
jnp
sbb
add
ds
mov
leave
pushf
jb
fimuls
inc
sub
sub
adc
fdivs
pop
int
add
int
jne
pop
mov
mov
mov
add
ret
inc
gs
stos
ja
test
mov
xor
mov
std
iret
sub
fwait
xchg
dec
push
clc
divb
mov
xchg
pop
std
clc
dec
xchg
jno
xor
icebp
pop
ss
daa
and
push
jg
and
dec
popf
cmp
sub
lock
addl
icebp
lods
cltd
stos
mov
int
adc
push
adc
xchg
gs
xchg
inc
mov
inc
push
sub
lret
jecxz
or
dec
scas
imul
mov
outsl
enter
jb
xchg
mov
repnz
mov
loopne
mov
push
pop
clc
dec
shrl
shll
fcoml
fcoml
pop
popf
hlt
mov
pop
rclb
mov
push
test
cmpsb
fnsetpm(287
push
hlt
inc
stos
xchg
dec
shll
push
int
xchg
and
dec
incb
cltd
mov
ja
or
popl
lods
out
pop
mov
add
aam
jge
push
mov
fsubl
lods
lods
into
daa
dec
and
ret
js
mov
cmp
fs
pop
out
dec
out
pop
or
sub
xchg
in
aad
mov
sqrtps
lea
fistps
mov
pushl
pushf
mov
fisttpl
pop
push
test
daa
push
xchg
adc
pop
scas
add
inc
cltd
dec
ja,pn
mov
test
dec
xor
or
sbb
sub
and
push
jb
lcall
fnsave
fldl
cmp
jmp
jns
jb
lret
inc
enter
cmpsl
frstor
ret
mov
pop
add
mov
aas
push
inc
movb
inc
cmp
dec
leave
push
jnp
mov
jnp
popf
in
sbb
in
std
sbb
or
sub
ds
xor
cmp
xchg
cltd
mov
divl
jecxz
cmpsb
mov
mov
xor
sub
or
lods
xor
popf
insb
test
popa
enter
jg
aas
pop
test
cmp
lcall
adc
lds
inc
sbb
push
and
xchg
add
push
lock
jbe
arpl
pop
test
xor
mov
aam
loopne
pusha
ja
enter
out
pop
adc
jmp
xchg
pop
movsl
pop
push
fistpll
shrl
movsb
sti
repnz
mov
sub
idivl
mov
dec
dec
pop
mov
mov
orb
push
or
or
fsubrs
pop
adc
imul
mov
cmp
lahf
add
pop
pop
icebp
pop
mov
add
shll
pop
lods
sbb
shll
gs
push
pop
bound
lods
movsl
jb
xchg
mov
pusha
dec
adcb
cmp
aam
out
ret
mov
dec
in
push
in
jg
repnz
xlat
jg
mov
pushf
push
ret
es
inc
in
jle
xorl
imul
sbb
mov
shlb
and
in
pop
and
std
pop
inc
stc
fmuls
fwait
sbbb
lods
mov
inc
scas
fmul
inc
subb
xor
ss
aas
push
stc
bound
xor
cld
testl
jae
fs
out
push
jb
in
xchg
int
mov
mov
mov
sti
ret
nop
xchg
rclb
mov
cmp
clc
cltd
push
fnstcw
lods
push
call
jns
mov
enter
and
inc
mov
cltd
jno
rorl
add
lock
stos
icebp
add
push
movsl
fsubrl
jae
push
sbb
jle
sti
push
mov
mov
stos
inc
push
adc
push
int
xchg
adc
sti
into
sub
imul
xchg
push
push
cli
je
aaa
stos
jmp
in
scas
fwait
cwtl
mov
push
xchg
push
dec
nop
js
out
test
es
mov
mov
lods
shr
cld
adc
ja
push
js
gs
jle
cltd
pop
jns
jle
adc
sahf
repnz
lods
fcmove
inc
pop
cmp
stos
pop
or
cwtl
jle
pop
dec
xor
orb
jecxz
je
mov
add
sti
outsb
xchg
test
mov
repz
out
push
inc
push
iret
pusha
push
sbb
adc
mull
stos
mov
xor
subb
mov
xchg
mov
inc
push
xchg
orb
decb
addr16
push
jnp
or
lods
jmp
aad
nop
test
lcall
push
dec
add
lret
ss
seta
int
jb
mov
jno
dec
push
xchg
in
scas
and
aad
insl
fs
pop
stos
inc
imul
add
sub
mov
push
je
sahf
and
mov
movsb
push
mov
mov
in
push
sub
add
mov
repz
test
aaa
sti
imul
sub
movsl
les
sub
lds
test
ds
and
push
stos
inc
xor
ret
xor
jmp
test
stos
stc
push
add
aas
ss
jo
and
aam
jb
pop
out
jl
pause
push
mov
icebp
pop
ffreep
cltd
cmp
das
dec
outsl
sti
inc
inc
xorl
mov
nopl
jmp
inc
sbb
jmp
pop
test
xchg
pop
jge
idivb
and
xor
loop
inc
pop
cmp
xchg
and
rolb
mov
enter
sbb
lea
outsb
jecxz
and
inc
sbbb
adc
outsb
addl
fisubs
jp
das
inc
fidivl
cmpl
xchg
xor
jns
sbb
add
pop
jae
cmp
jg
imul
js
mov
sub
xor
in
xlat
das
aas
add
jp
push
aas
dec
sbb
dec
clc
imul
icebp
int3
cld
sbb
jmp
stc
mov
add
lret
or
xchg
push
cmp
mov
pushf
add
mov
sub
jno
xchg
call
sbb
mov
mov
bound
fucomp
lods
hlt
inc
and
mov
push
and
xchg
inc
aam
jecxz
movsb
out
xchg
xchg
pop
rcll
cmp
pop
sbb
iret
sbb
pop
hlt
and
inc
xor
push
in
stc
mov
cmpsl
xchg
cltd
sbb
cmp
out
notl
mov
jae
xchg
jp
addr16
xorb
dec
pushf
mov
scas
ud2
arpl
inc
cmp
xchg
loop
lret
into
jbe
fabs
and
pop
or
mov
outsb
cwtl
lods
mov
mov
daa
popf
adc
cmp
sub
out
mov
test
mov
sbb
repz
pop
int3
imul
adc
adc
dec
pop
mov
jp
ret
xchg
fdivrl
dec
iret
lret
mov
js
pop
inc
xor
xchg
std
pushf
mov
jb
sub
push
and
sbb
mov
hlt
imul
aaa
test
fstpt
jb
cwtl
movq
dec
add
ret
xor
aaa
mov
mov
adc
add
sub
jmp
sbb
movq
jno
rcrb
sahf
adc
cmp
es
ret
mov
fnstcw
jmp
mov
cld
std
cmp
jg
movntps
mov
stos
cmp
push
mov
fstpl
mov
in
mov
dec
and
push
repnz
subb
cltd
pop
adc
inc
xor
pop
and
imulb
daa
pop
dec
inc
scas
mov
jae
mov
or
mov
push
sbb
or
sbb
push
adc
imul
jns
fidivl
jb
inc
adc
popa
stos
iret
pop
icebp
push
xorl
add
adc
fwait
pop
pop
push
jnp
or
jmp
dec
out
cmp
push
loope
dec
es
jns
cld
dec
repnz
int3
mov
xor
imul
fwait
jne
cmp
movsb
cli
pop
nop
faddl
pop
lock
lods
je
ds
push
lgs
lds
cmpb
iret
xchg
mov
or
pop
mov
mov
outsb
mov
sbb
sub
cmpsb
hlt
mov
inc
mov
ret
or
mov
subl
lcall
or
push
pop
adc
cmpsb
mov
icebp
adc
mov
nop
daa
ret
lock
neg
jbe
jge
jp
sbb
popfw
ds
mov
jge
leave
mov
inc
ror
push
movsb
mov
cs
js
sbb
scas
movsb
jne
bound
push
js
repz
adc
pusha
data16
sbb
dec
rorl
jl
call
leave
mov
dec
bound
add
je
sub
pop
sub
notb
fsubrl
cmp
imul
mov
popf
ljmp
adc
mov
cmpb
insl
and
pusha
and
fucomp
int3
xchg
aam
sti
cmc
dec
adc
adc
jo
and
emms
test
mov
add
dec
js
cmp
sbbl
mov
lods
sub
dec
mov
and
dec
cmp
jnp
push
xchg
push
ja
or
outsl
daa
popa
aad
or
lods
sub
jg
jle
push
and
sub
push
xchg
aad
push
mov
movsb
sbb
mov
sahf
adc
cmc
lds
pop
mov
fcoms
enter
fwait
cltd
or
nop
mov
push
mov
stos
inc
gs
mov
mov
cmp
daa
xchg
and
push
scas
fisttps
jb
pop
push
pop
adc
mov
ljmp
in
push
test
loopne
ret
pop
jnp
into
sbb
xchg
push
jae
test
cmp
push
mov
lock
jle
out
jbe
test
dec
je
mov
lcall
push
adc
add
rcrb
in
pop
mov
inc
ds
jle
js
pop
pop
pop
cli
xor
in
nop
fwait
lahf
fmull
inc
cld
js
lods
mov
cmpsl
sahf
adc
cmp
or
ss
adc
nop
mov
inc
iret
dec
fs
imul
mov
rcll
shrb
jg
rorl
mov
rorl
cmpsb
ret
inc
cmpsl
xchg
adc
out
je
xchg
cmp
or
bound
les
movsl
fcmove
xchg
in
scas
outsb
push
in
fcmovbe
rorl
les
addl
or
in
adc
xchg
xchg
cmpsb
out
into
pop
lock
stos
int3
mov
push
lret
xchg
mov
cmc
push
push
sbbl
inc
sub
cltd
test
int3
cmp
mov
popa
push
nop
push
push
xor
outsl
pop
push
adc
cmp
lods
js
fwait
push
dec
outsb
cmpsl
add
adc
addr16
ficomps
mov
mov
scas
and
lahf
lcall
mov
and
imul
movsb
test
aas
or
adc
shrb
push
xchg
ret
sub
add
sub
push
inc
stos
sub
out
and
sbb
or
jp
imul
fildll
decl
and
and
jns
mov
xchg
dec
pop
andb
cmp
add
or
es
mov
das
xor
outsl
mov
cmp
sbb
mov
push
mov
and
mov
mov
add
mov
cltd
add
mov
sahf
rcrb
fisubrs
lods
sbb
cmp
ficompl
les
jno
sbb
into
pop
xchg
push
pop
xor
in
jmp
pop
lcall
daa
int3
dec
in
mov
pop
or
std
cmp
mov
ret
adc
cmp
push
or
jnp
in
cmp
xor
lea
gs
mov
fistpll
fadds
mov
dec
xor
mov
push
mov
popa
xor
in
sub
or
mov
dec
dec
jno
add
sbbl
pop
cmp
int
adc
fstps
fwait
sub
data16
mov
dec
mov
rcl
js
mov
xor
icebp
mov
xor
aaa
or
and
push
les
cmp
dec
ret
enter
dec
movsl
adcl
ret
cs
daa
mov
xchg
push
icebp
mov
cmpb
cltd
stc
cwtl
fstpt
or
nop
xchg
sbbb
aam
xchg
cmp
clc
inc
push
cs
adc
test
test
out
fdivl
sub
and
std
and
xor
cli
pop
imul
sbb
lcall
add
cmc
adc
sarl
popa
movsl
push
xchg
imul
mov
negl
sub
adcl
insl
push
push
lcall
test
fsubrl
jecxz
or
and
and
sti
bound
cmp
mov
fisttps
lock
mov
icebp
dec
cmp
or
pop
and
loopne
enter
adc
rcll
loop
je
icebp
fnstenv
adc
aam
lret
gs
lods
mov
and
int
push
scas
cmpsl
outsl
xchg
or
xor
mov
dec
mov
mov
adc
jbe
rorl
iret
sti
mov
call
mov
jmp
dec
xchg
pop
pop
mov
cmpsl
mov
push
xchg
xor
mov
out
add
rorl
cmpsl
cmp
out
push
cs
cs
nop
or
mov
je
and
movsl
mov
je
and
ucomiss
das
lsl
dec
in
xor
mov
iret
pop
clc
aam
nop
add
cltd
add
or
in
add
adc
adc
outsb
mov
push
adc
test
cltd
aad
and
scas
imul
addr16
pop
adc
push
cmp
ljmp
mov
or
leave
jmp
loope
mov
fstps
loope
test
adc
add
mov
mov
repnz
pop
mov
insl
push
xor
ljmp
pop
rcrl
mov
xor
ja
dec
cltd
jle
shl
in
ret
mov
stos
jo
sub
test
pop
popa
mov
mov
loop
and
outsl
inc
xchg
and
pop
jp
pop
push
and
cmp
je
arpl
xchg
and
call
push
mov
std
push
mov
cs
mov
xor
dec
stc
cli
ljmp
sub
xor
rclb
iret
mov
xchg
pop
out
and
pop
jae
cmp
dec
and
aas
pushf
jnp
outsb
push
pop
adc
fstpt
pop
test
sbb
test
and
aad
lods
dec
fwait
pop
pushf
nop
mov
jg
mov
ds
lods
cwtl
int3
xchg
mov
mov
dec
js
cmp
cmovns
add
jo
or
cmc
mov
dec
cwtl
mov
pop
push
cmc
mov
lcall
jo
jge
jnp
push
shl
jp
loop
inc
pop
push
outsl
movsb
pop
or
push
aam
pop
cmp
aas
xchg
sbb
dec
mov
or
jae
mov
lret
imul
pop
ds
push
and
shrb
les
movswl
or
pop
es
and
mov
push
aam
add
jge
mov
or
sub
jp
outsb
test
rolb
sub
dec
inc
inc
aam
sarl
sahf
popf
icebp
mov
dec
mov
lds
jns
into
stc
pop
adc
dec
movsb
mull
outsb
jae
pop
fcomps
sbbb
lea
xchg
or
mov
inc
lret
pop
xorb
loope
aam
dec
pop
rorb
jl
jl
lcall
mov
stos
cmp
ljmp
adcb
sub
lret
mov
lock
mov
ljmp
movl
bound
and
sbb
hlt
negb
mov
push
push
lods
fptan
aaa
call
push
das
sahf
push
mov
xor
repz
pop
repz
xchg
sub
jl
lcall
jbe
jne
mov
jl
mov
push
sub
repz
sub
mov
push
inc
pop
fdiv
jo
push
lds
stos
mov
out
pop
and
rorl
je
dec
adc
dec
sub
xor
xor
and
insb
aam
ficompl
jne
push
loop
arpl
adc
xor
bound
jle
outsb
data16
jl
ret
js
movsb
push
cmp
sbb
xlat
pop
cmp
jb
jae
add
dec
jbe
mov
dec
lea
dec
rorb
int3
inc
mov
flds
mov
scas
or
dec
lahf
mov
mov
xchg
mov
fcoml
js
mov
add
pushw
adc
lret
push
subl
sti
dec
pushf
xor
inc
cwtl
mov
stos
fwait
and
cmpl
movsl
mov
push
lods
ret
push
popf
cmpsb
popf
aad
cwtl
enter
iret
repz
push
imul
cmpsb
push
inc
test
test
sbbb
orb
popl
mov
pop
rorl
push
enter
push
push
pop
ret
inc
fnstsw
out
ljmp
les
push
and
push
mov
dec
popa
push
sub
jb
test
sub
pop
mov
and
mov
mov
push
movsl
and
cs
or
push
movsl
jmp
add
rclb
jmp
test
pop
into
mov
jb
cmp
mov
sti
stos
call
cmp
sti
rolb
imul
hlt
dec
mov
decl
cmp
sub
jg
pop
jno
data16
and
push
cmp
mov
push
rorb
sub
add
pop
mov
push
out
dec
scas
fisubl
mulb
mov
clc
pop
icebp
lret
jno
inc
cmpsl
fbld
out
clc
adc
orb
push
push
dec
in
and
xchg
aas
sub
mov
mov
cmp
ja
int3
cmp
lcall
dec
outsl
xlat
repz
gs
ficomps
mov
aam
fadds
pop
or
lods
inc
jae
in
mov
aas
mov
adc
pop
cmpsb
adc
push
shrb
cmp
in
addl
out
or
fldt
sbb
xor
mov
push
bound
mov
mov
arpl
and
sub
mov
dec
cmpl
adc
sub
popa
pop
push
int
fcmovnb
out
push
jb
lods
dec
loopne
cmpsl
push
mov
add
jle
outsl
adc
mov
std
dec
test
lret
dec
cmpsb
push
sbb
or
pop
jl
or
arpl
ficoms
lcall
aam
loop
mov
mov
pop
sti
sbb
inc
push
jae
mov
mov
jg
push
jns
jg
add
xchg
popa
enter
pop
adc
mov
add
pop
popa
jnp
inc
cmpsb
nop
and
outsb
sub
mov
fimuls
and
cli
ja
pop
add
xor
insb
xchg
lret
add
pusha
adc
addr16
cmp
repnz
loope
cmp
add
inc
mov
outsl
xchg
pushl
rcll
xchg
mov
fimull
out
mov
pop
loop
out
mov
cmp
mov
inc
out
cmp
push
or
mov
jmp
fs
jge
stc
insb
cmp
sbb
jle
xchg
mov
pop
das
pop
bound
mov
lods
inc
cmp
push
sbb
jne,pt
push
pop
negl
dec
cmp
testl
andl
stos
jp
sti
jae
shrb
mov
ds
pop
insb
and
mov
into
addr16
movsb
and
inc
or
notl
arpl
xchg
stc
or
cmp
jmp
addr16
rcrb
pusha
popa
insl
inc
pusha
ljmp
mov
mov
fists
lcall
xchg
sahf
mov
faddp
push
cld
xor
inc
xor
inc
std
lret
mov
je
test
out
mov
clc
mov
or
sbb
mov
xchg
clc
jmp
lods
push
pop
pop
cmp
inc
xchg
jno
mov
xchg
in
insb
dec
xchg
sub
mov
movlhps
jno
jno
lds
jmp
sahf
push
jae
adc
loop
js
push
cmp
cmc
add
xchg
lahf
sbb
pop
dec
pop
jb
imull
pop
shl
jl
rorb
xlat
jecxz
fldenv
fs
fadds
jecxz
inc
mov
out
mov
sbb
adcb
adc
push
stos
js
mov
xchg
fwait
mov
in
xor
xor
pushf
xchg
and
loop
jno
enter
pop
pop
add
test
in
cmp
dec
xchg
push
aas
mov
inc
sbb
sti
xchg
adc
popf
jge,pn
popl
or
xchg
mov
xlat
mov
js
mov
jg
pop
imul
xchg
int3
xchg
cld
divl
popf
inc
sarb
xchg
fwait
std
push
stos
psllw
push
out
notb
inc
outsb
pop
xchg
movsb
adc
loopne
test
out
push
dec
xchg
cmp
rcll
adc
popf
imul
or
mov
in
cmp
adc
jo
scas
or
jae
dec
push
and
daa
leave
bound
rcr
mov
mov
push
mov
out
insl
es
jns
push
lods
jp
sbb
fsubp
xor
ret
cli
rdmsr
push
push
sub
inc
mov
in
xchg
push
andl
sub
ja
sahf
addr16
pop
adc
aaa
aas
lret
xlat
fsubrs
inc
fidivs
dec
pop
push
push
mov
push
int
arpl
xchg
cmp
mov
or
sbb
adc
dec
mov
inc
lods
inc
pop
jae
in
out
and
push
stc
call
jne
fadd
scas
data16
jmp
jle
fisttpll
sbb
loop
enter
inc
test
mov
jge
mov
xor
test
sbb
lds
insl
out
test
stos
adc
ret
lods
icebp
mov
icebp
aas
sub
stos
mov
xchg
push
dec
jmp
or
jnp
sbb
mov
add
mov
adc
sub
lret
lds
gs
push
sbb
fwait
test
pop
es
sti
mov
jns
pop
sbb
jecxz
xor
xor
popa
outsl
push
dec
fistpl
push
cmpsb
jae
fadd
sarb
push
call
loope
into
cs
pop
jnp
cltd
push
rolb
out
adcb
mov
jg
cmp
sub
outsb
aas
in
psubsb
call
inc
lds
int3
or
jmp
cmp
lea
jg
cmp
imul
push
jg
fnstcw
jmp
rcl
or
stos
hlt
int
loop
jmp
cmp
dec
mov
mov
imul
dec
cmpsb
orb
inc
ret
jo
leave
cltd
cmpsb
pop
add
mov
xchg
or
mov
adc
jle
adc
xor
or
adc
sub
rorb
pop
cmp
imul
outsl
data16
cmp
test
mov
sub
xor
mov
aad
pop
push
out
ret
icebp
call
test
stos
in
pop
pop
rclb
nop
hlt
sbb
push
pop
imul
lods
mov
cmp
inc
sbb
cmp
popf
or
pop
push
cs
cmc
out
in
pop
fdivr
stos
sbb
mov
xlat
cmc
push
aaa
iret
scas
out
mov
and
and
pop
pusha
mov
shlb
fisttpl
mov
inc
ljmp
insl
sti
mov
out
iret
test
cmp
dec
sub
je
lcall
stos
sbb
push
out
bound
dec
pop
sub
ljmp
jl
or
ret
cmpsb
fiaddl
imull
stos
and
mov
push
stos
cmc
ret
aad
cs
roll
mov
pop
into
sbb
mov
lcall
mov
std
xchg
push
mov
dec
mov
pop
pushf
lcall
and
lods
ljmp
mov
subb
jo
ret
daa
aaa
sbb
and
fdivrs
cs
inc
and
jno
sub
leave
out
xchg
filds
lret
cwtl
cs
pop
dec
sub
lock
into
test
arpl
enter
int
loop
lea
mov
ds
adc
addl
jle
les
scas
or
jo
repz
jmp
shrb
adc
and
jo
mov
cmpsb
xchg
add
popf
mov
jg
inc
mov
and
lock
imul
adc
xorl
data16
in
insb
inc
leave
push
loop
imul
xor
fimuls
adc
insl
adc
mov
pop
push
add
mov
mov
xlat
mov
adc
bound
nop
cmp
pop
and
add
in
faddp
testl
test
addr16
lcall
jbe
movsb
sbb
dec
insl
or
outsl
aaa
mov
notl
xchg
ss
fisttpll
xor
sbb
xor
and
test
clc
add
in
int3
pop
and
xchg
cli
inc
pop
cli
pop
incb
add
mov
clc
dec
idivb
fdivp
xchg
push
sbb
stos
pop
movsb
sbb
inc
jbe
mov
stos
pop
pop
xor
call
sbb
mov
adc
push
fisubrs
mov
mov
std
pushf
imul
ret
leave
imul
sahf
xchg
loop
andl
movsb
mov
mov
mov
mov
aad
pop
add
mov
push
icebp
andl
sub
cli
add
imul
add
je
scas
repz
ffreep
fdivrl
daa
aam
aas
cmp
push
lret
in
push
call
rclb
cmp
lods
sub
jle
arpl
es
jp
jo
and
fistl
movb
push
mov
and
les
sub
dec
and
loop
add
call
jnp
aas
addb
out
mov
mov
cwtl
xor
sub
inc
inc
dec
lret
mov
outsl
push
cmp
int
testl
jmp
mov
jne
es
inc
iret
ret
cli
imul
pop
stos
mov
mov
push
pop
in
shrb
mov
hlt
mov
insb
xor
add
push
nop
sub
xchg
mov
loopne
fadds
adc
mov
das
xor
push
daa
xchg
repz
mov
and
sub
ret
shr
in
cmp
enter
fdivs
xchg
bnd
mov
add
jle
dec
pop
aad
mov
and
seta
mov
imul
adc
rclb
and
mov
cmpsb
xlat
jp
xor
pop
cmp
xor
or
push
and
cmp
or
mov
dec
mov
mov
fnstenv
push
lds
xor
mov
dec
push
daa
push
cmp
test
lds
mov
iret
push
dec
mov
add
inc
mov
pop
dec
adc
int
jg
sti
or
sbbb
in
rcrl
or
or
mov
inc
inc
dec
push
xor
jno
inc
pop
mov
lods
loop
movsl
jno
ficompl
cld
leave
add
in
jbe
andb
add
nop
pop
xor
stc
pop
icebp
rcll
imul
testb
push
push
jmp
push
jne
inc
xchg
mov
dec
inc
xchg
and
mov
cmpsb
push
pop
lcall
xchg
adc
push
xchg
inc
hlt
push
add
mov
fistpll
xchg
and
hlt
arpl
je
mov
xor
fldl
imul
push
lea
pop
dec
sub
jl
lds
fsubs
cmpsl
mov
sbb
cmp
fs
push
imull
les
jg
lods
pop
orb
sbb
rcr
stc
aas
data16
sub
shll
fs
gs
out
incl
lds
insl
xchg
mov
les
jno
shll
inc
inc
mov
es
jecxz
loopne
inc
pusha
jnp
inc
xor
sbb
sub
jmp
sub
aam
push
jbe
inc
mov
adc
insb
inc
leave
jge
mov
jge
cmpsb
stc
dec
sub
iret
mov
adc
push
roll
mov
pop
inc
popa
xchg
xchg
and
add
pop
cwtl
out
fcompl
pop
test
jbe
xchg
shl
sub
push
int
int3
cmp
jp
jmp
pop
fldl
mov
add
imul
imull
out
and
push
sbb
rcll
pusha
cmp
xor
dec
and
mov
je
mov
xor
add
jp
testb
mov
xor
cltd
mov
popa
cmc
adc
mov
pushw
lods
mov
inc
mov
shl
sbb
or
fldt
inc
sbb
push
push
lcall
scas
and
cltd
xchg
push
cmp
mov
jns
rcr
inc
addr16
pusha
cmc
stos
movsb
in
daa
ljmp
xchg
fisubrs
shll
ret
push
ret
sti
xchg
and
cmp
popa
out
cmpsl
cmpsb
mov
jbe
call
outsl
xchg
add
sbb
arpl
jae
loop
imul
test
cld
cs
mov
mov
aaa
xor
xor
inc
push
jo
mov
cwtl
aaa
lock
dec
and
insl
xchg
push
pushf
cmc
and
cli
pop
rcrb
xor
mov
mov
jmp
jns
mov
adc
hlt
jnp
add
rolb
pop
cmp
cmp
imul
popf
imul
nop
movsl
rcl
and
mov
ss
pop
mov
shlb
push
inc
fdivrl
sub
xchg
out
sub
xchg
cmpl
pop
cs
jge
or
repnz
cld
pop
xchg
fucomip
jl
inc
inc
lahf
je
outsl
fcoml
cmp
inc
dec
push
xor
push
or
flds
aaa
mov
hlt
or
lock
pop
push
mov
or
adc
sbb
or
enter
lcall
sub
sbb
pop
cmpsb
and
pop
lret
xchg
add
pop
repz
insl
xchg
fsubp
daa
test
adc
addr16
mov
cmpsb
fs
xchg
scas
mov
aad
cwtl
popf
stos
sbb
rclb
outsl
out
leave
push
sbb
push
mov
mov
aad
jns
jbe
adc
dec
mov
imul
pop
push
outsb
cmp
xchg
sbb
int3
mov
stos
mov
mov
test
loop
in
add
pop
xchg
ret
mov
mov
adc
and
sbb
cmpl
imul
in
jecxz
jae
pop
push
out
icebp
pop
popa
pusha
mov
sbb
jl
sarl
sub
mov
xchg
inc
shll
iret
subl
shll
xor
adc
cmp
xchg
lea
mov
sub
insl
ss
test
std
mov
add
andb
bnd
jbe
push
arpl
fwait
arpl
fmul
inc
sbb
inc
lea
sub
push
cld
push
mul
leave
pop
push
ret
std
cmc
fadd
fistps
mov
addr16
test
jp
xchg
push
pop
in
or
cmpsl
not
jle
repnz
pop
in
fistps
mov
sbb
cwtl
out
jb
mov
and
fcomi
fcompl
cmc
mov
cmovs
loopne
adc
xchg
mov
lods
dec
addb
or
fisubl
mov
mov
push
aas
cli
imul
out
leave
cmp
dec
pop
jg
scas
mov
mov
lds
pop
xlat
cmp
pop
and
ret
cmp
pop
xor
push
push
inc
xchg
sub
dec
xchg
mov
sarb
jle
pop
lret
aaa
cld
fnstcw
lret
inc
inc
jnp
mov
mov
push
icebp
insb
mov
cmc
inc
adc
in
imul
xchg
in
push
and
les
ret
scas
loope
mov
cmp
xchg
fsubrs
push
and
jle
sub
stos
call
les
dec
cmp
clc
mov
ja
or
popf
dec
dec
inc
setns
dec
iret
fs
xchg
sub
mov
gs
repnz
outsb
mov
sbb
cmp
add
jne
pop
push
add
pop
fwait
test
sub
popf
fstpt
imul
add
sub
xchg
rcrl
or
ss
lock
pushf
fidivrl
mov
xor
pop
and
negl
sub
xlat
and
int3
or
push
fistps
or
decb
rol
cwtl
pop
xchg
pop
xchg
or
or
cmp
adc
jp
shlb
xchg
ljmp
xchg
fcomi
add
xchg
ffree
inc
mov
sbb
std
ficoml
in
xchg
jge
popa
jnp
jmp
xchg
jge
fwait
cmpl
imul
xlat
mov
andb
push
cmp
sbb
xor
into
ljmp
pop
inc
adc
dec
jmp
aaa
inc
lock
cmp
imul
or
and
clc
mov
xor
lcall
gs
sub
sbb
lock
repz
mov
mov
ljmp
xor
and
pop
stos
or
pop
gs
push
or
mov
jg
push
cs
pop
mov
mov
xchg
jl
dec
jb
push
xor
mov
aad
inc
rclb
pusha
cmp
leave
cli
dec
dec
adc
jns
out
movsb
and
push
mov
mov
int3
and
mov
push
test
cmp
mov
sub
xor
sub
test
pop
fwait
inc
adc
sti
push
incb
sti
jnp
fbstp
cmp
xchg
sti
xchg
jbe
pop
xchg
mov
mov
or
mov
jecxz
repz
std
xor
stos
aam
scas
addr16
out
stos
dec
mov
jb
insl
les
addb
cmp
ret
sub
movsl
dec
outsl
out
callw
or
scas
mov
jmp
mov
sbb
dec
sub
mov
sbb
mov
rcll
mov
push
daa
jge
test
mov
in
lret
push
mov
int3
pop
movsb
pop
loop
je
sahf
xor
adc
xchg
inc
out
xor
aas
xchg
push
js
dec
je
fnsave
xchg
inc
xor
and
pop
insl
cli
push
daa
mov
mov
cld
xchg
jno
popa
cmpsl
arpl
and
imul
push
or
dec
push
cli
mov
in
sbb
scas
out
pop
movsb
or
aaa
int3
push
cmp
push
xchg
xor
push
push
pop
pop
cltd
mov
inc
xor
add
fsub
nop
and
pop
sbb
lock
or
mov
rorx
push
ljmp
xor
push
into
inc
lods
cmpsl
addr16
push
ret
pop
xor
or
pop
js
push
loope
jnp
fs
lea
add
inc
xor
xchg
roll
out
movsb
sub
sbb
rorb
mov
in
es
xchg
push
psrld
out
pop
in
clc
insl
push
jg
mov
adc
sar
fstl
jae
loop
xor
cwtl
or
ja
into
cmp
adc
int
push
pop
sahf
mov
push
or
mov
movsb
aaa
incb
decb
cmp
cmpsb
ret
imul
mov
push
mov
xor
jnp
or
mov
push
std
outsb
pop
mov
filds
daa
faddl
nop
add
aad
mov
and
insb
mov
out
mov
cmp
push
cmp
push
and
cli
imul
dec
adc
xchg
int3
xor
in
sbb
mov
jmp
dec
popl
inc
mov
mov
xchg
and
pusha
sub
xchg
es
jg
ss
pop
lahf
xchg
outsb
xlat
push
scas
fwait
arpl
popa
stos
mov
ds
and
mov
hlt
icebp
and
sar
jecxz
pop
mov
pop
lahf
jle
jno
testl
addr16
mov
cmpsb
cld
rolb
mov
icebp
icebp
fnclex
inc
outsl
xor
cmp
sub
and
lods
inc
arpl
pusha
add
mov
cmp
xchg
pop
jl
sbb
push
bound
jp
sbb
or
je
jl
leave
lods
scas
mov
push
add
outsb
inc
fwait
sbb
jo
mov
xchg
loope
xchg
push
mov
test
push
jg
std
push
xchg
inc
inc
js
dec
mov
cmp
pop
push
sub
mov
inc
repnz
mov
push
inc
iret
fcoml
pop
ret
sahf
mov
testl
mov
scas
iret
je
inc
mov
popa
mov
push
lahf
cli
mov
push
test
stc
and
dec
xchg
xchg
dec
inc
mov
inc
inc
dec
and
in
inc
pop
out
mov
inc
xchg
inc
ret
dec
in
xor
in
outsl
cmpsl
jbe
into
mov
push
das
decl
jge
add
pop
and
xchg
xchg
popa
inc
rcll
das
push
xor
push
dec
xchg
mov
loop
inc
sub
sbb
aam
pop
les
jns
cmp
cmp
xchg
shlb
sbb
pushl
mov
gs
xor
xor
enter
jns
ss
pop
ja
xchg
movsb
in
fmull
orb
dec
and
jle
bound
cmpsb
pop
pop
push
cld
xlat
ljmp
and
cmp
sub
icebp
adc
jbe
outsl
push
ret
adc
loope
incl
or
pop
stos
leave
pop
xor
orb
push
dec
and
and
mov
pushf
into
fdivr
data16
and
jp
dec
ja
dec
xor
jb
fdiv
shll
add
jo
fidivrl
cmpsl
inc
insb
add
loop
jnp
mov
nop
out
repnz
sahf
cmp
iret
loope
ljmp
push
inc
xor
push
jnp
push
ss
jl
mov
ss
or
or
stos
xchg
test
mov
add
add
stos
sahf
std
mov
pop
pop
pop
and
sub
dec
js
jo
xchg
stos
and
fdivrl
dec
or
jae
fidivs
pop
mov
push
lret
loopne
adc
repz
or
sbb
push
movsl
movsl
insb
shll
mov
divb
inc
mov
les
arpl
cwtl
xchg
clc
imul
push
lods
xor
jb
xlat
jge
mov
aam
jbe
push
lds
test
aam
sub
push
les
or
repnz
jno
adc
push
ja
or
ficomps
mov
xor
mov
sbb
xchg
dec
jge
out
movsl
pusha
fwait
inc
shl
pop
orb
repnz
ja
orl
addr16
test
sbb
mov
shlb
icebp
and
sub
adc
add
cmp
mov
pop
adc
clc
out
jne
gs
add
arpl
pop
pushf
inc
setp
aad
shrl
outsb
cmp
push
repz
jg
test
mov
xor
jge
outsl
out
daa
in
int3
inc
movlps
shrb
cmp
jecxz
xlat
dec
and
data16
outsb
pushf
adc
loope
ret
aas
jns
addr16
cltd
hlt
cmc
jp
dec
jecxz
jmp
mov
mov
rclb
push
mov
fldenv
and
cmp
push
setle
stos
lds
xchg
negb
inc
and
jl
clc
fisttpll
cs
mov
xchg
adc
or
pop
in
pusha
inc
mov
mov
and
adc
fwait
leave
jmp
mov
push
loop
les
imul
mov
ret
mov
repz
cmc
xor
subb
stos
pushw
sub
jnp
mov
mov
int3
out
enter
and
outsl
add
pop
cmp
cmp
add
test
sti
mov
int3
dec
sbb
adc
push
repnz
cmc
mov
in
inc
aad
fnstenv
iret
sub
cmp
lea
mov
popa
in
leave
xor
pop
cmpsb
sbb
xor
jle
mov
lret
add
xchg
mov
inc
je
or
lods
pop
push
and
aam
sahf
gs
daa
lret
imul
jns
xchg
jns
imul
fcmovu
mov
out
mov
mov
lock
popa
and
cwtl
adc
xchg
dec
and
jg
pushf
add
mov
icebp
sub
std
cmp
or
test
das
cs
pop
mov
test
hlt
in
xchg
fnstsw
inc
mov
push
ret
daa
cltd
adc
imul
push
adc
test
xchg
dec
pop
push
cmp
dec
aam
jle
adc
and
fwait
out
adc
mov
xlat
shlb
sbb
fdivs
cmc
mov
sub
inc
scas
in
sahf
and
mov
ret
lcall
out
inc
iret
mov
mov
mov
mov
sub
mov
jne
dec
jl
jno
in
jne
xchg
insl
mov
enter
test
jmp
aaa
insb
push
xor
insl
subl
test
jbe
mov
dec
pop
jg
aam
sbb
jns
pop
xor
into
data16
pop
int3
mov
mull
dec
lds
pop
or
bnd
xchg
or
rol
pop
xor
pop
in
mov
xor
rolb
and
dec
jmp
stc
inc
dec
lds
loope
pop
stos
popa
mov
add
out
xlat
cmp
in
lock
cmp
call
ret
xor
cwtl
mov
mov
and
push
addr16
jnp
xchg
cmc
rclb
pop
sahf
mov
lea
int
mov
mov
push
jno
sbb
daa
pop
mov
mov
cmp
and
mov
sbb
jg
adc
fimull
jle
les
hlt
xor
dec
mov
in
adcb
mov
sbb
call
sub
push
xchg
cmp
orl
rcrl
lcall
ds
push
push
cs
bound
adcb
shr
repz
mov
jg
decl
mov
iret
mov
push
lods
sbbb
mov
pop
int
pop
movsl
out
jbe
mov
mov
stos
fisttpll
inc
xor
inc
lahf
pusha
cmpsl
leave
mov
jge
add
insb
inc
gs
jne
xchg
push
iret
aas
ljmp
cmp
push
and
adc
inc
push
fstpl
jnp
push
out
je
insl
ljmp
dec
fldcw
lock
sub
and
push
push
pop
cmpsb
lahf
push
das
inc
add
incl
insl
sub
mov
sbb
into
popf
pop
cmp
inc
jl
xchg
jp
imul
inc
lock
rorl
test
adc
subb
ja
mov
addps
mov
push
cltd
add
call
or
icebp
xor
aam
pop
pop
dec
dec
fnstsw
cmp
inc
inc
bound
insl
aad
add
jge
push
leave
dec
movsb
fisttpll
arpl
daa
stos
xchg
xchg
adc
mov
inc
das
mov
mov
lds
pop
test
loope
testb
rorb
arpl
and
mov
fmuls
add
popf
mov
xchg
nop
xorb
or
out
dec
rcrl
ss
dec
push
push
lock
push
xchg
dec
xchg
ret
jnp
aam
pop
jbe
fiaddl
stos
out
and
cs
sbb
shlb
or
inc
aam
and
ja
pop
dec
pop
ret
loopne
ds
shrl
dec
sub
stc
ret
push
int3
not
movsl
cmpsl
jge
insb
push
inc
movsb
inc
mov
mov
cmp
push
roll
add
pop
sub
lea
push
cmp
pusha
lcall
xchg
pusha
jns
jmp
shll
xor
shll
cwtl
enter
dec
out
rcrl
push
cmp
in
xchg
adc
push
idivl
stos
mull
push
sbb
out
mov
rcrl
aas
jg
adc
out
stos
add
outsl
add
jns
xor
movsb
adc
ss
xchg
ljmp
insb
lret
jbe
inc
push
add
jle
adc
sarl
xlat
mov
mov
leave
mov
scas
ds
in
inc
or
es
mov
cmp
fisubs
in
xor
or
jg
mov
sbb
xor
repz
inc
sti
hlt
loope
pop
test
int
mov
stos
imul
jo
mov
or
sub
pushf
fcomi
add
shrb
push
clc
in
clc
or
and
lahf
xchg
push
pop
mov
jle
ljmp
out
xchg
outsb
jp
sub
mov
xchg
sub
xchg
xchg
pop
icebp
insb
test
aas
xchg
adc
xchg
in
pop
test
or
addl
lods
sbb
leave
adc
or
popa
aas
cmpl
fstp
sbb
into
cmc
mov
xor
outsl
addb
push
adc
popl
push
cmp
mov
add
cli
push
lods
cmp
ret
nop
data16
dec
fimuls
mov
aam
scas
cmp
out
insb
icebp
lods
stos
add
pop
fadd
std
mov
adc
mov
and
fidivrs
or
mov
jno
pushf
mov
repnz
stos
dec
xchg
movsb
push
cmpb
mov
stos
lds
bound
lock
nop
ljmp
fsts
mov
jl
icebp
pop
mov
pop
ss
lahf
mov
or
mov
jbe
fdivs
cmpsb
int3
adc
pop
sub
inc
out
cld
mov
fwait
and
insb
mov
mov
push
mov
xchg
roll
mov
jae
xchg
xchg
test
push
and
outsl
mov
xor
pop
cmc
push
fidivs
mov
jle
dec
dec
jmp
leave
pop
mov
xor
pop
mov
lret
mov
cmp
movsl
rcrl
mov
test
shrl
int3
clc
add
arpl
jnp
adcb
idivb
lock
cmp
iret
sahf
loopne
push
or
ds
movsb
cli
mov
xor
neg
lret
lret
outsl
cli
test
or
aad
cmp
sbb
stos
mov
push
cmp
andb
mov
sbb
rolb
lahf
dec
pop
mov
dec
lea
add
cs
in
push
cmpsl
adc
sub
aaa
jne
mov
fisubs
fbld
test
in
js
mov
test
xor
mov
xor
push
mov
and
subb
dec
sahf
adc
push
add
xorb
jnp
mov
xchg
sub
in
pop
into
jle
mov
xchg
jns
push
cmp
jae
in
sub
xchg
lea
loopew
cmc
stos
sbbl
inc
mov
mov
andl
lds
hlt
xchg
pop
mov
outsl
push
dec
popf
loop
mov
jp
dec
pop
pop
inc
add
xor
negl
fadds
bound
mov
mov
data16
jae
jmp
mov
xchg
pop
pop
fdiv
mov
xor
stc
and
mov
lret
or
lods
fcom
jnp
sbb
pusha
push
aad
fmull
arpl
cmc
sub
mov
xchg
mov
iret
cli
mov
pop
pop
jne
adc
std
data16
cmc
aas
xchg
subb
clc
mov
scas
inc
push
mov
jecxz
push
repz
repnz
sbb
or
test
loopne
paddusw
lea
cltd
cs
insl
push
xchg
sub
pop
pop
sub
hlt
xchg
int3
jg
lahf
das
in
in
mov
arpl
mov
imul
ljmp
pop
mov
aam
cmp
movsl
dec
adc
imul
int
inc
and
xchg
mov
sbb
aad
insb
lods
and
sar
pop
dec
cs
daa
rolb
inc
outsb
mov
lock
add
push
out
pop
cmp
movsb
sub
shll
adc
lock
dec
rcll
and
data16
lods
pop
loop
nop
mov
xlat
pop
cmp
ja
mov
in
das
xchg
stc
and
xchg
xor
dec
push
lods
cmpl
sahf
in
sbb
lcall
aam
sub
xchg
mov
lahf
adc
mov
cmp
xorb
fs
mov
rorb
shrl
pop
in
xchg
push
inc
popa
mov
cmp
push
orb
sbb
cmp
xorb
mov
mov
shrd
pop
jae
outsb
test
pop
mov
push
lcall
xchg
xlat
pop
mov
xchg
cmp
data16
jno
mov
mov
loop
cld
xor
dec
andnps
loop
ret
xchg
and
mov
test
cmpsb
int
xor
sub
cmp
enter
pusha
push
push
xor
and
arpl
mov
out
clc
adc
mov
movsb
add
rolb
sub
mov
rorl
add
icebp
dec
test
mov
imul
ljmp
mov
mov
sub
sahf
mov
jge
and
insb
pop
scas
inc
int3
mov
pop
push
dec
dec
mov
adc
inc
lret
call
adc
push
push
rorb
sbb
mov
pop
loope
jp
imulb
or
cli
fcmovnu
sub
add
pop
outsl
pop
gs
adc
in
mov
popa
or
test
sahf
cmp
push
fisubl
inc
mov
mov
out
in
push
int
add
adc
add
adc
inc
pusha
fistpl
mov
and
out
stos
pop
push
dec
xchg
cmpsb
outsl
cmp
jnp
xchg
js
pop
mov
shl
sti
arpl
push
lahf
rcl
clc
in
pminub
pop
sbb
inc
and
xor
jp
outsb
fildll
js
xlat
sbb
test
push
das
dec
mov
push
test
xchg
popl
lret
pop
sbb
mov
dec
mov
jnp
adc
mov
cmp
stos
les
mov
out
inc
aad
dec
sub
fisttps
xor
outsl
nop
pop
jecxz
add
mov
out
lea
mov
jle
sub
adc
xchg
pop
bound
decl
pushf
rcl
cmp
pop
inc
repz
aam
jecxz
mov
add
jl
dec
or
sub
add
xchg
adc
dec
fndisi(8087
push
fistl
add
inc
shll
sub
sti
xchg
aad
repnz
sub
popa
lret
add
pop
das
pop
outsl
inc
adc
int
ds
push
insb
dec
in
bound
shrb
mov
hlt
pop
mov
jmp
faddl
in
and
movsl
imul
push
rcll
jl
push
xor
imul
pmaxub
cmpsb
pushf
inc
roll
loope
popl
or
jmp
sub
in
mov
mov
movsl
jmp
ss
outsl
movsb
mov
and
sarl
jne
out
mov
xor
pop
cmpsl
jmp
inc
cmp
cwtl
lds
mov
dec
pop
push
cltd
sub
rep
mov
pushf
push
xchg
xchg
mov
repnz
push
fmulp
cs
lock
push
xchg
mov
xchg
pop
subl
test
jle
fwait
inc
push
xor
fsubs
cs
in
scas
rcl
push
mov
xlat
xor
mov
mov
dec
jb
jb
lds
cmp
gs
shl
jmp
push
add
call
mov
sbb
mov
pop
aam
inc
sub
in
in
fildll
xchg
jbe
sub
in
sbb
dec
cmp
inc
test
in
mov
add
mov
cmp
pop
cmp
mov
daa
adc
outsl
fistl
inc
fists
shlb
jp
jnp
pop
mov
test
push
xor
xor
xor
ffreep
xor
and
cmpsl
jb
mov
sahf
cmpsl
sbb
xor
pop
cs
mov
je
or
lahf
lds
fdivs
insb
outsl
and
jne
fcoml
fwait
mov
in
addr16
iret
loopne
adc
jne
jns
lock
int3
ss
add
fsts
or
add
xchg
inc
sub
sub
adc
push
ss
loopne
ret
fstl
mov
or
xchg
shll
jo
adc
jo
sub
shr
cmc
rcl
lds
mov
inc
lock
mov
push
daa
xchg
cmp
mov
mov
mov
stc
lods
pop
out
sbb
roll
xbegin
arpl
xlat
push
je
int3
sbb
inc
mov
arpl
add
pushf
add
jb
mov
test
xor
jns
sbb
addb
or
std
imul
sti
mov
out
sbb
xchg
push
add
test
push
out
pop
fnstsw
icebp
push
inc
nop
mov
xor
insl
xchg
scas
mov
pop
and
daa
jle
cmp
pop
push
add
pop
shll
ss
mov
repz
lea
fwait
inc
repz
ss
sbb
std
xchg
inc
std
in
fcmovb
pushf
add
js
inc
aam
mov
int3
mov
xchg
xchg
test
fnstenv
adc
addr16
out
ffree
addr16
pop
das
and
jmp
pop
gs
ja
or
pop
cmp
pusha
pop
sub
minps
negb
adc
enter
into
aaa
popa
mov
add
lods
sub
popa
loope
push
jecxz
push
jo
pop
cmp
dec
adc
pop
pop
mov
add
fldenv
push
jbe
or
mov
loop
test
add
xlat
inc
xor
dec
stc
ja
push
mov
pushf
frstor
in
add
and
in
mov
inc
add
andl
rol
dec
adc
jmp
mov
mov
call
xchg
and
insl
movsl
lock
or
stos
addb
int3
pop
push
add
imul
ret
mov
inc
push
xchg
sbb
mov
aas
push
cld
in
jae
fists
jns
xor
stos
xor
scas
cmpsb
hlt
aaa
xchg
and
mov
lds
add
in
test
test
ret
jp
leave
mov
push
xchg
push
jmp
lds
cmpsl
std
inc
ret
jae
add
mov
sbbl
mulb
mov
sub
insl
and
xchg
test
lret
inc
mov
mov
icebp
scas
arpl
cmp
jle
sbb
xor
add
adc
iret
xor
jle
jo
adc
mov
jge
mov
pusha
push
fdivp
push
fnsetpm(287
loope
stc
es
jmp
add
or
sub
fdivrs
cmp
dec
dec
or
mov
fmuls
shrb
in
push
sbb
es
stc
dec
sar
push
sbb
jecxz
pop
push
leave
mov
pop
std
cmpsl
out
fidivs
dec
ja
pop
loop
push
fnstsw
out
iret
xor
outsl
popa
out
xchg
ds
mov
mov
jno
add
cld
into
shlb
or
push
push
or
adc
addl
cltd
mov
dec
je
out
jne
cltd
int
push
jmp
mov
mov
or
in
ret
shl
mov
scas
add
xchg
push
sbb
ficomps
xor
push
ds
mov
sarb
jge
lret
movsl
icebp
shll
sar
cs
mov
scas
imull
xchg
sub
bound
outsl
mov
fildl
push
outsl
and
xor
js
or
mov
andl
test
ss
xchg
pop
lret
jl
fidivs
dec
sub
dec
mov
std
stc
inc
aam
scas
pop
test
enter
movsl
mov
loopne
mov
mov
std
pop
lret
enter
adc
movsb
popa
lds
orb
fistpll
sbbl
add
or
popa
or
push
es
push
cltd
sahf
add
test
xchg
in
scas
shll
jb
lea
outsl
mov
movsw
xchg
fidivl
fs
sbb
xlat
dec
movsb
push
das
inc
add
dec
jg
push
jmp
adc
mov
inc
mov
xchg
cmp
ljmp
pop
mov
pop
movsb
jecxz
fxch
add
xchg
mov
push
sub
jge
fwait
daa
gs
into
push
jp
dec
mov
stos
loopne
sbb
ljmp
sub
or
xchg
imulb
notb
enter
add
bound
jo
inc
mov
test
jge
call
lock
lahf
push
aas
cwtl
call
add
mov
dec
push
hlt
std
cmp
add
dec
inc
lods
cmp
push
or
dec
out
lret
pop
int3
and
das
cmp
das
ret
cli
enter
pop
mov
cmp
pop
sbb
sbb
lret
shr
cmc
jp
dec
lock
popa
xlat
or
and
add
mov
cli
aaa
pop
stos
ja
mov
fwait
or
or
nop
ss
xchg
xor
arpl
gs
into
dec
mov
in
test
ffreep
inc
shlb
xor
dec
fistl
cmpsl
lods
bound
fcomps
test
inc
stc
pop
lret
js
stc
jg
ja
and
call
insb
dec
dec
push
push
add
dec
lret
out
xchg
bound
push
push
pop
inc
inc
jmp
cli
sbb
sub
add
js
dec
test
push
in
stos
or
outsl
fisttpl
inc
or
mov
push
mov
std
js
sub
jl
dec
pop
ss
cmp
push
in
sub
dec
dec
push
xchg
jb
ret
outsb
xchg
jmp
and
outsb
pop
test
ja
fistpl
inc
test
mov
or
push
or
mov
in
cmp
pop
adc
fistpll
pop
lock
jb
addr16
scas
or
mov
idiv
pop
int
aaa
inc
and
aas
fisubrl
inc
mov
and
fldcw
sub
test
data16
sahf
or
mov
aam
rcrl
mov
movsb
or
cmp
mov
mov
movsb
mov
iret
pop
sbb
or
mov
mov
xor
xor
jb
xchg
sbb
out
rorb
push
mov
repnz
jmp
jp
push
hlt
sbb
pop
jnp
movb
negl
fsubl
clc
filds
mov
enter
and
sarb
mov
jno
sub
les
cmp
mov
xor
pop
or
andl
jae
pop
pop
jae
loopne
out
mov
mov
add
test
loope
mov
cmp
out
imulb
push
test
addl
or
shll
fwait
test
mov
adc
pop
stos
pop
or
mov
and
jb
out
jns
cmpl
in
dec
enter
mov
inc
int
or
dec
inc
nop
cltd
add
lods
bound
pop
stc
xchg
and
xchg
pop
pop
adc
pop
or
adc
addr16
xchg
and
sub
xchg
mov
push
xor
push
or
or
ror
arpl
sub
xchg
sbb
jle
mov
pop
push
stos
mov
inc
rorb
rcll
pop
mov
push
xchg
or
popf
dec
inc
lcall
pop
std
mov
jae
rep
test
pop
mov
pop
movsb
xor
or
scas
push
mov
jnp
rcrb
mov
adc
pop
test
dec
cmp
dec
add
popa
out
dec
jecxz
mov
mov
bsf
xchg
sub
jbe
push
test
mov
adc
xchg
aam
cmp
je
pusha
pop
inc
mov
std
mov
les
fbstp
cld
ljmp
inc
inc
mov
xchg
add
and
adc
cld
add
push
lods
ljmp
mov
mov
mov
aam
inc
xchg
pop
xchg
imul
in
pop
mov
les
jmp
scas
cmpps
xchg
xchg
pop
mov
mov
fwait
mov
mov
lods
bound
mov
mov
jno
test
push
mov
push
mov
pop
cmp
test
fstpt
sbb
add
outsb
into
adc
bound
fs
mov
movsb
xchg
fisubrs
sbb
sbbl
pusha
iret
aaa
stc
inc
pop
xor
int
das
pop
xchg
ret
mov
xor
addr16
test
pop
dec
data16
push
inc
lods
inc
jnp
stos
dec
jbe
movlps
sbb
sub
mov
jp
iret
in
adc
movsl
lds
mov
out
dec
mov
ret
imul
sbb
and
or
and
push
subb
dec
scas
inc
lret
cmpsl
lea
cld
jb
daa
and
push
mov
dec
push
pushf
loopne
xor
sub
pop
xchg
mov
push
jbe
mov
and
js
sub
push
insb
imul
je
jnp
arpl
out
mov
out
cmp
xchg
mov
lea
xchg
jp
and
adc
lahf
add
fidivrl
or
fldenv
cltd
jg
jl
rol
sbb
imul
xchg
xchg
jp
cli
dec
nop
out
ret
out
mov
adc
dec
pop
jne
or
ret
xorl
aad
or
addr16
pop
add
jne
lret
sub
fimuls
ret
gs
lcall
inc
rcl
cmp
repz
jb
cmc
mov
clc
add
pop
sbb
aaa
adc
mov
push
mov
cld
add
jecxz
dec
and
iret
inc
cmp
fisttpll
mov
dec
int
and
xchg
dec
and
mov
cwtl
xchg
jo
notl
int
and
popa
mov
fdivs
jle
xor
std
cs
mov
mov
imul
xor
pop
cmc
inc
scas
mov
cmpsb
pop
fsubl
decl
jp
in
call
imul
ret
xchg
sarl
rcll
cli
add
int
xor
cmp
xchg
mov
mov
aam
lds
shr
cld
loope
push
add
adc
push
adc
sub
sub
mov
mov
sbb
jle
pushf
adc
jmp
or
aam
push
xor
loope
and
stos
popa
popa
in
push
cmp
stos
iret
pushf
push
andb
je
and
ret
daa
js
mov
mov
xchg
cmp
xchg
loope
adc
adc
outsl
inc
test
mov
cmp
ja
roll
mov
push
ret
xchg
cmp
test
pusha
and
xchg
sub
nop
push
pop
sbb
in
or
mov
mov
sar
inc
and
xchg
hlt
and
adc
add
cmp
mov
sti
dec
dec
pusha
xchg
mov
adc
jae
mov
xchg
cmc
test
mov
mov
out
mov
pop
jmp
or
push
pop
lret
adcl
lods
sub
mov
inc
fsubp
cmp
mov
jns
stc
add
loope
rclb
and
outsl
out
push
push
push
push
add
jg
push
adc
cld
push
mov
insb
sti
pop
jmp
pop
and
xchg
mov
lret
inc
fidivl
adc
push
mov
enter
adc
fs
xchg
cli
push
push
mov
pusha
js
int
mov
jle
pop
sub
mov
fdiv
imul
cmpsb
mov
jbe
repnz
push
dec
mov
sub
cmc
pop
jne
jp
addb
cmp
or
mov
push
or
inc
xchg
jno
bound
imul
mov
ja
ss
lret
int
dec
test
xor
and
fmull
lea
fidivrs
test
scas
or
inc
fwait
dec
xor
mov
rol
add
std
pop
mov
push
jae
mov
jg
ret
xor
add
adc
sub
xorb
xor
int
jg
pop
and
push
loopne
mov
inc
cmc
jns
cmpps
lahf
add
push
mov
popa
pop
imull
jb
test
into
test
or
inc
jmp
outsb
ljmp
ficoms
sub
ret
in
jle
or
rcl
sbb
dec
bound
dec
mov
cmp
sbb
cld
push
fdivl
movsl
sti
sbb
xor
pop
mov
iret
or
mov
push
xchg
in
outsb
aad
pop
sub
sahf
pop
xor
aad
icebp
leave
iret
xor
cld
outsb
fsubl
push
cmp
lock
inc
jmp
jne
jecxz
repnz
inc
aad
pop
outsl
sbb
mov
and
test
repz
jge
leave
pop
dec
loop
cmc
int
dec
repnz
inc
mov
shr
mov
into
add
sub
inc
mov
sahf
adc
mov
adc
ds
xchg
xchg
pop
and
xchg
mov
jnp
hlt
cmp
cmp
jmp
sahf
dec
adc
jl
sbb
out
insl
stos
cld
sub
les
dec
or
sbbl
cli
ss
cmpb
jo
fidivrs
popf
sbb
or
in
add
dec
push
adc
call
js
dec
xchg
pop
ss
movsb
loop
jae,pt
scas
add
sti
hlt
ss
lea
stos
xor
mov
push
out
pop
cmpsl
lock
xor
fisubs
add
push
fistpll
push
ljmp
insl
jg
les
lock
scas
mull
mov
popa
imul
enter
and
adc
cmp
adc
dec
fnstsw
dec
adc
dec
cmp
jmp
mov
andw
push
mov
mov
and
shrb
jg
jb
shll
add
stc
movsb
sub
pop
out
sbb
and
ljmp
mov
nop
dec
inc
aad
push
lahf
jno
mov
cmp
data16
cmc
adc
arpl
mov
push
jno
loopne
ss
and
aam
and
mov
mov
imul
xor
in
sbb
mov
sbb
icebp
gs
cmp
les
jae
sbb
xchg
call
add
ja
push
scas
in
mov
test
movsl
inc
xor
xchg
xchg
cmc
lcall
xor
and
ljmp
ljmp
or
mov
pop
add
cmpsl
shl
dec
iret
cmp
pop
push
mov
insl
lods
push
push
lods
push
dec
jg
inc
jo
pushf
into
xchg
pop
adc
das
sbb
sbb
popa
xchg
dec
jno
inc
js
sbb
popf
or
addr16
or
cmpl
rol
loop
or
stc
int
jbe
pop
dec
sub
insl
xchg
aad
dec
sub
or
xlat
loopne
aam
push
xor
mov
enter
out
adc
mov
xchg
js
inc
mov
loopne
add
xor
and
jp
cmp
adc
cld
mov
fsubrl
pop
repz
les
mov
sub
cmpsb
mov
in
scas
pop
inc
popf
jmp
shlb
lahf
push
cmp
iret
fisubrl
adc
cltd
jl
inc
mov
in
mov
paddw
in
lock
lahf
lods
mov
ljmp
push
arpl
sub
sbb
or
xchg
mov
das
push
insb
sub
gs
sub
mov
js
dec
pop
test
or
adc
add
repnz
stos
int
pop
in
xchg
popa
int3
mov
das
movsb
pop
ljmp
xchg
test
and
ss
enter
jp
sub
jns
sub
adc
pushf
mov
outsb
add
jle
les
adc
jnp,pt
xor
aad
add
adcb
mov
pop
testl
jmp
mov
cld
ss
ficompl
dec
addr16
jmp
jbe
push
push
push
cwtl
xor
cmp
inc
mov
insb
add
mov
mov
cmp
scas
push
aad
addr16
push
sub
jno
xchg
xchg
adc
subb
dec
cli
mov
daa
push
dec
ljmp
lcall
movsb
mov
dec
mov
fisubrs
divl
into
jbe
enter
inc
cmp
scas
xchg
in
xchg
inc
mov
push
adc
dec
inc
cmp
and
sbb
push
sub
inc
add
js
xor
adc
mov
or
lock
xchg
and
adcb
mov
cmp
in
int3
cld
imul
sbb
int
cltd
xchg
xor
icebp
jecxz
add
dec
push
fsubl
push
jmp
jg
hlt
or
or
push
int3
scas
arpl
sub
sbb
sbb
rclb
icebp
mov
sti
lea
nop
loop
push
pop
lods
inc
xlat
xor
popf
xchg
icebp
push
sub
add
xor
jbe
das
or
fidivrl
fidivl
int
in
cmpsb
mov
push
lods
fwait
mov
pop
mov
out
scas
xlat
adc
jge
push
dec
sbbl
and
mov
xchg
insb
js
add
imul
push
mov
test
adc
dec
test
sbb
and
or
mov
dec
movl
lret
sbb
sub
adc
test
cmp
cmp
out
pop
and
aaa
iret
pop
sub
loopne
add
mov
jge
dec
inc
xlat
mov
cmp
or
push
ret
arpl
cmp
cmp
addr16
mov
inc
arpl
inc
scas
int
or
cli
lock
pop
ds
inc
lret
sti
popf
nop
pusha
xchg
jno
rcr
cmp
jle
jl
pop
aaa
push
les
adc
jo
mov
dec
jecxz
fdiv
pop
lret
cwtl
sbb
pop
rcl
enter
int
call
popa
lcall
shrb
sbb
repnz
in
mov
mov
repz
cmpsb
inc
or
cmpsb
sub
push
or
adc
enter
and
push
call
add
and
xor
cmp
imul
dec
pop
mov
aas
imul
jno
imul
scas
mov
pop
lods
ljmp
test
fldt
stos
mov
pop
daa
push
es
adc
ret
mov
sti
push
movsl
mov
popa
or
test
insb
imul
int
nop
jne
or
jbe
lret
sbb
stc
in
xlat
xchg
fidivs
mov
into
fs
test
add
pop
inc
push
dec
inc
movsb
push
loop
scas
mov
sub
mov
pusha
es
adc
xchg
add
jo
mov
lret
cmpsl
cmp
out
scas
sbbb
rcll
movsl
gs
popa
pop
cmpsb
shl
add
jp
inc
cmp
sbb
push
std
enter
pop
js
lods
fst
mov
mov
dec
sbb
adc
mov
xchg
pop
andb
jnp
jl
lret
inc
mov
into
arpl
mov
int3
cmp
inc
outsl
fmull
clc
shrl
cwtl
adc
push
test
cmp
stc
inc
inc
jne
cmp
fwait
lea
xor
sbb
mov
pushf
mov
jb
or
or
cmc
or
rorb
dec
jbe
pop
mov
mov
pop
cwtl
xchg
sarl
pop
sub
push
in
in
jge
orl
fildll
leave
insb
bound
out
scas
jmp
in
loopne
pop
jo
movsl
sbb
ljmp
cltd
lods
outsl
inc
pop
daa
loop
dec
sahf
clc
stos
scas
fimull
arpl
sbb
loop
sar
cmp
out
adc
jg
xchg
mov
pop
imul
xor
pusha
jle
sbb
jae,pn
shll
cmp
filds
call
add
mov
push
aam
dec
in
scas
jg
repnz
ficomps
add
dec
add
loop
daa
cli
cbtw
std
xor
pop
mov
leave
aad
mov
mov
fldlg2
stos
stos
subb
cs
adc
xor
std
iret
mov
mov
cli
jp
loop
jp
stc
stos
jp
stos
ljmp
and
repz
cmp
cmpsb
or
push
into
xchg
movsb
lods
cmp
shrb
je
or
mov
inc
ss
push
lahf
xchg
int
lret
push
adc
notl
jae
push
arpl
lea
sbbl
rcrb
fstps
daa
cmpsl
and
shlb
cmp
jbe
cmc
cld
inc
xor
lods
pop
and
iret
jbe
sub
setl
mov
int3
xchg
mull
dec
cmp
loope
xchg
repnz
push
push
mov
mov
cmp
nop
inc
fsubs
and
inc
ljmp
xchg
gs
mov
cmp
push
lret
sbb
jae
push
nop
loope
and
push
incb
out
inc
aam
insb
mov
add
lret
and
aad
mov
fistl
nop
add
dec
ficoms
inc
and
pop
in
lahf
add
mov
shll
cld
add
call
mov
call
and
outsb
stos
and
in
mov
lahf
inc
lret
mov
xor
rcll
insl
sbb
ret
inc
adc
and
ljmp
jo
and
inc
enter
xor
sub
and
les
pop
mov
mov
lea
into
adc
jmp
pop
lret
lret
gs
xchg
out
push
sbb
cltd
sahf
jl
mov
push
aad
cmp
push
arpl
dec
adc
or
hlt
in
stos
loope
jg
xor
xchg
jg
movsl
mov
jl
mov
lods
adc
add
xchg
ss
lahf
or
repnz
imul
push
or
inc
aas
stos
xchg
and
inc
xchg
mov
lret
fiadds
es
stos
mov
jge
sub
mov
mov
dec
stos
sbb
mov
mov
lods
insl
xlat
les
jmp
mov
xchg
push
add
push
jae
xchg
mov
iret
popf
cmp
cmp
cmpsl
or
xor
in
repnz
dec
test
xor
add
pushf
sbb
cmp
loop
push
aam
test
inc
mov
es
movsl
cli
int3
jae
test
xchg
aad
pusha
rclb
lcall
lock
ljmp
ljmp
mov
xchg
cs
mov
repz
sub
or
stos
jp
mov
jmp
push
mov
clc
cmp
push
out
xor
and
mov
push
mov
mov
pop
scas
cmc
and
xor
push
addr16
mov
jle
test
fidivl
mov
lods
push
mov
jae
movsb
aaa
or
add
sub
arpl
mov
mov
jge
mov
movsb
ljmp
xor
push
cmpsb
aam
inc
roll
int3
cmc
ds
ficoms
jnp
lods
icebp
stos
lods
jae
push
adc
out
lods
dec
lods
das
jle
xchg
xor
sbb
inc
jle
mov
xchg
negb
mov
sub
mov
inc
js
rcll
imul
adc
ret
push
lods
or
ss
xor
addb
sbb
iret
test
jecxz
lods
and
push
lock
jp
sahf
mov
add
outsl
dec
cmpsb
sbb
sbb
cmc
leave
adc
jl
add
test
jno
adc
fidivrl
mov
and
lret
mov
icebp
mov
lock
popf
fcomps
lcall
jmp
pop
lock
daa
nop
imul
push
and
pop
loop
lret
int
ljmp
dec
pop
xchg
mov
cmp
pop
nop
inc
test
in
mov
aam
jae
mov
dec
jle
jge
sub
jl
lods
fdivrl
sarb
in
push
call
jae
mov
out
push
jle
pop
jne
ret
jecxz
add
cwtl
ss
stos
push
add
mov
dec
push
sti
test
addr16
and
test
mov
adc
jp
push
cld
mov
mov
int
mov
push
mov
sub
repnz
fisttps
adcb
mov
inc
sti
stc
andps
sub
mov
lock
sbb
aad
adc
sub
cs
movsb
sbb
jbe
and
ja
leave
push
sbb
jp
mov
std
cmpsl
rorl
popa
pushl
jbe
gs
decl
mov
das
or
mov
int3
stos
in
outsb
test
sbb
lods
insb
je
fucomip
cmp
inc
jne
jo
movsl
mov
inc
push
jns
cli
jnp
cli
repnz
cmp
icebp
mov
gs
repz
repz
and
mov
imul
push
pop
aaa
lret
push
or
out
stc
int
inc
cmc
das
lret
or
push
inc
movsb
mov
pusha
xor
mov
push
aam
add
aad
jecxz
xchg
add
mov
or
xor
push
pop
or
jp
imull
dec
nop
lret
fs
sti
dec
fwait
inc
lret
xor
pop
mov
adcl
ficoml
test
idivb
push
adc
pop
cmp
rcr
xor
lock
leave
mov
pop
xor
pusha
icebp
xor
xchg
mov
dec
hlt
sbb
cmpsb
insb
adc
inc
xor
push
sahf
xchg
cmp
insb
sbb
sub
mov
adc
or
pop
lds
push
loopne
fwait
notl
lods
inc
mov
cmp
adc
mov
test
testl
movsl
jo
jp
cmp
insl
mov
xor
adc
jns,pn
and
cmp
adc
jbe
adc
adc
sbb
and
nop
jg
xor
sbb
ljmp
mov
ljmp
popl
sub
sbb
bound
add
ljmp
dec
mov
lcall
sub
fwait
push
cmp
je
xchg
push
addr16
jae
lcall
popf
divl
pop
or
mov
je
xchg
jae
hlt
add
in
mov
bound
adc
mov
or
push
enter
pop
jb
fldenv
mov
in
stos
cs
dec
sub
sbb
mov
inc
mov
adc
xchg
mov
stc
cli
mov
movsl
adc
jle
iret
adc
divl
xor
xor
imul
lods
leave
mov
xor
jno
lahf
out
data16
stc
adc
lahf
test
cmp
mov
sub
mov
adc
loop
movsl
jbe
xchg
mov
js
aaa
mov
hlt
cmp
call
jl
jno
xchg
mov
loop
jl
lds
push
mov
add
or
push
add
sti
stc
fidivl
pop
mov
mov
or
sbb
cmp
pop
push
xor
inc
mov
jle
sbb
loop
sahf
inc
jno
push
cmc
jl
xchg
test
into
add
std
mov
stc
push
ret
in
movsl
dec
mov
pushf
and
xchg
push
push
jecxz
cld
fldl2e
sbb
sub
stc
fldpi
xor
jge
ss
push
or
sbb
and
fstpt
adc
pop
mov
int3
or
inc
xor
rolb
inc
mov
pop
xor
adc
outsl
inc
cld
inc
icebp
push
dec
icebp
add
mov
push
dec
or
sbb
sub
xchg
rcr
outsb
stos
lods
lahf
scas
xor
test
push
fcoml
jge
mov
dec
nop
cmp
fidivs
outsb
ret
mov
fcoms
dec
jecxz
or
adc
and
inc
lods
push
lret
aaa
fsubrs
cmp
lret
push
adc
sub
jecxz
mov
fcomps
add
sbb
jo
mov
inc
js
lods
ds
jns
loop
mov
sahf
mov
cmpb
mov
cmpsb
add
dec
ljmp
int3
mov
sahf
xor
in
add
outsb
gs
testb
lcall
push
push
push
cmpsl
mov
scas
mov
shll
xor
stos
or
test
and
into
fcoml
repz
or
cmp
out
mov
jo
pop
dec
pop
daa
dec
cld
sbb
inc
and
fstl
mov
dec
dec
or
jg
xchg
push
or
loopne
xlat
sbb
cltd
sahf
rcrb
push
cmp
lcall
xor
and
jo
out
lds
outsl
sub
ret
cwtl
xor
cwtl
cmpsl
js
jb
xor
jns
es
arpl
jmp
shr
dec
popa
test
or
jno
mov
aaa
icebp
lret
jno
xchg
dec
test
and
adc
idivl
jo
xchg
jb
or
jp
and
nop
daa
mov
aaa
push
inc
jg
je
add
or
xchg
adc
and
ljmp
mov
xor
mov
incl
insb
in
pop
mov
bswap
mov
mov
fsubs
push
add
cmp
jp
rcl
bound
sub
clc
dec
das
mov
pop
pop
jge
idivl
addr16
jl
movsl
ret
cmp
add
inc
xchg
adc
loope
shlb
adc
dec
dec
mov
mov
pop
in
dec
subl
mov
pop
pop
pop
jb
or
mov
stos
inc
lods
sub
fidivs
xor
adc
daa
fildl
pop
outsl
fwait
cs
push
clc
push
sbb
fcmovnb
mov
xor
cli
loop
imul
jecxz
sbb
call
imul
sbb
push
dec
or
sarl
adc
or
lock
sbb
jo
cmc
rclb
shr
out
and
popf
xchg
pop
aad
xchg
fldt
lret
and
add
loopne
xchg
xorl
movsb
cmp
mov
call
add
ror
mov
test
or
jp
dec
daa
jge
cmp
pop
push
dec
int
outsl
and
mov
into
ficompl
stc
subl
pop
data16
jae
jb
push
aad
xlat
cs
mov
xor
clc
xor
loope
insl
and
cmp
sub
ds
or
mov
ss
add
push
dec
cmpl
sub
add
cwtl
js
cmpsb
hlt
popf
adc
aam
pop
jo
inc
jae
int3
insl
mov
repnz
adcb
xchg
ljmp
test
and
push
add
sbb
xor
xchg
mov
dec
pushf
pop
sbb
jp
mov
and
popa
stos
jnp
out
test
iret
test
xchg
iret
jno
ffree
icebp
push
iret
aad
mov
sub
insb
mov
xchg
mov
fadd
mov
fcoml
mov
jnp
movsl
movsb
in
ret
mov
lret
repz
cmpsl
fiaddl
mov
push
test
pop
jb
stos
cmp
jbe
test
sbbl
push
iret
ret
imul
pop
in
jge
lcall
and
sbb
xchg
dec
adc
add
mov
xchg
cmp
pop
mov
cmp
push
pushf
cmpsl
insl
popl
push
dec
clc
sti
mov
ljmp
sub
aaa
adc
rclb
testl
loop
into
push
test
test
mov
mov
test
jle
iret
mov
xor
inc
repz
sub
sahf
fcompl
mov
test
cmp
movsb
enter
xor
pop
sub
mov
sti
cmpb
jecxz
jecxz
lods
pusha
adc
jl
xchg
sub
inc
ret
aaa
pusha
movsl
out
insb
push
cmpb
adc
cmpsl
mov
or
adcl
pop
sbb
pop
std
loopne
add
fistps
mov
jb
insb
cwtl
int3
dec
loopne
jb
jns
movsl
mov
fwait
enter
push
scas
inc
shl
add
sti
add
xchg
bts
ficompl
test
incb
cmc
out
xor
push
popf
clc
into
aam
data16
xchg
rclb
sub
add
jge
lret
imul
mov
or
mov
jg
or
and
pop
xor
je
mov
push
inc
paddb
outsl
push
outsb
lcall
pop
or
inc
pop
add
add
and
rol
mov
cmp
cmp
ja
and
pop
cmp
mov
inc
inc
dec
jecxz
push
shll
rcr
dec
jae
dec
or
sbb
data16
pop
enter
jmp
jp
pop
iret
aas
cmc
mov
and
sub
test
xchg
or
mov
jg
ja
sbb
dec
sbb
mov
or
and
or
mov
or
mov
sbb
mov
adc
mov
lahf
ljmp
std
pop
cs
jg
rolb
aam
stos
sahf
lods
and
xchg
and
dec
pop
lock
popw
xchg
push
ficomps
pop
fdivrp
dec
std
test
sar
cmp
inc
rcrl
notb
out
dec
push
add
jns
mov
aam
fildl
cmp
and
xlat
dec
cld
pop
dec
mov
ds
lcall
loope,pt
sbb
shlb
cltd
test
aas
xor
pop
jae
sub
mov
pushf
data16
sbb
inc
inc
nop
insb
push
rcrb
in
inc
lret
mov
mov
out
mov
push
sbb
mov
push
ret
leave
fbstp
dec
lret
dec
sub
mov
out
mov
inc
jge
pop
adc
mov
rorl
push
mov
sub
lods
xchg
cmc
push
xchg
arpl
int
icebp
and
clc
push
test
mov
jno
mov
add
flds
leave
mov
add
ja
mov
mov
stos
mov
xchg
adc
ficompl
jbe
and
push
aaa
xchg
mov
jbe
roll
mov
dec
lods
addr16
cs
lds
lock
enter
cmpsb
xor
pop
pop
data16
add
dec
shlb
int3
sarb
sub
and
and
xor
adc
stos
push
stos
jp
negb
lea
sub
mov
lea
stos
sub
xor
sub
aam
scas
sbb
fdivs
dec
out
xchg
jno
lret
call
xchg
fs
push
shlb
pop
in
out
jp
push
fs
cmpl
imul
push
sub
jne
test
push
add
adc
cmp
pop
and
cmc
std
mov
dec
sub
ret
jg
mov
sub
push
lcall
stc
cmpsl
jnp
into
arpl
sti
pop
and
sbb
lds
inc
ret
mov
xor
loopne
lods
cmpsl
cmc
inc
mov
in
sub
iret
inc
jmp
ljmp
mov
add
and
jae
clc
sub
sahf
imul
cwtl
sbb
inc
sub
xchg
dec
imulb
enter
ret
or
dec
mov
inc
shrb
pop
xor
cli
and
sub
or
xchg
and
fs
repz
rcrl
or
ds
insl
pmaxub
dec
push
and
push
out
hlt
adc
rcrb
cs
movsb
insb
pop
mov
sbb
xchg
pop
add
ljmp
lea
jp
cmp
cwtl
das
xor
add
xor
add
mov
sub
mov
sub
sbb
push
divl
cltd
dec
mov
rclb
push
inc
jns
push
mov
bound
popf
cmp
add
scas
ds
icebp
mov
cmp
mov
lea
loope
sub
out
add
push
dec
ljmp
sub
divl
add
dec
mov
pop
mov
jp
inc
sub
leave
ja
mov
xor
aaa
jns
scas
jne
push
cld
jg
arpl
pop
repnz
xchg
hlt
jecxz
bound
pop
leave
mov
adc
ljmp
rolb
or
pusha
ret
xchg
mov
shll
cmp
push
xor
xlat
repnz
cmp
mov
lret
gs
inc
call
scas
xchg
sbb
test
sub
jbe
mov
xor
cmpsb
pop
aad
push
xor
pop
lahf
scas
fsubrl
test
pop
divb
cmc
push
dec
inc
cwtl
cmp
mov
push
dec
xchg
data16
ret
inc
rcr
mov
rclb
jae
mov
sub
inc
test
insb
std
bound
xchg
and
js
les
shlb
ja
mov
xor
pusha
dec
xor
jns
xchg
inc
cmpsb
out
outsl
mov
in
out
mov
cmpl
jl
dec
mov
dec
lahf
jg
lcall
inc
sbb
and
add
mov
and
jb
jo
sub
dec
dec
and
movsb
lret
ficomps
mov
dec
out
mov
int3
fsts
insb
xor
mov
mov
sbb
or
daa
pop
inc
cltd
jne
pop
test
in
aam
mov
rorl
ljmp
pop
dec
inc
lea
movsb
jmp
xchg
enter
xor
lret
icebp
xor
push
rol
adc
pop
mov
mov
aas
subl
inc
adc
ss
push
dec
out
or
pop
cli
mov
jge
adc
push
or
xor
lret
mov
lret
leave
jle
jle
add
dec
nop
mov
cmp
movsb
jae
mov
adc
fs
stos
sarb
jno
insl
mov
scas
pop
sub
out
in
and
psllq
xor
addr16
lds
clc
push
pop
das
pop
cmp
in
adc
ja
mov
fs
aaa
push
push
adc
fildll
cs
faddl
imul
movsb
xchg
push
or
cmp
mov
movb
mov
pop
hlt
fwait
xchg
mov
pop
test
jb
out
fidivrs
loopw
shlb
push
es
stos
push
cmpsb
xor
ds
ljmp
mov
cmp
or
adc
mov
outsb
adcl
pop
jp
stc
clc
test
push
mov
sub
ret
xor
pop
mov
loop
fmuls
ret
jp
cmpsb
xchg
movsl
push
lret
imul
jecxz
and
aad
inc
addr16
outsl
popl
fistpll
loope
mov
jno
pop
outsl
dec
xchg
add
sbb
icebp
adc
or
cmpsb
push
inc
cmp
in
mov
add
ja,pn
stc
inc
cmc
mov
movsl
push
imul
xchg
leave
in
scas
jb
js
icebp
push
xchg
pop
jge
inc
inc
mov
add
fcoml
cmp
or
sbb
jnp
xlat
mov
mov
call
cmp
or
push
lea
jp
stos
rorl
push
mov
xchg
jbe
cs
shlb
outsb
out
repz
lcall
lods
call
mov
inc
js
mov
pop
les
xor
or
dec
adc
aam
cmp
mov
aad
test
dec
inc
cmp
and
sahf
pop
movsl
adc
aam
sub
je
leave
data16
mov
scas
cmp
mov
mov
lds
ljmp
mov
loop
cmp
jle,pn
int3
movsl
movaps
sub
xchg
or
in
je
jg
mov
mov
sub
inc
out
mov
add
je
or
mov
inc
sbb
and
lret
notl
sbb
dec
into
jbe
mov
insl
lods
jne
jmp
dec
imul
idiv
and
sub
xchg
dec
or
out
std
ficomps
xor
mov
push
push
rcrl
sub
scas
sahf
mov
jbe
stos
dec
js
pop
clc
mov
out
lea
inc
mov
pop
mov
das
mov
shrb
dec
ret
cmp
xchg
std
in
jecxz
fadds
nop
popf
repnz
dec
rcl
testl
bswap
ret
cmc
test
cltd
xorb
jno
in
lcall
imul
js
cmc
loop
mov
adc
sub
sarl
inc
or
into
dec
aad
jne
cmp
test
adc
push
pop
repnz
ds
xchg
xorl
inc
lea
push
loopne
mov
std
sbb
add
outsl
mov
cmc
jb
loope
xchg
pop
dec
roll
push
mov
call
popf
sar
xchg
aad
sarb
dec
mov
out
lds
xchg
outsb
xlat
push
dec
sub
pusha
xlat
out
push
ret
and
pop
mov
lods
insb
mov
sar
xchg
cmc
lods
cmp
add
arpl
popf
fldenv
mov
ret
mov
lea
imul
test
fcmovne
pop
cld
sahf
sub
inc
xor
jne
nop
ja
fs
out
addb
int
out
xchg
add
test
nop
pop
mov
jns
jno
loopne
pop
or
mov
push
outsb
popf
mov
cmpsl
in
ret
inc
jl
or
mov
push
push
dec
test
pop
inc
int
push
and
iret
jl
jns
jbe
stc
out
daa
idivb
xor
lret
test
mov
sbb
xor
mov
push
sti
mov
mov
je
test
loop
mov
dec
shll
cmp
das
sbb
shr
push
shl
mov
das
bound
cld
sbb
cmp
pop
xchg
push
repz
ljmp
outsl
leave
add
stc
lods
mov
enter
std
or
lods
in
ret
jmp
adc
mov
out
jmp
jnp
inc
and
stos
lahf
lcall
int3
inc
lods
mov
pop
sti
push
push
and
fisubl
sbb
sti
and
xchg
add
pop
gs
jnp
dec
stos
aad
into
shll
testl
sub
cld
adc
jmp
test
mov
xchg
in
lcall
sarl
mov
es
repnz
inc
movb
pop
in
repnz
ljmp
jnp
adc
add
les
imull
movd
insb
cmp
mov
dec
mov
mov
xchg
data16
push
cmp
subl
in
in
push
push
inc
insb
incl
adc
in
pop
std
popa
sbb
adc
les
mov
and
dec
or
jle
adc
mov
dec
xchg
rcl
incb
cmp
jg
cmp
loop
jb
repz
je
mov
dec
sub
pop
clc
movsl
inc
sub
add
inc
adcb
and
sbb
enter
xor
aas
xchg
in
lcall
jp
mov
loope
fistpl
int
fstpt
dec
and
and
das
adc
and
in
xor
rcr
outsl
imul
popf
cmpl
inc
mov
jle
or
sbb
xchg
or
int3
movsl
jmp
adc
jb
xchg
dec
in
mov
or
repnz
inc
lea
sub
dec
stos
ljmp
pushf
and
ja
sbb
mov
xor
test
fidivl
jne
mov
mov
jb
arpl
adc
push
cmp
fsubp
cmp
sub
mov
bound
sahf
stos
lahf
sbb
jg
pop
cmp
inc
outsb
pop
xchg
fisubl
out
jg
add
loope
jmp
aas
lods
mov
dec
xor
adc
loopne
imul
mov
pop
and
adc
inc
mov
xor
dec
jb
test
add
dec
xor
ret
sub
inc
add
cld
fcomps
xchg
adc
ss
and
sub
cmovle
add
fisubrl
sti
and
lods
inc
inc
clc
add
mov
idiv
leave
mov
repnz
and
mov
mov
ret
sub
mov
add
cwtl
out
cld
and
jno
aas
add
sbb
je
push
repz
arpl
cltd
cmp
and
mov
popf
jle
hlt
push
pusha
dec
in
inc
dec
cmpsl
sbb
mov
ja
cmp
jle
gs
outsl
repz
sahf
sub
dec
pop
les
sbb
sti
jecxz
mov
mov
adc
jb
sub
xor
mov
dec
sub
adc
enter
in
mov
sub
fs
cmp
add
lds
movsb
vdivss
jl
cmpsb
add
pop
fisubs
aas
in
popa
das
push
ljmp
mov
adc
stos
ss
or
mov
pop
sbbl
decl
add
inc
jl
add
and
daa
xor
jns
or
into
rol
xchg
pushf
jl
sbb
push
adc
push
aam
sub
mov
sbb
inc
push
xchg
push
and
cmpsl
mov
jbe
add
and
mov
aad
lret
mov
jb
mov
mov
pop
push
std
add
leave
cmp
add
les
inc
xor
js
aas
dec
aas
mov
cmp
inc
pop
pop
push
loope
out
xchg
adc
cmc
aad
xchg
or
das
mov
sbb
fcoml
iret
cli
mov
inc
pop
sub
mov
jo
mov
push
pop
mov
add
lods
add
dec
lods
hlt
adc
or
ret
xor
pop
cmp
and
cmpsl
add
push
fadds
jb
andb
or
sub
cmp
test
shlb
outsb
sbb
scas
fistpll
mov
adc
mov
mov
loopne
ss
mov
push
pop
lret
jecxz
add
xor
push
inc
xor
rorl
imul
push
mov
mov
push
gs
jle
popa
jp
push
xchg
orl
sti
dec
lods
hlt
xor
sbb
jecxz
sub
imul
mov
ds
arpl
loopne
mov
add
insb
rorl
lahf
fld
jmp
push
and
inc
pop
xor
out
sub
xlat
ret
dec
add
or
ror
test
jecxz
mov
stos
mov
fidivrl
inc
mov
pop
mov
sbb
dec
jnp
mov
out
jo
xor
gs
mov
sbb
push
outsl
push
outsl
jmp
push
and
push
shlb
fsubrs
cmp
cmp
clc
add
and
sub
ret
mov
daa
adc
cmp
xchg
mov
sub
test
adc
dec
adc
cmp
repnz
mov
fbstp
loop
sub
lahf
jecxz
add
inc
mov
add
nop
in
pop
outsb
mov
fistl
inc
mov
push
aaa
ret
ss
sbb
jmp
mov
lcall
stos
lods
fcmovnbe
jp
mov
fwait
mov
dec
pusha
dec
jb
inc
inc
mov
fbld
mov
dec
mov
jae
ret
jg
pop
pusha
bound
mov
adc
icebp
mov
dec
pop
mov
loope
cld
and
push
bound
clc
fcos
pop
dec
dec
sahf
shrb
imul
inc
loope
popf
adc
popl
xor
mov
lret
clc
fadd
or
orb
lahf
daa
adc
sub
imul
ljmp
lahf
idivb
daa
xchg
pop
mov
shll
lock
aad
mov
mov
sbb
jle
pusha
jl
outsb
pop
aad
sub
mov
int
jle
mov
jle
andb
jo
and
enter
push
mov
clc
inc
pop
leave
shlb
je
scas
or
mov
xor
push
and
cmpsb
pop
mov
pop
pop
fcmovu
pushf
fs
push
subb
add
stc
leave
mov
mov
daa
lret
movsl
push
outsb
xchg
cmpsb
mov
ror
xchg
or
aad
mov
mov
int3
xor
sti
addr16
shlb
cmp
and
cs
andb
shlb
pushf
addr16
je
inc
cmc
xor
pop
das
mov
ficompl
dec
sti
aaa
fcompp
sub
out
test
hlt
mov
cmp
cmpsl
sbb
leave
add
fisubl
jl
pop
fs
jge
subl
imul
test
sti
cmpsb
lcall
dec
mov
jne
das
ss
cmp
and
push
sub
mov
std
xchg
test
and
mov
cs
sub
rcrb
in
push
or
int3
mov
push
adc
pop
dec
sahf
movsl
lock
cmpsl
pop
pop
data16
mov
mov
jg
or
pop
sub
mov
xchg
adc
mov
test
cli
pop
mov
test
jl
stos
mov
loop
sub
dec
xchg
imul
outsb
lea
ss
mov
xchg
inc
mov
adc
mov
pop
jle
sbb
dec
ljmp
out
xor
push
dec
xchg
in
sbb
ljmp
push
sbbl
gs
out
int
mov
pop
jnp
aad
jne
rolb
xchg
loope
fadd
scas
mov
fcoms
xchg
std
fcomp
aas
inc
mov
jmp
jo
xchg
cld
int
mov
jle
cmp
xchg
cmpsb
mov
mov
mov
and
sarb
or
sbb
fcompl
out
subl
enter
add
ss
and
lret
scas
cmc
loop
push
nop
jl
and
ret
inc
jecxz
sub
pop
test
cmp
sub
lret
and
sub
xchg
pop
sub
aam
cmpb
push
push
dec
xorb
pop
jle
lea
aam
fsubl
outsl
outsl
mov
ljmp
fildl
or
xor
inc
int
in
dec
pop
out
mov
loop
add
out
outsl
fistpll
mov
icebp
cltd
push
cli
cld
push
frstor
roll
and
xchg
popa
cmp
jns
aaa
pop
sub
popa
mov
arpl
jae
push
aaa
fnstsw
pop
cmp
cmc
ret
sbb
and
add
sbb
imul
movsl
out
adc
js
or
je
mov
cmp
mov
js
jle
aas
stos
fmulp
jp
aad
cmp
adc
pusha
adc
jae
test
ljmp
and
outsl
lret
dec
mov
adc
sub
ja
push
call
rorb
cltd
int3
sbb
dec
jecxz
movsl
inc
movsb
pop
outsl
lds
int3
mov
cmp
fists
ret
shlb
push
popa
push
cmpsb
push
mov
dec
dec
dec
fldl
mov
test
mov
mov
ficoms
xor
sub
inc
sti
dec
movsl
or
xor
cwtl
xor
cmc
push
out
ljmp
sti
sbb
sbb
aam
cmp
fwait
inc
dec
add
or
cmc
addr16
xchg
out
cmc
inc
xchg
adc
pop
fstp
push
mov
push
xor
pop
adc
jnp
push
fucomip
movsl
ret
mov
aam
clc
jns
cmp
sti
jge
cltd
daa
or
add
ss
jl
push
lcall
rcll
dec
xor
mov
aas
and
pop
jbe
je
rorl
sbbb
ja
push
stos
push
js
xlat
dec
mov
dec
xchg
push
int3
es
xchg
dec
mov
insl
imul
insl
xor
mov
test
mov
add
sahf
and
sbb
lar
out
xorb
xor
sahf
jb,pn
jecxz
mov
das
stos
sub
push
jno
and
pop
std
fbld
leave
xacquire
mov
in
dec
mov
cltd
lock
fwait
xor
loopne
std
jge
arpl
sbb
aam
fucomi
sti
jge
subl
shrl
pop
roll
jno
ret
hlt
dec
fnsave
or
jae
mov
inc
imul
dec
mov
inc
jno
test
out
sub
fwait
xchg
inc
rol
lret
insb
xchg
xor
rolb
sub
pop
cwtl
cmp
jmp
add
out
push
jg
int3
fsubl
nopl
fidivs
jb
leave
jo
lret
gs
pop
mov
stos
imul
xorb
enter
scas
mov
sbb
sub
mov
or
fwait
call
sbb
movsl
inc
jnp
call
enter
xchg
pop
movsl
or
pop
in
adc
pop
imul
dec
adc
push
cmpsb
loopne
dec
mov
jbe
outsl
out
xor
add
mov
xor
mov
cmp
mov
hlt
mov
mov
lods
or
push
xchg
mov
push
mov
icebp
mov
cmpsb
scas
jns
aad
mov
cmp
out
or
jle
mov
cmp
mov
mov
mov
dec
ret
hlt
ljmp
push
pop
outsl
insl
cmp
adc
adc
sahf
out
rcr
inc
mov
cmp
sar
xchg
scas
sub
push
sub
sub
or
mov
push
popa
or
idivl
inc
push
sub
adc
stc
insl
data16
rol
call
dec
nop
inc
out
xchg
lret
movsl
lahf
or
iret
mov
mov
inc
add
inc
lock
cmc
lcall
dec
aad
lods
outsb
jecxz
fildll
mov
jle
out
fs
fwait
sub
test
mov
in
call
xchg
add
xorb
les
movsb
jns
bound
stc
sbbb
lahf
pop
jo
stc
outsb
jo
adc
inc
mov
es
push
pop
movsl
pusha
addr16
nop
sbb
mov
push
ja
jecxz
lcall
cmpsl
insb
push
arpl
sbbb
mov
fnstenv
arpl
adc
ficompl
dec
fadds
sbb
imul
push
xchg
push
mov
cli
sti
arpl
jg
pop
xlat
push
or
stos
shl
jecxz
dec
dec
mov
or
inc
and
cmp
in
and
xchg
xor
cmpsl
and
jae
ljmp
pop
cmp
sarl
xor
or
xchg
xor
xor
sti
mov
es
in
fistl
in
sub
sbb
sahf
fadd
fwait
inc
push
aam
add
inc
popf
aaa
lcall
pop
int3
add
xchg
mov
inc
push
sub
add
and
adc
ficomps
fs
out
clc
negb
sbbb
adc
dec
xchg
dec
rcrl
xchg
xchg
push
push
in
mov
int
mov
lret
xor
js
jbe
insl
xchg
push
scas
xor
sub
sub
mov
cmc
sti
mov
loope
add
sub
or
mov
filds
loopne
fdecstp
add
iret
xchg
jl
dec
cmp
shll
inc
sub
pop
pop
dec
inc
rorb
fsubrl
pop
clc
and
sbb
add
xor
fcmovbe
xor
xchg
call
int3
sbb
adc
cld
fdivrl
mov
sbb
xchg
lret
pop
jge
pop
ficomps
movsl
xor
mov
dec
add
int
ret
cmp
test
int3
jecxz
in
arpl
pop
xor
fdivp
das
sub
aad
cmpsb
inc
lret
sbb
mov
mov
mov
pop
sahf
mov
cmp
enter
das
jecxz
push
mov
dec
out
adc
fildll
test
or
faddl
rolb
subb
push
in
sti
loope
loope
out
jmp
iret
mov
and
push
jl
mov
mov
movd
es
pusha
add
xchg
mov
mov
mov
cltd
and
dec
mov
mov
mov
cmp
mov
fidivl
popa
inc
pop
and
jp
push
inc
add
jae
sbb
xchg
push
sub
loope
hlt
sub
cmp
push
xchg
cli
mov
add
cltd
cmp
jnp
xlat
sar
cs
mov
imulb
adc
pop
jbe
test
lret
test
clc
loopne
aam
adc
daa
fwait
cmpsb
data16
lcall
push
pop
dec
or
xchg
imul
push
xor
push
stc
or
arpl
mov
xchg
lock
jb
cmp
mov
sti
fisubrl
add
push
push
jns
arpl
mov
pop
cmp
push
inc
nop
sub
fildl
push
jno
mov
cmp
add
sub
pop
push
cli
leave
xor
test
out
stos
iret
dec
lret
out
inc
in
cmc
fidivrs
jp
add
add
mov
bswap
std
inc
ljmp
insb
out
repz
sub
mov
lcall
sbb
movsb
pop
jmp
inc
xlat
jnp
jnp
pop
scas
push
or
outsb
cmp
shrl
pushl
int
addr16
add
xlat
daa
add
aad
xor
mov
inc
sbb
or
sub
imul
jo
dec
stos
jae
jns
fdivrs
and
outsb
mov
cld
loopne
dec
insb
mov
leave
aas
xor
mov
inc
sub
mov
pop
fs
aaa
mov
data16
sbb
lret
cmp
mov
cmp
sahf
jbe
adc
scas
scas
les
roll
sbb
push
enter
jne
mov
ss
cmc
inc
shr
out
xchg
inc
push
sub
xchg
adc
mov
loope
int3
add
adc
test
daa
enter
and
pop
je
dec
xor
xchg
insl
les
xchg
mov
popf
loope
and
lret
add
xrelease
mov
mov
sbbb
push
mulb
mov
sahf
pop
jp
jge
out
clc
xchg
adc
fcmove
ljmp
sahf
fldl
in
xchg
rolb
dec
inc
mov
shlb
dec
and
mov
clc
lea
pop
leave
mov
jle
mov
jl
mov
cld
cmc
add
xor
movsb
mov
and
sub
gs
in
ds
stos
sub
mov
frstor
mov
into
and
rorl
in
mov
bound
lahf
in
jmp
adc
shlb
icebp
and
xor
into
mov
push
outsb
sarb
fwait
sbb
ffree
mov
cmp
enter
cmp
aas
rorb
call
xchg
mov
add
fs
dec
daa
outsb
pushf
push
pop
cmp
in
lea
mov
cmp
push
push
div
and
nop
mov
sarb
inc
xchg
loope
lds
test
es
mov
cld
and
movsl
jbe
xchg
adc
pusha
adc
and
ret
out
and
xlat
outsb
sbb
or
into
adc
addr16
dec
pop
push
insb
xor
cmp
lods
ds
inc
sahf
out
pop
adc
shlb
push
roll
add
das
adc
adc
daa
ds
cmp
xor
dec
mov
xchg
in
xor
jb
int3
or
push
enter
popf
negl
stos
in
sub
cmpsb
adc
jae
mov
int
rcl
xchg
or
lahf
fistps
imul
cwtl
movsl
les
fmulp
push
outsb
bound
ja
test
xchg
pushf
fdivrs
jp
mov
lods
lcall
push
and
dec
mov
adc
jbe
fcmovbe
xchg
xchg
inc
mov
jmp
mov
adc
lods
push
in
sbb
adc
and
int
cmc
mov
mov
loop
fdivrp
xchg
sbbl
mov
add
ret
sub
adc
pop
js
inc
xchg
in
jecxz
fmul
icebp
xchg
inc
push
mov
inc
lcall
sub
fwait
dec
cmp
inc
inc
nop
out
incl
cmp
inc
fldl
js
push
fstps
nop
pop
xchg
push
pandn
sahf
push
bound
sti
jbe
out
mov
mov
xchg
mov
inc
push
fs
fldenv
cmc
xor
adc
cmp
xchg
ds
dec
mov
mov
ret
pop
push
leave
jl
xchg
ret
insb
push
jecxz
mov
iret
lcall
data16
sub
test
dec
sub
in
jl
and
lcallw
in
pop
fisttpl
pop
mov
out
addr16
cmp
xor
out
xor
movsb
imul
sbb
push
frstor
xlat
add
cmp
ja
std
add
add
mov
movl
dec
pop
pop
mov
xlat
pop
les
add
mov
mov
outsl
shrl
pop
add
dec
inc
push
sar
mov
cmc
fildl
cmp
orl
scas
lret
or
scas
test
push
es
sbb
fcomps
push
scas
test
mov
jne
bound
mov
shl
sbb
bound
popf
xchg
shll
dec
xor
sub
fstl
mov
dec
test
enter
add
mov
adc
push
dec
mov
adc
out
dec
lods
das
dec
les
cmpsl
ficomps
xchg
add
lcall
insb
mov
pusha
mov
mov
lcall
in
dec
bound
cmc
fstl
out
ja
je
test
ror
push
enter
pop
test
js
in
adc
sub
movsl
xor
cmc
lods
cwtl
repnz
addr16
arpl
sbb
out
daa
rcrl
in
pushf
movsl
lahf
sbb
add
dec
rcrl
test
xchg
dec
xchg
jb
cmpl
or
push
mov
sbb
inc
stos
push
pop
int3
xchg
jg
in
jb
scas
inc
xchg
icebp
mov
and
dec
mov
out
sbb
rorl
subl
push
outsl
aas
dec
ret
cmp
and
lds
sub
mov
and
dec
mov
jns
insb
mov
loop
jg
into
out
sahf
sbb
push
jge
or
xchg
dec
pop
inc
xor
fdivs
aas
das
jns
adc
testl
jecxz
cmc
jp
push
scas
arpl
aaa
in
iret
arpl
dec
cmp
inc
lods
mov
scas
jo
mov
pop
xchg
inc
lcall
adc
xchg
dec
pop
into
push
mov
inc
jg
scas
enter
inc
pop
sub
call
jb
xlat
mov
inc
mov
sbb
icebp
mov
jne
mov
ret
call
pop
pop
pop
push
sub
mov
jecxz
cmc
xchg
pop
fcoms
dec
or
mov
cmp
int3
inc
mov
sti
enter
mov
jmp
popf
cmpb
clc
and
jg
inc
mov
add
mov
cmpsl
xchg
mov
xor
int3
xor
je
dec
pop
inc
into
inc
inc
icebp
add
leave
lods
inc
popf
loop
sbb
mov
inc
mov
mov
jb
shll
add
test
mov
xchg
insb
xchg
repz
mov
in
pushf
and
sub
add
adc
pop
adc
test
loop
ss
addr16
mov
sbb
push
sbb
mov
adc
push
jne
xchg
or
push
jne
xchg
adc
xchg
out
inc
das
push
repz
mov
mov
xchg
ja
mov
adc
jp
rcll
pop
mov
mov
mov
fisttps
fdivl
add
sahf
and
pop
lcall
hlt
arpl
imul
mov
repnz
ss
bound
loope
mov
adc
xchg
mov
push
push
ret
arpl
sub
pop
lret
cmpsb
loope
push
cmpsb
loop
xchg
xchg
fwait
push
fmuls
cmp
repz
add
dec
mov
push
andl
mov
ficomps
mov
insb
adc
inc
sub
sbb
mov
mov
mov
test
push
pop
cmpsl
adc
ss
sbb
gs
adc
fs
js
mov
jbe
imull
arpl
mov
or
push
ja
xor
push
or
mov
inc
lcall
scas
in
and
add
ret
or
jge
cltd
and
cmp
push
sbb
cmpb
rcrb
add
and
add
repnz
rcll
rcr
xor
jge
loop
movsl
jge
out
adc
nop
adc
leave
jnp
ja
aaa
cmp
aaa
rep
scas
out
js
aad
sub
and
xchg
push
xor
fildl
sbb
mov
jmp
pushf
push
xor
sbb
test
movsb
cmp
jl
push
or
xor
mov
mov
mov
cmp
mov
dec
lret
add
loopne
cmp
nop
xchg
mov
adc
sbb
popf
xor
pushf
xor
pop
inc
loop
or
dec
fidivrl
leave
add
push
out
cmp
test
outsb
mov
subps
test
sti
pop
cmp
iret
inc
repz
xor
in
pop
push
sbb
imul
mov
arpl
icebp
or
mov
mov
int
mov
jge
mov
push
lds
into
mov
jl
adc
pop
mov
pop
or
cmp
cmp
adc
push
inc
fistps
fistpl
gs
fmull
out
cltd
ss
push
mov
add
or
adcl
xor
jl
adc
lret
std
cltd
cltd
popf
adc
jno
lods
pop
sub
inc
push
cmp
jg
jne
sahf
push
mov
xchg
add
cltd
adc
test
outsb
push
fildl
fcom
pusha
dec
push
push
push
xchg
cmp
dec
mov
adc
loop
mov
popf
dec
sbbl
cmc
pop
and
pop
cmpsb
out
in
jo
and
stos
xchg
or
rcrb
ss
out
shrl
xor
lret
sub
add
lret
sub
sbb
sub
in
es
pusha
sub
frstor
out
ret
insl
cmp
adc
enter
sbb
push
add
adc
push
cld
rol
ss
adc
pop
lcall
out
leave
scas
ret
popf
mov
dec
fisttpll
insb
pop
jge
ret
fistl
std
xchg
clc
mov
add
cmp
inc
rolb
shll
clc
out
sbb
add
je
mov
decb
and
push
stc
mov
fidivs
sar
cmp
ret
lcall
sbb
add
stc
out
or
mov
roll
mov
jbe
pusha
into
enter
jecxz
in
dec
jb
lods
dec
lret
pop
xor
mov
loopne
das
dec
mov
insb
add
inc
fisttpll
xor
dec
xor
mov
ror
clc
cmc
dec
call
mov
icebp
je
push
cmpb
mov
jg
sbbb
dec
mov
rol
or
mul
mov
sbb
aad
out
mov
ss
roll
shrl
leave
push
mov
jae
push
cmpsb
push
or
add
in
in
shrb
dec
lock
or
lock
pop
cmpsb
mov
push
or
cmc
mov
push
xor
icebp
cmp
xor
nop
fnstenv
lods
fwait
mov
mov
inc
xor
push
inc
inc
jp
fwait
insb
jo
cmp
xchg
xor
stc
or
mov
mov
lock
add
repnz
in
push
ficompl
aad
insl
daa
jle
repz
adc
pop
xchg
in
jg
pop
dec
jmp
jb
outsl
xchg
ret
mov
aaa
mov
call
lret
xchg
push
adc
or
fdivl
call
mov
push
je
je
enter
fwait
jge
jp
mov
sub
daa
movsb
pop
xor
mov
add
test
out
lahf
adc
int3
fs
fwait
push
xor
cmp
outsl
xor
xor
jg
pop
test
das
loop
push
mov
jbe
jg
addr16
push
jae
popf
jns
repnz
mov
or
sub
mov
fs
shlb
test
mov
pushf
imul
movsl
and
push
xchg
aas
xchg
test
lcall
repz
js
xchg
outsl
pop
mov
sbb
push
mov
icebp
cs
loop
lock
add
push
xor
scas
scas
xlat
pusha
mov
pop
lods
xchg
das
jns
sub
sub
aad
scas
mov
sub
adc
dec
mov
or
and
fs
nop
inc
ds
repnz
loope
sbb
test
test
fwait
test
dec
mov
lods
out
or
push
and
inc
fistl
push
add
insb
dec
icebp
cmp
shr
icebp
enter
lret
shl
adc
push
add
adc
sub
and
mov
mov
or
push
pop
mov
aam
mull
dec
adc
outsb
iret
outsb
inc
push
jecxz
testl
ljmp
jle
rclb
call
push
dec
cwtl
sbb
pushf
mov
jns
int
and
push
iret
sbbl
lock
fwait
adc
stos
mov
iret
into
inc
pop
inc
shrb
pop
adc
push
and
push
lret
stos
in
xor
mov
std
out
or
subb
inc
loopne
mov
ret
in
ss
jb
jns
lds
xor
xor
add
sti
mov
pushl
jge
mov
push
mov
scas
cld
cltd
xchg
cli
pop
ret
fidivrl
adc
and
mov
add
lret
loope
xchg
stc
mov
pop
cmpsb
pop
outsb
pop
loope
pushf
scas
xchg
jo
pop
xchg
gs
cli
nop
jmp
adc
mov
insb
cltd
sbb
mov
out
fwait
jg
cmpl
add
repnz
or
mov
shrb
daa
jne
jae
or
pop
rcll
aad
jmp
shrb
out
mov
lock
int
jge
mov
test
adc
in
repz
ljmp
js
scas
inc
and
mov
std
cmp
jnp
cmpsl
jne
dec
inc
mov
cmc
loop
pop
popa
sub
aaa
pusha
jmp
mov
in
and
scas
pop
mov
and
mov
mov
lret
cmp
data16
movsl
iret
sahf
mov
pop
xchg
fistl
sub
lods
and
dec
or
cmp
xlat
jb
mov
outsb
mov
xor
xchg
outsb
mov
xchg
sub
jno
xor
cld
std
scas
xchg
mov
imul
xor
mov
fcmovnu
sbb
hlt
push
stos
lds
lods
mov
fcomps
xor
nop
idiv
mov
xchg
mov
test
addb
sub
imul
outsb
das
arpl
xlat
popf
mov
mov
cmp
rcll
ljmp
fldl
mov
cltd
aas
adc
dec
enter
adc
dec
lahf
and
fwait
out
push
xchg
push
xor
pop
mov
in
or
ja
xchg
popf
and
loopne
lret
sahf
mov
pop
pop
sar
ja
sahf
in
iret
jge
fcmovne
mov
jne
cwtl
xlat
xor
cmp
add
out
inc
jnp
and
mov
mov
inc
add
push
nop
scas
in
jle
outsl
rclb
jb
movsb
push
push
leave
decb
mov
inc
pushf
dec
dec
iret
adcb
and
rcrb
mov
popa
lret
rorb
xchg
insb
movsl
pop
ss
or
pushf
jle
xchg
jecxz
js
incl
sub
test
adc
loopne
mov
loopne
push
out
xchg
ss
xchg
andb
xchg
cmp
inc
jb
and
and
fdivl
mov
and
ret
adc
out
icebp
inc
adc
cld
push
mov
pusha
inc
mov
and
inc
lods
inc
push
enter
or
in
or
fldcw
cli
cmpl
shrl
or
cmp
mov
sub
mov
aam
cmp
movsl
cwtl
rolb
fsub
dec
inc
ret
add
dec
inc
sbb
insl
dec
mov
cmp
dec
cmp
jl
pop
shll
push
jns
fistpll
ret
hlt
pop
ja
aam
ss
mov
xchg
mov
sbb
jp
popa
idivl
addr16
inc
jg
mov
inc
or
dec
or
jg
mov
add
jne
cltd
mov
cwtl
sbb
lods
sbb
or
xchg
sub
inc
cmpl
scas
and
mov
test
cmp
jae
das
aad
push
dec
mov
push
add
xor
nop
in
dec
xor
jecxz
je
cmp
fcompl
faddl
mov
cmp
fstpt
imul
xorl
addr16
fs
test
xchg
adc
lcall
out
adc
dec
popf
add
push
cmp
and
cwtl
movsl
mov
cltd
lods
fsubrs
ror
jmp
adc
pop
mov
push
stos
mov
test
mov
inc
aad
unpckhps
push
push
or
int
std
inc
pop
add
inc
fcom
test
xchg
movsb
cmp
jmp
jnp
fcoms
ja
js
scas
ja
cmp
mov
cmpsb
mov
roll
mov
xchg
adc
mov
aas
sub
xor
enter
pop
push
lods
mov
push
pop
xchg
lret
xchg
push
inc
aam
dec
xchg
subl
xlat
mov
xor
jns
out
das
ss
in
fidivs
pushl
in
cmp
data16
mov
push
jbe
das
jno
mov
lret
lret
fstl
jge
mov
sub
jl
aam
fldcw
dec
sti
mov
sub
pusha
sbb
mov
adc
xor
loop
cmpsl
push
mov
adc
cmp
push
insb
aam
fmull
outsb
or
adc
xchg
mov
add
loope
and
mov
pop
stos
aaa
mov
inc
fwait
popf
cmp
ds
dec
xlat
jns
adc
cwtl
fwait
lret
ja
je
inc
and
sub
ret
rol
mov
mov
xchg
loop
leave
jbe
dec
cs
xlat
repnz
outsl
pop
loop
cs
outsl
or
icebp
fisubrl
inc
bound
jne
divl
mov
iret
xchg
xchg
cmp
pop
xchg
repnz
aad
mov
shlb
pop
push
jl
ja
enter
adc
dec
jbe
jmp
sub
fnsave
xor
sbb
icebp
add
mov
mov
and
add
mov
mov
xchg
loopne
xchg
outsb
pop
jno
dec
and
shl
mov
scas
push
jo
xor
pushf
pop
jle
divb
sarb
out
enter
movsl
in
idivb
or
rol
xchg
sbb
stos
jmp
add
or
jmp
mov
cmpsl
or
in
jmp
fwait
rcr
lret
adc
xor
push
test
inc
notb
fistl
testl
cmp
add
incb
fdivrp
add
pop
ljmp
jp
aas
sub
xor
adc
jns
xchg
mov
xchg
fidivs
fisttps
mov
sahf
mov
mov
stc
or
rcll
xchg
pop
xor
ljmp
push
jb
xor
pop
and
push
push
sub
movsl
xchg
test
pop
adc
xor
sysexit
mov
in
jb
outsb
inc
iret
push
packuswb
jecxz
pop
int3
jo
or
push
dec
mov
or
mov
inc
roll
pop
sarb
adc
lods
mov
lods
adc
test
ret
test
and
and
sbb
cwtl
mov
mov
ljmp
dec
pop
iret
dec
cmp
js
movsl
divl
mov
aam
int3
fs
dec
sti
inc
aam
jge
addl
lahf
jecxz
cmp
sbb
out
jg
fbld
mov
and
ror
and
jmp
dec
jb
mov
xor
sbb
dec
rclb
stos
aad
mov
call
hlt
cmpsl
add
rcrb
popa
push
adc
cltd
mov
pop
jecxz
movsb
call
pop
out
subl
leave
in
mov
mov
fdivrp
push
int
inc
mov
push
out
aas
inc
dec
cli
inc
sub
add
nop
sbb
imul
in
cmp
jb
cmp
test
dec
sahf
push
movsl
or
cli
and
test
dec
dec
cmp
dec
pop
insl
call
dec
lock
icebp
sub
sub
dec
movl
fucomp
std
add
std
sti
inc
lods
jns
pop
push
hlt
or
aad
sbb
call
sub
or
jecxz
lock
xor
pusha
flds
sti
xchg
scas
dec
jl
fdivrs
xchg
icebp
clc
xlat
xchg
lahf
jnp
or
sub
test
into
mov
mov
cmp
out
pushf
mov
fwait
jb
lea
and
scas
sbb
shll
fildll
out
push
lds
sbb
mov
mov
sbb
jecxz
scas
enter
call
in
inc
lds
sub
addl
adc
push
popa
cmp
or
xchg
add
imul
and
aaa
mov
or
jmp
iret
jle
dec
fnstcw
adc
xor
push
sbb
pop
cmpsl
push
adc
and
mov
pushf
in
and
pop
ljmp
mov
and
fldenv
push
adc
scas
or
adc
mov
aam
inc
mov
jmp
fsts
scas
cli
repz
in
mov
cltd
ljmp
jbe
jno
sahf
data16
enter
mov
pop
mov
and
add
pop
or
mov
pop
fiaddl
add
testb
mull
sbb
fs
inc
sbb
pop
into
inc
push
call
and
bound
or
and
xchg
push
icebp
jnp
enter
mov
adc
insl
lods
and
push
push
add
jno
mov
sub
pop
repnz
or
push
fiaddl
pop
xor
xchg
popa
jns
push
push
popl
pop
fmulp
nop
mov
xchg
aad
or
jbe
add
dec
mov
adc
push
pop
push
insl
sar
and
and
cmp
insb
jge
inc
mov
call
fcoms
es
mov
cmc
xchg
rep
mov
es
jge
xchg
sbb
add
divl
push
sarl
rcll
sub
pop
cmpsl
les
in
lock
or
aas
fimull
and
inc
inc
test
push
jmp
jg
mov
or
sti
fdivrl
adc
push
cmp
test
test
jae
cmp
mov
in
pushf
sub
sbb
jecxz
jg
push
jmp
sub
clc
adcl
rcl
pushf
inc
fldt
pop
cs
pop
insl
sti
sar
sbb
dec
and
test
jnp
push
fstps
iret
add
and
fs
icebp
mov
xchg
mov
jae
or
jne
push
and
cli
jle
fwait
xor
sar
xor
ret
ja
dec
dec
push
scas
sbb
aas
leave
das
jbe
mov
cmp
adc
test
and
call
sub
jle
push
push
leave
jl
and
in
icebp
pusha
inc
idiv
aaa
insb
and
cwtl
ror
push
jne
clc
stos
cmp
xchg
sbb
cmp
stos
mov
dec
in
lods
jnp
out
das
add
push
iret
std
push
sub
mov
or
jne
adc
adc
into
mov
data16
out
out
dec
pop
aam
inc
shrd
add
lahf
jg
jnp
inc
ja
dec
mov
pop
xor
loop
xlat
mov
mov
jae
sbb
pop
loopne
or
xchg
dec
adc
jo
inc
cmp
jle
dec
xchg
pop
mov
les
push
and
jb
rcll
pusha
rorl
bound
sti
add
or
push
shl
lcall
xor
push
mov
inc
jnp
push
dec
adc
addr16
aas
in
fwait
mov
fcomp
fcmovnu
ret
leave
fwait
xor
lock
enter
xchg
jge
shll
mov
rcr
mov
sub
repnz
mov
ss
sbb
leave
cmc
in
aaa
mov
dec
mov
pop
fs
stos
fsubs
rcrb
sarl
adc
and
pushf
popa
lds
lds
mov
aas
dec
cwtl
cmp
and
pop
mov
inc
shlb
shlb
xor
and
push
iret
stos
loopne
lcall
push
enter
sub
and
stos
dec
xor
lods
and
cwtl
pop
dec
sub
push
sbb
mov
sahf
dec
pop
lret
aas
or
push
adc
jmp
es
jp
inc
hlt
imul
ficomps
test
testb
xor
frstpm(287
dec
xchg
mov
leave
pop
push
jb
or
or
in
push
mov
xchg
cmpsb
mov
mov
mov
mov
push
sub
xor
dec
gs
cmp
or
test
lcall
inc
stos
fwait
cmp
enter
sbb
push
lea
test
xchg
repnz
push
or
ret
inc
jne
adc
in
mov
adc
daa
mov
pop
inc
mov
mov
sti
mov
mov
push
sbb
sub
push
pop
fildll
std
mov
mov
dec
je
cmp
sub
push
cld
mov
mov
insl
push
xlat
dec
xlat
xchg
out
repz
imul
fidivs
addr16
jl
sub
and
cmpsb
ret
into
push
aad
mov
inc
pop
mov
lds
inc
loope
mov
or
scas
jbe
push
arpl
cli
int3
push
scas
enter
adc
andl
mov
out
add
fwait
gs
js
mov
inc
pop
mov
outsb
mov
nop
cmpl
mov
mov
xlat
and
div
bound
repnz
aaa
pop
pop
loop
jecxz
mov
test
test
mov
inc
icebp
or
adc
xor
rcll
rcll
xchg
inc
xor
inc
sub
xchg
mov
and
xchg
or
pop
push
mov
sub
push
lahf
decb
lds
mov
mov
xchg
sarl
cmc
call
adc
jle
cmp
xor
pop
inc
sbb
add
push
repz
arpl
mov
mov
movsl
or
ds
cmp
sbb
cmp
cmp
adcb
and
and
jge
loope
dec
mov
out
fnclex
jl
xchg
jnp
lret
and
pop
xor
test
clc
fnstenv
in
sub
mov
mov
push
add
and
mov
pop
sbb
dec
testl
pop
movsl
or
mov
sub
cmp
add
xchg
push
mov
pop
subl
lds
lock
jg
shlb
dec
jl
ja
cmp
inc
add
mov
xchg
adc
test
pop
jnp
inc
add
sbbb
xor
loop
mov
and
jne
inc
sahf
sub
ss
dec
loopne
and
fstl
nop
mov
jl
lds
cmp
mov
pop
pop
xlat
imul
cld
sub
push
sub
inc
fs
mov
sub
stos
rclb
add
f2xm1
pop
icebp
dec
out
leave
cld
sbb
out
sbb
stc
sub
mov
cld
cmp
xchg
fstpl
xchg
and
and
scas
xchg
out
and
inc
and
out
nop
shl
mov
dec
pop
xchg
xchg
mov
fadds
dec
cmp
js
fcoms
lahf
lahf
sahf
test
mov
pop
inc
lret
jne
mov
sahf
fmulp
mov
xlat
aam
fcompl
jnp
push
test
mov
mov
add
jno
sbb
jo
xchg
or
cmp
push
lods
cwtl
adc
sysexit
sbb
fsubr
stos
popa
mov
lret
movsl
inc
les
push
aaa
dec
push
jb
js
pop
cmp
scas
popa
lds
je
enter
filds
iret
imulb
sbbl
adc
ret
push
icebp
push
sbb
xchg
dec
gs
iret
push
or
push
fsubrp
and
outsl
mov
sbb
mov
stc
in
ret
or
pop
mov
dec
push
dec
sahf
outsb
adc
out
push
sahf
stos
std
jnp
pop
mov
dec
jg
pop
adc
out
aam
imulb
sti
popa
fnstcw
mov
mov
sti
mov
lods
mov
jmp
int3
push
test
mov
dec
pushf
jns
daa
clc
fmuls
in
mov
insl
mov
pop
xlat
xor
outsl
add
movsl
pop
aad
xor
test
sbb
or
lret
cmpsb
ljmp
mov
fs
cmp
in
ret
or
sbb
mov
movsb
sahf
mov
pop
xchg
lret
xchg
add
call
xor
stos
sub
movsb
and
push
add
call
stos
movl
dec
int3
aas
or
cmp
jmp
adc
sub
lock
cmc
add
mov
ljmp
lahf
and
jo
xchg
pusha
push
adc
fisubs
pushl
das
xor
daa
aaa
mov
sub
pop
mov
iret
pushf
add
loope
hlt
icebp
insl
dec
jmp
lods
pop
dec
jns
aam
mov
out
xorl
enter
cmp
pop
ficoml
roll
fldl
cld
fdivs
das
jecxz
dec
es
sbb
sbb
cmp
loopne
dec
jno
leave
aad
jecxz
popf
pop
les
adc
mov
pop
mov
ja
add
das
mov
adc
jg
adc
lods
arpl
jecxz
pop
inc
xchg
adc
push
test
add
mov
xor
jo
test
fdivrs
mov
mov
xor
es
and
push
or
mov
lods
fs
push
push
jmp
mov
adc
xchg
push
mov
dec
jge
loopne
fnsave
dec
xchg
fnstenv
dec
push
sbbb
mov
inc
aad
pop
xchg
jbe
add
fnstenv
jle
cmc
stc
jle
mov
out
xchg
lods
mov
pop
mov
popa
popa
mov
xchg
ja
outsl
fnstcw
mov
clc
loope
inc
mov
or
pop
xchg
dec
dec
xor
pop
mov
add
push
cmp
test
mov
pop
movsl
idiv
stos
mov
xchg
dec
int3
dec
cmp
repz
pop
dec
lea
add
jmp
jmp
pushf
xchg
js
movsl
or
addr16
pop
lods
notl
xchg
inc
push
fcoms
inc
scas
call
js
cmp
gs
insl
add
loope
rcll
pop
xchg
push
daa
enter
jo
outsb
rclb
mov
adc
and
jg
inc
xchg
lret
sub
mov
ret
xchg
sbb
popf
js
cmp
mov
jge
jl
adc
into
jae
xorb
ljmp
and
shrl
std
ror
xorb
repnz
jmp
mov
fcompl
mov
lods
flds
andb
xchg
xor
decb
xchg
rol
xchg
and
data16
stos
in
mov
stc
cmp
xchg
and
or
add
cmp
mov
xchg
popa
int
lret
sbb
rolb
jne
add
out
adc
add
fs
sub
jnp
sbb
sub
ror
dec
stos
popf
out
lods
jne
pop
je
test
jmp
rcrl
sub
das
sbb
insl
cwtl
fadd
inc
add
popa
inc
xor
out
fs
inc
js
adc
cmp
popa
int3
cs
ret
ljmp
lret
push
fwait
cmp
lea
jp
popf
sbb
push
cmp
aas
cmp
pop
test
xchg
adc
add
mov
bound
test
int3
popf
gs
mov
jae
mov
mov
mov
sahf
prefetchnta
dec
pop
mov
insb
jo
ds
inc
fisubrl
call
into
cmc
cmp
in
push
lcall
sarb
xor
push
outsl
mov
pop
popf
push
daa
enter
hlt
cmpsb
es
fdivs
xchg
sub
int
test
adc
and
les
mov
gs
push
xchg
push
bound
dec
push
lret
and
rolb
cmp
cli
push
das
call
xor
xchg
js
rclb
inc
jmp
cmp
fsubs
sub
outsl
movsb
jg
repnz
cmp
call
cmp
movsl
cmp
sbb
jp
mov
shlb
and
cmpsb
rol
push
imul
mov
in
add
es
push
test
sub
mov
int3
pop
jns
out
pop
ja
xchg
add
sbb
ss
push
push
popa
bound
fcmovnb
bound
dec
xchg
stos
jns
mov
jle
or
test
xchg
xor
pop
imul
add
aas
pop
jbe
cmc
and
fnstcw
ret
int
stos
adc
cltd
cmpsb
xor
jl
fs
repnz
add
push
and
xor
adc
push
push
shl
inc
std
ret
pop
jle
scas
add
dec
and
xchg
sub
xor
jmp
rcll
xchg
mov
ja
xorb
adc
imul
movzbl
gs
in
push
mov
jp
lret
loop
cmp
in
mov
pop
popf
ret
pop
xchg
dec
insb
pop
out
inc
fs
imul
xor
sub
pop
js
mov
or
sbb
and
jbe
inc
mov
imul
cwtd
inc
pop
and
sub
inc
sarl
pop
ret
xchg
sarl
adc
xchg
pop
xchg
mov
clc
aam
pop
xor
movsl
xchg
aas
or
ja
lds
pxor
es
cs
test
pushf
mov
ss
aaa
cmp
aaa
jl
sti
mov
inc
mov
call
cmp
pop
aaa
rorl
xchg
jnp
or
imulb
mov
pop
loop
jg
sbb
pop
sahf
shlb
add
push
sub
add
jmp
sub
jae
ja
pop
pop
dec
mov
dec
cmp
fstl
sbb
dec
imul
sub
out
in
cld
push
in
mov
sar
cmpsb
leave
decl
mov
jg
cmp
outsl
lods
hlt
jbe
cld
mov
jne
push
cmp
lcall
mov
inc
ficompl
ret
jp
adc
adc
dec
fwait
movsl
adc
pop
rcrb
mov
sub
add
adc
js
mov
test
das
sub
outsl
mov
jmp
sar
inc
dec
jecxz
cli
sub
imul
out
mov
lahf
nop
dec
sub
pop
sub
stos
push
dec
movsb
jae
sbb
jp
pop
push
ja
testb
push
icebp
cmp
cli
test
aas
and
sub
mov
jno
jl
add
dec
sti
xchg
daa
sbb
call
cmp
xchg
pop
adc
test
cmp
aas
mov
xorb
xor
jge
inc
push
rorb
popf
mov
xor
insl
sahf
push
sti
or
pop
push
adc
mov
cmp
scas
mov
movsl
test
sarl
negl
bound
call
mov
lcall
cwtl
add
negb
or
sbb
inc
sbb
xchg
add
jno
leave
push
lea
push
arpl
fisttpl
mov
scas
and
ljmp
xorb
mov
jno
mov
add
aas
out
jo
cli
movsl
sbb
push
orb
mov
lahf
shll
adc
jo
adc
dec
pop
xchg
lahf
outsb
sbb
inc
jmp
pop
mov
nop
pop
mov
inc
ljmp
xor
and
call
sub
xorl
int
subb
adc
and
push
xor
dec
jb
int3
mov
jmp
jbe
dec
cmpsl
outsl
mov
xchg
notl
cld
fsubrs
fadds
dec
push
imul
shr
push
cmpsb
adc
repz
mov
or
push
insb
out
mov
hlt
xchg
cmpsl
push
cmp
sbb
push
inc
xchg
scas
push
mov
dec
jmp
nop
add
out
push
sbbl
fucomp
sti
in
popa
leave
xor
mov
aaa
sub
pusha
ja
mov
cmp
enter
mov
stc
xor
ljmpw
xorb
shl
add
cmp
test
inc
jl
jb
out
orl
add
sbb
or
sti
and
xchg
ret
inc
pop
stos
cmpsb
jecxz
push
or
scas
push
or
or
es
test
mov
arpl
push
xlat
add
xchg
jmp
cli
xor
aad
test
and
pop
push
imul
out
idivl
xchg
shll
lret
cwtl
movsb
dec
inc
cmp
leave
pop
cmp
sbb
fadds
pop
lea
mov
push
xchg
mov
mov
mov
jmp
mov
jmp
jbe
xor
push
xor
shlb
jge
mov
imul
iret
add
xor
popf
cltd
add
sbb
xorb
mov
adc
dec
pop
mov
lea
xchg
mov
sbb
xor
adc
cwtl
adc
xor
pop
mov
push
add
dec
sub
pushf
mov
in
add
daa
fcomp
sbb
fsubr
outsb
jno
insb
adc
pop
in
jns
pushf
frstor
lahf
add
enter
js
clc
pushw
or
add
push
mov
test
inc
test
mov
adc
imul
push
das
jle
fs
popf
andl
push
push
aaa
cmp
faddl
inc
cmpsl
mov
js
pop
icebp
cmp
jno
std
xorb
gs
in
les
sbb
cmp
xchg
sbb
pop
inc
mov
mov
inc
mov
inc
js
les
mov
int
cs
pop
aas
mov
dec
enter
xor
push
mov
cs
mov
and
add
sbb
dec
push
jne
jl
stos
mov
pop
aaa
int
in
fdivs
mov
lea
call
xchg
bnd
cmp
lea
mull
std
test
nop
sbb
andl
in
sub
enter
test
fdivrl
sarb
cli
xor
and
push
idivb
icebp
cmp
fimuls
les
daa
xor
push
jecxz
adc
gs
mov
cs
cmpsl
out
ret
dec
hlt
pop
daa
inc
enter
jo
jnp
call
arpl
setl
repnz
xchg
sbb
shlb
outsl
mov
jbe
sbb
push
lea
add
sub
jne
ret
push
push
fs
push
ja
mov
push
sub
rolb
call
pop
hlt
dec
xor
in
popf
pushl
ss
dec
mov
xor
cmp
es
das
push
repnz
cld
mov
mov
enter
aaa
in
ljmp
popf
mov
frstor
imul
fs
xchg
int
imul
push
int
xchg
pop
out
icebp
testl
and
out
ja
and
repnz
ljmp
rcrb
je
push
ljmp
ljmp
subl
out
sub
punpckhdq
or
js
sbb
sbb
xor
inc
rorl
sbb
xorb
lret
test
mov
lahf
xor
mov
mov
stos
cmc
xchg
push
pop
mov
jne
inc
mulb
test
or
push
popf
and
nop
push
mov
cmp
pop
cmp
and
stos
insl
rcrb
fsubl
jnp
and
cmp
push
mov
test
outsl
daa
or
mov
mov
dec
mov
sbb
rolb
sbb
xchg
mov
inc
sbb
cld
lahf
mov
lret
mov
and
dec
add
pop
cmp
rolb
add
imul
cwtl
out
test
mov
jbe
pop
push
aad
fnstenv
and
mov
mov
aam
js
add
call
add
int
jle
sbb
mov
sbb
dec
daa
lret
xor
add
dec
and
dec
fstl
arpl
push
inc
mov
stos
push
shl
addr16
jns
add
gs
cmp
jmp
lea
push
hlt
or
dec
fldenv
inc
divl
xor
jl
inc
add
dec
inc
adc
sub
pop
pmulhw
lods
je
cmp
cmpsl
pop
sbb
add
lcall
loopne
cmp
xchg
pop
fstpt
push
push
jp
testl
pop
push
xchg
or
cmpsl
rclb
sub
xchg
dec
orl
int
cmpsb
mov
enter
outsl
add
fucomip
inc
pop
mov
add
test
shlb
lods
xchg
out
mov
inc
test
out
mov
dec
jp
mov
push
mov
mov
popa
cmp
insl
and
mov
jae
lcall
insl
mov
xchg
jg
inc
jb
pop
push
push
ret
cmc
enter
xchg
aaa
mov
xor
sbb
sbbl
cmc
sbb
cmc
rcrb
and
cmp
cmc
shll
inc
mov
mov
xchg
in
leave
push
sbb
dec
dec
fsubrl
cmp
jecxz
cld
mov
mov
and
sarb
in
adcb
xchg
lods
adc
adc
popf
pop
mov
or
push
addr16
pop
fdivr
mov
aad
test
into
dec
xchg
fidivl
in
pop
cmp
pop
inc
xor
or
stos
cmc
pop
dec
dec
push
or
sub
sbb
mov
jecxz
or
or
mov
test
or
sbb
lods
aam
inc
fxch
xchg
enter
add
push
std
aas
mov
sti
mov
cmp
or
ss
aam
jecxz
movsb
mov
mov
jb
scas
ljmp
mov
leave
ja
sub
jne
dec
sbb
push
mov
enter
arpl
lods
push
mov
xchg
xor
adc
inc
lods
pop
call
sbb
in
int3
fdivrl
icebp
pushf
ds
inc
mov
mov
fadd
jb
test
pushf
mov
sub
int
inc
or
or
fildl
in
mov
mov
jge
push
ds
mov
dec
jecxz
stc
jns
and
outsb
xor
outsl
fnstsw
test
jb
push
ds
loopne
push
cmp
inc
cmc
adc
xchg
xchg
push
pusha
jle
dec
into
inc
fidivrl
mov
sti
test
stc
or
pop
pop
sahf
mov
mov
call
adc
adc
rolb
jl
movsb
pop
push
xchg
sbb
shll
dec
push
or
ja
adc
add
mov
or
sbb
fdivrl
out
into
adc
push
xchg
pop
cmc
cld
fcmove
jns
xor
adc
push
and
mov
std
mov
stos
flds
cmp
and
int3
orb
cmp
mov
or
or
mov
stos
stos
popa
xchg
push
in
push
leave
js
or
lcall
fwait
in
xchg
and
in
sbb
fcompl
push
out
lret
dec
pop
js
cmpsb
sub
add
sbb
sbb
sbb
mov
or
data16
mov
ret
roll
or
sbb
jp
and
jg
lret
mov
push
push
cwtl
sub
leave
andb
adc
std
push
adc
mov
cmp
sbb
push
insb
cmpsl
cmp
or
lahf
push
push
fdiv
or
adc
sarb
cltd
cmc
cli
lea
popf
aaa
xor
out
lcall
pop
nop
insb
jno
orb
ftst
popf
and
fnstcw
lret
in
or
cltd
inc
ljmp
cmp
shrl
adc
mov
mov
mov
push
fadd
lods
shll
inc
sbb
sub
arpl
mov
jno
rcl
adc
sldt
xchg
mov
sbbb
cmp
or
pop
or
inc
cmp
cmc
aad
sub
xor
outsb
mov
pop
clc
mov
inc
into
mov
test
addb
inc
sub
movsb
rcrb
cmp
cmp
ljmp
sbbb
add
loopne
xchg
dec
lahf
sub
stos
std
ror
and
popl
pop
mov
mov
xchg
adc
sub
fs
stos
push
adc
xlat
test
fcompl
mov
push
sub
mov
imul
mov
int3
imul
and
jmp
loope
test
and
cmp
int
jmp
roll
adc
cmp
aas
and
inc
fistpll
xchg
out
pop
push
cwtl
jb
adc
daa
dec
jp
inc
inc
xchg
pop
lcall
push
insb
cmp
scas
rcrl
outsl
stos
imul
sbb
orb
data16
adc
cmp
iret
jle
xchg
dec
sub
fs
sbb
aam
mov
xor
incb
andb
pop
push
das
fcoml
and
outsl
inc
cmpsl
sub
push
add
repnz
cmp
adc
push
dec
data16
push
out
enter
fists
scas
xor
mov
push
pop
aad
cmpsb
imul
sub
cli
fisubrs
cmp
in
int3
push
mov
xchg
add
aaa
cs
repz
jae
out
js
loope
dec
pusha
add
cmpsb
movsb
push
or
or
push
daa
into
int
sahf
or
lret
jns
add
stos
or
fisubrs
rcrl
call
test
pop
mov
repnz
test
push
aas
movsb
les
in
xor
add
jne
ret
sbb
jmp
mov
decl
bound
jp
jmp
stc
mov
insl
jge
sbb
cli
sbb
xor
add
mov
int
cmp
test
pop
or
lahf
sub
fildll
enter
out
mov
call
pop
jg
or
insl
mov
mov
rorb
stos
js
sbb
adc
jne
icebp
int
mov
andb
pop
inc
pop
negb
jge
adcb
add
inc
loopne
sbb
dec
xchg
jo
inc
nop
add
dec
nop
fwait
sub
add
aam
xor
sti
cwtl
addl
and
frstor
jno
jecxz
adc
loope
loope
add
test
jge
dec
cmp
mov
cmp
pop
and
aaa
push
in
imull
mov
pop
jmp
in
add
jb
mov
movsb
incl
or
push
adc
in
xor
and
loope
js
lahf
xor
fsubp
mov
xchg
sbb
and
mov
or
pop
or
inc
jge
mov
or
ficoml
sub
cmp
inc
mov
loopne
fstl
pop
jge
insb
pop
lcall
xor
mov
aaa
jg
dec
in
lret
add
cmp
das
faddp
sti
cmp
pop
lock
cmp
inc
sub
sbb
xor
jge
push
pop
inc
mov
lcall
out
and
xchg
daa
mov
loopne
jo
mov
jl,pt
mov
dec
jnp
sbb
mov
mov
rcl
mov
out
lods
sub
lods
stc
cwtl
out
orl
idiv
push
jl
test
mov
sbb
sub
dec
mov
or
and
ljmp
xchg
cmp
xor
sub
sbb
adc
inc
cmp
scas
jecxz
iret
jo
xor
add
call
or
mov
pusha
adc
scas
and
xchg
clc
push
cwtl
sarl
jp
mov
add
xor
dec
stos
sti
imul
push
mov
movb
sbb
dec
cmpsb
jl
ja
xchg
inc
movntps
sub
lret
lcall
add
aam
add
push
and
stos
cltd
inc
loope
sbb
and
nop
jnp
xor
in
mov
mov
xchg
jmp
not
dec
pushf
mov
les
and
aad
and
push
jns
out
into
mov
mov
fs
aas
push
loope
addr16
sub
ds
jno
gs
add
pushf
divl
push
mov
dec
ss
fsts
and
or
in
pop
sub
cmp
scas
in
cmpb
roll
pop
push
xchg
add
test
jb
mov
dec
sub
repnz
inc
cltd
testl
mov
lea
dec
adc
sbb
fistpll
xor
ds
mov
push
mov
shll
mov
xchg
addl
scas
stos
int3
aas
mov
data16
xchg
inc
das
push
adc
add
xor
es
push
xor
clc
sub
imul
test
xchg
ss
cs
iret
add
cmpsl
mov
push
arpl
in
mov
stos
ret
sub
mov
dec
xchg
fnstenv
xchg
xchg
cmp
cwtl
into
jb
hlt
sub
iret
stos
xchg
jle
jbe
jmp
popf
fs
shlb
xchg
jg
out
sub
add
push
mov
sbb
nop
movsb
push
dec
dec
add
bound
push
cld
pop
add
je
roll
fisttps
in
lods
adc
repnz
jecxz
push
inc
sub
mov
cli
sti
iret
rclb
out
mov
sub
pop
outsb
sbb
scas
adc
sbbl
add
xchg
mov
ficompl
pusha
pop
pop
adc
lcallw
imul
xchg
mov
std
xchg
mull
xchg
scas
mov
sub
outsb
mov
jmp
clc
jns
and
shrl
and
adc
cld
jmp
test
gs
push
enter
dec
out
lcall
xchg
inc
subl
pop
aaa
mov
jg
test
pop
cmp
inc
pop
xchg
iret
xor
test
call
aaa
rcll
int
aam
pop
mov
xlat
push
pop
adc
gs
sbb
int
dec
jecxz
mov
sub
or
add
mov
pop
outsb
mov
andl
inc
or
shll
jns
cmp
btc
stos
stos
push
push
jmp
icebp
add
inc
outsb
lea
xchg
sbb
loopne
or
gs
rorb
and
adc
mov
xor
fyl2x
inc
test
jmp
xchg
in
aaa
rolb
and
andl
mov
pop
pop
jmp
jb
sub
int
inc
sbb
cmp
enter
sahf
inc
adc
ss
pop
cs
rorl
mov
push
pop
xor
jns
fimull
je
jl
jns
and
pop
lret
mov
dec
or
add
ja
cwtl
push
out
mov
movsb
je
faddl
sub
cmp
fdivp
xor
pop
adc
in
imul
sbb
add
jle
jp
insl
mov
dec
lock
add
imul
jbe
push
pop
sarl
or
repz
mov
xor
pop
push
fnsave
es
jecxz
xchg
cmp
cltd
shlb
sbb
das
lds
fs
mov
cltd
mov
cmp
xor
or
and
fmuls
iret
lret
dec
icebp
dec
jmp
jecxz
and
adc
mov
orl
jb
call
mov
or
ds
jecxz
add
pusha
mov
xlat
dec
popf
nop
in
cwtl
sbbb
daa
pop
addr16
in
mov
enter
xor
or
int3
testb
pushf
mov
inc
fwait
aad
sbb
sub
out
push
cmpsb
xchg
out
sbb
push
inc
dec
lods
pop
mov
pusha
push
push
imull
xchg
imul
in
xchg
in
mov
cmp
adc
push
imul
dec
adcl
xor
mov
xchg
jmp
dec
test
stc
repnz
fsub
icebp
loopne
mov
lock
mov
inc
cmp
and
cmp
sbb
sub
dec
add
enter
dec
fadds
movsb
fsubrs
sti
mov
push
jg
or
lods
pop
pop
mov
inc
test
cmp
and
loopne
jno
jo
aas
fimuls
xor
sub
out
rorb
cmp
mov
xor
addl
insb
jno
ret
sub
sbb
imul
cwtl
sub
cltd
dec
aas
int3
sub
adc
adc
mov
jno
mov
cld
std
xchg
xlat
in
pop
scas
inc
xchg
aad
ret
addr16
js
sbb
rolb
pop
aaa
jmp
out
popf
pop
adc
pushf
add
xor
imul
adc
arpl
xchg
leave
and
sub
ret
notb
xchg
jmp
dec
adc
and
xor
lods
fimuls
repnz
push
gs
cwtl
xchg
int3
jnp
inc
loop
or
jecxz
in
cmc
push
lret
cmp
cwtl
cmpsl
jns
out
mov
in
mov
add
xchg
lods
push
flds
rclb
iret
inc
movsb
adc
mov
insl
adc
lods
add
lds
jg
das
jns
or
mov
cmp
das
dec
xchg
fildl
js
pop
mov
fdivs
rcll
outsl
add
leave
dec
andps
bound
pop
fwait
dec
fs
adc
mov
xor
cmpsb
cltd
and
inc
adc
dec
lahf
rcr
lret
shrl
dec
std
jge
xchg
cmp
lret
jns
sbb
jns
xchg
dec
call
and
push
jmp
int3
rcrl
cld
pop
mov
inc
push
push
repz
sbb
cmpsb
ret
ret
ret
push
sarb
inc
ljmp
jmp
cmc
fldenv
xchg
jne
inc
in
pop
pop
mov
adc
cmc
and
clc
testl
nop
xchg
xchg
sbb
data16
cmp
loope
cltd
inc
push
xor
test
aam
ja
sbb
popa
movsb
sbb
sub
mov
jge
inc
jae
pop
pop
in
pop
add
and
fistpl
ss
mov
add
and
int3
in
ficomps
stos
lcall
insb
repz
cvttps2pi
stos
push
pop
in
and
fwait
inc
lret
pop
ret
xor
mov
mov
mov
lcall
xchg
js
pop
notl
mov
bound
mov
in
xchg
cli
shld
or
sbbb
jge
jb
inc
or
fs
cwtl
mov
mov
sti
cli
pop
or
jmp
cmp
fnstenv
push
inc
add
sub
lods
pop
dec
cmp
or
test
adc
js
arpl
mov
jle
dec
push
hlt
pop
movsb
jne
lcall
ljmp
jnp
cwtl
sbb
negl
in
push
sbb
mov
movsb
xor
cmp
mov
hlt
sub
push
je
mov
fcmove
pop
dec
mov
jg
les
out
call
iret
loopne
cmp
and
outsl
pop
push
nop
cmp
inc
std
adc
mov
mov
pop
mov
dec
add
and
push
dec
jmp
test
test
mov
mov
mov
lea
test
popf
ret
dec
pushf
lds
outsb
push
mov
pop
mov
std
dec
daa
push
je
sbb
inc
fisubrs
xchg
inc
add
push
xorb
daa
ljmp
inc
jae
insl
cli
ja
dec
dec
andnps
mov
jnp
jno
cli
cs
jmp
mov
inc
mov
insl
mov
mov
or
mov
and
insl
iret
dec
xor
mov
sub
and
divb
mov
adc
dec
pop
add
lcall
stos
xchg
sti
pushl
xchg
arpl
lods
testl
dec
ficomps
insb
mov
or
loop
dec
pop
push
mov
cli
lret
dec
rorb
scas
cmp
adc
jle
pop
data16
xchg
test
mov
fnsave
pop
ss
xchg
es
dec
fwait
sub
pop
into
jb
jecxz
xor
fbld
lret
xchg
daa
xchg
mov
sub
addr16
sbb
push
xor
mov
push
data16
ret
shl
jb
push
add
pop
repnz
stc
dec
push
pop
jae
and
or
test
icebp
ret
out
imul
pop
fiadds
cwtl
outsl
outsb
ret
in
push
jmp
in
xor
movsl
scas
test
jne
ss
adc
sbb
jmp
sub
test
test
and
push
sbb
inc
lret
mov
mov
xor
cmpsl
pop
iret
test
sub
adc
insl
mov
push
adc
jmp
xchg
jne
cwtl
pop
inc
jno
push
cmpb
pusha
lea
out
push
dec
es
ja,pn
mov
out
sbb
pop
mov
clc
scas
mov
cmc
enter
lahf
ja
arpl
or
mov
xchg
xchg
jnp
aas
incb
jo
and
xchg
jae
or
imul
jle
add
rorl
aam
movsl
imull
js
pushf
adc
movsl
pusha
je
xor
and
mov
jmp
push
push
fwait
or
jns
popf
mov
sbb
jp
cmpsl
mov
and
xchg
out
loop
cmp
xchg
add
and
cltd
sahf
or
xor
call
in
ljmp
dec
mov
pop
call
sbb
mov
test
jl
jae
mov
jecxz
jo
les
ja
sahf
pop
and
add
fwait
stc
scas
xchg
flds
test
lea
int
clc
clc
inc
jns
leave
push
std
pusha
adc
xchg
into
mov
add
pop
sub
dec
test
add
or
jne
mov
dec
inc
popf
adc
mov
push
xor
fisttpl
pop
cmp
dec
pop
sub
insl
repz
inc
xchg
aas
xchg
fwait
jno
bound
mov
jns
stos
jge
or
icebp
adc
xchg
idiv
mov
popa
repz
jp
push
or
movsl
scas
xorb
fwait
pop
fs
dec
adc
dec
or
mov
or
push
sbb
cmp
push
call
jne
and
das
or
mov
mov
push
push
jae
negl
mov
mov
mov
sub
outsl
jae
push
mov
and
mov
in
loop
adc
loop
mov
mov
je
or
call
or
inc
sub
test
iret
pop
or
shl
rorb
shrl
ljmp
mov
daa
jecxz
mov
xchg
rep
out
data16
leave
inc
jo
xchg
adc
int
mov
scas
out
out
jle
test
inc
mov
mov
ss
lods
pop
lret
outsl
cmpsb
mov
or
dec
dec
imul
hlt
lock
cmp
or
mov
test
fstps
sbb
pop
dec
stos
stc
in
sbb
mov
gs
into
ret
xchg
stos
fstpt
jg
jle
loop
push
fcomps
and
sahf
sub
mov
push
sbb
push
lahf
jle
shl
or
enter
aad
stos
jl
lahf
jmp
iret
pop
scas
sahf
lcall
imul
push
xchg
cmp
push
fstps
iret
icebp
xor
xchg
fstpt
cmp
fwait
lock
jecxz
mov
pusha
aas
fcmovnbe
and
jns
xchg
add
les
test
shrb
push
mov
mov
int3
inc
sbb
gs
mov
stc
pop
inc
cmp
stos
mov
and
xchg
sub
xor
inc
cmpsb
adc
jae
test
pop
repz
push
cmpsb
js
loope
scas
pop
push
movsb
or
js
loop
and
adc
jmp
rclb
lods
xor
test
mov
add
xchg
xor
push
xlat
cmpsb
xor
lods
into
push
out
lods
push
fisttps
out
lods
std
test
stos
hlt
and
fldlg2
pop
xchg
out
in
xchg
ror
xchg
js
movsl
sbbb
adc
popf
xor
add
fdivs
repnz
aam
shll
int3
and
daa
mov
int3
or
cmp
mov
lret
lret
and
dec
xchg
xor
xorb
dec
data16
pop
lock
fstl
sbb
sbb
shrb
cmp
dec
leave
cmp
pop
adc
lret
std
mov
mov
cwtl
mov
pop
xchg
jmp
mov
inc
pop
cmp
or
loopne
mov
or
xchg
inc
cld
rcr
inc
out
jg
xor
out
sbb
scas
in
lcall
inc
push
shlb
xchg
xorl
fs
es
inc
push
in
adc
or
push
mov
dec
mov
sbb
cmp
mov
notl
mov
fildll
int3
fsubl
sbb
in
jl
mov
movb
lea
scas
mov
pop
xor
icebp
xchg
sbb
pop
inc
out
shll
fimull
mov
mov
jns
push
adc
xchg
inc
mov
sub
imul
fsubrl
cmp
dec
in
shl
cmp
add
xchg
and
sbb
rcr
jl
repnz
fisubl
push
jne
push
ret
jns
sub
arpl
mov
in
lock
test
jp
jmp
imul
xor
imul
sar
xor
add
or
in
movsl
push
cmpsl
andl
repnz
and
push
sbb
scas
pop
inc
lret
xor
sub
call
jns
outsb
lods
addl
imul
inc
ret
gs
mov
mov
sti
jg
xchg
stos
inc
fiadds
dec
int3
fsubs
pop
popa
popf
addl
mov
pop
or
push
sti
dec
divl
mov
sub
scas
icebp
repz
and
push
jns
jl
stc
outsl
sub
jg
shl
loop
mov
inc
aaa
jmp
cmpsl
sahf
shlb
insb
xchg
test
fbld
sub
je
jecxz
adc
aas
mov
sti
or
cmp
inc
xlat
mov
inc
lea
xchg
je
dec
or
in
jl
mov
jecxz
lods
cwtl
mov
in
sub
jg
fwait
and
adc
dec
out
repz
mov
shll
add
push
das
and
sbb
sarl
popa
stos
imul
xchg
out
loopne
jecxz
push
fildl
enter
aaa
loope
rcrb
push
lret
mov
hlt
dec
push
add
lds
xchg
dec
pop
mov
pop
hlt
rcl
add
pop
or
lret
repz
sbb
push
xor
das
jnp
ret
dec
cmp
outsl
jle
adc
mov
push
in
clc
adc
out
or
push
mov
sarb
fwait
lods
push
push
daa
xor
cmpsl
lock
xor
subb
sub
xor
push
and
ljmp
test
adc
sub
sub
dec
frstor
add
sub
inc
out
xor
mov
xlat
popa
mov
pop
cli
inc
mov
sub
mov
cmc
pop
or
imul
stc
shll
or
jb
pop
test
movsb
add
dec
mov
cmp
cmp
sbb
dec
sub
mov
mov
pushf
aas
test
push
lods
add
pop
test
jbe
push
inc
scas
jge
jb
push
mov
mov
inc
and
mov
add
dec
add
pop
icebp
jle
stc
test
pop
adc
sub
movsb
popa
cmp
dec
shrl
fiadds
clc
lret
cs
cmpsb
pop
fwait
jae
or
push
push
cmp
mov
cmpsb
push
adc
cmpsl
dec
subl
cmp
insb
mov
push
lahf
mov
sub
mov
sti
lcall
les
pushf
sub
xor
cwtl
out
je
xchg
out
or
dec
sbb
scas
or
in
mov
push
ss
cs
cld
fmull
rorl
cltd
stc
loop
mov
lods
xchg
arpl
sbb
xor
sbb
hlt
mov
push
push
in
pop
jbe
shll
mov
es
lock
rcr
lea
push
imul
cltd
push
aaa
mov
sahf
jle
aaa
sub
sbb
push
jmp
xlat
or
inc
mov
outsb
xchg
mov
sub
bound
inc
mov
mov
jo
int3
mov
and
lcall
jae
jb
push
and
or
xchg
push
or
sub
mov
push
lret
sbb
shl
adc
cwtl
push
leave
or
arpl
test
push
leave
xchg
bound
jb
mov
jp
jbe
xchg
mov
mov
and
add
jo
pusha
sbb
hlt
lcall
cmp
aam
mull
adc
or
mov
lea
in
sahf
mov
rcl
pusha
add
faddl
dec
stos
jmp
add
fwait
push
repz
imul
sub
dec
cwtl
dec
sbb
mov
xor
adc
jns
adc
shrb
cld
jmp
in
adc
sub
jae
sub
mov
movsl
adc
fwait
cld
mov
incb
sub
jb
pop
pop
cmpsb
ljmp
and
push
cmp
loope
testl
sbb
mov
das
jl
insb
mov
push
xor
iret
out
shl
push
out
xchg
pop
and
mov
sbb
popa
jge
mov
pop
repz
data16
dec
std
ljmp
nop
leave
shrl
mov
cmpsb
dec
enter
adc
sub
pop
inc
scas
adcb
jp
outsb
xchg
jae
sub
ss
mov
mov
xchg
dec
inc
mov
jnp
call
add
sub
push
inc
push
imul
inc
sub
dec
jne
sbb
insb
sub
mov
mov
cs
add
jne
xchg
lahf
mov
xchg
into
movsl
ss
or
mov
rcl
push
mov
test
and
std
hlt
cmp
pop
mov
push
andl
ficoml
pushf
subl
adc
mov
xlat
push
cmp
mov
shlb
insb
fsubl
mov
and
test
mov
insb
pop
xlat
mov
inc
mov
into
dec
out
test
or
sub
pop
aas
pop
pop
jmp
cltd
lahf
inc
mov
xchg
je
in
lock
cmp
or
mov
add
lods
xchg
shlb
js
and
mov
mov
inc
sbb
adc
mov
and
call
test
cld
je
ds
icebp
add
int
daa
out
mov
mov
jge
mov
ret
push
ret
int3
fsubrs
pusha
divl
push
rcrb
mov
cmc
sbb
pop
jne
es
add
nop
in
fdiv
jb
push
aad
and
fsts
popa
cli
mov
rorl
mov
push
or
leave
and
fbstp
or
mov
movsb
daa
in
dec
push
in
inc
mov
dec
xchg
inc
add
mov
sub
dec
adc
pop
fidivs
daa
ss
sahf
xor
arpl
sbb
sub
or
mov
int3
xor
addr16
mov
sbb
push
inc
fisubs
sbb
jb
sub
jle
fdivrp
hlt
fwait
jp
cmpsl
cltd
fadd
mov
push
in
lods
add
push
ljmp
sbb
aas
stos
int3
repz
adc
and
adcl
mov
mov
pop
inc
push
dec
sbb
loop
jnp
mov
xor
pop
and
pop
jl
stos
adcb
inc
stc
lcall
aam
fnsave
test
inc
popf
mov
push
lock
cmp
push
cmp
or
daa
and
cltd
cltd
sti
mov
in
mov
repnz
fwait
out
xor
stos
outsb
jp
leave
jg
dec
add
push
into
out
int
insl
int3
add
dec
xchg
mov
cs
and
aad
mov
mov
ss
js
xchg
andb
xchg
mov
enter
mov
adc
call
add
cmp
sub
es
adc
jns
mov
adc
aaa
sahf
or
xchg
mov
inc
jge
stc
adc
mov
mov
pop
clc
pop
aas
shll
or
rolb
bound
cmp
mov
jp
flds
icebp
pushf
addl
cmp
sub
cwtl
js
movsb
xchg
pop
sub
pop
mov
jl
ds
je
cmp
jg
and
jecxz
ljmp
mov
push
addb
jns
movsl
cmp
push
sahf
push
rclb
scas
mov
clc
lea
cltd
pusha
xchg
sbb
pop
mov
inc
pop
mov
mov
push
repnz
dec
bound
nop
xor
fidivrs
xor
xlat
outsb
mul
push
lock
push
icebp
mov
cmp
es
inc
jmp
pop
lods
and
inc
mov
popl
pusha
sbb
scas
daa
dec
aas
sub
sub
xor
xor
dec
inc
test
push
jmp
call
sahf
int3
stos
sbb
mov
les
ljmp
sbb
jp
into
cmp
pop
cltd
sarb
mov
push
ficoml
in
lret
lret
testl
ljmp
cwtl
cmp
push
xchg
adc
aaa
xor
and
arpl
xor
jmp
shr
iret
lret
sbb
lds
cmpsl
pusha
mov
jecxz
jae
add
or
cmp
inc
shll
popa
fwait
inc
xor
lods
imul
shll
call
sti
jb
loopne
loope
cmpsb
pop
pop
stc
outsl
mov
mov
mov
mov
mov
mov
mov
cli
lods
sti
jo
pop
jg
fisttps
out
or
mov
ljmp
xchg
inc
fwait
mov
popf
sahf
xor
ja
out
cli
cmpsb
mov
adc
mov
cmp
scas
sub
loop
and
sbb
ss
imul
mov
push
cmp
mov
push
mov
cmp
lcall
push
dec
or
call
and
jg
leave
scas
rolb
ret
mov
idivl
mov
ljmp
sub
sub
inc
xchg
sbb
ret
jb
sbb
leave
into
cs
andl
dec
or
mov
mov
jno
and
shll
fcompl
jl
mov
mov
ljmp
cmp
and
push
dec
inc
xorl
mov
add
js,pn
cmp
inc
rclb
js
inc
out
add
shll
fcmovne
jecxz
pop
push
ja
dec
outsb
lahf
cmp
nop
jo
xchg
scas
jmp
fbld
xor
pop
cli
lds
shlb
ror
fldpi
flds
cwtl
repz
push
retw
out
adc
call
and
jno
mov
inc
int
gs
shl
xchg
mov
out
xor
xor
out
xchg
sub
push
xor
cmp
stos
lcall
xchg
dec
vpsubq
dec
sub
cmp
push
ds
aas
in
in
xor
sahf
xchg
or
inc
mov
lret
cwtl
leave
ljmp
jp
mov
ficoms
push
cmp
pop
adc
add
je
or
mov
scas
sub
dec
lea
mull
xchg
mov
mov
test
test
cmp
inc
mov
ja
test
pop
daa
xorb
imul
inc
data16
inc
mov
sub
dec
inc
fnsave
cli
add
aam
sub
lahf
or
pop
lods
lret
in
cmpsb
lods
negb
in
pop
call
call
xor
cmp
mov
fistpl
push
sbb
sbb
mov
test
and
sarl
xchg
aas
rclb
mov
enter
adc
adc
inc
mov
mov
jg
es
xor
idivb
lods
shll
cmp
in
cmp
ja
fst
ss
int3
and
or
and
xchg
leave
cmp
lcall
movl
sub
and
jae
mov
jg
xor
xchg
mov
mov
jb
imul
jmp
dec
stos
mov
pop
ret
add
ret
mov
inc
je
cli
pusha
je
addr16
and
dec
out
repz
mov
insb
ds
sub
std
push
mov
pusha
push
xchg
icebp
test
fadds
adc
das
xchg
mov
imul
sub
pushfw
lea
lods
clc
pop
or
mov
mov
add
jb
std
jne
pop
mov
xor
xchg
in
shrl
dec
cmp
mov
data16
add
mov
into
out
fs
xor
out
add
dec
ret
push
notb
jne
imul
fwait
jae
mov
mov
pop
inc
xor
outsl
cwtl
ljmp
pop
lods
ljmp
pop
push
or
sahf
into
iret
scas
pop
inc
loop
mov
cmp
pop
pop
scas
lret
repnz
and
aam
add
and
in
cs
and
repz
xchg
xchg
idivb
ja
out
test
aam
js
push
pop
std
dec
pop
mov
fcoms
inc
cmp
sub
sbb
movsb
ret
mov
mov
shr
xchg
mov
sub
push
shrb
sbb
in
sbb
pop
addb
mov
ljmp
outsl
cmp
ret
xor
aam
int3
mov
xchg
je
out
js
dec
or
ss
dec
mov
push
push
cld
xor
shrb
scas
xchg
cmp
and
imul
adc
je
pop
mov
test
out
popa
dec
daa
test
jne
bound
ja
xchg
push
pop
dec
fildl
mov
or
mov
xchg
and
fwait
push
cltd
cmp
push
push
xlat
xchg
ret
in
les
inc
jp
sbb
and
pop
addr16
jecxz
xchg
jae
cli
xor
out
push
fs
mov
aam
rorl
sub
and
xchg
mov
repz
out
xchg
cmc
ds
adc
mov
mov
xor
sahf
insb
cmpsl
xchg
cmp
mov
mov
cs
out
push
jle
cmp
xchg
pusha
sub
loopne
loop
cli
into
lock
jb
test
enter
dec
mov
cmp
lds
movsb
sahf
sbb
dec
imul
and
jp
cs
dec
xchg
dec
pop
ss
fdivl
sbb
test
pop
jbe
movsl
xor
pop
les
inc
test
adc
pop
jecxz
js
sarb
pop
and
test
inc
out
fidivs
clc
data16
mov
clc
push
ljmp
and
add
sbb
test
and
nop
mov
xchg
repz
in
fcmove
test
mov
testl
jge
add
stos
xlat
pop
out
xchg
stos
lods
sub
notl
insb
notl
sahf
pop
mov
out
sub
xchg
cmpsl
lcall
jb
sub
sbb
movsb
sub
rcrb
xchg
sub
fdivp
ret
inc
int3
sub
cld
mov
loopne
jno
lds
ja
dec
in
push
lods
pop
cs
fiadds
fsub
out
xchg
enter
lods
mov
cmpsl
dec
mov
xor
jns
fidivl
out
lock
pushf
sub
iret
jmp
xchg
idivb
orb
adc
push
push
push
daa
scas
mov
lods
push
fnstenv
shrb
push
push
shlb
call
xchg
in
push
aaa
outsb
fwait
inc
and
aas
cmc
loope
push
mov
mov
sub
repz
xlat
sub
xorb
fidivrs
cmc
pop
int
test
repz
adc
mov
jo
or
cmp
cmp
sub
pop
xchg
cli
fstl
sub
nop
xor
sub
cmp
pop
arpl
cmp
enter
or
shr
xchg
mov
dec
shlb
cmpsb
xchg
mov
xchg
inc
mov
sbb
fstpt
test
fldt
in
push
xchg
pop
jnp
cld
push
xchg
loop
lea
dec
aaa
push
pusha
mov
mov
adc
mov
pop
arpl
inc
es
mov
std
pop
stc
jno
pop
popa
or
xor
out
dec
push
js,pn
pusha
mov
addr16
gs
dec
test
jp
iret
xor
add
mov
pushf
inc
push
jmp
lods
out
sbb
js
stc
inc
ljmp
mov
mulb
xchg
and
mov
cmp
rclb
in
and
and
mov
in
push
daa
notb
les
inc
pop
xchg
lahf
mov
xchg
cmp
sbb
sarl
les
lret
jmp
test
imul
pushf
pop
js
pop
js
xor
add
mov
leave
cmp
ja
add
jp
jle
leave
shlb
cmp
dec
mov
xchg
icebp
fadd
ret
fcom
popa
lods
and
xor
arpl
stc
cmp
jns
stos
repz
jl
and
in
add
xchg
push
mov
frstor
xor
loop
pushf
and
pushf
or
cwtl
popa
dec
test
jl
inc
mov
push
xor
leave
pop
rorb
mov
xor
call
jb
imul
cwtl
mov
test
cld
inc
test
or
mov
cmpsl
fs
cltd
bound
jecxz
out
lock
cmp
sbb
cs
pop
fstpl
add
inc
stos
xchg
in
sub
setns
or
jg
ret
mov
pop
add
test
and
and
sbb
add
std
inc
and
call
dec
lods
addr16
mov
mov
adc
pop
hlt
sub
movsl
shrb
and
lea
cwtl
sub
cwtl
out
sbb
call
leave
pop
sbb
pushf
aaa
scas
imul
push
xor
mov
jns
adc
imul
push
sub
fistps
fmuls
xor
popf
sti
cmp
and
in
test
or
xor
rolb
xchg
in
dec
dec
jno
pop
loope
fdiv
mov
mov
test
cs
daa
mov
out
mov
push
test
outsb
stos
mov
adcb
lahf
mov
sahf
rorl
pop
lods
or
jbe
mov
hlt
mov
fistps
lcall
fdiv
cwtl
sbb
test
andb
stc
xchg
adc
pop
fisttps
in
sbb
jmp
ret
cmp
movsl
lock
lret
std
divb
add
rcrb
pop
into
xchg
test
cltd
stos
nop
testb
jge
mov
inc
imul
call
sub
mov
or
or
call
and
sti
dec
xchg
mov
loope
dec
add
add
in
adc
aaa
imul
in
push
cmpsb
test
and
sbb
lret
dec
je
sub
iret
enter
mulb
jmp
dec
ficoms
cmp
and
divb
inc
sahf
aad
sbb
adc
inc
test
pop
in
adc
je
xchg
lcall
daa
inc
cwtl
ret
rorb
jns
icebp
push
fisttps
xchg
sub
pop
and
cmp
xchg
cmpl
mov
lds
flds
addb
sub
sbb
jb
cmp
mov
xor
jbe
sub
jno
mov
ss
sti
adc
imul
fnstenv
icebp
movsb
enter
call
das
sub
leave
mov
icebp
add
icebp
push
mov
in
xchg
out
rol
ret
dec
pusha
aas
insl
cmc
push
aam
sub
inc
bound
mov
jnp
mov
sbb
xor
mov
inc
push
adc
movsl
aas
jle
mov
adc
aad
dec
and
mov
loope
or
movsl
mov
aaa
jp
pop
mov
rclb
or
bound
repnz
adc
sub
xor
clc
insb
push
ss
lret
repz
and
testb
dec
aad
and
mov
icebp
dec
mov
sub
loope
xor
pop
std
les
ja
jb
mov
jnp
loopne
aad
mov
cli
xchg
push
jo
sub
xchg
adc
test
mov
jns
jle
rcll
imulb
cmp
cmp
cmp
shlb
jmp
adc
aas
xor
cmpsl
cmpsb
sahf
sbb
ss
jbe
ret
xchg
rdpmc
aam
and
sub
nop
loop
inc
cs
push
inc
notb
aad
cmpsl
outsb
and
add
push
cli
mov
lahf
test
jb
pop
imull
jno
or
pop
push
mov
out
fcomp
dec
xchg
or
int3
test
sub
xor
cmpsl
mov
adc
and
mov
cmp
mov
mov
inc
push
sub
jg
sti
insl
je
mov
arpl
ljmp
bound
lret
mov
mov
jle
dec
pop
mov
mov
dec
xchg
mov
sahf
pushw
mov
mov
insl
ret
sbb
xchg
cmpsb
loopne
or
push
pop
imul
jp
out
jno
add
pop
cmpsb
xchg
enter
push
fisubrs
mov
out
mov
sbbl
andl
in
xchg
pop
in
icebp
or
cli
inc
and
dec
or
dec
scas
pop
cs
stos
das
stos
stos
scas
out
push
scas
rcll
cs
sbb
jnp
in
pop
mov
dec
ret
inc
fisttpll
stc
and
test
lcall
dec
push
dec
int
idiv
dec
sub
fucomp
outsl
lahf
pop
lock
fsubrp
pop
mov
pop
mov
out
xchg
clc
mov
rol
addl
adc
add
fdivr
mov
adc
pop
mov
cmpxchg
call
mov
cmp
xor
mov
xor
loopne
xchg
xchg
xchg
divl
pop
mov
adc
cmp
cmp
mov
imul
xchg
and
inc
shlb
mov
cmp
adc
pop
sbb
add
pop
cmc
rcrl
adc
mov
inc
and
push
cmp
inc
mov
pusha
mov
ret
push
cmp
roll
cltd
or
incb
leave
xor
adc
mov
sbb
xchg
mov
aaa
adc
add
imul
adc
sbb
inc
add
mov
imulb
and
not
pusha
scas
xor
lret
push
cli
sahf
or
rorb
shrb
xchg
jmp
sub
xchg
jmp
loope
adc
aas
rolb
xchg
push
mov
test
jmp
loopne
jno
iret
mov
adc
xchg
adc
or
adc
pop
and
in
or
sub
cltd
xchg
daa
xor
and
cwtl
xor
or
jne
add
adc
push
fidivrl
sub
fiadds
scas
adc
mov
adc
or
cmpsl
pop
xchg
mov
cld
mov
push
lods
or
or
xchg
lods
lahf
lock
leave
int
xor
sbb
pop
mov
xchg
sti
mov
add
sub
and
mov
mov
dec
and
cmp
in
jge
or
cmp
adc
cmp
imul
mov
roll
dec
test
xor
or
test
cmp
and
sub
mulb
scas
push
or
adc
loopne
adc
xchg
xchg
adc
fistpl
add
dec
adc
lea
xor
test
pop
sub
out
xchg
mov
dec
aas
cmp
sub
daa
inc
std
mov
movsl
adc
jb
xor
fstp
in
movsl
inc
jno
dec
jl
pop
push
enter
push
sub
les
xchg
dec
fstp
loopne
stc
inc
adc
movsb
loope
in
or
sbb
xchg
aaa
stos
pop
pop
ds
scas
rorl
negb
jmp
xchg
test
fmul
ljmp
and
stos
cmp
push
lea
arpl
rcll
ficompl
repnz
mov
xor
and
stc
aad
es
js
or
dec
add
and
hlt
inc
mov
popa
js
fdivrs
clc
cmpl
and
cmp
sar
cmp
adc
std
imull
insb
jg
dec
shlb
mov
dec
fs
dec
out
jg
ror
rol
xchg
adc
inc
imul
xchg
stos
xor
inc
leave
lcall
xor
imul
ds
sar
pusha
sub
leave
and
inc
data16
imul
outsb
fwait
xor
push
in
test
out
int3
sahf
mov
inc
rolb
cmp
xchg
jmp
cmp
in
iret
cli
xchg
push
repnz
shr
cmc
scas
shll
repnz
pop
push
sub
scas
xchg
dec
mov
push
in
in
and
xchg
push
and
dec
adc
cmovns
push
imul
aaa
mov
scas
add
test
fidivrs
sub
les
mov
scas
inc
repnz
push
lret
leave
data16
jge
mov
mov
loop
repz
ret
loop
addr16
inc
fwait
lcall
dec
sbbb
mov
pop
cmp
cmpsb
ja
pop
cltd
out
hlt
jp
sub
ja
or
inc
loopne
in
sbb
repnz
stos
fidivrl
lods
add
jmp
clc
pop
cmp
sbb
dec
add
and
push
and
cmp
lock
popa
call
mov
fs
sub
pusha
popa
sahf
pop
arpl
cmpl
xor
andl
cmpsl
sbb
jl
dec
cmp
add
das
imul
lds
popa
mov
ret
mov
fucom
inc
mov
add
pop
adc
call
int3
iret
in
pop
sarl
data16
inc
adc
push
mov
popa
adc
lahf
sti
push
lods
push
adc
mov
fnstcw
loope
daa
sbb
pop
adc
dec
or
adc
jo
scas
xor
fldt
scas
xchg
dec
mov
pop
inc
std
inc
mov
push
adc
idiv
mov
jno
dec
pop
lahf
bound
xchg
jno
ret
out
jge
lret
mov
cli
nop
mov
adc
sbb
and
inc
cmp
stos
scas
jl
mov
inc
cmp
mov
push
mov
in
inc
les
loopne
fildl
jo
pop
imul
pop
add
push
push
push
xor
add
cmc
pop
adc
hlt
fdivrs
into
mov
mov
popl
fildl
jbe
and
xchg
inc
in
or
sarl
inc
fwait
adc
xor
mull
imul
ret
cld
hlt
aaa
nop
lcall
aas
stos
sti
and
xlat
or
in
jg
outsb
out
dec
ljmp
fs
dec
cmp
cmpsl
sbb
es
mov
int3
jbe
mov
sarb
mov
scas
mov
push
pusha
call
adc
xor
aam
roll
mov
adc
push
mov
test
leave
xchg
pop
xchg
fsts
dec
dec
negb
xorb
in
jnp
gs
cmp
jo
and
outsb
movsl
cmp
pop
mov
mov
in
pop
lea
out
or
push
jno
cwtl
mov
outsl
out
mov
pop
ret
mov
pusha
push
out
mov
ljmp
andl
lds
jecxz
add
fwait
mov
and
shll
lds
jno
nop
out
pop
stos
pop
push
mov
pop
sbb
jae
lcall
jo
iret
push
daa
dec
sbb
mov
mov
lods
sbb
mov
push
cli
jmp
xchg
das
imul
dec
psllq
clc
movsb
test
aam
arpl
push
push
out
ja
push
jns
push
pushf
inc
xchg
pop
std
dec
jbe
xor
frstor
add
cwtl
test
std
std
cmp
inc
movntq
pop
push
addr16
or
pop
push
sahf
xor
jne
int3
lahf
adc
push
push
mov
ficompl
lock
sub
outsb
lret
test
pop
bound
outsb
xlat
test
adc
pop
dec
push
lea
sbb
adc
ficoms
pop
scas
aad
jo
jl
sbb
xchg
sbb
push
or
cmp
and
xchg
pop
cs
dec
je
jo
dec
jae
jbe
popf
add
enter
dec
insl
push
jbe
mov
cwtl
lods
mov
xchg
aaa
jmp
movsb
outsl
sbb
test
push
push
lds
testl
pop
test
pop
mov
testl
add
mov
fists
ret
lret
cmpsl
pop
fwait
cmpsb
mov
mov
sarb
pop
rorb
sbb
insb
cs
shll
data16
insl
xor
mov
xor
shlb
imul
lods
gs
loopne
and
mov
add
push
cmp
repnz
pop
sbb
sub
inc
ret
push
dec
ret
adc
cmp
sub
mov
outsl
sub
sub
fidivs
out
push
cltd
pop
sbb
nop
cmp
push
push
outsl
sbb
or
xchg
fcom
das
add
repnz
mov
add
sbb
cmp
cwtl
rclb
jne
or
mov
aaa
psubq
fidivs
jo
in
pop
jne
xor
popa
mov
or
xor
flds
fwait
push
popa
sbb
pop
int3
cmp
push
xchg
jmp
jo
jae
cs
xchg
jp
fdivrl
imul
jg
mov
pop
jnp
into
dec
dec
sbb
data16
mov
sbb
and
into
loope
frstor
push
dec
cwtl
mov
int3
andb
outsb
fstps
scas
pop
aam
in
js
jns
jle
fimuls
or
mov
fsubs
xor
pushl
rorl
jge
psrld
adc
cmp
pop
xchg
lock
pop
loop
pop
cld
repnz
jns
xor
or
fdivs
icebp
inc
mov
shlb
imul
xchg
loop
jle
xor
neg
xchg
inc
repz
hlt
push
idivl
pop
xchg
mov
dec
adc
aam
out
out
mov
in
test
fldl
pop
push
imul
pop
adc
inc
xabort
repnz
jno
pushf
clc
and
iret
push
out
push
jge
mov
mov
scas
fcoms
push
pop
aaa
int3
cmp
adc
jo
adc
sbb
xor
push
and
pusha
cs
dec
cmp
in
mov
in
adc
ja
adcl
lock
or
lds
add
push
iret
jecxz
in
pop
mov
push
add
mov
jno
scas
ret
hlt
push
ret
gs
jae
stc
adc
xchg
mov
push
cmp
sar
aad
dec
lods
push
movsl
lret
jmp
sub
xchg
xor
repnz
jg
in
repz
scas
cmpsl
push
push
jle
cli
cs
ficompl
stos
mov
movsb
xchg
hlt
fs
xchg
xchg
add
sti
icebp
or
loope
scas
sub
int
xorl
insl
sub
or
pusha
sub
cld
add
nop
mov
push
or
fmuls
pop
call
iret
cs
test
or
push
or
stos
cltd
stos
sbb
ljmp
xchg
imul
mov
notb
and
push
xchg
jecxz
inc
push
imul
cmc
pop
test
jecxz
xor
outsb
bound
subb
pop
push
fsub
xor
mov
xor
jo
xor
add
cmp
fldcw
popf
jmp
mov
cs
js
inc
lea
jne
pop
pop
icebp
out
add
mov
filds
into
cs
fdivl
adc
aam
jae
lds
mov
mov
sbb
fists
cmp
test
dec
add
xor
push
mov
xor
int
adc
arpl
jbe
into
mov
int3
cvttps2pi
roll
and
jecxz
xor
xorl
jo
dec
and
xor
add
mov
data16
frstor
xor
or
and
in
sbb
jge
enter
movsb
jnp
aas
cmc
sub
lock
ret
aaa
or
jmp
fcomi
es
jle
cmp
addr16
cmp
test
pop
imul
int
add
lea
jp
in
andb
gs
arpl
dec
cwtl
mov
xor
adc
or
nop
shrb
push
in
call
mov
adc
add
out
loopne
enter
mov
adc
pushf
inc
and
jb
xchg
mov
inc
int
cld
dec
out
jge
sub
push
test
mov
mov
popa
lea
lret
add
sub
mov
gs
pop
pop
enter
stos
mov
clc
xchg
bound
dec
insb
inc
push
scas
fnstsw
test
pop
andb
pop
cmpsl
xor
cmp
in
sub
es
pop
je
mov
dec
jo
or
stos
fcompl
mov
movsb
add
lds
mov
cmc
xchg
inc
pop
in
testl
fstps
enter
xor
jge
xor
mov
das
not
add
and
mov
lock
jg
ja
add
push
mov
sub
in
dec
cmp
xor
loopne
sbbl
cmp
lcall
fwait
jg
into
add
cld
push
loopne
rol
movsl
insl
cld
daa
and
movsb
sbb
jecxz
in
xor
ret
fwait
mov
test
out
rorl
cmp
mov
mov
mov
or
and
ret
fwait
mov
lret
jb
rol
mov
cmp
stos
mov
aaa
mov
xchg
fnsave
mov
adc
subl
mov
mov
pop
inc
aad
jb
mov
or
outsb
xor
adc
xorb
fistpl
shrb
movsb
inc
in
pusha
or
imul
icebp
ret
jb
fldl
xor
inc
xchg
ja
mov
jno
adc
rclb
out
cltd
pop
aas
sub
jmp
jmp
fwait
es
fs
clc
mov
aad
fstl
loopne
xchg
dec
scas
int
jp
xchg
adc
dec
sub
mov
mov
mov
dec
pop
inc
adc
xlat
out
mov
mov
testb
push
roll
jno
sbb
idivl
jbe
push
add
sti
lcall
jb
or
and
test
mov
fists
in
lea
pusha
push
sahf
inc
jg
mov
and
pop
dec
push
or
xchg
inc
xor
fmul
and
jne
loopne
mov
fwait
sbb
push
xchg
ret
les
cld
test
leave
loop
pop
loope
or
push
sahf
cwtl
fisttpll
outsl
ficompl
out
cs
xchg
cltd
cwtl
xchg
shrl
push
lea
mov
or
loopne
rclb
xorb
cmp
inc
inc
mov
mov
loope
xchg
add
lret
in
xor
xchg
bound
add
bound
lods
dec
and
xlat
sub
fldenv
push
cltd
ss
xor
fcmove
aas
js
push
into
add
push
and
mov
xchg
dec
les
outsl
inc
and
and
hlt
imul
pop
mov
cmpl
lcall
sbb
fdivrl
aaa
dec
mov
dec
xchg
and
cli
out
icebp
out
dec
xor
pushf
lds
lods
fbstp
fsubrs
inc
mov
push
lods
sub
add
adc
insb
out
addr16
dec
das
cmp
jle
sub
ret
mov
addl
cmp
inc
xchg
dec
lock
jne
daa
in
pop
in
aam
inc
and
xchg
pop
jmp
fwait
je
sbbl
mov
jg
loop
les
inc
fildll
xor
int
ds
roll
push
lea
popa
mov
inc
rorb
or
pop
imul
scas
and
pop
enter
sar
std
lcall
sub
xchg
sub
cmp
repz
push
xchg
in
mov
xor
sub
insb
outsb
rcrl
jp
sub
cld
fsts
iret
inc
jae
popa
es
das
ret
xchg
cmp
cld
xor
and
cmp
mov
dec
pop
fstpl
sbb
lock
mov
test
scas
jns
mov
pop
pop
mov
cmc
lahf
mov
jge
ja
pop
lcall
and
add
sbb
mov
push
push
cs
shrl
xor
js
movsb
in
xlat
jmp
lea
jmp
pop
rcl
xchg
int3
push
nop
loope
mov
cld
or
addr16
bound
insb
loope
mov
xchg
nop
xchg
mov
aas
adc
fisttpll
adc
mov
daa
or
mov
pop
xor
mov
pop
out
dec
dec
mov
mov
mov
hlt
gs
scas
stos
inc
mov
cmpsb
mov
rcr
test
or
sub
dec
fmul
cs
dec
imul
fmull
cmpsl
lret
mov
aaa
out
shrb
nop
loop
pop
fmuls
mov
jmp
mov
add
mov
add
popa
imul
cmpsl
div
sbb
daa
xchg
in
dec
lret
jno
nop
rcl
xchg
cmp
sub
aam
xchg
sub
shr
or
mov
mov
cs
xchg
or
ret
mov
aaa
or
jmp
arpl
xor
in
std
ja
or
mov
lss
insl
gs
adc
xor
andl
mov
mov
mov
imul
xor
jae
jae
dec
leave
test
jmp
in
rorb
roll
aad
js
and
jg
mov
mov
cmc
pop
in
clc
pop
int
pop
push
repz
nop
popa
mov
mov
cmp
imul
add
lret
sub
bound
in
cmp
mov
adcb
and
and
je
sbb
pushf
mov
addl
jge
jge
leave
jae
dec
popf
push
jmp
add
imul
or
sbb
mov
mov
rcr
jl
jg
je
push
stc
loope
bound
push
or
test
xchg
inc
dec
lea
cmc
mov
imul
add
or
adc
adc
or
jno
jb
loop
test
adc
and
and
cwtl
es
push
stos
std
pop
inc
es
pop
xor
adc
sub
aam
mov
outsw
imul
inc
jge
cmpb
jbe
imul
test
mov
pusha
lahf
jnp
and
cmp
pop
xchg
icebp
pop
jg
daa
mov
and
sbb
aad
sub
jne
aaa
jne
sarb
rclb
lret
out
ljmp
shr
cmc
stos
jno
jl
sbb
dec
dec
data16
push
clc
dec
out
mov
dec
pop
or
daa
xor
loop
incb
test
movsl
ja
xchg
cmp
mul
cmp
sbb
pop
and
inc
ds
int3
addb
dec
xchg
adc
lock
movsb
hlt
es
lret
aaa
or
sub
jle
mov
jbe
fbstp
mov
shlb
iret
scas
lahf
jns
adc
sbb
jo
push
lret
bound
xchg
sbbl
shll
int
movsl
cmp
adc
xchg
inc
xchg
mov
rcll
cld
mov
stos
orb
cwtl
sub
jo
adc
pusha
fwait
pusha
push
repz
out
xchg
mov
sbb
lds
mov
push
push
or
pop
iret
push
ret
xchg
mov
push
add
lea
mov
jecxz
push
or
icebp
or
dec
stc
and
into
ja
movsb
dec
mov
mov
push
in
nop
fcomps
cmpsb
idiv
inc
dec
iret
lret
push
icebp
cld
test
push
pop
push
std
cmp
jmp
or
xchg
movsl
dec
in
loope
aaa
shrb
cli
dec
mov
mov
fsts
sbb
jl
in
push
sub
xor
loop
loop,pt
int
mov
xor
sbbb
push
je
lea
in
mov
aas
fidivrs
mov
sar
dec
pop
cmp
mov
sahf
sub
jp
sbb
pusha
fsubrp
shll
push
xor
push
pushf
popf
sti
add
add
in
xchg
ret
mov
in
sbb
pop
mov
pushf
lcall
cmp
stc
jmp
stos
xor
dec
push
lret
out
sahf
cmp
xchg
rcr
pop
push
mov
sbb
test
adc
push
fcoml
shll
pop
aaa
jb
mov
xor
xor
cmp
sbb
imul
das
sbb
sbb
je
enter
add
decb
dec
je
and
jle
mov
fucomp
lods
in
sbb
cmp
clc
adc
filds
dec
jo
add
popa
ds
fstpt
lahf
push
pushf
jmp
shlb
notl
cmp
mov
cmp
xchg
lds
out
cs
in
jne
or
inc
aaa
push
push
cmpsb
sbb
loope
cmc
cmpl
out
inc
fs
xchg
jno
jg
adc
xchg
cmp
xchg
rorb
test
jnp
mov
setns
es
sbb
mov
cmp
xchg
mov
stos
aam
jne
and
ja
cmp
or
lahf
add
mov
cld
scas
sahf
adc
adc
sbbl
jmp
add
dec
sub
fsubs
inc
lret
xchg
inc
mov
jnp
cmp
jo
sbbb
jmp
add
cwtl
aaa
ficoms
daa
fiaddl
xchg
test
orl
sub
xchg
push
out
addr16
sub
test
mov
or
aaa
lock
xor
xor
add
xchg
inc
inc
repz
xor
add
mov
sbb
gs
fldenv
hlt
inc
cmp
push
push
cmc
loop
lret
pop
pusha
and
into
jmp
inc
dec
sub
sbb
aas
jns
jle
mov
mov
inc
pop
xor
pop
jne
daa
and
xor
lret
jp
stc
pop
std
and
jne
loop
pusha
push
aas
jne
xlat
and
dec
dec
arpl
or
movsb
push
test
lcall
cmp
jbe
jne
dec
iret
mov
adc
loope
arpl
jge
mov
stc
setbe
andl
fimuls
inc
mov
jmp
sarb
sarl
shlb
sbb
movsl
xor
sub
mov
es
add
sub
and
add
jno
mov
dec
popa
lahf
jg
js
and
mov
lret
int
dec
xchg
jno
stc
pop
stos
inc
sub
in
xchg
mov
or
fwait
sub
mov
and
lret
mov
cwtl
pop
ret
repnz
incl
movsb
jp
pop
xor
pop
negl
pop
inc
lret
dec
pop
mov
inc
int
sti
push
sahf
sbb
jmp
icebp
pushf
inc
push
cmp
je
push
mov
xchg
dec
mov
out
out
dec
fisubrl
jbe
cmpsb
push
rcr
xor
stos
test
rclb
jecxz
mov
and
add
inc
cmp
jle
rol
stc
sbb
loop
push
jecxz
fiaddl
pushf
adc
subb
out
or
int
arpl
fs
xchg
sbb
fldl
ror
cmp
mulb
loop
adc
mov
scas
fistps
mulb
inc
test
dec
push
mov
and
push
hlt
das
ficoml
hlt
lock
pushf
lret
push
sbb
ljmp
push
mov
cmc
scas
and
out
jb
push
inc
jmp
or
lods
pushf
jp
dec
test
jecxz
xor
ds
popf
dec
movsl
dec
fidivrl
sub
in
faddl
call
xor
pop
call
js
daa
jo
sarb
cmp
sub
dec
test
out
stos
aam
sub
test
xchg
jnp
out
inc
or
pop
adc
inc
dec
icebp
mov
cmp
arpl
jo
imul
mov
js
adc
jge
mov
aas
test
ds
icebp
mov
mov
stos
inc
repnz
xor
lods
jge
mov
push
stc
and
outsl
mov
xchg
add
inc
sub
daa
loop
das
sub
out
rorl
cli
xchg
xchg
fsubr
daa
push
loopne
bound
push
add
sbb
outsb
imul
fimull
pop
jmp
xor
jno
or
leave
mov
movsb
loope
fs
add
xchg
xorl
ljmp
sbbb
jno
push
ljmp
dec
sar
pop
fisttpll
fs
pop
pop
test
mov
dec
dec
arpl
xchg
ja
jle
jmp
push
pop
jnp
add
aam
aad
mov
xor
nop
imul
or
xchg
and
neg
pop
inc
mov
dec
orb
je
sub
mov
mov
xchg
bound
cmp
mov
sbb
adc
sub
inc
ss
or
xchg
pop
dec
xchg
pop
clc
arpl
gs
mov
gs
xor
push
push
push
sub
sub
stos
xor
cmp
xor
int3
dec
lods
and
lcall
lock
call
mov
mov
mov
sub
leave
mov
sbb
and
cmp
popa
and
mov
or
bsr
sbb
push
sbb
xchg
adc
pop
outsl
sti
das
sub
test
icebp
cmp
xchg
lret
movsl
adcb
repnz
fxch
push
cmp
data16
or
flds
jae
xlat
fldenv
sti
js
jo
fsubrl
sub
add
xor
iret
push
jg
xchg
add
mov
push
jge
and
enter
lds
ret
or
pop
inc
es
stc
inc
inc
jnp
lahf
movsl
imul
call
imul
xor
icebp
pop
jns
lods
mov
pop
xor
lea
xchg
popa
mov
add
xchg
xor
and
jnp
aam
mov
das
jno
testl
subl
mov
mov
xlat
pushf
scas
leave
scas
and
xor
mov
lret
xchg
into
nop
fs
popf
test
mov
dec
out
scas
repnz
loopne
addr16
adc
mov
cld
int
pop
stc
or
cmp
rcll
stos
xchg
inc
mov
rcl
pusha
lods
std
aad
inc
push
ffree
outsl
lea
into
xchg
andl
popf
adc
jns
jne
fcoml
mov
mov
sub
loopne
mov
mov
and
dec
into
hlt
enter
mov
fsubrl
pop
mov
lock
xchg
and
jl
xor
push
test
fstpt
sub
add
jb
test
dec
out
sbb
addl
aad
sub
clc
cmpsl
not
idivb
outsl
adc
popa
rcll
subb
and
ret
mov
lahf
xor
add
bound
filds
sbb
or
pop
movsl
clc
test
into
mov
xlat
or
jge
cmp
cld
jbe
std
inc
xor
test
dec
push
mov
pop
inc
stos
lods
int3
inc
nop
mov
cmpsb
out
push
imul
inc
mov
je
jecxz
adc
or
cmpsb
in
mov
imul
loope
mov
xchg
loope
and
mov
pop
jle
mov
mov
push
mov
out
popa
sbbl
jo
loope
lret
lret
aad
lods
aas
lcall
cld
and
in
pop
js
mov
mov
sbbl
mov
scas
mov
lods
sbb
scas
dec
jg
mov
call
cmc
shr
inc
xor
and
adc
insl
stos
popf
pop
sti
out
inc
das
lock
faddp
movntq
add
mov
jo
add
xor
sbb
add
or
icebp
xchg
pop
add
fucom
iret
mov
bound
movsl
ljmp
sti
jne
and
xor
rcl
ss
jo
jb
push
loope
or
dec
inc
mov
ror
jns
mov
dec
add
push
lahf
add
jecxz
leave
sbb
inc
lret
add
imul
push
in
ret
dec
fimull
cld
mov
xor
jmp
xor
rclb
sbbl
fcompl
lahf
test
nop
imul
ret
push
sahf
lret
add
aas
dec
sub
lock
setg
add
clc
sbb
sahf
push
stos
int3
or
lret
xchg
cwtl
test
cs
test
in
shl
ret
outsb
mov
enter
popf
loope
and
sub
out
paddq
ljmp
jno
enter
xor
xchg
nop
cmp
lret
not
lds
sub
in
jp
add
loope
incl
push
repnz
popa
mov
sti
mov
pop
mov
rcrb
notb
and
jno
into
dec
dec
sub
std
rcll
sub
mov
mov
sbb
loop
jb
jecxz
lret
test
cmp
mov
cld
in
stos
xchg
sbb
sbb
jp
test
test
mov
sti
in
ret
bound
mov
mov
xchg
jbe
ds
call
int
mov
dec
pop
cs
aaa
jmp
dec
neg
dec
inc
mov
pop
sub
mov
xor
cli
ljmp
scas
dec
or
mov
inc
and
iret
add
xor
nop
scas
add
ss
xor
cmp
pop
and
push
iret
mov
and
lcall
jae
pop
dec
xchg
cld
pop
mov
fnstsw
cmp
dec
inc
mov
cld
adc
aad
call
dec
dec
inc
cmp
aaa
sub
ret
out
out
inc
jno
cmp
mov
sbb
mov
repz
xor
daa
cmp
jno
dec
sbb
mov
cmc
xor
je
push
cwtl
test
mov
repz
icebp
dec
mov
pop
jl
test
and
out
shrl
jbe
sbb
mov
pop
pop
cli
dec
sub
out
adc
adc
in
das
fistps
mov
cmc
adc
mov
leave
adc
jle
lcall
push
mov
mov
inc
pushf
adc
jnp
rcl
add
subb
add
ret
insb
test
pop
in
push
cmc
orb
js
gs
lods
inc
in
fwait
xor
fmul
add
ss
lods
test
sysret
mov
lods
push
scas
xchg
or
mov
lret
push
andb
faddp
cwtl
mov
push
stc
xor
push
sti
xchg
add
rcrl
cmpb
in
dec
pushf
jo
inc
iret
mov
in
pop
fs
or
inc
jo
push
dec
daa
out
int
call
xchg
repnz
xchg
push
adc
cmp
xchg
cli
cmp
push
or
cwtl
in
jmp
sarb
cli
mov
imul
xor
mov
sub
adc
loop
cmpsl
and
jae
adc
pop
sub
add
and
pop
leave
or
mov
inc
push
repz
int3
daa
push
clc
imul
jp
shrl
add
sbb
loopne
pop
loopne
cltd
jbe
les
dec
int
pop
shl
out
filds
dec
imul
repnz
cmp
or
ja
das
xor
pop
mov
in
jno
jbe
mov
dec
ret
or
inc
xor
stc
pusha
push
sbb
int3
or
jno
fs
cmc
testl
fildl
xchg
jns
adc
popf
sbb
mov
mov
rolb
call
push
mov
test
insl
ficomps
daa
xor
idivb
cmp
and
mov
cmp
mov
cmc
arpl
xor
lock
and
pop
sub
ja
or
and
inc
daa
popf
xor
outsl
cs
andw
sub
jnp
rolb
mov
jns
mov
pop
movsl
adc
and
dec
cmp
and
gs
rcll
data16
cltd
insb
xor
out
jne
xchg
jbe
data16
out
lcall
or
test
outsl
mov
push
lods
push
fisubl
daa
pop
mov
mov
xchg
hlt
pusha
pop
fistl
ss
adc
push
add
loop
push
dec
cmpsb
in
adc
jae
hlt
fwait
adc
inc
popa
and
and
inc
push
int
fmul
jl
mov
adc
int
je
xlat
inc
and
idiv
les
and
cmp
faddl
cmp
sbb
call
mov
mov
arpl
stc
rcrl
imul
mov
mov
mov
cmp
fbstp
mov
cmpsl
cmp
jo
stc
shlb
xchg
mov
sub
cmp
ret
inc
jle
aaa
and
shll
cmp
xchg
rcrb
jle
inc
jb
shll
push
fwait
cli
adc
xchg
mov
jno
push
aam
mov
fstl
jne
xlat
push
lods
lcall
and
add
fcomi
xor
imul
sti
push
in
ret
out
out
cmpsl
add
or
jae
adc
mov
sbb
aam
sbb
sbb
or
lods
xor
sbb
push
popa
pop
arpl
xchg
sub
mov
aas
cmc
imul
adc
shll
mov
test
stos
js
add
fiadds
icebp
xlat
out
xchg
test
jo
int
lods
xor
sub
dec
aam
xchg
call
jmp
sub
sahf
inc
out
mov
scas
jmp
sbb
aas
cmp
dec
stos
or
mov
mov
mov
mov
aaa
mov
lcall
sub
mov
cmpsl
and
aaa
inc
cmp
mov
stc
test
inc
pop
jge,pt
leave
les
pop
mov
push
ljmp
adc
popf
sbb
and
xor
sahf
xor
cmpsl
pop
cmp
mov
pusha
xchg
cmp
es
dec
sbb
cmpb
arpl
shlb
xor
stc
clc
cmc
pop
push
cmp
das
cld
pop
div
jno
std
clc
gs
add
push
push
inc
or
sub
inc
mov
adc
imul
or
mov
rcrl
rolb
xchg
xchg
pushf
pop
hlt
imull
adc
push
jecxz
ret
adc
cli
xchg
adc
dec
aas
test
cltd
sbb
cmp
jnp
push
lahf
std
and
mov
dec
enter
mov
or
bound
xchg
pushf
xorb
pusha
sbb
or
in
mov
xchg
sti
call
hlt
jmp
jae
jge
movsl
in
mov
outsb
movsb
js
jnp
int3
ja
jne
push
das
pop
add
jg
cmpsb
sub
jbe
dec
subb
cmp
negb
idivb
mov
dec
push
mov
mov
sub
push
fldl2e
xchg
mov
inc
inc
push
shll
fs
inc
pop
and
lods
and
cmp
push
sbb
mov
mov
cli
mov
jno
shrl
dec
pushf
flds
adc
adc
cmpsl
movsb
mov
mov
xchg
push
cmp
fiadds
fistl
dec
xor
sbbb
clc
or
sub
dec
outsb
dec
xchg
nop
mov
cmp
mov
sar
test
shrd
sub
cwtl
sub
mov
push
mov
sbb
ret
lock
adc
jo
sbb
push
test
out
mov
aaa
int3
lcall
lret
scas
fstpl
inc
enter
add
inc
out
jne
hlt
push
jbe
sbb
jmp
or
add
jbe
and
cmp
jno
and
das
cmova
cmp
lret
jno
fldcw
jle
and
fisubrs
movsb
pop
add
les
in
bound
jo
ret
pop
or
xor
inc
outsl
outsb
cmp
cmpsl
loope
jg
jb
scas
jle
sahf
jns
mov
jg,pt
ficoml
aaa
clc
push
rorb
adc
sahf
cmpsl
lea
dec
inc
in
fstpt
inc
mov
xor
nop
and
aad
fidivrl
sarl
jg
inc
mov
sub
and
shl
push
addr16
cmpsl
loope
jae
aaa
jecxz
fdivs
dec
sub
cwtl
dec
dec
sbb
push
push
jno
insl
es
xor
ret
push
pop
int3
cmp
mov
sub
cmp
adc
fstl
sub
divb
jb
xchg
shrb
adc
icebp
xchg
or
ret
adc
jle
xchg
and
imul
mov
sbb
and
push
sub
pop
xor
adc
xlat
mov
ljmp
je
xchg
pop
insb
pop
out
sub
lea
or
mov
movsb
je
push
sub
pop
inc
lret
xchg
and
pop
lahf
jg
fs
test
pop
nop
xchg
or
xchg
xchg
fimull
push
xchg
aaa
lcall
in
std
jge
fiadds
stos
hlt
sbb
sub
clc
xor
xchg
adc
jl
je
add
and
mov
and
push
arpl
cmp
or
lahf
sub
jnp
sarl
int3
arpl
daa
push
xor
adc
pop
mov
add
lcall
jno
xor
scas
inc
mov
mov
or
mov
sbb
xor
shl
call
mov
xchg
cmp
mov
std
mov
out
sub
xlat
xor
fwait
enter
jae
decl
jmp
mov
jae
add
mov
jmp
pushf
dec
dec
add
add
int3
mov
je
xchg
into
test
dec
xrelease
cmp
adc
push
idiv
dec
xchg
test
loope
mov
aam
mov
subb
lret
xor
inc
pushf
in
push
push
adc
sub
jge
in
inc
add
daa
fs
dec
mov
add
cli
push
mov
sbb
frstor
jmp
xchg
xor
sub
lods
jmp
in
in
in
inc
mov
push
stc
add
bnd
enter
mov
dec
rcrl
fidivrl
repz
xchg
lcall
movsl
insb
mov
sti
shrb
fcomps
mov
xor
sti
cmp
cmp
cli
push
cs
push
shr
aaa
fists
lock
jbe
sbb
shr
lock
arpl
mov
xor
sub
or
sarl
pop
pushf
out
add
in
int3
ret
stc
nop
cld
pop
or
pop
fbld
xchg
jo
loopne
xchg
stos
mov
loope
es
scas
xorb
ret
mov
and
push
sbb
fisttpll
fldenv
sbb
movsb
jne
arpl
fs
pop
cmpsb
pop
stos
jae
add
sub
add
jae
sub
jns
int3
fadd
or
sbb
dec
jle
push
pop
ret
out
addb
adc
push
rclb
cmp
dec
rcll
sahf
out
jmp
add
xchg
jno
mov
add
inc
lret
fisttpll
and
shufps
push
fidivrs
pop
ljmp
or
mov
in
aad
call
xor
in
sbb
cs
pop
add
mov
out
jae
jno
movsl
bound
add
arpl
adc
lods
mov
cli
sbb
pop
setl
aam
adc
add
jl
ret
pop
inc
sarl
sbb
fistpl
sub
ret
jg
cmp
push
clc
or
pop
adc
mov
jp
shlb
rorl
icebp
xchg
mov
fldt
rcl
cmpb
lcall
leave
aaa
insl
add
popa
arpl
shl
stos
shlb
fwait
and
repz
xor
iret
test
lahf
and
rcrl
mov
or
inc
movb
or
fnstenv
pop
in
fs
inc
and
jg
sub
in
testb
sub
mov
sub
jbe
dec
jno
leave
inc
lds
fwait
icebp
iret
push
xchg
outsb
aas
lods
aas
rcrl
xor
jns
pop
xchg
int
rclb
sbb
out
fcoms
adc
call
push
in
pop
add
dec
sbb
mov
cld
dec
pushf
pushf
inc
mov
imul
enter
mov
mov
test
inc
sub
popf
sahf
leave
xlat
xchg
test
loopne
out
mov
mov
push
insl
xor
jnp
sbb
or
pop
inc
push
popf
mov
imull
cmp
nop
ljmp
or
dec
fildll
mov
xor
shl
mov
pop
jl
pop
mov
sbb
xchg
dec
push
mov
mov
lods
loop
pushf
je
test
mov
rcl
imul
in
lcall
loope
lods
movsl
js
gs
cwtl
data16
jp
repz
pusha
sahf
test
cs
aam
xor
add
add
add
pop
and
sbb
push
jmp
lods
adc
or
lock
mov
add
sub
or
and
xor
sub
jb
icebp
mov
jns
inc
out
je
pop
fimuls
pop
add
mov
sub
lods
fcoml
xorl
mov
notb
cmc
scas
adc
shlb
xchg
jnp,pn
push
inc
iret
sub
clc
stc
dec
jb
cmp
lock
xor
mov
bound
pop
leave
out
nop
les
dec
es
rclb
push
lods
ljmp
ret
push
aam
insb
faddl
ljmp
xchg
mov
mov
cld
adc
jecxz
xorb
push
lcall
push
fidivrl
add
loop
lods
pop
dec
xchg
enter
jecxz
in
rorb
loope
push
aam
xchg
ja
daa
repnz
or
fidivs
arpl
subl
mov
cmpsb
cmc
jns
add
xor
fwait
sub
cld
pop
add
popa
popf
cli
arpl
divl
inc
sub
dec
push
mov
pop
mov
dec
ja
roll
inc
push
scas
imul
loopne
repz
or
inc
scas
repnz
scas
loopne
pusha
inc
xchg
loopne
mov
cmp
repz
les
lret
test
mov
cwtl
fsubr
insb
test
jecxz
and
into
mov
inc
sub
gs
lahf
and
fimull
add
ss
dec
and
mov
add
gs
push
sti
cmp
or
jno
out
xlat
xor
out
call
mov
inc
enter
push
lods
ret
loope
pop
jmp
add
adc
ljmp
outsl
add
pop
and
add
ficoms
in
stos
sahf
pop
xchg
dec
inc
inc
adc
inc
lahf
in
div
mov
test
div
popa
and
gs
loopne
mov
push
imul
push
mov
inc
repz
pop
test
leave
insb
sbb
mov
les
adc
sub
stc
add
mov
or
out
in
jge
lret
fstl
push
or
mov
lcall
add
insb
lock
sub
add
sub
xchg
adc
xchg
cmp
iret
sub
jne
gs
and
notl
sub
sbb
add
outsl
add
inc
pop
daa
push
loopne
push
adc
lret
xor
mov
adc
mov
dec
lea
xor
aaa
cmp
fisttps
lret
cmp
push
out
cmp
adc
dec
es
mov
aam
xchg
sbb
addr16
mov
inc
testb
into
sti
mov
or
dec
test
mov
hlt
arpl
xor
xor
cmpsl
pusha
push
fs
sbb
ret
push
in
push
sbb
cmc
lahf
repz
arpl
out
jno
cmp
je
inc
sub
and
out
popa
xchg
test
sti
mov
dec
push
inc
xor
jp
stos
out
add
adc
int3
sarl
sbb
mov
fs
imull
pusha
in
push
outsb
in
xor
jae
adc
mov
ss
idivw
adc
dec
xchg
into
xchg
add
out
dec
lea
adc
inc
mov
fbld
push
sbb
adc
or
loopne
push
aas
push
add
fidivs
shll
add
cmp
cmp
mov
push
je
mov
mov
mov
adc
lods
mov
les
mov
rep
jmp
mov
jne
mov
sarl
stos
jp
popa
xor
fldl
xor
mov
jle
andb
pop
les
mov
dec
adc
icebp
cwtl
push
out
mov
daa
jmp
xchg
adc
xchg
lods
xchg
jge
stc
rcll
pop
cli
js
sbb
test
stos
push
pop
xchg
push
mov
sbb
stc
or
or
dec
or
pop
jmp
shll
dec
loop
notb
dec
sub
inc
mov
inc
mov
out
mov
adc
lahf
jb
push
rorl
push
jmp
dec
cmp
cld
cmpsl
or
push
cmc
push
fbld
in
pop
mov
insb
jg
push
in
pop
cmc
dec
mov
aam
shll
leave
cmp
pop
xchg
jmp
fsubrs
test
jecxz
jp
push
into
xlat
sbb
and
inc
cs
sbb
data16
or
or
sub
mov
mov
and
ret
sbb
fmuls
out
push
mov
jecxz
sbb
int3
xor
jp
adc
lock
and
repnz
push
mov
outsl
jno
inc
push
icebp
mov
insb
sbb
imul
push
cmp
out
push
ret
pushf
popl
push
cmp
aam
push
xor
and
test
sbb
lds
call
loope
push
jge
sbb
inc
mov
sbb
int3
imul
sahf
and
outsl
cmp
cmpsb
inc
inc
bound
aam
lret
inc
xor
and
andl
in
out
insb
les
stos
daa
mov
test
ficoml
mov
enter
cmc
xchg
fnsave
pop
jg
mov
shlb
push
cwtl
dec
push
pop
shlb
or
or
cwtl
xor
push
mov
or
pop
cmp
out
jg
pop
adc
lret
push
test
nop
cwtl
jnp
nop
call
aaa
push
sbb
test
lret
sub
dec
hlt
enter
sub
cmp
push
add
ja
xor
jge
into
cmpsl
or
cltd
jl
loopnew
jl
ret
jg
pusha
scas
mov
xchg
loopne
and
insb
pop
test
sbb
mov
or
mov
scas
jecxz
push
scas
mov
lret
push
dec
sbb
mov
ret
jno
aaa
jo
mov
out
mov
cs
push
shr
dec
jno
cmp
xchg
je
inc
in
bound
jbe
movsl
mov
pop
daa
cmp
push
popf
push
mov
aam
mov
pop
xchg
dec
xchg
lds
dec
int3
es
dec
pop
adc
xor
sbb
ficoml
xchg
push
out
dec
sbb
cmpsb
in
cmpsb
daa
xchg
push
cmp
mov
icebp
cmp
add
adc
push
sub
mov
pop
repnz
inc
mov
fldt
sub
std
xchg
push
shlb
jmp
sti
xor
xchg
psubq
fwait
or
jne
fstl
xor
mov
xor
or
jbe
add
mov
and
and
jmp
adcb
dec
out
lods
int3
stos
adc
arpl
push
add
getsec
test
cmpsl
or
dec
pop
cli
push
mov
push
pop
or
fcoml
xor
aas
xor
inc
sub
cmp
lods
int3
sub
dec
adc
int
mov
mov
push
or
scas
push
aad
and
bound
dec
jg
and
rcr
push
mov
into
clc
int3
xchg
bnd
cmp
out
dec
push
cmp
pusha
sti
aad
add
sbbb
unpckhps
inc
push
fsubs
add
dec
imulb
xbegin
xor
xor
mov
outsb
rolb
pop
inc
pop
sbb
es
js
lret
in
fcmovbe
ja
je
mov
xlat
test
fistpll
sbb
mov
shrb
popa
divb
aaa
add
movsl
mov
sbb
mov
rcll
cmp
dec
inc
adc
dec
add
test
add
mov
adc
pop
or
mov
pop
cmp
fidivrl
ljmp
cmp
xchg
je
pop
inc
jns
inc
movsl
xchg
test
add
fistl
lret
out
dec
xor
mov
aam
dec
xor
jle
daa
test
xchg
sub
divl
fsubrl
out
iret
pop
jmp
and
shl
dec
push
js
aaa
pop
push
push
mov
imul
stos
pop
pop
inc
scas
mov
fs
addr16
scas
xor
xchg
pop
pushf
repz
jae
push
pop
cmp
loop
jnp
mov
sahf
cmp
pusha
icebp
sbbl
sub
je
scas
fs
push
mov
push
fldenv
clc
mov
flds
inc
xchg
rcrb
xchg
sbb
das
mov
jno
mov
xchg
lahf
pushf
test
xor
jne
sbb
popa
xchg
xchg
subl
dec
mov
add
stos
xor
or
outsl
xchg
iret
lods
movq
popf
inc
jno
mov
sub
mov
add
int
add
scas
gs
xchg
jo
pop
push
jp
inc
push
xchg
pusha
fs
mov
dec
mov
js
push
or
dec
mov
add
jg
and
jmp
jmp
pop
imul
out
pop
lcall
daa
adc
sti
das
xor
sub
and
mov
or
cmp
jo
icebp
adcl
dec
in
mov
mov
dec
hlt
sbb
push
cwtl
repnz
mov
pop
sbb
stos
testl
fsin
dec
lret
hlt
push
stos
push
lahf
or
mov
arpl
divl
xchg
xor
push
push
xchg
adc
test
adc
sbb
lret
and
mov
iret
xchg
mov
pusha
mov
dec
or
cwtl
or
pop
push
gs
sbb
scas
xchg
jecxz
aaa
dec
inc
pop
and
push
mov
popf
pop
lods
dec
ds
pop
dec
lret
rol
jle
loopne
ret
xchg
movsl
lods
jge
sahf
addr16
das
iret
lea
leave
test
mov
push
and
mov
jbe
fiadds
out
std
xor
xchg
loopne
lds
and
cltd
outsb
std
sti
mov
roll
mov
sbb
xorl
sub
jnp
push
test
es
addl
mov
sbb
pop
popa
push
fstpt
cmpsb
cs
sbb
imul
fistps
dec
adc
mov
movsb
or
push
mov
in
andl
sbb
push
dec
push
es
dec
jae
sbb
es
inc
or
sub
push
rorl
nop
je
rolb
nop
add
sub
sub
insb
mov
sbb
and
in
lcall
ljmp
lock
sub
testb
hlt
jp
sub
cmp
ficomps
ljmp
or
or
hlt
jp
pop
cmp
push
sbb
jmp
test
xor
and
repnz
je
sahf
jg
test
std
pop
mov
push
movb
jge
xchg
fidivl
int3
jecxz
mov
lock
and
scas
mov
test
jge
pusha
adc
fimuls
pop
mov
cwtl
cmp
mov
cmp
xor
shlb
add
jmp
push
push
mov
adc
and
fcomps
xlat
iret
and
ret
imul
sbb
cmp
adc
or
dec
inc
sbb
sbb
ds
mov
push
mov
std
aaa
hlt
int3
ljmp
mov
arpl
lea
mov
jae
mov
ds
adc
addr16
das
pop
mov
repz
vpackssdw
mov
in
les
xor
test
adc
les
push
xor
std
cld
leave
sub
rclb
bound
les
add
arpl
shr
rorb
sbb
and
lock
pop
stos
or
fstpl
push
insl
jne
call
pusha
mov
sbbb
or
cwtl
sarb
push
sbb
das
sub
jmp
daa
aaa
xchg
and
xor
fdivrl
adc
adc
sbb
gs
fistl
in
jne
int3
imul
fisttpll
mov
mov
jae
out
push
movsb
and
pop
dec
sbb
add
mov
sbb
and
shlb
sahf
dec
mov
inc
dec
in
jns
jp
out
mov
std
inc
fimull
andb
xchg
push
mov
fsubs
add
or
fidivrl
stc
inc
test
or
aam
sub
mov
cmpb
cmp
out
sub
xor
jg
pushf
sbb
mov
jge
scas
mov
aad
iret
mov
or
lret
fcmovnu
je
icebp
push
cwtl
push
cld
in
ljmp
inc
lds
cmc
clc
pop
and
stos
popa
loop
ret
inc
jno
inc
jb
xor
repz
or
js
cmp
jmp
or
cmpsb
add
das
and
fimuls
pusha
sub
xor
push
jo
ljmp
mov
ret
cmp
dec
push
in
mov
mov
pop
jne
pop
fld
xchg
mov
arpl
aaa
pusha
ja
movsl
data16
jg
cmp
pop
jmp
out
add
xchg
fsubs
das
lcall
daa
adc
inc
sbbb
imul
pop
loope
clc
js
xlat
pop
cmpsb
out
repnz
xor
mov
sbbb
sub
imul
mov
dec
iret
cmp
sti
cmp
data16
xchg
mov
xchg
xchg
jns
mov
push
cmpsl
add
insb
fwait
xlat
icebp
pop
and
out
push
xor
push
xlat
cmp
mov
shlb
hlt
lods
repz
xchg
addb
aad
cli
jle
xchg
cld
clc
adc
inc
mov
cli
pop
pmullw
inc
scas
xchg
in
jae
and
inc
sub
insl
pop
orb
idiv
sti
mov
sbb
sahf
fdivrl
notl
inc
std
mov
dec
lret
pushf
cmpsb
subl
adc
sub
es
loope
mov
loop
ja
out
jg
lds
adc
pop
dec
fistps
in
lret
and
sub
fdivrl
cli
cmpsl
scas
add
push
aaa
js
inc
push
jl
out
xchg
in
insl
in
cmp
sub
in
into
xor
outsl
popa
sahf
cmpsl
or
stos
pop
push
dec
sarl
sbb
cmpb
enter
adc
and
sti
in
pop
pop
rorb
std
sub
pop
daa
cmp
jg
mov
je
mov
mov
ljmp
adc
fadds
sbb
arpl
inc
les
outsb
push
stos
sbb
vpmaxsw
push
stc
adcl
xchg
lods
insl
cmpsl
lea
fimuls
push
cmpsb
add
jo
pop
mov
or
mov
imul
cmp
pop
dec
sti
mov
push
dec
mov
dec
loope
mov
insl
call
data16
aam
int
xchg
jp
adc
mov
mov
jg
sub
testl
icebp
das
and
inc
mov
notb
fdiv
pop
test
xchg
and
mov
lock
mov
stos
mov
jp
inc
fdivl
loop
movsb
sbb
dec
lea
push
xchg
pushf
jns
mov
jae
add
push
and
and
scas
add
adc
sub
sub
mov
mov
pop
jns
cmp
xchg
ljmp
and
fdivrl
xchg
int
mov
lahf
jle
lret
xor
mov
pushf
cli
leave
add
inc
xchg
idiv
push
xchg
out
mov
ja
nop
dec
loopne
pop
cld
je
xchg
shl
fstps
push
sub
jbe
in
xchg
xor
adc
sub
cmp
out
cmc
mov
jge
cmp
dec
jp
cli
repnz
sbb
js
add
jb
lods
xchg
fwait
shll
fmuls
vpsubb
sbb
arpl
sub
mov
insb
and
pushf
in
sbb
outsb
outsb
je
pushl
and
adc
or
ret
push
scas
xor
cmp
ljmp
jmp
inc
mov
cmpsb
shl
mov
xor
and
rcrb
xchg
lret
iret
in
hlt
sub
mov
fmuls
cld
popf
in
mov
sub
xchg
xor
mov
data16
cmpsb
jo
xor
sub
lcall
testl
jmp
xor
cmp
fstps
jno
cmpsb
push
xchg
xchg
daa
sbb
and
test
mov
int3
pop
and
dec
les
push
aaa
sbb
mov
push
sub
jns
inc
mov
xchg
inc
scas
stc
es
xor
test
fsub
movsl
cmp
jg
mov
test
mov
adc
mov
jg
repz
and
mov
inc
add
mov
lea
not
mov
inc
sub
aam
lods
cmpsl
add
mov
push
aad
ret
imul
mov
or
icebp
pop
xchg
xchg
sub
xor
lret
add
aas
mov
pop
push
xchg
sbb
mov
sbb
xlat
fwait
add
lods
iret
shlb
ljmp
cltd
and
pop
dec
cmp
lahf
pop
ret
inc
xchg
ret
add
xlat
cmovg
jge
je
subb
fdiv
imul
mov
inc
ljmp
movsl
xor
jge
ficoml
push
mov
push
int
push
cmp
cltd
adc
js
adc
fcomip
or
xor
mov
jnp
js
enter
mov
cmc
test
mov
imul
jo
lods
push
lret
sti
sti
arpl
dec
mov
aas
fwait
test
push
mov
out
popa
inc
pop
lds
jp
shlb
xchg
cmpsb
mov
pusha
mov
out
dec
inc
cmp
les
mov
fldl
hlt
jmp
movsl
or
push
mov
inc
js
sub
add
scas
and
xchg
push
jbe
lret
aaa
jge
stc
adc
outsl
jge
mov
jnp
in
rorb
push
bnd
bound
sub
dec
in
loopne
mov
enter
fwait
or
cld
sbb
int
insl
test
outsl
mov
cmc
xchg
ljmp
mov
out
cmp
test
xor
push
jge
jmp
sub
adc
push
movlps
jb
jl
mov
sbb
out
sbb
pushf
cwtl
jb
cs
sub
repz
daa
lret
push
fdivs
mov
test
xchg
mov
into
imul
ljmp
xchg
xor
inc
dec
adc
sahf
int
scas
cmc
mov
sbb
hlt
xor
push
jmp
xchg
stc
inc
pop
xchg
fildll
jecxz
mov
cmp
sub
xor
xchg
fstps
sub
pop
fidivs
jae
lds
mov
std
scas
ja
stos
or
mov
lds
ret
iret
xchg
or
or
ret
pushf
cmp
and
daa
repz
jo
and
push
xchg
xchg
divl
sub
ret
inc
xlat
xor
mov
test
cmc
ds
jbe
xchg
mov
pop
push
push
pusha
or
lahf
dec
sub
cmp
movb
loopne
inc
int3
mov
int
popf
push
mov
mov
lock
lret
or
or
loopne
pop
adc
outsb
sar
bound
fnstcw
bound
ret
scas
push
and
int
lods
sarl
adc
lock
dec
sbb
fs
push
jmp
pmulhuw
inc
popf
outsl
cs
inc
push
andb
in
sub
out
or
ret
xchg
dec
cmp
and
pop
pop
loopne
add
mov
push
loope
negb
aas
or
shrb
push
rorb
add
cmp
ja
or
or
push
mov
out
inc
aam
mov
adcl
add
popa
ret
out
xor
ss
jmp
sarl
ss
jecxz
mov
inc
roll
adc
nop
mov
push
pushf
pop
ret
repnz
jle
test
mov
loopne,pt
add
mov
ja
les
cs
ljmp
mov
sub
inc
xchg
js
std
out
push
add
fbstp
movsl
stc
cs
mov
mov
sub
sbb
sub
outsb
xor
scas
fwait
mov
cli
shrb
inc
rclb
lcall
jae
idivl
push
cmc
pushf
out
mov
pop
mov
lods
in
aam
lock
lds
mov
gs
in
sbb
dec
jno
jae
divl
in
mov
pop
cltd
popa
cmp
or
adc
js
ret
push
lea
mov
loope
loope
repnz
sbb
stos
cld
add
pop
aam
scas
je
int
push
inc
lcall
mov
xor
push
jns
lea
cmp
mov
rorl
scas
jmp
push
popa
xlat
pop
push
or
pop
mov
movsl
iret
xchg
popa
fbstp
outsb
push
push
pop
mov
xchg
leave
sbb
mov
pop
popa
inc
in
insl
gs
cmpsl
jns
xor
les
push
lea
daa
sbb
cld
clc
shr
scas
in
cmp
test
out
ror
sbb
rcr
xor
add
js
fsubl
xchg
popf
xor
sub
push
jecxz
adc
push
add
fwait
lds
push
cli
xchg
adc
int
stos
xor
and
xor
cmp
cmpsb
loope
pop
es
aaa
mov
popa
mov
imul
xchg
adc
jge
aaa
int
aad
test
jl
or
jnp
and
dec
gs
dec
adc
ljmp
movsl
iret
push
push
mov
lret
sub
cmp
lahf
test
mov
movsb
mov
or
jae
pop
sbb
or
push
push
jno
ret
jle
cmpsl
stos
out
js
ljmp
data16
lods
and
arpl
mov
cmp
xor
es
es
adc
mov
or
add
xor
jge
sub
std
pop
rcr
adc
push
dec
gs
roll
fisubrs
out
test
cli
lods
cmp
cmp
push
jmp
test
inc
dec
movsb
push
dec
mov
fcompl
rcll
and
hlt
jg
imul
jmp
imulb
or
sahf
pop
push
stc
mov
enter
or
arpl
iret
mov
dec
jae
mov
jo
jmp
faddl
fidivs
inc
je
mov
cwtl
fs
negb
sub
les
mov
xor
jnp
jmp
sub
xchg
inc
or
mov
test
jb
xor
movsb
lea
out
pushf
mov
dec
mov
stc
stos
and
xchg
sbbb
sub
outsl
js
dec
fmull
ror
inc
ret
jge
cmpsl
mov
movsb
ret
int3
jl
dec
sbb
dec
lcall
mov
dec
pop
shrl
in
lret
out
enter
push
lock
and
jle
pop
push
mov
les
in
cld
push
divl
bound
test
roll
iret
jnp
jg
shr
sar
repz
or
inc
movsl
dec
jecxz
into
mov
mov
and
shll
data16
add
and
cld
cld
add
pop
addb
lret
cmp
cmp
es
fcompl
pop
scas
ja
std
stos
lock
shr
cmpsl
xor
int3
adc
test
jae
rcrl
dec
lods
insl
mov
out
add
neg
sbbl
test
jmp
pop
adc
hlt
push
mov
and
mov
or
push
sub
call
enter
movsb
cli
inc
cmp
jp
orb
inc
mov
sahf
adc
xor
mov
mov
jb
aaa
outsb
xlat
mov
lods
aaa
lahf
std
sbb
adc
test
mov
xchg
xchg
pop
movsb
sbb
sbb
push
push
int
mov
es
and
push
nop
add
sarb
enter
and
fidivrl
or
mov
push
cltd
push
push
xorb
int
adc
hlt
cmp
pop
repnz
ja
dec
sarb
imul
push
or
inc
jnp
jmp
or
mov
test
add
fs
push
cli
clc
aas
aad
or
iret
cmovns
dec
mov
dec
sub
je
loope
mov
mov
pushf
sbb
mov
adc
mov
inc
in
movsb
call
sub
lea
push
out
xor
mov
cmc
nop
std
lods
xchg
das
adc
stc
popa
cmp
cmp
mov
jle
inc
push
jl
out
js
dec
adcl
dec
dec
sub
cld
jno
sbb
adcb
xchg
sbb
shl
mov
subl
sub
out
inc
inc
mov
or
push
sbb
mov
adc
mov
ret
lret
lahf
enter
movsl
shlb
xchg
fldenv
arpl
mov
mov
push
jb
sub
or
jge
cmp
sub
cmp
add
dec
mov
decb
ficomps
and
testl
rorb
arpl
rcr
jecxz
push
js
test
push
out
dec
push
mov
mov
push
fprem1
pop
lret
ds
lahf
fcmovnbe
jle
cmp
mov
into
aam
addr16
and
add
jno
push
mov
add
jb
imul
cmp
sbb
add
ret
out
ljmp
mov
jns
xor
or
jmp
pop
xor
dec
xor
int
fisubrs
inc
or
fsubrp
mov
sarl
int3
xchg
repz
iret
insb
lods
outsl
pop
rolb
lret
mov
xchg
jae
daa
pop
fisubl
insb
fidivs
cmp
fstp
lcall
stos
sahf
in
dec
xlat
imul
movsl
jo
imul
fidivrl
xchg
mov
jb
jge
adc
jno
ds
fs
sbb
pop
inc
out
add
add
sub
and
sbb
or
fldt
imul
negb
add
fnstenv
repz
push
mov
in
mov
xor
jbe
push
mov
or
xchg
sub
pop
cmpsl
jb
sahf
sub
es
xchg
push
push
mov
sbb
out
out
in
adc
in
js
into
fcoms
mov
andl
jle
out
sub
and
push
roll
xor
push
jl
pop
cwtl
hlt
imul
arpl
shl
fistl
jp
push
fwait
sub
or
imul
ret
mov
and
push
stc
xchg
pop
pop
call
rcl
fstpt
pop
js
inc
adc
push
cmpsl
dec
xor
cmpb
cwtl
pxor
or
sub
xorl
add
into
std
cmovno
push
dec
jle
aam
jle
jns
cmpl
bound
sbbl
sbb
push
data16
dec
rclb
add
and
sbbb
xorps
sbbl
out
cmp
push
mov
rcrb
jmp
fwait
es
loop
or
jo
sub
cs
jle
in
aam
ror
or
lcall
xor
pop
jnp
loope
sbb
decb
mov
scas
jb
xchg
mov
ja
mov
ss
mov
fxch
push
loop
xchg
mov
xchg
or
mov
loop
xchg
push
add
sub
rcr
in
movsb
test
loop
mov
push
aaa
pushf
fists
mov
orb
inc
lcall
and
cli
out
cmp
addr16
aam
adc
jecxz
test
adc
loop
xor
fcmove
xchg
push
push
pop
cmp
mov
outsb
or
sub
or
ret
jmp
ljmp
adc
dec
in
fldenv
je
outsb
icebp
inc
push
lods
jnp
cmp
test
rcrl
add
xchg
fs
stc
xchg
mov
movb
sbb
cmp
dec
nop
or
push
sbb
movaps
out
scas
sbb
fildl
mov
gs
mov
in
rcl
mov
ss
loop
mov
sub
pop
jne
xchg
or
or
mov
movsb
dec
sarb
mov
jmp
call
std
fidivl
hlt
das
inc
out
js,pn
jl
sub
jp
aas
popa
ret
or
jmp
in
ret
stos
xor
mov
xor
stc
sti
jo
dec
xor
loope
movsb
stc
mov
test
inc
enter
lahf
scas
sbb
or
sub
jge
add
addr16
test
mov
inc
shrl
inc
into
pop
cmpsb
push
jge
mov
lds
pop
add
fdivr
inc
mov
xor
leave
add
push
push
das
dec
sub
jg
jmp
test
mov
sti
sbb
loope
ss
xchg
int
data16
dec
sub
cmp
push
repnz
int3
adc
es
nop
mov
push
icebp
adc
shl
push
fimull
shrb
repnz
rorb
add
inc
pushf
cmp
sub
push
pop
and
xor
and
test
mov
xor
sbb
in
movsl
xchg
mov
jnp
ds
pop
adc
sub
decl
test
gs
into
in
sub
stos
push
push
je
xor
punpckhbw
jmp
lods
or
es
inc
ljmp
das
jo,pn
dec
sub
lea
ljmp
cmpsb
pop
test
add
in
add
cmp
xchg
jno
cmp
xchg
popa
xor
in
incb
inc
xlat
stos
repnz
sbb
clc
sbb
insb
pop
mov
pop
xchg
mov
icebp
je
imull
lret
sahf
movl
mov
inc
gs
pushf
arpl
xchg
sbb
mov
adc
pushf
lds
push
jp
inc
xchg
cmp
aaa
xchg
cmp
dec
rorl
cmp
sub
jo
sub
aaa
jg
loope
fcoms
mov
ret
repz
pop
dec
push
push
add
sbb
push
aaa
jle
or
mov
cmp
sbb
xor
lcall
push
sub
mov
adcl
popf
cltd
icebp
sbb
mov
bound
in
lahf
mov
pop
pop
pop
push
cmp
mov
xchg
ret
lods
xor
ret
xor
mov
xor
add
xor
ret
mov
cmp
xor
xlat
out
sub
jo
pusha
pop
or
fwait
mov
jmp
movsl
aas
xor
aam
jnp
xor
pusha
ljmp
divl
dec
aaa
cs
sbb
insl
xchg
loope
stos
jp
adc
dec
cmp
mov
int3
sti
clc
insb
rorb
pop
xor
mov
cld
xchg
lret
push
pop
push
pop
mov
inc
lods
popf
pusha
sahf
jp
push
out
add
or
scas
cltd
xor
psrad
hlt
out
fcomps
shl
sub
add
repnz
loope
mov
or
sti
pop
sub
adc
fucom
dec
dec
or
sub
push
fwait
cmp
jmp
cmp
scas
insb
fsubrs
sub
shrl
loop
or
sbb
loope
mov
inc
inc
pop
dec
shl
push
push
test
lcall
mov
sub
mov
dec
psllq
push
push
sbb
jle
div
test
je
insl
jne
xchg
mov
add
mov
idivb
xchg
jge
xchg
in
push
insb
imul
push
shll
mov
sbb
xchg
lret
lret
pop
es
pop
push
dec
or
aad
lock
sti
sub
xor
fs
push
cs
out
lcall
rcr
shr
adc
or
mov
clc
test
fs
or
out
jl
test
cmp
imul
and
add
fstpt
inc
cld
es
cs
push
pop
sub
and
or
fcmovbe
add
hlt
leave
sub
cmp
std
xchg
stos
mov
push
push
insb
movsl
inc
sbb
xchg
lds
shr
or
jae
out
dec
mov
mov
sbb
cltd
mov
repnz
lret
sbb
aas
mov
outsb
xchg
jbe
jp
lcall
pop
loop
lret
adc
ret
jg
cld
pop
jecxz
jbe
dec
shl
mov
push
dec
mov
and
test
cmpsb
mov
mov
cmc
inc
push
push
cmp
mov
incb
or
lds
mov
aad
pop
mov
xlat
in
cltd
fdecstp
fnstsw
aad
xlat
push
dec
sub
jmp
std
fistps
xor
jecxz
test
scas
mov
nop
mov
out
fimuls
push
out
xor
add
pop
aas
jge
lods
mov
and
cmc
pop
mov
aad
push
mov
inc
cmpsb
sub
cltd
xor
mov
sub
adc
jae
cmp
nop
stos
or
sbb
xor
add
mov
mov
sbb
pop
out
or
cwtl
sarb
jbe
inc
das
inc
fs
mov
cmp
sub
jle
fldl
test
jnp
arpl
dec
or
pop
pop
in
int
sbb
xor
jmp
cmc
out
fbld
push
subb
das
addb
push
xor
sub
push
add
mov
in
pop
gs
mov
mov
daa
out
and
stos
mov
mov
jb
scas
jg
cli
lcall
test
cld
fs
in
sti
xchg
xorl
jnp
cld
sub
and
ljmp
mov
inc
test
push
adc
sub
mov
xor
scas
pop
sub
cmpsl
mov
jmp
lcall
in
inc
pusha
push
jge
sbb
xchg
arpl
sbb
sbbl
xchg
stos
xor
lds
jl
mov
nop
sbb
mov
mov
rorb
jnp
fiaddl
inc
pop
jae
out
les
push
sbb
sub
mov
out
adc
sbb
aad
cmp
stos
int
movb
data16
scas
xchg
fadds
or
jmp
ret
jnp
mov
push
mov
bnd
data16
or
jp
cmpb
ror
sbb
test
test
int3
jecxz
adc
js
imul
jge
mov
in
adc
mov
fsubrs
mov
test
inc
shlb
pusha
push
popf
pop
or
insb
jb
outsl
jp
les
aas
daa
cmpsb
ds
jmp
cmp
add
dec
ficomps
jmp
mov
data16
les
sti
sar
mov
call
js
xchg
dec
push
imul
mov
jns
inc
inc
pop
sub
mov
push
xchg
xchg
cwtl
orl
pop
sub
subl
add
adc
xchg
push
jl
inc
adc
mov
dec
fwait
imul
stos
add
add
xchg
test
add
pop
mov
jmp
jge
pushf
mov
orl
inc
pushf
mov
fisubs
mov
divl
fists
xchg
push
orl
sub
popa
js
stos
orl
fcoml
icebp
push
stc
xlat
dec
mov
or
pushf
lods
xchg
xlat
xchg
nop
les
jne
mov
push
push
inc
inc
sahf
dec
pop
clc
push
and
add
xorb
imul
cmp
rcll
mov
aam
sub
bound
es
push
repz
cmpsb
cmc
inc
gs
pop
sub
repz
subl
push
inc
jg
push
hlt
inc
iret
xor
cmpb
enter
inc
into
push
dec
setae
mov
mov
das
test
lret
popw
or
scas
hlt
stc
mov
inc
clc
imul
aas
ljmp
hlt
lods
push
sar
and
cld
inc
mov
ja
rorb
out
add
pop
xchg
xor
sub
lahf
ja
loop
out
mov
arpl
in
inc
mov
mov
push
cmp
movsl
pop
aaa
inc
sub
repnz
and
rorl
add
xor
mov
xchg
pop
cli
lret
mov
enter
mov
add
stos
cmp
dec
sti
into
mov
roll
dec
ret
xor
add
outsb
std
sub
aad
aas
pop
cmp
sbb
sub
lret
test
mov
dec
jmp
sbb
xchg
notl
cli
mov
sbb
mov
or
sbb
mov
iret
aad
daa
push
inc
push
and
sub
outsl
inc
pop
repnz
por
sbb
sbb
mov
test
mov
pop
push
fs
dec
test
xchg
and
mov
push
cmpsb
mov
inc
loop
gs
mov
cmpsl
add
mov
cmpsl
lds
push
out
add
sti
xlat
push
and
rcrb
inc
pminub
out
or
xor
das
insl
lcall
pop
mov
leave
repnz
and
push
in
adc
jae
mov
aam
push
rorb
lcall
in
cli
mov
bound
in
dec
sub
lods
addb
rorb
lret
inc
push
ret
in
je
xorl
rolb
and
xor
add
rcl
into
fadds
leave
lret
popa
stos
jmp
inc
cmp
das
mov
lods
jge
loop
lret
mov
outsb
popf
mov
orb
mov
int3
jns
movsl
insl
add
jge
rorb
jle
adc
pop
lahf
xor
dec
mov
cli
cli
mov
iret
das
insl
lcall
fisubl
mov
xor
lret
pop
fisubl
or
mov
icebp
sbb
pop
insb
lea
dec
dec
in
test
cmpsb
jle
jnp
dec
sti
jmp
cmc
popa
test
sub
jle
mov
ficoml
cmp
test
push
push
sti
sub
mov
jbe
fstpt
out
mov
cmp
adc
dec
test
lret
jae
pop
or
addl
lods
lcall
stos
mov
dec
test
xchg
shll
and
dec
fildl
dec
mov
pop
outsb
in
dec
xor
sub
jge
sbb
xor
xchg
int3
dec
adc
dec
aad
xchg
mov
add
or
sbb
and
inc
aad
pushf
fstps
into
push
pop
je
jle
and
pop
push
or
inc
or
dec
cld
lods
popa
lret
sbb
fstl
cmc
outsb
loopne
pop
fmul
pop
lock
sbb
cmpsl
sbb
pop
sbb
jne
mov
mov
imul
test
lret
add
je
xlat
movsl
enter
fdecstp
mov
in
or
xlat
test
das
sub
testb
fistpl
jp
lods
xor
xchg
fstpt
adc
mov
lcall
dec
push
xor
das
mov
subb
xchg
shlb
xchg
shrl
in
push
jle
lret
sub
lahf
inc
xor
ja
rclb
jne
aam
fidivrs
sbb
or
fidivs
xchg
sub
cs
mov
jne
mov
add
lahf
jmp
mov
add
leave
cmp
les
cmp
or
movsl
js
push
cmp
cmp
mov
ljmp
cmp
outsl
and
cmc
mov
mov
pop
and
lods
sbb
cmp
xor
jo
push
push
dec
sub
inc
test
inc
test
mov
add
out
mov
jp
int
adc
cli
call
dec
mov
xchg
cwtl
icebp
mov
pop
testl
sbb
xchg
cmp
push
test
lds
add
dec
mov
std
rorb
push
mov
add
add
outsl
or
pop
inc
add
push
mov
pushf
sbb
mov
push
xchg
subb
lds
imulb
test
cs
fwait
and
inc
inc
popf
shrl
es
sarl
bound
lcall
push
int3
lea
add
insl
adc
sbb
sub
adc
sub
int
jmp
icebp
push
push
std
sbb
or
and
ret
dec
out
out
sysenter
dec
aas
pop
out
pop
mov
das
call
dec
pushl
in
mov
mov
dec
adc
cmp
ret
inc
jae
xlat
adc
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
lea
movzbl
movl
movb
mov
movl
mov
mov
mov
shl
mov
dec
mov
movzbl
movzbl
shl
dec
movzbl
mov
mov
movl
movl
mov
mov
movl
movl
movl
movl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
mov
movl
xor
add
mov
xor
cmp
je
movzbl
shl
inc
or
inc
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
movzbl
shll
inc
shl
or
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
movzbl
mov
mov
and
shl
mov
mov
sub
sar
add
mov
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
lea
mov
and
mov
cmpl
lea
lea
mov
ja
cmp
je
shl
movzbl
or
inc
shll
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
lea
sub
sub
mov
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
movzbl
shll
inc
shl
or
mov
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
shr
sub
mov
lea
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
sub
mov
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
shl
movzbl
or
shl
inc
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
sar
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
sub
mov
sub
mov
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
or
inc
shl
mov
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
mov
movl
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
shl
movzbl
or
inc
shl
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
mov
shr
sub
sub
sub
cmp
mov
ja
cmp
je
shl
movzbl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
or
inc
mov
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
inc
shl
shl
or
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
inc
shl
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
shll
lea
movl
mov
mov
lea
mov
movl
jmp
sub
mov
sub
mov
shr
sub
mov
movl
movl
add
mov
mov
mov
mov
mov
lea
add
cmpl
ja
cmp
je
shl
movzbl
shll
inc
or
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
lea
movl
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shl
movzbl
inc
or
shll
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
shl
mov
mov
add
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
movzbl
shll
inc
shl
or
shrl
add
cmp
jb
or
sub
dec
jne
shl
mov
mov
movl
add
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
movzbl
shl
shll
inc
or
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
inc
mov
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
add
mov
cmp
ja
mov
mov
sub
add
lea
mov
mov
incl
inc
mov
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
mov
mov
mov
mov
mov
xor
xor
add
pop
pop
pop
pop
add
lea
mov
add
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
xor
add
jo
add
mov
add
add
add
add
add
add
add
dec
add
addb
add
or
add
add
addb
mov
add
add
add
add
add
add
add
addb
add
add
add
sub
add
push
add
addb
add
js
add
add
add
or
add
add
add
inc
or
out
add
or
add
add
add
inc
or
inc
add
add
or
add
add
add
or
mov
add
or
add
add
adc
or
xor
add
or
add
add
dec
push
or
inc
add
add
or
add
push
or
inc
add
add
add
add
add
addb
add
lock
addb
add
add
addb
add
or
add
add
add
push
or
and
add
or
add
add
add
push
or
and
add
or
add
add
add
push
or
and
add
add
add
pop
add
addb
add
or
add
add
test
add
sub
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
repnz
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
popa
add
add
add
inc
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
jp
imul
inc
add
jo
and
dec
add
imul
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
and
xor
add
sub
add
add
je
add
outsb
add
insb
add
popa
add
add
add
insl
add
arpl
add
add
xchg
add
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
push
add
bound
and
inc
add
imul
dec
add
bound
and
push
add
add
insl
add
and
pop
add
jne
jae
imul
inc
add
imul
je
and
inc
add
jo
popa
add
add
data16
add
bound
and
dec
add
jne
add
add
jbe
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
test
add
add
add
add
imul
add
outsl
add
add
jo
outsl
add
imul
and
dec
add
add
and
inc
add
jne
insb
add
and
push
add
jo
outsl
add
outsl
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
or
shll
add
cmpsb
or
cmpsb
or
or
in
or
je
or
repnz
or
jl
or
jmp
or
or
or
mov
add
sbb
or
and
or
sub
cmpsb
or
cmp
or
inc
cmpsl
or
push
cmpsl
or
bound
or
andb
add
add
add
add
scas
cmpsl
or
add
add
mov
add
add
cmpsl
or
add
add
fsubs
add
lock
or
add
add
add
or
add
add
adc
or
add
add
push
test
add
add
add
test
add
add
add
test
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
insl
arpl
xor
fs
insb
add
push
imul
outsb
je
insb
insb
cs
insb
add
jae
jo
xor
cs
insb
add
jae
je
insb
jae
fs
insb
add
je
jo
jo
cs
insb
add
gs
insb
xor
cs
insb
add
gs
xor
fs
insb
add
outsb
insl
insl
cs
insb
add
outsb
jae
popa
cs
insb
add
jae
jo
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
jb
ja
je
je
jae
gs
inc
add
add
je
jo
gs
popa
bound
add
dec
je
jb
je
inc
imul
jae
popa
outsb
addr16
jo
add
push
gs
je
insb
inc
gs
imul
insb
jne
add
add
je
jo
jo
outsb
dec
outsb
inc
imul
push
js
arpl
gs
add
add
fs
popa
jae
add
add
imul
add
add
outsb
push
je
je
outsl
outsb
inc
outsl
outsb
outsb
arpl
add
push
dec
jo
outsb
push
gs
gs
