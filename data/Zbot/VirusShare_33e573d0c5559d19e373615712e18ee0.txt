call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
pop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
xor
mov
mov
pusha
call
add
call
in
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
jmp
ret
std
sub
mov
cld
add
mov
mov
shl
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
mov
popf
dec
call
add
in
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
push
pop
push
mov
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
sub
cmp
jne
mov
pop
add
jmp
stos
call
in
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
int3
and
add
and
add
add
mov
and
add
and
add
and
add
and
add
and
add
add
dec
and
add
and
add
and
add
add
add
and
add
out
and
add
and
add
add
add
and
add
and
add
add
fsubl
add
mov
add
andb
add
add
je
add
into
and
add
and
add
add
mov
add
add
and
add
add
xor
add
add
add
add
push
add
add
and
add
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jp
add
movsb
and
add
and
add
and
add
add
mov
and
add
and
add
and
add
and
add
and
add
add
dec
and
add
and
add
and
add
add
add
and
add
out
and
add
and
add
add
add
and
add
and
add
add
fsubl
add
mov
add
andb
add
add
je
add
into
and
add
and
add
add
mov
add
add
and
add
add
xor
add
add
add
add
push
add
add
dec
outsl
arpl
dec
outsl
arpl
jge
dec
jo
outsb
dec
jne
gs
add
push
push
je
imul
inc
add
data16
je
je
dec
popa
outsb
fs
add
roll
dec
gs
jo
jb
add
push
add
outsl
jae
dec
popa
outsb
fs
add
je
inc
jbe
outsb
je
add
cmp
fs
imul
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
imul
bound
gs
add
repnz
imul
jb
je
arpl
add
push
add
outsb
fs
outsl
insb
jne
gs
insb
outsl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
movsl
add
je
gs
imul
aam
inc
gs
jb
jbe
push
jns
gs
add
add
popa
jo
gs
jb
jns
xchg
add
je
jne
jb
outsb
je
push
add
aad
inc
gs
gs
inc
imul
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
insb
jae
jb
outsb
inc
add
add
je
jb
jbe
je
push
jb
imul
push
add
push
dec
inc
dec
xor
cs
insb
add
sbb
insb
imul
outsl
outsb
add
add
push
outsb
jb
imul
jb
gs
ret
add
inc
jb
add
sbb
inc
jb
addr16
jne
jb
inc
imul
inc
jb
addr16
imul
mov
push
dec
inc
gs
gs
imul
push
push
gs
popa
addr16
outsl
js
add
addb
dec
inc
gs
popa
insb
insb
outsl
arpl
mov
inc
push
add
je
popa
arpl
outsl
outsb
inc
add
lods
add
gs
insb
inc
bound
je
add
add
inc
jb
add
push
add
addr16
arpl
jo
inc
imul
dec
dec
xor
cs
insb
add
add
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
add
inc
gs
jbe
imul
imul
push
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
add
push
push
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
inc
inc
inc
push
xor
cs
insb
add
xor
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
cmp
loop
push
gs
roll
loopne
outsl
rclb
dec
dec
fwait
daa
jns
jle
jbe
cmp
mov
inc
sbb
je
pop
iret
or
scas
idiv
repz
pop
jl
test
std
sbb
jp
inc
shr
add
and
mov
adc
mov
insb
enter
daa
out
mov
and
jbe
push
aas
out
std
in
out
inc
mov
pop
cmp
pop
mov
popf
dec
and
cmp
push
bound
mov
loopne
jge
adc
movsl
testl
inc
into
mov
add
lcall
repz
insl
iret
adc
mov
dec
sti
sub
pop
sbb
dec
add
sub
jl
pop
inc
mov
push
add
pop
and
or
cmp
jns
mov
pusha
lock
cmp
mov
leave
mov
sub
in
sub
inc
mov
sahf
in
cmpb
or
xchg
mov
sar
repz
das
outsb
inc
push
mov
pop
push
inc
cli
pop
cli
in
pop
sub
test
and
cmp
pop
adc
push
xlat
aam
popf
aam
imul
lock
and
push
or
push
mov
jmp
data16
mov
and
aam
sub
xor
adc
cmpsb
daa
les
sarl
andb
in
into
lahf
xchg
ficoms
push
mov
iret
fldcw
cmc
pop
mov
cmp
cmpl
shrb
imul
cmpsl
iret
jno
pop
pop
adc
pop
sub
in
jge
jns
mov
dec
cli
xchg
mov
rolb
mov
aam
leave
les
and
movsb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
scas
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
lods
stos
mov
mov
fwait
pop
xchg
xchg
xchg
or
jge
jnp
jp
lods
lods
stos
add
cmpsb
test
mov
mov
mov
ret
ret
stos
lret
lret
into
rcl
in
rcl
shl
iret
ror
hlt
int
int
leave
leave
repz
enter
mov
mov
mov
mov
lods
lods
lea
cltd
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
sahf
add
mov
mov
leave
leave
lret
rcl
cld
fcom
std
fcom
fdivr
xlat
fdivr
ror
sar
into
int
aad
aad
rcl
sar
mov
mov
scas
iret
movsb
movsb
mov
dec
das
das
xor
add
add
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
lods
sbb
mov
jnp
mov
mov
dec
leave
lret
call
ror
aad
fcom
call
fcomp
call
aad
dec
int3
into
dec
into
into
call
aad
int3
into
int
rol
mov
mov
scas
std
test
cmpsl
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
pop
push
add
inc
add
pop
add
push
or
inc
or
sbb
add
add
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
inc
leave
enter
into
call
rcl
call
fcomp
fcom
call
aad
dec
into
int
lret
dec
int3
into
inc
inc
mov
mov
ljmp
mov
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
imul
fs
sbb
push
das
push
prefetch
sbb
sbb
aaa
cmp
and
pop
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
rol
ret
dec
enter
rcl
call
call
aad
call
iret
iret
dec
enter
mov
mov
ljmp
movsb
movsl
popf
sahf
sahf
cwtl
cwtl
cwtl
lcall
addl
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
jo
jle
jl
jg
jge
jb
jb
popa
bound
push
push
push
xchg
cmp
cmp
pop
pop
pop
stos
outsb
outsb
outsl
nop
popa
popa
bound
inc
inc
xor
add
add
add
add
movsl
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
leave
lret
lret
lret
inc
enter
mov
mov
ljmp
movsb
mov
call
xchg
xchg
xchg
xchg
lcall
lahf
cmp
push
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
jo
pop
pop
pop
or
jl
lea
incb
jl
idivb
jmp
outsl
jo
push
push
je
jge
jge
jns
jns
arpl
inc
inc
inc
cmp
pop
sbb
adc
prefetch
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsl
lcall
nop
incl
test
xchg
xchg
xchg
mov
mov
xchg
mov
js
js
das
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
jno
lcall
lea
cmp
mov
std
xchg
jg
jb
jb
je
je
jge
jg
addl
xchg
addr16
cmp
ss
and
cmp
movsl
movsb
movsl
shrb
lods
stos
sti
lods
lods
stos
lods
stos
lods
test
stos
std
movsl
movsl
movsb
std
lcall
decl
jle
jns
jp
jl
jns
mov
xchg
mov
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
test
mov
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
mov
mov
push
pop
push
or
inc
inc
dec
imul
xchg
leave
cltd
cltd
lcall
lcall
mov
decl
mov
lcall
cmpsl
cmpsl
ljmp
mov
mov
mov
mov
std
mov
mov
movsl
movsb
movsl
addr16
jnp
scas
cmpsb
stos
add
pop
adc
test
call
cltd
xchg
xchg
incl
xchg
decb
xchg
xchg
sahf
sahf
sahf
std
mov
mov
xchg
in
xchg
xchg
in
xchg
push
jne
cmovp
or
inc
sub
es
dec
dec
dec
data16
jb
xchg
xchg
rclb
xchg
xchg
std
mov
call
sahf
sahf
jmp
test
pushl
cmpsb
scas
mov
xchg
stos
std
rorb
mov
mov
ljmp
lahf
adc
add
add
pop
pop
adc
scas
mov
ret
mov
lcall
xchg
mov
mov
xchg
decl
xchg
xchg
sahf
sahf
popf
mov
stos
test
movsl
movsb
mov
fstpt
jp
push
push
push
outsl
dec
dec
dec
pushaw
popa
bound
jb
mov
jge
test
mov
mov
xchg
testl
mov
jmp
mov
mov
pop
nop
mov
ss
mov
jbe
mov
cmpsb
mov
mov
lods
lods
mov
movsb
mov
add
pop
pop
adc
mov
ljmp
popf
decl
xchg
call
xchg
xchg
call
xchg
lcall
sahf
mov
movsl
std
mov
cwtl
lcall
xchg
xchg
les
lcall
mov
stc
xchg
test
std
xchg
jae
fwait
push
test
movsb
push
jle
lods
inc
jnp
mov
jp
mov
jae
mov
outsl
ljmp
adc
lods
or
lods
or
mov
jg
mov
mov
stos
pushf
movsb
movsl
movsl
and
add
add
mov
add
pop
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
sahf
pushf
lcall
pushf
popf
lcall
xchg
cwtl
call
xchg
xchg
call
lcall
lcall
sahf
mov
xchg
push
xchg
pop
jg
cwtl
dec
jns
cltd
cmp
fwait
sub
pushf
push
imul
movsb
adc
jmp
adc
lods
pcmpgtw
stos
pcmpgtd
scas
adc
mov
push
mov
push
mov
imul
aas
jg
rcrb
imull
movsb
movsb
sub
movsb
movsb
movsl
add
pop
pop
adc
mov
ljmp
sahf
call
sahf
sahf
jmp
movsl
movsl
jmp
mov
decl
mov
xchg
xchg
js
lcall
xchg
dec
jp
xchg
cmp
call
pop
decl
or
xchg
add
call
pop
lcall
adc
stos
sbb
pushl
pop
outsl
pushl
sbb
je
mov
and
sarb
inc
xchg
lods
mov
lods
scas
mov
mov
mov
add
add
add
mov
scas
add
pop
adc
lods
mov
shlb
lcall
mov
cmpsb
jmp
test
test
lcall
decl
inc
jo
mov
push
mov
popa
decl
pop
incl
add
incl
add
mov
pop
call
add
lcall
jmp
pop
outsl
pushl
sub
mov
sub
sub
inc
sub
enter
enter
leave
inc
mov
enter
sarl
lret
mov
add
add
add
add
add
push
adc
test
ljmp
sahf
jmp
stos
stos
ljmp
stos
lods
pushl
lods
scas
jmp
jb
incl
push
push
incl
or
test
incl
add
add
xchg
push
decl
add
xchg
add
fwait
add
sahf
add
movsb
add
scas
adc
mov
aaa
cmp
cmp
dec
cmp
call
cmp
call
cmp
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
test
mov
mov
sahf
lcall
lods
lods
lods
pushl
mov
pushl
mov
ljmp
js
decl
or
mov
pop
decl
or
xchg
push
incl
add
lea
push
call
add
popf
add
mov
add
lods
add
pushl
cmp
dec
inc
mov
roll
call
dec
mov
xlat
dec
xchg
fmuls
fisttpl
fisttpll
fistl
call
test
std
mov
mov
movsb
movsb
mov
or
add
add
add
add
dec
dec
adc
jl
mov
test
lcall
test
pushl
mov
mov
mov
mov
mov
mov
mov
jmp
aaa
insl
decl
sbb
call
push
pop
decl
push
decl
pop
call
pop
jmp
add
test
popa
pushl
es
int
call
push
cwtl
fcoms
fsts
fcoml
fistps
fistps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
cmpsb
cmpsl
test
lahf
sahf
mov
add
inc
inc
adc
js
mov
mov
sahf
ljmp
mov
pushl
mov
mov
pushl
xchg
movsb
call
pop
arpl
xchg
and
call
call
or
call
add
cltd
add
mov
add
lods
add
mov
gs
mov
xor
fldenv
fbld
jmp
bound
jmp
data16
out
test
jmp
stos
fldl
ret
mov
cmpsb
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
inc
adc
jae
cltd
xchg
cltd
call
mov
lods
scas
pushl
mov
mov
mov
mov
ljmp
push
cmp
sub
cltd
jo,pn
fwait
jo,pn
xchg
sub
xchg
push
call
add
fwait
add
mov
add
lods
add
mov
pushl
adc
roll
fldt
jmp
jo
jmp
jo
call
jb
in
jae
in
je
in
je
out
jbe
in
jae
jmp
xchg
mov
cmpsl
cmpsl
lcall
mov
add
add
add
jle
cmp
insb
outsl
js
mov
lcall
mov
pushl
mov
mov
inc
mov
mov
lcall
jo
mov
cmp
xor
lcall
call
add
movsb
add
stos
add
mov
popa
pushl
add
leave
sbb
fsts
jmp
ja
jmp
jle
in
cmpb
lock
push
test
call
mov
inc
mov
stos
cmpsl
popf
pushf
sahf
daa
mov
mov
add
bound
aaa
ss
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
sarl
ret
pushl
outsb
mov
cltd
cmp
mov
inc
jge
movsb
ss
fwait
sbb
add
sahf
add
mov
add
lods
add
add
add
les
dec
daa
cmp
mov
in
mov
push
sar
nop
sar
nop
ret
xchg
push
xchg
clc
xchg
push
ret
in
nop
sar
mov
inc
lods
test
xor
sahf
add
add
add
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
push
decl
mov
mov
mov
mov
inc
inc
mov
jge
lcall
dec
cmp
dec
test
mov
punpcklbw
fwait
add
mov
add
lods
add
mov
fs
mov
add
movl
mov
out
mov
in
xchg
ret
push
lcall
hlt
cltd
push
fwait
enter
enter
lret
sahf
into
cli
sahf
int3
cli
lcall
fidivs
cli
mov
mov
mov
nop
add
add
add
aaa
xor
or
cmp
outsb
dec
dec
dec
jecxz
pop
call
mov
mov
mov
sar
inc
inc
enter
mov
lahf
lcall
dec
xchg
scas
dec
xchg
movsl
sub
fwait
push
pop
lcall
add
stos
add
mov
arpl
mov
add
leave
add
or
loopne
xchg
in
mov
push
cmpsb
int3
push
movsb
int
clc
cmpsl
into
cli
test
cli
cmpsb
iret
cld
test
cld
stos
sar
std
test
iret
push
popf
jmp
mov
int3
std
mov
mov
lahf
mov
xchg
add
lcall
xor
xor
daa
sub
or
bound
pop
xlat
jae
jb
mov
mov
mov
ret
ret
mov
leave
mov
pushl
push
xchg
scas
push
mov
lods
dec
test
mov
add
jmp
pushl
add
les
addr16
add
fadds
jae
fists
in
pop
cmpsl
push
sahf
lret
cli
scas
sar
cli
scas
sti
mov
sti
mov
mov
std
mov
std
mov
std
mov
mov
cld
mov
push
movsl
jmp
mov
call
lret
mov
mov
sahf
mov
xchg
or
add
add
xor
sbb
ss
outsb
mov
mov
aam
fsubr
xlat
test
int3
int
lret
dec
lret
leave
lret
lret
inc
enter
lods
ljmp
push
mov
stos
cmp
lcall
add
stos
add
mov
arpl
mov
add
iret
add
xlat
add
fiadds
je
call
jb
cld
lods
aad
std
mov
fcos
cld
mov
fcos
cld
mov
xlat
std
mov
fdivr
std
mov
fcos
divl
call
lret
into
mov
lahf
lahf
jo
xchg
xchg
or
add
add
xor
add
pop
pop
pop
or
enter
in
pop
out
call
test
jecxz
leave
fsub
fdiv
fdivr
aam
xlat
std
int
into
mov
push
test
test
add
pop
pushl
add
ret
dec
add
add
faddl
ja
jecxz
jbe
out
xor
cli
mov
inc
inc
loop
inc
inc
loopne
inc
loopne
dec
dec
loopne
dec
dec
loope
cli
mov
lret
lret
mov
mov
xchg
adc
add
add
incb
incl
std
std
add
div
or
in
in
pop
in
out
in
sub
out
in
dec
ljmp
xchg
out
call
aad
fstp
jmp
mov
xchg
cmpsb
cmp
movsl
push
jmp
ljmp
add
mov
add
into
add
xlat
add
add
ljmp
cli
mov
in
std
lret
std
into
in
std
int3
jecxz
std
into
jecxz
std
into
loop
std
into
loop
std
iret
jecxz
std
shl
call
in
shl
cli
out
mov
xlat
inc
ret
ret
out
test
cmpsb
mov
cwtl
xchg
add
add
add
std
add
std
incl
div
testb
repnz
add
hlt
repnz
out
icebp
out
pop
out
repnz
out
in
pop
loopne
loop
lds
xchg
sti
lahf
and
pop
jmp
add
mov
fs
mov
add
add
flds
jne
in
jns
in
push
pop
stos
cli
mov
std
shl
cld
iret
jecxz
std
shr
call
out
std
shl
aam
fsubr
fsubr
std
fucomi
fucomi
dec
loope
repnz
aam
jecxz
lret
rep
stos
test
xchg
xchg
xchg
and
cwtl
xchg
add
cli
add
cld
testl
repz
or
aam
sarl
negb
add
cmpsb
add
lods
add
mov
add
lret
call
add
faddl
jne
call
sbb
push
je
sti
loopne
std
xlat
jmp
std
std
fldl2t
std
fucomi
std
fucomi
fsubr
std
fucomi
std
fsubrp
loopne
fsubrp
cld
shl
push
aad
out
iret
rcl
clc
lods
stos
lods
lods
xchg
xchg
xchg
jo,pn
outsb
add
add
add
loop
add
mov
xchg
repnz
and
sahf
add
add
mov
arpl
mov
add
int3
add
aam
jno
loopne
je
call
sub
shl
fdivp
fsubr
std
fucomi
fsubr
jecxz
std
aam
cld
shl
cld
iret
loop
test
fdivr
test
lret
jmp
rcr
call
xlat
sti
mov
mov
lcall
add
add
add
xlat
add
enter
mov
sahf
jmp
sub
add
ljmp
add
mov
add
iret
add
add
loop
js
call
aaa
xchg
cld
xchg
enter
cli
lret
cld
stc
mov
aam
hlt
mov
iret
push
mov
into
ljmp
call
ret
jmp
fsub
cmc
loopne
fsubrp
mov
mov
xchg
add
add
add
int3
int3
add
shrb
loopne
xor
jmp
add
mov
gs
mov
add
int3
or
rorl
jbe
js
loope
cmp
call
scas
int3
jmp
scas
leave
std
loope
mov
cli
fnsave
lock
int3
in
enter
iret
xlat
shl
xlat
fadd
out
loop
jmp
jmp
popf
call
leave
lret
stos
lods
adc
cmpsl
test
add
ret
mov
ret
rcrl
stos
aam
dec
cmp
cmpsl
sbb
lods
and
ja
mov
inc
test
les
stc
leave
fs
test
mov
out
mov
mov
lret
ror
lret
mov
int
mov
aam
jg
fcmovnu
jb
loopne
gs
jecxz
out
out
jmp
div
sub
div
and
lock
sbb
or
mov
int
mov
add
mov
mov
rolb
mov
test
insb
mov
test
sbbb
mov
cmpsl
sarb
stos
mov
les
ret
ret
into
enter
int3
into
addr16
rcll
rcl
dec
aad
aad
rcl
aad
daa
xlat
sbb
loopne
adc
in
push
loope
in
out
jmp
in
repnz
add
cli
testl
std
std
add
incl
mov
mov
mov
mov
lods
scas
xchg
mov
mov
mov
mov
ret
push
rol
inc
ret
xor
int
daa
lret
ror
and
aam
sbb
rclb
iret
aad
or
xlat
push
aam
add
add
add
jecxz
add
in
jmp
leave
fcom
add
std
add
mov
add
rol
ret
sub
ret
les
mov
mov
push
rol
or
enter
leave
movl
lret
roll
rcl
aad
rcl
aad
aam
aad
add
fsub
add
aam
add
loope
add
fstp
add
out
add
lock
std
add
std
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
ret
mov
mov
ret
les
mov
mov
ja
test
dec
test
test
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
ror
into
jmp
aad
cmc
rcl
sar
into
into
into
cli
int3
lret
int
lret
hlt
mov
mov
iret
lods
stos
lods
fwait
xchg
xchg
xchg
dec
ds
and
add
sbb
add
adc
add
push
add
add
cmpl
add
push
push
add
add
add
add
add
add
add
add
add
mov
mov
mov
enter
into
xlat
xlat
aad
xlat
aad
rcl
sar
into
int
dec
lret
mov
mov
cld
stos
stos
stos
icebp
cltd
cltd
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jne
jne
jae
gs
dec
inc
dec
cmp
sub
sub
xor
dec
sub
adc
sub
add
add
mov
mov
mov
mov
mov
mov
mov
ret
ret
lret
rcl
sar
rcl
sar
int3
lret
lret
mov
rol
pushl
stos
sahf
sahf
popf
xchg
cwtl
cwtl
jmp
jo
xchg
pop
adc
add
add
add
add
add
addb
test
jp
imul
pop
pop
pop
movsb
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
jo
jno
scas
scas
scas
pop
mov
mov
mov
mov
ret
mov
mov
mov
mov
jmp
fwait
pushf
call
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
lcall
pop
fwait
cwtl
cwtl
fcoml
addb
jl
jge
jns
js
jnp
jns
jns
jns
jb
je
push
push
push
cmp
je
pushf
sahf
sahf
mov
scas
lods
repz
lods
scas
sti
scas
scas
scas
std
test
popf
popf
call
xchg
call
mov
scas
jmp
scas
scas
leave
movsb
movsb
movsb
cltd
jae
jae
adc
adc
add
add
add
add
insl
outsl
outsl
pop
nop
mov
mov
test
std
nop
mov
lock
nop
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsb
outsb
outsl
orl
cwtl
repnz
xchg
xchg
std
lea
mov
xchg
xchg
xchg
lcall
movsb
cmpsl
mov
scas
std
mov
scas
mov
mov
mov
cmpsl
mov
addl
add
add
pop
popa
popa
or
lods
mov
cmpsl
mov
mov
lea
call
sahf
lahf
sti
lahf
mov
cltd
call
push
push
push
jo
pop
pop
outsl
insl
insl
outsb
xchg
subl
xchg
lock
nop
lcall
mov
pushl
pop
mov
mov
mov
mov
out
scas
stos
insl
stos
stos
stos
or
add
add
add
add
popa
or
mov
in
mov
xchg
call
xchg
xchg
lcall
cltd
lcall
sahf
pushf
cli
xchg
xchg
cwtl
jmp
xchg
mov
jecxz
orl
cld
xchg
pop
cmp
dec
jl
mov
xor
jae
mov
outsl
pushl
sbb
mov
scas
mov
scas
scas
mov
movsb
movsb
movsl
push
pusha
pop
pusha
or
mov
in
mov
cwtl
lcall
mov
mov
decl
addb
xchg
jb
cld
xchg
pop
cmp
dec
jp
nop
cmp
nop
sub
xchg
sbb
punpcklwd
sahf
or
push
pushl
sbb
mov
and
pop
xchg
mov
lods
scas
xchg
sahf
popf
popf
adc
add
add
pusha
pusha
pusha
or
stos
mov
test
mov
cmpsb
ljmp
test
lcall
pop
jns
mov
push
mov
decl
adc
xchg
push
decl
add
xchg
add
pushf
add
cmpsl
or
jb
mov
sub
jg
xor
lret
dec
pop
xchg
inc
stos
mov
scas
mov
movsb
cmpsl
test
sbb
add
add
popa
pop
pop
or
movsl
test
cmpsl
mov
cmpsb
ljmp
mov
pushl
xchg
lahf
call
adc
mov
push
incl
add
decl
add
xchg
add
mov
add
mov
insl
inc
ss
inc
mov
into
inc
mov
aam
mov
xlat
inc
xchg
fmuls
call
popa
lahf
dec
cmpsb
mov
mov
mov
incb
add
add
pusha
pop
popa
or
mov
ljmp
mov
mov
mov
ljmp
push
jge
nop
push
popa
call
push
pop
decl
push
call
pop
ljmp
add
jbe
iret
dec
xchg
fsts
fcompl
ficomps
loopne
mov
fildll
lret
test
cld
mov
mov
movsl
stos
cmpsb
xor
add
add
dec
pop
jge
jnp
fwait
xchg
cltd
jecxz
mov
scas
pushl
mov
mov
jmp
sub
lcall
and
xchg
minps
xchg
add
popf
add
add
mov
arpl
mov
xor
jecxz
test
ljmp
out
jae
jmp
cmpsl
mov
shll
cmpl
dec
dec
dec
pop
outsl
outsb
insb
bound
cwtl
cwtl
ljmp
mov
mov
mov
jbe
lcall
cmp
popf
sub
lcall
add
movsb
add
lods
add
mov
fs
or
call
inc
xchg
jmp
jp
ljmp
out
test
push
mov
fldt
mov
push
cltd
cltd
lcall
sub
push
push
push
dec
pop
pushw
mov
mov
mov
mov
ret
mov
xchg
ljmp
sub
fwait
pop
pop
jmp
add
mov
gs
mov
adc
mov
push
xchg
push
cwtl
xchg
clc
fwait
enter
leave
clc
xchg
jmp
lods
inc
mov
stos
popa
mov
add
add
xor
inc
pop
pop
pop
pop
fisttpl
mov
mov
ret
ret
pushl
pop
mov
lods
dec
test
mov
add
cmpsl
add
mov
arpl
mov
add
fisubl
cmp
jnp
push
mov
sar
clc
stos
into
cld
stos
sar
cld
stos
sar
std
lods
sar
stc
cmpsb
int3
jmp
mov
inc
mov
stos
jne
sahf
popf
or
add
add
dec
dec
push
aaa
jae
jb
stos
test
int
int3
int
cmc
lret
sti
leave
lret
enter
mov
bound
jmp
add
mov
arpl
rolb
dec
add
fildl
xchg
clc
xchg
std
mov
mov
mov
std
mov
xlat
cld
mov
jmp
enter
repz
lods
lods
mov
add
add
add
add
pop
or
rcl
dec
loopne
loope
fsubp
loopne
fstp
ffree
fcmovnu
aad
xlat
out
mov
addr16
test
push
popa
ljmp
add
enter
xlat
add
in
jnp
repnz
mov
cld
inc
loop
dec
dec
loopne
dec
fdivrp
std
leave
loope
sti
lock
leave
divb
popf
sahf
sbb
add
add
std
std
add
std
add
jmp
or
out
in
sbb
in
in
xor
loope
jecxz
mov
mov
mov
add
mov
arpl
ret
dec
add
faddl
jne
ljmp
std
ret
cld
iret
out
call
out
std
shl
call
in
call
out
std
fsubr
shl
push
enter
lret
sar
mov
mov
mov
add
add
std
add
std
add
cld
std
pop
aad
aad
mov
pop
mov
popf
or
pop
pushl
add
rolb
jo
filds
ja
out
and
cld
shl
std
fldl2e
std
fsubr
std
fsubr
cld
xlat
jmp
std
cld
aam
push
jmp
rcl
sti
mov
sahf
popf
das
add
add
into
into
int3
or
bound
ljmp
add
enter
aad
jb
loope
jns
out
xor
stc
int3
loop
clc
leave
fdivrp
test
repz
repz
out
ret
sar
in
sar
in
aad
in
shl
in
fucomp
leave
mov
stos
test
std
add
add
add
aad
push
mov
jae
or
insb
inc
pop
jb
int3
and
sub
sti
fists
clc
in
mov
out
in
lret
jmp
fnstsw
lret
sarl
in
fistpl
in
jmp
rorl
mov
add
stos
stos
lods
add
xchg
movsb
les
mov
mov
nop
fidivrl
jle
rol
stos
mov
mov
les
rol
int3
insl
aam
iret
pop
rcl
rorb
xlat
fnstcw
loopne
fisubrs
in
fisubs
jecxz
repnz
in
in
or
std
incl
std
std
add
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
leave
and
rcl
pop
rol
adc
rcl
or
loope
or
int
add
std
incl
incb
lcall
pinsrw
or
int
into
add
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
lcall
rol
enter
leave
mov
ret
mov
scas
mov
insb
lods
stos
lods
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
stos
lods
add
mov
jmp
aam
aam
rcl
sar
iret
int
std
mov
stc
mov
mov
test
jg
gs
sbb
add
add
add
add
add
add
add
add
jae
jb
addr16
dec
inc
das
das
das
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
ret
int3
int
aad
sar
into
into
iret
inc
mov
mov
lods
lods
lcall
mov
push
add
add
add
add
jae
jne
test
aad
jo
ret
arpl
outsl
outsl
outsb
jb
pusha
bound
pusha
pop
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cltd
cltd
lds
jno
es
and
pop
add
add
jae
je
fwait
xchg
fwait
mov
xchg
clc
xchg
or
addb
dec
dec
dec
inc
mov
fwait
into
movsb
mov
mov
decb
mov
ljmp
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
stos
mov
mov
mov
xchg
cld
popf
pushf
pushf
cmc
cltd
cwtl
lcall
push
push
imul
jg
mov
xchg
notl
mov
pushl
push
lcall
lods
lods
push
lods
stos
lods
add
add
add
cmpsl
scas
test
xchg
xchg
xchg
lcall
lcall
xchg
lcall
xchg
mov
loope
jne
out
nop
fs
push
jp
lcall
ljmp
and
mov
outsb
pushl
popf
scas
lock
mov
imul
int3
add
xchg
pop
lods
movsl
stos
test
lahf
sahf
lahf
jmp
movsb
call
push
decl
jb
lea
imul
sbb
pop
lcall
or
scas
sbb
jae
mov
sub
lds
inc
cltd
mov
mov
mov
stos
test
add
jg
jne
mov
mov
cmpsl
pushl
mov
lcall
sub
mov
pop
incl
add
add
add
mov
adc
shlb
call
inc
mov
aad
mov
push
xchg
dec
lcall
mov
add
add
push
test
lahf
mov
pushl
mov
movsb
call
push
call
or
xchg
add
mov
add
mov
push
xchg
fistpl
fistps
jmp
popa
mov
call
lcall
test
test
add
add
bound
adc
sahf
fwait
pushf
cld
mov
scas
mov
mov
mov
popf
dec
jge
fwait
xor
lcall
jmp
add
mov
xor
call
jnp
push
jge
out
jg
fistpl
mov
movsb
mov
add
dec
dec
dec
adc
imul
mov
mov
mov
ret
ret
mov
jmp
jl
lahf
and
add
cmpsl
add
mov
fs
or
dec
xchg
out
lea
push
xchg
push
xchg
enter
jmp
cmpsb
inc
mov
cmpsb
sub
aas
aas
inc
adc
push
xchg
xchg
mov
inc
ret
ret
inc
mov
xchg
ljmp
sbb
movsl
add
mov
gs
add
adc
jmp
scas
clc
test
stc
stos
sar
cld
lods
sar
sti
scas
sar
scas
sar
jmp
leave
inc
mov
movsl
ds
incb
xor
xor
mov
mov
aam
mov
aam
rcl
out
leave
enter
xchg
jmp
arpl
les
push
aad
jae
call
mov
std
mov
inc
fdivr
inc
cld
ret
fcos
icebp
mov
ret
test
dec
jg
jg
add
add
stos
stos
stos
add
in
in
or
call
out
outsb
movsb
and
popa
mov
add
fldl
out
cmp
dec
in
std
shl
call
in
std
aam
call
out
hlt
fdivr
aam
int3
in
scas
scas
scas
popa
addb
add
std
add
incl
int3
int3
shrb
lahf
sbb
stos
add
mov
add
jecxz
jp
cmc
push
movsl
std
loope
cld
out
cld
aam
cld
aam
cld
shl
cli
shl
push
enter
int3
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
insb
dec
or
jg
ljmp
cli
out
mov
iret
bnd
shl
out
aad
jmp
scas
lds
lcall
rol
or
sahf
stos
xchg
dec
and
shll
int3
js
mov
fdivrs
lret
adc
int
fxch
into
pop
fst
dec
in
loopne
out
out
in
in
in
sbb
sarb
cmp
movsb
lods
arpl
lods
mov
ret
cs
mov
lret
sbb
fstp
bswap
int3
int3
or
push
std
add
std
add
add
add
mov
incl
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
fstps
aad
jl
dec
pop
push
fs
out
push
cld
jmp
mov
sub
cs
gs
push
das
add
pop
pop
cmpsl
sub
fbstp
imull
sbb
pop
dec
or
sbb
int3
fwait
pop
cltd
or
pop
xchg
dec
push
ja
dec
pop
aad
push
cld
loop
add
in
repnz
xor
loopne
stos
and
bound
sahf
dec
aaa
adc
xchg
mov
and
movsb
sub
outsl
dec
xchg
fdivrl
cmc
add
iret
psubw
cmp
out
jae
ljmp
jno
inc
shll
data16
inc
xor
imul
dec
fisttpl
repz
dec
push
sar
inc
mov
mov
mov
lods
in
inc
or
mov
fmul
int
repnz
jl
dec
pop
fs
lahf
add
and
cmpsb
les
push
xor
sbb
bound
mov
in
out
outsl
push
inc
das
dec
sti
pop
pop
xchg
jnp
mov
clc
add
ljmp
dec
mov
adc
js
cmp
mov
daa
dec
ss
mov
push
test
or
xchg
sti
xor
insl
and
outsb
cld
mov
into
rolb
jp
ljmp
enter
jb
add
add
insl
pop
call
popf
push
loope
add
cmp
mov
fisubl
sbb
cmp
push
out
xor
sub
push
cli
data16
add
sub
dec
push
popa
repz
mov
sbb
push
mov
orb
movsl
sub
ret
lock
insl
mov
test
fldl
jnp
out
pop
cmp
mov
jnp
push
push
push
pop
push
or
push
outsl
jle
push
jns
outsw
fstp
jl
js
fisttps
cmpsl
xor
mov
sub
mov
fldenv
push
mov
mov
dec
hlt
fcoms
xchg
sub
ret
rorl
cld
pusha
sbb
movsl
fdivrs
dec
cmp
in
push
mov
test
stos
sub
lods
sbb
aad
icebp
fcomi
in
ret
sbb
test
lods
adc
pop
cli
dec
mov
dec
push
hlt
inc
xchg
inc
push
out
fnstcw
mov
adc
into
out
or
pusha
loop
xor
cs
mov
dec
or
stos
mov
jmp
dec
adc
mov
cmp
inc
push
lock
mov
or
jns
xchg
fcmovu
jl
iret
and
lcall
add
and
and
push
inc
add
mov
pop
xor
ret
pop
sbb
add
stc
and
push
sar
cmp
shl
aam
or
out
lock
xchg
adc
bound
pop
xchg
jecxz
shr
fdivrl
adc
shll
jmp
cmp
push
outsl
es
loop
movsl
xchg
scas
test
pop
mov
inc
adc
mov
iret
roll
cmp
or
mov
jecxz
inc
scas
test
ret
inc
inc
sub
xor
mov
jmp
mov
add
push
mov
pop
stos
stos
inc
adc
xor
inc
mov
mov
aam
jno
jg
xchg
movsb
in
mov
xor
cmp
add
stc
pop
pop
pop
push
mov
mov
cmp
inc
push
adc
out
push
and
cltd
orb
cmp
cmp
arpl
andb
xchg
add
test
and
xor
push
gs
sub
pop
mov
sub
jle
ss
fs
cmpl
mov
lods
mov
sbb
add
stos
mov
xor
adc
xor
cmc
or
aas
sub
stos
mov
scas
mov
inc
lea
inc
push
push
cmp
pop
stos
sub
insb
mov
cmpsb
inc
sete
dec
xor
clc
into
iret
movsb
mov
jb
jmp
sbb
movsl
std
or
add
outsb
cmc
push
scas
mov
and
sub
xor
or
jno
mov
add
cmp
orl
in
lcall
and
xor
push
mov
add
push
xchg
gs
dec
jnp
mov
pushf
es
xor
mov
aaa
iret
pop
and
and
inc
jb
jbe
add
dec
mov
lea
xchg
and
jbe
pop
rorl
jmp
mov
mov
popf
xchg
dec
or
outsb
jmp
lret
nop
mov
loop
mov
or
mov
sbb
aaa
faddl
cmp
movl
xlat
scas
mov
add
sbbl
aas
lret
loope
dec
cmp
cli
gs
mov
sub
dec
adc
mov
dec
call
aaa
not
mov
inc
in
push
arpl
mov
push
or
mov
mov
xchg
stos
sbb
inc
aas
sub
inc
es
sub
cltd
xor
xorb
xor
shlb
rolb
mov
mov
sub
dec
in
or
out
aaa
xor
test
mov
cltd
dec
cmc
negl
xor
out
test
out
imul
sarb
stc
push
adcl
pop
mov
jl
scas
outsb
lret
insl
imul
add
fnstenv
into
mov
dec
mov
mov
aam
mov
dec
stos
testl
cmp
push
icebp
inc
scas
mov
outsb
cmc
sbb
aas
negb
loop
pushf
daa
gs
lea
fidivl
mov
flds
push
scas
cmp
sarb
int3
mov
push
jmp
jmp
in
sbb
xchg
outsl
movsb
cmp
mov
mov
adc
ss
gs
push
bound
fimuls
cmp
cmp
lea
loop
add
decl
int3
mov
hlt
inc
lret
mov
std
xchg
push
in
cmp
jecxz
sbb
jg
and
idivb
repnz
pmulhuw
scas
iret
and
ljmp
mov
aam
and
sbb
test
out
mov
shll
int
jl
adc
sub
add
push
addr16
cltd
jb
mov
in
les
cmc
or
pop
testb
movsb
xchg
push
sub
jecxz
fwait
xor
add
loope
push
mov
incl
test
sbb
out
movsb
cmp
dec
ret
pop
xor
mov
push
call
ljmp
xor
icebp
movsl
ss
pop
aaa
inc
ljmp
push
fcmovbe
lds
aas
push
gs
mov
jbe
mov
jbe
pop
ja
stos
mov
mov
loopne
cs
ficompl
test
jae
sub
scas
adcb
sbb
adc
or
xor
cli
std
mov
lret
push
inc
testb
jecxz
inc
push
pop
ds
lcall
in
stos
add
and
sub
fnsave
stc
nop
jnp
sti
xchg
movsl
pushf
pop
scas
int
sbb
pop
sbb
iret
dec
inc
push
ljmp
jno
les
es
adc
inc
push
mov
xchg
mov
bound
fsubrp
adcb
out
test
pop
or
popl
sub
loope
inc
fiaddl
add
xor
popa
clc
pop
push
incb
push
stos
cmpsl
test
int3
popf
xor
cli
mov
push
push
dec
rcrl
fidivrl
mov
dec
int3
into
nop
and
ljmp
jno
je
popa
clc
outsl
xchg
out
test
or
cmp
cltd
jmp
mov
sub
pusha
mul
dec
xchg
sub
mov
sbb
push
push
push
out
jb
outsb
and
mov
testb
pop
push
pop
sub
and
test
jmp
leave
iret
xor
nop
xchg
loope
out
shlb
testl
dec
push
fwait
xor
and
adc
ss
sub
jo
stos
mov
pop
test
pop
inc
and
push
incb
popf
and
dec
imul
out
cld
mov
xchg
lcall
xchg
outsb
fs
pushf
mov
sbb
cmp
cltd
dec
inc
sahf
xor
sbb
pop
dec
mov
imul
mov
pop
jle
xchg
xchg
int3
arpl
fs
outsl
and
mov
ds
les
fstpl
jbe
popf
xlat
outsb
leave
pop
mov
mov
outsl
jmp
popa
cmp
data16
dec
adc
dec
jecxz
test
xor
shrl
cld
cmp
fwait
adc
mov
loopne
rcl
cmp
imul
xchg
add
mov
ja
in
sbb
rcrl
jg
in
sub
sbbb
xlat
outsb
xor
xchg
inc
inc
and
int3
push
add
cmp
sub
pop
mov
add
push
push
mov
test
mov
pop
xchg
sub
pop
cmc
pusha
push
mov
inc
or
cmp
mov
adc
outsb
mov
sub
aaa
into
add
xor
mov
jb
jp
cmp
inc
xor
popa
dec
sbb
mov
scas
inc
incb
or
mov
pop
xchg
andl
pop
stos
or
fwait
xor
fistpll
rol
pop
scas
add
pop
scas
in
sbb
adc
cltd
jg
mov
fnsave
std
xchg
subl
bound
mov
adc
inc
mov
push
shlb
add
insl
add
js
jl
xor
out
mov
enter
and
push
xchg
shll
jno
jl
ja
ss
test
inc
push
lds
ljmp
mov
sub
outsb
nop
cli
xchg
aam
popf
xor
jg
or
inc
inc
flds
sub
jg
dec
sub
cmp
ds
pop
call
push
outsl
xchg
sub
push
fiadds
jl
mov
loope
xchg
or
sbb
daa
bound
fsubrs
or
xor
loope
aad
mov
mov
in
test
push
in
test
cltd
fs
or
stos
inc
inc
sub
push
mov
fidivl
push
push
pop
mov
push
out
test
sub
cli
or
push
sbb
xchg
scas
mov
and
push
ljmp
in
ficoml
fiaddl
das
lods
push
mov
jp
inc
push
out
jae
inc
sbb
and
xchg
or
or
add
mov
aad
mov
dec
jg
cmpsb
cmpsl
imul
jge
sub
outsl
pop
push
out
nop
cmc
mov
ljmp
xchg
mov
sub
mov
das
sub
loop
cmp
movsb
cmp
push
push
in
test
sbb
sub
add
cmc
push
mov
cmp
aam
mov
mov
add
stos
shrl
cmp
aad
pop
shlb
jp
in
mov
and
xor
call
or
inc
fistpl
cmpsb
scas
cs
negl
shl
mov
add
jo
jnp
lds
adc
fsubr
jno
cltd
xor
jno
jbe
or
mov
sbbl
jp
mov
les
sub
shrb
ret
stc
jmp
pushf
fcoml
scas
inc
out
push
or
aaa
sbbl
mov
push
inc
xor
mov
out
cwtl
das
sbb
sti
xchg
mov
ficompl
lret
js
and
aaa
ljmp
or
dec
in
loop
xchg
movsl
daa
mov
jmp
in
subl
adc
xchg
jne
cmp
push
out
and
and
int3
arpl
or
push
call
lcall
in
jl
dec
test
cmpsb
cmp
jle
jne
push
adc
gs
jae
dec
gs
cld
xchg
stc
mov
ss
jae
ljmp
inc
ljmp
das
mov
outsl
sarb
ret
push
push
jecxz
mov
decl
push
cwtl
das
call
or
leave
jp
popf
xor
fwait
inc
fmuls
mov
mov
jmp
push
and
roll
les
aas
inc
in
mov
hlt
sub
push
jmp
inc
fiaddl
or
loope
lock
ja
shlb
fbld
insb
add
fdiv
mov
inc
sbb
fmull
mov
dec
std
data16
out
std
lds
adc
mov
lock
push
in
shlb
cmpsl
movsl
fs
jae
stos
inc
mov
fsincos
xchg
lret
cld
movsl
cmp
in
jmp
outsb
mov
dec
movsl
cmp
xchg
pop
icebp
add
sbbl
and
test
mov
es
dec
or
ret
push
push
jno
xchg
push
push
in
jp
loop
cmc
or
pop
push
push
out
xchg
mov
shrb
pop
mov
push
xchg
sub
mov
fildll
ror
mov
jecxz
aam
mov
sbb
jle
stc
nop
or
inc
fdivs
mov
jno
mov
insl
add
inc
xor
jp
pop
out
push
or
cltd
aaa
je
sbb
loopne
add
cs
rcrl
mov
scas
inc
fcomps
jbe
shrl
pop
fs
jne
ljmp
and
or
mov
shlb
std
mov
sbb
mov
nop
outsb
outsl
push
xchg
mov
loop
and
cwtl
pop
inc
sbb
sub
insb
dec
loopne
enter
pushf
pop
mov
mov
jl
cmp
iret
mov
or
cmp
inc
mov
es
lahf
ss
dec
in
inc
mov
push
in
mov
xchg
sub
shlb
xchg
stos
xchg
mov
sbb
dec
lcall
pop
test
dec
out
xorl
outsb
or
ss
sub
mov
mov
pop
repnz
lret
ficoml
iret
outsb
sti
inc
fadd
popl
sub
inc
fsub
dec
or
rcrb
mov
test
inc
sbb
pop
mov
jle
ss
cmp
lods
jnp
fidivl
pushf
gs
and
cmp
inc
daa
mov
adc
testb
mov
fmuls
hlt
mov
fstpt
fstpt
add
cwtl
jecxz
adc
xchg
jmp
or
cmp
in
mov
imul
insb
mov
sarb
fmull
or
jnp,pn
pusha
mov
mov
mov
dec
fistpll
aam
inc
push
pusha
popa
clc
xchg
daa
leave
pusha
cltd
daa
xor
test
push
es
push
montmul
cmpsb
xchg
aas
pushf
cmpsl
xor
add
fdivl
leave
and
js
jmp
inc
adc
subl
les
cmpsl
fsubrl
call
and
lret
jno
or
sub
jbe
jae
outsl
push
pop
xchg
stos
inc
sub
mov
shlb
in
xchg
sub
push
and
jg
push
ljmp
adc
daa
sbb
mov
add
jmp
jmp
and
jnp
cmc
lods
rorb
mov
js
imul
jnp
sbb
aas
lds
pusha
mov
cmpb
loope
test
or
sbb
jmp
push
jmp
and
fisubl
ss
icebp
fsubs
inc
lds
shrl
pusha
and
insb
adc
dec
pop
jmp
int3
or
push
jp,pn
and
stos
es
xchg
stc
je
push
out
xchg
cmpb
pop
and
xchg
mov
dec
testl
das
mov
mov
fnsave
mov
add
fcmovnu
dec
mov
stos
cmp
fbld
lods
mov
push
pop
scas
push
scas
popa
arpl
cmp
mov
mov
decb
adc
xor
cltd
xor
mov
inc
fistpl
rorl
xor
xchg
arpl
fs
aaa
jge
ds
je
push
dec
inc
loopne
pusha
inc
cld
and
jbe
fnstsw
jg
sarb
outsl
xchg
cmp
rorl
mov
es
xchg
jp
dec
loopne
pushf
jle
loopne
pop
icebp
xchg
ret
pop
lahf
cmpsl
and
fadd
loope
out
orl
mov
cmpsl
ds
icebp
mov
loop
xchg
lcall
add
cmc
mov
fwait
out
and
shlb
jp
push
inc
xlat
pusha
stos
aad
stos
push
hlt
sub
repz
cmp
in
sbbl
out
mov
leave
stc
jb
ret
ljmp
ret
jae
jecxz
pop
adc
aaa
cld
xchg
test
mov
sahf
and
cmp
dec
loop
mov
test
xchg
ds
dec
insl
add
dec
pop
repz
mov
int
sbb
push
cmpsl
cmp
test
fdivs
mov
loopne
sub
addl
xor
push
ficoms
rcrl
pop
cmc
into
push
mov
push
out
or
sarl
icebp
mov
xchg
cmpsb
adc
jp
test
sub
dec
lods
ss
or
xchg
sbb
fidivs
cmp
fbstp
movsb
mov
sti
dec
loop
push
lea
mov
xchg
pop
jo
outsb
mov
ret
lret
ret
mov
xchg
adc
or
in
dec
rcrl
jmp
sbb
sbbl
xchg
shrl
or
clc
dec
loope
stos
int
sbb
xchg
sub
xor
mov
sti
dec
lcall
orb
lea
inc
testb
adc
ret
stc
movsl
cwtl
das
sbb
xchg
call
mov
out
into
test
hlt
mov
pop
adc
jl
inc
push
xchg
movsl
stos
inc
xlat
sbb
add
pop
mov
test
and
xor
dec
std
xchg
inc
mov
pop
hlt
mov
lods
inc
push
les
mov
icebp
mov
lahf
hlt
mov
add
xor
loopne
int3
rolb
lret
xor
and
mov
sti
mov
mov
cmpsb
add
pop
lock
adc
fisttpl
or
dec
loopne
sub
lods
inc
mov
iret
data16
add
testb
sub
sahf
push
stos
cmp
sbb
push
popf
mov
outsb
mov
aam
mov
int
push
lds
pop
repz
mov
jne
add
add
dec
inc
push
call
push
push
ss
and
cmp
pop
jp
popa
push
cmp
push
and
dec
pop
or
dec
insl
je
cli
xchg
xor
bound
sbb
pop
hlt
adc
jo
cwtl
das
scas
push
push
out
or
push
mov
jecxz
mov
push
sti
xchg
inc
mov
cld
and
orl
dec
aas
outsb
pusha
negl
stc
or
scas
inc
stos
jo
mov
addl
xor
add
mov
xor
or
or
xchg
xchg
mov
xchg
scas
jne
in
add
in
fs
mov
xchg
pop
xchg
xor
dec
test
xchg
imul
pop
sbbl
pop
inc
xlat
data16
in
sub
mov
fldcw
shr
push
out
or
adc
add
dec
filds
adc
jge
cmp
dec
sahf
data16
iret
insl
pop
out
xor
push
adc
rorl
sbbb
fisttpll
xchg
mov
faddl
mov
cwtl
sbbb
sbb
mov
sbb
cltd
repz
jmp
mov
or
jbe
inc
fldl
jns
and
xchg
inc
xchg
cs
int3
adc
inc
fisttpll
test
fnstenv
sub
leave
jb
mov
pop
xchg
das
mov
insl
dec
in
enter
ss
push
int
push
push
xor
sub
daa
mov
aas
sub
pop
pusha
test
sahf
push
pop
mov
adc
ljmp
jb
pop
movsb
inc
jecxz
fs
aam
fwait
xor
not
outsb
lds
shrl
out
mov
xchg
add
cmp
sti
xchg
mov
or
add
push
stos
sbbl
aas
add
dec
lods
and
aaa
and
inc
pop
adc
push
popa
push
movsl
xchg
jb
in
ja
pop
icebp
or
dec
fisttps
dec
in
imul
pushf
push
insl
add
mov
lock
cs
xlat
lea
adcb
mov
lahf
ss
jns
stos
ror
arpl
int3
sti
xchg
adc
and
arpl
pop
xchg
push
stos
inc
test
loopne
fmuls
add
xchg
stc
rcrl
jg
repz
cwtl
or
sti
sbb
sbb
sub
sbb
out
dec
loopne
or
pop
fwait
into
sbb
adc
pusha
neg
xor
mov
mov
sbb
imulb
testb
insb
sub
popf
jns
shrb
int3
xchg
add
pusha
dec
loopne
mov
fbstp
leave
inc
fnstcw
lea
adc
pop
test
inc
xlat
mov
push
movsl
scas
dec
or
dec
lds
mov
mov
sbb
stos
mov
fcomps
push
sub
xchg
sub
iret
data16
pop
in
mov
cltd
xor
add
ja
sub
je
and
cmp
xchg
jae
sbb
jno
icebp
cmpsb
data16
mov
jl
popf
test
aas
aad
jno
inc
std
pop
popf
in
jle
ss
outsb
in
nop
sbb
sbb
sbb
xchg
cmp
push
mov
cli
xor
sub
push
out
mov
daa
mov
lods
cld
xchg
and
xchg
sub
repz
inc
imul
or
and
lret
pop
cmp
dec
fwait
xchg
sub
insl
push
fnstsw
ja
lds
fmull
sub
inc
mov
xor
sbb
pop
mov
xchg
cmc
fnsave
mov
inc
jae
out
popf
xchg
movsb
cmp
mov
call
mov
test
movsb
mov
or
jnp
out
es
lock
inc
mov
popa
cmc
pop
repnz
rclb
sbb
ds
add
icebp
mov
cmp
outsb
cld
je
cs
scas
inc
ret
pop
and
lcall
sub
dec
mov
mov
int
sub
xor
fmuls
xchg
jg
pop
icebp
sub
insl
add
imul
pop
enter
mov
outsl
push
dec
cmp
xchg
lods
idivl
xchg
icebp
mov
sub
lcall
roll
adc
pop
inc
jbe
ja
jbe
popa
inc
in
aas
dec
aad
dec
popf
mov
ds
inc
lahf
popf
jne
out
pushf
xor
jmp
test
nop
testl
fistps
xor
out
adc
movsb
cli
lret
mov
jnp
mov
fstps
and
shll
adc
mov
enter
and
ret
hlt
jmp
add
shrb
lods
jo
add
in
dec
jg
inc
pop
mov
popa
in
add
ja
enter
fldt
push
in
subl
jmp
je
lcall
pusha
testl
iret
push
lods
mov
sbb
sbb
inc
testl
mov
and
cmp
rclb
fdivs
out
sarl
flds
lock
lock
ret
adc
ficoml
jmp
sarl
cmpsl
aad
fstps
loopne
lret
loope
or
mov
push
add
sbb
scas
inc
sbb
lods
inc
lret
inc
scas
pop
shrb
loopne
es
cs
mov
cmp
and
jle
cmpsb
shlb
add
sub
loop
adc
pusha
pop
test
and
pop
scas
insw
ljmp
cmc
das
adc
dec
mov
ja
test
test
sbb
mov
dec
inc
mov
sbb
lcall
push
lahf
push
shrl
imul
lea
mov
pop
jns
mov
xor
outsb
mov
jb
mull
jmp
cmp
xor
daa
or
test
adc
mov
popf
jecxz
push
mov
sub
arpl
or
in
xor
and
leave
jmp
lret
xlat
mov
in
sbb
sub
in
cli
push
jg
ficompl
xor
in
pop
push
or
cltd
movsb
or
or
add
fstpl
jmp
and
mov
fisttpll
addr16
shll
inc
scas
pop
pusha
xchg
sub
ret
sub
dec
xchg
push
loop
pop
dec
test
adc
fcompl
mov
adc
mov
lcall
test
sbbl
jg
loope
cmpb
sub
and
popa
insl
jl
lahf
es
add
clc
repnz
pop
sub
sub
push
jne
out
xchg
mov
sti
lods
push
ljmp
dec
jecxz
rclb
shrb
dec
in
repz
ljmp
push
movsl
mov
fmull
fsts
jmp
ljmp
scas
pop
adc
adc
lahf
outsb
lods
or
call
mov
pushf
cmp
call
cmpsl
inc
sbb
xor
dec
dec
ret
add
ds
xor
mov
cmp
inc
int3
xor
out
shlb
mov
mov
pop
lds
mov
cmp
sub
lods
pop
fisubrl
adc
xchg
dec
push
mov
and
push
adc
push
sti
xchg
push
pop
testb
jle
incl
icebp
mov
pop
imul
pusha
jbe
inc
adc
cmp
ds
and
add
jbe
push
fcompl
dec
in
stc
fwait
xor
std
xchg
sub
adc
rorb
xor
pop
cmpsb
aad
sbb
mov
xchg
push
jp
inc
stos
or
xchg
int
or
test
push
arpl
outsb
ja
lret
or
pop
xor
scas
xorb
daa
pop
mov
and
sbb
sbb
push
lcall
or
movntq
add
pop
jb
into
push
dec
sub
subl
aaa
stos
mov
and
fnstsw
and
push
dec
push
negl
xchg
pop
mov
enter
pop
or
pop
daa
sbb
mov
mov
outsl
mov
mov
fs
cmp
push
ljmp
sbb
cmpsl
xchg
ret
dec
sbb
inc
fsubrl
test
leave
dec
outsb
ret
inc
inc
pusha
sbb
push
or
popf
push
mov
fcoml
mov
arpl
inc
fimull
push
fcomps
sbb
loopne
or
xchg
lock
punpcklbw
mov
adc
scas
inc
inc
dec
aad
jp
cmpl
inc
jge
fistpll
popf
sub
add
cltd
inc
addr16
in
xor
mov
imul
jl
or
sarl
cmp
mov
repz
iret
int
sbb
sub
cmp
test
hlt
xor
cld
adc
mov
in
xchg
push
fs
mov
lcall
mov
daa
mov
mov
adcl
clc
push
shlb
sbb
xor
ja
push
daa
stc
sti
popf
ss
jl
and
mov
inc
divb
push
es
int3
or
xor
repnz
adc
adc
popa
loop
popf
xor
shl
cmc
lret
add
lea
sti
xchg
bound
daa
mov
sahf
add
nop
jl
ret
sbb
dec
das
sub
pop
pop
cmp
adc
sbb
orb
mov
sub
testl
dec
orl
insb
loope
aad
xchg
add
sbb
push
ljmp
les
out
lahf
imull
daa
jne
enter
fsubs
xchg
sub
fisttpll
xchg
push
cmp
addr16
adc
arpl
mov
pusha
mov
push
inc
lret
add
xchg
in
push
pop
scas
xchg
sbb
pushf
test
xchg
dec
pop
push
call
fnsave
ja
test
negl
imul
pop
and
mov
sbb
fcmovnu
xor
xchg
mov
jmp
pusha
sub
xchg
push
int
aam
ljmp
adc
sbb
stc
imul
and
jo
repz
cmp
or
cmp
pushf
adc
ficoms
push
fwait
or
adc
mov
mov
test
mov
rclb
sbbb
sbb
outsl
xor
xor
mov
ror
add
or
xlat
mov
jg
xchg
test
mov
mov
test
lods
push
scas
lea
pop
test
cld
push
xor
dec
movsb
cmp
cwtl
pop
pop
dec
std
test
mov
repz
push
mov
mov
jnp
xor
adc
dec
jnp
pop
repz
push
jae
mov
mov
xchg
inc
jecxz
outsb
adcb
popf
out
dec
or
push
ljmp
jo
mov
jo
mov
cmpsl
in
dec
pop
pop
icebp
nop
test
add
icebp
outsb
pop
mov
inc
mov
je
fidivs
jns
outsb
jmp
mov
pop
aam
cmpsb
test
scas
cwtl
lock
cltd
xor
imul
push
lds
or
xchg
mov
push
cmp
pop
push
pop
cltd
xchg
cmp
xchg
test
sub
add
sub
lea
jns
sbb
sub
cli
mov
mov
dec
neg
push
aam
jmp
fcompl
fimull
or
mov
popf
cmp
pop
dec
arpl
and
enter
test
jge
fidivl
dec
inc
loop
mov
xchg
xchg
sub
fs
jg
les
jge
or
loope
cwtl
das
stos
push
insl
pop
loopne
cmp
js
addb
jo
inc
int
pushf
popf
pop
dec
jecxz
inc
mov
xor
jno
fisubrl
jg
mov
mov
imul
mov
and
adc
inc
adc
insb
stc
int3
pusha
mov
aad
jle
cmp
test
xor
inc
xchg
cmp
mov
aaa
dec
pop
cmpsl
mov
fstpt
insb
test
mov
addr16
sarl
aas
pop
cli
push
sbb
xor
mov
mov
cmp
inc
sub
and
jmp
push
mov
loope
xor
out
in
add
testb
inc
shl
leave
mov
mov
fisttpll
sub
cmc
add
xor
add
es
pop
ret
cmp
mov
and
mov
add
push
or
aam
mov
jmp
nop
loope
and
mov
mov
iret
push
xor
in
shl
xchg
mov
xor
test
jl
cmpsl
pop
xor
or
pop
shl
jno
pop
repnz
call
aad
mov
insb
adc
and
mov
lods
inc
shll
or
sbb
mov
lds
int
test
cwtl
mov
sbb
mov
push
dec
jecxz
sbb
dec
pop
jb
test
inc
sbbb
imul
subb
movsl
pop
lods
add
pop
int3
push
or
mov
dec
adc
leave
push
push
jmp
push
jge
jecxz
mov
mov
mov
rcll
lret
pop
lock
xorb
loop
jo
push
adc
dec
push
lret
jns
fs
lods
out
or
push
loop
enter
mov
mov
ret
rorl
and
roll
sbb
inc
pushf
addr16
xchg
push
dec
or
rcll
loop
add
mov
adc
xor
lahf
pop
jp
xor
xchg
fwait
lahf
sarl
pop
out
xchg
pusha
sti
dec
pop
cld
mov
sbb
lea
es
movsb
push
test
xchg
rcrl
mov
repnz
push
sarl
sub
fs
shlb
ficomps
mov
in
lcall
xor
fldcw
aad
xor
popa
sub
aas
mov
pop
in
dec
jns
ja
or
mov
sbb
inc
loopne
xchg
lret
jg
fsubrs
iret
sbb
in
jmp
pop
hlt
cmc
sbb
jnp
leave
andl
fimuls
mov
jmp
mov
lods
sti
xchg
test
inc
pop
cmp
sub
sbb
iret
and
mov
mov
sti
clc
gs
lock
sub
in
xchg
pop
std
ss
es
sub
scas
jbe
test
ss
mov
clc
or
cld
jp
adc
insb
loope
pop
or
mov
mov
pop
pop
push
mov
cld
cli
data16
test
cs
sbb
xlat
sub
and
adc
or
add
arpl
sub
xchg
aaa
cld
xchg
adc
shrb
inc
inc
adc
lret
lods
xor
pop
imul
insl
jl
fidivl
shlb
mov
orl
mov
mov
outsl
mov
and
scas
pop
jne
push
push
aas
jns
pushf
dec
in
cmpl
jnp
aad
jb
or
sbb
sbb
adc
push
pop
mov
loopne
cmpsl
mov
push
mov
and
dec
mov
mov
sarl
ficomps
xchg
add
dec
sahf
sti
cltd
test
mov
fnstenv
xchg
adc
xchg
jb
jb
in
mov
push
inc
je
or
test
popf
cltd
mov
and
pop
aad
pop
mov
adc
jae
sub
jmp
nop
inc
call
stc
hlt
jns
jbe
mov
sarl
pop
jbe
aaa
les
ret
std
out
or
decl
incl
andb
popa
push
int
sti
pop
sub
lret
sti
ja
test
rorb
sub
dec
dec
andb
and
std
sbb
mov
ficoml
testl
jo
fcoml
mov
sub
sbb
cmp
mov
insb
gs
xor
mov
ret
add
sub
and
cli
rcrb
aam
adc
mulb
into
addr16
xor
stos
pop
adc
dec
arpl
gs
jo
lock
cli
xor
fbld
and
inc
xchg
aas
pop
std
xor
xlat
outsb
sti
push
test
xlat
and
jnp
inc
cmpsb
adc
and
pop
sbb
pusha
sub
jmp
dec
sbb
lds
negb
mov
xor
dec
mov
mov
outsb
jne
ret
fildll
in
mov
mov
insb
mov
adcl
push
pop
jge
gs
inc
leave
cmp
cmp
imul
outsl
or
arpl
jb
jns
lahf
pusha
dec
pop
icebp
mov
lods
into
add
test
fsubl
cmp
add
mov
mov
pop
popf
test
in
es
icebp
in
push
fwait
lahf
idiv
ss
and
nop
or
pop
shll
jno
jne
push
adcl
xchg
into
test
and
ljmp
push
es
fdivp
adc
lahf
jbe
sub
pop
test
hlt
xchg
popf
adc
jmp
fldenv
mov
fiaddl
pavgw
cli
xor
push
je
pop
mov
push
mov
jle
arpl
inc
cmp
cmpsb
pop
rcrb
popf
leave
cmp
cli
sub
ret
ret
jo
jecxz
mov
in
test
xor
jne
pop
sti
sub
xlat
sub
popa
jge
test
push
por
sbb
lods
xchg
xor
int
or
cld
cmc
push
ljmp
jp
jne
xor
arpl
stos
pop
mov
pop
mov
jbe
inc
xchg
sbbb
sub
jle
mov
aad
pop
mov
out
or
ss
mov
loop
mov
cmc
mov
xchg
in
inc
imul
jmp
mov
je
cmp
push
mov
jmp
aam
out
test
or
lods
loop
into
pop
scas
incl
addb
mov
xchg
movsl
push
fcompl
gs
loopne
fs
pop
xchg
shll
jecxz
lret
jmp
imul
xchg
cmp
icebp
inc
out
pop
cmp
lahf
ss
push
pusha
testl
push
es
sub
inc
push
pushf
cmpsl
lock
mov
add
xor
imul
pop
outsb
push
mov
sub
jmp
mov
add
mov
sbb
lcall
ret
daa
push
sar
bnd
xchg
ret
add
push
cmpsb
push
dec
lea
jnp
xlat
lods
xchg
jmp
enter
mov
sbb
mov
push
mov
cmpsb
sbb
sub
je
dec
dec
pusha
enter
dec
popa
xor
fistpl
out
pmulhw
push
mov
mov
in
xchg
je
sarl
push
cmp
xchg
xchg
dec
dec
aam
test
cmpsl
cmp
jbe
aad
push
and
dec
cld
pop
loope
sub
icebp
sub
ret
and
cmp
mov
pop
neg
idivb
add
lret
addl
mov
add
pop
mov
add
leave
pop
fs
insl
pop
jle
dec
jb
ficoml
xchg
sbb
push
sbb
lods
ret
lret
enter
xlat
ljmp
fwait
sti
push
lahf
movsb
repnz
in
repz
popa
pop
mov
scas
imul
loopne
adc
adc
aas
jo
or
dec
adc
lods
mov
inc
cmp
push
inc
fs
pushf
and
std
sahf
xor
pop
lea
add
sub
int3
xchg
adc
lret
sbb
inc
div
sbb
ror
movsb
cmpsb
sub
mul
scas
repnz
push
cmpsb
iret
movsl
in
data16
ret
movsl
mov
mov
mov
xchg
mov
adc
mov
stos
cli
loopne
sub
shll
std
add
sub
jo
call
pop
mov
mov
add
insb
or
add
clc
adc
inc
pop
test
imul
mov
or
mov
push
popf
hlt
shl
mov
in
xchg
ret
test
ret
fld
xlat
sarl
je
psllq
mov
ss
imul
add
std
pop
arpl
dec
and
xchg
adc
sub
shrb
sbb
pushf
movsb
pop
out
xchg
jg
sahf
lahf
pop
cmc
test
xchg
mov
mov
xchg
xchg
sub
fsubl
stc
leave
inc
ret
jb
in
jns
pop
fwait
add
xor
xor
add
pop
jae
test
sbb
ret
fildll
xchg
dec
pop
push
add
xor
dec
mov
dec
inc
stc
leave
and
insl
cmc
jl
xchg
cld
cmp
in
lea
and
fwait
adc
push
sahf
push
in
dec
cltd
out
cmp
mov
adc
sub
icebp
movsl
call
cld
repz
add
in
dec
pop
mov
xor
add
xchg
mov
mov
addr16
xor
scas
mov
adc
jne
jecxz
pop
xchg
int
and
lahf
push
mov
mov
aas
ljmp
cmc
fisubs
decb
into
fnsave
pop
xlat
outsb
nop
shr
xor
pop
xchg
cmpb
dec
rorb
and
mov
jmp
mov
loopne
in
inc
addl
adc
push
rcrl
test
scas
std
insl
rcl
mov
mov
je
xor
lea
lahf
jge
cmp
push
cmpsb
aad
or
mov
je
pusha
les
in
push
push
es
inc
lahf
clc
jle
int3
aad
xor
out
cmp
sbb
andl
inc
roll
adc
inc
int3
fistps
ja
bound
xlat
insl
add
dec
jmp
push
fsub
js
scas
fistl
push
pop
push
sub
andl
andb
xor
sti
sub
jle
mov
sarb
out
xor
arpl
dec
push
rclb
jbe
and
sub
push
into
int
arpl
jnp
sbb
sbb
jmp
pop
aam
sti
aad
cmp
imul
pop
into
in
jbe
aas
and
sbb
sbb
cld
hlt
jp
dec
cs
pop
icebp
cmp
out
sub
and
push
mov
loope
push
adc
jno
xor
leave
push
mov
mov
outsb
in
pusha
mov
fldt
sahf
jbe
shlb
mov
cltd
xor
repz
jmp
std
sub
mov
testb
ficoms
pop
divb
pop
repnz
bound
into
jmp
aas
cmp
pop
sahf
push
pop
pop
mov
mov
ffreep
inc
add
lcall
and
fwait
movsb
aas
aad
sahf
xor
daa
adc
adc
jae
movsl
pop
cltd
xor
xor
jo
and
fistpl
inc
movsl
sti
call
insl
add
jl
fwait
lds
xor
out
inc
adc
add
lret
decl
mov
add
mov
fwait
xor
imul
je
ds
jbe
inc
outsl
xorl
jae
lea
imul
in
ret
dec
fsubr
divb
inc
call
or
xchg
mov
fistpl
nop
setno
mov
lcall
cwtl
inc
into
pop
mov
cmp
sbb
dec
and
cmp
lcall
insb
hlt
add
jp
sub
js
mov
mov
xor
or
scas
jnp
or
sbb
cmp
jge
sbb
pop
mov
sub
out
in
in
in
hlt
cmpsl
sub
push
mov
pop
xchg
jb
mov
or
mov
pop
js
or
inc
loop
pop
fmul
aaa
enter
pop
fsubs
lods
mov
cmpsl
sarb
push
dec
test
add
adc
getsec
loop
xchg
adc
mov
and
out
dec
orb
pop
xor
inc
push
jo
mov
jno
imul
xchg
sub
divb
dec
adc
xchg
xchg
cs
test
pop
push
flds
and
mov
and
xor
out
jbe
push
jbe
subl
lcall
add
je
mov
adc
pop
cmpsl
inc
dec
add
shlb
and
jmp
outsb
jb
mov
rcrb
xor
ds
stos
out
mov
mov
push
xor
dec
push
mov
mov
mov
lea
and
inc
sbb
add
sub
jge
arpl
add
add
xchg
arpl
mov
jo
pop
out
xchg
sub
jle
cmp
jns
add
pusha
outsb
jmp
adc
jbe
xchg
pop
sub
dec
cmc
mov
nop
in
shrb
inc
push
jne
lock
push
dec
or
mov
lcall
mov
rcrl
and
sub
inc
add
mov
jp
repz
or
popf
std
call
sub
pop
jle
in
in
dec
push
or
xor
mov
add
pusha
xchg
cmpsl
xchg
xlat
js
jo
in
jmp
or
test
pusha
add
nop
sub
xchg
repz
lahf
scas
inc
inc
jo
mov
push
mov
jmp
mov
cmc
inc
jb
or
sahf
leave
adc
ja
and
or
sub
in
xchg
loope
add
sbb
pop
lret
push
pop
push
xchg
loopne
xchg
mov
jmp
xchg
scas
cmp
in
push
push
test
or
stos
sub
shl
dec
xor
inc
inc
popa
mov
mov
sub
dec
in
ret
adc
pop
hlt
push
xchg
adc
shlb
pop
adc
or
cltd
xchg
push
or
xchg
fbstp
mov
mov
daa
loopne
sbb
rorl
gs
cmpsb
movsl
int
pop
sub
bndstx
xor
mov
pop
scas
lret
xor
dec
push
xor
popf
jge
sub
push
popf
dec
bound
mov
fsubrl
mov
popa
and
xchg
icebp
inc
jl
rclb
inc
orb
adc
ficoms
cmp
mov
adc
mov
dec
sub
dec
les
cmp
test
adc
aam
sbb
sbb
xchg
sub
fdivs
insl
adc
xor
fsts
cs
lret
icebp
leave
jnp
je
cmp
sub
nop
fisttps
jbe
js
pop
jp
lods
or
jecxz
xchg
adc
cmp
shlb
mov
imul
push
jno
cmpsb
cli
push
sub
mov
pushf
xchg
insb
xor
in
lret
in
in
sar
xchg
dec
out
jnp
scas
std
add
pusha
in
loop
out
adc
iret
outsb
scas
cld
pop
repz
std
jp
leave
mov
xchg
push
push
push
je
lea
lahf
int
inc
in
es
lret
cmp
ljmp
inc
push
inc
data16
jmp
icebp
pushf
adc
sbb
js
icebp
lahf
xchg
dec
sbb
int3
into
gs
sub
push
hlt
mov
jno
fsubrs
adc
pop
pop
dec
notb
inc
mov
call
push
add
sahf
cs
mov
sub
mov
out
popf
sbb
mov
insb
jns
sti
jle
cmpb
mov
inc
mov
clc
push
push
leave
rorl
sbb
push
outsb
rorl
jp
sbb
ret
and
cmp
jmp
dec
xchg
ljmp
ret
xchg
out
add
xor
push
xor
adc
jne
inc
sbb
faddl
mov
enter
rorl
lods
mov
repnz
insb
jmp
mov
jb
std
push
aam
sub
mov
ret
enter
dec
mov
fdiv
mov
cmp
sbb
inc
movl
push
sti
jmp
lds
jbe
dec
lods
mov
jmp
xor
adc
pushf
jp
jg
and
aad
inc
inc
sbb
sbb
dec
pmaddwd
in
adc
push
push
jnp
mov
push
jle
add
sub
jp
pop
inc
sub
mov
cs
or
push
jl
imulb
jb
cmp
ret
test
xchg
imul
sub
push
pop
cmp
ds
insl
adc
jnp
cmp
dec
xor
repz
mov
and
stos
inc
stc
dec
and
call
sbb
xor
mov
mov
test
push
repnz
aaa
lock
jle
int
in
addl
pop
in
cmp
lcall
add
xorb
mov
cmc
loope
std
xchg
push
or
jne
test
scas
pusha
sub
in
pop
xorl
leave
or
sub
pushaw
xchg
loop
cmc
adc
sbbl
in
cmp
jnp
add
enter
and
lret
out
ja
cmp
push
or
pop
imul
shll
std
aad
shufps
adc
mov
ja
cwtl
jge
mov
xor
pusha
addr16
push
sbb
leave
insb
add
dec
test
dec
insl
xchg
and
sub
fldt
data16
sbb
fnstsw
pushf
repz
mov
jnp
arpl
fstps
push
mov
test
int3
clc
add
loope
sbb
dec
cmovle
data16
cwtl
shr
test
mov
mov
add
daa
cld
cvtps2pd
das
pop
jnp
scas
test
int3
jg
inc
pop
ljmp
in
cs
pusha
inc
push
repz
cmp
xor
aad
ljmp
js
out
out
cltd
push
jb
aam
cld
sbb
fimuls
and
mov
decb
aam
mov
sub
call
and
sbb
cld
push
add
pop
xchg
enter
enter
out
ret
ret
dec
mov
and
shlb
sbb
jp
inc
in
cmpsl
push
inc
jl
out
jno
lds
insb
mov
je
adc
xchg
ss
xchg
xor
fdiv
cmpsl
cld
mov
adc
shl
xchg
addr16
je
dec
test
push
out
push
dec
add
jo
xor
enter
sub
xchg
xchg
addb
inc
std
flds
cltd
lds
adc
mov
push
popf
xor
outsl
cmp
stos
shlb
mov
loopne
gs
stos
mov
mov
popa
xor
leave
push
movsl
mov
sbb
inc
adc
es
dec
xor
cmp
and
add
in
cmp
imul
test
add
adc
in
mov
adcb
mov
test
in
jbe
loop
and
cmp
pop
lds
or
sub
roll
hlt
mov
xchg
in
insl
std
inc
lret
imul
je
js
mov
xor
fstps
jo
int
ljmp
hlt
mov
std
test
adc
sahf
dec
lahf
mov
cmp
and
pop
out
cmpsl
sbb
add
lret
or
jmp
das
sbb
pop
xor
xor
cli
push
push
push
out
sub
aad
sbb
jno
cmp
sbb
cmp
sbb
scas
loop
inc
and
fwait
xor
sarl
push
pop
sub
add
inc
xchg
xor
sbb
xor
insl
lret
addr16
stos
push
fisttpl
mov
mov
cmc
test
insl
int3
mov
outsb
mov
add
push
mov
or
mov
sahf
out
clc
mov
add
movsb
mov
xchg
ja
sarb
xor
cmp
mov
cmp
adc
mov
xor
mov
mov
ret
fcompl
dec
les
pop
movsb
cmp
jecxz
jnp
and
inc
in
aaa
into
push
stc
mov
adc
jg
xor
movsl
xor
cli
pushf
inc
pop
sbb
sbb
mov
mov
add
arpl
dec
xor
ljmp
and
scas
ficompl
lods
xchg
in
cmp
mov
lret
sub
outsl
mov
les
pop
ja
clc
pop
loop
mov
pop
sahf
dec
inc
and
adc
and
sbb
xor
lret
orl
jae
jl
arpl
dec
mov
rcll
mov
mov
das
sbb
movsb
lcall
mov
push
dec
in
pushf
inc
push
lds
inc
fs
shlb
jg
test
jb
mov
stc
xchg
xchg
in
xor
imul
cmc
cld
int
lods
andb
incw
mov
mov
sub
or
hlt
or
push
mov
cwtl
das
daa
stos
xchg
sub
dec
syscall
pop
inc
das
add
out
and
add
aas
negb
mov
nop
and
shll
jnp
test
flds
fldt
jecxz
pushf
mov
dec
adc
cmpb
pusha
adc
gs
dec
dec
xchg
sub
lods
jo
stos
mov
fsts
cmpsb
std
pop
sub
adc
fcoms
xchg
sub
and
or
dec
and
out
fsubrl
dec
lods
sbb
mov
mov
push
popf
lods
leave
pusha
fiadds
sahf
clc
xchg
xlat
and
insl
in
adc
scas
add
or
mov
sbb
rcrb
fisubrl
jno
xor
sbb
fimuls
xlat
fidivs
in
scas
mov
mov
adc
iret
cmp
mov
sbb
shlb
xchg
data16
test
xor
adc
sub
je
push
popf
xchg
cmp
xchg
push
push
add
pusha
or
dec
pop
cmp
ljmp
imul
icebp
iret
xchg
inc
iret
sbb
fcmovnb
sub
dec
out
dec
mov
addr16
sbb
imul
dec
mov
lea
mov
stos
inc
xchg
out
inc
lods
cltd
cmp
or
xor
rorb
xchg
ret
gs
and
sbb
sub
ljmp
mov
xlat
in
mov
push
xchg
cmpsl
andl
sbb
inc
pushf
sbb
jp
mov
cmp
cmpsb
pop
out
add
add
dec
dec
sarl
mov
adc
call
fucomi
popw
sahf
cwtl
test
pop
sahf
lock
dec
lds
nop
movsl
outsl
sub
mov
pop
aaa
mov
xor
sarb
adc
mov
insl
loopne
inc
addr16
cmp
mov
inc
test
repnz
push
jbe
and
fwait
adc
aas
int3
jb
fsubrs
cli
mov
xchg
fs
pop
jge
enter
dec
daa
in
dec
dec
aaa
or
cmp
stos
mov
mov
dec
pop
in
aam
test
loop
mov
ja
js
pushf
push
adc
or
ja
les
aam
jle
mov
inc
push
test
pop
cmpb
addr16
shrb
xor
cltd
adcl
cmp
sub
and
dec
mov
clc
fsub
jle
leave
xor
pusha
jg
mov
push
adc
stos
push
cwtl
pushf
lret
into
mov
fiaddl
lcall
jecxz
imul
sbb
add
mov
jb
aad
jb
push
cmp
in
dec
lods
cmpl
aam
mov
add
ret
jnp
mov
ds
mov
pop
sahf
xor
repz
mov
lcall
cwtl
sbb
xor
jmp
adc
out
dec
xchg
in
test
test
push
jle
dec
enter
or
pop
mov
out
mov
outsb
rorl
jmp
mov
fwait
sti
ja
jl
fs
jle
xlat
sub
sbb
jo
pop
lahf
stos
jl
jecxz
cld
popf
xor
mov
add
mov
adc
add
aam
in
pop
hlt
lea
adc
leavew
inc
dec
sbb
hlt
cs
cmp
bound
bound
dec
fistpll
pop
push
imul
xchg
sub
and
and
lcall
into
enter
sub
lods
insb
cmp
and
push
fdivs
jb
cs
aas
mov
ficomps
ljmp
add
mov
dec
insw
add
call
pop
lods
xchg
cltd
and
add
sbb
ja
fldl
inc
mov
imul
shl
or
xor
shl
inc
mov
mov
nop
fcmovnb
rcll
arpl
or
xchg
test
add
pop
dec
rcl
mov
lret
sbb
in
shlb
in
repz
sbb
ds
daa
jo
jae
pop
pop
xor
shl
adc
cmp
insb
cmpsb
mov
jae
sti
xchg
gs
or
add
inc
loope
mov
cwtl
popl
int
aas
hlt
sub
ss
mov
and
clc
mov
adc
bound
mov
fnstenv
mov
xor
popa
xchg
stc
pushf
add
test
push
jmp
sub
fiaddl
inc
aam
cld
into
das
cs
hlt
ja
mov
jmp
fstpl
adcb
out
inc
movsb
cmpsl
out
jmp
fcompl
dec
dec
jmp
add
jnp
test
repnz
ret
mov
xchg
es
call
cmc
out
popa
pop
adcl
pop
notb
outsl
add
imul
add
push
mov
jmp
sub
jmp
jne
jbe
and
dec
addl
pusha
sahf
ss
in
repnz
and
xor
iret
clc
and
and
and
push
jb
jne
pop
sub
iret
or
ret
mov
into
ret
mov
add
out
int3
xor
scas
into
pop
mov
movsl
inc
mov
fcmovnbe
push
mov
movsl
push
fmuls
mov
fmull
sub
push
stc
push
ret
pop
xchg
outsl
push
cmp
mov
sbb
stos
dec
mov
fcoml
call
arpl
outsb
push
test
imul
xchg
fs
pop
xlat
pop
addr16
mov
mov
clc
or
jle
sub
dec
pop
test
push
fwait
push
jmp
ja
inc
sar
inc
fisubrl
int3
popa
test
mov
shlb
test
adc
mov
iret
bound
inc
or
jnp
xorl
ret
xchg
sub
jno
mov
inc
or
sti
addr16
cwtl
sbb
test
std
shrb
adc
test
shl
or
stos
or
shlb
xor
push
cltd
addr16
lahf
push
dec
ljmp
imul
jnp
mov
popf
pop
xchg
xchg
cmp
add
mov
jne
cli
in
call
fsincos
push
addb
cmp
ds
sbb
push
sub
lock
daa
sti
cld
stos
rcll
ljmp
mulb
dec
add
jo
jb
outsb
sbb
aaa
into
imul
int3
fcomip
and
pop
mov
inc
sbb
testb
inc
or
jb
pop
idiv
mov
and
sub
mov
rorb
dec
xchg
aam
loope
pop
or
ljmp
fwait
mov
mov
jmp
out
mov
stc
out
adc
enter
scas
inc
mov
xchg
mov
ret
jg
push
movsb
xlat
jl
adc
sbb
sbb
lock
jecxz
or
xchg
xor
jo
adc
mov
jmp
push
sub
add
pop
repnz
inc
movb
popa
nop
inc
pop
sbb
push
dec
cmp
jp
out
jae
or
pop
clc
mov
add
nop
sub
push
xchg
stos
sub
inc
mov
push
frstor
inc
in
jb
das
inc
inc
or
xchg
mov
fistps
sbb
push
push
stos
inc
cmp
jge
repnz
out
cmpsl
cmp
es
lret
and
fcmove
aas
dec
sti
imul
cld
push
jbe
push
mov
add
pop
add
sbb
jno
sahf
ss
xchg
int
dec
inc
adc
mov
or
mov
lahf
mov
pop
cmpsl
ds
sbb
shrl
add
dec
loop
sti
push
fisubrs
imul
add
cmp
lret
mov
in
test
adc
or
movsb
cs
sqrtps
and
movsb
sti
dec
jbe
aas
mov
push
movl
leave
mov
mov
in
mov
addl
pop
pop
sahf
lea
in
xchg
xor
mov
mov
stos
mov
insb
mov
popl
adcl
das
xor
sub
sbb
sbb
mov
mov
add
fstpt
arpl
int3
lret
mov
subl
adc
into
out
pushf
ja
out
jae
and
inc
push
push
push
mov
and
xchg
sub
or
fdivr
pop
lods
cmpsl
das
inc
inc
stc
lods
adc
ficomps
jno
cmp
xchg
dec
cmp
dec
das
pop
mov
pop
loopne
sub
out
jbe
loope
dec
loopne
add
mov
popa
adc
mov
adc
xchg
js
xor
cld
xor
loop
lret
cltd
mov
aam
clc
jo
lods
lret
pop
repnz
int
cltd
mov
or
je
xchg
movsl
cmp
fldenv
fcomi
pop
push
jmp
cmpl
add
bound
out
dec
and
pushf
fs
stos
dec
push
cs
push
adc
adc
nop
sbb
cltd
xor
dec
mov
sbb
lcall
gs
mov
mov
mov
mov
push
sti
adc
out
sub
and
test
mov
adc
inc
push
daa
decl
jns
mov
sub
jae
fdivrl
loopne
sub
mov
ds
pushf
xor
jns
jnp
push
aaa
push
xchg
cli
adc
sbb
cmpsb
repnz
inc
out
add
mov
ficoms
andb
ds
inc
cli
pop
orl
xchg
sbb
fsubp
mov
fcoml
bound
test
lds
push
inc
fyl2x
dec
mov
mov
out
sub
insl
inc
jecxz
cmp
add
xor
fwait
mov
out
out
sub
cmp
lret
cmc
mov
sub
ret
aam
adc
mov
push
and
lea
mov
pop
or
sbb
mov
movsl
push
mov
cmp
and
pop
inc
pusha
divb
mov
loope
into
popf
xor
xchg
fidivl
pop
fdivs
add
inc
leave
pop
cmpsl
fistl
arpl
cmp
aad
gs
push
add
cmp
ret
sub
xor
xchg
insb
cmpsl
push
jp
lcall
pop
jne
nop
les
xor
ret
stos
pop
mov
data16
hlt
call
movsl
add
mov
pop
lcall
fwait
xchg
adcb
out
or
jo
adc
mov
sbb
pop
daa
psubq
inc
dec
in
inc
xchg
aaa
or
jnp
lret
push
pop
shll
sub
inc
jbe
int
xor
and
aaa
mov
cmp
jo
xchg
pusha
ja
xchg
mov
test
pop
roll
or
and
push
paddb
fisubl
sub
fcomi
rorb
mov
jbe
sub
sti
test
adc
inc
outsl
push
cltd
jl
mov
mov
out
scas
aas
lds
sub
pop
xchg
inc
lods
movsb
jo
in
movsb
addr16
inc
movsl
mov
ret
lock
adc
es
sbb
adc
shrl
xor
fsubrp
sbb
and
fadds
xchg
sahf
jecxz
sbb
sarl
cld
sbb
sbb
in
test
and
sub
mov
push
loop
add
pushf
mov
push
xchg
pop
sub
movsb
add
mov
jg
jmp
fstps
push
mov
jne
adc
xchg
jge
hlt
daa
pop
dec
aas
bound
or
xchg
pop
xchg
iret
cmpsb
xorl
xchg
adcb
mov
jle
stos
xchg
fwait
dec
cmp
mov
iret
nop
dec
mov
mov
add
pop
mov
dec
pop
das
in
lea
xchg
sub
jns
sub
mov
add
sahf
out
mov
pop
jb
insl
je
adc
mov
and
xchg
outsb
push
mov
cmc
insb
xchg
push
sti
jbe
cmp
test
mov
movsl
out
push
fmull
pop
sub
popf
pop
in
test
scas
add
ss
and
cld
mull
inc
and
cs
jo
sub
xor
movsb
add
dec
int3
fimuls
jg
lret
int3
sti
push
pop
repnz
or
push
sub
test
dec
dec
mov
in
cmp
push
add
mov
push
lcall
into
jne
out
add
std
jno
clc
dec
lret
inc
repnz
int
fcoms
push
daa
xor
test
mov
arpl
jp
add
call
sub
push
cmp
enter
call
loop
ret
sub
es
test
mov
dec
xchg
jl
mov
js
mov
adc
aad
sub
and
out
inc
outsb
and
mov
adc
jmp
jno
jmp
outsb
arpl
sti
xchg
call
sub
lcall
cwtl
inc
fwait
inc
call
ljmp
or
cwtl
sub
enter
sbb
inc
pushf
jo
jg
xchg
lgs
je
mov
fcomps
lea
mov
dec
xchg
and
or
xchg
jge
and
push
mov
aas
adc
jp
xchg
out
add
lahf
dec
rcrl
mov
aas
ret
mov
mov
lds
inc
xor
lods
jno
push
push
ret
sbb
lahf
sbb
xor
jns
iret
cmp
ljmp
int3
mov
cmpsb
inc
mov
sub
fnsave
popf
or
smsw
mov
mov
ja
pop
aaa
push
and
push
or
inc
ds
jle
pop
repz
pop
repz
notl
mov
jg
dec
popa
out
test
mov
cmc
sbb
dec
dec
jnp
mov
ret
maxps
test
rcrl
scas
mov
int
aam
dec
scas
fistps
xchg
pop
movsl
in
std
sbb
das
mov
jns
fnstsw
sbb
jbe
lret
into
fldl2t
jmp
scas
jb
pushf
mov
lret
cld
pop
and
cmc
in
test
nop
pop
cmpsb
in
xchg
daa
cmp
sbb
jno
xor
pusha
daa
mov
jo
xchg
or
pop
xchg
fcmovnu
outsb
ret
hlt
xor
cwtl
mov
test
pop
lret
sub
xchg
insl
jg
incb
sub
inc
fs
call
xor
xchg
push
add
xchg
lds
xchg
int3
mov
stos
rorb
cld
cmp
test
bound
sub
push
testl
and
xor
add
add
mov
sbb
or
les
mulb
movsl
lods
push
mov
xor
dec
cld
mov
sti
xchg
sbb
loop
cld
test
sarb
pop
fbstp
shll
xadd
in
out
insb
pop
ja
out
or
out
sbb
std
enter
cmp
rcl
lea
lds
mov
fldcw
pop
hlt
and
jnp
sti
sbb
test
insb
mov
dec
mov
cmp
insb
mov
popf
scas
mov
adc
lcall
shr
lods
ds
inc
aaa
or
mov
cmp
mov
aad
and
scas
mov
and
gs
test
lea
fnstcw
sbb
add
in
cwtl
cwtl
jb
cmp
ret
add
fistl
insb
shlb
xchg
push
out
adc
arpl
mov
mov
test
add
daa
push
inc
or
ds
jge
out
out
repnz
stos
bound
dec
cld
jp
mull
sub
jno
stos
jg
out
lods
push
inc
enter
scas
inc
or
jmp
adc
cmp
pop
outsb
dec
das
add
movsb
mov
xchg
jge
inc
lcall
loopne
push
push
mov
inc
cmp
pop
int
rclb
and
pop
movsb
mov
mov
add
daa
and
dec
pop
sub
lock
aaa
cmp
test
dec
sub
aas
insl
pop
push
test
fstl
xor
sub
mov
out
test
cli
push
sbb
fstpl
jbe
mov
dec
ds
sub
pop
icebp
sbb
xor
pop
movnti
pop
subb
jge
cld
push
stos
sbb
gs
insb
fs
fadd
sub
jns
cld
xchg
xchg
movsl
mov
arpl
sbb
lahf
dec
inc
pusha
add
movsl
fwait
aas
xlat
std
dec
lret
outsb
jae
jge
and
mov
outsb
pop
adc
aaa
iret
push
movb
les
dec
jge
outsb
ljmp
mov
adc
icebp
cmc
mull
stc
pop
mov
cmp
mov
mov
lcall
sbb
xchg
mov
pop
mov
sbb
jp
pop
mov
and
lret
pop
outsl
sahf
xlat
filds
rol
xor
jbe
mov
daa
adc
sti
pop
subl
mov
inc
fists
cmpsl
jns
mov
fsub
sbb
in
aaa
std
movsb
in
data16
lret
sub
push
mov
mov
leave
xor
xchg
and
mov
out
add
sahf
pop
test
repz
in
lcall
in
pop
outsl
cwtl
dec
cltd
out
xchg
inc
scas
dec
inc
or
stc
stos
in
dec
gs
sahf
mov
jg
adc
rclb
mov
push
fbstp
fiadds
mov
and
loopne
and
lret
dec
mov
fstp
aam
out
arpl
pop
xchg
cwtl
and
call
xchg
push
aas
or
or
mov
fwait
lret
dec
cmp
xor
insl
arpl
lahf
pop
pop
insl
push
ss
jns
nop
inc
jecxz
mov
xchg
mov
push
push
mov
popl
dec
xchg
rcl
pop
sub
dec
loop
bound
cmp
xchg
in
inc
adc
cs
fstpl
xchg
dec
mov
aaa
clc
daa
push
mov
xchg
int
mov
xchg
shll
mov
and
mov
imul
xchg
xchg
adcb
cmpsb
push
lds
out
mov
inc
jnp
mov
out
adc
inc
mov
xor
hlt
lea
ds
out
pop
daa
push
or
mov
or
jno
imul
fmulp
jmp
divb
test
add
out
sub
and
orb
pusha
aaa
mov
xchg
mov
lret
call
lods
add
imul
pusha
push
leave
fstps
pop
inc
sti
push
repnz
popa
pop
ret
push
jle
push
push
mov
stc
sub
adc
jecxz
fs
stos
adc
jmp
aas
outsb
push
sbb
jns
inc
call
enter
mov
cmpsl
add
popf
xor
or
sbb
xor
movsl
sbb
into
mov
lret
xor
dec
mov
inc
and
pop
jl
lret
sub
stc
std
fldt
jo
lea
dec
and
jecxz
mov
cli
mov
ds
add
inc
fdivrl
jle
add
clc
es
pop
pusha
fildl
xchg
in
jl
pop
in
jge
clc
aas
mov
mov
movsl
pushf
das
cwtl
lahf
dec
test
std
mov
or
inc
mov
daa
jle
add
or
out
pop
adcb
xchg
pop
insl
lds
shrb
int
jo
pop
jne
mov
push
in
cmp
mov
int3
adc
std
cmp
add
iret
add
rcrl
pop
insl
cmp
aaa
cltd
push
mov
mov
cmpl
es
cmp
jmp
fisubs
mov
push
pxor
xchg
jmp
int
dec
pop
hlt
xor
mov
xchg
sub
mov
or
push
jno
mov
xchg
loopne
pop
addb
push
jle
outsl
xor
dec
fsubr
lret
xchg
jo
sbb
or
enter
lahf
aad
pop
mov
inc
out
xorl
iret
jg
or
dec
js
push
mov
jge
xchg
idivl
sub
sti
pop
popa
jle
mov
push
cwtl
pop
and
shrb
fwait
repnz
fsts
iret
test
xor
mov
xor
cmc
aam
jo
lahf
clc
stos
push
sub
inc
pop
ja
int3
push
call
cmp
jmp
mov
lods
jb
mov
jle
js
jbe
dec
sahf
fwait
inc
fisubs
inc
gs
clc
aad
mov
push
mov
inc
fstps
jmp
test
or
or
shlb
inc
sub
and
negl
insl
movd
loop
nop
jl
dec
jne
cmp
cmp
adc
outsl
negl
lret
mov
in
imulb
jecxz
jbe
pop
add
or
incl
dec
pop
or
stos
dec
in
cmp
mov
sub
loope
xchg
shll
xor
outsl
movsl
push
int3
adc
dec
and
dec
add
lahf
ffreep
mov
mov
mov
fcmovb
cmpsl
jno
test
and
inc
mov
addr16
xor
inc
call
adc
inc
mov
xchg
push
insb
sub
rol
aaa
ja
xor
jb
lds
repz
fwait
cmp
rcrb
sub
or
testl
jno
lcall
stc
jo
je
pushf
shlb
cmpsl
mov
out
rorb
outsl
inc
xor
icebp
xchg
adc
psubsb
push
cltd
or
cs
fnstenv
mov
add
jecxz
mov
mov
popf
jecxz
push
fwait
daa
ds
jge
add
rorl
or
mov
inc
mov
andw
call
push
out
mov
outsl
push
add
cmc
fbld
and
jne
sub
lret
xchg
jns
add
mov
mov
dec
enter
inc
jae
clts
dec
mov
xchg
sub
cmp
inc
inc
mov
push
xor
dec
ss
inc
out
inc
pop
ret
dec
shl
add
je
sub
xchg
insl
jge
ret
loop
adc
mov
out
sub
orl
pop
sbb
jg
pushf
outsl
ljmp
pop
mov
jmp
cmp
mov
nop
iret
fcmovnb
sub
sbb
gs
aam
mov
out
dec
js
insb
in
imul
and
push
aas
cmpsl
mov
xor
sbb
shll
jmp
dec
rorb
pop
mov
bound
lods
inc
adcl
cli
lock
jecxz
ret
pop
scas
test
sbb
xchg
insb
add
pop
testl
jbe
stc
cmpsl
and
push
mov
pop
ja
cmp
jae
clc
daa
scas
add
cmp
xor
repz
dec
rol
xor
push
orb
clc
ds
dec
xchg
fs
mov
test
subb
fwait
xor
icebp
push
jge
jmp
jge
fidivs
jae
cs
mov
fs
dec
mov
sub
mov
dec
push
lods
imul
scas
dec
mov
inc
negb
je
jl
out
and
incl
repz
ja
repz
or
push
or
pop
push
or
sub
fisubs
rcl
hlt
pop
lds
push
sbb
fsubr
xchg
mov
andb
sahf
sbb
mov
xchg
aas
mov
rcr
pop
dec
dec
arpl
cmp
movsb
xor
cld
inc
and
pop
call
aam
jns
jnp
movsb
repz
xchg
add
dec
icebp
stc
inc
aam
dec
pop
jne
pushf
xchg
fistpl
repnz
rorb
adc
in
mov
movsl
aas
push
idivb
mov
ljmp
xlat
sub
mov
sub
enter
mov
adc
je
inc
and
lcall
sar
dec
decl
xchg
pop
dec
pushf
test
aam
out
add
mov
xchg
mov
lcall
cmp
xor
rclb
sub
daa
mov
mov
inc
les
jg
orb
pop
int3
filds
movsl
xor
popf
push
jg
mov
xor
lock
popf
jge
mov
in
mov
sub
push
and
push
xor
xor
cmc
cltd
and
das
xchg
xchg
sub
pop
pop
mov
jp
lds
cmp
xchg
mov
inc
rcrl
mov
inc
xchg
test
cli
repz
stos
sub
popaw
lret
xor
dec
xchg
inc
loop
inc
add
mov
loopne
sbb
cmpsl
xor
pop
flds
lahf
push
sahf
and
mov
call
jb
or
sahf
xchg
popa
mov
jmp
cmp
imul
shrb
pop
add
pop
dec
push
or
les
fwait
fwait
test
cmp
movsl
cmp
jg
cmp
mov
pushf
and
sub
dec
mov
jb
jg
fcoms
subb
mov
dec
mov
movsb
fs
sub
cmp
mov
sbb
xchg
mov
sbb
sbb
sub
dec
mov
fcomps
sti
sbb
xchg
sub
subl
test
insl
mov
sbb
mov
cs
add
jl
ret
mov
jecxz
xor
push
mov
in
xchg
dec
fiaddl
out
dec
sahf
shrb
xchg
jns
std
mov
mov
add
lods
aam
push
push
iret
fidivl
inc
cmp
clc
pop
movsl
ss
add
out
mov
fnstenv
mulb
shlb
push
lods
inc
xchg
cmp
mov
movsb
and
ss
scas
cmpsl
xor
adc
testb
and
fwait
push
cltd
mov
adc
je
ds
sti
sarb
pop
xor
ret
fdivl
jmp
push
mov
lahf
push
outsb
mov
into
loop
jno
imul
sbb
mov
shlb
push
adc
fstps
jmp
movsl
cld
cmpb
data16
ja
push
or
jg
aad
jns
nop
jae
pop
out
cmpl
cli
mov
fidivs
stc
and
xorb
sbb
add
sahf
mov
shlb
movd
int3
cs
mov
push
pop
or
jg
movsl
icebp
xchg
insl
popf
je
bound
iret
add
xchg
je
in
test
rolb
mov
roll
das
movsl
and
inc
sar
jns
or
das
popf
inc
pop
leave
jl
sti
cmp
sub
or
add
adc
cmp
pop
mov
mov
inc
mov
sarb
xor
lret
stc
adc
pop
arpl
mov
std
movsl
addr16
ret
mov
jge
add
cld
mov
jg
mov
dec
lret
gs
imul
or
gs
pop
push
push
sub
aas
jns
push
stos
pushf
sti
xchg
lret
out
rol
daa
mov
mov
dec
or
jecxz
call
dec
jns
test
enter
outsl
or
into
xchg
add
lock
and
sbb
ficompl
icebp
jg
lock
loop
outsl
imul
xchg
jl
sub
add
repnz
sub
fwait
sub
scas
xor
js
cs
fwait
dec
scas
jbe
js
and
adc
hlt
pop
fstl
dec
pop
in
cmp
sbb
cli
sbb
cs
out
test
cs
and
ret
outsb
push
push
mov
mov
movsb
vmwrite
movsb
push
fsubr
ljmp
lret
stc
adc
mov
jne
addb
mov
jp
inc
mov
mov
fsubr
dec
stos
xchg
icebp
ficomps
sti
stos
adc
mov
arpl
pop
fnstenv
dec
loope
push
repz
adc
roll
out
inc
add
dec
cmc
push
aas
sub
and
cmp
fs
add
jl
push
scas
push
nop
push
sti
mov
jecxz
stc
cli
mov
mov
mov
int3
push
xchg
sub
iret
and
movlps
call
rcl
pop
jg
or
mov
push
jbe
inc
xlat
dec
xchg
and
psadbw
push
shrl
stc
daa
gs
data16
pop
sub
scas
pop
loopne
sub
fcmove
loope
jecxz
scas
sub
insl
int3
idiv
out
dec
cwtl
dec
pop
into
es
loopne
mov
clc
cwtl
leave
push
loop
push
imul
outsl
fiadds
xchg
adc
arpl
xchg
scas
hlt
xchg
mov
push
nop
cli
sbb
insb
add
repnz
and
cmpsb
xchg
pop
mov
mov
orb
fsqrt
lea
ja
jecxz
adc
data16
dec
cmpsl
mov
sbb
lahf
sbb
daa
leave
ljmp
inc
rdpmc
fidivrs
sbb
lahf
pop
adc
repnz
dec
or
push
inc
lods
hlt
cmp
xor
lds
pop
cmc
outsb
push
push
out
scas
icebp
add
push
leave
insb
add
test
and
push
or
fmulp
xchg
mov
lds
mov
adc
cli
js
sub
jge
lock
jb
std
mov
jno
pop
cmp
jmp
or
shll
adc
and
sub
jmp
xchg
mov
movsl
in
es
insl
push
mov
notl
mov
stos
fsubr
add
repz
jl
inc
fisubs
loopne
nop
popf
xchg
push
adc
dec
repnz
fs
movsb
mov
leave
pop
mov
jb
mov
loope
pop
insb
rolb
sbb
mov
pop
test
add
sub
push
cmp
sbb
dec
int
jg
in
and
sbb
incl
cmp
imul
and
jo
and
sbb
mov
arpl
fstpl
mov
pusha
xlat
into
fiadds
fldcw
dec
and
and
adc
ss
and
mov
jg
mov
mov
cmpsl
test
add
es
cmc
mov
rcrl
sbb
cmp
in
cli
jg
mov
imul
arpl
or
mov
mov
loopne
or
jno
xchg
mov
mov
mov
or
push
sbb
jmp
addr16
imul
mov
mov
sti
xchg
sub
movsl
or
popf
mov
ret
pop
dec
fnstenv
lods
inc
sub
inc
push
insl
adc
out
test
mov
call
in
nop
js
imul
gs
mov
in
loop
dec
cltd
out
insl
xchg
or
inc
stos
mov
sahf
mov
jecxz
xor
idivl
xlat
cli
xchg
mov
imul
fs
lods
xchg
sarl
inc
out
shll
nop
push
xchg
dec
push
testl
pop
inc
mov
fisttpl
xchg
pop
outsl
jge
jle
xchg
fidivs
dec
sub
mov
loop
pop
pop
sahf
dec
push
insl
inc
cmp
pop
in
test
mov
inc
push
lea
mov
and
fcomi
mov
jecxz
jecxz
int3
ss
repnz
out
mov
sbb
cmp
shrb
jne
repnz
aas
imul
push
loop
iret
adc
and
xchg
aaa
adc
adc
xchg
push
jns
fnstcw
iret
loopne
insl
notl
shlb
fisubrl
sub
cs
fwait
int3
inc
repnz
shlb
jmp
lcall
mov
add
into
gs
fisttpl
jnp
cltd
lods
outsb
iret
cwtl
push
jae
outsl
negl
aam
or
daa
or
xchg
push
insb
dec
fidivrl
push
fisubs
mov
cmpsb
mov
shll
and
fldcw
in
dec
fiadds
imul
mov
ret
or
cmp
jnp
lcall
push
fiadds
gs
mov
inc
lahf
dec
lret
sbbb
xchg
cld
call
lahf
test
arpl
int
sbb
push
test
andl
cmp
cmc
mov
daa
cli
test
insl
push
inc
dec
add
mov
adc
test
pushf
int3
mov
jecxz
or
out
iret
loop
jbe
mov
jno
xor
dec
call
sub
adc
les
out
sub
add
jne
mulb
mov
pop
es
fistps
negb
push
add
sbb
mov
or
lret
aaa
mov
mov
add
test
in
jge
xor
mov
push
rcl
or
push
stos
ljmp
push
scas
cmp
dec
jecxz
pushf
scas
pusha
stos
xor
enter
pop
jmp
push
adc
fsubrs
pop
jle
cld
shll
inc
arpl
mov
xchg
add
mov
adcl
out
sahf
jmp
test
push
inc
fnstcw
pop
imul
cmp
lcall
mov
std
bsf
cs
std
jmp
add
je
ret
mov
jmp
stc
xorb
pop
data16
pusha
cwtl
or
fsubrl
inc
add
sti
fwait
inc
daa
jmp
addr16
adc
xchg
and
add
xlat
mov
stc
imul
xor
iret
lds
and
cmp
mov
lds
shlb
sbb
ror
sbb
jb
sarl
dec
pop
cmp
imul
fs
push
or
scas
test
xchg
sarl
xor
adc
pop
ljmp
aad
sarl
push
or
xor
je
push
pusha
and
leave
cmc
das
outsb
test
cmp
push
add
mov
jo
and
lahf
pop
fistpl
gs
push
fwait
inc
xchg
mov
inc
sub
repz
jno
pop
pop
add
push
call
sbb
je
in
arpl
xor
xlat
outsb
out
ret
push
sbb
adc
pop
dec
inc
push
movsl
ds
sbb
mov
xor
fdivrl
pop
in
sbb
nop
pop
xchg
stos
repz
pop
mov
add
lods
xchg
sub
popf
adc
enter
and
data16
mov
cmpsl
jle
inc
lods
hlt
jne
ret
mov
and
sub
xchg
movsb
jno
call
and
jbe
mov
and
jo
mov
stc
nop
or
aaa
into
cld
sub
not
rep
sub
add
ja
mov
and
in
lret
inc
fbstp
shlb
lret
mov
inc
std
flds
xchg
test
mov
or
dec
mov
je
jnp
pop
gs
ss
pusha
js
adc
das
incl
nop
outsl
adc
xchg
inc
cwtl
dec
add
insb
stc
in
cmp
adc
xor
push
fs
mov
sbb
stos
jne
push
dec
fdiv
clc
jae
jge
xchg
filds
xchg
and
xlat
scas
rorb
rol
inc
pop
cmc
jno
adc
add
jp
je
and
sbb
negb
lcall
push
imul
ret
in
mov
sbb
sub
sarb
push
sub
lods
fidivl
clc
inc
mov
incb
inc
lock
mov
push
sahf
popf
stos
iret
ja
or
inc
xchg
adc
ss
push
cmp
mov
out
inc
data16
sub
cmp
dec
or
mov
rol
stos
sub
scas
sub
mov
lret
cmp
jecxz
out
fwait
add
pop
jb
push
test
nop
and
ret
cmp
or
test
xchg
movsb
jmp
jge
pop
addr16
push
jo
lock
pop
imul
dec
loopne
daa
cmp
lods
ret
xchg
mov
xor
lods
mov
inc
push
lods
cmp
xchg
rclb
aas
xor
pop
hlt
loopne
pop
xchg
rorb
imul
mov
sbb
repnz
add
int
jp
test
pop
cltd
movsl
test
movsb
std
jno
adc
pop
insb
orb
mov
add
sbb
adc
popf
pop
adc
inc
jl
in
push
fbld
daa
xor
inc
pop
inc
push
lods
icebp
add
dec
pop
in
or
imul
jge
cmp
xchg
bound
mov
xchg
mov
test
ja
je
push
sbb
dec
fistps
mov
lahf
lods
jae
xor
push
fisttps
pop
out
cmp
jbe
pop
rcl
cmp
fadd
mov
shll
test
xor
add
sub
adc
push
adc
leave
xor
sub
add
push
movsb
push
stos
mov
data16
aam
fildl
mov
sub
call
mov
mov
sbb
aam
jns
add
pop
ss
in
xchg
mov
lahf
jnp
les
adc
lods
xchg
cmp
mov
mov
jmp
mov
imul
shr
into
jmp
mov
fnsave
fwait
dec
daa
adc
loope
test
lea
movsb
add
lods
dec
aam
jae
push
xor
jle,pn
lret
subl
nop
sbb
sbb
mov
dec
das
cmpsb
nop
sbb
dec
icebp
cmp
xor
rcrl
mov
loop
ds
test
mov
push
gs
ds
sbbb
es
push
xchg
stos
adc
lds
inc
xlat
out
jno
push
test
adc
dec
mov
pop
in
xor
test
das
sti
mov
xlat
xchg
sub
or
add
mov
sti
or
mov
int
jg
push
xor
movsb
jae
pop
adc
push
ds
xchg
movsb
dec
sbb
adc
cmp
aaa
add
and
hlt
jge
test
les
popf
or
imul
popa
mov
sbbl
and
xor
pop
pop
xchg
inc
fimuls
imul
sbb
je
pop
in
cmp
jg
das
dec
aam
fwait
movb
inc
xchg
icebp
test
iret
outsl
into
repnz
sarl
push
cmpsl
inc
mov
jle
lds
loope
gs
mov
in
mov
int3
mov
loopne
or
jb
pop
std
sbb
loopne
push
mov
fdivs
movsl
icebp
push
scas
mov
xchg
bound
jge
mov
inc
mov
mov
cltd
add
imul
addr16
adc
adc
push
arpl
enter
popf
jo
daa
orl
mov
mov
mov
fidivs
notl
daa
outsl
xchg
sub
insl
adc
adc
insb
icebp
mov
sub
or
push
mov
ficoml
bound
lcall
mov
popf
mov
sar
std
orl
cmpsb
andl
insb
sub
ljmp
insb
add
inc
or
xchg
loop
jns
movsl
add
fucomi
inc
lahf
cli
hlt
xchg
dec
jg
mov
addr16
test
subb
or
jne
adc
xor
push
push
out
aam
roll
popf
add
sti
roll
popf
lods
and
nop
push
fisubs
les
movsb
cmp
js
ret
test
in
ljmp
div
or
xor
in
pop
ret
in
mov
cmp
or
mov
adc
push
out
jo
and
jmp
testb
movsl
jb
add
out
fsubrl
and
nop
inc
mov
insb
insl
inc
mov
cmpsb
pop
jbe
and
adc
imul
je
fldt
add
jbe
and
push
xor
pusha
repnz
mov
hlt
ds
push
or
xor
out
lea
mov
and
sub
sub
xlat
dec
cmp
cmp
mov
outsl
inc
mov
inc
jae
push
cmp
aam
xchg
sbb
cmp
ss
int3
je
cmp
adc
movsb
outsb
xor
pop
js
imul
stos
dec
shlb
lock
loope
popa
jne
iret
push
ljmp
out
adc
mov
fisubl
adc
add
pop
push
mov
mov
lock
cs
stc
ja
xchg
test
dec
gs
sti
xchg
dec
dec
loopne
out
cmc
push
mov
mov
pushf
mov
cmp
inc
mov
mov
not
rorl
inc
adc
in
adcl
repnz
push
addl
fdivrs
insl
add
cli
dec
test
in
mov
fsubl
mov
sahf
mov
jg
xlat
push
je
pop
testb
inc
and
mov
icebp
jecxz
stos
xchg
and
cmpsb
cmp
lret
bound
xor
xor
mov
add
sub
mov
mov
xor
pushf
iret
orb
fldcw
mov
popa
fdivl
pop
jns
faddl
aaa
dec
arpl
xchg
js
inc
sbb
fwait
add
cmpsl
pop
rclb
xchg
jge
jle
iret
addr16
scas
mov
stc
imul
and
cmp
dec
cmpsb
pop
lods
out
pop
jp
popf
aas
enter
xchg
popf
inc
dec
aas
fisubl
push
shrl
subl
inc
scas
pusha
dec
pushf
inc
addr16
adc
and
movsl
push
rep
mov
cmpsb
fiaddl
sub
fcomps
push
test
or
xor
xorl
or
dec
dec
cld
jne
xchg
sub
cmp
dec
insb
jp
mov
mov
mov
sub
movsl
xor
cli
aaa
jno
adc
repz
stos
mov
adc
cwtl
push
xchg
dec
xor
mov
pop
shrb
adc
sbb
jb
inc
stos
xchg
jb
xchg
adc
mov
data16
dec
dec
aam
lcall
daa
clc
or
insb
dec
movsb
adc
jbe
leave
bound
je
dec
insb
jl
in
bound
mov
test
shl
nop
mov
cmp
xchg
xchg
jno
inc
scas
add
loop
jle
xor
sub
mov
enter
xor
and
pop
xor
jo
jp
push
lcall
inc
out
cmpsb
or
sbb
mov
xchg
cmp
sbb
adc
lahf
test
movsb
and
movsl
sarl
dec
jl
jne
push
sub
inc
adc
inc
lock
jmp
push
pop
mov
sti
out
outsb
or
xorl
mov
cmpsb
fcompp
cli
mov
xchg
jno
enter
nop
inc
xchg
out
cmc
mov
xor
adc
test
inc
divl
fistpll
adc
mov
add
add
lahf
mov
xchg
push
hlt
jae
mov
imul
lret
sti
aam
xchg
cmpsb
jp
fadd
jnp
insb
dec
add
mov
push
vmovlpd
out
dec
repz
outsl
sub
lahf
sub
pushf
scas
xor
adc
mov
insl
test
ss
loop
lea
mov
daa
movsl
sbb
push
in
seta
cmpsb
insl
push
int3
arpl
cmp
mov
fdivl
in
mov
jg
add
movsl
sub
je
add
mov
xor
out
push
movsb
scas
sub
add
dec
pushf
adc
sbb
dec
jmp
xchg
scas
shll
xchg
dec
and
pop
xchg
and
leave
stos
lret
sbb
push
rsm
mov
adc
sub
dec
jmp
ja
lcall
out
adc
inc
jb
scas
addl
sub
mov
cltd
jbe
mov
mov
jmp
xor
cmc
mov
ret
dec
cli
shl
push
fnstenv
das
lods
mov
js
push
sbb
call
les
inc
lds
mov
pop
push
pop
push
hlt
add
in
push
push
xchg
leave
je
xchg
call
mov
arpl
gs
adcl
test
or
cmpsl
push
fsubrp
addb
or
mov
or
lret
mov
jb
fsts
aas
dec
sub
popf
stc
sub
sub
daa
cltd
xor
jb
inc
icebp
dec
leave
xor
mov
dec
in
jne
mov
jae
xchg
push
inc
icebp
inc
hlt
sbb
in
int
mov
ja
cmpsb
or
pushf
mov
mov
sarb
xor
add
adc
addb
fs
addl
jno
jle
inc
call
stc
or
mov
mov
adc
xor
sub
lods
xor
push
and
xchg
sbb
and
es
inc
or
fstl
xchg
in
sub
mov
dec
bound
jnp
sbb
xchg
pop
xchg
pushf
fisubrs
inc
insl
cmc
cmpsb
pop
adcl
push
scas
aam
pop
subb
mov
mov
inc
sub
jns
dec
mov
imul
sub
xchg
nop
inc
call
int
push
dec
push
pop
gs
cmpsb
jae
lcall
rcrl
cmpb
mov
xor
or
cmp
mov
cmpsl
add
aam
sahf
and
add
leave
dec
data16
jmp
dec
add
mov
push
jmp
ror
push
sti
xor
aaa
insb
jle
loopne
xor
xchg
pop
mov
push
fildll
arpl
in
push
or
push
lret
cld
xor
mov
xor
roll
fnsave
and
ljmp
data16
leave
or
add
xor
arpl
xchg
mov
xchg
lahf
stos
ret
and
pop
out
clc
adc
repz
sti
pop
inc
pmulhw
or
insb
insb
das
lods
adc
push
icebp
cmp
sub
cltd
cmp
scas
lock
popa
mov
gs
addr16
xchg
ficomps
insl
sub
pop
into
stos
call
pop
cmpsl
sbb
lds
xor
aas
pushf
lods
jo
dec
scas
aas
push
cmc
into
ds
lods
mov
jns
out
outsb
pop
add
lods
mulb
mov
out
push
rolb
clc
aad
push
inc
pushf
mov
dec
ss
inc
sbb
in
daa
je
mov
cmp
jecxz
out
aam
mov
scas
mov
sbb
ss
sub
mov
ret
lahf
cwtl
loope
in
js
pusha
shll
mov
mov
mov
cs
popa
sahf
daa
xor
cltd
inc
sahf
sti
sti
out
mov
add
out
push
imul
cs
jne
cltd
aaa
jg
cwtl
loope
mov
inc
inc
add
arpl
dec
xchg
repnz
into
aam
ret
jns
cmp
sbb
and
jbe
mov
fnstenv
mov
shrb
or
in
ja
ficomps
ret
lcall
in
stos
push
mov
lods
lahf
xchg
push
insb
ret
add
aaa
xlat
xor
in
scas
cmp
adc
jo
mov
xchg
daa
push
lcall
pop
xchg
mov
sbb
addb
cwtl
dec
rorl
pop
cmp
push
jnp
dec
dec
sbb
ss
xchg
ss
mov
dec
arpl
cli
inc
mov
lret
outsl
push
mov
in
xchg
jg
mov
mov
mov
pop
aad
pushl
dec
sahf
clc
stos
stos
in
inc
in
dec
je
mov
xor
es
or
cmp
add
mov
push
es
jo
daa
clc
cmpsl
or
test
cli
adc
xor
sub
in
add
test
mov
jo
iret
dec
out
in
pop
or
fnstenv
pop
pusha
idivl
mov
subl
pop
cmpsl
movsb
push
sub
adc
mov
jb
sub
pop
add
or
pop
sti
mov
mov
jle
out
jb
popa
movsb
out
repz
jo
aas
sahf
cmpl
test
movsb
and
push
inc
test
dec
fildl
jmp
jmp
jns
cmpl
nop
shlb
mov
iret
jbe
pop
xchg
clc
xchg
mov
pushf
jo
cmc
outsb
add
fbld
insb
addb
inc
std
mov
repz
mov
sbb
inc
pop
push
push
mov
ret
imul
add
aaa
pop
xchg
fimuls
cmp
cmpsl
in
xchg
sbb
icebp
sbb
jmp
inc
loop
or
out
or
pop
mov
cmpsb
dec
aaa
into
xchg
push
sub
into
inc
pop
test
cmpsl
push
lods
sahf
scas
sti
mov
jb
aad
inc
shl
notl
inc
loope
cli
setl
xor
xchg
leave
stos
pop
cld
lcall
cmp
test
js
out
xchg
cli
adc
int
rcrl
sbb
push
insl
xchg
add
stc
stos
lret
out
lock
and
push
fcom
mov
mov
pop
aam
xchg
js
pushl
push
aaa
jge
mov
adc
xor
mov
or
movsl
icebp
scas
xor
xor
leave
or
scas
sub
push
push
mov
movsl
arpl
mov
push
mov
cmp
test
movsb
fsubl
clc
jmp
sahf
clc
pushf
mov
mov
push
addb
adc
inc
stos
sahf
stc
or
insl
sub
subb
in
jae
lret
cltd
sub
ja
or
cmp
in
out
nop
gs
sub
test
xor
shrb
loop
push
repz
shlb
cwtl
push
dec
lret
dec
hlt
pop
or
pop
and
rcll
imul
inc
out
cmp
popf
in
cwtl
xchg
jecxz
stc
test
scas
hlt
cmp
mov
or
jge
clc
mov
filds
or
push
push
mov
or
lahf
cmp
pop
and
cs
pop
sub
sub
dec
out
rcrl
lods
scas
js
test
iret
ss
jle
xchg
dec
and
hlt
enter
or
adc
movsl
jmp
mov
inc
scas
jmp
fildl
ret
pop
rcrb
mov
lea
cmp
pop
jecxz
fsubrl
mov
lret
cld
outsl
sbb
dec
sbb
push
jnp
sub
and
leave
int
negb
xchg
push
mov
adc
sub
pop
cmp
insl
mov
xchg
mov
jmp
sbb
outsl
leave
sarb
andl
mov
xchg
cs
cmc
aad
shll
popf
sub
push
inc
fs
inc
and
cmp
sub
mov
cli
cmp
test
into
sbb
data16
es
mov
aam
mov
sarb
sbb
push
and
cld
push
add
addr16
mov
jle
nop
push
inc
shlb
imul
cld
out
aaa
cli
pop
shll
adc
xor
cmp
dec
cmp
sub
push
mov
xor
and
pop
jge
dec
mov
jne
leave
pusha
fiaddl
jb
hlt
mov
or
ds
push
in
popf
mov
in
mov
out
jo
fidivrl
xchg
in
adc
xchg
out
aaa
mov
inc
lods
repnz
mov
adc
imul
add
jp
mov
and
enter
popa
mov
mov
cmp
xor
test
inc
or
jmp
test
call
pop
mov
mov
cmpsb
jo
ds
dec
mov
rolb
leave
lods
in
cmpsb
rorl
mov
arpl
cs
das
movb
shll
icebp
xor
daa
iret
mov
fidivl
int
cli
xchg
out
ljmp
cltd
iret
mov
mov
fimull
sbb
shlb
inc
enter
les
enter
inc
stos
pop
xor
mov
pop
fbstp
frstor
adc
sti
mov
mov
mov
add
mov
insl
mov
mov
sbbl
or
icebp
sbb
xor
cmp
call
jle
adc
jb
loope
pop
scas
and
loopne
xor
sub
xchg
xchg
xchg
mov
lcall
adc
xor
in
ffree
xor
dec
add
jb
mov
shl
nop
roll
call
aas
add
jne
fldcw
mov
test
enter
inc
ret
andb
cmpsb
imul
sbb
call
pop
scas
fiadds
ret
out
sbb
stos
inc
data16
inc
test
mov
jmp
popf
xchg
push
xor
mov
xchg
sub
push
mov
xchg
dec
loop
jecxz
cld
das
subl
pushf
sbb
ljmp
xor
jl
call
insl
xchg
in
push
jecxz
ret
loopne
jg
sub
and
test
mov
jg,pt
mov
insb
mov
xlat
fisttps
push
xor
rcll
fiadds
pushf
in
adc
xor
xlat
outsl
jecxz
mov
sbb
dec
mov
fstpl
jl
lcall
and
add
sub
or
sbb
mov
cmc
roll
jp
mov
mov
fists
es
incl
fisubl
adc
mov
jle
mov
xchg
sub
xchg
dec
mov
dec
aas
push
out
mov
xor
and
sti
and
xchg
inc
repz
and
ret
jle
rcrl
dec
pop
cwtl
mov
sahf
fdivs
adc
pop
jb
rolb
mov
mov
lahf
jo
jl
int
arpl
aad
leave
es
into
divl
test
jo
cmp
popa
cmp
imul
adc
jge
push
in
xchg
mov
cltd
movsb
inc
and
mov
or
in
imulb
inc
int3
fildl
push
add
arpl
push
jne
movsb
mov
mov
push
jg
test
add
int3
leave
mov
sub
popf
in
out
in
push
mov
or
cmpl
dec
xor
shl
xchg
pop
dec
cmp
push
xor
scas
and
push
insl
mov
clc
mov
sbb
pop
mov
add
lahf
xchg
cld
sbb
sub
lret
lret
call
aam
mov
enter
in
xchg
inc
jge
inc
arpl
and
xor
push
cmp
sbb
sbbl
jns
mov
mov
stos
ja
aad
aas
xchg
popa
adc
insb
jne
jle
push
pop
call
les
outsl
push
push
loope
ja
jg
xor
xor
ljmp
push
fcompl
fdivrs
inc
arpl
xchg
in
pop
pop
and
stos
cmpsl
xor
in
popa
xor
and
mov
jecxz
jns
cmp
jnp
popf
inc
pushf
xchg
pop
cld
test
ss
leave
push
pop
mov
les
ss
stos
stos
stos
iret
xchg
fistpl
test
and
jns
cwtl
xchg
xchg
add
jmp
pop
aaa
or
ret
add
mov
or
push
mov
mov
xchg
jae
ret
jle
push
jg
aam
add
sbb
sub
fisttpl
mov
stc
dec
data16
std
mov
mov
shll
pop
jbe
subl
and
add
aam
lret
cmpsl
cmp
pusha
ret
inc
hlt
ret
push
pop
scas
ret
cwtl
jne
mov
mov
adc
sbb
cmp
mov
sub
fstps
jmp
adc
jb
filds
mov
ss
sbb
lret
sbb
inc
cmpsl
push
jmp
ljmp
call
in
pop
imul
shll
imul
popf
inc
xchg
xchg
cli
pop
lock
dec
add
or
mov
adcb
pop
mov
cmp
orb
pop
xchg
and
insb
cltd
aas
loop
popf
ljmp
in
mov
push
pop
pushf
mov
jnp
jne
lock
cmp
inc
mov
mov
lds
int3
rol
scas
out
xor
cmc
stos
scas
mov
test
scas
lahf
stos
xchg
mov
jg
rclb
sub
sub
xor
js
or
loope
pop
aas
push
jns
sub
jl
sbb
cmp
jmp
jecxz
cmc
lret
push
outsb
popa
jb
lret
data16
jmp
push
lods
clc
jae
lret
mov
mov
sti
xor
inc
loopne
adc
jp,pn
lret
and
cld
cmpb
add
mov
in
sahf
mov
testl
out
mov
nop
xchg
js
pop
push
pop
adcb
out
and
mov
fisttpl
shr
jp
sbb
imul
inc
out
in
mov
fcomi
icebp
sub
push
add
cld
mov
jle
and
insl
push
mov
jbe
push
xor
fstpt
jl
mov
mov
add
add
test
xchg
leave
inc
scas
inc
not
mov
lock
cmpsl
lods
or
inc
gs
stos
or
xchg
cs
test
mov
addl
xor
sbb
fisubs
loope
jne
push
lcall
inc
push
xchg
fsubrs
and
mov
aas
jmp
add
add
mov
mov
out
testb
lods
mov
cld
xchg
sub
mov
dec
mov
jne
and
lret
push
cwtl
push
dec
addr16
das
push
cmp
jle
imull
adc
daa
or
xor
jle
data16
sbb
pop
std
mov
and
jmp
cmpsb
pop
and
adc
aaa
add
repz
loope
pusha
ds
xchg
xor
out
mov
sbb
mov
sub
mov
repnz
push
loopne
adc
aam
dec
and
adc
cmpsl
cmpsl
push
or
cs
xor
jb
cmp
or
sbb
pop
adc
movsb
out
cmp
outsb
sbb
out
data16
ror
or
push
lea
lea
add
movsl
fidivrl
xor
jo
jle
mov
movsl
dec
lods
push
hlt
adc
into
xchg
add
js
imul
mov
xlat
or
test
call
cmp
out
push
fldenv
loopne
bound
rclb
ds
arpl
in
das
lcall
xchg
stc
ss
jns
jp
movl
cltd
xchg
inc
aaa
into
ret
sub
jecxz
bound
popa
stos
jmp
in
mov
xor
mov
shl
fs
dec
xor
cmc
daa
data16
mov
sbb
fs
data16
mov
repnz
and
pop
insl
xor
andb
mov
hlt
aaa
xchg
cs
mov
sbb
xchg
push
mov
mov
and
jp
imul
inc
rcr
jl
cmp
test
push
dec
stos
jmp
iret
ja
mov
push
std
inc
fisttps
push
inc
pop
shll
pop
fildl
cmpsl
push
aas
adc
lcall
in
sarb
imul
cld
into
fbld
lret
pop
outsb
add
mov
lahf
nop
andl
rcrb
mov
inc
jmp
outsb
shlb
add
mov
inc
jmp
and
test
sbb
sahf
lcall
xor
fbstp
scas
insl
sub
adc
int3
jg
pop
inc
sti
dec
jge
sub
pushf
cmp
int
xor
in
pop
pop
je
ds
out
outsl
arpl
enter
out
test
xor
mov
xor
push
mov
jbe
in
mov
mov
mov
push
inc
push
iret
or
add
jnp
imul
inc
scas
sub
ror
fmuls
xchg
call
pop
and
mov
popa
inc
jp
jb
or
mov
push
orb
sbb
lds
test
mov
sub
xlat
push
rcl
outsb
or
rcr
adc
cmp
push
aas
ret
add
mov
fisubs
sti
out
and
cld
cmpsb
repnz
ds
fwait
xchg
xchg
xchg
sub
pop
pop
aaa
sbb
jno
jno
scas
rclb
jl
repnz
inc
fcoms
repnz
pop
jb
imul
adc
lods
adc
les
mov
loop
jle
std
add
mov
frndint
test
les
int
cli
lods
adc
fisubrl
lock
and
mov
les
mov
adc
add
inc
movsb
sbb
add
mov
psadbw
fdivrs
mov
mov
pop
stc
jle
inc
or
and
es
dec
mov
loope
js
push
mov
adc
cmp
mov
mov
es
aad
das
jge
push
scas
push
cli
xchg
mov
repnz
jno,pn
jns
rclb
sahf
loopne
inc
movsb
pop
movsb
mov
pop
mov
jmp
cmpsb
inc
std
stos
xor
scas
fidivrs
adc
jae
stc
push
int3
test
push
testl
mov
xchg
sub
movsb
adc
mov
stos
pop
cmp
nop
xchg
mov
loop
pop
dec
push
mov
ss
push
or
call
xor
outsl
shrl
movsb
dec
sbb
mov
push
push
nop
sti
dec
int
ljmp
jo
pop
mov
adc
sbb
ja
pop
mov
and
inc
jns
cwtl
pop
push
push
xchg
mov
inc
mov
dec
fnsave
sub
stos
subl
xor
sarl
or
jno
movsb
mov
rclb
daa
cli
jne
inc
arpl
mov
sub
dec
jp
mov
icebp
and
push
adc
jnp
mov
pop
fs
dec
rorb
popa
or
xchg
fmull
pop
mov
dec
jmp
xor
xor
fdiv
push
push
lods
ljmp
pushf
test
sbb
dec
dec
test
shrl
das
fdivrs
jge
out
xchg
ds
hlt
outsl
ja
rcl
mov
ret
int3
or
push
dec
cmp
in
cmp
shlb
clc
add
cld
inc
fiaddl
pushf
mov
cmp
pop
push
cwtl
pop
mov
push
sub
sub
scas
sbb
iret
cwtl
das
add
andl
pop
mov
pop
int
add
das
pop
mov
je
pop
jnp
cmp
popa
int3
lret
mov
imul
repz
test
rcll
xchg
loopne
test
loopne
push
imulb
inc
xchg
stos
mov
jge
orl
fwait
push
subl
rorl
int
popa
push
mov
cmp
dec
sarb
test
cmp
imul
fwait
mov
incb
xor
xor
ljmp
aaa
pop
mov
mov
cli
inc
pop
nop
out
sbbw
outsl
clc
push
add
inc
cmpsb
js
insl
scas
pop
inc
pop
push
sti
xor
inc
jno
jno
mov
push
pop
inc
int
in
ficoml
push
cmpsb
in
add
xchg
xor
sub
jle
cwtl
arpl
xchg
loopne
dec
loope
xor
cs
inc
mov
jmp
sahf
jo
stc
mov
inc
add
xor
sub
jp
push
fwait
mov
inc
fs
aam
je
stos
xor
mov
data16
xchg
iret
jg
adc
mov
js
into
into
xor
mov
in
in
das
dec
cmp
and
push
mov
fstpt
test
mov
mov
inc
fbld
test
and
repz
fs
push
or
xchg
and
fisubrl
mov
ficoml
mov
clc
lods
push
mov
imul
sub
add
mov
int
jno
stc
xorl
in
xchg
ljmp
sub
loope
leave
js
sti
rep
mov
lret
cli
and
dec
pop
adc
jne
xchg
cmp
dec
aaa
sbb
out
mov
outsl
cmpsl
xor
inc
outsl
mov
dec
jne
sbb
add
jg
daa
adc
mov
int
cmpl
cmp
xchg
aas
or
and
mov
add
rcrl
mov
in
shr
sbb
cmc
inc
or
cmp
lea
in
ret
push
int
mov
ret
repnz
or
insb
sub
dec
push
scas
mov
dec
mov
add
push
repz
rolb
push
add
out
scas
inc
loopne
jbe
sbb
cmp
mov
cwtl
xor
mov
cwtl
mov
or
out
xor
xor
sahf
cmpsb
mov
subl
or
xchg
pop
dec
dec
mov
jg
mov
mov
adc
sti
dec
pop
daa
cltd
lcall
xchg
add
imul
jle
scas
mov
out
fcomi
imul
icebp
hlt
iret
sub
aas
mov
test
fistl
sarb
or
lea
or
mov
jmp
ret
cmpsb
cmp
pop
adc
and
cmpsb
fistl
or
cmp
insb
jl
in
in
sub
mov
jle
ljmp
mov
div
aad
js
cmpsl
test
mov
and
fmul
addr16
xchg
sub
ffree
stc
or
scas
in
inc
gs
sbb
mov
cmpl
xchg
sub
imul
inc
pop
push
jg
mov
mov
push
pop
lds
or
inc
xchg
adc
ljmp
jno
mov
push
fists
fnsave
leave
mov
rorb
pop
dec
fdiv
jle
out
pop
ret
adc
xor
xchg
pop
adc
loopne
stc
insb
test
add
pop
mov
or
jns
cmp
mov
cmp
adc
mov
jbe
rclb
stos
jle
loop
mov
jg
sub
fistl
adc
inc
cwtl
lods
leave
and
mov
xor
jle
or
sub
add
subb
pop
jne
incl
jmp
cmc
cmp
adc
inc
test
pusha
fstpl
jno
call
test
cwtl
pop
out
dec
insl
loope
mov
jbe
lcall
add
fwait
and
and
mov
mov
test
and
out
andl
add
pop
sti
or
sub
into
xor
sub
testl
add
pop
push
std
stos
add
push
lea
mov
pop
add
lret
adc
dec
sub
cmp
add
in
push
inc
mov
pop
inc
icebp
mov
inc
dec
pop
jns
push
lcall
and
mov
arpl
dec
rcrb
jnp
and
pop
xchg
call
mov
inc
fmull
mov
loop
and
iret
outsl
rcrl
into
pop
jnp
cmpsl
mov
push
cmp
lea
aam
jo
div
aam
or
xor
call
or
sahf
add
jbe
in
leave
popf
lods
inc
dec
ljmp
cli
mov
subl
pop
in
shll
sti
mov
pop
or
std
inc
ret
mov
add
pop
in
stos
xchg
jno
test
test
enter
ficomps
lret
dec
pop
and
xchg
stos
sbb
lods
pop
xchg
nop
fsubl
jecxz
cmp
rol
fnstenv
inc
push
mov
insb
cmp
jp
divl
loopne
mov
cltd
adc
xlat
clc
inc
inc
popa
jge
or
nop
push
shl
sub
push
lret
bound
vpshldvw
fld
js
mov
aad
dec
mov
test
in
sahf
mov
push
xor
mov
cmpsb
and
cmpsb
mov
inc
fdivp
cmc
mov
cmp
adc
clc
fdiv
sbb
sbb
jle
mov
add
jae
sbbl
push
fcmove
mov
pushf
xor
jae
lret
jge
cmp
push
movsl
clc
sbbb
mov
push
add
fbld
mov
xchg
shrl
xchg
fists
push
fs
int
inc
int3
adc
in
pop
push
or
movsl
adc
ljmp
push
loopne
fimuls
xor
in
push
ljmp
inc
stos
mov
pop
lds
push
jbe
pop
adc
xorb
adc
xchg
aam
push
dec
test
fnsave
fnstenv
inc
fcomi
jle
or
xchg
or
adc
daa
cmc
jge
or
mov
js
loopne
sub
stc
aas
cmc
xchg
mov
out
add
or
or
xchg
dec
filds
call
xchg
flds
dec
xor
cmp
add
mov
unpcklps
out
sbb
cltd
or
scas
sti
fwait
and
xchg
imul
sbb
pop
or
cmp
xor
push
nop
enter
call
xchg
cmp
mov
pop
sub
dec
push
mov
aam
ja
ds
mov
ljmp
inc
js
and
inc
notb
in
push
fstpl
cmpsb
loop
or
sub
aad
mov
ficoml
lods
test
int3
out
cmp
jmp
nop
pop
jne
stos
inc
xor
jbe
adc
dec
lea
mov
arpl
xchg
adc
je
cmc
xchg
pop
mov
subb
and
and
shrb
shll
dec
add
mov
pop
icebp
lret
xchg
es
js
ret
and
push
dec
pusha
divl
js
aas
add
icebp
add
jge
mov
push
push
mov
lcall
mov
xchg
push
scas
jns
aaa
jl
mov
out
mov
cmpb
pop
stos
cmp
xchg
xchg
jge
aam
xchg
sub
hlt
nopl
or
or
push
cmpsl
icebp
adc
cmpsb
push
imul
scas
cld
aam
mov
mov
and
inc
adc
aas
adc
or
mov
mov
xlat
adc
sbb
aas
or
cmpsl
xchg
mov
or
mov
shrl
insb
jo
or
in
nop
and
shr
xchg
sub
and
jbe
pop
jns
adc
xchg
subl
push
iret
cltd
xor
fs
push
shlb
dec
pusha
jne
xorl
iret
shl
push
jo
or
or
loopne
std
cmp
xor
mov
lock
xlat
add
lods
subb
scas
xchg
add
aaa
cmp
mul
mov
stc
or
add
testb
test
movsb
push
mov
adc
ss
push
and
pop
xchg
cld
movsl
mov
and
test
lds
inc
add
pop
xor
mov
jl
outsl
mov
inc
rcrb
daa
push
aam
xor
mov
aad
and
mov
cmpsl
lea
in
stc
or
push
movsl
mov
adc
into
jmp
int3
mov
jge
idivl
faddp
sbb
mov
in
rcr
jno
add
lahf
pop
mov
sbb
out
pop
add
cmp
lret
adcl
jg
and
push
mov
fcoml
lds
xchg
mov
lods
xchg
shl
adc
jae
hlt
mov
arpl
ror
stc
push
sub
or
outsb
hlt
mov
inc
in
repnz
xchg
sbb
daa
inc
mov
rcrb
mov
xor
or
inc
lds
movsl
mov
and
movsb
inc
gs
in
mov
inc
insl
add
mov
je
sub
out
pop
lahf
mov
add
adc
int3
fidivs
nop
in
popa
dec
sub
je
std
sub
fimuls
jne
inc
push
lss
fdivp
mov
add
lcall
mov
push
fwait
rcrb
rorl
jp
flds
push
pop
out
sarb
xchg
fisubl
push
pop
or
cmp
scas
bound
pop
sub
sub
xchg
pop
add
fistpl
cmp
adc
cmp
arpl
roll
jb
push
fisubl
dec
sahf
mov
std
stos
cmp
and
and
lahf
dec
lods
ficompl
and
inc
fdivrl
and
std
pushf
arpl
dec
xor
sahf
arpl
pop
sub
negb
aad
sbb
sbb
push
das
imul
out
push
push
in
aas
movsl
xor
sbb
adc
mov
fwait
xchg
addr16
pop
add
mov
cmp
pop
mov
inc
mov
or
test
add
rolb
jbe
bound
inc
loop
jae
rcrb
mov
add
leave
loop
shr
popa
dec
dec
dec
sub
aad
cmp
add
pop
adc
adc
cmpsl
int3
je
xor
dec
mov
xchg
fnsave
mov
in
mov
push
stos
in
fldl
dec
pop
das
out
cld
pusha
jle
lea
fdivl
xor
mov
lock
je
and
jnp
div
xor
ds
push
int3
fsubrs
mov
mov
push
mov
int
insb
add
out
cmpsl
repz
mov
mov
or
dec
adcl
or
push
ret
mov
sbb
cmp
mov
pop
loop
mov
notb
mov
inc
in
pushf
mov
or
mov
push
icebp
sbb
dec
adc
lds
add
popf
jp
ja
jne
inc
push
std
mov
push
xor
dec
and
iret
insl
popf
xor
imul
sub
pushf
addr16
mov
sbb
rcr
xchg
int
les
xchg
outsb
push
mov
rclb
jmp
repz
lcall
stos
add
sbbb
lods
push
mov
add
in
lods
popf
sub
andb
sub
adc
mov
repnz
fnsave
push
jbe
xor
pop
data16
leave
pop
arpl
jno
stos
inc
push
popa
mov
push
icebp
xchg
jne
dec
cmpsb
and
out
or
stos
inc
sub
push
xor
dec
enter
call
mov
jbe
push
xor
or
dec
aaa
lds
aas
add
aam
fnsave
add
test
ror
call
or
subb
frstor
jge
nop
pop
jle
cltd
cmp
int
inc
in
fwait
mov
aad
sbb
cmpsl
sub
shlb
mov
scas
dec
cltd
adcb
push
xor
mov
and
or
call
cmp
push
jecxz
dec
add
mov
push
in
inc
stos
aas
or
inc
mov
cs
pop
lods
sub
pop
je
movsb
movsl
jnp
cli
push
pop
jns
mov
test
clc
sub
cmpsb
mov
dec
xor
inc
pusha
test
inc
fld
dec
loope
stc
adc
fisubs
push
jae
mov
repz
int
and
jl
jg
loope
xlat
fsubp
shl
popa
cmpsl
dec
xchg
mov
xor
mov
push
nop
mov
idivb
jle
insb
pop
divl
fmuls
cli
jg
fiadds
pop
movsb
mov
popf
push
push
and
and
push
cwtl
or
bound
mov
jmp
test
aaa
scas
fsubrl
push
cli
lods
cli
inc
mov
orl
inc
pushf
mov
rcrb
je
sarl
jb
inc
stos
inc
ja
imul
xchg
inc
add
lcall
scas
addl
and
out
movsb
jg
test
sub
sbb
leave
shlb
mov
pop
fisubs
iret
mov
xchg
popf
push
and
add
sbb
xor
lds
arpl
sbb
mov
call
sub
test
aas
add
jo,pt
adc
into
pop
lods
repnz
or
cmp
xchg
sbb
lods
daa
sub
pop
iret
popa
addl
dec
in
xchg
int3
call
into
leave
fwait
cmp
sbbl
aam
jnp
outsl
jo
fwait
push
mov
imul
pop
rolb
pop
nop
add
sbb
mov
js
and
lret
fldl
ljmp
sub
inc
adc
xor
mov
fldt
add
outsl
pop
dec
push
scas
call
clc
jmp
in
or
ljmp
pop
outsl
push
mov
xrelease
rolb
sahf
ljmp
cmp
or
gs
aad
bound
fnsave
dec
mov
or
pushf
icebp
adc
inc
xor
enter
cmp
mov
popa
and
sbb
ds
xchg
mov
adc
outsb
aas
lahf
aas
jne
xchg
cwtl
pop
scas
inc
mov
stc
out
push
or
dec
or
and
sub
dec
dec
iret
in
xor
sbb
push
mov
les
pop
cmp
in
mov
mov
pop
mov
add
mov
imul
jnp
daa
jp
adc
push
lcall
sahf
jp
pop
dec
pop
sarl
fistpl
xor
xchg
loopne
gs
xlat
mov
inc
xchg
gs
bound
fwait
mov
iret
cmpsl
mov
pusha
dec
divl
decl
out
and
push
scas
loopne
lret
scas
mov
stos
mov
cld
lahf
jp
rcrl
jl
xchg
aaa
cwtl
das
imul
fnstcw
push
push
mov
and
xlat
outsb
cld
mov
cmc
rcrl
inc
xchg
pop
jae
sbb
inc
xchg
add
mov
push
mov
pop
icebp
xor
sarl
cmpsb
adc
pop
push
jnp
sub
std
and
pop
cwtl
fmulp
int3
mov
jg
outsb
fadds
lcall
sub
and
push
mov
or
jnp
dec
mov
popa
jb
mov
push
sub
inc
push
push
mov
movsl
mov
inc
filds
jno
lods
fwait
xor
pop
push
sbb
movsb
outsb
mov
pop
pushf
and
fiadds
repnz
jp
stc
cwtl
cmp
gs
cmpb
js
lahf
lods
mov
mov
mov
and
or
sub
mov
nop
dec
cs
rcrl
popf
mov
in
dec
ret
add
mov
cmp
lahf
or
fxch
gs
add
bnd
clc
test
rcll
scas
cli
xchg
shr
xchg
pusha
dec
mov
shrl
fs
mov
ret
and
call
or
into
pop
xor
sub
xor
in
mov
test
mov
adcb
pusha
jmp
insl
xchg
stos
xchg
inc
pop
lock
lret
lods
add
lds
pushf
out
dec
loopne
mov
repnz
lcall
sbb
or
mov
xchg
and
scas
push
inc
dec
insl
add
je
cltd
xor
or
inc
test
bound
mov
mov
cli
repnz
leave
movsl
data16
add
mov
push
mov
out
data16
add
pop
fisubs
loop
cmpsl
mov
mov
mov
rcrb
jp
pop
aas
into
icebp
insb
mov
loopne
jle,pn
cs
push
lds
add
inc
ret
bound
or
pop
decl
sarb
cli
jg
pop
sahf
mov
pushf
dec
jmp
sahf
sub
xchg
cmp
outsb
push
mov
and
or
mov
bound
adc
repnz
into
fmull
ds
mov
dec
pop
in
je
jns
mov
push
shl
mov
cmp
and
add
les
je
add
stos
lret
xor
pop
mov
ja
testb
iret
into
mov
js
fs
and
ds
xchg
jno
subl
repz
push
sub
fsubrs
mov
inc
dec
push
aam
mov
addb
ds
lods
int
insb
sbb
and
std
lods
inc
push
js
push
out
test
test
test
or
sbbb
stos
mov
gs
pop
push
inc
xor
sbb
and
cld
inc
aas
cs
jmp
or
and
cwtl
orl
jbe
mov
xor
std
movsb
push
fcmovu
pop
mov
or
inc
mov
xor
sub
insl
aas
xor
icebp
pop
sub
adcl
test
test
cmp
sub
nop
xchg
add
sub
movsl
xchg
aas
xchg
dec
or
mov
sbb
sahf
stos
jno
iret
mov
or
daa
push
test
xor
fwait
pop
dec
data16
xchg
sbb
std
into
inc
fbld
icebp
push
mov
or
popa
cmp
mov
lcall
jge
je
add
pop
pop
push
or
in
jmp
popf
mov
orb
push
pop
ljmp
inc
cmc
mov
sbb
dec
cwtl
jbe
out
inc
ficomps
inc
push
icebp
xor
pop
sub
ds
mov
mov
out
adc
and
das
imul
loope
and
sbb
cltd
enter
xchg
xor
ret
cmpl
lock
cmp
add
or
daa
sub
lods
adc
and
cmp
push
daa
xchg
jmp
push
stos
jmp
adc
pusha
jp
jbe
xchg
xor
or
mov
js
test
xor
int3
gs
mov
pop
fwait
insl
mov
mov
dec
rcrb
into
inc
push
jg
imul
sub
lcall
shrl
inc
mov
gs
push
fisttps
dec
ffree
insb
cmp
adc
repnz
rcr
das
test
pushf
les
xor
cmpsb
ret
loop
iret
cli
or
fidivrl
mov
ret
pop
adc
or
cmp
pop
xchg
enter
pop
xor
and
inc
pushf
data16
lods
sti
clc
mov
enter
mul
dec
rorb
cmp
push
sbb
int3
cmp
ljmp
sub
out
in
jo
fistpl
or
mov
dec
mov
sbb
insb
cmp
int3
jle
repz
xchg
sub
add
cs
sub
rcll
mov
nop
push
mov
push
xor
and
aas
push
popf
dec
test
gs
or
movups
mov
sbb
sub
cld
jle
mov
lret
shl
sub
pop
pop
js
mov
or
jbe
icebp
adc
test
aaa
lret
xor
push
mov
mov
mov
sbb
mov
data16
add
cli
adc
sbb
lds
int
xchg
inc
and
enter
push
pusha
push
xor
cwtl
adc
adc
jmp
inc
jmp
pop
dec
daa
or
pop
pushf
daa
int
cmp
rep
fstpl
sub
outsl
scas
std
sbb
inc
arpl
test
fs
inc
inc
sub
in
mov
and
pop
push
dec
nop
pushf
push
iret
ja
iret
xor
inc
stos
inc
xor
mov
mov
add
ljmp
mov
fisttps
aas
repz
int
out
mov
repnz
fiaddl
fisttpll
imul
sub
adc
xchg
mov
jno
mov
sahf
stos
cmc
jne
mov
lods
imulb
movsb
mov
fdivrl
lock
decb
and
push
fisubrl
data16
scas
lods
push
int
cmp
jno
lret
pop
inc
lcall
in
shr
pop
sar
xchg
mov
loopne
cs
repnz
ja
and
out
xor
in
mov
into
mov
popa
in
test
dec
mov
sbb
hlt
shrb
dec
int
push
in
jmp
pop
mov
popa
lret
dec
pusha
cmp
push
xchg
adc
xchg
xor
inc
fimull
mov
popf
ljmp
adc
xor
das
mov
and
mov
daa
xor
in
and
pop
cmp
sub
sub
cmp
pop
popf
pusha
add
cmpsl
fisttpll
lret
or
mov
mov
mov
int3
fwait
aam
mov
sub
add
xchg
jp
pop
and
or
daa
mov
and
in
mov
fiaddl
lods
mov
enter
rcll
bound
sbb
jecxz
aam
adc
test
and
sbb
adc
je
add
xchg
cs
std
or
enter
in
jnp
jmp
shrl
mov
outsb
nop
pop
stos
dec
adcl
ficoml
inc
or
lock
mov
mov
push
mov
call
fstl
aas
retw
hlt
sbb
xchg
les
cmpsb
lds
or
inc
dec
push
imul
or
cltd
cltd
mov
test
adc
push
dec
xchg
dec
mov
js
scas
push
cmc
iret
jns
cmp
sub
mov
les
jecxz
scas
mov
add
add
and
divb
dec
pop
inc
push
dec
push
pop
xchg
mov
jns
cmp
ljmp
int
imul
push
mov
mov
movsl
fchs
aad
xchg
cli
insb
add
js
pop
sub
jp
mov
dec
jnp
xor
scas
and
mov
jge
repz
mov
loopne
lds
out
out
jp
inc
fisubl
jae
or
scas
adc
push
stc
jg
popa
stc
fcompl
adc
mov
jge
insl
movl
sbb
sub
aas
loop
fcmovne
les
jecxz
push
fnstcw
pop
or
std
pop
xorb
sub
dec
cmp
dec
inc
les
fwait
aas
mov
les
sbb
xor
or
hlt
xchg
arpl
add
mov
insb
xchg
dec
imul
sti
imul
xor
out
inc
mov
mov
xor
pop
sub
arpl
cli
pop
in
add
and
dec
jnp
out
dec
fisubl
imul
ret
pop
jl
in
pop
cmpsl
push
and
xor
loopne
insl
pop
or
sbb
inc
xor
cmp
in
mov
sbb
add
hlt
xchg
push
scas
dec
into
mov
jo
xor
fcmove
sahf
adcb
ss
cmp
fisubrs
lock
aad
mov
roll
aas
daa
sub
adc
dec
mov
bound
mov
aam
call
cmpl
mov
xor
dec
lods
cmp
bound
aaa
loope
insl
sahf
and
cmp
push
adcb
jle
in
aaa
js
je
dec
lods
or
adc
jno
or
loope
ljmp
out
and
nop
ret
daa
insb
and
or
xchg
adc
insb
or
bound
lahf
jno
mov
addb
cwtl
inc
sub
push
add
pop
je
push
jp,pt
out
jns
mov
jg
js
movsl
mov
leave
sub
xchg
push
fnsave
arpl
push
js
cpuid
push
push
into
xor
push
mov
jmp
iret
push
xchg
add
mov
orb
pop
sub
cmp
push
rcll
cmp
mov
insl
inc
inc
sbb
icebp
insl
cwtl
stos
sahf
adc
dec
sbb
insl
xor
or
jbe
and
stos
push
mov
movsb
xchg
ja
clc
sub
sub
cld
push
sbb
xchg
lcall
ret
add
imul
and
pushf
cmp
jecxz
in
mov
sbb
cmpsl
mov
das
xor
shll
lods
jp
jbe
incl
inc
ljmp
out
popf
and
push
and
mov
ficoms
das
push
adc
ja
mov
sbb
fwait
ljmp
mov
shl
nop
push
dec
dec
and
out
lods
mov
xor
andb
outsl
cmp
hlt
mov
sub
cmpsb
lea
push
lds
jae
xchg
aam
ret
push
jnp
xor
nop
jns
xor
loop
sarl
mov
dec
and
fdivl
out
fildll
xor
cmp
lock
inc
int3
aam
pop
dec
imul
push
daa
ss
ss
loop
test
mov
mov
or
mov
jno
pop
testb
bound
inc
cs
loope
popa
repnz
lret
ds
loope
in
jmp
sub
icebp
jae
out
sbb
jns
and
dec
das
les
sub
and
push
test
xor
inc
out
pop
addl
ss
push
inc
mov
fsts
pop
jb
jne
ss
mov
stos
xchg
pushf
sub
push
stos
repnz
das
loop,pt
jmp
arpl
movsl
xchg
outsl
aad
xchg
test
roll
mov
fbstp
cltd
stc
xor
pop
repz
repnz
jmp
out
data16
inc
call
mov
std
dec
es
xor
dec
adc
out
and
decb
mov
or
test
fwait
xor
in
in
mov
dec
push
push
imul
loopne
ljmp
or
repz
or
or
aam
cmp
cld
pop
cmpsb
adc
mov
test
into
mov
lods
ja
shrl
xorl
shll
scas
adc
pop
push
mov
and
xchg
popa
xor
js
dec
mov
aaa
mov
pushf
inc
mov
mov
xchg
movsb
icebp
and
mov
loop
jae
cltd
jbe
inc
fsubr
jnp
mov
iret
push
ja
jno
cmc
mov
sar
dec
mov
adc
popf
mov
xchg
int3
push
bound
add
clc
gs
xor
sahf
sbb
pushf
inc
xchg
and
cli
push
scas
xchg
or
out
mov
nop
mov
cs
fwait
scas
rorb
lret
push
push
pop
sbb
sub
js
popa
jbe
lahf
adc
ret
cmpsl
mov
and
jno
mov
xchg
das
icebp
nop
pushf
or
cmp
pop
cmpsl
push
repnz
aad
cwtl
push
inc
xor
clc
clc
stc
jg
movsb
sbb
xor
mov
fsts
jne
sub
das
into
add
xor
je
push
push
jl
lock
sub
paddw
mov
pop
rcl
jb
int
push
push
mov
test
fidivrs
dec
enter
lds
xor
js
fs
pop
pop
push
or
cmp
lock
push
dec
movsl
shl
shrl
mov
pop
rol
pop
xchg
test
xor
in
push
ds
inc
add
cmpb
sub
repnz
jo
jle
inc
dec
mov
mov
data16
ficomps
mov
in
out
out
adc
insb
jle
push
or
mov
xchg
es
call
pop
cmc
mov
adc
pop
out
add
xchg
lret
in
ds
out
push
sahf
adc
daa
lret
pushf
dec
sub
and
rcrb
mov
adc
pusha
int
or
push
jne
fsts
adc
es
xor
sub
add
rcr
push
idivb
loop
and
dec
fldt
lea
lea
pop
sti
push
add
xor
mov
dec
nop
daa
jp
push
stos
lock
scas
mov
dec
add
je
xchg
sub
push
fnsave
lock
adc
test
pop
aaa
shrl
and
mov
mov
andb
sbbl
push
jb
mov
mov
lea
dec
fldcw
cmp
decl
jb
clc
pop
xchg
rolb
pop
push
test
mov
cmpsl
xchg
daa
mov
or
push
imull
aas
das
dec
or
insl
dec
pop
dec
movsb
lcall
andb
dec
and
aam
fdivs
xlat
xchg
mov
mov
out
jno
shrl
clc
cmp
xchg
mov
inc
jl
xchg
dec
and
int3
mov
mov
jae
ss
mov
adc
cmp
lcall
and
or
mov
pushf
movsb
mov
mov
imul
push
mov
mov
and
xchg
push
jne
mul
mov
ja
cld
sub
test
xchg
repz
test
test
push
pop
icebp
mov
insb
add
lods
mov
jecxz
stos
and
add
inc
lods
xor
mov
push
inc
gs
arpl
mov
in
stos
cmc
mov
push
dec
scas
fsub
insb
push
jge
inc
push
jmp
lcall
test
lods
faddl
lahf
jb
lds
dec
enter
sbb
or
loop
fisubs
mov
inc
lcall
in
lods
movsl
xor
xchg
pusha
into
data16
orb
sbb
fstps
nop
push
mov
mov
add
rcl
out
mov
fstps
cli
cs
aaa
bound
cltd
test
and
adc
movhlps
dec
insb
mov
push
sahf
sub
sub
lahf
xor
or
enter
outsl
jns
or
mov
inc
fsubs
push
cmpsl
out
lcall
pop
jg
lock
lret
sti
adc
lock
jmp
xchg
cmp
insl
repz
adc
iret
leave
jbe
xor
jge
add
push
ss
mov
push
push
pusha
xchg
inc
push
inc
dec
mov
jle
insl
fsubl
loopne
add
cld
lods
sub
push
and
imul
fisttps
or
pop
lret
in
and
pop
aam
add
es
sub
stc
rclb
repnz
mov
lock
inc
out
lods
jo
inc
dec
in
and
in
mov
shll
call
and
mov
aam
fildll
xor
push
stos
loop
cmp
push
sub
popa
loope
pop
imul
push
lock
fsubrl
mov
cmp
jno
pop
testb
incl
mov
jb
add
mov
lret
gs
lock
push
repnz
adc
lahf
cmp
rclb
inc
xchg
cmp
jmp
mov
sub
mov
or
mov
cwtl
and
mov
stos
xchg
shlb
scas
jecxz
mov
cmpsl
or
or
mov
aaa
mov
fisttps
cwtl
sub
or
mov
lods
pushf
xor
fisubs
or
mov
jo
push
lods
ficoms
ja
movsb
xor
mov
dec
loopne
lock
subb
push
pop
out
push
aad
js
shl
inc
out
aaa
sbb
popa
mov
jne
xor
aaa
jle
sarb
mov
mov
xchg
hlt
cmp
add
xchg
loope
push
push
ja
imulb
sub
mov
mov
addb
pop
outsl
daa
fadds
pop
mov
and
add
or
sbb
jge
mov
fldt
mov
icebp
dec
jne
loope
addb
xchg
daa
jbe
cs
mov
test
xchg
cmpsb
adc
mov
dec
push
or
pop
xor
xchg
mov
jg
xchg
popa
clc
add
sbbb
mov
aam
jns
or
pusha
lods
lahf
sbb
push
cmp
sti
xchg
enter
add
in
dec
push
mov
mov
mov
and
mov
mov
inc
jns
ret
bound
hlt
and
addr16
mov
mov
mov
imul
mov
add
scas
fs
scas
arpl
add
jo
cwtl
pusha
adc
outsl
lret
mov
inc
fdivrs
inc
int
sub
cmpsl
cwtl
adc
dec
lahf
mov
fwait
push
adc
cmp
push
jae
and
jb
sub
push
inc
daa
mov
pop
and
xchg
mov
jl
orb
scas
iret
mov
in
pop
inc
lods
fcmove
add
mov
fwait
test
cld
pop
mov
and
sbb
mov
out
insb
xchg
scas
sbbl
mov
movsl
mov
int
rcl
jo
lods
mov
pushw
adcb
test
jbe
ret
push
call
test
ja
loopne
pop
lods
cmp
lret
sub
rolb
sbb
and
mov
mov
inc
adc
xor
push
std
cltd
sbb
push
pop
dec
jp
aad
inc
arpl
xchg
lods
adc
sbbb
inc
add
sti
cmp
fs
test
pop
jae
sub
sbb
punpckldq
and
cmp
int
ror
movl
out
xchg
pop
jl
jne
mov
xchg
and
add
jbe
int
sbb
adc
pop
pop
xor
cmp
sub
pop
aaa
stos
dec
ret
scas
lret
gs
cwtl
stos
lods
inc
fstpl
ret
mov
rorl
pop
lds
testb
ret
push
rorl
fwait
jbe
ss
repz
pop
mov
out
cli
mov
fbstp
jns
popf
pop
lea
or
mov
loopne
sub
sub
add
sub
mov
fisttps
lret
push
enter
outsl
loop
cmpsb
sub
inc
ss
mov
in
mov
mov
xlat
out
jns
mov
lret
cld
sbb
rorl
in
push
inc
dec
cmp
xchg
dec
loop
mov
imul
out
add
test
dec
jns
mov
popf
filds
sub
fs
fstl
lods
pop
je
pop
sub
orl
ljmp
mov
add
lret
mov
dec
push
inc
xchg
add
leave
shlb
scas
cmp
scas
jne
or
cwtl
aas
push
aam
out
clc
dec
pop
movsl
xor
push
or
and
das
cmpsb
dec
mov
sub
dec
test
adc
daa
pop
and
fwait
hlt
ret
mov
dec
xor
in
jp
jl
add
popf
mov
mov
or
sbb
adc
fpatan
rolb
mov
cli
in
mov
mov
sub
iret
scas
sub
push
and
jp
inc
ficompl
ss
xor
jo
pop
insl
xor
cmp
mov
mov
jmp
jg
aas
cmp
je
icebp
push
dec
and
add
test
loop
adc
or
nop
xlat
jmp
adc
push
xchg
out
mov
jbe
xchg
or
sahf
outsb
adc
push
ja
bound
xor
sub
xor
add
jle
pop
daa
xor
sbb
push
add
leave
test
pop
ljmp
dec
iret
add
add
dec
sbb
into
popa
cmp
lret
mov
jno
in
and
add
scas
data16
xchg
jns
sbb
std
fnstenv
clc
sbb
jmp
dec
or
sbb
daa
lret
mov
add
jns
add
clc
cmpsb
lret
pop
je
daa
outsl
lods
jno
mov
adc
ja
mov
mov
bound
testb
xor
jle
jne
add
and
push
push
andl
scas
jne
es
mov
jns
imul
fidivrs
bound
lods
cld
inc
jmp
push
std
lret
movb
xchg
ja,pn
cmpsl
mov
lock
rclb
cltd
adc
sti
pop
imul
lds
pusha
push
push
jecxz
mov
repnz
out
push
sub
mov
sbb
stc
imul
fldt
lods
fnsave
aaa
dec
bound
inc
fs
mov
dec
xor
mov
or
mov
push
addr16
js
cmp
adcl
cmp
lods
pop
negb
cltd
jg
or
test
mov
jb
sub
dec
test
sub
adc
mov
lret
mov
pusha
iret
pop
mov
adc
addl
jecxz
stos
rcl
add
addr16
mov
pop
test
add
dec
and
adc
sub
dec
pop
push
test
std
fbstp
inc
pop
cmc
shll
out
jns
sbb
dec
outsb
enter
cmpsl
jo
sbb
js
mov
push
push
jp
repz
jnp
hlt
push
xor
es
push
sub
add
hlt
into
gs
xchg
shl
in
pop
rcrl
mov
fsubrs
out
jle
gs
jmp
dec
add
lret
jg
sub
jns
push
sahf
iret
dec
ds
stc
fadds
or
push
pusha
aaa
mov
adc
cmovge
jp
jge
test
in
mov
loopne
in
test
jp
push
pop
or
sbb
sarb
xor
pusha
inc
loop
sub
xchg
sub
sbb
pop
adc
inc
stos
sub
aad
stc
out
sub
lods
xchg
nop
stos
push
aad
cmc
movsl
in
aad
fldl
aad
jae
jecxz
mov
dec
mov
push
rorl
mov
xor
inc
xchg
xor
mov
adc
pop
xchg
lods
addl
pushf
mov
or
mov
pop
mov
lods
and
jl
pop
out
or
pop
lret
pop
adc
hlt
sbb
and
sbb
std
ljmp
jo
mul
jg
add
pop
or
mov
add
lock
movsb
fists
jecxz
cmp
cmp
push
pop
pop
adc
movsl
or
cmp
rep
pop
lahf
ss
iret
mov
in
outsb
cmp
jl
push
push
mov
jns
pop
fsubrs
bound
push
jp
add
or
inc
adc
mov
je
inc
fwait
sbb
cmp
push
jo
mov
dec
dec
pop
hlt
jg
sti
scas
sbb
in
mov
push
pop
shrl
sub
xor
inc
rcl
push
cmpsb
pushf
xor
gs
jb
inc
hlt
enter
adc
dec
mov
adc
repz
cmp
shlb
out
rclb
xor
adc
mov
mov
jo
insb
lret
push
xchg
ret
lahf
ret
mov
pop
out
imul
les
sub
mov
jb
lock
popf
xor
loopne
dec
push
iret
mov
insb
imul
jbe
or
lea
cltd
cmpsb
sbb
repz
and
jb
out
mov
dec
mov
and
hlt
xchg
add
or
out
cld
lret
insb
hlt
jecxz
mov
inc
mov
repnz
pusha
adc
cmc
jbe
push
inc
push
push
mov
pop
mov
adc
mov
imul
sbb
insl
insb
call
sar
mov
mov
test
cltd
mov
sub
addl
cmc
daa
inc
out
xchg
shrl
scas
out
stc
sub
icebp
aas
and
xor
repz
mov
xchg
and
xor
repnz
stc
or
jg
mov
lods
xchg
jl
inc
ds
xor
sub
push
jecxz,pt
mov
loopne
mov
roll
in
stos
lret
incl
mov
es
add
popa
sti
inc
scas
adc
stos
push
test
clc
inc
nop
dec
cmp
neg
cwtl
movsb
and
ja
enter
aam
mov
or
jge
enter
mov
aad
and
nop
xlat
dec
mov
xchg
rorl
mov
xor
nop
pop
mov
mov
shll
rcrl
sti
fildll
xchg
bnd
fidivs
add
jo
loop
imul
in
dec
pop
lock
mov
scas
pop
and
mov
call
or
jp
cld
loop
enter
pop
shl
sub
add
jb
push
pushf
dec
mov
jge
ret
divl
stos
sbb
jge
cwtl
push
or
jb
lods
testb
test
mov
mov
or
jp
mov
add
orb
dec
adc
es
gs
popf
stc
ret
addl
or
inc
inc
fstps
xor
xchg
mov
push
adc
jge
add
notb
mov
cmpsb
fldl
sahf
lods
sub
icebp
insb
mov
in
jnp
scas
negl
cmp
dec
call
and
inc
fdivrl
out
inc
xchg
sahf
fldenv
add
clc
lahf
xchg
movsb
sub
mov
push
test
out
cmpsl
xlat
insl
xchg
sti
xchg
popa
push
hlt
test
push
pop
mov
out
scas
xor
loopne
sub
xlat
insl
rorb
fwait
int
int
mov
cli
out
mov
cmpsb
push
lret
fnstenv
inc
je
gs
jnp
cmpsl
mov
pop
mov
mov
xchg
sbb
push
mov
inc
lock
or
adc
push
call
cld
lahf
test
psubd
jno
mov
or
mov
xchg
enter
in
jl
jo
xchg
mov
repz
mov
std
gs
shll
mov
sbb
ja
lret
and
cltd
push
pop
scas
xor
aad
and
pusha
mov
mov
sahf
mov
dec
fidivrs
and
or
dec
cltd
sub
mov
insb
sub
xlat
pop
mov
rolb
inc
sbb
xchg
and
in
jmp
subl
lahf
test
xchg
sti
lret
xor
jo
pop
xor
sub
fcomi
je
xchg
pop
insb
cli
xor
iret
and
dec
stos
roll
sahf
jle
sarb
or
outsb
enter
movsl
in
mov
jbe
adc
or
int3
jo
jmp
xchg
stos
js
jne
mov
je
rorb
push
gs
mov
add
mov
into
and
aas
xchg
pop
sbb
sbb
xor
pop
std
push
shrl
push
ljmp
pushf
popa
mov
add
test
xchg
inc
ja
in
push
test
xchg
sub
mov
enter
cmp
outsb
xchg
inc
leave
call
sub
call
loop
pushf
das
insl
sub
inc
hlt
lcall
repz
mov
jbe
mov
mov
xor
fsub
push
push
cmp
call
xchg
push
popf
jg
jle
scas
sbb
fcomps
movsl
addr16
push
jne
mov
mov
inc
sub
fimull
cmp
inc
cmpsl
js,pt
les
cmc
mov
aas
in
add
adc
sub
fcompl
mov
jle
loopne
add
cmp
jge
add
ljmp
inc
push
pushf
shlb
cmp
test
jl
rcll
lods
xchg
sbb
ret
js
stos
insl
and
cmp
fs
jg
iret
iret
jle
movsb
ret
push
push
test
pusha
addb
dec
adcl
xor
mov
cld
addr16
test
push
mov
aaa
dec
mov
cmp
scas
inc
pop
sub
testl
add
ret
stos
rcrb
scas
mov
sahf
popa
jg
orl
push
inc
pop
rcl
jo
sbb
scas
in
imull
aam
or
mov
insb
lahf
rcrl
sahf
aad
cmc
negb
sti
cmp
lock
fisttps
pop
xor
add
insl
stc
cmp
movsb
pusha
or
scas
test
xor
je
mov
lods
push
out
cmpsl
or
mov
lods
cmp
ror
pop
fstps
mov
sbb
mov
xchg
xor
lcall
cmpsb
inc
jae
push
add
add
pop
adc
mov
dec
cmpsl
rolb
cs
insl
icebp
orb
aad
jge
mov
in
cli
mov
orl
mov
movsl
sbb
jle
repnz
inc
and
push
repz
addr16
int3
dec
or
scas
stc
out
push
jmp
cmp
nop
sub
fstps
cmp
rcrl
shll
rcrl
mov
mov
mov
sbb
add
enter
push
add
outsl
adcl
or
rcrl
nop
int3
call
sbb
jbe
mov
shlb
xchg
sub
pop
scas
imul
popa
mov
mov
pop
call
inc
lret
sbb
pop
cmp
outsb
mov
jecxz
inc
xchg
push
lret
dec
cmc
push
and
adc
push
sbb
fs
mov
mov
adc
hlt
sub
mov
or
and
je
push
add
push
lds
idivl
mov
inc
and
aad
sub
pop
push
aaa
jg
or
sbb
clc
sbbb
add
jmp
adcb
cmp
mov
das
xor
sub
pop
dec
mov
in
xor
sub
hlt
dec
cmp
jo
sub
pop
or
gs
lods
add
mov
out
jle
aas
push
int3
fdivl
xchg
and
test
aam
xorl
or
fbstp
mov
jne
cwtl
xchg
xor
scas
sbb
pop
in
ja
inc
adcl
test
fnstenv
and
data16
cmp
sbb
inc
push
cmp
outsl
mov
jp
jns
mov
xchg
repz
push
sti
nop
sahf
mov
dec
jge
dec
dec
mov
icebp
movsl
ret
jns
xchg
aaa
flds
pushf
jb
int
lods
xchg
test
jne
test
or
push
jns
imul
stos
rcll
xchg
adc
xor
outsb
jle,pt
stos
push
dec
pop
insb
inc
int
in
mov
mov
daa
pop
xchg
cld
lds
xor
mov
mov
xor
pop
cmp
sbbl
jo
lods
pop
repnz
je
fs
pop
frstor
mov
loop
fcmovnbe
stos
lret
in
push
push
sbbb
adc
jle
and
outsb
mov
test
pop
cmp
fcmovnu
cli
push
incb
cwtl
test
xor
icebp
mov
and
iret
push
adc
xor
mov
je
push
data16
push
rolb
shlb
pop
adc
dec
mov
xor
dec
xchg
xchg
cmpsb
ds
mov
scas
mov
pushf
insb
rolb
add
inc
sti
fistpl
stc
push
hlt
mov
aam
stc
pop
pop
movsl
aad
jl
loope
ret
scas
and
add
in
xor
addr16
jmp
out
lds
int3
xor
lret
push
fs
mov
push
add
sub
jae
inc
test
dec
dec
xchg
aam
adc
jp
push
stc
out
sbb
mov
inc
pop
pop
jbe
es
imul
push
push
xchg
std
pop
and
shrb
push
lock
cmp
lret
icebp
dec
sub
jge
loop
dec
in
out
mov
in
imul
cmp
xchg
aas
clc
test
dec
test
or
lahf
pusha
xchg
test
push
cmp
dec
loop
cmp
andb
es
cmp
pushf
cli
ja
insl
insb
and
mov
lock
sub
pop
dec
dec
dec
pop
rcll
pop
pop
push
in
mov
icebp
pop
mov
js
rcll
xchg
nop
mov
leave
gs
mov
fcomip
ds
adc
rcrl
pop
pop
jno
mov
xchg
sub
push
pop
cmc
push
ja
insb
xor
outsl
cld
addr16
mov
dec
mov
shlb
or
shr
gs
rorb
ds
cmp
in
inc
xchg
adc
sub
mov
les
lret
mov
data16
lret
bound
add
je
jo
jmp
sbb
push
adc
lods
pop
sbb
mov
lock
out
lods
adc
dec
daa
std
aam
insl
lahf
mulb
mov
mov
mov
shl
subb
iret
or
mov
pop
in
stos
add
cmpsl
imul
loope
pop
dec
lret
push
popf
cld
inc
jae
dec
out
pop
popf
sahf
popf
addr16
out
insl
arpl
into
sbb
lock
pop
daa
push
aaa
xchg
pop
lock
mov
push
repnz
push
inc
into
mov
push
inc
and
imul
es
push
add
mov
inc
jns
or
mov
pop
scas
inc
mov
cld
xchg
pop
adc
push
xor
call
sbbl
sahf
lcall
loope
mov
mov
xchg
push
xchg
movsb
cltd
std
es
pop
cmp
or
testl
sbb
aam
shl
push
xor
cmpsb
lds
data16
pop
add
sub
xchg
adc
pop
hlt
test
ljmp
pusha
fadds
and
andl
subb
arpl
mov
movd
fincstp
cld
pusha
repnz
xchg
mov
mov
fnstcw
in
test
roll
jmp
jg
inc
bound
adc
mov
fistpll
adc
aad
insl
dec
xor
cmp
es
stos
dec
inc
clc
dec
dec
sub
jb
addr16
xchg
cltd
inc
mov
jbe
xor
ljmp
dec
add
inc
and
or
sub
jecxz
jecxz,pn
add
mov
or
cmc
mov
lods
mov
push
mov
pop
jecxz
hlt
cltd
jp
mov
mov
inc
jmp
js
popf
jo
cltd
loope
cli
loope
xor
daa
push
adc
xchg
xchg
jns
push
sub
jb
aaa
push
outsb
inc
fwait
mov
push
iret
pop
movsb
jae
xchg
ss
test
scas
cltd
ds
in
lods
mov
test
repz
adc
cmc
lcall
jbe
sbb
fcompl
xor
popa
lret
pop
subl
cmpsl
scas
bound
cmpl
push
divl
push
popf
pop
xor
sahf
and
mov
ss
inc
daa
jae
cs
push
cmc
xor
pop
movsl
cmc
push
jns
imul
add
jnp
hlt
js
dec
outsb
add
or
mov
pushf
sbb
cltd
inc
jns
mov
jbe
bound
sbb
sbbl
cmp
xor
scas
mov
xchg
ret
and
fildl
cmp
mov
xchg
push
push
ret
int
xchg
ret
enter
popa
lock
movsl
test
ja
mov
mov
or
movsb
cmp
cmp
mov
xchg
out
or
rorl
cld
pop
stos
push
lods
pop
sub
arpl
std
cmp
js
cmp
repnz
xlat
mov
pop
mov
movsb
bound
loopne
and
shll
cmp
scas
mov
xor
negb
push
cli
xchg
mov
cmp
lods
out
lahf
xchg
add
test
fwait
xchg
std
in
inc
decb
xor
cwtl
and
sub
xchg
jmp
jae
shll
adc
clc
pop
scas
jno
sahf
jno
dec
int
out
push
out
popa
dec
pop
push
hlt
stos
mov
lock
enter
adc
xchg
and
add
adc
or
jne
xchg
cmpsb
push
incl
push
sbb
inc
jns
pop
jmp
ja
push
test
shll
cli
fbstp
add
mov
out
sub
pop
add
shl
lret
pop
jle
dec
dec
dec
lods
pop
movhlps
mov
and
push
mov
xchg
mov
stos
loopne
pop
movsb
in
xchg
push
cmp
daa
into
les
aam
or
cwtl
es
jle
into
cmp
dec
or
icebp
sub
das
pop
inc
fisttpll
mov
add
cmp
xchg
js
jnp
es
addr16
sbb
lods
inc
in
adc
cmpsb
pop
mov
rclb
and
data16
clc
xchg
mov
in
inc
push
fcomps
pop
mov
fmull
push
mov
or
mov
daa
shr
movsb
push
push
repnz
push
fdivr
scas
mov
dec
arpl
xchg
imul
in
cltd
insb
rcl
ret
aaa
jo
iret
fildl
or
aad
push
test
jno
pop
sub
je
sbb
fdivl
pusha
sti
popf
mov
andb
addr16
jae
fs
rcl
push
pop
lock
daa
dec
aad
push
fidivrs
or
aaa
movsb
repnz
dec
aad
mov
outsl
loop
es
insb
cmp
cwtl
loop
shlb
das
inc
cmpsb
rcll
out
mov
and
and
stos
dec
insb
fistpll
mov
xchg
icebp
mov
and
popl
cmp
cmpsb
cmc
int3
push
call
aas
push
mov
adc
cld
call
scas
jb
jp
push
pushf
add
push
pop
mov
mov
les
mov
sahf
lds
pop
je
pop
sbb
sub
outsb
inc
add
test
scas
xchg
fsubrl
mov
mov
outsb
sbb
fsts
test
xor
mov
jns
and
add
into
jb
sbb
mov
pop
or
loopne
daa
mov
rolb
cld
fisubl
xor
sub
pop
test
ret
inc
cmp
jae
jbe
ret
push
scas
inc
out
fwait
data16
bswap
enter
scas
or
scas
jmp
outsb
fwait
call
lret
js
inc
xlat
jmp
ljmp
ja
in
or
int
jo
pop
ret
out
jecxz
in
out
jae
mov
cmp
xor
xchg
les
mov
addb
push
adc
mov
adc
cmp
jbe
sbb
mov
pop
jl
xchg
push
addr16
sahf
fisttps
bound
mov
cwtl
in
push
ljmp
popa
subl
dec
shlb
movsb
sbb
scas
popa
subl
scas
sub
movsl
mov
loope
enter
movsl
mov
pop
mov
orl
and
mov
clc
xchg
sbb
and
dec
in
movsl
sub
movsb
mov
ficomps
inc
mov
inc
scas
int3
cmp
popa
popa
adc
inc
xchg
mov
xorl
stos
push
adc
xor
and
xchg
adc
sbbl
daa
cmp
ret
xchg
pushf
cmc
push
sbb
int3
icebp
fs
push
ret
push
ds
out
je
cli
pop
repnz
mov
aaa
sub
add
dec
movsb
sbb
fmul
cmpsl
scas
cs
xor
dec
vpmaddwd
push
xchg
jmp
stc
sub
loope
cli
or
sub
test
or
cwtl
push
xor
loop
inc
push
mov
pushf
out
pmuludq
pop
sub
into
inc
cmp
outsl
jle
shrb
mov
lock
pop
ret
pop
dec
out
nop
mov
cltd
mov
inc
inc
movsb
leave
pop
cmp
or
cmp
mov
in
jnp
xor
jo
lods
loope
pop
dec
test
arpl
sbb
mov
mov
aad
lock
sbb
rcll
repz
jno
std
lahf
sub
idivl
adc
mov
mov
mov
add
xorb
xchg
xchg
les
sbb
shll
add
aad
cmp
mov
mov
scas
add
push
mov
ja
dec
inc
out
cltd
movsb
subl
out
push
sbb
std
mov
add
inc
cmpsl
imul
xchg
cmp
js
cmpsb
out
adc
jle
mov
jnp
in
pusha
jb
inc
stc
sbbb
mov
add
xor
mov
dec
stos
mov
jne
addr16
das
xchg
push
icebp
call
xorb
cmp
lahf
notl
shll
xchg
push
out
jle
cmp
mov
mov
daa
fs
out
cmp
xchg
scas
sbb
mov
inc
sti
xchg
js
jo
sti
sbb
notb
lcall
push
sarw
sbb
call
stos
sub
shlb
dec
jno
inc
sbb
outsl
xchg
lock
int
push
cltd
jg
xchg
scas
adc
fdivrl
jbe
and
sbb
loope
cmp
dec
in
inc
ret
dec
mov
imul
popa
cmc
mov
into
xor
sti
call
shl
pusha
dec
in
add
lods
test
out
arpl
sub
push
pop
iret
repz
or
es
push
iret
inc
sar
push
xchg
fs
mov
or
adc
push
push
bound
ret
sub
fists
outsb
mov
pop
fistl
daa
push
push
fistpll
or
pusha
add
adc
stc
push
xchg
imul
mov
dec
daa
test
js
sbb
push
aad
aas
or
shrl
and
push
outsl
cmpsl
rcl
int
jno
data16
push
out
mov
push
inc
je
jno
jmp
lods
sbb
outsb
add
jno
mov
les
mov
pop
movsl
lret
xlat
mov
sub
jmp
or
arpl
icebp
sbb
and
pop
out
sub
fadds
sub
scas
jmp
movsl
fucompp
ja
loopne
inc
cs
xchg
cwtl
add
fsubrs
nop
pusha
and
scas
out
and
lahf
dec
sub
sub
xor
pop
clc
push
inc
bound
sti
bound
xor
push
cmp
das
mulb
mov
in
xchg
outsb
dec
data16
into
sub
negb
popa
and
fmulp
das
adc
xchg
dec
pushf
mov
int3
aam
push
fidivrl
jnp
and
jns
lcall
stc
sbb
and
aaa
mov
daa
cmc
scas
and
int
insb
mov
mov
fists
jmp
shlb
push
stos
add
orl
addr16
shr
jno
xchg
adc
scas
mov
fists
call
out
dec
mov
outsl
fisubs
jmp
test
pop
push
sub
push
flds
loop
add
es
lcall
cltd
test
rorl
push
lret
fnsave
inc
loop
adc
in
xorb
mov
push
pop
lods
aad
cmp
cmpsl
rcrb
insl
inc
jecxz
rorb
fnstsw
out
loopne
push
xchg
outsl
roll
push
cmp
aam
push
popa
lret
outsb
cmpsb
adc
jmp
mov
mov
sub
xor
mov
movsb
fldenv
dec
mov
mov
std
divps
cmpb
fisttps
sti
adc
cmovae
xchg
jo
mov
mov
sbb
xchg
fldenvs
dec
push
or
inc
outsl
scas
pop
cmpsb
nop
fsubs
fdivs
je
jbe
xchg
lahf
adc
aas
aad
bound
test
mov
fcompl
sub
sub
dec
adc
push
mov
aam
icebp
or
mov
mov
test
mov
pop
aam
pusha
xchg
or
test
xchg
outsb
sbb
icebp
xchg
sahf
mov
cli
movl
inc
jbe
add
call
in
lcall
jbe
jns
lahf
test
mov
je
jbe
adc
xor
fcomip
xor
inc
popf
xor
mov
ljmp
add
adc
stos
icebp
xor
adc
mov
jge
xchg
stc
sub
fwait
jmp
movq
xor
fistl
pop
add
lods
jge
sub
in
arpl
or
jge
sub
cmp
or
or
in
mov
adc
dec
dec
cld
sbb
ja
cmp
jp
xor
dec
sbb
and
int3
subl
and
ja
cmp
mov
inc
jecxz
pop
icebp
mov
lcall
cmp
xchg
inc
xchg
push
cmp
ret
mov
mov
cmp
data16
push
sub
std
gs
fidivs
in
icebp
sub
xlat
mov
pusha
int3
xchg
bound
shrl
pop
xor
mov
xor
testb
jae
add
nop
inc
and
fldt
jecxz
mov
adc
pop
data16
push
sub
pusha
xlat
xor
sub
enter
pop
or
mov
mov
or
pop
rorb
sub
gs
out
cmpsl
mov
lcall
cmpsl
lds
fcomip
int3
out
jb
fidivrl
push
xchg
add
pusha
test
mov
test
jecxz
cmp
test
cmc
fisttpll
add
adc
push
faddp
icebp
push
out
out
mov
dec
mov
sub
rcll
test
and
jne
insb
or
adc
sti
cmp
jecxz
aam
insl
icebp
inc
cmp
mov
jl
test
push
data16
pop
sub
or
lods
xor
mov
pop
mov
ror
ljmp
sbbl
sub
pop
ret
clc
dec
iret
orb
in
andb
enter
arpl
popf
aam
xor
sub
push
cs
cwtl
mov
push
insl
lea
std
aaa
inc
incb
sahf
cmp
jbe
add
cltd
jae
repnz
aaa
fsubs
stos
xchg
clc
sbb
icebp
ja
cwtl
cmp
push
mov
jle
test
fsubrl
test
js
xchg
pusha
stos
loope
lret
outsl
lock
sub
pushf
shrb
shlb
aas
cli
sbb
scas
les
or
fwait
imul
mov
fsts
sti
cmp
inc
ret
fldz
scas
arpl
pop
lahf
push
shll
fsubrl
mov
out
fstpl
outsl
xchg
shll
add
repz
push
cmp
fcmove
adc
inc
jl
aam
add
pop
dec
jecxz
test
or
ret
xchg
xchg
xchg
push
adc
dec
into
sbb
nop
loopne
sub
lds
push
cmc
test
scas
ja
push
push
scas
mov
data16
vpmacsdql
pushf
test
aam
imul
stos
ret
pop
xchg
in
test
jg
hlt
mov
cs
xchg
sbb
notb
jmp
loope
adcl
pop
ficomps
inc
mov
test
mov
inc
into
cmc
push
test
mov
pop
scas
cld
lock
adc
iret
cs
aad
xchg
pop
test
cmp
ljmp
add
std
jns
cld
outsl
sub
jns
dec
dec
jle
dec
jns
stos
xchg
jg
lcall
sbb
clc
fsubs
ficoms
aas
gs
outsl
lods
and
inc
inc
mov
mov
les
push
orl
and
sub
shll
mov
test
fwait
mov
sub
or
cs
push
fstps
mov
jl
jno
ds
xlat
push
mov
jae
dec
dec
sahf
mov
cmp
shrb
das
loope
or
fwait
cmp
dec
lahf
out
fcmove
or
sbb
outsl
sbb
aaa
push
sub
inc
and
add
lods
icebp
in
arpl
push
dec
dec
mov
lods
jnp
sub
jge
pop
iret
js
test
jp
hlt
decb
lods
push
push
pusha
call
int
mov
push
xchg
mov
sbb
adcb
or
enter
push
mov
mov
or
int3
or
and
ja
mov
testl
or
and
aaa
sub
sub
push
cmp
stos
stc
popf
sub
pop
cmc
cwtl
pusha
and
xor
hlt
pop
jno
adc
scas
inc
pop
hlt
mov
jp
cltd
xor
pushf
xchg
adc
es
lahf
adc
add
mov
cmp
rcrb
push
scas
aad
loope
imul
outsl
pop
mov
imul
imul
sti
fwait
pop
mov
icebp
int
in
adc
fisubs
dec
mov
les
fucomip
fdivrs
jmp
xor
jnp
and
push
sbbb
ljmp
add
mov
push
aas
push
stc
pop
andb
stos
jmp
int3
jge
and
mov
mov
adc
or
aas
fwait
cmpsb
lock
fnsave
in
rorl
scas
ljmp
lcall
scas
fidivs
mov
pop
sub
pop
cmp
pop
xchg
ret
cmp
xor
and
pop
adc
cli
je
pop
ficomps
inc
test
mov
jg
mov
into
or
inc
scas
jno
cmp
lock
cmp
in
addr16
add
in
mov
cmc
jl
push
scas
scas
scas
ret
in
data16
icebp
mov
dec
addl
in
test
jnp
outsb
and
xchg
ja
enter
shrl
or
stos
mov
mov
mov
mov
aas
xlat
int3
jne
add
jge
mov
rcl
sti
std
ret
and
out
push
jnp
push
popf
xor
int
enter
jnp
sti
mov
je
push
cltd
aas
mov
lods
mov
mov
and
push
cmpsb
shrb
inc
imul
lea
imul
mov
in
sbb
cmp
and
imul
push
xchg
ret
sub
movsb
or
test
pop
sub
cmpsb
jbe
xchg
jno
dec
and
mov
push
adc
js
add
mov
push
pop
mov
cmc
xor
dec
or
repnz
or
cmp
xchg
test
shlb
inc
shr
fs
and
stc
pop
lods
inc
mov
inc
popf
sar
and
inc
cs
mov
repnz
shrl
lea
fcoms
or
or
sbb
outsb
subl
push
imul
cmc
ss
mov
mov
mov
pop
ja
daa
add
jae
xor
xchg
dec
mov
jecxz
adc
pop
mov
shll
inc
and
sbb
inc
fimull
ret
jecxz
test
xchg
push
test
ja
aam
lcall
xchg
jge
xchg
pop
mov
xlat
aad
pop
mov
xor
scas
in
adc
aas
push
adc
mov
cmpl
add
push
xchg
xor
cmc
out
jecxz
or
nop
sbb
cmp
ja
xor
jns
fcompl
or
inc
xchg
stos
jne
lahf
pop
xor
ljmp
inc
mov
xorb
adc
mov
ja
dec
push
inc
int3
cmp
shl
xor
stos
xchg
push
sti
mov
mov
fdivs
pusha
pop
ja
lods
sar
add
sbb
les
sub
jecxz
ret
add
test
or
je
xchg
fisttpll
scas
ljmp
mov
fistpll
xor
jne
pop
push
mov
in
inc
bound
iret
inc
fistps
mov
int
cmpl
out
pop
pop
lock
mov
lea
add
xor
jbe
cmp
dec
repz
jmp
ja
jmp
jg
push
jmp
mov
int
or
lret
push
mov
pop
nop
mov
leave
jmp
push
or
pop
mov
stos
inc
in
lahf
es
push
mov
repz
les
insb
sbb
jge
enter
fdiv
orb
insb
fisttps
push
cs
pop
jp
cmpb
out
out
jb
arpl
xchg
je
daa
decl
addr16
mov
lcall
call
sbb
mov
cmc
or
imul
stos
xchg
dec
mov
xor
int3
jae
sbb
test
out
sub
inc
push
aas
imul
out
lahf
repnz
mov
and
xchg
scas
faddl
arpl
pusha
out
dec
fs
aaa
rcl
stc
pop
mov
xor
lea
xor
pop
scas
push
dec
lock
mov
pop
mov
sub
pop
shlb
cmp
repnz
adcl
fsubs
sub
movsl
push
std
or
and
imul
xor
mov
fmulp
xchg
adc
jecxz
lahf
lock
xchg
in
push
mov
jge
out
xor
rol
pop
fisubl
ljmp
jo
mulb
into
pop
adc
fnstcw
addr16
jo
ljmp
adc
sub
out
fisttpl
xor
iret
jmp
add
fldcw
mov
cmpsb
cmc
popa
push
mov
add
mov
mov
sbb
mov
popf
scas
jp
inc
xchg
in
fisttpll
sbb
mov
xchg
sahf
gs
lcall
icebp
cmpl
cld
xchg
inc
pushf
scas
jg
mov
pushf
cwtl
jg
mov
jae
imul
out
push
fmull
push
xor
fucompp
sub
imul
jo
ds
push
pop
dec
aaa
or
leave
pusha
wrmsr
mov
stos
mov
pop
mov
movsl
adc
cmpsl
lods
dec
or
xor
pop
test
std
clc
negb
in
pushf
mov
adc
out
pop
out
fcompl
push
mov
shll
or
add
mov
addr16
add
imul
mov
dec
call
pop
jbe
jg
pop
xlat
gs
pop
inc
lret
xor
sub
jno
xchg
inc
adc
jnp
aas
jmp
insl
sbb
mov
jg
add
ret
and
repnz
mov
sub
dec
loop
stos
mov
ja
imul
mov
mov
adc
jbe
icebp
mov
cs
xchg
push
popf
mov
fwait
or
cmc
mov
lock
xchg
lret
out
add
mov
rclb
xor
pusha
out
ret
mov
fcoms
mov
sub
lods
lahf
mov
jbe
adcl
scas
xchg
sahf
clc
popf
jno
shlb
clc
and
test
adc
pop
fbstp
mov
jns
fisubrl
dec
mov
cmovnp
cmp
push
jp
mov
gs
fwait
inc
inc
call
xchg
enter
add
pop
inc
mov
icebp
fcomp
stos
test
ss
cmc
push
leave
les
jae
xchg
pop
mov
jle
jno
mov
shlb
or
ret
cmp
fidivs
in
pop
dec
pop
xchg
or
out
popf
addr16
pop
fbld
cmp
inc
lods
out
cwtl
and
adc
mov
adc
push
mov
add
xor
and
inc
xorb
insl
and
rorb
xchg
xor
js
jno
pop
sub
call
push
jge
test
mov
jle
mov
int
imul
lea
lock
add
int3
jbe
xchg
push
adcl
jg
inc
xor
add
fldenv
cltd
sti
jge
pusha
aaa
popa
mov
shlb
nop
test
std
idivl
mov
push
clc
in
xchg
ret
push
scas
mov
pop
pop
mov
jmp
jle
jo
mov
in
pop
mov
ficomps
rorb
fcoms
mov
xchg
cld
jne
in
jo
shld
icebp
mov
adc
push
sarl
imul
cli
or
repnz
xchg
push
mov
mov
aas
out
sbb
pop
and
cmpsl
pop
xchg
popf
and
sub
andb
mov
daa
mov
in
stos
test
and
aaa
inc
jnp
rcr
rcrl
psubb
jns
add
mov
push
or
aaa
insl
imul
out
add
inc
push
pop
adc
movsl
mov
loope
ss
sbb
mov
mov
inc
fnstenv
out
xor
and
div
push
xchg
push
push
jle
lods
dec
aad
jl
sub
mov
aas
cmp
pop
out
xlat
outsb
add
push
fstpl
push
cli
je
dec
out
mov
sarl
or
cmpsb
cwtl
das
scas
lahf
negb
mov
cli
andb
cmp
fmull
hlt
out
xor
in
jns
cmpsl
mov
dec
mov
add
loopne
inc
and
rorb
sbb
inc
dec
aaa
xor
lret
jae
mov
adc
es
mov
xchg
es
test
rcrl
push
mov
jae
test
cmp
jecxz
popf
push
lret
mov
loop
jnp
sbb
test
adc
test
dec
dec
mov
loope
cmp
xor
js
inc
outsl
in
andl
and
mov
lods
fmull
lock
gs
aaa
xchg
jns
mov
cmp
pop
movsl
aas
out
cmp
aaa
dec
pusha
imul
cli
mov
mov
xchg
subl
mov
test
push
add
js
aam
push
cmpsb
mov
mov
cs
sub
jb
mov
pop
mov
add
dec
xor
ds
add
lea
mov
mov
cmc
inc
lock
inc
in
add
mov
jp
lahf
aam
add
fmull
aam
pusha
push
in
mov
xor
shlb
ds
mov
notl
cmp
pop
nop
cld
stos
inc
mov
gs
enter
xchg
cs
fwait
xor
int3
sarb
jmp
jns
mov
pusha
inc
mov
add
movsl
aad
mov
inc
frstor
cmp
in
cmp
mov
inc
mov
std
lcall
or
pop
xor
bound
cmp
idivb
movsb
jns
pop
adc
lcall
push
jbe
shrl
pop
je
jae
rorb
xchg
inc
xchg
out
aad
test
imul
mov
and
push
push
cltd
cmp
mov
ret
sub
inc
es
dec
adc
int
and
cmp
push
xchg
xchg
pop
repnz
ljmp
dec
mov
js
xchg
and
jae
jg
repnz
and
pop
lea
or
sub
inc
xor
push
cmc
imul
les
ret
lock
push
jl
jns
and
mov
inc
jns
jbe
cmp
outsl
inc
adc
push
mov
fmull
cmp
mov
push
add
mov
shrb
outsb
xor
jae
cmp
xchg
negb
pushf
or
hlt
lahf
mov
or
mov
mov
xchg
out
cld
aas
in
hlt
adc
pusha
out
push
jmp
shll
lret
cs
and
popa
leave
pop
cmp
frstor
jp
int3
push
or
jl
push
repnz
inc
lret
pop
inc
dec
out
pop
xor
mov
mov
cmp
aaa
in
aaa
jbe
nop
push
jmp
cmp
push
add
jo
pop
sub
divl
sub
push
mov
adc
xchg
inc
out
pushl
outsb
sbb
insl
xor
insb
jbe
mov
mov
push
dec
adc
fisttpl
xor
push
rolb
movsl
xor
cld
xchg
mov
pop
push
and
loop
sbb
push
outsl
inc
pop
lahf
hlt
ret
cmp
dec
mov
inc
sub
jae
test
shll
or
insb
adcl
test
or
leave
mov
cmpsl
xor
scas
adc
mov
push
notb
pop
xchg
out
cltd
lret
ljmpw
and
clc
mov
fisttpl
lods
xchg
pop
mov
aaa
popa
jmp
aaa
and
aam
testl
xchg
adcb
mov
cmp
xor
dec
pop
pop
notl
mov
mov
add
adcl
or
lock
pop
imul
jbe
aad
xchg
pop
jl
and
call
or
mov
js
outsl
leave
dec
sub
test
jne
je
movsl
and
adc
xchg
xor
fsubl
mov
pop
das
in
sti
stc
nop
sub
sahf
sbb
add
jns
xchg
push
and
sub
pop
loope
sbb
je
fadd
jno
jge
push
ret
push
stos
out
pop
ljmp
push
or
jne
dec
cmpsl
sbb
fldl
scas
adc
ret
adc
ficompl
mov
dec
std
push
mov
fildl
add
repnz
adc
cmp
jmp
ret
mov
mov
jno
inc
int
arpl
ficompl
xor
bound
adc
and
or
xlat
out
adc
and
jns
movsl
stc
shlb
or
repnz
pop
fisubrs
xchg
dec
mov
hlt
adc
rclb
dec
cmp
adc
mov
in
lods
ja
je
mov
in
dec
out
jge
pop
lcall
push
iret
out
adc
pop
push
jnp
mov
imulb
sarb
cmp
lds
stos
dec
mov
push
frstor
push
ret
jb
mov
cmp
imul
dec
sub
call
pop
cmpsb
push
push
into
jae
and
cmpsl
loopne
mov
dec
xlat
out
ss
dec
push
sahf
mov
push
and
mov
loopne
lock
push
mov
pop
sbb
pop
fwait
sub
pop
inc
xlat
lods
pop
ss
dec
pop
inc
adc
cmp
lcall
pushf
mov
inc
xor
popf
bound
lods
fimuls
and
shlb
shlb
loopne
push
mov
mov
arpl
rcrl
add
xchg
sbb
dec
xchg
cld
daa
mov
lock
inc
lods
xlat
pushf
xchg
sbb
fld
cltd
outsl
loop
xchg
nop
int3
arpl
mov
int3
or
push
fcmovb
aaa
add
inc
cmpsb
movsb
cmp
gs
sbb
xchg
mov
pop
cmp
add
stos
jbe
imul
cmpl
mov
jmp
pop
xor
jb
jo
xor
dec
xchg
xor
sbb
inc
daa
mov
xchg
pushf
outsl
mov
push
test
movsl
xchg
push
sbb
mov
mov
mov
mov
mov
cmp
pop
mov
lds
repnz
sbb
arpl
jle
xadd
addr16
filds
push
xlat
fcomps
pop
jae
jle
imulb
mov
or
or
sbb
aas
fidivl
shrb
jnp
shll
inc
repz
jle
cmpsl
add
fldcw
popa
add
sub
inc
mov
inc
lret
bound
push
jle
mov
or
stos
xor
xchg
adc
test
bound
rcrl
add
mov
push
clc
stos
into
and
xchg
fs
aam
mov
cmp
pop
jne
push
inc
lds
mov
jl
fcomi
test
mov
push
stos
inc
cmp
jae
pop
stos
xor
jecxz
pop
rolb
dec
mov
shl
mov
or
ficomps
fnstcw
je
adc
inc
xrelease
fnsave
imul
repnz
pop
in
mov
mov
inc
mov
in
mov
xchg
cmp
sarl
loopne
hlt
push
lods
movsl
repnz
sbb
pop
add
dec
lods
cwtl
sar
in
mov
and
xchg
adc
out
out
ficomps
mov
and
xchg
cld
pop
lock
sub
mov
jnp
int3
gs
sbb
jno
sub
sbb
fucomip
add
jle
int
xchg
sarb
inc
mov
cmpsb
xchg
add
out
push
stos
mov
fisttpl
mov
std
xor
testl
std
fildll
dec
cmp
into
and
lock
mov
mov
or
mov
push
jb
push
sub
cmp
addr16
movsb
out
dec
sub
ret
inc
dec
sub
mov
sbbb
sub
flds
jle
outsl
movsl
imul
lds
cmp
mov
mov
pop
mov
repz
xor
sbb
lahf
icebp
mov
cmp
cmp
adc
xor
iret
ret
movsb
push
mov
add
sbb
outsl
xor
fs
fidivl
cmpsb
in
in
fistl
xchg
out
jns
mov
dec
fwait
xor
dec
popf
jns
repz
inc
lret
rclb
and
popf
fldcw
sbb
cli
leave
stos
cmp
out
bound
cmp
push
scas
mov
mov
enter
push
sub
dec
loope
ret
mov
adc
int
xchg
clc
adc
je
pop
mov
mov
js
loopne
pop
mov
inc
hlt
pusha
pop
xchg
stos
mov
add
test
filds
outsl
ljmp
push
cltd
mov
leave
push
lods
xlat
dec
push
push
or
mov
pushf
daa
or
fldt
inc
lahf
push
mov
ljmp
jb
clc
arpl
cmpsl
imul
jb
lea
leave
fidivl
testb
movsl
push
dec
dec
loop
lret
jle
mov
xor
add
pop
in
cvtpi2ps
xchg
test
js
mov
sub
jae
add
push
add
test
and
cwtl
imul
pushf
pop
add
mov
sub
mov
mov
and
jge
mov
sbb
cs
gs
xchg
test
jbe
stos
lods
mov
push
movsl
int
enter
inc
mov
xchg
xchg
int
into
hlt
or
cmp
data16
sub
push
cmp
push
add
mov
lds
scas
mov
repnz
push
insl
pusha
cmpsl
and
mov
sti
sub
loope
xchg
xor
lods
es
cmp
addr16
sbb
cmp
jp
cmp
cmp
xchg
pusha
mov
outsl
xchg
sbb
inc
sbb
insb
fwait
xchg
add
jae
jbe
mov
nop
outsb
dec
loop
xor
rclb
lock
in
xchg
imul
mov
fdiv
ret
mov
shrl
xor
sub
loope
dec
xor
inc
fdivrs
add
dec
testb
pop
or
inc
cmp
arpl
push
insb
int
and
push
and
push
shll
das
dec
xchg
pop
daa
repnz
out
out
xchg
jmp
in
testl
and
and
add
scas
push
mov
adc
mov
or
xchg
negb
dec
dec
sub
scas
out
sub
pop
fs
iret
stc
or
mov
xlat
stos
inc
xchg
dec
aad
pop
mov
jmp
add
mov
add
loopne
in
orl
jp
dec
jae
sti
movsb
rolb
sbb
sbb
aaa
out
test
pop
push
arpl
or
sub
pushf
notl
sahf
stos
rol
pop
add
push
loopne
mov
sti
dec
sub
jle
pop
mov
jnp
int3
and
fists
push
cmpsl
adc
fdivl
mov
sahf
test
mov
out
orb
mov
ficoml
and
push
lds
sbbb
out
les
sbb
mov
outsb
jl
loope
arpl
adc
aad
jae
xor
fwait
scas
clc
gs
mov
mov
dec
ds
out
lock
loop
push
aam
negl
movsb
dec
and
mov
mov
sahf
outsl
mov
dec
outsl
loop
lahf
stos
cmp
xchg
mov
mov
imul
xor
sub
pushf
sahf
push
andb
mov
pop
pushl
movsl
das
fistl
cmp
shr
mov
aad
xchg
lods
jecxz
dec
mov
stos
subl
mov
push
daa
or
aam
jecxz
push
mov
xor
out
loope
and
or
cwtl
xor
jge
mov
pop
cltd
popa
lret
push
cmc
movsb
push
lea
fsubr
stos
aam
mov
sub
pop
mov
sub
sbbb
cmp
or
das
add
repz
popa
mov
push
and
adc
das
pop
popf
data16
xchg
outsb
in
xchg
jnp
aad
pop
cmp
fldl2t
dec
cwtl
cmpsb
jbe
lock
cltd
mov
jno
cld
sub
adc
or
xchg
jne,pt
xchg
push
mov
out
int
outsb
or
xchg
out
mov
shr
stc
and
test
push
leave
mov
addr16
repz
jbe
icebp
or
and
jnp
sahf
dec
fwait
hlt
cmp
adc
out
jl
push
adc
add
pushf
lock
iret
push
movsb
shl
mov
jno
add
xchg
mov
xchg
loop
cltd
adc
dec
cmp
bound
sub
xchg
mov
outsl
jmp
lods
push
dec
mov
jnp
sub
cwtl
lock
enter
sarl
int
sub
cwtl
in
lods
dec
add
add
testl
rcrl
mov
mov
inc
je
push
fisubrl
inc
inc
pop
push
jmp
repnz
pop
stos
cs
testl
fsubr
xchg
sub
mov
in
add
jge
xchg
adc
pop
jbe
dec
sbb
lahf
movsb
gs
mov
add
rorb
or
ret
cli
jg
adc
lret
sbbl
push
outsl
cmp
jo
add
aas
lret
jle
stos
mov
mov
push
mov
daa
divb
xchg
ja
mov
inc
arpl
test
loop
or
in
pop
es
add
cs
xchg
imul
push
pop
pusha
inc
test
stos
xchg
fstl
int3
inc
or
sti
mov
clc
jnp
repnz
sahf
rep
adc
and
xor
xchg
xlat
mov
jne
xor
sbb
lods
lahf
negb
or
leave
imul
dec
cli
push
and
aas
xchg
pop
xlat
outsb
mov
pop
adc
and
adc
lock
js
sub
aam
cmp
jle
jl
pop
xorl
arpl
clc
outsb
mov
sar
xor
and
adc
mov
clc
mov
int
stos
jg
xlat
lret
sti
clc
sti
sbb
or
out
mov
je
pop
inc
gs
add
mov
out
push
sub
testl
dec
xor
push
lahf
loopne
push
jp
inc
pop
out
test
lcall
les
push
outsl
imul
stc
popf
xchg
aaa
jmp
shll
or
loopne
adcl
push
addr16
cwtl
leave
xchg
lret
mov
mov
jnp
movsl
and
sbb
pushf
lret
xor
xchg
call
cmp
add
pop
cmp
mov
dec
in
aaa
iret
ficomps
cmpsb
lock
icebp
xor
xchg
push
cmpsb
sti
mov
and
nop
out
mov
cmp
mov
adc
pop
fsub
push
mov
insl
inc
push
xchg
outsb
mov
repz
scas
push
out
pop
insl
in
test
cmc
cmp
mov
pusha
jp
pop
mov
jnp
pop
pop
lds
mov
lahf
das
imul
rcrb
pusha
mov
xlat
cmp
aas
dec
xchg
mov
aam
inc
icebp
cmp
out
ljmp
mov
pop
clc
pop
dec
shlb
test
subb
xor
pushf
mov
fdivrl
clc
das
lret
lods
add
call
out
cmc
or
scas
inc
lret
and
mov
xor
jae
out
lcall
mov
cltd
lods
outsl
and
subl
xchg
pushf
add
jno
add
adc
jg
cmc
dec
aaa
data16
add
scas
mov
cs
adcl
mov
inc
aad
call
adc
hlt
cmp
adc
or
mov
dec
das
int
or
sub
mov
or
negb
and
aad
pop
and
xor
addr16
sti
xchg
ljmp
add
cmp
into
inc
pusha
arpl
out
lods
xor
inc
mov
jg
pop
lret
in
jne
dec
cmpsl
xchg
inc
repz
push
xchg
jno
lock
sub
mov
cmpsl
and
cmpsl
dec
mov
fists
sarl
popa
orl
push
out
add
loope
cwtl
jne
jb
fsubrl
xchg
xchg
js
jb
jns
cmp
test
sub
jl
push
cwtl
out
movsl
inc
push
mov
mov
cmp
cltd
aaa
pushf
xchg
fwait
loop
loopne
jecxz
xchg
add
xchg
push
inc
dec
rorl
cld
pop
add
pop
mov
xlat
std
cmp
outsl
xchg
loop
fsubs
pop
roll
pop
cmp
adc
ja
mov
jne
inc
push
lods
test
cltd
addr16
jnp
imul
add
push
aas
lods
sar
fs
or
cld
outsl
mov
adc
xchg
push
bound
push
xor
mov
mov
ds
cltd
pop
adc
dec
and
outsb
lea
mov
xor
aad
cmp
fs
int
dec
loope
insb
fidivl
arpl
xchg
sub
or
outsb
fdivs
pusha
aas
dec
xchg
subl
inc
sbb
lock
je
sub
push
sub
jno
inc
pop
pop
pop
roll
jb
rolb
sahf
cli
or
ljmp
aad
sub
out
jg
jmp
dec
outsw
and
popa
leave
in
sti
xorl
shrl
add
add
cli
and
cmpsb
or
and
addr16
jbe
or
xor
push
push
pop
leave
loopne
lods
frstor
and
popa
xchg
test
int
out
jbe
mov
stos
and
jae
and
push
jmp
cmpsb
add
dec
in
jecxz
mov
jb
nop
inc
cmpsb
cwtl
ficomps
shl
lds
in
dec
and
xchg
aas
push
iret
xchg
xchg
xor
fucom
js
inc
aaa
into
jae
call
nop
xchg
push
pop
mov
jecxz,pn
out
sub
mov
mov
or
loopne
xor
shrb
fsubs
jo
jmp
cmpsl
ds
jp
mov
pop
popf
push
adc
dec
test
test
es
mov
clc
xchg
cltd
test
pop
cmp
das
mov
inc
mov
mov
fwait
pop
cmp
movsl
push
sub
xchg
sbb
xchg
xor
pop
inc
dec
add
inc
scas
push
xchg
rcr
sbb
cmp
iret
stos
leave
outsb
xchg
sub
out
mov
xchg
insl
or
push
sub
das
lds
xor
adc
ss
imul
xchg
or
gs
scas
sub
out
mov
rclb
iret
rcl
xor
jo,pt
adc
xchg
pop
sahf
pushl
movsb
hlt
or
and
cmp
pusha
sbbb
push
sub
aas
dec
or
cmc
or
aad
pop
mov
adc
into
inc
pop
std
adc
push
mov
mov
inc
not
add
mov
inc
int
sub
out
enter
mov
popf
aam
lahf
add
mov
pop
sbb
adc
aas
aam
mov
xchg
daa
iret
pop
ss
lock
fcomi
push
mov
gs
adc
fwait
sti
mov
sahf
mov
and
lock
and
sbb
dec
lahf
es
es
inc
jmp
lods
dec
sbb
push
sti
xchg
cmp
jae
sub
add
xchg
cmp
push
cmp
pop
lret
pop
scas
aaa
push
adc
xchg
xor
adc
and
cwtl
test
mov
and
repz
or
push
push
mov
xor
orl
adc
sahf
adcl
mov
jp
sbb
xchg
xor
hlt
jne
adc
push
mov
outsl
pusha
jle,pn
mov
xchg
scas
lock
jnp
pop
add
sbb
sub
incb
mov
add
adc
and
es
xor
cli
xchg
or
adc
xchg
jge
push
lahf
or
stc
sahf
inc
xor
push
jg
sbb
icebp
dec
dec
and
mov
mov
xor
and
mov
inc
test
data16
test
lret
addr16
sub
les
lret
xchg
ljmp
js
jae
jae
stos
test
test
and
push
push
fnstcw
lret
and
sbb
or
cmpl
mov
jg
pop
ljmp
icebp
jbe
aad
mov
bound
lods
movsb
push
mov
aad
xchg
push
push
inc
lret
cs
lret
pop
in
scas
lret
xor
mov
aas
lcall
bound
adc
xchg
jae
sbb
nop
int3
sub
sub
sarl
or
std
pusha
sub
aam
adc
mov
addr16
andl
adc
insb
dec
pop
pop
outsl
pop
mov
ret
in
sub
shl
pop
jp
stc
cmpsb
cmp
mov
lret
mov
mov
xor
mov
test
fwait
loopne
ss
push
sbb
cmpl
popf
lds
mov
dec
lods
mov
pop
push
in
dec
or
pushf
shrb
or
rol
fwait
cmp
pop
mov
fildll
repnz
jecxz
push
repnz
cmp
sub
cmpl
cmp
or
push
xor
jecxz
imul
call
mov
and
sbb
mov
sbb
out
push
movsb
xchg
inc
int3
pop
fucomp
loopne
cld
adc
sbb
pop
stos
pop
push
jp
in
lea
mov
mov
jns
out
mov
ret
stc
not
xor
enter
or
shr
push
lods
mov
or
in
inc
les
mov
dec
fcmovne
gs
pop
out
pop
sub
lds
bound
ret
cmpsl
jp
or
add
popa
sbbb
mov
sub
pop
mov
dec
aam
test
mov
popa
push
push
mov
xlat
mov
fldl2t
pop
stos
pop
dec
cmpsb
hlt
movsl
icebp
cmp
xchg
push
xchg
xchg
add
lcall
mov
mov
or
mov
xlat
adc
shll
loopne
pushf
mov
inc
rclb
cmp
add
es
cmp
pop
adc
mov
mov
loope
sti
adc
subb
addr16
dec
pushf
and
sub
jnp
jns
push
xchg
mov
divl
adc
mov
cs
fidivl
aas
push
cmp
dec
shll
js
repnz
lock
cli
jne
data16
xchg
shll
sbb
mov
cmp
mov
jg
aaa
fisubrl
adc
xchg
fisubrs
dec
pop
sub
cmp
xchg
inc
cmp
dec
xchg
pop
cmc
inc
scas
ret
sbb
jb
sbb
clc
dec
stos
jle
ss
aad
adc
jle
sbb
int
sub
shlb
fimull
sahf
in
repnz
loope
add
in
cld
jl
out
jmp
cmp
fisubs
mov
andl
shlb
fdivr
xchg
sub
mov
dec
sbbb
mov
jne
pusha
mov
push
adc
add
mov
mov
inc
and
sbb
sub
jecxz
or
lods
xchg
ljmp
jb
out
gs
jne
inc
mov
jl
push
inc
lock
mov
or
lret
cmpsb
xchg
imul
leave
ret
insl
push
lcall
cmpsl
push
mov
adc
xchg
inc
and
cmpsb
ljmp
mov
xorl
push
and
inc
fnstenv
fstpl
int3
stos
js
sbbb
adc
insb
sub
mov
scas
cmp
sar
das
hlt
mov
sbb
mov
add
jns
pop
xchg
mov
in
jl
dec
xlat
dec
cmp
mulb
loop
mov
sbb
dec
enter
in
hlt
sbbl
int3
xor
repnz
fdivrl
sbb
scas
mov
push
push
repz
lods
dec
sti
mov
and
lds
imul
mov
xchg
dec
fcoms
inc
mov
and
ljmp
cld
pusha
pop
out
pop
push
cmp
outsb
and
add
sbb
adc
loop
test
sbb
fcomps
shlb
iret
push
insl
fcompl
out
lcall
cwtl
mov
pop
clc
push
out
sbb
or
mov
mov
add
lret
sub
mov
sbb
inc
leave
adc
jp
pop
scas
arpl
pop
inc
xorl
loop
pop
push
clc
inc
push
mov
popa
data16
xor
pop
push
fiaddl
repz
hlt
imul
das
inc
mov
js
xor
dec
dec
out
push
test
sbb
jbe
or
loope
and
and
jo
les
xchg
leave
int
sti
cmp
sbb
add
dec
dec
stos
xchg
jl
outsb
push
sbb
xchg
or
or
lahf
shrb
and
lods
mov
or
add
adc
idivl
dec
cli
fistps
sub
pusha
mov
jl
jl
sti
lods
xor
ds
cmp
ja
xor
test
ror
mov
lret
sti
mov
pop
out
dec
mov
or
loope
rcrb
push
adc
aam
sbbb
adcb
cs
js
in
jl
mov
sub
add
cwtl
jp
mov
sub
mov
out
dec
mov
lret
jne
iret
imul
mov
notb
xor
int3
lock
push
les
jno
cmp
cmp
and
scas
cli
dec
xchg
mov
sbb
ss
mov
sti
push
imul
popf
push
dec
mov
add
insb
js
loope
mov
pop
cmp
xor
and
jge
cwtl
pop
jmp
aaa
fdivp
push
test
into
jbe
or
icebp
jle
daa
fstl
inc
in
jle
cmpsl
push
fildll
loop
out
gs
ret
or
xor
andb
loop
cs
jp
bound
pop
jmp
insl
insl
push
mov
push
out
jp
cwtl
xor
scas
ja
jbe
or
lret
addr16
cmp
andl
int
push
mov
push
sbb
repnz
movl
popa
das
xchg
mov
or
adcb
xchg
sbb
sub
mov
xor
push
test
rcr
stos
jge
in
sbbl
xor
jle
ss
in
sbb
test
mov
fs
lret
lea
ss
outsl
out
xlat
es
jo
insb
jle
xchg
lret
mov
add
push
lods
in
cmp
pop
lret
bound
arpl
call
xchg
pop
in
adc
cmp
bound
add
inc
mov
or
jle
loop
jno
sti
cmc
mov
adc
lcall
push
dec
jmp
push
xor
jmp
int3
and
in
int3
and
cmc
leave
ds
je
and
outsb
xchg
pop
repz
add
cmpsb
cwtl
in
jb
lcall
pusha
xchg
mov
aad
xorl
dec
loop
jge
stos
add
xchg
ret
pop
or
das
loopne
or
xchg
ficomps
int3
pop
xor
sbb
stos
rclb
jg
jno
sub
das
xchg
pushf
xor
rol
jg
mov
and
sbb
mov
sbb
sbb
shrb
insb
js
scas
icebp
mov
ljmp
jno
sbb
shrb
movb
cs
push
negb
xchg
add
adc
addr16
subb
mov
lea
les
xor
test
cmc
cmp
loop
add
ds
std
pop
out
aam
push
scas
pushf
movsl
or
inc
mov
mov
dec
cld
xor
hlt
push
push
test
repnz
call
rcrl
and
lret
mov
scas
ret
pushf
xchg
out
rep
and
xor
addl
lret
aam
jg
or
cmp
fwait
xor
subb
stos
cmp
jns
rep
dec
lcall
adc
pop
enter
outsb
mov
xchg
lods
enter
daa
into
lret
cmp
push
inc
inc
cmp
cmp
int
int
pushf
push
push
call
xchg
adc
sub
sub
pop
stc
add
fimuls
lds
pushf
cli
xor
rorb
in
mov
mov
mov
stc
cmpsl
je
popa
xchg
mov
push
adcb
mov
dec
jg
sub
outsl
jns
dec
add
hlt
dec
fisubrl
iret
fnstenv
popa
outsl
insl
stc
xchg
mov
scas
mov
repz
pusha
test
insl
jle
jnp
push
xor
outsb
jns
mov
inc
push
sti
js
mov
pop
push
outsl
push
xchg
jno
call
ja
mov
jge
adc
fucomp
and
in
inc
jmp
aas
aad
mov
pop
cmp
sbb
dec
mov
push
fld
pop
mov
push
repz
inc
test
das
cmp
mov
cwtl
fadds
aas
std
fbld
mov
mov
mov
fisttpll
mov
in
dec
pushf
lret
xchg
and
sahf
or
jge
cmpsb
dec
subl
jns
pushf
dec
loopne
in
xchg
bound
cmp
cmp
cmp
mov
xor
push
test
xchg
in
scas
into
add
fisubs
mov
inc
cmp
dec
jno
xchg
pop
cmp
xchg
fwait
ja
int
add
movsl
jmp
aaa
push
xchg
cmpl
test
inc
xchg
ja
cmp
cmp
lock
cltd
int
inc
fcomps
mov
xchg
mov
add
lea
jne
add
popf
jl
dec
out
jl
inc
cmp
sub
popl
cwtl
aam
mov
test
lret
dec
push
outsb
fldcw
cmp
pop
in
jns
push
ja
fs
cli
push
mov
iret
fcmovnu
loope
addr16
lcall
xchg
jae
sub
add
dec
js
jns
push
scas
or
cs
clc
pop
iret
into
faddl
jg
cs
andb
and
cmpl
xor
xchg
and
pop
cmp
rorb
notb
mov
jl
adc
cmp
insl
dec
addr16
std
cld
xchg
cs
push
in
cmpsl
movsl
add
mov
pop
stos
es
stos
dec
in
clc
mov
data16
insb
mov
push
mov
mov
cwtl
and
mov
insl
mov
inc
push
push
sti
and
loop
mov
xor
jmp
das
xchg
les
fs
mov
cmc
mov
xor
loopne
les
aaa
inc
pusha
imul
enter
add
mov
pop
jecxz
loop
popa
and
out
movlps
ss
es
aam
mov
jg
pop
cmp
aaa
data16
es
stos
sarl
dec
je
jae
aas
bound
xor
cmp
add
es
out
push
adc
push
aas
xor
mov
push
in
jne
mov
or
cmp
pop
das
dec
clc
jbe
push
aad
mov
std
cmp
hlt
insl
sbb
mov
mov
lock
call
pop
repnz
mov
adc
cmc
push
jmp
int3
and
int
jb
in
or
pushf
pop
arpl
int
nop
je
pop
cmp
movups
sub
push
sbb
adc
shl
cmpsl
scas
mov
aam
cli
xchg
shlb
enter
inc
decl
push
fwait
mov
jb
ja
addr16
or
cmp
insl
data16
dec
adc
xchg
cmp
mov
or
fmul
mov
arpl
in
cmp
push
cmc
add
leave
dec
sub
js
jns
hlt
jl,pt
outsl
mov
xchg
sub
fidivs
leave
add
push
dec
push
outsl
sub
sahf
imull
mov
mov
lock
mov
cmp
mov
in
fwait
sahf
mov
lret
xor
fwait
cltd
xchg
out
test
mov
or
xorb
xchg
add
scas
testl
scas
sarl
push
xchg
xor
cmp
add
arpl
mov
push
movsl
shl
aaa
or
sub
es
shll
cmpsl
adc
andb
jno
or
es
mov
bound
jns
and
outsb
add
les
cmpsl
int3
xchg
sub
push
inc
and
cmpsb
lock
pop
cmp
jbe
xchg
test
mov
movsb
gs
negl
dec
out
out
lret
xlat
inc
int3
pop
in
jae
sub
dec
arpl
mov
adc
int3
lret
jbe
jl
add
jmp
xor
cld
lock
mov
inc
sarl
push
or
hlt
sub
popf
xchg
sub
or
dec
cmp
outsl
sbb
into
jge
ja
cmp
sbb
sti
rcl
les
pop
cmp
incb
pop
dec
out
scas
pusha
inc
sbb
shlb
fldenv
xchg
cmp
pop
xorb
arpl
jecxz
inc
shlb
jns
pop
hlt
push
das
jno
xchg
jnp
push
adc
divl
es
pop
add
roll
pop
jne
clc
jo
scas
mov
out
mov
pop
add
cli
pop
int3
sub
dec
imul
call
mov
cmp
lods
mov
mov
lock
add
dec
adc
mov
pusha
pop
and
aam
mov
sbb
jnp
jge
mov
cmp
iret
cmpsl
push
test
lock
ds
or
inc
push
mov
ljmp
sti
cmp
imul
les
mov
push
jo
mov
fstl
xor
adc
jp
pop
mov
hlt
loop
inc
dec
sub
std
shl
sahf
or
jecxz
sahf
clc
and
push
insl
adc
divl
and
push
in
xchg
enter
dec
je
cmpsl
dec
cmpsl
ret
jbe
push
xor
add
or
cmp
jle
inc
mov
mov
in
jecxz
cld
dec
push
push
mov
xor
pop
popl
sub
loope
add
pusha
aaa
cld
push
adcb
fcomip
pop
lret
inc
sbb
mov
das
mov
xor
cmc
hlt
pop
mov
inc
lods
mov
sarl
out
gs
addr16
sbb
xchg
jecxz
adc
pop
mov
cmp
dec
aaa
cmpsb
adc
data16
repnz
mov
push
icebp
stos
inc
xchg
xchg
loopne
xchg
and
repz
add
scas
hlt
fsubl
xchg
fistpll
lods
lock
sar
inc
imul
popa
roll
loop
mov
fidivs
testb
imul
sbb
xchg
into
test
scas
adc
out
sub
mov
loop
sar
or
pushf
dec
cmp
push
pop
jg
fsubs
test
jns
data16
mov
mov
fldenv
or
cltd
data16
dec
jne
divl
push
out
dec
push
and
jl
or
jl
mov
insl
adc
cmp
mov
fcomps
push
xor
fucomip
es
sbb
leave
insl
inc
jl
imul
inc
sub
sub
es
push
arpl
sarl
sbb
jbe
dec
lods
popa
pusha
lahf
subb
rcr
pop
std
test
mov
jns
std
jo
adc
jecxz
mov
std
mov
adc
call
mov
jbe
ss
mov
aam
pop
lock
enter
mov
rcll
cltd
pop
loop
jge
sahf
pop
cmp
imul
out
fs
dec
xchg
int
cmp
das
jb
loope
push
inc
insb
cmpsb
out
repz
enter
xchg
mov
ret
push
sub
nop
les
stos
es
mov
jno
xlat
fsubr
dec
addr16
push
orl
push
or
fldt
xchg
cwtl
pusha
jnp
insb
or
mov
movsl
stos
insb
jle
imul
add
into
xchg
fbstp
push
mov
mov
dec
sbb
jo
aad
sbb
pop
aaa
inc
adc
jnp
fimuls
push
out
xchg
sbb
jge
add
push
pop
ja
stos
and
call
sub
pushf
sub
sub
mov
sbbb
cmpsb
sbb
and
sub
insl
xor
out
sahf
push
mov
scas
inc
push
add
imul
cmp
mov
dec
jl
jo
js
aad
shld
scas
mov
mov
std
aam
aam
sub
hlt
loopne
mov
movsb
xchg
or
xchg
adc
test
xchg
fidivl
insb
xor
dec
movsl
js
int3
or
jae
cwtl
das
lds
sbb
clc
bound
dec
daa
js
cwtl
js
sub
sbbb
cmp
pop
pop
sahf
push
sbbb
jnp
add
movq
jecxz
mov
inc
fnstenv
or
pop
mov
fisubs
xchg
mov
bound
outsl
adc
cmc
mov
das
sbb
lcall
push
call
pop
lods
or
lock
lock
daa
mov
jp
inc
arpl
mov
inc
outsb
add
in
xchg
push
mov
repnz
out
sub
xchg
out
stc
and
mov
xlat
aas
inc
daa
les
gs
hlt
xlat
sbb
jnp
jnp
sub
sub
fwait
cltd
stos
enter
repnz
dec
jo
adc
out
xchg
out
test
jo
fldt
or
pop
push
xchg
loopne
lods
jp
fidivs
push
lock
add
repnz
cmp
push
inc
aas
jbe
mov
repnz
adc
imul
aam
pushf
je
mov
pop
lret
cmp
aam
add
scas
cmc
pop
adc
inc
inc
fdivs
mov
push
imul
adc
sbb
mov
out
and
jmp
sahf
inc
inc
pop
pop
add
popf
mov
push
gs
mov
push
push
das
cld
mov
xchg
loop
adc
jne
movsl
push
xlat
loope
pop
jecxz
mov
mov
sub
icebp
cmp
out
xchg
sbb
cmp
daa
push
jae
push
scas
dec
push
or
insb
ss
sahf
dec
enter
adc
cmp
pop
out
jle
sahf
ss
inc
cwtl
xchg
cmp
inc
push
or
mov
jmp
dec
in
mov
adc
sarl
imul
xor
jmp
out
mov
arpl
stos
cmp
mov
adc
xor
jge
xchg
lds
subl
cwtd
jle
dec
mov
loop
shr
iret
jecxz
sbb
pop
arpl
xchg
jb
add
sub
sbbb
xor
ret
mov
addb
dec
imul
xchg
repnz
xor
fsubrl
pop
jl
add
testl
ljmp
mov
cmp
mov
sub
test
pop
dec
nop
stos
sahf
negb
mov
cs
jmp
sub
ljmp
push
movsl
adc
ret
inc
shr
mov
into
xlat
shl
lea
mov
xchg
ret
arpl
mov
jg
xor
and
pusha
mov
lahf
jnp
dec
lods
pop
cmp
jecxz
inc
arpl
mov
jl
jnp
lods
mov
fildll
sbb
jge
mov
aas
or
jnp
add
movsl
negb
mov
repnz
daa
shlb
and
jb
out
popl
mov
cmp
shl
mov
cmp
cmp
int
push
mov
mov
test
mov
push
push
loop
test
mov
adc
sahf
ljmp
jb
out
ret
test
push
test
jg
out
fstps
jbe
adc
and
mov
into
int3
inc
stos
icebp
fsubrl
sub
nop
loop
loope
rclb
mov
or
scas
push
sar
addr16
idivb
insb
dec
cmp
and
icebp
pop
or
loop
ret
scas
imul
sub
mov
hlt
jmp
mov
mov
loop
jae
lcall
inc
insb
sub
push
scas
aaa
dec
loop
iret
push
sahf
lret
jae
and
sar
mov
int3
or
pop
dec
or
push
ljmp
call
sub
movsl
jle
adc
xor
jl
hlt
push
pushf
lods
mov
cld
leave
cmp
test
push
push
ss
jp
fnsave
shlb
fisttpll
stc
adc
xor
stc
pop
js
sbb
out
sub
das
push
frstor
mov
ljmp
xor
sbb
pusha
dec
jecxz
push
pop
sub
lret
jae
jbe
add
cmpl
sbb
enter
fbld
mov
pusha
jg
shll
and
xchg
pop
cs
sti
cld
lds
sarl
fildl
addr16
dec
inc
push
pop
cmp
pop
mov
jbe
mov
rep
mov
fcmovnbe
xor
scas
insl
sub
jno
lahf
mov
fcomp
jae
dec
push
or
int
cpuid
sub
add
scas
dec
push
mov
in
adc
add
add
sub
or
aaa
clc
mov
cli
lret
pop
insb
out
push
inc
rolb
adc
testb
jns
sbb
pmuludq
pop
sub
or
rol
jns
xor
pop
mov
sub
js
ja
add
push
insl
lret
pop
and
in
inc
mov
jmp
aaa
add
bound
push
fldcw
jmp
ja
into
xor
sub
out
jg
xchg
mov
lods
popa
cmpsb
or
outsb
and
pop
mov
filds
test
pop
adc
lods
sub
push
mov
xor
adc
adc
fcoms
mov
mov
fstpl
add
lods
or
stos
add
movsb
cmp
mov
lods
mov
push
ss
in
mov
push
or
lea
xor
out
jns
roll
pushf
jne
sbb
xchg
mov
xor
push
pop
xlat
idivl
sbb
jle
mov
jmp
int3
pop
adc
sub
sub
fistpl
jns
bound
inc
mov
jbe
xchg
jecxz
dec
push
pop
sbb
sbb
sub
js
and
mov
cmp
rcl
sbb
add
add
and
ds
pop
cs
mov
cmp
pop
adc
sub
mov
cmp
add
sbb
cmpsb
jle
cmp
jns
orb
add
aas
xlat
outsb
rcrl
mov
cmc
pop
cmc
and
adc
sbb
xchg
xchg
addr16
push
cmp
inc
scas
mov
add
adc
sub
cmpsl
mov
pop
loopne
or
lea
ret
mov
fcmovu
lret
je
repnz
jae
xlat
mov
jg
lds
lcall
or
fistps
xor
aad
sbb
data16
bound
ds
aaa
dec
dec
jecxz
test
xchg
ret
push
jmp
fwait
xlat
pop
jl
cmc
daa
and
stc
fadds
js
invd
mov
std
xchg
pop
push
lods
dec
movsb
xchg
pop
insb
testb
hlt
ds
adc
rorb
lahf
sbb
rorb
jl
sub
pop
cmp
add
mov
dec
and
push
fs
adc
add
xchg
push
scas
mov
push
inc
pop
aas
inc
gs
cmp
popf
cmpsl
jle
fadds
push
mov
iret
je
xchg
dec
inc
imul
dec
lahf
int3
fs
push
or
dec
pop
out
out
xor
xchg
stos
pusha
bound
jae
icebp
movsb
mov
dec
jnp
jmp
mov
insb
xlat
or
cmp
push
or
imul
popf
xchg
cmpsb
dec
in
push
lock
push
xchg
pop
sub
add
adc
fwait
not
fisubrl
leave
jl
or
imul
aam
xchg
mov
mov
mulb
mov
fs
inc
int
push
push
aaa
or
scas
sahf
or
inc
jno
subb
fisubrs
pop
mov
mov
stos
out
xchg
rol
push
ret
imul
push
or
dec
cwtl
jo
cmp
stos
out
mov
xchg
popa
out
mov
stos
or
sub
clc
sahf
jecxz
in
ret
adc
and
sub
repz
aas
mov
adc
popf
pop
sub
nop
daa
out
mov
pop
test
andb
movsl
notl
movsb
out
not
dec
fs
mov
xor
lods
in
aam
cmp
aaa
testb
lods
orl
mov
mov
aaa
and
lcall
xchg
mov
sbb
sub
mov
dec
addr16
jnp
ds
and
cmp
push
push
sbb
sbb
mov
inc
mov
mov
adc
fsubrl
loop
rorl
test
adc
xchg
in
repz
jne
or
outsb
adc
mov
loope
jne
cld
arpl
jb
adc
fistl
jg
hlt
in
in
or
in
jl
xor
push
pop
int3
jg
or
push
mov
push
mov
aas
ds
outsb
sub
fistpll
sbb
mov
mov
add
repz
mov
test
stos
add
stos
mov
and
inc
fdivr
lds
cmc
mov
mul
mov
jge
jns
rcrl
dec
fwait
xor
out
inc
push
add
inc
lcall
and
inc
push
lret
pop
stc
xchg
lea
mov
pop
cmp
call
xchg
xor
ljmp
push
xchg
test
xchg
adc
pop
sbb
leave
lds
sub
divl
outsl
shrb
jmp
push
cmp
jge
out
jns
adc
inc
push
add
std
sbb
jmp
xchg
clc
mov
xchg
arpl
jmp
jmp
andl
mov
adc
lods
mov
shlb
rcll
mov
mov
movsl
xor
or
adc
push
cltd
ss
insb
mov
xchg
lock
fidivs
shlb
mov
sbbl
pop
jecxz
aad
jmp
jge
dec
mov
adc
lock
pop
jg
testb
pushl
mov
popf
loopne
cltd
push
sti
mov
mov
inc
fisubrl
iret
cmpsb
inc
xchg
adc
imul
scas
ds
and
xor
test
add
cltd
xor
in
dec
push
mov
mov
or
pop
cs
clc
inc
aaa
pusha
dec
jne
dec
add
sbb
std
aas
mov
movsl
xchg
pushf
and
popf
daa
mov
and
push
ret
mov
enter
xchg
daa
push
mov
enter
inc
out
rorl
mov
push
mov
ret
mov
sbb
adc
push
pop
scas
aaa
mov
mov
dec
push
sbb
sub
jbe
push
add
insl
repz
xor
push
outsl
push
xchg
jbe
inc
daa
cmc
ss
dec
xchg
sub
mov
dec
dec
mov
aad
shrl
or
xchg
lcall
out
out
scas
xchg
push
in
icebp
inc
lahf
sbb
cmp
sub
lock
adc
mov
dec
jb
mov
cmp
lret
jge
cmpl
sbb
cmpb
dec
mov
mov
inc
xchg
fwait
mov
jmp
xchg
sub
clc
cmp
sbb
push
mov
pushf
mov
movsl
push
sbb
rcrb
mov
mov
mov
test
or
add
iret
fucomp
mov
inc
push
loop
incl
push
test
jg
jno
inc
shlb
mov
rclb
mov
mov
mov
stos
sbb
movsb
pushf
xchg
sbb
mov
iret
std
aam
jbe
pmaxub
arpl
es
ja
fmull
and
sti
jbe
cmpsl
push
xchg
jle
jmp
cmp
xchg
mov
ficompl
and
rclb
popl
mov
icebp
push
mov
shlb
daa
repz
jl
test
in
xchg
shrl
rclb
lods
rcrl
inc
lods
cmc
fnstenv
scas
into
mov
inc
mov
lret
mov
imul
jnp
out
cld
rcrb
rol
std
cmp
sub
dec
inc
dec
fwait
xor
data16
and
cli
mov
sub
je
pop
movsl
mov
lock
call
sub
xor
cmpsb
lret
jb
cmp
mov
imul
mov
test
push
insl
xchg
adc
subb
or
sbb
aas
pusha
adc
add
push
mov
mov
cmp
jbe
out
imul
adc
push
sbb
insb
cmpl
jmp
mov
pop
ds
mov
add
pop
jo
and
pusha
push
stc
test
inc
push
in
lods
push
push
add
mov
mov
mov
test
into
sbb
bound
imul
bound
mov
setg
pop
icebp
imul
movsl
cmp
out
mov
sbb
ljmp
or
push
mov
aad
mov
push
mov
jbe,pt
pop
push
lret
sbb
cmp
xchg
clc
add
nop
cmp
add
sbb
adc
icebp
int3
lock
hlt
stc
pop
mov
mov
push
push
les
outsb
insl
pop
clc
jae
add
jno
idivb
xlat
sbb
dec
dec
clc
pushf
mov
ret
stc
ja
insb
xor
dec
cmpsl
cmp
mov
mov
adc
testb
cli
mov
jg
imul
xor
jge
in
das
scas
iret
push
loopne
dec
out
mov
jo
or
in
sbb
daa
loopne,pt
cmp
pop
push
push
adc
mov
mov
jecxz
and
cmp
mov
gs
xchg
dec
xchg
inc
jnp
popf
pop
mov
outsb
pop
jecxz
add
xchg
out
jnp
mov
and
fdivrs
fidivrs
push
stos
cli
pop
xor
mov
push
clc
scas
cld
clc
add
cwtl
xor
pop
mov
sub
xchg
sbb
jo
test
xchg
lea
mov
sbb
into
mov
testl
mov
loopne,pt
repz
daa
out
hlt
xchg
pop
aad
pop
loope
loop
test
dec
sbb
add
inc
push
sub
xor
fwait
mov
jle
mov
mov
call
fcompl
fstpl
sub
dec
or
sbb
dec
insb
leave
shlb
add
in
add
push
sub
lret
or
flds
jl
lock
sub
arpl
dec
push
push
sarl
mov
add
add
mov
xor
cmp
and
ret
xchg
mov
imul
ret
stos
das
scas
cmp
inc
mov
cmp
xchg
repz
jle
fucomi
test
xlat
jne
bound
and
sub
enter
jg
insl
leave
pushf
xor
mov
xchg
test
imul
mov
push
mov
int
fdivrs
xor
out
dec
xchg
loopne
mov
daa
adc
push
pop
jmp
dec
and
cmc
sbb
cmp
jle
lds
dec
jne
in
lret
mov
mov
mov
adc
adc
or
subb
xchg
cmpb
xor
out
push
lcall
iret
sub
mov
xor
fistpll
cs
mov
pop
or
pusha
and
lea
mov
cmp
lcall
xor
pop
nop
jne
dec
cmp
jle
push
lret
pop
add
cltd
mov
pop
out
push
jmp
inc
pop
xor
sbb
sbb
jns
test
mov
jecxz
or
cmp
cmc
aaa
dec
add
clc
test
inc
pop
repz
cmp
adc
lock
push
adcb
cmpsl
flds
mov
cli
mov
rcrb
xchg
sbb
loope
dec
adc
push
mov
fwait
ret
push
pusha
lods
jne
xor
pop
aaa
movsl
pop
add
out
sarl
repz
mov
aas
mov
mov
xor
stc
dec
jmp
popaw
inc
bound
test
clc
push
in
jl
xchg
pop
mov
xor
push
enter
dec
mov
jns
inc
sub
cmp
mov
fmull
dec
aad
outsl
push
pushf
int
xor
pop
ljmp
or
test
popa
adc
out
push
icebp
jmp
data16
iret
add
or
mov
aas
dec
aas
push
inc
repnz
mov
push
sbb
fwait
mov
push
push
mov
jge
cmpsl
das
mov
mov
pushf
xor
mov
sti
aad
mov
or
popf
mov
sub
pop
and
add
cwtl
enter
hlt
mov
pop
mov
cmp
in
pop
mov
shl
js
aaa
ret
sar
movsb
lcall
or
aad
push
xchg
mov
xor
adc
sub
fwait
cmpsl
je
int3
fisttps
sbb
ret
imul
bound
popl
xchg
cmp
sbb
xor
mov
sub
data16
in
clc
lcall
testb
aad
mov
and
sahf
cmpsl
inc
mov
stc
stc
cs
iret
xor
ja
mov
stc
mov
popa
adc
jl
xchg
mov
adc
faddp
out
shrl
xor
push
arpl
pop
adc
mov
mov
jnp
xchg
sub
mov
pusha
cmpsl
or
lahf
cmpsb
stc
es
jp
and
xchg
fadd
xchg
mov
je
fs
imul
aas
mov
adc
jecxz
repz
jmp
pop
inc
or
shr
sub
sbb
addr16
nop
int3
arpl
rcrl
rol
fiadds
cmp
insl
add
lock
insl
sbb
fs
pop
out
or
sbb
push
lods
mov
insb
aad
shl
cmp
rorb
outsb
mov
pop
jmp
cmp
xor
pop
xchg
aad
push
not
mov
pop
sub
push
repz
jae
ret
mov
hlt
outsb
enter
and
xchg
cmc
inc
and
mov
jp
lods
xchg
imul
shrl
xchg
jg
mov
mov
ja
insb
add
enter
push
add
xchg
lods
xchg
out
xchg
pop
inc
xlat
dec
push
aaa
xchg
xchg
bound
addr16
das
shlb
mov
arpl
mov
adc
test
outsb
dec
push
mov
dec
and
pop
add
adc
push
mov
push
sti
lcall
imul
jge
jge
ret
aad
pushf
xchg
jo
xchg
add
cmp
popf
xchg
inc
sti
test
sti
mov
mov
and
mov
lea
ss
imul
addb
push
lds
popa
imul
add
adc
push
inc
pop
inc
mov
push
mov
fnsave
stc
sub
mov
es
sub
add
dec
pop
clc
push
pop
push
enter
pop
xor
jno
std
jbe
add
sub
fdivl
push
cmpsl
jecxz
or
insl
push
ja
cmp
push
gs
js
pop
adc
ret
data16
cmc
mov
sub
jecxz
in
test
mov
rclb
lods
and
mov
je
fidivrl
stos
cmc
fdivl
in
dec
aaa
sbb
mov
cld
fwait
out
inc
pop
xor
int
pop
jge
mov
dec
pop
xchg
or
sbb
pop
insb
roll
scas
aaa
pop
mov
cmp
push
je
shlb
fdivl
jmp
adc
push
js
ficompl
add
pop
icebp
adc
mov
dec
aaa
jb
test
jae
popf
mov
cmp
popa
add
cld
addb
js
bound
pop
xchg
fwait
mov
dec
dec
xor
inc
jecxz
addr16
mov
cmp
mov
cmp
in
xchg
lods
mov
jns
xorb
adc
mov
stos
dec
push
popf
mov
pushf
and
adc
cltd
mov
push
fildll
adc
xchg
scas
outsl
inc
test
pop
and
mov
sub
popf
cmp
daa
pop
or
mov
ljmp
inc
or
cmpsb
pop
movsb
mov
cmp
sub
mov
jnp
mov
ret
addr16
mov
sub
imul
les
cmp
in
jg
inc
lret
cmp
popf
xor
add
add
push
push
fisttpl
mov
sub
cmp
adc
hlt
mov
mov
adc
outsl
mov
xlat
loope
push
push
jge
mov
or
jne
daa
xor
pop
jno
push
aaa
cltd
push
jmp
xchg
stos
jo
add
and
cmp
fbstp
sbb
push
lcall
jae
jno
mov
cs
push
sub
sub
dec
iret
popa
data16
pop
iret
imul
test
scas
icebp
aaa
dec
mov
jge
mov
les
xor
jmp
jge
dec
sub
sbb
and
dec
testb
sbb
lret
fsubr
int3
arpl
sbb
xor
pop
mov
pop
jg
lods
ret
fildl
popf
out
imul
adc
add
lcall
daa
sbb
mov
xor
mov
js
into
cmp
addr16
arpl
mov
popl
cltd
adc
cwtl
pusha
add
xchg
inc
xor
jae
pop
scas
pushf
or
xchg
cmpl
sbb
sbb
mov
pop
cmp
scas
cmc
cwtl
pop
fdivl
lahf
shlb
sbb
jle
xchg
mov
push
push
sub
out
xor
mov
inc
dec
and
lods
cmp
push
icebp
xor
add
mov
out
jns
fwait
dec
fwait
inc
cmpsl
in
lds
loope
cmp
and
jl
lret
xchg
push
xor
xor
aad
pop
or
bound
cmp
xchg
hlt
clc
and
push
clc
addl
inc
loopne
pop
ret
xor
sbb
fs
sbb
mov
les
pop
movsb
ss
pop
outsl
jnp
or
loope
movsb
mov
fsubl
mov
fistps
mov
cwtl
adc
int3
push
adc
cmp
rcrb
test
loopne
jb
idivb
xlat
scas
cmp
pop
jbe
adc
test
push
xor
arpl
mov
cld
pop
sbbl
pop
rcr
jno
inc
inc
pop
sub
adc
mov
sbb
lahf
test
orl
in
mov
xchg
sub
roll
sub
jl
fisttps
addr16
jb
sbb
cmp
imul
xor
mov
and
fwait
loopne
test
xchg
xor
or
mov
cmc
pop
cmp
int
out
adc
push
data16
scas
mov
adc
sbbb
mov
sbb
and
cltd
inc
push
imul
jmp
in
push
out
or
add
fidivrl
xchg
stc
stos
dec
lahf
add
clc
xchg
xchg
and
mov
stos
in
sbb
adc
push
jo
pop
adc
clc
jb
mov
shrl
addl
xor
in
jmp
icebp
std
xchg
and
mov
push
sbb
add
xchg
inc
pushf
dec
gs
stc
pop
jp
out
adc
vandps
fmul
mov
sub
test
xor
mov
pushf
jmp
fbld
stc
icebp
xchg
sub
mov
push
cltd
stos
mov
xchg
clc
lcall
mov
pop
sub
adc
fwait
gs
fnsave
int3
fs
jge
sub
cmp
sbb
sbb
enter
add
aas
mov
test
and
lret
push
in
xor
push
inc
cmp
in
sub
arpl
imul
hlt
sub
inc
icebp
mov
fildll
dec
bndstx
pop
lcall
lock
inc
loop
fildl
cmp
daa
mov
ret
out
test
cmc
or
mov
dec
out
push
gs
jl
sbb
pop
pop
ds
adc
push
pop
add
jp
rol
sbb
dec
jno
ds
ret
cmpb
mov
sti
or
fcoml
fisttpl
aad
lods
mov
add
movsb
mov
mov
mov
ja
cmp
rorl
push
jbe
testb
sub
rcr
dec
mov
xchg
mov
xchg
movsb
enter
mov
out
out
pushf
enter
xchg
repz
pop
out
or
test
shll
dec
test
fisubrl
pop
adc
es
stc
mov
fists
lods
outsb
ja
ss
cmpsl
aas
xchg
push
sbb
cld
pop
dec
imul
push
cmp
push
dec
arpl
push
jmp
aaa
xor
cltd
mov
icebp
data16
mov
lods
cmp
lret
scas
mov
add
out
push
or
das
push
mov
repz
mov
sub
xchg
pushf
int
mov
cmp
bound
and
scas
iret
lods
adc
xchg
add
ss
xor
xchg
inc
in
adc
xor
add
mov
inc
repz
das
inc
shll
dec
in
hlt
or
loop
jmp
sub
mov
out
cmp
jbe
or
ljmp
jo
imul
cmp
dec
repnz
jo
xlat
sub
inc
mov
mov
les
xchg
mov
int3
jbe
cmc
into
std
pop
out
lcall
cmp
adc
push
popa
loopne
mov
jne
lock
int
dec
fs
aad
xchg
out
adc
xor
adc
aad
cmp
dec
mov
js
mov
addb
mov
mov
cmp
addr16
mov
mov
sbb
cmc
pop
mov
add
in
gs
or
lds
pop
adc
adcl
shr
test
scas
shr
xor
or
and
pop
xchg
lods
and
inc
jae
and
enter
push
insl
mov
sub
xchg
fdivs
sbb
adc
jb
cli
cmp
ss
aad
orl
sub
ret
lods
loope
popa
lods
jne
push
mov
lret
movsb
dec
loopne
bound
lds
sbb
push
inc
xchg
add
lahf
mov
and
mov
adc
sti
invd
push
lods
mov
dec
adc
and
das
xlat
xor
or
cmpsb
jo
push
in
dec
adc
insl
dec
mov
rorl
ja
std
test
mov
xchg
iret
sbbb
outsb
sbbl
xchg
cmp
sbb
gs
push
pop
mov
inc
data16
mov
in
lock
xor
and
js
sub
lods
jae
filds
or
mov
clc
jle
movsl
adc
jbe
sub
mov
mov
jne
std
jg
into
mov
push
jbe
popa
push
add
shl
pop
jle
adcb
mov
aaa
or
lock
je
movl
shlb
fildl
call
imul
pop
loope
jecxz
adc
mov
imul
mov
pusha
imull
push
push
jecxz
aas
aad
pop
sahf
cmp
cmp
adc
pop
inc
pop
or
add
dec
push
lea
inc
push
sub
push
icebp
add
inc
adc
xchg
inc
sub
cmpsl
sub
mov
push
jnp
push
sub
xor
xchg
ss
test
call
inc
shr
shlb
sbb
sbb
sub
add
adc
pop
pop
mov
idivl
pop
fadds
mov
fwait
clc
into
inc
xlat
cltd
das
js
lods
cmp
push
mov
int3
xor
mov
jae
xor
or
dec
push
mov
sti
in
lods
mov
sub
lods
inc
mov
jle
sbb
push
pop
leave
shll
pushf
and
loope
jl
filds
sub
cmp
pop
adc
jle
cmp
fcmovnbe
cwtl
xor
add
inc
mov
push
pop
pop
mov
mov
jb
lds
iret
mov
popf
xor
or
imul
add
out
pop
and
stos
jne
jbe
cmpsb
dec
push
sar
shr
pop
sbb
dec
ja
aam
addr16
adc
cs
pop
out
aam
aad
inc
cmc
loope
dec
stos
inc
aas
test
pushf
add
shrb
xor
push
or
scas
xchg
xor
dec
sub
jg
lahf
dec
add
enter
xchg
sbb
lret
mov
fiaddl
push
jle
sub
popf
fs
imul
imul
cmp
push
xlat
or
arpl
arpl
cwtl
enter
ret
adc
or
jnp
mov
loope
xchg
in
cmp
mov
popf
std
pop
popa
fmul
push
and
push
fdiv
int3
aam
sahf
push
insl
das
into
movsl
dec
mov
mov
push
push
lods
addb
std
jns
int3
jg
adc
repnz
mov
fxch
lret
push
mov
and
cwtl
loope
icebp
adc
add
xchg
test
dec
popa
mov
out
dec
fsubs
mov
outsb
scas
xchg
mov
mov
hlt
xchg
dec
mov
lds
movsb
mov
jae
shrb
lahf
mov
sbb
cmc
mov
insl
mov
xchg
sub
outsb
sub
adc
push
scas
inc
dec
enter
push
xor
pop
fwait
mov
in
xor
mov
vrsqrtps
cmc
in
mov
lcall
xchg
dec
test
jbe
jns
rcll
pop
aad
lret
stos
loop
mov
push
mov
pop
test
sbb
xchg
jmp
into
mov
sarb
subl
ret
hlt
add
mov
dec
cmpsl
inc
bound
xor
pushf
jne
add
out
push
insl
mov
dec
xor
add
enter
lret
ror
and
xchg
push
sarl
jae
sub
cmp
pop
out
xchg
call
jb
sub
cmp
xchg
iret
mov
fistl
or
pop
popf
dec
mov
xchg
cs
rclb
mov
cmp
cmp
xor
icebp
arpl
ret
push
sub
dec
or
mov
cltd
push
and
test
dec
pusha
pop
cmp
and
cmp
mov
cmp
mov
int
cmpsl
lahf
fcoms
test
incb
cs
out
ss
hlt
dec
stos
sti
jbe
scas
jnp
loope
cltd
xor
sbbl
in
xchg
movsl
cmp
mov
vpsrlq
leave
sub
rcrl
jle
push
daa
xor
loope
std
pop
jle
push
ljmp
jno
cli
lcall
or
bound
dec
xor
leave
xorb
xchg
jg
repnz
pop
hlt
popf
dec
mov
cld
fcmovne
ficomps
pop
jno
pop
sub
pusha
int
inc
gs
mov
adc
mov
pusha
imul
outsb
sbb
imul
lods
add
repz
push
pop
hlt
movsl
mov
cmp
push
and
push
dec
pop
ficomps
test
jl
pop
pop
mov
std
mov
pop
push
cltd
add
push
fisubs
icebp
xor
aam
bound
ficoms
gs
inc
jns
jmp
mov
test
or
jbe
or
ss
xchg
addr16
lahf
incl
stos
cwtl
push
push
dec
jne
imul
sbb
fnsave
mov
adc
adc
adc
cmp
and
sub
lahf
dec
push
popf
dec
out
inc
loope
cmp
inc
stos
mov
xor
insl
dec
test
dec
add
or
xchg
push
stos
lret
pop
inc
emms
dec
jp
and
outsb
dec
mov
jns
sub
xchg
hlt
insb
jns
sahf
push
cwtl
pop
jp
out
jmp
pop
dec
sbb
jecxz
mov
adc
cmp
outsb
push
test
xor
push
je
mov
cmpsl
ret
imulb
xchg
add
sub
pop
mov
or
jae
sbb
cmp
dec
lods
adc
mov
mov
icebp
movsl
outsl
mov
cmpsl
into
movsl
loope
daa
push
imul
mov
orl
lock
test
testb
xchg
loopne
test
cmp
aas
outsl
or
cmp
js
or
dec
push
es
idivb
mov
ret
pop
cmp
add
leave
sub
pushf
ss
sarb
addl
push
mov
pop
outsl
arpl
add
lret
rcll
mov
cmp
jae
inc
in
out
xlat
imul
sbb
mov
incl
mov
sub
fcoms
sbb
out
jp
jno
jns
jg
push
add
mull
aam
adc
outsb
out
push
outsl
mov
shlb
mov
add
imul
jns
xor
leave
or
test
test
and
iret
push
nop
xchg
nop
stc
push
inc
cmp
push
cmpsl
xor
dec
or
out
xchg
scas
and
pop
arpl
out
ja
push
daa
pop
cwtl
inc
inc
jb
outsl
sub
aam
imulb
js
jns
rorb
fsubrp
sub
dec
jl
shl
loope
mov
xlat
or
inc
icebp
std
lahf
sahf
gs
adc
jns
test
lret
xlat
jmp
cmp
cld
jnp
ds
and
sbb
test
add
pop
xchg
or
dec
mov
shl
jbe
dec
cmp
jae
push
mov
sahf
fs
dec
daa
lcall
cmpsl
test
and
outsl
push
or
push
inc
or
popf
into
add
mov
iret
int3
mov
xor
lahf
rorb
mov
push
bound
lods
push
add
jne
jmp
lds
push
roll
inc
test
outsb
jb
js
aam
pop
jge
pop
jg
aaa
jbe
jl
and
daa
nop
sub
inc
push
inc
mov
mov
or
fldenv
insl
push
and
movsl
dec
das
push
aam
xchg
mov
cmc
mov
lea
or
hlt
cwtl
insb
mov
xchg
loop
imul
or
aad
imul
ss
mov
jp
mov
dec
aas
int3
ficomps
test
shll
shll
inc
push
mov
mov
mov
xor
in
mov
push
test
jle
lods
and
pushf
jp
loop
cli
inc
add
pop
push
nop
ficomps
xor
sbb
mov
mov
into
mov
and
push
xchg
push
or
inc
cli
cmp
stos
xor
fstpl
test
fsts
sub
outsl
mov
test
or
in
xor
push
outsl
dec
nop
adc
mov
jo
ljmp
loopne
cmp
dec
xlat
out
push
cltd
sahf
mov
dec
push
stos
pop
add
lahf
push
inc
pusha
mov
inc
cld
push
aas
inc
jp
cmpsb
mov
dec
mov
push
or
cmp
and
pop
xchg
xor
push
imul
pop
fnsave
repnz
out
dec
lahf
cwtl
mov
dec
nop
roll
pusha
nop
aaa
push
mov
mov
enter
nop
daa
orb
mov
xor
fwait
mov
mov
inc
fsubs
inc
inc
jmp
cmpsl
sub
add
lcall
pushl
je
mull
aad
loop
pop
repnz
stc
and
cwtl
xchg
aad
ret
dec
inc
cli
aaa
insb
ja
movsl
jle
das
scas
sahf
dec
sbb
xchg
fwait
push
jmp
inc
pop
lock
xor
mov
and
je
mov
repz
fistl
push
stos
cmp
or
push
addr16
push
pop
mov
inc
xchg
push
push
mov
push
lds
lods
jne
loopne
xlat
adc
or
pop
xor
jo
repnz
lcall
or
pop
push
sub
lods
jmp
xchg
pop
sbb
in
inc
aad
cmp
lock
hlt
or
repnz
push
pop
lods
daa
les
and
inc
mov
cmp
xlat
lea
xor
leave
loop
aaa
push
adcb
add
aam
jg
cmp
sub
stc
cmp
sub
leave
int
sbb
mov
fists
lods
mov
pop
sbbl
and
clc
mov
loop
xchg
out
xchg
sub
shr
cmp
adc
xor
mov
aas
jecxz
lods
cwtl
jmp
out
jae
lock
mov
dec
cld
iret
add
jbe
stos
fcomp
and
popa
js
mov
cmp
repnz
stc
jb
imul
push
fwait
pop
jne
pop
jae
pop
cmp
icebp
xchg
jbe
mov
paddq
cld
inc
sti
lret
movsb
dec
push
push
jg
and
stos
insl
dec
push
les
push
sbb
loope
rclb
jge
xor
pushl
aas
out
adc
pop
test
cmp
rcr
mov
mov
loope
xchg
dec
or
inc
sub
jnp
rolb
ret
shll
mov
enter
xchg
aaa
xchg
stos
inc
pop
or
hlt
sub
or
out
xor
test
push
clc
fs
popf
outsl
push
jge
lds
push
inc
fdivrs
sbb
std
mov
fdivl
adc
mov
jg
imul
call
jmp
mov
popa
and
mov
add
add
es
jne
iret
mov
iret
gs
xchg
jbe
shlb
mov
jbe
int
cmp
test
sti
outsl
xor
movsb
or
add
sbb
adc
arpl
and
pop
mov
cmp
pop
call
mov
les
lret
and
inc
push
in
fs
scas
jo
data16
sbb
pop
dec
mov
mov
xchg
or
adc
dec
fbld
ret
scas
push
push
loopne
adc
rcrb
sbb
xor
gs
loop
pop
cltd
pop
inc
fwait
pop
mov
jo
mov
mov
add
mov
xchg
adc
ja
aas
loop
and
add
ret
aaa
mov
sub
cmpsb
test
shll
cmp
lods
sbb
xor
mov
xchg
ja
dec
adc
pop
inc
mov
fildl
lock
out
xchg
cs
mov
movsb
push
imul
mov
clc
sbb
cltd
sbb
mov
icebp
mov
int3
or
rolb
add
leave
fs
popa
sti
jbe
movsl
fucomp
repnz
loope
ror
mov
inc
push
sub
aaa
push
mov
xor
push
sub
mov
repz
clc
daa
mov
addr16
imul
icebp
dec
or
push
sub
cmp
daa
jl
cmp
jmp
mov
or
sub
cmp
fs
add
adcl
adc
mov
lret
xchg
pop
insb
sbbb
push
movsl
je
inc
push
les
mov
mov
pop
or
and
out
inc
sbb
sub
arpl
out
jne
fsubrp
les
xor
in
inc
push
repz
shr
cltd
inc
ljmp
xor
jno
xchg
or
aam
icebp
mov
test
mov
or
sub
xchg
adc
cmc
in
das
add
loopne
add
hlt
dec
movsb
xchg
pop
and
cli
jp
pop
in
sub
in
mov
xchg
pusha
filds
xchg
dec
lret
cmp
or
and
ret
into
push
dec
int
in
cmp
jle
addr16
push
faddl
mov
mov
mov
push
in
insl
outsl
sbbl
into
fmul
cmpsb
sub
in
and
jmp
or
rcrb
jl
es
movsb
aad
aad
dec
int
cli
mov
out
push
jmp
push
dec
movsl
sub
sub
ss
fisttps
dec
cmp
fcmovb
xchg
mov
adc
cwtl
shll
mov
cmp
push
inc
mov
cmpsb
mov
xchg
sbb
iret
lahf
into
out
pop
jae
xlat
mov
ficompl
scas
mov
outsb
fsubl
stos
xchg
cli
sbbl
pushf
repz
jle
xchg
push
jmp
fidivrs
testb
cmp
int
push
jle
sub
paddd
fsub
inc
or
add
jge
push
repz
lret
shl
pop
fs
sbb
or
mov
mov
and
ss
ret
sub
sbb
mov
jae
dec
and
push
dec
shr
xchg
insb
jl
ss
imul
out
dec
pop
sub
pop
lahf
dec
sub
cltd
push
popf
sbb
rorl
rclb
sub
in
add
xchg
sbb
mov
push
roll
sbb
pop
mov
dec
idivl
stos
add
xchg
fwait
mov
in
push
sarl
outsb
insl
xchg
xorl
cwtl
test
dec
mov
push
sub
push
pop
mov
xor
sub
sub
xor
jnp
aaa
push
and
or
pop
jp
stc
gs
leave
and
enter
adc
xor
xor
subb
add
lret
imul
xchg
subl
sbb
pop
xchg
stos
and
push
cmp
jl
jno
dec
xchg
xchg
rorl
pop
xchg
cmpsb
movb
or
jp
jge
icebp
imul
mov
pop
iret
cmp
or
mov
adc
mov
mov
test
popa
cmp
adc
cmp
fwait
insl
add
lock
lret
daa
push
mov
xor
fcmovbe
adc
mov
popa
inc
cmpsl
xchg
inc
dec
cmp
lahf
mov
rcrl
mov
cmpsb
dec
std
outsb
arpl
imul
outsb
dec
sub
sbb
ljmp
cli
fcomp
mov
inc
inc
ljmp
out
push
cwtl
and
fcoms
ss
mov
mov
push
xchg
xor
fidivrs
int
adc
adc
ret
mov
jg
adc
xor
and
dec
xor
repnz
mov
icebp
pop
jnp
add
clc
add
fs
mov
rorb
xlat
or
leave
xor
cmc
in
mov
int3
decl
pop
jecxz
mov
add
mov
out
jno
jno
pop
insb
js
dec
cmp
sbb
sarb
push
movsl
xor
pop
fimull
mov
clc
mov
mov
pop
mov
sub
mov
jmp
lcall
and
xor
aam
test
lret
jno
rorb
adc
and
shlb
xor
inc
push
jno
cmp
bound
xchg
fbstp
hlt
xor
xchg
cmc
out
add
xlat
push
adc
jo
and
jmp
push
popf
adc
push
xor
incb
cmpsl
call
ds
out
push
mov
xlat
insl
clc
imul
bound
fwait
xor
adcl
mov
aad
mov
sub
sbb
rorl
shrb
sub
loop
shlb
lcall
mov
push
js
int3
decb
in
ror
gs
add
and
lret
es
les
subb
movsb
iret
test
sbb
roll
filds
out
pop
or
mov
out
das
push
push
popa
lods
test
add
mov
test
arpl
or
rcrb
outsb
add
insl
fisttpll
adc
ret
mov
xchg
xor
mov
stos
pushf
jmp
xchg
jne
shlb
xchg
hlt
loopne
jnp
ret
js
call
test
repz
popa
or
les
cmc
pushf
fdivs
scas
int
andb
gs
dec
popf
sbb
pop
pop
or
fidivrs
pop
push
imul
mov
incl
std
jb
adc
mov
leave
leave
or
scas
xor
jae
leave
sub
inc
fs
dec
dec
lcall
inc
pop
inc
xor
lods
in
pop
in
push
xor
push
repz
cmpsl
inc
ud0
or
fbstp
daa
push
jb
mov
mov
outsl
daa
insl
dec
adc
addr16
ds
or
add
xor
pop
cmp
adc
jl
mov
push
lret
or
cmp
add
sub
cmpsl
cmp
stc
jg
dec
mov
and
sub
lahf
dec
int3
sub
aad
sti
push
clc
movl
dec
int
lcall
and
mov
movsb
test
stos
mov
add
sbb
nop
mov
jg
dec
mov
mov
or
mov
ljmp
stos
dec
mov
in
ret
dec
push
aas
cli
shl
sub
inc
test
and
push
adcb
adc
sbb
pop
dec
sbb
xchg
incl
out
shl
push
adc
mov
lret
inc
loopne
or
sub
enter
cmp
pop
ljmp
sub
jns
insb
or
jns
jns
xchg
sub
shrl
rcrl
into
add
mov
mov
pusha
cmp
lea
inc
cli
inc
jne
pop
mov
movsl
dec
rclb
mov
mov
jbe
and
lret
lahf
les
rcrb
jl
loope
or
add
in
mov
imul
adc
iret
pushf
inc
in
std
stos
xchg
xor
icebp
or
mov
sub
jns
sub
mov
mov
out
jle
adc
lret
cmp
scas
or
dec
jb
pop
movsb
das
js
popa
jns
sbbb
out
mov
icebp
mov
add
sub
hlt
inc
in
push
sub
mov
dec
pause
lahf
cli
push
xchg
aam
test
jecxz
lods
or
inc
clc
sub
mov
or
or
add
pop
cmp
pop
or
testb
and
jmp
mov
xchg
push
add
add
xchg
cmp
imul
les
adc
bound
icebp
mov
pushf
jb
mov
popf
mov
ljmp
out
push
fidivrs
cld
adcl
mov
jl
cli
lds
sbb
and
sbbb
fiaddl
and
pop
sub
in
lods
adc
mov
inc
mov
mov
std
in
pop
pop
pushl
clc
loope
xor
dec
in
cmc
add
lret
pushf
push
mov
das
or
pusha
notl
repnz
ljmp
xor
cmpsb
mov
popa
test
shll
cmpsb
test
pop
gs
sbb
mov
mov
gs
mov
push
and
insb
lds
mov
fisttpl
cmp
data16
adc
aas
dec
ljmp
mov
adc
mov
ss
imul
mov
bound
mov
xor
aad
xor
xchg
std
dec
push
out
std
push
lahf
mov
jle
or
rorl
xchg
xor
jmp
jno
xor
cmp
xchg
pop
lock
dec
push
in
jecxz
cli
xlat
add
movsl
add
sub
das
push
xor
cwtl
jge
fnstenv
inc
testl
rcrl
jbe
dec
mov
adc
dec
lcall
mov
sti
cltd
pop
stos
dec
inc
cmc
jo
aad
mov
cli
mov
and
test
fcomp
cmp
loope
jb
insl
aas
mov
push
test
fisubrl
pop
jb
ljmp
imul
sub
push
jnp
mov
mov
addr16
push
mov
nop
stos
jno
pop
mov
out
or
test
jecxz
and
jp
jne
xorb
jno
mov
sub
ljmp
sbb
or
mov
pop
das
push
push
aas
fdiv
sbb
inc
aad
test
fstpl
mov
sbb
adc
inc
inc
cmc
jno
mov
sbb
mov
jg
movl
js
inc
in
sbb
inc
jecxz
jbe
int3
loop
lcall
sbb
sbb
sbb
fcompl
cmp
mov
movhps
mov
xor
jecxz
ljmp
mov
xchg
repz
shrl
sub
scas
xchg
adc
xor
xchg
int
cs
push
push
mov
cltd
inc
nop
mov
push
pop
dec
js
test
sub
hlt
sbb
out
mov
lea
adc
stc
sbb
js
fcompl
push
adc
adc
mull
sub
dec
adc
xchg
bound
jne
push
adcl
cmp
mov
mov
jnp
sbb
xor
stos
pop
lds
add
fwait
pop
and
jo
cmp
mov
call
aaa
sub
cli
pop
push
in
add
push
addr16
and
lret
and
sbb
scas
jg
mov
shl
cmp
xor
iret
sti
mov
scas
sahf
pop
adc
test
pop
push
mov
mov
in
xlat
push
jne
imul
sbb
and
lock
cmpsl
out
mov
test
shl
mov
xlat
adc
xchg
mov
xchg
jp
frstor
lahf
ficomps
rorl
and
fsubrs
lret
jo
fwait
idiv
popa
jbe
pusha
xchg
sbbl
call
jecxz,pt
add
lods
stos
mov
add
ret
jecxz
dec
and
add
int
jle
or
jne
adc
insb
xchg
repnz
fucomp
or
sub
cmp
std
pushf
mov
dec
hlt
pop
imul
cs
in
aas
repnz
das
add
pop
cwtl
dec
jns
mov
daa
cwtl
pop
xor
test
pop
push
pop
fs
xor
xor
xor
clc
aad
adc
jecxz
jl
mov
sbb
test
mov
and
inc
mov
int3
xor
fistpll
mov
iret
pop
sbbl
loope
js
jbe
or
jl
icebp
or
sub
test
xor
mov
mov
popa
mov
push
ljmp
jno
jge
mov
xchg
rcrl
andb
cmp
jo
loope
xlat
adc
xchg
mov
pop
mov
add
out
mov
andl
mov
stc
mov
test
faddl
sub
sbb
push
out
ja
jb
and
push
adc
mov
jb
aas
stos
xor
fwait
sti
push
sbb
pop
push
movsb
mov
xlat
pop
pusha
ss
jne
sbb
fstpt
cmc
and
jp
xor
mov
and
add
and
add
add
lock
aad
jno
cmpsl
mov
shl
dec
mov
aam
pusha
outsb
pushf
mov
jg
mov
inc
call
lds
or
cli
adc
push
mov
xor
jp
mov
inc
xchg
dec
aaa
add
mov
dec
cmp
mov
rorb
into
sbb
cmp
cmc
test
es
loopne
jp
in
sbb
dec
cmp
xor
call
push
mov
out
cs
fwait
xchg
jge
adc
xor
popa
add
dec
je
jecxz
jo
mov
insb
adc
sbb
jae
lods
mov
push
sbb
add
or
enter
xor
adc
adc
mov
insl
push
jne
outsb
xor
outsl
lcall
cltd
mov
outsl
sahf
stos
lods
push
test
mov
aaa
push
pop
jo
pop
inc
fs
sbb
or
mov
jmp
dec
jbe
cltd
push
and
add
mov
test
mov
sub
adc
xbegin
stos
jge
test
loopne
xor
fstpl
xchg
and
xchg
push
inc
sahf
mov
shrb
inc
pushf
push
pop
jge
cmp
sahf
xor
inc
mov
icebp
mov
inc
dec
sbb
testb
cs
sub
xchg
pop
jmp
sahf
or
shlb
in
lea
mov
lret
pop
jno
rcrb
mov
mov
adc
mov
int
stos
jmp
leave
mov
cld
outsl
les
movsb
xor
add
stos
xchg
pop
int3
mov
push
inc
movsb
xor
xchg
adc
mov
mov
outsl
add
lret
data16
in
xchg
inc
xchg
dec
lds
pop
jle
dec
mov
scas
jno
push
aaa
hlt
mov
mov
sbb
sbb
mov
test
adc
xchg
jnp
shll
pusha
call
adc
call
pushf
dec
or
cmp
bound
xchg
insb
das
push
sub
fistps
push
out
gs
xor
adc
decb
pop
pusha
jns
sbb
lds
es
sbb
pop
popf
xor
sti
popl
push
mov
scas
mov
inc
aas
gs
sub
or
mov
adc
mov
dec
lcall
inc
fwait
mov
adc
mov
push
cli
sbb
jp
mov
addl
roll
add
clc
or
push
xor
cli
dec
pusha
test
dec
test
mov
cmc
adc
xchg
adc
cmp
ja
js
adc
dec
aad
in
push
cmpsb
adc
lds
in
rorb
fnsave
imul
out
adc
mov
loope
lret
fiaddl
add
jmp
ret
mov
sahf
scas
fwait
push
jmp
iret
and
mov
sbb
cmp
and
mov
repz
pop
and
jmp
aaa
jbe
std
push
xchg
mov
loop
in
push
lods
push
shr
lods
push
int3
or
push
fidivl
mov
jmp
and
push
call
inc
or
mov
fnstcw
es
mov
pushf
cmp
dec
aas
sbb
xor
mov
push
adc
scas
xchg
dec
aad
mov
subb
xor
dec
icebp
insb
imul
outsl
mov
ljmp
out
das
mov
xor
push
pop
add
hlt
dec
dec
sbb
aad
cmp
orl
xchg
sub
stos
fiaddl
pop
lret
sbb
dec
mov
sub
sbb
mov
pop
dec
arpl
sub
pop
mov
in
sub
inc
mov
inc
cwtl
outsb
shr
test
inc
int3
xor
mov
lock
ss
dec
mov
sarl
sarb
pop
stc
cmp
movsb
jmp
add
mov
rorl
clc
mov
flds
and
mov
mov
call
rolb
lds
sub
je
dec
testb
cmp
push
add
rcl
xchg
fldl
jnp
iret
ljmp
dec
cmp
insl
jg
fwait
loopne
push
ss
inc
sti
shl
xchg
xchg
iret
repnz
loop
pop
pop
sahf
jp
imul
mov
fwait
inc
stos
mov
sarl
mov
shl
jmp
adc
rorl
icebp
cmp
lret
bound
or
sahf
jmp
jle
addr16
push
push
sub
imul
xor
btr
dec
pusha
stos
aad
repnz
or
cld
jg
sub
loopne
out
sub
mov
fildll
shlb
aad
mov
jmp
insl
lret
inc
mov
out
mov
out
mov
push
in
push
aaa
pop
jnp
aas
push
ret
js
push
pop
sub
pop
outsl
lds
inc
notl
cld
add
mov
repnz
push
fldl
or
insl
mov
pop
mov
pusha
push
xchg
or
lret
sub
sub
repz
mov
lds
mov
sub
mov
jnp
mov
fdivp
js
xchg
cmp
xor
xor
ljmp
and
sub
gs
movsb
mov
les
stos
in
push
push
add
dec
push
icebp
mov
mov
xor
and
jbe
inc
je
jle
adc
idivl
outsb
sbb
nop
daa
xchg
lcall
cwtl
test
int3
lds
mov
in
sub
add
out
mov
notl
and
xchg
mov
daa
and
lret
push
iret
xor
test
mov
sbb
imul
std
dec
cwtl
cmpsl
cmpsl
push
push
dec
pop
fsubp
int3
pop
aaa
outsb
xchg
fcmove
stos
mov
popa
in
sub
sbb
xchg
pop
cmc
sub
dec
es
mov
mov
int3
les
inc
rcrl
xlat
pop
repnz
sub
mov
insb
and
fiaddl
popa
ds
add
xchg
cs
jl
stc
mov
arpl
enter
push
out
xchg
mov
xor
jbe
xor
xchg
or
insl
jns
shrb
and
sbb
add
adc
inc
mov
shrl
cwtl
inc
hlt
jbe
mov
jge
cmp
popa
dec
loope
pop
and
clc
fldt
or
push
repnz
jmp
push
cli
in
popf
add
ljmp
jno
sub
jp
mov
add
or
orl
mov
mov
lods
dec
mov
lret
iret
int
mov
arpl
clc
mov
dec
jg
cmp
int3
js
xchg
xor
inc
mov
xchg
ret
lcall
xor
cmp
inc
test
or
or
fcmovnb
add
dec
cmp
sub
push
inc
pop
or
xor
repnz
cmp
cmp
xor
test
push
stc
nop
nop
insl
mov
jae
aas
sub
aam
rcl
or
fdivs
sub
enter
and
lahf
sub
addr16
ja
rcll
sti
inc
outsl
psadbw
ljmp
repz
sub
adc
cmp
addl
cli
sbb
xchg
pop
xor
arpl
int
aad
fidivrl
mov
rorb
or
subl
add
call
leave
outsl
adc
mov
fdivl
jno
je
inc
inc
inc
sti
jo
jne
xor
ja
adc
add
push
mov
mov
pop
inc
fadds
jge
in
cli
inc
out
add
xchg
add
call
mov
daa
inc
push
xchg
mov
inc
rolb
lea
mov
fwait
push
push
lea
out
inc
jne
xor
aaa
sti
push
jo
push
sahf
insb
push
lds
cmpsl
cmp
das
pusha
test
adc
fldcw
sbb
ja
push
out
in
pop
sub
idiv
jp
aad
sbb
nop
loop
adc
insb
dec
pop
and
scas
das
imul
sahf
iret
inc
cmc
scas
sbb
add
rclb
or
and
sbb
subl
addr16
add
test
sahf
lret
lret
ret
cmp
gs
inc
lret
pushf
add
xor
test
out
lds
push
data16
xchg
fsubrp
ret
popa
adc
and
pop
mov
shlb
jl
xor
mov
rorb
std
shl
test
int3
ljmp
mov
popf
push
addr16
xchg
adc
aam
mov
jp
push
adc
inc
pop
inc
inc
cmp
ds
pop
loop
rol
imul
shl
add
ss
aad
push
scas
inc
xchg
jns
jb
int3
arpl
xchg
in
outsl
iret
mov
or
mov
lret
pop
xor
push
or
in
pop
fbstp
scas
dec
xchg
dec
push
or
xor
insl
mov
lret
rol
les
rorb
xlat
mov
addl
addb
xor
xor
scas
cld
mov
insb
cld
xchg
imul
fidivs
mov
jg
outsl
cmp
ljmp
jb
adc
push
in
mov
ljmp
push
mov
shll
lahf
mov
xchg
push
push
xlat
outsl
das
xchg
sub
repz
cmp
mov
cmpsl
lcall
jbe
jecxz
out
dec
adc
jo
das
lds
enter
dec
fildl
ret
xor
xor
or
xchg
add
movsl
sbb
mov
or
add
cmc
aaa
xor
jmp
out
mull
or
imul
dec
addr16
jnp
pop
jno
inc
sbb
add
ss
hlt
or
push
jmp
mov
push
aas
jb
jle
fdivrs
ss
mov
dec
mov
push
dec
xchg
adc
dec
mov
mov
xor
xor
mov
sets
test
lret
pop
je
add
inc
jb
jmp
loope
mov
sbb
filds
or
inc
xchg
cmp
dec
cmp
imul
movsl
jo
or
jl
cmp
add
add
adc
imul
push
and
rclb
subb
xor
jmp
dec
inc
mov
mov
jmp
cs
jae
std
pop
rcrb
es
cmp
out
sti
fwait
int3
aad
pusha
mov
jb
jle
pop
jo
leave
xor
mov
push
sbb
cmp
je
fsubrl
cmp
add
push
pop
inc
jns
mov
dec
push
loop
jge
clc
and
addr16
adc
aaa
frstor
out
xor
mov
cmp
mov
add
cli
sub
out
sbb
jne
arpl
cmpsl
lods
add
dec
xor
aaa
adc
pop
inc
arpl
cmpsb
mov
fcomps
js
std
lret
fwait
jp
int
cld
xchg
xchg
or
mov
push
mov
test
int3
imul
data16
inc
pop
inc
cltd
push
arpl
out
or
jmp
pop
int
das
andb
int3
cwtl
sahf
push
rcl
xchg
lds
decb
jno
fldpi
dec
or
xchg
sub
add
gs
jns
cli
enter
std
cmp
sub
push
outsb
inc
inc
sbb
loop
cltd
test
push
gs
jb
push
mov
push
add
mov
cmp
out
mov
and
subb
ljmp
push
dec
sti
inc
mov
clc
enter
in
mov
jb
mov
lods
push
iret
out
cwtl
jnp
int3
out
inc
aad
xor
or
lock
inc
mov
adc
pop
aad
int
dec
xor
insl
pop
cltd
sbb
and
pop
aaa
mov
out
inc
mov
test
push
test
out
and
test
cltd
mov
or
test
cmc
fadd
scas
lret
adc
lret
das
xchg
cmp
add
cmp
dec
jecxz
jmp
adc
hlt
sbb
mov
mov
pop
and
xlat
les
and
mov
or
mov
xlat
and
jne
pop
incb
xchg
xchg
scas
arpl
jge
cwtl
popa
dec
inc
notb
pop
pop
ja
sub
xor
std
fsubl
fcomps
aas
orl
cwtl
adc
xchg
test
lahf
cmovle
ds
mov
fmulp
cmp
jge
aas
shll
leave
push
sub
cmpsl
push
clc
jg
loope
xor
cli
scas
jb
lods
inc
popa
test
add
or
fscale
add
cltd
movsl
xchg
mov
and
xlat
jb
mov
cld
jne
xchg
scas
cmp
push
mov
clc
ss
cli
sub
pop
pusha
mov
outsb
push
mov
dec
lea
pop
cmp
lcall
in
xchg
in
jbe
call
lret
inc
fnstenv
adc
cmc
dec
cmpsl
in
sub
movsl
push
outsl
push
clc
xchg
lods
shl
pop
in
lret
pop
mov
cmp
rorl
pusha
sbb
push
cmp
push
ja
mov
push
pop
arpl
leave
pop
push
mov
xchg
jge
mov
sbb
jo
rolb
je
xchg
mov
bound
stc
fwait
out
popf
aam
dec
mov
add
sbb
jmp
mov
cmp
push
lods
xor
and
ret
or
adc
gs
iret
addr16
repnz
cmp
lods
aam
and
fisubrs
jo
push
xor
xor
add
fwait
cmp
mov
inc
fsubs
loop
dec
cmc
cmp
mov
cmc
cmp
pop
lods
cmc
mov
outsl
inc
push
sbb
ss
sub
xchg
pop
mov
and
lock
insb
lcall
fisubrs
fstpl
call
pop
push
shrb
dec
fists
lock
lcall
and
ss
decl
ret
fcoml
outsb
loope
je
sub
test
mov
mov
pusha
popf
push
decb
fcmove
mov
and
adc
dec
adc
dec
and
ja
fisubl
lret
push
mov
xchg
pop
push
push
mov
insl
mov
pop
mov
fsubr
add
dec
cmp
jns
mov
fstp
add
cmc
and
mov
hlt
popf
out
pusha
stos
arpl
push
scas
ljmp
test
and
xor
scas
aaa
jae
gs
daa
out
mov
jle
lds
adc
notb
popf
leave
sahf
insl
add
mov
adcl
sbb
hlt
adc
inc
xorb
sbb
mov
xchg
js
mov
jg
inc
stos
push
mov
mov
sbb
xchg
imul
repnz
or
mov
lret
mov
sbb
push
or
mov
sbb
mov
mov
inc
push
in
mov
imull
bound
xchg
out
fidivrl
jge
lahf
mov
add
out
stc
cmp
movsb
mov
pushf
or
aaa
into
mov
cli
jns
test
scas
pop
sbb
pop
mov
inc
mov
pop
loopne
mov
jae
outsl
sbb
ret
xchg
jge
push
push
mov
insb
jae
pop
cmc
xlat
jmp
outsb
mul
imul
mov
xchg
fdivrp
lods
inc
sub
push
ljmp
lret
test
add
bound
and
pop
loope
int
jmp
stos
add
cmp
stos
mov
cmp
adc
loopne
imul
inc
lock
insl
xchg
inc
jnp
shlb
dec
aam
push
pushf
cli
popf
lret
dec
leave
push
outsl
clc
or
inc
imul
fsubl
inc
mov
out
pop
or
shll
push
in
xor
add
adc
mov
ss
fldt
fisttpll
xchg
push
sub
mov
cld
mov
mov
cmp
mov
xchg
pusha
leave
dec
mov
repz
sub
arpl
out
in
push
icebp
scas
add
shll
sar
xchg
ret
jne
repz
loope,pt
and
xor
scas
mov
sbb
mov
mov
and
out
addr16
aad
adc
cmp
scas
sbb
fstps
stc
cmp
xchg
outsb
sbb
sub
or
jae
cmp
sub
sub
xor
rolb
popf
sub
jo
shrl
and
pop
fcmove
das
insl
add
pop
sbb
addr16
mov
out
mov
daa
lret
add
mov
shlb
fldlg2
sarl
jbe
lds
insb
leave
add
jecxz
outsl
in
sbb
in
pop
adc
jae
mov
inc
push
aam
jecxz
sub
mov
fidivrl
dec
out
or
scas
jns
jl
cld
in
sarl
cmpsb
aas
test
aad
pop
cli
enter
pop
mov
and
dec
shlb
scas
and
adc
shlb
mov
jl
sbbl
mov
ret
xor
scas
fsubs
mov
lods
incl
popa
inc
or
sahf
xor
dec
inc
fs
out
sbb
clc
and
outsb
aam
leave
xchg
cmc
mov
stos
or
mov
call
sub
addl
fs
insl
xchg
add
xchg
test
std
lock
or
xor
and
movsb
cmp
inc
jle
jl
dec
pop
xchg
sbb
dec
add
xor
mov
inc
jecxz
sbbl
shrb
jno
jl
popa
lock
jle
lds
jp
mov
stc
push
clc
jno
jo
and
out
js
jmp
in
pop
cmpsb
mov
lahf
enter
dec
and
xor
dec
push
sub
mov
jns
out
or
push
jnp
into
das
and
sub
lods
jne
fisubs
sti
mov
sub
int3
push
pusha
inc
push
jne
rcr
dec
outsb
or
lret
xchg
ficomps
fidivs
pop
jg
cltd
enter
andl
dec
ss
inc
loope
mov
movsl
lds
mov
push
mov
push
xor
in
inc
stos
xchg
inc
push
or
mov
into
inc
data16
mov
push
inc
test
adc
adc
rolb
or
imul
lock
mov
mov
imul
idivl
daa
stos
pop
xor
or
loop
lock
lret
xchg
frstor
mov
insb
loopne
pop
in
sbb
xchg
mov
sub
test
dec
scas
push
stc
inc
or
xchg
mov
mov
pop
call
mov
aam
mov
inc
stc
pop
ds
adc
leave
jmp
jl
inc
fmul
and
mov
ret
sbb
data16
mov
in
dec
arpl
sahf
sub
mov
xor
push
mov
stos
push
pop
lods
xchg
scas
push
jge
fstpl
dec
orl
jbe
cld
xchg
and
sahf
xor
cld
cmovge
mov
sbb
mov
inc
clc
mov
fbld
sub
js
inc
sahf
inc
or
push
les
inc
pop
sahf
pusha
por
mov
test
and
push
outsl
or
bound
xchg
push
pop
ds
cmp
xor
mov
cli
mov
orl
movsb
outsl
cmp
xor
mov
cmp
push
mov
inc
mov
push
fimuls
xlat
insb
sti
rcll
rcrl
hlt
sbb
sub
push
mov
push
nop
sbbl
push
xor
ljmp
outsl
add
jmp
jecxz
in
mov
mov
shrl
rorb
sub
mov
adc
cld
and
xor
pop
dec
xlat
cmp
push
mov
cwtl
mov
das
lret
pop
adc
mov
ret
jle
and
flds
sub
out
rcll
cs
outsb
sbb
or
sub
xchg
add
pop
cld
inc
movsl
and
in
repnz
out
cli
cmp
pop
mov
bound
add
pop
mov
jo
and
xchg
ror
in
push
mov
push
mov
xchg
push
sbb
mov
jno,pt
mov
cmc
push
bswap
fstps
adc
loopne
in
out
lds
sub
mov
mov
test
cmp
icebp
mov
xor
ds
inc
repz
sub
scas
jl
cmp
jle
dec
cmpsl
sti
inc
int3
push
inc
cmp
test
cmp
cmp
imul
ret
xchg
rcll
add
jp
xor
test
pop
in
sti
cmp
shr
mov
in
jl
clc
imul
shl
sub
repz
cs
pop
xlat
xor
jle
cltd
lret
xor
mov
add
enter
or
or
mov
push
or
pop
inc
test
jnp
mov
ljmp
popa
mov
adc
sub
mov
fwait
adc
lahf
sub
icebp
inc
icebp
jl
lods
shlb
xchg
stos
testb
sti
adc
and
lahf
pusha
ljmp
cmpb
lea
adc
sbb
outsl
scas
add
adc
out
mov
dec
cmp
andb
mov
std
and
xchg
setbe
jge
cmpsl
sbb
fldenv
popf
xchg
adc
push
push
cmp
insl
das
push
fdivrp
mov
data16
pop
cs
adc
dec
or
adc
out
clc
adc
cmp
sbb
lahf
sarl
ja
insl
icebp
dec
cmpsb
mov
push
sub
scas
pop
aam
push
mov
adc
aas
pop
pop
loope
insb
mov
mov
ret
aad
insl
inc
mov
cmpsl
in
inc
loop
inc
test
xchg
push
pop
movsb
repnz
fsubs
in
test
adc
xor
nop
outsb
test
outsb
xchg
lds
sarl
mov
push
adc
icebp
insb
push
outsb
sbb
xchg
adc
in
fildl
or
fiadds
pushf
fisubrl
add
cmp
mov
ficoml
xchg
add
sub
outsb
pop
std
jo
mov
jb
mov
in
mov
sbb
stos
xchg
ds
daa
imul
sub
push
sti
mov
shr
jge
inc
lods
xchg
sub
and
push
sbb
scas
mov
das
or
cmc
pop
lahf
and
ss
fwait
add
fisubrs
rorb
inc
ficomps
xor
pop
movsl
loop
xlat
jle
ds
sbb
push
dec
dec
sarl
sub
adc
jg
in
dec
jecxz
push
add
and
clc
jae
xchg
das
mov
dec
cwtl
js
cmp
loope
repnz
cmc
loop
dec
xlat
mov
cmp
shrl
loop
outsl
cwtl
mov
or
enter
stos
fisubs
je
adcb
mov
push
mov
das
adc
pop
call
int3
jg
ret
scas
pop
testb
mov
pop
or
pop
cmp
pop
in
pop
pop
sub
cmp
insl
mov
add
push
ja
aaa
or
xor
outsb
mov
push
mulb
push
mov
or
jge
and
loopne
loopne
cmp
mov
movsl
pop
jo
sbb
scas
cmp
xorb
lret
mov
jmp
fidivrs
push
insl
push
ljmp
cmp
mov
xor
outsl
jns
rcll
insb
mov
into
jle
inc
scas
in
aaa
xchg
in
int3
and
xor
jae
pusha
test
in
xchg
cli
inc
repz
mov
mov
sub
adc
in
sarl
xchg
daa
pop
stc
in
mov
adc
sub
inc
mov
pop
sbbb
mov
lds
jnp
adc
insb
inc
arpl
gs
or
dec
or
popa
jg
cld
push
outsl
or
mov
loope
mov
sbbl
xchg
pop
in
ja
xor
pop
dec
pop
xorl
call
jle
xor
mov
pop
sbb
or
imul
jp
jmp
sbb
or
push
add
or
movsb
cs
loope
mov
sub
rcll
jecxz
rorb
sub
test
cmpsb
movl
sahf
push
les
repnz
aad
push
xchg
popf
jae
lret
leave
jecxz
push
shr
sbb
xchg
sbb
movsb
push
xchg
sahf
xor
loopne
cmp
dec
int
sbb
loop
dec
jl
mov
ret
ds
adc
or
into
xor
xchg
xchg
test
cmpsb
cmp
mov
add
and
mov
into
fsubl
xor
push
push
push
loope
push
adc
lret
inc
pop
lahf
xor
push
inc
cli
adc
inc
clc
xchg
inc
mov
fnsave
xorb
jo
mov
sbb
xchg
pusha
pop
std
aad
shr
pop
xchg
or
push
imul
cld
mov
data16
sub
sahf
lods
ja
inc
data16
mov
jecxz
aas
adc
mov
and
test
int3
sub
mov
xchg
jp
xchg
ss
push
jg,pn
in
jbe
jl
cmp
add
lahf
push
out
stos
mov
xor
adc
or
sahf
push
xor
xor
fxch
fsubr
inc
sub
pushf
or
mov
mov
das
mov
fcompl
call
jmp
std
xchg
and
andb
cmp
mov
popa
or
add
sbb
jbe
in
stos
mov
push
int
stc
pop
add
rolb
add
jmp
jbe
shr
mov
jg
sbb
out
mov
js
mov
outsb
sahf
test
ret
lret
jo
adc
aas
or
inc
lea
mov
push
cmpsl
pop
nop
dec
cmp
mov
icebp
repnz
mov
jmp
addr16
sbbl
mov
jnp
es
frstor
shrb
cltd
int3
push
gs
into
cmp
addr16
mov
shll
pop
lret
and
cli
push
cmp
mov
dec
fcomip
lock
subl
in
or
fnsave
sbb
aas
stos
insl
inc
mov
mov
adc
cmc
les
xchg
jp
and
pop
adc
xchg
cwtl
jae
add
and
xchg
in
ds
or
cmpxchg
popf
or
mov
int3
jnp
xor
jbe
int
mov
add
push
jo
pop
mov
sub
add
test
test
sbb
int3
loope
arpl
rcrl
sub
faddl
rolb
push
push
outsl
xchg
pop
adc
add
std
scas
sbb
sti
ss
adc
sub
dec
jmp
ss
arpl
loopne
dec
neg
sbb
dec
push
fcomip
in
nop
insl
mov
movsb
jge
jmp
in
jge
dec
scas
aad
mov
jmp
jb
movsl
jg
nop
cmp
int3
movsb
jne
lods
push
lea
clc
dec
jl
repz
jecxz
fistl
imul
test
aad
iret
shlw
dec
scas
xchg
das
adc
rol
mov
cltd
into
xchg
rorb
push
mov
into
xchg
inc
js
nop
rolb
sbb
xlat
or
xchg
cmp
rcl
clc
and
and
dec
ficoms
xor
sbb
ja
cli
cli
sbb
jnp
shrb
adc
cmp
xlat
sub
jecxz
fs
mov
inc
mov
sti
loopne
xchg
cmp
pand
out
test
sti
push
fstpl
int
fnstcw
lcall
test
into
lret
pop
adc
cwtl
icebp
mov
insb
pop
ljmp
push
mov
movsb
inc
and
xor
ss
add
mov
repz
dec
pop
inc
adc
test
test
nop
push
ja
out
mov
pop
xor
pop
mov
add
mov
shlb
ret
dec
imul
filds
mov
lea
cwtl
mov
push
add
movsb
cmpb
mov
inc
fldcw
aad
jnp
mov
cmp
mov
movsl
subb
mov
rorl
iret
add
shlb
sub
jbe
inc
xor
jb
pop
movsb
dec
movsb
pop
ds
pop
cmpsl
mov
sbb
mov
repnz
call
packuswb
iret
xchg
cmc
jecxz
xor
push
cmp
xor
cmpsb
lret
int3
push
cs
pop
add
jp
mov
or
pop
adc
scas
inc
sub
pop
repnz
dec
add
jecxz
lea
pusha
enter
shll
pop
mov
repz
je
fiaddl
or
push
cmp
cmp
pop
push
adc
ret
push
sub
or
jp
lods
inc
push
rorl
clc
sarb
arpl
inc
aam
test
int3
and
outsl
shlb
insb
mov
data16
add
int
std
xor
adc
out
movsl
popf
xor
xor
jo
pop
adc
fsubrl
mov
imul
js
pop
cmpsl
or
sub
lret
adc
and
cmc
mov
inc
std
in
jnp
xchg
sub
lcall
aad
scas
inc
inc
adc
test
jns
xor
push
push
movsl
sbbl
sub
cmp
mov
mov
inc
imul
repnz
or
cmp
sub
xor
sbb
lret
cmp
outsl
and
std
and
pop
xlat
add
jo
leave
data16
sub
mov
ja
mov
or
test
cmp
aam
xchg
push
gs
lahf
jnp
dec
push
and
imul
gs
push
sbb
or
sti
push
in
and
sbb
xchg
enter
and
adc
arpl
mov
fiaddl
pop
out
xchg
insb
add
mov
mov
daa
sub
dec
mov
testb
lahf
cld
xor
push
lcall
lds
xchg
stc
popf
hlt
in
xchg
and
setp
sbb
push
dec
sahf
gs
and
ret
insb
and
or
repz
mov
jle
push
mov
xchg
adc
and
mov
test
cmpl
data16
fsubrl
ret
enter
mov
adc
stc
cmp
mov
sub
cmpsb
xchg
andb
mov
add
cmc
jp
rep
incl
dec
sub
cmp
loop
add
je
pop
cmpsb
int3
lods
mov
push
vcomisd
mov
ss
mov
mov
ljmp
xchg
int3
dec
mov
mov
rclb
adc
aad
std
out
mov
jmp
scas
inc
ret
pop
cmp
dec
int
repz
ret
les
mov
sub
pop
adc
inc
addr16
lock
in
pop
push
lret
cmp
rclb
mov
sub
push
xchg
popf
mov
mov
out
sub
scas
mov
sub
pop
adc
sub
adc
test
pop
lock
out
adc
ja
or
xchg
aas
stos
je
dec
xchg
xchg
add
in
inc
gs
mov
imulb
shll
add
pop
push
mov
ret
test
addr16
jns
enter
mov
adc
jno
out
and
jae
mov
mulb
mov
stos
or
push
xchg
int3
stos
sub
je
cmp
mov
in
push
lods
inc
push
add
repz
ret
jns
iret
mov
jno
cmpsl
sub
insb
add
popa
lods
push
rorb
xlat
sub
lret
sub
scas
mov
negb
outsb
cmp
mov
cmp
and
jo
sbb
stos
into
stos
subb
gs
test
adc
jbe
xor
aad
mov
sbb
xor
in
xchg
xor
pop
sahf
or
sahf
and
cs
fsubs
push
mov
addl
rcl
push
dec
cmp
cmp
cmp
dec
fstps
and
jg
loop
or
cmpsb
xchg
test
iret
ret
pop
daa
xchg
lods
pop
jl
daa
cmpsl
inc
hlt
mov
cwtl
xor
fistl
clc
and
adc
adcl
lock
xchg
adc
dec
stc
pop
and
cs
xchg
and
jb
push
mov
ds
push
mov
mov
lret
sbb
rcll
xrstors
jecxz
sub
btc
outsb
std
push
cli
test
test
inc
nop
movsl
cltd
push
jg
push
pop
inc
test
mov
push
enter
push
adc
clc
and
pop
push
fwait
push
pop
leave
xor
or
xchg
movsl
test
xchg
mov
out
mov
push
ljmp
cmp
push
push
nop
xchg
je
fldt
fidivl
cmp
jecxz
mov
out
test
nop
ss
ret
xchg
in
incl
add
addr16
sarb
push
jmp
ljmp
xchg
mov
imul
movsb
lret
add
fucomip
cmp
xchg
jno
js
add
test
add
mov
push
cmp
lds
xchg
add
sub
adc
gs
pop
cmp
test
aam
cld
icebp
sti
and
xlat
mov
sti
pop
add
push
add
ljmp
dec
jo
dec
js
out
lea
mov
ret
sub
sti
dec
push
sub
inc
xchg
jo
ds
repz
jb
pop
aaa
pushf
cmp
addb
out
out
pop
mov
stc
add
int
and
lcall
ja
incb
repz
mov
aad
jne
sbb
mov
sbb
cmp
cs
loopne
dec
dec
ret
xchg
arpl
push
sbb
fcomip
pop
sub
or
jmp
inc
pop
jmp
cld
fyl2xp1
int3
arpl
xor
lock
lret
cld
or
lahf
cmpsb
aad
fwait
inc
gs
addr16
flds
dec
fists
mov
adc
gs
xor
adc
push
pop
pushf
mov
int3
lcall
xchg
xchg
cmp
in
lcall
iret
fdiv
push
jo
push
ss
cwtl
test
pop
insl
lahf
jnp
lock
mov
bound
push
cld
test
testl
jb
stc
nop
jnp
aas
add
pop
out
sahf
std
adc
shrb
sbb
rorb
xchg
lcall
jecxz
mov
jp
add
or
xor
inc
mov
dec
call
mov
pop
xor
add
add
cltd
stos
push
test
push
pop
jg
je
lds
jo
push
gs
pop
lcall
dec
add
sbb
movsb
sbb
shll
popf
fucomip
xchg
dec
pop
cmp
cmpsl
xor
pop
mov
jecxz
fs
push
and
out
pop
hlt
xchg
data16
frstor
cmp
push
das
mov
or
sarb
pusha
out
jno
pop
xor
dec
xchg
sub
mov
cltd
sbb
mov
xchg
push
stos
loope
jp
sub
xlat
fidivl
or
mov
xor
mov
push
inc
faddl
arpl
jle
inc
in
movsl
dec
loop
jg
arpl
dec
mov
push
fnstsw
dec
repnz
cmpsl
lea
sbb
and
pop
xlat
mov
sub
popa
xchg
mov
out
jg
and
mov
in
mov
push
xor
in
enter
test
sub
sti
pop
adc
cmc
clc
int3
mov
adc
imul
repz
dec
ja
jmp
xor
cmp
mov
inc
ret
jnp
and
lcall
sbb
xor
dec
data16
pop
pop
xchg
dec
and
sub
cld
int
xor
repnz
and
shrl
sarl
shrb
jecxz
sub
inc
jnp
inc
lods
popa
test
shll
repnz
cli
xchg
xor
push
jb
push
sbb
fsub
cmp
shr
cli
sti
movsl
in
adc
call
xchg
shrl
testb
hlt
stos
imul
mov
repz
aad
std
adc
outsb
pop
popa
shll
push
js
adc
fisubrl
ss
stc
or
test
test
test
and
cltd
das
mov
sub
push
mov
dec
sbb
aam
cmpsl
lds
lock
imul
push
cmp
cmpsl
aad
mov
pop
daa
cmp
pop
jl
icebp
mov
or
test
push
ror
out
dec
jo
xchg
ds
movsl
cmp
loop
mov
sub
cmp
jo
aad
sbb
push
xchg
add
jno
sub
scas
push
in
fiadds
xor
insb
fnstenv
push
mov
iret
fldcw
fsubs
stos
pop
stos
ret
bswap
xorl
mov
inc
ss
fwait
out
push
int
xchg
push
sub
test
lret
add
iret
data16
jl
sar
in
xchg
repz
pop
sub
push
jno
xor
inc
divb
insb
fisttps
mov
fsubrs
jo
aas
sub
pop
fsubrl
aaa
aaa
xchg
daa
inc
aam
jp
arpl
sub
std
inc
lahf
cmpsl
movsb
mov
daa
loope
flds
enter
pusha
jnp
and
xlat
loop
mov
inc
imul
popf
arpl
dec
xor
pop
push
add
sbb
push
inc
ljmp
push
pushf
mov
lods
stos
in
repnz
mov
cld
jno
sbb
mov
es
push
aaa
mov
adc
mov
mov
or
icebp
mov
mov
shlb
pop
in
das
xchg
add
imul
inc
pop
mov
mov
xchg
xor
pop
gs
pop
in
pcmpgtd
movsb
aaa
out
cltd
xor
mov
int3
adc
inc
or
jmp
and
imul
mov
dec
mov
cmp
jmp
xor
loope
push
aaa
mov
push
pop
aad
mov
adc
jmp
mov
push
js
or
leave
mov
push
cmpsb
push
roll
out
aam
outsb
mov
jne
or
aas
addb
push
inc
leave
cmp
rcll
inc
aam
xchg
testb
rcrl
lds
cmp
lea
fwait
mov
ljmp
and
add
xlat
repz
scas
inc
fcomi
out
fbld
xchg
or
in
lea
add
push
add
xchg
shll
push
mov
xlat
pop
aaa
pop
into
clc
cmpsb
inc
push
imul
sbbb
int3
lods
repz
mov
rcll
lock
push
out
push
and
add
mov
add
mov
or
inc
xlat
es
in
inc
stc
fldcw
push
sbb
cli
pushf
mov
dec
adc
inc
lock
cmp
push
aas
mov
jp
outsb
or
jb
xchg
sbb
push
cmp
mov
scas
jb
mov
dec
sbb
jge
cmp
jp
mov
xrelease
xchg
fwait
or
mov
and
pop
je
xchg
cmpsb
and
adc
call
imul
sbb
dec
gs
out
mov
in
or
in
aas
insl
or
adc
or
ss
mov
adc
leave
cmpsb
leave
fnstenv
and
scas
stos
mov
aad
notl
sub
cmpsl
cmp
stos
inc
les
xchg
or
jo
stc
inc
or
xor
sub
jp
lock
repnz
mov
adc
cli
xchg
ljmp
jno
jg
int
ss
shrl
leave
pop
in
insl
lds
mov
inc
fstpl
rorl
ret
test
pop
mov
add
scas
xchg
loope,pn
sub
mov
jl
ss
inc
sub
dec
int3
outsl
and
adc
call
leave
push
jmp
dec
xorl
arpl
adc
cli
mov
mov
dec
loop
mov
mov
imul
sub
mov
push
or
call
call
cltd
movsl
jp
xchg
mov
cmp
int3
lds
jbe
out
in
pop
mov
data16
iret
pop
shll
mov
cmp
fldenv
fnsave
test
mov
aad
push
imul
inc
cli
mov
jo
jnp
in
inc
testl
mov
scas
pop
dec
fnstenv
or
pop
cmpsl
fisubs
sub
lds
dec
push
mov
sahf
imul
mov
test
cmp
stc
sbb
push
int3
xlat
push
je
outsb
fwait
push
xchg
popf
cmpsl
imulb
ss
adc
pushf
stos
stc
pusha
sar
es
add
or
imul
aam
sahf
les
mov
adc
xchg
cmpl
out
pushf
mov
into
or
stc
adc
pop
idivl
adc
movb
jnp
xor
aam
jp
add
jmp
sub
aaa
es
js
mov
dec
sarb
mov
mov
or
cmp
mov
dec
sahf
push
in
iret
or
je
inc
fstp
mov
lods
sbb
cltd
mov
xor
mov
lahf
popl
xchg
pop
xlat
loopne
test
int
and
or
push
push
test
mov
adc
lahf
pop
adc
subb
filds
rcll
push
repnz
mov
mov
sbb
iret
loopne
mov
test
jne
ret
cld
pop
cmpsb
in
sub
mov
and
sbb
inc
lea
push
outsb
pop
cmp
fbld
mov
push
xor
cmp
or
rorb
loop
stos
jb
lods
dec
add
test
mov
mov
dec
pop
in
insl
jo
cmc
sub
gs
add
pop
adc
addr16
andl
pop
push
sub
inc
pop
cmp
mov
out
sbb
nop
xchg
pusha
pop
ljmp
sbb
fwait
lods
mov
shlb
xchg
call
mov
dec
push
push
cmp
outsb
shll
mov
pop
enter
leave
push
push
sbb
xchg
sub
pop
add
dec
xchg
push
int
xor
add
int
push
lock
andl
xchg
cmpsl
jecxz
adc
insl
adc
addb
jl
or
pop
mov
daa
outsb
ret
jae
mov
ss
nop
pusha
or
popf
xchg
pop
sbb
mov
sbbl
or
sahf
repnz
cmp
mulb
jg
xchg
jge
sub
into
outsl
data16
inc
ja
mov
sub
les
and
jge
xchg
mov
int3
pop
xor
retw
add
fadds
dec
fistl
mov
mov
ret
addr16
push
fldenv
scas
bound
fnstenv
pop
fwait
inc
in
add
cmpsl
data16
sbb
push
inc
mov
jp
int
xor
dec
inc
xchg
sub
sub
daa
lcall
cmp
out
rclb
mov
sub
mov
jne
sub
mov
pop
lret
xor
ss
stos
addr16
rorl
inc
dec
and
popa
js
inc
das
adcl
dec
rcl
jl
pop
loop
imul
push
lock
dec
test
sub
shr
das
lds
mov
in
lock
jne
imul
les
xor
xchg
cwtl
and
push
and
repnz
mov
jno
iret
cmp
or
jmp
into
mov
lock
sbb
sbb
clc
jg
push
or
mov
fistl
mov
pop
lcall
push
out
push
aaa
mov
sti
mov
fmull
and
movsl
sub
rcl
mov
push
xlat
enter
lds
shr
stos
es
dec
test
ds
je
lcall
ror
negl
les
call
and
push
jns
pop
inc
xor
add
aaa
es
out
jp
call
or
xrelease
test
shlb
push
adc
sub
jge
lock
dec
push
out
out
sub
sub
sbb
cltd
push
xlat
jno
mov
xor
clc
aad
gs
pushf
pop
popf
pusha
js
and
stos
push
ss
mov
xchg
sbb
gs
mov
xchg
ss
xchg
adc
add
jae
push
shrl
pop
cmp
vmwrite
xchg
imul
jbe
mov
jl
ds
cmp
imul
push
cmpsl
jns,pt
xchg
cs
lds
cltd
test
xchg
cmc
sub
xchg
ret
or
mov
cmpsb
dec
xor
flds
out
inc
xor
and
cwtl
adc
adc
jns
jno
jmp
clc
or
mov
push
js
aad
rclb
loopne
add
dec
out
shlb
popf
in
inc
popl
dec
movsb
daa
mov
fisubrs
popa
fstpt
or
aas
pop
lods
pop
lret
push
std
shl
and
mov
dec
push
aas
in
shlb
inc
inc
aaa
adc
jg
fmul
xchg
ret
sbb
es
pop
imul
sub
sub
insb
mov
rclb
push
or
mov
test
cmp
jb
movsb
and
pop
repnz
sub
and
sub
hlt
add
in
push
mov
lahf
xor
mov
repnz
roll
xor
fadds
pop
jne
sub
push
pop
cmp
jnp
inc
pop
or
lods
lahf
and
aas
mov
mov
sbb
push
adc
out
jle
leave
das
mov
adc
adc
icebp
dec
das
mov
out
pop
jbe
fildl
cmp
mov
cltd
xchg
imul
adc
cli
push
jmp
movsl
mov
dec
cli
push
repz
xorl
js
int
mul
arpl
test
adc
test
pop
pop
adc
in
jns
popf
mov
xor
jo
pop
add
lret
cld
or
sti
icebp
adc
or
out
lcall
enter
ljmp
cltd
mov
imul
clc
insl
jno
iret
dec
pop
popl
call
ljmp
cmp
arpl
sbb
push
sar
add
sbb
inc
ret
fdiv
adc
movsl
movsb
push
mov
test
sbb
int3
movsb
fbstp
push
dec
iret
xchg
out
mov
pop
pop
jno
mov
jns
dec
aad
mov
xor
cmp
clc
or
imul
test
int
pop
popa
shlb
inc
aam
fnstcw
sub
gs
pop
jne
mov
xchg
jp
fwait
pop
xchg
ret
outsb
mov
sahf
fimuls
imul
repnz
jmp
pop
flds
popa
fdivl
repnz
adc
outsl
ss
inc
fbld
loop
int
sub
pop
and
push
xchg
xor
out
sar
aaa
push
fs
adc
xor
xchg
scas
add
sbb
pop
jno
add
and
addr16
jbe
push
mov
sbb
rcll
testb
stos
pop
cmp
jl
inc
sub
cmp
and
pop
cli
mov
imul
xor
imul
cs
push
jmp
pop
sahf
jo
sti
das
shlb
inc
shl
out
cmp
popa
sbb
mov
das
adc
pop
lret
in
nop
push
data16
xchg
push
sti
dec
dec
lods
mov
pop
xor
push
pushf
repnz
mov
xor
fildll
out
and
and
sub
subb
xchg
addr16
cmp
push
fstpl
xchg
cs
outsb
test
je
sbb
xchg
xor
sub
push
mov
xchg
mov
pop
mov
les
sub
dec
xchg
in
ljmp
jb
cltd
mov
sbb
daa
or
add
mov
lds
mov
fsubrs
jp
into
sti
pop
cli
xchg
inc
mov
inc
inc
loop,pt
jne
push
cmpsl
mov
stos
fbstp
imul
ret
pusha
jnp
pop
lods
add
outsl
xchg
cmp
xchg
dec
jecxz
or
and
dec
test
add
popa
add
mov
jmp
cmp
movsb
xchg
int3
or
loop
jp
and
inc
xchg
adc
stos
xlat
cmp
insl
pop
aam
lds
shlb
sbb
sti
jnp
into
lods
sbb
subps
lods
mov
push
push
rcr
aam
add
dec
lods
outsb
jno
inc
dec
out
dec
and
dec
jns
sbb
jecxz
aaa
dec
popf
shlb
mov
imul
xchg
mov
inc
aaa
mov
xchg
repnz
and
pop
push
dec
shrb
xchg
sbb
pop
icebp
popa
mov
xor
mov
pop
inc
cmp
fs
push
push
add
sarl
xchg
cld
mov
into
in
jp
stc
sub
cmp
ljmp
mull
enter
test
sbb
xchg
loopne
shr
mov
pop
test
pop
outsb
and
push
jl
mov
test
ss
insl
call
daa
pop
ja
inc
test
decb
movsb
push
cs
fists
cwtl
mov
nop
ljmp
inc
sti
push
std
mov
mov
pop
stc
cmpsb
test
push
adc
mov
jg
cli
mov
or
push
adc
and
pop
and
cld
daa
mov
lods
push
inc
adc
xor
test
loope
addr16
push
add
movsl
mov
adc
jle
js
hlt
xchg
bound
inc
mov
sub
adc
inc
lods
pop
xor
sbb
test
dec
movsb
mov
dec
imul
sbbb
pop
movsl
mov
adc
jecxz
pop
stos
inc
xchg
inc
js
call
test
popa
mov
mov
cwtl
arpl
imul
aaa
push
jmp
or
xor
sbb
jns
sbb
push
jl
xor
sub
gs
dec
lret
repnz
andl
xchg
adcb
sub
xor
add
cmp
adc
loop
mov
leave
aas
test
cld
sahf
xchg
mov
pop
shll
aam
and
xchg
adcb
movsl
pop
out
push
andb
xor
xchg
xor
fisubl
cwtl
call
xor
mov
loopne
inc
loopne
aas
add
jbe
push
and
xor
xor
out
mov
jg
cmp
mov
cmp
jne
adc
cmpsl
pushf
pop
add
pusha
notl
testb
xor
xchg
lret
iretw
call
inc
sbb
iret
aas
xchg
sub
mov
jbe
hlt
xchg
sbb
adc
sbb
fwait
xor
decl
std
test
or
jecxz
movsb
dec
cmpsl
fdivs
or
sub
push
gs
cmpsl
cltd
mov
inc
int3
mov
imul
popf
ja
and
lret
push
mov
popa
jecxz
or
lahf
mov
daa
add
xchg
or
dec
repnz
adc
enter
dec
jae
das
pushf
lret
mov
inc
mov
and
call
insb
fs
cmp
push
pop
in
push
aas
cmp
aaa
lods
gs
gs
xchg
xor
cmp
add
stos
fiaddl
pop
cmp
push
bound
das
aad
xchg
lods
jp
shlb
mov
stc
es
fmulp
mov
addr16
sarl
stos
sahf
or
fbstp
jmp
sub
sbb
lret
cmp
sub
out
mov
dec
mov
aam
push
push
flds
icebp
cli
fdivl
mov
pop
mov
rol
pop
les
mov
in
xchg
push
cwtl
inc
sbb
loop
insb
adc
push
push
or
lds
aas
dec
pop
cmp
xchg
inc
pop
movsb
rclb
sbb
movsb
sub
leave
inc
sub
ret
int3
push
imul
in
add
shrl
or
cmpsb
sub
xor
mov
loop
cmp
inc
mov
fbstp
stos
push
pop
sbb
fstpt
sub
repz
leave
mov
mov
xchg
and
jmp
nop
xor
pop
mov
mov
ljmp
es
or
or
sub
rcl
movsl
je
cmp
inc
outsl
int3
add
ljmp
mov
pop
xor
xchg
test
xchg
movsl
loop
roll
repz
les
ret
xchg
pop
or
and
into
leave
jno
cmp
aaa
jle
fdivs
jo
add
ficomps
mov
adc
int3
out
fidivrs
lcall
subl
fildl
pop
or
call
adc
add
fidivs
pop
outsb
xor
or
push
sbb
jb
pop
lahf
sbb
lret
adc
pushf
lea
insl
lcall
mov
cwtl
jp
xorb
outsb
xchg
es
jp
sbb
mov
in
jle
outsl
insl
push
push
xchg
mov
mov
adc
push
andb
loopne
popa
pop
push
out
xchg
xchg
arpl
jns
cmc
and
loop
add
jns
mov
dec
cld
mov
lods
pop
popf
fstpt
dec
loopne
xchg
pop
jmp
fldt
jno
sbbb
pop
cmpsl
sbb
pop
push
push
mov
mov
neg
out
mov
inc
sub
cld
push
sbb
ljmp
cmp
out
adc
in
sarb
int3
psubb
jae
and
cld
xchg
stos
sub
jp
xchg
push
cmpsb
add
mov
inc
adc
fnsave
pop
jle
loope
adc
add
scas
cmpsl
adc
sbb
sbb
into
lahf
mov
mov
sub
xor
in
fs
mov
fnsave
mov
push
and
dec
inc
stos
icebp
loop
mov
and
cmovle
jecxz
aam
inc
add
je
ret
and
cwtl
repz
cmp
mov
jg
ja
jg
pop
sub
outsb
fidivrl
call
add
mov
in
bnd
daa
ficomps
xchg
push
pop
sbb
sti
push
xchg
inc
inc
add
sbb
orl
sub
sub
dec
mov
sub
insb
roll
lods
mov
mov
push
lock
std
add
fs
pop
xchg
mov
in
lcall
arpl
shrl
sarl
insb
pop
scas
push
push
adc
test
imul
xchg
lock
mov
sub
push
aad
or
arpl
jnp
popf
cmc
out
mov
xchg
push
hlt
sbb
jle
cmc
cli
jne
or
adc
jmp
fistpl
cld
bound
popa
inc
stos
xchg
cmp
xchg
cmpsl
fwait
sbbl
adcl
jmp
inc
add
call
cli
jno
dec
jae
mov
mov
cmp
arpl
inc
popf
jecxz
mov
fiaddl
xchg
pop
ja
int
xchg
jle
mov
jnp
cmpsb
loope
rcll
xchg
and
or
cmp
loope
in
xsha256
cmpsb
xchg
add
leave
sbb
ja
dec
add
rorl
scas
adcb
dec
stos
jmp
adc
sub
js
andb
lods
xchg
insb
mov
icebp
rep
out
insb
scas
jae
add
push
outsb
cmp
mov
js
rcll
xor
add
push
dec
mov
outsb
jecxz
flds
sbb
pop
xchg
dec
mov
push
aas
cmp
dec
adc
cmc
inc
dec
mov
pushf
scas
shll
jmp
les
adc
add
pop
xor
adc
add
cs
rol
jo
dec
repz
pop
xor
sbb
dec
xor
lea
lods
outsb
jp
movsl
jg
mov
xchg
sti
outsl
negb
aas
jle
jecxz
xchg
add
lods
xchg
xchg
cld
or
loope
mov
push
out
loopne
xchg
cmpsb
push
cmp
ja
enter
adc
loope
stos
lds
xchg
loopne
mov
push
push
jmp
mov
stc
push
inc
xchg
pop
cld
in
mov
or
mov
ds
cmp
mov
je
in
cmpsb
test
shll
inc
or
push
inc
jecxz
out
xor
xor
out
cld
icebp
arpl
adc
lahf
rcl
xlat
inc
test
push
xlat
test
dec
ljmp
outsb
push
push
pop
call
xor
push
mov
js
ret
imul
jno
push
mov
mov
std
cs
xor
int
fwait
mov
lods
movsb
inc
jmp
ds
add
inc
lcall
in
jle
mov
jb
sub
mov
pop
jo
in
scas
fimull
xchg
lods
sahf
push
jecxz
call
sbb
das
push
pop
orb
test
lret
movd
sub
insb
inc
scas
cmp
rcr
iret
int
lods
jmp
lds
popf
movsl
or
pop
cli
pushf
test
ja
inc
xchg
movsb
test
push
cmp
dec
es
mov
ror
cmp
and
orb
hlt
divl
pop
sub
mov
pop
fistl
xor
movaps
jl
pop
add
lahf
arpl
loop,pt
jne
mov
repz
pushl
push
mov
js
jmp
outsb
imul
int
cmp
dec
lods
mov
popl
xchg
stc
xor
sbb
sub
scas
mov
das
adc
lds
pop
sub
pop
inc
bswap
in
jns
push
sbb
test
adc
call
mov
stos
daa
and
jge
fmuls
pop
xor
or
stos
sub
and
ja
ds
out
test
adc
lahf
out
icebp
popf
push
cld
cltd
shld
mov
clc
push
lea
mov
ja
and
adcl
dec
lock
nop
pop
leave
stos
mov
jmp
mov
sub
dec
shrl
or
xor
lcall
sbb
sub
cs
cwtl
and
ret
out
sub
add
push
mov
movsl
push
sbb
cmp
sub
fwait
incb
insl
js
adc
mov
inc
pop
cmp
daa
sub
scas
pusha
or
push
sub
adc
ret
loopne
cmpsl
or
xchg
and
dec
pop
inc
add
shlb
dec
sub
loopne
adc
push
cmp
lret
sbb
fsubrl
xchg
push
ja
mov
xlat
es
sbb
mov
std
push
js
fucomi
loopne
sti
inc
aaa
in
mov
fstpt
dec
inc
cmp
decl
aad
lahf
and
push
je
fwait
xor
lea
cmp
jae
test
jae
cmp
mov
jb
mov
test
rcrb
mov
scas
pusha
ja
inc
fnstenv
pop
pusha
testl
mov
sbb
xlat
in
jle
lcall
loopnew
nop
rclb
jge
cmpsb
xchg
mov
imul
daa
leave
outsb
mov
cmp
jmp
clc
sbb
fdivl
sub
int
rcll
lods
dec
add
outsb
sub
outsl
xchg
and
int3
mov
out
xor
inc
push
cmp
popf
jne
push
or
inc
push
out
dec
add
int
ss
mov
sahf
or
jns
xchg
mov
es
or
cld
mov
in
mov
mov
cmp
push
jnp
xchg
iret
pusha
int3
cmp
repz
pop
or
scas
mov
cmp
jb
pop
movsb
ret
or
jns
pop
fbstp
loope
iret
and
cwtl
stos
mov
gs
mov
inc
or
push
inc
pop
cli
popf
jl
push
lret
jne
imul
push
mov
mov
add
fstpt
cltd
in
xchg
xor
outsl
inc
lret
xor
scas
test
pop
pop
ds
in
cmp
sbbb
push
sar
and
pop
rcrl
repnz
dec
jns
loop
sub
mov
mov
xchg
push
pop
pushf
cld
fwait
out
cli
sbb
cmpsb
dec
arpl
arpl
jg
dec
or
pop
cli
xchg
pop
dec
adc
in
testb
adc
stc
test
inc
sbbl
in
mov
xchg
pop
pop
loop
insb
rcll
in
out
push
mov
mov
xor
or
xor
data16
movsb
enter
or
in
movl
xchg
in
call
cmp
loope
outsl
outsb
add
stos
lcall
stos
push
data16
adc
js
movsl
cmp
jl
mov
adc
adc
pop
dec
lock
addb
insb
sub
rcr
cmp
jle
cmc
inc
cwtl
cmp
add
adc
and
je
mov
xchg
cmpsl
mov
iret
and
inc
pop
repz
out
shlb
adc
mov
jae
adcb
repnz
xor
fstpt
loopne
sbb
cmp
stc
cmp
sti
xchg
dec
iret
ljmp
jno
cmp
add
pushf
test
out
add
mov
inc
jnp
cmp
dec
imul
xchg
xlat
jo
inc
push
clc
push
cmc
sbb
sarb
cmp
add
dec
repnz
push
and
les
cmc
movsb
mov
and
out
ret
insl
push
cmp
insb
add
testb
icebp
xor
test
add
mov
mov
jl
insl
aam
jns
iret
mov
loope
push
add
into
jbe
outsl
js
sbb
mov
sbb
jo
mov
ja
cmp
sbbb
cmp
cmp
xchg
pusha
test
mov
xchg
fiaddl
sbb
mov
adc
add
sbb
jg
mov
cmp
mov
mov
lea
movsl
jns
sub
sub
js
jbe
or
xchg
sbb
pop
dec
adc
dec
jb
adc
fldenv
cmp
cli
loop
jmp
jg
gs
jl
test
inc
das
iret
mov
stos
inc
pop
lock
scas
xor
pop
mov
and
jge
or
mov
push
mov
push
ja
push
andl
lock
sbb
les
inc
fidivrl
sahf
xor
xor
lea
subb
lcall
scas
xor
cmpsl
lods
stc
ss
divb
xor
push
dec
xchg
fisubl
loopne
lcall
sbb
icebp
or
decb
imul
cmc
inc
mov
adc
fsts
push
jecxz
sbb
sti
mov
icebp
insl
mov
xchg
add
pop
mov
scas
fildl
cmpsl
cmpb
faddl
stos
test
and
mov
or
or
and
jae
stos
sub
mov
int3
lahf
xchg
adcl
inc
sbb
repz
lcall
and
outsb
dec
in
fwait
dec
fstps
in
into
aad
cmp
adc
test
push
pop
pop
add
cmp
jmp
xorl
clc
out
aad
es
pop
mov
jmp
out
xchg
fwait
xor
pop
mov
mov
sbb
out
push
push
ljmp
xor
mov
add
push
testl
add
je
pushf
mov
and
mov
rep
xchg
test
fcoml
push
je
int
push
loope
jmp
pop
dec
stc
xchg
clc
mov
movsb
ja
jb
mov
cwtl
shl
leave
sub
push
mov
ds
mov
loopne
xor
test
sahf
pop
loope
call
lahf
popf
repnz
jmp
iret
xchg
pop
enter
adc
or
xchg
jmp
fisttps
sbb
jne
xor
iret
loop
shll
dec
cld
lret
mov
sbb
fwait
push
int3
jp
push
jo
aad
dec
sbb
orb
dec
push
popf
or
add
or
dec
test
aam
test
mov
cmp
outsb
mov
in
stos
nop
add
push
out
mov
pop
add
das
sub
std
outsb
mov
mov
imul
adc
aam
loop
push
subb
arpl
mov
pop
fbld
int3
neg
jmp
dec
dec
add
lods
inc
mov
mov
test
inc
cwtl
inc
or
sub
and
push
mov
jg
sahf
adc
and
lret
push
inc
lods
int3
in
mov
nop
cmp
pusha
or
jle
push
pop
push
inc
test
int3
orb
push
addl
mov
dec
or
cmpsb
sarl
pop
sub
iret
shlb
imul
jecxz
add
mov
ljmp
pop
xchg
repz
jns
cld
sarl
push
fs
shll
jnp
xor
push
or
enter
dec
stos
inc
push
sub
rcr
lock
and
pop
jb
lret
imul
lahf
mov
jbe
outsb
loope
and
xchg
shrb
sub
add
stos
push
sub
pop
aas
sub
test
test
outsl
aad
add
mov
push
inc
xor
pop
hlt
es
dec
filds
gs
arpl
mov
inc
imul
pop
or
ds
push
jmp
xchg
mov
xchg
lret
shrl
jle
xchg
push
ret
mov
or
or
test
test
imul
or
push
lea
push
lret
cld
jg
sub
les
mov
test
mov
add
and
call
sub
shll
enter
push
fnstenvs
out
jne
jl
dec
xor
je
stc
or
fs
xchg
xchg
xor
mov
adc
pop
clc
addr16
std
or
xlat
out
add
xor
lret
mov
call
cmp
leave
nop
aam
shrl
dec
push
sub
fwait
pusha
sub
in
mov
adc
cld
mov
jae
fldt
rorb
cmp
pop
mov
sbb
hlt
mov
fucomp
mov
pop
jno
push
pushf
ljmp
dec
ja
mov
outsb
inc
pop
push
cmp
add
mov
pop
nop
jg
add
ja
fcoml
sbb
sub
cwtl
push
shlb
sbb
sbb
xchg
into
das
lret
in
rcrb
ret
call
repz
inc
jmp
mov
scas
xchg
mov
xchg
jns
sub
pop
sbb
cmp
dec
les
stos
leave
int
imul
inc
and
jne
insl
mov
enter
out
pop
pop
push
scas
mov
or
arpl
mov
aad
push
enter
js
ret
andl
dec
pop
xchg
cs
push
pop
mov
and
lret
cwtl
pop
lret
xchg
imul
mov
outsl
lds
out
loop
lahf
pop
jg
shl
pop
fadd
js
ss
pop
out
inc
mov
int
and
push
xchg
or
fwait
cmpsl
mov
jne
shrb
or
mov
pop
cmc
dec
xor
inc
sub
stos
popa
xchg
add
in
mul
addr16
shll
stc
icebp
push
es
push
ret
jge
or
cmp
mov
push
cmp
insb
sbb
test
mov
push
in
movsl
cmp
je
xchg
sbb
dec
mov
pop
and
int3
bound
or
adc
dec
sub
mov
negb
jb
sbb
jae
mov
mov
mov
cmp
loope
sbb
xor
xchg
pop
js
adc
rolb
sbb
adc
movsb
lcall
je
lahf
stos
mov
popa
call
push
cs
push
jb
lea
mov
insb
add
repz
outsb
sbb
jge
or
idivb
inc
jmp
add
lret
ffreep
dec
fwait
and
fstl
in
ds
aad
js
inc
mov
lret
shlb
sub
aas
or
dec
in
pop
pop
cmp
ss
xchg
and
jp
sbb
mov
and
pop
xchg
dec
mov
mov
jnp
stos
stos
into
jnp
add
es
repnz
pop
xor
shl
clc
jo
call
lods
stc
inc
push
insl
add
or
mov
or
lcall
dec
mov
pop
pop
push
xchg
sub
sarb
incl
loop
inc
cpuid
aaa
xchg
bound
fcmovbe
xchg
sub
out
fbld
jo
inc
pop
outsb
adc
dec
movsl
hlt
std
stos
jb
pop
adc
inc
jle
and
loope
gs
jmp
xor
cwtl
mov
mulb
jge
cltd
sub
xchg
imul
sbb
das
mov
fwait
sti
lea
test
lret
cld
clc
xor
in
add
mov
dec
fistpll
push
push
sub
das
xor
pop
sarb
ss
faddl
adc
mov
shlb
sbb
inc
popf
ss
iret
and
shrl
loope
jns
jp
call
pusha
jno
pop
mov
dec
loope
jnp
pop
repz
outsl
push
add
jno
lret
sahf
xor
scas
ljmp
adc
pop
in
and
ja
test
xor
pushf
fs
xchg
push
movsb
cmc
lea
sbb
mov
adc
mov
and
and
xchg
lods
dec
xchg
arpl
xchg
jmp
mov
and
decb
and
lea
pop
scas
sub
add
test
js
mov
je
add
sub
or
and
dec
in
out
addr16
xchg
imul
mov
inc
fidivrl
lahf
cmp
popa
clc
adc
fs
cmp
scas
insl
enter
ret
pop
clc
add
loop
mov
pop
mov
xchg
dec
pop
sbb
cmp
pop
add
call
bound
xor
jno
addb
push
push
and
mov
adc
fnstsw
into
insb
pop
mov
mov
sti
in
cmp
mov
adc
dec
xor
mov
and
or
mov
loope
faddl
int
jo
mov
lock
jle
cmpsb
lahf
gs
jge
sub
mov
mul
cmp
dec
jp
ret
cmpsb
mov
in
movsl
jge
loope
xchg
mov
in
outsb
das
push
push
sbb
sub
mov
fdiv
mov
sarb
mov
jb
aam
push
xor
jp
repz
pop
pop
push
aam
ja
xor
and
dec
xor
ja
mov
inc
dec
rcrb
addr16
mov
sbb
pop
jo
clc
inc
arpl
jno
cmp
test
xchg
popf
out
pop
call
pop
stos
xchg
cmp
ret
or
out
cmp
popf
mov
or
mov
jge
push
adc
mov
es
add
lods
add
pop
fstpt
loope
xor
and
sahf
dec
lods
mov
jg
mov
out
aad
pop
mov
stc
popf
loop
stos
dec
xchg
xor
das
adc
mov
pop
popf
add
add
fisubl
sbb
lret
mov
test
dec
sahf
mov
dec
fcomps
push
movl
mov
push
push
and
inc
pop
jp
rolb
fnstcw
lcall
inc
int
mov
jb
push
testl
addr16
int
pop
arpl
mov
xchg
int
xchg
sbb
xor
ds
push
popa
cmp
push
inc
loope
dec
shrl
orb
lret
xor
mov
popf
sarl
popa
xchg
push
imul
scas
pop
cmpsl
aam
pop
mov
fistpl
fwait
adc
ja
push
mov
sbb
pop
mov
leave
jo
or
xor
mov
sbb
pop
add
xor
mov
pop
pop
add
jne
lcall
aam
jbe
jecxz
in
pop
cmpsl
nop
lea
fisubrl
insb
daa
mov
jecxz
mov
out
sahf
aaa
into
rolb
data16
test
jbe
mov
mov
das
push
dec
jo
cmpsl
out
xchg
int
cmpl
clc
cmpsb
push
in
addl
jge
and
push
stos
nop
dec
in
rcrl
and
xchg
cli
inc
dec
fistl
fnsave
pop
xchg
jle
scas
jp
and
iret
clc
cmpsb
inc
fadds
and
test
mov
ret
jmp
or
push
jle
push
push
inc
lahf
lcall
insl
mov
xchg
lahf
sbb
cli
ljmp
js
cld
pop
adc
movsl
sub
jmp
jb
jnp
mov
cs
daa
inc
mov
outsb
mov
sub
pop
fldenv
daa
pop
daa
sbb
fisubrs
loopne
xchg
push
or
mov
ror
add
and
cltd
es
mov
fildll
fwait
cmc
xchg
fldl
sahf
aad
xor
push
cltd
test
pop
aas
gs
daa
cmp
push
neg
xchg
dec
cltd
lea
mov
adc
mov
in
add
stc
xor
xor
xchg
sub
mov
push
inc
fnstsw
lods
hlt
lahf
fbld
add
jle
addr16
std
leave
xchg
sbb
and
sti
stos
xor
stos
or
dec
stos
cmpsb
xchg
pop
daa
clc
sub
mov
jo
outsb
outsl
aam
fwait
or
sub
es
sbb
jae
cmp
dec
shll
fcmovu
jmp
cli
push
sub
jne
rcl
xor
sahf
xchg
fidivrs
lock
push
adc
adc
or
add
add
cmp
xchg
leave
mov
aas
pop
mov
test
cmp
dec
add
fsubrs
sbb
or
data16
mov
lea
pop
out
pop
mov
jbe
lods
or
jmp
movsl
enter
es
jmp
inc
push
or
fmulp
adc
sub
call
push
les
cmp
push
ja
sbb
pop
push
cmp
cs
out
jmp
out
mov
inc
cmpsl
inc
xchg
iret
mov
add
aaa
push
jns
ret
ret
sti
push
inc
movsl
adc
fdivs
push
jb
cmp
orl
inc
sbb
mov
inc
aas
popa
imul
xchg
sbb
cwtl
call
xchg
icebp
mov
dec
xchg
pop
xchg
mov
mov
fidivl
sbb
incl
scas
out
imulb
out
dec
fcomi
cmp
mov
push
and
out
push
fldcw
mov
fimuls
call
and
dec
leave
in
adc
sbbl
adc
out
outsb
push
pop
dec
cmpsl
ret
jp
shll
mov
ret
pop
inc
dec
scas
std
fwait
pusha
aad
lds
test
and
ds
mov
add
pop
orl
mov
popa
xorl
shlb
pusha
cmp
inc
push
rcrb
test
cli
xchg
pop
mov
inc
cmp
jg
mov
pusha
cltd
sbb
xlat
sbb
imul
loop
arpl
or
rclb
xor
inc
pusha
addr16
popa
add
sbb
mov
ret
inc
fdivrs
icebp
nop
push
adc
push
mov
ss
xchg
jp
mov
jl
mov
pop
or
into
cltd
les
sub
add
ja
and
roll
jecxz
outsb
adc
mov
mov
xor
call
outsb
mov
dec
cmc
pop
les
mov
or
push
outsl
dec
in
enter
stos
xchg
stc
lcall
push
int
pop
js
fsubs
movsb
dec
sub
scas
shlb
rclb
cli
sbb
cmp
gs
lods
sbb
mov
adc
ja
ror
out
pcmpgtd
mov
adc
jle
dec
popa
dec
lret
out
pop
sbb
nop
and
jmp
inc
cmp
xchg
es
cmpl
out
jge
sbb
clc
imul
xor
cmp
cmp
push
icebp
add
cmp
test
jbe
stos
xchg
lods
mov
lds
jmp
mov
jle
mov
add
cli
mov
xchg
dec
push
mov
data16
jmp
xlat
and
fwait
add
jb
mov
cmpsb
repz
xchg
jecxz
jne
xor
jb
aaa
pusha
pop
jge
das
out
sti
es
and
adc
pop
es
mov
pusha
cmp
fwait
sub
mul
cs
test
mov
mov
negb
add
sub
push
sbb
inc
fld1
xor
cld
adc
ret
or
sub
dec
iret
push
sub
inc
inc
fstl
mov
inc
sbb
rcl
xchg
mov
mov
or
clc
jbe
lcall
jbe
mov
hlt
fwait
cmp
cmpsl
inc
test
add
xor
inc
and
pop
cld
lcall
in
rorl
inc
sbb
pop
test
push
jecxz
pop
adc
mov
jg
loope
repz
mov
daa
je
mov
add
or
lea
jg
mov
jl
pop
sub
mov
xor
ret
in
jns
sbb
ds
test
push
in
int
jge
adc
mov
dec
loopne
notb
lock
arpl
stos
push
inc
or
adcl
cmpsl
lods
mov
xchg
xchg
fnstenv
fcomps
call
movsl
jg
jecxz
pop
fldt
xchg
mov
hlt
and
imul
mov
scas
add
xchg
push
cli
pushf
nop
test
mov
nop
ljmp
stc
inc
lahf
mov
rolb
sbb
jbe
jnp
mov
fadd
pop
push
test
inc
and
mov
adc
mov
lds
loop
pop
xor
fsubs
xchg
dec
icebp
test
xor
jnp
and
rolb
jge
push
xlat
or
mov
push
je
fsubs
pop
jl
and
and
leave
sub
or
outsb
push
out
pop
int
jmp
in
fsubl
mov
stos
jecxz
in
jb
leave
or
ret
stc
clc
popf
xor
sub
pop
subb
popa
xchg
push
mov
cld
inc
cltd
and
dec
out
repz
xor
sbb
rolb
jg
int
call
rcll
jle
pop
xor
xchg
mov
cltd
adc
dec
adc
iret
je
jge
jo
rcrl
jno
es
lret
xor
push
and
xchg
inc
sbb
dec
jb
stos
lods
nop
sbb
loope
sahf
xchg
xor
push
mov
sbb
repz
sbb
es
mov
jge
inc
inc
fstpl
mov
xor
rorl
push
lea
pop
imul
xor
and
mov
pusha
lock
pop
je
adc
test
cmp
test
push
sub
adc
sbb
addb
cmp
test
cmp
adc
imul
shlb
jno
lods
inc
inc
adc
popf
aad
jne
cwtl
or
mov
lock
ds
xor
repnz
sbb
and
jle
adc
inc
mov
inc
lods
out
push
xor
cmp
mov
and
cmc
movsb
js
aam
data16
xchg
fdivl
sub
loop
gs
xchg
mov
jno
lea
in
add
sbb
jb
and
mov
stc
jnp
leave
mov
stc
loopne
gs
inc
add
cld
clc
aam
sbb
mov
inc
scas
mov
or
xchg
cs
sub
out
xchg
out
and
inc
ja
and
sti
push
aam
adcl
stos
test
jb
repnz
mov
xlat
push
shl
incb
mov
andl
test
lcall
ljmp
mov
jge
cmp
ljmp
insb
stc
out
ret
mov
aad
cli
mov
fs
or
adc
xchg
loope
or
xchg
push
inc
push
scas
jecxz
popa
mov
sub
sbb
loop
xor
mov
push
leave
xchg
or
std
gs
fsubl
xchg
sbb
cli
mov
adcb
rcrb
loop
iret
adc
dec
dec
pop
mov
mov
arpl
push
call
mov
sub
leave
xchg
cmpsb
repz
das
jno
in
pusha
repnz
in
pop
ds
adc
gs
pop
mov
jge
cmp
sbb
sbb
jbe
int3
ss
push
outsb
jp
mov
fwait
and
and
insl
pop
shll
mov
dec
ret
negb
cmp
idivb
fildll
dec
sbb
hlt
notb
movsl
xor
jge
hlt
or
loopne
int
jle
jmp
aam
inc
jl
add
out
push
sbbb
add
jge
movsb
xchg
lcall
pop
inc
push
divb
addr16
add
ret
test
sahf
sub
xor
dec
frstor
xor
lret
call
adc
xor
lds
and
icebp
ljmp
ret
das
ss
nop
pop
jo
cmp
push
out
pop
repnz
ret
hlt
xor
xchg
adc
jle
push
push
adc
in
pop
adc
sbb
push
xor
adcl
push
test
arpl
test
je
dec
stos
adc
xor
movsb
jbe
repz
push
cmp
jo
dec
iret
mov
cmpsl
jb
sbb
lea
cmp
int
inc
stos
xchg
fcoml
mov
sub
fwait
mov
in
push
mov
sbb
hlt
and
lea
pushf
jns
fnstenv
pop
push
sub
aaa
jno
movsl
mov
andb
out
lret
mov
inc
fnstcw
pop
loop
pop
pusha
and
mov
mov
add
adc
xchg
in
arpl
sub
roll
lods
js
stc
fcmovbe
inc
mov
std
call
mov
aad
pop
xor
pop
popf
imul
addr16
ret
fsubr
mov
aaa
loope
jnp
sub
stc
sub
jmp
pop
fisttpll
icebp
imul
or
lahf
xchg
add
icebp
shl
sti
pop
add
loop
enter
pop
push
pop
mov
inc
lds
or
sub
icebp
popf
adc
stc
mov
out
fwait
and
push
nop
mov
stos
xor
push
cmp
adc
ss
lahf
and
mov
hlt
sbb
mov
inc
lahf
add
int
std
pop
imulb
push
dec
lahf
mov
push
into
jae
dec
push
inc
es
mov
mov
xor
lret
sti
mov
mov
mov
jg
out
aaa
rcl
in
dec
fwait
mov
jne
xor
mov
jmp
les
xlat
aaa
into
and
into
fcompl
xor
std
lock
mov
pushf
mov
jmp
pushf
xlat
repnz
cmp
data16
arpl
stos
in
and
lods
dec
hlt
ds
cmp
into
test
ds
hlt
stos
inc
add
aas
cmp
das
push
cmp
loopne
mov
adc
ja
in
and
ret
push
in
pop
xacquire
and
xchg
pop
clc
inc
or
repz
sub
mov
sti
pop
mov
lret
js
lods
out
cmp
xor
mov
adc
jge
mov
out
cli
xor
or
imul
mov
insb
into
gs
mov
jne
test
cs
daa
fwait
add
lea
ja
push
insb
imul
enter
mov
pop
push
imulb
adc
jmp
add
xor
mov
jle
cltd
sub
xor
push
jno
aas
sub
pushf
aad
clc
sub
xchg
cmp
es
insb
fwait
sub
dec
push
sbb
cmpb
inc
lret
dec
imulb
ss
pop
add
cmp
addr16
loopne
cltd
xlat
nop
jmp
or
jl
fs
push
sbbl
dec
sub
push
mov
sahf
add
ljmp
jbe
in
add
adc
bound
aaa
fidivrl
int
rcrl
call
cmc
dec
leave
jp
call
cmp
xchg
test
mov
or
popf
pop
nop
outsb
dec
clc
sahf
jmp
test
rorl
cmc
inc
add
jns
pop
jl
and
cld
xchg
push
cs
ret
in
mov
pop
loop
sbbl
in
addr16
pop
es
pop
hlt
xchg
in
pusha
ds
ret
daa
mov
pop
cmpsb
stc
xchg
add
mov
sbbb
dec
int
out
mov
js
fmull
mov
call
pop
int
mov
jnp
or
lods
add
in
and
icebp
inc
cli
cmpsb
sahf
mov
ror
xor
cmp
aas
xchg
mov
or
insb
scas
sbbb
cmc
dec
iret
orb
mov
out
sbb
mov
mov
mov
jns
cmp
ret
lock
inc
xchg
sub
xor
mov
fcoms
dec
or
fnstenv
ss
jo
mov
fwait
jmp
jl
xlat
or
mov
not
sub
pop
mov
dec
inc
pushf
mul
sbb
aad
pop
adc
addb
stc
rcr
imul
add
movsl
not
popa
jg
repz
dec
pop
sbb
pop
dec
imul
and
push
lock
cld
pusha
mov
mov
adc
mov
div
mov
xchg
add
cld
push
loopne
sub
mov
mov
jmp
test
repnz
inc
mov
loopne
mulb
mov
dec
loop
push
out
xor
imul
xor
imul
pop
out
add
push
pop
enter
mov
lds
movsl
mov
enter
mov
jecxz
dec
dec
push
cmp
mov
lret
leave
fwait
aam
imul
xor
add
clc
dec
insl
or
jae
push
cli
stos
cmpl
mov
lret
pop
sbb
aaa
fdivrp
jnp
fisubrl
aaa
xchg
fldl
shlb
inc
dec
loop
inc
adc
cwtl
loop
repnz
int
jecxz
lea
cmp
and
mov
and
mov
mov
lret
cmpsl
in
pusha
std
jmp
sar
imul
imul
ja
subl
test
iret
sub
ja
and
mov
fistps
push
jecxz
addr16
stos
mov
cld
inc
outsb
sbb
inc
cmp
lcall
sbb
stos
imul
call
shlb
adc
xchg
xor
movsb
mov
jecxz
or
mov
mov
xor
loopne
bound
pushf
shll
push
xchg
dec
push
push
in
mov
dec
jb
sub
stc
jno
fs
leave
and
cmc
xchg
xor
stos
cli
or
dec
int3
mov
fbld
jmp
ds
fsts
cmpsb
or
pop
ss
punpckhbw
out
jno
ds
sbb
lods
xchg
clc
xlat
jp
mov
jg
cmp
test
mov
jg
stos
sbb
sarl
pop
sub
insb
stos
rcrl
aam
inc
repz
sub
sbbl
shlb
pop
pop
sti
ret
sbb
mov
add
xor
lods
add
stc
mov
dec
jo
aas
sub
xchg
cmpsb
shrl
mov
push
jmp
pop
jb
jmp
xchg
ljmp
insb
jno
push
sahf
stos
loopne
and
shlb
and
mov
or
sub
push
sub
in
loop
fsub
xchg
rorb
mov
mov
into
testb
xchg
sti
cmpl
shl
pop
es
test
cs
jae
movsb
sti
pop
outsb
and
pop
out
jmp
pop
fnsave
push
fwait
push
insb
enter
or
jne
jle
push
and
lds
out
std
mov
out
push
aaa
cmp
push
lret
jne
stos
movsb
cmp
loopne
sti
jmpw
in
dec
xchg
adc
cmp
lods
or
sub
addb
jbe
movsb
cmp
lret
out
push
icebp
xchg
ljmp
dec
xchg
popf
lods
loop
mov
cmpb
mov
xchg
jle
jecxz
test
sub
std
addl
daa
dec
idivb
inc
scas
cmpsb
pop
cmp
xor
cs
pop
test
sahf
mov
addr16
jo
add
mov
popf
and
jne
aaa
adc
lea
mov
ds
nop
out
jo
fcmove
popa
outsb
cmc
mov
sub
fdiv
mov
das
jo
and
aad
push
adc
ret
or
out
out
or
and
dec
pop
jbe
sahf
cmpsl
jg
push
mov
mov
inc
push
imul
cli
pusha
sti
test
popl
inc
jo
ss
fnsave
popa
jnp
xchg
fs
push
push
aas
cltd
dec
cmp
mov
dec
push
je
pop
daa
addl
mov
lods
fwait
femms
cmpsb
js
shl
lcall
jno
shlb
xchg
js
aaa
xchg
jae
inc
pop
xchg
pop
aad
rorl
cmpsb
jmp
sub
jl
jg
cmp
mov
jecxz
push
int3
lret
mov
mov
sbb
js
push
mov
testl
cmpsb
jns
sub
mov
dec
xchg
xor
cmp
pop
or
fistps
bound
cmp
fnstsw
push
adc
xor
cmp
cltd
test
ss
mov
mov
cltd
xor
fidivl
push
dec
cmp
stos
cmpsl
out
test
and
arpl
xchg
das
ficompl
jecxz
arpl
mov
out
xchg
shrl
xchg
sti
or
loop
loopne
and
data16
xchg
mov
ds
push
in
fists
jae
sbb
mov
rclb
cmpsl
std
daa
stc
adc
leave
cs
subb
enter
cmc
mov
mov
xor
adc
aam
dec
fucomp
ss
addr16
pop
mov
loop
pop
repnz
push
scas
pop
addb
mov
xor
xchg
push
into
and
xchg
out
arpl
call
pop
mov
sub
sub
push
or
xor
out
push
sbbb
sub
pop
leave
jbe
cli
addb
xchg
push
popf
cmpsl
lds
xorl
lret
pop
ficoms
jbe
in
stc
add
xchg
rcl
das
popa
adc
cmp
insl
gs
lcall
scas
or
repz
shr
dec
xchg
xabort
ljmp
inc
call
mov
scas
push
mov
ljmp
rcll
bnd
add
push
xchg
in
add
push
or
scas
jne
push
gs
mov
aas
mov
mov
enter
leave
adc
icebp
and
aam
mov
mov
sbb
sub
pop
mov
inc
in
pusha
aaa
pushf
cmp
shl
mov
scas
adc
xorl
or
dec
jnp
js
decl
xchg
pop
xor
mov
fcmovne
into
sti
repnz
jmp
scas
fcomi
int3
and
xchg
leave
and
inc
push
out
xlat
stos
cmpsb
sub
outsl
push
mov
sbb
js
inc
stos
mov
pop
push
pushf
roll
push
mov
jb
sub
xchg
jo
shll
pop
pop
jae
sbb
pop
dec
lret
fdivp
jge
jecxz
sbb
or
or
inc
xchg
aas
pop
sub
and
cmp
inc
cmp
jae
jno
lods
push
out
sahf
mov
jg
mov
mov
daa
mov
xchg
inc
pusha
sub
das
lds
in
lea
push
insl
xchg
cmp
shrb
mov
and
add
adcl
stos
jno
xor
les
xchg
in
dec
lods
xor
ss
iret
cmp
js
mov
jl
adc
xor
imul
ret
push
jecxz
jo
dec
mov
cmpsl
xchg
jl
push
push
in
xlat
jl
or
imul
mov
sub
ljmp
shll
xchg
inc
loop
fwait
in
lret
stos
jecxz
push
inc
loop
push
adc
jns
lgs
outsl
xor
sarb
mov
outsb
fstl
pop
mov
xchg
out
sub
or
inc
popa
arpl
movsl
jp
mov
dec
test
mov
jo
shrl
dec
popa
cmpl
mov
sub
fidivrl
mov
sarb
push
xchg
inc
jge
lock
outsb
adc
lret
xchg
popa
adcl
shrl
inc
ss
arpl
sbb
test
shll
enter
ds
pop
or
daa
sahf
xor
sub
jmp
nop
add
sbb
xlat
pop
mov
fsubp
push
sub
insb
sarb
stos
mov
fstpt
in
mov
push
add
add
xchg
mov
pusha
sbb
xor
test
bound
rclb
adc
adc
ffree
mov
dec
ficomps
lock
cmp
dec
or
push
push
jbe
mov
jns
inc
push
add
mov
cmp
insb
out
mov
test
ficoms
cmp
stos
xchg
add
je
rcrb
xchg
jnp
pop
mov
stc
mov
fisubl
pusha
or
xor
inc
fisttps
int3
pop
inc
rorb
jle
lods
xlat
sbb
cltd
test
mov
jg
inc
mov
scas
push
out
jl
dec
adc
insl
mov
arpl
test
pop
std
xchg
sti
inc
cli
pop
inc
arpl
sub
mov
pop
rclb
imul
adc
cs
ss
sub
push
test
inc
jge
or
je
add
jo
sti
js
adc
add
pop
jae
div
jge
and
jg
int
mov
mov
jge
jns
imul
push
out
adc
mov
jmp
iret
mov
mov
push
cmp
push
xor
dec
in
shrb
iret
cmpsl
xlat
test
sti
dec
mov
std
dec
jl
push
shrl
push
mov
sub
ja
mov
jg
fmuls
insl
add
ja
sbb
add
or
jl
sbb
loope
xchg
push
mov
rcl
imul
add
xor
pop
pop
lods
pop
dec
repz
add
in
and
mov
sahf
js
pop
adc
adc
sbbb
pop
movntq
mov
push
sbb
lcall
push
push
xchg
out
sbb
mov
cmp
pop
fnstsw
jge
push
outsb
fadd
pop
push
xchg
push
in
and
jae
cmp
xchg
inc
pushf
push
not
or
push
jg
or
in
adc
mov
or
mov
mov
cmp
push
imul
adc
pop
mov
sub
cmp
dec
scas
push
lahf
cmp
mov
shll
push
push
ljmp
jno
cld
mov
xchg
ffreep
mov
cmp
mov
fsubr
cmp
inc
inc
xor
dec
loop
bnd
shll
mov
cmp
cmc
add
pushf
push
dec
and
add
call
adc
inc
aam
jbe
std
push
nop
jle
jg
lret
xchg
and
lret
cmpsl
push
ja
scas
addr16
sbb
ret
cltd
inc
pop
fpatan
orb
jg
jmp
inc
outsb
cmp
jbe
push
add
ficoms
gs
js
jecxz
repnz
xor
insb
es
xchg
sub
in
jnp
inc
push
mov
jns
mov
mov
mov
movd
out
lock
dec
push
fnstcw
arpl
jbe
add
or
lret
pop
pop
sbb
push
xor
scas
outsl
sbb
bound
cmpsb
xor
es
lahf
mov
push
fdivrs
les
cmp
xlat
cmc
les
mov
fisubl
sub
rolb
add
dec
cs
cmp
fldl
das
je
out
pop
inc
mov
arpl
sub
and
ljmp
and
xor
inc
data16
insb
in
test
notl
sbb
outsl
jnp
jmp
xor
inc
ret
fisttps
dec
out
scas
les
fwait
xor
and
scas
jmp
jmp
push
and
cmpsl
out
test
cld
and
adc
add
mov
insb
xlat
fsubrs
in
lds
out
xchg
imul
test
leave
xchg
dec
lret
cmpl
repnz
mov
in
fdivrs
dec
add
outsl
cmpsb
imul
cmp
and
andb
in
ficompl
mov
jmp
sub
xchg
pushf
sbb
jnp
dec
test
mov
pop
mov
outsl
or
or
push
mul
mov
jg
in
cli
rcrl
adcl
add
pop
movsb
jmp
cwtl
call
mov
std
out
inc
call
je
outsb
outsl
mov
shrl
jl
jmp
insl
aam
mov
mov
fsubr
jmp
cmp
pusha
push
mov
jge
xor
test
jo
xchg
aad
or
add
sti
jb
dec
and
or
mov
jge
lret
sbb
jo
mov
pushf
and
pusha
cmc
dec
and
mov
mov
jle
cld
and
mov
into
xlat
jmp
xchg
sub
sbb
in
pop
or
cmp
sbb
jno
je
repz
aad
rorl
sbb
push
lds
shlb
jo
outsl
xchg
outsl
push
in
jb
push
xor
inc
in
xchg
scas
fnstsw
inc
in
ret
push
mov
jg
push
jbe
jnp
adcb
xchg
mov
cmc
add
jp
mov
bound
test
jo
scas
jmp
in
sub
cmpsl
sahf
mov
fyl2xp1
push
mov
out
inc
inc
jecxz
mov
sub
sub
bound
push
jb
iret
ja
adc
icebp
lret
addr16
and
sub
jbe
pop
enter
mov
fsubs
loope
sub
sbb
sub
lcall
icebp
je
jo
arpl
in
sbb
int
inc
cwtl
jo
lods
push
fcoml
aas
add
adc
popf
jl
outsb
cmpl
les
inc
sub
hlt
cmp
adc
out
pop
or
pop
xchg
lods
call
es
shlb
mov
sbb
ds
cs
jb
jnp
mov
adc
mov
mov
mov
je
cmp
cmpsl
inc
push
lea
adc
add
xor
inc
dec
test
in
in
out
pcmpeqb
cmpsl
sub
sbb
ja
icebp
or
lahf
pop
cmc
ror
add
dec
std
xchg
xchg
or
ss
cmp
xchg
jl
sub
cmp
mov
and
int
xacquire
jns
flds
adc
pop
xchg
or
jl
in
out
sub
sti
ds
inc
jae
imul
jmp
pop
sub
sbb
dec
xor
xor
ss
loope
insl
and
push
inc
sbb
sub
push
add
lds
cmp
jecxz
push
imul
inc
sbb
mov
cwtl
inc
test
stc
cli
sahf
cmpsl
out
xchg
and
mov
pop
mov
aam
and
popf
bound
nop
adcl
subb
add
inc
xchg
inc
sbb
xor
stc
cmp
push
jnp
test
dec
mov
lret
addl
xchg
push
xchg
test
lret
cld
jbe
sbb
movsl
insl
daa
inc
subb
ficompl
mov
mov
lea
jbe
mov
mov
inc
or
xor
mov
std
scas
xchg
test
adc
pop
mov
mov
jne
xchg
mov
dec
sub
ficoms
mov
movsb
mov
adc
imul
rcl
in
cli
dec
jne
dec
xor
std
inc
lods
cmpsl
pop
and
add
jb
or
aad
push
jbe
int3
cmpsl
jne
jmp
push
jo
mov
int
enter
adc
mov
lds
adc
xchg
xor
pop
inc
fistpl
aam
stc
mov
out
arpl
push
add
sti
movsl
adc
sbb
jp
shlb
sarb
mov
repz
in
xor
repnz
stc
mov
inc
adcb
sbb
push
scas
popf
sbb
nop
and
mov
or
aam
leave
leave
pop
lret
into
in
aaa
ja
out
in
mov
pop
rorb
and
popa
sub
ja
popf
lods
inc
je
sahf
lea
lret
mov
out
inc
or
insl
pop
mov
outsl
negl
aas
cli
jne
pop
add
cmp
arpl
lahf
rcrl
shl
subb
add
mov
xchg
pusha
or
int
dec
dec
lret
fucom
rcrb
addl
fwait
jbe
cltd
xor
jp
sahf
ja
popa
clc
stos
push
sbb
pop
lret
jg
sub
es
bound
jns
stc
lea
mov
ret
xor
cmp
push
inc
mov
xchg
fldz
push
call
jg
adc
xchg
inc
push
cmpl
jmp
cmpb
and
push
stos
or
adc
add
mov
cmpsb
hlt
das
testb
jp
testl
or
xor
ret
pushf
repz
addr16
rcll
push
push
cwtl
es
es
sbb
mov
in
lods
and
enter
cmpsl
call
mov
push
loope
and
ret
cwtl
pop
sbb
mov
lds
lcall
sub
orl
in
xchg
outsb
cwtl
inc
mov
aam
dec
xchg
cmp
sti
sub
sbb
push
or
frstor
sub
push
rolb
out
pop
add
repnz
imul
ljmp
xor
orl
cwtl
adc
icebp
mov
jne
sbb
je
jle
int
dec
mov
out
inc
lahf
mov
scas
xchg
and
add
iret
pop
mov
jecxz
aas
push
inc
xor
fs
adc
jns
push
repnz
mov
movl
pop
cli
mov
adc
lcall
lcall
sbb
dec
lds
imul
maxps
lods
insb
faddl
sbb
adc
fmull
pop
xchg
frstor
jl
dec
jecxz
cmp
cmp
sbb
in
cltd
mov
xchg
sahf
sub
jmp
or
cs
scas
mov
dec
pop
bnd
pushf
lods
or
imul
dec
inc
fiadds
sub
or
das
lret
jb
lods
mov
inc
and
mov
cmpsl
xor
in
sub
pushf
repz
cs
mov
mov
sub
mov
in
mov
push
lods
xchg
hlt
jle
pop
sub
aad
push
daa
stos
testl
jg
cltd
cld
cmp
sub
push
shl
xchg
arpl
jecxz
ds
or
mov
nop
cmpsl
inc
mov
daa
outsl
gs
ficompl
mov
test
ja
sub
push
loopne
push
loope
and
jo
and
stos
es
push
lea
sbb
stos
shrb
ret
pop
sub
mov
rclb
or
repnz
push
mov
mov
adc
pop
mov
lds
push
xchg
mov
push
test
xchg
push
pushl
int3
and
pop
jmp
ret
dec
pop
jp
jb
popa
pop
add
mov
xchg
or
mov
ret
ljmp
mov
mov
ss
xor
xor
pusha
or
jne
sub
aam
jns
dec
aaa
cmpsb
jbe
cld
mov
mov
fsts
pop
lock
jnp
adc
and
movb
xchg
mov
je
scas
andl
xor
test
je
inc
xlat
sub
stos
pop
aam
pop
cmc
loope
fadds
ja
lea
and
sbb
stos
es
mov
dec
in
in
xchg
sbb
dec
stc
pop
mov
push
clc
loop
jg
sbb
xor
out
xchg
nop
cmp
inc
or
inc
and
inc
mov
imul
movsl
lock
cmpsb
sbb
dec
push
movsl
jnp
int3
mov
and
aad
dec
fsubrs
jnp
mov
cmp
xor
mov
into
in
cmpsb
sub
fmuls
mov
fwait
popa
inc
pop
dec
arpl
add
testb
into
push
jmp
jmp
out
shlb
sub
lods
jmp
aas
ficompl
pop
push
insb
push
shlb
mov
aaa
inc
scas
xchg
xchg
les
cmc
mov
pop
out
push
mov
in
pop
in
xor
repnz
and
inc
adc
out
insb
addr16
xchg
fs
out
aas
mov
stos
adc
xchg
cmp
outsb
jl
pop
and
into
lea
add
xlat
mov
cs
xor
std
inc
rcl
scas
mov
daa
arpl
movb
adc
or
push
jle
lea
cmp
xor
ss
push
lods
pop
or
jge
hlt
push
scas
stos
sbbb
lret
insb
add
cs
hlt
adc
scas
cmp
push
loopne
fdivs
pop
gs
ljmp
push
ss
dec
adc
insb
mov
xchg
mov
mov
test
pushf
ja
jbe
mov
test
cmp
pop
push
je,pn
gs
insb
jno
dec
sub
adc
mov
fisubl
mov
xchg
mov
xor
imul
lods
dec
shrb
test
icebp
or
add
xchg
xor
adc
adc
mov
mov
fidivrs
or
and
dec
jns
add
sub
dec
push
sbb
pop
pop
mov
pop
mov
sarl
call
pop
ret
push
xchg
push
in
mov
movsb
je
rcll
push
int
pop
lret
pop
cmc
cwtl
fcoms
cwtl
sub
jae
popa
sub
dec
pop
or
or
test
sub
ret
movsl
add
inc
push
add
out
adc
pop
push
scas
xor
loopne
mov
call
push
inc
push
push
scas
mov
sub
mov
divl
decl
hlt
inc
call
xchg
frstor
cmp
mov
jno
xchg
into
pushw
out
test
xorl
sub
adc
outsl
sbb
fiadds
sub
movsl
cmc
test
leave
insb
sbb
hlt
cmp
jle
ret
xlat
lcall
cmp
repz
mov
les
fwait
push
sti
mov
adc
jmp
pop
pop
stos
mov
faddl
sub
aad
mov
pop
mov
fs
mov
es
push
rep
fsubl
sub
ret
cmp
pusha
xchg
adc
mov
sub
push
testb
dec
or
mov
add
xor
fs
lret
jne
jmp
inc
xor
cltd
fistl
or
adc
inc
mov
and
adc
inc
ljmp
aad
fadds
inc
fidivl
stos
test
inc
out
insb
cmp
sub
dec
aas
mov
mov
faddp
in
xchg
pop
out
adc
clc
push
lods
mov
mov
jbe
xchg
and
lods
inc
cld
dec
jge
rcrl
fisubrl
je
xchg
out
dec
push
mov
add
icebp
arpl
imul
cld
push
xchg
cmp
enter
mov
lret
negl
shlb
pop
dec
scas
cmp
hlt
adc
xor
dec
mov
dec
and
mov
mov
scas
aaa
jae
push
mov
lea
in
shrl
mov
mov
or
push
xchg
sarb
mov
loop
adc
mov
jg
and
xchg
dec
pop
hlt
aas
mov
sbbb
ja
insl
xor
adc
lahf
jno
mov
xchg
or
sbb
mov
insb
xor
inc
xchg
lods
jg
cmp
sbb
sbb
and
test
loop
enter
andb
mov
mov
scas
mov
mov
test
lcall
push
mov
or
lock
icebp
pop
loopne
lcall
icebp
fildll
cli
das
dec
mov
push
mov
add
adc
mov
dec
xor
and
or
dec
mov
das
stos
fstl
cli
nop
fisubrl
test
mov
test
xchg
outsl
divl
pop
scas
sbb
add
jp
xchg
mov
push
testb
jmp
sbb
xchg
loope
js
cmp
pop
loopne
call
or
gs
push
std
xor
xchg
arpl
mov
and
push
adc
rcr
divb
sbb
sub
pop
cmpsl
inc
xor
jne
jns
icebp
or
adc
add
sub
xchg
cmpsl
sbb
xchg
jae
out
mov
xlat
cli
fsubrl
movsb
cmp
daa
mov
test
pop
mov
shrl
insl
dec
mov
jne
insb
aad
xor
shlb
jns
outsb
dec
callw
mov
inc
jmp
mov
and
mov
push
jae
cwtl
mov
out
jecxz
data16
adc
xchg
jne
push
add
xor
pop
imul
outsb
or
call
in
shlb
imul
mov
sahf
push
fstpl
add
mov
scas
popf
setp
lret
xor
ljmp
cli
mov
mov
call
nop
xchg
mov
sub
push
push
jae
inc
into
push
jge
ss
sahf
mov
shl
subl
mov
and
dec
fisttps
stos
data16
jbe
xor
inc
push
jmp
stos
inc
shlb
push
ja
inc
cwtl
inc
cmp
xchg
pop
ds
dec
jl
mov
fdivrl
push
jb
mov
add
scas
push
mov
jbe
mov
mov
mov
mov
daa
dec
sub
arpl
jmp
and
scas
push
mov
jmp
mov
test
addr16
mov
mov
or
nop
daa
sbb
pmulhw
dec
scas
cmp
gs
pop
inc
lock
jbe
mov
cli
shrb
jo
adc
gs
cmpsb
stc
and
mov
les
mov
aas
fwait
mov
shr
js
xchg
jbe
fidivl
jmp
cmp
mov
test
popa
ds
mov
shll
es
inc
sarl
fcmove
mov
mov
leave
sub
rolb
pop
xor
mov
or
inc
pop
xchg
sub
sarb
mov
lret
lret
mov
xor
add
dec
lahf
mov
pushf
xor
in
std
dec
adc
in
cltd
inc
call
and
inc
xchg
mov
dec
insb
out
mov
mov
push
mov
aas
pop
push
in
dec
cmp
dec
cmp
mov
jl
jecxz
stos
push
pusha
or
in
cmp
rol
xchg
dec
repnz
in
sbb
cmp
or
fnsave
mov
aam
cld
push
dec
shrl
push
cmc
test
dec
mov
notb
and
jb
outsl
lret
mov
cs
jmp
adc
outsb
cld
push
xchg
lret
jp
sarb
fwait
push
pushf
or
jge
add
xchg
jae
jns
into
xchg
sbb
push
sbb
cs
inc
xor
pop
shl
adc
imul
cld
rcrb
sti
loop
testb
lea
xchg
popf
rcrb
imul
and
popa
push
mov
mov
ss
cld
mov
rclb
rcr
mov
cmp
mov
xchg
xchg
test
loopne
imul
ret
xchg
into
cmp
gs
das
sub
dec
adc
xchg
push
popl
ficoms
repnz
mov
iret
adc
mov
jp
dec
mov
lds
push
jo
mov
mov
cmp
push
ret
dec
ss
jb
push
inc
in
scas
push
or
clc
inc
pop
or
sub
mov
out
shlb
hlt
mov
or
xchg
sub
pop
push
xor
mov
xchg
and
cmp
adc
dec
imul
aaa
mov
push
inc
pop
jl
or
jne
lods
push
jae
push
scas
daa
xor
or
xchg
test
mov
andb
bound
outsb
fsubrl
xor
pushf
sub
rclb
xorl
lods
sbb
ret
pusha
xor
fistps
sbb
lock
pop
pop
jb
into
sbb
fisttpll
and
idiv
adc
cmp
xor
xor
cmp
or
dec
mov
sub
fists
mov
inc
mov
je
push
aas
inc
adc
sub
cltd
std
mov
push
mov
call
popf
stc
inc
pop
add
adc
xchg
pop
insl
mov
nop
decl
fsubrs
in
test
repz
inc
sbb
and
dec
into
push
ret
inc
sbb
insl
sahf
pop
inc
push
jb
in
subb
sbb
mov
fisttpll
xlat
and
mov
ja
imul
stos
xchg
scas
sarb
stos
inc
incb
jo
cmp
iret
adc
jns
imul
xchg
add
stos
or
repz
or
jp
cli
sbb
nop
xchg
out
test
mov
filds
adc
push
fbld
push
repnz
push
push
xchg
mov
dec
or
pop
xchg
lods
xchg
js
and
in
das
sbb
lea
jg
inc
push
dec
stc
fwait
enter
cs
jmp
push
jl
stc
jne
xchg
pop
popf
xchg
push
sbb
sub
dec
pop
push
loope
inc
mov
or
jg
xchg
pop
popl
aam
sub
jmp
ljmp
mov
mov
add
lahf
into
mulb
jp
xor
jbe
dec
movsl
push
or
mov
sbb
mov
ss
sbb
out
add
js
or
xchg
call
or
sbb
xchg
arpl
jne
mov
and
scas
lods
mov
add
xor
push
mov
mov
icebp
xchg
push
jne
test
jge
ljmp
mov
ret
sbb
mov
ja
jns
test
mov
mov
das
addr16
shr
pop
test
or
cmp
ds
dec
mov
xchg
pop
or
fidivs
push
adc
enter
into
in
sbb
bound
cmp
mov
pop
shr
dec
in
cmp
ss
xlat
jmp
pushf
add
dec
jp
das
lods
xor
push
push
in
ret
adcl
lea
push
insb
fistl
cld
shlb
adc
or
movsb
cmp
imul
out
out
mov
mov
mov
aam
insb
sub
shrb
fs
inc
sub
int3
fs
out
test
cmp
add
and
dec
dec
push
std
cmp
and
movb
inc
repnz
jp
pusha
lods
pusha
call
out
mov
sub
lret
movsl
inc
push
bound
shrl
loopne
test
push
out
lock
adc
inc
loopne
mov
sbb
imul
addr16
mov
pop
or
dec
and
pushf
sahf
ss
ret
jp
add
cwtl
mov
hlt
in
pusha
imul
pop
repz
xchg
shlb
adc
ja
fwait
push
inc
cltd
das
dec
xchg
mov
dec
imul
dec
mov
push
dec
xchg
push
and
loope
sbb
mov
pop
xor
xchg
imul
mov
aaa
push
sub
mov
push
lods
js
mov
fisttpl
or
imul
fisubl
adc
adc
in
lretw
or
les
lret
das
cmp
cmp
fdiv
scas
add
pop
mov
jb
pop
mov
pop
ficompl
cmpsl
push
push
aad
je
or
push
sub
shrl
shr
jg
jl
jns
aaa
rcr
mov
add
stc
pop
mov
popf
cmpsl
rol
pop
scas
sub
jbe
add
fsubr
repnz
outsb
imull
testb
mov
rcrl
xchg
mov
shr
pop
rcll
mov
fildll
shl
lock
mov
cmpsb
testl
pushf
cli
xchg
add
add
pop
xor
mov
adc
ds
pop
or
int
out
push
pop
push
mov
push
inc
out
sti
jno
outsb
pop
or
mov
lods
insb
addb
fisubl
aas
rcr
arpl
imul
inc
jns
xor
pop
fwait
ret
dec
sub
cmp
xor
outsb
push
call
xchg
mov
test
popa
jnp
and
ficoml
js
test
scas
lret
incl
pop
and
sarl
dec
xchg
clc
and
cmp
or
adcb
xor
mov
ret
push
out
sbb
inc
ljmp
and
in
nop
imul
add
cmp
je
add
mov
mov
daa
mov
fsubs
cmp
mov
dec
lahf
aaa
xchg
mov
jno
dec
cmpsb
cmp
push
pop
mov
test
nop
nop
loop
sbb
aaa
mov
mov
pop
dec
loop
mov
lahf
std
roll
insl
sub
pop
and
cs
xchg
push
arpl
mov
jmp
mul
outsl
jb
rorl
icebp
xor
nop
mov
fsts
cs
daa
push
cs
popf
inc
je
icebp
repz
cltd
fs
sti
std
sub
fisubrl
pop
pop
jecxz
adc
test
mov
into
test
and
or
and
or
mov
aad
xchg
mov
sbb
jmp
fldenv
repnz
je
hlt
xchg
mov
nop
mov
xchg
sub
fidivrs
inc
es
cmp
cmp
xor
lret
imulb
jmp
in
idivb
imulb
jle
fs
repnz
adc
dec
xchg
les
add
testb
and
or
push
les
addl
xor
inc
fnstcw
pop
pop
sbb
aas
fwait
arpl
xor
rcl
lock
push
arpl
xchg
cs
adcl
push
icebp
andb
mov
repz
mov
in
mov
nop
dec
loope
or
jle
addr16
cmp
pop
lods
xor
in
push
xor
jl
cmp
mov
loop
jl
popl
or
dec
cmp
push
sub
adc
orl
or
movsb
gs
sub
aas
pop
add
sbb
xchg
shll
xlat
stos
sbb
sbb
pop
test
mov
adc
das
jmp
shlb
shlb
imul
pop
repz
lods
push
sub
bound
or
outsb
das
es
adc
inc
clc
mov
ret
sub
sbb
mov
inc
cmp
negb
subl
or
stos
or
faddl
jge
push
xchg
pop
outsl
or
add
cwtl
add
outsb
mov
arpl
push
xchg
and
aad
popa
mul
test
rol
push
ljmp
jb
inc
xchg
inc
test
xchg
jl
stc
mov
sbb
xchg
pop
loopne
cmp
lods
jne
insl
cmpsl
into
test
movsb
pusha
imul
cwtl
sub
ret
imul
xchg
push
arpl
shl
mov
fisttps
ret
ret
and
fisubs
gs
fstpt
cmp
xchg
xchg
enter
lods
jmp
and
test
stos
es
pop
lock
add
add
push
sub
cmp
pop
cltd
das
xor
jno
repz
mov
test
inc
js
aam
cmp
mov
imul
pop
mov
cli
pop
inc
adc
andl
adc
add
jge
lret
mov
sub
pusha
xchg
iret
outsb
push
add
cmc
emms
mov
lea
mov
lods
jl
pushf
mov
xchg
repz
out
nop
sub
xchg
jge
cmp
or
test
mov
lods
orl
lcall
movsb
daa
inc
xor
shll
ss
out
dec
dec
icebp
cmpsb
popa
jae
int3
lret
and
and
jge
push
mov
push
scas
rclb
pop
dec
fdivrl
lods
cmp
fisttpll
aaa
std
repz
push
and
data16
cwtl
data16
inc
cwtl
dec
in
sbb
enter
sahf
cmp
shl
jne
mov
cld
xchg
add
out
xor
clc
mov
fiadds
mov
lcall
je
les
mov
out
lods
inc
and
cmp
sub
dec
pop
fwait
in
imul
insb
mov
ds
loop
or
cmc
fmuls
or
std
pusha
add
and
sbb
imul
icebp
inc
cmp
xchg
cmp
xchg
add
adc
lret
cld
test
sub
lret
loopne
push
test
xchg
lcall
out
mov
mov
adc
lock
outsb
pextrw
push
movsl
imulb
mov
mov
shll
adc
jg
mov
dec
cwtl
sub
rcll
or
movsb
les
inc
addps
add
mov
mov
push
leave
jle
enter
test
scas
inc
out
lret
push
mov
add
leave
fs
cmp
sub
jno
mov
repnz
and
inc
jnp
or
jge
dec
sub
inc
fisubs
ret
gs
adc
rol
clc
popa
not
adc
lret
jle
add
aas
push
or
arpl
mov
fnstsw
pop
cmp
xor
jne
ja
jl
dec
in
jmp
sbb
aaa
pop
les
pop
adc
shl
stos
jmp
add
popf
push
stos
les
es
jb
dec
iret
sub
enter
adc
mov
push
rclb
mov
iret
push
jnp
sti
jbe
adc
jle
mov
jle
or
mov
inc
xchg
pusha
pop
xchg
mov
add
inc
pop
mov
call
push
cltd
jecxz
jle
out
filds
or
pop
cmp
subb
mov
fdivl
adc
dec
or
fidivrl
addr16
ret
rcr
add
mov
jbe
mov
mov
fs
push
rorb
xor
push
adc
test
gs
fwait
or
das
je
in
icebp
icebp
push
and
cmp
inc
xchg
adc
in
sbbl
or
arpl
nop
in
jo
pop
cmp
call
mov
pop
push
inc
adc
addb
cwtl
aaa
push
mov
pop
xchg
mov
inc
mov
xor
lock
inc
push
mov
mov
ss
push
xchg
add
push
lods
adc
mov
shr
mov
and
mov
cli
out
out
xchg
mov
in
inc
icebp
insb
and
insb
add
mov
inc
test
sbb
test
movsb
cmp
and
leave
adcb
int3
or
pop
inc
xchg
mov
cmp
int
vpsrlvd
adc
imul
pop
dec
and
nop
jb
ror
sbbl
push
push
lock
loope
jbe
fidivrl
jae
sarb
add
mov
cmpsl
sub
lods
add
rorl
fisttpl
aad
aad
sub
fadds
mov
xlat
and
xlat
stos
in
or
pop
repnz
dec
filds
je
jns
add
pop
mov
dec
sub
scas
lods
jae
and
arpl
mov
push
imul
xor
insb
lods
ljmp
call
dec
push
mov
rolb
aaa
xchg
or
in
push
icebp
aad
jne
outsb
data16
adc
outsb
add
lahf
in
addr16
add
jle
out
xchg
mov
std
aam
mov
aam
lret
or
pop
sti
pop
dec
mov
or
cmp
sub
inc
pop
call
je
in
ss
scas
push
add
arpl
pusha
imul
pusha
arpl
imul
lahf
arpl
xlat
jge
loope
movsb
xlat
jecxz
pop
jl
sahf
sub
loopne
div
dec
mov
sub
clc
sub
mov
sub
sub
sub
cltd
mov
ret
sbb
cltd
std
push
xor
sbb
std
mov
push
test
test
das
mov
ret
xor
outsb
out
ret
add
mov
mov
dec
loope
sbb
pop
sbb
ret
xchg
dec
cmpsl
sub
in
cs
je
mov
fnsave
ss
inc
mov
scas
or
sbbb
push
mov
lods
bound
sbb
xchg
sub
push
pop
out
xchg
sbb
mov
and
inc
iret
gs
cmpsl
mov
rorl
xchg
jmp
fiadds
mov
test
lea
fwait
sahf
inc
cmc
dec
pop
daa
addr16
testl
jg
shrb
push
cltd
push
pop
iret
xor
or
sbb
shlb
push
xor
sbb
iret
push
test
movsb
mov
mov
inc
mov
mov
fldcw
cmp
mov
roll
xchg
add
mov
adc
nop
add
xor
loopne
stos
lea
inc
cli
or
and
aam
cltd
pop
dec
xchg
mov
cmpsl
xchg
clc
aam
aas
push
cmp
sub
mov
repz
push
fmull
std
sbb
test
hlt
lret
stos
enter
leave
sub
popf
mov
ljmp
ljmp
dec
pop
xor
mov
aam
lcall
and
xor
lods
xchg
pop
sub
jno
shl
addr16
jle
and
or
mov
adc
mov
sbbb
insl
ret
mov
stos
out
mov
pop
int
or
movsl
and
adc
loopne
hlt
cmc
imul
aaa
mov
loop
push
add
ja
jle
jg
popa
mov
mov
mov
dec
or
jbe
sub
push
push
imul
jge
mov
jae
cmpl
jno
push
mov
int
jo
jno
sbb
dec
inc
movsb
in
lret
ret
cli
push
jp
cltd
insb
adc
pop
jle
data16
or
push
jb
xchg
rorl
scas
out
adc
mov
jns
pusha
icebp
adc
stos
shrb
or
addr16
and
sub
jp
pop
mov
inc
xor
fbstp
daa
push
mov
sub
out
mov
cmp
ds
and
outsl
lcall
testb
mov
rcl
pop
es
inc
fs
cmc
int3
and
and
lods
xchg
mov
or
xchg
push
clc
insl
push
jae
repz
out
cmpsb
and
jp
and
sub
lods
inc
outsb
lea
stos
xor
in
into
in
inc
adc
fs
es
and
inc
outsl
xor
xchg
sbb
or
mov
mov
cmpsl
pop
inc
fwait
jno
arpl
jns
mov
call
add
dec
xchg
je
rolb
fiaddl
push
cmp
out
inc
adc
xchg
insl
dec
pop
lret
and
cmpsl
cmpsl
jl
mov
sub
test
pop
mov
scas
adc
test
je
int3
scas
xchg
insb
aam
push
lods
sbb
xor
stos
mov
and
cmp
insl
dec
sub
pop
fcompl
stc
aam
cld
imul
jl
lea
aas
adc
xor
mov
testl
shrl
sbb
xchg
clc
js
fsubl
adc
jmp
jnp
loop
dec
jg
subb
or
and
jo
fwait
push
divl
push
xor
jbe
leave
lods
sbb
dec
fmuls
test
test
aaa
sahf
hlt
cmpb
sbb
sahf
aas
add
stos
cmpsl
pop
dec
xchg
mov
lcall
mov
incl
push
out
aas
inc
gs
mov
jl
mov
xor
insb
sbb
or
mov
dec
jns
lahf
pop
adc
jo
pop
mov
je
cmp
sub
lods
jne
cltd
jb
push
stc
push
fnstcw
fisubrl
outsb
shl
sbb
mov
pop
lock
or
adc
adc
popf
jnp
les
xor
jne
nop
xchg
daa
cld
jmp
lahf
sbbl
xor
xor
push
xchg
outsb
mov
sbb
dec
gs
pop
in
mov
push
enter
xorl
movsb
lret
sahf
or
fcomip
sub
imul
mov
mov
mov
jmp
hlt
outsl
inc
leave
and
test
testl
jge
pop
jp
inc
and
xor
mov
add
push
ss
lods
pop
aam
sbb
test
daa
jmp
xlat
lret
lcall
jle
repz
into
pop
es
test
sbb
adc
xor
pop
mov
mov
adc
push
movsl
fildll
push
inc
popf
xor
adc
movsl
add
shrb
and
into
inc
mov
iret
push
or
lret
pop
inc
scas
loopne
fabs
pop
mov
mov
pop
ffree
push
pop
mov
fbld
and
pop
shlb
decb
add
mov
jge
out
outsb
test
mov
mov
insb
xchg
fmull
sub
jmp
and
in
pop
int
mov
outsb
stc
das
lret
sbb
imul
loope
cmp
popa
test
cmp
sbb
or
cmp
pushf
inc
cmp
and
xchg
xchg
lret
mov
pop
xor
lock
out
dec
jns
shll
outsb
mov
rorb
insb
dec
pop
lahf
stos
jno
cs
or
loope
or
push
mov
add
and
lcall
xor
jnp
fbstp
push
sub
cltd
leave
xchg
pushf
outsl
dec
ljmp
movsl
inc
out
jge
dec
lock
jl
inc
sbb
pop
sub
stos
lods
sbb
fmulp
rcl
ds
adc
popa
jg
fdivl
mov
jle
adc
icebp
into
lock
and
push
add
push
scas
push
popf
fbstp
inc
in
popf
stos
sub
int3
arpl
shr
cli
pop
push
or
xchg
cs
or
es
adc
mov
push
rorl
push
lcall
jl
dec
repnz
outsl
mov
pop
xor
enter
iret
jecxz
pop
xor
mov
sub
push
pop
or
pop
xchg
sbb
inc
xchg
iret
mov
push
push
in
adc
add
add
sub
adc
cmp
es
push
in
icebp
dec
flds
je
sub
dec
or
inc
aam
fsubrl
into
arpl
cld
mov
jmp
incl
push
imul
sahf
mov
add
cmpsb
add
lcall
mov
ret
enter
dec
loopne
sahf
ds
fisttpll
sub
cmpsb
data16
cwtl
pop
hlt
inc
inc
adc
push
cmc
adc
push
pop
icebp
cmp
jbe
and
inc
iret
sar
lods
add
iret
mov
mov
inc
mov
mov
cltd
cmp
push
mov
pop
in
ret
pop
call
mov
ja
out
decb
into
inc
inc
in
pop
adc
dec
dec
jge
jge
ss
lock
sbb
cmp
movsl
pop
std
or
aaa
ds
loope
jb
in
sbb
mov
jecxz
ja
inc
cmp
clc
xor
fbstp
cmp
test
xchg
scas
mov
mov
xor
cmp
sbb
outsb
lea
sub
repz
push
sub
sub
jb
ss
mov
push
stc
je
push
inc
fdivrl
dec
fwait
lcallw
mov
cmp
add
push
mov
or
cs
loopne
imul
cmp
mov
pop
fldl
sub
mov
sti
push
out
sub
add
mov
faddl
sub
add
xor
mov
out
das
movsl
jnp
bswap
sahf
push
mov
lcall
mov
lods
xchg
fsubs
fstl
adc
adc
ffree
and
dec
or
test
gs
jge
jl
push
icebp
pop
sahf
cld
dec
dec
insl
pop
out
repnz
repz
stos
mov
rcrl
mov
call
pop
xor
in
repnz
ret
daa
inc
add
inc
nop
daa
jl
pop
addr16
sahf
lods
ret
rcrl
xor
out
xchg
leave
hlt
or
movsb
mov
dec
sub
lds
ds
outsl
cmp
mov
int
jge
lods
and
in
adc
mov
pop
sub
fwait
pop
outsb
sub
sub
ret
cmpsl
jb
add
xor
outsl
cmpl
xor
mov
into
fcompl
pop
xor
rcrl
sub
sub
in
mov
jne
and
pop
cld
and
mov
adc
mov
call
push
fidivl
pusha
adc
pop
int
ret
cltd
movsb
jns
jo
adc
lahf
mov
and
push
test
aam
mov
xchg
lea
je
pop
outsb
fcoml
fldl
xor
lods
push
int
mov
sub
in
out
adc
xchg
mov
jmp
inc
fstl
xor
fs
rsm
mov
out
push
and
lea
add
dec
fwait
or
mov
lret
fwait
or
notl
push
mov
push
mov
push
loopne
pop
enter
test
loop
orb
mov
in
int
fisubrl
push
inc
popa
adc
iret
adc
insb
mov
ss
mov
xchg
sub
movsb
ja
loop
xchg
leave
inc
fiaddl
push
cwtl
xor
sarl
xchg
mov
repnz
add
in
sbb
pop
mov
js
int3
dec
movsl
movsb
je
xchg
inc
sarl
outsb
int3
push
stos
cmp
pusha
dec
ret
test
sbb
jo
jle
push
sub
or
sub
and
hlt
mov
cmp
lock
dec
imul
sbb
fstpl
cmp
xchg
pop
xor
xchg
sub
ret
repnz
shrl
mov
mov
and
popf
cmpsl
add
xchg
or
mov
add
push
jge
ljmp
js
sbb
out
or
popa
clc
pop
lods
gs
sub
push
or
daa
mov
les
mov
push
add
jl
fisubs
mov
lahf
cmpsl
inc
sbb
imul
push
pusha
add
sub
mov
sbbl
push
dec
dec
or
push
push
sub
ret
or
cmp
jnp
dec
inc
mov
xchg
lock
int
mov
pop
cmp
mov
xchg
mov
mov
cmp
and
push
loope
out
dec
jo
repz
xor
mov
add
mov
mov
xchg
cmpsb
pop
movb
sbb
adc
inc
inc
fisubrs
arpl
push
scas
fwait
movl
mov
mov
ds
jp
mov
icebp
repz
arpl
push
mov
rcrl
mov
cmpsb
or
jne
xchg
inc
push
insl
daa
jp
cmp
rcrl
push
jno
rcl
xchg
xchg
ja
jnp
fld
or
jle
test
pop
stos
imul
or
std
adc
das
mov
sbb
dec
cmpb
inc
pusha
lret
xchg
daa
aaa
pop
or
pop
daa
stos
rcll
in
push
mov
inc
jo
adc
mov
rorl
push
lods
mov
adc
add
subl
shrl
inc
adcb
sbb
pop
cmp
sbb
cs
sbb
fstpt
fldenv
pop
push
out
mov
frstor
mov
bound
aad
or
into
fmull
xchg
lock
or
adc
jg
ljmp
xor
jbe
lods
push
push
pushf
clc
stc
je
cmp
xchg
repz
repnz
mov
cmpsl
add
pop
push
sbb
cmc
lret
sti
adc
loope
jge
fbstp
mov
inc
jbe
fimull
xor
out
xchg
push
imul
xor
adc
lahf
adc
pop
inc
push
xchg
das
push
data16
jae
sub
push
adc
mov
pop
call
iret
ss
addr16
jne
and
ret
bound
jmp
xor
jle
out
scas
popf
mov
popa
in
cli
aad
fnstcw
push
js
inc
stos
scas
push
repnz
dec
or
int3
add
bnd
or
xchg
aas
pop
dec
or
in
inc
arpl
aam
adc
add
dec
lcall
add
sbb
push
sbb
mov
adc
and
clc
ds
add
out
sbb
or
scas
mov
js
inc
lahf
idivl
xchg
sub
cwtl
test
mov
add
inc
sti
cltd
cmpsb
mov
rcl
cltd
jo
inc
imul
jo
into
test
popl
xchg
std
mov
scas
jecxz
lahf
jbe
lock
stos
mov
jno
enter
mov
jo
mov
xor
hlt
mov
je
and
cmc
add
lock
sub
pop
sbb
stc
sbb
dec
mov
nop
xchg
sbb
sub
xor
cmp
std
mov
xor
push
xor
pushf
mov
les
nop
scas
mov
pop
sbb
nop
xchg
lret
testl
test
dec
jnp,pt
int3
and
dec
cmc
sub
popf
push
iret
es
inc
insl
loopne
hlt
lods
and
pshufw
andb
ljmp
rorl
fwait
in
and
pop
lcall
lcall
sahf
mov
pop
popf
mov
into
jns
dec
mov
movsl
icebp
cwtl
and
imul
jbe
xor
mov
negb
jns
loopne
test
jne
aam
adc
push
jg
ret
cmp
call
push
cwtl
inc
push
sahf
jg
fwait
arpl
es
mov
insb
add
xor
add
cwtl
mov
pop
mov
cmc
cmc
lods
xorb
adc
cmp
pop
addr16
or
sub
stos
movb
xor
mov
js
cmpsl
shll
push
pop
push
or
cmp
cmpsb
sbb
iret
jg
dec
es
adcb
andb
leave
pop
fimull
loopne
pop
push
cli
mov
mov
cmc
outsb
fsubrl
call
mov
cmp
loopne
mov
in
sub
movsl
cmp
lods
inc
jmp
lods
pop
inc
mov
in
movsb
xchg
mov
jbe
xor
lods
inc
out
jmp
lret
rclb
dec
mov
mov
out
insb
xchg
mov
test
jo
nop
and
xchg
jae
pop
jecxz
cwtl
fisubrl
dec
out
sti
roll
aaa
into
adc
das
jae
fiadds
sub
cmp
fisubs
dec
add
inc
push
in
jae
mov
or
jae
jae
and
and
xchg
jns
loopne
xor
cwtl
add
fnstenv
pop
push
fistpll
fisttpll
popa
push
ficoms
jmp
adc
cltd
repnz
data16
shll
push
cmp
stos
dec
insl
rcrb
xor
xor
cmp
mov
testl
inc
rcl
add
xor
es
pop
pop
or
mov
sub
push
les
sub
mov
xchg
movsb
mov
in
jmp
in
pushf
addl
ja,pt
mov
and
enter
xor
fwait
and
pop
hlt
cwtl
sub
sbb
jnp
mov
popf
insl
mov
cltd
insb
push
lret
inc
mov
movsb
add
fmull
lock
rcll
cmpl
adc
jmp
das
push
stos
jb
imul
lahf
fbstp
icebp
jmp
adc
call
pop
adc
out
add
sub
test
je
es
iret
das
dec
inc
lcall
and
jp
pop
jae
push
dec
icebp
dec
in
leave
mov
xchg
and
rcrl
sarl
and
das
xchg
adc
and
add
aaa
or
les
inc
push
or
jp
shll
sbb
test
inc
dec
insb
add
icebp
mov
mov
cmp
insl
es
push
test
fs
mov
pop
push
xlat
fwait
mov
dec
or
xchg
mov
loopne
lods
adc
mov
shrl
mov
fildl
sub
xchg
lods
icebp
enter
mov
pushf
inc
cmpsb
inc
xchg
sbb
inc
fwait
or
aam
jl
mov
andl
icebp
cmpl
xchg
or
jge
shrb
pop
dec
insb
add
jg
pushf
repnz
std
sbb
fdiv
in
inc
inc
ret
push
nop
icebp
push
shll
sbb
adc
mov
ja
xor
outsb
loope
lret
mov
or
sub
jg
push
adc
aas
xchg
subl
rcll
add
push
fcompl
dec
adc
pop
data16
pop
ja
mov
ret
rol
jecxz
dec
add
mov
imul
sbb
cmpsb
push
cmpsl
imul
inc
inc
mov
pop
add
popa
pop
out
xor
rolb
lahf
popf
daa
test
ja
in
movsb
pop
dec
ljmp
push
adc
es
bound
mov
out
jo
cmp
xor
dec
mov
mov
sbb
inc
leave
test
pop
xchg
inc
movsb
jecxz
add
xor
dec
aaa
lds
orb
call
stos
xor
jle
pop
test
out
pop
mov
push
sub
out
insb
dec
dec
push
add
and
in
clc
cmp
nop
cmp
lret
adc
popa
mov
xchg
call
imull
and
cmp
insl
jmp
push
inc
pop
dec
lahf
jno
mov
xor
data16
lret
push
in
subb
sub
rcrl
cmp
inc
lcall
or
mov
pop
adc
je
pop
es
dec
sti
inc
jno
fadds
fidivs
inc
jl
je
movsb
movsl
pop
add
mov
jbe
jae
pop
jno
pop
jns
int
js
arpl
mov
dec
lahf
and
pop
inc
fildl
xchg
cs
fnstsw
pop
or
push
jl
lds
sahf
insl
adc
cmp
pop
xor
sub
cld
pop
cli
or
out
rcrb
orl
mov
jno
outsl
pusha
fwait
aas
dec
insb
inc
negl
mov
jmp
inc
shlb
mov
xlat
repz
jl
push
scas
aad
jno
ret
pop
xchg
in
mov
sti
inc
fs
insl
mov
cltd
adc
sbb
je
mov
add
repz
ja
dec
imul
enter
insb
sbb
push
das
das
iret
sbb
dec
mov
push
sub
test
scas
push
movsl
lock
loope
fwait
lock
inc
or
inc
out
jnp
xchg
xor
mov
push
out
out
loope
pop
lea
scas
aam
add
test
push
fisubl
sahf
xor
repz
lret
stc
andb
and
xchg
cmp
roll
or
jno
dec
imul
mov
sahf
iret
bound
inc
outsb
add
call
gs
adc
dec
push
data16
xchg
push
sarl
xor
lods
sub
push
leave
jg
fucomi
outsl
test
xlat
int
andl
stos
jo
mov
dec
in
mov
xchg
sub
jbe
mov
cmp
cltd
cmp
js
out
out
repnz
jge
mov
mov
out
cltd
jb
fdivl
call
push
insl
sub
sub
rcrl
cld
hlt
out
inc
sbb
leave
or
scas
hlt
mov
push
nop
or
push
xor
adc
xor
in
dec
in
pop
aam
xchg
inc
gs
sti
lock
sbb
dec
sub
loop
mov
imul
xchg
lret
push
mov
out
lcall
ja
adc
stos
in
stc
out
inc
push
pushf
and
sahf
xchg
mov
jb
jo
lock
push
xor
pop
push
ds
pushf
push
and
mov
divb
push
pop
jbe
les
xchg
cld
pushf
fdivl
fnstsw
in
movb
mov
or
and
push
xchg
cmp
inc
mov
stc
mov
iret
mov
out
mov
push
scas
sub
shll
cltd
mov
into
ljmp
mov
jno
jmp
sub
mov
cmpsl
cmpsl
ds
cmp
lock
push
mov
jle
test
roll
jns
or
xchg
lea
inc
xchg
sub
outsb
add
mov
mov
sub
xchg
insl
std
push
ljmp
jno
incb
jle
orb
dec
mov
pop
popf
js
sbb
out
mov
and
mov
cld
mov
mov
cmp
and
popf
xchg
test
jnp
mov
push
popf
xchg
stos
xchg
sbb
inc
fs
mov
iret
scas
out
adc
inc
cmp
hlt
sbb
push
dec
push
xor
dec
inc
mov
pop
mov
mov
xor
subl
mov
out
cmpsl
test
bound
pop
and
fistl
inc
push
jg
pop
loopew
xor
dec
incl
xor
pop
mov
sarl
add
push
inc
aas
push
mov
dec
jl
push
fbld
cmp
xor
popf
ja
adc
lcall
cwtl
mov
push
dec
jg
out
xor
mov
ja
and
fsubl
inc
push
and
arpl
pop
jp
cmp
out
pop
xchg
scas
pop
dec
dec
add
outsb
fdivs
arpl
pop
pop
dec
mov
push
aad
cmp
mov
mov
rolb
and
jecxz
repnz
dec
sbb
push
adc
in
mov
sbbb
add
cli
test
cmp
pop
orl
in
jl
add
jmp
inc
pusha
loopne
jle
negb
inc
dec
jecxz
jb
mov
jno
cmp
jle
push
mov
pop
xor
mov
out
lds
repnz
emms
mov
stos
inc
pop
xchg
aam
dec
mov
mov
inc
inc
mov
outsb
or
jg
outsl
enter
cmp
cmc
imul
scas
outsl
xchg
cmpsb
in
insb
adcb
adc
sbb
loopne
mov
cmpsb
mov
fnstenv
leave
jge
fdivl
mov
inc
fstp
push
push
stos
push
mov
push
ss
and
cltd
inc
in
mov
es
sub
pop
stos
pop
fcmovb
je
push
xchg
xchg
les
add
stos
or
ret
push
je
pusha
fistl
int
xchg
jg
fisttpll
and
lret
adcl
cmp
xchg
in
fbstp
add
add
fst
les
mov
mov
and
mov
mov
popf
std
cmp
orl
iret
xchg
sub
jle
sti
mov
mov
mov
fmul
loope
add
xor
pop
je
cli
int3
arpl
and
xchg
mov
pop
divl
pop
push
dec
push
loope
xor
push
test
xlat
stos
inc
or
mov
cs
enter
pop
inc
in
shlb
movl
mov
test
movsl
js
mov
in
in
mov
push
sub
and
loopne
xchg
in
mov
cmpb
add
pop
mov
cli
or
rcrl
xchg
xor
lret
sti
cmp
cmp
in
pop
and
sbb
xchg
fimuls
mov
push
paddusw
outsb
cwtl
jne
movsb
sub
in
repnz
mov
nop
call
sbb
mov
insl
mov
decb
into
mov
push
push
lock
loope
lods
push
mov
push
leave
sub
fidivl
sub
xlat
sbbl
and
push
and
fsub
cmp
cmpsl
inc
cmc
jg
and
mov
cwtl
cmp
fisubrl
hlt
or
popf
iret
cmp
nop
mov
mov
test
sub
pop
clc
add
addr16
xor
mov
aad
aaa
mov
roll
mov
cmp
and
dec
cwtl
in
inc
push
or
frstor
repnz
aaa
mov
pop
cli
shrl
xchg
xchg
mov
cmp
pop
subb
push
pusha
bound
jp
mov
into
popa
out
mov
sti
push
xor
and
inc
hlt
xchg
jne
cmc
addb
call
mov
mov
mov
jne
dec
sahf
lds
and
push
testl
sbb
xor
ret
pop
icebp
mov
and
mov
jg
mov
jge
scas
imul
cmp
das
jmp
out
xchg
mov
sub
imul
inc
mov
loope
adc
xchg
and
dec
out
dec
cmc
sbbl
adc
insb
leave
scas
xchg
call
pop
mov
mov
enter
in
fldenv
and
aaa
neg
inc
es
adc
mov
imul
data16
lret
xor
xchg
jge
mov
xchg
sahf
jae
in
ret
and
loopne
dec
loope
or
cmp
inc
mov
mov
lret
sarl
pop
daa
fistpl
xchg
pop
or
xorl
lock
sahf
mov
test
out
add
pop
mov
cvttps2pi
stc
push
dec
fldenv
adc
and
je
outsl
jnp
dec
jae
inc
and
or
setp
repnz
pop
aaa
ds
mov
push
pop
xor
push
mov
xor
jb
pop
ss
fmuls
and
stc
jge
fs
jmp
adc
test
bt
xchg
in
lea
mov
xor
mov
orl
jnp
mov
icebp
xchg
orl
movsb
push
pop
lret
and
sub
and
lock
jg
lods
pop
dec
lahf
sub
xchg
pop
rcrb
cmp
ret
dec
push
sub
popa
testl
cmp
push
movb
mov
movl
pop
cmpsl
adc
adc
push
je
dec
stos
pusha
cli
daa
cmovg
ljmp
test
mov
mov
cltd
sub
xchg
rcl
xor
leave
xchg
inc
sub
inc
js,pn
leave
lods
mov
loopne
mov
outsl
test
push
notb
notb
pop
aas
add
in
jbe
sbb
cwtl
das
call
and
jg
lret
call
mov
movsl
fcoms
dec
iret
push
or
xor
lods
ljmp
popf
out
mov
fidivl
add
movsb
daa
stc
nop
pop
jg
sbbl
out
mov
dec
pop
negb
cmp
out
jge
sbb
arpl
dec
inc
push
pop
scas
jo
ret
cli
mov
fwait
inc
xchg
cmp
negl
jbe
sbb
xor
or
xchg
divb
cmp
and
aad
pusha
push
int3
push
cwtl
daa
popa
ret
outsl
push
out
lods
or
mov
outsb
jl
lods
and
xchg
sub
sub
cmp
dec
into
push
xchg
mov
pop
xchg
in
ljmp
jge
or
test
pop
push
in
cs
sbb
aad
cmp
js
imul
adc
cwtl
mov
cmp
pop
insb
jp
xchg
movsb
iret
jecxz
adc
push
cmp
ljmp
mov
das
mov
sti
sbb
rclb
lcall
loope
test
push
mov
cli
dec
and
dec
repz
mov
fwait
sbb
cwtl
jae
sub
mov
inc
ljmp
leave
mov
adc
out
aaa
das
test
daa
insb
xor
movsl
ficomps
lret
inc
cmp
data16
je
cmp
pushf
jle
pop
dec
std
mov
dec
repz
push
movsb
mov
jecxz
xchg
adc
jb
inc
je
fnstenv
mov
mov
sub
sbb
rcrb
or
das
js
mov
shrb
daa
mov
sub
mov
mov
cmp
mov
cmpsl
mov
cmc
sbb
push
xor
pop
out
adc
les
icebp
jecxz
loop,pn
fscale
push
stos
push
mov
cmp
cmp
rclb
enter
arpl
testl
loope
push
cmc
dec
or
sub
lock
repz
lcall
cld
ficoms
cld
stc
mov
enter
in
push
adc
pop
mov
js
jg
jno
add
out
xchg
xor
jecxz
gs
shl
movl
loope
and
adc
xchg
test
shl
mov
dec
repz
nop
movb
sub
pop
or
add
mov
jns
imul
mov
cmp
aaa
jne
fisubrl
insb
dec
fstpt
fldcw
fs
adc
add
ja
nop
imul
addb
fbld
cmpsb
lret
sub
pop
mov
pop
mov
pushf
pushf
sub
xlat
push
mov
jae
cs
xor
sbb
pushf
xchg
fs
mov
mov
add
test
shl
dec
mov
and
lret
mov
and
das
mov
sbb
pop
mov
jg
sub
fcmovnbe
adc
scas
mulb
inc
lret
aas
shrl
test
pusha
push
fisttpl
mov
addr16
add
lsl
mov
sub
outsb
ja
mov
lds
paddsw
pop
decl
nop
and
xchg
les
std
clc
outsl
push
sub
jl
insb
lahf
adc
in
and
aaa
mov
push
insb
lods
cltd
es
push
movsb
xor
pop
scas
dec
xchg
dec
cmp
push
jae
push
lcall
push
push
sbb
shrb
sbb
lds
int3
sbb
lcall
icebp
or
stos
aaa
in
mov
ficoml
add
lcall
mov
sbb
mov
and
lea
aaa
pushf
push
icebp
push
dec
sbb
jbe
pop
mov
jae
and
mov
out
stc
shr
std
js
sar
xchg
negl
mov
push
fmuls
test
sub
adc
jmp
mov
and
push
and
out
pop
sbb
call
sub
ja
sub
fsubl
jbe
outsl
adc
shlb
pusha
jl
xchg
sub
stc
push
or
pop
movsl
pop
lods
xor
loope
jne
popa
aad
faddp
xchg
jle
shrl
movl
rorl
ljmp
dec
dec
fisubrl
les
pop
ret
imul
push
mov
jbe
pop
inc
lret
sub
inc
pop
ret
pop
mov
call
mov
mov
aam
mov
out
out
int3
push
mov
jno
scas
stc
sahf
sub
enter
jl
dec
lret
cmp
mulb
jge
cmpsb
in
test
adc
iret
pop
lods
shrl
lret
lret
cli
leave
or
ljmp
sbbl
sbb
mov
xorl
inc
loopne
add
jns
xchg
nop
pop
fwait
or
jmp
js
sbb
int3
cmp
sub
mov
xchg
or
jecxz
add
pop
mov
or
movsb
sbbb
jno
les
and
dec
push
in
les
add
or
mov
jae
inc
scas
jno
mov
je
pop
push
pop
add
lret
lret
pop
lret
ds
rcl
int
pop
mov
pop
pop
or
addb
lods
shlb
and
call
sbb
sbbb
cli
or
add
in
dec
push
mov
lock
mov
sbb
fmuls
movsb
push
stos
aas
xchg
lret
icebp
pop
popf
fnsave
mov
loop
ret
leave
pusha
cmc
and
dec
subl
mov
repz
sub
jo
out
ja
and
jnp
sub
xchg
sub
add
mov
das
mov
loope
cli
push
out
xor
xchg
dec
cmpsl
mov
xchg
sub
out
pop
pop
and
js
les
lock
jmp
mov
icebp
ds
lods
cltd
insb
shl
sti
push
sbb
dec
pop
je
stc
nop
aad
mov
jmp
sub
jle
or
inc
sbb
push
mov
or
push
out
sub
push
pop
mov
std
dec
repz
push
and
xchg
mov
stc
hlt
cwtl
mov
ret
in
outsl
pop
lock
ja
mov
ret
in
es
adc
popa
xor
xchg
xchg
aas
shl
jo
cli
cmp
mov
add
mov
cmp
lock
cltd
inc
dec
clc
ja
sub
aaa
into
in
gs
fildl
mov
aad
fcomip
stos
fisubrl
fldcw
rol
aad
push
insl
popa
pop
dec
loopne
repnz
mov
push
aam
iret
and
lret
push
push
jp
inc
scas
test
or
sbb
mov
jo
insl
mov
repnz
mov
inc
in
lahf
mov
cmp
ficoml
push
sub
and
jb
sbb
pusha
maskmovq
idivl
push
movsb
pop
adc
adc
lods
jmp
cmp
popf
cmpsl
adc
sbb
push
stos
mov
push
aad
lea
xor
and
mov
lcall
jo
pop
mov
dec
out
jl
imul
mov
cmp
shr
cmp
and
xchg
inc
adc
cmp
sub
mov
mov
mov
pop
mov
mov
xchg
aad
mov
fisttpll
dec
nop
aam
es
push
stc
ljmp
mov
adc
and
xor
aam
push
xchg
test
test
pop
xchg
xchg
jmp
aaa
sbb
mov
add
es
jle
jae
imul
push
sub
push
jmp
add
pop
lea
rclb
mov
sub
bound
sbb
lret
adc
mov
jne
aaa
das
mov
push
popa
cli
ret
ret
int
and
lods
icebp
aaa
cmc
jbe
mov
or
ljmp
xor
in
adc
dec
shr
jae
mov
inc
jne
push
movsl
xchg
sbb
rcrb
xor
push
sbb
inc
mov
jae
jge
aad
sbb
not
mov
mov
iret
jle
mov
loope
notl
in
stos
sahf
subb
mov
xor
and
push
ret
xchg
sti
ja
fistpll
jo
fildll
and
and
push
les
mov
xlat
icebp
std
mov
cmp
inc
pop
nop
xor
loop
sbb
xor
enter
lcall
mov
test
imul
mov
fnop
aam
push
mov
mov
loopne
daa
into
inc
mov
mov
outsw
push
and
icebp
add
fwait
inc
js
jnp
mull
shr
out
sahf
cmp
shll
adc
xor
sahf
adcb
stos
ds
sbb
lahf
pop
in
aaa
or
cld
imul
test
pop
sbb
addb
sarl
push
dec
xor
sbb
push
rcrl
das
inc
push
in
xor
into
gs
mov
add
push
inc
lahf
and
fdivrl
and
out
or
imul
into
or
xor
cs
and
lock
mov
iret
pop
add
scas
inc
add
jno
mov
add
mov
dec
push
out
sub
mov
pop
inc
fimull
add
stc
mov
stc
in
dec
lret
std
pusha
and
mov
dec
jnp
lea
subl
xlat
push
das
push
xor
sti
and
dec
inc
dec
nop
add
js
andl
lods
repnz
dec
fmul
std
pushf
repz
out
popa
fmul
push
push
cli
pop
jb
fs
fisubs
inc
cmpsl
int3
mov
std
insl
fstl
test
sbb
pop
or
adc
jg
cwtl
out
cltd
cs
call
cmc
mov
sub
stos
pop
shl
dec
inc
icebp
jnp
das
mov
and
sbb
lret
xchg
push
ret
lods
orl
out
pop
insb
jle
add
add
push
cmc
lock
dec
dec
cmp
adc
sahf
dec
pushf
cli
in
idivl
ds
or
and
sbb
pop
add
push
sbb
mov
and
sbb
mov
jne
insl
adc
push
mov
jb
and
movsl
or
and
outsl
xchg
ja
cmc
sub
movb
mov
xchg
sbb
inc
std
cmp
push
mov
test
test
aaa
lock
mov
sbb
mov
push
jg
xchg
lds
xchg
add
jp
sub
cli
fs
cltd
pop
cmp
ds
hlt
dec
int
insl
sbb
add
add
ret
in
lods
lea
shrl
es
orb
mov
push
repz
adc
mov
jmp
shll
and
xchg
cmpsl
jns
pop
jmp
xor
addr16
jge
jge
dec
pop
dec
popf
pop
mov
imul
cmc
jmp
dec
cmp
xchg
dec
rcrb
out
push
inc
inc
jae
das
mov
inc
pusha
push
jecxz
jl
push
mov
and
psubsb
xchg
ror
add
inc
rorl
and
mov
inc
push
xchg
mov
in
inc
sbb
stc
dec
outsb
mov
xor
stos
ret
xchg
sub
push
lods
dec
out
scas
fildll
push
dec
lahf
mov
mov
ret
aam
xor
notb
insl
outsl
insl
jg
pop
clc
stos
add
cmp
xchg
pop
pop
inc
test
lods
shlb
push
test
and
fisubrs
add
xchg
and
sbb
out
mov
aam
out
push
jmp
imul
pop
es
xchg
imul
sbb
ds
into
fdivs
imul
push
mov
pusha
idivl
push
jle
mov
adc
mov
pushf
jb
fsub
ja
pop
decb
inc
lods
adcl
andb
hlt
mov
cmp
test
sbb
aas
xchg
jg
les
fisubs
add
dec
adc
sbb
xor
sbb
push
adcl
stos
fsubrp
sub
cmp
push
cmp
xor
mull
rcrl
pop
inc
xchg
test
sub
adc
dec
movsl
lods
cmp
loope
or
push
mov
cmp
arpl
mov
dec
das
into
gs
push
dec
orb
pushf
or
imul
inc
mov
out
pop
ljmp
mov
lahf
lock
imul
pushf
sbb
cli
sti
cs
popa
loope
cs
stc
inc
xor
fwait
dec
jp
mov
addr16
js
add
mov
sbb
adc
push
mov
call
ret
sbb
mov
sbb
stc
xchg
mov
mov
leave
jns
inc
fistl
mov
or
movsl
push
push
push
or
mov
inc
add
andl
addr16
mov
xchg
add
and
out
push
fsubs
stos
mov
jo
enter
xor
imul
and
wbinvd
push
test
mov
ljmp
sahf
and
cli
fwait
shl
std
and
jne
std
push
mov
lea
mov
popf
dec
xlat
outsb
jl
test
cld
movsb
jb
pop
lret
iret
movb
xchg
cmp
mov
fistl
sbb
test
push
daa
or
scas
push
jne
cwtl
pop
xchg
push
pop
cmpsb
aad
pop
jecxz
loop
mov
sub
ds
outsb
addr16
cli
hlt
popf
andb
sub
rorl
enter
pop
cmc
mov
mov
stos
aas
sti
es
mov
add
insl
mulps
andb
jecxz
push
adc
sbb
xchg
cs
iret
dec
mov
add
pop
int
dec
lret
mov
inc
ficomps
imul
xchg
pop
fisubrs
stos
mov
test
enter
cmc
addb
leave
jb
in
out
inc
xchg
inc
lea
inc
mov
mov
jne
pop
cltd
xor
in
shrl
pop
pop
jge
in
mov
pop
lahf
rcrl
or
sbb
jno
xor
sbb
add
add
shll
pop
lahf
xor
sub
inc
out
sub
hlt
into
add
mov
into
xchg
ficomps
in
push
push
cltd
imul
or
push
shr
jns
xchg
addr16
xchg
mov
loopne
insl
das
movsb
mov
sub
fwait
dec
pop
packsswb
pop
outsl
cmp
lret
addr16
jmp
imul
dec
mov
in
jp
sbb
cltd
and
xlat
jmp
test
test
nop
cmpsl
xor
fyl2x
mov
xor
cmp
adc
or
cmp
inc
sahf
lods
ja
sbb
test
fnsave
std
cwtl
test
xchg
push
xlat
enter
cli
push
in
test
or
push
dec
inc
pop
lret
fiadds
test
std
sbb
mov
loop
data16
inc
cli
xchg
jne
mov
ja
negb
jle
ss
sub
das
cmp
dec
vmwrite
pop
repz
test
les
test
sbb
jbe
loop
jg
or
in
cmp
loopne
cmp
ljmp
push
fnsave
and
pop
mov
test
dec
out
aam
pusha
jmp
jle
cmpsl
xchg
imul
mov
mov
andl
int3
arpl
fcomp
add
mov
push
and
dec
repz
cmp
stc
mov
push
out
mov
jnp
lods
rorb
cmpsl
test
or
xor
pop
ds
cmp
jns
shrl
mov
jecxz
push
inc
sbb
lahf
sti
adc
test
pop
repz
mov
fdivrl
xchg
fs
fneni(8087
aaa
fsubs
mov
and
push
sbb
daa
test
test
push
daa
cwtl
je
test
rcr
mov
imul
imul
mov
xchg
pop
shll
inc
repnz
ficoml
cs
iret
pop
repz
gs
mov
and
pop
push
sbb
rcrb
sarb
pop
rol
xchg
sub
out
jl
and
gs
cmc
xchg
push
pop
lds
mov
pop
je
sahf
stos
and
shl
push
adc
fs
out
and
xchg
add
lea
cld
pusha
pop
dec
dec
loope
mov
cmp
mov
adcl
jl
test
cmp
daa
dec
jl
stos
int
mov
adc
stos
leave
push
cli
or
sbb
xchg
jns
jmp
data16
aas
ljmp
fbld
inc
ret
jne
jmp
mov
xor
mov
movsl
sbb
leave
xchg
divb
xchg
mov
mov
inc
mov
push
rolb
sbb
xor
je
push
cwtl
mov
stc
xor
idivl
sti
xor
sbb
jno
bt
jns
pop
jge
repz
cmp
push
in
mov
sub
rol
pop
rorb
dec
hlt
ret
sarl
shll
int
in
testl
jle
jg
mov
es
mov
and
test
pop
mov
addr16
sbb
push
in
sbb
subb
cmp
xor
add
inc
inc
movsb
dec
in
cmpsl
sbbl
and
aam
in
outsb
push
movsl
xor
andl
cltd
pop
insb
out
jecxz
int3
out
sti
int
push
clc
idivb
daa
add
cmp
cli
data16
sub
push
loop
ret
and
scas
and
lds
add
test
outsl
out
sub
add
adc
hlt
test
ret
rcl
cmp
add
ret
xor
and
ds
daa
into
ja
cmp
fwait
cmpsl
int3
mov
ljmp
push
popa
mov
sahf
lods
pop
push
jbe
cmp
in
mov
mov
aas
push
adc
adc
shrl
cmpsl
test
arpl
shrl
fsubs
jbe
lock
xchg
jge
add
add
jne
or
push
dec
loope
sbb
mov
pushf
js
hlt
dec
aaa
lret
rcl
mov
xlat
outsb
mov
or
adc
xchg
mov
je
pop
aam
stos
loopne
xchg
sub
add
lret
lods
jmp
roll
xchg
adc
fs
paddb
mov
decb
or
mov
addr16
jmp
jne
xchg
stos
jae
repz
add
popl
add
xor
pop
cmp
inc
icebp
adc
mov
mov
test
iret
ret
add
jo
jb
call
jae
aas
in
aaa
pop
and
sub
cs
add
sub
dec
das
cmp
sub
mov
sub
cmc
lcall
test
push
and
inc
jmp
xchg
cld
xchg
pop
daa
jbe
xlat
cwtl
call
rcr
sbb
jp
pushf
call
and
xchg
sub
xor
or
inc
fistpll
adc
adc
inc
int
icebp
jbe
in
das
in
pusha
cmc
jle
or
mov
xchg
pop
cmp
outsb
sbb
call
xchg
sbb
nop
inc
or
hlt
inc
lcall
inc
dec
xor
inc
push
mov
aaa
add
faddl
dec
mov
pop
lahf
stos
aas
xchg
sub
hlt
loope
jecxz
mov
mov
push
xor
in
pop
testb
sub
push
or
mov
sbbl
and
mov
xor
insl
aaa
cmp
jbe
in
push
mov
sub
push
push
lods
shrl
fwait
sub
int3
enter
in
sbb
pop
mov
int
sbb
fidivrl
pusha
in
stos
sti
pop
add
xor
je
es
shrb
insb
xor
adc
dec
pushf
outsl
rcrb
lods
mov
pusha
cmp
xor
test
push
dec
sbb
dec
lret
cmp
or
aaa
loopne
cltd
std
mov
clc
mov
xchg
test
cmpsl
mov
mov
dec
insl
dec
adc
test
imul
ja
aas
cmp
inc
xlat
mov
or
addl
popf
kmovb
mov
imul
jl
bound
xchg
pushf
fldt
xchg
ds
or
loopne
cmp
fmuls
pop
jbe
push
loopne
push
js
lock
nop
lahf
addb
xor
add
mov
mov
mov
mov
mov
cwtl
adc
sub
repz
pop
xchg
imul
lock
jno
btr
jp
xchg
jp
or
outsb
add
lcall
jmp
in
pop
lahf
iret
cmp
sbb
pop
movsb
cmp
adc
mov
jo
ret
ret
lds
push
jle
xchg
addb
push
adc
aas
imull
lds
call
dec
mov
jmp
unpckhps
ret
jae
ss
popa
fbld
inc
fstl
ds
xchg
jae
inc
cmpsl
sarl
inc
sbb
dec
insb
push
loopne
or
rclb
sbb
and
cmpsb
mov
jle
popa
add
pop
arpl
pop
ja
ljmp
inc
fcmove
mov
mov
fcmovnu
push
cmp
push
mov
cmovno
pop
push
sbb
lods
test
pop
addr16
outsb
or
mov
andb
fwait
pop
xchg
xor
je
out
jp
stos
lcall
lods
pmaxub
addr16
popa
inc
xor
je
jl
aam
loopne
or
push
dec
sbb
dec
cld
pop
lcall
adc
sub
bnd
lret
mov
mov
or
stos
dec
inc
fdivr
rcl
add
gs
or
sub
mov
add
fisubs
mov
lods
xor
lods
and
mov
cmp
fidivrl
pop
push
incl
push
in
and
dec
jno
cltd
pop
dec
dec
xchg
sub
mov
pop
push
out
push
orb
out
sbb
fdivl
call
addr16
push
js
inc
cmpsl
out
call
add
mov
arpl
gs
out
xor
mov
pop
fstps
push
add
out
stos
out
pop
dec
inc
in
mov
lods
add
xor
jns
mov
iret
aam
push
ret
lret
cmp
std
push
mov
into
jnp
mov
xor
jmp
lcall
push
dec
jecxz
sbb
xchg
mov
mov
mov
dec
mov
jge
sti
aas
mov
sbb
rcrb
pop
sarb
inc
in
xchg
pushl
add
scas
sbb
xor
in
and
mov
popa
add
into
xor
int3
inc
inc
stc
test
rcrb
xor
jge
nop
pusha
mov
xor
push
mov
pop
cmp
push
inc
pop
fidivs
cmp
cmp
cmp
shl
pop
dec
cli
mov
sarb
push
aam
jecxz
xchg
add
das
lcall
pop
push
push
mov
pushw
call
xchg
ss
push
in
popa
loop
insl
es
orl
mov
jg
adc
stos
pop
pushf
pop
sbb
aaa
jne
js
mov
push
pop
lret
dec
pop
sbb
push
add
out
pushf
cs
fcomip
int
idiv
rol
fsubr
hlt
sub
aas
pushl
sub
ss
cwtl
filds
test
mov
cs
jne
and
pushf
fmuls
rorb
cltd
mov
xchg
or
xchg
pop
jno
xlat
push
mov
jmp
stc
pop
ror
lods
faddl
pop
lret
lret
sbb
fld
rorb
enter
inc
scas
in
sti
adc
push
sub
pop
sbb
mov
xor
imulb
ret
cmpl
cmp
xor
outsb
add
adc
imul
and
pop
outsb
adc
mov
sbb
sbb
push
inc
xor
jne
inc
lret
cld
mov
stos
dec
and
sti
push
fdivp
mov
push
int3
push
push
or
xchg
sbb
jbe
imul
push
out
rcrb
sbb
lahf
stos
lds
hlt
scas
imul
push
sbbl
add
dec
inc
repz
repnz
repz
test
call
mov
lods
cmp
sbb
arpl
and
push
shrb
or
daa
enter
lcall
jmp
in
add
lods
pop
loopne
jl
jbe
jecxz
mov
push
mov
inc
xchg
nop
pop
xor
imul
pop
mov
sti
movsl
jae
mov
inc
xchg
dec
xchg
mov
xchg
fwait
lock
ds
push
popf
and
jns
lods
frstor
pop
xor
pop
dec
cli
or
mov
lds
je
or
or
ret
sub
mov
mov
lret
jle
inc
push
pop
dec
and
cs
and
dec
push
insl
hlt
xor
cmp
jne
xor
cmpsb
mov
xchg
adc
add
icebp
outsb
or
lea
push
mov
xchg
cmp
insl
repnz
pop
test
fisubrl
mull
jle
das
stos
jmp
push
xchg
int3
mov
mov
xlat
scas
jge
and
mov
push
and
mov
movsb
and
fildll
mov
lods
out
roll
push
mov
iret
push
and
mov
lods
pop
xor
jns
stc
lea
dec
mov
sub
or
lahf
ret
sub
push
mov
xchg
xchg
or
fcmovne
pop
mov
mov
test
mov
cmp
jp
xor
push
mov
add
data16
mov
fcmovnbe
push
enter
loop
call
push
outsl
push
jle
mov
lds
sti
mov
jmp
and
sub
mov
dec
icebp
fidivl
dec
sub
inc
sarl
mov
popa
mov
pop
data16
lret
rcrl
sbb
sbb
dec
dec
jl
in
testl
jg
pop
pop
aam
in
popa
add
add
mulb
push
stos
lods
inc
repnz
cmp
rclb
add
mov
and
rol
dec
mov
mov
out
cmpsb
dec
cmc
dec
ror
aaa
std
repz
mov
push
jne
stc
je
sbb
and
orw
xchg
insl
push
mov
fsubrs
mov
fidivl
das
nop
cmp
xchg
sub
lea
in
mov
ret
dec
pop
mov
inc
push
lret
and
daa
dec
int
add
jecxz
inc
xor
sti
es
in
mov
leave
rcrb
cmpsl
cmp
add
ja
mov
push
push
out
stos
and
push
in
test
push
mov
lret
fistps
mov
aam
adc
sub
lea
xor
lods
ljmp
mov
dec
mov
add
and
shll
inc
and
push
daa
dec
jecxz
ds
adc
int3
int
sbb
test
cmp
lret
popl
into
int
in
ja
inc
fwait
mov
mov
mov
ficomps
jecxz
mov
dec
out
orb
std
jp
dec
stos
in
adc
and
inc
mov
cld
mov
addr16
call
inc
loopne
ds
das
addr16
popa
cmp
in
repnz
push
adc
aad
or
mov
stos
jo
repz
inc
iret
data16
lcall
movsb
in
bound
pop
cltd
cltd
adcl
xor
fs
push
pop
ret
arpl
or
jg
stos
inc
push
lret
and
xadd
jbe
imul
push
xor
push
lcall
ret
dec
loopne
mov
lock
mov
sbb
jp
leave
or
adc
push
out
xor
pushf
inc
arpl
xchg
into
shrl
xchg
mov
adc
dec
cmp
in
das
pop
jb
xchg
lret
clc
movsb
xchg
fsubr
stos
push
pop
movsb
push
ds
fdivrs
inc
mov
xor
cld
dec
adc
ret
sbb
xor
cmp
les
pop
lcall
out
sub
ljmp
cmp
rorl
adc
popa
jns
filds
int3
and
push
loope
lahf
aam
cmp
std
mov
out
jl
jge
cmpsb
mov
push
mov
or
mov
xor
mov
sbb
cmp
pop
lock
xor
cmp
cmp
xchg
rcll
aad
enter
inc
mov
pop
sbb
lahf
les
add
xor
dec
adc
jb
popf
inc
sti
adc
outsb
in
ror
or
add
fmul
loopne
mov
jecxz
pop
cwtl
filds
and
test
popa
enter
jle
cmc
mov
sbb
hlt
push
sub
jnp
rclb
outsb
test
dec
loopne
mov
movsb
dec
ds
dec
outsl
ret
insl
mov
pop
arpl
test
and
jnp
sbbl
push
ret
aaa
dec
call
adc
test
and
stos
jmp
or
fst
cmp
jbe
pop
or
fmuls
pop
cmc
aaa
lea
cmpl
daa
call
sbb
or
aaa
pop
jnp
add
ss
mov
mov
movsl
ljmp
in
ret
ret
sbb
call
shr
and
push
icebp
mov
dec
add
fmuls
movsl
jecxz
stos
jbe
aam
mov
pop
mov
test
out
repz
mov
push
adc
or
es
cli
xor
jl
or
data16
fistps
sub
outsl
rorl
or
inc
cmpsb
bnd
and
leave
jo
cmp
icebp
test
cmpsb
mov
clc
and
call
mov
in
or
imul
cld
movd
jne
insb
adc
int
or
pop
or
xchg
mov
push
add
inc
xchg
jle
mov
mov
inc
inc
xor
xor
mov
lea
mov
jbe
xor
adc
js
xor
rcrl
jns
add
pop
pop
sbb
mov
mov
dec
aaa
pop
mov
xlat
mov
inc
addl
ret
sub
hlt
aas
push
dec
test
xchg
pop
fsub
pop
xor
scas
pop
ret
in
das
hlt
lret
into
std
xchg
add
or
push
push
inc
xlat
lods
push
sub
pop
lods
jno
pop
cmp
aaa
stos
adc
mov
mov
fiadds
int
das
xor
popa
data16
and
or
xchg
xchg
sahf
sar
xchg
xlat
jg
imul
mov
cmpsl
adc
int3
bound
jo
movsl
add
xor
sbb
adc
aam
loope
jo
add
cmp
out
aad
cmpsb
lock
sub
jle
clc
pop
loop
xchg
xor
xchg
into
gs
push
mov
inc
adc
xchg
int
inc
js
iret
cwtl
push
cltd
out
dec
mov
dec
add
mov
xor
jb
loop
mov
aam
negb
sub
ret
mov
repz
fistps
out
mov
push
das
movb
dec
mov
lcall
cmc
testb
sub
mov
daa
xchg
or
mov
movsb
xchg
jb
xlat
aam
or
cmp
jo
out
sbb
arpl
shll
push
add
arpl
jg
mov
pop
imul
notb
insb
gs
jp
jno
das
lods
lds
pop
push
loop
test
lods
fdiv
in
add
mov
xchg
cli
cmovge
leave
pusha
and
or
xorl
jbe
push
sbb
or
mov
aad
push
or
mov
add
into
sub
xchg
xor
fbstp
mov
enter
wrmsr
jno
and
dec
aad
inc
les
fstpl
fimull
fidivs
fidivl
fldcw
add
in
push
in
adc
sub
fnsave
cmp
mov
cmc
inc
pop
adc
loope
out
sub
mov
ficomps
adc
fdivrl
cmp
xor
rclb
push
icebp
nopl
sub
imul
push
cwtl
stos
push
ljmp
fadds
inc
cld
loopne
push
dec
fdivl
popf
aas
push
lahf
movsb
cli
or
or
ds
in
outsb
aam
cmpsl
lds
fsubrl
imul
popa
lock
inc
lock
and
insb
sti
rol
pop
jge,pn
xchg
add
cmp
pop
and
in
and
loope
icebp
and
nop
and
cltd
push
mov
mov
hlt
int3
adc
push
push
imul
out
cmc
and
pop
in
cld
inc
dec
mov
jecxz
cmpsb
cmc
sbb
xchg
bound
xchg
adc
xchg
jp
sub
xchg
out
and
sbb
xchg
cs
xor
sub
je
dec
xlat
mov
sti
dec
insl
or
jnp
bound
add
lea
xchg
jbe
subl
mov
dec
mov
scas
cmpl
stc
push
mov
sarb
mov
pop
push
lods
mov
daa
pusha
andb
sti
es
ret
mov
insb
or
sbb
mov
pop
push
push
pop
js,pn
sarb
jnp
pop
mov
adc
pop
sbb
jne
adc
push
mov
fistl
push
xchg
cld
stos
push
inc
jl
shrb
adc
pushl
or
mov
shlb
pop
mov
repz
and
sbb
and
jae
or
in
insb
mov
pop
mov
mov
jno
sub
and
mov
les
pop
add
jp
add
rorl
out
into
push
cli
andl
sub
mov
push
faddl
addr16
adc
cmp
pop
and
push
pop
aam
cli
popf
mov
scas
jb
loopne
push
out
jge
xchg
in
sbb
rorl
cmpsb
cmp
sub
les
das
dec
mov
mov
test
and
xchg
cmp
rol
test
add
mov
fs
cld
sbb
jns
dec
ss
push
inc
lea
sysenter
lea
es
test
push
scas
pop
shl
lea
repnz
aam
mov
repz
mov
fnstsw
lahf
mov
cmp
cld
sub
cmp
cmp
dec
add
sti
mov
sub
out
mov
shlb
push
mov
test
sbb
push
sbb
mov
inc
imul
das
loopne
aas
inc
repz
movsl
lock
insl
jns
lahf
clc
xchg
dec
push
cmp
aam
cwtl
push
loop
inc
ss
loope
aaa
enter
addr16
push
inc
scas
aas
out
stc
pop
pusha
dec
aam
or
sbb
pop
dec
je
push
bound
sti
les
push
add
cmova
pop
fucom
sbb
jno
mov
rcl
in
pusha
lods
ss
jae
cmp
sbb
xor
sub
pusha
popa
fcoml
gs
es
loop
push
in
mov
imul
sub
add
repnz
xchg
xchg
xor
bound
mov
in
or
mov
out
cmp
ja
push
cmp
sahf
sub
daa
es
jl
pushf
daa
pop
and
xchg
addl
fsub
cmp
inc
cmp
sub
add
dec
sub
pop
jae
mov
mov
sahf
adc
fwait
mov
cli
or
adc
push
mov
es
and
mov
push
sahf
xchg
iret
dec
jecxz
mov
popa
clc
mov
jns
inc
out
xchg
jg
xchg
add
divb
inc
test
adc
getsec
scas
inc
test
sub
bound
hlt
mov
xor
pop
cltd
push
mov
add
fldt
loope
je
movsl
movsb
rcl
cld
xchg
jae
aam
sub
sbb
dec
jge
fs
imul
lcall
dec
xor
sahf
lods
xor
shrb
aas
mov
shll
xchg
dec
and
push
ret
and
xchg
shl
je
adc
rcll
cmp
das
pop
and
jecxz
test
mov
aam
pop
mov
inc
jnp
jle
movb
movsl
repz
das
cmpsb
cmpl
and
push
xor
cmc
push
dec
stos
inc
nop
xchg
add
loop
mov
cmp
cmp
xor
icebp
mov
and
xchg
repnz
fstps
adc
jl
jge
jle
mov
fs
mov
insb
mov
jl
mov
je
jnp
lret
lahf
mov
stos
cpuid
icebp
je
sti
adcl
ja
scas
fld
rcrl
pop
jbe
mov
adc
jns
cs
lcall
in
jbe
ja
fnstenv
or
xor
das
nop
imul
jmp
lret
jnp
jb
pusha
jl
js
add
sub
lock
fadds
jmp
jle
jmp
add
xor
jmp
incb
push
les
jge
test
mov
mov
adc
repz
cmp
popa
hlt
jnp
fsubr
mov
sarb
add
popa
clc
mov
addb
push
loop
mov
inc
push
sub
mov
dec
add
push
arpl
fdiv
pushf
ss
adc
cwtl
sbb
xchg
sub
jb
adc
mov
pop
sub
xchg
mov
push
mov
adc
sub
movsl
scas
fildll
cld
pop
dec
mov
ja
jp
jo
test
mov
ret
js
adc
jmp
xchg
push
loope,pt
rol
sarl
push
pop
mov
push
in
mov
inc
mov
push
iret
inc
in
jmp
xor
xor
inc
sub
imul
push
cli
adc
xor
xor
pop
icebp
idiv
jae
stos
sbb
dec
lret
decb
lods
inc
xchg
pop
cmp
adc
hlt
loopne
mov
cwtl
push
nop
pop
leave
fnstcw
push
sbb
pop
pusha
push
ja
inc
mov
xchg
out
mov
pop
fisttpl
xchg
outsb
mov
and
inc
jecxz
mov
cmp
push
jno
out
lods
notl
push
fcoms
hlt
mov
mov
inc
ret
push
ret
lcall
sti
or
pushf
aas
loopne
call
and
mov
test
cmp
push
xor
or
dec
ja
pop
shlb
pop
cmp
fwait
and
fnstenv
cmp
inc
add
mov
pop
mov
adc
lret
dec
push
fiaddl
push
cmp
pusha
std
xchg
bound
cmp
and
mov
rcrb
ja
daa
push
fbld
add
xor
sub
pop
lods
add
daa
repz
xlat
in
inc
arpl
mov
int3
je
jne
lds
lret
dec
jo
dec
mov
pop
jbe
aaa
into
push
cltd
pop
sbb
not
push
faddp
ret
aad
pop
dec
xor
jnp
test
xchg
fisttps
mov
imul
xor
pop
mov
xchg
push
mov
shll
pusha
sahf
clc
lret
lds
jp
dec
lods
mov
lcall
or
repnz
outsl
iret
mov
xor
xchg
cmpsb
mov
or
in
push
sbbb
mov
mov
jge
daa
sarl
push
inc
test
cli
gs
lahf
mov
fldcw
shrl
jns
out
dec
sub
push
outsb
testl
outsb
or
popl
fs
push
jb
stos
adc
mov
and
movsl
jecxz
cld
lea
pop
es
imul
pusha
xchg
popf
jns
inc
das
mov
sbb
sbb
ss
cwtl
push
int
aam
mov
push
and
sub
xchg
sub
xor
jae
push
loope
fs
mov
cmpsb
dec
and
sbb
jb
stos
sub
pushf
addr16
mov
call
or
scas
testl
pop
jle
data16
sub
inc
inc
dec
push
push
ret
test
mov
inc
push
mov
jge
push
fwait
jl
mov
xchg
shll
mov
push
xor
jle
ret
pop
cltd
jg
or
cmp
js
push
pop
or
sub
in
push
pop
dec
test
fnstenv
ret
mov
inc
push
pop
arpl
fwait
mov
shlb
cmp
inc
push
test
and
push
in
mov
mov
jno
jp
pusha
es
push
or
dec
stos
mov
scas
movd
arpl
xchg
clc
mov
lods
fistl
inc
cmc
lods
mov
push
dec
jle
mov
imul
fsub
testb
mov
mov
pop
jmp
punpckldq
insl
and
add
hlt
mov
fsubrl
insb
in
dec
dec
xor
cmp
mov
xlat
imul
push
test
testb
imul
pop
mov
lock
mov
cmp
or
nop
rcll
lock
pop
adc
pusha
sbbb
push
push
jl
pop
lds
mov
outsl
mov
or
cmp
and
mov
cli
xchg
test
clc
and
movsl
or
repz
daa
mov
push
movsl
inc
mov
mov
xor
mov
data16
sti
push
add
dec
mov
cwtl
lret
xchg
outsb
into
lods
pop
sbb
scas
cmpl
iret
in
push
lcall
or
pushf
cmp
test
mov
mov
xor
rcll
cmp
call
adc
mov
inc
loope
test
fcom
jb
jle
push
cmp
xor
jge
mov
adc
xlat
ds
inc
arpl
add
adc
sbb
xlat
outsb
xor
ret
stos
insl
je
rorl
jmp
xchg
sbb
addr16
fdivrs
fildll
shlb
pushf
or
lds
add
out
xchg
sbb
cmpsl
mov
jns
mov
and
jne
push
xchg
cmp
in
pop
insl
sahf
mov
and
xor
xchg
push
or
mov
cmpsb
mov
repz
stos
gs
leave
push
inc
push
jno
stc
xchg
loop
or
jnp
shl
inc
lcall
sub
mov
xor
subb
in
pop
arpl
cld
sub
inc
fsubs
dec
fisttpl
adc
inc
and
push
icebp
sahf
inc
call
into
ss
out
scas
fisubrs
jle
xlat
pop
out
scas
or
jl
lods
daa
xchg
rol
or
mov
push
call
ret
rolb
shll
outsl
sbb
adc
test
vaddsubpd
mov
or
popf
shlb
imul
or
in
mov
dec
insb
andb
test
les
push
lods
sbb
and
jl
and
pop
lock
and
xor
xchg
outsb
sbb
repnz
into
pusha
cmc
test
in
imul
pop
lret
es
out
sbb
and
inc
daa
cltd
xchg
shlb
lods
dec
enter
pop
pop
inc
into
fdivs
push
outsb
jbe
sub
test
imul
lcall
dec
loop
iret
inc
movb
neg
mov
and
mov
dec
mov
in
or
or
das
jmp
cmp
sub
mov
push
mov
cmp
cwtl
mov
bound
sub
iret
jge
clc
out
in
sbb
push
cwtl
mov
das
popa
jns
lods
sti
pandn
testb
test
je
call
jnp
scas
and
pop
shrb
jbe
aad
cmp
jno
bound
pop
or
scas
in
jg
loopne
or
mov
fmull
int
andl
mov
fs
jae
mov
mov
pop
fbld
xchg
jno
xor
dec
test
lds
insb
cwtl
mov
rorb
es
hlt
andl
test
pusha
in
jo
shlb
dec
inc
or
lock
fisubrs
sub
mov
adc
cld
cmp
addr16
add
lret
fdivrl
pop
jo,pt
mov
or
mov
cld
into
adc
cld
cmpsl
push
imul
pop
ret
popf
mov
xchg
push
push
leave
and
out
cwtl
xchg
pop
out
movl
jl
cltd
and
pop
mov
adc
mul
pop
in
pop
call
sub
out
cmpsb
sub
std
sarl
dec
movsl
faddl
sub
lahf
or
popa
mov
mov
pushf
pop
mov
jbe
std
mov
cmp
dec
sub
sub
mov
adc
mov
imul
push
jae
xchg
xchg
aas
pop
inc
sbb
pop
mul
test
lret
lahf
int3
xor
rcl
nop
lods
ljmp
and
pusha
push
mov
in
test
test
movsl
sbb
in
dec
cltd
in
cmp
out
repnz
insb
test
adc
ds
jp
fwait
pop
lock
adc
jns
inc
lods
push
sub
jno
and
enter
fsubr
dec
mov
or
mov
mov
andl
sub
jae
les
cltd
roll
and
pop
aas
imul
add
out
stc
subl
xchg
adc
inc
ret
pop
lods
fsubr
fidivrs
insl
fwait
sbb
lds
xchg
inc
and
insb
push
test
ja
mov
sbb
lret
mov
stos
cmp
repnz
sbb
xor
fisubrs
jecxz
sub
sarl
and
xchg
inc
dec
inc
sub
imul
std
pop
jmp
mull
dec
sbb
mov
xlat
out
rolb
mov
test
aaa
stos
mov
inc
or
cmp
push
mov
daa
jo
jbe
pop
aaa
pop
sarb
stos
jle
popa
movsb
jmp
fsts
cwtl
mov
or
stos
mov
xchg
lods
mov
dec
mov
test
adc
xor
sub
int3
fldl
mov
or
xor
jge
or
xchg
push
jo
stos
mov
movsl
mov
cmpl
inc
lahf
dec
bound
in
sub
mov
orb
lock
in
jno
mov
cmp
es
or
sub
pop
fiaddl
lds
xchg
das
hlt
outsb
repz
out
mov
or
aad
push
adc
in
jne
pop
mov
inc
out
jnp,pn
jbe
std
jns
or
mov
scas
lock
adc
lcall
or
dec
add
xchg
inc
cld
or
lcall
loope
adc
sbb
popa
push
pop
rcrb
sbb
cltd
test
mov
testb
mov
and
ja
mov
roll
lret
jg
and
mov
or
jne
or
in
mov
nop
out
add
add
sbb
repnz
call
mov
mov
jge
out
inc
out
stc
jp
sub
sti
jg
sti
cmp
je
cmp
pop
pop
mov
ljmp
push
jne
and
mov
lahf
xor
and
js
rorb
add
pop
push
push
addr16
jae
out
or
jmp
aad
adc
xchg
rclb
sbb
jno
mov
lds
mov
insb
loope
pop
cmp
mov
ret
jle
pusha
jb
push
mov
and
lret
jmp
std
cmp
jmp
loope
repz
mov
rcrb
test
in
out
fistps
sub
dec
in
ret
pop
mov
xchg
out
mov
sub
aam
add
out
jl
data16
hlt
das
insb
xorl
sub
out
repz
pop
orl
jmp
lret
mov
test
or
adc
neg
xor
mov
jne
pushf
xor
jb
in
push
cli
mov
dec
out
jge
nop
scas
dec
sbb
sub
or
mov
shr
cld
nop
lods
dec
loop
cmp
push
or
shl
inc
dec
lds
fistpll
mov
pushf
push
inc
or
mov
cmp
insb
sub
xchg
push
outsb
add
adc
xchg
mov
push
mov
mov
in
sub
imul
test
pop
ds
mov
mov
mov
xor
dec
dec
pop
jns
or
cltd
xor
mov
ljmp
pop
pop
jp
sarl
ret
or
js
adc
xchg
jl
cmp
xor
pop
loopne
shl
dec
repz
dec
popa
or
xor
xchg
sub
mov
mov
pop
lcall
loopne
adc
cltd
sbb
pop
push
cs
or
dec
shr
lods
pop
in
dec
ds
cmc
fnstenv
add
push
mov
aaa
enter
outsl
inc
push
frndint
nop
inc
mov
or
jae
scas
loopne
es
push
or
daa
xor
cwtl
shlb
sub
jp
cmp
xchg
mov
cmp
dec
sti
inc
movsl
mov
inc
sub
cmpsl
data16
pop
leave
dec
sti
jg
sbbb
outsl
andl
pop
insl
add
mov
jbe
enter
test
add
inc
sub
std
pop
cmp
ds
sub
call
nop
mov
addb
mov
in
push
xor
dec
cmp
pushf
loopne
jecxz
jp
jmp
pop
out
js
rorl
out
mov
loopne
xchg
repnz
into
fcomps
out
decb
ss
adcb
cmp
ja
inc
sahf
mov
mov
aam
les
or
mov
stos
push
jmp
xchg
sub
sub
xor
iret
dec
frstpm(287
movsb
inc
out
cmc
pop
jecxz
dec
clc
clc
pop
push
mov
pop
inc
pusha
add
ds
scas
mov
inc
insl
cmp
add
fcoml
fadd
add
add
sub
fwait
add
mov
pop
pop
mov
jo
es
jne
fldt
xlat
lods
push
nop
inc
xchg
leave
sbb
push
jmp
adcl
or
inc
hlt
arpl
adc
testb
shll
push
iret
mov
fs
add
sbb
jnp
mov
dec
in
ljmp
inc
xchg
gs
xchg
dec
inc
adc
lret
pop
add
fwait
xlat
imul
test
data16
fdivs
loop
fwait
cmpsb
fistpl
fadd
fisttps
in
ret
loope
xchg
lcall
jmp
lods
cmp
jbe
lea
cmp
rol
imul
mov
imul
jne
addl
xchg
sbb
xor
sbb
sbb
jnp
pop
lahf
push
push
add
or
repnz
fldl
jb
sub
dec
mov
cmp
loope
jo
jns
fs
adc
push
or
inc
or
sbb
insb
insl
jge
loope
loopne
fistpl
scas
sub
adc
test
scas
jnp
or
ja
lcall
mov
xchg
add
daa
jbe
add
movsl
push
leave
push
out
cli
cmp
lcall
sbb
xchg
bnd
call
or
sar
cmp
fdivr
or
in
js
out
popa
mov
sub
out
mov
pop
fsubrl
add
pop
xchg
sub
loopne
aas
pcmpgtw
jle
jo
js
aam
insb
xchg
jle
popa
das
sti
iret
mov
adc
sub
mov
std
ud0
mov
inc
xlat
xchg
dec
mov
mov
mov
mov
jbe
shrb
sbb
sti
mov
push
adcb
ja
push
iret
pop
scas
ja
jge
push
pop
xor
insb
xor
xchg
cmp
xchg
pop
in
ja
test
test
xor
aad
jl
pop
aas
pusha
xorb
jbe
sbb
insl
cltd
jmp
fldcw
xor
adc
mov
cmp
add
fwait
and
pop
daa
les
sub
push
cmp
jo
stos
add
sbb
or
xor
loopne
hlt
adc
add
jg
pop
cmc
pop
xorb
cld
push
mov
jne
and
addr16
rcll
xlat
pop
imull
jg
add
pop
dec
repnz
ja
push
jne
cwtl
mov
mov
xchg
mov
test
dec
jo
sahf
test
pushf
insl
pop
jbe
mov
test
fstps
mov
lock
jae
and
sub
cmp
cwtl
mov
std
rcll
in
cmc
sbb
adc
mov
xor
ljmp
js
jl
or
int
scas
add
push
fmulp
jle
frstor
sub
sbb
and
popa
loop
jl
lea
push
jns
pop
cld
dec
int3
cmc
in
xlat
or
mov
loope
ret
ja
movsl
ret
xchg
xchg
and
sarb
insl
cld
mov
call
test
push
and
sarb
mov
jnp
iret
lret
pop
pop
mov
in
cmp
pop
mov
mov
xor
pop
out
cmp
cmp
pop
stos
pop
movups
cmpsl
mov
in
enter
inc
cmc
jo
insb
cli
jmp
or
mov
nop
and
add
aaa
fildll
fcmovne
push
push
mov
or
sub
loopne
dec
sub
mov
lock
pop
inc
or
out
mov
test
sub
cmpb
jg
pop
hlt
mov
sbb
sahf
lret
jmp
pop
and
lds
insl
sub
push
mov
test
adc
xchg
in
ret
jle
mov
dec
loopne
lea
stos
xor
sbb
clc
das
arpl
jmp
mov
lahf
mov
subb
cmp
cmp
lret
shrl
imul
lock
enter
sbb
sti
cmp
scas
out
es
inc
add
int
int3
lods
inc
in
push
cmp
out
out
adc
xor
adc
ss
xor
xchg
popf
mov
fucomip
movsb
stos
inc
sbb
add
lahf
pop
fnsave
enter
xor
sar
mov
pop
popa
int3
add
jp
xorb
sub
int
cmpsb
arpl
pop
hlt
fs
jnp
mov
out
std
lcall
fildl
lock
loopne
xchg
jle
fisttpll
jbe
sbb
movl
mov
mov
ds
iret
mov
inc
mov
jbe
rep
xchg
insb
mov
dec
ljmp
mov
mov
out
xor
les
adc
in
lahf
xchg
into
aaa
hlt
iret
mov
cltd
xor
enter
mov
cmpsl
push
shrd
push
pop
xor
lea
movsl
cmp
dec
nop
imul
ret
inc
adc
mov
mov
test
jbe
push
and
ret
sub
push
cld
xchg
test
lock
dec
movsb
fcomp
decb
mov
mov
jb
dec
push
fimull
test
mov
xchg
add
mov
or
bound
mov
addr16
cwtl
sub
push
aas
cmp
lea
add
xchg
add
shr
pop
pop
mov
jne
mov
std
jb
lcall
sbb
sbbb
mov
adc
ljmp
push
mov
jbe
outsl
mov
mov
sub
add
jo
ja,pn
sub
sbb
mov
pop
testl
test
lods
ljmp
insb
mov
lcall
pop
mov
mov
sub
sub
jb
rcrl
loop
xchg
inc
pop
push
add
pop
stos
or
test
xchg
cmpsl
and
jae
cltd
push
push
jb
mov
jb,pn
or
push
rcrl
rclb
iret
xchg
repz
sub
into
xchg
cmp
mov
orl
hlt
cmpsl
fs
fdivrp
cmp
add
sbb
stos
mov
shr
leave
mov
lret
test
adc
adc
sbb
mov
loop
outsl
cmpsl
push
add
lea
and
pop
adc
pushf
jge
cmpb
mov
mov
push
out
bound
xlat
icebp
mov
and
pusha
test
sbb
cltd
dec
inc
cwtl
jle
mov
cmp
cmp
cmp
vpmaddwd
in
dec
js
out
imul
nop
pop
scas
rcll
mov
push
lods
test
mov
pop
out
jmp
adc
popf
std
in
cmp
pop
mov
rolb
mov
inc
ret
fimuls
mov
cld
push
push
imul
sub
jecxz
scas
xor
mov
jmp
sub
insl
add
btr
add
repnz
decb
stos
or
flds
xchg
dec
cmpsl
xchg
xchg
xchg
out
push
imul
cmp
scas
js
gs
sbb
mov
sbb
ds
mov
out
mov
enter
jl
mov
or
call
dec
js
xchg
push
lcall
cltd
std
cmpsl
imul
les
jmp
lea
cs
push
pop
jmp
aaa
std
xchg
push
or
movsl
stos
push
xchg
jno
movzbl
mov
pop
cwtl
xchg
cmpsl
xchg
adcl
sub
push
ds
dec
lods
std
dec
movsb
testb
sub
lods
mov
mov
xor
jns
mov
loope
xchg
mov
xor
push
test
adc
scas
push
std
jbe
xchg
movsb
mov
jg
repnz
arpl
je
test
lods
xor
test
icebp
inc
push
insb
out
cmp
das
ss
data16
icebp
cld
into
pop
xor
stos
dec
cli
mov
mov
mov
rorl
xchg
cmpsb
mov
and
pop
xchg
sbb
and
and
push
adc
pop
mov
xor
push
ficompl
pop
jb
sub
in
push
mov
je
mov
in
inc
sub
sahf
cmp
mov
jo
pushf
xlat
icebp
out
dec
fwait
bound
mov
xor
jle
adc
xor
mov
aaa
xor
mov
mov
lcall
push
xor
mov
jmp
jns
push
fwait
test
push
loopne
add
inc
mov
lahf
je
mov
sbb
or
mov
add
mov
sbb
test
movsl
add
dec
cld
or
xor
call
xor
push
and
and
sub
sbb
in
dec
mov
fmuls
xchg
cmpsl
mov
dec
mov
test
lea
int
ss
push
mov
les
cmpsl
pop
jmp
or
outsl
dec
and
icebp
add
fsubrs
mov
or
xchg
mov
addr16
cmp
sbb
mov
xorl
mov
sub
push
mov
inc
or
xchg
popa
clc
or
pushf
dec
and
inc
fwait
push
mov
inc
mov
push
std
scas
scas
sahf
mov
sti
les
adc
sbb
mov
add
mov
out
push
mov
pop
add
out
sub
add
jecxz
mov
and
or
insb
sub
xor
cmp
pop
add
nop
inc
push
out
lea
in
adc
mov
push
clc
sahf
fidivrl
fwait
jb
movsb
xchg
mov
mov
mov
push
dec
int
aam
and
mov
jle
in
call
ret
fisubrl
mov
xor
mov
ret
xor
lock
dec
or
js
dec
lea
pushf
sahf
rorl
add
mov
cwtl
shlb
call
cmp
cmp
popf
std
insb
sti
loope
in
addr16
test
add
and
push
in
testl
and
icebp
test
rolb
lcall
push
lcallw
ljmp
inc
es
mov
fildl
ds
loop
cmpsb
clc
jns
test
sub
cli
and
jge
cmp
and
cltd
mov
jp
popa
outsb
repz
adc
lock
push
push
shrb
mov
cmp
out
movsb
cs
pusha
sbb
gs
or
pusha
jmp
inc
or
ret
xchg
pop
and
ja
xchg
push
or
fists
add
aaa
lahf
xchg
fnstenv
out
fcomps
dec
fldl
ss
adc
and
stos
das
sti
fwait
add
pop
jo
roll
mov
pop
mov
ret
test
or
xchg
out
cmp
mov
lods
insb
push
std
cltd
in
mov
sbb
jge
dec
xchg
sub
sbb
sbb
mov
cmpsb
cli
mov
cmp
pop
out
or
pop
cmp
mov
mov
test
les
xlat
dec
in
sbb
in
test
push
cmc
cmp
out
pop
push
fsubrp
aas
jle
jno
sub
cli
adc
add
mov
imul
sarl
les
mov
add
adc
call
cmp
cltd
addr16
add
out
popf
cmpsb
nop
iret
clc
clc
cmp
mov
jnp
pop
mov
xor
stos
cmp
and
jno
in
jmp
outsl
inc
stos
or
mov
jnp
dec
aas
xchg
outsb
popf
test
out
cld
and
and
or
rclb
sahf
out
int
add
adc
push
cmp
mov
mov
out
fcmovnb
aaa
lahf
or
inc
mov
imul
lahf
or
mov
cmc
loop
mov
std
nop
cltd
adc
int3
imul
stos
push
ja
xor
hlt
addr16
daa
in
shll
add
notl
mov
dec
pop
mov
enter
fnstenv
xor
and
fisubrl
das
pop
icebp
jp
add
cmc
jbe
lods
shrl
xorl
and
cmp
add
call
call
push
cwtl
scas
inc
xchg
testb
mov
push
jle
ret
mov
hlt
mov
mov
pop
mov
and
jne
out
lret
insb
stc
mov
outsb
pushf
stmxcsr
cmp
ret
incl
xchg
pop
lcall
pop
mov
fnstenv
lahf
sbb
xor
aaa
fdivrs
push
mov
int
ljmp
and
inc
pop
sbb
inc
shll
clc
stos
pop
lret
lret
jg
jb
in
jnp
sbb
push
push
test
mov
mov
mov
jno
out
movsl
xchg
std
imul
outsl
jnp
pop
rcrb
cmc
mov
popa
jno
inc
sahf
fisttpl
and
pop
mov
and
pop
mov
pop
aam
shl
iret
stos
cwtl
in
dec
mov
mov
xor
adc
jge
fidivs
adc
sub
and
repz
jne
in
pusha
movsl
insl
ljmp
cmp
or
mov
cmpl
mov
mov
xor
shlb
adc
in
lods
shrb
xchg
mov
push
outsb
insl
imul
pusha
mov
pop
adc
pop
pop
pushf
pop
test
out
cmp
test
mov
shrl
lea
or
lret
cmp
rcl
push
mov
xor
fdivrp
mov
mov
int3
rcl
mov
sbb
mov
jnp
mov
stos
or
jg
fsubrs
andb
cmp
and
add
and
xchg
mov
jecxz
outsb
dec
pop
outsl
sub
stos
mov
pop
dec
dec
mov
dec
add
out
mov
and
and
jl
dec
sub
jnp
fwait
arpl
push
fdivr
pop
and
sbb
xchg
daa
push
mov
loopne
lcall
pop
clc
cmpsb
push
shrl
mov
ja
xchg
pop
jp
mov
and
jbe
rolb
fsubrp
pusha
out
orb
or
cmpsl
ds
add
dec
mov
and
jns
push
test
mov
fidivrs
mov
test
and
xchg
or
cmpsb
cs
faddp
call
mov
and
push
popf
imul
shlb
mov
pop
xor
xlat
out
sbb
jno
mov
dec
jmp
and
pop
and
test
enter
adc
and
adcb
mov
jo
mov
push
aam
dec
dec
xchg
and
cmp
movsb
hlt
stos
and
xlat
rol
jp
div
pop
jb
cli
xor
sub
leave
jg
lret
or
fwait
sub
or
test
xchg
pop
mov
dec
cmp
out
pop
and
push
sub
pop
inc
add
mov
fwait
xor
add
adc
arpl
nop
mov
arpl
fistpl
popa
addl
inc
cmp
orb
jle
adc
xlat
mov
addr16
sub
iret
fs
adc
sbb
fnstcw
arpl
leave
test
pop
and
mov
mov
in
push
jge
jns
cs
iret
rclb
mov
sahf
push
adc
lret
fstpl
push
push
dec
push
mov
dec
repz
fcomps
fs
rcr
and
int
ret
xor
loopne
or
insb
data16
sbb
jbe
mov
mov
add
fdivr
insl
sub
ljmp
or
repnz
fidivrs
sub
fucom
xchg
or
dec
mov
mov
push
leave
ret
mov
adc
mov
fistpl
jecxz
pop
inc
cmp
cmp
enter
xor
mov
loop
jecxz
pop
adc
sub
jp
mov
cwtl
pusha
xlat
mov
mov
dec
dec
push
push
rcll
push
out
adc
je
hlt
dec
dec
es
push
testl
aad
stos
fsts
stos
mov
adc
inc
ja
out
xchg
icebp
inc
jg
cli
cli
jmp
jle
in
mov
stos
push
dec
lods
flds
fstpt
outsl
push
out
jnp
sbb
lea
insl
sub
movsb
dec
mov
adc
or
jae
cmc
mov
insl
les
sbb
lds
sbbb
stos
or
pop
adc
leave
jl
dec
push
sbb
mov
xor
out
rcl
sub
arpl
cli
dec
jl
mov
notb
mov
cltd
pop
xor
adc
popa
orl
leave
mov
jl
add
xchg
sub
sbb
mov
push
dec
mov
test
shl
mov
call
cmpxchg
cs
mov
addl
mov
fnsave
xor
in
jle
inc
jne
pushl
arpl
mov
addr16
cs
xor
out
pop
sub
inc
pop
xor
pushl
pusha
cmp
adc
subl
jp
xor
adc
pop
stos
mov
push
in
jnp
lods
sub
int3
and
imull
mov
xchg
movsl
shl
clc
dec
lahf
mov
dec
sbb
lret
fucomip
into
scas
std
mov
outsl
mov
out
frstor
push
popf
lcall
add
or
inc
mov
lret
push
rorb
shrb
or
aaa
mov
je
adc
mov
xor
add
xor
jns
cmp
cwtl
pusha
test
push
jo
movsb
push
and
rclb
ret
rcl
out
jb
imulb
out
or
pop
hlt
hlt
xchg
jle
sbb
adc
push
ds
lods
out
in
popf
sub
dec
mov
call
lcall
mov
fdivrs
fs
jne
mov
lret
mov
sub
sbb
repz
out
cwtl
je
lret
mov
addl
inc
jl
mov
loop
mov
push
mov
ss
cs
mov
lock
mov
aad
pop
dec
push
mov
scas
call
dec
out
push
daa
mov
mov
push
sti
inc
fcmovnb
and
das
mov
imul
call
xor
pop
push
out
jp
lret
and
or
adc
adc
xor
fbld
dec
mov
cmp
pushf
jge
mov
testl
ret
lea
xchg
fisttps
stos
jp
pop
adc
inc
push
xchg
in
rcll
fmuls
ds
into
push
int3
push
cld
movsb
jo
fmull
dec
aas
add
adc
movsl
dec
scas
mov
cli
fldt
add
cmpsl
lret
jne
les
or
ret
shr
xchg
jp
add
into
xor
jae
mov
inc
inc
addr16
les
outsb
inc
pop
add
test
movsbl
jecxz
out
push
mov
push
xor
push
test
dec
sbb
add
pop
sbb
push
xor
cld
popf
and
test
outsl
imul
jae
flds
fwait
adc
loop
jp
xchg
shrl
adc
dec
arpl
movsb
and
xchg
adc
add
add
jae
pop
mov
xor
divb
leave
pushl
adc
lcall
in
test
jb
sub
push
iret
loopne
arpl
rcrb
add
or
insb
add
or
jbe
lret
or
std
inc
dec
imulb
fiadds
cmp
jb
in
pop
jmp
inc
sub
pop
mov
adc
dec
mov
sub
fisubrl
jne
iret
xor
test
cwtl
andl
mov
int
mov
cmp
push
jp
mov
ds
iret
popa
in
dec
cmp
pop
xchg
nop
or
fdivp
js
insb
outsb
and
adc
loop
adc
inc
pop
jge
js
and
mov
xchg
adc
test
and
insl
inc
fiadds
test
cld
mov
mov
into
sti
mov
lods
dec
cmove
ss
scas
xchg
pop
scas
xchg
dec
mov
mov
and
mov
arpl
out
jle
adc
pop
cmp
mov
cmc
adc
adc
inc
cmp
xor
jmp
adc
xchg
lcall
jg
mov
insb
les
rol
push
fisttpl
lods
ljmp
push
imul
mov
pop
je
dec
shl
test
sub
jecxz
test
loopne
test
pop
roll
fs
push
push
lods
cmp
jecxz
bound
push
lods
xor
cli
xchg
sbb
jle
or
dec
lock
xchg
mov
push
xor
xchg
rcl
dec
push
cmpsb
clc
and
lods
jg
clc
dec
cmp
arpl
and
ja
loopne
fists
xlat
sbb
sub
fs
jmp
pop
inc
mov
test
mov
aad
test
sub
mov
add
aas
rclb
out
aaa
mov
push
cmp
aas
push
lea
fmuls
sbb
pop
push
out
movsl
dec
push
rcrb
test
jb
push
fnstenv
shll
test
xchg
xor
jmp
idivb
sub
mov
rclb
fsubs
sahf
xor
xlat
xor
push
mov
cmpsl
out
cltd
ja
adc
lret
mov
aad
xor
push
in
daa
adc
mov
lret
hlt
pop
dec
push
jl
cwtl
xchg
out
arpl
cmp
ret
hlt
and
push
scas
jno
dec
popa
cld
mov
mov
push
out
jo
and
pop
out
stc
xchg
inc
lret
add
push
test
aad
jns
xchg
mov
pop
adc
dec
mov
cmp
fnstsw
adc
sbb
sbb
xor
mov
inc
sub
add
adc
add
add
adc
hlt
stc
mov
icebp
out
xlat
jl
enter
lret
int
loop
addr16
sbb
lahf
push
mov
aaa
outsl
idiv
mov
cmp
add
dec
push
cmp
sbb
pop
lock
int3
inc
and
xchg
sahf
cs
aad
sub
loope
ficomps
es
sub
pop
in
into
mov
and
mov
scas
and
in
divl
subb
adc
push
push
xchg
pop
std
xor
cwtl
xor
push
inc
je
sbb
mov
bnd
push
aas
mov
jb
into
fcompl
sub
or
xchg
mov
scas
and
sti
push
negl
ss
mov
or
xor
jo
lods
ljmp
push
dec
lods
jl
add
fidivl
jb
jo
fwait
popa
jns
ret
xor
cmp
add
pop
and
addr16
iret
outsb
inc
xor
pop
bound
out
jb
shl
or
jp
adc
inc
pop
ret
loope
adc
adc
mov
jae
inc
movsl
aas
xchg
adc
mov
idivl
sahf
xchg
push
adc
sub
shrl
xor
mov
adc
rorb
out
cmp
mov
into
mov
xor
add
xchg
xor
into
gs
inc
jmp
fidivs
shll
sahf
push
mov
call
lds
add
dec
xor
adc
sub
rol
xchg
loop
xchg
popf
sbb
lock
jecxz
enter
cmp
test
add
push
stos
inc
scas
test
lods
dec
repnz
xchg
mov
sbb
shl
mov
insb
adc
mov
in
sub
dec
pop
add
movsl
in
je
mov
fnstsw
push
outsb
fsubr
stos
mov
das
xchg
mov
test
sub
insl
leave
int
cmc
mov
pop
push
cmp
insl
push
jno
aas
ljmp
clc
sub
ss
or
cmpsl
adc
das
inc
fbstp
xor
push
dec
push
inc
iret
pop
repz
mov
test
push
push
in
and
test
adc
clc
js
or
lret
xchg
cmpsb
push
es
shrl
out
mov
add
xor
repnz
pop
xchg
or
xor
pop
mov
cmp
pop
arpl
xchg
inc
test
call
dec
outsl
cmpl
divb
cmc
aam
push
mov
and
mov
sbb
jle
cwtl
mov
or
shlb
dec
adc
js
enter
jno
jno
fs
pop
mov
xchg
pop
inc
dec
inc
test
inc
push
inc
mulb
pop
push
movsb
inc
cwtl
loop
aam
mov
ret
pop
or
pop
stos
jmp
push
arpl
jb,pn
rep
xor
xchg
aas
add
mov
imul
mov
std
lods
xchg
pop
loop
push
mov
jnp
jns
shlb
imul
pushf
push
fwait
ss
jbe
push
icebp
out
daa
outsl
inc
sub
adc
movsb
jecxz
fwait
cltd
and
mov
push
insl
dec
popf
jecxz
sahf
notl
shl
or
pop
push
notl
test
shll
xchg
int3
or
aam
fnstsw
xchg
neg
sub
cmc
or
push
loope
cs
jns
int3
mov
push
or
loop
mov
enter
or
daa
mov
and
cmp
icebp
arpl
push
mov
rcrl
pop
adc
lret
fildl
sub
rolb
in
push
push
lcall
push
jmp
cmp
ret
and
or
fs
in
push
mov
imulb
fstl
push
leave
stos
mov
movsl
sbb
inc
call
pusha
bound
mov
insb
pop
popf
arpl
xchg
pop
mov
dec
jl
xchg
xor
dec
dec
bound
bound
imul
mov
testl
stos
testl
aam
push
mov
stos
out
mov
in
adc
xchg
sub
fdiv
pop
adcl
pusha
or
jns
jge
lahf
fwait
pop
sbb
outsl
mov
popf
stos
sbb
jmp
das
loopne
and
lcall
test
out
sbb
subl
aaa
cli
mov
xor
add
pop
icebp
inc
lods
lods
pop
mov
lock
aaa
ja
cmp
xchg
and
push
dec
leave
pop
int
mov
and
xchg
or
dec
aad
les
dec
je
scas
dec
pop
lret
outsb
lods
pop
addr16
pop
xchg
mov
stc
ret
jnp
andl
popf
jecxz
xchg
pop
sbbl
pushl
sub
subl
dec
or
fdivrs
push
fwait
inc
lock
inc
cld
add
pop
imul
and
pop
cmp
loope
rorb
int3
and
loopne
es
mov
jbe
xor
sub
sub
out
lods
xchg
jecxz
popf
test
repnz
daa
cltd
add
adc
addr16
out
lock
shll
mov
rcrl
or
nop
aas
xor
dec
fldcw
ljmp
or
int
test
cwtl
decb
rol
mov
int3
cs
cmpsb
in
lahf
daa
outsl
xchg
loope
push
and
cmpsb
inc
imul
bnd
jbe
pop
add
adc
lock
cmc
popa
imul
scas
mov
cmp
inc
clc
gs
movsb
in
mov
pop
sahf
and
cmpsl
push
add
xchg
test
iret
mov
fbld
or
and
std
fmull
sahf
shll
into
sub
das
cmpb
inc
daa
test
adc
mov
push
mov
mov
sbb
inc
aam
fisubs
int
inc
xlat
rorl
add
insl
xor
out
outsl
shl
mov
dec
cli
jne
shll
ror
clc
nop
dec
out
cs
adc
js
fcmovnbe
rolb
add
adc
mov
pushf
pop
mov
add
xlat
push
mov
xor
push
mov
mov
lret
xor
cmc
push
and
mov
lds
shl
xor
aaa
fyl2xp1
repnz
push
cmp
cmp
sub
sbb
xchg
shr
ficomps
cmpsl
mov
inc
movsb
xor
adc
adc
jae
notl
test
neg
dec
adc
mov
ficoml
pop
adc
xchg
jg
fidivs
in
push
test
lcall
icebp
dec
fbld
pop
mov
rclb
fs
xchg
mov
cmp
add
adc
aas
inc
dec
out
testb
mov
cmp
inc
aaa
in
pop
mov
dec
icebp
mov
pop
mov
rolb
pop
mov
push
mov
lea
push
in
std
xchg
and
loope
in
xor
fisubrs
lods
icebp
faddl
mov
dec
jecxz
pop
insl
adc
into
lcall
sub
mov
insb
bnd
lret
and
adc
insl
inc
xchg
sub
push
mov
pusha
xchg
loope
lret
pop
xor
loopne
out
pop
negl
sub
sbb
pop
cmp
cmp
addr16
sub
ja
adc
cld
cwtl
es
cmpsb
shll
lret
movl
xchg
daa
lahf
daa
pop
fcomps
mov
bnd
cmp
lcall
out
je
cmp
dec
add
iret
out
mov
stc
push
lods
jns
loopne
fs
add
ffreep
aam
jg
inc
push
sbb
aas
add
ret
test
inc
cmpsb
cmp
lods
xchg
or
pusha
repnz
jbe
test
cld
add
lods
jl
stc
mov
inc
orb
lock
pop
xchg
push
fsts
pop
lods
or
or
mov
rol
leave
jno
rcl
add
fidivs
lds
sbb
push
mov
mov
out
inc
xor
mov
cmpsb
add
or
cltd
jne
inc
cli
xor
out
test
shll
gs
inc
js
cmp
out
xor
mov
mov
or
loopne
pop
ds
xchg
pop
lahf
pop
in
movsb
xor
fdivrl
out
pop
int
push
push
adc
imul
sub
push
out
mov
sti
jle
icebp
insb
lock
sbbl
adc
and
aam
push
add
mov
lds
inc
xchg
cmp
pop
cmpsl
mov
movsb
bnd
out
mov
std
addr16
stos
push
xchg
adc
mov
inc
out
movsl
icebp
mov
into
sbb
les
xor
jecxz
mov
mov
or
pop
xcrypt-cbc
cmpsl
adc
sub
orl
nop
pandn
sub
int
ds
lcall
dec
push
fiaddl
std
jle
aaa
dec
pushf
xor
xchg
mov
push
rcr
jmp
aaa
movsb
leave
filds
int3
lcall
pop
adc
ss
dec
inc
jae
mov
or
push
inc
xchg
mov
inc
jg
js
into
push
xlat
pop
je
cmp
pushl
loope
xchg
mov
add
xor
aad
or
jno
xorb
jle
out
inc
sub
mov
sbb
sti
pusha
imull
fdivrl
cmp
int3
ficomps
lock
mov
pop
roll
sub
cmp
repnz
push
cltd
loopne
push
lock
xchg
dec
call
shl
xor
std
or
lea
adc
xchg
je
imull
pop
call
inc
and
in
push
inc
cmpsb
xchg
ja
push
adc
mov
add
pop
repz
pushf
xor
es
cmp
rol
gs
and
outsl
push
mov
fidivs
or
leave
inc
aaa
or
mov
icebp
adc
pop
sub
cmp
decb
rclb
stos
sbbl
and
arpl
ljmp
rcr
sarb
js
icebp
cmp
push
xchg
adc
xchg
aaa
pop
les
push
push
cmpsb
or
cld
aad
sbb
adc
sub
movsb
xchg
ljmp
int3
mov
pop
sbb
adc
ja
inc
dec
mov
decb
scas
mov
xor
iret
pop
das
int
inc
fimull
inc
icebp
xchg
sub
or
sub
cltd
xor
add
mov
lcall
fimull
push
cmp
mov
dec
mov
sub
pop
movb
ret
pop
pushf
sub
sbb
ljmp
mov
je
fildl
out
ss
fdivl
cmpb
adcb
jae
push
xchg
sub
ljmp
enter
andb
leave
sahf
leave
xchg
pop
cmp
lods
std
dec
dec
fmuls
push
hlt
movsb
movsb
test
imul
push
lock
ret
call
mov
xor
adc
bound
dec
sbbb
jmp
cmpsb
std
cli
inc
lods
and
cld
test
push
movsb
mov
enter
idiv
stos
push
pmullw
jle
sbb
or
or
in
addr16
sbb
push
loopne
or
je
adc
sbb
push
negl
test
xchg
stos
and
lahf
push
jmp
mov
jb
mov
lret
clc
dec
in
xor
adc
ror
adc
mov
cmp
xlat
mov
cmp
testb
insl
xchg
pop
jae
xor
scas
bound
xor
cmp
inc
pop
mov
cmp
out
aam
mov
cwtl
aas
mov
lcall
lds
inc
push
aas
jmp
sub
adcl
sub
jbe
inc
jecxz
popa
inc
fbld
add
cmp
sub
sahf
ds
shr
ss
or
mov
in
push
push
jle
pop
lods
nopl
inc
jecxz
out
jle
stos
xchg
sub
shll
in
test
mov
or
xlat
mov
sbb
mov
shl
rolb
dec
idivb
shrb
fs
das
or
iret
fcoms
nop
daa
stos
jb
mov
outsb
mov
jg
and
xchg
sub
xor
aam
cwtl
decb
jne
es
ja
ret
outsb
pop
cmp
imul
push
inc
sub
jmp
test
outsl
adc
ss
xchg
clc
push
popf
adc
in
mov
nop
jge
adc
xchg
arpl
dec
pop
dec
xor
inc
rcrb
mov
fs
fsub
mov
adc
loop
test
scas
popf
in
xor
mov
mov
pop
or
sbb
popa
rcl
cli
lds
rsm
jb
dec
mov
dec
orb
scas
bound
jle
mov
mov
sbb
lock
iret
sbb
jo
mov
das
outsl
aaa
cmp
sub
nop
jae
in
and
adc
es
xchg
inc
fwait
xor
repz
push
aas
sub
leave
pop
orb
stc
cmp
pusha
fisttpl
lods
dec
jmp
cmc
in
jae
and
xchg
pop
and
sub
inc
pusha
pop
cmp
clc
jl
mov
int
xchg
scas
or
push
stos
dec
or
inc
orl
cmp
insb
fcomps
jp
movsb
cmp
aad
test
jno
and
jo
enter
in
dec
sahf
shll
lea
ljmp
jle
daa
mov
outsb
sub
iret
pop
mov
sub
dec
icebp
pop
or
pusha
push
outsb
popf
add
push
cltd
inc
add
jl
lods
jmp
fcomi
cmpsb
adcl
sbb
sub
sbb
mov
cwtl
out
lret
jb
cmp
mov
and
jbe
push
sbb
outsl
mov
lret
clc
sahf
insl
std
test
mov
or
pop
repnz
mov
mov
popf
decl
push
sbb
jecxz
sub
pushf
scas
rol
and
insb
sub
xchg
cmpsl
or
enter
sub
inc
dec
fwait
repnz
adc
lods
cli
jmp
jecxz
test
push
in
jle
cmpsl
and
xchg
dec
lods
sbb
cmp
xchg
push
add
incl
bound
or
xor
xchg
push
mov
cmpsb
adc
mov
xor
mov
mov
jp
sbb
pop
pop
int
inc
ds
push
or
das
into
fdiv
xor
xlat
sub
out
movsl
cmp
fildl
aam
arpl
mov
dec
stos
adc
sbb
sti
js
dec
addr16
cmp
aad
cmp
mov
mov
jo
sub
cmp
data16
mov
sbb
nop
push
out
and
mov
cmp
jg
outsb
daa
in
push
or
shrl
cmpsb
sarb
jmp
pop
sbb
jns
daa
push
cmp
adc
sbb
clc
adc
nop
cmp
pop
pop
sahf
xor
dec
inc
dec
outsl
cli
cmp
jle
js
cmp
faddl
jp
subb
jo
iret
rclb
stc
lret
jmp
jl
aad
add
xchg
jge
notb
leave
mov
mov
pop
ljmp
lock
stc
xor
xchg
scas
pusha
adcb
adc
insl
sbb
mov
sub
ret
dec
inc
mov
mov
fildl
outsl
mov
add
mov
cwtl
xor
xor
sub
and
movsl
cmp
mov
mov
jnp
rolb
dec
sbb
rcrb
iret
jae
or
lock
xchg
mov
push
push
xchg
aaa
inc
jno
incl
or
adc
xor
ss
push
lahf
xor
and
mov
mov
pop
out
add
add
cmp
adc
movq
pusha
es
sub
xchg
adc
cmc
add
dec
pop
movsl
js
insl
mov
outsl
leave
jecxz
mov
adc
scas
jb
daa
jle
xchg
jne
dec
insl
xchg
jnp
jns
xor
jno
jne
or
out
loope
cmp
fists
xor
loope
popf
and
hlt
adc
inc
inc
fnstsw
push
mov
shlb
dec
ja
jp
xchg
aam
sahf
mov
stos
rcrb
imull
out
sub
cli
test
test
sarl
icebp
out
test
into
popl
cld
stos
dec
dec
cmp
decb
arpl
scas
ds
push
movsl
mov
sbb
mov
push
test
add
push
ja,pn
mov
lret
pusha
sub
dec
scas
call
mov
dec
pusha
xor
pop
imul
mov
out
scas
roll
sbb
pop
sbb
pusha
add
movsl
ja
das
test
sbbl
mov
and
pop
sbb
call
mov
pop
shr
cmp
loop,pt
call
je
or
push
dec
cmp
add
enter
pushf
lcall
push
icebp
sti
jns
sub
test
pop
fstpt
jl
imul
dec
das
pop
repnz
pop
pop
pop
adc
mov
mov
or
clc
lods
insb
inc
fdivp
add
pop
mov
iret
xchg
insb
cmpsl
mov
ficoms
xchg
mov
mov
xchg
test
int3
inc
or
mov
xchg
jb
test
test
sbb
cmp
scas
jmp
mov
clc
sbbb
rolb
in
pop
es
add
ja
jbe
jno
mov
jle
mov
inc
jmp
mov
out
test
aam
mov
push
jg
lcall
and
mov
fidivrl
into
leave
or
push
hlt
pop
push
inc
push
or
push
pop
dec
lds
int
mov
xlat
sbb
insb
nop
inc
add
ficoms
mov
xlat
cmpsb
and
mov
cmp
cmpsb
push
and
inc
popf
inc
add
mov
ret
add
cld
xchg
fsubl
stos
xor
test
inc
xchg
loopne
repz
sub
mov
mul
cli
shrb
shlb
add
lcall
jge
sub
jb
into
and
lret
jbe
pop
mov
mov
pop
or
jp
sbb
icebp
in
pusha
dec
add
dec
xor
pop
mov
cli
cwtl
mov
pop
xor
sub
aad
movl
or
mov
push
mov
addr16
push
or
rol
lea
enter
bound
cmp
sub
push
fwait
inc
jp
std
lods
ljmp
lods
lcall
cld
pop
insb
and
aaa
pop
fs
push
cmp
ret
test
mov
adc
lds
and
pusha
pop
sahf
xor
push
mov
sti
adc
ss
ljmp
pop
pop
clc
jbe
cmpsb
sub
xchg
jae
mov
inc
xchg
xor
in
ja
out
je
dec
push
cmp
lcall
mov
mov
pop
ja
movl
mov
shll
test
cld
hlt
dec
dec
mov
out
sub
xor
shrl
mov
dec
xlat
std
adc
pop
les
inc
out
cli
inc
xchg
cmp
fs
mov
in
add
adc
pop
push
les
or
mov
mov
lods
inc
out
mov
out
mov
mov
and
inc
add
aam
xor
addr16
pop
xchg
mov
test
cmpsb
cmpsb
shlb
popf
ljmp
rorb
rcrb
enter
nop
lock
mov
jle
adc
out
insb
cmc
mov
add
stos
je
jns
inc
rolb
ljmp
inc
aas
mov
call
inc
push
loopne
loop
xor
ljmp
or
push
in
fwait
ror
jl
fs
aas
dec
lret
add
jno
shl
aaa
mov
imul
das
pop
cmpsb
inc
mov
cmp
mov
push
bound
iret
int3
xlat
repz
inc
mov
adc
ss
test
mov
mov
bound
xchg
push
push
mov
imul
push
ds
fs
jns
rcl
popa
andb
inc
xchg
aas
punpckhdq
cmpsl
mov
adc
lock
pusha
testl
cmpsb
imul
and
js
and
push
cmp
push
pushf
repz
lret
les
cmp
inc
add
cmp
fs
sbb
test
loopne
int
cwtl
popw
test
fnsave
ret
lock
sarl
fldcw
rcr
pop
add
in
push
mov
int
sub
stc
mov
cld
inc
test
inc
popf
push
cmp
popa
sar
or
jg
xchg
mov
mov
rclb
mov
dec
das
loopne
sbb
lock
sub
jge
es
sbb
mov
jmp
not
aam
mov
jl
mov
lock
movsl
ret
push
jne
hlt
jbe
inc
mov
or
push
dec
xchg
sbbl
test
inc
in
jns
insl
mov
leave
test
pop
xchg
mov
sbb
sti
popa
scas
jns
adc
xor
push
push
pop
cs
das
dec
add
xchg
mov
dec
mov
aaa
fwait
cmpsl
mov
enter
inc
inc
jg
xchg
pushf
or
xchg
jnp
ret
add
push
add
mov
insb
inc
push
lds
jbe
data16
xor
in
insb
lret
sarb
jmp
lock
test
push
xor
out
lods
cmp
fidivrs
inc
andl
inc
lea
aad
jo
xlat
xchg
lcall
das
xor
int3
jo
xchg
inc
fildl
push
mov
adcb
nop
adc
add
lcall
stos
jge
stos
add
push
std
add
push
inc
sbb
and
bnd
sti
mov
int
add
mov
lds
mov
in
jle
rclb
mov
and
adc
adc
mov
or
adc
sbb
or
std
cmp
push
movsb
jecxz
lds
or
int3
add
push
and
iret
cli
mov
xor
hlt
push
add
pop
sub
andl
jg
sbb
loop
das
fwait
dec
jle
jno
xor
xchg
jo
cmp
jp
xlat
stos
jmp
xor
stos
mov
mov
xor
out
mov
loopne
andb
push
cld
mov
mov
xchg
dec
pop
rclb
mov
ret
mov
push
sub
fnstenv
mov
cmp
daa
adc
push
insl
push
xlat
cmc
xchg
aad
outsl
add
test
andl
ds
ss
mov
sti
scas
mov
ret
sub
mov
insb
mov
add
in
mov
mov
inc
jp
mov
jmp
out
jo
int3
or
rcrl
dec
xchg
fpatan
inc
jle
hlt
or
cld
add
aam
popa
and
sarb
jl
rclb
mov
xlat
jmp
int
es
int3
add
cmpsl
mov
lret
in
pushf
xchg
ficoml
push
dec
das
cmp
dec
fucomip
xchg
xor
pop
bound
sub
ss
xchg
lret
xchg
std
sub
cmp
jno
fwait
and
xor
scas
adc
ja
sti
mov
sbb
ret
in
dec
mov
fptan
push
pop
mov
movsl
icebp
sub
xchg
xor
cs
fidivs
add
imul
es
cmpsl
dec
in
stc
testb
les
es
int3
fidivs
add
rcll
lret
sbb
sbb
xchg
xor
cmpsl
mov
pop
int
pushf
iret
cmpsb
dec
repz
cmp
cs
lods
hlt
or
sbb
in
rcrl
jb
push
push
out
dec
push
dec
mov
cmp
mov
pop
call
cmpsb
test
jecxz
xchg
adc
imul
stos
jp
jecxz
in
xchg
push
fidivs
cmp
js
rorl
fldt
mov
icebp
jno
add
add
sbb
or
lods
test
inc
aad
sbb
mov
js
mov
sbbl
rcrb
xchg
mov
inc
in
repnz
cmpsl
cmp
and
fsubs
mov
nop
add
sub
insb
fisttps
in
and
iret
or
cmc
loopne
aam
popf
mov
shl
dec
mov
or
xor
xor
stos
dec
data16
cs
sbb
sti
adc
mov
arpl
and
out
clc
inc
out
fidivs
fistl
pushf
jg
fwait
xchg
shrl
repz
in
popa
adc
shlb
shll
and
mov
cld
arpl
push
xchg
lea
int
or
leave
sbb
sbb
nop
adc
jl
addr16
movsl
add
hlt
jno
push
mov
aam
lahf
call
test
repnz
mov
jae
es
andb
ljmp
push
mov
xor
shrb
dec
adc
das
popf
in
inc
lods
jmp
push
scas
nop
xchg
divb
jno
movb
pushf
dec
cmp
lret
in
sbb
or
mov
ljmp
sbb
pop
out
add
movsb
pop
scas
out
out
fisttpl
and
js
push
outsb
adc
push
push
or
dec
mov
enter
mov
jge
adc
in
push
cmpsl
or
repz
call
adc
cmpsl
out
popa
adc
mov
push
jne
lods
rcr
loopne
outsb
fwait
pop
fcmovne
in
ljmp
jmp
loopne
orb
andps
add
leave
mov
nop
push
add
testl
sub
mov
iret
arpl
hlt
jge
cmpsl
add
shlb
push
insl
fcoms
into
xlat
cvttps2pi
ret
mov
mov
add
dec
insb
repnz
adc
jp
inc
roll
out
pop
mov
dec
cmp
out
dec
lret
in
adc
sub
rep
hlt
pop
xchg
repz
shr
iret
sub
nop
push
adc
inc
out
add
mov
add
xchg
mov
add
pushf
scas
mov
xchg
pop
cmpsb
add
jbe
jns
out
push
jno
jne
hlt
push
xchg
and
or
dec
loopne
jns
hlt
outsb
adcl
js
outsb
stos
cli
sbb
sub
popf
add
mov
or
push
push
sarl
insl
jbe
ret
adc
inc
cmp
das
sbb
test
jo
jne
ret
jnp
mov
dec
push
inc
pop
lcall
xor
into
xor
ds
lds
push
je
push
cli
insb
cli
cmp
cmpsl
sti
setae
mov
loopne
jbe
xchg
jb
movsl
repz
and
stos
addr16
cmc
shll
mov
scas
call
mov
loope
sbb
loope
movsl
adc
ror
lcall
push
pop
lock
and
call
testl
or
push
test
adc
mov
sbb
repnz
xchg
mov
mov
std
or
paddusw
mov
cmpsb
add
mov
lcall
push
add
movups
mov
fmulp
orl
stos
rcl
jne
call
aad
mov
or
shrb
inc
sbb
aas
and
fwait
sub
jge
and
data16
leave
lahf
stos
repnz
je
push
pop
pop
push
mov
testl
pop
insb
inc
inc
data16
clc
pusha
imull
lock
pop
mov
movsl
mov
push
push
aam
mov
jl
push
xor
xchg
push
pusha
popf
adcb
xor
scas
or
shrb
mov
jb
cmp
les
arpl
lahf
mov
xchg
orb
jg
subl
imulb
inc
aaa
xor
ss
lahf
inc
push
into
push
movsb
repnz
inc
lret
insb
jg
push
test
mov
jbe
iret
fcomip
cmp
lcall
repz
push
inc
push
stos
daa
xchg
repz
out
xor
jb
fildll
imul
jbe
outsl
movsl
ret
mov
add
in
cmp
push
mov
movsb
jl
jae
mov
fcomi
rorb
push
mov
and
hlt
dec
xor
mov
mov
pop
mov
mov
sbb
mov
rolb
jmp
fwait
jnp
cmp
push
ret
jp
push
stos
je,pn
jecxz
inc
adc
mov
jg
shrb
mov
xor
xchg
cs
loope
dec
repnz
push
dec
daa
add
pop
outsb
push
out
andb
lods
pop
sub
adc
adc
mov
insb
fcos
lods
cmp
lcall
imull
push
mov
mov
imul
sbb
pop
fwait
ret
inc
sahf
jne
repnz
jecxz
or
pop
sbb
mov
or
stc
popa
movq
jo
cmpsl
das
repnz
jecxz
xor
cmp
enter
dec
mov
dec
es
xchg
cmp
push
testb
movsb
add
mov
ret
pushl
insl
push
sbb
cmp
pusha
testl
or
push
icebp
cmp
xchg
push
scas
arpl
xchg
popf
add
sbb
xor
pop
sub
clc
lahf
out
popa
sbb
mov
xlat
scas
inc
ja
jmp
in
addr16
jb
movsb
jne
sbbb
shlb
cmpl
push
xor
or
jb
pop
push
addr16
xchg
sub
mov
xor
gs
rcrl
rol
flds
jb
push
aas
push
jo
mov
out
mov
cmp
call
in
sbbb
xor
sub
pop
enter
lret
in
jp
gs
add
sub
mov
push
sbb
adc
ret
imul
sahf
clc
in
jnp
or
out
movb
rol
movsb
in
dec
popa
sbb
sarl
call
mov
lret
sbb
jno
fidivs
adc
xchg
outsl
dec
cmp
std
dec
xchg
dec
imul
shr
repnz
clc
cmp
fstpt
ljmp
cwtl
jnp
lea
popf
out
test
stos
jmp
xchg
shlb
mov
push
scas
les
mov
jle
xchg
dec
int3
push
cmc
fnsave
push
in
mov
test
sbb
pop
or
pop
sub
jecxz
add
mov
loop
lods
xor
insb
adc
iret
sub
inc
inc
outsl
test
cmp
sti
cmp
xor
jae
push
pop
pop
cmp
adcb
fisttps
xor
pop
scas
mov
mov
je
pop
shll
f2xm1
mov
mov
add
pushf
or
fcmove
js
jo
cmp
push
lcall
icebp
adc
push
movsl
inc
jnp
sbb
repz
imul
int3
orl
testl
adc
ret
int3
push
ret
sbb
je
pop
mov
rclb
pusha
in
cltd
rcrl
jl
outsb
ljmp
sbb
aad
sub
pop
adc
mov
loope
out
xchg
mov
fisubrl
sbb
mov
mov
lods
stc
faddl
add
jg
sbb
mov
jns
ret
pop
das
fwait
add
mov
movsb
or
push
mov
inc
aas
and
mov
lea
push
cmc
lahf
incl
or
cs
shl
adc
out
rcrl
loopne
mov
dec
jmp
js
pop
add
and
xor
push
daa
xor
mov
dec
jns
and
iret
fdivl
sbb
jp
test
loop
in
dec
add
fdivl
rcl
hlt
dec
data16
dec
call
jl
sub
out
jl
xchg
in
out
mov
jnp
insl
add
fwait
push
lock
ja
pop
jne
add
sbb
mov
lds
mov
aaa
lret
add
test
adc
dec
mov
sbb
dec
pop
incb
mov
push
in
movsl
call
push
test
outsl
mov
and
cwtl
repnz
dec
and
mov
mov
in
pop
imul
pop
mov
mov
mov
dec
cld
call
or
dec
dec
or
clc
cmp
test
stc
pop
in
xor
lea
data16
stos
xchg
cmp
sub
enter
ja
fldcw
push
mov
in
arpl
xchg
in
push
fildl
push
lret
std
enter
and
xor
or
pop
push
lods
fwait
sub
and
mov
data16
sbb
mov
pop
and
jp
ljmp
xchg
jb
shll
scas
lret
jno
mov
std
mov
or
xchg
nop
inc
fs
aaa
adc
dec
lret
repz
popl
xchg
pop
fsubrl
sub
imul
and
inc
ret
lds
in
mov
pop
lret
cmpsl
sbb
insl
int3
js
loope
jns
and
fiadds
cltd
sbb
movsb
rolb
cwtl
mov
dec
add
sub
xor
or
push
and
jb
cmpb
sbb
or
imul
pop
jns
jge
orl
and
imul
cwtl
push
ret
sbb
aas
iret
shlb
jb
inc
cltd
pop
xor
test
jmp
xchg
sub
xlat
popf
push
and
inc
fiaddl
sub
sub
test
sbb
out
into
insl
les
lret
mov
cli
cs
popf
xor
rdpmc
into
add
adc
movsb
and
xlat
jl
dec
add
pop
pop
jmp
insb
mov
xorb
xchg
mov
ja
mov
bound
pop
int3
cmp
add
int3
stos
sahf
test
push
scas
movsl
sti
adc
test
inc
push
push
sbb
or
insl
or
cli
mov
add
scas
pushf
xchg
cltd
jge
add
xchg
stos
cmp
bound
mov
fwait
pop
imul
aaa
push
xor
cmpsl
dec
cmp
sub
mov
pop
cmpsl
adc
mov
push
adc
mov
inc
mov
lock
repz
std
mov
testb
sub
imul
xor
xchg
cltd
inc
dec
mov
cmp
xchg
pop
scas
dec
aaa
mov
loope
movsl
and
cmp
je
into
lahf
and
popf
inc
je
call
or
popf
imul
std
mov
rcrb
scas
add
xor
pop
lods
rorb
bound
mov
jbe
xchg
or
int3
mov
pushf
repnz
sbb
xchg
jns
xorl
cmp
movsb
pushf
xchg
sub
mov
stos
pop
popa
je
pushf
and
mov
push
outsl
incb
inc
popf
lret
cli
testb
xlat
xchg
mov
xlat
inc
mov
inc
int
push
lret
xor
arpl
call
sub
cli
pop
test
gs
inc
fildll
nop
fwait
test
dec
and
mov
fs
sar
pop
cmpsl
add
movsl
imul
add
cmpl
or
in
es
aad
imull
jg
pop
jno
leave
fnstcw
push
mov
pop
push
outsb
jb
jl
cli
jne
movsl
in
sti
mov
sahf
dec
mov
xchg
xor
inc
add
adcl
adc
test
loopne
pusha
popf
xlat
jae
dec
aas
out
lds
jmp
out
nopl
sub
lret
xchg
or
cmp
punpckldq
decb
jb
enter
push
jne
in
cmp
push
pop
imull
sbb
js
ret
repz
out
mov
fldcw
sbb
xchg
mov
imul
push
sub
lret
sub
cmp
inc
imul
lret
daa
in
icebp
jge
in
mov
xchg
stc
lods
pop
out
ds
cwtl
arpl
and
pop
lods
mov
fs
andl
or
sarl
into
andl
xor
in
int
ja
adc
pop
push
and
jmp
jle
or
rorb
in
out
or
fmull
out
dec
addr16
mov
sub
negl
popa
mov
push
pop
lock
aaa
inc
mov
in
aad
arpl
imul
cmp
cmc
fists
testb
out
and
mov
shl
in
adc
insb
stos
adc
mov
xchg
shrl
daa
or
scas
outsl
jge
bound
mov
dec
pop
add
shrl
repz
mov
lret
es
adc
test
mov
cmp
testl
xchg
clc
or
dec
push
lahf
ss
shrl
inc
adc
movd
mov
shlb
pop
leave
fisttpl
call
loopne,pt
pop
nop
jnp
pop
hlt
imul
xchg
int3
ds
cmp
movsl
xchg
cwtl
pop
lods
mov
fldl2t
repz
sbb
xor
cmp
stos
shll
or
int
jne
jno
mov
and
xchg
std
or
xchg
pop
aaa
mov
xor
adc
ss
jp
lock
inc
and
jecxz
and
lods
xor
ja
stos
cmp
stos
fbld
mov
jbe
sub
shll
pop
push
loopne
lcall
fstpl
hlt
mov
arpl
pop
negb
and
loope
daa
leave
cmp
dec
jo
lahf
ficoml
xlat
mov
lock
mov
adc
push
mov
mov
shl
mov
jl
sbb
lcall
sub
mov
fs
mov
jns
xor
lock
xchg
call
sbb
les
fucomp
fs
gs
fwait
scas
test
sbb
movsl
inc
mov
sub
clc
pusha
imull
xor
rcrl
pushf
arpl
test
mov
sub
pop
sub
icebp
movsl
mov
xor
add
in
dec
std
xor
outsl
add
pop
cmc
xor
push
jl
mov
push
test
shll
cmpsb
popf
imulb
mov
jns
or
xor
cmp
in
cld
mov
and
enter
ds
push
or
jg
int
sub
xchg
push
pop
jp
xchg
jg
movsb
cmp
ret
jge
loop
mov
imul
or
xchg
pop
test
inc
je
lea
sarl
stc
rclb
or
adc
xchg
mov
mov
sub
mov
jmp
ljmp
adc
cmp
pop
cmc
cmp
popa
jl
push
leave
es
sbb
pop
out
xchg
enter
and
mov
xor
mov
enter
lea
xchg
dec
or
mov
inc
jl
data16
dec
adc
subl
or
insb
loopne
xlat
sahf
loope
push
mov
dec
lret
push
ror
pop
mov
das
push
sub
dec
push
jae
leave
lods
pop
shrl
mov
call
xor
push
js
pop
jae
pop
mov
aad
sub
loop
xchg
mov
ds
pop
cwtl
das
cmp
add
ret
test
xchg
cmp
xor
jl
fnsave
mov
iret
dec
sti
pop
inc
in
add
int
stos
jnp
mov
pushf
sub
int
ror
sbb
mov
fwait
dec
sub
add
cmp
sbb
add
imul
adc
or
cmpsl
cmc
pop
cmp
jbe
add
push
inc
and
addl
add
mov
inc
call
xchg
and
push
stc
jae
notb
cs
fs
cmp
sbb
add
into
shrl
lea
xor
fsubrp
pusha
jb
outsl
sub
out
lods
pop
mov
mov
sbb
insl
or
xlat
aas
outsl
rcrl
stos
inc
sti
mov
or
or
gs
int
pop
outsl
or
pop
xor
push
lret
jno
mov
dec
sub
insl
jno
js
pop
and
mov
in
inc
shll
cwtl
nop
mov
dec
scas
aam
shl
cmpl
jne
mov
in
cmp
arpl
enter
xchg
fiadds
push
lea
mov
loopne
dec
cmpsl
cmp
in
push
in
je
xchg
inc
fnsave
push
outsb
or
inc
add
cltd
mov
into
pop
movsl
push
and
lret
dec
adc
flds
sbb
and
pop
sbb
rclb
inc
iret
or
inc
xchg
jb
mov
inc
push
push
and
daa
gs
push
inc
fsts
add
fwait
ret
dec
adc
sbb
pop
cmc
mov
stos
inc
bsf
inc
mov
lret
jo
sub
aad
inc
repz
adc
mov
ficoml
xor
insl
xchg
xchg
daa
orb
mov
pop
jo
iret
sub
add
xchg
sub
dec
daa
mov
push
xor
pusha
mov
xchg
cmc
cmpsb
push
and
outsb
ret
cli
push
mov
adc
or
sbb
and
jle
pop
cmp
pop
pop
pop
sbb
and
mov
adc
aaa
pop
loopne
mov
in
mov
xchg
xchg
adc
fstp
xor
divl
jbe
xlat
cld
cmp
cltd
ja
cmpsb
sahf
mov
jg
push
lock
sub
lcall
in
sbb
xor
pop
adcb
fstpt
popa
inc
int3
xor
sbbb
jg
sub
mov
frstor
sbb
xchg
mov
inc
xor
jae
daa
add
dec
add
jnp
aam
cmp
cmc
or
adc
bound
mov
js
sahf
add
cwtl
fstpt
push
mov
out
jno
dec
daa
xor
inc
or
stc
test
test
iret
mov
mov
push
fadds
and
sub
loop
sub
pop
outsl
nop
pusha
dec
fists
mov
imul
xor
and
jne
lods
add
stos
int
xchg
jb
sahf
lcall
shl
ljmp
andl
inc
sub
jmp
xor
ret
loope
cmp
add
out
mov
clc
enter
inc
gs
inc
dec
mov
cmp
test
daa
outsl
in
cmc
insb
jecxz
xor
lret
add
sub
jle
jge
into
jg
sahf
cmc
hlt
in
subb
push
adcl
adc
loop
sbb
mov
fcompl
fsts
test
inc
fldenvs
pop
push
lods
push
mov
mov
rol
popa
cwtl
iret
adc
loop
mov
jle
stos
imul
mov
fadd
addr16
or
push
lock
pop
xor
arpl
dec
inc
lock
adc
bound
xor
mov
jbe
adc
push
outsb
and
sub
icebp
xchg
jbe
adc
addb
or
and
popf
stc
aaa
push
ror
jmp
dec
mov
mov
fidivrs
ret
aad
lock
sbb
pop
inc
call
mov
int3
test
es
mov
xchg
inc
sub
outsl
cs
shrb
mov
or
in
sub
mov
stos
jno
icebp
notl
fists
jmp
sbb
or
out
stos
fsts
mov
arpl
or
scas
push
movsl
adc
scas
inc
xor
push
fsubrl
imul
mov
xchg
in
stc
addr16
outsb
mov
jae
sahf
cmp
fadds
test
imul
pmaddwd
xchg
xor
dec
jmp
add
jae
lods
jne
fnsave
mov
jbe
add
jne
xor
stos
sbb
mull
fidivrl
mov
cld
add
xor
testb
mov
and
dec
idivb
iret
xlat
adc
adc
jnp
push
push
jno
pushf
mov
push
push
push
sarb
xchg
add
adc
mov
in
adc
clc
jge
jle
arpl
mov
sbb
xchg
scas
jge
push
stos
inc
fwait
arpl
outsl
aaa
mov
sbb
and
jecxz
push
dec
pop
loopne
adc
adc
mov
clc
aad
lea
dec
lea
ficoms
stos
shr
cli
xchg
xchg
push
test
sbb
pop
imul
scas
cmp
adc
lret
dec
xchg
inc
mov
in
aaa
adc
adc
movsl
cmpl
mov
rclb
add
push
test
fadd
mov
adc
mov
xchg
mov
faddl
in
scas
jecxz
lods
cmp
stos
jge
outsl
mov
ret
ret
cmc
lret
and
pop
stos
push
inc
movsb
lahf
daa
fisubrs
mov
push
icebp
stos
adc
mov
jbe
daa
pop
push
mov
mull
in
das
pop
sar
icebp
jg
mov
cmc
sbb
jne
sub
test
test
dec
or
popa
lods
outsl
std
je
inc
push
mov
lods
xor
imul
jge
repz
sbb
dec
cltd
xchg
out
jle
and
jno
xchg
fisttpl
xchg
std
push
sti
bound
cltd
mov
fcoml
pushf
stos
and
fsubrs
xchg
stos
fisubl
inc
addr16
xor
cltd
imul
push
sub
mov
mov
das
psubusw
add
scas
inc
jo
mov
jle
fcoms
jo
ljmp
adc
push
or
dec
mov
jge
aad
jae
push
xor
adc
mov
mov
jae
or
xlat
addr16
xchg
sub
mov
lahf
insb
insb
xchg
adc
sub
cwtd
or
idivl
xor
fwait
scas
enter
fildll
cmc
adc
or
out
and
inc
pop
sti
popf
in
das
inc
cmp
mov
cmp
loop
mov
adc
pop
out
add
in
in
ja
pop
pop
add
cmp
push
push
add
fxch
and
in
stos
or
inc
pop
sub
dec
pop
movsb
iret
xchg
dec
mov
orl
lock
xchg
in
jbe
add
pop
imul
pop
cmc
int
outsb
cmp
push
jecxz
and
cmp
and
sbbl
shrb
test
mov
dec
jns
xor
leave
or
adc
pop
inc
mov
sbb
add
mov
fildll
orb
cmp
cmp
adc
push
pop
inc
aad
ljmp
cmpsb
lods
je
mov
mov
dec
fnstenv
sti
hlt
fists
sbb
pop
mov
mov
jmp
arpl
int3
dec
rorl
xchg
sbb
inc
mov
nop
subb
sbb
mov
lahf
push
repz
imul
lret
cmc
push
xchg
daa
stos
pop
cmp
push
mov
xchg
test
adc
cmp
mov
dec
ljmp
or
or
dec
fstpt
xor
lret
sbb
inc
fimuls
shl
cmpsl
mov
shld
fadds
inc
clc
add
movsb
js
cmp
push
push
rcrb
push
dec
aas
and
push
sub
in
push
or
std
addr16
pop
mov
fcmovnu
imul
shrb
imul
push
xchg
lds
ret
mov
clc
and
push
imulb
jle
cmpsb
push
xorb
sbb
or
push
xchg
jno
in
or
mov
dec
das
xchg
loope
shl
cmp
push
cmp
mov
rcr
jne
mov
cld
xchg
out
sub
aas
mov
xchg
and
pxor
xchg
fcomps
stos
add
push
mov
push
loopne
mov
sub
fcmovbe
sbbb
or
xchg
mov
stc
adc
mov
add
lods
subb
mov
pop
adc
sbb
jnp
fcmovnb
pop
adc
in
mov
dec
outsl
push
jle
mov
es
ja
lea
xchg
xchg
mov
jge
outsl
jnp
dec
jl
mov
adc
andnps
push
sahf
xor
inc
cltd
or
and
cmp
lods
inc
sbb
pop
mov
repnz
imul
lods
push
pop
sbb
mov
ljmp
lret
movsb
cli
ljmp
push
mov
sub
aas
test
or
push
bound
jns
sbb
and
push
adc
shll
cmpsl
add
mov
into
mov
cmp
jne
push
in
jg
xor
fisttpll
jg
fcomp
imul
daa
jge
loopne
les
outsb
test
jge
jbe
ret
add
lods
in
dec
dec
fiaddl
cmp
je
dec
cmp
cmp
xor
adc
ljmp
xlat
mov
xor
add
fcoml
insl
or
hlt
mov
les
cmp
subb
test
jns
jnp
cmpsb
add
int3
sahf
call
sbbb
xchg
jge
and
into
insl
adc
sbb
dec
hlt
testb
in
data16
and
sub
sahf
xor
xchg
test
popa
orl
int3
stos
dec
jle
repnz
jg
jl
adc
jmp
lods
inc
cmpsb
adc
add
lret
arpl
push
mov
xchg
inc
fnstcw
int
das
mov
push
xchg
lahf
dec
repnz
bound
lods
sbb
cmp
aas
push
adc
mov
lret
les
inc
idivl
std
imul
dec
pop
mov
mov
cli
cmp
pop
cmp
mov
aam
pop
adc
lds
dec
sbb
test
negl
xchg
add
sbb
cmpl
mov
mov
lea
mov
insl
mov
pop
shll
and
pop
jmp
dec
xchg
jmp
in
std
pop
dec
int3
clc
cltd
stos
cs
mov
in
daa
into
loop
fisubrs
inc
pop
movsb
inc
fwait
aaa
jne
mov
cmc
loop
ja
sti
sbb
pop
pop
imul
mov
int3
mov
aam
pop
sarb
or
fdivr
mov
inc
out
add
push
out
cltd
movsl
andb
mov
xor
inc
xor
repz
cltd
xor
mov
dec
out
dec
pop
mov
lahf
xchg
mov
pop
cmp
and
sbb
iret
data16
push
cs
or
insl
insb
add
out
push
mov
jbe
push
insl
mov
adc
and
mov
inc
mov
mov
jno
adc
mov
imul
mov
mov
mov
mov
inc
scas
sbb
adc
sub
mov
orb
push
mull
xor
jg
cli
adc
mov
mov
inc
mov
pushf
dec
pop
scas
xchg
pusha
jl
dec
popf
arpl
add
pop
pop
repz
xchg
scas
test
adc
test
fidivs
adc
mov
ja
aad
sub
mov
mov
xchg
enter
shr
lods
clc
loopne
cmp
in
cwtl
outsl
pop
movsl
sub
divb
arpl
int
sbb
push
push
or
inc
cld
inc
mov
mov
arpl
sbb
or
xchg
nop
sbbl
shl
incl
adc
inc
cmp
xchg
jl
add
mov
push
dec
jbe
jmp
addr16
pop
push
test
or
pop
or
sarl
push
inc
sbb
in
cld
dec
in
ror
leave
addb
push
lahf
push
out
stos
inc
sub
sbb
add
out
jle
lcall
jne
scas
xor
int
pop
call
mov
mov
push
ret
pop
sbb
shll
addr16
xor
xor
pop
pusha
jl
lds
fistpll
lock
mov
xlat
sub
lcall
xor
pop
pop
jmp
push
xor
pop
insl
jge
xchg
subb
mov
mov
sub
loop
pop
gs
cmp
in
inc
insb
setb
out
test
and
fidivrs
pop
xor
cmpl
sbb
lock
push
mov
cmp
loopne
ja
pop
rcll
adc
or
clc
daa
xchg
inc
out
jb
scas
xor
xor
out
ds
mov
inc
dec
sub
hlt
push
sahf
fsubrs
jnp
inc
addr16
leave
push
inc
mov
mov
or
ljmp
arpl
fwait
cmp
pop
mov
add
cmp
mov
lods
pop
mov
fs
insl
xchg
add
adc
sbb
pop
push
ljmp
pushf
and
imul
inc
lods
mov
fsubl
enter
pop
lods
mov
fs
das
pop
inc
ljmp
mov
mov
scas
pop
sub
lret
fbstp
or
pop
hlt
mov
mov
cltd
in
adc
mov
aam
aad
popf
or
fisubs
push
pop
lock
lahf
es
addr16
xchg
inc
cmp
imul
imul
mov
lock
dec
out
fwait
jg
int
outsb
push
lock
jne
cmp
and
faddl
cltd
add
push
xor
and
pusha
addr16
lods
aas
adc
dec
add
pop
mov
add
aad
loopne
push
push
in
and
or
mov
pop
filds
xchg
mov
pop
mov
negb
outsl
push
out
leave
add
movsb
push
je
sbb
int
lock
fnstenv
lds
jnp
stos
sarl
mov
sbb
jbe
xor
rol
out
loopne
adc
push
xlat
push
in
push
je
fidivs
fcompl
fs
and
mov
idivl
fists
mov
and
mov
and
rol
aas
sbb
mov
imul
insb
xchg
xor
push
nop
mov
cmp
add
out
add
cmpsl
dec
out
jns
out
testb
push
bound
std
mov
inc
fdivr
inc
sbb
fwait
push
or
inc
adc
inc
iret
push
mov
out
dec
fneni(8087
fcompl
scas
dec
sbb
xchg
sub
scas
ja
and
mov
xchg
xor
les
bound
cli
cmpsl
ds
jb
addb
add
ja
and
sub
sub
pop
or
cli
and
shr
inc
jnp
lods
gs
sti
sub
pop
sub
pop
jnp
in
pop
pop
ret
iret
sarb
jg
lds
jecxz
or
es
sbb
ja
pusha
negl
test
xchg
mov
lret
mov
sbb
adc
scas
mov
mov
lock
cmp
pushf
mov
pop
push
inc
fadds
push
pusha
out
pop
loope
les
filds
popf
pop
call
or
cli
cli
xorl
or
pop
daa
scas
sbb
cmp
in
scas
inc
rcr
clc
or
pop
cli
test
cld
and
ret
or
lcall
mov
imul
mov
ja
popa
lea
outsb
cmpsl
test
push
out
xor
push
xchg
add
fisubrs
and
add
fidivl
andl
add
sahf
sbb
xchg
and
push
loop
ss
cli
loopne
lret
adc
sub
mov
mov
gs
push
leave
aad
lahf
enter
gs
adcl
dec
gs
test
cmp
fisubrs
addr16
movsl
fmul
jmp
cmp
xchg
sar
inc
je
cmpsb
test
cld
push
rorl
fidivrl
sti
ljmp
divb
lods
lods
cmp
lds
dec
add
fdivs
push
bound
or
xor
loopne
addr16
imul
in
mov
xlat
pop
dec
outsb
xchg
popa
dec
daa
mov
and
lock
aas
xchg
mov
add
push
iret
cld
mov
jl
sub
rolb
jg
push
lods
sbb
or
leave
pusha
rorl
sub
jp
xor
inc
mov
mov
jns
jg
jge
and
clc
sbb
pop
or
loopne
jb
adc
mov
notl
icebp
ror
and
inc
sub
xor
jmp
sahf
xor
lods
cltd
jns
mov
shl
arpl
test
dec
dec
in
push
pop
jge
xor
xor
cwtl
add
xor
sarl
or
jnp
push
sbb
faddl
imul
jae
shr
push
adc
out
jmp
pop
mov
sarb
out
daa
xor
mov
pop
scas
arpl
pop
insl
fs
popa
push
xor
fldcw
outsl
dec
dec
out
xor
decb
shrb
enter
push
and
shrl
sarl
jb
out
xchg
pop
mov
xor
cmp
pop
scas
cmp
imul
mov
test
inc
lret
mov
xor
fsts
or
mov
xchg
push
out
aam
or
mov
or
mov
cmp
cmp
dec
loop
sub
call
inc
jbe
lock
fisttps
push
cmp
xchg
mov
imul
movb
test
sahf
xor
fwait
add
xchg
hlt
mov
sbb
sbb
mov
les
iret
ss
cmpsl
jno
push
lods
mov
movsl
inc
in
adc
cmp
jl
cmp
jl
inc
movsl
push
movsb
cmp
aaa
or
dec
dec
mov
mov
xor
ja
pop
mov
xchg
imul
stos
cs
pop
test
out
inc
pop
jo
test
dec
les
ss
cmp
ret
xchg
and
xchg
push
inc
into
lds
loope
mov
ret
aas
cmp
call
mov
stos
mov
in
jmp
enter
mov
mov
xchg
pop
shll
jo
ss
add
or
loopne
js
sbb
mov
jge
hlt
mov
ret
push
std
popf
clc
jp
divl
int3
sub
test
test
sbb
pop
shr
call
dec
mov
push
scas
rorl
fstps
mov
dec
push
mov
cmp
in
dec
outsb
push
out
adc
mov
dec
xchg
in
stc
sub
ret
lds
insl
dec
bound
or
push
out
and
adc
pop
jl
jle
cmp
fildll
iret
shrb
cmp
std
jg
mov
mov
inc
lcall
sti
pop
xor
test
insb
cmp
push
mov
pop
mov
jecxz
jp
xchg
push
les
xchg
lds
inc
sbb
or
dec
or
jno
scas
lret
ja
fldenv
in
cmp
iret
push
xchg
sub
fstpt
inc
lcall
adc
in
fisttpl
xor
cmpsl
dec
sbb
push
push
outsb
pop
outsb
jnp
cmp
jno
xchg
sub
and
and
dec
fcompl
xchg
xor
sbb
mov
clc
add
sub
xor
xor
ljmp
pop
mov
dec
xor
and
aaa
stos
sub
loop
mov
out
and
sub
and
fbld
cmp
jmp
mov
xchg
jns,pt
in
jp
xchg
loop
not
ds
test
xchg
pop
add
in
mov
movsl
push
sub
push
jmp
mov
insb
ret
mov
inc
dec
loope
xchg
pop
push
sti
sbb
hlt
lahf
mov
test
insb
insb
pop
push
sub
daa
test
jo
fcmove
add
and
lock
addb
dec
cmp
in
sub
es
or
jg
mov
dec
leave
mov
aaa
jne
mov
in
jle
pop
repnz
push
pushf
hlt
decl
and
out
push
sbb
ds
ds
add
and
int3
and
push
xchg
enter
shrl
push
mov
inc
std
rorl
lcall
inc
pushf
out
js
lcall
adc
ljmp
jno
roll
loopne
add
in
push
pop
mov
cmc
lea
movsb
jo
fdiv
mov
push
call
pop
jmp
aas
dec
imul
and
mov
in
ljmp
lods
sub
jae
loopne
adc
adc
jae
jns
gs
mov
in
scas
and
cmp
pop
cmc
shrb
pop
xchg
mov
fwait
ret
hlt
mov
rol
dec
pop
mov
jnp
push
inc
or
xchg
inc
pop
and
fmull
jnp
push
jae
pop
fistpll
xchg
pop
repnz
jne
enter
mov
jae
inc
sbb
add
rcll
je
es
stos
in
fldt
push
mov
adc
and
pop
les
or
mov
mov
scas
scas
jle
out
lods
and
add
xchg
push
or
add
pop
pop
lea
shl
cmp
mov
loop
push
arpl
push
or
into
mov
push
add
cmp
mov
pop
jo
xor
sti
shlb
mov
dec
ret
or
loope
add
mov
ljmp
std
mov
mov
or
repnz
mov
into
push
jne
or
pop
xchg
mov
or
sbb
adc
add
into
mov
int
test
dec
mov
nop
fs
xchg
lods
dec
xchg
inc
mov
sbb
xor
pop
xorb
icebp
or
jp
mov
xchg
xchg
and
pop
sub
popf
mov
sub
test
stos
ficoml
lea
sahf
or
dec
out
mov
insl
sub
in
xchg
xor
call
or
imul
icebp
in
adc
icebp
mov
lahf
mov
imul
sub
mov
daa
in
cmpsl
add
fdivs
jns
adc
push
xchg
mov
add
or
inc
sbb
in
jb
sbb
jecxz
xor
es
lock
andb
sbb
dec
inc
dec
pop
sub
dec
add
pop
cmpsl
lds
pusha
pop
xchg
sub
stc
mov
dec
mov
fmulp
mov
cli
es
cmp
fucomi
mov
dec
mov
in
sahf
in
shll
pop
out
xor
clc
loopne
and
mov
dec
in
aas
mov
sbb
mov
cltd
lods
ljmp
mov
int3
cmpsb
lock
in
sbb
mov
out
lret
popf
sub
lcall
je
dec
sbb
stos
ds
nop
aas
cltd
repz
push
xor
aas
adc
xlat
jb
mov
push
fmull
mov
je
mov
cltd
or
lock
mov
add
out
xchg
cld
xchg
cld
and
int3
cmp
fidivrs
test
sbb
add
lret
cmp
iret
pop
fnstcw
adc
mov
mov
arpl
adcl
xchg
icebp
cmpsl
clc
mov
and
test
jg
inc
in
and
or
pop
in
xor
mov
sti
dec
sbb
mov
popf
jg
or
iret
idiv
and
xor
mov
icebp
push
sub
scas
stos
cmp
xchg
sbb
shlb
push
aas
movsb
push
call
pop
mull
jmp
adc
jge
lcall
sbbl
adc
jbe
push
aaa
aad
repnz
fsub
das
adc
sbb
mov
push
popa
inc
int
mov
jl
xlat
xlat
mov
je
roll
push
jmp
lret
or
or
movsl
xchg
call
lret
hlt
push
subb
push
push
sub
mov
dec
and
sbb
cld
inc
sbb
ds
push
orb
mov
dec
ficoml
mov
repz
push
sub
push
fs
jo
mov
fsubrs
mov
lods
cmpsl
call
xor
pop
push
test
imul
out
scas
rcrl
xor
xor
roll
fisubl
pop
cmp
mov
clc
pushf
test
pop
out
enter
jl
mov
int
lcall
sti
mov
mov
int3
popa
xchg
test
jno
out
ficompl
push
mov
icebp
xchg
sub
ret
fisttpll
push
jb
or
cs
xor
incb
imul
adc
push
repz
out
and
aas
pop
add
mov
ret
leave
sub
adc
mov
loopne
lds
adcl
aas
sbb
jp
push
cmp
pushf
xor
add
leave
loopne
jecxz
xchg
enter
imul
mov
mov
test
xchg
sbb
decl
mov
push
nop
aaa
jo
data16
test
inc
push
mov
out
mov
sub
inc
loopne
pop
cmp
mov
fwait
pop
aaa
fnstenv
or
dec
test
jg
fs
adc
lods
das
mov
sub
lret
xor
fistpll
popf
mov
stc
adc
js
jecxz
negl
adc
push
xlat
loop
xchg
mov
into
mov
push
jmp
dec
push
pop
cmp
aad
shl
aaa
jne
and
jl
push
inc
leave
inc
lret
arpl
lods
in
xchg
stos
fmul
addb
aam
or
jl
mov
in
bound
les
sub
int3
cli
into
fmulp
loop
pop
pop
add
aas
pop
cmp
icebp
lock
cmpsb
lods
cmc
pop
cmp
test
cli
stc
dec
add
mov
rcl
jmp
or
out
std
test
fcmovne
push
cmp
lcall
in
xchg
fsubrl
dec
gs
cmp
lock
leave
mov
pop
cmp
ficompl
int3
cmp
push
dec
stos
negl
jge
cmp
inc
fcoms
hlt
pop
aas
filds
inc
pop
negb
cwtl
mov
loope
data16
xor
lcall
sti
sub
cmp
jecxz
in
dec
mov
mov
stos
in
shlb
ss
mov
sbb
aaa
push
xchg
subb
enter
test
into
add
xchg
sub
cmp
lret
push
es
adc
pop
and
mov
mov
fildl
mov
lahf
mov
sbbl
add
jp
lret
lods
or
adc
iret
pop
or
dec
pop
mov
lret
mov
mov
pushf
les
jg
xchg
lds
or
lock
xor
roll
popa
push
sub
mov
mov
mov
pusha
jne
pushf
adc
jmp
imul
jo
pop
outsb
mov
loopne
sbb
pop
cmp
imul
mov
push
scas
mov
jns
imul
lock
fwait
mov
into
and
arpl
inc
ret
cli
roll
sarl
push
mov
mov
jmp
xor
inc
mov
adc
mov
lahf
testl
mov
iret
push
stc
popf
xlat
es
inc
push
lds
pop
sub
arpl
call
and
loop
mov
cs
scas
movl
pop
jg
or
fiadds
mov
fwait
std
xchg
call
fdivrl
ja
rcrb
sub
repnz
jl
cwtl
adc
inc
pop
or
pop
mov
mov
icebp
icebp
fildl
push
and
xor
jl
es
hlt
pop
add
push
out
je
mov
mov
sar
pop
rcr
jnp
cmp
repnz
and
lock
push
cs
jmp
sar
pop
or
xor
add
js
push
aaa
aaa
mov
cmp
jmp
lea
pop
pusha
xor
std
adc
cmpsl
cmp
adc
jne
inc
rorb
cmp
dec
sbb
bound
sbb
cmp
dec
lods
rcl
and
mov
xchg
xchg
das
negb
inc
cmp
jg
jbe
cmc
cmpl
mov
mov
xor
popa
fwait
pop
adcl
mov
incl
inc
fwait
repnz
jo
push
or
adc
imul
cmp
push
loop
add
adc
cli
mov
dec
popa
xor
mov
pusha
loope
sbb
cmp
adc
fwait
testl
addl
xor
push
popf
pop
lcall
mov
lahf
sbb
inc
or
loope
mov
cs
out
aam
mov
sub
xchg
xor
add
lods
test
cli
lock
fistl
inc
cmpsl
and
nop
stc
push
xor
les
adc
cmp
loopne
std
push
pushf
sub
iret
push
scas
ss
jge
imul
push
pop
xchg
xchg
dec
lods
mov
mov
fiaddl
adc
jl
xchg
xor
pop
xor
dec
mov
test
jno
cmc
push
mov
icebp
enter
mov
out
lea
inc
out
loopne
push
ficoml
cmpsl
or
mov
daa
cs
xchg
je
into
xor
stos
cmc
sbbb
cli
pop
dec
sbb
adcl
adc
jnp
adc
add
push
inc
cmp
mov
dec
or
adc
inc
xchg
lret
mov
push
mov
testl
std
imul
nop
cmc
mov
sub
imul
inc
in
testb
loop
jmp
movb
pop
or
shll
repz
xchg
add
mov
jp
out
mov
xor
or
andb
nop
push
aas
shll
gs
adcb
ljmp
insl
loope
mov
jnp
pop
mov
insl
adc
sbb
insl
add
xchg
outsb
or
out
xor
popa
cmp
cmp
sub
mov
gs
inc
loopne
push
movsl
jp
sbbb
loope
movsb
dec
test
pop
je
xor
add
inc
or
inc
cltd
pop
xor
sub
lret
lahf
pushl
faddl
push
add
lds
leave
std
stos
add
xlat
push
montmul
cmpsb
inc
divl
push
mov
or
dec
into
pop
in
mov
sub
adc
test
dec
add
fdivp
jbe
mov
sub
xor
cmp
cs
pop
push
addb
cmp
inc
add
push
inc
push
out
rcr
add
pop
cmp
lahf
stos
adc
outsl
push
or
test
jg
stos
inc
sbb
add
or
out
ss
xchg
mov
mov
outsl
sbb
cmp
jbe
mov
xor
inc
adc
inc
or
inc
fadd
cmp
adcl
icebp
sbb
push
lods
btc
mov
cmp
roll
gs
inc
push
insb
and
ss
or
mov
loopne
sahf
fs
xchg
mov
xor
stc
inc
test
rcll
jl
pop
cld
dec
pop
mov
or
sbbb
jp
int
movsl
fwait
jecxz
xchg
jnp
fnstsw
rorb
mov
jle
pusha
aad
sahf
es
inc
pop
dec
es
jbe
clc
jae
sub
xchg
cmp
lret
mov
ss
and
dec
mov
or
pop
das
iret
dec
xchg
sub
jmp
sub
out
imul
pop
cmp
lods
out
out
aaa
aad
das
hlt
xchg
xor
sbb
rcll
aas
jle
out
arpl
inc
push
ss
in
sbb
xor
push
outsl
mov
mov
sbb
xorl
ret
outsl
nop
or
mov
cmpb
and
sbb
xor
or
xchg
inc
repz
mov
fcompl
fidivs
out
and
int
test
cld
insl
stc
mov
aad
imul
cmpsb
xchg
jo
roll
inc
push
inc
fnsave
pop
mov
je
cli
les
les
jp
sbb
cmp
xchg
inc
sbb
mov
rclb
lcall
sbb
xchg
mov
inc
fyl2x
std
daa
mov
xchg
and
sbb
mov
pop
xchg
sub
push
call
bound
add
xchg
mov
xchg
and
mov
cwtl
aaa
scas
inc
cmpsl
lea
lcall
dec
loop
xchg
xchg
or
testl
xor
pop
repz
lock
xchg
mov
pop
adc
sbb
jno
mov
jns
imul
mov
push
out
jnp
dec
jecxz
mov
aad
sub
lret
bound
xchg
sub
scas
push
popf
push
dec
lea
or
sti
jg
int3
arpl
stos
call
lret
inc
push
add
ret
pop
push
pop
out
inc
or
movsl
jns
push
xchg
mov
xor
frstor
or
or
sbb
xor
push
shll
sub
jmp
lods
inc
enter
mov
int
dec
inc
lret
pop
mov
adc
fwait
xchg
push
mov
inc
jbe
or
xchg
sbb
aas
adc
test
sahf
sub
std
js
cmp
out
sarb
sbb
dec
sub
insb
inc
sbb
clc
mov
int3
jge
jbe
dec
sbb
push
insb
xchg
outsb
les
adc
push
data16
mov
and
js
push
pop
rclb
cld
sbb
sub
or
sarb
xor
push
mov
andl
jb
sbb
adc
test
mov
lret
ja
lods
xor
test
sub
mov
loopne
aam
adc
pop
pop
stos
cs
out
lods
loop
clc
sbb
pop
mov
lea
fidivrs
dec
and
movsl
aaa
cmpsb
inc
ret
xchg
cs
std
and
repnz
mov
pop
and
xor
or
lret
aam
push
movsb
and
rcrb
jmp
dec
xor
test
inc
rcll
into
and
inc
cmp
inc
into
inc
pop
andb
jge
or
std
scas
cs
ret
and
mov
jmp
push
jle
mov
daa
fwait
pop
jne
je
int
pop
pop
imul
inc
cwtl
mov
or
sbb
out
ret
xchg
std
mov
icebp
nop
push
in
add
pop
sahf
pop
in
test
xchg
mov
and
mov
dec
outsl
xchg
xor
cmc
pop
mov
or
orb
or
jg
mov
xchg
out
loop
and
mov
jne
js
ds
jb
pop
into
jne
jno
nop
repnz
jmp
push
imul
incb
loope
daa
aad
ret
and
ret
sbb
fnstsw
mov
ds
insb
mov
in
and
or
fcomps
jmp
repnz
cs
fwait
xor
sub
pop
imul
xor
outsl
test
pushf
jg
mov
outsb
mov
out
loopne
fstl
jns
and
jmp
cmc
inc
mov
mov
movsl
xor
test
push
test
int
mov
dec
outsl
mov
lea
xor
inc
fsubs
lock
add
test
leave
push
mov
imul
frstor
rolb
xor
add
lret
out
adc
pop
mov
push
pop
rcrl
push
into
push
inc
pop
cmp
fdivrs
fidivl
dec
movsb
imull
jb
pop
cs
mov
shlb
cmp
mov
dec
aad
adc
pop
push
add
mov
aas
into
push
das
cmp
sbb
mov
mov
pop
mov
lods
mov
pop
or
sbb
orl
xorb
fadds
or
fwait
and
add
xchg
shrl
loopne
jns
xor
pop
add
es
popf
or
push
xchg
dec
sub
push
pop
adc
rcrb
cmp
cwtl
iret
cwtl
mov
leave
mov
lret
mov
pop
sbb
in
cmc
mov
mov
sub
insl
mov
mov
out
sub
fnstsw
mov
stc
nop
pusha
xchg
addr16
or
gs
jne
or
test
fcoml
jge
into
fisubrs
push
js
cmp
mov
pop
pop
cs
sub
insl
adc
jne
sub
inc
into
lods
cli
xor
cmp
xlat
xchg
add
xchg
mov
pop
fsub
sub
push
jmp
mov
ss
push
repnz
repnz
ds
xchg
mov
mov
adc
cmpsl
xchg
outsl
imul
cs
xor
mov
in
fnstcw
leave
ret
cmp
xor
popa
orb
aaa
pop
pop
cmp
xor
push
jns
insl
sbb
add
mov
imul
sbb
sti
cmp
push
outsb
test
mov
inc
call
add
xchg
xorl
mov
ljmp
dec
fistpl
jge
hlt
mov
xchg
js
xchg
adc
add
add
mov
repz
or
daa
mov
ret
ljmp
xchg
jnp
mov
dec
push
jno
test
es
mov
adc
sub
add
ja
pop
push
xorb
repnz
fadds
xchg
or
test
sbbb
inc
jb
addr16
lea
jno
xor
and
les
lods
adc
test
movl
iret
xchg
pop
add
ret
mov
cmpl
sbb
or
sarb
int3
jb
ja
lock
orl
jl
sub
mov
movsb
dec
and
rorl
push
or
subb
cmpsb
jle
stos
scas
ret
sub
repz
dec
push
push
les
insl
leave
mov
jle
sub
pusha
ret
stc
ret
pop
mov
fs
rol
negb
loope
lds
cmp
push
dec
pop
xor
xchg
adc
cmp
out
cmp
mov
push
stos
mov
lret
jge
ljmp
mov
mov
fists
mov
scas
xchg
aas
push
fwait
or
sbb
add
sti
pusha
outsb
aam
fwait
gs
xchg
xor
jmp
popf
sub
sbbb
sub
mov
dec
cmpsb
adc
add
aam
pushf
ljmp
mov
jns
adc
push
mov
incl
cs
pop
xchg
mov
mov
pusha
pusha
fildl
popf
stc
cmp
dec
in
cmp
notb
or
cmp
xor
lds
lea
outsl
push
sub
lret
shrl
icebp
loope
das
adc
lock
call
jl
pop
rep
test
push
adc
das
andnps
mov
add
or
sbb
or
inc
xor
inc
repz
out
and
add
scas
pop
dec
xchg
inc
lcall
xlat
cmp
adc
test
push
mov
daa
lods
jg
xlat
cmc
push
mov
mov
cmp
add
push
shlb
mov
and
repnz
in
lret
sub
aad
hlt
jbe
mov
iret
data16
in
dec
sarb
push
inc
adc
pextrw
lret
sub
mov
pop
push
imul
sbb
sbb
push
push
sbb
xor
dec
lret
inc
enter
hlt
mov
sbb
add
jae
adc
fisubl
push
sbb
in
in
jle
cmpsb
cltd
inc
mov
addb
and
scas
dec
fstp
mov
add
daa
sti
les
sti
pop
lds
movsb
push
push
and
ret
js
movsb
cmp
push
sub
sahf
cmp
sbb
xorb
jbe
mov
jmp
xor
test
push
mov
mov
xlat
jmp
or
mov
cld
lods
jae
adc
xor
add
out
call
insl
mov
mov
cwtl
cmpsb
lcall
movsl
sbb
insb
xor
or
push
mov
fbstp
inc
inc
sub
mov
mov
cmp
add
mov
jg
scas
inc
mov
ljmp
xchg
lea
mov
nop
xchg
inc
jl
adc
or
les
and
mov
test
test
mov
mov
out
insb
add
fldenv
add
jnp
push
jno
fwait
mov
cmp
mov
ss
mov
ljmp
mov
loop
push
xlat
lock
and
push
test
ror
das
jbe
test
outsl
xchg
sub
push
int3
add
and
sub
or
pushf
arpl
inc
pusha
lahf
xchg
lods
and
popa
out
ja
js
jl
movsb
inc
and
clc
shll
xchg
and
lret
dec
pop
in
push
pop
sahf
mov
addr16
mov
imul
mov
imul
xlat
test
jecxz
xor
dec
faddp
mov
popa
xor
xchg
bound
fisubs
test
xor
iret
add
mov
dec
mov
cmc
lock
adc
dec
hlt
inc
inc
mov
out
mov
hlt
xchg
cmpsb
fs
sahf
xchg
sub
scas
pop
aas
and
sub
cwtl
adc
sub
ret
xchg
fdivrs
lods
fistpll
lret
loop
add
call
push
push
mov
or
les
dec
fidivrl
notb
into
push
lahf
enter
push
add
push
add
xor
outsb
daa
pusha
mov
xchg
dec
rep
jp
fwait
or
dec
xor
jge
jnp
cmp
jae
lock
mov
xchg
mov
push
xchg
cmp
mov
cmp
and
mov
add
fidivrl
nop
daa
sub
scas
and
jge
jmp
sahf
insb
rolb
jmp
loopne
lds
outsb
mov
out
jbe
push
mov
dec
cmc
inc
cwtl
sub
pop
or
je
inc
pop
loop
sbbl
seto
mov
and
test
inc
add
loop
imul
psubsb
in
xchg
push
jle
mov
movsb
sahf
push
add
sbbl
pusha
jmp
leave
mov
jno
pushf
subb
xchg
fists
push
cmpsl
sub
es
jns
fwait
mov
lods
fstpl
arpl
inc
sbb
call
mov
test
push
push
add
mov
aad
out
mov
adc
cwtl
inc
mov
aad
out
pop
mov
mov
and
into
cmpsl
mov
jmp
enter
fucomip
mov
fistpl
dec
xor
jecxz
sub
add
xchg
sub
fnsave
das
lds
mov
push
ljmp
jno
incb
sub
ss
dec
xchg
mov
adcb
loope
cmp
dec
lahf
enter
cmp
inc
fnstcw
pop
popl
pusha
fistl
cmpsl
aas
fdivs
pop
outsl
jp
lods
mov
xchg
ss
enter
insl
or
pop
jne
or
jmp
add
jo
mov
repz
std
or
or
xor
enter
mov
shr
in
lock
xchg
mov
pusha
ss
add
ret
xlat
cld
mov
pop
cmc
ret
test
push
negl
push
lock
push
into
dec
pusha
add
test
xchg
daa
mov
pop
arpl
fcomi
or
bound
not
repz
std
inc
shrb
inc
push
mov
xchg
scas
stc
fildll
stc
jmp
or
mov
adc
mov
jecxz
leave
xchg
roll
mov
arpl
cli
scas
cli
insl
lret
gs
push
sbb
scas
xchg
stos
sbb
cwtl
dec
or
in
arpl
xchg
sbb
sti
xchg
sahf
pop
pop
sub
insb
add
les
xor
lock
in
setg
push
test
mov
fs
test
aaa
lcall
pop
out
xor
ja
popa
faddl
sbb
cmp
or
dec
popa
sti
movsl
sub
fmul
loopne
iret
scas
adc
sbb
add
sub
out
push
shll
jecxz
mov
cmc
mov
les
mov
dec
cld
cmp
mov
loopne
xlat
data16
imul
ds
sahf
pop
cmp
outsb
or
sub
mov
test
lret
push
adc
cmpsl
cmc
mov
scas
mov
mov
jb
out
jno
push
pop
jns
adc
fdivrl
neg
repnz
out
hlt
testb
shr
inc
mov
pushf
dec
ds
mov
add
or
adc
and
sub
mov
dec
pusha
arpl
scas
xchg
pop
xor
adc
and
dec
push
add
jno
pop
out
sub
clc
sbb
push
xchg
adcb
popf
push
dec
sub
stos
stos
sbb
cs
mov
sub
jne
add
test
stos
dec
xchg
lods
lahf
pop
fidivs
popl
fnsave
lods
xchg
ss
mov
cmp
icebp
xor
push
arpl
jmp
jb
sbb
jle
mulb
mov
pop
add
shrl
or
pop
stos
mov
pop
loope
or
push
popa
fldl
sub
xchg
test
fdiv
es
sbb
out
inc
jae
jns
mov
int3
pop
in
lds
pop
ret
loope
add
iret
add
add
sbb
inc
dec
pop
add
pop
ljmp
mov
fildl
cmc
xor
xchg
lret
xchg
inc
push
dec
call
cltd
arpl
int3
and
in
rcrb
cwtl
gs
ficoms
scas
and
xor
pop
mov
leave
popf
out
out
repz
imul
add
or
sub
arpl
sbb
and
push
lcall
jmp
lea
fsub
mov
mov
ss
sbb
pop
mov
pop
mov
jge
and
sahf
cltd
jmp
xor
les
adc
inc
ror
loopne
daa
nop
push
push
xchg
cmpsl
out
out
cwtl
stc
je
xor
push
pop
add
ljmp
mov
jnp
clc
inc
push
cmpsb
push
stos
pop
xchg
aad
xor
fldl
sti
sbb
adc
sbb
popf
jecxz
aad
sub
mov
cli
iret
mov
pop
adc
out
sahf
dec
xchg
imul
scas
mov
push
dec
jmp
sub
movsl
mov
mov
out
mov
and
adc
xchg
push
rcrb
mov
xchg
and
ds
jb
sbb
out
adc
scas
or
test
shr
push
test
stos
das
or
adc
shrb
cwtl
bound
xchg
test
or
repz
fsubs
sub
clc
jo
cmp
inc
ret
fbstp
mov
push
jne
pusha
shlb
test
push
movsl
stc
or
mov
sarb
in
inc
mov
mov
mov
inc
test
lock
pcmpeqb
dec
dec
xchg
imul
cmp
pop
lods
stos
mov
fstp
test
sarb
inc
test
lret
out
xchg
out
or
outsl
dec
int
xchg
inc
out
int3
pop
cmp
sahf
add
and
lods
jae
cmc
dec
sbb
es
imul
in
addr16
xchg
push
faddp
sbb
push
inc
das
inc
jne
pop
cmp
or
add
mov
xchg
jp
push
les
fstl
sbb
sbb
fidivs
in
icebp
mov
sbb
inc
jnp
ss
and
pop
mov
cmpsb
sub
mov
ret
cmp
push
fstp
or
insb
or
lods
inc
cli
sub
lcall
lret
aad
sbb
hlt
popa
andl
add
xchg
mov
jae
inc
or
std
or
jno
sub
sub
ret
jo
das
push
fistpll
lea
lret
daa
out
cltd
push
dec
mov
mov
mov
in
jl
jmp
or
addr16
mov
mov
xchg
xor
push
sbb
loop
adc
pop
and
lea
cmp
jb
rolb
pop
rcrb
xchg
jne
je
xchg
sub
xchg
addr16
push
addr16
push
sbb
adc
lods
pop
lds
repnz
mov
jb
jp
sbb
inc
xchg
cltd
sbb
fildl
or
lcall
mov
mov
sbb
mov
insb
sub
in
or
imul
sarb
adc
mov
mov
imul
jnp
jns
je
ficompl
jns
or
sbbl
negb
cmp
ljmp
mov
inc
out
push
adc
insb
cld
push
popa
add
xor
mov
or
mov
aam
loopne
mov
or
push
pushf
and
inc
popf
int
jnp
frstor
jb
jb
add
cld
loopne
test
lret
xor
pop
push
sbb
sub
enter
popf
lret
jecxz
fwait
push
push
or
sti
mov
call
xchg
xor
rcrl
cmp
xchg
lcall
cs
sub
adc
mov
jecxz
repnz
popf
hlt
pop
mov
aas
or
mov
es
or
or
jnp
mov
pop
loopne
ja
dec
rcll
sbb
mov
jns
or
push
out
inc
sbb
mov
jb
subl
inc
out
ss
lods
push
add
pop
sub
mov
fs
adc
fmul
je
push
mov
sbb
enter
adc
aad
and
push
imul
inc
sbb
mov
and
inc
fldt
cmp
subb
outsb
mov
icebp
and
or
fstpl
nop
pop
inc
stos
pop
dec
pop
into
pop
cmc
jg
aam
fwait
incl
insb
mov
sahf
or
mov
add
jb
sub
inc
dec
pop
jne
jns
lcall
sbb
adcb
std
shrd
push
sub
hlt
push
inc
cmp
inc
sbb
pushf
into
lock
sub
adc
jecxz
dec
call
or
out
xchg
stos
andl
stc
out
cli
sub
push
sbb
pop
xor
xor
pop
icebp
xchg
mov
imul
sub
push
fs
test
or
adc
je
push
out
insl
ja
and
dec
inc
dec
and
aas
jns
testb
pusha
call
mov
ret
sbb
movsl
lds
jnp
movsl
insb
gs
shll
or
jp
mov
mov
sbbl
inc
rcr
mov
xor
int
mov
and
mov
fidivs
mov
push
or
shrl
imul
shlb
callw
adc
data16
sbbb
mov
lretw
in
aas
pop
pop
xor
insb
in
sbbl
or
mov
cmc
mov
daa
outsl
mov
call
loop
sbb
xchg
ljmp
orb
repz
and
addr16
sub
fstps
push
push
dec
mov
pop
cmp
shll
fwait
or
stos
mov
lods
pop
fwait
dec
iret
data16
loop
jne
xchg
sub
in
mov
fmulp
adc
jb
push
movsb
repnz
fnstenv
push
mov
push
mov
adc
push
rcrb
xchg
out
jae
mov
imul
xor
jne
mov
out
jecxz
sub
mov
mov
rcr
fldl
adc
test
xchg
je
js
repnz
clc
leave
or
movb
xor
or
cmpsb
cmpsl
rol
fsubr
xchg
outsb
jmp
js
and
pop
push
inc
dec
dec
adc
push
pop
cmp
addr16
sbb
inc
stos
mov
test
inc
shlb
mov
inc
xlat
xlat
jbe
aaa
hlt
imul
adc
inc
call
orb
fwait
jns
lcall
adc
sub
in
jbe
call
cmp
test
sti
pop
int
jbe
ret
repz
insl
adc
push
pop
mov
pop
push
ljmp
insl
sub
repz
or
pop
dec
sbb
loope
pop
mov
xchg
pop
in
hlt
or
xchg
sub
aam
test
daa
dec
jl
mov
xor
int3
pop
and
push
inc
mov
fs
scas
lods
popa
lret
adc
adc
jno
iret
sbb
int
mov
sti
dec
icebp
fsubl
cmp
lods
jbe
out
mov
nop
mov
cltd
xlat
les
fidivrl
fnstcw
loope
push
xchg
xchg
add
leave
add
enter
inc
sbb
mov
test
push
mov
push
xlat
push
stos
orb
add
divb
cltd
std
pushf
hlt
mov
sbb
adc
xchg
mov
gs
lret
mov
popf
jle
mov
sub
pop
sahf
fstps
les
push
in
orl
popa
adc
les
cmc
into
jb
xor
pop
cmpsb
dec
sbb
xor
adc
daa
mov
or
movsb
gs
sbb
test
repnz
movsb
insl
jge
mov
lods
fiadds
xchg
adcb
jp
sub
and
lods
xchg
and
push
fisttps
shl
pushf
out
and
inc
add
aam
xchg
pop
pusha
loope
and
enter
fsub
jge
cltd
int3
pop
push
sub
push
stc
push
push
sub
adc
nop
repnz
aas
imulb
leave
mov
push
sub
and
std
filds
nop
daa
out
push
add
jno
xchg
daa
inc
sar
subb
scas
ficomps
das
or
out
sub
pop
add
dec
xor
sbb
addr16
fcmove
adc
test
sub
cmp
sub
mov
js
add
xor
xor
call
aad
stc
es
sub
sbb
clc
nop
ss
outsb
inc
dec
sar
sti
lods
push
xchg
xchg
dec
dec
mov
popf
outsl
mov
and
mov
ret
mov
mov
pop
xchg
cwtl
outsl
dec
daa
in
or
testb
xchg
mov
sub
sahf
pusha
rcr
mov
outsb
xor
cmp
push
xlat
pop
mov
mov
insl
fists
inc
add
mov
adc
pop
lods
adc
sub
or
jae
dec
ljmp
or
rcrb
out
xor
ds
add
xchg
lods
lahf
roll
mov
inc
mov
dec
fwait
in
repnz
ja
lcall
in
inc
pop
cwtl
sbb
sti
sub
ja
xor
inc
loop
pcmpgtd
pop
mov
mov
fcmovnu
pop
sbb
aad
aas
mov
dec
and
sti
mov
mov
ja
inc
scas
das
push
rorb
sahf
xor
xor
ret
stos
ss
test
adc
fmulp
or
push
sbb
cwtl
mov
int
xchg
daa
bound
aam
pop
inc
int3
gs
adc
mov
mov
and
das
ss
nop
mov
ljmp
inc
push
test
int
dec
test
and
sub
out
loope
ds
outsl
jae
iret
movsb
sub
stc
scas
inc
push
rcr
je
push
mov
ljmp
in
cmp
dec
shl
dec
sub
fwait
xor
dec
push
inc
ss
das
pop
das
xor
loope
mov
adc
jno
push
loope
mov
arpl
mov
mov
jmp
test
mov
aad
dec
xlat
loope
mov
sbb
sahf
lods
call
adc
loop
inc
lcall
inc
sub
cli
das
jmp
ror
insb
mov
cli
aad
lock
ret
add
xor
aas
xor
mov
sub
push
inc
sub
sbb
xchg
xor
test
sbb
sbb
lret
out
pop
inc
and
sub
lds
mov
pusha
fs
dec
xchg
jmp
jmp
xor
adc
adc
or
push
lock
and
cmpsb
dec
gs
les
mov
addb
xor
push
cmc
xor
lret
cld
idivl
iret
into
and
push
out
cs
xchg
and
js
cmp
pushf
mov
jmp
mov
mov
popa
rcl
push
pop
insb
aas
scas
cmp
lock
mov
jmp
repz
mov
xorl
cmp
nop
jecxz
lods
arpl
ja
test
lods
arpl
jmp
test
lahf
das
cmpsb
lock
pushf
pop
insb
scas
int
addr16
inc
xchg
jp
lds
call
data16
mov
xor
lcall
fistps
sub
int
jno
cmp
dec
scas
dec
out
cmpb
leave
iret
adc
add
push
jo
jo
push
shl
inc
ljmp
icebp
ljmp
xor
mov
gs
adc
sahf
addr16
adc
stc
lea
insb
push
xchg
dec
mul
xorb
pop
mov
lahf
jbe
imul
and
jg
in
mov
push
loop
das
fdiv
ret
mov
add
jnp
lods
xor
push
stc
les
dec
adc
in
push
cwtl
mov
mov
subl
pop
rcrb
cltd
ret
sbb
inc
dec
cmp
dec
mov
mov
in
andb
test
inc
xor
out
jg
ffreep
xchg
pop
hlt
jne
push
call
xchg
jb
stos
push
cltd
mov
adc
xor
lods
fs
mov
les
test
xchg
pop
lret
cmp
inc
out
subb
repz
insb
sbb
ja
nop
sbb
ror
dec
hlt
dec
mov
aas
jle
bsf
daa
shll
std
test
or
dec
mov
out
mov
cmp
push
out
xchg
ret
icebp
push
xor
pusha
js
ret
shrl
cld
or
mov
lock
in
fcmovb
fs
jle
imul
mov
outsb
add
rclb
sbb
stos
inc
add
leave
dec
out
out
add
pop
fwait
or
push
cmp
mov
in
mov
int
out
ja
pop
sbbb
bound
or
pushf
mov
fnstcw
mov
pushf
sbb
push
in
lds
fisubrs
sub
fs
xchg
fimull
pop
in
sarb
into
nop
push
in
push
mov
adcl
mov
cmp
aaa
jp
inc
aaa
xor
outsl
push
test
or
mov
push
xchg
inc
ljmp
jns
xlat
rolb
cltd
mov
leave
mov
std
cmp
add
jmp
sbb
dec
mov
movsl
in
data16
lret
addr16
xor
sub
mov
in
int3
sub
bound
and
cmp
je
lea
push
adc
inc
mov
xchg
sbb
or
mov
sarl
sub
int
cmpsb
or
test
mov
inc
xlat
outsl
jnp
int3
repz
pop
push
xchg
push
add
add
mov
push
stos
shll
jbe
sub
bnd
fs
and
xor
aad
es
fsubrs
enter
arpl
xor
xchg
add
and
addb
cmp
ret
cmp
push
imul
mov
sub
jmp
or
push
shlb
add
fs
and
xchg
adc
pop
bound
push
movsl
mov
pop
arpl
sbb
testb
and
cli
pushf
bound
jp
das
cld
fsubrs
pop
or
sub
ret
push
xchg
adc
dec
xchg
int
inc
or
mov
pop
aaa
xchg
leave
pusha
cs
loop
scas
xchg
jo
dec
fwait
icebp
inc
aam
mov
push
daa
loopne
jmp
push
adc
dec
sbb
add
inc
testb
mov
cltd
mov
fs
fsubr
add
mov
cmp
inc
fnsave
adc
ss
adc
mov
pop
dec
aaa
pop
mov
add
mulb
testl
sbb
inc
jecxz
inc
mov
mov
xchg
insb
nop
ret
cltd
cltd
ret
lcall
jne
lea
adc
jp
not
add
mov
repnz
ret
xchg
sub
cmp
xchg
push
mov
sbb
cmc
lock
xchg
sbb
jge
push
and
aaa
or
je
mov
sub
lahf
xchg
jmp
jno
mov
cs
inc
fmul
ret
jmp
cmc
jmp
or
inc
or
add
xchg
int3
pop
ds
add
pop
in
push
test
mov
repnz
cli
inc
mov
push
ja
push
jae
cwtl
or
cli
push
mov
aaa
call
push
iret
movsb
into
lds
inc
xlat
add
std
mov
push
or
fildll
pop
dec
pop
sbb
mov
fbstp
negl
test
dec
add
pop
add
idivl
xchg
sti
mov
repnz
xlat
ja
nop
xchg
adc
sbb
pop
cmp
jl
mov
lock
or
pop
xlat
push
cwtl
push
pop
sbb
lret
es
push
cld
idivl
dec
movsl
pop
push
into
adc
inc
out
xchg
das
int3
movsl
in
out
sub
or
nop
loop
sub
fwait
or
aaa
loopne
dec
push
adc
mov
jns
sub
fucomip
jbe
adcl
xchg
jno
leave
popa
sahf
sub
mov
and
mov
jecxz
pop
in
fdiv
cmp
lret
insb
sub
mov
adc
inc
mov
imul
cwtl
call
lcall
fdiv
rep
cli
dec
adc
jae
sbb
and
push
push
jle
jmp
dec
loopne
clc
adc
dec
mov
mov
xchg
scas
rorb
cmp
push
insl
dec
mov
call
enter
int
and
mov
or
lods
dec
xchg
jb
sub
inc
movsl
sub
pop
int3
pop
mov
or
cmp
cmc
mov
mov
cmp
pop
lret
je
fiaddl
xchg
call
std
sub
das
inc
lahf
insl
and
lahf
sbb
xchg
dec
sbb
movsl
pop
out
loope
xor
jge
pop
push
addr16
pop
add
xor
sub
push
cmp
imul
add
sbb
mov
and
mov
ds
sbb
cmp
mov
add
jle
sbbb
lahf
mov
inc
in
jbe
shrb
sarb
xlat
fdivs
mov
or
ret
xlat
xor
pusha
pop
f2xm1
mov
jge
and
xor
sbb
jb
mov
call
lcall
mov
test
mov
das
xor
arpl
mov
aad
icebp
orl
xchg
sub
jbe
mov
fldenv
jne
pop
scas
in
fcmovbe
cmc
rolb
mov
movaps
ret
fbld
fcoms
lods
or
or
cmpsl
sub
jns
addr16
imul
push
repz
add
ss
mov
jg
add
aaa
push
sti
mov
xchg
outsb
out
fistpll
into
add
fldcw
mov
aad
or
data16
in
lret
add
xchg
test
mov
xchg
cs
push
jne
pushf
cs
dec
mov
jp
xchg
out
xchg
and
loope
pushf
fadd
int
adc
call
dec
pushf
push
call
xrelease
in
lds
sbb
add
sbb
rorl
push
jmp
push
test
pop
push
es
aam
xor
mov
scas
fincstp
out
daa
xchg
xchg
mov
ret
jne
jno
jo
lods
shrl
dec
notl
dec
lock
adc
or
push
sbb
icebp
mov
cmp
cmp
fidivrl
in
push
loopne
fsubrp
orl
bswap
into
scas
cs
or
aaa
sub
arpl
mov
int
ja
cwtl
lods
sub
cmc
inc
pop
xor
insb
mov
or
inc
and
call
outsb
xchg
pop
sub
inc
push
cli
jb
lret
xor
mov
lcall
in
sbb
cmp
push
sub
in
dec
push
test
jecxz
test
into
push
sbb
out
or
lods
fcmovnu
outsl
lds
add
push
aas
aas
out
stc
icebp
loope
pop
jecxz
inc
fsubrs
pop
push
and
in
fwait
sub
jno
push
mov
popa
mov
mov
sbbb
xchg
fmulp
clc
mov
repz
popa
repnz
dec
jle
xlat
or
mov
xchg
pop
movsl
adc
mov
jle
cmp
dec
ret
pop
clc
dec
arpl
cmp
jae
dec
xchg
pop
test
call
sbb
adc
sub
movsb
xchg
and
jmp
jmp
js
decb
sbb
sub
or
ret
and
subb
mov
sti
rolb
or
loope
xor
nop
lds
mov
sub
iret
das
inc
fidivrl
xchg
inc
push
int3
arpl
sbb
andl
or
stos
stos
popf
addr16
iret
fildll
mov
jp
mov
jae
shrb
or
mov
xchg
data16
popf
sbb
and
out
cmp
in
cld
pusha
lods
insl
mov
mov
int3
inc
pushf
jb
lock
addr16
repz
mov
sarl
jno
adc
stos
xchg
add
es
repz
mov
pop
icebp
lods
push
mov
mov
mov
shlb
loopne
mov
jge
mov
lea
cmp
ds
stos
in
jg
pop
jns,pn
cltd
pop
xor
jne
xchg
ficoml
adc
and
xchg
push
lret
pop
add
xor
or
mov
addr16
fmull
stos
insl
out
fisubrs
and
sbb
test
lret
stc
mov
sbb
cmpsb
shrl
inc
cmpsb
out
cli
mov
inc
fbstp
xor
or
testb
push
push
lods
jae
stos
mov
sahf
mov
cmpsb
pop
lods
inc
push
push
add
lret
mov
xor
outsl
adc
imul
test
push
icebp
daa
sub
add
test
and
jae
cmp
xchg
adc
scas
nop
and
rcll
loop
mov
std
repnz
add
inc
mov
cmp
dec
xchg
dec
out
repz
mov
adc
int
fcmovbe
sub
jge
nop
sub
sub
iret
add
mov
sub
shlb
out
aam
cmp
mov
popf
xor
cmpsl
out
jbe
cld
adc
push
cwtl
stos
cli
addr16
stos
ret
test
jmp
push
inc
sub
aas
push
xor
in
adc
adc
orb
jae
push
mov
mov
into
and
es
adc
inc
add
jno
lret
subb
inc
flds
stos
mov
adc
cmp
inc
mov
push
movsb
and
test
sub
test
out
lcall
xchg
jecxz
inc
xor
sbb
sub
aaa
mov
imul
imul
je
cmpsb
xchg
mov
mov
lock
xchg
dec
mov
ja
mov
movsl
inc
push
mov
dec
pop
inc
adc
pushf
or
jno
dec
mov
xor
mov
dec
push
xor
add
leave
xchg
out
pop
adc
bound
push
popf
addr16
pop
mov
mov
mov
aaa
cmpl
mov
movsb
outsb
stos
dec
jecxz
scas
push
out
xchg
sbb
adc
cmp
mov
mov
cmp
data16
mov
cmpsb
push
and
jmp
xor
sub
mov
add
mov
dec
cli
lods
inc
xchg
out
jl
popf
mov
adc
sub
lods
mov
sbb
shl
mov
ja
mov
and
dec
mov
aaa
int
lods
shrb
pop
mov
or
jle
ret
gs
dec
dec
loope
bound
inc
xor
mov
pop
mov
dec
je
je
lds
mov
xchg
incl
ds
daa
lock
rorl
xor
mov
inc
or
test
lret
mov
push
cltd
cmpsb
test
xchg
lahf
add
mov
mov
lock
sbb
orb
stc
jne
popa
dec
es
es
xor
inc
shlb
mov
int
mov
jle
test
jge
mov
pop
nop
sbb
or
divb
jo
xlat
inc
pop
data16
pusha
adcb
inc
xchg
pop
sahf
scas
call
cltd
mov
popl
sbb
pop
and
jl
pop
ja
sbb
cs
dec
cmp
hlt
addr16
and
sbb
push
inc
jb
popf
data16
cwtl
mov
jns
or
sub
adc
inc
fdiv
int
fisubs
aas
fstps
xchg
lods
into
inc
cmp
mov
mov
shl
mov
xlat
rcrl
sbb
jns
mov
pop
pushf
cmp
add
pop
ljmp
loop
jle
ljmp
icebp
inc
mov
lret
enter
adc
cmp
mov
rcrl
rcrl
cmp
test
add
xor
xor
jmp
mov
xor
jbe
push
dec
jecxz
cmp
add
ret
cwtl
mov
pop
scas
jmp
dec
cmpsb
sbb
or
fsubs
pop
call
inc
popa
enter
jns
pop
sub
lret
icebp
or
mov
fmuls
xlat
movsl
push
test
fisubrs
add
and
fldt
adc
dec
into
or
ss
adc
orl
sub
add
outsl
push
imul
lea
notl
push
loop
push
ja
int
ds
out
leave
cmp
sbb
pushf
pop
fdivp
mov
mov
fisttpl
les
lcall
mov
scas
adc
jo
fisttpl
mov
adc
mov
pop
xor
mov
je
push
inc
lret
mov
jmp
insl
push
pop
and
fdivl
popf
and
dec
mov
xor
addr16
mov
xorl
scas
mov
into
idivl
pavgb
push
mov
inc
aas
incb
cmp
dec
and
lods
sub
adc
add
cld
pop
and
fcmove
jl
pop
scas
out
sbb
testl
mov
add
test
les
mov
pop
mov
out
adcl
pop
negl
sub
imul
icebp
lret
mov
lock
xor
leave
xchg
jae
or
and
mov
adc
test
mov
fwait
scas
mov
pop
nop
lods
roll
nop
lods
cmc
pop
dec
loope
push
mov
fs
icebp
mov
mov
push
cmp
test
adc
ficoms
adc
pop
cwtl
sub
sbb
inc
leave
inc
mov
cmp
adc
in
inc
pop
xchg
sti
pop
mov
and
and
mov
lea
push
testl
fldpi
pusha
or
out
stos
add
mov
out
stos
insl
subb
mov
adc
dec
push
movsb
xchg
cmpl
in
pop
lahf
or
mov
or
daa
cmp
fcmovne
xchg
nop
hlt
andb
lock
mov
pop
nop
es
add
and
pop
fcoms
xchg
sub
jle
arpl
mov
test
in
inc
and
pop
pop
push
jmp
jne
xchg
lods
stc
push
and
pop
icebp
mov
dec
pminub
lret
push
mov
mov
or
pop
adc
xor
in
rcrl
or
xor
pop
hlt
add
add
mov
sbb
and
dec
bound
pop
jnp
xchg
sub
and
inc
inc
jbe
fidivs
bound
icebp
dec
cwtl
lds
je
jae
call
pop
xlat
jae
fidivs
sbb
jecxz
frndint
mov
lods
movsb
mov
clc
mov
adc
xchg
stos
jg
jp
arpl
flds
and
and
and
mov
dec
inc
stos
es
fnstcw
sub
ljmp
sub
sub
scas
in
roll
lcall
dec
pushl
repnz
jns
test
pop
add
mov
cltd
cmp
clc
or
jle
and
loope
mov
mov
pop
jg
call
pop
out
cmp
inc
pop
pop
cmpl
jb
pop
aas
pop
inc
push
aas
add
push
push
xor
xor
xchg
mov
cmpsl
insb
ret
cli
rcll
push
dec
adc
inc
pop
fwait
lock
into
cmp
mov
lret
and
sub
dec
or
jae
xor
push
out
popa
cld
das
mov
nop
mov
mov
mov
pop
and
jp
fildl
pop
jl
fiadds
stos
loop
pop
mov
popf
mov
out
shrl
or
adc
cmp
insl
pop
pusha
or
sub
pop
movl
add
call
dec
icebp
push
mov
pop
loopw
mov
xchg
mov
dec
xor
enter
scas
jl
xlat
sbb
pop
pop
mov
mov
outsb
loope
adc
or
adc
mov
bound
arpl
sub
push
jae
inc
sub
pop
or
cmp
pop
dec
cmp
ficomps
cmp
jae
adc
mov
std
in
mov
fldl
add
jne
xchg
push
xchg
adc
aas
xlat
movsb
cld
or
movsl
and
sbb
enter
cmp
repz
gs
shll
adc
dec
pushf
mov
adc
xchg
push
xlat
mov
je
ss
outsl
push
sbb
inc
pop
lods
dec
jl
ss
filds
dec
inc
add
subb
pop
sub
jb
or
sti
jns
fsubr
stc
push
sub
shll
popa
mov
add
idiv
jno
insl
pop
mov
adc
xlat
inc
cli
bound
add
xor
data16
loopne
test
repz
pop
xlat
add
jp
add
aam
int
fbstp
xor
and
xchg
or
shrd
insb
ficoml
push
jae
repz
cmp
and
mov
xor
push
leave
xor
movsl
std
sti
push
and
push
jmp
pushf
mov
insl
add
xchg
into
push
lahf
test
xchg
mov
hlt
loop
loopne
and
nop
ss
shlb
push
pop
cli
xor
out
push
es
sub
ljmp
mov
loope
std
xchg
jbe
icebp
shr
xchg
push
and
or
cwtl
cs
lcall
loopne
outsb
cmp
decb
call
pop
dec
inc
adc
imul
cmpb
mov
mov
mov
mov
mov
cmp
push
pop
ja
rclb
scas
mov
pop
sahf
aas
loop
cmp
arpl
sbb
jb
sbb
sbb
movsl
js
xchg
mov
pop
xchg
out
add
sbb
loop
addr16
sub
mov
mov
cli
mov
lods
inc
in
imul
xlat
out
cmp
loop
pop
pop
call
je
sahf
icebp
push
xchg
lret
imul
fistpl
pop
fwait
jno
arpl
pop
mov
push
shll
cmc
pushf
pop
mov
and
pusha
std
add
cmp
sub
push
rolb
jg
sub
out
cli
dec
cmp
push
push
mov
xor
jl
fildl
cltd
xor
mov
cvtpi2ps
stos
cld
ljmp
inc
jbe
addr16
dec
or
subb
testb
out
mov
dec
xlat
mov
sbb
bound
and
and
pop
jg
inc
fs
jne
mov
sti
push
mov
mov
mov
jae
mov
inc
lea
adc
xor
ret
into
xor
mulb
push
inc
xchg
scas
add
je
inc
cmpsl
xchg
and
jecxz
ja
cmpsb
cmp
jp
dec
sbb
test
pop
push
popf
pusha
or
movsl
cmp
inc
xchg
cmp
fdivrl
sti
test
outsb
rcll
insb
add
mov
jb
xchg
call
push
jae
mov
loopne
andb
inc
mov
jle
xor
scas
lahf
icebp
cmpsb
testl
inc
jle
fwait
repz
mov
lods
lret
imul
dec
data16
mov
push
xor
inc
mov
nop
push
mov
pop
jg
scas
and
insb
inc
fucomip
je
jo
gs
pop
fidivrl
cmp
mov
pop
or
mov
or
outsb
int3
jl
push
popf
nop
loop
daa
sbb
call
jo
mov
sarb
aam
lcall
mov
push
pop
dec
int3
pop
in
stos
aad
inc
movsl
ret
pusha
inc
sti
or
fldenv
in
movsl
stos
sub
push
mov
pop
sbb
and
fnstenv
fadds
mov
or
clc
lods
out
pop
cmpsb
int3
in
daa
ret
movsl
jne
jle
pushf
test
lahf
clc
xchg
cmpsb
outsb
pusha
sbbb
or
sbb
psrad
inc
repnz
mov
pop
out
xchg
cmp
mov
imul
arpl
add
dec
pop
aad
mov
pop
and
add
scas
push
or
ja
outsb
add
cmpsb
dec
divb
lea
jno
push
outsl
jne
dec
dec
xchg
push
cmp
pop
xchg
jge
frstor
loopne
cmp
pop
xorb
mov
aam
arpl
mov
insl
sub
js
add
pushf
bound
xor
jg
repz
jne
out
xlat
xor
xchg
push
jl
push
pop
frstor
test
pop
or
mov
fstp
mov
dec
fldcw
push
jge
or
push
inc
popf
movsb
pop
movsb
jl
inc
and
mov
push
subl
or
jae
cltd
cld
mov
mov
sub
outsl
xor
or
aam
add
hlt
push
adc
data16
mov
or
in
or
mov
xchg
ret
sub
jnp
icebp
or
test
outsb
scas
xchg
jp
push
out
nop
sahf
cmp
and
jb
add
loope
inc
and
xchg
xchg
js
lret
xchg
int3
sub
sbb
in
fwait
icebp
stos
sbb
or
cli
pop
ret
test
adc
mov
int
and
pop
xchg
lds
jmp
sti
orl
cs
xchg
sub
pushf
xor
mov
push
ret
test
mov
sbb
ds
xor
fs
xchg
and
inc
lds
loopne
adc
push
pusha
and
sbb
push
dec
mulb
inc
cs
popf
adc
out
loop
dec
jb
jecxz
imul
jge
out
sub
jecxz
jp
sbb
fdivrp
sub
hlt
enter
adc
xchg
add
cmpxchg
fisubrl
fsubl
cwtl
cmp
insl
stc
and
xchg
pop
notb
fcompl
mov
xchg
mov
adc
mov
dec
hlt
sub
ret
jp
hlt
push
scas
test
add
cmp
jne
sub
sarl
push
shr
push
adc
mov
mulb
sbb
xor
mov
inc
adc
and
shll
mov
pop
adc
test
test
adc
movl
fisubrs
sub
insb
mov
imul
out
pop
jp
test
call
pop
mov
jecxz
ret
call
lret
idiv
frstor
inc
xchg
sub
inc
add
and
sub
roll
mov
push
inc
or
mov
dec
adc
or
or
jg
insl
adc
pop
incl
add
cmp
inc
push
mov
mov
sub
sbb
sub
dec
mov
addr16
pop
shrl
scas
nop
dec
push
cli
cmp
xchg
sub
sahf
sub
sarb
enter
and
out
pop
sbb
jg
fsubrs
sbb
insl
icebp
cli
stos
cmp
mov
das
repnz
ljmp
rcrb
mov
dec
lahf
xchg
sbb
pop
dec
jmp
mov
push
pop
xchg
stos
mov
jae
add
iret
fnstenv
inc
lret
sub
or
push
jp
divb
popl
out
movsl
in
mov
loope
pop
push
cli
pop
sti
daa
inc
adc
addr16
pop
push
loope
scas
mov
cld
fs
imul
jnp
aaa
lds
repz
into
repnz
leave
rcrb
ljmp
shll
jge
loopne
mov
sub
xchg
fnsave
or
scas
or
inc
add
mov
add
dec
pop
mov
iret
cmpsb
stc
mov
sbb
rol
pop
idivl
and
ret
xlat
sub
cmc
mov
and
cmp
pop
outsb
aad
mov
cltd
imul
dec
mov
cmp
insb
stos
pushf
popa
fwait
push
movups
xchg
push
or
push
adc
ss
outsb
sti
lods
jo
push
popf
or
push
and
fidivs
icebp
insb
loopne
test
or
in
sub
call
jns
repz
jbe
rcrl
xlat
and
movd
adc
add
repnz
mov
xchg
or
scas
fwait
mov
jge
es
sub
lods
repz
cmpsb
bswap
fimuls
sub
enter
xor
and
test
ds
lods
scas
js
xor
mov
ljmp
les
mov
js
pusha
sarl
iret
xor
scas
and
push
iret
push
inc
add
lods
add
mov
pop
cwtl
flds
jne
leave
add
push
loope
mov
call
xorb
out
pop
jge
mov
insl
add
lret
aam
mov
test
notb
mov
rorb
mov
bound
pop
rcrl
push
inc
mov
in
test
and
mov
ret
stc
push
sbb
enterw
mov
cmpsb
adc
xor
cltd
lret
mov
inc
fdivrs
ret
nop
leave
jecxz
imul
mov
push
test
sbb
clc
jmp
mov
shlb
mov
fmull
cli
or
inc
pop
cmpsl
ds
pop
ds
pop
fbld
and
imul
cmovo
pushf
xor
push
cld
outsl
cmp
push
push
gs
imulb
scas
inc
test
mov
aad
jl
stos
sub
lret
daa
lcall
adc
mov
mov
jns
into
jae
es
mov
add
pop
or
mov
scas
lds
fildl
adc
fdivl
aas
pop
or
mov
xor
mov
and
test
shl
das
cmp
inc
sub
neg
fwait
lods
decl
pop
fidivrl
jp
loope
cmpxchg
mov
aam
and
push
or
enter
or
mov
mull
lds
aam
add
and
mov
or
daa
jle
cmpl
mov
pop
in
xchg
dec
ficoml
inc
mov
sbb
jb
inc
xchg
repnz
xchg
lods
and
inc
inc
pop
ja
cltd
mov
add
insl
jge
insb
ret
into
sbb
pusha
adc
xor
adcb
mov
mov
xor
cmp
popf
push
add
pop
jae
ja
divl
rolb
cmp
or
mov
mov
push
in
orl
xor
push
mov
sti
push
sub
aas
mov
loopne
push
mov
adc
mov
popa
add
dec
fnstcw
mov
lahf
jb
rdpmc
push
mov
fimuls
adc
stos
dec
js
or
fs
dec
push
jno
pushf
shl
push
aaa
and
ss
add
dec
jbe
outsl
test
movl
pop
mov
pop
jmp
pop
xlat
sbb
and
mov
xor
dec
pusha
or
in
or
xchg
adc
dec
mov
addl
lahf
fnstsw
lock
mov
push
adc
cmp
and
ret
and
pusha
adc
and
stos
mov
arpl
jle
ret
xor
sub
into
sbb
in
insb
inc
jno
mov
stos
xorb
int3
mov
cmp
or
inc
mov
jecxz
inc
hlt
dec
mov
and
push
aam
addl
sub
stos
mov
sbbl
js
or
mov
out
xchg
push
cld
lock
push
stos
xor
std
js
out
test
rclb
mov
arpl
xchg
cmp
cmpsb
pop
ret
pop
xchg
dec
inc
imul
ljmp
sahf
inc
pop
daa
lcall
stc
test
les
outsl
iret
or
push
xor
jb
lret
sbb
popa
int
mov
in
out
test
jmp
clc
mov
xor
iret
xor
sub
cli
inc
cmp
jg
gs
dec
out
add
sub
xorl
cltd
xlat
and
ja
jle
jbe
arpl
mov
arpl
fistpl
pop
aaa
js
adc
mov
xlat
jne
outsb
add
dec
stos
test
xchg
imul
fiadds
dec
mov
jp
aad
cld
movsl
icebp
adc
shll
cmpsb
shl
movsb
dec
dec
sti
fwait
loop
scas
mov
int3
xchg
aas
mov
sbb
xlat
lcall
imul
scas
out
daa
stc
popf
or
ljmp
aad
pop
aad
clc
inc
in
cld
stos
out
sbb
cmpsl
push
inc
std
adcb
cmp
pop
push
add
or
push
movsb
mov
jnp
rep
jnp
push
jecxz
popa
ss
xchg
mov
out
fstps
pusha
lret
mov
sub
cltd
mov
dec
add
dec
xor
sub
jmp
mov
jl,pn
xor
sbb
and
popa
leave
inc
xor
sbb
lret
mov
cmc
jmp
and
mov
pop
popf
pop
out
xor
lret
sahf
jle
adc
fisttpl
sbb
xchg
fldl2t
pop
dec
sbb
test
inc
pop
sbbl
xchg
fidivrl
jb
cmpsl
pusha
repnz
adc
mov
das
sub
in
in
push
mov
xor
or
xchg
xchg
stos
repz
mov
movsl
lret
rol
sub
sub
pop
rol
mov
pop
icebp
in
aas
ret
add
and
aaa
cwtl
add
in
scas
fiadds
loopne
xchg
sub
add
js
pop
add
add
pop
icebp
xor
dec
mov
and
sbb
call
insl
lret
mov
out
mov
hlt
cmp
mov
nop
dec
cwtl
jbe
decb
dec
dec
lret
mov
mov
jmp
or
mov
mov
int3
adc
es
in
mov
jae
inc
lods
mov
cltd
adc
pushf
sbb
jmp
mov
loopne
pop
ret
scas
dec
pop
fucomi
cmc
out
push
stc
repnz
dec
push
and
cmp
lret
jle
std
int
dec
ljmp
push
sub
dec
adc
popf
sub
xor
fists
and
inc
xchg
sti
stos
cmp
fistpl
shlb
push
jbe
cmp
daa
dec
es
add
and
push
push
out
dec
cli
shlb
cs
adc
fisttpll
stos
nop
stos
lret
push
inc
inc
lret
lcall
adc
fidivrl
arpl
out
and
xchg
add
popa
sbbb
pop
cltd
dec
cmp
dec
ret
cwtl
adc
inc
fmuls
bound
xchg
jge
mov
cmp
hlt
mov
add
pop
jb
push
aam
fnstcw
sarl
mov
test
cmp
stos
and
jae
sti
fistps
mov
shlb
mov
std
mov
cmpsl
mov
enter
jo
mov
movsl
orl
je
push
pop
push
popf
fldenv
movsl
data16
xor
push
stos
jno
sub
inc
xchg
mov
or
adc
ja
subl
xchg
mov
shll
mov
push
scas
popa
stc
lea
cmp
mov
xchg
add
pop
push
push
xor
mov
push
xor
int
jae
pusha
or
ficoms
cmp
sbb
xchg
dec
xchg
mov
stc
pop
pop
jp
sub
data16
imul
mov
sub
pop
add
lods
sub
in
test
lret
fsubl
cli
mov
cli
pushf
sahf
jg
jnp
js
pusha
and
push
lret
or
mov
adc
loopne
mov
and
cmpxchg
jb
mov
dec
addb
fdivs
ja
add
popf
inc
ds
jmp
xchg
fsubl
repnz
push
popf
jnp
pop
cs
jle
fcmovnbe
dec
pop
dec
jno
jl
pusha
sbb
push
out
xor
dec
xchg
add
in
gs
adc
loop
rolb
fisubrl
jbe
cmp
jle
sub
test
xchg
rcrl
mov
push
out
ret
adc
xlat
jb
mov
in
xorl
lock
cmp
aad
lds
jae
mov
adc
flds
mov
adc
mov
pop
and
shrl
sbb
stos
jo
out
stc
sbb
xchg
popf
add
popf
popf
daa
stos
and
scas
jg
inc
data16
lcall
sub
test
nop
mov
jne
add
imul
mov
xchg
xchg
cmp
mov
sar
pop
jl
sub
xchg
xchg
mov
aad
push
mov
push
or
push
mov
fiadds
imul
ds
aas
push
fsubrl
pop
cmp
pushf
data16
xchg
insl
sarb
jecxz
in
pop
mov
mov
aad
loopne
lods
ljmp
mov
mov
sbb
std
cmp
fcmovnbe
iret
jno
out
sbb
sbb
pop
cli
jl
scas
dec
ret
rolb
aad
aam
adc
mov
lcall
jns
bound
push
pop
mov
cld
fwait
jb
cwtl
mov
sub
mov
lea
ret
das
pop
roll
in
add
xlat
or
outsl
loop
test
pop
or
mov
inc
mov
push
push
loope
cs
xor
and
mov
mov
push
fsubs
inc
je
lcall
ficomps
add
cs
in
das
and
bound
xchg
cltd
mov
jae
shr
or
in
bound
movsl
aam
dec
arpl
dec
cli
aad
sbb
movsl
sarl
cmp
jecxz
std
adcb
pop
xchg
pop
cmp
xorl
push
sbb
lret
add
sub
and
xchg
test
mov
mov
loopne
adc
push
mov
sub
mov
push
in
outsl
imul
shll
cmp
mov
or
in
fsubrp
rolb
or
andl
sbbb
dec
lcall
jbe
xorl
mov
shlb
sarl
lahf
pop
rorl
xchg
inc
inc
test
jl
lgs
mov
repnz
insb
add
ret
icebp
nop
sub
or
push
xchg
mov
xor
out
jnp
push
popa
ficoms
rolb
push
lret
scas
adc
mov
loop
ljmp
hlt
inc
push
adc
mov
shll
cmpsl
xchg
cld
inc
jl
icebp
and
push
movsl
out
cmpsl
and
jmp
mov
and
in
pop
call
les
data16
lea
inc
into
jns
fsubrs
inc
pop
dec
mov
andb
je
dec
add
pop
in
aas
les
mov
or
jns
adc
inc
test
mov
xor
or
xchg
in
push
jae
out
loope
aad
cmpsb
into
add
mov
inc
push
mov
inc
push
xor
in
mov
xor
in
or
xchg
push
dec
inc
loope
mov
mov
ljmp
in
inc
adc
pop
push
rorb
xor
cmpsb
push
scas
popa
in
inc
mov
pop
xchg
jge
or
adc
popf
xchg
add
dec
pop
repz
ret
out
outsb
add
mov
mov
jl
fildl
sbb
pop
nop
test
call
pop
movzwl
jp
xchg
jns
mov
mov
lods
repnz
leave
lock
inc
mov
rcr
movsb
add
sbb
stos
jno
push
and
and
inc
inc
inc
lret
pop
cmp
scas
das
pop
xchg
push
ljmp
mov
jge
xchg
clc
or
shrl
xchg
mov
xchg
jo
xchg
add
push
mov
xchg
bound
mov
jb
push
and
into
stos
lea
sbb
int3
lret
dec
dec
lea
subl
or
loope
cs
fistps
mov
pop
mov
iret
subb
mov
and
out
push
jge
shlb
ret
xchg
push
xchg
xor
pop
sub
jmp
jne
push
jmp
adc
popf
sarl
std
cltd
fcoms
in
test
or
cwtl
aam
dec
mov
out
xchg
scas
or
icebp
fsubl
mov
sarb
in
xchg
lods
add
repz
sahf
jmp
stc
sti
test
inc
test
xchg
rcl
mov
jl
inc
lcall
pop
fwait
sti
out
sti
mov
insl
mov
sub
nop
std
jg
out
and
or
pop
adc
jecxz
pusha
sbb
pop
cwtl
lods
mov
das
push
xor
outsl
or
xchg
loope
fwait
mov
dec
outsl
int3
popl
xor
inc
sbb
sbb
xor
sbb
dec
adc
fbstp
lcall
fldenv
mov
xchg
xor
xor
and
icebp
sti
sub
push
mov
and
ds
mov
fistl
subb
pop
fnstsw
fs
pushf
stos
into
enter
cmp
cltd
imul
mov
outsl
inc
dec
xchg
add
cmp
dec
rcrl
dec
fdivp
mov
test
mov
mov
sbb
in
mov
dec
jle
push
cmpb
sbb
lret
scas
lar
mov
lret
mov
pop
imul
xchg
std
and
hlt
mov
inc
xchg
cmp
lcall
lret
shl
xchg
jne
cmp
int
mov
and
shll
adcb
insl
xchg
cmp
sub
outsb
divl
and
xor
ds
outsl
stc
sarb
addl
stc
or
push
fucomp
aas
inc
aam
in
fistpl
sbb
sbb
and
cmp
xor
sub
cmc
pop
stos
mov
mov
stos
fdecstp
mov
mov
loopne
pop
cmpsb
ds
pop
ret
imul
sbb
cmp
fs
mov
inc
add
sbb
lret
stc
jmp
imul
call
int
sahf
mov
inc
cmpsb
divl
mov
mov
xchg
dec
std
pop
dec
aam
repz
mov
insl
cs
aas
xlat
loopew
nop
push
in
movsl
and
mov
sub
mov
add
jmp
test
sti
pop
in
nop
insl
mov
inc
dec
movsb
xchg
outsb
popf
test
xor
mov
pop
adc
cmp
mov
data16
rcll
imul
rcll
mov
out
fnstenv
imul
adcl
insb
fbstp
pop
dec
add
jns
lods
pop
aad
orl
sarb
sub
jae
cmp
lods
cmp
xchg
jne
out
mov
pop
mov
pop
cmp
movsl
cmpsb
cs
fistps
or
jne
das
ds
push
or
adc
loop
adc
inc
sub
mov
xchg
jns
pop
push
popf
pop
push
orb
lea
lds
repz
jns
dec
out
lcall
mov
je
adc
in
ret
adc
lret
movsb
mov
pop
xor
pop
add
dec
cmp
pop
add
stos
xchg
out
push
jecxz
mov
ret
outsl
loope
inc
xlat
add
lea
aaa
je
cmpsl
imul
fwait
sub
sahf
stc
xchg
mov
in
add
xor
jmp
xlat
fmuls
sahf
adcl
or
mov
out
and
fsts
icebp
inc
cli
mov
jp
push
test
fnsave
mov
add
das
push
xor
call
and
jle
push
push
mov
ret
rorl
outsl
addr16
jge
inc
out
xchg
sub
aas
add
lods
ss
cmp
loope
cld
aad
aas
mov
and
add
push
push
nop
arpl
repnz
gs
test
pop
xor
cmp
in
jbe
imull
rolb
jns
mov
push
mov
pcmpgtw
cmpsl
add
pop
es
jb
push
mov
loopne
mov
jb
in
out
rol
test
arpl
lods
cmp
sbb
inc
lods
fisttpll
lret
bound
pop
mov
mov
add
out
aas
loope
cmp
adc
test
mov
fnstenv
sbb
sti
outsb
add
pop
ret
jno
aaa
aam
rclb
sub
out
jno
xchg
and
fwait
and
jmp
adc
mov
add
and
test
jg
pop
xchg
aaa
add
loop
push
pop
icebp
out
test
js
jae
or
test
adc
cwtl
movsl
mov
and
xchg
stos
adc
lret
leave
and
push
lret
imul
mov
xor
push
ret
jmp
mov
rcrb
dec
and
out
loop
and
insb
roll
call
jmp
aaa
jno
fiadds
iret
sbb
xlat
cmc
mov
sbb
mov
mov
or
or
gs
lret
or
jecxz
pop
stos
add
std
cmp
stos
lods
ljmp
popf
in
adc
xor
push
test
pushl
mov
adc
dec
js
data16
sbb
cltd
mov
lret
xor
inc
outsl
sar
push
mov
or
add
lcall
sahf
scas
nop
jo
mov
rol
push
popf
mov
add
test
cs
rolb
jg
dec
shlb
adc
dec
lret
or
xchg
or
xchg
jl
pause
mov
or
clc
inc
pop
fsubl
or
sbb
pushl
pop
mov
js
jl
xchg
add
ret
cmpsl
sarl
sbb
jo
aad
adc
repz
or
leave
dec
inc
pushl
aas
std
add
dec
mov
push
ds
dec
fcomi
inc
mov
mov
and
insb
mov
fcomps
ffree
dec
popf
stc
push
mov
jg
sti
mov
and
std
lea
nop
add
sbb
push
in
leave
stos
jno
popf
insl
loopne
les
sub
iret
ror
mov
in
rorb
ret
mov
mov
jge
and
cli
cmp
int
mov
dec
mov
mov
jb
add
pop
scas
nop
cvtps2pi
int
out
das
popf
dec
mov
mov
sbb
ret
shl
add
adc
or
ja
js
sbb
in
jp
shlb
rol
jns
ret
inc
mov
out
adc
int3
repz
loope
push
mov
mov
lahf
cmp
cli
xchg
add
pop
outsb
jl
mov
sbb
xadd
popa
ss
repnz
in
hlt
rorl
enter
nop
mov
imul
in
imul
add
shll
sbb
cmp
push
inc
mov
inc
xlat
mov
les
insl
or
xlat
rolb
stos
popf
fiaddl
int
and
shr
lret
in
push
push
pop
outsl
lods
mov
int
mov
mov
xchg
sbb
sbb
xor
imul
add
lds
out
ret
js
lods
lds
mov
addl
rorb
aaa
notb
pop
cmp
in
sbb
lods
repnz
sbb
ds
insb
repz
mov
adc
xchg
sbb
in
and
icebp
mov
jmp
pop
mov
dec
dec
das
xlat
scas
jge
orl
dec
pop
xlat
xor
push
out
mov
push
addr16
outsl
jg
test
div
stos
push
in
insl
sub
mov
sub
mov
imul
ss
mov
fld
inc
pop
or
jmp
jne
cmp
and
out
dec
inc
shr
out
aad
pop
or
cmp
push
mov
xchg
fisttpl
jno
icebp
push
aas
cmp
clc
stos
rcll
push
sbb
int3
inc
mov
jne
out
mov
pop
int
mov
test
pop
ret
or
push
push
movsb
push
inc
pushf
fstps
jo
fldt
cmp
inc
in
dec
aaa
jp
test
sub
xchg
dec
xor
mov
xchg
lods
dec
mov
cmpsl
cmpb
and
sbbb
jmp
mov
sub
jl
shl
push
mov
sbbl
jmp
dec
rep
xor
lret
in
lds
in
loop
aad
cmp
pop
hlt
test
rclb
mov
imul
sbb
inc
sbb
fidivl
ret
adc
and
lods
dec
pop
push
scas
orl
push
sub
inc
insb
jno
and
stc
push
ror
leave
pusha
adc
sbbb
mov
or
js
mov
out
cmp
dec
mov
fildll
rsqrtps
pop
in
imul
and
inc
dec
mov
into
adc
jbe
outsb
add
xchg
adc
cmc
push
std
aaa
aad
push
into
push
mov
mov
pop
stos
inc
and
dec
dec
insb
test
cmp
jge
jle
scas
adc
ss
ret
pop
pop
cmp
pop
jg
sbb
addr16
xchg
xor
les
xchg
test
inc
pop
sub
or
call
subl
jo
clc
pop
xor
cmpsb
xchg
aaa
lock
out
xor
fcmove
dec
xor
leave
xor
push
sub
fsubr
push
mov
adc
jp
hlt
rcrl
dec
xchg
sub
push
orb
je
or
lock
jmp
or
mov
insb
pop
gs
cmp
roll
push
inc
mov
mov
sbb
cmp
cmpsl
dec
inc
and
cmp
dec
dec
push
std
jno
outsb
dec
ds
inc
push
and
adc
imul
push
or
cs
pop
mov
adc
rcrl
mov
or
rcr
movsl
cs
sub
out
ret
scas
fistl
nop
adc
xchg
xchg
pop
outsl
leave
ds
pop
fidivs
fs
pop
sub
jmp
stos
xchg
lds
mov
js
shrl
add
push
bnd
arpl
sub
pop
push
jo
ret
insl
mov
outsl
mov
cmp
xchg
pop
mov
xchg
sub
mov
in
mov
inc
neg
adc
xchg
outsb
outsl
das
imul
stc
shr
fisttpll
movsl
xchg
pop
ret
mov
jecxz
inc
sbb
shrb
xor
push
xor
dec
and
lret
bound
mov
jg
sub
sub
stos
pushf
lea
and
adc
sahf
imul
mov
lock
cld
pop
sub
call
das
pop
ss
iret
jecxz
mov
scas
push
fdivp
jg
xchg
ret
jp
mov
in
pushf
ret
popa
ds
dec
maxps
scas
jbe
orl
jp
shlb
cmpsl
mov
je
cmp
xor
rcrb
add
push
int
rcl
xlat
out
adcb
loopne
or
rcrl
xchg
push
xor
andb
sbb
jbe
or
repz
andl
aad
cmp
loop
jp
mov
mov
pop
scas
jns
imul
adc
sbb
add
negb
add
adc
mov
push
sub
and
mov
sub
push
pop
rorl
xchg
sti
loope
insb
adc
or
scas
jl
aaa
jae
fwait
scas
and
inc
add
mov
mov
out
mov
sti
pop
icebp
mov
shrb
lea
cmpb
std
dec
roll
push
jmp
sub
xor
adc
pop
dec
or
push
jns
push
pop
xor
pop
push
jecxz
enter
jg
xchg
adc
lods
push
enter
pop
xor
test
mov
je
enter
pop
cli
adc
enter
pop
idiv
aad
shrl
sub
pop
pop
std
pop
enter
lds
push
add
lahf
rcrb
loop
push
pop
out
test
es
lds
call
sbb
pop
stos
and
filds
out
ds
mov
dec
pusha
inc
popf
push
sub
pop
daa
popf
in
lock
mov
stc
push
sbbb
jae
ret
lock
out
test
and
jo
push
and
pushf
das
cmp
or
push
or
and
ret
mov
cs
dec
mov
vpunpckhbw
nop
pop
jl
int
pop
dec
loopne
insb
sub
inc
imul
sub
pop
and
cmc
inc
inc
inc
sti
or
pusha
xlat
enter
push
inc
inc
stos
out
xchg
inc
inc
or
idivb
cmpsl
fsubr
in
push
sbb
jge
jp
out
xor
sahf
ds
jmp
or
cmp
jb
leave
loopne
mov
je
shll
xlat
into
sbb
cmpsb
jp
dec
lret
push
sub
xchg
sbb
inc
fwait
sbb
sub
dec
mov
mov
pop
out
subb
sahf
lahf
stos
mov
mov
or
es
aam
push
xchg
arpl
std
fs
xor
out
scas
jnp
subb
fcmove
fiadds
mov
add
mov
dec
lea
bound
insb
xorl
xor
sbb
outsl
cmp
adc
mov
imul
and
cltd
xlat
mov
xchg
push
cltd
loop
rol
ja
shl
sub
std
andb
fwait
cwtl
pop
xchg
test
jmp
xorl
jge
and
test
or
push
adc
jle
imul
arpl
jg
subl
and
jl
ret
lret
xchg
jno,pt
fsubl
arpl
cmp
clc
xchg
aas
dec
xor
mov
and
sarl
mov
outsl
pop
mov
lret
sub
cmp
cmp
rcr
in
bound
inc
clc
mov
lock
sbb
in
repnz
and
loop
or
push
xchg
sub
push
ja
das
jbe
into
sub
dec
testl
or
mov
sbb
cmp
pop
dec
adc
stos
lock
and
add
jle
lahf
test
jne
andl
stos
xor
sarl
push
push
je
or
push
inc
push
std
dec
adc
inc
sahf
aad
ds
int
sbb
gs
stc
push
cmpsb
inc
add
imul
push
and
or
lock
xchg
jg
push
clc
sbbl
mov
mov
mov
adc
lods
jnp
decb
pop
addr16
mov
jecxz
sti
outsl
sahf
fnstsw
popa
ret
mov
push
xor
xchg
dec
ret
cmp
ret
out
and
inc
jne
ja
daa
jle
orb
sbb
and
dec
addb
or
test
repz
xchg
mov
sar
or
mov
arpl
lret
loope
jmp
xchg
or
imul
sbbb
jecxz
pop
inc
icebp
sbb
fdivrs
cmc
cltd
xchg
outsb
and
cmpsl
ret
sub
inc
sbb
loope
push
push
sub
mov
mov
inc
rclb
shlb
fnstsw
stc
mov
xchg
cs
adc
pop
fs
stos
cmpsl
test
js
push
sbb
mov
pushf
mov
push
idivb
xchg
imul
mov
je
nop
montmul
cmpsb
add
into
add
inc
jbe
push
cmc
sbbl
idivb
jge
cmp
es
fdivrl
nop
nop
adc
sub
sbb
mov
dec
or
iret
jne
xchg
jge
dec
jge
dec
dec
out
dec
movsb
jge
pop
lahf
icebp
leave
pop
mov
mov
out
es
inc
leave
mov
addr16
rolb
icebp
and
insb
jl
pusha
mov
clc
inc
xor
sub
adc
mov
cltd
mov
sub
xchg
xchg
out
xchg
dec
sub
pop
fldcw
iret
dec
inc
cmpsb
dec
mov
fcmovbe
xchg
add
sbb
test
rorb
dec
arpl
mov
movsl
sub
push
jo
inc
xor
ja
outsl
sub
push
leave
add
xor
in
sub
xor
mov
mov
xor
adc
testl
cmpsb
mov
test
xchg
add
jecxz
pop
push
mov
insb
adc
arpl
mov
cmpsb
ljmp
mov
mov
out
push
or
inc
xor
fidivl
xorb
add
or
rcrb
call
scas
sub
in
callw
mov
ss
mov
sbb
out
xlat
mov
inc
pop
je
movsb
cmp
popa
and
mov
icebp
inc
ss
jp
adcl
subb
fyl2x
sub
ret
push
xchg
out
les
mov
movsl
fbld
subb
dec
add
sub
dec
adc
xchg
mov
push
and
imul
popf
and
lods
fdivrl
jmp
cmpsl
mov
pop
push
movsl
mov
cmp
nop
dec
dec
stc
gs
jg
mov
jge
inc
mov
mov
jmp
push
into
dec
inc
hlt
cltd
fcmovnbe
insl
or
cmp
inc
shll
pop
xlat
movb
aad
push
fsubrs
cwtl
mov
adc
ret
imul
pushf
sub
scas
push
and
clc
mov
mov
jg
dec
jmp
push
inc
popf
imul
dec
sbb
loopne
jmp
jns
cmpsl
adc
test
out
into
sbb
notl
add
insb
hlt
adc
adc
notb
inc
insb
sub
rcrl
jnp
les
xor
fists
pop
jns
xor
jne
sti
inc
lds
aam
xor
jno
cltd
push
leave
xor
cli
pop
or
cmp
aaa
mov
pushf
mov
and
cmpsb
nop
scas
ja
fsubrp
movsb
dec
scas
push
out
cmp
push
adc
fstps
xchg
mov
jp
dec
jmp
lods
fstpt
addr16
inc
lret
add
cmp
loop
cmpsl
icebp
sbb
mov
repz
into
and
dec
popa
mov
cmp
adc
jnp
fidivl
cmp
inc
mov
fistpl
lahf
idivl
add
js
jne
movl
push
inc
mov
out
jnp
cli
push
lods
loopne
rcll
sti
pop
dec
lock
push
out
out
or
int3
ljmp
inc
scas
jb
icebp
stos
or
fadds
xchg
xchg
bound
push
xor
movsl
imul
out
lret
sbb
shll
push
pop
xor
repz
out
aaa
iret
loope
rorl
or
adc
mov
orb
popf
out
pop
shlb
pop
jno
mov
adc
rcll
dec
fstps
push
push
mov
daa
jno
adc
cmp
in
flds
or
pop
repnz
add
and
push
lahf
stos
outsb
inc
fcmovnbe
fiaddl
mov
aad
mov
adc
in
pop
xor
imul
lock
out
adc
cmpb
lock
les
subl
sbb
lods
mov
push
and
mov
out
mov
dec
pop
sbb
xchg
ficoms
mov
xchg
sub
cmp
cs
out
dec
add
xor
or
cmp
and
adc
sete
aam
and
out
and
adc
mov
adc
sub
mov
sub
cmp
jae
out
aaa
push
sbb
pop
xor
cmp
stos
add
xor
movsb
add
pop
dec
and
xor
clc
or
pop
jns
cmp
leave
xor
ss
and
mov
jnp
inc
fwait
cmp
divb
mov
inc
adc
dec
inc
mov
jg
jnp
pusha
mov
pop
popf
jmp
mov
jle
negl
out
mov
repnz
popf
mov
subl
fsubrs
inc
cmpsl
testl
adc
jg
mov
mov
testb
pop
flds
pop
rcr
ss
out
mov
cli
pop
pop
es
mov
sbb
lds
mov
add
jb
add
dec
es
adc
inc
add
stos
in
nop
test
in
test
push
pushw
or
fstl
mov
push
pop
lock
push
aaa
jo
repz
sbb
mov
or
cmpsl
int3
aam
xor
or
outsb
adc
jns
shlb
mov
mov
mov
dec
gs
and
ret
mov
xlat
pop
ds
enter
xchg
dec
test
mov
cmp
cli
or
les
mov
dec
inc
adc
test
rolb
in
jg
xchg
adc
movsb
das
lea
faddl
fwait
lock
outsl
sti
daa
push
and
clc
ret
stos
in
mov
js
push
sub
mov
adc
mov
jmp
push
out
mov
mov
out
ret
jo
in
divb
dec
movsb
rorl
fcomip
mov
mov
cmp
xchg
data16
add
adc
lcall
sub
ljmp
xchg
jo
dec
mov
shll
dec
ljmp
imul
aad
mov
inc
loopne
or
push
shlb
lock
mov
subb
xchg
pop
push
addr16
hlt
mov
adc
sahf
arpl
insl
lods
mov
sub
push
out
test
loope
sbb
push
adc
ss
je
xchg
adc
push
dec
popa
dec
mov
enter
mov
stc
sbb
inc
adc
ss
add
nopl
push
inc
jmp
out
leave
sbb
sbb
cmc
and
lcall
push
mov
dec
sbb
xor
stc
and
xor
imul
fnstenv
or
and
sub
popf
pop
repnz
adc
and
aaa
outsl
gs
adc
mov
icebp
lret
sbb
mov
push
add
jmp
mov
movsb
fcmove
adc
inc
inc
sub
int3
fisubs
mov
inc
jnp
push
cmp
lret
or
and
fsubrs
cld
stos
inc
jns
mov
fnstenv
push
xor
cmp
jnp
xor
xor
jg
outsl
inc
js
stc
mov
int3
pop
int3
pop
imul
into
xor
and
add
sub
mov
mov
andl
jge
adc
pop
adc
pop
cli
daa
jo
and
dec
lods
lret
jb
cmpsl
sahf
aad
mov
fimull
jnp
loope
mov
pop
mov
leave
lahf
mov
roll
ljmp
xchg
push
in
loop
andl
pop
inc
dec
and
ret
xlat
push
insl
ret
or
pcmpgtw
rcrl
loopne
sbb
jo
pop
sub
adcb
xchg
shll
cwtl
inc
xor
in
inc
rcrl
dec
push
fs
dec
push
js
leave
out
xorb
adc
ja
xchg
add
mov
xorl
sbb
loopne
or
mov
push
inc
flds
dec
jecxz
stos
push
sub
inc
lret
mov
adc
sahf
jl
fisubrs
shrb
xor
xchg
jnp
dec
cld
sbb
push
cmp
or
lret
fld
mov
addr16
adc
push
into
inc
fstl
icebp
xchg
lret
mov
push
lock
mov
es
push
clc
mov
and
int
adc
fcmovne
jb
jmp
mov
rolb
lods
inc
fmul
jae
and
jns
mov
imul
insl
out
lods
inc
and
mov
add
cli
push
jnp
pop
pop
mov
add
aas
pop
movsb
in
rcrl
idiv
mov
into
push
inc
push
test
mov
roll
push
insl
adc
adc
cmp
outsl
adc
sbb
or
inc
xor
adc
pop
and
inc
aas
xchg
int3
pop
icebp
js
sarl
jnp
ds
stc
movsl
adcb
leave
loop
xchg
movsb
repnz
adc
add
adc
fwait
repz
mov
test
ja
xor
fwait
insb
out
pop
popf
or
mov
sub
mov
fiaddl
leave
pusha
xor
adc
enter
aaa
pop
iret
fstpt
in
adc
pop
iret
fdiv
cld
mov
mov
pop
adc
or
mov
pop
jne
fnstsw
mov
pushf
mov
scas
ror
pusha
rcrl
mov
inc
and
push
in
jns
pop
je
cmpsl
push
mov
and
icebp
sbb
jnp
jb
out
ret
pop
inc
in
js
pop
loop
pop
fwait
add
jle
jle
xchg
dec
movsb
xchg
mov
jmp
inc
xchg
mov
out
popf
sub
shlb
test
daa
xchg
add
mov
adc
push
sub
lahf
jno
xor
es
lcall
push
mov
cltd
data16
je
jb
push
lods
sbb
jecxz
cmp
pushf
imul
add
push
jo
fwait
xor
ds
or
lock
imul
ret
fistps
ljmp
push
push
cmp
fdivs
inc
pop
mov
cmp
mov
repnz
sti
les
aaa
cmp
lods
and
call
cld
sub
xor
jecxz
ficoms
xor
xorl
shll
fcomps
dec
inc
mov
mov
jbe
sbbl
pop
xor
sub
gs
mov
push
add
mov
arpl
push
sub
jl
inc
mov
fwait
sti
mov
fsts
popf
or
mov
cmp
rorb
add
sbb
in
xor
jp
dec
aaa
jns
lock
push
mov
lods
sub
jns
jae
xchg
imul
fs
jge
cwtl
jne
mov
int3
mov
jl
push
outsb
sbb
lods
or
ss
lds
mov
mov
inc
fdiv
ja
mov
and
xchg
popa
dec
jnp
in
loope
fs
dec
sbb
loopne
jl
mov
pop
lock
inc
mov
or
and
enter
jnp
xor
xor
lock
test
xchg
push
sahf
xlat
ret
jge
pushf
sti
xchg
mov
or
mov
cli
and
adc
adc
mov
hlt
sarl
notl
aad
out
add
mov
inc
or
loope
arpl
fsubp
cli
push
in
jb
ja
movsl
and
shl
dec
sahf
xchg
pusha
pusha
lods
jno
shlb
sub
sub
fistpll
cmp
shrb
and
inc
arpl
ret
lahf
addb
dec
sbb
xor
outsl
cmc
dec
gs
popf
hlt
gs
sub
mov
into
ljmp
lret
addb
jp
pusha
inc
xchg
inc
or
pop
sbb
mov
dec
pop
and
cld
inc
dec
fwait
std
imul
icebp
in
cs
das
mov
jns
pop
xlat
cmpsb
xchg
jnp
and
mov
inc
jl
in
lods
aam
xchg
mov
adc
mov
inc
andb
cmp
insl
lods
leave
loope
mov
repz
out
xchg
xor
xchg
add
pushf
or
mov
or
inc
sti
pop
fnstenv
xchg
imul
leave
notrack
jl
xchg
imul
cmpsb
addr16
fadds
cmp
jb
add
popf
cmp
pushf
sbb
push
fistl
stos
sbb
fcomip
push
inc
cmp
dec
test
icebp
test
fdivrp
xchg
leave
popf
or
lods
mov
push
sub
fcoml
dec
mov
xchg
push
testb
pushf
mov
push
popf
clc
je
into
xor
daa
ljmp
and
ret
cmpsb
push
js
iret
outsb
jg
shlb
mov
imul
decl
scas
xchg
test
fs
sbb
adcb
jne
or
mov
mov
frstor
inc
sbb
adc
mov
sahf
mov
pop
outsl
int3
mov
add
rorb
repz
inc
lahf
les
sahf
sti
out
in
add
movsb
xchg
mov
es
mov
sbb
arpl
mov
imul
repz
mov
arpl
jo
push
out
mov
out
mov
ret
sbb
push
in
xorb
movsb
pop
rclb
imul
int
jge
or
aaa
nop
lock
cmp
pop
fiaddl
dec
jnp
shrl
sahf
fadds
out
xor
mov
jg,pn
scas
xchg
int
fsubrs
and
push
inc
divb
dec
jl
sbb
lea
pop
and
das
flds
add
sub
in
cmpsl
fxch
add
fildl
mulb
xlat
addr16
ficoml
scas
push
pop
repz
stc
mov
xchg
add
in
pop
adc
lds
les
push
sub
loopne
and
jae
iret
xor
decb
repz
stos
push
ffree
inc
xchg
jnp
movsw
inc
dec
imul
je
sar
repnz
cmc
negb
add
rorb
scas
mov
xchg
mov
mov
cwtl
jmp
aad
cmpsl
push
inc
lahf
sub
or
ret
mov
push
sub
xor
or
arpl
or
rolb
xchg
xor
dec
gs
or
and
mov
ret
jmp
cmp
cwtl
ret
jne
inc
push
mov
ret
push
jb
mov
jnp
cmp
addr16
mov
fs
enter
hlt
jmp
mov
notb
add
sub
mov
pop
dec
push
pusha
int
dec
enter
xor
sbbl
movsl
mov
jns
cmp
clc
push
mov
repnz
out
xor
mov
xor
jecxz
sarl
pop
jl
and
sbb
cmpsb
std
sub
iret
andl
arpl
dec
inc
lahf
testl
pop
nop
mov
fwait
data16
int3
sbb
dec
lock
sbb
mov
fstl
sti
cmp
jmp
outsb
or
insb
je
cmp
iret
data16
jb
push
test
xchg
lods
test
mov
dec
das
cmp
adc
imul
adc
adc
adc
add
div
aas
mov
fisubrs
pop
andl
pop
scas
lret
ret
cld
or
sbb
pop
rcl
push
and
pop
fwait
mov
or
pop
sbb
mov
loopne
jne
push
sub
mov
aaa
dec
shrb
subl
pop
adc
pop
inc
std
xor
sbb
mov
push
mov
je
fdivp
push
shlb
sub
in
mov
jp
mov
adc
cmpsb
icebp
cmc
jecxz
mov
ret
push
cld
mov
lret
sbb
pop
sub
or
jl
mov
and
xor
mov
xchg
in
push
pushf
xchg
sahf
cmc
inc
mov
or
test
jns
sub
xchg
repnz
stos
iret
push
sub
fsubrl
ret
aas
push
mov
push
and
mov
data16
fidivs
xlat
mov
mov
das
subl
scas
mov
pop
idiv
in
test
int
push
dec
add
nop
xchg
sbb
loope
xchg
mov
xlat
push
jb
sbb
adc
xchg
outsl
aad
movl
inc
fsubrs
push
cs
dec
loope
cli
add
push
scas
dec
xlat
or
xchg
scas
jae
or
out
insl
sub
js
cmp
in
mov
outsb
daa
cmp
addl
jp
or
fcomps
loopne
xor
cmp
xchg
sbb
test
mov
pop
imul
in
ljmp
sti
or
xor
ffreep
sar
stc
cmp
dec
dec
out
sahf
pusha
and
aaa
mov
inc
mov
and
and
mov
inc
cld
mov
fstpl
fldl
dec
mov
movsb
rcrl
scas
xchg
out
mov
mov
inc
push
daa
cmp
mov
xchg
imul
fcomi
add
mov
adc
sbb
fidivl
mov
xchg
or
lods
xchg
sbb
push
outsl
cmp
loop
sbb
dec
pop
call
mov
ljmp
sub
add
cwtl
icebp
incb
in
insl
pop
test
scas
dec
stos
inc
imul
mov
sbb
movsl
test
pop
int
div
mov
add
adcb
lods
or
xor
iret
mov
dec
rcr
pop
repz
jp
roll
xchg
push
jnp
cwtl
daa
cmp
shll
xchg
cmpsb
cmp
xorl
aas
jae
les
xchg
pop
cmc
sbb
mov
inc
shll
mov
ja
aas
es
mov
imul
insl
scas
sbb
addr16
mov
out
add
cmp
dec
rol
insl
push
inc
outsl
pusha
jnp
fistl
or
test
cmpsl
stos
in
inc
fcmove
mov
xor
add
xor
mov
js
pop
or
push
movsl
lcall
inc
sub
pop
xchg
cmpsl
pop
add
sub
pop
inc
dec
and
in
adc
ret
pop
jecxz
lret
sbb
xor
mov
into
push
sbb
test
fidivrs
lcall
pop
mov
leave
pusha
pop
bound
pop
call
loope
xchg
pop
adc
mov
jnp
aam
cmpsb
into
fisubs
repnz
cmp
daa
divb
fildll
faddl
enter
xor
adc
stos
call
in
pushf
add
es
in
outsb
ja
dec
arpl
inc
xchg
loope
popa
filds
cmpsb
call
cld
ret
inc
mov
icebp
pushf
imul
std
std
ss
fnstsw
cmp
sub
sbb
cmp
gs
sbb
xchg
fldenv
hlt
mov
aaa
lods
inc
mov
cmp
rolb
push
mov
loope
jg
push
daa
in
sarl
je
add
cmpsl
ss
jbe
mov
xchg
xchg
scas
sbb
in
sub
pop
mov
test
pop
mov
mov
jle
dec
dec
jnp
fnsave
push
inc
test
add
cmp
mov
xchg
xor
lahf
mov
sbb
mov
fs
fsubp
les
jmp
out
mov
fisubrl
inc
push
mov
jb
stc
sub
or
in
inc
outsl
scas
inc
shl
push
cmpsl
loop
and
and
push
and
shl
fdiv
xor
jns
daa
push
clc
std
pushf
push
in
addl
jge
adc
subb
pop
mov
outsl
adcl
stos
push
repnz
mov
call
jae
popa
push
test
mov
loop
jo
and
les
add
xchg
dec
loopne
es
loope
leave
addr16
push
mov
in
cmc
sarb
loop
xlat
adc
popa
fdivl
sub
sbb
mov
fs
lea
orb
fbstp
mov
cmpsb
pop
pop
jecxz
push
push
test
ja
jl
aaa
fbstp
lret
addl
add
cld
sub
push
mov
subb
xor
lods
mov
sub
ret
outsl
adc
mov
dec
aaa
jbe
sbb
rorl
mov
icebp
in
add
scas
cmp
aad
jno
daa
mov
push
xor
in
ror
outsl
xor
in
loop
cmpsl
add
and
inc
push
ja
data16
pop
scas
cmp
aad
xor
vpunpckhbw
ret
dec
jecxz
fwait
imull
cmp
push
inc
rcll
inc
fdivrl
fs
pop
int
out
sbb
sub
xlat
mov
sbb
lret
in
fmul
jecxz
pop
lods
rolb
mov
pop
and
insb
repnz
ja
jecxz
fldcw
mov
adc
inc
jle
testl
xchg
add
fadd
dec
jbe
bound
xor
call
inc
and
mov
mov
int3
lret
in
add
out
inc
pop
xchg
test
imul
out
ljmp
pop
in
mov
mov
push
ja
lods
pop
bound
xchg
je
repz
stos
add
nop
dec
inc
xor
add
js
and
jne
cli
jecxz
iret
movsl
jg
sub
ret
mov
inc
push
ret
sahf
push
fmull
jne
out
pop
jg
inc
jg
inc
insb
pop
pop
test
mov
out
or
add
sub
das
pop
jp
cmp
testb
jnp
dec
push
cmp
in
adc
mov
jno
push
jl
pop
sub
xor
sbb
mov
outsb
cmp
xchg
in
sub
xor
xor
in
mov
lods
cs
push
jnp
or
in
cmpsb
icebp
mov
das
loopne
aam
scas
call
rclb
addr16
aaa
addr16
lret
xchg
adc
dec
push
ja
lock
push
mov
cmp
aam
lret
sbb
pop
sbb
or
fistl
call
in
xor
sub
pop
insl
fldenv
frstor
cmpsl
out
jmp
and
pop
and
in
insl
shlb
push
mov
int3
lret
pop
inc
outsb
adc
lret
sbb
aas
push
jle
in
push
sbb
outsl
sbb
sbb
adc
push
inc
or
lock
pop
xchg
add
mov
adcl
cmc
pusha
lock
jae
jge
adc
inc
and
xchg
aaa
stos
jmp
pop
cmp
aad
stos
push
jl
xchg
mulb
add
adc
mov
xchg
xlat
jge
pop
clc
repz
cmpsl
adc
mov
jnp
or
ret
iret
jge
into
add
adc
cmc
lea
xchg
cmpsl
pop
out
mov
pop
test
pushf
xor
pop
inc
vandnpd
pop
inc
push
inc
push
push
mov
xor
loope
adc
and
xchg
mov
xor
xor
fcoms
test
fadd
inc
lea
addr16
outsb
mov
inc
sbb
mov
cmp
mov
mov
lds
mov
add
mov
xorl
xor
fisubs
or
incb
sub
sbb
xor
xor
or
push
in
jnp
shl
inc
fwait
or
dec
inc
inc
std
or
loopne
pop
push
into
adc
aaa
cmp
into
sub
add
dec
cmc
popf
lods
sub
and
push
in
dec
cli
ror
loop
xchg
dec
mov
hlt
mov
mov
in
jge
mov
repz
pusha
inc
fisubrs
fwait
cmpsl
push
jne
jb
jle
or
shlb
cmpsb
jecxz
pop
hlt
out
incb
fwait
inc
loope
push
rclb
cmp
jb
mov
inc
jecxz
fsubr
cmp
arpl
rcr
repnz
mov
pushf
sbb
jno
dec
mov
fldcw
stc
out
test
lcall
mov
outsb
dec
stos
popa
hlt
js
es
xchg
fimull
jle
lcall
mov
fs
int
pop
lock
lods
ss
inc
cli
iret
dec
das
jge
adc
cli
or
inc
and
lds
xor
cmp
adc
sub
cmp
push
stos
cs
xchg
sbb
inc
imul
in
sarb
jp
sub
xor
pusha
adc
push
adc
arpl
fs
popa
and
xor
scas
incb
hlt
or
push
inc
xor
mov
fimuls
dec
xlat
or
out
jmp
xchg
xor
jp
gs
cmp
addb
xor
loope
stc
cmp
push
mov
push
andl
dec
xor
and
add
adc
stos
mov
xor
dec
loopne
push
push
push
mov
loop
cmpsb
leave
stc
cmp
addl
shll
inc
pop
mov
dec
aam
push
jno
rorl
repnz
jns
je
or
push
xchg
sub
push
xchg
sub
out
gs
loope
dec
cmp
ljmp
mov
lret
mull
xchg
xor
mul
jnp
push
jge
in
inc
add
mov
and
fcmove
lds
roll
pop
les
lcall
test
sbb
pop
mov
xchg
jo
sar
xchg
sbb
or
xchg
repz
sub
aad
sbb
inc
dec
push
in
jl
jno
lods
sub
sbbb
inc
in
cli
or
movsb
mov
push
in
mov
cmp
or
aaa
adc
loope
adc
lret
ja
jb
enter
mov
adc
jb
xor
gs
cmc
adcb
mov
sahf
xor
aas
xchg
mov
pop
movsl
stc
sahf
scas
and
pop
mov
dec
push
insb
into
test
inc
mov
les
data16
lahf
push
js
mov
sbb
lea
ja
and
pop
mov
cmp
sbbb
push
pop
adc
pop
repnz
insl
add
pop
pop
push
scas
test
pop
repnz
mov
icebp
or
js
mov
dec
imul
shll
push
mov
and
dec
repz
lret
push
cld
cwtl
mov
arpl
mov
cmp
cld
inc
rcr
adc
stos
idiv
mov
dec
add
pop
aad
or
jne
icebp
int
scas
sahf
xor
cmp
mov
aaa
int3
scas
fidivl
in
mov
xchg
xchg
flds
jmp
lods
cmp
pop
sahf
jmp
xor
aad
and
mov
bound
inc
fadds
scas
stc
andb
pop
rorl
mov
imul
stos
das
out
les
mov
jnp
pop
pop
aas
jg
cmp
stos
add
jmp
out
divl
push
data16
out
adcl
insl
faddp
cmpsb
inc
ret
pop
jmp
nopl
loopne
ret
cmpl
lret
xlat
mov
mov
fcmovu
and
inc
subb
jp
lret
adc
jp
aad
outsb
jge
outsl
push
or
inc
adc
shl
fs
flds
adc
in
dec
add
out
jecxz
mov
pop
jno
push
mov
dec
mov
xor
pop
nopl
in
fcmovnu
jecxz
mov
arpl
push
int
push
fldl
leave
xchg
int3
jp
cli
cmp
daa
push
das
push
push
xor
imul
cwtl
je
test
ljmp
bound
pop
test
outsb
sub
ret
sub
pop
mov
adcb
mov
cmpsl
out
and
mov
cmpl
push
mov
lock
sbb
pop
cmp
sub
push
ss
shll
dec
lahf
push
sti
addr16
bound
xchg
add
add
mov
ljmp
out
sahf
stos
sub
jbe
mov
lock
push
in
xor
xor
pop
fsts
shlb
cmc
loop
es
sarl
ljmp
popa
inc
and
call
imul
aaa
sub
leave
ret
popa
jmp
or
inc
mov
sbb
pop
lahf
sahf
cmp
data16
cli
cmc
push
stos
aas
movsb
and
loop
sarl
shrb
orl
es
pusha
add
xor
dec
push
in
scas
and
and
dec
clc
aas
sbb
jno
mov
hlt
sbb
mov
sahf
scas
push
mov
outsl
inc
push
push
inc
mov
mov
clc
inc
das
push
push
cltd
pop
lds
rcr
sarl
mov
dec
out
mov
mov
xchg
lds
xor
cmpsb
jnp
sub
mov
ds
adc
sbb
gs
cltd
ficoml
fsubl
mov
roll
rcll
test
add
lret
fwait
insb
jmp
cs
push
movsl
mov
jmp
adc
faddl
jp
mov
mov
sbb
add
test
jp
in
inc
xlat
andl
sbb
cwtl
pop
mov
xchg
ljmp
lret
int
push
dec
jno
insl
pop
pop
imul
in
push
mov
inc
mov
jns
lds
and
adc
in
daa
clc
mov
dec
addr16
in
movsl
fcom
push
inc
aad
mull
popa
xor
fadd
fisubrl
mov
sbb
mov
stos
lods
jl
test
mov
fisttps
movsb
repnz
divb
xchg
out
leave
push
mov
jmp
stc
movsb
in
mov
jne
cmp
sbbb
pop
ljmp
das
shlb
jne
repnz
adc
jne
lds
mov
jp
in
and
cmp
shrl
mov
rcrl
inc
xchg
mov
dec
es
jge
sbb
inc
cmp
xorb
push
adc
adc
aad
xor
in
xor
pop
dec
dec
pop
mov
lret
pop
leave
jecxz
sbb
shrl
mov
push
xchg
dec
jg
dec
mov
or
jp
ja
stos
and
push
negb
dec
mov
ret
mov
adc
icebp
cmp
mov
jae
mov
pop
push
stos
popl
xchg
lea
lcall
pop
in
mov
jno
iret
sub
push
inc
pushf
outsb
jl
movsl
insb
lds
mov
insl
sti
or
out
xchg
lods
pop
mov
sub
inc
in
or
es
push
idivb
test
in
lds
out
cld
int
xchg
iret
adc
pop
jne
pop
out
std
pop
adc
cmp
cli
pushf
xchg
dec
movsb
inc
mov
fwait
test
sbbb
mov
mov
jne
adc
dec
dec
pop
int
imul
loop
xchg
pusha
test
daa
fiadds
rep
inc
xor
rorb
and
scas
aaa
xor
mov
jns
mov
enter
test
push
cltd
push
pop
and
sub
ja
jmp
enter
insl
and
pop
xchg
cmp
imul
pushf
out
popf
std
loop
xor
insb
add
je
into
cmp
rcrl
nop
fsubl
push
adc
in
in
pop
or
imul
jg
push
adc
push
xlat
cmp
loop
je
xchg
cmpsb
cmp
lahf
stos
movsl
ror
or
xor
sub
mov
enter
jns
adc
pop
orb
outsb
pop
push
mov
clc
cmc
xchg
sub
cmp
add
fimull
push
jl
pop
daa
mov
sti
iret
loop
lods
sahf
pop
cmpsl
dec
into
adc
mov
data16
dec
sbb
xor
shl
aad
in
jns
gs
test
inc
je
xor
inc
cmpsl
leave
cmp
out
sub
pop
xor
push
or
repz
das
das
or
push
mov
das
add
imul
sub
call
jne
in
test
adc
mov
jno
pop
add
mov
dec
pop
and
xchg
sbb
pop
ret
sti
shlb
mov
fisttpl
adc
ds
test
imul
xchg
xchg
mov
aam
ljmp
popf
cmp
jo
sub
jg
push
pop
and
add
inc
pop
sti
cmp
push
jnp
mov
jbe
sub
mov
call
popf
jno
pusha
out
ds
lret
lods
xchg
icebp
rolb
lret
outsl
pop
mov
mov
jb
sbb
push
and
sbb
mov
int
and
in
movsb
cmp
xchg
sub
cli
test
imul
push
js
dec
mov
sub
mov
imul
fstpt
imul
mov
sub
push
sub
mov
ret
stos
repnz
nop
jo
sbb
pop
xor
cmpsb
sbb
jae
cmp
scas
movsb
pop
cmp
std
xor
es
adc
scas
inc
sub
cmp
xchg
int
dec
test
shll
sbb
adc
sub
scas
out
enter
mov
out
test
fsubrs
std
mov
sarl
push
or
push
cmp
add
jge
pop
jb
mov
or
daa
pop
outsl
insl
push
dec
jns
push
ret
aad
inc
pop
pop
ja
or
push
adc
enter
movsl
nop
lods
mov
repnz
or
ret
and
mov
cmpsb
leave
xlat
add
popf
jmp
nop
sbb
dec
rcrl
inc
jo
movsl
rcll
sub
xor
inc
cltd
add
scas
in
fs
adc
adc
loop
int
mov
push
cltd
test
jl
dec
add
xor
test
pop
jae
cld
add
sub
aaa
out
lds
push
ss
es
popf
mov
mov
sbb
clc
lcall
in
xorl
sbb
adc
jge
outsb
and
jg
or
cmpsb
bound
push
jg
mov
sbb
ret
addr16
addb
mov
out
sbb
movsb
mov
out
adc
mov
cmp
test
add
sub
cwtl
cs
mov
inc
ds
pop
jmp
addl
xchg
dec
sbb
mov
inc
andps
orb
xor
push
mov
inc
xor
jecxz
jmp
and
movsb
cmp
call
ret
xchg
push
sbb
loop
mov
mov
push
inc
xchg
sub
rcl
xchg
mov
adc
jmp
dec
mov
jnp
sbb
dec
jl
cltd
sub
lds
aad
xchg
fdivs
xor
dec
jmp
xchg
orl
push
movsl
div
mov
or
add
call
xor
cmpsb
inc
in
inc
jns
dec
into
jnp
stos
and
mov
clc
inc
mov
sbb
aam
call
fsubrl
dec
inc
ret
inc
fs
and
mov
sbb
fidivrs
or
cmc
cld
mov
mov
fcmove
cmp
sti
pop
shl
loop
loopne
shrb
dec
add
dec
icebp
out
je
adc
add
adc
lods
push
sub
arpl
sbbb
mov
push
dec
out
sahf
mov
add
leave
clc
mov
sub
loope
movsl
loopne
scas
xchg
movb
testl
cmc
fprem
jns
daa
add
cwtl
das
mov
js
cmpsl
dec
jecxz
jl
outsl
xor
jae
sbb
xor
fisubl
shlb
mov
nop
addr16
push
jae
mov
pop
pop
mov
int
lds
jne
inc
into
mov
inc
and
adc
int3
inc
jl
js
out
daa
inc
fsubs
jp
fldenv
jb
push
insb
in
jbe
cmp
adc
loopne
sub
xchg
loop
xor
xchg
shrw
test
cld
mov
pop
iret
es
sti
test
fsts
shrl
les
cmc
ja
in
push
int3
arpl
dec
mov
adcb
or
call
sbb
xor
add
inc
out
mov
adc
rorl
movsb
ja
xor
clc
aad
mov
and
or
inc
mov
ja
sbb
mov
mov
sbb
xorl
mov
xchg
sahf
pop
cmp
mov
mov
lods
push
cmp
sti
andl
je
mov
sub
aad
dec
dec
sub
cmp
idivl
in
imul
negl
sub
push
rolb
dec
xor
ret
sub
test
mov
push
sti
mov
pop
cmp
daa
cmp
cs
mov
add
cmc
ds
and
cltd
push
dec
xchg
mov
xor
imul
aaa
scas
cwtl
pop
dec
test
xchg
pop
cmp
iret
xor
cmp
ljmp
ret
jge
mov
inc
mov
fwait
outsb
fldt
push
clc
insb
hlt
adc
pop
imul
fsubs
xchg
outsl
mov
jg
inc
pop
jo
lods
cmp
lods
xor
jnp
subl
adc
sub
scas
rcll
aaa
push
sub
adc
iret
cmpsl
jno
flds
mov
xor
sbb
mov
jl
add
jno
hlt
jmp
pop
push
mov
gs
sub
sbbl
fmul
jle
and
bound
leave
jp
loop
pop
ljmp
hlt
or
and
adc
jnp
pop
xor
ret
cmpsb
ja
fdivs
push
enter
push
mov
and
in
icebp
xchg
ret
adc
mov
in
mov
xor
mov
mov
cmp
std
push
mov
jb
jmp
sbb
lahf
add
shr
sub
xor
add
sbb
pop
and
inc
cld
inc
sti
cwtl
hlt
mov
gs
or
or
xlat
outsb
ror
shl
mov
repnz
jno
pushf
mov
mov
data16
ja
mov
add
add
mov
scas
call
mov
dec
dec
sarb
or
das
aaa
out
push
pop
in
ss
mov
imulb
sti
or
mov
stos
sbb
lock
mov
aad
gs
and
push
hlt
and
adcl
sub
jo
stos
ds
aaa
inc
jns
or
adc
sbb
or
stc
push
adc
nop
add
cmp
dec
xorb
mov
sub
call
gs
pop
adc
rol
out
and
mov
and
xor
sar
xor
pop
mov
repnz
aas
iret
mov
sub
pop
and
daa
call
mov
and
rorl
fadd
lods
mov
and
xchg
jns
mov
xor
in
and
xchg
pushf
xor
push
adc
cmpsl
xchg
push
cld
icebp
mov
xchg
xchg
loopne
adc
ja
inc
adc
stc
or
cmp
jmp
out
xchg
ds
jmp
pop
pushf
imul
and
dec
addr16
es
push
pop
stc
and
mov
scas
lods
or
dec
xchg
or
inc
sbb
bound
mov
sub
dec
psadbw
sbb
adc
test
repz
out
cs
pop
mov
mov
dec
dec
movsl
fcmovbe
repnz
jnp
out
imulb
movsl
pop
outsb
enter
adc
add
divl
shll
mov
xor
and
cmc
cli
roll
and
jle
ret
roll
adc
shll
lock
xlat
insl
xchg
fidivs
dec
jp
xor
std
add
sbb
pop
push
sahf
cmpsl
ds
mov
pop
in
or
ror
jl
inc
inc
mov
pop
jecxz
jb
jge
cld
push
sbb
fdiv
xor
xor
inc
mov
jo
shll
sbb
inc
scas
sbbl
sub
ja
loopne
rep
jb
add
shl
add
mov
sar
mov
popf
xchg
in
mov
stc
ss
or
jae
inc
fst
hlt
jo
lods
jle
xorl
push
movsl
repz
cmp
mov
mov
pop
adcl
pop
dec
ss
popf
xor
mov
aas
rcr
push
add
cld
inc
pop
rolb
adc
mov
or
or
mov
cmp
jecxz
push
and
lcall
sub
jl
lret
xorl
pop
mov
pop
out
sub
pop
lahf
test
and
adc
or
mov
xchg
sub
orl
cld
fdecstp
push
scas
mov
mov
push
and
mov
orl
add
dec
mov
lea
bound
popa
inc
jecxz
xor
das
mov
loopne
xchg
dec
in
pop
cmpsb
les
push
push
ljmp
jb
mov
push
insb
xor
cwtl
mov
push
hlt
mov
push
and
push
jno
push
jbe
push
sub
mov
push
sbbb
cwtl
inc
scas
inc
sbb
daa
leave
sarb
add
outsb
jb
out
sub
pop
cmpsb
mov
push
test
in
test
es
cmp
stos
inc
push
stc
daa
jmp
imul
bnd
imul
xchg
xor
fdivs
ljmp
rcr
aas
dec
and
out
cmpsl
add
test
pop
sbb
mov
hlt
rcrl
jns
add
out
pop
enter
sub
outsb
xor
fwait
das
add
testl
and
in
mov
data16
jl
and
adc
ss
inc
adc
jbe
pop
repz
cmc
lods
inc
jle
adc
xchg
add
ljmp
cmpsl
clc
sti
xlat
stos
jnp
loope
add
mov
ja
xchg
aaa
leave
pop
mov
adc
int
xor
pop
push
lret
hlt
test
clc
scas
icebp
jle
xchg
pop
mov
bound
xor
and
divb
jno
mov
mov
mov
mov
bndstx
imul
pusha
pop
imul
movsl
add
dec
sbbl
sub
cmp
pushf
push
les
stos
sub
push
enter
add
xchg
xchg
addr16
mov
sbbb
out
cmp
sub
mov
test
lock
mov
or
das
ljmp
je
push
push
mov
loope
push
jge
adc
stos
lds
push
ljmp
mov
inc
rol
out
shr
jo
mov
add
bound
xorb
jb
mov
in
sbb
adcb
pop
popa
sub
or
xchg
pop
fsubrs
pop
cmc
out
in
sbb
insb
inc
mov
fs
enter
popa
icebp
adc
add
mov
mov
addl
mov
loopne
test
lahf
cmp
jns
mov
mov
leave
jo
adc
in
ja
aas
mov
lcall
push
leavew
xor
or
cmp
cmpsb
std
das
cmp
sbbb
ja
insl
scas
imul
and
cmp
pusha
push
ficoms
ss
out
enter
cli
insl
imul
sahf
jge
jle
xor
pushf
aad
xor
mulb
out
jmp
mov
clc
mov
inc
cmc
xor
mov
and
cmp
leave
bound
push
ljmp
dec
or
imulb
xchg
scas
inc
sahf
lds
dec
jbe
mov
ret
jnp
shrl
and
fwait
sbb
pop
test
js
and
xchg
mov
and
add
ret
xchg
movsb
push
insb
inc
mov
hlt
push
and
lods
mov
les
les
cmpsb
sbb
test
subb
dec
fmulp
inc
shlb
outsl
pop
iret
enter
imul
lea
pop
mov
or
outsl
xor
out
popa
nop
cmp
pop
icebp
movsl
out
popf
adc
in
jl
cmc
xor
lds
adc
adc
lret
negl
movsl
out
dec
sbb
xor
add
gs
cwtl
test
sub
sahf
pop
mov
mov
ss
fidivrl
lcall
mov
sub
popf
dec
sbb
adc
ljmp
fwait
xor
xchg
ja
push
neg
pop
mov
icebp
or
pushaw
notl
sti
add
es
inc
and
jnp
fcoms
pop
jae
shl
popl
pop
xchg
sub
xchg
sub
sti
mov
sub
cwtl
mov
jg
in
mov
mov
int
ds
jns
pop
ds
dec
mov
jmp
sub
mov
pop
lods
fucomip
subl
sub
out
addr16
aas
sub
dec
in
dec
repz
mov
loopne
pop
mov
add
data16
pop
hlt
xchg
and
push
cmc
push
cltd
in
inc
push
and
push
mov
xchg
cmpsb
icebp
nop
loopne
enter
sbb
test
sbbb
pushf
stos
lods
mov
fidivs
mov
xchg
test
dec
fidivrl
cwtl
daa
jmp
or
jns
xor
ljmp
add
in
mov
fsubrs
or
xor
mov
mov
adc
cmp
aas
ss
in
out
mov
jne
sbb
lods
jno
stc
xchg
mov
ficompl
mov
out
adc
lds
cmp
adc
dec
lahf
mov
iret
iret
dec
mov
fdivl
mov
insb
dec
xchg
loopne
adc
jge
in
fnsave
sub
mov
ret
out
jp
pop
outsb
repnz
iret
and
repz
mov
mov
sub
pop
sbb
sbb
mov
or
out
icebp
popf
out
fldenv
mov
scas
mov
mov
push
addr16
dec
sti
push
outsl
and
cli
imul
ret
andl
dec
and
lret
xlat
push
push
stc
aas
stos
fsubs
orb
adc
push
cmpsl
jno
inc
movsb
cmp
push
adc
fidivrl
out
sti
jmp
movsl
xchg
mov
or
mov
nop
sahf
mov
lahf
jo
adc
hlt
ja
xor
mov
pusha
fwait
pop
mov
test
in
aas
shlb
lret
mov
lods
cld
xchg
fs
jne
push
sub
pop
adc
adc
mov
insl
ja
jp
inc
jns
repnz
mov
jns
xchg
inc
cmpsl
ja
aam
movsb
in
notb
daa
cs
adc
repz
ljmp
xor
popa
mov
xchg
sahf
out
mov
aad
arpl
stos
call
mov
sub
ss
in
or
lds
mov
fdivs
je
xchg
xor
fwait
dec
in
xlat
jnp
out
ss
fs
add
nop
daa
xchg
jle
xchg
mov
les
push
mov
inc
movsl
mov
mov
inc
rcl
test
pop
mov
cmp
xchg
sbb
fmuls
inc
fldenv
shlb
aas
add
test
inc
add
andl
cmp
adc
inc
arpl
aam
jns
mov
cmp
nop
inc
jno
mov
lahf
mov
xor
pushf
mov
dec
mov
mov
mov
and
jbe
or
mov
shlb
mov
shrb
add
sub
mov
push
mov
mov
ljmp
fnstsw
mov
mov
inc
outsl
int
fiadds
pop
push
mov
cmp
sub
sbb
xchg
jle
xchg
popf
xchg
pop
mov
pop
push
ja
or
sbb
mov
jle
mov
into
and
popa
es
inc
fidivrl
inc
scas
addr16
popa
jnp
fsubr
orl
popa
xchg
xor
dec
aas
cmp
lcall
xchg
mov
adc
imul
negl
in
lods
mov
adc
and
gs
xchg
xor
or
loop
push
popf
int
ret
mov
notl
test
xor
lret
ffree
loop
push
fwait
push
sbb
push
cs
mov
and
stos
loopne
movb
jbe
popa
jg
xchg
jae
mov
in
insl
shr
pushf
mov
arpl
mov
cli
or
call
pop
mov
icebp
sarl
mov
hlt
js
test
jge
or
cmp
sti
sub
js
push
outsl
jmp
and
xchg
dec
jbe
icebp
sbb
jl
pop
lock
mov
pushf
shl
std
mov
aas
mov
aam
and
jmp
cmp
push
xchg
mov
mov
add
xor
push
scas
js
popf
jne
test
or
push
adc
out
imul
adc
cltd
mov
xchg
loope
jae
addr16
pop
lods
into
xchg
lds
push
sub
cmc
imul
mov
cs
pop
xchg
sub
int3
mov
jmp
mov
scas
into
jnp
jmp
in
sti
icebp
mov
dec
ljmp
lahf
inc
sub
jl
sahf
push
fldl
mov
repz
mov
hlt
inc
jp
xchg
ljmp
xlat
jbe
push
mov
leave
fwait
or
lea
stos
inc
dec
sbb
leave
mov
sub
jae
xlat
in
add
xchg
adc
scas
lret
jmp
jp
popa
mov
pushl
xlat
mov
xor
xor
lods
stos
in
bound
mov
mov
sub
out
push
jge
movsb
xchg
xor
xor
mov
push
jmp
enter
sbb
test
adc
inc
in
mov
mov
mov
sbbl
out
push
inc
inc
out
int3
fsubp
fiaddl
dec
ffree
pop
aam
push
sub
js
and
xchg
ret
pop
ret
aas
cs
clc
arpl
test
sahf
mov
adc
add
popf
loop
std
inc
pop
or
insl
in
sub
add
sub
add
xor
sti
jp
add
add
test
mov
adc
sbb
cmp
xchg
imul
sti
decl
sbb
test
cmp
loop
sbb
xor
pop
inc
arpl
mov
dec
loop
xor
pop
push
or
xor
mov
fbstp
cmp
sbb
xor
pop
inc
pop
test
push
xchg
xor
cmp
notb
jmp
hlt
or
ljmp
or
xor
jmp
mov
push
rorb
lret
cmp
xabort
or
or
xchg
jg
ret
xchg
popf
scas
sbb
add
bound
xchg
mov
push
sub
aas
scas
std
and
or
mov
gs
fists
xor
adc
jmp
lcall
data16
hlt
mov
cmp
inc
pop
ljmp
stos
fidivs
inc
imul
cmp
mov
cld
jae
and
dec
xchg
xor
out
repnz
lea
xor
xchg
popa
add
mov
data16
dec
rorl
fbstp
add
mov
and
mov
ret
in
push
xchg
popa
inc
mov
out
js
jo
pop
jb
push
inc
fidivl
das
into
inc
das
push
stos
andb
je
mov
jnp
mov
iret
sbb
js
mov
fistl
lods
sub
pop
jne
mov
cmp
xchg
adc
jb
cmp
pop
lock
and
add
int3
xlat
sbb
mov
fwait
jo
int
add
adc
ret
pop
pusha
xor
mov
mov
cmpb
mov
inc
jp
xor
addr16
cs
into
xchg
daa
in
sub
or
movsl
icebp
insb
aam
movsb
mov
add
pop
mov
shrl
adc
jne
repz
push
mov
push
iret
push
iret
mov
and
inc
adc
mov
std
jbe
out
sbb
adc
std
xchg
inc
ss
in
pusha
sahf
ss
repz
scas
jno
push
mov
pop
in
adc
in
lds
rclb
pop
lds
fdivrl
pusha
mov
mov
cltd
ja
rorl
jnp
xchg
cld
js
mov
mov
push
stos
inc
lods
push
gs
inc
stc
xlat
add
ds
xchg
jo
mov
mov
cmpsw
imul
insb
or
mov
sbb
das
or
push
inc
lcall
pop
and
js
cmp
test
pop
inc
sub
pop
lea
cmpsb
xchg
add
sub
mov
std
ja
cmpsl
bound
mov
add
push
pop
mov
add
icebp
lret
jp
pop
xor
stos
enter
sbb
xchg
addr16
loop
xchg
mov
xchg
movsb
lods
sbb
out
cld
xchg
sub
sbb
cmp
insl
sub
xor
fs
and
add
popa
sub
dec
jae
cmp
jno
sub
pop
jb
jbe
mov
dec
push
pop
shlb
test
push
add
or
or
mov
inc
fidivrs
iret
stos
lods
fnsave
into
pop
and
cmp
sar
adc
clc
push
mov
sub
sub
ss
mov
mov
jb
es
scas
sahf
clc
adcb
adc
add
push
cwtl
mov
dec
jle
movsl
xlat
sti
mov
adc
mov
popf
and
adc
or
shll
test
mov
mov
mov
jnp
loope
imul
ja
push
xchg
inc
lods
dec
xor
push
ljmp
jne
mov
orl
inc
cmp
xchg
xlat
ss
fcoms
lea
cmp
xchg
mov
jnp
push
in
in
jbe
mov
cltd
pop
xchg
xchg
lcall
pop
into
popa
into
inc
scas
cli
mov
xchg
mov
ds
pop
mov
sbb
dec
xor
or
ss
cs
psllw
mov
iret
lcall
push
imul
outsl
fsubp
inc
stos
in
mov
sub
xchg
iret
mov
and
cmp
inc
lock
out
movsl
rorb
or
clc
jg
ja
xchg
adc
mov
sbb
testb
xchg
dec
cmp
in
std
fsub
mov
lcall
and
mov
test
js
mulps
mov
jle
out
add
cmp
out
push
outsl
xor
hlt
pop
push
mov
mov
pop
pop
les
aad
sbb
xchg
test
out
add
pushf
pop
cmpl
xorl
sbb
inc
in
out
leave
js
mov
push
mov
cmpsb
xchg
lea
lock
in
js
sub
pop
in
scas
mov
testl
mov
scas
fisubrs
stc
jg
cmp
gs
movsb
add
mov
push
pop
and
mov
sub
jbe
sbb
call
dec
fprem
jge
mulb
cwtl
mov
mov
push
test
sbb
test
and
jp
lods
cli
cmp
dec
add
mov
push
jp
push
pop
mov
pop
out
hlt
lods
mov
or
sub
mov
clc
data16
sbb
rol
jno
loope
imul
fbstp
adc
mov
sahf
push
aad
popa
jg
push
xor
stos
prefetch
or
movsl
je
mov
mov
clc
and
in
inc
cld
dec
pop
and
in
pop
lods
aaa
xchg
adc
sbb
pop
outsl
push
sub
pop
aad
xor
lods
ret
inc
ret
push
loope
test
dec
jg
sbb
movsl
mov
scas
inc
pop
add
cld
inc
xor
popf
addr16
dec
and
push
popf
dec
xor
xchg
test
stos
sbb
mov
stos
insb
mov
add
push
cmc
fdivs
mov
popa
testl
inc
push
into
dec
sbb
pushf
cmp
jge
jmp
hlt
xor
testl
jecxz
int
das
xchg
pop
adc
pop
pop
sub
fsubs
lds
orl
jnp
xor
pop
pushf
dec
loope
inc
rcll
outsb
jne
push
xor
mov
mov
mov
push
pop
adc
lret
mov
sbbl
push
and
loope
dec
sub
loopne
push
fwait
pop
out
je
xor
in
xchg
jbe
int3
adc
aad
out
dec
lods
xorb
mov
fcom
push
mov
or
or
shrl
idiv
lcall
pop
je
jbe
xor
push
push
push
dec
sub
xor
das
repz
fsubrs
shlb
inc
stos
inc
andl
push
sub
sbb
ja
mov
loopne
std
call
dec
or
push
mov
div
test
and
pop
jg
dec
in
stc
aad
das
and
pusha
push
sbb
addl
push
test
jl
js
push
icebp
bound
into
cmpsb
cmp
adc
push
pusha
sbb
fcmovnb
aam
out
and
rcl
lret
in
jl
mov
cmpsl
shlb
adc
test
insl
add
sbbb
clc
rorb
pop
cwtl
jecxz
int
xor
mov
cmp
lret
xchg
cmp
xchg
test
shlb
jae
or
inc
add
push
sbb
jb
mov
dec
cmp
stos
pop
fidivl
scas
lock
loopne
arpl
cltd
push
lds
and
xchg
loope
or
xlat
sub
movsb
cmp
lret
sti
adc
imul
shr
rcll
test
pop
mov
mov
add
shrl
lret
mov
push
fnstenv
lea
mov
and
push
inc
pop
sahf
jbe
xchg
test
push
pushf
scas
mov
out
jle
imul
sub
shlb
jge
insl
icebp
cmp
inc
sahf
or
pop
mov
dec
pop
jp
pop
outsl
cmp
pop
scas
mov
xchg
sub
repz
lds
in
jp
jg
or
pop
jnp
or
mov
sbb
repz
sbb
cmc
or
lods
and
xor
jnp
or
movsb
push
and
or
test
cmpb
pop
icebp
mov
add
icebp
ret
push
and
subb
dec
xor
xor
mov
cmp
mov
mov
loope
jnp
pop
into
leave
xchg
shl
jbe
push
imul
xchg
arpl
cltd
or
rcrb
mov
cmp
inc
pusha
test
sbb
scas
cld
jle
cmp
add
add
jns
pop
setle
jae
add
or
lock
lock
loop
jge
lea
mov
sahf
adc
add
cmp
outsl
inc
fbstp
inc
adc
outsb
es
in
add
fdivl
push
adcb
mov
push
push
and
adc
or
cmpl
sub
sub
dec
outsb
les
gs
push
inc
mov
int
cmpsl
mov
or
in
or
imul
lea
ljmp
mov
inc
sbbl
xor
popa
gs
ret
call
pop
and
or
xor
jmp
inc
pop
dec
push
es
movsl
scas
push
repnz
xor
loop
mov
pusha
xchg
outsl
push
jno
push
xor
mov
mov
fiadds
xchg
divb
pop
pop
out
pop
sbb
das
sub
xorl
push
popa
mov
xor
cmp
dec
out
xchg
int
pop
outsb
iret
mov
mov
cmp
cmp
lods
pop
or
push
in
daa
movsl
outsb
jno
jp
push
imul
adcb
sbb
mov
lahf
ss
dec
fidivs
push
loope
pop
iret
sbb
jl
cmp
add
aam
ss
adc
movsl
inc
sbb
lds
xchg
idivb
mov
ret
sbb
cltd
pop
dec
pop
cmc
in
enter
mov
or
push
push
sti
inc
cmp
enter
bound
rorb
mov
popf
cld
cwtl
sub
cmp
add
add
push
cmc
adc
in
lret
hlt
mov
cmp
lods
cmp
scas
mov
mov
pop
lods
xchg
sub
das
in
mov
mov
aas
and
pop
xchg
adcl
pushl
cmc
stc
subb
xchg
cli
push
ret
inc
gs
adc
sub
dec
cmp
stos
test
mov
dec
in
insl
mov
mov
jge
and
in
xor
dec
loop
test
insl
lods
ja
arpl
movsl
mov
repnz
inc
cmp
ds
jmp
sbbl
cltd
push
in
stos
xor
jae
data16
mov
fadds
jne
testl
push
or
mov
loope
imul
cltd
mov
jno
inc
fsubs
mov
pop
adc
das
fistpll
icebp
test
add
repnz
cmp
cltd
fldenv
inc
xor
sub
xlat
aam
adc
add
add
xchg
sbb
adc
cmp
out
xchg
loop
fwait
xor
test
imul
push
lock
adc
mov
mov
rcrl
enter
fnsave
cmp
sbb
popa
dec
push
mov
bound
cmp
or
sbb
aad
xchg
loop
push
jmp
into
aad
or
dec
add
xchg
add
ret
sbb
push
mov
push
add
in
mov
fwait
insb
ret
sarb
jmp
or
jo
fdivrp
out
add
dec
inc
ficoml
sub
test
ret
mov
jo
lret
cmp
shlb
fildl
adc
out
out
xchg
and
inc
fucom
add
pop
sub
out
movb
ffree
fadd
repnz
mov
adc
and
es
sub
inc
lret
xor
loop,pt
inc
dec
mov
jns
lock
inc
xlat
jmp
shl
jp
xchg
sub
fcoms
adc
popf
ss
hlt
ret
pop
sub
sub
in
mov
xchg
add
push
addb
test
stc
repz
cmp
sarl
sbb
mov
xchg
jno
cmp
inc
mov
push
push
xchg
fdivl
push
xchg
getsec
popa
jge
xchg
pop
inc
aaa
movq
mov
inc
mov
in
fs
sub
icebp
in
das
cmp
insb
inc
xchg
add
and
stos
aad
sbb
jns
xor
enter
insl
gs
mov
sub
clc
imul
movsb
pop
pop
jb,pt
ret
scas
mov
jne
sti
sub
or
cmp
addr16
imulb
test
test
imul
jns
add
xchg
mov
stc
insl
js
pushf
popw
xchg
daa
mov
xorl
je
jle
dec
pop
ffreep
mov
pushf
scas
dec
call
sbb
jb
bound
shrb
xorl
negb
cmp
xchg
push
out
iret
into
in
mov
aam
ror
ja
sti
repnz
test
push
std
xchg
imull
lods
fcmovbe
cld
push
iret
mov
mov
xchg
cli
sahf
cmc
xchg
mov
movsl
inc
xor
mov
ljmp
mov
push
cmp
mov
fwait
cmc
lods
dec
sub
aad
lahf
mov
jecxz
push
sub
pop
cmp
push
dec
dec
xchg
test
aam
xchg
xchg
lret
in
xchg
adc
scas
fcmovne
adcl
pop
ret
xchg
mulb
in
sub
sub
repz
dec
lcall
mov
arpl
and
mov
aam
lods
sub
inc
test
inc
inc
push
test
jl
test
fdiv
into
sbb
in
sahf
dec
movsb
xor
xor
and
insb
outsl
ret
push
insb
adcl
leave
cmp
sub
adc
decb
sahf
sub
negb
sub
lods
sbb
orb
in
and
and
pushf
push
or
test
leave
test
sbb
faddl
mov
pop
outsl
add
jns
loopne
dec
loopne
cmp
fwait
lahf
mov
pop
cmp
in
push
jecxz
loop
adc
push
xor
pop
mov
cwtl
stos
inc
popf
repnz
jg
mov
jmp
lret
bound
push
hlt
rorl
push
mov
mov
fidivs
adc
mov
adc
jns
andb
fidivl
roll
in
and
in
xor
dec
add
mov
std
mov
sbb
nop
push
or
or
popf
test
cld
sbb
add
xor
xchg
mov
addr16
sarb
ljmp
arpl
xlat
ljmp
cli
adc
in
pop
stc
mov
inc
ja
add
jo
dec
and
ja
jno
dec
adc
fidivs
jl
cmpsl
movsb
xchg
sub
les
in
cmpsb
std
add
lods
inc
adc
test
sub
insl
add
jecxz
cmc
mov
mov
jecxz
psubusw
push
xor
dec
lea
adc
out
push
lea
popf
idiv
in
mov
outsb
and
or
data16
loop
popf
cmp
xor
outsb
call
adc
jns
and
into
pop
lea
push
movsb
enter
or
outsb
sbb
inc
lret
jo
subl
fisttpll
es
popf
aad
jae
aas
shrb
in
mull
das
push
and
jbe
js
push
and
cmp
imul
lock
sbb
inc
icebp
enter
pop
outsb
cltd
imul
ljmp
inc
js
rcll
sbb
xor
scas
pop
scas
sbb
sahf
cmp
mov
shll
jg
rcr
add
ret
imul
pusha
mov
xlat
out
and
pop
repz
jnp
mov
add
cmp
mov
fs
mov
push
ret
pop
xor
sahf
push
push
fildll
push
push
push
cmp
cltd
mov
mov
push
add
mov
jg
pop
sbbb
xchg
sahf
mov
insb
cmpsb
mov
inc
stc
or
push
iret
pop
mov
push
add
mov
push
out
or
mov
mov
adc
add
mov
loope
or
pusha
push
sub
inc
leave
insb
hlt
xor
inc
pop
fildll
sahf
xor
jp
rcrl
and
adc
push
test
sub
ljmp
pop
sbb
cli
mov
ljmp
pop
push
jle
add
cmp
jae
aam
pop
aad
shrb
sbb
lret
mov
das
mov
dec
sahf
lods
shll
inc
push
movsb
std
sbb
movsl
shr
scas
mov
movsb
inc
jecxz
scas
inc
inc
jo
and
cmpsb
int
xlat
dec
sarl
add
test
xchg
mov
mov
fcmovbe
out
dec
sbb
scas
mov
jno
sti
or
call
rol
ljmp
pop
stos
jo
lods
mov
loopne
mov
ss
aad
mov
add
xchg
jle
sbb
mov
int3
das
mov
lret
sub
and
das
ret
xor
cmp
xchg
jl
loope
cltd
popf
jne
dec
mov
mov
imul
mov
add
daa
cltd
call
cmp
sbb
or
aam
jbe
mov
repnz
mov
roll
sahf
mov
popf
add
or
pop
dec
adc
add
outsl
push
in
dec
in
mov
jno
test
daa
mov
jecxz
xchg
repnz
xor
mov
and
int3
mov
xor
aaa
into
sbb
insl
or
cmp
leave
and
mov
mov
loop
sub
or
mov
inc
lcall
mov
or
imul
jl
call
adc
sarb
test
das
push
push
ljmp
jno
push
mov
ret
cs
insb
lahf
or
xchg
fsubs
and
ficomps
or
cmp
sarb
or
push
push
pusha
and
mov
inc
cmp
popf
and
add
mov
mov
pop
xchg
cmpsl
test
mov
mov
pop
hlt
flds
mov
lods
cmp
inc
loop
icebp
ret
cmp
out
daa
call
dec
jne,pt
stos
pop
rcll
pop
in
dec
xor
or
or
or
leave
adc
sub
xchg
add
fildll
cs
adc
dec
pop
push
outsl
xor
push
insb
cmp
jns
jg
sarb
ljmp
push
in
mov
add
mov
movl
cwtl
aaa
movsb
cmp
xor
mov
loop
scas
add
inc
mov
gs
dec
ret
sub
sbb
jmp
cmc
xor
add
jp
xor
push
hlt
dec
popf
pop
loope
test
cwtl
dec
imul
cmp
inc
cmp
add
cld
lahf
nop
xchg
pop
stos
mov
in
test
mov
test
jb
mov
mov
push
ss
cmpsb
loopne
add
sub
push
stos
mov
xor
sub
mov
es
aaa
ret
rclb
test
leave
adc
mov
aas
fnsave
adc
addr16
and
cli
xor
test
ja
jne
lods
mov
add
sub
sbb
push
xchg
in
daa
jae
fimull
in
std
aas
sti
fsubrl
pop
mov
addl
fbstp
mov
test
loopne
push
xchg
mov
lret
movsb
popa
scas
adc
shll
dec
xor
outsl
test
test
loop
insl
xlat
push
pusha
divl
xor
xchg
push
in
rclb
mov
xor
popa
leave
push
imul
scas
cmp
mov
fsubr
cld
jmp
mov
cmpsl
adc
xchg
push
jle
pop
out
mov
popf
out
int3
loope
int3
adc
sbb
shlb
jb
jmp
fstl
pop
pop
inc
sbb
dec
push
pusha
cmp
xor
push
xchg
push
pop
push
incb
xchg
lcall
add
mov
jno
arpl
out
lahf
mov
sbb
sbb
push
and
inc
push
insl
sahf
jnp
adc
insl
mov
rorb
push
in
cmpsl
xor
xchg
ret
es
cwtl
dec
jo
xor
xor
dec
into
push
movsl
insl
push
cld
push
iret
lea
pop
mov
aas
dec
into
sbb
cmp
or
dec
xchg
daa
mov
sahf
pop
ffreep
fwait
decl
in
mov
pop
out
xchg
outsl
mov
push
mov
rorl
scas
rcrb
loope
fcoms
mov
pop
xchg
testb
or
adc
outsl
insl
lds
jmp
pop
cmpsb
cmpl
mov
andb
mov
jmp
cmp
cwtl
pushl
repz
aad
jo
and
jl
std
out
movsb
es
push
popa
or
sbb
mov
outsl
cmp
push
cs
imul
push
cmp
pop
gs
push
repz
pop
inc
cmp
mov
aam
dec
inc
push
gs
mov
orb
xchg
xchg
and
mov
xor
fiaddl
sbb
scas
dec
loope
loop
loopne
jge
jge
jecxz
jnp
dec
add
jle
mov
pop
sbb
imul
push
mov
lods
add
cmp
jl
dec
fiaddl
xor
mov
fistpl
dec
fldcw
cmpsb
clc
inc
jl
scas
lods
jle
pushf
stos
inc
xor
stos
pop
mov
movsl
jnp
lcall
dec
pop
mov
insl
cmp
fwait
inc
popa
leave
cmp
in
mov
xlat
rorb
repnz
and
stos
jp
or
lret
xchg
xor
in
dec
jno
mov
sbb
add
mov
in
dec
loopne
aas
das
inc
gs
shlb
fwait
sub
xor
push
inc
ficomps
push
lds
add
mov
dec
push
mov
pop
xor
xchg
cwtl
push
lds
push
jb
push
jecxz
xor
imul
push
xchg
test
rcrl
mov
add
xor
lcall
movsl
imul
cld
outsb
mov
ds
mov
lret
dec
mov
lods
ljmp
testb
andb
stos
sbb
test
bound
iret
mov
adc
xchg
nop
pushf
and
inc
test
push
cmc
lret
in
mov
pop
mov
shl
cmp
pop
jg
mov
dec
pop
pop
sub
stos
jmp
lret
pop
xchg
dec
je
daa
and
adc
int3
adc
xchg
hlt
rclb
cli
das
les
and
repz
sti
sbb
inc
push
jne
xchg
xchg
sbb
and
and
mov
cmp
and
adc
mov
xchg
outsl
sub
cwtl
jb
iret
bound
ret
pop
sahf
sbb
mov
sbb
outsb
test
push
in
dec
pop
sbbb
rep
push
loop
lods
inc
out
dec
in
popf
in
adc
test
into
mov
inc
frstor
or
fimull
mov
inc
mov
jae
xchg
cs
scas
out
test
fbld
push
push
cltd
sub
inc
nop
ret
data16
mov
ljmp
test
outsb
inc
pushf
cmp
insl
arpl
lahf
ljmp
inc
pop
xor
and
lea
push
mov
inc
orb
pop
sub
in
imull
pop
xor
sahf
lock
jge
pushf
or
jmp
aaa
inc
cltd
and
fsubrs
inc
or
mov
testb
mov
sub
push
cwtl
jmp
mov
mov
test
jecxz
int3
xor
js
sub
in
repz
in
into
adc
jae
xlat
stos
xchg
ret
mov
cwtl
inc
popa
sar
mov
leave
arpl
jecxz
sbb
into
push
xor
hlt
sbb
xor
push
add
or
xrelease
fcomps
inc
lods
xlat
add
inc
mov
mov
adc
and
sub
ficompl
or
std
jae
pop
loop
inc
popa
lds
xchg
mov
cli
mov
fistl
sbb
xchg
and
imul
xor
enter
sbb
fldcw
add
popf
popl
ret
xchg
push
mov
popa
pop
mov
insl
outsl
sub
sbb
or
pop
inc
out
push
mov
and
lods
loop
inc
pusha
xorb
int
jno
mov
in
aaa
into
roll
mov
lock
xchg
cmp
je
xchg
push
loop
mov
daa
pop
mov
stos
jl
ds
daa
jge
pop
lea
pusha
cmp
imul
into
sub
jnp
inc
fnsave
fldl
insb
sbb
lea
sbb
aas
mov
movb
pop
dec
pop
iret
lea
fiaddl
jg
xor
icebp
imul
mov
xlat
dec
mov
jle
dec
filds
sbb
mov
push
lods
jmp
add
jnp
mov
dec
pushf
and
loop
arpl
jg
addb
rclb
push
rclb
test
jne
push
xchg
push
mov
icebp
mov
adc
mov
dec
xchg
xchg
sub
xlat
mov
hlt
sbb
sub
incl
cmp
sub
sarb
les
mov
pusha
pushf
inc
xchg
das
divl
xor
stos
in
loop
es
repnz
shrb
dec
push
cmpsb
movsb
fwait
sub
enter
test
outsb
adc
mov
int
adc
gs
mov
and
mov
sar
xchg
pop
call
xor
push
mov
arpl
push
xor
sub
jnp
rcl
mov
cld
mov
pop
jg
add
out
ficoml
test
inc
xchg
mov
add
xchg
out
cmp
sub
aas
sarb
and
cwtl
cmp
pop
xor
test
adcb
leave
lcall
add
in
mov
imul
push
cld
adc
and
in
flds
movnti
and
sbb
push
inc
push
sub
les
neg
js
scas
xchg
in
push
iret
cmp
fcompl
cmp
mov
pusha
mov
call
push
dec
sahf
xor
sub
inc
push
loop
lcall
mov
jbe
pop
cltd
out
or
movsb
mov
lret
cld
jne
xchg
cli
loope
jns
fdivrl
lret
sub
rcrl
popf
test
lahf
cmc
jnp
and
test
movsl
jl
sub
iret
pop
sub
cs
insl
sub
mov
inc
ret
scas
ret
mov
mov
lea
mov
adc
xor
dec
movsb
or
outsb
sub
stc
or
pop
push
je
or
rcrl
mov
mov
mov
mov
sub
ds
inc
dec
fsts
cs
push
jae
stc
popa
cld
push
lret
inc
cmp
jp
jecxz
std
in
inc
or
add
popa
mov
pop
mov
ljmp
jle
or
aam
stos
inc
jo
out
mov
xor
out
mov
ficoms
fisubrl
jbe
inc
cmpl
movsb
xor
imulb
sbb
aam
push
ret
out
lahf
ljmp
inc
jmp
idiv
jo
and
mov
xor
jne
push
mov
aad
rorb
add
sbb
mov
add
lcall
insl
iret
loop
sbb
fdivr
xchg
xlat
or
jne
sub
mov
cmp
es
adc
inc
inc
push
fsubs
insb
cmpsl
push
or
mov
jne
xor
and
clc
push
xchg
movsb
sahf
sbb
ds
cmp
imul
push
outsl
addr16
xor
adc
das
push
popa
jg
dec
dec
sbb
dec
out
cmc
clc
aaa
push
lods
push
push
jp
adc
loopne
inc
cltd
xor
inc
mov
pop
repz
or
xor
jge
and
shlb
int3
test
into
ss
sbb
or
into
es
inc
je
pop
push
popa
pushf
fs
leave
inc
insb
repz
fstp
add
pop
sub
loope
pop
ja
fbstp
insb
lea
mov
movsb
cmp
inc
cmp
jmp
lahf
sub
lret
mov
std
test
je
and
pusha
popa
xor
jl
cmpb
jle
mov
xchg
cmpsb
pop
in
sar
add
jge
xor
lds
and
out
out
mov
push
adc
jno
shl
mov
jecxz
dec
jno
iret
add
xlat
cmpl
and
or
div
enter
insb
out
pop
jno
repz
xlat
inc
mov
pop
add
xchg
xor
cmp
sub
arpl
cmpsl
sbb
cmp
cmp
and
dec
iret
mov
aad
inc
or
in
test
leave
iret
adc
fwait
fnstcw
cld
lcall
pop
jno
pop
out
xchg
cmp
and
xchg
scas
inc
inc
and
mov
outsb
jmp
xchg
add
aas
jo
insb
mov
mov
outsl
mov
aad
movsb
shrl
ss
aam
xchg
sub
add
cwtl
add
ret
dec
xchg
je
into
loop
inc
cmpsb
pusha
imul
adc
push
je
dec
and
inc
leave
inc
jae
arpl
xchg
xchg
cli
pushf
pushf
sti
repnz
lea
sub
fcomp
mov
push
jno
jle
test
int3
mov
jns
xchg
add
mov
push
mov
push
cmp
enter
mov
das
xor
xchg
or
loopne
jne
jle
sub
fildl
jno
dec
test
mov
stos
cmp
ret
arpl
push
xchg
lods
adc
fwait
fs
jecxz
pop
mov
pushf
and
sbb
sti
pusha
mov
jmp
mov
mov
pop
push
scas
scas
ss
dec
in
ljmp
hlt
jnp
imulb
jge
pop
push
decl
stc
fst
repz
xchg
mov
int
xor
popa
mov
sti
pushf
xor
lds
mov
imul
les
push
xchg
inc
xchg
jbe
lea
jns
rorl
daa
mov
sbb
loop
lahf
repnz
ds
fwait
outsl
jo
jb
enter
dec
push
call
loopne
mov
push
or
cmp
loope
sbb
out
pop
xchg
sarb
cltd
xorl
cmp
inc
mov
fs
mov
xchg
leave
popa
jns
aas
lret
insb
sbb
xchg
lea
test
mov
pop
cmp
mov
dec
in
or
jle
fldcw
push
jge
movsb
cmp
sahf
pusha
cli
xchg
mov
orl
adc
cmc
pusha
dec
sbb
or
loopne
js
mov
aad
xchg
mov
divl
scas
bound
imul
invd
mov
jg
pop
insl
push
les
int3
xchg
movsb
hlt
mov
mov
jp
orb
mov
mov
pop
mov
sbb
mov
push
and
xchg
sub
jno
xlat
xor
insl
jb
jp
insl
jmp
mov
sbbl
fiadds
sub
sub
xor
jns
sahf
xor
mov
inc
lock
js
xorl
out
mov
repnz
leave
sbb
mov
lods
inc
loope
les
push
jle
xorb
mov
push
pop
cs
fnstenv
mov
cli
fstpl
mov
pop
repz
inc
dec
jbe
jp
mov
int3
push
pop
rcrl
jecxz
test
jge
push
ljmp
dec
mov
mov
push
bound
cmp
cld
or
mov
orb
nop
sbb
out
movsb
mov
lea
mov
shl
jl
cmp
pusha
jecxz
test
scas
ret
rcrb
shll
sahf
jp
mov
mov
dec
outsb
mov
push
cmpsl
push
je
call
test
subb
popa
cmp
jno
add
nop
dec
inc
xchg
sub
or
cmc
fidivl
add
adc
shll
mov
cmp
loop
sbbb
lds
add
mov
sub
lds
dec
shlb
rcrl
push
xchg
jg
jecxz
in
push
or
dec
push
insb
shlb
stos
mov
dec
dec
jno
push
xchg
dec
adc
push
jge
mov
push
push
movsl
cmp
and
movsb
pop
push
xchg
mov
scas
jecxz
fisubs
dec
pop
aad
fsubrs
insb
mov
call
or
xor
inc
or
out
repz
pop
pop
je
cmp
mov
mov
std
xor
loope
movsb
pop
and
insl
cmp
push
mov
lret
push
cmp
mov
push
fwait
stos
xchg
xor
test
mov
jl
dec
fsubr
je
jnp
mov
add
mov
mov
push
jl
lret
sti
dec
icebp
jle
gs
inc
mov
ffreep
gs
mov
fdivl
out
into
gs
test
inc
sub
lods
loopne
mov
mov
aas
fisubl
in
xchg
and
jnp
inc
push
xchg
das
loopne
mov
jbe
insb
mov
push
mov
fmul
loope
sar
xchg
add
and
jno
incl
and
xor
cmp
lahf
and
push
push
xchg
cmpsl
dec
add
and
pshufw
das
sbb
ret
pop
xor
inc
mov
popa
mov
push
dec
inc
lea
cmc
inc
push
gs
dec
dec
push
jno
fdivs
into
or
push
mov
bound
sbb
fbld
lods
pushl
push
je
iret
data16
mov
add
pop
cltd
cmpsl
adc
or
pop
popa
xor
inc
pop
outsb
jle
cmp
ret
cwtl
ret
cmc
or
mov
mov
xor
test
inc
ficoms
mov
mov
pop
add
dec
stos
mov
fsts
lea
cmp
pop
cmp
fs
push
stc
cltd
test
lock
pop
jmp
ficompl
std
ja
pop
movsl
xchg
js
movsb
add
mov
push
xor
cmp
jo
add
pop
imulb
push
ja
dec
mov
hlt
sbb
stos
dec
stos
inc
push
xor
xor
sbb
call
pusha
mov
mov
lea
sahf
int3
inc
ljmp
mov
call
cmc
cmp
repnz
fs
add
inc
inc
popa
dec
in
lods
push
mov
push
jnp
in
dec
hlt
rclb
jnp
movsl
out
gs
shrl
movsb
mov
lahf
ss
mov
int
sysret
sahf
dec
jbe
lahf
cmp
and
fidivrl
ret
mov
ret
push
jns
sbb
xor
mov
repz
hlt
lea
pop
pop
rcll
xor
jp
mov
sbb
sbb
xor
adc
je
out
movsl
xchg
and
icebp
xor
or
pusha
jg
sub
jnp
dec
lods
fidivl
push
or
sub
jne
push
mov
insl
xchg
add
adc
jge
out
test
xchg
mov
pop
cmc
sbb
outsl
jl
rcrl
mov
inc
inc
arpl
lds
mov
lods
sbb
call
test
or
fisubs
jecxz
mov
jg
sub
inc
and
dec
inc
mov
ja
cmc
loopne
and
push
aas
jge
mov
fimull
inc
inc
or
insl
mov
push
out
sti
xchg
lahf
test
stos
inc
adc
cs
sbbl
int3
jmp
enter
cmp
pop
jns
fisubs
jo
jg
fsubrl
mov
add
loope
lods
xor
adc
jge
push
jae
or
cmp
mov
pop
ds
ds
lret
push
and
add
push
std
and
mov
test
fwait
out
push
in
enter
dec
sub
jbe
dec
out
icebp
cmpl
and
dec
lods
int
inc
mov
inc
add
sbb
outsl
out
in
test
cli
xlat
cwtl
xor
pop
into
out
or
fucomp
push
arpl
mov
inc
xor
ja
popa
pop
pop
mov
out
je
mov
push
ret
push
fprem1
ret
jmp
pop
adc
iret
data16
push
add
aad
fwait
or
lea
xor
and
mov
mov
cmp
add
fldcw
or
sahf
stos
icebp
stos
test
or
jne
add
jne
popa
jb
imul
and
jge
cmp
or
andb
jb
aam
loope
mov
addr16
mov
mov
popa
inc
xlat
test
pop
dec
je
arpl
pushf
cmc
mov
inc
testb
cmpsl
jno
fldcw
add
stc
sub
jp
nop
jnp
inc
out
push
lcall
jo
inc
adc
pop
movl
or
inc
mov
bound
push
gs
fdivl
push
sbb
fsubl
inc
fisubrl
ljmp
int
jnp
repz
mov
testl
sbbl
push
ret
pop
push
negb
out
pop
mov
out
jae
test
fnsave
push
pop
sbb
push
pop
jmp
loopne
call
pop
negl
xor
dec
mov
popa
mov
pop
into
cld
and
shl
and
subl
cwtl
das
mov
and
test
ret
nop
movsl
scas
dec
pop
movsl
sbb
mov
xor
lods
jb
pop
or
lds
push
stos
cmp
inc
sub
enter
loope
and
push
ficoml
adc
mov
cld
cmp
das
push
adc
hlt
and
scas
outsl
xor
mov
or
sti
in
mov
cs
sbb
cmp
push
push
add
cld
in
mov
mov
test
pop
add
pop
or
pop
cmc
mov
or
daa
andl
pop
dec
sar
add
xchg
mov
and
mov
dec
test
xchg
daa
clc
xchg
enter
jmp
cwtl
jmp
leave
inc
xchg
jae
daa
fadds
xchg
or
mov
jl
xchg
add
mov
lahf
rorl
repnz
lret
dec
scas
cmp
push
cmpsb
into
arpl
add
test
insb
movsb
lret
xchg
jb
jg
mov
notl
mov
xor
lret
in
ja
cmpsl
roll
and
xor
js
sbb
jnp
lret
hlt
in
out
aam
mov
shl
test
cmp
xor
mov
ss
leave
or
jo
movsb
loope
popa
movsb
repnz
xchg
aas
ja
xchg
sub
cwtl
mov
inc
cmp
test
icebp
stc
xchg
xchg
mov
fidivl
add
and
inc
mov
cmp
fpatan
jp
in
notl
mov
xchg
add
loop
fnsave
inc
jmp
mov
push
push
ljmpw
sbb
loope
push
and
dec
jg
dec
mov
jge
sub
dec
in
les
push
repz
sub
adc
jo
xlat
repz
cmp
loopne
mov
lods
lods
out
pop
dec
cmp
or
jge
or
inc
mov
cmp
in
pop
insl
push
movsl
popf
jge
sub
ss
mov
addl
sub
pop
test
into
push
test
jle
push
adc
adc
enter
std
es
cmp
cltd
mov
dec
fisubs
lret
aas
cld
or
jo
test
aas
inc
add
orb
shrb
sub
inc
push
pop
pop
mov
or
ds
cmp
push
sbb
nop
xchg
sub
clc
data16
sbb
mov
aam
push
jmp
push
mov
xchg
data16
adc
int3
and
fisttpl
mov
in
jl
fdivl
loope
lock
pop
cli
xchg
dec
insl
pop
jno
xor
mov
ja
and
mov
and
adc
xchg
pop
lret
sbb
push
sub
xchg
or
fsubrp
mov
push
fucom
xchg
into
push
dec
push
gs
jecxz
pop
sub
outsl
mov
out
cmp
and
cmp
cmp
cmp
sub
je
pop
sub
test
and
push
das
adc
dec
jecxz
hlt
add
movsb
iret
jecxz
pop
dec
push
cmp
cmp
adc
cmpsb
sbb
aas
aas
pushl
and
leave
pop
int
inc
ljmp
data16
cmp
sub
xchg
sti
loopne
jno
movsl
fucomip
xchg
orb
mov
out
test
cli
pop
or
jl
test
dec
mov
pop
shll
movsb
adc
lcall
and
int3
jno
je
and
sti
xchg
test
cmpsl
jge
sbb
into
sahf
sub
in
idivl
iret
sti
jl
outsb
scas
sbb
sub
mov
sbb
push
es
sub
iret
sti
and
dec
gs
js
sarb
mov
das
jp
stos
int3
xchg
xchg
das
cmp
mov
in
adc
pop
xchg
mov
push
sbb
out
cmc
dec
push
scas
notb
setle
inc
push
rorl
scas
lcall
notl
push
or
xlat
aam
sub
in
cmp
test
stos
shrl
cmp
ret
movsb
jnp
in
lea
mov
xor
dec
test
jp
stc
out
repnz
dec
mov
add
xor
and
popa
jo
stos
pop
imul
in
cmp
jmp
push
iret
mov
jecxz
cmp
and
xchg
clc
and
pop
fiadds
mov
and
arpl
xor
xchg
fs
pop
daa
out
loope
jns
inc
jb
shll
jecxz
xlat
mov
loope
sbb
add
and
fimuls
lret
push
fsubrl
ficompl
stos
mov
push
inc
sub
push
sub
scas
lds
movb
loop
decb
add
jl
push
and
and
out
xor
mov
les
sub
outsl
sbb
out
nop
bound
adc
jecxz
int
cld
jno
cmp
jge
push
loope
enter
sahf
in
stc
icebp
xor
andl
inc
shrl
pop
add
pop
pop
push
popf
sbb
es
push
icebp
cmpsl
or
js
loopne
add
and
and
inc
popa
xor
aaa
aaa
push
imul
jns
fs
iret
imul
jmp
clc
sub
dec
cld
out
or
lret
das
int
pop
cmp
scas
push
cld
jl
mov
pop
fildll
jno
and
mov
adc
add
aaa
xor
sub
add
xor
scas
add
xchg
imul
ljmp
aam
sbb
xor
inc
sti
jbe
push
jecxz
int
dec
sbb
inc
mov
xchg
add
in
pop
and
or
nop
lret
cld
mov
negl
mov
jecxz
aas
jle
in
adc
inc
add
lds
push
leave
bound
pusha
cmp
push
test
inc
icebp
cmp
enter
jmp
xor
sbb
push
add
dec
ss
push
ret
rcll
fcoml
into
jae
jnp
pop
loop
sahf
dec
inc
ror
imul
jb
xchg
sahf
aaa
dec
jmp
and
cmp
push
imul
add
add
cmp
pop
movsl
cmp
pushf
add
inc
bound
jne
push
nop
xor
xlat
bound
lods
loopne
xchg
ja
sub
incb
mov
and
sbb
test
add
jae
adc
dec
lret
test
xor
imul
push
pop
push
push
jo
sub
movb
in
and
repnz
mov
mov
js
call
inc
fisubrs
inc
cld
lock
or
mov
dec
pop
mov
add
test
jge
ljmp
push
out
nop
es
call
inc
scas
push
dec
add
fildl
fsubs
pop
dec
xchg
scas
pop
sub
data16
sbb
ds
jae
mov
lahf
push
jecxz
pop
xchg
or
dec
out
loope
fs
jecxz
jbe
std
or
stos
shrl
push
in
xor
sub
test
mov
mov
out
mov
mov
xchg
mov
add
jecxz
pop
and
clc
icebp
fisubrl
not
lret
call
or
inc
fcoml
ss
mov
jge
push
imul
das
jge
xorb
jge
jl
cmc
fldt
sbb
xlat
pop
popf
xor
jecxz
sub
push
mov
cld
xor
pop
lahf
js
outsl
cmp
mov
jmp
add
sub
fcomp
fimuls
test
daa
test
loope
adc
test
lcall
lahf
clc
in
jbe
mov
icebp
cld
xlat
mov
dec
mov
jbe
mov
xchg
mov
jnp
mov
sbb
mov
xchg
popa
inc
aam
fsubrs
sub
xlat
inc
fsubl
jnp
sub
outsl
loopne
lret
and
into
js
int3
xchg
cltd
inc
push
xor
xchg
sbbl
enter
dec
adc
js
add
test
aad
pop
dec
movb
ja
adcb
vpcmpeqd
outsl
das
mov
jmp
test
or
push
je
icebp
lods
outsl
stos
rclb
and
jnp
in
imul
pop
mov
sarb
test
sub
pop
sbbb
stos
inc
xchg
mov
repz
cs
xlat
sbb
xchg
scas
loope
adc
push
sbbb
je
jmp
mov
jae
inc
pop
sbbl
je
mov
sbb
mov
mov
test
jo
repnz
jmp
lret
pop
dec
push
push
das
iret
test
daa
jbe
add
and
and
push
cmovb
loop
jo
push
add
in
call
xchg
xor
xchg
out
or
sbb
jge
cmpsl
test
mov
int
mov
popf
xor
out
cmp
xchg
rcl
imul
or
call
sbb
fs
push
cmc
mov
dec
jmp
in
in
mov
fildll
insl
xlat
outsb
lahf
pop
out
add
xchg
mov
jecxz
jl
stos
icebp
jne
aam
adc
in
and
cmp
scas
shrb
rorb
into
push
lods
push
fdivs
cmp
in
mov
or
push
push
pop
pop
jne
mov
fucomp
sub
cli
and
mov
insl
sbb
cmp
cs
shll
testl
sub
push
sub
loopne
lcall
mov
pusha
push
pop
adc
les
adc
fisubrl
inc
push
andb
lock
mov
clc
sbb
lods
xor
lods
push
push
xor
pushf
sbb
dec
dec
sarl
and
test
dec
pusha
adc
lret
inc
stc
dec
inc
mov
sbb
jmp
push
mov
inc
test
inc
lahf
cmc
ljmp
cmpsb
xorb
add
add
jno
cld
sbb
or
adc
add
sar
bswap
sbb
adc
cltd
jns
lret
dec
fnsave
mov
pushf
lcall
in
xor
pop
add
roll
or
inc
fdivrs
dec
notb
mov
loope
mov
xchg
shlb
jns
inc
repz
hlt
mov
nop
shl
mov
xchg
imul
ret
stos
push
mov
inc
sbb
movsb
es
xchg
sti
adc
mov
jno
jb
inc
loopne
mov
fadds
xchg
idivl
icebp
lcall
into
jmp
mov
loopne
mov
pop
daa
push
inc
ffreep
ret
call
xchg
sub
adc
mov
xor
je
filds
push
xorl
mov
movsb
lret
and
push
lock
stc
test
shr
adc
cs
inc
mov
sub
scas
scas
mov
and
inc
movsb
daa
shlb
ja
xchg
or
sti
int
sub
lcall
inc
ficomps
inc
mov
insb
insl
out
ljmp
subl
mov
insb
ficoml
mov
fidivrl
les
cld
mov
mov
mov
push
stos
shll
cmp
jns
fs
popf
outsb
pop
lods
mov
repnz
cmp
xchg
lcall
cwtl
jmp
fstps
gs
insl
jge
cmpl
dec
adc
xor
stos
cld
adc
push
xorl
mov
rclb
lods
inc
and
lcall
cld
aam
push
jmp
adc
loopne
in
xchg
sub
sbb
mov
mov
cmp
dec
inc
int3
lds
gs
lcall
sbb
push
fnstenv
out
sbb
mov
mov
dec
inc
gs
iret
bound
fsubrs
orb
gs
pop
es
cmpxchg
ret
repz
or
iret
lods
fisubl
push
in
or
mov
sub
cmp
mov
aaa
popf
bound
shr
push
cltd
std
sbbb
mov
push
jmp
pop
lods
xchg
sbb
aas
sbb
mov
popf
cld
lock
mov
pop
rcrb
push
push
lcall
mov
lea
pop
call
popf
loopne
cmp
aaa
lret
fistps
lret
mov
cmp
push
outsl
add
fiaddl
popf
hlt
push
ljmp
cmpsl
cmp
pop
jns
aad
js
jmp
mov
iret
lds
mov
fistps
mov
push
icebp
sub
insl
jae
xchg
cmpsb
push
fmulp
add
jnp
mov
cmpsb
cmp
lods
ljmp
pushf
xor
sarb
cs
mov
je
mov
mov
test
cld
inc
mov
xor
mov
in
mov
in
push
test
iret
andb
mov
mov
inc
stos
xchg
xor
inc
rclb
jnp
push
xchg
cltd
shl
push
dec
jecxz
jecxz
gs
int
outsl
rolb
les
arpl
push
sbb
shl
xchg
stos
xchg
iret
cmpsb
sub
jle
xor
and
and
dec
xchg
outsb
xchg
jp
stc
mov
sub
dec
stos
and
adc
insl
inc
loopne
lahf
mov
jle
dec
test
in
adc
decl
aam
fs
iret
jnp
jmp
ljmp
xchg
inc
cmpsb
stos
xchg
jl
inc
pop
xor
lahf
stos
imul
and
lea
push
negb
mov
dec
pop
cmp
cmp
add
test
sub
iret
std
enter
xor
mov
cmp
testl
sub
jmp
mov
cwtl
jecxz
insl
arpl
in
dec
or
cli
jo
xchg
jecxz
mov
cmp
or
mov
pop
icebp
jno
push
rorb
or
push
lds
orb
lea
jge
dec
pop
movsl
cmp
push
push
lods
mov
call
or
jg
push
mov
pop
iret
jbe
or
scas
mov
jnp
cmpb
into
mov
std
and
rorl
in
or
adc
lea
in
repnz
push
test
push
movsb
cmp
data16
push
loop
mov
mov
out
sbb
sbb
mov
push
xor
roll
pop
adc
shrl
movsl
lcall
rorb
scas
pop
sub
stos
mov
pop
les
inc
pop
loopne
adc
and
and
jae
nop
mov
fists
insl
mov
sbb
inc
fsubrl
sti
jb
jp
dec
xchg
dec
pop
andnps
inc
sbb
cli
push
or
dec
incl
xchg
aam
fidivrs
push
imul
adc
retw
cli
sub
enter
jp
cmp
adc
push
and
out
jmp
out
andb
xchg
int
insb
jl
out
cwtl
arpl
ror
and
xlat
fdivp
inc
call
mov
jae
inc
inc
loopne
in
jmp
pop
aam
insb
add
out
gs
fwait
mov
stos
inc
xchg
fcomps
mov
mov
fs
or
lcall
insb
add
scas
sbbl
and
push
or
cmp
pop
lods
inc
sbbb
mov
push
in
insl
add
cmp
sbb
mov
push
in
insl
add
cmp
sbb
lret
outsl
push
out
insl
add
cmp
sbb
outsb
add
outsb
clc
pop
sbb
dec
push
pop
mov
jp
enter
xchg
insl
sarl
test
jns
fwait
cmp
ja
add
daa
sbb
fistps
push
shlb
addr16
jns
and
mov
sahf
movsl
inc
xlat
shlb
ds
into
call
loop
int
xor
mov
or
arpl
sub
out
aas
test
mov
xor
sbb
mov
cs
push
and
cmp
test
push
lcall
scas
in
pop
mov
adc
cwtl
mov
sbb
mov
cmp
lret
fcmove
cld
pop
sub
insb
cmp
sbbl
out
xchg
jmp
mov
fidivs
mov
and
out
or
pop
lds
jecxz
push
sysret
imul
cmp
fldl
popf
cs
push
les
dec
leave
cmp
adc
in
pop
enter
sub
gs
push
popf
call
imul
mov
gs
fnstenv
shrl
push
or
int
je
and
adc
xchg
aas
lret
cltd
fildl
xor
xor
pop
rcrl
xchg
xor
mov
in
and
loop
mov
sbbl
sti
dec
jp
enter
or
adc
in
mov
clc
inc
fnsave
push
mul
sti
sub
notb
xchg
std
and
mov
mov
aad
mov
and
std
stos
or
lods
fcoms
bound
pop
mov
insb
in
add
mov
es
lock
fsubl
push
xchg
adc
mov
push
aad
lea
dec
or
add
rcrb
or
mov
add
loope
or
jno
repnz
fildll
loope
sarl
mov
das
jg
xchg
movl
jns
in
mov
xlat
mov
add
jecxz
lods
sub
pop
mov
fwait
stos
sub
test
dec
test
mov
aad
jmp
clc
pop
sbb
push
out
mov
xrelease
pop
or
aaa
cwtl
mov
dec
push
out
xor
imul
arpl
jo
andl
add
jb
popf
and
scas
roll
xchg
push
fs
inc
xchg
inc
mov
shlb
mov
dec
jecxz
out
xchg
push
leave
mov
ss
leave
cmpsl
or
fidivl
sahf
mov
ret
add
popf
js
lods
mov
ss
push
sqrtps
xor
dec
fwait
divb
adcl
mov
xor
jg
xchg
dec
push
pop
scas
mov
xor
cli
push
loop
and
sti
or
pop
loopne
push
jb
in
pop
pop
mov
test
xchg
and
pop
lret
mov
fs
vcvtsi2ssl
loopne
inc
dec
data16
mov
dec
push
jb
clc
out
add
xchg
inc
push
mov
push
jae
jl
mov
add
lods
hlt
mov
xor
sub
lcall
sbb
outsl
inc
out
inc
fcomps
dec
xchg
add
sbbl
cld
jle
lahf
negb
pop
dec
stos
or
pop
mov
insb
jnp
push
decl
test
bound
lea
out
addb
or
or
or
or
cld
repz
ja
inc
test
sbb
mov
sahf
mov
add
ds
stc
jo
ficoms
dec
push
mov
sarl
adc
dec
lds
adc
push
in
pop
outsl
adc
ss
aad
xchg
add
xchg
popf
jg
fmulp
inc
fildll
mov
or
mov
pop
pop
mov
mov
mov
scas
xchg
fnstenv
dec
cmp
test
lahf
sti
shl
mov
sbb
mov
dec
pusha
cli
imul
cmp
js
scas
mov
scas
imul
mov
add
call
mov
add
and
adc
mov
xchg
inc
push
adc
stos
jmp
or
dec
xor
push
sbb
mov
imul
xor
push
jg
neg
mov
dec
push
lcall
sarl
pushl
ljmp
out
xlat
aad
rorb
xchg
mov
lret
jae
les
xchg
fstpt
fildl
adc
fdivrl
xchg
mov
mov
push
jae
push
incl
sbb
adc
out
and
push
adc
outsl
mov
jmp
mov
and
dec
jne
sti
pop
mov
movsl
rclb
mov
mov
xor
and
fisubs
outsb
dec
push
icebp
sub
adc
cmp
and
mov
out
ds
imul
pushf
mov
shrl
lcall
and
int
shlb
pop
cmpsb
cmp
pop
dec
pop
pop
and
dec
mov
test
lock
rclb
cmp
pushf
push
mov
inc
repnz
adc
cltd
mov
repnz
jne
xlat
cli
pusha
repz
or
cmp
pop
mov
pop
inc
movsl
push
add
lcall
adc
loope
xchg
les
out
sarl
jecxz
sub
dec
inc
pop
mov
inc
and
cld
jmp
addl
shll
add
mov
loop
xor
add
cwtl
jl
sbb
popf
inc
and
mov
std
lods
mov
test
cld
or
roll
pop
sti
cmp
cli
mov
mov
int3
fdivrp
adc
stos
adc
test
sub
inc
sbb
add
bound
movsl
lcall
mov
push
icebp
nop
loopne
das
add
jne
lds
jecxz
ja
inc
push
xchg
cmp
in
mov
insb
orl
and
loopne
or
cmp
push
shll
fldl
mov
sub
mov
inc
imul
lret
jg
shlb
iret
dec
jecxz
adc
dec
int3
loope
sbbb
pop
sahf
jmp
fsubs
mov
dec
ljmp
addr16
xor
jge
and
mov
push
jne
leave
leave
cltd
and
push
inc
jno
jne
sbb
es
imul
mov
js
shrl
push
andb
xchg
loop
sbb
or
into
in
xchg
or
scas
mov
lahf
js
int
sbb
dec
mov
jge
addl
xor
inc
cmp
xor
inc
pop
xchg
mov
push
and
xchg
adc
fsts
xor
inc
and
test
idivb
movsl
cmp
push
cltd
mov
adc
sbb
adcb
add
frstor
ficoml
sahf
jbe
sub
enter
cmp
in
mov
lods
cli
outsb
fisttps
idivl
loop
pop
add
sbb
jae
aam
ss
cmp
cmp
dec
fwait
rcl
pop
imul
loopne
xor
filds
iret
mov
mov
mov
or
mov
push
cmp
shll
cmp
inc
cmp
inc
in
nop
sub
push
xchg
in
les
imull
imul
popf
jae
jg
fld
movsl
push
jae
or
sub
mov
ja
in
insl
insb
pop
dec
pushf
cmc
push
stos
sbb
jmp
add
sub
ja
pop
or
int3
jp
test
mov
pop
sub
dec
sub
shll
std
aad
ljmp
hlt
inc
mov
sbb
add
fidivrl
and
loop
mov
in
jno
lock
cld
sbb
inc
or
cs
xlat
enter
mov
xor
sub
fbstp
cmp
adc
comiss
inc
sbb
jg
addr16
nop
adc
pop
xor
sbb
mov
pop
in
out
gs
push
inc
cmp
xor
sbb
dec
dec
add
mov
push
mov
xchg
adc
xchg
fisubs
xchg
xor
cli
mov
xchg
cmpsb
xor
in
ret
sub
cmpsb
push
or
mov
dec
sub
insb
mov
ljmp
mov
insb
negb
mov
fsubrl
js
add
cmpsl
pop
jae
mov
jbe
lods
ds
pop
incb
and
call
int3
pop
and
mov
fcomip
mov
fidivs
push
adc
xor
daa
push
lret
ret
mov
xor
jno
push
ror
int3
cmpl
mov
pop
jle
faddl
sbb
inc
add
dec
and
int3
mov
fsubl
scas
into
fcmovnbe
xor
and
jp
fidivrl
repz
bound
xchg
into
mov
icebp
jg
stc
std
gs
cmp
and
jp
insl
popa
mov
push
xchg
movsb
adc
xor
pop
mov
fbstp
and
lods
mov
sub
outsb
jmp
aas
push
lock
add
cmpsl
xchg
sub
fxch
jae
repnz
mov
or
adc
sbb
mov
jns
loope
sub
sub
sub
cltd
mov
jl
test
jnp
jl
test
cltd
stos
inc
or
into
popf
scas
leave
cmpsl
pop
push
push
pop
addr16
jnp
mov
sarl
dec
push
mov
jg
inc
sub
pop
lock
mov
pop
cmp
addr16
push
sub
hlt
xor
std
pop
xor
jle
aaa
ret
stos
mov
ljmp
pop
pop
aam
or
outsb
cltd
xlat
mov
scas
and
xchg
adc
mov
jmp
add
dec
cmp
ret
popf
xor
inc
pop
push
sbb
xor
xchg
and
sub
lds
cmp
jg
lret
sahf
cltd
aam
or
push
or
or
cli
outsb
xchg
mov
adc
divb
aam
xchg
sbbb
mov
shll
aam
mov
in
test
cmp
mov
and
push
lret
jecxz
hlt
daa
sarl
mov
daa
inc
into
mov
adc
repz
and
ja
sub
mov
daa
jne
or
imulb
push
xor
xor
sbb
mov
sbb
mov
sub
das
jae
dec
arpl
xor
inc
dec
mov
inc
cwtl
jnp
leave
cmp
xor
or
rol
icebp
das
xchg
sub
and
or
sbb
pusha
pop
dec
push
imul
les
aam
rolb
nop
push
aam
and
ret
push
daa
pop
dec
pop
jb
dec
mov
popf
push
dec
dec
ja
jge
lods
sahf
push
mov
pushf
out
test
push
cmp
mov
lahf
push
mov
jl
int
inc
insb
and
jne
adc
xor
push
in
les
lret
addr16
dec
pop
lret
jns,pt
and
xchg
cs
scas
xchg
pcmpeqw
push
ret
sub
fdivrl
cmp
sbb
push
sbb
out
mov
ljmp
sbb
bound
jp
dec
mov
mov
sbbl
jo
sub
push
idiv
pop
fnstcw
or
dec
xor
pop
fists
xchg
xor
jns
push
and
pop
xor
rcll
jns
insb
rorb
es
lret
push
xchg
insl
add
sti
push
aam
cltd
mov
mov
les
lret
ret
enter
mov
push
fwait
fwait
cwtl
pop
mov
hlt
mov
stos
jmp
or
lock
fsubrl
push
in
cld
ds
arpl
call
jae
xor
das
add
sub
lcall
sbb
pop
jno
xor
negb
push
fsubrs
push
mov
and
test
sahf
cmpsb
push
xor
xchg
cmc
dec
push
push
fimull
jge
repnz
jp
popa
mov
int
add
es
adc
or
sbb
sbb
mov
mov
loopne
ret
push
lods
inc
sub
into
and
jns
sbb
cmp
jns
push
fmuls
cli
inc
sbb
loope
lea
inc
jnp
xchg
push
inc
popf
pop
sbb
cld
and
xlat
lcall
mov
cs
lcall
arpl
cs
xor
pop
jle
mov
aam
daa
outsl
aam
fsubl
sub
lds
addb
add
mov
into
jg
test
mov
xchg
jbe
ret
inc
aam
adc
dec
stos
cmp
repnz
push
sub
xor
add
inc
cwtl
mov
inc
inc
fwait
in
jnp
mov
stos
shlb
jmp
add
mov
pop
jmp
dec
pop
and
rol
dec
ds
mov
stos
inc
das
add
fsub
test
nop
jmp
scas
ret
jp
fldcw
add
cmpsb
subb
ret
lcall
add
mov
push
jbe
cs
jle
clc
and
xor
jecxz
ljmp
pop
hlt
movsb
xchg
adc
inc
stos
cmp
lahf
push
dec
nop
jg
mov
xchg
xlat
or
cmp
adc
movsl
vmovupd
test
test
cld
push
jae
mov
xchg
je
pusha
xor
repnz
es
push
test
cmpsl
xorl
add
outsl
xor
jg
jmp
cmp
push
pop
addl
out
add
in
cmp
movsl
iret
cmpsb
push
and
mov
sahf
stos
cmp
mov
jle
xor
add
xor
je
icebp
add
push
mov
jle
out
negl
fwait
cmp
popf
in
cmp
mov
popa
in
jecxz
icebp
adc
adcb
jge
xor
pop
cli
xchg
pop
push
xchg
jl
and
lret
inc
fidivrl
and
or
mov
xor
test
repz
movsl
aas
sub
lret
cmp
mov
xchg
sub
pop
ror
sbb
lea
lcall
mov
lret
test
jno
addr16
xor
fcoml
jmp
pop
or
dec
xor
stos
xlat
pop
xor
dec
fldt
xchg
add
fscale
xchg
sar
sbb
fsubl
adc
daa
jns
xchg
lcall
adc
ja
xchg
test
lret
jb
pop
adc
sbb
xor
ret
aam
pop
jp
xchg
mov
arpl
mov
inc
dec
pop
gs
sub
push
icebp
push
mov
mov
popf
adc
adc
push
or
xor
mov
adc
sub
notl
inc
sbb
std
sbbb
imul
mov
call
or
mov
xchg
clc
ja
adc
mov
jl
push
mov
dec
dec
lock
in
xor
push
in
xchg
outsl
rclb
mov
adc
fidivrs
mov
mov
adc
sbb
ja
mov
pop
and
xchg
mov
push
seto
mov
push
or
int
movsb
push
aad
imul
xor
shl
and
mov
inc
adc
jns
js
enter
push
jmp
jae
ret
pop
mov
in
mov
movb
out
roll
mov
je
mov
adc
iret
dec
jo
cmp
ror
push
cmc
push
fwait
cs
push
cmp
sub
jp
mov
inc
fnstenv
jne
test
jnp
out
push
pop
orb
scas
movsb
adcl
adc
std
loope
inc
out
sbb
les
roll
std
lods
loopne
data16
int3
lods
xorb
adc
and
and
out
js
movsl
or
and
push
xorb
adc
add
fdiv
cmpsb
pop
repnz
testl
mov
sar
imul
mov
sub
into
int
dec
sub
jb
mov
fwait
loopne
mov
cmc
mov
or
or
inc
or
stos
pop
stc
mov
dec
push
xor
cltd
adc
mov
push
xchg
in
addl
test
add
loop
add
add
lcall
aad
sbb
jp
fisttpll
or
mov
leave
adc
or
add
fld
adc
pop
add
pop
hlt
adc
push
call
sbb
jg
test
inc
cwtl
jg
aam
push
test
cli
leave
pop
in
fildll
push
pop
ja
cwtl
pop
cmp
sub
or
mov
inc
xchg
shll
pop
gs
nop
dec
xchg
repz
sub
fwait
pop
lock
pop
jg
sbb
je
mov
fmuls
mov
enter
dec
jo
pop
mov
dec
sti
xor
jb,pt
mov
push
cld
outsl
je
cmp
adc
xor
sub
fdivrs
ljmp
pop
inc
aas
mov
pop
add
fnstenv
clc
rcrb
mov
in
in
mov
mov
jl
jle
jecxz
jno
push
cmp
mov
sub
jmp
sbb
pop
inc
sub
jle
jbe
push
push
mov
sub
mov
push
pop
orl
loope
inc
in
cli
pop
sub
dec
cmpsl
sub
push
aas
dec
push
mov
rcll
insl
add
call
jmp
xchg
rorl
clc
rcl
insb
mov
jbe
repnz
movsb
popf
add
adc
mov
fwait
xor
js
pushf
sahf
or
mov
ss
push
xchg
sahf
sub
and
adc
scas
fs
dec
pop
push
xor
xchg
dec
fstps
cmpsb
clc
or
test
pop
mov
shl
cli
in
enter
push
sbbb
or
add
sbb
sarb
pop
mov
ss
outsb
lds
stos
jge
inc
dec
lock
pop
bound
pushl
mov
sub
rcll
xor
hlt
mov
push
test
cltd
add
push
hlt
mov
and
push
fdivrl
rcl
lcall
cmpsb
jl
repz
or
cltd
xchg
das
cs
push
xor
shlb
mov
xor
and
clc
rcrb
scas
mov
mov
aad
lret
cmpsl
sbb
push
movsl
cmp
mov
pushf
ds
in
add
repnz
or
pop
lcall
mov
or
pop
mov
addr16
sbb
sbb
push
testb
out
fwait
loopne
insl
insl
jno
pop
scas
roll
mov
outsb
hlt
xchg
pop
dec
test
scas
mov
dec
add
xor
pop
cli
loope
addr16
xor
mov
data16
adc
test
xlat
adc
or
loop
xchg
mov
push
xor
dec
test
xchg
mov
out
mov
test
out
outsb
jb
pop
imul
pop
scas
test
add
inc
or
xchg
icebp
dec
dec
mov
bound
dec
das
fildll
enter
fnstenv
fistps
push
popf
das
xchg
cmp
pop
lea
out
inc
inc
out
pop
push
jp
ds
jo
jne
jae
push
stos
addr16
cmp
lods
push
xor
fbstp
inc
cmp
mov
std
dec
add
fcomp
push
stos
test
test
adc
and
sahf
xchg
icebp
adc
inc
mov
cmp
xor
clc
inc
mov
test
push
cmp
test
aaa
jae
cmp
sbb
lods
dec
out
ret
cs
push
cmp
jno
mov
ja
mov
addb
xchg
xor
movsb
pushf
sub
je
cli
xchg
addr16
mov
sbb
pop
repnz
in
and
dec
icebp
ds
xchg
fidivs
xchg
mov
pushl
mov
pop
daa
into
enter
ret
inc
push
mov
xor
adc
sub
push
jb
mov
bound
mov
bound
in
mov
sarl
loop
inc
enter
and
outsl
xchg
cs
dec
in
stos
out
dec
in
mov
mov
dec
loop
xor
xchg
gs
jbe
adc
lret
imull
int
add
je
adc
fwait
cmp
xor
or
data16
jno
std
mov
popa
mov
push
push
mov
adcl
push
pop
movsl
aam
repnz
bound
xorl
fdivs
call
inc
stos
test
icebp
aad
sub
sub
loop
pusha
mov
pop
and
xchg
fmul
inc
in
mov
lcall
add
and
sti
cmp
ficoml
adc
cwtl
add
mov
cli
adc
fdivrs
popf
test
or
push
out
ret
push
call
insl
and
sub
sub
inc
test
sub
orl
jecxz
push
adc
mov
out
subb
sub
xchg
bound
push
push
mov
cmpsb
cmp
or
push
out
cmpsb
cmp
imul
cmp
mov
das
cmp
ss
mov
fld
imul
mov
jns
xchg
fdivrl
or
sahf
push
nop
mov
jno
pop
xor
leave
dec
repnz
xor
push
inc
sar
in
out
popa
dec
out
popl
popf
shlb
mov
pop
pushf
xor
inc
fisubs
insb
mov
aas
in
arpl
rcll
fidivrl
arpl
cmp
es
rorl
lret
insl
aad
pop
aas
call
mov
lock
push
stc
nop
inc
jo
fs
jg
movhps
data16
adc
pop
pop
cmc
dec
fs
imul
sub
mov
mov
inc
push
mov
pusha
mov
push
jne
ljmp
push
in
aaa
add
pop
xor
and
in
sub
frstor
jmp
xchg
jns
es
xchg
mov
call
or
inc
xlat
jmp
pop
cs
sub
loop
and
push
pop
repz
scas
adc
lcall
mov
outsb
out
fsts
es
adc
js
insl
stos
jns
xor
pop
lock
xchg
mov
ret
repnz
cmp
xor
jae
pop
push
pop
lock
lods
sahf
shrl
loopne
mov
ss
clc
fnstsw
aaa
into
sbb
ds
in
outsl
jp
into
stos
mov
aam
fimull
push
arpl
ds
test
je
jg
inc
mov
fwait
xor
jns
sub
push
mov
dec
cli
jno
adc
outsl
pushf
xor
ret
clc
lods
or
inc
pop
inc
stos
pusha
neg
mov
push
in
testb
inc
adc
ja
outsl
push
stos
xchg
xchg
sub
fs
dec
jb
subb
andb
daa
xlat
xorl
sbb
mov
cmp
mov
mov
jae
shll
pop
icebp
repnz
pop
or
cltd
xor
add
xor
dec
mov
subb
dec
out
gs
mov
aad
cmp
sbb
sbb
ds
inc
jo
pop
out
xor
int
ret
push
jbe
mov
xchg
xchg
inc
xlat
mov
js
pop
fdivl
popa
es
mov
jle
fs
mov
addl
mov
mov
daa
lcall
insl
mov
cltd
xor
imul
outsl
mov
push
insl
add
xchg
mov
inc
fcmovb
insl
mov
mov
jnp
in
test
je
cmpsl
test
jmp
add
jns
cmp
dec
loope
cwtl
lods
inc
int
mov
mov
jg
xchg
aam
add
das
frstor
lcall
js
sub
mov
stos
inc
sti
mov
adc
sbb
xor
push
inc
faddl
movsb
xor
rorl
mov
mov
cltd
dec
or
out
sahf
sub
iret
adc
into
inc
pop
jmp
xchg
push
lahf
iret
data16
adc
in
test
sahf
xor
into
add
enter
movsb
mov
sub
adc
fidivl
pop
decb
jmp
into
add
rorb
pushf
pop
hlt
rorb
xor
cmp
pop
hlt
ja
test
sbb
aaa
into
xlat
or
pusha
cmp
sub
js
mov
je
or
mov
xor
xchg
and
mov
fwait
and
mov
sbb
and
icebp
or
xchg
testl
icebp
push
mov
fs
loop
negl
xchg
shl
adc
push
iret
xchg
jb
xor
mov
push
push
inc
fiaddl
xchg
or
adc
hlt
test
out
xchg
out
inc
fstps
or
pop
inc
andl
mov
xlat
outsb
push
push
loop
inc
mov
dec
or
pusha
lea
stos
inc
push
fwait
lahf
ss
loop
pop
daa
mov
push
lcall
repnz
ja
nop
shrl
mov
add
ss
push
test
dec
xchg
bound
rcrl
and
mov
xor
jle
and
lret
js
clc
outsl
add
pop
lea
roll
push
int
adcb
rolb
mov
mov
pop
jno
sbb
scas
dec
lahf
mov
int
pusha
dec
out
add
dec
mov
push
or
or
lods
shr
pop
pop
push
push
call
inc
xchg
xor
cmp
push
outsl
push
sbbb
push
dec
mov
jno
sbb
pop
mulb
jo
mov
imul
cmpl
mov
scas
inc
jl
nop
daa
scas
mov
jl
bound
xchg
push
sahf
inc
fxch
fxch
pusha
or
in
xorl
jecxz
mov
sbb
inc
push
test
gs
xchg
mov
fbstp
cli
mov
xor
ret
cmp
sbbl
push
scas
scas
out
push
daa
add
xor
sub
mov
shrl
inc
insb
add
icebp
mov
cmpsb
je
xlat
add
xchg
xor
lods
jnp
es
mov
sahf
xor
jp
enter
adc
orb
jnp
xchg
sub
cmpsb
movsb
cmp
push
jp
orb
jp
sub
aam
inc
fcmovnu
dec
aam
jnp
sub
jb
call
push
fimuls
addl
iret
movsl
cwtl
das
fcoms
cmc
addb
js
jl
shrb
xchg
sub
and
rcrl
nop
daa
jp
ss
movsb
lret
cltd
sbb
lret
inc
in
je
es
fistps
cld
xchg
jge
fidivl
movsl
sbb
xlat
xchg
lock
push
enter
xchg
sub
mov
lahf
mov
arpl
insl
xchg
lahf
sub
shlb
sbb
cmp
sbb
mov
mov
and
jae
sub
mov
inc
xchg
pop
aam
inc
fistl
clc
pop
sahf
sub
push
mov
xchg
ljmp
sbbl
xor
push
xchg
test
test
pushl
xlat
jb
or
shr
sub
inc
fsubl
iret
out
adcl
fdiv
mov
repnz
add
xor
arpl
das
jg
rcl
mov
adcb
stc
in
das
daa
cmpsb
cmp
test
out
cmpsb
add
cmc
hlt
xor
pop
push
insl
dec
inc
push
cwtl
lahf
cltd
testl
repnz
xchg
stos
sbb
ds
rcrl
mov
push
out
adc
push
inc
cmp
pop
cmc
xchg
lods
inc
mov
fisubl
add
aaa
sub
insl
pop
push
iret
data16
lods
cmpsl
inc
fcmovbe
leave
loop
push
mov
cwtl
push
out
int
pop
fbld
mov
dec
sub
pop
enter
jl
divb
jo
pop
movsl
leave
cmp
sti
jnp
inc
stos
and
pop
mov
leave
ret
aaa
into
cmc
and
push
push
push
mov
xor
addb
inc
insb
add
adc
sub
es
stos
inc
pop
push
push
aad
xchg
pop
or
imul
jae
mov
in
push
loopne
and
popf
adc
and
rorl
arpl
add
cmpsl
imul
negb
jnp
mov
fwait
test
enter
test
mov
push
decb
popf
mov
cwtl
outsl
mov
xchg
sbb
sahf
pop
cmp
pop
nop
dec
xchg
test
insb
pushf
nop
in
fbstp
and
xchg
inc
mov
mov
jae
dec
mov
bound
pop
rorb
or
push
or
sub
movsl
inc
loope
pop
jmp
ljmp
sbb
push
dec
ret
sbb
fdivrl
lea
adc
xchg
imul
cmp
xchg
inc
xlat
sbb
inc
mov
jge
push
in
sub
rcrb
mov
pop
lret
pop
repnz
inc
mov
out
out
pop
int3
int3
les
in
aad
les
xlat
adc
mov
insb
cltd
xchg
sbb
js
sbb
lea
icebp
adcb
mov
popf
bound
push
push
sub
pop
push
mov
add
mov
mov
mov
enter
fs
dec
mov
xchg
sbb
scas
jo
les
mov
cwtl
pop
cmp
push
js
dec
pop
adc
fisttpll
call
iret
jns
enter
cmp
and
mov
ret
fnstsw
jno
fcoml
push
cmp
cmpsl
cmc
sub
sub
inc
lret
out
xorb
mov
ret
jle
addl
jne
out
cmp
loopne
dec
jp
in
dec
inc
in
cwtl
jo
ljmp
es
or
inc
mov
or
inc
cli
cmp
gs
mov
mov
out
pop
repz
inc
xlat
or
sbb
test
pop
cld
test
and
out
pop
xchg
lods
mov
test
out
and
sbb
sbb
jo
rorb
xchg
sub
dec
pop
push
cli
pop
sub
mov
orb
fs
and
out
test
mov
mov
out
aas
jns
js
push
or
pushf
sub
pop
jnp
clc
push
jg
lret
adc
pop
xor
pop
pop
repz
mov
hlt
icebp
dec
cmp
in
js
in
mov
pop
sti
mov
xor
ljmp
lea
jo
cwtl
and
sti
test
test
or
mov
ljmp
adc
out
push
imul
mov
sbb
adc
sbb
sbb
pop
pop
add
out
sarb
mov
pop
mov
sbb
push
stos
xchg
cli
outsl
iret
shrb
icebp
scas
icebp
push
mov
jmp
add
out
mov
jb
inc
mov
test
daa
sub
sub
mov
repnz
pop
bound
sahf
adc
out
and
push
cltd
les
mov
neg
inc
int
lea
pop
je
dec
xor
andl
dec
ret
popf
sub
mov
pop
xchg
pop
mov
sub
out
xor
insl
mov
imul
adc
mov
cmpb
and
pusha
cmp
ss
xor
jp
add
xchg
loope
adc
xchg
imull
or
in
outsl
imul
sub
dec
sahf
mov
mov
cmp
loope
xchg
mov
xlat
push
sbb
insl
add
jno
jb
cmp
fnstsw
lea
cmp
jmp
dec
mov
pop
or
mov
dec
lods
and
pop
pusha
dec
mov
sub
jo
fcoms
sub
adc
xchg
adc
adc
push
jbe
mov
jns
popf
inc
cltd
addr16
and
jne
sbb
sub
jp
popa
fwait
jp
sbb
sbb
in
mov
dec
sub
or
add
jae
fistl
je
jmp
mov
pop
stc
test
js
lret
pop
stos
loopne
movsl
mov
std
xchg
aaa
push
dec
les
inc
imul
push
daa
cmp
je
clc
cs
ds
jge,pt
aaa
cmc
mov
push
cwtl
imul
or
imul
subl
or
outsl
dec
inc
lret
push
push
ss
sbb
dec
jae
cmpsl
aaa
pop
cld
xor
push
jmp
xor
push
mov
sub
dec
ret
in
mov
fisubl
pop
stos
pop
pop
push
mov
push
sbb
mov
inc
adc
mov
lret
push
jb
jmp
fistpl
pop
lret
xlat
push
rcll
xlat
out
scas
cmpl
arpl
add
lock
fsubl
lea
daa
pop
add
jo
dec
lret
inc
aas
pop
filds
mov
outsl
pusha
outsb
mov
sub
jp
xor
negb
xor
dec
gs
xchg
movsl
push
ret
inc
jno
or
fsubs
push
push
mov
leave
cmp
adc
dec
loop,pn
jge
in
jno
pop
mov
test
popf
xor
repz
bound
adc
jno
and
daa
fisubl
negb
jle
sbb
lcall
fs
push
gs
xchg
xor
sub
push
adc
push
lret
mov
ret
inc
push
jae
or
js
jbe
jno
in
xor
and
je
inc
xor
and
jae
enter
pop
pop
add
lock
test
jae
ljmp
and
push
daa
sahf
outsl
jp
or
js
lea
ss
xchg
mov
inc
flds
sub
pop
leave
cmp
mov
mov
fimuls
cld
call
fsubl
mov
std
lods
pusha
loope
popf
mov
xchg
mov
add
lahf
pushf
jb
into
jmp
xchg
xchg
mov
aaa
pop
jns
cmpsb
mov
pop
cmc
inc
and
out
cmp
cmpl
xor
jmp
push
push
sub
inc
jg
rcrl
jbe
mov
aaa
stc
xchg
lcall
jns
js
or
sahf
addr16
lret
lock
mov
ds
sbb
in
sub
out
int
rolb
leave
scas
inc
jp
jmp
aas
aaa
popf
xchg
mov
sub
cmp
pop
mov
push
xchg
sub
out
and
out
fnsave
mov
sub
pop
repz
dec
and
push
sbb
push
xor
push
adc
sti
outsl
adc
xchg
jmp
or
push
push
mov
stos
inc
bound
aas
dec
xlat
push
pop
outsb
cmp
pop
popf
mov
mov
dec
adc
lahf
orl
dec
ret
fcoms
cmp
jo
aad
adc
mov
fs
int
lcall
fsubrl
adc
cmc
xchg
test
repnz
jae
cwtl
and
mov
push
lret
inc
ret
ror
fidivrs
stc
and
mov
sti
sbb
ror
inc
frstor
imull
scas
loopne
out
jmp
mov
adc
dec
cmpsl
jno
jnp
xrelease
and
inc
ds
mov
cs
or
bound
jae
jb
je
pop
xchg
ss
push
rclb
bound
adc
ja
pop
fcoml
xchg
ja
sub
xchg
cmpsl
stos
jg
add
lea
push
push
negb
mov
xchg
dec
std
dec
rol
cs
arpl
cs
xor
mov
fistl
or
hlt
hlt
sub
adcb
test
shl
sbb
out
icebp
push
mov
loop
repnz
mov
cmp
out
stos
shrb
adc
push
xchg
dec
mov
pusha
sbb
xor
out
and
clc
rorl
lea
das
jne
mov
dec
lods
pusha
pop
pop
dec
mov
fidivl
pop
dec
mov
pop
jg
int3
bound
cmc
mov
push
lret
mov
repz
mov
push
xchg
sbbl
mov
stc
push
jmp
push
loope
repz
test
int
into
or
dec
or
aas
jmp
xchg
mov
decl
loope
sahf
xchg
shrl
sbb
mov
push
cwtl
loope
es
sbb
aas
and
jl
test
xor
scas
mov
test
jg
repz
ja
pop
enter
sbbl
push
popf
sub
std
sbb
movsb
fdivr
ss
pop
aad
mov
and
mov
shll
lcall
adc
ds
push
in
adc
ja
rcrl
adc
mov
in
inc
jmp
fisttpll
stos
lods
outsl
divb
aas
xor
imull
lods
jle
cld
inc
in
add
dec
das
repnz
mov
push
scas
data16
cmp
adc
jp
mov
les
stos
mov
jo
out
dec
mov
repnz
inc
leave
js
je
lods
push
shlb
mov
xchg
add
pop
aam
test
sub
jae
fnstcw
aas
pop
xor
repnz
test
adc
sahf
xchg
ss
mov
adc
add
xor
shll
fstpt
xor
ret
sahf
call
enter
les
push
sbb
aaa
testb
fcmovu
lahf
push
loopne
loopne
cli
aas
addr16
loope
pop
shll
sbb
pop
ss
sub
mov
cmp
daa
adc
insb
add
cmp
pop
cld
xchg
lods
cmp
lods
outsl
fdivrp
imulb
jecxz
xchg
mov
mov
ja
loopne
cmpsl
loope
movsl
push
subl
daa
jmp
push
adc
cltd
sahf
orl
jne
mov
xchg
inc
dec
mov
or
jb
pop
mov
jge
cmp
inc
leave
in
loope
xlat
xor
or
ljmp
neg
and
out
dec
shll
and
cmp
das
insl
adc
faddl
xorb
dec
inc
cld
das
push
inc
repnz
repz
incb
xor
dec
mov
jl
cmp
fwait
mov
loope
mov
lods
fiaddl
fucomip
sub
mov
or
dec
iret
xchg
jmp
xor
test
xor
ljmp
lahf
filds
mov
mov
jmp
jl
and
mov
cwtl
cmpsl
push
incb
pop
xchg
js
mov
mov
movsl
les
pop
push
ret
loop
mov
lods
out
dec
push
and
pop
andl
xchg
jl
aas
roll
cli
mov
jo
cli
repnz
add
jns
or
cmpsb
pop
push
fs
mov
fwait
imul
push
push
mov
cmp
mov
inc
mov
sbb
sub
mov
jnp
add
pusha
cwtl
cwtl
cwtl
popa
mov
inc
lcall
inc
xchg
cs
mov
xchg
ret
nop
xor
jge
jmp
stos
data16
cs
pop
dec
scas
jg
dec
outsb
mov
lea
js
stos
jp
and
sahf
jle
pop
insb
add
repz
dec
rcrl
add
test
pop
in
out
loop
fisttps
and
stos
shl
cs
stc
and
loop
enter
xor
and
in
xorl
pop
js
xor
and
push
std
jecxz
mov
add
cmp
loop
ds
dec
mov
into
inc
rol
pop
leave
mov
mov
lds
mov
scas
inc
or
xchg
popf
xor
mov
adc
pop
mov
and
adc
pop
lcall
push
jo
movsl
fnstcw
out
repnz
hlt
mov
adc
pushf
incl
push
sbb
ret
loope
repz
cld
jecxz
cs
fbstp
popf
jnp
lahf
jb
xor
test
sahf
mov
adc
sbbl
fsts
jecxz
xchg
int3
sbb
add
repnz
xchg
fucomi
xor
add
int
sti
sbb
pop
add
movsl
insb
popf
xchg
mov
cmp
jecxz
or
ds
js
jmp
adc
cli
ljmp
dec
mov
jo
stos
xchg
imul
pop
jno
mov
repnz
mov
loop
mov
dec
xchg
das
push
jle
ja
dec
mov
jns
jne
ja
stc
cmpb
jge
add
jecxz
test
clc
lret
or
aam
cli
int3
mov
es
lcall
call
scas
jb
cs
xor
adcl
ljmp
es
dec
pop
adc
adc
and
out
and
dec
fidivl
mov
arpl
ds
cmpl
xchg
xchg
aaa
and
jl
push
xchg
xchg
scas
mov
add
popf
jnp
cld
test
or
jmp
sub
js
addl
lock
out
add
xchg
movsb
cmp
xchg
mov
fwait
adc
ds
mov
mov
testl
ffreep
xchg
sub
test
inc
mov
inc
xor
mov
inc
pop
sbb
outsl
inc
ss
test
lret
or
lock
sub
cmp
hlt
cwtl
lret
les
adc
jmp
mov
iret
in
pop
aam
pop
rorl
into
loope
fstps
rorb
out
jo
loopne
lds
loopne
fnsave
inc
mov
inc
arpl
inc
push
mov
adc
cltd
xor
and
inc
xchg
insl
imul
xchg
sub
cmp
jge
shl
gs
repnz
jecxz
popa
clc
ret
mov
mov
push
test
jb
loopne
repnz
mov
adc
adc
cwtl
jb
xorl
insb
add
jb
mov
movsl
cmp
sbb
jnp
sub
pop
xor
ficoms
add
out
test
imul
out
xchg
aas
loopne
and
add
enter
fdivl
lock
push
mov
ret
popf
mov
mov
sar
ret
fbstp
rclb
popf
pop
ljmp
pop
adc
rorl
mov
clc
xor
cs
out
enter
out
push
or
pop
add
xchg
push
jecxz
insl
gs
xor
xchg
test
inc
mov
hlt
subl
out
hlt
cmp
jbe
push
inc
lock
nop
outsl
sarb
dec
mov
jae
pusha
into
addr16
jne
mov
push
xor
clc
sub
lea
mov
push
pop
lret
push
loop
xor
fiaddl
add
jb
mov
clc
push
adc
popa
in
pop
inc
sub
cmp
cmpsb
sarl
aam
aad
mov
cmp
push
cmc
adc
insl
test
cli
fwait
xchg
mov
jge
jmp
imul
and
ja
push
int3
repnz
dec
adc
ss
push
stos
inc
xchg
pop
and
jge
pop
into
push
pop
push
cwtl
das
fwait
push
rorl
fldl
jl
aas
inc
xchg
and
or
cs
mov
pop
and
test
fsubl
push
out
xchg
add
sub
mov
push
aam
mull
mov
or
test
in
sbb
ja
popf
push
push
and
xor
mov
rcll
xor
clc
inc
mov
sbb
mov
mov
jne
mov
jbe
cli
rcrl
in
aad
sub
sub
sub
or
pop
push
sub
clc
test
jecxz
push
ret
xor
jae
les
cmp
mov
or
dec
mov
adc
aas
fbld
dec
sarb
or
lock
and
adc
scas
inc
scas
in
pop
das
push
cli
xor
fcoml
shll
pop
ret
cmp
push
ds
scas
daa
or
test
shrb
out
inc
rorb
adc
sbb
cltd
lcall
fdivrp
mov
mov
fisubrl
out
xor
insb
dec
lret
bound
dec
iret
js
jle
dec
ds
mov
repz
sbb
lods
in
pop
sti
loope
sbb
mov
mov
loop
push
enter
pop
into
mov
std
jecxz
or
out
xor
iret
mov
push
adc
inc
mov
and
cli
inc
popa
add
cmp
dec
mov
iret
pushw
pop
pop
mov
es
pop
les
test
scas
xchg
dec
push
rorl
pop
lahf
mov
gs
ja
leave
ss
xor
fsubl
jmp
sarb
jmp
lahf
fistl
scas
xchg
ja
inc
mov
popa
in
test
dec
in
aam
or
nop
cmp
das
les
sti
fldcw
aam
into
pop
jecxz
mov
sub
add
mov
sti
pop
dec
pusha
idivl
push
fmull
fwait
imul
jbe
push
pusha
inc
mov
mov
iret
push
stc
or
mov
fistpll
iret
dec
jo
outsb
sarl
aad
jo
lahf
mulb
test
loope
cli
mov
filds
mov
scas
cmpl
dec
shl
movsl
cmp
mov
movsb
pop
fildl
mov
cmp
ret
xchg
fsubrs
dec
xor
pushf
nop
fdivrl
pop
std
pop
cli
rcrb
insl
sarl
shll
inc
lods
jmp
dec
loope
or
fsubrs
in
in
sub
sbb
loop
in
add
fbld
push
jo
add
pop
jg
and
shrb
bound
repz
mov
test
inc
call
mov
out
lods
push
popf
pop
in
adc
mov
push
ljmp
jl
ss
sub
ljmp
and
dec
push
andb
outsl
add
xchg
jge
pop
inc
sahf
cmpsb
mov
arpl
imul
loop
sbb
daa
fnstenv
pop
and
xor
test
gs
inc
fstpt
ficompl
jl
iret
je
out
mov
shl
xchg
jge
push
inc
mov
and
ret
test
cmp
sub
and
loope
add
push
leave
sbb
mov
ret
cmc
jmp
call
cmpsl
shlb
pop
cwtl
lea
push
orl
cmpsb
sti
pop
into
jecxz
push
aam
cmpsl
inc
mov
and
xchg
addr16
pop
mov
jbe
pop
invlpg
mov
cld
push
sub
push
push
lret
push
movsl
and
mov
pop
fwait
xor
movsl
insb
ret
push
popa
shrl
xor
movsb
mov
jmp
sub
adc
imul
lea
add
outsb
mov
and
inc
inc
mov
mov
push
jl
sbb
jle
push
repnz
sub
outsb
dec
sub
add
xchg
inc
mov
pop
mov
sahf
sbb
jno
cmp
xor
loop
pop
repz
add
pop
inc
enter
lock
jmp
aam
jge
sarb
dec
and
jo
sub
movsb
jl
loope
push
sub
xchg
add
pop
mov
ss
ja
pop
scas
repz
mov
mov
dec
mov
das
aas
adc
repz
fs
loopne
xchg
fldcw
aaa
shlb
sbb
pop
loope
mov
mov
jle
fdiv
std
sbb
hlt
aam
rorb
push
movl
and
push
fimull
mov
dec
or
mov
or
mov
dec
and
lahf
test
loop
adc
stos
pop
cmp
cli
jns
dec
loopne
lcall
xor
xchg
dec
push
leave
push
fs
jg
in
fisttpl
mov
scas
jne
repz
push
sub
lret
dec
xchg
js
movsl
scas
inc
popf
jae
sub
or
popa
mov
out
aaa
in
ja
push
cmp
push
mov
adc
js
jg
shll
add
mov
orl
leave
xor
jns
fcompl
cmp
gs
dec
loope
sub
in
test
sbb
lds
out
rcrb
or
lret
xlat
fdiv
sbb
or
sarb
lcall
or
xor
xchg
inc
add
mov
inc
mov
mov
cli
mov
stc
sbb
movsl
enter
in
stos
inc
pop
movb
cmp
adc
or
jg
cld
pop
sub
das
inc
adc
jns
in
push
cmp
add
pusha
cmp
ljmp
jno
sarb
int
repz
es
inc
lods
inc
js
jae
dec
cltd
lret
lret
jo
sub
les
sahf
jo
into
gs
xchg
and
sbbl
mov
data16
rolb
push
mov
ficompl
cld
out
mov
sbb
sbb
mov
mov
lahf
subb
mov
movsb
and
mov
cmp
out
aas
mov
adcb
stos
pop
hlt
fistpl
xchg
sub
sbbb
insl
scas
inc
pop
lea
mov
fisttps
adc
ljmp
daa
pop
push
cltd
mov
imul
cs
cmpsl
sub
imul
repnz
lcall
jnp
or
lret
int
insb
add
out
mov
mov
lcall
xor
sbb
test
mov
movsl
out
xchg
lcall
sub
imul
fbstp
or
mov
or
cmpsl
jle
lds
divl
pushf
cmpsl
sbb
cli
lea
sbbl
pop
icebp
lods
hlt
fbstp
into
js
or
das
push
insl
popa
inc
testl
movsb
aad
insl
mov
dec
mov
loopne
sub
dec
pop
xchg
jnp
mov
sbb
add
enter
lds
movsl
aas
push
loopne
cmp
dec
cltd
jnp
arpl
xchg
rcll
push
mov
out
pushf
or
dec
dec
ds
mov
lock
mov
xchg
and
lret
dec
std
loope
dec
scas
aad
cltd
lock
mov
sbb
jno
notl
inc
push
outsb
inc
push
mov
inc
popf
push
lcall
xchg
mov
push
cmp
mov
roll
lret
sub
pop
inc
adc
pop
cmp
and
imul
movsl
xlat
sub
lea
int3
jle
jo
outsl
add
pop
add
rclb
inc
or
dec
fisubl
lods
aaa
add
hlt
add
ret
xor
push
lcall
xor
dec
push
lods
aas
out
cmpsl
lret
dec
push
gs
int3
fwait
and
daa
scas
and
in
mov
aaa
mov
cltd
fidivs
add
movsb
sub
mov
push
out
loopew
int
and
popf
cs
jae
cmp
jge
out
pop
lahf
adc
push
mov
out
and
lods
mov
fdivr
xlat
ds
push
movsb
fs
pop
jns
rorb
xor
push
clc
fstpt
and
push
into
inc
into
adc
mov
sahf
cmp
jg
xchg
sbb
pop
stc
pop
and
or
cs
mov
xchg
inc
cltd
in
imul
jns
and
and
jnp
ja
lret
lods
pop
test
push
pop
jg
inc
adc
stos
in
shl
dec
fisttps
loope
lea
and
and
stos
and
pop
dec
dec
ret
dec
lods
daa
adc
mov
and
lahf
push
repnz
icebp
test
mov
mov
mov
sub
shlb
leave
mov
imul
out
ds
mov
push
mov
sub
jbe
fdivrs
jecxz
mov
lahf
cs
mov
or
or
jns
or
mov
outsb
push
xchg
fdivrl
adc
pop
popf
cltd
mov
mov
imul
repnz
sub
or
fnsave
call
pop
sbb
lea
shll
add
lahf
jo
jns
inc
jb
xor
xchg
sub
sar
xchg
lds
xor
xchg
cmp
lcall
rep
mov
imul
loope
ret
shlb
cmpsb
cmp
mov
push
call
inc
sbb
mov
insb
add
sub
popf
jns
dec
imul
stos
cmpsl
repnz
movsl
jecxz
out
test
mov
fsubrs
jo
imul
adc
cmpsl
icebp
insl
jecxz
inc
fucomp
mov
gs
cmp
dec
sbbl
bound
and
and
mov
xchg
scas
stc
pop
jne
cmp
jbe
sbb
int3
cmp
add
fildll
aas
cltd
flds
aaa
mov
mov
inc
adc
fwait
cmp
fidivrs
ja
pusha
dec
push
mov
cmp
ds
adc
mov
and
ljmp
loopne
dec
and
sarb
roll
out
dec
sbb
dec
jecxz
xchg
insb
scas
xor
mov
lods
mov
mov
mov
cmp
mov
inc
push
nop
pop
pop
cmpl
test
push
mov
cmp
fisttpl
adc
pop
lds
lods
xor
nop
or
std
out
insl
mov
lods
mov
xor
lods
push
movb
or
xchg
mov
lcall
inc
outsl
xor
lret
stos
cmp
jge
data16
push
mov
imul
xchg
mov
mov
lods
es
bound
xchg
cmp
jl
add
out
xchg
icebp
pop
push
dec
ja
fwait
mov
mov
lods
fstl
jge
outsb
movups
fs
dec
push
js
test
mov
sub
js
dec
inc
and
gs
pop
nop
cmp
dec
test
dec
pop
add
sbb
jns
cmp
and
jge
ja
ss
aad
and
mov
mov
mov
add
push
cld
sbb
dec
out
jb
push
inc
or
mov
push
sti
mov
cmpsl
sub
imul
pop
pop
outsb
repnz
mov
wrmsr
jmp
outsb
jl
lahf
inc
scas
push
sub
mov
inc
or
cmp
shlb
push
pop
add
push
cmp
push
jg
in
shlb
add
popf
sbb
imul
mov
out
clc
negl
jle
data16
orl
push
shll
pop
add
mov
jle
jle
cmpsl
daa
lods
push
jecxz
mov
data16
push
xor
sub
scas
sub
rcl
sub
icebp
rclb
outsl
das
adc
cld
js
and
test
icebp
in
dec
mov
mov
mov
pop
std
ljmp
test
fstpl
stc
outsb
sarl
xchg
test
in
insb
mov
xchg
test
push
add
mov
lock
cmpsb
xchg
inc
in
inc
adc
xchg
and
inc
repz
mulb
mov
es
stos
adc
outsl
mov
jecxz
hlt
sub
push
add
out
fmuls
daa
mov
mov
aas
xlat
and
adc
or
mov
xor
fidivrs
repz
sub
xchg
inc
or
stos
sub
push
push
add
push
cmp
jecxz
das
stos
sub
test
insb
add
fidivrs
mov
gs
mov
hlt
ds
stos
jmp
inc
adc
cmc
repz
lcall
mov
xor
push
pop
clc
and
fstpt
ja
cmp
stos
cmp
fdivp
popa
or
mov
pusha
test
mov
in
mov
test
cmpsb
xor
cmp
nop
push
mulb
into
out
imul
call
sti
jmp
lea
test
mov
jns
fidivrl
movsb
lods
sub
pushf
call
sbb
cmc
enter
lods
sub
decb
int3
sti
std
pop
rcll
outsb
leave
and
jmp
stc
inc
adc
into
xchg
ss
out
rolb
inc
push
negl
lahf
pop
mov
mov
xlat
jg
pop
aas
xchg
je
mov
add
push
clc
pop
les
pop
cld
jmp
not
jg
push
inc
push
hlt
jnp
pushf
shr
push
add
inc
xchg
adcb
inc
push
lods
je
push
mov
stos
inc
xor
mov
mov
sarl
rcll
lds
movb
or
sti
xchg
pop
js
xchg
rclb
into
lret
adc
js
sbb
clc
xchg
scas
xchg
inc
push
into
add
orl
pop
inc
rcrl
mov
mov
mov
lods
jle
fnstcw
bound
inc
rcrl
imul
pop
enter
pop
sbb
stos
std
mov
popf
jecxz
pop
dec
ret
cwtl
das
cmc
xchg
sub
enter
fsubr
popf
inc
sbb
sarl
dec
xlat
jle
cltd
jecxz
xlat
leave
sarl
or
sbb
xlat
add
fsub
cmc
pop
popf
or
dec
push
xchg
adc
and
cmp
imul
repnz
fwait
inc
xlat
jecxz
shll
or
xchg
inc
xor
push
cwtl
cmp
add
arpl
mov
lret
adc
fdivrs
or
xor
mov
xlat
sbb
sub
or
add
push
xchg
cmp
sti
inc
or
or
mov
cmpsb
sub
xor
syscall
data16
pop
push
lret
arpl
push
mov
xor
mov
and
stos
rcrb
sbb
adc
out
push
inc
jg
ficoml
cmp
or
mov
fldl
fisubrl
cmp
xchg
jge
fcmovnbe
push
aam
or
shll
faddl
shlb
mov
loop
aas
jl
add
lea
pop
cltd
inc
xchg
flds
pushf
daa
stos
shll
aad
pushf
push
jbe
mov
mov
xlat
loopne
pop
into
add
pop
mov
scas
push
sti
xor
stc
fs
and
jns
cltd
daa
stos
jbe
xor
shll
js
push
jmp
cmp
add
dec
sub
je
mov
mov
fs
dec
or
mov
scas
ret
lea
ljmp
adc
filds
and
popa
test
sbb
pop
sar
bound
xor
xchg
cmp
sub
xchg
cli
xor
inc
or
pop
sti
les
pop
mov
int
int
cld
pop
lods
adc
dec
sti
lret
cld
pop
and
pop
clc
es
dec
or
mov
roll
dec
les
lret
push
sbb
in
insl
enter
and
or
cmp
subb
ds
pushl
lret
mov
fidivrs
dec
jecxz
loope
cs
mov
sbb
jle
xchg
push
data16
and
mov
adcb
mov
xchg
inc
inc
inc
mov
pop
pushf
mov
adc
sub
call
hlt
mov
cltd
mov
add
push
mov
test
stos
xchg
test
sub
int3
sub
nop
or
pushf
pop
push
cmp
jg
lock
fs
aaa
add
loopne
ja
cmp
mov
fsubrs
fwait
mov
repnz
mov
scas
xchg
rolb
dec
or
lcall
mov
mov
pop
test
and
clc
sbb
rorb
inc
popf
popa
call
out
ja
shl
fildl
jbe
dec
adc
addr16
or
enter
fidivrl
ficompl
add
mov
int3
bound
orl
hlt
mov
push
insl
inc
push
cli
pop
xchg
sarb
add
fldcw
mov
fnstsw
outsb
scas
sub
call
addr16
cmc
mov
outsb
orb
cmp
sub
movl
imul
sbb
lret
in
je
sahf
adc
cwtl
rcrb
cs
fisttps
push
add
in
jno
jl
xlat
jge
pop
add
imul
sub
ret
lcall
inc
mull
xchg
inc
adc
outsb
mov
push
cmp
cmpsb
xor
and
push
outsl
mov
mov
mov
or
push
clc
lds
jg
mov
inc
or
fadds
addr16
shll
jbe
push
push
push
mov
xor
or
mov
test
mov
cmp
mov
push
out
loopne
sub
sti
xor
or
mov
push
stos
inc
or
mov
fld1
int3
imul
push
pop
je
dec
mov
lcall
in
jg
pusha
mov
mov
pop
and
fisttps
xchg
cmp
aaa
xchg
pop
imul
sbb
roll
std
in
inc
adc
std
mull
or
jge
adc
lret
int3
sub
jmp
xchg
inc
inc
repnz
cmp
repnz
cld
loope
push
pop
jmp
loope
jno
and
xchg
es
inc
int
cmpsl
test
nop
inc
insl
mov
mov
jno
movsb
insb
mov
push
decl
pusha
stc
pop
int
mov
jge
aad
mov
cmp
push
add
rorb
jbe
fldenv
mov
movsl
sub
cmpsl
mov
jbe
lret
dec
aas
jno
jl
sub
mov
ja
imul
inc
lods
das
jne
add
repnz
imul
mov
cmpsl
hlt
xchg
mov
jecxz
ficomps
jae
pop
mov
in
hlt
adc
test
mov
aam
mov
addl
leave
mov
or
rol
or
out
sbb
jmp
mov
mov
ljmp
lock
es
repz
cmp
ds
jae
xor
sub
jae
fs
lret
jmp
testl
sub
push
xchg
or
out
faddp
mov
cmc
pop
aas
jecxz
or
push
stc
fldenv
xchg
add
loopne
cmp
mov
and
jecxz
testb
imul
jp
jb
arpl
add
push
pop
dec
or
cmp
sub
push
push
inc
and
test
fidivl
fucomi
xor
jl
mov
pop
and
jae
cmp
cmc
lods
jl
add
mov
mov
fs
shll
cs
or
adc
inc
mov
or
loope
cmpsb
cs
lea
scas
rcr
lcall
cmpsb
daa
cld
stos
inc
pop
clc
in
sahf
inc
lock
jg
sub
test
lret
in
fidivl
cli
pop
lds
xor
sbb
je
cmpsl
inc
lret
mov
mov
icebp
push
lock
mov
cwtl
das
or
mov
dec
cli
mov
pushf
add
push
call
lds
dec
cmpb
lahf
mov
test
cld
fisubrl
xchg
setb
xor
test
pop
enter
test
adc
and
pop
sahf
pop
out
sub
jle
pop
xor
lret
daa
push
mov
sarb
lret
in
xchg
cmc
mov
cmp
aas
pushf
add
rolb
dec
jg
pushf
sub
les
arpl
cli
pop
or
xchg
mov
mov
xor
inc
push
adc
sti
popf
stos
sub
test
jp
int3
lods
mov
arpl
mov
lock
push
jmp
mov
mov
call
idivl
jb
cmpsl
xor
repnz
xchg
loopne
lret
mov
pop
jns
cmp
imul
push
cmpsb
push
out
xchg
incl
cld
clc
mov
xor
adcl
mov
inc
or
mov
adc
adc
lods
xor
call
xor
mov
push
stos
call
jg
mov
cmpb
mov
adc
sti
adc
adc
mov
and
fisttpll
rorb
xchg
dec
repz
into
mov
into
xchg
inc
mov
mov
mov
fldenv
mov
xorb
cmp
jmp
movsl
and
fdivrs
fistpll
sbbb
aad
mov
inc
adc
lret
mov
sub
xlat
cmp
nop
clc
adc
and
mov
cmpsb
push
scas
lret
das
fdivrl
push
shlb
push
add
ja
push
mov
mov
or
jmp
ljmp
lock
xchg
push
pop
cmp
dec
mov
inc
push
hlt
stos
xor
jge
icebp
insl
mov
gs
inc
adc
jo
mov
loop
out
out
xchg
out
loop
insb
stc
lea
je
aas
cmpsl
or
push
mov
ljmp
cmpsl
sub
pop
xchg
ret
mov
mov
and
dec
pusha
ljmp
sarl
nop
xor
add
inc
push
mov
mov
cli
mov
lods
inc
or
mov
mov
dec
push
jo
sub
jb
inc
adc
imul
outsl
rorb
mov
mov
lods
jmp
lcall
dec
pmaxub
addr16
cmc
cmp
rcrl
and
data16
sub
addr16
ss
push
mov
popa
sbb
mov
pop
push
out
push
xchg
mov
cmp
jle
xchg
inc
mov
fcmovbe
aam
push
pop
test
clc
fldcw
pop
add
or
arpl
mov
into
push
or
lods
out
adc
ret
cmp
or
les
lods
push
push
les
rclb
pop
mov
and
dec
cmc
fmuls
adc
lret
fs
scas
xor
sub
clc
add
xor
dec
adc
jmp
xchg
int3
nop
mov
leave
xchg
ret
dec
fadds
add
mov
test
dec
shrb
lock
inc
adc
jmp
addr16
ss
xchg
inc
std
xor
adc
dec
ret
mov
rcrl
cmp
sub
cmpsb
xor
stos
pop
sahf
fisttpl
ds
scas
shlb
subb
imul
jmp
or
or
dec
sar
cmp
jmp
nop
movsb
push
sti
movsl
movb
dec
loope
xchg
sahf
or
mov
stos
jg
cmpsl
mov
mov
and
xor
inc
mov
xchg
aas
cmp
xchg
and
iret
xchg
mov
mov
loop
xor
iret
xchg
ret
inc
notb
dec
fwait
cltd
xor
pop
xchg
mov
fildl
mov
dec
adc
outsb
repz
jl
std
enter
addr16
dec
push
insb
or
pushf
cmpb
adc
insl
out
ds
inc
push
nop
sub
jecxz
and
ret
cmp
in
dec
or
mov
mov
fdivl
aas
icebp
mov
cli
xchg
mov
mov
adc
shll
scas
inc
mov
adc
mov
out
xchg
cmp
add
in
lahf
inc
or
sti
push
mull
pop
mov
xor
sarb
ja
add
fidivrs
outsl
icebp
pop
popf
sti
inc
or
lock
out
jo
call
or
imul
fcompl
xchg
inc
jp
inc
arpl
lods
jg
das
scas
bound
push
jl
lcall
ds
jp,pt
sbb
and
ud1
lock
sbb
movsl
pushf
insb
test
xor
pop
aam
push
dec
das
mov
pop
push
mov
jp
lea
insl
pop
add
and
mov
mov
jnp
cmp
loope
ja
scas
out
imul
mov
xchg
inc
nop
add
iret
out
jns
add
jb
enter
mov
gs
loop
mov
emms
gs
inc
cmpsb
fs
adc
mov
jb
mov
je
shrl
out
ss
push
mov
mov
shrl
jbe
inc
mov
inc
adc
mov
inc
adc
mull
mov
in
jmp
xor
lock
push
mov
js,pn
adc
cmp
and
ss
jbe
adc
or
add
inc
or
xchg
aaa
add
clc
bound
sub
in
enter
inc
sbb
fildl
in
xor
icebp
out
jecxz
sbb
sbb
pop
dec
dec
adc
xchg
xchg
fwait
inc
adc
mov
fwait
pop
mov
imull
rolb
xorl
lcall
lds
test
mov
in
adc
pop
push
orl
lret
movsb
pop
and
test
inc
jmp
jmp
mov
sub
mov
sub
aad
inc
xor
pop
pop
sahf
pop
in
add
out
pushl
out
adc
jmp
inc
adc
pop
rcll
pusha
idivb
push
movsl
mull
sub
jns
add
ljmp
and
fcomps
sarl
xchg
imul
mov
test
les
bound
fstpt
add
inc
rcrl
fwait
out
add
mov
aad
dec
test
daa
mov
inc
inc
inc
fdivl
sub
negl
sub
fwait
inc
or
lock
lods
jne
mov
sub
inc
or
aam
sahf
out
aaa
sarb
clc
insl
in
xchg
clc
jbe
mov
roll
cmp
int
mov
or
stos
stos
pop
std
lods
mov
cmpsb
sub
pop
mul
xchg
lods
daa
js
icebp
data16
mov
nop
scas
and
aad
mov
xor
fbstp
jecxz
jmp
lret
cld
insb
hlt
popf
stos
popf
inc
imul
jae
jmp
stc
push
dec
into
dec
adc
xchg
popa
push
lcall
icebp
sbb
sub
dec
pop
add
mov
inc
pop
sub
jae
mov
mov
dec
adc
cmp
dec
in
test
setl
or
pop
sub
inc
fs
testl
pop
mov
push
bound
sub
repz
mov
lods
ja
pushf
aas
dec
fs
out
outsl
sahf
icebp
pop
sub
mov
inc
mov
std
shr
xor
or
mov
orl
inc
or
adc
repnz
cmpsb
xor
xor
mov
stos
ss
sbb
fs
cwtl
xchg
cmp
lea
insb
test
mov
loop
mov
mov
test
arpl
push
push
js
clc
inc
addr16
cld
push
lahf
aas
fldlg2
inc
adc
shlb
jae
call
sbb
sbb
stos
insb
bnd
pop
js
jecxz
addl
mov
sbbb
lcall
sbb
mov
cmpsl
xor
xchg
cld
cltd
cmp
jno
jb
mov
fldcw
or
sub
sbb
mov
pop
sbb
and
jmp
std
sub
pop
cmp
and
icebp
inc
or
lods
xor
insb
in
jo
xchg
inc
push
shrl
ja
pop
cmpsl
lods
out
xchg
enter
adc
dec
mov
mov
cmp
cmp
in
push
pop
push
stc
push
jns
outsl
cltd
and
or
testl
imul
or
dec
adc
shlb
mov
pop
int3
cmpsb
daa
aaa
push
sbb
mov
jno
sub
fwait
inc
ja
mov
arpl
mov
push
inc
or
push
enter
jg
xor
pop
add
mov
scas
stos
xor
rcrl
push
jnp
lcall
insl
xchg
aaa
outsb
and
jne
mov
xchg
aaa
pop
pusha
flds
cli
popf
jg
inc
out
xchg
aaa
mov
flds
aaa
sub
aas
mov
xchg
aaa
ret
lds
or
or
cwtl
inc
jecxz
sbb
inc
cmc
sbb
inc
xchg
lahf
ds
test
das
loop,pt
cmpl
mov
insb
test
xlat
push
add
cli
popa
pop
icebp
jecxz
pop
jl
ljmp
xlat
arpl
inc
push
in
imul
mov
lods
add
dec
push
mov
data16
jb
push
call
shll
fwait
cmp
xor
xchg
imul
xchg
cmp
and
and
xor
cmc
ds
outsb
push
call
inc
push
cmp
cmc
xchg
fiadds
inc
outsl
repz
pop
xchg
or
jg
dec
adc
cmpsb
or
mov
push
sti
and
mov
push
shrb
loopne
dec
lret
mov
sti
lcall
icebp
sti
pop
aad
ljmp
sub
sub
xor
mov
xor
fnstsw
xor
iret
int3
mov
mov
pop
adc
dec
push
add
addr16
ret
out
scas
and
or
mov
scas
popa
ljmp
test
lods
mov
push
clc
repz
mov
data16
xchg
jb
dec
imul
pop
decb
outsl
out
sub
icebp
pusha
xorl
imul
fistpl
shl
insb
xchg
mov
in
scas
push
push
push
shll
dec
adc
popa
push
sar
andb
push
gs
mov
cmp
cmp
pop
sub
jns
dec
sbb
sub
jo
out
jbe
ret
jp
adc
jo
jne
mov
and
xchg
sub
lods
pushf
xchg
psrld
leave
jno
shl
adc
cwtl
into
enter
sbb
and
pop
pop
ret
ja
hlt
pusha
test
shl
mov
and
mov
push
fisttpll
push
or
and
jns
cmp
pop
mov
mov
push
add
shlb
lret
dec
or
adcb
or
fists
ljmp
jns
fiaddl
stc
pop
add
adc
mov
push
in
jbe
sub
xorl
push
dec
sahf
rolb
dec
mov
or
fdivl
ljmp
pop
lret
cld
insb
sbb
arpl
test
sbb
js
mov
inc
or
mov
insl
hlt
sbb
jae
loop
jecxz
pop
sbb
mov
lods
dec
adc
inc
loope
dec
adc
test
rcll
in
mov
mov
and
mov
push
fdivl
inc
mov
fwait
xchg
lahf
mov
pop
cmc
leave
cmpsb
das
shr
jo
pop
add
mov
mov
jecxz
in
les
xchg
cwtl
mov
lods
mov
fldt
popfw
jl
mov
int3
jo
pop
push
sbb
push
mov
mov
jg
lret
scas
xlat
adc
nop
pop
fiadds
lret
cld
push
and
rorb
add
movsl
stos
fwait
mov
pop
add
mov
aaa
mov
push
dec
push
add
cmp
mov
and
push
push
cwtl
add
test
enter
add
pop
mov
outsb
out
insl
hlt
pop
clc
sti
bound
mov
add
pop
push
into
sbb
cmpsb
sub
out
testl
xchg
jae
pop
add
popa
filds
jne
popf
aas
sbb
dec
dec
push
lahf
jl
pop
add
imul
push
sbb
adcb
jnp
stos
or
popa
or
push
mull
stos
mov
loop
and
inc
adc
rcrl
mov
lods
dec
or
test
fdivrl
cmpsb
addr16
jo
xchg
pop
mov
and
out
and
cmp
aad
mov
sub
fadds
sbb
je
mov
scas
fwait
inc
aas
xchg
sub
jae
add
scas
push
adc
add
push
imul
push
popa
adc
add
clc
pop
mov
mov
or
or
les
xchg
sbb
jne
fdiv
pop
jmp
clc
imul
mov
ret
and
adc
nop
bound
push
jecxz
jmp
fnstenv
sahf
das
xor
ss
movsb
mov
dec
adc
movsl
jae
pop
int3
std
pop
pop
push
ljmpw
clc
shrb
or
pop
in
insb
mov
push
lret
inc
dec
test
mov
lcall
jae
pop
movsl
mov
mov
dec
pusha
mov
jmp
in
flds
and
xchg
mov
inc
or
sub
xor
sub
cmp
and
mov
pop
testl
stos
sub
or
hlt
dec
inc
adc
stos
push
add
dec
mov
rorl
xchg
inc
mov
xchg
inc
loopne
or
stos
decb
test
aaa
mov
stos
jle
jno
mov
bound
add
scas
in
outsl
out
cld
lcall
push
lock
cs
sahf
inc
jb
jo
jmp
stos
scas
out
lcall
push
popf
inc
imul
mov
push
in
out
xor
in
imul
push
data16
int
jg
cmp
daa
xchg
aad
sbb
int3
call
xor
stos
pop
repnz
incb
push
lock
xor
mov
out
outsb
push
xor
test
sub
pusha
repnz
mov
pop
mov
movsl
dec
or
lods
mov
mov
xchg
inc
sbb
cld
pop
adc
enter
mov
movsb
adc
lock
cmp
incb
mov
jge
dec
xchg
inc
in
hlt
pop
and
loope
and
rcrl
ret
push
subb
xor
xchg
sarb
lret
loopne
ds
std
fwait
ds
test
mov
adc
sbb
pop
jl
sbb
push
xchg
mov
fsub
mov
xlat
cmc
dec
adc
fstpl
hlt
and
mov
das
xchg
cmp
xchg
lea
pop
fs
scas
mov
mov
imul
lods
or
outsb
sarl
scas
xlat
mov
xlat
adcl
pop
imul
stc
pop
sti
mov
mov
cmp
shrl
clc
inc
adc
push
adc
pop
fists
das
inc
adcb
ret
fsts
clc
test
imul
pop
xchg
aam
sbb
cmp
mov
push
lds
mov
xchg
shrb
xchg
enter
icebp
pop
xchg
hlt
daa
scas
test
push
decb
int
sbb
repz
xlat
cmc
pop
add
and
xor
cs
cmp
mov
pop
jmp
fidivrl
or
lret
pop
jl
sub
lret
nop
or
filds
pusha
test
dec
je
insb
adc
pop
add
scas
push
clc
jmp
and
push
add
adc
in
jo
inc
xor
je
fidivrl
mov
inc
mov
loope
in
push
iret
xor
mov
fsubs
lods
xor
loopne
fiaddl
repz
int3
nop
aas
mov
fsubrs
shlb
mov
xor
arpl
leave
lcall
dec
inc
adc
test
cltd
in
ljmp
add
fdivrs
pop
fdivrl
jle
icebp
pop
fcmovb
xchg
test
ret
movsl
xor
jecxz
rcrl
mov
push
xchg
pop
mov
mov
into
call
repnz
in
inc
push
push
int3
cmpsb
lcall
adc
and
add
scas
sub
arpl
dec
test
aas
enter
sti
jmp
cwtl
inc
sarb
cmpsl
sub
test
sbb
cwtl
in
sub
xchg
push
jns
mov
adc
outsl
insl
mov
fildl
push
adc
jne
repnz
jns
loope
mov
pop
lea
mov
mov
fstl
mov
xor
sub
sbb
cwtl
dec
push
std
fs
pusha
out
jne
outsb
jp
cmp
bnd
mov
jl
pop
aad
popw
ret
lods
pop
fs
mov
jecxz
dec
mov
lock
pop
mov
je
loope
lds
int3
das
test
mov
push
add
shrb
scas
cli
add
movsl
xor
xor
xor
cs
inc
push
mov
jnp
call
cld
fldl
inc
and
mov
ret
mov
fcomi
pop
in
in
outsl
out
mov
repnz
and
mov
push
mov
push
cld
popa
lret
stos
dec
sbb
std
popa
push
ds
sub
cmp
inc
aam
out
mov
adc
dec
lods
and
or
std
lcall
push
les
push
push
lods
sbbl
popf
inc
sub
ja
loopne
mov
xchg
xchg
or
and
das
xchg
rcrb
mov
sahf
inc
push
clc
and
xor
xor
xchg
push
lods
xchg
int3
mov
cmp
out
xchg
xchg
mov
scas
daa
mov
jb
rolb
int
or
hlt
mov
lret
xchg
xchg
cmp
fstpt
dec
jmp
imul
pop
cld
jecxz
repnz
xor
sti
pop
lret
push
jbe
les
inc
lret
jnp
jne
inc
hlt
gs
icebp
bound
aas
js
shlb
in
movsl
adcl
xchg
jne
je
cmpsb
aad
mov
inc
adc
push
and
popf
fsub
cmc
jl
mov
sbb
mov
test
ja
out
pop
clc
sub
add
bound
xchg
inc
lds
ret
in
jle
adcl
and
dec
dec
pop
and
pop
scas
sbb
int3
cld
xchg
lahf
cmp
out
lahf
sbb
andb
mov
mov
dec
in
xor
push
jmp
sahf
sub
cmp
lcall
dec
loope
pushf
jmp
into
cmp
jns
and
call
sti
ss
ss
push
testl
and
rclb
mov
outsb
add
pop
jne
sub
mov
sub
sbb
cwtl
cmp
call
cli
add
test
mov
gs
enter
xchg
das
mov
mov
into
xchg
in
fnstcw
movsb
repz
iret
add
adc
or
pusha
orb
cmp
jbe
dec
adc
jp
fimuls
xchg
cmp
shlb
mov
adc
int
sbb
int3
notb
sbb
xchg
pushf
or
mov
scas
xchg
fcmovne
xchg
popf
xchg
imul
int3
mov
dec
fistpll
adc
into
jne
jle
and
jecxz
push
incb
aad
aam
dec
testb
out
out
shl
jge
adc
inc
cwtl
jl
int3
les
sub
mov
inc
adc
mov
mov
cmpl
sub
mov
dec
leave
xchg
ret
adc
adc
jge
or
sub
sbb
jb
ss
xchg
mov
jmp
out
jo
cmp
push
testl
mov
loopne
lret
int3
arpl
call
mov
outsl
push
mov
or
or
es
pop
jge
fldt
iret
stc
add
out
add
adcb
and
sahf
xor
test
mov
fdivr
sbb
jb
sbb
dec
outsb
stc
nop
mov
rcll
repnz
adc
jmp
fnstenvs
mov
or
mov
xchg
sub
push
lods
cmp
pop
xor
mov
fs
push
jmp
xor
push
or
xchg
lods
inc
inc
cld
lret
bound
dec
fs
jle
jmp
sbb
mov
mov
mov
js
inc
fidivrl
fdivl
cltd
popa
clc
lret
xchg
push
in
jg
push
inc
sbb
jno
ss
xchg
mov
jmp
out
jo
aaa
jb
imul
nop
daa
mov
lret
int3
arpl
push
call
mov
outsl
push
mov
or
or
es
pop
jl
fldt
into
stc
call
out
add
sbbl
push
je
cmpsb
jne
mov
stc
movl
dec
sbb
dec
insl
cli
xchg
lahf
imul
rcrb
icebp
mov
aaa
into
inc
adc
in
xchg
fnstenv
mov
or
mov
mov
or
lods
cmp
mov
lea
push
jmp
xor
jno
xor
mov
test
lods
inc
fdivr
inc
fisubrs
cli
lret
bound
gs
jge
jmp
sbb
mov
mov
mov
ja
inc
fidivl
fnsave
popa
clc
enter
sbb
aas
sbb
outsl
xchg
aaa
into
ret
push
ret
in
adc
fnstenv
ss
push
mov
lods
mov
fnsave
lret
int
bound
push
call
mov
outsl
push
mov
or
pop
sub
mov
pop
jnp
fsubrl
arpl
dec
out
add
sbbb
and
aaa
movsl
jae
mov
clc
lds
negb
fnsave
pusha
testl
jle
fwait
mov
pushf
xor
adc
iret
inc
btc
arpl
xchg
fnstenv
mov
or
mov
mov
or
lods
cmp
dec
lea
lret
mov
push
jmp
xor
jo
xor
mov
andl
inc
stc
dec
fildll
clc
lret
dec
data16
jge
call
sbb
sahf
push
popf
iret
icebp
mov
mov
ja
inc
fnstenv
jne
xchg
pusha
test
call
sbb
insl
xchg
cmp
ret
push
shl
in
adc
fsubrs
ss
push
mov
stos
mov
leave
or
into
bound
in
xorl
or
add
es
inc
pop
jnp
fs
dec
out
pop
sbbl
pop
add
cmp
mov
fdiv
sbb
jne
adc
cld
xchg
popf
addr16
cltd
mov
pushf
xor
adc
rolb
mov
out
xchg
pusha
fnstenv
mov
or
mov
mov
pop
xchg
sub
push
push
lods
aaa
pop
mov
mov
lret
mov
push
jmp
xor
jo
cs
or
and
xlat
mov
dec
loopne
test
sub
jl
call
sbb
pushf
push
popf
int
mov
mov
jbe
inc
fnstenv
fbstp
xchg
pusha
test
out
adc
outsl
cmp
rorl
adc
fsubrs
xor
testb
xchg
mov
mov
or
das
iret
popaw
sub
pop
sub
mov
outsb
add
push
rorl
pop
and
inc
push
jp
fisubrs
int3
gs
std
lret
cld
push
test
push
sbb
mov
mov
test
fdiv
pop
fbstp
adc
inc
push
xchg
pushf
gs
xchg
mov
pushf
xor
inc
or
out
xchg
pop
fnstenv
mov
or
jecxz
xchg
sub
add
lods
xor
push
xor
xchg
jmp
xor
jo
sub
dec
mov
mov
dec
loopne
cmc
lret
dec
addr16
jnp
call
sbb
fwait
push
popf
int3
out
mov
mov
jne
inc
fnstenv
fbstp
xchg
pusha
test
in
adc
outsb
cmp
rorb
out
adc
fsubrs
xor
or
xor
lea
sub
fidivl
leave
or
iret
pushaw
sub
pop
sub
add
add
daa
sub
pop
and
fisubrs
lret
gs
cld
leave
out
sti
sbb
add
cmp
ret
rclb
inc
fdiv
push
fbstp
adc
inc
imul
adc
in
mov
xor
push
cmp
aas
or
out
xchg
pop
fnstenv
mov
or
loop
xchg
sub
add
lods
xor
mov
mov
lret
xchg
push
jmp
xor
jo
sub
or
and
aad
lods
inc
shl
dec
loopne
hlt
lret
dec
addr16
jp
call
sbb
lcall
and
and
push
inc
rcrl
inc
fnstenv
fbstp
xchg
pusha
test
in
adc
insl
aaa
pushf
xor
cmp
mov
loopne
out
adc
fsubrs
xor
gs
lea
xchg
sub
fnstenv
leave
or
push
out
sub
mov
outsb
add
add
mov
add
sub
push
and
fisubrs
lret
sti
enter
sbb
sbb
add
cmp
ret
hlt
mov
fbstp
adc
inc
push
jle
xchg
mov
pushf
xor
or
mov
out
nop
pop
fnstenv
mov
or
loope
xchg
sub
add
lods
xor
dec
mov
test
push
jmp
das
stc
jo
sub
movsb
orb
mov
lods
inc
shl
dec
loopne
repz
dec
addr16
jns
call
sbb
cltd
push
popf
lret
cmp
in
and
sbb
ds
fldcw
fbstp
nop
pusha
test
jecxz
adc
insb
ss
xor
cmp
mov
fists
adc
fsubrs
xor
fs
lea
xchg
sub
fdivs
leave
pop
sub
pop
sub
pop
jg
test
rorb
mov
add
stos
inc
push
ja
fisubrs
leave
gs
cli
out
stc
sbb
dec
outsb
mov
mov
repz
fbstp
adc
inc
addr16
xchg
cltd
bound
xchg
mov
pushf
xor
or
sarl
pop
pop
out
pop
fnstenv
mov
or
loopne
xchg
sub
add
lods
xor
dec
mov
lret
test
push
jmp
cs
jo
sub
movsb
orl
ret
lods
inc
shl
dec
loopne
repnz
inc
addr16
js
call
sbb
cwtl
push
popf
leave
in
mov
mov
jb
inc
fldcw
fbstp
pusha
test
loop
adc
imul
sarb
ficoms
paddusb
outsl
push
xor
arpl
testb
adcb
xlat
mov
or
xor
push
sub
pop
daa
push
out
jle
test
rorl
mov
jmp
sub
push
and
fisubs
gs
clc
out
clc
sbb
dec
insb
mov
mov
icebp
mov
fbstp
punpcklwd
inc
gs
xchg
xchg
popa
jg
xchg
mov
popf
xor
or
sarl
pop
mov
out
lea
jno
scas
jbe
loopne
clc
filds
xchg
sub
add
scas
xor
xchg
int3
andl
ljmp
jno
sub
movsb
jg
es
sub
rcrl
dec
loopne
icebp
lret
bound
inc
addr16
jbe
jmp
sbb
xchg
pop
sahf
enter
sbb
and
pop
jo
inc
fisubrl
fbstp
mov
mov
loope
push
adc
sbb
data16
sarb
fcoml
or
das
jne
popa
testl
mov
mov
pop
aam
lret
iret
pop
es
call
scas
js
push
stos
iret
or
and
rclb
inc
push
jae
fisubs
gs
test
jg
pop
test
dec
sbb
sahf
dec
push
cmp
rclb
inc
adc
jbe
push
stc
aas
arpl
xchg
xchg
pusha
adcb
mov
mov
mov
xor
cmp
mov
out
mov
jb
lods
jbe
fisubrs
sub
add
scas
xor
dec
test
int
movsl
shlb
movsb
push
jmp
clc
out
test
divl
sub
jge
nop
daa
jl
sub
iret
popf
scas
inc
iret
lock
fbld
icebp
int3
arpl
inc
data16
je
ljmp
xchg
or
sbb
es
outsb
cmp
fldt
fidivs
mov
mov
loope
pop
adc
sbb
data16
iret
mov
ficoml
or
fidivl
sub
clc
pusha
adcb
mov
mov
add
daa
into
gs
es
jmp
lods
js
pop
stos
int
mov
std
pop
sub
push
push
lods
inc
push
jno
fisubs
ret
gs
hlt
jmp
sbb
or
lcall
push
in
mov
fbstp
or
std
xchg
xchg
pop
sbbl
in
lahf
ss
cmp
aaa
add
pop
out
mov
jae
stos
jbe
fsubrl
xchg
sub
lcall
scas
xor
dec
adcl
andb
aam
out
test
divb
sub
mov
jnp
sub
into
pushf
scas
inc
into
out
dec
fbld
lock
arpl
inc
data16
jae
ljmp
xchg
or
sbb
es
insl
cmp
mov
jne
lea
mov
loopne
pop
adc
sahf
xor
mov
fsts
or
fidivl
sub
or
clc
pop
jg
sub
shlb
lret
add
into
gs
and
in
subl
or
cld
push
sub
dec
sbb
inc
fisubs
ret
repz
jmp
sbb
or
cltd
push
rclb
inc
fucomi
or
arpl
cmp
pop
sbbl
in
lahf
ss
cmp
ss
push
ss
pop
out
mov
jae
test
cli
xchg
fdivr
xchg
sub
sbb
adcb
andl
out
test
cmc
jb
daa
dec
or
jnp
nop
daa
jp
sub
int
scas
inc
int
dec
fistps
out
int3
arpl
inc
data16
jb
ljmp
xchg
or
sbb
es
insb
cmp
fidivs
mov
mov
filds
mov
xor
iret
mov
mov
in
or
fidivl
sub
sub
pop
jle
sub
shll
lret
add
push
jmp
stos
jbe
pop
test
or
sti
sbb
lods
inc
dec
outsl
inc
fisubs
shll
ret
hlt
adc
inc
data16
mov
jmp
inc
fucomi
or
jbe
or
cmp
std
xchg
xchg
pop
sbbl
jecxz
lahf
ss
cmp
xor
push
pop
out
xchg
jae
test
or
xchg
sub
dec
mov
orl
addr16
push
jmp
cmc
out
test
hlt
jb
es
or
jp
nop
daa
jns
sub
int3
lcall
push
out
int3
arpl
inc
data16
jno
ljmp
xchg
or
pop
out
mov
imul
fldt
fidivs
mov
mov
fiadds
mov
xor
iret
mov
mov
in
or
fidivl
sub
sub
pop
jge
sub
shlb
lret
add
gs
and
push
ja
subl
or
cli
sbb
rorb
inc
dec
outsb
inc
ficomps
shlb
shr
repz
inc
mov
mov
ljmp
jbe
or
cmp
xchg
nop
pop
sbbl
loop
lahf
ss
cmp
xor
mov
out
xchg
jae
cmpsl
jbe
fldcw
xchg
sub
sbb
orb
jg
shlb
mov
out
test
repz
and
inc
nop
daa
js
sub
lret
cltd
scas
inc
lret
in
dec
fistps
aas
data16
jo
ljmp
xchg
or
push
out
mov
push
inc
fldt
fidivs
mov
mov
fldl
mov
xor
iret
mov
mov
in
pop
xlat
fidivl
sub
sub
pop
jl
sub
iret
mov
add
xor
add
into
gs
and
push
jbe
subl
or
stc
sbb
rorb
dec
insl
inc
ficomps
mov
jmp
sbb
or
xchg
gs
jmp
or
jbe
or
cmp
xchg
pop
sbbl
loope
lahf
ss
cmp
xor
mov
out
test
xchg
cli
xchg
fyl2xp1
xchg
sub
sti
sbb
jg
ss
mov
push
jmp
repz
test
inc
or
js
nop
daa
ja
sub
lret
inc
lret
fistps
int3
arpl
ds
outsl
aas
ljmp
xchg
or
adc
aaa
rclb
inc
fldt
fidivs
mov
mov
faddl
mov
das
sahf
xor
mov
mov
in
push
fidivl
sub
sub
pop
jnp
sub
into
mov
add
xor
add
into
gs
and
push
jne
andl
or
clc
sbb
rorb
inc
dec
insb
inc
ficomps
mov
jmp
sbb
or
xchg
fs
call
or
jbe
or
cmp
mov
sbb
lahf
filds
cmp
xor
mov
out
test
jae
movsl
jbe
xlat
cmpsb
cli
xchg
fdivr
xchg
sub
cli
sbb
jle
ss
lahf
shlb
sahf
push
jmp
repnz
test
jb
and
mov
jbe
sub
leave
xchg
scas
inc
leave
ljmp
sbb
ds
xchg
or
adc
es
push
mov
jne
mov
mov
fildl
mov
cs
xor
mov
mov
in
add
daa
je
pop
sub
pop
jp
sub
mov
dec
xor
and
push
pop
push
ljmp
jno
mov
les
rorl
inc
dec
push
fistps
mov
ljmp
adc
mov
xchg
bound
mov
out
inc
fsub
pop
loopne
cmp
fs
aaa
pop
xchg
mov
sbb
stos
mov
shll
mov
out
adcl
test
xchg
xlat
notl
sub
dec
jge
ss
sahf
shlb
popf
push
jmp
icebp
out
test
lock
and
mov
jne
sub
enter
enter
sbb
int3
arpl
data16
insl
cmp
test
rclb
cmp
jecxz
mov
addr16
fidivs
xchg
mov
fiaddl
mov
sub
cmp
mov
mov
in
add
fidivl
es
pop
daa
clc
pop
jns
sub
int3
mov
dec
xor
std
pop
iret
push
push
push
ljmp
jno
mov
ret
es
pop
sub
dec
push
scas
inc
dec
imul
fwait
mov
ljmp
wbinvd
mov
xchg
popa
daa
mov
in
inc
fsub
push
loopne
cmp
xchg
mov
sbb
stos
mov
shrl
mov
out
adcb
andl
xchg
notb
sub
dec
jl
ss
popf
shlb
pushf
push
jmp
lock
test
out
jb
and
jne
nop
daa
je
sub
xchg
scas
fcmovu
pop
push
pop
mov
xor
mov
mov
mov
dec
sbb
aam
test
in
les
xchg
movsl
cmp
push
push
xor
push
addr16
push
pop
jae
jae
xchg
dec
xchg
popa
lret
pop
xchg
mov
dec
mov
lret
shlb
shll
or
inc
sbb
dec
incb
pop
lahf
pop
lret
out
push
jbe
mov
pop
adc
test
arpl
sahf
xchg
push
cmpsl
mov
cld
in
in
pushf
dec
cmp
inc
and
mov
lea
mov
xchg
movsb
adc
cli
aam
pop
out
add
jmp
mov
xchg
jg
add
pushf
cmp
dec
and
xor
adc
test
and
pop
pop
lods
stos
and
pop
or
adc
or
cld
jecxz
pop
lret
shlb
mov
aad
mov
data16
ret
scas
loopne
dec
mov
hlt
xchg
mov
test
and
inc
sbb
stos
fnstenv
push
mov
inc
jns
inc
jl
sub
aam
js
push
sti
xchg
dec
pop
in
pop
xor
jnp
cwtl
add
xor
adc
inc
in
dec
lds
sbb
xor
fsts
enter
test
push
push
clc
scas
cmp
test
or
outsl
test
adc
mov
mov
fnsave
rcll
fsubr
push
add
pop
push
sbb
dec
push
pop
lret
mov
cs
mov
dec
push
fwait
xor
add
out
add
cmp
pop
pop
xchg
xor
out
ss
xor
pop
mov
or
inc
push
pop
out
arpl
dec
mov
jge
stc
jmp
fimuls
cltd
mov
xchg
cmp
movsb
test
repnz
mov
push
and
inc
add
mov
inc
ja
daa
aam
mov
mov
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
scas
out
mov
or
js
xchg
fcmovb
add
lods
stc
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
in
test
inc
cmpl
inc
xor
sahf
dec
dec
jl
out
cmp
dec
mov
fisttpl
cmp
insb
lahf
push
dec
in
mov
