sbb
add
sub
popa
cwtl
aas
fldt
jns
dec
or
push
inc
ljmp
es
xchg
sbb
dec
or
adc
shll
sub
aas
xchg
in
mov
movb
adc
cmp
pop
iret
stos
test
movsb
push
leave
sti
addr16
mov
mov
mov
ret
or
mov
jbe
test
mov
ret
movsl
jb
dec
pop
inc
mov
pusha
lock
cmp
lock
idivl
mov
loopne
pop
add
je
icebp
aad
push
push
xor
rorb
scas
push
mov
xchg
aaa
pop
cmpsb
sub
cmc
fidivs
cmp
shl
stos
dec
sub
mov
mov
add
or
mov
mov
sub
push
bnd
pop
jecxz
xchg
out
sti
nop
jle
enter
ja
adcl
mul
xchg
loopne
out
shll
iret
ret
les
add
mov
cmpsb
pop
loopne
std
xchg
scas
xor
arpl
mov
mov
dec
insb
xlat
mov
das
in
xchg
xchg
mov
shlb
lock
pop
xchg
xor
fcomps
jle
incl
sarl
push
fadds
imul
mov
idivb
inc
ret
test
mov
jnp
add
lods
mov
rclb
mov
xlat
add
fs
or
sub
sbb
sub
lcall
pusha
scas
fsubs
addl
xlat
inc
adc
je
es
push
mov
loope
mov
xchg
mov
movsl
fstl
das
xor
popw
cwtl
lret
mov
imul
jp
movsb
out
and
and
lods
sub
dec
leave
dec
int3
pop
cmp
test
outsl
pop
test
pop
mov
sub
fbstp
adc
int
dec
je
imull
mov
pop
mov
mov
dec
xchg
outsl
cmpb
jge
pop
fmull
jb
jp
dec
xor
pushf
jno
sbb
pop
mov
enter
fld
pop
dec
cwtl
lock
mov
jb
ror
test
int3
cmp
test
pop
sbb
enter
pop
pop
adc
or
out
mov
les
int3
mov
and
scas
push
xchg
xlat
mov
sbb
mov
pushf
xchg
loop
mov
outsl
lock
jle
out
test
gs
jb
dec
mov
add
dec
mov
addl
aad
add
test
xchg
scas
xor
or
std
mov
fildl
pushf
push
push
std
gs
sbb
shll
mov
sbb
mov
and
mov
test
mov
incb
outsl
push
sbb
addl
xchg
shufps
push
ja
test
std
adc
mov
dec
les
dec
jle
lret
xor
inc
inc
stos
and
outsl
ljmp
push
mov
stos
loop
inc
ret
iret
pop
adc
shlb
xchg
push
inc
fs
subb
push
fldt
inc
jb
or
push
js
negl
es
imul
fsubrl
ret
and
movsl
arpl
jne
or
pop
adc
adc
add
fdivr
mov
xchg
cmp
cld
pushw
lods
adc
lods
push
inc
pop
andl
pop
sarl
add
or
or
and
mov
inc
jb
inc
cmp
xchg
push
cltd
outsb
pop
icebp
ret
cwtl
test
lds
push
cmp
or
je
loope
data16
into
inc
sbb
shl
mov
sbb
jno
lret
add
jb
fadd
jb
nop
hlt
pop
push
je
and
test
mov
adc
mov
or
xchg
mov
nop
xor
addr16
pop
mov
js
insl
gs
jb
cmp
and
push
mov
fwait
cmpsb
dec
mov
jo
andb
out
cmc
loopne
insb
mov
jmp
bound
sub
cmp
out
mov
adc
loop
jne
inc
andb
pop
int
pop
mov
ficoml
and
data16
cmp
lahf
into
iret
and
adc
ja
mov
adc
je
and
movsb
sarb
fcomps
aas
lret
jp
repz
aam
pop
xor
sbb
jecxz
popa
fcmovnb
icebp
cld
lahf
sahf
cmp
mov
push
mov
pop
stc
lock
mov
pop
loop
rclb
mov
inc
xchg
push
inc
lret
inc
add
xor
and
adc
sti
das
jle
bnd
pop
js
push
pop
or
ret
orl
mov
ret
into
xchg
jb
push
mov
cmc
std
pop
mov
imul
aas
int3
adc
mov
and
cmp
xchg
movb
pop
push
mov
sub
sbb
call
adc
xorb
lcall
sbb
mov
ret
stos
xchg
inc
sahf
sub
in
jecxz
and
push
cli
sbb
test
jns
fisubl
loop
adc
imul
push
push
mov
and
xchg
loop
pusha
mov
cmp
xchg
adc
adc
or
mull
ffreep
adc
sub
ret
xchg
or
outsl
lock
adc
aam
sub
mov
lds
fildll
ljmp
orb
sub
leave
into
xchg
les
mov
xchg
cs
inc
out
fstl
call
bound
dec
jno
adc
mov
rorb
fwait
test
cmp
cmpsl
cmpsl
ret
out
les
push
jmp
sub
and
pop
loope
mov
xchg
testb
ret
push
or
sahf
popf
pop
enter
and
paddw
lock
add
jne
stos
sbb
mov
cmp
push
in
and
or
mov
insb
dec
scas
fwait
cwtl
lret
mov
xchg
mov
jbe
in
jno
insb
xchg
shr
mov
push
sbb
repz
inc
mov
pop
test
les
mov
dec
push
sub
aam
and
test
inc
cmpsb
fdivrl
mov
enter
jmp
fcmovnbe
mov
repnz
lods
stos
push
in
pop
mov
adc
add
sub
jle
test
mov
sbb
jno
mov
call
lods
pop
add
fwait
xchg
icebp
push
mov
adc
lds
xor
pop
arpl
push
and
and
or
in
add
mov
push
sti
or
inc
sbb
pop
fistl
mov
aaa
xchg
out
xchg
pop
xor
mov
mov
stos
xchg
idivb
mov
and
jbe
jnp
mov
jecxz
cli
subb
dec
mov
jbe
sti
pop
mov
xor
neg
mov
xchg
xor
mov
xchg
clc
sbb
add
xchg
outsl
cs
in
or
xchg
sbb
into
jae
lock
clc
mov
xchg
sti
xchg
inc
inc
outsl
cli
mov
loop
rcrb
std
mov
cld
mov
cmp
repnz
daa
imull
xchg
addr16
cmp
das
and
inc
mul
popa
xchg
cmp
cld
in
lcallw
loopne
stos
int
out
cwtl
repz
inc
daa
mov
fiaddl
pop
lcall
jmp
xor
daa
adc
es
incb
testb
dec
sbb
xchg
cmp
or
adc
fisttpll
xchg
adc
ficoml
pop
push
mov
addr16
xor
jle,pt
and
lds
xchg
and
sti
inc
adc
cmp
sarb
xor
mov
or
mov
lea
repnz
je
and
mov
mov
sub
mov
shlb
bound
mov
pop
sbb
or
jns
ja
pop
xorb
sbb
pop
out
sbb
mov
insl
xor
test
insl
mov
dec
push
xor
jns
add
jg
in
subl
test
adc
loope
push
lret
subb
push
push
pop
aam
movsl
jge
dec
adc
dec
mov
std
inc
dec
out
test
lret
sub
and
iret
xchg
sbb
inc
adc
das
lods
xchg
xchg
jmp
movsl
jbe
imul
xor
xor
dec
or
and
mov
test
dec
mov
movsl
cmp
jno
xchg
pop
das
add
xchg
call
sarb
sbb
ljmp
push
adc
popl
lret
loop
cli
inc
gs
jge
add
out
mov
out
push
arpl
sbb
inc
ss
jb
loope
cltd
test
jno
es
mov
push
aad
gs
ret
mov
xor
mov
clc
pop
std
xchg
dec
jno
imul
or
in
inc
push
and
sub
movsl
mov
lcall
dec
arpl
dec
or
aaa
cmp
xchg
out
xchg
lahf
xor
fwait
in
stos
mov
push
mov
fcoms
out
lds
pop
add
inc
or
test
scas
stc
jae
es
mov
inc
lcall
adc
and
lods
xchg
sbb
push
cmpsl
and
jecxz
jae
mov
xlat
test
jecxz
cwtl
enter
int
xchg
sub
pop
in
adc
pop
into
xchg
mov
fs
loop
and
mov
stos
cmp
ja
jp
and
scas
inc
jmp
loop
iret
or
adc
xor
adc
xchg
inc
sub
add
fs
insb
stc
ljmp
loop
dec
push
in
lcall
pop
dec
ja
js
lock
cmpl
bound
in
lahf
lea
xlat
mov
push
inc
sub
push
test
push
aad
pop
cld
int3
shll
push
mov
inc
add
movsl
leave
inc
push
pushf
bound
sbb
push
lret
data16
mov
jle
or
mov
or
push
mov
movsl
es
mov
jnp
pop
and
in
inc
rolb
mov
lods
xchg
imul
xor
ds
dec
and
push
xchg
mov
sbb
mov
fidivrs
pushf
shr
imul
mov
xor
xlat
xorl
push
in
test
or
mov
rcll
jo
xchg
add
outsl
iret
imul
jmp
add
lcall
arpl
add
scas
xchg
add
ja
push
ja
cs
dec
push
mov
lret
hlt
je
pop
inc
jmp
or
imul
xchg
mov
push
cmp
repz
sbb
sbbb
rolb
mov
and
stos
adc
push
push
dec
nop
mov
sbb
es
aad
add
pop
add
push
jle
add
fmuls
lea
pop
add
xchg
adc
xchg
sbb
cmpsl
pop
xor
add
mov
fmulp
jmp
cld
bound
adc
sub
jmp
lret
aam
cmp
loopne
mov
dec
adc
xor
sub
ret
int3
jp
sbb
jne
repz
inc
mov
repz
dec
fldt
inc
xor
loopne
add
repz
mov
cmpsb
int3
gs
mov
jp
adc
xchg
push
sbb
xchg
inc
clc
repnz
cld
push
popf
cs
insb
adc
mov
ret
xchg
fsts
pop
sub
out
lds
cmp
lods
or
jecxz
sarb
mov
xor
movsl
gs
sbb
mov
outsb
dec
fstpt
pop
dec
jg
popf
out
add
xorb
pushl
imul
stc
fidivrs
pop
pop
pop
adcb
or
daa
scas
aaa
adc
dec
pushaw
or
dec
insb
leave
idivb
mov
cs
lahf
mov
sub
add
mov
xchg
leave
rolb
push
popf
popa
sti
ffree
out
jns
testl
xor
xchg
inc
iret
push
scas
push
inc
testb
inc
mov
hlt
dec
fisubs
ds
stc
icebp
sbb
push
out
pop
push
in
add
clc
jmp
stc
adc
repnz
push
pop
loope
movsl
test
pop
mov
cmc
sbb
xchg
inc
scas
mov
or
shll
call
dec
mov
pop
roll
sub
outsb
adc
push
fcompl
dec
jmp
fcompl
mov
jnp
mov
popa
xchg
add
mov
jmp
fs
xchg
adc
stos
add
push
js
mov
add
data16
out
jae
adc
push
pushf
rorb
mov
and
cmp
xor
mov
jo
cmp
lret
xchg
mov
aam
or
repnz
sbb
shr
test
or
sub
jae
sub
xor
in
cmpsl
jle
inc
outsl
adc
mov
and
inc
pop
dec
sbbb
cmovbe
sbb
pusha
sub
inc
mov
sub
jo
push
xor
cmp
dec
mov
xchg
outsl
sarl
adc
pop
mov
xor
jbe
cmp
sahf
adc
scas
insb
add
test
call
or
and
xchg
adc
inc
sub
push
sub
hlt
sti
icebp
inc
cwtl
in
xchg
repz
arpl
and
sub
xor
mov
add
inc
lock
jb
fs
decl
stos
es
xorl
aas
test
inc
inc
jno
push
jno
xor
cmc
pop
xor
call
pop
stc
loopne
cld
lea
imul
je
loop
icebp
nop
xchg
cltd
lret
mov
sahf
mov
xchg
inc
dec
mov
addb
mov
out
fwait
sub
fdivl
ss
in
repz
mov
adc
rol
xchg
je
cmpsb
leave
sbb
int
jb
orb
sbb
xor
sbb
or
test
sub
loope
aad
pop
cmpsl
xchg
xor
jns
cmp
xchg
push
jl
sbb
adc
lods
fwait
add
or
repnz
mov
fidivs
and
loop
mov
subb
pop
into
jge
push
into
icebp
push
icebp
push
pop
lret
and
sarl
push
in
stos
sub
sub
stc
out
aad
sbbb
lret
movsb
test
adc
mov
sub
adc
sbbb
fwait
aam
cmp
dec
add
mov
mov
and
sbb
inc
ds
out
push
mov
mov
das
jle
jg
mov
or
push
lds
pop
push
lock
lret
loopne
xchg
adc
popf
fldenv
jp
in
iret
rcr
inc
sbb
sbb
rol
mov
mov
sub
sti
or
xchg
sarb
outsb
mov
mov
jmp
outsl
repz
xchg
jge
jecxz
movsl
ljmp
outsl
lods
or
roll
push
jb
mov
fcomip
pop
jmp
mov
ret
xchg
dec
das
pop
data16
mov
aam
adc
stos
jns
lock
jl
push
jo
movb
aas
je
int3
ss
cmp
popa
mov
adc
cmp
insl
fdivl
sub
out
mov
or
pop
sbbb
fbld
dec
popf
daa
sahf
sub
fiaddl
xchg
out
ret
ja
negb
test
cli
push
mov
xor
movswl
add
mov
test
shrb
fidivs
testl
fcompl
les
inc
stos
mov
clc
mov
or
sbb
outsb
enter
pop
inc
arpl
lcall
dec
add
repz
hlt
or
and
push
dec
inc
jns
sub
xchg
cmp
push
iret
stos
adc
pop
push
pusha
sahf
mov
mov
sub
sahf
xor
cld
pop
mov
fwait
stc
stc
inc
rol
mov
packuswb
insl
mov
inc
testl
mov
add
jne
inc
mov
jle
inc
orb
andl
jle
sahf
ss
xor
add
mov
ljmp
and
cmp
shr
std
idivl
push
mov
jne
hlt
mov
mov
in
fstps
sbb
pop
or
out
hlt
or
nop
cwtl
sub
out
cltd
pop
mov
add
lcall
aaa
inc
jne
and
idivl
sub
in
sbb
sahf
jge
repnz
popa
sbb
add
js
mov
mov
es
adc
mov
orb
les
add
mov
mov
div
aam
lea
cmp
aam
das
sub
mov
pop
add
sbb
add
mov
mov
add
in
std
shrb
das
and
int
in
adc
adc
adc
xor
jns
xchg
jmp
imul
mov
mov
test
test
stc
test
dec
dec
sbb
gs
or
adc
icebp
call
pop
test
outsb
xchg
dec
or
out
fwait
adc
in
sub
jmp
ror
pop
push
mov
add
mov
pushf
mov
aaa
dec
std
mov
sbb
cmp
jns
push
mov
inc
lock
pop
inc
xor
add
shrl
cmpsb
or
ljmp
lahf
mov
ljmp
rclb
lods
into
adc
daa
cli
and
pushf
cli
mov
inc
jmp
or
cmc
ds
push
jns
and
stos
cli
mov
jo
lods
popa
dec
jno
cmc
dec
push
push
sub
jno
adc
mov
loop
mov
loopne
push
adc
in
or
pop
dec
cmpsl
insb
outsl
push
data16
les
adc
xchg
dec
mov
testb
and
fmul
jg
pop
and
in
sub
mov
dec
repnz
and
sti
popa
mov
js
adc
and
add
mov
popf
push
int
repz
imul
outsl
loop
in
jmp
adc
pushf
jecxz
insb
divb
cltd
pop
pop
jecxz
xor
mov
pop
mov
or
push
sub
leave
stc
lahf
jle
and
addr16
or
adc
jle
push
mov
rorb
pushf
mov
outsb
and
aad
sbb
stc
fistl
cmc
nop
insl
cs
mov
mov
or
pop
lods
ljmp
xlat
cmp
xchg
xchg
fdivl
sub
leave
and
jno
insb
mov
bound
cltd
adc
imul
and
sbbl
jmp
divb
gs
or
mov
inc
andb
mov
into
or
jmp
addr16
and
loope
or
mov
jnp
aad
sbb
cmpsl
ljmp
jno
out
mov
dec
and
cmc
fwait
cmp
stc
xor
xchg
or
cmp
mov
mov
stos
pop
xor
aad
mov
mov
out
cli
push
pop
jae
mov
fldt
push
cltd
add
xor
sub
popa
and
ja
mov
in
mov
repz
inc
adc
addr16
pushf
jbe
cltd
cmpsb
xor
jp
xchg
mov
jb
decl
int3
js
xchg
push
mov
xchg
dec
insb
pop
lds
push
in
or
cmp
jmp
push
xlat
aam
xlat
fbld
imul
into
pop
jecxz
xor
jle
aas
xchg
mov
sub
outsl
rcll
mov
cltd
xlat
out
lret
flds
faddl
adc
popl
push
stos
out
lock
out
loopne
mov
mov
add
pop
pop
jle
xchg
in
imul
fwait
mov
test
movsl
xchg
test
in
pusha
pusha
or
sbb
sbb
jge
pop
hlt
ds
hlt
cmp
add
aad
daa
notl
xor
cmpsl
and
jae
icebp
repz
and
lods
inc
hlt
push
mov
mov
lahf
jno
inc
mov
cs
jb
sub
sbb
cmp
lahf
mov
mov
adc
mov
je
aad
push
and
into
xor
xchg
mov
xchg
call
arpl
jbe
mov
mov
sbb
int3
inc
rol
jecxz
popf
or
mov
in
das
hlt
ss
mov
add
cmc
clc
cmc
enter
or
jp
sub
jp
add
scas
xchg
adc
sarl
leave
push
inc
mov
aas
popa
sbb
mov
fdivl
jmp
pop
sub
sbb
xor
or
push
add
div
pop
xor
bound
pop
mov
incl
ja
cmc
cld
pop
or
pusha
mov
dec
repz
sahf
mov
movsb
shrl
icebp
sbb
cwtl
add
sar
mov
pop
push
fwait
xchg
push
add
call
mov
arpl
out
xor
or
insl
scas
cmp
int3
out
lret
adc
jge
ret
fsubl
lret
xlat
or
popa
inc
jl
lock
dec
lods
jge
xsha256
cmpsb
adc
mov
fnstcw
pushl
jno
xchg
test
aam
out
stos
inc
jno
imul
and
xchg
or
in
xor
int3
inc
scas
jp
iret
clc
adc
ds
push
xor
xor
jb
sub
rclb
adc
fstl
push
pop
mov
mov
lea
mov
divl
lock
js
mov
cld
test
repnz
lods
jp
adc
lret
or
mov
pop
shrb
pop
inc
push
sbb
cmp
rorb
call
jg
cmpsl
xor
pop
lods
or
scas
cmpsb
fcmovne
addr16
inc
cld
stos
cmp
jge
fists
xchg
xchg
and
xchg
pop
pusha
lret
icebp
pop
mov
sahf
loope
mov
adc
xchg
subb
xor
jg
xchg
out
ds
adc
jp
fs
pop
dec
aam
mov
sbb
inc
adc
jge
sti
les
shll
and
out
push
nop
loope
nop
imul
mov
in
xor
sar
xchg
push
jle
sub
sub
and
sub
sbb
sub
out
dec
pushf
mov
lea
add
dec
dec
pushf
push
clc
jae
mov
mov
xor
pop
ret
mov
push
cli
in
or
inc
jge
iret
adc
mov
sub
jo
fstpl
in
inc
dec
lret
ja
imul
inc
or
call
mov
mov
jne
std
inc
arpl
sub
repz
movups
daa
lahf
scas
inc
sbb
mov
insb
add
xor
imul
push
xchg
cwtl
fldenv
adc
sub
mov
add
mov
je
leave
mov
push
sub
mov
xchg
inc
insl
rol
pop
adc
dec
cmp
xchg
mov
xor
popf
mov
cmp
jns
rcll
mov
hlt
insb
push
outsb
js
pusha
or
mov
lret
mov
and
push
jae
je
pop
dec
bound
rorl
sahf
xchg
rcl
fildll
jp
jb
push
incl
shlb
mov
mov
shr
cmp
outsl
add
inc
push
and
mov
test
insl
fstl
xchg
stos
std
cmp
inc
and
test
lock
cld
sub
ficoms
jmp
int3
cltd
aas
pushf
inc
ret
inc
jg
jp
cmp
jp
pop
cmp
vmovsldup
mov
dec
sti
sub
dec
rorb
jmp
push
push
jnp
adc
xchg
jo
push
sbb
dec
mov
repz
add
pop
lcall
jae
and
add
adc
aas
lock
pusha
les
or
adc
into
loope
out
rcrb
dec
mov
mov
cld
xor
dec
jo
ljmp
lods
fs
negl
lret
xchg
inc
jle
xchg
loop
jl
or
repz
notl
sbb
sub
dec
insb
mov
stos
xchg
adcb
dec
mov
sub
std
xchg
or
test
nop
cli
rorl
ja
clc
xchg
xor
adc
call
scas
adc
mov
ret
mov
dec
jge
sbb
and
cli
aaa
outsl
push
jmp
fmulp
mov
outsl
xor
push
jo
imul
fnsave
cld
pop
test
and
int
fwait
loop
lds
and
mov
repz
push
jo
adc
stc
pop
jb
sbbb
mov
fwait
adc
lret
mov
js
push
outsl
lret
mov
sub
insb
jae
hlt
jmp
aad
nop
loope
xor
shlb
imul
add
cli
xchg
call
adc
xchg
lahf
es
jnp
je
popf
adc
sub
xchg
mov
mov
pop
out
add
jp
and
stos
jo
outsl
mov
jge
jmp
dec
dec
dec
mov
pop
not
xchg
inc
jae
dec
add
sbb
ss
xchg
out
insb
in
out
inc
popl
xor
and
push
mov
mov
mov
and
outsb
pop
pop
repnz
ljmp
xor
mov
fwait
inc
insb
rorl
orb
into
jo
jle
clc
dec
push
mov
mov
xchg
insl
sahf
inc
inc
stos
sbb
inc
mov
pop
sub
int3
mov
adc
enter
xor
or
in
icebp
ret
or
mov
pop
mov
or
xor
and
jl
mov
cli
cld
in
mov
out
sarb
test
mov
or
inc
test
inc
into
sbbl
cs
or
push
sub
ror
cli
add
lea
xchg
gs
cli
je
jp
xchg
fwait
das
pop
and
or
or
dec
fisubl
dec
sbb
dec
in
icebp
bound
imul
in
cli
jns
adc
xlat
mov
popf
inc
fisttps
lods
aad
push
popa
das
sbb
mov
xchg
add
sbbb
lahf
out
mov
fs
idivl
inc
fildl
les
js
inc
and
fstp
and
jg
mov
xchg
dec
mov
inc
push
and
pop
sbb
aas
pushf
adc
push
pusha
or
jb
mov
pop
arpl
inc
mov
pop
inc
mov
lock
int3
xchg
andb
out
ret
or
xchg
insb
add
and
xor
jecxz
mov
movsl
in
adc
dec
pop
mov
inc
movsb
leave
adc
sti
loope
dec
sbb
in
shrb
mov
insl
pop
mov
jmp
inc
mul
imul
and
ljmp
clc
sbb
xchg
push
or
scas
cli
fists
cmpsl
pushf
lock
mov
rcrb
mov
lret
mov
fsubrl
sbb
inc
ret
mov
scas
xor
sahf
sti
cmp
jge
mov
xor
or
sub
inc
daa
cmp
test
fisubrl
shl
mov
xor
outsb
dec
mov
scas
out
iret
loope
pop
mov
fildll
scas
stos
jnp
cmpsl
dec
rcrb
lods
ds
inc
dec
repz
pushf
and
push
negb
mov
cmp
pop
popa
in
inc
cld
mov
push
pop
jo
mov
jp
enter
pop
pop
adc
ja
lret
lea
mov
adc
jnp
xor
pop
out
out
movsl
sar
or
add
ljmp
test
ljmp
js
insb
jecxz
mov
xlat
cmp
pop
sub
sbb
and
ja
jg
out
bound
sbb
adc
cmp
adc
ret
call
or
sbb
mov
jne
popf
adc
add
ficoms
cmp
lods
push
adc
nop
pop
stos
int
stos
fsubs
jecxz
xchg
enter
inc
lds
out
inc
xchg
push
faddl
bnd
setge
sub
call
sahf
jl
mov
pop
push
lock
jmp
push
mov
js
out
fs
into
mov
and
in
xchg
push
movsb
add
pop
fcmovne
test
roll
daa
lds
fnsave
clc
cmc
and
popf
mov
int3
add
fnstcw
popf
or
pop
or
cmpb
js
sub
push
pop
addr16
xchg
push
mov
add
push
dec
test
daa
fwait
xor
xlat
and
scas
shll
inc
mov
pop
subb
jnp
cmp
iret
ficoms
adc
sahf
inc
call
fwait
mov
test
ret
mov
lods
mov
inc
inc
jg
aaa
add
rorl
loopne
push
scas
sti
sub
aad
mov
stos
dec
xchg
aas
push
out
outsb
sub
out
cmp
mov
ret
and
aas
sbb
sahf
pop
aas
movsl
mov
test
add
inc
pop
mov
add
xchg
ret
loop
xlat
xchg
cwtl
or
sub
dec
jne
sub
test
in
pushf
jle
cmp
outsl
push
jl
ret
cmp
inc
pop
mov
loope
cmpsb
jnp
xchg
hlt
sbb
sets
ss
pushf
xor
into
cli
stc
hlt
daa
jmp
adc
enter
add
add
test
stos
adc
popa
mov
test
and
push
pop
repz
loop
rol
mov
mov
and
or
lcall
into
xchg
mov
in
insl
cmpsb
vpsubsw
xchg
push
mov
insb
or
or
subl
mov
or
lds
lods
gs
scas
or
sahf
out
pop
or
cmpsl
cmp
mov
ljmp
cmpb
inc
inc
mov
ficoml
aad
dec
cmp
pop
lods
xor
rcll
or
dec
mov
loopne
lret
jp
clc
pslld
jnp
mov
aam
mov
adc
loopne
push
adc
test
sbb
jns
ret
popa
jg
in
or
ret
aaa
cmp
mov
lret
shlb
xorl
mov
jnp
aas
fistl
movsl
pushl
fstpt
aaa
pop
xor
and
int
jno
leave
xchg
shll
repz
mov
or
mov
js
pop
out
imul
lret
pop
jae
push
out
mov
jne
dec
repnz
push
imul
aaa
cmc
enter
arpl
enter
dec
fwait
push
sbbb
lock
ss
jecxz
sbb
rorl
es
mov
dec
inc
outsl
testb
xor
mov
and
in
xchg
and
sub
add
and
cld
jle
jp
sbb
fisttpl
sub
dec
mov
mov
fmuls
stos
cmp
push
cmp
inc
xor
in
jp
subb
mov
int3
gs
in
lret
push
icebp
add
sbb
jge
mov
push
add
pop
test
call
mov
or
sub
sub
hlt
in
enter
xor
pusha
push
jge
and
jno
xor
ficoml
in
cmpl
mov
shr
std
pop
xor
sarl
mov
or
pop
jle
jle
mov
push
and
stos
add
pop
ja
adc
aad
gs
repz
xchg
test
push
loope
add
mov
fdiv
sahf
sub
stc
in
push
out
or
xor
or
jg
push
mov
dec
inc
xchg
mov
sub
dec
sub
rcl
in
lret
aam
jge
dec
push
mov
fnstcw
add
rcrl
pop
pop
cmp
sub
adc
pop
xor
inc
pop
xor
mov
repz
mov
rclb
xor
dec
fcomps
enter
rclb
push
loope
add
inc
mov
inc
shll
ss
lds
je
or
mov
pop
jge
fxtract
inc
loop
pop
iret
mov
jecxz
cmp
ljmp
add
xchg
bound
jl
or
mov
repnz
xchg
adc
sbb
daa
jbe
jge
push
lcall
jns
cmpsl
push
mov
cmp
xor
push
stc
mov
dec
cs
and
arpl
das
repnz
icebp
ljmp
sbb
push
dec
outsl
jae
cmp
xchg
and
test
imul
add
or
cwtl
loopne
xor
imul
add
in
xchg
mov
movsl
nop
int
ret
das
ss
clc
jae
leave
scas
cmp
push
xchg
push
sbb
add
jp
pop
aad
pop
pusha
mov
fwait
sahf
inc
adc
std
loopne
lahf
hlt
sub
fucompp
shlb
jle
add
jb
dec
call
movsb
xchg
aad
fwait
ljmp
lret
rcr
js
je
dec
loopne
xor
push
pmaxsw
jl
mov
dec
mov
fs
push
dec
das
sub
lea
dec
psubb
push
rcll
push
jns
push
enter
or
jbe
push
arpl
iret
ja
xor
outsl
mov
adc
pop
aas
sub
dec
mov
out
ds
sahf
out
sbb
mov
push
adc
push
xchg
xchg
pushf
mov
shlb
jp
es
adc
and
popa
mov
jns
mov
fsubr
cmp
mov
mov
and
jns
loope
and
add
mov
add
dec
addr16
mov
xor
mov
sub
mov
std
and
insb
mov
push
insb
jb
ja
popa
and
push
mov
dec
dec
push
xchg
repnz
faddl
cli
sub
gs
aam
push
dec
xchg
jmp
jne
aad
je
aaa
sub
and
stc
jecxz
imul
cwtl
enter
jns
xchg
add
test
loope
addr16
js
mov
pop
xchg
mov
and
mov
stc
ljmp
lock
pushf
ret
clc
jle
cmp
xchg
movsl
pop
fidivs
popf
mov
cli
mov
lretw
cmp
sti
or
ud1
insl
inc
mov
jne
xchg
sub
mov
ret
aam
xchg
pop
cmp
inc
and
and
clc
test
arpl
inc
movsl
test
lods
shll
add
lret
push
test
hlt
test
push
loopne
arpl
arpl
or
arpl
push
scas
and
mov
hlt
jb
add
dec
and
xor
stc
xchg
mov
icebp
mov
in
addb
sahf
fisubrl
xchg
xor
pop
aas
pusha
fistpll
adc
mov
mov
cli
jle
inc
inc
mull
imull
pushf
push
inc
xchg
lods
mov
repz
pop
lahf
add
cli
or
enter
jg
ret
int
data16
scas
leave
sarl
mov
sar
repnz
loop
iret
test
faddl
dec
xchg
add
jle
rorb
or
pop
cmc
cltd
sarb
leave
imul
test
dec
mov
fs
cmp
ficompl
adc
aam
dec
call
lock
mov
arpl
fnsave
cmpsl
push
xor
shlb
mov
outsl
shll
popa
test
nop
ret
pop
int
cmp
adc
jo
sahf
add
push
scas
dec
or
xor
imull
rorl
mov
pop
rol
jp
mov
sbb
xchg
push
leave
push
in
add
xor
jmp
pop
dec
push
cld
dec
mull
push
xor
xor
pop
mov
subb
es
in
rorl
inc
popa
jecxz
mov
mov
enter
fisttpll
xor
aad
and
rclb
loop
jns
loope
cmc
outsl
lds
mov
stc
adc
push
fdivl
sbb
fcomps
and
jbe
scas
cmp
xlat
jo
lcall
add
test
lcall
push
sbb
jge
pop
and
sub
mov
lret
into
out
mov
aas
sbb
xor
mov
test
push
dec
and
je
aad
cmp
mov
or
cmp
shlb
test
repnz
scas
ret
mov
mov
jnp
ret
test
in
and
mov
xor
jmp
rcll
mov
jl
inc
pop
gs
cmp
mov
out
sarb
and
subb
mov
into
and
xchg
in
and
xchg
sti
loope
push
ss
push
and
int
stos
dec
push
mov
movswl
mov
xor
outsl
and
and
pushf
hlt
sub
aad
dec
lahf
adcb
loop
fchs
outsl
adc
incb
sbb
in
insl
lcall
push
mov
jl
push
sbb
sub
sti
pop
push
mov
jae
and
push
shlb
xor
mov
mov
hlt
pushf
adc
jecxz
lcall
rcr
ret
jno
xor
sti
sbb
not
and
andl
mov
xchg
das
aaa
inc
mov
push
xor
xchg
adc
ret
gs
push
fdivs
xchg
dec
js
mov
loopne
or
mov
test
pusha
xchg
maskmovq
testl
adc
xor
mov
pop
pop
xor
push
push
pusha
fs
cmp
lods
add
mov
cli
jne
pop
inc
aam
push
mov
in
xchg
mov
aaa
inc
jns
test
adc
mov
or
ret
aaa
out
inc
ljmp
and
push
aam
sti
cs
cli
jno
mov
inc
and
sbb
push
repnz
divb
ljmp
leave
das
dec
push
push
mov
cmp
cmc
aas
add
sbb
inc
ror
jmp
ficoml
inc
mov
andl
into
out
cmp
clc
test
divl
daa
add
pop
inc
sbb
loope
jmp
dec
fwait
movsb
test
sub
mov
sbb
mov
leave
add
push
dec
daa
sbb
shr
loop
sar
test
mov
jg
pop
ds
add
std
cld
sbb
outsl
test
loop
mov
fsubrs
dec
lock
lret
hlt
shl
adc
repz
push
or
out
add
shll
mov
fucomip
inc
movsl
mov
jnp
adc
pop
sti
mov
clc
cmp
sub
test
pusha
ja
nop
in
orb
cmpsl
dec
rdtsc
scas
and
push
cmp
cmp
mov
push
leave
out
jb
push
stc
ja
cltd
push
aas
fldl
sub
xor
hlt
roll
lods
pop
notl
popa
jl
xchg
jne
stos
clc
jno
mov
lret
ljmp
dec
jmp
pop
repnz
aaa
dec
jecxz
sbb
hlt
jae
cmp
xor
iret
inc
or
push
and
xchg
inc
mov
mov
loopne
mov
push
into
scas
pop
mov
popa
leave
pop
pop
push
out
push
add
jo
test
jp
in
movd
in
mov
adc
add
mov
lcall
repz
dec
sub
jl
cmpsl
or
popf
mov
sub
into
inc
stc
cld
sti
sub
push
sahf
adc
xchg
insb
rorb
jbe
dec
cmp
lock
jno
repz
sbb
lret
xor
mov
cmpsb
xchg
jno
test
xchg
xlat
xchg
imul
inc
out
pop
mov
inc
or
and
jne
outsl
movsl
mov
call
out
xchg
xlat
in
cmp
mov
addr16
push
jmp
lahf
or
jmp
push
jle
movsl
jne,pt
ljmp
js
test
pop
cmp
hlt
xor
repnz
or
pop
mov
dec
mov
add
negb
inc
cmpsl
andl
aam
fcom
cmpsb
sub
pusha
inc
adc
sub
add
stos
pusha
or
sahf
test
inc
pop
push
idivl
outsb
jbe
les
mov
repnz
or
mov
mov
and
lea
or
lods
lods
mov
repnz
sbbb
lahf
xor
iret
sbb
mov
outsb
sub
rcll
or
jno
mov
adc
pop
xor
mov
notl
lret
push
movsb
and
mov
rcrb
push
mov
fidivrl
jge
ret
inc
push
test
push
daa
cmpsb
daa
jl,pn
adc
jecxz
test
iret
cmp
pop
xchg
imulb
push
adc
outsl
sbb
test
pop
idiv
pusha
push
push
stos
aam
pop
sarb
lret
rcr
fidivrl
or
push
fstl
pushl
add
mov
test
xor
test
or
xor
and
test
loop
mov
jo
les
jp
je
test
jne
lods
sbb
repnz
aas
lcall
sti
dec
lds
adc
jne
pop
or
adc
mov
and
imul
fs
mov
aas
xorb
or
fisubl
pop
lea
dec
push
mov
into
push
out
jno
addb
push
andl
roll
add
xchg
pop
xchg
fdivs
xor
stos
sub
push
sbb
popa
adc
or
repnz
lea
js
ss
and
sub
int
test
lret
mov
movsb
in
dec
pop
dec
mov
lret
jmp
mov
dec
add
popf
jbe
sub
sub
sbb
ss
dec
icebp
cmp
imul
lock
gs
scas
sub
lahf
stos
xlat
xor
fdivrs
cmp
push
int
jg
fs
push
ljmp
fs
dec
dec
mov
xchg
pop
lea
pop
pop
adc
out
mov
push
jg
jge
xor
or
lods
aaa
clc
xor
or
iret
repz
jbe
aam
cwtl
jmp
idivb
jge
arpl
xor
pop
or
adc
mov
js
data16
shll
sbb
jp
push
pusha
add
inc
push
scas
sbb
jae
test
test
xor
mov
leave
or
out
fisubs
in
adc
cmp
loope
shl
xor
xchg
jno
sbb
jl
lahf
mov
jbe
mov
jecxz
ljmp
in
push
scas
sub
ficoml
iret
out
pop
dec
out
xor
int
xor
lds
and
dec
xor
lods
mov
jle
cmp
fmull
push
test
cmp
lods
and
scas
sub
jmp
cmc
icebp
xchg
or
cmp
cld
xlat
cld
roll
pop
pop
or
xor
dec
leave
mov
jg
jns
pop
aas
inc
das
std
fsub
xor
movsl
xchg
out
insl
sbb
test
and
addr16
push
loop
sbb
jno
leave
fiaddl
fldenv
hlt
imul
insl
lcall
dec
fdivrs
xchg
jno
push
ja
mov
movsl
inc
push
add
mov
ret
adc
clc
arpl
dec
test
icebp
push
inc
mov
jae
mov
xchg
jge
jae
sub
ss
add
inc
mov
inc
adc
icebp
int3
mov
das
adc
sub
sahf
push
in
iret
enter
adc
out
or
jecxz
rcl
test
xor
out
cs
jmp
pop
lcall
or
xchg
int
in
adc
insl
cmp
jl
addl
push
sbb
movsb
sbb
xchg
jecxz
daa
pop
mov
fstpl
imul
pop
ds
dec
shl
int
rcll
call
sbb
jmp
or
add
inc
mov
sarb
loope
inc
mov
mov
ret
mov
popf
push
pusha
imul
mov
pop
jmp
ret
out
aam
xchg
ret
sbb
xor
adc
jb
icebp
jbe
push
xchg
xchg
sub
stos
xor
dec
negb
inc
mov
add
add
popa
and
arpl
jl
adc
imul
dec
pusha
test
xchg
sub
into
inc
sbb
dec
ret
jl
cwtl
sub
mov
sti
loopne
and
lret
in
add
push
sub
jb
push
xchg
mov
in
xchg
mov
mov
ret
xor
ja
push
not
fldenv
sbb
adc
mov
cli
jp
inc
mov
leave
dec
adc
fcmovbe
pop
add
decl
aad
out
cmp
mov
mov
sbb
xchg
pop
call
sbb
adc
push
ds
addl
mov
cmp
popa
cwtl
push
inc
daa
add
cmc
fstpt
mov
mov
shl
mov
std
mov
push
add
push
subb
repz
mov
and
flds
jno
mov
cmp
mov
out
xchg
outsb
mov
pop
xchg
mov
shlb
sbb
mov
mov
sar
rcrb
sub
aam
fdivrp
fmul
mov
and
roll
sub
inc
subl
or
inc
pop
call
or
push
test
sbb
sbb
xchg
mov
sti
sbb
insl
insl
fildll
ss
push
mov
pusha
fidivl
or
leave
add
mov
lock
vmovhps
outsb
out
sbb
sti
dec
jo
std
or
push
pushf
cmpsl
idivl
insl
xor
repnz
mov
ss
gs
hlt
adc
or
mov
daa
xorl
popa
xor
inc
lret
adcl
loop
pop
flds
jnp
pop
je
sbb
xchg
pop
pop
adc
pop
mov
adc
fsubrp
pop
mov
dec
push
lods
ja
ljmp
xchg
sub
inc
adc
daa
sbb
xor
icebp
aaa
xchg
sub
mov
lods
dec
jne
shrl
lret
mov
mov
mov
sub
mov
push
fdivrp
rcr
hlt
and
stos
bound
dec
aas
in
jg
mov
mov
repnz
cmp
clc
xor
jmp
pop
mov
mov
rolb
xchg
xor
sub
aaa
pop
jns
pop
stos
in
xor
dec
mov
nop
stc
add
mov
jecxz
lahf
or
adc
les
push
sbb
ret
xor
ljmp
pop
dec
sbb
add
adc
ror
hlt
cs
jg
mov
popa
shl
xlat
aam
push
jg
adc
xor
icebp
mov
out
sbb
sti
or
mov
mov
gs
or
addr16
jg
cld
sub
addb
shl
jmp
outsb
rclb
aaa
mov
nop
dec
fidivl
nop
ret
cmp
lods
xor
and
das
test
sub
jne
scas
ljmp
mov
outsl
add
in
and
std
and
add
xchg
outsl
dec
push
testl
adc
dec
sub
mov
dec
int
cmp
out
jge
enter
insb
mov
push
jecxz
pop
imul
shl
fcoms
mov
inc
jecxz
fisubrl
push
or
enter
xchg
mov
mov
add
mov
adc
add
dec
out
in
nop
call
inc
sahf
mov
scas
data16
addr16
mov
addr16
fistps
call
pushf
fs
lret
cld
mov
push
cmp
pop
cwtl
add
std
xchg
aaa
outsb
xor
bound
jge
test
xchg
pushf
xchg
fadds
repnz
and
mov
fldenv
pop
jns
jmp
pop
insl
sub
aad
enter
mov
mov
mov
mov
jae
fwait
gs
add
sti
ret
sub
push
sbb
ds
mov
in
pop
insl
pop
sar
fs
sbb
sbb
pop
int3
divb
int
fdivr
lds
rorl
addl
int3
stos
fcomps
in
scas
lret
loopne
push
out
jge
mov
enter
mov
mov
mov
fwait
rorb
fisttpll
roll
into
adc
xchg
test
in
push
icebp
cmp
xchg
andl
add
mov
jns
mov
xchg
int
dec
in
ja
push
cld
xor
enter
dec
pop
mov
scas
sub
or
or
pushf
jno
mov
rcr
rclb
shll
and
pushf
pop
ja
or
les
pop
pushf
lods
xor
or
cmp
cli
xor
push
inc
lahf
imul
pop
stc
data16
pushf
jno
lock
arpl
or
adc
xchg
mov
call
or
xchg
out
int3
inc
pop
adc
jmp
push
ret
imul
popf
mov
enter
stos
shl
ja
test
lock
fwait
mov
aas
fistl
bound
jp
sbb
movsb
filds
pop
inc
adc
dec
push
icebp
popf
mov
or
and
sarl
fiadds
aaa
sbb
dec
sub
cmp
cmp
test
imull
adc
ljmp
rolb
pop
xchg
ror
pushf
fbld
jge
ret
repnz
aad
adc
nop
ret
sub
fs
scas
pushl
sbb
adc
ja
mov
iret
jecxz
jo
pop
adc
mov
fstpl
jmp
test
inc
add
add
sbb
cwtl
sahf
pushf
mov
xchg
adc
lret
scas
xchg
sbb
rorb
adc
out
push
sbb
fdivl
jne
outsb
fdivl
ficoms
nop
loopne
and
ss
test
jno
mov
fs
xor
add
das
gs
mov
nop
and
fwait
out
xchg
stos
push
call
stos
mul
push
add
ljmp
or
js
imul
shlb
sbb
fdivrp
out
outsb
mov
cmpsl
mov
dec
and
sbb
f2xm1
fidivrl
sbb
or
js
add
xor
pop
xchg
lods
xchg
fcmovnbe
std
mov
in
ds
mov
mov
shr
pop
cwtl
push
enter
dec
xchg
jae
push
pop
loop
shr
pop
pop
xor
or
xchg
mov
cmp
or
mov
popf
ret
jge
xchg
sbb
mov
cmp
and
push
stos
inc
jb
pop
push
sub
xlat
sti
jle
notl
test
adc
sbb
sub
jno
xchg
cmpb
mov
xor
les
enter
fiadds
add
cs
ljmp
sbb
ds
stc
call
push
clc
mov
xor
aas
adc
or
add
aaa
inc
or
enter
icebp
pop
sub
mov
push
gs
fcomip
loopne
in
sub
mov
inc
dec
push
mov
popa
push
xchg
call
ss
push
mov
std
jae
mov
mov
mov
stos
loopne
xor
jns
xchg
repz
dec
out
out
sti
sti
hlt
jp
hlt
fbld
xchg
xor
push
cmp
jle
in
sub
pop
lea
pushf
xchg
and
ds
add
shl
and
jle
jl
scas
imul
jo
imul
dec
xor
lock
dec
pop
orl
adc
mov
in
cmp
xchg
mov
xor
mov
jne
fcomi
adc
xchg
scas
jg
aam
dec
pop
jmp
lock
lods
mov
imul
icebp
sbb
mov
js
add
pop
adc
sub
mov
sbb
jmp
enter
test
lret
adc
stos
stos
mov
movsl
jle
fs
pop
mov
push
inc
lret
fwait
repnz
jge
adc
adcb
jbe
fisubrl
arpl
and
and
jg
xchg
cs
sbb
inc
pushf
int
iret
push
jns
inc
pop
sti
dec
add
add
pop
jl
push
push
mov
push
lcall
jae
add
movzwl
xor
mov
popa
sub
outsl
xor
inc
test
xchg
hlt
stc
sub
xchg
pop
loop
jmp
mov
popa
sub
cmp
cmp
and
pop
fdivs
push
ja
cmovbe
lea
xor
hlt
sarl
pop
adc
frstor
das
inc
add
fstp
out
xlat
popa
and
ja
imul
xchg
and
je
jp
mov
push
lods
mov
xor
sub
inc
sub
and
mov
leave
cli
dec
mov
or
mov
cli
xor
cmp
add
add
es
lods
sti
cmp
test
jecxz
adc
pop
mov
fdivs
dec
andb
pop
mov
xchg
push
test
cmp
movsb
xor
das
test
adc
imulb
ds
or
mov
in
mov
stos
shll
bound
dec
call
xchg
cmp
sti
decb
outsl
and
cmp
pop
push
pusha
adc
js
ss
and
adcb
movb
cld
cmpsb
jecxz
pop
inc
dec
inc
and
ficoml
out
cwtl
fwait
and
sbb
sub
ljmp
push
lret
sbbl
fmull
cwtl
mov
loope
jge
iret
cmc
lock
lods
mov
jnp
mov
dec
add
repz
fcomip
movsb
cld
arpl
add
sti
shll
push
popl
push
push
jbe
dec
mov
mov
mov
jg
lcall
ret
test
push
xor
push
mov
imul
mov
cmp
mov
mov
or
mov
and
test
popf
insl
pusha
jge
call
arpl
xchg
inc
pop
lock
dec
and
xorb
push
leave
std
adc
sub
imul
arpl
jmp
loop
xor
xor
cmp
outsl
xor
addr16
xor
push
dec
cwtl
cmpsl
das
cmpsl
in
pushf
mov
mov
cmp
jnp
jns
pop
mov
xchg
adc
pushf
push
and
mov
xor
cmp
movsb
xor
sub
hlt
fdivrl
das
inc
adc
add
push
push
popf
test
inc
xor
adc
negb
sub
cmp
push
xchg
mov
jns
andb
out
add
push
mov
jmp
xchg
mov
fnclex
in
sub
xor
mov
jne
xor
dec
shll
pop
jmp
mov
inc
dec
inc
xchg
mov
push
out
sub
mov
xlat
push
in
xor
outsb
pop
imul
add
mov
mov
in
push
mov
adc
cld
add
and
push
enter
cltd
repnz
pop
mov
xlat
outsb
push
ljmp
push
rcrl
cwtl
xchg
loope
cmp
mov
addr16
xor
fcomps
inc
mov
push
mov
pop
movsb
or
or
mov
enter
jo
xchg
enter
std
pusha
adc
loop
pop
cltd
dec
cwtl
cmovbe
inc
push
or
jecxz
test
and
dec
fimuls
lods
push
and
push
inc
je
int3
mov
mov
inc
cmpsb
xor
jns
add
mov
or
jp
cmc
adc
mov
push
push
xchg
sub
mov
mov
popa
inc
jbe
cwtl
mov
mov
fs
ret
mov
sub
cli
pop
xor
sub
scas
xchg
sbb
nop
dec
pop
sub
push
ljmp
mov
call
jbe
push
pop
test
in
stos
push
pop
shlb
jbe,pt
sub
sub
xor
sbb
fistpll
mov
out
shll
aas
mov
js
or
scas
pop
repnz
push
dec
aad
es
push
sub
stos
pop
aam
loopne
test
shr
mov
sbb
test
mov
daa
cmp
xlat
into
mov
xchg
sub
jmp
int
jle
repnz
lea
pop
and
movsb
and
sbb
outsl
sbb
push
icebp
sub
fisubs
xlat
adc
jge
cmp
repnz
push
adc
mov
mov
outsl
lods
cli
and
jle
aas
fldl
xchg
insb
cmp
jmp
rolb
das
lcall
adc
lahf
lret
add
mov
orl
push
sub
loopne
inc
xchg
push
dec
adc
push
xchg
push
mov
scas
xchg
addr16
enter
ret
movsb
mov
mov
fcmovu
push
insl
or
sub
push
xchg
push
cmp
fstl
xor
test
dec
lcall
in
in
pop
xlat
jle
cmp
fs
negl
adc
add
xchg
and
insb
cmp
cmc
xchg
daa
dec
pop
aad
in
sub
xor
stc
cmp
adc
aam
xor
scas
lock
xor
mov
out
lcall
xor
pop
inc
pushf
mov
add
pop
ja
inc
ja
fcomps
mov
enter
scas
iret
mov
add
bswap
stc
sbbl
stos
lahf
ds
push
iret
sahf
fadd
xchg
cmpsl
nop
ljmp
sub
outsl
stos
xchg
mov
or
ret
xor
jecxz
lret
or
xchg
es
pusha
movsl
xor
fucomp
lcall
and
lock
sarl
out
adc
pop
add
ret
mov
adc
fucom
cmp
lds
mov
sub
mov
sahf
jge
enter
clc
mov
sub
call
lcall
dec
in
adc
addr16
jecxz
jp
cmp
fwait
movsb
mov
jo
cmp
pusha
pop
into
push
add
adc
shl
sahf
mov
mov
sbbb
enter
jmp
jmp
push
xchg
pop
es
and
sub
mov
es
push
out
push
jecxz
aas
mov
dec
mov
adc
iret
mov
cmp
or
rcrl
test
and
jmp
sub
fcomp
iret
mov
and
xor
icebp
je
cli
push
es
outsb
pop
jmp
cmp
jne
popa
xor
inc
je
dec
sub
pop
mov
xlat
and
mov
xlat
idiv
adc
call
inc
pop
in
sub
ljmp
add
orl
mov
xor
cmp
inc
add
arpl
or
lcall
or
mov
icebp
fwait
mov
movsb
push
out
rclb
hlt
push
sub
in
inc
xor
jbe
cwtl
repz
test
jnp
les
cltd
test
gs
stos
icebp
dec
push
jg
ss
xchg
jmp
dec
cmpsb
mov
mov
movsb
cmp
xchg
push
out
das
xchg
fucomip
dec
and
push
push
jo
shrl
add
and
push
mov
jg
push
hlt
mov
popf
lret
ret
sbb
cld
xchg
cmpsb
ljmp
pop
loope
or
das
pop
add
out
test
xor
sub
stc
xor
lret
sub
and
vmread
test
jge
fwait
bound
or
ja
pop
ds
repnz
ljmp
ficomps
test
mov
call
sti
mov
sbb
or
lods
in
sub
push
dec
sbb
push
xchg
mov
repnz
sbb
stos
jge
shrl
sub
xor
loop
stos
mov
loopne
inc
or
roll
jle
stc
xor
jnp
fwait
or
loop
mov
cli
pop
sub
lcall
jmp
fcmovb
sub
in
mov
movsl
mov
jmp
inc
sub
aad
shrb
or
mov
repnz
inc
or
cmp
mov
fsubrs
and
xchg
pusha
clc
inc
test
xlat
xchg
insb
ret
ds
cld
xchg
add
sar
cmp
mov
adc
cmp
in
ret
icebp
or
test
mov
mov
xchg
out
outsl
int3
test
xor
sbb
dec
sahf
sbb
lods
or
jle
pop
inc
sbb
gs
movsl
sub
scas
in
push
mov
push
cmp
dec
ja,pt
inc
pop
and
and
jnp
mov
fadds
cmp
lcall
fmull
pop
mov
in
inc
mov
dec
test
int
lds
xchg
jmp
inc
and
daa
dec
push
repnz
push
dec
loope
enter
push
pop
adc
dec
lods
cltd
xchg
push
jecxz
push
cltd
jecxz
xchg
push
pop
add
push
xor
or
sbb
mov
clc
sub
xchg
adc
xchg
xchg
xchg
sub
insb
jb
rcll
fnstenv
xchg
mov
test
arpl
fcoms
add
scas
aas
mov
loope
aam
fstpt
jle
cwtl
inc
jns
mov
jo
pop
je
and
in
fnstenv
xchg
orl
scas
cmp
scas
loopne
jmp
or
pop
push
repnz
adc
dec
push
sbb
and
repz
gs
shlb
mov
add
jmp
mov
je
xor
mov
call
cmc
dec
test
in
das
popf
push
lods
cwtl
jnp
mov
ret
xchg
aas
sub
mov
and
inc
cmpl
mov
pop
iret
push
pop
out
xor
dec
jecxz
push
and
jae
cld
or
sbb
sahf
push
fldenv
add
pop
shl
and
or
jecxz
xchg
ljmp
mov
pop
and
inc
mov
inc
xor
inc
push
inc
inc
or
mov
mov
pop
push
je
jmp
fs
cli
pusha
mov
or
push
jno
jo
or
xchg
adc
lcall
fidivrs
push
lcall
cs
cli
movsl
lret
and
rcll
outsb
add
js
repz
adc
out
mov
negb
repz
repnz
adc
shr
cmp
push
sti
inc
or
shrb
out
mov
out
test
std
pop
test
xlat
fisttps
or
pop
inc
sbb
pop
pop
lahf
xor
sbb
mov
cmc
sbb
xor
popa
mov
jb
cmp
mov
xchg
jmp
lods
or
ja
pop
das
test
sbb
arpl
stc
jp
out
sub
cmp
rol
push
pusha
popa
in
adc
jecxz
push
movsl
pusha
or
xor
imul
cmp
push
and
push
jmp
cs
scas
cmp
lods
mov
sbb
xchg
lahf
inc
lds
fadd
mov
pop
aad
mov
sti
mov
push
es
push
push
lret
into
loopne
inc
into
stos
jbe
ror
clc
jp
fs
std
adc
mov
loopne
stc
xlat
xor
loopne
adc
rcl
mov
mov
dec
push
sub
cmp
lea
aad
lock
dec
mov
ss
pop
sub
push
mov
and
inc
loope
xorb
faddl
add
add
adc
pop
aas
jecxz
cmp
dec
inc
out
das
stos
test
adc
out
inc
jne
jbe
movsl
mov
fdivrs
lea
mov
sahf
fsubs
sbb
fcmovbe
sbb
jecxz
sub
movsb
into
jb
fstpt
insb
cmc
fcomps
mov
push
xor
push
scas
pop
mov
cmpsl
jmp
scas
cmpl
sahf
mov
ret
xor
mov
sti
xchg
cmp
xchg
jb
fldenv
vmovapd
jb
adc
push
addl
adc
fdivl
jp
sub
sub
adc
xchg
jp
movsb
adc
icebp
jle
xlat
jge
inc
adc
iret
dec
mov
aaa
imul
xchg
dec
cwtl
jecxz
lods
das
push
pop
xor
mov
sbb
leave
in
aaa
jo
cmp
fistps
xor
inc
and
adc
or
sarb
ret
pop
repz
and
mov
in
loopne
mov
enter
pusha
repz
cmp
mul
fcmovb
inc
mov
pop
mov
cli
ret
inc
xor
stos
pusha
push
ja
mov
xor
ljmp
mov
das
jle
cltd
lock
popf
cltd
inc
sbb
add
ss
ja
mov
daa
sub
adc
testl
lock
or
mov
addb
adc
mov
addr16
xchg
cld
adc
mov
cmp
push
int3
popf
pop
dec
test
lods
push
pop
dec
push
sub
adc
pop
shlb
mov
sub
xchg
jl
push
ffreep
xor
adc
mov
cmp
cmp
sahf
cmp
pop
je
arpl
cmp
int
inc
push
xchg
test
mov
fcompl
js
pushf
add
mov
adc
pop
add
mov
divb
mov
or
imul
inc
xchg
repnz
add
sahf
push
adc
dec
mov
pop
imulb
sub
mov
adc
mov
push
cli
jbe
push
dec
mov
ss
cmp
jle
aad
and
xchg
pop
cmp
mov
mov
cltd
mov
aas
out
or
push
insb
int3
mov
add
rorl
push
mov
push
lods
sahf
sahf
call
and
outsl
jecxz
ficoml
mov
mov
pop
mov
nop
sahf
imul
mov
sbb
hlt
mov
aad
add
pushf
push
jecxz
dec
mov
lcall
pop
dec
in
pop
or
shrb
and
and
jle
lret
imul
mov
cltd
jo
push
or
jo
shlb
mov
shlb
inc
in
andb
test
sti
mov
test
fcmovu
mov
loopne
scas
ljmp
or
or
js
insb
push
aas
pop
pop
dec
into
inc
cwtl
push
hlt
popf
and
adc
sub
sbb
pusha
jno
sbb
push
mov
outsl
dec
loope
addl
fcmovnb
clc
pop
outsb
sbb
jge
out
mov
inc
mov
inc
push
mov
pop
pop
pop
jl
sbb
andl
mov
inc
sbb
mov
lods
jl
clc
cltd
and
add
xchg
pop
out
jg
add
push
insb
scas
lods
inc
lahf
inc
sub
cli
pusha
mov
leave
nop
pop
pop
mov
aas
les
xchg
nop
sub
jbe
scas
js
lods
pop
push
xorl
lds
scas
add
cltd
sbb
mov
mov
loope
imul
xor
hlt
cmc
mov
xlat
add
in
imul
aas
pop
sbb
addr16
add
in
dec
xor
xchg
add
or
sbb
dec
dec
test
cvttps2pi
jb
sbb
mov
dec
lcall
div
scas
jmp
ja
aam
call
ret
adc
or
cltd
mov
hlt
clc
push
add
dec
xchg
js
popa
bound
mov
jnp
pop
cmpsb
notl
out
mov
adc
imul
js
mov
adc
pop
es
push
clc
in
xbegin
cmpsb
sbb
call
icebp
inc
stos
inc
push
call
repnz
mov
inc
inc
and
mov
js
pop
int
fwait
leave
insb
dec
fs
cltd
out
outsl
insb
pop
xchg
dec
outsb
push
dec
pop
fdivs
out
js
add
xchg
xor
sbb
dec
dec
into
cmp
pop
mov
adc
outsl
add
or
dec
jns
test
hlt
push
sub
push
mov
pop
and
cld
aas
leave
xchg
leave
bound
xlat
outsl
fmuls
mov
push
sbb
test
add
cmp
mov
pop
leave
and
pushf
outsl
arpl
clc
loop
inc
enter
mov
dec
mov
mov
xor
add
lret
lea
mov
insb
notb
incl
sub
lret
jmp
pop
fwait
add
xchg
push
xor
es
dec
out
mov
andb
xor
or
xchg
data16
fdivrs
nop
adc
dec
lret
in
mov
popf
sbb
js
mov
cwtl
mov
dec
or
dec
rclb
pop
mov
mov
data16
icebp
sbb
add
xor
loope
es
push
sub
bound
iret
adcb
push
dec
sub
mov
sbb
push
inc
push
mov
inc
dec
inc
push
ret
fs
or
int3
orb
push
push
xor
mov
movsl
ss
and
xor
adc
imul
inc
jl
adc
popa
subl
mov
aas
testb
cmp
add
adc
clc
add
push
push
insb
push
xchg
mov
jns
rorl
push
js
push
add
loop
xchg
add
in
mov
inc
pop
mov
jae
popa
push
xor
bound
mov
adc
fs
cmp
fstps
stos
xchg
ja
mov
mov
mov
add
jl
push
inc
and
lcall
and
out
fiadds
pop
cmp
shll
stos
add
jns
and
ret
push
out
outsb
adc
xchg
mov
xchg
dec
arpl
jl
fldl
pushf
cltd
jb
xchg
sbb
div
subb
adc
pop
shlb
add
iret
jmp
nop/reserved
cmp
fisttpl
aaa
add
adc
test
stos
mov
jecxz
outsl
mov
cmp
popa
incb
xchg
outsl
inc
add
shlb
outsl
sub
dec
add
mov
dec
inc
pop
jb
push
aam
bound
int3
pusha
ljmp
sarb
insl
or
jnp
divps
aas
push
mov
cmp
mov
inc
fbld
xor
jecxz
cmpsl
nop
push
pop
orl
sub
gs
lods
cmpsb
aad
adc
xchg
or
aam
insl
add
pop
add
mov
ja
push
sbb
inc
mov
outsl
sub
out
test
sbb
cwtl
xchg
sbb
cmp
mov
dec
outsl
push
js
inc
push
js
cmpsb
push
outsb
and
bndstx
pop
clc
cltd
lds
xchg
ljmp
inc
popa
cli
ret
jnp
sub
mov
sbb
add
mov
aam
cmc
pop
mov
ja
imul
mov
pop
adc
push
fsubrl
fistpl
sbbb
mov
leave
fnstsw
lret
xchg
loopne
gs
adc
lahf
out
ror
pop
nop
push
pop
xlat
or
mov
std
hlt
loopne
xor
ret
movsl
add
xchg
sti
pop
sti
jl
lea
lret
mov
lret
test
dec
imul
cs
mov
xchg
das
int
mov
xchg
nop
pop
loop
ret
loop
bound
jne
push
aam
or
xchg
sbb
stc
and
inc
adc
sarl
adc
cmpsl
iret
adcl
push
jne
xchg
repnz
xchg
mov
mov
aad
jle
shrb
jno
popf
lahf
int
adcl
jbe
scas
add
cmp
add
pop
jae
popf
ds
sbb
aad
shrb
jp
dec
out
fildll
ljmp
add
cmp
lahf
sub
push
mov
dec
xchg
add
shlb
inc
xor
dec
insl
cmp
sahf
popf
es
inc
mov
mov
popf
in
fucom
cwtl
insl
xor
js
dec
push
inc
lret
test
sbb
adc
test
ret
int3
jmp
pushf
mov
movsb
xor
xlat
aaa
xchg
pushf
out
or
add
and
aas
popa
ljmp
xchg
in
test
push
jne
lods
into
cld
adc
mov
xchg
mov
xchg
scas
fcoms
in
push
rcrl
xchg
xchg
pop
mov
jne
loope
fsubl
push
jecxz
jp
and
mov
call
and
push
sbb
mov
sub
cvtdq2ps
mov
or
jb
add
pushf
cmp
sbb
dec
dec
sub
mov
add
sbb
mov
jmp
xor
xlat
mov
loopne
dec
repz
push
add
dec
mov
add
mov
outsl
add
mov
adc
jns
adc
andnps
push
pop
frstor
sti
dec
es
shlb
ret
pop
pop
push
cwtl
mov
lods
push
mov
loop
iret
sbb
pop
dec
call
mov
lcall
lret
sbb
xchg
xchg
scas
lock
xor
fsubr
test
add
push
mov
inc
dec
mov
loopne
das
imul
jb
xor
lret
push
jge
repnz
test
int
sbb
lcall
xchg
lret
xor
imul
add
sbb
orb
jnp
pop
fisttps
jle
loopne
aad
mov
movsb
out
mulb
fstps
push
add
mov
aad
hlt
sub
jmp
pop
fsubl
adc
les
adc
cmpsl
or
decb
jecxz
xchg
or
repz
cmp
sub
cmp
shrb
outsb
ds
subl
popf
pushl
and
cmp
xchg
loop
loopne
cmpsl
inc
in
sbb
sub
stc
subb
popa
or
or
stos
cmp
xchg
ds
adc
jbe
mov
ficoms
clc
mov
lea
int
cmp
mov
sbb
pop
jp
les
sbb
add
jno
dec
ss
ja
test
gs
ds
in
push
fdiv
xchg
enter
out
adc
arpl
in
data16
xchg
cmp
pop
pusha
popa
stos
push
and
fbld
movsl
adc
repnz
aaa
jbe
jae
clc
xchg
xor
sub
cltd
lods
and
fildl
mov
scas
or
clc
add
and
lds
daa
dec
jmp
sti
xor
dec
imul
xor
mov
arpl
imul
dec
mov
add
cmp
pminsw
jp
mov
sub
pop
in
lods
push
mov
roll
mov
sbb
mov
cmp
sub
int3
loop
inc
push
fidivrl
push
adc
pop
jecxz
idivl
mov
add
and
mov
mov
lahf
iret
mov
sub
sbb
lock
and
sbb
insl
bound
pop
repnz
push
inc
adc
pop
imul
pop
mov
scas
arpl
and
mov
or
out
mov
mov
ss
adc
add
sahf
sub
aaa
adc
pop
or
repz
mov
inc
insb
adc
sub
mov
xchg
jge
repnz
add
test
pop
aad
aam
stos
cltd
popa
and
stos
xchg
shl
sub
movsb
std
int3
inc
hlt
cmpl
fsubr
dec
loope
cltd
push
xchg
fdivs
mov
pop
adcb
jns
enter
xchg
call
xor
cmpsb
addr16
push
sub
push
xor
jg
mov
sbb
xchg
add
adcb
pusha
and
pop
sbb
nop
jmp
sub
pop
les
int3
das
adc
mov
add
out
mov
mov
cmp
add
mov
xlat
sarb
cs
loope
and
jno
push
fsubl
call
loope
mov
mov
cmpsb
iret
inc
mov
sbb
inc
cwtl
pop
jnp
pop
dec
ds
mov
es
in
notb
test
adc
int3
or
aaa
sbb
scas
add
aam
pusha
loopne
bound
shl
rclb
stos
enter
and
jl
sarb
xor
push
xchg
mov
jb
cmp
jnp
jl
dec
pushf
or
repz
sarl
ret
push
sbb
imul
clc
fimuls
mov
loopne
sbb
repnz
xchg
add
sub
iret
push
pop
mov
mov
push
and
roll
mov
push
push
outsb
lods
jecxz
movsb
xbegin
dec
add
sub
sub
and
in
lods
sbb
mov
je
sbb
xchg
xchg
out
fisttps
icebp
out
gs
test
mov
fs
dec
inc
test
pop
inc
dec
mov
xchg
pusha
add
dec
aad
and
or
mov
into
out
jmp
sbb
test
cmc
or
xchg
push
pop
cltd
cmp
les
sub
mov
fmulp
push
fisttpll
cmpsl
or
push
jle
mov
leave
pop
pop
mov
sbb
xchg
sub
addr16
int
cli
add
sbb
sub
test
and
add
jae
or
testb
gs
jbe
sbb
mov
push
cmp
sbb
sub
pop
mov
mov
fs
jp
cli
mov
cmp
cld
jp
ljmp
movsl
sbb
cs
testb
fistpl
xorl
mov
push
loop
popa
rcrl
add
sbb
das
or
mov
loope
jmp
aam
xor
jecxz
push
sbb
in
add
sub
idiv
sub
jbe
ret
adc
clc
cwtl
push
push
pop
lods
scas
xchg
inc
and
add
mov
mov
and
cltd
add
cmc
test
aad
mov
fiadds
shl
jns
sub
outsl
pop
sub
fcom
jnp
jns
fidivrs
adc
shrb
rcl
sti
dec
push
xchg
lods
jne
push
out
addr16
ljmp
pop
aaa
jle
mov
cmp
orb
outsb
pop
push
pop
vpsrld
sbb
dec
cli
inc
sbb
sub
mov
sub
jmp
sti
xor
push
outsl
es
lock
ljmp
outsl
inc
push
das
mov
shrl
pop
pop
push
pop
jno
xchg
xchg
sbb
xlat
or
mov
fwait
inc
nopl
into
jge
imul
enter
cltd
data16
jns
int
fnstenv
out
ret
rorb
rolb
jecxz
jmp
add
mov
sbb
pusha
pop
lea
stc
outsb
dec
lahf
gs
int
jo
dec
inc
add
push
ss
push
pop
cli
dec
jmp
gs
adc
decl
lret
jle
mov
shl
out
inc
jo
xchg
cltd
movsb
adc
mov
and
mov
popf
dec
mov
jae
mov
cmpsl
loopne
rolb
mov
orb
into
cmp
loope
jecxz
sub
bound
fisubs
fidivs
repz
xchg
mov
or
xchg
fiaddl
pop
mov
dec
sbb
mov
sub
and
jbe
cmp
cmc
adc
or
dec
inc
ret
mov
adc
imul
jp
mov
xchg
in
scas
das
xor
lea
pop
in
rolb
pop
cmc
imull
pop
jg
test
std
sar
out
les
int
inc
mov
mov
xor
xor
insb
jge
lcall
xor
mov
subb
inc
mov
rolb
cli
jmp
pop
ljmp
sahf
in
fs
lahf
jecxz
jg
cwtl
stos
and
mov
sbb
fs
add
lods
out
jnp
sbb
nop
mov
movsl
dec
mov
fistps
jge
jg
out
inc
pop
outsl
adc
dec
or
mov
or
bound
push
jno
sub
dec
idivl
test
mov
add
movsl
push
inc
or
push
inc
fwait
mov
iret
mov
mov
xor
in
adc
sub
ljmp
dec
pop
xchg
jbe
out
nop
aas
mov
cmp
mov
in
popf
mov
adc
mov
sysenter
xchg
push
pop
ret
jbe
ljmp
inc
xchg
movb
inc
and
leave
jge
inc
xchg
hlt
repz
jg
movsb
ret
and
aas
arpl
sbb
test
sarb
test
aam
or
pop
mov
mov
in
hlt
mov
push
pop
cs
bound
pop
cltd
faddl
test
rcrl
out
jle
cs
jae
xchg
rcrb
push
aad
inc
fwait
mov
xchg
inc
jne
mov
jae
xchg
and
xchg
jb
sub
into
sub
mov
lcall
addr16
adc
cmc
and
daa
rcrb
aad
adc
add
mov
divl
aaa
das
xchg
loope
add
cwtl
dec
adc
out
shl
jle
mov
ds
scas
jecxz
out
dec
xor
mov
push
aam
xorl
inc
or
inc
and
cmp
xchg
ds
xor
pop
mov
sub
mov
push
loopne
cmp
jge
mov
or
ds
mov
iret
lcall
adc
and
inc
fadds
cmpsb
roll
cli
cmp
into
cltd
mov
mov
subl
sub
sub
xchg
rorl
sub
out
inc
pop
mov
daa
cld
or
mov
pop
sub
popl
adc
mov
movsb
loopne
and
ret
mov
push
adc
fadd
ss
nop
cltd
stos
idivb
in
mov
stos
or
iret
test
rorb
sbbl
sub
mov
enter
vfmadd231pd
add
cld
push
sub
push
jl
scas
add
inc
fmul
aas
es
mov
sbb
mov
and
imul
xchg
lock
xlat
mov
mov
filds
stc
gs
xchg
mov
insl
out
out
xor
icebp
lds
jmp
add
jne
ljmp
paddq
mov
leave
inc
mov
stos
popa
xchg
loopne
loopne
mov
mov
andb
movsb
loopne
jl
xchg
sub
pushf
push
rcrb
mov
imul
aas
hlt
pop
push
and
inc
pop
fistpl
cld
popf
mov
lds
icebp
and
jnp
cli
push
adc
addr16
mov
fsts
sub
xlat
add
loop
cmp
xchg
repz
pop
push
pop
lods
jae
ret
loopne
mov
cmpsb
push
add
mov
xchg
and
sub
cltd
movsb
imul
fisubrl
xor
popf
inc
dec
lret
add
repnz
mov
in
fnstsw
test
ds
xchg
movsb
cltd
loop
mov
dec
sub
dec
jg
push
xor
push
daa
push
rclb
jo
mov
push
outsb
int3
sbb
int3
xor
mov
sbb
ret
jecxz
pop
xchg
add
cli
data16
cmp
lods
iret
xor
mov
sub
xchg
aam
jbe
ret
xor
call
jnp
pop
in
or
pop
test
scas
cmp
out
fwait
mov
xor
je
adc
dec
xchg
add
inc
aaa
xorl
push
or
xchg
mov
fdivrs
test
scas
push
test
outsl
inc
in
cmp
out
stc
sbb
testl
xor
mov
ds
cmpsb
jle
es
inc
cmp
mov
mov
loopne
xor
fimuls
fstpt
icebp
scas
sbb
sbb
cmp
cmp
shll
outsb
jmp
outsb
jle
fldenv
outsl
mov
lret
mov
clc
dec
push
mov
and
repnz
aam
jle
inc
ret
push
scas
cmp
in
ret
xor
mov
std
inc
mov
push
cmp
dec
lods
ret
jle
mov
mov
sbb
sbb
test
push
inc
out
mov
sub
dec
insl
out
mov
dec
dec
dec
adc
and
sbb
cli
ror
adc
testb
fimuls
mov
mov
pop
loopne
xchg
jnp
jle
inc
mov
lods
dec
dec
loope
xchg
add
jnp
xor
cmp
cwtl
popf
adc
and
inc
stc
cld
add
cmp
inc
or
ja
or
jle
adc
and
lahf
fstpt
push
stos
iret
jns
push
out
add
mov
pop
mov
or
fwait
pop
mov
xor
dec
imul
sbb
enter
cmc
xchg
sbb
ret
push
cwtl
bound
jbe
dec
arpl
mov
push
movsb
icebp
mov
and
xchg
cmc
into
mov
dec
mov
xchg
push
add
and
and
or
dec
lock
insl
sahf
sbb
xchg
push
call
push
adcl
pop
in
xor
aam
lahf
jnp
loopne
lea
and
jmp
out
out
ja
or
xor
adc
mov
dec
mov
fidivrs
cmp
cli
fsts
mov
lcall
fcoml
jne
fwait
or
test
sbb
mov
sbb
fisubrl
pop
xor
dec
adc
sbb
dec
mov
aam
dec
movsl
lcall
dec
ljmp
cmc
outsb
daa
call
mov
dec
pop
movsb
and
dec
and
fwait
pop
das
mov
sarb
std
aad
daa
fnsave
and
jg
and
adc
mov
sub
inc
mov
dec
lahf
test
lcall
fsubrs
inc
stos
push
in
jp
ffree
pop
flds
mov
js
inc
push
pop
xchg
pop
popa
xchg
mov
dec
jnp
xchg
dec
je
addr16
das
repnz
outsb
cld
sbb
ret
iret
xor
movsl
push
addr16
lahf
xchg
fwait
hlt
retw
lahf
out
test
add
mov
js
das
fidivs
xchg
hlt
mov
mov
int
pop
mov
dec
mov
mov
lahf
inc
dec
inc
leave
repnz
pop
xchg
jb
mov
cmpsl
cmpsl
fldt
adc
jns
repz
cli
mov
push
push
gs
pop
ja
clc
mov
xor
pop
xor
daa
insl
jecxz
adc
jge
mov
lret
jp
jg
pop
movsb
lahf
fwait
jns
and
iret
and
lds
imul
scas
arpl
xchg
and
xchg
in
lcall
jb
mov
test
aas
scas
xchg
add
pop
ja
test
fsubs
sub
ljmp
pop
xchg
out
filds
ret
jg
push
sarb
xchg
push
cltd
les
int
stos
repnz
movl
movsb
push
mov
stos
gs
pop
inc
sbb
enter
jl
mov
xor
sbb
in
xor
jl
ljmp
sbb
mov
ret
movl
adc
inc
flds
sub
ljmp
push
and
jecxz
sbb
push
pop
inc
pop
rorb
out
loopne
addb
lret
cwtl
mov
stc
into
pop
bound
jno
ficomps
popf
mov
in
jnp
pop
das
xor
jge
sub
xor
push
ds
lret
jmp
xor
adc
or
jne
add
mov
or
mov
fs
dec
dec
outsb
je
mov
xchg
out
inc
pusha
inc
mov
sbb
icebp
pop
or
pop
inc
mov
shl
or
testb
lcall
xchg
bound
lahf
xchg
flds
enter
jl
call
stc
xchg
sahf
or
mov
or
out
ret
addr16
inc
mov
adc
inc
push
pop
cli
pop
mov
xchg
cmc
lret
sbb
cmpb
sbb
jne
fwait
push
mov
push
lods
fistpl
xor
xchg
pop
jnp
cmp
popa
push
mov
and
cmp
shlb
pop
scas
mov
mov
push
and
cmp
or
ja
mov
mov
xor
fld
mov
mov
push
dec
test
in
xchg
pusha
lret
bound
fsubrs
test
int
mov
or
pop
push
inc
mov
mov
lcall
push
cmp
scas
add
shll
fdivrl
push
xchg
xor
inc
xchg
dec
stc
pop
xlat
popf
lds
push
movsl
or
pushf
jg
jle
fcompl
pop
jle
xor
mov
mov
aaa
mov
sbb
rorb
push
jnp
in
mov
push
add
rolb
cmovb
pop
mov
mov
clc
lret
mov
loope
lock
cltd
add
and
dec
imul
dec
cmp
sbb
mov
mov
out
xchg
inc
test
into
icebp
inc
mov
adc
mov
inc
and
jle
outsb
movsb
mov
and
mov
push
ljmp
stc
add
sub
dec
lods
mov
mov
sbbl
lret
or
hlt
jp
xorb
fnstsw
sub
call
pop
pop
xchg
adc
test
aad
push
loope
bound
or
rorb
movsl
ficoml
hlt
push
faddl
mov
cmp
xor
cmp
lock
sub
test
sub
lods
aas
sar
ja
iret
and
fidivrl
popa
aad
jl
lea
xor
movsb
fs
pop
push
hlt
xor
mov
jl
std
push
sub
int3
inc
rorb
outsl
mov
and
dec
popa
outsb
js
shr
cmc
fwait
mov
pushf
and
stc
xchg
dec
aaa
and
cmp
leave
add
jno
aad
lea
sub
adc
sbb
pop
dec
dec
insl
test
enter
in
jle
test
insl
cmp
aam
aam
out
in
dec
pusha
mov
or
xchg
inc
lea
xchg
mov
pop
ja
insl
in
xor
mov
int
movsl
xor
sub
fcmovne
in
sti
inc
into
jp
notb
xor
pusha
dec
or
mov
cmp
sbb
test
repz
mov
or
sub
dec
cmp
ljmp
or
lahf
cmp
stos
fcmovnbe
frstor
inc
jnp
mov
sub
lods
imul
mov
cmc
push
push
popf
lock
test
fwait
aas
pop
mov
sub
jne
jp
jbe
push
sub
clc
mov
jae
cmp
sti
inc
pop
jno
dec
xor
jg
imul
adc
lods
in
outsb
lock
pop
movsb
sahf
into
shll
lock
push
daa
pop
mov
xor
adc
pop
push
rolb
jl
test
dec
lcall
cltd
out
test
insl
les
outsb
out
xor
popa
sub
int3
and
lods
push
jp
test
or
mov
and
popf
sub
jno
xor
aas
or
fbld
add
andl
push
pop
ss
push
pop
dec
sub
and
or
fwait
mov
mov
cmp
lcall
or
pop
out
lods
enter
or
sub
imul
in
push
jp
js
push
test
lret
mov
in
mov
icebp
jae
test
push
lods
and
stos
pushf
and
ficompl
adc
xchg
push
popa
inc
mov
jno
and
mov
push
enter
or
ljmp
inc
cmpsl
loopne
xor
sahf
inc
out
xchg
cmp
cmp
adc
sub
addps
imul
xor
lods
push
ficoml
jbe
test
pop
mov
cli
les
jae
sub
out
inc
and
les
mov
movsb
nop
sahf
fsubr
pop
sub
mov
jmp
aam
inc
cltd
nop
rol
and
cmp
sbb
sbb
jo
xchg
and
cld
out
fdiv
jno
inc
or
jne
arpl
sbb
int
cmp
lock
inc
out
xor
inc
jbe
inc
in
cmp
dec
cmc
mov
mov
push
add
pop
iret
scas
jl
mov
outsl
mov
imul
mov
xchg
lods
je
jge
es
xchg
in
or
sti
push
neg
add
and
adc
adc
test
aad
daa
cwtl
sub
adc
dec
je
repnz
mov
insl
fldl
xor
leave
mov
jo
pop
add
jo
jae
popf
inc
popf
arpl
mov
inc
sub
cmpsb
sub
addl
rcrb
les
fidivl
xchg
jle
dec
jnp
imul
mov
cld
dec
imul
lcall
add
ja
mov
lods
xchg
mov
dec
or
outsl
lods
add
mov
sbb
cmpsb
sub
sarl
ljmp
mov
outsb
xor
hlt
lods
mulb
into
mov
dec
xor
pop
push
sub
adcl
push
inc
sub
cmp
insl
mov
cli
cmc
clc
jp
pop
pop
popl
std
ret
and
pop
mov
insl
orl
andb
or
loop
jle
test
fiaddl
sbb
add
xchg
push
mov
xor
jl
cmc
mov
jb
inc
cs
enter
cmp
pop
in
orb
ja
outsl
dec
sbb
xchg
mov
jge
cltd
xor
adc
in
and
lds
mov
push
ret
and
and
jge
loop
jne
out
xor
out
and
inc
pop
jl
xor
loopne
enter
cs
jne,pt
pminsw
sahf
adc
cs
dec
addr16
bound
out
out
inc
enter
bound
fnsave
incb
into
xchg
push
xor
xchg
cmovns
bound
ja
ljmp
fildl
inc
and
pop
fwait
pop
sub
pop
cmpsl
in
or
ja
pop
xchg
repnz
mov
mov
pop
in
pusha
sbb
ret
and
sub
in
pop
insl
inc
mov
loope
push
push
xchg
call
jmp
mov
data16
jmp
cmp
adc
xchg
imull
jne
jmp
iret
mov
adc
mov
xchg
popa
nop
dec
flds
mov
lea
ds
mov
jo
test
int
pop
xor
les
mov
loopne
adc
insb
test
loopne
out
lret
jle
push
repnz
icebp
pop
cmp
dec
push
push
xchg
sarl
sahf
cmp
cmpsl
adc
pop
sub
inc
in
mov
fdivl
scas
adc
jo
dec
mov
cmc
jle
pop
push
ficompl
in
cmp
les
je
arpl
pop
call
stc
mov
add
loopne
lahf
leave
mov
add
cmc
outsb
and
ret
data16
sbb
xchg
es
cwtl
mov
sbb
mov
adc
cmp
stos
fsubrs
scas
mov
bound
fidivrs
bound
xchg
sub
or
push
mov
mov
aam
insb
mov
rorl
mov
xorb
lock
rcll
mov
mov
mov
sarb
pop
dec
in
cmp
lock
in
mov
cmc
frstor
mov
xchg
aas
shl
testb
or
mov
mov
jg
dec
mov
test
xlat
in
cmp
cs
jnp
mov
in
dec
into
mov
cmp
stc
xchg
xchg
sbb
loope
popf
lods
dec
fnstenv
fstl
lcall
jmp
inc
mov
test
adc
jp
add
jnp
add
mov
in
das
inc
and
sarb
shrb
imul
movsl
mov
xchg
mov
sti
je
movsl
popf
in
cmc
xchg
xor
testb
pop
je
add
cmc
push
jne
sub
xor
arpl
out
popa
xchg
mov
repz
push
push
pop
adc
icebp
mov
fcoml
xchg
xor
inc
or
pop
mov
sahf
cmpsb
lret
out
sbb
adc
repz
rcrl
pop
sarb
mov
loopne
add
adc
jle
jb
fistpl
dec
xchg
pusha
sbb
cmc
cwtl
cwtl
add
sub
test
mov
add
add
sbb
xor
iret
clc
adc
std
push
dec
test
push
ljmp
cmpb
scas
pop
gs
mov
mov
shl
pop
add
adc
rcll
jge
xchg
xchg
loopne
fcoms
lods
push
icebp
xchg
xor
ret
or
cwtl
dec
cmp
inc
sub
out
jb
mov
mov
fsubrl
shrl
mov
lock
mov
cwtl
jecxz
insb
nop
or
jne
iret
rorb
jb
pop
mov
push
sub
aaa
push
outsb
lock
pop
inc
lea
cmp
sub
das
sbbl
scas
adc
fdivrl
xchg
cwtl
add
icebp
cmpsl
ljmp
test
inc
adcb
jp
sub
mov
enter
cwtl
pop
loope
mov
push
iret
jg
leave
adc
add
inc
adc
xchg
mov
jecxz
push
mov
ret
xor
jae
xchg
dec
icebp
jb
into
jmp
rcl
cmp
fs
add
sub
xchg
je
dec
sbb
adc
mov
sub
xor
fistpl
mov
add
enter
mov
test
dec
cltd
jae
roll
into
xor
les
and
xchg
fdivs
mov
xor
hlt
sub
lea
xor
cs
xchg
rorb
iret
dec
icebp
xor
mov
sub
nop
push
out
jns
jmp
mov
cmpsl
jmp
jl
dec
push
inc
fdivl
mov
mov
sti
push
loope
sti
mov
sahf
mov
jg
popa
and
imul
add
and
movsl
leave
push
mov
lret
xchg
pop
sub
add
insb
push
dec
loope
sarl
ja
or
xchg
and
dec
adc
es
dec
cmp
cwtl
push
jns
cli
daa
bound
xchg
and
or
sbb
dec
popf
pop
jb
movsb
inc
pop
and
fidivrl
sub
push
mov
lcall
adc
add
pop
outsb
cmpb
mov
dec
xchg
jmp
inc
mov
xchg
out
jo
roll
fstl
mov
outsl
mov
std
fnstcw
cmp
xchg
aad
std
movsb
imulb
or
or
adc
aam
in
call
cs
xlat
xor
mov
inc
iret
add
or
aad
sbb
lret
lret
adc
sub
ljmp
fwait
mov
jg
sbb
fisttpl
movsl
movsb
lahf
das
jo
dec
jmp
cs
cmp
mov
clc
dec
movsb
xchg
ds
cmp
je
push
adc
dec
shlb
xlat
mov
shlb
ljmp
jp
lcall
fldl
dec
lret
push
mov
clc
jg
jae
xor
add
mov
cmpsb
jle
lea
pusha
dec
cwtl
imul
jl
dec
out
inc
popf
imul
nop
xchg
nop
stc
xchg
mov
int3
rolb
stos
sti
jmp
rorb
push
in
repnz
adc
lods
jecxz
dec
in
or
mov
jae
mov
les
insl
cltd
imul
mov
fistl
or
cld
lods
aad
inc
xchg
push
out
sbb
push
insl
gs
ror
addr16
es
es
mov
cmpsl
fildl
lods
xchg
in
mov
int3
fstl
scas
sub
push
inc
inc
mov
icebp
add
and
movb
out
stos
jbe
sbb
and
push
xor
ljmp
inc
aam
rcrl
xor
add
int
cmp
sub
mov
imul
push
lods
mov
shll
inc
loopne
mov
add
pop
dec
mov
mov
cmp
push
cmpsl
data16
icebp
cld
loop
fcmovne
adc
pusha
xor
test
addr16
xchg
scas
push
jle
fsubp
dec
leave
dec
xchg
xchg
insl
lea
test
outsb
orb
dec
sti
cmc
push
mov
stos
addl
xor
jmp
repz
sub
gs
roll
imul
dec
repz
xlat
add
ret
jg
pop
fnstcw
pop
jg
push
sbb
js
sub
pop
jge
out
mov
popf
mov
mov
inc
int
outsl
xorl
push
cmpsb
push
cmp
mov
or
insl
inc
cmp
iret
jle
out
stos
or
inc
pop
xchg
imul
sbb
cmp
pop
jl
dec
dec
aad
das
imul
xchg
pop
mov
ret
aam
add
arpl
jg
test
jmp
outsl
xchg
sbb
sbb
and
stos
mov
outsl
sarl
pop
pop
add
out
scas
cmpsl
pusha
je
arpl
dec
fwait
add
sbb
pop
mov
cmpsb
movsl
dec
lret
out
push
das
inc
and
idivl
andb
dec
jne
mov
loop
mov
xor
mov
lea
scas
ss
outsl
stos
rol
dec
mov
xchg
sbb
stos
mov
out
les
mov
inc
pop
xchg
and
sub
sbb
pop
lods
inc
pop
int3
mov
xlat
dec
sbb
xchg
loopne
and
nop
pusha
in
stc
push
xor
lds
or
xchg
and
push
mov
push
adc
mov
inc
sti
cmp
xchg
clc
repnz
into
cltd
pop
mov
shll
repnz
dec
insb
je
adc
jecxz
push
jo
jg
xchg
loope
je
mov
cmp
and
mov
lret
adc
pop
and
into
sub
cli
cld
sbb
mov
out
adc
jl
repnz
mov
cmp
inc
mov
or
sar
cmp
jl
pushf
mov
mov
add
out
sub
movsw
je
pop
int3
add
ds
add
push
xor
pop
push
in
repz
push
fmulp
xor
stos
push
outsl
sbb
jp
mov
xchg
int3
sub
adc
jl
cmp
shrb
push
xchg
xor
and
das
xlat
xchg
push
scas
ror
lea
pop
sbb
stc
rorb
push
or
xchg
ret
jbe
mov
mov
mov
jge
fs
fbld
jbe
cmp
in
imul
lds
push
dec
xchg
sahf
outsl
xchg
pusha
push
sti
cmpsl
push
sub
adc
aam
pop
jl
lea
mov
cmp
insl
dec
and
in
pusha
adc
xor
xchg
sub
jne
pop
mov
sarb
or
and
pop
repz
mov
popa
fstp
aaa
in
repnz
cmpsl
inc
or
mov
mov
adc
mov
xor
loop
jmp
inc
fs
pop
xor
lret
mov
adc
test
inc
imul
arpl
ss
js
add
sbb
add
sub
sub
mov
cmpsl
push
in
dec
mov
adc
cmpsb
test
mov
dec
mov
pop
and
in
inc
clc
push
dec
push
daa
pop
cwtl
inc
pop
or
add
flds
mov
out
pushf
call
lcall
xchg
push
ret
jbe,pt
xchg
and
lods
adc
rclb
addr16
mov
sub
add
fdiv
xchg
jmp
mov
rdpmc
or
stos
test
inc
cmp
adc
adc
sub
cli
hlt
xchg
push
into
in
fwait
les
jg
or
scas
or
adc
imul
int
stc
push
push
push
sub
sar
insl
ljmp
ret
hlt
repnz
sbb
test
push
jmp
lahf
lods
rep
stos
aam
lods
mov
bound
xchg
stos
xchg
adc
sub
jnp
int
and
aaa
pop
xor
cwtl
xchg
lahf
or
aaa
daa
out
sub
popa
mov
shll
int
jno
add
popa
std
xchg
imul
inc
and
pop
addb
out
jb
shl
scas
and
incl
mov
xchg
mov
out
jo
xor
out
push
mov
cmpsb
inc
cld
inc
xor
mov
psubb
pop
mov
sbb
and
sbb
lods
cmp
stc
cli
out
add
pop
mov
dec
popa
or
scas
pop
cmpsb
insb
mov
adc
xor
sub
data16
fs
mov
call
push
pop
aad
xchg
inc
imul
inc
sahf
mov
test
call
jecxz
jo
mov
jns
popf
out
mov
lret
out
add
imul
cli
mov
aaa
ds
mov
pop
lods
movsb
inc
mov
ja
sub
outsb
xor
jge
adc
sbb
adc
cmc
js
xchg
enter
jo
dec
out
imul
xlat
xor
dec
or
mov
adc
fsts
inc
jno
lock
lds
out
pop
and
daa
mov
jbe
leave
in
test
lea
ret
xchg
cmp
or
decl
hlt
out
and
cmp
inc
xchg
imul
jne
fdivrs
sbb
jnp
jns
dec
cmp
mov
lret
pop
push
adc
mov
std
inc
loope
fld
inc
lods
xor
cmp
pushf
mov
xchg
xchg
arpl
shll
pop
int
xchg
mov
cmp
push
test
dec
aad
sub
xor
daa
gs
sbb
sub
mov
sub
test
jbe
push
ret
mov
and
pop
mov
mov
fmul
emms
sub
repnz
cmp
testl
sbb
sbb
sbb
dec
nop
loop
or
mov
jbe
mov
jbe
dec
cmc
out
cmp
xlat
pop
lret
rol
cld
pop
push
xchg
gs
cmp
mov
icebp
mov
in
lret
int3
fcompl
sub
inc
jmp
add
test
cmc
sbbb
sbb
scas
adc
mov
sbb
or
lret
cmpsb
outsl
or
movsl
mull
into
dec
adc
clc
push
sarb
inc
mov
in
pop
lds
xchg
je
sub
or
cmp
lea
fnstcw
addb
daa
ds
xor
adc
adc
mov
mov
data16
push
mov
pop
repz
inc
pop
aad
or
mov
add
lods
dec
mov
rsqrtps
adc
popf
out
ljmp
das
xchg
outsl
add
jne
daa
push
mov
jo
hlt
xor
xchg
jbe
cmc
mov
mov
jge
sahf
imul
pop
ret
inc
mov
pop
add
int
fsubrl
push
std
jecxz
jns
mov
mov
dec
movsl
adc
adc
pop
mov
outsl
loope
or
cmc
mov
xor
data16
pop
lret
jg
xor
std
cmp
push
push
xor
mov
xchg
adc
out
stos
scas
jo
xor
and
je
out
xchg
cmpsl
fsubl
push
xlat
imul
lahf
jg
fisubs
out
jnp
lea
mov
mov
es
das
incl
into
dec
aam
adc
je
mov
sub
sbb
mov
mov
mov
out
and
cld
test
lret
aad
lahf
xor
pop
loope
enter
hlt
aas
mov
inc
mov
rcrl
add
jo
leave
cmc
in
sbb
repz
mov
mov
jmp
aad
dec
sbb
ror
jne
mov
push
jb
cmp
gs
cmp
xor
xchg
jmp
sub
push
scas
dec
or
pop
out
and
xor
xchg
mov
test
pop
popa
dec
sarl
dec
and
sbb
not
xor
bound
push
mov
mov
sub
lock
lds
inc
dec
movzbl
sbb
mov
push
scas
ss
int
das
mov
gs
push
in
cmpsb
xchg
lock
lods
xor
mov
fdivp
cmpsb
xchg
add
push
fcomps
mov
inc
fnstsw
ficoml
push
pop
lock
lret
pop
push
movsl
jae
inc
push
push
sbb
add
fadd
pop
in
loopne
call
pop
pop
or
xor
lods
add
adc
arpl
jge
test
jmp
or
mov
movsl
leave
adc
js
aas
jb
adc
and
fidivl
and
xchg
pop
jbe
divl
stc
and
gs
cltd
jno
adc
push
or
push
inc
loope
popa
pop
loopne
ss
ljmp
cli
inc
xchg
loope
dec
jbe
adc
movsl
xchg
jecxz
pop
push
dec
and
data16
test
pop
dec
mov
cwtl
out
pop
jle
add
adc
pop
xchg
fs
loop
imul
xchg
cmp
pop
fldcw
or
out
popa
jg
sbb
movsb
in
xor
scas
pop
inc
cmpsb
mov
jmp
movsl
cmp
and
xor
daa
or
mov
inc
xor
popf
mov
rcll
mov
clc
xlat
pop
cmp
ljmp
lret
push
push
nop
ror
push
push
and
pop
not
xor
jae
pusha
jne
inc
ds
mov
fstpl
push
mov
push
inc
dec
or
jg
jle
adc
fdivrl
mov
inc
mov
cli
dec
add
fbstp
pop
psllw
jp
jbe
lea
ja
fistps
add
add
sti
ret
fisubs
push
push
xchg
aaa
pop
sub
fsubrl
movsl
push
cwtl
idiv
inc
out
pop
pop
adc
pop
cmp
aad
push
pmaddwd
push
pop
adc
int3
fldenv
jmp
and
popa
into
dec
pop
jp
rol
fwait
test
fistpll
xchg
or
push
clc
mov
mov
ret
xor
mov
jp
cmp
push
push
dec
rorb
test
rol
cltd
movsb
pop
fsub
mov
fdivr
adc
push
jnp
sti
inc
in
jb
call
rcrl
sbb
lahf
aas
mov
push
prefetcht2
adc
cmp
jle
int
in
or
mov
mov
add
push
cld
pop
add
test
rorl
mov
xchg
inc
pop
jnp
pop
mov
sub
sub
rorb
xorl
loopne
repnz
ret
jbe
jg
adc
pop
test
and
sub
mov
addr16
test
lret
sbb
enter
sti
das
push
out
mov
imul
push
cli
rcl
sbbb
mov
add
mov
sub
dec
pop
repnz
jae
bound
test
mov
mov
jns
mov
out
jne
test
mov
push
mov
loope
jl
lahf
iret
cwtl
dec
stos
pop
jns
loopne
jp
pusha
ret
add
mov
popa
int3
add
mov
fwait
sub
pop
mov
aam
inc
cmpsb
mov
jns
pushf
popf
shrb
pop
lds
pop
leave
jb
faddl
and
cld
in
mov
jne
cli
stos
insl
jmp
jnp
stc
scas
or
xchg
xor
in
pop
ret
fisubrs
hlt
test
std
mov
cs
push
pop
xchg
xor
mov
xchg
test
mov
push
pop
mov
pushf
jne
jno
mov
jns
adc
and
inc
out
inc
icebp
out
or
jle
aas
pop
push
punpckhbw
fists
inc
push
dec
inc
movsb
test
xor
pop
notb
or
mov
filds
js
shll
push
mov
cmp
add
notb
jle
mov
mov
outsl
stos
subl
or
fsub
lahf
stos
sbb
fsubrl
aam
mov
in
sub
aaa
mov
call
dec
mov
dec
xchg
rcr
aas
lret
mov
adc
fisubrl
and
inc
push
xor
and
mov
lret
scas
mov
adc
test
je
imul
out
les
addr16
lods
insl
cs
into
pop
popa
cwtl
adc
lcall
adc
scas
call
gs
add
pop
testb
lods
push
push
fwait
xor
adc
mov
push
scas
and
cmp
pop
add
shll
addb
pop
shr
pop
scas
add
or
pop
mov
addr16
lods
push
cmp
dec
movsl
or
inc
mov
push
sub
mov
sub
push
mov
push
sub
jbe
aas
push
push
sbb
popf
out
sub
frstor
sbbb
daa
mov
push
adc
push
lock
int3
pop
sti
push
push
icebp
pop
push
and
jle
and
add
shr
repz
ficompl
jo
repz
dec
mov
roll
jecxz
xchg
sub
xorb
pop
inc
mov
add
jecxz
mov
jl
xchg
repz
mov
sbb
test
xlat
jle
addb
cmpsl
mov
stc
roll
adc
jmp
ss
xchg
pushf
xor
xchg
ljmp
or
jnp
add
cmp
mov
sub
or
fistps
in
lea
js,pn
lock
dec
push
adc
ljmp
lods
add
xor
frstor
cmp
push
mov
mov
cmc
scas
call
jae
fidivl
test
testl
xchg
xor
out
idivl
xor
addr16
dec
add
arpl
in
pusha
add
sub
inc
mov
pop
mov
cwtl
arpl
or
add
dec
mov
std
sub
adc
sub
jb
sbb
jge
jno
push
lds
pusha
into
cltd
repnz
fimull
jmp
xor
add
sar
push
int3
sub
dec
push
repz
or
pop
mov
sbb
push
sub
jmp
es
shlb
push
push
repz
addr16
mull
push
lock
mull
mov
es
mov
sti
aas
add
lock
mov
or
dec
lds
fisubl
outsb
aaa
jl
xor
scas
xchg
mov
push
rolb
cmp
nop
in
push
push
dec
inc
sub
sub
in
jnp
cmp
jne
repz
lods
xor
jb
inc
jns
adc
mov
pusha
pop
pop
lods
popf
inc
std
mov
sarb
loope
adc
xor
inc
push
adc
sbb
mov
out
rolb
xchg
bnd
cmc
xor
pop
or
mov
daa
cmp
test
daa
aad
add
jb
xchg
clc
addr16
lret
in
stos
add
outsl
cs
lahf
mov
pushf
jb
cmpsl
xorl
sahf
data16
push
push
dec
adc
sub
mov
inc
jns
mov
xchg
or
iret
into
pop
or
mov
cmc
jno
sbb
test
fucomi
je
inc
sub
pusha
fadd
and
push
outsb
jb
sbb
bound
clc
xor
jns
mov
jle
enter
push
push
in
imul
sub
sub
lock
cmp
add
pop
adc
icebp
pop
ss
push
mov
jmp
icebp
mov
ficomps
dec
mov
movsb
out
in
sti
fsub
inc
mov
add
cld
out
stos
pop
cmp
mov
mov
sbb
sbb
push
scas
iret
das
out
xor
sub
or
pop
cs
jmp
das
push
lcall
imul
push
jmp
mov
xchg
js
mov
cmpsb
orl
mov
rcr
sti
insb
jle
mov
inc
xlat
out
adc
push
pop
inc
pop
jecxz
jmp
push
sub
mov
stc
cs
cmpsb
aam
pop
push
push
push
and
mov
cmp
pop
sub
dec
in
movsl
test
movsl
movb
push
ds
xchg
xor
and
mov
neg
xchg
push
lds
xlat
insl
loopne
shlb
mov
cmc
add
pop
cwtl
or
addb
fnop
pop
and
in
cmp
inc
icebp
outsl
ds
mov
dec
test
xor
popf
jno
popa
jl
dec
loopne
fimuls
sub
int
clc
mov
cmpsl
jge
outsl
push
lahf
lret
lea
cmp
adc
cmp
int3
fwait
out
sub
scas
repz
cwtl
mov
dec
mov
mov
push
das
cltd
push
push
out
push
mov
int3
mov
daa
imul
fdivrs
jle
loop
jb
shrl
jp
popa
add
jecxz
mov
cmpsl
dec
mov
jb
pop
and
push
insl
add
or
out
mov
pop
lds
in
adcb
lock
imul
imulb
add
cmp
fwait
jp
popf
je
push
xor
xor
jne
lahf
jo
jl
pop
mov
aam
ja
sub
xor
xchg
and
ds
mov
pop
jae
std
pop
mov
push
mov
sbb
loop
cli
std
xorb
out
jmp
cltd
and
scas
jnp
push
jle
es
jne
flds
inc
mov
pop
pop
lret
cmp
sub
sar
iret
flds
xor
sub
pop
aaa
pop
in
pop
fwait
and
iret
ja
ret
in
cld
xlat
adcb
xlat
inc
cmp
testb
gs
pop
mov
lret
mov
mov
jno
loop
and
sub
push
pushf
out
push
mov
xor
push
mov
mov
sbb
cmp
mov
jnp
adc
jo
push
popa
and
pop
and
sbb
dec
pop
mov
js
jo
xchg
dec
scas
ljmp
inc
adc
inc
dec
ret
and
xor
sub
imul
shr
das
insl
jo
push
ja
lcall
sahf
mov
out
mov
pushf
mov
pop
pop
lock
sti
mov
jo
or
mov
and
xchg
xchg
cmpsl
or
movsl
adc
xorl
jo
incl
cmp
gs
dec
subl
push
push
or
jmp
int3
andb
mov
fistpll
in
pushl
and
mov
xor
pop
repnz
enter
in
insb
mov
or
mov
imul
ret
dec
or
pusha
rolb
movsl
push
inc
xor
sbb
call
dec
pop
fptan
imul
iret
pop
dec
testl
mov
mov
jmp
mov
pop
das
lahf
addb
push
lcall
popf
sub
inc
cld
call
fdivrs
dec
mov
push
rclb
int3
les
adc
inc
pop
jo
pusha
sbb
inc
mov
jg
or
jmp
mov
or
stos
cld
push
mov
jle
in
sub
jns
pop
sbb
shl
jbe
insb
scas
jns
popf
inc
mov
push
cmpsl
push
xchg
dec
hlt
dec
mov
jbe
xor
sub
fcmovnb
popa
cmp
daa
in
mov
rorl
mov
mov
push
addr16
imul
std
daa
arpl
dec
popa
lea
mov
cs
inc
test
test
jnp
mov
outsl
lds
jecxz
addl
daa
jecxz
lahf
lcall
and
sbb
mov
jnp
or
loope
loopne
jmp
or
inc
aas
sahf
out
sti
sub
push
mov
xor
xchg
out
and
rcll
sbb
stos
add
cmp
push
jmp
mov
mov
popa
mov
fsts
cli
add
xchg
jge
push
lods
push
pushf
lea
dec
insl
cmpsb
fdivrl
inc
mov
mov
xor
test
repnz
test
and
adc
jns
les
cmpsl
pop
xor
lods
sub
leave
xor
adc
iret
cmpsl
mov
in
jmp
lret
enter
mov
shrl
lahf
repz
sbb
das
pushf
popf
mov
fildl
cli
push
rorl
adc
xor
int
lods
inc
jnp
cmp
movsl
cmc
shl
adc
mov
mov
das
mov
in
cmpsb
testl
jmp
mov
enter
daa
pop
jb
xor
idivl
mov
lea
cmpsb
lret
cvtdq2ps
aas
and
dec
sub
pop
dec
pop
or
jbe
or
jnp
aam
nop
pop
dec
ss
pop
xchg
push
popa
push
lret
adc
inc
test
inc
dec
out
xchg
in
xchg
orb
in
mov
repnz
incl
jno
aam
sahf
in
and
les
cmp
dec
repnz
mov
or
std
xchg
mov
cmpb
pop
popf
cmp
mov
inc
mov
mov
push
repz
xchg
push
repnz
repz
fsubl
add
stos
pop
jb
mov
data16
aaa
rcll
mov
jl
fistpll
sbb
shlb
cmp
sub
cmpsb
add
in
xor
stos
les
pop
jnp
lods
cmpsb
dec
sbb
addr16
dec
add
jne
and
test
fisttps
pushf
mov
sub
std
scas
push
add
or
or
lcall
push
sub
add
nop
ret
jle
scas
mov
dec
pop
cmova
xchg
adc
xchg
push
lods
cmp
fisttps
jne
mov
cmp
pop
int3
xlat
or
or
mov
jns
call
inc
mov
add
sarl
lret
test
and
dec
mov
add
cmpsb
test
clc
cmp
int3
mov
cmp
sti
pop
sbbb
xchg
or
dec
andb
xchg
and
inc
push
lea
push
push
xchg
push
shll
test
push
or
xchg
sbbl
faddl
mov
loop
jge
lahf
leave
in
leave
cltd
loopne
inc
hlt
loop
test
sub
dec
dec
fstpt
jle
leave
jb
lcall
jecxz
inc
call
dec
sub
lret
mov
push
pop
and
mov
test
mov
rcr
mov
cmc
sub
test
mov
popf
xchg
sbb
lret
inc
and
leave
lock
scas
pop
cmc
fisttpl
push
sub
insb
fdivl
insl
or
push
shrb
lret
iret
out
xchg
loope
mov
mov
roll
xchg
out
dec
add
insl
add
adc
addr16
jb
mov
popw
cmc
mov
xchg
adc
inc
xorb
lcall
js
mov
xchg
sbb
icebp
repnz
icebp
xor
jg
rclb
jmp
ss
and
xchg
mov
orb
in
jg
mov
and
neg
inc
lea
or
adc
xlat
fildll
mov
bound
out
frstor
addr16
ret
filds
into
sysret
adc
mov
movsl
inc
add
xor
and
lods
xor
movsb
add
icebp
pop
arpl
xchg
into
dec
mov
mov
cmp
call
mov
test
jbe
push
pop
xadd
daa
dec
push
inc
or
push
adc
push
adc
push
sbb
lock
loop
pop
mov
ljmp
jno
inc
adc
adc
lods
mov
mov
shl
or
xacquire
dec
hlt
mov
mov
pop
loopne
enter
icebp
mov
and
jge
insl
sarl
cmp
push
divb
xchg
sub
and
bound
mov
neg
enter
push
inc
aam
clc
ljmp
add
pop
jne
jecxz
aad
adc
movsb
ja
stos
movsl
sbb
clc
lds
pushf
neg
fs
push
push
or
fwait
xor
add
fsubrs
jle
xor
push
cmpsl
mov
fwait
addr16
sub
pop
cmpsl
jg
std
jg
sbb
fidivrs
sbb
fdivl
icebp
bound
add
ss
in
xor
shrb
divb
loope
js
orl
mov
cmp
aam
or
aam
lcall
push
and
cwtl
daa
int
es
sub
xor
jnp
decb
mov
pop
enter
push
pop
jecxz
ret
rorb
scas
nop
scas
jg
adc
push
pop
popf
sbb
mov
dec
and
sti
out
mov
mov
mov
rolb
cmp
imul
mov
jo
push
scas
sbb
sahf
xor
incl
cmpsl
repz
adcb
adc
add
cmp
dec
dec
out
lret
cmp
stos
sbb
sub
pop
mov
iret
int
imul
aas
sub
or
ss
jbe
sahf
shrb
fbstp
inc
sub
push
in
and
nop
in
mull
lds
mov
ja
pusha
ret
ret
sahf
mov
lds
insb
mov
pop
and
cmpsl
xchg
out
mov
fwait
sahf
ja
sub
push
iret
or
je
or
aaa
lds
aaa
int3
shrl
std
sbb
pop
clc
push
repz
aad
dec
cmp
add
mov
pop
icebp
dec
mov
sbb
loope
mov
dec
pop
repnz
or
cmp
icebp
xchg
jbe
enter
adc
jno
jne
clc
mov
cmc
mov
fisttpl
xor
sbb
lahf
sti
adc
add
jecxz
outsb
lds
or
fnsave
pusha
jmp
sub
popf
sbbl
mov
in
cmpsb
daa
dec
push
xor
dec
inc
or
adc
sbb
mov
mulb
ret
ret
notb
sub
xor
cmc
popf
xor
cmp
insl
xor
enter
cld
cmc
cmpl
imul
sub
stos
cmp
sbb
fsts
xchg
and
dec
stos
mov
pop
test
add
dec
add
cltd
xchg
in
imul
gs
test
adc
xor
jle
xchg
outsb
fnstsw
push
jb
arpl
fildll
subl
jp
inc
mov
mov
shll
push
cmp
lock
pop
fs
rcrb
test
xchg
lea
sbb
cvttps2pi
adc
loopne
jp
das
push
jb
inc
roll
and
mov
push
rcrl
sub
cmpsl
add
and
add
ss
xchg
pop
jno
cmp
mov
mov
push
mov
mov
or
push
pop
test
cmp
dec
arpl
les
into
lock
jo
rcrb
xor
mov
jno
sbb
addb
jmp
aas
stos
ficompl
dec
popl
fwait
mov
insl
and
inc
xor
push
repz
sahf
mov
jb
jg
int
xchg
mov
hlt
cmp
sub
pop
scas
decb
mov
cltd
xchg
sub
gs
pop
jns,pn
sahf
push
cmp
mov
mov
insl
cmp
cmp
adc
push
mov
jo
pop
loope
mov
sti
mov
sbb
jmp
cli
inc
xor
add
aam
lcall
inc
or
pop
stos
cmpsb
cli
out
mov
push
mov
dec
dec
in
rcll
push
clc
adc
addl
or
and
xorb
mov
cmpsb
lea
add
bndldx
push
fiadds
cmp
lods
or
jns
pushf
mov
jb
shl
xor
sbb
mov
and
dec
xor
fists
push
and
cmpsb
xor
rorb
and
pusha
sub
ret
push
xchg
cmp
iret
je
lods
in
sub
popf
out
mov
pop
pop
aaa
adc
aam
insl
push
mov
mov
mov
pushf
xchg
push
imul
jno
jno
push
test
int
cmp
dec
iret
and
mov
and
enter
and
sarl
and
and
push
cmp
xchg
sti
push
xchg
ja
icebp
sahf
or
cs
scas
pop
js
lcall
test
repz
mov
outsb
ss
xor
sbb
or
add
jecxz
pop
lock
jecxz
sbb
gs
cltd
icebp
inc
dec
jmp
or
mov
xor
les
inc
dec
hlt
xor
div
push
cmp
adc
xchg
or
imul
je
dec
pop
lret
pop
pop
ja
dec
test
jne
cwtl
and
ficoms
sbb
stos
xchg
icebp
cmpsb
aaa
gs
fimuls
les
add
jmp
adc
xor
mov
stos
cmc
adc
scas
lds
mov
sbb
mov
frstor
and
mov
mov
pusha
push
nop
rcrb
dec
jnp
fnstcw
je
out
mov
push
test
push
js
xchg
adc
or
nop
add
scas
mov
ficoms
sub
push
mov
mov
pop
adc
mov
inc
popa
fstps
adc
cltd
or
shll
inc
cwtl
div
pop
xchg
ret
mov
dec
mov
jp
cld
icebp
and
cmc
mov
bsr
shrl
out
mov
pop
cld
cmp
pop
lret
xor
xchg
inc
or
mov
jecxz
adc
jno
les
mov
jge
push
in
adc
pop
cmpsb
lods
jmp
mov
push
das
mov
push
adc
or
shrl
popa
and
or
cmp
idiv
bound
loopne
xchg
into
icebp
cmp
shl
jle
movsb
add
push
test
sarb
lds
push
insl
sahf
insl
mov
pop
gs
and
or
push
test
movsb
mov
cld
dec
lods
xchg
xor
mov
dec
mov
popa
or
bnd
imull
or
sbb
add
jg
scas
pop
sahf
adc
pushf
jb
sbb
scas
cs
dec
fidivrl
or
push
imul
hlt
fcmove
or
movsl
push
push
in
or
inc
mov
or
and
adc
fstpl
scas
jp
and
jno
insl
add
aad
inc
aad
movsl
xchg
xorl
mov
sub
jnp
inc
lahf
mov
mov
jg
xor
push
test
rol
inc
fwait
lods
sbb
flds
xchg
push
sbb
andl
inc
clc
int
pop
inc
lods
xchg
mov
or
sub
ja,pt
fistpl
sar
aam
sarl
mov
cld
in
outsl
and
pop
icebp
and
mov
je
sub
cmp
and
adcb
call
loopne
push
xchg
into
fldt
mov
aas
hlt
enter
out
iret
ja
flds
xlat
test
xor
jmp
mov
jge
or
add
jnp
and
dec
imul
or
test
dec
mov
xchg
jp
xor
add
pop
jecxz
les
sbb
xchg
mov
mov
roll
or
inc
movsl
arpl
add
pop
rcrl
mov
or
popf
cmpsb
ret
sub
dec
bnd
xchg
fnstsw
in
and
inc
pop
fcmovbe
sti
leave
cmp
xor
dec
sbb
subb
pop
jns
aas
stos
jnp
jno
in
aas
orb
fmull
outsl
repz
pop
inc
inc
jle
movsb
icebp
and
movsl
into
cmp
lcall
sbb
push
ret
fsubp
pusha
or
add
cs
popf
jb
inc
or
popf
andb
cmp
loop
xor
add
cmp
imul
adc
jp
jo
cmpsl
fdivs
repnz
and
inc
xchg
xchg
mov
xchg
mov
adc
push
insb
dec
inc
push
cltd
subl
lret
push
dec
fiadds
aam
push
arpl
test
or
inc
sti
add
test
lret
test
lahf
push
dec
test
xchg
add
mov
in
arpl
test
sub
sbb
stos
sahf
and
outsb
fists
pusha
xchg
mov
out
pop
rcrb
sub
push
outsl
inc
pop
dec
lods
lcall
lock
jl
popf
and
cld
jno
sbb
adc
sub
mov
jmp
lahf
push
xchg
xlat
jle
mov
fistpl
cmp
jp
movsl
fadds
xchg
je
daa
xchg
sub
mov
sbb
push
push
add
dec
xchg
push
pop
cmpsl
jb
sarb
dec
into
xlat
adc
insl
mov
add
add
mov
xchg
mov
test
xor
push
fwait
out
ret
popa
mov
rcll
loope
add
xchg
adc
mov
sarb
push
mov
jo
cmp
test
inc
fs
add
jo
mov
mov
xrelease
cmpb
loopne
push
pop
jae
adcb
jmp
es
dec
lods
or
movsb
mov
scas
dec
aas
ss
inc
sub
lea
sar
and
out
mov
xchg
scas
stos
ret
inc
mov
add
ljmp
ljmp
loop
mov
xor
push
out
xchg
and
and
xor
mov
fcom
out
dec
or
pop
les
test
xchg
cmpsb
jl
sti
into
rolb
mov
faddl
or
cmpsb
shlb
fidivrl
fsubrs
out
adc
cmp
or
jbe
mov
pop
mov
inc
setp
xor
insb
adc
jl
lahf
jle
loopne
xchg
int
mov
xor
mov
xor
mov
loope
cmp
scas
mov
add
mov
inc
daa
xchg
jae
jbe
nop
lahf
jae
in
mov
mov
aad
int3
fbld
repnz
mov
push
pop
int3
idivb
dec
nop
inc
pushf
push
stc
in
lret
ss
cmp
mov
out
fstpl
shlb
sti
test
xchg
outsb
es
mov
outsb
lock
enter
or
shlb
sbb
xchg
add
gs
in
cmp
or
or
scas
sbb
jge
nop
cmp
mov
fldcw
jmp
in
enter
clc
lods
dec
mov
dec
or
cld
scas
sbb
pop
daa
jmp
cmpsl
pop
sub
dec
shll
jb
mov
int3
repnz
cmpsl
lods
das
inc
cmp
test
adc
out
sub
adc
jae
cmpsb
or
fists
cmp
clc
inc
orl
test
mov
arpl
cmp
mull
mov
add
xor
fstl
jg
push
mov
jae
or
push
in
cmp
fidivs
cmp
xchg
fistps
shlb
cs
push
mov
test
jl
fiadds
out
scas
mov
dec
push
push
cmp
test
stos
mov
mov
cmpl
mov
shr
fcmovne
cwtl
lock
negl
loopne
sub
aam
fs
jo
mov
popf
adc
inc
into
in
push
addr16
rorl
lret
mov
in
mov
adc
rep
lret
insl
cmp
ljmp
je
sarl
repnz
pop
mov
cs
outsb
mov
stos
xchg
repz
aaa
fsubs
notl
scas
mov
stos
popf
pop
inc
sbb
addr16
push
out
in
in
imul
nop
jle
or
jne
fwait
ret
mov
popa
dec
aam
aaa
pop
mov
and
mov
je
movsl
jbe,pt
cmp
mov
ljmp
adc
mov
add
xor
test
mov
lret
push
popf
cmp
pop
imul
push
and
cltd
or
xchg
gs
mov
jnp
jg
xor
inc
ja
xor
jp
jmp
loop
popf
pop
sbb
mov
add
mov
movsl
insl
ret
andb
in
es
sbb
cmp
fcmovbe
out
push
pop
adc
cmp
lret
push
int3
ds
push
test
int3
push
push
mov
jno
and
xchg
jbe
lods
jl
lods
jge
and
or
orb
fs
push
lahf
sub
inc
dec
sarb
cwtl
cld
iret
insl
and
fs
push
in
cli
in
sti
popa
call
fisubl
scas
dec
mov
xchg
sahf
repz
jg
add
jp
mov
mov
jmp
jmp
inc
orl
jg
push
cli
or
ljmp
push
or
insb
add
xchg
rcll
jge
or
popa
ja
dec
gs
xor
stos
rorl
xchg
dec
cmp
mov
stos
outsl
xchg
or
out
lods
loope
pusha
fdivs
outsb
cmovp
stos
mov
pop
in
into
leave
and
loop
or
xor
shl
movsb
and
ljmp
sbb
mov
or
jnp
push
nop
jno
xlat
add
bnd
ss
jg
xchg
cmc
sub
sub
ds
stc
mov
xlat
and
into
notb
orl
push
andl
pusha
mov
xchg
dec
push
pop
mov
pop
mov
test
dec
jecxz
mov
test
fidivs
xor
lahf
hlt
cs
xchg
das
pop
cmp
int3
repz
test
aam
inc
inc
repnz
dec
ss
js
repnz
jns
pop
pop
dec
push
mov
adc
adc
dec
movsb
or
fdivrs
cmp
mov
rorl
fdivs
push
xor
adc
scas
lds
lods
psrlq
lret
cmpsb
and
sub
mov
inc
adc
stos
or
mov
movsl
pop
sub
mov
or
lods
dec
sbb
add
mov
add
lods
sub
xchg
inc
push
popf
dec
jnp
xchg
xchg
lret
jno
push
rcll
sarl
mov
cwtl
jmp
cmpsl
in
leave
add
push
into
jno
pop
les
xchg
and
sbb
loopne
inc
out
xlat
or
sub
dec
and
leave
mov
int3
idiv
icebp
mov
subb
adc
mov
xlat
add
std
mov
mov
mov
daa
int
dec
add
test
inc
sub
out
loop
and
dec
inc
or
or
aaa
loope
aam
sub
andb
insl
aad
aaa
pop
cs
or
xor
jle
lds
jmp
je
test
mov
insl
sbb
pop
pop
lret
loope
out
sbb
pop
xor
test
scas
mov
fildll
insl
cld
add
loop
dec
aas
add
test
test
add
add
mov
xchg
ds
xlat
add
xor
jecxz
fstl
stc
sbb
lods
out
jns
mov
aad
fadd
or
pop
mov
scas
sbb
pusha
push
fidivl
inc
dec
mov
push
hlt
insl
fbstp
mov
cmp
gs
xchg
mov
and
push
jae
add
sbb
or
insb
test
enter
popa
add
mov
push
adc
dec
outsl
mov
lock
fcomi
andl
out
or
orl
aas
push
inc
xlat
inc
add
jg
stos
mov
cwtl
pop
arpl
jns
lods
xor
xor
and
enter
mov
sub
aaa
sub
push
icebp
dec
mov
ds
sbb
repnz
mov
push
sub
push
das
add
into
cmpsl
stos
pop
adc
in
insb
mov
jne
outsl
pop
jge
js
ret
insl
test
or
lret
inc
cld
lcall
mov
mov
scas
push
out
pop
test
scas
jle
add
jbe
mov
inc
add
sub
dec
sbb
cli
mov
clc
xor
push
mov
in
adc
cmp
pop
cmp
push
std
mov
lret
call
mov
test
ret
pop
xchg
cmp
cmpsb
in
push
mov
lret
call
and
lods
cmp
and
adc
inc
or
daa
lock
and
stc
popa
jne
fisubs
scas
push
sub
and
imul
popa
hlt
xchg
int3
jns
adc
sub
dec
addl
sbb
imul
mov
cmp
cmp
jne
dec
pushf
jb
fistl
jp
inc
add
lods
jl
mov
cld
dec
sti
add
xchg
mov
xor
enter
in
mov
dec
mov
mov
pop
jbe
jns
xor
dec
add
and
daa
ja
int
cmp
mov
movsl
mov
inc
pop
push
xchg
or
test
or
shlb
fadds
pop
insb
ficomps
ret
repz
jbe
aam
cmc
adc
push
push
jge
inc
jne
insb
mov
mov
push
and
mov
fnstcw
xchg
cltd
mov
xchg
bound
pop
mov
or
pop
jge
and
insb
and
sarb
call
arpl
dec
adc
iret
xchg
jmp
xor
repz
add
jns
jo
shl
pop
add
fyl2xp1
add
mov
aam
mov
out
pop
pop
test
div
sbb
jp
sub
shrb
jne
test
fcomip
push
pop
sub
fisttps
dec
mov
addr16
xor
ss
adc
subl
ja
mov
push
lea
mov
xchg
into
sbb
pop
add
jg
repnz
and
pop
mov
fnstenv
lods
jmp
in
fiaddl
popa
pop
imul
into
arpl
aam
lret
fisttpl
in
push
fdivrl
icebp
xchg
enter
pop
fisttpll
insl
sbbl
jne
push
aad
pusha
cmpb
je
adcb
sub
int3
loope
push
adc
gs
and
and
or
jecxz
pop
popa
movsl
mov
or
fcompl
xchg
adc
fimuls
xchg
rsqrtps
add
cwtl
int
mov
cmp
lahf
inc
jp
in
jg
pop
cli
repz
das
btrl
and
inc
jbe
lea
lods
pop
mov
call
dec
add
stc
mov
inc
xor
add
mov
cmp
fcoml
sbb
xchg
sar
xchg
adc
sahf
jne
shrl
xchg
sbb
mov
cs
aaa
int
in
mov
aad
xchg
enter
lea
push
das
js
loopne
jge
inc
cmp
repnz
cmpsl
lods
int
and
aam
shr
out
test
pop
pop
mov
inc
test
mov
mov
xacquire
xchg
nop
test
lods
sbb
insl
pusha
pop
iret
popa
or
xchg
movsl
and
outsl
into
inc
movsl
daa
out
dec
cmp
mov
fnop
push
dec
stc
lock
xor
clc
punpckhdq
and
ss
mov
push
test
ficoml
adc
push
mov
or
inc
sbb
into
fs
insl
lahf
inc
add
out
shlb
sarl
mov
insb
daa
jecxz
clc
and
and
inc
es
jge
das
fisubl
sub
dec
ljmp
clc
push
sbb
push
je
cmpb
jne
mov
dec
dec
adc
jl
js
fwait
adc
pop
dec
rcrl
sar
sahf
sub
scas
gs
test
sub
jo
jmp
lcall
dec
fmulp
dec
push
inc
rcr
push
stos
add
pop
sahf
stc
pop
push
faddl
xchg
ljmp
stos
insb
daa
adc
xchg
sti
imul
lahf
add
pop
out
or
add
push
mov
movsl
xor
jmp
pop
or
push
add
xchg
test
pop
xchg
push
adc
sbb
ja
jnp
adc
lods
xor
mov
int
ja
pop
repz
or
add
js
adc
push
daa
pop
add
out
dec
push
stos
ljmp
je
addr16
push
pop
nop
inc
rcrl
flds
fstps
jmp
int3
test
xchg
mov
loope
popa
pop
int
lcall
scas
iret
cmpsb
fiaddl
jl
jnp
out
out
jo
shr
sub
subb
outsl
sub
lods
jge
mov
daa
add
clc
inc
dec
push
add
and
mov
lods
out
inc
addr16
sbb
adcb
test
out
cwtl
stos
scas
stc
sbb
adc
adc
mov
rorl
xchg
in
or
push
scas
xor
loopne
xchg
ret
sbb
jnp
mov
push
cmc
in
lds
fcompl
push
pop
lahf
je
push
xlat
mov
xchg
fdivrs
dec
addl
adc
into
jo
dec
sub
sbb
add
mov
mov
in
popf
dec
add
mov
ds
mov
xchg
jbe
loope
cmp
mov
outsl
movsl
jecxz
lock
lret
inc
clc
cmc
and
pop
movq
out
xor
xor
mov
ror
xor
notb
scas
pusha
std
in
xchg
insl
adc
movsl
or
icebp
lret
jns
daa
and
negb
xlat
fidivrl
sbb
es
cld
lds
inc
xchg
data16
mov
das
adc
loop
in
mov
and
mov
int3
jge
shll
pusha
addr16
push
fisubl
mov
shll
cltd
xor
inc
jae
dec
fsubp
and
adc
pop
inc
inc
test
sbb
and
call
pop
repnz
jb
es
enter
loope
xchg
sti
bound
out
sub
imul
pop
stos
push
xchg
std
push
fistps
enter
fwait
adc
daa
mov
insb
dec
std
dec
mov
mov
pop
push
lret
int
inc
jg
sbbl
pop
popa
imul
fmuls
in
sbb
xorl
shll
mov
inc
stos
movsb
mov
or
dec
pop
mov
cmc
ds
push
dec
mov
adc
push
and
movsl
iret
daa
push
jge
enter
movsb
int3
pop
mov
mov
mov
adc
mov
adc
popf
jecxz
in
push
sbb
out
push
out
xchg
shrl
and
lret
dec
jo
sbb
dec
js
shl
mov
push
mov
in
daa
jnp
mov
sti
add
das
imul
test
orl
push
mov
sbb
addr16
pop
push
testl
adc
nop
lret
xchg
or
cmpsl
sbbl
js
xchg
das
fidivl
nop
dec
cmp
adc
add
and
daa
pop
adc
out
dec
push
jnp
sahf
inc
gs
addb
jne
dec
add
and
push
and
mov
lods
sets
movsl
in
in
push
lret
and
mov
mov
negl
scas
or
pop
es
xor
mov
mov
lds
mov
arpl
cmp
fbstp
lds
test
adc
call
js
pop
mov
xchg
test
lock
mov
xor
fnsave
xor
mov
pop
cmp
mov
fmull
pop
jge
xorl
icebp
mov
or
in
mov
mov
mov
inc
mov
xchg
mov
or
cmp
xor
aam
pop
sub
dec
push
les
loope
leave
add
mov
daa
pop
popl
lods
outsl
cli
xor
pop
cmp
lods
icebp
adcl
fsubrs
popa
lods
in
sub
call
or
or
lahf
roll
adc
and
xchg
loopne
inc
jle
out
out
out
push
push
xor
push
test
ftst
insl
xchg
dec
cmpsl
or
mov
adc
dec
push
mov
mov
sub
or
add
xchg
ja
fidivl
cmp
bts
and
std
gs
and
sub
add
and
imul
sahf
or
xor
out
mov
out
mov
mov
push
xchg
pop
cmc
sahf
int3
mov
push
jecxz
ds
mov
push
xchg
adcl
sarl
out
fimuls
push
push
adc
mov
xor
jnp
mov
lahf
jmp
inc
push
sbb
add
inc
fildll
sarb
xchg
lods
push
mov
fs
push
inc
shr
pop
outsb
popf
popa
or
inc
xor
lods
mov
inc
sub
xchg
jmp
fdivs
push
outsl
cmp
xchg
inc
fcmovnu
lods
adc
jnp
adc
add
add
jmp
push
dec
dec
xchg
dec
rorb
mov
sbb
and
mov
fistps
mov
negl
sbb
roll
adc
jmp
jno
jbe
lret
jp
movsl
shll
shlb
jecxz
inc
push
mov
cmp
movsb
jne
sar
push
add
push
or
daa
loopne
add
cmpb
sti
jnp
xchg
cmpb
push
in
mov
mov
loopne
shrb
lret
scas
les
sub
push
mov
filds
adc
push
pop
sbb
and
mov
fbstp
int3
cli
jo
and
jns
sbb
fisubrl
call
call
xor
cwtl
mov
jo
mov
data16
and
add
mov
rorb
fninit
push
sbb
js
lods
pop
sub
je
and
xchg
movsb
or
xlat
testb
dec
out
es
scas
pop
imul
sbb
xor
fsubp
cmp
popl
jbe
scas
mov
add
loopne
adc
rcr
mov
mov
inc
pop
cmp
sub
sar
push
daa
test
cmp
add
mov
test
or
inc
mov
mov
inc
xor
add
iret
xor
mov
jl
push
fidivrl
inc
or
and
cmp
int
int
adc
mov
mov
lret
lea
fisubrl
in
sbb
data16
fstpl
cmp
pop
xchg
pop
and
popw
mov
lret
xchg
gs
ja
mov
js
dec
sub
insb
and
icebp
movsl
imul
jae
push
xor
sbbb
popa
fisttpll
movsl
fcmove
arpl
add
jb
lea
lods
push
test
push
outsb
add
repz
add
mov
out
xchg
sti
jle
push
cli
dec
add
mov
pushf
testb
pcmpeqb
and
insb
jne
dec
cwtl
lahf
repz
out
out
mov
jbe
and
xor
cmpsl
loopne
sti
fldl
lods
mov
imul
xor
ret
mov
cmp
aas
stos
push
pop
addr16
pop
stc
test
enter
mov
pusha
sbb
cmp
fsubs
mov
out
fwait
push
cld
movsl
jge
scas
and
pushf
loope
test
aaa
adc
int3
xor
iret
ss
xlat
jns
imul
sbb
dec
inc
cmp
fs
sub
ror
and
ss
cmp
xor
or
loop
mov
or
pusha
pop
fsubp
jb
pop
add
shlb
xchg
add
sbb
pop
xchg
pop
push
cld
mov
ficomps
mov
in
popf
jmp
aam
mov
icebp
push
repz
repz
in
daa
jge
mov
lods
gs
push
repz
ja
inc
es
sub
dec
aaa
cld
xchg
fucomip
in
hlt
int
lds
lds
leave
movsl
adc
sub
and
aam
or
push
jle
jbe
daa
cmp
shrb
mov
add
push
add
hlt
sbb
pusha
push
arpl
pop
xchg
jnp
in
xor
aad
outsb
repz
pop
out
sbbl
je
xchg
mov
xlat
popf
call
cmp
stos
adc
cld
shrb
mov
pop
fwait
mov
les
popf
cmp
ret
idivb
cmp
inc
jb
mov
push
mov
push
addr16
inc
sbb
shll
mov
mov
push
aam
mov
sbb
ret
lods
mov
jle
push
out
fsts
ljmp
xor
and
xchg
js,pt
sbb
sub
into
repnz
cmp
cmp
mov
inc
loope
mov
in
sub
in
xor
jp
adc
fs
loope
dec
in
test
or
and
js
sbb
cwtl
adc
push
or
jnp
loope
and
adc
ds
mov
dec
xchg
stos
xchg
sarb
pop
ficompl
outsl
lret
lods
mov
xor
push
stc
mov
sbb
lods
pop
and
clc
lret
mov
jg
cmp
push
xor
mov
fld
fst
leave
and
sub
mov
mov
xchg
js
add
mov
fcos
push
mov
aaa
push
ror
jae
add
xchg
subl
xor
scas
mov
pop
mov
fsubrs
xchg
sar
xchg
fldl
dec
adc
push
ds
jb
dec
out
cmpsl
xor
pop
shrb
gs
xor
xchg
adc
jecxz
daa
mov
ja
xor
loopne
dec
jns
rcr
hlt
cmp
sub
and
mov
ret
fbstp
dec
xchg
dec
shrd
cmc
xor
aad
xchg
aad
hlt
mov
scas
jp
rolb
and
inc
jo
push
cmp
and
xor
je
and
dec
cmp
in
fnsave
sbb
fisttpll
fs
in
or
data16
xor
test
adc
adc
xchg
push
mov
or
mov
test
fcoms
arpl
daa
jnp
lock
pop
xor
ss
nop
in
test
jno
out
daa
out
fisttpll
adc
add
xchg
pop
jle
dec
mov
bound
adc
fdivs
insl
push
call
xchg
ja
and
ret
in
jo
in
stc
inc
mov
jb
jae
xchg
adc
or
or
mov
popa
adc
rcrb
insl
jnp
lret
hlt
movl
mov
mov
cmpsl
aad
add
ds
ret
insl
loopne
xchg
and
addr16
orl
outsl
mov
dec
movsb
rolb
push
nop
into
int
fwait
dec
in
xchg
sti
aaa
dec
dec
or
inc
sbb
xchg
loopne
cmp
mov
pop
push
pop
mov
and
cli
aas
stos
jg
orb
xchg
pop
aad
or
mov
movsl
xor
mov
sub
mov
js
xor
mov
mov
fwait
dec
cmc
test
lods
outsb
xor
inc
in
imul
out
mov
cli
jecxz
lahf
mov
mov
mov
inc
data16
cmpsl
stc
btr
xchg
and
add
xchg
xchg
lahf
xchg
jmp
scas
cli
les
push
dec
rclb
lods
mov
out
mov
adc
test
add
fisttpll
sbb
imul
jbe
je
call
sub
jmp
insb
call
call
xor
or
mov
push
fildll
aas
sti
bound
js
pop
mov
adc
fucomp
push
mov
roll
cmp
pop
mov
xchg
dec
hlt
addr16
push
cmc
sbb
mov
push
pop
fldenv
xorb
push
es
insb
inc
sub
pop
push
insl
and
pop
jp
movsl
mov
pop
mov
pop
push
add
mov
insl
fimuls
mov
shll
jg
iret
insb
cmp
jmp
fsubs
jno
push
aam
inc
pop
test
or
sar
inc
inc
test
add
sub
scas
leave
pop
jne
xchg
call
xchg
cmpb
mov
int3
or
xchg
std
mov
lds
push
ret
mov
jne
mov
adc
fdivrl
in
es
pop
jge
xchg
xchg
les
ljmp
lea
fisubs
in
and
ljmp
out
es
xchg
jnp
clc
xchg
loopne
cmp
jbe
test
sub
jmp
loop
fs
dec
cmpsl
cmp
sub
inc
mov
cs
loop
or
fstl
pop
xchg
sbb
sbb
stos
xchg
mov
cmp
bound
jl
pop
daa
pop
xor
fnstcw
mov
add
cmp
jmp
push
or
add
adc
jmp
scas
adc
mov
aad
sahf
popa
mov
daa
pusha
jg
gs
js
arpl
add
stc
add
fidivrl
and
dec
xor
xor
shrl
or
into
mov
je
cwtl
in
xchg
ret
cmp
inc
lret
in
test
addr16
pop
or
pusha
mov
shlb
mov
test
xchg
pop
push
add
insb
in
xchg
cmp
jge
psraw
adc
scas
adc
cltd
stos
add
ret
pop
jo
ljmp
mov
stos
daa
lcall
fcoms
or
push
jl
cmp
pop
jl
inc
loope
or
inc
jge
mov
adc
push
xor
add
push
xchg
push
mov
aad
cmp
xor
push
push
test
pop
loope
stc
sbb
outsl
clc
sbb
jge
dec
xlat
dec
cmpsl
xchg
sbb
popf
mov
jbe
sbb
lods
sub
icebp
int
and
leave
loope
test
or
iret
or
dec
mov
test
xor
xor
sbb
sub
jno
mov
xlat
sbb
div
repnz
xchg
or
data16
iret
sub
daa
push
push
ss
dec
aaa
and
push
xor
mov
fadds
fisubrs
fwait
inc
jnp
mov
scas
mov
and
pop
data16
test
or
pop
mov
pop
outsb
pop
jmp
lds
cli
shrb
sub
xor
sbb
rorl
push
fldenv
call
and
pop
pop
xchg
fwait
enter
imul
cmp
imul
fnsave
dec
pop
xchg
bound
jmp
sub
cmpsl
mov
fwait
pop
mov
pop
fiadds
lret
stos
test
icebp
mov
cli
sub
mov
xor
fs
sbb
mov
movsb
leave
icebp
adc
pushf
sub
loop
push
flds
ljmp
and
outsb
mov
xor
bnd
push
dec
sub
mov
out
pop
movb
mov
sub
jge
cwtl
enter
fwait
cmp
sbb
jbe
dec
xchg
or
int
jbe
push
push
adc
jp
add
mov
int
stc
icebp
repz
rcll
daa
add
dec
dec
adc
add
cmc
pop
push
insb
jmp
stos
orl
push
xor
and
mov
jg
xchg
insb
lcall
xchg
sub
inc
inc
cld
dec
nop
scas
cmp
testb
push
outsb
int
push
mov
mov
int
xor
xchg
inc
adc
mov
pop
inc
mov
sbb
lea
dec
xchg
cmc
push
or
mov
fisubs
cmc
lret
jne
push
sbb
fdivl
nop
outsb
or
int3
dec
pop
mov
xchg
outsl
call
fwait
das
xchg
scas
inc
sbb
pop
dec
mov
pop
dec
jae
lods
shlb
and
push
jne
cmp
inc
jnp
std
inc
in
jge
je
inc
testb
mov
ret
daa
sbb
add
mov
fnstcw
cwtl
popf
sub
test
push
push
mov
fimuls
sbb
dec
out
popa
mov
cmpl
jb
mov
in
loope
faddl
sbb
aaa
loopne
xor
es
or
cmp
push
and
pop
call
js
cmpsb
inc
xchg
fists
mov
iret
push
pop
mov
out
xorb
adc
mov
jne
jge
lock
jbe
pop
jno
cmpsl
and
mov
bound
into
lahf
test
imul
sbb
fs
into
xor
xchg
test
int3
or
add
and
int3
and
pushf
lret
dec
xlat
sub
into
icebp
jns
mov
test
shrl
ret
jg
jg
xchg
push
xlat
jne
lcall
xor
dec
repnz
push
mov
pop
repnz
loopne
lds
das
scas
xchg
sbb
popf
mov
or
xchg
not
in
mov
sub
push
cmc
pusha
inc
je
push
into
lea
inc
cmp
pop
les
push
lock
dec
je
jmp
outsb
xor
inc
mov
cmc
jbe
jmp
fwait
mov
into
lea
adc
push
push
push
cmc
jp
add
mov
fnstcw
outsb
insb
push
mov
aam
add
enter
in
xchg
divb
mov
das
sahf
mov
ljmp
fdivl
dec
mov
subb
cld
js
or
add
dec
mov
cmpl
inc
fisttpl
adc
cmpsb
cmp
pop
push
test
or
pop
cmpb
ret
test
lcall
dec
packuswb
pop
mov
pop
sahf
fidivs
jp
dec
bound
pop
add
cli
dec
xor
sbb
mov
dec
push
lds
add
rcr
or
rcrl
ret
lods
orb
lret
out
mov
shl
mov
cmp
mov
push
sti
jle
pop
stc
data16
or
push
mov
xor
popf
xor
fldt
lock
inc
enter
into
ds
insb
inc
data16
xor
aam
mov
ret
push
adc
loope
mov
loopne
bnd
or
insl
fsubl
ror
pop
push
in
jnp
outsb
mov
inc
jl
inc
xchg
lahf
ret
fisttpll
scas
add
push
xlat
pop
add
wbinvd
clc
or
ficoms
jae
fildl
mov
movsb
and
xchg
fs
push
xchg
pop
fstps
mov
popa
cmp
lds
cwtl
xchg
push
stos
inc
popa
iret
mov
scas
je
int3
jecxz
daa
cmp
rcrl
mov
jp
mov
pop
stos
jns
xchg
mov
push
cmp
arpl
pop
call
int
scas
popf
lcall
outsl
or
into
fsubl
adc
movsl
mov
pop
cmpsb
mov
test
xchg
loope
and
dec
nop
jmp
pop
push
or
nop/reserved
cmp
lahf
loop
arpl
push
ljmp
frstor
outsb
fiaddl
jp
rolb
dec
fisttpl
and
sbb
sub
stc
jmp
popf
leave
test
adc
icebp
scas
inc
mov
cmp
fld
rcr
lock
ljmp
and
lret
cmp
jbe
ficoml
inc
call
jbe
sbb
fstpt
lds
xchg
mov
inc
add
stos
fcomps
nop
fidivrl
adc
inc
daa
mov
push
jecxz
test
jns
mov
xchg
dec
xchg
cmp
adc
frstor
jl
jne
aam
das
and
out
xor
jne
insl
inc
out
mov
psubsw
inc
iret
mov
sbb
lahf
dec
jo
and
cwtl
xor
pop
leave
jmp
loop
sbb
pop
mov
sub
jnp
stos
jo
jl
bound
pop
inc
inc
out
adc
inc
ficoml
xor
shrl
sub
pusha
mov
and
sub
es
in
jo
dec
cmpsl
test
sub
mov
mov
fnstcw
mov
jmp
aam
inc
cmp
mov
cli
orb
jnp
xor
lret
lcall
mov
inc
test
mov
add
mov
cltd
pop
out
outsl
icebp
out
fcomps
sub
scas
ds
xchg
cmp
pushf
clc
cs
jge
push
lcall
xchg
inc
mov
fs
add
iret
aam
xor
shlb
adc
pop
in
out
push
test
movsl
cld
xchg
mov
mov
mov
adc
int3
int3
lret
fisttpll
push
scas
xchg
aaa
orl
insb
test
das
in
data16
and
leave
sbb
cmp
add
jg
cmp
mov
inc
fbstp
mov
pop
fmuls
jp
into
fistl
cli
xor
cmpsl
pushf
inc
xchg
push
adcb
adc
into
ljmp
lahf
roll
cmc
fsubl
aam
test
lret
imul
cld
push
clc
mov
imul
and
cwtl
xor
addb
leave
sbb
int3
dec
aam
or
mov
cwtl
fistpl
addb
push
push
repz
lods
mov
test
cmp
pop
push
jmp
pop
add
xor
mov
push
jae
imul
jne
aaa
cmpsl
stos
scas
add
dec
in
mov
inc
in
and
adc
xchg
ret
mov
sahf
aam
push
scas
cmp
mov
sbb
call
test
xchg
sti
mov
leave
push
mov
pop
pop
jmp
fs
sbb
inc
andl
clc
push
sarb
pushl
call
aam
push
mov
dec
lcall
mov
ja
std
dec
sahf
sbb
jle
jo
out
mul
insl
mov
xchg
push
sarb
mov
jno
push
sub
lret
jle
aam
test
cmp
test
push
sarl
ljmp
inc
lret
push
pop
insl
int
sahf
pop
push
or
incl
imul
jle
ds
notb
add
inc
pop
inc
or
or
xchg
and
cmp
ss
out
jns
inc
jl
jnp
pop
inc
jl
sbb
mov
repz
mov
out
in
mov
adc
lea
int3
cli
nop
jecxz
ja
in
ret
sub
sub
inc
filds
loopne
cmpsl
fstl
ja
xchg
movsl
cmp
cmpsb
clc
push
push
loop
mov
dec
gs
push
out
in
mov
scas
lahf
orb
out
pop
add
mov
sahf
gs
scas
xchg
mov
inc
repz
mov
popa
inc
push
pop
or
cmp
test
add
inc
dec
fwait
stos
lret
into
in
jo
in
push
test
aad
dec
mov
imul
mov
iret
pop
push
push
lret
dec
cmpsb
jno
int3
adc
gs
inc
stos
mov
jo
lret
jp
add
lahf
mov
icebp
shrb
mov
mov
sahf
add
dec
sti
call
jne
pop
pop
jb
fistpl
ret
shlb
cmp
dec
loopne
jae
fldl
aam
mov
xor
outsb
int3
ja
movsl
cmpsl
cmpsl
hlt
pop
jno
dec
call
test
inc
lods
lahf
jl
decb
cmp
push
in
outsl
test
xchg
mov
mov
insl
mov
jnp
ljmp
inc
in
sti
aad
mov
sub
std
iret
xor
lods
les
push
mov
aam
cmp
cmp
sub
push
mov
xor
jne
mov
sub
imul
jecxz
sbb
movsb
pop
add
jne
fisubs
adc
imul
call
outsl
dec
mov
pop
push
je
ja
mov
les
or
rorb
fwait
xchg
sub
push
adc
jb
daa
add
mov
mov
cmp
bound
iret
stos
push
shll
mov
loop
and
std
lahf
mov
push
fldcw
and
pop
adc
jle
movsb
push
jp
or
in
into
sbb
sub
push
addr16
dec
dec
fs
sub
jo
sub
aam
add
scas
sbb
call
xor
popf
xor
xor
cld
sub
mov
mov
shr
xor
or
pop
dec
mov
repz
sub
cmpsb
repnz
xchg
fiaddl
pop
or
jno
fbstp
add
into
jmp
sbb
add
in
mov
cmp
cmpsl
push
lds
lea
push
jnp
dec
lahf
xor
into
push
aad
sub
pusha
aad
pop
and
or
addb
xchg
fcmovnu
sahf
pop
sahf
lret
dec
mov
xchg
divl
push
lods
jg
pop
mov
ret
rol
xlat
add
inc
lds
dec
push
cltd
outsb
dec
xor
addr16
nop
stc
pop
or
inc
xlat
mov
mov
mov
ret
cmp
lret
mov
addr16
inc
stc
ds
inc
or
jne
pop
xor
xchg
test
cld
cld
and
outsl
cs
cmp
sbb
mov
testb
mov
int3
sbb
adc
fidivrl
rorl
mov
clc
cmc
pop
insl
mov
cmp
out
adc
mov
es
pop
mov
fldcw
sub
fwait
popa
push
adc
int3
stos
mov
push
jo
mov
xchg
and
cmp
cmp
mov
inc
idivl
movsb
ss
dec
sbb
cmpsb
jbe
jl
in
subb
stos
mov
mov
sub
push
rcrl
mov
jnp
jp
or
out
mov
ret
lods
repz
jns
push
insl
sbb
addr16
cmp
loopne
mov
pop
sub
push
cmp
mov
das
jp
mov
call
out
push
xchg
pop
lods
ss
dec
in
and
push
sbb
adc
sahf
in
jmp
jecxz
push
inc
stos
aas
pop
out
test
and
testl
test
dec
xchg
leave
cmc
inc
cmp
mov
add
dec
icebp
js
pop
sub
lods
rclb
sub
add
xchg
pop
cmp
inc
add
jae
cmp
lods
fstl
in
push
inc
dec
out
aad
dec
xchg
cmp
adc
cmc
test
lea
shlb
jnp
movsl
gs
mov
push
lds
push
mov
xchg
add
sbb
fiaddl
dec
repz
cmp
inc
iret
nop
aad
in
add
push
sub
test
int3
loopne
clc
imul
sbb
push
pop
aad
xor
je
sbb
mov
cmp
or
sbb
sub
cltd
mov
cmp
lods
dec
mov
add
out
enter
data16
push
mov
adc
mov
pop
pop
dec
push
into
movsl
test
or
test
daa
lds
jns
or
xchg
xchg
es
cli
divl
outsl
or
dec
pop
pusha
fs
ret
shl
cld
aam
ss
xor
out
mov
inc
push
cmp
lds
jle
xor
insb
xchg
das
out
out
xchg
mov
jb
stos
pop
cmpl
rorl
cmpb
call
or
push
lret
cmp
ret
sub
xchg
test
fists
xchg
nop
das
mov
es
pop
inc
rorb
aaa
cmc
lock
mov
ficoms
popa
lea
lret
loop
addr16
dec
imul
out
fdivrs
xor
sbb
in
movsb
ljmp
jns
jmp
mov
xor
fwait
dec
stos
push
push
cmp
dec
cmp
inc
mov
outsl
and
dec
mov
lahf
ror
int
in
shlb
push
imul
or
add
cmp
roll
jae
sub
xor
in
lcall
mov
push
lds
sub
mov
lret
pop
dec
sbb
fs
faddl
and
jnp
popf
test
xor
cli
dec
gs
lock
jle
repz
mov
shrl
and
cmp
fstps
ss
fprem1
movsl
loop
daa
xchg
pop
pop
push
adc
sbb
mov
jbe
repnz
leave
push
sub
ss
cld
into
jo
mov
std
adc
std
sti
and
aam
add
pop
frstor
push
pop
sbb
ret
dec
xchg
into
pop
fisubrs
rolb
arpl
adc
xor
dec
jb
cs
inc
clc
cmp
sbb
mov
pop
mov
push
xlat
je
repz
dec
int3
jl
std
pop
inc
cmpsb
stos
sub
sub
xor
pop
adc
xor
fs
gs
pushf
xchg
movsb
fisttpll
adc
cs
or
orl
push
iret
adc
out
sbb
mov
fstpl
out
xchg
imul
in
imul
lock
and
jns
daa
ja
pushf
cli
or
mov
or
dec
dec
test
mov
and
in
cmpb
int3
inc
dec
jns
or
mov
stos
cld
mov
cmpl
fs
aad
in
xchg
mov
cmpsb
mov
int3
mov
xor
loopne
pusha
inc
xor
out
mov
add
lea
aad
sbb
imulb
mov
inc
sub
mov
or
pushf
test
divl
notb
cli
push
and
jl
pop
jo
jecxz
out
stos
rcrb
imul
and
sbb
fisubs
addr16
and
lods
xlat
and
sub
clc
and
sbb
les
std
jg
adc
and
sbb
sbb
daa
icebp
dec
sub
call
shll
inc
ljmp
scas
xchg
pop
add
in
cmp
dec
aaa
jl
loopne
out
dec
in
pop
pop
xchg
jnp
sti
sub
psubb
or
jl
and
nop
adc
insb
test
fisttps
into
xor
xchg
push
mov
push
test
push
sub
mov
fiaddl
sub
or
push
cmp
inc
xchg
mov
adc
mov
adc
dec
jo
fsubs
imul
out
fistps
test
inc
mov
pop
xor
xor
je
fisubrs
in
js
mull
xchg
imul
cmc
fmulp
jne
test
and
insb
pop
das
mov
into
mov
jo
push
cwtl
add
or
rcr
inc
add
out
or
lret
test
leave
subb
add
push
mov
or
mov
fcmovbe
sub
mov
jge
adc
imul
loope
gs
push
lods
rol
fiaddl
subb
out
jl
lods
sbb
imul
inc
sub
xchg
arpl
sub
int3
sub
inc
testb
add
leave
ss
mov
in
insb
dec
cmc
sub
mov
pop
insb
aaa
dec
mov
les
jno
movsl
fstps
mov
push
pop
hlt
push
pop
insl
adc
dec
adc
sahf
cmp
or
adc
push
pop
rorl
and
shlb
sbb
jo
iret
jle
cmpsl
js
rcll
faddp
cmc
jp
xlat
fildl
push
fnstsw
aam
aad
and
es
arpl
or
mov
push
pop
int3
cmpsl
jns
rorb
cmp
es
sbb
andb
dec
dec
mov
rcl
pop
out
and
jae
push
pop
mov
or
sbb
ds
dec
repz
push
cltd
add
ffreep
test
sbb
sbb
in
lods
jb
aam
mov
dec
inc
leave
pop
mov
add
int3
mov
xor
add
or
imul
imul
jbe
es
mov
inc
int
insb
loop
jae
out
xor
cmp
outsb
jmp
mov
jp
sub
leave
ja
fists
mov
ss
sbb
jne
mov
jge
lret
sbb
fisubs
in
cwtl
add
mov
cli
jne
subb
or
mov
mov
mov
stc
in
fwait
inc
outsl
popf
pop
xor
fdivs
mov
bound
lock
mov
out
in
out
ret
mov
xor
and
scas
xchg
jmp
dec
sbb
incl
int3
mov
cmc
cmp
rcrl
push
push
push
mov
mov
sbb
push
pop
lods
pop
mov
mov
pop
enter
testl
jo
int
cwtl
fisubrl
inc
add
ret
jl
inc
je
xor
mov
jbe
inc
jl
movaps
mov
mov
mov
rcl
pop
dec
xchg
fnsave
or
lcall
push
leave
mov
sbb
adc
shl
out
mov
outsl
mov
dec
lds
jne
rorl
clc
mov
adc
jne
push
loopne
sub
mov
fs
mov
jo
pushf
ret
cmp
xchg
mov
xchg
cmpsb
imul
dec
and
popf
jnp
sub
dec
cltd
cmp
jmp
jg
scas
cmp
mov
or
jmp
out
cmpsl
ljmp
pop
sbb
mov
or
div
negl
notb
xor
lcall
cli
add
pop
xchg
sbbb
lret
xchg
aad
sbbl
iret
and
mov
mov
loope
lcall
in
or
subb
outsl
lret
or
mov
mov
inc
scas
mov
xor
cmp
std
rclb
dec
push
xor
sbb
cmp
adc
mov
xor
xor
push
add
fidivrl
xchg
stc
cmp
push
dec
aaa
cld
in
enter
mov
jecxz
sub
mov
repz
icebp
mov
push
xor
in
add
rolb
call
mov
leave
lods
jl
mov
sub
dec
adc
fcmovb
xor
push
cmp
xchg
xor
adc
ljmp
mov
int
ret
and
jno
and
stos
pop
jne
sti
cld
fldt
fldt
mov
and
icebp
push
fcomi
in
es
ljmp
sar
cmp
and
or
xchg
mov
xchg
mov
xchg
cmc
push
add
dec
sub
les
add
jno
pop
in
pop
lock
imul
jl
mov
cmc
test
xor
fsubrs
icebp
or
ja
adc
sub
std
dec
daa
push
and
lock
push
sub
xchg
add
inc
in
cmp
pop
dec
dec
inc
loope
mov
cmp
lods
cmp
cld
leave
insb
dec
push
and
or
lahf
imul
stc
rcr
rolb
daa
pop
mov
sahf
mov
jl
sub
pusha
das
and
pop
fcmovnu
pmullw
clc
jmp
jnp
cmpsl
stc
addr16
aaa
push
aaa
ficoml
xor
xchg
jo
js
adcl
sub
movsb
adc
push
cld
in
hlt
xor
or
popa
dec
xchg
je
sbb
xor
xchg
dec
lret
addl
test
mov
sbb
pop
dec
out
pop
pop
mov
int
dec
jmp
ficompl
mov
mov
add
xchg
rolb
inc
das
jae
stc
lods
mov
bnd
pop
data16
push
or
fistl
mov
loop
cmc
cmp
lret
mov
nop
dec
mov
dec
loop
outsl
adc
adc
push
ds
rorb
cltd
imul
scas
rcl
aas
inc
lcall
out
lahf
xchg
push
es
stc
jnp
pusha
mov
adcl
add
insb
push
jmp
adc
cmp
repz
loopne
sbb
mov
pop
mov
jp
das
sar
addr16
cmc
lods
sub
mov
loope
sub
or
push
mov
sbb
jmp
xchg
xor
push
addr16
xchg
jnp
xor
in
mov
xlat
mov
push
lods
out
jnp
out
and
or
rcrb
cli
adc
sahf
xor
pop
je
mov
aam
add
xor
add
dec
aaa
sub
or
or
aaa
sbb
ret
inc
in
stc
dec
push
mov
out
fsts
fcomps
mov
call
shrl
xor
pushf
nop
setae
mov
adc
decl
adc
add
xor
sti
shll
fstpt
sbb
lock
orl
or
in
mov
cltd
push
insl
lret
mov
mov
lds
in
mov
sahf
mov
sbb
dec
cmp
ds
insl
mov
daa
test
mov
xor
pop
inc
and
out
inc
mov
and
pop
hlt
test
outsl
lret
mov
add
cmpsb
cmp
pop
sbb
aas
daa
push
adc
aad
stos
and
cmp
add
aam
add
ljmp
sbbl
popa
add
xchg
outsb
cld
movsl
push
cmp
xchg
adc
pop
cmp
mov
loope
or
jbe
or
mul
into
xor
push
in
addr16
dec
push
cmp
adc
sarl
cmp
in
mov
add
push
push
mov
cmpsl
jl
push
cmpsl
lock
loopne
dec
int
pop
and
xchg
mov
dec
movsb
fidivrs
mov
xchg
mov
push
jle
stos
les
call
mov
inc
mov
xchg
pop
pop
into
aad
mov
fwait
movsb
stc
inc
jae
push
push
mov
outsl
lret
mov
or
popl
cmp
pushf
clc
js
adc
xor
mov
in
adc
pop
std
push
xchg
jo
cmp
fisttpl
mov
jg
sbb
insb
bound
in
inc
lods
add
insb
aas
test
mov
jb
pop
shl
loope
adc
je
ret
fldenv
add
aad
fwait
dec
sub
ja
dec
pop
pop
roll
nop
push
inc
sbb
mov
jl
scas
add
popa
xchg
xchg
mov
pop
inc
inc
imul
xor
xchg
test
cmp
sbb
cmp
ret
xor
imul
out
aad
mov
dec
repz
mov
sahf
push
loop
inc
jbe
mov
jb
pop
pushf
sbb
mov
and
sub
rorl
pop
adc
push
rcl
cltd
mov
or
ss
das
jge
mov
adc
roll
dec
cmc
sub
jp
sbb
lods
jmp
push
dec
inc
add
hlt
inc
mov
mov
sub
jl
dec
arpl
xor
mov
add
jmp
inc
jle
sub
mov
vaddsubpd
sub
fwait
sbb
xchg
or
adc
cs
mov
in
std
insb
mov
out
enter
movsl
negb
daa
pop
shll
mov
cmc
xor
lret
inc
inc
xor
adc
sbb
imul
les
shl
jecxz
sub
sbb
mov
jg
mov
push
fidivs
ja
xchg
out
icebp
xor
xor
jp
mov
loop
pop
fndisi(8087
jno
xchg
repz
add
mov
xlat
adc
or
stos
xor
outsl
push
add
pop
pop
movsb
ret
lea
test
mov
push
clc
mov
inc
dec
in
lods
and
int3
mov
jnp
mov
mov
mov
push
lcall
aam
xor
ja
scas
mov
cli
fstpt
lods
movsl
fwait
int3
orb
orb
jmp
rcrl
js
mov
mov
mov
mov
dec
cmp
lea
inc
mov
adc
rol
in
cld
movsl
loopne
mov
mov
les
scas
call
test
dec
mov
mov
push
insl
movsl
xchg
out
sub
test
int3
lahf
scas
push
loopne
xchg
cld
rorl
fsubrl
imul
clc
push
loope
loopne
mov
cltd
sahf
std
push
mov
rolb
mov
adc
fcoml
ja
popf
test
idivb
lds
jecxz
sub
xchg
cli
sub
add
sbb
dec
adc
xchg
outsl
push
mov
or
and
int3
arpl
jae
js
sub
aaa
xchg
or
adc
cld
test
lret
pop
ret
out
dec
xlat
addr16
pop
sub
mov
sbb
and
aas
mov
or
hlt
mov
ss
mov
test
push
sub
jp
pop
out
sbb
mov
or
cmp
mov
mov
sub
push
mov
xor
dec
sbb
xchg
lods
push
popf
aaa
sub
dec
and
addr16
fs
ja
jb
inc
in
cwtl
adc
sbb
shll
push
lcall
push
out
nop
mov
fcmovbe
mov
sbb
and
imul
ret
cltd
scas
sub
mov
pop
inc
sub
ja
add
fs
adc
aas
push
and
hlt
inc
cmc
icebp
dec
fstps
mov
test
stos
int3
loopne
dec
add
and
push
sbb
sbb
sbb
insb
and
in
mov
lods
orb
ljmp
shlb
shlb
or
dec
xchg
stc
ret
mov
das
aas
hlt
mov
aas
psllq
sbb
xchg
mov
aad
outsl
faddl
push
movsl
push
mov
js
adc
sbb
js
lea
imul
xor
fnsave
jecxz
xor
into
fwait
mov
cmpsl
aad
xor
mov
push
lods
movsl
mov
dec
dec
xchg
das
out
clc
adc
cmp
pop
cmpsb
movsb
cmp
call
xchg
sbb
add
fnstsw
fwait
or
xchg
loop
ss
mov
mov
jp
or
repz
out
pop
mov
push
jne
and
jmp
mov
sbb
or
or
or
pop
cld
push
rorb
xor
lret
in
sub
cli
or
repnz
jmp
icebp
push
inc
and
out
pop
adcb
xchg
les
cltd
aad
xchg
int3
nop
iret
xor
movsl
gs
add
jb
pop
mov
fiadds
xchg
push
js
push
and
std
sbb
test
cmp
mov
add
insb
je
xor
ljmp
xchg
pop
leave
scas
pushf
push
cmp
push
pop
or
pop
sbb
enter
push
sti
mov
sbb
inc
xor
popa
sub
xchg
ret
mov
call
enter
dec
out
gs
jmp
sub
sbb
popa
push
mov
xor
mov
add
repnz
nop
jbe
push
add
mov
data16
add
outsb
sbb
or
fstl
xchg
addr16
add
int
pop
std
xchg
push
mov
rcrb
add
and
mov
adc
add
fildll
mov
sbb
pushf
push
cmp
dec
mov
out
int3
adc
cld
adcl
lea
aad
inc
sbb
mov
std
jno
lahf
sbb
fstp
sub
mov
scas
lret
inc
lea
hlt
ror
int3
xor
out
cs
xlat
and
lret
jns
imulb
pop
cs
cmpsl
jbe
arpl
jnp
jecxz
loop
sti
fwait
and
jge
mov
dec
mov
pop
xor
inc
jmp
inc
jns
mov
sbb
loopne
fwait
aas
mov
xlat
adc
and
xchg
mov
push
mov
out
int3
push
jecxz
sbb
leave
imul
sahf
testb
xor
add
in
cmc
notb
adc
pop
cmp
pop
mov
mov
mov
xchg
adc
and
call
rorl
repz
call
mov
push
mov
push
es
mov
lahf
pop
inc
push
sbb
pop
arpl
pop
or
aad
daa
lret
push
pop
fisubl
push
fldl
and
mov
sub
fsubs
punpcklbw
mov
fmul
mov
push
add
inc
jne
pop
sarl
or
jle
fimuls
es
push
in
sbb
mov
push
repz
ss
bound
sub
mov
gs
in
mov
adc
sbb
shl
add
int3
testl
jecxz
or
adc
sbb
xchg
sub
dec
xor
es
sbb
add
or
or
out
sbb
imul
pop
loope
pop
push
push
cmp
cmpb
xor
mov
fcompl
mov
jb
scas
pop
nop
jb
ret
pop
and
fcmovne
decb
in
fsubrs
imul
std
mov
popa
nop
xchg
es
loopne
sub
pop
push
rcrl
pop
mov
xchg
mov
dec
ret
xchg
loopne
out
cmp
pusha
stos
inc
repnz
data16
jbe
jne
pop
and
cmp
push
in
scas
out
sub
pushl
icebp
xchg
loope
in
inc
add
lret
pop
dec
clc
sarl
gs
out
enter
lret
jns
clc
stc
sbbb
push
nop
or
sahf
out
fsubl
sub
fcmovu
rcll
pop
inc
jge
pop
pop
xchg
xor
add
jp
call
cmp
jmp
fcmovu
adc
cwtl
push
fyl2x
arpl
lock
mov
jmp
mov
or
jno
das
jne
clc
insb
gs
pop
push
xor
jp
or
jp
or
xor
call
cmc
scas
aad
adc
mov
nop
mov
out
mov
call
push
std
je
and
mov
ljmp
mov
cmp
jno
push
outsb
pop
jno
loopne
xchg
ljmp
jmp
xor
add
insb
outsb
mov
mov
mov
inc
jne
push
insl
or
cmpsl
int
xchg
cmp
jbe
add
sub
xchg
sub
mov
stos
js
scas
mov
mov
pop
jbe
test
rclb
cltd
push
xchg
sub
adc
xor
dec
sub
loopne
jae
push
pusha
pop
sub
imul
pmulhuw
push
mov
pop
xchg
jmp
fwait
sub
pop
das
out
jb
mov
repz
imul
or
fmull
xlat
std
lret
loop
mov
cmp
adc
lret
or
rol
mov
lahf
fimull
lock
push
leave
lahf
mov
or
xor
fdiv
mov
pop
adc
and
gs
sub
pop
sub
xor
rcl
lock
pop
scas
push
add
cltd
ss
jl
hlt
mov
pop
xor
push
cmc
push
cmpsl
sbb
or
mov
jns
cltd
dec
xor
leave
dec
in
jb
inc
xor
fwait
mov
xor
inc
test
inc
push
fnsave
sbb
mov
and
shll
mov
and
cmp
xchg
fdivl
dec
adc
aaa
dec
mov
push
ret
jmp
xor
xchg
jns
cmp
dec
jns
pop
scas
mov
inc
xchg
fsub
jno
sbb
mov
pop
daa
push
fxch
mov
push
std
sub
mov
jp
fistpll
lods
jbe
mov
jnp
repnz
out
and
repz
sbb
push
push
out
inc
dec
add
pop
jmp
sbb
shlb
push
ljmp
pop
mov
cltd
shll
jno
cwtl
mov
scas
pop
mov
pop
xor
add
cmp
clc
aaa
sub
std
fbld
test
cmp
mov
adc
not
in
push
jl
and
jmp
add
inc
stc
out
cmp
mov
pop
jnp
lods
dec
test
inc
shlb
jno
mov
sbb
add
inc
imul
xor
sub
push
in
lds
mov
lcall
vpmadcswd
jnp
shl
pop
mov
adc
je
test
mov
pop
sub
add
cmc
test
dec
cld
inc
int
fdivrs
cmp
not
mov
lods
mov
shll
sub
mov
cwtl
xchg
sbb
into
cmp
add
push
dec
mov
repnz
sub
pop
dec
mov
pop
popa
or
jecxz
jns
inc
ficoml
gs
mov
cmp
jle
je
loopne
xlat
mov
ss
enter
jae
mov
pop
mov
pop
mov
xchg
pop
sbb
adc
jno
cmp
pusha
xchg
es
mov
lret
loop
test
or
jmp
aam
xchg
cs
nop
sbb
movsl
sub
pop
pop
jae
lods
adc
push
out
push
sub
push
cmc
addb
fsubrs
adc
sub
xchg
sbb
sbb
cs
stos
sbb
dec
sub
add
adcb
scas
mov
push
sti
or
jl
adc
and
jecxz
mov
icebp
stos
test
xor
xor
or
insb
ret
adc
out
jns
shlb
mov
je
xor
jne
sbb
call
ja
dec
dec
loopne
leave
andb
mov
pusha
enter
sub
jo
clc
loopne
adc
mov
inc
mov
es
fcomp
subb
cs
xor
add
lret
out
leave
sbb
dec
jmp
adc
jmp
scas
cs
xchg
je
xchg
cmp
imul
mov
ret
icebp
pop
xor
fcomip
mov
mov
and
cmp
inc
call
sbb
cmc
adc
adc
mov
jo
loope
xchg
add
xchg
notl
push
jl
outsl
fchs
loop
js
stos
sbb
xchg
mov
icebp
flds
cmp
xchg
fdivr
or
out
xor
bound
pop
jge
or
cmpsb
lds
imul
sub
jmp
stos
adc
push
ror
xchg
enter
xor
rorb
cwtl
mov
mov
icebp
mov
mov
inc
mov
mov
add
add
mov
in
popa
push
ss
cmp
in
adc
gs
dec
sub
flds
outsl
mov
ret
icebp
bound
lock
push
lret
ljmp
pop
mov
cld
cmp
xchg
jb
jo
or
lds
inc
outsb
icebp
arpl
sub
dec
in
push
hlt
jle
pop
jns
pop
lea
popf
sahf
push
push
dec
repnz
mov
std
std
sti
iret
mov
mov
and
dec
inc
xor
push
negb
cmp
mull
push
add
push
push
cli
or
push
fisubrs
loope
add
jl
stos
push
fwait
jp
jnp
pop
xchg
jle
add
pop
cltd
mov
sbb
and
enter
lea
fwait
js
loope
adc
add
std
adc
daa
or
sbb
sbb
xor
xor
mov
cmp
mov
pop
inc
cmp
insl
sahf
mov
dec
cli
inc
mov
cli
dec
or
js
jbe
rcll
add
mov
push
addr16
xor
inc
mov
jae
sub
arpl
mov
icebp
adc
popa
test
jno,pt
xor
or
xchg
or
cltd
jo
sarb
or
je
jo
mov
dec
mov
inc
hlt
sbb
popa
addr16
aam
or
test
fcoms
addb
mov
add
cld
lea
sarl
aad
sub
je
jge
or
push
int3
push
into
pop
nop
adc
or
cmc
push
and
dec
or
shrl
xor
cmpl
mov
addr16
shrl
pushf
dec
test
mov
or
jnp
fildll
divl
lea
sbb
ret
outsl
scas
addr16
int3
push
jmp
daa
das
add
cmp
decb
flds
cmp
pop
lret
cmpsl
sbb
mov
cmc
push
and
mov
and
dec
fnsave
xchg
test
mov
mov
inc
lods
jns
out
mov
mov
call
mov
imul
push
pop
aam
sub
mov
aad
and
mov
mov
jg
test
inc
arpl
jmp
lcall
lods
add
pop
push
pop
sub
bound
push
adc
add
hlt
pop
sub
and
and
loop
inc
mov
pop
add
hlt
imul
incl
dec
adc
push
adcl
iret
xor
fimuls
cwtl
gs
jae
xchg
push
inc
sbb
push
dec
popf
sbb
dec
push
pusha
cmp
loope
pop
cwtl
xchg
loopne
jmp
xor
push
loopne
mov
das
testb
sub
jmp
mov
mov
mov
mov
in
mov
cmp
jo
push
lods
jecxz
push
push
daa
or
cmp
add
pop
insb
leave
int
iret
push
mov
fisttpll
call
aas
rcrl
push
lahf
adc
xchg
jae
mov
sbb
jns
decl
push
push
cmp
mov
outsl
xchg
pop
mov
inc
mov
push
or
adc
stc
loope
lds
xor
cmp
enter
mov
add
push
scas
xchg
jmp
push
adc
inc
xchg
pop
pop
vpor
mov
dec
call
pop
addr16
popa
mov
pop
or
notb
mov
outsb
push
mov
jmp
push
or
mov
arpl
mov
dec
mov
and
push
mov
ficoml
in
scas
xchg
popf
cmp
sub
dec
pop
loope
push
add
sbb
and
movsb
sarb
cmp
movsb
outsb
pop
mov
mov
out
jb
rcrl
lock
cmp
aaa
loope
shlb
or
inc
icebp
cmp
push
fsubrl
sahf
add
inc
lock
sub
lock
dec
xchg
mov
into
mov
in
cs
test
pop
out
in
mov
dec
cmp
dec
insb
das
mov
mov
ret
add
push
sub
daa
arpl
ljmp
jmp
sbb
push
jae
and
out
icebp
mov
adc
pusha
loop
xchg
push
mov
push
inc
mov
sbb
push
lock
and
or
and
and
mov
pop
sub
or
fstps
xor
pop
scas
xchg
pusha
cli
pop
push
movb
ret
cmp
in
mov
sub
sbb
xor
loope
arpl
std
out
inc
fidivs
xor
movsl
std
sbb
les
cmpsb
cli
jns
sbb
push
pop
push
movsb
aas
xor
lcall
cli
loop
mov
das
outsl
stos
add
imul
fwait
jecxz
cmp
lcall
push
icebp
push
add
imul
or
and
popa
dec
je
sbb
repz
popa
ss
jns
lock
mov
clc
and
leave
shrl
xor
subl
clc
ja
pop
add
lahf
mov
adc
pop
shl
xor
xchg
push
xchg
test
sahf
xor
adc
rcrb
insl
pop
pop
xlat
sti
fwait
inc
add
cmp
imul
xchg
mov
outsb
adc
inc
outsb
imul
addr16
jp
es
lea
cmp
xor
push
dec
lods
fsubrp
cmp
fnstenv
xchg
xchg
jg
hlt
jl
cwtl
leave
mov
xlat
mov
loope
jl
clc
cmp
xor
add
les
jle
sub
repz
jmp
jmp
lds
subl
xor
fsubrl
scas
mov
test
mov
dec
push
aaa
xchg
rcr
outsb
push
sar
rcr
mov
push
notl
cmp
stc
jb
pop
xchg
dec
mov
mov
sub
insb
jmp
mov
arpl
icebp
in
jg
ljmp
pop
js
add
push
or
mov
data16
in
mov
sub
fnsave
dec
xor
add
pop
addr16
adc
lret
cltd
repnz
fs
js
pop
cmp
sub
xchg
clc
hlt
pushf
jp
and
cmp
cwtl
add
cmp
icebp
jl
test
mov
jb
ja
adcb
daa
pop
shll
ss
cld
sbb
add
or
pop
ret
loopne
cwtl
lahf
sti
ljmp
add
popa
mov
mov
pop
pop
fldenv
pusha
or
test
aaa
add
sbb
lods
addr16
je
fimuls
mov
addb
aam
add
mov
and
int
jmp
je
scas
and
sbb
sub
mov
ret
mov
lods
sbb
adc
mov
imul
push
pop
jo
cmp
rclb
push
enter
out
add
inc
js
insl
push
dec
stc
sbb
jo
daa
adc
movsl
pusha
sbb
roll
pop
inc
mov
les
sub
hlt
call
push
adc
sbb
jns
lds
negl
xchg
nop
out
mov
add
lret
or
lock
dec
test
cmp
fcoml
cwtl
add
pop
loop
mov
sbb
or
cmp
out
mov
cmp
xchg
or
lock
sbb
mov
mov
pushf
jl
lret
mov
repnz
shrl
fdiv
push
cmp
or
loop
aaa
mov
pop
sbb
int3
mov
and
add
adc
sbb
dec
sub
jnp
pop
repnz
fs
push
out
cmp
inc
aas
rorb
inc
sub
mov
or
jmp
xor
arpl
ljmp
lock
repz
outsb
sahf
mov
xlat
add
mov
mov
out
xchg
daa
or
xchg
imul
imul
adc
insl
mov
daa
xchg
sub
or
dec
and
aad
popf
jmp
mov
cmpsl
dec
in
sbb
dec
xchg
dec
fs
in
aad
jne
stos
xlat
ficoms
div
xor
adc
push
sub
inc
testl
scas
xor
fsub
and
lods
faddl
push
popf
adc
xchg
xchg
adc
pop
test
inc
add
inc
mov
adcb
add
les
mov
arpl
sbb
adc
adc
jne
jnp
divl
add
jmp
pop
test
adc
adc
out
ficompl
clc
test
cmp
jp
scas
ss
or
and
ja
scas
adc
mov
adc
push
mov
testl
rolb
aam
cmp
in
ret
shll
movsb
dec
sub
test
fistpll
push
dec
lcall
adc
outsl
popa
push
popf
popf
pop
repz
adc
jno
sbb
movsb
cmp
clc
jo
js
mov
sub
lret
andl
mov
lea
ret
mov
push
clc
test
lods
mov
test
outsl
pop
jle
cmp
div
fildll
pushf
insl
mov
out
xchg
cmp
fwait
stos
sub
pop
aaa
decb
fsubs
jge
shrw
sbbb
shl
lea
mov
test
jmp
mov
lret
jmp
test
and
cmc
or
outsb
cmp
fcom
test
inc
sbb
out
mov
dec
and
scas
push
mov
cmc
xchg
dec
sbb
ficoms
adc
cmp
lods
xchg
rcr
adcl
xor
dec
shlb
xchg
inc
push
xchg
inc
std
pop
and
cmp
push
mov
cmc
add
jb
mov
jg
mov
cmpsb
jg
xor
xlat
into
out
xchg
or
lods
stos
xchg
leave
adc
mov
mov
pop
push
test
clc
xchg
scas
adc
insl
in
jecxz
mov
dec
popf
ret
iret
outsb
cmp
adc
cltd
inc
mov
pop
fs
and
pop
dec
dec
mov
out
test
or
gs
fsubrs
and
add
sub
pop
outsb
std
pushf
mov
test
pusha
shll
push
aam
call
mov
mov
sbb
sub
dec
fildll
incb
js
repnz
idivb
mov
xchg
hlt
lods
pop
jae
cmp
xchg
cmp
xor
add
or
mov
xchg
imul
mov
test
mov
ret
mov
pop
test
test
xchg
mov
jmp
mov
adc
cli
mov
fwait
inc
ja
data16
ds
push
mov
icebp
lahf
repnz
pop
clc
sub
test
mov
int
mov
adcb
push
lret
xchg
mov
pop
and
fsubs
xlat
orl
xor
fiaddl
sub
and
xlat
pop
push
or
aad
ret
movsb
int
ret
ja
add
test
push
xor
stc
fs
sbb
daa
les
or
sub
sbb
and
mov
mov
dec
cmp
xlat
into
jnp
shll
or
iret
bound
scas
sarb
xchg
jle
mov
dec
hlt
jle
out
adc
jnp
das
jb
jae
push
push
int3
in
adcl
jg
or
mov
loopne
das
movsl
les
jmp
popa
vunpcklps
in
jbe
popa
in
iret
mov
out
xchg
das
bound
lahf
or
dec
insb
test
push
jns
lcall
pop
mov
insb
sbb
ss
shl
mov
loop
inc
fwait
pop
or
in
bound
into
push
push
dec
pop
inc
lahf
mov
or
mov
inc
cmp
cmpsl
adc
mov
xchg
xlat
mov
push
dec
mov
imul
push
push
sbb
in
jbe
test
cmp
fimuls
xor
adc
push
stc
orl
bound
outsl
xchg
movsl
daa
adc
push
iret
sub
loope,pt
stos
xchg
dec
mov
sub
loopne
pop
add
test
scas
sbb
outsb
add
mov
jbe
xor
mov
pop
jae
adc
dec
xchg
inc
push
jb
lahf
les
pop
js
repnz
or
stos
and
shrb
fwait
or
add
or
out
push
push
mov
xchg
pop
aas
into
mov
fs
push
push
pop
sbb
jns
xchg
out
jg
cmpsb
push
xchg
in
xchg
adc
fs
repnz
bound
sbb
stos
daa
ret
push
mov
adc
loopne
and
repz
nop
and
out
xchg
jge
sbb
mov
stc
test
jge
xor
push
xchg
and
and
jge
or
imul
cmp
sti
gs
cmp
push
adc
push
push
dec
mov
addb
decb
mov
add
sub
ljmp
imul
in
sbb
lea
lods
dec
pusha
push
pop
mov
dec
into
je
dec
mov
int
bound
mov
mov
and
dec
pop
adc
xchg
or
pop
lods
js
out
xor
lahf
aaa
xchg
int3
cmp
int
lds
nop
sbb
rclb
or
jge
test
and
std
icebp
les
mov
mov
sub
orl
jge
fwait
pop
shl
mov
jnp
stc
fwait
xchg
and
loope
jb
repz
and
cmpl
and
idivl
fisubl
insl
sub
je
or
mov
arpl
aaa
push
ret
lods
xchg
push
cltd
leave
jo
adc
pop
fistpl
rclb
mov
sub
dec
pop
pop
decl
sbb
dec
pushf
and
sahf
mov
scas
fsubs
jo
outsb
push
fcomps
imul
insl
inc
int
push
cmp
das
test
push
ret
scas
sbb
leave
cmp
mov
jne
dec
nop
lods
push
aas
dec
dec
shll
xchg
lret
adc
outsb
or
mov
es
and
pop
aam
das
add
popa
sub
jb
dec
dec
inc
mov
out
or
imul
push
xchg
xlat
push
fldl
lods
pop
fdivr
out
loopne
insl
jle
loop
xor
add
mov
movsb
mov
cmp
loopne
addr16
xor
sahf
ja
or
das
mov
icebp
sbb
cld
fadd
das
push
mov
mov
loope
pop
add
hlt
jmp
dec
xchg
mov
into
push
cmp
fdivr
fnstsw
cs
mov
mov
fcompl
pop
adc
inc
xchg
jnp
mov
and
ss
or
pop
sbb
push
test
aaa
das
in
sub
test
fdivrl
jmp
clc
xlat
das
imul
xchg
out
in
xor
push
cmpsb
inc
dec
xchg
xchg
and
push
aad
outsl
pop
sub
mov
in
lret
aam
xchg
cld
pop
loopne
bound
in
xor
mov
lods
rclb
jno
out
xchg
mov
and
or
pop
cs
rorb
rorb
mov
mov
enter
and
jmp
cmc
pop
out
dec
sub
pop
std
add
cmp
notb
data16
mov
push
and
xchg
sbb
push
jae
pop
push
addl
sbb
dec
js
out
notl
pop
std
or
add
mov
les
test
fpatan
or
mov
shr
fisttps
out
add
out
insb
movl
push
idivb
repz
dec
sub
adc
xchg
jmp
mov
ljmp
mov
les
mov
mov
int
adc
pop
jecxz
xchg
enter
sahf
xor
xor
sub
xchg
cmp
mov
dec
pushf
add
les
movsl
push
ficompl
adc
xchg
rclb
sub
mov
inc
vpsubw
and
or
mov
and
cwtl
into
push
ret
add
imul
mov
stos
jae
fs
shrb
jg
fcmovnb
inc
mov
xchg
xchg
jae
movsb
jl
out
cld
or
aad
add
setl
jge
jg
pop
ror
lods
inc
sbb
mov
enter
aaa
jb
in
dec
and
dec
cmp
mov
scas
add
adc
aaa
add
mov
xor
and
gs
stos
add
fmuls
enter
movsb
ljmp
adc
rcrw
repnz
pushf
inc
les
out
fsubp
xor
push
xor
roll
roll
sub
pop
in
cwtl
inc
inc
scas
or
xor
push
in
dec
sub
adc
pop
dec
cltd
daa
int
adc
inc
xchg
adc
mov
mov
testb
clc
or
pop
into
pop
pop
mov
cmp
sbb
push
inc
test
mov
mov
and
add
leave
sahf
mov
rorb
push
pushaw
ret
shr
loope
lea
nop
stc
aaa
ss
sub
rorb
xchg
imul
push
or
xor
aam
es
test
aad
shll
fldenv
jne
mov
and
mov
adcl
lahf
imul
xor
fstl
inc
dec
cmp
popf
jge
jle
jb
fwait
sbb
or
cs
mull
lods
cmpsb
in
sub
dec
dec
adc
mov
popa
scas
call
dec
test
loope
adcl
in
mov
push
cld
inc
scas
idivb
cli
inc
ffree
mov
push
ds
mov
stc
into
push
ljmp
aas
idivb
icebp
push
push
je
cmp
aad
dec
lcall
insb
loopne
sbbl
add
cmp
xor
dec
ficoms
sub
cmc
ds
add
push
mov
mov
dec
mov
jnp
sbb
es
fisubl
mov
mov
mov
dec
sbb
cwtl
jb
pop
scas
icebp
cltd
mov
xchg
xchg
xchg
in
imul
aaa
ljmp
jecxz
in
jb
sbb
jo
scas
xchg
add
dec
out
jno
cmc
fwait
int3
push
leave
mov
add
and
call
nop
leave
mov
stc
mov
push
lods
scas
add
adc
cmp
push
jb
repz
data16
push
xchg
cmp
lret
iret
dec
int
jae
stos
add
jno
push
adc
sub
adc
sub
mov
push
pusha
cmp
ret
std
mov
cs
inc
push
jae
lcall
mov
jmp
add
scas
inc
out
mov
repz
or
in
insl
mov
loope
or
xchg
lea
dec
mov
fcmovnbe
jb
sbb
cs
aaa
cld
xchg
inc
or
call
inc
leave
movsl
add
test
mov
pop
pushf
mov
add
gs
push
mov
mov
ljmp
and
dec
cltd
xor
pop
pop
dec
pop
cmp
xchg
fists
lea
sti
dec
xchg
dec
push
stos
jmp
cltd
mov
or
aad
ljmp
push
cmpsl
mov
and
push
xchg
xchg
mov
clc
cmp
ss
mov
push
fdivrp
jl
stc
adc
gs
pushf
jle
mov
stos
add
mov
shlb
popa
pop
repz
outsl
ljmp
mov
jae
lock
mov
jbe
pop
andb
push
adc
je
jg
outsl
push
cltd
or
inc
pop
iret
mov
adc
js
cltd
daa
shl
push
fstpl
addr16
mov
xchg
ffreep
adc
xchg
ja
jp
mov
inc
add
addb
mov
sbb
xchg
ja
adc
and
das
add
mov
xchg
out
fbld
roll
incl
shll
adc
test
add
pop
cmp
cmp
or
mov
cmp
ss
iret
add
and
add
push
cmp
cmc
pop
mov
test
mov
rclb
xor
daa
test
mov
dec
mov
enter
std
push
faddl
cwtl
xchg
cmc
fsts
or
jp
inc
cmp
inc
sub
or
jne
arpl
aad
jg
mov
insl
mov
out
xor
push
mov
jns
jo
mov
insl
push
mov
div
mov
and
mov
cmpsl
push
imul
mov
sub
aad
push
fildll
sub
fwait
ftst
adc
sbb
lahf
mov
pop
pop
sub
mov
add
push
pop
adc
rol
or
mov
cmpsb
lcall
incb
popa
push
xor
in
pushf
aas
popa
adc
sbb
push
pushf
and
sbb
stos
mov
leave
xchg
pop
roll
lea
or
out
je
pushf
or
jne
scas
aad
dec
stos
add
fcompl
push
popa
xlat
inc
xchg
or
ss
mov
jl
jecxz
pop
sbb
pop
sub
mov
xchg
dec
sub
mov
jecxz
fildl
cmp
inc
sub
or
dec
fidivl
add
add
addr16
sub
cli
clc
and
push
jne
xchg
pop
in
rcl
and
sub
jae
mov
or
xchg
cmc
jmp
lods
mov
mov
into
in
fwait
pop
xchg
mov
cmp
sahf
sbb
adc
mov
sbbl
cli
pop
mov
cmp
mov
sub
enter
jnp
jecxz
adc
xor
ja
in
cmpsb
mov
xor
jae
jmp
repnz
clc
stos
test
sbb
mov
push
jbe
mov
mov
mov
sbb
sbbl
arpl
mov
jbe
rcr
out
push
divb
xchg
jne
lods
addr16
cmc
mov
ss
mov
popa
rcll
cltd
test
lahf
pop
dec
sbb
jl
insb
add
jl
and
in
shll
jne
insl
shrl
scas
push
adc
insb
pop
add
xor
fisttpl
les
add
outsb
addl
push
add
mov
dec
mov
xor
fdivl
push
dec
and
pusha
in
stos
cmovg
push
iret
mov
and
dec
loop
or
push
jb
in
jecxz
arpl
shll
pop
jbe
gs
outsb
icebp
cld
push
scas
subl
outsl
ljmp
add
inc
cmp
sub
fstps
jns
adc
jo
adc
pop
jno
mov
sub
or
jg
fsubrl
es
adc
mov
push
lret
xchg
mov
das
pop
add
sub
pop
jle
add
movb
ljmp
pop
xor
push
mov
neg
mov
xchg
cwtl
je
ss
adc
sbb
pop
adc
pop
stc
mov
pmaxub
sbbb
cmp
xchg
jmp
add
sbb
xor
js
cltd
jae
push
mov
sbbl
scas
adc
mov
sbb
xchg
xchg
inc
pop
mov
in
cs
lret
int3
scas
add
xor
flds
fsubrs
mov
pop
addr16
lods
std
pop
sbbb
jne
outsl
in
popa
mov
lret
es
cltd
jne
or
jno
push
popa
ljmp
push
loope
sub
lods
add
add
xor
or
hlt
lock
mov
fsubrs
out
xlat
push
ret
subl
mov
mov
mov
mov
repnz
stc
mov
enter
rcl
mov
push
daa
sbb
lea
pop
cmp
test
add
or
mov
testb
jmp
stos
shrl
xor
adc
aad
mov
pop
in
pushf
stc
mov
add
add
pop
pop
repnz
and
ud0
and
lcall
pop
imul
out
sarb
call
dec
add
xchg
sahf
sbb
push
in
xchg
push
xchg
add
enter
push
xor
lahf
sbb
insb
bound
and
fnstenv
mov
jmp
mov
iret
xor
pop
xchg
cld
inc
xor
out
push
aad
clc
mov
std
mov
outsb
jecxz
insl
aaa
addl
sbb
imul
cmp
mov
mov
iret
cld
mov
adcb
pop
lea
int
xlat
mov
outsl
fsubrs
xor
and
data16
popf
arpl
movsb
push
out
push
inc
in
mov
inc
push
or
mov
aam
stos
in
in
fadds
dec
scas
push
jno
xor
cmc
ret
jb
jns
adc
fsubl
dec
xchg
xchg
sub
sbb
and
in
pushl
mov
in
mov
sub
sub
imul
int
mov
std
js
and
add
popf
rcr
leave
enter
in
lea
mov
jge
dec
decb
test
mov
pop
in
fs
pushf
mov
push
and
sbb
mov
addr16
cmpsb
sub
or
rcrb
pushf
je
into
sub
pop
int
in
and
lods
inc
fimull
addr16
xor
cmp
jge
add
push
inc
inc
xor
adc
out
push
out
lds
dec
bnd
jns
scas
shl
mov
ret
sbbl
shlb
ds
sbb
mov
dec
xchg
loope
stos
aas
pop
and
scas
or
in
es
imul
nop
stc
test
clc
push
or
push
in
push
ja
jge
xor
mov
fwait
lock
push
pushf
fcmovne
mov
shr
mov
adc
orb
ss
ficompl
scas
ret
adc
mov
sub
adc
out
jnp
js
xor
addr16
push
mov
jl
pushf
mov
inc
xchg
mov
sub
inc
ja
xor
insb
rcrl
loopne
fnstsw
in
sub
and
pop
stos
dec
out
push
jo
ret
pop
push
mov
push
mov
jae
dec
stc
dec
adc
mov
ja,pt
and
lcall
popa
jle
sbb
clc
mov
inc
lock
ds
bound
shr
push
jne
addr16
add
mov
fwait
sbb
pop
mov
push
inc
xor
rol
and
xchg
leave
xchg
mov
mov
fildl
ja
outsb
xor
inc
inc
arpl
add
pop
out
sub
push
stos
cmp
outsl
mov
test
insb
les
push
out
cmp
pop
shrl
shl
push
mov
mov
cmc
jns
adc
cmp
inc
bound
sbb
sub
cmp
inc
scas
xchg
sub
xor
adc
lahf
jmp
xchg
movl
icebp
jge
stc
sbb
jl
sub
lea
das
jno
pop
cmp
or
imul
cmp
shlb
push
das
xor
sub
push
sbb
jnp
dec
mov
push
insl
and
cs
jbe
pop
push
cmp
outsb
mov
or
cmpsb
mov
lods
or
ret
ficompl
mov
push
mov
out
xchg
jp
filds
and
cld
mov
add
rcrl
cltd
or
insl
adc
sahf
pusha
mov
lret
testl
mov
lds
xorl
xor
xchg
pushf
or
mov
mov
mov
das
pop
mov
in
xchg
stos
or
subl
icebp
lods
lds
enter
pop
test
jecxz
rolb
imul
ljmp
aam
xchg
sub
mov
jg
mov
shrb
adc
mov
mov
outsb
mov
jge
hlt
inc
mov
pop
mov
mov
sbb
ret
mov
ja
sub
mov
push
pop
lret
shrl
aas
mov
jbe
lods
sti
repnz
xor
enter
ja
or
mov
pop
xchg
pop
push
or
loop
cmp
loopne
int
call
fstl
movsl
xor
imul
into
cmpsb
sarb
rcrb
movsl
lret
test
orb
lods
adc
inc
ret
fs
xor
and
pop
dec
imul
xchg
xchg
xor
pushl
imul
inc
xchg
sub
cmp
cmp
mov
negl
out
push
aad
sub
je
les
push
jns
pop
movd
mov
rcrl
aas
push
ds
out
scas
stc
ss
cmp
adc
push
and
cmp
mov
ljmp
inc
mov
cli
adc
insb
mov
jae
pop
dec
pop
mov
scas
mov
pushf
arpl
mov
fisubl
arpl
push
pop
cld
aas
cmp
test
or
popf
push
pop
mov
push
test
lea
pop
roll
mov
shrl
push
cmp
mov
pop
add
xor
jmp
clc
inc
inc
lret
mov
cmp
cmp
dec
push
xchg
fimuls
movsl
dec
fcompl
and
stos
xchg
dec
push
hlt
int
add
jae
orb
push
hlt
dec
hlt
dec
xor
arpl
lea
test
xor
or
rorb
nop
dec
lods
and
jecxz
rorl
mov
loop
pop
xacquire
push
rorl
push
in
cmp
and
mov
pushf
fldl
dec
mov
push
cmp
mov
pop
xor
lahf
mov
movsl
xor
xchg
stc
jmp
scas
int
cs
pop
and
inc
cwtl
jbe
xchg
or
pop
dec
and
inc
xchg
jecxz
in
out
sub
mov
pop
sti
sub
xorb
push
pop
ficomps
mov
push
pop
adc
inc
mov
mov
xor
fdivs
or
jge
rcrb
ficompl
or
bound
add
xchg
fistps
xchg
pop
xor
mov
es
call
stc
shlb
xor
icebp
pop
lahf
shl
mov
out
fwait
cmp
jmp
sbb
or
fcmove
pop
stos
mov
push
loop
in
fs
jle
add
mov
push
jp
out
lock
scas
rcrb
sub
mov
sub
mov
push
inc
dec
sub
std
fdiv
fidivs
pop
xlat
xchg
mov
cltd
mov
gs
mov
xor
mov
pushf
loopne
push
mov
adc
jmp
jecxz
pop
pusha
jb
cmc
pop
mov
sub
add
outsl
dec
mov
repz
jnp
jnp
jmp
mov
xchg
inc
sbb
lcall
inc
mov
push
push
pop
xor
dec
dec
cmp
aas
jle
lea
fildll
gs
in
jmp
jo
iret
xor
jbe
jg
jns
inc
call
dec
xchg
adc
aaa
ja
jb
or
ret
adc
pushf
xchg
clc
mov
cmpl
lods
sti
cmp
ja
jne
subb
scas
out
in
cwtl
call
mov
aad
cmp
pop
aaa
add
mov
xchg
mov
jp
es
mov
and
lret
push
icebp
pop
popa
hlt
scas
out
dec
cmp
cli
jo
test
and
lods
daa
sub
popf
pop
fucomp
out
pop
add
mov
xor
fsub
cmp
jae
dec
push
out
ljmp
jp
test
mov
push
rorl
pusha
mov
stc
xchg
mov
xchg
sub
cs
xor
scas
sub
inc
push
cmp
xchg
inc
fidivrl
lcall
xchg
push
dec
clc
sub
aam
out
push
cs
mov
dec
cwtl
mov
test
mov
push
popa
popl
hlt
pop
mov
outsb
iret
enter
jnp
cmc
lock
adc
in
add
ficomps
movsb
xor
push
add
xchg
inc
ret
popa
jecxz
pop
les
xor
push
lock
std
test
mov
sbb
pop
in
and
mov
mov
lret
shll
sbb
mov
mov
mov
aam
or
mov
mov
insb
sbb
repnz
scas
icebp
ja
aas
push
mov
or
ss
xor
xor
dec
jae
gs
jl
fildl
lods
cld
frstor
pop
ret
movsb
mov
mov
je
or
jbe
cwtl
jo
pusha
addr16
popf
cmp
icebp
test
pushf
jge
decl
add
imul
into
xor
decb
add
lods
dec
add
pop
cltd
jge
rorb
sti
es
repz
js
sahf
push
movsl
xchg
jp
pop
jae
insb
push
loope
sbb
fisubrs
es
mov
cmpsb
push
and
push
dec
popa
pop
add
push
shll
mov
cmc
add
sarb
das
clc
cmp
push
mov
jl
adc
icebp
shlb
xchg
call
push
and
cmc
cli
cltd
xor
mov
jbe
sub
add
inc
and
xchg
movsb
enter
pop
ljmp
pusha
andl
ja
jb
sahf
lods
jp
mov
and
mov
adc
jmp
lret
jo
xlat
lret
mov
add
lds
cmp
sbb
xlat
mulb
scas
movsb
and
stos
push
push
inc
cmc
int3
adc
mov
jno
and
mov
adc
lods
sub
decb
insb
xor
stos
sub
push
pop
jb
inc
std
mov
sbb
stc
pop
dec
call
rorl
adc
loop
push
jno
int3
int
mov
xor
rclb
testl
subl
push
repnz
cli
mov
inc
adc
lcall
mov
and
mov
sub
loopne
and
enter
mov
sub
lcall
cwtl
or
andl
sti
aaa
dec
js
movsb
sub
xlat
cmpsl
sub
test
ljmp
idivl
push
inc
movsl
xadd
sbbb
mov
pop
dec
adc
cmp
or
mov
pop
mov
popf
insl
out
jp
loop
mov
loope
pushf
sbb
int
mov
mov
pusha
mov
or
jecxz
jnp
sbb
flds
and
push
dec
popa
mov
dec
fcomi
jbe
add
repnz
insl
adc
jne
sub
test
loope
or
je
leave
jae
adc
decl
ret
jbe
popf
xor
sub
push
mov
cmp
or
das
sub
dec
clc
lretw
dec
push
inc
mov
jg
call
in
mov
fldenv
orb
mov
sarl
repz
inc
mov
dec
mov
hlt
fidivs
mov
mov
ret
jae
adc
lock
pop
pop
pop
mov
ja
mov
push
dec
jae
xlat
test
out
jge
ret
mov
fwait
mov
adc
aaa
and
fcomps
mov
pop
ret
stc
and
xchg
cmp
or
mov
add
fldenv
sbb
dec
int
push
lahf
hlt
fs
rcrl
mov
sub
cltd
push
lds
loope
cmpsb
cmp
daa
cmp
mov
es
ds
inc
or
cmpsl
inc
insb
push
ss
mov
out
lds
cltd
push
adc
xchg
or
sarl
xrelease
loop
add
pop
cli
pop
push
inc
scas
or
popf
push
mov
hlt
lods
jnp
divb
faddp
adc
pushf
test
jb
pop
xchg
and
push
jno
ficoml
jmp
out
in
frstor
loope
ljmp
jge
insb
jnp
or
add
out
push
and
push
xor
lcall
jb
mov
jp
sahf
mov
in
and
and
sbb
add
cmp
lahf
aas
shrl
imul
xor
test
jno
and
cmc
in
insb
adc
out
jb
or
js
scas
sbb
inc
jne
rcrb
repnz
loopne
fdivs
test
ds
dec
mov
jge
jae
pop
and
pop
pop
and
in
ret
add
pop
sarb
int
mov
dec
pop
clc
push
adc
jbe
xor
inc
mov
movsb
xor
stc
in
jecxz
xchg
aam
rclb
push
fsubr
xlat
jmp
fldt
rcrb
dec
jge
jmp
sar
mov
jp
es
xor
or
or
cli
push
mov
clc
jmp
test
inc
xchg
sbb
or
clc
dec
xchg
test
dec
adc
push
mov
xchg
adc
jecxz
push
push
les
imul
clc
or
add
push
test
pop
pop
out
add
repz
dec
sub
xor
aas
test
icebp
int3
ficomps
or
mov
xchg
sbb
ret
mov
mov
sub
jo
subb
mov
rclb
mov
ljmp
in
data16
xchg
cld
sbb
enter
push
sahf
dec
pop
orl
sub
in
and
cwtl
sbb
aad
mov
xor
jne,pn
add
jnp
pusha
mov
mov
pop
movsl
cmp
jmp
shrb
loop
sar
push
sbb
jns
dec
xchg
sub
test
scas
enter
jg
shl
ret
mov
sub
push
xchg
mov
bound
sbb
lds
and
sti
subl
push
pop
mov
cmp
pop
mov
xchg
cmpsl
sti
mov
cmpl
add
es
mov
insb
xor
out
add
jo
pop
clc
imul
xchg
out
fstpt
test
sti
mov
das
sub
or
push
je
repnz
xchg
movsl
mov
jge
jecxz
lret
mov
aas
add
jb
sbb
or
imul
sub
lcall
fisttpll
sbb
add
loopne
push
enter
sub
pop
push
pop
push
iret
daa
pop
fxch
repz
test
fnstsw
jmp
mull
add
ret
push
pop
scas
mov
xor
out
jle
in
push
lcall
fwait
cmpsl
decl
mov
into
js
mov
dec
pop
ja
lock
pop
or
mov
pop
push
mov
xchg
incl
add
ljmp
push
lods
xchg
mov
and
stos
test
cmpb
jb
jne
dec
test
adc
addb
ss
adc
out
mov
packssdw
flds
cmp
std
addr16
lahf
dec
loope
mov
movsl
into
push
adc
sahf
scas
fisubrl
in
push
ret
pop
dec
xor
fimull
and
xchg
mov
stc
fdivrl
imul
sub
orb
es
adc
iret
faddl
pop
mov
and
in
mov
push
push
lahf
inc
mov
mov
sti
leave
pop
inc
out
xchg
or
cmp
or
or
mov
jno
lods
mov
rorl
cmpsl
and
ret
loope
mov
shrb
lret
in
pusha
sbb
inc
or
push
or
push
xor
or
sub
jmp
icebp
mov
stos
dec
mov
mov
lret
emms
dec
cs
aad
rcll
cmpsb
xor
rcr
aad
add
mov
les
shll
stos
cmp
mov
div
xor
ret
les
pop
fcom
xor
jbe
push
jo
clc
aaa
fcoms
xlat
inc
out
xchg
out
fwait
rcr
insb
cwtl
loopne
push
lcall
sbb
mov
mov
xchg
pop
fildll
push
hlt
or
outsl
fildll
mov
imul
mov
ljmp
xchg
call
adc
xlat
repz
test
push
cmp
mov
jne
mov
cmp
mov
je
scas
movl
int
ds
dec
addl
rcl
out
and
addr16
and
mov
add
and
fs
mov
hlt
insl
pop
fcmove
push
call
or
in
sub
inc
popa
inc
xor
mov
pop
es
jl
mov
lret
inc
cmp
sti
in
rorb
std
dec
sti
push
test
dec
test
shrb
xor
lea
aam
out
and
fwait
inc
mov
dec
fistpl
out
xchg
mov
xchg
loope
mov
mov
test
outsb
loop
pop
and
sub
arpl
call
sbb
inc
clc
clc
mov
mov
into
or
sub
stc
je
icebp
repnz
outsl
rcll
mov
pusha
mov
rolb
outsb
jecxz
fcoms
iret
sbb
fidivrs
das
jl
addr16
jno
pop
pushf
mov
mov
lcall
push
push
cmc
mov
jnp
or
push
sub
fsubrl
pop
pop
push
adc
jmp
mov
xchg
mov
jb
xor
test
xor
sub
jecxz
jg
ret
mov
std
xchg
insb
sbb
xchg
addr16
inc
xor
sub
xor
push
adcl
adc
int
pop
sahf
int
mov
or
shl
or
inc
xchg
jns
ret
lcall
push
pop
push
ret
ficoms
xchg
adc
out
fldl
std
xchg
fcoml
insb
jge
test
jl
sub
leave
jl
fsts
lcall
pop
sbb
gs
mov
push
hlt
pcmpeqb
not
mov
push
enter
cmp
push
scas
ret
enter
or
push
xor
jle
jb
xchg
add
fwait
push
mov
mov
jle
in
mov
jb
lods
mov
inc
jbe
lds
out
rcll
xor
cmp
adcb
push
jecxz
push
rclb
xlat
push
inc
mov
push
xchg
mov
fimull
idivb
sbb
mov
iret
out
sbb
xchg
addr16
insb
mov
ss
sub
ljmp
dec
xchg
lods
sbb
shll
sti
mul
inc
jno
push
pop
lret
int
test
pop
and
shrb
loop
jae
cmpsl
movsb
adc
adc
aas
push
outsl
in
fdivs
repz
cmpsb
addr16
cmc
add
outsl
mov
nop
dec
js
test
and
popf
test
mov
or
xlat
fadds
xchg
fidivs
xchg
jne
in
lods
int
subb
idiv
adc
mov
or
mov
jno
nop
idivb
mov
pop
dec
shlb
mov
sbb
sub
inc
les
push
aas
sub
inc
jg
pop
js
push
inc
mov
loope
mov
cli
out
dec
loop
pop
dec
mov
fsubrl
push
push
mov
fdivrl
mov
js
ljmp
jle
cmp
fdivrs
lcall
stc
push
push
sahf
daa
jo
cmp
inc
jno
orb
xor
cs
icebp
dec
ret
mov
pop
mov
cwtl
jb
sbb
mov
adc
test
sbb
loopne
jae
xchg
jns
rcrl
fucomp
mov
rcrb
cmp
in
test
pop
mov
pop
je
add
pop
arpl
push
xor
pusha
mov
mov
popf
xchg
or
or
dec
mov
sub
dec
cmp
fwait
jl
and
clc
out
pop
aad
dec
push
std
xor
rolb
jmp
test
mov
push
mov
iret
int3
fcoms
sbb
arpl
movsl
fstpl
mov
cli
fnstcw
rclb
jmp
push
out
popf
and
pop
movsl
leave
jnp
sub
loope
pushf
jne
and
inc
aaa
xor
fs
push
push
out
stc
in
popa
mov
aam
fisttps
in
fwait
loope
ss
mov
add
xlat
jns
sub
jb
xor
push
pushaw
jecxz
adcb
rorl
jno
pop
cltd
mov
ret
int
adc
jne
mov
test
push
rol
jle
lods
mov
jb
pop
dec
or
das
sbb
lahf
pop
rep
repnz
xchg
imul
enter
ja
loope
sub
jns
mov
dec
push
fdivp
mov
jns
imul
fmull
jnp
clc
jmp
push
push
or
mov
lret
stc
jge
sbb
rcl
shr
xor
fstpl
les
or
ljmp
mov
xor
insb
pop
insb
adc
sbb
std
cmp
add
cmc
jmp
pop
cli
je
fistl
xchg
ret
dec
and
je
jns
mov
movsl
repz
pop
pop
and
dec
xor
xor
movb
mov
leave
mov
add
sbb
sbbb
push
push
mov
jb
mov
adc
out
ds
xchg
jg
enter
mov
xchg
xor
push
insb
adc
mov
into
and
cmp
jmp
or
add
daa
insl
jmp
pop
jae
jle
mov
inc
stos
sahf
movsl
outsl
dec
lea
insl
and
sub
movsb
mov
pop
cmp
scas
push
das
cmp
xchg
sub
add
xor
add
cmc
mov
stos
pop
add
les
jnp
ficoms
int3
mov
leave
pop
and
pop
cld
cmp
out
lock
inc
xchg
pop
add
int3
push
sbb
add
xchg
mov
cmp
test
sbb
mov
push
mov
dec
jo
repz
ja
dec
sub
arpl
adc
inc
stc
adc
or
pop
into
andnps
jnp
and
mov
jne
test
push
stc
ljmp
mov
lcall
push
sub
inc
into
std
lds
xchg
pushf
inc
scas
push
pop
pop
scas
out
cmc
and
rclb
out
push
sub
or
imul
jmp
jbe
rcrb
or
inc
es
jecxz
push
pusha
jns
sbb
imul
sbbb
jecxz
lods
cmp
lods
push
out
sub
mov
cs
or
jg
pop
int
shlb
sub
jp
leave
leave
rcr
xchg
add
ret
mov
aaa
aam
outsb
outsb
pop
in
mov
nop
ds
or
mov
push
aaa
xchg
insl
jnp
outsl
mov
cmc
inc
sbb
cmp
sbb
adc
jae
pop
stos
and
shrl
inc
ljmp
inc
fcoms
add
imul
pop
lods
ss
or
lock
pop
or
and
xor
mov
rcr
cmp
fdiv
push
cwtl
push
cmp
repnz
out
loop
out
or
lods
es
sbbb
mov
imul
mov
dec
pop
add
mov
inc
add
mov
push
flds
shl
les
inc
fstpl
int3
dec
sub
jge
enter
xchg
pop
mov
and
shrb
sahf
push
mov
lock
or
lods
jae
cmpsl
in
fidivrl
int3
cmp
jne
imul
outsl
imul
xchg
fwait
mov
mov
or
movsb
dec
jo
clc
xchg
sbbb
dec
iret
testl
test
xchg
push
mov
scas
cmp
std
pop
loopne
fisubs
mov
pop
mov
addr16
ja
adc
iret
call
out
insb
jo
jns
cmp
jo
jle
pop
je
or
out
std
sub
ds
ljmp
ret
ds
dec
xchg
pop
fcomps
xor
jl
adc
ljmp
out
insl
jb
or
shl
xor
pop
or
jge
mov
mov
mov
test
add
push
xchg
push
dec
enter
jo
das
mov
adc
lret
repnz
andl
sbb
popf
push
pop
dec
mov
dec
xchg
lods
sub
jmp
lcall
adc
test
in
mov
shlb
sbb
nop
mov
clc
mov
and
subb
sub
or
inc
xchg
push
adc
sub
shl
popf
or
mov
jne
push
jnp
cs
dec
je
mov
cmc
adc
or
das
lds
jns
out
leave
out
subl
mov
push
mov
mov
call
call
inc
test
mov
dec
dec
out
outsl
enter
shlb
sub
bound
push
add
adc
add
imul
pop
jb
push
scas
popa
mov
test
lods
and
out
mov
das
jp
pop
inc
sbb
sbb
jns
adc
sub
jns
int
xchg
fwait
or
xor
ret
mov
cmc
sahf
inc
nop
cld
jbe
xchg
pop
fs
sarb
adc
mov
jae,pt
push
shlb
mov
cmpsl
xchg
mov
sub
cmpl
dec
jl
int3
arpl
test
xorl
cltd
push
xchg
lcall
lock
pop
nopl
or
and
dec
hlt
xchg
add
dec
test
sub
fiaddl
inc
jp
mul
in
mov
jns
enter
mov
pop
aas
addb
xor
sbb
insl
jmp
test
xchg
outsb
cwtl
dec
test
pop
js
dec
in
dec
cmp
inc
adc
xor
jnp
and
mov
cwtl
jno
test
and
pop
imul
gs
pop
dec
xlat
xor
rolb
add
or
xchg
add
inc
dec
mov
mov
jbe
fiadds
loopne
inc
inc
dec
shll
rorb
adcb
insl
jnp
sub
and
pop
inc
sub
or
sub
push
negl
or
lcall
mov
ret
push
adc
lds
mov
inc
leave
add
add
dec
sbb
adc
xlat
adc
fidivs
hlt
sub
addr16
fwait
dec
cmpsb
loopne
lods
fmulp
cmp
sbb
dec
sbb
dec
jmp
xor
scas
push
incl
shll
stos
cltd
adc
insb
add
xchg
fsubrs
roll
jp
mov
sti
and
call
rolb
inc
mov
cmp
jmp
inc
ljmp
fildll
fstpl
nop
sbb
mov
fidivrl
sub
push
lods
cld
test
xchg
pop
cs
pop
adc
add
xchg
mov
sub
jp
loopne
addb
add
pop
daa
cld
mov
fnstcw
fnstsw
fwait
inc
faddl
shlb
loopne
les
sub
sub
mov
push
flds
sbb
mov
pop
mov
fmuls
ss
stc
mov
sub
test
mov
mov
movsl
push
jl
test
push
inc
jecxz
push
insl
inc
inc
stc
push
dec
jo
cmpsl
sbb
stc
shrb
mov
jl
mov
cld
sti
mov
mov
pop
xchg
or
vsqrtss
loop
pop
scas
stos
test
adc
dec
mov
nop
xchg
pop
nop
adc
or
jecxz
loopne
push
xchg
mov
call
sti
lods
testl
ss
aad
add
cmp
lods
test
sbb
mov
xchg
dec
mov
mov
or
pop
and
fdivs
push
movsb
lret
notl
in
xchg
call
fdivp
jne
xor
pushf
movsl
int3
popa
clc
inc
out
adc
das
inc
nop
or
lock
in
xor
mov
mov
sbb
adc
add
mov
fnsave
fadd
xchg
ja
out
jg
or
dec
cmp
lcall
mov
pop
outsl
fbld
repz
hlt
imul
pop
sub
rorb
sbb
fsubrl
lods
addl
into
jno
inc
xlat
mov
push
xchg
adc
xorb
sub
lods
call
andb
add
shrb
mov
lock
adc
jo
stos
sbbl
jb
arpl
outsl
cmp
ds
push
out
nop
out
jo
in
dec
test
mov
pop
mov
mov
mov
mov
sarb
loop
aas
inc
icebp
add
push
jecxz
pop
inc
aad
in
pop
les
adc
mov
pop
xor
mov
push
sbb
fsubrs
cmpsl
jge
pop
add
jp
mov
ficoml
popa
fdivrl
jle
jno
push
pop
enter
je
and
mov
jbe
dec
nop
inc
push
dec
push
call
test
mov
jle
jl
ficomps
ficoml
lahf
xchg
adcb
test
popf
ficoml
mov
or
pushf
out
dec
xchg
xchg
aaa
fst
js
and
push
sbb
ljmp
mov
mov
push
lea
lret
ja
inc
mov
ret
adc
jmp
sub
repz
xor
jmp
nop
out
sbb
pusha
jmp
mull
fisttps
and
jecxz
fsts
pusha
out
pop
and
inc
lret
arpl
and
dec
daa
mov
test
pop
cld
xchg
arpl
dec
xor
mov
lret
cmp
shrl
push
inc
sub
push
push
mov
aam
aam
das
push
les
push
cld
js
lods
jge
ss
ret
xchg
ror
xor
mov
inc
pop
jns
lahf
mov
or
outsl
xchg
fs
fs
mov
mov
lods
xchg
jns
xchg
xor
pop
fidivrs
imul
mov
shlb
xchg
push
stc
cmp
sti
in
les
dec
je
jmp
fs
sbb
jmp
sbb
dec
cmpsl
fsubs
fs
sahf
sbb
dec
sahf
sub
pop
cs
repz
loop
stc
fsub
pop
pop
xchg
push
scas
xchg
out
imul
loope
push
push
out
and
cld
xchg
jne
mov
pusha
jne
aas
addb
dec
test
xor
aas
sarl
push
mov
or
mov
mov
lock
sahf
mov
inc
pop
imul
xor
inc
das
mov
adc
lock
call
dec
dec
xor
inc
popa
loop
test
push
dec
mov
cli
xchg
push
fisttpl
mov
xor
add
mov
add
xchg
lods
push
add
addb
and
fs
out
movsb
mov
addr16
mov
push
movsb
test
dec
lret
clc
stos
sub
aaa
sub
lret
rcl
incl
push
insb
xchg
sub
icebp
xchg
arpl
cwtl
sub
push
rcll
add
frstor
repnz
lds
mov
mov
push
push
and
sub
push
in
out
test
mov
mov
shl
push
lea
cmp
mov
popa
aad
push
pop
ror
cli
dec
push
rolb
fiadds
loopne
add
xor
dec
mov
dec
adc
and
mov
jnp
dec
fildl
and
insl
in
test
jae
pop
repnz
mov
mov
xor
jb
sbb
and
mov
pushl
daa
push
ret
imul
mov
sub
int3
adc
ja
jmp
scas
jge
mov
out
iret
lret
push
test
add
repz
rclb
movaps
imull
leave
rclb
cmp
mov
in
mov
adc
pop
add
test
mov
cmc
ljmp
add
or
mov
cmp
cmp
dec
data16
xlat
mov
add
dec
stos
out
jmp
sub
movswl
imul
mov
out
cmp
inc
in
iret
push
les
add
sub
les
or
xor
enter
fsubp
cmp
jmp
fdivl
sub
add
iret
mov
xchg
push
call
sub
fistpl
push
cmp
arpl
and
jnp
inc
lods
xchg
cmc
and
push
jg
dec
mov
mov
mov
jg
adc
xchg
enter
jnp
or
outsl
xlat
add
test
ret
fs
fmull
mov
ret
in
add
das
dec
and
ret
jnp
lahf
or
std
test
inc
es
pop
adc
jl
sbbl
es
add
mov
int3
scas
xchg
jecxz
imul
rorl
sbb
jmp
xor
in
loopne
xorl
jo
dec
outsl
scas
jae,pn
loope
sbb
adc
xchg
out
sti
push
push
xchg
in
ret
or
repnz
mov
xor
sub
jmp
mov
push
jns
stc
mov
cmp
or
call
jbe
lds
jbe
adc
jne
or
and
push
dec
mov
fstps
in
mov
popf
mov
sar
or
adc
es
and
pop
inc
cltd
sub
outsl
adc
mov
idivl
into
gs
test
cld
das
add
or
ds
sub
clc
subb
aad
cmp
push
dec
enter
mov
push
mov
mov
imul
orb
into
mov
push
xor
mov
stos
xchg
xchg
scas
mov
jo
xchg
repz
inc
imul
and
repz
lret
mov
daa
cmc
mov
jnp
loop
int
fwait
sti
nop
push
ret
mov
sub
add
inc
pop
sub
dec
xchg
sbb
popl
out
imul
sahf
out
repnz
mov
fadds
adc
push
stos
aam
das
insb
rorb
dec
stos
pop
mov
xchg
pop
addr16
sbb
push
mov
idivl
shrl
xor
add
adc
insb
loop
push
sub
cmp
and
xchg
imul
jae
mov
pop
pop
sbb
sbb
nop
lahf
daa
mov
das
pop
mov
xchg
stos
fidivl
imul
push
scas
xchg
jecxz,pn
dec
mov
jno
adc
iret
or
adcl
jl
lret
lods
pop
fildl
or
fisttpll
into
mov
je
jle
xor
jnp
gs
lahf
pop
pusha
loope
packssdw
push
ret
push
jg
jmp
mov
ret
loop
gs
adc
cmp
enter
and
clc
hlt
and
sbb
lret
dec
mov
out
push
dec
test
mov
ja
xchg
jns
dec
push
or
fnsave
dec
into
sbb
mov
pop
adc
inc
lods
inc
addl
arpl
jg
push
ss
pop
in
jecxz
cmp
test
xor
xchg
ret
push
icebp
add
add
add
sahf
or
stc
test
add
sbb
and
outsb
std
mov
push
add
into
lahf
aas
std
jnp
mov
add
out
pop
out
xor
lea
adc
shl
sub
inc
imul
jae
push
sub
cmc
dec
add
and
popa
sub
popl
mov
in
sbb
dec
jae
cwtl
in
jns
dec
mov
dec
adc
mov
cmp
mov
adc
pop
xlat
add
mov
pop
push
loop
jge
cmp
jbe
inc
dec
dec
jnp
cmc
gs
repnz
imul
ds
or
out
mov
mov
add
inc
lret
std
imul
aad
das
flds
push
or
jae
filds
add
sar
mov
jmp
mov
push
outsl
add
adc
lret
lods
clc
pop
cmpsb
data16
ret
push
cmpsl
xor
cwtl
pop
or
sub
sub
xlat
shll
inc
icebp
clc
or
les
in
xor
aam
pusha
push
mov
push
andl
xor
aam
pop
pusha
pop
lods
jns
std
jb
cmpsb
adc
aad
cmp
xor
repnz
and
mov
or
jno
sub
sbb
stos
aad
push
rorb
inc
or
add
inc
sbb
test
push
sub
push
adc
sub
dec
shrb
xor
push
cmp
push
cs
imul
lret
in
push
dec
cs
outsl
sti
push
fdivrs
xchg
int
dec
in
stos
or
dec
jb
mov
bound
mov
cmp
repnz
cs
imul
hlt
ss
or
mov
outsb
adc
rclb
mov
pusha
and
mov
push
repz
and
mov
sub
addl
cmp
push
bound
pushf
sbb
nop
or
popa
sub
pop
ret
mov
mov
or
dec
xor
add
popa
mov
jge
sbb
sub
sub
and
add
mov
loopne
adc
clc
xor
inc
dec
jne
cmpsl
jge
mov
sbb
rorb
test
jecxz
cmp
in
and
jl
pusha
push
lock
xor
xchg
pop
mov
cs
adc
xor
cltd
push
inc
mov
mov
sbb
sbb
dec
adc
xor
dec
xor
mov
das
sub
out
and
pop
call
pop
mov
aas
lcall
addb
pop
idivb
mov
enter
fldenv
fs
fidivrs
sbb
cltd
xor
and
sarl
sub
sbb
fmul
sub
cmp
and
mov
xchg
mov
dec
jno
test
mov
mov
dec
xchg
xchg
jg
lcall
sbb
inc
cltd
enter
test
sub
and
stos
mov
inc
or
iret
imul
jns
cmp
xor
xchg
jl
stos
xchg
cmp
test
lods
inc
idiv
inc
out
mov
in
xchg
fcomps
dec
push
popf
xor
js
ret
dec
pop
dec
icebp
insb
sahf
and
adc
int3
hlt
or
or
jno
aas
xchg
out
mov
lret
lahf
jg
mov
lcall
jbe
jge
xchg
xchg
call
out
filds
sbb
mov
call
cmpsl
outsb
pop
dec
inc
dec
into
xor
push
rcl
daa
fdivrs
push
push
pushf
jno
push
jns
jnp
sub
adc
fs
jmp
add
xor
clc
mov
fldl
dec
in
dec
pop
jb
out
movb
adc
ret
cmp
inc
pop
adc
int
addr16
sbb
or
push
push
mov
pop
push
sbb
mov
aaa
xor
mov
and
and
mov
push
js
js
pushf
aaa
mov
inc
adc
into
xchg
out
mov
push
loope
imul
out
sbb
jmp
sti
sub
push
mov
out
stc
jge
push
xchg
je
pop
xchg
lahf
arpl
push
mov
dec
js
aam
ss
pop
or
jl
loope,pt
add
mov
cmp
add
dec
ljmp
iret
sbb
pop
cwtl
cmp
add
cmpsb
xor
cmpsl
inc
rcll
cmp
repnz
and
push
cld
scas
ja
aad
push
jl
sbb
cmp
outsl
lock
jp
sti
jno
jno
jl
cltd
lock
enter
fnstenv
xor
outsl
stc
into
rolb
sbb
push
or
and
stos
mov
data16
repnz
loope
imul
lock
xor
pop
sbb
adc
mov
pop
dec
xchg
xchg
rcrb
test
pop
mov
rorb
arpl
push
outsl
xchg
and
add
push
lds
dec
enter
jno
hlt
jle
test
hlt
dec
sbb
in
dec
sub
sub
in
repz
xchg
andb
into
je
mov
test
mov
call
pop
cltd
jns
inc
imul
mov
ss
in
jb
cs
fs
inc
add
xchg
aam
pop
and
daa
not
sbb
dec
push
xchg
mov
es
outsl
and
mov
sbb
adc
or
movsb
icebp
enter
loop
push
adc
out
outsb
pop
mov
push
sti
pushf
add
pop
es
insb
inc
bound
mov
divl
jl
int
add
scas
xchg
cmp
sub
mov
dec
mov
lock
xchg
mov
jmp
cmc
arpl
stos
out
ja
gs
inc
jle
dec
shlb
iret
je
repz
or
imul
inc
or
int
cmpb
dec
popf
sbb
mov
mov
push
into
ja
sahf
lock
xor
push
sbb
cmpsl
adc
scas
pop
mov
mov
into
ljmp
xchg
hlt
jp
cwtl
dec
enter
pop
loop
cmp
lea
mov
cmp
pop
test
push
add
fmul
nop
cmpl
ja
mov
rcrl
out
adc
jb
xchg
fsubl
mov
mov
mov
dec
leave
xchg
push
sbb
ret
imul
movsb
into
sub
mov
out
fucomip
push
mov
leave
fnstsw
stos
imul
mov
cmp
jo
je
xchg
fbld
xor
mov
sub
pop
fwait
lock
inc
mov
inc
fstpt
mov
imulb
jno
pop
in
mov
sbb
repz
sbb
imul
sbb
cmpsb
add
jo
addr16
add
fcoms
fdivrs
xchg
fs
sarb
ret
push
mov
push
pop
scas
push
push
inc
aas
add
or
cmp
movsl
jg
cwtl
cmp
xor
mov
mov
xlat
dec
dec
loope
sbb
aas
arpl
mov
fnstenv
adc
ret
mov
fsubrl
or
adc
xor
aaa
mov
jo
repnz
cld
mov
mov
cwtl
mov
fdiv
push
not
adc
cmp
sbbb
movsl
mov
xchg
cmp
gs
or
movsl
add
xchg
and
dec
sbb
fcompl
lahf
add
pop
dec
dec
sbb
mov
in
pop
outsb
nop
push
ret
aam
outsl
scas
inc
jge
inc
lret
xchg
daa
sub
clc
clc
pop
push
inc
and
sub
rorb
jb
sbb
xchg
push
pop
imul
test
push
lods
cmp
fldl
add
es
fsubl
pop
rorl
ljmp
cmp
pop
mov
int3
and
xchg
out
sub
pop
hlt
shr
xchg
mov
les
mov
push
rorl
push
aad
imul
ja
lds
shl
add
xor
sbb
push
dec
pop
mov
adc
outsb
mov
push
pop
js
pushf
dec
dec
iret
inc
orl
mov
movsb
mov
test
lock
cmc
mov
testl
xchg
stc
cmp
loope
das
or
adcb
pushf
pop
push
pop
imul
or
mov
push
stc
lods
test
test
inc
arpl
mov
jge
aam
sbbl
lods
jmp
cmp
or
mov
cmc
fptan
sbb
pop
mov
gs
mov
mov
mov
adc
imulb
lea
mov
loop
pop
xorb
cmpsb
push
mov
dec
push
pop
pop
mov
mov
hlt
repz
and
andb
fwait
xlat
test
pop
or
lcall
mov
pop
xor
and
andb
int3
add
out
cwtl
pop
xchg
mov
int3
mov
pop
and
scas
out
xlat
push
jp
mov
imul
enter
add
dec
in
fcom
stc
scas
das
testb
cltd
xlat
mov
or
cmp
and
div
enter
pop
mov
sub
repz
in
test
sbb
pshufw
les
cmp
or
pop
dec
ror
fnstenv
orl
ja
xchg
jnp
add
and
add
xchg
iret
hlt
repnz
jb
dec
add
sbb
push
xchg
add
push
rol
insl
lret
cmp
jge
nop
add
not
es
xchg
mov
fs
push
inc
pop
and
or
xor
data16
pop
mov
lods
ret
push
sbb
push
fxch
inc
nop
jno
mov
sahf
jp
pop
add
cmp
sub
push
add
js
or
movsb
adc
push
repnz
icebp
dec
inc
lea
iret
jmp
imul
or
incb
iret
insw
into
shrb
push
vmread
out
jb
mov
loopne
push
lods
decl
test
repnz
push
fistl
xchg
push
daa
inc
and
push
adc
in
imul
jb
push
lds
xchg
cwtl
shll
cmp
adc
gs
or
das
jns
jns
pop
stos
stc
popa
xor
imul
inc
int
xchg
shll
push
andb
pop
cmp
pop
call
xchg
inc
loope
inc
sbb
dec
or
cmp
mov
add
cld
jnp
bound
data16
mov
and
mov
jle
pop
sbb
out
push
pusha
cmp
inc
mov
adc
push
scas
daa
sub
jl
in
xchg
loopne
and
mov
int
lods
sahf
push
mov
clc
jne
adc
fsubp
mov
mov
push
mov
xchg
cmp
icebp
in
call
addb
and
rolb
inc
out
push
adc
call
stc
cmp
or
xchg
scas
test
and
adc
faddl
adc
and
pushf
ss
enter
jns
or
xchg
rep
nop
and
sbb
jmp
jg
jbe
or
xor
pushf
xchg
cs
or
out
mov
aam
or
filds
icebp
pop
std
iret
pushf
das
jl
dec
orl
mov
and
fimull
lock
outsl
cmpb
scas
loopne
arpl
ret
test
or
mov
xchg
xchg
add
mov
divl
iret
mov
or
addl
jo
jmp
xor
addr16
or
push
imulb
sbb
lods
in
mov
pop
pop
or
in
mov
out
pop
cli
mov
xor
test
jnp
jo
fnstsw
mov
sub
jle
sbb
xchg
shlb
jae
in
lods
fsubl
jo
fcoml
sbb
mov
or
pop
pop
dec
mov
xchg
mov
not
cmp
and
jg
lret
jne
dec
jne
xor
lds
ja
lods
add
inc
jl
subl
bound
cmp
dec
add
repz
cli
aad
negb
loopne
pop
out
dec
xor
filds
cli
sbb
mov
loopne
dec
jns
push
and
lret
rcll
cmp
push
rol
dec
jge
shrl
dec
fcmovb
ds
adc
andb
pop
mov
and
lahf
and
fidivrs
ljmp
mov
add
int
jl
addb
pop
adc
and
fisubrs
int3
and
jmp
in
mov
popf
lods
dec
dec
leave
mov
add
pusha
sub
cmp
jnp
movsl
inc
mov
pop
clc
cld
shrb
push
dec
sub
pop
rorl
and
push
mov
movsb
fildl
and
test
js
mov
push
inc
scas
xchg
and
push
mov
pop
popf
nop
mov
mov
xchg
add
jb
jae
inc
or
lds
call
xchg
dec
push
loope
pop
cmp
fwait
push
es
mov
push
adc
inc
dec
mov
and
out
push
and
or
scas
int
mov
and
clc
jecxz
jg
aam
mov
mov
dec
xor
and
jbe
xor
rcrl
fildl
inc
mov
jbe
inc
pop
aad
ret
fwait
jg
inc
jnp
mov
dec
fnstsw
ja
fdivl
lret
sbb
dec
dec
stos
cmp
xchg
adc
xchg
xor
movsb
jmp
mov
jae
test
mov
jae
sub
add
mov
scas
xor
ds
sub
jp
cld
sub
mov
xchg
cli
push
shrb
movsl
inc
xchg
push
push
inc
icebp
mov
repz
cmp
dec
or
mov
add
or
insl
out
mov
mov
or
jp
mov
std
lahf
mov
test
sbb
ret
jo
fisttpl
aaa
mov
sbb
jp
jnp
aaa
int3
jl
inc
aad
jo
pushf
fldcw
jo
ss
mov
out
cmp
imul
aad
test
or
adc
pop
dec
pop
mov
test
jns
pop
add
xchg
jne
addr16
inc
cmpsl
int3
out
int3
cli
test
add
mov
and
cli
add
js
hlt
movsl
sbb
movsb
xor
pop
imul
sub
mov
pop
or
jbe
add
loope
inc
data16
sub
rclb
mov
adc
pusha
jnp
div
hlt
stos
lods
mov
out
ret
sub
pop
cmpsb
scas
rolb
mov
push
dec
aaa
iret
lock
out
fisubl
fidivrl
pop
push
nop
and
cmp
lahf
div
mov
mov
xor
push
clc
cmp
jae
aad
pop
push
out
leave
or
mov
int
rorb
and
push
repnz
aam
dec
pop
daa
cmc
jns
jno
notl
add
outsl
fnstcw
push
fwait
popf
adc
icebp
sub
adc
inc
ja
adc
cmp
leave
pop
js
pusha
bound
xchg
jnp
and
lcall
stos
sbb
add
das
sub
sbb
jp
ds
sub
pop
loopne
loopne
js
aas
xchg
lret
enter
in
in
dec
fstps
mov
cmp
dec
adc
push
mov
in
out
cmp
sarl
inc
popf
pop
bound
pop
jne
mov
inc
fcmovbe
in
aam
or
test
pop
adc
repnz
imul
lret
dec
cmpsb
inc
iret
test
jbe
jne
jmp
xor
pushl
jl
das
int3
cltd
cmp
sbb
sub
repnz
cmp
xchg
ss
sti
loop
jne
or
shlb
mov
addl
mov
lcall
fdivr
sub
dec
jno
adc
push
mov
outsl
cmp
push
jne
mov
or
je
sub
mov
inc
add
andb
test
sbb
push
je
movsl
movsb
add
xchg
loope
inc
xchg
xor
pop
insl
xchg
xchg
sub
fiaddl
sub
cld
into
lret
nop
cmp
js
aam
jb
xlat
xchg
dec
jmp
pop
fildl
nop
lret
push
or
mov
pop
mov
js
add
dec
xchg
mov
sbb
mov
hlt
jle
adc
scas
shlb
jno
mov
or
mov
das
jmp
push
mov
movsb
adc
push
iret
sbb
dec
adc
mov
in
sbb
rorl
push
inc
sub
aam
push
and
adc
push
mov
adc
jp
cmpsb
mov
testl
iret
repnz
stc
adc
mov
mov
dec
jns
jnp
mov
adcl
ret
xorl
jge
sub
lea
out
aas
cld
pop
sbb
ret
popl
adc
push
rcrb
dec
in
lret
mov
and
pop
sub
push
scas
sub
sub
pusha
xchg
loopne
mov
pushf
xchg
pop
push
inc
mov
mov
inc
hlt
xor
mov
clc
lret
loope
push
insl
fs
movb
push
mov
lds
fcmovu
lock
test
rcl
mov
mov
hlt
inc
les
psubusw
xor
ja
pop
adc
jne
mov
push
or
call
outsl
pop
dec
movsb
shrb
jecxz
ljmp
add
pop
inc
imul
stos
into
sbb
sub
and
mov
ja,pn
adc
mov
xchg
cmc
scas
mov
enter
lea
out
adc
into
fstl
je
and
mov
lret
cmp
ljmp
bound
or
aaa
jp
mov
mov
into
gs
push
xor
mov
xchg
repnz
dec
je
mov
pop
or
test
inc
adc
in
stc
dec
mov
popa
stos
out
rclw
sub
xor
push
insb
loop
subl
stos
push
xor
loope
fisubrl
addl
xor
idivl
mov
in
test
pop
repz
popa
jb
mov
push
push
jmp
inc
outsl
addr16
xchg
mov
lcall
mov
inc
xor
mov
xor
adc
test
sbb
test
inc
lods
add
sbb
notl
cmc
pop
fwait
sti
jl
push
jae
jmp
or
lock
cwtl
fs
xchg
or
xchg
inc
movl
jp
cwtl
push
outsb
mov
loopne
lock
sahf
cltd
or
push
repnz
sar
sbb
std
mov
pop
jno
sti
arpl
pop
mov
pop
lock
out
dec
xor
xchg
inc
and
popa
je
lods
pop
jmp
mov
adc
jg
mov
dec
mov
xor
pop
xchg
cmp
sbb
xchg
loope
sbb
imul
std
cmp
aam
gs
mov
xchg
sahf
xor
cmp
ret
jb
dec
fcmovu
jg
dec
mov
daa
loope
test
cmp
std
insb
mov
gs
cmp
ljmp
inc
js
stos
mov
jge
push
repz
out
mov
scas
movsb
je
sbb
and
xchg
inc
pop
cmp
push
push
nop
inc
add
test
xor
lods
arpl
jecxz
xlat
arpl
ret
or
lods
xor
test
pop
inc
out
rclb
fucomi
subl
pop
divb
rorb
mov
push
aaa
mov
cwtl
movb
cmp
in
pop
pop
test
adc
sbb
shr
push
popf
inc
mov
imul
push
xor
hlt
adc
mov
ss
adcl
movb
je
gs
hlt
adc
dec
xchg
lods
and
pop
insl
adcl
loopne
rclb
lea
jmp
popf
inc
inc
or
je
jae
mov
ja
out
jl
xchg
inc
or
dec
test
xor
cmpsl
mov
stos
es
inc
subl
stc
lret
dec
dec
inc
outsl
inc
mov
pop
mov
push
jbe
into
add
inc
out
pop
enter
jae
mov
add
mov
shlb
xchg
sbb
mov
inc
icebp
popa
iret
int3
push
push
xchg
adc
arpl
shr
fstpl
lods
inc
mov
push
loope
rcr
hlt
loope
jo
cmp
out
xchg
cs
test
lahf
fwait
push
push
dec
out
cmp
and
roll
inc
imul
inc
xchg
or
fisttps
icebp
sti
adc
lahf
pop
test
cmp
push
mov
out
dec
jno
data16
enter
shll
or
stos
mov
repnz
sub
outsl
xchg
dec
pop
sub
movl
daa
mov
stos
in
mov
sarb
xchg
mov
out
push
dec
ret
and
rcrb
ljmp
aam
dec
lcall
push
ss
dec
adc
out
jle
push
jb
cmpsb
and
inc
xor
dec
stos
jecxz
inc
mov
in
xchg
and
out
in
jl
jecxz
ret
insl
and
popa
lds
xor
adc
int
inc
fiaddl
cmpb
int3
jo
ljmp
loopne
shrb
adc
cmp
push
sarl
jp
add
insb
pop
mov
push
enter
or
mov
pop
inc
fsubrs
push
loope
aad
pop
lahf
jbe
mov
int
test
xor
fiaddl
sub
cmpsb
or
xor
pop
idivl
enter
inc
aaa
xchg
sti
lea
fwait
xchg
mov
push
gs
out
call
out
dec
rcrb
and
aaa
stos
shll
jmp
add
sub
push
mov
mov
stos
mov
outsb
mov
test
std
and
ss
ljmp
cmpl
add
hlt
or
rcl
movsb
cwtl
loope
out
cmpsl
pop
sub
add
dec
ds
and
sub
sti
ljmp
popf
mov
aaa
out
adc
adc
nop
adc
shlb
jo
adc
push
nop
sahf
jbe
call
xor
mov
stos
or
ret
mov
xchg
jecxz
adc
adc
sar
jmp
lods
mov
andps
or
jle
clc
repnz
test
jp
filds
sub
outsl
fisubl
inc
arpl
pop
add
pop
rorb
es
out
mov
ljmp
xlat
lds
testb
xchg
imul
xchg
mov
and
cmp
pop
lret
push
pop
icebp
inc
pop
sti
inc
pop
outsb
cld
out
aaa
std
mov
xchg
aad
leave
or
out
dec
adc
xorl
pop
mov
iret
fldenv
pop
pop
popa
push
scas
push
rol
add
xor
xchg
jmp
lret
test
stos
mov
std
sbb
insl
dec
movsl
mov
xchg
subb
je
scas
sarb
rcrb
and
scas
xchg
outsl
into
push
popf
mov
and
sbb
lods
dec
test
fstps
out
and
fsubrs
enter
sahf
push
lods
call
call
mov
push
inc
jge
add
cmpsl
sub
mov
loope
cmp
adc
dec
mov
push
mull
sbb
loope
sbb
shrb
decb
sub
sub
addr16
mov
mov
mov
gs
sbb
test
xlat
fnsave
fwait
xchg
and
js
clc
or
pop
loope
push
imul
cmp
push
fstps
out
sbb
inc
incb
icebp
xor
jns
insb
cli
pop
add
pop
outsb
sarb
dec
std
mov
jle
test
outsl
ss
insl
adc
stos
fidivrl
daa
or
jb
inc
dec
mov
push
push
xor
mov
test
jmp
or
insl
cmpsb
stos
ret
xchg
or
jbe
mov
sahf
nop
add
xor
in
stc
jnp
sbb
sub
popf
leave
adc
mov
pop
arpl
or
mov
cmpsb
mov
loopne
add
push
ret
xchg
push
dec
xor
les
xchg
lea
popa
leave
sub
mov
dec
test
loope
pop
push
scas
jo
dec
adc
cmp
iret
lods
rorl
lods
sbb
adc
dec
sbb
mov
fstpl
xchg
mov
mov
push
cmp
adc
std
fsubl
push
sbb
lret
pop
dec
rcl
ds
loope
add
adc
push
test
call
fstpl
mov
lea
into
xchg
cmp
out
add
sub
pop
push
ja
gs
arpl
lods
dec
mov
popf
jmp
xor
nop
xlat
cld
test
cwtl
pop
mov
fwait
push
jae
push
fcomps
push
mov
jl
das
ja
scas
ret
idiv
out
aad
imul
cld
sbb
in
testl
cld
sbb
adc
cmp
mov
push
rorb
sbb
pop
xchg
ljmp
cmp
push
xchg
push
stos
shll
inc
dec
ljmp
inc
test
imul
mov
or
pop
mov
pop
js
mov
mov
push
mov
es
insb
fistps
mov
lret
ficompl
and
xor
adc
ljmp
pop
in
out
cmc
ret
lods
and
sahf
add
push
jne
rcr
lahf
clflush
xor
adc
pop
in
mov
add
pusha
add
cmp
pop
adc
aam
lahf
rolb
xchg
fistpl
push
push
dec
test
mov
mulb
sbb
xchg
std
sbb
jp
cmpsb
mov
loop
subb
inc
lds
movsl
jmp
mov
repnz
sub
scas
das
inc
inc
in
dec
cmp
aad
push
xor
sahf
lea
xchg
inc
mov
sub
sbb
je
jns
stos
mov
mov
dec
movsl
cmp
and
adcl
mov
movsb
jmp
jmp
pop
cli
hlt
cmpsb
jne
stos
stos
adc
popa
xor
jp
mov
sbb
sbb
jns
enter
es
lods
mov
fcompl
dec
in
bound
gs
jne
scas
or
mov
push
pop
push
out
dec
jns
movsl
in
cmp
fdivl
lcall
stc
ja
int
push
add
sbb
cltd
inc
xchg
mov
stos
mov
outsl
dec
adc
rolb
jns
sub
mov
data16
xchg
jg
movsl
jle
pop
xchg
loope
aam
cmp
das
ficoml
ret
cld
add
out
stos
loope
mov
orb
popf
mov
ret
lret
add
xor
popf
pop
mov
jns
jmp
stos
lock
mov
fucomp
mov
jne
pop
shrl
mov
xor
and
adc
aaa
push
dec
or
es
adc
dec
fcomip
jmp
adc
cmc
add
push
es
dec
and
dec
mov
add
mov
mov
jmp
les
in
std
dec
pop
test
dec
data16
js
ss
and
jle
dec
xchg
mov
mov
ljmp
pop
or
enter
fnstcw
jecxz
ficomps
add
sbb
pop
loopne
popa
jbe
data16
xchg
and
push
xor
mov
push
mov
pop
add
sub
lea
and
and
push
jnp
cmc
push
cmp
jmp
push
mov
and
mov
lret
gs
push
sbb
xchg
inc
xor
or
sub
leave
xchg
cmpsl
popa
mov
mov
stos
pushf
sbb
jp
xor
mov
jbe
ret
and
jnp
cmpb
out
sbb
ja
jecxz
ucomiss
mov
mov
add
ljmp
je
mov
adc
pop
inc
xor
aaa
cld
inc
pop
mov
push
jno
inc
cmp
inc
faddl
or
jns
ret
fldln2
sbbb
sbb
scas
sti
aas
cmpsb
add
jl
insl
lock
adc
in
aad
test
xchg
fbld
imul
fistps
es
pop
jl
mov
or
stc
and
adc
push
pop
fucompp
and
dec
fists
jne
xlat
mov
stc
bound
in
jb
mov
in
fdivr
lahf
ffree
fsubrp
pop
lahf
sbb
jns
xor
mov
xor
stos
mov
stos
xor
out
mov
mov
lock
bnd
mov
icebp
movsb
fs
enter
mov
test
std
insl
in
fcomip
icebp
add
mov
adc
jge
std
fsub
jnp
xor
mov
jb
psubsw
sbb
push
sbb
sbb
jbe
pop
xchg
mov
ja
cmpsb
cmpsb
outsl
push
outsb
push
cmp
loopne
adc
push
xor
push
jle
aas
inc
sub
ret
test
ss
std
jmp
pop
and
cmpsb
adc
jae
or
pop
xchg
push
mov
stos
dec
jnp
jge
xchg
mov
xchg
aaa
inc
fcoms
fsub
addr16
push
neg
je
test
pop
mov
js
jbe
cmpl
push
push
pushf
pop
inc
mov
loope
rcll
pop
cli
cmp
repz
or
push
push
mov
fcmovb
adc
test
and
mov
sbb
stc
push
idiv
loop
push
and
xor
je
cmp
sbb
rcr
lock
andb
mov
out
inc
int3
mov
cltd
mov
adc
testb
xchg
out
mov
xchg
addr16
inc
and
mov
fisubl
orl
test
cs
pop
cmp
xchg
test
mov
cmpxchg
cli
mov
jl
dec
daa
roll
faddp
adc
leave
es
or
fsubl
jne
mov
into
pop
inc
mov
test
push
das
out
xor
push
repz
popa
xorb
lea
in
sbb
mov
rol
jno
add
sub
je
sub
out
and
js
pop
inc
mov
pop
pop
mull
popl
mov
sub
js
stc
aas
push
stos
rorb
pop
jge
xchg
xlat
pop
push
pushf
pop
pop
lahf
jne
mov
test
cld
xor
push
pop
dec
aaa
pop
xchg
jecxz
sub
mov
out
sbb
icebp
insb
add
dec
pushf
add
cwtl
int3
rorl
add
sub
pop
push
add
test
or
or
mov
mov
dec
cmp
aad
cmp
inc
gs
ljmp
gs
jnp
or
enter
pop
pushf
repnz
inc
fs
xchg
and
cmp
in
outsl
fcmovb
nop
jno
aaa
call
xlat
mov
cmp
into
mov
mov
in
mov
call
ds
pushf
testl
cmp
aam
cwtl
scas
dec
mov
fiaddl
aad
pop
testl
sbb
jle
or
out
dec
mov
or
aaa
aas
insl
outsl
stos
daa
arpl
inc
push
mov
dec
pcmpgtb
add
mov
sahf
rcrl
mov
aas
fstp
lahf
mov
daa
ja
push
xor
sbb
inc
data16
xchg
add
pop
test
out
push
fcomps
cmp
cmpsb
scas
xor
sbb
inc
sarl
adc
mov
lock
rolb
cmpsl
add
mov
jae
test
jnp
and
pop
fcoms
inc
pushf
test
in
cmp
mov
push
xorl
xchg
cmp
push
scas
jg
sarl
mov
mov
in
fs
pusha
loope
bound
sarb
push
out
add
xchg
mov
inc
int3
shll
pusha
dec
lea
xchg
push
sbb
shrb
jns
pushf
push
int
loopne
mov
ret
push
push
in
sub
fwait
cmpsb
data16
xchg
pop
cltd
xor
lods
sbb
ds
pop
fwait
loopne
test
dec
or
sub
xchg
sbb
push
movsb
pop
xchg
fildl
sarb
negb
inc
ret
fldt
jno
in
lods
xchg
and
cmpsb
jnp
push
test
cmp
xchg
and
cmpsl
push
roll
jle
mov
add
repz
xchg
and
sarl
mov
ss
mov
mov
xchg
xor
rorb
xchg
add
andl
out
mov
dec
mov
mov
cmp
insl
or
adc
jb
cwtl
ljmp
int
xchg
es
repnz
xchg
pop
pop
mov
inc
loop
inc
icebp
mov
add
mov
cmp
xlat
jge
and
es
xor
movnti
pop
adc
mov
mov
and
or
vhaddps
int3
sarl
sbb
notb
inc
or
dec
in
ret
push
leave
jle
lods
inc
xor
push
std
andl
pop
pop
imull
sbb
xchg
xchg
adc
std
leave
and
mov
gs
popf
ret
pushf
add
and
jp
ja
hlt
or
add
push
andb
adc
cmpsb
repz
iret
insl
xchg
adc
sbb
or
pusha
xchg
jp
cmp
mov
decb
dec
jne
pop
jge
aas
mov
orb
repz
adc
add
movsl
fdivr
loopne
lahf
fiaddl
fwait
and
insl
dec
add
jo
adc
rclb
xchg
or
leave
lea
adc
aaa
xchg
or
sub
mov
les
scas
clc
sbb
xchg
jns
pop
push
fidivs
jno
ljmp
nop
lock
mov
xchg
ja
insb
sbb
outsl
pop
pop
add
push
jmp
sbb
nop
and
sub
lret
lods
mov
iret
mov
std
rcl
inc
rcrl
sub
jle
add
adc
push
cmp
lcall
xchg
adc
mov
shll
and
sub
vmovntps
or
into
testl
xchg
or
insl
clc
rorl
cmc
and
pop
mov
pop
mov
lods
popf
ret
inc
outsl
lods
test
roll
neg
daa
push
push
loopne
leave
push
stc
push
mov
xchg
and
stc
lods
daa
fsin
test
push
mov
adc
sbb
xchg
pop
jmp
cmp
sarb
frstor
imul
mov
or
icebp
lcall
xchg
cli
outsb
jecxz
lds
in
bound
xor
in
jns
sbb
push
push
movsl
add
adcl
mov
enter
xor
repnz
aas
inc
mov
orl
rcl
jno
dec
inc
adc
cld
or
inc
mov
jmp
test
pop
adc
add
in
push
pop
add
ds
dec
pop
adc
ss
lahf
pop
and
sbb
test
lret
sbb
xor
jo
ja
pop
les
inc
orb
pop
insb
imul
js
rcr
movsl
cmp
sbbl
addb
fbstp
push
jno
pushf
jle
in
ljmp
push
add
inc
adc
gs
jle
test
mov
dec
pop
ljmp
and
add
xchg
jp
sbb
push
cld
xchg
subl
aas
cltd
sub
add
mov
fs
jnp
out
jmp
adc
push
pop
lcall
mov
cmpsb
leave
js
fimull
shrb
imul
ljmp
push
sar
rclb
jge
lea
xchg
rcll
ds
fstpt
jge
or
add
sbb
ljmp
rcr
shrl
daa
or
push
lret
das
dec
dec
mov
mov
aaa
fisttpll
popf
rolb
test
xchg
push
mov
push
ret
outsb
adc
aad
adc
outsb
fstl
cmp
out
fidivl
les
cmpsl
outsb
test
lds
cwtl
pushf
xor
cmp
gs
mov
mov
and
loopne
sbb
mov
sbb
xor
nop
mov
daa
ret
jle
or
add
cli
mov
xchg
cs
and
aas
xor
push
jmp
cmp
adc
jns
adc
xchg
mov
pop
decb
lods
adc
loopne
cs
ficoml
push
popf
adc
les
mov
sub
rorl
mov
cmp
jo
leave
adc
add
jl
inc
jmp
push
mov
xlat
sbb
fsubrs
shlb
mov
ds
lods
dec
push
sbb
nop
inc
stos
inc
out
cltd
jge
pop
rcrl
jns
std
or
ja
nop
sbb
add
mov
sub
jbe
push
mov
testl
ret
cmp
inc
lcall
xchg
dec
push
add
inc
cmp
lret
das
cld
in
pop
movsb
lds
adc
xor
xor
add
pushl
jmp
addr16
out
icebp
dec
sub
orb
mov
jl
adc
in
aam
mov
or
xor
lahf
dec
sbb
pop
je
clc
jl
jnp
int3
hlt
inc
icebp
nop
jne
and
adc
push
cmpsb
or
neg
pop
pop
sbb
in
shrb
out
into
adc
push
fiadds
and
je
das
cltd
stos
sahf
add
arpl
fdivrl
popf
sbb
or
jbe
push
hlt
mov
ret
add
or
or
or
outsl
movsl
ret
mov
pop
jno
and
xor
mov
roll
sbb
fs
xchg
imul
xchg
jg
jbe
xchg
ds
add
pop
ja
test
push
mov
popl
std
or
inc
push
jge
mov
sub
sub
sahf
jae
or
dec
shlb
sub
jae
ret
loopne
aam
ret
or
mov
sub
lods
hlt
fisttpl
sarl
test
pop
pop
pop
sub
aaa
in
xchg
cmp
jno
cmpsb
push
and
aas
inc
popf
or
aad
xor
push
jbe
bswap
xor
and
add
mov
ljmp
push
cld
adc
lret
cld
mov
int
lret
mov
mov
ss
test
adc
pop
pop
push
mov
ret
sahf
lret
jo
and
out
and
cmpsl
sti
ror
sub
sti
test
pop
dec
pop
mov
aam
data16
pop
int3
gs
outsl
dec
ss
adc
sub
adc
xchg
lods
rsqrtps
pop
cs
cmpsl
pusha
movsb
scas
jg
adc
dec
jns
sarl
gs
outsb
push
cmp
xlat
mov
out
jle
lods
mov
sbb
xchg
inc
xor
push
iret
jmp
dec
outsb
push
dec
cmpsl
sub
outsl
xor
icebp
cmpsb
push
xor
into
xor
imul
cmp
lcall
test
and
pop
jne
cmpsb
jns
adc
and
rcl
movsb
out
and
pop
push
inc
out
or
sub
sub
insb
pop
xchg
cld
daa
inc
and
mov
add
xchg
or
pop
stos
push
scas
jge
mov
rolb
sub
mov
daa
pop
imul
aam
fwait
cli
aas
fs
or
fdiv
lods
ss
jns
mov
sbb
subb
out
test
inc
pusha
insl
gs
repz
mov
outsl
dec
adc
scas
fldl
cmp
xor
xlat
or
sub
mov
mov
push
shrb
cmpsb
fs
mov
into
lods
ljmp
nop
lea
add
mov
fcompl
add
out
adc
add
popa
mov
into
dec
dec
adc
lods
dec
fiadds
rorl
jmp
ja
sub
hlt
push
jp
push
xchg
ja
dec
push
xchg
cmp
psubb
mov
inc
mov
jne
lods
les
pop
nop
cli
sbb
dec
loope
adc
inc
movsb
xor
jmp
add
es
push
mov
dec
ja
cmpsb
sub
pop
jp
repz
js
and
into
push
mov
popf
pushf
repz
in
iret
icebp
inc
js
movsb
sub
cs
pop
sbb
cmpsl
inc
mov
pop
lcall
aas
mov
and
mov
mov
lahf
lret
push
mov
mov
loop
push
in
or
pop
cltd
sub
mov
les
xchg
dec
sbb
stos
inc
push
or
mov
sbb
xchg
mov
jnp
imul
stos
push
outsb
in
pop
inc
enter
push
daa
mov
or
ficomps
cwtl
neg
ljmp
jmp
and
add
flds
daa
add
arpl
cmpsb
push
push
sbb
push
flds
push
mov
mov
pop
mov
negb
or
or
jne
sbb
and
xor
rclb
mov
lea
add
fisttpl
xchg
rcl
jge
outsb
push
pop
rcrb
rcr
adc
fdivr
push
xor
ret
xchg
jnp
cmpsl
mov
jp
xchg
test
pop
add
dec
mov
ja
mov
je
cli
cmp
js
jg
stos
lret
sti
mov
push
aam
and
mov
sub
cs
cmpsb
ret
cmp
push
pop
testl
cmp
push
dec
sbb
repz
sti
push
aas
mov
jns
add
insb
test
clc
inc
and
test
add
push
mov
jb
jp
xor
sub
int
mov
in
xlat
int
je
mov
mov
xor
sub
jne
cs
push
leave
inc
outsl
cld
pop
fdivl
mov
pop
rolb
lahf
and
lea
and
push
rorl
sbbb
out
jne
inc
roll
arpl
mov
test
lret
push
or
jae
or
xor
pop
test
imul
dec
rol
mov
loopne
dec
test
ds
test
push
jb
insb
mov
fldt
sub
fsubrs
xchg
int
call
cwtl
sub
adc
push
scas
outsb
xlat
int3
xor
and
jmp
addb
daa
into
push
push
bound
jmp
inc
jge
mov
adc
enter
or
add
ja
xor
pop
cmp
jl
std
xchg
push
sbbb
pop
insl
arpl
push
adc
push
xchg
hlt
cmp
pop
jb
idivb
fimull
call
in
xadd
js
outsb
lret
scas
sbb
adc
mov
mov
or
dec
mov
sti
push
mov
fs
cmove
mov
cmc
pusha
dec
ror
nop
nop
dec
mov
std
mov
mulb
sub
outsb
cwtl
adc
sub
add
add
push
lds
sti
xchg
mov
jge
xor
xor
cwtl
js
test
mov
pop
adc
sub
les
into
test
int3
inc
sti
xor
dec
loopne
cmp
setle
cmpl
adcl
jns
jl
xchg
jl
xor
xor
pop
bound
jmp
adc
and
pop
push
push
addb
fdivrs
stc
jge
and
test
js
dec
mov
cmp
cli
cmp
jle
mov
in
mov
fdivrs
xor
mov
inc
stos
xchg
dec
lahf
inc
arpl
popl
xorl
cltd
test
sbb
insb
dec
outsl
cmp
mov
mov
and
gs
push
inc
pop
push
icebp
sub
out
pushf
fadds
jo
cmc
jg
xor
scas
int
adc
popa
ret
mov
in
jmp
jmp
sarb
test
xchg
cmp
add
cmp
clc
cmp
nop
dec
test
jne
xchg
adc
sub
outsb
aas
sbb
jne
cmp
js
push
pop
movsb
sub
or
scas
mov
jp
imul
fcoms
jnp
mov
aad
dec
push
cmpsl
mov
push
rcrb
outsb
fxch
popa
mov
insl
popf
outsb
ljmp
jg
adc
mov
push
insb
inc
add
and
hlt
std
mov
cmp
xchg
xor
jno
sarl
push
movsl
adc
inc
sbb
arpl
mov
add
fwait
mov
mov
fs
std
ja
and
adc
les
xchg
push
cmp
and
cmpsb
push
inc
push
test
arpl
out
cmpsl
lods
faddp
or
leave
mov
cld
nop
inc
jmp
pop
stos
testl
jl
bound
pusha
add
gs
iret
push
fs
incb
out
or
dec
lds
mov
decb
aam
subl
imul
in
mov
stos
adc
sub
xchg
xor
xor
and
xchg
in
fldt
inc
or
mov
pop
sbb
xchg
dec
xlat
xor
sub
clc
xchg
xchg
ror
mov
andl
or
xchg
push
mov
scas
xlat
mov
dec
push
in
jecxz
or
mov
mov
dec
jmp
xor
movsb
and
cmpsb
inc
cli
fldt
cmc
or
lret
mov
addr16
mov
fisttpll
pop
mov
xchg
dec
xor
cmp
fsubl
cmp
int3
xchg
cmp
jg
imul
and
adc
xor
ss
xor
movsb
into
push
fs
dec
jle
aas
cmp
clc
mov
mov
js
pop
addr16
and
dec
dec
hlt
fwait
push
xor
adc
xor
sti
shl
cmp
xchg
popa
sub
mov
and
add
rcrl
ds
test
mov
stos
addr16
in
and
rcll
xchg
test
test
xchg
sub
mov
inc
mov
int
add
inc
mov
popf
in
loop
popf
xchg
sbb
popa
dec
out
out
xchg
in
add
jne
loop
out
lahf
andl
add
adc
in
ficomps
fisubrl
jbe
test
mov
movsl
jle
mov
ret
js
mov
add
ret
cmp
jne
cmp
fstps
out
inc
xor
dec
nop
dec
ret
call
add
sbb
xchg
jno
add
dec
mov
mov
pop
cmp
xor
jbe
add
cwtl
push
out
pop
adc
fwait
idivb
mov
sub
add
repz
sbb
push
mov
sarb
jb
movnti
mov
lret
add
xor
aaa
mov
insl
jmp
xchg
fistps
or
cltd
and
negl
rcrl
pop
cmp
ljmp
cmp
movsl
mov
jnp
test
popl
sarl
in
test
pop
inc
mov
jp
rcrb
adc
mov
add
loopne
sbb
jmp
in
push
addr16
lods
push
stos
stos
mov
cld
adc
jne
mov
mov
sbb
cmc
xor
into
pop
sarb
movl
bound
mov
jae
iret
add
inc
scas
and
aaa
std
add
jbe
adc
jno
jmp
push
ffree
and
xchg
mov
fs
jg
mov
and
int
xor
sbb
repz
sbb
popf
addr16
push
out
movsb
inc
add
pop
ds
pop
xlat
cmp
lcall
cmc
call
cmp
adc
es
adc
pop
cltd
clc
inc
jecxz
pop
dec
aas
xor
jecxz
adc
xchg
dec
and
sub
call
lock
or
mov
adc
rcl
mov
divb
lods
rorb
mov
xor
push
mov
out
daa
mov
push
jg
and
in
stos
scas
call
out
or
pop
inc
adc
jmp
jnp
loopne
dec
sub
add
enter
icebp
push
push
stc
iret
push
bound
movsb
pop
andl
outsl
das
inc
or
fidivl
pop
and
insb
sub
iret
stc
andb
fs
jg
inc
adc
lcall
test
loopne
int3
sub
or
push
cltd
inc
add
imul
scas
mov
inc
xchg
push
fcomi
and
stos
rorl
in
pop
xchg
shlb
mov
xor
enter
inc
in
pushf
cmp
adc
jb
sbb
in
ficoms
jecxz
dec
adc
cmpsb
sti
or
fildl
outsb
sub
rolb
mov
notb
fistpl
jne
cmpl
push
aam
ja
fidivrl
xor
pop
out
mov
adc
mov
jo
movsl
xor
fbstp
mov
pop
aaa
add
ficomps
adc
cmp
push
add
cmpl
sarl
icebp
movsl
aad
mov
mov
mov
out
adc
add
xchg
mov
mov
js
test
in
sti
sar
inc
aaa
mov
test
fisttpl
lret
mov
inc
xchg
nop
push
xor
jne
subb
shrl
lcall
jmp
loope
dec
iret
push
ljmp
pushf
sbb
gs
pushf
jp
fsts
mov
repz
jmp
shll
lds
cmp
xor
nop
sub
xor
iret
lahf
cld
xor
mov
outsb
sub
mov
pop
nop
pop
push
dec
push
mov
test
push
mov
mov
mov
mov
fnsave
subl
push
adc
and
sahf
jnp
repnz
jnp
pop
cmp
mov
stos
inc
inc
cmp
aaa
rol
fbstp
jl
lods
fwait
or
inc
sti
mov
inc
pop
pop
mov
ss
dec
hlt
lret
pop
sti
xchg
mov
xchg
loope
fisubrl
stc
je
std
jecxz
insl
out
call
ret
and
ficomps
and
jb
mov
aas
loopne
xor
xchg
inc
pop
fwait
das
inc
inc
paddusw
ret
sbb
shr
mov
fcomip
dec
cs
sbb
cmpsb
je
adc
lret
dec
movsl
fwait
sub
xor
repz
xor
andl
je
pop
dec
or
mov
dec
in
sbb
addl
jno
mov
ja
jmp
pop
fstps
mov
lea
jns
push
mov
adc
ss
mov
mov
pusha
das
test
xor
test
mov
jecxz
cmp
sub
fdivl
jb
fsubs
inc
les
mov
pop
cmp
cmp
ss
jns
push
xor
pop
or
or
dec
and
roll
add
push
into
and
sti
push
sub
xor
adc
daa
add
lds
mov
xor
fadds
jae
sub
mov
frstor
dec
cmpsl
sarl
pop
lret
insl
andb
dec
cltd
mov
das
mov
out
push
aam
mov
sbb
mov
test
lahf
or
cmc
inc
add
jge
ds
in
and
rolb
fisubl
mov
pop
mov
addr16
cltd
sbb
aas
loope
inc
out
jge
mov
lods
loop
lcall
popa
jnp
adc
js
cmpb
add
or
popf
push
sbb
sbb
cmp
int3
negl
xor
hlt
clc
mov
in
psubq
cmc
mov
xchg
test
or
aam
cmp
sub
xor
sarb
fisttps
mov
inc
cmc
cmp
xchg
fistpl
mov
inc
in
add
jb
test
gs
fldl
add
and
cmp
iret
in
out
jecxz
insb
mov
push
sbb
rep
fsubrl
fs
in
test
cmp
jle
pushf
test
xchg
lods
or
addw
insb
pop
cmpl
leave
mov
mov
popa
aam
and
ret
jne
out
xchg
push
add
movsl
xchg
lea
dec
or
xchg
scas
mov
aam
jno
jo
adc
push
ja
sub
sub
xor
jno
cwtl
inc
pop
out
cli
push
cmp
jmp
in
push
lret
repz
mov
push
cmc
inc
dec
movsl
or
mov
inc
pop
pop
sub
mov
clc
in
cmp
popa
xchg
test
sub
repz
test
call
jl
jl
mov
inc
dec
push
add
nop
loop
popa
mov
jb
enter
enter
sahf
xchg
xchg
sub
ret
in
lock
mov
sub
fmulp
pop
adc
jne
push
out
or
mov
outsl
or
cmp
pop
pop
mov
popa
mov
inc
pop
push
push
sti
ja
dec
jle
xchg
aam
dec
loope
or
xor
movsb
pusha
cmp
xchg
sbb
outsl
adc
jp
out
mov
push
add
mov
aam
xor
adc
xchg
inc
cwtl
and
mov
mov
and
xchg
movsb
xchg
lods
fisubrs
aaa
jl
leave
out
jae
pop
imul
sbb
inc
lock
inc
mov
mov
mov
jle
mov
repnz
int3
inc
mov
add
leave
sub
inc
mov
in
jle
cmp
push
int3
hlt
and
stos
jg
sarb
pop
in
das
xchg
rcrb
xchg
dec
mov
jmp
or
hlt
idiv
add
out
or
pop
pop
jp
adc
mov
ds
or
jns
pop
push
dec
sub
sub
xchg
pop
ds
jae
rol
dec
movsb
jbe
and
imul
bound
sarb
mov
mov
rcrb
xor
movsb
inc
test
xchg
adc
cld
dec
pop
into
lods
clc
adc
jb
inc
in
sahf
stc
sub
cmp
mov
push
lret
jmp
inc
mov
add
pop
scas
pusha
es
sbb
cmp
aas
out
in
jmp
xchg
mov
or
jecxz
jp
int
or
repz
in
test
inc
gs
rcll
insl
inc
jmp
pinsrw
inc
cmp
std
xchg
xchg
shrb
adc
dec
mov
aam
sbb
cs
test
mov
xchg
mov
or
repnz
jbe
mov
push
inc
mov
test
jl
sub
mov
lahf
xchg
and
mov
push
scas
adc
sub
pusha
xchg
push
sar
icebp
pusha
jecxz
xor
in
or
mov
jnp
add
mov
sub
pusha
sbb
in
insl
cld
fstps
movsl
lods
sbb
pop
scas
xchg
add
jb
movsb
jl
popf
dec
or
loop
int
push
out
jnp
pop
mov
les
xchg
pop
fists
push
jns
jb
jle
insl
xor
out
push
inc
test
sub
les
and
adc
bound
into
imul
int3
mov
jns
je
sbb
cld
hlt
xor
xchg
or
dec
rcl
and
add
pop
inc
inc
inc
dec
dec
xor
mov
fcompl
scas
dec
inc
outsl
adc
repz
pop
movb
or
jbe
or
scas
cmp
sbb
xor
mov
jmp
fnstenv
std
fwait
shll
jns
insl
data16
insl
nop
mov
xchg
xorb
ds
cli
mov
dec
js
fsubrp
mov
or
test
nop
push
push
stos
dec
test
xchg
xchg
movsb
xchg
dec
sub
stos
les
movsl
sbb
inc
xlat
inc
mov
add
inc
mov
mov
std
or
xchg
shrb
lcall
push
inc
pushf
mov
inc
fsub
imul
shrb
mov
mov
pop
or
lods
mov
xchg
fwait
pop
push
push
imul
stos
ljmp
lods
int3
out
jecxz
outsl
pop
xchg
sbb
push
cmp
js
roll
cmpb
xchg
pop
xor
loope
loope
movsl
xor
out
jno
jl
add
insl
fidivrs
xchg
pop
inc
pop
xchg
iret
scas
push
arpl
or
lahf
xchg
jo
adc
pop
inc
es
jp
clc
add
in
mov
or
ss
ret
js
jl
fcomps
fildll
popf
jno
enter
ds
mov
fmuls
iret
mov
jbe
in
fs
jmp
sub
jg
sub
enter
xchg
or
orl
cmpsl
rcrb
xchg
mov
hlt
add
mov
xchg
lret
imul
shlb
stos
xor
ljmp
pop
aam
ja
pop
mov
jbe
cmp
inc
cmc
cltd
sbb
mov
imul
imul
out
fisubrs
test
pop
insb
dec
pop
das
sub
cld
cmpl
sahf
fs
inc
imul
dec
fsts
pop
lea
fwait
push
pop
sbb
icebp
ret
mov
mov
loopne
push
sbb
rorl
add
adc
idivb
outsl
xor
test
xor
pop
daa
push
xchg
mov
sub
inc
es
cmp
xor
jecxz
xchg
sbb
mov
mov
pop
add
icebp
ja
fs
fdivrl
orl
xchg
out
and
popa
jns
testl
ret
adc
icebp
stos
ret
repnz
sbb
pop
mov
iret
cld
pop
outsl
stc
mov
mov
mov
push
cmp
fcomps
and
pusha
stc
xlat
jg
or
stos
cmp
mov
shlb
cmp
cmpb
test
lods
gs
jno
jp
insl
mov
js
ljmp
inc
pop
adc
enter
sbb
push
add
and
mov
test
jne
addr16
cld
sbb
les
test
insl
rcr
mov
or
int
call
inc
dec
imul
xlat
sub
adc
mov
push
test
xchg
imulb
notl
jno
ret
fisubs
fldl2e
pop
mov
xchg
movsl
and
orl
orl
mov
xchg
jne
mov
mov
mov
xchg
out
ficoms
xchg
mov
movsb
icebp
jmp
sti
pushf
ds
jl
in
jns
loope
pop
lds
cmp
imul
in
jo
gs
sbb
xchg
fdivrl
xlat
dec
and
je
mov
rcrb
pushl
add
cli
push
jl
ja
mov
pop
fwait
test
dec
jbe
jg
xor
scas
clc
dec
mov
pop
push
xor
dec
jmp
addl
int3
adc
fsubs
sbb
add
push
sub
das
rcrl
mov
mov
pushf
js
loope
shlb
adc
add
iret
lcall
arpl
sarl
rorl
cmp
sbb
repz
pop
sbb
and
testl
inc
mov
je
in
icebp
or
mov
fdivs
shrb
repnz
push
push
pop
mov
ja
in
push
pop
xor
in
push
js
fucom
mov
sub
test
jg
addl
movl
or
nop
jle
aam
lods
repnz
cwtl
lret
xchg
xor
push
cmp
mov
rolb
sahf
fidivrl
mov
iret
push
jne
jg
les
cmp
sub
lret
nop
xor
or
cmp
out
pop
mov
sub
sti
loope
inc
add
add
decb
cmp
sub
push
into
daa
dec
lock
push
std
cmpsl
pop
jns
cmp
add
mov
stos
mov
push
fmull
or
test
push
and
inc
and
je
cmp
test
push
ficoms
mov
xor
lods
lret
incb
pop
push
xchg
push
jg
push
fsub
sbb
ds
jmp
lret
insb
push
into
stos
pop
fs
pop
sub
aam
std
sbb
ret
into
cltd
pop
ret
out
mov
cwtl
dec
inc
xlat
popf
cmpsb
add
in
enter
sahf
sbb
mov
jge
in
mov
sbb
pop
xchg
out
mov
mov
mov
adcb
aad
mov
enter
fstps
or
adc
in
loopne
and
shl
pusha
mov
out
add
inc
cmp
out
fcmovbe
adc
fs
lret
mov
sbb
adc
xchg
loope
std
decb
pop
movsb
popa
push
pop
aam
icebp
jno
leave
adc
xchg
popa
mov
cmp
sub
mov
test
inc
mov
push
add
stc
sub
add
in
adc
sar
adcl
add
hlt
cld
mov
pop
dec
push
repnz
or
inc
jecxz
lock
dec
aad
cwtl
inc
push
cmp
pushf
test
adc
pop
pop
inc
inc
and
lahf
jg
xor
or
pop
rcrb
stos
fucomi
push
xor
mov
test
cmp
loope
mov
cld
in
pop
dec
jg
jp
lcall
push
in
cmp
pop
sbb
test
stos
add
insb
jp
xchg
fidivl
lret
cmp
push
fdivp
test
pop
sbb
mov
sbb
mov
popa
ficoms
insb
mov
pop
popa
outsb
scas
inc
loop
inc
or
daa
sbb
mov
xor
cs
xor
lea
jbe
arpl
or
xchg
ds
sub
insl
fdivl
adc
pop
scas
js
cmpsb
dec
loope
sbb
cmp
shr
or
adc
xchg
mov
mov
or
xchg
aad
xor
gs
imul
xor
shll
mov
insl
sbb
imul
inc
and
push
into
add
cmp
mov
ja
cltd
insl
push
stos
fisttpll
or
aas
add
jo
and
pop
push
push
icebp
fs
inc
sbb
pusha
jb
push
xchg
mov
andb
or
popa
push
xchg
adc
add
in
jnp
aad
mov
fiadds
clc
mov
xchg
das
push
jne
mov
mov
pusha
mov
mov
pop
aaa
xor
bound
mov
push
repnz
jo
cmp
dec
out
je
jecxz
adc
cli
xchg
pop
ficoml
imul
loopne
xlat
sbb
add
add
cmp
je
iret
fldenv
mov
cs
dec
xchg
pop
jmp
mov
lods
stos
fidivrs
cltd
stos
cmpsl
mov
or
push
cmp
stc
mov
xchg
mov
mov
push
mov
add
cmc
xor
aam
lret
mov
dec
mov
fldt
mov
sbb
ret
nop
dec
mov
mov
lods
cld
push
adc
push
mov
mov
sub
sbbb
cli
xor
cld
cmp
and
or
push
add
push
xchg
inc
add
jg
cmpsl
jne
inc
das
test
fistps
pusha
imul
push
ja
gs
mov
loopne
push
test
or
test
in
push
jbe
xchg
icebp
ror
xchg
addr16
xor
adc
daa
shrl
test
jne
lretw
ljmp
jl
xor
repnz
jne
mov
sahf
xchg
jb
dec
iret
ficoml
rcr
mov
cs
or
add
ds
and
inc
mov
aaa
push
outsb
cltd
scas
fildl
movsl
fiadds
outsb
xchg
xor
mov
mov
sub
movsb
test
push
int
test
sub
mov
roll
roll
mov
roll
or
dec
mov
iret
cmc
adc
inc
adc
nop
cmp
push
adc
mov
adc
out
or
sbb
push
and
xorl
out
leave
fidivs
sti
inc
and
push
inc
push
push
mov
ret
test
add
mov
scas
and
or
pop
xor
in
mov
sub
adc
mov
inc
sub
popf
adc
mov
dec
xchg
push
xchg
test
xchg
and
ja
sbb
in
and
sub
jl
call
cmp
inc
and
loopne
fmull
mov
mov
loop
sub
mov
xchg
dec
fs
ss
dec
or
pop
xchg
add
and
or
dec
jnp
dec
lret
dec
sarb
push
push
sub
lret
std
pop
decb
mov
mov
lock
clc
cmpsl
mov
mov
js
mov
inc
cmp
aaa
test
mov
dec
shr
enter
adc
push
add
arpl
jbe
sbb
xor
mov
mov
jl
test
int3
outsl
cld
jmp
xor
inc
in
rorl
cmp
mov
lret
ljmp
adc
pop
adc
lcall
in
lret
ja
ror
lret
loop
adc
pop
mov
cmp
mov
ljmp
jle
mov
mov
jmp
pop
mov
dec
mov
data16
out
iret
scas
mov
pushf
pop
or
fwait
subl
adc
in
xchg
arpl
test
push
mov
xor
scas
repnz
out
test
xchg
and
fcomps
mov
cli
jecxz
into
ss
xor
int
data16
xor
bound
push
push
xchg
mov
imulb
sbb
fbld
incl
dec
cmp
jg
pushw
cmp
adc
rcr
jb
pop
pusha
in
das
fstpl
xor
sub
je
cmp
push
add
and
in
jmp
dec
movsl
scas
jns
pop
mov
xor
cmp
pop
mov
xchg
daa
add
adc
dec
aas
clc
lods
xlat
fisubl
mov
mov
jb
mov
lock
and
push
cmp
inc
and
and
lret
mov
push
sbb
xorb
out
out
or
popf
mov
gs
rolb
stos
negb
cltd
mov
jge
mov
xchg
imul
jae
jno
push
cltd
jg
enter
movsl
imul
fidivrl
xor
xchg
mov
imulb
sub
mov
xor
and
out
jg
xchg
enter
sub
sbb
xlat
mov
sub
jmp
cmp
add
fwait
mov
ret
mov
in
xchg
subl
xor
push
repz
sub
mov
imul
inc
sbb
mov
mov
test
fwait
outsb
dec
push
stos
or
jle
xchg
mov
push
sub
notb
xor
in
dec
and
je
fldl
out
jg
sub
cmc
rorl
mov
mov
xlat
hlt
adc
test
xchg
sbb
mov
mov
mov
mov
cmp
sbb
xchg
rcll
cli
push
repnz
jnp
fmulp
mov
mov
xchg
rcl
xchg
xchg
and
movsl
subl
test
jmp
ds
cmpsb
dec
ss
nop
xchg
pusha
sbb
shlb
out
repnz
int
lcall
xor
pushf
das
inc
xchg
nop
in
pop
js
mov
sbb
inc
or
xchg
fs
lcall
sbb
dec
add
pop
ljmp
dec
mov
jle
movsb
and
icebp
cwtl
scas
dec
faddl
inc
cs
out
xor
add
dec
pop
mov
shlb
lret
pop
mov
ret
insl
sub
mov
test
add
les
push
pop
popa
imul
popa
push
movsb
mov
fcmovbe
jns
sahf
lea
push
push
mov
mov
jmp
or
jae
inc
xchg
lea
cmp
push
in
mov
repz
call
cmp
and
cli
or
cmp
mov
push
sbb
daa
sub
jmp
mov
in
sub
jl
xor
adc
cwtl
jge
in
and
daa
test
pop
clc
ljmp
jne
mov
sbb
std
mov
fadds
sub
mov
mov
leave
and
rclb
cmp
aam
jp
add
dec
cmp
lods
lret
sbb
scas
loop
and
je
and
lret
outsl
repz
sbb
insl
sbb
or
push
dec
cld
lods
scas
adc
jle
out
xor
ds
shl
cmp
mov
and
lock
into
sbb
mov
cmp
test
fidivrs
mov
and
in
data16
data16
cmp
mov
loopne
ret
push
push
adc
scas
cmp
dec
ret
xor
mov
dec
mov
cwtl
aam
shrb
xor
lock
cmp
shrl
fxch
fwait
sarl
iret
add
dec
push
push
add
sarl
add
add
inc
inc
decl
ficompl
pop
push
jmp
jns
in
mov
dec
pusha
adc
jmp
es
cmp
push
vpackssdw
bound
and
cltd
push
imul
cmpsl
fldenv
cmp
mov
jnp
xchg
lods
outsb
fcmove
ret
pop
xchg
in
pop
ds
pop
dec
or
cltd
and
or
mov
inc
mov
je
test
test
scas
andb
stos
iret
cvttps2pi
cwtl
sti
jl
cmp
movsl
lods
mov
push
mov
and
cmp
inc
icebp
pop
jge
jae
jae
sub
gs
loopne
jns
push
dec
push
push
push
lock
fwait
xor
sti
inc
gs
lret
or
lock
pop
fnstsw
lods
adc
pop
test
xchg
insl
inc
into
testb
rol
sub
jle
sbb
das
mov
sbb
cmpsb
es
sbb
dec
out
mov
mov
dec
frstpm(287
push
out
cld
iret
dec
cli
jae
in
push
nop
sub
sahf
cld
add
in
mov
mov
cltd
popf
and
cld
cmp
imul
into
rorb
movsb
dec
shrb
dec
testl
mov
inc
nop
mov
iret
fcom
inc
in
jbe
jno
popa
fiadds
fisubrs
xor
sub
inc
adc
push
sbb
push
xchg
jno
cmp
adc
lcall
les
or
stc
inc
push
mov
test
idivb
sbb
ficomps
jb
imull
mov
sahf
mov
mov
jns
sbb
xchg
shll
imul
sub
int
fs
lods
frstor
in
xchg
pop
mov
cltd
xor
cmp
aam
andb
jb
xchg
push
mov
push
adc
outsl
in
pop
pusha
pop
jo
push
or
push
fwait
ds
mov
push
repnz
out
mov
pop
je
add
pop
repz
and
rcl
xchg
add
pop
jg
mov
or
es
xorb
inc
inc
ror
ret
xchg
dec
insb
in
daa
js
mov
xlat
mov
sub
mov
std
test
mov
aaa
pop
clc
daa
in
scas
ljmp
hlt
jbe
dec
mov
cltd
push
sub
mov
pop
mov
pusha
sbb
dec
int
iret
nop
and
add
push
andl
xor
jo
xor
jnp
xchg
push
fsubs
cmpsl
sarb
lret
sub
clc
sti
inc
mov
mov
stc
lods
pop
movsb
call
out
mov
sbb
mov
addr16
inc
push
roll
in
sub
mov
fimuls
push
mov
sbb
gs
scas
sti
jp
mov
bound
outsl
xchg
inc
testb
imul
lds
and
push
dec
sarl
leave
insl
rolb
pop
sbb
xor
ss
into
jecxz
insl
aam
clc
inc
xchg
mov
dec
test
xor
and
xlat
hlt
mov
mov
sub
cmp
jl
pop
test
lahf
outsl
shll
subb
icebp
jp
roll
into
pusha
fidivrs
loopne
fistps
and
call
pop
je
mov
sbbl
jmp
imul
push
std
inc
jae
call
lods
push
aaa
add
mov
repz
sbb
pop
ret
aam
cmp
mov
fmull
mov
sbb
jno
aad
mov
mov
sub
pushf
and
lret
in
sbb
sbb
leave
adc
xchg
pop
pusha
adc
in
arpl
sub
push
movsb
push
js
pop
jns
aaa
nop
push
cli
outsl
leave
lahf
lcall
xchg
cli
xchg
cmpsl
movsl
lock
sub
iret
ret
nop
and
mov
xchg
stc
or
push
jns
mov
ret
popa
int
sti
insl
cmp
mov
pop
push
scas
mov
xor
adc
add
push
pop
adc
lcall
jae
mov
push
mov
xor
mov
leave
out
cmp
pop
pop
jmp
lods
stos
mov
jns
fcmovnu
in
push
cmp
or
or
cmpsl
xchg
aas
push
adcb
and
cmpsl
push
jbe
insb
mov
mov
in
paddd
pop
pop
in
ss
mov
add
insl
fstps
es
movsl
loope
popf
scas
ret
shl
dec
push
jb
jecxz
pop
dec
inc
cmp
sub
cmc
push
popf
mov
movsb
into
jmp
cmpsb
push
mov
sbb
xchg
cli
idivb
push
int
adc
in
pop
jns
fdivrp
pop
mov
andl
daa
dec
xor
cmp
dec
je
mov
les
adc
in
aaa
mov
lods
insb
jl
mov
mov
hlt
xor
loop
in
rcr
and
stos
cmpb
xchg
gs
mov
fistpll
out
insl
out
shrl
jge
sub
sub
add
popf
push
and
dec
lret
pop
jne
lods
xchg
mov
dec
daa
xchg
mov
test
iret
pop
movsl
aam
movsl
out
or
jmp
push
fdivrs
lret
push
and
in
test
push
popa
mov
lods
mov
data16
xchg
xor
cltd
nop
xchg
add
sahf
mov
loope
xchg
inc
mov
clc
test
pop
out
xor
xchg
xor
lea
sbb
adcb
js
xchg
mov
cmc
cwtl
lret
xor
push
enter
lea
dec
add
push
and
aam
xchg
in
push
pop
jg
call
pop
outsb
data16
lret
aam
fisttpll
push
stc
and
shl
fstps
bound
rclb
js
pop
es
pop
xor
mov
mov
pop
cld
ret
jecxz
sub
les
lret
jbe
mov
mov
inc
adc
icebp
or
pop
jecxz
pop
xor
xor
xor
inc
not
jno
mov
dec
dec
xchg
mov
in
pushf
push
imul
lods
jno
lret
stos
cmp
jg
pop
jne
push
xor
adc
mov
cld
les
push
sub
mov
xor
popf
shrl
xlat
clc
std
js
push
sub
cmpsl
pop
xchg
add
or
mov
xor
cs
into
cmp
jo
fcomip
shl
inc
add
cmp
cmp
les
and
cmc
mov
or
cmpsl
les
pop
xor
and
aam
inc
cmp
lret
pop
mov
jl
and
cwtl
inc
cmp
or
ret
xor
mov
test
lcall
movsl
xchg
push
mov
and
pop
push
es
xchg
push
push
rclb
fnsetpm(287
aad
adc
dec
xchg
mov
cltd
ficoms
cltd
sbb
pop
lcall
mov
push
xor
cwtl
or
pop
dec
mov
hlt
xchg
mov
ja
repz
mov
fistpll
outsb
scas
sub
xchg
test
xchg
mov
aam
push
stc
in
jne
fadds
pop
mov
dec
out
or
fnstenv
jo
inc
mov
sbb
adc
mov
mov
loopne
rcrl
xchg
pinsrw
scas
adc
fmuls
bound
cmc
mov
daa
cmp
shlb
jecxz
aad
bound
adc
movsb
lcall
or
scas
or
add
pop
cli
roll
mov
jg
sbb
decb
mov
jmp
inc
out
push
rorl
xchg
and
inc
mov
aad
sub
stc
sub
xor
sub
xchg
leave
pop
testb
push
in
add
fdiv
shl
xor
es
jb
add
push
or
mov
pop
js
cmp
addr16
mov
scas
das
xchg
das
push
pop
sub
adc
mov
push
push
xchg
lahf
adc
in
xor
sti
inc
scas
jno
daa
add
pop
fwait
xchg
enter
sub
xor
lret
enter
dec
push
push
loope
nop
jno
or
jg
into
push
dec
jbe
imul
ljmp
subl
dec
aam
fld
lahf
cmpb
fldcw
loopne
je
pushf
loope
pop
cmp
jno
shll
sub
aaa
out
nop
jmp
push
mov
mov
dec
movsb
repnz
test
sarb
jno
mov
in
out
out
sbb
lods
sti
mov
lock
dec
xchg
mov
mov
or
sub
adc
cmp
adc
xchg
outsl
hlt
mov
aam
fisttpll
pushf
jmp
out
jl
mov
cmp
push
fucomp
xor
push
adc
ljmp
sbb
sbb
mov
cmp
push
xchg
cmp
xchg
rorl
mov
out
frstor
je
ja
and
mov
inc
mov
mov
shll
sbbl
jns
xlat
in
lock
and
addr16
pop
js
scas
mov
mov
imul
subb
icebp
inc
mov
test
nop
enter
push
andl
scas
inc
push
adc
mov
movsl
mov
cmp
clc
sahf
ret
adcl
mov
in
pop
xorb
jns
and
xchg
mov
pop
cltd
out
inc
mov
xor
or
lock
push
push
mov
add
bound
aas
in
add
add
pop
xor
mov
mov
dec
add
mov
lods
and
jmp
sbb
dec
inc
fisubl
pop
or
push
and
aam
mov
enter
sbb
stos
mov
xchg
fdivl
bound
negb
or
push
sbb
pop
inc
inc
sub
cmp
mov
repnz
ja
scas
je
dec
mov
cmpsb
push
out
aam
add
sub
jnp
mov
push
jno
xor
fs
pop
jnp
mov
addr16
inc
xchg
or
insl
hlt
enter
leave
imul
xchg
jno
adc
sub
mov
fldl2e
dec
int3
sahf
das
push
insb
jb
add
or
icebp
aas
lea
test
lahf
dec
cmp
mov
test
stc
mov
jl
push
jo
add
aaa
inc
jnp
icebp
mov
xor
cmp
jmp
inc
add
inc
or
icebp
fidivs
movsb
cmp
inc
fstl
fdivr
push
add
adc
dec
jge
aas
push
push
loopne
jnp
xchg
pop
out
lods
ret
insb
test
adc
jo
std
pushf
cmpsb
out
adc
aam
clc
push
pushl
sbb
shrb
clc
adc
mov
inc
cld
fsts
xchg
lock
add
mov
add
or
mov
xor
and
inc
pop
inc
iret
or
jns
sar
test
jmp
jns
inc
jno
loop
jb
or
js
jnp
dec
into
xlat
add
sbbb
scas
cmp
sub
ret
inc
movsl
xchg
into
push
outsb
cld
mov
stos
loop
jmp
gs
inc
testl
mov
dec
inc
sti
sub
or
addr16
repnz
insb
push
xor
mov
out
imul
sarl
repnz
or
les
adc
jg
sbb
je
mov
pop
sbb
dec
add
das
lods
jmp
ljmp
xchg
dec
dec
pop
lods
jmp
enter
cmp
cmpsl
andl
push
stc
push
sbb
dec
push
dec
js
clc
es
lahf
pop
adc
push
roll
ja
push
fcoms
xor
data16
sub
inc
loopne
scas
cmp
xchg
mov
pop
out
push
mov
dec
push
push
decb
cmp
jb
push
sbb
pop
adc
mov
dec
clc
ret
mulb
jne
sbb
in
cli
mov
mov
pusha
pop
cli
insl
dec
ficoms
cltd
mov
push
inc
addr16
mov
int3
jb
xchg
icebp
xchg
into
popf
jg
jp
imul
enter
out
jo
call
or
mov
xor
and
sbb
call
test
mov
es
pop
inc
lea
xchg
jb
lods
lods
push
xchg
shl
stos
test
fstpl
enter
repnz
or
dec
fimuls
mov
int3
pop
add
lea
mov
sarl
lds
xor
ljmp
mov
loop
jge
cmp
imul
adc
or
repz
mov
mov
js
mov
fwait
cmpsb
xlat
adc
lcall
pop
fistpll
lcall
int
inc
push
test
inc
bound
inc
decl
lret
cmp
pop
sbb
fs
inc
adc
neg
sbb
pop
imul
xchg
faddl
pop
add
popf
push
add
push
std
ficomps
xchg
lods
dec
fldenv
mov
scas
pop
jp
mov
adc
jle
jae
arpl
movsl
adc
mov
push
mov
cmp
add
inc
ss
iret
add
popf
mov
mov
jo
lods
cwtl
sub
lock
cmp
addl
xchg
and
and
das
mov
jge
mov
js
outsl
loopne
in
or
dec
mov
ljmp
add
pop
jl
sbbb
cmp
int3
icebp
hlt
adc
fiadds
mov
sti
es
pop
in
cmc
mov
or
jecxz
es
hlt
or
in
xor
lods
push
test
data16
in
std
int
stc
mov
adc
gs
pushf
dec
loopne
add
mov
mov
jne
mov
fdivp
add
mov
xchg
and
jge
add
fsubrs
loop
jne
fidivs
in
sahf
inc
xchg
aad
popa
sub
jle
xor
lock
xchg
jp
inc
aam
mov
jmp
rorl
movsb
cwtl
inc
mov
popa
fisttpl
test
adc
cmp
lahf
sahf
movsb
mov
add
inc
push
mov
jl,pn
and
push
and
and
or
iret
dec
fbstp
dec
xlat
cmpsb
xor
dec
xor
mov
mov
mov
enter
test
rorl
out
ds
lahf
repz
xor
outsl
fbstp
and
pop
test
or
mov
fs
jns
fadds
cmc
idivb
sub
jp
dec
push
jecxz
push
jp
stos
fwait
lods
ss
mulb
push
into
pfcmpge
xor
loope
push
cmp
jb
inc
pop
movsb
inc
dec
or
mov
loopne
lock
cmp
dec
fsub
aaa
fscale
mov
or
out
incb
nopl
mov
fcmovb
imul
fistpll
adc
lret
jmp
outsb
xor
mov
push
cmp
dec
push
pushf
data16
mov
mov
dec
dec
pushf
xor
xchg
mov
sbb
inc
jno,pt
mov
xorl
xor
jns
mov
test
xor
sbb
xor
popa
aam
call
mov
pop
aad
lret
xchg
ret
imul
mov
pop
cmp
xchg
add
dec
add
mov
add
cmc
pop
mov
dec
fs
jp
jecxz
lret
mov
rcll
push
push
ficoms
sub
dec
nop
aam
stc
int3
jle
jns,pn
pop
sbb
rclb
mov
push
pop
and
mov
roll
nop
test
xchg
jg
add
rcrl
push
addl
xchg
or
fwait
aaa
push
aam
jmp
call
ljmp
push
jnp
and
inc
sbb
xlat
mov
push
lret
xor
push
cmpsl
bound
mov
dec
hlt
std
mov
mov
pop
fdivrs
lods
addl
je
imul
test
mov
mov
pop
test
stos
in
xchg
sbb
push
add
mov
sbbl
mull
fmul
and
mov
add
push
cmp
add
scas
dec
cmpsb
and
pop
dec
int3
xor
lea
lahf
inc
test
test
inc
xchg
xlat
outsl
pop
sti
and
add
xor
clc
adc
roll
adcl
rcl
jns
pop
mov
jne
cmpsl
nop
mov
hlt
arpl
out
or
cmp
mov
mov
ja
leave
pop
outsl
insb
mov
or
cmpsl
js
cmp
jge
imul
xchg
loopne
cmc
out
stos
rol
data16
xchg
sub
icebp
leave
lods
cmp
rol
gs
popf
xor
hlt
aas
mov
mov
lahf
jns
lcall
enter
ficoml
adc
mov
pop
jg
and
call
aam
jae
data16
repz
jno
cmpsl
lock
jb
sbb
not
shr
shrb
dec
mov
sti
fcmovb
and
mov
inc
jecxz
lea
mov
sub
and
ds
xor
test
cmp
dec
stos
push
push
mov
xor
cld
cmp
test
xchg
push
pop
into
ret
xchg
mov
mov
movhlps
ret
push
sti
out
addr16
scas
clc
push
pop
xor
or
jns
testb
fmull
das
lret
cmp
stos
jl
fistl
movsb
movsl
mov
imul
adc
push
out
dec
and
dec
ja,pn
pop
cld
mov
push
enter
fisttpll
sbb
ret
cltd
inc
mov
push
inc
jg
iret
rcrb
mov
das
and
int3
or
popf
and
sbb
cld
scas
pop
jle
aas
xchg
push
stos
adc
ss
cmp
cmp
int
bound
cmp
test
jp
mov
jp
fistpl
mov
nop
in
into
xor
push
ljmp
or
or
iret
xchg
adc
cmc
gs
arpl
xor
imul
pop
cmp
cmpsl
adc
mov
jmp
xor
add
add
sbb
or
daa
dec
fcoml
mov
and
es
ds
scas
add
push
notb
mov
and
xchg
outsb
clc
sbb
mov
leave
test
and
gs
mov
sarb
or
adc
fstl
mov
sub
pop
fildll
leave
mov
jnp
je
inc
mov
mov
cmpsl
fiadds
repnz
incl
in
popa
cmp
add
fmull
fs
ss
lods
loop
sbb
pop
xor
jbe
sub
dec
mov
add
neg
in
fwait
cmp
stc
pop
or
pusha
movsb
add
push
sbb
pop
xchg
in
adc
and
sub
push
mov
inc
cmp
mov
add
pushf
cmp
adc
and
rcrb
jmp
mov
adc
js
mov
popa
jns
xor
jp
mov
icebp
subl
pusha
ss
jmp
pop
mov
loopne
movsb
xchg
stos
mov
and
test
stc
outsb
mov
cmp
jb
inc
inc
aas
rcrl
adc
insb
das
int
popf
mov
iret
add
int3
daa
jo
cmpl
inc
dec
ret
into
out
push
ss
stos
sbb
pop
movb
add
sti
sub
push
mov
hlt
mov
in
pusha
lahf
je
sbb
dec
popa
push
loope
pop
movsb
mov
dec
stos
xor
jg
cmpsb
add
dec
dec
testl
sbb
xchg
shl
mov
jle
daa
and
daa
je
js
pop
aaa
loop
aaa
ds
pop
in
outsb
mov
or
fst
aaa
sti
movsl
or
xor
subl
test
xchg
jbe
cmc
or
dec
out
adc
and
ljmp
sub
xchg
mov
loop
pusha
sbb
inc
fdivl
mov
mov
adc
shlb
scas
xchg
bound
imul
pop
mov
dec
ficoml
pop
sbb
cltd
mov
push
pop
into
xchg
fldt
aad
xchg
stc
xor
inc
icebp
fwait
mov
pop
and
pop
fstpt
bound
add
or
xlat
sbb
pop
lret
jno
push
dec
fs
mov
in
pop
and
es
xor
add
mov
dec
mov
pop
jbe
xchg
xorb
push
or
sbbb
outsb
or
or
std
push
std
xchg
lock
cmp
out
rorl
mov
enter
mov
adc
cmpsl
loope
jmp
mov
push
add
xor
and
xchg
movsb
cltd
cmp
in
pop
dec
out
pop
xor
mov
jb
pop
dec
out
ss
dec
jle
or
hlt
cmp
or
ret
dec
sahf
in
call
aas
mov
insl
or
iret
out
pushf
test
enter
mov
or
nop
dec
pop
imul
xchg
mov
xor
lds
pushf
pusha
aas
jnp
pop
add
add
insl
lret
fcompl
fiaddl
in
sbb
xor
mov
inc
and
not
lret
jg
sti
mov
mov
and
cmp
add
adc
jl
cmp
cmp
stc
imul
addl
jle
mov
mov
inc
fistpl
xor
jb
loope
add
test
add
aas
jne
cmp
negl
clc
sahf
and
jbe
sti
das
push
inc
and
aam
cmpsl
mov
test
cli
stos
or
lods
popa
mov
daa
xor
push
mov
inc
inc
imull
mov
xchg
ret
push
stos
mov
xchg
dec
lret
cmp
ret
pshufw
sub
cli
xchg
add
sbb
sub
pop
fs
cld
out
rorb
xchg
imul
sub
in
mov
inc
sbb
push
cmpsl
fnstcw
adc
mov
jmp
rclb
cmp
popf
cmp
je
cmp
daa
iret
mov
jbe
sub
call
cltd
mov
loopne
in
movsl
inc
mov
jae
fsubr
cmpsl
fucomip
test
mov
lret
test
jle
sbb
daa
insl
lods
xchg
pusha
adc
jae
jne
leave
cmp
add
stos
bound
dec
stc
test
jge
movsl
inc
mov
or
bound
cmp
mov
neg
ja
xorb
sub
and
imul
and
cltd
cmp
xlat
pop
and
out
inc
adc
or
lcall
mov
idivb
xchg
and
out
lock
lods
fildll
push
cmc
add
mov
inc
mov
shll
xorb
mov
gs
or
shrl
dec
cmp
into
pop
jge
push
ror
xchg
pop
movsl
pop
pop
aas
sub
adc
sub
ret
inc
xor
mov
notb
jge
repz
lea
fwait
icebp
push
leave
pop
or
inc
dec
fsts
sub
push
aad
cmp
rcrb
fldenv
xchg
push
ret
push
xchg
cmp
test
leave
lret
mov
xor
aam
insb
xchg
pop
add
das
pop
pop
mov
hlt
loopne
out
js
andb
lahf
pop
out
aas
xchg
ds
stc
push
cmp
mov
fistpll
div
mov
aaa
and
outsl
xor
call
loop
cmp
xchg
lret
adc
movsb
pop
and
arpl
adc
fmuls
or
in
mov
dec
xor
cmp
outsb
bnd
out
inc
fcmovnu
add
pop
js
mov
outsb
scas
pop
xor
popf
add
push
mov
xchg
jmp
dec
pop
cwtl
adc
data16
shll
adcb
jl
sub
dec
push
pop
pop
jmp
mov
xor
out
imull
add
xchg
add
sbb
push
stos
int3
mov
fscale
pop
repnz
mov
cmp
push
pop
mov
ficoms
inc
dec
mov
repnz
cmp
rep
bound
aam
mov
das
testb
sbb
push
daa
dec
push
xchg
sar
push
inc
cltd
fsubrp
pushf
sub
arpl
test
rolb
inc
add
clc
lock
es
inc
mov
mov
jns
jno
testb
int
xor
lds
popa
leave
aam
inc
in
sub
adc
pop
cmp
jge
cmpsb
hlt
mov
jbe
add
aam
mov
fsubl
addl
out
in
mov
and
push
dec
loopne
aas
pop
adcb
mov
fmulp
xchg
movsb
in
xchg
mov
fisttpl
or
xchg
lds
jle
adc
rolb
xchg
addr16
and
ret
scas
lods
inc
aaa
dec
or
imul
inc
rorb
out
mov
ds
cmp
push
je
jg
mov
pop
insb
into
cld
adc
imul
ret
loope
inc
dec
fistpll
push
cld
mov
sub
repnz
adc
or
inc
mov
sub
dec
adc
in
lahf
mov
jo
out
clc
stos
int
pushf
inc
or
mov
pop
sbb
pop
push
lret
xorb
push
insl
jbe
ret
sbbl
out
mov
shl
sbb
push
adc
cmpsl
rclb
sbb
xchg
in
movsl
ja
mov
sub
jno
lret
mov
sub
cltd
or
xchg
or
mov
jns
inc
repz
std
je
cmp
sbb
scas
dec
cmpsl
jbe
jle
and
inc
pop
adc
jle
mov
adc
mov
sbb
jg
mov
jmp
js
push
mov
cmc
lret
sbb
adc
jg
adc
mov
mulb
loopne
lock
xlat
lret
lds
push
es
xchg
imul
push
lcall
out
mov
insl
lods
inc
es
wbinvd
jo
imul
sub
jle
inc
stc
es
out
in
mov
lea
ror
sbb
jmp
repnz
cmpsl
mov
sub
sbb
popf
mov
movsb
imul
cmp
popf
jno
mov
in
mov
ja
xchg
mov
pop
scas
push
sbb
pop
ss
mov
pop
hlt
xor
subl
cmp
ja
icebp
xchg
les
inc
sbb
mov
hlt
stos
push
out
mov
enter
ja
xor
aad
inc
fwait
das
movntq
out
jnp
adc
mov
mov
je
xor
xchg
icebp
icebp
mov
loop
rorl
scas
orb
int
push
mov
dec
out
add
outsl
data16
add
mov
clc
xchg
or
mov
jbe
movl
mov
int
test
and
fs
inc
ret
lds
daa
aaa
jecxz
dec
loope
xor
es
les
sbb
mov
fstps
lcall
addl
jno
xchg
js
inc
shl
loopne
leave
ljmp
mov
cwtl
xor
lret
or
mov
aaa
sub
lods
cmp
pop
inc
ret
fisubl
out
std
in
adc
or
dec
int
mov
mov
cli
sar
dec
jae
mov
and
sub
adc
test
arpl
cmp
or
leave
jecxz
push
cwtl
xchg
popf
xchg
push
sbb
out
xchg
add
add
enter
fstpl
shll
rorl
jmp
and
loope
ja
daa
cmp
xchg
jl
dec
addr16
shll
clc
xchg
jg
push
push
daa
add
dec
frstor
mov
fimuls
xor
xor
mov
sbb
pop
je
sub
imul
arpl
sbb
adc
xchg
fldenv
push
int3
clc
lret
lds
inc
xor
add
or
lock
stos
loop
sbbl
and
nop
pop
cmpsb
pop
dec
ja
out
arpl
mov
or
mov
jns
and
or
ljmp
cmp
push
add
mov
bnd
pop
jle
adc
jmp
imul
mov
and
sbbl
test
and
mov
lock
orl
jmp
inc
dec
es
pop
and
bound
pop
cmp
jecxz
fisubl
push
inc
mov
pushf
sarl
mov
or
std
mov
jnp
cmp
jp
or
loope
test
daa
pusha
arpl
pop
aad
clc
or
rclb
sbb
push
mov
sbb
loope
rcll
mov
xlat
dec
dec
push
mov
push
pop
push
jb
daa
xor
pop
adc
pop
sub
lds
jbe
xchg
jp
xor
mov
cmp
mov
in
mov
mov
fs
jl
fwait
repz
outsb
mov
pop
sbb
xor
xchg
lods
dec
mov
sub
lds
ja
outsb
sub
and
js
or
xchg
and
loopne
xor
dec
lods
ret
mov
adc
mov
mov
sub
imul
jle
int
pop
mov
les
push
sbb
lcall
and
cmp
aad
into
or
shll
adc
js
pusha
jmp
mov
int
and
add
mov
ljmp
out
xchg
mov
or
dec
pop
sahf
test
jnp
cli
jbe
std
dec
sbb
pop
nop
mov
sub
mov
cmp
xchg
jne
pop
dec
orl
jne
pop
shl
movsb
push
fucompp
fdivr
add
repz
cmp
jno
out
pop
cli
aas
aam
les
imul
icebp
int
xorl
mov
mov
mov
aaa
adc
in
inc
and
test
sub
push
test
and
idivl
jns
jns
int3
call
andl
mov
out
push
movsl
fisttpll
push
or
mov
mov
ljmp
mov
xchg
and
gs
add
nop
jns
in
test
or
jne
dec
xlat
sbb
repnz
mov
stc
or
jo
jns
jnp
jo
inc
fldcw
loope
in
ret
inc
in
adc
sti
fbld
mov
int3
push
push
rcr
imul
vorps
xchg
pushf
movsb
mov
arpl
add
repnz
jmp
mov
mov
fs
clc
aam
lcall
mulb
test
lock
adc
test
cmpsl
out
dec
sahf
cmp
clc
sub
jnp
mov
repnz
inc
les
inc
sbb
and
sub
ds
mov
in
xchg
mov
cltd
movsb
pop
sbb
icebp
imul
loope
movsb
push
xchg
jg
fdivrs
push
loope
mov
jae
out
cmp
adc
push
inc
adc
and
lock
adc
ret
mov
iret
jle
sbb
and
dec
cwtl
nop
movsl
pop
lock
lcall
xchg
add
and
or
or
movsb
out
das
lock
sub
jnp
je
je
xor
mov
sub
mov
into
movsl
fstl
sub
xchg
inc
call
lcall
sub
loopne
push
mov
int3
pop
jmp
xchg
data16
stos
add
xor
inc
lret
pop
push
jp
push
addr16
cs
insl
out
pop
push
or
xchg
lock
test
mov
push
sahf
pop
inc
inc
and
inc
xor
xor
jbe
adc
sbb
add
movsb
cmpsl
jle
stos
sub
cwtl
jb
outsl
loope
and
mov
add
in
mov
cmpb
mov
jmp
filds
pop
or
nop
scas
cld
hlt
adc
nop
add
jb
push
or
pop
jl
mov
jo
mov
cmpb
fincstp
cmp
jmp
xchg
dec
xor
cmc
stos
sub
sub
mov
addr16
jae
jnp
pop
push
stos
sti
inc
iret
inc
js,pt
jnp
cwtl
sbb
hlt
and
jge
repz
or
enter
add
and
push
push
dec
cltd
pusha
sub
push
out
pop
add
int
scas
mov
and
lea
ja
hlt
xchg
jecxz
mov
aaa
push
inc
ret
xor
out
pop
es
cmpsb
lea
stos
xchg
inc
les
xor
jb
in
notl
repnz
cmp
mov
mov
mov
lock
xchg
movsl
adc
xchg
mov
leave
stos
jb
or
cld
fsubs
inc
add
mov
mov
icebp
jbe
fisubl
into
jbe
pop
leave
xor
jnp
repnz
popa
or
inc
and
pop
push
movsb
movsb
push
imul
repz
loop
dec
fnstcw
push
push
push
ljmp
adc
xrelease
jbe
and
out
dec
in
adc
xchg
std
jg
adc
pop
cmp
popf
or
sbbl
das
ljmp
pushf
scas
scas
orl
jbe
in
cmp
bound
jno
inc
xor
stc
adc
push
pop
mov
movsl
cmpsl
iret
ja
sbb
pop
ljmp
dec
xor
mov
sbb
xchg
xchg
daa
fimuls
jb
pop
xchg
mov
test
dec
or
std
add
fadd
jb
lock
rol
sub
out
sub
inc
addr16
dec
jae
push
and
outsb
int
push
jno
mov
test
or
gs
xchg
push
and
stc
xchg
jmp
fisttps
jp
mov
dec
jne
mov
fistpll
sub
mov
inc
pop
mov
sbb
mov
cmp
imul
jo
adc
int
ret
adc
stc
sub
lods
daa
push
scas
dec
cmc
xchg
adc
jne
mov
insl
sbb
push
fsub
mov
jns
adc
dec
movsl
adc
xchg
push
std
imul
push
push
js
shrb
icebp
sbb
push
mov
mov
lahf
sub
inc
mov
hlt
push
insb
jno
and
xor
cmpsb
lea
mov
xor
mov
sbb
cmp
xor
cs
fcoms
dec
pop
xchg
mov
jecxz
push
push
pop
mov
rcrl
add
pop
xchg
and
adc
mov
sahf
inc
mov
and
out
lods
jbe
jmp
mov
xchg
movsl
lock
std
mov
and
cs
seto
fadd
inc
mov
adc
int3
nop
cs
idivl
fldenv
adc
div
sbb
jmp
stc
jge
test
mov
mov
test
negb
push
mov
pop
sub
ss
fisubl
inc
jns
pop
inc
jle
jbe
inc
scas
cmc
mov
fs
adc
push
movsb
daa
popf
orl
stos
ss
daa
in
pusha
cltd
dec
cmp
and
push
cwtl
inc
mov
and
and
negb
inc
or
movsl
pop
cmp
sbb
push
lds
dec
xchg
jle
outsb
add
push
sub
rcrl
adc
dec
sub
out
adc
loop
pop
mov
lock
xchg
scas
dec
jg
jo
loopne
test
adc
imul
jbe
cmc
push
push
out
daa
notb
push
xlat
in
dec
cs
xorb
icebp
jns
loop
sub
inc
daa
mov
push
mov
jbe
pushf
mov
or
adc
mov
sub
adc
mov
mov
stc
xchg
out
movsb
inc
into
pop
xor
addb
adc
cmpl
mov
dec
int3
ljmp
and
test
lcall
mov
adc
dec
jnp
push
inc
shll
mov
dec
outsl
pop
imul
sub
cs
sub
hlt
dec
sbb
mov
gs
addr16
data16
insl
adc
jo
sbb
loop
cwtl
xor
lcall
in
dec
add
dec
out
cmp
mov
or
sbb
adcb
xchg
pop
arpl
mov
or
aam
add
xchg
xchg
sbb
add
mov
incl
xor
cli
loop
aam
dec
inc
lahf
inc
lret
fldcw
cmp
push
adc
jae
cmp
and
es
fldl
push
xor
fistl
call
filds
add
or
mov
adc
jnp
inc
adc
inc
cmp
sub
lds
lds
dec
fistpll
outsb
cmpsl
jno
or
xor
jmp
pop
sarb
jb
jb
js
push
cmp
pop
call
stos
dec
jg
jns
dec
push
addr16
pop
fs
addr16
pusha
into
inc
mov
fucom
pop
inc
ret
cmp
inc
int
and
insl
clc
xor
xchg
pop
mov
adc
push
nop
jl
dec
xor
ljmp
mov
mov
push
sub
add
fxch
stos
dec
filds
shll
int
dec
sahf
fs
aad
or
loop
mov
aad
mov
sub
pop
ret
or
xor
faddl
in
in
stos
and
ret
leave
sbb
bswap
xchg
rclb
test
jp
stos
loopne
sub
ret
rcrb
lea
adc
mov
and
mov
add
cmp
loop
dec
mov
fisttps
mov
fsubr
jbe
push
loope
cmpsb
inc
mov
push
and
sbb
test
dec
out
mov
xchg
enter
je
scas
out
pop
in
cwtl
cmp
mov
in
rorb
scas
mov
loopne
and
pop
push
popa
cmpl
xchg
jae
stos
loope
mov
stc
or
adcl
sbb
add
fcomps
daa
push
icebp
shl
pop
mov
call
stos
iret
fdivrp
mov
in
testb
xor
pusha
mov
pop
enter
out
pop
stos
int
push
inc
or
repz
or
lods
aam
loop
lret
icebp
pop
pop
flds
adc
out
fldt
int
adcb
cld
sbb
ss
and
mov
sbb
decl
aad
inc
xor
aas
imul
xor
mov
mov
in
lcall
sar
cmpsl
mov
jns
jnp
jp
rcrl
lcall
scas
lods
xchg
jae
je
pop
mov
subl
call
mov
sub
xchg
lret
hlt
xor
jg
mov
rolb
insl
cmc
sbb
mov
xchg
sahf
jo
lods
jl
test
sub
jl
jecxz
std
icebp
daa
cmp
add
dec
daa
call
xchg
popa
pop
pop
mov
lret
push
mov
inc
outsl
push
jle
mov
movsb
imul
lds
loop
int
dec
hlt
out
pop
mov
mov
out
add
mov
xlat
ljmp
repz
push
lret
inc
cltd
xchg
testb
cwtl
xchg
test
dec
test
fldenv
fsubrl
mov
lcall
in
shlb
jg
cmpsl
sahf
cltd
addl
add
mov
mov
xlat
clc
pop
push
fstl
lret
icebp
sahf
fidivrs
cmp
lret
sbb
dec
xchg
stc
adc
sbb
sbb
xchg
cmp
push
sbb
sbb
test
add
jnp
jp
rclb
pop
mov
inc
popa
jl
test
xor
movsl
pop
adc
push
mov
mov
aaa
sub
cmp
fs
dec
push
nop
add
fiadds
adc
add
js
insl
jbe
loope
push
fsub
cmp
shlb
not
js
inc
mov
cmp
sti
xor
mov
or
lcall
imul
adc
jle
push
dec
and
or
adcb
cmpb
fbstp
ret
xchg
adc
pop
cld
sub
push
or
xchg
scas
sbb
shlb
ret
mov
inc
cmc
cmpl
adcl
push
and
mov
push
imul
cwtl
icebp
push
cli
in
cltd
jl
mov
sti
pop
mov
pop
pop
scas
jns
jge
jo
sub
cmp
fldl
push
cmp
push
add
jne
lock
or
sub
stos
lods
daa
jae
xor
mov
jne
sub
xor
pop
negb
sbb
cmp
adc
pop
push
adc
xor
out
lock
jle
pusha
aam
cs
ljmp
adc
test
sub
cmpsb
xchg
or
mov
adc
gs
mov
les
cmp
mov
lods
xchg
inc
ss
push
test
xor
lcall
es
fisttpl
push
jb
push
sub
mov
cmc
sub
jp
push
bound
lcall
add
dec
lcall
aad
push
ret
jb
es
and
sub
push
repz
sub
fldlg2
outsb
popf
fisubl
mov
rolb
inc
push
shll
add
popf
fiadds
dec
mov
sbb
lret
sub
leave
pop
dec
fisttpl
arpl
push
dec
gs
ljmp
or
ja
ja
inc
mov
mov
fcoml
imul
lret
std
in
aas
pusha
cmpsl
loope
xchg
movsb
scas
jge
mov
cmpsl
pop
out
imul
pushf
fcmovnbe
mov
inc
cwtl
jmp
mov
or
in
sbb
mov
mov
das
mov
pop
shl
mov
call
testb
pop
movsb
out
mov
pop
pop
xchg
mov
popa
cs
lret
mov
jae
sbb
pop
cmp
aad
pop
hlt
test
in
adc
adc
hlt
addr16
inc
fnsave
test
mov
xor
xchg
xor
mov
push
sbb
or
jae
mov
push
jle
mov
outsl
sub
lahf
bound
mov
fdiv
xchg
cs
in
lods
or
mov
jnp
ljmp
fwait
loopne
or
clc
scas
imul
fisubrl
int
add
adc
cmc
sub
outsb
mov
and
push
xchg
dec
inc
loope
ljmp
dec
sub
inc
mov
inc
in
call
out
push
pop
sbb
mov
dec
fimuls
test
shr
cmpsb
sbb
xlat
outsb
test
imul
pushf
mov
push
inc
cli
sbb
lea
shl
fadd
inc
mov
cwtl
xor
in
xlat
movsl
lods
push
inc
addr16
cmp
rolb
outsb
and
mov
aam
cmpsl
push
xchg
insb
jbe
xor
push
jmp
leave
cmpsb
cs
inc
std
rcrb
mov
aas
sub
mov
jns
ljmp
push
cmp
cmp
xchg
xchg
lcall
push
roll
int
es
push
cmpl
loop
add
mov
cs
nop
stc
dec
insb
jecxz
mov
or
adc
xlat
dec
xchg
insl
lret
lds
xchg
fwait
fs
push
mov
inc
jns
mov
push
xchg
adc
leave
push
sbb
cmpl
pop
ror
clc
pop
lahf
movsb
fwait
xor
sarb
ret
fiadds
inc
imul
mov
pop
js
icebp
mov
fidivrs
xchg
rolb
or
xor
lock
push
dec
loopne
xchg
scas
jne
sub
mov
rorl
pop
data16
mov
incl
loopne
stc
dec
mov
push
je
xchg
lds
xor
ret
int3
mov
cmp
pop
hlt
jmp
roll
ja
clc
ret
int3
xor
jne
dec
sahf
mov
jge
inc
stos
popf
mov
sti
and
add
rcrb
int
jl
sbbb
add
xlat
xchg
in
mov
out
fistl
jae
fiadds
pop
dec
ss
push
pop
outsl
mov
into
and
sub
stos
mov
imul
clc
sar
push
arpl
jle
insb
scas
pop
roll
in
arpl
popf
pop
les
adcb
cli
jnp
icebp
sub
js
pop
adc
ja
push
aas
sar
in
in
mov
fwait
mov
sbb
fisubrl
add
fists
sub
mov
pop
cmpsl
mov
adc
adcb
push
lret
out
addr16
fcmovnbe
cmpsl
call
jae
mov
std
mov
ja
pop
fimuls
or
clc
cmp
rol
les
sbb
push
inc
xchg
jg
sbb
lods
cld
daa
lcall
pop
cmpsb
pusha
out
mov
adc
rcrl
push
pop
xchg
loopne
push
jae
xchg
mov
aas
cmpsl
scas
repz
push
cwtl
jbe
fs
jmp
imul
mov
js
cli
or
outsl
sarb
add
adc
movsb
adc
aaa
call
gs
pop
mov
cs
lret
xchg
daa
adc
push
pop
fs
and
movsl
jb
cmp
ja
cwtl
lret
jns,pt
and
adc
mov
cmp
aaa
repnz
push
cmc
xor
andl
mov
outsb
into
sti
and
xor
stc
mov
ljmp
leave
hlt
mov
push
jo
imul
and
cld
xchg
sbb
cmpl
sti
outsl
dec
or
cs
xor
daa
mov
loopne
jne
xor
sub
cltd
loop
js
mov
jne
jae
jb
mov
movzbl
clc
ficomps
adc
mov
outsl
clc
psubusb
mov
lret
mov
dec
lock
adc
ret
pop
pop
inc
mov
fwait
jecxz
or
adc
xchg
dec
outsl
mov
out
enter
cmp
cs
pusha
pop
mov
ss
in
fwait
jnp
and
xchg
pop
push
xchg
aad
bound
cmp
pop
mov
pop
pop
sbb
adc
into
mov
mov
in
test
jo
adc
push
mov
jns
aad
sub
pop
lret
mov
mov
inc
sti
dec
push
mov
pop
lea
repnz
pushl
aas
add
sahf
jae
out
test
adc
jmp
movsl
fmulp
pop
test
dec
or
out
cltd
and
cmp
xchg
and
mov
push
stc
sbb
jnp
in
mov
incb
int3
xor
xor
jne
xor
add
dec
lahf
or
cmpsl
sub
mov
es
mov
jns
adc
shrb
dec
xorb
jg
or
ret
inc
out
mov
scas
ljmp
jo
mov
lret
sub
mov
scas
shrb
inc
sub
xor
rcl
loope
sbb
pop
dec
movsl
jnp
stc
leave
mov
mov
repz
mov
mov
push
in
mov
out
xor
dec
or
dec
fs
jle
xchg
ftst
sub
add
ljmp
xchg
inc
xchg
xchg
jns
or
mov
mov
and
popa
or
jb
xchg
rclb
rcll
and
mov
es
les
ret
jge
ss
mov
arpl
mov
mov
jo
xor
lods
inc
imul
outsb
cli
mov
clc
stos
pop
jge
dec
out
test
sbb
xor
sbb
sbb
xchg
lods
shl
xchg
mov
je
sub
or
xlat
mov
mov
lods
sbb
out
xchg
repnz
in
lret
stos
jl
sub
es
dec
clc
cmp
pushf
aam
shll
daa
xchg
out
outsl
adc
insb
add
jmp
xchg
jge
data16
outsl
adc
int3
cli
iret
pusha
cwtl
add
lea
dec
xor
pop
xor
daa
pop
push
pop
and
sub
movsb
jecxz
cmp
adc
cmpb
mov
push
pop
mov
fidivrs
bound
adc
test
add
enter
mov
cltd
inc
pop
cmpsl
fmuls
add
pop
inc
xchg
fldcw
out
shr
pop
push
dec
fcoml
cmpsl
push
sbb
repz
cmp
pop
repnz
incb
jge
bound
in
push
dec
mov
ja
fadds
lods
sub
push
cmp
je
cmp
jns
loopne
mov
pop
and
jp
xlat
cmp
adc
cmpsb
cs
loop
lret
dec
insl
out
aam
mov
mov
or
mov
push
ds
and
sub
sub
xor
and
lods
jne
lea
mov
shr
scas
cmp
sbb
lea
mov
and
sbb
mov
daa
push
shrb
xchg
cli
sbb
lods
mov
dec
aad
out
ljmp
sbb
ficoml
das
lcall
push
popf
push
adc
ret
into
mov
jo
dec
push
mov
add
cmc
gs
mov
mov
mov
femms
xchg
les
push
xchg
push
cmp
fcomps
pusha
sub
mov
ljmp
jnp
aas
scas
sbb
lods
inc
fs
inc
push
orb
jg
addr16
mov
outsb
pop
xchg
mov
adc
lods
dec
xchg
rcrl
push
mov
addb
sub
push
mov
adc
or
add
inc
bound
rolb
or
sbb
fwait
mov
adc
fcmovnu
mov
std
jns
fmull
into
lret
inc
sbb
push
test
push
in
loopne
je
insl
mov
and
in
xor
outsl
push
cld
fistps
sbb
push
gs
mov
inc
mov
jp
mov
pop
dec
lods
and
ja
push
inc
cmpsl
add
das
outsb
sbb
dec
fsubrl
and
fnstsw
jge
adc
pop
jnp
mov
pop
inc
cmp
and
sbb
iret
xor
cmp
adc
je
popf
or
adc
test
push
inc
dec
sub
rcl
repnz
sbb
mov
lods
pop
insl
fisubl
add
clc
sbb
aam
loope
and
inc
xchg
cmc
xor
or
mov
dec
lcall
pusha
dec
test
dec
xchg
or
leave
or
std
lds
adc
pop
loope
or
fdiv
pop
ficoml
int
xor
nop
or
mov
xchg
pushf
pop
out
icebp
mov
lcall
stos
jl
lds
mov
cs
cmc
movups
push
push
jno
pop
lods
xor
ret
imul
outsb
dec
sahf
dec
insl
fabs
bound
pop
idivl
scas
mov
jl
lods
mov
leave
sti
sbb
push
push
idivb
mov
leave
cmp
xor
imul
xor
or
clc
data16
push
jnp
cwtl
mov
cmp
test
rcrl
imul
rorl
cmp
inc
std
inc
aaa
xchg
dec
adc
adc
sbb
pusha
aam
jp
adc
mov
fstpl
and
mov
cltd
shl
xor
call
out
jb
or
ljmp
int3
or
es
xchg
adc
mov
mov
sbb
push
cwtl
mov
cli
sub
testb
ficoms
mov
xchg
nop
imul
insb
push
xchg
add
test
pop
mov
loopne
rcrl
xlat
ret
sbb
inc
push
ss
insl
pop
lcall
push
outsb
call
cli
arpl
sub
test
and
sti
push
cltd
movsb
out
lcall
addr16
mov
dec
xchg
pushf
out
es
dec
popa
cmp
das
mov
mov
addr16
lods
cs
fucom
lea
leave
or
idivb
bound
push
rep
mov
fdivrl
mov
mov
mov
inc
cwtl
lret
sbb
inc
dec
lods
imull
jmp
jmp
xor
add
rolb
rorl
xor
iret
jge
fmuls
mov
dec
inc
mov
gs
movsb
rcll
and
pop
fildll
jmp
in
sar
imul
pop
rorb
pop
jp
icebp
fcmovne
lret
rolb
add
pop
mov
out
aas
or
int3
lahf
shlb
faddl
andb
fbld
hlt
inc
adc
ds
pop
jmp
and
aaa
outsb
int
nop
pusha
push
es
push
xor
jae
xchg
hlt
mov
stc
lock
adc
mov
mov
inc
and
lahf
adc
loopne
lea
repnz
or
icebp
cltd
pop
icebp
lahf
insl
mov
sbb
sahf
xor
lock
or
sbb
inc
test
xchg
insb
sub
and
out
cmp
repz
mov
dec
pushf
fstl
ret
lea
and
push
inc
sub
add
pop
dec
idivb
cmp
lock
or
inc
insb
xor
mov
xchg
xchg
into
sbb
sbb
lds
rcr
int
cwtl
ljmp
xlat
cmpl
mov
push
sub
repz
loop
mov
xor
aad
iret
jns
sbb
inc
icebp
mov
loope
jns
test
negb
inc
gs
arpl
mov
movb
mov
cmp
inc
adc
ret
out
std
xor
ljmp
insb
int3
mov
test
mov
inc
icebp
cs
movsl
mov
insb
jno
bound
cmovg
inc
xchg
push
and
push
add
push
not
sbb
jae
xor
sbb
repnz
mov
jl
push
mov
pop
out
mov
adc
fucom
fsubs
cwtl
pop
sub
leave
xchg
fisttpl
pop
dec
mov
aas
cld
pop
add
leave
int3
les
add
pop
fstl
mov
sub
jns
lea
adc
adcb
mov
mov
cmc
cld
popa
pop
jl
adc
leave
inc
arpl
outsl
xor
sub
loopne
jb
data16
insb
jne
push
std
lcall
mov
mov
mov
sbb
pop
ds
cmp
mov
xchg
jnp
aas
test
dec
jle
daa
ja
test
into
jbe
pusha
cmp
mov
lea
and
add
jne
mov
mov
adc
push
addr16
imul
add
sbb
subl
sub
sarl
std
cmp
int
rcll
dec
das
lret
ret
in
add
sub
jno
push
test
or
cmp
ret
pusha
lods
test
mov
cmpsl
adc
mov
mov
aad
scas
aaa
mov
pop
pop
or
mov
lods
fcmovb
mov
cmpsl
pop
xor
shlb
nop
jne
imul
jmp
popa
sahf
add
jb
mov
fisttps
push
dec
sbb
inc
or
xchg
movsb
push
ja
fstpt
pop
dec
push
cmp
rcrb
pop
les
adc
aad
fwait
jp
mov
ja
dec
cmp
ljmp
icebp
xchg
dec
pop
sti
mov
repz
insb
cmp
ret
lahf
push
orl
cmc
pop
fsubrl
xchg
sub
push
push
inc
xchg
adc
imul
push
xor
pop
xor
adc
xchg
fsubl
pushf
xchg
nop
dec
fcmovnbe
mov
mov
xor
scas
xor
stos
jg
into
mov
push
mov
scas
xor
sbb
shl
or
pop
add
push
aaa
js
and
cwtl
loopne
pop
pusha
les
add
fldenv
stos
xchg
loope
pop
mov
dec
sahf
push
addl
dec
cmp
pop
sbb
aaa
int
add
adc
lock
inc
sub
xor
inc
iret
fstps
outsb
imul
jge
add
sub
or
aaa
jnp
inc
mov
arpl
jg
fsubr
negl
mov
sbb
scas
mov
fcmovb
fxam
stos
lods
sbb
mov
mov
push
in
sub
in
aad
loopne
pushf
int3
pop
jb
ja
mov
pop
xchg
push
dec
mov
in
mov
lock
and
lcall
and
xlat
aas
jno
loopne
adc
xchg
rclb
xor
lock
movsb
push
addr16
ss
or
fisubl
inc
lret
jmp
filds
cmpsb
pusha
adc
xor
pop
mov
arpl
mov
sbbb
mov
xor
loope
jmp
push
mov
push
movsb
push
and
push
cs
or
or
scas
cld
fmull
scas
lods
in
pop
das
push
sub
jnp
ficoms
jmp
xchg
negw
mov
pop
lea
fdivs
stos
pop
mov
pop
leave
jecxz
cmpsb
inc
jecxz
xchg
and
mov
into
push
or
sbb
push
sbb
repz
xchg
pop
mov
icebp
aad
pop
mov
int3
mov
js
ffree
mov
pop
lea
sub
addr16
lods
push
lea
pop
push
jbe
mov
fidivl
pop
mov
andl
or
or
shl
fisubrs
xor
mov
adc
idiv
adc
fwait
imul
loop
js
mov
mov
cwtd
pop
mov
mov
mov
cmp
sbb
mov
daa
imul
pop
pop
mov
lock
adc
inc
xchg
lcall
mov
add
mov
insl
jne
adc
pop
loope
or
test
test
repz
mov
sub
mov
inc
add
aas
jl
or
fiaddl
jmp
daa
pop
and
sahf
pop
xchg
push
xchg
inc
xchg
sbb
stos
xchg
sbb
sarl
jbe
xchg
mov
xor
into
jns
repz
xor
mov
push
addb
int
shlb
inc
jno
pop
mov
xchg
je
adc
aam
scas
les
dec
lds
das
testl
xchg
shl
bound
and
loopne
repz
fs
jecxz
mov
jo
jbe
sbb
cmp
mov
jo
inc
rclb
pop
je
rolb
in
inc
into
pusha
int
loopne
aas
sbb
xor
loopne
int
sub
mov
jo
dec
scas
add
scas
in
xor
cmp
cmp
and
nop
adc
jno
inc
popa
pushf
or
les
out
jbe
sbb
fs
push
mov
mov
mov
jnp
lods
pop
sbb
xor
jp
pushf
ficoms
les
call
int3
sbb
pop
cwtl
scas
pop
in
push
pop
lret
daa
pop
pushf
loope
sbb
int
xlat
jge
lock
incb
fisttpll
pop
or
into
int3
cmp
mov
adcb
cmc
ret
cs
out
dec
hlt
dec
fstps
adc
push
xchg
xor
and
nop
push
add
sbbb
cmp
icebp
inc
adc
sbb
sub
pushf
decl
pop
adc
into
inc
dec
xchg
mov
adc
add
mov
or
or
call
repz
xor
sbb
inc
xor
adc
js
xlat
inc
xchg
jl
lock
addr16
and
in
jl
sti
mov
sbb
pop
mov
jo
sbbb
fadd
wrmsr
mov
sbb
repz
test
jle
mov
xor
push
ret
int
fistps
sbb
outsb
cwtl
inc
xor
jbe
sub
pop
pop
push
lahf
scas
fsubrs
and
out
jnp
leave
scas
fldt
imul
add
xchg
adc
add
ljmp
mov
movsl
inc
mov
btsl
xchg
daa
mov
or
xor
fdivrl
push
dec
roll
and
xor
dec
jle
lret
clc
outsb
subb
xchg
cld
repnz
dec
inc
dec
sahf
pop
cmpsl
je,pt
inc
xor
cwtl
sti
adc
pop
mov
data16
sub
fldl
aaa
dec
insb
fcoml
nop
xchg
or
push
mov
inc
sub
xchg
inc
xchg
add
pop
lock
push
out
mov
int3
xchg
cmc
popa
and
mov
in
sub
pop
lcall
enter
divl
mov
jmp
movsl
lret
loope
cmc
orl
outsb
jns
mov
imul
inc
lcall
daa
pop
or
mov
dec
ja
lds
mov
sbb
jns
push
or
dec
xchg
in
push
fnsave
sbb
nop
mov
mov
pop
mov
inc
jno
mov
outsb
ds
out
cmp
les
adc
in
jnp
fistpl
or
mov
xchg
fst
gs
add
add
push
xchg
mov
repnz
stc
fnsave
or
mov
stos
out
push
mov
stos
test
adc
aas
xchg
ss
shl
xor
ret
loope
fisubs
sub
and
add
inc
or
out
ja
cwtl
mov
subb
arpl
sbb
cmpsl
into
shl
mov
inc
xchg
data16
jp
xor
jmp
push
ds
add
and
pushf
andb
pusha
inc
push
sub
cmp
dec
out
sub
popa
test
pop
stc
xchg
divl
jp
push
xchg
int
push
adc
jge
mov
popf
cmc
repz
jb
pop
mov
das
loop
mov
pop
mov
es
sti
stos
lods
rcll
int3
into
mov
mov
sbb
pop
and
loope
pop
loope
cld
pop
imul
lret
pop
mov
cmc
fwait
or
jle
xchg
test
clc
bound
sub
sub
sub
ret
popa
repnz
or
out
or
xchg
xchg
lcall
push
pop
jg
lds
repnz
movsb
pop
inc
pushf
movsb
xchg
push
sbb
xchg
out
and
popa
out
mov
jmp
popa
jo
jnp
mov
imul
cmp
int
out
push
push
aas
add
push
mov
mov
mov
rclb
test
mov
xchg
lods
repz
adc
loopne
lret
mov
mov
sarb
lock
xor
jno
or
mov
cmp
sbb
push
push
leave
mov
xchg
loope
mov
in
xlat
mov
movsb
jo
in
lahf
adc
loopne
xor
add
pop
test
popl
out
gs
xlat
in
xor
cld
dec
push
loop
fistpll
mov
xchg
rcll
movsb
push
add
push
or
imul
and
mulb
fisttpll
data16
pop
stos
aaa
mov
push
or
idivl
mov
inc
fsubl
sbb
scas
in
lcall
cmc
or
sub
adc
xchg
scas
sbb
push
sbb
adc
jl
movsb
std
push
int
ret
insb
xor
faddl
mov
fnstenv
cs
mov
in
pop
imul
sub
xor
jecxz
jge
inc
dec
push
mov
mov
scas
push
sub
adc
lea
xchg
cmp
xchg
enter
mov
test
and
jmp
ljmp
sar
and
pop
dec
pop
movsl
pop
fcomps
or
inc
xor
adc
xchg
test
sar
hlt
inc
movl
idivb
jle
cmp
out
pop
pop
and
add
incl
jle
cmp
outsl
adc
in
stos
lods
in
xor
lahf
pop
inc
pop
jl
sbb
repnz
repnz
pop
jp
sub
pop
fdivrl
lret
or
fwait
aas
xor
out
sbb
cmpl
push
mov
mov
out
lock
fisttpll
sbb
pop
cld
xor
data16
stc
mov
lretw
and
sbb
cli
out
xor
fstp
dec
jnp
aaa
push
add
repnz
xor
xchg
and
js
loopne
cmp
pop
dec
mov
test
push
pop
je
fcoms
jns
fwait
cli
les
or
lret
fisubs
js
mov
mov
adc
adc
scas
inc
and
std
or
inc
lcall
popf
call
jle
movsl
xor
cmpsb
sub
jg
inc
dec
jmp
cltd
cmp
push
inc
inc
sub
sti
cs
xchg
sub
sub
es
pop
jb
or
into
mov
arpl
add
jmp
cs
icebp
imul
xchg
jp
aas
gs
or
and
rorb
push
arpl
mov
psraw
mov
mov
dec
add
test
pop
lahf
or
nop
mov
test
and
fmulp
push
push
push
jmp
xchg
jg
les
or
cs
adc
adc
sahf
sbbl
mov
adc
jbe
mov
mov
aam
mov
push
lds
adc
inc
mov
nop
dec
add
test
inc
inc
imul
fidivrl
xchg
lea
push
jp
je
xchg
add
adc
push
icebp
cmc
fs
lret
inc
dec
inc
fildl
pop
adc
xchg
jmp
out
sub
vpacksswb
in
inc
mov
std
push
pushl
dec
inc
mov
lret
es
into
mov
mov
in
je
cmp
add
push
test
enter
daa
mov
aam
sbb
pop
cmp
iret
or
lock
rcrb
popa
fildl
lret
imul
pop
jo
xor
loop
stos
mov
in
bound
or
or
push
add
sti
xlat
push
sahf
lock
incb
cmp
push
cwtl
inc
call
push
cmp
mov
push
xlat
aam
add
jbe
mov
dec
sbb
in
mov
movsb
outsb
xchg
and
movl
into
scas
or
xchg
mov
add
mov
sbb
loope
xchg
imul
pop
and
xchg
push
adc
mov
iret
sub
ss
xor
add
or
xchg
or
fmuls
test
repz
ds
mov
movsb
popa
insl
ljmp
rcr
outsb
cmpl
push
push
cmc
fucomip
sbb
ss
xor
test
cmp
leave
mov
jae
adc
pop
push
lds
stc
int
aas
test
stc
ror
popa
js
out
add
adc
shlb
int3
fbld
in
push
mov
mov
mov
test
lock
fistps
sbb
pop
pop
add
jge
andb
insb
rol
aas
sub
jmp
lret
pop
orl
mov
int
loopne
mov
repnz
sbb
testb
inc
dec
popa
fistpll
fdivrl
inc
ficomps
push
pop
call
cmc
sub
sbb
push
movsl
sbb
cmpsb
lahf
push
jno
rdpmc
std
orl
inc
jo
push
pop
iret
negl
mov
addr16
mov
cmp
dec
lock
popf
jecxz
adc
sbb
aaa
int
add
lret
mov
test
or
mov
sbb
and
mov
inc
mov
pop
inc
pop
jmp
insl
es
pop
push
idivb
adcb
lret
sub
cltd
sti
daa
sahf
scas
jb
xchg
sbbb
lret
mov
scas
xchg
jb
jb
pop
push
xchg
mov
pushf
shrb
mov
pop
and
add
dec
add
cmc
aaa
pop
hlt
push
xor
call
imul
jg
jmp
and
out
pop
aad
pop
xchg
cmp
ret
cld
and
or
pop
mov
ljmp
insb
dec
sub
cmpsb
fs
sub
and
jns
pop
scas
adc
mov
push
add
jb
negl
test
in
rcrl
cli
mov
roll
jns
aam
stos
icebp
xor
in
jb
adc
inc
add
addr16
push
mov
jmp
sub
inc
mov
cmpb
test
fdiv
std
inc
gs
xchg
dec
xchg
adc
push
ret
in
aam
inc
fs
lods
leave
lea
repnz
mov
clc
sti
mov
xchg
dec
push
aam
bound
icebp
mov
push
cmp
das
pop
pop
aaa
subl
std
add
test
loop
roll
or
sbb
seto
mov
jns
addr16
xchg
repnz
inc
leave
and
sub
mov
test
pusha
mov
pusha
xor
push
dec
cmc
or
stos
sbb
jle
subb
pop
mov
mov
jge
push
idivb
clc
int3
xor
sub
xor
or
notl
in
imul
adc
adc
dec
test
mov
push
imul
mov
sti
xor
stos
nop
add
shr
pop
add
dec
sub
mov
cmc
or
jo
lods
mov
xor
mov
jg
clc
daa
dec
xchg
shlb
pop
sbb
sub
mov
add
leave
out
dec
scas
add
icebp
mov
and
loop
or
push
inc
daa
outsb
out
clc
aad
test
jecxz
sbb
testl
sbb
mov
push
bound
cwtl
imull
andb
scas
mov
ret
jb
das
sub
addl
sbb
movsb
leave
mov
scas
sub
enter
and
push
and
icebp
fcoml
add
jg
fwait
jo
jmp
jp
in
mov
inc
xchg
fsubrs
loop
out
sarl
rcrb
jl
sbb
xchg
dec
stos
outsl
addr16
fisubl
arpl
enter
fadds
jg
aad
mov
xchg
xor
test
inc
data16
pop
cmc
faddl
push
adc
mov
or
repz
and
arpl
inc
xorl
mov
imul
pop
sbb
sub
mov
dec
jmp
les
insb
dec
pop
push
test
lcall
add
sbb
or
pop
jns
popf
ss
mov
clc
jg
xor
jbe
sbb
jmp
jae
cmc
push
xlat
mov
fwait
rcrl
sbb
call
mov
jmp
push
out
and
sbb
into
push
mov
and
inc
jbe
subb
mov
jge
sub
mov
addl
je
add
xchg
subb
rol
popf
push
int
mov
mov
fxch
jg
cmpsb
sahf
push
test
mov
add
sub
jge
and
xor
mov
les
stc
mov
sbb
in
addr16
in
and
jb
rolb
outsl
movsl
pop
add
mov
mov
pop
mov
add
mov
not
aas
add
inc
rorb
in
mov
sbb
mul
test
sub
jmp
call
in
stos
push
lahf
out
dec
or
lcall
inc
adc
mov
out
daa
int
outsb
into
outsb
push
out
scas
aas
test
mov
fsubrl
push
dec
in
sbb
scas
outsb
loope
cmpsb
lret
mov
fldl
cltd
jnp
or
inc
test
fimuls
add
mov
dec
leave
push
ljmp
sahf
pusha
mov
in
mov
sbb
enter
in
push
lea
jl
push
sbb
lret
and
mov
mov
cmp
cmpsb
loopne
lds
xor
push
scas
mov
pop
adc
lods
cli
sub
fcmovu
jo
in
jecxz
or
pop
nop
and
inc
aas
jb
mov
cmc
mov
bt
mov
dec
dec
js
xchg
bound
je
rcl
mov
mov
out
mov
out
or
lcall
pop
sub
jae
imul
inc
pushf
nop
imul
pop
mov
shll
cltd
and
leave
fildll
xchg
xchg
fsubs
cmp
sbb
aaa
test
inc
dec
push
sarl
xchg
gs
jmp
les
imul
jne
daa
das
sub
mov
inc
scas
xchg
mov
aas
rcl
sub
addr16
cmp
js
repnz
cmp
mov
inc
xchg
lods
sbb
or
xorl
jmp
cmp
push
mov
gs
ljmp
mov
mov
mov
or
jg
sti
bound
scas
cmp
and
push
in
test
test
test
daa
je
cmp
sub
roll
lods
in
adc
movb
mov
das
cmc
or
xor
cmp
mov
test
cmp
xchg
xchg
sub
dec
lahf
int
in
js
sti
pop
push
insl
dec
sbb
movsb
rcll
out
fiadds
loopne
scas
push
fists
addl
push
sarl
clc
mov
mov
clc
jne
xor
in
and
pusha
hlt
faddl
leave
fld
enter
pop
sahf
bnd
adc
or
pushf
rcll
or
and
cltd
mov
icebp
inc
jae
test
xchg
lock
test
fwait
test
daa
push
xor
dec
sbb
into
les
xor
jle,pn
jecxz
jns
jmp
mov
sbb
out
int3
out
addr16
jns
test
shlb
decb
xorl
insl
jbe
negb
xor
jle
test
pop
fadds
xchg
cmp
jb
ficomps
lock
shrl
jns
push
frstor
xchg
add
and
pop
and
add
inc
rcll
fists
imul
lret
or
push
popf
adcl
orl
push
pop
add
les
add
xor
and
and
shr
push
insb
rol
cmp
push
push
adc
sbb
push
xchg
sarb
adc
push
lods
arpl
imul
or
mov
jl
dec
cld
xchg
mov
pop
push
cmpsb
cld
test
cmc
push
pop
stos
fs
cmp
sar
lret
shl
cmp
jno
push
ss
adc
js
xchg
cmc
int3
js
scas
xlat
lods
orb
dec
fnstenv
and
or
adc
sbb
jb
cltd
xchg
shll
rcl
pop
out
sbb
add
mov
jg
xor
and
in
insl
xor
cs
mov
sahf
outsl
fs
rorb
inc
push
mov
jne
dec
inc
fstl
push
insl
stos
jae
ss
data16
xor
sbb
mov
sbb
sub
cmp
xchg
cwtl
add
push
cmp
js
fidivs
sub
xchg
loope
inc
cmpsb
shll
arpl
pop
sahf
pusha
cwtl
sub
xor
jno
stc
lret
inc
inc
pop
and
xchg
cmpsb
insb
lcall
imul
dec
pop
add
add
repz
je
int3
xor
iret
ja
ljmp
dec
jg
push
mov
xor
inc
xor
iret
mov
jle
xor
fs
and
xor
mov
out
sub
adc
push
xorb
mov
sbbl
es
dec
xlat
movsl
add
push
or
stos
repz
cmc
insb
jo
ret
jmp
adc
loop
les
dec
sbb
pop
sub
daa
repnz
enter
pushf
mov
stc
push
mov
push
arpl
mov
cmp
dec
out
inc
testl
cmp
bound
adc
std
or
jg
pop
dec
loop
fsub
sub
inc
icebp
push
lea
les
rcll
push
sub
lods
insb
filds
cmc
jecxz
add
inc
mov
pop
sahf
in
fcoms
lods
cmpb
xor
fsubp
sbb
adc
jp
inc
dec
ficoml
pop
outsl
push
xchg
mov
dec
nop
adc
test
sbb
rclb
dec
or
dec
fs
push
inc
jbe
aam
ja
lret
adc
sbb
pop
jae
cmp
cld
or
add
cmc
int
js
pop
mov
sbb
lcall
je
sbb
inc
mov
sbb
jb
pop
cmp
sbb
lods
rolb
movsl
movsb
les
mov
fistpl
scas
sbb
mov
ja
sub
mov
aam
inc
sub
mov
add
adc
or
mov
arpl
push
sub
add
cltd
sbb
cmp
in
lahf
arpl
cmp
out
imul
jb
push
sti
into
mov
fsubs
lods
bound
outsl
pusha
inc
or
out
or
imul
fmul
and
repnz
cmp
mov
lds
inc
mov
pop
sbb
bound
mov
lods
ja
jns
leave
cmp
std
clc
sbb
fsubrl
mov
pop
div
shll
cmp
fdivrs
stos
sbb
fidivl
clc
sti
cmp
into
test
adc
call
inc
loopne
out
lcall
sub
cld
scas
daa
ja
dec
jg
xor
push
int3
jno
mov
out
lock
into
jge
bound
dec
dec
movsb
cmp
ja
lret
addr16
lods
cmp
dec
xor
movsl
add
cmp
loop
pop
repz
sub
pop
jb
xchg
in
in
mov
adc
leave
mov
sub
dec
adc
dec
cld
or
pop
in
outsb
cmp
sbb
lret
cld
aaa
mov
outsb
popa
clc
dec
jnp
xchg
mov
fldenv
fldt
or
inc
bound
cmp
jne
inc
jp
aam
popf
xor
inc
int
fisubs
inc
out
icebp
pop
shrl
add
and
inc
call
cs
mov
sub
aas
aam
adc
insb
incb
stos
xor
push
cmpsb
fildl
pop
mov
dec
sub
mov
aaa
dec
js
sbbb
mov
push
inc
cmp
ret
cmp
jg
push
repnz
in
inc
fisubrl
jne
mov
sti
pop
adc
mov
les
jg
es
xlat
popf
xchg
xorb
rolb
xchg
push
add
ja
stc
enter
jae
fildl
and
js
xchg
dec
mov
pop
inc
les
das
sub
sti
cmpb
jge
pusha
shl
mov
push
cmp
mov
cmp
or
lret
adc
out
mov
jl
xchg
pop
shrl
stos
push
mov
cmp
cmpb
arpl
xor
icebp
out
mov
mov
dec
xchg
ja
ret
fistps
xchg
xor
ret
sub
inc
sub
push
jmp
pop
fistps
imul
and
lods
dec
mov
or
pushf
mov
lods
test
fimuls
mov
jns
fisubl
imul
xor
subb
shrl
mov
fsts
mull
ret
mov
or
mov
cmp
cmc
ss
xchg
das
xor
aam
mov
mov
fucomi
popf
jmp
aam
in
add
mov
lods
sahf
fcomps
fisubl
movsl
xlat
lret
stc
inc
cmp
stos
and
or
fs
lret
in
lahf
xor
dec
push
or
outsb
data16
jmp
lods
out
dec
and
xchg
sti
out
std
pandn
dec
pop
mov
or
lds
divb
dec
loope
jne
das
mov
lds
mov
subb
and
xchg
int3
adc
mov
cmpsl
xor
sahf
js
lcall
xchg
clc
inc
mov
xchg
lods
repnz
fcompl
mov
insb
mov
movsl
imul
out
rcll
xchg
pop
jl
jbe
push
mov
stc
and
mov
push
and
in
rcrl
lods
mov
lods
fnstenv
inc
sbbb
add
dec
jo
inc
cmp
popf
mov
mov
dec
orl
out
lret
gs
mov
dec
jns
push
out
push
sbb
mov
mov
adc
xlat
imull
pop
js
adc
hlt
cmc
xor
ss
in
ss
jg
bswap
xor
clc
add
lret
out
out
add
push
xor
idivb
and
icebp
mov
jno
sahf
push
or
inc
mov
sti
xchg
fisttpll
sub
aad
ja
mov
dec
mov
pushf
test
aas
or
ja
and
jnp
lret
mov
xor
push
fucom
xor
das
outsl
or
pop
movsl
or
mov
movsb
fstpl
xorb
rcrl
adc
xchg
sub
fimuls
xchg
test
jae
aam
and
cmpsb
out
push
mov
and
jae
pop
pushf
test
mov
cmpsl
stc
or
add
aad
cmc
aas
mov
arpl
and
int
cmp
sub
xchg
dec
pop
push
inc
shll
cmp
inc
mov
ja
dec
pop
mov
pop
div
out
inc
sub
xchg
mov
cli
adc
aas
mov
lcall
movsl
sbb
ret
nop
mov
push
dec
inc
ss
lret
xchg
pop
hlt
push
jmp
inc
jns
fdivrl
in
jno
push
jecxz
les
dec
jle
or
mov
fs
and
dec
xor
ret
sub
fs
je
cmp
pop
call
int3
pop
outsb
addr16
push
or
popa
dec
dec
testl
mov
leave
cmpsl
imul
xchg
xor
mov
repz
sub
clc
fnsave
jbe
bndstx
int
aaa
and
pop
movsl
orl
push
push
xor
mov
push
out
hlt
loope
int
mov
cmpsb
in
scas
lret
mov
and
daa
addr16
pop
cld
mov
mov
inc
mov
cmp
adc
dec
add
pop
sub
xor
int
outsb
cmp
je
out
push
test
push
jb
mov
push
mov
jne
lock
pushf
xchg
and
sarb
dec
mov
push
mov
xor
xchg
imul
loop
rclb
aas
mov
xchg
inc
outsb
arpl
loope
std
pop
xchg
jmp
cmp
xchg
adc
push
test
jnp
pop
jno
jg
sbb
push
repnz
inc
sbb
and
mov
nop
inc
int3
rcrb
jecxz
faddl
rcrb
mov
push
inc
jecxz
arpl
adc
cmp
push
sub
cmp
aaa
add
inc
les
je
dec
loope
in
dec
in
push
outsb
loop
pop
fadds
or
fisttpll
mov
and
enter
or
shlb
and
push
imull
test
cmp
lcall
add
push
pop
data16
sbb
repz
fwait
cmc
jg
jmp
add
fldt
jne
loop
outsb
ss
stos
stc
cli
js
mov
mov
sbb
xchg
pop
ret
xchg
sub
and
loopne
mov
dec
aas
push
shrl
fildll
xor
push
sbb
nop
out
sbb
or
not
in
testl
jns
pushf
jbe
add
movsl
int3
das
dec
mov
hlt
cmp
xchg
nop
push
cli
into
sbb
ja
inc
lcall
insb
push
pop
mov
or
dec
xchg
fisubrs
enter
jne
ds
daa
cmovge
push
mov
xchg
cmp
mov
mov
pop
or
inc
push
pop
xor
adc
aas
int
pusha
fbstp
shrb
adc
loop
jle
sbb
xchg
sahf
imul
mov
mov
fcmovb
or
and
pusha
cs
pop
add
xchg
ds
mov
and
pop
enter
pop
shl
ret
test
in
sub
push
sub
jno
arpl
js
mov
ljmp
test
bound
rorl
add
or
xor
mov
clc
or
lret
out
es
lret
xchg
dec
and
fidivs
lahf
test
inc
add
cmpsb
add
test
daa
xchg
xor
inc
sbb
lods
mov
jge
lds
jne
out
cmpsb
adc
imul
or
jnp
imul
mov
arpl
xchg
adc
imul
or
pop
inc
lds
aaa
mov
inc
mov
fbstp
lahf
xchg
push
fnstcw
sub
test
push
fildll
pop
add
loop
outsb
push
ret
loop
test
jae,pt
loop
daa
mov
popa
cmpsl
jno
mulb
or
mov
push
js
popa
in
jl
mov
rcrb
in
jg
mov
add
int
cmpsb
loopne
test
gs
fldenv
sahf
clc
adc
mov
test
movsb
add
loop
sti
stos
xor
stos
aam
js
dec
push
addr16
mov
arpl
adc
mov
mov
fnsave
jae
loope
aam
jns
jge
mov
lcall
mov
add
add
insb
jbe
insb
jno
mov
cs
mov
inc
or
enter
cmp
dec
mov
jo
push
shl
push
xchg
popa
push
lea
ja
xchg
fldl
cld
dec
cmp
movsl
push
pop
into
call
ret
add
xchg
push
aas
and
mov
xor
jle
rorb
fistps
fisttps
cmpb
ja
xor
mov
insb
cltd
inc
lds
mov
addr16
sub
add
lahf
sbb
fistpl
stos
jge
test
fmull
xchg
hlt
push
ror
xor
push
xchg
repz
sbbl
xchg
scas
mov
and
lock
insb
add
dec
mov
pop
push
fs
jae
push
push
lods
std
push
dec
adc
mov
pop
pop
or
cli
jne
xchg
mov
mov
jmp
xchg
push
mov
icebp
leave
lea
xlat
adc
mov
int3
inc
es
not
out
jl
push
ss
cmp
ja
xor
stos
loop
pop
add
shl
xchg
push
fmuls
xor
jae
sbb
leave
dec
rcl
test
stos
pushf
push
xor
sbb
cmp
repnz
push
leave
fstpt
pop
add
inc
xchg
lods
pusha
push
or
push
call
cwtl
movsb
in
pushf
and
cmp
bound
mov
jb
cltd
add
push
fs
aad
pop
push
mov
mov
mov
daa
push
inc
xchg
cmp
jno
ljmp
fsub
in
and
es
inc
scas
sub
and
aas
test
movsb
cmpsl
imul
icebp
jno
jb
icebp
daa
push
jmp
sub
lods
int
mov
sbb
fsubr
sarl
mov
jbe
adc
add
mov
cs
and
bound
loopne
ror
lahf
popa
or
lock
xor
pop
aaa
add
movsb
into
inc
nop
xchg
jge
pushf
jmp
test
sbb
dec
sbb
mov
sarl
sub
mov
int
xchg
scas
xchg
mov
inc
outsl
pushf
leave
in
and
clc
lds
cltd
mov
push
pop
sbb
movsl
ret
adc
mov
cmpsl
add
inc
mov
or
pushf
mov
out
push
nop
pop
xchg
mov
push
pop
scas
negl
xchg
add
and
mov
sub
loope
js
adc
sub
push
in
xchg
jg
out
mov
cmc
ja
sub
imul
xchg
fdivrs
inc
leave
das
das
sub
pop
pop
cmpsb
inc
inc
mov
insb
in
sarb
mov
outsl
test
cmp
sahf
or
sti
cmp
sbb
push
jo
stos
int
sub
popa
loopne
sbb
mov
jae
fidivrl
orb
std
imul
adc
inc
cmovo
xchg
gs
mov
push
sbb
mov
je
and
fsubrs
xor
cli
shlb
scas
imul
xor
movsl
mov
imul
or
ffree
andl
notl
stc
pop
xchg
bts
inc
movsl
mov
jp
pop
fcmovnu
dec
pushf
xchg
jns
inc
leave
jns
inc
inc
negl
adc
pop
and
pop
mov
out
insb
pop
mov
push
jge
mov
or
shr
ret
cmp
xchg
les
cltd
or
cmp
xor
insb
js
or
dec
iret
add
mov
shrb
or
cld
inc
mov
stc
cwtl
in
or
inc
std
mov
cltd
jns
push
movsl
aam
outsb
rorl
add
jbe
in
push
xchg
jne
lret
xor
sbbb
pop
pusha
stc
cli
push
cltd
dec
add
sub
cmpsb
aad
lahf
mov
imul
pop
orb
xor
adc
pop
sarl
push
cli
adc
pop
sub
or
adc
cs
test
jae
push
test
mov
fwait
out
xor
addr16
mov
mov
cmp
scas
dec
sub
xchg
scas
mov
bound
cmp
ret
daa
leave
pop
mov
xchg
adc
and
ds
inc
mov
push
imul
xchg
dec
pop
dec
xorb
xchg
loope
adc
jg
lahf
push
movb
sti
inc
xchg
gs
ret
sub
jae
bound
pop
xor
cmp
in
iret
stos
ret
xor
movsl
jecxz
push
scas
icebp
mov
xchg
mov
dec
sub
adc
pop
or
out
jl
in
lret
cmpb
xchg
cwtl
push
lds
pop
aam
adc
int3
pop
out
sub
test
mov
xchg
mov
pop
push
fwait
cli
add
mov
sbb
cmpsl
enter
pop
rcll
call
add
ficompl
ljmp
pop
les
and
je
xor
sti
dec
cmp
add
ss
cmpsl
addr16
leave
jle
push
test
in
test
lahf
mov
mov
mov
push
or
lods
movsl
clc
shrl
xchg
mov
xor
sub
sub
fs
icebp
sub
arpl
adc
test
or
shlb
in
pop
loop
ja
xchg
jne
pop
mov
clc
fsubrs
jg
ja
xorl
arpl
sbb
jmp
adc
fistpl
or
mov
bound
and
mov
mov
ja
lock
stos
sbb
roll
daa
es
cwtl
jp
clc
inc
sub
xor
mov
xor
adc
mov
jne
sti
xchg
mov
jne
mov
aaa
push
fs
or
and
repnz
cmp
mov
std
jmp
addr16
sbb
pop
push
cmc
jns
cmpsl
es
sbb
lea
cmp
fs
cmp
mov
fbld
mov
jp
add
bound
mov
xor
mov
roll
lods
pop
decl
and
into
cli
mov
mov
mov
mulb
cmp
or
psrad
or
sbb
das
mov
pushf
sbb
lock
sbb
test
outsl
or
daa
jne
cli
xchg
pop
xchg
das
mov
push
repz
test
fdivl
push
or
setnp
nop
dec
loopne
sbb
jl
push
dec
cmp
cmp
test
sahf
sbb
data16
idivb
xchg
push
ja
dec
scas
add
xor
sbb
es
fadds
int3
fcompl
ds
hlt
or
mov
in
add
insb
or
ss
std
imul
orl
xor
pop
js
adc
mov
scas
push
ja
adc
stos
call
roll
pop
in
outsl
call
xor
push
xlat
inc
and
ret
jp
out
adc
call
xchg
mov
mov
lret
out
sub
mov
cld
ficompl
ds
inc
sub
sub
mov
jbe
dec
lahf
test
inc
jmp
or
shrb
push
cmp
fnsave
xor
test
movsl
lods
pop
cmpsl
in
or
rcrl
jns
cmp
rcrl
adc
aad
lret
cmp
fucomi
add
cmp
cld
pop
enter
and
insb
sbb
pop
add
jnp
filds
lock
lods
push
imul
outsb
test
jb
xchg
adc
dec
and
or
dec
adc
out
xchg
push
icebp
mov
mov
pop
or
mov
or
mov
cld
cli
xchg
push
test
addr16
std
arpl
cltd
lahf
pop
movsl
ja
les
in
jp
inc
mov
jl
or
arpl
enter
push
mov
into
cmp
or
xlat
dec
dec
testl
add
push
push
int3
pop
in
or
sbb
pop
xchg
out
or
jno
lods
mov
rorb
push
xchg
or
outsl
dec
inc
push
push
hlt
pop
negl
adc
outsl
lods
xor
daa
out
cs
dec
aas
dec
and
mov
xlat
or
enter
xor
js
or
repnz
nop
jge
aam
out
jnp
in
xor
adc
push
shll
fwait
xchg
popa
mov
pop
lret
aaa
or
add
adc
loope
sub
add
pop
add
inc
fwait
push
stos
and
or
lcall
roll
xorb
clc
pop
xor
or
cmpsb
out
xor
xchg
inc
jl
mov
dec
fcoml
mov
jnp
and
rcr
jge,pt
cli
lods
add
push
aas
mov
push
or
add
or
pop
xor
mov
js
out
test
cmp
inc
xchg
ret
ljmp
call
pop
adc
ret
xchg
ret
mov
push
sub
jae
push
jge
sbb
ss
sbb
testl
daa
adc
jo
fwait
and
imul
adc
push
xor
lods
icebp
sahf
cwtl
ror
sbb
int3
lods
pop
das
ljmp
stos
push
movsl
fldenv
scas
lea
fs
xchg
inc
xchg
rcrl
movsb
leave
lahf
into
push
fwait
aas
sub
cli
mov
outsl
or
out
into
lock
xchg
out
insl
out
fcoms
mov
adc
adc
sbb
adc
mov
movsl
push
cmp
add
adc
dec
outsl
or
adc
pusha
adc
pop
adc
scas
repz
inc
sbb
sbb
ds
stos
lods
sbb
orb
xchg
and
shrb
cwtl
jl
mov
pop
cmp
loopne
pop
pop
inc
cmp
int
cmp
std
xchg
aam
add
and
and
inc
fwait
cmp
inc
mull
or
adc
mov
push
xchg
cmp
das
cmc
xor
movsl
push
test
mov
sub
in
adc
pop
mov
inc
mov
add
imul
push
sub
out
mov
and
push
dec
xchg
cwtl
add
cmpsl
test
test
xchg
xchg
std
sub
push
cld
add
sahf
in
enter
repnz
roll
movsb
push
push
cmp
and
pop
iret
mov
pop
fcom
fiaddl
jo
cmp
cmpsl
jmp
jns
cld
loope
popf
shll
mov
cld
sbb
mov
xor
mov
movsb
stc
icebp
in
or
sub
mov
repnz
mov
nop
xor
cmpsl
cmc
mov
jmp
pop
fidivl
push
add
mov
xor
in
adcl
mov
loopne
ja
enter
inc
stos
push
inc
cwtl
jmp
clc
dec
ret
mov
fidivrl
repnz
outsb
aad
test
lds
inc
ss
cmp
movl
inc
scas
or
fldl
movsb
ret
sbb
iret
js
pop
pop
mov
cmp
pop
jg
jnp
lret
mov
mov
mov
and
pop
clc
pop
lea
or
push
lds
mov
mov
pop
das
xchg
sarl
popf
push
adc
push
mov
outsl
int3
cmpl
stos
cmp
aam
sbb
lahf
lods
inc
stos
hlt
orl
test
movsw
add
add
sub
shl
xchg
jl
stc
ljmp
popf
mov
fwait
pushf
mov
xchg
repnz
mov
daa
int3
movsb
sbb
subb
xor
mov
aaa
inc
xchg
insl
dec
push
ds
stos
nop
movsb
xor
addr16
push
inc
mov
xchg
sarl
lret
cmp
popa
mov
pop
test
out
bound
int
jb
aam
aam
push
cli
push
nop
inc
or
jl
arpl
dec
jo
das
sahf
inc
or
mov
or
sub
loope
xchg
sub
sbb
shl
sti
lahf
jbe
add
sbb
rcl
push
pop
sub
iret
stos
pop
mov
xor
cmp
mov
pop
fcomi
cs
mov
lock
xchg
into
fs
cmpsb
mov
adc
sub
lret
imul
sub
push
fadd
dec
cmp
inc
int3
fisttpll
repnz
jmp
mov
pop
pop
or
es
mov
mov
inc
repz
insl
aad
xor
lret
inc
and
or
jnp
test
and
xor
fsubs
sti
xchg
adcb
pop
ret
xlat
loopne
mov
out
sub
sbb
pop
lds
movsl
sub
or
and
loop
into
jb
insl
bound
mov
icebp
mov
mov
nop
push
je
xor
push
and
inc
and
ret
addb
sub
adc
xor
push
lret
inc
repz
and
andl
popa
mov
lds
add
push
fidivrs
movsl
inc
xchg
xchg
nop
and
and
popf
in
sbb
in
mov
dec
push
or
mov
loope
mov
lcall
cmp
pop
mov
sub
test
push
pop
lods
mov
pop
arpl
pop
push
xchg
in
pop
pop
mov
push
and
mov
rclb
stc
lret
out
pop
xchg
and
aam
popf
fcmovnbe
aam
xlat
bound
sbb
sub
mov
adc
xchg
or
dec
pop
push
dec
dec
sbb
push
mov
es
les
xor
xor
add
add
outsl
and
add
pop
cmpsb
enter
inc
xchg
sbb
clc
push
aaa
pop
cwtl
sbb
je
movsb
ljmp
inc
mov
aam
aam
loop
inc
add
pop
add
and
pushf
add
push
lret
pop
push
lret
pop
cltd
dec
loop
das
in
xor
push
lret
jg
add
adc
sub
aas
xchg
andb
mov
bound
sub
cmp
add
jno
jbe
mov
fidivs
test
mov
test
enter
sti
mov
lea
sub
push
mov
sbb
inc
inc
nop
xlat
pop
mov
arpl
cli
or
lds
pop
sub
repz
sbb
dec
hlt
js
sub
add
mov
jns
stc
push
sahf
and
js
jne
stos
outsb
add
pop
lea
es
jo
pop
mov
and
mov
pop
cmp
adc
inc
ret
repz
cmp
mov
pop
repz
imul
pop
cmpsb
sahf
jno
or
xchg
push
jecxz
and
movsb
cmpsl
aas
cmpsb
push
add
mov
test
inc
jo
mov
mov
into
mov
push
lods
cmp
push
outsl
cltd
hlt
add
shll
pop
dec
mov
jg
add
mov
ljmp
insl
jae
mov
insb
push
stc
jmp
fnstcw
xchg
test
push
mov
xchg
xchg
outsb
pop
fs
jo
lods
out
test
xlat
loope
push
lods
in
je
jae
adc
cld
jge
pop
xchg
pop
aas
adc
mov
inc
xor
mov
cs
sub
cmp
nop
jmp
cmp
je
ja
mov
or
cli
pop
out
pop
or
lds
cmp
call
in
lea
xchg
cli
lret
sysenter
or
xlat
ja
popf
jo
push
ficoml
sub
adc
or
mov
fdivl
aaa
jp
jmp
mov
cmp
daa
adc
lods
and
cs
mov
cltd
es
push
sub
mov
inc
push
push
push
shll
enter
bound
loop
or
push
jmp
mov
sbb
push
push
mov
adc
push
jne
loope
mov
clc
nop
mov
lock
and
inc
jb
dec
mov
add
dec
xor
xchg
adc
mov
jns
mov
movsl
pop
movsb
outsl
int3
jge
mov
or
pop
xchg
lock
push
scas
push
arpl
icebp
das
pop
sub
push
repz
and
push
out
fsubs
pop
sahf
push
outsb
sbb
xchg
daa
lock
inc
xor
mov
es
outsb
aas
inc
dec
xor
pop
int3
mov
scas
sahf
neg
mov
sbb
push
aaa
dec
cmp
jecxz
icebp
sbb
sbb
mov
sbb
mov
das
add
lret
or
pop
jnp
ja
ja
dec
push
lret
je
pop
js
and
sub
jmp
cmp
push
ret
cmpsb
or
jecxz
lahf
test
rcl
xchg
and
imul
les
push
cmpsl
jge
pop
aas
jb
sub
aam
je
sbb
aam
lret
sbb
add
jge
sub
push
rclb
dec
mov
sbb
lret
jmp
inc
ja
sbb
sti
in
shrb
cmp
adc
jle
jns
aaa
icebp
or
sub
mov
sub
pushf
fdivrs
add
sbb
fmuls
lcall
xor
mov
inc
sbb
mov
inc
movsl
dec
mov
loope
push
push
or
and
cmpsl
incb
mov
subb
inc
inc
fidivs
inc
sbb
inc
rcll
out
stc
jecxz
or
lds
dec
rol
bound
lock
stos
bound
or
jbe
xor
bound
push
and
movaps
movsb
mov
testl
mov
xor
jnp
jno
in
xchg
or
mov
into
sub
loop
test
adc
sub
loopne
push
dec
movsl
pop
cmp
int
call
inc
pop
push
mov
movsl
rcrl
mov
fisubrl
xchg
and
sysexit
pop
jge
push
pop
aad
clc
xor
add
sti
push
shl
ret
mov
cmpsb
mov
jmp
dec
inc
jae
jg
lds
mov
fs
mov
mov
fmull
into
add
jne
jns
fidivrl
xchg
cmp
scas
jo
call
cltd
les
sub
mov
xchg
pusha
jl
addr16
sub
or
xchg
lea
push
push
test
dec
xor
hlt
inc
cwtl
mov
iret
adc
jmp
imul
dec
mov
jle
mov
fimuls
xor
sbb
pop
aam
fwait
ret
or
mov
or
xor
inc
jnp
push
dec
or
in
mov
xchg
loop
daa
or
add
pop
xor
ds
cwtl
jne
test
bound
sahf
cli
negl
mov
in
lcall
sbb
sub
lea
mov
pop
mov
lock
pop
insb
mov
mov
mulb
imulb
push
insb
aas
int
movsb
mov
loopne
scas
lahf
pop
inc
and
cmp
enter
sti
pop
lret
adc
fnstsw
push
nop
add
sub
push
cmpsb
rol
mov
add
xchg
insb
rolb
divb
cmp
cmpsb
add
cmc
in
scas
int
in
rcrl
or
jmp
push
cmpsb
lods
je
jmp
cld
mov
aad
jae
mov
loopne
sub
cmp
cmp
xlat
xor
dec
popf
push
stc
sti
loope
repz
inc
es
pop
lcall
pop
js
cmp
cmp
and
daa
mov
loope
nop
xor
stos
int
fisubrs
test
mov
add
int
mov
add
ror
insl
or
int
xor
jne
dec
pusha
xchg
mov
aas
mov
jp
mov
divb
jno
jne
mov
nop
adc
xchg
test
inc
hlt
and
pop
leave
mov
adc
addb
or
push
lret
mov
js
test
cmc
cmp
sub
xlat
pushf
imul
leave
jb
icebp
push
pusha
mov
and
mov
imul
dec
cmpl
dec
xor
pop
call
arpl
call
mov
push
and
cmpb
lcall
iret
ror
pop
mov
test
pop
jmp
xchg
inc
mov
jno
mov
mov
xor
stos
imulb
or
sarl
jno
xchg
and
iret
hlt
push
cwtl
ja
les
mov
sub
in
ss
les
mov
and
sbb
add
shll
ds
rcrb
mov
int
cmp
iret
sub
jne
stc
sub
sahf
orb
pushf
xchg
jbe
fcomip
mov
jno
and
clc
ds
stc
mov
jge
fisubl
test
cli
ret
and
stos
cwtl
out
xchg
adc
inc
std
call
pop
int
mov
sbb
xchg
mov
sub
pop
clc
js
add
mov
ds
push
xor
add
popa
cmpl
icebp
push
ds
lods
jns
data16
mov
cmp
inc
add
sub
nop
cmp
or
pop
push
adc
cli
out
clc
or
sbb
xor
cmp
in
insl
negb
je
adc
sub
jmp
mov
shll
rcl
pop
repz
and
and
pop
pop
push
subl
jbe
aam
mov
fcmovnu
inc
cmpsb
movsb
adc
and
orb
mov
inc
add
bound
inc
test
loopne
js
testb
fcoml
xchg
dec
dec
addr16
push
stos
or
int3
push
jge
inc
aad
nop
addl
js
in
shlb
aam
pop
jb
push
jecxz
movsl
fnsave
int3
mov
fildll
jno
lea
adc
dec
fsubrp
stc
or
pop
pop
rolb
mov
dec
adc
pop
out
mov
fcomip
ja
xor
rcrb
dec
out
mov
negl
es
or
sbb
in
sahf
adc
inc
fildl
mov
leave
xorb
fwait
jne
out
pushf
mov
rorb
cmp
mov
hlt
push
dec
shrl
cmp
frstor
pop
push
fdivrl
xlat
or
in
push
inc
movsb
bound
dec
mov
xlat
jns
cmpsl
xor
lret
xor
popf
add
ja
rorb
mov
jle
dec
xlat
in
ret
daa
clc
test
cmp
cmp
mov
cmp
push
int3
add
mov
sbb
sahf
pop
xchg
xor
xchg
mov
ret
icebp
fisubrl
in
test
inc
mov
push
sbb
stos
push
push
es
mov
sub
xor
addr16
adc
in
sub
mov
orl
negb
movsb
pop
mov
testl
fs
cmp
mov
clc
mov
jnp
and
mov
mov
add
std
out
cmp
push
jmp
sbb
insl
adc
enter
inc
jno
mov
pusha
jb
pop
out
xchg
cmp
in
outsb
mov
push
pushl
arpl
pop
test
or
in
cmp
mov
jl
iret
adcl
and
cld
xchg
sbb
xor
movsl
xchg
inc
sub
cmp
mov
fcom
sub
out
mull
clc
imul
outsl
and
lds
loopne
arpl
xchg
cwtl
lock
push
mov
or
in
cs
loopne
mov
or
dec
push
flds
xor
or
jb
or
outsb
xlat
add
pop
fstps
test
dec
fs
push
fbld
das
cmc
pusha
rorb
cli
xor
lea
and
sbb
pop
mov
xchg
loopne
imul
loope
cmp
and
inc
and
or
sbb
add
add
dec
cmp
iret
fimull
and
rcrb
or
aad
jmp
ja
pushf
and
push
mov
inc
cli
mov
test
sub
retw
int
mov
push
jle
aad
mov
inc
push
sub
movsl
xor
mov
dec
sahf
dec
lahf
dec
clc
cli
es
xchg
clc
mov
and
mov
pop
jno
and
mov
mov
in
mov
insl
xor
insl
ljmp
adc
xlat
pop
add
scas
test
pusha
and
sti
pop
dec
in
jne
pusha
mov
imul
mov
jmp
lret
out
sbb
and
inc
stos
mov
sti
inc
roll
inc
inc
push
and
adc
mov
sbb
dec
sbb
es
hlt
mov
jns
xor
mov
insl
dec
mov
sbb
mov
pop
lahf
mov
add
sbb
stos
xor
cld
fcmovnu
mov
stos
add
pop
xchg
fwait
or
ljmp
dec
dec
jns
inc
jbe
outsl
es
xchg
test
jle
sbb
fwait
stc
rcr
pop
lea
orb
jl
sbb
in
outsb
adc
iret
lods
lret
push
mov
out
daa
cmp
in
jb
mov
rorl
or
push
je
addr16
lea
add
call
mov
and
pmaddwd
insl
or
loopne
pop
xchg
imul
xchg
ficompl
aad
movsb
pusha
rorb
mov
add
enter
xlat
add
inc
xchg
js
fsubr
out
outsb
std
pop
mov
or
pop
mov
ret
pop
popf
dec
jg
loop
das
pushf
pop
xchg
aad
and
mov
pop
bound
out
mov
jnp
cmc
or
orb
mov
sbbl
test
lds
inc
mov
scas
jns
cmpsb
dec
ret
or
ds
enter
fcmovnu
sub
xchg
fdivl
ljmp
adc
lahf
add
insb
push
add
xorb
mov
xchg
ss
sahf
add
fnsave
push
add
jmp
les
shll
xor
or
stc
push
int
dec
jge
push
movsb
insb
insl
sbb
outsl
in
inc
mov
and
jae
scas
cmp
movsl
lods
ljmp
sbb
sub
iret
in
sub
mov
mov
mov
mov
sub
pusha
dec
out
leave
jl
mov
adc
sbb
ss
nop
mov
nop
add
xor
xor
adc
lret
arpl
mov
pop
xlat
add
pop
sbb
mov
mov
sti
mov
sbb
int3
jp
cmp
mov
inc
cmp
rcl
je
mov
ret
sbbb
push
jg
jle
adc
sbb
pop
cmp
pop
aaa
repz
xor
and
adc
cmp
jle
loopne
push
xlat
sub
int
inc
push
push
mov
push
inc
jmp
xor
jle
out
mov
mov
cmp
inc
jle
push
out
les
sub
hlt
lahf
pop
bound
pop
mov
sub
mov
ret
aad
mov
lea
mov
jbe
adc
mov
mov
movsb
adcb
cmpb
repnz
insb
jb
sbb
jmp
pop
mov
jae
outsb
pop
hlt
push
pusha
popf
sbb
fs
test
addr16
mov
rorb
jo
ljmp
cmp
push
es
stc
push
ret
mov
andb
jmp
clc
movsl
loope
lods
sub
fsub
mov
andb
stos
mov
mov
out
std
xchg
imull
cwtl
dec
push
cmpsb
push
inc
shl
lods
mov
mov
mov
xor
scas
lahf
mov
sbb
lret
fs
outsl
cmpsl
ja
aad
out
lods
mov
cmpsl
mov
push
lock
std
xchg
lods
jp
or
ret
mov
xchg
xchg
aaa
mov
mov
outsl
pop
popf
inc
mov
mov
or
jns
cld
int3
sub
test
enter
dec
popf
xchg
dec
bound
push
sbb
sub
stc
and
rorl
and
mov
cli
pop
mov
imul
test
mov
xchg
inc
in
stc
lret
imul
jns
pop
mov
adc
movsl
and
ja
imul
loop
jbe
test
fistpll
xchg
sbb
in
into
cmp
adc
adc
push
jecxz
out
mov
aas
imul
or
arpl
or
inc
mov
cltd
gs
lods
stos
pop
pop
jmp
repnz
dec
popa
mov
aas
jb
xchg
and
cmp
mov
mov
and
sbb
ret
call
push
lahf
pop
orb
push
mov
and
cs
mov
push
xchg
dec
cmp
mov
in
ret
clc
inc
orl
jbe
aad
cmp
sub
repz
xchg
or
adc
sub
inc
push
jns
push
sub
fwait
dec
pushf
sub
lahf
adc
mov
adc
cmpsl
adc
or
lret
or
leave
sarl
repnz
cmp
movntq
adc
dec
in
pop
push
cmpsl
jmp
fidivs
clc
xor
nop
sti
add
xchg
push
pusha
enter
inc
push
sbb
hlt
adc
jb
mov
jns
and
or
dec
mov
lahf
cltd
and
adc
jb
mov
das
adc
jecxz
subl
es
jne
dec
daa
or
sub
divb
adc
cmp
or
push
shll
pop
icebp
cmpsw
mov
jo
loop
cltd
xor
mov
sub
mov
mov
test
xchg
dec
pop
mov
or
jle
clc
adc
xor
out
push
pop
or
rolb
repnz
dec
pop
je
cwtl
push
lods
clc
ror
jo
mov
pushf
mov
cmpsl
push
cmp
outsl
in
rcrl
dec
mov
pop
or
mov
mov
dec
lods
fidivs
ja
data16
out
addr16
repnz
cmpsl
lods
or
xchg
fstps
movsl
rorb
pop
leave
cmp
mov
rolb
sti
push
jl
xchg
pop
stc
sbb
popf
push
test
push
pop
sub
lods
push
inc
pop
xchg
dec
add
jmp
iret
adc
xchg
test
xchg
mov
ljmp
test
and
mov
dec
and
mov
push
pop
dec
popf
cmp
cwtl
cmpsl
adc
jge
cmp
rorl
xchg
test
ljmp
sub
scas
push
push
add
pop
sbb
jb
sub
std
inc
je
jmp
jg
fisubrs
mov
lods
pop
xor
add
les
cmc
dec
and
pop
mov
sub
movsl
lods
mov
cmp
push
lods
repnz
cs
sbb
adc
xchg
insl
leave
das
test
jecxz
scas
xor
imul
jae
add
pop
aas
and
lods
sbb
shlb
data16
outsb
fsubrl
push
add
in
mov
rolb
lock
stos
pop
sub
jmp
cmp
bnd
in
sub
bound
jae
addr16
cmc
adc
test
jmp
movsb
mov
pop
out
outsl
clc
into
push
out
jns
hlt
mov
jbe
pop
push
scas
xor
sub
icebp
and
fprem1
pop
mov
ret
cli
jnp
or
xor
adc
negl
shr
sub
sub
mov
push
mov
repnz
pop
mov
mov
inc
fisubrs
div
shll
mov
ljmp
xor
into
sbb
adc
outsl
cmp
fsubrl
aaa
cs
int3
pop
push
push
mov
and
in
loop
test
scas
adc
mov
cmc
int
adc
test
cltd
pop
and
popa
fcmove
and
jnp
mov
dec
outsb
lock
pusha
pop
pop
repnz
pusha
cmp
mov
out
movsb
fsubl
pop
sarl
xor
and
push
sub
pushf
imul
popa
ret
fdivrl
inc
pushf
gs
and
push
test
js
cs
negb
jmp
out
rorl
mov
jne
mov
pop
in
jnp
lret
or
add
cmp
int
rorb
lcall
clc
hlt
mov
pop
and
push
sub
mov
xchg
add
jae
mov
icebp
ss
insl
xchg
sahf
xchg
cs
test
repz
mov
pop
data16
adc
ja
or
decl
mov
fisubrs
lahf
rcrl
daa
add
ret
xchg
jmp
js
dec
pop
in
fnsave
addb
ja
sbb
sub
sub
cmp
cmp
fcmovnu
ljmp
popa
popa
and
inc
insl
btc
mov
xor
ss
jb
mov
cmp
mov
daa
mov
push
rcrl
into
push
icebp
rcl
push
shrb
out
shr
pop
push
lock
cmc
push
cmp
sti
jmp
dec
cld
add
jl
inc
cmpsl
data16
in
lods
mov
enter
aad
fsubrl
add
lods
bound
jb
ror
cmp
cmp
movb
aad
push
mov
cltd
repnz
push
adc
and
jbe
loop
xor
xor
bound
lods
add
add
cwtl
pop
xor
ljmp
or
fimull
mov
sbbb
out
leave
lods
insl
fs
cmpsl
adc
fs
das
and
ss
jge
es
sbb
xchg
js
inc
pop
mov
jl
cmp
adcl
cmp
or
inc
and
dec
outsl
fistpll
jns
or
movsb
mov
fbstp
jno
jo
mov
push
test
arpl
mov
sub
cli
or
bound
add
xor
mov
fidivrs
cmc
xor
or
xchg
fistl
fimuls
push
outsb
shrb
scas
std
dec
shll
int
pop
pop
cmp
ret
lock
stos
and
ja
cli
mov
xchg
cmc
mov
repnz
inc
sbb
or
popa
das
cmp
call
ret
add
jp
pop
out
aas
and
jl
bound
negl
dec
push
cld
push
test
pop
pushf
inc
orb
and
push
jp
inc
pop
sub
gs
lret
push
fmul
fadds
push
xchg
sbb
lock
leave
mov
pop
loop
xor
pop
adc
inc
sub
adc
jb
into
jnp
iret
sub
lahf
or
mov
fbld
mov
lea
out
pop
test
sbb
mov
aaa
jbe
cltd
loop
sbb
adc
pusha
lods
sarl
imul
cmp
in
loope
lods
bound
cli
and
divl
xchg
lret
test
and
lret
sbb
sti
jl
xor
xchg
cs
icebp
in
aad
cmp
xlat
adc
pop
jecxz
adc
sarb
mov
cld
roll
mov
scas
in
pop
xor
scas
xor
jp
mov
push
mov
sbb
iret
insl
andb
push
cmp
push
and
mov
or
sbb
pop
js
out
fiadds
in
lret
mov
mov
rcrb
mov
cmpsb
lahf
sub
inc
insl
hlt
mov
mov
repz
xor
stos
jo
imul
ret
jnp
xchg
xchg
add
pop
sub
ss
pop
addl
jno
icebp
push
jg
and
adc
mov
sub
sbb
out
enter
scas
es
leave
mov
xchg
xor
mov
pop
pop
adc
xchg
popf
add
adc
andb
ret
adc
stc
ja
or
fdiv
sub
mov
xchg
testl
stc
add
movsl
jne
pop
arpl
lods
popf
int3
inc
mov
push
cmp
add
out
xor
icebp
mov
xchg
int3
cmp
jbe
cmpsl
lea
out
arpl
add
movsb
out
repz
fs
sub
ds
pop
ret
cltd
and
mov
sbb
inc
cli
xor
mov
ds
fsubrl
dec
dec
mov
adc
cmp
popf
repnz
jo
addr16
mov
dec
aam
or
pop
test
mov
jl
jae
mov
cmp
ret
adc
jecxz
inc
scas
or
in
ljmp
sub
adc
pop
mov
movsb
mov
adc
sbb
push
jb
inc
bnd
and
push
nop
inc
lcall
sub
xor
mulb
xchg
lods
push
jo
sub
in
js
add
scas
jl
loope
addl
cmp
pushf
jbe
push
dec
adc
adc
mov
sub
fsubs
mov
test
stos
cmp
iret
sbb
in
jae
out
call
xchg
adc
jp
aad
mov
sbbl
in
clc
int3
pop
inc
sbb
out
data16
mov
sub
scas
pop
loop
lcall
add
gs
sbb
sbb
xor
pop
div
test
or
jl
pop
jnp
lea
gs
std
addr16
mov
shll
call
sti
pop
mov
cli
xchg
jnp
add
fdivr
pusha
rcr
addb
mov
mov
scas
jp
fmuls
sbb
lods
roll
mov
ljmp
mov
addl
cmp
ror
insl
mov
mov
int3
mov
bound
cmp
ja
mov
dec
xchg
xchg
adc
lcall
pop
jp
sar
mov
and
and
pop
push
pop
mov
mov
fucom
shlw
inc
cmpb
push
pop
scas
pop
incl
xchg
cltd
shrb
rolb
cmpsb
xchg
negb
add
outsb
mov
push
or
adc
cmp
cmc
popl
mov
lock
aas
mov
fld
xchg
and
mov
or
addr16
mov
mov
les
sbb
or
jno
out
into
dec
insl
mov
mov
les
xor
cwtl
mov
mov
inc
dec
add
cltd
jns
loope
test
pop
hlt
or
mov
xor
xchg
add
dec
mov
add
scas
lea
jle
leave
jbe
or
pop
mov
push
add
push
sbb
xor
stos
roll
bound
or
pop
addr16
jmp
cld
jno
sub
sbb
faddp
sub
out
pushf
push
cmp
into
jl
cmp
jae
stos
ficoms
inc
fisttpl
neg
add
jl
outsb
push
jo
sahf
arpl
mov
out
jle
mov
dec
mov
jg
popf
lea
fadds
pop
adc
les
pop
rolb
int3
test
jmp
mov
sti
mov
int3
cmc
sbb
scas
xchg
lods
sub
jo
sti
scas
insl
aas
add
fnstcw
mov
jae
jnp
lods
add
pop
shlb
test
or
cmp
or
push
int
sarl
cli
jmp
pushl
daa
push
aaa
dec
popa
lret
dec
push
insb
sbb
out
mov
insl
sub
xor
int
fiadds
cld
push
ds
pop
movsl
mov
mov
mov
or
sub
pop
lret
js
lods
mov
add
pop
in
pushl
jecxz
sub
push
adc
je
pop
cmp
sbb
mov
xchg
xchg
dec
jnp
pop
fsubrs
push
sub
js
cmp
push
test
popf
add
dec
out
and
aam
jge
jmp
jb
mov
stos
add
daa
pop
pop
mov
mov
pop
cltd
mov
in
add
daa
jmp
pop
mov
push
popf
sete
je
sbb
stos
push
in
xchg
dec
mov
and
int
call
xchg
cs
pusha
or
pusha
push
inc
mov
inc
loope
pop
jle
shll
rcrl
dec
or
bsr
imul
pushf
xchg
jmp
cmpsb
fstl
leave
mov
jne
dec
mulb
std
sub
fidivrl
inc
ljmp
ss
lods
rcrl
sub
fiaddl
cmp
movsl
shrl
stos
xor
pop
cmp
push
clc
scas
pop
stos
inc
jl
push
ds
sub
fstps
jns
jl
sbb
fnstcw
ret
push
dec
fiaddl
jp
in
cmpl
lods
bound
or
aad
cmp
outsb
push
stos
mov
lret
das
sbb
sbb
int3
out
mov
push
adc
add
cwtl
and
stos
jbe
scas
fldt
into
mov
mov
mov
fwait
cmpsb
mov
xchg
mul
jne
icebp
test
scas
mov
xor
loope
pop
adc
das
add
das
icebp
pop
cmp
test
adc
mov
mov
std
push
dec
ret
pusha
inc
dec
shr
or
lods
sub
int
loopne
jnp
cmp
in
push
icebp
ret
sete
xchg
call
div
orb
arpl
ja
dec
jmp
lea
popa
jb
mov
aam
inc
mov
pop
adc
call
aas
add
sbb
pop
push
rcrb
cmp
lret
adc
les
movsb
outsb
outsb
jle
pop
and
fs
cltd
mov
push
push
loop
cmp
adc
bound
adc
jo
out
lahf
xlat
cmpsb
dec
je
sbb
loop
xchg
popf
xchg
aas
hlt
sub
mov
sub
std
inc
inc
imul
add
jno
dec
test
mov
or
sub
ret
push
imul
jns
jae
nop
mov
imul
aas
adc
jle
mov
aad
pop
sbbb
and
in
cmp
adc
or
rcrl
pop
ljmp
dec
repnz
add
mov
arpl
jbe
sbb
xchg
inc
dec
jl
sub
cld
sarl
mov
cmp
add
xor
aad
mov
add
pop
dec
dec
nop
loopne
inc
sub
jnp
push
addl
pop
imul
cmp
test
inc
jge
das
pop
and
cmp
mov
dec
push
jecxz
jmp
sbbb
dec
xor
pop
push
jbe
mov
test
rcl
in
pop
movsb
jo
inc
pop
mov
jno
mov
fisubrl
or
icebp
and
dec
movsl
cmp
aaa
lock
ja
fcmovbe
inc
sbb
jg
xor
mov
xchg
pushf
data16
lods
ss
mov
cwtl
mov
fcompl
xor
outsl
out
in
sbbb
daa
add
xchg
test
inc
mov
addr16
jne
scas
sbb
mov
insl
mov
xchg
pushf
cmp
adc
xchg
fisttpl
in
cmp
adc
inc
xchg
and
stos
and
lods
push
mov
nop
ja
cwtl
out
jecxz
hlt
insl
outsb
dec
inc
aad
inc
js
sbb
pop
outsb
rcll
cmpsl
in
cmp
hlt
addr16
call
sub
adc
and
pop
mov
pop
mov
sti
ljmp
jmp
psrad
cmp
mov
pop
or
or
cmp
in
imul
ds
hlt
adc
xlat
icebp
pop
pop
jle
arpl
jbe
sub
mov
in
rcrl
inc
inc
push
jmp
pop
mov
sub
cmc
in
fcompl
lahf
pop
cmpsl
int3
jno
out
and
ss
push
loope
pop
inc
add
repz
mov
in
inc
pop
enter
inc
adc
inc
fistpll
lahf
imul
or
xchg
decl
stc
leave
or
sbb
pop
sbb
pop
xchg
nop
ror
mov
loope
sahf
fstpt
push
mov
push
scas
ret
out
pushf
insl
mov
aaa
clc
lret
inc
iret
mov
inc
or
into
pop
inc
mov
shrl
in
mov
loopne
mov
arpl
or
or
mov
aam
mov
dec
cmp
xor
pop
cltd
inc
fisubl
or
xorl
mov
pop
cltd
mov
xchg
pop
scas
inc
jno
rorl
fs
daa
add
sbb
mov
inc
out
sub
aas
and
lds
mov
jo
pushf
jb
add
xor
pushf
in
dec
mov
adc
orb
add
sub
jbe
dec
mov
push
arpl
xor
fdivl
xor
and
pop
cld
pop
push
mov
jmp
mov
loope
test
xor
out
inc
add
je
iret
mov
mov
xchg
mov
pop
inc
push
popl
mov
cmp
mov
outsl
ret
mov
mov
js
mov
popf
int3
inc
jmp
pop
adc
in
mov
out
repz
adc
cmp
jno,pt
inc
pop
cmpsb
inc
lret
push
into
mov
add
dec
mov
lahf
adcl
pop
sub
inc
sub
cmp
jne
pop
sbb
aad
xor
cmp
sarb
and
popf
jl
sub
clc
les
jmp
fisttps
ja
pop
mov
or
ret
cs
fnstsw
xchg
mov
sub
shlb
dec
mov
cmpsb
test
aam
mov
subb
ret
adc
push
outsl
jecxz
out
ret
outsb
mov
dec
aad
data16
rolb
cld
rolb
lock
lcall
inc
into
dec
sbb
pushf
pushf
shl
into
movsl
or
pop
lea
enter
data16
pusha
out
data16
inc
and
inc
dec
pop
dec
pop
mov
and
std
movsb
ljmp
xchg
fimull
jae
fwait
fs
out
jnp
repnz
out
ror
mov
mov
je
xchg
pop
sbb
fucom
mov
pop
in
jo
mov
fnsave
lods
loope
sarb
dec
pop
xadd
mov
jmp
inc
jg
movb
or
das
scas
js
data16
xor
adc
cmpsl
hlt
icebp
ja
dec
decl
jnp
fnstsw
mov
cmc
cmp
sahf
mov
sbb
lret
jp
jecxz
jno
push
cmpsl
sahf
jne
rcr
jb
pusha
xchg
adc
movsb
jle
jl
pop
stos
cmp
add
xor
rol
mul
stos
mov
imul
inc
push
mov
dec
mov
das
je
ds
push
push
xchg
out
sbb
sarl
mov
icebp
les
sbb
or
lret
aam
popf
scas
subl
push
in
je
imul
ljmp
notb
push
call
pop
movsl
test
mov
pop
xor
cmc
cmp
push
inc
cmp
push
shrl
mov
dec
dec
notl
rorb
sbb
xchg
int
movq
sbb
cmp
sbb
push
inc
sbb
pop
sti
bswap
mov
insl
push
stos
icebp
je
popf
les
push
sbbb
fidivl
mov
mov
adc
inc
xlat
fcoml
daa
sub
rcl
cmp
mov
jmp
inc
pop
ja
sub
sti
pusha
fistpll
lds
loopne
or
arpl
pushf
xor
pop
sti
bound
jl
in
sbb
bound
xchg
in
es
mov
nop
xchg
sbb
cwtl
hlt
mov
pushf
or
sub
xor
stos
jne
sub
cwtl
ljmp
mov
fildll
cld
mov
push
fbld
jecxz
and
rcrb
cs
gs
push
int
cmp
leave
lret
mov
adc
push
xchg
ja
les
jnp
push
or
mov
jo
rcrb
out
pop
sbb
mov
push
cmc
inc
ret
out
jle
sub
mov
and
adc
add
xchg
dec
push
pop
jo
sub
cmp
or
pop
gs
test
cmp
xchg
push
jmp
xchg
js
lds
out
mov
mov
mov
shll
rol
mov
and
jg
out
cmp
adc
push
fstpl
cmp
movsb
lret
pop
js
mov
call
out
sub
gs
fs
inc
jo
popa
hlt
mov
stos
mov
ja
jns
or
inc
xchg
pop
mov
cmc
mov
cmp
pop
psrlq
lret
aam
cmpb
insl
xor
es
stos
and
call
pop
ret
pushf
lcall
lods
lds
je
pop
or
les
mov
leave
push
pushw
gs
jle
mov
or
movsb
arpl
jge
scas
jl
jp
out
push
sbb
or
xchg
pushf
es
mov
pop
in
xlat
ret
icebp
shlb
test
or
aaa
pop
push
movsb
inc
and
jmp
push
inc
mov
inc
mov
mov
sbb
popf
cmp
add
jb
out
xchg
stc
repnz
in
xchg
xor
imul
nop
sbb
movsl
stc
outsb
xor
out
dec
sbb
inc
mov
lock
add
fsubl
pop
inc
stos
push
cmp
pop
cld
pop
mov
jae
ljmp
jl
cmp
sub
inc
dec
loope
xor
push
sbb
je
mov
les
mov
mov
or
loop
push
cltd
jb,pt
xor
lds
lret
xchg
aam
push
pop
sbb
xor
jbe
ds
jecxz
out
cmp
lret
aas
sbb
jmp
sbb
add
fidivl
sub
dec
cmp
push
call
sarb
out
push
test
mov
sbb
inc
jp
push
xchg
or
pop
cmp
lret
inc
mov
inc
sub
xchg
scas
lea
cs
pop
dec
push
ljmp
push
outsb
push
and
mov
add
mov
jo
or
inc
push
ds
xchg
clc
inc
cmp
pusha
push
sbb
jb
jnp
dec
pop
xchg
jp
pop
push
sbb
fwait
dec
shl
arpl
add
fwait
xor
roll
push
inc
push
and
sub
leave
out
imul
iret
mov
xchg
and
xchg
lods
cli
ds
xchg
mov
frstpm(287
test
mov
insb
test
add
popf
and
mov
and
pop
sbbb
out
or
sbbb
sbb
pusha
cmp
fisttpl
test
add
sub
stos
mov
mov
imul
sbbl
jns
stc
inc
cmc
subl
out
mov
or
adc
cld
enter
stc
sahf
out
data16
inc
jno
stos
sub
fs
jmp
idivl
inc
in
js
jbe
pop
int3
ret
mov
dec
shl
imul
pop
mov
cmp
andl
data16
lods
fistps
popw
dec
ret
mov
sub
pop
stc
or
adc
lahf
mov
pop
jge
hlt
xlat
pusha
out
pop
pushf
push
pop
andb
aas
js
scas
sahf
jg
outsb
scas
test
or
cmc
push
shl
cs
and
fwait
mov
imul
pop
bnd
scas
ja
jae
sbb
sbb
cli
mov
sbb
adc
ja
sub
adcl
int
loope
jmp
movl
aaa
lock
sbb
pop
in
stc
jle
leave
push
add
and
add
mov
fwait
sbb
nop
inc
out
out
popf
shlb
lcall
fdivrs
xchg
arpl
xor
jno
push
xchg
mov
bswap
fildll
subb
rorb
in
loop
outsl
ss
pop
pop
adc
cwtl
femms
lods
pop
repz
ret
lahf
jnp
cmp
mov
xor
call
scas
pop
orb
sahf
ds
ss
sbb
add
pushf
inc
int
lahf
hlt
and
xchg
clc
xlat
push
adc
fmuls
ds
std
adc
or
icebp
add
xchg
mov
sbb
mov
movsb
pop
fs
aam
ss
jp
xlat
addr16
xchg
xchg
pusha
sahf
ss
incl
sbb
pop
jne
filds
mov
add
jb
dec
push
inc
cli
fiadds
pushf
xchg
in
or
pop
mov
or
xchg
pop
stos
addr16
sbb
mulb
xchg
addr16
or
cli
fimull
out
xchg
xor
and
nop
inc
adc
mov
fisubl
cmpsl
cmp
push
push
lret
shr
mov
icebp
add
inc
testb
hlt
push
xchg
and
lods
fwait
mov
lods
fwait
dec
pop
mov
test
xchg
push
aam
in
pop
sahf
das
add
loopne
in
push
insb
cltd
mov
sbb
popa
xchg
aas
sub
stos
mov
xor
ret
cmp
and
cmp
popf
rol
or
movsl
rcll
mov
adc
fldl2e
repnz
mov
jp
pop
in
rcr
daa
je
xor
mov
xor
mov
inc
aaa
ss
and
je
out
jo
or
rclb
mov
mov
xchg
dec
xor
xchg
cmp
inc
inc
and
repnz
mov
adc
mov
aam
cmp
inc
and
out
loop
sub
push
test
jmp
sub
mov
push
jmp
push
mov
das
mov
enter
fmull
out
or
mov
les
fcom
iret
jbe
sbb
imul
push
into
es
pop
jo
mov
addr16
pop
pop
push
leave
popa
inc
xchg
xchg
inc
xchg
dec
push
adc
jae
cltd
dec
pop
es
mov
fdivl
insl
cmp
stc
mov
in
push
sub
lret
inc
pop
dec
fsubs
cltd
jmp
add
out
ss
les
and
push
mov
out
pop
xor
dec
std
aaa
mov
andl
sbb
pop
or
xchg
mov
pop
das
fmulp
lahf
sbb
or
mov
imul
cltd
mov
add
adc
add
shll
out
jge
xor
rcr
nop
xchg
xor
or
pop
dec
inc
sbb
stos
leave
fcompl
loopne
mov
mov
repnz
addb
js
or
movsl
pop
mov
sbb
ret
jge
add
mov
lods
jo
xchg
or
mov
or
fisttpl
sub
lock
pop
cmp
push
mov
and
mov
mull
dec
int3
add
out
lds
mov
cmpsl
mov
mov
sbb
inc
xchg
mov
mov
xchg
popa
cmpb
add
mov
lods
in
push
lea
daa
shll
bound
nop
jbe
lea
push
jle
test
mov
movsl
imul
inc
xor
sbbl
xchg
fcoml
in
fcompl
fwait
cmc
mov
loop
js
adc
lods
test
adc
cmp
and
sub
das
inc
pop
loopne
inc
das
sahf
jl
xor
lahf
fsubrl
repz
push
xor
xchg
icebp
jl
xchg
nop
daa
jmp
mov
fbstp
pushf
and
call
push
loopne
mull
pop
test
aad
mov
xor
out
push
movsl
pushf
lea
into
pushf
jmp
insb
lods
sub
adc
mov
mov
mov
or
pop
jmp
js
xchg
dec
pop
lock
shrb
std
mov
xchg
jne
mov
and
jb
ret
xorl
std
outsb
lock
popa
jecxz
pop
cmp
sarl
xor
xor
mov
cmp
shr
gs
push
ret
lods
sub
add
pop
adc
mov
jg
push
cmpl
aad
mov
xchg
add
jge
cmpsl
out
shl
mov
sbb
push
dec
out
push
movsb
mov
shll
push
hlt
sub
aad
sub
push
pop
push
pop
in
insb
dec
add
sbb
sub
sub
js
mov
pop
int3
and
test
adc
lret
int
jecxz
sub
mov
pop
pop
push
mov
push
sub
inc
inc
bnd
mov
imul
in
jge
mov
jns
je
jp
arpl
lcall
mov
xchg
inc
jmp
sahf
xchg
or
mov
sarb
push
imul
add
js
push
sahf
stos
cmp
mov
adc
in
dec
popa
dec
jl
mov
inc
push
xchg
lcall
imul
pop
mov
jle
fs
arpl
pop
cs
ret
stc
add
sar
jae
push
aam
pop
lock
dec
cmp
xchg
mov
jne
subb
sbb
rcrb
inc
ljmp
test
jmp
or
pop
fldcw
mov
sub
aaa
inc
push
iret
push
sbb
lcall
cmp
outsl
mov
in
push
in
cltd
mov
or
out
jns
sbb
mulb
imul
lcall
lods
mov
xor
mov
cld
testl
jle
int3
or
jne
sub
dec
or
inc
into
cmp
dec
mov
outsl
adc
cmp
jge
lea
sub
sbb
mov
and
or
aad
iret
inc
adc
cwtl
shll
mov
jo
popa
in
cmpsl
xchg
hlt
cmpsl
ret
cmpsl
or
out
jae
lret
test
add
imul
cmp
aas
pop
sbb
sbb
test
inc
sbb
pop
sarb
and
movsb
sub
pop
sti
or
push
fsubrs
cmp
in
push
rcrl
adc
mov
outsb
es
out
sti
testl
jmp
add
jne
stos
cmp
pop
add
cmc
jae
cmp
jno
test
mov
in
push
je
shrb
in
dec
mov
cmc
adc
jl
sahf
sub
cmp
je
movsb
clc
mov
pop
gs
loope
aad
inc
sti
lods
cs
mov
fcom
dec
cld
add
jp
out
sub
push
repz
push
and
pop
jmp
cmc
adc
xchg
fiadds
push
divl
mov
iret
aaa
dec
daa
or
arpl
mov
jge
aam
rorl
scas
dec
inc
loope
fs
repnz
das
outsl
lret
ficompl
insb
je
cmc
mulb
int
ror
jge
jmp
cmp
push
jp
mov
pusha
js
test
pop
cmp
jg
int
call
mov
inc
xchg
inc
jl
adc
scas
mov
fidivl
mov
jae
aam
dec
mov
test
push
fs
fstl
adc
lahf
dec
add
out
pushf
aam
cwtl
or
xor
pop
into
inc
leave
je
iret
sbb
mov
push
jge
pop
inc
mov
lret
aad
adc
data16
shl
jl
push
dec
jp
rclb
xor
adc
and
mov
insl
dec
push
outsl
inc
aaa
jae
cmp
movsb
dec
add
stc
mull
mov
xor
add
popf
dec
xchg
sahf
leave
jbe
mov
shlb
lods
insb
and
adc
mov
xor
lcall
push
add
xlat
jnp
gs
loope
cmpl
lahf
cli
mov
xchg
iret
fcompl
stos
lcall
cmp
xchg
int3
and
jbe
add
cmpb
scas
testb
lock
lcall
cmpsb
jl
in
mov
pop
push
lea
add
sti
aam
dec
fiadds
in
sahf
cwtl
pop
je
andb
xor
es
lock
cmpsb
imul
add
cli
pop
inc
cmpsb
sbb
sbb
jae
cmp
movsl
hlt
mov
push
sti
add
lret
in
out
das
sub
stos
clc
shlb
test
adc
pop
rorb
fcompl
mov
je
js
ja
xchg
sub
xchg
push
add
push
leave
xchg
mov
aam
inc
sub
bound
stc
cmpl
pop
arpl
xchg
cmp
sbb
inc
add
cwtl
rolb
ret
fsubr
sti
pushf
add
cmp
imul
xchg
rol
pop
nop
adcl
je
inc
insb
in
or
inc
pop
xlat
out
jmp
sarb
out
out
cmpsb
scas
lods
outsb
or
nop
aam
cmp
nop
mov
jecxz
arpl
ficompl
repz
repz
out
adc
fistpl
pop
and
xlat
jne
or
sbb
andb
das
jno
mov
inc
and
daa
lock
sbb
cmpsl
ds
dec
push
jge
daa
or
hlt
pop
iret
aad
repnz
sub
pop
push
adc
pop
outsb
sahf
cmp
divb
sub
sbb
in
mov
xchg
or
into
scas
xchg
dec
pop
les
dec
xlat
add
bound
je
add
data16
xor
psubb
jge
push
ret
jp
adc
pop
mov
hlt
cmpsl
cmp
test
notl
mov
in
dec
mov
out
or
jge
push
push
xor
pop
stos
lods
insl
mov
xor
ficoml
add
test
xchg
loopne
mov
jnp
lds
insb
pop
sbb
cltd
leave
sub
dec
icebp
jg
push
dec
mov
mov
fldcw
inc
xor
sbb
or
mov
jnp,pt
push
cmp
mov
mov
rcll
cmp
mov
inc
jl
dec
clc
add
daa
inc
xchg
mov
dec
pop
test
inc
subb
jne
push
xor
dec
xchg
aam
and
inc
inc
dec
es
sbb
cmp
push
jmp
fstps
js
sub
in
es
adc
stos
stc
js
and
pop
xor
shll
leave
inc
scas
pop
out
xor
inc
ja
jg
pop
pusha
mov
aad
sbb
jg
ror
scas
cmp
rcll
mov
lea
fwait
ret
lea
sub
jmp
mov
lahf
jnp
out
fwait
mov
mov
fimuls
test
mov
test
bound
idivb
mov
mov
pusha
aad
mov
stos
test
mov
pop
sub
xchg
sbbb
out
addr16
jb
dec
fwait
or
cmp
xchg
push
ficoml
idivl
insb
cmc
arpl
push
pop
sbb
mov
ret
adc
shll
leave
js
cltd
xor
sub
jp
mov
pushf
out
xlat
rol
je
imul
add
ss
loopne
cmp
pop
call
loop
fisubl
or
popa
imul
or
xor
ljmp
dec
hlt
fwait
sub
enter
mov
ficompl
sub
push
cmpsl
rcll
prefetch
xor
ds
fimuls
lret
jmp
jo
push
cld
stos
sbb
sbb
outsl
cmpsb
icebp
cmp
jmp
push
pop
std
jnp
inc
xchg
mov
repz
jns
shrl
dec
push
test
mov
xchg
push
orb
xor
out
cmp
cmp
aam
xchg
mov
inc
jl
pop
add
push
fwait
pop
fdivl
fcmove
test
pop
aam
scas
add
jnp
js
negb
lds
ror
jne
cmp
mov
xor
loop
icebp
xchg
or
mov
jmp
stos
xchg
inc
dec
xchg
xchg
test
lods
shlb
jg
mov
add
scas
pop
pop
push
std
cmp
bound
fcomi
xchg
sub
and
xchg
cmpsb
test
shlb
out
mov
or
xor
loopne
stos
sbb
sub
push
fsubrs
ljmp
lods
mov
pop
xchg
adc
leave
xchg
shr
xchg
idivl
mov
lods
cmpsl
test
outsb
sbb
xchg
out
jae
ffree
push
imulb
mov
cmp
mov
dec
test
stc
mov
mov
in
pop
mov
popl
add
adc
popa
int
sarl
inc
sbb
mov
es
in
mov
pop
stos
lahf
loop
repnz
pusha
stos
jge
jnp
es
pop
out
jb
mov
mov
gs
pop
sahf
adc
cmpsl
andb
ror
movsl
fwait
inc
add
mov
cltd
loope
leave
xchg
or
iret
mov
xchg
or
pop
mov
jle
pop
push
cmp
sub
jecxz
jne
bound
mov
outsb
adc
not
in
test
and
cltd
xor
xchg
aad
mov
lds
mov
jg
ret
stc
adc
xor
mov
leave
mov
dec
dec
int3
aas
ljmp
or
shl
mov
dec
outsl
rcrl
jbe
enter
cmp
shr
repz
sbb
femms
adcb
pop
dec
test
inc
adcl
repnz
jle
xor
sub
aaa
shufps
sub
data16
mov
mulb
adc
rolb
cmp
andl
clc
repnz
add
push
xor
lcall
xlat
dec
aas
jecxz
shrl
push
push
addb
xor
lahf
xchg
aam
pusha
imul
jo
fwait
int3
jae
xor
call
ret
lods
sub
push
cltd
rolb
and
repz
repnz
jmp
lock
mov
js
mov
pop
lret
xchg
or
pop
xchg
inc
and
sarb
std
adc
add
or
jp
sbb
jmp
jecxz
dec
xor
fadd
and
jmp
notl
call
or
pop
data16
sbb
ficoml
jne
adc
ror
xchg
pop
xchg
sbb
rolb
dec
ljmp
mov
dec
add
lret
gs
pop
or
adc
pop
xorl
lock
add
add
fmull
lcall
stc
aad
xchg
mov
sbb
pusha
cmp
fnstsw
dec
in
repz
xor
stc
xor
sub
scas
icebp
cmp
sbb
jbe
lcall
mov
or
pop
ljmp
mov
cwtl
sbb
cmp
movsb
mov
jge
filds
jbe
ss
std
ja,pn
addb
ja
xchg
arpl
jmp
fisttps
xchg
adcl
add
out
imul
dec
inc
sahf
inc
clc
mov
ret
aad
mov
or
ja
pushf
lods
outsl
out
sar
sbb
movsb
ljmp
mov
xor
jno
in
add
sbb
aaa
jno
mov
add
out
pop
ja
lret
push
je
loop
test
hlt
xchg
pop
mov
mov
sbb
test
jno
dec
add
ja
dec
fisubrs
nop
in
aaa
mov
cmpsb
cld
jae
int
mov
dec
sub
fcompl
pop
and
in
scas
test
gs
mov
sbb
fisubrs
sbbl
fs
dec
leave
add
lods
subl
sub
inc
lret
sahf
stos
clc
mov
cmp
sub
aas
jmp
jl
xchg
inc
pop
rcr
fildl
hlt
xorb
clc
or
imul
jmp
fists
ficompl
dec
adc
push
idivb
insb
or
repnz
or
mov
jmp
jmp
mov
or
xorb
scas
sub
fsubs
jns
jge
mov
in
jg
push
lcall
add
repz
lock
sub
pop
push
jne
mov
out
pop
fwait
lea
fdivp
fdivs
mov
xor
fwait
jg
mov
out
enter
mov
jae
out
pop
popf
mov
sbb
loopne
cltd
xchg
jg
or
lret
std
not
jb
or
repz
add
xor
fst
or
mov
sti
sbb
ret
shlb
push
jmp
and
hlt
pusha
data16
jns
push
mov
add
mov
fsubp
and
out
pusha
xor
cmpsl
mov
add
aad
hlt
jmp
nop
aas
xchg
test
scas
adc
movsl
movb
call
loop
jns
in
adc
or
lahf
sti
push
sbb
xchg
cltd
clc
rcrb
movsb
hlt
pop
jl
push
fstp
gs
jne
stc
pop
mov
push
jg
outsb
sbb
into
hlt
pop
aas
in
scas
aam
lret
ljmp
add
lds
inc
mov
pop
push
inc
lret
adc
xchg
lret
inc
pop
mov
lahf
sbb
add
addr16
mov
adc
push
mov
push
stc
gs
sbb
inc
cvtpi2ps
rolb
pop
cmp
stos
jg
lock
pop
dec
out
hlt
sahf
mov
push
xor
cmpb
cltd
movsl
jle
mov
scas
sbb
inc
jl
icebp
test
inc
jno
push
mov
xchg
xor
pop
cmp
push
jecxz
adc
mov
add
arpl
jle
repnz
rcrb
rcl
mov
movaps
pop
rorl
repz
outsl
jb
test
aad
sub
stc
push
cld
dec
ja
jle
inc
jg
cmpsb
mov
jecxz
nop
rol
push
dec
add
cmp
test
jmp
jp
enter
setle
or
pop
cmp
out
cld
pop
xchg
lret
cli
imul
add
das
adc
push
mov
and
xchg
or
lret
stc
xorb
mov
mov
xchg
adc
cmp
inc
cmp
cmp
mov
mov
mov
add
push
cmpsl
push
add
iret
sbb
daa
enter
int3
jns
sbb
xchg
ljmp
cmp
inc
stos
stos
fmul
jnp
aas
push
lea
outsb
push
or
mov
clc
mov
dec
pop
and
daa
orl
std
sub
xchg
mov
mov
sub
imul
fst
orb
mov
and
add
aad
jbe
lahf
dec
je
mov
ds
push
sti
stos
out
je
mov
sub
mov
in
sub
mov
aam
sub
das
pop
mov
shl
mov
jp
and
xchg
sub
in
loop
cmc
jnp
xchg
fcmove
dec
lock
pop
inc
ds
mov
test
test
mov
cwtl
je
adc
dec
xchg
rorb
insb
mov
fs
inc
mov
push
pop
gs
jb
jle
aaa
push
cld
iret
test
arpl
pop
sarl
add
das
movsl
sub
or
cmp
cmp
inc
xchg
xchg
fwait
xor
inc
jae
enter
in
repz
rcrl
pop
stos
mov
outsb
psubsb
int
inc
xor
fistl
iret
or
mov
loopne
int3
jg
test
lods
daa
sub
mov
jb
adc
or
xor
xorb
outsb
ja
pop
mov
les
and
sarl
xor
adc
xchg
push
xchg
push
nop
mov
out
or
sub
xor
xorl
cmp
or
inc
cmpsb
cmp
cltd
mov
popf
fiaddl
popf
inc
outsb
ja
ret
cmpl
mov
mov
pop
dec
enter
cmpsl
cmp
jmp
adc
test
cmp
mov
test
nop
cmp
lret
fidivs
mov
mov
xchg
xchg
jp
inc
pop
pop
shrb
cmp
and
and
adc
inc
in
in
mov
push
sbb
cmp
pop
fs
cmp
lock
movsl
dec
mov
popf
mov
adc
cmp
push
outsb
and
and
out
cmpsl
mov
add
sbb
cmp
jno
jp
or
adc
loop
jbe
andb
pop
or
sub
fadds
mov
ret
ss
mov
mov
lock
dec
mov
sbb
mov
mov
fsub
xchg
add
daa
push
pop
mov
pop
jae
or
repz
and
dec
mov
fcomip
rorl
pop
adc
outsb
jmp
mov
bound
addr16
cmpxchg
out
es
push
divb
mov
outsb
ret
out
ljmp
jbe
js
outsl
or
pushl
loopne
inc
adc
shl
inc
xor
scas
jae
xor
adc
in
cmc
mov
inc
stos
jnp
add
dec
test
mov
mov
or
sub
inc
cmp
out
popa
push
addr16
cmpsl
push
adc
test
nop
imul
movsl
clc
pop
les
push
sbb
xchg
out
mov
jne
lock
xchg
mov
das
xchg
mov
pop
outsl
sbb
test
outsl
push
negl
ja
cmc
lods
jns
aas
sbb
jo,pn
xchg
je
fsubl
js
out
fisttpll
push
sub
fisubrl
fneni(8087
cltd
aas
ret
movb
adc
dec
push
js
scas
imull
in
add
mov
mov
mov
push
adc
cmp
js
int3
adc
pop
movsb
fcom
rorb
sar
xchg
push
sub
testl
imulb
xchg
sub
mov
fstpl
fsubr
lcall
and
mov
shr
mov
insl
jg
movsw
fldenv
push
insb
in
ljmp
mov
adc
sub
subl
jmp
push
jbe
pop
scas
push
or
cmpsb
fs
cmpsl
lock
adc
push
sbb
xor
out
cmp
mov
sbb
push
mov
xchg
bound
pop
scas
nop
fistpl
push
call
ljmp
lcall
push
loopne
jbe
xchg
mov
and
and
cld
es
out
rol
jmp
pusha
scas
sbb
and
dec
in
fldl
inc
cmp
inc
les
or
mov
aad
bndldx
push
jle
xchg
adc
xor
or
xor
inc
sbb
scas
inc
outsl
cltd
mov
mov
adc
insb
aad
insl
fisttpl
fstpl
mov
outsl
pop
lods
mov
in
out
addr16
dec
adc
dec
es
mov
sbb
mov
jne
stc
inc
pop
mov
add
mov
out
and
nop
xor
in
jle
and
xor
popf
inc
lock
test
popf
pop
adc
push
iret
and
push
and
push
popf
movsl
out
imul
mov
das
jne
cli
jb
sub
sub
mov
and
adcb
movsl
orb
out
jnp
xchg
fistl
jl
jmp
sub
negb
push
movsb
jo
adc
push
scas
fwait
adc
int3
inc
sub
inc
loope
sbb
pop
add
pushf
jns
mov
jne
lods
enter
mov
loope
cmp
mov
jg
push
hlt
stos
jmp
fildl
dec
or
sbb
pop
and
add
mov
cmp
nop
loope
inc
faddl
movsb
mov
loope
xor
add
cmp
jl
sbb
pop
mov
add
push
insl
sub
inc
pushw
xor
ret
cmp
rcll
data16
xlat
pusha
dec
mov
pusha
push
lahf
out
movsb
ljmp
mov
dec
add
sub
inc
into
mov
sub
repz
inc
push
fmuls
aaa
xor
mov
movsl
mov
add
out
mov
xchg
popf
inc
dec
out
ja
xchg
daa
cwtl
aam
cmc
mov
cmp
pop
or
inc
push
dec
nop
xchg
aaa
cmpsb
add
out
cmp
jne
fcmovbe
into
sub
dec
add
cmpsl
xchg
sbb
insb
add
xchg
mov
fwait
inc
pop
adc
outsl
arpl
or
sub
add
jecxz
adc
jnp
fwait
dec
and
jecxz
jge
pop
dec
dec
jp
js
out
fwait
mov
in
pusha
push
jno
das
mov
insb
jno
xchg
psubsb
inc
push
in
pop
and
dec
mov
push
pop
xchg
movsb
or
jae
jns
xchg
cs
mov
sub
adc
not
js
mov
loope
ret
xchg
out
outsl
sbb
rorl
cli
xchg
add
xchg
inc
testb
cmc
inc
cli
pushf
call
dec
and
pushf
cld
sub
std
sahf
aas
lcall
sbb
popa
add
push
ficoms
insl
jae
shr
scas
cmp
dec
cltd
cmp
fistpl
mov
int3
lahf
mov
sbb
dec
dec
ljmp
jge
cs
cmp
inc
lret
outsb
dec
or
outsl
rolb
fiaddl
mov
or
in
mov
inc
lds
jbe
les
sub
or
add
adc
lods
call
bound
sti
dec
outsb
movl
jae
rcll
mov
nop
and
or
dec
push
jecxz
dec
push
cmp
out
inc
arpl
adc
add
xchg
sti
in
shlb
dec
fnstcw
lods
sbb
sub
enter
pusha
iret
push
xchg
and
push
hlt
jo
xor
pushl
xchg
mov
add
in
andb
lea
ficompl
pop
stos
rclb
push
push
in
int3
nop
lods
mov
dec
push
jl
mov
nop
sbbb
adc
cltd
gs
mov
sbb
xor
dec
loopne
push
or
mov
mov
test
cmc
lods
mov
fs
lret
xchg
ret
add
sarb
ds
or
out
aaa
push
sbb
cltd
imul
inc
aad
push
pop
inc
lret
bound
mov
enter
xor
ds
mov
in
cli
outsb
ret
mov
sahf
cmp
add
cmc
test
cmp
xor
xor
sarb
lret
ds
mov
sub
xlat
or
mull
adc
inc
rolb
imul
xor
cmpsl
jb
bound
outsl
stos
les
sbbl
xchg
inc
stos
mov
sbb
out
orl
ficomps
jnp
inc
dec
rcrb
out
xor
pop
xchg
and
out
pop
xor
sbb
aas
sub
stc
dec
ds
push
xchg
sbb
int
lcall
mov
and
mov
stc
div
push
mov
or
sbb
mov
iret
outsb
lret
mov
mov
in
hlt
xor
push
lods
sbb
mov
xchg
adc
push
xor
popa
mov
mov
ficoms
and
sahf
sbb
add
add
pop
mov
pop
nop
test
scas
sub
pop
mov
xchg
cld
jnp
lods
jbe
jecxz
cmpsl
xorb
jmp
cmp
nop
loopne
inc
pop
rcrl
and
jecxz
ja
pop
cmpsl
adc
pop
cmp
sarl
outsb
stos
jb
pop
andb
loopne
incl
fsts
clc
in
gs
dec
adc
fildl
push
push
dec
lds
out
dec
es
outsl
fstpl
mov
dec
dec
dec
mov
stos
out
nop
and
mov
mov
push
pop
xor
cli
stos
sbb
fs
test
inc
jo
pushf
xor
jp
and
cmp
nop
pop
xor
movsl
mov
ret
dec
insl
sbb
xor
lahf
mov
cwtl
push
cli
int
jb
push
sbb
jmp
adc
shr
popf
cmpsl
xor
mov
mov
fcmovnbe
shl
es
std
movsb
iret
fdivl
lds
sti
jns
cmpsl
nop
imul
stos
mov
and
pop
adc
jl
movswl
flds
pop
jb
mov
adc
in
fwait
cmpsl
out
std
es
test
ret
mov
xlat
fwait
jb
add
dec
jno
mov
pop
xor
cli
popa
in
jge
out
and
clc
sbb
add
test
setle
xchg
insl
push
es
pushf
dec
xchg
dec
or
inc
sbb
pop
or
lcall
mov
mov
cmc
loop
pop
or
mov
repnz
and
jnp
insl
aaa
and
pop
mov
rcr
add
shlb
rolb
jl
insb
int
dec
popa
cli
mov
ja
in
popa
das
clc
jno
iret
mov
ret
jns
bswap
es
inc
out
call
scas
sub
push
or
std
cltd
cmpl
xchg
movsl
jne
fldl
lds
jns
inc
xor
out
cmp
inc
imul
push
ja
cmpsb
bound
xor
dec
dec
inc
inc
ret
shl
insb
add
loope
push
xor
and
xchg
ror
data16
inc
stos
js
xor
inc
and
push
cmp
test
imul
into
inc
mov
and
pop
js
rcrb
leave
int3
sbb
jb
xchg
jge
call
repnz
sbb
cwtl
pop
shrl
fwait
daa
adc
and
add
push
cwtl
xchg
roll
pop
loopne
or
inc
push
gs
sbb
out
push
popf
ljmp
andl
xchg
adc
push
inc
and
mov
cmpl
push
data16
ja
adc
pop
out
sub
xor
imul
xchg
lahf
jns
rcrb
pop
or
mov
sarl
ds
xchg
and
ret
insb
pop
pop
outsl
and
adc
shr
or
jb
lods
xor
dec
dec
cmpsl
adc
ljmp
insb
xor
jns
out
fbstp
fcomps
pushl
xor
cmp
sub
sbb
xchg
rorb
dec
add
stc
adc
sarl
adc
pop
and
loope
pop
fisttps
pushf
add
dec
lret
cwtl
cmp
das
xchg
sub
shl
adc
and
mov
pop
test
cmp
adc
movsl
cmpsb
loope
mov
mov
sub
and
sub
push
outsl
aad
cli
mov
es
sub
sub
push
push
mov
mov
xchg
ror
add
push
cmpsl
faddl
ja
je
outsb
mov
je
adc
movsl
jle
ss
and
scas
fwait
popf
adc
iret
test
xchg
movsbl
movsb
sahf
cmpsb
lcall
add
dec
outsb
test
mov
dec
inc
mov
movsl
mov
outsl
add
sbb
adc
xlat
push
ss
test
bound
loope
cli
sub
mov
sbb
mov
mov
sub
aas
cmp
cmp
mov
xchg
pop
sub
movsl
fbstp
mov
push
notb
jg
icebp
mov
stos
cld
outsl
adc
mov
lods
xlat
cwtl
push
xchg
cmp
lret
pop
nop
jl
bound
gs
add
and
lahf
mov
adc
push
aad
xchg
cmpsb
and
es
jl
xlat
push
int3
rol
cmc
inc
push
cmp
cmpsl
dec
insl
xchg
cwtl
iret
jno
fiaddl
inc
jno
nop
and
push
dec
aas
inc
jnp
or
push
ret
mov
adcb
in
sub
ret
iret
cmp
xchg
movsb
push
daa
stc
stos
call
mov
inc
mov
add
cmp
mov
popa
pop
mov
mov
jp
mov
mov
aam
lea
out
lret
mov
pop
mov
enter
jle
call
xchg
and
in
push
outsb
xlat
dec
mov
pop
scas
daa
fdivrl
imul
cmc
ficompl
ss
movsb
pusha
cmpsb
daa
testb
xchg
push
mov
add
rclb
pop
sbb
dec
imul
pop
inc
mov
hlt
mov
lea
sbbl
call
mov
push
rorl
iret
sub
popl
xor
and
cmp
fstpl
jns
pop
js
pop
mov
clc
icebp
nop
fmulp
insl
or
sbb
mov
call
jno
in
xchg
and
inc
xchg
sub
or
mov
mov
pushf
pop
mov
or
sarb
jne
pop
dec
mov
shlb
ficoml
stos
xor
cmpb
mov
test
je
pop
cld
sbb
popa
xor
push
ret
movsl
iret
jp
add
shrl
shlb
push
sub
inc
push
sub
push
or
lock
sbb
pop
test
ret
stos
and
pop
mov
inc
lretw
mov
cmp
repnz
test
xchg
mov
sbb
mov
ficoml
dec
adc
jne
xchg
stos
in
mov
movsb
xchg
sbb
xor
arpl
pop
test
test
mov
mov
and
lods
cld
sbb
adc
and
cltd
sbbb
and
sub
mov
sbb
data16
mov
leave
xchg
cwtl
or
arpl
mov
cld
sarb
std
xor
jg
cmc
add
add
popl
jb
addb
outsl
out
push
add
pusha
out
rcrb
inc
sub
xor
or
nop
mov
inc
pop
add
lea
movsl
fisubrs
or
mov
sub
test
iret
mov
pop
and
cmc
jge
mov
add
data16
or
cmp
popa
fdivrs
cmp
cmp
jns
sub
inc
pop
inc
mov
pop
adc
xchg
mov
js
pop
popf
pop
xchg
and
xchg
mov
loope
mov
fs
xchg
xchg
xor
mov
mov
xchg
xchg
cmp
xor
inc
push
xbegin
stos
dec
or
out
add
fs
call
inc
sub
push
pop
out
ljmp
mov
rolb
inc
jmp
dec
jecxz
cmovle
and
shlb
cs
fstps
scas
dec
lock
inc
mov
lds
sub
jl
aam
in
fistpl
mov
xchg
push
rcll
ret
imul
icebp
or
sarl
push
mov
popf
and
pop
and
sub
loopne
loope
adc
mov
shr
fcompl
pop
push
sub
add
dec
incb
adc
addr16
test
es
add
rclb
cmp
xchg
dec
lods
hlt
nop
idivb
enter
loope
cmc
jno
aad
xorb
call
lea
push
and
mov
stos
ret
mov
lock
pop
or
cmp
icebp
jmp
loope
repz
inc
or
push
add
push
xor
ret
pop
mov
stc
adc
daa
repnz
mov
enter
addr16
imul
inc
dec
lds
jo
xor
es
aam
inc
lods
and
rorb
shll
inc
movsl
adc
mov
cwtl
inc
lret
dec
jmp
out
or
ja
inc
sbb
sub
fstpl
dec
xor
in
jnp
xchg
push
jle
sbb
pop
iret
push
aam
repz
ljmp
cmp
out
xchg
sbb
xchg
clc
movsl
dec
fistl
sahf
push
sahf
push
gs
dec
lods
fwait
add
dec
jb
das
pop
outsb
popa
add
enter
xor
stos
jp
inc
and
fidivs
ja
mull
adc
pop
pop
js
das
pushf
xchg
jecxz
and
pop
xor
sub
in
jp
movsl
sbb
fs
xchg
cmp
data16
inc
pusha
out
adc
pop
pop
inc
in
pop
popa
andl
or
or
and
xor
filds
fisttpl
aad
jo
into
popa
pop
in
hlt
gs
or
cmp
and
push
mov
sbb
xchg
daa
sbb
xchg
aad
mov
add
inc
rorl
sub
jnp
dec
gs
fwait
pop
dec
mov
daa
js
sub
cmp
in
cmp
dec
sbb
mov
add
daa
push
das
sbb
xlat
mov
sbb
cmp
inc
pusha
mov
mov
jno
pop
xor
jae
sub
orl
or
adc
call
shl
or
adc
dec
lods
sub
mov
add
aad
jns
daa
repz
mov
add
stos
movsl
dec
mov
arpl
push
xchg
cmp
int3
leave
ror
rcll
or
nop
or
cmp
lahf
test
add
cmp
loop
push
mov
xor
mov
cmc
adc
popf
push
sub
les
cmpsl
dec
pop
outsb
jno
outsb
xlat
jbe
lahf
push
in
sahf
arpl
mov
movsb
stos
jg
jl
xchg
push
stos
sbb
repz
push
fcomps
xchg
mov
adc
add
xchg
mov
xchg
jle
adc
sub
clc
mov
mov
jnp
xor
js
push
lods
mov
out
lahf
aaa
sbb
sbb
cmp
out
add
ret
cmp
les
inc
nop
cmp
xor
inc
cmp
mulb
nop
mov
sbb
mov
inc
movsl
in
or
scas
and
dec
arpl
loop
ficomps
cmp
das
outsl
aam
scas
inc
fstl
pop
enter
cmp
and
sub
xor
jno
pop
and
adc
loope
mov
or
imul
mov
cli
popf
sub
out
pop
cmc
sahf
ljmp
mov
movsl
adc
inc
es
cmc
aaa
jne
mov
insl
pop
mov
push
pop
jp
sub
cli
and
mov
stos
push
loope
adc
mov
gs
cmp
leave
in
pop
dec
cmp
in
xchg
jecxz
cmp
mov
stos
inc
das
je
loope
xchg
lods
frstor
cmp
arpl
jmp
fistps
pusha
xchg
mov
hlt
mov
jbe
mov
inc
sub
dec
inc
pop
fiaddl
test
mov
push
xchg
push
jmp
rol
cs
ja
xor
mov
push
imul
mov
mov
dec
jp
mov
lret
cli
in
or
adc
loop
cmp
pop
out
rorl
fs
push
jp
mov
xor
shll
jns
fcmovbe
sbb
scas
pop
cmpsl
mov
sbb
push
pop
or
add
or
les
or
xchg
popl
cmpsl
stc
mov
sub
bnd
jnp
jae
sub
test
jo
pusha
mov
stos
fnstcw
std
xchg
push
insb
sub
push
mov
sbb
lahf
mov
std
jns
std
sub
stc
xor
push
push
push
nop
testb
add
fs
mov
lahf
push
or
mov
sub
sub
push
ret
cld
mov
aas
sub
sbb
lahf
scas
call
mov
or
pop
mov
jp
mov
je
fisttpl
push
data16
cwtl
inc
mov
test
popf
pusha
push
sub
pop
add
fidivrs
cli
jg
mov
jo
jo
jle
imul
dec
adc
mov
cmp
aaa
orl
js
push
inc
sbb
sti
or
stos
mov
cwtl
ljmp
dec
add
push
ds
repz
mov
fmul
xor
push
fists
mov
movups
mov
cmp
mov
mov
cld
pop
mov
xchg
lds
test
xchg
leave
movsl
lock
mov
push
xor
push
imul
mov
popa
mov
pop
adc
jl
push
sbb
std
stc
xor
mov
neg
fmull
push
push
imul
repnz
jno
inc
lahf
data16
sbb
xor
ja
cmp
cmpsl
pop
cmp
mov
jmp
ret
push
xchg
mov
push
insl
hlt
data16
dec
cwtl
cmp
fsubrs
push
data16
fs
imul
rorl
les
xchg
adc
out
and
add
xchg
mov
inc
sti
mov
ja
popa
out
idivl
mov
gs
not
sti
enter
loop
test
add
imull
aad
data16
sahf
and
in
es
test
or
stos
ja
outsl
and
fwait
das
adc
imul
cmp
jo
aaa
xlat
test
xor
enter
mov
inc
xorl
nop
xchg
or
pop
dec
xchg
inc
pop
adc
dec
testb
and
and
jae
cmpsb
mull
fsubl
sbb
and
push
icebp
loop
ja
adc
fwait
clc
js
add
lret
loop
push
cmpl
mov
inc
inc
jns
push
push
es
mov
dec
mov
jg
jecxz
fists
jg
xchg
pop
dec
sbb
jle
aam
cmp
pop
pop
int3
dec
fnstenv
cmc
inc
mov
xchg
xor
or
mov
ret
jl
inc
mov
push
testb
inc
ja
fimuls
dec
push
sbb
xor
lret
jno
bound
in
jl
pop
negl
aam
xlat
lcall
inc
cmp
push
stos
cmp
pop
mov
inc
sub
dec
mov
mov
xor
pop
xor
das
cmp
adc
arpl
je
pop
sbb
outsb
jecxz
mov
aaa
jmp
push
add
sub
cmp
out
pop
sub
rorl
test
mov
data16
cs
or
popa
and
sub
adc
adc
adc
rcll
lods
lock
and
mov
rcrb
fsubr
xchg
jne
insl
outsb
jle
pop
adc
jge
in
fisttpl
stos
xchg
ret
inc
ljmp
in
movsl
mov
sbb
jns
xchg
adc
push
jmp
jns
aad
pop
xor
and
movsb
mov
data16
sbb
bswap
nop
in
xor
test
rol
inc
jno
mov
rol
pop
std
fwait
ds
rcll
add
insl
pop
xor
jp
lds
pop
scas
scas
push
push
mov
jae
fmuls
fistl
xor
bound
bndstx
inc
cmpsb
outsb
cwtl
in
xchg
pop
std
enter
dec
inc
fidivl
loope
insb
out
mov
aas
sub
movsb
imulb
jg
insb
jnp,pn
scas
adc
iret
lock
cltd
mov
push
nop
mov
out
or
stos
jle
mov
inc
mov
fsubr
lret
int
xor
sti
jmp
mov
hlt
inc
lods
mov
imul
inc
popf
jnp
daa
adc
add
lea
and
mov
cmpsb
aaa
xchg
dec
jg
and
adc
roll
sub
sbb
jb
lcall
sbb
dec
in
pop
shl
int3
mov
clc
loope
ret
clc
xor
ret
iret
inc
push
add
insb
mov
sub
xchg
inc
cld
movsb
push
sub
les
cmpl
jb
jmp
scas
sub
dec
pop
sbb
mov
imul
ror
add
fstpl
xchg
dec
scas
push
lret
cmp
cltd
cmpsl
xchg
fxtract
nop
or
xor
stc
push
cwtl
sete
and
lds
mov
and
lcall
mov
sbb
xor
sti
dec
adc
push
jl
aad
jns
xor
fisttps
xchg
mov
or
mov
and
lahf
aad
out
and
pcmpgtd
adc
jg
loope
sub
fwait
cmc
imul
cmp
popa
ret
xchg
icebp
inc
stos
and
cltd
pop
outsb
mov
enter
fdivrs
push
mov
movl
cmp
jl
cmc
sbb
sub
outsl
sub
pop
pop
jne
bound
lret
cmp
pushf
icebp
addr16
je
cmpsl
xor
sbbl
je
ret
xchg
or
lret
xor
clc
jp
sub
movsl
cmc
mov
fdivrp
or
test
push
lea
mov
fmul
and
popf
jmp
xchg
or
test
shll
mov
mov
cmp
mov
pop
mov
or
cmp
xchg
mov
xchg
frstpm(287
mov
in
pop
xchg
inc
mov
ret
push
push
pusha
jns
ds
lret
xchg
mov
iret
or
inc
dec
dec
mov
dec
push
js
push
cld
mov
inc
mov
cmp
xchg
mov
xlat
cld
sub
out
and
mov
int
adc
es
fisttpl
inc
inc
es
cmp
and
xlat
and
out
jmp
subl
mov
les
mov
push
jmp
cld
dec
dec
or
cs
sub
in
sub
xor
mov
dec
adc
adc
stos
or
sahf
fdiv
pop
dec
jno
or
dec
mov
lcall
ja
sbbl
out
popa
sbb
push
js
sub
out
es
shll
and
cwtl
jno
pop
jno
push
test
clc
xchg
pop
mov
cli
xchg
pop
mov
lea
mov
dec
lea
mov
jmp
ret
mov
roll
imul
incb
int3
subb
test
movsb
lods
test
add
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
andb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
orl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
mov
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
nop
xor
inc
nop
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
nop
nop
nop
nop
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
xor
add
rolb
add
jo
add
loopne
add
add
add
or
add
pop
add
orb
add
addb
addb
add
test
add
add
add
or
add
add
and
add
call
add
add
add
add
ret
add
mov
add
or
add
add
add
add
add
add
clc
add
addb
add
and
add
dec
add
addb
add
or
add
add
add
leave
add
adc
add
or
add
add
add
leave
add
mov
add
add
add
add
add
mov
sub
add
add
add
add
add
add
add
add
add
add
add
repz
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
addb
add
or
add
add
add
add
add
hlt
add
cwtl
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
aam
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
arpl
outsl
add
add
outsl
add
je
ja
popa
add
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
jae
outsl
add
and
push
add
bound
outsl
add
add
jb
jne
insl
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
shlb
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
gs
gs
inc
arpl
add
push
gs
jb
jo
