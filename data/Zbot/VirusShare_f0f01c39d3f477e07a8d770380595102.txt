add
add
add
add
and
add
mov
add
add
bound
add
mov
add
mov
add
mov
add
add
orb
add
mov
add
add
add
insb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
test
add
mov
add
mov
add
mov
add
mov
add
add
and
add
xor
add
dec
mov
add
add
outsb
mov
add
add
xchg
mov
add
add
lret
add
mov
add
mov
add
add
sub
add
inc
mov
add
add
add
push
add
jbe
add
mov
add
add
add
mov
add
add
mov
add
gs
add
dec
inc
add
xor
add
add
add
pushf
inc
add
jb
js
je
jb
arpl
jae
add
jae
arpl
outsl
add
add
add
add
add
jne
outsb
add
add
add
add
jb
jb
outsl
add
and
add
add
or
add
add
add
push
add
and
add
jb
outsl
add
or
add
dec
add
inc
add
add
jb
jb
outsl
add
or
add
add
add
inc
add
dec
add
add
jb
jb
outsl
add
or
add
add
add
add
add
add
add
add
je
je
add
jo
je
and
je
outsl
add
add
jae
add
add
push
add
dec
add
add
outsl
add
add
add
jb
outsl
add
and
je
push
add
add
jae
jae
add
bound
insb
add
and
add
jb
imul
and
outsb
add
je
imul
and
arpl
outsl
add
add
add
outsb
add
je
imul
imul
je
imul
or
push
add
imul
imul
imul
je
add
and
popa
add
add
jne
add
add
outsb
add
add
outsl
add
jb
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
je
and
imul
insl
add
jae
je
and
insb
add
imul
add
add
add
add
and
jb
add
jne
insb
add
add
data16
add
popa
add
add
outsb
add
and
popa
add
and
dec
add
dec
add
add
outsl
add
jo
imul
add
add
add
add
insb
add
sub
and
data16
outsb
add
je
imul
and
data16
outsl
add
and
popa
add
add
popa
add
add
add
add
outsl
add
jae
je
jb
jne
arpl
je
outsl
add
and
outsl
add
and
data16
outsl
add
and
inc
add
add
popa
add
outsb
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
insb
add
arpl
popa
add
add
add
outsb
add
outsl
add
insl
add
je
imul
or
add
add
add
add
add
add
add
add
je
je
add
jo
je
and
je
outsl
add
add
outsb
add
je
imul
imul
and
je
push
add
push
add
add
outsl
add
add
add
add
outsb
add
add
outsb
add
add
add
add
add
jae
and
imul
imul
je
add
and
popa
add
add
jne
add
add
outsb
add
add
outsl
add
jb
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
add
add
add
add
add
add
push
add
add
outsl
add
add
outsb
add
je
imul
imul
add
add
add
add
add
add
add
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
outsb
add
je
imul
imul
and
push
add
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
insb
add
ja
imul
imul
je
imul
imul
je
imul
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
jae
je
add
outsl
add
add
outsb
add
je
imul
imul
je
imul
or
add
add
add
add
add
add
add
add
add
jb
add
add
imul
jne
popa
add
add
jne
outsb
add
je
imul
and
arpl
popa
add
add
add
add
add
add
add
add
or
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
pop
add
outsb
add
js
imul
popa
add
add
imul
je
popa
add
insb
add
or
add
add
add
add
add
add
add
add
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
jo
add
and
arpl
outsl
add
jae
outsl
add
add
add
add
imul
or
add
add
add
add
add
add
add
add
add
add
outsb
add
js
jo
add
je
add
add
add
jo
and
add
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
outsb
add
js
jo
add
je
add
add
jne
insb
add
add
add
add
add
add
add
imul
add
jb
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
je
push
add
add
add
add
add
add
add
add
add
add
add
add
bound
outsl
add
je
sub
sub
and
push
add
add
add
outsb
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
add
jbe
imul
outsb
add
add
je
or
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
popa
add
add
insl
add
outsb
add
add
add
add
add
add
add
add
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jne
jo
jo
outsl
add
je
and
outsb
add
je
and
insb
add
popa
add
add
add
add
add
add
add
add
inc
add
add
add
sbb
or
add
mov
add
add
inc
add
add
add
pop
inc
add
add
add
add
add
inc
add
add
add
push
inc
add
add
add
add
add
push
inc
add
add
add
add
add
inc
add
add
add
adc
add
push
adc
add
add
add
adc
and
add
clc
adc
js
add
fcoms
inc
add
add
mov
add
add
add
add
add
add
inc
add
imul
outsl
add
outsl
add
je
and
push
add
jae
jne
popa
add
add
sub
sub
and
push
add
outsb
add
add
add
add
add
jb
popa
add
jns
add
add
or
or
add
add
add
add
add
add
jo
jb
outsl
add
jb
popa
add
and
outsb
add
insl
add
and
jne
outsb
add
outsb
add
ja
outsb
add
add
add
add
jne
outsb
add
add
add
add
jb
jb
outsl
add
and
or
or
push
add
outsl
add
jb
popa
add
cmp
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
add
add
add
add
add
or
add
nop
add
add
add
add
add
dec
add
push
add
inc
add
add
add
add
add
add
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
je
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
push
add
push
add
add
add
add
add
add
add
dec
add
add
insl
add
add
jae
add
add
add
add
add
add
dec
add
dec
add
add
add
and
jns
jns
jns
jns
add
dec
add
das
add
add
add
jns
add
add
push
add
add
add
inc
add
add
add
inc
add
arpl
add
bound
add
add
add
dec
add
jbe
add
bound
add
add
add
dec
add
je
outsl
add
add
add
push
add
jo
je
add
bound
add
add
inc
add
add
jae
je
add
add
dec
add
insb
add
add
add
dec
add
outsb
add
add
add
inc
add
jb
imul
dec
add
jb
arpl
push
add
bound
jb
jne
popa
add
jns
add
add
dec
add
outsb
add
popa
add
jns
add
inc
add
arpl
add
dec
add
jbe
add
dec
add
je
add
push
add
jo
add
inc
add
add
add
jne
insb
add
add
jne
outsb
add
add
popa
add
add
inc
add
jb
add
dec
add
jb
add
inc
add
bound
add
dec
add
outsb
add
add
popa
add
add
add
jns
add
add
inc
add
imul
jns
add
add
push
add
jne
jb
jae
add
jns
add
add
push
add
add
add
add
jns
add
push
add
add
add
jns
add
dec
add
outsb
add
add
add
add
push
add
outsb
add
add
add
add
push
add
je
add
inc
add
imul
push
add
add
add
add
add
dec
add
outsb
add
add
jne
outsb
add
add
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
add
add
inc
add
add
add
pop
add
and
add
add
add
shlb
add
mov
mov
lods
mov
pop
ret
push
mov
mov
xor
test
je
cmp
je
inc
cmpb
jne
pop
ret
push
mov
push
mov
test
jne
cmp
je
or
jmp
push
mov
test
jne
xor
inc
jmp
xor
jmp
mov
push
mov
cmp
jne
cmp
jne
mov
movsbl
movsbl
sub
jne
mov
sub
test
je
inc
mov
movsbl
movsbl
sub
je
jmp
push
call
pop
mov
cmp
jne
push
call
pop
mov
cmp
jne
test
je
test
je
xor
test
jle
movsbl
movsbl
sub
jne
inc
inc
inc
cmp
jl
jmp
sub
xor
test
setg
mov
neg
sbb
pop
lea
and
pop
pop
pop
ret
push
mov
push
mov
andl
push
push
mov
add
cmpl
jbe
mov
add
test
je
mov
push
push
add
push
pushl
call
add
test
je
incl
mov
add
cmp
jb
xor
pop
pop
leave
ret
mov
mov
lea
movzwl
mov
lea
mov
add
jmp
push
mov
sub
mov
xor
mov
push
movl
movl
movl
movw
movb
movl
movl
movl
movw
movb
call
mov
xor
xorb
inc
cmp
jb
xor
xorb
inc
cmp
jb
lea
push
call
mov
lea
push
call
pop
pop
mov
xor
mov
pop
call
leave
ret
push
mov
sub
mov
xor
mov
mov
push
mov
mov
mov
push
push
mov
xor
xor
mov
inc
cmp
jl
xor
xor
mov
divl
lea
movzbl
add
add
and
jns
dec
or
inc
mov
mov
lea
mov
mov
movzbl
inc
mov
cmp
jl
xor
cmp
jbe
add
and
jns
dec
or
inc
lea
mov
add
and
jns
dec
or
inc
lea
mov
mov
mov
movzbl
mov
mov
mov
add
and
jns
dec
or
inc
mov
xor
inc
cmp
jb
mov
mov
pop
pop
xor
pop
call
leave
ret
push
mov
push
push
mov
mov
mov
cmp
jne
xor
inc
jmp
mov
mov
sub
test
je
push
push
add
jmp
lea
shr
movl
je
lea
mov
mov
movzwl
mov
shr
and
movzwl
jns
dec
or
inc
movzwl
test
je
cmp
jne
add
add
incl
addl
cmp
jb
add
mov
test
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
mov
mov
mov
test
jne
inc
jmp
push
push
lea
jmp
add
push
call
mov
test
jne
mov
add
push
call
mov
test
je
mov
test
jne
mov
add
andl
jmp
mov
add
cmp
jae
lea
cmpb
je
push
jmp
movzwl
push
pushl
call
mov
test
je
add
mov
jmp
mov
add
addl
cmpl
jne
add
mov
test
jne
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
andl
push
mov
test
je
mov
cmp
jne
mov
lea
add
cmpl
mov
mov
jne
push
push
pushl
push
call
mov
test
je
mov
push
push
push
pop
mov
mov
rep
mov
push
pop
mov
add
rep
movzwl
mov
imul
add
push
push
mov
mov
lea
push
call
mov
add
cmp
jbe
add
push
lea
push
mov
add
push
call
add
mov
xor
xor
cmp
jae
mov
jmp
mov
lea
mov
mov
pushl
add
mov
mov
mov
add
add
push
push
call
movzwl
add
inc
cmp
jl
mov
push
call
pop
test
je
push
call
pop
test
jne
push
push
push
call
andl
jmp
mov
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
or
push
xor
push
mov
mov
mov
mov
push
movl
movl
movl
mov
movl
movb
movl
movl
mov
movl
movl
movl
movw
movw
movl
movl
movw
movl
movl
movl
movw
mov
movl
movl
movl
mov
movl
movl
movl
movw
movl
movl
movl
movw
movl
movw
xor
xorb
inc
cmp
jb
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
mov
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
mov
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
mov
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
mov
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
mov
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
push
mov
call
push
mov
push
push
call
mov
push
push
call
push
call
push
push
mov
call
push
push
call
mov
cmp
jne
push
call
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
push
lea
push
push
mov
call
push
push
lea
push
pushl
movl
call
add
lea
push
push
call
mov
cmp
je
push
mov
mov
pop
mov
mov
mov
mov
mov
mov
mov
add
mov
call
mov
pop
pop
xor
pop
call
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
push
mov
sub
mov
xor
mov
push
xor
push
movl
movl
movl
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movw
movl
movl
movl
movl
movl
movl
movw
mov
movl
movl
movl
movl
movw
mov
movl
movl
movl
movl
movl
xor
mov
xor
inc
cmp
jb
xor
xor
inc
cmp
jb
xor
xor
inc
cmp
jb
xor
xor
inc
cmp
jb
xor
xor
inc
cmp
jb
xor
xor
inc
cmp
jb
xor
xor
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
push
push
mov
call
mov
push
push
call
push
call
mov
cmpl
jne
push
call
push
call
xor
jmp
xor
push
call
mov
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
call
call
mov
call
call
push
lea
push
push
push
call
test
je
call
call
call
push
call
call
call
call
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
lea
push
movl
call
call
xor
push
call
call
inc
mov
cltd
cmp
jl
jg
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
push
call
mov
call
push
pushl
call
xor
xor
add
xor
add
add
xor
xor
mov
mov
dec
mov
jmp
ret
leave
ret
call
call
xor
push
push
push
push
push
call
ret
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
cmp
jne
repz
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
jmp
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
fs
inc
add
inc
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
aaa
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
inc
inc
add
inc
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
lock
inc
add
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
nop
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
inc
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
mov
cmpl
jne
call
pushl
call
push
call
pop
pop
pop
ret
push
push
call
lea
push
call
xor
cmp
jne
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
cmpl
jne
mov
cmp
jne
cmpl
jbe
xor
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
cmp
je
push
call
pop
call
testb
je
movzwl
jmp
push
pop
push
push
push
push
call
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmpl
jne
push
call
call
movl
mov
call
ret
call
jmp
pxor
push
push
mov
and
test
jne
mov
and
shr
je
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
xor
shr
je
mov
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
mov
neg
add
sub
xor
push
mov
and
je
mov
inc
dec
jne
shr
je
mov
lea
dec
jne
pop
jmp
push
call
mov
xor
ret
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
push
mov
and
test
jne
mov
and
shr
je
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
pop
pop
pop
pop
ret
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
mov
push
mov
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
pushl
call
pop
ret
mov
push
mov
pushl
call
pop
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
cmpl
je
push
call
pop
test
je
pushl
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
mov
mov
pop
mov
cmp
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
push
call
push
call
pop
andl
xor
inc
cmp
je
mov
mov
mov
cmpl
jne
pushl
mov
call
mov
mov
test
je
pushl
call
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
pushl
call
mov
call
mov
call
pushl
call
mov
pushl
call
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
call
cmpl
jne
movl
push
call
pop
pushl
call
cmpl
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
mov
push
mov
call
pushl
call
pop
push
call
int3
mov
push
mov
xor
mov
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
push
push
call
mov
xor
pop
mov
cmp
je
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
je
cmp
je
push
push
mov
push
call
add
test
jne
push
mov
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
mov
push
push
call
add
test
jne
pushl
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
push
push
push
push
jmp
push
call
mov
cmp
je
cmp
je
xor
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
jne
push
call
push
call
pop
pop
ret
mov
push
mov
push
call
mov
test
je
mov
mov
mov
push
cmp
je
add
lea
cmp
jb
add
cmp
jae
cmp
je
xor
test
je
mov
test
jne
xor
jmp
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
push
mov
mov
mov
cmp
jne
push
pop
mov
andl
add
cmp
jl
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
pop
mov
pop
or
pop
pop
pop
ret
mov
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
cmpl
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
test
jne
push
inc
push
call
mov
pop
pop
mov
test
je
mov
push
jmp
push
call
cmpb
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmpb
jne
pushl
call
andl
andl
movl
xor
pop
pop
pop
pop
ret
pushl
call
andl
or
jmp
xor
push
push
push
push
push
call
int3
mov
push
mov
push
mov
push
xor
push
mov
mov
mov
movl
cmp
je
mov
addl
mov
mov
cmpb
jne
xor
cmp
mov
sete
inc
mov
jmp
incl
test
je
mov
mov
inc
mov
mov
movzbl
push
inc
call
pop
test
je
incl
cmpl
je
mov
mov
incl
mov
inc
mov
mov
test
je
cmpl
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
movb
inc
incl
test
jne
mov
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
movsbl
push
test
je
call
pop
test
je
mov
mov
incl
mov
inc
incl
mov
mov
incl
mov
jmp
call
pop
test
je
inc
incl
incl
mov
inc
jmp
test
je
movb
inc
mov
incl
mov
jmp
mov
pop
pop
test
je
andl
incl
leave
ret
mov
push
mov
sub
push
xor
push
push
cmp
jne
call
push
mov
push
push
mov
call
mov
mov
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
pop
cmp
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
mov
push
mov
sub
push
push
call
mov
xor
cmp
jne
xor
jmp
cmp
je
add
cmp
jne
add
cmp
jne
push
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
pop
mov
cmp
je
push
push
pushl
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
mov
push
mov
sub
push
lea
push
call
push
push
pop
push
call
pop
pop
xor
cmp
jne
or
jmp
lea
mov
mov
cmp
jae
add
orl
movw
mov
movw
movb
mov
mov
mov
add
lea
add
cmp
jb
push
push
cmp
je
mov
cmp
je
mov
add
mov
add
mov
mov
cmp
jl
mov
cmp
jge
mov
push
push
call
pop
pop
test
je
addl
lea
mov
cmp
jae
add
orl
andl
andb
andl
movw
movw
movb
mov
add
add
lea
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
cmp
je
mov
mov
test
je
test
jne
push
call
test
je
mov
and
mov
sar
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
test
je
incl
addl
inc
incl
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
push
lea
push
call
test
je
incl
jmp
orb
movl
inc
cmp
jl
pushl
call
xor
pop
pop
pop
leave
ret
or
jmp
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
ret
call
ret
mov
push
pushl
call
mov
test
jne
pushl
call
mov
push
pushl
call
mov
pop
ret
mov
cmp
je
push
pushl
call
call
orl
mov
cmp
je
push
call
orl
jmp
push
push
call
push
call
mov
movl
andl
xor
inc
mov
mov
movb
movb
movl
push
call
pop
andl
pushl
call
movl
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
pushl
call
pop
movl
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
pushl
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
andl
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
movl
call
push
call
pop
movl
mov
test
je
push
call
pop
cmp
je
cmp
je
cmpl
jne
push
call
pop
movl
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
push
call
mov
test
jne
call
xor
pop
ret
push
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
mov
je
cmpl
je
cmpl
je
test
jne
mov
mov
mov
movl
mov
mov
call
mov
cmp
je
pushl
push
call
test
je
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
mov
call
test
je
mov
push
pushl
call
call
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
xor
inc
jmp
call
xor
pop
pop
ret
push
push
push
call
xor
test
setne
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
mov
push
mov
sub
mov
andl
andl
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
pop
leave
ret
andl
ret
push
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
push
call
mov
ret
mov
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
mov
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
pushl
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
movl
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
test
jne
push
call
pop
call
movl
mov
jmp
mov
jmp
push
call
pop
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmpl
jne
push
call
pop
test
jne
push
call
pop
pushl
call
pop
pop
ret
mov
push
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
pushl
call
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
pop
lea
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
cmpl
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
cmp
je
push
call
pop
andl
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
cmp
je
push
call
pop
mov
pop
xor
pop
call
leave
ret
mov
push
push
mov
push
push
call
add
push
call
push
call
pop
ret
mov
push
mov
pushl
call
test
je
pop
jmp
pushl
pushl
pushl
pushl
pushl
call
int3
xor
push
push
push
push
push
call
add
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
pushl
call
test
je
pushl
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
mov
push
mov
push
push
push
mov
push
pushl
call
pushl
mov
mov
call
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
add
cmp
jb
push
pushl
call
pop
pop
test
jne
lea
cmp
jb
push
pushl
call
pop
pop
test
je
sar
push
lea
call
mov
pushl
mov
call
mov
add
push
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
mov
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
andl
xor
pop
ret
push
push
call
call
andl
pushl
call
pop
mov
movl
call
mov
call
ret
call
ret
mov
push
mov
pushl
call
neg
sbb
neg
pop
dec
pop
ret
mov
push
push
xor
pushl
call
mov
add
cmp
jb
pop
pop
ret
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
call
andl
cmpl
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
mov
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
mov
mov
cmp
je
cmp
je
push
call
pushl
mov
call
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
orl
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
pushl
call
mov
pushl
call
test
je
pushl
pushl
pushl
pushl
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
xor
mov
jmp
mov
cmpw
je
add
dec
jne
test
je
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
push
mov
push
push
test
jne
test
jne
cmp
jne
xor
pop
pop
pop
pop
ret
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
jmp
mov
cmp
jne
mov
sub
movzwl
mov
add
test
je
dec
jne
jmp
mov
sub
movzwl
mov
add
test
je
dec
je
dec
jne
test
jne
xor
mov
test
jne
xor
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
mov
jmp
mov
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
movl
call
or
pop
ret
mov
push
mov
mov
push
mov
movb
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
testb
jne
orl
movb
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
test
jne
cmpl
je
mov
mov
movzwl
and
jmp
xor
test
je
xor
inc
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
pushl
push
call
add
pop
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzwl
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
pushl
call
mov
test
je
xor
mov
inc
cmp
jb
mov
movb
test
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
mov
add
test
jne
push
pushl
lea
pushl
push
push
lea
push
push
push
call
xor
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
test
je
orb
mov
mov
jmp
mov
inc
cmp
jb
jmp
lea
movl
xor
sub
mov
lea
add
lea
cmp
ja
orb
lea
jmp
cmp
ja
orb
lea
mov
jmp
movb
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmpl
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
movl
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
movl
call
cmp
je
mov
andl
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
mov
movl
jmp
cmp
je
mov
andl
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
movzwl
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzbl
movzbl
jmp
mov
mov
or
movzbl
inc
cmp
jbe
mov
add
cmpb
jne
mov
incl
add
cmpl
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
mov
add
add
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
add
cmpb
jne
lea
mov
orb
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzwl
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
movl
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
cmpl
jne
push
call
pop
movl
xor
ret
mov
push
mov
cmpl
je
pushl
push
pushl
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
mov
push
mov
mov
push
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
mov
test
jne
mov
jmp
mov
sub
mov
mov
inc
test
je
dec
jne
test
jne
movb
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
pushl
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
lea
movl
cmpl
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
decl
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmpl
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmpl
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
pushl
add
push
call
pop
pop
mov
movl
call
jmp
push
call
pop
mov
ret
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
call
test
je
push
call
pop
testb
je
push
push
push
call
add
push
call
int3
mov
push
mov
mov
test
je
sub
cmpl
jne
push
call
pop
pop
ret
mov
push
mov
cmpl
jne
call
movl
call
or
pop
ret
pushl
push
pushl
call
pop
ret
push
call
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
push
xor
push
push
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
mov
cmp
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
push
push
push
pushl
pushl
pushl
call
mov
cmp
je
mov
test
je
mov
cmp
je
cmp
jg
push
pushl
push
pushl
pushl
pushl
call
jmp
mov
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
pushl
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
pushl
push
push
pushl
call
mov
push
call
pop
pushl
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
mov
xor
mov
push
xor
push
push
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
test
je
lea
push
push
push
call
add
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
mov
cmp
ja
push
push
cmpl
jne
call
push
call
push
call
pop
pop
test
je
mov
jmp
xor
inc
push
push
pushl
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
movl
xor
pop
pop
ret
mov
push
mov
mov
test
je
push
xor
pop
div
cmp
jae
call
movl
xor
pop
ret
imul
push
mov
test
jne
inc
xor
cmp
ja
push
push
pushl
call
test
jne
cmpl
je
push
call
pop
test
jne
mov
test
je
movl
xor
jmp
mov
test
je
movl
pop
pop
ret
mov
push
mov
cmpl
jne
pushl
call
pop
pop
ret
push
mov
test
jne
pushl
call
pop
xor
jmp
push
jmp
test
jne
inc
push
pushl
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
movl
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
mov
push
mov
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
int3
jmp
jmp
jmp
int3
int3
incl
add
add
add
add
decl
inc
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
pop
inc
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
pop
inc
add
incl
add
add
pop
inc
add
incl
add
add
incl
add
add
incl
inc
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
pop
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
popa
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
xchg
add
adc
add
xchg
add
mov
add
adc
add
xchg
add
add
add
add
add
add
add
add
and
add
mov
add
add
bound
add
mov
add
mov
add
mov
add
add
orb
add
mov
add
add
add
insb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
test
add
mov
add
mov
add
mov
add
mov
add
add
and
add
xor
add
dec
mov
add
add
outsb
mov
add
add
xchg
mov
add
add
lret
add
mov
add
mov
add
add
sub
add
inc
mov
add
add
add
push
add
jbe
add
mov
add
add
add
mov
add
add
add
add
mov
push
insb
gs
lret
add
popa
jo
insb
insb
outsl
arpl
iret
add
popa
jo
jb
add
inc
add
je
jb
arpl
fs
jae
add
cmp
dec
outsl
popa
fs
imul
add
adc
dec
outsl
fs
gs
popa
outsb
fs
gs
add
in
add
imul
jb
gs
add
imul
insb
insb
outsl
arpl
add
add
imul
jae
xchg
add
je
imul
je
add
push
gs
imul
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jmp
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
add
outsl
ja
imul
and
inc
gs
gs
je
jo
imul
push
push
inc
push
xor
cs
insb
add
add
inc
push
dec
inc
insb
gs
jb
insb
imul
add
add
dec
inc
imul
inc
push
dec
inc
dec
dec
xor
cs
insb
add
xchg
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
dec
gs
jo
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
arpl
inc
gs
je
jb
jne
dec
outsb
outsw
push
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
rolb
jb
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
roll
fs
gs
js
gs
imul
gs
add
push
outsb
push
gs
js
gs
imul
gs
add
dec
jae
bound
addr16
jb
jae
outsb
je
sbb
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
lret
arpl
gs
outsl
imul
add
gs
imul
je
je
dec
popa
outsb
fs
add
adc
inc
gs
outsl
fs
gs
imul
add
adc
inc
gs
outsl
fs
gs
imul
add
popa
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
inc
push
dec
jne
je
inc
jns
gs
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
outsl
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
repz
je
imul
roll
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
arpl
gs
outsl
imul
add
insb
jae
insb
insb
outsl
arpl
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
jb
gs
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jne
jb
outsb
je
push
dec
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
popa
jo
jb
popa
je
add
cmpsl
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
roll
gs
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
out
add
je
jb
jb
je
arpl
push
arpl
outsb
add
aas
add
fs
imul
add
jb
inc
gs
push
dec
outsb
outsw
add
inc
gs
inc
push
add
aaa
add
je
inc
dec
inc
push
add
or
dec
jae
popa
insb
imul
add
add
je
push
outsb
ja
outsb
fs
add
popa
jo
imul
dec
inc
dec
popa
jo
je
imul
add
insb
je
inc
jns
gs
outsl
push
imul
imul
je
imul
push
add
rolb
dec
gs
jo
gs
insb
insb
outsl
arpl
dec
out
mov
add
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
push
jns
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
xchg
inc
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
add
add
add
sbb
inc
add
and
adc
inc
add
and
or
inc
add
and
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
inc
add
add
add
inc
add
add
add
inc
add
inc
add
inc
add
pop
inc
add
inc
add
pop
inc
add
inc
add
pop
inc
add
push
inc
add
add
add
add
add
add
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
sbb
inc
add
sbb
inc
add
sbb
inc
add
sbb
inc
add
sbb
inc
add
inc
add
inc
add
add
sbb
inc
add
sbb
inc
add
sbb
add
sbb
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
add
add
and
test
inc
add
daa
inc
add
inc
add
add
add
add
add
ljmp
add
add
add
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
jg
jg
jg
pushf
lcall
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
and
and
inc
add
add
add
add
add
add
add
or
add
add
pop
add
addb
add
jo
add
mov
add
mov
add
add
add
add
add
orb
add
add
adcb
add
add
add
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
or
add
dec
add
addb
add
add
add
add
add
add
add
insl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
insl
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
fadds
add
add
add
add
add
add
add
add
add
lock
addb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
mov
add
add
in
add
add
add
int3
mov
add
incb
add
add
add
add
add
mov
add
add
in
add
add
add
sbb
add
in
add
add
add
inc
mov
add
add
in
add
add
add
je
add
adc
add
in
add
add
add
test
add
in
add
add
add
cwtl
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
add
add
add
add
add
add
add
and
add
add
add
add
add
rolb
aas
addb
aas
add
add
or
add
add
cmp
add
xor
add
add
add
add
or
add
aas
pop
pop
cld
aas
mov
jg
decl
incl
pop
incl
jg
incl
jecxz
incl
cmp
pop
lcall
idiv
ljmp
inc
sti
sub
adc
mov
div
pop
mov
fsubrs
cs
ret
sub
loope
xchg
jae
sbb
lods
pop
lahf
sbb
jge
jl
adc
sub
aas
sti
mov
mov
mov
sbb
mov
mov
xchg
sub
aad
prefetchnta
sub
add
mov
mov
daa
mov
sub
sub
mov
in
fcomps
mov
pop
mov
std
adc
ljmp
push
mov
jo
cmp
negl
mov
lods
and
push
call
sub
push
inc
xor
cli
mov
fistpll
lea
leave
xorb
scas
mov
dec
xchg
shrl
and
rcrb
lock
or
aam
xchg
inc
push
out
add
and
insl
aaa
push
push
xchg
add
negl
insb
sbb
jo
lods
data16
pop
js
add
pop
es
sahf
or
mov
add
xchg
sbb
jno
ret
xchg
aas
orb
mov
hlt
movsl
mov
inc
mov
fnsave
xor
mov
subb
sbb
dec
sub
ja
mov
mov
call
sarl
jp
push
ficoml
jbe
jecxz
movsb
mov
pop
jp
inc
xchg
cmc
push
push
les
mov
je
call
jmp
jns,pn
push
lcall
pop
jge
ds
repnz
repnz
pop
aad
in
cmp
and
int3
mov
dec
mov
pop
stc
shlb
cli
sbb
xor
mov
test
xor
lock
or
fwait
inc
lods
fcomp
mov
std
insl
sbb
popl
xchg
push
or
sbb
enter
mul
xchg
stos
xlat
pop
dec
jbe
mov
mov
push
xchg
enter
outsb
lods
pop
mov
mov
mov
sti
mov
push
jns
cmp
cltd
shrl
scas
imul
aad
sbb
or
test
stc
pop
pop
jle
dec
add
loop
cmpsl
push
iret
ds
and
push
aad
jle
mov
lods
add
adc
lock
repz
jge
data16
pop
fcomp
sbb
pop
sub
int3
subb
jo
push
pop
sub
xchg
stos
inc
pop
pop
shll
ljmp
pop
push
pop
or
xor
mov
push
fcom
inc
mov
in
lods
jns
mov
mov
adc
and
dec
cmp
inc
gs
inc
jg
inc
xor
cmp
test
push
les
sub
push
pushf
mov
mov
shll
mov
sub
xchg
cli
xchg
std
sti
pop
dec
insl
fcoms
loope
insb
in
repz
in
addl
dec
jb
loop
int3
or
push
adc
loope
dec
insl
jp
xchg
fbld
mov
aad
and
lcall
cwtl
sub
pop
int
push
lahf
gs
adc
lcall
adc
or
fisubrs
lahf
movsl
cmp
jle
ficoms
pop
xor
imul
mov
cmp
pop
rcrl
testl
cmpsb
insb
test
mov
sbb
xchg
mov
push
divl
mov
xchg
or
jp
add
jns
scas
push
xchg
mov
and
das
aaa
and
sbb
adc
repnz
andb
aam
sbb
or
mov
pop
sahf
xchg
mov
addr16
pop
xor
dec
insl
xchg
push
xchg
rolb
scas
mov
loope
lods
inc
jl
mov
hlt
bound
sbb
shl
repz
dec
lret
sub
add
test
mov
jge
pop
push
test
cmp
push
aaa
mov
popa
mov
mov
and
push
or
inc
add
in
data16
mov
mov
jg
pop
mov
inc
push
pop
cmpsl
dec
push
mov
cwtl
les
mov
es
xchg
dec
sub
es
pushf
xchg
div
inc
push
or
imul
adc
dec
ret
ret
cmc
jle
mov
aaa
mov
sub
xlat
inc
and
dec
xor
rcrb
pop
fwait
repnz
mov
sub
mov
inc
pop
jae
pop
into
daa
sbb
mov
inc
cmpsb
push
pushf
mov
xor
jno
gs
out
cmpb
loope
pusha
mov
lahf
or
test
ret
repz
push
jle
inc
jns
les
mov
test
adc
cltd
lods
lods
pop
lds
sti
mov
imull
in
add
lcall
jae
and
ljmp
test
sub
ret
sbb
cwtl
xor
add
jne
cmp
loope
and
sti
pop
dec
push
and
movsl
pop
lahf
mov
loope
sarl
mov
out
lret
call
lods
or
ds
add
bound
daa
jns
add
xchg
push
adc
cmc
fmuls
dec
orl
paddw
cmpb
andl
pop
pop
cmp
rolb
inc
enter
dec
jo
jae
sub
in
fsts
int3
arpl
leave
test
adc
xlat
sub
xor
fbstp
mov
repnz
xchg
insb
xor
xlat
mov
push
movsl
movsb
cmp
push
add
jge
fsubrl
sbb
pop
mov
mov
jno
xchg
sub
lods
ret
ret
test
pop
movsb
stos
insl
add
xchg
aaa
jo
daa
push
cmp
cmp
out
pop
pop
push
pop
sub
dec
iret
jmp
sti
pop
push
mov
pop
xchg
mov
shll
mov
xlat
lret
xchg
adc
jne
mov
and
mov
mov
daa
cli
stos
mov
push
mov
mov
pcmpeqd
lea
mov
cwtl
sbb
and
mov
mov
cmpsb
add
inc
add
ror
and
movsl
popa
dec
adc
ss
sbb
aaa
stos
rcrb
cmp
in
sbb
mov
push
xchg
addr16
outsb
or
adc
pushf
adc
test
jle
mov
loope
imul
push
prefetchnta
negl
mov
adc
gs
xchg
aaa
movsl
roll
test
inc
push
sub
repnz
mov
inc
push
xchg
mov
sub
fcompl
xor
or
push
mov
out
push
outsl
test
mov
add
dec
xor
adc
int
pop
cmpsl
cmpl
stos
movsb
jnp
stc
popf
mov
pushf
shlb
mov
daa
popf
push
xor
aad
dec
pop
jnp
or
mov
mov
jg
inc
and
pushf
cwtl
fs
xchg
loop
xor
outsl
popa
dec
lcall
ficomps
jp
jns
jg
xacquire
insb
inc
cwtl
lret
push
push
and
lcall
cmp
inc
dec
ficomps
mov
out
sbb
popf
inc
je
xor
add
pop
in
dec
rcll
add
hlt
jle
fbstp
mov
jno
pushl
inc
roll
sbb
outsl
imul
je
leave
arpl
addr16
aas
sbb
and
movsl
out
sahf
and
shll
xchg
call
and
pop
popa
pop
jae
outsb
out
test
inc
or
inc
insl
daa
lret
push
xchg
mov
mov
adc
jge
cmp
ret
in
mulb
mov
in
or
popa
ja
negb
sub
mov
ja
ljmp
jno
dec
sbb
clc
fwait
lahf
ds
sbb
imul
sbb
or
adc
sbb
call
add
sbb
repnz
push
mov
or
aas
dec
jno
xchg
cmp
push
or
jb,pn
xor
mov
lret
movsb
fldenv
add
mov
add
sti
sbb
xchg
iret
cmp
inc
repnz
movl
mov
dec
loop
mov
sbb
clflush
repnz
fwait
enter
fnsave
mov
push
stc
imul
and
bound
xchg
push
out
je
sub
mov
xor
push
xor
scas
xchg
sub
xchg
hlt
xor
ds
std
cmc
or
ds
lods
push
add
popf
jmp
rol
mov
das
or
js
sub
sarl
lahf
mov
lods
andl
adc
cwtl
push
mov
rcr
out
mov
inc
lock
fwait
mov
lods
icebp
push
lret
mov
imul
adc
pushf
popf
xor
inc
sub
imul
pop
mov
mov
insl
scas
pushf
dec
pop
loopne
xchg
data16
cs
cmp
xchg
stos
or
xchg
sbb
sbb
dec
ja
imul
orb
gs
clc
sbb
enter
lcall
cwtl
adc
in
leave
lahf
pop
in
negb
jne
and
sahf
adc
daa
mov
in
sbb
aaa
hlt
jmp
lret
lods
sub
cmp
stos
inc
adc
scas
andl
es
push
enter
dec
xchg
pop
enter
enter
jmp
pop
push
xchg
adc
sti
shr
cmpsb
or
mov
out
movb
popa
loop
xchg
imul
test
fimull
outsl
and
dec
insl
jae
sarl
mov
mov
rcr
jno
ljmp
imul
xor
push
pop
pushf
insl
aas
dec
pusha
cwtl
rcrl
inc
dec
movsb
and
adc
enter
outsl
es
xchg
clc
or
imul
out
xchg
dec
add
pop
mov
pop
ret
adc
cmpsb
xor
or
shlb
jb
push
test
add
mov
sub
jmp
js
add
out
jg
sub
int
outsl
adc
xchg
dec
and
mov
inc
or
and
xor
jmp
sbb
ljmp
clc
or
insl
lret
sub
xchg
icebp
repnz
sbb
mov
or
cmpsl
mov
jge
in
pop
imul
loop
je
mov
lret
pop
mov
dec
pop
and
lock
pop
mov
cmp
mov
push
cmp
jl
pop
inc
insl
dec
pop
imull
bound
test
and
adc
sub
js
dec
pop
jno
mov
jne
incl
mov
popf
xlat
inc
lahf
fmull
pop
je
inc
push
scas
sbb
int3
xadd
mov
jecxz
fildl
hlt
adc
mov
mov
pop
hlt
cmp
pop
pop
xchg
xchg
lods
in
in
lret
cmp
icebp
xchg
sbb
repnz
add
insb
pop
test
mov
fwait
cwtl
fsubl
subb
adc
leave
dec
pop
and
xor
mov
inc
add
xchg
lds
mov
jns
aas
jo
incb
cwtl
outsl
push
cltd
leave
jbe
scas
loope
fstpt
shll
sbb
shrb
lret
out
fstpt
and
jp
pop
int
pop
cmp
xor
cli
into
movsl
pop
in
add
outsb
pop
movsb
incl
bound
xor
push
cmp
cmp
mov
lret
mov
imul
jbe
lods
mov
sbb
mov
les
scas
cmp
stos
mov
adc
in
push
test
icebp
sub
cmp
inc
movsb
in
daa
mov
dec
mov
sub
mov
jp
scas
adc
iret
add
push
stos
in
add
jmp
int
stc
mov
rcll
xlat
adc
cmpsb
jb
xor
cmp
dec
pop
js
add
sub
leave
lds
push
xor
stos
inc
sbb
cmp
aaa
fldt
jmp
ja
cmp
pop
scas
out
mov
fs
outsb
rclb
jp
or
aaa
test
int3
rolb
fwait
dec
or
fwait
out
loopne
lock
and
and
jmp
cmpsb
adc
movl
lret
cmp
mov
push
sbb
or
xor
add
lock
and
ds
push
sub
sub
lret
pop
jae
mov
andl
sti
fs
es
imul
fdivl
inc
sbb
pop
xor
jge
mov
aad
movsb
or
insb
mov
sbb
loopne
jg
add
and
push
fcoml
cmpsb
icebp
jge
and
gs
inc
push
dec
adc
stos
push
fwait
insl
jle
mov
or
pusha
sub
movsb
enter
nop
loopne
outsl
cmp
xor
lock
stc
or
cli
or
lock
aad
lods
mov
repnz
or
mov
rcll
mov
mov
jbe
ror
scas
mov
pop
mov
xchg
mov
xchg
test
cmc
sub
movntq
out
adcl
shrb
ret
jbe
mov
in
out
cmpsb
lock
or
jb
cs
pusha
test
in
push
and
test
ret
cmp
inc
cmpsl
xchg
pop
lret
dec
cmp
test
sti
xor
mov
je
pusha
add
jmp
adcb
lea
cmpsl
push
mov
sbb
push
popf
je
xchg
jle
pop
cmpsl
cli
dec
lock
out
mov
das
aaa
mov
fwait
fwait
inc
jge
gs
imul
jns
fnstenv
mov
repnz
shlb
mov
mov
mov
or
cmc
pop
sub
xor
out
ret
push
fidivl
fimuls
or
stos
aas
pop
or
xchg
iret
xor
add
stc
adc
mov
jg
movsl
hlt
xor
xor
push
outsl
pop
stos
push
mov
arpl
addr16
push
popa
push
mov
pusha
pushf
fwait
loopne
stc
clc
cmpsl
pop
xchg
pop
ja
or
or
pusha
cmpsb
and
mov
insl
push
xchg
dec
addps
xchg
cmp
in
push
dec
out
or
mov
shll
mov
out
adc
mov
lret
xlat
xchg
cs
pusha
pushf
cmc
or
inc
lret
scas
repz
aam
adc
adc
ja
pop
icebp
fs
out
dec
imul
icebp
in
pusha
adc
std
adc
gs
in
and
jnp
inc
mov
xchg
dec
leave
shll
pushf
psubb
inc
fwait
rolb
xchg
in
dec
sbb
adc
out
decl
inc
fisttpll
sub
jge
popf
xlat
jbe
scas
xchg
xchg
xor
fld
stos
pushf
and
cmp
into
push
dec
adc
ret
shll
lods
push
xchg
fsts
push
cwtl
push
rolb
ja
test
scas
pop
jl
cmp
xor
inc
cmc
fcmovu
xchg
rcr
inc
mov
lds
out
nop
sti
xor
rol
aas
mov
push
mov
stc
xchg
push
pop
aaa
fisttpl
in
pop
mov
sub
jle
iret
loopne
adc
or
test
mov
dec
pop
add
push
inc
jecxz
add
sub
bound
xor
lods
xor
loop
std
fldl
sub
mov
adc
add
xchg
mov
push
in
lret
sub
adc
fnstsw
sbb
sub
push
imul
adc
add
xchg
sbb
xchg
jo
mov
repnz
cs
mov
dec
mov
mov
add
test
adc
sub
jmp
dec
ja
loopne
orb
out
call
mov
lock
sarl
sub
test
or
inc
outsb
faddl
lcall
in
inc
cmp
imul
sub
adc
add
adc
sahf
stos
push
iret
ficomps
bound
and
xor
add
sub
stos
ljmp
pop
jge
pop
lea
add
cmp
call
cltd
pop
ss
push
fisttps
aaa
popa
mov
data16
mov
in
lock
mov
pusha
xor
and
and
ja
das
and
push
lods
and
cltd
rep
jle
sarb
lcall
fnstenv
pop
bnd
adc
xlat
out
shlb
daa
fdivr
mov
and
lret
std
sub
sbb
dec
xlat
rolb
aam
or
je
xchg
outsb
dec
mov
sub
push
xchg
mov
push
cmc
sbb
cld
rcrb
pop
add
push
cmpsb
incl
or
imul
sub
ss
jmp
nop
cmp
mov
mov
cmc
outsl
fsubs
addb
or
leave
cmc
iret
sub
cs
inc
ds
pop
mov
xor
aaa
adc
push
xor
fs
sbb
cli
mov
jmp
dec
pop
cli
mov
and
cmc
loopne
popf
outsl
loope
cmpl
minps
arpl
mov
mov
enter
das
pop
cltd
addr16
cmpsb
sbb
aam
das
xor
adc
jge
dec
js
mov
in
inc
xlat
jg
test
cmp
mov
jmp
lahf
dec
cs
xor
movsl
repnz
pop
push
jl
testb
les
fadd
jp,pt
or
inc
push
cwtl
xchg
add
push
push
push
mov
mov
aas
pop
sub
push
out
jecxz
pop
jbe
pusha
sbb
xorl
pop
in
jnp
mov
mov
push
jb
jg
jp
mov
mulb
roll
pop
lods
imul
lock
xchg
addr16
cmp
jmp
and
xor
or
pop
and
sbb
sbb
xchg
mov
xor
xor
jb
into
xchg
xchg
stc
jmp
testb
pop
int3
ljmp
stos
rcrb
mov
insb
stos
mov
inc
fwait
imul
movsb
loope
or
popf
dec
inc
ljmp
decb
xchg
stc
pop
mov
xchg
xchg
pop
mov
loope
movsl
xor
sti
ss
jp
ret
xlat
or
dec
notl
pop
fimull
pushl
pop
xchg
pop
fisubl
leave
loope
and
jae
imul
jmp
push
and
les
enter
pop
int
mov
ja
inc
xchg
out
lcall
add
ss
xor
cmpsl
popf
popa
mov
stos
xchg
idivl
out
js
mov
push
mov
mov
lods
test
shl
or
loope
in
dec
mov
jg
pop
pop
jno
aas
sub
push
fs
addr16
dec
les
cmp
cs
jns
pop
nop
loop
pop
sbb
popa
pop
xchg
out
mov
jnp
jnp
pop
fcomp
cld
cmp
push
mov
sbb
fsubrp
mov
fs
movsl
sub
push
fsubl
pop
ss
bound
and
pop
push
push
fcoml
popa
or
sub
icebp
sahf
xor
daa
push
call
pop
je
sub
test
sbb
jne
pop
jb
add
push
cld
sub
int3
lret
lods
dec
ret
rorb
lods
orl
in
jne
test
mov
pop
jl
sub
xor
subl
aad
xor
sahf
push
push
mov
out
dec
xorl
mov
push
cli
jno
sub
jno
rcrb
iret
loop
pop
in
push
stos
and
xchg
sub
insb
mov
mov
test
mov
push
inc
lods
pop
loop
hlt
nop
push
adc
xchg
cltd
inc
push
sub
mov
mov
mov
sub
mov
jle
push
icebp
mov
fidivrl
inc
sti
cmp
mov
inc
xchg
dec
pop
push
mov
dec
mov
mov
mov
jae
sub
sub
imul
pop
dec
push
push
add
fsubl
mov
push
pop
lods
pop
dec
lock
cmp
xor
je
pop
pop
lret
addr16
icebp
fldenv
jbe
xor
adc
mov
pop
xchg
sahf
mov
cmp
mov
and
and
pop
jl
in
push
or
fcoml
fdiv
stos
fiadds
insl
xor
out
jbe
fstpt
mov
iret
mov
gs
addb
inc
ss
jmp
adc
hlt
xchg
inc
mov
insl
mov
or
xor
fsts
xor
movsb
cltd
add
out
lods
or
xchg
mov
inc
adc
xabort
scas
pop
xchg
and
sbb
mov
mov
negb
aad
mov
jno
sub
pop
ds
pop
lods
cmc
inc
xchg
inc
mov
inc
cmpsb
jae
adc
pop
pop
mov
inc
lods
outsl
fdivp
rcll
sbb
mov
and
dec
rol
or
mov
cmc
test
out
lret
cmp
push
imul
adc
outsb
cmp
mov
or
int
cmp
lea
imul
in
sub
xchg
shl
lcall
jae
js
js
xchg
pop
or
cmp
adc
adc
push
sub
push
or
mov
xchg
call
mov
into
shrb
mov
xor
leave
ljmp
lea
aas
xchg
cmp
int3
adc
fidivs
fiaddl
jmp
into
jb
pop
mov
push
iret
cmp
adc
cmc
push
mov
pop
mov
scas
inc
in
lds
mov
jne
inc
jno
nop
sbb
or
jno
inc
loop
repnz
aaa
fsts
mov
test
pop
push
sub
push
jae
stos
mov
aam
cmpsl
sbb
scas
cmp
popf
push
sti
popa
dec
sahf
jp
out
cli
lods
rorl
into
push
lcall
sbb
mov
mov
inc
lcall
movsb
lods
inc
decb
dec
xor
es
aam
les
sbb
sbb
lods
sbb
mov
and
mov
mov
shlb
std
add
and
and
and
fcmovb
fwait
stc
mov
push
std
popa
aad
int3
rol
cmp
xchg
mov
icebp
mov
stc
cmp
out
push
movb
push
outsl
sbb
inc
and
or
loop
xor
fiaddl
sub
or
inc
push
test
push
dec
pop
in
aaa
jb
add
clc
xchg
mov
sub
sub
int
addr16
roll
loopne
mov
adc
push
inc
lret
mov
sti
xchg
jg
call
and
in
mov
or
test
push
lret
jp
xchg
adc
lds
repnz
jge
xchg
arpl
sub
xor
addl
das
aad
mov
aas
dec
icebp
subb
jp
or
push
jmp
fcom
int
cltd
loopne
addr16
push
test
push
ljmp
adc
lret
add
push
insl
xor
and
outsb
stos
faddl
out
push
jns
rolb
fisttpll
mov
gs
in
mov
inc
jmp
dec
cmc
cmp
mov
ret
stos
out
mov
xchg
sub
mov
cli
dec
shll
mov
push
add
hlt
insl
jb
mov
adc
fistpll
in
mov
and
imul
incb
xchg
lret
xchg
in
xlat
repnz
or
in
mov
lret
leave
stos
cmpb
adc
or
test
or
insl
sti
scas
aam
subl
push
xchg
adc
ja
mov
push
movsl
dec
or
xchg
or
xor
into
in
mov
mov
data16
or
mov
mov
stos
lods
jmp
mov
aad
cmp
adc
in
out
mov
cltd
mov
sbb
sub
sbb
pop
inc
das
jnp
and
loopne
cli
jbe
inc
pop
inc
mov
and
ret
je
dec
orb
push
cs
xchg
rcrl
pop
ret
test
mov
in
bound
idivl
xchg
and
outsb
adc
and
xor
shll
mov
cwtl
push
jno
mov
fs
lcall
adc
mov
into
imull
ja
dec
push
jmp
lods
dec
repz
jle
out
and
mov
mul
ret
lcall
arpl
inc
cmpsb
jne
repnz
in
xor
cmp
pop
fdivrs
jmp
inc
data16
test
bound
xchg
sub
les
cmp
mov
pop
out
shrl
dec
sbb
inc
test
adc
dec
lahf
inc
out
push
mov
mov
fmuls
cmp
adc
cli
dec
add
lahf
in
jmp
dec
fldenv
cs
mov
gs
int3
xor
push
xchg
jl
pop
xchg
repz
test
fs
adc
imul
sub
cmp
inc
test
pushl
mov
movsb
xor
outsl
push
js
ljmp
adc
add
rolb
inc
mov
mov
out
mov
pop
sub
sub
orl
ss
pop
xor
push
mov
faddl
call
sbb
ret
mov
shl
inc
sub
scas
add
inc
stc
push
dec
repz
push
fcoml
int
or
lahf
cmpsb
and
lods
xchg
popa
adc
out
out
pop
mov
aad
rcll
shll
das
and
mov
rol
mov
out
adc
es
cmc
cmpsl
test
push
push
xor
adc
cmpb
or
adc
and
inc
add
jge
nop
push
sub
xchg
call
outsl
ss
loop
mov
les
call
mov
mov
push
adc
jmp
fidivrl
movsl
fnstenv
imul
enter
movsb
or
in
fbld
inc
pop
lock
pop
div
repnz
je
rcl
pop
bnd
push
jnp
sub
fistl
cmc
out
push
nopl
jnp
xor
in
jnp
loop
movsl
push
stos
pop
andb
rclb
sbb
sbb
popf
inc
repnz
push
dec
test
movsb
mov
inc
mov
mov
loopne
cs
fisubs
cs
popf
cs
stc
lret
lock
jae
xchg
xor
or
in
lcall
outsl
negl
mov
repnz
in
sbb
sub
xchg
bound
aad
push
fcmovne
sub
js
loop
push
xor
mov
adc
aam
sbb
int
jg
and
les
fnstenv
dec
mov
mov
loope
testb
imul
cmp
in
jg
clc
test
pop
jmp
inc
sahf
je
xlat
inc
jnp
jns
pop
mov
jg
imul
loope
data16
in
dec
lds
out
pop
fsts
push
repz
adc
std
lods
mov
shlb
push
pusha
fwait
test
mov
subb
sar
mov
mov
cmp
dec
mov
jne
and
sbb
je
cwtl
adc
fisubrs
es
push
mov
xchg
jns
push
push
negl
fnstsw
es
lahf
leave
cmpsl
pop
and
mov
xchg
test
popa
popa
jae
jmp
jno
mov
js
movsb
idiv
lcall
fimuls
mov
rolb
push
mov
test
bound
jae
mov
lea
daa
cmpsb
repz
das
mov
mov
cmp
in
inc
mov
ljmp
pop
xchg
daa
addl
iret
inc
jecxz
enter
push
cmp
ja
adc
int
push
fidivs
fsts
mov
hlt
addr16
fisubrl
lret
jecxz
sbb
add
inc
lret
mov
xor
nop
stos
insl
mov
lahf
pop
repnz
sbb
mov
dec
mov
push
mov
call
lret
enter
cmp
stos
cld
out
xor
repz
hlt
imul
pop
push
jns
mov
xor
or
jno
loopne
xor
notl
gs
jecxz
lods
jnp
jb
fisubs
sub
cli
ja
lret
mov
adc
into
pop
xchg
mov
pushf
sub
xchg
test
mov
in
push
int3
xor
cmc
aam
mov
nop
cmp
call
dec
test
or
adc
nop
adc
xchg
sbb
push
mov
xchg
or
and
adc
out
inc
and
add
ja
mov
mov
xchg
mov
insb
mov
or
rolb
or
test
bound
inc
ja
sarb
mov
jmp
pop
jg
nop
pop
ds
and
sub
push
ror
aas
and
vpandn
cltd
push
push
xlat
xchg
les
mov
jp
into
cmova
push
mov
test
in
mov
int
test
push
orb
cmp
cwtl
fmull
xor
or
xchg
sbb
xchg
sub
fs
xor
xchg
or
cli
xchg
gs
pop
jmp
xchg
cltd
and
jns
mov
imul
and
les
testl
sub
movsl
sbb
sub
xchg
int
dec
int
mov
sub
push
and
mov
xlat
jo
xorl
dec
jmp
out
insl
mov
jne
imul
add
adc
int
ret
inc
inc
sbb
jns
push
jnp
add
in
adc
ret
cmpsb
inc
push
or
int3
push
cmpsb
loope
loope
xor
sub
mov
hlt
decb
xchg
dec
xor
das
push
dec
dec
loopne
and
lret
test
nop
sub
adc
imul
stc
imul
cmp
cwtl
in
pop
shrb
fisubs
sub
jno
add
add
pop
lds
repnz
push
cmp
xchg
xchg
mov
into
insb
dec
push
pop
mov
and
mov
jnp
pop
stos
mov
fisttps
sbb
aas
pop
es
sbb
or
push
rorl
jge
mov
adc
or
push
cli
movsb
repnz
ficomps
add
or
aad
pop
dec
or
cmp
into
jecxz
ja
add
sub
int
sti
in
adc
lahf
movsb
mov
les
cmp
cs
add
xchg
int3
jle
popa
xor
cs
xchg
sarb
sub
jl
mov
mov
lods
mov
ja
push
jae
clc
lahf
xor
or
xorl
sbb
pop
outsl
and
xchg
cmpsb
scas
std
imul
cmpl
out
in
sahf
jecxz
fsts
nop
shll
push
jl
cs
xor
and
sarw
out
outsl
adc
adc
sbb
jnp
xor
psllw
fs
mov
add
out
push
into
jecxz
in
inc
subl
and
clc
mov
xor
push
mov
testb
test
cmp
aas
arpl
xlat
push
jl
aad
cmp
out
jb
dec
or
mov
or
mov
mov
aam
fdivr
sbb
scas
mov
mov
sub
adc
test
mov
fldl
sub
cmp
adc
push
jp
mov
sub
je
adc
mull
test
push
out
mov
outsl
ja
mov
js
mov
test
mov
xor
inc
adc
pop
mov
pop
xchg
mov
test
data16
mov
repz
fstl
sti
xor
std
jne
mov
jge
aas
add
lcall
sbb
sbb
add
sbb
clc
mov
xor
leave
arpl
push
sti
dec
pop
add
ja
xor
cmp
mov
pop
ja
sbb
cmpl
mov
orb
push
je
sbb
cld
push
in
pop
sub
int3
cs
adc
rcll
addb
sbb
mov
rclb
bswap
push
inc
popf
push
ret
inc
add
pop
xchg
repnz
xor
jmp
rorb
mov
lods
dec
cmp
mov
movsw
mov
cmp
mov
sub
pop
jecxz
jo
bound
or
popa
jno
mov
pop
dec
sbb
push
data16
xorb
push
cltd
mov
jmp
cli
push
iret
leave
test
or
imul
dec
and
inc
repnz
loopne
shrl
ffreep
sbb
mov
leave
sbb
lahf
je
push
pop
sbb
test
sub
jnp
fldenv
in
aas
iret
movsl
xor
roll
jae
ret
sub
dec
sbbb
in
push
mov
pop
test
sub
mov
sub
mov
int
sub
jp
or
ss
sbb
sub
das
sbb
xorl
jecxz
inc
pop
xor
aaa
iret
cmp
mov
dec
les
xor
stc
dec
jle
dec
and
xchg
sub
ss
inc
imul
pop
fcompl
fisttps
mov
mov
adc
mov
sub
inc
jno
mov
pop
loopne
add
and
movntq
orb
lret
add
cmp
cs
or
pop
pop
cmp
mov
dec
cmp
mov
sub
xor
std
add
cmp
fnstenv
mov
into
jp
cli
mov
jo
es
enter
in
cs
les
jbe
sbb
cmp
and
dec
inc
insb
or
xchg
mov
jno
sbb
xlat
ljmp
aam
jns
sbb
in
cld
cmp
shlb
jae
xor
cwtl
cli
mov
in
cmpsl
and
mov
pop
mov
lods
xchg
nop
xor
fcmovbe
repz
or
sub
add
sbb
add
pop
lahf
mov
xchg
sti
das
mov
shrb
or
sub
daa
mov
movsb
or
mov
leave
push
push
fwait
jle
js
ljmp
sbb
cmp
out
add
or
insl
imul
and
or
mov
mov
add
mov
jns
enter
jmp
mov
mov
rclb
test
jns
aaa
dec
ret
fwait
jge
mov
cltd
or
into
or
test
sbb
bound
lds
jbe
aas
sub
imul
jecxz
push
push
jle
and
push
mov
insl
mov
aam
jmp
idiv
cmpsb
mov
outsb
fisttpl
xor
cmp
jmp
mov
inc
neg
add
add
testl
cmp
pusha
stos
xor
dec
fidivrl
dec
xor
dec
into
push
negl
jl
inc
sbb
rorl
push
test
push
sub
mov
xchg
pop
addl
mov
mov
sub
movsl
cmc
or
mov
vcvtdq2ps
ljmp
es
push
scas
sbb
adc
mov
cwtl
dec
jbe
and
xor
add
dec
inc
push
rclb
mov
xlat
pop
in
dec
icebp
fnstenv
pop
aas
imul
shrb
aas
xchg
enter
out
pop
push
and
jp
inc
dec
outsl
lods
shrb
sub
xchg
std
xchg
push
xlat
mov
int3
data16
mov
pop
or
cmp
lahf
and
sarl
aaa
push
fnstcw
jg
testl
aam
mov
les
push
cmpsb
cld
or
xor
test
pop
ds
idivl
fs
cld
dec
dec
and
ss
scas
aaa
subl
mov
sub
outsb
popf
mov
lea
or
sbb
call
push
dec
xchg
or
call
mov
pop
scas
xor
dec
xchg
sbb
cmp
adc
mov
xchg
mov
data16
lahf
test
pop
xchg
xchg
shll
xchg
push
or
addb
mov
or
sbb
mov
nop
repz
das
imul
arpl
out
xlat
fucomi
fwait
push
push
and
outsb
mov
lods
sahf
sub
mov
sbb
dec
outsl
dec
or
das
imul
hlt
rcr
ljmp
dec
popf
cmp
add
ret
pop
inc
cwtl
sub
rorb
xchg
mov
ret
push
stos
imul
fwait
ds
dec
in
popa
dec
xor
shlb
rep
jge
and
out
dec
or
mov
icebp
sbb
lds
sarl
and
sahf
adc
xchg
pop
imul
mov
gs
pusha
push
mov
mov
subl
and
pop
mov
sbb
ret
stos
out
adc
aaa
inc
sub
clc
adc
inc
out
sub
push
orl
outsl
mov
or
jle
negb
cwtl
mov
clc
cmp
call
test
cmpsl
mov
pop
pop
nop
mov
cmp
subb
xor
xchg
outsb
dec
fistps
pop
cmp
dec
aas
inc
pop
xlat
mov
adc
ds
js
inc
aad
dec
jno
iret
adc
divb
sbb
out
lea
or
ror
call
popf
jns
popf
xchg
lret
inc
push
adcl
aam
sub
popa
dec
cmp
and
xchg
add
fucomip
stc
shlb
nop
sub
xorl
sti
pop
adc
mov
push
jmp
xchg
xor
mov
adc
or
lea
sbbb
jmp
jg
inc
repnz
ljmp
push
incl
out
dec
mov
dec
iret
mov
addr16
out
mov
fdivrp
lock
and
fistpll
jbe
inc
shl
ret
test
cmc
pop
jnp
enter
sub
pop
mov
inc
ljmp
dec
dec
adc
cmp
pop
xchg
mov
mov
fcoms
pop
fs
ds
lds
imul
in
add
pop
or
push
sub
lret
repnz
ror
std
lods
repz
mov
stos
adc
cmpl
mov
mov
xlat
push
movl
pop
ds
or
in
sbb
in
mov
loop
mov
scas
addb
jno
push
imul
ja
inc
pop
aam
add
out
push
jne
xchg
scas
jle
or
arpl
imul
es
fadd
lods
adc
dec
arpl
dec
out
ss
out
cmp
xlat
mov
mov
xor
push
or
ret
lods
push
mov
jbe
jp
dec
or
jns
xor
out
bound
inc
stos
push
or
jnp
ljmp
push
add
add
pop
push
mov
fstl
ljmp
xchg
outsb
jecxz
mov
ret
stos
xor
imul
fstpl
jl
int
dec
int
imul
repnz
and
pusha
cmc
lret
sarb
orl
shlb
jne
push
loop
mov
jle
ljmp
sbb
mov
xor
or
filds
sbb
sub
pushl
inc
scas
adc
fsts
pavgw
cmp
lahf
jae
inc
pop
cmp
xchg
mov
mov
pushf
jl
mov
inc
mov
xor
testb
sub
dec
sti
pop
push
mov
push
jmp
rol
or
jno
dec
sub
das
and
jge
mov
repz
fisubrl
add
xor
push
insl
pusha
adc
je
xchg
mov
jns
adc
lods
xor
xor
inc
push
dec
lods
sarl
xchg
xor
push
xchg
mov
popa
aaa
mov
xchg
into
aas
pop
sub
add
addr16
pop
mov
div
cmp
movsl
into
lret
pop
push
shrb
xchg
test
stos
mov
test
scas
xchg
push
aaa
adc
mov
mov
jnp
daa
pusha
imul
adc
movsb
fucom
pop
out
mov
mov
push
das
mov
xor
mov
repz
dec
aaa
push
addl
mov
mov
fwait
mov
ret
cmpsb
cmpsb
inc
adc
sbb
cmc
pop
pop
add
sub
jo
sbb
jb
arpl
lret
push
fadds
shrb
or
cwtl
dec
das
repnz
inc
push
cmp
out
repnz
nop
imul
fwait
scas
leave
mov
outsl
mov
out
add
loop
sarb
stos
pushf
test
xchg
cmpsb
or
xchg
lods
sbb
push
and
hlt
out
pop
cmp
jno
repnz
lods
inc
adc
loopne
fs
in
pop
xor
or
hlt
popa
ficompl
push
push
pushf
and
sbb
or
dec
lea
fistl
pop
or
or
in
xor
cwtl
adc
dec
push
dec
shll
jmp
sbbl
or
mov
out
nop
fisubrs
leave
or
pop
sbbl
cmpsb
cmovno
push
mov
cmp
test
movsb
cmpb
sbb
xchg
mov
sbb
or
cmc
das
jnp
push
in
icebp
inc
mov
pop
dec
paddsb
pop
daa
push
inc
adc
repz
sti
ljmp
sti
clts
mov
loop
repnz
adc
push
adc
enter
fs
adc
aaa
fwait
in
fwait
dec
adc
push
ss
jo
bound
aam
inc
inc
pop
xor
test
and
push
dec
in
es
lods
popa
aas
cmc
mov
stc
test
enter
mov
pop
pop
cmp
movsl
inc
movsl
pop
in
push
mov
test
repnz
mov
xchg
dec
xchg
mov
add
stc
inc
xor
pop
pop
out
and
add
fdivrl
fildl
adc
test
lret
and
icebp
sbbl
pop
sahf
mov
fsubp
dec
lods
jbe
push
cmpsl
cli
mov
loopne
dec
out
loope
dec
mov
cld
repnz
cmp
loopne
jnp
pop
add
cmp
inc
mov
mov
mov
popf
mov
lds
push
mov
mov
fsubs
fwait
sbb
enter
lret
test
shll
movsl
call
pusha
int
cwtl
or
adc
rcll
lret
and
daa
lahf
mov
and
mov
mov
loop
dec
or
stos
movsb
mov
sti
dec
adc
pop
xchg
in
aam
repnz
sub
sbbl
jbe
jecxz
jp
sbb
stos
or
test
repz
in
pop
adc
rcl
xchg
lds
loopne
fists
push
cmpsl
movsl
cmpsl
cmp
pop
mov
int3
lods
pop
xchg
mov
icebp
xor
cmp
int3
sbb
enter
xchg
mov
cmc
inc
iret
pop
push
pushf
fdivl
nop
mov
add
pop
testl
adc
add
push
repnz
lea
aas
cli
aaa
scas
jge
mov
mov
mov
push
mov
mov
mov
fcom
lods
inc
xchg
mov
ret
push
data16
jmp
enter
push
stc
or
xchg
mov
movd
std
sbbb
dec
test
cld
movsb
xor
or
mov
fmull
mov
imul
lahf
fcom
lea
jno
ret
cmc
jbe
aam
sbb
mov
add
mov
push
xchg
cmpsl
ja
lret
sbb
or
std
testb
mov
sbb
cmp
add
push
std
enter
cmp
jns
jle
jae
fwait
int
inc
lret
xor
iret
or
fsubs
rorb
adc
sbb
out
jae
aam
xor
test
jae
into
pop
ja
insl
fidivrs
push
test
push
push
ljmp
call
mov
xor
std
mov
xchg
lcall
lds
int3
shl
and
insb
out
xor
dec
mov
adc
sbb
jb
mov
sub
fldl
repnz
leave
dec
fsts
out
dec
and
and
test
jmp
inc
add
jo
ljmp
sub
add
out
arpl
inc
dec
xlat
pop
pusha
xor
hlt
and
xchg
sbb
and
pop
test
inc
cmp
and
pop
aas
in
das
stos
adcb
gs
testl
push
jmp
adc
ret
xor
mov
and
in
jo
movsb
push
rolb
ljmp
push
lods
lret
cmp
fdivr
lods
leave
jge
nop
pusha
insb
hlt
sub
jb
fldt
cld
cltd
out
lcall
test
add
adc
inc
pop
pop
aaa
mov
js
imul
or
cmpsl
repnz
outsb
iret
lret
call
je
mov
ja
sbb
test
shrb
je
inc
jmp
push
mov
pop
stc
faddl
push
mov
add
add
sub
sti
or
repz
cmp
mov
int
xor
mov
insb
xchg
ja
sub
hlt
fmul
pop
jp
nop
test
imul
loop
scas
pop
aad
mull
cwtl
outsb
out
push
cli
daa
xchg
sbb
outsl
not
mov
stos
pop
fimuls
insl
mov
shlb
cld
sub
cltd
cmp
mov
pop
xchg
imul
mov
add
jmp
pusha
loopne
fs
push
xchg
repz
add
int
repnz
add
inc
cmp
sahf
jecxz
xchg
outsl
pop
sbb
in
data16
lret
xchg
mov
cli
out
push
popf
xor
loope
enter
cmp
aas
fsts
insl
popf
mov
dec
mov
push
cmpsl
xor
sbb
and
das
decl
insl
hlt
or
and
or
and
or
filds
push
xor
xchg
mov
pop
add
and
pusha
push
cmpsl
dec
jl
xchg
jecxz
xor
rcl
adc
out
xchg
aas
mov
enter
sbb
shl
dec
or
pop
push
mov
outsb
hlt
mov
iret
inc
sub
aaa
mov
sub
mov
js
dec
shlb
jl
cmp
add
outsl
sub
mov
xchg
popf
cmpsl
adc
pop
lret
inc
dec
mov
aad
mov
sbb
clc
lahf
cmp
cmpsb
fs
xor
or
mov
out
das
outsb
inc
lret
push
mov
lret
xchg
pop
popf
or
pop
js
push
jp
mov
xlat
mov
scas
cmp
lock
mov
ja
or
ficomps
mov
fdivrs
inc
jp
push
mov
sub
push
lahf
movsl
sub
add
clc
mov
xor
leave
xor
pop
movaps
das
mov
scas
adc
cmpsb
jl
sub
push
pop
mov
mov
mov
cmp
test
test
jne
add
dec
mov
add
in
mov
jge
adc
xor
out
cmp
push
xchg
cld
mov
sarl
bound
lret
pop
into
jb
jmp
les
dec
adc
cmp
sbb
push
cmp
xor
cmpsl
out
cmpsb
testl
jl
mov
mov
xchg
sbb
stos
daa
push
testl
inc
mov
lret
movsb
mov
jge
mov
mov
flds
cmp
lret
pop
cltd
pop
mov
insb
pop
fdivrs
daa
sub
fbstp
dec
stc
lret
pop
dec
imul
adc
xor
fldt
leave
push
or
jbe
sbb
popa
dec
mov
jo
shrb
int
sub
pop
pushf
jl
lock
sarb
push
in
cmp
fbld
mov
mov
xchg
test
xor
mov
cmc
shl
in
mov
mov
testb
ljmp
dec
sahf
into
and
insl
dec
mov
cmp
xchg
fiadds
ficomps
cmp
adc
sahf
pop
loop
mov
std
cmp
stos
dec
pusha
ja
cmpsb
xchg
push
fldcw
mov
push
stos
inc
js
push
arpl
out
push
popf
cmp
mov
adc
imul
add
xor
sbb
inc
sub
mov
or
cld
sahf
push
xchg
out
inc
mov
xchg
cli
push
inc
aaa
enter
mov
push
mov
sbb
aad
inc
pop
stos
into
sti
ja
push
repz
mov
js
dec
pop
test
jns
lret
loopne
popa
test
scas
ficoml
sbbb
push
cltd
jge
jecxz
call
sbb
iret
mov
jnp
mov
mov
popf
loope
jg
mov
push
inc
adc
jg
insl
aad
in
mov
add
clc
into
adc
ss
aas
push
xor
xor
addl
in
xchg
into
mov
jl
cmp
pop
nop
aas
cmpsl
enter
push
lods
fildl
je
rorl
les
out
fdivl
test
or
enter
add
push
lea
lock
js
test
leave
fistps
in
xchg
push
xchg
cmc
mov
jp
lahf
lods
add
jle
pop
or
int
aas
shll
idiv
das
jns
cltd
or
out
xor
pop
mov
outsl
mov
in
xor
lds
add
repnz
cmpsl
int3
xor
inc
xchg
mov
in
jle
xorl
in
mov
mov
popa
into
je
dec
icebp
pusha
add
mov
dec
sub
adc
fs
ds
adc
xor
mov
xchg
mov
xchg
push
inc
cmp
jnp
ja
and
xlat
ret
jl
sub
inc
sub
xor
xor
clc
jns
jecxz
sub
imul
push
xor
inc
add
pop
push
orb
fisttps
mov
mov
icebp
mov
and
dec
out
imul
xchg
mov
loop
dec
inc
push
xchg
test
les
fucomp
out
push
lods
out
aad
pop
rcrb
insb
inc
ja
or
fsubl
stos
test
or
data16
dec
lahf
addr16
and
lods
and
imul
clc
pop
cmp
insb
dec
popa
mov
push
dec
ss
ds
mov
xchg
jae
aam
push
cmp
ja
cld
adc
ret
mov
outsb
jmp
mov
roll
ret
mov
dec
pop
jnp,pn
std
xchg
xchg
sbb
aaa
mov
repnz
jmp
lcall
cwtl
jmp
jno
lea
jno
fnstsw
std
mov
inc
xchg
insl
or
adc
int3
mov
push
xchg
cmp
stos
and
shlb
fadd
daa
jl
shr
sub
jecxz
sahf
push
inc
mov
inc
mov
add
xchg
push
xchg
incb
int
jmp
mov
add
mov
shlb
jg
xor
lahf
xchg
sti
rclb
xchg
mov
pop
and
sahf
out
cli
pusha
out
cmp
inc
adc
jmp
jg
in
lds
mov
push
mov
js
and
or
xchg
dec
mov
cmp
daa
cs
lods
sub
lahf
cmp
fs
loop
cmp
flds
lahf
cmp
mov
aam
flds
sbb
imull
jecxz
or
in
test
and
push
adc
loopne
nop
cwtl
cld
js
jp
pop
aas
cmp
cmp
push
mov
insl
ja
adc
rorb
cld
mov
add
ret
push
sarb
mov
lret
std
mov
insl
jns
push
jnp
inc
add
mov
cmc
fisubrl
and
sub
fwait
mov
aam
cld
jg
insb
mov
mov
cli
roll
scas
rcr
mov
popf
mov
mov
aad
stos
xchg
mov
inc
cmp
push
xchg
jmp
and
fs
cmp
xchg
mov
arpl
xchg
je
pop
addl
xchg
mov
and
leave
mov
fsub
fidivl
sub
addr16
test
movsl
stc
dec
sbb
cmp
loopne
mov
nop
pop
mov
test
pop
jmp
sbb
mov
aad
inc
cmpsb
inc
fnsave
mov
sub
lds
imul
leave
add
adc
jg,pn
rclb
ss
call
fimuls
mov
cwtl
gs
jg
add
jl
enter
mov
popa
push
in
test
inc
mov
cmp
dec
and
lods
clc
rcr
mov
dec
add
mov
fdivrs
sbb
push
jnp
dec
stos
call
pop
fs
mov
xor
xchg
mov
jo
in
sbb
sbb
pop
jb
cltd
out
mov
lock
mov
in
andl
sar
or
xor
pop
xchg
imul
jge
mov
sbb
push
inc
push
dec
mov
ljmp
pop
pushf
outsb
lods
mov
mov
int
xor
pop
cld
scas
stc
lea
pop
sub
jge
adc
sahf
jmp
push
ljmp
imul
add
fmuls
fimuls
jns
pop
cmp
mov
cmpsl
push
pop
xchg
jbe
sahf
mov
fcoms
inc
push
and
fbld
pop
pop
inc
clc
pop
js
inc
test
dec
aaa
mov
aaa
jb
into
push
jle
cmpb
mov
dec
fsubrl
add
push
jbe
stos
lahf
dec
mov
ret
rorl
jmp
lock
sbb
mov
xchg
add
inc
dec
ljmp
lock
sub
mov
or
jo
mov
mov
icebp
sbb
insb
mov
adc
int
push
not
xor
loop
cmpb
ja
sub
xor
pop
into
out
xorl
dec
push
out
loopne
mov
shrb
lret
pop
fists
push
and
imul
pop
decl
pop
dec
iret
scas
sub
lds
jp
loop
mov
cwtl
sets
mov
sub
cmp
pop
cmp
push
lods
leave
daa
aas
outsl
pop
pop
xor
xor
pop
or
jb
inc
mov
xlat
cmp
std
insl
sub
adc
sti
imul
mov
ss
lret
lret
mov
pop
dec
pop
clc
lds
imul
mov
dec
xchg
sbb
lods
mov
ds
aad
int3
mov
imul
push
inc
cmp
cmp
jb
ss
adc
imul
lea
clc
pop
bound
cmp
push
add
or
push
dec
lcall
pop
andb
stos
int
xchg
movsl
mov
xchg
ds
push
int3
lret
xchg
dec
sub
push
lcall
lcall
mov
inc
mov
xchg
pop
fadds
inc
mov
dec
jb
insb
repz
and
insb
lds
in
adc
je
test
ja
sbb
and
adc
mov
lods
xchg
into
dec
xchg
shlb
dec
stc
pushf
enter
inc
outsl
dec
loopne
ds
add
sahf
mov
aas
mov
and
ljmp
addr16
sbb
cmp
movsw
xchg
int
loope
inc
mov
fdivl
pop
insb
rorb
push
adc
out
push
in
movsl
aas
mov
daa
mov
push
pop
inc
xchg
es
push
pusha
mov
fidivl
hlt
shlb
jbe
pop
adc
inc
aad
popa
and
scas
xchg
jge
test
pop
fsts
cmpsb
lods
pop
faddl
inc
daa
je
shll
sub
mov
out
lods
fucomp
mov
icebp
xchg
sahf
pushl
scas
sbb
mov
daa
push
inc
cmp
cli
int3
rclb
jo
fisubl
mov
mov
sub
or
dec
mov
hlt
push
repnz
test
sub
cmovns
scas
lock
push
popf
ss
loope
mov
or
leave
or
repnz
push
dec
cld
lret
xchg
into
inc
jle
stos
loope
xlat
or
movsl
inc
push
mov
inc
cmp
out
mov
xchg
roll
xchg
in
aas
popa
mov
lahf
rcrb
arpl
int3
dec
out
ss
xchg
xor
jg
sbb
sbb
aam
ljmp
jl
mov
pop
loopne
in
fdivrl
cmp
sbb
dec
and
shl
shlb
fcomp
mov
in
mov
dec
adc
imul
or
xchg
fldt
stos
stc
test
adc
or
test
icebp
inc
add
jae
bound
push
mov
lcall
sar
push
call
in
sti
dec
daa
and
out
lods
ret
scas
pop
in
xchg
pusha
xchg
mov
imul
fistpl
pop
or
orl
scas
mov
lret
mov
dec
dec
es
dec
icebp
rorl
and
pusha
mov
mov
je
ss
push
and
lret
popa
jb
add
jb
mov
mov
jmp
cli
out
fimull
xchg
lock
je
aas
out
es
jge
int
addr16
leave
lea
mov
xchg
and
mov
popa
cmp
sub
adc
jne
jo
mov
into
lods
mov
ss
fnstenv
sbb
add
jmp
jno
je
cmp
cmp
xor
ljmp
sub
jge
insb
sbb
test
mov
fwait
push
fwait
shll
pusha
xor
xor
xchg
test
mov
fnsave
xchg
adc
or
cmp
mov
push
and
roll
mov
leave
push
and
push
fisubs
jae
lret
leave
in
mov
sbbl
xchg
cmpl
pop
push
icebp
in
std
pop
and
xlat
mov
and
js
push
or
mov
daa
lcall
aaa
push
out
test
lret
or
jecxz
negb
ret
xchg
xor
pop
sahf
xlat
faddl
stos
and
insb
push
icebp
imull
lret
mov
popa
xchg
dec
xchg
adc
mov
or
adc
push
and
mov
or
sub
mov
rclb
test
clc
dec
fwait
rcr
jns
aas
neg
imul
out
daa
lret
mov
ficomps
xchg
dec
bound
arpl
jmp
pop
jg
jno
xchg
dec
add
and
push
add
cmp
inc
fs
adcb
in
cld
sbb
leave
and
sub
ret
inc
lret
sbb
mov
loop
push
lea
test
daa
sti
xlat
mov
mov
pushf
sbb
insb
xchg
cmpsb
int3
insb
hlt
jo
loope
pop
popa
pusha
and
push
jl
or
mov
addb
push
adc
xchg
stos
cs
sbb
test
pop
in
cmp
repnz
fimuls
lret
les
mov
or
and
enter
xchg
repz
popa
or
in
mov
ret
dec
fidivl
adc
dec
push
mov
adc
fadd
pop
mov
lods
test
push
xchg
add
test
xlat
xchg
lret
cmp
add
sub
and
mov
test
push
or
mov
shll
mov
ret
aad
aaa
inc
sti
and
mov
scas
sub
scas
cli
call
push
add
fidivrl
xor
sbb
fdivp
push
mov
test
hlt
mov
xchg
bound
mov
aad
or
arpl
or
sub
xlat
jbe
inc
pop
dec
inc
in
jg
mov
incl
in
or
push
cld
loopne
popf
pop
fadds
sti
test
dec
cwtl
jp
fiaddl
pop
xor
cmpsb
jae
dec
sahf
and
ja
and
sub
push
push
nop
jmp
inc
adc
pop
jno
stos
ljmp
out
repnz
es
push
jg
std
add
outsl
ja
jp
rorb
jle
popa
pop
fisubrs
in
insl
scas
mov
jno
mov
jns
or
inc
fnsave
aaa
es
aas
sar
xchg
mov
rcrl
insl
jecxz
das
adc
mov
mov
data16
sub
xor
cmp
cmp
or
push
scas
xchg
cmp
mov
mov
xchg
jge
pop
pusha
lahf
mov
sbb
mov
cmc
dec
sbb
pop
and
jmp
bound
insl
jge
pop
imul
imul
or
push
fists
mov
lea
cmp
adc
cmpsb
clc
ret
or
stos
rorb
movb
icebp
lahf
das
dec
pushf
inc
lea
movsl
je
dec
pop
mov
adc
mov
adc
lds
push
push
arpl
jmp
xchg
sub
rep
mov
push
addr16
loop
mov
jo
inc
outsl
add
inc
xchg
insb
lcall
add
sahf
or
loop
or
dec
insb
xor
cmp
jae
or
ja
int
mov
add
sub
or
sub
push
sub
mov
cld
arpl
mov
mov
out
mov
sbb
dec
and
or
sarl
ja
mov
mov
popf
and
add
data16
or
or
lds
mov
ds
adc
mov
pop
cmp
mov
lret
or
arpl
movsb
mov
add
es
push
adc
rol
out
aad
mov
rcrl
int
aaa
enter
testl
pushf
jge
lock
das
pop
lret
push
andb
sarl
and
dec
mov
push
rclb
pop
mov
in
mov
test
sub
cmp
les
dec
mov
rclb
out
push
out
scas
aad
leave
ret
xor
xor
test
imul
idiv
fldt
aas
mov
cmpsl
out
movsl
xor
sub
fimuls
icebp
scas
pop
inc
fwait
sbbb
mov
push
xlat
dec
orb
repz
pop
lret
push
sahf
aad
mov
fwait
sbb
iret
rolb
dec
mov
jmp
inc
outsb
pop
sub
cmp
dec
add
stos
insb
adc
jg
xchg
push
jge
adc
pop
adc
pop
inc
xor
loop
adc
lahf
pop
lar
sub
in
mov
cli
jg
pop
mov
pop
stos
fld
and
lds
cmp
cli
lea
arpl
pop
sub
xchg
dec
or
dec
mov
arpl
test
ret
push
pop
pushf
into
add
cmp
fidivl
aaa
inc
add
mov
scas
pop
jnp
mov
cmp
dec
jl
pop
xor
sbb
mov
test
pusha
push
or
inc
out
cmp
sbb
dec
enter
fnstsw
dec
mov
pop
dec
shr
std
dec
mov
sbb
pop
jnp
pop
jl
rorl
pop
cmc
pop
mov
jne
lods
dec
lea
push
cmp
xor
cmp
xor
xor
pop
in
add
popa
push
pusha
push
mov
addl
xchg
jg
inc
andl
xchg
push
ljmp
cmpsb
jbe
mov
fisttps
jns
cltd
lret
int3
pop
pop
push
popf
notl
xchg
jge
out
or
push
nop
add
inc
scas
lret
fisubrs
inc
jge
jns
test
pop
lret
or
dec
neg
icebp
push
pusha
fdivrs
sahf
and
jmp
jo
movsb
pop
insl
jl
mov
jp
pushf
push
sub
or
cld
xchg
and
and
sub
enter
cli
push
sub
fimuls
xchg
sub
int
jge
jno
jg
fstpl
push
stc
sub
sbb
pop
ficoml
push
pop
dec
faddp
repz
mov
mov
pop
adc
lcall
push
ja
rclb
es
dec
or
cmp
xor
into
clc
cltd
lods
sarb
cmp
daa
sbb
out
mov
mov
lock
jo
fldcw
fbstp
sbb
fmuls
pop
ret
rclb
stos
sbb
inc
daa
rcrb
push
jno
dec
inc
orl
push
cmp
push
xor
cmp
mov
push
sub
outsb
mov
imul
stos
rcr
sub
mov
scas
sahf
in
lds
ret
arpl
jae
shlb
jnp
sbb
mov
jp
jb
movsb
jl
xchg
or
sahf
scas
push
test
mov
getsec
mov
and
mov
into
xchg
mov
test
jecxz
sbb
jle
pop
mov
adc
adc
dec
mov
pusha
in
mov
jnp
pushf
jbe
je
xchg
js
sbb
cmp
pop
pushf
fmull
aam
mov
pop
pop
xchg
in
adc
add
sub
hlt
xchg
lock
inc
xchg
and
arpl
stos
rcrb
or
add
or
ja
loope
lret
push
lds
sti
lret
adc
push
xor
jmp
xchg
or
inc
int3
mov
std
insl
orb
aaa
pop
push
data16
imul
fldenv
aam
mov
sti
fistpl
jno
scas
mov
imul
jle
mov
xor
test
jnp
xor
lcall
aad
jne
mov
xchg
mov
push
sub
dec
test
push
popa
mov
mov
lods
mov
aam
mov
xlat
out
sub
mov
fildl
mov
mov
gs
into
pop
das
lret
je
incl
and
or
into
push
pop
cmp
or
inc
mov
jge
repnz
pop
fiadds
das
cltd
je
cmp
push
mov
and
lret
shlb
and
adcl
inc
jecxz
mov
sub
dec
sbb
test
and
scas
push
imulb
adc
sub
sub
xchg
add
sub
ja
xchg
fstpt
lods
jb
pop
push
xchg
xor
mov
push
cmp
add
insb
jo
out
mov
in
pop
inc
pop
mov
inc
push
loopne
fildll
inc
sbb
fbstp
lods
test
mov
push
icebp
mul
pop
rolb
fdivrl
cmp
inc
jg
test
sub
push
sbb
mov
dec
mov
xor
insl
adc
inc
outsl
or
je
in
inc
ret
xchg
mov
or
lret
push
lods
test
ds
ja
mov
sti
or
fdivrl
add
jno
adc
stc
xlat
adcb
ss
inc
in
inc
cmp
aas
out
jg
inc
divl
test
cmc
cmp
sbb
add
inc
out
mov
test
cltd
orl
xor
mov
mov
ljmp
dec
loope
int3
fcomps
testl
mov
imull
outsb
jl
sbb
stc
pop
jecxz
xor
mov
pop
js
mov
adc
mov
fs
mov
in
jbe,pn
mov
std
add
arpl
push
push
mov
sti
int3
call
aas
ds
je
dec
in
ljmp
mov
push
inc
xor
jno
push
and
out
lock
test
xchg
mov
push
adc
sbb
test
add
test
xchg
lcall
outsl
sub
cmp
mov
jp
inc
clc
je
jo
mov
arpl
out
popa
rorl
xchg
jecxz
and
jg
pop
sub
xor
lods
enter
sbb
aaa
sbb
roll
out
decl
pop
not
add
pop
leave
xor
mov
jne
pop
xchg
push
ret
adc
pop
cwtl
leave
mov
ret
sub
test
cs
ja
insb
push
hlt
es
scas
fsts
xchg
mov
mov
xor
pop
mov
call
push
sub
leave
popf
sub
scas
xor
cli
daa
out
arpl
in
lahf
dec
mov
loopne
cli
mov
sub
or
push
dec
rcrl
xor
sub
inc
test
add
mov
fdivr
in
add
cmove
dec
xor
jo
gs
cmp
stos
aam
jg
int
dec
test
stos
xchg
push
arpl
lcall
movsb
insl
fwait
jae
ljmp
pop
in
push
dec
dec
mov
in
pop
add
vmread
mov
js
hlt
lds
mov
adc
es
aas
pusha
ds
add
pop
sbb
cli
iret
mov
out
fmul
xchg
dec
fisubrs
cwtl
leave
roll
fstl
rolb
or
mov
mov
int
and
xchg
inc
fists
loop
jbe
out
inc
sub
mov
nop
pusha
mov
flds
loope
push
xor
sub
and
add
fidivrs
and
fisubs
lahf
stos
cmp
movsb
mov
xchg
xor
push
aaa
clc
popf
or
pop
inc
imul
call
iret
movsb
data16
stc
je
cmp
push
cmc
outsb
push
dec
jbe
ret
out
addb
aad
xchg
les
pop
in
xor
stos
sub
or
ficompl
cwtl
jmp
sbb
icebp
in
jb
mov
or
sbb
int
cmc
jno
mov
mov
in
sub
cltd
jle
pop
adc
nop
push
lods
dec
push
fs
xor
inc
clc
inc
imul
lcall
sarl
dec
je
test
add
je
mov
cwtl
add
lahf
fiaddl
mov
into
out
enter
mov
sub
aas
sub
mov
xor
xlat
arpl
sti
inc
pop
int
in
cmc
out
out
loope
mov
fisubrl
pop
out
je
push
out
out
test
test
or
enter
xchg
jmp
ret
test
inc
mov
pop
sbb
xchg
inc
adc
fisttpll
das
movsb
testb
adc
arpl
test
and
sahf
lods
icebp
sub
and
pop
pop
or
dec
data16
mov
lds
pop
fisubrl
adc
movups
cld
mov
out
add
jne
adc
xchg
aas
push
int
ret
insb
jno
inc
add
into
rclb
movsl
pop
mov
roll
sub
jmp
jno
ret
ds
xor
xor
test
outsb
push
adc
jne
movsb
mov
outsb
push
inc
push
xchg
shlb
fisttpll
xchg
xchg
sbb
int
mov
and
pop
sbb
dec
sarb
mov
mov
xchg
das
adc
mov
cmp
in
jp
or
fwait
out
dec
cmpsl
jl
push
or
push
add
jl
sbb
push
repz
and
adc
out
mov
mov
clc
xlat
adc
push
or
add
jge
cs
int3
es
packsswb
lds
addr16
jno
sub
xchg
sbb
xchg
and
sub
pop
xchg
push
mov
outsl
mov
adc
push
lcall
pop
fsubrl
pop
mov
pop
xlat
mov
sbb
mov
add
push
cmp
rorl
inc
dec
cmp
sbb
add
icebp
fwait
out
sub
mov
fbld
sbb
inc
lcall
cltd
cltd
mov
scas
ret
ret
xchg
movsl
pop
push
cwtl
xchg
lods
cmp
jns
adc
movsb
nop
mov
adc
and
mul
or
outsl
sub
and
add
shr
pop
lret
adc
dec
fsubp
sbb
jo
mov
jae
mov
insl
out
lahf
push
sbb
pop
int
out
inc
test
dec
aas
xor
mov
add
cmp
cld
insb
xor
bound
popf
mov
fcompl
xchg
je
cmc
xor
lret
and
adcl
sub
popf
in
cltd
push
push
push
incb
sub
nop
outsb
sub
imul
sahf
bound
xor
imul
or
loopne
or
scas
mov
push
or
repz
mov
jno
pop
sbb
xlat
adc
mov
xchg
mov
inc
lea
and
and
push
addl
add
popf
imull
mov
inc
mov
push
out
in
pop
sub
jg
jbe
mov
ss
jae
mov
arpl
rcll
pop
or
xchg
add
mov
inc
aas
jo
add
push
push
arpl
sbb
jl
sub
jns
mov
inc
int3
add
jmp
fwait
adc
or
jbe
or
std
and
and
inc
fstl
sub
pushf
call
insb
adc
dec
sub
dec
xchg
insl
imul
mov
xchg
jo
or
int
lret
dec
cmpsb
pop
std
sub
scas
inc
push
or
scas
loop
fldt
sbb
insl
mov
xor
mov
ret
mov
xchg
and
cltd
jecxz
adc
aaa
mov
in
out
test
clc
mov
cmp
pop
mov
cli
cmp
loopne
or
mov
and
sti
mov
pop
push
punpckldq
adc
sbb
mov
cmpsl
jle
xchg
sbb
mov
xchg
icebp
xchg
cmp
cmp
fsubs
ljmp
sub
add
fstpt
sbb
dec
leave
sarb
movsl
sub
loopne
insl
mov
push
arpl
jb
sub
dec
sub
sub
jne
or
jl
movntq
in
xchg
sbb
rorl
divl
mov
shlb
ljmp
mov
insb
push
shll
fisttpl
mov
or
xor
xor
cmp
adc
insb
cmp
lock
int3
loopne
mov
adc
leave
mov
outsl
inc
sub
adc
push
inc
icebp
jns
out
push
aaa
je
je
mov
lret
jmp
in
or
movsb
retw
lds
repnz
cs
sahf
adc
filds
fists
jle
lahf
mov
mov
sbb
in
sub
movlps
inc
add
adc
orb
sti
aaa
movsb
stc
in
sbb
in
fsubrl
xor
rorb
add
out
jmp
jl
int3
mov
mov
xchg
in
xlat
or
cmp
rclb
adc
mov
dec
push
cmp
xor
stc
push
push
les
rorl
pushf
adc
xchg
xchg
push
jl
mov
adc
shr
leave
addr16
pop
call
test
and
xorl
dec
addb
pushf
inc
rclb
popa
add
mov
cmp
aaa
ret
insl
mov
addb
cmp
cmp
movl
outsb
in
adc
lods
data16
pop
leave
cmc
rorl
add
js
xchg
cmp
push
es
dec
xor
or
dec
dec
repnz
mov
cs
mov
push
mov
scas
dec
xorb
shrl
and
fcomi
cwtl
add
and
sbbb
andb
add
cltd
mov
test
push
inc
pop
xchg
xlat
fstps
stos
arpl
loope
adc
std
ljmp
dec
insl
cmp
jmp
lods
cmpsl
loop
cwtl
lahf
into
test
pop
lahf
dec
int
mov
cltd
dec
jnp
sbb
mov
jmp
and
push
push
jg
adc
js
mov
stos
sub
in
jne
inc
and
fdivl
popf
pop
jne
inc
daa
pop
jns
in
xchg
in
fimull
jb
outsb
repz
popa
sti
mov
inc
orl
ljmp
shll
xor
xchg
lock
or
mov
test
add
xor
and
loop
push
cmp
cmc
mov
mov
pop
jg
cmp
jge
pop
arpl
xchg
sub
xchg
loopne
pop
cmc
data16
cmp
mov
inc
adc
cltd
stos
outsl
mov
clc
dec
jae
xchg
adc
inc
cmp
push
ret
mov
add
loop
es
repnz
clc
and
mov
inc
inc
ds
cmp
dec
mov
repnz
dec
dec
sbb
inc
sbb
int
nop
and
pop
pop
in
pop
pop
sub
mov
jecxz
xorl
popf
push
jle
sbb
and
arpl
imul
xor
push
leave
and
stos
les
sub
sub
and
xchg
cmp
dec
mov
or
inc
mov
inc
xchg
cmp
inc
add
pop
sub
stc
pop
ret
into
mov
test
es
pop
lcall
adc
gs
icebp
and
sub
icebp
xchg
push
xchg
mov
insb
mov
mov
mov
orl
push
mov
test
sbb
add
or
sbb
or
cmpl
mov
mov
cld
add
sub
mov
addr16
xor
fists
lock
fmull
and
leave
imul
push
push
adcl
mov
loop
mov
mov
sub
cmp
inc
xchg
add
sub
fistps
push
cmpsl
xlat
cmp
jg
push
cmc
cmpsb
mov
int3
cmpsl
pop
adc
jecxz
lret
pop
and
rcrb
adc
add
xchg
popa
or
push
test
notb
test
cmc
sub
mov
pop
das
inc
and
lods
lret
xlat
jg
mul
ret
fbstp
pop
sahf
int
jmp
lret
fstp
cwtl
js
push
scas
pop
sahf
rorb
out
cmpsl
push
in
dec
test
cmp
imul
sbb
pop
xchg
push
pop
cmc
sbb
push
xor
push
xchg
cli
inc
push
dec
xchg
mov
or
mov
push
fcoms
test
mov
in
pop
push
jnp
push
imull
popa
pop
pop
sbb
test
mov
test
push
mov
dec
pop
out
insb
jae
and
sahf
test
sbb
scas
mov
std
pop
loopne
mov
mov
popf
fnstenv
aad
mov
in
jne
and
test
push
lods
das
insl
lea
mov
dec
xchg
jmp
sti
jmp
testb
xchg
out
ljmp
in
int
jbe
mov
jb
ret
gs
arpl
ret
jno
dec
enter
add
test
cmp
ljmp
test
les
outsb
lahf
lret
out
xor
jmp
es
cli
mov
add
mov
das
loope
fucomip
testb
mov
mov
pop
lret
add
dec
testb
insl
bound
mov
repnz
andl
cmpl
adc
dec
xor
xlat
mov
dec
sub
lret
mov
loopne
dec
mov
jns
xor
mov
das
orl
popa
push
xchg
popf
inc
pushf
cld
iret
dec
nop
mov
pop
fdivrs
push
sbb
loopne
xor
sahf
xlat
cmp
sub
mov
lea
aam
inc
leave
mov
jl
fwait
xchg
xchg
inc
and
int
call
inc
cmpsb
jmp
shrl
repz
sub
bound
inc
shl
xchg
dec
dec
fdivs
insl
sbb
pop
mov
pop
inc
cmpsl
xor
in
jg
mov
xchg
pop
inc
insb
in
adc
addr16
sahf
push
int3
popf
shlb
out
push
xchg
cs
fucomip
and
pop
je
and
jle
inc
add
popa
xor
stos
pop
mov
adc
int3
cwtl
push
cmpsl
cld
cltd
cmp
mov
mov
sub
mov
mov
inc
hlt
push
xor
pop
xchg
pushaw
mov
pushf
aad
lods
cs
icebp
mov
fmull
jp
pop
in
or
jbe
repz
lods
das
leave
pop
xor
mov
imul
loopne
mov
jo
mov
stos
das
inc
mov
add
mov
adc
and
push
mov
xchg
ss
mov
fists
adc
jle
icebp
imul
repz
xchg
pop
rcrb
mov
push
fistpll
inc
mov
cmp
mov
cmp
mov
stos
adc
lahf
inc
mov
pop
ret
scas
shlb
adc
mov
mov
ljmp
mov
dec
movsl
jle
testb
xor
imul
xchg
lods
je
enter
xchg
adc
and
or
out
or
and
fucomip
scas
or
mov
add
mov
ret
mull
orb
test
mov
adc
sub
outsl
flds
cmpsl
cwtl
in
pop
sbb
std
jecxz
out
movsl
mov
imul
clc
mov
adc
and
xchg
andl
imul
jno
popf
push
js
cli
mov
pop
mov
adc
or
cli
sub
mov
ljmp
fiaddl
test
jg
push
inc
sub
add
pop
jns
in
pop
inc
lock
rol
sub
xor
push
or
fsubrl
cmp
lret
outsl
ss
push
cmp
js
pop
cmpsl
mov
ret
sub
arpl
push
mov
cli
cltd
sub
xchg
add
adc
push
xor
int
add
xchg
idivl
daa
movsl
mov
pop
push
pop
sbb
mov
fstl
leave
jno
addr16
incb
mov
inc
cwtl
or
adc
mov
xchg
sub
jmp
std
sbbb
fmull
sbb
pop
xor
lds
sbb
xchg
cwtl
push
pushl
pop
pop
movsb
sbb
nop
dec
fcmove
push
das
ljmp
sbb
mov
adc
xor
xchg
xchg
inc
cli
imul
or
mov
mov
popa
ds
les
dec
les
adc
rorb
add
loop
add
out
push
mov
scas
std
pop
sub
xchg
mov
inc
aas
imul
xchg
clc
mov
aad
in
cmpsb
insl
inc
or
ror
or
fcmovbe
xor
imul
icebp
test
test
in
lods
mov
sbb
cmp
fnstsw
add
sub
xchg
sbb
leave
icebp
sub
lcall
movsb
pop
in
stos
insb
icebp
mov
dec
jae
push
hlt
ret
fcom
out
shlb
jbe
xorb
or
sti
iret
ljmp
xchg
lock
int3
scas
sti
xchg
xchg
mov
fs
pop
cmp
imul
push
loopne
adc
cmp
push
push
popa
xor
insl
push
fsubl
xor
xchg
inc
pop
lods
pop
push
xor
push
mov
outsb
adc
mov
sahf
dec
or
rol
es
adc
jb
xchg
mov
push
xor
jle
lds
popf
loop
inc
repnz
in
imul
jp
test
mov
mov
xchg
repnz
add
jmp
jecxz
outsb
or
call
in
rep
xor
sub
loopne
add
inc
test
mov
aam
push
sub
push
sub
mov
xor
ljmp
jmp
andl
dec
add
mov
push
repnz
adc
mov
repnz
and
lret
xchg
pop
cwtl
movsb
and
sti
mov
xchg
dec
cmp
and
adc
and
out
imul
mov
sbb
push
xor
push
mov
cmp
xchg
fwait
scas
mov
add
xchg
bound
repz
movsl
sbbl
sub
addr16
mov
fnstenv
ret
push
clc
mov
nop
cmp
imul
cmpsb
aam
pop
jne
pop
loopne
cmpsl
jbe
adc
icebp
inc
and
dec
lahf
xchg
mov
and
and
mov
pop
or
or
and
jnp
icebp
jl
and
scas
sub
jns
ja
and
cmp
mov
scas
test
push
imul
adc
and
add
mull
out
adc
jo
idivl
outsl
out
in
sti
call
rcrl
adc
popa
xlat
mov
dec
xchg
xchg
dec
scas
push
sub
mov
lret
cltd
jae
push
or
mov
adc
test
and
jge
aad
lret
test
lret
xchg
cmp
call
fisubrl
and
loop
pop
lock
cwtl
or
mov
mov
not
or
int
in
pop
das
movsl
std
gs
dec
cmp
negl
xor
xchg
sub
fs
push
dec
lock
jns
adc
mov
mull
mov
jae
pop
call
dec
pop
mov
int
insb
sub
dec
xor
mov
adc
mov
cmp
pop
jl
rcrl
jl
sub
cmpsb
mov
jns
mov
testb
push
fldcw
sarl
jle
mov
jo
or
movsb
call
lods
push
cmp
outsl
stc
clc
cmp
jbe
add
iret
add
nop
dec
sub
sahf
repz
jae
mov
jne
mov
cmp
lds
mov
mov
outsl
mov
fisttpll
fdivrl
clc
inc
cmpsb
shlb
loopne
aam
dec
shrl
add
mov
jl
push
stos
mov
out
cmpsl
clc
loop
movsl
mov
pop
push
xchg
xchg
pop
in
out
idiv
lock
jno
sbb
outsl
jecxz
aaa
inc
xchg
sbb
rolb
pusha
pop
ret
js
pop
xchg
sbb
adc
ds
adc
pusha
movzwl
cmp
scas
pop
shll
adc
cmp
sub
pop
pop
lea
jb
sarb
and
es
mov
addr16
cmc
sti
pushf
ja
jb
ret
pop
dec
mov
lds
push
adc
sbb
or
jns
lcall
push
jmp
stos
mov
pop
in
imul
mulb
stc
cmp
inc
movb
lret
or
lods
andl
enter
notb
movsl
call
int
movsb
icebp
pop
mov
das
add
pop
sti
and
loopne
xchg
or
add
pop
dec
xchg
mov
sti
clc
cmp
xchg
cmovbe
in
dec
push
or
push
outsl
loop
mov
call
dec
popl
and
in
cmpsb
out
loopne
inc
xchg
filds
dec
xor
and
mov
int3
fwait
lret
js
push
cmp
dec
jle
insb
lcall
fcomps
hlt
mov
xchg
sbb
sbb
dec
and
out
add
arpl
sub
and
test
jmp
out
jnp
cmp
in
cltd
xor
ret
or
das
xor
jbe
lds
aas
psrad
ljmp
decb
pop
test
scas
sub
jno
adc
jns
repz
jl
dec
lret
mov
dec
pop
nop
xor
xchg
xchg
lods
dec
aad
es
cmpsl
xchg
xchg
sbb
dec
and
int3
ss
and
fmuls
sub
je
rcll
dec
loopne
lods
stos
xchg
or
xor
sub
and
cltd
inc
adc
aas
xor
mov
jmp
mov
mov
fwait
in
xchg
aas
pop
cmc
inc
cmpsl
push
cmp
jl
sbb
lret
mov
mov
cmpsb
fidivrl
push
sub
and
add
out
scas
add
repnz
movsl
jl
jecxz
roll
xchg
push
repz
fimuls
cmpsl
push
insl
das
iret
arpl
jne
in
jb
sbb
sarb
and
cmp
cmpsl
or
xor
mov
scas
mov
shlb
pop
outsb
lret
mov
fs
push
std
dec
test
xor
aam
add
icebp
cmp
popa
js
hlt
outsb
ds
or
pop
stos
into
jmp
aaa
jnp
cli
add
aad
cmp
imul
mov
loope
dec
xlat
xchg
mov
lds
mov
push
push
inc
filds
outsl
hlt
sti
xchg
push
dec
xchg
lret
sbb
dec
cwtl
jg
cmpsl
dec
test
ret
outsl
loopne
loopne
push
leave
imul
insl
sbb
out
test
inc
xchg
and
sub
pop
pushf
repz
jle
lea
mov
fstpl
mov
mov
pop
jns
mov
dec
mov
inc
jnp
outsl
pop
loope
lret
jecxz
add
mov
push
mov
add
cwtl
mov
mov
xchg
dec
pop
jo
int3
jnp
xchg
andb
push
lock
out
stos
sti
lods
mov
dec
add
roll
ud1
jbe
lret
clc
inc
icebp
test
addl
xor
repz
push
iret
push
xor
mov
rorl
xor
imul
insb
mov
in
sbb
pop
cmp
mov
sbb
mov
fildl
js
pushf
in
aad
cmp
adc
pusha
enter
mov
mov
mov
mov
push
je
dec
cmc
repnz
inc
cwtl
xchg
popa
dec
mull
inc
xor
lds
js
mov
xchg
lock
arpl
add
push
mov
in
scas
cmp
inc
subb
mov
adc
push
and
dec
ds
sub
jbe
push
jns
push
fdivs
pop
int
in
pop
mov
sub
inc
mov
and
cmp
pushf
data16
dec
inc
and
jge
cli
mov
movsb
lea
lock
bound
std
into
xor
out
jnp
fdivrl
notb
sub
ficompl
mov
call
mov
stc
loop
jbe
arpl
jb
in
mov
sbb
out
hlt
outsb
push
push
lret
mov
rcll
ss
push
lret
jmp
pusha
xchg
mov
mov
aas
push
sub
clc
rol
loope
je
jnp
and
and
lret
cs
out
xor
aam
test
addb
adc
ljmp
jle
mov
inc
mov
and
adc
xlat
sub
add
sbb
add
stos
decb
fldenv
loop
sbb
pop
mov
aaa
xchg
sub
xor
jnp
inc
dec
xchg
cwtl
inc
push
outsb
mov
cli
test
mov
mov
xchg
loope
es
insl
les
adc
cmc
shrl
es
mov
jnp
sub
fnstenv
shll
push
pop
add
adc
fildl
test
mov
fbstp
outsb
inc
ljmp
sbb
les
xor
jbe
in
or
cmp
jge
adc
mov
pop
out
cli
and
mov
pushf
xor
int3
cmp
push
mov
push
mov
mov
jnp
sub
xchg
out
imul
dec
mov
push
pop
imul
into
mov
lret
xor
mov
xchg
data16
cwtl
and
xchg
lcall
cmp
inc
jmp
aaa
aam
dec
loopne
mov
mov
call
aad
mov
push
gs
aam
adc
jns
ss
adc
jcxz
lahf
xchg
mov
rolb
cli
mov
test
fwait
cwtl
rorl
lahf
mov
fstpl
add
dec
add
and
int3
fstpl
jb
in
sub
mov
mov
jl
imul
dec
mov
fisttps
sbb
lret
pusha
call
loop
xor
mov
popf
enter
call
push
xor
or
sub
adc
jno
jecxz
push
lret
cmp
outsl
add
xchg
iret
sub
push
xchg
push
lcall
call
sub
jp
inc
mov
filds
push
sti
mov
inc
subb
sbb
dec
pop
xlat
std
mov
pop
sti
lcall
inc
adc
loop
mov
pop
lcall
stos
cmpsl
outsl
popf
imul
aaa
or
ss
push
jecxz
xchg
outsl
xor
or
inc
push
lock
jmp
dec
dec
and
jae
sub
loopne
lock
mov
rolb
daa
xor
push
mull
sarb
in
pop
int3
call
rorl
data16
or
lahf
test
jnp
push
ficoms
mov
sbb
sbb
cmpsb
jecxz
subb
mov
push
ss
mov
or
xor
icebp
stos
data16
in
or
stos
jb
clc
stos
in
int3
mov
lret
dec
dec
sub
pop
cs
adc
test
cmp
mov
push
adc
iret
lret
test
fisubl
jp
stos
inc
lods
gs
jb
idivb
cmp
fildl
push
jmp
pop
loopne
dec
pusha
mov
push
daa
jo
xchg
call
xchg
adc
filds
mov
adc
adc
cmp
loopne
in
adc
inc
stos
in
xchg
arpl
in
mov
and
ret
xor
jmp
mov
ljmp
loopne
cld
mov
cmp
imul
dec
or
mov
and
xchg
jmp
pop
or
push
enter
dec
add
movsb
data16
adc
or
dec
xor
inc
ja
xchg
fcmovne
pop
lock
dec
xchg
arpl
mov
int3
hlt
std
dec
adc
jns
jecxz
je
es
imul
xchg
int3
inc
sbb
repz
fiaddl
out
mov
mov
cmc
sbb
mov
lcall
into
es
int3
lock
mov
cmp
repz
sbb
inc
xchg
lods
insl
cmp
inc
pop
push
cmpsl
mov
cmpsl
mov
push
sub
mov
jmp
push
decb
iret
mov
mov
call
imul
sarl
stos
shll
cmc
sbb
adc
or
xchg
insb
jl
adc
push
push
jp
sahf
push
jbe
rolb
adc
sbb
mov
dec
ret
cmpsl
insl
loope
jae
cmp
lahf
dec
jo
or
xor
fisubs
shll
clc
out
fistpll
jnp
js
nop
xorb
out
xchg
cmp
ja
xor
leave
dec
subb
fstpl
aam
dec
sbb
xchg
js
xor
rolb
stc
int
ficoms
dec
sbb
mov
jno
in
imul
mov
repz
sahf
dec
push
lods
jp
into
mov
pop
pop
adc
int3
in
sbb
sub
jmp
inc
jle
fimull
push
mov
add
bound
xor
pushf
and
lahf
sub
es
sbbl
iret
or
jge
call
test
or
movsb
pop
xor
int3
repz
push
dec
imul
jns
loopne
cmp
sarl
in
ret
sub
adc
adc
pop
pop
cld
enter
mov
popa
jo
xor
push
xchg
jns
icebp
pop
popa
clc
shll
add
repnz
jno
and
mov
ds
mov
in
adc
add
fidivrs
push
sbb
adc
mov
inc
cld
mov
lcall
imul
or
les
push
out
aaa
jle
jbe
push
xchg
and
out
push
jge
ret
xchg
jl
push
pop
mov
ret
mov
js
bound
adc
mov
int
aaa
sti
cmpsb
outsl
movsl
sbb
shrb
xor
jge
repnz
sub
push
loop
dec
dec
push
cltd
test
dec
mov
js
mov
shll
nop
push
jbe
inc
orl
mov
ret
add
fsubrs
movsb
popa
int
mov
ljmp
dec
inc
fcomip
inc
inc
std
les
dec
in
scas
fsubr
cmp
adc
dec
ror
loope
jecxz
pop
mov
adc
in
loope
cld
inc
and
rcrl
movsl
xor
pop
es
mov
shl
xchg
aas
sbb
test
jae
push
outsl
lret
out
test
xlat
cmpb
iret
mov
inc
cmp
bound
shlb
jl
into
dec
loopne
xor
lret
pop
iret
xor
lcall
inc
cmpsl
push
lret
mov
aad
xlat
fisttpll
int
shrb
cs
das
xchg
push
das
add
mov
cmpb
inc
add
sarb
mov
pop
mov
outsb
daa
inc
mov
lcall
filds
sbb
inc
jmp
leave
outsl
stc
push
xor
fwait
add
mov
xor
mov
mov
je
lret
cmpsl
jmp
mov
inc
push
xchg
sub
xchg
cmpsl
imul
adc
fdivrs
adc
movsl
mov
insl
aad
in
lock
aas
or
loopne
in
dec
and
xor
adc
push
fistps
add
adc
out
pop
cmp
loopne
mov
adc
test
dec
ret
ljmp
xor
sbb
cmp
mov
inc
popf
xor
or
aam
call
popf
and
popf
mov
enter
jb
dec
aas
and
jecxz
jbe
sbb
mov
addr16
jae
xor
dec
inc
mov
mov
rorb
test
out
pop
inc
repnz
cltd
jno
movsl
mov
cmp
mov
dec
push
bnd
cmpsl
dec
and
pop
dec
xlat
and
mov
fists
xor
dec
lds
shlb
les
aaa
sbb
jge
lock
xchg
clc
in
addl
cli
adc
fildll
cmpsb
rol
lods
cmpsb
mov
sbbl
mov
xchg
xor
aad
dec
cltd
jp
lods
add
and
pusha
mov
mov
fbld
fisttpll
jp
cmpsb
mov
cmpsb
cmp
jb
cmp
jno
pop
sbb
jle
subb
idivb
jl
sbb
mov
movsl
push
push
cmp
arpl
adc
mov
and
and
aaa
inc
or
mov
mov
xchg
push
test
xor
lret
outsb
mov
mov
pop
adc
in
mov
popf
ljmp
loope
cmp
jge
pop
cmpsb
andb
sub
outsb
push
jl
pusha
mov
pop
xchg
rorl
and
and
jns
out
out
jecxz
leave
in
js
lock
xor
sub
jne
adc
jb
ja
pop
test
cltd
fistpl
xchg
rcll
notb
insb
aas
ja
psubq
pop
xchg
cmc
inc
or
insb
outsb
popa
pusha
clc
js
add
adc
lahf
xor
mov
scas
outsl
cmp
and
into
jmp
or
fcom
pop
pop
pusha
je
insb
jmpw
jo
and
lock
pop
arpl
fs
or
fldt
sbb
sar
xchg
movb
jae
or
and
pop
cmc
fadds
js
or
lock
int3
xor
and
aaa
jbe
int3
pop
mov
pop
fyl2xp1
lret
cmpsb
mov
cmpsb
sub
dec
jp
aas
es
cmpl
sahf
xchg
ds
or
or
xchg
push
adc
adc
mov
push
lret
push
or
fsubs
out
sbb
or
sbb
insl
or
popa
pop
adc
xor
aad
push
sahf
sub
fldcw
jo
filds
out
stc
mov
adc
cmc
jecxz
in
rorl
das
sahf
addr16
movsl
stos
rolb
or
movsl
repz
jmp
enter
stos
into
mov
enter
push
push
aad
fmuls
jnp
popa
out
xor
ds
inc
push
call
mov
mov
xlat
andl
mov
mov
mov
jecxz
lods
data16
dec
fwait
jne
pop
ds
lret
push
popf
data16
mov
xchg
subb
ret
mov
mov
stos
add
dec
into
push
xor
jo
jl
iret
popa
lds
mov
sbb
mov
repz
dec
test
lods
daa
movl
cwtl
jns
lea
add
notl
and
out
inc
mov
xor
jne
ds
cmc
test
ds
inc
outsb
dec
add
movsb
xor
lahf
cwtl
push
lods
ret
pop
mov
xchg
call
mov
inc
mov
test
lds
add
mov
sbb
xchg
push
lahf
push
jae
repz
adc
dec
leave
mov
outsl
mov
xchg
mov
enter
cli
sbb
mov
jg
adc
sbb
pop
adc
push
jmp
fldcw
pop
adc
insb
clc
jle
clc
mov
mov
xor
xchg
fwait
fs
cwtl
loop
sbb
aam
add
jp
dec
and
xchg
vmaxps
sbb
push
movsb
xchg
lret
repnz
xchg
cmp
jmp
jge
or
sbb
xchg
push
mov
clc
dec
xchg
pop
clc
xchg
push
or
xchg
fidivrs
jns
pop
push
cli
xchg
jle,pn
sti
lahf
inc
pop
idivb
mov
lret
sahf
inc
fildll
mov
leave
jp
ljmp
cmc
sbb
xchg
pusha
outsb
stos
fcoml
into
outsb
gs
mov
xchg
in
dec
lods
jp
pushf
xor
cld
xchg
outsl
shld
pop
adc
faddp
mov
addr16
movsb
ret
imul
les
addr16
mov
lds
and
orl
lahf
aas
lds
mov
shrl
cmpsb
xor
xchg
sti
data16
xlat
mov
cmp
xchg
iret
mov
push
bound
subb
hlt
jbe
rorl
stc
sub
sub
jmp
mov
shll
fucomi
lahf
mov
add
mov
mov
lret
scas
jle
fs
xor
cmp
add
and
pushf
lret
xchg
pop
xor
mov
cmp
loope
nop
ljmp
imul
add
cmp
mov
scas
rorb
lds
dec
sbb
sbb
sub
pop
ja
test
adc
into
fiadds
or
fsubp
jge
call
mov
push
cmp
aam
and
idivl
testl
out
xor
sbb
rolb
mov
mov
stos
dec
test
roll
pop
jno
jns
lea
adc
mov
mov
jl
and
in
inc
xchg
sub
push
mov
cmpsb
cltd
inc
mov
outsl
inc
jo
outsb
sub
leave
jle
sahf
jne
jb
mov
jae
fsubs
mov
xchg
inc
push
mov
cs
jnp
mov
push
and
push
dec
out
lret
fsubrs
or
aaa
add
cs
ret
mov
retw
push
popf
pop
call
dec
or
ljmp
jo
lahf
mov
inc
inc
cmc
lret
gs
dec
jno
cmp
sar
push
repnz
lahf
mov
adc
into
clc
imul
inc
jo
mov
xor
popa
pushf
lods
adc
cmp
xchg
adc
bound
test
in
inc
jbe
pop
lods
fidivrl
pop
mov
mov
lods
popl
mov
xlat
ds
cmp
or
cld
cld
movsl
cmc
mov
movsl
sub
jnp
sbb
push
sbb
and
xchg
push
lret
ret
push
jecxz
clc
es
mov
push
jb
insb
pop
and
cmp
dec
imul
je
and
adc
sbb
lahf
out
lea
movsl
and
jmp
arpl
xor
fs
aaa
ds
rorl
pusha
int3
xor
int
mov
fldcw
push
xor
cmp
inc
mov
imul
cwtl
sub
mov
inc
xchg
dec
inc
loop
sub
adcl
cld
mov
in
add
pop
notl
into
xor
stos
mov
dec
push
lock
dec
dec
pusha
sbb
add
into
xlat
or
dec
xlat
ljmp
es
lods
lock
jnp
push
push
mov
stos
arpl
imul
dec
leave
jmp
fimuls
fs
scas
mov
ret
test
push
mov
sub
sub
cmp
aas
cmpsl
test
or
cmp
xor
lock
daa
mov
test
leave
inc
cmp
cmp
dec
sahf
jle
loopne
xchg
sti
lods
jmp
sbb
lret
xor
dec
pop
sbb
sub
hlt
sub
aam
sahf
out
xor
mov
lret
lods
jne
movsl
and
in
mov
ret
test
or
int3
ss
cmp
je
xlat
pop
sbb
xlat
sub
ljmp
sub
test
inc
fldenv
ret
in
int3
xor
adc
out
lods
xchg
shrb
cwtl
pop
add
dec
lods
dec
shlb
push
or
jno
insl
insl
out
ja
mov
ror
pusha
xor
mov
cmp
movsl
cmp
out
cltd
push
cmc
lock
cwtl
fbstp
popa
xchg
out
adc
mov
mov
mov
cmp
and
inc
and
cli
mov
pop
adc
sbb
sbb
mov
xchg
xchg
pop
add
cmp
push
iret
mov
cmp
shll
add
pop
push
mov
push
data16
xlat
sub
xchg
in
sbb
xchg
mov
test
xchg
xor
aaa
test
cmpsb
lods
pop
cmpsl
mov
mov
xor
addb
pop
iret
sub
insb
sbb
test
das
and
in
adc
lea
cli
pop
test
test
nop
sub
mov
inc
cmp
mov
or
cmp
push
bound
fs
mov
stos
lret
cld
das
mov
xchg
xlat
inc
adc
std
sahf
mov
push
and
push
pop
push
pop
adc
cmp
mov
in
pop
add
mov
fidivl
sbb
sub
decb
jg
insb
fistl
mov
ret
test
push
lods
mov
outsb
mov
sbb
sbb
push
mov
clc
xor
int
mov
les
push
fcomp
adc
scas
mov
out
cli
sar
adc
repnz
pop
in
xchg
sub
xchg
cmp
sbb
mov
mov
jnp
cwtl
add
lea
pop
jmp
jecxz
mov
fwait
scas
and
lcall
lods
xchg
cs
cmp
dec
sub
sbb
cmp
jae
and
sbb
pusha
clc
sbb
pop
mov
cmp
or
adc
or
pop
mov
insb
xchg
jbe
sbb
shlb
lods
and
jbe
fisubs
test
pushf
xor
push
roll
pop
xor
test
in
ret
aas
sbb
pushf
test
cmp
lea
mov
sub
sub
shrl
jmp
mov
jae
xchg
mov
lcall
or
inc
xor
shrb
arpl
test
sbb
loopne
adc
jae
ds
stos
push
xchg
push
andb
int3
scas
ret
push
mov
rclb
divb
out
push
rcll
loop
add
adc
fbstp
and
add
outsb
fcmovu
ret
ljmp
adc
jb
push
and
rclb
jnp
aad
inc
pop
cwtl
mov
je
aaa
mov
mov
stos
daa
loopne
mov
aaa
iret
je
cwtl
mov
or
jmp
jae
fdivrl
popf
xchg
mov
mov
mov
cmc
sbb
sbb
js
loope
jl
out
sarl
cwtl
int3
or
pop
jecxz
out
cmp
cmp
stos
jle
lods
lahf
xchg
sbb
add
ds
jmp
mov
outsl
cmc
push
push
inc
pop
into
jne
js
cmp
bound
mov
leave
adc
ret
cmp
lret
cmp
pushf
sub
mov
sbb
jnp
ret
jns
mov
in
mov
or
jno
out
jle
mov
push
xlat
stc
or
fimull
adc
push
mov
movsb
inc
jae
inc
mov
xchg
mov
fistpll
enter
inc
fldl
movsb
sub
movsl
pop
out
xor
sub
dec
std
mov
mov
scas
test
cwtl
cmpsl
xor
lods
out
pop
pop
and
shll
cli
pop
xchg
jo
pop
fcomps
repz
pop
xchg
jg
push
mov
inc
jb
jecxz
inc
ja
adc
outsb
pop
and
mov
jb
cmp
pop
mov
dec
out
stos
cmpsl
cmpsb
pop
fmull
testl
push
xor
sub
repz
xchg
adc
pop
sbb
out
jns
cwtl
xchg
inc
adc
sbbb
imul
inc
rcrl
call
ljmp
pop
scas
testb
jmp
jb
jnp
sbb
jl
cmpsl
add
jae
lods
rcll
and
fistpll
pop
cmp
test
cmp
inc
scas
jg,pn
xchg
sub
and
mov
inc
js
in
out
imul
or
xchg
mov
shlb
sbb
xchg
clc
gs
pop
xor
jle
pop
gs
push
jmp
adc
lods
pop
jb
cmp
in
std
xchg
push
loop
pop
imul
fs
cwtl
or
out
xchg
repnz
mov
and
xchg
mov
xchg
stc
in
roll
mov
lret
mov
pop
mov
xor
sub
push
subl
jo
stos
sub
lods
dec
cmp
mov
nop
addr16
gs
fcoms
push
fsub
sub
sub
jg
cmp
adc
ret
out
jnp
stos
je
cli
fdivs
adc
and
push
insb
jp
movb
sub
insb
lds
and
adc
pop
fidivs
lea
xchg
pusha
stos
inc
jbe
into
mov
outsb
xor
xorb
lods
aad
or
mov
xor
jae
mov
lcall
daa
pusha
xor
xchg
xchg
and
push
or
add
pop
sbb
repnz
xchg
in
mov
shlb
aad
pop
loop
loope
idiv
pop
cmpsl
es
adc
cmc
sub
test
xorl
stos
xor
lret
push
sbb
ja
fldenv
sbb
xor
cmp
sti
add
imul
movsl
and
sub
je
mov
cltd
cltd
repz
cmp
test
daa
ds
clc
jl
lret
int
pop
lods
insl
adc
iret
addl
mov
out
or
ret
in
sbb
pop
mov
sub
popa
popa
movsl
sub
fwait
repnz
fldcw
in
xor
push
jb
mov
or
and
filds
sbb
adc
loopne
mov
mov
cmp
sbb
test
mov
popa
mov
or
imull
rol
jp
ss
push
mov
fucomi
in
pop
mov
sti
mov
insl
je
adc
mov
xchg
andl
xor
lock
lock
data16
inc
popf
out
inc
addb
sbb
sub
and
sahf
dec
jb
and
sub
pop
inc
push
scas
lds
and
pop
dec
xor
push
lret
push
roll
jge
sub
dec
lods
sub
and
fsubs
lods
call
ljmp
xchg
loope
sub
and
xor
out
or
jno
mov
lsl
push
or
cmpsl
pop
push
ja
mov
push
and
cmp
dec
adc
adc
and
sbbb
incb
out
call
test
jl
sti
enter
jbe
cmp
push
jge
or
cmpb
decl
cltd
addl
mov
mov
push
inc
scas
mov
xor
cmpl
shl
push
pop
movsl
cmp
xor
sub
xchg
pop
add
int3
lea
cmp
fcompl
lcall
inc
pop
aaa
cld
movq
mov
mov
mov
jno
pop
iret
pop
push
ss
jb
ror
push
daa
xchg
sahf
push
enter
iret
mov
mov
mov
adc
aam
xchg
or
cwtl
cmp
stc
adc
mov
pop
pop
adc
icebp
push
icebp
faddp
sbb
test
aas
das
dec
je
mov
xchg
xlat
cmpsb
iret
sub
orb
mov
xor
jmp
or
add
mov
mov
jno
mov
adc
lock
dec
shrb
jle
rclb
fisttpll
inc
adc
out
repnz
adc
pop
adcl
and
mov
cmp
ret
add
jle
xor
pop
xor
add
push
stc
lds
jnp
sbb
mov
dec
out
push
sbb
cs
and
pop
dec
sub
cmp
mov
mov
insb
repnz
push
movb
lret
mov
mov
jb
outsl
mov
jge
das
mov
cmp
adc
in
out
fcoms
stc
and
repz
mov
or
shr
inc
arpl
inc
decl
mov
push
pop
je
cmp
enter
xor
js
lds
pop
enter
aas
lds
rorb
cs
test
in
pop
adc
in
mov
sahf
sahf
xorb
mov
lahf
inc
push
inc
adc
mov
outsb
mov
push
xchg
out
jae
sub
sub
in
mov
add
mov
sti
lds
test
enter
xchg
lret
push
jae
scas
sahf
cmp
dec
or
adc
movsl
in
add
pop
aaa
shl
loop
mov
addl
and
dec
into
mov
mov
or
out
adc
add
push
cmp
mov
and
sbb
dec
jmp
and
test
ret
mov
cmp
jge
aaa
cmpsb
ret
dec
push
mov
xor
mov
pop
sub
repz
mov
mov
mov
inc
lods
movsb
mov
mov
data16
cmp
cmp
sti
bound
push
and
repnz
dec
pop
js
shll
dec
pop
sbb
xchg
mov
inc
lahf
out
xchg
imul
add
xchg
sbb
adc
ret
jbe
and
jnp
insl
inc
mov
xchg
rorl
es
xlat
push
push
pop
mov
std
ds
jbe
push
gs
scas
cmp
nop
mov
lock
or
sub
push
rcll
pop
std
jns
in
pop
pushw
and
jo
dec
adc
fstpt
push
jge
sub
sarl
mov
in
xchg
mov
ss
cmp
pop
mov
xchg
mov
inc
pop
jecxz
ret
loopne
adc
add
rol
push
mov
sti
out
popa
rorb
inc
dec
push
repz
pop
jle
inc
and
iret
out
jle
xlat
sti
int3
fistps
in
dec
test
lcall
pop
dec
outsl
and
mov
cmp
mov
push
fucomi
nop
xor
adc
jnp
dec
xchg
mov
cmc
push
je
sub
in
mov
mov
adc
mov
cmp
push
aad
dec
addr16
mov
addl
fidivs
sub
xor
inc
add
push
mov
xor
xchg
pop
push
popf
mov
outsl
jle
lret
repnz
push
lahf
mov
or
push
repnz
mov
push
mov
stc
arpl
add
out
aas
xchg
lcall
mov
mov
lds
jge
adc
push
jo
and
xchg
ja
or
shlb
fistps
jecxz
lea
pop
xchg
jo
sub
adc
add
and
pop
fcomps
lods
adc
outsl
std
dec
mov
mov
mov
mov
push
and
pop
or
mov
and
mov
mov
into
out
adc
mov
subl
mov
les
loope
cwtl
sbb
adc
push
outsb
sub
sub
mov
aam
arpl
sbb
mov
sub
mov
add
cltd
xor
or
mov
jbe
out
arpl
and
add
idiv
cmp
and
xor
xor
popf
andb
xchg
push
jno
enter
fwait
inc
xlat
mov
outsb
and
repnz
jns
scas
cmp
push
rcrl
dec
inc
bound
jbe
mov
xchg
sub
in
xchg
aas
iret
or
mov
test
pop
out
add
xorl
xchg
stc
push
pop
jge
daa
sub
dec
fisttps
sarb
mov
arpl
cltd
pop
ret
clc
rorl
mov
shll
movsb
adc
icebp
test
push
lcall
pop
stos
push
mov
into
sub
mov
sbb
movb
mov
fldenv
rcl
rorb
cmc
mov
pop
push
adc
mov
sbb
lret
mov
push
pop
in
mov
test
pop
fadds
or
dec
sbb
mov
xchg
cltd
cli
mov
and
push
es
push
xchg
dec
popf
mov
dec
sub
pop
movsb
cld
jg
sbb
cmp
test
test
stc
insl
js
jmp
imul
xor
stc
mov
jmp
ret
jne
jmp
push
sbb
pusha
mov
cli
sub
pop
addr16
pusha
cld
test
dec
pop
pop
cmpsl
inc
inc
dec
scas
xor
jne
mov
fistpll
xchg
mov
xchg
jne
lock
dec
jmp
ss
mov
enter
xchg
mov
add
jp
xchg
mov
xchg
add
sub
lds
mov
dec
imul
testl
dec
in
shl
imul
push
andl
xlat
xchg
fistl
mov
test
dec
mov
xchg
add
jp
movl
shrl
adc
xchg
in
mov
jge
cld
adc
sbb
fidivrs
add
mov
in
mov
pop
adc
hlt
lea
mov
adc
and
xchg
xchg
cmp
dec
call
push
out
dec
clc
fadds
mull
sub
or
cmp
pop
repnz
jbe
push
fwait
mov
mov
sub
jno
frstor
in
inc
lods
out
ss
inc
jo
js
push
sbb
fdivrs
stos
dec
add
and
aam
stos
dec
std
mov
adc
mov
shlb
outsl
ret
push
sbb
enter
dec
push
sbb
out
push
pop
aad
jg
and
sarl
jns
mov
sub
xchg
pushf
mov
sbb
inc
lcall
push
dec
movsl
paddsb
adc
mov
or
jle
test
sub
fistpl
cmp
movsb
push
mov
ret
out
test
mov
xor
xor
lret
sahf
push
xchg
jne
outsl
sbb
push
inc
outsb
nop
andb
dec
pop
cwtl
lods
mov
scas
cmp
je
jmp
fimull
add
xor
gs
pop
fdivs
sub
mov
xor
cmp
ror
or
mov
sub
add
mov
xchg
mov
inc
clc
daa
pop
pusha
nop
dec
jmp
iret
push
and
xchg
add
cltd
mov
mov
sub
pop
inc
or
test
mov
gs
out
ds
xor
sub
sub
mov
mov
loopne
shrb
xor
dec
xchg
fdiv
xchg
fildl
mov
sbbb
xchg
pop
sahf
push
imul
dec
mov
push
sahf
out
mov
sbb
sbbl
in
gs
push
adc
push
sbb
pop
and
mov
pop
aaa
enter
push
pop
cmc
mov
es
ret
lds
xor
scas
cld
jle
fsubrp
mov
pop
dec
pushf
adc
push
stc
mov
shll
mov
adc
xor
dec
pop
lret
sub
cmp
movsl
push
mov
cwtl
pop
and
jb
cmp
mov
and
movb
rcll
aas
mov
adc
shrb
cmp
test
cmp
cli
mov
rorb
push
mov
cmpb
addr16
adc
jae
inc
mov
inc
mov
pop
fbld
imul
inc
sti
cmc
mov
sub
adc
dec
xor
lock
or
xor
pop
aad
sbb
mov
insl
add
mov
fs
cmpsb
adc
std
cmp
xchg
pop
stos
jnp
imul
xor
mov
sub
xchg
sti
jno
and
fnclex
sub
rol
test
inc
popa
inc
test
xchg
pop
pop
outsl
mov
mov
xor
mov
inc
fisttps
pusha
scas
lret
rcrl
or
cs
mov
add
jns
stc
cs
cld
daa
rclb
and
jp
pop
stc
pop
dec
cli
repz
inc
fdecstp
cmp
out
cltd
xchg
dec
push
out
xlat
pop
and
ds
xor
pop
sub
loope
je
cwtl
rcr
popl
pop
jno
je
mov
les
ror
pop
dec
add
enter
call
cmc
and
xchg
xor
xchg
lret
sub
mov
in
shll
xor
add
rcrb
sbb
inc
push
lea
dec
push
ds
stos
int3
adc
pop
jne
inc
test
xchg
push
das
call
mov
dec
mov
sbbl
lods
mov
rol
mov
je
dec
clc
push
add
fwait
or
mov
js
mov
xchg
or
cmpsb
xchg
frstor
jbe
dec
and
cmpsl
xor
xchg
or
ss
push
mov
lods
dec
cmp
or
test
inc
pop
mov
cli
add
mov
in
jae
sub
jecxz
movsb
cwtl
faddp
dec
add
and
cltd
pop
adc
loop
sub
fs
pop
pop
mov
xchg
enter
out
lahf
icebp
xorl
sahf
in
loopne
mov
dec
ds
icebp
test
xor
je
push
stc
mov
jne
test
push
addr16
xchg
scas
pop
sub
out
or
aas
xor
mov
sub
out
jge
jmp
inc
lods
xchg
xor
pop
lcall
inc
popa
cmp
in
imul
loope
and
mov
test
cltd
add
aas
lock
and
xchg
in
lods
and
cmpsl
sub
scas
xchg
nop
hlt
scas
imul
lea
cwtl
outsl
subl
test
mov
jp
jle
fisubrs
add
mov
jle
call
in
inc
int3
mov
stos
xor
mov
mov
sub
xchg
adc
xor
dec
fadds
xor
repz
out
cmp
es
sub
repz
inc
loop
adc
add
jbe
out
sbb
xchg
leave
in
jge
sub
adc
or
fiaddl
jbe
sbb
int3
scas
mov
push
jg
imul
mov
mov
clc
jg
out
xchg
roll
push
flds
cmp
leave
mov
fimull
dec
sub
nop
loop
lods
icebp
or
fst
sub
xor
sub
clc
and
pop
add
leave
sahf
sub
jnp
aam
lahf
lret
mov
pop
dec
pusha
mov
cli
sbb
scas
icebp
jle
fidivs
loop
dec
sbb
lahf
out
outsb
iret
or
push
frstor
lock
mov
stos
pusha
js
push
jae
out
test
mov
andl
cwtl
imul
push
push
xchg
in
push
jnp
xor
mov
call
fmull
stc
fsubrs
pop
cmp
inc
jle
outsl
inc
add
sub
xchg
and
pop
cld
into
or
push
fcmovu
aas
mov
in
sahf
adcl
mull
lret
rcrl
arpl
jbe
inc
adc
cmc
and
xor
inc
mov
div
cwtl
inc
add
cs
pushf
dec
daa
adc
scas
push
mov
push
push
cwtl
jno
xor
add
addl
aam
add
imul
int
cmp
in
and
push
icebp
fwait
mov
mov
clc
xor
sub
rcrl
jmp
pop
sub
hlt
lret
fstl
mov
fcom
cltd
popa
inc
test
mov
cmp
adc
popa
push
movups
sbb
or
test
ja
cmpsl
jnp
dec
cmpsb
adc
sub
inc
lcall
add
repz
ljmp
lods
into
movsl
push
dec
jno
inc
xor
movsb
div
or
gs
mov
sbb
add
repz
int3
out
jb
xchg
mov
xchg
dec
inc
les
aaa
xchg
fldl
mov
cld
lock
jmp
and
lods
lcall
out
std
lods
pop
orb
mov
sub
adc
hlt
push
stos
shrl
cmpsl
push
fcoms
mov
mov
mov
scas
push
xchg
jl
push
insb
adc
mull
lret
jmp
cli
pop
imul
jb
hlt
mov
popa
std
adc
jnp
mov
aaa
call
and
hlt
inc
jae
inc
push
xor
add
out
jns
dec
test
adc
loop
sti
movsl
pop
sbb
out
inc
std
cmpsl
pusha
add
movsb
add
mov
adc
and
push
out
ret
ret
sub
inc
push
fwait
imul
jne
aaa
xchg
fistpll
in
mov
adcl
fidivl
decb
mov
sub
rcll
xchg
or
dec
inc
ljmp
inc
dec
test
movsb
xchg
pop
jb
test
pop
clc
add
mov
iret
ret
mov
fcompl
cmpb
out
dec
stos
out
adc
cmp
aam
jbe
outsb
add
push
bnd
xor
cmp
clc
sbb
lods
dec
jl
popf
mov
adc
repz
shlb
lret
push
pop
xor
test
lcall
sub
pop
movsl
push
into
test
out
push
mov
jae
gs
and
rolb
sbb
push
icebp
nop
sarl
pop
lock
pop
imul
aam
and
xchg
sbb
add
jne
cmc
sub
cmp
dec
aad
or
rorl
add
push
fisubrl
loopne
mul
sbb
test
mov
arpl
and
mov
push
xchg
es
loopne
sti
in
sbb
dec
push
or
sub
aam
pop
push
pusha
adc
bound
xor
into
repnz
sbb
cmpsl
and
adc
fbstp
add
dec
push
std
pushw
cwtl
addl
daa
pop
repz
aaa
mov
sti
pop
sub
fyl2xp1
loopne
in
insb
dec
cltd
decl
jnp
cld
pushf
es
jle
cli
xor
int
std
pop
pop
and
lds
cmp
mov
movsl
mov
xor
and
sub
sub
xchg
pop
enter
sbb
dec
out
sbb
mov
xchg
into
xlat
movsb
mov
test
cwtl
icebp
jg
addr16
sti
lods
mov
shl
movsl
int
inc
bound
or
call
sbb
imul
cmp
aam
dec
fisubs
dec
testb
push
xor
clc
xor
xchg
cmp
daa
lea
in
test
fisttpl
fmull
rolb
cmpsb
nop
cmp
rolb
lods
int
adc
imul
fmull
mov
ret
addr16
dec
pop
outsb
mov
in
adc
enter
nop
inc
jl
cmp
mov
sbb
jb
adc
xchg
flds
mov
or
inc
out
sub
cs
push
nop
outsl
mov
cmp
adc
out
dec
lahf
add
imul
es
repz
xchg
mov
mov
mov
xor
fdivr
mov
cmpl
sub
sbb
cs
mov
je
sub
or
cld
cmp
push
sub
and
lods
pop
pop
add
cld
arpl
xor
push
stos
inc
int3
push
ret
mov
jnp
and
pop
dec
les
mov
lahf
cld
mov
fwait
push
rorb
mov
push
jecxz
movsl
and
add
sub
mov
das
dec
loope
adc
or
mov
fdivrl
mov
hlt
or
mov
ror
shlb
iret
jb
filds
das
pop
jle
clc
jge
pop
rcrl
call
imul
enter
aaa
xor
sub
insb
sbb
out
sbb
stos
jecxz
mov
lea
sbb
push
scas
dec
inc
imul
divb
arpl
mov
add
xor
dec
cmp
scas
adc
ja
fisubs
xor
stos
push
sbb
jo
adc
pop
cld
dec
push
sahf
mov
pop
pop
or
mov
cmp
data16
pushf
inc
sub
scas
mov
sub
cld
inc
push
dec
xchg
xchg
fs
or
or
and
roll
sbbb
lods
jp
or
mov
jbe
faddl
adc
xor
xor
daa
jnp
test
iret
pop
sub
icebp
out
lret
mov
mov
and
push
arpl
jle
push
xchg
arpl
push
xchg
fnstcw
shrb
add
insb
and
adc
mov
inc
and
outsl
decl
in
outsl
or
out
inc
fists
add
mov
popf
adc
sub
xor
popa
mov
inc
sbbb
in
sarl
push
call
pop
test
sti
fucomip
xchg
cmp
push
ljmp
dec
fsubp
push
xchg
jno
or
mov
repnz
add
mov
data16
mov
js
xchg
inc
lret
mov
mov
inc
sub
out
inc
mov
and
sbb
outsl
jnp
ss
cmp
pop
test
loopne
jb
xor
stc
jge
pop
pop
nopl
add
les
push
nop
sbb
ljmp
xor
jbe
fsubrs
mov
or
fistpl
or
movl
pop
lock
adc
mov
cmp
inc
xchg
push
pop
add
cwtl
fmull
insl
out
and
push
xchg
mov
mov
xchg
lret
add
jl
inc
mov
xchg
fidivs
js
out
inc
outsb
lcall
repz
xchg
cwtl
popf
or
ljmp
pop
sub
adc
pop
or
or
loopne
mov
and
int
out
vshufps
dec
jns
jmp
mov
fwait
lods
mov
mov
inc
rcrl
sbb
and
fldcw
add
je
pop
ror
xchg
scas
scas
dec
add
cli
sbb
pop
repnz
xchg
stos
push
daa
cmp
fidivs
insl
fisttpl
fistl
scas
adc
mov
dec
cltd
jo
int3
adc
int
jbe
in
call
mov
xor
sbb
sub
ret
ret
xchg
orb
xor
ret
das
fnstcw
icebp
mov
cmp
xlat
sbb
xor
jb
dec
scas
jo
cmp
lods
lea
in
test
pop
test
jmp
push
xchg
icebp
mov
fs
les
inc
inc
jmp
fsubs
jmp
xlat
and
popf
pop
rolb
dec
or
pop
sub
xchg
mov
sbb
pop
loopne
cmc
xor
imul
cmpsb
push
push
mov
xchg
insb
cmp
in
and
sub
pop
push
pop
mov
orl
xchg
outsb
xor
lods
clc
negl
push
in
or
mov
add
mov
into
sbb
dec
lods
fsts
push
cmp
adc
jge
inc
sbb
and
js
xchg
fs
ds
popf
fimull
adc
pop
xorl
inc
mov
iret
or
add
cmpsb
mov
notl
xor
subl
sub
stc
rolb
imul
sarb
pop
or
ret
or
push
and
push
sbb
std
pop
pop
jp
push
add
cmp
sbb
or
loope
loope
inc
gs
or
rcrb
xor
xchg
push
mov
jnp
gs
mov
fistl
jne
and
inc
sahf
xor
out
lea
idivb
int3
int3
inc
mov
cmp
adcl
popa
shll
fs
pop
mov
in
subl
mov
addr16
inc
scas
cmp
dec
add
cmc
bound
pop
fs
out
std
jne
and
pusha
test
dec
lahf
lret
mov
fdivrl
xor
mov
jnp
imul
mov
les
hlt
mov
dec
sub
mov
pop
clc
jg
xor
mov
loope
in
mov
xor
rcrb
add
dec
mov
push
das
mov
sbbl
xchg
es
movsb
repnz
iret
imul
jbe
fisttpl
sbb
mov
out
ret
xchg
xchg
jge
daa
jae
stc
or
and
subb
dec
movsl
nop
sbb
xchg
cld
in
sahf
push
inc
lret
in
xor
mov
inc
xlat
stc
cs
xor
dec
add
movsb
dec
mov
fdivs
sub
out
sbb
mov
jbe
cld
test
paddd
xchg
push
mov
push
xchg
scas
incb
cmpsb
sub
out
mov
int3
sbb
push
lds
cmp
add
mov
sbb
jo
outsb
dec
xchg
mov
mov
and
pop
or
mov
inc
adc
jecxz
add
test
inc
cwtl
fmul
xor
out
xor
adc
push
adc
roll
and
mov
arpl
add
jp
mov
or
jle
jno
out
ret
sub
mov
std
lret
lahf
jmp
iret
or
out
test
lret
push
cmp
adc
lahf
lahf
sarb
insl
enter
outsl
and
cmp
xchg
lret
mov
bnd
pusha
xor
fcompl
or
aaa
xchg
and
sbb
lret
mov
faddp
les
insl
xchg
or
mov
xchg
push
insl
enter
leave
subl
xchg
test
ret
imul
vmovdqu
pop
stos
dec
xchg
aad
int
dec
scas
loope
in
mov
test
push
pushf
imull
aaa
push
push
leave
daa
push
cs
pop
subb
xchg
xor
inc
dec
rol
and
mov
imul
lcall
and
stos
iret
out
stos
add
sahf
lods
cmp
push
cmp
adc
pop
xchg
lret
sarb
mov
aad
call
repz
lds
sarl
js
mov
jle
out
call
out
sub
imul
das
xor
lods
lret
aaa
ds
push
pop
outsb
push
sub
mov
insb
sbb
mov
imul
hlt
xor
rcrb
xchg
dec
push
or
pushf
add
pop
fmull
imull
push
xchg
movsl
clc
xor
add
enter
out
andl
xchg
adc
rcrl
mov
popf
popf
pop
adc
and
enter
addb
add
mov
xchg
jecxz
cmpsb
pop
or
andb
pop
jge
sti
nop
lock
pushf
hlt
movb
popf
dec
jge
pop
call
enter
pushf
push
fidivrl
or
push
dec
je
or
aad
jp
rorl
imul
mov
ss
aaa
daa
ja
ja
insb
sbb
lods
repz
inc
cmp
xlat
int3
push
in
jbe
cld
jne
xor
mov
dec
dec
pop
fildl
cld
orl
mov
cmp
mov
test
inc
test
js
push
lea
mov
loope
loope
cmp
inc
lods
insl
inc
sbb
xchg
sub
clc
and
out
aaa
xchg
jl
and
outsl
ds
fisubrs
repnz
xor
mov
insl
push
data16
imul
shrl
aam
adc
jmp
mov
ret
sar
shll
inc
mov
ret
and
xchg
push
cmp
adc
repz
test
iret
sub
dec
outsb
mov
aaa
mov
pop
mov
push
int3
jns
bound
sti
jnp
sbb
mov
or
sbb
push
dec
insb
movsb
push
mov
imul
sub
sub
pop
lods
dec
out
ljmp
dec
addl
dec
mov
xchg
sub
outsl
dec
je
inc
mov
aas
cmp
xorw
sbb
xchg
jne
lea
dec
push
sub
test
xchg
insb
in
cmp
fistps
cmc
xor
in
dec
imul
sub
out
clc
movsl
cmpsl
xor
mov
lret
dec
les
add
shlb
rolb
rorl
fwait
mov
adc
lods
je
out
cltd
repnz
out
lret
jns
inc
insl
xchg
imul
sub
adc
mov
or
or
mov
push
mov
adc
lret
add
dec
scas
pop
sub
adc
pop
test
and
push
pop
into
sahf
jbe
and
lods
out
cmc
xor
repnz
push
cmc
cs
mov
stc
jg
inc
stos
les
lahf
dec
aad
xchg
add
loope
aaa
pop
rolb
and
test
mov
jl
cmp
xchg
pop
lods
mov
push
and
push
or
inc
push
clc
dec
cwtl
mov
adc
jg
outsb
aas
xlat
dec
hlt
push
jae
iret
ds
int
and
sub
je
or
inc
add
adcl
jmp
xor
ja
fcmovnbe
pusha
cmp
push
lret
add
or
cwtl
ja
inc
adc
aas
inc
and
xor
in
mov
mov
int
add
sbb
adc
popl
dec
dec
ds
mov
fiadds
jb
lods
movsl
ret
push
xchg
rcl
sbb
xchg
sbb
clc
movsl
ljmp
xchg
jb
loopne
jnp
arpl
inc
hlt
mov
mov
mov
ret
jns
mov
push
fisubs
sahf
fdivl
cmc
sbb
push
cli
in
lcall
aam
pop
rclb
xchg
loop
adc
ja
test
das
push
and
insb
and
bnd
adc
es
leave
push
xrelease
repnz
jge
jmp
xchg
loop
jo
pop
push
pop
stc
ja
cmp
sahf
adc
out
or
jo
adc
iret
pop
ljmp
addb
xor
sahf
xor
scas
scas
outsb
gs
pop
push
jmp
mov
mov
inc
inc
cmpb
jecxz
sub
nop
or
bnd
aaa
gs
ljmp
or
in
fldcw
aam
inc
imul
pop
iret
pop
xor
push
fdivl
push
sbb
repnz
jo
mov
testl
andb
jb
xchg
cmc
sub
cmp
cmpb
adc
repz
push
lods
call
mov
jecxz
loopne
insb
push
push
xchg
mov
lcall
xchg
push
jbe
or
inc
hlt
push
aaa
xor
jns
mov
fisubrl
mov
sahf
test
loopne
or
mov
mov
addr16
jbe
ljmp
xchg
xchg
push
lock
mov
xor
xchg
sub
mov
popf
lret
dec
mov
sub
jp
pop
mov
xor
push
push
cmp
and
cmp
fcompl
in
ljmp
inc
cmc
sbb
xor
aad
xor
push
xor
fsubrs
or
je
das
mov
mov
subl
push
fsub
sti
ja
icebp
xchg
add
add
cmp
pop
mov
stos
dec
and
sbb
lret
xchg
sub
aad
or
adc
xchg
xchg
test
into
jecxz
pop
imul
or
popf
jne
push
inc
mov
push
int
and
ja
popa
daa
xchg
xchg
dec
stos
or
in
int
sub
stos
lods
pop
add
pusha
mov
mov
sub
adc
pop
dec
mov
addl
mov
into
dec
roll
sub
mov
mov
jmp
es
add
mov
idivl
add
iret
fmuls
cmpsl
fxam
mov
sbb
inc
xor
fildl
ds
xor
pop
sub
aad
pop
test
xchg
ret
dec
fcompl
mov
push
insb
stc
shrb
daa
mov
push
adc
in
mov
lret
jge
mov
insl
lods
rcr
xor
push
xchg
insb
inc
inc
mov
ret
xor
adc
sbb
mov
push
aas
adc
or
cltd
mov
repz
in
mov
lods
test
pop
mov
jo
jl
sahf
mov
cmc
int3
mov
or
mov
xlat
out
pop
cmc
jne
sub
iret
stos
jae
daa
icebp
je
cld
push
call
mov
or
cmpsl
mov
outsl
sub
add
lods
and
mov
xor
es
sarl
test
and
adc
jbe
xchg
ja
or
ljmp
mov
jmp
xchg
xchg
test
cmp
mov
pop
push
iret
add
xor
xchg
je
sub
arpl
in
fisttps
lea
arpl
cwtl
das
daa
int3
movsb
mov
mov
stos
add
and
mov
scas
ss
sbb
call
mov
imul
adc
add
mov
push
das
jp
enter
xor
flds
push
or
dec
negb
dec
addl
popa
cmpsl
inc
sbb
sbb
mov
fs
and
mov
das
outsl
mov
nop
les
fwait
cmpb
jl
ljmp
clc
idiv
inc
stc
pop
sahf
in
ja
sub
mov
mov
jp
data16
push
imul
int
jb
mov
inc
push
adc
or
inc
sub
inc
clc
pushl
dec
ja
push
enter
test
pop
inc
leave
shlb
jg
sbb
sbb
push
cmpsb
jp
jae,pt
fdivp
jle
fcmovb
add
cltd
jns
sub
les
adc
or
loope
and
lods
fldl
dec
addr16
xchg
repz
insl
push
push
cmc
sub
leave
xor
cld
xor
cmp
lret
outsb
mov
jns
test
outsb
xchg
scas
mov
loopne
stc
insl
push
pop
pushl
pop
jg
or
fildl
shlb
aad
jns
mov
dec
jnp
decb
loope
add
fstl
adcb
sub
arpl
xlat
mov
cmp
test
xor
es
cs
stos
sbb
sub
pushf
ds
cwtl
out
jno
sbb
cmpsb
stos
loope
std
sbb
pop
cli
mov
mov
fucom
or
jns
xorb
jnp
subl
push
test
mov
or
jl
hlt
adc
mov
mov
mov
popa
push
xchg
and
cmpsb
shrb
lea
mov
call
inc
jle
adc
cmp
in
cltd
out
cmpsb
shr
xor
push
loop
out
loope
push
and
xor
js
sbb
pop
or
in
or
rorl
xchg
mov
pop
sbb
or
or
push
xor
jno
out
xchg
les
dec
pop
in
pop
cmp
out
clc
aam
gs
fdivrs
and
test
jg
cmpsl
xchg
xchg
ret
or
aam
movsb
and
or
xchg
lock
jnp
js
fisubs
cmpsb
sub
std
xor
xchg
or
add
outsl
cmpb
jp
and
mov
out
xchg
jle
sub
scas
or
add
xor
ljmp
mov
mov
inc
mov
lcall
mov
stos
dec
aaa
or
dec
adc
cli
out
in
push
xchg
out
cmp
mov
sbb
add
and
fdivrl
int
cmp
sbb
lret
loopne
cmp
movsl
and
pmulhw
test
sbbb
das
loope
cmpsb
hlt
aad
or
dec
and
outsl
shll
fwait
movsl
std
cmp
cmc
cmpsb
cltd
outsb
lret
mov
insl
movsb
or
imul
mov
cmpsb
clc
jns
xor
iret
xchg
pop
cld
xchg
pop
leave
push
cld
push
hlt
xchg
and
stos
imul
inc
cld
xor
cmp
les
fmul
cmp
mov
mov
aaa
xor
cmpsb
cltd
jo
mov
ficoms
movsb
mov
dec
xlat
gs
dec
or
mov
add
sbb
dec
repnz
xchg
jl
sub
cli
push
push
jo
scas
or
adcb
adc
sub
cs
mov
lods
dec
imul
pop
repz
pop
mov
or
sub
push
mov
stos
inc
xchg
jecxz
movsl
lock
sti
push
in
mov
pop
mov
jo
and
sub
xorl
out
fldt
mov
clc
mov
mov
lods
pop
movsl
scas
jmp
dec
jnp
les
push
sub
pop
stc
mov
inc
push
mov
or
mov
cmpb
mov
pop
adc
or
cli
push
dec
mov
push
cmpsl
mov
mov
dec
loopne
addr16
xchg
cmp
out
xor
decl
lods
orl
add
hlt
out
pop
mov
sub
cmpsb
adc
outsb
dec
data16
aad
out
mov
sub
test
loope
mov
push
pop
pop
jmp
rolb
sbb
test
mov
or
xor
into
mov
adc
xchg
loopne
dec
int
out
cmp
adc
lahf
sti
push
pusha
lods
add
imull
daa
jb
xlat
insl
mov
mov
mov
loope
mov
mov
pop
sub
pusha
xchg
ja
aad
push
adc
imul
mov
mov
movhpd
inc
aad
cmpsl
leave
jl
pushf
mov
lods
pop
mov
fisubrs
cwtl
and
dec
scas
mov
inc
out
and
fmulp
in
mov
jne
push
fbld
push
leave
xchg
outsb
gs
stc
xor
jb
stos
xchg
xchg
call
xorb
inc
cmp
jb
jb
stc
dec
xchg
mov
sti
hlt
int3
push
fcmovb
fnsave
cmp
mov
ror
xchg
or
rolb
sub
shlb
mov
mov
add
nop
xchg
mov
pop
or
pop
aad
ja
mov
mov
dec
pop
and
mov
xchg
sbb
test
iret
int3
push
mov
pop
cmp
data16
push
scas
inc
dec
or
sbbl
call
cmpsb
mov
and
jg
cmpsl
ljmp
mov
lahf
mov
int
pusha
sahf
mov
int3
es
gs
cmp
sahf
xchg
lret
jbe
fnstenv
fldt
and
sub
mov
jne
jae
jns
mov
fsts
or
testb
iret
mov
out
adc
inc
xor
dec
dec
xor
push
cwtl
and
jle
repnz
aas
aaa
hlt
xor
pop
enter
jp
cld
pop
adcb
xchg
pusha
into
pop
imul
fadd
es
insb
lret
mov
js
imulb
ret
add
inc
cmp
aas
repz
mov
pop
add
cmpsb
repnz
cmp
ret
leave
push
cmp
lahf
test
clc
loope
dec
xor
sahf
test
jecxz
out
jns
xor
dec
movsl
in
inc
outsl
push
or
and
dec
out
cltd
mov
jb
xor
loope
mov
pop
ret
mov
or
inc
icebp
and
inc
sub
cwtl
dec
lret
data16
iret
stos
rcl
call
jmp
xor
leave
sbb
or
push
xor
mov
shrb
mov
out
fmulp
xchg
int3
aas
cltd
xor
aam
fs
inc
inc
les
hlt
inc
outsl
mov
sbb
dec
adc
inc
lods
inc
mov
pop
mov
mov
std
xchg
add
mov
imul
loop
es
cmp
ret
in
push
outsb
push
fldt
into
stc
jbe
xchg
dec
xchg
movsb
jo
push
addr16
adc
push
std
fbld
fwait
test
leave
or
and
negl
pop
cwtl
cmp
shll
outsl
and
icebp
ja
mov
sub
sbb
lcall
xor
mov
pop
popf
fnstsw
jmp
aaa
rol
mov
or
add
lock
jecxz
sub
enter
mov
lods
xor
adc
cmp
inc
adc
cmp
repnz
jp
cmp
mov
pusha
sub
aas
push
test
loopne
out
push
ja
xchg
sub
mov
push
call
xchg
aaa
jno
adc
sar
push
jmp
out
pushf
mov
jo
insb
ss
pop
dec
or
push
mov
mov
pop
rorb
or
scas
xchg
cmp
aas
bound
fists
cmpsb
imul
push
cmp
sub
fucomip
cmp
push
adc
fists
pop
std
xchg
push
ror
cmp
scas
ret
xchg
int3
sbbb
cmp
adc
mov
imul
mov
loopne
rolb
push
jecxz
test
xchg
pop
pusha
insb
jp
ja
leave
push
cmpsb
fnsave
mov
mov
dec
popa
pop
mov
sbb
cmp
xchg
xor
enter
popf
add
sub
xchg
lret
sbb
into
ss
add
loop
call
sahf
dec
sbb
gs
mov
inc
pop
popf
aas
outsl
adc
stos
jp
out
xor
lock
test
xor
ds
xchg
scas
das
sbb
ljmp
mov
inc
or
lock
xchg
fnstcw
xchg
sub
cmpsb
icebp
pmaxsw
stos
adc
rcrb
inc
dec
sbb
scas
push
push
hlt
call
icebp
mov
je
pop
xor
mov
pop
iret
jno
jle
jno
push
mov
dec
cwtl
add
xchg
fst
sbb
xlat
xchg
lret
push
pop
mov
or
adc
sbb
jno
pop
jno
mov
mov
cld
aaa
jnp
xchg
pusha
imul
cli
cld
sbb
mov
inc
jae
sub
xchg
rol
mov
outsl
inc
ds
into
dec
and
fstpt
jp
cld
sub
adc
cld
sbbb
fcompp
in
inc
int
in
jmp
out
cmp
mov
nop
mov
cmpsb
sub
fst
or
pusha
inc
and
daa
clc
adc
rcrb
decl
mov
lret
imull
cmp
outsl
loop
sahf
xor
sub
fadd
mov
and
mov
clc
aam
xor
movl
and
add
js
inc
fmull
jno
push
test
lcall
ljmp
shlb
in
mov
pop
sbb
sbb
pop
push
cmp
cmc
push
imul
jb
jle
mov
leave
inc
in
mov
push
push
inc
movsb
pop
or
popf
stos
jmp
mov
inc
pop
xchg
push
mov
out
push
lahf
in
adc
enter
leave
add
setge
cli
das
aas
out
das
daa
jbe
sahf
stos
mov
sarl
dec
shl
addr16
jne
sbb
imul
movsl
inc
sub
sbb
or
ss
aam
mov
aam
xchg
push
ljmp
inc
jae
bound
and
cmp
out
dec
sbb
and
rclb
shl
mov
notb
mov
lcall
daa
test
xchg
nop
add
popf
cmp
dec
mov
jbe
popf
or
aaa
jnp
insl
mov
movsb
scas
bound
dec
and
xchg
mov
js
xor
jecxz
ja
scas
dec
mov
xchg
lock
jg
std
test
mov
push
int
and
in
ljmp
jl
addr16
into
inc
add
stos
inc
push
xchg
or
insb
lea
mov
push
xchg
jae
test
fs
lds
cld
jg
fbld
mov
adc
add
push
ljmp
cmp
int
addr16
mov
push
sar
das
mov
cmp
add
idivb
lock
pop
popa
sbb
ja
std
jbe
sbb
jnp
push
mov
lods
insb
push
je
mov
jo
cmp
push
mov
sub
lds
and
adc
pop
lods
shl
push
arpl
cwtl
lret
test
sbb
ffree
mov
lea
jne
gs
cmc
xchg
lods
xchg
sbb
mov
mov
sbb
sarl
fisubrs
cmp
push
sbb
mov
xor
mov
pop
push
daa
lds
iret
xchg
cmp
xchg
jge
pop
jmp
dec
pushf
push
xchg
lock
jp
jb
sub
add
shlb
mov
int3
in
jecxz
sti
movsb
mov
addr16
ljmp
inc
lret
sarb
inc
jnp
pop
xchg
mov
arpl
jae
les
cmp
mov
push
mov
out
jnp
pop
cmp
insl
stos
ljmp
adcl
add
ss
cmpsl
and
pushf
xor
repnz
imul
int3
mov
shlb
jno
daa
mov
insl
icebp
in
test
movsl
bound
lock
gs
orb
xor
adc
mov
jge
cmp
push
aam
aam
das
inc
int
add
fidivrs
jns
rclb
imul
test
pushaw
jns
stc
jg
aam
out
push
cmp
mov
dec
in
push
add
mov
and
add
sub
scas
jnp
jg
and
ret
cmp
mov
push
adc
fld
mov
lcall
and
ds
fisubl
adc
out
out
std
ret
jb
mov
lods
add
je
mov
stos
jl
mov
push
xchg
in
sbb
and
scas
and
adc
ss
hlt
cmp
inc
enter
hlt
clc
add
and
into
sbb
jb
gs
xor
jle
into
cltd
stos
or
outsb
dec
mov
push
test
test
popa
xor
out
inc
sbb
mov
lret
sub
cmp
sub
adc
jmp
notb
adc
sbb
fisttpll
cmp
aam
adc
fwait
jae
lods
popa
push
jo
mov
mov
or
or
aam
cs
cmp
les
lahf
xlat
int
cmpsb
lock
dec
xor
jmp
mov
sub
jl
scas
jge
xchg
fadd
or
xor
and
or
add
ret
mov
mov
adc
jae
icebp
out
je
aam
imul
loope
cli
sub
cmp
mov
std
inc
mov
clc
inc
or
mov
sbb
mov
mov
push
ja
adcb
aaa
data16
shrl
cwtl
js
add
mov
les
mov
jle
testl
or
push
lret
loope
gs
or
jb
stos
mov
mov
stc
dec
xchg
jle
rclb
xor
jge
das
movsl
lcall
sub
aas
andb
into
in
pop
mov
orb
sub
mov
xchg
rcrb
cmp
sub
mov
iret
xchg
rcrb
cltd
sti
sub
inc
and
add
pop
ret
sbb
pop
xchg
jge
add
bound
jle
sarl
fwait
loope
sub
dec
ret
nop
mov
or
add
add
fucomp
mov
movsl
xchg
outsl
ds
dec
daa
fbld
inc
inc
push
dec
outsb
push
fs
arpl
in
dec
jnp
ljmp
push
mov
jecxz
inc
mov
push
test
xchg
sbb
jb
hlt
lock
pusha
push
jge
cld
mov
clc
lea
mov
mov
push
jl
lods
cmp
dec
ficompl
repnz
in
test
xchg
insb
mov
vminps
push
cmp
in
hlt
cmp
and
xchg
pop
int3
fcoml
and
push
pop
add
pop
shl
jo
ljmp
das
pop
xchg
js
inc
mov
setb
inc
cmp
lea
shlb
popf
shrb
xchg
out
adc
cmc
enter
das
cmp
push
scas
xchg
xor
fnstsw
adc
add
mov
aaa
orl
icebp
lods
or
inc
pushf
ret
fcompl
jp
mov
adc
xchg
add
xchg
inc
iret
mov
jae
mov
sarb
aad
bound
dec
repz
rclb
add
data16
push
push
jno
js
test
lcall
pop
into
shlb
push
xor
test
pop
scas
fwait
add
push
inc
xor
xchg
push
cmp
fidivrs
les
adc
dec
xor
imul
pop
out
lock
cmp
mov
aad
jb
pop
or
pop
sbb
sarb
or
push
xchg
push
call
sub
inc
lret
mov
aad
sub
and
or
insb
adc
and
popa
loop
pusha
test
inc
ljmp
fsubs
xor
rclb
pop
in
jns
pop
xchg
out
cmp
inc
xor
lahf
fdivr
inc
xor
mov
sub
lods
enter
jp
sub
in
dec
cmp
sub
mov
clc
rorl
mov
mov
sub
push
pop
vmovupd
int3
shl
cmp
aad
push
leave
push
pop
icebp
jno
push
lods
inc
pushf
neg
in
mov
add
aas
test
das
pushf
shlb
mov
cmp
and
in
ret
mov
notl
fwait
ss
pcmpeqd
push
dec
nop
rcr
out
adc
and
mov
test
cwtl
gs
in
mov
clc
ret
or
mov
jnp
psubsb
imul
fcoms
xchg
fbld
scas
insl
ss
mov
sbb
inc
ds
aas
add
mov
int3
lods
adc
fstl
push
pop
sub
mov
ret
mov
and
jae
shll
repz
xor
pop
mov
push
xchg
data16
xchg
cmc
pop
jp
and
push
xchg
push
jmp
xchg
mov
popf
xchg
scas
clc
or
add
and
sbb
repnz
mov
sysexit
jle
loopne
xor
stc
sti
jbe
shlb
cmp
inc
dec
daa
shrl
imull
sub
cld
das
mov
pusha
ret
nop
inc
insb
xchg
lahf
outsl
inc
mov
sub
hlt
jae
insl
scas
and
inc
hlt
mov
neg
sarl
aad
sub
ret
sbb
inc
mov
repnz
popf
adc
xor
ds
and
push
mov
mov
adc
jb
frstor
mov
out
ror
push
fisubl
ret
nop
push
arpl
jle
pop
popf
fiaddl
push
xchg
xchg
mov
iret
dec
jp
mov
loope
push
mov
mov
ret
sub
adc
lock
sub
xchg
nop
add
sbb
inc
dec
and
repnz
jbe
sti
out
jg
fidivs
lret
jb
mov
add
mov
out
lea
mov
mov
push
daa
filds
add
cmpl
jecxz
jo
test
stos
es
cmp
sti
xlat
jb
js
sbb
inc
inc
into
jo
sbb
push
hlt
orb
lock
int
in
shrb
push
xchg
daa
xchg
jne
dec
outsl
and
jne
xchg
inc
jb
xchg
cmp
jp
cmc
mov
fisubrs
pop
rclb
mov
cmp
adc
mov
arpl
pop
pop
mov
fbld
adc
loope
popf
mov
repz
mov
sbb
jecxz
mov
xchg
jne
sub
lret
scas
or
push
or
jb
orb
testl
imul
lcall
pushf
xchg
push
int
int
xchg
or
popa
mov
out
sahf
push
mov
gs
xchg
and
pop
sbb
sbb
les
in
pop
add
stos
shlb
jg
inc
xor
inc
jae
push
jns
xchg
icebp
mov
mov
cli
lret
lds
shrb
in
outsb
lahf
pop
mov
ja
outsl
mov
cmc
mov
dec
into
xor
in
lods
jb
fwait
xchg
cmp
fildll
dec
mov
dec
inc
test
jmp
aad
imul
dec
call
std
sub
leave
out
push
and
loop
inc
mov
cmp
popa
pusha
mov
cmpsb
pop
dec
xor
cmc
jge
arpl
mov
or
pop
fldt
cmp
jno
jmp
enter
mov
xchg
inc
jge
mov
int3
in
testl
pop
rclb
into
cld
mov
paddq
in
adc
push
das
cmp
add
stos
pop
adc
or
xor
add
scas
adc
push
sbb
sub
push
xchg
setge
pop
repz
xchg
fldt
dec
lahf
scas
ror
aad
mov
cli
xchg
push
cmpsl
cmp
or
dec
icebp
jge
xchg
cmc
jne
xchg
mov
ret
pop
ja
insb
mov
mov
mov
rcrl
xor
stos
subl
xor
mov
loope
je
adc
mov
lret
arpl
sbb
push
lods
pop
jnp
push
push
add
xor
aad
add
aam
out
fisttpl
testb
pop
loop
mov
cmc
dec
icebp
and
lcall
cltd
and
push
mov
adc
xlat
inc
mov
add
inc
cs
sub
mov
in
mov
jle
outsl
cmc
inc
jbe
sbb
orb
and
or
mov
test
sbb
xorb
pop
call
mov
fwait
dec
adc
add
and
inc
testl
adc
ljmp
dec
mov
pop
ljmp
jge
in
fmul
pop
std
xor
jle
stos
and
rclb
sub
mov
xchg
scas
imul
lcall
mov
mov
decb
orl
adc
loop
cmp
jns
repz
lods
mov
and
sbb
sbb
or
sbb
jnp
fwait
add
push
jmp
add
arpl
shl
addr16
pop
loop
rorb
add
pusha
mov
divb
arpl
xchg
mov
jb
sbb
ret
cmpsb
sub
xchg
popa
lds
gs
stos
repz
inc
sbb
adc
sbbb
decb
xchg
mov
lahf
jb
mov
dec
mov
sbb
mov
sbb
jo
sbb
push
xchg
add
mov
popf
cmp
pop
jo
mov
jo
jno
out
jle
int
dec
adc
lock
sbb
add
add
daa
xor
std
js
mov
movsl
popa
test
std
and
jle
es
pop
lods
mov
dec
das
lret
mov
mov
cmc
mov
out
sub
xchg
loopne
pop
cmc
inc
inc
lcall
aad
mov
push
les
jmp
mov
cmc
js
mov
sbb
int3
cli
pop
xchg
movsl
out
sub
cmp
shrb
mov
and
fmuls
or
cs
mov
pusha
insb
rorb
or
js
int3
mov
mov
out
imul
and
add
push
inc
testl
add
insl
pop
add
dec
fsubr
cmp
lea
mov
adc
jecxz
movsb
call
ret
jg
sbb
jne
sbbb
imul
in
mov
dec
fidivs
push
adc
xchg
xchg
push
lcall
or
dec
inc
pop
cld
lea
ret
iret
repnz
pop
gs
in
test
clc
scas
xchg
xchg
mov
xchg
mov
and
jmp
mov
gs
sbb
int
rcrb
lods
cmp
lods
lods
scas
std
jb
or
cwtl
adc
in
xor
or
jecxz
push
cli
xor
sub
insl
and
imul
std
data16
mov
ds
scas
data16
mov
xorl
addr16
mov
mov
pushf
and
mov
or
inc
or
es
mov
movsb
dec
loop
and
cmc
test
xor
leave
xor
aam
stos
push
inc
insl
xlat
adc
sub
jno
cmp
or
cs
jl
add
mov
fwait
dec
roll
push
imul
call
mov
dec
jl
sbb
sub
js
xor
dec
inc
in
testl
hlt
mov
adc
popa
loope
adc
mov
pusha
out
out
es
mov
sub
arpl
ret
mov
aas
repnz
rclb
cli
mov
mov
js
mull
in
xor
mov
mov
mov
inc
adc
cs
sub
and
mov
mov
add
iret
jne
lods
jl
imul
gs
xchg
lock
out
inc
cmpb
xchg
adcb
scas
je
lahf
fistpl
cmp
int
ret
inc
pop
push
mov
cld
in
dec
gs
cwtl
les
fadds
pop
ficoml
xor
jg
add
sarl
sti
push
jge
pop
stc
pop
mov
repnz
xor
idivl
fidivl
je
dec
or
cmp
mov
outsl
jmp
cmp
js
fidivl
pop
mov
dec
jecxz
loopne
mov
add
stc
cltd
inc
enter
sbb
nop
cmc
add
push
sbb
xchg
push
xchg
push
je
ret
insb
jp
mov
jbe
repnz
mov
in
pusha
sub
add
lods
xchg
sbb
div
nop
push
cs
push
das
out
inc
fisubrs
dec
mov
mov
xchg
jae
push
cmp
movsl
sbb
daa
movsb
mov
lock
add
stc
jo
cmp
scas
sarl
test
outsb
or
popf
xorl
push
xor
repnz
mov
enter
xchg
inc
outsb
add
jge
sbb
clc
jo
xor
push
sbb
mov
insl
loop
jg
pop
sbb
inc
lcall
pop
outsl
setb
inc
mov
mov
ljmp
and
pop
dec
pop
nop
cmp
lods
jno
lahf
cmp
xor
fnstcw
clc
mov
roll
ret
add
push
arpl
adc
push
and
ret
adc
popa
mov
jns
xchg
xchg
out
pop
daa
dec
int
les
int3
xlat
jns
push
mov
xorl
xchg
sub
push
ret
lods
push
gs
push
add
adc
or
mov
add
scas
or
fmul
mov
mov
inc
icebp
inc
dec
pop
or
push
xchg
repnz
mov
pop
pop
mov
jl
mov
mov
gs
sbb
pop
adc
stc
outsl
jo
mov
cmp
es
push
lock
test
test
daa
shrl
jge
push
xchg
sub
pop
orb
mov
js
hlt
adc
pop
push
dec
push
lcall
add
imul
or
imul
imul
xlat
adc
and
mov
sbbb
in
mov
mov
or
jnp
add
das
aas
xor
rcrl
icebp
xchg
or
mov
cmp
inc
ss
loopne
pop
andl
pop
add
arpl
or
add
outsl
cli
xchg
enter
loope
test
xor
mov
aas
out
jmpw
mov
sub
shll
mov
pusha
outsl
or
lret
push
lock
mov
enter
jmp
jnp
dec
mov
mov
aam
pop
ja
std
inc
sub
mov
int
xchg
lcall
dec
rcll
js
fs
jo
aaa
out
jno
lcall
add
mov
in
add
sbb
int3
push
mov
ficoms
xchg
cmpsb
mov
sbb
cmp
jo
aaa
mov
adc
fwait
sbb
pop
out
push
jmp
push
int3
fwait
push
sbb
movsl
cmc
jno
mov
icebp
movsb
jne
cmpsb
xchg
lea
mov
push
pop
call
xor
test
ja
mov
cmp
mov
out
and
stos
jecxz
push
cltd
mov
push
add
imul
xor
cwtl
fs
dec
sub
rclb
or
test
mov
mov
es
mov
mov
push
dec
cs
ljmp
les
rclb
sub
and
cmc
ja
lock
sti
popa
push
sbb
insl
rcl
xchg
lahf
nop
pop
inc
insb
push
push
inc
dec
and
scas
mov
jno
mov
or
xor
fbld
sahf
pop
cmp
push
icebp
inc
adc
or
mov
test
sub
xchg
cmp
ljmp
scas
cmp
xchg
jp
in
cmp
mov
stos
xor
mov
lds
inc
push
cld
hlt
daa
out
dec
in
lds
lods
cmpsl
rolb
sub
inc
or
aas
jne
rolb
jnp
arpl
outsb
add
jno
cmp
or
mov
mov
cwtl
icebp
or
dec
cld
fsts
fwait
inc
mov
push
mov
je
hlt
mov
fimull
sub
sub
dec
xchg
adc
push
test
pop
jbe
int3
push
lock
xchg
or
inc
jmp
call
dec
mov
lret
lea
xchg
push
lods
popf
xlat
cmp
lods
insb
cmp
pop
test
imul
inc
mov
jbe
orl
xchg
int3
pop
lret
in
push
idiv
sbbl
lods
loop
jnp
mov
aam
push
xchg
lods
je
and
stos
fsubr
fs
shlb
aas
pop
adc
lahf
push
jno
movsb
popf
xchg
lods
xchg
xor
sahf
cmp
add
aas
inc
xor
testb
xor
scas
pop
mov
dec
lahf
adc
daa
lods
cmp
std
sbb
pop
inc
call
pinsrw
sbb
jecxz
jmp
jge
fsts
lds
mov
mov
sub
popa
sahf
adc
cmpl
dec
add
out
pushf
pop
dec
stos
std
out
or
movsl
fwait
enter
addr16
mov
fsts
pop
mov
push
aaa
outsb
sbb
sahf
inc
stos
test
inc
inc
and
jo
dec
push
jp
or
jno
out
movsl
xchg
sub
and
sub
pop
dec
push
movsl
pop
sub
xor
push
pushf
nop
adc
cli
cwtl
dec
push
push
pop
or
mov
push
sbbb
test
jne
popa
add
shlb
xor
jno
mov
int3
test
or
mov
stc
push
and
xor
mov
mov
mov
rcll
pop
xchg
push
loope
xchg
push
dec
cmpsb
into
inc
xchg
in
flds
enter
arpl
jp
mov
cmpsl
out
enter
fidivl
inc
testb
cmc
pop
inc
rcrl
lret
rorl
enter
rcrl
push
pop
pop
test
test
div
jp
aam
xchg
push
scas
ret
dec
imul
in
std
cmpsb
mov
or
cmp
pusha
out
fsubl
cli
or
out
lea
in
mov
loopne
push
sub
clc
mov
aas
cmp
outsl
xchg
repnz
stos
jae
sub
pop
fcmovne
pushf
jb
cmp
pop
mov
mov
loopne
mov
pop
or
or
ljmp
rcrl
push
shl
xchg
sahf
lahf
and
in
mov
popf
dec
xchg
test
sub
jge
push
std
inc
fcomi
dec
pop
cmp
jge
cmp
iret
lods
and
movsb
cmovo
pop
aaa
adc
cmp
adc
mov
inc
mov
mov
lods
add
sbb
rcr
cmp
jle
repz
jbe
pop
mov
das
fiaddl
cmpsl
sub
mov
sarb
mov
jne
or
sbb
jecxz
sbb
xchg
aam
pmulhuw
fistpll
cmpsl
adc
bound
xchg
jns
aas
dec
mov
movsb
daa
jg
call
add
lock
cmp
mov
and
inc
adc
pop
addb
inc
dec
daa
dec
and
mov
ja
jp
jns
stos
bound
xchg
inc
jnp
fsubrp
jle
stos
xor
pushl
cmc
insb
mov
mov
lret
inc
hlt
aas
sbb
mov
repnz
lret
jmp
orb
cmp
xor
hlt
mov
sbb
fists
push
fsubrs
fimull
xchg
xchg
jp
dec
cmp
sbb
into
xor
ret
push
data16
cmp
mov
xchg
mov
xor
rcrl
and
push
mov
inc
xor
inc
lcall
sub
daa
out
scas
aas
and
stos
or
popa
pusha
jno
mov
sti
mov
leave
push
dec
faddl
xor
ss
aam
pop
adc
pop
fsts
scas
pop
mov
jbe
rcrl
imulb
xchg
call
movsl
dec
or
mov
shrb
data16
adc
lods
loope
or
fucomip
jmp
xor
repz
and
dec
das
push
push
mov
lods
xchg
popa
push
mov
arpl
fdivs
repz
les
pop
jb
mov
push
or
xor
jmp
jno
mov
aaa
mov
daa
cli
leave
rcr
inc
add
mov
inc
cwtl
out
stc
loopnew
adc
xchg
pop
jecxz
push
or
pop
repnz
adc
xchg
push
xchg
mov
in
or
cltd
xchg
and
test
pop
sbb
adcb
test
rol
push
dec
in
je
mov
mov
rol
jg
xchg
test
lret
imul
mov
movsl
xchg
jge
dec
rol
scas
adc
loope
ss
rcr
jne
sbb
push
mov
cmp
repnz
add
arpl
fldt
je
enter
inc
repz
inc
cmpb
inc
push
push
add
imul
adc
dec
scas
shrb
add
mov
enter
inc
sbb
pop
repnz
out
add
js
stc
xor
ss
leave
outsb
insl
pop
adc
ficoml
push
add
mov
mov
movsl
cmp
add
sbb
sbb
nop
add
jg
in
and
sub
or
aam
stc
mov
or
mov
jle
popa
jmp
pop
leave
nop
lds
fistl
jg
aaa
insl
fildll
push
scas
adc
sub
addr16
dec
push
outsb
icebp
adc
nop
xchg
jecxz
xor
mov
xchg
cmp
or
cmp
test
lret
les
xchg
mov
xchg
cmp
jbe
shl
xor
ret
stos
sub
sub
mov
test
int
pop
pop
add
xchg
push
pop
es
rcrl
jg
fldcw
movsl
mull
jns
dec
mov
adc
emms
jo
aaa
ljmp
ds
add
negl
movsl
sbb
inc
adc
mov
out
daa
dec
mov
mov
and
lcall
mov
sbb
jne
push
out
insl
je
pop
dec
lods
pop
shl
pop
xor
inc
into
je
jmp
cs
and
jp
cmp
pop
sbb
cmpps
xchg
scas
call
xchg
xchg
xchg
push
pop
les
adc
into
cld
xor
jge
jnp
cwtl
mov
dec
repz
xor
add
movsb
clc
js
out
jecxz
pop
dec
push
out
mov
jle
lods
sub
jne
scas
sbb
xlat
pop
add
movsl
addr16
sub
cmpsl
push
pop
movsb
sub
outsl
repnz
loope
inc
testb
outsl
lds
sbb
inc
stos
dec
lcall
cmc
xchg
adc
xor
aad
push
stc
and
mov
cli
adc
fs
stos
sub
or
movsb
out
bnd
fnstsw
ficomps
cltd
leave
in
pop
jge
sbb
and
push
int3
out
cmp
xchg
shl
imul
mov
cltd
sbb
jp
cmp
sub
jbe
inc
incl
rcrb
ret
pop
popa
xor
cwtl
andl
mov
sub
jb
mov
jp
hlt
fucom
push
jmp
jb
les
les
lcall
std
dec
rorb
cmpl
gs
xchg
notl
das
add
mov
pusha
adc
cmpsl
das
dec
inc
in
mov
unpcklps
add
fnsave
push
andb
cmpsb
or
and
or
xor
je
pop
daa
adc
neg
movsb
adc
test
mov
insb
jg
cmp
inc
pop
lcall
popf
cmp
roll
ljmp
jmp
mov
dec
ljmp
out
adc
cmc
adc
push
push
call
push
inc
add
movsl
shrb
and
int3
out
fiadds
jge
pop
jmp
lahf
sub
repnz
mov
insl
std
sarb
cmpsb
les
cli
std
loop
mov
jle
mov
xlat
jmp
icebp
xchg
loopne
data16
pop
sbb
div
int3
popa
jno
insl
inc
imul
or
or
push
xlat
popf
sub
cli
push
idivb
call
inc
push
jb
fwait
ljmp
int
lea
mov
and
out
add
cmpsl
nop
and
jbe
add
mov
notl
pop
movsl
xchg
aas
mov
iret
cs
jmp
sbb
rolb
sbb
push
xor
stos
idivb
aaa
push
cmpb
sbb
push
sbbl
cwtl
imulb
daa
loopne
lcall
or
stos
test
sub
loope
mov
imul
cltd
cmc
and
dec
push
insb
outsb
mov
jp
outsb
in
jecxz
push
jl
cmpsb
xchg
jno
or
jp
outsb
out
cmp
dec
mov
push
xor
enter
es
ret
stos
aad
add
mov
imul
in
out
mov
loop
sub
xchg
sbb
fildll
push
loopne
fiadds
push
xchg
xchg
xlat
xchg
cltd
fldcw
push
push
push
out
mov
adc
cmp
pop
or
push
arpl
pop
and
subb
lea
cs
outsb
out
loopne
dec
scas
xchg
add
push
out
rcrb
cmc
movsb
adc
jno
insl
outsl
sti
fdivrl
cli
inc
mov
notb
fdivr
xor
lea
push
push
mov
inc
ret
inc
aaa
xchg
xor
lahf
aas
movsl
aam
call
adc
rcrl
fistps
sbb
mov
xor
mov
or
lcall
xor
scas
shlb
mov
addr16
sbb
fisubs
sbb
xor
lods
daa
inc
xchg
fimull
sbbl
daa
aam
sub
mov
les
std
mov
scas
adc
and
iret
xchg
int3
movsl
cmpsl
xor
push
in
in
out
mov
jo
or
push
push
inc
sub
pop
push
iret
mov
mov
xorl
mov
sahf
adc
movl
sbb
leave
jno
xchg
push
mov
scas
mov
stos
mov
jns
inc
pushf
lods
xor
inc
scas
lock
imul
call
cmp
mov
in
xor
push
dec
out
cmovg
inc
leave
sbb
fs
je
push
cmp
std
jb
mov
and
into
jno
or
mov
bswap
jmp
lea
mov
mov
cld
je
jo
insl
mov
cmp
jo
jmp
pop
cmp
push
sub
into
mov
in
sbb
call
dec
aad
repnz
jne
ret
mov
inc
mov
stc
lahf
cmpsl
inc
out
mov
cmp
out
repnz
add
jbe
inc
aam
ds
loope
insl
or
sarl
sub
jb
jns
ret
xor
loop
pop
mov
inc
fdiv
xchg
pop
cwtl
push
lcall
mov
call
data16
inc
les
mov
cmpb
pusha
cmc
jns
inc
jnp
addr16
push
negb
test
lret
sub
sti
sbb
ficoms
es
push
and
jae
xor
pop
scas
pop
aas
aaa
sbb
or
clc
repz
call
mov
sub
mov
mov
fsubrl
cli
jg
jge
repz
cmp
inc
aad
push
stc
pop
xchg
and
stos
aam
in
cwtl
or
sbb
popf
dec
iret
pushf
sahf
push
push
pop
push
lock
cwtl
sahf
dec
sbb
stos
imul
add
jmp
or
push
mov
cli
and
outsb
jmp
mov
lahf
imul
jbe
aaa
or
jbe
subb
sbb
outsb
mov
sbb
movsb
mov
mov
mov
les
mov
mov
lahf
repnz
jne
cmc
icebp
das
aaa
cli
or
mov
call
mov
int3
insb
fwait
and
loopne
dec
push
jns
fldcw
mov
pushf
jbe
leavew
outsl
in
shlb
pop
in
mov
test
in
inc
arpl
mov
sti
popa
fisubl
push
lods
pop
mov
out
addps
jg
dec
cwtl
xchg
inc
je,pn
mov
loop
sub
into
pop
divb
std
jb
add
out
push
jno
and
lock
xchg
jl
sub
addr16
adc
push
xorl
or
xor
pop
jge
xor
mov
inc
mov
shrl
jmp
es
or
mov
cli
nop
mov
adc
mov
outsb
mov
or
jp
ficoml
push
xorl
out
push
dec
xchg
lods
shrl
xor
jae
xor
sarl
pop
sbb
scas
mov
mov
mov
jns
lcall
cli
ss
stc
out
mov
rcrb
sbb
add
mov
add
movsl
sbb
push
pop
int
adc
adc
jbe
bound
and
mov
xor
bound
push
cmc
inc
std
rol
mov
dec
call
mov
xchg
xor
dec
clc
push
xor
imul
clc
loop
adc
test
loopne
repnz
pop
shl
insb
xchg
leave
ret
cmpsl
and
pusha
mov
test
outsb
mov
sbb
cmc
push
pop
ljmp
outsb
fcomp
adc
push
les
out
mov
lcall
jb
sub
push
aad
das
aaa
loop
sbb
test
sub
add
mov
icebp
sbb
pop
cld
xchg
ffree
xchg
insl
jg
fdivrl
pop
test
mov
xchg
xor
and
ljmp
mov
jle
dec
or
jecxz
add
push
cld
test
sti
icebp
pushf
inc
dec
gs
or
pop
mov
dec
test
pop
ja
repnz
add
iret
out
cld
pop
call
push
lahf
outsb
out
push
push
inc
sub
insb
movsb
pop
ljmp
mov
loop
inc
aas
cmp
push
inc
fucomip
les
rcrl
cmpsl
and
pop
mov
sub
inc
add
mov
int3
call
lods
inc
xchg
leave
xlat
xlat
or
push
and
fidivl
insb
rcl
adc
nop
addl
stc
pop
dec
cmp
repnz
xchg
fiaddl
arpl
cmp
jmp
pop
sub
lret
push
out
imul
call
push
pop
test
loop
test
stos
insb
flds
cmc
mov
jae
mov
iret
xchg
jns
mov
popa
xlat
fs
stc
or
in
mov
mov
sbb
mov
sub
jae
push
push
jmp
push
push
add
adc
xor
inc
jl
xchg
push
jne
push
pushf
push
shl
xor
insl
push
mov
and
cs
or
jne
or
int
call
dec
repz
dec
mov
push
jg
incl
clc
pop
mov
cmp
xor
cmpsl
push
add
cli
stos
test
mov
sbb
inc
xor
jge
fs
jmp
and
insb
xor
cwtl
pop
xchg
fsubrl
inc
rcrl
pop
out
mov
pop
std
add
repz
xchg
pop
mov
sub
in
add
adc
ret
mov
jecxz
aad
xor
lret
call
xchg
sbb
cmp
cmpsb
mov
dec
inc
mov
call
and
lea
mov
jb
jne
fstl
into
xchg
mov
cmc
adc
lea
dec
mov
adcb
fptan
stc
lret
xchg
lret
jo
and
push
xor
ret
lock
test
jle
mov
es
cltd
std
push
pushf
dec
sbb
lret
cmc
jb
ds
test
scas
das
mov
int3
dec
clc
mov
jo
mov
das
sub
hlt
or
mov
loop
mov
stc
ds
fsub
jecxz
and
out
outsl
dec
mov
fiadds
add
or
rolb
fistl
inc
imul
add
pop
and
jns
mov
out
and
lock
jp
data16
lock
inc
jo
divl
inc
dec
pop
or
test
xchg
enter
out
jne
push
mov
iret
out
mov
inc
inc
add
xchg
push
aaa
adc
lds
inc
or
dec
xor
test
stos
pop
int3
cmp
iret
icebp
dec
or
je
xchg
ss
push
mov
jnp
leave
ss
int
xor
aas
outsl
jo
xchg
sub
int3
adc
jo
cmp
xchg
cmpsl
dec
xor
out
js
sub
sbb
repz
mov
fs
mov
jmp
icebp
ud0
cmp
inc
das
repnz
inc
push
jno
nop
std
pop
jae
jb
push
or
pop
jno
out
dec
rclb
ds
adc
jae
xor
int
push
pop
add
xor
lock
loopne
inc
jecxz
dec
mov
cmp
adc
dec
fadds
pop
adc
das
pop
test
shrb
pushl
mov
aas
push
pop
adc
inc
xlat
pop
mov
inc
or
jno
sbb
fsubs
mov
adc
stos
jl
cmp
xor
cltd
outsl
xlat
les
push
int3
and
dec
int
push
sub
add
adc
jae
fadd
lock
movsb
pop
mov
movsl
mov
repz
jae
test
dec
lahf
mov
sbbl
push
jno
test
sbb
mov
cmp
mov
xchg
sbb
scas
adc
in
inc
mov
mov
mov
arpl
and
jb
gs
out
aam
xor
movsl
mov
cmpxchg
push
pop
icebp
loop
hlt
or
sbb
pop
inc
out
fdivrs
in
jg
fidivs
add
lods
setg
shrb
imul
inc
pop
ja
jb
mov
mov
pop
mov
sbb
ret
cli
jp
inc
ja
hlt
cmp
xchg
xchg
inc
das
adc
cmp
fwait
xchg
movsb
adc
mov
add
mov
lods
pop
dec
rcl
adc
and
dec
jge
decb
push
mov
sub
insb
dec
out
pusha
aad
dec
out
movsl
lods
fdivs
sbb
dec
or
cmp
mov
iret
daa
push
push
fsubrs
sahf
pop
pop
fwait
mov
jmp
loopne
outsl
pop
cmp
test
mov
aas
pushf
adc
lahf
push
add
out
cmp
and
out
movsl
gs
sbb
mov
popa
outsb
mov
std
imul
fiaddl
push
xchg
rorl
movb
in
mov
push
int3
cmp
cs
jg
imul
xchg
aam
das
daa
xchg
stos
movsb
mov
inc
mov
push
mov
add
icebp
cs
inc
push
addb
xchg
sub
outsl
jae
cltd
inc
or
xchg
jbe
orps
arpl
jg
mov
test
jle
out
sbb
je
cli
std
inc
mov
pop
sbb
sub
imul
jp
mov
push
jmp
lret
ss
adc
in
popa
adc
mulb
sub
inc
pop
dec
inc
mov
xor
or
lahf
sahf
pushf
sub
or
test
scas
jle
sbb
scas
add
daa
repz
lods
mov
add
inc
adc
add
cmp
ficompl
out
movsb
into
cli
shrb
ret
add
in
cs
mov
frstor
xchg
push
add
push
pop
scas
pop
cmp
adc
imul
rorl
test
loop
pop
jbe
ljmp
push
or
sahf
int
mov
hlt
xor
shrb
sbb
gs
xchg
stos
add
adc
xchg
fsubrl
data16
movsb
jno
dec
mov
dec
pop
inc
push
sub
mov
sub
adc
sbb
jp
mov
scas
push
push
and
pop
mov
scas
psrad
mov
fwait
cli
pusha
scas
pop
xor
sahf
pop
aas
mov
add
xchg
pusha
jno
shll
shrl
ss
aaa
cmp
push
loope
mov
or
addr16
sbb
je
out
xchg
outsl
cld
cmpsb
outsl
fstl
test
sub
mov
jne
gs
lcall
sub
push
jl
inc
icebp
sbb
icebp
inc
sbbl
and
inc
das
shrl
shll
iret
push
xor
in
in
je
mov
nop
dec
add
call
cmpsb
lock
adc
rol
and
xor
adc
cli
pop
cld
mov
pop
clc
jg
loopne
and
test
shll
lock
or
mov
lret
mov
mov
outsb
loop
adc
roll
pop
or
pop
popf
adc
stc
sub
mov
outsl
pop
stos
adcb
std
aad
pop
clc
cmpsl
pop
adc
test
jo
and
arpl
clc
mov
inc
sarl
mov
add
loop
and
cmp
push
out
fs
xor
jo
loopne
xchg
outsl
or
out
jne
movsb
icebp
jmp
pop
ds
pushf
movsl
out
popa
mov
adc
or
pop
sarl
jecxz
xor
mov
std
iret
hlt
test
and
add
lahf
arpl
sub
lock
xchg
sahf
fwait
pop
cmpsb
adc
leave
std
clc
and
jmp
jmp
fistpll
lcall
or
nop
or
inc
push
xor
cmp
dec
cli
push
ja
dec
push
lahf
jg
mov
cwtl
stos
xor
xor
orb
jle
mov
sbb
mov
or
scas
sarb
in
dec
cmp
push
loopne
and
and
xor
por
incl
xor
dec
andb
lcall
pop
or
les
push
adc
pop
pop
xchg
adc
jns
jne
enter
push
dec
jg
cld
fst
rcl
pop
addr16
fistps
mov
mov
push
jp
and
fs
sahf
push
rol
lods
add
aaa
mov
cmp
repz
ja
cld
inc
negl
dec
inc
in
call
cltd
fs
push
aas
loope
sbb
and
sbb
aam
cli
push
jecxz
push
comiss
mov
sahf
and
mov
sub
pop
clc
inc
in
scas
int
shlb
mov
std
xchg
daa
adc
out
xor
loope
cwtl
aas
popf
fistl
movl
dec
and
in
insl
out
xchg
lcall
or
fnsave
shrb
pop
ja
ja
iret
cmc
lods
mov
and
ss
int
inc
ror
in
adc
and
mov
jecxz
pop
sub
sbb
movsl
icebp
jle
insl
inc
aas
fsubrp
add
repz
mov
mov
loop
repz
or
lret
adc
mov
xchg
fisubrs
push
sbb
mov
mov
ficomps
enter
scas
mov
aaa
dec
mov
aam
dec
in
pop
pop
loop
arpl
and
in
jmp
inc
rcll
jo
cmp
and
mov
jno
insl
push
js
movsb
add
sub
out
cwtl
test
into
movsl
xchg
idivl
xchg
mov
push
ror
sub
push
cmp
ret
push
mov
adc
or
inc
and
fldenv
lcall
stos
icebp
cmp
push
inc
cmp
pop
xchg
js
push
aas
adc
repnz
xor
jo
stc
cmp
sub
inc
pop
mov
dec
imul
cltd
cmp
daa
push
pop
out
jae
ljmp
repz
or
aas
cmp
or
jp
clc
js
fwait
sbb
lahf
addl
loopne
mov
pop
or
jg
and
pop
pusha
cmp
in
pop
push
cmp
outsb
and
in
xchg
and
daa
aaa
sbb
cmp
adc
cmc
ja
mov
xchg
subl
jne
lcall
xchg
sub
fcmovu
loop
leave
aaa
test
mov
and
mov
sarb
dec
imul
jno
sahf
add
lods
call
and
repz
ret
mov
and
xchg
fs
mov
or
xchg
out
scas
xor
popf
shl
movsb
stos
unpcklps
stos
push
push
or
and
xadd
sbb
dec
out
sub
pop
loop
sub
pop
rolb
lock
test
mov
cwtl
or
xchg
popf
mov
push
or
jp
fwait
out
movsl
push
pop
scas
xlat
jl
push
mov
outsb
cmp
sub
inc
pop
cld
aaa
add
jb
fs
in
cltd
mov
outsb
inc
pop
dec
and
mov
fnsave
movsl
ja
cmc
in
test
cli
pop
adc
fcoml
cs
shlb
int3
fmulp
in
aad
add
nop
sbb
xchg
jmp
lcall
push
js
pop
xchg
pop
mov
or
lods
ret
push
cmpsb
jne
popf
jecxz
jns
out
stos
mov
add
push
sub
or
outsl
push
pop
test
ficomps
cmpsb
or
dec
test
inc
test
shlb
push
pop
add
and
icebp
insw
mov
stos
cmp
scas
add
or
pop
mov
repz
je
xor
ss
stos
lcall
pop
daa
shll
push
mov
xchg
jno
ja
mov
jmp
jle
bound
xchg
adc
mov
jno
and
or
push
adc
loopne
inc
or
es
mov
movsb
mov
clc
push
pop
scas
pop
sbb
inc
gs
cmp
cltd
test
aaa
add
jo
inc
lret
dec
test
loope
shr
mov
and
dec
add
jae
xlat
gs
add
cld
adc
fistpl
mov
je
xor
shll
lods
jnp
movsb
rcll
jp
ret
push
mov
xchg
adc
push
rclb
push
insb
fs
fcompl
scas
maskmovq
cltd
lahf
aas
and
rolb
mov
mov
sub
int3
adc
pop
pop
movsl
ret
in
mov
dec
testl
xor
sub
jp
int
mov
aam
jb
adc
sahf
mov
repnz
daa
fcomip
sub
pop
mov
loope
mov
sbb
jbe
pop
mov
clc
loope
jmp
adc
in
fwait
pop
mov
je
mov
hlt
mov
mov
sub
pop
movsb
loope
fmull
push
js
xchg
cmp
jno
sbb
mov
loopne
jl
pop
shl
pop
adc
imul
sti
ret
rolb
push
jmp
sbb
adc
mov
lea
movsl
jge
xorb
mov
inc
aam
jb
jbe
fwait
sbb
mov
add
cmp
mov
test
xchg
mov
gs
mov
fwait
dec
lock
and
sbb
xchg
cltd
sub
stos
xchg
add
jg
xchg
fists
push
sti
mov
mov
xlat
fdivrl
xchg
or
xlat
out
stos
add
add
dec
in
mov
inc
fistpll
scas
aam
jnp
cmp
shlb
push
insl
fildll
sbb
sub
mov
add
mov
push
xchg
in
rcrb
mov
jmp
adc
fstpl
adc
ljmp
aam
jp
inc
and
dec
pop
lahf
test
or
adc
repz
insb
andl
stc
sub
in
icebp
adcl
pop
std
xchg
xchg
test
divl
pop
xchg
mov
xor
std
push
out
xchg
ljmp
inc
les
daa
loope
mov
mov
pop
or
mov
rorb
outsl
sarb
sti
add
xchg
rcrb
movsl
sbb
ficomps
mov
fidivrs
pop
or
in
insl
push
cli
insl
out
or
inc
jecxz
push
test
jae
leave
push
pusha
popf
popf
stc
ljmp
jle
dec
xor
stos
inc
jns
imul
stos
pop
xor
test
rolb
fnstcw
adc
adc
jae
jp
daa
dec
scas
in
hlt
fcmove
outsb
ret
das
mov
gs
loopne
xor
lods
mov
push
sbb
popl
dec
outsl
xchg
test
push
dec
pusha
xor
negb
adc
dec
out
js
push
pusha
push
adc
or
test
push
aad
dec
insl
push
outsb
xchg
pop
das
add
fucomip
int3
shlb
pushf
insl
pop
ret
ja
mov
cli
dec
adc
lret
cmpsb
push
in
outsb
ljmp
mov
ss
das
cli
mov
call
cmpsb
jg
jmp
adc
rcll
addl
mov
adc
or
outsl
jle
adcl
loope
mov
loopne
into
mov
rclb
adc
jb
movsl
mov
loopne
xchg
shl
cs
mov
mov
out
and
mov
test
das
inc
xor
sub
es
push
out
xchg
xchg
jbe
or
sbb
dec
jns
push
adc
leave
out
imul
mov
scas
mov
inc
dec
addr16
into
mov
cmpsl
jb
rorb
ljmp
push
test
mov
mov
mov
icebp
sub
mov
jb
nop
xchg
ret
ret
enter
inc
mov
negb
push
test
push
xor
call
jg
mov
addr16
mov
clc
dec
push
sub
xchg
pop
mov
inc
les
mov
push
xchg
mov
jnp
call
call
test
mov
and
mov
es
lods
and
popf
in
in
cmp
mov
add
push
sbb
or
adc
inc
dec
sbb
fwait
icebp
pop
gs
xchg
mov
ret
lret
mov
mov
push
orb
loopne
pop
outsl
out
and
xchg
xor
popl
or
xchg
test
mov
dec
icebp
pushl
mov
cmp
outsb
or
mov
adc
inc
mov
lods
jg
inc
mov
dec
pop
cmp
or
mov
mov
mov
cwtl
dec
add
iret
int3
divb
movsl
push
push
sti
popa
mov
insb
push
push
dec
cwtl
addb
scas
or
clc
fs
adc
dec
push
lret
into
sub
outsl
push
xchg
dec
push
cld
push
push
js
and
cmp
ret
inc
add
daa
outsl
out
nop
pop
cmp
and
mov
jae
iret
jb
push
jg
pop
repz
xlat
pop
fistpl
sbb
add
mov
inc
loopne
daa
adc
loope
jnp
mov
push
fldcw
adc
inc
sub
mov
daa
sub
inc
adc
sub
xchg
cmpb
test
icebp
or
gs
pusha
dec
lds
out
adc
hlt
xchg
stos
loope
int3
les
lcall
mov
pop
push
or
push
pusha
nop
stos
incl
sarb
sbb
loopne
scas
daa
push
divb
mov
movsb
or
add
and
mov
push
sub
or
pop
sub
dec
aaa
pushf
mov
dec
dec
push
jnp
icebp
cs
daa
cs
outsb
mov
pusha
push
lret
adc
sub
fildll
out
les
test
insb
lret
movaps
inc
mov
xchg
push
inc
fistpll
mov
les
and
stos
cmc
and
pop
sbb
lahf
pop
adcb
inc
scas
pop
lods
mov
jae
movzbl
or
jb
and
push
leave
repz
rcr
int
or
lahf
sbb
dec
sti
inc
lret
lods
push
xor
push
fs
gs
add
sub
jl
push
xor
aas
leave
sbb
fnstenv
test
pop
and
or
add
subb
mov
mov
in
cmp
test
js
mov
xor
aad
dec
popa
jmp
fistpl
ljmp
mov
mov
daa
neg
push
cmpsb
arpl
xor
mov
addb
dec
dec
mov
cs
movsw
je
mov
loopne
and
xlat
dec
repz
das
dec
mov
jnp
and
mov
adc
daa
test
addl
fisubl
stos
test
adc
imulb
push
xchg
push
loop
sbb
pop
les
or
imul
mov
xchg
mov
push
in
fwait
mov
mov
jecxz
xchg
cld
roll
testl
dec
adc
push
xchg
dec
ljmp
xchg
cmpsb
jmp
sub
mov
shrl
cmp
or
aam
push
in
fldcw
scas
test
fwait
aad
aam
xor
in
fnstenv
or
xor
fdiv
pop
push
mov
dec
cwtl
push
dec
ds
push
sbb
aaa
adc
or
push
call
aaa
sti
add
imull
hlt
les
mov
jp
pop
lret
or
jmp
lfs
add
cmp
dec
fwait
shll
and
adc
push
ret
scas
jno
push
and
adc
pusha
sahf
call
paddq
mov
push
and
push
std
dec
xor
testl
or
mov
lock
mov
loopne
mov
jae
or
xor
in
push
push
cmp
xchg
jge
dec
pop
mov
das
push
jecxz
adc
xchg
xor
ret
or
fdivr
pop
mov
jno
je
mov
cmp
mov
dec
loop
mov
pop
aas
or
push
je
push
sub
fs
insl
mov
inc
call
lods
out
popf
mov
push
add
ds
xor
mov
jge
and
es
icebp
sub
mov
mov
or
test
das
mov
std
test
pop
ss
push
negb
cmpsb
adcb
or
mov
in
iret
xor
cmp
or
dec
stos
xchg
push
mov
inc
insb
sbb
sbb
jp
xchg
sub
fmuls
sti
frndint
add
xor
push
inc
mov
jmp
jo
loope
lret
and
inc
out
add
jnp
push
out
cwtl
sub
fwait
roll
xor
push
aam
leave
sbb
es
mov
dec
lcall
addr16
or
repz
outsl
insl
rclb
es
fcoml
lods
jp
xchg
fwait
inc
gs
jb
lret
xchg
testb
add
mov
in
out
xrelease
inc
push
inc
mov
sub
or
jnp
xor
and
test
push
aaa
push
inc
dec
jns
sub
sub
iret
int
shrb
mov
movsb
loop
outsb
fstpt
sbb
outsl
or
xorb
iret
xchg
push
push
mov
or
lock
pop
jne
cld
ds
xchg
push
mov
mov
bnd
fstpt
push
mov
imul
aad
std
inc
push
pop
adc
mov
sub
mov
inc
mov
add
xchg
push
ds
mov
scas
or
shl
and
stos
fnstenv
add
aad
aad
mov
sbb
lea
or
loopne
mov
inc
xor
pop
xor
xor
xor
xlat
shll
cmp
add
aaa
push
pop
sub
jmp
pop
dec
ror
jno
fistl
aad
rcrl
es
pop
mov
fisttps
fldenv
xor
es
into
add
jb
or
in
or
iret
mov
lea
mov
and
pop
in
lock
xor
imul
test
mov
jp
dec
mov
sub
and
pop
pop
or
dec
adcb
dec
hlt
jle
dec
rorl
and
mov
comiss
int
sub
dec
dec
stos
jne
cwtl
pop
cmp
or
mov
jbe
xchg
loopne
cmp
pop
arpl
aas
push
or
jne
push
in
push
xchg
adcl
out
les
je
shlb
aam
outsb
aas
add
aas
cmp
shll
shl
cmc
popa
arpl
notb
and
xchg
mov
std
int
xor
jecxz
insl
mov
call
cmp
int3
adc
pop
adc
fnstsw
movsl
mov
mov
shrl
and
or
add
sub
sbb
ret
enter
push
add
lret
sub
fdivl
in
cltd
xchg
inc
hlt
stc
push
dec
fdivr
push
fisubl
roll
pop
push
fisubrs
or
pop
cmp
ljmp
je
push
mov
dec
or
mov
ss
es
xrstor
cmpsl
cs
push
scas
xor
ret
mov
jno
mov
xor
movsl
call
jle
push
fsubrs
adc
pop
scas
daa
xor
out
add
in
and
add
xlat
and
ret
sti
sub
cld
mov
sbb
mov
sub
mov
int
aas
imul
or
repnz
mov
cmp
dec
fnstcw
rcrb
mov
pop
or
xchg
mov
or
ds
in
in
xchg
stc
push
cmpsb
xrelease
inc
pop
inc
mov
and
scas
jnp
mov
cmp
repz
or
and
pusha
dec
negl
xor
jnp
cld
in
sbb
daa
and
mov
mov
fmuls
pushf
mov
mov
enter
pop
andb
mov
sbb
leave
lds
fcmovb
cwtl
jp
int
ret
push
and
lock
mov
mov
insb
rcrl
jmp
xchg
cmpsb
rcll
cmpsb
push
movsl
mov
mov
pusha
sti
cmp
sub
adc
loope
push
dec
movsl
mov
iret
mov
jmp
loop
xor
adc
jle
xchg
and
xor
inc
xor
jb
mov
jbe
mov
inc
cwtl
rolb
mov
mov
daa
jp
mov
loopne
test
repnz
addr16
jno
jmp
fwait
pop
idivb
rorl
mov
mov
xor
fdivrl
lcall
mov
mov
xor
adc
sub
lea
jne
ficomps
and
shrl
clc
sbb
dec
sbb
mov
pop
sub
lods
xchg
push
fwait
cmpb
ret
ds
xor
aad
sbb
add
push
sub
loop
mov
sbb
insl
inc
enter
mov
cmc
je
xchg
push
aas
push
icebp
mov
mov
sub
adc
jg
sbb
in
repnz
stc
pop
icebp
imul
out
inc
and
lahf
fs
cmp
scas
mov
jns
cmp
mov
xchg
inc
xchg
int3
mov
iret
push
lock
cmp
sbb
inc
fmuls
imul
xor
out
in
sbb
sub
xchg
enter
js
lret
mov
outsl
mov
jns
in
fcoms
mov
push
fadd
sub
pusha
loop
mov
pop
fistl
adc
aam
inc
es
pop
and
pop
enter
ja
xchg
incb
adc
mov
fstps
sub
push
test
mov
sbb
mov
jge
mov
sbb
adc
lods
cs
int3
shll
xchg
sub
mov
pop
loop
int3
jp
loope
push
stos
dec
dec
andl
mov
push
xchg
inc
test
leave
mov
cmpsb
cs
adc
cmp
dec
ds
call
mov
mov
mov
xor
or
xchg
mov
xlat
in
lret
pop
nop
imul
rcrb
inc
mov
call
add
push
out
negb
dec
out
in
sub
call
lcall
dec
sti
loope
or
mov
iret
lret
sub
movsb
add
cmpb
or
dec
mov
repz
jg
sub
xchg
imul
imul
loope
aam
test
fs
pushf
sub
jge
sub
sbb
mov
sub
int3
das
lea
adc
lock
add
divl
lds
stos
xor
and
out
xor
sub
inc
xor
lods
dec
and
inc
fsts
push
das
popa
push
dec
dec
sarl
rcrb
rcrl
std
ja
aam
sbb
xlat
and
xor
cmc
enter
jb
aas
xchg
adc
push
aad
xor
sbb
push
icebp
jp
outsb
and
cmp
or
testl
inc
enter
jecxz
stc
stos
mov
jecxz
dec
shrb
and
and
lods
jbe
and
in
cwtl
cmp
loop
les
movsb
or
cmp
pushf
ret
jmp
sahf
ljmp
filds
clc
shll
fwait
fwait
push
fldcw
add
rolb
shlb
pop
push
insl
add
arpl
shll
mov
push
fldt
pop
jp
xchg
jae
fistpll
ljmp
xchg
jge
mov
fwait
pop
and
and
mov
in
cmp
cmp
sti
cwtl
mov
es
mull
enter
outsl
add
rol
fcomp
push
subl
hlt
pop
imul
adc
scas
cmc
mov
and
ret
frstor
aas
adc
pop
add
jo
inc
mov
and
repnz
add
xor
enter
mov
sbb
test
xchg
jle
push
pop
fcmovne
jl
insl
xlat
mov
cmp
mov
mov
adc
xchg
jo
dec
jg
xlat
xchg
es
and
ja
test
mov
sti
aas
xchg
xor
jge
push
cmp
jl
insb
jae
pop
lahf
lret
push
cmp
stc
sar
ret
xchg
dec
mov
icebp
mov
mov
push
jae
flds
mov
and
lcall
inc
outsl
enter
fs
inc
out
mov
pop
sub
inc
loopne
into
je
scas
je
mov
and
mov
push
mov
cmp
ffree
stos
cmc
cwtl
cs
lret
sti
fisubl
imull
sbb
sub
imul
adc
cmp
adc
fisubs
mov
push
and
jl
push
pop
test
cli
lods
imul
outsl
cli
jmp
jle
or
les
or
add
push
mov
ficoms
and
mov
or
mov
and
ffree
sbbb
mov
mov
pusha
mov
dec
lods
das
cmc
ret
mov
pop
cmp
push
xchg
lods
and
mov
inc
into
add
nop
cmpsl
cmc
mov
repnz
sbb
fists
cmp
jns
and
rolb
pushf
lea
sub
rcll
push
mov
sub
fisubs
mov
bound
out
lods
mov
mov
dec
cmpsl
push
push
jae
or
mov
pop
test
jbe
cmp
hlt
lods
mov
xorl
test
inc
jp
inc
push
out
fs
jge
or
xchg
jns
and
inc
inc
sbb
cld
repnz
sub
popf
sti
sub
addr16
mov
sub
mov
jp
daa
pop
inc
enter
std
rcrl
mov
ja
repnz
ja
pushf
push
mov
lret
imul
fcmovnu
sbb
dec
mov
andb
nop
sub
push
mov
enter
push
sub
popa
lea
push
pop
xchg
rcl
lahf
roll
jge
jle
dec
test
fstl
test
gs
out
inc
in
pop
inc
or
jno
mov
sbb
rcrl
jl
lahf
jb
daa
ljmp
jno
xchg
push
bound
cmpsl
xor
inc
inc
xchg
xor
shlb
sbb
mov
outsl
xlat
lahf
mov
xlat
xchg
test
or
cmpsl
xchg
mov
addb
inc
pop
cmp
into
aam
fldt
add
jo
and
inc
sbb
jl
movsb
hlt
mov
not
mov
adc
inc
stos
daa
leave
aam
cmp
out
fwait
cli
inc
push
stos
inc
add
pop
xchg
popa
mov
mul
lahf
frstor
inc
test
pushl
mov
jp
sub
outsb
aaa
pop
clc
test
stos
add
add
pop
inc
pop
clc
jbe
fs
jbe
lock
pop
hlt
xor
pop
inc
cs
xor
jg
pop
gs
pop
add
or
lods
sahf
data16
lret
lcall
mov
sub
ret
imul
movl
dec
jno
aad
xor
fsubrl
testl
aaa
repz
das
out
lods
or
sub
xchg
nop
test
ficoml
jae
jbe
mov
pushf
adc
ret
scas
pop
test
add
push
xchg
mov
cmp
jb
mov
ss
xor
movsb
mov
push
mov
nop
xchg
mov
cmp
sti
mov
sti
shll
icebp
inc
popa
mov
ds
dec
sub
subb
push
xchg
fucom
enter
stos
jbe
je
lods
jb
jp
call
and
inc
sub
adc
arpl
lret
and
testl
dec
mov
mov
imul
add
xchg
cmp
adc
jns
push
cmp
in
sbb
out
push
inc
jle
rorl
mov
adc
inc
int3
xor
or
xchg
mov
pop
xchg
adc
jo
push
adc
and
dec
jecxz
cmp
mov
loop
xchg
js
inc
xor
sbb
jno
pop
cmp
jecxz
inc
iret
add
subb
mov
xor
outsb
and
je
loop
lock
inc
addl
cmc
fnstsw
push
inc
ret
sbb
or
divb
jmp
mov
cltd
movsl
sbb
add
cmpsl
mov
dec
push
push
add
cltd
scas
in
aaa
push
je
int3
pop
dec
xchg
mov
push
cmp
stos
adc
adc
leave
mov
cmp
mov
hlt
adc
out
jmp
sub
notb
js
out
sbb
jbe
mov
mov
jns
mov
loopne
dec
ss
mov
dec
mov
push
push
mov
and
cmp
cmpsl
into
pop
sbbl
dec
cmp
daa
and
push
mov
mov
push
xchg
xchg
xchg
and
loope
sbb
in
movsl
or
adc
lds
in
aas
fwait
sub
cmp
in
fmuls
clc
movsb
fdivs
aam
std
jne
les
sub
cmc
adc
aad
insb
inc
sarb
adc
xchg
mov
jecxz
xchg
sub
es
mov
imul
je
nop
aaa
cmp
mov
ja
dec
dec
je
add
aas
fsub
xor
lret
mov
pop
sbb
ljmp
pop
push
mov
xchg
mov
or
test
fmulp
or
in
xchg
cmp
sub
out
xchg
xor
jg
mov
add
in
sub
xchg
mov
sbb
je
xor
fists
cli
clc
sbb
movsl
shll
add
xchg
cmp
cld
jae
adc
xchg
loopne
xchg
adc
xor
jnp
sbb
push
pop
push
test
mov
es
pop
push
mov
ljmp
stos
pop
mov
shl
ljmp
aaa
pusha
out
push
inc
es
adc
outsl
imul
loopne
mov
lret
jmp
fldl
cmp
lcall
out
lea
gs
movsl
repnz
lcall
sub
fwait
mov
mov
mov
iret
dec
in
or
sub
cmp
mov
jb
adc
jb
add
pop
in
into
jp
imul
dec
and
fnstcw
ret
pop
pop
add
and
jg
clc
inc
mov
lret
push
arpl
movb
pushf
in
das
pop
je
in
ds
mov
rorb
mov
push
dec
xor
push
xor
iret
iret
lret
cmp
xchg
pop
dec
jne
ds
sub
out
int3
jmp
imul
shl
inc
aam
or
movsl
ljmp
lret
sbb
insb
das
iret
pushf
fucomi
es
xchg
push
sbb
leave
sti
lock
lret
push
cmpsb
popa
and
nop
mov
cmp
in
pusha
or
mov
faddl
iret
outsb
push
cmpsb
stc
pop
es
or
sub
sarl
stos
mov
aam
insb
and
cltd
std
dec
aaa
insl
or
mov
mov
lret
jg
imul
decb
dec
sub
xchg
pushf
and
gs
push
rol
sbb
push
sub
cli
or
pop
ss
js
cmpsl
repz
fwait
in
pop
repnz
test
xchg
cmp
hlt
adc
pop
leave
xchg
in
rorb
mov
cmp
inc
addr16
in
in
adc
std
ret
scas
stos
push
imul
insb
loop
clc
jbe
sahf
jo
xchg
add
adc
push
or
fisubs
inc
mov
leave
adc
lods
mov
lahf
shll
jbe
push
xor
sub
es
lock
cmp
icebp
test
xchg
push
adc
outsb
push
addr16
adc
xor
popf
add
jge
add
in
xorl
dec
dec
sbb
aad
aam
xlat
sti
inc
aam
mov
arpl
push
xchg
adc
pop
test
shrb
jecxz
and
in
aas
pop
int
filds
xor
cmpsb
icebp
push
mov
enter
mov
mov
pop
push
push
sub
push
ror
aam
dec
mov
xchg
xchg
pop
testl
fcmovb
mov
in
fcompl
rolb
cmc
xor
popa
decb
mull
mov
mov
sub
movsl
or
jb
add
or
mov
mov
or
mov
into
and
and
cwtl
cltd
fwait
nop
or
icebp
popf
inc
sub
mov
sbb
jno
leave
orl
dec
and
fxch
icebp
lods
mov
pop
testl
xchg
inc
or
mov
mov
popa
add
sbb
loop
insb
pop
pusha
mov
inc
mov
mov
add
sahf
sahf
xor
jle
xchg
xor
hlt
lret
add
dec
int
xor
ret
mov
addr16
inc
mov
cmp
jle
int
insl
call
push
call
stos
pop
fisubrl
push
loope
xor
jne
insb
fsubrs
ret
xlat
mov
sbb
repz
mov
cs
mov
lcall
or
xchg
movsl
stos
sub
out
sbb
sub
or
ss
gs
jae
sbb
pop
divl
loope
pop
xor
ret
cmp
lock
and
mov
push
dec
aam
or
add
aaa
pop
mov
sbb
call
xrelease
xlat
ja
mov
inc
aaa
sub
push
push
mov
cmp
mov
fs
aam
nop
and
std
iret
sub
aaa
pop
add
push
xchg
xor
sub
out
jl
sub
scas
mov
rcrl
pusha
cmpsl
aam
mov
sbb
mov
push
enter
cltd
arpl
push
ljmp
loope
call
xor
sbb
test
mov
aaa
pop
es
test
cwtl
fists
xchg
es
jo
lcall
add
mov
enter
test
jb
fldt
mov
lahf
or
push
jo
add
sar
inc
pop
sbb
aas
xchg
mov
sbb
test
mov
scas
lods
inc
xor
jle
or
aas
ret
and
sub
and
add
fwait
dec
inc
xor
dec
push
inc
jno
into
mov
push
fisttpll
cmp
xchg
dec
and
in
dec
push
hlt
add
adc
or
push
cwtl
push
mov
cs
ss
push
adc
sbb
mov
std
mov
ret
cmp
lds
test
pop
push
pop
sub
lret
xor
lock
int3
mov
stc
lcall
popf
out
lret
or
sbb
dec
mov
and
jbe
cwtl
jle
cmpsb
mov
lods
cwtl
test
iret
push
pop
push
sub
adc
lds
inc
es
orl
jae
lret
and
push
call
sahf
outsb
out
loop
mov
inc
in
fistpl
sub
dec
mov
into
mov
das
stc
xchg
rep
dec
movsl
lds
lods
push
push
sti
stos
and
inc
xlat
popa
push
sub
in
cmp
mov
push
les
mov
adc
loop
out
mov
fisttpl
cmp
fstps
insb
add
clc
jmp
push
pop
mov
imul
call
cmc
fwait
xlat
in
push
loop
out
nop
jns
incb
pop
das
xor
ret
and
sbb
mov
mov
cmp
jb
pop
mov
adc
mov
clc
xlat
add
adc
mov
cmp
add
dec
cmp
jl
sbb
mov
in
and
call
jl
inc
jecxz
movsb
int3
out
pop
inc
mov
mov
dec
enter
ret
xchg
iret
imull
ret
test
and
mov
xchg
andb
jg
pop
jae
inc
adc
sahf
into
cwtl
adc
sbb
aaa
mov
jmp
xor
lds
mov
mov
mov
loop
lds
xchg
dec
sub
pop
in
dec
and
rcrb
mov
out
jo
xor
sub
notl
bound
pop
cmp
mov
in
add
mov
push
faddl
mov
test
pop
cmpsl
es
sbb
fwait
out
jno
mov
xchg
das
loop
adc
mov
jo
lret
movsl
test
mov
cmp
je
xchg
push
xchg
loop
mov
xorw
xor
arpl
lods
lods
mov
push
mov
popf
test
nop
das
movsl
out
mov
iret
ss
mov
xchg
mov
adc
loopne
out
inc
bound
ss
or
mov
jl
and
mov
in
xchg
or
lret
and
push
clc
and
pop
sub
inc
sbbl
jl
cmp
mov
xor
jg
inc
insb
cmpsl
out
sbbl
lret
xchg
es
adc
cmpsl
mov
mov
push
pop
adc
sahf
mov
test
popa
fwait
xchg
movsb
mov
daa
dec
sbb
xlat
mov
hlt
adc
xchg
imul
es
and
or
mulb
pusha
jl,pt
push
jo
pop
dec
push
cld
xorb
outsb
pop
mov
mov
call
fisttpl
insb
push
dec
test
loop
xchg
lock
popf
loop
lahf
out
aas
mov
test
mov
and
pop
jecxz
inc
and
fidivrl
xor
movsl
xor
inc
cs
js
pop
test
add
mov
enter
inc
cmpsb
es
jl
xchg
repz
xchg
xchg
cmc
sbb
arpl
mov
aaa
or
test
leave
clc
clc
out
inc
push
add
xor
icebp
xchg
sahf
stc
push
xor
mov
xchg
aaa
jns
dec
ds
popa
or
mov
repnz
fadds
sub
mov
in
mov
push
mov
test
out
lods
fiaddl
out
push
or
fcmovne
iret
icebp
mov
call
popa
daa
mov
xchg
push
pop
sub
lods
ret
scas
sbb
jne
sarb
fdivrl
push
add
inc
shrl
cmp
mov
shll
push
sub
jo
shll
fwait
adc
mov
insl
insb
push
cmpsl
out
dec
daa
xchg
dec
scas
arpl
icebp
imul
mov
and
adc
popl
push
jle
pusha
xor
fnstsw
add
or
add
cmp
fdivl
ja
or
pop
cmp
pop
outsl
cmpsl
cmp
inc
mov
mov
fsub
movb
out
nop
mov
rcrb
iret
pop
lret
mov
jnp
pop
xchg
inc
rep
adc
mov
les
mov
js
sahf
stos
xchg
enter
notl
push
les
jb
idiv
push
jns
xor
imul
mov
jo
add
jg
lea
cld
dec
jns
xchg
testl
and
push
and
out
xchg
and
and
xor
sbb
dec
iret
dec
imul
xchg
and
loope
rorl
xacquire
and
lahf
mov
ret
data16
sub
or
mov
mov
in
aaa
or
or
push
scas
xor
inc
dec
xor
and
mov
loopne
add
stos
mov
sbb
cmp
mov
btc
rcl
popa
aad
mov
or
sub
pop
cmp
ret
icebp
sahf
in
mov
nop
sahf
test
push
mov
ljmp
pop
adc
imul
aaa
push
xchg
add
pop
hlt
dec
loope
in
xor
add
mov
addr16
pushf
arpl
and
sbb
aam
cmp
push
lods
pop
dec
add
ja
add
push
inc
ss
push
test
dec
mov
into
scas
stos
or
pop
sbb
loopne
inc
nop
cs
or
mov
cwtl
pop
or
mov
aaa
xor
les
das
pop
xchg
imul
sti
or
out
sub
dec
inc
loop
sub
pop
mov
inc
cmp
pop
loopne
nop
out
add
testb
lret
test
jp
xor
and
fs
or
lcall
push
sbb
mov
test
rclb
push
movsl
sbb
inc
das
xchg
leave
xor
or
jo
xchg
pop
outsb
imul
fidivl
jae
dec
jnp
ret
mov
and
xchg
pop
outsl
stos
in
scas
int
xor
inc
and
cmp
dec
mov
movsb
sub
push
cmpsl
pushf
xor
cmc
adc
fwait
mov
lock
rcrl
insl
pop
pop
fst
push
jge
addb
loope
addr16
mov
sahf
out
jge
scas
jno
incb
out
adc
dec
pop
mov
ja
jp
push
xchg
jge
xchg
in
mov
cld
in
cld
mov
xchg
xor
test
lahf
xchg
mov
jne
mov
bound
filds
push
push
dec
pop
lret
push
jmp
mov
into
andl
lds
dec
mov
adc
cmc
movd
dec
dec
or
mov
inc
mov
push
pop
popa
iret
push
jns
mov
cli
inc
or
xchg
js
push
fcmove
aaa
inc
fsubrp
jle
xchg
push
lret
and
jp
dec
scas
ss
mov
addr16
dec
cmp
fcmovb
mulb
out
scas
and
cmc
movsl
loope
push
ljmp
mov
aas
lods
cld
mov
push
aas
and
pushf
sbb
adc
popf
push
inc
stos
add
in
aas
and
mov
xchg
arpl
out
xor
sahf
fdivs
test
mov
sahf
and
mov
ja
in
mov
aam
inc
mov
xchg
adc
clc
mov
movsb
ss
je
incb
adc
mov
mov
pop
sarl
cltd
ds
loope
icebp
push
call
sbb
es
aad
test
jl
lahf
push
cmp
pop
aad
lods
push
and
dec
fidivl
clc
xor
push
shrl
dec
jnp
xlat
jmp
cmp
xchg
repnz
fucomp
jp
mov
sbb
out
cmp
jg
sbb
dec
lods
sbb
aas
psllw
inc
mov
inc
xor
jns
les
sbb
dec
shll
dec
movsb
pop
mov
sbbl
cltd
imul
pop
imul
mov
xor
sbb
sbb
mov
insl
ret
into
or
roll
rcll
jnp
mov
mov
mov
cs
pop
fdivrp
loope
js
push
inc
mov
cltd
xor
dec
adc
ret
scas
negl
std
loope
add
call
int
es
dec
negb
and
xchg
and
pop
add
add
push
les
in
cmpl
ret
aas
cmp
push
push
jl
jle
dec
in
mov
cmpsl
adc
sub
mov
out
data16
rcll
adcb
test
daa
push
dec
dec
in
repz
orb
pop
pop
arpl
int
outsl
mov
cmp
pop
xchg
mov
or
mov
sub
ficompl
inc
pusha
fidivrs
dec
shlb
mov
cmp
fs
popl
mov
lcall
or
leave
fldenv
jp
pusha
jmp
fnstenv
xor
pop
ljmp
data16
add
cli
mov
jl
mov
loope
add
outsb
sub
add
inc
in
jo
xor
dec
dec
arpl
adc
pop
pusha
mov
in
addr16
lods
ror
shll
aad
in
adcb
cld
pop
shl
dec
add
lcall
loop
sub
and
iret
in
and
pushf
sbb
push
dec
jl
or
push
cmp
push
out
outsb
pop
ret
and
stos
mov
imul
outsb
adc
sahf
aaa
into
or
fimuls
subl
in
xor
jae
cmpsl
mov
mov
mov
pop
jg
out
push
aas
ficoml
jo
mov
fwait
stos
lcall
pusha
loop
cs
xchg
pop
incb
sahf
fisubrs
add
mov
xchg
cltd
or
jp
int
jo
shll
inc
cmpb
lret
scas
jae,pn
cwtl
movsl
in
jle
mov
jl
popf
cmc
sub
pop
shl
jbe
pop
arpl
mulb
jae
loop
negb
mov
imul
and
jp
cli
adc
les
or
in
in
jmp
sub
into
pop
pop
rorb
in
push
push
psrld
add
add
jne
jns
sbb
cltd
out
pop
push
sub
jno
stos
xchg
ljmp
cwtl
ss
jp
sti
mov
and
mov
popf
jbe
and
cltd
rorb
mov
push
fidivs
or
sbb
adc
add
and
sub
mov
jae
in
add
bnd
fcomps
mov
sbb
cli
sbb
xor
mov
push
push
lcall
jmp
ljmp
mov
jge
xchg
dec
jne
mov
sub
xchg
ss
enter
mov
push
divl
cmp
inc
notl
decb
mov
or
stos
xchg
xchg
or
push
femms
movsl
xor
ja
outsl
fiadds
jnp
or
popa
dec
sbbl
aas
mov
incb
gs
jbe
or
inc
xchg
jmp
pushf
pop
data16
jns
test
test
inc
lcall
out
mov
sbb
daa
bnd
adc
mov
jne
lret
ret
xchg
test
imul
pop
mov
push
push
mov
and
dec
in
pop
popf
les
test
in
or
shrb
into
push
loopne
or
int3
out
mov
pop
flds
and
ret
xchg
push
jns
inc
or
loop
ljmp
cmp
xchg
and
negl
sbbl
pop
dec
movsb
inc
mov
data16
cmpsl
pop
mov
fldl
sbb
add
inc
mov
pop
out
repz
bound
lods
mov
xchg
pop
stc
add
lock
fwait
popa
adc
hlt
out
sbb
sbb
jnp
mov
int
adc
push
pop
and
movsb
sti
es
and
jecxz
or
or
out
xor
dec
xor
ds
mov
add
or
inc
aam
jno
fs
repz
ja
cmp
scas
sarb
ljmp
call
les
insb
sbb
pop
jo
fwait
pop
push
lea
iret
cmpsb
push
jnp
sub
int
pushf
jl
jmp
std
inc
add
mov
push
lret
cltd
icebp
inc
push
sbbl
xchg
or
xor
int
jbe
push
inc
in
xchg
insb
aas
xchg
dec
lds
and
outsb
jp
jb
in
sbb
jnp
stos
stos
pop
and
insb
xor
inc
rcr
pop
ret
xlat
jno
mov
or
ficoms
push
jae
std
mov
inc
jge
cmpsb
jne
jle
inc
jbe
cli
add
sbb
jl
pushf
outsl
mov
or
add
xchg
das
cmp
test
dec
mov
enter
dec
out
popa
insb
xor
jecxz
mov
movsb
outsb
incb
fistl
cmpsl
sub
xchg
aad
loopew
sahf
icebp
pop
add
jb
ret
into
push
adc
and
bound
mov
dec
mov
int3
xchg
sub
dec
xlat
je
xchg
ret
pushf
in
ljmp
loop
jg
sub
dec
subb
cmc
jecxz
mov
in
xchg
mov
rolb
test
addb
jle
push
jne
imul
sbb
rorl
mov
xor
rdpmc
ja
movsl
ja
fidivs
pop
dec
mov
test
dec
mov
insl
aaa
adc
sbb
pop
and
fs
jae
cmpsl
into
popf
jnp
dec
clc
addr16
lcall
test
insb
hlt
mov
push
fcmovb
pushf
and
xor
sub
fstpt
fbstp
mov
add
es
mulb
xor
push
cmp
jnp
mov
cmpsb
repz
inc
sar
in
xchg
pop
loop
sbb
ljmp
cld
nop
adc
cmp
es
push
cmp
jnp
mov
loope
mov
push
fisubrl
rcrb
xor
cmp
inc
xor
ret
mov
cli
sub
and
push
rcll
sbb
stc
mov
ds
push
movsl
aaa
mov
lods
inc
add
in
mov
jl
or
imul
dec
jg
enter
and
leave
sub
cmp
and
xor
loopne
lret
lea
push
call
aad
xor
sbb
jnp,pt
sbb
adc
test
aad
and
add
inc
or
jne
in
rcl
lcall
sbb
sbb
insb
jecxz
xor
pop
fiadds
fsts
jb
jb
push
call
daa
adc
loopne
es
xchg
movsl
rol
fistpl
xchg
popf
xchg
jne
push
ret
popl
dec
cmp
or
inc
pop
xlat
cli
xlat
push
and
jnp
test
lret
cld
daa
xchg
out
je
mov
adc
xchg
cmp
stc
adc
ficoml
inc
pop
pop
push
adc
pop
dec
jp
push
call
mov
imulb
xchg
jo
push
not
jmp
pop
aam
lds
loopne
lods
cmpsl
dec
mov
sbb
adc
pop
loopne
push
and
cmp
inc
jl
popf
outsb
sahf
push
shl
pop
mov
sbb
shl
iret
cmc
aas
repnz
jae
sbb
daa
mov
js
cmp
pushf
add
jl
lods
int
inc
adc
stos
aaa
push
sbbl
adc
mov
sbb
out
push
imul
sub
imulb
lods
ret
jecxz
jmp
sub
js
test
sbb
mov
cmpsb
mov
repz
arpl
jae
or
dec
loope
out
adc
int3
ljmp
xchg
inc
bound
xchg
shlb
xchg
jl
ret
in
fistps
sbbb
xor
xor
cmp
lea
rolb
nop
inc
dec
jmp
sub
cli
push
dec
push
mov
das
pop
or
xor
jae
pop
xchg
xor
dec
pop
push
arpl
rcrb
aaa
pop
or
inc
movsb
movsb
mov
js
sahf
int3
enter
cmpsb
mov
or
loopne
int3
mov
movsb
loope
xchg
data16
push
scas
jb
jno
push
sub
or
sbb
mov
dec
icebp
cwtl
jns
inc
xor
fistpl
jae
je
testb
aaa
inc
fwait
in
mov
popa
sub
jle
lret
scas
out
push
mov
imul
dec
stos
mov
aad
aam
movsl
inc
and
inc
xor
pop
out
loopne
stos
cmp
xlat
in
mov
and
push
sbb
sub
dec
mov
mov
push
pop
enter
add
adc
test
mov
mov
insl
je
xorb
mov
lods
add
nop
sbb
fmulp
push
pop
jbe
stc
dec
dec
adc
cwtl
push
jae
or
ret
mov
mov
gs
stos
call
cwtl
cmp
stos
xor
xchg
push
je
dec
and
dec
jmp
jne
sahf
xlat
fnstcw
repnz
pop
or
in
cmp
pop
jno
pop
stc
mov
mov
repnz
sar
leave
jge
mov
sub
mov
in
xchg
sti
xchg
cmp
in
sbb
sbb
jne
ficompl
xor
cmpsb
aam
mov
push
pop
mov
sti
test
xchg
ret
lret
lock
neg
roll
call
pop
inc
mov
pop
popa
sbb
ljmp
inc
into
in
pop
jp
push
or
mov
dec
scas
jp
xor
int
cmpsl
in
gs
or
dec
pusha
add
jne
sub
add
popf
loope
rcrl
inc
aaa
test
mov
xor
mov
add
fcompl
cmpsb
mov
cmp
cmp
mov
pop
stc
idivb
mov
xor
dec
mov
lds
cmp
mov
loop
rorb
dec
push
mov
sti
daa
insl
pop
fisttps
sub
test
loope
call
xor
sub
ds
mov
bound
push
ret
js
mov
lock
push
das
mov
cs
stc
cmp
sub
xor
nop
mov
fmull
xchg
dec
xor
dec
mov
mov
jge
or
push
stos
sub
popa
cmp
mov
repnz
mov
fildll
inc
popf
lea
xchg
js
out
adc
jbe
sti
fstps
mov
cli
aaa
idivb
push
jne
sbb
ljmp
popf
lods
lods
hlt
cmp
insl
cmp
mov
pusha
inc
and
sahf
jne
push
test
or
fwait
in
mov
push
call
js
cld
outsl
lahf
inc
mov
lret
xchg
add
mov
add
lret
cmpsl
jb
jb
rcll
addr16
adc
bound
jbe
imul
ljmp
or
stc
je
fs
lea
ljmp
push
mov
mov
mov
imul
inc
or
jo
rorl
mov
mov
out
adc
pushf
pop
lods
fwait
lret
pop
fiadds
pop
and
pop
pusha
dec
sub
es
test
push
adc
sbb
or
jo,pn
into
jae
bound
arpl
cmpl
lock
push
push
loop
js
mov
insb
sti
xchg
push
loope
jb
adc
sbb
int
imul
mov
push
pop
adcl
test
clc
mov
lret
scas
inc
mov
mov
cmp
leave
push
pop
sbb
cmp
cmp
inc
test
in
ja
jns
sbb
test
dec
cmp
sub
lahf
pop
jb
fsin
jle
ffreep
mov
out
inc
scas
popf
ss
push
jbe
out
imul
sub
mov
jge
push
decb
ret
js
sub
push
sub
sbb
mov
popa
ret
push
xor
pop
fcomip
aas
cmp
mov
sbb
adc
lods
idivb
scas
xchg
lods
ds
clc
in
jl,pn
inc
sbb
pop
or
add
iret
icebp
outsl
push
dec
mov
nop
nop
mov
xchg
push
cmpsl
adc
push
cmpsb
subl
int3
popf
jb
loop
lret
in
repz
add
sub
jno
inc
lods
mov
jnp
pop
icebp
movsb
out
jb
mov
arpl
or
test
movsb
mov
pop
pusha
sub
cmp
les
scas
popf
inc
imul
mov
hlt
gs
xchg
xlat
inc
ficoml
push
xchg
popf
popa
aas
pop
cwtl
imul
mov
lods
das
push
lods
sub
dec
or
jne
sahf
cmc
movsb
lods
adcl
jle
or
ret
inc
push
sub
sbb
push
fstpt
sub
inc
push
repz
rcrb
add
sub
push
pop
rcr
push
icebp
sub
out
mov
lahf
pop
cld
repz
xchg
dec
pop
rclb
lret
push
cmpsl
into
inc
fucomip
pop
outsl
cmp
mov
fs
and
inc
loopne
lret
sbb
mov
pop
pop
ret
mov
lods
sbb
add
sbb
or
jo
dec
push
movsl
das
mov
push
and
add
dec
sti
xchg
loope
xchg
fnstcw
jecxz
sub
mov
push
insl
mov
rorb
sub
sbbl
or
cmp
push
pop
rolb
xchg
push
xor
mov
pop
and
into
insl
pop
fsubl
call
insl
add
pop
dec
cmp
fstpt
cmp
int3
and
push
jb
ja
pop
mov
xor
nop
stos
outsb
jmp
inc
inc
daa
icebp
dec
dec
out
jbe
test
jo
xor
ret
scas
xchg
out
mov
jbe
dec
cmp
sbb
icebp
inc
fcmovu
cmpsb
dec
lret
stos
out
sbb
mov
ret
adc
stos
mov
arpl
xor
mov
mov
and
sbb
rcrb
cmp
jnp
adc
dec
into
dec
mov
cmpxchg
and
popf
rolb
loopne
pusha
movsb
inc
inc
xor
mov
loope
faddl
xor
push
ret
lcall
roll
jae
imul
pop
fidivl
sbb
dec
dec
sub
push
in
test
or
dec
mov
push
cmp
xchg
push
mov
cmp
shr
stc
push
imul
shrb
pusha
rclb
push
mov
ret
test
mov
cmp
and
adc
bound
add
insb
pop
sahf
cmpsl
inc
mov
mov
in
imulb
xor
cmpsl
ja
daa
lods
enter
mov
mov
xchg
insl
lret
das
jle
and
loop
lea
xor
pop
mov
mov
inc
sti
aas
inc
inc
jae
repnz
pushf
push
inc
daa
jae
js
jl
xchg
adcl
mov
cmp
sbb
js
and
mov
sbb
in
push
jae
xchg
cmpl
sti
and
inc
adc
xor
jns
inc
outsb
push
das
inc
mov
add
jns
push
je
inc
mov
dec
and
subl
testl
scas
enter
push
mov
and
out
adc
lods
aas
cld
inc
pop
sahf
mov
mov
mov
daa
mov
pop
mov
and
or
sub
mov
test
imul
jl
add
add
sub
mov
jne
mov
or
lret
inc
xchg
add
out
in
add
xor
popa
pop
pusha
lahf
rclb
pusha
into
repz
push
inc
loop
push
push
call
adc
adc
lods
mov
test
xchg
mov
push
test
addr16
xchg
test
jae
paddw
mov
fistps
and
scas
ret
test
mov
mov
enter
pop
jge
or
lods
cmp
ja
ret
fiaddl
dec
fneni(8087
divb
xor
ljmp
jmp
push
movsl
dec
pextrw
mov
test
xlat
sub
mov
lods
adc
rolb
mov
in
sub
out
dec
movsl
test
loopne
mov
xchg
mov
insl
les
push
lock
popa
pop
adc
mov
pop
call
lds
cwtl
testl
outsl
jl
xchg
imul
xchg
shrb
cmp
sub
add
rcrl
sbb
cs
inc
mov
arpl
gs
mov
dec
jb
cs
push
cld
subl
ds
int
bound
out
or
and
adc
add
mov
mov
rcrb
stos
xorb
sub
push
dec
iret
push
arpl
mov
ljmp
stc
jo
lret
or
imul
dec
sahf
dec
cmpsl
pusha
sub
out
aam
jo
and
push
jge
inc
sbb
movsl
xchg
jnp
loop
mov
ja
xor
and
das
push
lcall
or
insb
int3
iret
ja
add
cmp
loop
int3
push
clc
bound
ret
xchg
aad
mov
imul
and
and
test
cs
mov
adc
insl
cli
push
mov
sahf
mov
and
push
negb
leave
xchg
cmp
dec
and
jo
addr16
sbb
lret
fdivs
push
fists
fsubl
xlat
sahf
fincstp
sub
mov
scas
loopne
xchg
jae
divb
jbe
push
cmpsl
inc
sahf
mov
out
adc
mov
xchg
xchg
fldcw
data16
ret
std
js
fstpl
aad
adcl
enter
fidivs
mov
add
ficoml
pop
pushf
pop
xchg
sbb
gs
dec
mov
lret
jle
or
or
outsl
cmp
pop
pop
lods
daa
lods
xlat
sbbb
ret
cwtl
ret
flds
shlb
inc
inc
sub
push
les
in
dec
cmpsb
mov
lea
jns
sarb
subb
popa
cmp
add
cmpl
add
xchg
inc
nop
push
movsb
movl
in
mov
push
out
fnsave
sub
fildl
or
loopne
xchg
in
dec
pop
outsl
lret
xchg
jle
add
inc
inc
xchg
push
mov
jne
lcall
adc
sahf
cmpsl
cmp
jle
jae
push
mov
faddp
arpl
jmp
stc
add
ss
sbb
mov
cmp
pop
and
jbe
pusha
enter
lahf
pop
xor
pop
je
lcall
mov
sti
jl
out
pop
mov
cmp
fdivrl
sbb
adc
inc
push
cmp
fsts
sar
push
mov
xchg
lock
scas
scas
sub
test
xor
insl
push
inc
rcr
sub
fbstp
outsl
sub
stos
xor
test
push
and
cmc
addr16
sarb
jl
push
mov
pusha
sub
rclb
and
out
pop
fmulp
scas
push
bound
incb
mov
out
aaa
xlat
dec
bound
and
push
repz
cmp
das
or
or
inc
adc
loope
leave
into
adc
push
push
int3
andl
imul
fucomi
cmp
repz
xor
mov
add
sarb
and
push
mov
xor
lods
roll
andps
stc
loope
lret
divb
enter
xchg
int3
mov
add
subl
adc
mov
shll
lods
or
add
lcall
and
stc
xchg
add
push
adc
adc
inc
and
outsb
lcall
mov
movsl
sub
ja
and
andl
ret
pusha
xchg
adc
pop
sub
push
xchg
imul
in
xor
test
ss
inc
fisttpl
pusha
xchg
xorl
dec
jl
dec
sub
mov
xchg
dec
test
mov
gs
stc
loopne
xor
in
int
repz
cmc
mov
scas
mov
jmp
ror
inc
sti
rorl
jmp
add
dec
sub
push
mov
fldt
jmp
rcl
sbb
and
dec
jo
cmp
or
andb
out
ja
decb
les
adc
dec
jmp
dec
jle
insl
cli
out
inc
loope
push
repnz
mov
shrb
out
sarb
and
pop
mov
scas
or
test
dec
int
shll
push
fdivrl
mov
xchg
icebp
mov
ret
sub
sbb
and
sub
int
fsts
or
addb
jmp
imul
jmp
cli
cmpsl
mov
adcb
fcoms
push
inc
push
push
repnz
mov
jne
mov
and
push
popa
dec
dec
pop
pop
iret
in
fsubs
scas
inc
lret
xchg
add
mov
movsl
lcall
xor
pushf
pusha
cmc
rep
aas
xchg
fucomip
fs
out
pop
pop
shrl
and
lock
pop
mov
jbe
mov
jecxz
ret
and
lahf
jae
sarb
push
push
pop
out
mov
mov
cmp
mov
aad
pop
inc
and
mov
xor
scas
and
and
push
pop
jbe
pop
or
leave
pop
int
pop
rcrl
lods
jecxz
adc
and
insb
iret
dec
scas
xchg
es
mov
dec
cmp
movsb
jnp
aad
pusha
add
lcall
icebp
or
inc
out
add
push
cmpsb
movsb
in
scas
mov
je
test
mov
push
jecxz
push
jb
mov
pop
inc
ja
std
adc
xchg
cmc
mov
inc
lock
adc
sahf
repnz
mov
jae
lods
inc
cmp
cmp
push
std
mov
pop
adc
jbe
xor
push
jl
cltd
ds
nop
mov
fmul
test
pop
mov
rolb
das
xor
push
lahf
scas
adc
dec
sub
mov
out
mov
inc
mov
lea
out
adc
mov
xor
inc
js
shlb
jg
add
adc
jl
mov
std
aad
pushf
jmp
jmp
mov
xchg
lea
shl
dec
lcall
mov
inc
out
lods
das
cmc
daa
mov
iret
iret
xor
xchg
inc
xchg
dec
sbb
push
je
movsb
pop
ficomps
dec
es
into
cmp
inc
loope
push
xchg
and
jg
add
inc
out
ljmp
cltd
popl
sbb
repnz
fnstenv
ljmp
jbe
inc
mov
adc
out
add
mov
jne
mov
fwait
sbbb
mov
stc
mov
add
out
repz
cld
xchg
rcll
and
jle
mov
xchg
mov
inc
push
mov
mull
sar
jno
imul
pop
sahf
test
iret
lea
mov
mov
daa
subl
sub
lahf
mov
stos
or
sbb
dec
imul
jge
inc
jno
in
jg
push
dec
mov
sti
negb
mov
ljmp
jmp
sarl
sbb
pop
xlat
iret
and
mov
adc
xchg
mov
repz
sbb
pop
add
dec
jns
push
lods
orl
nop
pop
pop
iret
inc
fucomi
xchg
js
lea
push
mov
and
mov
dec
sbb
in
fcompl
push
jo
out
dec
loopne
jno
loope
cli
psubsw
aaa
imul
in
inc
pop
pop
jp
mov
dec
sarl
outsb
test
lcall
or
jge
fdivrl
add
or
or
adc
sbb
nop
ljmp
fsubrl
orl
clc
clc
test
rorl
xor
mov
cmovns
push
movsb
movsl
add
jae
mov
mov
mulb
cmpsb
push
or
icebp
int3
pop
fisttps
xor
adc
fmuls
nop
lcall
lods
jo
jb
scas
cs
aas
pop
sub
pop
je
pop
jo
mov
jl
mov
xchg
test
cli
cmp
dec
enter
stc
jecxz
stos
loopne
imul
cld
in
daa
xchg
sub
mov
insl
cmpl
pop
arpl
xchg
aam
xor
mov
leave
xchg
int3
pop
pop
or
ret
insl
jne
jecxz
add
std
push
lods
mov
mov
rcrl
push
cmpsl
loop
sarb
pop
stos
xchg
sub
ret
ds
test
mov
shll
pop
xor
add
lahf
stos
push
pusha
or
test
ret
adc
push
sbb
std
mov
lods
jmp
clc
imul
mov
adc
cwtl
add
lods
sub
rolb
scas
mov
jecxz
fisttpl
pop
adc
lds
lret
or
xor
lcall
ja
lret
add
push
sub
sub
loope
mov
jl
cwtl
jo
sub
imul
testl
fsubrl
fnstenv
mov
xchg
lds
cmp
push
cld
push
in
and
pop
xchg
push
out
cltd
pop
cmp
mov
sbb
aam
pushf
ror
dec
dec
loope
call
mov
incl
sub
in
inc
negl
scas
aas
inc
aaa
jg
sbb
or
std
add
shlb
stc
mov
shll
sarl
aad
insl
divl
xchg
es
pop
jmp
push
hlt
out
popa
popf
in
js
ret
divb
sub
sbb
fimuls
push
ret
inc
adc
idiv
aam
sub
es
mov
test
neg
rolb
out
pop
add
cmp
inc
jbe
jecxz
daa
insl
ds
jmp
jg
movsb
pop
xor
mov
fwait
adc
xor
sub
clc
adc
jge
icebp
ror
xchg
in
push
jns
push
sub
inc
enter
dec
ss
call
fdivs
lods
imul
test
fnsave
mov
push
xchg
fldenv
inc
out
cltd
and
lods
or
mov
jle
shrl
les
lret
push
jg
insb
dec
sub
cld
and
cmp
mov
inc
push
mov
or
loope
test
adc
mov
pusha
jg
pop
ss
mov
mov
pop
ret
mov
mov
pushf
mov
cmp
xchg
ficoml
xchg
loopne
sbb
jmp
and
sbb
mov
or
inc
lods
add
push
mov
lcall
std
mov
stos
repz
mov
mov
inc
xor
or
loope
ror
aad
movsb
cmp
es
test
fs
jbe
repnz
sar
pop
outsb
bound
xor
cwtl
xlat
xchg
fildl
cli
mov
or
xlat
mov
xchg
lahf
inc
pusha
enter
sub
push
in
negb
mov
stc
pusha
xchg
cltd
decl
pop
nop
pop
xor
xchg
test
les
fs
fdivr
xchg
int3
std
mov
sub
push
adc
inc
rolb
sub
popfw
push
push
push
or
or
in
adc
lods
lock
pop
bound
int
sbb
add
inc
jmp
xchg
fistl
andb
jb
loopne
popa
mov
stc
jnp
inc
cmp
mov
add
adc
push
rcr
int
push
movsb
adc
jnp
test
int3
call
imul
in
fs
push
nop
jmp
addr16
pop
daa
dec
push
les
test
mov
es
insb
fidivrs
lcall
dec
mov
andb
jl
cwtl
push
adc
cmp
cmp
iret
scas
push
shll
ja
sub
jmp
movsb
add
ljmp
pop
dec
call
maxps
data16
adc
mov
jg
loopne
lret
add
adc
or
ret
jmp
mov
push
mov
jmp
out
lret
stos
sbb
or
mov
jge
pushf
xlat
les
cmp
jl
fimull
cmp
jo
js
mov
scas
inc
mov
pop
ljmp
cmpsb
add
inc
mov
fsubrs
aam
inc
lds
cmpsb
jle
adc
pop
mov
inc
cmp
push
hlt
rcl
insl
fidivs
test
xchg
je
jne
lods
sbb
xor
cmpb
subl
mov
lret
imul
pop
xor
sub
stos
loopne
add
mov
push
mov
pop
ret
mov
jno
cmpsb
xchg
mov
xchg
hlt
mov
rolb
mov
and
jb
sbb
cmp
push
aam
jge
jg
mov
add
gs
dec
imul
pop
mov
cwtl
mov
pop
out
xchg
gs
push
ss
inc
mov
icebp
aam
push
mov
sbb
addl
xchg
cmp
ljmp
in
xor
xchg
sub
aaa
adc
shll
cmc
rcrb
pop
mov
data16
sbb
sbb
pop
cmp
adc
xor
loopne
or
js
daa
cmp
rclb
cmc
mov
outsb
cmp
jp
loope
mov
stc
sarb
scas
sub
arpl
mov
loope
out
cld
pusha
add
cmp
insb
mov
ljmp
mov
jns
xor
iret
jnp
decl
xor
jne
push
ret
mov
test
jle
popa
hlt
add
lock
lahf
icebp
mov
adc
mov
jle
push
imul
lret
fisubs
fists
imul
hlt
fcoms
adc
and
pop
xor
xor
adc
fsubr
imul
sti
adc
fst
rcrb
inc
mov
and
sbb
adc
pop
push
cli
push
pop
xor
outsb
push
pop
imul
push
jecxz
repnz
sahf
push
cli
cwtl
jp
xchg
add
adc
mov
cs
into
stos
ret
test
in
dec
sub
mov
bnd
push
stos
jmp
outsl
fadds
lahf
out
leave
inc
xchg
dec
gs
lahf
fidivrl
inc
popa
outsb
std
je
out
pushf
scas
mov
out
call
insl
sahf
jno
mov
sbb
adc
movsl
or
add
adc
inc
fildll
jne
cmc
inc
cmpsb
fwait
je
pop
je
rcrl
stc
out
jle
and
ljmp
adc
rolb
fmull
arpl
mov
sbb
shlb
inc
inc
out
xor
sahf
jmp
pop
cmpsb
jnp
aas
sub
sub
out
sub
xchg
mov
ret
dec
sub
add
cltd
push
int3
xlat
lea
push
xchg
push
inc
jno
cld
mov
les
jecxz
roll
ja
lcall
fistpll
int
outsb
push
es
xor
add
dec
sub
arpl
cltd
cmp
dec
sti
into
fs
fmulp
ret
cld
mov
sub
jbe
cwtl
add
dec
and
cmp
cmpsb
call
bswap
add
adc
and
mov
fimull
add
push
fsub
jp
insl
sti
mov
jno
xchg
jp
add
and
mov
sub
jge
and
cmp
dec
adc
in
or
pusha
jl
push
lea
sahf
dec
rcrl
inc
jne
out
inc
filds
das
sbb
aaa
push
pusha
jbe
aad
push
adc
jno
mov
mov
call
add
cmpsb
jns
nop
cmp
and
aas
sti
mov
aaa
adc
mov
mov
cmp
push
mov
jae
ds
fbstp
lods
mov
addr16
ss
add
les
aam
sbbb
push
je
mov
mov
pop
push
adc
sub
mov
bound
xchg
je
mov
mov
lock
pop
dec
mov
lods
movsb
outsl
pop
or
mov
lods
loopne
pushf
popf
or
pop
push
repnz
outsb
mov
inc
fidivs
cmpsb
dec
in
push
out
sbb
jge
test
popa
call
xchg
push
mov
sbb
movsb
repz
filds
into
push
lods
orb
mov
sbb
sbb
push
flds
or
pop
call
mov
push
scas
adc
insl
ss
test
and
or
xchg
test
int3
fdiv
ret
out
and
in
jno
cmp
add
gs
mov
mov
push
aad
cmpsb
pusha
or
adc
in
or
sarb
sub
mov
das
add
inc
cmpsl
xor
fwait
sub
jl
add
mov
mov
in
or
inc
push
lret
test
daa
ss
lds
jne
dec
push
mov
xchg
mov
inc
sub
ficompl
aad
outsl
rorb
or
pop
xor
sub
xchg
sahf
adc
ror
pop
jns
xchg
enter
iret
xlat
bsf
mov
jmp
xchg
xchg
xchg
push
pop
movlps
cmc
arpl
xchg
std
adc
shlb
stos
pop
gs
into
rolb
mov
xchg
sub
fld
daa
sbb
sub
mov
outsl
rol
mov
xlat
fsts
in
lea
popf
loop
cmc
loopne
out
inc
testl
pushf
jnp
pop
xor
jecxz
xbegin
les
mov
mov
loopne
mov
push
push
or
movsb
or
testb
jne
leave
pop
xor
xlat
in
bound
mov
cmpb
pop
mov
xchg
sbb
xor
jg
xor
addr16
fsubrs
inc
pop
jbe
rcrl
inc
push
mov
push
dec
imul
rcl
mov
ret
mov
stc
in
stos
sti
mov
or
aas
inc
jo
ret
pop
cmpb
jle
or
cmp
or
sbb
inc
push
dec
mov
lret
leave
sbb
lods
sub
in
lea
mov
ss
lods
imul
cmp
sub
fs
sbb
push
ljmp
add
mov
lahf
dec
fisttpl
in
das
sbb
insl
das
inc
stos
push
lea
cwtl
pop
or
decl
into
jecxz
mov
out
jmp
pop
jg
mov
xchg
hlt
mov
shlb
hlt
sub
pop
mov
cs
mov
cmpsb
dec
and
in
mov
mov
cmp
add
jg
sbb
repnz
and
clc
dec
lcall
in
xacquire
call
hlt
repnz
fcomi
fwait
rclb
insb
adcl
xchg
xchg
jp
shr
jne,pt
mov
cmpsb
pop
fldenv
jge
mov
jmp
hlt
mov
xor
cwtl
mov
loopne
sbbl
mov
push
jge
dec
mov
xor
inc
mov
lods
push
add
popa
pop
sub
inc
aaa
xor
sbb
mov
push
jle
adc
mov
and
retw
int3
mov
jns
cmc
pop
xchg
adc
lea
jne
sarb
lret
pop
dec
fwait
push
sub
or
leave
pop
std
jno
cs
xor
dec
xor
lret
mov
sub
sti
cmp
ss
push
lock
pop
cmp
push
in
jge
jno
push
rorb
mov
rorb
fwait
rorl
cs
push
cmpsl
icebp
adc
fcomps
inc
inc
push
ds
pop
sti
and
adc
stc
popl
shll
addl
cmp
mov
pop
call
sbb
push
lea
xor
insl
repz
mov
cmpsl
xchg
sub
ja
inc
xorl
das
dec
fsubl
fisubrl
ret
movsl
adc
daa
push
imul
int
movsl
inc
leave
sub
gs
push
inc
cmp
xor
push
adc
into
jo
push
xchg
jnp
ja
sbb
in
pop
lret
mov
sarl
movsb
xchg
in
mov
and
mov
dec
hlt
jmp
push
iret
add
sub
mov
test
iret
fs
jmp
insl
insb
adc
mov
or
sub
bound
mov
repz
cld
mov
mov
fdivl
fisttpll
ret
cmpsl
nop
sbb
adc
add
in
hlt
std
aam
or
andl
mov
fisubrl
jl
fsubl
push
pop
xchg
shl
push
cmc
adc
lahf
jnp
mov
lret
in
or
lcall
adc
jp
mov
popa
rcr
jno
rorl
test
mov
jge
push
dec
or
dec
or
mov
and
mov
jno
xor
pop
cmp
clc
fucomi
mov
jmp
xchg
cmpsl
pop
pushf
mov
lret
inc
pop
rcrl
xchg
outsb
out
push
cmp
mov
mov
xchg
fs
adc
pop
xchg
dec
enter
iret
and
mov
out
mov
das
xor
dec
sbb
divl
xchg
clc
repnz
jmp
jb
inc
mov
xor
adc
outsl
pop
pop
call
adc
xchg
push
mov
loope
lcall
xor
pop
fcomps
push
pop
xchg
fiaddl
mov
add
add
into
mov
scas
lds
push
outsb
mov
or
jl
inc
neg
rol
mov
aas
outsl
std
pop
lahf
fisttps
shl
and
pop
out
mov
bound
sub
fadd
push
dec
xor
rorl
jno
lret
rorb
push
fucomip
mov
es
in
es
icebp
std
or
jns
jge
jmp
ljmp
shll
fwait
mov
fsubs
lret
mov
mov
jle
arpl
push
nop
pop
push
and
outsb
and
mov
movsb
mov
lea
push
gs
test
mov
pop
int3
sub
jecxz
mov
xor
clc
xor
dec
out
aas
cmp
or
gs
leave
dec
mov
mov
jecxz
adc
mov
sbb
pop
or
test
stc
out
rolb
pop
jnp
andb
scas
inc
rcll
and
cmp
sbb
mov
ljmp
pushf
fmull
mov
mov
xor
bound
std
inc
sub
fwait
inc
cmp
dec
dec
adc
fcmovne
mov
mov
cmp
inc
scas
jge
inc
or
xor
addr16
pop
cmp
in
or
mov
std
jo
sbb
mov
add
sbbb
jle
inc
dec
test
lock
icebp
sbb
sahf
into
mov
rcrb
cli
andl
cli
enter
adc
adc
sbb
jecxz
repnz
and
iret
or
fstpt
ret
movsl
gs
mov
jb
shr
fisttpl
dec
imul
dec
out
pop
ss
mov
test
popa
repz
adc
pop
aaa
push
adc
sub
jb
aad
dec
lret
adc
stos
icebp
push
jmp
jp
jge
lea
cmc
cmpb
sbb
or
mov
adc
sub
lea
in
xchg
adc
into
les
jecxz
testl
or
xchg
jecxz
into
lds
jmp
cmp
rolb
test
fs
hlt
jns
ret
mov
pop
inc
addl
cmp
sub
popa
mov
insl
shrl
imul
xor
inc
mov
scas
stos
push
nop
push
mov
jmp
add
out
ljmp
cmc
cmpsl
movsb
dec
pop
lret
pushf
fstpt
adc
incl
shlb
shlb
int3
inc
je
cmp
jl
loope
popa
inc
hlt
add
xlat
sbb
clc
jae
xor
jmp
mov
mov
jne
cmpsl
push
addr16
ror
push
pusha
cmc
das
inc
or
pop
mov
mov
decl
jp
dec
lret
iret
fs
fcmovnb
jne
jle
popl
push
scas
inc
push
push
out
inc
adc
push
outsl
jl
sbb
sub
cmc
dec
test
add
int
das
push
push
mov
mov
cmpsb
aam
outsb
shr
push
and
inc
mov
cmp
mov
fldz
leave
sub
lret
push
dec
pop
push
xor
jno
jno
cmpsl
shrl
daa
dec
lcall
jno,pt
mov
xchg
xor
ss
pop
add
aad
mov
in
dec
push
push
test
push
aas
fs
xor
or
cwtl
test
pop
ja
mov
jp
cwtl
mov
cld
hlt
lret
xlat
mov
addr16
jne
inc
nop
add
add
inc
test
push
mov
stos
cmpsl
mov
pop
dec
in
rol
rorb
and
jns
xchg
in
inc
stc
sub
aam
mov
std
pop
push
fisubrs
ficoml
cmp
xor
push
mov
adc
push
sub
cld
int
and
sub
in
lods
add
fidivrs
mov
scas
push
jmp
or
les
imul
loop
sbbb
sub
dec
dec
jmp
pop
test
lds
xchg
cmp
dec
mov
into
scas
cmpsl
ljmp
sub
out
mov
sbb
cmp
sbbl
and
push
cmp
pop
adc
jecxz
aam
fldenv
pop
adc
cmp
inc
jmp
push
sbb
pop
add
push
adc
outsl
lret
mov
jecxz
loop
mov
outsb
sbb
push
pop
cltd
pushf
cmpsb
add
add
cmp
fstpl
sarl
sbb
inc
stc
add
fsubrp
dec
mov
inc
cmp
lock
mov
xchg
fwait
repz
mov
pop
cli
dec
and
out
and
call
lds
jns
clc
arpl
mov
fcoml
mov
rorl
push
xor
cld
xchg
jo
cld
out
movsb
test
insb
lock
jge
mov
popa
cmp
push
out
mov
enter
sub
out
rol
mov
mov
repz
cmp
lahf
sbb
xor
push
xchg
pop
push
mov
cmc
pop
sbb
push
mov
les
xchg
lods
jb
dec
sbb
push
pop
ret
cmp
sarl
sub
insl
mov
dec
in
lea
shrl
add
outsl
jmp
push
add
fdivp
push
roll
lret
ljmp
in
enter
mov
and
repnz
fdivr
scas
xchg
mov
mov
outsb
js
ljmp
jmp
xchg
xchg
repnz
lret
and
inc
cli
fbld
add
mul
jbe
jecxz
rorl
or
nop
jnp
pop
arpl
addr16
push
add
cmp
sub
sub
mov
test
idivb
jle
fsub
jl
sarb
imulb
dec
jns
xlat
pop
jmp
sbb
lock
xchg
lods
rcrb
sbb
mov
or
push
cmpsb
jp
or
xor
pop
mov
lcall
in
pop
hlt
push
push
leave
jne
fadd
cs
jnp
add
testl
addr16
sub
rcrl
mov
jns
or
into
mov
test
xor
ret
daa
mov
out
hlt
popf
insl
scas
scas
push
sub
jne
test
or
out
pop
movsb
xor
int
push
dec
cltd
std
int
jb
das
push
pop
mov
stos
fsubrs
jns
leave
mov
add
mov
jnp
cmp
pop
or
gs
push
jge
jl
fsubr
adc
dec
mov
pop
sti
or
mov
xlat
inc
cmp
xor
leave
adc
cmp
xor
mov
and
subl
push
mov
sbb
jbe
lock
in
in
js
imul
pusha
dec
push
inc
fists
mov
dec
cwtl
xor
pusha
dec
jp
icebp
xor
orb
adc
jo
aaa
inc
mov
aad
outsb
sub
clc
fs
mov
insb
inc
dec
sti
stc
mov
stos
test
lock
xchg
loope
mov
mov
adc
mov
shrb
push
in
xchg
xor
insb
pop
pop
lea
mov
xlat
xlat
push
ret
loope
test
mov
and
mov
les
lcall
mov
enter
addr16
sbb
jns
adc
adc
stc
imul
int
push
ss
das
ret
and
sbb
xlat
imul
add
mov
and
popa
dec
bound
and
cmpl
push
sbb
mov
jne
and
cmp
shll
pop
insb
cmp
sbbl
and
pop
inc
out
gs
stc
xchg
icebp
xchg
out
jae
xlat
aad
cmovae
popa
push
pop
movsb
stc
fsts
ljmp
adc
int
lahf
test
into
cmp
xchg
cmp
sub
lds
pop
jno
add
stos
push
ret
mov
mov
lods
pop
cmp
jbe
cmp
sahf
jp
sub
in
sub
scas
jne
cwtl
in
push
adc
xor
xor
sahf
pop
sub
ret
push
iret
fstpt
inc
shl
out
add
ficoml
insl
mov
testl
hlt
call
popa
mov
js
jae
fmull
cmp
sub
xchg
dec
out
data16
shrl
arpl
in
lods
test
lret
movl
push
xchg
addr16
mov
sbb
repz
stos
sub
pushf
orb
push
mov
xor
xchg
adc
inc
jmp
xchg
xor
inc
mov
loope
jmp
mov
sub
push
test
das
inc
ss
andl
fwait
sbb
repz
arpl
inc
lret
fldl
ja
out
add
push
pushf
insb
sar
fdivl
push
mov
lods
mov
sub
push
sub
push
insl
stos
gs
jmp
stos
mov
sbb
inc
lods
fcoms
pop
dec
xor
frstor
mov
insb
outsl
jns
lock
cld
icebp
push
and
and
cmp
outsb
stos
jmp
adc
xor
dec
fists
sub
xchg
xchg
mov
sub
mov
mov
into
in
dec
push
xchg
jae
pop
push
rcll
inc
pop
dec
push
add
mov
mov
cmp
mov
adc
sbb
stos
aam
pusha
mov
inc
dec
jb
mov
push
lods
mov
cmpsb
xchg
xor
dec
sub
push
xlat
and
jg
mov
fnsave
dec
in
push
sub
inc
out
shll
movsb
jl
sarb
lahf
mov
cmp
adc
aas
loop
dec
loopne
mov
std
mov
mov
mov
sti
or
xchg
jge
inc
cwtl
cmp
mov
roll
cs
and
mov
xchg
inc
and
add
xchg
sub
xchg
iret
pushf
push
dec
xor
xor
add
loopne
mov
mov
icebp
mov
lock
bound
cs
jle
mov
lock
insb
pop
adc
sbb
jns
ret
cmp
xor
data16
pushf
and
hlt
out
inc
mov
sub
pop
cmpsl
out
loop
addr16
sub
jne
int
lock
inc
inc
xor
jp
pop
mov
inc
push
cmpsl
test
andb
je
jnp
or
rcrl
pushf
mov
adc
test
repz
xchg
add
outsl
cmp
ds
lock
daa
scas
sysret
push
cmc
cmpsb
into
sti
mov
je
enter
adc
daa
lret
inc
pop
sarl
and
insl
daa
fsts
and
inc
jo
daa
fsubs
pop
jmp
mov
adc
insb
inc
daa
mov
out
fisttpll
stos
jecxz
lahf
call
jae
push
jmp
fidivrs
push
testb
and
push
sbb
insl
inc
popa
pusha
xchg
jo
push
scas
icebp
push
xorl
stc
loop
loop
sbb
mov
mov
jmp
test
jmp
xchg
in
mov
outsl
mov
add
mov
adc
push
push
jae
mov
cmp
sbb
insl
add
cld
cwtl
mov
imul
and
pop
fisubrs
xchg
mov
mov
mov
and
mov
lods
hlt
mov
mov
adc
icebp
movl
enter
xor
sub
mov
aas
xchg
push
fwait
andb
fnstenv
cwtl
loopne
sub
and
inc
out
xor
stc
dec
xchg
pop
jle
jl
out
sahf
inc
inc
mov
sbb
imul
les
sbb
adc
adc
fstpl
pop
dec
push
stos
mov
and
add
out
mov
mov
dec
out
pusha
lahf
push
mov
lods
daa
jns
dec
xor
jmp
das
fisubl
jge
push
mov
and
fists
xchg
push
out
inc
mov
xchg
cmpsl
add
fmulp
shll
repz
dec
lcall
es
les
fisttpl
jo
rorb
hlt
jnp
ret
pop
xchg
notb
jmp
sbb
lea
pop
and
and
push
loope
cmpsl
dec
dec
adc
xlat
ljmp
fmul
ds
xchg
lds
cwtl
add
add
mov
mulb
mov
stos
xor
cs
sar
xor
repz
jl
adc
fisttpl
clc
jae
fidivs
mov
mov
cwtl
les
cmp
ja
dec
les
fsubs
dec
or
adc
sbb
data16
aas
dec
dec
jmp
mov
mov
lret
mov
or
pop
sbb
inc
push
les
push
and
sbb
andb
rcl
enter
adcb
xchg
sti
out
xor
dec
fwait
or
push
xor
arpl
mov
jmp
mov
shlb
jns
je
les
push
add
popf
pop
dec
or
push
push
stc
mov
jo
nop
mov
sub
xor
pop
adc
in
shrl
jle
enter
inc
cmc
les
mov
mov
mov
mov
mov
mov
cli
or
scas
pop
and
mov
in
lods
mov
cltd
mov
cmc
sti
mov
push
adc
sbb
fstpl
in
sbb
sbb
mov
idivl
or
sub
mov
iret
leave
inc
movsl
pop
pop
jp
sbb
test
andl
push
mov
leave
mov
fistps
inc
inc
mov
xchg
or
cltd
pop
xchg
movsl
mov
iret
xchg
mov
or
inc
in
fadd
es
jp
out
pop
mov
xchg
ja
dec
and
shlb
je
sti
enter
or
inc
cli
pop
pop
ret
cmp
xor
roll
seto
jnp
rcrl
stos
fidivs
xor
jl
inc
adc
fidivrs
ja
mov
sub
call
add
pop
and
lret
ret
xchg
add
jbe
cmp
aas
and
dec
lahf
push
pop
mov
incl
xchg
jb
jns
out
loop
pushf
in
mov
icebp
shlb
mov
faddl
outsb
lds
enter
cmp
mov
call
scas
sbb
jno
dec
sbb
cwtl
rorl
mov
jg
arpl
cmpsb
sub
les
outsb
scas
jecxz
insb
xacquire
mov
out
mov
xchg
xlat
jb
push
xchg
insb
or
out
or
test
pop
cmc
repz
adc
adc
sbb
jno
test
fwait
push
fidivs
lcall
or
cwtl
int3
shrl
mov
loope
sub
js
das
push
cmp
imul
lahf
repnz
lahf
add
add
add
xchg
xchg
and
mov
add
pop
pushf
add
out
pushf
jge
sub
cltd
mov
iret
push
in
mov
fildll
mov
pop
push
or
das
das
aad
in
dec
or
or
lea
cmp
add
xchg
or
xchg
not
mov
mov
imul
mov
out
jne
sarb
jbe
mov
push
std
and
das
mov
xchg
ja
stos
lods
cmp
cmp
out
shlb
add
mov
ljmp
xchg
mov
ret
insl
pushf
adc
cli
cmpsb
push
xor
repnz
gs
and
xchg
cmp
cmp
stc
jmp
mov
fistpl
in
mov
mov
lret
lcall
xchg
clc
mov
in
push
xor
jge
dec
sbbl
lea
sti
dec
push
dec
fwait
xor
jo
adc
clc
cltd
mov
mov
sbb
pusha
loop
popf
mov
cmp
loop
loope
sub
inc
or
push
jo
or
lret
cld
xor
rcll
cld
adc
shrb
xor
cs
loopne
push
int
in
adc
aas
aam
push
inc
push
sub
xor
and
pop
or
scas
xorl
test
pop
cmc
inc
mov
add
mov
sbb
gs
lods
mov
test
out
jl
pop
dec
in
repz
pushf
mov
rolb
xor
add
inc
sub
cmp
ljmp
mov
insb
loopne
nop
arpl
mov
lret
adc
loope
getsec
push
shlb
mov
jo
sbb
repz
scas
xchg
mov
push
jo
mov
mov
mov
mov
lcall
xchg
jno
pop
inc
sti
fdivrl
cwtl
decl
jmp
fwait
jno
adc
sub
adc
int3
mov
mov
push
int
inc
test
xchg
shl
dec
or
add
lods
test
in
movsb
lcall
sbb
mov
aam
lcall
mov
inc
jg
test
and
fdivrl
ja
gs
mov
pop
fstl
sub
sti
and
xchg
xor
stos
fwait
dec
cmc
lock
stc
repz
por
xchg
adcb
sahf
inc
xchg
lods
movsl
or
int
cmc
iret
jge
pusha
call
jecxz
xchg
adc
pop
sti
or
jle
stos
pop
fnstsw
xor
cmp
iret
jmp
out
mov
dec
addr16
cltd
or
xlat
adc
or
pushf
add
repz
push
insb
adc
sub
ljmp
and
leave
pop
sbb
into
andb
lahf
mov
mov
hlt
cmc
emms
mov
cwtl
cmpsb
dec
xchg
mov
add
xor
mov
iret
sbb
cmp
stos
mov
push
rcl
mov
cld
inc
insl
jle
jl
fstpl
ja
pop
jns
mov
add
movsb
push
jno
fsts
cltd
push
push
inc
fbld
fcmovnbe
jne
inc
fstl
push
pop
ds
jo
sub
jle
cmp
cmc
fwait
sub
push
cs
dec
mov
lcall
js
stc
mov
sbb
dec
lahf
loop
mov
add
sarl
iret
cmc
nop
jne
fdivrs
xor
test
es
aaa
push
lods
mov
sbb
stc
and
loopne
fnstcw
mov
adc
add
push
imul
jmp
push
sbbb
iret
lods
cmp
ret
push
jne
inc
pop
inc
cmp
cmpsl
adc
ficoms
testb
loopne
outsl
fimull
add
icebp
cmpsb
inc
mov
adc
mov
dec
dec
pushf
inc
dec
lcall
push
imul
repnz
xlat
outsb
push
es
in
test
adc
adc
out
add
dec
sbb
sub
imul
mov
sub
mov
jge
int
aaa
gs
jne
mov
test
test
rcrb
lock
pop
push
jge
pop
push
lahf
push
adc
outsl
fldcw
mov
cmp
ret
xor
dec
pop
mov
stos
push
int3
cmpsb
leave
add
mov
arpl
enter
mov
push
xor
addr16
ss
dec
dec
xor
and
fstl
jle
or
push
nop
pop
imulb
test
jmp
mov
icebp
gs
xor
clc
inc
adc
into
std
arpl
cmp
push
sbb
loope
fcomps
add
cmpsb
lds
mov
adc
out
and
fsubl
popa
les
mov
add
es
pop
xchg
xor
aad
andb
imulb
addb
in
pop
or
mov
push
pusha
mov
aaa
aam
rol
jmp
loope
mov
daa
xor
dec
stos
mov
push
sub
scas
out
adc
int
es
dec
mov
iret
mov
and
popf
push
adc
cmp
jle
subb
rorb
or
xor
mov
jne
fldcw
test
fcoml
movswl
mov
adcl
stos
jbe
push
fidivs
dec
sbb
lods
mov
adcb
cmpb
xchg
cs
or
xchg
cld
mov
sub
cmc
inc
push
and
enter
push
mov
and
add
cmp
or
fdivrl
aad
rcrl
std
xor
sub
inc
jno
sbb
cmc
icebp
adc
sub
fld
addl
nop
inc
dec
aad
push
adc
sub
adc
je
sar
jge
std
imul
repnz
mov
add
mov
in
push
dec
jecxz
mov
bound
mov
movsl
lret
sbb
stc
xchg
xor
dec
popf
lret
addb
xor
mov
jns
sbb
adc
mov
or
imul
mov
xor
es
mov
incl
and
aam
push
pop
loope
lock
pop
dec
and
data16
cmp
mov
shll
scas
dec
fsubrp
and
jns,pt
loopne
and
into
xor
mov
inc
mov
outsl
aam
sarb
movsl
and
cmp
gs
test
test
icebp
push
in
fisubl
xor
xchg
mov
jnp
xor
leave
cltd
repnz
imul
lea
inc
bound
mov
pop
jb
test
xchg
xor
xchg
je
cmp
es
fistps
or
inc
repnz
mov
int3
xor
in
ja
xchg
test
dec
dec
add
leave
xlat
mov
xchg
cmp
ret
lods
shll
test
dec
cs
gs
adc
xchg
repnz
sub
inc
cmp
arpl
sahf
jae
les
push
jns
lcall
dec
sub
adcb
mov
lcall
fsubr
mov
lock
jg
insl
mov
jae
adc
sbb
and
adc
icebp
jae
pop
jns
push
lret
or
lods
mov
cmpb
fimuls
xor
test
mov
gs
mov
orb
mov
ret
enter
imul
int3
cmp
xchg
pop
push
inc
cmpl
pop
jbe
add
lds
js
pop
pop
mov
pop
and
hlt
mov
arpl
or
fwait
lret
ljmp
lahf
cmpsl
push
inc
sbb
sbbb
dec
mov
add
adc
lcall
or
pusha
sbb
test
outsb
scas
ss
stos
sbb
or
mov
inc
repz
mov
adc
fsts
cmp
fisttpl
mov
fisubs
fdivrl
fisubl
push
push
inc
or
sti
adc
pop
cmpsl
stc
xor
cmp
inc
gs
add
mov
mov
pop
mov
mov
sti
mov
fiaddl
mov
cmpsb
popf
outsb
je
add
mov
jp
and
fcomp
adc
out
sbb
clc
pop
and
shlb
sbb
in
loope
add
mov
add
sahf
jbe
sub
add
mov
sbb
push
mov
in
clc
xor
lods
cmp
jb
sbb
pop
push
mov
out
aas
out
lahf
pop
lods
in
add
sarb
pop
or
dec
cld
xor
cld
shl
sbb
pop
xchg
mov
mov
rorl
je
mov
mov
sub
jbe
ljmp
pop
sbb
ds
ficomps
inc
add
in
push
mov
xchg
int
xchg
lahf
sbb
mov
cmp
mov
inc
fstp
push
shl
aaa
sbb
shrb
clc
mov
in
gs
sbb
frstor
imul
cmp
arpl
jmp
mov
out
jbe
fldenv
ret
outsl
mov
stos
mov
jmp
mov
pop
push
or
jle
test
and
jns
insb
push
enter
sbb
scas
and
cwtl
cmp
add
push
jle
fstl
xor
arpl
aaa
shlb
push
cli
js
outsl
fldenv
gs
xor
cmc
icebp
gs
fnstsw
mov
sahf
pop
lock
mov
aam
lahf
int
jg
stc
imul
out
xor
jbe
and
lds
sbb
mov
mov
mov
or
pushf
xchg
dec
jne
test
bound
test
and
xchg
xor
jl
daa
es
pushf
dec
jp
pushw
jo
push
sub
sbb
jge
push
mov
mov
aam
dec
shlb
iret
mov
in
jae
pop
fcmovnbe
xchg
inc
divl
bound
hlt
push
lea
mov
xor
repnz
mov
push
mov
imul
ljmp
adc
xor
mov
les
sub
dec
es
inc
or
xor
andb
push
adc
pushl
fmulp
adc
sub
inc
dec
loope
mov
outsl
fsubp
dec
xor
js
cmp
jae
cmpsl
push
leave
stos
popa
imull
mov
jg
or
or
pop
dec
inc
shlb
xchg
dec
popf
xchg
hlt
outsl
sub
add
mov
cmp
nop
mov
jno
je
mov
and
adc
fsubs
mov
dec
aas
push
jnp
xchg
loop
xchg
or
arpl
pshufw
out
iret
push
loopne
mov
fldt
jmp
jb
ret
in
push
xchg
pop
add
roll
xor
mov
xchg
sbb
scas
scas
into
leave
rcrl
jle
mov
test
out
pop
cmp
and
and
pop
push
inc
stos
imul
pop
dec
push
sbb
sbb
inc
add
mov
push
ss
in
stos
repnz
ljmp
or
sub
jbe
cmpsb
cltd
mov
loop
dec
cmpsb
cwtl
adc
notb
or
cmpsb
xor
out
add
push
fstl
or
aas
out
fidivrs
or
pop
dec
pop
push
aam
das
xlat
mov
push
mov
add
rcrb
fwait
loop
push
loope
push
insb
add
sbbl
dec
inc
movsl
xchg
out
mov
in
mov
sbb
out
dec
sti
pop
stos
imull
lretw
clc
pop
ret
adc
pop
lods
cmp
int3
rorb
xchg
inc
fxch
js
jne
out
outsl
pop
jno
mov
lods
mov
jg
xchg
inc
cmp
and
fidivs
test
orl
cmpsl
mov
mov
insb
shlb
sub
or
ja
push
lahf
jg
jne
es
mov
ret
iret
jmp
daa
mov
cmp
jno
js
lods
jb
xchg
fwait
lock
and
movsl
daa
ja
jnp
add
repnz
test
xorl
xor
xor
arpl
lahf
mov
sub
xor
inc
ds
lock
xchg
xchg
inc
mov
cltd
insl
sbb
ret
dec
mov
int
push
into
inc
or
fistpll
sub
mov
fisubl
rorl
sbb
jae
je
xchg
fwait
pop
cmp
out
movl
lret
jbe
ds
add
dec
sbb
sbb
mov
cwtl
push
mov
lret
push
mov
sub
adc
mov
jmp
in
in
sub
sub
nop
xor
pop
push
sar
mov
dec
repnz
or
test
or
outsl
enter
mov
shll
popa
adc
jle
cmp
lahf
sahf
or
xchg
xchg
fisubrs
adc
add
stos
or
cmp
jbe
sbb
sbb
scas
jns
mov
sbb
aam
push
popf
shlb
jmp
push
js
jnp
outsb
mov
cmp
mov
xlat
inc
or
movl
pop
fldt
lock
stos
mov
ret
sahf
adc
sti
andb
xchg
out
and
or
and
cmp
scas
and
jnp
addr16
push
mov
in
cmp
pop
xor
xor
popa
jnp
inc
fmull
sub
lcall
mov
movsb
mov
ss
ret
jg
dec
dec
repz
and
xchg
gs
xchg
das
inc
xor
mov
icebp
rcll
addr16
cwtl
or
ja
cmpsl
dec
cli
add
inc
movsl
fcmovnb
je
push
xor
xchg
mov
insb
pop
aam
loopne
sahf
mov
add
and
call
fldl
jge
pop
and
aad
dec
inc
add
leave
mov
push
xchg
inc
fisubrl
dec
rcrb
or
xchg
sbb
mov
fnsave
jb
mov
pop
xor
aaa
inc
xor
aaa
dec
aad
pop
mov
call
mov
repnz
fwait
data16
push
ds
jmp
add
cs
mov
into
dec
or
ja
out
cmpb
ljmp
push
and
sub
mov
daa
pusha
cmp
fcoml
push
inc
repz
jmp
into
jecxz
mov
xor
js
out
outsl
mov
inc
cmp
jecxz
pop
and
pop
jae
or
adc
je
pop
push
add
fisubrl
xor
xchg
in
cmpsl
and
or
int
sub
dec
out
push
dec
out
xchg
ret
fwait
int3
inc
xor
sahf
xlat
dec
and
sbb
int
fdivrl
rorl
fisttpll
outsl
jne,pn
mov
int3
cwtl
jnp
mov
cmp
arpl
xorb
loop
rsqrtps
aaa
dec
xchg
in
dec
vsubps
fsubrs
cmovg
xor
adc
jno
mov
lods
push
icebp
and
push
sub
adc
mov
test
adc
or
ss
xor
or
dec
out
push
adc
adc
cld
fisubrs
jle
jne
or
push
push
mov
shr
and
add
call
jb
mov
mov
in
repz
xor
insl
lock
or
mov
pop
into
jecxz
add
xor
jno
insl
das
cwtl
jp
popf
jbe
sbb
lcall
sbb
xchg
rcll
sub
in
out
add
nop
loope
pop
rcrl
lcall
loop
mov
xchg
mov
fmul
xchg
insb
addr16
ljmp
scas
sbb
jno
cmpsb
adc
sub
jno
lret
and
xchg
ds
or
inc
ja
ljmp
lahf
in
and
xchg
in
das
pop
xchg
pop
xchg
ret
ja
pop
sti
mov
out
cld
leave
xchg
cwtl
aas
scas
cmp
cmpsb
sub
mov
roll
es
addr16
popf
sbb
inc
mov
outsb
xchg
mov
sbb
sahf
xor
push
inc
jp
pop
sahf
adc
dec
lods
mov
cmp
stc
push
cmc
cwtl
adcl
scas
jo
dec
pop
and
jmp
aad
gs
inc
pop
fstl
inc
add
jecxz
stc
cmp
imul
je
lds
out
mov
jle
jb
neg
sbb
stos
popf
sti
mov
arpl
test
out
mov
adc
jge
jne
dec
rorb
hlt
mov
push
pop
xchg
loop
mov
mov
adc
pop
pop
fisubrs
jb
popa
in
xor
lock
xlat
test
or
scas
sbb
mov
jl
cltd
sahf
inc
xor
sbb
aaa
shrb
jg
fdivrp
ds
or
ja
mull
js
call
pop
cmp
jmp
xorl
xchg
rclb
int3
dec
cltd
movsl
push
sub
hlt
stos
jne
scas
mov
jno
jae
lahf
mov
leave
mov
mov
xor
mov
jb
sub
or
xor
jle
test
jo
test
xor
adc
lea
jae
jg,pn
mov
scas
inc
lcall
sub
sub
das
ds
jo
enter
mov
ret
ret
sbb
sub
lock
outsl
sarb
mov
fstp
sbb
pushf
jge
test
mov
insb
in
test
xchg
xchg
and
xor
lods
test
lea
push
popl
jle
fildll
sbb
adc
cmp
ret
pusha
xchg
out
rorl
sub
cltd
repz
clc
adc
inc
das
testl
lret
push
stos
adc
enter
scas
cwtl
and
mov
xor
test
xchg
push
xor
inc
mov
jl
nop
and
mov
scas
mov
mov
pop
rolb
cmp
push
fbld
mov
and
mov
push
mov
je,pt
inc
mov
mov
adc
addr16
int3
cmp
mov
push
arpl
xchg
mov
stos
lret
loope
es
dec
sub
and
dec
mov
cmp
lcall
mov
js
sub
out
add
lods
aas
dec
adc
aam
iret
mov
outsb
cmp
rolb
lods
cmp
cmp
mov
dec
sbb
xor
dec
shll
mov
dec
mov
ljmp
and
inc
cmp
dec
or
arpl
cli
xlat
fcompl
sub
sub
add
add
dec
repz
dec
test
mov
pop
les
sbb
jecxz
lahf
les
adc
sbb
and
jmp
push
fisttpll
mov
fs
insb
push
loope
mov
mov
add
mov
add
arpl
das
shl
repz
add
data16
stos
popa
inc
xor
pop
pop
popl
es
andb
lret
sub
inc
aaa
stos
ja
out
sub
loop
dec
ror
mov
cmp
repnz
dec
notb
dec
jae
jle
loope
sub
cmp
push
xor
mov
enter
mov
rcrl
daa
or
adc
cwtl
pop
in
mov
les
pushf
xchg
or
imul
jb
jb
repnz
std
stc
mov
lcall
test
dec
repnz
das
push
ss
int
clc
inc
push
xor
test
xchg
push
scas
xchg
das
repnz
in
or
inc
pop
stos
iret
cwtl
rcr
mov
sub
inc
push
repnz
out
inc
insb
imul
or
xchg
and
mov
pop
ret
pop
push
cmp
add
adc
jns
sbb
stos
adc
fmuls
hlt
adc
mov
mov
ja
fs
xchg
sti
das
xor
mov
dec
out
xchg
xor
mov
repz
sbb
fbstp
outsb
mov
add
pop
fwait
pop
pop
mov
stos
movsb
ljmp
sub
cmp
popf
xor
adc
imul
in
lods
sbb
aaa
out
push
cld
mov
cld
iret
cmp
xlat
adc
iret
data16
push
fld
adc
pusha
call
nop
adc
adc
xchg
pop
pop
sbb
inc
dec
adc
mov
add
loope
jmp
push
mov
mov
mov
cmpsb
mov
in
in
cmp
jne
cmp
fildll
cli
shll
in
test
pop
arpl
andl
arpl
push
jbe
cmp
add
adc
into
int3
and
push
arpl
call
dec
adc
imulb
sbb
icebp
dec
pop
jge
or
push
inc
jecxz
or
and
xor
jmp
jno
mov
aas
jp
hlt
pop
outsb
adc
popf
sub
popf
outsb
popf
movsl
sub
fnstenv
ret
mov
rorl
dec
aas
adc
mov
lahf
mov
mov
add
hlt
push
insl
and
xor
fldenv
jl
ret
cmpsb
les
pop
fcompl
mov
imul
scas
out
mov
adcb
xlat
inc
jmp
inc
inc
xlat
and
dec
mov
addr16
mov
into
mov
ss
repnz
ficoml
in
xor
in
imulb
adc
mov
jno
mov
push
pusha
add
mov
or
push
lret
sbbl
test
es
cmc
repz
dec
xchg
jge
xlat
mov
inc
jle
fdivr
adc
scas
push
xor
mov
je
or
mov
jnp
fists
pop
popf
xor
int
and
jbe
cld
test
rcr
callw
sbb
in
dec
add
push
fsubrp
sub
mov
stos
dec
mov
mov
bound
lods
mov
jge
testb
cs
adc
pushf
xchg
adc
push
dec
mov
lret
push
lods
mov
inc
jecxz
loope
out
xchg
neg
mov
mov
and
lods
decl
imul
push
shll
fidivl
mov
mov
jecxz
xchg
push
test
iret
mov
mov
iret
hlt
pop
inc
fucomi
cmpb
loop
pop
jno
int3
fwait
pushl
xchg
and
shll
add
mull
loop
stos
jmp
sbb
in
mov
xchg
xor
rolb
dec
hlt
lret
adc
inc
iret
push
mov
cld
add
jb
stc
out
mov
sub
fidivrs
jle
xchg
clc
jmp
rcrl
scas
std
test
pop
pop
push
fldcw
jb
loop
fcoms
pop
ljmp
inc
ret
cmc
jns
sahf
or
imul
lret
das
inc
or
int
push
jnp
jbe
jnp
mov
sti
xchg
pop
ja
adc
mov
dec
dec
xchg
xchg
imul
jbe
in
dec
lahf
cmp
add
and
jbe
add
into
lahf
pop
add
push
psubb
lcall
xor
rclb
adc
pop
mov
xchg
push
pop
je
ret
add
daa
popf
dec
insl
repz
fisubrl
and
xlat
xchg
std
lret
mov
inc
fildl
icebp
test
popa
jp
aad
clc
mov
dec
and
cli
jno
shl
sahf
jge
push
clc
mov
mov
test
xor
jp
adc
sbb
lahf
test
ficoms
adc
in
insl
out
pop
test
pop
pushf
mov
mov
xlat
jae
mov
add
andb
shlb
and
daa
int
cmp
xchg
out
sbb
mov
push
xlat
pop
jb
xchg
or
mov
ret
fmul
pop
jne
sbb
subb
push
lret
fnstcw
idivl
mov
clc
pop
fsubrl
std
xchg
pop
dec
out
lods
je
xchg
outsl
push
mov
and
jmp
mov
scas
sub
cmpsb
shll
mov
sub
adc
pop
mov
cs
dec
xlat
xchg
and
inc
lret
stos
lods
mov
mov
inc
out
enter
mov
imul
jbe
ds
xor
sbb
std
adcl
ljmp
or
xor
adc
push
jmp
arpl
fsub
into
pcmpgtb
sub
mov
out
out
mov
shll
test
std
pop
mov
inc
or
cwtl
bound
add
xchg
mov
popf
aas
inc
xor
jecxz
inc
xchg
fldl
popf
es
push
push
fcom
fstl
sub
nop
sbb
rclb
xchg
mov
push
pop
lret
ljmp
jmp
jno
cmp
jmp
pop
cmc
jmp
cmpsb
push
jle
xlat
aad
loop
popa
sbb
mov
and
into
outsl
lret
dec
push
jo
sbb
insb
sub
fs
dec
fiadds
mov
popa
stos
cmpsl
mov
mov
dec
dec
incl
fcoml
cmp
and
test
iret
adc
push
dec
dec
popf
mov
add
push
sbb
xchg
clc
mov
cvtps2pi
adc
mov
in
mov
add
sub
movsl
xchg
sub
jnp
jno
pop
xchg
jg
pop
das
sbb
add
popf
out
jnp
mov
and
or
fldt
inc
je
add
add
shr
sub
scas
xchg
in
pop
xchg
stos
jbe
adc
addr16
in
rcrb
loop
mov
loop
lahf
mov
add
cmp
jg
mov
in
cltd
sbb
cmpsb
mov
push
xchg
in
jo
stc
sub
adc
addl
enter
push
test
push
notl
push
cmp
syscall
pop
dec
in
jae
push
dec
scas
cmp
mov
sbb
mov
cmpb
cmp
push
mov
lret
les
push
push
inc
orb
xchg
sub
ffreep
cltd
xchg
pop
mov
daa
je
mov
jge
insb
cmc
and
cs
movsb
xlat
out
push
and
pop
adc
jb
repnz
sbb
enter
pushf
rol
xor
sbb
stc
xor
pop
lret
inc
ret
in
ja
dec
pop
in
push
and
mov
xchg
sbb
das
jmp
repz
ljmp
pop
lea
fisttpll
push
mov
out
cmp
adc
sahf
pop
xor
add
call
lahf
sahf
daa
cmp
mov
outsl
cmc
jns
ficoms
pop
sahf
sbb
repz
lock
aaa
or
inc
adc
filds
mov
sub
mov
jnp
imul
cmp
inc
pop
lods
movhps
sbb
cmc
push
cltd
inc
jg
aaa
stos
dec
into
fs
fdivs
faddl
cmp
xchg
movsb
xchg
and
inc
lret
push
gs
xchg
out
pop
scas
mov
aam
and
pop
cmp
add
shlb
sub
sub
xlat
dec
rcll
jne
jbe
ds
push
dec
aaa
add
sbb
jbe
lods
rclb
xor
cmpsb
mov
dec
or
ficoml
push
push
lahf
in
jno
pop
push
lcall
pop
xchg
pop
mov
out
pop
mov
ret
xchg
mov
leave
fisubl
jmp
cmpsb
sbbl
mov
movsl
cs
rcll
adc
or
in
or
mov
mov
ja
nop
jns
dec
inc
push
fwait
enter
push
or
mov
dec
mov
mov
shlb
push
mov
popf
pop
cmpsl
pop
lea
pop
ret
pop
sbb
jge
aaa
dec
mov
fldt
lea
sub
idivl
scas
cmpsl
lods
pop
xchg
cmp
in
inc
insb
inc
mov
jmp
dec
push
imul
lods
in
dec
dec
mov
test
aaa
arpl
xchg
or
push
int3
pop
xor
and
std
inc
js
imul
pop
cmp
jo
mov
and
cmp
xchg
repz
pusha
mov
imul
mov
int
xchg
xor
mov
sbb
pop
xchg
xor
cmpsb
imull
and
jp
mov
mov
lds
and
pop
adc
das
out
push
mov
inc
cs
push
scas
xorb
mov
add
test
or
pop
pop
test
jbe
mov
mov
fnstcw
jg
add
insb
icebp
insb
mov
nop
lcall
mov
icebp
pop
iret
sub
dec
push
out
adc
cwtl
xlat
dec
pop
mov
inc
gs
test
sub
jle
mov
rcrl
xchg
xor
rcll
jmp
fs
outsl
mov
mov
enter
jno
ja
repnz
insl
ja
fsubs
jl
mov
pop
lock
pop
or
cli
js
scas
xchg
adc
add
fidivs
sti
or
xor
adc
dec
dec
loopne
int3
cmp
insb
and
mov
and
mov
inc
xchg
jnp
out
and
orb
insb
inc
jecxz
adc
jb
xor
pusha
jb
xchg
pop
jo
stc
lret
or
sub
push
jbe
sbb
push
sub
lahf
aad
in
push
aaa
push
sbb
cmc
mov
pop
fwait
adc
shrb
mov
push
push
je
add
and
push
ficoml
xchg
mov
inc
int3
jnp
das
mov
mov
push
dec
lds
mov
jp
and
add
xchg
xchg
fistps
or
lea
lret
cli
xlat
push
pop
and
mov
mov
and
scas
inc
dec
push
sbb
popf
outsl
jnp
hlt
push
cld
pop
addr16
inc
or
xor
pop
leave
mov
push
jnp
sbb
add
cmpsb
adc
fwait
cmp
test
pop
push
int3
mov
mov
inc
inc
mov
in
add
cld
xor
and
out
jge
outsl
or
jge
jle
lcall
out
sbb
aas
or
add
mov
or
add
xor
lods
add
pop
adc
add
xchg
sub
popa
cmpsl
loope
insb
adc
lock
push
movsb
lret
notb
inc
add
out
adc
out
mov
mov
mov
mov
rcrb
test
movsb
mov
jbe
xor
out
cmc
sbb
xchg
pushf
into
test
pop
mov
push
fisubs
xor
jbe
ss
and
fimull
mov
or
shl
movsl
mov
push
lods
add
jne
stos
cmp
jae
addr16
nop
imul
push
dec
dec
adc
inc
cmc
adc
push
imul
roll
addl
test
fidivl
push
pop
jne
imul
fisttpl
push
incl
cmp
push
mov
add
add
adc
mov
jo
mov
ljmp
mov
xchg
divl
je
and
negb
pop
mov
pop
das
and
sbbb
cmp
idivl
xchg
ss
push
and
mov
je
fcoml
insl
imul
mov
sahf
ret
mov
fcoml
fs
and
push
idivb
pop
cmp
iret
pop
ja
movsb
in
push
and
mov
mov
aad
add
into
fcmovnb
lcall
popa
dec
sub
ljmp
rcrb
insb
mov
xor
ds
loope
jno
add
mov
sti
mov
adc
mov
mov
inc
insb
enter
insb
int
cmp
fistl
ffree
scas
push
sub
add
mov
sub
imull
iret
dec
mov
and
shll
adc
mov
shlb
dec
in
inc
mov
xchg
loope
cmp
popa
ljmp
jae
test
insb
das
mov
jp,pn
les
mov
add
inc
fcomi
lret
mov
cltd
ret
stc
pop
sbb
pop
push
jge
push
pop
sub
dec
fnstsw
mov
adc
xchg
mov
ficoms
and
jbe
iret
inc
fidivrs
test
mov
stos
mov
imul
inc
dec
jg
in
jp
jno
fcoml
cmc
add
in
or
popa
and
outsw
clc
mov
imul
insb
push
push
addl
inc
in
cmp
lret
int3
xchg
sbb
out
pop
pop
shrl
xor
cli
loope
ja
push
xchg
xlat
cmpsb
into
sub
xchg
lea
or
ja
mov
outsl
mov
mov
jge
sub
pop
mov
pop
clc
mov
or
or
lods
and
bnd
fwait
cmp
data16
icebp
call
incl
push
rol
push
mov
and
pop
and
mov
pop
jge
add
pop
lods
dec
test
sub
enter
jecxz
adc
mov
xchg
jne
imul
jg
sub
mov
out
push
mov
loop
loope
xchg
inc
lds
sbb
pop
jge
lds
add
sub
jne
outsb
pop
leave
adc
jnp
stos
xchg
shl
sub
jmp
loope
mov
sbb
jg
out
sbb
and
sub
leave
aad
mov
pushw
push
sbb
xchg
outsb
dec
jmp
loop
adc
bound
mov
or
data16
repz
pusha
inc
ljmp
mov
xchg
clc
push
shlb
or
push
push
push
mov
icebp
leave
stc
jl
test
or
sbb
idiv
fs
sub
add
jle
movb
pop
sub
lods
push
insb
testb
fs
or
out
scas
clc
test
inc
nop
lcall
dec
add
push
into
dec
jns
pop
hlt
mov
mov
cmp
or
sub
fs
aam
xor
mov
mov
push
pop
cmp
jo
mov
loope
jb
mov
xchg
stos
jb
xchg
out
call
inc
addr16
lahf
in
jo
push
dec
cmpb
push
ja
imul
clc
and
mov
repz
lds
ss
pop
repz
in
int3
rclb
adc
jge
ss
sysenter
mov
push
orl
and
and
fmuls
mov
add
mov
sahf
imul
loopne
cmp
jbe
addl
dec
sub
pushf
int3
cmp
stos
lcall
and
sti
outsl
lret
sub
mov
and
bnd
scas
mov
jecxz
movsl
dec
mov
add
lret
in
daa
out
push
addr16
ss
insl
cmp
fildl
sub
lret
mov
insb
xor
sub
loop
std
xor
add
jnp
pushf
out
orl
sbb
xchg
insl
insl
scas
mov
fsubrs
add
mov
fdivrl
sub
out
push
hlt
mov
jae
repz
outsl
pop
mov
sbbb
adc
mov
lret
xor
in
push
xor
jae
xchg
mov
gs
sbb
sub
lock
sahf
aas
add
in
xchg
jl
test
pop
sub
mov
ss
or
andl
enter
cs
aam
jge
sub
adc
inc
loope
lds
mov
jecxz
mov
sub
xchg
mov
push
pop
clc
pop
jae
in
add
les
es
xor
dec
insb
inc
enter
lds
jnp
dec
cmp
push
ja
push
nop
dec
cmp
dec
rcr
dec
cs
call
sahf
jns
inc
xchg
aam
cmp
clc
test
jnp
sbb
scas
add
xorb
cmp
test
push
cmp
inc
mov
lea
and
pminsw
jmp
push
push
icebp
mov
out
bound
cmpb
lods
je
std
push
mov
jno
mov
xor
inc
push
stos
add
stos
testb
je
mov
or
movsb
or
xor
jae
pop
test
pop
jmp
cmp
xchg
and
or
cld
adc
aas
add
rcrb
dec
xor
jp
in
push
lods
xchg
lret
dec
pop
pop
movsl
mov
sbb
jge
adc
jo
pop
mov
loopne
in
inc
das
orl
mov
cmc
xchg
dec
movsl
in
pop
pushf
mov
jo
xchg
out
stos
mov
mov
imul
rcrb
addr16
xchg
fistl
or
outsb
lret
outsl
jnp
dec
cmpsl
movsb
lcall
pop
int
sub
mov
lcall
ss
lcall
jno
ss
sbb
rdtsc
or
mov
popl
and
std
lods
mov
cmp
out
mov
dec
jo
jmp
repz
aam
int3
push
jns
in
test
rolb
lods
cs
rcr
mov
rolb
mov
fisubs
add
sbb
leave
aam
call
mov
adc
mov
ret
xchg
add
sbb
sbb
dec
cli
shll
dec
mov
stos
gs
ss
xchg
lods
sbb
mov
sti
and
cmpsl
out
sub
pop
mov
sti
pusha
cmp
sbb
pop
dec
mov
jnp
jne
imul
cmp
push
jge
int
or
xlat
mov
pop
add
mov
test
add
add
je
aas
cmpsb
pop
sbb
mov
je
out
mov
das
jns
mov
and
test
fildl
in
add
stos
aas
xlat
in
mov
fisttpl
iret
into
adc
pop
mov
inc
add
sub
push
push
pop
fwait
aas
add
pop
test
pop
sub
pop
aaa
cmp
imul
in
xchg
jle
lods
pop
push
fwait
and
sahf
or
pop
dec
lret
icebp
cmp
push
int3
mov
mov
sbb
fadds
es
push
hlt
ds
loop
xlat
mov
push
xor
movsb
in
js
push
mov
and
je
mov
ret
and
push
inc
inc
push
aas
inc
mov
test
outsl
inc
dec
imul
pop
in
mov
les
dec
xchg
add
pop
inc
mov
insb
push
ror
fdivs
scas
ret
stos
in
je
cmp
xorl
enter
jecxz
xor
fmuls
xchg
pop
mov
mov
popa
stc
aad
iret
sahf
mov
dec
jo
das
adc
std
std
and
sub
push
es
add
xchg
inc
xor
andb
pop
lods
pop
repz
out
and
push
and
adc
ltr
inc
aaa
mov
mov
or
pop
mov
sarb
adc
xchg
sub
sbb
hlt
stos
outsb
test
sub
xor
mov
mov
cs
adc
inc
aaa
xor
sbb
fs
pushf
stc
pushw
cmp
into
cmp
and
dec
cmp
iret
add
ss
lea
in
movsb
sti
popf
divl
les
sbbl
mov
js
xor
sbb
jl
push
sub
push
imul
aam
sub
xor
cmpsl
pushf
addr16
ja
stc
push
clc
rdtsc
add
popa
pop
pop
jmp
xor
outsb
ds
dec
jg
mov
inc
clc
ja
aaa
bound
mov
shl
mov
inc
inc
imul
sbb
pop
jnp
fstpl
insl
cmp
mov
movsb
scas
imul
pusha
inc
push
cmp
es
outsl
sbb
or
out
push
cwtl
push
add
cld
test
clc
xlat
push
or
insl
jmp
aam
icebp
movsl
call
fs
addr16
or
rcrb
test
es
test
mov
test
mov
ret
and
aas
cwtl
cwtl
je
ds
xor
lock
mov
aam
sbb
stos
cmpsb
adc
inc
dec
mov
push
movsl
loope
aaa
cmp
or
aam
sub
or
mov
scas
or
lods
mov
ds
outsb
lock
stos
pop
les
jmp
cmp
aam
jnp
lret
cmp
mov
mov
movsl
rcll
jl
jl
scas
push
mov
sahf
movsb
mov
ss
or
push
into
cli
adc
ss
sbbb
test
xchg
lds
out
ret
jl
das
ss
xchg
rorb
or
not
aad
sub
cli
xchg
mov
adc
mov
xchg
in
mov
xor
or
leave
inc
adc
xchg
jl
sbb
inc
je
push
fldcw
xor
gs
ljmp
pop
mov
and
repnz
fildl
loopne
jecxz
xchg
sub
insl
mov
add
shrb
mov
iret
call
jmp
out
sub
stc
shl
fidivrl
xlat
push
pop
outsl
push
cli
pusha
addb
daa
popf
push
sub
arpl
inc
jae
xchg
dec
add
daa
andl
addr16
inc
idivl
call
adcl
pop
add
cmc
and
roll
andb
lret
mov
jbe
sub
imul
mov
xlat
std
dec
xchg
js
mov
iret
pop
mov
rol
movsb
xchg
cmp
sub
cmp
pop
aam
lahf
stos
ljmp
mov
add
insb
fcmovnbe
sbb
push
pop
aad
or
inc
push
cmpsb
es
nop
mov
add
in
sti
int
mov
mov
or
mov
lds
mov
test
imulb
mov
addr16
xchg
std
lcall
sub
inc
mov
dec
push
or
cmp
fildll
mov
sub
push
ljmp
mov
icebp
pop
add
sarb
in
movsb
sub
mov
push
out
mov
inc
dec
fcompl
add
mull
xor
xchg
sub
mov
adcl
stos
cmp
hlt
sbb
jnp
outsb
fldcw
js
jle
or
mov
mov
sub
stos
addr16
in
jp
push
jae
add
jmp
xor
and
jne
push
lret
dec
std
out
lea
mov
imul
int3
sbb
inc
es
cmp
loop
hlt
das
fwait
fs
mov
adc
pop
mov
push
test
loop
push
mov
call
add
and
js
push
sub
xor
adc
out
pop
into
mov
push
pop
push
xchg
or
rolb
inc
inc
xlat
movsb
sbb
mov
pop
inc
ret
push
cld
ret
nop
adcb
mov
sub
popa
xor
roll
pop
push
repnz
lds
push
jmp
xchg
int
fistpl
sub
ja
jp
inc
adc
mov
mov
pusha
test
ds
mov
shr
in
mov
mov
bound
das
xor
std
cmp
add
mov
pusha
loope
rol
aam
loope
leave
ds
aaa
imul
stos
ljmp
leave
stos
aad
add
xchg
mov
and
lods
push
movsl
or
mov
ret
or
xor
cmp
sbb
xor
mov
pop
mov
rol
ss
mov
mov
push
push
or
cli
fs
cld
inc
ja
sbb
inc
aad
jl
sahf
insb
outsl
inc
cmp
jb
xchg
jmp
cmp
add
loope
ja
test
jl
sub
pop
jnp
sahf
inc
xchg
out
fisubrl
loope
cmp
jnp
sbb
sub
pop
sbb
xchg
dec
in
es
jle
dec
dec
mov
push
mov
xchg
dec
mov
push
mov
pushw
adc
mov
aad
insb
sahf
dec
push
pop
sahf
aas
ljmp
mov
clc
add
out
aaa
int
adc
sub
and
xor
mov
insl
jae
loope
hlt
xor
loopne
lcall
lahf
fs
dec
cs
push
arpl
or
mov
jecxz
jle
xchg
shlb
or
mov
dec
add
daa
addl
push
filds
mov
imul
loop
add
fdivrs
outsb
xor
jo
dec
mov
rcrb
leave
xchg
sub
je
adc
ss
add
adc
xchg
pop
insl
in
addr16
mov
sub
xor
jp
jb
mov
subb
nop
push
pop
mov
std
cmpl
popf
leave
pop
aas
pusha
or
xchg
gs
test
popa
inc
fcmovb
or
out
and
lea
sti
mov
in
into
fdiv
dec
pop
nop
jge
add
fdivl
call
and
gs
test
shll
loopne
mov
leave
hlt
insl
stc
nop
cmpl
std
call
aam
mov
fwait
repz
add
iret
inc
lahf
test
push
aaa
add
jnp
notb
les
pop
dec
fisubl
adc
dec
mov
sub
cmp
adc
push
push
push
rorl
cmp
lds
cltd
jns
cwtl
repz
sbb
mov
push
mov
dec
movsl
popa
push
lahf
cmpsb
rcll
lds
jnp
stos
test
dec
jno
sbb
ret
fcmovu
loope
jns
loop
aad
push
pop
rorl
cmpsl
je
mov
daa
sbb
rorl
popa
jp
lahf
iret
gs
xchg
rcr
dec
mov
xor
cmc
dec
lret
xor
push
mov
out
iret
mov
cmp
mov
mov
mov
sub
nop
ljmp
mov
cli
xchg
and
int3
cli
lcall
xchg
add
sbb
int
pop
jnp
and
push
and
aas
mov
jne
adc
mov
jnp
jno
ret
sbb
pop
dec
inc
push
inc
xchg
jbe
cmp
xchg
ss
cli
cmpl
fwait
aaa
into
es
jle
sti
aad
lods
add
cmp
ror
int
ret
sbb
xchg
es
shll
cmp
sbb
std
push
sbb
add
sub
jg
popf
sbb
scas
loop
cld
mov
sbb
dec
add
arpl
in
pop
fdivrs
dec
dec
fnstenv
es
call
inc
add
ljmp
mov
or
add
and
xchg
jns
clc
loop
lret
setns
loopne
cmp
stc
popa
cltd
adc
or
or
xchg
cmc
sahf
pop
insl
or
jmp
sbb
lea
es
lods
cmp
ret
into
loope
inc
jae
dec
pop
push
push
or
xchg
loope
dec
add
pop
mov
inc
pop
add
into
fildll
mov
pop
lret
xor
fstpt
test
sub
scas
xchg
mulb
cld
push
repz
xchg
mov
mov
push
cmp
xchg
mov
mov
insb
enter
xchg
jl
jns
inc
or
pop
mov
push
inc
xchg
jle
movsb
push
pusha
xor
out
sbb
daa
test
mov
pop
cli
popf
xchg
mov
push
pop
int3
jb
mov
cmp
or
sbb
cmpsb
mov
add
popa
or
xchg
add
lret
jp
loope
mov
push
scas
lock
lret
stos
in
fdiv
jg
mov
push
repnz
imul
xchg
icebp
jmp
cltd
cmp
mov
insl
mov
lods
and
sbbb
loopne
int3
jne
xorl
cmp
and
jno
xchg
subl
lret
filds
addb
adc
jbe
pop
xor
dec
dec
ljmp
xchg
mov
aam
arpl
cwtl
mov
sub
lods
adc
push
pop
sub
mov
sbbl
jle
sbb
cmp
xchg
das
mov
sbb
loope
and
out
xchg
testl
xlat
xor
mov
mov
jecxz
and
pop
pushf
jno
movsl
rclb
push
xor
dec
jb
push
push
xchg
sti
das
pop
jae
aam
leave
lods
jns
or
dec
xor
push
and
lea
movsl
test
scas
setbe
cmp
fmul
and
dec
jge
sbb
sub
sbb
ret
arpl
repnz
test
add
shrl
xchg
imul
push
and
pop
outsl
test
mov
movsb
add
ds
xchg
and
jecxz
mov
dec
mov
sbbl
sub
xchg
adc
pop
inc
cmp
sub
sub
dec
popf
or
ds
pop
mov
movsb
or
fstl
cmp
cmc
shll
fcomp
frstor
mov
setl
icebp
cltd
scas
pop
pop
mov
les
mov
mov
jbe
sahf
cvtpi2ps
sbb
mov
adcl
mov
cmovp
xchg
shlb
lret
pop
xor
mov
xchg
sarl
pushf
or
cmp
adc
out
mov
test
repz
jne
mov
mov
jl
mov
scas
inc
sbb
pop
test
in
or
shl
adc
jg
lret
hlt
mov
add
pop
orb
fwait
cltd
hlt
mov
loope,pt
scas
pushf
clc
popf
push
push
loop
push
xlat
mov
dec
mov
pop
or
dec
xor
mov
inc
cmp
sub
push
sarl
test
insb
xchg
and
jge
jb
pop
ds
mov
mov
xchg
in
sti
movl
dec
and
lock
mov
lcall
push
jne
jecxz
jge
pop
loop
push
push
sub
stos
call
gs
adc
pop
adc
xchg
fistl
dec
test
pop
cmp
xchg
dec
add
mov
cmp
lret
mov
inc
jb
arpl
sub
adc
rcrb
mov
popa
jb
jle
xor
int
dec
mov
xchg
js
std
mov
cmpsl
push
mov
ljmp
idivl
push
mov
dec
fidivrl
stos
mov
inc
sub
mov
fidivl
mov
shll
xchg
add
push
jmp
inc
dec
xor
test
sahf
into
jmp
pop
fwait
jns
mov
jbe
adc
ds
dec
jl
aad
sub
bound
xor
pop
mov
aas
lahf
adc
inc
insl
leave
dec
lcall
cmp
ss
lret
inc
movsl
loopne
das
jecxz
or
ss
popa
mov
ja
nop
push
sub
in
pop
repz
out
jnp
pop
mov
ljmp
bswap
or
sub
pop
test
cli
out
adc
out
in
or
or
adc
ret
push
add
sti
arpl
mov
and
lds
sbb
pop
or
iret
fnsave
insl
mov
imul
cld
test
aam
cmc
cmp
push
shrb
pop
pop
mov
aad
js
out
cmp
lahf
sub
test
xor
sbb
jp
in
leave
push
sub
aam
scas
insb
jb
pop
sti
sub
pop
cld
cltd
std
adc
push
xchg
xchg
sub
push
add
dec
js
add
setno
sub
ja
mov
aas
jnp
add
xchg
dec
arpl
jmp
ljmp
movsl
dec
xor
cmp
push
push
xor
ljmp
imul
lods
test
adc
ds
cmc
cwtl
call
fs
stos
fistpl
lods
stos
jl
hlt
ljmp
or
roll
jo
dec
push
inc
pop
pop
imul
iret
xchg
mov
adc
cmp
sbb
ret
pop
in
sahf
inc
xor
cmp
imul
mov
repz
and
pop
pushf
repnz
cmpsb
fnstsw
movl
mov
adc
or
pusha
aas
jb
movsb
pop
gs
xor
sub
movsl
and
lcall
adc
scas
push
cmp
xor
ja
dec
xchg
lret
lret
sub
mov
test
or
test
test
in
jge
hlt
jbe
mov
jns
mov
adcl
pushf
stos
stos
push
negl
push
mov
dec
out
cmp
jp
or
cld
insl
cs
arpl
adc
js
xor
insb
pop
das
and
inc
test
cmp
mov
iret
hlt
xchg
sub
jno
mov
sub
fistpl
outsb
in
popf
and
mov
pop
sti
jo
lds
dec
jp
mov
imul
mov
daa
mov
dec
xchg
imul
mov
test
mov
inc
mov
aas
fisttpl
popf
rorl
mov
gs
out
shll
insb
andb
insl
jae
xchg
iret
test
jmp
das
mov
in
filds
mov
mov
push
push
xor
xor
lods
mov
push
fdivr
mov
leave
ljmp
in
out
adc
outsl
fdivr
mov
je
mull
insb
fldt
xor
add
pop
adc
fwait
jnp
pop
imul
mov
test
ret
adc
xchg
lds
adc
sub
push
iret
cwtl
and
xchg
jbe
jle
mov
out
push
mov
inc
paddusb
leave
div
lret
sub
mov
adc
inc
dec
add
and
mov
mov
xor
push
cmpsb
and
dec
sti
cmc
or
push
pop
insl
mov
shrb
ret
mov
adc
aaa
lea
push
pop
ljmp
push
cmp
pop
lahf
out
jo
faddl
in
test
sub
cmp
out
hlt
mov
gs
rorl
sub
adc
pushf
mov
subb
dec
push
pop
or
pop
pusha
aas
les
xlat
xlat
or
mov
inc
movsb
dec
notl
les
cmp
push
les
mov
cmp
js
aaa
xchg
loop
into
xchg
add
jle
cmc
sbbb
lahf
sbb
fcomip
mov
popf
push
dec
mov
cmp
mov
mov
fiadds
or
ljmp
xorl
jle
lods
in
jbe
outsb
adc
adc
or
jo
ret
bound
dec
mov
lcall
cltd
push
push
mov
iret
and
push
push
cwtl
inc
cmp
inc
mov
ffree
das
sbb
int3
jl
imul
add
ret
popf
mov
notl
es
dec
mov
cmp
xchg
push
loopne
adc
repnz
stos
cli
push
mov
pop
fcomp
shlb
xlat
arpl
fs
sbb
sbb
xchg
movsb
mov
ljmp
bnd
add
add
popw
mov
inc
xchg
mov
mov
pop
cmc
call
mov
add
aam
faddl
xor
rorb
dec
sbb
in
bound
je
aaa
nop
mov
or
ret
outsb
mov
add
lcall
add
movsl
sbb
push
js
into
pop
je
mov
jge
mov
test
push
sbb
in
and
movsl
mov
fwait
xchg
aaa
add
cmc
or
cmp
inc
out
mov
and
bound
lds
jg
mov
mov
lret
in
insl
pop
ud0
sar
push
clc
outsl
xor
sbb
mov
adc
icebp
pop
and
nop
iret
aas
jae
sub
loop
fwait
push
imul
mov
mov
pop
pop
cmp
testb
pop
dec
icebp
lahf
std
jge
dec
sbb
sub
push
and
mov
imul
mov
jecxz
pushf
xchg
sub
ret
adc
pop
jp
movsb
and
fisubl
enter
clc
addb
lods
jbe
xchg
xor
out
in
fldenv
mov
popf
and
xchg
aad
clc
mov
lods
mov
addr16
inc
mov
daa
push
lea
fcoms
mov
lds
cltd
cltd
mov
adc
or
lea
cmpsl
pop
push
sahf
pop
pop
movsl
mov
leave
sar
mov
and
adc
addr16
lods
jp
mov
or
adc
inc
nop
loopne
mov
data16
sbb
cwtl
das
pop
mov
test
test
lahf
cmpb
inc
shll
stc
pcmpgtw
xor
jle
sub
add
sub
cli
xor
out
icebp
inc
xor
xchg
imul
push
xor
mov
add
mov
sbb
xor
and
mov
add
je
clc
sbb
insb
mov
sti
push
jl
mov
int3
sub
push
xchg
push
mov
sub
sbb
mov
xor
jg
mov
nop
sub
popf
repz
push
push
hlt
sar
mov
dec
dec
dec
fsts
xor
and
add
test
sbb
in
xor
xchg
sub
jle
int3
lods
jmp
filds
pop
ss
insb
ds
jmp
cmpb
sbb
pop
or
insl
scas
fnstenv
jae
pop
lret
add
pmulhw
dec
aam
cmp
dec
ret
push
lds
push
and
add
pop
jno
or
call
xor
dec
and
inc
jb
fisttpl
jle
ret
in
or
cmpsl
cmp
cmp
stos
imul
aad
jo
sub
scas
cmp
push
leave
push
hlt
arpl
scas
dec
sbbb
mov
fcoms
add
and
test
ror
inc
aad
mov
hlt
cmpsb
and
sahf
push
in
mov
add
imull
aam
int
ja
rcrb
xlat
adc
movsl
and
cmpsb
xchg
dec
aas
test
add
xchg
pushf
sbb
rcrb
mov
xor
dec
inc
ss
cmp
xchg
jno
xorl
adc
repz
cmp
add
push
mov
dec
lahf
jnp
fimull
cmp
xor
add
sbb
mov
test
lods
popa
daa
jne
loopne
fisttpl
xchg
frstor
mov
negb
jl
sar
outsl
cld
mov
mov
call
mov
mov
arpl
sub
int3
push
xor
or
and
popf
dec
nop
aad
fcomps
mov
sub
shl
imul
xchg
pop
mov
cmp
pushf
cmp
pop
shl
mov
and
hlt
xor
fbstp
ds
inc
shll
inc
and
jne
ja
push
clc
sub
lcall
cmp
mov
add
ljmp
fcoml
pop
add
mov
cmpsb
imul
add
fwait
inc
push
rolb
out
inc
mov
mov
push
fstpt
sbb
mov
inc
cmp
out
jecxz
cmp
xlat
stos
pop
movsl
mov
outsl
repnz
or
call
xor
cmp
nop
lea
xchg
add
adc
fsubrs
xor
cmp
push
sahf
xchg
or
icebp
mov
add
aaa
cs
icebp
add
int3
push
pop
adc
mov
sbb
or
xor
mov
push
xchg
std
pop
popa
ds
sub
movsl
add
push
sub
add
sub
icebp
mov
mov
push
in
pop
xchg
jno
push
jae
pop
xchg
cmp
mov
cld
lahf
dec
dec
cmpsl
jg
bound
fmuls
mov
stos
jmp
xor
cmc
pop
int3
fstp
or
sub
inc
sub
out
stc
lock
push
jno
fwait
mov
mov
outsb
fisttpll
sub
stc
pop
loop
jae
shl
pop
mov
outsl
jne
lahf
shlb
icebp
mov
or
push
xor
shlb
jnp
jnp
scas
out
ja
jo
inc
jle
mov
lahf
push
insb
mov
cltd
mov
std
xchg
and
mov
shlb
adc
pop
jge,pt
fwait
stos
xchg
aas
adc
push
pushf
out
push
or
lcall
adc
cmpsl
xchg
inc
outsl
cmpsb
adc
mov
jg
fsubl
mull
xchg
rorb
outsl
xchg
cli
jne
aas
xchg
inc
and
adcl
pop
sahf
movsb
xor
push
icebp
adc
stc
and
add
push
imul
shr
in
addb
lea
clc
pop
hlt
jg
mov
fbld
fiaddl
popa
je
cltd
sub
jbe
mov
imul
push
jnp
add
cltd
xchg
xchg
adc
or
inc
movsb
idivl
jne
stos
xor
imul
or
loope
dec
mov
es
mov
cwtl
inc
xchg
mov
jns
fisttpll
das
fdivl
jecxz
mov
pop
sbb
cld
mov
jmp
inc
mov
imul
leave
pop
cmpsb
add
scas
pop
xchg
pop
out
ljmp
cmpb
adc
or
divl
je
inc
mov
cmp
or
lahf
jne
sub
adc
push
mov
and
mov
jno
sti
and
and
fildll
jg
out
insb
mov
stos
add
cmp
out
and
mov
xchg
hlt
aad
push
mov
aam
lret
insb
jecxz
inc
inc
dec
andl
jae
or
mov
jno
fistl
mov
int3
push
jg
movsl
mov
lea
mov
fwait
jecxz
pop
dec
inc
sub
pop
push
out
lds
mov
sub
les
cli
repz
mov
sub
movsb
jecxz
out
and
in
sub
out
sbb
jne
andl
mov
jp
and
mov
orb
adc
rcrb
or
jo
mov
mov
sbb
xor
fistl
inc
mov
sub
dec
outsl
pop
push
mov
std
andl
mov
lea
fld
lock
data16
call
in
fldt
or
movsl
imulb
jnp
mov
lods
aas
scas
fistps
sub
subl
das
mov
xchg
inc
cmp
sub
in
lahf
or
insl
mov
dec
push
lods
leave
push
roll
add
icebp
cs
pop
adc
adc
dec
lock
addr16
sahf
inc
es
inc
std
popa
ds
in
add
inc
cmp
add
xchg
fldenv
lods
cmp
stos
pop
mov
mov
sti
shlb
push
dec
sbb
fmull
mov
pop
loop
mov
fstl
pop
cmp
out
int
jb
insl
sbb
bnd
test
fisubrl
mov
sti
adc
out
xlat
scas
cli
roll
mov
pusha
mov
push
lret
xor
scas
outsb
shl
xor
test
lods
push
lds
out
fstpl
cmp
and
out
jb
jg
inc
mov
sub
xor
in
adc
insl
mov
mov
movsb
pusha
jbe
sbb
lock
mov
mov
sti
mov
xor
aaa
imul
add
inc
cmpsl
xor
push
icebp
add
or
shl
imul
fidivs
mov
pop
shlb
aad
add
mov
jb
shlb
imul
gs
jl
daa
imul
push
adcl
flds
nop
ret
and
loope
mov
adc
fisttps
push
adc
pop
pushf
sub
mov
sub
cmp
int
cmp
shll
inc
das
adc
xlat
les
ss
outsb
fcoml
pop
cmpsl
hlt
in
adc
add
cltd
or
jg
and
push
scas
push
dec
repz
inc
outsb
mov
mov
sbb
arpl
ret
pop
push
sbb
int3
cmp
sar
psrlq
xchg
icebp
cmpsl
repnz
or
lods
jl
cwtl
loop
in
push
fimuls
and
push
jge
and
inc
call
xor
test
cs
fadds
arpl
xlat
inc
in
popf
aam
inc
inc
sub
arpl
jecxz
push
mov
pushf
insl
and
mov
ds
sahf
fiaddl
test
inc
pop
mov
add
test
addr16
inc
test
inc
and
pop
mov
push
sbb
sarl
mov
cvtps2pd
outsl
xchg
test
pop
jbe
std
cmc
xchg
pop
cs
data16
fmull
flds
jne
arpl
es
jl
dec
pop
fwait
repz
mov
test
and
add
mov
pop
enter
out
jne
cwtl
fisttpl
mov
movsl
adc
lock
jmp
push
movsb
test
and
inc
ss
popa
cltd
das
js
jns
dec
or
sub
cmpsl
sub
dec
repnz
out
dec
imul
fwait
inc
mov
jg
inc
adc
test
push
or
jge
or
inc
cmp
test
jmp
push
loope
fwait
push
arpl
sbb
mov
fstl
imul
or
loop
out
ds
push
cmp
mov
loope
jmp
fnstsw
popf
mov
arpl
aad
cli
push
mov
push
mov
les
jg
adc
pop
imul
xchg
stos
in
or
mov
fstpt
xchg
sbb
push
gs
in
cli
ljmp
insl
call
insl
aam
add
add
adcb
xchg
in
iret
cwtl
iret
out
inc
add
ret
push
jge
loopne
dec
pop
addr16
rcll
xlat
mov
dec
add
loope
xlat
mov
cmp
push
and
mov
fwait
add
rorb
inc
adc
arpl
sub
fsubrs
rcrl
adcb
in
movsb
test
jle
push
lock
xor
push
cltd
inc
repnz
jns
call
ficomps
imul
cltd
ret
test
inc
or
pop
inc
in
or
pushf
push
repnz
xor
mov
scas
xchg
sbb
cmp
ds
jb
cmp
lea
adc
mov
jne
js
mov
add
inc
es
out
outsl
inc
lret
add
xchg
es
jo
push
inc
call
lahf
xchg
jle
or
push
push
mov
lret
and
dec
popf
xor
lret
adc
adc
int
add
pusha
in
push
movsb
sbb
sbb
fnsave
pmulhuw
repnz
ret
ret
insl
aam
lock
test
and
into
dec
mov
sbb
xor
dec
stc
test
pop
in
push
loope
xchg
sbb
ficompl
mov
sahf
nop
out
leave
imul
les
jmp
mov
inc
loop
rep
xchg
add
pop
or
data16
pop
adc
in
inc
fs
ffreep
sbb
addr16
imul
aam
sar
aam
xor
push
popf
jge
sbb
fidivrl
xchg
xor
arpl
divb
daa
jp
aam
repnz
fwait
pop
cmp
daa
insb
pop
lahf
into
or
push
cmp
int3
mov
xchg
xor
xchg
fucomi
mov
hlt
or
sbb
dec
sbb
jg
pop
std
adc
sbb
adc
pop
daa
dec
cmp
lods
sbb
adcl
pushf
scas
cmp
jbe
xchg
loope
ljmp
adc
lea
mov
adc
shrb
ja
mov
lock
jecxz
fdivrp
and
ss
and
mov
inc
cmp
xor
and
sti
stos
add
or
out
jo
jp
cli
xchg
hlt
dec
test
push
int3
repnz
cmpsl
lret
lret
lcall
gs
out
jmp
cmp
sub
dec
and
inc
ljmp
push
outsl
mov
sub
icebp
popa
repz
in
imul
pop
out
jno
sbb
movsb
dec
dec
gs
adc
sub
les
mov
outsl
ds
test
enter
pusha
clc
leave
mov
mov
decl
sub
xchg
lret
cmp
mov
sbb
jmp
push
and
mov
push
pusha
sbb
sgdtl
mov
cmc
pop
add
daa
sbb
insb
leave
jp
sahf
je
mov
insb
shll
pop
jl
cmp
shrl
lret
enter
jns
sbb
pusha
seto
scas
fisttpll
in
push
lret
push
repz
mov
lcall
inc
icebp
sbb
call
push
mov
and
insl
std
sbb
jb
cld
inc
clc
int
fiaddl
pop
aaa
push
mov
and
sbb
sti
jne
repz
out
sti
jg
pop
insl
movsl
repz
mov
fists
roll
mov
mov
or
roll
xor
xchg
push
adc
dec
xor
push
rcrl
push
jle
imul
daa
dec
out
mov
dec
shll
les
xchg
inc
fstps
es
jne
cmp
cmp
push
pushf
xlat
inc
push
jge
les
pop
push
fs
sti
sub
popf
jge
xor
cmp
and
adc
das
fildll
dec
sti
sub
jge
cwtl
filds
mov
ja
mov
ds
xor
sub
jl
sbb
mov
insb
in
inc
adc
mov
add
je
jecxz
push
or
leave
mov
pop
mov
test
movsl
stos
out
or
cltd
or
mov
inc
adc
sub
inc
mov
movsl
adc
scas
lods
out
xorb
ja
sbbb
icebp
aam
lds
cmp
cmp
jg
sahf
sti
loopne
stos
pop
arpl
push
arpl
subl
movsl
clc
repz
lods
enter
xchg
shlb
or
les
mov
jns
movsl
es
aad
xchg
rcll
cmp
sarl
stc
adc
loop
cmpsb
mov
in
fs
adc
das
sbb
inc
push
xchg
mov
and
fwait
sub
sahf
mov
mov
or
aad
das
jae
sub
mov
jl
jnp
lret
pop
mov
pop
fwait
repnz
inc
test
inc
fidivl
adc
inc
xchg
int
movsl
mov
add
cmc
mov
jo
int
cbtw
jmp
xchg
js
mov
outsl
jae
in
xchg
clc
stos
in
adc
mov
out
loop
sub
or
pop
inc
add
add
pop
push
or
xlat
mov
icebp
jne
pop
cmc
or
pop
jae
inc
dec
inc
lret
mov
in
pop
mov
mov
pop
orl
fldl
daa
rolw
bound
faddp
ds
shlb
nop
xchg
jne
stos
or
divb
push
sarb
pop
imul
cmc
mov
ss
incl
pusha
sub
cmp
mov
fwait
cmc
mov
stc
lahf
iret
int
and
jmp
and
shl
sbb
movsl
dec
lods
push
pop
enter
fwait
enter
ds
dec
add
rcll
pop
mov
mov
je
lods
or
xlat
clc
arpl
dec
pop
sub
sbb
enter
in
and
das
mov
xchg
and
adc
repnz
sub
dec
adc
sbb
hlt
pop
cmp
adc
cmp
sbb
mov
xor
cmc
or
mov
rol
adc
std
pop
sub
loope
imulb
popf
add
mov
movsb
jb
push
ret
testb
inc
add
xor
xor
jp
ret
sbb
in
jmp
insl
testb
and
cmpsb
addr16
push
in
popa
mov
mov
jl
mov
test
add
pushf
jo
adc
fcoml
mov
add
test
lds
inc
sti
xchg
push
cld
cmp
xchg
lods
fidivrl
cmpsl
inc
xchg
filds
cli
mov
lods
or
pop
push
or
sub
ljmp
dec
mov
std
sahf
mov
stos
rclb
inc
or
lahf
mov
and
inc
and
ret
xchg
xchg
shrl
push
jle
cmp
pop
sbb
ljmp
sbb
xchg
fdivrl
imul
mov
cmp
pop
ret
or
notb
pop
mov
out
adc
xor
xor
inc
push
inc
dec
adc
cmp
push
dec
mov
ljmp
push
rolb
cltd
dec
ja
test
loopne
cld
enter
pop
add
orl
ds
bswap
mov
pop
sti
lock
in
lret
push
jnp
loop
insl
jne
je
dec
mov
adc
jne
mov
push
and
out
scas
xchg
xor
adc
rorl
pop
jp
cmp
ljmp
or
adc
leave
sub
sub
sbbl
sub
pushf
das
sub
push
movsb
jno
aas
or
fadds
mov
loope
and
clc
data16
gs
mov
adc
ss
inc
ds
aad
jb
pop
dec
xlat
inc
scas
ljmp
adcl
lret
jmp
outsl
mov
cs
clc
in
cmpl
leave
push
test
push
sahf
jg
shlb
cmp
lcall
shl
mov
push
in
pop
xchg
or
xchg
int3
lret
loopne
test
adc
push
rcrb
inc
or
pop
and
cmpl
rcr
xchg
mov
push
adc
dec
sub
jno
xlat
mov
outsl
stos
inc
ret
dec
cs
pop
pop
aam
aas
add
fs
jne
data16
mov
lea
repz
mov
jns
sbb
xor
xlat
jp
cmp
stc
arpl
inc
scas
pop
sti
mov
in
iret
lods
xchg
lret
push
push
bound
lods
jg
adc
push
cltd
out
scas
aad
ss
roll
scas
jge
iret
and
hlt
or
and
jle
aad
lret
dec
push
mov
mov
xadd
push
xor
mov
mov
xor
mov
insl
cmp
cmpsb
int3
push
sbb
call
je
inc
push
ret
shl
outsb
fwait
outsb
dec
add
fcoms
jg
stc
sbbl
std
imul
rorb
cmp
inc
pushw
idiv
xchg
das
mov
fs
lods
mov
fldt
xchg
jmp
dec
xchg
stc
sar
or
sbb
movsb
sbb
fisubs
imul
fsubrl
dec
stc
fwait
inc
rol
stos
fucom
sbb
fnstcw
cmp
push
popf
cmp
daa
jne
outsl
or
imul
outsb
loopne
mov
jmp
xor
daa
or
lret
ja
pop
insb
add
mov
pop
pop
xor
call
jo
push
jmp
adc
xchg
stc
int3
lcall
and
push
jmp
scas
adc
pcmpgtd
fistps
shll
stc
lods
aas
dec
aaa
push
pop
outsb
shll
pop
bound
jne
xchg
fbld
dec
or
std
test
adc
pop
gs
xchg
pop
fisttps
rcl
cmp
repnz
lcall
xor
jnp
loop
out
icebp
and
sbb
outsl
and
in
repz
ret
movsl
scas
xlat
aad
sub
aas
push
and
call
fidivl
decl
rclb
decl
lea
pop
xchg
xor
into
leave
mov
mov
fmul
sbb
push
sub
sbb
cld
adc
roll
ret
scas
push
insb
fistpll
fnstenv
movsb
inc
adc
fidivs
sub
mov
cmp
pop
dec
scas
dec
xchg
aam
stos
cwtl
shr
mov
inc
inc
xchg
scas
pop
decb
xorb
adc
popa
push
mov
test
imul
or
call
pop
inc
and
adcb
xor
ja
push
cmp
and
sub
stos
ficompl
dec
stos
cmpb
out
fcoms
add
int
sbb
xchg
jo
sbb
das
mov
cs
dec
insl
scas
jb
ret
std
xor
in
sbb
mov
out
jle
xchg
arpl
repnz
out
ds
gs
mov
lods
xorb
sub
lods
es
fsubrs
pop
cmp
jo
cmp
int
jo
test
out
mov
adc
or
push
fnstsw
cmp
lods
loopne
mov
xor
xor
jle
outsl
addr16
lock
xlat
xor
in
in
inc
in
imul
inc
movsb
add
mov
push
in
sbb
add
lret
sbb
cmpsb
mov
fsts
fsubs
jo
loopne
push
xor
xchg
dec
xor
aas
push
js
push
or
fnsave
mov
sti
inc
pop
out
rclb
pop
adc
lahf
inc
push
inc
pop
jmp
inc
shr
leave
pusha
mov
xchg
shrl
xchg
pop
stos
or
ret
adc
addl
ret
mov
ljmp
jne
xchg
jno
pop
sub
xchg
es
ret
aaa
stos
test
add
adc
pop
xor
xor
out
rcrb
ljmp
pushf
cwtl
pop
ds
cs
lcall
imul
into
cmp
xchg
and
lret
sub
sbb
test
push
jne
xchg
loopne
test
scas
pop
push
ss
jl
call
nop
adc
aaa
js
xor
imul
movsb
mov
dec
or
adc
mov
int
push
lret
icebp
mul
cmpsl
xchg
popf
adc
repnz
cld
mov
pushf
fs
clc
inc
sub
push
test
ret
jecxz
xor
jnp
rcr
mov
sar
setns
xor
pop
push
loopne
aas
add
aam
mov
test
in
pushf
xor
sti
movsb
jle
or
adc
add
xchg
xchg
jle
out
mov
fldt
ja
pop
jb
shrl
add
mov
cs
xchg
aaa
or
shl
or
pop
and
pop
push
and
shll
rclb
mov
dec
inc
shll
outsb
shrd
jo
bound
mov
xor
nop
jno
mov
cmpsl
mov
in
mov
std
sbb
adc
loope
movsl
mov
loopne
sbb
adc
loop
shr
cmp
aaa
xor
add
jecxz
jae
mov
fidivs
pop
cld
push
inc
push
repz
ds
outsl
jg
add
mov
ret
cld
sti
idivb
sarb
or
iret
jg
lret
ret
addr16
mov
mov
inc
icebp
dec
add
gs
cmpsb
and
mov
lahf
hlt
loopne
inc
repz
cmp
aaa
ss
push
fldenv
mov
mov
call
mul
addl
ficoms
xchg
into
cmp
test
popf
sub
jb
push
add
out
adc
add
mov
in
or
jg
popa
inc
mov
mov
lret
shlb
ret
mov
pusha
js
jae
pop
mov
addr16
lds
in
and
inc
or
sahf
sbb
jno
inc
inc
scas
jns
jmp
mov
cmp
arpl
sahf
bound
mov
iret
test
aaa
js
nop
xchg
movq
loop
inc
and
in
fs
xchg
test
mov
dec
pop
xor
lds
sbb
into
lea
push
push
mov
sub
rcrl
sub
jp
es
fisubl
pop
jae
aad
ja
scas
lret
mov
sbb
sbb
jb
testl
xchg
adc
and
or
xchg
cmp
lret
dec
xchg
dec
ss
cwtl
sbb
adc
dec
std
shlb
and
inc
mov
fxch
inc
repnz
je
into
aad
sbb
cmp
cmc
cmp
rcr
nop
sub
loop,pt
sub
pop
cmp
sub
xor
xlat
fwait
xor
pop
mov
sti
incb
fisubrs
mov
inc
imul
mov
loop
outsb
lds
sub
mov
and
cmp
xor
and
pushf
mov
mov
inc
lahf
jmp
adc
cmp
sub
mov
xor
and
add
mov
pop
push
pop
ds
es
scas
mov
sarl
aam
inc
jae
clc
jne
fs
call
test
dec
imul
movb
adc
sub
sbb
inc
mov
xor
popa
pushf
and
add
sub
ds
inc
enter
les
lea
fisttpl
aam
cmp
or
push
or
inc
mov
loopew
jmp
cs
jo
outsb
adc
sub
and
xor
js
xor
push
or
scas
imul
inc
aaa
xchg
pop
push
call
outsl
xchg
mov
mov
inc
jge
jge
imul
mov
adc
pop
or
shll
fisttps
xor
cwtl
xchg
mov
push
cwtl
or
dec
push
sub
mov
mov
addr16
mov
dec
cld
stos
fcomi
add
cld
adc
inc
cmp
add
pmaxub
mov
jg
das
in
pop
mov
out
out
mov
inc
cmp
ror
inc
aam
loopne
das
mov
mov
mov
int3
scas
mov
lahf
rcll
pop
iret
lret
jns
dec
mov
ljmp
enter
or
test
xchg
dec
mov
jmp
insl
inc
inc
insl
pop
inc
inc
push
rcll
push
and
and
inc
or
dec
ret
cmp
or
cmp
jmp
shll
or
dec
cmp
jmp
aaa
inc
mov
mov
xor
cmpsb
mov
hlt
outsl
cmc
lds
test
jmp
pop
sub
je
mov
push
jmp
jg
cmpl
cwtl
test
add
mov
int3
insl
xlat
es
jo
mov
push
mov
add
jg
and
push
xchg
mov
jecxz
adc
and
jns
or
lahf
xor
ret
nop
scas
xchg
icebp
adc
or
enter
test
sti
sarb
cltd
bound
div
adc
xchg
sub
roll
add
dec
loop
mov
and
mov
cmpsb
mov
addr16
sbb
lahf
sub
inc
add
push
add
pop
sti
les
push
cmp
ret
out
and
xchg
sub
lcall
aam
clc
inc
shrb
jbe
add
inc
aas
mov
leave
sbb
loope
pusha
xor
clc
lock
jns
call
xchg
jno
inc
mov
or
push
inc
fidivrl
pop
mov
xorb
cmp
mov
lods
rcrl
push
xchg
inc
stc
mov
push
leave
mov
sbb
mov
mov
movsl
test
mov
in
mov
testb
adc
add
arpl
mov
jecxz
cld
scas
ficoms
dec
sbb
cmp
pop
inc
add
xchg
push
push
mov
add
leave
xchg
inc
in
sub
or
sbb
pop
int
cltd
xor
insl
aas
insb
pusha
aad
fwait
loop
xor
mov
test
adc
movsl
test
pop
int3
sbb
pop
dec
cmpsl
dec
cwtl
inc
push
sahf
ds
and
lock
decb
roll
jb
mov
mov
stos
ficomps
data16
subb
push
int
in
test
movsb
dec
jl
and
jl
and
sub
add
adc
pop
xor
inc
shlb
xor
sub
jne
add
jg
loop
out
insl
dec
out
adc
cmpsl
adc
sub
lea
fldl
mov
into
pop
scas
addl
lds
loope
test
xor
adc
mov
js
inc
aaa
or
arpl
adc
xlat
pop
icebp
jle
incb
xor
cmp
pop
or
dec
push
add
cs
or
icebp
mov
jge
subl
jg
sbb
insb
inc
inc
jp
imul
inc
xchg
jae
push
cmp
mov
dec
push
mov
in
push
sub
inc
push
mov
aam
test
mov
jno
xchg
test
andb
push
and
jge
or
sbb
jnp
repnz
mov
sbb
cmp
out
mov
ljmp
xor
fildl
inc
jecxz
xchg
cmp
lea
test
mov
hlt
mov
push
aad
mov
vmread
shl
push
stos
cmp
addb
push
dec
jmp
sbb
and
fisubs
popf
xchg
in
or
pop
lret
ja
sub
inc
dec
sarl
xchg
push
pop
aam
pop
sub
and
insb
into
pop
sbbb
les
push
push
scas
pop
sub
xchg
push
push
out
loopne
movsb
mov
jl
sub
xchg
or
rcll
inc
lds
sbb
cmpb
jle
dec
clc
testb
sbb
icebp
xchg
je
mov
dec
ljmp
and
mov
lods
jp
in
fimull
sbb
fs
outsb
xor
dec
pop
mov
pop
mov
dec
adc
adc
xchg
out
cli
cs
xchg
mov
fwait
pop
xor
fwait
lods
mov
dec
fsubrl
pusha
jecxz
fwait
fildll
or
or
stos
inc
mov
icebp
in
shll
cmp
pop
ja
jp
repz
es
cltd
add
insl
test
les
loope
outsb
adc
aam
cmp
out
into
ret
inc
movsl
push
popf
xor
pop
add
fldt
call
data16
pop
loop
mov
mov
ret
push
adc
jo
inc
and
movsl
push
adc
push
and
scas
mov
ror
mov
mov
scas
hlt
popf
adc
std
mov
enter
mov
push
popf
push
les
pop
xchg
ror
je
mov
and
pusha
out
lods
mov
xchg
mov
mov
push
pop
mov
mov
push
xor
lods
lea
test
pushf
mov
push
jle
dec
push
sbb
pop
int
sub
inc
je
nop
sbb
in
test
das
aaa
std
dec
mov
and
dec
cmp
push
cmp
push
sub
jae
xchg
mov
xlat
sbb
insl
jg
shll
fsubr
and
loope
xchg
pop
stc
lcall
sub
lcall
push
inc
movsl
nop
scas
add
adc
ror
add
testl
lds
push
cltd
loopne
mov
lahf
imul
ja
stc
jae
fistps
shll
stos
mov
mov
mov
cmp
jge
cmpsb
insl
movsb
outsl
xchg
pop
and
xchg
and
aaa
lea
shl
imul
test
add
fstl
mov
cld
fprem
data16
and
add
pop
stos
mov
cs
sub
or
sub
inc
into
add
push
push
adc
outsl
pop
lds
fadd
mov
xor
pop
pusha
xor
mov
aad
xchg
cmp
std
sbb
adc
pop
sub
and
dec
jnp
mov
adc
inc
inc
mov
cmpsl
lahf
add
int3
loopne
push
sbb
xchg
lahf
in
adc
inc
test
dec
out
pop
stos
outsb
sbb
sbb
push
jne
or
jl
cmp
aad
jle
adc
jge
pushl
sub
push
sbb
in
in
push
scas
mov
and
sahf
fnsave
ret
addr16
xor
sub
push
fcmovnbe
adc
fidivrl
mov
out
mov
scas
and
pop
nop
insl
shlb
mov
add
cwtl
pop
in
sbb
mov
xchg
mov
jo
xchg
aas
add
enter
add
ret
loope
sub
mov
xchg
adc
mov
xor
and
les
add
cmc
and
lods
mov
and
nop
movsl
ret
and
mov
movsl
in
ficoms
fiaddl
mov
cmp
jnp
lret
pusha
repz
xor
in
fwait
imul
dec
pushl
jl
int3
xchg
mov
cmc
fs
inc
rcll
push
mov
add
leave
add
fsubrs
sti
movsb
int3
push
inc
xor
push
jg
dec
push
rorb
addr16
icebp
pop
mov
xchg
fidivrl
dec
pop
jp
mov
adc
loop
pop
les
popa
jmp
icebp
add
fmuls
insl
mov
sub
pop
std
clc
shr
mov
ljmp
mov
mov
lahf
stos
js
push
mov
adc
jmp
mov
xlat
pop
mov
ljmp
test
or
cltd
lods
xchg
push
test
scas
in
pop
adc
or
test
popf
fwait
push
es
out
or
xchg
hlt
add
cmp
xchg
or
pop
xor
push
jno
ljmp
stc
mov
adc
lock
xchg
adc
out
mov
js
adcl
mov
adc
stc
xor
or
adc
push
in
and
push
ficoms
xchg
hlt
add
mov
mov
cmp
stos
sarb
das
cmp
lods
cmp
xor
loope
jb
or
xchg
mov
push
negl
push
test
inc
mov
cld
repnz
adc
popa
das
outsl
mov
sub
jnp
dec
xor
es
ljmp
out
stos
arpl
cmpsb
jo
aam
jg
inc
js
xor
xchg
fildll
mov
mov
jecxz
mov
or
lcall
jge
lock
cmpsl
popa
xor
clc
test
ss
lods
lods
jno
fwait
pusha
pusha
fwait
jle
push
dec
lods
in
sahf
jle
xchg
cwtl
push
cli
inc
nop
data16
fadd
es
movl
ljmp
lods
xchg
push
aaa
mov
int
in
lods
fs
jecxz
test
out
xsha256
cmpsb
push
repz
repz
lock
jl,pt
cmp
imul
std
sbb
stos
jle
insb
xorb
js
ss
icebp
ljmp
stos
mov
and
icebp
or
cwtl
adc
jne
negl
pusha
fadds
jb
fwait
cmp
pop
lret
or
in
cmp
gs
mov
mov
xchg
lock
mov
adc
mov
mov
mov
push
xor
pop
jle
cmpsl
xchg
dec
cli
sbb
popf
das
cmpsb
addr16
dec
hlt
sbb
out
stos
cli
xor
bound
push
stos
insl
mov
ljmp
out
sbb
jne
xchg
or
imul
adcl
movsl
loopne
push
decl
push
mov
movsb
loope
and
cmp
int
xor
add
or
inc
cwtl
cltd
out
lds
cmpl
inc
mov
push
fcoms
bnd
cmp
fisubrl
xchg
xlat
ja
fldcw
cs
decb
dec
shlb
pop
jge
xchg
mov
roll
mov
xchg
fisttpl
jge
push
adc
inc
insb
sarl
pop
jmp
mov
dec
mov
fldl
cli
insb
outsb
daa
cli
pop
fsubrs
mov
jns,pn
jecxz
les
jl
dec
mov
test
xlat
mov
loope
jle
lods
add
cs
mov
add
loope
clc
cli
or
xor
outsb
mov
cmp
cld
adc
fistps
adc
and
cwtl
mov
into
push
cmp
xchg
popa
sub
icebp
fdivrl
je
fistps
mov
mov
mov
out
sbb
imul
inc
aaa
pop
dec
sbb
push
xor
imul
mov
in
nop
adc
dec
or
lds
loope
push
dec
mov
inc
ds
inc
xchg
inc
inc
push
stos
jae
inc
mov
and
sub
addr16
or
jno
xor
jae
cld
mov
adc
int
ja
insb
xchg
loop
scas
push
sti
stos
dec
mov
and
push
cmp
in
jb
hlt
push
sbbb
cmpsb
or
testb
fiaddl
aaa
inc
pop
lea
loope
into
rorl
cmp
or
clc
mov
call
stos
enter
xor
sbb
out
sbb
fwait
sbb
xor
test
pop
and
cwtl
pop
shll
into
or
or
shlb
push
mov
pop
mov
xlat
test
xchg
pop
test
jle
std
mov
jle
fidivrl
sbb
adc
inc
test
mov
jns
mov
sbb
rclb
dec
fsubrs
mov
test
or
sti
inc
loop
movsb
mov
jle
lret
xor
jecxz
je
pop
fsubs
imul
pusha
lods
mov
gs
repz
push
xchg
ret
push
test
push
fistps
js
ja
nop
or
cmp
cwtd
push
pop
test
dec
mov
scas
gs
cmc
and
dec
mov
jb
inc
mov
push
xor
aas
insl
push
or
sub
dec
and
xchg
or
push
mov
mov
mov
test
popf
cld
repz
push
repz
xor
lods
adc
out
and
inc
movsb
in
cmp
jge
xchg
out
pusha
mov
push
imul
outsb
xor
mov
lret
adc
in
das
push
mov
pop
dec
sbb
jnp
mov
jb
mov
xchg
sbb
aas
mov
outsl
cmpsl
inc
arpl
int3
dec
mov
aas
or
xor
psubusb
aas
or
xor
aad
and
jns
pop
mov
fstpt
and
cmp
or
add
xchg
je
in
leave
push
movsb
jecxz
movsl
hlt
jns
es
push
ds
mov
sbb
push
fs
cmc
jne
xchg
or
sti
mulb
in
cmpsl
ljmp
fwait
xchg
lock
or
xchg
adc
imul
pop
mov
add
jp
lcall
test
fwait
and
lret
mov
xchg
arpl
aaa
xor
and
fsub
push
add
add
or
jne
mov
inc
mov
repz
xor
lds
mov
rcrb
lods
mov
into
xor
sbb
shlb
jne
mov
adc
cmpsl
sub
cwtl
mov
outsb
das
jae
adc
inc
dec
imul
sbb
imulb
push
mov
add
stc
mov
scas
pop
adc
cmpsb
arpl
jge
mov
jmp
sbb
sub
stos
stc
leave
cmp
lcall
lcall
faddl
mov
xchg
push
and
out
xchg
mov
jb
call
out
dec
into
fcmove
pop
fidivl
push
push
or
ja
mov
inc
push
push
call
ja
mul
jle
mov
loope
das
daa
rclb
jp
jne
imul
rcrl
xor
lods
rcrb
mov
mov
ljmp
inc
push
push
loope
sub
mov
clc
and
outsl
mov
out
dec
mov
lods
enter
fdivs
push
and
cmp
addr16
xor
sbb
rorb
push
ret
jns
sub
stc
push
inc
dec
xlat
fsubrl
adc
movsl
std
mov
and
or
iret
daa
lret
cmp
mov
pop
lret
popf
sub
dec
push
mov
mov
jecxz
ds
or
push
fs
je
lock
mov
xor
and
push
stos
inc
sbb
in
adc
nop
test
xchg
cld
jne
jbe
test
mov
sub
pop
sbb
mov
repz
mov
push
jo
fistl
scas
imul
testb
inc
hlt
mov
fstl
ret
push
cltd
mov
xchg
dec
cli
cmp
pusha
ljmp
adc
sub
fldl2t
test
insl
xor
nop
add
sub
test
je
push
sub
and
jne
rclb
or
fwait
out
lret
add
or
add
pand
push
sbb
jo
shl
lods
fs
jge
cmp
mov
mov
add
insl
jecxz
cmpsb
inc
push
cli
rcrb
jnp
jecxz
xchg
out
cmp
and
sti
movaps
mov
sahf
xor
fidivl
add
mov
xorb
faddl
shrb
push
dec
push
and
insl
mov
xlat
cmp
mov
dec
and
es
sbb
xor
rorb
cmp
sarb
out
jb
ficompl
xchg
lret
daa
fisttpl
rcrb
and
sub
pop
aad
int3
test
pop
xchg
test
ret
bound
mov
mov
cmpb
xor
pushf
sti
dec
out
xchg
enter
fsts
mov
sbb
fdivrp
loopne
insl
mov
dec
sub
ret
xchg
int3
cmp
push
inc
and
pusha
mov
sbb
sub
inc
std
xor
sub
xchg
outsl
mov
add
jo
push
cld
sub
pop
loope
or
sti
ret
lods
outsl
pop
out
adc
pop
inc
pushf
insb
inc
pushl
inc
jno
lret
add
push
nop
add
xchg
mov
sbb
sub
cmpsb
pop
mov
push
push
jle
add
cmpsl
pushf
mov
pop
faddl
bound
movsb
inc
mov
cmpsb
arpl
add
loope
sub
mov
sbbl
jb
adc
lret
gs
push
xchg
mov
je
mov
and
movsl
ja
sub
xchg
push
dec
mov
ffree
incl
loopne
adc
and
ljmp
imul
fnstsw
cmp
xchg
inc
jbe
cmp
les
lds
rcll
jb
loopne
lcall
and
sub
pop
shll
sbbb
mov
in
and
jb
leave
mov
scas
clc
aam
call
add
and
sub
outsb
aam
jge
nop
and
loop
sahf
loop
sub
rorl
lcall
xorb
and
fisubrs
dec
fadd
jns
adc
mov
pop
pop
mov
stos
push
push
cli
pusha
stc
fcomps
cs
idivb
cmp
mov
push
and
pop
inc
mov
fsts
pop
push
pop
mov
or
shll
mov
jb
mov
in
enter
test
loope
ror
daa
int
les
push
mov
fistl
jns
shr
imul
ss
movsl
mov
or
pop
fst
out
xchg
ret
push
insb
push
xchg
mov
mov
iret
xchg
addb
icebp
cmp
jno
sbb
xor
repnz
mov
pop
enter
enter
xlat
es
mov
mov
repnz
mov
mov
mov
mov
xchg
dec
arpl
push
shll
sub
sub
mov
ffreep
mov
mov
leave
popa
insb
jmp
inc
pusha
cmp
cmc
aad
sahf
adc
shll
jb
mov
lret
adc
fstps
or
inc
enter
add
push
jge
pop
cli
pop
mov
ss
int
dec
and
addr16
jge
int3
push
dec
in
jg
insb
push
add
and
loop
push
imul
cmpl
push
subl
mov
adc
pop
jb
fisubl
xor
add
xor
push
lock
adc
mov
and
aas
pop
add
or
je
lds
fdivs
xor
bound
je
jbe
nop
mov
sahf
pusha
cltd
pop
xchg
mov
loope
mov
in
xchg
mov
cmp
aad
cmp
add
sti
inc
clc
mov
push
adc
imul
pop
filds
inc
or
pop
ljmp
adc
not
out
lock
mov
or
mov
dec
push
xchg
mov
popa
mov
inc
rol
sbb
cwtl
push
fistps
fcoms
inc
faddl
push
sub
loopne
or
and
cmp
pop
sbb
adc
int3
in
and
mov
dec
popa
leave
outsb
int
into
cmpsb
out
sub
fiadds
sbb
and
sbb
sbb
push
adc
mov
cld
dec
push
int
inc
adc
xor
outsl
mov
sbb
inc
pop
fs
add
sbb
fs
sbb
sub
xchg
stos
loopne
ffree
jmp
mov
sbb
adc
add
push
dec
sbb
movb
ljmp
sbb
mov
sahf
aam
sbb
jnp
pop
jge
notb
loope
fiaddl
rcll
adc
lock
shlb
fistl
or
xor
insl
mov
mov
mov
mulb
mov
dec
cmp
cmpsl
shrb
loop
shll
or
mov
xor
dec
jge
jp
insb
xor
int
mov
rolb
mov
imul
mov
mov
push
jp
add
mov
out
pop
test
sub
mov
pop
sbb
dec
cs
jmp
dec
aad
les
mov
jmp
insb
jns
insl
add
mov
mulb
xor
add
sub
sub
rcll
lock
arpl
iret
jle
mov
mov
xchg
jge
add
int
in
scas
push
pop
jo
mov
add
cld
add
inc
icebp
mov
jmp
fisubl
fcmovb
insb
cmp
xchg
andb
mov
pop
sub
xor
ss
mov
xor
xchg
push
inc
xchg
fldcw
or
add
push
or
or
dec
daa
pop
mov
inc
sbb
pop
inc
imul
loop
push
sbb
loopne
jmp
into
shl
add
push
push
inc
xor
mov
test
mov
jae
pop
sbb
sub
xor
pop
adc
xlat
cld
cli
in
dec
push
stc
xlat
inc
mov
inc
and
imul
loopne
pusha
cwtl
mov
and
mov
push
or
call
xor
dec
xchg
cmc
mov
test
jne
adc
pop
inc
push
sub
mov
cmp
scas
bnd
or
jae
daa
dec
push
movsl
pusha
mov
adc
stos
cltd
mov
adc
ds
ret
jns
stc
outsl
movq
xor
loope
push
mov
xlat
mov
aam
fmuls
and
or
fsubs
ds
dec
ret
in
inc
and
sahf
mov
jno
adc
push
test
test
mov
call
mov
push
in
inc
push
mov
add
and
test
inc
cmp
icebp
inc
test
data16
mov
xlat
ret
add
fmuls
shrl
jge
pop
mov
jo
fcomp
testb
nop
and
js
pushw
push
sbb
pop
pop
jb
jbe
into
pop
lret
pop
sub
pushf
jp
dec
orl
mov
cltd
jge
in
mov
jecxz
cmp
sbb
xor
mov
push
adc
out
fistpll
pop
stos
lock
dec
cld
inc
push
mov
adc
mov
iret
test
inc
aas
scas
or
mov
sahf
dec
lock
lret
inc
nop
stos
imul
adc
ss
or
jge
repz
stos
pusha
das
popa
cmp
cmpb
adc
dec
bound
insb
insb
push
addr16
inc
movsb
cwtl
xchg
aas
leave
sub
sub
push
test
jge
ja
sbb
mov
push
xor
inc
cmp
imul
mov
sub
aad
pop
pop
xor
cmp
mov
test
stos
pop
cld
mov
popf
fldl
inc
jg
test
mov
ljmp
test
inc
push
leave
xlat
mov
loope
cltd
xchg
xlat
fistpl
testl
add
mov
inc
xor
out
fcmovu
push
popf
xchg
andb
ret
xor
push
cmp
out
rorl
ljmp
mov
xchg
adc
jne
adc
cmp
mov
push
mov
inc
subl
cmc
add
imul
and
push
std
pop
popf
fs
and
lods
arpl
sbb
ret
jl
test
push
adc
jne
fcoms
cli
jb
sbb
push
xchg
cmp
inc
test
push
inc
push
push
add
pushf
add
outsl
xor
rolb
es
sub
scas
lods
mov
push
add
push
dec
sarl
pop
jno
xchg
lods
cmp
scas
fsubrs
jge
inc
inc
jo
push
push
jnp
mov
enter
gs
inc
mov
lds
es
jle
xchg
jnp
ds
push
loope
sbb
jno
adc
inc
lret
arpl
jp
nop
mov
lods
inc
pop
push
gs
add
test
outsl
jecxz
mov
aam
cmc
jg
fwait
ja
cmovs
push
and
das
lahf
outsl
pop
sub
cmpsb
inc
test
scas
mov
cwtl
mov
cli
pop
jno
inc
sbb
pop
fdivrs
pop
je
rcrl
mov
loopne
push
mov
ret
fmul
xchg
out
xor
lahf
sbb
sub
jge
pop
jae
mov
xor
aam
push
out
in
push
push
mov
xchg
and
fnstenv
sub
sbb
push
cmp
jl
sti
pushf
orl
sub
mov
add
scas
jp
xor
lcall
test
or
fdiv
jl
test
mov
pop
mov
test
das
jge
js
jno
inc
lea
sub
push
cmp
mov
fdivrs
std
sub
cld
cltd
rcr
data16
jle
arpl
nop
lods
jl
loopne
jmp
push
cmp
insl
mov
jnp
bound
jg
pop
cmp
lahf
rcrb
mov
das
inc
orl
int3
les
inc
sahf
and
push
jae
bound
push
cmc
sbb
dec
mov
out
pop
faddl
inc
push
movsb
pop
jp
lds
adc
push
push
ffreep
jne
test
fimuls
lods
mov
xor
jp
pushf
mov
add
test
mov
stos
push
mov
test
jp
cmp
lods
sub
xchg
pop
test
jb
xor
insb
xchg
aaa
push
push
scas
dec
test
adc
jl
stc
dec
add
push
mov
push
jno
push
dec
dec
cmp
imul
in
or
and
cld
outsb
xchg
js
xchg
into
dec
clc
lahf
push
inc
rcll
mov
jnp
loop
adc
add
mov
adc
fs
stc
cmp
rorb
mov
jp
mov
aad
icebp
or
movsb
jns
jle
jg
lret
jge
xor
jne
addb
jbe
scas
add
fimuls
or
fisttpll
ljmp
push
jmp
clc
popf
dec
call
outsb
sbb
pusha
shll
jne
xchg
xchg
mov
jae
sbb
adc
pop
adc
aad
pop
call
mov
adc
stos
sub
icebp
pop
andb
jle
pop
inc
sub
loopne
add
add
lea
mov
lahf
add
and
xor
rorb
ljmp
sahf
cmp
jne
mov
loopne
mov
xchg
jbe
or
filds
inc
mov
fimull
fisttpll
movsb
sbb
lds
and
lret
mov
add
ret
xor
call
inc
mov
mov
pushf
inc
in
xor
ja
push
xchg
dec
popf
call
adc
adc
scas
iret
push
mov
push
das
shlb
movsl
pop
and
mov
daa
popf
mov
inc
and
rolb
hlt
sti
lret
push
mov
lods
xor
pop
cs
jae
push
push
push
gs
movsl
xor
pop
pop
sti
pop
and
and
negl
jbe
xchg
or
lods
insb
mov
daa
sbb
out
sub
call
and
rcrl
xchg
mov
ljmp
push
cltd
out
push
dec
cmpsb
or
xchg
and
mov
inc
pop
adc
andb
mov
data16
sbb
cs
mov
stos
xchg
rclb
aas
jecxz
add
dec
inc
mov
add
and
shrb
movsb
out
cmp
sub
cmp
sbb
arpl
into
and
and
call
push
lea
test
pushf
lret
rcrb
movsl
jecxz
lahf
das
sbb
jmp
add
add
cmpsl
sbbb
pop
std
in
mov
cmp
cmp
cmp
outsl
inc
leave
push
sub
mov
mov
inc
sbb
mov
stos
fadds
clc
push
sbb
sarl
sti
ja
xchg
arpl
jne
aam
mov
and
jo
sub
sub
push
sbb
aas
aas
lods
pop
xchg
ja
xor
jbe
sub
and
inc
xchg
mov
and
mov
outsb
xlat
mov
mov
cltd
mov
pop
adc
mov
daa
das
push
js
sub
cld
mov
inc
mov
divl
aam
add
test
cmp
dec
pop
mov
enter
cmp
loopne
cmp
xchg
mov
and
pop
and
push
inc
add
xchg
lods
cltd
out
push
cmp
test
adc
fdivrp
adc
ljmp
test
stos
xchg
jg
movl
pop
out
sub
std
and
es
mov
jno
call
sti
clc
adc
mov
lods
add
repnz
je
push
stos
cwtl
jo
aad
fcomp
pop
xlat
pop
dec
and
test
jmp
pop
repz
fildl
jns
inc
subl
in
xchg
xor
sbb
cmp
mov
shrl
adc
outsl
push
push
rol
int3
xchg
inc
lea
jb
decb
mov
or
xchg
jno
inc
dec
dec
inc
push
and
mov
add
cltd
push
lea
mov
ss
bound
lcall
mov
das
mov
bound
xor
pusha
cmp
icebp
test
push
xor
pop
push
mov
xchg
loop
nop
icebp
repz
sub
jl
lea
pop
std
cmp
xlat
cld
sub
out
dec
stos
dec
dec
inc
mov
in
inc
pop
repnz
cmpsb
xchg
je
aas
rol
pop
xchg
sbb
std
in
dec
movsb
mov
push
dec
inc
dec
aas
xchg
inc
or
mov
lods
mov
push
scas
arpl
dec
rcll
jbe
sahf
dec
push
xor
jns
leave
adc
test
imul
dec
fnstcw
push
pop
push
lock
push
sbb
or
mov
inc
scas
clc
xchg
add
mov
pop
add
mov
fwait
cmp
scas
lahf
bound
jecxz
mov
bound
sarb
popf
es
cmpsb
sbb
pop
stos
sub
outsw
push
xchg
loopne
push
xor
ret
cld
jge
js
test
call
jge
add
testb
jl
push
pushf
push
cmp
mov
ljmp
int3
sbb
jmp
mov
outsb
sbb
daa
sbb
xchg
lret
sub
les
orb
jnp
sbb
cmp
scas
fisttpl
mov
cwtl
jl
cld
ss
hlt
adc
dec
dec
inc
jae
gs
das
and
pop
mov
inc
inc
or
cs
popf
pusha
push
push
lret
mov
adc
xchg
pop
in
pop
dec
decb
mov
fisubl
adc
les
addr16
das
adc
cmp
lods
gs
addr16
lahf
out
outsl
nop
lret
sub
sub
pop
ss
xor
data16
pop
in
xor
addb
inc
mov
xor
call
push
lods
sub
add
jg
insb
ja
push
nop
arpl
leave
xchg
mov
inc
sub
xchg
lcall
sti
mov
jl
lea
in
add
outsb
or
lock
push
lods
push
jmp
mov
xor
add
xor
movsb
int
and
push
pop
push
subb
sbb
outsb
scas
adc
push
xor
push
jae
mov
add
mov
inc
jle
pusha
rcr
les
fdivrp
shr
loope
lret
or
inc
mov
iret
dec
pushf
mov
and
shlb
cwtl
and
fisubl
shrl
sub
aad
insl
and
mov
xor
lods
push
insl
push
daa
fisttps
mov
inc
inc
mov
xchg
int
xchg
add
lcall
cs
sbb
hlt
je
fiadds
arpl
add
xchg
xor
xchg
add
push
adc
add
movsb
ja
in
dec
fidivs
aas
xchg
mov
popa
and
pushl
inc
out
xor
jg
fwait
and
daa
adc
icebp
xor
xchg
xrelease
push
sub
sbb
lock
imul
adc
loopne
inc
lret
pop
outsb
push
dec
push
inc
fwait
jns
dec
loope
xchg
filds
push
imull
xchg
inc
mov
sub
jbe
leave
add
xor
sub
or
inc
and
pop
aad
sbb
mov
call
lret
ljmp
xchg
mov
fxrstor
xlat
mov
mov
subl
mov
mov
pop
gs
lahf
and
test
cmp
jl
sbb
popf
adc
xchg
xor
adc
into
pop
cld
dec
and
out
pusha
lret
pushf
add
in
xlat
pushf
xchg
adc
or
pop
daa
ds
jnp
sub
in
dec
mov
mov
stc
test
sub
mov
push
psubw
fdivrl
mov
insl
push
jg
mov
cmp
out
jp
lahf
mov
pop
dec
fbld
arpl
sbb
jg
adc
in
int
mov
xchg
repnz
mov
xor
in
mull
ss
mov
jbe
cmp
cwtl
fistpll
mov
and
sbb
add
and
loop
sub
cmp
stos
cmp
jae
into
pop
jg
push
adc
mov
push
mov
call
xchg
cmp
pop
dec
cli
in
push
inc
outsl
cmp
jmp
filds
aad
xchg
sbb
fs
in
push
and
mov
mov
fs
mov
pop
cmp
xchg
push
imul
adc
cmp
out
xorl
mov
fadds
in
xchg
push
jnp
test
xchg
jbe
fucom
and
outsl
jne
les
and
pop
test
and
push
add
adc
in
call
and
ja
ds
mov
jae
xlat
pop
jne
mov
cmc
mov
jne
jmp
cmp
push
sbb
push
mov
mov
xchg
subl
mov
push
insb
or
pop
inc
and
mov
ja
adcb
stos
pop
lods
or
push
mov
mov
out
loope
test
sarl
cmp
fcomp
rcrb
mov
mov
je
cld
xchg
mov
xor
js
pop
pusha
dec
sub
lock
adc
shlb
stc
push
cmp
int3
jae
add
lock
push
les
xchg
push
mov
mov
movsb
lret
icebp
dec
mov
adc
ss
dec
lock
lds
push
lods
fiadds
mov
sbb
xor
cli
int3
mov
cmp
rolb
mul
pop
lds
out
ret
xchg
xchg
lahf
xorl
movb
loope
iret
test
test
jmp
or
inc
add
or
mov
popf
mov
and
testb
jne
adc
insl
rol
jl
mov
or
cmpsl
daa
pop
and
stos
and
bound
dec
lret
stc
adc
or
inc
xchg
jle
adc
push
or
rcr
sar
ret
rol
nop
xor
pop
jp
cwtl
sub
add
pop
dec
mov
mov
or
das
and
aas
pop
test
je
imul
mov
scas
mov
xor
push
daa
pop
stos
xlat
sbb
pop
shlb
std
dec
out
pop
and
pop
mov
push
cmp
push
fcmove
xor
xchg
sbb
xlat
mov
fnstcw
ret
inc
arpl
sub
ja
mov
outsl
ror
jae
icebp
ficoms
mov
aaa
dec
and
jnp
rorb
sbb
test
aam
pushf
cmp
sahf
add
xchg
dec
jge
mov
lahf
xor
dec
cs
pop
inc
sub
jle
sub
mov
sub
inc
int3
cld
ljmp
int
idivb
pop
leave
dec
sub
jo
push
repnz
mov
cmp
icebp
lods
xchg
inc
mov
sbb
je
mov
loopne
stc
and
mov
arpl
or
lods
and
xchg
push
sbb
das
in
scas
iret
or
add
arpl
nop
pushf
xlat
insl
fmul
pop
sbb
cltd
sub
mov
xchg
fstpl
mov
scas
cwtl
mov
inc
inc
ret
xor
mov
rolb
push
jbe
sbb
nop
sbb
cld
jecxz
mov
in
insl
mov
sahf
ljmp
push
ljmp
jmp
leave
in
lret
and
fcoms
and
xchg
iret
inc
sbb
clc
push
dec
add
adc
mov
and
aaa
jmp
lcall
push
test
outsb
fiadds
push
adc
xor
push
negl
xchg
and
mov
add
xchg
xor
repz
cmp
mov
rcl
inc
mov
imul
cmp
hlt
xlat
sub
or
pop
test
cli
sarb
mov
fidivs
mov
movsb
lea
xchg
jmp
std
js
jae
jg
hlt
das
mov
sbb
popa
jle
shrl
lods
lods
stc
lods
sub
adc
imul
cld
mov
mov
mov
inc
mov
cmp
xchg
test
sarl
jb
movsl
cmp
mov
pop
cmp
mov
jne
lea
cmp
push
popa
test
pop
push
popf
xor
clc
mov
cmc
ljmp
sbb
xlat
jo
sbb
cwtl
adc
stos
shr
insl
lods
sub
mov
xor
cmp
adc
adc
loopne
xor
xchg
dec
cmp
adc
mov
stos
call
imul
dec
adc
cwtl
mov
test
add
jae
andb
jecxz
sbb
push
and
xor
stos
ss
pop
std
mov
loop
and
jecxz
and
or
fistps
sub
xchg
add
jl
loope
xor
add
loop
ss
push
pop
push
insb
in
mov
cmp
xor
dec
stc
cs
jg
dec
movsb
mov
push
push
loopne
out
xor
iret
fisttpl
add
shlb
imul
jno
dec
xor
or
call
aam
mulb
xor
adc
adc
subl
xchg
stos
xor
shlb
xlat
mov
cmpsl
leave
mov
sarl
movsb
or
cmp
push
mov
xchg
cmp
inc
into
jae
push
xchg
out
pushf
roll
test
test
enter
cwtl
add
inc
jae
add
rorb
dec
arpl
jns
fildll
jbe
dec
test
fs
xor
xor
rolb
and
insl
insl
insertq
jns
icebp
sti
lcall
add
fdiv
jne
aaa
jg
mov
adc
push
fisubs
cmpsb
sti
sbb
rorb
imull
repnz
outsb
sub
stc
cmp
inc
movb
test
mov
push
xor
sbb
mov
sbb
in
pop
and
mov
imul
mov
repnz
imul
in
daa
inc
fs
add
lret
cs
aaa
inc
or
repz
and
xor
jmp
mov
jle
inc
cltd
adc
sbb
aad
in
add
xor
inc
or
addr16
jge
fcoms
enter
out
cmpsl
mov
jg
test
aaa
cltd
bswap
orl
xchg
pop
mov
aaa
scas
imul
push
dec
mov
or
xchg
sub
mov
scas
dec
stos
nop
je
dec
inc
outsl
cld
dec
lds
push
sahf
mov
test
daa
cmp
std
inc
mov
cmp
cmp
push
push
pushf
xlat
sbb
cmpsl
shld
fistpll
daa
fs
and
inc
adc
test
es
incl
or
jnp
push
cmp
repz
add
outsl
jl
jns
pop
pop
push
dec
sub
pop
push
fisubs
inc
xchg
cmp
xor
jne
aad
js
loopne
outsb
std
dec
cltd
lret
scas
mov
and
cs
push
aas
outsb
jns
lret
jle
cmp
mov
in
rorl
sub
xchg
xchg
hlt
in
dec
and
cltd
inc
xor
mov
fyl2xp1
insl
pop
int
jae
scas
lahf
jo
adc
cwtl
pop
scas
inc
push
subb
cmp
xchg
aad
incl
mov
jl
cmp
inc
jge
je
sahf
mov
outsb
jmp
inc
out
push
cli
fistps
adc
lahf
push
add
xor
dec
lock
cwtl
inc
ficompl
lcall
imul
mov
sbb
pop
pop
test
les
testb
add
test
fwait
out
dec
or
sub
mov
mov
mov
mov
stos
xchg
imul
mov
int3
lods
or
cwtl
cwtl
mov
test
mov
stos
ds
pop
cmp
cmpb
dec
fdivr
lods
push
inc
pop
sbb
aaa
mov
stos
rolb
cmp
repnz
push
js
andb
mull
adcb
mov
mov
or
or
cmc
mov
xor
in
icebp
cmp
mov
sbb
sbb
pop
pop
in
fisubl
movsb
xchg
ret
push
adc
sbb
outsb
clc
repz
fcmovnb
jmp
push
lods
into
addr16
fimuls
push
xor
std
ds
add
jae
adc
add
cmpsb
mov
repz
lods
ret
iret
movl
or
pushf
mov
xor
cmc
xor
int3
leave
add
inc
lcall
xchg
inc
iret
lret
mov
mov
bound
push
lds
adcl
out
mov
into
test
dec
adc
and
mov
or
adc
movsl
mov
rcr
stos
aam
jg
jecxz
out
mov
cmp
adc
jbe
loopne
cmpsl
out
xchg
stos
push
jno
sti
fsubrs
lea
jne
jle
test
sbb
popf
sbb
jge
push
xchg
sbb
mov
xchg
rcr
adc
mov
out
mov
pop
scas
roll
scas
push
jne
fnsave
mov
add
inc
jp
bound
pop
inc
or
mov
mov
pop
in
sub
or
and
ljmp
sarb
jno
into
dec
mov
inc
nop
mov
and
aaa
push
mov
push
push
xchg
inc
addb
sbb
daa
mov
aad
dec
int
aad
xchg
fimull
adc
data16
or
mov
stos
inc
lods
loop
sbb
xor
xchg
xor
nop
mov
addr16
bound
sti
push
dec
lods
pop
jmp
test
aaa
push
push
fdivrl
mov
test
cmp
repz
test
cmc
xor
mov
dec
cmp
dec
mov
dec
mov
cmc
push
and
stos
int3
shll
mov
stc
lret
shlb
int3
fidivrl
sbb
cli
jge
jmp
flds
out
test
adc
pop
nop
in
daa
sbb
mov
push
inc
pusha
mov
adc
push
iret
inc
aaa
xchg
movsl
dec
adc
imul
shlb
in
push
insl
loop
shlb
mov
repz
cmp
ja
xchg
push
inc
arpl
or
dec
cmp
ss
dec
xchg
adc
pop
test
mov
mov
sbb
xor
add
inc
jmp
sbb
arpl
adc
loope
fiaddl
mov
aam
jo
jae
mov
mov
inc
xorb
lods
and
cmp
add
subb
movsb
lock
xor
push
addr16
fdivrl
shlb
imul
push
xchg
imul
xchg
mov
jecxz
xor
dec
xorb
imul
jnp
out
sbbb
pop
jae,pt
xlat
cmc
movsb
push
loop
adc
add
data16
jae
mov
lret
aaa
pusha
icebp
jns
mov
lret
lds
inc
xchg
jg
dec
test
lcall
mov
shll
pop
pusha
add
mov
ljmp
pop
adc
iret
fisubrl
out
pop
mov
shlb
cmp
mov
ficomps
insl
sub
ss
mov
repz
insl
fsubrl
push
out
mov
adc
or
sub
das
scas
and
scas
push
cmp
clc
jmp
sti
push
sbb
je
test
aas
cmpb
stc
iret
or
sub
adc
and
lock
aad
mov
ss
jns
fisttpll
push
cmp
call
rorb
adc
sub
in
dec
xlat
cmp
xor
cli
scas
movsl
movsb
lahf
negl
and
adcb
in
lcall
pop
xor
shlb
loop
les
idivl
jle
mov
or
inc
and
shlb
outsb
mov
push
fmul
xchg
test
cmpsb
aad
stos
sbb
cmp
shlb
xchg
adc
imul
test
daa
mov
sub
rolb
mov
sub
cld
sbbl
push
or
cmp
pop
int
cmp
sahf
dec
dec
jle,pn
push
ja
test
sbb
popl
ret
aas
nop
push
push
lcall
call
lea
push
repz
cwtl
sahf
xchg
mov
add
pop
test
push
sar
jmp
iret
popf
xchg
das
stos
inc
xor
inc
inc
xchg
insl
jo
nop
xor
in
cmp
stc
cmc
cmc
cmp
fs
daa
adc
sahf
pop
or
out
repnz
sbb
dec
jnp
sbb
dec
dec
popf
jmp
lea
ljmp
insl
les
jmp
mov
ret
into
das
lods
aas
sbb
or
pop
in
mov
dec
and
mov
cmp
sub
and
sbb
js
cmp
jb
mov
xchg
test
clc
movsbl
mov
add
adc
shlb
lods
lret
scas
mov
ja
adc
ss
test
add
inc
popa
or
mov
orl
out
call
cmp
ja
scas
sbb
pop
imul
movsl
xor
aaa
outsb
pop
mov
test
stc
int3
sbb
shlb
and
add
push
or
mov
and
les
mov
sub
gs
repz
pop
mov
lods
jmp
std
fisttps
mov
leave
ret
scas
add
push
mov
cmp
repz
push
sbb
inc
aam
pop
aad
mov
cmovnp
aas
xchg
xchg
enter
inc
fdivrl
aam
shr
orl
jns
repnz
mov
sbbb
das
pop
add
push
scas
xchg
sbb
or
leave
movsb
rcrl
gs
push
or
adc
xchg
lods
xchg
enter
adc
push
sub
rolb
fwait
mov
push
hlt
cmp
in
movsl
jg
lret
insb
cmpsl
add
out
or
pfacc
xlat
in
into
ja
inc
or
or
pusha
mov
xlat
movsl
addr16
add
push
or
out
inc
adc
fsubl
push
rolb
loopne
pop
add
xchg
jmp
xor
cmp
jnp
and
jp
inc
sbb
mov
or
adcb
pop
pop
scas
mov
add
ss
dec
stos
lea
lret
push
in
aad
push
mov
jbe
sub
fists
dec
sbb
repz
dec
or
jmp
lcall
xor
mull
fldl
scas
enter
jae
int3
js
js
stos
imul
daa
stos
jne
inc
cmp
cmp
stos
push
outsb
adc
sbb
pop
mov
aam
outsb
rclb
and
test
add
lret
cmp
sbb
popf
push
inc
aaa
push
insb
push
inc
mov
in
test
inc
lea
outsb
xchg
or
out
pusha
inc
inc
shll
pop
jne
pop
rcrl
iret
xor
and
add
loop
pop
jle
mov
jae
out
sub
sbb
fdiv
jle
cmp
inc
data16
imul
je
lods
push
sbb
je
jp
push
mov
mov
push
cmp
jns
cltd
cmp
pop
fistps
loop
jmp
nop
frstor
mov
lahf
jecxz
jo
test
or
xchg
aas
scas
mov
sub
xchg
jp
or
cmpsb
pushf
inc
fwait
sahf
stos
dec
sub
dec
xchg
in
sbb
sti
cltd
shlb
int
push
aad
xchg
mov
mov
outsb
popa
pop
mov
xchg
push
test
ljmp
dec
cmpsl
adc
test
mov
hlt
call
lds
push
outsl
popa
adc
add
cmc
adc
or
stos
mov
inc
xchg
pop
mov
xlat
mov
scas
sub
cmp
xor
sub
outsb
es
mov
cmp
xlat
das
aam
push
jns
pop
test
or
push
xorb
jae
aas
mov
jne
dec
bound
push
int
cmp
xchg
push
fbld
imul
xor
pop
add
rolb
jmp
mov
mov
sbb
cwtl
je
cmp
add
loopne
and
cli
in
test
leave
fwait
imul
dec
lret
mov
enter
enter
gs
push
leave
mull
or
mov
sbb
imul
in
out
or
aad
and
out
push
lods
notl
in
or
das
mov
lods
xor
xchg
mov
dec
pop
sbb
add
test
add
test
ljmp
mov
test
lret
incb
sbb
inc
stos
cmpsl
adc
aad
xchg
push
push
mov
mov
or
add
push
jne
fstl
xor
fisttpll
int3
push
aad
cmp
push
cmc
nop
outsl
das
es
mov
lock
bound
out
es
js
daa
sahf
scas
xorl
arpl
jno
cmpsb
dec
pop
cs
dec
or
inc
sub
and
test
xchg
fwait
jp
pop
scas
sbb
sbb
test
sbb
test
adc
das
push
push
dec
mov
pop
dec
shrl
mov
dec
jecxz
sub
gs
dec
jns
mov
sbb
sti
inc
imul
jbe
pop
out
test
push
ficompl
in
int
add
mov
ret
jle
mov
cs
in
xchg
fwait
outsb
cmp
jae
mov
arpl
aaa
adc
cmpsl
test
and
out
dec
xlat
sbb
dec
imul
cwtl
ss
punpcklbw
call
jecxz
shr
sub
sahf
sbb
dec
lods
cmp
fidivrl
sbb
repnz
int
fidivl
mull
test
lret
out
inc
fcomp
xor
out
movsl
sbb
pushf
fwait
mov
stos
ficomps
xor
sub
dec
fdivp
jae
push
pop
adc
and
sti
jns
mov
cmp
bound
jle
or
adc
pusha
lods
mov
xchg
dec
cmp
and
fisubl
dec
ret
mov
icebp
movb
lret
outsb
mov
cmp
pop
test
hlt
leave
insl
scas
sahf
and
jb
pop
es
xor
xchg
outsb
push
pop
repz
enter
push
stos
out
daa
xchg
sti
jns
ret
add
data16
addr16
jne
shlb
das
lret
jp
xchg
popa
xor
mov
fidivl
lds
fisubl
xor
test
jmp
sbb
push
mov
push
xchg
xchg
stos
lahf
ret
cld
icebp
adc
test
sub
mov
sbb
push
mov
dec
xchg
or
mov
xor
xor
dec
aad
inc
outsb
push
adc
pusha
out
fisubl
xorb
or
mov
or
adc
popa
mov
ds
jb
pop
add
jge
lret
xlat
or
xchg
cmp
add
int3
movsb
inc
lret
push
dec
bound
arpl
adc
pop
rsqrtps
cmp
mov
out
sbb
sub
cmp
lds
dec
mov
mov
outsl
push
lea
push
mov
cmp
fsubrl
xchg
fbstp
gs
mov
inc
jo
mov
jae
adc
sub
out
mov
add
adc
in
mov
mov
mov
mov
repnz
pop
pop
or
insb
jae
mov
mov
mov
pop
or
xchg
out
cwtl
inc
pop
ret
mov
inc
push
push
cmp
mov
hlt
mulb
repz
add
cmp
mov
ja
sub
xchg
hlt
jecxz
mov
add
jae
push
jbe
jmp
into
mov
pop
mov
ja
mov
xor
enter
inc
push
pop
mov
int3
push
out
pop
aad
sbb
dec
and
stc
movsl
loop
and
lds
lret
loope
jae
test
movsl
pop
or
out
sti
rcrl
ret
mov
inc
data16
xor
lea
testb
jae
add
notb
sbb
int
jge
or
mov
imul
iret
aaa
cmp
cwtl
jmp
or
int3
stc
pop
das
adc
sub
lret
add
cmp
push
scas
aam
inc
jo
xchg
movsl
negb
sbb
fwait
pop
mov
sub
fnstsw
ja
stos
xchg
mov
xor
jge
push
and
lods
fs
dec
imul
das
or
cwtl
in
or
mov
jl
btc
sub
scas
lods
or
lods
sub
mov
jbe
insb
mov
or
push
add
sahf
hlt
jg
pop
test
adc
das
cmc
xchg
mov
xor
shlb
rorb
lcall
je
xchg
lea
add
jb
mov
pop
idivl
mov
jns
lock
jl
or
pusha
cltd
out
int3
pop
aaa
sub
mov
movsb
sbb
xor
sub
push
sub
jae
mov
mov
repz
mov
movsb
fisttpll
outsl
xchg
iret
pushf
dec
enter
cmc
add
movsl
and
mov
jl
jb
in
mov
fistpll
jmp
push
xor
jl
ret
dec
push
popa
or
pushf
ret
xchg
push
or
sarl
pop
orb
bnd
int
xchg
idivl
push
cmp
shrb
fisttps
repz
mov
sbb
mov
and
xchg
xchg
push
mov
popf
pop
mov
sub
push
jae
dec
sbb
add
jne
in
aam
hlt
mov
test
mov
std
mov
into
aam
and
sbb
scas
iret
outsb
cmpsb
jno
js
fldl
cmp
and
push
js
test
sub
nop
inc
out
les
jnp
cwtl
sub
jp
and
insb
jl
sbb
mov
loope
incb
sbb
mov
sub
js
rcrl
in
dec
loop
pop
mov
data16
movsl
push
test
or
outsb
adc
mov
xchg
sub
pop
jg
std
push
jg
sbbl
push
or
mov
aas
out
mov
pop
ljmp
dec
mov
sbb
icebp
sarl
sbb
pop
pop
dec
hlt
jl
mov
fimuls
fnstsw
inc
std
imul
adc
add
mov
dec
flds
pop
mov
lret
stos
mov
stos
imul
push
sbb
icebp
outsl
cwtl
aad
mov
outsl
jecxz
aas
inc
out
mulb
xor
shll
movsl
pop
int3
push
cmp
out
lret
jne
jns
jbe
lock
fisttpll
jg
cmc
idivb
stos
or
push
cmp
jge
test
pop
popf
notb
mov
pop
sar
mov
out
in
aam
push
mov
inc
pop
clc
inc
inc
scas
scas
sub
adc
ja
loopne
adc
mov
add
mov
fcmovnbe
adc
shrl
call
push
cmp
sub
out
test
cmp
mov
das
pop
imul
inc
in
ljmp
xchg
lret
cmp
int
lds
pop
js
aad
inc
xchg
daa
cli
fstpl
mov
mov
dec
rolb
pop
cmp
pop
mov
fwait
loop
cwtl
mov
outsb
into
inc
loopne
jae
lahf
outsl
push
ss
inc
jle
jb
adc
and
sahf
dec
mov
movsb
cmp
pusha
stos
pop
jle
mov
cld
and
bound
sahf
and
dec
call
lock
add
mov
aaa
adc
repz
inc
inc
fnstcw
push
ja
cmp
movsl
cwtl
lret
insb
mov
rclb
pop
into
mov
sbb
or
pop
leave
es
mov
push
decb
mov
aam
lret
inc
aad
dec
mov
push
xchg
mov
es
jnp
push
fxch
test
pushf
aaa
sarl
scas
mov
mull
and
jle
int3
lods
and
sub
repnz
mov
pop
pop
xchg
and
mov
and
dec
mov
or
das
roll
ja
fiaddl
mov
xchg
adc
mov
jmp
int3
divb
vmread
mov
ja
test
fdivl
mov
pop
enter
xor
sbbb
cmp
xchg
ret
xchg
jno
inc
sti
lods
addb
out
lock
mov
push
push
les
pop
sub
mov
cmpsl
sub
fstpt
cmp
subl
std
mov
ret
sets
add
dec
testb
out
dec
in
mov
mov
rol
inc
cli
es
pop
mov
sub
ret
mov
adc
lods
je
cmp
adc
loop
jo
orl
pop
orl
jnp
or
stos
mov
add
imull
ds
xchg
push
icebp
fwait
adc
test
sar
test
mov
enter
sahf
mov
in
mov
ds
push
lock
jge
outsl
adc
jb
repz
in
das
roll
cmpb
dec
sarb
pop
hlt
or
sbb
lret
sub
xor
nop
push
aas
push
pop
and
xlat
loope
pop
inc
pop
mov
stos
mov
into
inc
mov
sbb
mov
cwtl
sbb
xchg
ljmp
push
mov
xchg
sahf
data16
sub
xchg
mov
rcll
push
mov
je
insb
sub
test
rorb
mov
ret
add
pop
imul
jno
cmp
out
cwtl
icebp
addr16
mov
mov
mov
aaa
dec
add
fisubrl
repnz
stc
movsl
rcrb
jp
incl
cmp
lret
out
hlt
mov
push
fs
ffree
adc
test
push
int
ds
cmp
jl
mov
aam
cmp
into
xchg
imul
jg
fnstenv
mov
jmp
mov
aad
mov
mov
xchg
push
push
cmp
call
jl
xlat
ret
jns
ret
add
xchg
jne
inc
jno
in
test
enter
xor
mov
les
cmp
mov
notb
jno
dec
imul
push
imul
adc
or
xchg
or
scas
or
clc
xchg
xadd
pop
and
ret
mov
loope
pop
push
arpl
or
add
add
xchg
jno
dec
cmp
pop
cmp
lock
lea
out
push
repnz
lods
ficomps
jle
mov
inc
fs
fstpt
jae
xchg
mulb
rcl
jge
ret
cmp
pop
repz
sub
cmpb
pop
shlb
int
repnz
xorl
inc
mov
shrl
lea
dec
mov
xor
decl
es
cli
jns
lahf
lock
dec
push
mov
push
nop
fdivs
cmp
and
inc
push
jle
repnz
pop
xchg
inc
loop
sub
aas
insl
mov
dec
pop
inc
ljmp
sbb
push
push
js
hlt
xchg
out
jmp
lods
push
push
adc
dec
and
insl
inc
cmpsb
arpl
mov
inc
sbb
mov
jae
push
mov
jg
push
into
fnstenv
xchg
fimuls
mov
daa
rol
notb
out
mov
xor
enter
cmp
and
xor
iret
dec
jg
inc
std
xor
lock
or
or
cwtl
sbb
loopne
push
imul
icebp
es
lahf
pop
sbbb
call
inc
fisubrs
or
int3
sahf
lret
int3
mov
sub
xlat
daa
popf
xchg
insl
addr16
hlt
in
or
scas
jo
or
fcmovnu
sub
in
xor
jmp
cmpsl
mul
dec
out
or
mov
ret
lcall
push
inc
into
mov
js
outsb
out
pop
paddw
jns
imulb
subb
cmp
fldt
dec
pop
adc
lret
loopne
ret
iret
add
or
xchg
nop
adc
jb
lea
or
clc
pop
push
add
testb
mov
sub
daa
hlt
pop
mov
loope
jg
mov
push
pop
cmpsb
add
pop
aam
scas
rorl
jns
mov
adc
lock
sub
mov
sub
inc
inc
test
add
incl
div
add
jo
int3
das
xchg
lahf
fs
fs
xchg
rep
mov
push
and
cmp
jecxz
mov
rcl
out
mov
jecxz
icebp
sub
dec
repz
loopne
push
enter
sbb
popf
mov
and
fsubrl
pop
mov
hlt
insb
xor
jb
sbb
xor
stc
xchg
loope
lds
or
movsl
mov
sbb
or
sub
rorb
nop
cmc
iret
pusha
and
jb
xor
popf
and
push
fstp
xchg
pushf
idivb
in
idivl
inc
mov
and
mov
enter
dec
push
and
or
movsl
jecxz
mov
gs
pop
xchg
sbb
in
cmp
jbe
loope
stc
jno
imull
jle
data16
dec
jbe
in
push
xchg
cwtl
outsb
mov
add
sub
jns
rolb
ret
xchg
mov
mov
mov
cmp
add
stos
push
xchg
sbb
sarb
mov
dec
pop
adc
xchg
add
test
cld
mov
push
xchg
testb
pop
dec
push
gs
add
adc
cli
mov
lcall
mov
int
dec
xchg
stos
pop
inc
mov
push
jae
push
mov
xlat
sbb
mov
adc
les
in
out
nop
adc
lahf
mov
sbb
subl
cmpsb
inc
jle
ss
jbe
fidivl
add
jae
das
xor
test
pop
cmpsl
pusha
sti
addr16
fs
aam
insb
inc
stos
sbb
sbb
cmp
inc
cmp
and
mov
or
ret
fmuls
fimull
sbb
ret
fists
rclb
cmp
sbb
adc
repz
icebp
es
push
mov
mov
cmp
mov
jge
cld
in
lret
xor
insl
rcr
pushf
mov
xor
hlt
shll
push
mov
and
sahf
jns
xchg
push
ja
ja
lods
jge
fldl2e
mov
mov
into
jmp
repnz
icebp
add
jge
data16
addr16
fcoms
std
in
in
aaa
jl
push
mov
notb
xor
enter
out
push
pop
push
ret
dec
add
adc
pusha
mov
and
out
xlat
mov
pop
pop
adc
cmp
bound
adcb
fisubl
daa
add
mov
pop
pop
cmp
or
adc
shl
mov
fidivrs
xor
lods
shrl
dec
cli
adc
inc
push
pop
xchg
mov
xor
push
push
sbb
sub
fs
push
adc
insb
fwait
push
mov
jbe
mov
mov
or
inc
jnp
lds
das
outsb
loop
pop
xor
pop
loopne
cwtl
cwtl
mov
sahf
cmp
xchg
sbb
test
mov
push
inc
sahf
mov
xor
jns
push
test
push
scas
repnz
push
cwtl
and
lds
or
cmp
cmp
popw
xchg
stc
js
xor
xchg
movsl
out
sub
ja
dec
dec
xchg
or
ja
or
jg
subl
xlat
cld
das
fnsave
dec
jnp
lahf
xchg
and
cwtl
sti
mov
xchg
fs
shlb
roll
dec
mov
push
fscale
ja
jmp
js
mov
sbb
jle
push
cwtl
mov
jecxz
push
and
xor
andb
dec
xlat
fdivrp
and
sub
lret
incl
mov
jbe
lret
xchg
pcmpeqd
iret
push
shrl
add
cmp
mov
push
pop
pop
lea
cmp
ret
scas
test
add
push
sbb
sub
mov
mov
cmp
mov
inc
xchg
sbbb
nop
pop
mov
out
loopne
scas
xchg
xchg
and
imul
cmpb
faddl
push
lods
jmp
and
cmp
add
or
fstpt
mov
dec
push
xor
into
repnz
xchg
mov
fdivr
fwait
push
in
xor
test
fidivs
sub
mov
lahf
fldt
fisubrl
call
iret
stos
fistpll
cmp
sbb
jns
in
jl
ret
inc
cmp
xor
mov
add
mov
loop
xor
sub
cld
jae
xor
push
ljmp
or
jp
xchg
and
out
aam
mov
or
adc
cmpb
mov
cmpsl
sub
sti
inc
pop
fwait
lock
dec
xchg
adc
or
icebp
bound
in
out
test
movnti
mov
jns
dec
out
xor
enter
je
adc
push
inc
cmovg
outsb
push
movsb
jnp
xor
adc
pop
cmpsb
out
mov
gs
dec
mov
gs
xor
dec
pop
rcrl
sahf
mov
xchg
push
je
xchg
ds
and
addl
jnp
test
mov
cltd
mov
in
ret
cmp
mov
sbb
or
mov
mov
inc
push
popa
outsb
iret
cmpsb
push
movsb
jo
add
adc
ficompl
jmp
sbb
adc
dec
fildl
mov
mov
add
sbb
pop
hlt
sub
mov
jp
mov
push
loopne
pop
in
push
push
inc
lea
mov
lds
dec
add
xor
adc
mov
xor
sub
push
mov
cld
pusha
mov
insl
cmpl
leave
push
push
in
out
fdivr
out
push
loop
mov
dec
mov
shll
and
loope
inc
lds
call
xchg
mov
stos
insb
and
in
rorl
loopne
test
int
xorb
xchg
sub
mov
or
xor
cmp
sub
pop
ret
mov
rcll
push
repnz
ja
in
mov
xchg
sbb
insb
cmpb
mov
mov
mov
adc
mov
sub
popa
outsb
iret
ja
aad
sub
lods
icebp
dec
roll
fnstsw
push
lods
and
pop
shll
aam
add
xchg
in
or
daa
stos
icebp
rol
mov
jb
fwait
movlps
test
and
inc
sub
stc
inc
stc
xor
popf
inc
inc
sbb
xchg
cmpsl
outsb
or
rdpmc
jno
rcll
add
pop
lret
sbb
adcl
or
cwtl
cmp
lahf
clc
add
push
dec
iret
inc
push
push
rcr
test
jl
or
and
loop
in
hlt
call
aaa
cltd
sub
ja
ret
or
int3
mov
popa
mov
stc
push
lret
and
roll
mov
push
ret
jmp
cli
sub
out
mov
mov
jo
jge
dec
and
or
dec
cmpsb
lahf
sub
das
adc
mov
sub
inc
push
popa
jmp
adc
cli
mov
sbb
in
int
pop
pusha
shl
sub
iret
xor
dec
aas
mov
xchg
cmp
adc
cmp
in
ja
dec
sarl
jb
adc
std
js
dec
xor
je
popa
xchg
mov
push
jmp
fbstp
les
int
jne
inc
roll
aas
inc
xor
fwait
mov
xchg
mov
cmp
pop
xchg
rorl
adc
push
out
pusha
push
mov
in
mov
fcomps
outsl
or
mov
das
stos
flds
nop
jo
aam
popf
xchg
fisubs
fnstcw
out
roll
mov
psubsb
pop
in
mov
rcrl
sbbl
sbb
movsb
into
pop
cli
lahf
xor
xlat
jno
push
hlt
push
push
sbbl
and
out
ds
adc
dec
inc
roll
inc
lret
fwait
aas
daa
mov
cli
aam
push
mov
jnp
push
mov
push
mov
xchg
sub
mov
dec
push
inc
push
or
pop
inc
cmpsb
adc
je
pop
pop
adc
adc
into
das
xchg
xor
mov
xor
psubw
mov
cld
sbb
mov
lcall
adc
lods
arpl
out
rorl
lret
cmc
sub
mov
adc
outsb
sub
test
jo
rorb
pop
pop
je
mov
jp
lds
push
lcall
adc
xchg
ljmp
mov
mov
decl
mov
push
cli
ret
push
rcrw
or
jle
mov
test
ss
mov
sbb
pop
jb
xchg
mov
adc
adc
pop
mov
in
out
sbb
sbb
sbb
jge
scas
lret
xor
je
xor
sub
and
add
mov
mov
std
xchg
add
ss
and
cmp
xor
jge
or
cmp
in
dec
cmc
mov
stos
imul
sub
clc
sbb
subl
push
adc
push
and
in
push
jg
stc
in
loope
cmp
sbb
mov
xchg
ds
sub
shll
xor
loop
in
orl
cli
sub
add
push
mov
test
mov
fcomp
or
inc
shl
jle
cltd
and
sub
enter
push
mov
cmp
mul
outsl
cmpsb
enter
fnsave
lret
jo
rcrl
cmpb
shr
dec
mov
mov
push
aaa
mov
xlat
mov
test
fs
pop
adc
and
lods
dec
cmp
lahf
je
push
or
xchg
lods
mov
cltd
jge
inc
in
mov
out
xor
pop
xor
popl
pop
fsts
or
rclb
daa
fsts
out
iret
imul
daa
and
loop
jmp
mov
inc
mov
dec
dec
push
fisttpl
ret
adc
pop
push
add
add
lahf
adcb
outsb
xor
les
fwait
cmpsb
pop
push
mov
xchg
subb
es
stc
or
in
fcoml
xor
lret
addb
insl
push
add
sub
jp
mov
movsl
icebp
popa
lds
pushf
push
xchg
xchg
jge
adc
jo
dec
or
jae
jns
add
sub
and
pop
es
lahf
jbe
insl
sub
pop
jb
sahf
movsb
sahf
bound
inc
shr
xchg
mov
xor
and
enter
sbb
popf
adc
loop
sbb
cmp
mov
mov
xor
or
pop
dec
movsl
stc
outsb
stos
jo
ret
cmpsb
imul
or
or
xor
mov
jo
jmp
push
sbb
sti
jmp
into
js
mov
inc
pop
test
adc
push
insl
mov
or
xchg
add
das
loopne
daa
adc
sarb
insl
bound
push
inc
inc
cmp
jle
xor
xchg
mov
dec
outsl
andb
in
adc
pop
and
adc
nop
rdpmc
ja
xchg
mov
insl
dec
cwtl
inc
jnp
lcall
xor
sub
or
push
xor
jg
pop
pop
das
nop
jbe
sbbl
dec
aas
mov
lahf
jmp
jns
das
aas
push
lds
sub
ds
adc
mov
and
fadd
loope
test
jl
xchg
push
xor
test
les
mov
xor
xchg
test
jnp
mov
pop
dec
adcl
jae
mov
jbe
repnz
lea
lock
out
push
ja
and
rcl
or
push
mov
inc
iret
xchg
push
or
and
jl
adc
cli
mov
lods
inc
repz
add
repnz
jmp
sub
out
mov
pop
sbb
inc
xchg
fimuls
and
ja
adc
mov
leave
in
mov
in
add
ljmp
je
sub
xchg
repnz
scas
scas
test
imul
shlb
daa
pusha
push
fsubrs
mov
into
dec
sub
lods
movsl
popa
sub
stos
insb
jle
rcrb
mov
std
mov
sbb
jge
mov
adc
fld
sbbl
and
int3
dec
pop
adc
mov
jo
add
jmp
in
pushf
jl
xchg
cli
pop
notb
jmp
or
xor
or
and
fidivl
sbb
jno
inc
mov
out
and
test
mov
clc
lcall
je
cmpsb
adc
jo
loopne
xlat
in
push
div
filds
addr16
inc
sub
adcb
mov
int3
dec
mov
sbbb
dec
add
pop
or
dec
adc
xor
fcmovnb
and
sbb
add
mov
fistl
mov
loope
xchg
insb
push
lahf
adc
popf
lret
fdivl
cmova
in
or
jle
cmpsb
sti
inc
mov
loope
in
push
cmp
lods
adc
fisttpll
stc
out
and
arpl
cwtl
cmp
mov
mov
cs
pop
filds
popa
test
ss
vsubps
mov
dec
mov
imul
daa
jbe
jle
arpl
lcall
scas
pop
jg
push
sbb
mov
js
clc
aaa
jae
mov
sub
std
mov
jmp
jae
adc
sbb
pop
das
and
jg
mov
int3
add
mov
insb
mov
ficoml
roll
imul
in
imul
inc
pushf
jp
and
les
mov
jbe
addr16
xchg
aad
repnz
dec
out
daa
or
add
adc
xchg
jmp
jns
icebp
sub
add
jmp
push
sbb
ljmp
rorb
xchg
mov
jp
out
sbb
and
test
sti
inc
jl
fsubl
mov
outsb
std
and
lahf
jmp
scas
jo
sahf
lods
push
gs
int
mov
push
fistl
fdiv
dec
insb
pop
sbb
and
xchg
imul
jo
repz
scas
dec
mov
ret
mov
out
and
adc
shrl
dec
inc
pop
int
aas
loope
imul
cltd
ret
add
pop
mov
ss
out
loope
jnp
outsb
xor
pop
loope
pusha
mov
cwtl
stos
xor
in
and
neg
or
je
sub
in
adc
jns
jno
aas
test
rorb
ficoml
dec
adc
push
sbb
sbb
ldmxcsr
les
popa
loope
mov
in
mov
pop
cmpsl
lock
adc
int
js
xor
xor
lret
adc
stos
aas
int3
mov
dec
mov
xor
loopne
xchg
popf
sahf
test
or
aad
cmpsb
or
or
rorb
in
add
sar
dec
clc
scas
stc
mov
sub
jp
je
scas
daa
mov
pop
adc
sbb
add
mov
popa
xchg
sarl
sub
mov
dec
mov
jae
sbb
pop
cmp
xlat
lahf
xchg
in
fwait
pop
cmp
mov
xchg
test
cmp
fistpl
leave
push
int
adc
mov
rolb
xchg
test
clc
pushf
xor
stos
jmp
sti
nop
mov
jae,pn
out
movb
dec
mov
cltd
insb
filds
push
cmp
mov
pop
sahf
mov
mov
neg
inc
and
cltd
rdpmc
or
into
inc
pop
loope
movsb
arpl
icebp
jnp
mov
in
pushf
push
rep
imul
pop
mov
int
sahf
add
imul
loopne
scas
out
mov
push
and
lods
mov
ss
xchg
or
and
sti
inc
xor
inc
adc
adc
push
je
jp
mov
adc
cmc
mov
push
pop
pop
pop
aas
jge,pn
insb
inc
xchg
mov
and
add
jne
jnp
out
cld
xchg
int
xchg
scas
mov
mov
and
lods
cmpsl
xor
sbb
ret
mov
push
stos
sub
hlt
call
mov
hlt
cli
repnz
xorl
pop
jns
sub
pop
inc
inc
mov
das
dec
dec
repz
lea
mov
or
cli
mov
sbb
jnp
push
sahf
loope
lret
cld
imul
sub
mov
sbb
adc
adc
filds
jp
femms
sbb
sbb
or
in
sbb
stos
pop
jne
leave
dec
fisubrs
dec
out
inc
sub
add
adc
or
inc
mov
test
daa
les
das
out
mov
lds
mov
mov
fmull
and
gs
pop
jb
pop
sti
adc
inc
inc
mov
aas
mov
shlb
dec
sbb
jmp
ror
shlb
mov
lods
pop
stos
sub
sbb
or
cs
hlt
in
mov
mov
cmp
pop
and
inc
mov
push
adc
adc
or
inc
mov
flds
sbb
cmp
jmp
pop
test
cltd
mov
popa
in
movsl
and
xorl
jmp
mov
addl
addl
cld
in
cs
or
mov
sbb
adc
call
hlt
dec
mov
and
cmp
outsl
push
sbb
jbe
imul
jle
inc
fldl
iret
movsb
or
mov
xor
add
scas
pop
push
cmp
mov
xor
and
xchg
sbb
cwtl
sahf
les
imul
data16
scas
xorl
in
ret
fwait
mov
dec
call
mov
adc
daa
xchg
in
icebp
sahf
jl
pusha
daa
insb
xchg
sbb
arpl
push
clc
sbb
pop
pop
or
icebp
dec
jns
in
pop
xchg
daa
pop
aam
in
cld
rorl
ret
and
sub
jg
clc
into
fadds
fwait
out
cmp
nop
fxam
add
pop
jge
adc
ret
mov
pop
repz
mov
xor
inc
pushf
divl
fdivrp
sbb
roll
jno
lret
lds
pop
sub
repnz
jo
and
mov
cs
cmp
mov
mov
fidivrs
popf
pop
repnz
sub
rcr
bndstx
xchg
scas
mov
in
cmp
and
loope
adc
or
lret
dec
repnz
add
sti
das
notl
ljmp
ss
stc
movsl
or
inc
sbb
stos
movsb
jb
rcl
sub
xor
stc
xchg
ljmp
cld
mov
jo
ret
pop
xor
xor
movsb
call
add
lock
sarl
or
mov
mov
fadd
cmp
adc
in
repnz
push
mov
pop
jle
int3
xlat
and
pop
mov
into
out
iret
outsb
ljmp
jnp
mov
and
adc
es
jp
dec
fildll
cld
mov
cltd
rcrl
xor
push
xchg
jo
test
rolb
fmuls
cli
and
sub
dec
cmpsb
adc
test
xlat
ret
mov
cltd
or
int
daa
ljmp
lods
jno
jae
and
lock
jno
cmpsb
sub
insb
push
loope
sti
nop
sbb
and
idivb
shl
jge
add
add
js
add
mov
mov
or
nop
bound
fsubrl
idivl
and
lret
in
xchg
adc
stos
sub
dec
ret
lock
imul
cmp
insb
or
mov
mov
es
push
xor
dec
push
xchg
jno
adc
fcomps
ret
push
in
pop
jb
mov
adc
push
xchg
in
ret
cmp
sbbb
cltd
inc
sbb
int
mov
sbb
sbb
gs
loope
ret
outsb
lret
scas
mov
in
push
int3
dec
arpl
add
iret
leave
outsl
in
cmp
dec
pop
sub
add
push
fs
push
test
sbb
test
sbb
jo
aad
int3
test
sbb
cmpsb
or
push
or
stos
movsb
mov
test
lods
int
leave
in
call
sub
dec
mov
sbb
aad
and
in
mov
ja
adc
sbb
jbe
fstp
cmp
pop
pop
adc
dec
arpl
xorps
jmp
int3
xor
fwait
jle
f2xm1
aad
and
lods
ja
cmpsl
xchg
xchg
addl
inc
andl
mov
inc
cmp
ljmp
mov
xchg
in
pop
jbe
test
decl
pop
lds
loop
mov
push
loope
cld
imul
test
xlat
inc
xor
fildl
pushf
stc
xchg
push
mov
dec
sbb
mov
xchg
cmc
sub
jns
out
add
mov
inc
out
addr16
ret
insl
dec
or
pop
cmpb
mov
push
movd
aad
sub
in
mov
aam
lcall
jmp
xchg
stos
mov
imul
loope
cltd
lret
cs
pop
mov
mov
add
cmp
sub
mov
jnp
in
pop
push
movsb
sti
ljmp
push
cmc
pop
mov
mov
jle
ss
in
cmc
mov
lock
js
leave
mov
pop
push
aas
daa
aaa
stos
xor
les
in
sti
lds
sub
jl
xlat
gs
lods
mov
insl
nop
cmp
inc
jnp
dec
mov
and
and
xor
adc
jl
inc
or
cmp
push
aaa
push
test
test
aad
jg
sub
mov
mov
in
push
arpl
leave
sbbb
jg
sbb
mov
inc
inc
inc
ss
add
stos
clc
int
roll
jmp
test
cmp
js
adc
mov
dec
xlat
in
jmp
cmp
mov
psrlq
sub
loopne
xor
test
xor
and
int
xlat
add
dec
pop
loope
fstpt
jb
cmp
inc
insb
dec
xorl
outsb
cwtl
call
or
cmp
pop
pop
pusha
add
sub
jo
adc
mov
and
xor
fists
sub
xor
push
lahf
mov
pop
sbb
sbb
pop
popf
stos
testl
inc
dec
jo
jbe
cmpsb
inc
dec
pop
mov
push
add
sub
xchg
ss
dec
or
add
dec
and
in
jns
call
into
imull
jg
popf
push
add
mov
aas
add
popf
xchg
into
cmp
sub
lock
ljmp
dec
xchg
cld
cwtl
pop
or
scas
insb
adc
sbb
mov
push
or
das
or
sbbl
outsb
mov
xchg
sbb
shlb
fldenv
sub
sbb
arpl
xchg
fmuls
int3
mov
pushf
dec
enter
shll
lds
sbb
testl
lea
pop
push
push
xlat
stc
pop
aas
mov
clc
subb
negb
decl
loope
pop
xchg
sub
stc
shr
xor
mov
fstpl
test
test
loopne
mov
dec
in
sub
das
ljmp
enter
das
inc
test
fsubl
mov
adc
and
xor
decl
mov
ret
aaa
add
mov
pop
shlb
out
xchg
lret
push
repz
push
push
enter
or
sub
push
loope
test
xor
push
push
push
pusha
mov
push
out
shll
mov
jge
lret
inc
mov
cmp
push
sub
imul
adc
jmp
test
jbe
outsl
test
test
fnsave
data16
out
punpckhdq
subb
into
xor
in
cltd
pop
jb
jge
inc
lcall
sbbb
sub
push
and
rcr
jbe
xchg
fstps
adc
cwtl
in
into
fisubrs
jo
sub
movsl
sbb
cmp
inc
cmpsl
ss
cmp
lahf
lea
frstor
inc
fistpll
mov
loop
repnz
dec
outsl
push
xor
jbe
pop
add
sub
mov
neg
or
sbb
fildll
nop
mov
in
xor
inc
sbb
xchg
add
xor
imul
stos
mov
sbb
push
pop
ret
repz
fnstcw
mov
add
mov
addr16
jno
xchg
testl
pop
mov
or
out
sbb
test
out
popa
mov
push
xor
and
in
adc
xchg
xor
jecxz
mov
push
jle
lods
sbb
popa
mov
adc
cmp
pushf
dec
sub
jge
pop
pop
and
fstpt
hlt
pop
rorl
inc
sbb
and
jbe
fldenv
sbb
adc
jl
mov
ret
ficoms
push
fimuls
or
jbe
mov
or
repnz
push
mov
cmp
fdivrs
push
int
sbb
adcb
mov
sarb
cmp
mov
xchg
dec
mov
test
sub
xor
add
icebp
xor
lods
insl
lcall
mov
pop
daa
or
lcall
pop
and
sbb
loopne
or
jno
sub
jo
shl
cmc
xchg
lock
scas
mov
dec
dec
or
das
sbb
movl
sbb
push
mov
notb
sbb
fdivl
lret
jmp
xor
push
mov
fisubrl
xchg
dec
stos
sbb
cmp
jno
adc
push
ja
sarl
xchg
lds
sbb
loope
adcb
push
insl
ss
push
in
mov
inc
push
inc
mov
ss
inc
sbb
fisubs
iret
sub
sahf
test
out
sub
xchg
adc
std
xor
adc
cs
icebp
xor
lods
push
push
inc
rol
mov
shlb
addr16
outsb
xor
push
fildll
pop
stc
mov
push
lret
sub
out
cmpsb
xor
call
cmp
ljmp
push
mov
xchg
push
rorl
cmpsl
cmp
sub
cmp
iret
ja
fwait
lods
sub
test
outsb
rcl
mov
icebp
out
cld
adc
xchg
loop
adc
aad
es
iret
test
and
sub
push
arpl
sarb
pop
push
xor
mov
test
rcrb
mov
setns
pop
cld
popa
inc
mov
mov
int3
cli
dec
xchg
cmp
xor
cmp
mov
xor
lods
push
loopne
nop
shrl
cmp
or
fiadds
mov
add
test
mov
sub
push
adc
sbb
jp
repz
pushf
sarb
and
or
pop
fwait
jns
push
adc
enter
in
test
mov
pushf
and
or
out
mov
vaddpd
mov
mov
jns
add
in
data16
pop
das
pop
pop
mov
fsubr
je
ja
int
ja
sub
pop
mov
stos
push
mov
push
filds
lret
dec
mov
out
popa
mov
in
pop
stos
sbb
or
xchg
jo
mov
sub
jle
sub
dec
cwtl
sbb
inc
cmp
mov
adc
sbb
pop
mov
push
mov
mov
stos
jecxz
fstps
mov
je
test
aas
or
jge
mov
and
mov
xchg
and
arpl
les
es
push
fmuls
ss
push
jno
mov
jecxz
int3
push
pop
push
xchg
cltd
mov
loop
hlt
mov
mov
jle
fwait
mov
out
xlat
lods
loope
ror
sbb
cmc
jge
aad
push
mull
decb
mov
dec
aam
shll
sbb
arpl
push
mov
sbb
neg
sub
in
mov
dec
fldl
xchg
adc
sbb
mov
pop
cmp
mov
or
push
ret
out
mov
jge
sub
imulb
push
jo
cmp
xor
xchg
push
je
lock
xchg
sti
cmp
adc
or
mov
fs
into
xchg
movsb
ffreep
sbb
pusha
xor
push
ret
sbb
hlt
mov
mov
jnp
in
and
dec
jecxz
cwtl
js
mov
push
mov
inc
pop
pop
cmp
fsubrs
movsl
pop
bound
dec
or
lock
fsubrl
scas
loop
es
rep
xor
adc
xor
and
ds
subb
enter
adc
js
adc
das
fcmovnbe
adc
inc
mov
pusha
mov
loopne
add
add
lock
jae
test
jl
mov
cmpsl
jge
jl
cmp
jecxz
dec
mov
stos
dec
jbe
jns
sbb
dec
rcrl
nop
sub
sbb
push
loope
jle
loop
push
repnz
nop
mov
adc
sahf
jmp
clc
mov
inc
shl
xlat
inc
imul
orl
inc
jmp
mov
mov
stc
jl
bound
mov
fsub
divb
adc
stc
incl
mov
fstps
mov
pushf
fsubrs
sbb
sbb
decl
push
dec
scas
movsl
into
xchg
xlat
fcmovnbe
cwtl
pop
dec
and
add
xchg
dec
testl
scas
mov
push
jmp
xchg
sub
inc
outsb
pop
lcall
pop
cmpsb
popf
aad
je
cli
mov
clc
aam
test
mov
pusha
pushf
mov
xlat
xchg
sti
push
repz
adc
mov
lea
roll
into
shll
jp
sbb
mov
in
jb
sbb
jmp
insb
xchg
das
repz
adc
in
mov
jns
sub
cmp
add
hlt
aas
int
sub
movsl
xchg
push
movsl
mov
ret
jo
or
mov
inc
jl
ret
mov
push
cli
lds
mov
xchg
cld
jg
das
mov
or
add
imul
ret
dec
call
or
jno
repz
jnp
ret
cmp
push
push
xor
sbbb
out
pop
cmp
xchg
add
data16
es
inc
xor
mov
sub
cmp
sub
mov
sbb
loopne
adc
loope
add
loope
sbb
std
pavgw
cmpsb
sbb
dec
fld
cltd
repz
xorl
insb
cmp
mov
push
push
test
divl
rorl
pop
cltd
sub
pop
bound
pushf
cmp
rcl
xchg
cmpsb
das
test
insl
clc
xor
mov
iret
scas
or
aad
sbb
mov
mov
inc
sbb
mov
cs
out
les
push
jg
outsb
call
xor
lret
out
popa
mov
je
mov
push
adc
push
pop
sbb
dec
sbb
loope
push
xor
fistpl
sbb
mov
xchg
pop
mov
insb
jg
mov
pop
push
stos
cwtl
mov
cmp
out
addb
inc
adc
cmp
dec
jle
shlb
hlt
mov
lods
cmp
pop
or
std
sbb
sbb
jnp
adc
mov
jb
mov
mov
adc
mov
pusha
or
cmpsb
add
aad
mov
enter
fisubrs
adc
rcr
push
mov
or
divl
cmp
arpl
test
call
xchg
cmp
cmp
xchg
mov
sub
jp
xchg
clc
lahf
mov
mov
mov
lods
jmp
push
cmp
xor
sahf
jp
inc
fnstsw
mov
test
push
xor
int3
or
push
int3
cmpsb
pop
sub
pop
insl
cmpl
popf
sub
gs
and
aas
aad
jbe
inc
jo
sub
adcb
pop
xchg
dec
leave
adc
jge
and
test
mov
out
jb
mov
xor
dec
daa
cmp
in
jmp
fidivrl
lret
ret
aaa
outsl
pop
cltd
or
outsb
or
pop
xchg
mov
outsb
testb
xchg
adc
ds
cs
or
pushf
mov
fisttpll
or
mov
in
adc
mov
pushf
add
sbb
xchg
cmpsb
xor
movsb
cmp
jg
push
jbe
mov
sub
jns
or
mov
push
rorb
or
mov
xor
mov
shld
mov
pop
shr
loop
and
insl
lods
jp
sub
je
repnz
add
fildll
add
lcall
mov
push
pop
sbb
das
ficomps
pop
scas
mov
xor
jb
iret
cs
jecxz
xchg
dec
sub
or
repz
pop
jbe
and
aad
es
push
mov
repz
addr16
std
xor
rcl
add
ljmp
loop
jle
mov
bound
cmp
dec
mov
add
dec
mov
cmp
mov
in
popf
outsl
xchg
adc
mov
cmp
repz
mov
jne
sti
push
sar
mov
mov
xor
mov
adc
loope
and
shll
sbb
sti
pop
inc
imul
popf
xor
out
or
sbbl
adc
fsubrp
mov
cmpsl
subb
in
inc
paddsb
and
dec
mov
dec
or
sub
or
popl
out
mov
sti
dec
cmpsl
scas
mov
inc
out
pusha
xor
push
cld
add
dec
sbb
push
arpl
mov
xchg
jnp
fcom
mov
fxam
jns
add
mov
mov
pushl
push
jmp
xor
xor
mov
push
shrl
std
sbb
enter
mov
imul
orb
lea
repz
in
dec
mov
mov
push
mov
movsb
or
dec
pop
nop
jmp
inc
stc
adc
adc
nop
ret
push
fidivrs
fldln2
jl
mov
nop
fcmovbe
sbb
xchg
or
loop
fisubrs
test
psubsw
stos
sbb
jne
mov
mov
mov
sub
xchg
rolb
mov
mov
lcall
mov
mov
movsl
dec
fs
lea
adc
cs
sub
xchg
xor
cmp
pusha
sub
inc
fnstsw
push
push
push
jg
lahf
std
mov
fldenv
pop
sub
xchg
jbe
adc
push
cmp
movsl
and
add
add
cmc
flds
stos
add
popa
mov
mov
scas
fistl
jno
rcrb
pcmpgtb
cmc
int3
add
lret
roll
mov
fs
stos
mov
ljmp
cmp
lea
fldt
push
cwtl
movl
in
in
cmpsb
mov
push
xchg
es
arpl
dec
sub
dec
xchg
je
or
sbb
xlat
cmp
sub
cs
ret
jp
sub
js
pusha
ja
and
int
add
mov
clc
or
mov
ds
cmp
aam
jmp
imul
xor
cmp
je
jle
mov
dec
push
in
fldt
push
fdivrp
cwtl
or
xlat
mov
xchg
or
out
sub
pop
sub
rorb
cmpsl
lret
inc
scas
push
lahf
add
xor
adc
stos
lret
mov
imul
clc
or
mov
xchg
mov
sti
psrad
inc
xorl
xor
pop
and
xchg
and
and
ja
xlat
sti
adc
icebp
int
imul
cmpl
mov
movsl
mov
movb
rcll
jnp
lock
imul
rcrl
sbb
icebp
xchg
lods
pop
sub
dec
sti
fs
dec
and
sub
ss
xorl
mov
fwait
popf
cltd
repnz
push
and
xchg
mov
insl
mov
push
mov
pop
xor
jmp
mov
arpl
test
jg
loop
pop
out
es
movsb
cmp
adcb
call
pop
cmpsl
dec
dec
adc
repz
in
xchg
mov
jmp
fimuls
loope
or
scas
mov
adc
adc
cmpb
sbb
push
mov
pop
jmp
std
loope
xchg
cmpsl
bound
aam
jle
pop
mov
std
mov
push
adc
nop
cmp
stos
sahf
addb
jmp
inc
wrmsr
stos
jmp
lock
push
xchg
or
xchg
cs
cmpsb
fxch
roll
pop
jl
jnp
inc
sbb
sbb
pop
jae
push
and
call
push
rorl
add
call
xchg
movsb
mov
jb
out
push
int3
mov
adc
mov
enter
out
jns
cmpsb
aas
jae
dec
lds
lret
cmp
adc
repnz
dec
cltd
ret
stos
nop
stos
mov
xor
push
addr16
mov
fldcw
popa
out
sbb
mov
js
cmp
dec
or
addb
cltd
cld
mov
icebp
cmp
jmp
popa
push
imul
lcall
dec
popf
add
lahf
mov
lods
dec
std
mov
fistps
notb
inc
xchg
pop
xor
xchg
sub
cmpsb
fcomps
sahf
lret
mov
xlat
sbb
pop
lock
in
cmp
popa
xchg
sbb
xor
jg
bsf
pop
cmp
je
or
dec
das
insl
aam
push
in
push
xlat
sarb
repz
push
cltd
stc
fisubrl
mov
xlat
and
cmp
rcr
dec
mov
dec
sub
adc
mov
push
enter
jge
testl
cld
loopne
or
adc
fabs
xorb
jo
xor
outsl
aad
adc
test
jno,pt
and
pop
lahf
outsl
hlt
or
lds
pop
stc
dec
mov
inc
cltd
popf
mov
cwtl
daa
pop
push
rorb
or
popa
insb
fdivl
push
inc
xor
or
aad
jbe
aam
rcrl
mov
js
mov
leave
mov
lds
sahf
or
adcl
and
negb
inc
and
jp
dec
notb
mov
sbb
cld
push
in
add
add
mov
insl
cmc
push
xchg
mov
lcall
mov
jb
lods
insl
fnstsw
stc
dec
nop
fs
inc
lods
into
lcall
and
daa
adc
and
pop
jnp
ret
mov
xchg
cwtl
xor
bound
addr16
add
mov
mov
nop
mov
push
mov
imul
add
cli
lret
in
xor
mov
lock
gs
inc
adc
dec
out
jbe
sbb
sarb
dec
out
mov
mov
lods
adc
add
mov
enter
mov
mov
movsl
push
in
je
inc
jl
jmp
and
xchg
mov
mov
ljmp
movsl
pop
dec
xor
outsb
add
aad
mov
dec
shr
lods
inc
pop
cmp
pop
jg
icebp
sbb
inc
cltd
pop
adc
out
jae
xchg
in
inc
data16
les
insb
mov
add
xorb
xlat
and
add
ret
out
pop
popa
rorb
and
popa
inc
pop
jae
sub
aam
mov
inc
test
dec
add
imul
adcl
jbe
in
xorl
lcall
mov
push
into
int3
popf
nop
or
add
inc
sbb
out
push
jo
lods
ljmp
or
or
fsubl
or
cmp
inc
sarb
or
mov
and
pushf
sahf
shrl
scas
je
dec
fs
imul
cmc
inc
fidivrs
cli
fwait
shlb
push
and
fisubrs
xor
dec
mov
cmp
sbb
cmp
enter
xchg
dec
adc
add
lahf
dec
jl
sbb
gs
adc
sbb
xlat
mov
scas
out
lods
test
pop
push
sub
popf
mov
stos
mov
psubsw
mov
insl
adc
pop
lock
jecxz
jo
push
lret
and
fstpl
les
aaa
mov
or
xchg
xchg
add
lahf
sbb
sbb
dec
enter
push
cmp
cwtl
daa
xchg
test
movb
mov
cmp
xchg
out
mov
es
pop
or
push
sbbl
xchg
leave
xchg
or
fstpl
lret
mov
adc
adc
xlat
add
mov
and
and
xor
aam
jge
loop
outsl
sub
int3
or
or
daa
test
xor
das
xor
popf
imul
xchg
mov
fstps
rcrb
or
xor
iret
xor
cmp
int3
cmp
insl
xchg
xor
test
dec
xor
adc
sub
push
lds
mov
insb
jp
pop
popl
fldenv
push
out
xor
sub
mov
sub
test
push
mov
call
jp
hlt
xorl
cmp
mov
faddl
ljmp
test
repz
fs
frstor
fcmovnb
push
mov
ljmp
sub
or
sbb
cmpsw
inc
add
or
push
jmp
mov
mov
in
leave
adcb
add
add
push
ljmp
aad
sahf
test
aam
loope
xchg
sarl
add
mov
std
cmp
xlat
adc
loopne
or
ds
inc
sahf
push
adc
fs
mov
add
lock
xchg
push
adc
enter
mov
xchg
push
jnp
mov
ds
inc
shll
dec
cwtl
sub
mov
adc
lahf
and
sub
pop
fs
imul
push
not
push
xchg
loope
out
mov
gs
pop
sub
lret
xor
fs
ljmp
inc
jnp
insl
and
add
xor
leave
neg
je
or
call
pushf
out
nop
inc
lea
cmp
in
inc
movaps
int
pop
cltd
lea
xor
test
xor
mov
mov
push
fdivrs
push
in
add
xchg
inc
inc
cli
clc
cmp
fs
mulb
xchg
mov
cmp
and
sub
mov
or
je
sbb
mov
push
add
int
pop
cmpsl
ljmp
and
test
lods
dec
jmp
mov
rorb
insb
and
push
jecxz
lcall
rcll
repz
mov
lret
mov
js
popa
pop
std
and
subl
lcall
orb
dec
mulb
sti
xchg
mov
mov
push
xor
mov
out
int
cmp
insl
ret
repz
popf
mov
pop
stc
inc
out
pushf
pop
je
je
xchg
shlb
leave
adc
xchg
sub
clc
inc
mov
mov
inc
sbb
faddl
outsl
nop
scas
mov
and
outsl
jae
test
mov
js
lret
leave
fwait
loop
call
stc
mov
pop
js
jge
scas
sub
sub
jecxz
mov
push
and
test
adc
pop
jns
jne
aas
push
jp
lds
push
stos
xchg
loop
arpl
test
cmp
popf
test
xorl
das
aam
xor
jg
inc
aam
bnd
push
out
and
pushf
aam
inc
add
lret
out
sbb
mov
icebp
popl
xor
lock
xchg
sbb
mov
in
push
dec
mov
fcomip
mov
sti
and
js
jo
fwait
push
icebp
xor
inc
pop
push
inc
in
xchg
xor
movsb
and
hlt
test
pop
fadds
mov
mov
and
and
mov
mov
mov
cmpsb
mov
add
or
fwait
jl
leave
sub
rcr
leave
sbb
sub
add
mov
jbe
pop
sbb
fstps
cmp
pop
sub
and
mov
int
inc
lret
jge
ret
xchg
dec
call
push
lods
push
sub
push
sahf
aaa
nop
cmp
lea
das
pop
or
fisttpll
and
xlat
icebp
pop
insb
ds
out
jns
inc
or
sti
shrb
mov
xor
pop
leave
mov
call
sub
in
ljmp
sbb
ret
push
and
flds
mov
adc
sarl
mov
mov
pushf
and
enter
add
bound
push
stos
mov
xchg
movsl
imul
int3
jne
adc
mov
arpl
push
enter
push
lock
pop
das
xor
mov
rolb
dec
jnp
lahf
cwtl
dec
mov
ficoms
sahf
push
loope
inc
mov
es
pop
pop
leave
loop
pusha
mov
fisttps
pop
adcb
lods
pop
inc
dec
and
sbb
inc
out
stc
mov
jmp
mov
or
push
pop
cmp
jp
fstps
or
sbb
and
add
fmull
loope
out
out
cltd
outsl
stc
negl
jbe
mov
dec
xchg
stos
leave
adcb
jbe
int3
repnz
mov
cmp
adc
dec
insl
cltd
xlat
aas
out
adc
xchg
jb
add
xchg
or
inc
inc
std
jo
dec
or
push
mov
dec
mov
mov
stos
pop
adc
lea
outsb
cld
inc
xor
and
push
jecxz
xor
pop
daa
clc
adc
dec
shll
jp
sub
add
mov
push
add
mov
popf
xchg
addr16
push
into
dec
fnsave
repnz
add
out
mov
cwtl
addr16
cmpsl
les
sbb
cwtl
loop
mov
push
and
mov
sub
inc
fcmovnbe
jl
mov
ds
pop
fisubs
fcoms
jg
sbb
mov
push
leave
test
icebp
sbb
mov
repnz
sbb
sahf
adc
inc
hlt
cmpsb
popf
inc
out
repz
mov
mulb
inc
rcr
mov
fisttps
cmc
xlat
iret
stos
adcb
mov
lcall
gs
or
sahf
xchg
mov
icebp
sub
movsl
xor
daa
aam
mov
xlat
lea
outsl
in
or
incb
mov
jle
or
mov
mov
jp
xchg
jns
inc
jne
xchg
test
sahf
or
repnz
add
fisttps
dec
jecxz
inc
mov
movsl
jmp
in
mov
outsb
add
and
adc
pop
outsb
inc
dec
pop
cmc
ficomps
mov
int3
cmp
fnstenv
cli
xchg
mov
push
fdivs
or
pop
mov
or
inc
sbb
out
jno
xchg
leave
and
test
ror
cmp
or
mov
add
aam
test
jp
shrb
je
jb
xor
leave
pop
dec
icebp
nop
data16
mov
imul
imul
arpl
jmp
ja
adc
ss
mov
icebp
sti
lds
ret
int
into
lret
add
push
dec
jle
cmpsb
mov
fcoml
test
push
mov
xor
jg
mov
loopne
mov
imul
outsb
je
int3
dec
dec
push
repz
scas
pop
jns
outsb
dec
mov
dec
xlat
xor
jno
out
dec
xor
sbb
in
out
cmp
sub
push
stos
outsl
xor
insb
add
inc
xor
or
push
pop
adc
addb
push
mov
xchg
outsb
xchg
rol
shrl
int3
loop
mov
lock
sbb
mov
pushf
in
iret
mov
stc
leave
jbe
dec
les
cmp
push
pop
call
in
jo
insl
pushf
sub
sbb
jmp
sub
and
or
int
or
mov
pusha
push
dec
sbb
xor
decb
xor
mov
jnp
lret
jno
loope
sub
dec
pop
ret
xor
inc
lret
pop
js
fnstcw
add
jecxz
push
cmp
lahf
mov
test
cmp
jns
sbb
lahf
jge
xor
mulb
cmp
pushf
dec
sub
movsl
pop
rolb
adc
fcomip
and
fnstcw
mov
dec
and
lods
inc
das
sti
adc
sub
icebp
addr16
mov
dec
and
xchg
jle
dec
in
sbb
adc
dec
std
adc
xchg
fstpt
jae
mov
outsb
pop
test
xchg
xchg
or
shrb
mov
out
ja
jp
cld
fnstcw
repz
jne
mov
ljmp
push
pop
xchg
lret
and
mov
push
arpl
mov
mov
mov
hlt
cld
sti
cmp
cld
popa
mov
mov
cmp
mov
jo
xor
nop
mov
add
pop
fwait
in
repnz
xchg
xorb
mov
stos
mull
fcoml
push
push
inc
repnz
dec
dec
mov
and
gs
and
mov
adc
jecxz
movsl
scas
cmp
push
add
cmp
loopne
out
cmp
mov
jmp
push
adc
pop
fsub
pop
dec
aam
enter
dec
push
mov
mov
lods
push
pushf
sub
andb
out
lcall
mov
mov
jbe
mov
loop
popa
adc
push
into
shl
arpl
jae
out
data16
neg
rcr
mov
pop
mov
cwtl
push
mov
mov
pop
cmp
inc
mov
loopne
mov
pop
lret
lods
xchg
sub
sub
mov
roll
xchg
pop
pop
mov
stos
push
pop
out
ret
aaa
inc
push
xchg
je
daa
movb
dec
xor
add
mov
test
jmp
fisttps
sub
adc
sbb
jbe
mov
repz
imul
adc
fdivl
inc
imul
out
dec
pop
cmp
aas
sbb
and
movsl
ret
adc
lcall
mov
xchg
mov
shl
or
stc
outsl
femms
imul
in
lods
cs
pop
push
dec
stos
in
fildl
push
cld
push
xchg
mov
push
sti
mov
stos
inc
aaa
push
jnp
xor
inc
pop
xlat
mov
push
mov
jnp
cmpsb
cmpsl
movsb
dec
and
or
es
sbb
gs
leave
adc
hlt
sbb
xlat
or
xchg
cmpsb
test
cltd
dec
jg
aaa
push
cmp
mov
xor
mov
sub
or
push
aaa
jmp
jmp
pop
jecxz
jl
or
lahf
and
xor
insl
push
test
dec
jmp
pusha
ja
imul
pop
push
in
adc
outsb
xor
lods
lds
xchg
into
ja
add
xor
sbb
mov
mov
jp
mov
outsb
push
int3
out
dec
popa
test
xchg
into
out
test
and
test
ret
jae
jl
dec
inc
push
push
ss
pushf
dec
sbbb
cmp
cltd
push
les
cmp
pop
pushf
inc
push
pop
movsb
mov
mov
testb
jo
aam
adc
pushf
xchg
pop
fildl
mulb
addr16
push
in
adc
push
outsb
movsb
lret
jb
jns
add
xchg
mov
cmpsl
popf
mov
push
es
js
mov
cmp
xchg
jae
mov
je
jne
iret
add
lock
leave
and
xor
shll
push
pop
les
inc
cmp
mov
aas
es
fildl
pop
add
cltd
movsb
repz
xlat
enter
iret
sbb
icebp
mov
ss
add
mov
or
sbb
cmc
mov
and
ficoms
clc
mov
inc
or
fnstenv
pop
mov
xchg
push
scas
xchg
mov
xor
add
cmp
shll
js
sbb
xchg
jg
fwait
inc
mov
inc
mov
lods
xchg
cmp
or
inc
push
mov
push
cmpsw
dec
loop
sub
lock
sub
jne
shll
jb
pushf
adc
sub
and
test
xchg
movsb
mov
pop
adc
popl
mov
mov
shrb
rcrl
test
out
dec
div
jge
daa
push
push
push
lret
pop
dec
dec
fistl
inc
inc
dec
jo
xchg
shrl
rolb
dec
jg
movsb
and
jb
lods
adc
jle
fsubrs
fwait
ror
mov
pop
mov
lds
scas
mov
fidivrs
jo
adcl
aaa
dec
and
fcomps
xor
or
fidivl
mov
sub
inc
cli
push
loope
test
in
pop
jb
mov
pop
adc
stc
or
dec
dec
int3
mov
mov
push
je
insb
push
add
push
mov
lahf
lds
mov
lods
std
push
and
push
mov
movsl
adc
repnz
andb
cld
mov
push
dec
fsubrs
stos
and
fiadds
mov
cld
cs
testl
inc
mov
lret
enter
out
or
pop
ljmp
enter
pop
sar
mov
pushf
iret
cmp
xchg
call
cmpsl
mov
sbb
or
or
cmp
sub
int
mov
mov
mov
stos
call
jbe
fldl
mov
shll
popf
insb
cmpsb
int3
addr16
shll
pop
mov
loop
pop
sbb
ja
jne
mov
jo
sbb
push
lcall
xchg
ds
movsl
jecxz
adcl
mov
repz
inc
dec
and
xchg
inc
fisubrs
into
out
shlb
and
loopne
pop
sar
pusha
out
sbb
sub
cmpsl
mov
imul
stos
dec
or
xlat
mov
inc
add
das
xlat
add
cltd
xacquire
push
leave
pop
xorl
es
mov
lods
cmpsb
mov
push
cs
sbb
das
hlt
sbb
pop
clc
push
cmp
lcall
push
jb
pop
imul
insl
daa
popa
mov
mov
sarb
stos
stos
sub
js
out
jge
jecxz
adc
lds
imul
insl
sbb
imul
adc
scas
sbb
xor
and
test
jp
sub
popf
cmc
nop
lods
cld
inc
inc
je
jp
stos
jp
jnp
mov
push
mov
clc
flds
inc
mov
dec
add
mov
outsl
mov
jl
jecxz
adc
aaa
and
mov
or
jp
mov
repnz
movsb
cmp
cmp
dec
mov
jnp
cltd
cmp
push
or
mov
out
leave
inc
ja
and
cmpsb
jmp
push
inc
and
scas
into
aam
dec
hlt
imul
cmpsb
out
fyl2x
daa
test
out
sti
xchg
cmpsl
mov
and
in
cld
movsb
mov
mov
fs
icebp
leave
add
sub
leave
aas
cmp
and
jae
sbb
push
push
std
cltd
mov
mov
fsubs
int3
jg
out
pop
push
popa
sbb
jl
sarl
dec
les
mov
int3
into
andl
fdivl
mov
stos
ret
iret
mov
ds
sub
mov
testl
pop
lods
and
repnz
iret
jmp
cmp
cmc
push
inc
jecxz
aas
adc
xchg
mov
faddl
or
sub
or
insb
add
call
lods
cmp
sbb
mov
ja
and
dec
and
pop
mov
in
fs
mov
dec
shll
lcall
adc
pushf
dec
inc
pop
int
fwait
pushf
mov
test
mov
pop
xor
int
aam
fidivl
add
fidivl
push
sbb
stos
inc
and
sarl
test
in
lcall
xchg
lock
mov
insl
dec
lret
push
push
cld
jbe
lds
cmp
mov
and
nop
inc
aas
pop
repz
xchg
jo
mov
icebp
lock
sti
mov
jmp
pushw
je
stc
inc
or
les
lret
mov
lcall
xor
mov
or
stc
sub
arpl
inc
mov
jne
push
push
push
mov
pop
cs
cs
mov
jmp
inc
scas
push
xlat
or
or
aad
popf
mov
push
mov
inc
push
xchg
cmp
loopne
in
and
shufps
add
into
mov
ss
cmpsb
inc
lock
lods
out
lcall
out
pushf
or
mov
out
mov
gs
xchg
cmp
push
enter
jge
test
adc
adc
sub
fidivs
fadd
sub
dec
in
leave
iret
jae
sbb
lcall
out
mov
push
popa
xchg
push
push
mov
mov
push
in
das
jp
hlt
ljmp
cmp
insb
fwait
sub
jle
call
mov
or
lds
jg
sbb
scas
in
insb
jne
ds
js
outsb
fmull
add
and
popf
jo
sub
hlt
sub
ret
lods
mov
pop
mov
mov
mov
inc
or
add
lahf
xchg
pop
out
adc
mov
into
xchg
add
lcall
inc
inc
aaa
xchg
push
paddb
mov
test
sbb
test
int
jecxz
xor
and
cmpsl
cmp
mov
push
jne
inc
imulb
lahf
mov
sub
xor
mov
loop
or
fidivrl
stos
movsl
pop
jbe
push
sub
lods
jl
cmpb
insl
out
push
in
xchg
jl
pop
or
xor
dec
outsl
aad
push
ret
pusha
cmp
mov
jecxz
ss
cs
arpl
lock
adc
insb
call
or
ja
stos
out
cltd
and
fstl
pop
and
xor
add
imul
sbb
lds
out
pop
aas
adc
pop
lock
mov
jbe
test
call
xchg
mov
les
les
hlt
push
test
pusha
mov
adc
test
icebp
pop
xchg
and
push
fs
test
cltd
sub
mov
xchg
push
pop
xchg
insl
dec
iret
adc
inc
cltd
rcrb
jne
push
iret
xor
dec
inc
mov
or
in
mov
fwait
or
int3
sub
sub
fs
mov
jo
jb
mov
add
add
pop
pop
sub
loope
jmp
push
inc
js
push
xor
cmc
and
adc
daa
xor
mov
pop
insb
sbb
fidivl
movsb
out
sbb
push
stos
xor
push
mov
daa
jo
movsb
jne
movsb
pushf
movsl
bound
inc
outsl
enter
dec
dec
mov
mov
push
sub
es
xorl
fidivl
sub
xlat
jne
out
add
nop
sar
daa
push
cmp
push
sti
in
in
repnz
push
push
pop
xchg
cltd
pop
sbb
les
xor
adc
sbb
xchg
in
add
pop
adc
jb
cltd
into
push
adc
mov
stos
faddl
stos
mov
cmc
jno
inc
cs
lods
add
or
sbb
jbe
fadds
lret
decl
inc
mov
stos
mov
or
mov
addr16
xchg
xchg
rol
test
xor
cs
lock
add
adc
pop
xchg
xchg
pushf
outsb
js
fmul
jg
add
xor
mov
cmc
cmp
test
ror
mov
sub
cmp
add
pop
dec
imul
mov
mull
push
pop
cld
mov
in
and
xor
push
mov
xchg
mov
sbb
push
lods
out
adc
push
fstps
mov
scas
clc
push
scas
mov
cmpps
js
xchg
mov
inc
sbb
movsb
stos
mov
sub
in
add
sbb
cmpb
ds
pop
push
cmp
and
loop
lock
dec
imul
jae
loopne
cld
int3
leave
aam
jbe
loopne
loopne
into
into
stc
scas
push
xor
xchg
ret
cmpsl
cmp
mov
scas
mov
lock
mov
lret
adc
cmc
daa
fstpl
pop
and
lahf
mov
cltd
cwtl
shll
popl
dec
push
std
cld
sbb
ljmp
pop
sub
aam
lret
out
adc
mov
daa
adcl
sub
imul
push
into
cmp
jl
inc
clc
push
movsl
es
movsb
sti
xor
cmp
adc
mov
enter
and
out
xchg
loopne
std
adc
mov
ljmp
mov
scas
xor
cltd
or
pop
leave
cmp
jo
lcall
pop
jmp
ds
mov
sbbb
aaa
pop
adc
pop
divb
data16
test
xor
shl
int3
inc
mov
mov
mov
pop
mov
std
movsl
mov
popa
cmpsl
mov
cmp
ja
push
adc
push
mov
cmp
pop
jmp
cltd
sub
mov
dec
roll
mov
or
ret
mov
cli
daa
mov
loopne
int3
sub
out
cmp
fisttps
hlt
sub
out
mov
mov
mov
mov
iret
cmp
push
sub
pusha
add
stc
icebp
out
add
or
fdivp
ds
or
dec
fistpl
mov
sub
insl
jb
in
push
iret
iret
gs
dec
out
push
inc
repz
insl
push
aas
aam
stc
in
mov
jmp
or
rol
jg
or
mov
adc
rolb
outsb
inc
add
ss
mov
sbb
push
test
add
push
les
ss
mov
cs
add
or
leave
sbb
jecxz,pt
out
or
sahf
add
sub
or
sbb
test
sbb
pop
cli
movsb
dec
cmp
cmpsl
dec
sti
call
mov
out
call
aad
push
insl
subl
fdivrl
aaa
jge
daa
mov
pop
lock
je
jb
push
ss
jb
ficomps
sahf
mov
push
insb
push
sbb
movsl
es
arpl
add
popf
cs
hlt
mov
jno
bound
mov
dec
insl
jecxz
hlt
es
mov
cwtl
push
loop
add
xlat
pop
fwait
loop
mov
repnz
push
int
gs
jge
and
int3
outsb
push
incl
fidivs
js
push
add
not
sbb
mov
mov
pushf
cmp
imul
push
cmpsl
dec
fwait
mov
data16
loope
cmp
or
loopne
fldcw
lods
ret
cmp
subl
ja
push
pop
sar
add
vmovsd
push
xchg
push
cs
mov
sbb
lret
sub
cmpsl
sbb
test
adc
pop
mov
idiv
sub
pop
add
rorb
inc
jecxz
xor
hlt
repz
cmp
ljmp
xlat
popf
fiaddl
hlt
jmp
je
enter
jo
pop
or
test
fwait
jno
xchg
jbe
mov
test
mov
push
lods
ss
cwtl
dec
xorb
mov
roll
cmpsl
rol
rcl
lods
pushf
push
ss
dec
sub
xor
out
push
insl
push
jne
lods
sbb
lock
daa
and
push
ret
pusha
ret
lcall
data16
pusha
stc
in
cli
push
mov
das
mov
mov
xchg
int
popf
daa
and
testl
or
jne
mov
call
inc
pop
mov
mov
andb
dec
mov
repz
iret
dec
movsb
in
bound
mov
dec
push
mov
mov
iret
outsl
lock
sub
and
mov
mov
push
cmpsb
inc
lods
cmp
dec
hlt
out
mov
aam
adc
xor
sbb
mov
pop
fisubs
cltd
add
jp
cmp
xchg
data16
sahf
mov
push
push
cmpsl
test
test
fcomps
sarb
push
cmpsb
in
test
mov
rcrl
add
sbb
push
adc
xchg
sbb
dec
add
imul
ret
jnp
inc
je
data16
out
xchg
fs
jecxz
sub
mov
int
leave
cmp
push
test
push
fldcw
xor
movd
cmp
push
push
shll
cli
mov
jns
push
sbb
cwtl
lods
je
fidivs
pusha
scas
cmp
push
jmp
cmp
dec
ret
jg
dec
aaa
stos
movsb
push
add
cmc
bnd
xor
and
pusha
jne
inc
jp
idivb
cmp
dec
adc
jecxz
mov
push
test
divb
pop
add
mov
incl
out
enter
jne
aam
lock
mov
out
stos
mov
adc
push
cwtl
outsl
icebp
push
sub
push
xchg
xor
xorb
mov
divl
add
jmp
scas
jle
add
xchg
sub
fdivl
aam
fwait
xchg
add
movsl
icebp
and
popf
or
sbb
push
add
popa
or
jp
rclb
cmp
mov
pop
cmp
jg
push
cmp
loop
xchg
nop
fnsave
sbb
scas
lds
mov
adc
aam
sbb
pop
imul
shr
or
lods
mov
and
std
inc
cmp
xor
sbbb
pop
mov
lret
and
mov
sbb
jle
nop
test
cmp
test
ret
sti
jge
adc
pop
cmpsb
insl
fcmovnb
sub
fnstcw
call
stos
ds
adc
cltd
inc
rcrb
jno
inc
push
adc
test
sarb
cs
jp
in
inc
int3
mov
cmpsl
push
aaa
pop
xchg
xchg
dec
dec
lret
xor
fbld
std
test
adc
sbb
push
pop
jb
cld
test
jns
mov
mov
das
rorl
jl
data16
cltd
dec
push
cmp
dec
lods
xor
add
push
sbb
xor
ret
inc
loop
lcall
movsl
lds
xchg
lea
dec
cmp
xor
mov
mov
in
lret
sub
mov
xchg
dec
xor
xor
dec
sarl
inc
jecxz
fwait
pusha
testb
call
lcall
mov
mov
sub
cltd
push
mov
pusha
cmpsl
dec
in
div
scas
adc
dec
jmp
xchg
frstor
popf
inc
imul
jg
outsl
xchg
das
add
xchg
sarb
lcall
pop
cmp
cmpsb
jmp
or
outsb
lea
cmc
aaa
mov
cli
ja
mov
jecxz
cmp
add
push
dec
xchg
xor
nop
push
repz
add
cwtl
andb
fsubs
lock
ror
es
cvtps2pi
xor
lcall
cmpsl
mov
sbb
mov
lret
cs
sbb
icebp
out
and
js
xor
ljmp
cmp
in
xor
mov
mov
call
jge
sbb
xchg
lret
daa
cmp
and
sub
mov
and
popf
shrb
or
sub
cmp
cwtl
ds
cld
mov
mov
cmc
mov
inc
shrb
push
out
mov
in
jecxz
and
fsubs
jle
mov
xor
sub
out
dec
adc
adc
jbe
xor
or
das
repnz
mov
and
push
sbb
adc
add
out
imul
iret
mulb
in
mov
inc
jp
jo
xchg
push
sub
out
jge
push
movsb
pop
jl
xchg
rcrl
pusha
xor
cli
mov
repz
rolb
sub
xchg
and
add
cmp
fsubrs
adc
cld
testl
add
push
xlat
arpl
add
mov
fcoml
pop
cli
mov
push
lock
push
sub
call
fimull
cltd
hlt
jno
sbb
mov
leave
jbe
sahf
sbb
sbb
inc
xchg
fwait
xor
insb
cmpsl
mov
js
mov
xchg
fwait
mov
jp
cmpsl
fnstenv
jmp
fnsave
xchg
out
shrl
int
mov
icebp
test
outsb
inc
mov
sub
ss
dec
mov
fistpl
ss
fbstp
dec
lret
pushf
xchg
cwtl
mov
out
jnp
sbb
push
in
inc
mov
jg
pop
mov
pop
mov
mov
inc
dec
sbb
mov
sub
mov
repnz
pop
lock
push
pop
data16
jp
pop
sbb
rcll
int3
pop
xchg
sahf
fdiv
lds
dec
sub
inc
xchg
or
mov
leave
adc
add
mov
push
pop
xchg
jg
sbb
or
repnz
fsubp
lods
push
cli
scas
add
sub
imull
xchg
jae
xchg
pushf
shll
jae
xlat
pop
sahf
jl
pop
inc
adc
xor
add
test
cmp
push
loopne
xor
dec
sub
dec
xchg
jg
inc
in
xor
xchg
dec
cli
or
outsb
jb
outsl
shlb
cmc
fldl
mov
mov
out
mov
repz
and
jg
add
pop
iret
loop
test
lods
mov
fstpt
les
adc
xor
adc
dec
fwait
in
dec
andb
xor
ret
pop
mov
sar
cmp
mov
jle
inc
xlat
sbb
cmp
ss
lret
cmc
aam
stc
inc
stc
xchg
fiadds
jle
push
mov
push
ret
arpl
xchg
fwait
or
das
imul
mov
cli
shll
mov
jbe
out
pop
dec
pop
jb
popl
pop
fsub
inc
or
fs
lret
cmp
add
lahf
mov
mov
mov
shlb
popf
mov
insl
mov
sub
in
push
outsb
and
sub
mov
lret
dec
jg
mov
enter
xchg
and
xor
xchg
inc
jmp
cmp
mov
lods
inc
out
cltd
xlat
cli
imul
xor
rolb
jl
fnsave
and
jae
lods
xchg
xlat
xchg
shl
outsl
jns
or
repnz
sub
mov
inc
jge
cmpsl
or
adc
jbe
inc
shrl
push
leave
out
add
aam
cs
fcmove
lds
cmp
jne
rclb
jo
sub
lcall
outsl
mov
cmpsl
sbb
fldcw
push
adc
add
or
ds
pop
popf
fists
pop
mov
hlt
or
cld
mov
nop
jge
cmp
push
movsl
rolb
lret
xchg
cwtl
lods
scas
jo
jne
lea
jmp
test
je
fmul
cmpsb
in
repnz
mull
faddp
iret
dec
cmp
and
or
movsb
inc
fcoms
inc
bound
sub
dec
daa
pushf
xchg
mov
into
jns
or
dec
bound
movsl
mov
push
push
jo
lds
ss
arpl
add
adc
xor
or
fisubrl
push
pusha
sub
xor
add
cmp
inc
and
inc
sbbb
xorb
rclb
mov
jle
das
daa
imul
repz
xchg
cmp
jo
dec
fstps
mov
lock
in
pop
stos
cltd
push
mov
hlt
das
sbb
push
jmp
je
cld
lods
jmp
inc
adc
mov
push
daa
aaa
xchg
xchg
call
pop
sarl
ja
adc
mov
jo
pusha
adc
mulb
cmc
mov
jno
ret
push
cs
xor
pop
loop
das
fistpl
push
push
stos
pop
push
je
sub
push
xchg
sub
jecxz
call
int3
xchg
xchg
push
jle
and
dec
loop
inc
sub
stc
mov
arpl
jnp
icebp
xchg
call
hlt
mov
rol
xchg
lahf
jno
cmpsl
mov
rol
pop
outsl
cmp
sub
fiaddl
into
outsb
loope
js
mov
jp
cld
fiaddl
adc
in
sarb
inc
xchg
mov
sub
bound
test
cmc
inc
pushf
inc
pusha
outsl
je
shrb
mov
loopne
inc
or
sbb
movsb
scas
mov
xor
push
pop
inc
inc
pop
sbb
or
sub
popf
scas
ss
sbb
int3
ss
in
dec
mov
fildll
bnd
in
mov
rorb
insl
test
mov
outsb
push
xchg
cld
scas
jbe
xor
call
mov
daa
push
loope
xchg
sbb
mov
mov
aad
lods
push
push
out
adc
rcrb
fcomps
gs
or
and
ljmp
pop
int
repz
jmp
jne
or
adc
cmpsl
adc
jmp
outsl
shrb
fildl
xchg
js
out
sbb
fistl
sbb
sti
and
cmp
jg
sti
dec
xor
mov
cmpsl
outsb
rcrb
lret
adcb
jg
pop
inc
fisubrl
int
sbb
clc
inc
jne
adc
cs
fstps
popa
fcmovb
data16
popa
pop
inc
pop
cmc
addr16
mov
daa
test
xchg
mov
into
push
sbb
stos
pop
push
xchg
cmpsb
sbb
xor
xchg
mov
hlt
xchg
cld
popf
daa
lds
add
pop
insl
lods
aaa
cltd
and
popf
mov
iret
cmp
lods
sbb
xchg
lcall
cmp
push
adc
repz
cmp
mov
pop
cld
mov
subb
fldcw
sbb
mov
jo
cmp
pop
insb
dec
cmp
cld
aaa
add
mov
sbb
aad
pop
sub
push
fwait
mov
mov
inc
sub
fistl
lods
aam
mov
fistl
sahf
mov
test
mov
pop
pop
jo
jecxz
fisubrl
dec
inc
adc
cwtd
cmp
lcall
stos
ja
push
out
inc
push
dec
ljmp
stos
mov
add
mov
xor
xchg
and
push
jne
cli
jmp
out
incl
inc
mov
loopne
mov
sub
push
or
test
bound
mov
mov
mov
cwtl
cli
add
in
in
popf
insb
repz
mov
sahf
and
dec
into
pop
pop
cli
jns
pushf
pop
xchg
in
mov
jo
jmp
cmp
sbb
pop
dec
mov
jle
int3
stos
pop
pop
pop
std
mov
push
fs
jns
mov
stc
pop
jne
arpl
movsb
pop
shrb
cmc
jp
std
push
mov
aaa
imul
cmp
pop
jmp
or
in
or
mov
lods
push
mov
mov
xchg
test
or
clc
leave
sbb
pop
mov
idivl
icebp
sub
xor
frstor
imul
and
imul
xor
rcl
dec
jmp
add
test
mulb
jo
sub
push
mov
adc
mov
pop
and
adc
fs
mov
pop
loopne
stc
gs
nop
mov
inc
addr16
inc
lock
in
jo
push
movsb
je
stc
mov
push
jo
rorb
les
cmp
push
aas
mov
jb
mov
add
xor
sarb
jb
pop
orb
push
cmp
mov
xchg
mov
out
lret
into
rcrl
pop
popa
xlat
xor
push
fxch
pop
std
xor
popf
pop
mov
xchg
aam
add
dec
cmpl
mov
cli
mov
push
ds
out
inc
xchg
data16
push
sub
jge
cmp
clc
popa
fiaddl
jae
sub
cmp
in
lret
in
ror
es
sub
les
gs
int
arpl
fidivrs
push
xchg
and
clc
lock
jmp
sbb
jno
inc
push
out
xchg
movsb
xlat
out
outsb
int3
shlw
adc
push
jle
sbb
mov
out
mov
lret
jmp
pop
cs
jmp
mov
enter
xchg
aam
pop
in
data16
jmp
aam
inc
sub
mov
lds
arpl
push
enter
repnz
pop
mov
mov
adc
inc
xlat
mov
ret
pop
pop
pushl
mov
pop
fldenv
jb
leave
nop
icebp
sub
ja
mov
outsb
mov
in
push
imul
pop
mov
in
iret
insl
divl
ds
sub
adc
or
lret
mov
jno
sub
mov
adc
xor
int3
call
les
or
das
mov
push
adc
cmp
fbld
lock
fldenv
jae
inc
call
loopne
cld
clc
mov
jo
addr16
repz
popa
adc
dec
xor
dec
xchg
adc
nop
xchg
and
cmpsl
test
aam
jmp
es
or
cmp
mov
sbb
in
sbb
push
sbb
xlat
aam
and
sub
cmpb
jae
aaa
xor
aam
repz
dec
push
ret
jg
pop
movsl
xchg
pushf
ret
xchg
cmc
jbe
out
arpl
add
sub
es
inc
jnp
push
cmp
jmp
cmp
fmuls
inc
std
and
cmp
or
mov
dec
or
jge
es
ret
sahf
jo
inc
xor
push
push
sbb
jnp
imul
jle
mov
mov
lahf
loop
push
sub
xor
cs
mov
fimuls
filds
mov
rol
daa
adc
add
pop
sbb
sub
and
lahf
dec
pop
pop
lret
sbb
xchg
icebp
lods
outsl
mov
insl
or
push
fs
aad
push
pushw
and
mov
ret
dec
jp
std
and
addl
outsb
push
jns
xchg
jo
and
jno
rcrl
fidivs
pop
push
cli
mov
stc
xor
jge
movb
outsb
xchg
mov
jb
push
jmp
mov
or
inc
adc
xchg
popa
mov
movsb
sahf
shlb
push
xor
mov
inc
cmp
clc
xchg
lods
or
movsb
lret
jmp
dec
mov
aaa
movsl
pop
ja
decl
adc
mov
pop
and
mov
lock
xor
test
fisubrl
lahf
cwtl
aam
or
loop
sub
sub
xor
xchg
bnd
mov
and
xchg
imul
mov
stos
mov
cld
daa
cmp
popa
and
addl
arpl
pop
mov
mov
jp
add
test
rcl
pop
pusha
xchg
rorl
xchg
leave
push
iret
or
cld
inc
daa
popf
xchg
jmp
dec
je
mov
pop
negl
xchg
adc
pop
mov
popf
bound
cmpsl
adcb
insb
pop
inc
sbb
out
lds
jmp
adc
pop
ja
mov
pop
cmp
dec
mov
adc
sub
loope
jl
mov
and
shlb
adc
jns
pop
and
out
rclb
cld
ret
sbb
lret
and
pop
nop
pop
jns
or
nop
in
arpl
shrb
mov
test
out
cmpsb
push
mov
outsb
cmpsl
cmp
cltd
inc
aas
cmp
and
xor
adc
aaa
arpl
stc
mov
loop
inc
pop
jmp
jge
out
or
push
nop
sub
repnz
movsl
les
leave
shl
push
push
cld
xor
aas
sbb
nop
adc
lret
pop
mov
mov
leave
inc
mov
and
daa
mov
mov
sbb
outsl
jo
sub
add
adc
shrl
lods
jnp
push
int
outsb
sbb
xchg
mov
xor
bound
ret
adc
repnz
loop
xchg
int
sbb
xchg
mov
bound
out
pop
fstp
sub
inc
loope
push
imul
imul
testb
inc
jb
insb
xor
enter
test
sti
mov
sub
push
xor
mov
incl
out
das
je
mov
mov
dec
mov
mov
cmp
dec
jmp
dec
in
jnp
mov
scas
sbb
mov
mov
jecxz
inc
loop
ja
sub
pop
xchg
incb
mov
loope
int
inc
add
push
movaps
out
lahf
add
lret
add
lock
ds
cmp
or
mov
daa
dec
adc
push
cltd
lock
and
inc
mov
orl
adc
iret
fcoms
int
lods
std
push
shrl
cmpsb
push
outsb
scas
in
test
movsl
popa
movsl
adc
out
outsl
outsb
in
dec
and
push
or
push
daa
pop
inc
iret
xchg
pop
inc
fs
dec
add
mov
xor
or
shll
loope
sub
xchg
test
cmpsl
jne
lahf
fwait
cld
js
rcrl
aam
enter
jbe
rcrl
mov
shll
xchg
inc
jmp
cmc
jmp
stc
ficoml
mov
xchg
imul
pop
inc
xchg
sub
je
add
mov
mov
and
and
dec
stos
xor
inc
stos
clc
imulb
jo
jge
aaa
sub
xor
lahf
dec
test
sub
sarb
mov
loopne
jmp
and
sbb
or
imul
frstor
sub
add
je
and
daa
fbld
gs
pop
mov
daa
cli
and
or
xor
xchg
fistpl
frstpm(287
pop
inc
pop
ss
dec
mov
xchg
rclb
shll
jb
movsb
call
inc
mov
sub
movsl
add
int
fbstp
inc
mov
sub
and
add
hlt
or
fucomp
imul
mov
xchg
xor
in
push
rcrb
dec
push
sub
lcall
fidivl
cs
jp
mov
scas
rorb
mov
pop
push
in
sub
add
jge
lods
shrb
dec
cs
adc
push
test
jns
inc
ljmp
sub
push
mov
push
sub
xchg
adc
mov
jl
ss
pop
add
mov
test
jae
fcomps
leave
pusha
cmpb
das
jl
int
or
jbe
lds
stos
popf
lods
dec
mov
cltd
sbbb
repz
outsb
nop
pop
inc
mov
out
sbb
aad
daa
lret
mov
jl,pn
imul
and
or
mov
insl
mov
jl
sub
ds
movnti
data16
jmp
mov
ss
add
pushl
push
outsl
pusha
push
popa
adc
pushf
iret
es
mov
push
test
popa
jp
mov
jb
dec
cmp
test
mov
xchg
ljmp
fldenv
incb
xchg
mov
mov
dec
call
call
push
cmp
fdiv
push
repnz
and
shll
shlb
mov
sub
jo
lods
into
inc
jnp
add
loop
inc
enter
cmp
lods
mov
jbe
pop
xchg
pushf
icebp
outsl
out
outsb
fsubs
mov
jp
mov
shll
cmpsl
jnp
stos
push
pushl
insl
es
mov
arpl
jmp
jo
enter
fdivrl
xor
sbb
adc
sub
pop
jg
fisttpll
cmp
sub
jo
dec
fmuls
inc
sub
mov
xor
repz
pop
clc
mov
jp
jns
rorl
jle
push
std
int3
imul
cmp
jns
xlat
jmp
mov
mov
fisubs
fsubrs
loop
out
lea
outsl
mov
jae
enter
and
shrl
fwait
test
fldcw
and
mov
cmp
sub
out
jle
std
mov
mov
lret
mov
les
dec
lret
jl
jg
dec
lret
loope
shl
mov
pop
ds
and
lods
sbb
rolb
or
fcoml
and
loope
adc
add
popf
mov
sub
jne
pop
xchg
pop
xor
pop
jbe
xchg
sbb
pop
inc
int3
popf
nop
xor
movsl
aam
mov
in
cmp
mov
mov
loopne
sub
test
jl
xchg
sub
cmp
mov
push
scas
and
ret
je
lds
jae
cmp
negb
sti
sahf
out
xchg
xchg
cmpsb
sub
mov
push
add
pop
or
inc
xchg
sub
and
out
insl
mov
test
push
lea
or
jb
js
jl
mov
and
stos
out
xor
fwait
xor
xchg
or
in
pop
orb
sbb
adc
ficompl
inc
mov
fwait
imul
call
stc
cmp
push
or
jbe
stc
jle
or
xchg
mov
xor
push
inc
mov
push
je
in
adc
jb
into
push
in
push
ror
inc
cwtl
ror
pop
inc
mov
inc
pop
nop
movsl
or
lea
xchg
jmp
cmpsl
sub
scas
call
fisttpl
popa
pop
into
jg
test
cwtl
lret
inc
les
out
stos
push
mov
sti
leave
sub
dec
xchg
mov
mov
mov
adc
push
mov
data16
out
push
pop
lock
test
pop
add
mov
xchg
lods
test
fcoms
scas
jmp
add
cmp
jmp
lcall
mov
loop
inc
and
nop
stos
adc
add
fildl
imul
pop
mov
mov
movsl
out
into
adc
lock
adc
push
iret
lea
mov
in
fcompl
sti
ret
or
cmpb
in
mov
pop
cs
push
pop
dec
scas
ficomps
mov
add
xchg
push
jmp
push
mov
lcall
mov
jl
jns
dec
aam
xor
repz
xor
leave
mov
adc
cs
mov
and
imul
sub
and
mov
xchg
xor
dec
dec
mov
adc
stos
mul
cmc
mov
addr16
imul
addl
dec
icebp
dec
icebp
aad
xor
pop
les
push
xchg
testb
add
sub
shl
add
in
lods
shr
xchg
mov
inc
std
rclb
pop
lcall
push
and
add
fwait
xchg
out
xor
and
loopne
ret
cmpsl
stos
inc
pop
pop
das
divl
popa
into
nop
leave
call
les
cld
adc
push
mov
xor
push
ds
pop
ljmp
push
pop
adc
mov
push
and
cs
into
js
push
mov
mov
std
pop
popa
aas
jbe
imul
addr16
dec
mov
pop
out
ss
fucomi
mov
not
mov
sbb
pop
adcl
push
pop
fisubrl
sub
outsb
fwait
lcall
aaa
xchg
sahf
sbb
or
xor
pop
rorl
loop
inc
std
lcall
inc
dec
movl
inc
xor
cmpl
popl
out
xchg
mull
xor
sub
jge
sub
mov
inc
js
xchg
rcll
xor
pop
cwtl
and
push
or
mov
or
movsb
call
cmp
jle
bound
stos
or
mov
xor
iret
rorl
inc
jge
int3
dec
fdivrs
mov
leave
push
stc
inc
fstpl
mov
sbb
push
or
in
stos
ja
jns
lea
xchg
or
and
jp
inc
lea
loopne
jne
pop
sarb
lods
loop
outsb
adc
movhps
or
inc
sbb
xchg
in
inc
fiaddl
movsb
xchg
in
mov
push
arpl
dec
sub
leave
jl
loope
pop
aas
cmp
cld
xchg
mov
testl
xor
sbb
cmpsl
shlb
dec
incb
mov
cmp
sbb
xor
and
xchg
ja
stos
jmp
loop
idivl
dec
adc
vmread
jns
add
xchg
xchg
mov
and
mov
cmovno
xchg
aaa
pop
xor
movsl
mov
mov
das
add
mov
aaa
in
test
mov
dec
sbb
nop
insb
add
mov
push
jg
sbb
mov
and
fwait
mov
dec
jbe
mov
or
lock
testl
aaa
icebp
mov
or
push
lods
notb
mov
lea
jo
push
push
add
pop
fwait
cs
or
push
and
inc
fldt
push
add
popa
imul
lret
loope
mov
jae
adcl
loope
adc
int
dec
pop
cmc
pop
add
rclb
scas
and
repz
mov
sahf
pop
xor
jg
sub
outsb
mov
mov
mov
mov
in
mov
jns
jno
rorl
jne
inc
test
scas
mov
sarl
dec
or
push
cmpsl
insb
divb
rorl
mov
sbbb
scas
push
mov
pusha
lods
jbe
rolb
inc
test
out
insb
xchg
pop
xor
ret
sub
sub
dec
scas
call
xchg
outsb
repz
push
and
sahf
iret
fwait
sub
in
fmull
pop
cmpsb
xchg
fbld
loope
insb
inc
hlt
xor
pop
add
sti
xor
jl
js
dec
push
adcb
inc
test
cmp
mov
jmp
mov
pop
add
loope
incl
jne
test
or
lret
add
inc
lret
cmpsl
bound
test
adc
push
insl
sbb
andb
or
ds
cmp
mov
mov
jne
lret
les
int3
gs
add
pop
cli
sbb
test
sti
or
test
aas
jmp
not
int
ror
sti
imul
cmp
dec
inc
jae
pop
daa
in
lock
mov
push
negb
add
mov
sbb
insl
inc
dec
xchg
cmpsl
out
leave
jne
mov
mov
popf
jnp
ret
xor
lcall
ds
inc
or
push
dec
add
sbb
jl
push
int3
sbb
mov
lods
mov
pop
fildll
mov
outsb
in
or
repz
enter
mov
test
fisubs
movsb
jne
inc
dec
fwait
cmp
jl
daa
pop
mov
jne
mov
add
fmuls
xchg
or
test
add
dec
inc
jecxz
fbstp
xor
call
movsb
add
fs
inc
pop
icebp
inc
imull
adcl
pushf
and
push
pop
pop
mov
ds
aas
int
out
rclb
and
daa
lcall
mov
mov
mov
stos
push
or
and
sbb
xor
jno
xchg
or
movsl
les
or
jno
pop
adc
lret
inc
add
sarl
and
insl
sbb
mov
jg
xlat
cmp
inc
in
dec
mov
jo,pt
cmp
push
and
xchg
test
xor
movsb
shr
sub
cmp
sbb
aas
sbb
imulb
and
movsl
lret
mov
mov
pop
mov
hlt
push
push
ds
ja
and
leave
dec
jge
sbb
add
push
sahf
pop
xchg
loopne
cmp
dec
cld
call
leave
add
adc
push
pusha
shl
mov
cwtl
fdivl
cmc
jne
and
insb
push
out
outsb
call
pop
sub
xor
xchg
aam
inc
inc
mov
rcrb
xchg
imul
clc
mov
cmpsb
js
mov
fildl
inc
mov
subb
mov
cwtl
fnstcw
aad
cld
push
sub
lods
std
pop
push
movsb
push
adc
movsb
shll
imul
mov
cmp
rorl
dec
lock
jp
out
jle
add
stc
movsl
cmpl
dec
cmp
jb
repz
xchg
and
sbb
mov
aas
mov
shlb
mov
push
sub
outsl
ret
outsl
call
mov
test
enter
and
stos
and
repnz
pushf
nop
or
neg
movsl
jnp
std
sbb
fs
mov
lret
inc
lea
fnsave
inc
imul
adc
lea
pop
mov
test
push
adc
cmp
fisttpll
xor
inc
mov
sub
mull
push
sbb
mov
jl
xchg
das
popa
cmp
lock
cmp
idivl
rorb
jae,pt
inc
add
nop
icebp
push
sahf
push
ret
mov
iret
mov
rcrb
push
jge
sub
xchg
in
add
pop
rclb
add
bnd
addr16
push
or
sti
cmp
into
ja
repnz
mov
cmpsb
inc
lahf
dec
jp
lret
dec
sbb
xorl
ss
test
icebp
movsl
cmpl
sbb
clc
push
cmc
mov
jbe
fisttpl
push
imul
pushl
mov
addl
mov
add
lock
push
push
movsb
inc
and
sub
inc
in
addr16
xor
ret
xor
mov
out
gs
mov
xchg
aaa
jecxz
dec
sbb
mov
inc
push
mov
decb
cmpsl
xchg
fisttps
pop
imul
insl
popf
stos
sub
or
dec
xchg
aad
notb
repz
jge
popf
clc
imul
out
outsb
xor
orl
sbb
popl
jne
fistps
jecxz
dec
sbb
aas
and
idiv
cmp
sahf
push
mov
jmp
sarl
pushf
or
xor
jle
push
jns
inc
cmpsl
cmp
push
cmpsb
adc
out
mov
fs
decb
push
jge
sub
lock
movsl
xor
es
rol
or
dec
data16
das
dec
xor
ret
or
addr16
aaa
les
inc
or
testl
std
add
jnp
adc
jnp
in
ror
int
jg
cmp
mov
stc
loopne
fisubs
jnp
int
stc
loop
jge
inc
jno
test
imul
jnp
aad
sub
sub
and
fists
and
push
shll
sti
lret
or
sub
mov
jmp
sti
ret
fildl
in
lods
das
scas
or
inc
aam
popa
fldt
std
xor
pop
ja
mov
mov
mov
xchg
jno
adc
mov
bound
fnstsw
mov
pop
mov
push
add
cmpsb
sbb
jne
js
adc
push
fiadds
push
dec
jmp
fistpll
lds
pop
pop
and
stos
fnstcw
popa
sbb
mov
ss
mov
jecxz
daa
repnz
mov
mov
ror
test
push
ret
data16
orl
dec
dec
xchg
jle
xchg
add
pop
fwait
xchg
xchg
inc
imul
cmpsl
inc
out
mov
cmpsl
sub
dec
sbb
lret
dec
adc
pop
enter
cli
xor
lahf
jnp
jo
pop
rcrb
lds
inc
in
adc
mov
adc
fidivs
or
out
jnp
mov
data16
in
mov
mov
cltd
or
addr16
imul
dec
jo
mov
inc
xor
out
mov
or
aaa
sub
adc
jecxz
sub
xchg
pop
pushf
fists
jb
inc
insb
into
xchg
or
pop
xor
test
sub
pushf
int3
lock
dec
iret
int3
jge
fistps
push
jno
xor
stos
dec
ret
push
pop
xchg
and
aam
lea
xor
test
je
mov
ja
add
or
mov
fcoms
cmp
adc
push
pushw
and
aam
mov
js
adc
bound
jmp
push
push
outsb
and
je
pop
dec
inc
mov
mov
ret
enter
popa
xchg
mov
sbb
mov
push
dec
add
cmp
push
jmp
in
push
stc
adc
mov
jnp
loopne
inc
jno
inc
aas
adc
test
sbb
mov
jp
pop
mov
sub
cmp
ret
sarb
mov
out
pop
sbb
loope
imul
jbe
cwtl
and
push
push
inc
mov
loop
mov
loop
jns
sub
inc
jnp
mov
stc
lods
dec
xchg
in
mov
test
scas
idivb
ja
in
pop
xor
push
jge
cmc
adc
cmc
lea
pop
sub
pop
dec
cwtl
fildl
inc
pop
mov
test
out
lahf
jno
movsb
cltd
mov
dec
das
mov
les
and
push
mov
aam
lea
mov
addb
aam
pop
rolb
mov
fistpl
cs
scas
cld
insb
mov
push
loop
xchg
xor
jge
cmpsb
sbb
jle
mov
cmc
inc
adc
inc
cmp
push
jle
test
pop
pop
fldt
rorb
fstp
aam
xchg
pop
popf
pop
fs
lds
add
movsl
jns
into
clc
sbb
aam
pushl
rcrb
popa
and
push
stc
outsb
adc
mov
mov
sub
das
loopne
xchg
pop
cmp
xchg
jbe
ja
cmp
dec
dec
aad
fisttpl
imul
int
stos
cltd
mov
rcll
sub
mov
or
imul
push
pushf
dec
or
xor
out
xchg
cltd
sbb
sub
aaa
sub
imul
pusha
mov
add
inc
xchg
xor
sub
push
inc
mov
and
inc
aad
sbb
rcr
movsl
mov
outsl
stos
daa
popa
sbb
push
inc
lcall
shll
aad
mov
dec
push
push
sbb
jl
cmp
pop
mov
cmp
push
stos
inc
aaa
or
mov
outsb
inc
cmp
iret
cld
sar
mov
scas
sbb
add
cmp
pushf
pop
push
mov
and
xchg
imul
dec
sub
mov
lods
test
pop
xor
xchg
lds
ljmp
jmp
cmp
std
pushf
int
inc
outsl
add
mov
icebp
push
lcall
rclb
mov
push
pusha
hlt
pusha
sub
repnz
mov
scas
jg
adc
and
stos
test
outsl
ror
adc
fwait
aam
cmpsb
cltd
sarb
sti
icebp
stos
addr16
mov
scas
jecxz
add
push
daa
inc
xchg
xchg
ljmp
or
sbb
test
ds
jnp
add
leave
jl
in
in
push
pop
xchg
popa
add
or
dec
mov
jg
add
push
xor
mov
call
into
xor
push
mov
jge
xchg
and
flds
cld
subb
and
fs
cwtl
dec
add
sub
lods
aas
add
popf
nop
sub
dec
lcall
sti
pop
mov
das
push
adc
movsl
nop
xchg
xor
into
jb
mov
mov
jmp
inc
xor
dec
xor
xlat
add
das
outsl
sub
leave
repz
jecxz
out
adc
or
adc
roll
mov
adc
pop
test
ds
shll
lcall
sub
test
cs
adc
ja
pop
dec
pop
bound
adc
cltd
and
sub
push
and
cmp
outsl
push
mov
test
mov
sbb
cmp
stc
dec
jp
jne
mov
mov
cmp
scas
aaa
add
test
or
lods
xchg
mov
mov
lcall
pop
sbb
or
punpckhbw
ss
sbb
mov
add
adc
cmp
cmp
sti
mov
push
jae
or
js
lret
mov
pop
outsb
sbb
imul
rolb
dec
and
xor
mov
lods
xor
adc
cmpsl
imul
enter
stc
fidivs
xor
push
and
push
adc
sbb
int3
cltd
cld
and
test
mov
and
dec
jns
test
scas
nop
adc
xorl
scas
fdiv
xor
adc
mov
hlt
push
mov
push
mov
mov
dec
std
xchg
ret
arpl
add
xchg
test
add
subb
inc
dec
sub
or
jp
icebp
andl
xor
push
add
sbb
icebp
or
jne
fisubrl
adc
fcoms
mov
xor
sub
clc
sub
sahf
sti
xor
lock
fwait
mov
stc
push
inc
pusha
jge
or
movsb
pushf
xchg
jnp
loope
test
pop
xrelease
push
push
fldl
xchg
out
cmpsl
mov
xchg
push
xor
xchg
sbb
cmc
mov
imul
fs
outsb
outsb
ret
jecxz
stos
xchg
mov
jo
pop
and
inc
pop
jno
xchg
xchg
das
and
jecxz
pop
test
mov
push
out
mov
mov
lret
cwtl
mov
xchg
cmp
out
inc
xor
xor
rcrl
mov
shr
mov
or
or
lret
data16
sahf
xor
mov
cmc
fisttpll
push
jle
enter
mov
imul
jno
iret
sub
sub
cmp
test
fnstenv
lods
icebp
jle
xor
xchg
push
mov
mov
mov
outsb
jbe
sub
push
xor
mov
testb
jno
aas
scas
insb
mov
and
sub
lret
mov
pop
jecxz
fstps
pop
push
sub
lods
xor
dec
stos
in
or
insb
jae
rcr
dec
stc
lahf
enter
or
add
jae
push
loope
sar
into
push
sti
and
push
sbb
jb
orl
cli
mov
icebp
adc
pushf
fmuls
lcall
jecxz
into
out
xchg
xchg
call
jb
movsl
cmpsb
sbb
inc
adc
outsl
aas
jge
sbb
xor
jp
gs
cmpsb
cmpsb
mov
pusha
leave
clc
ficomps
jg
adc
stos
sub
xor
insl
mov
rcrl
pop
mov
mov
rclb
call
pushf
int3
mov
push
push
mov
scas
inc
es
pop
push
dec
sub
cmp
dec
push
imul
idivl
es
mov
lret
ss
jg
idivb
jnp
mov
jle
shll
shlb
cmp
fisttps
or
jnp
lea
mov
adc
and
push
cmpsl
and
xlat
into
xchg
mov
push
outsb
lods
inc
push
sub
out
orl
jmp
pop
mov
push
mov
iret
dec
push
pop
cmpsl
jmp
or
in
fldt
pop
loope
sbb
cltd
and
aad
lret
xchg
lods
mov
xor
les
dec
repnz
fcoml
mov
xchg
add
aaa
sub
test
jge
add
xchg
insl
add
inc
jl
mov
das
leave
arpl
or
pop
out
dec
push
push
sbb
addl
sarl
rorl
scas
cmp
mov
test
xorb
out
pop
xor
decb
sub
jmp
dec
jae
movsb
push
jne
ret
outsb
lret
in
test
mov
xchg
das
inc
xor
mov
fstps
pop
inc
bts
popf
xor
sub
vpacksswb
mov
in
add
mov
mov
rcrl
test
adc
shrb
push
popf
mov
mov
and
xorl
sub
fbld
stos
dec
and
add
cmp
inc
inc
xor
mov
mov
stos
int3
ret
push
jo
mov
jle
jnp
faddl
fstpt
arpl
dec
mov
js
jnp
push
out
sti
pop
out
inc
inc
testl
mov
push
or
cmp
push
cmpsb
test
lcall
in
adc
jecxz
test
push
jg
xchg
jp
popf
std
inc
cli
jg
pop
js
xor
sub
and
sbb
add
add
es
push
sub
inc
sbb
insb
or
mov
adc
cli
or
cs
adc
mov
dec
add
ja
xor
cmp
out
dec
mov
and
xchg
lcall
and
lcall
sbb
mov
test
sub
add
sbb
adc
pop
popa
cmpl
aad
repz
inc
and
pop
pusha
push
inc
out
xchg
add
jecxz
dec
icebp
adc
cmp
int
xor
dec
fucomp
ja
mov
sbb
jae
dec
xor
leave
into
jns
jl
jns
mov
out
sub
and
mov
xlat
shll
hlt
mov
stos
sbb
ret
mov
mov
xchg
mov
sub
add
add
pop
inc
jns
lods
mov
mov
pop
mov
sar
xchg
inc
xchg
push
addr16
mov
enter
lods
out
mov
adc
mov
inc
xchg
in
std
pop
int3
mov
out
ja
xor
pop
call
xchg
je
lret
adc
test
movsl
mov
adc
push
inc
push
xor
lret
in
sub
pop
xor
enter
and
lcall
xor
mov
jle
orb
fs
mov
movsl
dec
sub
cmp
aas
mov
push
pop
or
jbe
mov
nop
nop
cmp
jne
push
jmp
pop
mov
sar
stos
sbb
roll
mov
xor
pcmpeqw
and
stos
xchg
call
push
leave
scas
or
jmp
popf
clc
cs
cmp
xlat
dec
push
pop
cwtl
pop
das
scas
adc
mov
movl
mov
sub
cmp
push
ss
rcrl
or
outsl
arpl
into
cmp
adc
mov
pop
mov
aam
cmp
pop
and
sub
push
or
mov
leave
sbb
adc
dec
and
cmp
leave
lahf
arpl
mov
push
dec
jp
adc
imulb
cwtl
sub
scas
fnstcw
loopne
fdivp
jmp
les
or
cmpsb
push
mov
pop
insl
pusha
in
add
outsb
arpl
mov
test
cld
xchg
movsb
mov
xor
int
push
arpl
clc
pop
push
lods
out
mov
lock
add
rol
stos
xchg
enter
inc
pusha
push
xor
mov
pop
fwait
imulb
ret
xor
lahf
call
jge
xor
xchg
inc
lcall
cmp
notb
mov
sbb
decb
sub
pop
cmp
cli
out
jo
out
jae
imul
push
fwait
mov
jge
popf
fsubrl
mov
push
nop
aam
cmc
lds
aas
mov
adc
fcmovnbe
es
arpl
jg
loope,pn
mov
or
outsb
fildl
shl
jle
dec
lods
push
jmp
cld
dec
cld
mov
mov
mov
mov
jne
mov
jg
icebp
xchg
mov
jb
mov
jne
adc
inc
sti
inc
mov
cmc
jnp
lcallw
cmpsl
mov
rcrl
mov
ss
xchg
mov
jno
sub
add
add
adc
fisubl
fmull
xchg
xor
sub
inc
pop
jnp
push
push
jecxz
fdivr
jg
xor
or
add
cli
js
jge
jle
cmp
sbb
fnsave
fldt
xor
jae
push
les
or
xchg
loope
test
sbb
test
cwtl
mov
ret
or
js
repz
test
cld
add
mov
push
insl
lcall
rorl
push
scas
xor
adc
mov
push
mov
cmc
pop
jo
repnz
insl
xor
or
adc
xor
dec
icebp
inc
mov
rcrb
inc
push
jae
xlat
aam
fistl
ret
sti
iret
outsl
adc
mov
mov
cli
leave
stc
repnz
mov
cltd
mov
popf
lret
shlb
cmpb
xor
or
popa
aad
mov
pop
add
pusha
xor
ja
inc
nop
add
ljmp
aas
lahf
xchg
cmp
test
call
dec
push
aam
shrb
test
addr16
mov
or
pop
or
sbb
sub
rcl
push
enter
test
inc
mov
xchg
inc
mov
mov
clc
loop
add
hlt
jno
lea
negb
lock
mov
push
ds
std
mov
and
cmpsl
dec
or
dec
sbb
pop
cwtl
xchg
jmp
cmp
jge
inc
lds
fucomip
in
addr16
xor
orb
ja
iret
push
and
xchg
aad
inc
cltd
mov
jne
add
aad
stos
xchg
or
out
push
cld
sub
and
fs
sub
inc
sub
or
cmp
lock
push
mov
xchg
adc
xchg
stc
jecxz
sbb
fs
pusha
sarl
mov
cmp
cmp
addb
cmp
idivb
lcall
mov
into
or
sub
fldenv
jns
cmpsl
mov
fistps
in
adc
push
aad
loopne
mov
lahf
or
dec
push
lods
repnz
lods
test
lods
mov
lock
and
hlt
insl
jmp
mov
inc
mov
mov
mov
push
in
les
dec
sbb
loope
jbe
xchg
into
add
mov
repz
mov
mov
dec
jle
cmpsl
mov
and
pusha
and
ss
jmp
pop
aam
mov
fisttpll
xorl
mov
mov
je
fbstp
iret
xchg
cmpsl
mov
pop
jb
adc
push
je
mov
pop
push
ror
ret
leave
cltd
push
mov
leave
jp
repz
fisttps
ficompl
mov
pop
int
rol
sarb
cmp
je
mov
daa
popa
push
jno
inc
popa
or
std
inc
push
jmp
jl
mov
stos
test
rorb
insb
sbb
stos
mov
sub
pop
add
in
cmpl
cmp
add
enter
das
mov
push
sbb
xchg
jnp
adcl
add
sbb
jmp
adc
xor
push
lea
pop
xchg
jle
sub
aaa
fcmovnbe
decl
imul
dec
fsubrl
mov
out
out
adc
xor
ljmp
div
ficompl
into
cld
ljmp
sahf
xlat
mov
xlat
jle
mov
mov
sbb
out
in
std
and
sahf
push
jmp
pop
ret
outsl
je
outsl
jl
cmp
mulb
loope
ror
in
in
imul
test
sub
fisttps
cmc
add
xchg
fistpl
xor
cmp
ds
xchg
in
imul
sbb
les
das
pop
dec
mov
jne
jle
repz
jnp
adc
outsl
sub
clc
mov
jb
cmpsl
in
xchg
push
scas
xchg
or
pusha
pop
pop
dec
push
sbb
pop
mov
jecxz
and
mov
mov
push
stos
mov
outsl
hlt
jnp
mov
loope
inc
dec
mov
mov
jo
je
add
mov
fdivr
push
jb
pop
repnz
pusha
cmp
std
adc
addr16
xchg
sbb
sub
mov
addb
dec
cmp
es
ljmp
cmp
lret
sub
fdivl
push
xchg
mov
dec
mov
int
and
rolb
or
xchg
fistl
add
jno
in
std
or
pop
add
pop
testl
scas
scas
dec
nop
dec
cmp
dec
cmpsl
pop
cmc
stc
addb
nop
add
addr16
and
ficoms
dec
add
xchg
jecxz
adc
pop
mov
sub
shlb
test
and
in
jno
lea
xchg
push
mov
lea
xchg
jmp
nop
dec
daa
loopne
xchg
sahf
sub
mov
nop
mov
hlt
jp
into
bound
sub
mov
sbb
jg
aaa
cld
sub
push
roll
cld
push
outsb
addl
nop
repz
cmc
fnstcw
jno
imul
cmp
dec
adc
pmuludq
push
mov
test
pop
scas
xchg
or
lret
stos
movsl
pop
sub
mov
test
pop
pop
divb
dec
ds
pop
inc
out
std
fsubr
xor
cs
cmp
push
jge
mov
jno
test
hlt
jno
cltd
push
mov
mov
push
and
cmpsb
sbb
xchg
sub
cld
sub
sub
sub
fsub
pop
in
jbe
mov
repz
sbb
jg
lea
lret
xlat
jo
mov
mov
adc
dec
xor
xchg
pop
jmp
pop
pop
mov
mov
mov
push
pop
pop
xchg
sbb
aad
xchg
jbe
sbbb
in
shrb
out
and
insb
lea
pop
jbe
fnstenv
fsubs
and
add
inc
cmp
push
push
and
mov
test
mov
mov
std
addr16
test
push
jge
fisubl
in
lods
inc
in
rol
jbe
pop
xor
aad
cmp
stc
add
fmull
add
xor
lods
or
stos
push
pop
add
rorb
lret
push
mov
sub
inc
lcall
sub
xrelease
lock
mov
imul
jnp
fmull
jmp
cmp
mov
stos
lds
xlat
lock
add
sbb
imul
xor
ret
mov
lods
push
imul
xchg
sbb
lret
in
cmp
std
scas
jnp
cld
xor
dec
insb
sbb
xor
mov
xchg
in
sub
frstor
jle
xor
sbb
adc
mov
pop
dec
or
mov
enter
cmc
add
stc
pop
mov
mov
imul
cli
pop
inc
push
pop
mov
test
nop
adc
aas
rcrb
shll
shlb
cld
jo
call
shl
ljmp
inc
cmp
outsb
shll
push
xchg
jmp
dec
in
movsl
mov
sbb
icebp
ss
mov
inc
xchg
push
std
cld
sahf
add
add
push
add
add
sbb
into
and
scas
negb
inc
adc
stc
jnp
adc
out
rcr
mov
aam
jge
in
xchg
mov
mov
push
jnp
add
ds
mov
mov
dec
inc
xchg
js
fwait
popf
pop
push
mov
fwait
mov
mov
gs
jno
stc
mov
cmp
mov
sti
shll
mov
ficoms
daa
scas
dec
cmpb
or
or
or
xor
scas
jb
std
mov
cld
and
push
cmpsb
mov
lock
sub
shl
xchg
lahf
imul
sub
sbb
xor
dec
sub
je
movsb
frstor
pop
jle
mov
imul
popf
daa
add
sahf
jbe
jge
adc
pop
je
das
or
fnstcw
inc
fistpll
cmp
xor
cs
bt
or
lods
imulb
xchg
leave
icebp
sub
ret
adc
mov
mov
arpl
ret
aas
out
ret
pop
mov
jnp
adc
aaa
mov
addr16
mov
mov
push
out
popf
jb
mov
in
jno
mov
mov
sub
xchg
aam
das
arpl
mov
pop
mov
dec
dec
jo
sub
lds
and
lea
insl
add
gs
xor
fdivr
lret
add
aas
pop
xchg
inc
stos
aaa
subb
jns
xchg
xchg
pop
shrb
subl
out
xchg
jns
sub
out
inc
inc
movsb
adc
and
pop
mov
dec
ror
shr
adc
cmp
loop
test
jno
mov
stos
pop
adc
mov
add
cmp
mov
ffree
sti
fs
xchg
aad
xchg
sub
aas
or
mov
stc
inc
aam
insb
cmp
popa
in
adc
inc
aam
mov
cld
cli
faddl
xchg
dec
inc
cmpsl
outsl
or
sbb
and
dec
cmpsl
push
int
ljmp
mov
mov
mov
inc
es
outsb
xlat
cmp
mov
cmp
dec
jo
fistpl
push
xchg
push
test
outsb
out
mov
xchg
outsb
sub
and
popa
mov
in
dec
in
in
mov
push
movsb
iret
push
dec
pop
jo
cld
js
insb
les
fwait
mov
jmp
jp
pushf
leave
xor
jo
jl
sbb
add
xchg
test
daa
add
xchg
push
popa
js
adc
or
dec
mov
cmp
mov
js
mov
int3
mov
mov
popa
std
clc
out
stos
xchg
sarl
jecxz
jg
adc
mov
clc
jno
push
ss
inc
mov
sub
sub
repnz
scas
into
fstpt
hlt
inc
out
hlt
fidivl
jns
jno
das
ret
dec
dec
mov
imul
jo
adc
addr16
test
or
repnz
or
jae
out
push
stos
mov
fistps
sub
mov
inc
and
lret
stos
mov
cmc
and
mov
call
jne
or
mov
test
xor
pop
pop
ja
dec
out
pop
es
lods
imul
or
movsl
jmp
cmp
xor
adc
inc
xchg
aaa
or
nop
push
add
outsb
sub
inc
inc
mov
in
es
testl
pusha
hlt
push
loop
fisubrl
fldl
pop
push
dec
mov
sub
mov
movsb
cld
cld
int3
xchg
js
cmp
movsb
sbb
test
movsl
mov
xchg
cli
mov
push
lds
cmc
inc
jge
mov
in
subb
out
pop
xor
and
adc
mov
mov
ljmp
xor
mov
sub
mov
test
or
inc
jge
rcll
xchg
mov
out
mov
out
inc
pop
adc
outsl
lret
push
push
mov
mov
mov
mov
sti
stos
sbb
ret
jno
mov
xchg
mov
lock
or
add
cld
add
notb
pop
xor
sbb
shll
mov
popa
adc
inc
bnd
push
adc
and
mov
cmp
stos
scas
mov
dec
xor
mov
out
push
into
stos
and
loopne
pushf
shlb
aad
insl
pop
mov
negb
pop
mov
repz
fldln2
xchg
jecxz
sbb
js
push
rolb
int3
mov
dec
and
push
stc
adc
cwtl
cmp
mov
hlt
mov
jge
mov
mov
mov
jo
adc
icebp
test
inc
je
ljmp
and
pop
inc
and
mov
mov
mov
push
mov
or
push
jae
call
xorl
std
jecxz
in
pusha
lret
inc
addb
nop
or
cmpsl
test
jnp
pop
icebp
insl
dec
movb
jmp
out
xchg
pop
pop
shlb
test
sbb
adc
lods
push
add
sarb
sub
rclb
scas
out
int
or
inc
popf
adc
jo
mov
pop
cmp
push
decl
cmp
in
xchg
fxch
mov
adc
rcrl
outsb
mov
sub
jno
lea
sbb
or
dec
ret
inc
cmp
mov
sarl
jae
jge
pop
rolb
sbb
and
js
mov
mov
rclb
lds
arpl
popl
pop
and
lret
mov
sub
pop
sbb
mov
jbe
addr16
shrb
es
jb
pop
mov
fistpl
stos
punpckhdq
test
mov
divl
jmp
xchg
je
imul
mov
into
pop
loope
int
pop
pushf
mov
negl
pushf
loop
inc
xchg
cs
inc
test
cmp
adc
jmp
push
repnz
out
rol
out
inc
add
in
cli
je
dec
test
clc
repz
rcrl
test
faddl
xchg
fldenv
mov
mov
das
xor
insl
mov
icebp
and
cltd
inc
aaa
dec
lahf
ljmp
jbe
add
jmp
push
sbb
jp
sub
inc
mov
adc
aam
mov
popa
pusha
inc
jns
mulb
sbb
dec
push
sub
cwtl
in
dec
xor
ss
into
inc
mov
ret
dec
cmp
push
push
into
jb
ds
fwait
insl
std
repnz
inc
inc
das
pop
mov
cmp
movsl
dec
roll
icebp
jns
out
int
inc
push
in
ret
jle
pop
push
lahf
push
rol
jbe
pop
and
and
inc
aas
cld
inc
fnstsw
fimuls
adc
loopne
ja
scas
sar
xor
shl
add
add
pushl
lcall
je
mov
xor
mov
sub
cmp
dec
push
mov
scas
nop
hlt
inc
mov
cmpl
inc
js
lret
inc
mov
cmp
imul
add
push
clc
push
adc
cmpsl
test
dec
mov
or
xlat
inc
ds
or
xor
sub
ss
push
sub
jo
xlat
fdiv
pop
cwtl
das
inc
cmp
fiadds
mov
xor
ss
or
adc
or
aam
loope
push
cmp
push
cmp
or
fistpl
movsl
xor
cmp
push
add
aas
imul
mov
inc
dec
jge
pop
or
iret
movsb
outsl
mov
xchg
negl
sbb
pop
sti
dec
lods
cs
test
xchg
sub
xor
das
xor
inc
cwtl
data16
rcl
shlb
data16
push
test
jle
pop
mov
aam
jae
pop
xor
lods
jbe
xorl
outsb
lret
fcomp
xchg
xchg
add
aam
ja
inc
nop
ror
xor
sahf
adc
add
faddl
stos
and
pop
mov
imul
int
push
out
std
or
mov
jns
leave
inc
mov
mov
and
andb
les
mov
shrb
loopne
sbb
lret
scas
adc
xchg
testl
cmp
cmpsl
xor
setp
nop
out
pusha
xchg
rcrl
adc
dec
imul
and
idivb
out
test
sbb
leave
mov
inc
js
fisubs
mov
stos
ret
push
dec
pop
sbbl
sbbl
pop
cs
or
jo
push
out
cmp
cmp
xchg
push
xlat
ret
rorb
xchg
inc
push
popf
mov
xor
fwait
loope
sub
std
inc
cmc
pop
dec
pop
xor
and
xchg
ljmp
outsb
inc
push
pop
cmp
and
push
xchg
loope
and
lcall
test
pop
outsb
inc
mov
addr16
jns
or
lea
cmpsl
iret
lret
mov
stc
dec
rcll
push
lret
enter
imul
cmp
outsb
lea
test
push
lock
and
and
jae
mov
adc
dec
inc
sarl
sahf
test
mov
fdiv
addr16
adc
pop
rol
insl
pushf
push
inc
pop
rorl
test
mov
sbb
int3
xor
mov
das
adc
or
xchg
negl
jb
sbb
insl
xor
es
xchg
mov
ljmp
pushf
ja
add
lret
adc
stos
into
rcrl
jge
and
out
sarb
xchg
dec
pop
je
shrl
lds
pop
test
das
test
mov
push
mov
movsb
movsb
and
pop
cs
fwait
push
rclb
idivl
les
mov
enter
mov
nop
push
rorl
scas
push
je
xchg
iret
inc
aam
pop
rcrl
movsb
add
ds
loopne
aam
fsub
data16
add
jne,pt
dec
rcrb
dec
inc
std
stos
popf
stos
and
mov
fninit
add
xor
add
adc
imul
pop
test
aam
pop
loopne
jg
jl
int
enter
xchg
adc
lahf
cmc
jp
add
jnp
xchg
cmp
lret
push
imul
clc
sbbl
sub
pop
shl
mov
lea
int3
fidivs
mov
jae
shl
sub
inc
cmp
dec
in
mov
cmpb
ss
insl
repz
shrl
sbb
pop
xchg
and
movsl
or
int
les
push
jge
scas
call
sub
and
insl
loop
pushf
pushl
dec
pop
and
fxch
loop
pop
pop
sub
shrl
mov
mov
pop
notl
mov
lea
mov
push
pop
push
mov
mov
push
and
frstor
mov
or
adc
rol
mov
jl
cmpsl
jg
xor
int3
pusha
out
dec
xor
jmp
xor
fnstenv
jbe
add
les
cmp
push
xchg
imul
repz
call
test
push
jae
xchg
mov
inc
mov
xorl
jge
jb
push
mov
adc
subb
cmp
and
scas
jb
lea
jb
inc
lea
loopne
int3
ja
and
cltd
mov
dec
dec
std
add
xchg
jg
aas
dec
rcrl
stc
ret
fsts
lods
mull
add
and
lock
out
cmp
cmp
push
inc
mov
std
xor
mov
daa
push
popf
sbb
and
mov
inc
je
int
stos
fs
aad
outsl
push
mov
pop
shll
pop
fldcw
sub
dec
push
xchg
sbb
js
inc
arpl
pop
sbb
cmp
push
xor
addr16
inc
aaa
adc
mov
popa
lds
loope
fwait
cmp
in
aas
mov
fs
sub
inc
das
xor
inc
mov
lea
pop
xchg
pop
leave
test
cltd
les
push
das
xchg
push
mov
rorl
dec
cmpsb
mov
fs
out
and
add
xor
mov
adc
int
dec
add
movsb
mov
jecxz
pop
mov
mov
mov
pop
jbe
scas
add
mov
push
shl
mov
movl
push
sbb
jmp
pop
mov
test
cli
stos
lret
mov
fildll
stos
or
or
sbbb
jg
test
pop
cmp
cmp
fcomp
lcall
and
stos
shr
clc
mov
mov
movsl
subl
out
mov
fnstenv
push
hlt
cmpps
xchg
sub
lret
fildll
xchg
jno
cwtl
pop
sbb
mov
mov
mov
inc
mov
adc
int
ret
cmp
ret
sti
stos
in
insb
lahf
call
outsb
ljmp
add
pop
je
andb
adc
int
add
xlat
fs
jbe
gs
into
test
inc
xor
in
lret
testb
sub
lcall
pop
les
sub
jnp
and
inc
imul
jo
jnp
test
hlt
test
lods
add
stos
aas
es
jo
and
mov
mov
enter
pop
fs
rorl
sub
shr
fimull
icebp
add
pop
cmp
jno
mov
test
loopne
mov
mov
jbe
xchg
cmp
mov
daa
out
dec
fldt
dec
mov
push
mov
push
addr16
shl
mov
dec
nop
add
xor
dec
xlat
clc
cmpsb
mov
cmp
movsb
test
xor
mov
movsl
negl
imul
or
les
xor
mov
mov
push
xlat
arpl
imul
mov
leave
mov
push
jns
dec
clc
das
inc
xor
das
shll
add
into
pop
cmc
mov
cs
pop
xchg
mov
xor
sbb
add
arpl
sub
in
mov
jl
sub
pop
adc
popa
jb
pop
int3
mov
adc
and
cmpsl
sti
data16
jno
ljmp
arpl
ficoms
mov
fs
jbe
pop
dec
mov
mov
xchg
std
aas
add
int3
popf
std
mov
test
add
movsb
or
sbb
leave
push
jmp
xchg
lret
or
insl
les
test
mov
test
shll
in
and
movsl
sahf
loopne
push
in
push
push
push
imul
cmp
sub
push
pop
and
movl
jnp
loope
daa
fcos
cmp
inc
dec
sbb
ficoml
pop
mov
jmp
push
pop
ljmp
daa
sub
push
ja
jecxz
in
or
sub
sahf
mov
loope
pusha
push
mov
imul
das
lret
inc
adc
mov
loope
mov
push
pop
addr16
pop
push
add
inc
out
scas
xchg
cmp
andb
jnp
shrb
adc
enter
aam
mov
incb
cmp
addb
jle
repz
stos
mov
mov
int
mov
cmp
xor
in
fwait
sbb
mov
pop
mov
das
out
jne
cs
pop
fcmovb
mov
sub
and
push
fcomps
inc
loopne
aam
jg
daa
pop
popf
insl
popf
mov
pop
pop
stc
push
pusha
popf
sub
jne
xchg
andb
dec
mov
arpl
scas
sbb
and
sub
push
cld
mov
xchg
mov
add
inc
sbb
push
cmp
mov
cmpsb
sbb
pop
inc
sbb
fwait
mov
mov
gs
and
gs
sbb
push
call
ret
sub
mov
sbb
lea
inc
bound
add
std
shl
mov
cmp
ficomps
test
shl
sub
cmp
xor
dec
mov
mov
lods
cld
push
and
pop
lds
jo
dec
mov
minps
and
outsl
xlat
adc
sbb
stos
xor
repz
xor
mov
sub
jno
cld
testb
lret
fbstp
hlt
dec
xchg
mov
or
sbb
in
stos
pop
cmp
nop
add
cmc
or
iret
mov
dec
adc
cmpsl
jb
pop
xorb
cmc
jp
xchg
cltd
and
sbb
cli
lods
les
push
xchg
daa
add
ljmp
and
out
ds
xchg
jb
out
imul
xchg
ret
je
lea
mov
pop
mov
dec
xchg
das
sbb
add
in
aas
xchg
ret
iret
lcall
adc
pusha
in
cli
push
pop
adcb
testl
fwait
gs
cmp
or
test
in
push
test
cmc
cmp
mov
std
loopne
dec
iret
dec
scas
dec
xor
mov
es
mov
insl
push
outsl
mov
pop
adc
daa
sbb
cmp
mul
mov
enter
les
iret
mov
adcb
aam
xchg
mov
iret
jbe
pop
div
in
or
cltd
leave
dec
jg
in
mov
in
add
sbbl
pop
xlat
scas
cmp
lahf
xchg
or
inc
arpl
loopne
iret
and
aas
imul
jbe
add
out
int3
xchg
add
sbb
and
cmc
adc
pop
in
dec
mul
xor
dec
jg
jo
ss
shll
jns
mov
mov
mov
invd
xchg
loopne
mov
arpl
popa
xor
mov
jno
push
loope
insb
dec
or
repnz
or
cld
loope
daa
dec
mov
pop
dec
push
fwait
adc
scas
shlb
cmpb
jo
in
rcr
xchg
ss
cmp
pop
add
xchg
xor
outsl
ja
mov
mov
push
or
in
into
mov
sbb
mov
mov
inc
fs
jge
out
pop
lret
jns
push
clc
ss
mov
sarl
cmc
test
movb
mov
add
das
test
or
adc
xchg
stos
test
add
stc
add
jne
movsb
jecxz
ljmp
and
aaa
out
sbb
pop
pop
xor
sti
fmulp
or
leave
xchg
push
add
dec
or
out
xchg
jecxz
pusha
nop
fidivl
dec
or
stc
dec
jecxz
jbe
nop
inc
lahf
jno
imull
mov
shrl
adc
lcall
lcall
pushf
inc
ds
data16
imulb
push
cmp
xor
mov
stos
sbb
shlb
int3
pop
mov
dec
mov
cs
data16
sti
jns
xchg
pusha
pop
out
pop
adcb
hlt
lret
out
lds
fs
push
pop
xor
pop
imul
inc
leave
iret
lahf
ljmp
popa
mov
jbe
inc
call
orl
int3
sub
mov
repz
or
xchg
das
repz
jmp
push
stos
jmp
in
push
lods
or
test
dec
mov
mov
inc
cmpsb
sahf
outsl
scas
cwtl
xor
les
xchg
sub
sub
cmp
mov
mov
jg
stc
ja
fs
inc
sub
arpl
imul
and
leave
push
sub
in
cmp
dec
jmp
js
std
or
sbb
std
pop
pop
fdivrl
sub
int
push
mov
cmp
add
add
ja
push
sbb
dec
cmp
or
xor
testb
stos
fildll
fldcw
pusha
pop
add
lret
dec
das
rorb
sbb
jne
and
je
scas
mov
mov
mov
jl
xor
add
mov
push
ljmp
add
or
push
pop
mov
aas
push
cmp
and
out
movsb
out
xchg
jecxz
sub
addl
sbb
jp
sbb
movsb
hlt
push
js
dec
cmc
adcl
pop
pop
xchg
cmpsb
sti
mov
add
sub
out
adc
and
pop
loope
xchg
popa
lcall
sbb
pop
shrl
cld
xor
cmp
mov
out
lcall
push
jnp
sub
adc
fnstenv
jmp
dec
setno
lock
daa
sarb
or
or
adc
mov
pop
mov
ret
insb
pop
mov
fsubr
cmp
sbb
cmp
in
sub
addr16
call
lret
cmovs
inc
push
sbb
repz
mov
xor
fs
mov
inc
jnp
mov
push
fistps
scas
pop
push
mov
xlat
mov
jl
sub
cmpsb
daa
adc
or
fs
mov
sbb
insl
adc
popa
xchg
mov
rclb
and
dec
and
push
jge
lods
mov
add
sub
xor
and
stos
loop
xchg
cmp
imul
xlat
jp
mov
repz
lahf
mov
stos
es
imul
in
ret
add
push
pushf
dec
inc
pushf
inc
loop
ret
jle
js
cmp
lods
lock
xchg
cmp
movsl
adc
mov
mov
push
pop
popa
adc
jno
stc
insb
mov
or
sahf
jne
add
and
cmp
outsl
adc
or
jge
lds
lock
sub
or
loop
dec
sbb
pusha
cld
ss
dec
loop
mov
pop
aas
adc
mov
std
push
mov
cmp
push
fwait
clc
fcompl
inc
jno
je
lock
out
lods
aad
sbb
and
inc
iret
imul
push
test
call
insl
cwtl
pop
add
das
lret
dec
loopne
andl
adc
pop
inc
in
add
xchg
and
imul
cmp
push
fisubl
jne
stos
ss
cmpsl
in
add
or
les
ss
lcall
push
sub
aam
pop
and
icebp
xchg
mov
test
ja
nop
push
lods
push
imul
test
ret
mov
jb
cmp
xchg
stc
pop
xorb
repz
xlat
das
in
inc
fchs
xor
jle
jp
outsb
mov
xchg
push
and
xor
push
loope
sbb
jmp
dec
test
cmp
pop
cmpsl
jmp
cmpsl
ljmp
inc
pop
jmp
jb
aas
jnp
inc
xlat
sti
stc
inc
jo
roll
jge
std
cmp
push
scas
inc
and
outsb
bsr
adc
fs
mov
out
dec
xor
ss
pushf
mov
cmp
sti
push
sub
mov
shrb
movsb
push
pop
aas
pop
xchg
or
mov
in
flds
mov
vaddsubps
iret
outsl
movsl
sbb
mov
inc
pushf
dec
xor
mov
stc
xor
shll
out
call
mov
cmp
int3
jae
mov
mov
mov
jmp
loop
jbe
lret
fsubs
ret
ds
ja
ret
sub
jmp
add
sbb
and
mov
adc
call
xchg
lock
lds
lods
cmpb
mov
fildll
icebp
rcrb
jnp
sbb
inc
sbb
popa
test
fldl
push
ret
fcoms
cwtl
nop
inc
jnp
add
pop
add
xchg
pop
jbe
jle
enter
xchg
jge
loope
sti
outsb
mov
inc
incl
xchg
adc
add
repnz
or
xor
test
and
inc
inc
insl
and
fs
lods
fcoml
mov
push
stc
mul
cmp
mov
inc
jno
pop
in
leave
jne
xchg
inc
inc
xchg
lods
imul
dec
xchg
jecxz
add
lock
pop
decb
rorb
scas
xchg
mov
outsb
testb
lret
in
js
ret
sbb
aaa
andl
jg
scas
rcrb
arpl
jae
or
jle
lods
xchg
mov
push
into
sarb
sub
cmp
loopne
xor
cs
push
rolb
sub
xchg
fistl
out
push
mov
cltd
or
imul
jg
add
lea
shrb
add
add
andl
pushl
jo
sbb
mov
cmp
mov
sub
cmp
mov
mov
xchg
js
call
jmp
mov
xor
push
mov
xchg
dec
jmp
rclb
cmc
test
jno
out
outsl
adc
shlb
in
pop
ja
dec
dec
jmp
add
jge
adc
add
aas
fistps
inc
fistpll
cmp
inc
pushf
addr16
adc
pop
and
imul
mov
std
movl
repz
int
movsl
clc
pop
and
cmpsl
xor
sub
or
int
and
testl
adc
pusha
xor
pop
dec
das
push
insb
call
pop
or
pop
pop
out
push
lods
xchg
mov
cmp
dec
push
jle
loopne
sahf
sub
cmp
inc
das
add
jbe
mull
movsb
movsl
les
xlat
fdivp
mov
mov
push
shll
jno
das
mov
mov
sub
pop
mov
sub
arpl
cmp
out
cmp
add
sbb
jecxz
clc
mov
cmp
and
leave
mov
dec
outsb
push
push
mov
out
or
xor
push
or
addb
inc
xor
xchg
push
icebp
stos
xchg
repnz
leave
in
mov
divb
sbb
cmp
sbb
and
sub
out
cs
xor
mov
das
dec
mov
mov
mov
shr
rorl
add
cmp
pop
lds
dec
sahf
mov
icebp
cmp
push
xor
lods
xchg
dec
sub
movsl
add
aad
ret
push
imul
lea
mov
mov
push
addl
mov
inc
out
push
sbb
mov
jge
insb
test
and
rclb
movsl
jge
inc
and
dec
inc
add
dec
scas
xchg
adc
or
lea
jmp
outsl
adc
inc
sub
pop
xchg
lods
jle
pop
and
hlt
loop
es
sbb
cmp
enter
and
add
push
clc
aam
loop
pop
in
stos
adc
and
sahf
dec
sbb
lods
adc
outsl
pop
or
cmc
sub
add
add
mov
in
xor
mov
xor
dec
lea
std
lret
xchg
jno
sbb
push
std
std
jbe
jg
pop
sti
dec
cmp
pop
out
ret
mov
gs
fadd
pop
mov
fs
cmp
in
push
xchg
sbb
sbb
data16
fidivrs
cs
mulb
adc
pop
inc
xchg
jbe
cmp
fcompl
xor
xor
sbb
mov
stos
aas
dec
and
movsl
jae
add
movsb
sub
stos
mov
cld
inc
std
push
ss
data16
jae
imul
dec
in
push
mov
adc
jo
test
jae
test
adc
mov
lods
push
pop
into
mov
gs
testl
cmpsl
sbb
aad
dec
xlat
lcall
repnz
hlt
jle
scas
or
push
cli
outsb
repz
daa
in
fisubl
pop
mov
or
addr16
lea
jmp
ret
adc
adc
cld
adc
sti
xchg
test
xchg
pop
jle
mov
mov
adc
gs
test
inc
ja,pt
rcll
cmp
lcall
or
testb
sarb
test
sub
orb
add
sahf
cli
add
shlb
insl
dec
sti
xor
jbe
lret
aam
repz
mov
out
in
cltd
les
fnstenv
mov
xor
pop
pop
xchg
or
push
sub
inc
sahf
or
pop
stos
cmp
addr16
lea
in
sbb
push
mov
sti
fcom
aas
fucomi
call
inc
les
mov
int
popf
aaa
ds
adc
xchg
ja
and
popf
jle
jnp
jl
repnz
or
add
loop
or
jno
pop
in
rcll
pop
ret
jle
fcomp
push
jb
inc
jae
lods
lods
inc
scas
hlt
xor
or
aas
lods
lods
fiaddl
je
or
pop
stc
js
xchg
cmpsb
in
pop
out
aas
orl
punpckhdq
stc
cld
adc
inc
sub
or
in
cli
push
xchg
scas
and
sbb
inc
aaa
pop
ja
outsb
cli
in
and
xor
lret
pop
dec
mov
add
pop
inc
xchg
xor
push
in
jp
mov
les
ret
push
js
test
cmpsl
dec
addl
sub
push
shlb
or
sbb
and
notb
jecxz
ret
or
outsl
fwait
mov
loope
sub
jp
jb
xchg
pop
daa
mov
out
subb
ds
adc
adc
call
loopne
lret
jbe
sbb
ja
push
imul
cs
and
lds
inc
lods
insl
mov
jns
dec
xchg
mov
fsubs
add
mov
imul
mov
or
test
les
call
adc
mov
outsb
lock
and
shll
inc
lret
lods
sub
aad
inc
cmpsl
ds
inc
or
popa
xchg
test
sti
or
js
and
and
or
dec
dec
sub
jo
lret
mov
pcmpeqb
xchg
pop
xor
pop
cltd
popf
pop
decl
and
push
mov
cmp
jb
scas
jns
xchg
or
dec
pop
push
stc
mov
mov
inc
nop
cmpsb
sti
xchg
add
or
aam
xor
jl
dec
loop
xor
out
and
inc
in
mov
rcl
int3
movsl
mov
mov
xchg
fsubr
add
jnp
btc
je
dec
mov
stos
cmp
iret
xchg
stos
sub
out
mov
xor
outsl
imul
outsl
pop
aas
mov
ficoml
adc
clc
sub
jg
or
jb
adcb
xor
mov
push
mov
js
push
or
call
push
push
aas
test
xor
ljmp
mov
mov
adc
test
xchg
cmp
push
je
xchg
pop
lea
movb
cli
aam
or
scas
or
insl
mov
test
cwtl
sbb
sub
cwtl
movsb
sub
fidivrs
pop
jns
ss
xchg
jge
xor
sub
jae
sahf
in
mov
test
jae
pop
and
ss
popa
mov
std
cld
out
sbb
out
test
clc
sbb
hlt
arpl
sub
clc
popa
orl
out
jmp
cmp
movsb
movsb
mov
imulb
mov
fmulp
insl
xlat
mov
stc
addr16
fs
inc
dec
loop
and
in
sub
test
mov
push
dec
loopne
push
mov
pop
cmpsl
movsb
sub
jecxz
add
daa
ret
dec
and
push
data16
mov
fbld
cli
or
test
int
jmp
std
or
jae
cli
fmul
jge
rolb
add
shl
cmp
xchg
dec
pop
or
or
and
insb
test
jne
aaa
and
push
xor
ud0
out
stos
in
into
or
mov
mov
mov
arpl
clc
shlb
and
hlt
or
pop
jl
filds
shlb
jne
mov
test
lods
pop
fsubp
or
jmp
imul
xor
push
dec
mov
add
mov
lcall
test
sub
mov
push
in
inc
mov
gs
ja
adc
aas
xor
mov
jmp
icebp
pushf
je
jb
adc
sub
imul
shr
mov
jo
dec
pop
mov
push
lret
jecxz
push
xor
xchg
jl
fs
std
and
mov
hlt
xchg
inc
pop
inc
cmc
sbb
ret
out
sub
jge
mov
loopne
mov
push
lret
cwtl
popf
mov
xchg
flds
movsb
mov
and
sbbb
sbb
icebp
lret
or
mov
lods
cmp
in
dec
pop
repnz
cld
arpl
rclb
hlt
xlat
call
jns
lret
or
pop
push
mov
in
lahf
aad
cmp
adc
repnz
push
jne
jnp
mov
xor
out
jg
mov
daa
sbb
fnstenv
xor
mov
pop
cli
lods
or
xchg
icebp
mov
add
xchg
xchg
das
adc
jmp
imul
or
xor
int
mov
pushf
scas
mov
sarl
int
pop
andl
call
xchg
mov
aad
lods
into
test
mov
add
pop
adc
mov
das
mov
call
xchg
lret
push
jbe
lds
jns
aam
sub
cli
cli
leave
mov
in
filds
out
push
lock
xchg
sub
add
adc
mov
adc
jb
jo
fdivr
push
mov
mov
aas
cmc
stos
mov
and
loopne
push
add
rcrl
mov
jp
sbb
xor
cmp
popf
inc
ret
or
push
mov
call
aas
xchg
inc
xlat
shll
or
scas
add
inc
fistpl
and
mov
addr16
shrb
mov
pop
xchg
cmp
gs
mov
mov
cmp
push
rclb
mov
mov
inc
subb
pop
shrl
pop
jl
bound
and
out
jne
jno
addl
cmc
in
cli
daa
or
mov
movsl
cmp
dec
mov
push
icebp
sti
sbb
inc
dec
lods
cmpsl
jle
in
pop
std
pop
add
xor
mov
mov
filds
das
xchg
mov
cmp
add
lret
std
jae
cmp
push
and
mov
pop
cmp
stc
pop
pop
rolb
icebp
mov
push
inc
pop
cmp
enter
das
xchg
push
ds
jmp
test
neg
xor
cmp
xchg
sbb
fldcw
aaa
call
arpl
cmp
ss
negb
push
dec
jno
les
and
les
repz
inc
std
mov
loope
ja
jmp
dec
mov
sti
mov
cli
xchg
inc
shll
add
fisubrs
push
adc
insb
jecxz
les
fnsave
fsubl
jge
fwait
lods
fwait
sub
jne
adc
js
jmp
aaa
loop
in
xor
out
loope
syscall
nop
pop
jns
jbe
mov
or
inc
jns
sub
into
xor
test
insl
das
xchg
outsl
lahf
dec
mov
mov
mull
inc
mov
jmp
jb
inc
loope
js
xchg
mov
imull
mov
ja
cmc
jne
mov
xor
pop
loop
shll
xor
mov
sbb
push
stc
cltd
xchg
ret
pushf
push
inc
push
lods
pop
mov
inc
pop
jp
pop
arpl
add
mov
sbb
int
add
inc
std
inc
jae
or
cmp
push
in
aaa
scas
scas
add
imul
cmc
in
out
sub
jns
sti
jge
addr16
loopne
out
or
pop
nop
out
mov
fisttpll
outsl
popa
jne
clc
cmp
pusha
adc
notb
je
mov
hlt
popa
insl
push
orb
mov
cld
cmp
iret
lods
mov
mov
mov
fdivrs
mov
xchg
das
sbb
cmp
shll
sbb
cltd
lret
into
lcall
cltd
mov
push
cltd
sbb
cmovbe
movsb
or
dec
pushf
pushf
xchg
in
arpl
jbe
in
das
pop
push
out
lret
inc
xchg
clc
stos
loop
fmuls
xchg
clc
lods
add
nop
xchg
stc
test
leave
inc
xor
or
cmp
ljmp
xchg
xor
movsb
aas
lahf
dec
push
lods
xor
push
ret
cmp
addr16
stos
sbb
roll
cs
cmpsb
test
cmp
dec
out
jo
pop
inc
movl
and
inc
pop
add
pusha
push
in
or
loopne
push
leave
cld
mov
out
sahf
lahf
jno
jge
pop
fwait
ret
cmp
dec
loop
scas
fldt
push
movl
cmp
mov
int3
mov
imul
push
enter
subl
or
mov
pushf
stos
and
clc
and
push
mov
jb
imul
xchg
aam
clc
shll
push
mov
sub
sbb
add
xor
mov
mov
sbb
popf
std
loopne
roll
inc
fisubl
sarl
lea
lods
bound
jne
cli
mov
pushf
scas
in
cmp
testl
and
popf
aaa
outsl
cmp
and
jb
popf
in
jb
sbb
cmp
fucomi
insl
imul
sbb
ret
fwait
int
frstor
cld
sahf
out
fbstp
and
push
adc
clc
sarb
inc
jecxz
cmpsl
jns
flds
jae
push
mov
inc
je
sub
lahf
add
negl
dec
stc
sbbl
mov
icebp
in
jns
xchg
xchg
xor
jp,pt
pop
data16
xchg
adc
fnstcw
xor
sub
imul
insl
fadd
lret
sbb
or
filds
mov
inc
stos
les
sub
and
mov
push
or
jmp
shrl
imul
outsb
sub
scas
fsubrp
js
mov
jecxz
mov
jnp
mov
adc
mov
cmp
shl
setge
add
test
loopne
push
lret
aaa
movsb
push
push
xchg
fstl
pop
fstl
push
mov
and
cli
test
add
mov
ret
push
in
jg
push
out
fdivl
xor
push
test
inc
jmp
pop
lods
sbb
hlt
sbb
and
push
sbb
orl
mov
push
in
pop
xor
mov
pop
ret
test
js
pop
cmp
lods
sub
ret
lret
sub
inc
jl
xor
leave
or
pushf
mov
popa
sub
add
jp
pop
sbb
cmp
or
out
dec
dec
psrlw
sbb
cmp
int3
jp
outsl
cmp
mov
jbe
gs
test
push
loope
lods
push
fwait
pop
adc
push
hlt
popl
xor
je
mov
mov
push
jp
mov
arpl
arpl
cmc
adc
dec
ret
sbb
or
mov
mov
cmp
inc
jmp
fstpl
jmp
xor
out
rorl
sub
jae
cmc
sbb
inc
shll
sub
push
imul
push
sub
xor
test
nop
jp
sbb
in
mov
sbb
adc
std
xor
dec
push
sub
arpl
mov
sbb
loop
shr
xchg
das
pop
js
ja
sbb
and
mov
jo
and
sub
mov
jge
pop
ret
add
outsl
mov
sub
sbb
lahf
jbe
and
jnp
movsb
xchg
aad
and
rolb
sub
pusha
xchg
pop
scas
dec
in
loopne
mov
jle
pop
mov
imul
jg
push
out
push
addl
stos
xlat
adc
inc
sbbb
inc
xchg
inc
mov
xchg
pop
imul
sahf
or
outsl
sahf
sbb
test
xchg
jno
loop
jle
fdivs
and
jle
test
push
inc
nop
rclb
xchg
or
jno
scas
mov
test
mov
out
push
pusha
xchg
mov
test
add
stc
cmp
ljmp
cmc
jno
jns
arpl
mov
lret
or
inc
hlt
ficoms
push
addl
cmpsb
or
xor
jmp
sub
insb
aaa
jmp
sbb
sub
test
jo
xchg
out
stos
mov
aad
xchg
push
push
lea
sahf
out
mov
or
pop
gs
es
movsl
jb
or
mov
jl
adc
roll
gs
insb
call
sbb
cmpb
into
mov
mov
enter
jecxz
xchg
sbb
std
arpl
popa
jb
lcall
push
leave
lret
fiaddl
adc
sbb
xor
addr16
and
and
hlt
test
addr16
cmp
cld
mov
shl
pop
pop
aas
fstpt
call
int3
sub
jbe
mov
mov
sub
pushf
addl
mov
out
lret
cmp
xchg
daa
mov
js
test
stos
inc
sbb
je
ljmp
clc
addr16
shrl
sub
daa
mov
pop
jo
add
sub
dec
and
lock
dec
lcall
addr16
pop
pop
dec
pop
jecxz
and
nop
push
fisubs
or
mov
xchg
stos
jae
pushf
mov
inc
stc
and
jnp
int
add
sahf
or
loopne
daa
std
pop
mov
popa
push
sti
jno
fisubrl
pop
jl
insl
sarb
out
sti
das
out
mov
mov
and
xchg
or
and
aad
lods
dec
mov
mov
mov
fs
push
adc
popa
or
imul
mov
dec
iret
xchg
in
stc
test
push
popa
ja
fildll
inc
xchg
fucomip
jge
dec
hlt
rcr
add
inc
xchg
inc
lcall
and
sub
dec
dec
js
cmp
out
arpl
fwait
popf
test
dec
out
fs
shrb
xchg
cmc
shl
out
sahf
dec
adc
mov
mov
test
lods
pop
dec
push
lods
loope
rclb
lds
cmc
les
pop
leave
jmp
xor
cld
in
jl
adc
testb
jnp
outsl
xlat
out
insl
rcr
cmpl
in
lods
dec
pop
xchg
inc
cwtl
std
rcr
addr16
sbb
mov
ja
in
add
dec
clc
inc
int
ljmp
xchg
push
jle
jne
out
sahf
add
xchg
inc
aaa
repnz
inc
mov
dec
repz
test
mov
cmpsb
cmp
jle
ret
fucomi
sbb
fldcw
mov
and
mov
scas
add
sbb
add
sub
movsl
into
call
cmp
pop
enter
fistpl
and
divb
or
xlat
cmp
iret
test
adc
js
and
mov
jl
ret
xlat
add
loope
pop
dec
pop
xchg
push
cmp
std
rcrl
decl
push
je
test
clc
push
bound
xchg
ret
pop
loope
xlat
pop
mov
and
testl
sub
push
fnstcw
iret
fistps
mov
cs
push
jmp
gs
out
or
cmp
in
mov
imul
adc
ja
sahf
insb
sub
pop
cmp
adcl
cmpsl
arpl
cmp
xchg
sbb
movsl
divl
push
stos
pop
call
int3
stos
or
inc
mov
xchg
inc
cltd
jl
cmp
and
push
cmp
cmpsb
movl
cli
gs
jno
ret
setbe
movsl
jl
jbe
lret
mov
xchg
out
lods
imul
stos
movsb
jg
cld
sarl
outsb
push
lea
insl
and
pop
jo
fdivrp
hlt
ds
mov
sbb
aad
jl
fwait
add
shrl
test
les
fstpt
add
add
push
xchg
testb
sbb
or
cmp
or
push
aas
add
lods
lahf
divb
pop
ficoml
lret
test
icebp
icebp
gs
test
add
xor
das
pop
or
ror
enter
fidivs
jle
jmp
fwait
loopne
stos
lods
mov
push
scas
lock
repz
mov
add
aaa
in
jecxz
cmpsl
icebp
rcrl
and
insb
test
cmpsb
repnz
inc
pop
mov
loop
fmul
jl
mov
fnstsw
adc
push
and
fcmovnb
jnp
push
xor
loopne
fcompp
sbb
jl
mov
out
adcl
jg
or
cmpsl
xchg
jg
ror
std
jmp
dec
or
mov
cmp
arpl
sub
mov
add
mov
shlb
mov
push
dec
out
fstps
je
xor
ss
jb
dec
rolb
ds
adc
hlt
jmp
inc
mov
addr16
xor
out
aad
lret
jecxz
inc
std
jle
sbb
pop
add
jns
or
fldl
mov
fwait
lods
push
inc
add
out
dec
jnp
scas
scas
cli
push
pop
push
push
cmp
cmp
imul
or
jbe
pop
inc
adc
sub
and
bswap
or
fwait
mov
mov
mov
xor
mov
aaa
mov
jmp
jecxz
jnp
xlat
inc
sbb
jmp
pop
call
imul
push
jmp
jg
in
sub
adc
ret
imul
mov
nop
fistps
xor
sbb
leave
int
xor
icebp
fidivl
mov
lcall
clc
push
insb
or
rolb
sub
xchg
test
jl
aam
dec
cmp
dec
xchg
xor
lret
scas
and
sbb
sbb
and
jp
movsb
xchg
es
jns
jno
dec
mov
in
cmp
sarb
or
mov
mov
add
mov
ret
jg
pop
jne
mov
int
mov
movsb
outsl
mov
sbb
mov
cli
mov
js
in
call
clc
cmp
adc
or
in
mov
mov
ret
adc
mov
test
scas
jg
lret
and
pop
pop
aas
mov
and
nop
test
cwtl
loop
orl
adc
fiadds
andb
inc
lock
loop
sbb
pop
std
sbb
int3
mov
pushf
mov
pop
cmpsl
jbe
addb
in
nop
add
xorb
and
loop
sbb
pop
mov
push
aas
mov
mov
int
aad
inc
add
js
push
xor
push
mov
mov
jns
clc
mov
and
inc
shlb
add
xor
adc
mov
add
mov
les
cmpb
popf
dec
dec
adc
jnp
imul
ss
sbb
jmp
int
jne
out
shl
cmc
push
leave
into
repz
cmp
xchg
sub
les
jbe
cs
nop
divb
adc
xchg
stos
xor
xor
es
ret
cmp
mov
pop
aad
repnz
cmp
arpl
jae
cmp
jg
or
cwtl
xor
mov
ret
or
sbbb
cmp
sub
imul
dec
mov
xlat
leave
push
or
insl
and
lret
in
dec
sbb
jp
push
push
dec
sub
test
xchg
andb
mov
sub
shll
push
arpl
jg
scas
leave
cmp
mov
popf
cmp
divl
in
xchg
fisubrl
sahf
addb
jle
cwtl
add
xchg
mov
push
mov
sub
jge
jg
inc
int3
mov
jmp
push
je
pop
aaa
inc
std
sbb
lock
xor
inc
int
outsb
jle
and
js
add
cmpsb
inc
shll
arpl
jmp
dec
ds
jle
mov
mov
jge
das
mov
xchg
mov
stos
cmp
test
jbe
into
mov
jae
adc
push
jo
cmc
jne
push
ljmp
rol
inc
push
push
movlhps
cmp
in
stc
loopne
sub
xlat
jl
in
mov
mov
es
cmc
nop
wbinvd
push
mov
jle
pop
fnsave
adc
jne
lock
inc
mov
pop
fcmove
daa
aas
lea
and
push
pop
add
int
adc
xchg
mov
and
mov
lret
mov
movb
jo
jg
dec
dec
jo
incl
int3
pop
in
dec
int
sub
mov
insb
xor
lcall
adc
jle
mov
outsl
and
push
pop
mov
loopne
mov
mov
fnstcw
loop
jl
iret
test
test
shlb
and
sbb
pop
testl
dec
arpl
in
scas
test
jp
ds
out
push
jne
mov
sbb
dec
push
lcall
pop
mov
or
cwtl
testl
jb
dec
iret
cmp
push
mov
movsl
fsubrs
pshufw
ja
lods
lock
roll
sbbb
inc
sbb
xor
rclb
hlt
int3
das
das
fisttpl
push
out
mov
enter
jno
sub
inc
subb
inc
sbb
mov
je
push
push
popf
pop
loop
jge
add
call
mov
pop
xlat
mov
sbb
pusha
dec
mov
inc
fcmovne
mov
das
push
mov
stc
scas
mov
test
std
inc
or
loop
inc
dec
testb
push
push
fs
jmp
int3
jno
mov
fsubrs
xor
or
aas
pop
push
xlat
rclb
mov
stc
cmp
xchg
inc
xchg
rcrl
xor
cmp
out
jne
pusha
shll
push
aas
ret
jg
push
sbb
gs
cwtl
mov
iret
mov
les
imul
push
idivl
ror
jle
test
xchg
pop
pop
cmp
cs
mov
out
out
lahf
dec
cmp
xor
push
xor
xchg
dec
fidivs
dec
imul
in
sbb
jnp
push
ss
xchg
or
cwtl
fdivrs
idivl
je
push
jp
sub
pop
ja
cmp
push
xor
xchg
ss
sub
pop
xor
testl
aas
cmp
inc
je
mov
sbbb
dec
inc
lret
mov
int3
test
aam
popf
outsl
mov
sahf
push
push
aas
mov
add
out
jae
lock
jno
pop
repnz
je
xchg
jae
in
pop
dec
sub
pop
xchg
leave
dec
stc
adc
scas
mov
daa
sub
ljmpw
in
outsl
stc
aad
xchg
rorl
sub
iret
add
rorb
and
xorb
cltd
push
and
aas
daa
adc
dec
mov
lahf
jl
xor
cwtl
mov
aaa
mov
popf
bound
ss
and
adc
xor
cmp
test
das
push
fwait
dec
xchg
popf
lahf
inc
fwait
into
in
adc
mov
mov
inc
testl
add
rol
inc
fiaddl
in
sub
push
inc
in
insl
push
mov
jbe
cltd
cli
or
shlb
outsb
sbb
xchg
and
xchg
ja
fimull
bound
test
adc
and
mov
jg
dec
adc
push
push
mov
mov
stos
aaa
scas
call
das
jecxz
lcall
leave
mov
cmp
imul
mov
in
cmc
nop
loop
cmp
xor
sarb
inc
sub
jmp
dec
std
jmp
and
dec
push
mov
mov
inc
in
clc
std
das
lret
shlb
sbb
je
mov
lds
test
js
inc
mov
inc
in
sub
or
cmp
cwtl
scas
jg
outsl
dec
bound
jo
fists
and
or
sub
push
loopne
jmp
insl
or
push
shr
cld
mov
cmp
xchg
fnstenv
add
loope
sbb
xchg
mov
adc
jg
push
push
out
push
ds
sub
jecxz
bound
sub
ja
scas
add
stos
es
movsb
addr16
push
mov
ret
pop
adc
hlt
pushf
lahf
pop
leave
imul
cmpsl
lods
fmuls
imul
jns
fs
sub
loopne
or
fdivrl
inc
rorl
mov
dec
mov
out
pop
xchg
and
test
nop
xor
mov
lods
mov
add
rcll
adc
aad
lock
int
or
jo
add
in
xor
mov
xchg
sbb
scas
scas
mov
xor
in
cmp
call
lods
outsb
or
sub
loopne
ret
loop
mov
out
aam
jp
or
mov
xor
mov
out
cmp
aaa
mov
and
push
les
orb
sub
sbb
cli
hlt
pop
aaa
cwtl
push
scas
insb
and
push
pop
int
sub
or
mov
lods
xchg
stc
pop
fbstp
repz
ljmp
lahf
or
inc
insl
mov
jne
int
std
xor
enter
pop
lret
cmp
push
dec
mov
mov
mov
jo
and
mov
js
sti
pop
into
pop
nop
adc
add
cmp
dec
mov
xchg
cltd
push
dec
xor
xlat
ret
sub
dec
inc
push
mov
push
test
pop
and
jns
sub
add
cmp
scas
mov
add
std
or
ret
les
mov
je
dec
test
mov
daa
add
adc
jecxz
mov
mov
dec
mov
in
imul
pop
aas
pop
cwtl
mov
loope
cmp
jmp
cmp
push
imul
mov
outsl
mov
lret
ret
stos
imul
fldt
rolb
rorl
scas
xchg
inc
inc
aas
or
ljmp
jae
mov
scas
mov
adcb
mov
imul
shrb
cs
mov
insb
jbe
mov
adc
push
cmp
cli
stos
loop
jmp
insl
outsl
push
orl
cmp
cmp
or
and
mov
in
push
mov
cmpsb
add
dec
leave
sbb
ljmp
xorl
fildll
dec
andb
xor
fs
orb
ret
push
mov
adc
hlt
xchg
sub
and
sub
add
fisttpll
or
pop
loop
push
sti
inc
sbb
push
xlat
cltd
scas
inc
mov
push
stos
lret
inc
pop
mov
push
add
cmp
sbb
fsubl
insb
xchg
bound
mov
ffreep
or
or
mov
sub
int
adc
inc
jg
sub
inc
mov
iret
pop
pop
rcr
and
bound
fbstp
clc
daa
add
arpl
out
pop
cli
ljmp
imul
pushf
push
cmovle
les
outsb
in
fsubrs
xchg
repz
xlat
xchg
das
addr16
cmp
cmp
adc
add
jo
pop
sub
xor
inc
insb
imul
inc
xorl
cmp
and
clc
cmp
xlat
cmpsb
test
cld
test
rorb
repnz
jge
fs
pusha
jns
roll
int3
inc
cli
pop
fs
cmp
jl
in
cmc
shl
sub
pop
and
xor
lcall
xor
jecxz
int3
int3
add
pop
in
mov
nop
adc
jp
xlat
mov
loop
lcall
dec
push
jmp
cmp
pop
in
add
mov
jo
bound
pop
fdivrl
dec
repz
sahf
push
pop
leave
add
cmp
inc
and
add
movsb
sub
aad
inc
lret
rolb
pusha
mov
scas
outsl
outsb
in
cs
testb
pop
in
out
mov
pushf
jle
mov
subl
cmc
mov
or
inc
pop
sub
les
pop
push
xchg
jle
sub
xchg
nop
scas
popa
push
adc
adc
push
and
inc
pop
es
mov
arpl
data16
sti
bnd
jge
pop
xchg
mov
ds
outsb
inc
jno
test
rcll
fwait
je
push
sbb
add
inc
faddl
aad
mov
iret
mov
add
mov
mov
cs
mov
mov
std
and
push
gs
mov
sbb
mov
cmp
xchg
xchg
mov
adc
imul
gs
movsb
xor
mov
imull
mov
lcall
or
enter
sahf
lret
es
pusha
xor
inc
pop
insb
in
cmc
lods
adc
lods
or
jb
fiaddl
mov
jl
adc
mov
pop
sarb
xchg
jns
push
imul
add
sub
daa
or
jne
pop
xchg
iret
or
out
insl
sbb
mov
mov
push
fidivs
or
test
xor
and
adc
cli
sbb
add
dec
inc
incl
enter
jnp
ficoms
mov
cmp
sbb
and
and
cmp
xchg
ret
cmp
mov
xlat
sub
pop
lahf
add
and
xor
add
xchg
or
repnz
and
aad
sbb
movl
fldenv
adc
adc
pop
rorb
or
mov
lods
jns
js
iret
add
lret
sbb
jae
rcrl
inc
daa
sub
jae
cli
imull
pop
mov
shl
mov
clc
imul
mov
shlb
in
fiadds
xor
ror
adc
cmp
aaa
jl
mov
pushf
call
adc
xor
icebp
xor
mov
mov
js
dec
es
ret
adc
aam
adc
leave
sahf
hlt
dec
push
mov
sub
movsl
out
and
shl
sbb
scas
mov
push
sti
xor
mov
cmc
ficoms
loopne
mov
std
push
mov
scas
lcall
push
mov
inc
push
out
or
sub
repz
xchg
fcomps
cltd
sbbl
hlt
cmp
mov
mov
inc
inc
mov
push
clc
out
enter
adc
jns
or
bound
inc
call
gs
push
cmpsb
adc
stos
or
cld
inc
inc
ss
xchg
mov
dec
movsl
xlat
sub
push
add
cwtl
jns
or
sbb
mov
and
shll
stc
cmc
enter
into
pusha
xchg
xor
adc
jns
push
xchg
dec
jmp
mov
mov
xor
sbb
xlat
push
mov
repnz
subl
int
xchg
nop
es
test
bound
leave
and
int
out
pushf
jmp
mov
cmp
jg
stos
jnp
mov
jno
push
test
nop
sar
rorl
lret
jbe
movsl
std
add
es
fcompl
inc
std
mov
jno
lahf
ljmp
push
adc
inc
fmull
or
cltd
jb
movsb
pushf
sbb
xchg
push
mov
mov
jns
pop
pop
xor
inc
and
lahf
push
jno
jbe
lahf
mov
inc
aad
mov
lods
sbb
sbb
lods
rorl
add
mov
sti
xor
mov
pushf
mov
jle
add
xchg
xor
push
inc
pop
rcrl
incb
aad
mov
popa
rclb
pop
ret
into
out
scas
jmp
outsb
dec
aas
frstor
daa
mov
cmc
das
aas
out
fists
std
mov
cs
outsb
bound
cmp
or
ja
push
sbb
push
pop
cmp
sub
imul
aaa
push
arpl
leave
stos
out
dec
inc
jno
jns
lcall
int3
push
push
aaa
push
movsb
jle
rcll
mov
cmp
mov
push
sbb
cmpsb
sub
or
mov
cwtl
shll
sbb
negb
hlt
push
push
jbe
mov
aas
out
loop
adc
es
mov
and
xlat
add
jnp
sub
fdivs
add
xor
gs
jp
ret
push
je
xor
jno
aad
dec
insl
jmp
pop
push
je
and
iret
xor
or
es
add
popa
cmpl
pop
sbbb
test
sbb
and
loop
xchg
pop
dec
xchg
cltd
jge
dec
sbb
adc
jno
add
push
sahf
mov
mov
sub
pop
cli
sub
xchg
loop
aad
out
rclb
arpl
pop
jmp
jmp
push
ss
pop
scas
pop
pop
or
xchg
jb
fnsave
ds
fnsave
xor
cltd
dec
dec
lods
push
mov
lahf
add
jle
imul
repnz
test
arpl
mov
sbb
jp
jl
mov
hlt
mov
cmpsl
lods
mov
cwtl
and
adc
mov
negb
inc
scas
pusha
icebp
out
stos
lcall
pop
dec
inc
xchg
bound
jno
jmp
insl
cmpsl
or
mov
stc
pop
jbe
je
adc
ds
xchg
cs
cmp
cmp
test
sbb
sti
dec
fwait
je
push
mov
add
pop
pop
jg
in
fcmovnb
and
loop
pop
pop
pusha
shl
xchg
pop
lods
lret
std
jmp
dec
mov
push
jne
repz
js
aas
fcmovu
add
aaa
push
sub
into
inc
mov
rolb
cmp
jp
adc
xor
sbb
jg
mov
sbb
add
jb
xchg
push
in
jnp
xchg
pop
inc
loopne
lds
mov
inc
addr16
xchg
scas
push
inc
jnp
je
mov
out
hlt
sbb
jbe
xchg
mov
or
push
xor
lahf
adc
lret
sahf
mov
dec
aaa
ss
xor
ret
add
jp
pop
push
pop
sahf
mov
in
jb
push
movsb
lret
dec
and
push
dec
cmp
loop
jo
pushl
mov
adc
cmpsl
push
mov
out
pop
mov
lds
lcall
xchg
xor
cli
dec
mov
lret
xor
jnp
fistps
dec
adc
cltd
xchg
cmp
push
ja
in
pop
mov
sub
stos
dec
pop
jmp
hlt
jb
lahf
mov
sub
add
gs
les
mov
xor
lret
imul
or
mov
dec
mov
cmp
push
cmp
xor
xor
add
ds
xchg
lret
stc
mov
ds
pop
or
cmp
shr
enter
aas
daa
jmp
xchg
dec
ja
mov
es
stos
push
inc
sbb
cmp
and
mov
and
push
xchg
pop
xor
sub
daa
jecxz
lock
sbb
shlb
sub
js
pop
mov
add
xor
add
sbb
mov
mov
cltd
int
sahf
sbb
lret
push
inc
in
adc
fildl
dec
add
movsl
mov
in
cmpsb
aas
rorl
and
decl
push
xor
ja
dec
scas
mov
ja
sbb
dec
sti
cld
sub
sahf
cmp
in
mov
xor
and
jb
push
and
idivl
jmp
out
pop
ret
inc
dec
cmc
stos
jae
dec
or
test
adc
push
insb
mov
mov
out
sub
repz
clc
mov
xchg
sti
sahf
cmp
jae
ret
xchg
add
mov
push
xchg
xor
fcmovnbe
call
cmp
fldenv
push
je
sub
push
aaa
and
test
xor
movsw
idivl
movsb
cmp
push
cmp
and
pop
or
cmp
cs
mov
xor
shlb
push
mov
adc
movsb
or
into
jb
add
movsl
jle
pop
imul
inc
inc
shll
fsubs
subb
push
xchg
adc
ds
or
adc
cmpsl
lcall
aas
test
jg
fwait
rcll
sub
or
xor
outsb
jne
movsl
jl
mov
call
fcmovu
mov
repnz
push
and
and
aad
push
ds
fs
inc
fistps
jmp
mov
pop
jb
mov
mov
push
sbb
push
imul
xor
hlt
ret
shrb
lods
jne
mov
popa
add
aas
sti
aad
bound
fisubs
mov
int
cld
jge
test
call
outsl
push
xchg
movsb
sub
push
adc
iret
or
add
xrelease
push
and
and
cmpsl
orl
mov
xchg
icebp
xchg
xor
or
xchg
fildl
pop
negl
push
lret
sub
ja
pop
mov
rcrb
mov
xchg
sarb
dec
inc
sti
es
add
enter
scas
add
jno
enter
sbb
pop
sub
es
mov
mov
fiaddl
pop
sbb
shll
or
popa
jns
mov
dec
outsb
add
xor
jle
push
sahf
or
jecxz
push
and
fucom
in
mov
cmp
sbb
pushf
jbe
adc
pop
fcmovnb
test
xchg
push
arpl
jne
ret
movsl
push
cmp
mov
cltd
mov
imul
add
pop
mov
sub
lods
icebp
mov
xchg
hlt
mov
jp
out
ret
adc
pop
ss
jecxz
push
pushl
mov
dec
add
adcl
into
push
in
mov
inc
andl
adc
cmp
lcall
jo
pop
push
sbb
ficoml
mov
scas
pushf
notl
sub
adc
xor
fistpl
cmc
pushf
pop
fbld
adc
xor
push
sub
movsb
xchg
add
dec
dec
imul
mov
pop
cmp
lds
jp
repz
out
jne
lahf
dec
repz
push
xchg
inc
frstor
in
push
push
mov
hlt
sbb
pop
cmpb
ss
dec
adc
cmp
cltd
sub
in
and
insl
or
js
push
jg
test
cmp
adc
cwtl
mov
mov
popa
cwtl
loope
leave
test
xchg
clc
mov
subl
sbb
sbb
inc
jle
jecxz
imul
mov
divb
out
mov
inc
or
mov
ja
inc
jb
push
iret
mov
push
sahf
and
inc
inc
jecxz
and
imul
fs
clc
rol
jns
out
sub
daa
gs
scas
call
mov
scas
mov
int3
and
add
fcoms
inc
sbb
dec
push
leave
mov
jne
pop
pop
shl
mov
sub
out
shlb
push
mov
jecxz
lret
ljmp
ds
mov
and
stos
out
add
mov
rolb
sbb
loopne
mov
fmulp
addb
xchg
ss
cmp
gs
jb
sbb
fildll
mov
or
mov
pop
push
bound
add
test
mov
mov
das
pop
jb
push
inc
roll
jge
fldl
movsb
pop
mov
mov
mov
xchg
inc
pop
cmp
xchg
flds
cmp
loope
sahf
mov
pop
fdivl
xchg
adc
test
push
or
fdiv
push
icebp
cltd
or
enter
mov
mov
and
mov
testl
addr16
mov
das
test
hlt
mov
aam
sbb
mov
sbb
loopne
scas
scas
jl
mov
dec
xchg
lds
and
inc
js
adc
push
and
mov
jb
pushf
mov
std
insb
aas
xchg
pop
push
stos
or
mov
pop
cmc
imul
mov
mov
mov
inc
in
pop
sbb
push
inc
jg
pop
insl
js
xlat
fwait
mov
jo
push
addl
iret
dec
dec
mov
dec
cltd
ret
in
in
sub
xlat
cmpsl
or
dec
dec
adc
mov
icebp
cmp
lods
pop
out
testl
ss
insl
ds
out
sahf
xchg
lret
faddl
and
popf
and
pop
jmp
mov
idivl
enter
mov
dec
lret
andb
mov
cmp
jb
ror
cmp
jle
js
mov
fildl
out
and
inc
roll
jmp
inc
xor
and
out
test
inc
scas
pop
cli
sub
jbe
mov
jge
pop
pop
sahf
enter
loopne
daa
sub
out
js
adc
push
push
pop
loopne
and
sbb
lret
mov
pop
or
enter
out
xor
test
fmulp
out
cmpsb
subb
mov
jmp
and
lds
pop
dec
daa
xlat
testl
inc
faddp
cs
add
push
mov
shr
repz
dec
mov
xor
mov
or
adc
mov
or
xchg
int
clc
push
xchg
ljmp
insb
xchg
cmp
data16
and
lods
rcr
scas
add
dec
push
xchg
aad
jne
and
icebp
xor
int3
test
sub
insl
aaa
xlat
mov
es
mov
fdivrs
fmulp
fstl
mov
sar
lods
dec
cmp
rcrl
pop
rolb
pop
cmp
xor
pop
push
push
hlt
jg
mov
mov
movsl
dec
add
sti
add
dec
test
pop
cmp
mov
icebp
lods
sub
jl
cmc
call
fistl
pop
adc
dec
xor
mov
adc
pusha
pop
xor
xchg
or
cmp
jle
jmp
cmp
lahf
push
loop
mov
das
pop
ffree
pop
ljmp
push
test
bound
ss
mull
jge
push
dec
out
in
pop
mov
inc
imul
xor
add
cmpsl
xor
and
out
mov
aaa
xor
xor
test
ss
sti
daa
das
outsb
pop
mov
sti
clc
mov
adc
mov
rcrl
aam
mov
xchg
scas
jb
js
push
addb
jo
dec
sbb
mov
and
lods
mov
lahf
addb
aad
or
mov
je
enter
loope
pop
outsl
in
or
xlat
insb
out
dec
stos
jbe
adc
jmp
and
test
shlb
repnz
push
fscale
fs
nop
mov
mov
inc
sub
inc
mov
loope
pop
xchg
dec
fwait
hlt
imul
stc
iret
xor
addl
lret
cmp
arpl
sbb
fsubr
movsl
and
lret
mov
or
xchg
xor
pop
add
jbe
inc
push
cli
adc
xor
push
das
pop
mov
add
mov
nopl
inc
push
ret
bound
cmc
pusha
xor
mov
mov
ud2
or
insl
mov
jp
cwtl
sub
or
cmp
sbb
inc
and
sti
mov
xchg
sub
dec
leave
fsubl
out
les
push
push
jmp
push
push
bound
testl
add
inc
stos
jb
add
jl
and
lods
xchg
out
pop
sbb
sbb
test
cmp
xlat
xor
mov
lret
cwtl
xchg
in
adc
mov
or
icebp
xor
mov
outsl
aad
jno
movb
sub
les
xor
hlt
out
xchg
adc
xchg
cmp
mov
cmp
arpl
test
push
cmp
mov
out
mov
ljmp
int
mov
jge
jne
or
out
adcb
sbb
push
insb
out
scas
sbb
jp
sbb
mov
insl
dec
inc
xchg
and
insb
add
pop
fidivs
adc
and
jae
in
inc
dec
call
fisttps
pop
fidivl
jne
push
xchg
or
dec
push
scas
sti
cmp
cwtl
mov
dec
ljmp
loope
push
lods
mov
xchg
dec
scas
js
call
jge
sarb
mov
dec
add
or
loopne
popa
mov
jmp
fbstp
in
ret
and
cltd
inc
int
aad
das
push
mov
sub
lcall
lods
popa
popl
inc
pushf
clc
aam
adc
mov
or
in
jnp
stos
fucomip
xlat
lahf
das
in
cld
scas
xor
jmp
and
out
pop
cmpl
xchg
push
or
push
adc
clc
cltd
movsl
frstor
pop
leave
popa
adc
push
imul
xor
mov
mov
cmp
int
sub
loop
sar
cli
sahf
scas
mov
dec
cmp
xor
mov
sub
jo
mov
scas
fistl
xchg
lret
mov
xchg
push
cltd
rorl
lea
std
sub
jns
in
xor
pusha
sub
mov
jl
mov
sbb
and
and
and
mov
iret
push
cmpsb
mov
test
cmp
je
push
gs
inc
enter
and
pop
cmp
adc
imul
jae
insb
cmp
sbb
addr16
data16
sub
and
ds
xchg
add
ret
mov
and
fdivrs
roll
push
jae
xchg
in
test
cli
pop
fiadds
add
mov
pop
sbb
js
not
call
jbe
add
xchg
scas
jb
ss
aaa
mov
xor
in
std
test
dec
insb
xlat
push
repz
xor
or
fstl
loope
push
sub
test
add
sub
repnz
rolb
ja
push
test
out
and
ja
mov
mov
stos
test
fdivl
dec
ds
adc
sbb
jecxz
mov
bound
test
je
jb
pop
or
inc
xchg
idivb
and
mov
out
push
stc
je
out
jae
and
cmc
push
mov
xchg
xorb
jl
inc
sub
jle
fimuls
sbb
stos
pop
bound
mov
push
lret
jno
outsl
dec
push
sub
push
mov
mov
pop
daa
std
and
fmulp
in
cmp
lahf
clc
imul
mov
mov
rcrb
push
mov
lea
xchg
sbb
and
iret
daa
outsl
sbb
jne
sbb
cmp
xchg
xor
cmp
rorb
out
jmp
inc
dec
cli
ja
adc
insb
sbb
scas
sbb
mov
in
push
std
movsl
sub
push
scas
fxch
add
xor
jno
mov
pop
adc
xchg
fldt
mov
je
and
sub
fbld
xor
pop
mov
sub
jno
pop
leave
sbb
mov
jmp
jecxz
sbb
mov
insb
dec
daa
mov
push
hlt
dec
mov
pop
adc
add
aam
test
aaa
mov
dec
test
pop
sahf
add
jl
arpl
icebp
int
mov
aaa
or
and
outsl
test
movsb
cmp
jb
jg
push
movsb
add
dec
out
je
inc
ja
outsb
or
ret
pop
out
mov
xchg
push
or
psrlw
cli
cli
inc
jp
lret
jb
sbb
or
repz
inc
cltd
out
or
push
mov
cmp
hlt
inc
mov
fisttps
leave
jmp
loope
xchg
out
mov
and
sbb
mov
jg
mov
mov
inc
sbb
outsl
jecxz
sub
mov
lds
jecxz
jge
test
bound
or
shrl
loop
dec
cmpsb
mov
or
out
loop
xchg
sbb
jmp
jo
push
aad
and
fidivl
inc
mov
jbe
int3
cs
cwtl
mov
and
les
add
jae
push
hlt
bound
stc
jl
fcmovnbe
ror
add
xor
mov
pop
xor
mov
xchg
dec
out
push
sub
lods
sbb
hlt
fs
adc
dec
rcrb
sti
rcl
aam
lods
adc
out
xchg
loopne
fiadds
or
pushf
or
outsb
xlat
xor
fcom
mov
pop
loope
mov
and
pop
jnp
imul
mov
cmpxchg
xor
cwtl
inc
mov
mov
mov
pop
inc
push
add
test
fiaddl
dec
subb
jbe
mov
mov
or
sbb
mov
mov
dec
inc
mov
add
cmpsb
fdiv
dec
mov
ja
arpl
popf
outsl
mov
pushl
mov
mov
shrl
cmp
jp
push
cmpsl
and
mov
mov
sbb
les
mov
mov
hlt
in
cmp
mov
lahf
sti
jg
fisubl
gs
dec
mov
in
and
lock
test
les
fcmovnu
cmp
pop
icebp
minps
and
testb
dec
dec
lock
and
sbb
mov
lahf
mov
mov
sub
sub
add
and
dec
or
stos
js
cli
xlat
jne
rclb
adc
cmp
or
jle
mov
add
loop
mov
arpl
daa
push
aam
adc
add
aas
sbb
mov
xchg
pop
adc
lret
fcomi
or
insl
push
ds
test
push
sbb
mov
les
jge
out
add
in
inc
xorb
jns
nop
rcrb
bsf
stos
daa
push
mov
push
inc
dec
sbb
out
fwait
pop
xor
pop
icebp
repz
lret
lods
jbe
or
sti
pop
xor
push
arpl
sub
movsl
dec
pop
mov
pop
testb
mov
lock
nop
add
les
or
cmp
jle
mov
pop
add
filds
in
aas
int
loope
push
test
add
adc
les
adc
test
adc
es
rcrb
adc
mov
outsb
mov
popa
call
xor
xor
stos
sub
mov
bnd
xor
fwait
jns
and
add
test
sbb
pop
lret
repz
jbe
jne
and
pushf
mov
cmpsb
leave
push
fisttps
jb
icebp
xchg
popa
pop
jl
stos
addb
jae
mov
mov
mov
add
mov
pop
gs
pop
aaa
sub
jmp
mov
sub
cmp
add
inc
pop
nop
sahf
sarb
das
das
negb
jbe
add
insb
fwait
sbbl
pop
mov
icebp
int
scas
hlt
jo
mov
cmpsb
int3
icebp
enter
es
xor
dec
fdivrl
xchg
pop
stos
sbb
inc
mov
pop
cmc
ss
dec
out
pop
das
cwtl
flds
loope
cmp
mov
pop
fldcw
stos
in
ja
xor
dec
movsbl
clc
mov
test
stos
clc
mov
cmp
xchg
fldcw
clc
xchg
sub
lds
lret
test
cmp
lcall
outsl
xlat
and
jae
das
cmp
mov
mov
je
jo
lds
outsb
divb
out
jb
jae
mull
xchg
in
mov
fadds
addr16
xchg
psadbw
xor
push
xchg
popf
bound
xchg
mov
call
adc
ja
xor
dec
imul
mov
mov
dec
xor
cltd
inc
dec
rclb
xchg
xchg
mov
and
jo
repnz
insl
test
mov
sub
ja
dec
pusha
mov
ljmp
in
xor
das
mov
les
push
movsl
hlt
xchg
inc
cmc
das
fdivrs
add
mov
rolb
xchg
jo
mov
xchg
sbbl
clc
cmp
nop
ja
push
jg
mov
in
xor
cmpsl
xchg
push
xchg
push
cmpsb
adc
addb
jnp
adc
or
adc
insb
jecxz
cmpsl
imul
mov
mov
orb
ret
jne
add
fwait
pop
mov
sub
scas
mov
leave
inc
sbb
lods
mov
loop
pop
lret
adc
cli
lds
fs
mov
pop
pop
inc
notb
popf
scas
mov
iret
je
adc
lock
cmp
add
addr16
cmp
xor
stos
cmc
xchg
xchg
cmpsb
out
and
not
and
ret
sub
mov
cmp
outsb
cmpsb
push
dec
scas
aaa
testl
inc
dec
add
jb
sub
les
mov
shld
cmpsb
push
pushf
cld
mov
jno
add
adc
jnp
movsl
movsb
cmc
mov
sub
jle
dec
sbb
mov
ret
xchg
adc
dec
cwtl
sub
jecxz
out
movsb
ficoms
inc
xor
adc
inc
out
addr16
cs
xchg
pop
mov
add
xorb
xchg
pusha
in
dec
popf
cs
xor
ds
stos
add
inc
aad
pop
fnsave
dec
push
fmuls
cwtl
add
adc
mov
repnz
out
shr
inc
sub
xor
int
bound
test
loop
fs
xchg
pop
xor
cmpsl
sub
lcall
test
js
dec
dec
out
faddl
shrl
dec
lods
lods
adc
paddq
mov
arpl
cs
sbb
pop
addb
aas
xchg
xor
fdivl
aam
fwait
or
dec
jb
or
xlat
mov
pop
jno
addr16
fcompl
xchg
pop
cmp
pop
xchg
mov
and
outsl
movsb
test
cmp
ja
out
sahf
stos
mov
rcrb
dec
mov
mov
outsl
pop
jmp
sbb
adc
push
xlat
test
mov
notw
andb
addr16
sub
movnti
push
mov
mov
popf
and
stos
xor
cltd
push
mov
cmp
mov
sbb
mov
sbb
pop
inc
pop
cld
shrb
fcoml
pop
jge
pop
imul
and
add
lahf
fstps
xor
ja
cmp
inc
daa
cmp
pusha
cltd
addr16
mov
pop
push
out
call
or
push
repnz
cmpsb
lret
inc
ss
fsub
pop
adc
lcall
sub
cmp
je
mov
push
or
sub
cltd
das
or
dec
testb
shrl
movsl
or
pinsrw
pop
add
push
decl
scas
mov
mov
iret
cltd
dec
lret
xchg
sti
xchg
and
xchg
xchg
add
xchg
lret
push
pusha
sahf
lret
leave
push
repnz
inc
pusha
dec
js
lret
in
pop
insb
nop
jecxz
ret
pusha
repnz
pcmpeqb
inc
jo
movb
incb
adc
les
xchg
les
les
jp
jg
into
nop
mov
arpl
jbe
jbe
je
shll
in
add
mov
aas
mov
lods
xchg
dec
or
repz
add
cli
test
icebp
je
adc
pop
mov
inc
add
mov
pop
enter
jp
sub
add
sbb
fcmovnb
jns
mov
push
or
sub
push
xchg
sub
mov
dec
lods
sub
jp
sub
add
ljmp
mov
stos
in
push
stos
stos
mov
scas
inc
and
inc
xchg
adc
in
mov
ds
xor
jne
or
sbb
lds
lret
sub
dec
shll
adc
cmp
das
mov
scas
xor
faddl
movsl
out
call
inc
or
lea
cmp
jmp
int
lock
mov
lds
lods
mov
mov
setl
pop
aaa
out
push
enter
jmp
mov
sahf
je
loope
pop
pop
cmc
sub
cmp
je
pop
xchg
sbb
sbb
dec
das
lds
and
out
nop
or
das
push
and
mov
cmc
addl
or
pop
adc
sbb
icebp
pop
xchg
jae
cmp
lea
jnp
mov
and
xlat
mov
rcll
loop
pop
mov
jle
jl
andb
fbld
es
lcall
in
fisubs
pop
jno
adc
push
jl
or
mov
xchg
jnp
inc
adc
mov
imul
scas
pop
pop
mov
rclb
sbb
daa
xlat
xor
mov
mov
add
dec
mov
push
out
mov
sbb
xor
adc
scas
push
xor
xchg
mov
daa
cmp
outsb
cli
shrb
or
cld
aad
push
aad
inc
pop
or
xchg
subl
outsl
push
ljmp
pop
mov
mov
int
push
inc
xchg
and
inc
pusha
les
mov
mov
cli
cmp
in
cmp
inc
leave
imul
and
lret
or
imul
and
scas
cmp
stos
jl
fistpll
xor
jp
sub
push
xchg
test
lock
pop
fdivrl
inc
fldpi
call
push
ret
push
shrb
cli
mov
and
test
adc
xor
dec
aam
sbb
out
jp
enter
subl
sub
xchg
mov
adc
cmpsl
mov
cltd
movsl
fdivrp
nop
psubb
shll
js
jg
lds
in
push
push
add
jp
fisubrl
in
int3
sub
jl
mov
mov
cwtl
rcll
repz
push
push
and
scas
mov
int
cmp
cmpsl
jp
inc
das
dec
cmp
adcb
dec
rol
mov
dec
xchg
xchg
hlt
xchg
cmpb
mov
sub
leave
insb
xor
scas
popf
or
adc
sbb
popf
jno
mov
je
mov
jnp
subb
push
bound
or
test
add
daa
test
js
jae
insl
push
inc
fidivl
lods
jecxz
dec
imul
test
lds
test
mov
cld
sbb
adc
fldt
aam
js
in
popa
in
fsubrs
ja
aad
mov
enter
mov
push
lret
push
daa
popf
rorl
lret
fisttps
pop
insb
std
leave
faddl
bnd
iret
loop
movsb
ja
cmc
mov
jns
mov
pop
rorl
xor
dec
pop
xor
sub
xlat
xor
insl
push
repnz
lods
mov
dec
sbb
jge
push
mov
sbb
inc
mov
add
pop
mov
in
xor
mov
mov
mov
aaa
ret
mov
push
andl
push
lret
xor
arpl
jns
mov
mov
icebp
lcall
repz
test
sbb
sbb
xor
xchg
mov
inc
rorb
jae
jae
out
inc
nop
lock
test
pop
cmp
dec
xchg
dec
cmpsb
pusha
add
cmpsb
leave
add
test
pusha
lcall
jno
test
daa
shr
jnp
jns,pn
inc
cmp
mov
clc
jle
or
cmp
ss
fcom
mov
push
push
xor
cmp
in
and
add
pop
add
test
xchg
cwtl
test
std
or
inc
icebp
jg
jb
jno
cmpsb
mov
mov
push
lock
xchg
sub
push
push
stc
shlb
xor
bound
xchg
cmpsb
sti
repnz
es
daa
pop
fisubrl
int3
jl
ljmp
fmuls
or
push
mov
nop
sti
cmp
rorb
icebp
xor
bound
mov
int3
fisubrs
push
sbb
iret
push
pop
mov
jo
fistpl
data16
repz
cmc
xchg
out
test
cmpb
sub
lods
or
sti
push
mov
lock
lods
jbe
jle
xchg
pop
sbb
aad
scas
loope
cmp
and
xorb
shrl
adc
jo
cmp
adc
sub
xor
inc
aad
shrb
mov
lock
movsl
lret
ret
dec
mov
pop
cmp
sti
push
clc
adc
jl
or
orb
dec
ja
testb
and
test
ja
imul
dec
ret
xchg
push
aas
and
cmp
ficoms
pop
dec
out
shrl
lods
xorb
es
ljmp
push
loopne
hlt
or
mov
xor
cs
int
leave
cs
jp
jo
movsl
inc
lea
mov
push
push
stos
sbb
xor
pop
xor
add
mov
jle
ret
push
data16
out
mov
std
or
mov
push
js
out
xor
pop
out
call
xchg
les
fadd
cmp
mov
adc
sub
pop
rol
mov
mov
ret
and
mov
hlt
ret
push
pusha
cmp
push
cmp
add
rolb
xchg
cmc
xchg
ljmp
jp
sbb
popa
mov
xchg
imul
inc
sti
cmp
dec
inc
das
push
cs
add
ja
mov
or
cmp
movsl
jb
fists
or
aaa
ret
mov
gs
mov
imul
das
call
popa
and
mov
push
addr16
fwait
mov
js
stos
out
inc
addl
pop
mov
int3
movsb
push
mov
xchg
cmpb
or
enter
push
cmpl
adc
and
divb
mov
xchg
loope
bound
push
fldcw
xor
jge
inc
xor
inc
inc
or
and
mov
and
pop
and
xchg
aas
mov
sbb
cmp
pop
mov
shll
xchg
enter
fidivs
pop
and
ljmp
lds
out
nop
mov
cltd
dec
inc
test
cmp
enter
popa
je
jp
push
sbb
xchg
iret
aas
add
leave
out
loop
sub
jecxz
jno
sbb
add
adc
mov
jo
cmp
lods
in
loop
mov
and
dec
cltd
int3
loopne
lods
mov
cld
fnstcw
jne
push
or
ljmp
push
push
in
dec
outsl
fidivs
scas
in
hlt
xlat
aaa
jg
fwait
mov
fnsetpm(287
push
and
dec
call
popf
sub
push
nop
mov
aad
inc
xchg
jl
mov
shrl
adc
pop
jle
dec
add
pop
test
and
hlt
pop
sarl
or
pop
sub
sbb
adc
gs
push
sub
mov
push
xor
lods
mov
xor
stos
inc
push
pusha
mov
lret
dec
mov
jp
mov
pop
lret
lret
out
xchg
xor
xchg
mov
push
mov
cwtl
adc
cld
std
push
pusha
inc
out
popa
imul
fcomps
stc
negl
sbb
lcall
leave
lods
xor
and
shlb
lcall
or
pushl
cmpsl
sub
in
shlb
inc
mov
pop
imull
xor
cmp
adc
or
sub
inc
mov
pop
or
mov
xchg
dec
jbe
cwtl
pop
adc
dec
fwait
jmp
das
rolb
jbe
dec
sub
out
rcrb
repz
sti
mov
sbb
out
xsha1
cmpsb
dec
or
jg
xchg
rcrl
xor
lds
mov
shll
inc
inc
push
test
and
testb
and
jb
jae
mov
stc
xchg
repz
and
loop
into
mov
fs
push
sub
adc
mov
jne
out
enter
ret
shrb
xchg
dec
mov
push
jbe
aas
xorl
cltd
dec
and
or
outsl
push
push
mov
popf
and
int
pop
sbb
jns
inc
jp
mov
mov
sbb
andb
xchg
repnz
cmp
sub
push
mov
fwait
imul
shlb
xchg
lea
repnz
xchg
jecxz
or
stc
or
xchg
in
mov
insb
sbb
out
loope
mov
rolb
ret
fldt
test
sbb
cltd
icebp
decb
pop
insl
pop
or
mov
pop
and
and
xchg
dec
push
aas
add
mov
cmpsl
push
cmp
cmpsb
aam
cmc
stos
scas
inc
dec
cwtl
icebp
iret
push
gs
cmp
mov
subl
stos
fld
pop
aas
lea
fidivs
stos
nop
movsl
fistpl
lea
loopne
add
jmp
jb
add
fnsave
idivl
or
lods
and
lret
fs
nop
das
lcall
test
mov
test
aam
sub
ljmp
lods
pusha
jns
outsb
lds
xchg
pop
xchg
push
mov
lahf
and
iret
scas
pop
lods
lock
or
out
jmp
je
pop
push
xor
xor
xchg
cmc
dec
mov
adc
lds
je
lret
mov
inc
lret
leave
pop
bound
fisubrl
add
xorl
pop
pushf
xchg
lcall
aad
mov
pop
fbstp
sbb
adc
mov
out
outsb
pop
add
insb
inc
mov
in
rcll
sarb
pop
les
jmp
js
sub
push
cltd
mov
lahf
pop
addb
fldenv
bound
lahf
leave
xchg
cmpsb
push
mov
dec
lock
icebp
mov
lcall
adc
adc
iret
push
test
aam
push
cmpsb
dec
negb
cli
and
rclb
insl
pop
or
bound
pop
imul
clc
jp
mov
sahf
mov
hlt
call
push
sub
repz
jle
sub
addr16
add
mov
movsl
inc
xor
jne
out
push
lods
test
add
sbb
popa
pop
stos
jne
mov
add
inc
fcompl
ret
out
xor
inc
mov
push
aaa
daa
ror
add
shl
cmp
cld
aam
imul
push
mov
mov
add
add
lcall
fcomps
xchg
out
js
lret
sbb
cmp
xchg
fildll
aad
add
das
jle
fcoms
popf
xchg
in
stos
cs
std
lea
xor
xor
mov
push
cwtl
call
and
lret
popf
adc
adc
adc
dec
mov
dec
je
jmp
pushf
lea
mov
stos
pop
inc
mov
jl
arpl
lret
movsb
mov
scas
pop
xor
push
cmpsb
int3
shrb
pop
mov
out
xchg
ret
fs
daa
mov
cmp
or
xor
mov
push
faddl
add
pop
call
jae
pop
out
pop
cmp
notb
scas
dec
test
dec
pop
repnz
pushf
call
insb
cmp
test
push
mov
aas
xchg
adcb
call
lcall
jns
mov
sahf
and
in
fists
dec
or
xor
movsb
sub
push
fwait
stos
in
repnz
testl
mov
cmc
stc
and
sbb
xchg
sbb
xorb
xchg
insl
mov
shlb
out
push
imul
adc
xor
sbb
xor
pop
mov
dec
push
shl
dec
mov
lahf
xchg
test
fdivs
mov
sahf
int
sub
popa
popa
mov
push
fmuls
adc
dec
dec
dec
mov
or
adc
roll
test
push
pusha
jmp
outsl
jb
or
dec
dec
push
push
fsubrl
enter
sti
cltd
insb
hlt
pop
inc
adc
add
pop
mov
movsl
fisttpl
pop
and
xchg
inc
jnp
xchg
or
xchg
jg
or
inc
aam
jge
jle
and
in
inc
outsb
out
iret
cli
lods
stc
cli
push
test
and
add
mov
cli
movl
cmp
jae
mov
xchg
inc
push
cmp
pop
gs
aad
sahf
mov
fsts
pcmpgtb
data16
and
mov
int
add
imul
lret
xchg
jnp
inc
mov
fiadds
dec
push
test
outsb
push
sub
push
mov
outsl
loope
lock
cmp
divps
sbb
mov
jp
ljmp
push
xchg
je
rcll
repz
out
mov
fs
inc
pop
jae
cmp
in
add
cmpsb
pop
mov
sbb
push
mov
out
fidivs
or
add
jmp
and
cld
mov
pushf
or
sbb
pop
push
inc
sub
push
shl
jecxz
cli
or
mov
xchg
xchg
or
popf
push
ja
es
cli
push
adc
xor
fwait
clc
js
popa
or
push
sti
out
movl
cld
bound
clc
iret
clc
lret
stos
pop
xchg
movsb
iret
imul
stos
dec
xchg
and
inc
cmp
push
inc
or
pop
ljmp
gs
pop
cs
cmpl
stos
iret
push
mov
adc
std
sub
pusha
mov
push
imul
jae
jl
jnp
cmp
js
cmpsb
test
clc
mov
ja
stc
lock
xchg
in
das
add
sbb
lock
ss
jmp
loopne
hlt
pop
and
mov
aas
jns
push
xchg
pusha
sbb
fldt
and
push
mov
push
aas
imul
xor
inc
bound
sub
mov
jecxz
xlat
mov
jno
xchg
or
mov
sub
cld
sbb
push
pop
mov
ficoms
addr16
in
add
mov
ret
leave
and
jmp
cltd
sbb
jbe
and
push
lock
add
lds
adc
xchg
pop
cmpl
inc
mov
fucomi
xchg
call
gs
out
jl
cmp
dec
lret
mov
jmp
jl
fstps
ret
icebp
in
mov
mov
hlt
cmp
lods
arpl
in
ja
sbb
ret
mov
xchg
dec
mov
or
in
adc
gs
push
call
negl
xor
mov
pushf
std
jmp
mov
cltd
lods
mov
inc
shlb
mov
cmp
ds
mov
mov
and
lcall
repnz
mov
and
mov
insb
icebp
mov
stc
mov
imul
sub
push
imul
out
das
pop
aaa
xchg
push
inc
cli
movsl
andb
xchg
xchg
jecxz
sbb
nop
pop
ret
insb
cltd
int
int3
stos
sbb
pop
ljmp
jp
mov
mov
loop
je
int
lods
jno
rcll
inc
out
sbb
mov
insl
xchg
aas
lock
ss
xchg
mov
cs
sub
cmp
out
nop
adc
push
xor
sub
cmp
pop
push
pop
test
test
sub
test
mov
mov
mov
aad
insb
add
bnd
js
pop
enter
inc
aas
or
shr
xchg
pusha
stos
dec
adc
shr
mov
push
mov
pop
repnz
aad
gs
lds
cs
cmc
out
out
adc
sbb
jmp
push
mov
mov
push
push
scas
daa
nop
sub
aaa
in
and
fs
ret
jle
scas
pop
lods
dec
push
add
xchg
adc
in
repnz
in
mov
pusha
sub
dec
push
jecxz
js
ja
push
mov
adc
shl
mov
jno
outsb
hlt
dec
pop
cmp
and
dec
push
mov
cmp
dec
iret
bound
inc
pusha
mov
lea
nop
insb
mov
push
mov
pop
sub
xor
mov
sub
jno
pop
jb
xchg
ljmp
sub
adc
jo
je
adc
xchg
loope
add
jg
data16
fsts
hlt
push
mov
outsl
into
mov
data16
insb
inc
and
gs
roll
sub
fcmovnbe
jge
scas
mov
xor
in
ljmp
dec
dec
mov
out
mov
js
pop
and
das
and
add
mov
push
dec
test
xor
and
sahf
stc
xchg
pop
movsl
mov
push
and
mov
sbb
pusha
and
push
int
fistpll
lret
clc
lret
arpl
add
fstpt
adc
jns
cs
jae
push
ud0
jns
inc
and
and
dec
imul
and
sub
iret
add
lds
test
pop
or
mov
fildl
bt
clc
dec
movsb
mov
pop
mov
mov
cmpsl
addb
xor
outsb
daa
inc
mov
call
dec
mov
mov
xchg
sub
jge
cwtl
cmc
adc
xor
cltd
aas
ret
dec
rolb
jecxz
mov
mov
mov
loop
test
inc
push
mov
scas
int3
stos
mov
fwait
lret
lock
popf
jae
ljmp
and
fcmovbe
insl
sub
test
scas
gs
call
pop
mov
jae
adc
sbb
nop
xchg
pop
adc
or
mov
hlt
mov
push
aaa
in
push
pop
rcrl
negl
adc
add
mov
dec
push
imul
mov
sbb
cmp
pop
xor
ss
stos
in
jns
lds
sub
mov
rclb
push
sbb
aad
mov
pop
adc
lret
fwait
pop
xor
test
adc
adc
adc
sahf
pop
test
dec
ficoml
fisttps
push
mov
cwtl
inc
xor
lcall
ror
mov
sahf
mov
je
les
mov
add
iret
popa
mov
pop
inc
mov
sahf
pop
jge
nop
lods
inc
aam
orl
adc
out
repz
xor
fwait
insl
cmp
insl
cs
mov
lret
mov
fcomp
popa
sbb
aas
lahf
jl
rclb
sar
sbb
xchg
jmp
imul
popf
ja
repz
inc
xchg
push
sub
ret
fwait
adc
int
mov
mov
jne
mov
int3
cmpsl
xchg
lock
insl
fnstcw
mov
lods
sbb
js
adc
sbb
les
movsb
push
xor
sbb
mov
stos
dec
call
aaa
mov
sub
push
push
fistpll
rolb
shlb
pop
mov
mov
and
xchg
lret
inc
out
push
mov
or
or
addr16
sub
dec
xor
sarl
push
cmp
pop
in
mov
cltd
xchg
cmp
jo
insb
cli
es
test
fidivs
or
mov
icebp
sbb
push
push
sbb
xchg
sbb
out
sub
dec
xchg
cld
mov
bound
add
xor
push
lret
pop
xor
mov
xor
stos
xchg
mov
or
cli
pop
mov
ja
in
cmpsb
pop
xchg
sbb
push
mov
push
mov
mov
imul
adc
xchg
imul
jp
mov
xchg
pop
mov
fsubrl
xchg
cmc
das
test
push
mov
xor
arpl
cli
rep
fs
push
mov
dec
sbb
mov
jnp
aam
cmp
or
out
xor
ss
nop
in
mov
pop
push
fiadds
pop
pop
inc
int
sub
aaa
push
sub
mov
scas
mov
decb
fimull
jg
fiadds
icebp
dec
add
aaa
mov
adc
add
addr16
sbb
lock
jmp
pop
daa
pop
adc
mov
das
jecxz
jbe
inc
push
xchg
call
jge
jl
jns
dec
notl
stc
push
loopne
push
out
cmp
inc
outsl
mov
sarl
in
inc
or
dec
lcall
lds
sahf
xor
inc
mov
xchg
jae
jl
icebp
mov
lods
mov
push
pop
lahf
fcoms
xor
cmc
call
cmpsb
shrl
xor
push
pop
loope
fdivrs
and
mov
push
leave
and
cmp
mov
mov
idivb
xchg
loope
rolb
push
bound
dec
mov
push
icebp
dec
dec
push
movsb
outsb
inc
stc
loope
sub
mov
clc
xchg
insb
in
adc
push
xchg
ror
loop
adc
sbb
jmp
mov
dec
or
repnz
in
xchg
outsb
orl
dec
dec
mov
aaa
or
fwait
mov
out
add
sub
inc
or
aam
or
sub
hlt
mov
pop
and
push
dec
mov
mov
cmp
mov
clc
adc
rorl
or
ds
sbb
pop
divl
jno
enter
and
and
sub
mov
mov
or
mov
mov
push
mov
dec
add
out
mov
lahf
stc
sbb
xchg
cs
xchg
dec
lahf
xchg
add
cmp
outsb
lret
arpl
inc
fdivl
mov
mov
mov
ljmp
pop
mov
loopne
inc
out
lret
out
test
mov
jecxz
lds
pop
sbb
xor
lahf
mov
sub
lea
insb
add
inc
rorb
adc
jnp
mov
and
fmuls
dec
lret
cmp
mov
insl
arpl
dec
push
mov
clc
xor
shlb
dec
xlat
mov
test
test
hlt
jb
push
cltd
test
stos
movsl
scas
lods
add
out
dec
and
pushf
cltd
adc
xchg
or
inc
mov
lret
leave
mov
mov
xlat
xchg
push
mov
xchg
rolb
mov
mov
enter
test
incb
push
add
loopne
sub
sbb
divb
out
xor
mov
arpl
add
imul
test
sbb
test
int3
add
stos
inc
cmp
in
icebp
shr
out
cmp
cmp
push
sbb
pushf
arpl
filds
incl
mov
push
dec
sahf
inc
jae
xchg
fdivl
ds
xchg
mov
aad
mov
sub
cmp
addr16
outsb
xlat
jbe
daa
loope
roll
fildl
cs
ljmp
xchg
out
add
out
ja
inc
in
aas
xlat
xchg
sbb
int
or
cmpsl
xchg
inc
jl
repz
js
cwtl
sarl
push
pop
adc
mov
loopne
in
mov
add
fists
jle
pop
jl
push
pop
jl
xchg
inc
test
dec
ret
outsb
psrld
mov
adc
cmpl
loope
push
add
orb
or
inc
mov
in
mov
dec
pop
inc
in
test
lahf
pop
ss
lret
ret
xchg
in
pop
xor
sahf
subl
movsl
lock
xchg
repz
addb
nop
sub
or
and
jmp
lret
aaa
and
push
outsb
cltd
rorl
cmp
push
es
cmpb
out
stos
fs
inc
test
xor
mov
insb
push
fsubp
shrb
sbb
sahf
not
pusha
mov
aas
ss
cmpsl
mov
jge
movsb
inc
add
cmp
lret
ljmp
add
push
lock
mov
js
insl
xor
and
mov
cs
cmp
jmp
push
or
mov
fstpl
std
ljmp
roll
add
xchg
int
mov
inc
cmp
and
push
inc
sub
push
bound
loopne
jbe
lds
insb
jecxz
repnz
cmp
data16
cmp
push
notl
xchg
mov
outsb
jg
out
adc
ret
mov
push
pop
aad
push
push
jecxz
xchg
lds
pushf
addr16
adc
adc
pop
mov
cmpsl
pop
jo
ljmp
pop
repz
lret
call
jae
jle
movsb
in
aad
lds
dec
sti
gs
loopne
daa
push
inc
call
insb
sub
dec
jo
jo
push
mov
xchg
shll
jb
adc
data16
scas
mov
ss
bound
ss
jecxz
push
std
push
lea
je
fisttps
movsb
jl
xor
aaa
xor
push
add
push
push
iret
mov
or
cmpsb
repnz
mov
adc
mov
cmp
or
mov
jmp
or
cltd
fcoms
xor
pop
xchg
jmp
cmpsb
xor
pushl
xor
loope
jb
cmpsb
xor
inc
repnz
loope
pushf
mov
dec
mov
scas
push
mov
sbb
sbb
mov
negb
aaa
inc
shll
jo
ret
adc
out
sub
nop
adc
inc
mov
rcll
jmp
cwtl
jle
pop
mov
loop
decb
stos
mov
sub
repnz
xchg
jbe
subl
cmp
fcompl
in
mov
and
cmp
xlat
test
jno
jo
out
daa
mov
adc
xchg
jecxz
lret
imul
in
stos
fstps
stc
dec
cmp
add
into
dec
outsb
jl
or
cld
jge
jmp
or
insl
adc
or
jecxz
lretw
inc
or
fiaddl
jne
jae
jge
insb
out
xchg
sub
push
xor
jns
es
xor
or
cli
push
ljmp
and
mov
xor
cmp
mov
sub
fcompp
push
jns,pn
pop
incl
pop
lret
clc
test
scas
cmp
loop
mov
hlt
imull
outsb
xchg
inc
jl
in
loopne
ds
or
shlb
dec
cmovs
pop
mov
mov
mov
cmp
and
pop
or
fstl
fnstsw
outsb
pop
cmp
bound
mov
incb
push
in
adc
pusha
les
mov
hlt
ljmp
sbb
mov
mov
xor
addr16
add
lock
popf
test
notl
mov
dec
jb
push
ds
fs
clc
mov
adc
jg
sub
pusha
adc
sub
xor
cltd
mov
les
in
jl
push
in
add
jno
outsb
outsb
adcb
out
loopne
imul
or
cli
outsb
add
cmp
imul
iret
mov
vmwrite
jp
cltd
and
aas
fisttpll
pop
iret
and
in
adc
mov
xor
jecxz
adc
mov
jmp
into
cmp
push
mov
fildl
or
inc
dec
imul
add
mov
test
stc
movsb
push
and
stos
cmpl
sbb
callw
xchg
dec
stos
dec
mov
inc
shrb
shl
lret
sub
jl
push
dec
mov
inc
push
push
pop
mov
adc
fiadds
pushf
jb
rcl
loopne
leave
jne
or
enter
pop
inc
cmc
incb
or
rolb
dec
mov
push
mov
cmp
test
aaa
adc
ds
imul
insl
mov
add
inc
mov
jo
dec
sahf
ror
loop
mov
test
mov
test
sub
in
fildl
mov
insb
int
cmpsb
mov
xor
xor
jmp
daa
loop
dec
in
lret
les
sub
add
xchg
xchg
pop
outsb
in
adc
jp
paddq
inc
in
push
mov
dec
mov
push
inc
ret
sub
cmpsl
popf
inc
cmpsb
shr
fldl
add
xchg
mov
pop
in
nop
cmp
loop
jp
sbb
xchg
cmp
cltd
jmp
add
jecxz
sub
mov
jmp
sub
cmp
xchg
push
mov
sbb
xor
fmulp
pop
mov
out
loope
scas
lods
mov
rorb
adc
jmp
sbb
loope
and
daa
rclb
roll
out
sbb
test
lock
inc
cld
jne
sahf
or
push
xchg
xlat
cmp
ja
lods
outsb
into
xchg
int
push
pop
mov
sarb
out
xor
mov
out
push
cwtl
xchg
in
fs
cmp
adc
clc
inc
pop
cmp
mov
mov
pop
imul
or
hlt
sub
cmp
mov
xor
test
adc
fldcw
stos
push
push
in
jle
loope
fbstp
or
xorb
ljmp
push
and
cmc
fsubs
and
pushf
adc
int3
dec
pop
orb
push
pop
jno
xchg
in
pusha
ret
cmp
stos
xor
add
loop
sahf
add
adc
mov
inc
jbe
inc
jb
pop
xchg
cltd
out
dec
cmp
sbb
push
mov
test
inc
mov
sub
push
rcl
out
dec
pusha
inc
std
adc
imul
stos
leave
and
sti
out
pop
pop
adc
sbb
inc
and
ss
push
or
test
mov
enter
push
repz
inc
sahf
sbb
rcrl
sbb
cmp
test
and
in
cmp
imul
push
pop
shlb
cs
cltd
add
cmpsl
rolb
cld
adc
mov
hlt
scas
xor
mov
sbb
repz
and
xchg
cmp
dec
dec
sub
xchg
jno
insb
jmp
sbb
sub
jmp
jle
xorl
cmp
pop
sbb
or
inc
cmp
xor
xor
lea
push
jo
mov
xor
add
enter
xchg
cmp
pop
jp
push
push
call
xor
shlb
in
xor
cmc
mov
push
pusha
xchg
jae
sbb
adc
mov
cmp
rorl
mov
scas
shr
pusha
imul
pop
dec
jb
xchg
arpl
or
hlt
mov
jle
and
in
push
mov
leave
rcl
jmp
mov
or
lcall
inc
inc
rcr
insl
push
mov
repnz
xchg
mov
and
sbb
lods
add
sub
insb
mov
add
cmpsb
inc
shl
stos
push
jae
jbe
pushf
push
addb
add
pop
lock
fldl
ja
add
outsb
inc
enter
add
push
lock
es
adc
push
arpl
push
and
scas
fisttpl
fwait
cld
leave
cmp
dec
insl
push
mov
fnstcw
xchg
movsl
sbb
xchg
xchg
jp
cmc
iret
leave
xchg
pop
lret
inc
adc
mov
mov
aas
data16
push
lea
or
mov
call
js
jno
dec
and
es
adc
mov
pop
sbb
xchg
into
jp
ljmp
inc
inc
popf
cmpsl
and
lea
rcrb
and
cwtl
rorl
jmp
in
xchg
repnz
sub
push
lods
mov
dec
lock
mov
into
pop
fisttpl
mov
dec
call
loope
hlt
mov
out
loopne
push
push
adc
mov
out
jnp
data16
mov
fisubrs
int3
out
popf
sub
insb
push
shr
sbb
xor
xor
add
adc
pop
push
ror
jb
adc
aad
js
int
or
jns
mov
imul
rcr
pop
sbb
daa
iret
call
add
sarl
mov
sahf
imul
sbb
push
js
xor
jno
scas
lcall
movsl
mov
cmc
mov
mov
in
push
repnz
push
test
mov
lret
in
sbb
cmpsb
inc
ret
fwait
testl
scas
sarb
mov
sub
cwtl
ds
jo
jg
adc
jae
aaa
dec
or
cmp
xor
add
sbb
xchg
sbb
xchg
push
adc
fs
inc
bound
push
mov
int3
mov
insb
pop
jmp
iret
and
adc
cmp
aas
jmp
cmp
inc
sarl
sub
and
imul
cmpsl
stc
lock
push
inc
jmp
filds
outsb
in
inc
movsb
scas
pextrw
or
shlb
sub
aam
insl
mov
shlb
cmpsl
mov
push
sti
stos
div
out
dec
xor
xchg
lock
adc
hlt
lret
int3
pop
ja
mov
xchg
xor
addr16
mov
and
inc
and
mov
xor
in
jle
in
dec
gs
ss
repz
dec
ret
mov
gs
cmpsl
scas
mov
push
out
xor
cwtl
cmp
insl
xchg
cs
rorl
popf
cwtl
cld
sub
js
fwait
mov
xchg
je
mov
arpl
cmc
jo
sbb
jo
int3
iret
inc
das
sbb
hlt
mov
mov
aad
lcall
dec
adc
mov
outsb
daa
sbb
xor
ds
cmp
je
push
sub
mov
sahf
and
lcall
icebp
inc
lods
cltd
in
mov
inc
hlt
dec
mov
pop
loopne
imul
lods
add
mov
pop
push
dec
add
xlat
imul
pop
mov
ljmp
fwait
das
inc
lock
mov
pop
and
scas
into
dec
add
sbb
jmp
pop
cmp
sbb
cmpsl
es
loopne
int
adc
and
ja
in
mov
xchg
jle
stos
push
movsb
call
loop
add
sub
popf
jle
xchg
ljmp
inc
filds
repz
cmp
cld
arpl
scas
daa
int
loop
mulb
inc
xor
or
dec
sahf
dec
loopne
dec
movl
cmc
stos
xchg
scas
jmp
outsl
inc
pop
fiaddl
xchg
add
daa
push
and
cmpsl
push
adc
cs
push
sbb
je
and
insb
and
pop
es
and
adc
jne
xchg
in
mov
or
jg
jp
adc
pop
aad
repnz
hlt
fsubrs
jecxz
inc
repz
aaa
sub
stc
add
leave
lds
ss
std
xchg
scas
push
xor
cmp
push
pop
daa
jns
fdivrs
lret
mov
dec
xorl
pop
outsl
xlat
shrl
and
lcall
xor
enter
cmpsb
push
mov
aas
dec
fldpi
lret
ds
fcmovne
aad
jp
aam
std
std
cwtl
inc
daa
flds
cli
sub
dec
rcrl
mov
imul
ret
shl
ss
mov
sbb
dec
mov
adc
lods
into
repnz
stc
add
xchg
dec
xchg
mov
andb
icebp
jge
ljmp
cmp
aad
push
adc
and
cli
or
sbbb
mov
shrb
das
xchg
lock
push
dec
daa
gs
push
das
pop
iret
ficompl
test
mov
arpl
sub
mov
sub
cs
xor
lock
mov
sub
jp
les
push
shll
daa
loopne
cmpsb
or
movsb
push
push
ja
cmpsl
and
bound
lods
inc
push
pop
mov
outsb
cld
sub
fdivrl
sub
cmp
sbb
cmp
mov
test
or
mov
je
adc
fisubrs
scas
aad
sbb
nop
repnz
cs
mov
arpl
lret
loop
jl
push
push
or
jg
mov
iret
fidivrs
lret
mov
aaa
xchg
aaa
xor
add
sub
jb
ljmp
mov
mov
jl
stc
bound
cwtl
shll
fisubrs
add
pop
subb
pop
sbb
shlb
xlat
aam
repnz
and
stos
repz
repz
repz
test
xchg
add
jb
rcr
cld
and
sbb
sbb
xor
arpl
shl
add
cmp
push
push
adc
adc
jno
jp
dec
lds
or
push
ja
cltd
mov
repz
popa
push
xchg
xchg
mov
imul
push
clc
popf
lcall
stos
xchg
rorw
rclb
sti
cld
pushf
mov
mov
xchg
call
movsb
jmp
xor
int3
mov
add
dec
sub
fstl
lret
xchg
out
std
jne
movsl
imul
fiadds
add
test
pop
adc
mov
push
and
dec
cmpsl
sub
ljmp
std
pop
xchg
or
and
divl
mov
sbb
push
lea
mov
inc
incb
icebp
ret
mov
add
cmp
xor
mov
insl
and
xor
or
fwait
inc
xor
es
pop
sbb
ret
xor
push
js
pop
movsl
das
fidivs
fbstp
cmp
push
inc
jbe
mov
jmp
out
sbb
mov
scas
es
inc
xlat
cwtl
rcrl
xor
dec
lods
adc
adc
pop
or
movsb
lret
pop
jns
leave
xor
in
mov
pusha
bound
out
mov
arpl
or
sub
sub
dec
addr16
mov
lcall
pushf
and
lahf
xchg
inc
jmp
pop
sub
movzbl
mov
mov
push
jp
push
jns
jge
sarb
shlb
es
aaa
sahf
and
mov
inc
mov
icebp
inc
jge
lret
fildl
cmp
jl
sbb
inc
push
dec
inc
idivb
enter
js
lcall
pop
fisttpll
arpl
jmp
sbb
sbb
xor
andb
lcall
mov
cmp
xor
xor
or
push
pusha
popa
cwtl
out
mov
adc
rcrl
inc
xor
cmc
out
dec
addl
stc
imul
test
rol
addr16
lret
push
lods
push
fildl
jnp
icebp
push
add
popf
lret
mov
das
add
icebp
adc
push
cmp
inc
in
sbb
clc
jge
sbb
scas
mov
cmp
ret
xor
scas
push
inc
mov
divl
sbb
xor
mov
inc
aas
inc
push
es
mov
enter
lea
pop
inc
xor
shlb
adc
and
fidivl
pop
inc
push
or
xchg
aas
adc
divb
push
fistpl
ja
inc
jo
mov
pop
jns
inc
mov
jae
dec
adc
mov
lahf
jne
mov
shll
mov
cmp
pushf
jge
inc
jbe
decl
ret
or
dec
lods
xchg
std
mov
sub
stos
cli
repnz
dec
and
adc
sub
clc
sbb
adc
repnz
in
mov
popa
rolb
mul
lea
xchg
cmpsl
jg
sub
adc
ljmp
pop
push
adc
aam
dec
jb
and
push
and
fisttpl
das
mov
mov
mov
push
adc
jl
int3
xchg
xorl
and
sarl
sbb
add
sbb
sub
shlb
lods
fiaddl
mov
pop
adcb
xchg
xchg
negb
jp
jne
jo
cmc
loopne
popf
stos
xor
xchg
orb
push
sbb
cld
call
call
jl
mov
inc
lret
sahf
popa
out
inc
in
cmpsl
loopne
aas
xchg
inc
inc
jno
mov
add
shrb
scas
sbb
cmp
aaa
pusha
mov
inc
dec
daa
sbb
fwait
enter
push
daa
test
xchg
pop
push
aas
fidivs
lahf
divb
lcall
addr16
imul
add
push
test
mov
mov
sahf
mov
and
xor
mov
addr16
xor
xlat
fists
fstpl
pop
mov
mov
xchg
or
iret
or
add
out
dec
and
mul
pop
sbb
sti
sti
movb
aaa
loopne
loop
cmp
sar
push
inc
cmpsb
in
in
mov
xchg
ret
cmc
pop
mov
gs
jg
es
lcall
dec
faddl
rorl
fisubs
adc
mov
aaa
adc
mov
repnz
lret
mov
or
scas
push
adc
jnp
dec
cmp
push
or
add
shr
jp
xor
inc
cmpsb
mov
mov
ds
mov
aas
test
aad
incb
jb
pop
in
mov
stc
iret
test
inc
xchg
inc
mov
adc
cmpsl
and
test
fildl
jne
and
cmp
push
cld
jo
and
div
les
call
mov
cmp
out
push
lea
pop
clc
out
push
adc
test
insl
sbb
adc
pop
addr16
lret
jnp
insl
dec
bound
les
arpl
mov
push
jne
loopne
push
mov
leave
out
aaa
jl
sarb
call
jecxz
icebp
sub
insb
adc
xor
or
fsubrl
int
hlt
inc
or
push
jmp
jns
lods
mov
dec
movb
call
xor
inc
push
stos
call
arpl
lods
lret
into
adc
sbb
data16
mov
outsl
fldenv
fiaddl
out
scas
fcomi
rorl
stos
bound
mov
out
jmp
stos
pop
lock
das
daa
inc
mov
fildll
push
out
sub
push
cs
add
lock
insl
sbb
adc
int3
push
xchg
sbb
fs
pop
cmp
gs
scas
adc
adc
outsl
mov
inc
cmp
xor
sahf
enter
xchg
cli
testb
pop
sub
out
xchg
addb
or
aas
aad
cmp
aaa
iret
pop
push
jne
cwtl
and
and
xchg
or
pop
mov
xlat
or
push
out
or
inc
dec
mov
loop
xor
adc
rcrb
inc
test
subl
xchg
lcall
and
leave
outsb
pop
inc
add
jl
sbb
mov
pop
xchg
add
lcall
mov
aam
cmpsb
or
dec
jmp
dec
mov
mov
pop
cs
int3
dec
cli
lods
les
xchg
arpl
jne
loop
out
or
inc
sbb
lret
xor
sarb
mov
mulss
jecxz
mov
fistl
mov
lods
and
mov
hlt
adc
jns
mov
shl
cmp
call
push
dec
or
mov
jne
in
shrl
nop
imul
addr16
std
movsl
dec
cmp
lahf
sbb
jno
test
sub
cmp
fwait
jns
mov
or
pop
push
ja
push
xor
sbb
stc
bound
lret
sti
inc
xchg
push
lods
cmpsb
push
sub
rcl
fs
stos
or
mov
cmp
xchg
lahf
test
clc
arpl
shrb
cld
shlb
inc
pop
inc
inc
cmc
idivl
rcr
xchg
jnp
mov
xor
or
mov
ret
mov
ret
sub
push
ret
popf
jno
push
xor
pop
dec
jbe
and
addr16
sarl
cmp
xchg
lret
mov
insb
add
mov
xchg
scas
and
adc
jp
push
xchg
inc
sub
sar
pop
loop
test
and
inc
inc
or
jecxz
sbb
pusha
cmpb
and
fs
or
pop
aam
xchg
lock
pop
cmp
scas
imul
jge
cmp
push
add
rcll
inc
cwtl
sbb
mov
mov
mov
add
js
push
cli
je
ds
or
popa
sbb
fbld
popf
sbb
fbstp
popa
arpl
and
icebp
sti
mov
xor
push
jmp
testb
repz
out
jecxz
in
mov
cmp
into
loopne
lcall
stc
mov
push
and
and
cli
jmp
popf
rcll
mov
xchg
sub
push
addb
jne
loopne
repnz
loop
push
xor
mov
cmpsl
out
test
ret
lret
fcomi
jns
inc
adc
xchg
loopne
int
pop
push
int3
xchg
dec
arpl
push
dec
leave
cmp
inc
and
ss
jle
mov
sbbl
pop
or
push
mov
push
iret
dec
xchg
lret
jnp
jne
aas
or
cmc
add
adc
cmpl
add
add
push
imul
ja
xor
lds
enter
setb
call
andb
push
je
dec
call
dec
int3
add
in
mov
push
add
pop
lea
cmp
lret
fistpl
out
scas
add
add
mov
fidivrs
lcall
jl
jo
jl
lret
test
push
mov
out
loop
daa
ror
std
or
sahf
mov
add
sbb
and
ss
push
jno
cmpsb
scas
ds
sub
and
fistpl
lods
lds
lret
repnz
dec
xor
cmp
cmpsl
aad
decb
iret
xchg
cmp
mov
pop
mov
dec
int3
rcr
push
xor
push
jno
rcll
mov
stos
add
and
sbb
jle
adc
and
mov
xor
mov
mov
sub
xchg
movsb
jp
xor
sahf
jo
adc
stos
cmp
nop
adc
push
sti
or
pop
dec
mov
push
dec
mov
xchg
sub
test
in
push
jp
add
flds
or
dec
or
push
iretw
leave
scas
mov
iret
les
cs
push
repnz
fmuls
inc
shlb
xor
pop
aaa
in
addl
rolb
inc
pop
sbb
sbb
mov
mov
xchg
jbe
jae
out
dec
sub
xchg
pop
out
or
adc
popf
pop
mov
inc
inc
xchg
sahf
pop
mov
cmp
mov
mov
cmp
adc
lahf
clc
sub
popa
cmpsb
push
xchg
inc
add
inc
jg
inc
dec
mov
rcl
push
mov
filds
mov
call
cmp
jg
cmp
gs
insb
push
push
xlat
daa
js
push
xchg
ja
xor
mov
aam
insl
nop
mov
push
dec
mov
adc
ss
fwait
mov
jle
push
in
add
mov
aad
xor
mov
outsb
in
ljmp
shl
add
rcrl
shll
lahf
lds
imul
rol
mov
mov
enter
add
xorl
pop
ds
xor
lahf
bound
sbb
int3
scas
ljmp
mov
and
xchg
sbb
xchg
movsb
mov
lret
and
xchg
sar
mov
sbb
mov
in
sti
sar
pop
mov
xor
arpl
and
cltd
pop
test
push
adc
or
gs
mov
std
aaa
movsb
dec
mov
idivl
mov
sub
outsl
cltd
sti
jno
mov
xchg
jle
out
notb
push
inc
ljmp
cld
fimull
push
adc
pop
cmp
inc
xchg
lcall
jnp
adc
sbb
jns
loopne
lds
sbb
and
lods
adc
imul
push
sbb
outsl
or
lock
sbb
aam
aas
lret
sbb
popl
imul
or
xor
imul
jmp
fdivr
dec
sahf
and
in
cli
inc
sbbb
arpl
pushf
lcall
pop
mov
je
mov
xchg
int
movsb
loopne
shl
fcmovnbe
lock
mov
pushf
cld
push
data16
lods
fidivrl
mov
or
fsubs
xor
jae
imul
mov
ret
push
mov
sub
in
mov
push
or
cli
sbb
lods
inc
les
cli
fdivrp
shlb
insl
sbb
lods
and
stos
inc
sbb
dec
cmp
pop
fsubrs
push
dec
xchg
aas
filds
sub
mov
xchg
insl
mov
outsl
sbb
movswl
xchg
loope
negl
inc
leave
xor
lahf
add
xchg
mov
xor
xor
shlb
outsb
out
jnp
in
cs
xchg
and
cld
out
xor
sub
pop
adc
and
adc
push
cltd
jbe
push
rdtsc
fcoms
jmp
arpl
mov
test
mov
dec
jae
clc
mov
sbb
call
ret
stos
sbb
clc
stos
fldt
mov
xchg
rcrl
cmp
icebp
sbb
xchg
lds
pop
inc
fisubl
push
cwtl
in
push
pop
jne
cltd
out
loope
mov
loopne
call
xor
les
sti
decl
cltd
nop
dec
pop
ret
fdivs
pusha
insb
aad
test
mov
dec
sub
fidivrs
fs
insl
test
jle
stc
scas
mov
dec
pop
dec
pushf
lds
fs
mov
jns
xchg
lds
mull
int3
sub
xor
mov
mov
fs
int3
es
lock
test
movsl
cltd
mov
loopne
lods
sbb
scas
dec
leave
fidivs
fidivrs
aad
stos
int
xor
fmull
jnp
xchg
repz
fidivrs
stos
nop
cmpsl
stos
mov
cmp
sbb
in
js
iret
jo
stc
mov
lock
out
cltd
mov
in
dec
in
cmpl
out
push
loopne
enter
and
mov
loopne
roll
iret
dec
jl
xor
test
out
mov
lods
ds
fnstenv
pop
cmp
inc
inc
mov
or
hlt
je
mov
loope
movsl
jo
sbb
outsb
jle
addb
outsl
jle
add
jle
mov
pop
cmp
adc
cmp
sub
fwait
shll
ds
pop
es
int
jmp
mov
inc
jge
cli
inc
cli
add
add
hlt
into
loope
jae
outsl
cmp
xchg
cld
movsb
aaa
lea
aam
xor
push
sbb
push
add
jnp
push
roll
test
test
out
sbb
xor
pop
jb
mov
mov
enter
mov
fstpl
pop
insl
cltd
cmp
cwtl
sub
dec
push
fsubl
leave
push
dec
lret
jge
jne
les
std
mov
sbb
cltd
js
mov
outsl
add
xor
xor
mov
push
mov
lahf
sbb
scas
insl
or
test
mov
mov
xchg
repz
lahf
shrb
sbb
push
and
dec
pop
sbb
jmp
pushf
popa
mov
xlat
mov
sahf
pop
xor
mov
fwait
mov
fnstenv
push
cmp
ret
jl
xchg
xor
inc
sbb
mov
and
or
jbe
arpl
adc
push
push
stc
push
scas
dec
pop
jb
pop
aam
call
dec
daa
mov
push
mov
test
push
mov
mov
insl
cmpl
movsl
stc
pmaxub
mov
popf
inc
push
jae
lock
out
sub
xor
xchg
pop
insb
ja
pusha
int
sub
repnz
jne
xor
inc
mov
std
or
in
sbb
shl
cmp
xchg
in
jl
pop
lcall
pop
mov
fidivs
mov
xor
or
andb
add
imul
jle
cs
shlb
iret
loop
push
dec
and
mov
ljmp
hlt
fiaddl
repz
outsl
push
add
cld
or
push
sub
das
sbb
call
std
xlat
sahf
sub
ss
loope
and
jp
js
cmp
in
mov
adc
xor
add
and
pushf
in
pop
popa
fsub
lcall
mov
xchg
rcrb
into
jb
test
and
push
cmp
inc
xor
aaa
pop
shlb
mov
scas
lcall
insb
scas
and
mov
pop
out
mov
jne
push
std
enter
pop
lea
push
push
adc
test
loop
cmp
lcall
pop
push
hlt
cmp
or
jp
mov
scas
cmp
cld
popf
mov
iret
pop
pushf
jae
pop
and
push
pop
jl
inc
imul
push
pop
loop
mov
repz
jb
cmp
and
cltd
jle
sahf
ret
dec
aaa
or
xchg
imull
sahf
jecxz
xchg
inc
aaa
inc
scas
rcrl
xor
inc
sub
stos
lock
sub
stc
mov
xchg
adc
mov
xor
inc
xchg
adc
mov
and
inc
mov
int3
movaps
inc
cmp
and
jno
cmpsb
leave
insl
mov
pop
or
pusha
test
and
jno
cli
sbb
fistpl
push
push
inc
add
loopne
stc
sbb
out
pushw
mov
sub
sbb
mov
cmpb
adc
pop
mov
or
pusha
dec
mov
jnp
mov
push
or
xchg
cli
push
mov
rcrl
xor
xor
in
in
cld
and
push
and
in
std
push
fwait
xor
push
mov
xchg
loope
hlt
mov
cmp
pusha
cmpsb
scas
aaa
add
jge
jp
imul
rolb
dec
cmp
add
cli
xchg
xchg
aam
sbb
push
cli
push
dec
mov
jecxz
aas
mov
imul
push
fwait
jns
dec
push
and
sub
outsl
inc
ret
test
or
pop
xchg
ror
lcall
into
scas
push
imul
fsubp
adc
jp
pop
xor
pop
xchg
xor
push
or
lahf
push
nop
push
jo
xor
movb
in
sbb
sbb
xlat
stos
add
lods
mov
inc
and
test
loop
mov
call
cmp
mov
mov
xor
lods
sub
jmp
cwtl
out
nop
pop
pop
aas
dec
push
std
lret
icebp
std
in
mov
hlt
cmp
dec
pop
js
cmp
lahf
std
push
dec
notl
xlat
dec
insb
and
fists
enter
xor
xchg
mov
sbb
push
inc
cs
push
sbb
xchg
add
lds
add
push
ret
jb
cmc
mov
and
stc
orl
jo
sub
mov
loopne
or
stos
inc
test
aad
pop
add
adc
test
in
rorl
cs
inc
pop
jo
or
inc
imul
mov
cmc
imul
cmpsl
xor
mov
pop
mov
sti
sbb
pop
loope
jle
mov
js
adc
jmp
mov
sbb
mov
bound
or
adc
jno
and
ljmp
cmpsb
xchg
subl
cmpsb
xchg
enter
roll
or
movl
das
add
xchg
sub
push
xchg
jge
push
out
jne
xor
xchg
stc
or
aad
xor
xor
shlb
cmp
mov
jno
rorb
push
das
sbb
pop
aad
push
or
dec
jb
push
mov
aaa
dec
mov
lds
fstl
xchg
rcr
rorl
jbe
sub
mov
add
xchg
xchg
mov
fldcw
jne
jecxz
leave
adc
fnstenv
push
sarb
mov
imul
xor
dec
sub
mov
sti
pop
das
fimuls
js
fldenv
loope
dec
sbb
inc
jecxz
aad
rolb
mov
cwtl
adc
mov
lock
ljmp
fidivrl
adcl
xchg
insb
nop
jns
push
mov
icebp
add
cmp
cmp
jo
fisubrs
push
adc
or
loope
xor
lret
jmp
or
push
idiv
fs
aas
mov
outsb
sahf
xchg
jecxz
jnp
cmp
jne
add
fildl
add
lahf
sahf
or
and
lcall
shll
stos
inc
adc
fldt
xor
test
push
dec
mov
divb
xor
mov
in
fs
loope
add
push
xor
sti
xchg
and
and
shl
push
enter
and
dec
mov
lods
clc
push
pop
arpl
xchg
mov
ret
dec
pop
nop
out
ds
insl
cltd
or
int3
push
inc
mov
je
mov
cmp
adcl
jb
fadds
jg
add
fs
push
outsb
jge
cwtl
jge
inc
xor
movsb
pop
dec
xorb
sbb
mov
jb
pop
xchg
lret
cs
jo
mov
out
int
mov
popa
enter
xor
lock
les
xchg
pop
repz
in
mov
mov
mov
inc
xchg
xor
mov
xor
xchg
add
sar
sbbb
adc
xor
stos
xchg
pop
and
jnp
insl
dec
imul
adc
das
in
pop
or
frstor
push
lock
adc
jbe
clc
and
jne
xchg
mov
sbb
jo
lods
les
mov
movsb
scas
pop
push
dec
iret
cmc
stc
dec
sbb
imul
popf
sti
jp
enter
lret
and
mov
mov
jp
scas
rcll
sub
into
outsb
push
sub
and
mov
popf
and
and
mov
jmp
cs
das
aad
xor
leave
push
dec
filds
pop
jle
mov
or
dec
add
xchg
xchg
sahf
js
add
enter
lds
mov
mov
enter
int
je
pop
repnz
loope
movsl
popf
daa
insl
fdivrl
cs
hlt
cmp
sub
out
andl
cli
outsb
enter
icebp
pop
adc
cmp
adc
arpl
fildll
sbb
xor
int
jge
iret
sub
int
sbb
setae
cs
pop
mov
lods
arpl
dec
fcoms
pop
icebp
xor
push
jns
loopne
adc
pop
dec
pop
mov
xchg
dec
subb
dec
sti
cmp
sbb
mov
inc
sbb
movsl
dec
dec
mov
push
inc
idiv
cmp
adc
inc
cli
shr
popf
out
movsl
addps
lock
sti
mov
out
mov
push
mov
mov
xor
inc
add
sub
xchg
cld
sub
mov
adc
pop
movsb
xchg
pop
mov
lea
stos
movsb
mov
xlat
jno
sarl
mov
adc
or
xor
insb
dec
cvtps2pd
fsubr
jb
js
int3
inc
js
test
js
lock
push
arpl
inc
daa
cmpsl
xor
adc
clc
in
and
or
sti
repz
or
pushf
xor
sti
push
add
int3
mov
icebp
enter
xor
int3
in
lcall
mov
cmpb
sub
add
fildl
outsl
clc
or
jbe
mov
into
negl
mov
adc
inc
mov
notl
mov
insl
and
lcall
push
sub
ret
test
popf
loopne
dec
xor
xchg
mov
adc
fadd
cmp
inc
xorl
mov
cwtl
xor
mov
aas
repz
mov
popa
into
fistl
js
push
adc
dec
inc
rcr
hlt
mov
into
mov
add
jae
sti
mov
fs
mov
aas
les
xor
xor
loop
mov
jbe
test
aaa
jo
add
xchg
shll
daa
insb
xchg
shrl
insb
adc
pop
sahf
inc
cmp
mov
pop
cmp
shlb
sbbl
mov
stos
int3
inc
mov
lea
std
movsl
fimull
mov
push
adc
shlb
mov
mov
sarl
mov
mov
fsubl
out
lock
pop
mov
jmp
mov
cld
push
pop
fbld
cmpsb
inc
lret
sbb
in
das
inc
negb
mov
pop
mov
test
js
aas
lods
cmp
pop
push
xchg
mov
xor
lret
test
popf
inc
hlt
lds
outsl
jecxz
aad
push
xor
ja
icebp
and
cs
lock
jno
adc
loop
pop
xchg
adc
cwtl
push
inc
adc
or
lods
or
in
popa
or
out
mov
fmull
in
sbb
or
pop
stos
sbb
mov
dec
xchg
out
imul
sahf
xchg
loope
rcll
cltd
xor
inc
add
cmp
lea
or
fldcw
mov
in
mov
push
sbb
mov
stc
pop
push
inc
negb
test
mov
jnp
jmp
pop
ljmp
mov
push
mov
fwait
scas
adc
and
lahf
stc
rolb
jnp,pt
outsl
dec
fdivs
clc
add
push
and
arpl
add
jle
push
adc
mov
sub
mov
inc
arpl
out
jbe
xchg
dec
sub
dec
and
imul
testb
push
mov
pop
pop
sbb
and
ljmp
mov
adc
divb
sub
dec
cmpsb
into
xchg
pop
jae
int
not
sub
insl
xor
xor
ret
scas
mov
mov
push
mov
mov
xchg
sbb
pop
pushf
cmpsb
data16
out
push
pop
scas
adc
mov
inc
ja
adc
xchg
lret
rorl
xchg
mov
jmp
jmp
int3
test
addr16
std
es
or
sub
and
cmp
jb
add
mov
out
dec
loope
xor
pop
lods
mov
mov
shrb
cmpsl
outsl
fisubl
fiadds
fwait
mov
and
hlt
cmc
pusha
push
fucomp
add
jmp
cmpsl
mov
xchg
loope
js
dec
nop
mov
pop
dec
sbb
das
sahf
es
lock
dec
enter
lret
and
inc
jge
lods
push
cmc
loop
addr16
xor
push
xchg
in
jbe
adc
int
shlb
xor
neg
and
cltd
cmp
fwait
imul
pop
sbb
pop
fidivrs
inc
jge
jp
sub
xchg
jmp
jmp
cmp
pushf
pop
stos
add
scas
xor
lods
aad
insl
mov
xchg
cmp
test
push
cmp
call
daa
sbb
lret
gs
sbb
dec
bound
aas
inc
push
cmpl
mov
in
lock
imul
shrb
mov
add
scas
and
cs
add
lods
shlb
jmp
sub
xchg
ret
or
sub
cmp
mov
jnp
loope
or
jnp
insl
xchg
dec
rorl
dec
sbb
icebp
mov
mov
pushl
inc
data16
and
or
sarl
sbb
test
cmpsb
sbb
aad
mov
cmp
or
jle
pop
lods
mov
fstpl
jp
cs
std
mov
lods
fnstsw
pop
aad
dec
lahf
icebp
stos
sarb
movsl
repz
cmp
xchg
sub
jmp
and
adc
sub
imul
cmp
ret
addr16
lods
cs
or
pop
mov
or
cmc
int
imul
bound
imul
mov
mov
cmp
push
and
fisubs
cmp
leave
iret
call
xchg
or
push
add
sub
jp
iret
insl
cwtl
add
sub
shrl
fs
fcmovnbe
pop
fmuls
faddl
pop
dec
push
cmp
rol
lea
mov
stc
daa
lds
out
sahf
les
inc
inc
dec
cmp
fs
mov
jmp
cmp
xor
jecxz
sarl
ja
mov
clc
flds
jae
jns
pusha
sti
fwait
aad
dec
and
pushf
sahf
mov
cmp
out
mov
inc
or
ja
daa
test
cmp
fdiv
mov
lret
adc
data16
jne
daa
call
xchg
out
mov
cmp
outsl
sti
mov
sbb
rorl
cli
je
sbb
out
mov
fs
jb
pushf
fs
cld
dec
jne
insl
jno
les
adc
imul
sarl
and
mov
xchg
ss
add
out
shll
inc
sbb
xor
mov
loope
sbb
fisttpll
mov
sarl
in
jp
pop
inc
or
add
ret
std
xchg
cwtl
fs
or
pop
jo
dec
imul
jns
mov
aaa
mov
push
pop
inc
loop
andl
int3
push
jnp
rcrl
push
pop
stos
lahf
faddl
mov
ror
sarb
fnstenv
xor
in
jl
pop
fwait
dec
pop
out
fs
sbb
mov
dec
or
xchg
out
insl
dec
mov
sarl
dec
cmp
pop
jno
mov
jae
in
pop
sub
jmp
add
dec
lods
mov
shrb
cwtl
push
lock
sbb
aaa
jmp
cmp
sub
dec
add
fistpl
lret
in
inc
clc
ds
fwait
or
ljmp
aad
jbe
xor
or
dec
stc
adc
jge
fidivs
xchg
cmp
dec
add
pop
test
lahf
pop
scas
enter
in
xor
mov
mov
daa
jge
jno
dec
inc
push
cmp
add
xor
adc
fnstsw
dec
add
ror
shl
sahf
shll
ja
gs
pop
mov
sbb
into
and
pop
mov
or
xchg
sbb
arpl
ja
jge
cmpsb
sub
mov
imul
push
push
les
mov
stos
jae
xchg
jno
outsl
rorb
rsqrtps
call
les
jmp
cmp
and
sub
fs
loop
rcll
push
popf
jnp
in
xchg
out
push
jno
cmpsb
sub
push
mov
arpl
iret
gs
dec
sbb
or
xchg
stos
push
or
add
mov
les
and
test
push
lret
pop
xchg
lods
push
dec
ret
mov
xchg
jns
and
mov
fisubrs
push
pop
dec
xchg
or
jle
out
bound
sbb
sub
testb
sub
rorl
orb
pop
subl
addr16
mov
das
sbb
incb
inc
lock
int3
push
add
mov
mov
cli
and
flds
adc
sbb
dec
or
into
aaa
test
or
icebp
push
adc
lds
inc
lahf
test
mov
dec
aas
lods
divps
mov
sarb
push
test
add
push
hlt
movsl
xchg
mov
mov
ljmp
inc
sbb
out
btc
xor
dec
stos
dec
mov
cmp
adc
pop
xor
movsb
mov
or
call
sbb
cmp
iret
test
jnp
pop
mov
sar
rol
dec
xchg
outsb
popf
shrl
and
add
xchg
cld
pusha
mov
outsb
sahf
sbb
dec
sbb
push
das
xorb
mov
fsubs
fadds
pop
or
xchg
mov
hlt
daa
mov
sub
mov
les
sbb
jg
add
inc
addl
mov
in
sbb
push
sbb
pop
cmp
and
and
sahf
shrl
sub
idivb
popa
jne
and
das
lods
sahf
or
in
imul
mov
jbe
data16
jno
or
mov
inc
add
out
mov
or
inc
sbb
pop
adc
mov
aas
inc
jb
inc
adc
scas
out
fcmovne
js
loopne
jo
cmp
cmp
dec
dec
add
in
cmpsb
xor
sbb
rcrb
mov
lods
push
mov
dec
leave
outsb
mov
fidivrl
pop
jle
lods
pop
dec
sub
fsubrl
pusha
fimuls
arpl
push
addr16
jo
rcrb
sub
or
sub
mov
iret
insl
push
jmp
add
imul
pusha
popf
jns
into
inc
cs
movd
push
arpl
ret
sbb
aad
dec
test
sbb
pop
test
ja
aad
mov
adc
hlt
adc
call
fistps
adc
addr16
xchg
pop
jne
lods
int3
aaa
xlat
test
sub
sahf
and
mov
stos
push
cmc
xor
xchg
movsl
pop
xchg
pop
fdivp
xor
mov
in
jl
mov
or
or
cmp
push
add
push
mov
insb
and
pop
xor
inc
out
sbb
stos
pop
jmp
adc
pop
pushf
pop
add
mov
mov
in
fmull
mov
into
jle
sub
mov
negb
nop
out
dec
daa
addr16
inc
sbb
adc
ficomps
mov
mov
jne
cmpl
jne
sti
outsb
pop
pop
repnz
mov
out
jae
mov
fbstp
shll
mov
aas
repz
jnp
in
aas
lds
sbb
sbb
xchg
fidivrl
hlt
inc
ficoml
mov
lock
inc
or
js
rcl
sub
jae
iret
loop
addr16
cli
decb
fucomp
aad
dec
jp
xchg
push
xchg
jecxz
and
xor
popf
imul
dec
xchg
mov
and
scas
push
shlb
jecxz
es
xchg
xchg
pusha
mov
imul
aad
mov
xchg
sub
cwtl
push
sbb
add
sarl
xchg
mov
pushf
mov
push
icebp
nop
mov
rol
sbb
push
in
jge
cmc
inc
lods
mov
pushf
jecxz
aaa
ret
outsb
sbb
add
jmp
cltd
push
or
out
xor
jo
inc
testl
loop
repnz
roll
or
in
lds
push
xor
sbb
jno
mov
push
ret
shrl
add
add
stos
push
sarl
out
xor
push
inc
pop
mov
inc
fwait
test
adcl
in
aam
adc
shlb
pop
xchg
imul
insb
cltd
lods
jge
push
clc
pop
pusha
loope
cs
subb
ret
rorb
inc
out
xlat
dec
mov
dec
mov
inc
andl
cs
xchg
leave
mov
mov
dec
sbb
mov
cld
test
push
mov
xor
addr16
adc
push
clc
xchg
out
jl
pop
mov
ss
inc
cmpsl
ud2
in
xchg
into
test
sbb
daa
cmp
icebp
sbb
or
jne
pop
aam
outsb
nop
sbb
inc
jge
mov
and
pusha
mov
sub
jno
inc
lahf
xchg
dec
test
cmpb
orl
mov
lds
out
sub
pop
add
cli
jno
ret
ret
push
cmpsl
mov
testl
cmp
adc
arpl
mov
pop
mov
iret
jge
push
lret
sahf
test
pusha
outsb
mov
sar
pushf
push
maskmovq
notl
nop
ret
bound
dec
xchg
cmpsl
mov
jl
int
push
and
xor
mov
stos
and
inc
adc
xchg
repz
fcom
or
in
push
aad
push
xchg
push
jns
mov
pop
les
stmxcsr
fdivrl
orb
cli
pusha
push
xchg
add
jnp
push
je
fwait
xor
js
testl
xchg
icebp
daa
int3
mov
mov
inc
repz
inc
or
xchg
jo
shrb
push
xchg
and
mov
data16
ljmp
pop
mov
xchg
nop
lret
sub
add
lcall
jg
in
out
inc
ljmp
adc
sub
pop
lret
xchg
pop
jno
push
dec
inc
shlb
imul
bound
mov
jns
add
dec
les
imul
clc
adc
loopne
mov
ss
dec
jbe
or
mov
jle
mov
mov
cli
dec
scas
mov
cmpsb
testb
testl
adc
cmp
cmpsb
and
pop
mov
mov
push
sbb
les
lcall
lahf
jae
aas
jo
paddq
arpl
xchg
mov
cmovp
mov
addl
adc
fldln2
sbb
sub
leave
divl
popa
mov
cmp
ret
fwait
inc
test
rorl
jbe
aas
or
push
data16
mov
mov
mov
mov
mov
std
cltd
loop
inc
cmp
mov
movl
scas
dec
inc
imull
rolb
pusha
or
out
push
mov
out
jbe
sub
roll
pop
xchg
setp
sbb
scas
xor
sbb
cs
arpl
cmc
push
rcl
adc
xchg
enter
repnz
je
xchg
mov
out
mov
out
inc
inc
push
or
sub
xchg
addr16
sub
sub
xchg
cs
mov
cld
fsubl
out
xor
movb
mov
imul
mov
lds
xchg
lret
pop
mov
jns
pop
xchg
rclb
inc
pop
xlat
jp
push
nop
add
jecxz
rcll
sbb
sar
sbb
movsl
into
adc
mov
daa
cmp
xchg
dec
sbb
jnp
jno
outsl
sub
imul
xor
insb
mov
dec
dec
clc
pop
sub
xor
dec
push
push
jecxz
adc
mov
sbb
adc
pop
mov
sub
inc
and
and
lret
pop
xchg
enter
pop
icebp
inc
cld
nop
push
dec
loop
push
pop
mov
inc
jb
mov
fcoml
bound
jecxz
mov
or
outsl
xor
mov
push
dec
lret
push
sbb
shll
mov
xchg
in
or
jle
and
out
jecxz
pop
sbb
dec
mov
lds
mulb
xor
call
movsl
add
adc
in
nop
loope
dec
repnz
imull
push
test
dec
rclb
into
in
dec
decl
int
cmp
xor
add
jbe
sub
push
sbb
addr16
lret
aas
scas
test
cmp
inc
fmuls
inc
sbb
out
cld
xchg
loope
push
icebp
sub
mov
push
or
sarl
mov
adc
adc
and
pop
out
pop
je
pop
jle
movups
lret
sub
stos
int
xchg
cltd
lock
xor
mov
scas
loop
pushl
subl
in
je
lock
cmpsl
mov
push
sbb
in
pop
add
inc
lret
mov
jnp
loope
pop
xchg
cmpsb
sbb
nop
add
ja
inc
inc
sub
mov
pop
dec
aaa
aaa
lahf
pop
movsb
add
jnp
cmp
in
test
adc
dec
int
pop
repz
loop
push
psubw
into
lcall
pop
dec
xlat
mov
stos
movsl
call
mov
dec
and
push
sub
push
or
mov
popf
push
mov
sti
push
push
lds
lock
xchg
stos
mov
sub
loope
jg
in
arpl
push
movl
push
jb
fs
lcall
jae
xchg
push
push
int
leave
and
jno
adc
xor
pusha
sbb
bnd
dec
out
jbe
lret
pop
push
outsl
aaa
faddl
cmp
mov
mov
jns
ljmp
int3
cmpsl
and
sbb
mov
dec
mov
cmp
imul
fimuls
jmp
xchg
dec
cltd
loopne
repnz
sti
leave
loop
cld
lret
push
cmpb
dec
mov
sbb
loope
push
xor
test
xchg
adc
jnp
fs
loope
mov
and
jno
add
jnp
shrb
call
xorl
out
or
mov
xchg
fs
push
stc
mov
jne
cwtl
stos
lods
inc
sbb
jo
test
insb
jg
mov
jl
pop
xchg
dec
mov
mov
in
dec
stc
test
arpl
dec
ret
xchg
sarb
push
aaa
daa
adc
mov
sub
ss
popa
stc
pop
loop
and
inc
cltd
gs
push
xchg
je
cmpl
outsb
fwait
hlt
xchg
sbb
xchg
ljmp
addr16
jbe
jp
xor
push
xor
inc
sbb
test
js
fsubs
sahf
xchg
insl
into
dec
aaa
push
cmp
lods
add
jmp
push
repz
nop
aad
and
test
je
pushf
mov
jge
lcall
dec
lahf
cmc
cs
sub
mov
sbb
dec
fidivrs
pop
xor
adc
or
mov
jnp
test
mov
icebp
fldcw
mov
dec
shll
cltd
test
imul
loopne
dec
jbe
repnz
and
push
mov
sub
iret
cmp
jmp
rclb
sub
add
pop
mov
sbb
les
mov
mov
adc
loop
push
push
push
inc
stos
pusha
jbe
roll
ret
sbb
leave
imul
mov
xchg
mov
cmp
push
or
push
inc
mov
lea
outsl
push
dec
test
movsb
adcl
jnp
mov
adc
das
gs
push
add
dec
shlb
rcrb
inc
adc
cmp
push
cmp
out
and
push
sbb
sub
out
pop
clc
or
arpl
popf
mov
cmc
inc
jge
lahf
test
dec
lds
mov
popf
dec
pop
lea
push
leave
dec
fs
jae
lea
push
or
and
jne
cmp
mov
dec
or
in
cmp
movsl
mov
push
push
push
push
bound
and
dec
shll
outsl
xor
ficoml
sub
aas
in
out
mov
cmpsl
and
jle
mov
dec
pushf
push
aaa
movsb
xor
cwtl
sahf
imul
cmp
ret
clc
inc
faddl
jg
push
inc
sub
jae
or
dec
adc
stos
mov
mov
enter
mov
sbb
shlb
mov
movsb
inc
stos
cmp
hlt
adc
rolb
lea
pop
cmpb
pusha
sub
add
inc
add
push
sub
add
lods
lret
pop
pop
movsb
js
pop
out
pop
mov
loopne
aas
pop
insb
std
lods
adc
add
daa
or
fwait
inc
add
into
inc
lret
adc
add
aad
cmc
pusha
loopne
add
fbstp
fidivrs
or
jbe
outsb
xchg
and
mov
shrb
ja
sub
js
inc
and
fs
adc
test
xchg
adc
aaa
jge
fdivr
pushf
xchg
std
push
or
aad
insl
cltd
lods
shll
sbb
push
shl
aad
ja
jecxz
call
aas
iret
std
call
imul
push
cwtl
or
add
add
outsb
cs
loopne
pop
incb
fists
ljmp
push
inc
dec
jno
add
ss
and
shlb
cmp
cmp
arpl
int3
sub
xor
push
mov
sbb
mov
call
test
fisubs
ja
in
cwtl
sbb
aad
jp
rcll
push
call
out
or
sarb
push
lcall
hlt
xor
aaa
pop
cmp
cmc
lods
mov
push
push
les
sbb
imul
push
xor
test
je
cld
pusha
clc
pop
mov
enter
aaa
push
or
jns
xor
add
xchg
mov
scas
fstps
mov
or
sahf
xchg
sub
add
pop
and
testb
and
in
ret
adc
lret
out
mov
aas
cmp
movsb
xchg
andl
jne
test
sbb
or
iret
pop
pop
repz
adc
divb
std
mov
sbb
sbb
xchg
push
test
sub
xor
and
repz
les
cmp
add
xchg
adc
mov
aam
xchg
cmc
jnp
jp
int
xchg
mov
jecxz
es
and
fadds
xchg
inc
or
stos
jmp
sub
je
cltd
orb
and
mov
lods
bound
jbe
ss
mov
inc
lret
std
jne
outsb
popf
dec
popa
rcll
adc
fcompl
dec
mov
jmp
dec
mov
movsl
adc
pop
cmc
jecxz
mov
adcl
pop
hlt
xchg
or
lahf
pop
mov
mov
jecxz
cmp
jp
xor
das
push
std
jno
negl
clc
sarl
pop
or
adc
pop
push
and
rclb
std
xor
loop
scas
shlb
mov
cmp
xchg
add
rclb
push
mov
push
push
mov
adcl
aam
dec
sbb
shr
mov
outsb
push
mov
jge
js
add
cmp
xor
testb
lret
les
pushf
jb,pt
mov
jb
jg
jecxz
cmp
bound
jae
movsl
mov
insl
xor
xlat
mov
mov
pop
jb
cltd
fsubl
add
pop
mov
jbe
aam
call
push
xchg
push
je
xor
pop
mov
shlb
lds
pushf
out
adc
inc
xor
mov
jmp
fisubrs
out
loop
dec
lds
in
scas
mov
fidivrs
stos
stos
dec
sahf
fs
mov
push
cmpsb
jl
mov
rol
subps
push
cwtl
mov
subl
daa
inc
push
int
test
in
es
dec
aam
mov
ljmp
cli
outsb
jmp
and
xchg
cmpsb
mov
rorl
xorb
bound
push
sbb
stos
enter
aam
push
cmp
test
mov
not
out
movsl
sub
gs
or
roll
cld
sub
sub
aaa
mov
mov
sub
sahf
insl
loope
shll
fildll
pop
aaa
xchg
push
enter
stc
pop
gs
lea
cmp
sarl
mov
sbb
cmp
lret
push
movsl
fdiv
aas
or
rol
dec
lret
push
xchg
or
sahf
jl
sbb
sbb
aam
push
ljmp
cmp
fdivrs
pop
lds
cs
in
mov
inc
push
pop
shll
out
mov
test
sub
shr
call
jmp
movsl
icebp
inc
push
lret
ljmp
sbb
outsb
fwait
push
inc
jb
adc
cmp
jle
lret
pop
hlt
and
iret
jmp
sub
mov
sbb
add
adc
jbe
xor
and
inc
call
dec
ss
aaa
in
popf
inc
rcl
popf
shll
aad
in
fstpt
cld
sub
loopne
jl
cmp
cmp
out
lahf
in
das
mov
xlat
hlt
or
pop
pop
pusha
sbb
push
sbb
or
mov
dec
inc
adc
aad
inc
push
nop
aad
cmp
dec
popf
jb
scas
and
push
data16
clc
adc
loope
inc
mov
das
stos
and
add
sub
daa
cmp
jns
pop
adc
loop
stos
jo
inc
clc
test
adc
adc
rclb
push
iret
jmp
add
push
pop
lcall
push
pop
dec
nop
jecxz
pushf
movsb
add
aad
outsb
xchg
movsl
enter
mov
lds
cmp
inc
and
aas
insb
rcrb
xor
jl
repnz
ljmp
pop
jge
ret
mov
jnp
jmp
inc
outsl
lahf
clc
inc
test
fadd
jge
fdivl
inc
mov
ljmp
repz
data16
outsb
mov
hlt
mull
mov
sub
adc
popa
call
pop
pop
mov
in
and
aad
push
inc
ss
cmp
dec
fsubr
les
test
sti
jmp
loop
mov
add
sub
mov
mov
filds
mov
push
fwait
in
mov
test
out
inc
shrl
daa
mov
mov
push
lcall
mov
sub
cltd
cmp
push
cmpsl
mov
ljmp
jae
js
stos
sahf
inc
mov
popf
push
ljmp
movsb
mov
pop
fwait
push
add
inc
fdivl
dec
fdivrl
cmp
mov
out
dec
sbbb
jne
mov
stc
push
iret
sbb
popa
pop
aaa
and
mov
jnp
cmpsb
push
aam
xchg
mov
push
fstl
or
push
dec
loop
sbb
arpl
jecxz
push
fidivrl
in
leave
mov
test
test
mov
jg
jle
and
mov
cmp
cmpsl
push
sbb
push
xchg
shll
ffree
pushf
jl
push
jge
xchg
push
push
fs
pop
sub
lds
nop
add
push
cmp
jne
add
pop
in
hlt
pop
cmpsl
scas
lock
sbb
pop
mov
test
stc
and
jg
jno
jno
in
push
ds
negb
pop
jle
jo
scas
rclb
sbb
dec
pop
xor
mov
cmpsl
inc
xor
xchg
mov
nop
push
aad
xor
jb
jmp
cwtl
frstor
sahf
cmpsb
mov
sub
repnz
or
testb
loopne
sarl
dec
insb
adc
lcall
jae
fwait
jp
and
inc
mov
jb
ds
lret
jo
ret
jne
imul
int
push
test
idivb
push
test
ja
jno
push
adc
mov
sub
or
push
cmp
mov
daa
jns
sbb
lahf
mov
or
ret
out
or
imul
xor
subl
test
sub
and
lcall
jmp
not
mov
popa
loope
cmc
roll
jle
adc
xchg
push
mov
insb
int3
add
lods
xorb
or
pop
inc
cmpsb
and
shl
mov
pop
pusha
cmp
rclb
negb
dec
outsb
or
out
ds
cltd
stos
es
jne
xchg
mov
imul
outsl
repz
pop
push
fisttps
dec
mov
jb
icebp
popa
out
sbb
jb
xor
out
fsubr
inc
sbb
cmp
fbstp
lods
jle
es
stos
or
cltd
sub
outsb
imul
and
xor
xchg
aad
not
popa
mov
aad
mov
fwait
jne
in
mov
sub
or
pusha
lods
fisubrl
jb
dec
jb
outsb
mov
add
mov
jbe
sarb
jae
inc
scas
pop
jne
xchg
icebp
xor
dec
xor
cmpsb
ja
push
daa
xchg
loop
pop
loopne
sbb
xchg
mov
icebp
int
and
fnstenv
jbe
push
sbb
lret
out
adcb
mov
aas
push
xchg
mov
dec
xchg
pop
ficompl
inc
pop
adc
stos
mov
sbb
cwtl
or
mov
push
mov
pop
lret
mov
fisubs
stc
mov
gs
aam
sub
jl
push
test
icebp
dec
xor
popf
in
jg
rorl
xchg
out
sub
shll
int3
int3
xchg
xchg
aad
fildll
pop
test
jbe
fs
mov
xchg
cmpsb
lret
xor
movsb
pushf
loope
inc
je
lea
mov
int
jge
adc
cmpsl
xchg
pop
mov
stc
and
push
add
dec
mov
decl
sbb
orb
cltd
das
jge
mov
aam
into
sarb
mov
jnp
mov
dec
sbb
addr16
jp
dec
sub
fwait
jle
cli
js
cmovs
clc
aas
les
jb
orl
mov
ljmp
cmp
sub
push
sub
clc
loop
adc
jg
mov
loop
movsl
int3
sbb
push
mov
loop
and
ljmp
clc
pushf
push
push
dec
and
add
mov
or
mov
mov
popf
dec
lea
imul
xchg
call
sub
enter
add
mov
cmp
flds
add
mov
and
push
mov
sysexit
mov
sub
xchg
pushf
xor
nop
and
sub
lods
ja
jl
cmp
dec
push
ficomps
cmp
jmp
dec
mov
cmp
jo
test
or
lds
stos
jg
ds
sub
dec
rcr
xchg
ret
mov
inc
lea
ja
inc
jne
outsb
cld
jbe
loope
sub
out
cli
mov
fcmovb
pop
push
mov
jnp
mov
add
jle
pop
fs
cmp
popf
jnp
dec
testl
cld
inc
in
ret
aad
pusha
or
jo
sub
mov
hlt
xchg
jmp
xchg
xor
std
mov
ljmp
sahf
scas
dec
push
sbb
clc
js
sbb
ja
aam
pop
dec
mov
loope
jne
mov
scas
cmpsb
das
int
or
cwtl
nop
mov
int
in
and
repz
xor
xlat
push
fdivrl
sbb
int3
fstpt
xor
sbb
mov
lcall
nop
stos
push
push
sub
mov
jge
aaa
stos
pop
xchg
sbb
mov
roll
lods
notl
cmp
loop
add
andb
cmpsb
cld
push
lods
and
fld1
lds
jb
mov
in
cmpsb
mov
sbb
sahf
adc
scas
cli
push
jmp
out
push
stc
ficoms
shl
mov
mov
cmpl
mov
sub
pop
sub
dec
filds
ljmp
dec
subb
cs
scas
mov
xchg
aam
loopne
std
mov
jp
xchg
leave
fwait
mov
pop
dec
jb
cmpsl
or
cwtl
mov
jns
aad
inc
push
stc
loope
adc
jle
jne
mov
inc
insb
sbb
inc
and
adc
xor
lahf
aam
out
scas
xchg
out
dec
imul
mov
mov
out
inc
fisubs
cltd
hlt
ds
adc
loope
cmc
adc
pop
pop
je
test
mov
cwtl
cmp
lds
lods
test
mov
addr16
ds
add
lahf
mov
jmp
xchg
mov
push
mov
outsl
pop
dec
adc
sbb
addr16
or
in
pop
mov
fwait
les
fistpl
dec
sub
xorl
in
jns
push
pop
pop
test
pop
adc
in
aas
jno
jle
ds
arpl
jge
mov
mov
push
or
sbb
pop
push
mov
mov
repz
push
mov
mov
out
push
lods
pushf
sahf
lret
pop
add
movzwl
movsl
jo
jle
pop
inc
fidivs
ss
rclb
push
lcall
lret
sub
lds
adc
jge
cmpb
cwtl
sub
insb
js
popa
and
cmpb
cmp
aaa
push
movb
jp
outsb
pop
pop
and
jecxz
pop
xchg
fstl
cmp
cli
repnz
stos
in
pop
adc
test
test
adc
cmpsl
xor
cmc
out
stos
xor
jns
xor
enter
dec
jne
loope
cwtl
mov
xchg
dec
push
mov
jg
sbb
mov
push
cld
dec
mov
pop
cmpsb
lret
fists
loopne
xchg
int
xchg
leave
dec
je
sbb
out
cmp
in
or
mov
fs
pop
push
mov
inc
inc
mov
push
inc
jbe
jecxz
test
xchg
push
jns
loope
jmp
mov
cs
jmp
cmp
add
in
push
shrb
pop
jb
sub
std
pop
push
mov
and
mov
xchg
adc
outsl
sub
xor
dec
in
adc
or
sub
xor
mov
jo
test
scas
mov
sub
push
sub
pop
enter
mov
xchg
stc
jns
imul
xor
mov
sub
fsubrl
mov
pop
movsl
test
dec
pop
mov
pop
mov
repnz
das
call
imul
test
jmp
js
push
pop
pop
add
mov
pop
ljmp
push
push
xchg
sbb
cmp
fbstp
outsl
pop
sbb
cmp
sub
ret
and
fyl2x
lods
int
call
mov
jmp
push
add
ds
iret
dec
inc
jae
or
jl
mov
test
hlt
cmc
mov
jno
add
test
into
in
dec
cli
push
cli
insl
pop
xchg
mov
pop
pop
js
leave
lcall
pushf
out
jae
pop
repz
fnstenv
push
cmpsl
sub
mov
sarl
xlat
gs
fisubs
out
push
fsubr
andl
shlb
cwtl
rep
out
dec
daa
sti
adc
dec
xor
mov
cmp
insb
punpckldq
pop
loope
inc
add
sahf
nop
jns
movsb
xor
adc
fsubrs
repz
dec
pop
das
inc
pop
in
mov
pop
and
add
xor
and
and
mov
gs
in
sub
sbb
xchg
sub
lods
out
xor
cmpsl
adc
adc
fmuls
int
scas
scas
outsl
mov
mov
lock
sbb
inc
dec
leave
inc
int3
cld
jl
pop
rolb
adc
rorl
addr16
cmp
pushf
adc
in
pop
push
mov
mov
dec
scas
rcll
out
icebp
fwait
xchg
adc
pop
sbb
adc
sub
mov
push
and
jb
cmp
push
push
mov
xchg
jno
cmpsb
int3
mov
clc
lock
inc
pop
je
and
mov
inc
mov
push
xlat
pop
movsl
pop
sbb
ds
lcall
cwtd
jle
adc
inc
mov
xchg
gs
cmpsb
pop
mov
xor
pop
xor
cmp
dec
ret
xorl
aad
int3
inc
outsb
cmpl
out
jmp
push
push
push
je
mov
sub
cmp
stos
jnp
sbb
dec
mov
lcall
sti
cmc
insb
cli
das
cmp
cli
lahf
fnstenv
cs
es
scas
nop
push
adc
cwtl
or
push
mov
lcall
nop
push
xor
pop
push
sub
dec
pop
push
or
nop
adc
mov
mov
mov
push
inc
je
xchg
enter
lock
mov
xor
cli
jp
xor
sub
mov
movsb
sbb
sub
insl
ja
xor
jg
push
mov
test
dec
add
stos
jns
cli
shl
ds
mov
into
cmp
int
mov
pop
aam
imul
nop
test
mov
fwait
scas
add
lcall
lea
mov
negl
lret
icebp
jl
dec
mov
jb
roll
jno
add
fwait
popa
stos
lahf
push
or
mov
dec
jae
push
inc
sarb
add
pop
sbb
out
call
xlat
shr
dec
call
mov
jge
adc
icebp
push
ja
arpl
cwtl
test
jno
ds
sub
pop
lcall
sub
inc
out
dec
sub
push
lretw
pop
popf
mov
push
dec
add
loope
or
aas
sbb
cs
push
sbb
fisttpll
iret
outsl
sub
movsb
cmp
pushf
faddl
cwtl
fmul
mov
adc
mov
jle
in
ja
jb
xor
push
or
sub
mov
or
shlb
stos
inc
pop
mov
pop
clc
enter
or
lcall
fisttpll
and
mov
and
jle
into
cmpsl
pop
mov
divl
mov
int
mov
dec
test
add
jl
pop
jbe
dec
pop
leave
repnz
aas
nop
leave
pop
movsb
and
movl
repnz
sub
jmp
sbb
popl
adcl
adcl
shrb
lods
repz
lahf
jns
sbb
dec
or
in
lock
hlt
fs
scas
out
sbb
ja
xchg
pop
pop
pop
cmpsb
cmpsl
or
inc
mov
icebp
out
add
adc
loopne
add
jnp
jecxz
adc
mov
punpckhbw
fdivrl
sub
aaa
pushf
cmp
push
imul
or
in
sbb
adc
lret
out
inc
mov
push
dec
xchg
outsb
aad
sbb
arpl
pop
stos
notl
add
arpl
jb
inc
inc
mov
or
popf
inc
sub
pop
jge
xor
testb
fnstcw
dec
mov
es
xchg
in
add
cmpsl
mov
js
pushf
adc
jl
repz
or
add
cmpsl
mov
dec
xchg
adc
fdiv
pop
in
xor
mov
mov
aam
outsb
or
adc
xchg
stos
in
inc
push
pop
sbb
fbstp
push
rcr
stos
dec
or
fistl
adc
jle
into
adcb
fcomp
idivb
lea
dec
or
shrb
mov
mov
and
test
mov
int3
into
sub
rolb
or
jne
sbb
lcall
je
jae
and
fstpl
imul
push
dec
movsb
ljmp
adc
pop
mov
add
mov
pop
je
int3
cmpsb
into
std
insl
xchg
mov
daa
mov
adc
ja
cmp
rep
xorb
adc
stc
es
ja
cmp
sub
pop
imul
out
dec
push
sub
inc
push
mov
js
int
push
push
cld
aam
popf
insb
xchg
inc
fs
jno
mov
xchg
mov
mov
cwtl
loopne
push
mov
pop
xlat
enter
test
or
or
sbb
jno
sbb
lret
cmc
repz
mov
into
repz
adc
dec
into
sbb
sbb
mov
stc
data16
mov
out
fmull
lods
sti
xchg
or
ret
inc
jnp
inc
dec
fnsave
aaa
iret
fsubrl
es
js
lret
push
movsl
xlat
mov
and
cmp
shrl
scas
inc
movsl
movsb
push
jo
sub
jge
jns
mov
mov
cs
imul
ret
pusha
or
xor
or
push
ficomps
or
clc
add
mov
ret
or
or
jecxz
mov
dec
stc
cmp
adc
inc
inc
ss
loope
mov
xchg
sub
testb
subl
and
clc
jbe
fs
xor
cltd
rolb
imul
jns
outsb
arpl
and
enter
pop
popf
ret
mov
ljmp
sbb
add
fsubs
ret
shlb
pop
sub
mov
cwtl
xor
test
shl
pop
loopne
sub
pusha
mov
or
lahf
mov
outsl
out
mov
cmp
cmp
stos
sbb
push
mov
mov
jb
inc
adc
add
scas
xor
adc
ret
into
inc
insb
xor
fs
bnd
mov
ret
adc
pusha
aam
test
int
call
inc
fnstenv
pop
mov
pop
mov
cmp
sub
lcall
scas
add
pop
jae
mov
mulb
outsl
dec
dec
mov
sbb
push
and
xchg
mov
jge
fwait
pop
sbb
jle
fldenv
push
fists
xchg
push
or
aad
fadds
fbld
out
movsb
dec
shrl
pop
test
cmpsb
dec
dec
mov
into
popf
mov
xchg
jecxz
xchg
adc
cmp
movsl
lods
mov
inc
xchg
shlb
and
sarb
push
outsl
xchg
mov
cld
rorb
stc
lds
fwait
jp
push
jl
lds
aas
jno
sub
aam
sbb
lea
mov
sbb
stos
jno
nop
rorb
pop
push
cltd
add
das
dec
push
sahf
cmp
mov
movsl
sub
mov
xchg
mov
fisttpl
mov
jge
ret
pop
in
cmc
daa
xor
popf
rcr
or
pop
and
loopne
inc
das
jno
pop
in
dec
mov
push
inc
shr
call
stos
sub
cmp
jle
mov
push
adc
popf
lods
push
in
mov
mov
lea
inc
mov
dec
push
stc
pop
add
jae
xchg
pop
jnp
mov
mov
gs
out
mov
dec
in
push
test
mov
push
or
es
in
cmp
mov
mov
movb
xchg
movsb
pop
test
je
gs
jne
into
sub
mov
insl
aaa
inc
pop
inc
cld
scas
mov
mov
mov
sbb
pop
lods
shll
push
mov
in
mov
leave
ficoms
add
jle
in
push
fistpl
int3
sbb
push
mov
aam
push
mov
mov
sbb
jns
out
shrl
push
ret
cld
into
sbb
xchg
ss
mov
sbb
jp
clc
jne
xor
fisubl
hlt
pop
xchg
pop
lcall
push
cmp
fidivrs
repnz
xchg
add
push
mov
sbb
data16
dec
sub
and
outsb
xor
push
into
cmp
adc
inc
bound
ds
imul
push
scas
test
gs
pop
call
xor
lret
mov
stos
leave
push
xchg
cmp
imul
dec
xor
jge
or
aad
push
dec
add
lahf
xor
js
push
cmp
aad
shl
clc
xchg
fs
gs
fsubr
jb
andl
in
daa
inc
xchg
int3
sbb
pop
push
les
lret
scas
in
jno
add
lods
or
or
xchg
aad
leave
sub
xchg
xor
mov
sbb
xchg
imul
insb
test
sub
mov
and
cmp
add
sub
push
cmp
icebp
mov
test
add
clc
jbe
mov
inc
jne
out
popf
pop
mov
ss
cld
mov
aad
sbb
imul
mov
jmp
out
mov
test
sub
leave
lods
nop
test
dec
cwtl
jbe
or
dec
adc
xor
jns
lods
cmpsb
jle
and
ss
push
sub
jecxz
lcall
or
jmp
decl
or
sbb
imul
adc
bound
and
test
cwtl
xor
xor
ss
loopne
aad
test
rol
fsubrl
pop
pop
scas
out
popf
movsb
adc
es
es
outsb
rorb
jg
lods
push
sub
movsl
insb
inc
sub
or
dec
adc
jecxz
into
cld
scas
into
sub
sub
negb
adc
jo
aad
dec
mov
fisttpll
xor
adc
jno
in
cmpsl
insb
stc
jp
sub
cltd
test
fwait
ljmp
and
lret
adc
pop
aad
addr16
pop
stos
cmpsl
sub
scas
ret
xchg
fwait
je
mov
cmp
sbbb
xor
lret
aas
ljmp
data16
loop
or
cwtl
cmp
stc
rdtsc
fstl
mov
inc
or
les
leave
cmpsb
push
icebp
cmp
cmp
mov
mov
or
das
sbb
xchg
sbb
pop
leave
pop
orb
mov
inc
mov
pop
and
scas
mov
arpl
pop
ljmp
mov
insl
push
sti
test
punpcklwd
lds
rclb
or
sbb
in
cmc
push
adc
sub
jle
pop
push
pop
icebp
ss
mov
sub
inc
out
jbe
std
adc
add
pop
dec
xchg
mov
loopne
jp
jmp
std
adc
cmc
insb
loopne
insl
ja
stc
add
sbb
scas
aas
add
mov
pop
sbb
ret
adc
jns
inc
mov
sub
pop
xchg
cmpsb
lcall
cmp
jl
mov
dec
cmp
std
lds
push
mov
mov
and
jo
lea
and
aad
xchg
mov
popf
mov
in
rcr
incb
gs
jbe
dec
xchg
mov
cld
shlb
addl
jl
sbbb
mov
scas
mov
lock
icebp
cmc
mov
scas
mov
or
ficoml
mov
jno
sti
inc
xor
mov
repz
lods
jmp
jmp
mov
adc
push
cld
mov
pop
mov
arpl
mov
jae
cmpsl
fiaddl
mov
adc
adc
and
scas
ret
popa
aaa
lahf
lds
push
andl
in
xchg
leave
adc
or
fs
clc
mov
dec
xor
gs
cmc
mov
lcall
inc
mov
sub
aam
push
lock
gs
sub
mov
mov
push
mov
jo
mov
xor
rcrl
sub
imul
out
cmp
or
inc
or
cmpsb
sub
xor
jae
push
push
ljmp
add
ds
fs
add
ljmp
es
lea
mov
push
cltd
push
add
cmp
mov
repnz
xor
xor
pop
adc
mov
lret
gs
jecxz
movsl
test
sbb
or
cmpsb
ffree
into
test
sub
pop
inc
mov
adc
jle
pop
mov
insl
lods
mov
fistps
and
lahf
je
lods
pop
int3
pminub
xorl
cmp
int3
mov
pop
jns
xchg
icebp
or
jno
adc
add
test
cli
daa
pop
lret
adc
inc
jb
jecxz
outsl
loop
maxps
xchg
inc
imul
repnz
mov
xchg
jno
jmp
fmull
loop
in
mov
cmp
and
sbb
or
out
sbb
insb
ljmp
out
sarb
frstor
pop
fwait
lcall
mov
adc
cwtl
xchg
sub
sub
add
mov
cli
mov
fidivs
mov
andl
fnstsw
mov
std
sub
push
mov
adc
xor
sub
cmp
stc
xchg
jl
leave
mov
mov
ret
mov
nop
jbe
loope
jae
out
adcl
sbb
cs
adc
xchg
cmp
dec
xor
sti
shrl
dec
lods
fwait
mov
cmpsl
adc
cmp
dec
push
stos
xchg
cmc
dec
dec
mov
mov
movsl
lret
or
jbe
cmp
jae
inc
fdivr
xchg
lahf
test
push
xchg
jp
jno
and
imul
mov
lcall
ror
cwtl
sub
dec
dec
pop
rorl
jns
sbb
adc
xor
mov
dec
jno
jge
daa
xor
xor
sub
mov
cli
jmp
loope
jmp
mov
fs
fidivrl
cmp
aas
and
mov
xchg
iret
movsl
fidivrs
dec
fcmovbe
xchg
mov
outsl
xchg
and
cld
adc
gs
fimuls
adc
xchg
shll
jne
adc
repnz
dec
out
pop
cmp
jbe
stc
lahf
sub
loop
cmp
jae
pop
mov
addr16
jbe
imul
lret
mov
pop
lds
sbb
mov
fadd
cli
leave
inc
xor
jne
ja
jmp
jg
push
imulb
ss
xchg
add
xchg
scas
mov
stos
aaa
add
mov
popa
addr16
xchg
pushf
lods
clc
mov
call
mov
add
addr16
out
fsubl
xor
shl
mov
add
dec
mov
insb
data16
fsts
sti
xchg
enter
pop
bound
xchg
mov
fwait
test
xchg
cmp
mov
cmpb
jo
adc
jnp
mov
je
icebp
lods
push
and
clc
adc
aaa
xchg
or
jg
iret
fidivs
shl
sbb
and
mov
lds
lea
addr16
jo
push
call
test
fwait
iret
jb
mov
pop
lret
dec
fstpl
jae
test
jno
jg
mov
pop
imul
int3
pushf
mov
pop
rcrl
in
cmp
adc
xchg
xchg
out
add
push
xchg
add
inc
jns
push
mov
dec
cmc
out
dec
mov
cmp
push
test
ss
xor
js
cmp
push
mov
lar
in
xor
fildl
scas
fdivl
and
js
or
pushf
ljmp
jae
push
and
mov
push
sub
iret
std
mov
mov
popa
ljmp
sub
push
pop
xchg
sbb
push
dec
push
popf
pop
push
arpl
inc
and
xchg
add
xor
xchg
push
outsl
ror
call
loop
rolb
xor
cmp
push
push
in
stos
sbb
arpl
fld
dec
lahf
daa
gs
ret
push
xor
mov
rcrl
ds
pop
decb
and
mulb
in
std
adc
adc
addr16
mov
ljmp
xor
call
pop
loopne
mov
fwait
adc
inc
cmp
lahf
add
pop
mov
test
rclb
add
xchg
inc
roll
loop
mov
sahf
insb
adc
pop
stc
daa
iret
xchg
test
mov
adc
mov
cmp
call
and
adc
push
addr16
lahf
mov
fldt
nop
adc
jmp
lods
add
pop
in
mov
pop
adc
neg
in
popf
mov
movsb
int3
shll
push
cmp
push
dec
cli
ja
add
mov
repz
lods
mov
push
and
and
pop
repnz
xchg
scas
jns
inc
mov
xor
jae
pop
fisttpll
mov
add
xchg
pop
sub
test
and
and
ja
in
lock
hlt
dec
mov
sbbb
mov
aam
mov
jmp
xchg
adc
inc
test
adc
fwait
jo
fbstp
lds
add
fimull
into
lret
repz
mov
xchg
and
imul
rolb
loop
xchg
fbld
push
stc
scas
sbbl
popa
inc
lret
pop
jbe
or
frstor
les
jnp
sbb
scas
scas
loopne
divl
xchg
leave
dec
mov
cmc
sub
mov
or
test
add
push
or
bound
mov
cmp
xchg
jno
mov
push
test
sub
cmp
pop
push
cmp
jbe
sbb
scas
jbe
aam
adc
fsubrl
fisubrl
and
test
rclb
lock
lret
inc
sub
inc
lods
in
in
out
sub
out
sbb
push
push
cltd
mov
test
mov
outsb
cmp
sub
call
xor
xor
ss
enter
mov
cmp
mov
rorl
mov
xchg
pushf
xor
out
add
test
ror
cmp
push
adc
insb
pop
mov
jb
bnd
dec
or
add
stc
xchg
dec
arpl
iret
hlt
stos
or
ret
ret
lods
xchg
mov
mov
mov
mov
add
sub
lock
xor
push
rcrb
jne
test
xor
sarb
inc
jne
fnsave
fidivrs
fidivrl
xor
xor
push
nop
fbld
fidivrs
pushf
lcall
fldt
lods
and
leave
cmp
xchg
dec
mov
sub
dec
cld
test
inc
push
push
mov
fidivrl
pushf
stos
mov
inc
mov
js
cmp
fisttpll
int
and
scas
mov
rorb
sbbb
leave
xchg
xchg
lcall
push
add
fnstcw
mov
cmc
xchg
pop
inc
popl
mov
lea
cmp
gs
scas
into
or
jnp
and
in
leave
inc
gs
push
xor
cmp
loop
fildl
shll
lret
orl
xor
add
outsb
out
mov
clc
mov
push
rolb
jmp
ret
movsb
cmc
mov
and
fisubs
mov
sub
pop
sahf
add
mov
fdivrl
out
mov
outsb
xor
xor
or
xchg
gs
mov
rcll
orb
xchg
aam
fs
mov
aad
andb
add
inc
jno
xor
in
ds
jmp
xor
or
inc
mov
mov
data16
mov
test
add
pop
push
movsl
outsl
push
push
jns
sub
sti
test
add
inc
or
shr
sbb
sbb
and
dec
cmpsb
js
inc
inc
sbb
test
jmp
add
or
xchg
lods
pop
mov
cmp
stos
daa
sub
lods
jecxz
test
pop
in
into
add
xor
repnz
mov
cli
or
push
daa
jbe
pop
cmp
gs
add
sbb
xlat
mov
mov
xchg
mov
fldt
lods
call
loop
adcl
lcall
push
fisubrl
pop
rolb
or
pop
call
push
push
insb
or
pusha
mov
iret
out
jno
popf
lds
movsl
jo
ret
xchg
xlat
sahf
ret
loopne
push
shl
push
lahf
mov
ret
push
cltd
repz
xor
or
pop
scas
jo
aad
mov
repnz
pusha
cmp
ja,pt
outsb
adc
cmc
int
dec
pop
jp
dec
hlt
gs
fstpt
jg
xchg
ljmp
mov
loope
idivl
inc
aam
and
push
or
jg
int
into
jl
sub
jae
inc
and
sti
cmp
cmp
add
imul
cmp
bound
hlt
fwait
pop
pop
lret
popf
jp
xchg
clc
vpsllw
pop
xor
ds
jmp
jmp
dec
mov
mov
mov
and
mov
js
inc
out
push
sbb
rcrb
mov
je
or
push
enter
enter
and
mov
adc
fistps
push
xor
adc
and
lea
lds
mov
repnz
lret
fs
lret
xchg
xchg
mov
repnz
push
loope
jl
push
or
pop
rclb
shlb
popf
push
push
jo
rclb
and
add
cmc
mov
daa
stos
inc
jecxz
dec
sub
mov
sub
sbb
test
mov
mov
imul
sub
and
test
pushf
pop
mov
sbb
ret
sub
mov
pop
mov
cmp
pop
jno
popf
arpl
push
pop
jb
into
icebp
cmp
mov
cld
sar
xor
out
sbb
cmpsb
mov
push
in
cli
mov
or
aas
jl
inc
fisubl
loop
ja
lods
cmc
sti
mov
fisttpll
aas
cmp
add
dec
inc
mov
xor
adc
cmp
orb
push
loop
sub
adc
add
jne
mov
daa
inc
scas
jb
jmp
push
mov
cmpb
mov
mov
daa
dec
out
scas
repz
xchg
jmp
and
leave
mov
xlat
xor
jecxz
fmuls
aam
mov
xchg
in
xor
inc
int
xor
or
out
fnstcw
pop
enter
hlt
repnz
adc
lret
cmp
pop
shrb
ja
and
rcll
sub
bound
and
outsb
push
inc
mov
dec
dec
ljmp
dec
je,pt
and
push
rolb
jo
sub
mov
pushf
and
shll
mov
or
fs
movsb
mov
mov
movsl
inc
inc
sbb
sar
sub
lret
sub
inc
dec
sbb
repz
adc
sub
subl
punpckhbw
femms
push
call
add
stos
ljmp
jl
jns
nop
xor
adc
jmp
je
add
fiadds
mov
popf
mov
pop
sarb
subl
sub
es
jmp
sbb
inc
and
pop
mov
pop
dec
and
xor
xchg
nop
scas
test
xchg
xchg
cld
mov
adc
mov
and
lods
les
outsl
add
shl
push
or
xor
ret
test
xchg
std
arpl
lods
mov
xor
leave
ss
xchg
leave
popa
bound
addr16
out
imul
and
xchg
mov
in
shll
pushf
insb
arpl
sub
fimull
or
into
cmovae
js
stc
mov
loope
insl
in
sbb
xor
stos
jnp
pop
mov
sub
mov
mov
dec
aad
or
push
enter
cmp
mov
pop
imul
ficompl
sti
fmull
push
add
mov
pop
fidivrl
shlb
xchg
inc
insb
rolb
ds
mov
jl
lret
mov
xchg
dec
test
cmpsl
mov
mov
stos
adc
sbb
pop
stos
inc
ja
add
mov
lret
mov
rclb
inc
mov
ffree
xor
sbb
loopne
mov
add
test
push
fildl
movsl
xor
adc
adc
jb
push
jg
jnp
out
loopne
shr
js
aaa
xor
test
fldenv
sti
pop
and
icebp
mov
inc
in
push
cmp
shll
jle
inc
inc
jmp
mov
data16
mov
outsb
push
cmp
xchg
sbb
dec
out
inc
fistl
mov
clc
add
sub
add
dec
test
js
andl
sbb
sbb
add
mov
pop
hlt
mov
popf
and
lcall
sahf
js
daa
imul
jecxz
jns
lds
mov
or
roll
pop
sbbl
mov
inc
std
cmp
push
adc
lock
sbb
ret
fsts
cmp
adc
aam
xor
pop
loop
iret
cmpsl
jbe
mov
push
xchg
mov
jp
repz
dec
add
add
std
lods
or
cmp
dec
jnp
sbb
out
es
les
orb
or
mov
xor
leave
dec
repz
push
push
push
mov
xchg
test
and
imul
shl
push
mov
fwait
or
dec
test
sti
ja
dec
outsb
add
leave
jnp
mov
subb
jnp
sti
and
or
push
cltd
xor
inc
mov
mov
xchg
push
jge
dec
or
jle
adc
pop
mov
ss
sbb
push
fisubs
gs
xchg
and
enter
pcmpeqb
xor
stos
mov
repz
sarl
ret
loopne
jge
mov
jmp
mov
jbe
fyl2x
mov
cs
jl
push
cld
xor
or
enter
mov
jmp
or
fmul
rcrb
dec
idiv
andb
pop
popa
dec
sarb
dec
mov
ss
call
mov
test
jns
xor
jae
xchg
jne
pop
cli
mov
dec
mulw
fbstp
lret
push
pushf
add
xchg
xchg
xor
ds
fsub
mov
jmp
mov
pop
ljmp
push
js
lret
lock
imul
xlat
or
clc
sbb
sbb
mov
ja
rorl
stos
dec
dec
lcall
into
push
out
stos
dec
dec
mov
cli
mov
out
stc
in
sub
les
imul
scas
fisubl
fwait
outsl
lcall
xor
dec
fwait
mov
adcl
push
out
nop
xchg
ret
inc
lods
mov
stos
jge
xchg
add
xchg
cs
push
mov
mov
pop
mov
pop
mov
popa
data16
hlt
push
inc
out
js
push
hlt
or
xchg
push
fmuls
add
mov
dec
pop
adc
xchg
lcall
sub
popw
int
dec
mov
pop
cwtl
and
loopne
push
jbe
mov
xor
sbb
add
adc
jnp
and
or
ret
cld
int
dec
fnstcw
mov
inc
loop
enter
iret
or
je
dec
imul
ret
mov
push
stc
lock
push
insb
rorl
test
mov
cmp
outsl
aaa
xlat
mov
lahf
std
inc
xchg
xchg
popa
pop
pop
mov
popf
ret
mov
imul
pop
jmp
add
fs
jnp
insb
fidivrl
mov
loop
pop
jle
imul
es
lea
dec
test
mov
cwtl
and
jb
addr16
or
cmpb
mov
jbe
ret
jmp
sub
inc
xchg
dec
nop
mov
aaa
scas
movb
fstpt
btc
test
mov
stc
dec
jbe
xchg
outsb
cs
cmp
cmp
iret
pop
jno
xchg
ljmp
je
push
mov
sub
in
xorb
sub
push
clc
and
mov
push
push
adc
add
inc
out
in
lods
data16
mov
aam
cltd
lea
orb
mov
rclb
pop
fnstcw
and
mov
mov
fistpl
enter
outsl
mov
ds
jg
cmp
and
mov
mov
dec
lock
sub
sbb
movsb
xor
mov
lar
out
ficoml
outsb
aad
cs
xchg
dec
lds
or
mov
and
stos
push
aaa
add
adc
ss
sub
scas
mov
or
nop
insb
std
imul
or
das
mov
adc
pop
add
bound
int
cli
nop
nop
dec
test
imul
jno
mov
and
or
into
push
cmp
cmp
insl
in
mov
lock
jns
mov
iret
popf
pop
je
xchg
dec
dec
nop
jb
xor
add
jno
test
adc
adc
xor
fisubl
lcall
lods
test
fs
adc
xchg
shr
lds
lods
inc
and
sub
lock
dec
loopne
push
mov
out
sub
mov
jmp
repnz
mov
int
push
xchg
jo
cmpsl
jl
lods
fisttpl
out
sbb
stos
dec
roll
or
adc
aam
add
sahf
jo
sbb
repz
sahf
and
inc
jns
push
ljmp
sbbb
arpl
bound
scas
filds
andb
or
dec
add
jbe
push
inc
test
clc
mov
push
lods
iret
inc
stc
push
adc
movsb
fxch
imul
cltd
sub
sbb
sub
mov
aas
lret
push
cltd
jl
mov
ret
mov
enter
outsb
lods
fimull
adc
sbb
jg
and
jb
add
jecxz
add
aas
gs
inc
iret
inc
mov
ds
mov
pop
inc
add
cs
rcr
mov
or
and
inc
pop
cmp
jle
lret
sahf
lods
ja
jns
xor
aas
cmc
fimull
popa
inc
sub
int3
cmpl
mul
ret
adc
xlat
jb
inc
push
or
sub
push
rcrl
sub
lea
push
adc
scas
pop
cmp
xchg
cmp
ljmp
mov
push
pop
jbe
insl
dec
mov
or
dec
push
insl
fs
mov
mov
lahf
jecxz
je
cs
insb
pop
cmpsl
sbb
pop
xor
and
sbb
pop
xor
xor
je
push
cmp
xlat
inc
repz
push
rcll
ror
daa
or
mov
push
sbb
pop
stos
mov
push
sub
fsubs
push
cmp
lock
jg
adc
or
jae
lea
ficomps
in
or
mov
xorl
dec
cs
int
inc
or
fsubr
arpl
push
das
icebp
pop
das
ljmp
push
mov
push
ds
dec
arpl
push
and
sbb
pop
fistps
ljmp
and
mov
inc
mov
and
pop
and
ds
pushf
sub
pop
mov
lods
push
dec
mov
mov
sbb
xchg
cmp
inc
jmp
imul
dec
inc
pusha
push
xlat
outsb
adc
xchg
and
lds
je
int
inc
aad
repnz
aas
popa
xchg
xor
sub
jmp
mov
pop
mov
dec
inc
scas
dec
cwtl
xchg
sarl
sub
sub
movlhps
movsl
out
cld
js
test
cmc
out
stc
sti
aam
xlat
jge
push
test
sahf
push
mov
pop
inc
iret
adc
scas
fwait
add
sbb
cmc
aaa
or
movsb
iret
cmp
add
dec
lds
and
inc
pusha
mov
shl
stos
cmp
jae
ret
dec
xchg
mov
enter
orb
cmp
push
push
stos
sbb
cmp
xor
mov
shrl
ret
ret
popa
add
arpl
and
mov
insl
rorl
and
es
nop
jecxz
stos
xchg
sbb
dec
clc
hlt
jno
rcl
sub
pop
xchg
sub
cwtl
mov
adc
xchg
loopne
xor
push
add
inc
xor
fstps
pop
jo
arpl
addl
and
int
out
mov
mov
repz
jge
push
lsl
aad
test
push
jae
mov
add
adcb
xchg
pop
orb
pop
fsub
mov
lods
jmp
ret
stos
mov
imul
and
fisubs
imul
test
aaa
insl
loop
mov
fiadds
adc
aaa
test
sbb
push
idivb
pop
xor
push
in
mov
sub
push
mov
mov
enter
mov
call
or
pop
jge
movsl
insb
dec
and
jmp
stos
xchg
cmc
mov
and
stc
test
xor
repz
std
fucomi
outsl
pusha
xchg
push
jbe
and
push
mov
les
xor
adc
sbb
dec
inc
or
and
iret
sub
cmp
inc
sub
xchg
ret
inc
shll
cmpsl
xor
lcall
add
out
sarb
mov
into
imul
mov
mov
mov
push
js
mov
cmp
dec
outsl
cmp
je
fldl
sarl
aam
xchg
xchg
subl
lret
js
mov
cmc
lret
push
outsb
mov
ret
iret
stos
aam
cmp
pop
jge
cwtl
mov
add
lret
push
cs
test
stos
je
int
test
jno
test
inc
rcll
add
push
aaa
or
mov
mov
lods
es
xor
notb
cltd
lods
pop
in
daa
lret
dec
jns
aad
in
jl
cmp
jae
sbb
pop
enter
xlat
or
jnp
mov
les
or
fs
jo
add
inc
aad
jmp
js
sbb
stos
mov
mov
xor
dec
mov
fdiv
jle
push
push
push
mov
movsl
and
mov
mov
sbbl
xchg
out
inc
pop
mull
pop
cmpsb
jle
inc
and
shrl
pop
sub
jmp
call
icebp
fwait
jecxz
addr16
cmpsl
cmp
xchg
pop
insb
test
pop
add
push
iret
jo
lret
mov
xchg
mulb
dec
mov
push
aas
xchg
sbb
pop
les
jbe
and
gs
les
xlat
pop
pop
aaa
mov
lock
adc
sub
mov
iret
in
push
nop
mov
lds
lret
add
test
es
in
leave
push
inc
push
jb
pusha
cmp
jbe
or
hlt
out
stc
mov
xor
bound
adc
dec
ret
cmpsb
movsl
mov
inc
jns
testl
mov
push
cs
xchg
jmp
sub
ljmp
ljmp
icebp
repnz
and
and
inc
std
mov
dec
push
inc
cmc
jg
mov
pushf
aad
repz
shll
mov
mov
pop
or
movsl
xchg
xchg
cs
clc
cmpsl
dec
push
push
jecxz
cli
add
movsb
sbb
xchg
adc
lret
push
lret
enter
sbb
pop
int
mov
mov
jmp
sbb
or
jb
nop
mov
cltd
add
or
xorb
push
sub
sbb
or
in
adc
sbb
xchg
jle
and
cmp
ljmp
loope
pop
jno
stos
sub
int3
cmpl
cmp
outsl
sub
or
xchg
ficoml
add
sbb
lret
sub
leave
rorl
and
dec
repz
push
xchg
mov
dec
sbb
iret
imul
dec
out
ds
mov
dec
mov
inc
or
movsl
std
xlat
subl
jge
rcrb
mov
repz
mov
test
cltd
out
adc
pop
xchg
cld
sbb
mov
sub
addb
xchg
inc
hlt
xchg
jecxz
test
xorl
mov
rorl
push
dec
xor
js
sbb
xor
xchg
hlt
loop
mov
out
icebp
sbb
sbb
cmpsb
dec
adc
inc
das
pop
sti
xchg
and
call
pop
cmpsl
mov
sbb
pop
andb
ret
cwtl
movsl
push
sub
mov
mov
pusha
pop
arpl
xchg
xlat
pop
push
inc
nop
sahf
push
cmpsl
mov
out
add
pop
adc
iret
cmpsb
filds
push
adc
and
adc
push
mov
jo
sbb
cmp
ss
push
ret
sbb
dec
push
fnstcw
mov
mov
push
sbb
dec
or
testl
outsl
jmp
stc
xchg
and
ss
into
negb
push
loopne
repz
leave
mov
fildl
adc
xor
ror
mov
aas
loop
dec
push
lcall
cmp
es
xchg
push
cli
adc
mov
cmc
xor
imul
shr
test
shl
dec
les
out
push
sub
repnz
adc
push
xchg
insb
mov
cmp
pop
ljmp
cmp
ss
lock
lods
jle
mov
cltd
pop
mov
cmp
mov
xchg
pop
aad
test
add
movb
mov
icebp
adc
cmp
ss
cmpsl
shrl
cli
push
mulb
clc
lahf
sti
stos
push
lds
xchg
sbb
in
js
xchg
aad
dec
fsubrl
ret
add
lret
and
sahf
mov
xchg
push
xor
test
mov
sub
daa
push
shll
xchg
cltd
mov
push
cld
nop
and
addl
jg
mov
add
divl
ret
cmp
std
jmp
test
fst
mov
insb
popf
push
dec
aaa
add
int
mov
out
divl
cmp
xor
push
xchg
into
inc
add
dec
mov
shrl
lret
cmpl
xchg
lods
bound
mov
push
jns
jno
hlt
mov
add
xor
lods
data16
push
dec
adc
cltd
xchg
jae
repnz
bound
mov
test
fwait
shll
mov
cmp
mov
xchg
mov
sub
jp
mov
scas
int3
add
mov
push
mov
pop
sub
cltd
dec
cld
mov
jmp
jbe
add
dec
arpl
or
out
dec
xor
jecxz
test
xor
and
jne
test
lods
sub
mov
pop
pop
dec
ja
mov
inc
push
dec
imul
popl
bound
xlat
mov
add
xchg
cli
jbe
dec
or
sub
push
or
int
mov
shll
sub
push
lcall
adc
negb
mov
les
cmp
or
sbb
jecxz
aaa
xchg
cmp
mov
xorl
aad
push
push
and
cld
fildll
dec
ret
add
adc
and
mov
das
lods
mov
sbb
loope
pusha
outsl
ficoms
pop
adc
inc
cmpsl
mov
outsl
add
out
xor
mov
mov
jmp
or
daa
and
cli
movsb
sub
clc
pop
mov
push
hlt
mov
in
movsl
push
cmp
mov
mov
or
inc
xchg
nop
mov
in
bound
cwtl
xchg
addr16
loop
and
daa
pop
sub
adc
ret
pushf
cwtl
fwait
cmpsb
add
push
iret
xorb
sub
add
fwait
push
pop
xor
stos
out
cmpb
dec
cmp
call
xor
xchg
xchg
xor
mov
jne
andl
mov
fwait
add
push
adc
pop
mov
xchg
into
mov
icebp
pop
scas
stos
pop
ret
movb
cmc
ret
inc
inc
das
fwait
lea
mov
ljmp
scas
adc
adc
lcall
xchg
jo
cmp
push
scas
repnz
hlt
loop
jae
pop
mov
dec
dec
xchg
cmpsl
lcall
sti
cli
test
nop
loopne
fdiv
rol
cmp
notb
fs
lods
subb
cmp
movsl
or
mov
jnp
hlt
lcall
inc
faddl
fbstp
mov
cmp
rorb
lret
mov
inc
enter
les
xchg
xor
test
std
imul
cmpsb
fs
mov
je
push
test
adc
in
push
push
inc
rcl
out
addr16
mov
outsl
bound
push
cmpsl
pop
xor
dec
jno
push
neg
icebp
in
stos
push
inc
dec
xor
jl
ljmp
xchg
xor
mov
lods
add
xchg
adcl
or
insl
dec
je
cwtl
jg
loopne
pushf
push
fs
lock
mov
sub
mov
mov
outsl
mov
pushf
aaa
push
ror
inc
pop
cmp
and
imul
shll
sub
mov
dec
cld
pop
popa
pop
jmp
notl
push
mov
sub
sub
sub
sbb
inc
add
std
push
xor
aaa
push
cmc
or
jl
push
jg
pop
and
jle
std
sti
xchg
fdivs
cltd
and
fisubs
insl
or
fs
xchg
arpl
gs
je
and
loopne
inc
fisttpll
test
into
mov
shl
mov
lahf
fwait
jo
icebp
je
cld
rolb
std
lret
nop
sbb
jle
xchg
mov
adc
mov
mov
mov
mov
push
jo
lcall
dec
push
cmc
in
cmp
cwtl
xchg
rcll
cltd
nop
lods
sub
inc
dec
ljmp
cs
repz
insl
js
inc
mulb
push
cmp
xchg
mov
and
insb
cltd
rcrl
jl
jl
cmp
or
insl
repnz
cmc
cmp
jp
mov
jb
lahf
jge
movsb
jno
js
loopne
mov
sbb
ficoms
movsb
out
lods
mov
fistl
out
mov
jns
xchg
inc
mov
out
sub
insb
push
cwtl
mov
or
test
enter
xchg
adc
cmp
je
pop
mov
sarb
mov
into
mov
sbb
inc
jp
cwtl
add
fwait
cmpsb
pop
push
mov
mov
ret
mov
arpl
pushf
testb
and
push
data16
stc
cld
lcall
popa
cmp
pop
ds
inc
nop
lods
sbb
popa
gs
xor
movsl
jle
push
pop
mov
xchg
fs
mov
rcrb
push
out
sbb
dec
call
dec
xor
mov
pop
les
add
iret
test
imul
sub
pop
add
fcompl
mov
dec
out
je
mov
mov
mov
fidivs
dec
es
repnz
mov
fdivl
push
fiadds
xchg
push
movsb
repnz
cli
xor
add
xchg
mov
pushf
ret
outsl
cs
into
mov
repz
mov
test
mov
add
outsb
mov
or
cli
fnstcw
push
add
int3
add
adc
int3
xchg
fdecstp
cmp
aam
aaa
mov
pop
pop
int
lods
push
inc
push
jmp
mov
lods
test
subl
push
fs
sbb
daa
cmp
adc
mov
xchg
mov
in
divl
add
cmpsl
fdivl
js
push
inc
mov
cmp
xor
lret
mov
add
jecxz
sahf
and
icebp
push
cmc
inc
movsb
mov
stos
adcl
xchg
das
mov
ja
out
sbb
inc
inc
sbb
repz
and
loop
cli
or
and
add
mov
gs
pop
mov
in
add
ljmp
mov
stos
aad
cmp
minps
icebp
inc
or
push
adc
mov
incb
sub
mov
mov
sbb
jns
mov
xchg
fisttpl
fs
xchg
dec
add
mov
js
cld
loope
cli
mov
sahf
sahf
or
fs
or
cli
sub
sub
aad
daa
sbb
cmp
push
mov
int3
adc
push
or
sub
sub
or
enter
xchg
dec
sub
repz
mov
mov
mov
lea
mov
xor
mov
mov
int
sbb
mov
setle
imul
divb
sub
sub
push
pop
mov
adc
and
xor
mov
stos
cwtl
sbb
push
and
jne
or
lret
das
cli
rorl
pop
push
fmul
cmc
xchg
in
or
dec
jle
lea
push
jns
and
xchg
push
mov
mov
movsb
lahf
adc
int
jae
and
roll
jl
dec
xorb
decl
movsb
xor
jcxz
or
js
into
push
outsb
mov
mov
xor
aas
mov
lock
mov
out
ss
jo
out
popf
jg
xlat
xlat
sub
xlat
adc
imul
lret
scas
dec
stc
lock
dec
faddp
fs
lock
dec
xor
or
lea
gs
fwait
movb
hlt
mov
cmp
repnz
insb
fdiv
cmp
jns
add
enter
sbb
lds
test
push
roll
sub
push
pop
scas
mov
movsl
les
cmp
int
fisttps
fmul
and
ret
adc
sbb
mov
sbb
or
cmp
in
dec
cmp
imul
repnz
aaa
leave
shlb
mov
daa
and
cmp
lods
cmpsb
outsl
addb
xchg
cmp
pusha
pop
jge
gs
push
mov
out
push
neg
in
sbb
mov
ja
cli
and
pop
adc
das
sbb
fs
stos
ret
enter
add
imul
dec
nop
push
inc
fildl
insb
loop
dec
fmul
test
adc
mov
mov
cmp
loopne
popa
icebp
stc
sub
outsl
lret
pop
shrl
pop
sub
cmp
jnp
xchg
rcr
sbb
ds
adc
ret
icebp
and
dec
repz
les
mov
test
aam
inc
mov
imul
add
les
add
and
call
pop
or
push
fwait
dec
aam
mov
imul
lods
stos
aaa
or
stos
jp
pop
mov
loope
cld
cwtl
ret
in
pop
xorb
inc
dec
lods
pop
push
je
add
sub
jecxz
outsb
jns
xchg
lock
cmp
mov
push
ret
dec
lret
dec
lret
sub
iret
arpl
mov
fcompl
ss
std
dec
int
pop
or
fcmovb
or
lods
jecxz
ljmp
lods
mov
add
sbb
jmp
insl
xchg
sbb
cmpsb
popf
mov
add
insb
or
jmp
add
push
inc
pop
sahf
and
enter
xor
mov
push
sbb
and
inc
je
out
sub
inc
cmp
push
out
into
cmp
sbb
add
jae
xchg
xchg
sub
sub
cmp
sbb
inc
pop
cmpsl
fwait
add
sbb
repnz
icebp
mov
xchg
dec
mov
repz
outsb
jno
xchg
mov
xchg
test
inc
out
jp
rcrl
aaa
pop
es
xor
in
add
push
mov
cmpsb
sub
inc
mov
mov
dec
inc
add
stc
push
push
into
call
test
pop
jae
xchg
scas
and
fisttpl
push
popa
cmp
mov
fs
push
ret
xor
dec
movlps
lds
sub
jbe
fcomps
add
rcrl
out
and
imul
xchg
int
sbb
jl
lahf
mov
and
sbbl
out
adc
jle
jae
inc
cmp
sbb
xlat
jno
sbb
or
adc
and
xchg
cmp
pusha
sub
push
test
mov
xor
cmc
cmpsb
lret
ja
fucom
mov
xchg
imul
js
pop
mov
push
and
xchg
repz
mov
sub
dec
mov
out
gs
jo
jbe
mov
cmp
sbb
xchg
sbb
repz
lahf
pop
mov
dec
cmp
push
or
pop
or
imul
test
ljmp
ret
lods
pop
and
xor
push
fiadds
repz
xchg
jl
cmp
jns
or
cmp
inc
lods
in
sbb
in
dec
inc
cmp
stos
cli
adc
into
mov
pavgw
or
sbb
sub
rcrl
push
or
fsubl
mov
cmpsb
aad
sbb
cld
jae
pusha
enter
pop
sbb
cld
mov
out
mov
mov
mov
lds
clc
fs
pop
shrl
sbb
sbb
xchg
in
pop
fidivrs
and
push
js
and
adc
fcomip
pop
push
jge
add
mov
lret
mov
lcall
les
inc
into
outsl
mov
cltd
sbb
enter
roll
jbe
dec
lock
bound
jg
sbb
add
mov
or
push
inc
inc
mov
and
aas
mov
xchg
inc
xchg
das
cs
add
andl
gs
insb
int3
lods
xchg
lods
mov
add
dec
push
fcoml
repz
dec
dec
js
mov
imul
add
insl
pop
inc
or
add
jl
sub
dec
or
cmpsb
notl
insl
xchg
pop
hlt
and
add
lds
rol
rorl
nop
lods
and
inc
pop
lcall
popa
cmpsl
add
rcll
mov
cmp
xchg
aas
hlt
inc
imul
mov
movsl
jp
repz
pop
mov
push
nop
int3
popf
fiadds
push
fs
jns
inc
inc
mov
xor
hlt
lahf
jnp
cmpsl
test
mov
stos
ret
sub
mov
rorb
es
cltd
insl
stos
jg
lret
arpl
aaa
aam
pop
or
stos
add
mov
add
int3
sbb
sbb
arpl
push
adc
lds
push
enter
popf
fistl
fisubrs
shll
out
mov
fdivl
add
xchg
lock
nop
sti
cli
jbe
in
sub
daa
ret
clc
rcll
call
or
dec
fcmovne
jp
pop
aam
add
das
or
push
les
jmp
lds
lock
jge
cmp
fcomps
lahf
pop
pushf
lahf
xor
inc
and
inc
sub
cld
sub
pop
xchg
add
push
cmc
dec
imul
or
mov
pushf
rclb
xor
xor
mov
icebp
mov
icebp
xlat
scas
cld
jp
movsb
xchg
push
popf
xchg
add
sbb
push
mov
adc
lcall
out
in
bound
lret
test
lahf
addb
lds
ja
xor
sar
mov
adc
stos
outsb
ljmp
mov
xor
cmp
bound
dec
or
jge
addb
insb
xorl
es
int
cmp
jnp
test
bound
out
push
pop
icebp
clc
jmp
fucomi
movsb
jp
mov
cs
movsb
mov
cli
and
test
lods
movsl
mov
mov
test
sar
fcoml
push
rorb
js
inc
sbb
mov
adc
and
fld
add
call
pusha
or
xchg
and
out
pop
in
lods
leave
add
mov
add
dec
test
jecxz
mov
xchg
push
jle
dec
xchg
cs
es
daa
pushl
icebp
inc
jmp
rcl
fsubr
and
stos
inc
jge
sub
cmp
jns
sar
in
jo
mov
scas
xor
push
arpl
fiaddl
mov
mov
mov
jl
divb
jbe
pop
ret
sub
mov
cli
or
lret
rcr
loopne
sahf
sbb
sub
frstor
aam
repnz
clc
test
in
loopne
jp
mov
jg
mov
enter
mov
outsb
sub
rorb
adc
jae
add
sarb
jecxz
sti
pusha
push
add
in
cld
adc
in
and
addr16
in
hlt
lea
inc
pop
or
loopne
push
jae
jbe
mov
adc
cmp
rcrl
ficoms
mov
mov
jl
testl
lds
aad
adc
mov
fdivrs
jmp
mov
stos
or
cmp
cwtl
scas
xor
movsb
jne
and
mov
repz
gs
insb
imul
rolb
ret
sub
or
xor
xchg
test
dec
dec
jnp
sbb
cmp
aaa
shll
push
and
pop
fimull
jb
add
sub
in
xchg
mov
in
fidivs
pop
sub
test
lret
and
jo
cmp
jl
xchg
insb
sbb
dec
testb
xchg
jbe
scas
sbb
and
xchg
push
xor
and
push
ss
xorb
dec
push
sbb
cli
das
sub
das
or
pop
lcall
jo
outsl
not
in
movsb
inc
xchg
mov
out
out
divb
sub
andl
mov
sti
sbb
sbb
add
mov
lea
adcl
and
and
clc
dec
jle
in
lret
jg
xchg
ja
in
push
imul
mov
sub
sub
nop
or
push
jg
lock
lret
mov
out
push
adc
roll
icebp
pop
mov
cmc
and
add
xchg
js
lods
jns
mov
or
push
xor
lcall
sub
sar
push
push
movsb
adc
enter
fists
xchg
stos
jbe
inc
std
dec
add
mov
cmp
or
adc
dec
movsl
aas
mov
pop
cmp
in
inc
lcall
and
mov
push
fimuls
mov
jl
lret
aaa
lret
xchg
pop
jp
test
out
pop
aas
cmp
push
mov
test
push
pop
aas
pop
adc
adc
icebp
aas
rcrb
pop
add
sbb
into
dec
leave
enter
mov
jno
mov
data16
inc
aad
push
jno
cmpsb
mov
movsb
mov
jae
sbb
pop
jbe
repz
and
shl
sbb
or
out
fistps
mov
inc
ja
cmp
ds
icebp
add
cltd
idivb
imul
frstor
and
mov
inc
das
pushf
mov
aaa
roll
xchg
aas
adc
cmp
push
icebp
jns
faddl
sbb
sub
adc
sub
push
lret
cmp
and
je
ret
data16
xchg
jne
and
pop
mov
stc
rorl
mov
push
or
xor
mov
xor
pop
test
addl
push
cmc
dec
fstpt
insb
sbb
xchg
popa
or
mov
mov
cwtl
mov
pop
mov
mov
dec
inc
inc
xor
out
movsb
mov
cmp
add
ljmp
mov
stos
inc
lret
cld
xlat
jp
cmp
dec
and
sbb
fsts
aas
lret
mov
sbb
div
push
lock
lret
push
adcb
inc
mov
sub
xchg
inc
sub
xor
xlat
and
sbb
repnz
int3
cltd
add
sbb
mov
sbb
sarl
xor
sbb
pop
pop
pop
mov
repz
pop
jmp
test
or
sub
jecxz
sbb
test
push
jo
ret
add
adc
xor
popf
out
or
mov
push
sub
call
in
movl
push
xchg
xchg
adc
icebp
push
adc
cltd
out
sarl
dec
or
lock
inc
fimull
add
icebp
sahf
cmp
push
out
push
aad
mov
push
xchg
or
ljmp
pop
pop
mov
ss
out
call
dec
std
ficoml
and
lea
sub
and
lea
dec
ss
lock
mov
movsl
push
mov
subb
ljmp
cmpsb
pusha
call
jmp
in
adc
xor
adc
call
stos
mov
jae
repz
pop
lods
jne
or
mov
mov
int
icebp
fwait
cmp
test
jnp
in
inc
aad
jne
cmp
sahf
pop
or
out
movsl
add
ret
into
dec
cmp
addb
mov
mov
fxtract
fnsave
mov
jae
add
push
cmp
cmpl
add
enter
test
inc
add
or
loopne
sti
sub
pop
xchg
mov
lock
cmpl
and
fisttpl
dec
lea
cmp
in
and
lret
imul
pop
out
aas
jne
pop
es
xor
add
inc
add
dec
popf
inc
jns
mov
aad
mov
mov
xchg
popf
jb
pop
shlb
mov
cwtl
out
cmp
into
insl
sarl
outsb
jb
pop
xor
and
or
and
test
movl
dec
outsb
rcrb
inc
sbb
nop
out
or
sub
jo
lock
jnp
adc
outsb
int
and
ret
dec
jecxz
ficompl
in
or
mov
cmpsb
fucom
hlt
aam
adc
hlt
and
movsb
mov
xchg
mov
aad
mov
jne
push
push
adc
idivb
aas
dec
loop
mov
mov
sub
out
mov
fucomi
push
scas
xacquire
xor
scas
jnp
shr
orb
bound
xor
js
xor
test
imul
cmpsb
and
push
cmp
popf
jge
or
xlat
stc
sbbb
adc
popa
lcall
pop
mov
push
clc
jo
push
jl
aad
push
xchg
dec
jb
pushf
push
push
in
idiv
outsl
stos
adc
repnz
inc
jecxz
imul
cmp
dec
jb
icebp
pop
mov
jl
push
jo
std
shl
dec
pop
bswap
popa
out
lds
xchg
cltd
es
jmp
pop
add
mov
mov
push
out
nop
ljmp
arpl
imul
aaa
in
jne
in
enter
ret
xchg
insl
lret
fstps
mov
xchg
sbb
dec
addr16
xrelease
mov
xchg
es
sti
pop
addr16
sahf
out
cmp
dec
lock
es
push
pop
repnz
xchg
mov
pushf
push
dec
and
icebp
cli
dec
push
jl
xor
jb
inc
addl
dec
xchg
push
mov
test
stos
inc
in
jecxz
mov
sbb
add
leave
shlb
or
mov
pop
adc
cmp
insb
lods
cmc
xchg
repz
push
sbb
int
mov
sub
inc
aad
fs
imulb
nop
negb
outsb
int3
mov
xchg
push
daa
pop
xchg
add
add
xlat
cmp
xchg
imul
aad
dec
test
jmp
cld
repnz
jno
pushf
int3
pop
and
stos
xor
adc
sbb
out
sbb
dec
xchg
jae
rolb
test
fwait
xchg
xchg
adc
adc
in
aam
sub
or
xor
jnp
or
mov
cmpl
push
int
enter
jl
stc
adc
dec
sbb
jl
and
xor
sbb
mov
ljmp
test
test
push
push
into
push
rcl
les
sbbb
ret
push
sub
mov
inc
call
mov
cmp
mov
mov
xor
fdivr
movsl
cwtl
lret
int
ds
dec
stos
jns
lcall
cld
ds
enter
pop
pop
sub
add
outsb
test
nop
test
pop
pop
push
pusha
loope
pop
lcall
xchg
mov
data16
sahf
cld
adc
std
outsl
hlt
das
fcmovb
inc
dec
xor
xor
sbb
out
mov
xor
dec
in
ret
pusha
psrlq
and
xor
arpl
mov
enter
nop
xor
cmp
mov
fstl
sub
dec
xor
movsb
adc
push
mov
iret
mov
enter
in
inc
fldt
bound
cmpsl
dec
pop
sbb
sub
mov
cltd
int
int
std
test
sahf
xchg
popf
or
and
insb
cmp
test
cmp
and
dec
push
mov
outsl
scas
xor
sarb
mov
sub
add
mov
imul
shrb
inc
mov
icebp
imul
dec
das
loope
out
xchg
cmp
lods
test
jge
sbb
or
jb
xor
push
push
mov
add
mov
xchg
sub
insb
loopne
mov
xchg
aam
sti
pop
push
std
dec
cltd
pop
push
vandps
push
xchg
jne
add
xchg
imul
dec
out
lock
cmp
je
sti
lahf
push
pushf
test
repz
mov
mov
xorb
lods
mov
cmp
stos
cmpsb
outsl
cmpsb
insl
stos
add
das
and
inc
nop
mov
mov
out
lret
and
push
mov
jnp
loopne
mov
sahf
in
sub
pop
mov
cmp
dec
inc
sub
xchg
push
pusha
jp
mov
pop
mov
clc
rcl
mov
jo
fistps
adc
int
arpl
js
mov
xor
push
dec
sub
mov
cmp
dec
inc
cmp
dec
shll
xchg
fldt
adc
movsb
mov
mov
lret
jb
and
cwtl
or
pop
mov
lcall
insl
add
aam
ficoml
movsb
dec
jg
repz
pop
iret
mov
negb
repz
add
jp
xor
addl
stc
ljmp
aad
hlt
xchg
out
and
mov
movsb
arpl
nop
scas
inc
mov
and
test
stos
or
ljmp
xlat
mov
dec
sbbl
insl
int
xchg
inc
adc
popf
inc
in
cs
or
sahf
shll
cmpl
out
enter
xorl
jo
push
xchg
imul
js
cmpsl
dec
mov
lret
out
pop
jp
mov
xor
into
jno
insb
fiaddl
jl
inc
dec
test
idivb
fnsave
xchg
mov
lods
fdivrl
sub
popa
dec
sub
pop
pop
xchg
fiadds
add
daa
aas
adc
push
mov
add
mov
xor
pusha
cmp
xchg
mov
xor
inc
dec
ds
arpl
out
fcoms
xor
lahf
adc
imul
cs
mov
or
fcmovbe
es
inc
idiv
pop
push
push
jbe
icebp
sub
stos
inc
inc
sbb
push
out
cmpb
pop
xchg
cmp
sub
adc
inc
subb
and
ja
loope
ret
in
pop
sub
xchg
in
shrl
das
test
push
dec
ret
push
mov
inc
out
arpl
cmp
lcall
loopne
add
dec
sti
inc
push
fistpll
pop
inc
or
push
mov
scas
addb
jne
out
cmp
test
adc
dec
mov
iret
movsl
insb
cmp
lods
mov
or
or
inc
inc
stos
mov
sub
shrl
mov
jnp
shrb
cli
jae
pop
stos
pushf
mov
mov
pop
lods
int
test
clc
cmc
sbb
out
test
and
movb
cmp
ret
rolb
jl
cmp
push
and
mov
hlt
xor
loop
lods
fs
jmp
outsb
xlat
shll
test
loopne
test
or
jl
idivb
mov
sbb
arpl
sub
cltd
mov
int
enter
clc
mov
dec
mov
jge
es
call
es
cmp
pop
mov
jnp
notl
lret
push
push
les
mov
aaa
loope
jbe
inc
in
mov
pop
dec
lsl
adc
mov
hlt
int
stos
or
push
lret
mov
lret
jnp
and
mov
push
aas
sbb
imul
add
test
lea
xor
push
xchg
jl
arpl
dec
or
cmp
xor
jnp
xor
outsl
pop
icebp
mov
sbb
mov
aam
pop
jne
insb
rcr
sub
stos
pop
dec
mov
jo
xor
pop
fists
lcall
pushf
add
out
xor
mov
push
movsb
mov
push
enter
lss
insb
xchg
lcall
leave
daa
aad
cmpsb
clts
dec
jl
add
aas
in
jns
jge
nop
stos
xor
imul
jae
hlt
sahf
in
mov
out
push
add
cmpsl
jle
aas
adc
shll
cmp
int3
mov
lods
lods
adc
testl
sub
loop
mov
nop
jae
and
insl
mov
pop
or
mov
out
jle
loop
and
or
fldcw
and
lock
adc
dec
sub
inc
sbb
cld
push
mov
jmp
insl
mull
lds
lods
stc
add
je,pn
out
mov
and
insb
fcmovu
sub
js
add
or
leave
fsubrl
ror
push
jo
pop
shlb
test
popf
into
mov
sbb
pop
sbb
cmp
cmp
sbb
int3
scas
push
adcl
popf
roll
in
fistpl
fldcw
int3
addl
mov
not
fmull
cwtl
inc
aam
ret
andl
lcall
adc
mov
mov
into
pop
scas
cmp
jae
push
ror
lahf
call
lea
and
xor
mov
inc
dec
pusha
push
mov
xchg
fisubrl
xchg
xchg
dec
rorb
mov
bound
mov
sub
gs
adc
inc
or
cmpsl
call
or
insb
shrl
cmp
add
cmp
loope
stos
cmpsl
jbe
fidivs
and
mov
arpl
out
lds
dec
cmp
les
jno
cmp
sub
mov
popa
and
or
test
fcom
mov
sub
jbe
and
ljmp
sbb
lahf
lds
fwait
cmpsb
push
cmp
movsl
sbb
push
gs
mov
mov
imul
mov
out
test
push
sub
in
cmp
and
jp
adc
scas
push
rcl
adc
daa
jns
call
push
mov
test
push
dec
movsl
data16
cmp
mov
test
dec
push
shlb
cmpsl
enter
into
add
aad
jmp
movsl
lods
mov
rcl
js
int
and
xor
jne
iret
insb
jb
lock
arpl
lods
loop
jmp
add
adc
inc
lock
sub
pop
adc
aad
and
adc
pop
andb
nop
xor
sbb
pushf
sar
mov
jne
fldt
out
popf
mov
lcall
ja
sbb
jbe
shll
cmp
in
lcall
idivb
ret
mov
lret
lahf
pop
out
push
sti
loop
push
add
in
mov
dec
mov
xor
mov
test
in
mov
push
and
sbb
sahf
add
xchg
mov
push
dec
push
xlat
pop
lea
in
mov
mov
adc
sub
pop
mov
mov
test
cwtl
imul
add
out
loope
pause
push
mov
pop
cwtl
xor
xor
mov
out
or
adcl
arpl
insl
push
dec
or
pop
add
mov
pop
dec
in
or
push
popf
push
ror
fnsave
addb
or
les
clc
out
das
mov
insb
xlat
aad
scas
jmp
push
imul
pop
xchg
dec
outsl
cli
fstps
cs
je
xlat
jne
iret
sub
mov
push
and
mov
sbbl
mov
push
fists
adc
mov
cmp
fbstp
xor
or
mov
pop
pop
hlt
test
xchg
fsubl
andl
dec
xchg
loope
cmpsb
jno
dec
pushf
and
xchg
push
je
fnstcw
xchg
sub
int
xchg
jo
shlb
sahf
cmp
inc
push
xchg
packsswb
or
sbb
or
test
pop
incl
jo
or
or
push
and
scas
test
fstpl
xor
mov
hlt
arpl
ficoms
stc
cltd
iret
xor
jmp
mov
in
out
lahf
enter
push
add
pop
and
jnp
popa
dec
mov
sti
pop
gs
adc
jmp
imul
dec
std
fsub
pop
fmul
out
jmp
test
imul
cmpb
lret
sub
push
repz
jno
jnp
das
movntps
loop
inc
testl
jns
mov
cld
or
test
shll
pop
push
cmp
or
in
pop
jp
fucomip
inc
sub
sbb
pop
pushf
push
push
add
push
add
dec
adc
aam
daa
cltd
cmp
lods
or
testl
shrl
push
pop
ds
leave
sbb
mov
jp
pop
fwait
lcall
mov
repz
pop
and
xchg
in
dec
push
ret
push
and
xchg
sub
xchg
mov
inc
out
mov
pop
jmp
xchg
or
adc
jp
cltd
jno
enter
pop
push
adc
inc
mov
xchg
pop
jno
into
cmp
in
icebp
mov
mov
xchg
mov
push
mov
lea
std
jge
push
and
jge
sbb
mov
ret
pop
sbb
mov
mov
jns
mov
popf
cmpsl
pop
xchg
lds
insb
sub
mov
sub
cld
test
out
leave
sub
lret
sub
mov
sub
pop
mov
xchg
mov
fnop
cwtl
loope
mov
mov
pop
push
cmp
cld
pushf
stos
sbb
ss
outsb
add
arpl
dec
lock
out
test
movsl
ret
dec
imul
add
jo
mov
mov
jne
out
repz
mov
xor
or
push
pusha
sbb
loopne
cmpsb
xchg
add
or
cmp
cs
lahf
and
mov
jns
aam
pop
xchg
cmpl
jne
popf
cmp
repnz
arpl
jmp
popa
inc
cmp
cwtl
in
jno
cmp
aaa
jae
loop
jp
jo
add
jp
and
addr16
loopne
inc
js
inc
out
jne
sbb
xchg
xorl
inc
fwait
mov
sbb
and
inc
testb
andl
jb
inc
jl
subb
loopne
inc
test
mulb
loopne
stos
push
or
inc
adc
dec
xor
and
fnsave
push
mov
cmp
into
lock
scas
in
adc
popa
sub
repnz
pop
inc
cmp
in
xor
sbb
shr
pop
insb
clc
fisubrs
call
pushf
cmpsl
or
and
nop
xor
jns
cli
arpl
and
push
xchg
mov
mov
mov
dec
hlt
in
adc
cmp
dec
aas
shrb
xchg
es
jne
add
lret
lcall
nop
jl
fstp
ret
dec
sub
pushf
inc
test
aaa
fmull
dec
stos
and
sbb
cmpsl
ja
daa
mov
sbb
imul
or
or
decb
lcall
adc
jg
push
jle
xchg
jge
cmp
adcb
mov
xor
outsb
mov
sbb
test
cli
cmp
pusha
pop
inc
mov
inc
fucomip
and
mov
adc
add
out
out
arpl
pushf
jns
and
iret
into
xor
sbb
aas
pop
or
jno
xchg
pop
xchg
mov
jmp
and
repnz
jg
aad
cmp
data16
cmp
mov
stos
bnd
mov
sbb
xor
scas
and
std
push
in
rorl
out
xor
hlt
jmp
add
jmp
test
or
movsb
icebp
loope
repz
add
mov
arpl
inc
mov
gs
add
dec
cmpl
daa
pop
je
arpl
cmpb
dec
pop
jne
xor
push
mov
arpl
mov
xchg
lahf
adc
xor
aam
mov
popa
jmp
rorl
mov
cmpsl
out
xchg
loopne
sahf
xchg
push
popf
loop
mov
push
dec
mov
pop
inc
jbe
negl
mov
or
sub
pop
jge
out
jae
icebp
insl
hlt
vunpcklps
push
lods
xchg
lret
and
aam
adc
adc
pop
mov
fidivrl
sbb
inc
pusha
cmc
inc
in
ljmp
leave
mov
adc
nop
jne
mov
pop
xchg
clc
mov
push
sbbb
sbb
fistpl
repz
pop
pop
addb
js
pop
or
mov
push
fldl
sbb
jo
stc
jle
mov
mov
cmp
mov
dec
pop
mov
push
shlb
test
adc
pop
push
shll
mov
jno
out
xchg
mov
stos
cld
adc
std
sub
push
push
sub
imul
sbb
mov
push
aas
cld
loopne
test
ret
add
pop
push
push
enter
fnstsw
movsb
xchg
xchg
sti
insl
out
add
fnstcw
lods
div
imul
sahf
push
cmpsb
pop
pop
inc
mov
mov
repnz
js
push
mov
repz
cmp
shll
lret
stos
iret
je
add
adc
xchg
ret
pushf
fstpl
jmp
push
inc
inc
mov
aaa
mov
shlb
out
mul
rcl
xlat
or
ret
jno
repnz
push
fs
daa
shrl
aam
cmpsl
into
add
mov
and
pop
in
in
xor
ljmp
xlat
xchg
fidivrl
xor
mov
inc
test
cwtl
sbb
imul
cli
xor
loope
test
xor
orl
sbb
inc
ss
adc
add
out
ret
mov
mov
mov
frstor
mov
insb
mov
into
inc
scas
mov
icebp
jp
adc
xchg
cmp
sbb
dec
dec
test
add
mov
mov
popa
pop
mov
xchg
and
out
ret
push
je
stos
sahf
jo
xor
outsb
inc
dec
xchg
add
aad
and
jae
and
js
sbb
fldt
ret
push
mov
not
mov
jnp
xor
aad
aam
daa
mov
jmp
ret
inc
xor
sbb
in
mov
mov
loop
mov
mov
pop
xorb
push
mov
jne
push
xchg
mov
das
push
jnp
xchg
aam
adc
mov
adc
test
mov
push
jne
int
xchg
xchg
add
loopne
scas
push
or
jp
adc
call
xlat
inc
mov
js
out
mov
jb
pop
cmp
and
mov
das
sub
add
fldl
sti
ret
and
loope
mov
rcrl
mov
test
xor
inc
loope
orl
jp
aam
outsl
push
ficompl
aas
mov
popf
cld
or
in
sti
add
lea
movsb
jbe
shrb
or
cs
cmp
inc
xor
and
mov
and
xor
push
or
vmovntps
fistpl
pop
int
mov
push
out
jle
push
push
rcll
arpl
push
movsl
movswl
out
pop
push
mov
sbb
dec
imul
stos
loop
sbb
mov
pushf
jle
cmpsb
fucomi
in
jb
out
fwait
ret
aaa
fwait
sub
cmp
fcmovnu
push
hlt
dec
pop
mov
frstor
popa
fmull
loopne
fbstp
fadds
or
lret
pop
and
repz
mov
xlat
mov
push
test
scas
in
rorl
push
jle
xlat
fnstcw
ja
adc
cmp
lock
xchg
fs
test
dec
aad
or
sbb
inc
andb
xor
sub
add
movsl
jno
xchg
cld
rsqrtps
lcall
mov
xchg
in
cmp
mov
in
scas
paddd
jnp
dec
loopew
cmp
orb
imul
out
andb
sub
or
jmp
xor
incl
adcl
shll
mov
mov
adc
dec
mov
es
xor
mov
loop
sub
clc
xchg
xchg
adc
xchg
push
dec
mov
fcomps
js
mov
dec
movsb
loopne
sbb
adc
movsb
in
ret
sbb
fiaddl
outsl
repnz
and
ret
cmp
popf
lret
es
push
lahf
pushf
jge
aaa
fxtract
imul
mov
mov
xor
fs
rcrl
movsb
cmpsl
add
pop
jg
mov
scas
lahf
jle
cmp
mov
pop
mov
push
mov
ror
xchg
push
in
aas
fistpll
cmp
mov
int3
push
xor
jl
test
test
jns
loopne
xchg
pop
jne
movsb
adc
jbe
jge
add
repnz
fwait
mov
push
push
pop
shrl
movl
fldenv
lods
jl
xchg
inc
push
popf
push
out
subb
mov
in
jmp
inc
xorl
je
das
mov
pop
rol
sbb
repnz
rol
inc
data16
or
inc
mov
adc
mov
sub
icebp
cmp
mov
xchg
and
xchg
mov
and
cmp
outsl
daa
jo
mov
add
xor
addl
mov
cmp
lock
xchg
add
pop
pusha
mov
mov
push
lret
popf
ror
inc
cmp
out
test
mov
xor
xor
filds
or
stc
mov
jns
enter
cmp
loopne
and
stos
xchg
xor
andb
ret
mov
rclb
lcall
sub
adc
repnz
xchg
test
ret
mov
cltd
cmp
mov
mov
fists
int
sub
aam
xchg
andl
dec
mov
inc
mov
test
sub
push
pop
cmp
pop
adc
xor
call
cltd
or
sarb
lret
mov
jo
pop
push
stos
push
and
sbb
push
int
inc
mov
dec
je
pop
das
mov
in
shrl
sub
inc
pop
and
js
arpl
inc
ficompl
mov
in
sub
mov
push
pop
ja
cmp
cmc
inc
int
adc
rcll
or
testb
cmp
lods
and
imul
shlb
repz
sub
mov
and
pop
movsb
xchg
inc
pminub
fldl
bswap
jmp
cwtl
jg
adc
lods
push
jnp
pop
pop
rclb
and
outsl
jb
cmp
out
xchg
jg
push
ds
lret
mov
out
sub
jns
aas
pop
icebp
divb
pop
out
xchg
ljmp
mov
sti
push
jne
sub
sub
shlb
lret
ficoml
lret
mov
clc
inc
je
stc
filds
pop
and
popf
adcb
sar
es
lock
sub
fisubs
push
cmp
inc
fldenv
fisubl
lcall
hlt
imul
mov
jne
mov
les
adc
mov
cmp
jbe
mov
ljmp
dec
jecxz
lods
ficomps
sarl
rcrl
dec
aaa
adc
dec
dec
hlt
mov
cmp
ss
push
popf
lret
sti
cmp
jo
les
loope
sbb
lret
pop
dec
sub
outsb
addr16
sbb
adc
mov
mulb
mov
in
lods
ret
sbb
iret
dec
push
inc
jge
cmpsl
hlt
fistpll
adc
lret
xchg
cmpsb
push
lcall
jge
mov
cmpsb
sbb
insl
popa
fwait
mov
sbbb
fidivl
cltd
push
enter
mov
jae
or
stc
loopne
push
mov
insl
rclb
mov
jp
test
pop
sbb
les
addr16
in
xchg
scas
out
push
pushf
pop
cmp
or
popf
repz
add
gs
inc
add
fsubr
in
mov
and
sbb
filds
xchg
jmp
add
imul
and
popa
dec
xchg
dec
pop
dec
add
cmpsb
lret
bound
sub
dec
pop
xchg
cmc
jnp
mov
ficomps
mov
inc
js
cmp
jo
jb
testl
or
nop
and
jle
addb
jne
mov
sub
cmp
movsl
rcrb
cmp
mov
sub
fisubs
test
sub
push
pop
mov
js
insb
movsb
fildll
dec
testb
sbb
fimull
rclb
jae
mov
in
repnz
call
stc
decb
push
imul
leave
jno
sbb
mov
ss
loopne
lea
dec
test
pop
dec
mov
cmp
xor
dec
sti
and
cmp
repz
jno
sti
sahf
or
jbe
cli
sbb
and
xor
cmp
cmp
out
ds
fcomi
shl
call
dec
add
out
add
daa
mov
lahf
icebp
nop
push
mov
and
mov
out
xor
repnz
or
sahf
leave
test
iret
jno
loopne
xchg
rcr
push
int3
aaa
pop
scas
test
popf
out
jle
leave
fistl
bound
inc
mov
inc
dec
mov
mov
sbb
repz
aas
pushl
addr16
dec
xorb
inc
int
addr16
inc
js
sub
cmp
mov
xchg
mov
fstl
loop
stos
or
mov
iret
push
and
in
arpl
push
jl
and
lahf
push
hlt
add
enter
in
fwait
mov
sbb
mov
imul
fmuls
arpl
pop
sbb
cmp
out
es
inc
dec
cmp
cs
mov
loopne
sbb
or
lret
xchg
jbe
loopne
cltd
loopne
lock
jb
xor
fists
test
xor
cmpsb
bound
dec
mov
fcompl
je
or
push
push
jle
ret
mov
inc
or
inc
push
gs
or
pop
dec
mov
out
fs
mov
sub
shrb
cs
daa
sub
fcmovu
mov
test
push
push
adc
insl
call
test
jne
sbb
dec
cmp
mov
pop
push
push
sbb
inc
stc
xor
in
stc
pushf
mov
imull
maskmovq
notl
mov
sub
adc
sbb
mov
and
inc
xor
jb
ljmp
dec
out
clc
lcall
jbe
addr16
mov
push
add
mov
add
sub
add
shrl
mov
repz
xlat
sub
mov
clc
jnp
jbe
test
and
movsl
aas
push
bnd
sub
test
scas
cmpsl
addr16
mov
testl
pop
cld
jb
movsl
adc
jb
pushf
jo
test
inc
sub
stos
add
movsl
inc
and
sbbl
push
sbb
loop
jb
js
repz
sahf
int3
ret
push
aaa
ret
stos
push
iret
mov
or
mov
stos
mov
inc
in
jge
repnz
out
enter
sub
out
mov
add
mov
pop
dec
dec
and
xor
nop
push
mov
cmp
sahf
sbb
mov
adc
gs
shrl
mov
pop
test
fwait
idivl
je
out
sub
dec
mov
int3
into
rcll
lock
std
data16
xor
insl
xorl
mov
inc
xchg
sbb
pop
adc
cmp
cmpl
sarb
jmp
js
xchg
dec
or
out
aam
jmp
mov
cmc
or
xor
ror
sub
cmp
and
imul
loope
das
xorl
push
pop
push
stos
cmp
mov
add
push
sbb
mov
inc
loope
pop
clc
sbb
sub
call
cmp
inc
imul
fnstcw
insb
lret
enter
insl
stc
adc
stos
cmp
push
pop
jle
adc
clc
subl
addr16
stc
or
xor
shll
call
in
xor
outsb
dec
rcrb
leave
sub
jae
or
das
dec
cs
lret
mov
add
jle
aad
ret
iret
sbb
fmull
decl
jbe
lods
jns
in
data16
dec
arpl
mov
push
mov
jle
mov
fmul
mov
mov
ja
push
mov
xor
pop
hlt
pop
pop
push
inc
mov
out
and
rcrb
mov
xor
fisttps
dec
push
xchg
dec
add
jle
jg
inc
leave
fstl
or
dec
xchg
cmp
jns
ljmp
insl
test
mov
jnp
dec
fldenv
jecxz
xor
sbb
rcll
jle
scas
hlt
adc
adc
mov
jp
stos
xlat
cli
adc
jecxz
fbstp
repnz
aam
push
cmp
dec
mov
pop
shll
ljmp
jno
dec
cmpsb
mov
mov
or
aaa
movzbl
fnstsw
jge
mov
or
in
dec
xchg
mov
hlt
or
fs
or
daa
push
movsb
mov
cmpsl
les
dec
int
sub
dec
jmp
mov
test
lcall
filds
adc
mov
pop
dec
mov
mov
in
xor
push
stos
loope
inc
adc
popfw
pop
jns
loopne
incb
cli
inc
in
push
push
clc
push
mov
data16
subb
aad
inc
std
movsb
xchg
adc
cs
ficoml
lods
cld
dec
add
fsubl
pop
jle
jae
mov
lret
pop
cmc
pusha
sahf
and
inc
shlb
nop
or
movsl
gs
pop
dec
mov
inc
inc
jnp
adc
mov
int3
push
dec
dec
fwait
scas
inc
call
push
push
xchg
testl
in
and
ret
inc
pop
jl
mov
xor
mov
xchg
lahf
lret
test
scas
push
clc
jmp
lret
ficoml
imul
aam
icebp
pop
in
popf
cli
into
mov
sub
out
and
sub
dec
fidivs
cmp
divl
imul
pop
xchg
cmpsb
xor
jle
push
or
push
cmp
jp
push
in
movsl
mov
or
sbb
divl
or
push
push
jmp
aad
xchg
push
decb
or
mov
sbb
rep
and
popf
jg
lock
cld
nop
in
mov
arpl
fcom
push
sbb
shlb
cmpsl
inc
mov
jne
pop
lahf
insl
shrd
lds
pop
pushw
movsl
shrl
jbe
pushf
dec
std
adc
in
rolb
sub
dec
out
sbb
adc
push
cmpsl
cmp
jnp
lock
in
in
data16
lds
iret
fmul
clc
imul
cmp
bswap
dec
pop
subb
in
inc
adc
adc
repnz
lahf
inc
lahf
fdiv
cmp
xchg
jle
push
mov
clc
sub
jbe
int
jne
loop
ficoms
push
movsb
or
pop
adc
mov
xchg
jnp
cmp
adc
pushf
add
inc
inc
jle
sub
inc
data16
mov
mov
pop
xor
jg
daa
jp
and
mov
mov
movsb
dec
addl
aad
push
or
inc
adc
movsl
mov
push
imulb
cli
ret
cmpsb
lock
cmpsl
int
jno
shl
icebp
add
push
test
mov
mov
outsb
mov
fwait
mov
adc
arpl
sub
stos
mov
xchg
dec
leave
mov
inc
adc
pop
fdivrl
and
std
out
loope
and
sub
popa
lret
jecxz
xor
fdivl
sbb
aaa
mov
add
in
xchg
leave
cmpsl
dec
loop
xor
add
adc
pop
adcb
out
imul
xor
shl
dec
mov
fs
push
cmpsl
les
inc
sub
fwait
inc
cmp
jge
leave
cmpb
test
ret
pop
stc
rcrb
or
jmp
mov
bound
in
movsl
shll
loop
dec
out
dec
xchg
xchg
js
push
or
xor
push
inc
push
inc
imul
inc
adc
xor
inc
add
or
xchg
sahf
sbb
es
push
mov
xor
jle
add
aas
arpl
insl
adc
ljmp
inc
mov
xchg
jne
or
cmp
xor
icebp
mov
push
enter
push
int
inc
mov
jb
pop
and
xor
lods
sarb
leave
xchg
and
xor
pop
xor
add
sub
cltd
mov
push
aas
dec
dec
mov
inc
out
sub
mov
pop
sub
xor
loop
pop
jmp
mov
dec
push
push
clc
sub
cmp
xor
cmc
clc
cld
adc
fidivs
clc
xchg
sub
cmp
sub
out
decb
push
sti
push
in
xchg
fwait
push
mov
mov
add
mov
ljmp
mov
sbbl
lea
xor
loope
pusha
jno
cmp
jle
bound
fcoms
iret
arpl
insl
out
lods
sbb
mov
mov
stos
fstl
imul
push
cmp
mov
and
inc
sbb
mov
sbb
mov
push
jns
lret
mov
out
adc
ss
gs
loopne
pusha
jle
and
pop
dec
and
xor
inc
sets
inc
xor
cmpsb
mov
lcall
std
jge
movsb
sbb
mov
and
push
movsl
sub
push
jno
cmp
inc
pop
adc
sbb
std
xchg
outsb
mov
out
insl
mov
add
cmpb
sbb
ret
and
xchg
loope
int3
mov
push
pushf
sub
push
int3
imul
dec
cmp
decb
xchg
mov
jg
mov
push
jge
add
sub
xchg
cmp
pop
or
and
ds
int
dec
pop
push
pusha
aam
push
xor
pop
outsl
scas
ret
push
add
pop
aad
mov
mov
dec
cmp
lods
ret
cs
je
inc
dec
or
or
iret
insb
lret
out
mov
push
sub
lock
mov
adc
or
jp
fiaddl
and
lods
pop
repz
jbe
into
push
mov
loope
cwtl
out
jae
je
jno
mov
xor
frstpm(287
sbb
popf
jbe
xor
sub
pop
jbe
mov
push
inc
xchg
add
xor
pop
pop
cmpsl
mov
pop
sub
or
movsb
cmp
jns
mov
into
sahf
or
fists
ljmp
push
gs
or
mov
leave
xchg
rcll
mov
lahf
jb
repnz
aam
ss
int3
mov
lcall
jmp
lcall
mov
shrl
sbb
mov
nop
mov
out
sahf
subb
stos
mov
or
add
sysret
aad
aas
jo
mov
not
ds
iret
adc
in
jp
cmp
pop
cmp
or
data16
jp
and
in
ret
pop
sbbl
divl
dec
add
sub
inc
adcl
xor
repz
outsb
aas
jl
subl
push
mov
jno
mov
add
stos
pop
movb
lods
sub
fstp
sub
mov
mov
enter
clc
negb
xor
dec
and
js
lret
xor
xchg
out
mov
dec
inc
jmp
int3
nop
loop
cltd
inc
addr16
push
ss
leave
fwait
cli
fiadds
mov
pusha
loopne
call
bound
push
ds
cmp
stc
cmp
and
mov
out
jbe
gs
in
pop
jbe
lcall
and
arpl
les
jge
out
pop
inc
sub
lret
inc
cmp
data16
out
fdivrp
or
andl
mov
cltd
jecxz
shlb
ds
xlat
into
push
test
xor
repnz
stos
xchg
stos
or
sbb
ret
psubw
shlb
adc
cwtl
dec
cltd
pop
daa
add
enter
jp
push
cmp
aad
jl
addr16
sbb
test
fdivrl
rolb
pop
popa
push
cmp
out
lret
adc
pop
cmp
imul
outsb
or
pushf
rcrb
mov
out
add
out
rol
loopne
fs
cmc
mov
adc
inc
adc
dec
xor
lret
adc
insl
lods
mov
pop
mov
ja
out
mov
adc
mov
lods
unpcklps
push
jne
insb
push
pop
or
stos
pop
xchg
pop
lcall
xchg
push
fwait
sbb
jg
jno
cmpsb
sarl
pop
push
adc
push
pop
dec
hlt
cmp
dec
push
lods
not
test
mov
cmp
loope
or
mov
inc
and
rorl
and
stos
imul
sbb
xchg
jg
in
je
and
bnd
mov
cli
jl
add
jmp
lret
call
popa
loop
adc
cmc
imul
sbb
mov
fsub
mov
lods
dec
pusha
aas
mov
pusha
push
and
dec
mov
jne
lret
mov
js
dec
into
add
lahf
mov
js
outsb
in
inc
adc
jmp
sub
push
lret
iret
inc
and
lret
sub
pop
lds
or
cmp
ret
fwait
shlb
mov
dec
lcall
push
inc
iret
mov
or
pop
xchg
lcall
sarb
rorl
hlt
pop
mov
mov
pop
mov
inc
in
jne
mov
cmpsb
sbb
fwait
mov
xchg
aaa
cmpsl
push
jnp
jecxz
test
adc
and
push
add
push
and
pop
lahf
or
inc
imul
xor
mov
fs
cmp
mov
xor
add
cmp
ljmp
in
dec
shlb
push
ljmp
cmp
ret
add
push
push
stos
push
icebp
sub
adc
lahf
sbbb
test
jb
cmp
fidivs
rcl
mov
das
push
rcll
sub
mov
call
and
jmp
scas
enter
lods
jbe
jecxz
cli
in
push
mov
and
lret
faddl
or
pop
lahf
popf
call
decb
push
call
aaa
add
gs
mov
push
cmp
rdmsr
and
stos
imul
sbb
repnz
dec
fcomps
iret
in
je
scas
mov
and
fs
add
fdivs
mov
xlat
or
outsl
fcoml
pop
call
fimuls
xor
icebp
lahf
and
mov
mov
push
jno
push
xchg
cmp
add
cmc
mov
or
sub
cmp
sub
out
out
mov
inc
jns
push
lds
insl
std
lods
push
and
or
sahf
fdivrp
inc
inc
je
jl
push
dec
xor
pop
les
mov
mull
testl
mov
jle
adc
out
push
cmc
iret
scas
movsb
inc
inc
mov
clc
pop
frstor
shlb
add
out
add
adc
fsubrs
cmpsl
in
gs
jnp
pop
movb
loope
pop
jl
mov
xlat
mul
jne
push
dec
test
into
dec
cmpsb
add
xchg
pop
mov
stc
out
inc
jo
sbb
push
xor
inc
push
sbb
cmc
inc
mov
cmp
out
jl
adc
sbb
lahf
lods
mov
stc
sbb
and
icebp
movsl
sub
cmp
xor
popf
leave
cmp
in
sahf
push
outsb
cmp
cmp
test
mov
ljmp
and
das
insl
add
and
out
in
inc
and
iret
test
aas
stos
adc
xchg
roll
shl
aas
cmp
ret
iret
ss
bswap
push
andb
outsl
mov
stos
add
pusha
test
imul
xchg
lock
xchg
fisubl
dec
pop
hlt
push
sahf
pop
fwait
sub
add
mov
lea
mov
xchg
adc
sbb
cli
mov
mov
movq
push
fs
insl
cli
xor
in
repz
fistpll
pop
cmp
mov
pushf
push
pop
fisubl
mov
pusha
add
mov
fmull
int3
jle
movsb
fcompl
movsl
sahf
push
sbb
fdivr
aad
push
int3
roll
or
xchg
jl
pop
clc
les
sub
js
push
lcall
inc
stos
sbb
mov
lock
nop
clc
jmp
sbb
xorb
pusha
mov
call
and
test
pop
out
or
cmc
movsl
xchg
and
cmpsl
sbb
xlat
mov
dec
insl
les
mov
xlat
lods
imul
rcll
testl
pop
enter
push
push
xchg
pop
cli
sub
dec
dec
pop
jo
lret
mov
aad
aaa
fstl
lea
jmp
mov
les
adc
call
int3
shll
jecxz
test
cmc
mov
repnz
repz
mov
pop
cli
imul
stos
mov
xchg
clc
es
ret
push
pop
bound
mulb
add
fisttpl
pop
and
cwtl
cmpsl
lods
sub
adc
test
lds
ret
repnz
subl
mov
cmp
mov
add
sbb
scas
clc
or
adc
stc
mov
and
andb
inc
push
xchg
push
xchg
xchg
sub
int
mov
fnstsw
mov
test
xchg
push
cli
pop
sub
ret
mov
sub
cmp
mov
pop
popf
inc
mov
cmpsl
jg
out
mov
adc
mov
and
or
pop
inc
add
pop
adc
dec
xchg
jg
cmp
fnstenv
xor
mov
xor
adc
inc
mov
leave
iret
into
hlt
or
add
outsl
into
cmpsl
ret
mov
mov
add
ficomps
sbb
pop
pop
sub
jmp
hlt
repz
jnp
xchg
das
cmp
aad
rclb
push
push
mov
push
mov
push
mov
loopw
mov
xor
sub
out
dec
stc
add
stc
mov
movsl
add
das
stos
jno
add
loope
dec
and
es
lret
insl
mov
xlat
pop
shlb
add
push
or
jge
les
jae
xor
js
mov
mov
jmp
xchg
repz
rcl
mov
loop
mul
stc
jmp
bnd
pop
adc
scas
xchg
lods
xchg
inc
fsubrs
push
jae
push
mov
mov
dec
xor
je
push
xchg
stos
mov
and
aaa
repnz
sub
xchg
clc
fdivl
add
call
and
inc
add
cwtl
cltd
jae
orb
stc
lods
popf
cmpsb
sbb
add
mov
stc
test
in
and
sub
sbb
lahf
in
addr16
sbb
xchg
and
mov
lahf
sub
sbb
pop
ljmp
inc
xor
sub
add
jp
sbb
cli
ret
in
push
cld
mov
jp
mov
sbb
inc
test
jmp
test
or
icebp
pop
xor
addr16
mov
cmc
xchg
jo
add
lea
xchg
inc
add
mov
inc
fildll
fs
rcrl
jbe
enter
dec
mov
push
mov
les
adc
and
lret
push
fistps
sahf
xlat
loopne
jnp
jle
add
movsl
addr16
inc
or
insl
xor
clc
mov
push
sbb
push
pop
inc
jp
jns
dec
inc
mov
sbb
mov
xor
pop
mov
pop
and
out
add
sub
jne
inc
lret
jno
cmpl
out
xchg
data16
movsb
adc
aaa
dec
sub
hlt
int
jbe
pop
mov
fadds
jl
dec
call
ja
repnz
stc
ret
mov
incb
sbb
popa
ficoml
mov
int
dec
push
dec
in
cmp
lods
dec
clc
adc
dec
pusha
andb
mov
push
dec
test
scas
jne
scas
lock
inc
mov
aas
fdivr
inc
xor
out
je
lods
out
iret
xchg
les
test
sarb
ljmp
xor
sarl
cmp
sbb
sbb
stos
stc
push
cmpsb
dec
popf
mov
call
inc
fpatan
arpl
dec
mov
dec
scas
pusha
imul
cmp
in
jmp
mov
jbe
adc
jle
lods
push
nop
xchg
xor
pop
stc
jns
mov
sub
mov
mov
cli
leave
jnp
outsl
xchg
fadd
sub
lea
rcrl
daa
inc
mov
mov
notb
mov
adc
and
clc
jno
das
jo
dec
out
jle
pop
cmpsl
push
dec
ret
rcr
loop
pop
push
dec
push
jae
inc
in
outsl
sbb
addb
add
push
ror
add
lods
out
test
fidivrs
push
out
jp
xchg
movsl
test
mov
sbb
out
movsb
push
cltd
or
inc
mov
pusha
repnz
xlat
sbb
out
cwtl
shll
and
popa
sbb
xor
push
in
mov
add
xchg
aam
sahf
mov
push
neg
gs
mov
or
or
loope
mov
add
negb
test
inc
cmp
pop
jae
xchg
es
fs
sub
aas
xor
pushw
xor
add
dec
adc
repnz
mov
xorb
inc
dec
xor
add
lock
jb
mov
cmp
aaa
pop
sbb
mov
inc
lret
mov
inc
mov
pop
loopne
test
sahf
sub
outsb
testl
sahf
mov
call
cmpsb
jno
mov
mov
xchg
bound
mov
xchg
fdiv
es
pop
push
insb
sub
xchg
sbb
push
rorb
mov
jbe
aas
push
or
jmp
sub
sub
mov
mov
push
xchg
leave
mov
std
lret
mov
push
mov
imul
inc
or
ret
adc
clc
imul
sub
movsl
test
loope
movsl
cmp
daa
scas
cmp
dec
rclb
mov
cs
xchg
stos
in
das
ror
jae
sub
ss
gs
adc
add
call
ficoms
sbb
ficoml
lahf
mov
pop
push
mov
push
or
mov
sbb
adc
sub
pop
les
frstor
movsl
adc
inc
enter
iret
lret
fbld
cmpsb
cmp
mov
data16
or
insb
sbb
fs
popa
xchg
sahf
mov
pop
mov
addr16
pop
fstps
dec
and
push
popf
inc
add
sub
call
sbb
jle
push
out
pop
out
xor
cmp
int3
sbb
loopne
inc
xchg
jbe
sub
lret
pop
cmp
add
cmp
inc
sub
jno
push
bound
fsubs
dec
subb
outsl
icebp
push
cmp
cmp
fsts
test
sbb
lods
ficompl
sub
pop
pop
shll
mov
fnstcw
test
dec
test
adc
jno
testb
repnz
divl
dec
mov
ja
jo
add
gs
cmpsb
sub
mov
fcoml
or
pusha
mov
jp
inc
test
sbb
in
mov
mov
mov
lret
xchg
cs
push
insb
mov
xor
inc
ficoms
cmpsl
jo
xchg
mov
aaa
add
int
test
outsb
push
out
bound
aas
push
sub
sub
fmulp
jns
es
sub
sub
popf
cmc
nop
sbb
cmc
mov
add
cmpsb
rep
ljmp
inc
add
movsb
inc
lock
ret
outsl
jmp
adc
inc
aaa
and
out
jge
sub
push
insb
addl
lock
loope
dec
push
cmp
scas
mov
je
fstpl
fs
lock
xchg
adc
push
in
adc
adc
divb
leave
cmpsl
jae
dec
cmp
mov
jp
rcrl
out
or
in
test
sti
push
xchg
in
mov
jg
flds
push
xor
lcall
cld
sbb
inc
xchg
ja
xchg
outsb
pop
outsl
dec
cwtl
pop
movsl
and
pusha
xchg
out
sbb
pop
and
ja
cmpsl
or
scas
test
dec
stos
cwtl
dec
lcall
mov
and
sbb
loopne
inc
jnp
sub
stos
push
xchg
cmpsl
add
sbb
jne
out
repnz
iret
repz
jo
leave
fmuls
fnsave
xorl
mov
pop
add
pop
into
jno
mov
or
sar
push
mov
mov
push
aaa
mov
mov
clc
xorl
xchg
push
cmpsb
inc
in
cli
mov
sub
dec
mov
adc
dec
mov
mov
cmp
or
jecxz
inc
lahf
fdivl
pop
or
pop
test
mov
cmp
dec
fcmovbe
daa
pop
lods
mov
push
sbb
outsb
push
jne
orl
xor
test
into
add
xchg
bound
push
out
movsb
cmp
mov
loope
jecxz
gs
pop
push
mov
out
mov
icebp
es
jmp
xchg
or
dec
std
jbe
sub
sbbb
je
lahf
sbb
cmpxchg
ret
mov
sub
cmp
adc
mov
notl
dec
fmull
rcll
xor
mov
sbb
movsb
or
cwtl
into
cmp
ljmp
push
jle
cmpl
jp
mov
or
jo
movaps
loop
leave
sbb
in
sub
lahf
mov
pop
sub
xchg
pop
pop
adc
lcall
sbb
cmpsb
lahf
jno
jl
xlat
movhps
pushf
dec
push
lods
test
pop
inc
stc
orl
hlt
mov
in
pop
push
or
adc
pop
insl
mov
jns
bound
test
es
and
popf
add
mov
addr16
sub
mov
sub
fdivrl
icebp
xor
jp
les
popa
pushf
xor
pusha
inc
outsl
loop
jge
cmpb
std
movsb
movsl
cmp
cmc
fstl
addr16
mov
xchg
adcb
in
loopne
clc
popf
cli
dec
adc
imul
pop
cmp
push
adc
dec
mov
outsl
test
jno
mov
fcomps
sbb
stos
gs
loope
movsb
fnstsw
lret
inc
movsb
mov
adc
mov
hlt
jbe
iret
andl
pop
cmpsl
lods
frstor
ss
push
mov
popa
adc
pop
enter
add
mov
inc
pop
dec
stc
adc
mov
ret
int
fs
adc
mov
clc
popa
mov
cmp
jmp
cmp
scas
cmpb
cmp
jecxz
pop
lea
sub
int3
xchg
xor
mov
jno
notb
mov
rol
jns
sub
adc
ss
pop
jmp
mov
mov
adc
cwtl
loope
sub
cli
cmpl
jge
dec
les
into
cmc
push
pushf
pop
fstl
or
andl
adc
adc
mov
dec
les
xor
div
pop
jnp
sbb
cwtl
bound
popa
aaa
pop
xor
mov
lret
and
outsl
int3
hlt
push
xchg
xchg
inc
adc
sbb
pop
xchg
insb
out
pop
out
add
inc
sbb
adc
clc
fwait
sub
lahf
xchg
scas
push
mov
das
cwtl
push
mov
and
jmp
pushf
inc
pusha
mov
xchg
sbbb
movsl
xchg
aaa
leave
outsl
dec
mov
mov
sub
push
pop
pop
ss
pop
mov
int
xchg
dec
in
je
or
sbb
jp
aam
push
aas
jmp
xor
cmp
pop
lahf
fdivrl
mov
test
jmp
js
aas
jmp
mov
shr
das
sti
loopne
insb
mov
incb
cld
push
sbb
pusha
and
add
int3
sbb
rorb
hlt
push
mov
push
stos
or
mov
lcall
mov
ret
mov
out
shrb
and
xchg
sbb
sti
repz
cmp
bound
fstl
push
gs
scas
or
rcl
icebp
leave
fimuls
inc
xlat
bound
cwtl
pop
je
cmp
aaa
cmpsw
out
movsl
dec
push
in
mov
push
jo
xchg
gs
aad
cltd
adc
push
push
mov
std
repz
ret
rolb
xchg
leave
lcall
and
or
int3
mov
jg
inc
aam
xchg
loope
jnp
cmpsl
scas
cli
stc
scas
call
dec
mov
fs
jg
push
test
cmpsl
add
idivb
in
add
dec
test
repz
pusha
mov
push
imul
push
ret
movsl
movsb
cwtl
test
mov
iret
outsb
ljmp
jo
pusha
sbb
push
cmp
out
xor
fst
jne
sub
insl
inc
in
mul
push
or
inc
or
outsb
mov
xor
in
lock
inc
adc
mov
xchg
add
movsl
sbb
test
aas
iret
fstpt
rolb
mov
fidivs
adc
mov
sub
and
aaa
sub
shld
fsubrs
add
push
jno
dec
cwtl
les
sbb
cmc
or
mov
jbe
mov
mov
loop
add
jle
sahf
imul
or
inc
lret
js
or
mov
inc
pop
sbb
ljmp
repnz
leave
fcmovne
mov
loope
cmpl
in
add
icebp
repnz
lret
testb
lods
stos
push
aaa
imul
sti
pop
in
negb
xor
xor
lods
bound
inc
fwait
dec
outsb
and
ss
stc
pop
movsb
sub
mov
aad
and
mov
pop
cli
clc
mov
std
sub
fcmovnb
ds
imul
loop
inc
ret
xor
mov
in
xor
bound
mov
sub
pop
out
fisubrl
sub
lock
mov
xchg
faddl
in
dec
and
mov
xor
mov
inc
xchg
fxch
xchg
mov
xchg
mov
addr16
sti
lds
mov
cli
insb
iret
hlt
and
call
iret
pop
ficoms
js
or
out
or
mov
test
add
repnz
out
dec
fldl
lods
mov
test
ds
cltd
pop
jae
and
jae
cmp
mov
and
cmp
and
jl
imul
or
aad
mov
loopne
les
ljmp
ja
pop
in
push
sub
hlt
clc
mov
sahf
mov
cmp
or
imul
adc
jb
jle
jmp
ret
clc
mov
scas
inc
mov
cmp
mov
shll
aam
arpl
dec
xchg
push
sub
sbb
loop
test
fldenv
insl
xchg
inc
mov
inc
in
into
clc
out
mov
dec
mov
cmc
inc
or
dec
mov
push
jp
clc
insb
divb
lock
test
pop
out
inc
or
push
inc
adc
jg
ret
roll
lret
mov
outsl
cwtl
or
dec
push
dec
push
rolb
sub
fiaddl
dec
sub
inc
mov
pop
ret
and
pop
jmp
adc
cmc
pop
jo
mov
bound
inc
push
jmp
fstps
pop
xor
mov
dec
pop
dec
xchg
xchg
lcall
sahf
fmul
add
inc
push
std
inc
cmp
jmp
fisttps
es
pop
mov
lret
mov
inc
arpl
inc
js
stos
xchg
lock
push
lcall
add
enter
sbb
mov
out
mov
rorl
xchg
pop
loop
mov
nop
in
mov
inc
cld
pop
add
dec
add
push
int3
popl
sub
cmp
add
sub
icebp
clc
push
popa
mov
mov
out
std
or
inc
into
pop
xchg
mov
aam
adc
test
imul
int
ds
jne
pop
mov
mov
pop
jo
sarb
arpl
and
imul
movsl
mov
add
sahf
mov
arpl
push
popa
scas
sub
mov
sbb
inc
pop
adc
push
push
push
push
add
scas
pop
cli
ss
pusha
lods
ret
or
call
ja
int3
das
daa
out
pop
cmp
scas
lcall
fisttpl
lds
sti
push
mov
movsb
mov
stc
ret
xor
out
inc
mov
push
lcall
xchg
incl
lret
sbb
dec
push
push
xor
fistpll
pop
xchg
insl
aad
sbbb
or
adc
ret
dec
lcall
imul
mov
fildl
fs
aas
adc
adc
gs
push
jl
jg
add
aas
add
into
shr
aaa
pop
in
cmp
adc
jnp
cmc
dec
fwait
push
mov
scas
movsb
mov
sub
or
negb
enter
scas
push
inc
dec
stc
mov
andb
ljmp
lahf
pop
dec
outsl
js
jbe
andb
mov
pushf
jns
or
mov
movsl
xor
xor
sbb
xchg
mov
fisttpll
insb
jle
xor
and
adc
aam
jnp
les
cmp
jae
jl
cli
lods
sub
ljmp
lock
repnz
ret
addr16
mov
sbb
or
sbb
sbb
xchg
in
mov
lods
test
clc
and
cmovbe
pushf
movsl
pushf
mov
sti
bound
cmp
clc
push
xchg
add
dec
mov
in
sbb
mov
xchg
gs
pop
out
or
jl
or
mov
hlt
mov
icebp
out
gs
ds
xor
add
dec
add
sbb
fsubl
cmp
adc
mov
xchg
dec
int
aad
loope
and
mov
jmp
dec
or
popa
push
inc
das
aas
fwait
in
filds
ficompl
lods
mov
or
shlb
inc
cwtl
pop
jecxz
mov
imul
enter
push
mov
cmpl
out
ret
mov
mov
stc
in
sahf
xorb
sub
std
pop
rcrl
lret
pop
sti
jae
mov
and
mov
inc
je
dec
ret
in
inc
lret
pop
shr
sbb
js
ds
icebp
mov
repnz
enter
das
repnz
repz
stos
add
cmp
dec
shlb
clc
push
loop
imul
or
sbb
iret
mov
sarl
popf
mov
cmpb
push
int3
inc
fldt
loope
cmp
cmp
mov
popf
dec
imul
dec
sbb
idivb
mov
fstp
push
in
ffree
scas
out
mov
std
shlb
sbb
out
outsl
addl
fildll
ljmp
mov
out
push
hlt
div
imul
jae
ror
pop
mov
orl
fdivs
mov
inc
and
fadds
frstor
imull
out
fsubrp
mov
and
mov
adc
pushf
or
faddl
in
test
jns
cmp
pop
mov
dec
mov
xor
int
add
cmpsb
or
add
je
mov
push
out
fdivrs
addb
fwait
lods
gs
mov
and
ljmp
pop
fsubl
inc
or
or
add
adc
rclb
and
jbe
popa
cld
andl
pushf
xchg
add
push
mov
movsb
mov
push
mov
inc
pop
daa
inc
inc
jle
adc
daa
jmp
mov
stc
pop
stc
xchg
and
sbb
pop
insl
jl
inc
rcr
aas
test
in
jmp
xchg
or
cmpsb
push
adc
dec
repnz
xor
mov
xor
fnop
daa
and
xchg
pop
inc
in
add
mov
add
clc
popa
inc
push
inc
popa
fimull
pushf
cltd
pushf
mov
pushf
push
mov
jmp
xchg
jne
out
cs
dec
or
cmp
popa
ljmp
push
jae
insb
pop
sti
test
lret
inc
xchg
out
pop
test
mov
jns
push
sahf
loope
repz
mov
loopne
xchg
or
out
xchg
iret
push
sub
test
sarb
bound
bnd
popa
mov
xchg
or
jns
fwait
jle
sbbl
std
cmp
cmp
frstor
lcall
mov
cmp
scas
pusha
sbb
mov
fisubs
enter
sub
test
inc
push
pop
imul
add
add
scas
mov
push
jnp
movsl
jns
xchg
orb
mov
pop
lea
dec
aas
incl
sub
loopne
loope
adc
xchg
mov
lods
stc
jle
cmp
dec
jnp
inc
js
aas
cli
cmp
and
sar
jge
mov
lcall
insl
pop
sbb
lock
shrl
mov
jno
cmp
pop
adc
lds
popa
mov
jne
lods
sbb
fwait
mov
jg
insl
mov
xchg
push
or
cmpsl
iret
inc
dec
repnz
pop
push
icebp
inc
cmp
xor
mov
jecxz
cmp
shrb
hlt
out
mov
xor
inc
inc
stc
popa
dec
inc
inc
stos
out
es
lahf
mov
pop
pop
cmp
sub
or
mov
movsl
sbb
add
dec
divl
cmpsl
adc
cs
push
lahf
addr16
daa
push
repz
push
lret
stos
mov
test
cmp
mov
jmp
and
pop
xor
dec
xor
andb
mov
fsubrl
in
mov
test
je
test
shll
scas
mov
jmp
popf
adc
lea
pop
pop
sahf
sti
dec
ljmp
cmpsb
mov
scas
dec
in
push
cmp
mov
add
pop
sub
movsl
pop
jmp
imul
inc
adc
movsl
jae
rclb
cs
add
movsl
test
cmc
mov
add
ret
mov
push
sbb
and
ret
pop
jle
push
out
sbb
add
mov
add
push
jg
push
xor
bound
ds
int
xor
jg
adc
movsl
insl
inc
mov
cmp
outsl
pushf
xchg
mov
notl
push
mov
xchg
pusha
scas
lods
idiv
jnp
subb
inc
dec
jb
mov
dec
xchg
pop
jae
jle
or
bound
sarl
mov
push
push
pop
mov
sar
popf
daa
sbb
mov
xlat
addr16
push
mov
out
inc
imulb
jbe
sub
in
lds
mov
fnstenv
xchg
in
push
pop
fdivr
fwait
arpl
scas
push
jmp
pop
add
pop
pop
push
jmp
mov
jmp
fildl
fcos
adc
sbb
jmp
sbb
fldenv
shlb
or
int3
xor
rolb
pop
inc
add
or
sub
and
rolb
sub
mov
adc
shlb
adc
xor
inc
or
mov
test
add
jne
daa
xchg
cmpsb
sub
jg
imul
fs
inc
xchg
push
lahf
aad
jo
inc
cli
cmp
mov
sahf
mov
mov
mov
test
mov
popf
jb
imul
mov
mov
jle
inc
jb
shll
pop
dec
stos
jo
xchg
aaa
xchg
arpl
push
push
mov
jnp
mov
movl
mov
xor
sub
cmp
inc
pop
popf
fldcw
push
icebp
and
cmc
aas
mov
pop
dec
pop
test
or
inc
in
in
mov
or
aaa
imul
sbb
push
mov
stos
mov
dec
es
lahf
mov
int3
adc
cmpsl
dec
popf
jmp
adc
jmp
push
int3
scas
loopne
pop
pop
stos
dec
push
sbb
test
mov
rcll
xchg
mov
data16
mov
ja
lods
aad
cmp
dec
lahf
mov
ds
insb
cmp
mov
aam
pop
xor
test
pop
outsl
ja
popf
nop
sbb
js
clc
push
clc
ss
jecxz
xchg
xor
xor
mov
sub
fidivs
and
subb
jno
jge
bound
jp
mov
adc
mov
or
jnp
xchg
fwait
or
pop
jnp
sahf
cld
ficoms
push
pop
ljmp
push
out
jbe
mov
and
push
in
and
dec
pop
shlb
shll
and
add
mov
inc
pop
movsb
cmp
out
loopne
imul
popf
cmpsb
sbb
mov
jle
mov
mov
in
pop
xchg
jle
cwtl
or
testb
scas
inc
sub
add
xchg
fwait
lret
js
mov
sub
aaa
sti
sbb
mov
in
inc
mov
dec
adc
mov
and
test
fstpl
sbb
jo
inc
test
inc
addb
in
push
dec
mov
lret
jmp
je
cs
mov
inc
pusha
mov
dec
xchg
pop
fs
pushf
aas
push
lods
js
ror
fsts
push
loop
scas
mov
mov
jnp
and
insb
mov
daa
jae
push
sbb
sub
pop
fsubrl
mov
es
xchg
rcl
rcr
mov
sbb
cmpsl
and
xor
adc
movsb
mov
dec
mov
test
lods
test
xor
dec
or
pop
sub
sti
mov
xor
cs
in
outsb
adc
ja
shll
mov
cwtl
mov
mov
icebp
dec
daa
jne
rolb
mov
insb
adc
sbb
out
push
sbb
mov
hlt
addl
jb
jg
mov
popf
fistpll
mov
clc
add
mov
cltd
xor
das
lret
in
popa
add
push
data16
jno
fwait
outsl
mov
in
orl
mov
add
pop
ljmp
push
sti
cmp
sbb
shll
xor
jne
in
xchg
aaa
shrl
stos
es
xchg
pop
loopne
mov
lods
xchg
nop
sarb
test
or
sbb
jae
clc
mov
push
idivb
mov
xchg
aam
mov
stos
xor
mov
inc
mov
pop
push
testl
jae
or
rolb
stos
xor
les
mov
stc
iret
jae
jb
ficoms
dec
add
std
pop
iret
lcall
pop
cmc
push
movsb
jle
mov
in
push
in
add
dec
mov
les
nop
adc
cmp
fxch
fwait
dec
adc
and
push
pop
popa
xchg
nop
mov
loopne
je
mov
push
or
imul
mov
pop
sar
sub
mov
and
push
and
ja
pop
rolb
dec
jnp
and
pushf
mov
pop
and
repnz
xor
jbe
ficoms
jg
sbbl
cmp
fidivl
pop
shlb
insb
push
push
fnstcw
pop
pop
insb
not
fildl
outsb
jb
nop
or
and
and
mov
mov
jle
and
mov
cmp
mov
adc
jnp
movsb
lcall
decl
or
fnstenv
ljmp
aas
mov
icebp
mov
fisttpl
cmp
lcall
clc
dec
stos
mov
mov
lock
scas
out
je
imul
cmp
inc
jmp
dec
inc
mov
aad
push
mov
or
push
ljmp
push
mov
inc
popa
pop
adc
inc
mov
push
int3
aam
adc
out
fnsave
sub
or
xchg
jecxz
jg
sbb
cmp
sub
inc
shrb
mov
sub
daa
repz
mov
addr16
push
aaa
aam
pop
out
push
mov
jmp
out
mov
xchg
sbb
mov
jns
or
or
rorb
sub
loopne
jle
pusha
mov
mov
mov
subb
inc
imul
ret
in
mov
cmp
jl
or
divl
pusha
cmp
fsubrl
add
enter
push
mov
xlat
lods
shl
xchg
and
incb
add
icebp
clc
mov
std
ljmp
rol
icebp
out
cld
subb
pushl
or
cmpsl
movsb
fisubs
arpl
mov
test
aad
push
fucom
ljmp
xchg
pop
mov
lock
add
add
adc
mov
sub
or
fs
cltd
icebp
shll
test
fisubrl
push
fstpt
dec
sbb
xchg
push
cltd
jne
fstps
into
xchg
shll
mov
jecxz
int3
orl
lret
test
adc
cmp
sbb
mov
xor
shlb
push
mov
loop
xchg
outsb
ficompl
inc
stc
push
push
dec
mov
rorb
and
sbb
call
imul
cmpl
inc
jnp
xchg
fists
dec
arpl
daa
bound
cmp
cmp
cld
fdivrp
mov
or
pop
sti
cmp
add
jnp
dec
inc
icebp
sub
jne
repnz
pop
repz
adc
cmpsl
sub
insb
cs
push
test
pop
aas
enter
vmwrite
roll
enter
addb
jo
jns
es
or
push
or
xor
clc
push
nop
popf
test
out
and
jne
adcb
gs
xor
stc
sub
cli
jp
push
jmp
lcall
mov
jbe
cmp
push
mov
add
lahf
dec
shr
imul
enter
pop
test
add
cmp
xchg
das
xchg
xchg
or
pop
insl
mov
add
and
jg
mov
jle
cmp
xor
sbb
movsl
les
cmp
je
jae
leave
gs
nop
pushf
orl
and
fsubrs
jnp
lock
jae
arpl
jb
aaa
cmp
repnz
rol
or
jae
mov
pop
cli
test
js
xlat
push
scas
test
dec
add
push
sub
and
cmp
inc
sub
inc
lret
add
mov
push
inc
repnz
mov
push
jl
push
adc
rol
sbb
aam
xor
push
jp
xlat
xchg
sbb
icebp
pusha
ljmp
inc
cld
cltd
jp
mov
roll
lds
mov
push
cmc
lea
jle
sub
jb
add
push
or
mov
jecxz
mov
pusha
cmp
jno
nop
int3
inc
lds
lahf
inc
xchg
dec
mov
lea
fistpl
xchg
push
popa
mov
repz
inc
xor
out
mov
lahf
test
aaa
jno
stos
jecxz
push
xor
dec
adc
pop
pop
push
ljmp
xor
mov
insl
loope
aaa
jge
repz
push
fidivl
repnz
push
jmp
movsl
test
sub
pop
rcll
scas
mov
mov
lds
enter
shr
lret
add
test
scas
add
pop
in
adc
pop
loop
mov
dec
fcoms
mov
insb
mov
sbb
mov
ja
imul
push
mov
xlat
lods
jge
inc
mov
fwait
add
or
or
ljmp
sub
leave
xor
xor
fsub
paddq
and
movl
sub
add
dec
inc
push
add
push
push
and
aas
add
mov
daa
gs
dec
dec
push
jbe
mov
nop
sbb
adc
nop
mul
and
pop
sub
cs
push
rolb
xchg
cmpsl
xor
gs
aad
add
repz
or
lods
mov
jbe
test
push
lcall
push
mov
fcompp
inc
movsl
icebp
lds
inc
lret
fwait
adc
lds
and
daa
cmpsb
test
aaa
mov
jg
in
mov
aam
daa
daa
xor
cmpsl
adc
dec
and
nop
stos
mov
pusha
add
mov
js
xor
lock
pop
and
xchg
roll
lret
jo
std
pop
xchg
mov
mov
jbe
dec
push
mov
jb
inc
loop
adc
in
push
mov
int
push
loope
pop
mov
xchg
movsb
push
sti
repnz
sbb
movsw
popa
xchg
aam
pusha
repz
out
aad
cmc
and
aaa
pop
stos
xor
sub
mov
mov
imul
or
movb
jecxz
mov
xchg
out
sahf
cmp
scas
mov
sbb
cltd
repnz
popa
jp
pop
inc
scas
orb
adc
int
mov
lret
jbe
xchg
mov
cmc
jmp
adc
add
inc
fildl
xlat
or
xor
pop
jb
and
jmp
add
xchg
hlt
jg
repz
xor
cmp
fcompl
or
sahf
cmp
push
push
dec
jae
cmpsb
pop
loop
lock
pusha
test
pop
mov
imul
xchg
sbb
pop
add
inc
in
add
out
cwtl
rorb
mov
pop
pop
pop
loopne
loop
ljmp
xor
xchg
adc
repnz
mov
sub
jns
jl
push
test
cmc
pop
xor
subl
nop
add
mov
jmp
arpl
daa
xor
lods
dec
inc
sub
push
dec
sbb
cli
out
mov
jo
mov
inc
sub
sbb
cmpsl
loope
pop
jmp
xchg
lods
rcrb
sahf
outsl
dec
ror
orb
cmp
pop
test
pop
push
push
inc
in
pop
xor
and
pop
cwtl
lcall
lock
or
lcall
jb
popa
mov
loop
lock
sub
lea
in
inc
or
fwait
cld
jne
dec
cmp
add
movb
sti
pop
sbb
shll
mov
mov
xchg
scas
xchg
ds
imul
adc
cs
sbb
popa
xor
sar
adc
adc
mov
sbbl
pop
dec
sbb
xor
hlt
inc
cmp
xor
jl
stc
and
push
push
inc
xchg
pop
xchg
pop
or
sarb
fdivrs
xchg
out
cmp
add
fcoms
dec
fldenv
mov
dec
add
mov
push
pop
xor
mov
das
lods
into
jp
mov
jg
movsb
test
mov
sub
pop
les
test
data16
lods
popa
cltd
sarb
adc
pop
and
jecxz
dec
and
sub
das
push
pop
jg
neg
test
test
or
pop
outsl
icebp
js
fnsave
inc
movsl
cmp
pop
jo
adc
lods
cmp
test
xchg
lret
scas
add
out
push
jge
xchg
push
insb
push
pop
imul
int3
popf
out
adc
iret
jge
push
pop
insl
xor
shll
push
fstpl
mov
pop
mov
ljmp
sub
int3
aad
inc
jle
jnp
shr
dec
negl
in
hlt
jnp
adc
mov
push
andl
jb
jae
ds
cli
pop
pop
pop
push
shll
pushf
jo
cmp
jbe
mov
mov
sbb
ret
jmp
fisubrs
xlat
bound
lods
movsl
test
dec
pop
jl
dec
lods
xchg
inc
pop
and
fimuls
or
push
hlt
mov
sub
push
sbb
mov
mov
subb
xor
mov
sub
es
idivb
mov
cmp
push
pusha
mov
fs
xchg
xor
iret
fists
je
stos
and
cmp
scas
das
inc
pop
nop
scas
push
jno
lahf
stos
ss
call
stos
fistl
hlt
test
add
sbb
cltd
xor
cli
xchg
push
repz
int3
xchg
pusha
dec
mov
dec
js
lret
cwtl
xor
cmp
mov
add
cmp
add
jnp
cmovne
push
insl
jno
mov
movsb
cmc
mov
lret
test
out
sub
and
inc
xchg
clc
sti
push
sbb
cwtl
and
add
enter
mov
mov
outsb
jnp
mov
sbb
jmp
adc
mov
inc
mov
push
out
push
jae
int
pop
mov
rol
dec
pop
mov
imul
iret
int
je
cli
inc
addr16
xor
shll
fimull
push
out
xchg
jp
and
fists
push
xlat
in
ret
out
push
arpl
cmp
push
scas
inc
je
mov
cmp
mov
rcrl
js
mov
popa
dec
jg
lea
js
mov
test
fadds
fsubrp
push
xchg
jg
nop
enter
pop
hlt
call
push
mov
mov
test
je
or
xor
add
rcrb
das
cs
jo
testb
ret
loopne
loope
inc
cli
pop
adc
dec
sahf
js
in
adc
mov
in
mov
push
dec
cmpsl
cmp
imull
repz
sbb
xchg
repnz
xchg
mov
fcoml
mov
lret
mov
ret
imul
dec
inc
or
sti
add
cli
ret
movsb
call
push
sub
clc
adc
gs
xchg
jbe
testb
ss
mov
xchg
icebp
xor
add
mov
arpl
stos
sbb
imul
pop
sub
mov
inc
insb
sahf
jmp
cltd
xor
xchg
cmp
repnz
mulb
mov
rcll
sti
nop
outsl
add
mov
inc
dec
sbb
or
and
insb
sar
or
push
add
filds
rcrl
inc
jmp
lods
mov
adc
cwtl
pop
and
add
mov
je
sub
jo
add
icebp
jae
out
popf
out
or
push
adc
push
dec
xor
push
pop
push
fprem1
jmp
nop
jo
mov
push
icebp
fucomi
mov
xor
rcrl
stos
pop
mov
rcll
sub
test
sahf
lds
or
dec
xchg
enter
sbb
sub
and
and
dec
cmpsb
popa
cmp
sbb
scas
loope
jmp
enter
pop
mov
loop
jge
aam
mov
dec
arpl
pusha
out
mov
or
jno
and
mov
inc
mov
lcall
inc
sbbb
mov
aad
mov
mov
mov
mov
pop
dec
jno
lods
ja
aas
lods
fwait
cmp
pop
dec
movsb
mov
xor
ficoml
out
js
sahf
repnz
mov
lock
push
inc
imul
or
push
sub
sbb
add
sti
inc
pop
into
ljmp
sti
das
jbe
addr16
pop
sbb
jmp
fbstp
pop
test
mov
cmp
je
pop
mov
cmp
inc
xor
dec
in
or
push
push
mov
or
das
jnp
inc
ret
add
xor
cmp
cmp
cmp
jle
xchg
and
add
std
repz
push
mov
or
shll
sub
adc
dec
mov
fdivrs
xor
mov
lret
out
int
cmp
dec
adc
ret
pop
mov
out
add
mov
mov
cmc
in
pop
cmp
jnp
outsb
jge
pop
sti
push
out
mov
pop
repnz
push
movsl
and
mov
rcr
add
sbbl
rcll
out
xchg
dec
mov
test
fs
or
mov
ret
xor
cmp
jmp
sbb
pop
or
gs
sbb
out
loop
sub
jmp
or
outsb
mov
cmpb
fdivs
insl
xor
mov
arpl
lahf
into
adc
xchg
adc
fildll
es
mov
icebp
pop
orl
fistl
mov
pop
aaa
xchg
jne
in
mov
push
fnstenv
push
inc
roll
gs
xchg
push
sbb
pusha
jle
movb
cmp
ljmp
xchg
push
jne
mov
mov
imul
es
jnp
jns
ds
push
and
addr16
test
xchg
sbb
out
jns
repz
int
arpl
pop
inc
inc
test
cwtl
cmp
mov
daa
xchg
sub
fbstp
sub
or
fcmovnu
push
out
clc
jo
fs
lret
enter
lea
adc
add
pushl
add
jnp
adc
xchg
ds
addr16
rcll
xor
cwtl
test
inc
inc
sbb
test
adcl
out
cs
cmp
push
movsl
jo
pop
mov
xor
mov
into
imulb
imul
sbb
pushf
mov
push
iret
mov
xchg
in
inc
add
mov
cmpsl
push
pop
mov
jl
cwtl
test
sahf
add
jle
fcoms
sbb
loop
or
pop
addr16
lret
hlt
out
cwtl
add
fs
into
mov
popa
imul
arpl
fisttpl
jbe
lock
ret
inc
lock
fsubl
call
xor
add
popa
stos
js
and
mov
xor
mov
mov
adc
mov
lock
lcall
shll
mov
scas
cmp
mov
jno
pop
cs
and
arpl
jne
in
cmp
ret
scas
in
outsl
loop
mov
mov
jecxz
dec
addr16
mov
push
loope
mov
in
repz
lret
das
xor
loop
push
mov
ficompl
pop
sahf
cli
call
rcrl
sub
pop
cmp
call
lock
pusha
mov
scas
xchg
lret
xchg
pop
add
jno
in
cltd
or
add
mov
dec
testb
push
ja
out
lcall
push
push
xchg
cli
sub
repnz
inc
fwait
lea
xchg
nop
pop
je
sub
mov
pushf
call
add
and
das
pop
pop
pop
dec
mov
aas
or
sub
xor
push
jns
cmp
cmp
or
inc
cmp
adc
pop
push
cltd
push
movsb
insl
pop
dec
rcr
ds
and
pusha
sub
cltd
mov
inc
xchg
xlat
xor
mov
lds
sub
loop
pop
xchg
std
ret
movsl
cmp
ret
push
shrb
lods
pushl
push
ficoms
dec
cmp
pop
mov
rolb
test
mov
xorb
dec
les
or
inc
pushf
pusha
jb
push
dec
cltd
out
sbb
bound
xorps
aas
adc
mov
lea
es
pusha
sub
cmp
jb
fs
jbe
les
push
aaa
sbb
xchg
stos
add
ret
push
lahf
jp
inc
lahf
js
jl
jp
sbb
mov
inc
cmp
lret
sahf
jae
notb
dec
mov
add
push
rclb
adc
push
pop
or
sbb
jbe
dec
jnp
pop
inc
add
rcll
nop
dec
clc
pop
in
nop
jecxz
out
dec
test
sub
test
mov
outsl
aam
xchg
add
push
movsb
add
push
inc
mov
stos
mov
loop
in
test
push
sbb
push
loopne
aaa
jae
xchg
sahf
xchg
mov
adc
or
inc
mov
int3
add
decb
dec
in
jnp
fwait
jp
in
cmpsb
mov
inc
and
push
jl
test
repz
fnsave
sub
push
insl
cltd
out
xor
sbb
arpl
xchg
mov
fwait
xor
pop
cmp
int3
lret
xchg
test
aam
cmp
pop
jp
xor
int3
inc
mov
inc
adc
std
push
xor
and
pushf
daa
xlat
adc
movsb
pushf
stos
and
test
out
fxch
and
rcl
add
push
xchg
jle
outsl
and
mov
dec
sbb
xchg
pop
int
in
or
loope
xchg
and
loopne
jge
shlb
xor
in
cmc
xchg
and
fadds
pop
dec
imul
pushf
push
imulb
pop
fwait
cltd
insb
and
xchg
dec
or
sarb
jb
xor
push
imul
aad
xchg
dec
push
push
aaa
mov
jl
jmp
cmc
dec
xor
or
cmp
sarl
mov
das
cmp
repz
mov
pop
bnd
stc
adc
mov
add
or
outsb
lea
stc
cli
adc
lods
jmp
iret
mov
adc
pop
adc
mov
bound
mov
cli
das
fildl
test
loop
dec
mov
adc
pop
loope
test
sti
ss
repz
jge
mov
and
cmp
in
stc
add
jne
push
insl
pop
xchg
push
les
push
lock
mov
xor
lahf
mov
sub
jne
imul
div
test
inc
mov
adc
aad
xchg
adc
sub
outsl
out
imul
popf
out
pusha
call
ss
data16
int3
loope
into
lods
cmp
pop
addb
clc
sti
es
jge
push
add
sti
hlt
and
xlat
les
xchg
mov
mov
mov
dec
clc
cli
push
jle
xchg
pop
mov
daa
inc
jbe
es
movb
fiadds
das
cs
dec
jge
ret
das
rcrb
sub
lds
imul
xlat
mov
xchg
fwait
mov
mov
mov
xor
incb
sbb
dec
or
adc
cltd
inc
mov
rol
mov
jge
sub
mov
inc
jnp
cli
loope
lret
xor
xchg
xor
xchg
jae
addr16
arpl
jbe
scas
out
rorl
adc
test
ret
mov
push
gs
and
cmp
pop
adc
jnp
lods
fucomi
scas
add
dec
mov
call
iret
sub
inc
out
dec
dec
aas
push
jno
dec
aam
push
in
and
adc
mov
fisttpl
or
mov
in
jo
add
and
addr16
hlt
lret
fdivrs
icebp
mov
icebp
inc
fucom
stos
stc
sti
pop
lods
jb
dec
xor
mov
wbinvd
jbe
inc
out
mov
mov
xchg
add
fisttps
imul
insb
pop
inc
icebp
aas
sahf
data16
and
ficompl
inc
or
dec
rorb
in
stc
cmc
jns
xor
das
push
shlb
cmp
repz
xchg
lcall
out
and
push
movsl
iret
push
or
jle
dec
aaa
adcb
push
cmp
int
mov
nop
xchg
fwait
adc
int3
lds
push
xlat
mov
fdivrp
mov
mov
sub
out
push
push
addr16
fldt
movsl
scas
jecxz
mov
pop
les
jge
in
push
ss
mov
jp
stos
add
fs
movsl
ja
mov
icebp
movsl
cmp
push
inc
lahf
scas
addb
into
mov
jne
mov
inc
ss
addr16
pop
inc
not
sub
sbb
pop
adc
mov
push
pop
popa
inc
xchg
mov
je
cmpsl
jecxz
dec
xorl
fwait
and
pop
mov
adc
test
jno
cld
stc
lea
iret
loopne
subb
icebp
int3
mov
jne
pop
loopw,pt
testb
xchg
cmp
ss
mov
push
mov
sbb
bound
pushf
mov
push
cmp
push
xchg
sbb
repz
dec
lods
sbb
cmp
jae
mov
xchg
jle
or
xchg
je
mov
loop
push
push
push
fwait
jge
popf
divb
cmp
imul
je
in
mov
sub
xchg
outsl
test
push
xor
pop
and
or
inc
jbe
mov
push
and
xchg
es
push
lock
gs
cltd
mov
cs
out
in
stos
xchg
push
jne
xchg
jmp
addr16
and
lods
mulb
xor
imul
add
daa
jp
push
fidivrl
ja
outsl
call
cmp
sbb
adc
jbe
pop
mov
cs
push
cli
pop
ret
clc
popf
scas
aaa
mov
jno
cmp
popa
add
sub
data16
dec
hlt
rorb
loopne
mov
aas
jae
push
add
mov
add
outsl
fstl
or
stos
sbb
cmp
mov
xor
jbe
push
sub
jp
push
std
mov
mov
jae
dec
adc
push
fldt
sahf
pop
daa
sbb
popf
mov
lods
jns
jne
ja
cmp
mov
push
out
pop
push
bound
rcr
loop
xchg
sub
xchg
dec
jo
outsb
movsb
cmp
push
fmull
lds
dec
jbe
xchg
mov
scas
sbb
pusha
imul
es
pop
xchg
mov
scas
add
out
jmp
mov
mov
stos
dec
dec
xchg
cwtl
rolb
hlt
fsubp
push
out
pop
sahf
xor
out
jbe
lods
int3
cli
push
jp
out
push
mull
inc
and
imul
mov
mov
pop
sub
psubsw
cmc
mov
icebp
add
xor
sbb
jns
adc
aam
jae
mov
sub
ljmp
ljmp
pop
and
cmp
test
xchg
dec
push
lret
cwtl
mov
mov
cmp
lods
jg
fwait
popf
or
stos
pop
mov
bound
or
jecxz
or
sahf
roll
xor
divl
jno
push
cmpsb
lahf
popf
inc
cmp
insb
dec
lds
cld
mov
into
mov
push
push
xor
push
push
test
mov
or
pop
mov
out
pop
je
push
ror
into
dec
out
lods
pop
add
sub
and
or
fsubs
xor
jl
pop
cmp
loop
int3
jmp
nop
into
xor
mov
lock
sub
enter
cmp
hlt
inc
adc
mov
dec
xor
sub
jae
std
cmp
dec
nop
push
pusha
xor
dec
lret
out
cmp
jb
ret
mov
adc
mov
sbb
sarb
cmp
adc
sbb
mov
mov
xor
sysexit
lock
scas
fisttps
mov
pop
push
mov
mov
repz
insl
loope
cmpsl
mov
out
sub
loop
sub
sub
call
mov
aas
in
push
mov
ss
loop
xor
aad
in
inc
dec
sbb
pop
aam
mov
push
pop
sbb
cli
inc
bound
xchg
out
sbb
adc
loop
lret
aas
pop
scas
xchg
cmp
jns
fstpl
xchg
sbb
fidivrs
inc
xor
lea
int
and
clc
cli
and
stos
mov
inc
sub
dec
mov
scas
jmp
imul
cmpsb
jae
inc
mov
mov
sarb
cli
nop
psrlq
arpl
push
idivb
xor
adc
loopne
lods
mov
jns
xor
lea
xorb
sahf
pop
pop
adc
pushf
fildll
andb
mov
out
inc
sub
cmpsl
inc
test
mov
or
pop
push
faddl
adc
mov
mov
xchg
cli
xor
xor
mov
xor
mov
lcall
add
arpl
xchg
cltd
mov
xchg
mov
push
jne
inc
dec
aad
fidivrl
cmp
xchg
aaa
mov
nop
cmp
out
dec
pop
and
pusha
les
leave
clc
orl
sbb
push
mov
mov
stc
xchg
mov
push
mov
cmp
lret
push
scas
neg
test
lods
xor
bound
enter
fs
std
push
push
sub
pop
inc
ds
add
pusha
fcompl
dec
imul
jns
pop
or
loop
jno
fimuls
sub
xchg
fldpi
or
scas
mov
addr16
dec
jl
adc
xchg
xchg
imul
and
mov
sub
mov
das
call
dec
movsl
sti
mov
inc
or
dec
inc
popf
mov
mov
mov
dec
mov
inc
lds
push
mov
push
xchg
call
and
xchg
mov
rolb
in
cmp
xor
xchg
int3
adc
add
nop
mov
lods
mov
mov
testb
les
fidivl
inc
mov
mov
xchg
pop
mov
stos
mov
mov
jmp
in
sbb
adc
push
hlt
mov
inc
orl
das
mov
test
subb
popf
sub
fwait
aas
sub
pop
jmp
cwtl
fnsave
pop
xchg
sub
insb
jg
arpl
lods
ficoml
and
fists
add
test
adc
xor
nop
sbb
lods
jmp
or
jle
adcb
clc
popa
dec
nop
push
jno
leave
cli
xor
sbb
adcb
xor
adc
es
hlt
pusha
sbb
dec
ret
mov
rcrb
aas
xor
add
xchg
or
sub
sbb
dec
aad
out
xlat
aad
shl
cmp
cltd
into
xchg
pop
adc
rcrl
add
push
aam
aad
std
out
add
daa
xlat
lds
inc
les
bound
or
shlb
cmpsl
sbbl
xchg
xor
xchg
mov
cmpsb
jns,pt
push
pusha
add
test
adc
adc
cmp
adc
mov
pop
ror
push
arpl
ds
or
push
scas
das
push
outsl
mov
xlat
sub
faddl
popa
mov
rcll
jb
mov
sub
dec
sbb
push
imul
jg,pt
dec
scas
insl
cmp
sub
ds
jp
in
adc
imul
scas
xchg
inc
pop
and
test
mov
fidivrl
inc
sub
rclb
out
cmp
ret
repnz
push
pop
pop
lret
mov
adc
lahf
mov
leave
shlb
int
lret
sub
mov
rclb
sbb
cmp
in
out
xchg
cld
mov
lods
daa
shlb
xchg
dec
mov
sahf
push
or
enter
xor
loope
and
inc
clc
mov
dec
and
idivl
and
int
dec
mov
js
adc
gs
imul
test
fwait
cmp
cmp
scas
inc
pop
mov
mov
stc
out
ret
aad
out
dec
adc
fadd
dec
in
std
ds
xchg
cmp
je
test
hlt
inc
addr16
jb
xchg
cmpsb
roll
xor
jno
adc
sbbb
jae
sub
mov
fimull
jae
out
xor
push
aas
push
ret
mov
xchg
ds
andb
push
ret
test
sbb
andps
pop
stc
cmp
clc
jb
push
cmp
dec
lcall
push
js
dec
movsw
adc
loopne
sahf
adc
stos
mov
lds
shll
push
or
xchg
dec
xor
ret
cmp
loopne
popf
xlat
addl
popa
pop
mov
mov
insb
cmp
xorb
lods
test
jne
add
jge
xchg
pop
mov
mov
loope
inc
sbbb
jae
test
mov
push
lds
ja
scas
xor
mov
push
push
sahf
mov
shr
sti
or
andb
dec
call
call
std
divl
rcl
mov
jmp
test
repnz
jns
mov
inc
xchg
add
mov
cmp
push
out
sbb
dec
fadds
dec
mov
fs
jmp
sti
ljmp
fists
sbb
jg,pn
xchg
jp
test
lea
clc
call
dec
mov
or
xor
roll
cmp
int3
aaa
syscall
xchg
push
push
data16
xchg
and
cmc
insl
add
sbb
dec
push
jle
xor
xchg
push
rorl
and
inc
out
pop
push
fwait
and
rcr
mov
js
dec
push
pop
test
ficomps
mov
sub
dec
ret
xchg
lahf
mov
nop
dec
es
iret
or
loopne
popa
mov
ret
cmp
shrb
and
imul
jae
push
push
verr
cmp
sbb
sbb
js
movsb
rclb
in
sub
cmp
aaa
insb
out
cmp
fcoml
mov
jg
movsl
in
cmp
cmp
jp
jg
hlt
adc
add
je
pop
cltd
or
or
lahf
xchg
fwait
or
push
sarb
popf
cmpsl
dec
pop
or
stc
sub
outsb
ret
in
cmp
or
xchg
movsb
dec
xor
jno
pop
mov
lea
pop
insb
loop
pop
and
roll
xchg
and
mov
mov
cwtl
adc
push
lcall
cmp
pop
lock
push
inc
jecxz
popa
jle
cmp
mov
or
jno
call
mov
out
in
mov
jbe
inc
inc
add
ret
push
jmp
push
sbb
das
ja
clc
in
xor
mov
nop
mov
xor
add
rcr
cmp
ss
fmuls
imul
push
out
ja
out
xor
shll
sbb
ljmp
or
movsb
rcll
add
push
adcb
cmpsb
subl
mov
repnz
mov
lahf
mov
pop
mov
clc
mov
jb
ds
arpl
popa
bound
arpl
fucomi
adcl
mov
cmp
loopne
loop
das
mov
sbb
sahf
dec
sub
rorl
mov
popf
out
mov
jl
dec
cltd
mov
sub
fsts
mov
push
cmpsl
mov
cmp
add
mov
stc
sub
popf
cmp
iret
pop
sub
mov
call
sub
sahf
int3
sub
mov
dec
inc
lret
fnstsw
cmpsl
or
xchg
in
ljmp
icebp
dec
je
es
data16
or
movsb
jp
pop
lods
xchg
cmc
sub
bound
xchg
in
addb
jl
push
and
pop
xor
mov
fldcw
sbb
iret
rolb
and
mov
dec
loope
xchg
mov
dec
nop
and
cmp
mov
push
adc
pop
subl
jno
js
push
or
xor
jecxz
mov
mov
adc
add
outsl
push
es
bound
test
scas
addb
push
sub
dec
dec
pop
fwait
jnp
ja
adc
cmp
jne
das
mov
std
arpl
dec
and
jp
sahf
xor
daa
shr
sub
ljmp
into
andl
jg
fsubl
sub
sbb
loop
insb
lcall
mov
les
mov
mov
mov
inc
sub
xchg
addr16
mov
in
mov
cmp
jno
mov
popf
dec
sahf
mov
cwtl
cmp
sub
dec
test
icebp
mov
cmc
lret
iret
and
push
scas
pop
jg
jle
lahf
jne
and
lock
sahf
in
fptan
jnp
scas
inc
mov
or
sbbl
pop
sbb
mov
jb
push
arpl
mov
sub
lods
or
or
ljmpw
sub
enter
jno
push
xchg
pop
nop
push
or
or
ds
pop
aam
loope
pop
popa
in
cmp
enter
xor
pop
sbb
push
xchg
mov
sar
xor
or
cmp
sarl
stos
pop
in
imul
inc
cmc
xchg
push
testl
or
popf
push
cli
into
inc
hlt
pushf
imul
sbb
insb
cmc
clc
repnz
ret
icebp
ret
push
mov
cmpsb
mov
sbb
andl
lods
mov
mov
inc
in
or
fcmovnu
adc
mov
cmc
mov
stc
jbe
dec
pusha
dec
cwtl
cmp
adc
mov
sbb
outsb
mov
jo
add
jbe
rcll
mov
shrl
jp
cmp
sub
cmpsb
loop
xor
push
push
mov
mov
fs
and
mov
inc
cmp
loop
mov
sti
pop
fnstcw
add
aad
and
jae
cmpsl
cmp
pusha
inc
add
cmp
mov
mov
clc
mov
cmpsl
dec
shl
adc
repnz
xor
xchg
push
xchg
sbb
es
rorb
xchg
nop
adc
nop
scas
std
push
sub
sub
jge
sbb
cmp
xchg
sbb
fidivrl
jns
push
fidivrs
ficoml
mov
cmc
and
and
dec
and
push
out
inc
sahf
or
mov
ret
scas
addb
jnp
stos
cmpsb
push
adc
gs
addb
enter
inc
nop
daa
pop
testb
stc
ret
popa
cmc
fsubrl
andl
add
add
add
imul
add
addb
add
add
imul
nop
add
add
add
add
add
add
bound
outsl
add
je
and
add
add
add
add
add
incl
add
add
add
add
add
addb
add
add
add
add
bound
outsl
add
je
and
jae
je
jne
bound
xor
add
or
add
add
dec
add
and
push
add
add
add
add
add
add
add
add
add
incl
add
add
add
or
incl
add
bound
xor
sub
and
push
add
jb
jae
imul
and
xor
add
add
add
push
sub
sbb
jb
or
incl
add
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
push
jno
sub
xor
push
add
add
add
incl
add
add
add
bound
xor
add
add
add
inc
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
and
inc
add
add
add
add
add
lock
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
sub
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
dec
add
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
inc
add
cmp
and
cmp
inc
add
insl
add
popa
add
jns
and
outsb
add
insl
add
add
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
inc
add
cmp
and
cmp
inc
add
insb
add
and
add
jae
arpl
jb
imul
imul
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
je
jne
bound
xor
add
js
add
add
adc
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
jae
je
jne
bound
xor
add
js
add
add
adc
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
inc
add
cmp
and
cmp
push
add
outsl
add
add
je
and
outsb
add
insl
add
add
add
add
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
sbb
add
popa
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
push
inc
add
add
inc
add
add
and
and
sub
dec
xor
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
movsb
cmp
and
add
add
cmp
out
pop
cmp
test
push
cmp
cmp
cmp
cmp
dec
aas
push
aas
push
aas
je
jnp
cmpb
aas
movsb
aas
test
aas
sarb
out
aas
idivb
sti
aas
add
add
add
push
add
add
xor
xor
xor
dec
xor
pop
xor
xor
cmp
aas
aas
dec
aas
push
aas
pop
aas
imul
aas
ja
mov
xchg
aas
xchg
aas
cmpsb
aas
lods
aas
mov
mov
aas
fnstsw
jecxz
jmp
clc
aas
add
add
add
xor
xor
xor
xorb
xor
xor
xor
xor
inc
xor
push
xor
pop
xor
mov
scas
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
je
xorl
mov
adc
sbb
imul
aaa
xchg
aaa
cmpsl
aaa
lods
aaa
mov
mov
aaa
int3
aaa
shll
fidivl
loope
call
aaa
aaa
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
jb
js
jle
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ja
jge
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
xchg
cmp
mov
in
repnz
push
mov
push
add
push
add
add
xor
xor
xor
xor
xor
xor
sbb
sub
xor
cmp
aas
xor
mov
mov
shll
sti
xor
push
xor
xor
xor
xor
xor
xor
imul
xor
sub
cmp
push
lea
xchg
cmpsl
lods
ss
shlb
repz
ss
aaa
or
sbb
push
aaa
daa
aaa
sub
aaa
dec
aaa
push
aaa
push
aaa
bound
push
aaa
test
aaa
mov
aaa
in
aaa
sub
xor
pop
cmp
push
cmp
arpl
fwait
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
data16
jo
jbe
jp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
dec
cmp
jp
xchg
cmp
cmp
cmp
cmp
cmp
stos
cmp
int3
cmp
or
adc
sbb
and
ds
jp
test
xchg
lods
ds
ds
add
sbb
push
aas
daa
aas
cmp
pop
aas
sahf
aas
repnz
add
add
add
add
add
xor
xor
xor
xor
inc
xor
jbe
jle
lds
lret
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
dec
xor
cmpsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
ss
outsl
lea
mov
aaa
aaa
shlb
fdivs
call
aaa
push
cmp
push
cmp
cmp
cmp
cmp
dec
cmp
bound
insl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
xchg
cmp
cmp
ds
imul
mov
xchg
mov
ds
aas
inc
aas
jnp
mov
ret
aas
add
add
add
xor
cltd
xor
xor
xor
int
call
xor
xor
xor
xor
pop
xor
jo
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
test
std
ss
aaa
sub
popa
aaa
movsl
aaa
mov
mov
cmp
jp
ret
cmp
cmp
cmp
cmp
cmp
cwtl
cmp
push
ds
sub
pop
ja,pt
add
add
add
adc
and
xor
inc
xor
jle
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jg
mov
xor
xor
cmp
test
les
or
sub
inc
ss
ss
add
add
lock
xor
xor
xor
xor
or
or
adc
adc
dec
aaa
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
insb
cmp
jl
cmpb
cmp
cmp
cmp
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
add
add
add
scas
mov
add
add
cld
xchg
add
mov
add
adc
add
xchg
add
add
add
add
lock
sbb
add
xlat
add
cmp
add
mov
xlat
add
int3
roll
ss
add
add
xchg
roll
ret
add
flds
mov
add
add
add
add
ljmp
roll
fs
cld
roll
jp
add
inc
fiaddl
clc
add
sbb
add
inc
fldl
mov
add
sahf
fldl
scas
fldl
mov
fldl
call
fldl
or
add
sbb
add
sub
add
cmp
add
dec
fiadds
pop
fiadds
jo
add
sbb
add
add
add
add
ret
add
fiadds
ljmp
add
add
sbb
add
filds
inc
filds
push
filds
insb
filds
jl
add
mov
add
sahf
filds
mov
add
filds
filds
loopne
add
out
filds
add
add
push
loopne
add
loopne
add
loopne
add
add
add
fs
add
add
mov
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
add
add
add
add
push
add
jle
add
mov
add
lods
loope
add
add
loopne
add
hlt
loope
add
loop
add
loop
add
loop
add
add
pop
loop
add
add
js
add
mov
add
movsb
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
add
data16
add
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
add
cmp
add
inc
in
add
add
jb
add
test
add
pushf
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
add
add
jo
add
and
add
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
push
out
add
add
jb
add
and
add
out
add
out
add
out
add
add
sbb
add
sub
add
cmp
add
push
out
add
add
insb
out
add
add
mov
add
cmpsb
out
add
out
add
out
add
out
add
out
add
add
push
call
add
dec
call
add
je
add
test
add
xchg
call
add
mov
call
add
add
add
sbb
add
sub
add
inc
jmp
add
fs
add
test
add
nop
jmp
add
add
add
into
jmp
add
fsubrp
add
call
jmp
add
adc
add
sbb
add
add
add
xor
add
dec
ljmp
outsb
ljmp
lcall
add
add
loopne
add
lock
push
jmp
add
add
pop
jmp
add
add
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
in
add
push
in
add
and
add
xor
add
inc
in
add
push
in
add
fs
add
je
add
sub
add
in
add
mov
add
ret
add
in
add
fsubrp
add
in
in
add
add
add
push
in
add
and
add
cmp
add
dec
in
add
push
in
add
insb
in
add
jp
add
mov
add
sahf
in
add
lods
in
add
mov
in
add
fsubr
add
loop
add
repnz
add
or
add
and
add
ss
add
dec
out
add
push
out
add
insb
out
add
sub
add
out
add
mov
add
mov
out
add
in
add
hlt
out
add
or
add
sbb
add
sub
add
cmp
add
dec
out
add
pop
out
add
jb
add
mov
add
cwtl
out
add
stos
out
add
shr
add
out
add
loopne
add
hlt
out
add
push
lock
push
lock
xor
add
ds
dec
lock
pop
lock
jo
add
xor
add
lock
mov
add
mov
lock
fdiv
add
ljmp
add
lock
sbb
add
cs
add
ds
add
push
icebp
add
data16
add
je
add
test
add
nop
icebp
add
sahf
icebp
add
stos
icebp
add
mov
icebp
add
loop
add
out
icebp
add
add
add
adc
add
and
add
xor
add
inc
repnz
push
repnz
pusha
repnz
insb
repnz
jle
add
mov
add
lcall
add
repnz
fdivp
add
ljmp
add
repz
push
repz
sub
add
inc
repz
push
repz
data16
js
add
mov
add
cmpsb
repz
mov
add
lret
add
repz
out
repz
or
add
push
hlt
add
xor
add
inc
hlt
add
pop
hlt
add
outsb
hlt
add
jl
add
mov
add
cwtl
hlt
add
scas
hlt
add
ret
add
hlt
add
out
add
clc
hlt
add
or
add
sbb
add
es
add
xor
add
inc
cmc
add
push
cmc
add
cmc
add
jo
add
xor
add
cmc
add
lods
cmc
add
ret
add
cmc
add
loopne
add
repnz
add
add
add
push
testb
testb
testb
testb
testb
testb
testb
testb
testb
testb
testb
testb
testb
testb
testl
and
add
testl
pop
testl
js
add
test
add
xchg
testl
mov
testl
call
testl
add
add
sub
add
dec
clc
add
pop
clc
add
insb
clc
add
mov
add
cwtl
clc
add
scas
clc
add
clc
add
aam
add
out
add
clc
clc
add
adc
add
es
add
ss
add
inc
stc
add
add
add
mov
add
sahf
fldl
scas
fldl
mov
fldl
call
fldl
or
add
sbb
add
sub
add
cmp
add
dec
fiadds
pop
fiadds
jo
add
sbb
add
add
add
add
ret
add
fiadds
ljmp
add
add
sbb
add
filds
inc
filds
push
filds
insb
filds
jl
add
mov
add
sahf
filds
mov
add
filds
filds
loopne
add
out
filds
add
add
push
loopne
add
loopne
add
loopne
add
add
add
fs
add
add
mov
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
add
add
add
add
push
add
jle
add
mov
add
lods
loope
add
add
loopne
add
hlt
loope
add
loop
add
loop
add
loop
add
add
pop
loop
add
add
js
add
mov
add
movsb
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
add
data16
add
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
add
cmp
add
inc
in
add
add
jb
add
test
add
pushf
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
add
add
jo
add
and
add
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
push
out
add
add
jb
add
and
add
out
add
out
add
out
add
add
sbb
add
sub
add
cmp
add
push
out
add
add
insb
out
add
add
mov
add
cmpsb
out
add
out
add
out
add
out
add
out
add
add
push
call
add
dec
call
add
je
add
test
add
xchg
call
add
mov
call
add
add
add
sbb
add
sub
add
inc
jmp
add
fs
add
test
add
nop
jmp
add
add
add
into
jmp
add
fsubrp
add
call
jmp
add
adc
add
sbb
add
add
add
xor
add
dec
ljmp
outsb
ljmp
lcall
add
add
loopne
add
lock
push
jmp
add
add
pop
jmp
add
add
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
in
add
push
in
add
and
add
xor
add
inc
in
add
push
in
add
fs
add
je
add
sub
add
in
add
mov
add
ret
add
in
add
fsubrp
add
in
in
add
add
add
push
in
add
and
add
cmp
add
dec
in
add
push
in
add
insb
in
add
jp
add
mov
add
sahf
in
add
lods
in
add
mov
in
add
fsubr
add
loop
add
repnz
add
or
add
and
add
ss
add
dec
out
add
push
out
add
insb
out
add
sub
add
out
add
mov
add
mov
out
add
in
add
hlt
out
add
or
add
sbb
add
sub
add
cmp
add
dec
out
add
pop
out
add
jb
add
mov
add
cwtl
out
add
stos
out
add
shr
add
out
add
loopne
add
hlt
out
add
push
lock
push
lock
xor
add
ds
dec
lock
pop
lock
jo
add
xor
add
lock
mov
add
mov
lock
fdiv
add
ljmp
add
lock
sbb
add
cs
add
ds
add
push
icebp
add
data16
add
je
add
test
add
nop
icebp
add
sahf
icebp
add
stos
icebp
add
mov
icebp
add
loop
add
out
icebp
add
add
add
adc
add
and
add
xor
add
inc
repnz
push
repnz
pusha
repnz
insb
repnz
jle
add
mov
add
lcall
add
repnz
fdivp
add
ljmp
add
repz
push
repz
sub
add
inc
repz
push
repz
data16
js
add
mov
add
cmpsb
repz
mov
add
lret
add
repz
out
repz
or
add
push
hlt
add
xor
add
inc
hlt
add
pop
hlt
add
outsb
hlt
add
jl
add
mov
add
cwtl
hlt
add
scas
hlt
add
ret
add
hlt
add
out
add
clc
hlt
add
or
add
sbb
add
es
add
xor
add
inc
cmc
add
push
cmc
add
cmc
add
jo
add
xor
add
cmc
add
lods
cmc
add
ret
add
cmc
add
loopne
add
repnz
add
add
add
push
testb
testb
testb
testb
testb
testb
testb
testb
testb
testb
testb
testb
testb
testb
testl
and
add
testl
pop
testl
js
add
test
add
xchg
testl
mov
testl
call
testl
add
add
sub
add
dec
clc
add
pop
clc
add
insb
clc
add
mov
add
cwtl
clc
add
scas
clc
add
clc
add
aam
add
out
add
clc
clc
add
adc
add
es
add
ss
add
inc
stc
add
add
add
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
push
gs
gs
popa
insb
jne
push
add
add
push
gs
outsb
jne
dec
gs
js
add
add
je
jae
jb
popa
insl
gs
add
add
push
gs
outsl
je
data16
push
dec
gs
popa
insb
jne
add
add
addr16
outsb
jne
push
popa
insb
jne
push
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
push
gs
jo
outsb
dec
gs
js
add
add
addr16
outsb
jne
dec
gs
add
add
addr16
insb
outsl
jae
dec
gs
add
push
gs
jb
popa
je
dec
gs
add
add
addr16
jne
jb
dec
outsb
outsw
dec
gs
add
add
push
gs
jo
outsb
dec
gs
js
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
push
gs
jb
popa
je
dec
gs
js
add
add
addr16
gs
popa
insb
jne
inc
js
add
add
push
gs
gs
gs
push
popa
insb
jne
push
add
add
addr16
jne
jb
push
popa
insb
jne
push
add
inc
inc
dec
xor
cs
insb
add
add
je
je
arpl
bound
arpl
add
inc
jb
popa
je
push
popa
je
gs
inc
jb
jae
add
add
dec
data16
je
imul
dec
jb
inc
js
add
inc
gs
popa
jns
jne
add
add
insl
bound
gs
outsb
add
add
inc
jb
popa
je
inc
dec
inc
push
arpl
outsb
add
add
inc
gs
gs
inc
js
outsb
je
outsl
imul
add
push
je
gs
push
add
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
je
push
arpl
outsb
add
add
je
insb
imul
add
dec
outsb
je
jb
arpl
imul
add
inc
gs
imul
dec
jb
inc
js
add
add
je
imul
dec
jb
inc
js
add
add
insb
arpl
imul
add
je
insb
je
add
add
je
imul
outsl
jb
add
add
gs
je
inc
outsl
insl
jo
je
bound
inc
add
add
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
data16
je
imul
addr16
js
add
inc
gs
gs
inc
inc
add
add
push
gs
imul
outsl
jb
add
add
je
insb
je
add
add
je
gs
dec
jne
push
add
add
je
gs
inc
js
outsb
je
outsl
imul
inc
gs
insb
imul
add
inc
gs
bound
arpl
add
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
imul
add
add
gs
je
inc
outsl
outsb
je
outsb
imul
add
inc
gs
gs
dec
bound
arpl
add
inc
gs
gs
dec
gs
imul
push
gs
arpl
push
arpl
add
inc
gs
gs
arpl
popa
jo
add
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
add
push
gs
je
gs
push
outsl
fs
push
dec
inc
dec
xor
cs
insb
add
add
inc
gs
jns
je
insl
inc
imul
jns
add
add
gs
je
push
push
add
add
inc
jb
popa
je
dec
outsl
bound
push
arpl
add
add
imul
jae
add
push
gs
jb
arpl
jae
push
ja
push
popa
jb
insl
gs
jb
add
add
push
gs
gs
jae
dec
jne
gs
add
add
gs
je
dec
jne
gs
add
add
push
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
je
jb
jne
dec
outsb
outsw
push
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
push
gs
jb
outsl
jb
outsl
fs
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
add
push
gs
je
jbe
outsb
je
add
add
fs
imul
js
add
add
inc
outsl
insl
jo
jb
inc
imul
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
gs
push
push
jb
outsl
jb
je
add
add
je
jne
jb
outsb
je
push
dec
add
add
inc
gs
push
push
jb
outsl
jb
je
add
add
je
jne
jb
outsb
je
push
add
add
inc
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
add
push
insb
gs
add
inc
gs
imul
jo
push
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
js
add
add
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
outsl
arpl
push
imul
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
jb
imul
imul
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
add
inc
gs
imul
bound
gs
add
add
dec
outsl
jbe
inc
imul
jae
jb
insl
jo
add
add
dec
outsl
popa
fs
imul
js
add
add
inc
imul
add
add
outsb
fs
gs
inc
imul
imul
je
imul
insb
jae
jb
insl
jo
inc
add
add
je
jbe
outsb
je
add
add
jae
outsb
push
jb
arpl
jae
outsl
dec
outsl
bound
push
arpl
add
inc
gs
popa
je
inc
outsl
jb
popa
je
add
add
inc
gs
imul
popa
je
add
add
inc
insb
jne
push
jb
arpl
outsb
inc
popa
arpl
add
add
jb
jo
outsb
push
add
add
je
jns
je
insl
push
imul
imul
jns
add
add
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jb
arpl
jae
gs
jo
add
add
popa
jo
jb
add
add
dec
gs
jo
gs
insb
insb
outsl
arpl
add
dec
gs
jo
imul
dec
gs
jo
insb
insb
outsl
arpl
add
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
add
push
gs
fs
jb
arpl
jae
gs
outsl
jb
add
add
outsb
push
jb
arpl
jae
add
dec
outsb
je
jb
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
add
dec
outsl
popa
fs
imul
add
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
add
push
outsb
push
gs
js
gs
imul
gs
add
add
je
outsb
push
gs
js
gs
imul
gs
add
push
imul
jb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
jae
insl
gs
push
add
add
push
gs
imul
outsl
arpl
jae
add
add
insl
imul
jb
popa
add
add
je
jns
je
insl
inc
gs
jne
je
inc
dec
inc
add
add
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
add
inc
jb
popa
je
inc
jbe
outsb
je
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
outsb
inc
jbe
outsb
je
add
add
inc
gs
popa
jns
outsl
popa
fs
popa
imul
imul
add
push
popa
imul
insb
gs
bound
arpl
add
je
imul
je
add
add
jo
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsl
fs
gs
imul
add
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
jb
insl
jo
push
add
add
gs
je
push
jb
arpl
jae
add
add
inc
jb
gs
imul
add
inc
gs
imul
imul
jns
add
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
gs
je
inc
imul
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
popa
insb
inc
jb
add
add
je
jne
jne
fs
outsl
insl
jo
gs
outsl
outsb
push
je
je
jae
add
inc
jb
popa
je
dec
outsl
inc
outsl
insl
jo
gs
outsl
outsb
push
outsl
jb
add
add
push
gs
outsb
outsw
jb
popa
je
outsl
outsb
dec
outsl
bound
push
arpl
add
outsl
jae
dec
popa
outsb
fs
add
add
fs
imul
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
arpl
popa
je
inc
arpl
js
add
add
arpl
popa
je
inc
arpl
js
add
add
je
imul
bound
gs
js
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
je
inc
jbe
outsb
je
add
add
dec
gs
jo
gs
jb
jns
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
insb
inc
imul
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
add
insb
jae
jb
outsb
push
add
add
dec
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
outsl
bound
inc
insb
insb
outsl
arpl
add
dec
outsb
je
jb
outsl
arpl
fs
js
push
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
gs
imul
add
inc
insb
outsl
bound
inc
jb
add
add
inc
gs
jb
arpl
jae
imul
insb
jae
jb
jo
push
add
add
inc
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
add
add
push
imul
imul
insb
gs
bound
arpl
jae
arpl
cs
insb
add
add
pop
imul
jb
add
add
insl
gs
insl
outsl
jbe
add
add
popa
insb
insb
outsl
arpl
add
pop
gs
gs
pop
push
gs
add
add
insl
popa
insb
insb
outsl
arpl
add
add
je
insb
add
add
jae
ja
jb
outsb
je
add
fs
insb
cs
insb
add
add
insb
dec
je
je
je
jae
outsl
inc
outsl
jae
jb
outsl
jb
add
dec
je
jne
jb
dec
outsb
outsw
jb
popa
je
outsl
outsb
push
jb
arpl
jae
outsl
insb
xor
cs
insb
add
add
inc
jb
gs
outsb
jne
gs
imul
jae
add
push
imul
popa
addr16
jb
jo
add
add
gs
je
inc
imul
add
push
gs
imul
popa
addr16
jb
jo
add
add
dec
outsb
imul
inc
js
add
add
push
outsb
imul
imul
dec
insb
gs
outsb
imul
add
add
push
gs
imul
popa
jae
dec
bound
arpl
add
push
imul
popa
jae
dec
bound
arpl
add
dec
popa
jb
push
je
jb
push
dec
outsb
je
jb
popa
arpl
outsb
push
je
gs
insl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
gs
outsb
imul
imul
outsl
inc
jb
addr16
jb
jo
add
inc
push
xor
cs
insb
add
add
push
imul
ja
add
add
je
outsl
jne
insb
gs
insb
imul
add
add
inc
gs
jns
je
insl
dec
gs
imul
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
add
inc
insb
insb
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
add
dec
outsl
popa
fs
outsb
jne
add
add
je
jne
dec
outsb
jne
add
add
insl
outsl
jbe
dec
outsb
jne
add
add
je
popa
jb
outsb
je
add
inc
gs
gs
popa
addr16
outsl
jae
add
inc
push
insb
addr16
jne
je
outsb
add
add
inc
outsb
popa
bound
imul
add
inc
gs
insb
addr16
je
insl
dec
outsb
je
add
push
gs
insb
addr16
je
insl
dec
outsb
je
add
inc
outsl
jo
dec
arpl
add
add
inc
fs
jae
push
imul
arpl
add
add
inc
jb
ja
outsl
arpl
push
arpl
add
ja
fs
add
inc
js
je
imul
js
add
push
imul
outsl
insl
push
outsl
imul
gs
arpl
add
jo
outsb
fs
outsb
jne
add
add
fs
arpl
insb
gs
je
jb
push
add
add
fs
imul
add
outsb
fs
outsl
je
data16
gs
popa
addr16
add
add
push
gs
imul
popa
arpl
outsb
je
add
add
arpl
outsb
jne
je
insl
add
add
fs
imul
add
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
jae
popa
addr16
gs
add
inc
gs
arpl
gs
imul
add
jae
push
jne
je
gs
popa
add
add
jbe
push
imul
add
inc
gs
insb
addr16
je
insl
add
add
push
gs
outsl
jbe
push
jb
jo
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
je
inc
inc
js
add
push
gs
jne
jae
jb
outsl
jae
add
add
imul
ja
jb
insl
push
outsl
imul
inc
push
inc
imul
gs
imul
add
push
imul
je
gs
add
add
jb
imul
je
gs
add
add
je
jne
jae
jb
add
push
outsb
fs
gs
popa
addr16
imul
add
add
je
imul
popa
arpl
outsb
je
add
add
fs
insl
popa
addr16
add
add
push
gs
imul
outsb
add
add
dec
outsb
je
jb
arpl
arpl
add
data16
je
arpl
add
inc
outsb
jne
inc
imul
outsl
outsb
imul
push
gs
ja
imul
add
push
jne
je
popa
arpl
arpl
add
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
imul
add
add
data16
popa
je
push
arpl
add
insb
insb
push
imul
outsl
arpl
add
inc
gs
insb
addr16
je
insb
dec
inc
add
add
push
gs
popa
jo
jne
add
add
dec
outsl
arpl
gs
outsl
jb
addr16
jne
fs
imul
add
jae
gs
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
outsb
fs
imul
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
inc
gs
outsb
jne
gs
jne
je
je
insl
add
add
inc
gs
jb
jns
outsb
jne
add
inc
gs
push
imul
add
inc
outsb
jne
inc
push
imul
add
add
je
imul
outsb
addr16
add
add
push
outsb
fs
gs
popa
addr16
add
add
push
imul
outsb
outsl
ja
gs
popa
addr16
add
add
inc
gs
gs
je
je
add
add
jo
push
arpl
add
dec
outsl
outsb
imul
push
arpl
add
outsb
imul
push
outsl
imul
push
imul
popa
jae
push
add
add
push
gs
jb
jo
add
add
inc
gs
imul
outsb
addr16
add
add
push
gs
imul
outsb
addr16
add
add
inc
imul
add
add
je
jne
jae
jb
outsl
jae
add
add
jae
popa
addr16
outsl
js
add
add
fs
je
imul
push
gs
gs
jae
inc
inc
add
add
je
inc
add
add
jne
inc
imul
gs
imul
add
add
inc
outsb
jne
inc
imul
gs
arpl
push
add
add
jae
dec
gs
popa
addr16
add
add
inc
imul
dec
gs
popa
addr16
add
add
push
jb
outsb
jae
popa
je
dec
gs
popa
add
add
inc
gs
gs
popa
addr16
add
add
imul
jae
addr16
add
add
push
je
outsb
push
arpl
add
inc
imul
add
add
inc
outsb
fs
popa
imul
push
gs
imul
js
push
add
add
inc
gs
jae
outsb
arpl
jns
je
je
add
add
dec
outsb
jbe
insb
imul
je
add
add
je
imul
add
outsl
ja
imul
jns
arpl
add
push
jb
arpl
outsl
jo
jo
outsb
jne
js
add
add
fs
je
push
imul
add
inc
gs
jb
jns
arpl
add
add
push
arpl
jo
jns
add
push
gs
arpl
gs
imul
add
je
jns
inc
outsl
insb
outsl
jb
add
inc
jb
ja
gs
push
add
add
dec
jne
addr16
jo
push
imul
add
je
imul
add
je
outsb
jne
je
insl
dec
inc
add
add
arpl
outsl
jo
jo
outsb
jne
add
add
fs
popa
jae
add
add
outsb
fs
gs
popa
addr16
popa
insb
insb
bound
imul
add
inc
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
add
fs
arpl
push
add
add
outsb
dec
outsb
jo
je
gs
je
jo
add
add
outsl
jae
inc
gs
je
jo
add
add
je
arpl
insb
insb
push
outsl
jae
add
add
outsl
ja
imul
add
inc
jb
outsb
addr16
imul
push
outsl
jo
add
add
je
gs
je
jo
imul
add
inc
popa
jae
popa
fs
imul
add
add
popa
jb
jo
gs
jne
push
add
add
push
ja
je
push
imul
ja
add
add
je
jb
popa
insb
inc
gs
imul
js
add
add
je
arpl
insb
insb
dec
outsb
outsw
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
add
gs
je
push
imul
push
add
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
addr16
popa
imul
je
jo
gs
bound
arpl
add
inc
push
js
inc
add
add
imul
imul
inc
outsl
jb
popa
je
add
add
inc
outsb
fs
gs
imul
jae
add
inc
gs
imul
jae
add
add
imul
push
imul
jae
add
push
jb
outsb
je
imul
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
je
jb
jo
add
add
inc
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
add
je
gs
inc
insb
addr16
popa
bound
gs
add
add
imul
ja
jb
insl
push
outsl
imul
add
dec
jae
push
add
dec
outsl
je
data16
imul
add
add
push
jb
arpl
outsl
jne
gs
jbe
outsb
je
add
inc
gs
popa
jo
jne
add
add
inc
gs
outsb
arpl
je
jb
add
inc
push
jo
jb
add
add
push
gs
imul
outsb
addr16
add
add
inc
jb
ja
popa
jo
imul
outsl
imul
push
add
add
jae
jb
dec
outsb
jne
add
add
push
imul
popa
bound
add
add
je
outsb
jne
je
je
add
add
dec
outsl
popa
fs
jne
jae
jb
add
add
je
popa
jb
outsb
je
add
dec
jae
insb
addr16
jne
je
outsb
inc
push
add
add
inc
gs
jb
jns
imul
add
jne
push
imul
add
dec
jae
imul
jae
bound
add
inc
gs
insb
imul
je
add
push
outsb
imul
add
add
jne
insb
push
arpl
add
je
imul
jb
popa
fs
jb
arpl
jae
add
add
inc
gs
outsl
jb
addr16
jne
fs
imul
add
insb
insb
push
imul
inc
gs
insb
popa
jae
dec
outsb
outsw
inc
js
add
add
push
imul
outsl
arpl
add
add
imul
popa
jae
inc
js
add
add
inc
gs
arpl
dec
outsb
outsw
add
add
je
arpl
insb
insb
dec
outsb
outsw
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
je
outsl
jb
addr16
jne
fs
imul
add
push
imul
add
inc
gs
jns
je
insl
dec
outsb
jne
add
dec
jae
arpl
imul
jae
outsl
outsl
insl
gs
add
inc
outsb
popa
bound
outsb
jne
je
insl
add
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
add
dec
outsl
outsb
imul
push
imul
add
je
outsl
outsb
imul
push
add
add
je
imul
outsw
add
add
je
outsl
arpl
add
add
push
gs
outsl
arpl
add
add
dec
popa
jo
imul
imul
push
arpl
outsb
push
outsl
inc
insb
imul
add
imul
arpl
outsb
add
add
inc
gs
imul
arpl
add
je
imul
jae
add
add
gs
dec
outsb
jne
add
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
add
inc
push
js
push
add
push
push
fs
insb
add
add
je
push
popa
arpl
jb
jne
fs
outsl
outsb
je
outsb
je
arpl
add
je
push
outsl
outsl
insb
add
add
inc
gs
push
popa
jb
push
imul
inc
jb
ja
push
popa
jb
outsb
je
popa
arpl
jb
jne
add
add
outsb
push
push
popa
je
add
add
ja
push
popa
arpl
jb
jne
add
add
je
push
gs
inc
js
outsb
je
add
add
ja
push
gs
add
add
outsl
jae
push
push
popa
je
add
add
push
gs
imul
gs
add
add
inc
gs
push
popa
arpl
jb
jne
fs
imul
inc
gs
push
popa
jb
imul
gs
push
outsl
insb
outsl
jb
add
inc
gs
push
outsl
outsb
je
add
add
je
push
arpl
