call
in
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
pushl
shlb
pop
add
call
add
pop
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
jmp
ret
std
sub
mov
cld
add
mov
mov
shl
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
mov
popf
dec
call
add
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
xor
add
push
mov
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
sub
test
jne
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
or
add
jbe
add
push
and
add
and
add
and
add
and
add
add
cli
and
add
and
add
add
fsubl
add
data16
add
add
cld
and
add
and
add
and
add
and
add
add
add
add
movsb
and
add
add
jp
add
lret
add
and
add
and
add
add
mov
and
add
and
add
add
lcall
add
and
add
add
and
add
add
add
add
push
add
add
and
add
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jp
add
movsb
and
add
and
add
add
push
and
add
and
add
and
add
and
add
add
cli
and
add
and
add
add
fsubl
add
data16
add
add
cld
and
add
and
add
and
add
and
add
add
add
add
movsb
and
add
add
jp
add
lret
add
and
add
and
add
add
mov
and
add
and
add
add
lcall
add
and
add
add
and
add
add
add
add
push
add
add
add
popa
jo
jb
add
repnz
imul
jb
je
arpl
add
push
add
outsb
fs
outsl
insb
jne
gs
insb
outsl
jae
add
insb
jae
jb
outsb
inc
add
data16
je
je
dec
popa
outsb
fs
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
gs
inc
imul
gs
jne
jb
outsb
je
jb
arpl
jae
aam
inc
gs
jb
jbe
push
jns
gs
add
add
popa
jo
gs
jb
jns
test
inc
jb
popa
je
inc
jbe
outsb
je
add
push
add
outsl
jae
dec
popa
outsb
fs
add
dec
jo
outsb
dec
jne
gs
add
cmp
fs
imul
add
movsl
add
je
gs
imul
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
je
jb
jbe
je
push
jb
imul
push
add
inc
jne
jb
outsb
je
push
add
dec
add
popa
insb
dec
outsl
arpl
push
push
je
imul
inc
add
out
inc
gs
imul
bound
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
adc
inc
insb
insb
push
outsb
jb
imul
jb
gs
mov
inc
push
add
gs
insb
inc
bound
je
add
add
inc
jb
add
and
inc
js
jb
arpl
outsl
outsb
inc
add
addb
dec
inc
gs
popa
insb
insb
outsl
arpl
push
add
addr16
arpl
jo
inc
imul
dec
inc
jb
add
mov
push
push
gs
popa
addr16
outsl
js
add
sbb
inc
jb
addr16
jne
jb
inc
imul
push
dec
inc
gs
gs
imul
inc
jne
insb
imul
outsl
outsb
add
add
addr16
imul
push
dec
inc
dec
dec
xor
cs
insb
add
inc
gs
jbe
imul
imul
or
push
push
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
add
push
push
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
dec
inc
inc
inc
inc
push
xor
cs
insb
add
xor
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
int
or
int
pop
sub
ret
push
test
testb
pusha
or
loope
cmp
gs
mov
and
cli
xor
xor
pop
xor
push
and
sbb
ljmp
scas
add
inc
cmp
cwtl
mov
les
sbb
daa
mov
xor
test
stc
clc
xor
xor
cmpsb
mov
cmp
jno
jns
pushf
call
arpl
push
mov
jl
inc
test
imul
out
and
and
out
divl
rclb
lea
or
imul
popf
jae
sbb
aas
jle
cmp
cmp
in
das
mov
sub
or
ss
insb
sbb
mov
cmpl
gs
leave
scas
pop
inc
jne
sub
and
insb
cmp
enter
fisttpl
cwtl
inc
pop
mov
xor
push
shrb
and
mov
xrelease
fadd
or
inc
outsl
movsl
inc
test
sub
mov
bound
cmp
call
and
dec
movsl
inc
ljmp
add
sbb
pop
sbb
clc
fisubl
mov
pop
aas
int3
adc
icebp
xchg
test
dec
test
pop
shrb
testl
sbb
push
mov
pop
jle
mov
movlps
adc
cltd
rclb
push
inc
mov
cmp
cmp
test
outsl
sub
movsb
mov
aas
xchg
in
test
aam
pop
dec
jl
sub
cmp
pop
in
mov
lcall
fistl
les
and
movsl
cs
or
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
scas
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
lods
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jl
jp
lods
lods
lods
add
test
mov
mov
mov
leave
leave
lret
int3
rcl
in
rcl
shl
rcl
shl
int3
into
int3
hlt
enter
mov
mov
mov
lods
lods
stos
lea
cltd
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
out
lret
rcl
sar
xlat
xlat
fdivr
fcom
fdivr
fcom
fdivr
aad
aam
rcl
sar
int3
int3
into
aad
ror
sar
mov
mov
scas
iret
movsb
movsl
movsl
xchg
mov
and
add
push
add
add
add
add
add
add
add
add
stos
lods
stos
add
scas
sbb
mov
jnp
mov
sar
lret
call
iret
sar
aam
aad
fcom
fcom
xlat
call
aam
dec
int
dec
int
call
dec
int3
int
rol
mov
mov
lods
std
cmpsb
cmpsl
cmpsb
ljmp
push
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
dec
add
push
add
push
or
or
sbb
add
add
or
or
or
add
add
add
mov
add
mov
inc
mov
mov
mov
mov
ret
leave
dec
int3
into
call
rcl
call
xlat
xlat
call
call
aam
dec
int3
int
lret
dec
int3
int
inc
rol
mov
mov
ljmp
mov
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
or
push
imul
pop
pop
pop
fs
push
push
das
push
or
sbb
ss
cmp
and
adc
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
mov
ret
dec
leave
leave
dec
rcl
call
aad
aad
aam
iret
rcl
inc
enter
mov
mov
mov
ljmp
movsb
mov
xchg
xchg
cwtl
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
jno
jle
jl
jg
jge
jb
jo
arpl
mov
cmp
cmp
mov
outsb
outsl
outsl
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsb
movsb
movsb
add
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
dec
lret
lret
dec
enter
ret
mov
mov
ljmp
movsl
mov
call
xchg
xchg
cwtl
cwtl
xchg
cltd
lcall
aas
ds
prefetchw
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
jo
pop
pop
pop
or
pusha
xchg
mov
xchg
xchg
xchg
incb
jnp
idivb
jnp
outsb
outsb
jo
addr16
data16
je
jge
jle
js
jp
arpl
inc
inc
inc
cmp
sbb
sbb
movups
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
test
lcall
nop
nop
incl
addb
xchg
xchg
lahf
sahf
mov
ficoms
nop
nop
jle
js
pop
xor
das
add
add
add
add
add
add
add
add
add
add
mov
pop
push
addb
in
mov
mov
addb
decb
mov
loope
jno
enter
mov
addb
addr16
cmp
es
jle
jge
lcall
shrb
lods
lods
sti
stos
lods
stos
stos
lods
lods
stos
test
movsb
std
fwait
lcall
mov
jg
jns
jns
jnp
jnp
mov
xchg
movsl
mov
mov
mov
mov
mov
mov
mov
lods
scas
stos
xchg
sbb
add
add
add
add
add
add
add
add
push
pop
adc
movsb
test
mov
mov
xchg
xchg
xchg
incl
xchg
lea
std
xchg
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
or
lea
mov
prefetch
rdmsr
inc
inc
inc
dec
insl
insb
insl
jl
test
leave
fwait
cltd
cltd
fistps
cltd
stc
xchg
xchg
std
mov
mov
mov
mov
nop
lcall
cmpsb
cmpsb
ljmp
mov
std
mov
mov
mov
std
mov
mov
mov
jl
or
add
add
pop
pop
adc
test
mov
incl
xchg
decb
xchg
xchg
popf
sahf
popf
std
movsl
mov
mov
in
nop
nop
in
test
push
jne
or
add
or
or
es
push
dec
dec
dec
data16
jo
mov
xchg
rclb
xchg
std
lea
nop
call
mov
cmpsb
ljmp
test
scas
mov
xchg
test
std
les
mov
ljmp
sahf
adc
add
add
pop
pop
adc
scas
mov
lcall
mov
decl
nop
call
xchg
xchg
popf
pushf
sahf
mov
stos
test
notl
jp
movsl
push
push
push
outsl
dec
dec
dec
pop
pusha
popa
jne
jb
mov
jle
test
mov
mov
xchg
testl
mov
jmp
mov
mov
pop
mov
xor
ja
mov
cmpsb
mov
mov
lods
lods
mov
mov
add
mov
pop
pop
adc
mov
ljmp
sahf
decl
call
xchg
xchg
call
cwtl
cwtl
lcall
lahf
lahf
lahf
mov
movsb
movsl
stc
cltd
lcall
mov
xchg
aad
xchg
lcall
lea
stc
xchg
test
std
xchg
jae
cltd
push
test
mov
inc
jl
mov
jnp
mov
jae
mov
outsb
ljmp
adc
stos
or
stos
or
mov
jle
mov
mov
lods
pushf
mov
mov
add
shll
xchg
mov
ljmp
lahf
call
xchg
xchg
lcall
sahf
sahf
lcall
pushf
popf
call
xchg
xchg
call
cwtl
nop
call
lcall
cltd
sahf
stc
mov
mov
xchg
insb
mov
xchg
pop
jle
cwtl
dec
jp
lcall
popf
pop
addr16
mov
adc
arpl
test
adc
stos
adc
scas
adc
mov
imul
mov
imul
ds
cltd
lods
mov
scas
scas
scas
movsb
mov
mov
add
pop
pop
adc
mov
ljmp
sahf
call
pushf
lcall
movsb
movsl
jmp
mov
xchg
decl
mov
mov
mov
xchg
ja
fwait
jo
lcall
call
sub
decl
adc
xchg
or
pop
call
add
mov
adc
stos
sbb
pushl
sbb
jo
mov
and
and
mov
inc
cmp
xchg
scas
mov
lods
scas
mov
lahf
sahf
lahf
add
add
add
add
mov
lods
add
pop
adc
lods
mov
shlb
sahf
sahf
popf
jmp
cmpsb
cmpsb
jmp
stos
test
lcall
jle
decl
dec
jno
mov
imul
sub
mov
decl
or
incl
add
mov
push
decl
add
xchg
add
lcall
jmp
and
mov
jbe
mov
sub
sub
inc
sub
jg
enter
enter
enter
leave
lea
cld
scas
mov
lret
mov
add
add
add
add
add
push
push
adc
test
ljmp
sahf
jmp
test
stos
ljmp
mov
ljmp
mov
mov
mov
arpl
test
push
incl
add
incl
add
addl
decl
add
add
xchg
add
cltd
add
sahf
add
add
scas
adc
mov
aaa
cmp
cmp
dec
cmp
dec
cmp
call
cmp
mov
rorl
dec
mov
std
mov
mov
movsl
movsb
movsb
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
mov
sahf
cltd
lahf
jmp
scas
lods
pushl
mov
pushl
mov
ljmp
ja
decl
push
decl
orps
xchg
push
incl
add
push
decl
add
xchg
add
pushf
add
mov
add
lods
add
pushl
cmp
int3
inc
call
inc
mov
rorl
call
dec
xchg
fmuls
fimull
fisttpll
ficoml
call
xchg
std
mov
mov
movsl
mov
mov
add
inc
inc
adc
jl
popf
mov
lcall
stos
stos
pushl
mov
pushl
mov
mov
scas
mov
movsb
mov
decl
pusha
decl
adc
pop
decl
add
popl
push
call
pop
jmp
add
test
pop
pushl
and
call
push
cltd
call
push
lcall
push
pushf
ficomps
jmp
pop
pushf
jmp
pop
lahf
jmp
pop
mov
fadds
ret
mov
mov
test
test
sahf
mov
lahf
add
inc
inc
adc
ja
sahf
fwait
sahf
jmp
lahf
lcall
mov
mov
mov
mov
mov
mov
mov
ljmp
inc
jbe
nop
and
xchg
and
call
arpl
xchg
sbb
or
nop
add
xchg
add
fwait
add
mov
add
lods
add
mov
fs
mov
xor
jmp
bound
jmp
data16
in
test
out
test
call
addr16
dec
mov
mov
mov
sahf
lahf
add
inc
inc
adc
jb
lcall
lcall
lods
lods
pushl
mov
mov
mov
mov
ljmp
push
jg
xchg
sub
fwait
jo,pn
lcall
call
or
xchg
add
fwait
add
mov
add
lods
add
mov
pushw
movq
rolb
fldt
jmp
outsb
stos
jmp
outsl
lods
jmp
jno
jmp
jae
jmp
mov
out
jbe
out
jne
in
je
jmp
mov
mov
test
lcall
mov
add
add
add
add
insl
js
mov
popf
pushf
fwait
pushl
mov
mov
mov
mov
mov
cmpsl
scas
lcall
jo
sahf
cmp
sahf
aaa
jne
mov
sbb
pop
call
add
add
stos
add
mov
popa
pushl
add
leave
sbb
fistl
in
mov
jmp
jle
in
jg
in
cmpl
push
xchg
push
cmpb
mov
inc
mov
test
popf
pushf
popf
daa
sahf
mov
sahf
add
add
add
add
xor
push
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
mov
inc
mov
lcall
cmp
mov
inc
jge
mov
pop
call
add
add
test
add
add
mov
add
iret
daa
cmp
movsb
call
mov
push
mov
push
pop
push
xchg
nop
ret
stc
xchg
ret
mov
fidivl
lods
test
xor
sahf
pushf
add
add
add
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
xchg
mov
mov
mov
mov
mov
mov
inc
ret
ret
inc
mov
mov
jle
lcall
dec
cmp
movsl
xor
lcall
add
mov
add
lods
add
mov
mov
add
enter
xlat
xor
mov
in
xchg
lcall
repnz
push
fwait
leave
push
pushf
enter
int3
cld
popf
int3
cli
sahf
int3
cli
cltd
lret
xchg
ret
mov
inc
enter
mov
sahf
lahf
mov
add
add
add
ss
or
cmp
push
dec
dec
jecxz
pop
popa
decl
mov
mov
mov
mov
inc
inc
enter
mov
mov
ljmp
dec
xchg
mov
push
pop
lcall
add
add
mov
popa
mov
add
movl
jne
fiadds
out
mov
push
movsb
int
cmc
movsl
int
clc
test
sti
cmpsl
sar
cld
cmpsl
iret
cli
cmpsl
sar
cld
stos
iret
std
stos
iret
std
cmpsl
iret
push
lahf
jmp
mov
dec
lret
mov
mov
mov
xchg
xchg
add
fwait
cltd
add
add
add
xor
add
sub
or
inc
bound
push
xlat
je
jo
mov
rol
rol
mov
inc
ret
mov
dec
enter
rol
mov
cmpsb
jmp
mov
scas
dec
test
mov
add
mov
add
mov
arpl
mov
add
int
insl
call
add
fists
jl
out
pop
cmpsl
push
popf
lret
sti
scas
sar
cli
mov
cli
mov
cli
mov
cld
mov
std
mov
cld
mov
cld
mov
mov
cld
mov
push
movsl
jmp
mov
dec
enter
mov
ficompl
xchg
xchg
or
add
add
xor
push
add
dec
dec
outsb
outsb
jo
cwtl
lcall
fcom
jmp
fcom
not
rcl
std
int3
int3
into
dec
lret
leave
lret
leave
dec
lret
lret
mov
ljmp
push
mov
lods
cmp
popa
jmp
add
mov
mov
add
roll
outsb
call
add
fiadds
je
ljmp
cld
lods
sar
std
mov
fcos
std
mov
mov
xlat
cld
mov
xlat
std
mov
xlat
clc
mov
call
leave
int
mov
sahf
lahf
jo
xchg
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
enter
in
pop
out
jmp
test
in
leave
fsubp
fcmovnu
fcomp
fdivr
aad
fdivr
int3
ror
mov
push
cmp
sub
mov
add
mov
arpl
mov
add
leave
add
aam
jb
fldl
jbe
in
jbe
in
das
xchg
stc
mov
cli
mov
inc
loopne
inc
loop
inc
inc
std
fdivrp
std
leave
fdivrp
std
enter
dec
loopne
sti
mov
enter
iret
mov
mov
xchg
adc
add
add
incb
std
std
incl
std
incb
hlt
div
or
in
in
pop
jmp
in
sub
out
in
dec
ljmp
xchg
out
call
aad
fstp
jmp
mov
xchg
test
ja
movsb
adc
jmp
add
mov
fs
mov
add
int3
add
fadds
jae
fiadds
jbe
ljmp
cli
mov
loop
cld
int3
loop
std
int3
out
dec
in
dec
loop
dec
loope
dec
loope
std
shl
call
jecxz
std
shl
call
in
cli
ret
fcos
out
mov
fdivr
ret
out
cmpsl
cmpsl
cmpsl
mov
xchg
xchg
add
add
add
std
incl
std
std
add
stc
clc
add
hlt
repnz
repz
out
repnz
pop
out
lock
out
in
pop
loopne
loope
mov
xchg
sti
sahf
es
add
pop
ljmp
add
mov
add
roll
jb
fiaddl
jbe
in
jns
in
push
pop
stos
sti
mov
cld
shl
cld
shl
std
shr
call
out
shl
std
call
fsubr
fucomi
fucomi
std
shl
push
aad
in
fcos
lret
leave
lret
repz
stos
fwait
xchg
xchg
xchg
and
cwtl
cwtl
add
cli
add
stc
add
sti
clc
add
div
or
aad
xor
mov
xchg
negb
add
test
pusha
ljmp
add
ret
add
lret
call
add
faddl
ja
out
js
out
sbb
push
jne
cld
ret
loopne
std
fld1
fucomi
std
fldl2e
std
fucomi
fsubr
fucomp
std
fucomp
std
loopne
jmp
in
loopne
std
shl
push
ret
aad
out
rcl
sar
lods
lods
stos
lods
xchg
xchg
xchg
jo,pn
outsb
add
add
add
loopne
add
mov
cwtl
repnz
and
sahf
add
test
pusha
pushl
add
ret
dec
add
add
filds
je
ljmp
cli
nop
std
shl
jmp
lock
fucomp
fldl2t
fucomi
std
jmp
cld
shl
cld
iret
loope
sti
shl
push
into
clc
lret
cmc
ret
in
mov
sti
mov
mov
fwait
cltd
cltd
cmp
cltd
add
fcom
add
mov
subb
push
mov
add
mov
arpl
mov
add
iret
add
xlat
add
loope
jp
ljmp
cli
cwtl
enter
loopne
cld
lret
cld
clc
mov
aad
hlt
mov
into
push
mov
int3
ljmp
jmp
ret
sar
call
fsub
cmc
loopne
loopne
mov
mov
xchg
add
add
add
int
add
mov
cmpsb
loopne
xor
pop
ljmp
add
mov
add
int
jno
rorl
fimull
jns
loopne
cmp
ljmp
call
scas
enter
cld
fidivs
neg
mov
enter
into
in
leave
rcr
aad
loope
fcmovnb
out
loopne
in
in
test
out
out
popf
jmp
lret
stos
stos
stos
adc
cmpsl
cmpsl
cmpsb
add
rolb
ret
rol
pop
mov
stos
aam
dec
cmp
cmpsl
sbb
scas
and
mov
ja
mov
dec
test
les
stc
leave
gs
test
mov
shlb
enter
lret
lret
rcl
int
aad
shll
aam
jg
jb
gs
in
call
in
in
xor
cmc
div
and
lock
fcmovnu
or
mov
int3
add
add
add
mov
mov
les
imul
mov
pushf
in
mov
sarb
mov
ret
cmpsl
mov
mov
leave
int
ror
iret
addr16
iret
rcll
rcl
dec
xlat
aad
rcr
xor
fcmovbe
daa
ficompl
fstl
fucom
loope
in
call
icebp
out
add
sti
testb
cld
add
std
add
std
incl
mov
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
ror
xor
int3
lret
rcl
and
rcrb
iret
aad
adc
aam
rcl
aad
rcr
fadds
fstp
add
loopne
add
jecxz
add
in
jmp
add
incl
mov
mov
add
ret
ret
sub
ret
mov
mov
rorl
mov
push
enter
into
lret
add
rolb
rcr
aad
rcl
aad
aam
aam
xlat
aam
add
fsub
add
aam
add
loop
add
fstp
add
in
add
repnz
std
add
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
les
ret
mov
mov
mov
ja
test
test
xchg
xchg
xchg
pop
add
add
add
add
add
add
mov
mov
mov
sarb
into
iret
iret
jmp
aam
cmc
rcl
sar
into
into
iret
cli
int3
int
stc
lret
int3
lret
mov
mov
fwait
xchg
xchg
xchg
dec
aas
aas
cmp
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
mov
sarb
into
into
iret
xlat
call
xlat
aad
rcl
iret
dec
int
dec
lret
lret
mov
mov
cld
stos
stos
lods
icebp
cwtl
cltd
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jne
jne
je
fs
inc
dec
dec
cmp
sub
sub
ss
xor
dec
sub
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
dec
int3
lret
call
rcl
call
aam
dec
int3
lret
inc
rol
pushl
stos
stos
lahf
popf
lahf
xchg
xchg
xchg
jmp
jno
xchg
pop
adc
add
add
add
add
add
cmpl
addl
aam
push
mov
push
push
push
stos
push
push
push
pop
pop
cmp
cmp
pop
jno
jo
scas
scas
scas
pop
mov
mov
mov
mov
ret
mov
mov
mov
ljmp
fwait
pushf
call
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
wrmsr
add
add
add
add
add
pop
fwait
lcall
pushf
xchg
lcall
addl
jmp
js
sarb
jp
jnp
jnp
jb
jae
push
push
push
cmp
je
pushf
popf
sahf
mov
lods
lods
rep
scas
scas
sti
scas
scas
scas
std
cmpsl
cmpsl
test
sahf
pushf
popf
call
test
call
mov
lods
jmp
lods
scas
leave
movsb
movsl
movsl
cltd
jae
jae
adc
adc
add
add
add
add
outsl
outsl
outsl
pop
xchg
mov
loop
cltd
pushf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
outsl
orl
cwtl
repnz
xchg
xchg
std
mov
call
popf
popf
ljmp
test
std
mov
mov
stc
mov
mov
cmpsb
movsb
cmpsl
pop
cmpb
pusha
popa
popa
or
lods
mov
cmpsl
sahf
movsb
decl
lea
cwtl
cwtl
xchg
std
popf
sahf
lahf
sti
lahf
mov
cwtl
call
push
push
push
jo
push
push
outsl
imul
jg
subb
nop
xchg
lock
mov
lcall
pushf
pushl
outsl
xchg
mov
mov
jl
mov
lods
lods
insl
stos
stos
stos
or
add
add
add
add
popa
or
mov
in
mov
xchg
call
xchg
lcall
lcall
pushf
sahf
popf
cli
xchg
xchg
cwtl
jmp
xchg
mov
jecxz
orb
xchg
insb
xchg
xchg
pop
cmp
dec
jp
movsb
inc
js
lods
aaa
jbe
mov
jae
mov
insl
pushl
sbb
mov
scas
mov
scas
scas
scas
jle
mov
add
add
add
pusha
pop
popa
or
mov
in
mov
cwtl
lcall
mov
lahf
call
mov
mov
mov
xchg
jb
cld
xchg
pusha
cmp
dec
js
nop
cmp
xchg
daa
call
call
or
push
pushl
sbb
mov
and
mov
test
scas
xchg
sahf
popf
popf
adc
add
add
pusha
pop
popa
or
stos
mov
test
mov
test
test
test
lcall
pop
jnp
mov
push
mov
arpl
mov
pusha
incl
or
mov
decl
add
popf
add
cmpsl
or
and
jl,pn
shrl
inc
xor
enter
lret
xor
xchg
inc
test
mov
test
add
add
add
add
pusha
or
movsb
test
test
cmpsl
ljmp
mov
pushl
mov
jmp
inc
jo
mov
pop
decl
or
xchg
push
decl
add
xchg
add
mov
add
mov
insb
inc
cmp
into
inc
call
inc
nop
call
inc
xchg
fmuls
call
popa
sahf
inc
cmpsl
mov
mov
mov
mov
incb
add
add
popa
pop
pusha
or
mov
ljmp
mov
pushl
mov
stos
lcall
sbb
decl
or
popl
push
call
add
cmpsl
add
scas
add
jbe
rorl
fcomps
fcompl
fistps
loopne
mov
jmp
insl
test
int3
test
cld
mov
mov
cmpsl
stos
cmpsl
xor
addl
dec
dec
dec
pop
jge
jp
pushf
xchg
cltd
jecxz
mov
scas
pushl
mov
mov
lcall
cs
sub
and
call
add
sahf
add
add
mov
arpl
mov
xor
jmp
insl
test
ljmp
out
jb
call
test
mov
inc
jg
jg
add
add
dec
dec
dec
pop
insl
outsl
insb
bound
cwtl
xchg
pushl
mov
mov
mov
jne
lcall
cmp
pushf
sub
xchg
or
pushf
add
movsb
add
stos
add
mov
inc
or
aad
xchg
jmp
jns
jmp
cmpl
hlt
xchg
push
mov
mov
cmpsb
cmpsl
push
fwait
lcall
sub
sub
push
push
dec
pop
imul
mov
mov
mov
sarb
mov
xchg
ljmp
sub
cltd
or
add
test
add
mov
push
ja
loope
mov
push
xchg
ret
push
cwtl
push
cltd
push
cltd
leave
stc
pushf
lret
cwtl
jmp
lods
inc
mov
lods
popa
mov
add
add
xor
pop
pop
pop
pop
fisttpl
mov
mov
rol
inc
ret
mov
test
ljmp
and
sahf
add
pusha
pushl
push
fisubl
cmp
jnp
push
mov
iret
stc
test
sti
stos
iret
cld
stos
iret
cld
stos
sar
cli
test
jmp
mov
inc
rol
test
popf
pushf
or
add
add
dec
dec
dec
aaa
je
je
stos
stos
stos
ror
int3
into
out
iret
lret
cmc
lret
sti
enter
enter
mov
mov
test
inc
cmp
adc
test
add
ret
dec
add
fildl
push
xchg
mov
mov
fcos
mov
fdivr
mov
sar
jmp
leave
dec
rol
scas
lods
lods
mov
add
add
add
add
pop
or
rcl
dec
jecxz
fsubp
fistps
fcom
out
mov
gs
test
push
pusha
ljmp
add
enter
aad
jb
in
jl
repnz
mov
std
ret
loope
inc
loop
dec
loope
std
enter
enter
lret
std
out
mov
lret
mov
xchg
pushf
pushf
pushf
sbb
add
add
std
add
std
add
ljmp
in
in
jmp
ljmp
xchg
mov
mov
mov
add
pushl
add
int
outsb
faddl
je
jmp
insl
mov
cld
std
iret
in
shl
std
shl
call
in
std
out
fsubr
shl
push
fcos
fcmove
sar
mov
mov
add
std
std
add
incb
std
incb
aam
aad
mov
pop
xchg
lahf
or
ljmp
add
les
push
fiadds
jne
in
pop
mov
clc
mov
shl
fldl2t
fsubr
cld
xlat
jmp
cld
std
shl
push
enter
iret
sti
mov
popf
popf
das
add
add
into
int
or
bound
stos
add
mov
add
aad
jno
loope
ja
in
xor
sti
int3
loop
cli
lret
test
hlt
bnd
out
ret
in
in
in
aam
in
fsubr
enter
test
std
incl
aad
push
mov
jb
push
gs
mov
imul
sbb
lret
and
cs
loopne
pushf
clc
jecxz
mov
out
jecxz
lret
mov
lret
ror
ffreep
iret
mov
in
fcompl
in
jmp
rorl
mov
add
stos
stos
lods
add
xchg
mov
ljmp
xchg
fidivrl
andb
into
lahf
mov
iret
mov
nop
aam
jge
lret
insl
aad
int
rcl
rorb
xlat
xlat
cmp
das
in
fsubl
in
lock
in
in
or
incl
std
add
mov
outsb
mov
stos
jns
mov
mov
mov
mov
shrl
enter
aam
pop
rol
adc
rcl
or
loopne
or
into
into
add
std
std
add
incl
cltd
lcall
or
int3
int3
int
lods
stos
lods
add
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
fwait
fwait
add
rol
mov
xchg
leave
enter
mov
rol
mov
mov
insb
stos
stos
lods
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aad
rcl
sar
int
into
std
mov
stc
mov
mov
roll
pop
add
add
add
add
add
add
add
add
jb
jb
push
inc
dec
das
cs
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
ret
int
call
rcl
dec
int
inc
mov
ljmp
mov
mov
add
xor
add
sbb
je
je
xchg
aad
outsl
jo
bound
mov
data16
outsb
insl
outsl
jb
popa
bound
pop
pop
pusha
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
cwtl
cltd
lds
jae
es
add
add
add
add
jb
jae
pushf
xchg
lcall
xchg
xchg
or
addb
push
dec
inc
mov
fwait
into
mov
mov
xchg
decb
mov
scas
cmpsl
lods
cld
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
jg
jg
lods
mov
cmpsl
cld
mov
mov
xchg
xchg
xchg
cld
pushf
pushf
popf
cmc
cwtl
cwtl
cwtl
in
addb
imul
jg
mov
xchg
testl
mov
pushl
jo
mov
lods
lods
push
stos
stos
stos
add
add
add
test
scas
cld
xchg
xchg
xchg
call
fwait
cltd
call
lcall
xchg
mov
loope
je
out
xchg
fs
push
jl
pushf
inc
jne
cmpsb
aaa
je
scas
sub
jno
mov
insl
pushl
pushf
lods
lock
mov
imul
into
add
xchg
pop
scas
movsb
lods
test
sahf
sahf
lahf
jmp
movsb
call
jge
lea
nop
inc
jb
lea
imul
xchg
adc
xchg
or
mov
sbb
je
mov
daa
jnp
lds
test
mov
mov
subl
jne
push
mov
movsl
test
pushl
mov
lcall
sub
decl
or
xchg
decl
add
mov
adc
ret
dec
ds
rolb
call
inc
mov
push
xchg
dec
lcall
movsl
movsl
mov
add
push
cwtl
xchg
xchg
test
mov
lods
pushl
mov
movsb
call
pop
decl
pop
push
call
add
lods
add
mov
push
xchg
fcompl
jmp
pop
mov
jmp
cmpsl
call
fwait
mov
mov
mov
cmpsb
cmpsl
cmpsl
pop
add
add
bound
adc
pushf
lcall
mov
mov
scas
lcall
xor
cltd
and
xchg
push
pop
lcall
add
mov
xor
jmp
ja
jmp
mov
out
jl
push
jge
fistpl
mov
movsb
mov
add
dec
dec
dec
adc
imul
mov
mov
mov
rol
mov
bound
jmp
add
pusha
pushl
pop
insb
fimull
in
mov
push
xchg
push
xchg
clc
xchg
enter
mov
movsb
sub
inc
inc
inc
adc
push
xchg
xchg
mov
inc
sarl
ljmp
pop
jmp
pushl
add
aam
jns
in
insl
lods
push
cmpsl
int
clc
stos
sar
cli
scas
sar
std
scas
sar
std
lods
sar
in
mov
inc
mov
movsl
ds
std
incb
xor
xor
scas
mov
mov
mov
aam
rcl
out
leave
lret
mov
mov
jmp
inc
add
aam
jae
call
nop
mov
fdivr
std
ret
inc
fdivr
inc
icebp
mov
shl
test
dec
jg
addl
stos
stos
stos
add
jmp
or
out
call
outsb
fcomp
fisubl
movsl
and
pusha
mov
add
add
push
aaa
xchg
cli
mov
dec
out
call
out
call
in
shl
shl
push
fdivr
rol
into
in
scas
lods
scas
popa
addl
add
std
std
incl
incb
int
shrl
mov
add
mov
add
loope
jp
cmc
push
cmpsb
cld
enter
out
cld
out
std
aam
sti
aad
stc
aam
push
leave
fsin
fmul
shl
mov
mov
xchg
xchg
xchg
pop
ret
mov
cld
lods
push
gs
mov
or
fstpl
jg
ljmp
cli
out
mov
shl
call
ret
in
aad
call
fcmovu
scas
ret
ret
les
cltd
lcall
add
add
mov
stos
xchg
inc
and
push
mov
ret
int3
lret
mov
mov
lret
adc
into
outsl
xlat
lret
into
pop
fst
dec
in
loope
out
call
sbb
rol
add
mov
cmp
mov
lods
push
mov
mov
ret
mov
lds
sbb
bswap
int
or
aam
push
incl
cmpb
incb
stos
incb
mov
std
std
add
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
out
adc
cli
fdivrs
sbb
daa
dec
adc
mov
dec
fsubrs
xchg
repz
mov
es
bound
push
or
pop
stos
inc
add
aaa
sub
cmp
ret
or
mov
lahf
sub
adc
push
mov
or
sbb
add
inc
enter
cmp
fdivs
pop
push
inc
mov
sti
dec
xchg
int
mov
rcl
clc
mov
add
stc
cld
and
mov
sahf
subb
dec
jl
pop
push
imul
sti
ss
and
pop
and
std
jge
scas
xor
enter
mov
cmp
imul
lcall
inc
lret
in
push
or
call
mov
lret
addr16
dec
cmp
dec
sbb
stos
cltd
addl
and
and
scas
pop
mov
clc
and
mov
mov
scas
imul
repnz
sbb
imul
loopne
jg
daa
int3
pop
cmp
mov
repz
stos
and
xor
fwait
jne
sub
stc
adc
dec
les
push
pop
mov
pop
lds
std
js
mov
add
jae
jge
jo
and
bound
push
ficoms
movsl
dec
ljmp
xor
add
sbb
imul
jae
mov
add
pop
add
cmp
or
jl
pop
repnz
sarb
call
xor
and
scas
repnz
pop
dec
repz
stc
push
shrl
aam
sbb
test
ret
push
ret
mov
xchg
and
add
ficoml
mov
lock
cld
pushf
int3
stos
and
shlb
adc
fldcw
sub
sbb
inc
cmovbe
daa
mov
lahf
pop
stc
pushf
sub
outsl
pusha
lds
xchg
mov
mov
dec
idiv
je
call
dec
push
xchg
dec
mov
and
pop
dec
and
pop
adc
inc
xor
or
aam
insb
ret
or
jns
xchg
cwtl
out
dec
or
dec
dec
or
cmp
mov
into
mov
arpl
push
jle
mov
mov
stos
mov
shrb
insb
or
pop
pop
rorl
xlat
data16
and
jmp
and
out
mov
push
push
jns
add
in
jp
aaa
cmp
jle
mov
add
cmp
stos
daa
into
sub
pop
cs
jae
and
or
cltd
ja
mov
xchg
mov
mov
icebp
inc
fs
inc
ret
xlat
sahf
cmp
mov
test
lcall
es
mov
pop
push
aaa
xchg
xchg
cmp
mov
test
or
fsts
and
mov
ss
jo
icebp
pop
shrl
scas
iret
es
mov
jge,pn
jmp
add
dec
or
mov
loopne
mov
mov
mov
ret
push
xchg
repnz
xor
jmp
fwait
pop
leave
pop
sarb
outsb
out
add
pop
call
xor
aad
jno
int
data16
iret
mov
cmp
stos
mov
mov
lea
clc
pop
mov
movsb
mov
mov
jne
pop
push
int3
repz
push
out
shll
repnz
adc
dec
push
imul
adc
enter
fisubrs
test
std
aas
out
pop
cmpsl
fisubrl
ret
and
cmp
jne
and
js
sbb
gs
out
test
sbb
xor
push
jmp
push
in
imul
xor
pushf
scas
push
pushf
mov
push
mov
mov
jns
test
ret
out
jg
lea
inc
push
push
movl
js
data16
jp
pop
lock
cmp
data16
int3
rorl
mov
pop
jne
ljmp
cltd
aad
add
lret
ss
sub
pusha
out
mov
js
enter
pop
xchg
cmp
neg
sbbl
scas
xor
es
fistps
ret
pop
mov
jbe
mov
xor
pop
lds
and
lods
lahf
xor
rcrb
sarb
mov
mov
stos
lahf
inc
cmp
pop
vmovaps
pop
xrelease
cld
jne
jge
xor
push
imul
pop
lea
and
xchg
lcall
or
pop
int
and
mov
dec
sbb
cmpsl
jle
jne
adc
push
cli
pusha
mov
mov
sbb
or
adc
aas
or
dec
fsts
mov
sti
mov
stos
mov
fwait
aas
in
inc
and
jno
addb
mov
sub
mov
inc
or
cwtl
inc
insl
mov
je
cmp
xchg
mov
lods
adc
roll
mov
cli
out
xchg
ret
stos
push
and
lret
test
mov
push
divb
out
lea
shl
aaa
sub
js
sbbl
stos
sub
test
in
pop
lock
inc
fxch
fsubrs
cli
sahf
movsb
sbb
adc
adc
pop
push
or
sti
scas
js
inc
add
mov
jno
mov
xchg
addr16
lock
sbb
loope
mov
ror
mov
shll
mov
mov
imul
push
shll
loope
xchg
stos
cmpsl
es
inc
sub
sbbb
sbb
jns
ss
dec
pusha
jns
out
push
out
or
dec
jecxz
or
popf
xor
adcl
cmpsl
aad
dec
pop
leave
fnstenv
daa
iret
data16
orb
xchg
mov
ficompl
scas
or
and
int
adc
fildl
push
jmp
data16
stc
xchg
shlb
add
cmpb
inc
push
setle
pop
mov
xchg
cmp
mov
andb
adcb
gs
push
or
or
sbbl
push
mov
jb
xchg
mov
push
fwait
ja
push
rclb
or
imulb
notl
mov
lret
aaa
into
and
push
call
jb
outsl
push
mov
jae
and
out
sub
daa
stos
inc
pop
cmp
pusha
lods
int
mov
loopne
adcb
push
popf
push
xor
mov
movsb
test
mov
not
inc
fmull
sbb
dec
sub
pop
push
push
pushf
jnp
sbb
into
lahf
add
mov
push
push
fidivl
je
jb
mov
popf
imul
jmp
scas
or
fdivrs
xchg
pop
leave
int
mov
fnstsw
jp
in
mov
test
xor
sarb
mov
aaa
in
cmpl
add
aam
arpl
into
hlt
mov
cmp
pop
cmp
dec
inc
dec
dec
lock
xor
inc
inc
mov
insb
push
xor
jl
and
mov
xchg
sub
adc
xchg
jmp
int
jmp
or
cmpl
mov
adc
test
fidivs
xchg
pop
mov
fxam
jl
cmpsl
sbbl
sub
lcall
and
jg
aas
add
pop
hlt
push
hlt
sti
xchg
es
adc
leave
cltd
xor
cltd
aaa
into
lret
dec
dec
jmp
in
sbb
insl
mov
ret
hlt
and
adcl
mov
mov
mov
cmp
shl
xchg
sub
inc
scas
inc
jle
or
cmp
xchg
imul
icebp
jnp
sub
hlt
mov
mov
mov
xchg
xchg
and
jno
aaa
call
in
cmc
sbbb
inc
cmp
aaa
mov
lret
and
mov
pop
cmp
mov
outsb
sub
jmp
sub
jne
xchg
iret
mov
adc
test
jmp
test
mov
rcrb
dec
jbe
mov
inc
cmp
jbe
imul
adc
mov
adc
test
test
pop
sbb
in
cli
cmp
jg
mov
push
push
rclb
push
test
dec
adc
mov
mov
inc
cltd
mov
lds
sub
mov
out
sbb
mov
pop
pusha
testl
sbb
push
mov
divb
mov
int
rep
in
test
xchg
add
xor
rolb
es
scas
pop
gs
sub
sub
imull
xlat
outsb
cli
mov
xchg
cld
popf
mov
dec
popa
mov
add
inc
test
xchg
xor
push
das
movb
xchg
xor
xor
aad
daa
add
insl
stos
push
movsl
lock
mov
cwtl
nop
daa
lds
aam
xchg
fs
mov
dec
pop
out
mov
jp
sub
mov
repz
pop
int3
lret
xorb
xchg
hlt
mov
adc
outsl
test
mov
cmpsb
mov
sbb
mov
stos
sub
lods
fwait
int3
stc
mov
fisubs
scas
cmp
or
pop
push
add
mov
jecxz
mov
pop
xchg
sub
mov
inc
imul
aas
and
bound
sahf
push
push
sbbb
jb
repnz
nop
daa
and
mov
and
sbb
mov
cmp
sbb
add
scas
adcb
iret
and
mov
loope
sti
rcr
lea
repz
in
aas
mov
cmp
ja
jmp
stos
or
shrl
sub
fwait
or
test
sub
dec
inc
fldl
push
popf
sub
enter
shl
je
jg
lahf
push
lods
movl
arpl
mov
mov
lods
mov
push
dec
push
out
aas
add
jbe
ror
popa
ret
stc
push
in
sub
fs
stos
inc
hlt
test
lods
mov
dec
jecxz
pop
call
push
sub
andb
das
mov
ret
mov
es
xchg
xor
int
lret
fldcw
or
cmp
jg
fwait
xor
mov
add
cmpsb
cmpsb
dec
out
push
in
mov
fsts
pop
aas
mov
mov
frstor
sub
enter
fisubrl
adc
js
rep
mov
push
fwait
sbbl
aaa
pop
mov
insb
sbb
cmp
fsub
jge
repz
loope
repz
es
int3
xchg
jae
pop
push
push
in
cltd
sbb
sub
pop
sahf
pop
dec
cli
xchg
aas
mov
cmp
push
cmp
mov
push
imul
idivl
pop
sahf
outsb
sbb
mov
lcall
loopne
ret
adc
cwtl
das
mov
out
add
scas
fs
ret
in
dec
xlat
imul
jge
aas
and
jge
aas
xor
gs
sbb
mov
or
lds
mov
popf
xor
xlat
imul
ds
or
cs
cmp
rclb
cmc
subl
xor
arpl
xor
fidivrl
test
fdivl
mov
dec
loopne
and
pop
out
jb
loope
in
inc
fildl
scas
inc
shlb
cld
fwait
mov
jecxz
fs
and
cmp
ror
arpl
outsl
sub
pusha
data16
hlt
sbbl
iret
adc
pop
test
stc
xchg
cmpsb
aas
pop
ds
sub
xor
test
lret
push
movsl
mov
fucomp
or
data16
mov
dec
pop
pop
repz
lock
rolb
sub
adc
mov
in
mov
xor
mov
push
shrl
pusha
xlat
outsb
push
inc
imul
sub
bound
mov
mov
push
out
stos
imul
loope
jbe
mov
mov
fst
mov
ret
jae
popf
stos
in
stc
aad
dec
fbstp
mov
call
or
lea
sub
into
push
mov
fcmovu
das
jp
mov
ret
mov
jae
jbe
sbb
cmp
sub
fcom
add
ljmp
fs
sbb
scas
sahf
push
mov
xor
stos
mov
ret
mov
push
adc
mov
enter
jecxz
jp
fistl
leave
in
jae
inc
test
pop
ret
mov
pusha
notl
and
sbb
pushf
xor
fsts
test
fisubrs
mov
pop
ljmp
int
adc
lcall
insb
add
mov
ret
pushf
sbb
lock
out
test
fimuls
sbb
push
shrb
add
fbstp
mov
stos
xchg
jmp
jno
sub
iret
mov
push
mov
mov
sbb
in
popa
popa
push
out
push
adc
xchg
jae
popf
sarl
clc
mov
cmpsl
mov
sbb
aas
mov
inc
push
rol
push
lds
and
loope
aaa
into
jmp
or
jp
jbe
cmp
iret
pushfw
xor
ret
insl
add
ret
mov
adc
test
das
jmp
adcb
cld
mov
out
dec
sbbl
jp
xor
or
jno
mov
pop
in
out
cmp
fistps
push
jmp
jb
cmp
sub
popf
pop
and
rclb
pop
lock
adc
cmp
lret
bound
push
popf
test
and
mov
push
movsl
outsb
adc
test
popf
xor
cmpsb
icebp
mov
hlt
pop
sahf
or
mov
lods
mov
addr16
mov
filds
enter
ffreep
xor
mov
les
cmc
xlat
sub
aad
and
es
es
pop
clc
js
lret
fildl
or
jmp
push
mov
xchg
sub
aam
lret
icebp
mov
lret
mov
fstps
scas
out
xchg
in
fs
lods
add
cs
add
mov
jbe
test
es
add
test
and
out
fidivs
or
xchg
and
add
xchg
and
jne
nop
inc
ja
pop
mov
jle
jp
pusha
inc
sub
xchg
popa
fbstp
mov
sub
mov
pop
sahf
pop
fnstenv
mov
sahf
xor
js
enter
movsl
push
loope
out
inc
mov
cmp
jnp
test
stos
mov
fadd
stos
inc
xor
push
ljmp
sbbl
movsl
jmp
cmp
clc
or
sub
rcrl
jl
shll
jge
addr16
pop
out
ja
loope
pop
icebp
and
xchg
sub
adc
test
scas
test
cmpsl
push
xor
movsl
in
xchg
push
jbe
inc
mov
lds
pushf
call
adc
inc
inc
mull
scas
dec
out
pop
sarb
es
add
pop
push
mov
mov
push
out
mov
adc
dec
sti
scas
jg
xor
jmp
insl
mov
or
test
sub
xchg
sub
fnstenv
jg
scas
mov
loop
xor
sub
add
add
dec
loop
cltd
lock
rcll
mov
jb
jno
xchg
sbb
sarl
push
sahf
fwait
pop
pop
mov
and
mov
inc
sbb
xchg
nop
mov
xchg
xor
jne
jne
sbb
test
mov
inc
stc
call
pop
fucom
inc
dec
and
shlb
xor
mov
std
add
add
test
jb
mov
xchg
jmp
mov
test
add
or
enter
push
nop
dec
adc
push
xchg
dec
dec
out
jno
sub
es
add
inc
repz
mov
dec
roll
dec
test
lea
mov
mov
iret
sub
xchg
sub
dec
push
in
jge
mov
pop
pusha
xor
pop
cmp
mov
adc
ds
adc
iret
mov
jmp
fdivs
call
aad
lahf
xlat
das
mov
sar
popa
sbb
mov
je
aas
xchg
mov
ret
out
scas
out
iret
fidivl
aad
addl
orl
cld
aam
out
xor
mov
shll
int
ss
test
lret
fmull
pushf
cmp
int
aaa
fmul
cmp
aad
ds
fmull
push
loope
inc
ljmp
bound
dec
fnstsw
ss
mov
xchg
jb
popf
xor
jns
arpl
add
fbld
pop
icebp
push
add
enter
insb
stc
pop
add
mov
cli
push
and
rcr
je
ljmp
sub
inc
mov
inc
pop
std
xchg
pop
arpl
pusha
cmp
pop
lock
pop
xchg
sub
inc
xlat
mov
adc
mov
out
lods
loope
test
lahf
ss
repz
into
shrl
mov
inc
fmul
insb
push
fnsave
aam
jecxz
popa
clc
or
inc
fsubs
fs
xchg
gs
adc
pop
pusha
xor
mov
push
test
mov
aas
shrl
and
xlat
clc
inc
fadd
clc
mov
sbb
aas
repz
in
lds
outsl
loop
pusha
stos
out
sbb
cwtl
push
or
push
out
dec
push
lods
cmp
mov
jmp
xor
imul
jnp
aad
lret
ret
jno
rolb
cmp
add
push
pop
lds
mov
xor
test
rcrl
scas
adc
adc
adc
push
mov
xor
mov
inc
xchg
filds
and
cmp
std
push
ret
mov
sbbl
cwtl
sti
repnz
cltd
cmp
or
cmc
int3
aad
scas
lds
pop
notb
aam
dec
rolb
daa
pop
adc
enter
or
or
sarb
mov
stos
cmp
lods
orl
mov
pop
mov
dec
push
fwait
xor
or
sbb
ds
fsubrl
sbb
xchg
nop
aas
adc
inc
fsubrs
iret
inc
xlat
add
fwait
xor
add
lods
loope
rcl
dec
in
cmp
jge
push
push
popf
inc
jnp
imul
lcall
mov
jns
fbstp
lret
xchg
sub
ss
popf
addr16
inc
fisttpl
loope
rolb
sub
popf
inc
xchg
mov
push
ss
jnp
jp
test
lret
aad
cmp
xchg
xlat
cmpb
and
adc
xchg
add
and
mov
lods
xor
sbb
mov
lea
enter
imul
sub
mov
mov
mov
jns
jmp
cmp
xchg
lods
inc
xor
xor
mov
jp
mov
adcl
xchg
pop
xor
cli
movsl
in
xlat
adc
leave
cmpl
pop
mov
stos
inc
or
lret
cmp
insl
scas
mov
cmc
push
in
xchg
int
sub
js
add
test
into
lahf
adcb
out
jmp
adc
icebp
imul
add
cltd
mov
les
mov
inc
jle
push
mull
iret
jae
xchg
inc
lock
xor
out
pop
push
pop
out
insb
jns
mov
mov
fistps
fimuls
or
gs
xchg
push
cld
push
out
into
aas
and
mov
loope
push
leave
aaa
cmp
sub
mov
iret
sub
int3
arpl
dec
cmp
add
in
add
loopne
or
out
xchg
iret
insb
add
lock
repnz
stc
testl
mov
fs
jge
sti
xchg
lock
sub
jnp
inc
dec
dec
out
gs
mov
pop
xchg
dec
popl
xchg
sbb
aad
cmp
sbb
lods
call
aaa
sub
mov
arpl
fnsave
xlat
outsb
and
loope
out
inc
popf
xor
adc
xchg
xchg
xchg
lret
mov
pop
add
insl
push
and
hlt
mov
js
sbb
imul
addr16
xchg
xor
xchg
daa
push
inc
fisubl
or
popa
clc
sbb
aas
sbb
mov
add
popa
add
cmpsl
xor
fmulp
sti
xchg
loop
imul
bound
xchg
push
mov
ret
add
cmp
pop
mov
pop
cmp
stc
jb
lds
and
test
loopne
cmpsb
nop
daa
stc
xchg
or
jae
xor
fs
xchg
cs
data16
cwtl
sbb
mov
insl
mov
mov
rcl
fistpl
sbb
cld
nop
daa
sarl
dec
loop
data16
insb
insb
add
repnz
mov
aad
jae
cld
div
mov
sbb
jg
mov
jg
or
jmp
jecxz
in
test
mov
call
jne
jns
xor
in
test
mov
dec
loope
gs
mov
pop
and
xchg
rorl
dec
or
dec
outsb
mov
repnz
pop
sbb
shll
dec
test
pop
pop
push
mov
mov
stc
nop
icebp
popa
xchg
sub
shlb
push
scas
icebp
pop
mov
sar
cmovg
mov
sahf
je
rclb
gs
inc
ret
push
popf
hlt
inc
push
jp
in
stos
jecxz
popf
adc
or
jae
push
call
cwtl
jp
stc
cmp
or
adc
dec
dec
out
test
push
or
mov
inc
fstps
push
scas
inc
cmp
imul
call
and
pop
not
inc
adc
jbe
jge
daa
cwtl
xor
lret
xor
es
mov
xor
jo
fbstp
divl
or
jo
mov
xor
or
jmp
xchg
sub
outsb
adc
sti
mov
push
daa
insb
mov
pusha
mov
dec
imulb
out
fsubrs
jns
imul
rcrl
hlt
mov
pop
pushf
xor
lods
call
mov
xor
adc
xchg
dec
or
cmp
arpl
jg
xor
mov
jge
or
or
lock
gs
cwtl
sbb
sbb
pextrw
divl
pop
hlt
popa
sbb
xchg
test
imul
pushf
aad
cs
mov
mov
jmp
ja
mov
das
dec
inc
or
xor
roll
movsb
dec
in
movsb
dec
out
outsl
pop
repz
scas
sub
pop
sbb
xchg
mov
pusha
not
mov
add
cmp
xchg
stos
js
int
push
jno
inc
lods
mov
mov
sbb
mov
jmp
fsubrl
xor
lods
andl
lret
jne
jns
push
pop
or
dec
and
and
jno
test
imul
xchg
js
sti
dec
cltd
push
arpl
test
ds
inc
jmp
fildll
popf
xor
nop
data16
sub
aas
mov
and
mov
pop
jo
cmp
fnstenv
andb
loop
pop
mov
lret
into
dec
insl
add
mov
into
xor
xorl
and
push
test
clc
lds
negl
jg
iret
or
ds
mov
fwait
rorb
sahf
and
stc
jo
pop
mov
push
xor
test
push
mov
lret
movsl
xlat
insl
pop
lret
dec
aad
and
pop
xchg
fmull
cltd
sbb
imul
lcall
fistl
pop
aas
dec
xor
repnz
add
lahf
jae
rclb
jg
and
test
mov
push
inc
pop
rcrb
outsl
sub
or
add
xchg
xchg
jge
jno
loopne
pop
cwtl
das
orb
sbb
add
inc
cmp
jnp
jb
out
and
jnp
cmp
push
push
fs
push
push
inc
and
clc
je
stc
sub
inc
test
xor
insb
mov
adc
aad
iret
jle
fisttpl
mov
or
inc
int3
or
adc
sbb
jmp
sbb
or
repnz
mov
mov
xchg
pop
aam
mov
mov
push
xchg
jb
nop
dec
std
sub
mov
repnz
into
sub
loopne
fisttpll
mov
sub
jo
icebp
jno
fisubrs
es
xchg
dec
out
sbb
shlb
adc
lahf
cmpsb
push
ret
lret
fcmovne
sub
dec
int
push
and
xor
sahf
xor
mov
ret
fidivl
add
xor
cmp
jge
add
lahf
dec
mov
dec
jge
mov
pop
xor
movsb
bound
mov
adc
mov
and
imul
test
or
pop
push
out
mov
ret
and
cmove
mov
xchg
sbbl
stc
adc
mov
rorb
or
mov
insb
testb
mov
nop
xchg
mov
dec
or
flds
and
mov
pop
xchg
dec
lods
cmp
pop
arpl
mov
push
cmp
movsl
pushf
mov
and
inc
stc
nop
push
out
loop
ja
shll
sub
daa
jp
lret
sbb
dec
dec
cs
cmp
and
sub
insb
xchg
nop
jae
adc
lcall
ret
push
les
rcrb
rorl
pop
mov
hlt
unpcklps
insb
loopne
dec
ret
lret
cmc
imul
mov
jmp
movb
jns
inc
push
mov
push
push
lcall
stos
lcall
lret
test
ret
pop
call
cmpsl
mov
stos
inc
fildll
mov
dec
xor
mov
add
mov
push
cmp
imul
pop
or
js
dec
dec
in
sbbl
in
cmp
dec
dec
adc
xchg
xchg
xchg
sub
es
pop
test
cmp
movsl
and
xor
dec
mov
ds
cltd
xchg
push
mov
in
inc
mov
shll
repnz
out
xchg
pop
mov
cmp
into
ja
mov
mov
jle
push
add
imul
repz
roll
inc
lods
mov
sbb
mov
xlat
mov
test
add
clc
into
jmp
add
add
lock
repnz
or
dec
leave
push
movsb
adc
pusha
inc
lds
push
sarl
loop
sbb
daa
in
stc
push
dec
dec
mov
adc
aam
test
mov
cmp
mov
lret
jge
pop
inc
mov
and
inc
mov
push
mov
in
sub
dec
loope
mov
adc
sub
xchg
mov
mov
xchg
hlt
fisttps
mov
mov
mov
mov
pusha
add
mov
inc
push
ficoms
mov
pushf
or
outsl
mov
rcrb
lds
dec
jo
mov
insl
add
jp
ljmp
mov
push
aad
inc
fcoml
adc
rorl
push
int
pop
aam
cmp
jne
xchg
adc
xlat
add
and
icebp
mov
and
mull
xchg
insl
add
inc
adc
jl
push
lds
loopne
push
cmp
jno
lea
sub
in
push
inc
inc
stos
adc
fs
cld
cmp
stc
pop
cmp
into
sub
xchg
loope
xchg
gs
jge
test
fndisi(8087
cmp
add
sub
mov
cld
xchg
xorl
scas
mov
dec
cmp
xor
cmp
xor
inc
jae
or
and
dec
push
test
push
sbb
xlat
ret
pop
or
data16
outsb
mov
dec
xor
lret
sti
mov
test
int
xor
mov
mov
icebp
mov
js
out
mov
xchg
adc
popa
adc
sub
aas
out
push
pusha
sbb
mov
inc
fdivl
insb
popa
ja
in
jp
xchg
enter
lods
cmp
dec
pop
idivb
ret
jecxz
lock
adc
push
enter
aad
adc
lcall
jmp
mov
xor
add
sub
int
jp
insl
pop
icebp
ljmp
scas
insb
cmp
lret
push
inc
fisttpll
shr
cltd
jecxz
fstps
cmp
xchg
fildl
add
mov
fldenv
mov
jns
cmp
push
movsl
jle
lahf
sub
xchg
inc
cs
cmp
xorl
jge
icebp
inc
ds
push
ja
mov
pop
jge
sub
cmp
pop
sub
data16
loope
mov
andb
ja
fsubs
xchg
sti
or
pusha
sbb
mov
add
rcrl
dec
loope
jmp
pop
push
imul
sub
pop
popa
js
push
push
jbe
inc
call
out
mov
and
and
std
pushf
sub
xor
jecxz
mov
pop
lock
add
adc
lret
sbb
add
aas
pop
inc
mov
jb
fldt
jbe
pop
cld
or
push
fyl2xp1
pop
cmpb
arpl
stos
inc
and
dec
xlat
sub
js
push
sbbb
test
push
stos
add
enter
outsl
or
dec
test
xchg
sub
loopne
cmp
mov
xchg
enter
xor
insb
cld
mov
ja
and
daa
dec
sti
push
fstl
inc
loop
mov
xchg
icebp
rorb
add
pop
xor
rorb
xor
fists
in
jne
ss
into
pop
popf
lret
dec
xchg
jnp
push
fiadds
xchg
inc
out
les
jno
imul
popf
jp
jo
dec
cmp
jp
lea
andl
jae
jnp
out
test
ja
dec
jge
lock
mov
into
mov
mov
in
inc
dec
jmp
xlat
push
out
in
push
mov
add
stos
ljmp
out
rorl
sub
pop
iret
shr
shll
sarb
lock
and
xchg
inc
or
loop
ss
add
decl
pop
fs
fisubs
frstor
data16
mov
mov
pop
jle
xor
cli
jae
mov
mov
adc
movsl
outsl
aad
test
mov
xchg
clc
out
fcoms
push
mov
dec
ret
insb
lcall
movsb
in
xchg
lods
jae
sar
jecxz
in
push
rclb
and
jle
mov
adc
outsl
loopne
sub
mov
data16
cmp
lahf
push
enter
dec
jecxz
xchg
out
mov
xchg
stc
popf
gs
push
xchg
cmpsb
cmp
sbb
xor
fnsave
sub
movsl
add
insb
and
adc
sbb
enter
sub
pop
repz
pop
xchg
and
cmp
or
dec
cltd
insb
orb
test
mov
jbe
pushf
int3
pop
in
sbb
fiadds
cmp
adc
xchg
loope
xchg
pop
jns
adc
shrb
add
call
in
sbbl
lret
add
cld
and
sbb
movb
stos
inc
fisubrs
adc
jno
sbbb
pop
scas
adc
mov
orb
or
sub
cli
imul
popf
bndldx
movsb
insl
mov
data16
in
iret
pop
inc
aas
xchg
loop
repnz
or
in
out
xchg
xor
dec
push
cmp
sub
dec
gs
sbb
std
stos
outsl
loope
scas
enter
xlat
pop
loope
xor
mov
nop
cltd
je
lret
mov
sub
jne
lods
push
cli
ds
fisubrs
int3
fnstenv
pop
sbb
lods
push
rolb
in
jmp
jmp
dec
mull
mov
adc
mov
push
xlat
or
inc
inc
in
aam
and
xchg
sub
mov
xchg
out
lods
xchg
popf
out
mov
mov
mov
mov
cmc
jns
mov
or
jmp
mov
imul
into
mov
and
lds
mov
mov
xchg
mov
jbe
stos
jge
into
ja
addr16
push
mov
or
sub
push
daa
pop
adc
push
test
adc
jle
push
xchg
inc
into
fimuls
test
imul
movsl
and
mul
ja
hlt
sub
xor
in
mov
outsl
lahf
cmp
es
shrl
lods
test
adc
mov
rorb
sbb
andb
inc
or
cli
les
loopne
jno
hlt
jmp
loop
fbstp
add
test
xor
and
and
clc
xchg
subl
cltd
repz
out
pop
xchg
xor
pop
sub
outsb
int3
arpl
in
in
or
shrl
sub
insl
xor
mov
lds
lret
dec
rclb
leave
xor
add
je
fs
dec
sub
dec
in
mov
cmp
pusha
lods
enter
add
je
and
negl
mov
shr
mov
pop
mov
out
push
push
movsl
inc
adc
popa
push
fistps
and
stc
pop
sbb
lret
insb
filds
xor
jl
arpl
dec
test
add
movsb
push
nop
daa
push
pop
jns
into
out
xor
sub
or
mov
sbb
ds
les
decl
mov
add
popf
mov
add
pop
mov
and
enter
inc
fstpl
fstl
insl
imul
arpl
lcall
loope
fs
inc
push
mov
outsl
das
gs
or
jge
popa
in
dec
or
inc
hlt
cmp
mov
cmp
pop
es
aam
popa
sti
xor
repnz
repnz
outsl
into
mov
or
cmp
or
mov
cmp
sbb
mov
inc
jb
mov
lods
xchg
jbe
movsb
xor
jmp
cmp
ds
sub
adcb
xchg
out
cmp
pop
mov
movsl
mov
out
xchg
rolb
sti
dec
dec
mov
loop
adc
xor
inc
pop
sbbb
push
inc
mov
in
mov
lret
and
sahf
push
xor
inc
stos
bound
lds
jnp
add
pop
into
xor
inc
fmulp
xor
dec
fsubs
lea
fisubl
sub
les
into
push
lods
add
push
mov
pop
aam
movsb
and
out
shlb
push
sarb
clc
xor
je
les
insb
jge
orl
sbb
ss
test
jbe
ljmp
mov
movq
jae
lock
shlb
mov
cltd
sub
repz
push
insl
dec
addr16
data16
ljmp
cmpsl
repnz
stos
cmpsl
stc
xlat
sarb
sarl
add
mov
mov
jmp
adc
enter
push
mov
lret
hlt
imul
or
push
pop
mov
and
mov
push
push
pop
add
jb
mov
repz
jle
pop
leave
cmpsl
dec
out
lcall
cmp
popf
cmp
inc
jecxz
mov
mov
lret
jbe
pop
pop
paddw
mov
push
jns
pop
inc
sub
pop
js
pusha
cwtl
das
das
leave
jno
shrl
cs
fldenv
out
cld
sub
push
fildl
mov
or
jmp
cli
push
and
fsubr
add
add
movsl
popf
rorb
cwtl
das
aad
push
cwtl
pushf
stos
rclb
pop
fcompl
je
loop
bound
pop
loop
imul
mov
popf
xor
inc
test
dec
jle
scas
inc
nop
loop
ret
sub
fldt
dec
loope
gs
jmp
rolb
fiadds
dec
cmp
cmp
jmp
shlb
das
mov
or
popf
leavew
mov
and
xchg
imul
dec
data16
aad
xchg
dec
jge
stc
mov
cmp
and
sahf
stc
sub
jecxz
sub
sbb
pusha
cmp
into
and
fucomi
xchg
sub
xor
fildll
inc
lcall
pop
lods
push
dec
xchg
and
jns
mov
sbb
sub
inc
gs
adc
mov
imul
adc
jmp
inc
lcall
mov
cmp
fucomp
jb
sbb
push
adc
pushf
jno
mov
inc
jbe
fwait
adc
inc
fsubrl
xor
add
lret
pop
out
cmp
sub
into
imul
or
inc
inc
mov
imul
xchg
mov
inc
lock
cmp
pushf
push
jo
out
mov
ljmp
aaa
mov
jge
inc
add
inc
inc
cmp
out
outsl
xchg
pop
arpl
aas
and
fsubs
add
repz
ret
add
daa
std
mov
or
jnp
clc
inc
dec
pop
sbb
call
outsl
and
add
sti
add
lods
sub
mov
or
mov
adc
cwtl
inc
lock
cmp
hlt
cmp
out
jle
mov
rcrb
xchg
sub
scas
fidivl
outsb
sbb
sahf
jge
aaa
repz
js
xor
push
hlt
outsl
sahf
scas
lret
cmp
push
xor
imul
or
psraw
or
lds
sub
adc
jo
lea
je
js,pt
iret
push
xor
aam
test
push
sbb
inc
outsb
sahf
out
lods
jl
fisubs
repnz
arpl
dec
call
sub
xorb
mov
mov
fisubs
pop
ret
sbb
test
dec
rolb
push
and
and
sbb
std
dec
loopne
and
push
fwait
mov
fwait
ljmp
lcall
sbb
lcall
adcl
js
push
cmpsb
mov
pop
mov
jne
xor
aad
outsl
cmovg
cmp
in
mov
cmp
cli
test
xor
xchg
pop
pop
aaa
mov
dec
xor
xor
mov
cwtl
inc
jmp
jne
xchg
sub
push
lods
movl
inc
xchg
inc
add
cmpsl
std
stos
leave
adc
aam
and
rorb
jl
sub
add
or
into
cmpsb
fnclex
ror
jl
les
dec
jl
xchg
mov
cmpb
sbb
iret
bound
ret
and
movsl
jnp
scas
in
ja
testl
mov
pushf
mov
lret
xchg
out
mov
xor
and
pop
imul
push
test
mov
stc
push
jp
pusha
mov
mov
andl
fstp
jae
mov
cmp
adc
pop
repnz
popf
mov
mov
iret
sbb
jne
fsubrs
xchg
pusha
mov
push
cmp
rclb
adcb
daa
outsb
ret
in
test
add
cltd
or
sub
sub
bound
pop
and
xchg
mov
xchg
inc
or
push
mov
mov
push
adc
xchg
dec
lea
mov
sbb
push
das
adc
or
xchg
lods
sub
push
sub
xor
testl
shrl
fisubl
adc
ss
lcall
lods
mov
fists
pop
std
in
mov
xor
or
addb
stos
fdiv
cltd
cmp
xchg
shl
fwait
inc
inc
hlt
movsl
rcl
out
xchg
int3
push
pop
dec
jl
fs
cmpsl
ds
cwtl
sbb
out
sbb
mov
push
pop
pop
out
inc
cmp
push
push
sbb
dec
shll
pop
mov
rolb
fldenv
or
shl
mov
xlat
in
push
aaa
lcall
insb
cltd
and
into
test
scas
lea
push
dec
inc
mov
jns
inc
mov
insb
aaa
pop
out
push
test
mov
mov
add
mov
int
mov
xchg
or
sub
ret
enter
mov
ret
dec
sub
cmpsb
jmp
push
push
xchg
call
pop
jp
icebp
aam
loopne
adc
cmc
outsb
loop
das
pop
scas
loope
mov
mov
mov
and
fs
sub
xor
or
hlt
popa
das
pop
std
je
das
jg
call
scas
jp
cmp
nop
adc
add
aas
out
out
test
fidivrs
in
iret
rolw
cmpsl
push
cmp
xchg
outsb
pushf
dec
mov
cmp
jns
jo
sub
xor
mov
xchg
lods
or
rclb
aaa
into
jle
xchg
enter
and
insl
add
cld
cmp
sub
dec
pop
mov
sub
aam
jnp
pop
lods
repz
repnz
in
add
adc
add
lret
je
mov
push
aas
clc
aas
shrl
sbb
dec
xchg
icebp
mov
jl
iret
lods
sub
cmpsb
pop
into
push
cmc
clc
cli
inc
fisubrl
int
ret
enter
aas
add
xchg
sbb
push
popf
xchg
fwait
insl
aad
jl
lods
lods
lds
cmc
mov
cltd
mov
fbld
or
inc
push
and
xor
mov
push
data16
xchg
mov
mov
mov
in
repz
push
test
int
sahf
js
stos
cmp
mov
das
cld
inc
enter
add
ds
outsb
mov
test
sbb
inc
sbb
aad
out
es
xlat
loopne
sbb
sub
mov
sub
inc
cmpb
sub
dec
outsl
insl
dec
mov
lods
inc
dec
leave
jg
cmp
int3
jae
out
fisttps
jg
test
pop
icebp
push
into
insl
sbb
jp
cmpsb
les
sbb
cmp
cs
inc
in
pop
add
fs
xchg
push
dec
pop
jnp
sahf
inc
sbb
pop
mov
imul
stos
mov
sub
iret
in
xor
insl
mov
arpl
gs
cmp
xchg
xchg
sahf
xor
ret
inc
mov
lock
add
cmpsl
negl
es
gs
and
outsb
xchg
and
mov
mov
xchg
lods
inc
test
pop
mov
adc
ret
loopne
inc
push
sbb
add
jmp
lock
adc
inc
enter
fmulp
push
leave
sbb
mov
mov
out
jle
dec
push
mov
aas
lret
sub
ret
xlat
jae
mov
jp
xchg
loope
nop
shll
and
out
out
repz
stos
add
call
mov
adc
test
pop
adc
test
or
lret
fxtract
xchg
and
dec
pop
add
or
repz
push
lods
dec
sbb
jno
bound
sahf
push
imul
xchg
mov
fwait
in
and
aaa
xchg
mov
dec
mov
je
push
jmp
adc
jl
xadd
repnz
sbb
jbe
inc
lods
inc
pop
call
subb
dec
mov
es
sahf
lret
or
test
mov
in
notb
xchg
pop
jl
and
cltd
add
call
out
cs
jo
mov
jae
out
movsb
pop
xchg
test
fcmovnb
inc
or
sbb
sbbl
mov
andl
dec
popf
stc
rorb
sub
cmpb
sub
lea
add
test
mov
fidivs
xchg
jns
jecxz
xchg
or
push
js
stc
shll
cmp
in
out
jbe
xor
outsl
jnp
fadd
pop
add
jle
fisubs
loop
shrl
xchg
ss
jb
out
xchg
mov
push
jnp
shll
push
pushf
fdivp
int
imul
pop
mov
push
and
pusha
fcmovnbe
into
pop
lret
outsb
xor
jne
mov
andb
mov
lods
and
pop
cli
jne
dec
out
inc
adc
int
pop
add
push
fldcw
xor
pop
addr16
pop
or
mov
dec
cs
in
lahf
in
adc
cld
jmp
mov
pop
cmp
cltd
mov
fistl
cmpsl
or
call
jb
sub
stc
push
adc
mov
mov
popf
orl
mov
shlb
add
nop
inc
lret
lret
mov
mov
xchg
mov
mov
enter
inc
cmp
jp
cmp
cwtl
popa
mov
out
xchg
xor
cmpl
clc
bound
pop
out
mov
cmpl
jmp
or
ja
push
rorb
inc
fwait
mov
imul
shlb
popf
cmp
pop
jb
pop
push
xchg
sub
stc
je
xlat
xchg
sub
add
mov
dec
or
outsl
fbld
push
cld
out
and
shlb
je
stc
mov
mov
xor
aam
or
aad
dec
outsb
dec
stc
stc
insl
subb
dec
out
dec
js
lahf
push
cmc
pop
pop
xchg
fldpi
les
push
popf
inc
add
mov
fisttpll
fisubl
jae
xor
mov
xchg
idivb
dec
push
add
xor
push
xchg
lods
and
xlat
lahf
push
xchg
and
sub
jle
add
ljmp
inc
fdivs
sahf
rcll
sbb
shlb
cmpb
fldcw
pop
mov
dec
push
jnp
hlt
ret
aas
cmp
inc
sbb
jg
adcl
and
mov
sbb
pop
pushf
xor
out
push
and
dec
lea
mov
or
cmp
cs
jb
mov
cs
or
and
sti
test
repnz
pushf
push
push
repnz
movsb
pop
ftst
dec
pop
push
outsl
fidivs
add
sbb
xchg
push
out
lods
daa
jmp
mov
push
popf
inc
or
lods
xor
iret
ja
cmp
in
and
push
add
test
or
sbb
cmpps
lret
dec
cld
xchg
andb
push
pop
and
push
and
popa
mov
jle
xor
sbb
adc
jb
add
aam
mov
lret
sbbl
sub
push
adc
rcrb
sti
sub
cmpsl
xchg
mov
clc
dec
jo
imul
js
shrb
shrb
push
cli
mov
add
popf
pop
in
loop
mov
negb
pop
aam
xor
or
clc
into
push
cmpb
repnz
loopne
repz
cs
out
mov
pushf
push
jge
cmpsl
add
nop
jge
cs
mov
fcmovnb
inc
xor
jecxz
stc
adc
std
pop
jp
sbb
or
int
aam
test
in
fldenv
dec
pop
out
jnp
lahf
xor
iret
mov
xlat
idiv
or
sub
dec
inc
mov
mov
loopne
mov
imul
cmpsb
test
add
repz
or
arpl
mov
inc
adc
mov
lret
xchg
add
leave
in
mov
or
xor
ret
cmc
pop
jno
lret
xor
sbb
adc
jle
jmp
scas
add
sub
je
imul
xchg
mov
ds
divb
mov
or
push
fwait
test
or
je
notl
inc
fcmovne
xchg
sub
jns
cmp
dec
mov
sbb
lds
cmp
inc
jno
xchg
dec
in
push
imul
aam
cmp
pop
mov
pop
push
and
push
je
jmp
inc
fidivl
cltd
xchg
das
adc
add
popf
jmp
jmp
jle
xchg
sbb
ljmp
jno
imul
jb
out
push
dec
fbstp
lea
popf
int
pop
ret
push
add
sbb
outsb
adc
mov
mov
xor
ret
jmp
fneni(8087
inc
popf
stos
notl
arpl
sbb
dec
dec
jne
mov
xchg
jo
jns
cmp
jmp
popf
popf
arpl
sub
test
ja
mov
dec
jns
mov
lds
cmp
data16
inc
adc
out
imul
hlt
repnz
pusha
jp
lcall
js
adc
jae
jno
ret
lret
fnstsw
dec
bound
outsl
mov
into
cwtl
addl
rorl
pop
push
adc
jbe
lcall
jne
popa
xchg
iret
add
paddq
dec
lcall
packssdw
movsl
loop
in
cmpl
and
out
inc
ds
aaa
xor
sahf
cmp
push
mov
cld
nop
lods
fsubr
test
test
xor
cmpsb
cmp
jne
hlt
inc
lock
xchg
lods
ds
mov
push
dec
lea
and
mov
jbe
cli
cmpsl
sbb
sbb
cmp
rol
xor
pop
push
loope
pop
adc
in
dec
js
fistpll
int
inc
xlat
inc
pop
or
test
sub
sbb
lret
mov
enter
inc
es
push
mov
test
scas
mov
and
push
or
inc
sbb
jb
jp
les
dec
es
jo
push
loop
popa
fsubrl
loopne
add
into
mov
mov
fiadds
fistpl
rol
jne
mov
pop
montmul
cmpsb
inc
lret
and
in
aas
pop
insb
xor
adc
test
mov
lret
fdiv
xchg
jmp
aad
dec
mov
dec
pop
jne
or
aas
popf
sub
mov
mov
loope
js
lock
mov
insl
cmp
dec
rorb
imul
lock
pop
pop
das
or
ret
loop
addr16
or
mov
data16
mov
call
lock
sbb
xor
ss
std
push
pushf
cmp
xchg
jecxz
enter
filds
in
ja
subl
je
inc
das
stos
add
loopne
adc
insl
movsb
jecxz
pop
out
outsl
cmpsb
dec
dec
dec
out
inc
std
dec
xor
push
into
arpl
cmpsb
mov
ljmp
xchg
sti
mov
out
into
loopne
jmp
outsl
mov
ds
sub
and
dec
fidivrl
ds
jb
cmp
push
xchg
ja
sub
adc
iret
fsubs
inc
scas
and
out
dec
xchg
push
jp
jbe
inc
or
test
and
mov
movsl
bts
inc
xor
stos
daa
push
inc
test
inc
sbb
repnz
or
add
aad
js
repz
pusha
ds
xchg
pushf
jb
xor
xchg
test
push
xchg
sub
sub
lds
and
mov
inc
jmp
or
mov
inc
enter
adc
leave
push
pop
fidivs
pushw
xchg
mov
cmc
push
jns
out
test
stos
mov
pushf
js
jmp
int3
iret
jmp
jg
and
xchg
push
mov
adc
add
cmp
stc
xchg
out
stos
das
mov
data16
stos
push
mov
or
cmp
mov
insb
xor
stc
mov
adc
push
fwait
pop
dec
loopne
hlt
andb
push
dec
pop
rep
xor
lahf
enter
cwtl
dec
pop
inc
lock
loop
data16
add
cmpsb
dec
fdivr
or
pop
xchg
pop
stos
sub
pop
ds
fbstp
and
das
pop
movsb
xor
xlat
xchg
fldenv
jg
jae
or
pop
lahf
mov
fs
jnp
inc
cmp
test
inc
fidivl
ds
scas
jo
popa
clc
push
ljmp
jmp
xlat
adcl
mov
sub
pop
hlt
push
dec
or
mov
insb
es
pop
lea
loop
jge
out
jnp
dec
jecxz
and
xor
in
subl
push
xorl
out
xor
and
xchg
data16
cmp
sti
popf
out
push
sbb
lcall
and
inc
xlat
inc
fadd
lock
pop
pusha
adc
xchg
js
aaa
stos
jmp
mov
cli
add
push
aaa
cmc
inc
jae
fdivrl
mov
mov
inc
in
fcomps
dec
add
xor
shll
mov
jecxz
dec
inc
xchg
sub
dec
mov
xchg
hlt
ret
push
sub
sahf
jle
mov
push
mov
lret
scas
jo
repz
xchg
xchg
mov
enter
xchg
inc
mov
inc
out
or
or
imul
adc
adc
and
xchg
mov
mov
mov
mov
test
push
xchg
push
call
rcrl
test
leave
int
jae
xor
ret
stc
pop
ja
push
fwait
cmc
cwtl
in
into
add
dec
nop
out
push
movsl
pop
cmp
push
pop
insl
lret
icebp
mov
pop
cld
inc
push
out
pop
scas
dec
subb
sub
or
or
xlat
add
jo
push
je
xchg
add
mov
push
xor
in
aaa
scas
ret
out
jae
aaa
mov
out
outsl
sbb
dec
loopne
sub
push
mov
in
push
jo
sbb
sub
push
and
mov
or
mov
adc
cmc
xchg
dec
mov
aam
cmpsb
pop
scas
pop
sahf
ja
cmpsl
xchg
sub
mov
fsubrs
sarb
js
mov
iret
loopne
xlat
in
mov
adc
pop
lcall
shrb
add
popf
addl
xor
mov
arpl
jne
xchg
push
adc
test
xchg
movsb
sbbb
jl
sbb
ficoms
stos
orl
mov
push
aaa
icebp
repnz
scas
xorb
sbb
ds
cmc
sub
or
fsubrp
xchg
cmc
adc
dec
cmp
mov
adc
lret
push
movsl
add
mov
mov
push
dec
mov
leave
in
pusha
out
aam
icebp
test
dec
jo
cmp
fsts
enter
or
mov
jno
and
test
pop
or
jbe
js
cmpsb
dec
imul
mov
jne
xchg
sarb
shlb
and
shrl
sub
jb
pop
push
jns
in
test
jp
mov
aad
xchg
jg
xor
fbstp
fsubs
cltd
int
movsb
mov
decb
lods
push
inc
cld
ds
test
mov
xor
pop
pusha
rorl
push
xchg
dec
dec
xchg
mov
repz
stc
push
hlt
les
sub
jbe
mov
bound
xchg
xchg
pop
stos
fsubr
sub
sbb
clc
in
jp
sbb
jle
fs
inc
fcompl
dec
mov
aam
ds
cmp
decl
or
cli
jmp
das
lea
add
stos
les
call
mov
sbb
test
push
xor
stos
mov
pop
fsubs
dec
std
rclb
jecxz
in
sub
aad
push
fstl
fucomp
lods
push
jnp
popf
mov
mov
pop
sahf
stos
xchg
lods
roll
popf
xor
mov
ret
sbb
int3
xor
out
or
push
pop
cmpsl
push
repnz
mov
inc
mov
xchg
inc
fmuls
gs
xchg
fsubr
inc
data16
push
cltd
mov
out
add
sub
fidivrl
cmpsl
xor
dec
add
jno
cmpsb
fistpll
mov
mov
xor
lock
cmp
leave
pop
inc
fsubrs
jnp
xchg
pop
and
add
lea
xor
sbb
jae
and
js
sbb
inc
sbb
lret
scas
push
xchg
mov
xchg
push
or
mov
xlat
cs
lock
nop
mov
or
in
and
inc
loope
sbb
fsubs
xchg
stc
mov
pmuludq
scas
loop
repnz
jecxz
test
sbb
inc
add
jg
repz
stos
data16
xor
pop
lock
mov
mov
jns
adc
mov
sbb
mov
sub
pusha
jge
adc
push
sahf
out
iret
ja
jp
sbb
js
ret
mov
out
push
sbb
fbld
out
out
std
lods
das
test
repz
sub
inc
in
dec
fadd
pop
xchg
in
sbb
sti
es
fwait
and
std
into
test
les
pop
jns
add
push
sbb
dec
jbe
cmp
jp
inc
mov
mov
cmp
add
mov
adc
sub
xchg
enter
iret
leave
jae
inc
cmpsb
cmp
out
inc
clc
dec
xchg
cmp
pop
push
inc
push
mov
mov
sarl
fcmovu
pop
mov
cmpsb
lods
scas
inc
fdivp
dec
lock
aaa
into
jnp
xor
sub
mov
and
xor
lret
sti
pop
mov
jb
adc
xchg
int3
jo
fadd
shl
mov
xchg
push
dec
loope
rcr
jae
clc
push
inc
jecxz
jg
pop
add
in
lock
jns
add
add
mov
daa
je
sbb
mov
ret
jb
cmp
out
sub
push
adc
ss
lock
add
adc
pop
imul
mov
dec
xor
mov
adc
mov
jg
imul
sub
lret
gs
enter
or
dec
mov
loop
aas
xchg
pusha
inc
xor
mov
std
faddl
inc
popa
aam
decb
jbe
lods
inc
inc
adc
lret
inc
sbb
je
sub
jl
rcll
fistpl
inc
push
cltd
inc
mov
movsl
sbb
aaa
jg
mov
cmp
cmpsb
std
lcall
in
pusha
pushf
xor
inc
ret
inc
ja
fdivl
mov
mov
movsl
ficompl
xchg
inc
cmp
loope
add
adc
pop
frstor
lock
adcb
rclb
lret
pop
sbb
cwtl
das
push
mov
aaa
rorl
cmp
fucomp
imul
das
cmpsb
add
push
lds
xchg
lods
movsb
cld
push
fcmovb
iret
pop
dec
outsl
in
and
dec
in
jb
mov
dec
adc
dec
aam
jecxz
mov
bound
lods
and
repz
fbld
ret
ja
fsubr
in
jle
inc
mov
mov
push
fidivs
sbb
mov
dec
addl
dec
in
cli
mov
imul
and
cmpsl
jge
mov
adc
xchg
je
and
pop
xor
inc
mov
sub
inc
cmpsb
in
xlat
bound
test
jbe
xor
mov
ljmp
sahf
mov
shl
adc
sub
xor
add
mov
inc
and
adc
add
fistpll
pop
push
sahf
mov
lea
nop
pop
scas
imul
mov
and
add
jae
lea
xchg
add
ja
push
sub
and
jns
div
dec
xor
xchg
dec
push
fisubrs
daa
push
push
jo
imul
xor
std
scas
call
mov
enter
clc
loope
inc
push
xor
jmp
inc
fsubrl
arpl
lods
mov
jp
les
insl
loopne
mov
pushf
xchg
xorb
stc
pop
cmp
xor
push
push
inc
fstl
xor
adc
inc
pop
clc
and
int3
xor
subb
mov
cwtl
pop
daa
outsl
imul
cmp
or
scas
hlt
loop
add
test
mov
mov
add
outsl
cmp
scas
aas
sarb
xchg
fsubr
push
sarl
insb
ret
jb
pop
adc
and
xchg
push
xchg
mov
fiadds
mov
or
adc
mov
adc
sbb
pop
call
fidivs
jl
jno
or
mov
enter
cmpsb
cmp
pop
cwtl
pop
cmovbe
testb
push
in
pop
dec
call
lret
jnp
mov
adcl
mov
mov
insl
adc
fwait
imul
sarl
cmp
mov
mov
fisubl
pop
push
cwtl
lods
pop
xchg
xchg
mov
hlt
dec
sbb
stos
jp
jne
stos
test
and
or
fisubrl
pop
fdivr
lcall
inc
sbb
arpl
jmp
call
jle
ja
mov
in
call
in
loope
imul
lods
mov
pop
xor
lea
pop
std
pop
mov
imul
mov
mov
nop
mov
pop
pop
imul
mov
dec
inc
mov
rclb
xchg
in
dec
loope
and
push
psubusw
xchg
push
inc
scas
stc
imul
lock
stos
xchg
jle
aas
jle
lahf
sbb
or
cmp
std
aaa
aad
das
shrl
jmp
ds
leave
popl
cmp
jecxz
push
ret
inc
ds
xchg
sub
jmp
sarl
sub
cs
cmpsl
and
mov
popa
dec
rcl
push
cmp
xor
inc
in
push
lods
or
xor
pop
fildll
mov
scas
ret
gs
and
aam
sbb
mov
cmp
scas
cmpl
and
sbb
cmp
inc
xchg
and
or
mov
aam
cmp
in
and
aam
outsl
popa
cwtl
jl
in
js
negl
jno
push
mov
orb
aam
mov
adc
push
sbb
or
dec
ficoms
xor
xor
in
lahf
ja
test
int
pop
sbb
sbb
xor
fs
pushf
mov
add
or
mull
popa
fildl
push
mov
jmp
jb
int3
pushf
or
mov
inc
sbb
xor
fidivrl
cmc
cmpsl
xchg
jno
push
loope
inc
cmp
jb
pusha
movsb
loopne
or
daa
lock
pop
out
jne
pop
adc
jnp
gs
jge
push
inc
pop
mov
test
and
ja
stc
shll
les
jg
je
imul
out
ja
sub
arpl
sub
ror
jle
dec
iret
push
inc
mov
repz
pushf
scas
push
fs
rcrl
mov
sahf
imul
out
scas
fwait
sti
xor
xchg
imul
aam
inc
gs
inc
fisttpll
adc
ss
adc
ds
mov
sub
push
jno
cwtl
pop
repz
inc
lret
ja
inc
cwtl
enter
sub
das
addl
addr16
or
movsb
push
out
pop
cmpsl
add
jg
jns
pop
adc
jb
cmp
pop
lcall
stc
mov
or
jae
inc
iret
mov
and
movsl
sbb
cmpsl
clc
dec
xchg
adc
roll
ficompl
xchg
sti
fs
xor
stc
inc
shr
xor
mov
inc
pop
sarl
mov
pop
mov
lods
jo
mov
repnz
mov
mov
loopne
stos
dec
pop
add
mov
leave
pushf
inc
scas
mov
jo
jne
out
lret
xchg
and
ds
int
test
mov
loopne
out
lods
int
loopne
imul
and
jp
out
push
sbb
xchg
xorl
mov
shll
loope
cmp
xchg
loope
mov
lock
jmp
ljmp
out
mov
push
jle
xchg
insb
ds
aas
iret
ss
xchg
and
fcmovne
pop
ret
push
sbb
sub
dec
pop
mov
jne
jno
mov
ss
mov
xor
and
icebp
xchg
daa
leave
sbb
pop
loope
out
shl
pop
out
sahf
inc
xor
pop
xchg
dec
into
arpl
aaa
stos
insb
cmc
ljmp
mov
push
idivb
sbb
xchg
out
jmp
dec
jmp
mov
mov
sahf
cs
xor
lods
aad
pop
dec
fwait
je
sub
mov
push
call
lods
cli
and
jmp
push
sbb
ret
mov
sub
mov
cmp
cs
mov
fidivrs
or
jmp
sub
stos
scas
xor
leave
cltd
lcall
testl
repz
fildl
and
incb
in
adc
or
mov
in
mov
test
adc
vmovaps
fcomps
push
inc
push
ljmp
jno
fsubrl
dec
fisttpl
mov
or
lret
fucomp
int
loopne
aad
fwait
sti
xchg
ret
outsb
mov
stos
and
mov
mov
in
gs
test
pushf
cmp
jg
clc
push
inc
mov
jl
xor
adc
pop
xchg
js
into
sahf
sbb
out
mov
cmpsl
in
sub
mov
inc
fs
rolb
sbb
mov
dec
cmp
sbb
mov
inc
pop
push
das
adc
mov
gs
lret
int
push
mov
daa
inc
loope
fldl
test
shll
dec
dec
jno
out
jbe
mov
push
lds
push
mov
mov
cmp
push
call
cmp
pop
push
mov
pop
lods
jnp
sub
jmp
shlb
adc
stos
mov
mov
icebp
imul
insl
xor
out
test
call
pop
xor
icebp
movsl
inc
mov
loope
in
rcll
pop
aas
mov
xchg
mov
mov
clc
call
mov
adc
sbb
mov
adc
mov
sub
jnp
ljmp
jb
cmp
pop
mov
jnp
jge
xor
xor
cmpl
movsl
xchg
pop
push
fstps
test
and
mov
rclb
mov
test
mov
lds
dec
shll
xor
ss
pop
roll
movsl
dec
outsl
mov
sub
add
ss
mov
stos
and
mov
int3
test
jmp
xacquire
dec
notb
shufps
lock
sub
mov
mov
pop
mov
fbld
xchg
popa
sub
mov
cltd
icebp
int
pop
ljmp
fidivrl
adc
xchg
lods
addr16
sbb
mov
xchg
jnp
mov
sbb
dec
movsl
std
lret
fnstsw
outsl
cltd
sub
int3
je
xor
adc
dec
int3
fdivl
aas
cmp
lods
lea
jbe
or
jae
stos
dec
aam
jl
ret
push
mov
iret
add
call
dec
or
xchg
jnp
loopne
pushf
mov
xorl
add
jbe
mov
mull
loopne
sbb
into
test
lret
cmp
adc
clc
xlat
outsb
sub
push
sub
sahf
mov
lret
push
lods
test
jle
mov
xor
sti
stos
movsl
icebp
leave
jg,pn
shll
sub
movb
mov
scas
imul
or
jmp
cmp
clc
mov
pop
out
jb
lret
xor
fwait
dec
rclb
sahf
pop
popa
cmp
frstpm(287
mov
je
dec
xchg
mov
rcrl
clc
mov
jae
push
outsl
inc
mov
fdivrs
or
and
mov
outsl
mov
frstor
pop
lock
add
dec
pusha
rcrb
mov
xchg
aam
jmp
in
jnp
fldt
outsb
cmc
mov
dec
mov
fs
cmp
pop
xchg
sub
jg
mov
ret
popa
mov
push
lock
jg
ret
loopne
ret
sub
sub
adc
xchg
bound
std
or
push
out
inc
daa
fsub
std
inc
mov
aad
test
xlat
jns
adc
std
jle
and
cmp
push
ror
xor
dec
mov
rcl
imul
pop
imul
xor
loopne
aas
push
cmp
inc
test
enter
ljmp
or
xor
xchg
out
lods
ljmp
pushf
add
gs
add
in
mov
mov
push
mov
pop
mov
aas
lods
mov
fldenv
aaa
into
and
insb
push
shlb
out
dec
jp
adc
out
repz
and
jl
fwait
movsb
mov
popa
jno
mull
push
mov
insb
push
or
sar
int3
jb
jge
mov
fsts
repz
pop
test
lret
or
ret
push
leave
ss
shll
xor
lods
mov
pop
lock
xor
and
pop
jbe
loop
not
push
inc
push
fldcw
leave
and
ss
cs
add
ret
ret
pusha
mul
xchg
sub
xchg
jne
sbb
xorb
push
adc
jmp
mov
push
nop
pusha
inc
cmpsl
je
sub
cmp
js
lods
push
outsb
adc
fnstenv
mov
mov
test
inc
adc
clc
je
or
jmp
push
dec
xchg
test
or
out
aam
or
ret
push
mov
repnz
iret
mov
mov
add
inc
fucompp
fs
and
pop
fiaddl
fucomip
xor
fisubl
cmpsl
mov
cs
into
daa
push
mov
push
repnz
add
mov
sbb
xchg
sbb
push
jne
jo
add
cmp
sub
jmp
nop
inc
cmp
mov
scas
out
adc
into
add
push
out
jp
xor
test
ret
xor
rolb
test
pop
daa
aas
adc
sub
mov
inc
es
int3
mov
push
jl
push
jp
push
xor
test
aas
movsb
fbstp
mull
inc
inc
push
ljmp
inc
add
sbb
lret
adc
mov
jb
pop
repnz
mov
lret
sbb
gs
sbb
mov
mov
clc
aaa
icebp
fistps
pop
sub
sbb
pop
icebp
mov
mov
jg
das
push
jge
pop
push
addr16
jg
mov
js
arpl
sub
in
mov
push
jo
sbbb
add
stos
aaa
inc
inc
insl
mov
or
daa
pop
pop
ss
push
int
lea
add
cmp
filds
cmpsb
out
mov
push
jno
insb
xchg
adc
add
flds
mov
fstpt
fsubp
cmp
lcall
lods
outsl
pop
xor
hlt
fucomip
push
adc
sbb
add
xor
les
dec
mov
inc
dec
or
outsb
push
cmp
pop
sbb
call
xlat
imul
stos
shrb
lods
popf
cli
test
rcrl
mov
enter
sbb
stos
shll
cmpsl
test
push
in
jecxz
inc
pop
mov
addr16
sub
mov
inc
bound
int3
lret
and
in
adc
sub
dec
jecxz
xor
lock
xor
outsb
into
movsl
mov
adcl
adc
inc
test
or
adc
out
xchg
xchg
mov
sbb
push
movsl
jecxz
push
inc
test
inc
and
pop
mov
ljmp
xchg
icebp
sub
into
popf
in
imul
or
add
sub
scas
adc
imul
lds
xor
sbb
out
repz
pop
lods
jnp
pop
mov
adc
test
dec
adc
push
movsb
gs
cmpsl
test
jl
dec
stos
push
cmp
fbstp
int3
sbb
popf
add
push
or
cwtl
cmpsb
pop
dec
fidivl
mov
push
jb
jmp
cli
or
jmp
or
mov
leave
push
xor
jne
lea
scas
inc
test
enter
test
add
movsl
push
fwait
and
inc
popf
sbb
mov
jno
cmp
cmp
sbbl
pop
jp
mov
sbb
adc
jae
fsts
mov
addb
mov
gs
push
in
jb
pop
cmp
test
rclb
sub
jne
idivb
negl
or
sbb
les
push
or
rorl
shll
mov
das
adc
out
js
mov
cmp
sbb
popf
xchg
cmp
mov
mov
jne
pop
hlt
push
nop
sbb
lods
dec
cltd
gs
mov
test
lret
adc
jne
cmpsb
bound
xchg
sub
xor
cmovs
pusha
pop
and
out
cmpl
test
loopne
jg
fadd
lods
orl
test
or
xchg
push
xor
int
add
xchg
mov
xchg
outsl
stos
jns
pcmpgtd
mov
sub
aas
ret
fistl
bnd
repz
inc
mov
mov
jecxz
test
push
dec
test
out
fidivl
fucom
or
sub
adc
dec
in
roll
mull
and
and
cmpsb
aad
shl
in
pop
mov
sub
cmp
pusha
xchg
call
dec
pop
fwait
enter
mov
inc
test
mov
leave
adc
fistpll
push
ljmp
add
ficomps
push
cmc
and
imul
leave
push
mov
pusha
mov
mov
fsubrl
push
cld
jg
xor
jp
addl
or
clc
dec
add
adc
sahf
cli
fnsave
mov
xchg
mov
bound
sbb
nop
dec
test
int3
enter
dec
push
std
mov
test
iret
sbb
popa
adc
cmp
inc
das
stos
in
xchg
ljmp
mov
div
dec
imul
popf
sub
sbb
testb
pop
xor
and
push
into
enter
cmp
mov
adc
dec
sbb
jmp
mov
rcl
add
sub
xor
shrl
and
aaa
mov
jle
xchg
dec
faddl
cmp
cltd
sub
jnp
sbb
xchg
lock
addl
jecxz
push
std
mov
or
daa
test
jno
or
fsubrp
inc
lret
inc
jl
xchg
xor
inc
add
dec
shll
pop
pop
xchg
jge
xchg
jp
xchg
add
sub
push
not
fucom
pop
sbb
cld
and
xor
loope
jns
adc
and
aam
inc
lods
mov
test
fsubrs
scas
rclb
cltd
call
cld
sarl
push
or
xchg
jge
ret
aad
jg
push
mov
popf
inc
lods
xchg
pop
adc
or
lds
int3
adc
cmp
lret
adc
es
mov
andl
stc
xchg
push
inc
inc
mov
push
aad
pop
je
mov
cld
and
sub
cmp
mov
fldenv
aam
pop
cmp
xchg
insb
jge
sub
or
push
sub
pop
and
push
lds
jbe
daa
pmullw
push
popf
inc
mov
jmp
outsl
fwait
repz
dec
dec
push
xor
sahf
outsb
xchg
mov
pop
and
cmp
adc
jmp
stc
sbb
push
popf
cmp
and
lock
mov
aad
outsb
and
jne
cmc
mov
shlb
fcmovnbe
push
and
inc
xchg
add
jb
sub
mov
cmpl
mov
xchg
daa
daa
add
out
ljmp
pop
fwait
bound
shll
add
divb
ja
push
jbe
and
pop
pop
and
push
orb
shl
adc
lcall
mov
mov
or
lea
cmp
lock
ret
and
jmp
jge
push
jge
pop
mov
fdivr
mulb
addr16
cmpxchg
sub
divl
and
lds
adc
nop
push
fstps
jno
fsubrs
add
std
insl
test
cli
lret
jo
lds
pop
insl
mov
sahf
jle
mov
ret
orl
jne
fldenv
sahf
jno
movsl
sbb
dec
or
data16
sbb
ret
pop
lods
pop
pushf
scas
mov
aas
not
popa
aaa
push
inc
push
sub
push
fwait
jge
js
clc
push
popf
cltd
mov
fs
cmpsl
or
push
orl
rorb
mov
int
int
or
test
push
jo
mov
lret
imul
push
call
loopne
outsl
xlat
faddl
xor
mov
push
in
cld
subb
jae
inc
inc
notl
jmp
inc
cmp
lcall
in
pusha
testl
jle
mov
cmpsb
push
arpl
in
jbe,pt
push
pushf
cmp
cmp
stos
in
pop
fidivrl
rorl
stos
jnp
add
xor
inc
flds
adc
notl
mov
addr16
fisttpl
out
out
dec
aad
sub
add
pop
ds
push
mov
je
adc
cmp
mov
jbe
lgs
dec
cmp
mov
or
sbb
in
push
fwait
ljmp
fwait
sbb
int3
sub
nop
push
adcb
nop
mov
idivl
stos
mov
jg
std
cmp
jns
pop
jo
dec
inc
sub
xor
arpl
push
push
mov
and
jl
cld
sub
es
or
push
xchg
and
das
dec
mov
ja
xchg
sub
loopne
push
and
rol
mov
lods
sbb
lock
dec
jge
js
mov
mov
cmp
or
hlt
test
or
stos
push
aas
pop
bnd
sub
addr16
jg
cmpsl
test
imul
dec
sub
mov
lcall
sar
inc
mov
ret
dec
pop
dec
cmp
push
shr
pop
shlb
adc
stos
hlt
bound
mov
dec
xchg
inc
call
leave
lods
mov
push
ret
and
cli
sahf
and
out
mov
loopne
test
adc
push
or
mov
or
inc
sub
push
rcrl
rcrb
mov
jmp
ja
inc
pushf
hlt
gs
cmp
mov
or
test
pop
add
pop
dec
mov
sub
insl
in
pop
cltd
add
rolb
or
insl
lds
inc
jmp
mov
test
and
sub
sti
lock
loope
jmp
int3
pop
xor
mov
fiaddl
div
sbb
xchg
or
pop
fisttps
mov
icebp
adc
std
lods
gs
in
loopne
jge
add
rcl
sub
mov
sbb
out
push
mov
xor
xchg
jecxz
in
push
nop
add
mov
ret
pop
pop
cmp
xchg
push
andl
sub
jl
xchg
cmp
int3
scas
iret
push
fwait
and
js
cs
add
sarl
ljmp
jb
sub
sbb
push
loope
cmp
mov
dec
shl
outsl
rorb
push
mov
inc
lret
mov
cmpsl
dec
aad
cmpsl
jnp
or
sbb
push
iret
mov
push
loop
outsb
das
mov
add
gs
nop
dec
xor
insl
sbb
pop
lret
and
add
xchg
loop
push
in
ja
push
ss
fbld
or
out
sub
rolb
sbb
icebp
xchg
xor
adc
jb
mov
ret
push
and
in
or
repnz
ljmp
lock
xlat
das
cmp
sarb
fldt
dec
pop
inc
in
repz
popf
test
ja
mov
pop
push
adc
jae
jae
or
cs
in
mov
or
add
adc
icebp
xor
and
leave
sub
pop
clc
stos
add
pop
aad
push
in
push
daa
or
insb
aaa
pusha
add
in
pop
pop
out
fildl
nop
orl
clc
dec
gs
xchg
addl
test
mov
movsl
or
mov
fstps
or
out
adc
add
jmp
imul
and
mov
mov
mov
jecxz
hlt
pop
pop
ljmp
lock
popf
sbb
test
push
ljmp
adc
or
inc
scas
jb
sbb
xchg
pop
mov
mov
mov
and
mov
pop
xchg
push
ljmp
jno
nop
sub
ret
mov
dec
sub
mov
fcoms
test
mov
lahf
imul
iret
mov
in
xor
dec
dec
sbb
push
fwait
push
cmpsb
movsb
insl
sub
and
fsubrs
testl
sbb
push
in
xchg
mov
je
out
pop
xchg
cmp
rcrl
sub
cli
jp
add
add
ljmp
xlat
pop
and
fsts
out
inc
jne
inc
imul
addb
or
mov
mov
shrl
orl
inc
mov
dec
lds
push
daa
push
and
insb
push
and
sti
outsb
dec
hlt
mov
mov
out
sbb
movsl
dec
daa
loopne
test
sub
bound
inc
or
add
lea
ljmp
push
xchg
xor
out
das
mov
popa
jp
fwait
xor
jb
push
push
and
movsl
popa
cwtl
shll
lods
jmp
or
shll
xchg
mov
ret
loop
lock
popa
rorl
push
and
lcall
mov
mov
pop
adcb
bound
push
xlat
inc
and
pop
push
pop
in
mov
and
loopne
jb
adc
fnstsw
xchg
jge
test
inc
out
dec
test
add
push
sbb
inc
push
inc
inc
fistps
mov
inc
rorb
mov
enter
sbb
in
dec
in
xor
cs
xlat
pushf
dec
pop
lock
sbb
out
popa
xchg
jo
insl
lcall
mov
stos
lea
adc
fucomip
scas
push
inc
stos
add
mov
dec
mov
jnp
jp
mov
mulb
hlt
mov
push
repz
add
cmp
test
aas
sbb
repnz
pop
adc
cwtl
sbb
cmp
pop
jmp
xor
es
cmpsl
xchg
xor
lock
outsb
int
dec
pop
fs
ffreep
pop
jg
inc
push
scas
and
lret
xor
pop
js
inc
dec
pop
xchg
lods
pop
adc
push
jmp
mov
jg
fs
andl
push
sub
xor
pop
add
xchg
push
aas
enter
sbb
rol
dec
insl
mov
push
xchg
jb
adc
mov
call
paddd
std
pushf
pop
xchg
imul
sub
stos
dec
lds
bound
into
mov
sub
nop
xlat
sbb
fstp
mov
cmpsb
loope
es
test
pop
sub
inc
xor
jb
jmp
leave
mov
scas
xlat
push
push
or
xor
jl
push
push
and
inc
lret
pop
dec
std
and
shrl
mov
mov
js
cli
shll
mov
add
idivb
jno
mov
pop
jle
sub
xor
push
inc
aas
push
jae
test
adc
cs
push
push
incl
sub
dec
fstp
mov
scas
stos
sahf
add
jo
add
out
scas
xor
mov
or
scas
imull
clc
mov
sub
mov
stc
xlat
adc
xor
sti
pop
dec
cmc
mov
stos
shl
movl
sbb
pop
xchg
add
shlb
push
lods
mov
cmp
pop
xor
mov
mov
std
int
arpl
xchg
scas
out
add
nop
fwait
bound
aam
or
add
pop
aaa
mov
xchg
lock
iret
addb
imul
mov
xchg
fldt
popa
or
adc
and
sbb
sub
xor
push
or
push
mov
add
or
add
dec
cs
nop
inc
cmp
cmp
xchg
imul
and
mov
fs
lods
jno
inc
mov
mov
stos
push
rcrb
cld
xchg
mov
xchg
pop
inc
lods
cmp
loope
xchg
xchg
leave
sub
jae
cld
mov
addr16
lret
inc
xchg
bound
mov
dec
orb
daa
mov
pop
dec
mov
adc
ljmp
paddsw
or
cmp
outsl
testb
shrb
mov
mov
es
ds
int3
jae
js
cmp
imul
xchg
outsl
mov
outsl
push
xchg
ljmp
jmp
inc
mov
jg
fs
clc
push
fimuls
pop
ficompl
jmp
repz
cmpsl
aas
sub
adc
jg
dec
rorb
cmpsl
popa
add
lods
std
or
dec
das
iret
out
pop
insl
mov
jl
sti
cmp
mov
adc
sbb
jp
add
add
adc
stc
jge
test
sub
in
ret
pop
pop
lods
fwait
xor
movsb
push
je
mov
dec
push
xor
pop
mov
pop
xchg
jns
adc
clc
pop
in
mov
jb
mov
mov
jecxz
pop
aaa
aam
por
insl
test
sbb
das
shlb
aad
xor
fbld
mull
dec
jne
std
mov
stos
mov
pushl
jecxz
adc
mov
mov
fdivrl
cmp
stos
ds
loopne
jbe
lahf
dec
shll
std
mov
cmpsb
pop
into
faddl
cmp
sub
mov
xchg
ds
jecxz
mov
aas
inc
push
mov
pop
fldl2t
xchg
adc
sub
in
hlt
dec
jecxz
mov
push
adc
mov
jmp
lea
rcrb
lcall
insb
repz
xlat
xchg
out
in
lahf
push
cmp
mov
xor
or
imul
call
mov
stos
loop
sti
je
and
push
pop
aam
push
das
xchg
or
sbb
pop
mov
aad
pop
add
imul
ljmp
movsb
inc
or
or
aas
dec
jle
nop
sub
clc
std
shrl
sbb
push
lock
cltd
hlt
jg
ds
addb
dec
sbb
jge
pushf
popa
clc
fisttps
addr16
sub
popa
jns
ja
orb
lods
enter
inc
add
xor
add
jae
cmp
xchg
imul
xor
mov
out
push
enter
jne
add
mov
push
and
adc
cmp
shrl
lahf
out
out
cli
inc
es
sbb
push
dec
push
dec
mov
and
or
xchg
int3
mov
mov
fwait
cmp
fs
adc
dec
or
xchg
mov
xchg
and
xor
hlt
imul
jp
inc
movl
mov
mov
push
inc
jge
pop
adc
leave
mov
push
in
aam
adc
pop
outsb
hlt
mov
sbb
gs
ss
enter
pop
ja
xchg
out
loop
or
lds
push
push
adc
aaa
lods
out
push
test
repnz
xlat
int
or
arpl
ja
dec
movsl
sbb
push
frstor
and
aas
lret
jae
fidivl
xchg
mov
call
sbb
mov
add
lcall
mov
push
shrl
cli
push
nop
mov
loop
sbb
jecxz
xchg
je
ja
mov
mov
dec
shrl
xchg
push
ds
mov
mov
cmp
rep
pop
adc
mov
fnsave
xor
aas
mov
decb
mov
les
xor
push
lods
and
dec
jmp
push
imulb
pop
push
sub
addr16
or
cltd
jl
xlat
dec
or
loopne
stc
lods
push
push
ficomps
cld
lcall
push
mov
and
je
into
dec
lret
push
dec
xor
into
loop
adc
inc
jmp
fiadds
lock
cmp
push
call
dec
push
outsl
cmp
push
sahf
push
out
cmpsl
filds
add
jge
je,pt
cltd
in
call
sahf
in
or
push
mov
rolb
add
xlat
das
in
das
es
sub
push
add
mov
clc
dec
pop
pop
lods
adc
orl
cltd
inc
pop
mov
out
adc
sbb
pop
or
cmp
test
adc
mulb
mov
add
test
insl
and
das
jae
je
jae
lods
xor
push
lret
sbb
jmp
out
push
insl
lret
inc
fdivl
push
repz
cmp
movsb
jp
aad
pusha
lahf
ja
outsb
add
mov
cmpl
and
pop
jmp
xor
ja
xor
scas
stc
sahf
bswap
dec
sbb
nop
pop
clc
movb
xor
jnp
out
xlat
jno
lds
push
aaa
mov
mov
out
push
pop
fwait
dec
sub
or
loopne
xlat
mov
mov
sub
push
data16
xchg
jnp
mov
scas
adc
adc
lret
gs
cmp
jmp
or
inc
cmpsl
push
jnp
inc
or
jbe
xchg
mov
leave
adc
sub
fisubl
movsb
test
push
mov
sub
into
sub
std
filds
test
sbb
or
push
inc
mov
movsl
sub
sub
pop
mov
inc
jnp
ss
imul
cmp
rcr
shl
repz
cwtl
mov
out
test
lods
es
lock
test
push
dec
jp
jnp
imul
popf
movsl
mull
mov
outsb
pop
test
jmp
mov
lods
insl
sbb
push
stc
sub
cli
ret
xlat
repnz
mov
movsb
mov
and
fs
lcall
sbb
or
mov
addr16
cltd
xchg
das
mov
mov
daa
sbb
icebp
adc
pop
imul
jecxz
pop
shrl
push
and
mov
inc
pop
cmp
pop
test
out
notl
cmpsl
pop
mov
loop
fcoml
fs
push
insl
in
adc
out
xor
mov
jno
loope
lret
shll
in
ret
xchg
std
xchg
enter
in
cmpsb
ret
inc
frstor
inc
sbb
cmp
movsl
jecxz
pop
cmc
out
loopne
aaa
push
mov
cli
call
pop
ss
je
std
in
add
adc
aam
fsts
adc
sbb
xor
pop
sub
mov
gs
dec
push
adc
xchg
xchg
adc
mov
pop
inc
cs
aam
lods
and
fistps
inc
ret
sub
dec
dec
fistpll
andl
rorb
sbb
jecxz
mov
mov
push
mov
xchg
mov
sbb
pop
shll
and
push
xchg
add
fsubr
xor
cmp
or
mov
cmpsl
sbb
pop
mov
imul
xorl
repnz
stos
js
xchg
pushf
clc
into
adc
jmp
stos
lea
out
xchg
sub
sbb
dec
outsl
aaa
stos
test
mov
or
cmc
dec
and
jnp
ds
es
jno
iret
inc
mov
clc
dec
loopne
dec
sbb
outsb
sub
and
push
arpl
imul
push
lea
dec
adc
dec
sub
mov
pop
enter
test
cld
xchg
nop
jg
popa
lea
jno
mov
sbb
fbstp
inc
hlt
imul
push
arpl
mov
jne
xchg
in
mov
pop
mov
dec
or
sbb
aaa
nop
stc
je
fisubs
dec
inc
call
popa
xor
pop
inc
std
jle
test
add
dec
test
ljmp
push
or
pop
mov
jns
or
ja
inc
lcall
lcall
jb
xchg
and
jge
push
mov
shrl
imul
scas
insb
cmpsl
pop
icebp
cmc
pop
daa
jno
lds
fisubrl
adc
mov
mov
ud1
cmp
outsl
push
addr16
jb
dec
xor
cmp
push
xchg
sub
scas
js
insb
pop
xor
scas
inc
push
ds
mov
enter
out
inc
mov
int3
push
xchg
pop
mov
jae
es
popf
xlat
inc
repz
inc
out
std
mov
xor
xchg
pop
mov
gs
cld
adc
jl,pn
roll
call
pop
mov
or
pusha
aad
outsb
add
decb
add
sub
inc
dec
in
loopne
push
mov
ja
lret
ds
pushf
push
shrl
xchg
shl
xchg
es
and
mov
push
cmp
jl
and
sbb
outsb
push
ficoml
mov
xor
pop
sbb
mov
jge
shlb
sbb
leave
jecxz
push
bound
dec
and
fsubr
jg
ja
arpl
inc
sbbl
and
pcmpgtw
mov
pop
adc
repz
cmp
es
insl
add
cmp
ss
mov
in
movsl
in
into
xchg
jp
je
mov
nop
sub
out
ret
shl
xlat
lea
outsl
jns
mov
ret
sarl
xlat
mov
xchg
inc
or
iret
outsb
mov
sub
inc
scas
outsl
dec
or
sti
xchg
and
xchg
das
repnz
or
or
jp
jo
inc
mov
imul
pop
xchg
sub
cltd
dec
loop
test
cmp
es
scas
stos
ss
mov
out
scas
rcrb
in
push
movsl
pop
mov
cmp
and
jle
iretw
mov
mov
data16
jns
imull
fbstp
mov
mov
fcmovbe
mov
repz
icebp
mov
aam
dec
pop
mov
dec
out
mov
es
jecxz
inc
jmp
call
nop
jb
out
sub
out
js
push
dec
in
xor
insb
shll
movsl
and
push
in
xor
pop
add
mov
jbe
popf
lods
outsb
test
test
je
mov
jle
daa
arpl
xchg
imul
movl
cmp
stc
push
dec
mov
and
scas
xchg
dec
out
int
adcb
jecxz
addr16
mov
subl
mov
push
lcall
add
push
pop
imul
js
insl
mov
stos
cmpsl
pusha
push
js
sub
out
adc
inc
dec
add
out
mov
dec
hlt
into
lret
sti
out
movd
add
iret
and
repnz
mov
cmp
fistpll
popa
nop
shl
or
ljmp
dec
cmpb
inc
js
pusha
andl
imul
fdivrs
repz
push
repz
sbb
jo
add
xor
in
add
cmp
jmp
mov
and
cs
nop
sti
xchg
test
call
aam
std
mov
fists
sub
sub
imul
repnz
ret
test
sbb
cmp
bound
xor
pop
add
jnp
icebp
cmc
add
movsb
mov
lret
and
fidivrs
mov
inc
pop
fxch
mov
push
or
xchg
cmc
movsb
repnz
mov
pop
jl
dec
mov
shl
fs
add
ss
popa
jge
cmp
jns
sarl
das
add
mov
lods
cs
sub
cmp
stos
dec
dec
cmp
and
dec
in
aaa
addb
out
jae
in
and
je
adc
dec
and
bound
in
mov
mov
rcrb
lret
fstl
aad
scas
push
push
push
mov
xchg
addl
mov
xor
xor
adc
xor
add
sti
lret
jp
out
mov
addl
aad
subl
pusha
push
sbbb
push
insb
ds
imul
sarb
jecxz
dec
loop
add
add
les
sbb
ss
rcrl
xor
add
ret
fcoms
mov
imul
mov
inc
jbe
push
cmp
out
loope
sub
push
jmp
xchg
in
lods
push
mov
sbb
xorl
jb
adc
mov
inc
clc
pop
mov
jmp
cmp
mov
pop
sub
mov
lcall
inc
sub
pop
aas
or
inc
fsubrl
add
mov
sbb
fiadds
jns
lret
xchg
mov
repnz
hlt
pop
imul
icebp
push
and
addr16
movsl
sub
add
mov
sbbl
das
push
sti
push
incl
in
popl
and
rorb
xchg
sub
sbb
mov
inc
pop
scas
stc
daa
sbb
aad
adc
insl
out
push
push
jns
adc
jnp
shlb
ficoml
push
ret
lods
pop
sti
imull
mov
in
jnp
std
xchg
insl
xchg
mov
jle
sbb
scas
mov
xchg
xchg
push
sub
xchg
mov
fld1
add
test
and
pop
push
pushf
dec
adc
cmc
xchg
dec
notb
jbe
mov
notl
mov
push
ja
mov
mov
popf
loope
mov
stos
jmp
sbbb
lock
out
push
jae
repnz
mov
pop
ret
imul
out
jns
cmp
loopne
fists
adc
cmpsl
insl
mov
xor
jno
and
inc
dec
pop
xchg
lea
clc
push
sub
add
outsl
and
jb
addr16
jne
divb
add
jno
inc
movsb
or
xor
mov
call
cltd
sub
rep
xor
sub
jnp
mov
inc
int3
fiadds
lahf
in
jo
push
jmp
jb
xor
fcoms
adc
xchg
jle
arpl
add
sub
sbb
pop
fsubrl
int3
ret
mov
mov
rcrl
xlat
popa
enter
inc
dec
pop
jns
xor
push
cwtl
sub
in
jl
icebp
dec
mov
int
mov
and
inc
int
inc
addb
mov
add
pushf
sub
pop
inc
push
and
fs
jmp
out
sbbb
test
aaa
lahf
adc
mov
stos
dec
pop
daa
int
dec
enter
lret
std
adc
xor
jge
cli
jne
mov
call
xchg
cmpsl
inc
fisttpll
loop
fnstenv
das
sub
push
jb
fidivs
insl
sub
inc
stc
cmpsb
notl
sub
pop
add
imul
push
mov
outsb
mov
stc
mov
std
xchg
jmp
cmpsb
push
adc
xor
cli
out
in
mov
int
out
dec
pop
cli
mov
movsl
xor
adc
cmpb
test
dec
or
popfw
test
cmpsb
sub
into
pop
mov
cmp
xchg
sub
sbb
mov
adc
pop
pop
lds
sub
lahf
jbe
leave
stos
jne
loop
or
cmc
add
mov
mov
shll
je
mov
mov
ljmp
sbbb
out
shlb
aad
push
mov
push
xor
add
pop
outsl
jge
insl
sti
pop
mov
jecxz
mov
sub
shrb
pop
adc
cmp
ret
xchg
std
pop
fildll
mov
inc
sahf
jne
sub
adcl
cld
xchg
or
mov
shl
sub
jno
mov
jg
into
mov
shl
leave
jmp
hlt
mov
add
scas
pusha
test
lods
les
les
das
dec
fdiv
das
mov
popa
inc
out
jne
aam
es
mov
mov
or
data16
repz
push
insl
add
cmc
sub
jae
mov
out
jecxz
aam
test
dec
vpsrad
sub
js
orl
test
adc
mov
jg
mov
mov
in
std
mov
and
sti
cwtl
test
decb
xchg
test
jns
pop
lds
es
enter
mov
nop
fiaddl
imul
insl
insl
lahf
pop
lock
mov
inc
ljmp
gs
jmp
jo
mov
movsl
loop
mov
and
or
jle
hlt
arpl
jo
in
mov
or
jno
cli
inc
loop
pop
imul
sbb
and
add
cwtl
sbb
data16
dec
adc
out
outsl
sub
data16
aas
stc
movsl
xor
inc
pop
ret
mov
pop
jno
lea
fisttpll
iret
aas
lret
in
js
jge
xor
fs
jl
xchg
mov
dec
xlat
ret
testl
repnz
inc
andb
data16
aam
pop
xlat
push
mov
fwait
push
cmp
mov
pop
mov
jno
sbbl
or
mov
pop
leave
dec
cs
int3
dec
mov
aas
fsubrp
lret
addr16
ficomps
test
adc
adcl
out
sbb
pop
and
data16
aas
cmpsb
xor
cmp
icebp
and
ja
mov
dec
mov
xchg
shll
inc
popf
sbb
inc
jge
and
pop
lds
dec
adc
inc
ror
loop
in
popa
mov
pop
jno
gs
cmp
pop
push
idivl
repnz
ss
call
adc
push
mov
fcmovnb
inc
inc
jno,pt
leave
mov
push
adc
and
xchg
xchg
lods
and
add
les
sarl
or
jo
mov
cmp
and
dec
out
mov
in
sub
insb
cmp
mov
cmp
cmp
mov
out
frstor
aad
pop
and
add
ret
jmp
test
add
shr
pop
adc
lcall
inc
inc
cmp
add
xchg
mov
xchg
push
add
or
mov
mov
xor
test
rol
xchg
bnd
cmpsl
and
cs
push
adc
ficoml
inc
movsb
rcr
loopne
dec
adc
out
lahf
sbb
mov
icebp
leave
jecxz
cmp
add
adc
inc
mov
call
jae
adc
aad
pop
push
aam
mov
cmp
fs
das
mov
pop
jns
pop
inc
sub
shrl
or
sub
push
lock
repnz
fdivrs
sarb
loop
push
push
pop
mov
int
loope
pop
inc
sub
fmulp
fnstcw
decl
xchg
xor
mov
in
sbb
sti
inc
cmp
jae
jae
loop
int3
cmpsb
mov
out
jne
lds
testb
xchg
and
mov
sbb
out
jno
jnp
nop
repz
stos
or
shrl
ja
sbb
cmp
cmc
or
mov
xor
sbb
pop
outsb
inc
adc
push
sub
movl
daa
dec
dec
cmc
push
int
movsb
cmp
lcall
mov
cmp
in
adc
mov
sbb
push
push
sub
jno
filds
push
movsb
cld
fisubl
shlb
popa
orl
add
pusha
cmp
std
aam
fisubs
adc
inc
stos
jae
push
mov
popf
lea
testl
fdivp
test
add
int
loop
add
xchg
jo
nop
or
inc
sbbb
sub
cmp
dec
xchg
mov
sub
and
in
push
lods
mov
stc
push
push
sbb
mov
lahf
push
ja
test
mov
inc
pop
or
sbb
and
pop
mov
and
adcb
clc
movsb
mov
daa
push
mov
popa
jno
ljmp
cmc
mov
lods
ljmp
ss
popa
dec
xchg
adc
sbb
cmpsl
push
xor
adc
inc
shlb
cs
dec
loop
sub
fistpll
xor
xchg
aad
test
cmc
sbb
cld
int
fbstp
xchg
jns
test
hlt
mov
in
test
mov
push
jmp
xor
inc
test
gs
sbbl
lea
cmpsb
lea
loopne
adc
ja
pop
mov
fwait
xchg
xor
outsl
sub
mov
dec
stos
sbb
nop
sbb
adc
mov
pop
push
outsb
shrl
xchg
fs
pop
jecxz
inc
lahf
adc
add
pop
sbb
in
push
push
inc
lods
out
sti
inc
rcr
test
mov
je
sub
dec
insb
dec
stos
pushf
pop
cmpl
inc
mov
lds
test
mulb
mov
ret
insl
je
sahf
movsb
ret
xorb
les
cwtl
xor
mov
leave
sub
xchg
mov
addr16
ss
mov
and
loop
cmp
and
inc
std
jl
pop
mov
lret
jno
push
icebp
adc
test
repz
mov
add
inc
pop
xchg
jns
ret
jnp
aam
xchg
mov
bnd
xchg
in
loope
dec
repz
sbb
dec
mov
cmp
sub
lock
pop
or
stc
push
inc
adc
iret
out
insl
mov
push
jg
mov
fsubr
mov
push
inc
lret
outsl
ret
pop
mov
rcrb
dec
movsl
testb
cwtl
dec
mov
mov
out
hlt
xchg
fistpll
inc
pop
and
js
stc
mov
into
lea
ret
lahf
push
pop
int
xchg
and
sbb
push
sub
insb
jecxz
adc
sub
mov
sti
icebp
insb
inc
push
lds
inc
mov
xor
call
dec
or
icebp
lds
pop
icebp
mov
mov
adc
dec
out
dec
loop
sti
inc
loopne
add
test
sti
ja
or
jmp
push
leave
fnstcw
insb
jp
loopne
ret
gs
sub
popf
lock
and
sub
pop
cmp
inc
push
addr16
popa
pop
cmp
imul
adc
adc
mov
pushf
loope
mov
shrb
inc
mov
mov
addr16
popa
arpl
loop
sub
imul
mov
push
in
inc
lds
pop
shll
cli
iret
sub
push
scas
negl
flds
aaa
bound
shrl
jecxz
out
nop
jo
outsl
in
test
decb
movsb
mov
lock
movsb
jnp
into
pop
lds
rorb
lcall
jo
scas
mov
cmc
xchg
test
xor
sarb
push
out
cmp
xchg
inc
add
pop
inc
pop
mov
adc
cmp
sub
pop
sarl
pushl
insl
mov
loope
cmp
in
loop
out
push
ja
mov
adc
fsubrp
xchg
push
dec
daa
test
mov
xchg
aas
dec
or
fsubl
jecxz
xchg
mov
cmp
insb
add
mov
stos
sahf
cli
das
mov
cltd
loopne
daa
cmp
cmp
test
lret
pop
aas
lahf
xor
je
push
bound
fildl
cltd
push
popa
out
sti
sahf
add
fmuls
cli
xchg
ret
jge
test
in
scas
test
outsl
jge
ss
sbb
add
xchg
push
push
mov
xchg
out
stos
dec
xchg
adc
mov
mov
jns
dec
mov
ret
int
cli
push
shl
fldenv
jp
imul
mov
push
shll
and
cmpsb
testb
adc
test
pusha
hlt
mov
int3
fisubrs
int3
das
mov
mov
pop
imul
lock
ss
add
xor
movsl
in
xor
add
mov
dec
inc
push
mov
dec
push
into
xchg
push
cmp
aaa
popa
int3
dec
lods
std
inc
lods
dec
sarl
push
mov
jp
leave
push
sbb
add
aad
or
ret
xchg
and
add
inc
mov
mov
jle
and
fldt
leave
loop
xchg
mov
or
das
mov
subb
scas
adc
mov
mov
hlt
sbb
and
cld
sub
stos
rcl
out
jnp,pt
out
rcr
jne
jmp
pop
mov
jb
mov
call
insb
jne
dec
das
xor
ret
nop
sub
pop
andb
push
in
leave
jecxz
xor
ret
fists
jne
sbb
or
pop
decb
fistl
pop
jb
fsubrs
xchg
mov
in
push
fldl
les
sbb
out
addr16
sbb
or
sti
push
popa
add
ljmp
mov
pshufw
fisttps
mov
cmp
int
mov
or
sub
ljmp
dec
jns
loopne
inc
pop
test
cmp
leave
bound
push
cwtl
or
out
xchg
sbb
insl
lods
xchg
push
lea
sbb
inc
xor
dec
pop
xchg
mov
cmp
mov
repz
jb
inc
and
inc
sbb
mov
inc
fdivs
rcr
arpl
faddp
jae
cmpsb
mov
push
out
loope
in
pop
mov
cmp
jecxz
inc
adc
testb
dec
mov
mov
push
arpl
insl
aad
push
sub
ret
inc
fiaddl
cmpsl
incl
xchg
xchg
das
pop
sbb
bound
mov
inc
shl
sti
pop
js
fldenv
pushf
xor
fs
adc
mov
mov
cmp
das
dec
inc
faddl
inc
jmp
pop
ss
xor
outsl
xchg
or
ret
xchg
fwait
shll
notl
sarl
push
outsl
lcall
and
mov
call
push
std
sbb
out
jo
jecxz
shll
add
mov
inc
cmp
outsl
xchg
mov
add
iret
ret
cwtl
popa
enter
in
and
stc
les
jb
xchg
hlt
shll
pop
jne
jmp
pusha
or
fsubrl
insl
mov
xorb
mov
adc
popf
int3
jbe
mov
xor
mov
sbb
xor
jns
aam
xchg
inc
xor
movsl
shrl
inc
mov
gs
fwait
cmpsl
jns
jo
and
sbb
jnp
scas
orl
or
and
outsl
push
in
test
jbe
imul
jecxz
mov
xchg
add
mov
sub
mov
xor
sub
dec
mov
pop
pop
xchg
dec
ret
inc
movsb
out
and
mov
sbb
mov
adc
push
popf
int
mov
add
lds
mov
and
cmp
push
sbb
loopne
daa
add
add
cli
xchg
mov
aam
push
call
xor
outsl
fiaddl
add
repz
das
out
xchg
inc
fcmove
lcall
pushf
loope
notl
mov
add
mov
push
inc
push
mov
dec
arpl
inc
js
scas
enter
iret
xorl
test
cmpsb
cld
inc
lret
cmc
testl
xchg
stos
jae
inc
int3
xchg
xor
add
mov
pushf
mov
shrl
dec
sti
es
clc
xchg
xor
or
push
push
stos
or
je
ret
or
mov
mov
data16
lret
nop
arpl
add
xor
mov
bound
sbb
mov
rclb
inc
pop
xchg
movsl
fidivrs
pop
das
mov
imulb
repz
or
daa
push
incb
jg
mov
jns
fnstenv
push
mov
cmpsb
lock
sub
je
sub
mov
das
push
cmp
rcrb
push
mov
mov
out
mov
push
pop
iret
push
cmp
jmp
icebp
popa
add
push
mov
jns
lcall
aaa
xor
inc
lock
pop
sahf
mov
and
xor
jb
int3
jb
in
pop
sbb
in
sub
ljmp
out
push
jle
icebp
mov
bound
sbb
test
cmc
lds
out
or
cmpsl
cmpsb
cmp
pop
mov
fidivs
sbb
and
insl
mov
and
mov
adc
jge
fnstcw
mov
push
lds
cmp
mov
jg
mov
cld
mov
sbb
cltd
jnp
lret
or
mov
pop
ljmp
imul
mov
cmp
lods
andb
add
ret
rcl
out
aad
test
daa
dec
jb
negl
das
sbb
push
or
lcall
insb
sbbl
call
jbe
bound
or
ja
out
repz
in
mov
out
insb
ja
movb
lock
push
sar
bnd
lods
cmpsl
mov
xchg
lds
jge
sbb
idivl
mov
xor
out
cld
sbb
cld
xchg
cli
stos
sahf
pop
add
popf
push
inc
stos
xchg
mov
xor
mov
and
mov
std
test
bnd
sub
or
cmp
mov
cwtl
sub
into
mov
add
pop
push
leave
out
bound
mov
clc
mov
push
hlt
out
out
sbb
adc
push
inc
xor
decl
mov
adc
sub
aas
cwtl
and
lret
lea
jl
cmpl
mov
mov
leave
cmp
aam
sahf
cmc
dec
add
ret
ja
ljmp
loop
out
xorl
stc
movsb
jbe
sbb
dec
mov
fldenv
and
shrl
xor
mull
out
scas
xor
std
inc
push
xor
mov
ret
push
sbb
mov
xor
lea
ret
pop
popl
xchg
or
jle
jnp
xchg
popa
xchg
jo
call
mov
jb
push
cli
aas
out
xchg
gs
sbb
pop
mov
sub
inc
subl
fsubrs
fnsave
push
xor
mov
or
loope
lahf
ss
xor
mov
add
push
mov
xor
mov
push
cwtl
pushf
fsubrp
popa
int3
xor
xor
mov
popf
pop
jnp
push
lods
mov
push
xchg
cmp
stos
outsl
hlt
pop
in
loope
pusha
mov
or
ljmp
cmp
scas
dec
sbb
stos
lds
aam
dec
sbb
push
dec
loopne
repz
ss
fstpl
push
dec
or
loop
addb
addr16
mov
ja
lret
inc
lahf
xorl
cmpsl
in
int
and
in
jle
pop
cmpsl
mov
loopne
aam
mov
inc
xor
lret
push
enter
popf
fsubrl
jle
mov
loope
inc
call
outsl
fwait
cmp
out
outsb
xor
sub
inc
in
leave
push
or
mov
test
aaa
inc
fwait
repnz
fists
fs
push
outsb
adc
inc
dec
cmc
sub
adc
pop
inc
add
insl
iret
push
mov
push
out
xor
and
sub
dec
pop
mov
sub
cmp
dec
imul
mov
vzeroall
lods
mov
or
shr
xor
push
jno
fwait
and
ss
add
nop
ljmp
fisubs
dec
roll
shrb
mov
mov
xchg
xchg
outsb
sub
fcomps
cmp
mov
mov
das
icebp
dec
pop
inc
flds
mov
cmp
add
adc
cmpsl
inc
and
mov
xor
sub
lock
jmp
adcl
lahf
xor
shll
pop
or
ja
push
xor
pushf
jbe
ret
das
push
xlat
xor
test
push
mov
test
es
adc
pop
aaa
inc
sarl
repz
and
push
test
xchg
out
jns
sub
push
adc
mov
or
push
movsl
lahf
cmp
addb
lahf
and
jo
faddl
mov
xchg
xchg
cmp
sbb
mov
notb
adc
mov
aad
dec
sbb
adc
repz
sbb
cmc
mov
and
cmp
movl
outsb
sbb
imul
xor
pop
push
out
push
push
repnz
stos
ds
inc
jns
test
ret
xor
lods
and
call
stos
sbb
enter
int
adcl
push
in
mov
call
push
in
insl
pop
add
mov
insl
cmc
mov
cld
xchg
fwait
mov
jle
or
pusha
test
push
les
push
les
lods
cmc
jbe
xchg
inc
or
push
mov
or
faddp
or
aas
mov
and
mov
and
mull
dec
mov
dec
push
mov
push
push
shr
rcrl
xchg
lods
xchg
cld
arpl
sub
pushf
xor
mov
mov
adc
lds
push
cltd
outsl
cmpsl
mov
xchg
pop
fwait
xor
cmp
jno
out
aad
inc
fistl
test
out
fidivrs
daa
xchg
rol
fdivp
div
sbb
andl
adc
test
cli
insl
out
sahf
dec
mov
out
xchg
sub
pop
popf
cld
dec
mov
mov
push
iret
jbe
sub
shlb
and
inc
aam
lock
xor
jp
mov
inc
sbb
sbb
xor
insb
jecxz
push
movsb
ljmp
jne
outsl
data16
xor
movsb
jno
sti
adc
xor
push
iret
das
lret
push
fdivp
orb
pop
mov
rcr
xchg
sbb
out
and
leave
fistl
sub
adc
adc
pop
pop
mov
call
int3
xor
dec
lock
adc
pop
imulb
and
fs
aas
push
xor
fdivrl
test
rorl
test
and
and
adc
pop
inc
scas
out
popa
sbb
mov
fwait
push
jne
mov
je
mov
out
adc
mov
push
jbe
xchg
sub
mov
sub
sti
jge
jecxz
add
jo
ret
ss
mov
sub
cmpsl
push
xor
add
adc
push
arpl
jo
hlt
or
sbb
imul
ss
repnz
ficoml
push
out
or
jb
mov
xchg
loopne
adc
inc
mov
std
inc
aad
orl
add
or
push
adc
cld
cld
test
stc
mov
lods
iret
enter
push
call
and
xor
or
and
xchg
sub
cmpsl
dec
lds
dec
or
cmp
dec
fldcw
xor
dec
out
stos
and
pop
aad
dec
lock
xor
mov
xor
movsb
cmp
lcall
icebp
and
or
pop
jno
jmp
jns
xor
jge
cmpsl
pusha
jl
mov
or
imul
xor
sub
in
orl
decl
sbb
adc
mov
xor
push
cmpsb
addr16
sbb
adc
cmp
inc
xchg
mov
mov
cmpb
push
pop
loopne
xor
pop
imul
test
or
ret
jmp
stc
enter
loope
jge
ret
aas
je
out
or
aad
out
push
lret
iret
ja
insb
mov
pusha
out
pop
mov
sub
jg
scas
inc
sub
in
sbb
es
jle
push
mov
jae
sub
pusha
scas
add
mov
xor
xor
in
in
pop
fdivrs
dec
mov
jne
xor
insb
sbb
fchs
mov
es
shrb
sbb
and
pop
ret
cmpb
les
mov
pop
pop
lcall
dec
repnz
repnz
sbb
push
xchg
push
imul
int
push
mov
imul
adcb
xor
mov
mov
loopne
push
sahf
xchg
into
subl
imul
sbb
shll
leave
popa
lret
out
testl
aam
nop
cmp
dec
mov
pop
push
xchg
mov
fs
test
popf
mov
addr16
mov
and
xlat
sahf
clc
pop
cmp
cli
push
es
sbb
xor
rcl
test
pop
test
std
xchg
movsl
in
sbb
xor
sub
inc
lock
and
stos
rolb
outsb
dec
into
xor
fucomi
or
ljmp
jno
push
adc
scas
inc
jbe
jb
faddl
xchg
sbbl
sbb
jo
in
pop
das
pop
xsha256
cmpsb
push
push
dec
dec
ljmp
xorl
xchg
pop
add
stc
call
or
mov
add
sbb
rcr
and
stc
nop
adc
jg
inc
inc
pop
scas
jae
jo
add
lods
inc
and
mov
xchg
lret
hlt
stos
and
mov
mov
mov
xor
mov
pop
push
les
andb
lock
inc
fcom
insb
or
jl
outsb
fidivrl
mov
mov
iret
sbb
pop
cli
pushf
ds
mov
scas
jecxz
loop
nop
and
or
mov
xchg
xchg
pop
pop
sub
jnp
and
mov
cmc
push
xchg
pusha
inc
sahf
dec
dec
sti
pop
out
and
cli
ja
or
lock
adc
push
ja
mov
add
mov
nop
fists
push
loop
sbb
pop
fldl
xchg
pop
push
and
cmpsb
paddusb
pop
das
cmp
mov
or
out
cvtpi2ps
xchg
or
js
sbbl
popf
data16
pop
pop
testb
jge
and
cmp
jbe
dec
loope
push
and
movsl
sti
adc
mov
jl
mov
inc
leave
sub
je
sbb
mov
sti
pop
push
sub
aad
test
mov
sbbb
sub
mov
inc
mov
adc
pop
pop
cvtpi2ps
and
ret
add
jno
sbb
cmc
repnz
scas
inc
jno
adcl
icebp
add
lods
daa
push
jb
dec
ljmp
pop
or
or
imul
and
xor
dec
sub
mov
push
loop
ret
jmp
les
fs
nop
daa
sub
scas
xchg
mov
psllw
cmp
notl
lods
mov
cmpl
or
andb
lods
shr
mov
repnz
and
dec
imul
cmp
jae
pop
stc
bound
out
push
lcall
popa
push
shrl
cmp
sbb
in
outsb
sti
inc
insb
dec
pop
lret
fwait
sti
test
jne
fdivrl
je
dec
adc
scas
lods
movd
mov
xchg
mov
sbb
add
inc
cmc
mov
in
lret
add
shl
or
lds
mov
jno
mov
cltd
sbb
mov
loop
in
arpl
loope
pushf
cltd
jno
out
push
cmp
jns
cmp
add
lret
ljmp
scas
imul
lods
in
mov
and
inc
popf
fstl
fnstenv
ljmp
or
mov
xchg
mov
arpl
jmp
dec
cwtl
push
enter
in
imull
push
add
repnz
mov
mov
cld
fcoms
xor
stc
inc
stos
push
add
insb
xor
jg
mov
jl
sub
inc
xor
mov
mov
xlat
jg
mov
push
push
xlat
orb
dec
test
clc
ja
add
in
aaa
adc
dec
sub
pop
imul
aad
jae
stos
inc
icebp
xchg
and
mov
lcall
pop
pusha
int3
int3
loop
inc
xchg
inc
into
gs
push
cmp
add
or
rcrb
sub
mov
dec
push
aaa
and
add
xor
lahf
addb
add
inc
andb
pushf
out
aas
inc
mov
sub
bound
inc
imul
lret
and
xchg
loope
in
cmpl
or
test
mov
test
jne
pushf
push
in
int
movsb
cmp
je
dec
popl
icebp
lds
subb
push
popa
dec
sti
or
mov
ret
loope
in
shl
cld
add
ret
rcll
gs
xchg
mov
lods
ljmp
pushf
mov
add
mov
andb
sbb
xchg
mov
inc
adc
inc
js
xchg
out
pop
repnz
imul
fdivrl
and
addr16
fcomi
cs
and
in
xor
xchg
xchg
jge
in
inc
testl
sub
inc
or
add
test
add
ljmp
dec
aam
push
push
push
test
or
pop
cmc
push
sbb
pop
xor
push
cld
mov
jb
mov
mov
int
cmp
addr16
adc
pop
dec
sbb
jo
and
lods
mov
fs
dec
movsl
add
stos
jbe
std
inc
push
inc
cmp
add
inc
xchg
push
xchg
xlat
stc
sti
and
ss
rcr
mov
repz
sub
mov
aad
mov
shll
repz
and
and
leave
lods
inc
stos
sub
fcomip
lret
lret
xlat
cld
sbb
push
or
in
dec
mov
mov
popf
jp
nop
pop
sub
scas
jp
mov
add
sub
mov
cmpsl
sbb
frstor
push
xchg
pop
xor
lods
inc
lahf
ss
stos
and
lret
jmp
aas
es
xor
dec
mov
adc
aad
test
add
jb
cli
add
inc
ror
movsl
addb
jno
movsb
mov
into
adc
xchg
cwtl
mov
jp
lahf
das
int3
testl
test
jge
sub
pop
dec
jmp
jg
sub
loopne
and
sahf
sar
repnz
dec
xchg
pop
nop
and
jg
pop
lods
pop
mov
inc
cmc
ficoms
add
loopne
inc
xchg
ds
lret
mov
fs
punpckldq
sbb
lea
sub
lahf
xlat
stos
es
sbb
imul
aaa
push
sbb
aad
push
pusha
mov
std
rcrl
and
cld
pop
pop
inc
mov
mov
cld
jg
cli
mov
lods
jg
lret
popa
rcrb
popa
loope
arpl
or
fidivl
inc
inc
cwtl
stos
jbe
jb
test
scas
dec
mov
in
or
adcl
push
push
addr16
xchg
mov
fldl
shrb
mov
je
aam
rcrl
addr16
scas
cwtl
loop
sub
xor
xchg
pop
jp
push
and
mov
iret
xchg
rorl
and
inc
inc
jge
mulb
les
jp
inc
jl
daa
imul
add
sbb
add
mov
jb
jg
subl
jl
sbb
or
jno
shr
jle
lcall
jg
clc
mov
aaa
into
jmp
fsubrp
mov
cmpsb
xor
jg
push
mov
mov
mov
fisttpll
mov
cmpsb
arpl
in
shlb
cltd
mov
incl
out
xchg
mov
add
sbb
in
adc
xor
ds
das
xlat
cmp
mov
popa
jb
jbe
ret
ja
inc
lock
mov
orb
inc
mov
dec
ss
mov
into
mov
mov
out
outsb
sub
lahf
pop
xor
mov
sub
notb
cmc
lar
jnp
cmp
loop
jns
jle
sahf
stos
sbb
pop
xor
dec
popf
cs
sub
daa
inc
push
or
pop
sbb
mov
mov
movq
fdivl
dec
jecxz
lea
stc
aam
adcl
xorb
aaa
mov
data16
mov
xor
mov
mov
xor
mov
xor
fwait
cmpsl
mov
mov
xchg
xor
mov
push
imul
sub
imul
or
xchg
jecxz
jnp
add
add
repz
and
test
imul
movsb
add
push
inc
repnz
pop
repz
adc
jae
mov
add
jg
cmpsl
repnz
mov
pop
movsl
sbb
sarb
xor
outsl
lahf
pop
sub
pusha
lret
push
hlt
cmp
inc
push
imul
dec
jl
xchg
xchg
mov
adc
pop
and
mov
out
sub
cltd
xchg
sub
test
jae
sub
inc
add
sbbl
jecxz
xor
or
sbb
mov
adc
mov
bound
test
sahf
mov
inc
cmp
mov
add
jle
fstps
cmp
xchg
push
popf
ret
and
cmpw
push
mov
mov
add
and
outsb
xor
shll
push
clc
push
xchg
pop
mov
rorl
repnz
pop
or
stos
fisubrl
adc
mov
testb
sbbb
xchg
inc
ljmp
and
pop
test
shlb
cmp
dec
xlat
leavew
mov
mov
in
xor
sbb
or
dec
cld
sbb
mov
push
push
lahf
push
sbb
ret
push
cltd
lods
cmc
adc
andl
or
jbe
call
adc
lods
mov
jns
cmp
lret
loopne
xchg
popf
in
xchg
pop
xchg
fidivrl
int
les
mov
mov
cwtl
adc
inc
stos
add
aad
sbb
out
cmp
pop
out
xor
nop
aaa
adc
inc
shrb
cmp
mov
bswap
repz
and
push
bound
popa
leave
ss
xor
pop
aas
scas
inc
jno
stos
push
inc
push
push
adc
pop
out
pop
in
mov
ds
cmp
fcomps
pand
xor
xchg
push
and
fstpl
fildl
mov
mov
dec
mov
leave
rcll
jp
mov
xor
fildll
inc
enter
xor
cmp
test
sbb
push
inc
sbb
xor
fwait
mov
xchg
mov
push
fstps
lods
push
sbb
jns
jno
lret
popa
mov
jge
in
dec
sub
jle
loope
inc
cmpsb
xchg
push
sbb
out
or
or
and
dec
jecxz
in
push
jmp
mov
push
in
out
lds
nop
imul
sub
scas
xchg
xor
pop
aas
stos
insb
mov
clc
lds
out
inc
push
cwtl
adcl
or
jnp
mov
sahf
inc
mov
stc
std
ss
jno
or
fs
int3
sbb
sub
and
loopne
movsb
cs
cmc
mov
mov
aas
mov
jbe
fisttpll
sub
sub
push
and
int3
xchg
scas
cs
out
jnp
es
jo
sub
jp
inc
xlat
stos
mov
mov
cli
pushf
push
outsb
jns
lods
lahf
adc
repnz
or
lock
insl
shlb
imul
out
dec
dec
rcr
sbb
mov
mov
dec
outsb
clc
in
or
data16
in
test
movsl
push
push
xor
or
mov
and
pushf
std
adc
cmp
in
push
and
xor
sub
sub
push
call
movsb
enter
or
out
sub
aad
sub
ffreep
jg
lock
data16
push
mov
std
inc
mov
pop
rolb
sbb
cmpsl
mov
pop
pop
dec
dec
mov
inc
pop
outsl
xchg
shrb
fmull
cld
mov
cwtl
popa
ja
data16
nop
sbb
xchg
and
ret
xchg
in
into
jecxz
mov
jno
pusha
pop
ss
jg
xor
push
jecxz
add
aas
adc
dec
ds
stc
insb
js
mov
mov
xor
mov
inc
mov
cmp
push
pop
sbb
cmp
push
callw
sbb
nop
imul
fcomip
leave
mov
shlb
inc
push
mov
popa
xor
es
mov
and
and
leave
mov
mov
jbe
addr16
dec
aam
out
imul
pop
add
dec
mov
mov
sub
mov
shrl
mov
maxps
cwtl
xchg
dec
jg
dec
mov
pop
mov
imul
and
xchg
jp
xor
cwtl
or
aas
adc
xchg
mov
jl
inc
cmp
aam
inc
in
jecxz
fs
movl
sbb
lcall
stc
cltd
out
xchg
or
imul
inc
jns
std
shrl
mov
flds
or
mov
jmp
xlat
imul
sbb
fsubr
and
nop
stos
xchg
inc
jb
popa
mov
sbb
sarb
aas
mov
loopne
push
aam
ret
rorb
mov
in
add
or
cltd
xor
xchg
push
incl
cmp
aaa
mov
add
xor
dec
out
imul
aad
icebp
and
dec
fnstsw
adc
push
inc
data16
cmpsl
std
icebp
xchg
out
inc
push
cmpsl
cmp
in
pushf
xor
idivb
call
sbb
cmpsb
mov
xor
nop
xchg
testb
push
sbb
or
lahf
fsubs
sti
enter
cs
mov
dec
inc
aad
je
fnstsw
iret
lods
imul
in
loope
inc
push
jl
pop
into
out
sub
fistl
cmpsl
idiv
mov
in
mov
cmp
sti
lret
cmp
shl
mov
push
push
ret
in
push
cmp
hlt
mov
xorl
xor
outsb
loope
xor
call
dec
xor
xchg
shr
cmpsl
sbb
push
int3
rcll
nop
ljmp
insb
sub
xchg
add
or
push
add
mov
lea
out
lock
and
mov
mov
divb
enter
pushf
lds
loope
rorb
movsl
add
lock
and
ret
push
mov
inc
sbb
shlb
repz
vpcomw
xlat
addb
or
out
adc
popa
push
push
out
lea
cmp
cmp
jmp
mov
adc
ret
fucomp
decl
jb
ss
sbb
rclb
dec
test
loop
pop
ret
fisubl
ficompl
and
pop
call
mov
mov
lcall
arpl
mov
adc
arpl
test
sbb
arpl
jbe
sub
test
or
test
data16
mov
sbb
push
xchg
add
imul
or
lods
adc
clc
vpsubusb
pushf
or
push
inc
mov
outsb
jo
loopne
xorl
push
or
mov
cmp
sti
push
das
lds
jmp
push
xor
mov
mov
je
mov
aaa
dec
dec
sbb
sbbb
loopne
ret
lret
and
mov
push
and
test
inc
movsl
nop
sti
popa
bndstx
cmp
add
js
inc
xchg
das
and
sbb
mov
adc
pop
mov
push
incl
movsb
cmpsb
and
stos
rol
push
test
pop
das
stos
rcr
cmp
in
stos
push
out
pop
cmc
enter
leave
je
clc
jle
jmp
sti
adc
jle
cmp
and
add
mov
push
mov
and
data16
into
push
scas
fnstenv
xor
dec
cmc
stc
mov
push
testb
sti
or
movsb
xchg
aas
movsl
adc
negl
addr16
mov
cmp
inc
sub
inc
aad
insb
sbb
sbb
inc
icebp
in
subl
mov
jecxz
mov
icebp
inc
xor
nop
mov
divb
pop
add
inc
loope
mov
popa
cwtl
cli
sbb
out
lret
xlat
xor
or
mov
imul
clc
xchg
sub
or
mov
gs
fimuls
cmpsl
sub
iret
imul
andb
mov
inc
mov
rol
ss
xchg
out
jno
and
push
sub
inc
mov
push
push
stos
fs
xor
out
push
cmpsl
lock
inc
mov
loope
sbb
loop
pop
pushf
xor
fldcw
decl
mov
pop
mov
ss
xchg
sub
jecxz
pop
movsb
jbe
pop
arpl
or
gs
rcrl
outsl
and
lcall
bound
push
inc
mov
adc
jne
push
add
or
lods
inc
pop
rorb
jge
jl
sahf
pushf
adc
int3
arpl
outsl
loop
out
sub
xchg
jno
dec
ljmp
push
xor
lahf
or
adc
jg
jmp
mov
inc
aad
imul
insl
clc
iret
nop
shrb
ds
xchg
std
jmp
pop
cmp
shlb
aaa
dec
iret
fstpt
pop
sbb
inc
into
lods
mov
aam
stc
cli
lea
nop
aam
movsl
shll
push
pop
dec
in
stc
test
out
cltd
fmull
jne
xchg
pop
dec
push
mov
cmp
mov
xor
scas
ds
push
adcb
into
xchg
push
add
push
lock
mov
test
ja
and
nop
mov
add
inc
cld
je
and
jle
je
dec
pop
in
xchg
adc
cmp
add
and
sbb
jl
loope
jno
loope
pop
pop
mov
inc
cld
add
jns
xchg
mov
xchg
xlat
lret
dec
adc
fisubs
std
test
inc
arpl
xchg
xor
ss
xor
daa
jl
xchg
mov
adc
cs
jo
imul
inc
fwait
cmpsl
jnp
mov
popa
mov
lret
movsb
andb
enter
sub
out
fwait
push
movsl
xchg
jp
popa
adc
cmc
iret
stos
fadds
mov
xchg
adc
cmp
int
and
add
xor
movsb
aas
shl
outsl
dec
and
addr16
pop
lret
mov
pop
outsb
inc
dec
inc
push
inc
ficoms
fnsave
into
push
testl
mov
fstps
pop
mov
xlat
dec
xor
cmp
xlat
scas
fstl
push
ja
fimuls
daa
mov
popf
mov
jae
mov
inc
push
fs
out
mov
mov
push
mov
repz
sbb
push
cli
sub
dec
shlb
stc
repnz
cs
aaa
add
arpl
and
lods
cltd
push
sahf
lods
cmp
cld
dec
mov
push
mov
pop
mov
icebp
rcll
loop
out
ficompl
fsubrs
mov
leave
add
fcom
cmc
or
xchg
jge
scas
xchg
pop
sub
sub
ds
mov
sarl
pop
add
insl
mov
scas
lock
push
or
cmp
fisubrl
sahf
add
or
push
or
xchg
stos
dec
mov
jecxz
mov
das
sarb
push
in
or
inc
pop
mov
cmp
jo
adc
lahf
push
push
in
pop
dec
mov
lret
xchg
sbb
jb
add
push
cmp
imul
push
xchg
mov
mov
and
jnp
or
inc
test
jns
pushl
movsb
ficomps
xor
out
scas
push
jp
shr
testb
les
call
mov
insb
push
and
sarl
mov
mov
add
cmpsl
adc
dec
mov
int
push
adc
jmp
pop
or
filds
push
lret
add
sub
cmc
mov
and
mov
fsubrs
out
sbb
mov
push
loop
jo
fistpl
xchg
lret
cmpsb
inc
mov
adc
int
and
and
cmc
fdivrl
iret
cmp
pop
cmp
mov
lods
sbb
rcrl
xchg
sub
fs
or
add
int
jne
cwtl
push
xor
inc
out
inc
mov
int3
jne
out
data16
add
mov
iret
sub
in
and
imul
add
push
enter
sti
sub
xor
pop
sbb
scas
adc
xor
add
jl
mov
xor
jg
insb
mov
mov
adc
fisttpll
mov
dec
test
push
pusha
sbbb
lahf
loop
shll
pop
push
or
dec
hlt
sub
add
daa
mov
xor
cmpsl
xchg
mov
outsl
test
test
test
mov
inc
pop
mov
pushf
out
call
dec
shll
adc
add
dec
in
push
sbb
sbb
push
xor
loope
ficoml
mov
fsubrl
jo
pop
ret
or
movl
push
dec
movsb
stos
cmc
pop
fldenv
cmp
test
lret
inc
or
xchg
xchg
movsl
pop
xchg
sub
fwait
outsb
aas
mov
rcrl
mov
movb
xchg
dec
outsb
flds
xchg
add
xor
inc
call
inc
jae
ljmp
pusha
clc
fldenv
sub
sub
xorb
es
arpl
cmp
sub
ror
cmp
repz
xchg
scas
cltd
dec
pop
outsl
cld
lahf
andl
int
addr16
add
dec
sahf
jle
popa
popf
xchg
shl
clc
mov
jns
cmp
xchg
aam
dec
ret
int
mov
loopne
cld
outsl
call
fsubr
clc
mov
pop
test
mov
push
adc
out
arpl
mov
test
jecxz
xor
pop
fbstp
add
out
int3
and
aad
in
std
loop
shr
adc
inc
fwait
xchg
xor
pop
insl
mov
and
cmp
leave
cld
jmp
push
push
jo
pop
sbbb
into
bound
rcll
je
aad
push
jo
xchg
inc
adc
pusha
jp
scas
sbb
cmp
imul
repnz
mov
repz
andb
ret
es
pop
loopne
das
outsb
loope
in
cmp
pop
sub
pop
jns
cmp
insl
shl
insl
and
xor
push
repz
mov
ss
jno
inc
sti
sub
push
test
mov
xor
or
lods
xchg
jg
lcall
xchg
lods
xchg
dec
lret
idivl
add
xlat
push
mov
pop
loopne
add
sub
imul
cmpsb
or
xchg
hlt
add
call
fistps
imul
mov
aam
imul
dec
mov
jnp
xchg
cmpsb
mov
stos
ret
je
in
cmpsb
lods
inc
sbb
add
lods
xchg
mov
adc
dec
xorl
lret
push
pop
outsb
xchg
shl
outsl
jns
out
mov
aad
stc
mov
sbb
dec
xlat
sbb
xchg
les
std
mov
repz
gs
mov
or
inc
push
and
popa
pusha
inc
xchg
pop
test
jnp
xchg
pop
cld
mov
mov
mov
add
inc
pop
rol
fcomp
test
fimull
mov
adcl
stos
pop
in
or
sbb
arpl
hlt
insb
lahf
test
das
jmp
mov
addr16
mov
cmp
or
push
cmp
enter
mov
daa
xchg
fidivs
andl
push
cltd
sbb
aas
mov
mov
inc
adc
push
mov
aam
hlt
scas
scas
sub
pop
push
sub
fnstcw
inc
imul
mov
push
mov
cmp
lret
pop
mov
loop
call
cmc
out
or
insb
jmp
xor
and
loopne
xlat
insl
in
in
test
inc
repz
lret
mov
fs
mov
testb
icebp
aam
pop
push
rclb
mov
mov
ret
in
xor
mov
jb
shlb
in
lock
jg
jns
addr16
xchg
cmpsl
inc
cwtl
fbstp
push
jge
jae
icebp
in
sbb
adc
lret
sbb
insb
pop
out
mov
sar
pop
mov
insl
ja
inc
adc
jge
xchg
and
cmp
in
mov
in
rcr
addr16
jp
add
call
xchg
mov
mov
jle
sub
dec
push
mov
xchg
add
mov
mov
mov
arpl
mov
aas
stos
add
stos
ja
mov
push
fs
push
pushf
in
mov
sbb
loop
leave
adc
mov
ljmp
je
jl
cwtl
int3
popf
xor
pop
mov
sbb
inc
or
push
sahf
xorb
cs
dec
test
mov
mov
mov
push
test
mov
mov
mov
mov
add
cwtl
es
fwait
lock
inc
pop
mov
shrl
inc
fstps
test
xchg
fildl
mov
jg
das
adc
dec
int3
xor
mov
aam
inc
push
scas
mov
loop
xchg
inc
dec
fisubl
rorb
sub
aas
fs
aas
int
lds
xchg
jb
adc
dec
out
cmpl
dec
and
daa
lods
mov
sub
nop
sbb
pop
mov
push
sub
loopne
cmp
xchg
sub
rolb
or
fs
lea
push
cmp
push
test
jbe
lret
icebp
or
mov
inc
cld
insb
add
xchg
pop
andb
or
bound
call
jecxz
pusha
adc
fidivrl
popa
lret
mov
sub
inc
fucomp
dec
and
sbb
push
add
sbb
lret
mov
mov
pop
addr16
int
fidivrs
mov
in
inc
fstp
in
or
jne
mov
dec
loope
xor
loope
out
out
sub
lret
call
xlat
outsb
push
push
test
adc
inc
sbb
ds
add
sbb
push
call
fwait
xor
xchg
cmp
add
inc
leave
jle
jl
xchg
cli
rclb
and
pusha
xor
lcall
mov
jg
dec
movsb
mov
push
in
dec
ljmp
aad
inc
inc
out
movb
inc
fisubs
dec
lds
bound
gs
pop
movsl
aam
pusha
push
xchg
scas
hlt
cltd
outsl
rcl
mov
cmc
ja
push
xchg
sub
sub
adc
fnstenv
fdivs
lret
dec
dec
cmpsl
ds
mov
dec
or
xlat
outsb
popf
xor
fcoml
mov
or
inc
std
push
cmpsl
mov
or
jl
pop
jnp
ljmp
sbb
sbb
xchg
xchg
mov
fwait
mov
ds
add
jl
xchg
sub
cmp
out
pusha
jecxz
movsl
jmp
in
xchg
and
cwtl
cmp
js
cmpsb
int
push
inc
movsb
fdivr
pusha
int3
dec
push
mov
sub
or
pop
test
jae
pop
fcom
mov
popa
scas
cmp
mov
or
mov
fwait
pop
lret
lret
add
cmp
scas
adc
or
mov
pop
jo
dec
pop
sarl
and
xchg
dec
xchg
sub
push
jbe
sub
and
movsl
cwtl
inc
inc
subb
mov
outsw
and
mov
rcl
inc
in
shr
jmp
loop
mov
cmp
cmp
mov
std
xor
xchg
inc
push
sub
xor
cmp
xor
mov
ja
iret
and
jmp
out
sahf
std
pop
jecxz
fcmovne
sub
pop
into
xor
xchg
int
mov
cmp
popf
mov
cmp
aaa
lock
push
pop
imul
mov
mov
test
pop
inc
sbb
pop
add
mov
cmp
shr
lret
xchg
outsl
adc
rcrb
mov
test
cmp
adc
xchg
sub
jno
or
enter
in
mov
fisttpl
dec
loope
mov
fwait
pop
push
push
cmp
movsl
cmp
subb
jp
pushf
in
xchg
subb
jno,pn
sub
inc
jbe
cmp
mov
les
sarb
shrb
cmp
inc
inc
xchg
imul
jno
sub
pop
les
lds
or
bound
rcll
hlt
push
dec
mov
xchg
stos
mov
jmp
jle
push
fcomps
or
ss
push
xchg
inc
testl
cmc
cmpsb
xchg
dec
adc
imull
sar
mov
int
cs
fnsave
add
fwait
repz
daa
mov
lds
fcmovne
inc
add
mov
rorb
test
test
addr16
lods
setl
pusha
not
pop
jnp
sbb
jle
push
push
pop
jne
sub
xchg
clc
popl
frstor
popa
sub
sbb
xchg
pop
rclb
mov
ret
add
jbe
inc
movb
push
push
lcall
lret
push
inc
mov
jne
insb
sbb
push
sbb
adc
push
addb
data16
cmp
inc
dec
push
jl
jae
das
push
pop
rcrb
xchg
pop
lret
xchg
jg
mov
xchg
repnz
imul
add
rcr
sbb
hlt
ss
in
stos
movsb
fmuls
mov
outsl
adc
aad
fldenv
cmp
pop
xor
dec
nop
frstor
scas
loop
pop
sbb
xor
mov
lret
jnp
fwait
aad
movsl
mov
push
imul
push
add
stos
inc
dec
test
push
scas
in
int
sti
js
mov
fisttpll
add
mov
inc
cld
gs
xor
into
xor
ja
lods
out
push
lret
push
enter
jb
xlat
cmp
jp
push
decb
pop
xchg
mov
jbe
aam
lret
or
adc
cmp
cmp
push
imul
in
inc
xor
decb
inc
ljmp
stc
int3
dec
mov
iret
repnz
movsb
adc
out
cs
mov
mov
hlt
or
inc
test
outsb
add
ret
push
mov
jg
in
inc
dec
mov
lret
sbb
insl
dec
or
ljmp
push
outsl
arpl
push
mov
jle
fistps
repz
adc
jmp
ret
push
pushf
push
hlt
outsb
ljmp
mov
cli
lahf
shlb
cli
repnz
cmpl
loopne
mov
lods
test
lea
js
push
leave
sub
jns
popa
and
inc
fsubrp
pop
sub
mov
test
jbe
sbb
std
push
dec
stos
jle
jg
notb
ljmp
xor
lock
lret
setle
js
sahf
test
movsl
cmpsb
outsl
push
sbb
sub
std
cmp
xchg
push
std
cli
mov
mov
sahf
pop
outsb
inc
sahf
shrl
imul
iret
and
shld
sbb
or
jp
xor
dec
loop
outsb
mov
push
arpl
jbe
mov
sarb
popf
push
dec
int3
mov
jns
xor
int3
stc
or
jns
xchg
xchg
jbe
cmp
adc
into
xchg
ret
add
adc
add
sti
mov
mov
je
fidivs
push
push
mov
xor
pop
sbbl
shll
inc
push
mov
pusha
push
or
dec
in
test
push
call
jb
outsl
cli
pop
adc
xchg
movsb
addl
inc
xchg
and
lret
jg
loopne
jmp
sbb
dec
shll
sub
call
lahf
sahf
add
pop
sub
inc
iret
in
cmp
nop
cmp
adc
mov
mov
cmp
sbb
mov
mov
sbb
lods
and
mov
mov
pop
imul
in
ja
outsl
cmpsl
push
jb
es
arpl
scas
inc
dec
cmc
adc
loop
lret
shrl
push
cltd
xor
fidivl
mov
lods
sub
mov
xchg
popf
push
mov
in
lret
mov
iret
data16
fmulp
hlt
in
push
stos
sbb
jb
cld
xchg
dec
mov
fnstsw
inc
fnstsw
add
mov
xlat
add
loop
out
cmp
push
pop
es
cmp
in
sbbl
sub
mov
ss
hlt
mov
and
and
dec
movsb
lods
rorb
push
stc
mov
mov
cli
mov
ret
or
pop
pop
std
pop
mov
mov
push
or
popa
mov
or
ret
sbb
popa
mov
pop
jnp
js
inc
mov
push
xor
call
and
xchg
fisubrs
dec
aas
cli
pop
and
sub
mov
mov
stos
out
movsb
cmc
push
mov
ficoml
jge
and
js
popfw
xor
ja
xor
cmp
test
rcl
or
pop
hlt
flds
push
popf
pop
sbb
xchg
lahf
mov
repnz
mov
cmc
mov
cwtl
aas
in
xchg
jg
fwait
mov
je
sbb
sahf
int3
arpl
push
adc
or
cmpsb
imul
fmul
in
mov
sub
jo
fcompl
push
pop
fimull
xor
int
sti
add
sub
sub
add
loopne
mov
jmp
add
pop
xor
sbb
hlt
push
imul
mov
push
pushf
pop
jae
into
or
ljmp
imul
fs
cwtl
inc
push
pop
dec
andb
xchg
add
sub
mov
or
inc
test
xchg
dec
adc
ss
test
push
jmp
fnstenv
mov
leave
ss
or
pop
mov
ljmp
add
aaa
subl
mov
cli
bound
adc
arpl
jmp
cwtl
adc
push
jmp
pop
out
ja
std
repnz
mov
adc
pop
out
xor
or
test
repnz
fsubr
test
addl
adc
popl
mov
addr16
push
out
fs
repz
loopne
into
adc
jb
test
in
popl
dec
hlt
mov
out
or
loop
mov
jp
cwtl
cmp
sbbb
daa
xchg
xorb
cmp
inc
mov
pop
jnp
dec
sub
cmc
cmp
inc
xchg
adc
xor
mov
lds
fwait
sbb
mov
push
mov
fmull
ficompl
pop
lret
add
ljmp
subb
mov
les
xor
push
push
jp
adc
aam
insb
xchg
sti
pop
sub
dec
addr16
jge
mov
mov
dec
mov
leave
sbb
mov
jmp
mov
mov
mov
pop
fsts
pop
cwtl
and
mov
rol
out
sub
dec
pop
hlt
mov
out
aam
lock
addr16
adc
insl
dec
sub
imul
insl
mov
imul
push
mov
fcmovne
xorl
xchg
outsb
nop
pop
pop
in
inc
fcmovnbe
jp
es
faddl
pusha
mov
mov
pop
or
jmp
mov
mov
add
repz
mov
and
mov
aad
enter
jge
jns
dec
mov
lret
mov
xchg
mov
cmc
rorb
or
cmp
das
sub
dec
sbb
filds
xor
xchg
cmpsb
sbb
addr16
rcll
xor
push
mov
dec
dec
aaa
xor
les
jmp
popa
mov
test
test
in
push
ds
test
push
fimuls
jno
and
rorl
add
jns
jp
cmc
lcall
divb
push
xlat
arpl
mov
sub
rcr
xchg
mov
stos
add
push
scas
jnp
mov
sbb
mov
repnz
cs
push
cmpsl
sbb
pop
insl
loopne
pop
fwait
in
pushf
mov
xchg
stos
pusha
loop
fisttpll
lea
inc
fsubr
sub
and
push
sub
inc
decb
mov
lds
insb
jne
pop
dec
push
mov
cld
sarl
xor
outsb
iret
sbb
ds
and
mov
mov
rorb
lret
or
lret
lahf
jbe
das
xor
push
lods
seta
lahf
scas
xor
loopne
rolb
mov
mov
add
es
fwait
mov
std
pmulhuw
mov
popa
int3
loopne
cli
jns
lock
aaa
bound
stos
add
sbb
jns
cld
adc
mov
sbb
data16
test
xor
rorb
push
or
test
jmp
xchg
sbb
cmp
mov
sar
push
and
cmp
jae
popa
in
add
dec
fsubrp
daa
pop
pop
inc
cli
or
push
inc
lods
jmp
iret
mov
mov
sbb
frstor
dec
sbb
shlb
jmp
adc
push
fnsave
mov
mov
nop
cmpsl
xorl
mov
fists
mov
mov
lds
mov
sub
push
stos
dec
mov
pop
movsl
insb
jb
pop
outsb
xchg
icebp
add
arpl
cli
addr16
cwtl
adc
ja
fstpl
inc
ss
dec
loop
inc
adc
pop
ret
cld
sbb
daa
jmp
cltd
xor
into
push
repnz
inc
mov
jmp
mov
add
mov
out
xor
in
mov
subl
das
xchg
mov
inc
dec
cmpsb
cmp
fsubl
pop
mov
add
xor
pop
insl
out
jnp
int
mov
rclb
jo
das
push
cmp
icebp
inc
mov
jmp
into
or
js
or
pop
mov
lcall
in
fs
test
or
xor
pop
in
cld
movsl
das
jmp
cmp
push
andl
cmpsl
mov
adc
cli
clc
jno
sub
mov
cmpsl
fisubrl
movsl
iret
xorl
jecxz
adc
mov
jbe
pop
andb
cmp
addr16
lock
and
and
inc
repz
bound
or
xor
add
and
dec
movsb
dec
arpl
sbb
test
xchg
xor
test
xchg
test
mov
lock
fs
pusha
cld
sub
sti
sub
adc
imul
ret
push
cmp
dec
adc
loop
sub
cld
push
in
dec
cs
add
or
jbe
in
mov
jp
cmp
sbb
mov
rcrl
mov
mov
add
push
or
cwtl
clc
out
sbb
or
inc
mov
pop
ljmp
xlat
aam
int
sbb
jne
sbb
and
out
cld
pop
jmp
push
and
jg
pop
sbb
inc
push
ss
push
insb
mov
jecxz
jg
fnstenv
cltd
enter
mov
popa
lcall
and
mov
fwait
sbb
das
ljmp
fs
in
push
dec
jo
test
negl
aad
andl
jle
iret
loop
mov
jns
loop
jl
fcom
push
adc
fdivrs
mov
dec
adc
mov
fidivs
mov
jmp
xor
dec
es
and
mov
jae
hlt
or
push
adc
fpatan
das
hlt
enter
addr16
loop
bound
push
sub
dec
xchg
popf
les
cmp
in
adc
mov
sbbb
push
mov
lcall
ret
loopne
jp
or
xlat
dec
pop
outsl
or
xchg
inc
inc
mov
jne
and
or
mov
xchg
sti
andb
je
outsl
xchg
arpl
xchg
hlt
add
sbb
adc
pop
ror
imul
imul
or
adc
rcl
out
sub
scas
xor
xchg
xor
fdivrp
mov
jl
mov
mov
test
inc
pop
inc
sti
xchg
dec
movsl
adc
shll
sbb
test
push
mov
sbb
incl
inc
call
xchg
insl
mov
aaa
movsl
add
das
subb
jno
add
mov
sarl
fistps
adc
dec
mov
xchg
pop
mov
insl
sub
sub
dec
inc
add
mov
cs
addr16
mov
pop
adc
repnz
cmc
leave
out
iret
mov
xchg
add
mov
sbb
rcrl
in
cmp
pop
or
fistps
xor
dec
cmc
sti
inc
addr16
sbb
inc
push
cmp
nop
data16
fnsave
js
jnp
push
ljmp
repnz
lea
shll
dec
sub
out
dec
inc
add
mov
sbb
nop
xchg
add
add
cmp
cltd
inc
adc
and
sub
mov
adc
mov
cltd
jl
or
adc
into
push
out
push
js
loop
lods
xchg
repnz
xchg
sbb
js,pt
or
mov
and
push
or
imul
push
lock
xchg
mov
mov
mov
jle
inc
rcrl
mov
and
mov
popl
scas
mov
nop
out
push
xor
mov
icebp
das
cmp
or
inc
pop
rolb
jb
insb
xor
popf
and
sbb
dec
in
push
rcr
pop
enter
push
xchg
mov
dec
loopne
xlat
sbb
mov
inc
out
xchg
sub
and
push
push
and
xchg
stos
movsl
inc
fisttpll
shr
dec
push
adc
repnz
jecxz
movsl
test
pop
hlt
in
xchg
gs
mov
cmp
jno
fsubs
mov
pushf
pop
aas
dec
pop
flds
and
xchg
sbb
sub
or
dec
mov
push
popa
cwtl
mov
subb
pop
add
pop
loopne
rolb
shrl
cmp
imul
fnstsw
pextrw
push
pop
movsl
pushf
aad
cmp
inc
push
divl
pop
sub
xor
outsl
dec
sbb
ja,pt
popa
jmp
and
cmp
inc
pop
jae
sub
pop
xchg
es
cs
not
add
add
sahf
movsb
jo
call
pop
xchg
sub
ret
jnp
pop
push
or
jl
adc
ja
aaa
xor
outsl
in
arpl
and
pop
in
xchg
fldl2t
rolb
hlt
adc
push
pop
imul
addr16
ja
daa
inc
popa
mov
cmpsl
lods
dec
mov
sbbl
sub
movsl
mov
mov
ds
dec
mov
rol
fucomip
dec
dec
xchg
testb
ds
cmp
lods
xchg
lea
jle
mov
mov
push
int3
sub
pop
add
add
cmp
daa
pop
lahf
pop
push
add
mov
push
inc
add
or
push
dec
fsub
xchg
add
cltd
adc
push
insb
es
pop
adc
ja
call
and
dec
es
test
ss
fldcw
decl
retw
cmc
mov
xchg
mov
add
dec
jl
jmp
inc
xchg
jo
nop
fwait
shl
or
add
mov
or
insl
es
sbb
inc
inc
divb
and
inc
jb
xchg
push
jns
aas
imul
out
test
mov
or
pop
jg
pop
scas
xor
inc
jnp
ss
call
int3
cmpsb
test
sbb
movsl
icebp
outsl
daa
inc
add
jns
pop
inc
ficoml
mov
sub
or
sub
mov
inc
in
pop
ds
mov
movl
inc
push
inc
jp
inc
out
fbstp
fcmovb
ror
sub
mov
insb
jle
pop
js
mov
push
mov
lods
sbb
xor
xchg
fdivl
sbb
jns
and
adc
in
sbb
inc
mov
scas
mov
pop
xor
adc
psllq
and
call
testl
insl
mov
loopne
addr16
add
lcall
mov
mov
mov
pop
insb
lds
aad
mov
ds
dec
pop
ss
es
xor
jnp
or
rolb
aad
add
bound
movsb
andb
push
and
stos
leave
add
fisubrl
daa
nop
in
dec
pop
out
test
xlat
pop
dec
jg
adc
and
bound
xchg
inc
fwait
dec
adc
cmp
and
adc
mov
das
add
aaa
xchg
sbb
adc
push
jmp
fidivrl
or
push
jae
cwtl
pop
out
shrl
sub
mov
cvttps2pi
mov
dec
mov
mov
aas
enter
test
cmp
sbb
sbb
imul
jns
std
pusha
mov
stos
jnp
das
push
adc
push
add
and
mov
cmc
push
mov
push
pop
xchg
mov
mov
lods
xor
cli
cmpb
imull
jge
cmpsl
mov
aam
jl
pop
pop
sub
and
mov
cmp
cmove
lock
jecxz
push
cmp
shlb
and
pop
mov
mov
inc
jge
sub
jnp
sbb
pop
nop
jae
dec
adc
push
nop
shll
rcrb
push
xor
imul
sbb
push
mov
mov
jecxz
aad
mov
add
aas
rcrl
inc
cli
mov
lock
lahf
add
lds
es
out
pop
shrb
aas
xchg
shr
fcomi
cmp
mov
xchg
daa
repz
or
std
or
cmc
stc
adc
sub
cmp
lods
dec
inc
xor
movsb
jae
and
adc
xor
cmp
addb
push
lods
jo
je
popa
xchg
jae
es
mov
inc
lods
push
push
mov
dec
lret
dec
sti
nop
and
mov
lcall
cmpsb
jb
in
adc
or
filds
pop
inc
pop
mov
out
cmpsl
jge
lock
push
mov
push
or
cmpsl
cmp
test
js
cs
xor
and
insb
fistps
iret
dec
add
mov
movsb
dec
aaa
lock
rclb
push
orb
fdiv
or
cli
sbb
pop
lahf
jg
push
mov
das
les
dec
dec
dec
hlt
daa
xor
aaa
or
je
rorl
cmp
ljmp
push
in
cmp
sbb
stos
out
lea
push
out
cmc
outsb
pop
leave
jnp
ljmp
rorb
icebp
movsb
xchg
test
ret
repz
adc
ss
xor
xchg
aaa
push
mov
add
xorb
sub
es
xchg
out
jns
stos
cmp
lds
add
std
ss
in
push
and
jg
pusha
testl
and
mov
adc
ret
jmp
lcall
and
imul
aam
clc
cmpsl
sbb
cmc
mov
sbb
inc
xchg
loop
shlb
fnstcw
pop
loopne
mov
sahf
dec
fimuls
data16
xchg
sub
push
mov
mov
dec
xor
cs
mov
hlt
xor
xchg
fsubs
jle
mov
das
xor
inc
mov
movsl
ljmp
ja
lcall
and
call
and
pop
fisubs
inc
and
movsb
pop
mov
dec
dec
insl
mov
pop
mulb
sub
lcall
sarb
repnz
js
xor
or
addr16
add
iret
jnp
sub
fcomi
mov
fidivs
jl
or
inc
jo
mov
or
inc
fsubrs
sbb
dec
es
push
mov
xlat
outsb
add
cmp
push
decb
out
jmp
ds
jbe
pop
cmp
or
insl
sbb
add
jns
rorl
jb
lcall
dec
and
add
lcall
std
out
and
fwait
xor
rclb
fidivs
fdivl
leave
or
jo
inc
rolb
mov
icebp
iret
aas
and
mov
inc
mov
push
orl
pusha
adc
pop
inc
les
mov
jnp
jb
cmp
sub
dec
push
sbb
cmp
xor
adc
cmpsb
jmp
jecxz
cmpl
cmp
mov
aas
pop
mov
icebp
sbb
mov
and
mov
mov
in
fs
imul
notl
pop
imul
stc
stos
add
in
or
and
fstp
enter
push
sarl
push
bound
xchg
test
ja
jmp
js
or
shrl
or
mov
je
ret
ds
ss
add
popa
cli
pop
test
ds
ja
lret
pusha
stos
enter
sub
mov
rcll
push
fcmovnb
call
inc
inc
mov
dec
xorl
gs
fwait
pop
ret
mov
pusha
dec
sarl
xchg
jl
jno
push
mov
add
fdiv
or
sbb
loope
or
fdivs
jl
inc
or
mov
stos
stos
rcrb
adc
lahf
movb
pop
mov
mov
mov
scas
jecxz
sahf
push
or
movsl
loopne
lahf
jecxz
or
popa
xchg
mov
icebp
cmc
mov
imul
int
movsb
test
add
les
mov
repz
sbb
jne
xlat
outsb
push
ja
div
lea
mov
xchg
stos
mov
iret
mov
sbb
jb
jnp
iret
push
cli
push
xor
repnz
xor
adc
scas
call
add
popa
mov
sbb
add
mov
or
add
inc
jb
jbe
test
adc
add
pop
notb
mov
add
cmp
mov
dec
push
jo
daa
daa
mov
mov
subl
adcb
fsts
movsl
pushf
xor
ret
repz
jb
pushf
xor
xlat
rcl
dec
mov
push
call
pusha
xor
adc
push
frstor
jge
adc
xchg
sbb
popa
push
cs
and
sbb
mov
cwtl
gs
inc
orl
mov
mov
push
int
inc
ds
inc
jo
pop
stos
ret
sbb
arpl
ljmp
gs
test
push
cmp
fwait
push
mov
out
les
xor
js
xchg
outsb
aaa
push
mov
pop
insl
repnz
cmp
std
add
dec
dec
repz
in
inc
cmc
adc
addl
call
xchg
sub
jle
cmpsl
movb
lods
xchg
cmp
xchg
jle
jmp
into
cmpl
jge
out
mov
loop
push
rorl
jmp
mov
mov
fwait
push
sbb
cmp
fs
outsl
popa
jbe
sbb
add
rorl
inc
in
test
ret
add
mov
sbb
cmp
sbb
inc
dec
push
pop
scas
dec
mov
gs
andb
cmp
nop
outsb
arpl
hlt
int
lock
xchg
lcall
sub
mov
lcall
pop
jo
push
shlb
subb
or
add
xchg
imul
adc
jmp
and
inc
mov
jg
fs
jno
test
mov
adc
pushf
movsb
int
cltd
xor
addr16
push
inc
pushf
cmp
push
or
dec
pop
xchg
imul
shr
mov
stc
xchg
orl
lock
int3
adc
pop
aad
push
jo
adc
xchg
ret
pop
ret
or
test
mull
push
jmp
ret
out
imul
jle
movb
xchg
das
mov
or
repnz
and
jo
or
scas
mov
add
pop
je
pop
push
ljmp
add
packssdw
mov
mov
notb
ficoms
in
cmpb
stc
test
sub
mov
xor
mov
je
dec
test
dec
divb
jge
icebp
insb
in
pop
call
lods
xchg
int
cmc
pop
shrb
jg
popl
je
mov
adc
aas
popa
pop
mov
int3
pusha
out
push
push
fldcw
push
add
lahf
cmp
sub
mov
fimuls
add
jo
inc
lret
imul
inc
sbb
ret
jle
sbb
imul
ja
les
xor
sub
push
mov
inc
mov
dec
nop
inc
aad
outsl
into
push
arpl
xor
mov
sbb
and
ret
fcoms
xor
sbb
push
sub
call
cmp
xor
add
rorl
std
lret
xchg
mov
push
les
and
cmp
jbe
sub
sbb
mov
xor
das
mov
add
dec
push
cmc
scas
jmp
cld
lahf
ret
mov
sub
xchg
cmp
inc
sub
and
sbb
lds
fnstenv
inc
mov
out
lea
lods
hlt
xor
lock
les
pop
je
icebp
push
cld
lret
cmp
rclb
stc
push
scas
sbb
push
jle
ret
mov
int
es
xchg
inc
ror
or
dec
and
and
mov
insl
rcrl
jecxz
mov
xchg
xchg
pushf
out
fwait
int
sbb
jns
push
pusha
add
or
ja
enter
cs
int3
repz
sub
jecxz
iret
ret
sub
fcmovbe
cmpsb
in
add
jge
clc
sub
fsubrl
int
sub
or
mov
cmp
ja
add
push
outsb
popa
jge
sbb
jae
pop
cltd
pop
out
sysenter
sub
push
stc
mov
idiv
dec
mov
rcr
ss
mov
or
sub
mov
movsb
xor
add
sub
mov
cld
pop
int3
push
es
xchg
mov
pop
addr16
mov
test
in
aas
cmpsb
stc
lods
xchg
jle
and
dec
dec
test
sbb
pusha
in
lea
nop
dec
std
mulb
into
insb
mov
mov
insb
mov
mov
jno
mov
ja
insl
add
fdivrl
xchg
xchg
and
leave
popf
jae
or
sti
ficoml
cwtl
pop
cmp
mov
aaa
mov
sahf
mov
push
insl
cwtl
scas
inc
xorb
mov
sbb
mov
in
mov
in
xchg
pushl
mov
push
sahf
out
lret
fdiv
dec
pop
mov
push
adc
xlat
sbb
jnp
cld
lahf
dec
shr
jge
jno
mov
mov
hlt
mov
and
jle
fistl
addr16
push
int3
lret
cltd
xor
ss
stos
pop
rolb
test
cltd
not
adcl
mov
push
ss
aad
pop
test
mov
cmp
adc
loopne
and
jbe
cmc
mov
shlb
push
inc
lret
fwait
rcrl
icebp
inc
push
les
xchg
jmp
into
nop
insl
sub
adc
mov
pushf
sahf
jae
adc
adc
jae
sub
repz
jl
test
jno
cmp
push
cmp
fcomps
push
std
mov
loopne
pusha
cmpsb
or
icebp
out
jmp
mov
insb
out
push
subl
jg
add
shrl
push
sub
mov
add
loop
call
xor
push
out
sti
jb
xor
ja
shrl
sub
je
jne
jecxz
inc
pop
jnp
cmp
mov
cmpl
fsts
mov
cmpsb
out
jmp
dec
or
and
iret
int3
pop
xchg
bound
xchg
xlat
xor
insl
lret
sbb
inc
outsl
sub
or
rorl
pop
std
insb
mov
xchg
pop
test
xchg
imul
jno
cli
movsl
push
loopne
push
pop
outsl
cmp
inc
in
sub
jo
rorb
xchg
loopne
ret
push
or
sub
lods
fldt
rolb
xor
call
sbbl
rcr
lods
mov
xchg
pop
inc
mov
dec
mov
cmp
fstps
cmp
jne
sub
xlat
enter
adc
test
lret
push
notb
mov
mov
test
xor
data16
add
inc
std
cwtl
stos
sub
push
xchg
jno
fs
in
sub
push
jle
shlb
sbb
mov
loop,pt
inc
xchg
mov
loope
fs
leave
jns
push
test
ret
pop
xor
popf
pop
cs
and
mov
aaa
outsl
divl
and
cmp
dec
nop
sub
sbb
insb
int3
andl
inc
and
and
and
or
cli
lahf
out
add
cmp
inc
aad
js
inc
cwtl
popf
xchg
pop
les
or
xor
sti
in
mull
shll
adc
iret
dec
stos
xchg
aad
push
and
cmc
xor
add
aad
mov
fmull
cmp
sahf
pop
int
cld
addb
inc
popa
scas
mov
mov
fdiv
addr16
and
dec
int
sbb
mov
and
aad
push
dec
sahf
add
into
fs
adc
repz
clc
and
cmp
imul
push
and
jno
and
nop
and
fwait
jle
pop
outsl
or
jmp
xchg
sub
push
je
mov
test
fsubrs
mov
fwait
xchg
jmp
xor
inc
inc
sub
int3
xor
bound
push
dec
pop
in
outsl
jecxz
lea
sbbb
add
loop
pop
aaa
xchg
or
in
pusha
out
pop
mov
sub
pop
in
and
dec
sbbb
jp
xor
inc
ss
jl
cltd
push
int3
lret
les
decb
ss
adc
xchg
dec
or
loopne
and
xor
jno
sbb
lods
mov
push
or
jns
jnp
and
fiadds
fildl
scas
inc
or
add
or
test
pop
xor
imul
ds
fnsave
adc
or
sub
push
mov
dec
pop
add
cmp
cmp
xchg
sti
fs
hlt
loop
and
and
cmpb
scas
pop
xor
inc
nop
or
add
jbe
add
xchg
shlb
adc
aaa
arpl
or
in
in
sub
pusha
mov
rol
pop
push
repz
ss
pop
sbb
test
out
lods
lea
ja
xor
sub
sbb
sbb
dec
pop
clc
jns
notb
in
lods
mov
or
sub
adcb
call
add
sub
es
dec
cld
and
clc
xchg
pop
xchg
xor
xchg
mov
add
arpl
shll
test
adc
or
out
fisttpll
mov
push
fs
inc
push
add
mov
stos
outsb
and
push
mov
jle
pusha
ja
rcrl
jb
adc
sub
xchg
jge
cltd
cs
clc
push
lods
sub
outsb
scas
mov
scas
jb
das
cmp
jae
sub
in
mov
fldt
std
stos
pop
cmpsb
cmp
cmpsl
adc
out
test
lret
pop
ljmp
fildl
xor
ret
sbbl
sbbl
lock
jno
inc
mov
ror
adc
mov
fdivrl
fwait
jb
mov
leave
das
adc
push
xchg
into
loop
push
sbb
nop
adc
sub
sub
mov
imul
and
je
jp
mov
in
dec
test
insl
or
xor
out
call
aad
leave
pusha
addb
filds
ret
adcb
jne
les
rolb
add
mov
test
and
dec
ljmp
adc
dec
cmp
out
and
mov
jo
int3
mov
hlt
and
lcall
shl
pop
or
pop
xor
insl
xchg
sub
ss
das
sarb
popa
xchg
jge
jns
fstpl
dec
push
sub
cmpsb
lea
scas
push
mov
push
aas
sbb
je
jle
xlat
push
xchg
jnp
or
adc
imul
xchg
pop
pop
fxch
mov
mov
fnstenv
mov
popf
sub
rcll
cwtl
push
aad
sub
insb
cwtl
inc
jae
lock
arpl
adc
push
inc
stc
push
jmp
int3
pop
xorl
leave
mov
fsts
frstor
push
adc
lods
pop
repnz
int
sub
call
mov
xor
sub
test
push
or
add
rcrb
aas
push
lds
imul
jl
push
test
pop
pop
mov
mov
test
inc
jge
sub
or
pop
cmp
mov
dec
fwait
sub
popf
push
cltd
or
leave
jno
mov
push
or
scas
pop
sub
jle
cmp
adc
scas
nop
mov
xor
shl
iret
pop
stc
sub
or
or
rolb
mov
in
imul
xchg
sbb
mov
lret
mov
test
push
sub
pushf
lahf
ficomps
xchg
jae
sub
sbb
push
das
jno
je
cmp
fiaddl
leave
and
out
push
stos
xchg
push
jb
sub
jmp
int3
sti
ja
push
mov
jl
mov
stos
jp
lock
xor
mov
inc
loope
aas
out
mov
das
ja
and
dec
sbb
imul
iret
and
jmp
insb
xor
inc
inc
push
mov
jno
imul
dec
add
xchg
dec
add
sub
lahf
push
sbb
leave
pop
push
in
aas
xchg
fdivl
cmp
rcll
lods
rclb
scas
inc
mov
lods
cli
movsb
aad
roll
push
lea
or
fnstcw
cmpsb
pop
leave
push
dec
fldt
out
pop
fsub
js
les
xlat
sbb
mov
or
xchg
xchg
aam
adc
jg
inc
adc
out
and
fldenv
pusha
xor
xor
dec
fs
repz
addr16
xchg
js
mov
mov
jns
jp
aad
sub
xchg
sbb
xor
mov
les
sbb
adc
aaa
gs
pop
xor
xchg
js
in
cmpsb
lock
and
xchg
pop
rcr
mov
clc
xchg
mov
dec
inc
loop
lret
or
cmp
xchg
js
cmp
in
dec
pop
cmpsl
out
pop
cmc
sub
data16
xchg
imul
mov
mov
mov
insl
xorb
daa
mov
cmpsb
sbb
test
insb
lret
shll
xlat
in
out
push
mov
ljmp
jne
in
outsb
fbld
sbb
cmpsb
lret
leave
test
shll
xchg
stos
inc
mov
mov
sti
dec
cli
inc
test
adc
test
fldenv
sbb
das
stos
cmp
pop
jecxz
test
mov
mov
adcb
xor
imul
adc
xchg
insb
inc
test
js
fbld
push
pop
ljmp
clc
jle
insb
ror
fwait
rol
inc
loop
js
dec
mov
lock
inc
inc
ficomps
ss
push
pushf
xor
fadds
and
mov
icebp
or
loope
aas
pop
inc
andl
outsb
aas
into
les
mov
sahf
mov
or
out
cli
push
push
nop
getsec
inc
ficompl
jns
dec
mov
sbb
dec
pop
out
popf
stos
jmp
mov
inc
inc
jbe
ss
mov
cltd
pusha
ljmp
add
gs
popa
mov
inc
movsl
push
dec
push
stc
popf
fldenv
movsb
std
aaa
popf
scas
push
divb
ror
xchg
add
cli
popf
cwtl
scas
aad
test
xor
push
jmp
sbb
cs
popf
jae
push
inc
pusha
fstpt
sub
sarb
add
adc
clc
adc
jg
loope
daa
adc
add
cmp
pop
sub
leave
sub
imul
and
jns
aam
push
inc
jp
mov
xor
jne
test
lcall
jecxz
mov
sarb
addr16
rclb
enter
pop
ljmp
out
test
lock
loopne
adc
xorb
popf
xor
testb
jno
icebp
adc
xchg
out
fnstsw
lock
jnp
repnz
hlt
mov
pop
out
fisubs
and
mov
idivb
shll
xor
iret
mov
andl
mov
fwait
lods
mov
fists
shrl
pop
mov
xchg
xchg
mov
aad
lods
mov
or
into
jg
xchg
call
notl
es
pop
sbb
hlt
pusha
cltd
cmp
subb
cmc
add
sub
notl
movsl
inc
add
inc
push
inc
in
lock
insb
repnz
nop
add
ss
push
out
stos
lock
addr16
adc
jg
push
push
sbb
jnp
outsl
mov
cmpsb
xchg
sar
push
mov
cmp
mov
inc
mov
dec
lods
inc
sbb
jns
lcall
enter
mov
xchg
adc
jo
mov
loope
xor
aas
out
push
sbb
fucom
jnp
inc
dec
add
or
jg
rorl
jecxz
jbe
stos
lcall
nop
xchg
ja
jnp
or
push
mov
incl
cmpsl
or
jmp
iret
cld
xchg
js
and
cmp
mov
mov
push
lcall
cmp
lret
jne
xchg
cli
jne
sub
movsb
and
icebp
inc
and
xorb
movsb
mov
test
jbe
xor
fnstcw
lret
popf
add
add
repz
mov
mov
mov
lock
add
nop
or
mov
mov
mov
xor
mov
dec
and
aaa
fidivrl
add
test
sbbl
adc
iret
pop
sbb
pop
lret
in
sbb
jb
cmp
popa
fucomp
xchg
and
inc
or
adc
dec
movlhps
cmpsb
stos
xchg
std
nop
xchg
inc
fdivl
jg
adc
ret
mov
cmc
mov
test
pop
ljmp
and
jb
jge
ss
cvtdq2ps
push
sub
ljmp
mov
testb
and
pushf
scas
mov
je
mov
adc
fcomip
and
push
push
negl
sbb
add
push
xor
mov
out
int
inc
call
and
mov
insb
and
mov
jl
test
popf
pop
inc
das
xchg
mov
cmp
ror
loope
aaa
aas
insb
mov
popf
pusha
mov
dec
das
mov
mov
inc
lahf
es
jno
call
imul
mov
add
gs
mov
filds
jp
movsl
xor
in
mov
adc
sub
cwtl
popa
xchg
movsb
push
in
cwtl
dec
fs
pop
fcoms
jge
jno
mov
mov
das
scas
inc
gs
and
movsl
fnsave
jge
xor
add
dec
rcrb
jecxz
icebp
or
add
push
shlb
mov
bnd
mov
sub
mov
scas
jmp
or
push
mov
ret
repnz
mov
jp
cmp
movzbl
pushf
cmp
flds
pop
cld
xchg
mov
pusha
xor
dec
adc
mov
xchg
loop
lods
and
mov
fsts
mov
mov
lret
pop
icebp
mov
cmpsl
in
movsl
sub
test
in
out
sbb
xorl
or
add
frstor
sbb
xor
push
sub
fcoml
xchg
and
icebp
add
inc
mov
scas
mov
fidivs
cltd
sub
sub
stc
in
and
dec
outsl
es
adc
fwait
xor
sub
push
jnp
add
mov
scas
das
imul
das
mov
and
xlat
insb
int3
cmp
fildll
inc
call
or
pop
xchg
sub
in
pop
dec
std
xchg
jae
push
imul
or
xchg
mov
push
in
or
out
xchg
mov
jo
xchg
fwait
jg
std
mov
and
cmp
ret
lds
or
dec
rorl
mov
dec
ds
sub
pop
pop
lcall
outsl
xor
in
repnz
push
push
xchg
lcall
pop
mov
mov
lods
adc
cmp
jg
out
sub
repz
sbb
test
add
nop
adc
mov
mov
push
mov
dec
mov
xchg
xlat
loope
insl
adc
sbb
adcb
lods
js
jno
add
sbb
sub
enter
into
sbb
out
loopne
jb
lea
sbb
cmp
push
or
iret
sbb
xchg
jl
dec
aam
jecxz
mov
out
dec
lds
cmpsb
ret
dec
dec
add
incl
sbb
add
sub
add
lods
or
adc
cltd
shrl
cs
dec
jmp
notb
mov
test
pop
repnz
add
sub
jecxz
sub
push
outsl
add
jmp
fildl
cwtl
pop
jae,pt
out
pop
pop
jle
xor
cmc
mov
sbb
push
loopne
int3
mov
imul
xchg
push
dec
push
inc
jmp
fiaddl
lret
popf
movsb
xor
sub
inc
pop
sbbb
in
dec
movsb
adc
mov
dec
fsubrl
jae
enter
ret
pop
and
lds
mov
fcoml
dec
loope
repz
int3
mov
enter
xchg
sub
pop
stos
xchg
inc
xorb
and
mov
xor
pop
cmc
movsb
cmp
aad
gs
shlb
test
mov
jp
cmp
ret
pop
imul
add
mov
icebp
push
or
rcll
pop
xchg
mov
pop
add
mov
sub
or
dec
cmp
fwait
dec
idivb
insb
lret
mov
xchg
mov
xor
adc
jge
cmpsb
lods
adc
mov
xor
dec
daa
sahf
mov
cmp
adc
in
pushf
xchg
ljmp
xchg
loop
in
lock
push
push
jmp
daa
stos
in
mov
cmpsb
pop
ja
jge
sbb
dec
mov
in
bound
out
add
push
popf
push
pop
aam
aad
and
and
pop
sub
mov
mov
ss
sub
push
push
mov
sub
sub
ss
mov
mov
inc
pop
mov
adc
mov
data16
icebp
shlb
mov
push
dec
mov
ja
fs
mov
aas
lcall
lds
sub
incb
cltd
movsl
push
mov
and
mov
incl
fisttpl
nop
push
jp
insl
imul
inc
out
push
jl
pop
mov
popa
cmc
cmp
stc
movsb
cs
fnstenv
xor
xchg
or
stc
inc
xchg
faddp
and
fucomi
mov
data16
xor
jl
jnp
or
daa
or
mov
sbb
xor
leave
ja
and
add
test
pop
gs
ret
insl
pushf
push
xchg
sub
cld
push
fsubs
push
popf
sub
push
mov
jnp
sbbl
inc
pop
data16
dec
cmp
inc
fs
push
dec
repnz
inc
inc
adc
cld
cld
jnp
jl
inc
and
ja
test
jmp
mov
mov
mov
imul
adcl
out
test
pop
loopne
mov
imul
inc
hlt
mov
push
or
fistl
cmp
bound
sub
gs
xor
ss
xchg
ret
rclb
pusha
arpl
xchg
push
sub
fisttpll
enter
cmpsb
sub
out
add
sub
mov
add
mov
in
xchg
daa
daa
int3
and
scas
jae
stos
arpl
sub
mov
je
adc
or
sbb
ja
sbb
aad
lods
xchg
pop
repnz
dec
aas
sub
dec
fadds
sub
daa
push
cwtl
xchg
pop
add
mov
ljmp
jmp
pop
mov
sub
jae
iret
out
outsb
std
jns
nop
aas
fnstenv
xor
pop
fcmove
mov
movsl
xor
iret
dec
xor
repz
ss
jb
scas
dec
sbb
insb
out
ds
or
dec
or
inc
mov
jns
mov
mov
daa
add
mov
in
std
inc
adc
jae
adc
cs
and
xor
out
xchg
xor
dec
jecxz
jl
in
dec
xchg
scas
xchg
push
int
push
andb
pop
orb
movsb
or
xor
in
sbb
jae
rcr
xchg
jl
repz
lahf
ret
push
xor
and
dec
arpl
mov
xor
hlt
mov
mov
push
mov
fcomps
in
sbbb
loop
sbb
add
in
xchg
inc
leave
or
mov
xchg
dec
aas
cmpsb
shlb
sub
in
adc
pop
cmp
cmp
adc
push
iret
mov
sub
lds
cmp
inc
lods
cmpsb
mov
int
jmp
jmp
test
pop
imulb
decb
test
movsb
cli
dec
fldcw
fcmovnbe
dec
shll
add
pop
sub
cmpsl
mov
pusha
movsb
mov
pop
cltd
cmp
lret
sbb
mov
fisubs
fimull
pop
cwtl
stos
jge
mov
popa
pop
imul
testb
jl
adc
insl
sub
popa
or
push
dec
xorl
mov
xchg
fimuls
cltd
std
icebp
jle
mov
popf
lods
fwait
push
pop
adc
jecxz
out
cmp
inc
fistpll
jmp
jecxz
loope
cmp
mov
xchg
fmuls
sub
or
dec
xor
je
jg
imul
sub
aas
add
push
enter
sub
pusha
jne
repnz
cmp
and
and
or
lock
mov
fldenv
mov
sub
lret
pop
pop
cli
jne
hlt
and
call
outsl
es
lods
mov
cmp
or
mov
dec
rclb
jmp
in
mov
sub
xlat
cmp
xlat
mov
and
xor
or
insl
xchg
or
xchg
adc
cmpsb
add
add
and
cld
cli
lret
dec
bound
jb
xchg
or
adc
add
mov
lock
and
fsts
inc
push
pop
cmp
jg
shll
pusha
test
cmp
xor
testb
mov
sub
ret
adc
das
pop
add
repz
xor
fcomip
nop
pop
mov
mov
fstpl
sbb
aad
fwait
ror
and
fwait
rcl
cmp
add
outsb
and
stos
rcll
mov
ss
xchg
rol
inc
xor
das
ljmp
mov
adc
mov
ja
aad
flds
cmp
lods
daa
stos
xchg
add
or
adc
mov
pop
fnstsw
inc
sbbb
test
add
mov
leave
xchg
xor
movsl
les
mov
loop
sub
xchg
insb
add
sub
arpl
add
push
imul
stos
xchg
out
aas
loop
xchg
inc
shl
push
jnp
shrl
fwait
mov
xorb
or
lea
jno
mov
push
dec
dec
clc
mov
test
in
and
cmp
je
xchg
mov
xchg
xchg
sub
xchg
and
sbb
xor
test
inc
inc
gs
adc
ret
inc
lods
add
push
ja
push
sti
sub
mov
mov
loopne
mov
lods
or
lds
repz
idivl
pop
jmp
mov
popa
insl
and
jp
int3
fs
je
pusha
pop
cwtl
andl
xor
fstpl
shld
lcall
jmp
shll
enter
inc
int3
push
push
xor
jecxz
je
mov
mov
sbb
dec
lods
sbb
jge
pop
mov
out
push
xchg
push
cmp
add
add
movsl
sbb
add
push
popa
out
shr
das
addr16
xchg
lds
aad
mov
enter
mov
sbb
or
jl
iret
add
fisttps
lods
fistpl
adc
in
mov
sbb
jo
cs
ss
or
aam
and
mov
pop
mov
xor
sti
jmp
inc
lods
negb
addr16
movups
negl
gs
cmp
lret
xadd
mov
jp
xlat
icebp
imul
ja
lods
inc
pop
mov
xchg
jo
jb
lea
fs
push
cwtl
xor
mov
fnsave
mov
mov
xchg
mov
jno
jg
mov
cltd
or
leave
mov
fimuls
xchg
xchg
fbld
iret
xor
ja
cmp
ds
inc
int3
orl
sahf
or
cmp
cmpsb
in
iret
dec
adc
rorl
das
mov
outsb
jno
jns
add
pushl
pop
and
scas
rcrb
out
cmpsb
hlt
outsb
sub
push
xchg
xor
shll
xor
in
xor
inc
fdivrs
lods
pop
imul
sbb
cld
inc
mov
jae
cmc
dec
jns
xor
shlb
subb
xchg
clc
popl
adc
ficoml
xchg
push
sbb
das
shlb
jb
mov
rclb
pushl
push
in
cld
out
ficoms
std
pop
adc
mov
loop
and
jmp
sbb
or
test
cld
inc
loopne
push
or
mov
pop
scas
mov
daa
jp
aam
sbb
cmp
mov
inc
mov
decl
mov
cld
clc
subl
nop
adc
or
js
insl
test
or
xor
adcl
in
rcll
clc
push
arpl
test
xor
je
iret
mov
xlat
mov
js
sbb
cmc
mov
js
gs
sub
add
mov
or
or
adc
loop
shrl
cld
and
hlt
mov
fwait
cmpsl
repz
jb
dec
hlt
cwtl
repnz
xor
in
xchg
pop
sub
jle
and
daa
and
neg
sub
lret
stos
sbb
insl
mov
inc
mov
cmp
push
pop
outsl
cmp
imul
mov
in
cli
inc
fstpt
fldenv
jno
cmp
xchg
xor
data16
pop
sub
xchg
adc
xchg
xchg
adc
clc
and
lods
pushf
mov
dec
sbb
pop
stc
jl
mov
push
adc
sub
mov
imull
pop
cmpsb
sbb
pop
les
sti
nop
dec
rcll
shll
fisubs
mov
inc
subb
push
mov
pop
orl
mov
and
scas
mov
mov
jo
stos
xlat
xchg
xchg
fists
cmp
test
repnz
jo
xor
cmp
loope
movsb
and
xchg
xchg
or
dec
dec
push
je
xchg
scas
inc
cmp
sbbl
cmpsb
mov
lcall
loope
popf
push
adc
and
gs
xchg
lahf
mov
push
cmpsb
loope
pop
ss
push
out
out
sti
sti
shll
mov
push
insl
aam
sub
xchg
data16
add
cmp
movsb
je
es
cltd
imul
pop
lret
mov
push
clc
sahf
adc
or
imul
mov
xor
repnz
into
and
pusha
fcmovnu
rclb
inc
pushl
cmpsl
jb
hlt
movsb
cmp
imul
dec
hlt
test
push
lea
dec
cltd
test
and
enter
decl
test
adc
cmp
jae
bound
test
dec
out
jle
je
cmpsb
jno
mov
lods
adc
mov
cmpsb
scas
stos
mov
push
mov
mov
mov
lods
jmp
push
leave
andl
jge
pop
fmul
int
cltd
dec
cmpsb
mov
push
sub
cmp
adc
xchg
mov
repnz
mov
in
fisubrl
pop
inc
sbb
pop
fcomip
pusha
add
pop
mov
shlb
mov
xor
sbb
push
fldpi
in
or
lods
lds
in
stos
lret
or
lods
test
ficomps
mov
inc
inc
pusha
xor
xor
imul
and
sarl
dec
stos
repz
inc
cmp
stos
jne
ret
push
out
cmp
loop
cmp
fldt
add
sub
xchg
add
pusha
imul
idivb
fildl
inc
stos
fwait
cmp
push
loopne
icebp
int3
sub
sarl
testb
movsb
les
pop
mov
scas
xor
push
push
fistps
sub
popa
loopne
mov
inc
imul
mov
sarb
lds
call
cmp
jl
adc
dec
test
sbb
imul
mov
dec
mov
sti
xchg
sbb
shrb
dec
push
ds
cmpb
sti
sub
pushf
mov
jb
gs
xchg
add
xor
fldt
adc
cltd
mov
rcr
mov
gs
int
ja
cmp
popf
stc
adc
push
aam
or
push
mov
cmp
in
jbe
out
sbb
xor
test
stos
pushf
lret
xchg
push
sarl
xchg
push
dec
stc
push
hlt
push
js
int
pop
or
hlt
mov
mov
mov
cmp
sbb
dec
xchg
test
shlb
xchg
xchg
in
inc
inc
ljmp
or
xor
cmp
adc
mov
andb
stos
aam
or
sbb
dec
cmc
imul
sti
es
adc
movsl
sub
shll
mov
fucomip
fsqrt
xchg
xchg
lods
sbb
and
in
ljmp
dec
adcb
dec
notb
jp
sub
inc
xchg
cmp
and
lahf
sub
add
stos
into
push
jge
xor
into
push
adc
mov
and
mov
sbb
or
pop
fidivrl
push
addr16
test
sbb
jg
inc
loopne
in
icebp
lea
mov
out
mov
or
out
sub
sub
scas
mov
ret
jnp
adc
jge
push
adc
lret
xchg
jg
fwait
mov
lcall
pop
jmp
xor
xchg
dec
and
sahf
or
jno
mov
rol
rorl
imul
insl
add
mov
adc
rorb
mov
pop
xor
jl
mov
adc
sbb
mov
loopne
jge
mov
mov
nop
jno
lds
add
adc
pop
testl
push
out
repnz
fsts
add
xor
and
les
xlat
xchg
out
rcll
loope
or
arpl
iret
push
insl
sbbl
add
xchg
mov
mov
fildl
jg
arpl
jne
pop
pop
stos
xchg
int
add
frstor
xor
lret
cltd
clc
adc
lods
bound
loope
repnz
pop
xchg
jbe
lods
xorb
mov
mov
mov
lods
bsf
mov
jle
xorl
mov
and
xchg
movsl
stos
das
xlat
mov
daa
je
outsb
add
out
mov
dec
jb
subb
mov
push
mov
lds
pop
sbb
push
cmp
sti
aas
rcrl
mov
sbb
add
push
push
data16
mov
shl
pop
sub
pop
filds
mov
push
cmc
push
fisttpll
mov
xlat
mov
sub
ds
lret
xchg
sbb
test
lcall
cmp
sub
clc
xchg
adc
mov
cmp
jno
jg
icebp
aas
hlt
fadd
pop
adcl
sysenter
sub
das
mov
aas
mov
call
test
sti
in
fsts
inc
push
add
xchg
push
ds
pop
lods
mov
lds
das
inc
mov
int
gs
lods
mov
pop
cltd
call
loopne
in
mov
insl
in
test
sub
mov
mov
or
out
dec
iret
dec
pop
rol
mov
dec
sbb
dec
dec
mov
loope
cltd
sbb
mov
mov
push
add
out
mov
std
mov
jne
dec
mov
sarb
gs
mov
fstpl
int3
inc
ds
imul
addr16
push
push
outsb
ss
sbb
mov
push
pushf
and
ss
imul
cmpsb
and
fmull
insb
orl
scas
inc
sbb
xor
cli
clc
ja
movsb
fs
mov
adc
aaa
ljmp
shl
xor
stc
popf
faddl
mov
imul
mov
add
dec
adc
imul
imul
xchg
sub
shrb
dec
add
jge
inc
leave
mov
lcall
add
mov
aas
or
mov
jmp
leave
or
or
pop
cmpsb
sbb
mov
xlat
lea
jno
vmulpd
mov
loope
jbe
sbb
cmpsl
sbb
jbe
lea
cli
test
or
imull
mov
xorb
ljmp
aad
ja
inc
in
fcomps
jmp
mov
mov
les
xchg
fadds
xchg
mov
loope
xchg
andb
add
das
dec
push
call
out
dec
outsl
or
cld
mov
fstl
aam
adcl
adc
aas
lret
sbb
push
inc
fimuls
fldt
gs
dec
fwait
cmp
xor
and
clc
push
leave
je
int
add
sub
xchg
pop
mov
mov
int3
jge
push
imul
inc
fnsave
ret
xchg
fs
push
imul
decl
inc
mov
dec
mov
test
pop
pop
pop
movsb
mov
movsb
mov
xchg
test
movb
push
mov
fdivrs
add
outsl
aaa
mov
xor
enter
and
adc
dec
push
pop
xor
cmpsl
lea
xor
lds
nop
lcall
shlb
jns
sub
stc
shl
fnstenv
aas
jmp
mov
jecxz
xchg
repnz
xlat
cmp
push
rep
xor
inc
dec
add
pop
lea
xchg
mov
sub
insl
pop
sub
xor
ret
hlt
mov
inc
pop
in
bound
dec
dec
cmp
jmp
dec
dec
sub
repz
in
ds
cli
lret
stos
mov
jle
cmp
add
hlt
xchg
outsl
xchg
adc
aam
stos
jmp
les
sub
scas
or
pop
mov
or
inc
and
arpl
or
lods
cltd
in
cltd
or
paddsb
dec
outsl
stos
in
ja
push
cmp
mov
iret
sbb
pop
test
or
adc
push
mov
sbb
push
leave
xlat
imul
rcrl
fnstenv
and
mov
mov
sahf
cld
push
pusha
out
les
aam
or
std
jns
rcrb
fisttpl
mov
ss
imul
jnp
xchg
xchg
andl
leave
in
or
aas
test
aaa
cltd
arpl
data16
jmp
movsb
sub
mov
ja
std
stos
nop
push
int3
mov
mov
push
xor
shl
dec
movmskps
pop
outsb
inc
sarb
sbb
movsb
ja
out
mov
in
scas
sbb
cmp
inc
fstl
or
or
fisubs
outsl
add
insl
jo
or
push
jl
les
or
cld
imul
dec
mov
popa
inc
cltd
sbb
pop
es
inc
cmpsl
or
sti
cmp
repnz
cld
mov
mov
mov
in
call
dec
idivl
pop
fistl
lods
xchg
aad
and
push
or
cmc
fs
lcall
mov
cmp
jb
les
in
xor
pop
cli
cmp
dec
add
mov
bound
addr16
or
test
jle
fstl
or
inc
cmc
add
pop
cwtl
jecxz
enter
ficompl
jae
sahf
dec
data16
fsubrs
add
push
xor
mov
push
cmp
aad
dec
fs
repnz
xchg
pop
mov
outsb
popf
push
xor
aaa
ror
fdivr
and
push
fmul
xchg
pop
rcl
fnsave
add
push
lcall
push
jbe
je
push
popf
jno
xorb
dec
pop
adc
or
mov
mov
jp
mov
lret
pop
dec
repnz
fwait
in
std
mov
ja
cld
sub
rorb
ja
mov
add
movsl
jne
xchg
cmpsl
dec
test
aas
pop
test
xchg
push
pop
adc
and
repz
and
add
push
lds
cmp
sbb
leave
jo
cmp
ss
jnp
add
in
call
adc
test
xchg
outsb
xchg
push
shll
aam
cmpsl
mov
mov
mov
add
imul
test
mov
push
fs
ret
pop
js
gs
in
push
inc
cmpsb
addl
inc
sub
xchg
mov
addl
add
xchg
incl
mov
inc
sbb
sbb
scas
inc
imul
cmpsb
cmp
mov
mov
cmp
stos
or
adc
dec
inc
out
ds
pop
std
push
push
test
or
xor
stc
mov
sub
sub
hlt
cld
jae
cs
dec
adc
sub
scas
mov
cld
dec
out
xor
into
cmpsl
aas
cmp
add
dec
pop
outsl
add
repz
fiadds
insb
jp
fsubp
int
sbb
gs
pop
or
pop
xor
divb
lahf
test
and
push
pop
and
sub
mov
or
div
je
and
push
or
jle
xchg
pop
jo
pop
inc
fisttpl
and
inc
cmp
sbb
adc
insl
outsb
push
in
cmc
out
les
cmc
punpckhbw
pop
cwtl
cmp
leave
test
and
ret
lret
jne
gs
fidivrl
ja
mov
mov
sub
aas
jnp
mov
loop
xor
cmp
mov
mov
adc
aas
sub
mov
iret
add
push
movsb
repnz
ljmp
insb
xor
outsl
add
ja
lea
cwtl
lahf
orl
cmc
xor
scas
lcall
loopne
ficoms
add
and
popf
sbb
movsl
jl
lock
lahf
clc
inc
bound
aas
mov
sbb
test
jge
sub
in
cmc
lcall
inc
push
ficoms
mov
sub
mov
lds
decb
ss
jo
cli
pushf
out
in
jb
pop
mov
push
adc
xor
cmp
xor
mov
mov
dec
in
inc
dec
sub
into
sub
add
sub
or
mov
mov
add
popf
xchg
test
mov
das
push
mov
pop
dec
repnz
pop
imul
pop
stos
lock
repnz
sub
push
lods
sub
cltd
or
iret
mov
clc
dec
hlt
pop
ror
fucomi
std
fsts
fwait
addr16
mov
out
out
push
add
out
sti
movlps
mov
int3
jae
mov
inc
mov
aam
jl
movsl
sub
pop
out
int
je
imul
pop
negb
adc
insl
adc
adc
add
stc
ret
adc
add
inc
fisubs
popf
push
xchg
cmp
aam
sahf
pop
jne
and
lret
fildll
lahf
idivl
fstpl
mov
xor
cwtl
fistps
ljmp
insb
cli
out
jge
int
pop
rcll
fsubs
push
push
xchg
cs
divl
or
push
lahf
push
inc
movsl
lds
aad
push
int3
push
xor
into
pop
mov
ret
hlt
ja
adc
inc
xorl
xor
dec
mov
test
mov
jae
xchg
mov
outsl
ror
inc
mov
sub
xchg
insl
call
es
mov
push
ret
jns
leave
ret
mov
push
jb
icebp
lret
sub
lcall
and
xor
gs
aam
stos
movups
mov
outsb
xor
insb
add
jecxz
xor
mov
sbb
test
pop
lock
lret
jg
fwait
jo
or
loop
inc
sbb
popf
das
jne
push
rcrb
add
aad
ficoms
sub
sub
fidivrs
cwtl
and
sub
mov
lods
push
mov
pop
pop
hlt
mov
hlt
add
aam
cmpsb
cmp
lods
pop
fidivs
add
out
xchg
adc
sub
dec
fldl
decl
jl
nop
add
sub
sub
cmc
loopne
test
jbe
out
test
lret
dec
jne
ret
push
and
jb
je
pop
icebp
mov
ljmp
fsubl
push
dec
jmp
loope
lea
rcr
adc
cmp
inc
add
fsubr
dec
xchg
pop
stc
call
cli
iret
rcr
out
lea
cmp
or
pop
inc
test
lret
idiv
add
jae
pop
push
inc
xchg
inc
pop
arpl
outsb
xchg
pushf
test
into
sub
lods
mov
es
pop
divb
push
cmpsb
xchg
xchg
insl
faddl
loop
lods
pop
dec
mov
pusha
xor
sarb
pop
ror
dec
and
push
icebp
or
add
test
or
insl
mov
xchg
and
popf
stc
outsl
fwait
jmp
movsl
mov
mov
sbb
es
js
or
fwait
xor
dec
inc
xchg
adc
popf
pop
and
das
mov
fdivl
pop
ret
push
push
mov
xchg
shrl
insl
loop
mov
and
mov
inc
pop
mov
cli
cmp
fsubs
xchg
inc
scas
cmp
sub
or
pop
cmp
popf
lods
cmc
out
cmp
mov
bnd
push
xchg
jae
add
xchg
stos
fcmove
inc
out
xchg
js
push
fdivrs
dec
fs
cmp
int3
sbb
mov
pop
inc
cltd
movsl
pop
repz
rolb
test
lods
jbe
cld
fisttps
mov
push
xor
ss
fcomp
out
iret
lock
int3
ljmp
push
shlb
pop
out
pop
jmp
pop
inc
jmp
outsb
test
mov
loopne
jmp
sbb
movsl
cmp
outsl
cltd
pop
sbb
cmp
divb
adc
addr16
mov
jmp
aaa
mov
out
add
orb
outsb
or
pop
and
dec
inc
aam
xchg
sub
jae
fisubs
mov
add
xor
cmpsb
mov
adc
mov
or
rcrb
out
bound
pop
mov
mov
mov
aam
dec
xchg
cmc
jmp
push
mov
pop
test
movb
loope
add
cmpb
pop
repnz
loope
xchg
movsb
das
sbb
sub
mov
xlat
push
addr16
push
adc
cmp
clc
test
lfs
add
jnp
in
sub
popa
testl
sub
and
sub
or
stc
in
fdivl
in
js
and
xchg
leave
and
cmc
js
sbb
repnz
testb
xchg
pop
push
add
daa
cmpsb
lock
add
push
in
cs
dec
arpl
sub
das
mov
in
and
dec
xlat
push
mov
xor
inc
pop
gs
xchg
xor
dec
fs
lcall
cmp
adc
push
mov
xchg
xchg
repnz
icebp
mov
mov
sbb
mov
shll
push
mov
ret
fcoms
call
sub
adc
inc
fld
jo
out
add
cmpl
imul
jg
pop
mov
cmc
data16
movsl
ret
mov
sbb
out
data16
jp
pop
cs
test
andb
adc
push
jge
xor
sbb
mov
mov
lds
xchg
add
repnz
loop
xchg
test
out
cmp
jp
les
subb
es
pop
dec
and
popf
js
fimuls
pop
ljmp
lcall
cwtl
mov
sti
pop
push
mov
sub
mov
and
cltd
and
mov
fsubl
jno
xchg
pop
cmc
xchg
jle
lret
fstps
into
addr16
inc
out
hlt
fsts
push
and
stos
or
dec
iret
es
xor
sbb
andb
scas
imul
and
inc
cli
lret
test
dec
dec
ljmp
lea
in
push
mov
jbe
and
mov
push
sbb
ficompl
les
cmp
jne
lahf
mov
xchg
jp
hlt
xchg
movsl
pop
sbb
jns,pt
enter
add
les
add
cmpsb
andb
xchg
cmpsl
inc
jecxz
mov
in
jns
mov
fs
imull
mov
or
loop
jmp
xor
pop
mov
ret
bound
mov
jmp
nop
sahf
stos
xchg
mov
addr16
fsubl
mov
stc
loop
rcrl
js
sbb
adc
jnp
mov
repnz
and
sahf
sub
and
mov
sub
lds
xlat
in
aam
pop
stc
pop
fwait
inc
std
sub
xor
stos
inc
lret
pop
inc
jecxz
and
and
inc
in
gs
fwait
xchg
cld
jge
cmpsb
imul
dec
jne
aas
inc
sbb
cld
shll
pop
and
mov
cmpsl
out
std
pop
lock
in
int
xchg
movsl
cli
lcall
fwait
lods
sbb
insl
cmpsb
cmp
imul
mov
les
gs
and
xchg
andl
inc
adc
dec
nop
sbb
ds
in
and
pusha
dec
pop
ror
xor
xchg
add
imul
xor
repnz
jo
xchg
push
inc
mov
test
lds
scas
lret
pop
mov
jp
xchg
nop
sbb
inc
or
testb
daa
sub
lods
mov
xor
push
or
jg
enter
mov
mov
mov
jle,pt
cmp
dec
sahf
clc
dec
add
fiaddl
je
xor
popa
push
mov
rorl
jns
pop
cli
xor
jae
dec
jnp
lock
pop
inc
insb
jg
cs
out
push
and
int
add
pop
aad
pop
nop
cmp
jb
push
adc
push
mov
iret
fs
inc
push
addr16
movsb
int
mov
add
push
out
lods
xchg
or
adc
jnp
pop
in
xchg
push
jno
lods
lret
ret
xchg
leave
ret
mov
xchg
xchg
push
aad
push
sbb
dec
pop
fst
pop
rolb
mov
inc
out
xor
pop
clc
inc
aas
jno
mov
cli
mov
xchg
push
popf
leave
test
jne
mov
ljmp
jae
scas
in
or
adc
dec
sarl
in
out
sbb
std
xchg
sbbb
outsl
and
inc
test
and
ja
stc
xchg
aam
jge
xchg
add
dec
dec
out
loop
sti
xchg
aas
sbb
inc
sbb
or
jmp
gs
sbb
or
cmpsb
and
in
cmpsb
in
ja
cs
mov
das
test
mov
jg
xchg
shl
out
inc
movsl
nop
sub
xor
xchg
rcrb
lret
mov
and
lods
cmpsl
xchg
inc
clc
out
fistl
daa
or
lcall
addl
aad
add
lds
lods
mov
jp
lahf
mov
pop
mov
mov
leave
adc
mov
pop
mov
jecxz
inc
lcall
inc
out
push
jg
fidivs
and
dec
pop
out
arpl
lret
adc
cmpsl
mov
dec
xchg
dec
cmp
sub
fidivrl
sub
cwtl
ret
cmp
adc
and
jp
and
jns
ljmp
fldl
ss
lret
mov
mov
push
sbbb
aaa
mov
inc
push
test
and
aas
testb
mov
sbb
jns
es
add
int
pusha
cmp
out
scas
and
mov
push
in
call
pop
jecxz
mov
inc
fcompl
and
dec
cmpsl
lock
out
cmpsb
adc
outsb
inc
daa
loopne
imul
jno
orl
js
cmp
dec
stos
and
adc
jg
jmp
aaa
inc
imul
sub
mov
aaa
daa
iret
ficoml
sub
lods
xor
inc
cli
insl
sbb
mov
cmp
enter
jp
jp
pop
mov
int
test
sub
pop
mov
inc
push
test
pop
enter
push
popf
daa
mov
pop
or
jo
jl
aaa
jl
ss
jle
aad
nop
outsb
fdiv
ja
inc
rorl
lret
mov
adc
jno
enter
pop
sub
stos
ljmp
lods
or
imul
pop
imul
mov
dec
dec
push
adc
mov
loop
andb
ss
xchg
sbb
jbe
cmp
jle
dec
mov
push
pushf
fwait
daa
inc
mov
jp
cltd
frstor
or
nop
std
lods
nop
gs
rcl
leave
mov
ss
sbb
mov
fildll
data16
subl
les
mov
pop
loopne
aam
dec
pusha
sti
imul
push
xchg
or
orl
mov
xchg
sti
pop
lea
out
push
stos
adcb
jmp
aad
inc
inc
push
mov
das
add
push
pushf
mov
dec
imul
fisubrs
daa
cmpsb
pop
xorl
push
cmpsl
lsl
andl
sub
pop
out
jmp
test
sbb
test
dec
or
jle
xor
pushf
pushw
imul
xchg
add
inc
in
ret
iret
loope
or
jmp
sbb
sti
test
imul
adc
mov
mov
jne
imul
mov
xor
pop
popa
push
fildl
cmp
xchg
es
sub
stos
sub
adc
icebp
es
push
mov
clc
bound
stc
andb
xchg
mov
mov
cltd
in
mov
inc
or
add
xor
and
push
push
sub
xchg
xor
dec
or
repnz
sub
push
push
repnz
cmp
mov
stos
mov
jne
jns
xor
shr
repnz
lret
movsb
push
mov
mov
jae
and
hlt
in
adcl
or
in
rorb
mov
stos
jne
icebp
loop
inc
adc
in
inc
mov
loopne
inc
shlb
sub
xchg
xchg
jp
adc
lret
mov
bound
mov
cltd
ss
mov
pop
lock
fisubl
cld
mov
add
jg
and
pop
cmpsl
ds
ret
push
call
es
push
dec
sti
sbb
sub
pop
out
gs
cmc
fistps
mov
out
shrl
xchg
outsb
or
out
mul
outsb
mov
xor
adc
pop
xor
adc
jns
add
mov
das
jmp
inc
jae
jb
loopne
add
nop
daa
stos
into
push
mov
or
push
jp
mov
push
xorb
dec
frstor
mov
mov
sbb
pop
nop
mov
xchg
fs
and
jg
scas
movsl
push
mov
sub
jb
orb
imul
popf
std
movsb
stos
sub
adc
cmp
xor
sbb
add
pop
mov
fwait
lahf
scas
sbbl
fsubl
pop
jmp
mov
xchg
stc
or
ljmp
imul
pop
lock
xor
ja
push
aad
pop
mov
ljmp
sbb
mov
inc
in
fistl
push
es
or
push
nop
mov
dec
jg
insb
loope
aas
pushf
pop
mov
ret
imul
mov
add
out
push
adc
stc
je
mov
out
outsb
vandps
fadd
into
push
loopne
dec
mov
out
xchg
test
lahf
fnstenv
jae
lret
in
mov
xor
pop
push
mov
sbb
mov
dec
and
int
adc
jmp
fs
sahf
scas
cld
xchg
or
or
lcall
dec
push
lcall
push
call
add
inc
fwait
shlb
push
add
fdiv
scas
adc
mov
cmc
jp
inc
xor
inc
cltd
sub
dec
inc
sbb
xchg
adc
arpl
inc
je
dec
imul
add
mov
cmp
inc
mov
dec
sub
adc
dec
inc
rorb
enter
fucomp
pop
xor
mov
pushf
mov
hlt
addr16
popa
pop
push
mov
xchg
mov
add
fwait
cs
mov
iret
xchg
xor
shrl
add
or
sbb
lahf
add
out
fwait
repnz
and
loop
test
mov
popf
xchg
xor
xchg
xor
inc
lds
andb
xchg
and
stos
out
outsb
add
adc
rorb
and
xlat
xor
sub
add
xor
loop
pop
cltd
mov
fldcw
cli
pop
and
xor
data16
les
nop
sub
mov
lcall
insb
cmp
xchg
sub
push
loopne
mov
fnstenv
inc
outsl
outsl
jnp
fiadds
cmp
stc
mov
out
sbb
dec
push
dec
and
adcl
add
jg
mov
sarl
mov
mov
pop
dec
xchg
sub
je
jo
sub
negl
push
or
into
xchg
dec
sbb
cmc
and
stos
mov
mov
int
fs
and
cmpsl
into
mov
add
bound
hlt
dec
ds
ja
das
adc
fldt
mov
xchg
in
xor
bound
push
popf
insb
in
adc
sub
fwait
sti
or
fsubrs
clc
push
jne
jne
mov
mov
jge
dec
in
aaa
push
mov
fmuls
insb
cmp
stc
movsb
or
outsl
rolb
adc
movsl
icebp
jge
repz
mov
jno
mov
mull
insl
test
mov
lret
adc
aaa
imul
outsb
jp
mov
mov
or
sbb
sarl
icebp
test
sbb
sahf
push
test
sti
cmp
and
and
inc
mov
cmc
mov
mov
insb
and
fcomps
dec
mov
mov
push
mov
jo
pop
xchg
mov
sbb
adc
push
aam
mov
mov
mov
pop
jl
jecxz
das
xchg
imul
outsl
idivb
inc
mov
mov
mov
hlt
fwait
sub
lahf
mov
in
jmp
cmp
ljmp
cmp
ret
pop
pop
jno
mov
mov
sahf
sbb
mov
xchg
pop
push
and
sbb
mov
fdivrs
ljmp
and
sbbb
rorb
insl
loop
lahf
mov
shll
imul
mov
adc
into
xor
lods
or
mov
pop
insl
loopne
cli
mov
inc
sub
lahf
push
inc
shll
aaa
in
test
or
pop
fsubr
add
mov
aaa
sbb
ret
pop
add
sti
pop
int
dec
xchg
pop
jbe
sub
mov
or
insl
clc
push
lahf
test
and
lret
jg
push
call
pusha
mov
movsb
je
pop
das
in
into
lcall
negb
jge
cs
dec
repz
lahf
and
out
add
call
das
insl
aad
lods
push
fwait
dec
add
adc
xchg
xor
fisubrl
movsb
in
shrb
out
xchg
iret
mulb
int
mov
imul
ljmp
sbb
xchg
xchg
cltd
mov
cmp
mov
push
inc
jmp
data16
addr16
fidivl
push
push
aad
push
daa
add
insl
xor
sbb
test
iret
data16
daa
adc
xor
jnp
jne
sbb
fadd
iret
sti
jecxz
and
sub
adc
clc
iret
lds
add
adc
cltd
pop
sub
push
pop
xchg
out
mov
push
ror
lret
pop
dec
pop
insb
cmp
int
mov
pop
roll
mov
mov
or
push
mov
and
movsb
cli
sub
pop
movsl
cwtl
fwait
push
aaa
fwait
xchg
jae
outsb
daa
pop
mov
jl
jnp
movsl
mov
sub
lea
insl
loope,pt
or
mov
clc
sub
aad
pop
pop
scas
les
xor
mov
scas
xchg
inc
lock
inc
cs
dec
outsb
pop
inc
sbb
nop
xchg
or
mov
imul
dec
movsl
dec
loope
mov
in
repz
or
pop
push
test
push
and
bswap
mov
sbb
dec
pop
cltd
je
aam
cmc
nop
cmp
outsb
stos
cmpsb
je
adc
pop
filds
inc
fldl
scas
or
cmp
mov
fsubrs
adc
xor
out
sub
fsubl
imul
sub
cmpsb
inc
test
cmp
sti
movsl
loopne
imul
lahf
cld
data16
cwtl
sbb
jp
dec
push
cmp
fs
mov
aad
mov
sti
and
out
push
xchg
shlb
add
fcmovu
mov
test
and
mov
lods
add
test
lret
jecxz
fwait
outsb
push
sbb
loope
xchg
roll
push
or
es
xchg
ja
gs
add
mov
int3
test
fcmovnb
or
push
push
loopne
addl
lea
cmc
inc
cmp
mov
stos
add
loop
shrb
jbe
jge
std
scas
aas
lea
outsb
sbb
mov
and
mov
popf
push
sarb
jns
push
xchg
dec
inc
ja
insb
xor
xchg
or
dec
rcl
mov
xchg
add
mov
cmp
test
andl
ret
cmc
pmaddwd
ss
mov
or
xlat
push
insb
or
movsb
sbb
xor
pop
cmp
es
es
loopne
data16
sbb
addr16
out
lods
or
pop
js
inc
push
js
xor
in
push
hlt
cmp
repnz
mov
int3
fbld
mov
or
cmp
out
mov
pusha
mov
add
jo
js
sbb
xchg
test
mov
clc
pop
xor
and
cmpb
ficompl
cmp
xor
ss
push
jg
pop
cmc
inc
out
mov
repnz
in
nop
daa
pop
dec
js
xlat
repz
clc
sahf
or
and
and
imul
inc
inc
or
popl
lret
sub
dec
cmp
cld
xchg
bound
mov
ds
sub
xor
dec
add
sub
hlt
setnp
mov
inc
dec
mov
stos
xor
fdivs
jns
inc
pop
das
sbbl
cwtl
xor
xchg
test
cmc
in
xchg
int3
push
repz
cmp
jge
dec
imul
adc
mov
fidivrs
mov
and
test
push
out
jns
movl
iret
or
xchg
sbb
sub
out
pop
data16
sbb
pop
leave
cmp
push
faddl
loopne
icebp
aas
aas
in
xchg
test
sbb
or
and
sbb
bound
push
popf
shrl
cld
xorl
xchg
lcall
enter
loop
mov
push
dec
icebp
xchg
jo
jns
xor
sub
push
mov
sbb
cmc
xor
fs
dec
pusha
pop
adc
xor
shll
jno
jle
fistpll
lahf
pop
lods
or
in
and
out
add
loope
cs
into
loope
jne
pop
dec
loop
sub
dec
in
jp
mov
inc
sbb
push
repz
scas
and
sti
cli
movsb
jle
sbb
repnz
cli
fsubr
sub
jns
cld
xor
lret
aam
daa
cmp
pop
lret
cmp
jge
adc
xor
cmp
add
or
scas
xchg
xchg
lahf
stos
adc
fcmovnb
inc
fisubrs
jge
lods
lock
and
adc
jmp
mov
adc
adc
and
ja
lods
jmp
push
cmpsl
and
xchg
jns
sbb
call
lds
arpl
xchg
repz
gs
adc
and
adc
adc
stos
mov
xor
adc
push
push
loopne
scas
and
jg
cmpsb
addl
fsubrp
mov
ds
cs
lea
pop
cmp
mov
push
xchg
pop
pop
imul
jbe
int3
mov
adc
int3
mov
sbb
add
shll
sarl
inc
pop
into
repnz
lock
test
lods
out
sarl
add
push
add
xchg
jnp
mov
aaa
mov
sub
fs
ret
jmp
lret
add
fdivrs
push
arpl
push
cmpsl
ds
cmp
mov
lds
rclb
imul
xchg
ss
dec
idiv
xchg
and
inc
fdivs
pop
jl
mov
call
outsl
jnp,pt
popa
and
mov
jns
stc
pushf
sub
push
push
in
xchg
scas
sbbb
in
test
push
mov
dec
jge
push
pop
jne
push
sbbb
mov
lods
or
sub
aaa
pop
cmp
push
and
xchg
lods
push
inc
mov
imul
and
arpl
inc
adc
aam
sbb
lret
fwait
push
cmpsl
push
out
out
push
dec
jle
cmpb
cmc
jnp
add
adcb
cmc
or
data16
imul
divb
out
push
aam
sub
dec
xor
push
lcall
hlt
daa
mov
nop
sub
sarb
rorb
and
xchg
into
xor
xchg
inc
fadd
mov
andl
pusha
or
lods
jno
adc
cmp
xlat
cli
inc
mov
push
lcall
jg
rolb
adc
sub
aaa
push
rorb
sub
into
xchg
orb
repnz
add
push
mov
outsl
cwtl
add
ja
cmp
aam
xor
jmp
test
ja
mov
out
cmc
or
pop
mull
xchg
stc
popf
sahf
shlb
mov
dec
dec
cld
notl
sub
imul
jno
jmp
xchg
test
jbe
in
xchg
int
sbb
in
insb
loop
fcomi
and
sahf
clc
mov
mov
xlat
into
shlb
fistpll
data16
adc
mov
adc
dec
repnz
mov
or
push
mov
cmpsb
cli
jns
sarl
mov
sub
int3
pop
mov
das
jno
sbb
push
fsubrs
adc
jae
mov
cmpsb
sbb
dec
out
and
push
mov
fidivl
aaa
int3
ja
jnp
jne
into
sbb
cmp
repnz
les
adc
test
mov
sub
dec
in
pushl
test
lods
push
mov
cmpsl
outsl
mov
das
data16
test
stos
dec
jecxz
aad
clc
andl
mov
repnz
call
sbb
pop
loop
pop
sub
sbb
push
pusha
jl
loopne
ljmp
mov
xchg
fs
mov
data16
adc
dec
fsubrl
divl
inc
fwait
jo
into
fs
pushf
das
mov
mov
mov
fwait
and
adc
and
and
lods
mov
lret
add
insl
das
cltd
jmp
pushl
push
shr
push
lret
sbb
movsl
loopne
xchg
cmp
dec
jecxz
test
sbbb
repnz
push
out
xor
inc
pop
mov
out
adc
pop
repnz
test
mov
xchg
mov
cld
pop
repnz
faddl
push
dec
xchg
push
imul
push
xchg
ret
cmpsl
xor
dec
cmc
in
mov
loopne
sbb
imul
nop
pop
fwait
cmc
sbb
repz
cmpsl
dec
lds
adc
out
sbb
lret
fdivrs
mov
stc
or
ds
bound
adc
rcl
out
mov
out
ret
pop
dec
and
push
push
rcll
fistl
mov
imul
pop
jmp
jl
test
jae
lea
aam
test
bound
call
rclb
dec
pop
popa
mov
in
cli
push
lcall
sbb
add
sub
clc
das
andl
out
inc
xchg
add
in
xchg
add
addl
xor
sar
lds
sbb
movsb
cmp
xor
dec
insl
hlt
adc
movsl
in
es
ss
dec
push
aam
icebp
mov
xchg
jmp
and
or
test
hlt
sub
cmp
aas
vpsadbw
sub
sub
and
orl
dec
dec
inc
popa
jns
dec
sarb
cld
dec
leave
jne
pop
jbe
xchg
push
sub
imul
xor
mov
jmp
adc
mov
scas
outsl
pop
scas
xor
imul
or
aad
out
sub
mov
push
out
mov
in
lahf
sbb
mov
out
or
pop
rorb
pop
push
sbb
ds
mov
fistps
test
add
lods
xchg
xchg
dec
repnz
add
mov
dec
sbb
test
incl
adc
or
dec
dec
cmp
mov
jl
lahf
stos
test
test
out
jle
adc
inc
jno
lret
xchg
sbb
std
and
and
mov
cmp
jg
pop
mov
loopne
scas
lcall
test
or
mov
ljmp
addr16
popf
xlat
and
notl
stos
mov
jne
add
add
xlat
mov
or
int
xor
or
js
cmc
lods
cmpsl
pop
adc
pushf
mov
rorl
push
loop
ficompl
mov
je
leave
scas
inc
in
add
xchg
pusha
inc
adcb
js
out
call
add
imul
sbb
and
shrb
add
ret
sti
pushf
or
in
or
iret
and
sbb
or
rorb
lcall
mov
mov
mov
sub
cmp
xchg
or
rorb
mov
data16
jo,pt
mov
cmp
push
pop
popf
repnz
or
and
mov
mov
jne,pt
shrb
jb
mov
in
xchg
push
out
clc
push
cld
lock
dec
mov
lcall
fnsave
push
test
fsubrl
cmpsl
scas
push
pop
lret
jbe
hlt
iret
jl
adc
push
pop
jmp
mov
mov
push
mov
and
mov
lds
jl
dec
cltd
or
inc
scas
insb
mov
insb
pop
mov
je
jl
and
xchg
gs
popl
sahf
mov
dec
enter
imul
loopne
cli
shlb
outsb
aam
ficoml
jge
ljmp
scas
xchg
fwait
dec
fs
out
or
pop
cmpsb
xlat
ds
in
adc
dec
ds
pop
mov
jg
jp
xchg
filds
loopne
cmpsb
add
mov
jb
fiadds
inc
pop
pop
vmovupd
lret
and
call
movsl
mov
dec
pop
and
test
dec
and
pushf
out
insb
out
pusha
jecxz
xor
lea
imul
repnz
shll
cmpsb
or
xchg
xor
lahf
push
ret
sbb
dec
mov
pop
and
xlat
push
js
sbb
push
rep
cld
jne
daa
sbb
and
dec
int
scas
mov
stc
test
aam
fwait
or
or
mov
test
in
jl
or
bound
mov
adc
rorl
xchg
mov
insb
sbb
jg
mov
cmp
fnstcw
andnps
loopne
adc
pop
in
push
push
cltd
ret
clc
pop
dec
ljmp
sub
rclb
mov
fcoms
sub
dec
outsb
in
jl
aad
cmp
mov
jl
fsts
mov
xchg
adc
cmp
div
cltd
cmp
jmp
int
mov
cld
out
sub
inc
inc
loope
out
push
out
sbb
pop
push
pusha
inc
fucomip
in
or
iret
mov
pop
ret
mov
fisubrs
data16
mov
movsb
stos
xchg
sub
pushf
add
adc
and
pop
cmp
mov
jb
push
dec
cmp
and
or
cmp
daa
mov
les
mov
pop
xchg
aam
xchg
rorl
xchg
adc
pop
ja
push
and
dec
in
call
pop
adc
xor
int
movsl
cmp
adc
or
loope
out
lock
fcoml
fsts
inc
arpl
add
push
cmp
mov
sahf
clc
mov
add
dec
mov
mov
out
insb
scas
jecxz
mov
mov
enter
cmpsb
popa
adc
ret
lods
call
xor
xor
pusha
dec
cwtl
sbb
scas
sub
dec
cmp
idivb
divl
lret
jmp
int
xchg
aas
add
cmp
and
pop
sub
push
test
addb
pop
iret
out
ds
movl
mov
adc
stc
sub
enter
jno
xchg
xchg
jae
mov
dec
movsb
fdivl
adc
dec
jae
cmp
out
test
push
or
sub
pop
pop
mov
arpl
inc
pop
movsb
cmp
repz
in
sbb
sub
sub
imul
pusha
dec
in
or
pushl
push
sub
aas
int
adc
push
and
mov
inc
sti
aam
gs
or
mov
loopne
jb
rol
iret
lahf
testb
jecxz
sub
pop
daa
jns
fnstsw
repnz
add
jl
das
xchg
clc
jo
fidivrl
ret
jo
xchg
sub
dec
xchg
dec
cmp
fs
loope
jl
imulb
idivl
adc
push
mov
ljmp
ljmp
push
mov
lret
rclw
xchg
dec
ja
push
mov
fwait
cmpsl
pop
and
and
cmpb
cld
ss
add
mov
fs
in
pop
insl
push
dec
add
sub
mov
pop
dec
mov
or
sbb
xor
cmp
lods
incb
mov
cli
jns
bound
sub
std
loop
dec
dec
mov
add
sarb
shl
and
into
jns
stos
ja
addr16
add
jle
scas
lock
lods
add
mov
ret
stos
jle
roll
shrb
mov
cwtl
imul
lods
mov
sbb
xor
aam
arpl
adc
pop
iret
add
pop
mov
rcll
cs
js
or
dec
mov
push
jmp
pop
pop
and
fneni(8087
insb
xchg
jl
xchg
pop
in
out
insb
jp
pop
outsb
or
sub
movsl
lds
pop
hlt
push
and
dec
and
jle
lret
sub
inc
jmp
div
adc
dec
sahf
cmp
xchg
rorl
adc
stc
arpl
xor
add
xchg
and
cmc
inc
in
inc
shl
jl
jle
out
sbb
add
ss
jb
and
pop
mov
loop
cwtl
insl
cs
std
js
das
or
les
mov
in
xor
adc
sub
mov
mov
jbe
in
imul
enter
movsb
in
repz
sbb
adc
xor
sbbb
jecxz
push
xor
loope
daa
lret
data16
insb
inc
cmp
je
in
push
mov
pop
rcl
repnz
scas
pop
sar
mov
fisubrl
adc
push
or
xor
pop
cmpsb
push
fldt
lods
fscale
ja
test
xor
es
cmp
cmovnp
jge
stc
je
pop
mov
call
out
jae
pushf
push
cld
xchg
push
xchg
inc
fcomps
push
jne
test
pop
xchg
call
nop
and
subb
push
jbe
jle
fisubrl
imul
pop
add
fwait
mov
cs
int
sbb
adc
dec
aam
dec
lds
xor
sbb
adc
je
out
clc
pop
loop
inc
cwtl
sbb
dec
loope
aad
enter
jnp
pop
nop
stos
and
add
mov
sahf
jne
mov
mov
loope
test
sub
mov
xchg
pop
mov
add
pop
loope
cltd
xor
dec
movsw
mov
pop
sub
aas
cmp
push
mov
lret
mov
inc
paddb
sub
rclb
sbb
test
movsl
cmp
stos
aam
xchg
inc
test
cs
pop
js
mov
sahf
push
popa
test
fcomip
dec
jns
fildll
mov
jge
cwtl
mov
ror
push
pushf
cli
cmp
mov
jbe
and
adc
push
push
and
ja
xor
cwtl
mov
aaa
adc
jne
stc
popf
shll
jmp
jecxz
testl
mov
iret
aam
pop
stc
add
stc
sub
dec
mov
sbb
mov
scas
addr16
arpl
mov
mov
ljmp
add
add
je
xchg
push
je
xchg
inc
cwtl
mov
add
arpl
dec
and
pop
daa
xchg
sahf
dec
xlat
mov
popf
push
fdivrs
clc
ja
lods
bound
loopne
and
jbe
nop
pop
stos
lods
cmp
cmpsl
dec
imull
ja
repnz
dec
pop
jne
and
xor
dec
popf
sti
push
aaa
mov
rcl
pop
mov
pop
daa
aad
inc
push
cmpsl
jae
mov
popa
cmp
lods
mov
adc
cmp
mov
packsswb
push
fstps
cmp
sbb
inc
xor
xor
sbb
fbstp
neg
imul
pop
mov
ljmp
js
mov
daa
xchg
push
mov
sub
jle
daa
dec
inc
push
sti
push
push
push
or
loope
inc
sub
repnz
jecxz
lock
push
cmp
lcall
xlat
cmovs
xor
repnz
dec
in
test
push
xor
mov
jecxz
mov
subl
cmpsl
xor
jle
or
xchg
pop
mov
push
mov
insl
mov
pop
fadds
test
dec
fcmovnb
into
imul
int
jno
lock
loope
mov
test
shrl
adc
mov
sbb
xor
imul
insb
cmpsl
mov
sbb
inc
dec
insl
out
add
xchg
stos
cmp
pop
jb
popa
ss
xor
push
push
xchg
testl
leave
pop
iret
loope
jmp
sub
daa
cmp
repnz
pusha
jp
adc
adc
hlt
or
cmp
jno
xchg
insb
rorl
add
test
cs
outsb
adc
sbbb
push
cmpsb
imul
cmp
repnz
cmpsl
mov
test
lds
dec
dec
nop
dec
dec
mov
insl
fldenv
insl
into
add
cwtl
fsubrl
push
test
test
dec
sbb
push
lret
mov
es
ss
cmp
insb
add
sbb
mov
adc
mov
pop
fdivl
inc
psubusw
out
jg
mov
pop
mov
or
clc
mov
xlat
push
pop
cmc
jo
repz
xchg
dec
dec
repnz
das
dec
push
pop
call
cli
inc
push
sbb
sub
dec
lahf
mov
push
out
or
fdivrs
or
mov
cltd
lret
lret
addr16
jp
pop
mov
xchg
add
inc
in
das
sar
xchg
ret
mov
and
test
xor
divb
jnp
xor
add
pop
lret
dec
movsl
pop
pop
add
rorb
pusha
add
scas
loopne
pop
das
mov
and
mov
popf
or
cltd
fbstp
pop
aam
cmpb
inc
and
mov
sub
fs
pusha
jp
push
clc
xchg
imul
pop
fcomps
push
or
ficompl
dec
mov
xchg
repnz
scas
fldl
ljmp
stos
mov
stos
sub
push
pusha
stc
sarb
xchg
or
push
ret
xchg
jle
test
and
pop
jno
push
aad
push
sti
mov
push
sub
fisttpl
and
std
shrb
fbld
fistl
inc
mov
mov
and
ja
outsb
js
mov
adcl
cmp
mov
or
shr
push
in
std
subl
jp
dec
push
mov
adc
andb
sbb
mov
push
cmp
pop
aas
lret
lret
dec
in
dec
hlt
xchg
or
xor
dec
call
jne
jnp
nop
mov
hlt
daa
call
insb
sbb
cs
jle
flds
icebp
pusha
ss
add
add
pop
dec
mov
cltd
or
jo
push
mov
dec
int3
add
sbb
fcomi
ja
jmp
pop
sbbb
test
jp
jnp
cli
aas
fadds
xchg
pop
rcrb
sub
jmp
xchg
cmp
xor
daa
mov
mov
mov
pop
sbb
mov
pop
out
pop
cwtl
das
fcoml
jecxz
push
cmp
mov
and
xor
loop
in
push
pop
out
or
lahf
jbe
xor
xor
push
xchg
aas
ret
push
mov
fnstsw
cmp
ja
push
jg
add
jb
cmp
sahf
dec
cli
mov
mov
pop
hlt
inc
pop
lods
and
in
jnp
push
sub
xchg
xchg
inc
cmpl
mov
mov
gs
sahf
push
xchg
orl
fwait
mov
popa
loope
sub
sub
repnz
jno
lcall
iret
xor
pop
out
sub
stos
loopne
insl
add
add
test
mov
xor
xchg
subb
in
add
push
pop
add
cmp
push
mov
xor
js
jmp
mov
push
inc
or
in
insl
sti
mov
sbb
pop
pop
mov
aaa
movsb
fdivl
push
shlb
movsl
jnp
fisubrl
ret
popa
js
mov
psrlq
cmp
pusha
xchg
xchg
or
icebp
jnp
mov
pop
xor
in
cwtl
add
pushf
addl
js
push
pop
insb
test
add
pop
mov
lcall
or
ja
cmp
xchg
add
nopl
in
out
pop
pop
cmpsb
les
mov
jne
scas
inc
loop
adc
sbb
fiadds
fstps
and
adc
mov
andb
dec
push
mov
sub
sbb
jp
mov
lock
in
push
and
outsb
movsl
cmp
pop
xor
sbb
adc
into
les
imul
das
cmp
and
cmp
pop
fs
sbbb
decl
aaa
fiadds
and
xor
fstpt
fbld
in
push
mov
add
dec
rorl
push
mov
mov
sub
push
xchg
push
jno
sub
imul
lock
and
push
adc
jecxz
xor
lods
cld
mov
or
jmp
mov
gs
rcrl
or
mov
pop
pop
push
sbb
fnstsw
imul
inc
out
mov
insl
xchg
jmp
cmpsl
jae
jnp
and
inc
pushf
nop
daa
iret
dec
mov
out
nop
pop
cmp
js
dec
iret
shr
popf
mov
push
test
sbb
into
leave
out
push
jecxz
mov
pop
icebp
push
inc
sub
mov
and
test
stos
pop
imul
pop
shlb
or
shll
dec
mov
out
ljmp
dec
loop
aad
shrb
lret
into
mov
pusha
lret
popa
jb
xchg
adc
in
xchg
pop
mov
cmp
xchg
arpl
inc
xchg
mov
xor
pop
psubsb
dec
sbb
loopne
or
stos
mov
mov
je
xchg
or
lds
popa
hlt
cmp
mov
push
xor
cmc
stos
mov
das
adc
jl
or
pop
sbb
insl
cmp
lretw
jg
fs
and
rorl
cmp
inc
cld
outsl
inc
xchg
mov
nop
jmp
xor
iret
push
dec
or
fdivs
dec
imul
pop
fildll
sub
push
push
js
cli
cmp
fsubl
mov
daa
inc
or
rorl
push
pushf
xor
inc
bound
gs
lods
mov
cld
lock
lahf
stos
fstpt
in
stos
adc
outsl
call
jnp
pop
lods
dec
scas
mov
add
loopne
cwtl
push
pop
lods
jb
xchg
mov
aad
inc
or
lds
leave
movsb
jecxz
vpcmpgtb
dec
pop
cmc
push
push
mov
rorl
mov
imul
cld
mov
xchg
lahf
pop
xchg
cmp
lret
xchg
insl
sbb
loop
data16
push
mov
test
popa
sti
setae
push
mov
lldt
out
and
lahf
stos
cltd
pusha
or
lea
lock
inc
jno
xor
jmp
test
rcrb
mov
push
jl
stc
sub
jae
in
add
inc
sahf
fstl
leave
pusha
and
imul
push
inc
xchg
mov
fdivl
loop
push
sub
sbb
sub
sub
sarl
push
mov
jmp
sarb
shr
cmp
pop
out
lods
shll
jae
test
adc
xor
add
fs
pop
inc
repnz
and
fisttpl
jbe
dec
xchg
mov
mov
lea
cmp
pop
call
repz
out
cltd
movsl
jp
sub
mov
xchg
les
cmp
jno
xor
cmp
stos
add
mov
pop
iret
loopne
and
test
movsl
inc
dec
lcall
inc
push
jae
aam
xchg
push
jmp
dec
adc
push
mov
das
cmp
scas
divb
daa
stos
jge
and
cwtl
cli
pop
loopne
aam
xchg
push
fs
pop
mov
shrl
sbb
adc
outsb
sbb
int3
imul
lds
leave
cld
jbe
in
push
adc
push
imul
cmpsb
sbb
fidivrs
xorl
push
lcall
inc
push
dec
push
mov
je
xor
cmp
sbb
inc
jmp
std
xchg
mov
cltd
xchg
cs
ja
mov
mov
add
cli
pop
repz
cmp
jmp
dec
and
sahf
or
or
mov
dec
push
push
add
outsl
sbb
jge
into
mov
xor
rclb
and
mov
mov
dec
in
push
call
sti
push
push
std
xchg
jo
or
sub
icebp
push
lock
stc
push
jo
pop
pushf
inc
stos
jmp
push
daa
popf
dec
xor
add
lahf
jns
add
add
sbb
inc
js
ret
fisttpll
push
push
pop
jbe
pop
mov
loope
shrb
movsb
repz
sbb
add
outsb
sbb
xor
add
daa
pop
loope
or
xlat
jbe
lea
cmp
cmpb
es
lea
stos
mov
xor
xor
dec
arpl
aam
cmp
into
jle
push
fwait
insl
push
push
cmp
jecxz
sbb
pop
lcall
jp
add
adc
push
out
inc
inc
popa
dec
pop
rcr
dec
lods
mov
and
movsl
push
jle
test
xchg
push
iret
sar
arpl
mov
pop
aas
ljmp
push
mov
out
pop
outsl
inc
dec
add
sti
outsb
ss
sbb
call
xchg
std
pop
mov
scas
les
mov
ds
fwait
sub
or
dec
pop
call
cmp
push
in
mov
sar
addr16
pop
insl
mov
test
into
jo
mov
pop
ds
ret
or
jg
pop
imul
aaa
cltd
scas
je
sub
mov
cmp
mov
je
xchg
dec
mov
cmpsb
subb
aam
movsl
or
xor
lds
gs
mov
pop
daa
adc
xorb
mov
loopne
mov
mov
mov
shll
mov
mov
dec
mov
leave
test
push
inc
push
iret
cmp
cmpsl
fnstenv
dec
sbb
fistpll
loop
add
adc
aam
push
xchg
and
mov
mov
outsb
aad
xchg
push
lcall
or
fdivs
gs
sbb
add
idivb
fucomip
icebp
sahf
mov
mov
pop
jne
call
dec
fsubrp
jns
push
leave
dec
adc
push
cmp
cld
push
mov
pop
iret
loope
icebp
adc
push
data16
xchg
negl
or
jno
daa
fst
sbb
sbb
jl
mov
aas
fistps
lcall
rcr
jmp
pop
mov
cmp
insl
negl
std
cmp
mov
insl
jae
inc
popf
push
push
insb
mov
bound
imul
pop
repnz
stos
and
mov
aad
jmp
cwtl
notb
fsub
addr16
push
cmpsb
orb
and
mov
lods
inc
push
mov
lret
nop
xor
stos
xchg
inc
sti
xlat
out
mov
insl
sub
jae
mov
pop
iret
inc
or
pop
or
arpl
sub
scas
data16
imul
int
inc
xlat
out
iret
dec
and
fiaddl
xchg
mov
sub
sbb
jl
jb
mov
lahf
xchg
push
xor
add
ja
pop
insl
out
mov
xchg
andb
adc
outsb
das
icebp
pop
add
int3
in
mov
cltd
mov
outsl
adc
inc
fstpt
aas
scas
push
pushf
bound
inc
inc
insl
jae
pop
push
fcomi
mov
xchg
mov
lahf
sbb
jne
cmc
int
xlat
shrb
adc
inc
jns
add
inc
ret
daa
shlb
stc
test
sahf
xchg
sbb
dec
sarl
cltd
pop
ret
dec
aam
mov
and
shl
leave
xchg
adc
mov
sbb
sbb
in
jmp
jb
pop
nop
mov
dec
sarl
es
fildl
cltd
fistps
xor
and
cmp
incl
jecxz
scas
mov
mov
ljmp
movsl
sbbb
mov
mov
inc
shlb
bound
ret
mov
xlat
adc
push
lret
xchg
push
cmp
addl
repz
inc
jmp
test
and
leave
inc
notl
pop
or
cmp
cmpb
mov
or
insb
outsb
sub
je
out
and
push
push
push
and
movsb
call
or
popf
movsb
sub
or
sbb
mov
sti
pop
pop
enterw
dec
cli
mov
push
and
xchg
loope
sbb
aas
dec
lcall
mov
scas
in
mov
in
jg
outsl
out
bound
std
mov
mov
xor
cld
xchg
pop
outsb
xor
xor
jb
jae
mov
adc
les
movsl
lock
imul
mov
insb
cmp
push
and
enter
cmp
xlat
cmc
mov
addr16
sbb
add
aam
push
push
subl
inc
sbb
mov
or
das
lret
cmc
pop
je
iret
sub
das
stos
testl
xchg
push
xchg
mov
cld
push
daa
push
mov
outsl
sbb
sub
int3
jmp
pop
sbb
insb
or
push
test
movsl
fbstp
iret
fistpl
lret
js
out
mov
sbb
lret
mov
aam
enter
rorl
in
add
lcall
lcall
mov
loop
dec
cmc
or
and
xchg
es
cwtl
data16
sbb
repz
jg
cmp
push
stc
and
cld
mov
xchg
xchg
in
sub
lret
mov
mov
arpl
insl
loope
jbe
icebp
movsl
cmp
push
outsl
icebp
mov
mov
jp
and
std
ret
sub
les
jbe
rolb
fwait
popa
and
or
cmp
sahf
jns
repz
xchg
jns
in
test
pop
repz
xor
hlt
push
adc
push
in
mov
ret
out
aas
outsb
divl
into
ljmp
and
adc
mov
stos
xchg
sub
jae
adc
pop
insb
pop
cmp
sub
push
jo
mov
dec
shrl
cli
pop
leave
pusha
and
mov
decl
adc
lcall
mov
mov
addr16
gs
lea
push
mov
loopne
es
lahf
sub
dec
fsubrs
ljmp
ds
int3
in
std
cmp
in
out
cmp
pop
push
pop
push
add
lods
out
scas
nop
daa
loopne
or
adc
mov
movb
enter
mov
pop
dec
scas
jecxz
in
cmp
jae
xchg
rorl
ja
pop
nop
xor
rcrl
cld
sbb
loop
push
mov
fistpl
mov
dec
adc
cmp
popa
lods
mov
sub
addl
sub
push
or
add
leave
adc
adcl
sbb
jg
jmp
pushf
das
cmp
fcom
pop
xchg
scas
aam
ret
adc
mov
cmpsb
sbb
push
mov
out
lahf
push
daa
mov
jge
aad
repz
data16
adc
inc
xor
daa
jae
pop
stos
and
or
movb
jae
lods
push
pop
adc
push
cmp
loopne
out
dec
xor
rcpps
sarb
aad
lea
or
fisttpll
repz
iret
dec
mov
or
fistl
and
loope
jmp
out
cli
in
fwait
fwait
test
pop
or
jnp
cs
sbbb
fiaddl
mov
cs
sbb
decl
xchg
outsl
add
jno
adc
iret
and
lret
lea
scas
stos
insl
pop
sub
addr16
jg
mov
mov
mov
push
or
mov
arpl
addr16
xchg
xor
jle
mov
aas
mov
jb
and
inc
inc
or
mov
dec
imulb
mov
ret
int3
loope
push
adc
popa
pop
cmp
jns
or
in
inc
xchg
add
sub
mov
and
pop
sti
adcl
xor
xchg
inc
enter
dec
push
dec
sbb
mov
gs
cmp
cs
mov
mov
repnz
mov
ret
ss
lds
jbe
aam
repnz
mov
dec
fdivrp
pop
jo
shl
out
nopl
lret
movsb
std
pop
mov
sbb
dec
add
dec
loop
cmp
test
dec
pop
sub
sti
add
dec
adc
popa
stc
xchg
inc
sub
call
fcoms
jae
adc
sti
or
pusha
cmp
int3
jge
mov
push
xorl
mov
ficoml
imul
sub
or
adc
dec
xchg
sbb
mov
pop
arpl
ja
jnp
add
icebp
dec
daa
lcall
sbbl
push
insl
ja
out
mov
inc
and
jmp
sbb
inc
stos
sub
pop
lods
sbb
lcall
adc
popa
and
enter
or
out
mov
hlt
jne
pop
dec
mov
int3
cmp
cmp
mov
pop
lahf
xor
out
mov
into
fistpl
add
mov
cwtl
scas
jl
xchg
mov
push
in
int
insl
cmp
ljmp
lret
adc
fcomp
sbb
loop
rcr
add
pop
mov
mov
ret
rolb
lret
aaa
mov
jecxz
jo
jecxz
and
or
inc
bound
mov
xorb
push
xor
mov
lods
inc
js
pop
or
testl
xchg
xor
add
data16
pop
mov
add
and
jbe
mov
dec
nop
fs
scas
and
repz
and
leave
xor
fs
arpl
fisttps
sub
or
push
push
pusha
or
in
out
outsl
mov
xor
stos
insb
add
cmp
ja
je
sub
jno
sbb
dec
out
or
sub
mov
dec
jl
mov
out
out
and
jge
xor
inc
mov
int
cmpsb
aam
adc
xor
rorb
lea
icebp
add
and
es
pop
outsl
sar
xor
sarb
pushf
xchg
mov
mov
rcr
call
cmp
cmp
pop
insl
jg
adc
or
iret
into
mov
shrb
jp
rorl
popa
fbstp
test
cmp
sti
pop
les
mov
shlb
test
ljmp
enter
inc
and
ficompl
sub
inc
sbb
movb
popf
ja
int3
xchg
and
pop
xor
cmp
lock
scas
mov
mov
fs
inc
js
cmp
add
xor
out
fmul
mov
cmpsb
imul
dec
push
mov
add
sbb
fsubl
cmpsl
daa
sub
or
iret
aad
cld
push
adc
adc
push
and
pop
push
movsb
in
lahf
ds
or
rclb
push
leave
call
divb
and
test
mov
or
sar
dec
fnstsw
ds
and
subl
sbb
arpl
cmp
sub
or
push
inc
lea
insl
outsl
dec
and
pop
mov
jne,pt
imul
movsl
cmp
xchg
stc
dec
arpl
pusha
cmpb
push
addl
xchg
div
cs
ja
push
push
aad
repz
out
cmp
pop
xchg
xchg
dec
xor
jecxz
xchg
addr16
inc
xor
sub
xchg
in
rorb
je
sti
add
outsl
cmpsb
pop
push
rcrl
mov
enter
das
ret
mov
sub
dec
cmp
push
mov
inc
cmp
cmp
add
cwtl
aad
dec
jo
cltd
icebp
xor
add
insb
jbe
mov
sbb
inc
adc
dec
int
or
xor
push
mov
xchg
mov
movsb
cmp
pop
dec
pusha
and
cli
mov
add
es
cwtl
xchg
aas
push
stos
push
dec
pop
adc
sbb
sbb
pusha
pop
adc
js
push
repz
jmp
ret
or
cmp
inc
and
test
push
mov
adc
mov
inc
xchg
push
pop
cmp
scas
mov
cmp
jns
je
or
jae
sbb
fidivl
push
in
ret
ja
mov
jle
int3
cmp
push
mov
mov
push
nop
pop
aaa
pop
adc
add
xchg
cmp
scas
pop
push
sbb
jno
xor
sub
jb
dec
sbb
or
idivl
sbb
pop
mov
mov
movsl
mov
or
pop
shrb
test
jl
subl
cmp
mov
jecxz
push
add
cmp
stc
push
cmp
xchg
xchg
movsl
ja
dec
hlt
cmpl
push
fwait
fwait
xor
test
inc
arpl
hlt
adc
adc
or
andb
push
outsb
ret
lcall
push
push
xchg
cmp
aaa
popf
enter
xchg
jge
or
sub
popf
push
out
xchg
out
sbb
jp
stos
movsb
add
inc
stos
jns
mov
fiadds
push
lret
ljmp
cmp
push
in
loope
cmp
enter
pop
in
outsb
pop
aas
sti
xchg
outsl
jb
cwtl
mov
scas
out
pushf
loopne
adc
mov
scas
mov
daa
jl
mov
in
int
lock
push
dec
outsb
add
mov
sbb
mov
je
insl
and
repz
subb
push
mov
mov
and
mov
mov
jecxz
dec
adcb
push
imul
lret
add
pop
outsb
test
loop
lahf
pushf
es
lods
in
push
lock
jmp
and
mov
es
mov
or
xor
rolb
mov
push
out
aad
test
adcl
pop
sub
or
arpl
sub
push
out
cltd
shr
lock
xchg
pop
adc
cmp
out
fmull
sti
addr16
lock
mov
inc
inc
arpl
cmp
jae
dec
movsl
xchg
push
adc
fildll
andb
aad
xlat
outsb
rcrb
push
popf
or
notb
shll
mov
xchg
dec
cmp
movsb
ljmp
mov
jno
sbb
out
adc
rcrl
jo
lcall
cmc
or
mov
or
rol
pop
ss
daa
insb
fisubs
mov
negl
rolb
stos
push
scas
sbb
jl
ja
inc
push
mov
add
lods
cmp
mov
fistpl
xor
sbb
jae
shlb
cmpb
dec
cmp
push
out
add
aad
negl
aaa
add
jo
mov
bt
aas
xlat
loope
dec
pushf
clc
pop
hlt
das
cmp
adc
out
push
sbbl
sti
js
shl
lcall
popa
mov
in
test
add
out
stc
test
xor
or
fwait
jbe
call
xchg
shll
test
icebp
adc
xor
mov
and
ficomps
or
jno
imul
daa
imul
pop
pop
fidivrs
adcb
rorl
imul
bound
fiadds
xchg
add
mov
addb
lock
loop
mov
call
sub
notb
xchg
cmp
cltd
lahf
jl
test
pop
movsb
out
pop
ss
pop
dec
cmp
mov
inc
test
sbb
hlt
cmp
dec
jl
out
inc
mov
shll
js
jb
pop
and
cltd
insb
repnz
movsl
mov
or
dec
cmc
pushl
mov
and
mov
xchg
insb
inc
lea
mov
addr16
clc
addl
ficomps
clc
scas
cmp
mov
das
rep
mov
cmpsl
cmp
pop
inc
adc
pop
lods
test
and
andl
iret
cmpsl
jle
ret
xor
sub
push
lahf
push
or
mov
jmp
and
sub
arpl
iret
push
push
jns
sub
dec
mov
jg
ljmp
sbb
les
sub
mov
in
xor
pop
mov
mov
push
in
cmp
notl
mov
add
mov
lret
push
mov
push
jge
or
jo
cld
cmpsl
lds
jge
cmp
adc
cmp
xor
sbb
dec
addr16
repnz
push
xchg
push
out
mov
lock
mov
xchg
arpl
in
adc
clc
lea
xor
jge
mov
sti
and
push
movsl
pop
inc
add
jp
mov
add
aas
in
inc
pop
mov
scas
mov
cmpb
dec
or
jp
mov
sbb
push
push
or
push
cs
mov
lret
clc
mov
push
jg
pop
sbb
aas
sbb
dec
or
push
pop
jmp
ljmp
dec
scas
add
out
inc
sti
mov
int
dec
xor
jle
sbb
js
test
mov
adcl
mov
jp
mov
aam
jle
add
push
adc
in
sbb
mov
and
inc
adc
dec
dec
mov
push
mov
pop
cmpsl
adc
cmp
jbe
dec
mov
jecxz
std
fisubrl
sbb
xor
cs
imul
fdivs
lahf
stos
sub
sub
inc
adc
add
fs
jbe
dec
cmp
rol
push
repnz
lds
scas
push
call
popf
xor
mov
push
cmc
outsb
loope
mov
dec
mov
ds
sbb
jecxz
dec
arpl
dec
in
adc
inc
cmp
in
pop
mov
fsts
or
push
mov
pop
add
jge
mov
test
and
cmp
jmp
ljmp
lcall
loop
and
lods
jg
bound
aas
xchg
scas
add
pop
or
adc
pop
cmpsl
loop
sub
pop
lret
pop
int3
xchg
in
std
cmp
push
insl
sub
and
pop
loope
push
call
cmp
push
mov
xchg
mov
add
imul
add
cmp
hlt
add
cs
xor
pop
loopne
jge
sarl
jnp
and
jns
mov
mov
adc
or
or
out
in
pop
and
sub
lea
add
stos
and
outsl
pop
popa
pushf
outsl
sbb
ss
pushf
add
addr16
mov
sub
push
pop
push
imul
dec
sbb
pop
xor
sub
sub
aad
fwait
push
mov
cli
and
mov
mov
iret
push
decb
or
int
pop
jo
xchg
stos
shr
push
sbb
cmpsb
lock
leave
jecxz
and
mov
pop
pushf
mov
mov
aam
pop
loop
loope
cmpb
dec
addr16
pop
and
adcl
mov
adc
cmpsl
cmc
mov
stc
mov
xor
cli
loopne
sub
mov
jno
lret
lret
pop
mov
mov
jmp
jns
lods
xor
imul
out
cmp
clc
pop
movsl
sub
or
imul
je
fs
push
xchg
inc
test
into
mov
add
sub
loopne
pop
leave
pop
scas
dec
imul
daa
mov
pop
or
mov
lock
arpl
inc
pusha
call
cmp
inc
lahf
bound
adc
push
jne
pop
dec
add
mov
je
ret
hlt
inc
xlat
std
adc
lret
push
nop
lcall
cld
rorb
adc
sub
sbb
pop
mov
jno
and
ja
xlat
mov
lcall
jg
es
xchg
inc
push
outsb
jbe
push
sub
and
inc
fs
into
and
add
and
repz
icebp
mov
add
out
cmp
mov
movsb
jnp
nop
out
in
lcall
insl
sti
imul
in
pop
cmp
loope
xchg
fcoml
adcb
push
push
cltd
cmpsb
mov
jge
loope
sub
cmp
loopne
popf
pushf
inc
lret
ljmp
sub
mov
push
jg
jle
lret
pusha
fstl
popl
xlat
repz
sbb
push
jnp
leave
pusha
arpl
xchg
add
mov
add
dec
mov
or
jle
sub
pop
pop
cmp
dec
icebp
inc
fisubs
or
cmp
inc
gs
mov
aam
pop
pop
cs
xchg
jl
xor
mov
ja
pop
imul
cmp
pop
les
sbb
inc
daa
addr16
xchg
out
scas
out
jno
push
xchg
adc
ficomps
cmp
insl
loopne
out
pusha
sub
imul
mov
cmpsl
clc
xor
cs
sub
cmp
jbe
faddl
ljmp
pop
sahf
pusha
in
mov
aad
aas
nop
sbb
ds
nop
inc
into
scas
mov
dec
sbb
fcompl
lds
add
xchg
insb
clc
nop
pushf
jg
sahf
repz
push
add
jecxz
dec
dec
xchg
add
xchg
xor
loope
roll
xchg
sub
pop
add
cmp
pop
int3
loop
mov
jbe
add
jmp
sub
fisttpll
add
push
pop
xor
mov
mov
movsl
outsl
lcall
lock
xor
and
xor
mov
cmp
sbb
mov
aam
push
mov
adcb
aad
push
pop
dec
out
outsb
mov
dec
pop
orl
and
or
mov
xor
pop
add
ja
and
mov
pop
std
add
add
sub
dec
and
scas
test
push
sahf
aad
jno
cmpsb
call
jns
ja
shll
jns
test
out
and
test
loop
mov
push
imul
mov
subb
fsubrs
dec
cld
mov
mov
add
jb
js
lods
and
or
outsl
fbstp
jb
xor
push
pushf
sti
add
sbb
or
rorl
xchg
xor
pop
or
popa
fdivl
stos
xchg
sub
xor
xchg
nop
adc
bound
andl
jl
addr16
in
push
out
fs
adc
outsb
pop
test
xchg
or
inc
xchg
mov
test
xchg
sub
adc
jne
arpl
xlat
ljmp
pop
lock
gs
inc
mov
mov
xchg
sub
xor
cmp
xlat
push
shrl
adc
jnp
sub
jbe
cs
push
mov
aas
sbb
jno
loope
and
movsl
addb
pop
cmp
je
sbb
xor
add
and
pop
aad
dec
xchg
in
cmp
xchg
sub
popf
jle
fucomp
pop
cmpsb
nop
repz
test
sub
mov
clc
jmp
loope,pn
ljmp
cmp
jmp
xchg
insb
pushf
sub
repz
scas
and
test
sub
sub
test
or
mov
sub
dec
repz
push
cmp
fistl
jno
in
movsb
je
xchg
mov
lret
pop
mov
test
and
mov
cli
into
fldl2e
lds
loope
shlb
inc
push
fwait
fs
arpl
cmp
jbe
int3
xor
hlt
lock
je
and
cmp
xchg
add
add
xchg
xchg
ljmp
jnp
stos
es
sbb
cmc
flds
xchg
pop
icebp
adc
pop
lret
dec
pop
scas
shr
call
sbb
dec
push
sbb
pop
insb
adc
cmpsl
out
jnp
sub
and
scas
and
xchg
mov
std
mov
cmp
dec
sahf
outsb
pop
inc
mov
mov
pop
in
sub
inc
lret
jo
cld
and
mov
js
test
adc
or
xor
sbb
mov
dec
cmp
mov
push
dec
cld
push
scas
sub
and
mov
inc
bound
inc
cli
add
icebp
cmp
adc
out
js
arpl
in
repz
cmp
adc
push
fidivrs
addr16
shlb
popa
insb
jb
dec
ret
jmp
or
shrb
mov
pop
push
popf
sbb
iret
push
jns
popa
push
rorl
stc
or
xchg
xchg
pop
in
or
aaa
jo
sub
rolb
dec
push
lcall
push
ficoms
push
popf
push
and
pusha
mov
mov
jle
adcb
mov
mov
repz
dec
out
mov
pop
cmpps
test
sub
add
mov
inc
push
les
jg
push
cmpb
push
clc
pop
fs
mov
sub
and
push
int
mov
mov
mov
aaa
mov
daa
sbb
adc
dec
dec
mull
arpl
or
rclb
push
add
add
icebp
fdivs
push
mov
fidivrs
or
adc
lds
and
call
xchg
adc
push
popf
ljmp
aaa
pop
scas
lret
sti
into
cmpsb
jb
sub
ja
jl
xorl
and
incl
fstpl
mov
mov
add
pop
sbb
jb
fmuls
mov
adc
xchg
mov
pop
out
aaa
outsl
pop
adc
jbe
gs
push
jb
or
outsb
bound
sub
fisubs
mov
int3
cli
dec
sub
arpl
or
dec
fwait
out
xchg
and
or
pop
mov
adc
arpl
repz
xor
and
xor
cmp
enter
cli
and
push
add
push
dec
xlat
mov
je
inc
mov
es
aas
std
iret
adc
scas
xchg
lods
pop
mov
arpl
movsb
out
dec
loop
scas
xor
xor
imul
movsb
dec
cld
push
inc
enter
mov
mov
and
lret
outsl
lea
jge
push
jbe
mov
lret
arpl
add
lds
fistpl
sbb
adc
int3
addr16
arpl
jl
sbbb
pop
sahf
ljmp
jmp
mov
fs
in
lret
and
cli
out
cwtl
xor
jno
inc
mov
jns
cmp
mov
adc
int
mov
xchg
jne
pop
ret
stos
fsubr
test
outsl
jmp
and
adc
cli
xchg
aaa
push
mov
xorb
inc
das
outsl
jge
arpl
dec
outsl
pop
loopne
sub
push
or
push
jno
add
jbe
das
in
pusha
pop
cmp
pusha
push
adc
and
repz
push
mov
and
cmp
punpcklbw
icebp
push
fisubrl
and
fcmovbe
popa
xor
nop
inc
inc
xchg
xchg
loop
lcall
xor
push
jmp
jmp
or
ja
popa
mov
push
in
xchg
or
push
lahf
test
out
dec
dec
int3
sbb
mov
mov
dec
pop
mov
or
adc
push
std
cwtl
push
xor
je
and
jmp
lcall
sbb
shrl
pop
hlt
in
jg
add
dec
xor
sub
push
sbb
pusha
sub
fidivrl
lock
out
xchg
ljmp
xchg
jnp
loopne
mov
dec
sarb
xor
add
repnz
es
pop
add
pop
repz
jae
xchg
cmp
test
lea
out
repnz
jae
aas
imul
pop
push
xchg
mov
mov
cld
in
jbe
roll
inc
mov
subb
mov
or
jp
std
and
icebp
into
leave
dec
mov
or
pop
cmp
into
aas
addr16
lea
cmp
and
rorl
enter
push
mov
xor
inc
out
push
repnz
xor
pop
mov
pop
jb
push
out
jle
cmp
shlb
int
inc
dec
js
mov
jecxz
mov
hlt
xor
cs
sbb
clc
xchg
ret
out
sub
aas
push
pop
mov
fwait
sti
into
cmp
or
scas
xchg
and
ljmp
mov
ja
xchg
mov
pop
fidivrl
out
push
and
mov
xchg
pop
add
jo
mov
lock
mov
out
cmc
mov
ds
mov
fwait
shlb
mov
jne
je
add
mov
sahf
push
inc
fiaddl
scas
or
fmul
lret
imul
es
inc
pop
jae
fsubs
jno
ljmp
push
xor
aaa
or
dec
pop
imul
in
mov
jno
aad
cld
into
aaa
fidivrl
lcall
inc
xor
mov
add
roll
or
dec
outsl
push
jp
dec
cmp
pop
adc
mov
sbb
aaa
add
outsl
loop
adc
sbb
test
add
call
and
cwtl
test
es
clc
and
sbb
mov
adc
sub
ss
mov
pushf
jge
dec
stos
dec
mov
pop
cmp
ret
jbe
and
loopne
cmc
mov
mov
test
cwtl
jecxz
clc
popa
or
fcmovb
dec
pop
sti
cld
inc
mov
add
insb
jle
fdivs
pop
or
xchg
outsl
xchg
sbbb
sti
adc
pop
movb
bnd
clc
xchg
cs
mov
bnd
stos
je
xchg
outsb
dec
dec
scas
jno
cmpsb
cmp
push
sbb
inc
xor
jecxz
cmc
mov
pop
out
mov
rcrl
mov
addr16
shrl
add
xchg
cmpsl
mov
or
outsb
dec
sbb
ret
into
in
push
in
mov
insl
imul
and
nop
shl
iret
xor
sub
pop
sub
mov
cmp
je
lahf
fsubs
mov
cmp
xorps
and
cmp
cld
insb
loopne
cwtl
in
and
in
mov
pop
ss
sub
lods
mov
jbe
arpl
push
stos
nop
aaa
icebp
stos
push
inc
orb
jb
sub
xor
xchg
cwtl
out
sahf
movsl
mov
and
push
test
sbb
xor
xchg
ja
repz
icebp
dec
push
andl
ret
outsl
inc
jnp
rcrb
lahf
push
add
inc
xor
out
push
stc
adc
ljmp
and
test
in
out
and
imul
popa
jl
and
push
clc
cmpsl
and
cmp
dec
xor
xchg
andl
mov
aas
mov
push
sub
pop
jb
aas
ret
fildl
mov
popf
jmp
push
daa
out
out
xchg
or
pusha
arpl
insl
les
lahf
xchg
mov
xlat
adc
outsb
pop
lds
adc
les
cmp
movsl
imul
jns
add
or
sbb
push
repnz
aad
das
inc
mov
xor
shl
adc
cmpsl
mov
inc
pop
imul
inc
int
ja
mov
call
mov
pop
mov
iret
popf
sub
pop
xor
ret
shrb
cmpsb
aad
dec
repnz
adc
mov
mov
sub
imul
push
out
sbb
sbb
sub
stos
sti
sbb
or
cmc
adc
dec
add
clc
insb
cwtl
das
lahf
xchg
and
mov
fnstenv
ret
xor
dec
dec
out
dec
movsb
or
sub
cltd
mov
sub
movsl
add
cmp
loopne
lret
addr16
pop
xchg
lret
cld
mov
insl
ret
stc
lock
mov
push
push
insb
dec
fcomps
out
int
out
and
inc
add
mov
loopne
sub
xchg
insb
test
push
xor
lret
or
sub
pop
in
and
adc
dec
cmp
xor
dec
fs
ret
inc
mov
cli
lock
sub
and
pop
imul
in
sbb
fisubrl
repz
jg
pop
rcll
mov
test
js
xchg
rclb
out
std
rcrb
pusha
clc
pop
lahf
sbb
scas
cld
js
cltd
xchg
stc
imul
test
push
xchg
cmpsb
mov
sub
testb
xor
cmp
pushf
mov
sbbb
subl
pusha
mov
dec
repnz
pop
lret
xchg
aas
sti
jae
xor
cmp
push
loope
mov
mov
jg
xchg
cltd
mov
pop
add
lcall
push
in
mov
daa
inc
mov
pop
and
popa
jns
ret
dec
jecxz
and
nop
adcb
fsubr
movsb
mov
pusha
fcoml
lret
fnstenv
push
jmp
je
inc
and
cld
out
mov
sbb
ss
lret
and
push
push
std
inc
out
adc
scas
lret
cmp
xor
pushf
mov
mov
or
push
inc
mov
fcoms
adc
lcall
lahf
mov
xor
lds
arpl
stos
sbb
outsb
add
and
cmc
sahf
xor
cmp
mov
sar
add
outsl
jl
push
pop
dec
dec
ret
cmc
bound
xchg
shll
imul
inc
push
lea
xchg
and
dec
fistpll
push
cltd
arpl
cltd
inc
insb
js
std
insl
xchg
or
mov
sub
out
xchg
sbb
mov
sbb
xchg
outsb
push
fmuls
sbb
test
out
jno
jno
repz
pop
pusha
cmpsl
mov
inc
popa
mov
jbe
mov
sbb
mov
shl
dec
pop
jge
in
aad
pop
hlt
or
and
cmc
sbb
mov
and
or
pop
jbe
cmp
mov
loopne
int3
arpl
dec
icebp
mov
fwait
adc
mov
imul
sub
fstpt
loop
hlt
mov
mov
in
mov
mov
aam
ja
popl
mov
ret
repz
adc
or
dec
pop
and
aad
icebp
adc
dec
stos
rorl
stos
push
jp
xchg
xchg
inc
das
addr16
mov
imul
add
push
lods
in
mov
outsb
xor
xor
scas
jns
ja
mov
inc
cwtl
inc
fwait
inc
ss
adc
gs
xor
mov
scas
jge
shrb
shrb
sti
sub
test
ja
xor
mov
jmp
mov
stc
and
add
pop
or
movsb
xor
jae
jmp
pop
adc
ror
pop
cmp
and
jp
ljmp
and
push
in
fucomi
pop
xlat
fisubs
dec
sahf
popa
clc
pop
in
xor
bnd
out
mov
or
or
insb
jno
mov
in
sub
clc
aas
dec
aas
add
xor
dec
xchg
aad
gs
dec
lods
stos
xor
add
mov
stos
pop
fwait
push
test
add
and
ret
inc
push
clc
lods
insl
sub
std
cmpsl
mov
dec
sti
dec
add
sub
mov
jmp
push
and
dec
lahf
jmp
or
cmp
mov
ljmp
sbb
stos
iret
mov
testl
icebp
in
add
pop
cmpsb
or
aaa
stos
cwtl
or
push
add
or
imulb
xchg
test
lret
sbb
mov
xchg
xor
cmpsl
or
pop
add
push
mov
jbe
test
push
add
loopne
cmp
fimull
adc
dec
stc
test
aas
mov
into
fcomp
cmp
stc
cmp
sub
imul
cmp
pmuludq
loopne
stos
jmp
push
loope
dec
out
xchg
mov
jecxz
jns
xchg
add
fnstenv
add
push
mov
inc
inc
jmp
mov
daa
jg
cmp
cmp
aaa
stos
int
cmp
mov
movsb
or
jnp
divl
sbb
or
daa
or
or
mov
pop
sub
pop
nop
sbb
scas
add
bound
fcmovb
xorb
int
add
pop
push
mov
sub
xlat
icebp
inc
or
in
sbb
push
cltd
cmpsb
std
fnstenv
and
push
and
frstor
cli
sbb
stos
pop
fsubl
xor
add
imull
dec
ret
ret
jo
insl
or
mov
push
fstpl
mov
nop
fisubrl
mov
icebp
lret
dec
nop
minps
and
test
repz
rcll
sub
xor
cwtl
js
pop
lds
dec
push
xor
scas
mov
mov
adc
repz
fnstsw
mov
push
les
loop
nop
daa
mov
push
push
adc
daa
jge
popa
js
leavew
mov
mov
pop
ret
lock
hlt
push
test
mov
fsubrl
sbb
jns
mov
cmp
inc
loope
pop
cmp
xlat
cmp
push
jle
jne
push
push
pop
cmc
aam
addr16
pushf
pushf
xchg
mov
lahf
mov
mov
out
xorb
add
and
adc
jle
dec
push
mov
rolb
mov
ljmp
or
mov
cmpsl
jecxz,pt
lret
xor
sub
fcmovbe
mov
test
mov
pop
fcmovnbe
push
jp
loope
mov
xorb
mov
daa
icebp
test
jb
xchg
and
pop
scas
jp
pop
mov
fstpl
sarl
scas
xchg
fisttps
mov
aad
outsb
ja
and
mov
loopne
cmpsb
call
test
sbbl
mov
jns
jmp
shl
pop
sti
xor
ss
sub
sub
jo
xchg
fldl
inc
out
int
pop
shrl
shr
outsl
sahf
and
aad
xor
cmp
ja
mov
sbb
scas
xchg
sarb
scas
mov
cmc
lds
movsb
subl
sbb
pop
int
mov
jns
dec
in
jb
ret
lock
or
xchg
scas
and
xchg
adc
add
xor
arpl
pop
mov
pminub
pop
imul
mov
xchg
add
mov
jo
clc
lea
sub
cwtl
lea
ret
pop
ret
into
arpl
cmpsl
mov
or
movsl
aam
xlat
mulb
rorb
std
xchg
dec
push
movsb
add
rclb
mov
mov
popf
jle
push
mov
inc
pop
ljmp
lss
call
out
and
addr16
inc
in
cli
jle
imul
xchg
call
icebp
movsl
and
cmp
jle
outsb
test
push
and
rcl
mov
sbb
jmp
inc
das
mov
add
stos
decb
sbb
bound
imul
iret
inc
add
lods
sub
or
mov
fldt
jbe
imul
inc
adc
enter
int
jae
push
test
mov
fisubrs
push
mov
inc
enter
push
dec
push
out
mov
rclb
imul
push
pop
ja
cmpsb
repz
mov
adc
je
and
push
jb
inc
je
jbe
push
xor
inc
xchg
add
mov
sbbb
xchg
sub
hlt
xchg
sbb
aas
in
cmp
cs
pop
bzhi
cmpsl
aas
sub
fcoms
jl
ja
loop
adc
cmc
mov
push
inc
fiadds
add
ret
test
mov
and
cli
pop
dec
shl
xchg
test
ds
outsl
aas
pop
sbb
mov
xchg
aaa
shlb
mov
cmp
adc
inc
popf
lahf
imul
test
and
movsb
lods
pop
push
in
jb
rcrl
adc
dec
nop
push
in
rcll
movb
add
inc
xchg
or
push
jmp
idivl
xchg
fs
flds
pop
xor
les
jg
and
mov
lahf
enter
mov
sarb
mov
push
cmpsl
sar
xor
xor
xchg
lahf
loope
push
xlat
jno
fwait
push
dec
imul
and
dec
sbb
inc
or
ss
outsb
ja
jns
jne
and
mov
not
push
fsubrs
dec
test
lret
cmp
mov
sbb
daa
dec
das
push
add
ljmp
add
mov
adc
sarb
cmp
xor
or
push
pop
insb
filds
dec
push
adc
shlb
cmp
ficoms
pop
sub
aad
push
adc
jnp
std
repz
outsb
mov
andb
xor
test
pushf
push
movsl
dec
in
das
imul
or
outsb
mull
leave
or
adc
mov
mov
imul
loop
call
cs
fisubrl
adc
decl
not
xchg
hlt
sub
xchg
aas
data16
xchg
ficomps
cmp
bound
sbb
in
pop
fwait
sub
inc
pop
inc
sbb
jns
sbb
cmpsl
ds
pextrw
xor
push
or
mov
flds
fnstcw
mov
imul
es
dec
push
push
adc
and
int
scas
les
loopne
and
dec
xchg
into
mov
xor
ja
fcompl
rorl
pop
inc
gs
mov
fldcw
jp
xchg
and
push
cmp
and
xchg
xor
inc
ret
mov
or
lods
shlb
adc
seto
icebp
mov
sarb
stos
push
jmp
jne
loopne
ret
xchg
push
jge
enter
and
mov
mov
cmpb
jb
test
lret
jg
and
mov
lcall
dec
es
pushf
int3
ss
or
pop
adc
mov
inc
cmp
imul
cltd
scas
sahf
pop
jne
mov
clc
icebp
repz
lods
and
rcl
aad
push
mov
xor
int3
and
mov
dec
shlb
mov
inc
mov
fstps
ds
and
movsb
inc
cld
mov
aaa
ljmp
aad
xchg
jo
in
notl
push
mov
adc
movsb
sub
adc
dec
sub
add
or
add
mov
dec
lret
in
bound
lret
popf
pop
insl
mov
sbb
add
stos
dec
pop
pop
sbb
insb
ljmp
loopne
repnz
xlat
inc
mov
xor
mov
cwtl
dec
mov
add
mov
in
pop
sbbl
hlt
pop
in
add
and
dec
jno
scas
add
lret
inc
data16
xor
ret
and
sub
push
notb
fistps
fldl
dec
decl
into
pop
dec
xor
out
insl
loop
loope
jmp
cwtl
pop
cmc
mov
mov
hlt
dec
ret
sbb
sbb
pushf
dec
add
jecxz
inc
out
lea
movsb
adc
push
mov
aad
outsl
cmpsb
int3
mov
addr16
ds
push
sahf
cmp
test
repnz
lret
mov
inc
inc
fistpl
mov
lods
pop
sahf
and
les
and
sbb
shlb
sbb
and
loope
add
jl
pushf
or
jmp
mov
add
fimuls
mov
push
mov
inc
rolb
scas
mov
jb
mov
xchg
ret
outsb
mov
jns
outsb
inc
fsts
gs
mov
mov
ds
and
cs
inc
flds
js
xor
call
outsb
adc
push
cltd
jne
popa
adc
shlb
insb
jno
fcmovu
in
mov
loopne
clc
adc
add
cmpb
push
decb
ljmp
inc
lods
mov
int
cmpsl
out
int3
sbb
hlt
adc
xchg
test
pop
fucomp
clc
sub
xchg
int3
or
pop
jge
sahf
and
pop
inc
fidivrl
popa
lods
mov
add
mov
in
sbb
add
sbb
add
and
xlat
mov
and
enter
adc
cltd
or
pop
sub
sarb
or
pop
imul
addr16
popf
sahf
xor
out
mov
adc
jmp
insb
push
jl
lea
movsb
adc
mov
sub
dec
mov
mov
pushf
and
sub
into
xchg
gs
in
andps
aas
inc
lcall
out
in
jle
cmp
push
loope
cmpsl
repnz
sbb
mov
dec
jmp
adc
outsb
lea
inc
frstor
movsb
cmpsl
cmp
dec
outsb
push
jmp
or
aam
mov
outsb
add
mov
mov
push
orb
dec
ror
jp
das
cmpsl
pop
fwait
int
and
xchg
lret
fisttpll
into
and
dec
jno
mov
gs
cmpsl
sbb
loop
mov
add
xchg
lcall
inc
hlt
sub
adc
sti
jecxz
pop
sbb
cltd
aas
ss
xchg
lods
add
mov
dec
insb
dec
lea
lods
jecxz
pushf
loopne
bound
stos
cmp
push
sbb
and
icebp
ret
pushw
mov
and
lods
movsb
cmp
or
pusha
jae
in
movsb
addl
mov
xor
mov
lcall
ss
divl
push
fldl
stos
dec
xor
push
mov
dec
and
adc
lret
pushf
mov
xchg
xchg
bound
xchg
cmp
lret
sub
xlat
add
add
mov
fildl
push
adc
sub
push
mov
ja
or
add
jbe
insl
pop
daa
cwtl
lcall
adc
idivb
xlat
imul
int
push
cs
push
test
stos
int3
push
pop
jae
inc
jns
stc
insl
adc
cli
outsl
jns
imul
push
inc
sub
in
adc
lcall
and
out
lds
shrl
mov
arpl
popf
pop
jecxz
es
jecxz
gs
mov
ja
fisttps
cmpsl
mov
cmpsb
clc
rcll
test
cmp
data16
push
and
push
mov
cmpl
mov
push
sub
xor
inc
mov
cmpsb
xor
aaa
int
push
push
imul
ss
sub
or
and
jmp
pop
mov
cli
and
rol
sub
test
mov
imul
mov
dec
cmp
in
dec
fisubrs
adc
cmp
push
aad
jp
je
dec
pop
push
mov
fsubr
pushf
add
push
and
sub
cmp
je
lret
enter
adc
jno
jbe
lret
sbb
lar
leave
xchg
insl
jbe
mov
loopne
or
fs
popf
or
xor
js
movsb
mov
push
lret
stos
fldpi
fnstenv
sbb
rorl
call
jnp
adc
jb
xchg
sub
ljmp
les
dec
mov
push
lock
lret
mov
dec
and
aas
push
sub
sbb
js
mov
xchg
cmp
cmp
xor
add
inc
aad
mov
nop
ret
inc
cmp
insb
fwait
iret
mov
xchg
cmc
into
adc
xor
mov
dec
jno
fmull
orl
jge
push
cltd
incb
xor
xorl
in
jge
mov
adc
inc
cmp
push
call
push
inc
fxch
mov
mov
mov
jmp
shrl
sub
enter
pop
mov
xor
test
and
fs
jne
and
stos
in
cmp
lahf
push
iret
aam
inc
addr16
mov
add
cmpsl
sbb
sbb
jecxz
sub
inc
test
dec
daa
lcall
subb
shlb
aaa
push
jo
daa
cmc
repz
insl
push
adc
mov
movsl
cld
stos
sub
jo
cmp
lcall
cmp
dec
aaa
inc
sub
fiadds
mov
icebp
mov
jns
inc
fisubs
add
mov
enter
cmpsb
and
repz
mov
mov
inc
mull
testb
notl
scas
ret
mov
jb
sub
bound
ljmp
jb
or
divb
cltd
imul
int
add
lcall
shrl
push
jecxz
mov
mov
in
push
or
adc
sarb
roll
out
ss
or
adc
xor
cmp
adc
ror
pop
fsts
hlt
mov
outsb
xchg
mov
adc
sub
hlt
pop
out
sbbl
cmovae
aam
sti
leave
out
in
out
sbb
ret
mov
xor
mov
add
push
and
jge
orl
push
clc
or
lret
ficoml
cmp
scas
sub
push
sbb
lahf
lret
cld
xor
mov
aas
adc
into
pop
dec
jecxz
sub
out
sti
push
incl
and
mov
xor
mov
jne
inc
push
dec
pop
ret
jnp
mov
mov
stc
js
fdivl
mov
dec
push
mov
pop
popa
lds
daa
inc
pushf
and
fisubl
mov
popf
nop
ja
dec
jge
mov
scas
mov
jns
or
and
jmp
inc
cmc
cmc
xor
mov
mov
cwtl
mov
pop
push
loopne
loop
push
mov
push
add
dec
add
test
mov
stos
jnp
loopne
add
aam
xor
daa
lods
xchg
pop
sub
jbe
and
jns
xor
add
inc
aad
dec
dec
test
scas
sub
pop
adc
gs
inc
jne
lea
fs
pop
addr16
cmp
pop
sub
rorb
mov
adc
in
pop
shlb
dec
inc
fstps
pop
mov
hlt
insl
sbbl
loopne
out
std
mov
adc
sub
or
daa
xchg
mov
add
or
loop
lea
dec
pop
cmp
push
jne
cwtl
cmpsb
mov
sbb
popf
pop
push
jo
mov
ret
mov
hlt
repnz
call
in
outsl
out
jb
mov
mov
sarl
clc
nop
pop
push
fistpll
jne
sti
cmpsb
add
mov
ret
xor
xchg
hlt
cmp
jmp
shlb
mov
daa
push
xchg
adcb
xor
jae
repz
aad
sahf
stos
inc
mov
enter
sbb
cmpsl
lahf
dec
push
xchg
xchg
daa
adc
sub
xchg
cwtl
das
sbb
scas
xchg
mov
subl
enter
mov
pop
hlt
roll
inc
push
ret
mov
loopne
enter
xchg
cmp
dec
mov
cmp
popa
jnp
flds
mov
or
pop
push
sub
mul
mov
outsb
sbb
ljmp
mov
jnp
jno
push
ficoml
or
dec
dec
or
xor
sub
xchg
cmp
inc
std
mov
movsl
pusha
not
xchg
xchg
inc
inc
inc
jle
jae
or
push
aad
xor
and
stos
xor
sbb
and
or
xchg
std
imul
clc
jecxz
out
cmpsl
leave
int
loopne
inc
es
int3
data16
xchg
mov
mov
sbb
xchg
jmp
rep
in
adc
push
aad
je
xchg
insl
sub
cmp
pop
xor
and
mov
mov
cmp
cmp
sbb
pop
lds
add
stos
mov
popa
mov
pop
int
fimull
ror
pop
lahf
stc
fldt
mov
imul
inc
pcmpeqb
dec
subl
and
rorl
jmp
jmp
inc
pop
xor
dec
out
jle
gs
sbb
test
outsl
loop
or
jmp
adc
add
jp
std
sub
inc
jb
push
mov
xchg
in
incb
cli
pop
jl
andl
popf
in
mov
les
cmp
sahf
dec
cmp
stc
xchg
call
sahf
and
and
xchg
mov
pop
jbe
das
addr16
jle
int3
jno
mov
adc
ret
dec
cmp
sti
fwait
into
aam
mov
sbb
fcompl
and
cmp
mov
mov
dec
jns
and
jle
sahf
ja
repnz
mov
adc
cmc
sbb
jne
rolb
and
push
aam
xchg
test
insb
or
shll
mov
ss
ret
jl
sub
clc
mov
mov
fisttps
sbb
add
insb
xchg
mov
rorl
push
jmp
test
mov
in
push
pop
jge
xor
mov
jg
movsl
push
or
or
pushf
sub
data16
cltd
push
ss
sub
or
xchg
jns
pop
shl
mov
fwait
inc
std
sbb
std
push
xor
xchg
ds
clc
out
or
mov
or
fwait
lock
imulb
shrl
jp
aaa
lcall
sar
dec
or
mov
test
sbb
std
mov
or
cmc
xchg
jno
cmp
fldl
push
or
scas
insl
ficoml
add
xor
jne
imul
mov
jbe
jae
stos
xor
hlt
insb
mov
lds
xlat
ljmp
or
enter
jmp
cltd
xor
out
test
cmp
mov
outsb
sahf
jns
sub
adc
inc
lret
insb
push
jmp
and
repz
rorb
daa
xchg
add
adc
mov
pop
out
clc
test
fwait
stos
xor
popf
daa
ret
jmp
cmp
pop
xor
add
inc
hlt
pop
fidivl
loope
clc
cltd
imul
xchg
gs
je
vpcomb
mov
xor
jge
lret
mov
adc
or
xorl
jl
adc
aas
stos
lock
ret
lods
sbb
mov
sbb
jae
and
pop
adc
adc
lea
lock
xor
cmc
mov
cmp
in
dec
in
call
mov
sbb
add
push
rol
mov
mov
in
adc
and
bound
jns
jno
mov
mov
imul
dec
cmc
inc
mov
push
movsl
push
bound
inc
cmpsb
cmp
sub
sahf
dec
pop
test
clc
push
or
test
jle
sub
mov
xchg
setg
push
xchg
mov
outsl
loop
xchg
shl
inc
inc
clc
aaa
lahf
adc
imul
mov
jge
xor
lock
jno
outsl
addr16
and
mov
xchg
sub
mov
xor
iret
data16
dec
arpl
aaa
push
imul
into
pop
sub
lret
cld
push
arpl
ret
inc
rol
push
mov
sti
fwait
outsl
movsb
xchg
int3
jge
and
popf
adc
xchg
push
jp
loopne
xor
lods
mov
mov
cmovb
pop
mov
dec
dec
jae
inc
fistpll
lods
push
in
loop
jns
jae
sub
cmp
push
inc
sbb
mov
mov
das
cmp
leave
mov
shl
in
jns
fisubs
ret
gs
clc
out
adc
lock
mov
inc
orb
mov
test
nop
pop
inc
sti
xchg
gs
ds
push
jo
push
ljmp
jno
fs
push
sub
xchg
mov
in
adc
lcall
jle
test
adc
inc
std
adc
jmp
mov
xchg
and
adc
addr16
repnz
xor
jo
pop
xchg
fidivs
push
insb
sarl
mov
sbbb
mov
jle
and
les
pop
xor
push
leave
push
jecxz
mov
mov
sub
adc
and
push
leave
xlat
outsb
cld
cmc
rorb
sti
sub
lea
pop
inc
mov
pop
adc
addr16
cwtl
clc
or
mov
flds
jns
xor
cltd
iret
lea
mov
in
inc
adc
push
xor
mov
jo
mov
ds
jge
sub
and
inc
lahf
xorl
sbb
std
int
iret
add
jp
lods
push
or
cmp
and
dec
mov
jge
sub
and
and
andb
sub
jo
cmc
mov
lds
cld
ljmp
imul
out
mov
aam
arpl
xchg
and
insl
hlt
and
outsl
loop
push
or
xor
insl
push
jns
dec
or
and
ret
cmp
xchg
call
nop
add
and
std
mov
push
data16
xchg
xor
int3
sbb
adc
idivb
icebp
in
sbb
xor
fcmovu
jbe
lcall
call
cmp
or
jb
push
pop
movsl
sbb
and
sub
xchg
andb
in
cmp
sub
repz
movq
cmp
scas
add
rorl
cwtl
testl
sub
xchg
mov
movsb
arpl
xor
mov
out
inc
jne
mov
push
push
js
inc
pop
mov
test
movb
inc
xor
test
sbbb
cli
sbb
xor
mov
cwtl
or
add
in
mov
filds
xchg
mov
push
call
cld
repz
int3
stc
out
sub
xorb
xchg
in
lret
sub
in
dec
scas
out
leave
push
xchg
ret
test
jmp
mov
inc
icebp
pop
or
inc
pusha
cmp
mov
rcrb
pop
push
sub
adc
pop
push
xchg
cmpsl
or
or
sbb
xor
es
and
and
xor
mov
mov
std
nop
je
rorb
addb
xchg
les
cmp
jmp
scas
lea
push
call
repz
negb
leave
add
mov
lss
mov
test
mov
fistps
lea
and
mov
add
stc
nop
lahf
sarb
inc
dec
es
imulb
imul
bswap
and
mov
or
dec
or
mov
xchg
sarb
push
stc
push
sahf
xchg
and
and
pop
insb
fwait
xchg
push
mov
cmpsb
ljmp
mov
mov
mov
dec
add
jmp
adc
in
scas
mov
stos
ljmp
mov
shrb
repz
mov
push
mov
popa
iret
pop
adc
jns
sti
mov
jb
je
imul
push
inc
in
add
andl
fwait
adc
mov
stc
jecxz
enter
adc
ljmp
inc
icebp
out
xchg
sahf
xor
inc
fisubl
in
add
pop
adc
jne
hlt
inc
lret
xchg
cltd
jl
mov
test
mov
int
jecxz
ss
jbe
push
jl
xor
dec
dec
aas
push
jge
stos
and
dec
cs
addr16
ret
out
xor
jle
push
popa
je
shrb
inc
ret
inc
stc
jmp
cmp
push
sub
daa
push
das
fdivrp
sub
add
lcall
orl
add
mov
in
inc
stos
fs
dec
pop
js
and
xchg
mov
jle
push
add
sbb
sub
fld
push
jnp
mov
cmc
jl
mov
sbb
cmc
dec
dec
adc
xor
idivl
in
xchg
lcall
dec
sub
jo
js
fistl
hlt
or
std
mov
dec
cmp
mov
ss
cmpsl
push
xor
adc
sbbl
pop
test
inc
mov
outsl
push
das
jo
push
mov
inc
pop
pusha
pop
das
mov
xlat
ss
adc
xlat
or
pop
and
mov
mov
fdivs
mov
popa
lcall
pushf
add
addb
scas
jp
shlb
loopne
leave
cmc
xchg
sti
lret
push
xlat
test
es
jp
lods
mov
jge
imul
test
push
scas
pop
inc
pop
dec
jmp
js
sub
repnz
mov
shrl
popa
xor
mov
push
call
fdivrl
dec
add
mov
jbe
mov
lret
fsts
pushf
mov
push
imul
add
mov
js
dec
sub
jp
xchg
stos
imul
lret
lret
fsubs
mov
into
lds
pop
jb
clc
pop
test
cmp
stos
xchg
clc
sahf
lods
iret
mov
sbb
sub
cmp
xor
lahf
icebp
mov
pop
cmp
inc
add
flds
in
ret
sarb
sbb
mov
js
sbb
add
mov
inc
int3
ficoml
adc
pop
loope
pop
sahf
dec
dec
aas
aam
cmpsb
xor
cwtl
push
bound
push
enter
xchg
dec
cmp
fst
pop
paddq
cmc
mov
xor
jle
dec
cmp
in
inc
stos
mov
inc
mov
test
mov
push
pop
enter
jge
jno
fwait
movsb
pop
or
dec
dec
fcmovb
fcomip
mov
push
dec
mov
jmp
xchg
fwait
xor
jge
lock
out
in
cmp
and
dec
mov
inc
mov
mov
cmp
rcl
les
lock
inc
mov
rolb
jae
or
repz
insl
add
mov
mov
leave
int
xchg
scas
fucomi
das
insb
pop
movsl
push
sub
xchg
cmp
mov
lock
out
stc
adc
hlt
rclb
cmp
insl
inc
fld
outsb
cmpl
lea
sub
int
xorl
pop
stos
or
test
and
sbb
lret
sbb
das
das
das
inc
xchg
cli
xor
por
pop
sub
cmp
mov
cwtl
inc
xor
xchg
std
pop
aam
je
inc
subb
sbb
xchg
jo
cmp
mov
mov
test
sbb
fwait
popa
adc
mov
dec
pop
aaa
out
inc
or
lret
inc
push
enter
pop
xor
repnz
gs
mov
or
mov
xchg
fmul
dec
xchg
mov
push
lods
jo
stc
int3
pop
cmpsb
stos
test
sub
mov
roll
xchg
mov
push
cmpsb
sbb
loopne
test
mov
pop
je
ss
frstor
mov
cmp
bndstx
and
sbb
int
push
push
or
or
sbb
xor
add
push
push
mov
test
mov
jg
dec
clc
adc
pop
push
add
push
in
out
stos
icebp
mov
lcall
push
xor
outsb
jmp
jmp
in
xchg
and
xorl
pop
jmp
push
cli
ret
mov
cmp
jae
mov
cmp
mov
push
add
push
icebp
inc
cwtl
ljmp
movsb
mov
pop
cmp
insb
mulb
or
push
cmpsl
inc
or
add
aas
push
xor
cmp
fidivrs
jns
jo
pop
xchg
call
or
into
cli
jo
jge
rcll
mov
sarl
pop
sbb
inc
dec
pop
push
dec
jo
imul
pop
cmp
repnz
rorl
pop
xor
pop
and
cmpb
push
xor
inc
shlb
cltd
mov
out
push
test
dec
lock
enterw
sbb
or
pop
lods
mov
in
xor
push
or
mov
movsb
gs
sar
push
mov
or
dec
cmc
jg
es
mov
mov
lea
mov
insl
push
outsl
adc
pop
cmpsb
cmp
mov
movsl
nop
mov
jg
rorb
push
out
ficoms
pop
adc
lods
ret
xor
xlat
inc
pusha
add
lods
ljmp
es
fidivl
mov
push
enter
test
jae
lea
dec
adc
dec
aas
sbb
data16
test
pop
jbe
test
lret
sti
xchg
cmp
push
mov
pop
mov
fwait
mov
pop
mov
mov
stos
inc
jb
or
lahf
mov
ror
jns
shl
imul
andb
cwtl
xchg
out
decl
pop
dec
ja
push
in
add
dec
in
push
sub
aas
fstpt
cmp
nop
pusha
and
mov
inc
cmp
push
loopne
fmull
arpl
mov
daa
lock
ret
mov
and
jns
call
lret
adc
je
adc
push
xlat
cld
jae
repnz
das
test
xor
or
icebp
divb
lock
adc
mov
je
bound
icebp
hlt
int3
or
aas
and
out
mov
ja
xchg
mov
mov
sub
stos
data16
adc
insl
mov
insb
xlat
sub
or
test
sbb
ret
sub
test
push
mov
pop
arpl
ret
mov
lret
sahf
ja
push
inc
popf
mov
ret
push
cmp
mov
dec
mov
push
jge
or
lcall
and
mov
cmp
leave
pop
sub
js
and
insl
sbb
add
pushf
jmp
scas
add
repz
xor
sbb
fcmovb
jl
call
in
add
or
dec
mov
pop
inc
xchg
stos
pop
rcrl
xchg
int3
sbb
enter
cmpsl
and
sbb
pop
xor
aam
leave
movsl
xor
ljmp
out
repz
lret
fstpl
xchg
adc
lahf
sbb
adc
or
and
xchg
mov
push
insb
pop
cld
and
test
int
sub
jno
shrb
iret
mov
sbb
xor
loop
inc
push
sub
int3
in
xor
sbb
ret
stos
mov
das
jo
sub
imul
mov
cmp
outsl
pushf
jge
sbb
push
inc
adc
js
lods
jo
push
outsl
js
in
ret
sbb
loop
cli
test
mov
sbbl
inc
insb
rcr
faddl
push
pop
lods
jecxz
fidivrs
add
lahf
sbb
push
data16
or
push
push
test
pop
mov
jno
mov
inc
in
aas
jg
sub
movsb
jnp
or
lea
cmpl
mov
xchg
xor
push
push
mov
cmp
fiadds
cmp
gs
sub
push
lods
inc
jge
fidivrl
xor
mov
imulb
fidivrl
aam
stos
pop
rcrb
hlt
mov
cwtl
daa
in
ja
call
or
inc
lcall
call
dec
jno
fxch
gs
xchg
jmp
imul
mov
ds
sbb
sub
sbb
mov
fidivs
or
xor
cmp
repnz
mov
movl
lcall
cmpsl
add
add
insb
xchg
pop
mov
sbb
insb
push
push
jmp
jge
add
popa
sbb
mov
addl
xor
fidivrs
jecxz
xchg
jmp
mov
lret
adc
sub
call
pop
dec
mov
lods
adc
mov
add
mov
std
pop
int
sbb
fucomi
cmpsb
les
cmp
fidivrs
shrl
mov
inc
popl
out
sbb
ljmp
mov
loopne
pop
xchg
ljmp
xor
cmc
cmc
pop
dec
jne
dec
test
dec
inc
jecxz
add
pop
scas
stc
push
add
in
ja
ret
pop
movsb
out
lret
cmp
cmp
jmp
pushf
xor
int
mov
loopne
add
aam
mov
fbld
adc
jne
and
lcall
loope
lock
pop
notl
push
jmp
push
cmp
pop
or
cld
int3
shll
cltd
cmpsl
clc
xchg
xor
cmc
xlat
jmp
shll
std
cmpb
shl
xchg
or
mov
adc
sahf
push
gs
mov
out
ret
jae
or
or
nop
or
mov
xor
adcl
nop
out
add
xchg
icebp
mov
roll
lahf
cmpsb
pop
sbb
and
shlb
out
inc
sub
xor
dec
pop
adc
out
out
out
mov
aaa
enter
jae
shl
push
pop
lea
pop
xorl
gs
dec
or
xchg
and
dec
fldt
int
les
and
and
mov
das
gs
mov
lock
inc
jg
hlt
sbb
mov
push
test
mov
dec
in
fimull
or
sub
fnsave
adc
mov
add
xlat
or
lock
xor
loop
xor
add
out
jge
testl
dec
xor
jl
setp
add
xchg
mov
push
lcall
push
or
in
lods
ljmp
call
sub
js
pushf
rcll
testb
push
add
xor
in
mov
loopne
fadds
enter
xor
jmp
mov
or
aad
hlt
cmc
or
xchg
icebp
jl
arpl
xor
jmp
std
push
mov
ss
js
cmovg
aas
in
sub
push
stc
out
out
xchg
push
push
add
rorl
mov
imul
jnp
mov
inc
mov
xchg
test
testl
mov
je
fdivrs
cwtl
push
and
arpl
inc
fldl
mov
push
mov
in
aaa
xchg
idivl
mov
je
and
jl
jmp
pop
lds
and
popa
xchg
out
lcall
mov
sbb
ja
lock
sbb
mov
shrl
jmp
repnz
add
sub
cmp
mov
xchg
fbstp
pop
inc
pop
into
popa
xor
aam
ss
mov
push
inc
inc
pop
cmp
ret
sub
sbb
sbbb
push
jecxz
das
repnz
add
mov
iret
xorb
in
repnz
aam
or
in
push
dec
mov
out
push
push
rcl
ror
mov
push
int
fsubl
sub
inc
cmp
jp
insl
fcomp
das
mov
add
push
vshufps
add
fdivrl
jle
int3
mov
sbb
adc
sbb
movsl
cwtl
in
mov
orb
push
mov
mov
test
and
popf
std
jne
xor
mov
and
or
push
inc
sahf
mov
inc
or
cmp
sub
push
adc
jge
or
xchg
adc
scas
sbb
arpl
lds
cmp
out
popf
mov
cmp
fcompl
lcall
bound
lock
dec
lret
mov
lea
fsubr
dec
data16
push
cmp
xchg
jb
mov
lcall
popa
jno
xadd
jnp
adc
or
jecxz
and
sub
xlat
xor
arpl
add
add
jle
xlat
pusha
xchg
jb
push
jnp
xor
push
insl
into
push
push
cmpps
cmp
lea
rcll
mov
pusha
add
cmp
mov
jno,pn
push
rol
push
xor
cwtl
adc
cli
inc
movsb
mov
xchg
lcall
mov
adc
mul
add
and
rcrl
fistl
mov
pop
imulb
add
lcall
cwtl
pop
jg
lahf
es
clc
lea
inc
jbe
add
push
cwtl
int
inc
lods
pop
dec
test
rclb
out
lahf
stos
popa
sub
shrl
ds
repnz
dec
dec
in
mov
int
cmp
add
in
cmpsb
ret
dec
cwtl
mov
inc
andb
mov
mov
sub
add
je
add
lock
sub
jno
xchg
or
xchg
and
orb
xchg
xchg
adc
pop
jl
int
cmp
mov
cwtl
adc
insb
sti
cltd
sbb
jmp
mov
in
pop
mov
jle
out
test
lahf
out
mov
pop
mov
push
cmovge
cmpsb
pop
ror
sbb
outsb
and
cmp
inc
xor
pop
cwtl
cltd
push
cmc
nop
push
push
fdivr
lods
into
test
push
mov
data16
movsl
jbe
cmp
sti
dec
and
fidivl
push
popf
ror
or
dec
in
andl
sbb
add
dec
push
mov
push
cltd
pop
add
dec
mov
je
enter
xchg
pop
pop
sub
push
mov
mov
add
dec
cmp
test
pop
inc
fsubrs
mov
icebp
sub
test
cmpsb
jl
test
cmpsb
push
js
adc
adc
sbb
test
mov
ss
sbb
popf
fstl
sbb
aaa
dec
out
insl
jge
mov
ds
xorl
sbb
xchg
clc
jl
out
fnstcw
push
push
es
add
ja
add
inc
loopne
inc
cmp
or
out
fldcw
std
mov
push
cmp
or
and
sbb
test
mov
adc
enter
jno
test
lret
push
rol
repz
mov
xchg
movl
stos
mov
cmp
mov
scas
xchg
jmp
movsb
dec
inc
les
pop
mov
xchg
ret
ds
jnp
sahf
inc
xor
add
ficompl
jno
or
xchg
and
movsb
mov
jbe
lods
mov
jbe
fcoml
inc
jmp
push
xor
xchg
mov
cmc
add
mov
inc
jo
jle
lret
cmpsb
std
or
fwait
xlat
scas
rsm
mov
or
mov
pushl
outsb
mov
adc
push
popf
push
outsl
ja
xchg
jge
adc
add
repnz
outsb
and
pop
jmp
aaa
roll
mov
cmp
rolb
sahf
pop
aaa
pop
ss
mov
lret
fldt
push
cmp
jns
push
cmpl
fidivs
adc
jge
int
rcr
shll
mov
pop
pop
int
mov
adc
jge
jbe
dec
jle
ret
sbb
inc
mov
jmp
test
pop
sahf
arpl
inc
hlt
fcompl
shr
mov
mov
scas
mov
mov
cmp
test
cmp
scas
pop
dec
imul
subl
sub
adc
jge
pop
pop
add
xchg
ret
in
sbb
push
aad
adc
sub
xor
in
andl
or
hlt
insl
or
add
mov
inc
cwtl
jb
aas
mov
scas
sbb
jge
insl
mov
xor
fdivl
in
mov
mov
cmc
mov
sbb
mov
mov
mov
cmp
fs
not
sbb
enter
iret
add
push
push
mov
test
dec
and
test
push
add
or
sbb
in
add
pop
xchg
xor
dec
mov
dec
scas
out
xchg
jl
sub
lahf
jle
bound
pop
pushf
jno
mov
aam
pushf
pop
xchg
aad
outsl
lahf
dec
dec
pop
xlat
sbb
pop
sbbb
push
dec
cmpsl
push
das
test
stos
push
pushf
xor
out
push
mov
lods
lds
fdivs
xchg
mov
rcrl
jmp
fs
clc
inc
ret
sub
ds
cltd
and
cmp
in
aaa
lret
repz
sub
test
daa
jns
shlb
xor
icebp
into
mov
les
mov
push
popa
aas
xchg
push
dec
insl
push
xor
add
hlt
addr16
pop
fsubs
mov
sahf
mov
cmpsl
pop
mov
movsb
ret
dec
xchg
xorl
jge
push
mov
aam
push
sub
fldenv
mov
gs
call
fisubs
pusha
das
xchg
inc
out
xor
sub
add
adc
pop
js
cmpsb
and
arpl
in
cmp
push
sti
cmpsb
popa
not
sbb
ret
push
mov
movsb
rcrl
and
jae
bound
popf
fs
lcall
fimull
mov
xchg
fwait
mov
xchg
jp
adc
sub
xchg
jns
decl
mov
sbb
cmp
or
cmp
mov
mov
sti
adc
xchg
addr16
cmp
in
jp
shrl
add
icebp
adcl
ljmp
pop
sahf
inc
add
shll
push
mov
js
in
std
push
mov
or
lret
and
xchg
sbb
test
jne
outsb
mov
xor
insb
jg
cltd
aaa
into
lret
mov
shrl
or
adc
insb
jne
inc
in
jg
xor
test
mov
lret
sbb
adc
mov
sbb
inc
leave
rcrl
mov
and
sub
mov
cwtl
hlt
jl
push
pop
outsb
push
pop
ret
push
add
outsb
sarl
xchg
sti
divb
mov
push
pop
xorb
pusha
es
xchg
or
jne
lahf
push
loopne
sbb
xchg
in
les
push
loopne
shll
inc
sbb
repz
shlb
sbb
jae
xchg
push
inc
bound
popa
sbb
ret
rorb
fbld
lods
ret
fsubr
lds
sub
add
jg
bnd
mov
add
xchg
insl
dec
dec
mov
fsubr
adc
loopne
sub
inc
ret
cs
cmp
mov
jmp
add
or
xor
sub
les
mov
pop
jne
lods
mov
sub
dec
jge
cmc
aas
icebp
pop
rcrb
mov
fiaddl
mov
xchg
jg
xor
xor
cmp
sub
icebp
mov
popf
cmp
and
test
in
jp
cld
and
sub
inc
inc
popf
cli
push
and
inc
dec
pop
arpl
xor
iret
push
test
test
scas
push
stos
sarl
mov
dec
add
stos
and
inc
repz
pop
icebp
add
into
jae
lret
adc
out
hlt
sbb
jae
sub
sarl
stos
push
push
inc
dec
repnz
dec
js
inc
jno
fldenv
test
ljmp
rcrb
push
dec
int
pop
ljmp
xchg
pop
add
in
aam
push
std
xchg
out
int3
ja
mov
mov
sarb
mov
ret
outsb
mov
outsb
jmp
cmpsb
add
std
inc
pop
xchg
cld
arpl
xchg
inc
or
leave
jne
adc
push
dec
and
ds
leave
repz
push
imul
xor
mov
push
cmp
ret
aad
out
pop
mov
cmpsb
shrl
push
sti
xchg
mov
lods
cmpsb
xor
aaa
push
mov
mov
xor
loopne
insl
cmpl
mov
or
mov
sbb
fcomi
sbb
jl
loopne
cmc
stos
mov
xchg
sbb
jo
adc
mov
mov
mov
std
jl
cmp
cltd
dec
push
rdmsr
lds
ja
sbb
dec
sbbb
inc
lods
push
inc
test
xchg
push
outsb
xor
fcomip
push
sahf
addr16
add
dec
add
or
mov
mov
or
cmpsb
xchg
add
mov
push
push
mov
push
arpl
scas
lahf
mov
cmpsl
mov
jno
call
push
jg
sbb
hlt
movsb
pop
ljmp
push
popa
sub
mov
movsl
fdivl
dec
add
jbe
cmp
dec
jl
xor
xchg
and
mov
mov
das
sbb
mov
jno
mov
shll
and
pop
add
xchg
dec
ffreep
fs
adc
leavew
xrelease
xor
xchg
jbe
lds
add
inc
andl
subl
inc
outsb
push
and
and
ds
mov
push
and
dec
mov
dec
xor
dec
and
out
test
mov
fisubl
lret
frstor
fidivl
add
push
xchg
pushf
cli
idivb
mov
nop
test
dec
sbb
sub
lds
xchg
cmp
push
out
ja
xor
fisubs
clc
mov
jge
outsb
xchg
mov
sub
push
in
sarb
xlat
adc
or
addr16
and
cmpsl
push
xchg
sbb
repnz
add
mov
and
aaa
ss
push
push
inc
mov
movsb
fnsave
sub
ss
addr16
enter
test
push
test
stos
or
dec
or
add
sar
sub
mov
mov
scas
ds
push
xor
dec
aas
jge
and
subl
int3
lret
jg
inc
popa
mov
mov
add
jmp
in
in
adc
lcall
es
test
test
pushf
mov
pop
lds
adc
push
mov
sbb
jecxz
sbb
xchg
mov
aaa
mov
cmpsb
imul
mov
add
mov
sbb
and
add
pop
mov
sbb
mov
addr16
imul
insb
scas
push
cmp
into
fildl
jge
popa
int
cmp
repnz
inc
pop
rolb
sub
xchg
dec
push
add
push
rcll
pop
jae
bound
call
sub
iret
fsubrl
xor
pop
test
lret
loop
cs
mov
sti
in
xchg
dec
xchg
nop
das
mov
in
je
loop
scas
inc
leave
mov
pushf
dec
pop
std
stos
es
mov
mov
sbb
popf
add
int3
dec
lds
out
dec
pop
push
jbe
in
cmp
xor
xor
xchg
sbb
test
aas
cmp
lcall
test
add
mov
jecxz
xchg
cmp
shlb
dec
mov
push
lahf
mov
push
orl
cmp
jle
mov
xchg
lock
ret
pop
insb
daa
adc
into
addr16
dec
push
inc
push
or
mov
push
mov
mov
rcr
insl
xchg
mov
push
cmp
imul
inc
aam
stos
mov
fistps
add
int3
test
lret
frstor
adc
dec
repz
pop
xchg
cld
fwait
ret
xor
dec
cmp
add
subl
cmp
data16
sti
xchg
stc
and
paddusw
mov
jle
or
jg
push
and
dec
fidivs
pop
lock
gs
test
mov
testl
mov
add
repnz
or
cmp
pop
adc
mov
cmp
lahf
lret
std
pop
imul
mov
jo
push
clc
xchg
lds
in
jg
out
scas
adc
push
sahf
sub
dec
push
xor
or
jle
cmpsl
scas
sbb
sub
data16
mov
mov
lea
imulb
fwait
jae
lret
xchg
data16
pushf
jnp
rclb
xchg
add
pop
push
ficoml
sub
inc
sti
xlat
sub
lahf
add
iret
icebp
sarb
adc
cmpl
inc
test
pusha
faddp
sbb
cltd
mov
mov
mov
cltd
leave
xchg
imul
mov
mov
das
sub
or
rcll
int3
arpl
jo
fxch
jno
test
and
mov
mov
sbb
dec
jns
pop
cwtl
je
int
mov
mov
push
push
jb
or
xor
mov
jmp
pop
xchg
cmpsb
andl
mov
idivl
jmp
inc
rcrl
inc
fldcw
pop
adc
mov
cmp
xor
dec
ret
jp
aaa
xchg
sub
ljmp
inc
add
arpl
mov
or
mov
pop
arpl
pusha
ss
cltd
sub
test
xchg
ficompl
aad
or
popa
xor
ret
fldt
bound
aam
testb
add
pop
mov
cli
jl
repnz
dec
mov
cli
pop
lds
mulb
cmp
cmp
lock
or
pop
mov
enter
sbb
inc
push
xchg
mov
jno
xchg
pop
scas
ret
out
pop
fiadds
push
and
xchg
jle
xchg
inc
push
sbb
sbb
add
outsl
lods
xchg
ficoms
dec
inc
inc
popa
clc
jae
sub
sbb
xchg
fdivrs
aad
and
pop
and
ss
add
push
in
mov
or
sti
sub
fistpl
fimull
cmpsl
popa
sbb
push
push
in
dec
cmc
adc
arpl
cmc
out
test
rcl
outsb
iret
loope
repz
test
lret
shrl
xchg
fidivrs
pushf
or
add
xchg
mov
pop
mov
enter
push
mov
mov
fsubl
mov
cld
into
inc
fstpt
sbb
test
fisttpl
mov
fldcw
cmp
push
mov
pop
scas
inc
jbe
daa
js
jge
in
push
lods
sub
push
xor
fisubs
shr
insl
lahf
xlat
test
or
pop
outsl
outsl
movsb
or
push
add
cmp
stc
nop
mov
sub
mov
mov
mov
out
roll
dec
mov
add
sub
inc
xchg
pop
notl
dec
loope
xchg
dec
out
js
in
sbb
rcrl
jp
pop
sub
lcall
push
popa
jnp
sbb
mov
mov
cwtl
inc
dec
lcall
test
inc
mov
dec
dec
cli
xchg
jae
lcall
into
lcall
mov
mov
popa
mov
cmpsb
es
sbb
mov
lret
sub
punpckldq
pop
ss
and
jnp
ds
inc
jo
sete
cmp
lds
out
pop
pop
mov
push
jmp
daa
sbb
jge
or
int
sbbl
and
call
repnz
jo
aam
push
push
dec
or
jp
sub
addr16
cltd
sbb
iret
sahf
jne
and
inc
in
std
aam
cmp
fldenv
sti
mov
test
inc
imul
push
cmp
or
add
push
dec
repz
or
xlat
scas
or
sbb
or
pusha
rcrl
push
jae
xor
sub
mov
mov
pop
mov
cld
cmp
inc
adc
xchg
fadds
lods
fwait
imulb
out
sub
and
rcl
stc
push
gs
mov
addr16
and
andb
outsb
cmc
mov
jno
fisubl
popa
sarl
push
lcall
push
dec
and
decb
lods
icebp
arpl
push
aad
addr16
or
mov
andb
jl
jecxz
sarb
js
mov
mov
push
fidivrl
les
out
dec
bound
test
or
jno
adc
jno
cwtl
push
mov
add
fdivl
pop
icebp
ja
rcr
in
fdivr
pusha
or
lahf
and
jl
fldcw
add
xchg
iret
fisubl
out
push
fcoms
pop
xlat
cmpl
dec
mull
aad
or
cmp
dec
push
loope
xchg
daa
or
cmp
dec
sahf
mov
xchg
and
jne
xchg
xchg
sbb
cmp
iret
aad
add
loop
sub
repz
push
dec
sbb
fldl
out
mov
jmp
xchg
xchg
xor
fisttps
sbb
or
push
sbb
add
lods
xchg
loope
into
ljmp
push
jg
sbb
les
cmp
sti
push
repz
enter
push
mov
cmp
pop
sbb
jl
add
out
inc
mov
ficoml
into
add
sahf
mov
jl
cs
or
jmp
cli
lods
test
jge
iret
andb
pop
push
out
or
dec
dec
insb
push
cli
aad
or
mov
insb
scas
ret
sub
mov
inc
das
pusha
inc
mov
dec
or
cmp
ds
xchg
push
cmpsl
push
adc
aad
outsb
dec
adc
jge
scas
xor
mov
mov
mov
mov
dec
in
push
testb
adc
push
inc
xchg
xor
mov
lcall
ljmp
es
fdivl
push
mov
lock
andb
arpl
sahf
sbb
outsl
mov
movsl
mov
or
push
and
es
jl
mov
std
stos
bts
sub
int3
xchg
dec
mov
mov
idivb
jnp
sub
pop
inc
mov
mov
out
clc
fnstsw
lcall
push
roll
inc
int3
mov
mov
outsl
fisubl
dec
pop
adc
sahf
xsha1
cmpsb
iret
sub
mov
cmp
lret
sti
jbe
stos
shrl
cltd
leave
mov
mov
adc
iretw
fisttpl
fsubl
mov
or
xlat
sbb
nop
inc
pop
sahf
jne
mov
jl
mov
rolb
pop
out
jl
rorb
inc
inc
xchg
shll
mov
cmp
fcoml
pop
dec
fistpl
icebp
xchg
xor
mov
and
adc
add
stos
daa
in
xor
ja
sub
sub
xor
pop
and
jb
aas
stc
aaa
sbb
sbb
pop
ret
ret
repz
fs
insl
jge
jae
sti
push
jp
lahf
and
mov
test
call
pop
mov
push
pop
jmp
cmp
xchg
and
movsb
test
mov
mov
or
daa
sti
sub
jle
es
adc
or
and
cmp
inc
push
out
pop
fwait
imul
loopne
or
mov
lcall
cmpsb
inc
mov
shl
stc
xchg
loope
dec
sbb
lcall
and
cmpb
add
push
jecxz
pop
dec
aad
arpl
stc
stos
cmpsb
mov
or
enter
mov
std
lcall
ja
xorps
pushf
bound
pop
jmp
mov
negl
fdivp
jne
and
aas
push
jb
fsubs
adc
lret
xchg
insl
fstl
icebp
fucom
fcoms
int
shl
xor
fnstcw
in
gs
loopne
mov
sti
inc
xor
xor
cltd
lock
lret
sbb
jae
push
add
xor
inc
inc
jo
and
xchg
cmp
mov
std
xor
rcrl
and
js
js
sbb
xor
push
xor
push
inc
lods
xchg
sub
jns
lods
xchg
gs
adc
cmp
and
cmp
inc
sbb
stos
inc
mov
jge
pop
dec
cmp
in
mov
mov
and
jo
int3
jae
lea
or
scas
call
mov
bound
pushf
popf
daa
adc
repnz
and
es
and
inc
lods
mov
fistps
repnz
sbbl
mov
shrl
and
or
push
sahf
ss
testb
arpl
cmp
dec
mov
jo
fiaddl
mov
mov
jns
dec
ss
imul
pcmpeqb
jecxz
jns
test
scas
mov
notb
and
push
les
fildl
push
rcll
ds
call
stc
inc
fdivrs
sbb
inc
xor
or
std
pop
inc
data16
jne
loope
dec
push
insl
in
push
xchg
inc
aaa
lret
mov
cmp
rorl
sub
inc
andl
outsb
stc
mov
jns
lcall
rolb
mov
push
insb
dec
add
mov
dec
dec
in
jg
jle
pop
pop
dec
in
mov
inc
cs
fnstsw
in
flds
insl
jge
inc
lcall
outsb
jb
push
adc
jmp
sub
adc
jne
loope
sbb
jge
fldcw
xchg
mov
mov
xchg
aaa
mov
dec
jmp
push
inc
push
and
lods
loopne
inc
pop
ret
mov
or
inc
dec
scas
xor
rol
jo
es
sbb
daa
push
orb
adc
mov
jg
nop
sbb
into
popw
gs
stc
popf
dec
arpl
out
ret
jmp
push
mov
ret
or
popa
mov
pop
jno
mov
repnz
inc
and
add
jne
stos
pop
in
sub
and
insb
scas
adc
loopne
addr16
aad
xchg
dec
dec
scas
sbb
cmp
sbb
xchg
movsb
inc
pop
xor
lds
mov
notl
fcoms
repnz
out
and
and
in
aas
push
add
mov
or
cs
daa
xchg
ds
scas
mov
fiaddl
dec
repz
pop
jne
ret
daa
ja
leave
xchg
sub
sub
mov
mov
cmp
or
dec
dec
mov
sbb
sub
scas
scas
mov
sub
xlat
mov
push
lods
jo
fdivrl
arpl
int3
stos
notl
ret
mov
imul
sarb
xchg
add
cmp
jbe
mov
push
mulb
aad
sbb
inc
add
das
idivl
mov
sbb
leave
jg
sub
fiaddl
pop
sbb
lock
fs
test
sub
ficoms
dec
jl
inc
stos
fdivrl
push
adc
fistpll
jmp
dec
je
inc
xchg
rcrl
add
fnstenv
push
dec
call
dec
xchg
repnz
insl
sbb
cltd
and
les
push
mov
xor
pusha
sti
pop
jge
inc
scas
cmp
sub
dec
inc
push
xorb
jnp
and
inc
xlat
aad
aam
gs
dec
mov
push
add
pop
in
xchg
jl
sub
mov
test
lret
pop
data16
arpl
fsts
push
aaa
cmp
nop
pushf
adc
es
xor
arpl
sarb
dec
icebp
decb
cmp
jno
push
sub
xchg
ret
sub
xlat
out
sti
mov
cmpsb
push
push
mov
dec
hlt
fwait
imul
mov
mov
fldt
fisubs
andl
cs
jge
les
in
add
rcrb
imul
inc
int3
mov
pop
push
cmpsb
mov
mov
jmp
bound
icebp
rorl
loope
cli
add
push
imul
xchg
inc
lret
mov
movsl
decb
mov
jp
rcl
insl
imul
dec
push
nop
cs
xlat
in
repz
jmp
pop
call
outsb
aam
or
mov
insl
and
sub
shrb
ret
pop
ret
loopne
incl
aad
lods
jns
popa
mov
sar
aad
xor
xor
fs
rcl
popf
jo
jecxz
sub
pop
shl
movsl
pop
xchg
jne
les
cmp
lea
call
mov
fwait
pop
cmc
icebp
pop
jne
mov
or
mov
mov
adc
and
pop
cmpsl
and
inc
mov
dec
jae
int
leave
roll
shrl
sub
lds
test
pop
xor
mov
mov
fisubl
loopne
imul
xchg
mov
push
or
dec
ja
dec
clc
shrl
push
xor
or
mov
xchg
lods
xor
pop
push
lret
lret
mov
xchg
test
repz
fcomps
pushf
fldt
pushf
arpl
shlb
mov
stos
pop
inc
pop
push
or
js
jno
data16
pop
mov
aad
pop
mov
xchg
mulb
push
aas
popf
mov
cltd
mov
aad
das
add
cmp
fimull
fistpll
xchg
adc
loopne
mov
mov
rcl
cmpsl
and
fnstenv
test
mov
aam
ret
sbb
mov
sar
and
jbe
fwait
iret
xor
sbb
mov
lea
inc
gs
and
movsb
mov
loope
ja
lods
test
popl
mov
stc
rclb
ss
mov
mov
push
fdivs
orps
and
pushf
lods
mov
test
mov
test
inc
clc
incb
mov
imul
pusha
xor
and
mov
sbb
pusha
subb
jo
mov
clc
aad
or
push
sarl
cmp
cmp
leave
mov
add
scas
xchg
in
cmpsl
push
dec
ds
xor
mov
outsb
scas
inc
lods
sub
fwait
sbbl
hlt
outsb
lahf
mov
ret
pop
cmpsb
mov
cld
mov
icebp
test
in
in
loopne
mov
loopne
inc
push
in
push
or
adc
popf
or
adc
out
fsubr
xor
xor
fidivrl
inc
out
lock
movsb
jmp
mov
or
popf
cmpsl
ficompl
imul
adc
je
test
imul
adc
xor
sti
xchg
adc
adc
iret
push
xchg
incb
mov
pop
lahf
shlb
aad
fidivl
pop
pop
sub
xchg
pop
xlat
in
cld
and
lods
jnp
je
dec
das
hlt
mov
pop
mov
and
xchg
lods
jne
gs
into
rcrb
jmp
cmpsl
push
mov
jb
movsl
xor
ret
pop
inc
arpl
or
jo
ljmp
test
adc
hlt
or
inc
push
sub
xchg
lcall
pop
jmp
imul
lahf
test
movhps
jp
mov
das
and
mov
mov
or
push
and
cmp
and
js
xchg
adc
push
lret
pop
add
fnstsw
or
in
mov
jl
nop
arpl
xlat
pop
jbe
pushf
lods
fs
pop
outsb
mov
shlb
mov
push
ret
xchg
icebp
call
push
or
mov
outsb
and
ret
cmc
sub
xchg
insl
adc
cmp
js
loop
pop
ficoms
movsb
cwtl
xor
mov
and
testl
jle
movsb
pop
int3
mov
ret
fistpl
je
mov
repz
or
bound
aad
mov
fcoms
outsb
or
stc
popa
and
cltd
mov
xor
jg
shl
mov
lcall
icebp
and
dec
xor
xchg
js
adc
rol
xlat
decl
fadd
aas
fwait
add
fisubrl
pop
jne
push
mov
push
fdivrs
stos
jne
dec
pusha
ss
adc
stos
cmp
sub
aaa
scas
pop
jle
dec
dec
bound
push
sbb
sbb
mov
test
lods
mov
or
inc
inc
mov
iret
outsl
enter
mov
mov
inc
pop
and
repnz
mov
nop
aaa
xor
repnz
adc
cmpsb
inc
mov
loopne
cld
cld
push
lock
dec
addr16
jae
or
push
rol
push
addr16
imul
xor
cmpsl
negl
rcll
je
data16
pushf
push
test
mov
xchg
into
dec
das
fnstcw
sub
jbe
scas
mov
push
cmp
cmp
xor
jnp
jecxz
cmp
cs
mov
jecxz
sbb
lea
sbb
inc
sbb
mov
dec
fcmovnu
sub
cmpsb
cmp
sbb
pop
and
insb
xchg
pop
mov
or
push
cmc
inc
jae,pn
mov
jg
subb
pop
dec
movsl
mov
ffreep
mov
jnp
jo
js
push
push
repz
xchg
mov
dec
add
ds
lret
pop
xchg
imul
fadd
inc
sti
movsb
xchg
in
movsb
jp
cwtl
xlat
push
push
insl
cmp
or
inc
dec
xchg
adc
arpl
xchg
lret
outsl
push
scas
xor
dec
pop
scas
push
lahf
xchg
call
lcall
xor
push
jmp
cs
out
mov
push
or
mov
fcoms
lods
loop
or
or
pushf
xor
movsb
pop
ja
and
test
add
cs
lock
xlat
cs
add
es
mov
addb
gs
orl
adc
sub
dec
adc
jecxz
inc
cltd
imulb
mov
inc
sub
mov
xchg
sti
xchg
or
aas
aam
ss
movsl
xchg
inc
sbb
repnz
imul
pop
push
sbb
cmpb
inc
out
mov
pop
sbb
adc
jns
lods
and
mov
fstpt
sahf
ja
inc
popf
mov
into
sub
mov
cmp
aaa
notb
add
popa
fldcw
aaa
mov
je
mov
test
std
fcmovb
xchg
push
rcrb
push
sub
dec
ds
mov
pop
aam
mov
sbb
imul
jmp
xchg
mov
push
jmp
out
sbb
xchg
sub
rcll
out
js
mov
dec
stc
aaa
into
add
sub
pop
in
mov
and
cltd
sub
or
pop
mov
push
cli
ror
rcll
mov
mov
or
jmp
dec
imul
popa
clc
cmc
js
ljmp
cmp
mov
and
xor
push
xor
in
iret
push
lds
in
stos
das
inc
cmp
mov
jns
ds
mov
push
push
xchg
cmpsb
add
xchg
xor
inc
outsb
mov
lcall
addr16
icebp
cwtl
mov
jmp
inc
sbb
xor
call
outsb
mov
xor
in
sbb
jbe
jno
cmp
ss
hlt
inc
sub
stc
shrb
gs
xchg
xchg
dec
cmp
xchg
jns
sbb
ss
gs
inc
scas
xchg
push
cmpsl
hlt
ficoml
push
bound
mov
add
shl
dec
outsl
jmp
clc
andb
adc
test
shl
in
dec
xchg
cmpsl
pop
inc
stos
pop
loopne
mov
cmc
adc
int3
cmpsl
fiaddl
mov
sar
add
addr16
out
mov
sti
mov
sti
mov
fidivrl
aad
rcll
fldenv
mov
dec
daa
lcall
cwtl
push
push
insb
inc
sti
push
mov
xchg
push
mov
add
push
test
xchg
adc
mov
paddsw
das
cmp
pop
insl
xor
pop
cmc
pop
call
jcxz
cld
sbb
mulb
mov
cli
pop
fdivrs
mov
or
and
push
unpckhps
pop
xor
jbe
cmpps
jnp
cwtl
stc
insl
add
test
clc
mov
call
add
adcb
insb
pop
xor
push
outsb
jg
mov
lea
jg
lds
mov
mov
dec
mov
push
and
cmp
lret
pop
xor
clc
mov
fucomi
push
cltd
adc
lret
xchg
pop
push
push
cmp
jecxz
aaa
pop
shr
and
inc
loop
cli
sbb
int3
inc
jl
mov
outsl
mov
dec
xchg
in
aam
fidivrs
dec
fcompl
loop
fdivrs
push
dec
push
cmp
mov
push
iret
mov
jle
xor
cmp
add
mov
out
jne
inc
mov
lret
cmpb
and
imul
and
cmp
into
xor
cld
dec
clc
push
int3
or
scas
pop
mov
daa
or
mov
fwait
int
jp
loope
out
cli
pusha
mov
jbe
in
daa
xor
das
dec
insb
sub
sub
adc
cmp
ds
push
fsubs
dec
test
jle
xor
pop
mov
push
mov
mov
adc
lods
push
pop
add
add
adc
jecxz
fcmovu
mov
cld
dec
add
mov
pop
mov
outsl
jo
mov
les
cmp
push
loope
mov
ret
imul
out
jl
inc
sbb
and
sbb
xor
push
movsl
inc
mov
std
shrl
jle
sbb
push
out
outsb
pop
mov
test
adcl
ret
cmp
cmpsb
mov
loopne
test
mov
cmpsb
das
daa
cmp
adc
xchg
ds
sub
mov
sarb
and
xor
jne
xor
lret
xorl
cmp
fadds
pusha
jle
shrb
lds
les
push
push
lock
test
popa
jae
in
or
adc
test
lods
push
add
xor
pop
aas
lock
jmp
lahf
jne
mov
rorb
pop
je
sbb
xchg
subl
outsb
push
dec
outsb
sub
into
push
and
mov
add
mov
fwait
add
lret
mov
lock
push
dec
or
jg
icebp
sub
xor
xor
or
out
in
rclb
cmpsl
sub
add
xchg
adc
mov
push
cs
out
cli
sbb
cltd
mov
fdivs
and
mov
mov
rorb
jns
pop
stos
outsb
or
aaa
dec
cmpl
lods
cs
je
xchg
sub
sbb
sub
inc
jno
aam
adc
outsl
and
pop
xlat
std
mov
arpl
enter
sti
cmpsl
jle
aas
and
sbb
cmp
mov
dec
xor
divl
test
inc
ret
das
mov
xlat
rorb
mov
dec
sbb
std
int
xchg
inc
cwtl
out
pop
aaa
inc
test
pop
sub
mov
sub
sbb
xor
lcall
cld
mov
test
inc
hlt
call
or
addb
jne
stos
aas
lds
pop
insl
ja
cli
repz
ret
xor
outsb
push
cmp
lods
nop
xor
repnz
adc
shrl
bound
out
test
dec
adc
out
add
or
movsl
adc
add
outsl
int
fstps
sub
add
adc
aaa
es
adc
mov
xchg
xor
movsb
loop
push
movsl
pop
jle
data16
fdivl
pop
aas
and
movsl
in
adc
mov
sub
lods
mov
mov
pop
or
xchg
and
mov
das
mov
jnp
int3
jns
in
cltd
stos
sti
xchg
call
testb
jg
mov
and
imul
mov
xchg
xor
adc
mov
sub
imul
and
fcmovu
std
sbbb
xchg
test
mulb
add
es
push
daa
std
in
das
dec
fdivl
sub
cli
xchg
pop
adcl
xor
jecxz
mov
aam
sbb
and
cli
and
adc
cmp
mov
or
test
jb
lock
pop
add
sti
dec
popf
and
mov
and
fnsave
pusha
imulb
or
out
clc
ret
xor
add
or
hlt
xchg
pop
pop
mov
add
jns
sbb
shll
cmp
inc
cmp
insl
gs
adc
outsb
adc
ljmp
jb
inc
call
xor
cwtl
jge
shll
lret
sti
fidivl
or
push
js
and
add
aad
xchg
das
je
cmp
push
movsl
sbb
fcmovbe
push
sub
rorb
inc
rol
adc
mov
test
in
dec
imulb
push
mov
rorl
call
or
imul
xchg
test
shrb
insl
or
scas
xchg
sub
inc
mov
jns
dec
xchg
dec
dec
iret
data16
mov
mov
outsl
jnp
jp
inc
psubb
mov
dec
or
icebp
cmc
jge
scas
push
addr16
cmp
int3
insl
lret
repnz
cs
hlt
fsts
push
push
xchg
xor
mov
jmp
lods
int3
in
pop
aam
pop
pop
mov
and
sub
hlt
mov
repnz
popf
fisttps
pop
cmpsl
xchg
pop
call
aam
stos
mov
call
cmp
mov
test
mov
sbb
in
add
cmpsb
mov
jle
out
sub
jno
dec
xchg
xor
les
sub
fnstsw
cs
dec
hlt
jnp
push
pop
icebp
push
popf
loop
fsts
and
push
shl
xchg
cwtl
jp
inc
loop
roll
and
mov
loopne
sub
dec
and
btr
and
in
dec
xchg
adc
sbb
adc
cmp
xor
lahf
mov
int
sub
stos
sar
lret
out
js
mov
dec
call
into
xchg
idiv
push
pop
or
jl
jle
jge
imul
pusha
xor
pop
dec
dec
add
adc
arpl
sub
rclb
add
mov
out
mov
or
cs
je
fadds
adc
mov
adc
vhaddps
mov
mov
sub
adc
fnsave
jg
jns
jae
sbb
fcmovb
int3
test
repz
jo
mov
fbstp
push
mov
xchg
sbb
mov
jbe
mov
or
arpl
dec
mov
js
fidivl
xor
mov
xorb
and
inc
adc
and
ret
dec
cltd
jecxz
dec
adc
mov
jne
xchg
sar
jge
add
xchg
sbb
mov
and
xchg
xchg
repz
ss
les
je
insl
fsubrp
stos
sub
lahf
repz
es
daa
lds
jae
or
add
lea
shlb
pop
and
xor
push
in
scas
movsl
hlt
cmp
add
movsb
inc
data16
cmp
adc
aaa
dec
arpl
mov
mov
dec
or
sub
in
ret
hlt
loope
cmc
xchg
sbb
nop
dec
mov
int3
ret
sbb
adc
push
mov
outsl
lret
xchg
adc
or
cmp
adc
cld
test
push
jae
jecxz
sub
sti
test
and
into
jecxz
mov
jne
ds
mov
push
add
push
fcoms
cmc
mov
outsl
adc
jno
das
lea
cmp
xor
adc
loop
stos
jmp
cltd
or
pop
jno
and
scas
mov
es
xchg
sbb
xor
popf
testb
test
adc
cmc
jo
dec
pop
lahf
sub
dec
es
dec
jnp
cli
xchg
lea
dec
push
sub
dec
stos
daa
jmp
mov
insb
sub
pop
pop
je
outsb
pop
icebp
lahf
sub
mov
push
shll
leave
pusha
sub
sbb
mov
adc
test
xor
imul
cmpsl
shl
mov
mov
ds
repnz
mov
and
pop
mov
cmp
jmp
sub
ss
scas
add
ficoml
or
ret
cmp
scas
outsl
insb
out
rol
cmpsb
mov
rcrl
or
mov
pop
mov
pop
rcrl
test
ja
xor
movsb
clc
icebp
decl
fstps
sub
jp
int
aas
rcrb
xor
aad
xchg
jno
mov
loopne
clc
sub
aaa
adcb
int3
xchg
inc
add
sahf
mov
dec
mov
adcl
lahf
push
loop
fwait
mov
cwtl
stos
out
add
je
sub
aam
jle
mov
fldl
mov
sti
adc
in
cmp
pusha
repnz
dec
push
push
mov
cmpl
cmp
jp
pop
out
cmpsl
xor
mov
inc
inc
xor
and
xchg
clc
xchg
in
mov
or
xchg
jb
push
cmp
push
dec
and
adc
popf
xlat
jb
cmp
test
jmp
cwtl
idiv
xchg
xor
in
and
dec
xor
sub
jmp
clc
ds
inc
loopne
and
mov
imul
jne
mov
cwtl
mov
add
in
cltd
mov
add
cmp
pop
mov
and
popf
int3
push
sbb
jnp
andl
push
mov
aaa
rorl
and
push
cmc
xchg
out
sub
daa
cmc
mov
sti
pop
jae
mov
mov
bound
cmpsl
sub
in
repnz
bound
xor
aam
pop
sbbl
divb
je
jne
lea
adc
jb
dec
add
sbb
xchg
pop
add
out
int3
aam
mov
and
shll
mov
cmpsb
xor
rorl
dec
dec
in
ds
nop
mov
movsl
bound
cmpsb
pop
dec
sub
std
insl
jns
les
or
sbb
dec
lahf
jno
jne
icebp
xchg
add
stos
mov
mov
xchg
mov
mov
popf
jg
cli
adc
xchg
popf
mov
testb
mov
inc
sahf
sub
xor
lea
inc
cwtl
sbb
lahf
pop
loope
and
inc
push
inc
out
fsubl
mov
inc
xchg
pop
add
leave
adc
lret
adc
sti
inc
sbb
cmp
jecxz
or
mov
nop
push
clc
and
mov
xor
xor
repnz
or
push
fisubs
outsl
mov
add
dec
xchg
stc
cmp
data16
test
aad
mov
add
ljmp
call
jecxz
add
dec
mov
push
lea
mov
pusha
fidivrl
and
dec
es
sbb
pop
inc
and
sahf
sti
rclb
lock
shll
push
imulb
insb
dec
test
cmc
mov
lock
lods
pop
cmpsl
xlat
fwait
insb
sub
sti
pop
xor
jp
outsb
mov
sub
outsl
and
jg
cwtl
mov
mov
hlt
push
data16
add
xor
sbb
cmp
cmp
push
gs
mov
push
mov
aam
sti
add
sbb
imul
adc
add
out
enter
stos
mov
push
mov
cmp
lea
fldcw
pop
movsl
adc
loop
ljmp
add
mov
inc
cmp
cmp
mov
cwtl
mov
lret
mov
cmc
cli
rol
ss
mov
inc
out
int
inc
pop
es
adc
and
cmpb
mov
mov
fiaddl
sahf
cmc
nop
xchg
int3
jmp
add
int
mov
cmp
push
add
mov
push
movsl
mov
loopne
jp
vpcmpgtw
das
enter
insl
add
or
int
lds
mov
or
das
jae
popa
lret
adc
sub
cmpsb
lret
adc
add
adc
dec
scas
jmp
cmp
popf
cld
mov
int
xchg
ljmp
jae
adc
mov
ret
mov
or
inc
mov
test
push
test
cmc
xor
mov
jb
xchg
jno
scas
inc
sti
call
or
daa
xor
jae
inc
push
std
sbb
ljmp
push
jne
push
repnz
decl
sub
mov
push
xor
mov
xchg
movsl
js
pop
mov
xor
enter
test
cmp
pusha
jne
sbb
cld
aam
jl
xchg
cmc
addl
inc
mov
push
push
hlt
sub
add
ds
mov
lds
and
or
mov
cmpb
and
mov
jno
ret
arpl
mov
pop
jge
push
test
xchg
out
sbb
loope
jmp
ss
mov
mov
iret
adc
dec
dec
pop
xor
aam
test
mov
shlb
and
rorb
inc
test
or
stc
test
out
nop
mov
sub
mov
test
movsl
sahf
push
xor
cs
jp
les
cmpsl
sub
fcomps
mov
lds
pop
adc
ds
outsl
pop
xlat
outsb
nop
pusha
fucomp
arpl
cmc
mov
lods
lds
lcall
sub
dec
inc
sub
popf
in
out
xchg
cmp
insb
inc
and
rcl
ljmp
insl
aad
xchg
mov
shrb
sub
test
shll
lods
mov
sub
out
repnz
adc
or
xor
dec
imul
roll
pop
pushl
shrb
movsl
jo
loop
stos
test
nop
mov
mov
push
xor
mov
out
add
fidivrs
sbbl
call
repnz
fwait
cmp
das
sbb
dec
fcoml
iret
xor
in
lock
adc
fcoms
mov
sub
faddl
repnz
xorb
loopne
lret
js
aaa
xor
insb
pop
xchg
adc
or
rep
out
jae
pop
enter
mov
lods
cld
xchg
outsl
sbb
rep
cli
and
inc
fcomp
mov
mov
test
imul
arpl
push
ret
dec
add
mov
push
fnstenv
aaa
and
aam
cmp
fcomip
shl
inc
mov
lods
imul
nop
mov
lds
push
lods
ja
and
subl
sub
adc
xchg
pushf
scas
frstor
js
sbbl
push
mov
and
and
jmp
arpl
xor
xor
aam
insb
insl
inc
mov
leave
sub
jp
push
sub
sub
xchg
xchg
sub
fnstsw
int
inc
xchg
push
cltd
sbb
xchg
popa
xchg
lcall
lds
aad
rcrb
iret
cwtl
bound
rclb
jnp
mov
sti
push
jo
es
les
in
std
push
aaa
and
xor
inc
stc
popl
data16
mov
add
rcll
cmp
push
sti
xchg
cmp
inc
or
sub
or
xor
xor
xlat
test
mov
pop
sbb
test
insl
add
mov
mov
cmp
dec
or
mov
cmp
iret
push
into
add
ret
inc
adc
cmp
das
add
popf
push
cs
lods
incb
aaa
xlat
shll
js
pop
mov
inc
ffree
or
cld
insb
idivb
mov
movsl
xchg
ret
inc
sti
push
out
negl
jne
subb
mov
mov
adc
mov
push
pop
cvtps2pd
lods
jnp
call
cltd
mov
mov
pop
add
fadds
lret
fadds
inc
pushf
and
pop
addr16
aad
pop
jecxz
cmp
pop
hlt
add
mov
mulb
jnp
push
lret
jl
jb
cltd
std
std
xchg
sub
push
pxor
xor
arpl
cwtl
push
in
les
out
sahf
jae
mov
stos
sub
iret
scas
lds
mov
pop
sub
xchg
test
push
jo
cmc
pop
cmp
mov
jb
pop
adc
sbb
dec
mov
mov
mov
lret
jle
adc
adc
and
pusha
cli
addr16
inc
xchg
sub
xor
in
xchg
inc
cwtl
dec
xchg
clc
in
mov
testl
xchg
push
sbb
xchg
ret
ffreep
out
out
imul
inc
popf
push
shl
lcall
shrb
ss
or
inc
ds
popf
js
mov
pop
pop
scas
mov
mov
or
lods
sbb
xchg
xor
dec
sub
mov
pop
lods
daa
mov
adc
stos
test
imul
stos
xor
and
lahf
pop
scas
iret
ret
shrb
xor
notb
cmp
imul
inc
push
sub
leave
lahf
ss
mov
imul
or
xlat
arpl
add
and
inc
jmp
ds
pop
push
sbb
mov
bound
pop
out
fdivrs
sbb
mov
sub
decl
fwait
int
cld
imul
xor
test
sub
jo
sub
xor
movsb
dec
mov
xor
inc
repz
movsb
mov
cltd
popf
jmp
cmp
aam
adc
mov
xor
stos
mov
call
out
in
stos
aaa
sbb
and
mov
shlb
loopne
repz
mov
es
lahf
shlb
mov
xchg
or
ja
aas
mov
sbb
sbb
jno
sbb
aad
dec
mov
jg
adc
out
add
xor
mov
cmp
cwtl
in
xor
mov
sti
push
inc
pop
out
jle
test
movsl
aam
jl
add
mov
test
sub
js
pop
imul
subb
sbb
pop
push
sub
push
repnz
test
fistl
shrb
pop
dec
nop
stos
jae
sub
pop
xchg
push
cs
iret
push
jno
add
xor
push
pop
inc
add
test
mov
int3
xor
xchg
das
or
lret
or
jbe
cmp
cmpb
adc
jle
sub
ficoms
mov
bound
test
add
js
in
pop
sbb
jecxz
mov
inc
cltd
out
xchg
js
ficomps
inc
je
sub
scas
int3
pop
loope
adc
add
cmpsl
mov
daa
in
pop
lcall
mov
ja
xchg
add
mov
cltd
dec
push
push
adc
lds
mov
call
mov
les
arpl
pop
hlt
das
test
lods
sbb
sahf
dec
adc
xor
ds
dec
add
popf
or
mov
test
mov
pop
inc
push
sbb
mov
inc
mov
ljmp
ret
hlt
jno
fisubl
test
in
or
cmc
pop
outsb
out
adc
pop
test
sbb
negb
pop
mov
cmp
insl
push
cmp
std
or
and
test
sbb
dec
inc
jne
stc
cmpsb
push
mov
inc
lcall
mov
lcall
shr
adc
stc
mov
sahf
push
mov
dec
fnstsw
and
lcall
stos
pop
mov
lret
test
fpatan
cld
xchg
and
dec
sbb
mov
sub
in
and
mov
loope
jns
mov
adcl
add
jns
adc
in
push
es
mov
sbbb
gs
jecxz
jg
stos
inc
in
lahf
mov
popf
xor
jge
pop
mov
push
lcall
cltd
mov
stos
mov
or
sub
cmp
inc
adc
rcl
pop
xchg
movsb
repz
loopne
outsb
jp
jge
dec
scas
sub
cli
add
scas
mov
shrb
xchg
orl
in
add
cmp
rol
jo
xchg
das
mov
push
and
inc
test
bound
mov
fistps
mov
or
mov
int3
lea
fidivs
arpl
pushf
inc
jb
outsb
clc
insl
sbb
xadd
dec
add
pusha
ss
fcomp
push
cmpsl
dec
or
pop
sbb
cmc
adc
repnz
or
sub
psraw
mov
sbb
adc
stc
or
sti
xchg
and
rorl
aad
mov
sub
fcmovnbe
cmc
sbb
hlt
xchg
std
pop
cmp
fldcw
rorl
lea
fildl
pop
scas
pop
fimull
push
mov
gs
scas
or
cmp
lods
mov
movsb
mov
sarb
test
xor
adc
pop
add
and
cmpsl
push
jo
sbb
out
xor
out
fisubs
stc
addr16
or
jno
push
jbe
xchg
rol
push
test
or
test
or
inc
roll
fistpl
es
push
aam
dec
pop
imul
lahf
imul
mov
popa
call
cmpb
dec
cltd
jle
xorl
cmpb
sahf
fsts
fldl
fcoms
xchg
xor
adc
pop
icebp
es
dec
out
js,pt
imul
sahf
sub
rclb
sub
mov
aad
aaa
into
sub
or
and
dec
cmp
dec
nop
jnp
sbb
je
ds
jmp
cmp
dec
inc
xor
jge
sub
mov
les
mov
test
push
stc
xor
repnz
xchg
xchg
sub
daa
cmp
push
mov
mov
in
jmp
pop
add
cmp
mov
loop,pt
dec
add
mov
fidivrs
pop
fistps
aaa
push
cmp
mov
rcl
push
xchg
cs
mov
jp
hlt
mov
mov
or
enter
int
and
mov
and
mov
and
sahf
scas
xor
jno
in
xlat
push
add
cmpxchg
xor
gs
gs
bound
or
hlt
or
dec
es
cltd
adc
and
arpl
xchg
sbb
insl
int
lahf
push
mov
movsb
imul
or
xor
fs
ret
loopne
notb
xor
lods
mov
xchg
or
mov
inc
sub
movsl
push
popa
imul
je
adc
in
push
in
sub
clc
pusha
clc
lret
inc
insl
jmp
repnz
mov
pop
std
insl
add
ja
push
pop
mov
mov
es
mov
sti
sti
mov
or
leave
idivl
aaa
cld
outsl
movsl
mov
push
cmpsl
mov
adc
pushf
fldcw
mov
sub
cmpsl
ss
mov
jge
xor
pop
or
lret
out
adc
cld
daa
aas
mov
xchg
sub
test
sub
adc
mov
add
cltd
xor
fbstp
adc
loope
xchg
pop
insb
jmp
nop
daa
sbb
hlt
jg
cmp
push
mov
es
sbb
and
lret
jecxz
fcompl
cltd
pop
clc
scas
movsb
pop
sbb
xor
sub
fs
shll
mov
stc
test
ja
adcl
leave
add
test
or
xor
ficompl
dec
testl
inc
push
cmc
cmpsl
and
push
imul
pop
shlb
std
gs
sub
jge
lret
xor
pop
outsl
sbb
mov
aaa
inc
pusha
cmpsb
mov
aam
enter
popa
bound
fidivs
and
hlt
dec
notl
xchg
cmp
loop
or
add
jne
sub
or
call
jecxz
jno
bound
shrl
xor
scas
insl
sub
sub
nop
mov
fstpl
xor
mov
test
test
sbb
pmaddwd
mov
repnz
negl
sbb
sub
gs
pop
jp
xchg
jbe
fcoml
clc
mov
and
bound
inc
outsb
or
movsl
mov
jmp
mov
daa
cli
test
mov
lahf
jp
dec
imul
xchg
pop
loopne
xor
jl
stc
je
movsb
cmp
aad
scas
mov
and
jns
mov
xchg
pop
push
in
pop
aam
push
mov
testb
sahf
scas
push
repz
sar
jle
push
popf
xor
popf
and
or
lock
xor
push
scas
in
fs
gs
or
in
cs
sti
push
call
or
in
clc
push
lds
imul
fcmovu
inc
gs
aam
push
mov
sub
lea
ffreep
movsl
pusha
lret
add
lcall
test
shrb
mov
xchg
pop
cwtl
in
stos
cmp
mov
outsb
jge
inc
loop
pop
sbb
or
mov
or
test
mov
sbb
dec
dec
inc
or
mov
cmp
dec
loop
dec
dec
mov
popf
mov
daa
leave
in
mov
ret
mov
sbb
into
mov
mov
inc
push
sahf
inc
mov
lock
fwait
cld
push
xchg
fistl
cmp
aaa
mov
mov
push
and
jbe
push
fnsave
test
xlat
pextrw
cwtl
fsubr
pushl
xor
arpl
sbb
fwait
scas
xor
jecxz
pop
dec
xlat
ljmp
and
shll
mov
int
dec
mov
fwait
push
icebp
fidivrs
ror
aaa
mov
addl
mov
int
fsts
cmp
dec
cmp
test
mov
adc
dec
out
mov
icebp
cltd
jns
sbb
and
jo
push
adc
les
rcrb
rcrl
rcrl
mov
lods
ret
mov
mov
popa
cld
ja
outsl
sub
rolb
divl
push
out
imul
imul
mov
mov
mov
test
pop
pop
jecxz
xchg
loop,pt
jae
icebp
movsl
pop
out
les
jecxz
loope
roll
sarb
push
sbb
sub
inc
popf
xchg
hlt
push
mov
xor
dec
or
in
cmp
sbb
mov
xor
iret
add
cltd
mov
and
inc
or
jno
in
sub
push
outsb
mov
pop
xor
stc
out
and
je
add
mov
rolb
mov
adcb
scas
dec
dec
inc
xchg
mov
sbb
popa
and
xchg
push
out
fimuls
jae
repz
fisttps
push
shlb
inc
arpl
push
jno
jbe
scas
xchg
mov
cmpsb
repz
add
adc
xor
sub
inc
repnz
fsubs
cmp
jl
add
and
clc
shl
xor
sbb
and
lret
lahf
mov
and
mov
test
dec
push
daa
xor
xor
mov
mov
testb
in
adc
mov
sub
jmp
lahf
dec
inc
push
aas
ds
and
push
iret
mov
ss
pop
mov
dec
jnp
mov
imul
xchg
jb
inc
je
or
loopne
fmuls
mov
jne
pop
push
push
insb
jno
mov
pop
jmp
les
adc
jno
sub
push
cli
push
cltd
sub
mov
and
imull
sub
lock
bound
sbb
test
xor
mov
fisttpl
shlb
popf
adcl
push
insb
gs
lea
push
cmp
mov
add
lods
sbb
in
cmp
mov
ret
pop
push
scas
call
xchg
jecxz
pusha
mov
arpl
pop
mov
add
cs
pop
js
lods
test
jmp
push
lcall
sti
lea
jnp
dec
insl
cli
mov
cmp
mov
sbb
ds
outsl
inc
sarb
in
fwait
inc
iret
add
mov
int
sahf
arpl
out
cli
sub
adc
sbb
jle
scas
and
push
pop
lock
or
sahf
xchg
cmp
sbb
call
mov
add
mov
stos
cmovb
add
xchg
adc
and
inc
cmp
mov
gs
scas
test
lret
or
cmpsb
pop
leave
adc
inc
sahf
sti
jns
sub
lret
cld
icebp
push
jmp
dec
lret
cld
imul
popf
adc
jl
mov
push
ficomps
jne
lret
xchg
add
mov
xchg
xor
adc
mov
jb
mov
mov
or
push
data16
pop
stos
icebp
sbb
and
cmp
jecxz
lret
dec
and
lcall
add
push
out
inc
mov
into
and
hlt
xchg
mov
sub
push
jmp
shll
out
stc
je
cmpsl
movsl
sbb
aaa
mov
into
loope
test
push
sbb
pop
hlt
idivb
fucomp
dec
repz
lock
movsl
add
jb
imulb
scas
imul
ret
test
movsl
and
add
xor
mov
inc
push
cmpsb
cmp
pop
sahf
les
pop
std
jbe
xor
or
inc
mov
movsl
js
pop
pop
lods
xchg
jp
jbe
mov
bound
cmpsl
xor
or
movsb
push
jmp
mov
and
push
mov
cmc
jg
aaa
fistps
movsl
dec
cmp
sub
addb
or
mov
dec
xchg
cmp
imul
fwait
dec
je
out
xchg
jmp
inc
ja
mov
scas
xchg
mov
mov
ljmp
cmp
pushf
push
mov
scas
and
mov
fstpl
mov
push
imul
mov
pop
inc
mov
sahf
or
inc
mov
dec
mov
add
sub
lahf
mov
shll
add
jo
xor
xchg
push
mov
add
jno
aaa
mov
sub
and
mov
dec
scas
cmp
int3
imul
adc
dec
add
adc
popf
add
jnp
mov
xchg
enter
ret
xchg
add
pop
icebp
pop
xor
js
aad
push
jno
testb
loope
fcoms
mov
mov
inc
nop
test
adc
stc
popf
sub
rcr
in
mov
xor
ret
cmp
scas
pop
ja
arpl
mov
out
mov
cwtl
fwait
mov
xor
mov
data16
and
cli
popf
or
and
jno
inc
daa
xchg
test
and
xchg
sub
mov
jnp
test
movsb
test
pop
lahf
std
ret
cld
adc
xor
out
xchg
fs
fwait
arpl
mov
adc
mov
stc
mov
fdivl
dec
xchg
dec
sub
sti
xchg
push
dec
fwait
pop
lcall
mov
add
ficompl
mov
aas
fcoms
mov
cmp
lods
inc
or
leave
gs
cmp
mov
add
mov
fnstsw
pop
dec
or
push
popa
add
cmpsb
adc
adc
and
lods
pop
mov
roll
inc
mov
pop
xchg
mov
mov
int
lret
mov
stos
pop
mov
sbbb
dec
in
test
adcb
add
dec
push
fnstenv
imul
addb
fcomps
loop
loope
xchg
push
xorl
pop
mov
loop
push
xlat
in
mov
jmp
andps
xchg
mov
jae
test
xchg
push
into
adc
mov
aad
xchg
pop
arpl
popa
jno
cwtl
test
xchg
call
jbe
or
mov
fnstcw
mov
nop
repnz
xor
adc
shl
loop
xlat
out
hlt
out
decl
pop
jno
aam
fldl
pushf
aam
ljmp
mov
les
std
pop
lea
sbb
fsubs
pop
loop
sbb
xchg
jge
sub
adc
or
mov
mov
jns
fldenv
rorl
xchg
xchg
xchg
xchg
sahf
cmpsb
cmp
pop
les
dec
push
into
enter
dec
arpl
dec
cmc
test
imul
cs
jae
ret
cmp
daa
shld
sub
mov
add
in
stos
push
movsb
pop
add
mov
test
adcl
jbe
inc
cmpsl
and
cwtl
xor
pushf
scas
xchg
mov
cld
adc
cmpsb
out
add
xlat
pop
adc
mov
stc
jnp
sbbb
dec
fs
mov
ficompl
sbb
xchg
push
aaa
into
inc
out
sub
leave
push
sub
ja
ror
push
loopne
sub
in
cld
jecxz
jne
and
xor
fdivrs
inc
cmp
sbb
test
insl
filds
aam
jle
hlt
push
lods
enter
jno
rolb
lret
adc
adc
inc
and
dec
inc
fidivrl
mov
push
icebp
mov
and
aas
nop
inc
lret
push
arpl
sbb
daa
push
cmpsb
andb
ret
jne
inc
adc
hlt
push
loope
cmp
mov
add
rcll
and
jge
mov
scas
out
push
pushf
roll
aad
ljmp
mov
jp
xor
lahf
and
mov
mov
jmp
idivl
push
sub
rolb
inc
fisubrs
leave
gs
jle
push
fsubl
pop
mov
fwait
aam
lret
mulb
jl
inc
jno
jae
call
sarl
mov
movsb
add
pushf
dec
cmp
mov
popa
jnp
adc
out
push
arpl
and
xchg
ds
sub
dec
fs
out
sbb
dec
adc
mov
and
sbb
in
cmc
sub
clc
lret
bswap
pop
push
inc
imul
cld
mov
sub
push
push
pop
repnz
jp,pt
repz
movsl
call
mov
or
ficomps
dec
scas
xor
loopne
lahf
es
adc
addl
add
or
jno
xchg
lahf
xchg
xchg
push
shlb
mov
pop
int3
testl
jbe
int3
lret
inc
loope
scas
mov
adc
and
out
dec
dec
movsb
add
std
nopl
scas
loopne
loope
iret
subb
insb
jnp
cmp
shr
cli
out
int3
in
jecxz
adc
add
sbb
popa
rorb
push
inc
adc
jnp
pop
mov
cwtl
outsl
dec
jl
xor
testb
xchg
adc
add
add
and
push
cmp
mov
fsubs
cmpsl
shrb
or
ss
and
std
inc
shr
cli
ljmp
or
adc
jge
jno
lods
fnstsw
sub
xchg
dec
faddp
mov
mov
jbe
or
jbe
out
pop
xor
mov
negl
mov
shlb
fidivs
push
sbb
and
lahf
inc
mov
lea
loope
push
mov
in
jbe
iret
cmpsl
or
int
mov
mov
xchg
lock
mov
push
push
pop
rorb
and
mov
push
jnp
fldcw
out
stc
lods
inc
sub
insl
jo
popf
pop
scas
int
addr16
and
xchg
mov
fwait
aaa
fcomi
imul
push
and
mov
shlb
mov
xor
sbb
mov
jae
xor
xchg
js
mov
mov
dec
cmp
das
dec
pop
fwait
arpl
pop
and
mov
nop
int
pushf
xor
pushf
es
sbb
jnp
cli
push
mov
fists
adcb
jmp
inc
mov
or
add
andl
mov
add
cwtl
mov
dec
xor
pop
jnp
or
or
sbb
enter
inc
mov
rol
in
lret
xor
jecxz
mov
mov
sbb
fs
rcrw
or
lock
pusha
and
ss
jbe
jmp
xorb
mov
add
js
mov
pop
scas
mov
dec
mov
cmpl
ret
popf
mov
pusha
ljmp
dec
popa
ljmp
mov
int3
fs
mov
in
jbe
inc
inc
clc
cld
outsl
jle
leave
pusha
or
cli
ljmp
cli
or
sub
dec
fisubrl
sbb
jle
nop
out
mov
fs
xchg
jl
or
clc
in
je
pop
data16
add
cs
lcall
and
xor
lcall
dec
dec
mov
mov
dec
stos
adc
popa
lods
xor
push
mov
test
rcl
clc
loop
inc
dec
shll
push
lods
sbb
add
sbb
ds
xchg
lods
mov
cmc
xchg
insb
fsub
sbb
push
scas
mov
xor
js
outsl
sbb
cmp
andb
fidivl
loope
mov
cmpb
sbb
movsl
lock
mov
push
jle
ficoml
mov
leave
je
enter
lahf
repnz
jo
addb
leave
xor
dec
fcomps
lcall
sbb
xchg
dec
lds
sti
adc
lock
orl
adc
std
fwait
sbb
pop
add
mov
fs
in
mov
repz
xor
fidivrl
and
mov
rclb
ljmp
jno
insb
fbld
sub
fnstenv
xor
repnz
add
mov
sub
mov
insl
mov
adc
inc
mov
xchg
jns
jo
je
hlt
mov
dec
ss
xor
adc
and
lods
adc
adc
or
mov
add
add
inc
xor
out
test
or
xchg
mov
out
or
sti
sar
adc
add
adcl
fstps
testb
jnp
pusha
or
gs
dec
int3
shll
pop
adc
mov
fnstenv
push
rcl
xlat
cmp
cmpl
add
cmpsb
cmp
xor
pop
mov
scas
push
popf
insb
mov
sbb
and
xor
xchg
pop
icebp
ret
sbb
testb
and
fistpll
mov
shl
jnp
inc
cld
mov
fcmove
gs
cmp
pop
mov
jge
sub
sbb
jmp
push
cltd
add
inc
pop
sbb
sub
jl
dec
xchg
ds
stos
out
xchg
sub
rcll
sub
or
lods
add
enter
dec
lock
jns
jne
popf
push
lret
mov
sbb
sub
cmpl
inc
in
fstl
inc
in
ljmp
in
or
das
xchg
and
or
cld
mov
adc
fidivrl
inc
push
gs
fwait
jno
ja
mov
mov
adc
fisubrl
mov
sbb
lods
shlb
xor
jo
xchg
jno
sbb
ret
xlat
mov
popa
popf
fs
outsb
sub
and
stc
gs
pop
out
sbbb
inc
sbb
in
add
aad
sub
cmpsl
cmc
xchg
dec
inc
pusha
xchg
pop
sub
gs
fyl2x
hlt
mov
cmp
mov
mov
fimull
push
sbb
xchg
outsb
mov
int
push
pop
cmc
sahf
mov
xor
subb
in
int
jbe
cmp
int3
dec
aaa
mov
fwait
xchg
repnz
sahf
test
jecxz
out
pop
imul
std
insl
push
divl
cltd
lock
sbb
rorb
ja
and
jb
cltd
xchg
mov
outsb
stc
cmc
mov
push
ror
push
push
jae
mov
mov
insb
jb
adc
fsubrs
cld
les
cmpsb
jmp
testl
shrl
mov
popa
scas
test
or
movsb
sbb
and
addr16
pop
insl
inc
cwtl
lods
sub
pop
hlt
jne
bound
sbb
adc
lcallw
or
testb
or
shrl
push
fucomi
inc
hlt
jmp
sbb
loop
loopne
mov
mov
in
sub
gs
jae
pop
hlt
rorl
aad
add
in
push
cmp
je
or
push
lods
dec
mov
xor
or
push
inc
add
shll
xchg
add
sbb
mov
adc
jmp
or
push
xor
dec
xor
pcmpgtd
xchg
imul
sub
addr16
dec
push
xchg
iret
and
jbe
cmp
stos
xorb
xchg
xlat
jg
fdivrl
sbb
ret
mov
xor
adc
stos
push
call
test
jb
and
daa
jns
mov
mov
pop
sub
pop
lret
outsb
jbe
xlat
mov
cli
outsl
frstor
lods
je
aad
aaa
jno
mov
mov
roll
das
push
repz
push
xchg
jp
cmp
jnp
sub
xchg
mov
movsl
sub
xchg
inc
das
xorb
nop
add
daa
and
ss
or
mov
repz
in
mov
sbb
popf
fisubl
mov
dec
xor
sahf
xor
xchg
insl
cmp
inc
popf
sbb
dec
xchg
xchg
and
jecxz
aam
xchg
push
test
mov
mov
repz
jg
movsb
jge
insb
push
lods
jae
add
cmpsb
add
gs
arpl
inc
sahf
sub
and
and
push
jg
jecxz
ds
test
sbb
bound
orl
push
dec
jecxz
jo
mov
testl
shrl
dec
push
adc
jmp
scas
mov
jle
jmp
shll
pop
pop
jno
pop
and
mov
dec
outsl
jae
imul
inc
jo
mov
pushw
movsl
cmp
or
lret
lcall
inc
mov
mov
sbb
adc
xchg
shrb
pop
add
mov
pusha
dec
inc
fidivl
jo
adc
dec
lock
lods
loope
pop
adc
sbb
sbb
mov
jecxz
cwtl
cs
jge
lds
call
fstpt
or
in
mov
cld
adc
or
in
xchg
pop
mov
pop
stos
xor
mov
mov
sarb
aas
xor
dec
adc
jne
sub
cld
outsl
fwait
xor
mov
mulb
xchg
cmp
movsl
cmp
cld
or
les
dec
mulb
stc
cmp
sub
jle
push
adc
cwtl
pop
xchg
aas
inc
test
mov
outsl
stc
test
mov
in
xlat
jb
pop
sbb
push
cmp
mov
hlt
loope
stc
push
call
dec
shl
jnp
push
cwtl
push
addb
aas
mov
popa
shll
inc
mov
fistl
mov
push
pushf
negl
decb
iret
add
sbb
inc
mov
stc
cmc
mov
andl
jp
push
mov
out
rorb
mov
shl
sbb
movd
ds
and
cld
or
and
loope
add
mov
out
test
scas
ss
fmull
notb
mov
shl
and
sbb
sub
xor
fsubs
jnp
push
rorl
imul
fsubr
cmp
adc
inc
repz
push
aaa
xor
sbb
idiv
stos
mov
test
sub
xchg
cmp
ret
xor
in
ja
push
xor
push
in
xchg
mov
loop
js
mov
xchg
lret
imulb
jnp
sbb
push
ljmp
fdivrs
loop
xor
mov
xchg
lcall
mov
mov
xchg
push
fcoms
in
lret
mov
leave
test
jns
pop
enter
pushf
mov
test
xchg
stos
inc
outsb
sub
lahf
ret
jecxz
shll
inc
or
mov
loopne
int
mull
aaa
sbb
imul
xchg
movsl
mov
adc
rcrb
pusha
adc
jnp
lock
outsb
adc
lahf
aaa
fsubl
mov
out
icebp
in
adcb
fwait
sub
fsubrs
push
mov
xor
lcall
cmpsl
jp
mov
or
add
xor
lods
jecxz
nop
dec
addl
ja
mov
and
shl
jmp
fwait
cltd
shrb
cmpsb
xchg
and
mov
mov
fs
mov
cmpsb
mov
cmp
xlat
aaa
push
mov
test
inc
pusha
add
xor
repnz
mov
mov
subb
out
mov
movsb
xchg
mov
pop
sbb
pop
lahf
or
sub
mov
lcall
jbe
pop
test
cmp
lock
pop
push
push
ret
jle
cmpsb
sub
mov
ret
sbb
pop
dec
cmpsb
pop
lahf
mov
fcomip
jp
push
ljmp
jb
data16
jp
sbb
sti
xchg
sahf
inc
sbb
jbe
sbb
lods
jns
push
jecxz
sub
jae
mov
pop
in
call
aad
xchg
and
mov
ror
mov
push
call
or
ret
sbbl
mov
fsubrs
out
xchg
icebp
insb
and
jns
push
mov
mov
pop
andl
add
out
fstpt
sub
push
push
cs
icebp
lahf
xchg
movsl
cmp
cmp
fisubrs
faddl
imul
push
mov
inc
xor
sbb
pop
cmp
jl
sub
jg
scas
iret
pop
addr16
cltd
jle
xor
aas
add
movsl
out
xchg
jb
mov
xor
jno
mov
cmp
aas
cmpsl
and
or
lahf
mov
mov
mov
andb
mov
and
int
jae
daa
movsl
shll
and
mov
sbb
xchg
inc
cld
mov
mov
nop
xor
sarl
aaa
pop
cmp
lcall
insb
aaa
jae
push
push
xchg
sub
or
pusha
in
mov
push
push
pop
adc
ret
add
xor
pop
jmp
stos
call
mov
bound
test
and
outsb
push
jnp
inc
leave
pop
mov
add
cli
es
cs
frstor
es
notl
mov
je
mov
jmp
sub
mov
loop
pop
push
or
cmpl
sub
mov
nop
pop
mov
dec
shrb
psllq
lock
outsb
loope
lret
sub
cld
or
mov
rol
or
ret
dec
xchg
movsb
iret
fcmovnb
lahf
push
popf
pusha
add
and
mov
in
mov
gs
mov
pusha
mov
sahf
ret
fs
add
xchg
dec
sbb
movsl
in
pop
ljmp
pop
or
or
pop
into
sub
pop
push
popa
cli
fdivrp
sub
mov
dec
hlt
cmp
add
outsl
or
sarl
cmp
lret
cld
out
lock
xchg
jl
jns
and
mov
lods
cmpsl
movaps
test
outsl
mov
mov
and
jg
sbb
int
icebp
dec
loope
popf
jecxz
jmp
icebp
inc
mov
add
sbb
adc
sahf
hlt
adc
add
add
sub
mov
sbbb
fs
movsl
fsubrs
fimuls
ret
ret
xor
inc
imul
arpl
insb
add
jbe
rolb
or
sbb
xchg
or
lods
lahf
es
xor
sbb
cltd
outsb
popa
out
and
jmp
add
lret
mov
inc
push
sub
movsb
andl
mov
inc
push
fists
daa
adc
pop
jle
adc
into
pop
out
mov
or
adc
mov
xor
push
js
prefetch
sub
sub
imul
lea
sub
pop
cmc
mov
daa
push
lret
mov
ss
push
inc
sub
out
js
inc
cmp
iret
or
sub
daa
adcl
push
sub
arpl
cld
cltd
ss
mov
mov
adc
sub
test
sbb
push
daa
jl
in
daa
dec
mov
je,pt
in
push
mov
jle
fdivrl
cmc
lods
cltd
cmp
sti
cmp
scas
add
xor
sahf
xor
xchg
jle
lock
mov
in
dec
push
es
dec
push
dec
popf
xor
icebp
loop
mov
clc
cmp
int
es
jb
sbb
or
fmul
stc
popa
data16
lret
je
push
js
popf
inc
push
xchg
das
call
inc
push
shll
fcomip
cmpsb
mov
sbb
pop
insb
fwait
pop
jp
sahf
gs
xor
jno
xchg
sub
dec
jmp
mov
pop
jl
nop
sahf
push
out
aad
and
in
inc
xchg
jb
pushf
mov
fsubr
fstl
aas
ss
mov
mov
jne
out
sti
ss
leave
push
xor
mov
xchg
cmp
push
gs
repnz
gs
mov
mov
mov
push
leave
flds
sbb
jge
jmp
lds
pop
shrl
lods
into
fsts
add
negb
and
ret
jns
shrb
shrb
aam
mov
inc
mov
xor
mov
sbb
cmpsb
pop
test
or
roll
jno
pop
pusha
mov
xor
or
lret
xchg
sub
iret
scas
pop
decb
movsl
xchg
add
test
push
in
sub
mov
adc
mov
mov
repnz
cmp
sub
dec
dec
out
mov
ret
xchg
push
mov
bound
adc
je
andb
jle
adc
loop
dec
mov
jmp
cmp
leave
jecxz
in
movsl
repz
adc
popa
lret
lret
xchg
pop
ret
sbb
gs
jl
pop
lcall
dec
mov
cmp
rorb
sbb
mov
leave
arpl
jg
cmp
test
mov
shl
add
mov
loope
add
mov
in
pop
pop
sub
bound
rorb
pusha
loope
mov
add
and
es
cs
add
fs
test
jb
insb
jle
sahf
or
fdivr
loop
lock
pop
adc
jno
cld
and
sub
jo
pop
aas
push
mov
and
sub
adc
push
flds
xchg
jbe
dec
and
enter
jae
lods
mov
ficomps
push
clc
pop
jge
icebp
push
imul
sbb
out
ret
rcl
inc
in
xchg
push
cwtl
jle
inc
mov
iret
sub
jb
adc
pop
gs
push
lods
mov
lcall
push
push
jle
xor
jge
iret
gs
mov
pandn
test
and
push
jns
cld
jg
pop
data16
sub
mov
daa
rclw
fsubl
pop
cmp
addr16
sarl
add
inc
jmp
stos
xchg
ss
pop
mov
addr16
sahf
adcl
scas
lock
sbb
jge
insb
push
fwait
sbb
iret
das
sub
sbb
gs
jg
fdivrs
mov
test
dec
push
addr16
dec
dec
jp
lcall
sti
dec
in
add
imul
arpl
outsb
popa
or
data16
and
orl
jp
test
lcall
mov
das
ss
mov
mov
dec
sti
lock
stos
mov
lock
mov
sbb
pop
sub
jecxz
insl
mov
fists
cmpsl
mov
mov
or
pop
addb
jae
jns
ret
iret
jno
pop
add
shrl
xchg
dec
ret
in
or
dec
pop
pop
push
mov
insb
xchg
mov
repz
mov
das
or
jbe
lods
inc
xor
add
xchg
mov
dec
dec
cmp
cmp
cmp
in
add
inc
std
out
jmp
fidivl
mov
clc
inc
sbb
inc
stos
out
jnp
loopne
xor
adc
mov
mov
out
hlt
push
aam
rol
insb
leave
jg
lret
out
fs
mov
enter
mov
mov
mov
jge
add
sbb
rol
inc
mov
mov
lods
out
add
aas
pop
push
and
test
insl
ret
and
pushf
sub
addl
mov
shr
mov
loope
cmp
in
xchg
stos
xor
cwtl
xor
lret
fwait
sti
data16
fdivrl
movl
xor
sbb
mov
inc
adc
mov
pop
bound
mov
shl
fildll
mov
push
add
push
dec
pop
mov
aam
and
mov
mov
jnp
inc
fsts
cs
shl
mov
mov
jno
aaa
rol
ret
inc
sahf
push
xor
inc
paddsw
out
roll
xchg
mov
add
arpl
in
jecxz
sub
or
push
xchg
cmpb
sub
pop
bnd
lods
scas
add
out
pop
cmp
fmul
pusha
in
fistl
xchg
notl
dec
jg
ror
jl
mov
jmp
ljmp
xchg
pop
push
push
or
movsl
data16
ret
pusha
mov
stc
dec
inc
pop
inc
popa
xor
lods
arpl
outsl
push
insb
sbb
cwtl
imul
mov
adc
fwait
jmp
andl
mov
fisubs
ljmp
jne
add
ret
fs
and
pop
mov
ds
cltd
sahf
push
pop
pusha
jb
pop
adc
int3
vpunpckhqdq
jg
inc
mov
adc
or
and
mov
andb
fwait
sub
std
cmpsb
negl
out
in
xor
adc
mov
cmpsl
xor
das
outsb
push
sub
xor
push
dec
pop
lock
daa
outsl
inc
das
or
pop
cmpsl
or
dec
adc
sub
out
jno
add
clc
leave
mov
in
cmp
dec
shlb
dec
mov
adc
jmp
lret
data16
push
push
pusha
or
popf
dec
test
icebp
mov
cmp
mov
out
pusha
in
inc
push
xor
add
xchg
out
mov
shl
xchg
hlt
addr16
inc
test
lret
int
ds
xor
and
mov
cmp
adc
sarb
push
test
or
jo
test
jne
aaa
lods
jp
cmp
lcall
mov
mov
sub
fs
xchg
or
jns
out
cld
jecxz
fwait
fs
insl
jbe
xchg
lret
test
pop
ja
sarb
or
sbb
sbb
lret
ret
sti
inc
enter
daa
arpl
push
inc
mov
clc
sahf
cmpsb
xchg
sarb
mov
sub
mov
or
sbb
lret
pop
sbb
jl
test
and
dec
push
xchg
xchg
dec
pop
in
jmp
cmpsb
movsb
push
add
or
mov
pop
repz
mov
jle
xor
push
add
mov
bound
test
mov
mov
clc
test
dec
hlt
scas
sub
ja
mov
scas
sbb
or
pop
xchg
fistpll
jb
xor
add
sub
dec
jmp
je
jle
mov
adc
mov
insl
mov
int
imul
repnz
sub
es
fwait
cmpb
mov
into
movsb
push
or
insb
and
or
mov
dec
adc
adc
andb
push
sti
mov
aaa
jnp
stos
dec
pop
and
jle
fisttps
out
fnstenv
and
push
xor
pop
lret
adc
pushf
pop
sti
or
fldl2e
cmp
sub
out
mov
and
mov
mov
int3
and
jne
in
arpl
add
dec
sbb
call
sbb
adc
jmp
lret
repz
mov
rclb
mov
fidivs
imul
in
test
inc
jmp
mov
or
or
and
jo
mov
mov
and
pop
inc
lock
cld
push
inc
pop
insb
roll
pop
out
pop
mov
cmpsb
jmp
dec
jg
out
cvtps2pd
in
dec
push
mov
repz
xor
push
and
mov
inc
push
jp
cmp
int
popf
add
rorl
sbbl
jecxz
sub
xlat
push
inc
push
jmp
mov
fwait
sbb
ds
aaa
shlb
aas
push
data16
idivb
daa
cmc
mov
filds
jle
test
scas
inc
push
les
add
mov
nop
inc
cld
jecxz
xor
dec
outsl
adc
in
pop
mov
cmc
mov
push
or
repz
test
pop
bound
outsb
test
or
cmp
push
sub
repz
insl
xchg
hlt
dec
cmc
cmp
mov
sub
stc
push
push
add
mov
sub
imul
dec
pop
scas
inc
scas
inc
jae
cmp
inc
int3
lret
call
push
jns
inc
out
movsl
dec
fidivs
fsubr
and
cmpsb
in
cmc
jle
cmp
out
mov
xchg
pop
lock
cli
xchg
jmp
fimull
iret
in
stos
and
push
adc
pop
addr16
and
repnz
inc
mov
and
jno
mov
pop
into
xchg
adc
mov
lcall
mov
jno
lds
dec
imul
idivb
cs
and
int
add
adc
int
lods
add
call
jmp
xchg
inc
sarb
push
movsl
iret
sbb
cmpsb
xchg
sbb
push
mov
cmp
daa
cmc
mov
pushf
jp
jnp
dec
push
cltd
rorl
addr16
adc
and
xor
out
insb
push
adc
in
dec
or
jnp
sub
addr16
sbb
xchg
cmp
push
leave
scas
fmuls
mov
fnstsw
mov
mov
cmp
xor
dec
bound
pop
cmp
ss
cltd
sub
subl
xor
les
scas
dec
and
push
clc
popl
push
bound
adc
call
cmp
and
sti
mov
loopne
pop
add
jp
outsl
lods
xchg
inc
int3
pop
loope
rclb
loop
sahf
leave
and
adc
lea
cmp
xor
inc
in
test
ja
rorl
pop
mov
out
call
cld
rolb
inc
dec
scas
je
rolb
push
mov
out
and
sbb
lahf
negl
les
xchg
ja
push
mov
mov
stc
adc
sub
mov
test
add
jno
jne
test
lods
mov
std
int3
add
aad
push
pop
pop
inc
adcl
lcall
jns
and
and
adc
pop
and
stc
xor
andb
test
subb
mov
mov
xlat
fistps
lods
fdivrl
push
test
inc
fidivrl
mov
inc
push
mov
pop
mov
mov
dec
jne
std
adc
mov
jbe
push
call
cltd
mov
mov
lcall
arpl
push
popf
gs
sub
push
and
cmp
jno
fucom
push
lret
mov
inc
cltd
in
sahf
lods
sbb
dec
add
lea
xchg
std
pop
ljmp
fdivrl
or
xor
xlat
sub
adc
jo
test
inc
jl
or
jne
xchg
adc
adc
pop
pop
sub
mov
pop
xor
mov
mov
dec
jl
ret
or
int
cmp
pushf
mov
push
xchg
mov
xchg
sub
mov
int3
inc
outsl
sbbl
or
pusha
idivb
cmovp
cwtl
orl
sar
cmpsb
out
dec
sbb
sbb
adcl
sbb
pop
or
mov
mov
lods
cld
loop
loopne
sub
lret
jbe
mov
sbb
or
push
jo
test
push
imul
mov
mov
test
faddl
mov
lret
inc
push
movsb
cmp
leave
ret
xchg
aad
inc
pop
sbb
xorb
icebp
fsubs
adc
les
adc
inc
repnz
xchg
cmpsb
std
inc
enter
ja
gs
lea
stos
es
shl
adc
addb
mov
push
cmp
mov
add
int3
jl
std
xchg
mov
sbb
adc
daa
fcoml
hlt
mov
bound
int
adc
dec
rcrb
mov
or
dec
pusha
jno
cwtl
ss
push
and
fs
push
lds
scas
inc
popf
stos
add
orl
xor
mov
push
cmc
cmp
mov
pop
mov
add
hlt
jbe
out
sahf
repz
int
jl
aad
rcll
dec
and
mov
push
push
fmulp
fs
cli
jne
xchg
lods
scas
push
add
icebp
and
daa
lds
sarb
sbb
pop
mov
mov
dec
xchg
inc
jg
aas
sbb
lods
dec
cli
add
in
pusha
cmpb
gs
sub
pop
cmc
mov
fsubl
or
ret
lock
das
inc
push
or
jle
push
xor
mov
push
movsb
shll
addr16
loop
cmpsb
in
push
cli
pop
inc
add
std
pop
and
or
xor
add
push
or
shrl
mov
xor
loopne
fwait
xor
js
lcall
pop
fidivrl
pop
sub
mov
lret
imul
xlat
inc
shlb
int
sbb
cmp
dec
cmp
aad
movsl
lds
dec
lcall
sub
dec
fnstenv
scas
push
scas
not
push
mov
or
dec
out
dec
mov
call
pop
push
inc
jnp
cld
andl
pushl
mov
in
mov
xor
aam
and
shl
mov
mov
test
sbb
xchg
sub
adc
fildll
data16
push
test
arpl
xor
repnz
dec
out
sbb
adc
in
pop
icebp
decl
jnp
mov
jbe
iret
mov
shll
mov
inc
gs
int
fcoml
push
mov
imul
xor
push
scas
push
ljmp
xor
pop
add
jns
std
mov
insb
sub
imul
in
iret
cwtl
das
mov
in
inc
pop
mov
pop
fs
xchg
fmuls
mov
int3
stos
jnp
push
std
addl
jge
jo
jns
xor
pop
push
xchg
iret
stc
mov
aas
ret
les
mov
lds
lret
pop
outsb
add
jo
or
iret
movl
insb
sahf
in
int3
icebp
sti
insb
sub
stos
cmp
push
inc
stc
dec
movsb
jp
jge
fs
mov
std
stos
xchg
push
mov
test
jns
popa
lds
jns
sub
jns
inc
cmpsl
lcall
mull
out
std
out
daa
aas
divb
mov
aad
or
movsl
cltd
in
dec
jnp
mov
cmc
pop
and
ret
push
push
or
jmp
sahf
imul
lds
aas
dec
repz
mov
jp
roll
int3
sbb
push
fsqrt
push
bswap
jp
shr
jge
das
jmp
xor
pop
imul
sbb
test
sbbl
or
pop
cmp
or
or
push
out
dec
inc
rorl
xchg
incb
pushf
pop
cmp
dec
push
imull
notl
popa
sbb
setnp
mov
imul
adc
enter
stos
lds
sbb
xor
dec
dec
jmp
mov
cli
push
notl
inc
ja
or
sbb
xchg
jge
inc
hlt
addr16
and
dec
ss
pusha
mov
bound
lea
test
sbb
pop
dec
adc
mov
clc
aad
leave
sbb
inc
lahf
xchg
rcrl
hlt
push
aad
dec
cld
xchg
shll
btrl
call
adc
lds
xor
popf
xor
test
push
sub
sub
aam
push
sub
xchg
rorl
icebp
loope
cmp
icebp
cmp
xor
xchg
repz
add
adc
hlt
and
mov
or
es
push
xchg
movsl
ficomps
mov
out
inc
and
lret
insb
inc
pop
jne
imul
xor
cmp
test
sbb
jmp
sbb
aam
cmp
repz
outsb
sub
iret
mov
cmp
adc
outsb
fildll
cmpsl
shll
fistps
dec
xchg
or
adc
or
ja
xor
lret
and
in
test
jg
fistpl
cwtl
xor
jl
pop
jmp
nop
mov
cmp
and
dec
jecxz
jge
push
jbe
push
dec
jae
cmpsl
jmp
adc
push
push
stc
xlat
outsb
sub
incl
push
pop
cmpsl
jbe
icebp
add
jge
cmp
inc
jecxz
or
sbb
ja
adc
jp
jmp
pop
lock
add
js
out
lds
push
mull
loope
sbb
add
sub
bndstx
mov
push
jg
adc
loope
int3
push
and
push
adc
lret
rcl
test
shrb
push
or
sub
aam
out
lcall
adc
movsl
jl
xor
add
or
sbb
insl
rcl
out
sbb
fidivrl
and
xchg
fisttpl
and
call
jle
mov
or
or
mov
sub
push
cmpsb
daa
fucomi
fbld
pop
clc
xchg
popa
stos
pop
inc
lret
int
sbb
inc
cmp
aaa
push
and
sbbl
into
mov
cmp
nop
push
repnz
lcall
cmp
divb
push
or
loope
insb
icebp
loopne
xor
push
int3
xor
mov
ret
inc
in
inc
pop
dec
in
je
ret
jle
pop
insb
cvttps2pi
fisttpl
test
fnstcw
mov
hlt
sub
sbb
pusha
and
nop
cld
addr16
scas
jb
mov
adc
push
jecxz
cmp
mov
aad
sub
jecxz
mov
dec
cmp
call
lahf
lods
sub
loopne
mov
divl
adc
and
mov
pusha
inc
fsts
xor
push
pop
cmpsb
cmp
push
xor
ret
ja
das
mov
test
xchg
jg
xchg
mov
sbb
push
xlat
jno
add
movsl
inc
jp
xchg
cmp
or
push
sahf
lret
clc
adc
es
or
shl
and
inc
lds
jg
out
fldenv
cmp
xor
out
or
sub
scas
add
loopne
test
and
out
setnp
add
fldt
jno,pn
jmp
mov
lds
sub
dec
and
out
xchg
mov
int3
imul
cmc
popf
and
pop
mov
lahf
sbb
mov
mov
stc
jl
movsb
adc
ret
inc
sbb
mov
iret
xor
push
dec
jb
inc
call
jbe
inc
fcmovnu
inc
inc
fs
xor
imul
adc
pop
mov
pop
insl
and
out
push
pop
es
or
pop
mov
pop
imulb
sti
push
cmp
xor
mov
scas
mov
sbb
mov
fldl2t
stc
lds
mov
mov
push
dec
lock
xor
test
pop
stc
adc
or
mov
mov
adc
xchg
inc
andps
sbb
or
mov
push
outsl
popf
add
mov
mov
pop
cmp
or
add
cmp
sahf
mov
xor
andl
sbb
xchg
into
sub
repnz
lods
bound
sbbb
icebp
and
inc
sahf
jp
nop
xchg
adc
clc
mov
idivb
adc
pop
mov
push
mov
loop
mov
push
lock
or
cmp
insl
push
mov
aam
lods
sbb
ja
out
jbe
and
cmp
inc
out
inc
mov
jno
pop
ret
and
mov
push
outsb
dec
cwtl
test
stos
dec
push
dec
mov
outsb
inc
or
lods
cmpsl
es
jae
inc
xor
jae
jle
loop
pop
fimuls
call
rorl
pop
inc
push
sbb
push
inc
mov
xor
ljmp
rorl
jge
adc
test
ret
ljmp
push
mov
ss
mov
pop
mov
lock
xor
ljmp
mov
and
cmp
ficoml
mov
sahf
movsl
inc
mov
lret
bound
cld
jge
enter
mov
and
test
dec
and
jg
mov
push
mov
adc
ds
in
add
pop
insl
insb
sbb
dec
sub
cwtl
lea
pop
rcl
cmpsb
sbbl
clc
mov
lea
or
dec
mov
stc
je
daa
into
push
mov
inc
xor
aam
movsl
mov
dec
sbb
mov
xchg
pop
push
sarl
mov
and
aad
adc
sbb
sahf
dec
adc
mov
adc
mov
scas
inc
cmp
bound
pusha
outsl
or
stos
sarb
mov
jl
les
adc
sbb
cmp
lods
inc
mov
inc
cmpsl
data16
fbstp
jb
jne
cwtl
adcb
pop
dec
hlt
fdiv
add
push
je
and
adc
test
push
into
mov
mov
jle
cmp
rcrl
fidivs
lods
aaa
jne
dec
cld
lcall
mov
push
js
pusha
or
shlb
dec
cld
outsl
cmp
add
ja
and
rcrl
pop
and
das
inc
in
loop
je
or
addr16
daa
lcall
or
fisttps
cmp
push
pop
sbb
in
adc
shl
outsb
push
add
jg
or
adc
cmpsl
push
sarl
cmpsl
and
push
enter
inc
add
xchg
push
mov
mov
pop
xchg
int3
test
dec
fidivrs
or
cmp
pop
out
lahf
out
icebp
mov
xor
pop
hlt
aaa
enter
push
mov
sbb
in
lahf
pop
scas
cmp
mov
stos
or
mov
rcrl
mov
sub
xor
repnz
xor
jae
dec
jae,pt
lret
lret
pushf
jle
push
and
add
push
inc
pusha
push
fidivl
shlb
lock
pusha
and
mov
xchg
test
rcll
test
mov
mov
push
push
push
lock
xchg
shll
and
arpl
push
aad
mov
add
xchg
sub
in
lcall
and
add
into
lcall
sub
add
popf
mov
dec
and
jo
or
mov
sub
xchg
dec
divl
enter
or
mov
xlat
out
xchg
adc
js
lods
test
jp
add
rcr
pop
mov
int3
sub
incl
movsl
or
jp
jae
adc
in
fisttpll
xchg
stos
cmp
testb
sahf
mov
aaa
hlt
inc
lock
decb
mov
jnp
mov
icebp
mov
minps
pop
lock
inc
cmc
pop
push
add
push
int3
mov
fldt
inc
dec
fimuls
cmpsb
or
xor
push
mov
xrelease
push
hlt
or
and
xchg
stc
mov
sbb
and
les
ljmp
push
ja
dec
test
dec
pop
lock
pop
ja
mov
int3
mov
jns
je
xor
xchg
sbb
xor
into
pop
insl
add
push
dec
cld
xlat
sub
out
dec
int3
xor
iret
enter
stos
ret
mov
sub
jecxz
inc
push
add
or
push
jmp
inc
inc
or
mov
fidivs
mov
lcall
inc
jecxz
test
sub
arpl
sbb
inc
cmp
lcall
in
or
push
xchg
sub
push
out
mov
hlt
ja
clc
xchg
jbe
mov
fsts
imul
cmp
adc
scas
das
jecxz
mov
pusha
ljmp
mov
inc
xchg
cmp
or
cmpsl
jnp
daa
push
scas
inc
adc
dec
int
repz
es
cmpsl
pop
mov
or
cwtl
test
dec
dec
cwtl
mov
cmp
xchg
adc
mov
pop
je
mov
adc
outsb
or
add
iret
and
les
jmp
sbb
mov
outsb
inc
fisubl
inc
cmp
push
out
adc
out
sub
aas
insl
mov
push
lahf
daa
mov
add
outsb
push
mov
sub
fsubrp
add
mov
mov
jmp
cmp
xor
addr16
popa
cmc
mov
in
mov
lret
mov
inc
xlat
leave
push
jle
in
sub
dec
dec
out
jle
call
test
inc
adc
adc
push
push
lods
hlt
lret
xor
sub
dec
outsb
add
ss
cs
mov
divl
mov
imull
icebp
and
cltd
out
rcrl
mov
add
mov
jo
inc
in
inc
sub
push
inc
mov
popa
cmp
pop
out
fwait
imul
pop
inc
xchg
repz
outsb
xchg
dec
mov
xorl
xchg
push
dec
loop
pushf
out
rcrb
adc
mov
mov
aaa
test
mov
gs
pop
jbe
add
inc
pop
fiadds
sub
ret
in
aaa
icebp
mov
fwait
jae
cmp
lods
jge
js
cli
pop
fisttps
mov
inc
jbe
in
mov
pop
scas
mov
adc
xchg
pop
ljmp
test
shlb
mov
sub
sbb
xchg
adc
scas
call
es
ljmp
stos
inc
fs
xor
cmp
icebp
fmuls
pop
fs
popl
jmp
into
mov
rcl
stos
mov
inc
fnstsw
push
mov
mov
pop
fcmovnu
sbb
es
int
icebp
jmp
aad
adc
mov
cld
or
imul
adcl
inc
pop
pop
mov
test
push
push
push
rol
aad
mov
add
es
dec
mov
scas
int
mov
mov
xor
xchg
andb
xlat
lods
decb
mov
scas
xchg
fcomps
aas
add
je
jnp
xor
inc
mov
pop
fnsave
mov
gs
mov
or
pop
mov
leave
sub
test
pop
pop
dec
pushf
lods
jmp
out
pop
in
pushf
cmp
fldcw
jae
push
add
lret
outsb
pop
out
xor
outsb
mov
notb
push
jmp
push
adcl
bound
inc
stc
sti
sub
or
fldenv
xchg
rep
jbe
pop
dec
add
lahf
sahf
jle
add
mov
and
fstl
jbe
fs
add
out
shrl
xlat
add
fcompl
push
dec
stos
in
repnz
ds
inc
fcompl
xchg
enter
int3
loopne
sub
lahf
repz
loopne
jge
repnz
add
push
pushf
cwtl
std
pop
inc
cmpl
std
mov
das
push
popf
and
cmpsl
jp
jnp
jb
dec
in
stc
sar
inc
mov
dec
add
sbb
inc
icebp
dec
jae
sub
inc
fldenv
dec
call
pushf
sbb
scas
jmp
cmp
in
or
jae
pop
dec
daa
outsl
jecxz
sahf
dec
insl
nop
imul
iret
mov
aam
cmp
int
popa
or
push
loopne
adc
xor
repnz
cmp
cltd
xorb
mov
jmp
out
pop
shl
jne
leave
repnz
or
in
dec
pop
ds
stos
pop
mov
insb
in
out
cwtl
popf
fidivl
in
repz
idiv
or
icebp
push
ljmp
jno
lcall
mov
inc
sub
nop
pushf
mov
jo
inc
cmp
push
ret
mov
push
mov
insl
arpl
std
in
mov
pushf
mov
sub
mov
inc
sbb
mov
inc
sbb
lock
xchg
add
push
cmp
mov
dec
dec
stos
mov
popf
mov
data16
test
push
add
into
rcll
ss
jnp
xchg
xchg
pop
movsl
mov
pop
add
mov
push
sub
shl
dec
and
lret
inc
jmp
lret
out
fcoml
mov
in
inc
add
mov
insb
add
pop
xchg
in
fwait
cmp
jg
lock
leave
jo
lods
xor
xor
andl
rcll
push
iret
jno
push
xor
mov
push
adc
cmp
out
xchg
and
add
mov
mov
mov
jmp
cmp
js
inc
pop
cmp
mov
mov
adc
cmp
int3
addr16
es
addr16
inc
pushf
movsl
stos
sub
lret
aas
push
adc
mov
je
cmp
lods
sbbl
inc
test
mov
hlt
fisubrs
mov
aad
add
mov
shll
int
mov
sub
orb
jle
lea
in
xchg
sub
stos
lret
xor
sbb
je
xor
mov
roll
mov
mov
sbb
dec
daa
pop
xor
or
stos
mov
xlat
cwtl
sarb
mov
je
sbb
in
xchg
popa
sub
pop
adc
lret
xor
out
test
repnz
and
xor
cli
cmp
sub
aam
shl
je
ss
sbb
mov
adc
or
in
nop
lds
jno
test
testl
insl
or
jno
xlat
dec
push
outsl
jp
fldt
jnp
xchg
lods
arpl
rcr
icebp
xor
rclb
cmp
cwtl
insl
stos
ja
pop
jp
popa
inc
sub
pop
and
call
aaa
imul
mov
lcall
xor
push
sub
test
mov
imul
sti
xor
subb
bound
and
lret
inc
sbb
stos
or
jo
push
adc
push
lahf
fwait
dec
mov
dec
cld
xchg
sbb
inc
imul
stos
mov
xorl
filds
imul
mov
outsl
xchg
sub
push
dec
loopne
and
cmp
dec
pop
rorb
or
push
mov
xchg
gs
aaa
push
xchg
mov
dec
mov
lcall
cmpsb
cmp
jmp
fstl
jmp
pop
sub
pusha
mov
andb
mov
jnp
cmp
push
sub
jne
xchg
and
inc
fwait
adc
pop
rorb
loop
data16
or
cwtl
popf
adc
sar
std
push
mov
inc
mov
imul
pushf
mov
jmp
int3
loope
mov
in
out
fstpt
xor
das
or
cmp
enter
mov
test
mov
fbstp
jmp
adc
fmull
mov
push
jecxz
xchg
lahf
cmp
js
jne
jns
hlt
test
push
mov
push
jecxz
adc
fstps
adc
jmp
subb
dec
ja
cmp
jne
jb
cmp
fistl
ljmp
jg
mov
lcall
and
sbb
subb
aad
add
push
popf
adcb
mov
loop
inc
push
mov
lcall
inc
shl
repnz
sub
xlat
or
push
mov
sbb
push
mov
mov
mov
lret
push
insl
out
insb
and
iret
push
or
into
mov
mov
in
outsb
aad
mov
pop
scas
nop
out
das
ret
sub
jbe
hlt
mov
xchg
je
cltd
fists
scas
shrb
lods
mov
clc
cmp
lahf
popf
sub
jbe
in
jnp
popa
icebp
fistpl
mov
test
cmp
push
scas
loope
mov
jbe
and
jbe
daa
mov
mov
and
xchg
push
pop
adc
sub
clc
repnz
inc
push
loopne
xchg
push
mov
and
cmp
scas
js
stos
test
pop
jb
cltd
or
stos
dec
popf
movsb
and
fnstsw
in
scas
pop
lcall
lahf
mov
push
movsl
push
inc
das
enter
cmp
inc
mov
lcall
and
into
jb
jl
and
lock
pop
mov
testb
xchg
pop
rorl
daa
mov
mov
xor
mov
or
cmp
push
mov
js
and
sbb
bound
xor
test
push
sub
jl
push
cmp
lea
fstpl
push
loope
data16
lahf
loope
mov
pop
xor
into
leave
inc
dec
sub
sub
jnp
fdivl
shlb
mov
pushl
inc
in
dec
movsb
rcl
lds
jns
adc
in
jno
sti
push
sbb
or
dec
mov
js
cmp
pop
jb
dec
scas
ret
xor
popa
push
lds
dec
dec
in
les
jle
es
gs
sub
sub
mov
inc
and
pop
xchg
fs
dec
lahf
adcl
mov
sub
or
push
mov
enter
out
xor
sbb
cmp
inc
out
jo
les
xchg
call
out
sbb
or
or
mov
jecxz
outsb
mov
std
jecxz
movsl
xchg
push
inc
stos
dec
adc
jl
and
inc
mov
sbb
andl
xor
int
in
lds
sub
arpl
mov
inc
jmp
out
mov
imul
xchg
sbb
jnp
sti
jbe
pop
push
jmp
mov
or
fstpl
int
cwtl
cmp
nop
mov
arpl
gs
dec
mov
push
jb
stos
mov
lds
sbb
std
test
xor
ss
mov
inc
enter
jno
dec
and
fnstenv
inc
aad
push
mov
sbb
jge
shrb
add
dec
repz
mov
xchg
xor
pop
adc
scas
sbb
dec
and
fisttpl
cmp
sub
pop
jne
cmp
fiaddl
enter
cmp
lret
sti
xor
imul
mov
push
mov
pop
int3
pop
add
ret
out
out
mov
mov
sbb
sbb
mov
push
jb
sbb
mov
xchg
dec
inc
jo
mov
stc
movsl
and
or
andb
sub
pop
cmp
pop
movsb
loopne
aaa
mov
into
push
fdivp
pusha
pop
mov
popa
xchg
dec
jne
imulb
pop
fldl
jo
shrl
fldt
xchg
xor
push
and
iret
movsl
xchg
jno
jmp
lcall
ds
outsb
sub
clc
xor
icebp
pop
cmp
xchg
aas
fs
add
push
xchg
fmul
mov
mov
fs
cmp
pop
jb
aam
mov
or
cmp
adc
in
or
bswap
repnz
cmp
push
ja
jae
mov
bound
inc
jmp
movsb
inc
fdivl
mov
int3
cs
stos
push
enter
mov
add
idivb
std
dec
flds
mov
icebp
push
fucomp
adc
adc
mov
loope
cli
clc
xchg
adc
xchg
lahf
xchg
mov
xchg
or
out
mov
xchg
cmp
sub
js
pop
in
mov
leave
cld
xchg
stos
jmp
inc
rorl
ficoms
sahf
ja
dec
pop
loop
imul
lahf
idiv
adc
int3
fwait
pop
stc
popf
add
cli
mov
jle
shll
or
dec
or
je
push
cld
aad
dec
pop
fiaddl
cmpsl
or
mov
lcall
adc
cwtl
ljmp
jb
in
mov
outsb
adc
mov
inc
pop
jge
pop
imul
das
pop
es
push
xchg
pop
dec
push
fstps
sarl
repnz
pop
cmpsb
add
inc
pop
pop
xchg
mov
push
jge
subb
stc
nop
fdiv
jmp
pop
sbb
filds
lret
xlat
inc
jecxz
inc
sbb
call
or
in
iret
hlt
fmul
and
dec
dec
xor
mov
icebp
ds
out
jb
push
into
or
mov
fsubrp
or
ret
add
sbbl
and
incb
dec
shrl
xchg
xor
cmp
test
mov
pop
fisubs
into
ret
insl
xor
pop
in
mov
inc
jo
lock
mov
bound
mov
imul
arpl
xlat
test
mov
pop
outsb
push
push
ret
insl
mov
mov
mov
mov
jns
adc
loopne
stos
mov
push
in
jge
push
inc
aam
je
jmp
cmp
sub
jle
pushf
mov
rorl
cltd
aad
lcall
cs
mov
cmp
jbe
adc
cmpsl
shll
or
in
ret
sub
ds
imul
xchg
dec
adc
mov
popa
addr16
sub
mov
hlt
outsb
ds
push
jl
jae
xor
pop
dec
pop
roll
jne
fcmove
mov
imul
push
cmpsb
das
mov
nop
jle
mov
lods
xor
push
mov
shlb
adc
rcll
mov
shll
stc
or
aaa
pushf
mov
pop
in
jl
mov
out
jb
mov
je
xor
push
movsl
jl
push
inc
nop
sub
shl
mov
mov
jno
lcall
or
sti
mov
pop
sub
stc
push
clc
sti
fisttpll
loopne
shll
or
cmc
sub
popa
lods
out
lahf
add
rcl
lods
aas
mov
jp
push
dec
dec
mov
sbb
lods
rcrl
mov
jecxz
sub
and
movsb
call
fucomip
sub
fdivrs
lret
pop
stc
mov
call
sahf
cmp
in
and
xor
inc
shlb
cmpsl
pop
adc
jno
in
leave
jl
jle
or
out
xor
push
and
stos
dec
add
pop
mov
fdivl
dec
push
dec
loopne
rcrb
faddl
addr16
aas
or
jno
sahf
mov
jbe
add
into
stc
test
cmp
lret
nop
mov
cltd
mov
add
xor
mov
xor
adc
mov
push
cwtl
and
out
mov
loope
cmpsl
dec
jae
cs
push
stc
push
push
push
xchg
dec
inc
int3
jl
stc
pop
faddl
in
or
and
cmpsl
push
push
movsb
imul
mov
xchg
adc
imul
dec
pop
fistpl
xor
jne
aaa
xchg
mov
push
or
in
adc
lods
xchg
mov
div
inc
lods
pop
adc
mov
push
xchg
add
dec
mov
adc
mov
inc
pusha
es
mov
xor
stos
mov
fdivr
sub
scas
jg
push
push
nop
daa
test
jle
clc
push
fnstsw
mov
insl
das
icebp
cmpsb
stc
mov
dec
jl
mov
in
test
sti
adc
xorl
stos
movsb
arpl
mov
arpl
imul
jmp
or
scas
jle
mov
je
xor
and
and
rcl
bound
andb
lods
sub
andl
pop
xlat
les
sub
sbb
jbe
pop
mov
mov
push
mov
xchg
leave
jmp
jmp
cltd
mov
and
jb
add
sbb
jg
xor
cmp
fdivrl
sbb
int
push
jle
xchg
pop
jbe
dec
mov
pop
aam
mov
push
inc
mov
sbb
inc
dec
dec
mov
xchg
shll
repz
test
sbb
mov
jge
andb
mov
sub
dec
nop
sti
inc
lret
or
sbb
push
or
mov
ss
adc
add
sbb
dec
pop
xchg
out
cmp
add
test
sahf
mov
rorb
dec
fwait
sbb
inc
pushf
xor
jecxz
das
cwtl
push
xchg
pop
in
jb
dec
or
and
pop
pop
xchg
orb
and
ljmpw
and
adc
call
lret
or
std
fwait
jl
or
adc
jle
jae
scas
gs
stc
or
dec
dec
hlt
jnp
jp
mov
orb
dec
insl
or
or
aaa
xchg
aas
mov
fcoml
mov
imull
loopne
mov
xchg
jb
popa
xor
mov
add
jo
in
test
push
and
rcrb
and
or
fldt
cmp
or
jo
por
cmp
mov
jo
das
out
cli
inc
shll
ds
popf
ss
ret
or
cld
push
punpckhdq
scas
test
les
pop
sahf
jnp
icebp
mov
das
call
pop
fld
adcb
sti
test
mov
xchg
jge
cmpsb
cmp
xchg
cmp
mov
mov
test
push
push
dec
inc
lret
loop
mov
push
inc
gs
fmuls
pop
xor
ss
daa
push
sub
xchg
add
fld
rorl
xchg
push
xor
mov
and
shll
dec
movsl
cli
add
test
movl
repnz
daa
xchg
mov
inc
pop
test
jne
rcll
adc
jecxz
pop
movsb
fcmovbe
jne
cmp
loop
cmpsb
pop
aas
rcl
push
ljmp
pop
scas
xchg
cmp
imul
inc
adc
sbb
push
mov
ficoms
xlat
or
js
insl
cwtl
fsubrp
int
or
lods
or
cmc
inc
repz
negl
scas
or
das
mov
push
lods
add
dec
aas
iret
mov
jns
push
mov
lcall
lret
and
and
jne
into
int
mov
pop
add
shll
push
repz
add
or
nop
and
rcl
es
xchg
jecxz
jns
jge
es
sahf
or
sti
cmc
or
cltd
data16
lret
pop
imul
adc
pushf
dec
or
mov
rorl
xchg
pop
lods
outsb
pop
lock
add
mov
and
inc
mov
sub
arpl
cmc
icebp
rorb
fdivrs
lret
shlb
xchg
psubsb
mov
test
les
stos
mov
call
or
cmc
mov
hlt
push
fdivrl
or
repnz
in
mov
cli
xor
popa
xor
mov
and
popf
pop
sub
sbb
loop
mov
mov
adc
sub
adc
js
xorb
sub
cmpsl
out
dec
je
test
test
lahf
jp
fisubs
mov
in
stc
in
gs
mov
aaa
jbe
adc
sbb
xchg
adc
in
sbb
mov
test
cli
movsb
push
in
mov
pop
xor
push
in
cld
addr16
inc
mov
mov
inc
out
push
add
lods
lahf
aaa
xor
in
add
movl
mov
fsubs
ljmp
lds
lahf
mul
inc
fidivrl
push
xor
cmp
js
and
sbb
pmaxsw
sbb
rcrb
push
in
inc
dec
mov
lret
lret
ljmp
ret
lds
mov
mov
lea
mov
arpl
popf
mov
cld
cmc
aaa
xor
or
jnp
push
mov
in
adcl
pop
test
sbb
rorb
dec
pusha
cli
xchg
cmpsl
aam
or
or
cwtl
xor
xchg
bound
aam
mov
shl
add
adc
and
sub
loop
loopne
jl
or
rcll
xor
push
or
xchg
sbb
and
cmpsl
mov
mov
xchg
push
fcmovnb
mov
js
lret
lds
add
sti
xlat
xchg
dec
aad
in
sbb
pop
mov
subl
stos
lds
mov
call
sbb
repnz
mov
cmp
insb
cmp
cmp
incb
sub
in
mov
xchg
add
mov
ss
push
inc
xchg
cwtl
jae
fnstsw
xchg
push
sub
nop
cmc
sbb
cmp
push
jno
imul
mov
or
repz
fbstp
mov
pop
jae
hlt
mov
add
cwtl
insl
test
pop
xchg
pop
mov
into
cmp
xchg
gs
mov
fistl
test
outsl
push
es
and
mov
scas
ljmp
sar
pop
lea
mov
xchg
mov
movsl
icebp
jg
outsb
sub
or
test
jecxz
pop
jle
cltd
cmp
add
mov
scas
jbe
xorl
jns
repnz
in
lret
pop
mov
pop
push
inc
cld
push
ret
lea
into
push
or
aaa
rep
jne
lods
and
out
xchg
push
and
jo
rcrl
inc
xchg
fwait
xor
xchg
sbb
mov
add
popa
mov
stc
in
aas
scas
xlat
flds
jbe
sub
pop
xchg
gs
dec
je
dec
sub
gs
push
xchg
mov
sub
dec
mov
or
mov
push
mov
in
push
mov
push
loope
loope
or
call
sahf
jno
sbb
rorb
fdivl
out
dec
rcll
mov
loope
jno
in
into
push
ja
cmp
and
outsb
mov
jecxz
push
lcall
mov
mov
push
push
aad
lods
pop
cwtl
jg
lret
mov
inc
jne
pop
mov
add
in
dec
and
fdivrl
mov
add
in
mov
stos
in
lcall
out
mov
and
add
mov
je
sbb
pop
mov
or
popa
testb
cmp
cmp
add
cld
cltd
repnz
cmpsl
lcall
cmp
cmp
mov
fcomp
repz
xchg
sub
je
cmp
clc
lds
sbb
stos
add
sti
mov
push
jl
dec
out
test
popa
xor
adc
pusha
aam
lods
add
scas
xor
mov
arpl
mov
std
dec
int3
imul
lock
movsl
pop
testb
call
sub
scas
es
or
aas
mov
adc
mov
mov
push
ror
sub
jl
popf
movsl
xor
pop
lock
adc
sbb
insl
jle
mov
scas
inc
icebp
add
gs
int3
ss
ja
nop
mov
adc
xor
outsb
mov
adc
pop
mov
push
adc
jmp
out
sti
std
or
fneni(8087
mov
sbbb
testb
push
xchg
sbb
mov
popa
jno
mov
call
icebp
cli
inc
pop
sub
and
inc
and
jb
sub
adc
iret
xchg
fmuls
test
movsl
and
and
mov
sti
clc
inc
mov
xor
movsb
fs
adcl
and
imul
and
addr16
imul
jno
dec
xor
mov
add
pop
mulb
add
fnstsw
push
je
loope
xchg
lcall
push
inc
nop
inc
xchg
dec
mov
popa
add
ds
fwait
pop
cmpsl
adcb
das
and
add
andb
or
add
popa
clc
jbe
mov
test
jg
dec
lea
outsb
pushf
xor
dec
mov
movsb
stos
rcr
ja
jmp
negl
cmp
and
outsb
inc
pop
sbbl
addr16
xchg
add
nop
pop
repz
out
jp
cmc
mov
ss
push
out
in
scas
mov
jns
push
subb
pop
mov
insl
cmp
fidivs
popa
inc
and
sbb
jne
pop
or
call
out
sti
xchg
and
sub
or
jae
xchg
mov
lahf
sahf
and
gs
push
jl
or
add
jp
pusha
pushf
add
jecxz
push
mov
js
lock
dec
adcl
les
mov
clc
cmpsb
inc
pusha
jmp
out
stos
inc
fiaddl
push
jmp
in
push
dec
push
add
ret
inc
leave
xchg
cmc
les
inc
push
gs
insl
scas
ja
add
xor
ret
push
push
lcall
repnz
sub
xor
mov
jno
gs
mov
cmp
inc
scas
mov
repz
je
jle
inc
cmpsl
out
push
testl
cltd
cmp
mov
call
mov
mov
cmp
pusha
testl
jle
push
pusha
dec
fists
adc
sbb
or
psllw
repnz
lea
jns
int3
mov
mov
nop
mov
aas
sbb
popa
cs
outsb
test
or
xor
rcr
loope
pop
mov
sbb
cmp
xchg
scas
cwtl
sbb
in
push
lcall
mov
sbb
js
pop
imulb
sti
pop
dec
mov
mov
fcompl
mov
push
into
jne
add
cmp
sub
xchg
xor
shll
mov
call
inc
xor
mov
dec
lahf
inc
fmuls
adc
mov
imul
cmpsb
mov
ret
shrl
gs
cmp
outsb
mov
push
movsl
mov
jbe
jae
mov
push
push
and
xor
sub
arpl
movsl
inc
pop
lods
enter
inc
jmp
sbb
gs
and
hlt
inc
sub
inc
lods
xor
shll
fildl
nop
inc
sbb
cmp
imul
fadd
lahf
and
repnz
mov
subb
hlt
jge
xor
lock
and
daa
xlat
es
xor
jmp
mov
pop
lock
out
xor
xchg
jmp
cmpsb
les
pop
fidivrs
push
fcmove
mov
mov
imul
sub
in
repnz
sub
xlat
adc
test
dec
add
daa
mov
bound
xchg
arpl
test
rorb
dec
fnstsw
jae
push
cwtl
inc
out
jno
xchg
fwait
lods
lahf
shl
into
and
push
sbb
iret
xchg
dec
ficoml
adc
or
cmp
out
pop
fcomps
mov
outsb
mov
pop
fcoms
lods
and
test
mulb
xor
or
pop
and
jno
lods
ss
stc
sahf
std
push
int3
pop
dec
xchg
call
jle
dec
inc
pop
pushf
sub
loope
fcmovb
push
sub
mov
das
push
fs
add
test
std
ret
imul
cmp
into
mov
loopne
ja
adc
sbb
sbb
arpl
push
push
inc
mov
imul
dec
outsl
rorl
stos
and
push
sbb
imul
bound
pop
push
cltd
jb
imulb
testl
lock
cld
xlat
push
ljmp
aad
or
xchg
movsl
mov
orl
mov
xchg
rclb
add
pop
jecxz
and
xor
xchg
xor
adc
rcrl
arpl
imul
sti
jl
jmp
sub
pop
cs
jle
inc
mov
mov
inc
in
shrl
push
adc
nop
inc
lcall
aad
das
ljmp
jecxz
inc
test
cwtl
loop
cmp
sub
mov
sbb
dec
out
mov
shlb
test
mov
push
xor
dec
fwait
mov
and
std
fiaddl
mov
push
js
fbld
mov
call
shrl
push
dec
loopne
aas
dec
add
lea
mov
fistpl
mov
shrb
mov
mov
icebp
or
lods
shrl
fs
ffree
arpl
push
sbb
lret
andb
cmpsl
push
dec
inc
outsl
sub
and
add
movsb
xchg
xchg
cmp
xchg
in
test
mov
add
repz
mov
xchg
jae
mov
pop
cmp
arpl
mov
dec
cmp
dec
cmp
and
and
sbb
or
add
sbb
popa
ljmp
mov
mov
cmc
lock
push
mov
imul
rcrb
movsl
cmpsb
jnp
mov
std
xchg
hlt
jns
inc
inc
int3
pop
outsb
sub
push
adc
js
cli
pop
dec
mov
int
pop
mov
mov
and
leave
dec
lret
inc
lret
sti
insb
push
shrl
imul
and
sar
jno
push
jmp
lods
inc
iret
and
sahf
xor
stos
test
xchg
jno
pop
outsb
push
test
loop
jb
and
in
test
fwait
clc
inc
mov
aas
adc
jl
or
addr16
gs
jns
ljmp
fdivrl
jno
inc
cmp
jnp
add
inc
cmpsl
cmpsl
ja
fxch
enter
sbb
dec
xchg
adc
fmul
leave
jge
loop
fwait
dec
mov
or
push
inc
push
test
jmp
mov
cltd
or
int
shl
insl
cmp
sahf
adc
add
dec
gs
sub
pop
cwtl
pop
arpl
enter
ljmp
in
andb
or
or
cltd
push
pop
adc
inc
shr
jae
mov
mov
cmpsl
sar
fldcw
mov
mov
addb
xor
xlat
dec
mov
jno
imul
ss
hlt
dec
es
in
xor
mov
popf
in
test
cli
test
xor
xor
jmp
cmpsb
fistpll
and
cmp
in
dec
dec
movsl
add
jns
cli
xchg
or
fiaddl
dec
cmp
xor
jle
les
sarl
fadds
stos
inc
xchg
mov
arpl
orl
fcmovnb
shlb
sbbb
jl
ficomps
sbb
mov
insb
pop
lock
push
icebp
pop
add
xchg
xor
cli
mov
sub
mov
in
xchg
add
repnz
out
fldl2t
scas
inc
mov
jae
mov
inc
int3
fadds
jmp
je
es
mov
pop
cs
push
xchg
xor
mov
jbe
fisubl
loope
mov
jae
sub
cmp
nop
cmp
daa
dec
hlt
pop
das
mov
dec
cmpsl
jp
inc
jl
inc
add
test
in
inc
hlt
hlt
xchg
data16
imul
push
add
aam
dec
add
or
repnz
or
push
cmp
js
dec
mov
push
jmp
push
adc
cmpsb
les
pop
xchg
sub
stos
loope
xor
adc
adc
mov
mov
pop
sarl
jnp
lea
je
rcrw
add
insb
adc
xor
cmp
out
cmp
imul
cmp
mov
aaa
push
rcrl
cltd
stos
loopew
loope
nop
imul
notl
jne
stos
es
arpl
test
jne
sub
or
mov
rorb
push
lock
sbb
pop
in
test
popl
jle
cmp
roll
in
push
sub
ljmp
push
aas
or
cmp
pushl
cmc
mov
popa
push
pusha
mov
rol
cmp
cmpsb
cmc
lahf
push
sbb
mov
test
test
fdivrl
sti
push
flds
cmp
add
out
inc
mov
add
scas
orl
xchg
push
adc
jno
outsb
pusha
negl
cmp
adc
test
ljmp
push
ljmp
loope
aaa
mov
push
inc
mov
rcll
fcompl
rolb
sub
inc
xchg
push
rcl
sub
dec
scas
mov
jae
in
pop
mov
mov
jns
mov
adc
sti
repnz
lods
mov
push
scas
outsl
test
cmp
hlt
cs
arpl
jo
enter
xor
xchg
in
or
dec
push
sbb
mov
sbb
pop
push
loopne
lock
mov
adc
inc
cmp
rcrl
pusha
dec
lahf
cmp
les
out
mov
loope
xor
insl
fs
out
jmp
into
or
sbb
jp
xchg
nop
jbe
or
inc
inc
pushf
pop
sub
or
jg
fs
movsl
push
xlat
mov
mov
addr16
mov
psubsw
fistpl
or
cmp
fldl
notb
iret
push
xor
mov
xchg
shll
dec
aam
mov
je
jnp
jl
sub
imul
je
ljmp
stc
outsl
sbb
pop
add
fs
xchg
call
add
sub
push
and
push
stos
xchg
ja
jb
add
adcb
cs
roll
mov
dec
dec
cwtl
mov
in
cmpsl
dec
sti
cmpsl
sarl
or
arpl
sahf
mov
push
mov
cmc
pop
daa
out
xlat
stos
xchg
test
push
popa
jno
jcxz
xchg
mov
rcrl
in
cwtl
pusha
into
mov
data16
fs
iret
cmp
imul
popa
mov
mov
repz
fldenv
cmp
cmc
mov
mov
movsl
jl
xlat
inc
cmp
jb
adc
aam
jne
inc
popa
addl
popa
mov
mov
clc
loope
push
and
mov
aaa
lret
sbbb
mov
adc
lcall
inc
dec
cmp
jecxz
cmpsb
dec
fsubs
jnp
lods
int
repz
js
inc
mov
cmc
imul
mov
sbb
mov
xchg
clc
fdivs
mov
inc
add
sbbb
cmp
aam
cld
loopne
mov
fdiv
cmp
or
jg
fs
lods
cmp
shl
clc
adc
jo
pop
dec
cmp
sti
adcb
or
cmp
fldenv
icebp
pop
mov
sti
xchg
in
cmpsb
clc
mov
push
daa
mov
stos
test
and
push
in
fcoml
adc
add
cmp
xor
call
mov
subl
mov
out
xor
or
aad
cmp
repnz
push
scas
out
mov
cmp
push
int
leave
pop
mulb
sub
xchg
mov
cmpsb
push
pop
scas
dec
mov
adc
stos
jecxz
push
jmp
gs
les
imul
pushf
adcl
push
test
lods
and
inc
lcall
jle
push
cmc
push
jp
notl
cmpsb
cltd
add
mov
cmpl
jae
pop
cmp
sbb
mov
cmp
adc
negl
adc
cltd
std
push
dec
push
outsb
std
mov
test
aad
adc
mov
scas
cmp
mov
add
arpl
mov
pop
aaa
xchg
lods
pop
dec
push
imul
nop
sbb
mov
popa
adc
add
popa
addl
fistpl
xchg
mov
outsb
stos
cmp
inc
popa
shll
ficoml
mov
fisubrl
mov
xchg
lahf
loope
repz
adc
push
push
ljmp
adc
ja
lods
push
mov
fldl
adc
pusha
data16
iret
or
popa
pop
or
les
fldenv
aam
enter
std
fsubs
and
cld
stos
outsl
sbb
mov
and
aaa
xchg
dec
popf
dec
mov
and
pop
mov
jecxz
outsb
and
add
scas
or
loope
lret
mov
and
and
test
xchg
ja
fwait
testl
iret
jge
clc
clc
jo
sbb
push
jmp
outsl
pop
adc
or
gs
les
inc
sub
sbb
mov
xlat
push
jb
dec
sbb
into
xor
arpl
add
je
stos
fcoms
inc
addr16
sahf
popa
mov
mov
test
mov
cmpb
cmpsb
or
push
xor
stos
xlat
divb
loope
stos
mov
fidivs
addr16
fstl
sbb
and
cmp
dec
out
and
xor
adc
pop
int3
fiadds
and
sub
das
or
sbb
insb
fbstp
push
fnstcw
push
lds
sbb
push
ror
mov
jg
cmp
dec
cmp
push
fsubs
or
pop
jg
and
roll
mov
inc
dec
pop
dec
and
and
nop
scas
xchg
and
pop
sub
xchg
stos
adc
xor
cli
or
test
subl
jns
mov
pop
dec
mov
pop
push
sbb
out
jns
fisubs
inc
add
flds
aad
mov
decl
adc
aam
mov
push
push
nop
mov
in
push
cmp
ja
gs
repnz
xrelease
stos
stos
nop
setbe
jae,pt
outsb
jnp
dec
call
sbb
pop
jmp
pop
lods
inc
pop
push
jno
push
jmp
push
sbb
cmp
insl
sub
test
add
outsl
add
mov
cs
jg
ss
and
mov
aam
mov
clc
push
inc
std
in
insb
repnz
fisubl
fidivrs
sub
pop
mov
xor
fistpll
dec
cs
mov
movsb
cmp
fs
into
ret
add
mov
fnstenv
clc
out
mov
sbb
inc
adc
jmp
adc
pop
ror
retw
mov
daa
insb
jle
dec
stc
or
jle
or
adc
loopne
xchg
movl
movsb
mov
push
jp
sbbb
sub
or
jmp
bts
jmp
dec
xor
push
mov
push
fdivs
adc
aaa
enter
add
dec
pop
dec
sbb
xchg
invd
movsb
cs
xchg
pop
xchg
das
shll
loope
or
mov
sub
mov
mov
mov
dec
inc
or
ja
sub
je
insl
movsl
sub
xor
pop
inc
es
icebp
push
mov
xchg
imulb
scas
lret
cwtl
push
fsubl
paddusw
pop
sub
inc
xchg
jge
cmp
jae
test
leave
sbb
cltd
andb
sub
xchg
paddw
jb
in
lcall
jb
xor
and
fwait
divl
jmp
or
cs
fwait
daa
cld
dec
fsubrp
push
stc
inc
pop
repz
mov
stos
js
jne
jecxz
sub
int3
fs
aas
dec
and
in
pusha
in
leave
cmpps
pop
ljmp
testb
inc
into
gs
or
push
sub
pop
cltd
scas
push
rol
push
adc
insb
xchg
loopne
daa
push
lcall
in
in
mov
outsb
test
roll
mov
enter
lock
jb
in
lods
push
or
adc
ja
iret
rcl
gs
lcall
push
inc
add
xor
xor
int3
push
xor
enter
stc
pop
div
repz
call
cmpl
mov
jle
and
or
sar
jg
mov
fcmovu
and
mov
adc
int
jecxz
mov
fisubrs
pushf
icebp
enter
imul
dec
lods
pop
mov
ret
add
dec
mov
pop
ficoml
icebp
push
and
pop
jno
mov
add
das
push
jb
in
xchg
rol
imul
push
jmp
aas
dec
nop
rol
jb
push
jo
xchg
fbld
add
xor
xlat
jecxz
mov
mov
aam
xchg
mov
andb
push
xchg
sub
cld
into
fucomi
aas
lock
push
cmp
xor
add
pop
iret
pop
adc
dec
and
mov
push
xor
lahf
dec
in
mov
jg
insb
adc
cmpl
pop
nop
dec
ds
movsl
sbb
fimuls
scas
hlt
xchg
or
jae
cltd
adc
xchg
add
xchg
scas
sub
cltd
mov
mov
rol
push
mov
shrl
cmp
sub
jnp
xchg
sbb
aad
mov
ret
shlb
and
dec
fwait
mov
dec
iret
and
cmp
data16
negb
add
xchg
push
pop
popf
jns
ljmp
add
cmpsl
aad
mov
clc
mov
lds
xchg
inc
pop
cmc
imull
push
popf
jl
lods
fisubrl
or
insl
inc
push
mov
sahf
cwtl
mov
push
pop
xor
push
and
call
fsubs
and
xor
pop
test
dec
jne
jl,pt
outsb
outsl
fsubrl
xchg
inc
fmuls
fidivrl
sbb
or
cmp
xchg
sub
add
hlt
dec
sub
xor
test
sub
fisttpl
push
mov
xor
ja
adc
cld
push
pop
or
sbb
push
and
ret
mov
int
xor
out
push
push
cmp
fisttpll
pop
fsubrl
pop
stos
pop
out
jecxz
and
rcrl
mov
outsb
jecxz
jl
mov
mov
popf
sub
mov
outsb
jmp
hlt
cmc
fsubrs
leave
pop
imul
lahf
mov
notb
jne
vprotb
push
scas
ror
push
out
and
mov
outsl
mov
jnp
or
int3
fwait
jns
and
ret
lcall
lea
jl
pop
xor
leave
fs
aam
adc
movsl
js
aaa
ja
data16
dec
outsb
cmpl
icebp
mov
xor
pop
push
mov
insl
adc
or
icebp
and
js
xchg
dec
call
and
dec
enter
lods
jae
aam
js
ret
mov
add
insl
add
in
jg
xorb
in
lahf
shlb
lret
or
inc
inc
imul
cmp
aaa
pop
push
dec
mov
lret
inc
push
inc
ror
ss
in
inc
jmp
lahf
xchg
fsubrs
in
jge
pop
add
inc
and
inc
xchg
mulb
aaa
jb
sbb
jle
adcl
jbe
add
pop
popa
aad
pop
fs
jbe
movsl
in
inc
popa
inc
imull
shr
push
jmp
add
pop
lods
cmp
jo
mov
push
mov
fimuls
jp
mov
js
icebp
push
and
pusha
andl
js
dec
add
adc
loope
fcmove
push
imul
les
xlat
adc
int3
mov
test
pop
mov
xchg
dec
mov
js
icebp
lea
and
mov
jmp
imul
cmpsb
jno
dec
and
ja
fdivl
into
enter
cli
cmp
or
cmpsl
enter
pop
gs
inc
stos
adc
fbld
ret
xchg
inc
mov
shl
stos
outsb
dec
loop
lret
mulb
add
sbbb
push
jle
inc
lret
insb
ffreep
bound
mov
sbb
or
arpl
test
mov
test
mov
sar
aas
xchg
mov
call
fldcw
sbb
mov
xor
mov
mov
adc
mov
mulb
mov
jb
fisubrl
and
insl
in
je
mov
inc
lods
and
mov
xchg
xchg
push
test
cmp
pushf
inc
shl
js
dec
sti
pop
cmp
xchg
pop
stos
dec
mov
push
mov
divb
mov
lret
fs
loopne
out
imul
jl
pop
push
push
rorb
jp
pop
sbb
cmpl
dec
popf
in
inc
ret
lahf
jl
xchg
lods
lods
sbb
dec
shl
cmpsb
imul
adc
cmc
pushl
mov
mov
sub
inc
scas
inc
add
gs
sbb
and
jl
xor
daa
mov
pop
jne
mulb
push
stos
out
das
sub
das
ds
adc
stos
pop
call
div
adc
mov
movsl
xorl
xor
cmpsl
outsl
out
stos
xor
xchg
out
lret
xchg
mov
push
int3
addr16
aaa
pushf
outsl
push
ljmp
sub
mov
clc
add
or
push
mov
fcompl
add
sub
cltd
mov
pop
lahf
ss
js
jnp
mov
mov
pop
pop
in
test
mov
adc
lock
jae
shll
movsl
mov
js
lcall
les
call
lods
aas
js
les
data16
pop
fsubrp
xchg
mov
xor
lret
pushf
jb
or
push
movsl
pusha
mov
movsl
lcall
pop
outsb
pusha
xor
xlat
test
movsl
mov
mov
jmp
mov
pop
mov
cmp
jl
scas
outsb
mov
andb
adc
in
adc
ja
ljmp
jne
movsl
js
inc
mov
cmp
dec
sub
or
and
cmp
cld
lret
adc
rolb
clc
popa
ljmp
add
mov
ss
cmc
cltd
fdivrp
and
cmp
out
push
mov
mov
sbb
pop
cli
push
das
jbe
sbb
sub
ror
xlat
and
cmpsb
mov
push
and
push
dec
clc
mov
lea
pop
mov
jecxz
lods
jno
or
nop
jp
xchg
enter
inc
fs
addr16
in
mov
lahf
cmp
lea
pop
sub
dec
mov
jnp
xchg
std
push
sub
mov
sti
mov
and
push
mov
jns
jo
dec
inc
movsb
repz
cmp
or
pop
xchg
stos
dec
and
dec
push
aaa
adc
jmp
shlb
dec
pushf
jmp
dec
testb
into
data16
shlb
cltd
push
pusha
nop
cmpsl
jecxz
fidivs
mov
pop
add
push
enter
fdivrl
sub
stos
lock
sbb
push
test
mov
or
lea
lods
jns
push
es
jle
arpl
adc
loope
inc
or
jmp
out
fcompl
aas
jg
imul
subb
fsubrl
xchg
push
bound
jb
cwtl
fmul
cmpb
aaa
into
lcall
in
imul
outsl
daa
pop
movsl
mov
xchg
mov
pop
push
xor
sbb
mov
rclb
push
mov
dec
shlb
adc
shld
sub
jg
dec
mov
push
loopne
xchg
inc
pop
clc
push
rcr
lock
mov
dec
jp
mov
in
int3
xchg
cmp
pop
jl
push
aam
jle
mov
lods
lods
push
stos
push
je
and
repnz
and
dec
sbbl
dec
adc
mov
in
fucomi
fs
xor
popa
sub
and
cmp
icebp
mov
sub
pop
pop
mov
imulb
mov
dec
jge
cmp
and
push
pop
shll
je
int3
popa
daa
decb
push
xor
in
leave
hlt
or
inc
mov
cmpsb
outsl
cmp
add
mov
hlt
fcmovne
fs
std
jl
sbb
cmpsb
divl
outsl
aad
out
test
pop
or
mov
dec
mov
push
dec
movsl
arpl
mov
jb
jmp
jle
fiadds
hlt
repnz
outsb
and
adcl
and
ja
add
xchg
repz
cltd
xor
icebp
lea
bound
add
ljmp
and
int3
sbb
pop
xchg
iret
dec
xchg
inc
mov
loop
int
imul
xchg
imul
dec
xor
fbld
fsubl
adcb
mov
and
dec
dec
pop
shrb
pop
test
xchg
fidivrl
sbb
call
or
das
or
loopne
test
jbe
mov
jns
loop
adc
xchg
jbe
aad
mov
js
hlt
or
mov
push
mov
sarb
pop
push
mov
xchg
bound
in
push
movsb
rcll
int3
xchg
jb
cmpsl
iret
and
mov
pop
mov
cmpsb
or
pop
inc
sbb
lahf
and
fmull
dec
xchg
lcall
sarb
dec
fcomps
dec
pop
xchg
push
frstor
aam
sbb
cmp
stos
cmpsl
rcl
push
arpl
cmp
mov
roll
nop
xorb
jmp
xor
sbb
inc
insb
enter
cli
jmp
xchg
cmp
mov
or
sarb
les
lahf
orb
outsl
push
xor
jnp
pushf
aaa
mov
and
sbb
mov
xchg
jo
xchg
pusha
mov
fimull
push
ret
out
push
stos
dec
fidivrs
cmpsb
add
ficoml
sbb
dec
js
outsb
add
xchg
and
ret
push
repz
lcall
and
loop
nop
push
mov
or
in
inc
out
xor
push
cli
pushf
mov
cli
push
aaa
scas
adc
add
fsubrs
cmpsl
es
sarb
loop
jbe
shrb
dec
pop
loop
xchg
and
dec
lock
push
or
lcall
icebp
cmp
and
xlat
mov
lcall
adc
test
into
mov
ficoms
lods
jo
icebp
gs
sub
jg
jns
cmpsl
call
push
data16
rcrl
int
das
sub
adc
mov
mov
lock
mov
dec
sbb
lcall
fcomp
xchg
sbbl
push
cmpl
cmp
jb
ds
inc
lds
inc
ror
mov
dec
out
ret
pop
jg
xchg
xor
rcl
inc
addl
shrl
into
pop
lcall
lretw
es
daa
mov
mov
mov
inc
fdivrl
sbb
sbb
xchg
sub
mov
in
dec
mov
ljmp
or
dec
scas
sbb
dec
or
push
xchg
mov
hlt
enter
lea
std
dec
xlat
rcrl
mov
es
jmp
mov
repnz
xchg
pop
ficoms
stos
imul
popa
jge
pop
sub
add
lcall
cmp
mov
push
cmp
lds
insl
scas
sbb
mov
xchg
add
mov
xchg
ret
inc
outsl
lret
orl
inc
daa
cmpps
pushf
adc
out
adc
jae
insl
sbb
pop
push
adc
push
in
and
push
inc
popa
add
dec
adc
arpl
cmc
bound
jecxz
fs
mov
lea
pop
cltd
mov
mov
pushf
push
push
push
mov
loop
lods
dec
or
inc
popa
jmp
daa
adc
sub
movsl
mov
shrb
inc
fdivs
out
cld
inc
hlt
inc
pop
arpl
push
mov
loopne
enter
mov
mov
sub
mov
in
inc
pop
mov
fs
cli
xchg
call
addr16
lret
data16
aam
lret
push
cmp
cld
or
and
fwait
addl
lcall
push
outsb
filds
push
add
jle
jmp
fwait
add
movsb
out
jnp
jno
sub
pop
xchg
jl
mov
pop
imul
push
xor
scas
lods
aas
xor
testl
lds
dec
std
dec
push
call
adc
fbstp
jo
cmp
test
adc
scas
test
jns
call
add
mov
loopne
enter
shrl
cmp
test
dec
mov
jge
subl
lret
dec
or
sub
mov
lock
inc
xor
cmp
nop
out
inc
push
xchg
std
mov
and
ret
arpl
mov
jb
dec
movsb
js
sub
movsl
in
inc
add
js
out
inc
push
mov
and
dec
push
ret
pop
inc
js
rcl
popf
les
scas
insl
lret
xchg
popf
je
inc
mov
xchg
outsb
out
pop
adc
push
loopne
sub
sbbb
fisttpll
mov
xchg
xchg
pop
clc
cmp
pop
loop
xchg
sub
or
movsb
cmp
mov
cwtl
xchg
add
cmp
fcmovnb
inc
adc
adc
jmp
sub
cmp
pop
mov
call
and
std
xor
pop
and
mov
push
mov
sub
frstor
fisubs
sbb
mov
jl
enter
lock
scas
stos
inc
lret
loopne
mov
xor
jns
push
inc
stos
rorl
pop
sub
mov
fs
mov
dec
mov
lcall
xchg
mov
ljmp
pusha
inc
push
mov
incb
pop
add
int
mov
or
seto
pop
nop
cltd
xchg
in
dec
mov
jp
fwait
and
push
push
daa
and
lea
push
pop
out
nop
inc
xor
mov
add
shrl
xor
jbe
out
loop
shll
fs
rol
adc
sbb
cld
shrl
outsl
jge
lret
outsb
ds
ret
jns
mov
adc
cmc
push
inc
sbb
mov
xchg
cwtl
aad
lret
dec
popa
clc
jne
jae
cmp
and
enter
dec
and
push
xchg
mov
ficompl
sbb
mov
or
icebp
out
dec
push
push
mov
xor
inc
add
sti
inc
insb
and
push
push
or
mov
mov
pusha
and
pop
push
mov
frstor
iret
jno
sti
dec
imul
mov
cmp
lcall
andb
in
mov
dec
int
fisttpll
adc
sub
sbb
mov
xchg
push
sub
cld
jo
out
xor
pop
add
cmpsl
arpl
clc
mov
mov
addl
dec
inc
hlt
call
dec
and
inc
add
xlat
in
cld
fs
adc
push
mov
out
dec
lcall
dec
mov
sub
xor
mov
mov
mov
push
stos
out
sbb
mov
insb
adc
dec
dec
push
cmp
stos
adc
push
nop
add
dec
jns
inc
imul
mov
push
cmp
pushf
or
sub
add
lods
sbb
or
movsb
inc
pushf
xor
jae
mov
test
data16
out
jmp
xchg
jns
and
mov
push
leave
call
mov
sbb
aas
inc
push
je
xchg
adc
and
jg
and
loope
inc
ss
fdivrs
xchg
push
movb
aam
sahf
jo
push
out
jge
movsb
sub
rorb
dec
pop
sti
mov
loope
mov
nop
xor
push
mov
or
scas
or
xchg
xchg
inc
in
int3
add
lds
jl
and
xor
cmp
push
sbb
int3
clc
mov
and
sub
xchg
js
jno
sub
loope
and
test
mov
icebp
add
mov
mov
ljmp
jae
ja
adc
sub
adc
sbb
cmp
fwait
iret
flds
add
mov
stos
jbe
push
ljmp
jno
jmp
in
push
aam
insl
and
in
lock
inc
test
js
call
xor
ds
or
jmp
rcrl
xchg
or
fdivrs
pop
outsb
and
mov
popf
push
scas
push
jp
popf
sub
mov
hlt
inc
inc
or
nop
loope
mov
fnsave
ds
add
in
inc
loop
xchg
lahf
scas
repz
cpuid
pop
sub
in
sbb
push
cwtl
js
jno
inc
shll
scas
js
in
pop
pop
test
cmp
jns
sbbb
pop
push
pop
and
ja
push
mov
mov
es
rol
in
rcl
cmc
cmp
shl
lock
adc
mov
cmp
sahf
sub
je
add
ret
loope
cmpsb
fsub
icebp
jnp
scas
jle
and
sbb
sbb
outsb
pop
sbb
daa
and
jo
inc
adc
push
sub
jo
aad
je
dec
aaa
jb
fdivp
cmp
or
or
and
xor
andl
xor
xchg
lods
pop
das
icebp
das
mov
xchg
lea
sbb
cmp
xor
ja
pop
out
in
fidivs
xorl
xor
xchg
xor
jne
es
inc
lods
mov
loop
popf
fs
shll
jmp
sub
aam
je
or
pushl
adc
mov
xchg
btc
or
or
cmpb
hlt
movsb
mov
sub
mov
jno
call
xor
cwtl
ljmp
shll
mov
stos
and
daa
mov
pushf
in
push
mov
and
movsl
aas
sbb
mov
dec
push
xor
mov
hlt
push
xchg
mov
rol
add
jl
repnz
and
int
arpl
call
xchg
fadds
mov
rorl
cmc
adc
jae
sub
dec
pusha
pop
in
pop
arpl
lret
pop
inc
push
into
mov
xchg
cs
cmpsb
push
iret
dec
xor
popf
ds
jno
mov
adc
mov
pop
jno
mov
push
jmp
imul
je
add
dec
fistpll
imul
jns
pop
xchg
shl
mov
loopw
popf
jg
js
push
mov
lret
leave
push
jmp
cmpsb
jge
push
cltd
hlt
insl
es
jno
jno
pop
das
pop
xchg
aaa
or
xor
sbb
test
cmpsl
ret
ja
jge
push
adc
and
sbb
sbb
testl
aad
mov
mov
xor
add
fsubrs
mov
adc
popa
test
insl
jno
icebp
movsl
cmpsl
iret
pusha
decl
stos
mov
shlb
add
push
insb
jbe
xor
lcall
inc
inc
xchg
cltd
jl
enter
loopne
out
jl
test
aas
push
repz
pop
mov
cs
clc
fidivs
sbbl
sbb
xlat
jno
sbb
loope
test
inc
xlat
js
mov
in
js
lock
movsl
lea
jmp
sbb
lret
imul
mov
xchg
jae
aam
jae
cmpsl
out
add
or
jle
fwait
cld
sbbl
jge
mov
iret
jle
in
mov
shrb
sub
scas
js
xchg
mov
into
mov
in
notb
scas
stos
jb
test
mov
jge
ja
cmp
fimuls
insb
push
out
ja
mov
mov
nop
lahf
xor
iret
loope
inc
push
cmp
sbb
fidivrl
lock
mov
or
pop
testl
daa
mov
mov
dec
mov
fs
xchg
pop
fisttpll
out
into
call
mov
sub
arpl
xchg
ret
add
or
shll
jo
scas
sbb
sub
pop
and
pop
ja
sub
add
movsl
pop
cli
xchg
ficoml
xor
mov
dec
in
cwtl
outsb
jne
stos
hlt
mov
mov
int3
mov
cmp
mov
stc
pushf
xorl
or
loope
popa
sbb
dec
out
outsl
add
dec
dec
fwait
xor
pop
fistl
push
insl
ja
test
mov
cmp
mov
sbb
sbbb
pop
add
movsb
mov
xchg
jmp
jle
inc
sbb
scas
aad
push
add
mov
mov
fstpl
push
subl
daa
adc
int3
jae
divb
shr
or
das
bound
lds
mov
xchg
or
iret
adc
arpl
jmp
push
mov
pop
lret
xchg
adc
mov
outsb
adc
xchg
aam
cmp
outsb
xor
test
movsb
ret
mov
repnz
outsb
les
adc
mov
mov
fsubl
test
mov
aad
rcrl
mov
popa
not
xchg
call
popf
repz
push
in
std
inc
sbb
iret
sbb
or
xchg
pop
fwait
and
ficoms
xchg
mov
pop
mov
push
pop
imul
hlt
into
add
mov
fmuls
push
pop
xchg
sub
adc
sub
lahf
mov
mov
or
xchg
arpl
add
imulb
jbe
enter
jbe
push
inc
jmp
and
xor
shr
jge
insb
mov
loopne
das
push
loop
adc
jle
test
outsb
cld
js
cmpsb
shrl
roll
pusha
loopne
shll
inc
push
cwtl
jns
push
mov
pushf
negl
hlt
or
xor
out
inc
and
stc
jns
cmc
int3
pushf
faddl
push
jae
in
jns,pn
outsl
mov
push
sbb
jae
adcl
xchg
lods
push
cmp
jne
xchg
cli
imull
ja
stos
test
sub
push
or
ss
std
sahf
xchg
std
xchg
stos
lcall
inc
dec
out
lret
adc
and
hlt
cmc
lahf
cmpsb
fwait
testl
inc
mov
jno
push
mov
mov
stos
xor
mov
jmp
pop
fstl
dec
call
cmp
xorb
pop
add
xor
cmpsb
xchg
lods
fsubrl
or
pop
in
outsb
dec
sub
movsb
lods
jecxz
mov
lret
xor
aam
inc
mov
testl
mov
addr16
mov
mov
jae
addr16
inc
scas
jp
pop
mov
shrl
xchg
or
fnstsw
cmp
nop
sub
mov
data16
sbb
lret
ret
pop
inc
negl
cld
pop
les
push
mov
sbb
movsl
lock
and
mov
gs
mov
cmpsb
add
push
xchg
xchg
inc
mov
jbe
out
mov
cmp
out
aaa
into
mov
add
mov
test
mov
ss
xlat
jb
jecxz
lret
test
adc
jge,pt
in
mov
rcrb
push
hlt
es
adc
int3
xor
xor
mov
push
xchg
mov
dec
addr16
adc
and
push
js
enter
test
mov
test
push
jmp
push
jge
cld
mov
cltd
lret
xchg
sbb
aad
cltd
repnz
imul
dec
mov
dec
push
mov
aad
das
aas
clc
mov
add
mov
clc
and
or
jns
push
and
sbb
xlat
outsb
xor
idivb
das
out
pop
loop
hlt
mov
stos
sbb
inc
imul
cmp
lcall
mov
cmp
jno
mov
adc
cmp
xchg
or
movsl
cwtl
lds
or
out
mov
lods
jne
ss
jle
xchg
in
inc
pop
aas
ja
out
push
mov
ljmp
icebp
fcompl
and
xor
mov
jae
cmp
mov
inc
pop
fiadds
hlt
gs
in
shll
inc
push
jmp
dec
add
mov
cmp
fs
shrb
add
xor
cmp
push
xor
scas
or
adc
cmpsb
scas
xor
adc
sub
mov
out
loope
push
cmpsb
jno
sbb
xor
lods
mov
pop
icebp
ds
inc
lret
inc
test
lahf
inc
sub
mov
xchg
dec
addl
ss
jo
inc
call
push
sbb
aam
adc
and
pop
adc
ret
jmp
inc
xor
repnz
sub
jge
jp
in
cmp
adc
movsl
xchg
sub
push
lret
lret
jnp
xchg
dec
mov
aaa
inc
inc
cwtl
mov
aam
test
sub
sub
jl
xor
xchg
cmpsb
push
cmp
in
nop
push
mov
ja
push
out
inc
cwtl
scas
cmp
pop
cwtl
sub
add
sub
jp
test
add
add
in
xchg
ss
xlat
les
add
mov
cli
loope
mov
xchg
cmpsb
test
scas
push
xlat
mov
sbb
bnd
cmp
xor
int3
xchg
add
mov
mov
cwtl
rcrl
loopne
xchg
pop
ret
add
pop
xchg
sbb
mov
pop
sti
mov
inc
jp
sbb
stos
inc
lahf
hlt
lcall
adc
int
insb
sbb
mov
movsl
jp
mov
dec
xchg
or
stos
mov
jb
sbb
pop
jbe
inc
xlat
aad
aaa
imul
push
bound
stos
test
lret
testb
in
lods
mov
outsb
inc
cmpsb
adc
or
lret
pop
arpl
mov
in
daa
shll
movsb
push
or
and
mov
test
aad
insl
cltd
std
sahf
inc
sahf
and
arpl
cmpsb
push
push
pop
dec
pop
mov
loope
mov
mov
cmp
scas
cmp
stc
clc
jno
add
test
sahf
dec
fucomip
xlat
xorb
mov
dec
mov
jae
and
push
ljmp
imul
sbb
xor
out
mov
and
andb
fptan
xchg
fbstp
inc
daa
pop
stc
pop
cmpl
sub
jnp
and
popf
cmp
mov
pop
sub
lock
dec
dec
in
jg
cs
aad
mov
push
sub
dec
cltd
sub
push
cmpsl
mov
jo
xchg
sub
xchg
dec
pop
hlt
jne
sub
cwtl
ds
cmp
mov
lret
popa
enter
pop
testl
nop
sti
or
call
clc
mov
loope
scas
dec
jmp
inc
or
imul
lds
mov
adc
jae
stos
push
mov
imul
inc
xchg
hlt
sub
ss
and
pop
or
cmp
cltd
mov
bound
cmp
test
sub
test
nop
pushf
clc
cmpsl
jbe
jne
mulb
or
lret
test
gs
js
push
mov
mov
jnp
fidivs
les
mov
add
mov
int3
jg
test
out
inc
loop
jb
adc
and
arpl
pop
dec
jb
mov
and
mov
dec
push
sub
or
pop
pop
jo
insl
mov
cli
add
das
int3
cltd
arpl
push
aas
jae
mov
ror
xchg
adc
addr16
out
aam
push
mov
repz
int3
int
push
cld
inc
mov
adc
loope
adc
jmp
cmpsb
mov
pop
mov
int3
pop
aaa
jge
std
cmp
mov
cmp
jmp
aas
paddb
inc
in
repnz
pop
lock
add
xchg
sub
hlt
mov
sbb
test
mov
fcoml
xor
mov
adcl
jmp
int3
fdivrp
xchg
add
mov
pop
and
push
xchg
mov
push
mov
mov
adc
cld
repz
pop
hlt
aas
dec
fsubs
sbb
stc
jecxz
pop
and
sbb
ja
inc
mov
cmc
sbb
or
add
pop
mov
adc
data16
inc
mov
icebp
push
xlat
data16
xchg
jmp
push
or
outsb
adc
and
sbb
aad
lret
mov
mov
popa
add
xchg
push
je
ljmp
orb
inc
scas
cli
popl
loop
jecxz
lea
and
push
dec
jmp
xchg
stc
sub
add
xchg
test
mov
push
cmp
js
mov
mov
cmpsl
pop
stc
js
mov
adc
add
ljmp
mov
add
add
cmpsl
jmp
icebp
inc
int
sub
dec
outsl
or
lcall
dec
leave
inc
xor
jmp
subl
xor
hlt
push
arpl
stos
xchg
xor
adc
test
ss
loope
or
push
aad
push
add
daa
cltd
cs
push
xor
sub
in
scas
jp
dec
and
out
in
xchg
mov
dec
add
data16
cwtl
mov
call
in
sub
mov
cmc
in
daa
repnz
arpl
xor
fdivrp
or
ficoms
pop
iret
cwtl
pop
testl
cs
cmp
cmc
mov
dec
or
test
and
movsb
mov
call
loopne
jmp
xor
iret
xor
pusha
fisttpl
dec
add
scas
loopne
xchg
add
shrl
lret
loope
int3
add
bound
or
pop
push
loop
test
cwtl
mov
lret
cmp
stos
imul
test
fwait
mov
test
jmp
cmpb
mov
popa
jl
xchg
xchg
sub
out
out
loope
adc
loop
mov
jmp
cmp
pop
or
cmp
movsb
xor
jnp
xchg
lods
push
mov
iret
dec
and
lock
adc
pop
popa
mov
sbb
fwait
ret
call
pop
xlat
scas
lret
dec
testl
pop
add
fistl
mov
cmp
cmp
cmp
add
cmp
and
test
xorb
jnp
pop
in
sarl
mov
mov
sub
shlb
add
mov
xor
xchg
sbb
cmp
std
mov
sbb
popl
add
outsl
push
pop
mov
sub
nop
cmpb
ret
mov
mov
push
and
sub
repnz
sti
aas
sub
movsl
js
sahf
lock
test
jecxz
jl
mov
and
icebp
mov
daa
lret
mov
adc
jmp
pop
sarl
out
fisubl
mov
es
pop
cs
test
jbe
ljmp
and
pop
in
xchg
fucomip
lahf
es
jo
xor
mov
fmull
mov
push
mov
lcall
aam
insb
add
mov
pop
and
xor
mov
push
push
test
pop
insl
push
cmpsl
fdivl
fbstp
push
scas
cli
xchg
and
icebp
jb
cmc
mov
mov
bound
xchg
leave
add
mov
shll
outsb
repnz
into
sub
inc
or
push
sbb
sti
fcompl
dec
pop
inc
mov
ja
out
dec
push
xor
ret
pop
xchg
stos
mov
sub
pop
scas
sbb
dec
les
icebp
jle
outsb
sub
shlb
cs
ficomps
dec
or
mov
inc
sub
repnz
movsl
push
call
test
clc
pushf
cmpsb
mov
call
or
jb
jg
jbe
xlat
adc
popf
mov
aad
sub
pop
repz
jg
mov
loop
cmp
pop
add
es
sbb
cmp
cmp
divl
mov
lock
sub
lahf
push
sub
sub
pop
cmp
or
cmp
jbe
sub
sbb
adc
xlat
fcoms
outsb
hlt
mov
push
inc
les
and
ret
bnd
cmp
leave
sbb
dec
fstpt
mov
jns
adcl
fwait
and
jno
movzwl
cmp
xor
and
add
cltd
mov
outsb
ljmp
jg
lret
fwait
push
mov
mov
inc
shrl
outsl
addr16
leave
jo
jecxz
std
scas
jb
push
sub
sub
je
pop
mov
mov
subl
stos
dec
inc
inc
ss
push
rcr
jnp
or
movsb
jl
adc
inc
lret
mov
xchg
into
or
inc
lret
cld
pusha
sbb
add
xor
xlat
mov
mov
mov
push
mov
push
jb
and
push
sub
or
hlt
jecxz
jecxz
sub
aas
and
inc
jmp
ret
hlt
pop
jo
test
add
rorl
mov
data16
mov
shrl
mov
pop
xor
fisubs
fldenv
mov
test
pop
sbb
jno
ss
xchg
imulb
repz
in
cmp
mov
loopne
xlat
cmc
inc
nop
sbb
add
mov
movsb
add
and
mov
fmul
movsl
iret
pop
lock
inc
dec
dec
inc
sbb
outsb
rorl
popa
das
jl
dec
nop
shrl
inc
mov
mov
jo
xor
cwtl
push
cmp
jmp
ljmp
out
dec
dec
insl
fstps
xor
mov
adcb
js
fnsave
jle
xchg
std
xchg
xor
mov
clc
push
test
mov
arpl
daa
xchg
fisttps
mov
push
and
rcrl
push
push
aaa
popf
subb
xchg
scas
mov
sbb
sbb
ds
repz
inc
cmpsb
fs
dec
sahf
cmpb
das
out
pop
testb
adc
dec
and
push
imul
mov
pop
mov
xchg
ss
lods
cld
lcall
in
push
and
xchg
dec
lea
mov
out
out
push
fs
test
or
bound
push
lea
sbb
popf
lahf
mov
ss
clc
ja
mov
add
inc
dec
push
js
jge
fisttpll
out
outsb
call
inc
cmc
inc
lret
add
mov
out
push
mov
dec
in
sbb
push
dec
cmpsb
jge
imul
mov
jae
std
shlb
xor
and
call
or
xor
and
ss
mulb
fwait
repnz
mov
out
je
or
xchg
dec
xchg
add
jle
cs
pop
incb
pushf
push
xor
popf
ss
loop
mov
jne
ss
adc
hlt
lahf
stos
shl
mov
cmp
aaa
cmp
lahf
push
push
pop
sub
insb
jns
xchg
pop
mov
fbld
ret
cmp
and
pushf
xchg
push
pusha
fldl2t
push
sbbl
adc
dec
std
xchg
fwait
xchg
add
testl
lock
sbb
mov
popf
leave
stos
js
sbb
subb
dec
out
add
loop
rcl
mov
clc
imul
lret
xor
sub
push
push
inc
ss
cmp
ret
jp
std
inc
sarl
dec
pusha
fbld
or
dec
scas
inc
adcb
adc
out
cmp
push
ret
mov
pop
fnstcw
mov
mov
je
icebp
xchg
aam
sub
xchg
push
in
cmpsl
jl
push
add
inc
stos
xor
sub
mov
add
push
adc
sbb
in
testb
iret
adc
jge
shr
cld
sahf
repz
ret
inc
or
nop
jns
inc
sbb
adc
adc
add
push
dec
adcl
mov
testb
and
pusha
sub
sti
adc
aaa
ficomps
pop
add
sub
dec
cmpl
shll
cmp
shrb
xchg
sub
out
mov
or
cwtl
and
shlb
mov
push
movsl
inc
sub
jmp
cmp
jbe
inc
jno
xchg
popa
add
push
or
xor
jp
fbld
adc
sbb
ljmp
jge
icebp
push
lea
jle
mov
adc
imul
pop
aas
sbb
orl
xchg
test
sahf
or
cmp
jne
inc
int
add
rclb
pop
cwtl
jp
outsb
xor
jmp
push
lea
imul
sbb
cmp
and
jne
inc
sbbb
fistl
std
mov
dec
out
adc
movsb
into
sahf
sbb
pop
gs
fsubs
cmpsb
aad
loopne
popf
xor
or
inc
popa
add
mov
jl,pn
jbe
lcall
sub
xor
loop
add
ret
jno
push
pop
push
push
or
icebp
repz
cmp
sarl
mov
xchg
mov
lret
push
jecxz
mov
lock
and
in
cmpsl
shlb
js
les
outsb
add
adc
sbbl
int3
sub
sub
clc
out
loopne
sbb
xchg
jns
jnp
out
lahf
fdivl
inc
cmp
mov
push
pusha
popa
in
rcll
dec
in
stc
cmpsb
fwait
loop
cmp
dec
sub
cwtl
inc
mov
jb
mov
or
cmp
pop
cmpsb
mov
sub
adcb
jno
mov
adc
pop
pop
enter
pop
out
sub
shll
fistpll
mov
cs
mov
ret
jns
fnstcw
dec
call
fimull
fyl2xp1
pusha
mov
stos
popf
sub
cmp
js
pop
mov
lcall
xor
adc
out
loope
iret
jp
in
jle
xchg
xlat
add
das
div
mov
push
jo
rcll
dec
push
std
mov
jg
sub
jno
xchg
inc
clc
hlt
cmpsl
out
xchg
pushf
xor
push
inc
mov
cmp
test
dec
lods
push
xor
and
hlt
xchg
add
loopne
xchg
sahf
push
sbb
aam
cmc
xor
dec
aam
rcrb
inc
jo
jmp
popf
lods
test
ja
sahf
mov
cwtl
add
jnp
daa
cmp
xorl
push
mov
jb
aad
mov
or
sub
mov
xchg
mov
xchg
and
cmp
test
lock
daa
mov
jge
sbb
rcrl
sbb
pop
insl
adc
push
aas
insb
sahf
stos
jne
or
mov
push
cwtl
mov
xchg
testl
lret
add
shrb
enter
mov
adc
jb
sub
sub
fcmovu
push
lahf
mov
jno
jg
int3
adc
mov
addr16
xor
fldz
in
loop
fistpll
jl
push
gs
ss
push
scas
fstpl
and
mov
adc
or
out
outsl
dec
outsb
add
and
cld
inc
sub
push
xor
jge
jmp
mov
cs
sub
out
pop
mov
jmp
push
xchg
hlt
or
sub
jecxz
adc
sbb
mov
add
stos
jp
popf
sub
ja
imul
in
inc
stos
push
dec
lods
jl
stc
cmp
push
fisubs
adc
mov
or
sbb
cltd
push
add
subl
cmpsl
mov
test
mov
adc
inc
pop
pop
cmp
clc
cmp
adc
lcall
popa
dec
out
pop
lock
lods
repz
or
cltd
or
clc
push
and
enter
or
sbb
xor
fistpl
push
in
mov
sbb
insl
pushf
cld
pop
or
push
call
mov
cmpsb
aas
rcrl
mov
movsl
nop
adcl
mov
movsb
pop
mull
andl
fwait
inc
sub
call
or
outsb
into
fsubl
out
int
std
push
stos
mov
insl
mov
cmc
mov
cmp
or
cmp
aaa
or
outsl
sahf
sbbb
inc
jns
nop
mov
adc
mov
fs
jne
mov
or
adc
aam
cmp
xor
jae
cmp
sbb
inc
lods
add
out
in
pop
test
aam
in
test
push
or
popa
punpckhwd
popl
rcr
movsl
sub
shrl
int3
test
xor
fsubr
pop
outsb
sarb
cltd
aas
add
or
jno
int
int
je
iret
sub
fmull
and
push
fcompl
shlb
je
or
sti
xchg
fcompl
jmp
push
add
jae
push
scas
xor
jle
cltd
imul
test
push
imul
int3
mov
cli
push
mov
jle
push
or
and
mov
add
cld
loope
push
cmpsb
int
repz
loope
jg
movsl
push
dec
push
jl
xchg
rdpmc
sahf
movsl
dec
in
jo
xor
mov
decb
dec
test
imul
push
outsl
incb
adc
aas
and
loope
lock
dec
roll
in
dec
ror
cmp
out
loop
aam
lods
aas
xor
xlat
mov
xchg
sbb
fisttpll
xor
movsb
jp
or
and
pop
fcmovnb
cmp
mov
out
dec
repnz
pop
cmp
lret
shll
push
adc
cmp
or
fs
lock
inc
mov
popa
fcoml
sub
mov
jo
iret
inc
std
cltd
mov
lods
pop
cmc
sbb
cmp
pop
ljmp
push
addr16
in
xor
movsb
outsl
pop
loope
subl
mov
dec
mov
sbb
inc
mov
incb
std
fcomps
loop
and
popf
scas
aam
rcr
shl
repnz
cvtdq2pd
pop
scas
push
sbb
jg
ss
sbb
inc
jecxz
mov
xor
mov
push
jb
xor
xchg
jae
imul
pop
lcall
dec
sub
repnz
cmpl
ljmp
jp
dec
push
fsubrl
mov
mov
ret
dec
sbb
inc
push
data16
push
bound
cmp
jmp
rorb
cwtl
push
mov
idivb
das
roll
mov
mov
out
push
js
lcall
fisttpl
fs
cld
jne
jo
ret
dec
fwait
xchg
fxch
pop
push
enter
push
mov
pop
jne
push
pop
jecxz
push
and
adc
dec
jecxz
push
test
inc
push
icebp
pop
getsec
incb
or
xchg
hlt
pop
pop
xchg
jp
ret
sub
xchg
mov
mov
add
stos
add
stc
aam
pop
xor
pop
add
mov
and
xchg
add
cmp
sbb
icebp
cmp
pop
les
and
push
iret
cli
xchg
sbb
gs
and
sbb
loopne
mov
inc
jle
adc
mov
mov
movsb
ret
hlt
push
push
lret
sbb
test
inc
das
pushf
pop
cs
xchg
mov
das
mov
pop
aad
cwtl
data16
test
std
xchg
adc
jecxz
xchg
mov
in
fs
mov
pop
dec
dec
lock
hlt
outsl
mov
pop
dec
mov
mov
inc
setbe
push
dec
xor
fisubrl
lret
add
xor
jp
ds
repz
jno
inc
push
dec
aam
xchg
pop
inc
or
mov
or
lock
int
dec
rcr
imul
xlat
or
gs
out
inc
pop
or
pushf
test
mov
je
xlat
sti
mov
fisttpll
cwtl
repnz
push
mov
pop
jmp
rorb
add
fucomp
popf
cmp
cmp
mov
adc
xor
dec
or
sbb
xchg
sub
ret
into
lret
sub
inc
and
xchg
push
push
dec
shrl
mov
mov
imul
pushf
pop
add
inc
pop
mov
out
daa
ja
sbb
leave
inc
into
in
ret
nop
cmpl
ret
enter
fs
pcmpeqd
mov
rcll
movsb
xchg
lea
movsl
cmp
in
jnp
cmp
in
or
dec
push
and
aaa
xchg
adc
std
test
jecxz
jo
mov
xlat
mov
imul
xlat
mov
adc
int3
or
mov
fiaddl
jb
dec
pop
cld
and
filds
jcxz
fwait
push
adc
gs
scas
inc
daa
sub
je
cmpsb
xor
mov
and
cmc
pop
mov
jp
outsl
mov
or
int
cltd
pop
daa
int
xor
dec
les
dec
dec
ret
pop
cmpsb
gs
and
or
or
mov
mov
cmp
pusha
mov
cmp
fsubl
mov
push
ljmp
jno
inc
and
ret
sbb
mov
aas
push
imul
xor
loopne
test
movsb
cmpsb
aad
push
repnz
push
shlb
mov
cwtl
mov
mov
xchg
sbb
xchg
mov
divb
push
test
sub
call
or
hlt
mull
mov
push
testl
add
mov
pop
popa
and
icebp
dec
inc
dec
in
cmc
insb
popf
xor
mov
adc
loopne
cmp
pop
pop
xlat
pop
test
push
adc
push
sub
movsl
cmp
cmpsl
add
and
inc
or
lret
shrb
dec
fstl
mov
sbb
push
test
adc
xchg
lods
cwtl
xchg
fcomip
push
movsl
add
mov
mov
add
mov
loopne
or
call
or
in
cli
lahf
rolb
add
cltd
push
xchg
mov
decl
cmc
sbb
dec
lahf
push
mov
inc
scas
sbb
stos
inc
lahf
push
ds
sub
dec
rol
sub
pop
and
popf
xchg
scas
pop
outsb
mov
mov
xlat
insl
jne
xchg
out
fwait
xchg
hlt
addr16
adc
outsl
or
popa
lea
lret
adc
ja
and
push
ljmp
stc
mov
xchg
pop
sub
xor
jbe
pop
mov
data16
jb
int3
test
stc
push
in
mov
jns
mov
sbb
incb
mov
lods
add
sub
add
ljmp
mov
rcrb
and
xchg
inc
out
in
sub
sbb
xor
cmp
stos
push
in
jg
nop
adc
popa
addr16
and
xlat
adc
test
xchg
rol
into
enter
pop
fs
leave
xchg
aam
ret
mul
pop
mov
sbb
pop
push
ret
pop
push
idivb
add
popa
xchg
sbb
fidivs
loop
es
and
dec
inc
cmpsl
inc
fsubp
fsub
decl
dec
cmp
jl
jno
sahf
inc
adc
jns
daa
iret
sub
loope
lea
inc
sahf
ss
mov
add
mov
or
lahf
sub
adc
cmp
or
loop
jne
mov
sbb
cmpsb
cmp
sbb
cmp
cli
in
fdivs
xor
cmpsb
adc
adc
xor
adc
aad
mov
ret
pop
xor
xchg
ret
repz
mov
adc
jb
stos
pop
push
cmc
mov
pop
jle
inc
mov
push
iret
stos
out
and
add
lods
pusha
push
ror
loop
mov
popf
jp
repz
sub
cli
push
add
mov
add
cmp
test
or
jno
repz
xchg
lcall
inc
or
sbb
popf
addb
cmp
dec
ds
sub
jecxz
pop
cmp
ret
rorl
xchg
dec
loope
pop
loop
shr
rorb
mov
rcrl
scas
inc
mov
std
xchg
dec
or
in
sbb
xchg
mov
and
int
cmc
lret
jo
xorb
fists
fadd
push
loop
or
jp
cli
scas
push
lods
loopne
movsl
sbb
stc
xchg
adc
fcompl
push
cmp
add
cmc
adc
icebp
popa
mov
add
add
xchg
fs
jbe
mov
cltd
and
call
in
dec
leave
sar
xchg
xchg
repnz
aas
loop
fstl
ja
icebp
push
xchg
jge
mov
in
push
adc
inc
mov
xchg
jge
ljmp
adc
pop
pusha
lret
and
in
insl
and
in
pushw
repz
scas
les
push
push
xchg
in
add
pop
outsl
mov
and
iret
out
xor
mov
sbb
ret
cmp
jne
mov
and
pop
lret
xchg
aam
les
jbe
mov
push
loop
adc
mov
lcall
pop
mov
data16
adc
sub
dec
adc
jl
mov
fadds
loop
in
push
add
adc
cmc
ja
out
iret
test
lret
clc
jp
stc
jo
xor
loop
xor
mov
push
jno
leave
movsl
lock
outsb
pusha
testl
sub
repz
outsb
pop
and
ljmp
jno
out
sbb
mov
ret
loopne
in
std
jae
das
stos
imul
loopne
fidivl
or
nop
or
mov
movsb
dec
pop
fidivl
int3
adc
gs
popa
push
mov
xchg
add
pushf
jae
fldenv
pusha
inc
dec
lret
lret
push
or
pop
or
cmp
aas
mull
out
imul
inc
or
out
mov
mov
sub
mov
adc
mov
mov
inc
out
xchg
stc
lock
daa
fdivrp
sahf
cltd
pop
fidivrl
lret
cmp
dec
push
mov
hlt
mov
sbb
in
cli
adc
inc
fisttps
iret
or
adc
sbb
shrl
mov
mov
push
inc
incb
aaa
xchg
das
imul
mov
add
addr16
jo
push
jmp
jge
dec
lcall
dec
loopne
stc
or
pop
dec
mov
ret
adc
inc
rcll
dec
dec
ror
loop
scas
jno
pop
cmp
mov
push
mov
sub
jae
pop
mov
mov
in
cwtl
shlb
testb
jp
ja
cmc
test
fiadds
ret
add
scas
clc
imul
imul
jo
inc
xchg
out
imul
lea
sar
test
ljmp
pusha
sbb
and
outsb
fcmovne
aad
sub
stos
insl
mov
xchg
mov
push
mov
dec
push
mov
xor
push
lods
jnp
fdivl
mov
loop
inc
cmpsl
adc
add
sub
and
fldl
scas
inc
aas
fwait
push
jae
in
sbb
xor
imul
xchg
cs
lods
jno
lahf
dec
imul
or
jmp
fimull
shll
in
punpckhdq
ds
pop
cli
lods
stos
mov
cmpsb
inc
stc
mov
arpl
mov
subb
xor
bound
xor
xchg
sub
inc
sub
clc
arpl
int3
outsb
pop
jge
ds
dec
scas
or
lods
inc
mov
fwait
add
inc
arpl
xchg
ljmp
fwait
jg
rclb
stos
loope
sub
dec
cmp
push
stos
push
mov
mov
data16
inc
add
mov
outsb
shr
push
and
mov
push
dec
jecxz
mov
ja
shlb
int
es
adcb
ret
iret
mov
inc
pop
lods
loope
or
enter
dec
sub
js
scas
and
xchg
sub
in
mov
mov
pop
xchg
stos
iret
add
inc
in
shrb
movsl
xchg
nop
cmp
fxam
movsl
cmp
or
xor
sub
jne
movsb
adc
push
or
mov
mov
push
sbb
pxor
aad
lods
andb
pop
push
lret
addb
std
cmp
leave
push
push
push
push
jge
aaa
fidivl
imul
mov
pop
push
push
push
vaddpd
sarl
and
shl
xchg
and
ret
jbe
jge
scas
sbb
push
test
mov
jnp
ss
dec
inc
idiv
pushf
xchg
addr16
sbb
mov
loope
inc
clc
push
mov
pop
mov
fdivrp
cmp
dec
or
sbb
cmp
insb
add
sbb
cmpb
push
stos
push
xchg
add
inc
adc
push
shrb
inc
push
jl
pushf
cmpsl
int
loop
xchg
movsl
inc
fcompl
shlb
cmpsl
xchg
xchg
and
or
js
xchg
mov
push
int3
lret
mov
sbb
mov
sbb
sub
icebp
adc
pop
jmp
cmpb
lods
pop
jmp
fsub
aam
loope
aaa
inc
retw
push
fsub
dec
loop
dec
loopne
jb
push
ret
pop
sub
hlt
mov
push
enter
sbb
imul
xchg
xchg
mov
push
or
sbb
and
sti
inc
inc
arpl
inc
test
push
xor
pshufw
mov
cld
loope
dec
pop
adc
nop
addr16
lock
aas
add
xor
out
mov
xchg
sbb
adc
or
jecxz
call
cmp
inc
jnp
fmull
mov
sbb
xor
xlat
fwait
cmpsl
pop
jg
push
lea
lods
gs
shll
stos
inc
outsl
dec
insb
fcmovbe
sar
or
hlt
pop
mov
lods
repz
adc
mov
insl
pop
sahf
xchg
push
test
mov
mov
sub
sub
repnz
imul
cmp
push
lret
dec
fiaddl
jne
sbb
lods
mov
pop
lret
or
push
push
mov
fimuls
cmc
xchg
cmp
cmp
sub
pop
adc
mov
lods
fldt
leave
int
mov
cmp
or
push
pusha
mov
les
jmp
pop
lcall
ja
fxch
inc
nop
mov
lock
add
jbe
or
mov
aaa
leave
cmpb
fdivs
xor
mov
mov
add
jns
jle
scas
out
repz
popa
jmp
push
loope
push
pop
jns
adc
push
sub
mov
push
dec
xor
xor
sbb
push
outsl
fstl
push
es
pop
arpl
aas
in
pushf
aad
adc
and
xor
js
in
xor
dec
cmp
cmp
dec
lcall
mov
dec
add
les
inc
sarb
or
mov
scas
ret
mov
clc
das
sti
insb
leave
sbb
nop
insb
js
outsb
xchg
pop
addb
xchg
adc
sbb
lock
ss
aad
repnz
sub
fwait
imul
lcall
inc
mov
clc
or
or
adc
es
jbe
ljmp
jne
jp
mov
mov
pusha
xor
fwait
push
sub
icebp
inc
aas
push
jge
mov
test
arpl
mov
inc
pushf
mov
cmpsb
aas
pop
push
add
cmp
pop
or
sbb
push
rclb
pop
inc
cmc
or
push
xchg
jl
mov
cmp
and
lds
xor
testl
dec
mov
sbb
push
or
cmp
in
orl
jb
outsb
mov
nop
mov
xchg
cmp
push
xchg
inc
lret
add
bswap
lret
fbld
add
mov
in
pushf
cmp
out
push
cmc
jmp
xchg
and
aaa
add
insl
adc
mov
mov
pop
mov
lods
shr
mov
adc
push
nop
sub
ss
movl
xor
gs
mov
jo
divl
push
and
addl
mov
pop
jmp
lcall
test
test
shlb
push
mov
mov
jg
out
lret
lock
shl
rcrb
mov
jl
mov
push
leave
outsl
xchg
push
mov
dec
mov
jb
jmp
lea
in
cmpb
stos
test
fsubs
orb
pop
in
mov
dec
mov
xor
and
repz
push
mov
jb
in
cld
sbb
in
popf
pop
aaa
dec
cmpl
mov
test
out
inc
fimuls
sub
push
xchg
gs
xor
push
andl
sub
xor
jae
fdivp
or
cmp
aaa
jo
ror
repz
scas
test
sbb
inc
mov
mov
dec
movsl
xchg
fstp
nop
jecxz
xor
jnp
inc
leave
cltd
pushf
xor
hlt
outsb
push
push
lock
dec
mov
jmp
or
insl
lret
pop
imulb
pop
push
popf
dec
inc
jge
outsl
es
xchg
mov
repnz
add
shrl
dec
int
add
call
out
and
lock
insl
or
cmp
popf
pop
cwtl
dec
mov
mov
xchg
inc
aam
ror
push
and
dec
dec
fsubs
dec
adc
lret
aaa
dec
mov
mov
jecxz
sub
mov
mov
or
lods
outsl
push
popa
int
push
std
ljmp
dec
push
shll
and
and
in
in
pushf
push
outsl
into
or
mov
mov
repnz
imul
pop
aad
lahf
xor
fistps
cmpsl
ret
xor
fiadds
iret
and
call
inc
cmp
movsb
popf
jp
rorl
xchg
mov
pop
into
in
shlb
cmpsl
jne
sahf
out
adcl
sbbl
call
inc
enter
loop
mov
pop
jno
sbb
pushf
dec
loope
test
lea
xchg
mov
inc
bound
mov
mov
cmp
sbb
push
insl
stos
aas
sbb
lea
sbbb
fstl
jmp
test
ljmp
ds
jp
add
cmp
frstor
pushf
addr16
mov
arpl
or
xlat
inc
rcrb
add
xchg
imul
mov
dec
pop
rcrl
outsb
insl
test
pop
lret
pushf
test
stos
imul
mov
pop
mov
jbe
adcl
paddusw
or
push
pop
gs
js
loopne
adc
fs
call
dec
je
mov
sbb
xchg
daa
fsts
decb
cmpsl
pop
lock
shll
leave
ret
cmc
jns
stos
call
arpl
mov
fs
cmp
cmp
adcl
push
out
daa
pop
or
push
mov
iret
add
inc
frstor
shrl
sub
mov
jns
jge
imul
adc
xchg
mov
test
stos
push
jg
mul
mov
and
fwait
inc
cli
clc
nop
cli
or
into
popa
sahf
cmp
subb
lea
add
pop
adc
add
lods
subb
push
out
mov
aas
and
inc
fnstenv
and
dec
popf
addr16
clc
into
jno
sbb
in
fsubl
inc
stos
dec
cmp
lds
mov
iret
pop
mov
pop
push
or
jl
sub
jbe
cmc
mov
mov
pop
and
rorb
sbb
sbb
in
int
ds
inc
sbb
insl
or
and
sbbl
hlt
ror
popa
xchg
pop
or
pop
icebp
pop
in
mov
test
dec
dec
fs
or
xchg
stos
test
pop
aam
cli
aam
adc
jmp
ret
or
jo
out
inc
xchg
lret
jae
mov
xor
in
xor
mov
cwtl
mov
stc
and
adc
mov
imul
jecxz
daa
mov
inc
stc
mov
mov
add
sbb
imul
ljmp
xor
jbe
mov
cmp
or
inc
ret
imul
sbb
xor
mov
xchg
loop
aad
cmp
ljmp
mov
jns
pop
mov
push
out
int3
jb
int3
adc
mov
scas
mov
inc
ret
nop
nop
scas
sbb
jmp
adc
outsl
fiadds
mov
dec
add
test
notb
adc
dec
int3
xor
lret
int3
movsb
mov
inc
jnp
test
xor
es
cwtl
jb
xor
mov
in
mov
mov
jo,pn
dec
mov
or
jb
pop
or
sbb
out
loope
pop
mov
dec
cmc
mov
stos
mov
pop
sar
fdivp
stc
cmp
mov
sub
out
cmpsl
test
fistps
lcall
sub
ret
hlt
dec
shl
jl
std
or
fcmovnbe
notb
jl
outsb
add
jb
dec
ds
jns
leave
mov
xlat
test
inc
jle
jo
rcll
lds
shrl
shr
cli
jo
bound
jge
fwait
dec
or
push
inc
inc
inc
out
sahf
test
fisubrl
mov
mov
js
add
int
insl
cmpsl
sbb
xor
or
cs
mov
lret
data16
imul
jg
cmp
sub
repz
std
mov
jecxz
ja
jecxz
cmpsb
out
mov
sbb
rcrl
scas
into
std
inc
xchg
dec
xchg
mov
ja
cli
dec
loope
and
cmp
jmp
xor
inc
test
xchg
pop
popf
xchg
or
push
xchg
or
xchg
lods
xchg
imul
mov
pop
xchg
test
mov
inc
rcr
and
sub
gs
sub
adc
inc
inc
cld
test
int3
out
in
cltd
addr16
cmp
add
mov
pop
jp
lret
test
rorb
inc
in
cltd
popa
add
jno
push
mov
pop
push
test
cmp
cld
daa
lcall
or
xchg
rcl
inc
add
sbb
nop
xchg
ret
inc
data16
lret
dec
cmp
aad
pop
pop
pushf
fsubr
popf
or
mov
aaa
ret
add
adc
pop
dec
addps
mov
push
in
lea
imul
scas
je
xorl
daa
out
xchg
sub
xchg
adc
jo
xchg
call
and
pop
adc
imul
mov
gs
cs
daa
jecxz
xor
incl
testb
int3
push
stos
cmp
and
nopl
jge
leave
daa
icebp
insb
add
dec
xchg
sbb
movsb
fucomip
in
es
cmc
test
fcmovnu
push
adc
test
and
push
push
ret
and
mov
push
xchg
push
popa
or
xor
nop
fidivrs
dec
shlb
inc
out
iret
pop
add
push
ficoms
xchg
stc
or
xor
ret
sub
cmc
inc
mov
stos
nop
sti
ret
shll
push
pop
cmp
xchg
jnp
xchg
mov
repz
ret
arpl
pop
jae
sub
lahf
and
stos
lcall
cld
imul
sbb
add
sub
push
mov
fidivrl
mov
mov
lea
sbb
jl
push
lcall
shlb
xor
push
hlt
mov
inc
call
fidivrs
clc
pop
pushl
xor
dec
in
popf
mov
mov
shl
sub
mov
pop
pop
xlat
hlt
dec
jmp
adc
pop
arpl
negl
shrl
or
cli
imul
mov
rcll
ret
cmpl
mov
aas
cmc
inc
push
push
lea
inc
and
xlat
iret
data16
in
push
aam
sar
jp
lods
imul
jp
js
dec
out
lds
xchg
test
inc
outsl
ds
push
mov
pop
push
ja
and
xor
shld
popf
cmpsb
lea
and
dec
sub
dec
dec
call
mov
fnstsw
sahf
not
push
imul
add
or
fs
cmc
and
loop
inc
inc
jnp
jne
or
xchg
inc
cltd
xor
and
dec
ja
shrb
movsl
mov
xchg
testl
adc
fsubs
mov
shl
push
fs
xchg
xchg
inc
mov
out
ficomps
and
daa
lret
ljmp
stos
cmp
sbb
mov
pop
aam
es
aad
outsb
test
in
das
ficomps
mov
pop
pop
sbb
cltd
inc
pop
inc
inc
push
call
sbb
inc
aas
push
add
sub
xchg
mov
insb
push
cmp
mov
mov
cmp
dec
add
mov
stc
cmp
xlat
movsb
fst
mov
in
popa
dec
cmpsl
sarl
call
pop
outsb
outsl
push
xchg
lcall
or
lcall
jp
and
cmp
push
push
cmpsb
sbb
xor
jnp
nop
bswap
pushf
rcl
nop
add
jne
and
mov
out
rorl
dec
data16
cmp
add
dec
imul
xchg
jmp
jmp
mov
adc
fnstenv
sbb
movsb
pop
mov
dec
mov
shlb
fwait
repnz
xchg
xchg
push
stos
xor
sub
and
ret
add
xchg
sub
xlat
jg
and
mov
stos
std
adc
add
test
in
pop
mov
cmp
out
mov
dec
test
add
ss
sbb
dec
iret
lret
pop
cwtl
mov
cmc
jb
daa
and
loopne
sub
xchg
xor
arpl
iret
ljmp
lock
aad
arpl
sbb
xchg
or
ficoml
dec
mov
mov
stc
inc
out
es
adc
mov
movsb
ret
test
sbb
push
inc
sbb
sbb
mov
inc
cmp
xor
aas
xchg
push
fstl
mov
inc
scas
jno
incl
push
or
testb
push
lahf
pop
and
cmp
cmpsl
ljmp
mov
push
outsl
mov
pop
cwtl
nop
adc
lret
out
add
sbbl
jns
lret
and
xchg
dec
lcall
das
daa
mov
nop
cld
pusha
bound
clc
add
repz
xor
pusha
inc
lods
inc
fiadds
stos
xor
aad
divl
sub
jp
pop
and
shr
or
sub
enter
mov
and
push
pusha
jns
in
mov
sub
imul
int
rcrl
in
add
pop
push
dec
shl
add
mov
out
notrack
popa
xchg
sbb
and
and
and
push
not
sbb
and
or
and
add
sbbl
popa
aam
mov
jns
es
les
cli
stos
xchg
sub
das
ja
repnz
repz
jb
pop
lahf
or
cld
xorb
loop
push
add
or
fwait
pop
fldcw
clc
and
filds
imul
rcr
repz
loope
lock
aas
pusha
andb
push
cmp
stc
adc
jnp
and
push
lcall
aaa
sahf
jnp
inc
sbb
pop
mov
push
out
test
mov
mov
test
add
cmc
adc
push
dec
pop
mov
movsl
lds
xor
add
rclb
xchg
mov
loop
js
and
sahf
xor
mov
icebp
out
cmp
jns
jmp
lods
or
or
aaa
mov
add
lret
movsb
inc
std
push
out
jge
jb
sti
aaa
rorb
into
dec
and
dec
test
mov
fstpt
aad
push
push
cmpsb
adc
mov
loope
arpl
push
or
shl
pop
enter
dec
rol
shlb
xchg
lret
adc
push
rorb
pop
cwtl
mov
pop
movsl
mov
push
or
xchg
inc
inc
adc
les
lahf
ret
repz
aas
xor
push
hlt
or
pop
aaa
les
jg
inc
in
inc
mov
lret
lods
sahf
mov
jae
outsb
push
xor
vphaddbw
add
test
or
cmc
inc
sbb
pusha
push
cmpsb
out
mov
mov
adc
mov
mov
hlt
mov
clc
mov
sbb
pop
pop
jne
sbb
dec
loop
fstps
mov
cs
ljmp
inc
test
gs
push
pop
sbbl
cmp
push
out
aam
std
out
and
testl
ljmp
or
mov
movsl
push
outsb
out
mov
lods
sub
xor
push
sbb
insl
stos
xor
aam
or
mov
push
popf
mov
xchg
out
popf
inc
or
sbb
mov
fwait
mov
enter
aad
stc
iret
dec
mov
lock
or
xor
cli
xchg
xor
cmpsb
sbb
push
testb
test
jns
movsl
inc
clc
cmp
fsubrl
rorl
jge
xchg
fcom
add
mov
cmc
xchg
pop
fnstenv
dec
movsb
cmpsl
push
and
push
jmp
push
mov
inc
fisubrl
insl
sub
sbb
sbb
loope
loopne
xorb
hlt
mov
mov
pushf
cli
add
or
jmp
adc
add
pop
sti
mov
aam
fwait
add
negb
dec
cmp
sub
cs
test
push
cltd
test
mov
out
mov
xchg
stc
adc
jne
dec
cmpsl
out
in
insb
or
ss
and
mov
xchg
add
jns
js
jne
call
cli
andl
lret
sub
mov
dec
sbb
stc
mov
mov
faddl
and
into
arpl
add
ja
fdiv
jo,pn
pop
cmpsb
jle
jmp
sbb
pop
push
mov
repz
xchg
aad
xor
inc
mov
fdivr
std
or
pop
rcr
outsb
lret
mov
push
inc
adc
int3
cmpsl
and
nop
and
imul
inc
stos
dec
in
cmpb
sub
jbe
inc
loope
pop
mov
dec
outsb
popa
add
jecxz
mull
aas
insl
stos
int3
mov
popa
jnp
sub
jecxz
loope
dec
mov
cmp
cs
lcall
cmp
dec
filds
lret
mov
dec
insb
scas
cltd
sbb
rorl
addl
push
or
sbb
xor
add
dec
adc
xchg
and
shll
dec
pop
rolb
and
fldl
xchg
movsb
fstpt
xchg
add
mov
mov
scas
jmp
mov
jb
fisttpll
sarb
rcrl
das
pop
or
es
pop
push
dec
ds
and
mov
dec
and
fsts
sub
bnd
adc
sbb
dec
mov
mov
movsl
ljmp
and
arpl
subb
ljmp
inc
push
push
mov
push
pop
sbb
mov
test
test
push
pop
pop
lods
ret
addl
mov
sub
scas
inc
sub
push
mov
es
in
cmp
cs
out
mov
jl
stc
mov
in
add
pop
cmp
imul
xchg
mov
xchg
popf
adc
jns
outsb
subl
dec
pop
into
jmp
mov
mov
fprem
mov
or
in
out
adc
ljmp
call
cmp
ds
fwait
sub
dec
push
mov
xchg
dec
xor
jle
push
jno
lea
sbb
iret
sbb
data16
loop
cs
scas
enter
in
fsubrs
adc
cmp
testb
pushf
xchg
cmpsl
push
ja
push
test
icebp
push
shll
rcl
mov
sahf
cmp
and
pop
jmp
xchg
mov
jecxz
add
cmp
dec
push
sub
pop
jge
jl
inc
imul
mov
dec
pop
aad
ret
ds
jp
adc
dec
and
mov
andl
lds
test
mov
or
sub
dec
mov
push
fadd
std
mov
cli
push
adc
mov
xchg
mov
aam
push
int
clc
xchg
adc
in
leave
add
or
lahf
xor
arpl
popf
xor
ljmp
mov
push
mov
pusha
stos
test
mov
data16
lret
lcall
mov
sbb
popf
pop
imul
lret
pop
cli
jno
mov
mov
adc
lcall
xor
sbb
inc
push
jmp
xchg
inc
inc
dec
add
cld
xchg
xor
sub
or
inc
rcr
gs
sbb
aaa
add
subl
and
xlat
les
paddb
mov
push
xor
cmpsl
ds
ffreep
pop
sbb
mov
jp
xor
bswap
xor
xchg
inc
push
fstp
idivl
cmp
sub
sub
mov
mov
mov
cmp
stos
mov
call
inc
lock
cmc
cmp
rclb
repnz
subl
mov
icebp
fisttps
popf
xor
loop
in
mov
in
ret
fidivl
in
or
cwtl
adc
sarl
montmul
cmpsb
inc
push
xlat
repz
sub
fucom
les
sub
sub
xorb
mov
add
inc
stos
out
or
fsubl
mov
js
dec
mov
mov
pop
sub
aad
mov
lds
xchg
xor
js
insl
and
ret
mov
fstpt
js
xchg
and
dec
insl
mov
pushl
sub
mov
dec
jns
aas
cmp
mov
in
adc
aam
dec
xrelease
sbb
pop
pop
or
mov
idivb
push
sub
xchg
inc
mov
cmp
cmp
xorb
mov
pushf
pop
push
icebp
cmp
out
test
jge
ds
aaa
xchg
loopne
daa
xchg
scas
or
data16
scas
testl
cmpsb
gs
jbe
test
int
les
inc
leave
ds
pusha
fwait
shl
cmpsb
mul
ret
rorl
int
cmp
fbstp
aas
fildl
test
testl
or
mov
push
sar
shlb
pushf
inc
and
lret
xchg
adcl
clc
mov
ja
xchg
jle
lret
adc
in
adc
cli
mov
out
push
pop
inc
fcmovnb
inc
and
aam
add
cmc
fidivrs
ja
xor
jl
pop
in
push
mov
xor
add
xor
xchg
cmp
iret
dec
fcoml
leave
jae
test
xchg
ss
dec
jecxz
hlt
mov
fs
adc
or
stc
mov
stos
jo
adc
nop
mov
jno
adc
and
push
outsb
and
mov
dec
insl
imul
xlat
push
addl
clc
or
jp
or
mov
dec
rcrb
xchg
cltd
fistps
xlat
xchg
shlb
filds
sahf
cmp
test
sbb
mov
mov
mov
xchg
inc
fcoms
movsb
int3
mov
mov
loope
cwtl
xor
icebp
insb
sub
aas
lods
push
cwtl
lods
xor
pop
lods
in
loope
mov
sub
mov
jbe
cld
mov
mov
faddl
sbb
or
mov
xchg
jne
cmpsl
call
mov
adc
loopne
mov
sub
sbb
loop
xchg
lods
psrld
mov
and
xchg
pop
xchg
popl
xor
fnsave
xchg
jae
pop
mov
pushf
scas
add
fsts
faddl
repnz
int3
ds
pop
jo
or
mov
sub
std
xchg
add
clc
fsubl
movsl
jp
push
imul
movl
lret
inc
fdiv
addr16
lods
aaa
hlt
or
inc
fimull
sub
in
out
ds
iret
xor
arpl
xor
in
fstl
andl
jno
pop
mov
into
test
out
js
insl
mov
nop
jg
data16
xor
insb
adc
pop
cs
add
dec
movsl
fs
mov
sbb
and
pop
lods
xlat
or
scas
and
cs
sbb
call
xchg
movsl
lahf
mov
cmpsb
addb
mul
pop
jns
jle
inc
push
dec
in
push
sbb
pop
out
fnstsw
xlat
xchg
sahf
mov
in
jge
xchg
add
loop
mov
mov
mov
sahf
jle
lcall
or
cwtl
cmp
push
jno
decb
mov
lcall
sbb
pop
cmp
rcrl
sbb
and
ss
push
test
out
inc
cs
pop
adc
add
cmp
mov
pop
rep
fwait
ret
addr16
flds
cs
cmp
imul
or
add
aam
add
jecxz
adc
pop
imul
xor
jae
sub
cmc
in
int3
sbb
ret
sub
pop
nop
xchg
add
lcall
movsb
les
push
mov
and
fnsave
aad
mov
lret
les
fstpt
test
lods
pop
aad
mov
test
xchg
sbb
test
mov
fnstcw
dec
in
mov
clc
push
fmulp
stos
push
arpl
scas
lcall
pushf
sar
dec
std
or
pop
incb
dec
fimull
push
aad
pop
mov
fcomi
jnp
aam
notb
xchg
cli
mov
sti
mov
cmpsb
test
push
or
pushf
inc
fsubl
fneni(8087
push
add
adc
sub
int3
dec
ror
adc
imul
pop
insb
xchg
dec
dec
or
jg
clc
xchg
pusha
mov
int3
xlat
rorb
mov
and
js
mov
test
sti
cvtps2pd
stos
jmp
mov
jb
add
mov
push
sbb
out
jns
gs
sub
dec
rolb
aas
outsb
adc
testb
mov
xchg
push
cmp
cmp
shld
daa
mov
mov
jp
stos
jmp
std
xchg
decl
pop
mov
pop
adc
lret
adc
cmc
add
dec
in
and
int3
outsb
jl
cmp
adc
lods
xchg
push
sub
jg
xor
in
and
lret
pop
not
xchg
lcall
and
in
lret
cli
ss
int
andl
movd
leave
pusha
out
or
cmpsb
adcb
mov
movsl
add
mov
push
movsl
xchg
jno
shl
add
jb
inc
out
jl
inc
push
popf
mov
loope
xorl
fsub
icebp
insb
shlb
clc
iret
mov
lea
cmp
dec
adcl
popa
sar
lret
test
enter
mov
pop
js
scas
neg
outsl
jmp
test
lcall
shrb
sahf
jns
and
dec
push
lods
in
sbb
fdivl
std
outsl
cmpsb
enter
into
fucom
cli
push
cmc
or
subl
call
jl
inc
mov
jp
mov
inc
xchg
sbb
test
gs
bound
scas
sub
pop
push
enter
jp
dec
stos
sbb
adc
dec
cmp
movsl
loop
push
out
cwtl
pop
aam
xor
push
xor
sahf
mov
inc
icebp
push
js
xchg
sbb
aas
dec
shll
or
xor
imul
inc
add
lods
cmpsl
inc
mov
rol
fisubs
push
addr16
adc
cmpsb
dec
and
jbe
adc
push
test
fwait
stos
sub
push
add
add
shlb
movb
inc
add
out
stos
fsubrs
add
jge
popa
clc
xchg
pop
mov
movsb
nop
jmp
xor
int
jbe
imul
out
mov
sub
dec
cld
jbe
cmp
or
out
sub
dec
push
movsb
cli
stos
int3
cmp
or
outsb
inc
fstpl
test
jb
push
loop
outsl
aad
or
out
call
aam
in
outsb
jmp
inc
fs
cmp
xchg
fs
lea
outsb
out
cmp
push
out
push
lods
cmp
mov
popf
pop
push
push
scas
int3
sbb
mov
stos
repz
cmp
jns
pop
mov
or
or
cmp
les
xchg
pusha
ret
xor
aad
in
pop
mov
daa
out
arpl
xchg
xchg
adc
sub
mov
dec
cmpsl
outsl
or
xchg
adc
inc
jecxz
test
dec
je
mov
insb
and
fs
jno
ljmp
add
sub
movsb
add
jecxz
shll
int3
arpl
mov
adc
into
loope
sbb
test
or
outsb
mov
adc
imul
neg
in
push
inc
popf
or
bound
aad
aaa
mov
lahf
andb
mov
or
add
add
cmp
int
js
and
popf
adc
add
cmp
pusha
pop
mov
sbb
rcll
push
loopne
sub
in
gs
lods
dec
ffree
xlat
insb
sub
loopne
dec
icebp
pop
mov
mov
jae
dec
in
cmpsl
loopne,pt
dec
in
daa
pop
icebp
xchg
jnp
cmp
add
adcb
sbb
mov
pop
cmc
call
dec
bound
adc
popf
or
xchg
jg
or
inc
sub
mov
popf
outsl
or
jno
fs
fiadds
fmull
popa
mov
nop
daa
in
adc
int3
lret
xor
repnz
fistl
mov
lea
sbb
jecxz
xchg
dec
call
jbe
scas
cwtl
push
ljmp
jbe
je
cld
test
adc
ss
enter
mov
xchg
push
out
lret
lahf
ss
xchg
call
jge
int3
mov
push
stos
mov
mov
mov
push
shll
adc
push
jo
out
sub
lods
mov
test
jl
adc
loope
xor
jl
loop
lahf
data16
xchg
scas
mov
pop
aam
into
add
sub
loopne
pop
icebp
hlt
add
push
xchg
js
iret
cmp
mov
push
cmpl
inc
js
or
sahf
inc
int
daa
xchg
insb
jg
dec
cmpsb
cmp
adc
imul
shll
outsb
stos
decl
mov
or
cmpsl
and
lds
xor
inc
pop
adc
mov
fisttps
call
mov
mov
cmp
call
jecxz
repz
cmc
cmpsl
mov
ja
js
adc
cmp
dec
pop
cmc
cmpb
cmc
add
fldcw
cmp
mov
rolb
dec
xchg
jge
sub
mov
sub
xchg
pop
jo
sub
pop
pop
sti
jns
insl
jns
in
mov
lret
mov
cmp
ja
loop
in
jo
pop
xor
data16
mov
inc
repz
or
mov
shrb
xchg
xchg
jmp
outsl
sub
into
idivb
iret
lods
ret
or
sub
pop
jo
rclb
and
in
push
cmc
aam
lods
add
add
lcall
push
out
mov
cwtl
pop
dec
inc
outsl
or
stos
mov
xchg
ficoms
call
adc
push
mov
test
popa
push
mov
in
sar
jl
jne
sub
dec
fwait
push
pushf
loope
sbb
jnp
xchg
xor
lods
mov
fwait
inc
pop
mov
jbe
or
pop
inc
mov
add
sub
insl
mov
xchg
push
and
pop
push
add
xor
in
lahf
xchg
sbb
orb
mov
movsl
sbb
ja
cli
inc
scas
xchg
xchg
push
gs
add
bound
mov
sub
and
dec
into
inc
out
mov
pop
push
jb
mov
mov
mov
jle
sarl
xchg
cmc
adc
in
nop
enter
or
call
cmc
inc
cmp
inc
enter
xchg
dec
aad
mov
dec
sbb
inc
lcall
jae
or
das
pop
mov
or
lods
mov
mov
and
xchg
mov
inc
pop
fwait
nop
mov
xchg
or
dec
cld
ljmp
sarl
addr16
and
dec
int3
cmp
pop
in
and
dec
movsl
fwait
inc
jae
pushl
jns
test
mov
out
inc
mov
push
lds
inc
aas
scas
and
xchg
mov
ja
add
mov
shlb
add
adc
gs
mov
pop
hlt
push
scas
out
andl
out
pop
mov
or
sub
or
imul
into
test
xor
test
mov
ss
mov
imul
lods
sbb
push
stc
dec
dec
lahf
ja
daa
lcall
inc
fiaddl
daa
ja
mov
neg
ret
ret
stc
movsl
cli
lods
pop
test
sub
pop
iret
aam
push
push
jg
jbe
and
adcb
mov
xchg
jle
shlb
or
sbb
xchg
sbb
mov
fbld
mov
xchg
pop
out
ret
ficompl
inc
popf
xchg
lods
mov
mov
dec
sahf
ja
jne
mov
data16
jnp
mov
push
repz
insl
and
lcall
and
mov
push
fisubrl
cmpsl
inc
fdivr
shl
xor
jmp
dec
inc
stos
dec
sub
int3
clc
sbb
sub
or
xchg
inc
add
mov
xor
in
jle
bound
sub
sub
inc
push
out
js
shl
mov
cmpsb
and
pop
pop
daa
push
outsl
bound
ret
out
loop
xchg
dec
subb
mov
cmpsb
cmp
xlat
sub
cmp
dec
mov
mov
inc
mov
pop
inc
sbb
and
arpl
mov
movsb
icebp
sub
shrd
icebp
out
lods
mov
int
push
fs
cmp
popa
xchg
xchg
shlb
add
addr16
and
mov
xchg
scas
xchg
mov
jns
xchg
cmp
jge
aam
sbbl
test
pushf
jge
rcrl
cmp
lret
filds
lock
out
push
jo
jns
mov
movsb
out
jmp
les
sub
push
lods
cmp
repnz
mov
pop
push
add
inc
push
sbb
das
xchg
mov
mov
mov
pop
lock
fwait
cmpsl
add
dec
pop
dec
inc
jp
sti
jo
inc
loop
pop
icebp
iret
lds
cmp
fstps
ja
sub
popf
popf
decb
sahf
and
inc
push
std
or
xor
int
lea
and
mov
ftst
mull
mov
sub
mov
or
loope
sub
inc
fwait
mov
loopne
jmp
dec
outsw
xchg
rorl
fiadds
popf
pop
cmp
xor
aad
out
and
in
loope
adc
jg
push
xchg
daa
inc
in
xchg
xlat
int3
test
in
std
xchg
inc
sbb
push
outsb
push
dec
in
mov
xlat
int3
pop
mov
mov
or
data16
xor
aad
sar
adcb
dec
push
cli
negb
jecxz
inc
sbb
sbb
sbb
int
insb
mov
xchg
dec
push
push
jl
xchg
add
mov
int
dec
ljmp
loopne
into
jl
fsubl
fisubrs
jno
xchg
mov
bound
mov
flds
pop
mov
jg
aaa
inc
jbe
jbe
pop
imul
dec
jns
mov
push
xor
stos
pop
dec
aas
xchg
dec
data16
fidivl
arpl
andl
xor
iret
mov
or
pop
enter
or
or
jecxz
sbb
jb
sbb
loop
sub
sub
pop
ficoms
add
aas
sub
out
int
sub
mov
xor
push
out
sbb
sub
setl
ret
addl
inc
push
pusha
test
int3
mov
fmul
push
mov
lds
sub
test
or
negl
rol
out
sbb
add
outsl
mov
je
inc
sub
xchg
jle
sbb
in
inc
and
mov
xor
popf
xchg
mov
in
mov
shr
sub
sub
mov
xor
add
sub
push
inc
andb
sub
pop
sar
xchg
fs
call
cmp
fisubrs
iret
inc
jnp
pop
mov
mov
sub
divb
aaa
je
mov
fs
adc
mov
dec
das
mov
stc
out
cmpsl
xor
mov
addr16
pop
xchg
add
dec
push
cmp
loopne
fisttps
js
cmp
cmpsl
hlt
ret
or
mov
psubusb
xchg
or
sub
pop
rorl
mov
mov
inc
lds
pop
inc
popl
popa
shll
lea
jmp
sti
in
inc
rorl
stc
outsl
pop
dec
rorb
js
adc
mov
int3
lods
push
fldcw
or
xor
xor
dec
sub
out
adc
jne
jne
out
in
and
sbb
sahf
pop
mov
mov
jle
sub
addps
cltd
add
pop
mov
ficompl
lret
push
int3
pop
push
xor
and
adcb
pusha
mov
xchg
aas
data16
imul
sahf
movsl
ds
bound
ja
int3
sarb
jl
inc
fwait
outsb
cmp
and
mov
xchg
out
jmp
div
dec
bound
clc
insb
xor
hlt
mov
jne
sbb
fsubs
notl
repnz
xchg
sbb
push
add
shll
mov
cmpsl
xchg
loopne
ret
iret
test
or
add
jp
inc
sub
std
adc
jp
pop
inc
mov
adc
sub
mov
pop
sti
inc
push
lods
inc
lock
stc
fwait
or
adc
insl
bound
adc
jecxz
cld
cmp
lea
arpl
ja
lods
stos
cmp
nop
jle
lret
scas
push
ret
push
push
inc
pushf
daa
and
bound
jge
rorl
and
repnz
xchg
test
in
ret
es
je
mov
dec
mov
jb
pop
test
pop
mov
mov
cmp
in
stos
fbstp
out
jmp
push
out
sbb
arpl
imul
insb
adc
adcb
inc
mov
mov
pop
xchg
sbb
jne
push
mov
jno
mov
or
mov
xchg
call
mov
ja
inc
or
sarb
mov
mov
xchg
arpl
aad
xchg
xchg
and
lds
sbbb
loopne
ja
out
insb
hlt
lea
scas
dec
mov
enter
das
iret
cli
cmpsl
cmp
cltd
adc
jne
mov
jle
jmp
cmp
sbb
and
sub
aaa
jae
cmp
icebp
xlat
inc
push
mov
sub
push
loopne
pushf
cmp
imulb
mov
dec
add
test
jle
jbe
dec
lea
aam
stc
imul
fimull
fbstp
je
sbb
popw
jg
mov
jge
xor
inc
xchg
es
mov
rol
aad
xchg
inc
mov
xlat
or
and
dec
cmp
lcall
ss
out
popf
rcl
jge
mov
arpl
jle
dec
cmp
pushf
mov
xlat
jnp
mov
or
and
mov
jae
jbe
mov
add
dec
test
stc
jae
iret
xchg
movsl
inc
loope
mov
insl
mov
cltd
hlt
lcall
in
push
clc
js
mov
outsb
leave
imul
mov
sub
cmp
addr16
repnz
or
xor
lods
popf
std
pop
loope
out
xchg
jae
xor
loopne
lcall
sahf
inc
in
imul
xor
jns
cli
xchg
adc
add
int
sti
aam
aad
pop
sbb
icebp
xchg
or
sti
in
je
sahf
and
mov
jle
subl
loope
popa
xorb
sub
ds
fisubl
xor
dec
test
js
sbb
adc
test
jnp
mov
sarl
cmp
and
fsubs
sbb
or
out
mov
loop
push
mov
repz
cmp
xchg
mov
sbb
icebp
scas
icebp
pusha
xor
mov
xchg
add
inc
jmp
cwtl
sbb
xchg
test
cld
mov
fisubl
mov
xchg
stc
outsl
push
cmc
mov
fs
push
sbbl
aas
pop
or
aaa
sub
dec
loop
les
lods
addb
and
iret
cltd
mov
cmp
daa
lret
aas
fnstenv
or
shlb
dec
dec
in
adc
dec
test
adc
and
sub
aaa
shll
mov
inc
aaa
dec
adcl
in
fucomip
in
aas
lods
cmp
inc
push
push
in
inc
fcmovnu
mov
pop
mov
mov
cmp
push
pop
jb
jno
sbb
push
sahf
dec
in
idivb
test
addr16
bound
addr16
mov
add
imul
mov
vsqrtss
popf
add
mov
aad
mov
sub
pop
ret
jle
aaa
popa
fsub
push
icebp
into
fnstsw
adc
into
sahf
xchg
xor
push
call
mov
out
mov
test
ss
xchg
scas
jg
jae
inc
jl
aaa
ja
mov
test
call
fdivrs
adc
inc
pop
out
adc
fwait
inc
fisubl
xor
fwait
jne
inc
dec
das
jo
jnp
es
test
gs
lods
stos
mov
lss
clc
and
cli
add
mov
test
jno
loop
mov
je
add
inc
jb
cmc
ja
repnz
xchg
in
dec
xor
imul
test
xchg
xor
aad
jg
je
adc
push
dec
or
cmp
fs
mov
cmpb
dec
jg
ja
lret
sub
jns
scas
notb
inc
mov
and
in
lock
lret
in
int
rcrb
push
int
or
adc
outsl
push
je
xchg
subb
adc
and
sbb
jo
hlt
xchg
add
xlat
cmpl
inc
orb
inc
test
arpl
xorl
insb
jnp
out
mov
jmp
ret
add
js
jl
dec
sub
insb
aad
repnz
inc
div
mov
loope
in
push
orb
addr16
xchg
adc
mov
xchg
pop
std
insl
ja
aam
test
pusha
mov
pop
xor
xor
outsl
push
adc
mov
mov
push
cmp
fnsave
xchg
fwait
mov
hlt
mov
adc
sbb
push
add
mov
pop
mov
xchg
xchg
fcom
loopne
or
cmp
xchg
or
sbb
push
push
cmp
ljmp
mov
mov
inc
das
mov
pusha
fwait
cld
inc
sbb
add
push
push
std
dec
out
ds
das
shrl
push
std
lret
rcrl
mov
sti
loope
dec
jecxz
dec
jns
jmp
push
mov
ss
sub
fstpt
xchg
xor
movsl
test
sbb
dec
loop
pop
insb
cmp
push
sbb
ret
mov
cmp
xchg
outsb
push
cmp
sahf
outsl
cmp
dec
loop
rcll
inc
imulb
xor
rcrl
pop
sbb
jae
cmp
lock
pop
adc
retw
push
xchg
xor
pop
sbb
or
movsl
xor
and
push
mov
mov
xor
pop
push
arpl
outsb
cmc
testl
shlb
dec
mov
push
cwtl
lods
pop
push
pop
ja
push
mov
pop
loopne
int3
gs
out
mov
movsb
xchg
and
jnp
dec
and
and
push
cltd
aaa
add
inc
and
les
add
mov
dec
loope
mov
xchg
dec
inc
repnz
cwtl
daa
repz
adc
arpl
add
jge
stos
ret
pop
je
fld
push
or
arpl
lahf
push
sbb
jp
out
push
xlat
jns
adc
mov
mov
les
scas
jl
fnstcw
std
loop
xor
cs
icebp
lret
mov
jmp
jecxz
push
adc
pop
lret
xchg
adc
mov
jbe
data16
mov
sbb
dec
fimull
insb
pop
je
pushf
xchg
add
hlt
dec
dec
aaa
stc
inc
jecxz
fdivrs
lods
xlat
jae
test
pop
xor
mov
cld
lcall
in
je
jae
xlat
mov
xchg
jno
les
sub
sub
jnp
outsl
xchg
pop
cmc
dec
add
ljmp
jmp
sub
inc
shr
xor
jns
xchg
inc
out
lods
aas
in
add
je
jg
sbb
adc
push
jae
call
dec
fdivl
sub
enter
repz
jns
stos
popf
xor
int3
pop
xchg
mov
dec
cmp
jle
xor
dec
out
mov
mov
out
xchg
xchg
cli
lea
shlb
sbb
loop
stc
cmp
sahf
push
pop
popf
cli
test
ja
or
push
notb
lock
cmp
test
jne
ret
movsb
inc
ret
sub
xchg
pop
add
fistpl
subl
sub
or
sub
jno
xor
push
xor
adc
push
jecxz
shll
dec
loop
aad
dec
pop
pop
dec
js
mov
fiaddl
mov
inc
adc
push
cmp
lds
stos
push
mov
adc
int3
and
and
add
or
push
andb
aam
nop
lods
inc
add
and
aaa
sbbl
xchg
sub
mov
je
mov
stos
mov
sbb
lret
bound
xchg
cmpsl
add
or
mov
stos
lcall
pop
sahf
and
xchg
mov
std
mov
mov
das
cli
xchg
lahf
sub
and
mov
push
push
xchg
sub
xchg
in
addl
mov
bound
jnp
mov
cmp
pop
call
and
xchg
fwait
sub
or
xchg
sub
cmc
mov
jns
lods
insb
or
mov
mov
ficoms
test
dec
jb
cmp
rclb
std
xchg
fmull
sbbb
inc
call
and
adc
jmp
outsl
push
cmp
jmp
xchg
jo
inc
fidivrl
cmpsl
in
pop
out
sub
fldl
mov
jb
aas
aas
movsl
loop
pop
mov
scas
bound
push
and
lar
sti
and
movsl
cmp
lret
pop
adc
roll
xchg
bound
bound
jb
int3
movsb
repz
mov
adc
inc
ud1
jne
lcall
loope
or
lcall
dec
movsb
mov
cs
dec
jg
movsl
jo
pushf
scas
inc
enter
and
pop
pop
xchg
insl
pop
add
hlt
out
lret
call
mov
inc
xchg
mov
pop
cltd
pop
scas
stc
and
ret
mov
movsb
pop
inc
imul
jno
repz
adc
mov
cmp
inc
inc
dec
imulb
call
movsl
mov
stos
in
push
cmc
jb
cmpb
jge
notb
push
repz
xchg
adc
add
pop
out
mov
jno
cmpsl
add
imulb
sti
mov
pop
cmp
sti
iret
out
rorb
outsb
dec
cmp
movsl
repnz
repnz
pushf
pop
rcl
outsb
cmpsl
je
mulb
je
xchg
mov
mov
addr16
jge
or
xor
xchg
aas
ljmp
sub
clc
lret
ljmp
mov
or
dec
inc
mov
jnp
add
dec
pusha
mov
push
jmp
ljmp
lcall
cld
in
jg
and
mov
add
in
test
pop
in
orl
adc
clc
mov
jmp
int
in
stos
jl
mov
sbb
mov
aad
push
jb
out
enter
das
cmp
leave
push
les
add
sub
insb
testb
ss
out
xchg
lock
lcall
sti
outsb
ret
dec
loop
bnd
sbb
rorb
cwtl
icebp
arpl
add
jns
or
arpl
add
cld
dec
cmpsl
and
or
ja
jns
push
adc
test
dec
cmpsl
out
loope
xchg
push
push
outsb
mov
mov
add
cmp
or
es
adc
jl
out
jl
push
cmp
push
mov
outsb
test
mov
or
aas
in
push
sbb
aas
test
mov
or
xchg
jno
hlt
loop
push
fwait
ret
jae
test
and
int
push
shrl
mov
mov
xor
fld
scas
mov
sbb
shll
jp
movsb
repnz
mov
outsl
les
sbbl
imul
ret
sti
adc
lret
sub
int
add
or
into
mov
das
jb
test
jg
je
sbb
or
xor
pop
jge
pop
mov
xchg
or
cld
dec
pop
pop
mov
and
inc
bound
jmp
sub
cs
xchg
dec
fcomps
iret
push
inc
push
mov
fcoml
cmovbe
push
mov
cmpsb
les
pop
cltd
std
jmp
in
shlb
ljmp
and
hlt
mov
sub
pop
jmp
inc
sbb
sbb
addr16
jnp
cmp
pop
inc
dec
cltd
dec
mov
rcll
pop
out
fdiv
out
shr
or
sbb
inc
mov
lods
ffree
out
xor
dec
and
push
scas
cmpsb
sbb
rorl
dec
mov
pop
adcb
shlb
loopne
fwait
jp
or
std
sbb
mov
push
mov
add
imul
push
sub
add
loopne
adc
lock
dec
into
pop
inc
ja
insb
add
sbb
ret
shr
test
addr16
test
mov
inc
mov
dec
rcrl
jnp
push
xchg
push
push
cltd
ja
movsb
sahf
or
xchg
pusha
jp
pop
xchg
pop
ds
fisubrs
dec
jecxz
jno
imul
les
cmp
iret
test
dec
ror
in
dec
mov
daa
mov
add
das
mov
faddl
addl
lods
inc
into
fdivl
and
lods
mov
fwait
sti
push
orb
rcl
xor
scas
rclb
les
aaa
dec
rcl
repnz
aaa
fidivs
mov
cld
push
aaa
aaa
mov
xor
push
scas
inc
push
or
aas
pop
int3
pop
push
popa
adcb
dec
ret
mov
cmp
lcall
clc
or
jo
adc
fisubl
gs
bound
out
cltd
mov
ljmp
scas
jb
push
fs
lret
ljmp
sub
jge
cmc
mov
mov
fsubs
into
xchg
sub
data16
mov
pop
sub
scas
pop
testb
sbb
xchg
imul
popa
fdivr
shl
movsb
adc
dec
add
jp
in
lahf
int
rorb
add
mov
jge
mov
pop
loop
or
mov
mov
ror
and
out
inc
jg
mov
arpl
push
jno
pop
xor
mov
cmpsl
adc
stc
test
push
jb
in
sub
push
pushf
dec
lods
mov
lahf
negl
adc
or
cli
cmp
jne
ds
adc
push
sarl
cwtl
jns
test
daa
or
push
xlat
imul
orl
inc
arpl
sarl
mov
sub
movsb
and
in
iret
jmp
js
sub
pop
xor
ret
data16
insl
and
pop
out
add
loope
xor
xlat
popa
and
lds
arpl
cmpl
push
inc
fnstcw
rcrl
dec
mov
ds
int3
mov
sbb
sahf
call
out
out
popa
xor
sahf
dec
xchg
div
ljmp
fcomps
out
mov
sbb
sbb
arpl
jle
rcrl
xor
repz
xlat
sub
xor
pop
negb
add
cmpsb
imul
call
test
sbb
rcrl
mov
xor
sarb
xor
push
cs
loopne
aaa
adc
push
lock
inc
fstpt
lahf
lods
in
xor
cmpsl
xchg
add
add
inc
test
lcall
mov
test
push
addr16
sbb
flds
sbb
dec
fpatan
bound
movsl
mov
push
xchg
cmpb
or
xchg
jns
push
jmp
fisubrs
jns
cmc
jecxz
or
push
add
mov
lock
in
add
fisubs
and
xor
int3
sbbb
sbbb
xchg
loop
ret
stc
fwait
sbb
ss
ja
add
pop
data16
sub
stos
inc
les
jnp
xorl
aad
addb
jae
icebp
sahf
rcll
outsl
jge
inc
cmc
or
adc
push
and
arpl
jge
jo
sub
add
jge
xor
lcall
cwtl
out
and
std
addr16
adc
mov
lods
xor
fisubrs
add
jge
lea
mov
movsb
inc
sub
ret
jns
popf
add
jl
test
rcll
and
mov
scas
and
xor
xor
stos
add
xor
push
dec
icebp
loop
mov
nop
test
cmp
sub
stos
mov
mov
loope
xor
xchg
sbb
dec
xor
iret
loope
je
daa
and
test
ret
test
push
iret
cmpl
aad
push
mov
rcll
mov
out
mov
xor
sub
push
out
nop
imul
loop
pop
pop
xchg
and
sbb
pop
mov
jge
inc
imul
push
pop
loop
mov
mov
pop
icebp
xor
cmpsb
xor
dec
add
fwait
popa
ja
out
pop
ret
jae
cmp
pusha
rclb
jmp
or
mov
add
lahf
push
lock
sti
mov
jge
xor
dec
mov
stos
jmp
mov
sti
jns
repz
shlb
fldl
add
xor
mov
faddl
or
popa
jecxz
xchg
push
gs
and
cmp
jl
insb
dec
lahf
xor
adc
data16
cld
mov
mov
and
and
into
xchg
push
mov
pushf
xor
lahf
loop
je
iret
xchg
dec
adc
and
pop
rep
outsl
cmp
mov
inc
push
aas
pop
bound
bound
lret
loope
jnp
test
mov
shrb
push
or
inc
mov
dec
add
inc
lds
jbe
in
push
sahf
lods
xor
xor
push
cmc
mov
mov
mov
ret
sahf
mov
push
adc
fnstsw
mov
adc
dec
mov
icebp
in
rol
fdivr
mov
dec
push
out
pop
jmp
out
mov
xchg
pushf
bound
gs
cld
stc
nop
das
xor
pop
jmp
out
mov
stc
pop
pop
or
iret
jne
aas
adc
out
inc
or
push
pop
mov
mov
cmp
shrb
sbb
test
or
sub
inc
or
jne
pop
cli
inc
xchg
insl
xor
push
lea
daa
out
inc
xchg
jne
aad
add
sete
test
adc
clc
dec
out
or
popa
jns
xchg
popf
jmp
or
xor
popa
sub
jg
test
push
push
mov
pop
mov
arpl
pop
jmp
push
sbb
sbbl
cmp
mov
cmp
fbld
jp
rclb
inc
cwtl
scas
out
int
inc
and
idivb
loop
sbb
in
push
test
adc
test
cs
jb
lcall
movsl
mov
inc
lcall
or
mov
ss
enter
inc
call
or
fmuls
iret
jecxz
rclb
mov
jmp
lret
orb
sbb
dec
aas
sbb
or
lods
ret
sbb
pop
iret
in
hlt
or
icebp
mov
or
notl
enter
pop
cmpsb
inc
dec
mov
inc
insb
xlat
mov
jno
in
add
mov
pop
push
in
leave
ret
aam
or
lea
ret
inc
aam
xor
lods
and
and
decl
rorb
imul
test
sti
mov
jbe
movsl
add
mov
cmpb
inc
ret
mov
dec
pop
cmp
push
enter
movsl
mov
enter
mov
shll
sbb
fsubl
iret
cmp
aas
out
pop
or
xor
cmpsl
int
mov
pop
push
test
mov
cwtl
add
xor
mov
xchg
cwtl
xor
cmpsb
add
out
lds
push
mov
fsub
cmpsl
ds
repz
pop
dec
cli
cmp
aaa
aam
sbb
xor
testb
call
xor
daa
pop
xchg
and
sahf
lcall
clc
xlat
sbb
dec
or
cmp
mov
xor
push
test
lcall
jb
sub
cmp
frstor
cmp
negl
test
and
pushf
xchg
lcall
xor
inc
mov
inc
fldenv
mov
les
and
fcoml
rcll
outsb
sub
or
sub
lds
inc
sub
stc
test
neg
dec
mov
mov
daa
and
dec
cmp
push
or
fwait
mov
je
cltd
divb
mov
int
xchg
lret
and
rep
js
movsb
xchg
push
into
cmp
fdivrs
dec
cmp
popf
test
and
in
cmpsl
mov
push
mov
rcrl
jne
hlt
and
or
dec
cli
in
push
fcoml
js
cmp
ljmp
rclb
bound
push
or
cld
mov
movsb
sti
pop
lods
pop
cmc
int
jnp
and
and
cmp
in
fsubp
in
xchg
repnz
and
sbb
adc
adc
xchg
das
jge
sub
jb
icebp
inc
fistpl
jns
stos
push
cld
lea
cmp
sub
daa
fidivl
dec
xor
sbb
jae
or
fsubs
pop
push
fistl
xchg
adc
and
sbb
out
sub
shr
pusha
test
push
mov
psubusw
xchg
imul
mov
aaa
mov
or
xchg
subb
shrl
jmp
cmp
lahf
aas
mov
test
dec
ja
sbb
dec
sbb
mov
xlat
scas
and
xchg
or
movsb
lea
cmp
imul
adc
scas
adc
mov
cmp
adc
add
negb
jle
loop
jno
inc
pusha
lods
psadbw
cs
sub
cltd
inc
sbb
cmp
andl
mov
cmp
movb
or
jae
pop
in
xchg
add
call
mov
mov
cld
adc
jno
imul
jge
cmp
push
sbb
es
fwait
lods
jmp
mov
and
lret
test
or
test
and
or
psllw
mov
fisttpl
scas
xor
insb
inc
out
stos
out
arpl
or
mov
cwtl
mov
cmp
xor
dec
dec
dec
cmp
mov
cld
jb
insb
mov
popa
pop
sub
pop
jno
out
dec
cmpsl
call
push
sti
sahf
jne
and
inc
fdivs
xor
push
push
pushf
xor
icebp
xor
pop
mov
push
repz
jp
sub
xchg
jmp
lock
mov
addl
inc
jo
add
jecxz
ds
add
adc
rorb
imulb
data16
adc
movsl
lret
cmp
inc
lods
xchg
inc
aas
add
ds
dec
pop
dec
jne
mov
xlat
ss
or
sub
adc
mov
jmp
sbb
jmp
ficoml
fsubrl
and
pop
mov
gs
push
test
scas
add
adcb
bound
jbe
mov
jg
inc
mov
and
xchg
lahf
and
in
in
cmc
mov
and
insb
popa
inc
nop
push
ljmp
pop
sbb
js
outsl
bound
popa
mov
or
xchg
jno
xchg
sbb
xor
jnp
xlat
dec
cmpsb
mov
add
mov
fisttpl
aam
jmp
jbe
loope
dec
enter
int
in
mov
icebp
lret
mov
jae
pop
mov
mov
stos
in
lcall
push
rorl
dec
out
and
inc
cmp
push
dec
hlt
adc
jg
mov
mov
jmp
adc
mov
lds
mov
mov
jmp
mov
push
movsl
cld
or
jp
sbb
add
movsb
fistl
sbbb
fninit
dec
imul
push
test
fidivrs
lcall
xor
or
clc
push
push
push
fldenv
out
jbe
adc
sub
jne
lock
andl
sub
cmp
or
mov
cmpsl
imul
add
mov
mov
push
push
lods
loop
lret
cld
dec
push
clc
push
imul
repnz
pop
js
jns
ja
mov
fiaddl
xchg
add
pop
mov
xor
xchg
cmpsl
xchg
stos
sub
hlt
fdivrl
mov
int
aas
std
mov
sbb
cmpxchg
fidivrl
cli
add
push
dec
pop
enter
add
movb
push
add
xchg
cmp
or
xchg
xlat
outsb
arpl
push
pop
pop
cmp
test
dec
shld
mov
divb
xchg
cld
sub
cli
icebp
mov
xchg
cs
or
pop
xor
push
fdivrl
or
xor
stos
in
adc
cmp
jbe
popa
sub
jno
xchg
sub
xchg
not
incb
inc
js
pushf
bound
xor
stc
setb
xchg
xchg
add
addr16
cwtl
mov
inc
cmpsb
adc
mov
cmp
adc
xor
cmp
lds
ja
or
out
add
and
or
int3
push
cwtl
cmp
mov
mov
add
fucomi
add
pusha
jl
sub
or
cmp
mov
ret
add
stc
scas
inc
push
lock
lods
inc
sti
ljmp
enter
mov
in
mov
mov
jge
iret
jae
add
add
cmp
sub
or
push
aas
or
loop
popf
mov
mov
adc
stos
gs
cmpsb
subb
xor
mov
mov
mov
mov
and
add
and
es
in
enter
ljmp
push
in
scas
in
mov
rcrb
dec
mov
push
inc
dec
movsl
and
dec
stc
xor
bound
push
dec
jle
jg
loope,pt
mov
es
jnp
or
dec
xchg
sub
dec
loop
insb
sub
idivb
imul
loopne
mov
daa
outsl
repz
fadd
loop
mov
out
sbbl
mov
add
mov
popf
cmpsl
out
xchg
add
pop
inc
fwait
xchg
out
push
popa
in
add
js
loope
dec
out
cmp
imul
xor
lods
push
push
jmp
fsts
or
mov
pop
call
pop
jno
lock
leave
add
inc
push
jge
mov
jnp
or
mov
inc
fbld
adc
adc
inc
in
push
push
call
pop
out
std
add
xchg
dec
clc
inc
push
cmp
test
push
dec
push
cltd
mov
jle
dec
popa
jl
aam
ret
add
mov
jo
mov
out
lods
adcb
sahf
fisubl
rorb
push
xlat
movsl
xchg
call
lods
jecxz
sub
jle
cmp
xlat
add
call
data16
mov
or
mov
jmp
es
mov
and
inc
ljmp
fmuls
js
dec
mov
call
mov
loope
fcoml
adc
inc
daa
addr16
sub
pop
jge
push
mov
cmp
sub
orb
mov
mov
mov
cwtl
cmp
xchg
scas
arpl
sub
lods
adc
inc
dec
in
pusha
mov
sub
fstpt
int3
sub
mov
mov
pop
mov
movsl
xchg
and
jno
outsl
stos
inc
xlat
pop
icebp
int3
mov
mov
cwtl
xchg
push
mov
dec
push
repnz
push
inc
push
ljmp
mov
xchg
out
inc
push
sub
scas
ss
mov
dec
dec
lock
jecxz
sbbb
in
mov
outsb
insl
inc
bound
sbb
push
lcall
das
adc
mov
inc
xchg
xchg
mov
repnz
sub
ja
daa
outsl
fistpll
lahf
jb
sub
cwtl
outsb
sar
adc
push
adc
xchg
mov
shrl
jl
push
jl
pop
dec
cmp
je
icebp
push
mov
rol
xchg
gs
in
loop
js
xchg
mov
pop
ljmp
cmp
fnsave
ja
out
cmpsb
xlat
test
ds
out
iret
nop
cmp
es
mov
and
jo
push
orb
iret
lods
mov
test
add
dec
ss
cmp
jg,pt
dec
fyl2xp1
stos
inc
push
cs
adc
pop
into
stos
jae
popf
mov
movsl
arpl
lret
dec
xlat
imul
aas
xchg
cmp
push
push
sbb
ja
and
mov
ficoms
push
inc
mov
dec
pop
mov
hlt
push
mov
fstpl
ret
and
and
mov
xchg
adc
sub
insl
pop
mov
arpl
jle
adc
adc
xchg
jns
sbb
sub
fisubrl
pop
add
jg
push
int
ljmp
cmpsb
bound
add
dec
fidivrs
aam
xor
xchg
jb
pop
xchg
adc
in
movsl
das
leave
inc
fnstcw
clc
push
call
cmpsb
pop
gs
jno
inc
xlat
nop
adcl
je
sub
int3
lcall
cltd
dec
cmp
in
roll
daa
outsl
imul
push
mov
jns
daa
fmuls
sbb
jl
sbb
lds
or
pusha
push
lods
jo
mov
cld
jnp
jle
wrmsr
mov
or
cs
dec
ljmp
sbb
inc
mov
aad
inc
jno
je
push
mov
jb
std
pushw
mov
or
mov
test
cmp
xchg
insl
push
je
cmc
out
ja
mov
push
insl
mov
pop
insl
cmpb
mov
xor
jae
repz
arpl
lahf
dec
mov
fisttps
cld
fldt
aas
mov
add
sbb
dec
fisubl
aaa
fisubrl
in
jae
fwait
test
xchg
jl
bound
sahf
add
iret
lahf
mov
inc
out
test
or
lcall
daa
mov
js
outsb
cmc
fldcw
decl
outsl
xchg
imul
sarl
jle
insl
adc
push
cmp
outsl
loopne
popa
or
fistps
pop
lds
data16
sahf
dec
dec
call
in
rcl
mov
lea
or
or
sti
jl
icebp
push
pop
into
lods
push
sbb
jl
lds
testl
fdivl
jmp
stos
lahf
cmp
adcb
cmp
sbb
push
lock
out
addr16
push
mov
in
popf
seta
subl
sub
idivb
js
movsb
lds
add
adc
jbe
push
pop
cs
es
std
dec
leave
jle
jg
mov
adc
nop
das
add
je
lods
mov
ficomps
jl
cmpsb
add
repnz
mov
xor
and
jae
js
mov
adc
in
dec
mov
andl
sti
addr16
ss
dec
mov
jne
inc
aam
insl
adc
sub
ss
es
rcrl
jp
adc
cltd
and
dec
jmp
xchg
xor
add
adc
test
cwtl
push
das
jbe
aam
leave
push
sbb
jbe
pop
mov
push
push
aas
loope
cmp
inc
ror
jne
jnp
hlt
aad
mov
repnz
sub
daa
lods
and
popa
jmp
cli
in
mov
rcrb
xchg
jge
ds
movsl
or
popf
and
jmp
mov
leave
std
mov
mov
and
lods
push
cwtl
sub
add
negb
mov
das
mov
mov
into
outsb
inc
or
pop
sub
jno
fisubs
fdivl
add
mov
push
dec
fs
or
mov
test
pop
bt
ljmp
dec
cmpl
and
mov
sbb
lret
cli
jne
ja
mov
jno
insl
roll
outsb
ret
fnstcw
pop
arpl
test
lds
push
and
movsb
mov
mov
sbb
imul
and
pop
arpl
insl
shlb
rcrb
xchg
mov
xchg
xchg
mov
stos
push
jbe
pop
int3
icebp
into
enter
mov
mov
fstps
or
clc
cmpsl
mov
out
cmpsl
pop
insb
imul
mov
pop
xlat
icebp
clc
iret
cmpsb
dec
jg
mov
not
jo
aas
pushf
xor
js
dec
xchg
sbb
xor
mov
or
sub
mov
pop
mov
push
jecxz
push
stos
xchg
pop
das
jns
pop
mov
sub
pushf
or
ds
cmp
inc
sbb
push
jne
inc
and
add
sbb
adc
lret
dec
mov
adc
outsl
sub
les
daa
ret
cmpsl
xchg
pop
pop
mov
aam
sub
add
mov
pop
or
loop
testb
cwtl
and
inc
add
out
jp
or
dec
iret
pop
inc
inc
in
bound
and
mov
sub
add
inc
jbe
sub
cwtl
cmpsl
scas
sub
bound
adcl
push
jnp
push
insl
and
push
add
jb
add
popa
clc
in
dec
add
out
dec
pushf
daa
cmp
inc
dec
imul
xchg
add
xchg
cmpsb
jge
aas
movsb
dec
repnz
add
fiadds
push
cmpsl
aas
aas
movsl
and
jmp
inc
test
int
xchg
or
push
fwait
aad
int
add
jp
cmp
cmp
dec
xlat
jo
dec
out
pop
jecxz
mov
add
inc
imul
dec
jbe
adc
and
or
aas
mov
push
adc
addr16
inc
or
lret
lret
out
sbb
lock
jp
popf
ret
imul
mov
loope
pop
outsb
fdivs
test
dec
rcr
jge
sbb
cwtl
mov
mov
jl
lea
or
scas
lcall
xchg
mov
movb
xchg
mov
test
adc
adc
int
aas
je
dec
mov
add
or
xor
mov
mov
xchg
dec
rolb
mov
adc
mov
or
cmp
push
sbb
and
xor
mov
in
rcrl
mov
sub
push
dec
arpl
loopne
push
xor
repz
pop
push
add
cmpl
push
pop
stos
jg
call
adc
sbb
push
sbb
push
add
leave
xchg
lret
xchg
xchg
adc
push
outsl
push
jmp
insl
cli
jmp
sub
adc
or
or
daa
lret
jl
xchg
jmp
popf
adc
or
push
dec
mov
icebp
push
mov
xchg
aaa
sub
popf
jle
inc
jecxz
fists
lret
lds
lret
idivl
cmp
inc
fnsave
push
mov
dec
std
sbb
mov
pop
addl
cmp
call
fs
sbb
lock
dec
movsb
mov
jecxz
sbbb
popf
lahf
xchg
incb
push
push
dec
sub
pushf
or
movsl
sub
in
je
pusha
push
push
xchg
lds
icebp
mov
adc
imul
sahf
jmp
pop
jne
cmpsb
mov
insb
sub
jb
ds
or
leave
sub
arpl
cmp
arpl
imul
repnz
mov
jmp
xor
mov
mov
leave
out
jns
sbb
or
add
sbb
add
jge
inc
scas
pop
inc
or
scas
jp
inc
in
ret
nop
xlat
dec
in
add
aam
leave
in
mov
and
into
rcrl
xor
and
inc
xlat
add
es
dec
or
addr16
inc
lcall
pop
mov
push
pop
arpl
adc
sbb
adc
es
push
jl
fs
mov
nop
jg
sbb
andb
and
mov
or
scas
pop
lock
jno
daa
pop
push
inc
push
mov
xor
sub
jne
xchg
sbb
stos
sbb
fstp
xchg
ja
jns
test
adc
outsb
aad
test
jg
pop
pop
lea
cmp
test
lea
push
jmp
outsl
aam
fisubrs
jno
xchg
ja
inc
orb
and
xchg
add
add
std
xchg
loopne
adc
rcr
sbb
cmp
insl
jecxz
adc
push
cwtl
xor
mov
adc
iret
in
les
and
das
sbb
xor
imul
xchg
imul
daa
imul
jecxz
mov
xchg
xchg
int3
mov
loop
test
cmp
pushf
cmp
jecxz
xchg
adc
cmc
push
scas
mov
cmp
add
jns
pop
lahf
jg
test
lret
lret
cmp
enter
adc
pop
dec
icebp
lret
inc
sbb
push
jne
aad
les
rcrl
sub
dec
pushf
jns
fsubrs
fdivp
in
mov
jge
data16
inc
and
gs
push
jg
jne
notl
jae
mov
movsb
lret
lea
adc
xchg
mov
push
jo
mov
xchg
pop
aas
mov
pop
mov
inc
lock
shlb
pop
inc
pop
shlb
cmp
dec
loopne
mov
decl
xchg
mov
or
mov
xchg
xor
js,pn
mov
dec
ja
clc
mov
or
adc
cmp
hlt
push
pop
pop
imul
cmp
ds
add
mov
push
inc
loope
jmp
fnstsw
adc
mov
lahf
jo
lahf
mov
popa
js
pop
movb
sub
adc
dec
sub
jb
jae
stc
nop
cwtl
xchg
mov
sbb
in
add
leave
ja
push
call
ja
and
imul
xchg
fsubr
add
inc
push
jmp
push
xchg
jo
int
sbb
repnz
xchg
adc
flds
jmp
popa
leave
loope
scas
adc
imul
mov
jb
inc
or
adc
sbb
mov
xchg
fldt
imul
dec
lock
imul
in
fistpll
pop
arpl
ret
lods
dec
jecxz
negb
jge
and
enter
ret
testb
sub
inc
stos
and
jg
leave
sbbb
clc
jb
push
loope
movsl
notb
sub
mov
pop
jg
pop
sbb
stc
xor
mov
test
jne
or
dec
pop
jle
js
aad
loope
icebp
lret
out
mov
xor
push
insl
jge
jl
andl
cmp
cli
add
sub
mov
and
xchg
outsb
test
outsl
and
scas
inc
test
int
dec
call
adc
lods
cwtl
mov
es
and
or
enter
pop
fidivs
adc
cltd
xor
test
mov
addr16
lret
adc
dec
mov
stos
push
adc
or
lret
sbb
inc
shl
adc
dec
push
inc
fadds
es
adc
xorb
rorb
repz
xor
xchg
fadd
jecxz
clc
mov
sarl
decb
pop
dec
sbb
push
inc
test
cltd
cmpsb
das
cmp
notb
adc
push
mov
xchg
ja
dec
jmp
mov
dec
mov
push
and
cwtl
ret
divb
fisubl
and
shlb
xor
jne
xchg
in
pop
mov
inc
xlat
testb
fxch
inc
xchg
imul
stos
and
mov
mov
and
fimuls
xchg
mov
add
sub
cmpsl
mov
test
sbb
jne
rolb
pusha
mov
adc
jl
sub
dec
dec
ret
mov
xchg
pop
imul
cmpsb
mov
pop
insl
cli
xlat
cs
push
mov
push
data16
fsubp
xchg
repnz
jle
and
sbb
fidivrs
dec
movsb
lods
loop
aas
inc
dec
xor
popa
pop
xchg
sbb
out
movsl
xor
push
cmp
adc
xor
lcall
out
fdivs
dec
nop
jle
leave
scas
and
xchg
dec
cmc
jg
mov
ds
out
out
in
loop
mov
stos
movsl
mov
leave
and
fstps
nop
and
popf
ds
inc
dec
sbb
jg
jbe
fsubp
cmp
out
push
sub
fucomp
test
es
xor
fisttps
jb
dec
jbe
mov
sub
mov
xor
jle
sbb
and
out
notl
xchg
pop
dec
or
sahf
pop
aas
aad
clc
lcall
ficoms
xor
in
pop
inc
cmp
mov
incb
sub
and
out
paddusw
mov
mov
loop
stc
test
xor
scas
lea
fstps
push
inc
into
sub
mov
leave
xor
add
dec
sub
leave
aaa
ljmp
call
daa
mov
push
jle
mov
popa
and
and
xchg
and
shl
jnp
pusha
xchg
shlb
add
cmpsl
int3
xor
pop
push
mov
jl
pop
mov
imul
pop
rcrb
jp
fwait
pop
mov
xor
icebp
out
sahf
push
out
imul
dec
call
or
outsb
cmp
pop
aam
shl
mov
lock
add
insb
das
xor
sbb
mov
and
stos
jbe
and
pop
fsubl
sub
cmc
dec
sarl
mov
sub
test
xlat
cmp
add
sahf
mov
xchg
push
cld
xchg
jbe
push
and
addb
cmp
movq
xor
ret
rcrl
insb
stos
jae
or
les
negl
inc
or
outsl
xlat
and
sub
or
pusha
mov
icebp
mov
rol
icebp
fistpl
and
ret
jge
cmc
fwait
dec
mov
mov
loop
pop
xchg
imul
data16
push
loop
sbb
int
jns
int
rcll
jmp
inc
sbb
icebp
dec
xlat
push
xchg
adc
xchg
mov
xchg
sbb
dec
ret
dec
mov
imul
incb
push
cmp
lods
cwtl
pop
sbb
jle
lret
insb
add
int
fdivl
mov
loop
jg
mov
sahf
sbb
ds
mov
js
pop
cmp
xor
jne
fildll
push
sahf
xor
stos
lea
fbstp
sub
cltd
inc
or
jmp
dec
loop
out
inc
push
popf
imul
xchg
fiaddl
lcall
clc
or
cmc
add
test
flds
shl
fmul
push
push
fildll
xchg
aam
mov
xor
cmp
ja
ss
dec
rorb
mov
xchg
nop
dec
or
add
jge
mov
inc
pop
lret
pusha
loope
enter
aaa
loope
call
lcall
in
push
imul
mov
leave
add
xor
fwait
mov
adc
loopne
fdivr
sbb
dec
push
dec
cld
mov
xor
imul
mov
sahf
inc
jnp
clc
lods
push
push
out
icebp
jbe
adc
jbe
scas
imul
lods
lea
call
xchg
dec
ffree
xchg
mov
jb
mov
sbb
repnz
stc
push
sar
adc
loop
orl
add
xchg
jecxz
add
inc
std
xchg
jae
jmp
call
lret
das
pop
pop
bound
ret
add
inc
arpl
inc
cmpsl
in
dec
jmp
xor
lahf
mov
or
sbb
xor
call
dec
scas
stc
ret
call
cmp
mov
sbb
push
popf
mov
and
lret
iret
xchg
sub
scas
mov
loopne
jecxz
fidivs
pop
add
int
and
ja
stos
in
push
mov
jp
jne
mov
int3
jae
decb
stos
gs
push
sbb
nop
daa
nop
and
adcl
cmpsb
cmp
les
stc
mov
sub
iret
loope
jns
adc
pop
sbb
and
mov
pushf
sub
frstor
ret
fs
mov
mov
bound
add
repz
aam
fnstenv
pop
xor
fwait
xchg
sub
aas
aas
aaa
mov
push
or
scas
pushf
sub
and
jb
test
sahf
fstps
fidivs
add
sbb
shlb
dec
dec
dec
jecxz
int3
arpl
jne
repz
icebp
ljmp
int
in
and
nop
out
sahf
hlt
add
sbb
jg
xlat
cmp
shll
les
mov
ja
mov
sahf
cmp
xchg
adc
mov
iret
adc
xchg
add
jb
jo
gs
enter
fbstp
movsl
pop
movlps
decb
repz
mov
mov
aam
add
sbbl
mov
test
mov
loope
push
sbb
jle
ja
subb
lcall
lahf
stos
jo
jl
inc
xor
adc
mov
xchg
je
loope
adc
push
gs
and
cmp
jno
xchg
pop
sub
push
repz
mov
lock
mov
or
cmp
outsl
stc
mov
push
ds
fisubl
xor
clc
inc
lcall
and
mov
das
aaa
mov
data16
pushf
mov
into
mov
push
jne
fwait
pop
call
add
inc
popa
loop
ja
mov
dec
xchg
jmp
xchg
adc
mov
inc
jno
adc
pop
movl
dec
out
inc
mov
ss
pop
mov
adc
xlat
fbstp
movsb
pop
insb
sub
test
mov
xor
lods
or
repnz
or
lcall
lahf
decb
dec
inc
test
mov
fistps
push
xor
in
jnp
mov
inc
inc
daa
outsl
ljmp
sub
add
outsl
out
shlb
cmpl
loopne
test
xlat
test
mov
sbb
push
mov
das
jge
inc
mov
sub
rcl
push
ret
hlt
aas
sub
inc
or
pop
popl
lcall
pusha
movsb
nop
daa
andl
cmc
into
mov
jge
add
cmp
jb
jnp
pop
pushf
adc
jo
mov
xor
sbb
inc
in
imul
ja
out
push
mov
xor
fisubl
mov
jp
sbb
add
mov
ret
lret
xlat
arpl
mov
fcomps
shl
inc
sbb
or
jecxz
pop
mov
adc
add
outsl
into
mov
adc
add
sub
in
jne
adc
mov
filds
or
movsb
pusha
not
or
loop
mov
pop
sbb
push
xor
es
call
sarb
sahf
dec
insl
sub
aaa
or
jecxz
mov
cmc
sbb
iret
sbbb
lcall
mov
and
lock
ret
mov
inc
aad
repz
jo
dec
xor
fs
mov
inc
test
mov
out
add
or
adc
loopne
mov
xchg
fisttpl
inc
fnstcw
cmp
push
cmc
loope
aam
push
jbe
adc
adc
data16
xor
mov
in
mov
fcmove
loope
mov
leave
push
push
dec
jle
mov
ds
int
cld
std
cmp
adc
sbb
sbb
addr16
pop
add
aaa
fbld
pushf
mov
sbb
mov
inc
push
femms
jns
push
ficoml
inc
jns
xor
mov
test
mov
cmp
arpl
pop
push
test
movsb
std
in
sbb
fdivs
jno
shrl
insl
out
sub
add
mov
sbb
outsl
sbb
dec
lahf
out
idivb
mov
jg
or
ficoms
jmp
outsb
mov
jb
cmp
jns
cmp
cmpl
cltd
push
cltd
lahf
popa
mov
jp
mov
cld
xchg
or
push
add
mov
adcl
xchg
sub
inc
imull
sub
sub
add
xor
xor
lods
push
popf
dec
data16
jl
fisttpl
loopne
imul
pop
mov
mov
inc
jg
adc
sbb
mov
outsb
sub
jnp
ret
pop
outsl
jae
inc
mov
fmul
xlat
pop
sti
jbe
cmc
push
push
daa
ja
and
sub
sub
ja
scas
sub
and
data16
mov
aad
test
cmp
pusha
sub
sbb
push
xor
pop
lret
pop
in
xor
into
fs
jp
sub
loop
repnz
aas
sub
mov
scas
xchg
pop
add
jno
into
ja
or
pop
dec
bound
fstp
insb
push
dec
sub
mov
mov
mov
jmp
sub
adc
xor
push
add
push
sub
push
aas
negb
sti
push
fisttps
cltd
std
nop
std
pop
sahf
shll
in
daa
or
adc
ds
push
lods
inc
std
out
push
xor
loope
imul
cmp
imul
and
mov
mov
stc
mov
mov
out
sub
jmp
cmc
inc
mov
mov
cmp
iret
push
sbb
xchg
subl
aam
xchg
mov
add
popa
adc
out
push
ss
push
imul
lock
push
ds
shrb
loope
cmc
mov
jp
rorb
roll
test
arpl
into
fdivl
mov
pop
xor
mov
sbb
mov
aam
dec
push
iret
push
mov
shl
push
loop
push
cmp
mov
in
push
out
ss
dec
fnstcw
daa
into
fsubrp
pop
dec
pop
inc
int3
movsb
mov
lret
mov
shrl
repz
xchg
cmpb
aad
jl
addr16
inc
mov
ds
aad
and
adc
fs
cmp
loope
add
stos
ficompl
in
in
pop
pop
das
addb
pop
xchg
arpl
shll
xor
adc
or
xlat
and
fstpl
dec
lret
cmp
into
cmpsb
xor
rorl
bnd
in
iret
add
lret
cmc
lret
cmp
inc
inc
push
popf
dec
rorb
and
dec
or
lods
mov
inc
enter
shr
popf
inc
dec
nop
je
push
jecxz
sti
inc
push
pop
push
xchg
cmpsb
cld
dec
das
sahf
pop
cmpsb
aaa
sub
imul
pop
mov
or
jnp
stos
cmpsl
pminsw
xor
and
notb
dec
insb
add
mov
lret
push
mov
cltd
xchg
cmp
loope
cmp
sbb
jmp
push
pusha
sub
ja
and
in
pop
cmc
jno
cmp
out
xchg
jl
sbb
imul
mov
sbb
xchg
ret
stc
cmpsb
pop
inc
rolb
scas
pop
and
add
adcl
lahf
and
or
repz
lds
insb
dec
cwtl
das
sbb
ds
mov
dec
outsb
sub
ljmp
sete
shufps
jecxz
outsb
xchg
jle
adc
mov
dec
cmc
mov
push
push
mov
loope
add
pop
je
mov
mov
pop
xor
ret
xor
push
cwtl
mov
mov
fldcw
or
mov
pop
out
jnp
stc
setno
iret
jae
push
jmp
push
pop
inc
push
jp
inc
mov
adc
arpl
mov
stos
xchg
and
jp
fsubrp
movsb
mov
scas
movsb
icebp
sahf
daa
jmp
mov
jecxz
rcrl
mov
out
rorl
add
inc
repz
dec
shlb
test
pop
jb
sub
popf
lods
mov
int
ja
dec
pop
lock
fstps
psllq
mov
xor
cwtl
pop
imul
int
pop
ja
decl
rcl
fmuls
fs
stos
lcall
or
lods
push
cmpsl
aaa
mov
pop
mov
imul
cmp
cmp
and
shlb
lcall
jbe
sub
mulb
inc
lea
mov
push
jb
call
orb
shlb
cli
iret
test
insb
clc
jmp
out
cltd
xor
sahf
pop
mov
jg
xchg
mov
imul
jmp
dec
push
jbe
push
mov
mov
mov
mov
adc
daa
jle
or
mov
mov
mov
outsb
sahf
mov
cmc
gs
dec
int3
rcrb
adc
aaa
pusha
lcall
rclb
sub
dec
pop
inc
mov
movl
push
mov
es
push
test
mov
ss
push
lcall
stc
or
sbb
ds
jle
pop
cmp
lods
and
stos
cli
mov
insb
dec
outsl
push
mov
into
enter
xor
pop
sub
fs
jno
stos
test
cmp
lock
mulb
inc
cmp
sbb
inc
sub
scas
dec
mov
pop
adc
out
mov
mov
adc
and
pop
cmovs
ror
cwtl
mov
push
in
cmp
push
xorl
pushf
add
add
daa
cli
mov
pushf
test
cld
xchg
stos
rclb
mov
inc
mov
mov
add
sub
cmpsb
push
js
stc
inc
pop
mov
and
inc
or
aas
int3
loopne
or
jecxz
xor
dec
lret
adc
cmp
dec
clc
and
jo
push
cmp
shll
mov
add
or
icebp
ret
in
sar
inc
push
sbb
jmp
imul
or
inc
cltd
stos
icebp
jle
stos
movsb
je
and
je
js,pn
push
and
sbb
mov
push
cmp
mov
mov
jmp
xor
dec
pop
xchg
mov
add
xor
ljmp
sti
fwait
bound
popa
jnp
adc
stc
cli
push
jae
mov
testl
es
xor
lret
lea
sub
sbb
cmp
jb
sub
and
mov
out
push
cmp
test
popa
jp,pn
push
aas
ficomps
popf
jae
xchg
xor
inc
cltd
lds
adc
adc
and
push
fnstsw
loop
jecxz
enter
lds
push
ss
jo
mov
loopne
push
pop
movb
sbbl
xchg
jo
add
dec
scas
out
out
mov
in
mov
adc
dec
outsb
sbb
pop
cmp
mov
mov
mov
jmp
mov
es
repz
rcl
sub
mov
push
popf
sub
cmpsb
sbb
pop
or
pop
mov
dec
push
pop
aad
add
cmpsl
dec
cmp
repz
or
int
push
shlb
jno
fistpll
and
jnp
add
add
int3
push
movsb
push
hlt
lcall
add
aaa
push
sbb
pop
mov
cmpsb
or
push
inc
pop
push
clc
out
lock
xchg
xchg
pop
ja
mov
pop
pop
adc
repnz
mov
sub
cmp
fcmove
leave
into
mov
or
test
ljmp
add
and
cmp
push
ficompl
sub
mov
add
cmp
fstps
repnz
dec
mov
jl
inc
sti
inc
lock
sti
push
xor
adc
neg
mov
insb
add
inc
jecxz
popa
mov
fs
addl
sbb
cmp
test
dec
mov
mov
pop
es
pop
push
lds
jp
sti
fs
jb
inc
nop
mov
pop
repz
jg
mov
mov
shlb
and
mov
mov
imul
add
or
jne
movsl
and
fbstp
cmpsb
dec
js
jne
aaa
xchg
dec
pop
loope
int3
lret
es
rorl
inc
lods
and
shll
iret
insb
scas
inc
pushf
xchg
pop
int3
in
cs
mov
leave
pusha
push
addb
out
cmp
jno
fnstcw
mov
outsb
insl
adc
jmp
add
push
mov
int3
cld
mov
negb
jecxz
test
push
mov
aad
nop
jl
dec
cwtl
pop
test
jnp
stc
pop
faddl
ja
divb
data16
nop
subl
mov
clc
sub
into
mov
push
dec
rcr
mov
jg
outsl
or
hlt
mov
testl
ja
xor
test
shrb
mov
lret
push
sahf
lods
push
insb
cwtl
stos
test
sbb
movsb
nop
ss
add
in
jnp
cld
and
in
inc
popf
cmp
and
mov
outsb
pop
push
sbb
xlat
inc
cmp
mov
cli
inc
sub
adc
addb
leave
jl
pop
lcall
loopne
jae
push
adc
pop
jp
sahf
stos
rcl
jne
and
dec
bound
aad
sub
int3
jne
jle
mov
or
sub
scas
nop
cwtl
into
add
je
mov
les
or
dec
out
jl
shrl
fldl
out
fistpl
adc
push
mov
and
mov
das
add
sbb
sti
pop
or
cltd
sti
xchg
dec
aaa
stc
leave
and
pop
pop
stos
scas
ds
or
test
subb
dec
bnd
pop
jmp
mov
add
movsl
shrb
adc
stos
xorl
into
xchg
mov
push
test
sbb
jle
jbe
std
push
es
leave
and
nop
xchg
push
mov
adc
out
mov
in
lcall
ja
add
stos
pushf
mov
idivb
sbb
lret
in
ds
jl
inc
scas
imul
cmpsl
lahf
scas
sub
or
sub
pop
mov
adc
sbb
inc
int
sarb
pop
xchg
cmp
lods
scas
outsb
mov
mov
push
cld
aam
pop
xor
popf
pop
imul
mov
outsb
aas
int
lcall
mov
rclb
rcrb
pop
iret
fwait
and
xchg
xchg
sub
enter
rcr
sbb
cmpsl
mov
scas
cmp
mov
push
mov
andl
inc
call
loopne
mov
scas
xlat
mov
clc
cmp
insb
sbb
mov
fildl
ss
icebp
jecxz
out
push
cmpsl
add
mov
or
cmp
sub
lahf
adc
repz
xor
out
xchg
testl
sahf
lock
jl
loop
sub
push
dec
das
jbe
add
lds
lret
int3
add
fldcw
outsb
push
xchg
cwtl
addl
ficompl
or
jmp
push
inc
mov
rcrb
pop
add
mov
jne
stc
xlat
out
out
inc
in
out
adc
xor
mov
mov
or
pop
mov
sub
rcrb
cmp
cmc
je
and
mov
sbb
jmp
in
jno
mov
xor
xor
dec
fsubrp
cmp
xor
filds
push
aaa
sbb
stos
enter
mov
pop
add
ljmp
int3
ficoms
sahf
clc
cbtw
adc
in
xor
jbe
pop
and
sub
ss
push
ja
fidivrs
pushf
out
ja
dec
push
stos
stos
int3
sub
add
inc
xor
inc
jnp
rol
add
xchg
in
sbb
jg
mov
dec
jmp
adc
sub
mov
lock
mov
rclb
repnz
inc
fstpt
adc
pop
es
lcall
clc
mov
cli
adcb
mov
jns
and
mov
mov
lahf
jmp
lret
sbb
pusha
orb
push
ss
dec
dec
pop
xchg
leave
xlat
push
les
mov
dec
fdivrl
sbb
out
pushf
iret
ss
sub
outsl
pop
push
mov
pop
jno
dec
cld
xchg
push
adc
std
call
lret
scas
jl
xor
sub
cmpl
cmp
addl
int3
popf
jle
outsb
dec
xchg
mov
insl
cmc
pop
insl
xchg
push
mov
mov
jge
iret
clc
aas
rol
push
cmc
loope
and
rcrl
xorb
jg
ja
lock
jnp
fisttpll
mov
iret
out
repz
or
in
aad
push
cmp
fwait
popa
jg
adc
add
adc
jae
cmp
pop
and
popa
repz
or
xlat
cmp
dec
lods
adc
push
cli
aaa
mov
dec
push
jmp
ljmp
xchg
cli
cld
inc
fmull
jnp
and
test
xchg
adc
fwait
sbb
repnz
jno
and
add
and
xchg
mov
cld
mov
or
cmc
push
or
push
and
pop
mov
adc
das
add
xchg
in
aad
stc
nop
lahf
cmp
push
ss
aaa
jmp
or
arpl
mov
dec
dec
add
jg
adc
data16
lret
adc
add
jo
pop
loop
mov
ja
out
fldl
adc
push
dec
jbe
call
inc
xor
push
xchg
out
and
testb
push
es
pop
bound
jno
test
or
fidivs
or
mov
add
adc
xor
rcll
shl
popa
sub
rcrl
shlb
add
std
lret
movsb
mov
addr16
lcall
in
stos
xchg
lcall
popa
mov
inc
xchg
addr16
adc
inc
ljmp
mov
cli
test
pop
aas
popl
xor
or
cltd
lret
insl
ja
jle
sub
sub
sbb
mov
push
cld
xchg
push
cs
sbb
jbe
aad
outsb
push
ret
lret
xor
mov
adc
fiaddl
xchg
fidivl
or
xor
call
mov
xchg
mov
xor
arpl
adc
lcall
call
cmp
sbb
xor
mov
mov
imul
jg
scas
inc
gs
repnz
sub
daa
lods
xchg
xchg
and
roll
popa
insb
movsb
mov
inc
stos
into
gs
lret
sarb
subl
mov
faddl
xor
fidivl
mov
ljmp
js
pop
rolb
fists
push
inc
xchg
lret
sub
insl
push
imul
dec
pop
jnp
xor
mov
lods
setle
outsl
mov
mov
mov
jno
mov
jmp
int3
mov
arpl
sub
adc
sti
shr
xor
pop
popf
pop
mov
lock
mov
mov
shlb
mov
push
lahf
jecxz
out
loopne
std
stos
aas
aad
push
pop
aaa
jo
fadds
push
stc
dec
push
scas
inc
dec
mov
jge
int
fwait
sahf
pop
adcb
lods
out
jns
jl
add
stos
xor
loopne
in
inc
inc
call
adc
popf
add
bound
call
push
or
pusha
jnp
ja
sbb
sub
nop
mov
xlat
shl
out
repnz
jecxz
popa
sbb
pop
outsl
inc
nop
mov
inc
push
or
inc
fmuls
scas
cmpsl
rorl
push
cmp
mov
sub
sub
and
ds
add
mov
hlt
inc
push
add
and
cltd
mov
xor
xor
inc
push
push
pop
sbb
imul
dec
sbb
push
or
xchg
pop
call
adc
sahf
call
out
adc
xchg
outsb
loope
data16
out
lock
mov
pop
rorb
and
es
int
pop
stos
out
jno
pop
cmp
dec
pop
inc
xchg
jnp
cmp
sub
jnp
ret
sub
inc
fstps
lods
mov
push
fldenv
inc
push
in
and
push
insb
in
cmp
push
inc
movsl
shrl
push
pop
das
push
stos
cmp
negl
mov
pop
jno
add
pop
push
inc
js
arpl
push
push
sub
sbb
cltd
add
xor
insb
dec
cmpsl
lds
in
dec
inc
mov
cwtl
mov
sbb
pop
leave
loop
pop
adc
fucomip
hlt
push
add
lahf
icebp
daa
lcall
adc
pop
insl
xor
mov
mov
pop
ss
nop
jb
shrl
jecxz
gs
sub
jge
in
mov
and
push
cmp
popf
push
lock
dec
add
fwait
leave
push
jnp
lret
xchg
adc
js
lret
inc
arpl
cmp
xor
add
ss
add
shrb
sbb
push
nop
je
dec
mov
mov
and
push
xchg
lods
je
call
jnp
sbb
pop
in
mov
mov
icebp
loope
or
and
subb
int
inc
xchg
inc
dec
push
mov
mov
leave
fwait
cs
dec
arpl
push
fucom
pop
push
rcrl
nop
bound
mov
aas
push
imul
jns
xor
mov
fs
cmp
inc
outsb
sarb
ret
xor
cmpsl
push
jmp
aad
enter
dec
mov
mov
sbb
mov
xor
cmpsb
or
mov
mov
xchg
dec
subl
mov
sub
into
cmp
aam
dec
outsb
mov
pop
lcall
lea
bound
cmp
adc
rcll
add
dec
arpl
iret
andb
push
imul
sbb
insb
xchg
jmp
xor
xor
loop
out
and
xor
inc
push
dec
pop
and
lds
mov
xor
cltd
imul
in
cmc
lds
pop
daa
bound
in
std
ret
inc
aad
inc
hlt
psrad
mov
pop
dec
dec
test
adc
mov
add
jae
and
jl
xor
xor
pop
int
add
push
lods
insb
dec
mov
lock
push
pop
ja
sbb
stc
cmp
filds
ret
xor
push
inc
ret
sahf
repnz
and
rcll
mov
icebp
lods
sub
or
push
push
mov
cmp
xchg
jnp
popl
pop
adc
repz
int
cmc
popa
clc
push
outsl
xor
jl
add
rsqrtps
inc
mov
or
fists
ret
jle
inc
jl
jb
cmp
inc
xor
inc
arpl
lea
push
cs
loopne
add
fsubrl
adc
adc
mov
xorb
stos
sbb
hlt
and
mov
pop
xor
push
push
dec
sub
stos
add
rcrl
sbb
push
inc
pop
cs
xlat
imul
int
lods
leave
nop
shrb
enter
push
fsts
or
mov
testl
xchg
mov
movsb
adc
out
imul
addr16
pop
cltd
sub
jp
scas
dec
pop
cmp
jno
iret
xchg
inc
in
push
loopne
and
imul
rcrl
mov
pop
lock
and
mov
aad
fstps
xor
in
lds
jmp
stc
lahf
jp
in
lods
cli
rclb
jecxz
pop
iret
pop
stos
das
repnz
fimuls
dec
xchg
push
mov
xchg
loopne
lahf
and
roll
ret
fwait
cmp
in
pop
cmp
dec
add
push
mov
mov
stc
xlat
mov
jnp
mov
flds
std
jo
lea
cli
out
std
loop
insl
sbb
sbb
cmp
mov
loope
ds
push
mov
mov
jbe
das
push
idivl
fnstsw
or
and
fldt
pop
rclb
popa
mov
inc
pusha
pop
mov
mov
xchg
dec
push
popa
jmp
jnp
mov
add
push
mov
inc
xchg
sub
ss
icebp
adc
or
repz
ds
shl
insb
pop
sahf
sahf
mov
insb
sub
and
xchg
push
cmp
push
or
xchg
addr16
adcb
int3
arpl
aad
into
sbb
dec
dec
inc
mov
sub
fninit
push
dec
mov
xchg
sub
ret
dec
pop
loop
lds
dec
xchg
mov
scas
movsb
dec
lahf
loop
pop
in
shrb
ror
fildl
ret
mov
mov
ja
jp
xor
test
shll
inc
xchg
fists
inc
xchg
cmp
mov
leave
pop
push
mov
sub
test
test
add
push
or
push
sbb
lods
push
sub
sbb
push
mov
shll
mov
mov
push
add
xor
cmp
loope
adc
xchg
push
mov
aad
lods
jo
pop
fs
leave
fcomps
in
daa
jg
pushf
mov
add
test
jno
pop
push
enter
gs
out
adc
push
subb
movsl
inc
ds
jmp
call
and
ds
divl
push
ljmp
dec
hlt
dec
cmp
xchg
sbb
pop
mov
sub
call
rcr
xlat
int
push
je
fsubl
push
sub
neg
iret
sbb
inc
cmpsb
or
test
push
xchg
dec
das
test
cmc
pop
fldenv
mov
shrb
insb
push
xor
fnstenv
dec
lahf
inc
mov
push
xor
out
sub
and
lcall
jecxz
outsl
xchg
adc
not
imul
rcrl
pusha
das
xchg
loopne
xchg
fistpll
dec
inc
out
roll
or
xor
xchg
mov
dec
jle
mov
mov
inc
pop
gs
mov
jae
das
push
outsl
js
fistpl
and
pop
mov
and
add
mov
push
inc
into
fimull
ret
sub
and
adc
and
mov
and
int
push
add
xchg
fwait
cmp
test
out
push
jg
ret
pop
jle
jo
aam
leave
shll
ds
lods
fnstenv
fldpi
int
mov
or
ret
jnp
rcrb
add
adc
pop
pusha
xlat
adc
sahf
movsb
ljmp
in
pop
push
call
pop
cmp
incl
cwtl
aad
mov
ret
or
jbe
pop
bound
aad
orl
out
loopne
lock
pop
cmp
loop
jns
aad
sbb
xor
mov
mov
jne
leave
sahf
mov
addr16
sub
scas
inc
pop
daa
dec
ja
rorb
mov
cmp
fnsave
fcmovb
call
pop
sub
push
push
cli
pop
arpl
and
cmpsl
scas
jb
mov
int3
xlat
push
mov
test
aam
sbb
scas
push
pop
push
or
or
es
mov
or
jecxz
rorb
mov
or
lret
push
push
push
insl
aad
jb
mov
inc
inc
jne
add
mov
mov
adc
pushf
scas
out
xchg
xor
xchg
bound
scas
push
pop
adc
mov
xchg
in
mov
pop
jg
sbb
into
dec
cmp
sti
xchg
push
jle
in
and
mov
mov
mov
lahf
jmp
or
mov
xchg
cmp
xlat
cmc
mov
and
jb
test
or
add
fbld
bound
movl
out
int
cmp
mov
in
cmp
cmc
xor
hlt
fwait
push
lcall
pop
sbb
mov
into
push
imul
sahf
xchg
cmp
dec
imul
mov
mov
push
pop
sub
stos
fdivr
cld
outsl
or
repnz
sti
invd
jnp
xchg
inc
sub
inc
push
lock
pop
shl
cmp
sarb
jb
cmpsl
call
pop
ljmp
test
add
lahf
cmp
lcall
rol
flds
mov
scas
and
enter
xchg
lds
pop
ret
jle
scas
fists
loope
inc
clc
into
pop
push
pusha
addr16
imul
jle
pop
sub
inc
mov
and
push
test
inc
mov
testl
repnz
sahf
clc
hlt
cmpsl
pop
clc
jnp
xchg
lods
jnp
jae
iret
sbb
mov
and
push
and
in
and
mov
clc
std
cltd
xor
in
clc
jb
in
orb
jg
fs
jmp
push
je
dec
xor
jmp
popa
xchg
pop
lds
fwait
test
and
clc
jb
movl
cs
ficompl
mov
cmp
cmp
scas
js
frstor
bound
dec
push
mov
mov
push
in
je
inc
and
jae
ja
subl
shl
adc
mov
dec
test
jg
and
mov
nop
add
xchg
or
add
cmpb
sbb
imulb
xchg
xchg
and
les
cld
dec
shll
stos
mov
cmpl
push
outsb
mov
sbb
test
or
mov
scas
sbb
xchg
jo
mov
adc
repnz
test
pushf
push
sbb
ds
push
or
fidivs
sbb
cmpl
add
cmp
lods
insb
add
rcrb
nop
subl
lods
ljmp
pushf
and
arpl
sub
ds
pop
mov
adcb
hlt
mov
xchg
jp
xchg
fcoml
dec
dec
es
test
and
mov
mov
mull
jne
xor
and
mov
mov
sbb
fbstp
repz
popf
push
enter
daa
push
test
push
or
adc
das
icebp
stos
push
dec
popa
or
cltd
movsl
popf
inc
scas
into
lock
or
test
pop
mov
mov
xor
push
inc
out
sub
sbb
insb
cld
fs
test
dec
xor
mov
fiadds
iret
push
popf
popa
ret
arpl
sbb
testl
inc
cmc
nop
push
movsb
fists
out
je
xchg
jg
mov
xchg
xor
pop
movsl
cli
pop
push
inc
shlb
inc
inc
insl
sbb
adc
scas
xor
pop
cld
stos
jbe
push
xchg
push
jmp
out
inc
cmc
mov
inc
aam
mov
pop
popf
stos
xchg
add
sbb
adc
dec
in
outsb
bound
xor
test
loop
sub
fcmovne
sbb
movsb
icebp
sahf
hlt
lret
fstl
pop
lock
sub
ss
lret
addr16
jb
push
inc
xor
lret
adcl
mov
pop
sub
sbb
cmc
ret
outsl
ret
pop
jb
dec
cmpsb
arpl
push
in
xor
ljmp
jb
aas
cmp
fsub
icebp
mov
test
mov
test
jne
pop
imul
int3
dec
mov
adc
add
iret
push
int
sbb
ja
adc
popa
and
xchg
frstor
mov
pop
hlt
das
fwait
mov
sub
push
inc
shll
and
push
imul
mov
xchg
sahf
and
add
movsb
ret
jge
pusha
push
mov
lock
pop
int
sbb
adc
mov
and
adc
aam
cmc
adc
mov
clc
arpl
adc
sub
pop
or
ja
js
adc
push
aad
cmp
pop
push
jle
scas
pop
fisubl
movsb
fninit
loop
mov
adc
test
mov
mov
imul
xor
test
push
sub
push
add
aaa
iret
or
mov
idivb
je
insb
mov
sbb
cld
shrl
pop
fisubrs
in
test
sahf
bound
mov
adc
shll
mov
push
mov
inc
ds
cmp
loop
inc
jmp
and
shlb
lcall
scas
push
push
bound
sub
filds
push
and
mov
pop
adc
fiaddl
xorl
mov
xchg
dec
in
cmp
fistpl
sub
scas
add
xchg
int3
fdivp
insb
xchg
sub
mov
outsb
sub
into
out
add
loopne
fidivl
xlat
test
pop
cmc
mov
sar
pushf
fdivrs
test
dec
jbe
int
adc
lret
mov
arpl
or
leave
sub
pop
pop
cmp
pop
lea
push
dec
out
mov
push
fmuls
fldt
pop
sub
add
mov
mov
fdivs
dec
pop
sub
cmp
subl
in
pop
mov
dec
xchg
sub
les
pop
mov
or
mov
enter
rorb
fs
cwtl
sbb
lcall
sbb
popf
rcr
xchg
fisubrl
push
jecxz
xchg
les
repz
out
imul
xor
fcoml
add
mov
jecxz
fsts
add
dec
aas
and
xchg
stos
shlb
leave
loope
icebp
push
jge
xchg
push
call
mov
mov
out
xchg
je
add
sub
push
stos
scas
jmp
cmp
aas
mov
pop
test
and
out
or
shll
and
repz
lods
shll
xchg
dec
add
cmc
mov
inc
pop
lret
sbb
fiadds
cmp
mov
loop
cli
push
out
pop
mov
mov
push
mov
lock
sub
gs
lea
imul
dec
je
jae
loopne
lea
or
inc
lods
xchg
cld
push
pop
fwait
jmp
lahf
incb
sub
mov
sub
inc
mov
cmp
push
daa
mov
or
inc
push
aas
jno
mov
enter
or
add
imul
lock
adc
aaa
sti
xchg
imul
pop
inc
mov
jnp
test
add
shll
push
pop
clc
mov
sbb
shl
mov
sub
lahf
outsb
orl
or
nop
inc
fadd
in
repz
scas
arpl
bound
lcall
and
add
mov
fdivl
xchg
xchg
sbb
or
jecxz
ljmp
dec
add
jns
dec
and
ja
jg
jno
fcoml
push
or
enter
call
cmp
stos
jmp
sbb
ss
fwait
shll
jg
dec
xlat
jne
jno
das
adc
and
scas
pop
ds
cmc
inc
imul
jne
filds
inc
add
pop
pop
aam
xor
pop
cmp
cmp
icebp
or
adc
xchg
mov
mov
imulb
scas
add
lds
sub
mov
jmp
test
leave
cltd
test
dec
loop
lock
sbb
jno
mov
push
ret
out
push
shr
insl
adc
mov
test
into
enter
aas
dec
pop
stos
mov
rorl
bound
push
jae
inc
inc
xor
fsubr
ret
ret
insb
testb
shll
jns
sbb
in
clc
adc
sub
cs
inc
sub
pushf
lret
xor
add
xor
in
dec
ljmp
jg
dec
push
ljmp
lock
xorl
push
das
jbe
dec
and
cld
insb
sub
lods
cmp
pop
and
repz
movsb
xchg
hlt
xor
sarb
jle
dec
lock
sbbl
movsl
jp
lds
lea
adc
repnz
ljmp
fbld
jns
int
pop
sbb
pop
scas
cmp
add
cmp
adc
pmullw
lds
jae
xlat
int3
int
sub
popf
cs
cmp
xor
mov
fucomp
push
loop
inc
insb
ffreep
movsb
sbb
int3
xor
cmc
sbbb
and
push
dec
in
sbb
ret
out
xor
cmp
and
pop
adc
sub
ret
loope
inc
fildll
pop
mov
fildl
mov
out
mov
mov
shll
rcrl
add
add
add
jmp
mov
dec
mov
out
jecxz
pop
negb
or
cmpsl
cld
push
sub
xlat
out
or
cmp
and
hlt
insl
jne
gs
cmp
insl
push
out
sbb
cmpsl
xor
rcrl
pop
or
pop
xor
inc
mov
mov
in
cs
aam
push
sub
ret
sbb
adc
add
inc
jp
jb
mov
pop
fisttpl
xlat
cmpsb
arpl
aad
sub
repz
add
cmpsl
dec
loop
clc
xchg
adc
pop
lock
or
pop
mov
add
push
fists
add
adc
hlt
pop
cmp
shr
mov
pop
lds
lahf
jb
inc
and
adc
inc
lret
gs
push
or
inc
popf
aam
dec
vhaddps
dec
pop
or
insb
jle
lahf
daa
jnp
ret
jnp
or
jmp
dec
cmp
in
lahf
pop
mov
sub
or
es
lcall
lods
out
int3
pop
cld
icebp
adc
jmp
insl
movsl
les
cld
outsl
hlt
cmp
outsb
mov
mov
mov
in
pop
in
mov
cmp
add
dec
gs
xor
push
push
xor
aas
fimuls
test
add
mov
pop
hlt
in
sbb
jo
jl
push
movsl
mov
dec
lcall
in
popl
mov
mov
subl
sbb
cltd
and
push
cld
xchg
cmp
add
aad
mov
push
daa
inc
mov
int
jg
mov
out
xchg
popf
mov
inc
call
flds
les
cmc
lahf
cmc
shrd
push
xor
sahf
jno
mov
movsb
pop
pushf
repnz
icebp
mov
and
cmpsb
cmp
int3
sub
mov
je
data16
xchg
sbb
fsubrl
sbbb
loop
ret
ds
insl
push
sbb
mov
push
in
out
js
mov
hlt
mov
jno
fsubs
inc
fstpt
in
ret
pop
mov
push
pop
jo
cmpsb
push
jg
mov
cmc
ficoms
jge
xor
jmp
dec
sbb
xchg
test
cmc
mov
imul
adc
fisttps
adc
popa
pop
movsl
xchg
sbb
push
jo
pop
xor
lea
das
sub
subl
pushf
push
mov
inc
jmp
lret
repnz
xchg
mov
jo
lea
jbe
jo
insb
jmp
adc
iret
outsb
inc
sti
sti
jae
sub
iret
xchg
jl
adc
filds
std
fsubl
test
in
fs
mov
imul
inc
xchg
add
jb
add
pop
cmp
push
hlt
pop
nop
pop
add
jo
add
push
fdivr
sub
or
scas
mov
jae
outsl
jnp
js
dec
cmpsb
mov
fdivrs
test
and
mov
mov
push
sbb
fst
enter
cmpsb
cmp
mov
push
xlat
sub
repnz
xor
cs
xchg
pop
mov
fdivs
xchg
jge
xchg
lea
scas
mov
or
icebp
mov
test
mov
mov
lahf
and
bound
cld
cmp
fidivs
adc
popa
pop
xor
jmp
notl
rcrb
jmpw
lods
pop
mov
fucom
cmp
and
xor
mov
mov
outsb
xchg
jecxz
mov
dec
jns
or
inc
inc
inc
in
or
lret
bound
sub
pop
jo
sarl
nop
subl
ss
xor
or
cmp
inc
in
test
rolb
and
push
sub
icebp
ret
int3
loop
ljmp
fdivrs
inc
push
lret
add
stos
sbb
stc
add
loopne
sahf
pop
mov
ss
add
adc
push
or
jne
push
mov
jbe
outsl
das
push
ljmp
cli
pusha
mov
xchg
popf
add
test
mov
and
fisubs
sbb
lahf
xor
add
xor
pushf
adc
and
cmp
loopne
das
jg
mov
or
cmp
jno
imul
dec
repz
cmp
adc
ja
cmpsb
icebp
fucomi
adc
mov
mov
mov
pop
das
cmp
fcmovnb
mov
movsb
adc
inc
add
fisttpl
stc
mov
test
and
or
xchg
push
sub
out
xor
test
xchg
sbb
dec
aad
cmp
mov
push
ljmp
jno
mov
inc
fcoml
mov
int3
in
cwtl
out
xchg
pop
mov
into
lods
cmpsl
and
xor
push
fnstcw
dec
or
insb
push
stos
mov
lret
or
jecxz
add
cmp
mov
mov
in
push
pop
js
ds
pop
push
jo
insl
mov
in
dec
fstl
mov
repnz
gs
xor
shll
and
pop
sbb
push
sub
or
mov
inc
test
jmp
mov
pushaw
shrb
pushf
xor
mul
dec
add
dec
insl
jb
rclb
xchg
hlt
mov
xor
xchg
ljmp
xor
or
je
dec
adc
or
sti
push
cmpsb
pop
dec
rorl
inc
loop
add
jno
xlat
ret
daa
dec
dec
fidivs
int
call
sti
and
adc
mov
sbb
movsb
repnz
aam
adc
dec
lret
push
pop
jecxz
xor
imul
dec
sbb
sub
rcrb
sub
or
add
mov
nop
xor
mov
icebp
pusha
jl
xchg
adc
mov
xchg
lods
loope
aad
stos
push
dec
or
jle
pushl
test
fwait
insb
push
icebp
mov
into
adc
fsubs
test
lock
fbstp
cmp
sub
add
jno
cmp
add
ja
aad
dec
sarb
xlat
std
push
mov
loope
add
mov
pop
es
pusha
cmp
jp
mov
push
mov
stc
fsubrs
subb
dec
sbb
ja
jmp
pop
jne
nop
insl
xor
adc
addl
lret
lcall
stos
in
call
cmp
sbb
ret
test
rorb
repnz
jl
xchg
adc
cmp
shll
mov
xchg
sub
add
das
mov
xchg
xchg
out
jno
stos
or
sbb
cmp
ljmp
leave
xchg
xchg
sti
in
cmp
jno
leave
fiadds
hlt
ret
fistl
pop
imulb
sub
pop
mov
cltd
inc
mov
ret
and
pop
scas
dec
loop
nop
xor
inc
pusha
adc
push
add
aad
push
loop
mov
sti
rorl
add
into
in
mull
push
mov
sbb
fcom
je
mov
rol
je
out
sub
push
xlat
scas
pushf
push
sbb
int3
mov
lahf
shrb
test
insb
stc
and
mov
jne
sub
outsl
mov
pop
out
or
nop
dec
in
rcrl
mov
mov
je
addr16
test
int
cltd
stos
mov
and
lret
outsb
sub
movzbl
xchg
adcl
test
lods
sub
add
sbb
mov
aam
sub
mov
jg
mov
or
mov
fisubs
in
inc
adc
xor
fwait
lret
add
dec
leave
out
jecxz
adc
test
sub
icebp
aad
out
push
mov
push
scas
outsb
jbe
shll
push
repz
cmp
lret
dec
faddl
es
adc
lcall
stc
and
inc
cmp
xor
ret
fcmove
mov
or
sti
stos
xchg
xor
add
dec
cli
mov
int
test
inc
scas
dec
in
mov
xchg
in
add
push
adc
mov
rorb
mov
insb
cmpb
cmc
in
push
sub
rcrl
pop
sbb
inc
adc
sub
jmp
out
jae
cltd
cmp
push
lods
jle
fiaddl
push
pop
fimull
loop
sti
mov
and
in
jbe
xor
xor
cmp
add
fs
and
dec
in
subb
orl
mov
pusha
lods
sub
sub
ret
aaa
fwait
push
hlt
lea
ds
xor
aam
adc
fwait
push
popa
mov
pop
and
dec
cmp
xchg
and
add
xchg
popf
sub
les
pop
pusha
push
mov
cld
arpl
push
psrld
and
add
xchg
push
mov
call
inc
js
ret
test
scas
push
mov
add
shr
mov
mov
pop
call
rcll
notb
pop
ret
mov
movsb
xor
into
push
test
mov
fdivrl
inc
ret
cmp
call
or
or
rolb
iret
roll
pop
add
sub
jp
push
in
mov
mov
sub
andb
icebp
out
fnstcw
popa
out
or
movsb
inc
xlat
sbb
mov
push
xor
shrb
popa
dec
enter
inc
addr16
outsl
or
xor
xchg
inc
push
call
cmp
xchg
in
mov
icebp
faddl
xchg
daa
hlt
test
je
mov
or
mov
jb
pop
push
lcall
cwtl
xor
inc
jno
jmp
fnstenv
sti
fidivl
lcall
cwtl
stos
push
mov
daa
shrl
gs
into
xchg
out
push
outsb
sbb
add
push
sbb
lods
mov
pop
push
into
mov
std
lods
insb
pusha
jbe
aas
dec
adc
sahf
addb
add
imul
cmp
xlat
jb
adc
call
xor
xchg
xor
dec
dec
jecxz
pop
test
fisubrl
jo
jmp
sbb
xchg
out
inc
idiv
aas
dec
jmp
repz
stos
sahf
and
jge
dec
scas
sbb
shl
pop
stc
imul
loope
pop
pop
mov
inc
pop
dec
loop
push
fwait
outsl
and
cwtl
lcall
lods
and
adc
mov
jbe
push
jb
test
movsb
push
aas
sbb
test
addb
jb
push
aas
insl
sbb
iret
mov
fsubl
mov
gs
ljmp
dec
cmp
xchg
in
fcompl
jnp
ret
fst
out
ljmp
inc
push
lds
scas
inc
cmp
fdivrl
xchg
jecxz
out
mov
ret
pop
test
adc
out
into
rorl
sbb
sub
fstpl
mov
lret
scas
cmp
adc
imul
movsb
cli
fwait
add
sbb
in
incb
mov
test
inc
loope
mov
cmp
fcoml
add
and
sbb
int
hlt
fstpt
adc
scas
out
mov
test
push
mov
adc
sbb
mov
aad
int
aas
jg
mov
xchg
adc
sbb
jae
push
inc
cwtl
jge
xchg
and
pop
xchg
inc
pop
inc
les
jecxz
imul
mov
cmpsb
mov
sbb
add
xor
jbe
bnd
test
mov
stc
or
cmp
add
insl
mov
mov
or
xchg
push
lahf
lcall
repz
push
lahf
outsl
sbb
iret
popl
pop
scas
and
add
mov
and
cvtdq2ps
cmc
add
cmp
in
pushf
out
es
cld
cli
cmp
stc
out
push
loope
fwait
aas
and
push
jo,pn
and
push
movsl
repnz
pop
jae
mov
clc
insl
sbb
arpl
pop
xchg
sub
pop
xchg
stos
inc
sub
arpl
call
das
shlb
add
jp
adc
add
jnp
nopl
lahf
xor
xchg
cltd
cs
fstpl
xchg
js
or
popa
pop
sbb
add
mov
mov
push
mov
mov
push
addb
mov
push
movsb
shl
mov
push
test
movsb
adc
add
mov
add
pop
out
clc
stos
xchg
mov
stos
fldl
in
fstpt
loop
sbb
mov
loope
lahf
das
aad
adc
lods
aaa
sub
push
nop
cmp
pop
cmpsb
or
push
mov
lahf
pop
std
cli
loopne
fmul
nop
daa
add
sub
int
cmpsl
ja
jmp
push
jg
leave
inc
test
push
push
mov
cli
or
adc
lret
call
out
add
out
xchg
mov
push
call
mov
fildl
dec
scas
push
fimull
adc
outsl
scas
stc
push
push
xchg
inc
dec
add
test
push
adc
arpl
aas
xchg
bnd
push
mov
and
push
imul
xor
pop
pusha
les
arpl
push
outsl
xchg
inc
jo
mov
xchg
pop
movsl
pop
xor
sub
dec
add
es
test
dec
fistl
leave
pusha
inc
mov
sbb
mov
call
mov
shrl
cltd
push
jmp
jp
jo
pop
ret
jecxz
negl
hlt
call
cmp
or
adc
ss
pop
push
xor
je
xchg
loopne
lahf
addl
hlt
push
push
add
xlat
cmpsl
fbstp
pop
clc
add
adc
cmp
push
fwait
add
adc
fs
or
stos
shl
or
or
rolb
adc
clc
lahf
mov
test
stos
sti
mov
fimuls
cld
push
in
js
dec
pop
dec
and
movsl
mov
insb
lret
and
cmpb
fldenv
scas
push
lahf
fistps
shll
push
arpl
xchg
jb
loopne
fsubrl
mov
ljmp
mov
test
call
jecxz
inc
jl
std
xlat
and
mov
mov
and
dec
arpl
js
test
ror
arpl
fs
das
dec
ret
das
aad
aad
repz
pop
push
pushf
adc
mov
cltd
xchg
jno
in
cmp
ljmp
call
insl
cld
xchg
movsb
into
mov
sbb
jb
and
rolb
fwait
pop
mov
adc
sub
repz
sbb
pop
xchg
aam
lds
mov
mov
jl
mov
dec
shr
dec
imul
dec
inc
jne
jb
jmp
popa
sahf
into
ficoml
nop
push
lea
mov
sarb
mov
test
int
ficoms
int3
daa
adc
ret
and
mov
jnp
subb
loop
add
xchg
mov
test
dec
inc
lret
pusha
call
or
adc
sbb
jle
mov
les
divl
jne
cmp
stos
sub
in
mov
ljmp
push
out
stos
push
add
das
mov
test
mov
push
pusha
add
mov
and
push
js
add
ret
fistpll
movsl
mov
orl
std
movsb
jmp
or
orl
mov
out
jbe
push
stos
push
fs
das
ret
adc
mov
jp
inc
rol
push
mov
popa
jecxz
enter
daa
iret
push
pop
push
outsl
cmpb
add
pop
hlt
inc
rcll
sub
sarb
les
mov
sub
pop
push
add
pushl
js
push
sbbl
subl
pop
sahf
xlat
mov
outsb
mov
stos
insb
and
popf
dec
das
clc
mov
lahf
inc
out
cmp
movsl
fcomps
mov
inc
lock
pop
movsl
ja
scas
pop
fcoms
or
outsl
daa
xor
rcr
sbb
dec
cmp
fistl
dec
iret
int3
ja
jg
cltd
push
scas
inc
add
sbb
and
les
int
jge
add
jecxz
mov
cltd
insb
in
scas
ljmp
mov
mov
or
popa
out
inc
sbb
pop
mov
mov
lea
out
loop
add
mov
jmp
sub
out
mov
sbb
add
ss
adcb
push
sub
push
xor
push
jno
xchg
ret
xchg
pop
lahf
imul
js
or
pop
inc
ficompl
adc
loop
loopne
jno
not
test
repz
mov
add
and
mov
pop
movsl
lcall
in
pusha
cmp
dec
shlb
add
shll
lods
sbb
mov
aas
movsb
mov
stos
push
add
lret
mov
adc
or
inc
icebp
and
arpl
adc
xchg
cmp
pop
aas
sub
adc
xor
stos
rorl
stos
mov
inc
pop
fldt
sbb
daa
xorl
jmp
sbb
ja
mov
dec
sbb
jo
shr
mov
in
dec
loopne
call
or
or
push
push
loop
inc
cli
pop
mov
addl
test
call
cmp
cwtl
fsubl
add
es
fs
cmp
clc
jnp
push
mov
in
andb
test
iret
lret
std
inc
cmpsb
mov
push
fwait
inc
leave
sub
dec
ficoml
adc
cwtl
scas
xchg
inc
fidivs
mov
ds
rclb
shrb
and
dec
dec
lret
sbb
pop
pop
xor
jl
jge
nop
mov
jle
data16
gs
and
out
and
lahf
add
repz
lods
scas
fwait
and
loop
add
repnz
jl
por
out
jmp
jno
adc
cltd
cmp
int3
pushf
adc
repz
into
shll
nop
push
mov
jns
shlb
pop
pop
imul
popf
sub
jae
mov
inc
dec
in
insl
fidivrs
mov
pop
adc
mov
lret
adc
cld
and
xor
shlb
mov
rol
pop
pop
adc
push
jg
imull
iret
popl
jnp
in
pushf
mov
push
sub
xor
mov
xchg
and
mov
mov
aas
cmc
mov
xchg
mov
imul
push
aas
in
jl
jge
ret
jbe
imul
inc
scas
shlb
dec
inc
cld
lcall
mov
mov
fbld
jbe
pop
imul
xchg
stos
hlt
cmp
jecxz
jge
push
rolb
mov
out
xchg
sahf
sbb
test
sub
adcl
cld
stos
sub
sbb
xor
in
jl,pn
aam
sbb
loope
ret
ret
dec
dec
cmpsb
mov
aas
add
test
push
or
out
push
inc
loopne
cmc
addr16
push
sbb
pop
jge
jmp
mov
push
test
fsubr
lret
mov
add
loopne
pop
add
out
out
test
in
push
cltd
xchg
and
pop
jb
dec
inc
icebp
xchg
arpl
jb
dec
xor
mov
sub
xchg
lcall
call
sbb
and
mov
push
aad
push
pop
xchg
ret
scas
add
sarb
and
xchg
lds
xchg
int3
lahf
inc
inc
pop
lds
or
mov
adc
add
stc
and
push
lea
jno
addr16
ja
xchg
lods
clc
in
and
fsubrl
mov
dec
inc
mov
dec
mov
movsl
xchg
cmp
sarl
mov
fcmove
push
adc
xor
xorl
fiadds
jmp
mov
sub
imul
adc
andb
cltd
push
je
push
popf
adc
xchg
pop
data16
xor
imul
ficompl
push
mov
inc
cmp
push
xchg
movsb
fwait
mov
sbb
cmpsb
call
mov
adcb
xlat
test
inc
sahf
lock
out
test
and
adc
fcmove
into
cmp
mov
rdpmc
xor
lret
and
fists
in
gs
xchg
adc
jge
jbe
pop
imul
dec
mov
sbbl
add
aam
dec
dec
loop
xchg
adc
cmc
push
imul
xchg
shl
out
pushl
cmp
ficoml
bound
mov
cmc
cmc
rol
sarb
xor
bound
dec
fistpll
fsubl
push
pop
imul
cltd
mov
push
mov
je
adc
add
mov
test
lcall
xchg
sbb
sarl
push
out
sbb
add
outsb
add
leave
adc
aam
mov
pushf
lahf
cmp
out
inc
dec
aad
shr
inc
sbb
popa
sbb
adc
divw
dec
push
ret
lcallw
lret
jp
sub
mov
stos
and
testl
sbb
lds
xor
outsl
push
jmp
mov
xchg
xor
in
cmc
adc
mov
decb
lock
push
sub
stos
out
mov
or
imul
mov
mov
decl
mov
and
flds
repnz
sti
int3
xchg
out
fwait
xchg
pop
xchg
ret
movsl
ret
pop
jl
je
les
popl
sub
cmp
jg
push
leave
out
push
dec
push
sub
and
out
pop
xor
push
cmp
mov
test
mov
lods
loope
lret
dec
push
inc
push
inc
jecxz
and
ljmp
imul
int
cltd
adc
jo
mov
push
fmul
test
test
into
stos
pop
jbe
mov
out
mov
sbb
ret
loopne
or
fcoms
adc
aaa
dec
and
inc
xchg
shll
mov
adc
out
pop
rorb
fs
mov
pop
mov
int3
pop
adc
fists
sbbl
inc
dec
out
pop
arpl
xchg
xor
push
jge
and
xor
scas
add
jg
adc
inc
pop
mov
mull
lahf
dec
repz
inc
and
or
aam
lds
dec
pop
add
sbb
sarl
aas
xchg
sbb
inc
fld
dec
dec
rcll
in
dec
aaa
lret
mov
aam
add
xor
dec
jnp
sub
rcrl
add
mov
push
enter
mov
lods
xchg
add
test
mov
or
mov
in
xor
jne
xchg
mov
les
clc
popf
stos
adc
push
lods
adc
jnp
iret
idivl
cmp
cmpsl
sti
in
cmp
decb
aam
xchg
pop
mov
in
int
sahf
inc
pop
xlat
mov
jmp
aaa
cmp
adc
enter
popf
in
xor
nop
adc
inc
out
and
and
push
and
loope
xor
test
or
jmp
add
fadd
or
sbb
pop
dec
xchg
in
xor
push
jg
shl
mov
xchg
adc
jecxz
das
movb
pop
std
lods
dec
faddl
cwtl
xchg
icebp
inc
in
cld
int
jns
inc
rolb
jne
inc
xor
lds
lahf
loop
mov
gs
es
jns
dec
in
sub
out
cmpsb
outsl
lahf
scas
dec
gs
out
test
hlt
test
and
and
mov
ds
cmpsl
aam
inc
div
sbb
jo
lret
sbb
lods
inc
pop
push
ljmp
call
stos
test
mov
and
xor
jae
call
not
andl
movsb
sub
push
in
aas
push
mov
pop
jmp
inc
fsub
or
cmp
faddl
inc
ja
push
aaa
cwtl
enter
mov
repnz
cmp
lret
push
das
arpl
dec
dec
dec
pop
jge
lods
sbbb
imul
dec
pop
sbb
nop
mov
bound
push
pop
scas
xchg
pop
xchg
and
in
lods
push
mov
inc
mov
les
mov
push
mov
fs
pop
sbb
add
cmp
xor
cwtl
xchg
and
decb
iretw
int
pushf
scas
lock
pop
inc
xchg
cld
fdivl
xchg
inc
pop
ret
inc
push
jb
xchg
xor
push
into
adc
mov
sahf
adc
insl
or
dec
and
dec
scas
mov
and
inc
nop
lods
outsb
mov
fadds
cmp
cmp
or
leave
inc
inc
jbe
imul
adc
ljmp
call
pusha
sub
mov
movsb
cmp
add
dec
stos
mov
neg
bound
sub
and
mov
pusha
js
jp
ja
sbb
mov
xchg
inc
add
adc
add
inc
mov
ds
xchg
mov
xor
sbb
mov
repnz
mov
clc
stos
mov
jg
jge
mov
cmc
outsl
pop
fisubrl
add
loope
popa
fsubl
xor
jo
inc
inc
rcll
mov
in
data16
add
lret
pop
or
dec
fwait
xor
stos
into
push
pop
js
mov
push
into
mov
sbb
popf
into
and
daa
sbb
and
dec
cmp
xchg
mov
pop
pop
repnz
pop
in
sbb
adc
jnp
test
sbb
push
jg
dec
push
jbe
jns
sub
jae
jg
pop
in
inc
and
sbb
fadds
cld
xchg
xor
gs
aam
sbb
js
das
movsl
lods
in
std
cmp
mov
push
aaa
pop
stc
in
int3
dec
daa
sub
mov
in
xorl
or
pop
and
mov
std
jmp
mov
mov
mov
in
data16
lds
stos
test
shrb
cli
subl
dec
push
lods
jo
cmp
fldenv
push
in
sub
hlt
or
testl
fildl
push
and
xor
cmp
inc
aam
and
rclb
jae
in
jns
sub
jne
xchg
mov
jbe
enter
pop
mov
pop
loopne
push
jne
out
inc
push
inc
sti
or
stos
jmp
xchg
rorl
cwtl
cmc
mov
mov
dec
into
and
je
pop
mov
and
sub
mov
fldcw
adc
jns
xchg
add
push
xchg
xor
dec
cmpsb
movsl
fisubrl
mov
ficoms
shll
mov
js
mov
mov
pusha
xor
pop
imul
lcall
or
sti
cmp
ret
xor
and
fidivs
push
mov
jecxz
int
cwtl
jns
scas
cld
push
fwait
jae
adc
mov
mov
dec
hlt
sbb
dec
dec
push
inc
loope
jnp
shlb
cltd
test
jb
or
or
adc
xchg
sbb
add
push
sub
pop
dec
sbb
add
in
xor
enter
sub
into
int3
fmulp
stc
pop
cmp
or
scas
mov
dec
cmp
outsb
xlat
mov
push
sub
xlat
pop
fdivr
inc
les
ljmp
jno
mov
cs
cmp
stc
outsb
cmpsl
push
pop
sub
or
jecxz
mov
mov
xchg
dec
pusha
lods
xchg
rcrl
dec
cmp
push
mov
jp
ljmp
repnz
imul
and
pop
mov
bound
sub
sbbl
inc
jmp
inc
aad
mov
jns
jp
mov
push
cmp
push
pop
push
push
ljmp
movsl
icebp
mov
movsl
repnz
loop
xchg
scas
xchg
ds
in
mov
shll
add
mov
iretw
fldcw
es
mov
push
imul
lret
addr16
inc
push
je
faddp
fstps
xor
dec
shr
pop
popa
call
lods
push
lahf
mull
imul
push
push
mov
cli
pop
mov
scas
pop
cld
test
nop
and
out
xor
jg
scas
and
cld
adc
xor
fidivrs
mov
adcb
or
dec
dec
cs
dec
pop
push
repnz
aas
lret
das
loopew
pop
jle
aas
pop
ja
lods
popf
stc
ja
es
xchg
xor
filds
jp
inc
and
sbb
in
test
pusha
and
sub
jb
mov
mov
push
mov
cmp
fldcw
xchg
mov
data16
mov
xor
in
cli
push
xor
std
sub
add
rorl
mov
or
fsubr
lods
and
jge
mov
or
test
xchg
mov
popa
sti
pop
aam
fucomp
ja
scas
out
ret
cmp
inc
loope
out
push
aas
aas
jo
pop
insb
push
xchg
inc
push
lahf
mov
push
aaa
xor
shlb
shlb
jle
nop
sub
fldt
cwtl
inc
out
int3
mov
ljmp
jns
inc
or
in
lods
push
inc
xchg
loopne
cs
ret
xor
cmp
in
sbb
nop
repz
daa
xorb
fsubl
lods
mov
rcll
mov
dec
jb
insb
mov
ss
stc
mov
sub
test
push
gs
mov
shrb
pop
push
jl
ss
seta
insl
sarb
push
sbb
mov
iret
lcall
ficomps
pop
pop
inc
pop
addl
add
repnz
inc
mov
gs
or
mov
push
jecxz
pop
pop
lahf
jle
out
push
mov
rcrl
xor
xchg
outsl
fildll
stos
cmp
mov
jbe
cld
push
sbb
jl
xorl
sbb
add
scas
or
lock
and
cmpsb
jo
jb
fsubrp
jg
call
cmc
lods
cltd
lods
xchg
ja
mov
clc
or
popf
loop
mov
fcoml
ds
lods
or
jne
jp
les
hlt
mov
cmp
cmpl
xlat
fidivs
ret
ficompl
sbb
out
gs
adc
in
push
mov
mov
xchg
add
sarb
test
jl
gs
clc
and
mov
dec
loope
jbe
pop
xchg
mov
loope
int
ss
addr16
dec
out
outsb
ja
popf
outsl
sbb
cwtl
shll
push
xchg
xchg
sbb
cs
cmp
or
and
fsubs
cs
inc
testl
leave
sbb
arpl
popa
sahf
mov
jne
cs
jecxz
repz
jo
icebp
adc
cltd
inc
adc
sub
mov
dec
mov
aad
adc
fcoms
sbb
notb
aas
add
call
or
inc
insb
fs
sub
ds
jo
imul
ljmp
pop
and
cmpsl
push
mov
das
cmp
fldl
js
fwait
mov
xchg
inc
mov
or
das
xchg
popa
cmp
aad
cmpsb
test
pop
andl
or
jbe
cmp
pop
es
pop
xchg
sub
out
mov
add
fdivrl
mov
fwait
mov
sarb
sub
xchg
inc
adc
icebp
inc
test
sbb
lret
mov
sub
mov
fimuls
rclb
imul
add
cmp
cmpsl
shrb
ss
faddl
cld
sbb
cld
xchg
mov
mov
pop
push
xor
xchg
and
mov
xchg
cmc
inc
xchg
outsb
xchg
stos
or
sub
dec
lods
add
movsb
push
xor
shrb
pop
mov
incl
daa
dec
pop
std
lods
xor
pop
adc
cmp
fstpt
pop
lahf
leave
pushf
test
push
ss
sbb
push
shrl
push
inc
xor
fnstcw
mov
push
outsb
cmc
mov
daa
nop
daa
ja
std
push
call
ret
push
enter
push
imul
inc
adc
stc
cmp
out
pop
dec
pop
bnd
jbe
ljmp
hlt
xor
push
jmp
inc
xchg
jb
mov
and
and
aaa
pop
out
xor
daa
stos
in
or
js
imull
xchg
cld
xor
adc
out
inc
les
jnp
lock
mov
gs
xor
je
cmp
mov
mov
sbb
and
adc
cmp
movsl
inc
push
sbb
jmp
sub
inc
int3
mov
push
pop
fsts
xor
hlt
sub
les
inc
sbb
sbb
jle
repnz
loope
jbe
rcrl
mov
and
dec
in
mov
jae
pop
loope
movsb
je
subb
loope,pt
lret
add
xchg
movsb
pop
insl
es
mov
loopne
jg
addb
jb
pop
cmp
sub
add
mov
mov
mov
insl
lods
jecxz
fimull
inc
inc
inc
and
aas
fisubl
outsl
cmp
sub
xchg
nop
mov
sub
mov
push
dec
pop
mov
dec
push
imul
mov
mov
jl
sbb
jle
adc
test
xchg
or
iret
scas
sub
negb
into
faddl
stc
shlb
int3
testb
push
jb
jl
jmp
inc
mov
rolb
xor
xor
rol
icebp
rorl
repz
and
pop
sub
sbb
sahf
filds
dec
movsb
fwait
cmpsb
icebp
call
cld
stc
enter
daa
je
stos
jbe
mov
sub
punpckhdq
xchg
repz
int3
jo
mov
inc
dec
cmc
shlb
pop
or
andb
push
sbb
mov
mov
and
pop
push
movsb
addr16
outsl
inc
or
pop
outsl
cmp
cwtl
rclb
test
mov
mov
xchg
mulb
movsl
popa
aam
dec
pop
push
jnp
inc
outsl
fnstsw
ret
dec
cld
pop
mov
fucom
ret
lods
sbb
repz
xor
stc
xor
ret
push
cmc
sbb
or
or
xchg
sbb
cmp
outsb
cltd
cmpb
imul
jnp
cmp
mov
xchg
xchg
hlt
lock
test
test
mov
inc
inc
xor
xchg
fildll
jb
in
std
mov
fdivrs
int3
fwait
mov
shrl
sarl
cmc
idivl
ficoml
popa
clc
push
dec
cwtl
jnp
pop
je
pop
mov
xchg
or
xchg
xor
mov
fisttpl
and
imul
jmp
addr16
jecxz
orl
mov
and
cld
xchg
sbb
cmp
xchg
or
and
fsubrl
pop
push
int3
out
aas
ja
stos
dec
jne
scas
or
mov
popf
repz
decb
mov
sbb
and
add
add
and
xlat
push
repz
test
cmc
popf
or
jmp
mov
mov
xor
push
call
xlat
mov
mov
jl
mov
outsl
xchg
push
movsb
in
gs
mov
out
test
jle
sahf
daa
js
mov
mov
push
jbe
cmp
and
cld
pop
xor
inc
dec
lods
inc
mov
insl
add
lea
and
push
push
test
xchg
jno
dec
jecxz
daa
sbb
pop
jns
sahf
aas
xchg
sahf
dec
rcrb
in
ljmp
adc
cli
int3
xor
jge
mov
sbb
add
aad
mov
orb
or
fidivs
mov
daa
stos
stos
mov
mov
aaa
mov
mov
or
lret
pop
shr
je
pushf
sti
into
pop
mov
adc
in
sti
or
mov
inc
sub
out
aas
fdivs
cmp
inc
cmpsl
fwait
push
sub
jbe
das
push
mov
sbb
out
mulb
or
and
mov
lods
mov
xor
xchg
push
cli
pushf
xor
inc
in
fcom
ret
pop
xor
adc
icebp
mov
xor
cmp
fcompl
dec
aad
dec
pop
sbb
ja
cmp
pusha
mov
xor
mov
pop
xor
in
pop
xor
jno
and
inc
lahf
pop
jne
lods
pop
pop
inc
xchg
mov
jge
push
je
negl
ljmp
xchg
adc
mov
ja
or
mov
mov
bound
fisubs
mov
cmp
inc
in
bound
mov
xchg
movsb
call
idiv
inc
scas
sbb
fisubrs
lds
or
sbb
repnz
cltd
pop
pop
sbb
out
push
dec
in
ja
push
stos
andb
sbb
and
or
movsb
lcall
test
hlt
dec
out
mov
shlb
pop
fsubrl
dec
dec
and
shr
dec
sbb
mov
cmpsb
adc
adc
leave
mov
incb
arpl
out
cmp
mov
sub
dec
mov
test
or
cmpsb
out
pop
es
pop
or
ret
push
mov
dec
in
mov
adc
in
push
lret
push
in
cli
rcrb
adc
lock
dec
sbb
mov
xchg
inc
es
xchg
xlat
dec
push
movsb
inc
pop
es
subl
mov
pop
sarb
adc
inc
test
aas
dec
stc
dec
mov
fimull
aad
and
push
pop
jae
lea
arpl
repz
dec
in
fs
xchg
mov
pop
in
xor
movsl
nop
mov
dec
fsts
fldenv
jo
std
sbb
loopne
inc
arpl
add
mov
mov
sub
cld
loop
in
mov
fisttpll
sahf
daa
mov
push
add
pmaxub
shlb
scas
loop
sbb
xor
lods
sub
lds
loop
je
pushf
js
xor
mov
inc
cwtl
sbb
push
enter
cltd
dec
andb
loopne
pop
ljmp
fisubrl
out
inc
into
rclb
push
out
daa
loop
and
xchg
sbb
push
and
out
sub
dec
in
out
xor
mov
movsb
inc
int
imul
xchg
mov
cmp
mov
sti
pop
aad
mov
and
cmpsl
imul
call
fstpl
jle
out
nop
popf
addr16
testb
xlat
cmp
iret
daa
stos
pop
jge
adc
loope
sub
movsb
inc
inc
daa
jg
mov
int3
fs
add
mov
pop
push
add
fadd
stos
pop
jmp
cwtl
push
lds
jo
lods
mov
pop
into
lods
jne
loop
mov
adc
mov
jmp
cmp
dec
clc
adc
xchg
sub
cwtl
pop
mov
dec
xor
cmp
sbb
daa
mov
in
push
pop
lock
lods
mov
je
subl
into
fisttpll
mov
xchg
rcrl
shlb
jl
jle
add
mov
arpl
push
cld
push
dec
scas
int3
xor
movl
lret
and
sbb
dec
dec
imul
gs
popf
xchg
jle
cmp
and
pop
push
insl
xchg
xor
cmp
cmpsb
xor
daa
jmp
fimuls
and
clc
mov
cmp
sbb
out
pushf
sti
out
insl
cmp
cld
push
adc
inc
sbb
pop
je
clc
fucomip
xor
xor
dec
mov
sbb
insb
pop
push
xor
out
push
fistps
sbb
aas
cmp
mov
xrelease
and
mov
xchg
test
testl
jp
jmp
sbb
outsb
and
xchg
sti
addr16
adc
aas
mov
dec
shrl
mov
mov
pop
lods
cmp
cmovne
call
or
xchg
and
jne
mov
or
mov
aad
leave
int
not
xorl
mov
and
xor
rclb
xchg
sbb
dec
add
icebp
out
jbe
pop
fsubr
xchg
xchg
imul
test
out
pop
iret
dec
fsubrs
jnp
sbbb
adc
xor
push
cmpsl
vmptrld
hlt
cmpsl
dec
add
outsb
scas
les
adc
stos
fs
gs
loopne
or
jae
lock
rcrb
and
mov
test
adc
test
jge
mov
cmpsl
mov
push
out
xchg
sbb
and
inc
into
push
aas
test
gs
pop
sbb
add
cmp
inc
push
stc
pusha
imull
bound
divl
xchg
sub
cmp
rolb
ret
push
xchg
fnsave
dec
arpl
push
or
fs
cmpsl
ds
andb
adc
or
mov
fcomip
leave
scas
mov
sbb
call
sbb
insb
test
lahf
stos
ret
stos
pop
jg
ss
bnd
and
gs
rclb
xchg
popf
into
loopne
jns
push
adc
pushf
push
dec
sbb
lods
mov
sub
jp
push
inc
sbb
bound
dec
pop
mov
lahf
fdiv
mov
fisubrs
aaa
fucomip
mov
sub
popf
push
or
dec
cmpl
inc
aas
or
das
inc
pop
jne
mov
mov
dec
fwait
xor
cmpsl
data16
xchg
xchg
in
dec
repz
loop
mov
leave
lahf
xor
mov
bound
shrb
popf
dec
imulb
imul
dec
cwtl
int3
flds
jns
jae
pusha
xchg
sarb
push
test
adc
xchg
cmpsl
out
inc
fsubs
mov
divb
inc
divl
xor
loopne
pop
inc
out
or
and
stc
popl
or
fisubrl
loope
dec
lret
pop
repnz
in
adc
in
pushf
lods
xchg
in
push
aad
add
sbb
xor
push
loope
fisubrs
imul
stos
pop
cmc
sbb
mov
mov
add
mov
inc
aam
das
xchg
cmp
enter
xchg
mov
and
jno
cltd
and
inc
push
dec
mov
sub
in
andl
jbe
idivb
lahf
mov
popa
xchg
push
mov
pop
fucomip
xchg
jecxz
int
nop
jle
inc
mov
stc
cmp
pop
add
add
sets
and
fsubl
mov
cmp
insb
xor
mov
stos
cmp
cmp
das
mov
jg
sbb
lea
cltd
in
push
ror
xor
inc
fistpll
and
or
ss
xchg
sub
push
bound
sti
popa
add
cmp
mov
shlb
xchg
push
cmp
ljmp
adc
inc
sub
ret
ret
imul
push
dec
pop
and
and
xchg
int3
cmpsb
ja
xor
xchg
jb
xor
gs
mov
paddd
cmp
xchg
pop
fcoms
loope
dec
sbbb
jmp
mov
and
int3
andb
clc
jae
sub
adc
fmull
mov
adc
push
mov
pop
jae
icebp
inc
arpl
sbb
mov
jle
into
les
sub
add
ds
jns
xchg
cmp
adc
shr
pop
cmp
dec
dec
negl
js
pop
cmpsb
cmp
xorb
xchg
dec
loopne
pop
mov
mov
adc
ret
scas
test
rolb
fisttpll
cmp
or
pop
ljmp
sahf
lods
xchg
and
push
shll
cmp
scas
mov
jmp
loope
enter
sbb
mov
daa
vpslld
dec
test
leave
vmovq
cmpsl
pop
arpl
push
dec
fidivl
mov
ret
push
xor
jge
into
cltd
xor
xchg
cld
xor
movsb
jp
aad
andl
dec
and
adc
mov
sbb
daa
bound
jmp
mov
cmp
rorl
sbb
xchg
cli
fidivrl
cmp
jl
out
aam
inc
clc
push
aas
add
popf
aam
sbb
cmp
cmp
sub
lahf
xor
mov
fists
xchg
cmp
sysexit
pusha
mull
cmpsb
push
dec
jp
pushf
pusha
test
movsb
add
adc
cmp
mov
dec
aas
dec
jmp
movsb
orl
jmp
dec
test
sub
and
mov
xor
pcmpeqw
call
jmp
mov
fsts
in
in
out
dec
pop
test
aaa
mov
inc
lock
mov
ret
pop
cmpsb
xchg
xchg
sbb
lods
test
pusha
adc
out
arpl
mov
jge
shlb
dec
xor
jb
out
mov
movsb
loope
inc
fisttpll
lahf
test
sti
orl
loope
out
sti
push
xchg
out
bound
repz
mov
jle
out
inc
out
fdivl
mov
mov
add
fwait
xchg
adcl
enter
jp
cmp
aaa
lds
call
xor
sti
dec
gs
pop
dec
xor
cmp
xlat
mov
popf
lret
int
pop
sbb
mov
cli
dec
inc
bound
xlat
loopne
nop
in
test
jle
cmp
xchg
adc
mov
pop
out
add
scas
fistpll
push
push
inc
fiaddl
sbb
mov
data16
adc
push
mov
jl
cli
shll
adc
mov
fsubrl
and
lcall
fadd
sub
sub
cmp
cli
into
gs
mov
repnz
mov
or
inc
sarb
pop
and
dec
adc
jg
nop
xor
jmp
out
mov
pop
das
inc
loopne
shrl
fsubrs
fistpl
clc
test
shll
out
push
std
mov
cmpsl
sbb
enter
cs
jnp
pop
bnd
lock
jns
lret
hlt
jecxz
arpl
fiaddl
sbbb
push
xchg
fiadds
cmpsb
mov
aam
int3
mov
daa
pop
imul
dec
hlt
in
cld
and
mov
lret
sbb
outsl
lret
and
mov
mov
daa
jnp
jo
loopne
test
mov
dec
mov
push
and
push
and
mov
sti
jnp
notrack
movb
jl
and
out
mov
sbb
aaa
test
es
inc
repz
stos
into
scas
scas
repnz
iret
adc
pop
dec
or
or
aam
add
sub
and
pop
in
outsb
mov
stos
mov
and
in
inc
imull
insb
inc
insb
arpl
or
xor
push
aas
shrl
ja
call
add
iret
jo
mov
xchg
insl
sbb
out
mov
and
mov
nop
stc
push
or
xlat
loop
mov
outsb
mov
push
cmc
mov
or
test
mov
mov
lahf
xchg
nop
pop
push
sbb
jl
jmp
leave
jo,pn
pusha
ljmp
push
sbb
rol
fwait
out
inc
mov
nop
es
iret
adc
mov
inc
pusha
fdivrs
ljmp
jno
push
test
mov
cwtl
xchg
mov
inc
sbb
leave
push
xor
ljmp
sub
push
xchg
mov
movsl
enter
add
nop
lods
jae
xchg
sahf
in
xchg
ljmp
jp
out
aaa
or
mov
shll
in
or
out
enter
sub
aad
movsb
mov
sub
add
pushf
push
xchg
lods
push
xor
dec
and
in
icebp
mov
jnp
aas
psrlq
pusha
mov
or
inc
arpl
dec
pop
pop
mov
inc
fmull
idivb
jns
clc
and
inc
pop
cmp
sbb
jno
and
mov
sbb
cmp
adc
incb
gs
mov
pop
iret
mov
in
fst
or
or
lds
xchg
sbb
sub
scas
mov
js
pop
push
inc
pop
mov
inc
mov
pop
xor
movsl
sbb
dec
and
adc
rorb
out
and
mov
pop
sahf
lea
and
and
lea
in
and
bound
dec
jae
jle
in
stos
xor
xlat
inc
add
clc
sbb
out
dec
ss
xchg
mov
std
hlt
mov
ret
imul
lea
adcb
mov
in
and
add
adc
inc
inc
mov
fsubl
jl
mov
dec
es
add
sbb
test
adc
pop
jmp
pop
jecxz
sbb
push
decb
out
fbstp
inc
popf
add
xchg
stos
test
fmulp
push
adc
fcomps
fadds
cltd
scas
mov
rep
sbbb
mov
cmp
pop
mov
push
sbb
lcall
loop
push
loop
mov
sub
mov
cld
jmp
roll
mov
push
dec
jno
push
and
dec
and
test
jecxz
xchg
cli
andl
sub
and
sbbl
leave
cmp
mov
sbb
adc
shlb
push
adc
aad
cli
inc
fdivl
pushf
or
sahf
mov
push
push
inc
fadd
pop
icebp
idiv
adc
leave
js
push
orb
mov
jb
imul
cmc
jae
sbb
push
out
jo
fsubs
mov
cmp
and
sub
or
das
mov
popa
dec
pop
je
dec
push
imul
leave
popf
leave
pusha
ret
xlat
scas
add
pusha
sbb
vcvtpd2psy
sub
test
sbbl
jns
ret
gs
mov
clc
jp
lahf
fwait
test
mov
cli
add
dec
test
xor
jb
mov
xchg
insl
mov
inc
aad
out
sbb
mov
push
cmp
push
int
cmp
add
mov
icebp
jg
xchg
sub
js
cld
addr16
les
mov
jmp
cltd
push
push
inc
scas
test
sbb
pop
adc
dec
shrl
ja
out
sub
mov
jb
inc
fdivrp
dec
xchg
in
addr16
jecxz
push
enter
jb
or
xchg
sbb
xchg
test
call
jae
out
aas
addl
test
ja
movsl
fwait
daa
lret
ror
arpl
cmp
pop
addr16
adc
and
pushf
sti
out
popa
addl
inc
ficoms
or
mov
loopne
movsb
mov
pushf
sahf
stos
sub
push
mov
fcompl
je
insb
xchg
jge
jno
mov
add
xchg
je
fcmovu
xchg
mov
adc
lods
or
imul
and
lret
dec
jmp
decl
pop
push
das
cmpsb
insb
xchg
lret
xchg
sbb
test
bndstx
loopne
inc
mov
lea
and
pop
or
mov
mov
filds
daa
cmpsl
xor
push
mov
push
je
sub
test
mov
adc
or
mov
jne
add
enter
fisubrl
xchg
push
jb
add
mov
mov
push
fcmovbe
aaa
loope
cld
mov
xchg
cs
aas
mov
jmp
or
add
sub
stos
je
pop
push
inc
jnp
test
mov
mov
pop
cld
shll
cwtl
in
inc
add
test
mov
adc
xchg
sbb
negl
lods
mov
es
xchg
rolb
clc
std
leave
dec
mov
xchg
pop
mov
pop
and
imul
cmp
scas
mov
fdivs
push
mov
inc
pop
aas
pop
push
xor
int
shl
jo
or
in
lods
insl
jge
popa
imul
pop
adcb
je
pusha
xor
adc
imul
sahf
das
pop
aam
pop
push
jns
mov
aam
inc
xor
imul
stc
sbb
and
mov
test
jle
stos
pop
or
rcrb
dec
mov
call
lret
dec
xchg
xchg
mov
insl
push
jl
adc
lahf
in
fnsave
fadds
mov
sub
xchg
or
sbb
dec
push
mov
dec
sbb
cmovae
outsl
push
mov
ja
push
cli
jo
jmp
and
add
mov
shrl
mov
sub
cwtl
popf
push
and
sahf
push
das
inc
and
sub
jnp
out
arpl
ss
outsl
push
mov
cltd
pop
repz
into
inc
lcall
adc
iret
out
dec
lea
pop
scas
jno
sub
pop
sahf
and
call
mov
sub
dec
cli
sarb
sbbb
mov
push
hlt
pushw
gs
popf
stos
inc
out
or
lret
pop
dec
into
adc
push
call
sbb
jmp
cmp
pop
pop
aad
sub
adc
mov
pop
add
dec
xor
faddl
mov
das
test
pop
pop
insb
dec
test
rclb
mov
dec
push
and
cmp
pop
sub
xchg
repnz
xchg
in
jg
call
mov
shr
sbbl
les
push
movsb
mov
mov
inc
fadd
pop
xor
call
cld
and
aad
enter
repz
xchg
test
aam
cmp
sbb
dec
jnp
pop
test
dec
ds
pop
les
es
push
imul
cltd
xchg
sbb
dec
repz
cmpl
sub
cmp
repnz
call
fldl
hlt
scas
es
and
add
xor
push
ja
in
mov
push
fdiv
popf
add
mov
cmp
aad
push
fimuls
sbb
inc
pop
insb
stos
add
inc
mov
mov
adc
mov
fdiv
dec
lock
and
pop
mov
push
jmp
decl
scas
ret
xlat
xchg
ss
sbb
out
andl
arpl
mov
adc
xchg
out
in
add
pusha
mov
lea
and
movsl
pop
loop
or
xchg
nop
divb
sub
pushf
nop
mov
adc
dec
in
jl
aaa
mov
test
push
jne
lret
aas
push
mov
ds
and
insl
pop
vpsubusb
fnstenv
inc
fsts
pop
fbld
cmp
or
call
ljmp
popf
lcall
jecxz
dec
ja
jg
imul
dec
fadd
lcall
pop
sbb
push
inc
out
dec
lods
push
xlat
sub
jecxz
pop
fidivrl
scas
lret
orb
mov
popf
xor
xchg
or
dec
aaa
enter
xchg
and
sarl
scas
repnz
xchg
mov
xlat
jbe
into
fnsave
mov
negl
jmp
lea
dec
pop
mov
xchg
insl
sub
jbe
ss
mov
addr16
pop
xchg
mov
pushf
out
push
stos
mov
in
int3
inc
sbb
mov
pop
jo
hlt
and
adc
mov
addr16
into
push
push
mov
loopne
inc
pushf
adc
pop
repnz
pop
cmpsl
popf
fidivrl
or
mov
sub
stos
das
mov
popa
int3
cmc
or
rcrl
jmp
cmp
sub
ret
shrl
dec
adc
fldl
iret
in
mov
mov
sub
pop
iret
fdivrs
mov
pop
jo
xchg
cmpsb
xchg
out
fdivrs
sub
in
xchg
cmp
test
or
cwtl
xchg
sub
dec
inc
push
loopne
dec
repnz
jmp
or
out
or
pop
testb
cmc
mov
out
add
adcb
aad
push
cmp
arpl
or
cmp
mov
cltd
pop
hlt
or
mov
xchg
imul
pop
out
and
lds
stos
test
inc
pop
lods
jp
cmpsb
cmpsl
mov
jp
xor
loopne
out
sub
sub
aas
adc
xchg
cli
jge
and
aam
xlat
nop
pop
push
icebp
inc
cmp
loop
jb
dec
scas
xchg
inc
pushf
dec
mov
movsl
sbb
dec
nop
adc
sbbb
dec
frstor
rcr
add
enter
and
dec
scas
imul
jge
repnz
mov
cmpsb
push
imul
jmp
sub
call
cmp
ss
into
testl
push
les
mov
adcb
and
xchg
lods
clc
mov
sub
xchg
adc
mov
inc
dec
and
addr16
cmp
xlat
sahf
inc
sub
jnp
mov
adc
mov
shl
inc
pop
sub
adc
cs
daa
mov
je
inc
mov
fcmove
int3
adc
aas
mov
movsl
test
rorb
int
mov
xor
jp
test
or
pushf
insl
fsubrp
outsl
mov
cmp
loopne
ss
shll
pop
xadd
cli
jb
movsb
sbb
and
push
xor
lcall
call
or
lods
dec
inc
out
outsl
out
sub
xchg
nop
add
fwait
cmp
jl
sbb
mov
dec
iret
xor
in
push
pop
sub
dec
bound
into
int3
mov
inc
popa
pop
loope
sub
sub
adc
fwait
popa
push
fwait
inc
dec
inc
mull
or
dec
pop
jne
xchg
pop
sbbl
adc
scas
jns
dec
add
mov
sbb
fstpl
mov
cltd
idivl
movsl
and
es
push
cmc
and
add
sub
fs
push
pop
pop
ja
xchg
mov
pop
cmp
cmp
dec
leave
mov
int3
mov
sub
pop
jo
stc
sub
add
dec
cmp
sbb
rol
int3
push
add
pop
inc
adc
scas
dec
xor
and
inc
add
repnz
mov
je
jns
push
jge
dec
and
inc
in
idivb
sub
in
xchg
sub
loopne
jne
mov
pop
inc
jge
insb
mov
pop
imul
jne
sub
out
imul
add
lcall
dec
fs
pusha
test
outsl
add
adc
pop
cmp
xlat
pop
out
aas
dec
and
mov
out
ja
mov
add
push
hlt
cmp
insl
sub
call
pop
hlt
jecxz
pop
jg
jl
push
push
gs
mov
add
sbb
shrb
pop
ret
aas
in
mov
mov
pop
push
stc
lds
and
ss
fucomi
dec
addr16
pop
sbbl
repz
pushf
mov
mov
xchg
jno
fildl
dec
rorb
loope
xchg
mov
mov
jbe
pop
dec
or
insl
inc
inc
push
jno
gs
sbb
mov
test
fldt
or
das
inc
inc
sub
or
rclb
xchg
cmp
mov
xchg
jnp
sub
jbe
sarl
dec
jno
stos
btc
mov
pop
insb
xor
ret
rcll
mov
dec
stos
jecxz
mov
repz
aas
inc
gs
cmpsl
out
dec
andb
ja
mov
dec
cmp
push
push
outsb
mov
fistps
shrl
jno
mov
push
fwait
mov
adc
cmp
aaa
ret
jmp
imul
pop
mov
push
clc
or
ror
xchg
insl
fs
sahf
call
xor
shlb
mov
fcom
les
repnz
xchg
and
jle
shl
dec
push
mov
ds
jne
nop
sarl
out
lret
mov
mov
inc
aas
dec
jg
push
out
adcb
outsb
stc
fsubs
or
xor
push
push
outsb
loopne
push
pop
daa
enter
fsubrp
loopne
mov
and
clc
cmp
jb
push
mov
ja
in
popa
and
adc
xor
add
or
aad
dec
nopl
stos
dec
xor
bound
jg
pop
mov
dec
dec
cltd
outsl
sub
fsubp
pushf
out
xor
mov
cmpsl
imull
inc
dec
pop
ds
orb
cmp
cmp
pop
mov
ret
outsb
int
int3
addr16
addr16
mov
das
mov
jne
xor
loope
out
test
mov
inc
mov
aam
adc
and
movsb
int
cmpsb
insb
out
sub
stos
mov
shr
xchg
shrl
ret
sub
sub
gs
in
lret
jge
fwait
inc
inc
leave
fnstcw
xchg
push
scas
jo
xchg
push
and
mov
fidivrl
mov
xchg
fldl
push
test
xor
mov
sbb
imul
adc
push
xor
rclb
pop
pop
into
jp
das
adc
and
inc
das
mov
imull
sub
jmp
roll
xchg
jo
in
cmp
mov
xchg
mov
add
fmull
in
sbb
test
mov
jbe
inc
jns
aaa
lahf
and
push
sub
js
not
jnp
iret
or
les
into
je
out
sbb
cmp
and
stos
lcall
adc
into
mov
dec
sub
lret
hlt
sub
push
mov
lahf
ret
jmp
fwait
jne
and
jno
pop
mov
and
cli
adc
outsl
push
stc
or
mov
int
insb
add
out
insl
sbb
xchg
sub
or
jge
dec
arpl
stos
out
cmpsl
ficompl
jno
aaa
pusha
in
jmp
sbb
jg
pushf
loop
into
aam
jle
sbb
cmp
jmp
xchg
jo
out
sub
ljmp
repz
imul
lds
and
add
jae
push
daa
xchg
push
inc
faddl
cmpsl
arpl
mov
insb
inc
sbb
cmp
dec
cmp
movsl
sub
mov
mov
mov
jns
inc
int
sbb
inc
push
pop
xor
push
mov
dec
cmp
dec
jo
cmp
nop
sub
jge
or
or
movsb
mov
mov
push
loopne
test
dec
loop
cli
outsl
push
ret
xchg
repz
sarl
loope
rorb
imul
pop
clc
xchg
jmp
test
inc
cltd
outsl
std
sub
push
jl
call
add
pop
dec
mov
in
andl
orb
inc
out
push
ja
and
ja
adc
cwtl
sbb
pop
push
xchg
mov
xor
sub
adc
and
jg
and
or
int3
sahf
xor
mov
imul
and
cmp
pop
test
lea
pop
lea
xchg
data16
cwtl
cwtl
xor
add
xor
in
cld
mov
loopne
cmc
pushw
sahf
daa
or
dec
push
lahf
scas
jno
dec
sub
es
cmp
daa
xor
sub
faddl
insb
xorb
test
mov
jb
fcmovu
out
inc
jb
push
and
mov
mov
pushf
push
or
jne
xor
incl
stos
jmp
or
test
sbb
adc
stc
lock
repz
mov
mov
dec
nop
push
sub
aam
mov
fisubrl
push
jg
fdivs
or
das
mov
adc
jns
rolb
jmp
inc
inc
and
lahf
sbb
inc
sbb
cmp
sub
insb
aaa
icebp
shr
fwait
les
sub
loop
sub
out
or
jl
push
ljmp
outsl
sbb
daa
stc
sub
bound
adc
xor
mov
pop
fwait
cli
aas
sbb
lahf
xor
daa
lret
bound
pop
loope
iret
jmp
sub
aad
lds
dec
jns
ja
insb
add
xchg
mov
add
mov
jp
and
xchg
and
loope
cmp
insl
test
shll
cmc
mov
mov
inc
mov
cmp
in
insl
out
pusha
andb
dec
mov
push
and
jns
mov
stos
inc
fsubrl
aad
std
aaa
lret
sbb
dec
push
call
aad
ljmp
leave
cmp
push
stos
add
xchg
sub
scas
jb
cli
fldenv
sti
shr
pusha
leave
jo
das
ss
js
xor
in
adc
add
in
jecxz
int3
adc
into
and
xchg
fidivrs
and
imul
and
fdivrl
and
sub
js
dec
pop
jmp
xor
pop
add
in
lods
shll
add
or
sahf
mov
pop
add
pushf
pop
in
das
in
pusha
or
test
mov
fldenv
cmpsb
daa
sbb
test
jg
add
mov
movsl
dec
or
xchg
mov
nop
mov
inc
js
bound
int
test
push
test
daa
js
cmp
inc
sub
popa
jns
lcall
or
in
outsl
mov
pop
pop
loope
mov
es
xchg
add
jnp
sbb
lret
push
jbe
out
push
xchg
dec
testl
punpckhdq
loop
xor
fiaddl
lock
cwtl
pop
mov
jmp
fnsave
shrl
ss
or
sti
mov
das
dec
push
add
ljmp
mov
push
jg
movsb
inc
inc
sbb
popa
inc
cmpsb
sbb
cmc
mov
clc
inc
les
fnstsw
xchg
jno
push
sbb
int3
lea
sub
enter
jle
cmpsl
push
pop
sahf
jecxz
cs
xor
xchg
pop
repz
xor
les
outsb
xor
stc
lahf
adc
pusha
cltd
sub
mov
out
push
ficoms
adc
test
ss
inc
daa
pop
xorb
in
aaa
into
inc
inc
push
out
ret
xchg
sbb
jbe
fildl
xor
and
loopne
cwtl
es
cmp
arpl
lret
clc
push
push
bound
lods
and
adc
xor
setae
das
xor
xchg
or
sbb
mov
call
and
mov
xchg
fs
insb
div
loope
sub
or
sbb
insb
add
movsb
xchg
add
cmp
jecxz
sti
scas
xchg
movsb
push
lods
mov
mov
aam
andb
mov
scas
ja
jns
cld
jo
mov
notl
dec
jge
xlat
add
xchg
pop
lods
icebp
pushf
sahf
add
pop
jno
and
sbb
pop
sahf
mov
mov
xchg
popa
testb
pop
add
mov
cmpsl
jge
adc
push
stos
xor
insb
orb
mov
mov
xor
cmpsb
jle
push
roll
setg
lahf
jb
dec
lods
adcl
dec
imul
dec
xchg
ss
adc
mov
nop
fisubrl
roll
sti
xor
dec
pop
cmpsb
adc
imul
dec
jno
cmc
ret
or
insb
xchg
pop
adc
fs
sarl
call
pop
jmp
dec
cmc
jo
xor
call
or
das
add
popa
xor
fptan
push
xor
aaa
sbb
dec
std
nop
daa
das
jl
fs
int
inc
stc
xor
int3
pop
mov
push
out
test
pop
cmc
aad
or
jecxz
std
xchg
mov
push
inc
mov
mov
jle
bound
adc
xchg
cmpsl
sti
xor
je
adc
mov
hlt
add
fiadds
stc
sub
loope
jo
mov
push
jno
in
mov
fwait
icebp
dec
icebp
fnsave
xchg
lahf
inc
das
fimuls
mov
sahf
lea
mov
decl
pop
gs
xchg
inc
lahf
daa
mov
ret
rol
in
jecxz
frstor
fiaddl
mov
jb
divb
adc
movsb
cmp
dec
ret
insl
jmp
outsb
das
sub
or
and
mov
push
in
cmp
pop
jo
data16
sbb
xchg
adc
adc
inc
ficompl
lret
bound
xor
fldcw
or
mov
cld
mov
daa
sbbl
cmp
mov
arpl
push
dec
in
adc
sub
cmp
cltd
std
stos
sti
pavgb
fbstp
call
pop
fists
ljmp
dec
cmc
pop
cwtl
ds
inc
or
push
lock
push
inc
faddl
pop
movsl
lcall
cli
mov
mov
mov
push
ja
addl
xchg
flds
add
fadd
stos
inc
fldl
shll
pop
jne
mov
sti
movsl
sbb
test
mov
sub
push
in
test
cmovbe
dec
adc
xor
jg
in
pop
adc
inc
inc
inc
fisubrs
xor
cwtl
ja
in
test
addr16
lds
inc
repnz
out
clc
push
inc
and
cmpsl
push
lods
mov
stos
inc
ficoml
mov
pop
xor
xchg
inc
test
daa
sub
jns
lahf
repnz
jno
movsb
cli
mov
sub
mov
fmuls
mov
push
push
add
adc
out
into
gs
pop
push
addb
or
pop
scas
data16
aaa
pop
xor
sarl
int
dec
jns
mov
imul
adc
lods
ljmp
cs
outsb
arpl
adc
and
xor
outsl
fs
inc
push
and
mov
sub
int
add
push
mov
loope
push
cli
rol
jl
jns
stc
rcl
bound
stos
stc
inc
mov
in
pop
popa
sbb
cmp
sub
push
popf
iret
clc
push
jbe
sub
push
sbb
push
cmp
cmp
pop
call
or
sti
jnp
rorb
and
or
dec
test
pop
dec
rolb
add
stc
push
ret
outsb
out
int3
mulb
shlb
movsl
jns
pop
out
add
nop
sahf
cmc
inc
out
push
cmpsb
jge
je
std
stos
push
mov
das
inc
out
push
jae
jns
lds
loop
sub
les
add
jae
popf
xor
sbb
clc
inc
cmp
clc
cmp
cli
nop
shrl
int3
pop
jge
mov
out
sbb
in
jnp
jg
imul
push
mov
stc
dec
test
dec
aam
lret
jp
fwait
std
push
cmc
cs
lret
sbb
jbe
xlat
sub
movsl
jne
cmp
jnp
cmc
mov
mov
rorl
ljmp
pushf
jmp
inc
lret
test
mov
decl
lahf
int3
nop
ret
mov
xor
xor
xor
push
push
fwait
pop
out
cld
xchg
mov
mov
adc
add
enter
or
lret
sbb
jge
cmp
pushf
mov
das
cmc
or
adc
sti
inc
dec
fbstp
dec
loop
adc
jbe
loope
add
lock
int
adc
imul
sbb
sbbl
in
nop
daa
pop
lods
push
loopne
outsb
scas
inc
and
scas
inc
jb
out
xor
add
push
sbb
test
lret
rcrb
flds
cs
and
sub
inc
sub
rclb
push
psadbw
sub
mov
fbstp
repnz
push
dec
lahf
sbb
or
daa
and
xchg
push
dec
popf
xor
fisubrs
out
dec
xor
outsb
stos
and
loope
pop
insl
pop
loope
jb
rcrb
nop
mov
xor
sub
leave
xchg
pop
je
jge
in
or
xlat
inc
adc
test
andb
pop
aad
test
xor
hlt
dec
out
ret
mov
jge
test
stos
jle
les
pusha
ret
jmp
mov
cmpsl
jo
aam
mov
or
fwait
or
adc
pusha
les
fdivl
testb
mov
jl
add
movsb
ret
xchg
jmp
repz
jg
xorb
mov
out
pop
pop
jae
test
push
mov
add
and
mov
aam
inc
popa
insl
mov
mov
leave
aas
dec
loope
sub
dec
or
mov
and
cmpsl
test
mov
int
cld
mov
mov
ret
mov
les
frstor
insb
add
mov
jo
movsb
outsb
lcall
xchg
pop
inc
flds
inc
movsb
jp
fadd
lcall
ffreep
scas
mov
xchg
sbb
cmp
mov
push
or
mov
sbb
ja
pop
stos
push
cmpsb
flds
pop
mov
adc
inc
daa
add
data16
mov
jns
ss
stos
das
mov
call
sbb
enter
in
das
add
sbb
dec
filds
iret
xchg
out
and
mov
cld
insb
or
pop
adc
mov
sbbb
dec
and
das
inc
xchg
mov
jmp
int
ljmp
loopne
jecxz
addr16
mov
dec
push
jge
push
push
popa
add
rcrb
clc
or
cmp
xor
dec
pop
shlb
ljmp
insl
or
add
and
xor
xor
jb
bnd
stos
js
and
push
and
shl
ljmp
test
jecxz
out
adc
ret
lds
jecxz
sbb
jl
dec
lcall
pop
push
notl
aaa
mov
add
xchg
mov
mov
fwait
xchg
sub
sbb
cmc
mov
add
xorl
push
sub
jo
cmp
in
cmpsl
in
in
xchg
xchg
pushf
shl
scas
inc
push
iret
cmpsb
cmp
cmc
sar
sub
jo
xchg
push
cmp
arpl
aam
pusha
repz
dec
dec
pop
jno
loop
insl
push
aad
fists
fisttpll
mov
push
jle
fisubrs
push
rorb
gs
xchg
and
data16
and
lcall
or
outsl
xor
test
cmp
cld
jp
data16
adc
test
in
jns
into
lret
mov
bound
mov
xor
pop
scas
push
mov
lret
inc
movsb
popa
mov
pop
sarb
add
jp
mov
insl
jge
mov
mov
sub
je
enter
jl
and
je
dec
pop
lds
push
data16
shr
inc
pop
xchg
adc
filds
jl
std
or
inc
mov
hlt
cwtl
test
lahf
popf
jp
pop
in
pop
scas
mov
or
arpl
and
inc
inc
pop
jle
das
in
or
xor
pop
mov
std
xor
cmp
movsb
mov
out
test
stos
or
popf
cwtl
mov
lcall
sub
add
mov
and
mov
subb
inc
adc
call
sbb
aas
aas
push
add
jle
in
dec
inc
enter
cmpsl
dec
jmp
adc
jo
and
mov
nop
repz
popa
filds
push
inc
cwtl
lock
xor
cmpsb
stc
add
mov
mov
or
fwait
shlb
mov
adc
aad
xorl
pop
cmp
inc
dec
adc
scas
movsb
sbb
push
data16
ja
dec
arpl
mov
inc
and
and
or
outsl
xor
cld
xor
inc
bound
push
sbb
std
les
push
je
pop
ret
inc
pop
dec
lcall
insl
mov
insl
mov
fsubrp
repz
xor
lods
mov
lds
loope
out
cmp
adc
inc
gs
test
mov
jne
cli
scas
fdivrl
dec
pop
add
and
xlat
xchg
sub
pop
mov
out
in
fildl
lcall
inc
cli
or
push
jmp
dec
adc
push
insb
mov
stos
xor
fsubs
fdivs
push
sbb
sbb
pop
mov
out
insl
aam
fidivl
mov
mov
in
inc
sti
pop
fmull
xlat
pop
lret
mov
into
adc
jmp
ret
adc
inc
mov
sbb
out
mov
js
mov
std
iret
decl
popa
fldcw
movsl
sub
dec
out
cmc
sub
data16
push
ds
mov
popa
xchg
or
jae
lret
mov
dec
inc
mov
lods
stos
mov
incl
shlb
jns
daa
shll
inc
mov
jns
sub
int
or
adc
mov
sbb
inc
aam
pop
into
loope
fisubrs
movsl
aad
shlb
cmp
int3
out
mov
ja
mov
shll
sbbl
sahf
stos
push
out
movsb
sbb
aad
outsb
jg
in
push
inc
inc
push
xorb
stos
sbb
pop
daa
cmp
xlat
repz
mov
inc
arpl
or
and
pop
scas
sub
pop
scas
std
or
jae
outsl
rep
popa
inc
icebp
xchg
mov
jmp
rcrb
mov
pop
pusha
add
adc
int
jp
test
mov
jne
sub
in
out
sbb
sbb
inc
pusha
lahf
sbb
loop
rcll
push
jbe
scas
push
icebp
js
mov
mov
xchg
sub
xorb
cld
mov
inc
lretw
cs
jecxz
xor
test
fisubl
xor
or
hlt
cmp
aad
js
cmp
push
imull
sub
je
and
adc
shl
ss
and
fcom
pop
push
cli
dec
mov
insb
push
sbb
fidivl
repz
arpl
mov
inc
fcomp
mov
hlt
dec
xchg
test
fsubs
addb
jo
dec
mov
ret
es
shll
mov
mov
aad
aas
xchg
and
int
mov
addr16
imul
lods
inc
loop
mov
inc
jne
test
sbb
repz
sahf
push
addb
sub
data16
push
out
repz
scas
dec
loope
jo
pop
movsl
sub
scas
adc
cmpsb
cmpsb
rclb
les
lods
sbb
arpl
fidivrs
iret
arpl
pop
push
jb
xor
loopne
insl
lahf
and
mov
and
xchg
cmp
dec
in
ss
cmpsl
or
cmpl
lahf
ss
push
xor
imul
aad
mov
adc
cmpsb
fwait
out
test
pop
mov
push
mov
je
mov
dec
mov
mov
rcrl
stos
add
sbb
fldcw
xchg
jno
stos
sub
xor
pop
mov
fcoms
mov
mov
adc
rcrl
bound
hlt
addr16
adcl
aam
jecxz
iret
dec
sbb
jae
xchg
sbb
xchg
gs
push
xchg
popa
aaa
jecxz
notl
hlt
cmp
bound
sbb
inc
sub
xor
or
xor
inc
add
std
test
sbb
dec
mov
addr16
out
cmp
inc
pop
enter
das
push
lcall
cwtl
mov
jg
test
gs
xor
rorl
gs
outsl
cmp
and
out
shr
xchg
mov
add
jp
std
sub
ret
sbb
xchg
icebp
push
xchg
hlt
das
enter
lds
out
jle
es
jle
cli
into
jns
in
leave
das
addr16
ds
cld
sarb
inc
adc
out
in
inc
and
pusha
mov
jo
jno
mov
jecxz
xor
mov
lcall
pop
mov
jbe
sub
imul
hlt
push
fcmovnu
jge
mov
leave
pusha
xchg
enter
cmp
scas
loop
jle
aaa
add
inc
inc
decb
lcall
mov
fcmovu
cltd
scas
cmpsb
cmp
lahf
or
mov
and
push
inc
in
xchg
jbe
out
mov
stos
inc
inc
jp
mov
dec
dec
dec
mov
ret
xchg
mov
push
imul
xor
and
sbb
loopne
shl
hlt
out
out
fidivl
and
clc
dec
movsl
or
jns
shll
dec
dec
inc
insl
test
pop
inc
ficoms
lahf
and
inc
xor
dec
push
fcmovu
inc
pushf
inc
fimull
neg
fcoml
outsb
and
pop
push
add
pop
fldenv
mov
jns
adc
or
sub
adc
outsb
cmp
jae
insl
shll
sbb
stos
loopne
adc
sahf
les
jo
movsl
cmp
jmp
data16
cltd
xor
mov
adc
push
in
or
daa
bound
shl
fldt
mov
mov
mov
cmp
jle
std
scas
aaa
ret
dec
jo
test
inc
xor
imul
mov
sti
mov
xchg
sub
xchg
pop
mov
mov
or
test
ja
cmp
loope
insl
mov
fcomi
dec
sub
test
int3
shr
ficoms
fdivrs
insb
cmp
testl
imul
lods
xchg
psllq
mov
mov
std
lret
addr16
mov
out
decl
inc
popf
and
jge
clc
test
std
jno
pushf
in
repz
inc
add
movsl
aad
xchg
loop
imulb
xchg
stos
inc
lock
or
pop
leave
pusha
mov
xor
jne
xchg
mov
lea
subl
push
jge
stos
in
adc
xor
xlat
or
int
jle
xchg
cs
push
filds
xchg
icebp
jne
add
xor
cmpl
cwtl
mov
leave
mov
xchg
sbb
out
bound
adc
jp
push
add
sub
fdivs
fwait
leave
push
mov
fcompl
imul
int
jb
das
push
sub
stc
xchg
jecxz
inc
sahf
fsubl
pop
mov
cli
int
lea
xchg
fistpl
insl
nop
shrb
out
loopne
dec
aam
clc
insl
arpl
sub
mov
xlat
in
outsl
push
test
lret
cld
xchg
push
mov
mov
or
daa
jb
jo
mov
sub
cmovnp
pop
cltd
jecxz
sbb
mov
jo
movsb
mov
xchg
adc
sbb
rolb
sub
divl
scas
mov
fnstenv
imull
inc
mov
cs
icebp
sar
movsb
xor
or
jl
hlt
loope
out
mov
mov
cld
inc
fwait
pusha
out
bound
xchg
mov
adc
mov
cs
rolb
insb
jo
sahf
les
or
xchg
mov
xchg
pop
mov
in
pop
and
inc
cwtl
mov
in
mov
test
mov
push
movsl
rorl
ret
pop
rorl
sub
xchg
fcomps
enter
xchg
sub
dec
repnz
inc
icebp
test
in
cmp
inc
dec
lcall
xchg
mov
fs
fisttpll
repnz
int3
or
jl
lds
inc
dec
pop
ja
out
sbb
cli
dec
jmp
je
and
cmp
mov
mov
or
out
out
aam
lods
mov
mov
addr16
pop
sub
bnd
xor
pop
not
or
jl
and
movsb
lcall
adc
mov
rorb
ret
jnp
sbb
daa
or
add
push
or
inc
push
or
lock
and
test
mov
mov
push
dec
pop
or
daa
mov
stos
stos
mov
pop
call
sbbl
adc
cmp
in
test
xchg
cltd
fists
iret
dec
movsb
cwtl
xchg
lahf
sahf
in
xchg
hlt
mov
stc
sbb
aad
fidivl
mov
jp
mov
clc
hlt
jnp
or
push
adcb
xchg
or
pop
icebp
mov
push
pop
mov
xor
xchg
cmc
adc
push
mov
mov
mov
mov
dec
ja
js
aam
ret
in
dec
mov
cli
push
scas
sub
call
imul
or
sub
lahf
cmp
shlb
cs
das
out
mov
imul
xchg
cld
popf
andb
dec
mov
pop
pop
mov
xor
jne
shr
out
add
adc
ljmp
inc
pop
outsb
xchg
mov
cmp
inc
mov
sub
ret
pop
inc
dec
push
ss
ret
insl
loopne
rcrb
add
lds
cli
xchg
push
mov
inc
nop
xor
test
and
lock
mov
push
push
sub
cltd
bound
push
jmp
or
cli
cltd
rcrb
fisubrl
or
sub
xor
mov
loope
inc
inc
push
xor
data16
enter
in
adc
sub
jg
jl
inc
mov
addr16
jle
jnp
sbb
dec
lcall
xor
pushf
ficompl
std
orb
ret
repnz
mov
push
dec
xchg
push
xor
pop
sub
icebp
dec
push
psubd
cmc
adc
push
adcb
mov
stos
popf
testb
movsb
cmp
inc
pop
sbb
and
mov
mov
push
scas
mov
mov
pop
dec
jecxz
rclb
test
jp
inc
movsb
mov
lahf
stos
jecxz
aaa
pop
cmp
mov
lds
fisttpl
jmp
jge
sbb
xchg
and
and
add
insl
add
repz
stc
mov
sub
dec
pop
pusha
push
int
cltd
lret
pop
mov
mov
mov
sbb
pop
imul
cmc
shll
add
addr16
mov
fidivrl
ss
or
xor
cs
stos
inc
dec
dec
icebp
mov
dec
dec
cmpsl
imul
shlb
mov
xchg
or
ljmp
shll
pop
and
push
adc
subb
out
orb
into
loop
xchg
sbb
push
ret
sarb
test
sub
pop
pop
add
daa
lea
or
mov
xor
fiaddl
mov
sbb
repz
or
std
and
and
cmc
mov
inc
inc
fucomip
mov
fsts
daa
sbb
daa
sbbl
call
sbb
fstps
inc
mov
scas
cmp
mov
push
jae
rcll
mov
pop
lret
or
out
ja
dec
imul
insb
sbb
clc
dec
jae
or
enter
inc
ret
pop
jns
pop
fwait
xchg
lcall
mov
push
jmp
in
jo
arpl
xor
cmc
ret
rcrb
sahf
xor
pop
pop
mov
push
and
fs
lock
or
xchg
pop
movups
mov
pop
mov
mov
aam
xor
pusha
les
fnstsw
icebp
setl
jb
jmp
loope
or
nop
sbb
shrl
movsb
mov
jp
xchg
or
psllw
in
lods
sub
pop
pop
fcmovnu
out
add
fiaddl
bound
or
dec
xchg
pop
out
repz
sbb
int3
lret
fstl
scas
js
xchg
mov
mov
loopne
xchg
jno
mov
mov
popf
xor
mov
add
popa
mov
bound
lret
pop
arpl
nop
repnz
push
in
pop
shlb
fwait
push
cli
rorb
inc
loop
mov
bnd
or
ds
add
pop
mov
mov
into
and
rorb
clc
hlt
sti
cmp
popf
xor
dec
leave
fnstenv
inc
ficompl
xor
pop
test
decb
push
cmp
or
cmp
xchg
scas
in
inc
fisubs
jg
xchg
ljmp
addr16
es
call
lods
inc
pop
pop
or
lret
jmp
scas
cltd
sti
test
xchg
mov
dec
cli
xor
sub
test
imul
adc
or
lcall
cmp
outsb
adc
arpl
push
xchg
ss
add
xor
push
mov
arpl
push
imul
pop
inc
xchg
add
or
stos
in
cmp
frstor
test
adc
enter
sbbl
aam
lahf
sbb
sub
fnstsw
jns
mov
and
xlat
ficomps
mov
pop
xchg
adc
leave
xchg
adc
and
je
pop
inc
in
add
insb
dec
in
cmp
pop
mov
mov
out
shlb
mov
gs
mov
or
cs
jae
and
sub
push
popf
pusha
mov
outsb
icebp
mov
push
mov
adc
bound
add
or
or
jbe
roll
stos
push
xchg
sub
mov
in
xchg
outsl
jnp
jmp
xchg
sbb
je
pop
push
xor
dec
insl
push
add
xchg
sub
rolb
mov
sub
enter
jb
push
insb
pop
pop
xchg
call
fisttpl
fdivl
mov
idivl
mov
and
loopne
out
aam
sub
jne
jecxz
mov
loop
loope
and
inc
inc
inc
add
test
movsb
pushf
dec
inc
sub
cmpb
insl
xlat
push
push
popl
mov
leave
pusha
ret
or
insb
out
rorb
repz
xor
call
push
testl
xchg
mov
add
pushf
rcll
jp
xor
pop
adc
sub
cmpb
and
mov
xchg
loop
ret
adc
cltd
scas
das
cs
xor
sahf
adc
test
pop
cmp
add
lods
loopne
in
aam
aas
shrd
fidivrs
push
push
hlt
mov
mov
imul
jecxz
jp
xor
mov
cmp
fucomi
ja
test
test
dec
nop
mov
mov
sbb
ds
cltd
sub
jae
dec
jne
xor
aas
mov
popa
mov
mov
mov
inc
mov
stos
and
cmp
in
hlt
push
pop
es
jns
jne
adc
andb
adc
and
push
xlat
std
cmp
inc
loop
ficoml
mov
repnz
push
jns
enter
cmc
xchg
xor
xchg
cmp
gs
pop
repnz
cld
jmp
or
push
sbb
stos
fidivl
mov
cld
movl
in
xchg
pop
xor
pop
out
mov
or
inc
fldenv
inc
pusha
adcb
sarl
push
jae
loope
xor
jo
xor
call
sbbl
adc
push
shrb
push
insb
xchg
mov
xor
fucomi
out
sub
and
out
cmc
cmp
dec
ret
xchg
insb
inc
out
xchg
ret
aaa
call
add
call
movsb
testb
mov
into
ds
adc
and
push
subb
push
and
and
xor
jmp
mov
xor
xchg
mov
xchg
daa
and
push
gs
mov
or
dec
leave
pop
aaa
jl
ret
mov
pop
arpl
pop
cmc
adc
outsb
pushf
outsl
jnp
xlat
add
jmp
popa
sbb
nop
adc
out
add
mov
int3
insl
dec
push
jbe
mov
aaa
mov
push
jecxz
rcr
inc
pop
cmpsb
imul
push
add
mov
push
adc
hlt
pushf
in
adc
cmp
pop
call
fnstsw
lock
push
jmp
pop
loope
inc
adc
inc
int
jo
data16
rorb
xorb
inc
add
pop
out
popf
mov
mov
insb
orl
adc
push
dec
mov
push
mov
jb
call
std
nop
mov
xor
mov
sub
je
mov
in
mov
ljmp
insb
mov
js
nop
mov
dec
sar
inc
out
js
into
setl
sbb
lods
jns
xchg
cmpsl
fxch
arpl
inc
nop
sbb
ljmp
out
add
sbb
repz
mov
dec
loop
xchg
es
push
rcl
lea
loop
cmpsl
test
ss
call
xor
lds
lahf
lock
movsb
sarb
orb
jg
xchg
sbb
xor
jmp
mov
mov
add
mov
sahf
push
and
test
push
push
mov
iret
xor
pop
sbb
mov
repz
cmpsl
mov
push
enter
test
loopne
stos
mov
xor
mov
sbb
bound
test
aam
jmp
inc
mov
cmpsb
jle
cmpsl
ja
test
jle
pop
pop
mov
mov
mov
mov
dec
cmp
push
rep
or
mov
or
loope
mov
in
scas
dec
lcall
sbb
sub
mov
idivb
stos
test
jmp
inc
scas
mov
pop
sub
inc
adc
pop
call
shrl
hlt
outsl
iret
jo
lretw
sub
fldt
sahf
jmp
lret
mov
std
cmp
push
mov
pop
test
outsl
sub
or
jnp
sub
pop
dec
add
jnp
xor
ja
lds
insl
call
pop
or
sub
sbb
lods
andb
push
pop
sbb
xchg
inc
bndstx
add
movsb
rcrb
jl
xchg
push
imul
pushf
aaa
or
in
test
subb
xchg
loop
lcall
icebp
ror
insb
xor
mov
repz
mov
push
arpl
jnp
fstl
push
sub
pop
in
in
jo
setg
in
loop
ljmp
xchg
or
pop
idivb
sub
push
in
push
dec
jo
jg
or
sub
rol
outsb
dec
icebp
pop
pop
dec
xchg
or
loopne
push
jae
jge
outsl
adc
cli
ds
xchg
sbb
mov
push
ret
adcl
fnsave
outsl
iret
mov
or
daa
mov
sub
int3
data16
or
sbb
sub
lds
dec
pop
push
cmpsb
ljmp
add
xchg
sub
dec
add
push
dec
xor
ret
aad
sbb
sub
mov
mov
push
mulb
je
dec
pusha
das
mov
mov
idivl
pop
push
sbb
das
hlt
jg
movsl
dec
pusha
mov
pop
loop
mov
mov
data16
fsubrs
scas
inc
push
pop
fwait
xchg
sbb
ds
test
mov
imul
mov
es
addb
or
mov
int3
pop
out
sti
mov
loopne
inc
in
pop
mov
cwtl
test
nop
xchg
pop
scas
adc
xchg
mov
dec
lahf
jecxz
or
cwtl
pushf
incl
xor
jg
push
insb
adc
repnz
xor
jbe
pop
dec
fnstcw
std
or
test
not
call
pop
cmp
add
out
or
push
hlt
xor
mov
fimuls
add
and
dec
pop
daa
nop
daa
arpl
pop
add
fnsave
adc
arpl
stc
adc
jae
imul
mov
clc
aam
cmp
or
xor
inc
adc
sub
push
popf
pushf
pop
adc
mov
and
stc
dec
out
jb
sbb
dec
xchg
jbe
shl
sub
mov
and
mov
imul
movsb
pop
gs
movsl
or
addr16
mov
orb
in
sti
and
dec
loopne
je
enter
shlb
cmp
mov
pop
or
jo
or
dec
cmpsb
addr16
lcall
fisubl
mov
stos
cltd
jnp
inc
jmp
inc
adc
cmpsb
lods
std
xchg
ficoms
cs
je
push
cmpsl
scas
pop
std
pop
loop
pop
dec
test
jle
fs
push
mov
xor
inc
fs
imul
mov
pop
mov
mov
aad
xchg
cs
ja
sbb
jecxz
outsb
mov
mov
lods
loop
fbld
add
jne
xor
adc
dec
xor
repz
or
sub
xor
and
aad
adc
loope
jns
jnp
or
jmp
xor
push
xor
xchg
pop
into
outsl
push
xor
jmp
notb
ret
add
negl
mull
cmp
push
or
pop
insb
jle
faddl
mov
adc
or
xchg
mov
add
xchg
imul
js
add
xor
cmc
rorb
imul
fidivs
shlb
roll
pushf
mov
mov
lret
shll
in
incb
pop
out
jne
cmp
jne,pt
jo
or
mov
sarl
lcall
repz
add
mov
inc
out
data16
arpl
loope
sahf
jmp
mov
lods
xchg
pop
pusha
lods
mov
pushf
and
inc
rolb
icebp
adc
shrl
sbb
sti
mov
mov
mov
dec
or
cs
jle
inc
mov
mov
jne
sahf
lahf
shrl
xchg
stos
pop
pop
popa
out
ret
out
xchg
bound
xchg
sar
dec
pop
call
add
inc
push
push
sub
xor
out
push
jg
jecxz
lcall
xor
sub
insl
mov
push
ret
xor
and
in
xor
fdivs
jmp
add
hlt
out
loop
or
cs
jmp
cmp
lds
add
mov
adc
push
insb
inc
mov
pop
gs
push
xchg
push
or
sbb
sub
cmp
jns
push
iret
cwtl
adc
mov
xchg
cmp
mov
cwtl
lods
xor
movsl
out
mov
adc
pop
imul
xchg
xchg
push
mov
mov
jmp
fdivrs
mov
fyl2x
push
out
mov
movsb
pop
out
enter
movsl
cs
inc
test
jb
adc
fsubs
sbb
dec
xchg
ljmp
mov
jne
mov
ja
mov
cmc
push
movsl
adc
pushf
arpl
sub
in
xchg
decb
sbb
shlb
push
pop
jg
mov
lea
or
sub
push
fdiv
sti
xchg
and
mov
cmp
loope
call
outsl
daa
inc
in
sub
sub
sub
loopne
dec
pop
hlt
add
stc
push
aaa
loop
sbb
pop
inc
jmp
lea
mov
popa
insb
loope
or
rorl
or
adc
inc
test
push
sbb
mov
add
mov
jmp
or
xchg
add
test
testl
sub
lds
xchg
add
outsl
mov
enter
nop
data16
mov
icebp
adc
sub
xor
push
xor
lea
xchg
jbe
scas
push
xor
xchg
lock
pushf
test
mov
push
inc
add
sbb
lods
inc
pop
fidivrs
cltd
cmpsb
imul
add
push
lods
enter
and
int
push
push
mov
xchg
lock
pusha
jo
sbb
test
das
fimuls
cltd
stos
mov
ds
lock
jp
mov
fistps
xchg
mov
lods
icebp
out
cmp
dec
repz
mov
jp
and
dec
leave
xlat
jl
es
mov
inc
mov
je
fbstp
inc
sarl
pop
pop
mov
test
mov
jecxz
mov
push
data16
mov
inc
ja
add
pop
roll
imul
insl
jae
stos
inc
mov
sbb
loop
das
jne
adc
cli
and
fildl
out
inc
call
jbe
pop
mov
out
test
push
jb
cmpsb
cmc
mov
incb
xor
add
cmp
mov
shll
add
test
push
pushf
cmp
mov
pop
clc
in
cmp
movsb
scas
dec
cld
xlat
stc
ljmp
push
xor
in
add
into
aaa
loopne
fmuls
mov
into
pop
pop
mov
add
mov
cmp
js
sahf
inc
lret
cltd
push
imul
dec
xchg
imul
mov
adc
sbbb
sub
rol
ss
out
test
jl
adc
nop
sbb
adc
movsb
shlb
in
cmpl
stos
mov
out
cmpsl
mov
stos
std
jno
fucomip
xchg
sbb
dec
ret
int3
jmp
jp
sub
hlt
xchg
fwait
jns
das
test
out
xchg
add
movsl
stos
pop
adc
inc
xchg
shll
push
fnstenv
nop
pop
mov
push
pusha
or
sub
jbe
pop
cs
scas
inc
mov
sbb
add
fldcw
out
lock
lcall
sub
mov
call
cmp
dec
out
cmpb
dec
clc
seto
add
sub
push
jae
push
mov
push
aam
decl
mov
add
mov
cli
int
or
popf
push
push
xor
iret
popa
out
insl
call
js
cmpsb
cmpsb
jno
jl
movsl
notb
add
addr16
mov
push
push
je
xor
inc
loopne
mov
xor
frstor
bound
dec
pop
bound
lahf
sub
pop
insb
inc
xchg
sbb
jecxz
xor
sbb
jmp
movsl
cmp
push
sub
cmp
les
jle
mov
gs
sahf
in
test
decb
mov
pop
in
mov
lods
lods
cmpsb
inc
inc
inc
pop
and
xchg
int
pop
inc
mov
jmp
ret
jno
cld
push
les
sti
in
xor
add
cmp
scas
dec
je
or
divb
rclb
out
loop
scas
inc
and
in
or
cmp
addb
orl
scas
mov
mov
adcb
cmpb
jmp
inc
ljmp
cwtl
clc
inc
cmpsb
in
xchg
dec
lcall
hlt
xor
and
add
scas
negl
nop
cld
pop
aaa
pushf
xchg
out
inc
test
xor
dec
mov
push
insb
sub
dec
loopne
stc
mov
sbb
mov
movsb
mov
orb
fwait
mov
mov
cmp
mov
es
mov
mov
mov
pop
xor
push
fsubr
stc
add
and
push
pop
inc
sbb
sti
or
adc
push
fs
jo
addl
stos
cltd
insb
add
int3
jns
mov
les
jno
pop
sub
mov
mov
adc
xchg
dec
push
negb
push
mov
iret
adc
mov
inc
and
aad
cld
jbe
stc
or
jae
push
iret
rol
inc
and
xor
pushl
push
push
jmp
stos
lock
add
test
fisttpll
lahf
dec
push
movsb
dec
in
popf
outsl
mov
dec
sbb
jge
and
add
inc
aas
insb
addr16
inc
lret
xchg
push
mov
mov
sbb
xor
or
pop
xor
loop
shrl
mov
sub
pop
mov
sbb
dec
xor
mov
xchg
sarb
js
mov
outsb
std
xorb
xchg
mov
jo
out
push
test
mov
test
lahf
stc
xor
xlat
push
loopne
sbb
and
push
test
push
enter
mov
pop
subl
and
xor
stos
scas
sbb
aas
lods
adc
sub
sub
xlat
jns
in
mov
imul
add
gs
repnz
insb
lahf
rorl
loop
xchg
add
call
gs
push
sub
xor
or
jns
nop
mov
loopne
and
sbb
inc
xchg
out
pop
outsb
xchg
popf
lock
ja
scas
add
dec
lea
jecxz
outsl
rcrb
dec
xchg
fbld
jl
flds
xor
jbe
pop
test
mov
mov
out
cmp
clc
inc
dec
pusha
js
pushf
xor
pusha
mov
ret
rolb
dec
aad
mov
push
lret
aas
sti
cmp
push
jmp
sbb
rcr
cld
cld
pop
lock
mov
subb
std
mov
ret
hlt
out
cmp
sti
mov
test
outsb
gs
jmp
fwait
into
pop
shrb
out
and
aas
stos
xchg
pop
dec
push
xchg
sub
outsb
in
or
imul
into
jo
call
mov
test
push
dec
adc
or
jmp
xor
mov
push
mov
sub
data16
lods
xchg
dec
mov
or
int3
imul
into
mov
mov
iret
test
stc
test
sarb
mov
out
inc
movsb
dec
mov
sti
hlt
mul
outsl
sbb
lea
lret
dec
mov
mov
int
loop
jno
push
insb
push
mov
imul
xchg
dec
mov
cltd
out
pop
sbb
add
xchg
and
insb
clc
shll
call
xor
aad
shrb
pop
mov
and
not
inc
incl
cld
ret
push
aaa
dec
int
xor
mov
adc
sti
cmp
fnstsw
fstpl
pushf
sti
xor
xor
xor
cs
lds
movsb
cli
imul
enter
pop
mov
fsubrs
pop
mov
xlat
mov
mov
daa
cwtl
aas
push
leave
nop
sub
push
lods
ds
fwait
jne
iret
add
xlat
cmp
and
fwait
xor
bnd
xchg
les
imul
mov
imul
pop
test
xchg
shlb
xor
dec
in
add
push
jle
mov
mov
sti
sarl
push
mov
inc
and
fiaddl
aad
mull
rolb
lea
and
fcomps
jg
jle
negb
shrb
pusha
arpl
sub
mov
jae
xchg
ret
outsb
iret
dec
in
fcoms
mov
jg
xchg
insb
test
ljmp
jmp
mov
insl
insl
loopne
mov
pop
clc
or
repz
xor
clc
lcall
jmp
xchg
push
and
arpl
int
fidivrl
sahf
jnp
dec
pop
mov
pushf
ss
movsl
sbb
adc
adc
sub
cwtl
push
pop
pop
imul
and
add
mov
insl
inc
and
das
mov
ffreep
daa
mov
push
fwait
cmp
daa
fwait
aaa
or
ljmp
repnz
hlt
inc
int
and
lea
mov
lea
or
mov
sarb
mov
ficomps
xlat
fnstenv
xor
negl
rolb
xchg
inc
push
pusha
jp
inc
enter
aas
xchg
sti
xor
pop
test
sbb
sbb
push
mov
insb
popa
jnp
xchg
fists
test
adc
addr16
divl
scas
stos
test
loop
andl
xor
pushf
pop
je
cmp
ret
xlat
sub
pop
lods
test
mov
dec
enter
cmpsb
inc
jg
xor
inc
jle
aaa
mov
pop
nop
adc
push
into
arpl
mov
je
addl
mov
mov
inc
jmp
aaa
pop
lods
mov
push
icebp
mov
fdivl
lret
sti
xchg
std
sub
xchg
pop
push
sbb
scas
jo
shll
ret
push
ljmp
sbb
sbb
lcall
mov
sbb
push
xchg
push
mov
pop
xchg
mov
push
mov
pop
xchg
jae
shrl
lods
push
mov
sbb
shll
or
mull
pop
cmpsl
add
daa
xor
loopne
adc
pop
mov
or
iret
xor
pop
ss
push
clc
js
cs
mov
dec
adc
testl
aam
push
cli
dec
mov
js
jge
loop
pop
repz
mov
and
fistpl
icebp
pop
in
ja
shrl
mov
mov
js
lock
xor
xor
into
dec
fdivl
mov
dec
dec
pop
lods
mov
je
mov
xlat
sbb
aas
lds
adc
mov
fistpll
mov
outsb
in
pop
in
inc
jne
jge
data16
mov
cltd
sti
jle
imul
dec
jge
cmc
mov
lret
jg
mov
pop
mov
push
nop
mov
inc
mov
stc
jbe
add
dec
inc
mov
cmp
loop
stos
repz
aad
scas
xor
push
lret
insb
test
jno
xchg
inc
iret
push
push
sub
cmpsb
push
push
push
lret
push
add
push
pop
inc
or
out
divl
rorb
inc
leave
mov
insb
data16
popf
out
sbb
pop
icebp
lods
shrl
lret
pop
cwtl
ret
in
test
xorl
inc
sti
adc
mov
stos
popa
and
stos
or
push
cwtl
int3
mov
or
ret
add
add
rcrb
adc
call
mov
cmp
nop
push
loop
mov
nop
jnp
push
or
mov
pop
movsl
mov
xchg
adc
xchg
lock
and
fsubr
icebp
mov
cmp
sbb
fidivs
arpl
or
adc
mov
jp
test
addr16
inc
mov
dec
pop
daa
repz
inc
inc
push
xchg
sbb
xor
mov
fwait
adc
push
cmpsb
ret
cmp
mov
sbb
sbb
cltd
xor
popf
mov
lock
or
ds
lods
call
in
mov
ficoml
mov
adc
scas
hlt
or
dec
pop
cmp
jecxz
mov
imul
mov
sub
pop
enter
lahf
rol
xchg
or
cmp
cmp
ja
pop
test
pop
out
adc
je
shrb
pop
std
dec
dec
xor
stos
lds
xchg
push
push
push
jmp
cmp
dec
test
inc
jecxz
sbb
out
cmpsl
mov
add
sbb
push
sbb
stc
xchg
icebp
xchg
repz
cmpsl
mov
jle
cwtl
xlat
movsl
adc
inc
adc
pop
xor
lods
mov
ficomps
lret
push
addr16
pop
fwait
mov
jae
repnz
xor
je
add
aad
les
aas
fsubrp
mov
outsl
sbb
mov
inc
cmpsb
mov
add
divb
lcall
push
jae
test
jnp
aad
xchg
inc
adc
jno
mov
cwtl
je
cwtl
mov
and
into
ret
inc
jo
pop
inc
or
cmpsl
sub
mov
dec
push
jg
aad
je
xchg
pop
add
or
mov
jle
push
rorl
int3
inc
inc
cmc
and
lahf
adc
shlb
xchg
and
test
icebp
xchg
adc
mov
rorb
ljmp
arpl
rorb
dec
lcall
es
in
sarl
lock
pop
cli
add
js
xor
cld
gs
dec
hlt
or
push
add
and
xor
cmp
fisubs
int
cmc
ss
xor
sbb
dec
iret
pop
fidivl
lods
or
divb
imul
lods
cmc
mov
inc
xchg
mov
out
jg
adc
push
fs
xchg
add
jb
mov
dec
test
lock
mov
ss
fwait
xchg
rcrb
pop
mov
dec
into
rolb
lds
jo
mov
fmuls
fildll
cmp
sub
shll
fdivl
loope
cmp
xlat
in
loopne
pop
push
leave
stos
inc
repnz
cwtl
pop
lret
xlat
call
out
pushf
dec
bound
data16
out
sub
shl
jp
mov
cmp
mov
in
fstl
popf
sub
ja
adcl
jmp
sti
mov
sub
fcomip
and
fnstenv
jns
pusha
jg
adc
shrl
mov
mov
jp
cmp
cmpsb
jg
pop
out
inc
loope
je
mov
push
imul
pop
mov
shrb
cli
loopne
cmp
test
cmp
repnz
push
test
xchg
jl
xchg
test
jle
add
mov
adc
jae
sbb
jg
mov
arpl
iret
rclb
data16
pop
xorl
pop
xchg
adc
fildl
and
add
imul
mov
mov
pop
ret
mov
mov
push
mov
cmpsb
addl
dec
sub
xchg
ret
add
lods
loope
push
adc
xchg
into
nop
jge
pop
jecxz
aad
jge
xor
aam
jno
pop
int3
arpl
repnz
or
outsl
insl
add
addr16
bound
ret
jbe
js
int
and
mov
pop
inc
dec
repz
ds
rcrl
cmp
nop
and
subl
in
add
aaa
xchg
pusha
in
into
add
adc
outsl
cltd
pop
lods
dec
pop
mov
jbe
jl
test
dec
cld
mov
int3
xor
cmp
mov
lahf
mulps
dec
inc
data16
mov
subb
jle
cmc
cs
ret
pop
inc
enter
insl
cmp
and
sbbl
mov
stos
hlt
loope
push
xchg
dec
or
aad
popf
add
pop
dec
in
nop
gs
imul
xorb
fcom
cmpsb
scas
cli
fwait
cmp
aad
int
scas
ja
shlb
inc
sbb
cmpsl
pop
ljmp
mov
lret
cmpsb
lret
scas
mov
dec
or
lods
mov
mov
and
shlb
mov
adc
roll
inc
popf
in
xlat
sbb
pop
push
jno
jne
inc
lcall
lret
and
ss
or
nop
fwait
pop
ret
test
mov
mov
xchg
out
inc
dec
adc
fdivl
ja
std
cmc
sti
rdtsc
xchg
dec
out
dec
push
xchg
sub
sarl
inc
stos
hlt
or
fmull
sbb
mov
mov
imul
add
daa
cmc
aad
cmp
loop,pt
sub
sbb
dec
loop
bound
ljmp
aad
movsl
pop
cmpsl
push
cmp
ret
pop
stos
xchg
mov
jge
shl
rol
cmp
xor
in
test
lret
or
or
sub
aas
test
int3
fdivrl
movsl
sub
cs
and
cmp
shll
lahf
dec
insb
sub
mov
arpl
dec
push
insb
jg
dec
cmpb
jnp
pop
movsb
jns
adc
inc
pop
xchg
jno
hlt
stos
or
mov
mov
daa
outsl
cmpsb
or
pop
addr16
call
hlt
fsubrs
and
cmp
out
ljmp
pop
aad
mov
sbb
test
mov
jp
add
pop
add
sub
mov
push
dec
add
xorl
je
xor
dec
rcll
jne
lret
and
mov
mov
ds
fsubr
movsl
jg
push
and
fnstsw
push
push
sub
iret
fbld
and
fisubrl
stos
inc
jbe
jbe
outsl
push
lret
pop
montmul
cmpsb
inc
mov
gs
pop
mov
or
out
mov
sbb
inc
sub
mov
inc
stos
das
mov
orps
jmp
add
addl
insb
adc
pop
lret
test
mov
add
adc
adc
jbe
cs
rcrl
imul
aad
xchg
sub
cltd
clc
xchg
jp
shl
sar
jle
xor
ss
test
in
push
std
xor
xor
daa
push
andl
mov
xchg
inc
clc
out
sub
jbe
in
lea
rolb
adc
xor
xchg
fcmovb
imul
dec
loop
dec
movups
mov
mov
gs
lods
push
das
mov
mov
data16
or
cmp
adc
gs
adc
orb
jne
ss
jge
xchg
fidivrl
ret
lret
mov
stc
jmp
xor
ret
insl
pop
mov
dec
insl
clc
lock
mov
cmp
xchg
jno
push
ljmp
lea
rolb
inc
sar
mov
cmp
pop
outsl
sub
mov
push
repnz
pop
pop
pop
xchg
adc
jne
inc
lods
and
fldcw
sar
jno
mov
aas
inc
aam
jb
pop
les
jg
sbb
jecxz
pushf
in
push
out
xchg
mov
push
cmp
loope
rclb
push
pop
movsl
add
jge
test
repz
push
push
aas
mov
fcomp
clc
cmpsl
mov
sbb
stc
ds
cmp
cmp
clc
mov
mov
fstl
push
gs
js
ds
popa
shll
cwtl
das
push
fstpt
inc
aaa
add
push
in
sub
mov
icebp
sub
xor
popf
cmp
nop
pop
cmp
in
dec
dec
cmp
pop
xor
xchg
out
add
xor
enter
xchg
sti
idivl
sahf
fnstcw
call
or
or
pop
mov
sbb
mov
adc
negb
xor
mov
mov
clc
jae
fdivrs
loopne
icebp
xchg
mov
into
jge
xchg
loop
mov
xor
mov
xchg
pop
xor
mov
cwtl
lods
fadds
xor
bound
cmp
adc
shl
ret
add
hlt
and
push
lds
sbb
mov
or
cmc
nop
lods
in
xorb
loope
scas
sub
fidivrl
arpl
popf
lods
mov
push
cwtl
insl
push
leave
enter
adc
jp
fwait
xor
inc
xchg
mov
xchg
push
nop
mov
jae
xor
cmc
xor
jge
cmp
sbb
lods
jnp
push
jmp
xor
xor
fwait
aaa
je
pop
xor
and
insb
fnstsw
inc
push
xchg
sub
out
mov
dec
mov
shrl
ja
jnp
gs
adcb
inc
and
shll
xchg
incl
cmpsb
loope
loopne
dec
popa
push
mov
inc
push
xchg
frstor
stc
cmpsl
movl
lret
mov
fbstp
imul
sub
je
out
repz
outsb
adc
test
add
push
pop
pushf
dec
sbb
jp
loopne
dec
xor
xlat
loopne
mov
lods
aas
add
pop
mov
cmpsb
xor
xor
andl
in
test
repz
int
add
inc
inc
pushf
sahf
jl
lds
and
aas
push
push
aad
loopne
push
fidivl
pop
dec
mov
stc
in
ret
inc
sbb
icebp
addr16
mov
mov
or
inc
shrb
add
mov
movsb
lods
mov
pop
nop
negl
inc
push
pushf
pusha
sub
enter
sti
mov
add
mov
dec
in
rol
inc
xlat
cmp
xor
sbb
jb
insb
call
dec
jo
mov
inc
out
sub
mov
xor
xchg
adc
cmp
outsl
cmpsb
mov
rcrb
mov
ja
push
data16
xor
push
jmp
xor
adc
loopne
dec
incb
shrl
adc
cmp
adc
sub
imul
ss
inc
jmp
lahf
cmp
or
sarl
repz
mov
sub
daa
mov
fdivrl
sbb
xor
addb
test
inc
mov
in
inc
inc
push
sti
bound
iret
mov
in
jns
jo
cld
adc
mov
in
popa
movsb
mov
adc
in
movsl
xor
xlat
and
loopne
jnp
fcomps
and
cmp
mov
mov
je
pop
and
push
sahf
out
out
in
xor
mov
inc
stc
imul
imul
out
mov
mov
xor
ljmp
fcoms
xlat
push
fsubr
aaa
ret
push
rcrb
cmp
inc
lds
out
add
or
mov
pushf
jl
test
fists
add
jmp
add
pop
inc
push
imul
push
and
and
and
pop
push
testl
push
bound
xor
or
push
mov
push
inc
pop
jns
add
inc
ljmp
test
adc
daa
mov
adcl
jbe
lods
jmp
xor
cmp
seto
or
inc
out
lock
lcall
adc
pop
loopne
icebp
inc
sbb
in
neg
scas
add
int3
mov
or
nop
insb
pop
and
inc
adc
aam
mov
lods
fs
sub
mov
pop
insb
cmp
das
push
cmc
es
push
fisubrl
ss
aam
push
inc
fwait
pop
xlat
push
add
xor
xor
mov
rclb
mov
lahf
cmp
movsl
sbb
pop
adc
sbb
cltd
daa
or
mov
mov
rcr
mov
or
testb
ja
xor
gs
dec
xlat
mov
fildl
jo
push
stos
lret
fwait
sti
gs
add
enter
enter
jb
in
mov
les
pop
je
mov
ret
xchg
cli
sbb
mov
movsb
js
es
mov
or
dec
xchg
pop
dec
push
jbe
jle
jo
mov
lods
mov
mov
test
or
mov
mov
push
jae
sub
arpl
daa
shll
test
mov
fsubrs
cmpsb
mov
push
mov
pop
hlt
movsl
xchg
in
push
pop
movsb
mov
xchg
add
push
jmp
lahf
xlat
jmp
mov
orb
aad
adc
int3
out
xorb
stos
mov
fs
push
cmpsb
jg
aam
cmpsb
std
add
cwtl
cmp
rcrl
jle
or
push
and
leave
arpl
mov
mov
hlt
push
or
pusha
inc
sti
jae
jae
adc
jge
adc
popf
addr16
lret
add
push
lret
test
inc
mov
scas
nop
repz
jo
nop
pop
out
inc
sub
mov
mov
cmpsl
jnp
lcall
das
mov
mov
shlb
adc
jmp
cs
loop
mov
mov
imull
jecxz
sub
orb
xchg
mov
push
mov
ffree
or
jmp
popa
mov
pop
nop
mov
fnstsw
fsubl
push
ret
hlt
and
push
xchg
lcall
lahf
out
mov
andb
aas
push
adc
jne
cmpsb
jns
addr16
stos
sbb
dec
sub
daa
iret
outsb
orl
cs
lret
negl
icebp
lods
mov
aad
pop
cmc
sbbb
mulb
xor
inc
hlt
xchg
xchg
sbb
sbb
imul
add
mov
or
add
lods
xor
push
dec
nop
jle
lods
out
aad
dec
add
adc
xor
push
outsb
ret
lock
cmc
xor
push
cltd
xor
xchg
jmp
or
out
in
mov
test
or
xor
fwait
sti
and
push
orb
loope
xchg
lock
and
cltd
in
pause
cs
sub
push
fwait
into
xlat
lea
mov
cmp
cmpsl
sbbb
cmp
cli
stc
xor
sbb
xchg
loopne
push
adc
cmp
cmp
sub
sub
mov
add
cli
mov
xor
cmpsl
inc
or
inc
dec
mov
roll
ret
push
call
enter
adc
fisubs
inc
cld
pop
sahf
scas
jnp
lea
lods
jb
xchg
iret
dec
ja
in
aam
push
addl
lods
loopne
adc
test
and
push
les
ret
lret
outsl
jnp
cmp
adc
mov
jnp
lea
mov
out
decb
loope
cmp
push
mov
jle
sub
fcmovnu
imul
std
jnp
bound
dec
iret
xchg
dec
inc
xor
mov
cmp
repnz
jno
jecxz
ja
lret
aas
mov
mov
and
inc
mov
pop
push
leave
pusha
inc
mov
mov
push
add
sub
fcomps
mov
aam
xchg
and
cmove
jge
mov
mov
lret
fldt
xchg
push
repz
in
adc
inc
or
and
ficompl
pop
dec
jb
jge
mov
or
scas
cmp
andb
jle
outsb
popa
xor
es
push
or
cli
or
cmp
push
lea
sbb
xchg
movsl
mov
stos
popa
icebp
iret
scas
aaa
xchg
adc
pop
jl
jmp
icebp
push
rorb
lea
mov
dec
xchg
dec
sub
movsl
sbb
jecxz
sub
cmp
mov
mov
push
pop
addr16
movsl
jmp
mov
stos
cltd
outsb
and
fisubrs
cld
lods
popf
jecxz
stc
mov
sbb
movsb
jbe
add
inc
bound
jo
push
add
js
les
stc
dec
or
fcomps
stc
xor
dec
enter
cli
pusha
pop
out
jmp
pop
xor
cmp
sbb
push
cs
push
pusha
adc
pushf
xor
sti
xor
mov
rorb
mov
imul
aaa
add
test
pop
test
outsb
pop
dec
mov
pop
cmp
shll
fisttps
mov
pop
mov
mov
cmp
mov
sub
inc
pusha
xchg
imul
outsl
pop
push
sbb
shrb
les
enter
sbb
shl
icebp
fs
test
adc
inc
leave
das
ret
movsb
cmp
ficompl
or
ret
pop
jecxz
pop
cmp
mov
pop
or
cmp
inc
push
cmc
or
cmp
xor
add
mov
push
and
test
push
xchg
sbb
out
dec
repnz
xor
jmp
push
mov
and
fadds
mov
outsb
imul
enter
stc
rcrb
int
pop
inc
gs
ret
jle
ucomiss
outsb
cmc
push
xor
or
fmul
and
jmp
cli
adc
fwait
ss
push
cmp
inc
sbb
lea
clc
or
ljmp
pop
cld
pop
mov
push
mov
xchg
inc
hlt
sbb
sub
mov
sub
add
popf
ds
and
pop
sbb
or
or
es
movsb
fmuls
inc
push
and
ret
cmp
push
cltd
mov
and
inc
mov
aad
sub
mov
mov
sub
xor
pop
lahf
mov
pop
pushf
or
dec
out
in
dec
sbb
mov
daa
xor
dec
sbb
sbb
jle
sbb
jle
cmpsb
ds
cmp
pusha
cmp
shll
pop
and
fistl
mov
lock
sub
loop
mov
test
push
mov
pop
jbe
mov
sub
or
sbbl
sub
mov
jbe
jnp
std
daa
loope
je
pusha
jl
sbb
mov
mov
scas
inc
cmp
test
js
push
jmp
adc
push
add
mov
inc
aam
ja
fidivl
cwtl
into
gs
pusha
jns
xchg
mov
lcall
in
push
aam
push
push
movsl
insb
sub
cli
push
scas
jno
sbb
cld
mov
cmp
and
push
jbe
mov
mov
fnstcw
fcmovbe
stos
or
and
jl
imul
fmull
lret
psubsb
dec
fiaddl
into
or
pop
cmc
inc
loopne
cmp
sub
repz
int
sbb
fsubrl
pop
or
jg
jbe
mov
jle
cmp
add
roll
fs
jae
inc
fsubl
sbb
fsubrs
outsl
shlb
aaa
push
loop
lea
jns
movsl
icebp
cmp
or
loope
notl
cmpsb
lds
jb
repz
push
lock
cmp
jg
mov
movsb
das
mov
xchg
sbb
mov
inc
mov
inc
jg
js
lock
xchg
sub
je
pop
pop
jg
inc
and
mov
pop
mov
pop
int
or
sub
sub
sahf
daa
sti
lods
inc
ret
ljmp
push
jns
adc
add
or
and
dec
std
pusha
pop
push
jge
or
aaa
pop
mov
ds
neg
in
ret
pushl
lret
push
sub
loop
aaa
pusha
xchg
sub
int
pop
js
mov
sub
add
xor
test
rol
add
inc
mov
add
mov
jle
mov
inc
mov
mov
xchg
and
fstp
and
dec
leave
push
mov
push
mov
gs
andl
loope
shlb
in
jbe
sub
jae
mov
loopne
lock
iret
xchg
dec
mov
sub
push
aad
mov
dec
int3
lret
shrb
dec
js
dec
mov
es
test
or
mov
cmp
mov
ficoms
test
shrl
je
mov
and
cmc
paddq
push
push
nop
sbb
sbb
pop
mov
add
cmp
add
stos
add
jne
jbe
nop
imul
int3
pop
jnp
mov
mov
call
xchg
jns
lcall
pop
scas
imul
mov
xchg
dec
aad
jnp
insb
imul
sbb
mov
push
xor
popf
mov
dec
int3
arpl
mov
mull
lods
into
sub
cltd
jb
xlat
fs
insb
add
pop
cmp
jo
inc
inc
push
in
js
mov
int3
test
xor
je
mov
cmpsb
sbb
stos
dec
aad
cmp
mov
stc
imul
daa
ret
jl
out
outsb
es
out
push
jbe
mov
pusha
sti
xchg
push
dec
std
xchg
jp
sbb
cmpsb
repnz
inc
loopne
xor
push
cwtl
fimull
pop
cmp
ret
repz
cmpl
mov
jae
and
adc
in
daa
mov
sub
cmp
ret
sti
jne
sub
stos
mov
sub
xor
fnstenv
lahf
pop
xor
mov
mov
lret
cli
pop
push
mov
sbb
dec
stos
cmp
fcmovbe
out
or
mov
adc
fsubrs
push
xchg
mov
mov
in
sub
imul
imul
repnz
les
clc
sbb
pop
dec
sbb
dec
insb
loope
mov
aam
dec
or
aad
pop
pusha
sbb
imulb
aas
insl
std
and
mov
lret
cli
mov
mov
fsubrl
rorl
cli
xchg
mov
outsb
sbb
lahf
mov
mov
cmc
ficoms
enter
sub
push
dec
out
insl
mov
fwait
mov
pop
lock
shrl
add
xor
movl
imul
fisubrs
movb
jne
add
mov
mov
into
gs
call
xchg
sub
inc
fisubrl
scas
inc
test
fisubrl
andb
sahf
bnd
cmpsb
stos
pop
ss
push
push
jmp
mov
lcall
idivl
mov
jl
sub
fcompl
xchg
sub
pop
subb
std
iret
dec
sub
jl
lds
xchg
jbe
enter
test
mov
or
jle
push
out
cmpsb
fidivs
xchg
sub
sbbb
mov
push
leave
dec
loop
adcl
rclb
shrb
pop
inc
xlat
mov
cmp
ret
lea
sbb
xlat
xchg
ss
dec
pop
cmc
jle
mov
dec
fisttpll
jl
ja
inc
cwtl
xor
int
sub
and
dec
jo
jle
sbb
and
lcall
mov
test
lret
add
mov
fistpl
jns
ss
cmp
push
mov
sbb
daa
push
inc
xlat
add
call
ret
es
pop
test
int
clc
cwtl
cli
xchg
int
jecxz
popa
pop
fs
lea
add
bound
push
mov
and
into
xor
jge
mov
push
in
add
fs
cmp
ja
out
xchg
movsb
push
mov
xor
arpl
std
jg
or
xchg
cmp
push
addr16
or
insb
ds
jmp
and
lock
popf
xor
es
push
mov
xchg
repnz
mov
sarb
iret
add
xchg
sub
fwait
xor
push
out
out
ret
pop
pop
xor
bound
call
lret
scas
inc
pop
xor
shlb
push
inc
mov
push
in
push
cmp
mov
inc
mov
inc
fildl
lds
xchg
inc
mov
loope
add
scas
inc
dec
mov
les
ds
outsl
add
xor
cmp
lds
mov
push
in
sbb
xchg
sub
pop
divb
shl
cmc
loope
mov
pop
add
test
loop
pop
adc
pop
scas
pop
add
shlb
shrl
loop
xor
push
pop
cmc
inc
add
lahf
xor
fdivl
loop
das
adc
xchg
sub
add
jl
insb
push
in
dec
sbb
mov
push
push
jp
aas
ljmp
sub
lahf
pop
mulps
cmp
out
rcrl
incb
test
ds
mov
lock
dec
cmc
pop
out
daa
fcmovne
pop
or
xor
sub
mov
push
xor
pop
sahf
icebp
incl
jne
adcb
mov
pop
testb
in
shl
hlt
mov
jns
jno
jno
mov
fbstp
and
jl
fucom
jl
xor
mov
add
mov
lret
add
in
jnp
out
test
into
pop
hlt
sti
dec
test
pop
and
dec
movsl
xchg
sub
push
mov
hlt
mov
and
xor
bound
push
push
addr16
cltd
jmp
push
sbb
ds
sub
aas
scas
jle
fsubp
mov
adc
add
cmp
xchg
lods
ja
jae
cmp
in
dec
sbb
xor
cmp
in
fistpl
dec
push
jmp
xor
in
das
and
adc
lea
lods
sub
loopne
pop
sahf
and
aam
outsb
std
insl
add
mov
jg
in
jge
and
cmpsb
cmp
das
mov
xor
popa
add
mov
cmpb
inc
fistpl
outsb
xchg
sub
sub
adc
imul
roll
lock
in
xchg
mov
je
mov
push
lahf
fadds
mov
jae
enter
inc
fsubp
jle
jecxz
cmp
xchg
insb
ja
jge
mov
call
or
cmpl
pop
xor
mov
sbb
loopne
rclb
and
add
andb
push
mov
mov
test
rcrl
inc
dec
or
xor
fwait
xor
imul
rcrb
ds
in
orps
mov
mov
fistps
mov
xor
lahf
cmp
pop
adc
movsb
add
ljmp
xchg
jle
mov
rcl
and
imulb
dec
mov
jl
mov
push
sahf
jno
shlb
popf
mov
icebp
adc
and
pop
lods
inc
ret
pop
jb
jns
call
sbb
push
in
jns
je
frstor
cmp
mov
cmpl
mov
mov
rcrl
fcomi
jle
jae
adc
fs
leave
stc
insl
push
out
lcall
inc
in
jbe
fisubl
enter
pusha
dec
loope
xor
pusha
test
in
jp
and
test
xchg
mov
add
nop
aas
add
insl
nop
cmp
pop
loop
rcrl
loope
xor
jmp
dec
jmp
xchg
lret
dec
std
and
and
int3
push
nop
movsb
incb
mov
sub
xchg
adc
mov
gs
pushl
pop
or
aas
adc
and
xchg
jle
js
jge
fbld
mov
xchg
jp
jl
mov
pushfw
jg
imul
mov
loope
outsl
jecxz
cmp
lmsw
cld
pop
dec
and
cmp
dec
std
and
testb
lods
mov
sti
inc
mov
gs
push
es
mov
imul
add
daa
filds
push
aam
pusha
por
loopne
add
les
and
jb
xor
sbb
cmp
mov
filds
fnstcw
jecxz
mov
adc
in
mov
mov
cmpl
jl
movsl
aas
push
dec
mov
inc
gs
mov
loopne
jns
and
sahf
mov
je
sbb
jae
mov
pop
aam
clc
test
je
jl
pop
xchg
popf
mov
lea
insb
addb
and
xchg
call
imull
loopne,pt
rorl
out
inc
testl
push
movl
mov
cwtl
sub
mov
or
aam
mov
out
inc
jecxz
enter
inc
enter
outsl
mov
lds
clc
xchg
mov
dec
lret
inc
push
fldl
insl
push
mov
xlat
pop
jge
repz
in
mov
xchg
mov
or
popf
mov
gs
pop
pop
movsb
aam
idivw
in
and
int
sbb
insl
pop
lahf
dec
lret
or
fistpll
cmp
lea
mov
lock
sub
or
ljmp
dec
call
aad
mov
lods
jbe
int
ret
ftst
mov
out
roll
stos
inc
mov
pop
adc
xlat
push
xor
repz
sub
pop
jns
adc
jle
cmp
add
test
jae
sub
cmp
mov
jne
xor
dec
jb
test
mov
in
xchg
xchg
jmp
dec
shrb
fisubrl
push
cmpsb
cmc
or
lods
mov
mov
or
cmp
test
dec
xchg
inc
dec
out
add
lock
mov
into
popa
sbb
inc
enter
push
repz
mov
add
pop
test
lret
lock
imul
stc
pusha
pop
aam
mov
inc
lds
lods
pop
es
mov
and
inc
fsubrp
inc
nop
mov
pop
add
pop
inc
ficoms
in
xor
ds
xlat
dec
adc
lds
mov
mov
fistl
adc
jmp
repnz
push
adc
mov
bound
adc
int3
cmp
sbb
add
add
push
mov
lods
jae
xchg
lret
cmp
lods
ljmp
into
iret
dec
mov
ret
xor
add
andl
movsb
and
mov
mov
cmpsb
lahf
xor
insb
daa
cli
and
js
jmp
fwait
cltd
int
sbb
xchg
in
cs
sub
imul
shrl
das
int3
push
jne
add
inc
pop
dec
cld
xor
xchg
lret
das
and
aam
jno
push
push
xor
inc
jb
sub
inc
and
bound
inc
pusha
sub
pushf
jg
xor
jo
jno
test
loope
sbb
stos
in
push
adc
dec
cmp
shlb
je
insb
dec
insl
aad
dec
dec
mov
jg
ret
cmp
and
aad
mov
ret
loope
rorl
mov
movsl
lea
incl
or
inc
ret
add
hlt
imul
mov
xor
push
cmc
out
popa
and
cmp
sbb
xchg
cli
adc
add
ja
pop
stos
inc
xor
pop
mov
push
in
loope
add
icebp
mov
icebp
or
push
fnstsw
or
lods
cmp
xor
push
and
inc
fcoms
in
push
aad
push
stos
popa
dec
fiaddl
in
cwtl
das
xchg
aam
jecxz
mov
fisttpl
pop
or
test
lods
mov
out
and
fisttpll
mov
les
jnp
sbb
cli
sub
outsb
sub
mov
sbb
xchg
xchg
jl
adc
test
xchg
imul
imul
mov
mov
sub
fs
xchg
ja
shll
ret
fbstp
into
aaa
jmp
sahf
sbb
jbe
clc
aas
mov
loopne
mov
cmpps
insl
movsl
push
push
loopne
xlat
mov
cltd
xchg
pop
sti
cmp
add
or
add
sub
stc
cs
data16
sbb
xchg
pop
scas
jb
scas
pop
mov
pop
mov
test
push
sub
xor
mov
ljmp
inc
int3
inc
xor
adc
mov
mov
je
bswap
data16
lods
jne
xchg
int3
push
sub
lods
jbe
fisubrs
and
iret
mov
aad
mov
dec
mov
filds
rorl
mov
or
in
xchg
lea
sbb
or
scas
mov
stc
daa
loope
mov
fcoml
adc
mov
cmpsl
sbb
ret
sbb
mov
movsb
out
mov
loop
add
repz
sarl
shlb
ret
sub
js
call
xchg
cmc
pop
lret
xor
mov
fiaddl
add
movsb
xchg
ja
jg
add
andb
pop
or
lret
pop
mov
stos
push
cld
not
data16
push
mov
and
cmpb
dec
gs
cmp
jno
mov
mov
lock
hlt
addl
test
xor
xlat
pop
div
mov
sub
scas
jb
or
inc
ficoml
mov
mul
into
inc
ret
rolb
fsubrs
idivb
push
or
mov
decl
dec
andnps
cmp
rorb
jp
lea
or
lret
daa
mov
pushf
adc
push
mull
jp
sahf
inc
test
push
je
xor
push
mov
je
push
sahf
dec
sub
and
push
push
xorb
sbb
leave
popf
mov
in
stos
xchg
out
orb
int3
lock
pop
aad
mov
pop
mov
cmp
dec
imul
xlat
mov
loop
xor
jnp
sbb
hlt
sub
in
stos
sbb
fisubs
jecxz
mov
movl
fmul
aam
jmp
dec
add
test
sbb
iret
in
dec
add
testb
mov
pop
cmc
push
sub
rcrl
loopew
inc
fsubrs
mov
dec
sub
jecxz
aas
loopne
mov
sbb
mov
add
xchg
ficoms
add
mov
sbb
push
push
mov
outsb
or
jg
es
push
addb
adc
push
mov
sbb
mulb
imul
test
inc
lods
mov
add
in
mov
fiadds
jge
repnz
xchg
std
xor
or
andl
push
ljmp
add
adc
jns
mov
leave
push
rcr
pop
and
outsl
xlat
es
xor
addb
les
dec
jo
icebp
inc
inc
in
push
dec
cmp
xor
add
popaw
push
lods
xor
push
enter
or
lret
push
jle
pop
std
pop
pop
mov
or
cmc
sub
sbb
inc
jl
or
cmpsl
ss
xchg
idiv
sub
or
inc
jmp
movsb
stos
aas
hlt
xchg
dec
fwait
adc
ljmp
or
dec
inc
ja
lea
rcrl
adc
dec
arpl
aas
bound
into
inc
pop
xchg
cs
test
loope
out
out
daa
out
add
adc
push
sbb
add
inc
in
push
add
xchg
ds
xor
not
dec
icebp
push
int
jbe
mov
add
test
pop
lret
dec
out
xor
call
mov
jno
loope
orl
xor
popf
daa
call
push
ljmp
or
movsl
cltd
mov
loop
imul
mov
movsl
or
jmp
loope
xor
cld
loope
in
sarl
jmp
ficoms
stc
ficoms
insb
das
fstpl
lods
inc
pop
cmp
dec
in
mov
sbb
cmpsb
push
pop
or
sti
rorl
scas
jns
adc
rorb
mov
ret
and
test
cmp
outsb
mov
cmp
jl
std
inc
cmp
sub
or
cmp
mov
jno
sbb
cmp
out
sbb
or
cltd
andb
push
mov
int
jl
or
repnz
fimull
inc
out
cwtl
jns
sti
lret
xchg
aaa
sub
adc
pushf
or
clc
pushf
sbb
cltd
or
mov
mov
jl
xchg
test
out
mov
int
dec
mov
leave
mov
adc
cmp
sbbl
jp
push
out
dec
pop
dec
fwait
push
cmp
int3
inc
xchg
into
push
and
mov
pusha
cmc
aam
xor
xor
nop
ja
movsb
mov
mov
hlt
imul
and
dec
or
imul
fadds
rcll
adc
data16
je
dec
and
pop
ret
fidivrs
test
sar
and
dec
test
jb
cmp
mov
les
xchg
inc
ds
mov
inc
mov
cmp
mov
imul
cmp
mov
sbb
jmp
lret
adc
repnz
lret
popa
loope
out
mov
hlt
shrl
sbb
gs
clc
mov
out
cld
jns
in
jp
mov
in
sbb
ret
mov
fimull
ja
jg
test
shl
push
mov
and
and
jl
in
jb
fistl
push
cltd
mov
adc
enter
das
jo
faddl
lcall
mov
xchg
mov
stc
clc
nop
in
adc
shl
sbb
rol
xor
out
icebp
xchg
ja
mov
cltd
ret
orl
mov
or
pop
shl
hlt
sub
fcomps
fstpl
mov
cmp
fimuls
or
fstpl
aas
aam
xchg
icebp
aaa
and
popa
leave
cmp
enter
inc
jmp
dec
push
int
cmpsb
fnstcw
cmp
jp
js
into
inc
and
push
ret
cmp
mov
mov
mov
call
les
or
call
cmc
and
adc
dec
jne
in
pop
cwtl
popf
mov
cmpsb
pushl
pop
sbbl
pop
mov
inc
sbb
das
pop
lea
inc
dec
in
mov
jne
outsl
cmp
popa
call
mov
pop
push
pop
ret
cmp
push
inc
mov
cmp
in
js
dec
insl
xchg
sbb
mov
inc
push
jmp
das
pop
aas
leave
push
js
repz
pop
pop
stos
imul
jb
or
sub
lret
inc
gs
sahf
xor
sahf
dec
push
pop
jns
sub
inc
xor
cld
xor
or
inc
cmpsl
adc
dec
adc
cwtl
mov
negl
aad
das
rorl
push
aad
fdivs
lods
ret
xor
lret
bound
jnp
push
rcrl
mov
out
call
push
movsl
adc
xor
push
call
mov
fdivl
out
push
mov
ret
imul
ljmp
jno
adcl
add
ret
pop
push
aam
gs
hlt
mov
xchg
jle
insb
dec
mov
or
fs
pop
dec
les
mov
lea
je
mov
in
jbe
mov
in
pusha
stos
mov
jmp
std
xchg
or
and
shrb
inc
fidivrl
scas
pop
lock
aaa
jmp
les
hlt
sub
mov
repz
mov
sbb
cmpsb
bound
lcall
pop
or
xchg
or
imulb
movsl
cmp
pop
repnz
cmp
dec
mov
inc
mov
mov
in
push
push
out
into
push
loopne
push
or
ret
mov
jecxz
call
es
push
shrb
cmp
repz
dec
add
das
cmpsb
dec
flds
jecxz
push
enter
mov
mov
dec
sahf
hlt
cltd
sub
inc
mov
imull
dec
les
jp
fldcw
lret
sti
and
and
stc
xor
test
xlat
outsb
lret
xor
clc
and
and
sbb
cs
stc
xor
fbstp
push
xor
mov
sbb
cltd
xchg
sub
mov
add
sub
stc
and
jns
and
pushfw
mov
mov
mov
mov
jns
inc
aam
pop
rolb
sub
ret
hlt
xor
sbb
js
icebp
sub
adc
sub
outsl
leave
add
in
cmp
xchg
movsb
mov
dec
mov
jbe
jle
add
jae
rclb
nop
cli
pop
sub
popa
mov
daa
filds
cmp
aad
mov
lock
mov
and
pop
sarb
imulb
pop
push
icebp
and
rcrl
lea
mov
cld
or
xor
jne
stos
pop
inc
sub
lcall
fwait
add
xchg
push
jbe
mov
addr16
lods
outsl
inc
js
mov
movsb
cmp
test
inc
icebp
adcl
inc
xchg
lret
and
jbe
jb
test
xchg
daa
in
cwtl
add
popf
mov
jbe
fisubs
and
sbb
fisubrs
dec
mov
out
test
in
fs
test
lock
jp
cmpsl
mov
or
dec
lea
push
lahf
ljmp
push
mov
dec
and
lods
mov
in
pop
mov
push
jl
lods
pop
mov
fistl
pop
fwait
movsl
pop
add
mov
stos
xchg
pop
mov
cli
nop
mov
pop
mov
loopw
nop
mov
clc
xchg
mov
or
cmp
in
inc
mov
in
adc
ss
jp
out
mov
cmc
imul
testb
sub
nop
push
add
idivl
add
in
jg
outsl
fimull
pushf
ret
sub
dec
gs
dec
dec
sub
inc
sahf
jge
pop
inc
adc
inc
inc
call
popf
dec
dec
or
mov
inc
mov
insb
stc
xor
movsl
mov
in
or
hlt
adc
fs
imul
mov
mov
loopne
fucom
mov
daa
into
lcall
lds
add
fists
xlat
in
xor
mov
into
inc
fsubrs
xchg
cmp
ret
add
mov
xor
jmp
fbstp
mov
lds
cltd
dec
les
popf
ds
xor
mov
icebp
lmsw
cli
iret
inc
lret
mov
enter
js
add
push
call
sub
aas
loop
arpl
cs
lods
pop
data16
mov
iret
dec
xlat
jl
inc
inc
xlat
inc
aad
dec
rcrl
pop
shr
and
fmulp
sbb
pop
test
lret
loope
es
idivb
and
mov
out
pop
scas
mov
leave
je
mov
xchg
int3
adc
mov
adc
fs
ficomps
push
int
xor
adc
adc
mov
les
mov
mov
xor
clc
mov
adc
lret
cld
mov
jno
je
ret
cmp
imul
mov
xor
decb
and
outsb
out
adc
mov
enter
cmpsl
jnp
popa
ret
pop
inc
jmp
push
inc
test
pushf
mov
jg
jmp
cld
and
daa
jecxz
outsb
mov
dec
mov
sbb
lcall
jne
pop
pop
push
jmp
cmp
adc
jle
cmpsl
inc
addb
arpl
add
mov
pop
loopne
fwait
mov
fildl
hlt
push
out
inc
mov
inc
inc
xor
push
ss
jne
loop
add
sub
xchg
lds
daa
nop
in
sub
and
xor
sbb
inc
scas
out
rorb
adc
sbb
xchg
mov
xchg
xchg
imul
pop
inc
inc
fidivs
pop
dec
mov
push
cmpl
dec
mov
ror
repz
push
push
add
xor
ds
fnstenv
sbb
dec
jge
loop
rcrb
outsb
scas
lret
and
fwait
lret
sub
shrb
sbb
scas
add
and
or
inc
mov
popa
aam
jmp
and
cmc
rolb
aam
fisttpll
les
les
lds
add
mov
mov
test
mov
in
adc
push
inc
lmsw
xchg
xchg
jne
pop
cmp
add
dec
dec
fwait
das
loope
inc
ret
pop
dec
cmp
jp
mov
mov
or
sahf
push
xchg
sub
xor
sbb
stc
in
xchg
push
mov
inc
scas
jl
push
jno
cmp
mov
and
call
mov
insb
scas
push
into
pop
adc
test
push
mov
pop
add
lods
inc
mov
sub
mov
inc
inc
fs
dec
and
ret
sbb
pop
adc
loope
push
sbb
jb
pop
negb
pop
movsl
sbb
add
sbb
sbb
sub
rolb
in
mov
out
jo
sbb
sbb
mov
loopne
pop
pop
jmp
lods
push
enter
enter
sarb
cmpsb
fbld
adc
cmp
iret
push
add
xchg
lods
pop
testb
mov
movsb
mov
push
cmc
dec
loopne
das
adc
mov
das
hlt
mov
sbb
sti
jge
rolb
push
adc
add
outsl
cmp
mov
mov
sahf
cmp
mov
sub
out
jg
push
movsb
or
push
not
push
mov
push
int3
or
mov
adc
pop
pop
pushf
nop
pop
push
jmp
push
imul
scas
add
xlat
push
sahf
lret
push
or
push
jae
push
dec
jae
mov
pop
mov
mov
and
xchg
push
out
and
notb
add
add
sbb
out
mov
repz
jae
fnstenv
xchg
and
sub
jp
movsl
repz
jmp
jns
decb
mov
ficompl
pop
int
aad
mov
rclb
stc
jg
in
frstor
jmp
mov
dec
mov
add
dec
in
std
iret
and
sti
mov
daa
adc
cmp
sub
scas
xchg
sbb
dec
cmp
jnp
and
pop
inc
bound
xor
das
add
jmp
sti
xor
pop
pop
leave
push
movsb
push
and
out
test
mov
fistl
mov
fbstp
dec
rol
cmp
insb
mov
mov
mov
push
fsts
mov
cmp
and
cmc
mov
mov
xchg
imulb
repnz
mov
lahf
jge
mov
mov
repnz
or
popa
push
stc
xor
push
cmpb
jb
mov
adcb
mov
inc
jl
pop
lea
das
orb
roll
or
push
push
in
ss
and
movsb
fildl
cwtl
ficoml
mov
inc
test
xchg
mov
mov
cmpsw
std
decb
aad
xchg
fdivl
or
movsl
pop
xchg
push
call
nop
dec
lods
jno
out
push
mov
lahf
xchg
aas
shl
and
lcall
in
jae
adc
or
jecxz
jnp
mov
pushl
jle
ds
pop
adc
jns
push
dec
xor
and
sbb
dec
adcb
sbbb
addb
lock
jecxz
pop
xor
jmp
es
femms
inc
arpl
xor
hlt
dec
pop
dec
loop
jno
cmpsl
cmp
sbb
jmp
inc
adc
xchg
scas
inc
les
push
ja
int
pop
cltd
cmp
subb
nop
push
mov
mov
jo
daa
mov
ret
xor
popa
in
ljmp
jno
push
mov
ss
push
scas
xor
bound
test
xorb
pop
sahf
or
scas
cmpsl
sub
int3
mov
sbb
mov
repnz
imul
push
push
movsl
cld
dec
loope
out
adc
pop
punpckhwd
inc
inc
cmp
jno
xchg
sub
add
adc
sub
aas
jnp
es
pushf
pop
hlt
int
scas
lods
mov
movsb
cmp
inc
and
pop
push
mov
out
pop
jno
pop
mov
enter
jno
sub
les
decb
dec
fisttps
add
jl
adc
pop
js
movsl
test
lret
sti
rclb
loope
and
xchg
push
movsl
out
sbb
fimuls
sub
cld
or
sahf
sub
adcb
js
jbe
fisubrs
lret
gs
cld
fmul
and
sub
pop
and
aam
jmp
jb
mov
stc
push
pop
jb
int3
mov
enter
lcall
mov
dec
movsb
mov
jno
cmp
and
pop
stos
inc
lea
inc
dec
testl
adc
cs
loop
pop
lea
jge
shrb
dec
cmp
lret
xor
or
das
push
fcoms
movsb
insb
les
lahf
mov
push
pop
mov
cmp
dec
movsl
lds
shlb
mov
lahf
mov
js
aas
inc
sbbl
lret
push
push
add
sbb
fstpt
inc
sbb
shrd
lcall
mov
mov
jmp
xor
or
pop
out
jae
cmp
in
sbb
lock
div
push
mov
inc
xchg
mov
sbb
xor
sbb
or
mov
cwtl
dec
mov
jae
mov
popa
test
and
jl
loopne
and
mov
int3
dec
mov
jno
mov
lds
pop
xchg
gs
add
inc
loop
je
outsb
mov
sbb
add
fneni(8087
loop
push
xchg
hlt
bound
mov
jecxz
cld
hlt
dec
mov
stos
ret
insb
push
scas
or
inc
mov
lods
movb
mov
jne
jmp
cmp
jnp
mov
test
popl
pop
add
std
aas
xchg
mov
push
jle
mov
adc
stos
add
ret
pop
mov
mov
push
mov
push
orb
or
int3
inc
xor
xor
jecxz
cmp
add
cli
push
push
test
pop
mov
addr16
hlt
mov
xchg
imulb
mov
lds
cld
mov
cmc
add
mov
ja
lret
fsubs
int
or
fistpll
push
bnd
add
dec
mov
into
cs
lods
jp
adc
and
insb
arpl
aam
push
dec
rcrb
test
das
push
lcall
lcall
out
ror
sub
sbb
ja
cmp
in
lret
ffreep
repz
push
mov
add
data16
repz
cs
test
adc
pop
icebp
loop
loop
call
sub
cmpsl
mov
aas
mov
cli
in
in
cmp
call
jl
mov
ja
mov
jb
js
mov
lds
mov
movsb
cmp
push
sbb
sub
call
outsb
inc
xchg
xor
dec
loope
aad
add
and
xchg
addr16
cs
mov
and
dec
nop
daa
cmp
addr16
daa
fs
push
jp
push
insb
dec
fs
cmp
or
push
sti
add
mov
and
jl
cwtl
insl
dec
or
jns
pop
mov
lcall
add
fs
pop
fstpt
int3
repnz
mov
mov
addr16
imul
xor
push
jbe
icebp
das
and
rcr
std
loop
repz
ljmp
inc
adc
and
push
scas
xlat
jg
incl
hlt
icebp
fldt
out
mov
gs
lds
mov
or
jae
adc
jp
sub
cmc
pop
in
enter
out
jbe
imul
std
test
stos
ss
xchg
lret
sbb
jmp
cli
imul
jmp
stos
xor
cld
jl
xor
dec
push
dec
and
outsb
popf
mov
sbbb
repz
lock
inc
or
loop
stos
mov
scas
data16
push
mov
add
pop
or
outsb
mov
bound
fldl
mov
out
jbe
test
adc
stc
bound
mov
ja
testb
call
ret
and
push
jecxz
das
mov
mov
mov
mov
mov
jb
out
je
popa
inc
pop
iret
scas
pop
lret
aam
mov
or
push
and
pop
dec
xchg
cld
popf
mov
mov
iret
pop
pop
add
sbb
pop
ret
in
mov
jmp
sahf
mov
movsb
xor
adc
and
jp
adc
pop
rclb
hlt
push
jge
mov
push
cmp
enter
test
rorl
lahf
inc
lds
das
mov
adc
filds
mov
or
or
jmp
dec
push
add
lea
add
inc
dec
sub
lods
xor
pop
rcrl
sbb
in
push
cmp
cmp
hlt
mov
test
hlt
pop
push
mov
dec
addl
adc
adc
cmp
fldl
negl
xchg
xor
jns
nop
cmp
sub
mov
push
jg
push
aaa
mov
adc
aam
or
movsb
or
sbb
js
dec
or
popa
add
aaa
out
lcall
xor
rclb
dec
xchg
inc
in
int
jns
cmc
inc
adc
in
pop
repnz
xchg
inc
mov
mull
test
mov
xchg
cmp
mov
andl
sti
scas
cmp
mov
movsl
sbb
xchg
mov
mov
or
iret
mov
dec
pop
test
mov
pop
and
adcb
fidivl
lret
xchg
inc
icebp
mov
xchg
stos
fildll
cmpsl
lods
mov
inc
aaa
mov
aas
movsl
adcb
jp
push
aaa
adc
hlt
ret
out
rclb
aaa
adc
enter
push
xchg
inc
or
push
int
inc
jmp
xor
xchg
and
inc
stos
movsb
cmp
xchg
lret
int
lds
and
cwtl
lods
inc
adc
test
test
inc
fs
push
fwait
lcall
ds
enter
lahf
cmp
lods
scas
sub
insb
out
xchg
inc
mov
mov
lahf
cmp
mov
push
push
jne
mov
sahf
das
das
enter
cltd
cmp
icebp
xchg
inc
ja
pop
mov
ljmp
lds
and
xchg
or
mov
jg
sbb
push
ja
inc
xor
sub
xchg
ljmp
inc
jae
push
mov
outsb
adcb
add
into
repz
cmp
popl
rclb
jnp
lds
loopne
push
out
sub
adc
enter
out
or
in
cli
nop
inc
xor
outsl
imul
sub
sbb
pop
dec
mov
out
xor
add
add
sub
push
into
xchg
mov
xchg
sub
push
add
jmp
dec
lds
pop
mov
repnz
cmc
pusha
int3
test
pop
mov
adcl
mov
nop
adcb
push
xchg
mov
sahf
cmp
mov
sub
int
cmp
xchg
add
daa
push
in
push
cmp
out
int3
popf
cmp
sub
xchg
fisubl
cmp
adcl
mov
popf
xor
mov
addr16
pusha
js
adc
orl
roll
mov
mov
lods
or
pop
pop
push
add
jo
adc
shrb
cli
popa
xor
sub
xor
fiadds
addb
aam
pop
sub
jnp
or
pop
sub
xor
push
std
mov
xchg
faddl
enter
push
jne
repz
pcmpgtd
fistpl
lods
mov
lods
xor
cmpsl
iret
xchg
lea
adc
sbb
sub
inc
insb
cmc
lods
jo
jae
sarb
int
scas
xor
dec
push
mov
sbb
jb
mov
popa
in
jbe
jne
repz
xor
int
nop
xchg
dec
adc
les
rorl
mov
pop
insb
negb
int3
cmp
fists
dec
adc
mov
sbb
pusha
mov
in
jne
sub
cmp
fidivrs
mov
mov
ret
in
and
icebp
imulb
inc
xchg
jecxz
lahf
lock
cltd
inc
fucom
orb
mov
cld
in
lods
mov
js
pushf
aas
sbb
dec
jb
xlat
icebp
sti
data16
add
sbb
sub
jae
xor
xorb
aaa
add
pcmpgtd
jbe
je
pop
cmp
sub
popa
jmp
inc
dec
adc
or
sub
or
add
jp
jae
mov
lods
pop
jmp
mov
push
repz
mov
xlat
xchg
incl
lret
xchg
sub
lods
push
out
aas
jle
iret
scas
sub
mov
mov
cmpsl
cmc
adc
loop
insb
add
mov
cltd
fidivrl
sbb
addr16
fnstcw
jle
adc
xchg
fidivl
jo
add
scas
sub
loop
and
sarb
cmp
mov
mov
sarb
iret
inc
adc
cmp
sahf
int3
sarb
lds
bound
mov
or
mov
sbb
hlt
lahf
cmp
or
ja
repnz
loopne
mov
jecxz
xchg
stc
sarl
sbb
push
lahf
cld
and
inc
jg
iret
fcomps
fwait
aaa
push
lods
pop
sti
mov
lock
xchg
inc
or
xchg
inc
xor
xchg
roll
jl
mov
inc
and
add
fwait
push
add
lret
lds
sub
jne
cli
pop
jnp
pusha
test
dec
or
ds
xchg
dec
pop
in
pop
pop
std
hlt
ljmp
stos
lahf
aaa
pop
sub
roll
adc
in
loope
out
adc
cs
adc
xchg
cmp
mov
sub
mov
test
sbb
cmp
fidivs
and
shlb
mov
adc
or
lea
mov
icebp
test
mov
movsb
cmp
cmpsb
sub
int
fisttpll
jecxz
inc
mov
add
sti
popa
stc
push
cmc
jecxz
push
arpl
imul
jnp
add
add
push
sti
or
fdivrl
movsb
pop
mov
jo
inc
fiadds
sahf
inc
jmp
cli
mov
or
adc
cwtl
mov
xor
or
pop
jae
xchg
jmp
inc
sbb
inc
or
dec
cmpsb
sub
mov
xchg
cmp
lret
adc
mov
sbb
xor
push
mov
cmp
inc
pusha
and
xchg
xchg
sarl
fdivs
sahf
pop
mov
sbb
inc
cmpsb
jnp
cwtl
out
mov
push
idiv
fidivrl
sub
orb
imul
or
fldlg2
shll
or
xchg
and
aaa
hlt
push
mov
jle
addr16
lea
je
sub
nop
cmp
aad
aas
pop
sarb
orb
mov
xor
mov
dec
into
test
fstpl
into
loopne
ret
jmp
pop
mov
inc
hlt
lea
xchg
leave
xchg
mov
stos
xor
sbb
xor
mov
or
outsb
movsl
fistpll
jp
dec
fwait
mov
push
add
lods
inc
adc
mov
mov
adc
out
aad
push
loope
aam
mov
jp
popa
ror
xchg
jnp
cmc
inc
call
adc
into
iret
push
add
adc
pushf
cwtl
dec
mov
sar
cli
insb
call
lods
in
mov
mov
jl
shr
outsb
pop
loopne
mov
es
pop
clc
fidivrs
popa
div
add
ficoml
sub
mov
and
lret
push
sub
int
int
mov
scas
ja
or
and
fisttps
cmp
mov
lods
rorb
push
rclb
shrl
push
cmp
lods
xor
lods
lahf
aas
xor
push
rclb
es
testb
jge
mov
sub
cld
lcall
loope
jecxz
jp
cwtl
pop
push
or
push
dec
js
orl
rorb
fcoms
loop
das
sub
xchg
xchg
out
stos
sub
in
cmc
pop
pop
stc
sbb
aad
dec
fisubrl
out
push
push
call
lahf
pop
repz
xor
sub
sbb
dec
mov
divb
out
adc
stos
ss
or
xor
sti
pop
arpl
xor
cli
jmp
push
adc
push
mov
ljmp
mov
mov
mov
int
shl
sub
pop
xorl
mov
les
test
insl
xor
mov
push
cld
xchg
imul
cmp
sbb
out
shll
add
fdivrl
pop
stos
mov
or
test
xchg
lea
mov
mov
cmpsl
sub
lret
fidivrl
insb
xchg
outsl
lock
inc
pop
sub
cwtl
aaa
xor
test
cmp
push
mov
mov
stos
or
nop
lods
push
mov
jl,pn
push
xor
pop
aad
pop
std
mov
adcb
ret
popf
movsb
cmp
dec
loopne
jle
repnz
add
mov
push
mov
xchg
sub
arpl
ficompl
scas
mov
out
outsl
int
out
outsb
pop
sbb
mov
xchg
loope
js
xlat
jmp
cs
cli
jbe
test
mov
push
test
lret
out
jne
movsl
imull
rclb
pop
incb
mov
scas
in
mov
mov
std
xchg
sti
icebp
fs
movsl
das
sti
daa
pop
mov
idivl
stos
jne
xchg
aas
shrb
loop
adc
insl
pushf
and
mov
test
mov
and
mov
fs
cmpsb
mov
adc
stos
scas
sub
cmp
cmpsl
xchg
jg
fstps
jns
jg
imull
addr16
push
push
dec
aam
pop
cld
std
or
xlat
jne
dec
or
imul
gs
jl
cmp
rcrb
imul
pop
sar
pop
sub
inc
xchg
ds
mov
stos
dec
adc
aam
cmc
lcall
movsb
in
jmp
call
add
xchg
cmp
push
mov
cmp
and
aad
dec
or
push
cmp
or
pop
and
inc
xchg
aas
cmp
xchg
inc
mov
mull
mov
jno
addr16
sahf
insb
inc
adc
pop
cmc
jge
inc
cmp
mov
movsl
rolb
sti
cmp
out
loope
aam
cmc
lcall
mov
hlt
pop
mov
cmpsl
pop
clc
xor
sub
fwait
mov
xor
out
lds
iret
into
dec
xchg
adc
mov
dec
push
dec
stc
mov
aaa
inc
cmp
test
test
pop
push
or
lods
fiaddl
cmpsb
into
and
push
jmp
xor
divl
push
iret
loopne
jg
iret
idiv
pop
test
insl
in
mov
cmpsl
roll
filds
lds
mov
sbb
fs
subb
mov
mov
xchg
fcoms
popf
adc
lret
nop
jae
sarl
arpl
push
dec
imul
and
jp
out
ss
mov
int
outsb
jg
jl
jl
push
filds
les
xchg
cmp
fdecstp
push
xor
and
ja
sub
pop
and
ja
pop
xor
pushf
dec
xchg
or
das
lods
push
repz
hlt
call
es
dec
add
push
pop
pop
divb
xor
bound
fwait
int3
je
outsb
push
push
sarl
mov
or
out
test
mov
into
xchg
mov
mov
and
xchg
inc
mov
jo
jne
in
test
hlt
mov
scas
dec
movsl
sbb
mov
mull
mov
lret
jp
movsb
inc
cs
mov
xor
cmp
lret
sub
loope
push
out
icebp
stos
xor
add
mov
adc
insb
xor
mov
and
bound
mov
jo
dec
adc
arpl
jne
xchg
aaa
les
rclb
les
xchg
jp
aad
pop
ljmp
shlb
cmp
sub
roll
sub
adc
lret
xchg
inc
xchg
mov
xchg
into
sbb
and
cmp
xor
push
sub
dec
xor
pop
sub
mov
cmpsb
inc
pop
lahf
cmp
jg
or
sbb
push
cltd
inc
sahf
cmp
mov
in
in
repnz
ror
cmp
ret
repz
xor
int3
xchg
mov
mov
or
push
adc
std
pusha
jne
mov
outsl
inc
repnz
sbbb
pop
adc
hlt
pop
into
xor
stc
gs
mov
stos
or
bswap
add
pop
cmp
and
es
sub
das
cmp
or
sub
clc
sbb
cwtl
cmp
cmp
scas
daa
mov
mov
hlt
mov
push
in
inc
test
fsts
stos
sbb
dec
in
xchg
add
aam
fidivrl
hlt
pushf
inc
sub
repnz
cmpsl
loop
push
mov
cmp
in
jo
sahf
jne
mov
add
adc
mov
push
xor
adc
inc
push
call
clc
stc
nop
sub
mov
or
sbb
cmpsb
lods
mov
mov
sti
jmp
cmp
or
push
push
xlat
faddl
lods
xchg
into
mov
outsb
out
jecxz
dec
adc
testb
dec
repnz
mov
xchg
cmp
test
and
mov
xchg
cmp
cmpsl
lret
lahf
dec
or
lods
inc
adc
add
jg
fadds
iret
jb
xchg
inc
mov
mov
sub
push
outsb
stos
daa
push
mov
mov
mov
rolb
xchg
mov
dec
xchg
jl
or
inc
insl
sbb
mov
xor
popa
mov
mov
dec
add
sbbl
xchg
out
mov
mov
mull
jnp
loop
aad
loope
inc
add
jp
stos
sahf
cmp
out
lret
lea
sub
ret
sahf
xor
pop
adc
out
or
pop
lret
mov
mov
fidivrs
add
test
adc
xchg
mov
mov
and
movsl
mov
mov
pop
divl
mov
test
jb,pn
add
xchg
imul
mov
test
cli
outsl
ljmp
popf
cmp
les
mov
sub
scas
pop
jecxz
push
les
jae
mov
stos
leave
xchg
dec
cmpsb
sub
lret
test
add
sbb
mov
inc
cld
jne
lahf
xchg
mov
jo
aaa
cmp
mov
lods
jg
cmpsl
aaa
sub
xor
leave
xchg
inc
ret
jnp
inc
add
xchg
xchg
rcr
jp
iret
ja
add
add
testl
in
test
shrl
loop
sub
gs
push
iret
xor
inc
or
pop
ja
in
sbb
sbb
mov
mov
aas
lods
loop
dec
or
mov
xor
lcall
fnstsw
repz
ljmp
jg
and
mov
sahf
xchg
mov
fwait
jp
pop
clc
js
in
xchg
push
add
movsb
lret
and
xor
sub
mov
inc
outsl
fwait
inc
sub
inc
or
orb
pusha
push
mov
mov
mov
xorb
adcl
clc
pop
leave
lds
adcb
aaa
lret
lods
xor
sub
nop
pop
mov
scas
or
pop
jo
and
mov
cli
cld
addl
jb
lret
xchg
cmpsb
gs
shll
std
popa
aam
or
and
pop
clc
mov
mov
in
nop
mov
pop
leavew
dec
or
mov
bnd
jecxz
in
inc
psrlq
pop
neg
or
sarl
movsb
roll
inc
fs
cmpsl
adc
xor
sub
das
pop
push
sbb
imul
mov
jl
aaa
push
lock
lods
pop
rclb
mov
ret
pop
test
mov
out
jb
sub
jae
cmp
iret
fidivrl
push
and
bound
pop
mov
loopne
sarb
hlt
nop
cmp
arpl
adcb
push
call
std
nop
cmp
mov
xchg
cmp
add
adcl
mov
imul
pop
and
movsl
or
push
pushf
rorl
pusha
jmp
pushf
push
sbb
sbb
aam
dec
out
int3
out
push
push
cmp
mov
mov
cmpl
rcll
roll
fstpt
sub
cmp
shrb
push
scas
xor
bound
mov
xchg
and
xchg
cmp
jp
mov
xor
jnp
inc
or
je
das
test
aad
cmp
jns
lea
out
mov
popa
jmp
hlt
hlt
gs
sub
jne
int3
mov
imul
jbe
scas
sub
in
fnstsw
les
cmp
cmp
outsb
pop
xchg
and
pop
addb
xor
sub
outsl
push
adcl
or
mov
inc
xor
scas
inc
xchg
mov
lret
scas
dec
and
dec
popa
push
cli
fistps
sahf
inc
mov
scas
xor
pop
loope
xchg
push
sti
inc
dec
adc
xchg
out
sarl
addr16
xchg
clc
test
mov
fdivrs
popf
outsb
ljmp
aaa
into
mov
pop
scas
scas
pop
add
out
push
cld
cs
sub
jo
ss
sahf
gs
testl
xchg
sbb
push
mov
push
mov
int
mov
xlat
jns
mov
sahf
loop
pop
sarb
xchg
cmp
addb
xor
or
jbe
gs
mov
xor
cmp
mov
shrb
cmp
push
mov
test
mov
mov
test
dec
cwtl
inc
cmp
dec
adc
fwait
mov
jbe
adc
xchg
add
js
fldl
adc
cmp
inc
cwtl
inc
sbb
mov
push
push
adc
sub
inc
enter
sbb
test
fadds
test
ljmp
inc
mov
in
inc
adc
enter
xor
mov
movsb
push
jecxz
loope
pop
cmp
es
inc
xor
or
push
fidivrs
sub
or
push
imul
popf
ret
shlb
hlt
and
mov
out
jnp
imul
cmpsb
push
dec
in
jl
jbe
aas
movsb
in
leave
xchg
jecxz
les
in
pop
lret
das
clc
loop
inc
cmp
test
inc
jle
dec
lret
xchg
cmp
sbb
js
push
test
mov
stos
dec
or
lods
mov
imul
or
cmp
jmp
aas
and
int3
dec
mov
sbbb
cmp
loope
xor
cmp
scas
into
lods
add
cld
adc
mov
push
mov
dec
mov
lods
or
inc
cmp
jmp
xchg
mov
lock
out
out
insb
addr16
int
mov
lods
sub
popa
and
adcb
mov
fdivl
imul
addr16
adc
mov
sahf
std
data16
jmp
and
flds
cli
pop
hlt
pop
sub
jp
ror
xchg
cs
insb
aaa
sub
cmpl
add
fdivrs
xchg
cmp
ret
rorl
or
cmc
aam
test
imul
adc
movsb
test
mov
mov
jbe
xchg
and
fstp
add
data16
xchg
daa
je
mov
les
mov
movsl
daa
inc
shl
pop
or
enter
inc
or
js
mov
xchg
push
jmp
inc
into
clc
cmp
out
cwtl
cmp
mov
dec
or
ficoms
stos
or
add
adc
pop
lea
sbb
fdivrl
insl
std
pop
jns
adc
inc
data16
cmp
lahf
test
adc
lds
lret
ljmp
pop
dec
xlat
je
mov
mov
inc
add
addb
lds
adc
push
and
sti
sbb
or
adc
xchg
lea
pop
fiaddl
aad
popf
das
mov
pop
push
fnstcw
cmpsb
adc
pop
ss
imul
and
into
div
cmp
hlt
jb
push
dec
out
and
inc
push
roll
in
sahf
mov
test
mov
imul
inc
mov
or
cs
bound
scas
mov
roll
repnz
push
enter
mov
xchg
mov
test
mov
cmp
mov
aaa
into
in
shll
pushf
mov
or
pop
shll
sub
rorl
or
push
pop
mov
xchg
mov
nopl
push
push
ret
insl
ljmp
fdivrl
xchg
cs
lcall
adc
adc
sarb
lods
adc
ficomps
addb
dec
adc
mov
mov
cmp
dec
ss
mov
dec
adc
lret
std
jmp
cltd
inc
mov
mov
fstps
ss
mov
mov
popf
xor
and
imul
cld
sub
mov
sahf
les
imul
jmp
movsb
xor
xor
add
pusha
insb
call
repnz
add
popf
pop
xor
and
pusha
testb
and
cltd
in
mov
pop
enter
shrb
shll
jge
je
stos
and
mov
push
ss
adc
mov
sarb
lods
popf
inc
add
xchg
in
push
jb
sbb
lock
adc
mov
sbb
cmp
iret
jmp
fwait
shlb
loope
adcl
cld
pop
out
cmp
jbe
repz
cmp
fnstcw
adc
int
out
lock
and
push
inc
push
mov
mov
lods
jmp
stc
sbb
mov
push
clc
sub
jns
cmp
fdivrl
sub
xchg
les
int3
stos
and
cli
aaa
add
insb
lock
js
jl
xor
mov
cmc
gs
pop
cmpsl
xor
outsb
mov
mov
mov
sub
aaa
aam
lds
inc
push
pop
popf
xor
mov
loop
aas
mov
xchg
addr16
in
pop
nop
cmp
mov
inc
push
push
cmpsb
jb
push
inc
add
cs
xchg
mov
testl
adc
aaa
jnp
ss
push
add
sub
or
pop
xor
push
mov
shll
div
cmp
jle
shlb
cmpsl
jl
push
add
fidivs
lahf
lea
shl
cmc
sahf
imul
in
add
mov
jns
add
inc
outsb
and
xor
and
jne
rcr
jg
loop
loope
int3
sbb
jl
push
jmp
roll
jle
mull
push
test
fwait
nop
inc
fisttpll
insl
jle
int3
arpl
rclb
sub
mov
push
ljmp
pop
mov
movsb
lods
cs
scas
jge
push
mov
xchg
mov
sub
jns
mov
out
cs
out
std
pop
push
nop
insl
in
jne
adc
jge
mov
sub
test
lods
daa
push
sarb
cmovl
or
rclb
cmp
inc
imul
or
add
jns
adc
lret
jle
test
jns
xor
inc
popf
pop
notl
lcall
mov
mov
lods
sub
mov
mov
and
mov
imul
daa
adc
lahf
adc
cmp
int3
cld
pop
mov
mov
cmc
jnp
mov
int3
mov
cmpsb
mov
rcr
rolb
sarl
sahf
cmp
push
add
and
jle
mov
and
cmp
inc
adc
sub
inc
mov
out
adc
push
es
push
cli
notb
inc
addr16
je
in
xchg
inc
adc
push
ret
jne
les
rorb
xlat
bswap
mov
ljmp
fcompl
mov
jecxz
cmpsb
xor
mov
dec
out
mov
jl
mov
push
inc
scas
jb
out
xchg
inc
or
add
mov
sti
popa
mov
lods
inc
or
adc
push
clc
nop
inc
or
in
sahf
inc
mull
call
sti
sub
iret
mov
fidivrs
fisttps
sarl
mov
push
jmp
cld
mov
icebp
rorl
lret
fisttpll
mov
incb
mov
out
sub
aas
mov
jnp
notb
outsb
jmp
or
mov
dec
add
pop
mov
jl
dec
es
sub
inc
data16
sbb
inc
xchg
leave
ds
inc
adc
xlat
xchg
xor
lret
mov
pop
aam
sbb
les
pop
outsb
xchg
push
int3
sbb
daa
adc
dec
jg
xchg
cmc
or
push
dec
push
add
fstps
sti
clc
jmp
into
loope
hlt
xor
repz
imul
filds
clc
pop
inc
sahf
and
ss
scas
sub
sub
sbb
ret
push
call
adcb
iret
mov
xchg
cmp
push
pop
ljmp
ds
jmp
mov
call
repnz
cmp
sub
push
jge
lahf
add
mov
sub
loopne
sbb
mov
cmp
and
adc
sar
sbb
stos
mov
jne
cld
mov
add
leave
lods
push
sarb
mov
sbb
outsb
enter
jp
bound
loop
xchg
inc
xchg
push
add
clc
lret
cmp
add
inc
and
ja
pushf
pop
clc
vmread
jae
push
xor
inc
fs
push
cmp
mov
mov
insb
push
add
jae
popf
mov
ret
movsb
sub
orb
stos
xor
mov
cmp
inc
or
xchg
sbb
sbb
or
cltd
enter
cmp
sub
addr16
in
aam
xchg
cmp
add
and
xor
mov
jns
xchg
ds
pop
jge
mov
stos
lds
mov
mov
into
adc
lods
sub
xlat
adc
jae
sub
mov
push
movsl
sbb
dec
mov
sahf
add
in
lret
stc
sbb
cwtl
dec
nop
cmp
int
inc
add
ds
mov
mov
xor
orl
dec
sub
nop
cmpsb
repz
movl
jp
les
lods
inc
dec
in
cmp
jne
popf
cmp
mov
mov
pushf
lcall
es
adc
lret
outsl
out
in
sahf
aaa
data16
fidivrs
jp
xlat
stos
icebp
call
fdivrl
cmpsl
ss
cmp
bound
fsts
je
or
mov
ja
push
mov
jno
add
out
push
pop
inc
adc
push
lret
dec
daa
mov
cmp
and
inc
lret
mov
jecxz
jns
xchg
mov
dec
fcoms
fstpt
daa
and
inc
jbe
mov
sub
fldcw
cmp
iret
xor
add
and
fnstsw
cmp
jmp
add
pop
mov
sub
sbb
scas
in
fcomip
ss
add
insb
sti
xor
mov
xorb
push
fimuls
lret
sub
and
jno
divl
gs
repz
repz
outsl
out
sub
popa
repz
xor
enter
jno
xor
jb
icebp
pop
shlb
in
add
test
pop
jl,pn
inc
mov
arpl
data16
inc
push
dec
pop
or
das
test
test
das
repz
gs
and
in
xor
xchg
cmp
insl
rdtsc
xchg
xlat
jge
or
pop
scas
xor
insb
out
in
jle
lret
sahf
inc
lods
mov
subb
cmp
jns
mov
adcb
jg
aam
lods
fisubs
movsl
cltd
test
mov
inc
jecxz
inc
or
not
jns
dec
sahf
aas
stos
pusha
faddl
and
xchg
aaa
jp
sbb
rep
sarb
out
jns
cmp
mov
scas
fiaddl
inc
cmpsl
out
mov
and
aaa
aaa
into
fs
call
mov
push
lds
daa
jo
js
jb
pop
insb
inc
or
and
add
push
cmp
loope
aad
inc
repz
pushf
xchg
jo
addr16
push
idivb
add
push
sub
mov
mov
push
int
jo
insl
pop
adc
mov
mov
xchg
jecxz
add
xor
push
cmp
shll
repnz
jns
sub
dec
xchg
subl
mov
aam
mov
mov
shrl
rcl
imul
lock
xsha1
cmpsb
int
push
movsl
test
lret
sub
cld
inc
dec
loop
sbb
imul
mov
ret
xchg
cmc
cmp
cmp
mov
fsubp
js
mov
call
inc
test
mov
cmp
pop
mov
aam
sub
pop
pop
pop
repz
push
lods
pop
jp
mov
xchg
sub
lods
cwtl
das
fisubs
mov
push
pushl
imul
movsl
repnz
sbb
cmpsb
dec
clc
adc
sahf
dec
lds
dec
loop
pushf
dec
jecxz
adc
inc
out
push
and
pop
xchg
inc
mov
jae
cmpsb
cmp
or
pop
cmp
pop
jecxz
xchg
cmp
jns
mov
cwtl
jecxz
add
xor
push
ds
xor
bound
pop
icebp
mov
jp
sub
dec
cwtl
das
subl
mov
aam
mov
scas
cmc
aam
daa
rcl
imul
and
xchg
adc
cmpsl
out
lds
leave
sub
cli
inc
dec
jecxz
sbb
dec
xchg
push
les
add
roll
push
cmpsb
cmp
mov
fsubp
jns
mov
add
aas
sbbl
mov
pop
mov
aad
roll
mov
aam
daa
pop
icebp
pop
add
js
stos
push
jp
mov
xchg
sub
fcompl
mov
push
std
mov
das
jae
push
push
aam
add
mov
mov
adc
daa
insb
lds
mov
dec
jecxz
adc
inc
in
push
push
mov
xchg
aas
mov
jno
cmpsl
ds
or
pop
cmp
les
pop
in
nop
cmp
jns
mov
cltd
loop
add
xor
push
mov
push
aas
xchg
cmp
pusha
test
hlt
flds
jnp
sub
js
push
dec
cltd
xor
mov
mov
lods
hlt
aad
es
shrb
dec
repz
lock
adc
movsl
in
das
push
sub
clc
aas
dec
in
sbb
dec
xchg
imul
imul
in
and
mov
cmpsl
imul
lds
les
fucom
jp
mov
add
cmp
pop
pop
mov
aam
aam
mov
aam
es
repnz
add
js
adc
lret
xchg
cs
test
das
ficompl
mov
push
sti
mov
sub
dec
aam
add
mov
mov
adc
and
inc
lds
dec
in
cwtl
dec
jecxz
add
push
sbb
mov
xchg
cmp
test
call
or
pop
cmp
les
pop
in
ss
push
mov
xchg
mov
fistpl
mov
push
inc
xlat
xchg
pop
cmc
fdivrs
icebp
mov
jl
sub
js
add
lcall
mov
mov
stos
repz
insl
and
inc
hlt
mov
icebp
mov
adc
mov
lds
in
pop
dec
jecxz
insb
add
imul
adc
mov
out
xor
cmpsl
ds
mov
pop
mov
fnsetpm(287
jnp
mov
jp
add
cmp
and
add
pop
repz
add
xor
adc
leave
cwtl
das
sti
cmpsb
cltd
xor
sbb
dec
dec
stc
mov
sub
insb
mov
ret
repz
lahf
repz
push
adc
and
lcall
in
xchg
dec
in
or
imul
popa
mov
xchg
cmp
inc
out
cmpsl
rolb
pop
cmp
lds
out
lea
jp
scas
add
filds
and
or
fadds
pop
not
jge
repnz
idivl
sub
jns
add
xor
xchg
cs
sahf
mov
dec
test
xlat
outsb
and
shrl
inc
cmc
mov
repnz
adc
mov
ret
cs
dec
out
adc
insl
add
imul
loopne
and
mov
test
aas
inc
xchg
pop
mov
fxam
jl
mov
jnp
sub
lcall
and
mov
aas
add
pop
hlt
push
lcall
xor
adc
enter
movsb
cltd
xor
sbb
dec
sub
insl
mov
ret
hlt
popf
repz
adc
adc
cltd
inc
das
jae
dec
out
xchg
dec
in
or
add
sbb
and
mov
inc
in
cmpsl
ds
ffreep
pop
adc
jle
xor
jp
lods
add
cwtl
mov
and
or
fadds
movsb
pop
not
jl
repnz
idivb
sub
jns
add
xor
cs
popf
mov
dec
cmpsl
lock
outsb
and
shrl
inc
cmc
mov
repnz
adc
mov
ret
repz
imul
mov
fisttps
and
xor
aas
aas
test
pop
mov
pop
xchg
fsub
jl
mov
jnp
sub
lcall
and
mov
aas
add
hlt
push
pop
hlt
das
je
adc
cltd
xor
mov
mov
dec
sub
insl
mov
shl
repz
repz
adc
stos
inc
out
adc
cwtl
inc
das
jb
dec
out
xchg
dec
in
or
cmp
pop
mov
xchg
cmp
inc
in
cmpsl
ds
faddp
pop
adc
jle
xor
jp
lods
add
cwtl
mov
and
or
fadds
mov
pop
repnz
cmc
jge
daa
into
jns
add
xor
xchg
cs
pushf
mov
dec
cmpsb
out
xlat
outsb
and
shrl
inc
cmc
mov
mov
adc
lahf
out
enter
dec
out
adc
inc
mov
mov
fimuls
and
xor
aas
ds
pop
mov
pop
xchg
xlat
in
or
add
aaa
jl
mov
mov
aas
ljmp
pop
cmc
push
cld
pop
hlt
sub
dec
jnp
add
xor
mov
mov
dec
es
xlat
outsb
lahf
inc
aad
jns
cmc
mov
lcall
inc
in
adc
xchg
aas
das
jo
push
out
xchg
dec
in
or
cmp
imul
pop
lea
mov
push
mov
popa
ss
pop
push
pop
call
jp
stos
push
popf
faddl
and
cs
mov
push
inc
flds
mov
pop
repnz
hlt
jle
es
jns
incb
xor
cwtl
das
push
lcall
movsb
in
fsubrs
aam
clc
inc
testb
xchg
adc
les
popf
in
leave
push
mov
push
out
adc
inc
mov
mov
fmull
jmp
or
pop
mov
pop
aad
jge
mov
jl
sub
pop
add
fwait
xor
push
and
std
test
xlat
fstps
pop
testb
cmc
sub
adc
dec
jl
jle
fwait
xor
lahf
lcall
repnz
outsl
popf
inc
insl
ja
testb
adc
test
xchg
cmp
push
call
rorb
pop
cmp
insb
add
pop
mov
scas
lods
inc
loope
test
mov
fcmovb
pop
or
jmp
jnp
test
add
sub
and
jg
ds
mov
pop
repz
jg
and
jp
cld
inc
popf
xor
sbb
mov
dec
mov
aad
idivb
testl
ret
test
adc
xor
out
xor
dec
out
xchg
mov
fimull
and
sub
stos
inc
cmp
enter
out
add
es
pushf
xor
mov
test
inc
fdivr
cmpsb
inc
fcom
sbb
testl
jle
mov
ret
hlt
popf
fwait
xor
adc
mov
jo
inc
xlat
outsb
jne
testl
inc
jmp
xor
xchg
cmp
enter
jmp
mov
fildll
adc
mov
mov
lods
lods
inc
filds
int3
arpl
fadd
pop
or
xchg
in
pop
cmpsl
or
scas
stc
es
add
jge
aas
push
sahf
stc
iret
jne
hlt
cmpsb
lock
enter
inc
sahf
xor
dec
xchg
mov
dec
mov
ret
hlt
cmp
outsb
adc
push
lods
shrb
cltd
loope
lret
adc
push
jmp
test
mov
outsb
add
or
lods
inc
pop
push
stos
inc
cmp
popa
mov
leave
pusha
mov
call
jle
and
popf
push
add
popf
xor
mov
or
fyl2xp1
movsb
inc
sbb
dec
mulb
daa
insl
jg
lahf
dec
jle
jp
popf
xor
fwait
pushf
xor
adc
and
jno
inc
fsubrs
mov
testb
out
stos
sbb
int3
xchg
cmp
leave
push
push
ljmp
jb
addps
and
scas
inc
fldl
int3
arpl
xlat
enter
ljmp
movsl
or
scas
mull
mov
add
fstpt
inc
xlat
push
pushf
stc
int
pop
cmc
movsl
out
adcb
jl
stc
inc
sahf
xor
dec
xchg
mov
push
lahf
out
jno
rcl
repz
insb
adc
lea
push
lods
mov
fbstp
adc
push
jmp
cmp
pop
outsl
push
nop
mov
in
lods
inc
pop
add
lret
pop
lret
iret
call
jg
and
popf
push
incl
popf
xor
mov
add
fprem
mov
popa
clc
dec
cmc
pusha
mull
insb
jg
sahf
inc
jle
jns
popf
xor
lcall
inc
in
mov
jno
inc
fsubrs
mov
testb
out
stos
pop
pop
xor
leave
imul
jb
xor
push
nop
daa
mov
mov
popa
stos
scas
inc
faddl
int3
arpl
enter
ljmp
movsb
or
lods
mulb
mov
add
fstpt
inc
xlat
push
fwait
stc
int3
jae
cmc
movsb
in
adcb
jl
clc
inc
sahf
xor
dec
xchg
mov
push
sahf
out
jno
rcl
repnz
imul
lea
push
lods
mov
fidivs
ud1
leave
ljmp
call
mov
outsl
push
aad
and
jecxz
lods
inc
pop
add
inc
ss
popa
lods
push
lret
into
call
jg
and
popf
push
incb
popf
das
je
mov
add
inc
sbb
dec
hlt
pusha
mull
inc
jle
js
popf
xor
cltd
pushf
xor
adc
push
fidivl
aas
fsubrs
mov
testb
in
stos
push
pop
xor
leave
push
mov
mov
fldt
or
mov
pusha
test
stos
inc
mov
int3
arpl
aad
pop
pop
push
ljmp
mov
add
lods
cmc
es
incl
fstpt
inc
fcoms
stc
lret
mulb
lds
idivl
sahf
xor
dec
xchg
mov
push
popf
in
jno
mov
clc
mov
lods
mov
fdivl
or
cs
jmp
cmp
jo
mov
mov
loop
lods
inc
pop
add
popa
stos
push
lret
bound
test
pop
sahf
push
cld
pop
sahf
sub
dec
and
mov
stc
inc
repnz
clc
and
pop
fwait
inc
jg
jbe
sahf
xor
leave
bsr
mov
jb
cmp
stc
nop
call
or
scas
cmp
adc
int
xor
push
jmp
xchg
mov
fldcw
or
xchg
inc
fnstcw
inc
mov
int
sub
leave
pusha
add
es
pop
mov
add
mov
std
inc
inc
fdivl
inc
arpl
enter
mov
ret
jle
cmc
cmp
outsb
push
popf
xor
mov
push
fwait
loop
jb
mov
stc
nop
addr16
popl
pop
scas
mov
fidivl
lret
out
push
ljmp
jno
mov
jno
mov
add
lods
inc
push
add
bound
lret
cld
cmpsl
ljmp
cli
or
mov
ret
repz
inc
fcmovne
adc
cli
inc
lock
stc
and
sbb
mov
sahf
xor
aas
call
fdivl
cmp
jno
mov
xchg
out
clc
pop
pop
sbb
adc
into
mov
xor
lods
push
in
fldl
jae
xor
jo
or
sub
scas
inc
xlat
jle
inc
mov
int
sub
lret
dec
jmp
jle
call
mov
test
lret
and
cld
inc
inc
fdivl
fimull
arpl
outsl
popa
clc
mov
ret
hlt
cmp
xor
mov
loopne
jb
mov
stc
nop
psubw
mov
pop
scas
xchg
fdivs
int3
out
push
ljmp
jno
scas
pop
jb
mov
add
lods
inc
push
add
bound
enter
cmpsb
jmp
fcomps
or
sub
mov
jl
inc
fcomi
popf
inc
fmul
adc
inc
out
arpl
and
sbb
mov
lahf
ss
or
push
sbb
jae
cmp
jb
mov
xchg
in
stc
nop
mov
loopne
scas
adc
into
mov
xor
in
fildl
or
xlat
jno
or
sub
mov
lods
inc
scas
test
sub
lret
bound
dec
jmp
jl
jmp
mov
test
daa
mov
sti
inc
inc
fdivl
inc
fisttpl
arpl
les
stc
lahf
in
sbb
roll
push
lahf
ss
mov
push
cltd
jb
mov
stc
nop
arpl
cli
xchg
inc
test
scas
mov
sbb
pop
mov
int
sub
pop
push
push
in
aaa
jp
or
ljmp
scas
inc
push
scas
inc
xor
cmpsb
push
int
add
cmp
sbb
mov
sub
mov
jp
inc
fdiv
fwait
inc
fmul
adc
in
arpl
push
sbbb
aas
sbbl
jmp
or
push
pop
pop
fnsave
mov
xchg
jecxz
stc
nop
mov
ficoms
scas
xorps
iret
mov
xor
in
fiaddl
je
sub
dec
xchg
sub
mov
lods
inc
lods
cmc
into
gs
iret
lret
bound
dec
in
cmpl
adcb
int
pop
sahf
cmpsb
out
sub
stc
inc
inc
fnsave
inc
fisttpl
fs
ret
insb
stc
popf
in
sbb
mov
mov
ss
mov
push
xchg
fstp
jae
mov
cli
xchg
bound
xchg
sbbl
mov
sbb
push
mov
int
daa
push
jmp
add
in
xor
push
jae
mov
nop
daa
test
scas
inc
push
cld
scas
inc
jae,pn
movsl
dec
int
add
jmp
aam
or
es
sub
js
inc
fucomp
cltd
inc
fmul
adc
inc
jmp
cli
sbb
sbbl
cmp
mov
ss
push
cmp
mov
jne
mov
xchg
loop
stc
nop
mov
fcoml
scas
or
cs
out
flds
jne
sub
jno
add
es
es
mov
lods
inc
stos
hlt
iret
data16
incl
test
ljmp
jae
lahf
movsb
in
sub
sbb
ds
fisubrs
inc
fmull
gs
shrl
fwait
loop
sbb
mov
aaa
inc
mov
push
xchg
fcmovnu
je
mov
jae
cs
xchg
pusha
or
xchg
cmp
sbb
mov
aaa
into
add
aaa
into
loope
push
in
push
add
xor
or
lret
cld
cmpsl
xchg
sub
sbb
mov
sub
into
mov
in
xor
in
adc
or
and
sub
fwait
inc
sub
in
xchg
inc
push
data16
aas
jmp
test
xchg
cmp
cmp
mov
pop
cmp
mov
jbe
xor
jae
scas
std
xchg
loopne
cli
xchg
mov
xchg
sbb
jno
cmc
pusha
dec
jnp
pop
repz
call
imul
jno
push
lret
data16
es
ret
push
push
or
dec
aas
stc
mov
sub
jo
mov
cmp
rolb
mov
popa
fcoms
xchg
ljmp
cmp
xchg
push
cs
in
xchg
ret
dec
adc
lahf
or
xchg
out
lret
into
mul
adc
jae
imul
add
insb
xor
jl
movsl
jae
add
ljmp
pop
int
mov
popa
pop
sti
pop
xchg
lahf
aam
jmp
sub
cmp
daa
pop
xchg
add
or
and
mov
mov
cs
rcl
pop
dec
out
into
idivb
rorb
push
ss
and
mov
jae
pop
inc
mov
push
mov
sahf
enter
repnz
cmp
imul
mov
jno
and
inc
pop
std
dec
jecxz
inc
fstpt
mov
mov
or
mov
sub
adc
jbe
mov
or
pop
jns
insb
push
mov
fstps
ljmp
or
or
cmp
mov
adc
xor
je
in
mov
xorb
fs
push
cmp
dec
xchg
into
cld
lods
cmpsb
cmp
andb
mov
dec
inc
inc
js
dec
or
jg
daa
jne
jmp
idivl
dec
xor
leave
fwait
xor
adc
xchg
data16
xchg
loope
gs
outsb
lods
sbb
jle
push
xchg
xor
or
cmp
leave
or
jne
push
gs
movsb
mov
push
lods
push
xchg
push
xlat
mov
or
dec
cmp
push
xlat
repz
aas
sub
lods
sub
mov
aam
push
xchg
mov
mov
adc
pop
aad
incb
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
aam
inc
arpl
in
pusha
and
shrb
sub
mov
add
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
in
test
inc
cmpl
inc
movsb
sbb
insl
int
adc
xor
iret
lds
cmp
cmp
