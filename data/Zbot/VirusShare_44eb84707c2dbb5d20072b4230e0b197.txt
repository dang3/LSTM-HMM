push
mov
lea
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
in
lea
push
push
push
call
add
pop
lea
pop
mov
ret
add
push
mov
lea
push
pushl
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
add
add
add
mov
lea
push
pushl
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
push
mov
lea
push
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
in
lea
push
push
lea
push
subl
lea
push
subl
lea
push
jmp
jmp
call
pop
mov
xor
adc
movl
add
lea
popl
mov
mov
mov
mov
xor
push
pop
push
pop
test
je
add
mov
lea
dec
lea
mov
sub
popl
pushl
lea
pop
repz
jmp
mov
pop
ret
add
in
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
nop
nop
nop
push
mov
lea
push
pushl
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
nop
nop
nop
push
mov
lea
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
in
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
in
lea
push
pushl
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
in
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
in
lea
push
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
nop
nop
nop
push
mov
lea
push
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
lea
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
push
mov
lea
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
in
lea
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
in
lea
push
pushl
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
in
lea
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
nop
nop
nop
push
mov
lea
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
in
lea
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
in
lea
push
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
in
lea
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
push
call
add
pop
lea
pop
mov
ret
add
push
mov
lea
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
in
lea
push
pushl
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
push
mov
lea
push
pushl
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
in
lea
push
pushl
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
in
lea
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
push
push
call
add
pop
lea
pop
mov
ret
add
push
mov
lea
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
in
lea
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
lea
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
nop
nop
nop
push
mov
lea
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
push
call
add
pop
lea
pop
mov
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
in
lea
push
pushl
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
lea
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
lea
push
pushl
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
in
lea
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
in
lea
push
push
push
call
add
pop
lea
pop
mov
ret
add
push
mov
lea
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
push
push
push
push
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
push
push
call
add
pop
lea
pop
mov
ret
add
push
mov
lea
push
pushl
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
lea
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
in
lea
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
lea
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
in
lea
push
push
push
call
add
pop
lea
pop
mov
ret
add
push
mov
lea
push
pushl
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
ret
mov
push
call
push
pop
sub
cmp
jb
add
cmpb
je
add
cmpb
je
add
add
mov
cmp
je
mov
sub
jne
push
pop
jge
mov
dec
loop
ret
.byte
enter
jp
add
out
add
mulb
add
cwtl
and
add
and
add
and
add
add
mov
add
push
add
cmpsb
and
add
add
mov
add
int3
and
add
add
test
add
push
and
add
add
xchg
and
add
and
add
add
add
and
add
and
add
add
add
add
add
add
in
and
add
and
add
add
push
and
add
add
cld
and
add
and
add
and
add
add
cmpsb
and
add
add
add
and
add
and
add
and
add
add
add
pop
and
add
add
cmp
add
add
and
add
add
out
add
mulb
add
cwtl
and
add
and
add
and
add
add
mov
add
push
add
cmpsb
and
add
add
mov
add
int3
and
add
add
test
add
push
and
add
add
xchg
and
add
and
add
add
add
and
add
and
add
add
add
add
add
add
in
and
add
and
add
add
push
and
add
add
cld
and
add
and
add
and
add
add
cmpsb
and
add
add
add
inc
gs
je
dec
popa
outsb
fs
add
dec
add
insb
outsb
push
add
cmp
inc
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
sbb
push
jb
je
inc
outsl
outsb
jae
insb
gs
add
inc
outsl
insl
insl
popa
outsb
fs
imul
inc
outsl
jo
inc
imul
imul
arpl
insl
gs
imul
jb
je
inc
outsl
outsb
jae
insb
gs
add
add
je
jne
jb
outsb
je
imul
jns
add
icebp
add
imul
jb
je
arpl
rolb
dec
gs
jo
gs
jb
jns
xlat
add
je
imul
bound
gs
add
sbb
push
jb
je
inc
outsl
outsb
jae
insb
gs
add
popa
je
push
imul
insb
jae
jb
jo
inc
add
dec
add
je
jb
arpl
jae
gs
jo
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
gs
inc
imul
gs
jbe
outsb
je
add
push
gs
insl
gs
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
insb
insb
push
imul
jb
gs
add
inc
insb
insb
push
outsb
jb
imul
jb
gs
add
inc
insb
insb
push
imul
jb
gs
add
inc
insb
insb
push
outsb
jb
imul
jb
gs
dec
dec
inc
dec
inc
dec
inc
push
cs
insb
add
sbb
inc
jb
addr16
jne
jb
inc
imul
inc
jb
addr16
imul
imul
je
imul
push
jo
arpl
add
add
inc
jb
add
and
inc
js
jb
arpl
outsl
outsb
inc
add
adc
inc
insb
insb
push
outsb
jb
imul
jb
gs
push
add
addr16
arpl
jo
inc
imul
dec
inc
gs
popa
insb
insb
outsl
arpl
mov
push
dec
inc
gs
gs
imul
push
je
inc
push
add
insb
imul
outsl
outsb
add
insb
inc
bound
je
add
insb
insb
dec
gs
popa
addr16
outsl
js
add
push
dec
inc
dec
dec
xor
cs
insb
insl
insl
arpl
insl
addr16
fs
insb
add
add
add
add
xor
add
dec
add
orb
add
pusha
add
sbbb
add
js
add
add
add
add
add
nop
add
addb
add
hlt
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
lock
add
add
add
add
add
add
or
add
adc
add
or
add
and
add
xor
add
add
add
add
add
add
add
data16
adc
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
lods
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jnp
jl
lods
lods
stos
add
cmpsb
cmpsl
push
mov
mov
mov
leave
lret
into
int
rcl
shr
rcl
shl
iret
ror
hlt
int3
int3
into
hlt
mov
enter
in
mov
mov
stos
lods
lods
lea
fwait
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
leave
lret
rcl
cld
fcomp
xlat
std
fcom
fcom
aam
aam
ror
iret
dec
int
aam
ror
sar
ret
std
mov
mov
lods
iret
movsl
mov
mov
das
xor
add
add
add
add
add
add
add
add
add
add
lods
lods
lods
add
lods
lods
sbb
mov
jnp
mov
sar
dec
leave
lret
call
iret
iret
aam
aam
xlat
fcom
call
fcom
call
dec
int3
int
int
int
aad
dec
int3
int
sarb
mov
scas
lods
std
cmpsl
cmpsb
cmpsb
ljmp
push
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
pop
pop
add
inc
add
pop
add
or
inc
or
sbb
add
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
leave
dec
int
call
rcl
call
fcom
call
xlat
fdivr
aam
into
int3
int3
dec
leave
lret
dec
int3
into
inc
mov
sarb
pushl
cmpsl
cmpsl
jmp
lcall
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
push
imul
ds
sbb
or
push
xor
cmp
aaa
cmp
and
add
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
rol
ret
mov
call
call
aam
dec
rcl
dec
leave
inc
mov
ret
ret
ret
mov
mov
scas
lods
scas
jmp
popf
popf
cwtl
xchg
xchg
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
outsb
xor
jl
jg
jl
jno
jb
bound
mov
cmp
cmp
inc
inc
inc
mov
outsb
outsb
outsb
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsl
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
dec
enter
ret
mov
mov
ljmp
movsl
movsb
lcall
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
fwait
fwait
fwait
in
test
push
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsb
outsb
add
pop
or
jp
xchg
nop
mov
xchg
xchg
xchg
incb
jl
idivb
jp
outsl
jo
out
pushw
pushw
jne
ret
jg
jns
jp
arpl
fs
inc
inc
cmp
sbb
sbb
adc
or
stos
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsl
lcall
nop
nop
incl
test
xchg
xchg
xchg
mov
mov
cwtl
mov
js
js
das
xor
add
add
add
add
add
add
add
add
add
add
mov
push
push
addl
in
movsl
mov
incl
mov
std
xchg
jge
jb
jo
jne
jne
jge
jge
test
xchg
data16
cmp
and
jge
cmp
movsl
movsb
mov
icebp
stos
lods
lods
sti
stos
lods
lods
lods
stos
lods
test
test
std
fwait
fwait
cltd
xchg
xchg
xchg
decl
jge
jns
jp
jp
jp
mov
xchg
movsb
movsl
movsb
scas
mov
sti
mov
mov
mov
mov
mov
lods
lods
stos
xchg
sbb
add
add
add
add
add
add
add
add
pop
push
adc
movsb
mov
call
addb
mov
std
xchg
cwtl
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
mov
mov
pop
pop
push
push
or
inc
dec
insl
insl
insl
jl
test
leave
fwait
lcall
cltd
fwait
lcall
mov
incl
mov
cltd
lcall
lods
lods
scas
mov
mov
mov
mov
mov
std
mov
mov
mov
jl
or
add
add
pop
pop
adc
lods
cmpsl
call
lcall
incl
xchg
xchg
xchg
xchg
sahf
pushf
pushf
std
movsb
movsl
movsl
stc
mov
xchg
xchg
in
xchg
nop
in
test
push
jne
push
cmovp
add
or
or
sub
push
dec
dec
dec
data16
jno
mov
xchg
rclb
xchg
std
nop
decb
xchg
xchg
lcall
movsl
cmpsb
ljmp
lods
test
mov
stos
xchg
std
shlb
mov
mov
ljmp
mov
add
pop
pop
adc
mov
jmp
sahf
cltd
cltd
incl
mov
nop
nop
nop
call
xchg
xchg
pushf
pushf
popf
mov
test
movsl
negl
jp
movsl
push
push
push
outsl
dec
dec
dec
pushaw
popa
arpl
jno
mov
jge
addl
int
lea
notl
lea
lcall
cwtl
pushl
cwtl
jge
mov
mov
mov
je
mov
sub
mov
mov
mov
lods
stos
mov
mov
add
pop
pop
adc
mov
ljmp
cltd
decl
xchg
call
xchg
xchg
call
cwtl
xchg
fwait
lcall
mov
movsb
movsb
std
mov
cltd
fwait
out
xchg
xchg
mov
aad
xchg
lcall
xchg
cmc
xchg
xchg
std
xchg
jle
cltd
jle
mov
js
ljmp
cmp
mov
sub
mov
sbb
scas
pop
adc
ljmp
pop
or
mov
aas
mov
mov
stos
pushf
movsl
movsl
movsb
and
add
add
mov
pop
adc
mov
mov
call
xchg
xchg
lcall
pushf
pushf
jmp
sahf
pushf
lcall
xchg
cwtl
call
xchg
xchg
call
fwait
cld
popf
cwtl
popf
stc
lahf
pushf
cltd
stc
sahf
xchg
xchg
cld
sahf
mov
xchg
jnp
xchg
jb
cwtl
insl
dec
fwait
fs
pushf
push
pop
mov
pop
adc
cmpsl
pop
adc
stos
pop
adc
lods
pop
adc
stos
pop
adc
scas
pop
adc
mov
adc
mov
adc
mov
push
mov
lods
lcall
scas
scas
scas
movsb
mov
movsl
add
add
add
add
mov
pop
pop
adc
mov
ljmp
lcall
sahf
popf
lcall
movsl
movsl
jmp
mov
decl
mov
decl
js
cltd
jg
lcall
call
push
sub
decl
inc
or
xchg
inc
add
xchg
inc
add
lcall
ljmp
popa
sbb
mov
sbb
mov
push
pushl
push
mov
insl
and
mov
addl
mov
scas
lods
mov
lahf
sahf
lahf
add
add
add
add
mov
test
adc
mov
ljmp
lcall
movsb
movsl
jmp
cmpsb
cmpsl
ljmp
test
lcall
jle
mov
decl
pop
cmp
mov
mov
incl
cmp
incl
cmp
add
popl
call
inc
add
lahf
dec
add
cmpsl
push
or
mov
and
mov
es
mov
jb
inc
jne
inc
js
inc
jns
inc
jnp
dec
jp
dec
test
stos
mov
scas
mov
mov
mov
mov
add
add
add
push
adc
lods
test
jmp
mov
stos
ljmp
lods
lods
pushl
scas
lods
jmp
jle
incl
ds
incl
cmp
incl
add
cmpl
decl
ds
ds
xchg
inc
add
lcall
jmp
pop
adc
mov
jns
inc
jg
dec
cmpb
lret
test
dec
xchg
dec
mov
call
mov
call
lea
into
stos
mov
les
mov
movsb
mov
mov
add
dec
dec
adc
movsl
mov
lcall
test
ljmp
mov
pushl
mov
pushl
stos
stos
lcall
push
and
xchg
decl
inc
adc
mov
incl
cmp
add
lea
add
ds
xchg
inc
add
popf
inc
add
mov
dec
add
lods
push
add
inc
jge
dec
xchg
into
mov
rorb
dec
call
xchg
dec
call
xchg
dec
fistl
fstps
test
enter
mov
mov
movsb
movsb
movsl
arpl
mov
add
add
add
cltd
cwtl
xchg
add
dec
adc
jp
movsb
lahf
lahf
jmp
mov
stos
stos
pushl
mov
mov
mov
mov
mov
mov
scas
mov
mov
pop
cmp
mov
call
dec
sbb
lea
decl
inc
pop
decl
ds
xchg
inc
add
sahf
dec
add
mov
dec
add
test
add
mov
push
inc
jb
dec
mov
aam
push
fcoms
push
fistpl
pop
jmp
pushf
push
jmp
lahf
pop
jmp
mov
pop
fdivs
mov
in
cmpsb
test
sahf
lahf
mov
add
inc
inc
adc
je
sahf
fwait
cltd
jmp
sahf
pushf
fwait
ljmp
mov
pushl
mov
mov
pushl
popf
xchg
call
push
and
xchg
push
and
xchg
push
and
xchg
push
and
xchg
dec
sbb
xchg
inc
or
popl
call
add
mov
dec
add
lods
push
add
mov
add
mov
jge
call
lcall
fisubs
fs
cmpsb
jmpw
cmpsl
data16
call
stos
imul
call
mov
dec
les
cmpsl
cmpsl
cmpsb
mov
sahf
sahf
add
aas
inc
adc
jp
xchg
xchg
call
lahf
sahf
pushf
ljmp
mov
pushl
mov
mov
mov
movsl
mov
call
pop
das
lcall
pop
sub
xchg
push
sbb
call
add
mov
dec
add
lods
push
add
mov
add
mov
add
mov
mov
frstor
jmp
lods
jno
out
jo
call
mov
in
mov
out
mov
out
mov
out
mov
jmp
mov
mov
repnz
cmpsl
lcall
sahf
add
jg
cmp
aas
adc
push
xchg
mov
cltd
cltd
xchg
lcall
mov
pushl
mov
mov
mov
mov
cmpsl
lcall
pop
xor
mov
push
xor
lcall
lcall
dec
add
mov
push
add
mov
add
mov
add
mov
jno
ficompl
js
call
mov
in
mov
cmp
mov
test
repz
hlt
mov
mov
enter
mov
test
daa
mov
sahf
sahf
add
add
add
arpl
cmp
pusha
pop
jne
jge
out
test
xchg
xchg
xchg
pushl
mov
mov
mov
ret
ret
pushl
subl
mov
insl
inc
jmp
push
pop
call
inc
add
movsl
dec
add
test
add
lods
push
add
mov
add
mov
fs
sarl
jmp
movsl
gs
jmp
mov
mov
icebp
les
push
push
xchg
push
enter
leave
xchg
clc
mov
out
mov
mov
clc
stos
lods
stos
mov
popf
popf
xor
pushf
add
add
add
xor
push
inc
dec
inc
jb
pop
push
in
push
decl
mov
mov
mov
sar
ret
ret
inc
mov
jl
popf
push
dec
ljmp
xor
cltd
dec
ud0
dec
add
cmpsb
dec
add
stos
push
add
mov
add
mov
pop
add
addr16
xlat
mov
jmp
mov
in
ret
xchg
push
lcall
lret
test
pushf
stc
int
cli
rcrb
cld
int
push
lret
loopne
mov
cli
mov
mov
lahf
sahf
lahf
aas
xchg
add
add
add
sub
cmp
jecxz
bound
mov
mov
mov
mov
sar
ret
ret
inc
inc
enter
mov
mov
lahf
outsb
dec
ljmp
jp
jmp
dec
push
lcall
dec
add
stos
push
add
mov
add
mov
popa
add
enter
shrl
ficoms
push
iret
mov
push
iret
movsb
push
shll
cli
aad
sti
fsubrs
std
fsubrl
push
rcrb
dec
lret
mov
mov
lahf
sahf
sahf
dec
xchg
xchg
xchg
add
cltd
cltd
add
add
add
xor
add
daa
sub
inc
inc
inc
bound
push
xlat
jae
jno
mov
mov
mov
ret
ret
ret
mov
dec
enter
rol
mov
xchg
jmp
push
ljmp
pop
sbb
jmp
push
add
mov
add
mov
popa
add
into
data16
fsubrs
fidivrs
out
cmpsb
pop
push
int
cld
fsubrs
sti
fdivs
cld
fnsave
cld
loope
loop
in
loope
push
fldenv
call
into
leave
mov
mov
mov
xchg
xchg
or
add
add
xor
add
sbb
add
dec
dec
outsl
outsb
outsb
mov
ret
fcom
jmp
aad
not
rcl
std
int3
int3
into
dec
lret
lret
dec
lret
leave
dec
leave
leave
inc
leave
mov
mov
ljmp
jo
lcall
dec
add
lods
push
add
mov
add
mov
arpl
dec
push
add
fidivs
ljmp
cli
fsubrs
std
fidivrs
std
loop
std
jecxz
in
cld
out
out
ljmp
clc
fbstp
call
into
leave
mov
lahf
mov
or
add
add
xor
add
pop
pop
pop
or
mov
loope
in
call
in
test
in
leave
fucom
aam
std
int3
iret
sar
mov
xchg
lods
jl
ljmp
dec
add
pushl
pop
add
ret
dec
addr16
aam
add
fsubrl
jmp
jbe
out
xchg
xor
stc
lds
loope
jmp
ret
std
out
std
ljmp
jmp
leave
ljmp
in
leave
cld
jecxz
in
mov
mov
xchg
adc
add
add
std
incb
std
std
incb
incl
repnz
or
jmp
pop
in
in
out
sub
in
out
dec
jmp
out
xchg
out
call
aad
jmp
mov
outsl
cmpsl
insl
cmp
mov
dec
add
stos
dec
add
mov
add
mov
bound
dec
addr16
insl
add
fidivs
jmp
mov
mov
out
ljmp
std
jmp
jmp
in
into
std
out
sar
out
iret
push
sar
lock
sti
out
in
fstpt
inc
ret
ret
out
cmpsb
cmpsl
cmpsl
mov
xchg
cwtl
add
add
add
std
incb
std
incb
div
clc
add
repnz
icebp
repz
out
icebp
icebp
pop
in
out
repnz
in
out
pop
loop
lods
mov
lahf
pop
lcall
dec
add
stos
push
add
mov
add
shll
enter
shrl
fisubrl
jmp
jae
jmp
push
push
scas
pop
cli
fidivl
in
iret
ljmp
out
sar
out
std
lock
out
push
icebp
repz
cld
out
sar
repz
jmp
fst
dec
lret
leave
repz
xchg
xchg
and
xchg
xchg
add
incb
idiv
incb
idiv
cld
add
hlt
cmc
or
rcl
xor
mov
jb
lcall
ljmp
push
add
mov
popa
add
leave
addr16
shrl
fdivl
jmp
js
out
mov
stc
mov
out
fcos
std
lock
std
icebp
push
fcos
std
repnz
std
hlt
std
repz
std
hlt
fdivr
repz
repz
push
cld
out
sar
hlt
loop
call
ror
clc
stos
lods
lods
lods
xchg
xchg
xchg
jo,pn
outsl
add
add
add
add
mov
jl
cltd
push
pop
lcall
dec
add
mov
add
mov
bound
dec
addr16
aad
add
fidivs
jmp
xchg
sub
cli
enter
jmp
std
repnz
std
lock
repnz
push
out
cld
out
aad
in
aam
sti
ljmp
stc
jmp
lret
push
in
out
fnstsw
call
xlat
fdivr
mov
mov
cltd
lcall
lcall
add
into
xlat
add
ror
sarb
jmp
pop
sub
lahf
dec
add
test
push
add
mov
bound
call
addr16
imul
loope
add
jmp
fwait
ss
sti
into
xchg
cld
in
cli
out
sti
out
stc
loope
push
loopne
push
loopne
push
fnstsw
in
fnstsw
jmp
fadd
std
call
faddp
imul
in
cmc
loopne
fsubrp
mov
mov
xchg
add
add
add
int3
add
mov
xchg
loopne
gs
mov
push
add
mov
add
mov
arpl
into
push
call
outsb
or
jmp
sbbb
out
inc
ljmp
call
shrb
cld
loopne
scas
cli
fcmovne
mov
fmul
mov
ljmp
enter
iret
shl
fst
out
fidivs
repnz
in
popf
call
lret
leave
push
stos
stos
lods
adc
cmpsb
test
add
ret
add
rol
mov
sahf
aam
jno
popf
push
sbb
test
sbb
mov
das
std
mov
addb
mov
lcall
iret
scas
mov
sarb
mov
rcl
int3
ror
int3
ret
rcl
mov
ror
mov
aad
jg
fcmovnu
jb
fnstsw
gs
in
out
jmp
xor
div
cmc
and
repnz
fstp
or
mov
int
mov
add
mov
mov
rolb
scas
les
test
test
cwtl
and
mov
xchg
sarb
mov
mov
mov
mov
mov
lret
lret
iret
into
addr16
rcl
push
ror
rorl
xlat
fadds
xlat
xor
fldenv
fcomp
fstpl
loopne
in
loope
call
pop
in
out
lock
idiv
add
std
incb
std
incb
std
incb
mov
mov
mov
mov
lods
lods
xchg
mov
mov
mov
mov
ret
rol
rol
xor
lret
int3
rcl
and
rcl
sbb
rcl
adc
rcl
or
aam
push
aam
fiaddl
fcmovnu
add
loop
add
in
add
int3
add
std
incl
mov
mov
add
ret
ret
sub
mov
mov
push
rol
or
enter
enter
lret
iret
add
rcr
add
aad
add
xlat
fadds
fcom
add
fcomp
add
aam
add
fnstsw
add
fsubp
add
jecxz
add
repnz
std
add
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
xor
add
add
add
add
add
add
ucomiss
pusha
xor
popa
adcl
push
xchg
sub
sub
addr16
sub
test
into
or
dec
in
test
and
ret
or
movsb
jae
shlb
push
out
notb
xchg
dec
push
cmp
ret
mov
loope
inc
adc
push
xchg
arpl
xchg
mov
movsb
out
cmp
cmp
sub
cmp
icebp
mov
loope
lods
js
fisubrs
sub
xor
dec
test
cmp
ret
stc
lock
stc
loopne
sub
movsl
jle
xchg
jle
sub
rcrb
dec
loope
repnz
and
jne
pop
out
jne
xchg
enter
sbb
xchg
sub
mov
outsl
nop
loopne
ret
addr16
xchg
adc
aaa
sbb
push
mov
sarl
fistpl
or
dec
fisttps
sub
shrb
out
add
lock
cmp
popa
sub
mov
mov
sub
push
int3
inc
fdivr
aaa
rcrl
pusha
idivl
fbstp
nop
jle
ret
xchg
or
xchg
cs
cs
pusha
aaa
mov
imul
pop
out
add
out
add
addr16
and
cwtl
xchg
sub
lret
mov
std
push
leave
pusha
mov
fbstp
stos
out
fdivl
xchg
movsb
push
and
clc
cmpsb
aas
xlat
sbb
hlt
sub
push
lahf
dec
jnp
jl
fidivs
pop
cltd
xor
mov
dec
jecxz
mov
ss
lods
inc
into
push
hlt
mov
stos
adc
je
sbb
mov
in
sbb
push
in
dec
inc
jbe
jb
jae
mov
ret
xchg
sub
out
dec
sbb
mov
dec
cmp
aas
mov
xchg
cmpsb
cmp
sbb
cmp
movsl
insb
ss
push
mov
idivl
jmp
xor
pop
repz
xor
adc
ret
hlt
fdivrl
dec
dec
das
fdivl
xor
fs
sbb
test
movsl
cmp
mov
jmp
insb
ret
pop
sahf
pop
xchg
cmp
movsl
jle
adc
push
inc
lods
add
jne
jmp
mov
jmp
inc
fadds
mov
cmp
cmc
jge
daa
mov
out
loop
fwait
xor
jbe
xor
push
xchg
sub
stos
mov
faddl
mov
shlb
xchg
adc
and
enter
mov
push
sub
daa
mov
mov
fisttps
std
int3
xor
sbb
xchg
pop
mov
fxam
jl
xchg
rclb
add
sbb
mov
insb
sarl
add
pop
hlt
push
loopne
iret
adc
adc
leave
cltd
xor
test
sbb
dec
dec
xlat
xchg
sub
jo
insl
mov
ret
hlt
mov
jge
gs
push
adc
add
enter
mov
in
jne
mov
aas
movl
xchg
sbb
dec
mov
inc
in
sbbl
push
leave
pusha
cmp
out
mov
rclb
add
jne
and
ljmp
mov
mov
cmp
mov
jge
es
out
loope
fwait
xor
jbe
xor
mov
sub
test
cmc
mov
shlb
xchg
adc
and
or
aam
dec
out
cmc
sub
mov
mov
fimuls
std
iret
outsl
push
fs
inc
and
jo
jae
leave
pusha
or
adc
int
popf
xor
jmp
stc
nop
mov
push
jmp
shr
orb
les
sub
test
adc
in
andl
or
addr16
pop
fstpt
adc
push
in
add
pop
push
fsts
push
jbe
cli
mov
rcrl
idivb
pop
scas
push
jp
inc
int
inc
sti
push
xlat
outsb
dec
mov
cmp
push
aas
mov
pop
les
mov
mov
lea
cmpsb
cmp
aad
mov
into
xor
push
push
in
orl
dec
inc
stos
in
test
push
push
mov
lret
add
mov
mov
jnp
sbb
cltd
sub
stc
nop
or
xchg
sub
sbb
mov
or
in
xorl
shrl
out
or
adc
mov
sbb
push
or
clc
aaa
sbb
mov
in
mov
and
es
and
push
repnz
push
add
sbb
jp
shll
cmp
and
imul
jp
sti
cli
add
sub
ss
clc
shlb
ret
lcall
xor
arpl
inc
mov
je
and
call
arpl
mov
inc
call
cmp
pop
insl
imull
shll
testb
lock
and
cld
or
imul
js
in
cld
push
addr16
sahf
xor
xor
mov
out
dec
fistps
add
jg
push
scas
inc
mov
out
xchg
fcmove
pop
adc
pop
out
aaa
xor
push
addr16
sbb
lea
mov
fsubrs
js
sub
ds
dec
push
jnp
mov
stos
fwait
nop
daa
ror
fdivl
icebp
sahf
xor
push
std
loop
xor
test
aaa
and
mov
xor
mov
aaa
and
ret
fs
xor
lahf
ss
les
sbb
dec
in
xlat
mov
mov
dec
sti
sbbb
xlat
xchg
sub
imulb
and
das
xlat
stos
inc
push
clc
adc
push
imul
andl
add
iret
dec
in
iret
data16
lds
sti
mov
mov
sub
or
and
jno
sti
jecxz
sub
inc
fildl
hlt
push
call
dec
icebp
call
add
jne
das
sbb
jne
clc
xlat
outsb
sub
test
daa
and
jae
add
jg
iret
and
adc
popa
pop
mov
ss
dec
out
cmp
adc
rclb
push
lods
ss
cmp
loop
scas
pop
or
add
iret
data16
lahf
xchg
sub
leave
int
sti
out
mov
sbb
cmp
dec
xor
data16
mov
mov
daa
call
or
and
push
jmp
jns
sbb
leave
jle
sti
aam
sub
jg
dec
dec
and
lcall
dec
in
sti
jp
xor
mov
lea
ja
scas
xor
fidivl
add
fdivl
dec
push
out
pop
testl
fucomip
lret
sti
mov
xor
leave
pusha
mov
xchg
sub
flds
push
sti
add
pusha
pop
sbbl
mov
rolb
popf
pop
divl
mov
dec
xchg
sub
xchg
mov
jecxz
ds
std
mov
sub
and
pop
dec
in
test
mov
loopne
push
cli
jmp
cmp
mov
sti
xchg
loopne
dec
loope
add
pop
pop
push
mov
jns
lds
iret
dec
jecxz
adc
lret
incb
or
sahf
mov
dec
in
icebp
mov
or
jecxz
insl
cli
xchg
fwait
pusha
dec
jecxz
mov
cmpsb
cmp
xor
pop
das
mov
les
dec
cmpsb
sub
cli
adc
dec
aaa
dec
jg
lea
xchg
adc
leave
mov
loop
sbb
push
out
and
loopne
imul
mov
stos
mov
insl
lsl
pop
dec
in
lea
dec
scas
inc
or
push
popf
and
in
add
cmp
popf
mov
xchg
mov
int
pop
jmp
shrl
sbb
aas
dec
xor
push
imul
pushf
xchg
out
fnstcw
push
or
mov
cwtl
push
push
and
mov
ret
inc
fprem
push
pop
hlt
cmp
xor
test
outsl
lret
bound
mov
sbb
push
jp
cmp
xor
inc
push
xor
xchg
pop
pushf
stos
mov
or
addr16
cmp
fwait
xor
sahf
xor
jle
dec
in
mov
add
sub
movsb
cmp
fsubp
jge
pushf
mov
scas
push
in
je
jl
cmp
gs
into
jne
sbb
popa
and
icebp
fadd
jno
cmp
ja
je
pmulhw
adc
mov
rcl
cmpsb
sbb
int3
mov
dec
stos
test
and
lods
adc
add
xor
push
outsl
inc
cmpsb
arpl
scas
lea
movb
mov
cmpps
cmp
dec
popa
lahf
pop
test
lds
aaa
add
out
lds
pop
adc
jmp
mov
mov
fidivs
mov
sbb
popa
mov
inc
mov
cmp
lcall
lret
sub
hlt
adc
neg
cmp
ss
mov
dec
mov
pop
xor
dec
mov
xchg
cmp
jbe
push
lds
test
aam
ss
stc
jno
fisubs
push
fmull
scas
iret
mov
orl
push
mov
xor
add
mov
pop
loop
jo
fwait
pop
xor
mov
mov
pushf
mull
mov
mov
roll
push
int3
jg
loopne
in
and
xchg
pop
jno
inc
mov
or
jg
test
pop
fistps
cmpsl
or
mov
ret
imul
mov
lret
inc
cmp
fsubr
ret
lock
mov
adc
hlt
stos
outsb
lods
es
sub
aam
mov
test
dec
jl
adcb
out
pop
adc
hlt
ds
dec
int3
fisttpl
push
add
stos
push
jmp
inc
xchg
leave
cmp
lods
sbb
mov
sbb
fcmovnbe
aas
lds
das
or
inc
mov
inc
out
rcl
stos
add
insb
cwtl
test
lahf
ror
ss
std
cmp
sub
xor
in
pop
push
mov
mov
adc
icebp
js
testl
lods
mov
and
into
pushf
add
fpatan
jns
nop
mov
scas
push
lret
incl
js
push
ret
es
nop
lret
dec
leave
inc
lods
add
or
mov
ja
jb
sbb
and
xchg
les
jbe
bnd
loopne
jo
inc
adc
dec
out
jo
push
jmp
dec
sbb
push
shrb
repnz
cmp
pushf
int
inc
mov
daa
out
jo
dec
jl
mov
imul
inc
out
in
stos
insl
inc
fnsave
xchg
insl
mov
jne
outsl
cmpsl
inc
iret
xchg
xor
addr16
push
cs
push
pop
scas
mov
sbb
xchg
push
adc
push
fimuls
pop
push
in
and
fisttpl
ret
add
sub
dec
mov
repnz
xor
test
test
dec
jle
mov
inc
lahf
insl
shll
pop
jbe
sbb
lcall
fnstcw
push
cmpsl
cli
xchg
shll
lds
cmp
call
or
dec
ds
rol
push
and
push
aaa
lret
mov
or
sub
popf
mov
push
ljmp
inc
fdivrs
call
popa
clc
dec
mov
out
or
aam
fwait
xor
int3
test
mov
xor
in
fistpll
add
push
out
sub
adc
nop
test
xor
std
pop
sub
test
jl
xchg
pop
mov
out
in
inc
or
mov
mov
fstl
test
loope
cmc
sub
das
mov
pop
repz
adc
ds
and
iret
test
mov
fcmovnb
pop
test
test
nop
push
xor
cmpl
adc
arpl
inc
mov
mov
cmp
shrl
and
icebp
mov
fldcw
cmpsb
lahf
test
pop
jb
sub
insb
cld
sbb
adc
push
fldenv
mov
in
inc
fistpl
cmpsl
ds
adcb
lds
outsb
add
shr
mov
xchg
cli
add
push
and
push
push
ds
daa
testb
shlb
std
gs
inc
fisubrl
test
mov
shlb
pop
les
sub
and
sbb
xor
fidivl
mov
mov
sub
out
in
cmp
fisttps
and
repz
dec
sbb
cmp
call
stos
pop
outsl
push
sbb
mov
add
iret
xchg
sbb
in
dec
fidivl
push
or
inc
jns
stos
push
add
movsb
mov
les
cmpsb
cmp
stos
cmp
pop
dec
ret
outsb
add
xchg
lret
jle
add
cmpsb
dec
push
mov
ret
into
fwait
cmp
mov
testb
lret
and
adc
cmp
dec
jecxz
jno
dec
xchg
iret
push
movsl
mov
mov
jb
icebp
mov
cmpsb
cmp
leave
mov
sub
cltd
cli
dec
pop
out
test
adc
into
leave
xor
cmp
xchg
sub
mov
dec
xchg
push
push
fwait
xor
mov
test
pop
mov
mov
mov
out
hlt
dec
filds
xchg
mov
sub
inc
pop
adc
mov
inc
fisubl
clc
rorl
push
jbe
jg
cmpsl
lahf
fidivs
rcrl
xchg
pop
jae
inc
pop
jno
mov
jno
pop
movsl
mov
shrl
out
inc
fisttpll
add
mov
and
push
and
pop
ds
cmpsl
mov
repz
mov
adc
lret
leave
push
sti
xchg
jl
cmpsb
cmp
test
inc
in
cmp
push
push
iret
pushw
jl
in
pushf
and
xchg
xorl
xchg
sub
imul
pop
xor
push
in
jmp
into
gs
or
in
test
mov
sbb
icebp
fnstenv
int
sbb
addr16
push
jmp
sub
xchg
jl
jb
in
xchg
sbb
aaa
lea
sarb
pusha
scas
inc
push
pop
push
out
out
jge
lods
or
adcb
movsb
cmp
or
daa
les
mov
mov
filds
xchg
in
arpl
jmp
add
aad
push
mov
repz
jp
push
mov
push
push
fcmovu
jae
orb
pop
xchg
sub
jbe
jo
cld
mov
fs
testl
or
xchg
ret
and
lret
sbb
pushf
jg
call
mov
dec
fbld
lea
push
lods
inc
cmpsl
and
pop
ror
popa
and
call
push
aam
push
popf
mov
fdivl
add
cs
fsts
mov
push
in
jecxz
jg
dec
or
or
popa
mov
mov
movsl
cmp
fldenv
pop
fs
pop
imul
xlat
aas
out
xchg
incl
cwtl
xor
or
mov
les
ret
cmp
lock
mov
ja
pop
jns
divl
movsb
cmp
cwtl
das
dec
xchg
ret
fs
cmpsl
xchg
iret
sub
aam
sub
test
inc
repnz
or
adc
sub
adc
lds
pop
out
xchg
cltd
dec
jecxz
mov
jge
cs
movsl
cmp
dec
fwait
xor
leave
mov
imul
test
lea
fstl
lret
ret
shl
xor
sbb
ss
out
js
cltd
jae
add
cmc
jnp
and
rcrl
stos
inc
mov
ror
pop
das
iret
lock
rorl
jle
add
or
and
adc
js,pt
iret
mov
loopne
jmp
decb
out
pop
push
and
addr16
jne
cmp
mov
or
jbe
out
ret
xchg
inc
push
pop
lock
push
mov
imul
mov
rcrl
sbb
or
stc
jb
sub
movsb
mov
loopne
or
jne
es
lret
lret
mul
or
ljmp
adcb
mov
and
ret
dec
cmpsl
jbe,pt
stos
inc
mov
lds
leave
pusha
movsl
add
jnp
into
out
jp
add
scas
jg
mov
leave
adc
jmp
xor
lods
pop
pop
hlt
movsl
lret
arpl
out
jnp
and
sbbb
dec
cltd
xor
mov
mov
mov
aad
or
iret
xchg
repz
leave
adc
cli
adc
xor
mov
ret
lock
mov
push
fsubp
fsubrs
clc
xchg
sub
jbe
popf
dec
dec
mov
sahf
popa
and
repz
inc
fcmove
add
xchg
popa
clc
xor
push
outsl
push
cmp
sub
sub
and
inc
dec
loope
adc
ljmp
fnsave
xchg
or
or
adc
sub
movsl
mov
xchg
sti
lcall
xor
jb
pop
pop
sub
mov
lret
dec
loopne
push
push
roll
jnp
lret
jecxz
jmp
cmp
pop
sahf
dec
imul
mov
mov
lret
xchg
or
push
call
mov
int3
cmp
and
mov
out
mov
dec
andl
dec
rcll
and
mov
test
rcl
hlt
add
out
xchg
pop
out
movsb
imul
sbb
xchg
cmp
fadds
mov
in
sub
mov
mov
int3
into
gs
mov
in
andl
dec
mov
iret
data16
sarb
iret
mov
push
in
jb
or
pop
pop
sub
xchg
cmp
fiadds
dec
scas
inc
push
sub
cld
cmp
arpl
push
sbbl
adc
adc
mov
mov
jle
aaa
into
cmp
push
push
in
xchg
mov
sbb
xor
pop
testl
mov
xor
add
push
call
out
mov
push
out
or
roll
scas
pop
out
popa
lods
inc
cmp
lret
inc
mov
jg
ljmp
add
lret
sub
mov
push
addl
idivl
fbld
lcall
inc
out
dec
sbb
push
imul
imul
add
stc
pop
or
lea
pop
jmp
push
incb
sbb
xchg
sub
mov
jne
in
mov
test
int3
sbb
ljmp
cmpsl
cmp
mov
popf
pop
sub
inc
mov
popa
clc
xlat
adc
adc
xchg
xor
loop
mov
lcall
sbb
add
rorl
push
in
bound
mov
cmp
mov
jle
jo
xor
ret
addb
adc
iret
stos
loop
adc
push
repnz
aaa
sbb
scas
cmpsb
int
cmp
shlb
repz
mov
mov
fcompl
mov
cmp
movsl
aam
jle
mov
cmp
push
jae
jp
and
loop
adc
and
add
outsb
in
mov
cmp
pop
lds
negl
rorl
and
sbb
push
jbe
in
xchg
mov
out
jb
repz
push
cld
leave
rcrb
xchg
jle
mov
cmp
xchg
pop
popa
pop
lret
lcall
adc
jnp
dec
mov
loope
push
lea
loope
jge
les
push
lock
xor
dec
insl
ret
jo
fnsave
push
mov
add
dec
add
enter
out
xchg
mov
fs
adc
sub
sub
out
outsb
mov
and
cmpsb
int3
add
shlb
mov
pop
out
insl
xchg
sbb
sbb
add
cmp
scas
aad
js
insl
dec
add
cmp
xor
stos
rcll
js
cwtl
mov
lahf
mov
mov
imul
mov
cli
fstl
pop
pop
in
xchg
cmpsb
shll
std
mov
sub
pop
repz
ja
mov
dec
push
push
fldcw
mov
dec
test
rcrb
bound
les
bound
decb
push
jbe
adc
jl
add
sub
int3
dec
adc
jl
aas
sbb
lea
mov
or
dec
inc
xchg
pusha
iret
repnz
movsl
xchg
popa
lods
inc
fs
test
and
dec
cli
cmp
mov
mov
inc
cwtl
out
sub
faddl
int3
push
arpl
push
lcall
mov
ret
dec
iret
pop
mov
ret
xchg
int
aas
inc
inc
rcrl
xchg
mov
addr16
cltd
arpl
aaa
pop
daa
and
sbb
dec
mov
dec
in
jnp
call
fwait
mov
mov
dec
mov
sub
push
je
and
hlt
das
dec
mov
lds
lea
test
dec
or
lea
out
jo
gs
xchg
fnsave
add
out
adc
pslld
aad
inc
mov
lods
sbbb
mov
push
and
xchg
sti
popa
sub
mov
add
fcoms
hlt
cli
pop
in
push
push
inc
inc
xchg
jge
cmpsb
sbb
mov
mov
mov
les
rol
or
dec
push
ja
test
lea
cs
and
and
mov
mov
and
lods
or
mov
shrb
dec
inc
pop
sub
and
pop
shl
pop
push
lahf
mulb
jne
jb
cmp
xchg
or
popa
mov
xor
push
imul
mov
lods
jbe
push
repz
pop
idivl
stos
in
sbb
fsubs
insb
cs
xchg
js
mov
cmp
into
pop
cmp
xchg
decl
lods
cltd
or
cmp
add
add
inc
das
dec
jg
data16
or
add
xchg
testl
lret
test
mov
jo
mov
out
hlt
adc
cli
shll
sub
leave
and
aad
add
int3
sub
sub
ja
ds
mov
fwait
sbb
mov
inc
in
rcll
nop
daa
add
dec
call
xchg
push
icebp
jno
in
out
mov
jo
pop
aam
add
out
rcrb
hlt
pop
ds
push
shll
fs
pop
mov
inc
and
jno
js
fwait
rcrb
fcmovb
iret
inc
pop
mov
xchg
aaa
push
movb
push
sbb
in
jae
mov
std
stos
push
xchg
into
push
push
mov
inc
or
pop
push
push
and
cmp
mov
sbb
pop
cmp
pusha
sub
addr16
sub
push
enter
shlb
jae
gs
sarb
popa
inc
adc
stc
xchg
subb
sub
cmpsb
mov
enter
fst
mov
int3
xor
daa
inc
gs
out
xchg
dec
ret
jge
ja
mov
and
jb
jge
lret
js
and
hlt
sahf
outsb
out
push
aam
mov
lods
pop
inc
test
repz
dec
lea
out
mov
dec
inc
in
fs
out
jl
scas
jb
push
or
js
shl
cmp
dec
shl
sub
stos
cmpsl
mov
add
sub
cmp
xor
dec
dec
outsb
inc
pop
aam
out
sbb
push
fdiv
mov
popl
push
fcomps
dec
jmp
pop
popf
pop
imulb
push
or
mov
push
out
loop
fsubl
orl
arpl
loope
add
rcl
roll
lahf
dec
cmp
lahf
xor
mov
mov
lods
sub
shrl
cmpsb
mov
xor
mov
dec
push
aam
mov
test
call
inc
mov
adc
adc
mov
cmc
sub
adc
adc
and
lea
sbb
push
xor
inc
jp
testl
stc
andb
test
mov
in
das
mov
dec
push
adc
repz
pop
fldcw
into
inc
mov
movsb
cmp
dec
arpl
xchg
sbb
jp
movsb
fisubrs
mov
sbbb
xchg
or
dec
je
out
mov
fnstsw
fmuls
or
int3
sub
mov
inc
dec
jge
jp
loop
daa
xor
insl
inc
paddq
push
leave
into
fwait
rcll
notb
mov
pop
pop
pop
jp
mov
loopne
cmp
icebp
or
and
dec
adc
add
mov
xor
xchg
fstps
mov
hlt
mov
sub
add
loopne
cmpsl
inc
mov
fs
jmp
ljmp
push
xor
push
cmp
push
sub
jns
outsb
movsb
gs
and
fs
adc
xor
rclb
dec
sbb
insb
mov
mov
lret
mulb
pop
pop
mov
mov
mov
cmc
in
xorl
out
dec
inc
jg
ss
jp
mov
dec
jb
pop
lods
popf
pop
out
add
nop
add
cmp
jge
test
mov
add
pop
loopne
loopne
add
dec
repz
push
popf
jl
lds
add
mov
leave
mov
jmp
cld
out
and
dec
push
adc
test
pop
mov
jmp
jne
idivl
mov
lea
mov
stos
sub
sub
mov
dec
and
jo
imul
pop
cmp
daa
cmp
iret
fcoml
pushf
cmpsb
int
int3
incb
sbbb
xor
mov
enter
cwtl
xor
mov
push
mov
or
push
gs
pop
sbb
push
in
out
insl
in
xor
popa
insb
outsb
or
lahf
cmp
or
test
sub
add
jb
insb
jbe
mov
jns
into
jbe
addb
and
outsb
adc
mov
mov
cmpsb
mov
dec
jno
int
mov
and
xorl
clc
pop
dec
inc
xorl
cmc
mov
stos
repz
sub
pop
dec
xor
stos
addl
lret
dec
push
rolb
push
and
cmpsb
shll
lods
push
mov
push
push
add
push
mov
and
and
mov
push
ds
mov
into
sbb
test
inc
lret
int3
push
fst
les
cmpsb
orl
sub
std
negl
pop
test
cmp
lods
jle
shll
mov
rolb
mov
in
push
push
lock
lods
pop
push
imul
repnz
xchg
hlt
xor
cmpl
aaa
inc
imul
push
fsts
shlb
frstor
cmp
cmp
inc
mov
fsubl
add
xchg
xor
jle
push
mov
cltd
xchg
jbe
loopne
jp
dec
pop
mov
push
imul
popa
out
xchg
xchg
inc
cltd
fadd
pop
scas
cli
movsl
jno
sbb
mov
mov
int
dec
mov
xchg
dec
mov
out
add
shrb
sbb
cwtl
lret
push
lcall
stc
cmp
outsw
int
pop
inc
mov
xlat
add
insl
sahf
or
call
iret
cmp
push
movsb
test
push
pop
and
mov
add
loop
daa
ds
fs
pusha
push
push
mov
repnz
dec
mov
pop
test
dec
mov
push
and
jne
mov
cwtl
data16
nop
jl
cmp
aaa
lods
and
jp
stc
push
xchg
cltd
or
iret
xchg
xor
sub
mov
into
test
ja
lods
sbb
xor
dec
sub
ficompl
mov
jg
lahf
aas
mov
insb
rcrl
mov
call
ficomps
in
or
leave
dec
adc
in
in
sub
les
ljmp
cld
inc
sbb
cli
cmp
popa
push
sub
add
adc
add
xor
cltd
call
pop
in
mov
or
pop
fwait
in
dec
adc
inc
lock
xor
sub
fwait
lahf
jge
arpl
insl
scas
rolb
and
test
test
fldz
xor
out
cli
mov
push
lahf
imul
lahf
pushf
imul
pop
cmpl
call
scas
cmp
jb
outsb
push
sbb
mov
sub
ret
add
push
jge
sub
mov
shr
lock
das
movsb
push
js
pop
lea
jecxz
xchg
mov
lret
sti
repz
inc
jge
cmp
dec
mov
pop
lods
and
xchg
xlat
jecxz
cmovbe
jmp
rolb
xlat
cmp
frstor
add
shrb
push
loope
jo
hlt
sbb
jb
imul
dec
dec
mov
pushf
sbb
jnp
jnp
mov
mov
sbb
sbb
or
sbb
jne
pop
jnp
jmp
push
push
adc
popa
or
in
adc
add
in
cmp
mov
loopne
gs
push
mov
and
cwtl
push
rcrl
daa
push
xor
jnp
data16
mov
xchg
mov
leave
inc
out
repnz
xor
mov
bnd
roll
xor
iret
jns
fists
fwait
jg
sbb
jge
pop
pop
out
push
sarb
xor
pop
xlat
ret
xchg
clc
jmp
jge
imul
mov
push
lahf
sar
push
scas
push
sub
out
dec
rorb
pop
leave
mov
cltd
mov
mov
fs
out
test
leave
sbb
inc
lods
lea
addb
lcall
add
sub
cltd
call
out
mov
es
jle
fists
or
insb
sbb
xor
push
xchg
dec
das
daa
repz
insb
loopne
cmpsb
jb
adc
je
cmp
jle
scas
pextrw
or
lahf
add
roll
idivl
lds
jle
rolb
jb
stos
ss
mov
enter
sbb
sti
ficompl
dec
or
repz
andb
call
or
jecxz
popa
test
sbb
daa
std
push
into
lret
adc
or
or
pop
cmp
lods
xlat
out
or
repnz
ror
pop
addr16
leave
fcomi
or
xor
xor
fs
arpl
scas
jne
in
xor
pop
fwait
jmp
sbb
pusha
lcall
cmc
inc
mov
shlb
daa
pop
mov
repz
cmp
leave
and
jae
jecxz
call
test
jo
fistpll
mov
mov
jg
in
rolb
movsl
sub
or
pop
icebp
stc
or
fidivl
mov
mov
jl
into
push
xor
outsl
fisubrs
iret
or
shl
testb
cmpsl
mull
mov
or
xchg
jne
mov
mov
cld
cmpb
sbb
out
jb
mov
aas
jle
mov
sbb
mov
arpl
mov
inc
mov
fs
cmc
xorl
sbb
outsb
push
fsub
mov
adc
push
sub
dec
rcrb
mov
inc
outsl
in
jl
push
dec
jns
div
fs
push
mov
adc
arpl
in
mov
jecxz
xor
insl
and
and
fsubr
add
out
std
xor
cwtl
inc
lret
mov
xlat
pop
stc
xchg
prefetcht1
sub
jns
mov
adc
scas
out
and
adc
push
mov
lods
xchg
add
nop
lock
mov
and
inc
jge
outsb
mov
xor
outsl
nop
ror
xlat
nop
pop
dec
inc
clc
dec
iret
nop
movsl
pop
mov
sahf
sbb
mov
dec
push
idivl
daa
clc
dec
dec
mov
push
cmp
and
pop
daa
inc
mov
jae
sbb
ficomps
negl
dec
fwait
in
jl
iret
lock
add
ret
adc
lock
in
mov
cmp
aas
xchg
aaa
xor
test
testb
fstl
push
in
lret
and
sub
add
shlb
hlt
jns
jg
push
loop
in
sar
stos
adc
icebp
push
add
into
out
jbe
jle
or
sbb
pusha
aad
cmp
and
mov
xchg
out
pop
loope
adc
xor
or
imul
in
sub
push
cmpsl
fwait
lods
mov
sbb
push
fidivl
push
mov
ss
jnp
testl
pushf
mov
andb
call
test
inc
pop
dec
aad
dec
mov
and
fnstcw
and
pusha
mov
jns
iret
insb
mov
adc
pusha
lcall
sahf
in
xor
xorl
arpl
sub
nop
aaa
dec
xor
and
xchg
fld
ljmp
cmpsl
hlt
mov
pusha
frstor
popa
fildl
push
dec
push
cltd
xor
imul
xchg
hlt
sbb
addr16
out
or
aaa
dec
fs
fisttpl
xchg
xchg
lahf
adc
decb
sbb
rorb
jne
sub
daa
aas
or
push
addr16
aas
jl
push
sbb
loop
mov
in
jae
loopne
xchg
jecxz
roll
pop
shll
mov
adc
cmp
mov
lds
mov
sub
scas
rcr
popa
mov
clc
add
cli
sbb
mov
cld
push
iret
sub
or
mov
cmp
ffree
cmp
jmp
test
pop
jp
lcall
cmc
bound
jbe
push
test
addr16
xor
jecxz
push
frstor
xor
push
out
pop
aam
and
call
loopne
lcall
in
or
iret
jno
push
xor
push
mov
mov
add
jne
mov
xor
and
inc
ja
jmp
out
cmp
cmp
repz
push
xlat
test
adcb
sub
sbb
std
pop
dec
nop
out
shll
sbb
aad
xchg
and
je
dec
gs
leave
or
push
mov
mov
cmp
fst
fstps
insb
xchg
test
or
mov
adc
lds
jp
in
cmp
ficoml
out
mov
imulb
adc
fst
xor
add
iret
or
xor
negl
les
fisubrl
cmp
inc
shrl
push
out
push
jmp
stc
mov
and
rclb
mov
and
flds
outsl
cmpsb
mov
xor
pop
xchg
mov
jne
sub
mov
sbb
ret
mov
jne
nop
rorb
xchg
push
icebp
das
sbb
inc
insb
sbb
cwtl
sbb
sbb
push
add
dec
adc
insb
ret
jne
movsl
popf
les
sbb
ret
lock
es
fnstsw
out
cmc
add
mov
jbe
mov
xor
sub
ret
mov
xchg
cmp
fidivl
sbb
test
fs
ret
scas
push
imul
popf
outsl
xor
sbb
cmp
sub
movsb
mov
fiaddl
inc
cmp
fstl
call
pcmpgtb
xor
jno
inc
adc
inc
fwait
stos
test
lods
lods
fnstenv
aad
jae
push
adc
inc
push
and
int3
loop
aad
push
push
pushf
xchg
nop
lods
addr16
stc
xchg
push
bound
mov
faddl
pop
call
and
lahf
xor
outsb
orl
or
pop
aaa
not
add
shrd
ds
sub
fs
add
in
lock
das
pop
or
sub
jecxz
dec
mov
lcall
cmp
mov
dec
mov
jae
jnp
pop
push
mov
or
push
jb
lds
dec
loope
stos
fistps
mov
lock
xor
mov
out
aam
pop
aas
inc
dec
mov
bnd
dec
mov
adc
sbbl
cmp
data16
faddp
sbb
lret
lret
fmul
scas
or
mov
dec
test
test
ret
sahf
nop
inc
or
cmpb
fmull
and
fmull
jo
rcll
repnz
dec
ds
add
sub
mov
inc
xchg
ss
and
lock
xor
testl
sbb
push
inc
cld
pop
adc
jge
lods
iret
or
xchg
cli
sbb
and
neg
sti
lock
push
lcall
outsl
pop
clc
imul
pop
or
loope
adc
push
xor
push
xor
xor
sub
mov
fdivp
dec
pop
push
sub
inc
ret
orl
scas
mov
fwait
push
push
popf
cmp
add
lds
das
inc
ret
sbb
in
jne
dec
movsb
into
push
fsts
aas
popf
inc
cmc
lods
addr16
and
cmp
icebp
scas
pushl
neg
push
jmp
mov
popa
jle
cltd
xchg
cmpb
inc
ja
xchg
add
popf
imulb
or
dec
daa
popa
lret
sti
mov
outsb
pop
es
xchg
gs
psubd
mov
out
test
movsb
arpl
sar
sub
inc
insl
out
mov
adc
ss
pop
fldl
jle
ljmp
dec
fcomps
out
dec
shll
fs
hlt
out
stos
test
mov
int3
pop
pop
jmp
movsb
inc
or
jmp
or
cmp
test
sub
mov
sbb
imul
movsl
subb
lcall
jne
dec
fidivs
sub
es
adc
cltd
inc
pop
sbb
push
inc
out
mov
xchg
pop
stos
and
mov
je
xchg
sbb
dec
addr16
jecxz
sub
pop
xlat
jb
iret
bnd
mov
stc
mov
loopne
push
jo
xor
xor
add
gs
scas
mov
movsb
fsubrl
out
in
leave
sub
into
jl
mov
pop
xor
fistps
cmp
or
stos
lea
lds
mov
aad
loope
aas
fcmovne
sub
add
loop
or
and
mov
lds
jbe
xor
scas
mov
mov
sbb
sarb
xchg
gs
out
ja
lahf
inc
and
mov
das
arpl
lcall
mov
adc
and
push
movsl
fimuls
and
int
fadds
repz
int
jp
out
shll
hlt
push
xor
mov
fwait
loop
inc
mov
into
out
push
fidivrs
int
enter
fisttpll
hlt
aam
ds
andb
push
cmpsl
dec
sbb
cld
inc
in
push
mov
scas
fucompp
adc
and
jo
lods
sbb
inc
sbb
xor
xor
lret
ss
test
jecxz
cmp
int
mov
lret
or
js
or
adc
and
mov
pop
mov
loope
inc
mull
dec
dec
push
scas
xchg
orl
add
nop
out
sti
mov
mov
and
aad
movsl
dec
jle
push
fabs
imul
sbbl
les
jbe
adc
leave
xor
dec
cmp
sbb
incb
dec
loope
pusha
xchg
push
test
into
adc
mov
xorl
aad
push
frstor
cld
jne
jp
jg
sub
scas
fdivrl
and
data16
add
push
jmp
dec
in
insb
inc
imul
add
push
push
cld
mov
adc
xor
mov
shrb
push
sahf
dec
xchg
cmp
push
xor
lahf
xchg
jecxz
lock
js
cs
add
je
mov
adc
or
and
mov
push
loop
sbb
dec
and
lret
test
in
outsl
stos
cld
cmp
sahf
stc
fimuls
lods
clc
sub
ljmp
stc
pop
xor
stos
js
xchg
push
cmpsb
mov
jns
pop
inc
inc
dec
jns
cltd
mov
and
pop
mov
add
sbb
roll
mov
pushl
xchg
addr16
pop
or
xchg
dec
je
in
cmp
fst
int
sbbl
stc
jno
jne
loop
mov
and
push
mov
pop
push
push
sti
sahf
iret
leave
pop
loop
and
dec
je
cmpsb
out
loop
inc
popa
dec
inc
push
dec
xor
jl
lods
mov
mov
xchg
xor
push
mov
mov
sub
test
mov
les
js
and
loopne
pop
mov
outsl
lods
mov
fists
lea
push
adc
stos
sub
and
jnp
sub
add
mov
and
mov
loope
fcmovnbe
cli
stc
test
push
or
cmc
jp
dec
jne
cmpsb
and
push
mov
sbbb
mov
int
xchg
cmpsl
fdiv
in
ret
in
lcall
ja
lret
mov
mov
mov
jge
adc
xchg
xchg
lret
pop
in
sub
les
xor
or
or
pusha
bound
outsb
push
add
jo
pop
clc
arpl
mov
cmp
xor
inc
dec
mov
popa
mov
inc
xchg
addb
cmp
mov
into
icebp
dec
faddl
sub
push
jb
inc
test
xor
xor
sub
iret
lock
sub
ljmp
int3
mov
lods
dec
gs
ja
mov
mov
jno
hlt
xchg
or
stos
jecxz
sub
outsb
push
fisubl
sbb
je
sub
in
mov
sub
add
jns
call
insl
push
mov
jle
jg,pn
fcomp
cmp
push
mov
sub
dec
mov
xchg
jge
push
add
inc
sub
xor
fstp
and
mov
or
in
pop
pop
lods
mov
dec
addb
cmp
dec
add
pop
mov
xor
push
jno
popa
test
xchg
mov
push
sub
filds
jecxz,pt
popa
xor
test
mov
mov
jne
int
xor
push
nop
inc
dec
push
mov
movsl
stc
add
push
pop
ss
aad
dec
fwait
loop
sbb
loop
mov
pop
and
inc
int
add
ret
pop
inc
es
ljmp
repz
ret
mov
sarb
je
popf
ljmp
and
ljmp
adc
loop
loopne
xchg
sub
jae
jns
pop
cmp
rorb
imul
pop
repz
lret
inc
inc
in
lock
imul
int3
mov
push
sahf
cmp
inc
xor
dec
je
or
sbb
stc
popl
js
sub
push
arpl
xchg
cs
mov
adc
ja
addr16
repz
mov
ljmp
les
and
das
mov
call
mov
cmpsl
jmp
adc
or
or
shlb
mov
mov
cmp
sub
sub
sbb
mov
insb
xchg
das
inc
stos
cmp
cld
aaa
xchg
push
sti
fnstcw
lds
jmp
push
stos
jge
cld
sub
dec
call
mov
out
cmp
jge
insl
inc
mov
xor
cmpsb
ret
xor
adc
imul
popa
add
rcrb
cmp
addps
ret
jo
int3
cs
dec
popl
imul
add
pop
ficoml
push
mov
outsb
sbb
cltd
pushw
add
sti
mov
mov
movntps
data16
movsl
pop
xchg
movsl
out
push
push
hlt
or
enter
and
inc
mov
in
mov
popf
pop
movsb
xchg
and
out
push
mov
popf
mov
mov
in
loopne
dec
lcall
xchg
lcall
nop
sub
stos
arpl
push
jns
ds
push
or
shr
mov
sti
scas
adc
popa
jg
pop
outsl
lahf
jge
mov
xor
out
cli
cli
dec
cwtl
aas
sti
and
xchg
cmc
push
mov
xchg
pop
push
dec
repnz
mov
mov
adc
or
xchg
stc
pop
setae
sub
pop
cltd
test
pop
mov
fistl
xor
neg
stos
ja
push
ss
int
shl
inc
mov
sti
cs
jmp
es
add
mov
mov
gs
das
lods
mov
adc
push
dec
inc
mov
pop
popf
aam
mov
insl
xchg
nop
aad
andb
pop
test
add
push
push
out
adc
orl
lds
insl
fisubrl
mov
mov
sbb
pop
cmpl
push
jecxz
aam
stos
test
and
orl
adc
ret
adc
jae
sub
in
jmp
mov
repnz
mov
inc
jecxz
xchg
cmp
iret
mov
mov
cs
dec
xchg
test
and
popf
xor
movsl
sarb
adc
mov
in
jno
cli
sub
das
inc
testl
cmp
pop
cmpsl
inc
push
fisttpl
mov
mov
cmc
setg
ds
orb
movb
add
inc
sbb
lds
or
pop
adc
xor
mov
mov
inc
clc
mov
insl
push
mov
loope
push
es
mov
or
stos
mov
dec
shrb
je
insb
pop
sbbb
xor
loope
pop
xchg
leave
push
testl
mov
sbb
add
shrl
inc
pop
mov
jbe
dec
or
addr16
pop
insl
aaa
js
divb
cmp
fists
fdivs
sti
loopne
lcall
cmp
dec
pushw
lret
sbb
pop
xchg
mov
imul
ss
push
shll
and
loope
xor
das
enter
sub
negl
xor
not
jne
mov
mov
dec
js
subl
ss
mulb
pop
scas
sbb
jge
mov
fcompl
ljmp
jno
adc
fsubrs
xor
cmc
mov
mov
lods
pop
fmul
fs
jl
int3
lods
das
in
test
push
in
incl
jbe
push
aam
les
es
ficoms
stos
inc
stc
js
clc
test
lret
cld
insl
in
test
rorb
add
xor
pop
pop
add
inc
fisubs
ret
gs
hlt
jns
lea
int3
adc
std
push
xor
dec
mov
push
jmp
inc
ret
hlt
popa
add
sub
and
lcall
push
mov
testl
xchg
cld
cltd
xor
mov
lret
in
rcrl
dec
loopne
mov
jb
mov
add
lods
mov
fiadds
mov
pushl
ror
push
shrl
in
pop
lock
ja,pt
jo
sub
sub
dec
pop
sahf
dec
loop
cmp
push
and
push
jne
or
cmp
xor
pop
sbb
dec
loope
cmp
je
adc
into
gs
testl
fcoms
mov
and
jle
sub
dec
leave
cwtl
das
repz
hlt
in
outsl
testl
jecxz
fidivs
add
out
movsb
pop
cmc
fstpl
mov
sub
lds
and
sub
sahf
xor
jbe
push
movsl
sbb
fidivs
loop
pop
sbb
xchg
loopnew
cmc
sbb
out
fs
and
xchg
mov
das
rclb
mov
sbb
sub
cwtl
das
add
fdivl
loope
cmc
sbb
xchg
cmpsl
cmp
xchg
gs
xchg
jne
adc
dec
loope
icebp
sbb
mov
cmp
lock
sarl
sahf
xor
xchg
cmp
mov
out
test
jne
adc
sbb
insb
xlat
outsb
xchg
cmp
fs
pop
icebp
test
jns
adc
mov
outsb
fsubrs
cmp
dec
jecxz
push
mov
add
nop
fists
or
sub
push
mov
sti
xchg
scas
push
repnz
fidivl
popa
das
lcall
xchg
sub
add
inc
fucomi
pop
sub
mov
xchg
sub
test
pop
mov
hlt
add
mov
cli
jae
and
sbbl
jle
mov
data16
lods
inc
imul
in
mov
mov
inc
adc
add
and
inc
pop
cmc
jg
nop
daa
adc
jmp
imul
inc
push
ljmp
xchg
sub
pop
std
aas
es
fsubs
je
add
add
gs
jge
scas
cmpsb
dec
outsl
push
jb
imul
int
mov
pop
out
lret
bound
jle
inc
test
push
lods
leave
loopne
repz
dec
ficomps
mov
jo
xchg
stos
sub
or
stos
push
cmpsb
cmp
hlt
jb
int3
lods
push
pop
mov
int
mov
lods
push
testb
jb
fsubrl
testb
pop
xchg
jecxz
jne
stos
add
cmp
mov
test
loopne
or
or
mov
dec
in
add
lds
movsl
push
in
fstpl
xchg
into
gs
xchg
sub
repz
sub
dec
in
dec
sahf
xor
sub
push
movsl
jae
push
mov
xchg
test
cmp
mov
dec
in
mov
aad
aaa
gs
outsl
shl
mov
jle,pn
pop
jmp
cmp
jnp
or
ss
in
lds
add
pop
ss
in
push
movsl
adc
xor
testb
push
xor
cmp
dec
loopne
pop
cmc
mov
cmpsb
jb
loope
mov
mov
fimuls
or
cmp
test
push
movsl
lods
repnz
stc
dec
testb
xchg
inc
fmul
popa
pop
out
cltd
lock
dec
sbbl
ds
jbe
ret
pusha
pop
cmc
lcall
sbb
inc
ss
or
mov
fwait
or
in
lea
mov
imul
inc
sub
jp
popa
clc
ss
testb
in
add
movsb
mov
or
daa
mov
or
mov
sbb
and
testb
aad
rorb
testb
jnp
adc
jbe
mov
xchg
sub
clc
cmp
xor
popf
push
cmp
xchg
or
cmp
pop
push
lods
mov
fs
stos
or
fnsave
inc
fldcw
or
xchg
aas
dec
push
pop
cltd
sahf
sbbb
mov
les
adc
insl
imul
mov
roll
or
pop
out
push
add
push
ljmp
adc
dec
pop
das
movb
ficomps
rorb
mov
push
call
or
xor
mov
inc
call
or
jp
sti
out
test
pusha
repz
mov
das
aam
sub
cmp
push
in
and
stc
mov
push
jns
jae
loope
xchg
sub
add
dec
sub
inc
nop
dec
lret
mov
jbe
mov
jmp
movsl
sub
dec
sub
jl
sub
repnz
idivb
leave
xor
andb
pop
inc
in
cmp
push
aad
mov
inc
cmp
pop
aam
test
fsubrl
scas
add
aam
jmp
lods
xlat
notl
jno
and
leave
ret
je
imulb
movb
jp
mov
dec
cwtl
insb
clc
fildll
in
jl
adc
mov
arpl
sti
mov
mov
sahf
mov
mov
add
sub
adcl
and
dec
jae
je
inc
fcomip
fwait
mov
out
pop
ljmp
scas
cmp
push
ret
incl
pusha
push
cld
mov
xor
lcall
sbb
stos
pusha
push
lock
rolb
leave
dec
aas
mov
bound
fstps
mov
jmp
decb
jno
dec
or
je
fwait
orb
scas
jne
jmp
and
push
xchg
push
xor
les
inc
add
shll
cmp
pop
push
insb
jge
outsb
lret
push
neg
stc
jp
or
call
mov
imul
mov
fsts
repz
xor
dec
xchg
and
xchg
mov
movsl
push
fucomp
cmc
test
call
and
jnp
add
lds
test
sbb
pop
ficoml
sub
addr16
test
mov
ficomps
iret
imul
imul
test
lds
das
leave
cld
fdivr
jnp
add
or
mov
dec
call
pushf
fidivrl
mov
insl
pop
dec
push
aas
mov
sahf
jp
int
movsb
aad
jmp
push
loope
pop
lret
adc
mov
aas
xchg
mov
mov
cmpsl
sub
shlb
inc
xor
jge
add
iret
xchg
ljmp
clc
jge
sbb
lea
js
fwait
pop
outsb
mov
mov
lret
adc
mov
xor
es
stos
push
mov
int3
push
cmpl
loope
loopne
inc
jmp
sbb
int
flds
or
push
fstps
movsl
or
sub
pop
sahf
idivl
cmp
mov
cmp
mov
xlat
gs
mov
int3
loopne
add
xor
das
int
dec
dec
out
sbb
mov
fimull
xchg
mov
sub
pop
loope
je
imul
mov
ret
or
sub
test
arpl
test
rorl
stc
mov
jle
xor
push
fwait
xor
stos
mov
cmp
das
jmp
pop
sbb
fsubrs
movsb
push
movsl
aad
ljmp
in
scas
push
dec
fs
jp
ds
fwait
outsb
add
mov
xchg
je
mov
bound
push
popf
mov
ss
movsb
cmp
cmp
mov
sbb
repnz
loopne
cmpsl
adc
mov
les
jne
test
mov
clc
add
lret
sti
sub
dec
jge
push
scas
outsb
jnp
mov
ret
hlt
and
cmova
sbb
lret
sti
mov
inc
fmuls
shrl
insl
pop
negb
mov
adc
mov
pushf
xor
sub
push
mov
dec
loop
cmc
fsubrs
shrb
pop
inc
icebp
mov
jg
push
mov
movsb
cmp
mov
cmp
inc
cli
in
xor
addr16
popa
adc
fistps
mov
call
loopne
sbb
movsl
inc
sub
ret
cmp
movsl
mov
int3
dec
loopne
out
push
adc
je
mov
ss
jmp
push
xor
test
fs
fdivl
cltd
sti
xchg
lret
fidivrs
mov
xor
jne
cmp
shlb
add
ljmp
mov
mov
inc
fmull
sti
xchg
fbstp
jmp
aam
dec
pop
sub
fcomps
aam
lcall
cltd
fadd
insl
add
decb
cmpsb
sbb
ds
pop
mov
in
repnz
inc
pop
mov
in
push
clc
es
in
test
rcrl
or
jge,pn
mov
mov
js
addr16
movsb
cmp
push
and
lods
ret
shl
shll
out
ret
xchg
ja
lock
mov
paddw
call
mov
into
fwait
mov
xchg
pop
or
inc
ds
sbb
mov
mov
aad
mov
and
int3
inc
imul
out
sbb
dec
adc
dec
jmp
cmc
sbb
add
stos
div
sbb
jmp
cld
xor
mov
push
jnp
xchg
cltd
xor
mov
dec
sub
jne
cmp
aam
popf
lds
xchg
mov
mov
scas
in
ret
push
stc
nop
xchg
adc
sub
nop
daa
fwait
enter
fidivl
pop
mov
int
lock
xchg
sub
in
mov
mov
dec
lds
mov
scas
inc
es
jecxz
loopne
ja
ss
test
repnz
stos
mov
mov
pusha
mov
push
and
int
xchg
fdivl
in
pop
out
sbb
cmpsb
jp
fnstcw
icebp
mov
test
mov
lret
dec
sbb
push
cli
repz
xchg
and
imul
push
pop
mov
sbb
adc
loop
xchg
insb
pop
sahf
movsl
in
adcl
xchg
sub
daa
and
popf
adc
sub
sbb
push
in
loop
data16
push
fwait
ja
int3
xchg
fs
add
cltd
xor
push
mov
test
popa
clc
lods
fnsave
stc
and
lock
enter
jae
cld
test
mov
pop
push
jae
xorl
std
test
loopne
insl
stos
pop
repz
repz
popa
clc
push
icebp
sbb
lock
dec
stc
cmp
rep
lahf
imul
test
movsl
cmp
pop
pop
lock
cmpsl
ds
mov
cli
loop
inc
adc
push
jmp
lods
jecxz
fucomip
popa
clc
fldt
test
and
mov
lret
mov
mov
pop
repnz
data16
mov
rclb
ret
das
out
popa
repz
in
mov
dec
push
dec
jecxz
cmc
movsl
cmp
mov
testb
lods
gs
fnstsw
stc
insb
push
dec
jecxz
and
gs
mov
jbe
pop
ret
dec
loopne
cmpsb
in
fadd
data16
mov
mov
xchg
mov
fsubrs
and
dec
sbbl
sub
jp
shll
into
add
pop
jo
pop
lock
jae
aaa
gs
jae
push
popf
xor
cltd
dec
out
dec
scas
inc
jge
xor
jns
cmp
stos
ret
cmc
test
es
dec
dec
sub
add
ret
nop
daa
ss
gs
pushl
addr16
mov
inc
imul
inc
adc
idiv
scas
inc
das
idivl
jmp
in
jecxz
fbstp
dec
nop
mov
lahf
lds
int
or
jg
and
out
push
jns
inc
imul
adc
imul
or
mov
testl
xor
rep
add
jecxz
or
push
loop
pop
aam
inc
frstor
sbb
js
fisttpl
or
scas
inc
mov
mov
test
shll
inc
cmpsb
insb
mov
pop
sub
push
pop
push
stos
inc
dec
jecxz
imul
cld
xchg
fdivrp
lods
inc
out
addr16
lods
xchg
out
test
iret
sbb
dec
sbb
or
lret
mov
shlb
fbstp
shrl
and
xchg
push
xlat
mov
leave
in
sbb
cmpsb
inc
fcomp
jle
inc
jo
dec
loope
fs
sbb
xchg
sbb
fbld
stos
inc
jg
ret
pop
mov
pop
int
lea
aas
gs
pop
adc
test
or
cmp
cs
je
aad
sahf
push
loope
sub
mov
fsubrs
xchg
aas
in
xor
jge
mov
fsts
push
xchg
cwtl
das
fstpt
in
jno
fnstenv
or
xchg
and
xchg
sub
add
aam
mov
jno
xchg
movsl
aam
test
adcb
dec
cmpl
cmp
push
out
in
inc
es
jmp
jbe
mov
fsubrl
sbb
cmp
sub
fwait
pop
push
out
jnp
or
inc
push
mov
mov
xchg
sub
fisttps
rcr
mov
jo
test
addr16
outsb
xchg
mov
adc
push
dec
or
jnp
rcrl
inc
fidivs
into
dec
loopne
inc
add
ljmp
and
mov
mov
push
jge
xchg
cmp
or
in
ret
hlt
lock
cmp
mov
inc
pop
icebp
js
add
xor
lea
lret
xchg
cs
mov
xlat
and
shlb
inc
shrl
xlat
jg
leave
push
xchg
inc
or
aad
stc
adc
repz
add
mov
in
dec
jecxz
call
xchg
leave
or
into
jnp
mov
movsl
jp
mov
pop
nop
sahf
mov
adc
daa
pop
and
xchg
in
xchg
pop
fsubs
mov
loope
lahf
ss
aaa
into
lret
jge
mov
cmpsb
insl
cwtl
das
pop
pop
jae
nop
lea
mov
pop
std
xchg
sub
jecxz
dec
adc
or
fsubp
xchg
sub
addr16
xchg
cwtl
sbb
mov
push
int3
xchg
sub
mov
push
out
cs
sub
mov
mov
pop
push
xchg
sub
sbb
enter
xchg
sub
jo
popa
mov
pop
mov
sub
mov
fs
sbb
dec
cmp
sub
scas
sbb
pop
ror
popa
add
mov
sbb
mov
inc
inc
xlat
jne
je
stos
push
push
ljmp
jge
sub
or
rcll
hlt
mov
push
cwtl
aad
or
xchg
stos
pop
xor
dec
push
push
lods
xchg
cmp
jo
insb
add
or
cmp
push
call
cmc
call
xchg
rcrb
stos
mov
push
stos
leave
in
test
mov
std
xchg
jb
xor
mov
mov
inc
fincstp
and
adc
jns
shrb
push
push
in
test
mov
outsb
outsl
cld
xchg
popa
pop
lcall
icebp
mov
and
fidivs
inc
mov
jmp
test
scas
xchg
and
push
subb
pop
rcrl
data16
jnp
or
aaa
incb
out
shlb
fs
lods
inc
out
in
fcom
cwtl
fbstp
sbb
mov
pusha
sbb
sub
fistps
fcmovnb
pop
int
jns
jecxz
inc
fldl
les
push
stos
mov
into
es
iret
data16
add
sbb
dec
push
lods
inc
js
inc
frstor
jl
insl
fmull
push
jno
dec
arpl
sub
sbb
xchg
mov
add
mov
cmp
rclb
scas
inc
lods
loope
imul
stos
rcrl
lods
inc
andb
cltd
ret
cmp
pushf
push
mov
inc
sub
pop
sahf
and
or
shlb
ss
popf
dec
in
mov
push
test
push
xchg
sub
mov
mov
dec
push
int
inc
hlt
clc
daa
sbbl
hlt
loopne
mov
clc
shrb
stos
xor
fucomi
push
mov
fs
cmc
xchg
in
shrl
xor
xchg
orl
push
or
adc
movsb
sub
aad
xchg
sbb
dec
loopne
pusha
xchg
sub
jp
ret
pop
or
imul
inc
rcrl
push
movsl
cs
fbstp
sub
rcrl
xchg
sbb
cmp
ja
add
xchg
cs
loop
notb
mov
test
jle
imul
sahf
ss
fdivrl
cmpsl
mov
shrl
test
xchg
mov
inc
fisttpll
pop
stos
or
sub
adc
jl
out
test
into
jno
cld
outsb
mov
pushf
sbb
imul
mov
lcall
addr16
pop
adc
inc
mov
enter
movsb
xchg
add
xor
sub
in
outsb
add
ss
and
push
push
inc
sub
dec
enter
movsb
cmp
mov
ret
cmc
add
and
fimuls
movsl
adc
inc
xlat
fsubrl
sbb
jmp
lret
adc
pop
lock
xchg
cs
jo
adc
mov
xor
loopne
push
cmp
xchg
fsubrl
cwtl
pop
clc
dec
and
push
or
add
dec
loop
inc
das
xor
cmp
test
mov
mov
lea
sub
ret
pop
push
adc
jo
inc
pop
xor
jg
lret
std
cmp
mov
stos
pop
mov
inc
adc
dec
or
pop
repz
push
in
stc
and
cmpb
cmpsb
fwait
xor
dec
lcall
cmp
add
fbstp
inc
cld
xchg
xor
icebp
mov
xor
cmpsb
movsb
fistpl
mov
test
fcomps
mov
int3
out
dec
jecxz
mov
test
inc
push
adc
xchg
sub
mov
push
out
mov
pop
or
iret
or
pop
aas
mov
cwtl
call
xchg
or
and
inc
fsubrl
push
inc
fiadds
aas
pop
out
jo
sti
xchg
in
or
cmp
inc
fsub
ret
xchg
sub
jecxz
pmullw
lods
inc
mov
jo
leave
testb
mov
push
mov
aas
sbb
mov
inc
dec
out
ret
sbb
aas
mov
lahf
sub
mov
cli
sub
pop
mov
test
dec
enter
mov
xchg
lret
bound
lds
cwtl
mov
add
lret
adc
and
sbb
sbb
cmp
xor
dec
int3
push
in
decb
ja
mov
inc
cltd
xor
cmpsl
loopne,pt
mov
cmp
fidivs
add
xchg
dec
jl
cmpsl
ja,pt
inc
fnstenv
xchg
jecxz
or
jl
xchg
call
mov
mov
sbbl
jge
in
dec
push
iret
data16
pop
insb
roll
repnz
mov
mov
xchg
inc
inc
fdivl
pusha
notl
adc
inc
daa
inc
fistpl
stos
pop
scas
sbb
test
or
imul
jecxz
aam
ret
pushf
rclb
lods
inc
in
shrb
adc
cld
xchg
test
push
lods
outsl
pop
dec
out
sbb
rorb
cmp
insb
repnz
ljmp
jge
mov
jmp
ljmp
pop
daa
adc
mov
test
sbb
add
popa
mov
sarb
mov
jmp
sbb
nop
mov
push
ljmp
ds
dec
xchg
sub
adc
cmpb
iret
iret
add
cld
xchg
jns
add
sti
xchg
or
in
jg
fsubrl
pop
inc
fimuls
xor
bound
push
xchg
cmc
mov
js
imul
sbb
push
fimull
sti
cmp
xchg
cmp
scas
stos
add
sub
adc
dec
hlt
cmp
fildll
dec
out
mov
sbbl
xchg
xchg
mov
mov
push
in
ret
test
and
fisttps
push
in
cmc
and
push
mov
sbb
xchg
push
out
insl
in
scas
inc
sbb
jns
dec
in
add
mov
cld
sti
xchg
push
push
push
out
test
cmc
jmp
xchg
aaa
into
mov
dec
in
dec
adc
loopne
jae
push
jecxz
out
insl
xor
sub
mov
scas
inc
or
inc
fnstsw
mov
jmp
mov
pop
and
mov
decb
leave
lretw
add
dec
mov
aaa
and
jbe
sub
cmp
xchg
rcrl
jb
mov
jl
jp
aam
enter
push
xchg
mov
pop
adc
or
in
cmpl
in
aas
es
jg
sbb
xchg
sub
and
mov
or
pop
aad
or
jl
testl
inc
xor
mov
aam
push
fcomps
or
adcb
mov
pop
in
or
iret
mov
lods
inc
stos
inc
dec
loope
push
out
xchg
xchg
xor
inc
xchg
sub
or
cmpb
sarl
lds
imul
xor
adc
fcoms
stos
leave
push
xchg
sub
inc
mov
ljmp
cld
xchg
xor
add
cwtl
subl
rorb
jl
xor
xchg
out
xchg
iret
sbbl
imulb
and
sbb
mov
sub
das
adc
test
sti
xchg
jle
mov
push
or
lods
cmp
inc
ret
repz
enter
icebp
mov
inc
je
jns
mov
lods
add
add
int
dec
pushl
enter
jb
add
xchg
mov
mov
scas
aas
insb
insb
add
cmp
stc
popf
cmp
push
adcl
add
jg
mov
scas
or
pop
and
mov
mov
rcl
es
jp
push
lods
sbb
cltd
xor
inc
mov
jb
and
cmp
lock
pop
push
mov
andl
es
scas
pop
mov
push
addr16
aaa
dec
nop
daa
cmp
xor
mov
mov
loop
xchg
movsl
cmp
xor
mov
pop
test
jns
jecxz
imul
adc
xchg
es
xor
cwtl
cmp
sub
adc
lds
xchg
sub
insl
leave
insl
add
push
shrl
dec
out
icebp
sti
andb
mov
mov
and
movsl
mov
push
fsubp
enter
mov
fbstp
insb
sbbl
sub
lds
ficompl
push
pop
adc
xorb
out
mov
sti
xchg
int
rcrl
adc
lods
inc
push
xchg
mov
jno
enter
mov
cmp
mov
pushf
inc
add
gs
dec
leave
pusha
jl
inc
xlat
jmp
in
xchg
sub
into
push
movsl
add
jle
nop
mov
push
call
mov
nop
daa
jns
cmp
mov
insl
aaa
xchg
insl
pop
jo
and
loop
and
dec
in
ficoms
setae
adc
dec
sbbl
cmp
dec
mov
sbbb
dec
fnstenv
dec
js
cmp
repz
insl
add
loope
movsb
adc
jne
fildll
outsl
push
nop
xchg
sbb
adc
xor
mov
insb
add
stos
je
sbb
jno
cmp
imul
rcrl
les
push
es
xchg
sub
add
dec
ss
into
add
daa
dec
mov
pop
lock
adc
add
pop
mov
pop
icebp
xchg
dec
jge
jle
nop
daa
pop
or
cld
cwtl
ret
ret
stos
lea
int3
arpl
cs
lahf
jp
popf
stos
scas
mov
and
lahf
xchg
add
or
hlt
sbb
dec
adc
jge
and
inc
fwait
xor
test
sub
mov
pop
sub
loope
aam
sti
xchg
jb
add
movb
ja
aaa
int
cwtl
inc
fcmove
cmp
jmp
push
xchg
outsl
add
jno
mov
adc
xor
pop
adc
loopne
gs
orl
add
mov
fstps
mov
jg
ret
cmp
stc
pop
cmp
mov
decb
pop
repz
push
mov
lds
jg
pop
dec
popf
scas
inc
into
imul
xchg
mov
jl
andb
lods
push
adc
mov
cmp
mov
ret
mov
xor
dec
roll
in
mov
sub
and
out
test
mov
jb
lods
negl
pop
dec
inc
test
sub
jge
push
xchg
jo
das
push
jmp
cmp
rcl
xchg
dec
sbb
push
adc
dec
stc
leave
dec
inc
xor
mov
push
xchg
pop
les
pop
mov
pusha
mov
int
or
cmp
xchg
xchg
push
or
xchg
sub
add
mov
in
ds
pop
cmp
pop
mov
out
scas
addb
inc
dec
jecxz
lods
arpl
fimull
adc
icebp
jge
loopne
inc
lea
xchg
adc
cmp
pop
cmpsl
jle
inc
sahf
mov
call
push
int
data16
cs
aaa
into
cmp
decl
sbb
fldt
or
aas
out
inc
call
dec
sti
push
std
and
cmovns
sbb
scas
mov
pop
int
insl
mov
test
jb
jle
pop
inc
mov
mov
jp
dec
enter
movsl
fcmovnbe
iret
filds
xor
call
popl
fcomp
sar
out
or
push
das
pop
and
sub
fwait
lods
sub
cmp
aas
inc
ret
sbb
stos
sbb
inc
xlat
aaa
or
pusha
xor
jns
sbb
xchg
pop
out
cmp
outsl
test
cltd
xor
lds
lods
loope
out
fidivrl
jnp
push
hlt
mov
xor
jecxz
cli
dec
dec
push
inc
out
lea
inc
sub
ja
cmpb
lock
or
cmpsb
inc
sub
test
or
lcall
cmp
adc
mov
mov
add
lahf
and
sbb
rcll
xor
and
mov
out
gs
int
in
mov
shr
mov
adc
inc
jne
dec
mov
inc
xchg
orl
movsb
pop
push
xchg
movsl
lahf
stos
pusha
not
hlt
stos
push
scas
ror
pop
jmp
cld
jns
in
adc
adc
stos
imul
cmp
or
fistpll
jno
imul
xchg
jg
lds
mov
mov
insb
in
ret
aad
sub
cmc
sub
add
sbb
adc
repz
ss
inc
push
es
sub
dec
inc
fdivl
xor
xchg
cmpsl
cmp
xchg
cld
jae
push
mov
push
sub
out
stos
dec
loop
or
push
ds
imul
xchg
dec
xchg
xorl
lret
mov
popa
loop
cmpsb
cmp
xor
push
pop
sahf
xchg
loop
xor
add
fldenv
stc
sub
cmp
sub
pop
jg
pop
icebp
jp
sahf
xor
xchg
dec
push
jmp
jmp
or
and
inc
lods
inc
js
clc
jecxz
lret
cmp
jmp
jmp
push
lods
rorl
cmp
pop
sub
shll
insb
std
dec
ret
pop
loop
sbb
xor
push
add
clc
test
ja
sub
pop
cltd
sbb
and
popf
or
pop
lock
lret
lret
shlb
sub
push
mov
mov
add
jp
jno
iret
mov
ret
push
in
hlt
cmpsb
pop
jp
sub
stc
pop
stc
add
sub
push
mov
cwtl
das
jle
popf
xor
mov
mov
rolb
mov
adcb
hlt
cmc
mov
rcrb
stos
jns
mov
dec
int3
js
jno
out
iret
data16
testl
push
xchg
or
mov
shr
jne
enter
jo
mov
shll
hlt
adc
jbe
seta
jnp
js
jbe
push
xchg
stos
icebp
jp
movsl
xchg
sbb
sbb
pop
cmp
pop
push
stos
jne
mov
shll
filds
mov
pop
ds
jnp
or
into
nop
daa
add
scas
inc
push
negb
arpl
enter
pushf
aam
into
sbb
mov
and
mov
jae
inc
fdiv
xchg
cs
fs
inc
out
jecxz
sbbb
cmp
push
mov
pop
mov
fisubs
je
xor
pop
arpl
loop
mov
sbb
or
iret
mov
push
mov
stos
push
in
fstpt
shrl
pop
icebp
decl
sub
mov
xchg
movsl
cmc
into
test
cmpsb
mov
mov
daa
mov
das
cmp
mov
aas
pusha
cmp
or
push
jl
loope
push
std
xor
or
push
sub
sbb
inc
and
cld
xchg
pop
sbb
sbb
dec
xor
sti
daa
push
or
sarb
pop
add
shrl
std
mov
xor
mov
push
push
sub
je
das
fnstenv
jge
xchg
scas
xor
mov
sbb
pop
and
into
push
sub
lret
push
in
cmpsb
jp
call
stc
int3
outsl
push
sbb
and
lahf
jb
inc
movsb
ror
repnz
notl
in
test
jmp
mov
pushf
mov
and
fistpll
cmove
inc
pop
data16
lea
stc
xchg
scas
test
loopne
adcb
inc
imul
mov
pop
cmp
xchg
pusha
ss
push
dec
dec
adc
cmp
push
mov
popa
xor
jmp
jns
push
and
lahf
cmpsl
inc
push
mov
xor
mov
loope
xor
std
cltd
loopne
push
inc
popa
inc
in
test
jb
fnstsw
aad
int
push
cld
dec
dec
xor
jmp
pop
inc
mov
sub
stos
popf
stc
test
sbb
fcomps
cmp
dec
stc
sahf
xor
lahf
dec
mov
or
lahf
fidivl
adc
and
mov
cltd
inc
push
lods
jbe
iret
data16
xchg
xor
enter
aas
jmp
or
xchg
cmp
insl
mov
shl
mov
ss
inc
adc
decb
stos
test
xchg
jg
std
mov
popf
or
rcrl
and
pop
movsb
fbstp
jg
fnstenv
shlb
pop
imul
lods
cmp
rolb
out
jo
xchg
int
ret
cmp
mov
adcb
adc
mov
out
inc
xlat
adc
out
iret
sbb
jo
add
sahf
xor
movl
or
je
xchg
scas
inc
lds
jbe
fisttpll
lahf
add
xorl
popf
xor
mov
test
xchg
mov
and
cmc
dec
pop
hlt
cmp
add
jmp
sbb
pop
mov
stc
roll
cmp
notb
inc
flds
mov
sti
out
cmp
xchg
stos
mov
cltd
in
mov
mov
insb
shrb
hlt
mov
mov
lahf
ss
stc
in
pop
out
or
enter
clc
fwait
scas
push
mov
mov
in
addl
insb
add
xchg
int3
arpl
push
fcomps
or
xchg
inc
fld
mov
cli
ficoml
add
inc
mov
pusha
mull
int
push
or
shll
add
inc
shll
addr16
pop
xchg
xor
leave
jns
adc
xor
testb
ficompl
mov
xchg
ret
cli
mov
aas
and
jb
faddl
ss
pop
sub
dec
xchg
mov
aam
xlat
or
add
cmc
outsb
fwait
repnz
popf
xor
xlat
loopne
adc
adc
int
mov
mov
mov
cmovns
cmp
aaa
into
dec
aam
out
imull
push
pop
lods
sbbb
sbbb
cmc
adc
cltd
xlat
cmpsb
out
test
int
sti
cmc
cmp
stos
stos
ss
lret
xor
mov
gs
test
lds
icebp
loop
jecxz
inc
in
out
test
cwtl
xchg
or
sahf
xor
and
rclb
xchg
sub
pop
mov
orl
jns
gs
sbb
jp
inc
popf
and
xchg
add
dec
and
inc
push
popf
aaa
stc
addr16
sbb
pop
dec
xchg
cwtl
into
insb
mov
push
or
sti
xchg
repnz
xor
int
jne
test
xchg
sub
cmpsb
hlt
mov
lods
test
cmp
push
fmul
sub
mov
fbstp
rcrb
loope
jecxz
add
xchg
ja
pop
bnd
pop
repz
mov
pushf
dec
stos
inc
jns
out
das
sub
push
push
mov
inc
dec
arpl
in
ja
jo
adcb
sti
loope
clc
adc
and
push
mov
out
xor
inc
fs
xor
ret
pop
mov
std
std
xchg
sub
sbbb
je
mov
insl
hlt
or
add
pop
scas
xchg
shl
mov
pushf
jg
lret
dec
cmp
cmc
mov
rcrl
xchg
sub
outsl
cmp
pusha
aad
rorb
xlat
outsb
lret
rolb
test
ljmp
adc
or
cmp
mov
fistps
mov
fldt
add
mov
in
inc
faddp
add
mov
hlt
xchg
pop
cmc
or
push
fwait
jl
add
mov
xchg
cs
dec
xchg
sub
popa
and
aas
jae
mov
mov
pop
xchg
out
sbb
mov
fnstenv
push
ret
pop
mov
daa
mov
pop
shrl
cld
dec
loop
in
aaa
xlat
lret
mov
cli
clc
adc
mov
or
jnp
cmc
mov
cmp
jle
das
sub
mov
rol
mov
shlb
aad
inc
mov
sbbb
jle
sub
dec
push
popf
jge
dec
jecxz
sbb
mov
xchg
out
xor
pop
mov
les
mov
pop
idivb
sub
sbb
ds
inc
fistpl
cld
sbbl
fimull
and
cltd
mov
mov
insb
xor
push
mov
mov
ficoml
stos
lret
gs
cmc
in
lret
cwtl
pop
mov
mov
cld
int
dec
jecxz
jo
sbbb
push
xorl
and
mov
fcomi
mov
lock
popl
out
cltd
xor
cmpsb
and
je
or
lods
xchg
dec
loopne
push
jb
xchg
ljmp
mov
mov
sbb
mov
lods
inc
push
add
mov
addb
insb
pop
dec
loopne
adc
push
sbb
pop
scas
sub
js
scas
leave
xor
not
js
ret
not
jecxz
xor
jne
hlt
mov
dec
dec
loop
or
jp
popa
clc
pop
fwait
jbe
or
das
pop
mov
iret
and
movsb
mov
arpl
rcl
aam
lds
mov
out
or
jp
mov
jge
or
lahf
jge
jl
push
lahf
adc
fbstp
aad
mov
les
test
xor
aas
enter
or
aas
jmp
out
arpl
mov
push
xchg
sub
adc
call
sub
xchg
stos
inc
mov
lret
in
pop
in
mov
aaa
cmp
lock
adc
addl
stc
nop
push
dec
pop
xorl
fwait
test
pushf
xor
leave
ljmp
faddl
pop
mov
pop
xchg
je
movsb
cmp
sti
xchg
pop
icebp
mov
and
leave
movsb
cmp
mov
ljmp
jg
pop
test
std
xchg
push
push
lds
xor
xchg
mov
push
xor
repz
ret
pop
and
lds
in
scas
push
xor
inc
dec
sbb
pop
adc
gs
jns
loopne
stc
call
repnz
push
fs
popl
sbb
xchg
inc
inc
fnsave
aas
aam
push
push
jb
inc
sti
mov
add
adc
outsb
mov
cwtl
das
add
inc
ficoml
mov
adc
xor
lahf
insb
inc
jbe
cmp
dec
loop
xlat
cmp
push
insl
mov
pop
cmpsl
mov
lods
icebp
jae
rclb
dec
loop
movsb
mov
hlt
pop
cmp
ljmp
loopne
fimuls
aam
mov
jo
ja
rolb
fistps
push
ficomps
add
js
sub
frstpm(287
push
fcomps
push
xchg
push
mov
jecxz
mov
outsb
loop
sbb
fadds
xor
inc
mov
sub
inc
xor
adc
cltd
lahf
scas
xorl
cmp
mov
cmp
mov
leave
sbb
scas
mov
fldl
leave
movsl
repz
hlt
cmp
pop
sahf
mov
push
mov
js
jl
arpl
movsb
lcall
mov
testb
imul
mov
imul
cmp
pop
pop
cltd
cmc
int
lret
or
packsswb
stos
pushf
test
test
ljmp
mov
pop
sahf
arpl
les
test
fnstcw
mov
test
es
notl
sub
stos
inc
pop
jne
testl
dec
call
jbe
mov
les
mov
sbb
lds
sbb
cmp
call
add
push
push
mov
push
loopne
jb
inc
jmp
inc
add
insb
xor
xchg
stc
out
mov
xchg
scas
sbb
stc
imul
push
js
xor
mov
mov
data16
mov
lcall
movsb
pop
inc
inc
inc
cmpsl
xrelease
jno
pop
test
dec
xor
dec
sub
mov
mov
and
lret
jl
jnp
sar
and
inc
push
add
add
cmp
test
jns
arpl
inc
int
ret
jo
cmp
mov
daa
ja
js
ret
push
dec
xchg
ret
fldt
or
mov
inc
int
ds
xor
jecxz
and
cmp
mov
inc
xchg
sbb
mov
aaa
pop
xor
push
movsl
adc
shrl
int
add
shll
sbb
out
jbe
lret
int3
jmp
ljmp
push
out
dec
data16
test
fistpl
and
dec
lcall
int3
insl
or
push
xor
mov
add
or
push
fdivrs
lret
nop
sub
pop
mov
shrb
mov
pushf
push
mov
jo
jbe
mov
icebp
mov
addl
stos
sub
int3
sbb
fadds
or
shlb
je
in
cld
inc
mov
sbb
out
pop
inc
adc
mov
push
hlt
jge
loope
pop
jg
fmul
xchg
lahf
sbb
xchg
sbbl
shlb
addr16
mov
ljmp
mov
pop
adc
out
out
fsubrl
ja
fidivs
mov
js
inc
clc
pop
cld
repz
add
add
adc
cmc
inc
or
cmp
mov
fucomip
jmp
fistps
leave
inc
mov
xor
push
mov
add
sarb
scas
hlt
clc
imul
inc
inc
push
int3
loopne
add
xlat
push
data16
dec
aad
mov
mov
mov
stos
xor
fiadds
jo
test
dec
lds
dec
insl
and
out
push
dec
into
or
add
cmpsb
jge
js
lahf
jo
ret
sub
ret
sbbb
xchg
xor
pop
out
addr16
xor
adc
cmpsb
dec
adc
out
push
push
pusha
enter
mov
or
repz
jp
dec
mov
cmp
mov
es
xchg
xor
inc
test
sub
or
sbb
inc
int3
shlb
repnz
mov
cwtl
out
das
jecxz
ret
or
into
xchg
sbb
sbb
fnstcw
je
mov
xchg
inc
sahf
cmp
jecxz
sarb
mov
test
mov
xor
mov
mov
or
loopne
mov
lret
outsb
mov
jae
xor
dec
in
aad
cmp
test
les
test
jnp
pop
ss
repnz
xchg
stc
lods
adc
out
out
dec
daa
xor
mov
mov
movsl
sub
fildll
mov
cltd
addr16
add
sub
push
hlt
pop
xchg
push
sbb
imul
inc
pop
jnp
lcall
in
rorl
fs
push
dec
in
hlt
adc
xor
stos
pop
aam
or
or
in
fwait
dec
or
stos
insl
jmp
sub
mov
outsb
cmpsl
repnz
ja
sahf
xor
jae
cld
lods
aaa
jecxz
xchg
sbb
ficompl
cli
mov
or
mov
mov
cmp
lcall
imul
cmc
in
aad
outsb
movsb
shlb
pop
ror
mov
popa
repnz
lods
dec
push
sti
xchg
xor
adc
inc
xor
jns
test
jge
add
pop
jne
cmc
push
icebp
and
inc
lret
mov
mov
push
fcoms
push
aam
add
sbb
outsb
mov
push
add
leave
or
fs
cld
mov
ficomps
and
jmp
data16
jecxz
mov
mov
test
repnz
pop
add
dec
mov
fimuls
adc
inc
and
mov
sub
and
out
adc
into
fldl
pop
jge
jbe
sub
cmp
sub
test
sub
dec
pop
xchg
inc
ds
xchg
push
movsl
sub
inc
push
cmp
nop
pop
push
into
aad
inc
fnstcw
sbb
dec
or
pop
adcl
hlt
inc
mov
xchg
inc
and
mov
inc
out
cmpsb
xchg
out
or
and
and
scas
daa
jge
jg
gs
xorl
fsubl
lea
mov
andl
push
and
andb
or
push
int3
nop
cmpsb
mov
out
xchg
dec
scas
gs
push
mulb
fiadds
xchg
xchg
cmp
inc
imul
loop
mov
jne
sbb
stos
push
ret
into
add
adc
mov
inc
xor
xchg
clc
sub
mov
jmp
or
inc
mov
add
or
dec
fs
mov
mov
test
ds
push
mov
or
dec
xor
sbb
hlt
test
push
mov
push
in
or
aam
jp
push
xor
out
push
fcmovne
cltd
mov
cmp
das
addr16
mov
mov
cs
or
or
outsl
and
cmpsb
dec
add
xor
fs
adc
popf
or
fsubrs
jp
sahf
inc
jb
imul
cmp
add
dec
stos
jnp
dec
addr16
cmpsb
pop
adc
jno
dec
repz
sbb
dec
mov
aad
xor
dec
mov
dec
push
xor
mov
sub
into
enter
shll
sbb
mov
call
jne
jmp
negl
sub
outsb
xor
mov
lds
hlt
mov
imul
data16
dec
push
rcll
lret
adc
out
add
and
dec
xchg
jp
lcall
mov
sub
stos
inc
lahf
jg
add
rorb
addl
inc
push
sub
rcrl
sub
lret
mov
std
sti
jne
sub
jns
pop
imul
or
adc
mov
fwait
dec
loop
dec
sub
arpl
lock
loopne
xchg
mov
in
dec
push
xchg
xchg
pop
mov
jbe
jecxz
call
cmp
mov
xchg
into
test
pop
and
lock
jae
pop
sahf
push
out
cs
add
outsb
pop
sbbl
sbb
xchg
cmp
sbb
cmpsb
into
gs
imul
xorb
jae
jecxz
in
rolb
lcall
jne
into
ja
mov
mov
pop
repnz
jae
loop
and
jno
in
test
and
into
call
or
or
jg
mov
mov
cmpsb
dec
cmp
push
jle
pop
repz
lahf
pop
add
cmp
pop
push
pop
push
jmp
js
push
stos
cmp
jge
iret
sub
mov
fsub
ja
fisubl
mov
fsubrp
mov
dec
in
add
xchg
jae
inc
fnstsw
call
inc
iret
sub
push
and
xchg
out
hlt
sbb
mov
add
pop
pop
mov
pop
inc
rclb
mov
call
pop
ja
jns
adc
mov
sub
xor
pop
dec
scas
inc
cmp
cmp
rclb
ss
push
xor
cmp
andb
cmp
cmc
mov
xor
mov
mov
and
xchg
sub
les
fwait
es
scas
inc
cs
xchg
push
out
aas
sbb
sub
lret
cld
out
mov
loopne
mov
jno
mov
les
mov
push
out
rep
xchg
sub
js
mov
pop
mov
sti
xchg
or
cmp
sub
mov
out
enter
enter
adc
ja
scas
xchg
packsswb
out
subl
aaa
aam
xchg
pop
dec
fbld
push
jno
jae
adc
mov
xor
in
test
aam
inc
inc
shrl
push
add
or
test
ret
mov
in
test
ds
add
fdivl
sbb
mov
std
nop
cmp
mov
jmp
push
fadd
enter
mov
out
add
jno
pop
out
lret
into
cmp
mov
fwait
adc
push
stos
addr16
fsubl
pop
scas
movsb
stos
xor
or
jbe
cs
cld
lret
cmp
inc
lods
aam
push
push
into
mov
push
cs
icebp
cmc
push
in
jmp
sub
push
jmp
cwtl
in
inc
add
lds
mov
or
xchg
jbe
mov
pop
mov
adc
subl
out
push
divl
inc
outsb
pop
test
dec
fwait
xor
sbbl
mov
sti
adc
cmp
loope
pop
lcall
xchg
sbb
cmp
movsl
test
dec
add
ljmp
or
repz
mov
into
xor
in
mov
sbb
lods
jns
gs
in
insb
ret
xor
add
psubb
out
mov
cmp
adc
mov
sti
xchg
cmp
rcrb
js
xor
repnz
pop
sahf
test
cld
jno
lret
or
paddsw
push
js
imul
repz
int
mov
push
xchg
or
cwtl
imul
mov
pop
xor
lret
mov
push
sub
in
dec
mov
inc
mov
lahf
es
push
movsl
js
or
adc
dec
out
ss
leave
stc
hlt
mov
js
adc
loopne
out
pop
repz
pop
call
std
mov
test
dec
ljmp
fs
das
push
lods
xchg
lret
dec
int3
js
cmp
negb
repnz
stc
and
xchg
test
fs
ss
dec
cmpsl
loopne,pt
rclb
jle
int
jno
fnstcw
push
or
pop
fs
jno
xor
adc
shrl
addb
les
and
cmpsl
sbb
push
xor
mov
sbbl
xlat
lea
pop
lahf
xor
mov
jle
insb
out
or
mov
outsb
push
jne
popa
clc
cmp
aam
pop
pop
arpl
mov
in
scas
cli
mov
mov
cltd
push
sarb
xchg
push
popa
loopne
sbb
and
mov
mov
mov
aam
add
adc
mov
shll
imul
mov
xlat
mulb
mov
adc
pop
scas
jb
push
cmpsb
xchg
sub
jbe
jo
mov
stos
inc
addb
repz
movsb
cmp
xchg
jp
in
mov
sub
dec
and
mov
inc
ljmp
in
add
inc
fstpl
loope
sbb
sti
int
mov
testb
cmpb
mov
push
push
rcrl
xor
or
mov
cmp
add
dec
movsb
out
cmp
jne
ret
cmpsb
push
neg
push
cmp
mov
in
ss
out
test
and
mov
mov
test
repnz
xor
cli
xchg
mov
xlat
push
ss
fs
cltd
sbb
faddl
adc
roll
pop
xor
and
inc
or
cs
pop
aaa
lret
cmp
inc
pop
push
aaa
xchg
push
cmp
xchg
pop
lock
fists
inc
inc
adc
push
mov
sub
inc
rcrl
mov
dec
ja
push
gs
mov
xorl
cwtl
mov
pop
mov
xchg
push
mov
jbe
insl
cmc
mov
cmp
arpl
les
rclb
outsl
fcmovne
seta
pop
mov
xor
or
shl
jmp
jnp
or
jae
jnp
pop
xchg
dec
icebp
push
xchg
mov
mov
xchg
dec
jg
xchg
ljmp
cmp
mov
vmovshdup
jge
ljmp
xchg
cltd
push
in
push
push
push
push
push
dec
outsl
xchg
jl
pop
mov
mov
jbe
jmp
pop
aad
mov
pop
adc
pop
stc
pop
pop
stc
outsb
cltd
mov
out
cltd
xor
pop
mov
xlat
pop
mov
mov
sub
cwtl
push
and
lods
jg
xchg
sub
movsb
sahf
jns
rol
hlt
mov
icebp
xchg
fildl
daa
movl
sbb
fwait
pop
in
mov
out
mov
fsubr
jbe
sahf
mov
jae
imul
jge
jp
mov
fnstenv
or
aas
stos
cmp
jns
mov
pop
mov
add
push
jns
add
pop
push
jo
pop
inc
ja
pop
push
or
inc
daa
cld
push
test
aaa
adc
and
outsb
jge
ret
xor
out
push
jmp
fsubp
jnp
sbb
sti
mov
pushl
in
leave
jno
orb
mov
push
adc
jle
repnz
sarl
mov
pop
idivl
in
imul
jno
xchg
out
leave
adc
push
cmp
cmp
jo
sub
mov
test
mov
cmp
das
mov
dec
adc
sarl
xchg
cmp
mov
cmp
lcall
hlt
pop
icebp
aad
push
stos
std
out
push
jmp
add
rorl
jne
xchg
icebp
dec
repnz
inc
imul
daa
mov
out
mov
sbb
jnp
sarl
adc
icebp
leave
pusha
and
xchg
dec
fisubrs
mov
in
orl
call
mov
pop
sbb
stos
enter
xlat
inc
sub
daa
out
ret
or
mov
push
and
mov
leave
fimull
jmp
call
inc
push
inc
lock
scas
aas
in
lret
adc
int
iret
and
lahf
sti
dec
cmp
sti
sub
mov
push
and
scas
pop
push
or
popf
pusha
mov
int3
mov
ret
or
rol
int
adc
or
add
jl
mov
loope
test
popa
int
mov
shlb
push
xor
jge
dec
in
aaa
inc
cmpsb
cmp
std
or
sub
daa
adc
mov
stc
int3
shrl
sbb
xchg
push
int3
mov
rol
mov
sbb
push
dec
jo
lret
pop
xchg
push
xor
xchg
xor
lret
clc
adc
pop
mov
out
mov
in
sub
js
add
dec
xor
inc
mov
adc
les
mov
push
mul
out
loopne
lods
mov
ljmp
call
clc
mov
jl
cwtl
pusha
fimuls
std
pop
jae
push
xchg
fdivr
jo
sbb
dec
nop
add
dec
and
and
xchg
sub
or
icebp
nop
out
xchg
clc
add
inc
lea
push
xor
mov
pop
inc
hlt
or
mov
inc
sub
out
inc
insl
jb
insl
cmc
mov
pop
dec
daa
mov
fildl
jo
or
popa
test
sub
mov
daa
or
cmp
shrl
in
or
cmp
test
pop
aad
mov
loop
cs
mov
out
mov
fiaddl
pushf
xor
xchg
jecxz
or
dec
out
add
jns
scas
movsb
mov
cmp
push
adc
and
orb
add
jge
outsb
add
adc
out
test
outsl
fisubrs
xor
sbb
rclb
aas
out
inc
stos
xor
push
jno
ds
and
mov
imul
in
add
negl
jecxz
js
ret
outsb
faddp
mull
in
sbb
jp
icebp
ret
dec
dec
cs
repnz
incb
jb
shlb
inc
out
int
fisubs
scas
inc
pushf
mov
repnz
mov
jmp
stos
out
mov
and
pushl
push
jo
jge
xchg
push
rcr
rcrb
mov
das
adc
shll
add
sub
lret
bound
setae
inc
push
jno
mov
fbstp
fs
push
xchg
pop
xchg
sub
mov
std
shrb
mov
ljmp
fmul
dec
leave
xlat
lds
popf
sahf
fidivrl
ret
mov
pop
mov
jnp
lock
clc
xor
sub
cmp
lea
mov
ja
jno
mov
jg
push
and
or
into
xor
leave
sbb
ss
outsl
int
cmc
lahf
repz
xchg
aad
les
xchg
subl
pop
fdivs
jns
sub
xor
ficomps
stc
jg
cmp
ds
add
jo
xor
mov
scas
xchg
pop
adc
cmp
xchg
rcll
push
mov
sub
pusha
xorb
mov
pusha
mov
lods
add
and
subl
clc
inc
js
jne
inc
pop
push
mov
ljmp
jo
ret
loop
add
push
push
test
lods
aad
jl
int3
iret
data16
mov
cmpsb
icebp
sbb
hlt
sti
imull
dec
lds
cli
rorb
pop
sub
pop
jg
push
push
sub
or
fiaddl
jmp
stos
mov
jnp
push
dec
lds
mov
sbb
jno
or
jmp
pop
inc
ljmp
jno
lahf
std
inc
aaa
push
xchg
and
outsb
das
mulb
jbe
cmc
je
in
xorl
ja
add
pop
je
cmp
in
test
test
fcomp
inc
xor
inc
xchg
sub
xor
cmpsb
je
jne
daa
imulb
xchg
sbb
xchg
out
xchg
xor
fidivrs
sub
lock
jl
stos
lods
dec
in
sub
xchg
jno
shrl
pushf
es
scas
rolb
cmc
aam
das
testl
xor
cmp
cmpsb
ret
rorb
sbb
insl
mov
and
pop
sahf
push
push
or
mov
ss
lret
adc
aas
test
xor
pop
xchg
jae
scas
mov
clc
stos
pop
fwait
out
movsb
int3
iret
push
lcall
cltd
jne
stos
int3
lahf
imul
in
mov
mov
test
test
mov
lods
inc
push
adc
pusha
jg
xor
out
jae
sub
sbb
scas
test
ficomps
loop
popf
adc
adc
mov
cmpsl
popl
sbb
mov
inc
jp
movsb
rcr
in
mov
mov
and
ja
mov
inc
cmp
jne
pop
pop
into
outsb
jae
pushf
inc
lea
repz
mov
fucomp
xor
adc
imul
push
and
cmp
data16
repz
dec
lret
cmc
push
jns,pn
add
nop
aam
scas
jno
inc
xchg
stos
push
shlb
outsl
adc
or
das
xor
push
and
mov
dec
outsl
imul
adc
bnd
adc
icebp
out
push
adc
inc
js
fisttpll
xchg
int3
stos
mov
loop
pop
sti
xchg
nop
jl
mov
movsl
daa
dec
push
test
adc
mov
mov
jl
lcall
adc
lcall
out
jbe
sub
mov
repnz
jp
xchg
iret
push
and
adc
or
adc
or
jne
jns
mov
push
movsl
sbb
sbb
lret
sbb
cmp
push
sbb
subl
mov
daa
dec
stos
pop
push
dec
push
fs
jns
xor
xlat
fcmovu
jmp
data16
lret
pop
pop
mov
and
imul
jae
jb
sbbb
mov
push
push
xor
cmc
cmp
inc
int3
lret
leave
and
test
shrl
jge
cmc
shrl
mov
cmpsl
mov
shl
mov
sbb
sarl
and
inc
outsb
inc
mov
xor
rcrl
push
and
shrl
jecxz
cmp
jbe
and
stos
daa
jae
in
aad
sub
jns
mov
insb
jns
sbb
inc
shrl
or
jns
cs
nop
cmp
mov
cwtl
icebp
in
or
cld
add
jge
cmp
aas
ret
inc
test
test
popf
cmp
xor
mov
inc
cmp
ljmp
mov
outsb
or
ds
mov
sti
pushl
ljmp
into
lock
or
data16
xchg
les
lahf
aam
mov
mov
sahf
push
and
ljmp
hlt
aam
aaa
lds
imul
adc
rcrl
dec
arpl
fs
jmp
ljmp
aaa
add
cs
nop
dec
icebp
jg
pop
mov
movsb
xchg
flds
inc
jge
mov
inc
xor
xchg
pop
aaa
pmaddwd
push
stos
or
out
imul
jp
dec
out
addr16
xchg
jmp
push
sbb
aad
xchg
xchg
aad
adc
xlat
out
add
fs
fucomip
adc
push
lds
cld
xchg
dec
out
addb
adc
insl
add
or
das
dec
xchg
gs
dec
jne
jo
push
mov
les
out
xchg
enter
test
mov
xchg
fs
adc
data16
jmp
loopne
push
pop
pop
mov
fidivs
mov
mov
pop
adc
ret
and
mov
fisubs
sbb
or
or
js
int
rorl
xchg
and
pop
loop
insl
mov
aam
adc
xchg
or
mov
lds
mov
cmp
popa
scas
push
insl
push
or
dec
cmp
sbb
movsl
mov
add
jecxz
pusha
xchg
xor
cmp
mov
pop
fstl
push
sahf
inc
xor
cs
push
adc
lcall
or
inc
js
cmpsb
das
clc
popa
insl
xor
mov
pop
daa
movsb
leave
sub
mov
sbb
sarb
bound
stos
lock
ficomps
nop
mov
xchg
negb
lret
push
fistps
adc
insl
je
fsubr
das
leave
xor
inc
sbb
in
in
mov
mov
mov
movsl
mov
lret
and
xor
add
jp
aas
imul
xorl
and
sub
lock
and
insb
dec
push
mov
jb
adc
dec
outsl
aaa
cmpsl
mov
xchg
and
mov
shll
push
jg
xchg
push
outsb
jno
sub
rorb
xchg
lods
adc
adc
lea
or
out
mov
scas
inc
or
mov
cmp
dec
or
xlat
xchg
push
xor
push
push
mov
jle
jae
push
fisubrl
jo
adc
fistl
push
dec
fnstsw
popl
aad
mov
fwait
hlt
mov
or
in
cmp
push
add
andl
lcall
dec
jmp
test
xchg
inc
sbb
or
cld
rorl
andb
ljmp
leave
dec
lcall
xlat
repnz
ret
mov
testb
jecxz
mov
xor
mov
mov
lds
and
cli
pop
pop
xor
cld
mov
inc
loopne
outsl
pop
dec
sbb
pop
ss
mov
lds
jge
mov
ret
mov
cmpsb
jge
int
out
in
decl
cs
enter
out
hlt
fcomps
jb
xor
add
ret
mov
test
xor
mov
or
fsubr
cmc
divl
cmp
mov
dec
sub
nop
daa
or
and
sbbb
mov
lods
inc
sbb
or
inc
and
sbb
sbbb
mov
hlt
mov
jge
adc
flds
cmp
sbbb
mov
imul
hlt
repnz
out
jmp
scas
pop
or
add
clc
rcrb
aad
jbe
fmulp
xor
jmp
fdivl
inc
jle
xor
lods
inc
ficompl
arpl
mov
mov
test
cmp
pop
stos
xor
jns
and
addr16
mov
mov
outsb
dec
fnsave
lea
adc
out
aas
adc
add
push
out
and
cmp
jmp
push
stos
inc
inc
fidivrl
into
cmpsl
ds
fidivrs
adc
cwtl
xchg
dec
loopne
roll
out
ret
push
montmul
cmpsb
inc
sbb
das
jne
xor
insl
inc
bound
cmp
xchg
sub
add
xchg
jb
popf
inc
mov
sub
pop
jp
fs
dec
ss
xchg
mov
inc
xchg
inc
fadd
push
adc
insb
or
iret
icebp
lahf
enter
lds
into
cmp
dec
push
or
cmpsl
xchg
ja
inc
dec
mov
loope
imul
jbe
mov
aas
xchg
sub
push
popa
hlt
mov
sub
xchg
bound
lds
fs
mov
xor
lods
pop
push
out
arpl
inc
fcomp
test
cmpsb
adc
cmp
les
jno
jns
sub
int3
adc
in
test
mov
enter
sub
dec
mov
fistps
repz
or
cli
xchg
cmp
push
sbb
add
add
lods
mov
cmp
mov
push
in
idivb
into
push
mov
stc
cltd
adc
push
ljmp
cmpsl
cli
dec
in
leave
fsubrs
dec
outsb
add
cwtl
inc
jmp
js
je
xchg
cmp
mov
jg
push
mov
xchg
push
ljmp
jge
stos
adc
stc
or
add
int3
pop
sub
cmp
loope
and
loope
add
jp,pt
cli
dec
jae
sbb
sbb
pop
popa
lock
std
cmpsl
pushf
cwtl
inc
fdivl
push
popf
aaa
jmp
lods
sbb
and
scas
pop
push
mov
mov
loop
fcomi
fs
mov
xchg
jmp
imul
scas
xchg
sbbl
cmp
mov
mov
xor
les
pop
iret
rorb
xor
xchg
fiaddl
or
sbb
es
lahf
dec
push
fwait
cld
xchg
inc
jle
xchg
pusha
sub
inc
call
test
out
add
or
idiv
movsb
dec
loop
jecxz
push
rorl
sub
inc
insb
add
and
pop
mov
into
popa
sbb
mov
aas
iret
cmpsb
jo
mov
testl
xor
jp
jg
xlat
add
mov
sbb
call
fnstenv
ret
dec
jecxz
inc
sub
mov
or
in
fs
shll
xor
jbe
pop
movsl
dec
mov
and
stos
jno,pt
fs
pop
in
push
push
orb
dec
pop
call
fsts
leave
mov
scas
gs
dec
rolb
push
cmpb
cmp
scas
pop
jo
inc
rcrb
add
popa
push
sub
lcall
push
cs
xor
mov
cli
xchg
mov
mov
call
jno
xor
test
nop
sbb
and
mov
leave
pusha
je
sahf
xor
cmpsb
jne
mov
clc
pop
mov
bnd
out
xchg
mov
cli
pop
movsl
mov
cld
pop
out
sub
push
adc
ja
call
rorb
gs
jae
pop
adc
xchg
call
into
nop
mov
jb
repz
int3
xchg
mov
sub
adcl
sti
test
inc
mov
aas
sbb
lea
ljmp
outsb
mov
bnd
push
rclb
xor
sbb
cmp
les
sbb
out
pop
shlb
lods
loopne
cmc
cmpl
pop
test
and
xchg
pusha
jo
jle
and
add
xlat
rcll
std
xchg
xchg
movsb
cmp
pop
jge
xchg
sbb
aad
pop
lea
inc
and
push
sub
loopne
insl
sub
outsl
lcall
test
add
jno
mov
cmpsl
push
push
push
in
test
pop
repz
pop
repnz
adc
nop
mov
dec
loope
mov
pop
adc
ss
mov
mov
add
daa
sub
pop
mov
inc
lods
xor
fisubrs
add
maxps
lods
xor
and
xor
jmp
dec
nop
mov
ret
jns
jae
sbb
and
ret
inc
push
into
jp
fadds
imul
mov
xor
fs
stos
mov
sarl
pop
hlt
xor
mov
into
test
jecxz
imul
cld
fnsave
add
rcll
dec
leave
inc
push
adc
ja
jl
pop
test
mov
jp
jp
jnp
movsl
cmpsl
cld
nop
daa
cs
sub
fisttpl
es
cld
push
rol
and
loop
inc
mov
loopne
dec
mov
js
inc
out
out
jp
adc
shlb
js
sub
inc
mov
cwtl
das
shrl
push
push
xor
add
cmpl
fst
or
cmp
fs
sub
add
push
lods
mov
jnp
shrl
in
mov
jbe
test
aas
movsb
cmp
das
add
ss
test
sbb
add
adc
insb
call
fdivs
popf
repz
scas
and
mov
cmp
xchg
daa
xchg
bound
xchg
scas
fs
push
mov
bound
inc
dec
mov
dec
addb
imul
inc
pop
rclb
insb
add
mov
lea
mov
mov
popf
add
sub
out
push
pusha
notl
or
cmpsb
mov
jnp
repz
mov
clc
enter
inc
ret
mov
sbb
lds
mov
ficompl
or
sbb
adc
inc
adc
mov
or
push
ljmp
or
notl
sti
jb
fbld
test
popf
inc
les
inc
sub
aaa
test
xor
cmp
fdivl
pop
or
ret
adcl
out
xchg
stc
testl
jne
cmpsb
cmp
or
sti
or
mov
add
xor
lcall
icebp
sub
outsb
popf
or
aas
adc
mov
push
test
movsl
and
inc
dec
in
cmp
bound
popf
xor
clc
jae
lret
push
in
cmpsl
in
jmp
mov
fldt
rcl
aad
fdiv
aaa
into
std
mov
into
in
fidivrl
fistpll
rol
insl
loop
sub
mov
fisubrl
sub
cmp
lods
fmulp
data16
pop
icebp
mov
lock
inc
dec
jecxz
dec
or
test
mov
mov
mov
enter
and
push
iret
loop
sbb
xchg
mov
int
adc
inc
push
jle
dec
push
push
xchg
push
mov
in
mov
inc
out
stos
inc
inc
push
lret
bound
and
pop
push
sbb
cwtl
xchg
test
mov
xchg
pop
dec
push
out
jp
inc
pop
ret
xor
hlt
xor
cmc
hlt
fnsave
montmul
cmpsb
inc
loope
dec
aam
imul
sbb
es
sub
and
adcb
lds
shlb
xlat
dec
loopne
stos
cmp
adc
cld
dec
loope
mov
insl
sbb
sbb
pop
adc
out
in
mov
and
jne
stc
xor
sbb
popa
push
adc
addb
jmp
cmp
fwait
cmpsb
cs
sub
mov
fnstsw
fcompl
pop
icebp
int
sub
mov
fnstenv
icebp
mov
inc
fcoms
mov
iret
loop
inc
xlat
cmp
aad
aaa
into
repz
enter
mov
adc
mov
push
icebp
rcll
fistl
sti
xchg
inc
cld
jae
shlb
loope,pt
popf
mov
add
or
std
xchg
xchg
push
out
outsl
mov
add
ret
repnz
mov
xchg
sub
sbb
insl
pushf
shrl
mov
pop
lock
sub
test
ja
adc
decl
add
lea
es
jne
inc
fcompl
mov
insl
add
xor
popa
je
and
cmpb
outsl
inc
inc
fsts
movsl
cmp
js
adc
jp
pushf
xor
cwtl
das
pop
insl
out
push
inc
shrl
jb
das
dec
je
and
fsubrs
pop
lds
movsb
cmp
into
in
sub
test
bound
rcr
jne
xor
sbb
cld
xchg
addl
sbb
cmp
jge
add
sub
dec
int
popa
out
mov
sbbb
sbb
je
pop
and
stos
inc
out
xchg
decb
das
cmp
mov
and
jbe
mov
sbb
xor
push
jne
jno
jo
pop
xchg
pop
sub
inc
dec
dec
mov
gs
pushf
insl
into
mov
hlt
mov
adc
push
inc
adc
xchg
xchg
xor
lds
dec
in
or
lds
cmp
pop
dec
jecxz
mov
add
fisubrs
and
add
lret
jae
inc
mov
out
sahf
mov
fcompl
adcb
sbb
add
sbb
sbb
scas
mov
addr16
cmp
jg
sub
in
scas
mov
mov
sbb
inc
dec
movsb
shrl
imul
adc
sub
icebp
pusha
xor
lret
popa
arpl
push
jbe
pushf
ljmp
pop
roll
aad
addr16
jmp
push
fildll
bound
mov
adcb
daa
cmp
sahf
sahf
filds
push
scas
insl
jbe
inc
xor
sbb
mov
cmc
push
imul
mov
mov
mov
cmpl
mov
mov
daa
cmp
mov
mov
cwtl
push
sub
psubusw
mov
icebp
push
mov
lods
mov
rcrb
js
daa
imul
ja
frstor
and
fldpi
mov
sub
inc
dec
addr16
lahf
mov
mov
xchg
shrl
inc
pop
push
imul
pushf
mov
pop
cmp
jmp
inc
aad
jo
fld
out
imul
cmpsl
jmp
lret
pop
xor
nop
in
xor
loop
fs
mov
movsb
inc
jne
sbbb
sti
dec
loop
sub
rorl
xchg
inc
aaa
daa
jmp
test
add
lcall
xchg
inc
pop
fabs
je
dec
shlb
add
pop
add
movsl
jne
inc
push
fnstsw
or
and
inc
data16
jb
rol
xchg
std
inc
and
xchg
mov
les
mov
fnstenv
or
std
pushf
clc
ffree
adc
aam
sbb
repnz
gs
cmpsb
dec
mov
jg
int3
mov
imulb
sbb
outsb
sbb
cmp
cmp
subb
std
lods
dec
xchg
push
sti
ret
les
lea
fsubrl
or
testb
sub
cli
jb,pn
cmp
aam
rcr
jae
scas
ret
sbb
ret
pusha
ss
xchg
les
cmp
bound
mov
das
inc
inc
fdivl
lret
add
out
add
add
mov
push
loop
lock
and
adc
fwait
test
push
sahf
xor
mov
mov
cld
stos
pop
test
mov
cmp
add
jg
sbb
push
xor
inc
cwtl
inc
cmpsb
es
sahf
jmp
fdivrs
sbb
xor
push
add
jle
push
cmpsl
fistps
or
call
movsb
push
cmp
sahf
cmpsl
sbb
ret
dec
clc
jge
test
into
pop
adc
xchg
mov
xor
pop
addl
xor
outsb
push
or
push
xor
pop
jbe
outsl
xchg
cs
inc
call
jp
ds
movsb
dec
pop
dec
cmc
adc
jg
push
mov
and
xor
test
cmc
hlt
int3
xor
cmp
or
leave
xlat
in
add
mov
push
xchg
out
add
and
outsl
push
into
jb
nop
adc
ret
sub
out
and
iret
mov
push
jecxz
dec
test
mov
push
iret
pop
aad
test
divl
in
outsb
xor
dec
xlat
sub
popa
clc
push
jns
int3
jmp
and
cli
js
mov
add
cld
aam
push
std
stos
mov
jne
adc
mov
and
jne
in
cltd
sub
or
and
mov
cmp
xchg
mov
repz
xor
rep
add
bnd
or
imul
xchg
sub
fcmovnbe
jbe
dec
jns
sbb
aam
sbb
aaa
push
cmp
sbbb
push
or
insl
imul
pop
sub
inc
dec
out
sbb
aad
pop
cmp
mov
add
fisttpl
mov
dec
testb
push
inc
dec
in
aad
aaa
imull
imul
popf
mov
icebp
sbb
dec
lods
mov
aad
imul
movsl
add
and
push
out
jno
add
hlt
adc
test
cmp
popf
and
and
stos
cli
inc
sub
pushf
inc
out
pop
outsl
jnp
std
insl
rcrl
leave
xchg
cs
push
sub
or
imul
mov
mov
mov
mov
or
fldt
dec
cs
xchg
pusha
stos
mov
sbbl
push
push
fsubrs
add
xor
out
inc
mov
mov
sahf
xchg
xor
cmp
pop
xchg
fsubrl
inc
adc
aaa
pop
outsl
sbb
jl
dec
lock
jne
jp
xchg
sbb
cmp
ja
push
jo
mov
inc
pusha
push
jmp
subb
mov
shrl
cmp
sub
pop
mov
insb
mov
jl
insl
or
mov
add
mov
xchg
adcl
daa
mov
notb
pop
mov
inc
cs
insb
andb
push
jbe
aaa
jns
rclb
xchg
data16
mov
add
inc
sub
jp
lret
das
adc
inc
cli
sbb
imul
mov
sti
add
cmp
sbb
movsb
xor
stc
cmp
mov
mov
mov
jbe
sub
cmpsb
dec
xchg
add
jns
ljmp
iret
xchg
bound
jecxz
cmc
or
mov
ja
das
icebp
ret
dec
imul
xchg
xchg
jae
sub
mov
mov
test
pop
popf
sbb
and
out
popl
mov
mov
pop
pushf
int3
lods
fdivrs
in
sub
xor
pop
cwtl
cmp
push
adc
or
lock
stos
test
xchg
add
xchg
enter
mov
lcall
and
sbb
popf
in
adc
jmp
add
and
arpl
jbe
andl
ret
inc
repz
pop
test
inc
pop
xor
test
xor
aam
add
subl
mov
out
loope
push
mov
xchg
pop
lock
sahf
jmp
aam
and
ss
mov
dec
aas
pop
stc
subl
sbb
lcall
and
es
pusha
nop
xchg
bound
scas
ds
adc
out
sbb
mov
pop
outsb
jle
loopne
xchg
into
shll
outsl
jmp
jl
movsb
insb
shlb
push
rcrl
loopne
and
pop
icebp
xchg
inc
ret
fbstp
call
lds
mov
jp
sbb
in
and
cmp
sub
pop
repz
xchg
xor
xchg
outsl
pushf
lods
dec
and
rcrl
add
mov
out
fisubl
and
push
imul
in
jp
lahf
sbb
shrb
ja
xchg
pop
sub
sahf
add
adc
icebp
cltd
xor
jbe
lods
ja
inc
roll
hlt
arpl
push
imul
cmp
add
inc
xchg
add
and
icebp
cmp
scas
ret
sbb
adc
push
std
add
cli
out
dec
pushf
daa
mov
sbb
sub
out
pcmpeqw
jle
cwtl
pop
out
push
jmp
mov
push
in
imul
fnstenv
jle
xchg
daa
mov
dec
shlb
xor
push
mov
test
cmp
call
test
fimuls
mov
leave
repz
or
xchg
shrb
jbe
loop
pop
divb
loope
lock
inc
adcb
xchg
xor
shlb
add
fnsave
rcl
in
xchg
andb
xor
repz
mov
aam
jg
loop
dec
lea
xchg
sbb
push
and
inc
sub
xor
pop
xor
push
mov
inc
gs
stos
cld
shrl
adc
cld
cmp
jecxz
rclb
stc
stos
mov
hlt
push
inc
je
mov
xor
xor
psubsb
and
push
pop
cmpl
neg
je
stos
adc
pop
cmpsb
out
cltd
insl
xor
popf
jnp
lea
scas
push
je
nop
jno
in
shlb
push
gs
mov
push
cmp
xchg
add
loopne
pop
daa
add
fs
mov
aad
cmp
rol
repz
pop
push
push
mov
cmp
clc
lret
sti
cmp
mov
adc
or
pop
push
mov
or
dec
mov
stos
loop
add
xor
jne
or
repnz
es
push
leave
jge
stc
scas
ljmp
jmp
fwait
cmp
outsb
testb
gs
cld
movsb
xchg
fsubrl
iret
fimull
es
aam
mov
movd
sbbl
inc
pushf
cmp
mov
sbb
mov
lahf
mov
pop
dec
add
jb
and
arpl
lea
mov
mov
xor
mov
ret
xchg
jmp
mov
push
jmp
add
push
inc
dec
inc
jo
jbe
mov
jp
or
lret
jl
or
adc
inc
cmp
pop
pop
pop
jle
xchg
icebp
xchg
mov
jbe
push
xchg
imul
bound
mov
inc
aas
popf
lods
imul
cmp
xchg
shll
mov
filds
add
xor
mov
sub
mov
mov
mov
in
outsl
push
push
adc
cmpb
mov
popa
sbb
cmp
dec
notl
jnp
jnp
cmp
dec
inc
inc
inc
insl
fnsave
sti
movsb
sahf
nop
xchg
cli
push
or
inc
popl
dec
mov
jbe
mov
push
imul
jp
rcll
fsubl
insl
jnp
arpl
cwtl
stos
ffreep
movsl
mov
pop
in
mov
popf
lret
pop
popf
add
push
sub
lods
sarb
das
inc
and
lods
ret
jl
je
push
lea
packuswb
movsl
sub
cmp
mov
add
nop
movsb
out
sahf
xchg
nop
outsb
cmpsl
adc
jge
cmp
mov
adc
fidivl
iret
aam
sbb
cmp
xor
les
mov
mov
sub
clc
push
cmp
dec
pop
std
sbb
test
jp
sbb
into
ljmp
int
imul
insl
inc
stos
test
bnd
jp
lret
and
test
aad
lea
adc
sub
inc
ret
movb
pop
dec
pop
mov
jae
sbb
test
xchg
daa
dec
mov
or
xchg
js
lds
dec
cmp
inc
aaa
mov
in
ds
jne
jl
inc
pop
pop
insb
cmp
movsb
pop
dec
mov
jp
cs
fsubrl
jns
jb
mov
cli
and
cmp
or
lods
call
dec
and
sub
sub
aad
mov
or
orb
inc
dec
adc
aad
outsb
repnz
paddq
ljmp
pushf
cli
lret
cmc
cmp
sbb
push
lods
inc
outsb
clc
jecxz
scas
out
sti
adc
loop
and
xor
outsb
adc
and
mov
fisubrl
or
stc
test
in
jo
ret
jne
adc
fistl
sub
lods
pop
pushf
xchg
dec
ljmp
ja
push
loop
insl
cmpsb
and
rorb
push
insb
sbb
mov
mov
aad
test
mov
xchg
sbb
outsb
add
mov
es
in
daa
mov
test
insl
sbb
lods
pop
jg
mov
jnp
or
cmpsl
cltd
push
add
je
and
mov
nop
jle
push
mov
mov
mov
inc
cmc
mov
lcall
dec
push
adc
jae
mov
add
repnz
push
mov
cltd
xchg
cli
ljmp
pop
mov
popa
andl
mov
shrb
rsm
das
pop
push
aas
xchg
sbb
pop
es
loope
cmp
xchg
push
sbb
sub
cmp
push
sbb
aaa
push
insl
movsl
cli
scas
cltd
dec
in
stos
inc
in
fcomps
stc
lret
leave
stc
adc
dec
sahf
sbb
shll
jp
cs
sub
stc
xchg
sarl
mov
inc
fistpl
or
mov
add
adc
mov
push
xor
mov
scas
rcr
outsb
fnop
ret
inc
shl
fdiv
lahf
mov
out
int
jb
add
inc
xlat
xchg
cwtl
inc
jnp
xchg
in
lock
loop
cmp
sbb
or
andb
fdivrs
rol
fidivl
lret
enter
xchg
imul
xchg
sub
test
aam
loop
lret
adc
push
dec
push
lods
mov
inc
mov
sarl
test
js
xchg
testb
divb
jp
push
call
xor
dec
jno
sbb
bound
xchg
mov
cmpsb
sub
mov
cmpsl
dec
jle
leave
aad
cmp
and
jl
or
cli
mov
fistl
lret
sarb
xor
mov
hlt
aam
jle
cmp
add
push
push
nop
jle
subl
inc
mov
stos
idiv
dec
shrl
mov
fwait
push
mov
and
mov
xchg
sub
rorb
into
shlb
adc
jecxz
push
mov
fs
stos
xorl
or
clc
mov
in
insb
data16
adc
mov
shrb
sub
pushf
mov
jns
mov
ds
fcoml
pop
leave
cltd
mov
out
jl
xorb
sub
mov
ret
outsl
ljmp
or
xlat
mov
int3
int3
xor
and
ret
inc
pusha
push
fisttps
popa
xor
insl
sbb
inc
jl
in
adc
jo
sub
movsb
mov
int3
lea
bound
mov
xchg
jle
int3
cmp
pop
test
movsl
sub
loope
inc
or
mov
mov
cltd
jnp
andb
inc
xlat
fadds
lock
cmc
jge
cmc
scas
cwtl
cltd
or
inc
jl
mov
pop
fiaddl
cmp
push
hlt
push
cmp
adc
sub
mov
jg
xor
adc
loop
mov
lret
add
push
outsl
imul
in
lcall
ret
das
cmpsl
inc
mov
push
insb
stc
fstpt
mov
sbb
fstps
cmp
mov
push
imull
xchg
jp
pop
mov
ret
inc
sbb
jns
std
js
sbb
mov
popa
jnp
xchg
fs
decb
stc
xor
inc
pop
mov
jnp
cmp
cwtl
and
dec
xor
push
insb
xor
xor
lods
dec
dec
mov
mov
add
pop
lahf
push
inc
gs
xchg
and
out
add
dec
std
inc
idiv
push
mov
or
les
test
dec
pop
cwtl
lret
test
adc
jmp
jecxz
jb
cli
popa
imul
add
shll
push
jo
xor
cmp
push
pop
vmovq
xchg
xor
jbe
loopne
inc
iret
or
divl
out
shrl
sbb
pop
imul
fnop
lds
xchg
ror
rorb
pop
lea
inc
fadds
pop
jno
in
sbb
sbb
push
mov
or
mov
pop
nop
das
cld
repz
mov
xor
mov
mov
ja
mov
hlt
cwtl
adc
mov
and
bound
cmc
mov
jno
push
sbbl
xor
scas
add
jmp
xchg
data16
push
pushf
in
pop
lret
xchg
jb
sub
add
push
outsb
inc
and
push
addr16
je
xlat
xor
imul
cmp
insb
fdiv
xchg
lcall
shr
dec
lret
sub
mov
jne
call
or
inc
pushf
push
cmp
mov
lahf
inc
out
outsl
daa
or
push
lods
and
mov
cmpsl
in
or
aas
mov
push
xor
mov
xchg
jge
dec
jo
lret
sub
jbe
cmpsl
mov
xchg
aam
sbbl
pop
pop
pop
pop
or
push
or
js
or
or
xchg
xchg
arpl
cld
ret
mov
xchg
loope
xor
mov
mov
mov
dec
fdivs
fdivs
dec
loopne
dec
inc
and
fucomi
jne
cwtl
scas
and
scas
cld
test
lret
or
rcrw
and
push
mov
addl
xchg
mov
mov
mov
adcb
mov
sbb
jbe
cmp
testb
add
dec
cmp
push
mov
pop
or
sub
int3
ja
xor
rcrl
mov
fs
test
ja
ret
lahf
jns
popf
mov
cltd
or
xchg
dec
push
mov
dec
adc
jb
ret
pop
gs
dec
and
xchg
or
divb
js
sub
sbb
test
jno
stos
loop
or
fs
sub
dec
jle
out
outsl
adc
loope
imul
rorl
xchg
xor
mulb
or
xchg
cmp
stc
repz
negb
mov
adc
adc
dec
addb
inc
in
xor
jo
pop
das
adcb
ja
clc
je
sub
shll
pop
xchg
mov
jo
mov
sbb
jne
cli
pusha
sbb
mov
xor
roll
push
fidivrl
adc
std
lea
mov
jmp
dec
andb
cmpsb
push
add
cs
adc
adc
fsubr
cwtl
jo
xor
ljmp
pop
roll
ljmp
push
out
outsl
gs
dec
mov
insb
sub
xchg
loop
mov
popa
mov
xchg
jno
enter
lock
or
add
popf
leave
jmp
and
leave
rolb
cmpps
cltd
sub
adc
js
scas
aaa
add
cli
cmp
or
shr
mov
mov
xor
lock
fdivp
scas
pushf
sbb
and
sbb
es
pusha
pop
sti
sbb
sbb
pusha
push
dec
adc
mov
out
cwtd
fucomi
arpl
pop
dec
out
lods
sbb
in
aas
lods
xor
mov
test
rorb
lock
dec
mov
movsb
cmp
lahf
jo
subl
xchg
mull
sub
cmc
push
dec
iret
pop
xchg
push
mov
movsl
jns
pusha
les
andl
cmc
out
and
iret
sti
pop
add
out
xchg
icebp
and
cmpsl
xor
fsts
stos
or
xor
push
jp
fisttpl
xchg
test
mov
jae
imul
sbb
inc
sbb
jno
and
xchg
sbb
fwait
jnp
lds
xchg
sub
mov
imulb
test
test
cmp
dec
jle
mov
loope
jecxz
xor
clc
addb
mov
lret
es
sbb
jns
mov
into
in
hlt
jle
es
lock
fucom
sbb
fisubs
xor
call
loope
jae
loope
mov
jmp
cltd
dec
subb
sbb
ds
adc
mov
lock
aad
inc
repz
and
out
in
xchg
into
testb
imul
sub
loop
outsb
pop
push
in
push
ljmp
mov
mov
cmc
adc
test
adc
in
jae
cmpsb
cmp
xchg
add
dec
inc
sti
mov
push
repz
and
dec
xor
jle
outsb
mov
addr16
aam
xor
in
cld
pop
mov
or
adc
mov
mov
ds
mov
add
or
cmp
cmp
cmp
pop
dec
push
aam
imul
mov
subl
dec
xlat
dec
mov
jge
scas
dec
mov
repnz
js
loopne
bound
xor
xor
mov
xchg
shr
lds
loop
test
inc
add
stos
pop
repz
fnstsw
sub
jp
push
sti
dec
out
ret
jl
negb
sbbl
repz
sti
jae
les
inc
pusha
lahf
pop
aam
mov
jl
add
xor
movlhps
pop
ljmp
aad
inc
lcall
sarl
gs
mov
lahf
or
jae
call
mov
cs
cmp
dec
jecxz
fistps
popa
dec
push
add
outsb
sbb
gs
jae
push
cmpsl
in
xor
mov
xchg
sub
xchg
dec
or
sub
add
gs
pop
icebp
in
loope
scas
adc
hlt
cbtw
mov
mov
dec
iret
fistl
mov
lret
or
cmp
ret
dec
hlt
addr16
imul
shl
mov
into
sub
push
lds
mov
repz
aaa
add
test
loop
inc
loopne
pop
add
rcrl
and
or
lods
mov
in
push
mov
movsl
inc
mov
add
in
inc
push
xor
nop
jbe
push
bound
movsl
iret
outsl
ja
mov
xchg
push
rol
push
pop
dec
popf
cmp
xchg
imul
cmp
jnp
dec
jecxz
out
push
cs
mov
cmc
test
montmul
cmpsb
inc
js
or
pop
es
sti
xchg
popa
inc
gs
xchg
popfw
insb
cmp
cli
in
push
mov
movb
cmp
sbb
jae
mov
push
insb
xchg
xchg
ret
leave
dec
call
and
aaa
mov
mov
stos
or
imul
cmp
fwait
repnz
push
rorl
pushw
movsl
xchg
std
xor
cli
mov
sub
pop
cs
inc
fmul
pop
push
xchg
sub
shlb
mov
push
push
call
pop
inc
outsl
jb
aad
xlat
andl
pop
aaa
inc
dec
sbb
out
cmp
mov
cld
inc
jae
je
push
sbb
sbb
adc
int
out
cmp
push
rolb
mov
pop
outsl
xchg
mov
mov
enter
lahf
mov
mov
mov
icebp
mov
push
sub
xchg
icebp
outsl
mov
int3
inc
imull
pop
fwait
pop
lds
sahf
cmp
ds
sbb
jbe
aas
popa
add
outsb
xor
sbbl
and
cwtl
int3
push
inc
fldt
and
xchg
cmpsb
ss
and
mov
inc
mov
stos
cltd
sub
pop
xlat
fisubl
mov
mov
push
inc
lcall
jg
cld
sub
add
pop
imul
mov
mov
xchg
mov
sub
loope
sub
and
dec
loop
push
and
push
imul
pushf
ljmp
nop
mov
mov
out
jo
aad
mov
mov
sahf
loope
jbe
inc
push
mov
mov
add
sub
adc
scas
adc
loopne
fwait
xor
lret
mov
xchg
or
popf
add
fldt
dec
int
push
stos
movsl
cmp
fadd
das
mov
ret
into
xchg
add
inc
sub
push
mov
lret
xchg
nop
lds
sbb
sti
cmp
mov
fstpt
xchg
fs
into
jae
xchg
or
add
xchg
add
push
mov
mov
xor
das
fucomp
xlat
or
aaa
ds
add
cli
fmulp
xor
push
test
lret
in
stc
xor
popf
xchg
xchg
add
mov
test
shrb
lods
icebp
jae
add
mov
cli
and
dec
mov
adc
scas
imul
xchg
mov
pop
mov
sub
add
aaa
cltd
sub
dec
rcrl
aas
scas
ds
pusha
cmpl
jne
in
mov
adc
loope
push
inc
dec
xor
es
cmp
roll
or
fstpl
sbb
pop
xchg
insb
pop
push
mov
cmpsb
xor
outsl
fildl
mulb
mov
push
stc
aam
out
fidivl
daa
inc
ds
jp
xor
dec
fdivr
fstpl
adc
or
adc
or
pop
mov
popa
clc
jecxz
es
dec
cwtl
bound
push
xor
cmp
xrelease
sti
lods
scas
push
movsl
in
pusha
mov
sub
mov
mov
push
jo
cs
shll
fnstenv
inc
mov
or
push
std
xchg
push
repz
push
cs
cmp
orb
test
lock
and
pop
sub
daa
xor
add
es
out
mov
test
cli
testb
jno
mov
cs
mov
loope
lock
xchg
stos
jmp
or
sarb
out
mov
sti
dec
je
aam
je
push
xor
xchg
bound
cmp
lcall
inc
fildll
sarb
sbb
cltd
inc
fisubl
lock
cltd
mov
and
pusha
inc
data16
ja
or
push
sub
ds
dec
add
mov
mov
pop
sahf
loop
ds
push
mov
outsl
jnp
mov
pop
mov
stos
jecxz
jo
lds
adc
jecxz
ljmp
das
mov
sahf
call
test
scas
pop
push
cmp
inc
cld
sub
rclb
sbb
lea
int
data16
stos
inc
icebp
cltd
dec
in
lahf
add
imulb
and
in
arpl
imul
adc
push
insb
pop
mov
xor
dec
dec
test
das
or
scas
mov
addb
cmp
jecxz
xchg
add
lods
pop
cmp
pop
add
add
shll
dec
cltd
push
push
es
iret
data16
sar
jo
xor
pop
push
mov
in
mov
fisubl
adc
ss
imul
jl
or
mov
sub
sahf
or
cmp
jl
pop
subb
jno
in
call
or
cwtl
into
and
fucomi
pop
mov
std
cmc
push
mov
andb
adc
adc
aad
popf
xchg
push
mul
or
adc
add
push
xchg
data16
icebp
jo
imul
pop
and
lock
jb
pop
jl
je
sti
mov
cli
jno
pop
push
frstor
incl
sub
xor
cmp
push
sub
or
push
jno
dec
xor
push
outsl
repz
insl
test
hlt
jge
push
inc
fiaddl
jnp
mov
popa
clc
push
inc
mov
ud0
or
leave
xor
lahf
das
dec
adc
ljmp
push
ljmp
jne
pop
scas
les
sbb
and
cmp
je
icebp
pop
push
sahf
in
pusha
jp
add
mov
adc
xor
test
es
lret
js
mov
push
jno
xchg
adc
mov
fcmovnb
negl
mov
adc
jmp
lea
sbb
lahf
cmpb
lock
mov
sti
pop
dec
jecxz
sbb
xor
mov
leave
scas
ret
out
test
add
mov
xchg
in
dec
aam
jmp
cmp
or
aas
stos
je
adc
xor
add
push
fisubs
xor
imul
inc
pop
loop
bound
imul
dec
mov
stos
push
jae
xchg
scas
mov
xchg
sub
test
enter
and
mov
add
add
cmc
adc
pop
scas
fsubr
loopne
imul
mov
addr16
fstps
rorb
mov
xchg
fcompl
and
mov
xlat
and
jp
repz
xor
mov
cmc
mov
loop
call
ret
cltd
aaa
jbe
lret
addr16
jno
xchg
fistpll
into
xor
pop
cmp
stos
adcb
or
xchg
mov
inc
sbb
rorb
mov
imul
xchg
pop
mov
mov
add
les
ret
pop
inc
in
push
pop
gs
in
cmp
fdivl
rorl
lods
loopne
sarl
cmp
cmp
ljmp
je
mov
insl
adc
pop
out
mov
lock
dec
pop
mov
pop
cltd
xchg
mov
sub
xchg
clc
jae
test
jp
cmp
lret
in
inc
gs
dec
in
sub
cltd
sub
and
sarb
cmp
mov
popl
pusha
test
mov
ficoml
lcall
jb
rclb
shl
negl
negb
xor
int3
gs
loopne
icebp
scas
xchg
xchg
jmp
or
and
arpl
adc
push
or
fldl
xor
xor
iret
pop
test
jecxz
and
sti
movsb
mov
inc
inc
add
mov
pop
ljmp
push
repz
in
and
bound
les
mov
push
in
movsl
push
test
ret
hlt
adc
aam
rcll
imul
shll
mov
loope
pop
jecxz
imul
mov
cmp
fcomps
or
rolb
mov
adc
in
xchg
aam
insb
inc
sahf
push
xor
jmp
lcall
test
cmpsl
or
mov
ds
and
movsl
cmp
mov
cmp
inc
stc
movsl
jnp
mov
push
dec
sarb
pop
loop
arpl
mov
add
adc
sti
notl
or
out
xor
xchg
clc
fwait
pop
mov
jb
sahf
ja
inc
lds
inc
out
add
mov
les
inc
divb
or
out
mov
xor
xchg
loope
movsb
xchg
xorl
fstps
cmpsb
movsb
inc
and
or
bound
mov
shll
sub
fs
negl
fiaddl
shll
addr16
jne
pop
in
or
shrl
sub
and
ja
stos
test
test
or
inc
es
scas
inc
fs
jns
push
pop
dec
jmp
roll
aaa
pop
divb
ret
sbb
mov
mov
ret
sti
loopne
ficompl
lret
jne
insl
mov
jbe
xchg
das
mov
sub
nop
cmpsb
mov
fucomp
rcrl
add
fcompl
jno
push
movsl
sahf
cmp
les
movsb
ret
push
movsb
cmp
insb
arpl
pop
push
cwtl
or
jnp
pop
aas
push
and
jle
cmc
adc
mov
js,pn
fisttpl
roll
sub
xor
ja
push
fldcw
or
sub
mov
mov
ljmp
arpl
jecxz
xchg
test
dec
sbb
cmpsl
adc
addb
mov
je
ret
jecxz
fistps
ds
in
pushf
xor
xchg
ds
movb
scas
jecxz
mov
das
cmovno
andb
mov
dec
cmpsl
mov
inc
fadd
pop
cmp
popa
pop
adc
stos
aaa
push
mov
mov
jns
faddl
inc
or
loop
in
in
lcall
enter
inc
lods
ja
add
notb
mov
cld
push
lret
jae
inc
dec
xchg
inc
enter
cmpsb
std
addr16
inc
adc
pop
mov
inc
clc
jbe
ja
lds
std
fsub
push
xchg
sub
sbb
in
sbb
xor
pop
sbb
cmp
jns
lret
std
xchg
fildll
inc
inc
test
xchg
and
xor
out
inc
js
js
enter
xchg
test
into
das
lock
cmp
pop
mov
mov
add
fnstcw
les
lahf
add
cmpsb
aaa
in
pusha
movsl
dec
dec
push
xor
iret
fisttpl
int
leave
add
jo
add
sub
cli
pop
jl
and
jle
stos
pusha
cmp
idivb
in
insb
cmpsl
pusha
lds
cmp
fidivrs
pop
or
cmc
or
es
and
inc
dec
xor
insb
dec
sub
ss
rcrl
mov
push
inc
inc
in
jno
stos
sahf
push
ficoml
jmp
push
repz
test
adc
lcall
adc
stos
les
mov
adc
sti
add
arpl
xchg
sub
hlt
xchg
insl
mov
in
int3
mov
movsl
dec
mov
sbb
insl
mov
clc
outsl
mov
jg
lret
sub
dec
add
and
lret
int
inc
iret
mov
adc
push
pushf
adc
sub
inc
sbb
inc
sbb
daa
inc
push
push
or
add
leave
xor
daa
jb
test
dec
pop
scas
mov
lock
inc
xchg
scas
cli
cli
xor
daa
lods
repz
shlb
lods
mov
lahf
pop
repnz
add
sub
fsubs
fdivrs
push
insb
rcrl
jp
lret
icebp
jl
jecxz
pop
loope
orl
sub
adc
shrl
jge
in
sbb
cmp
sbb
mov
xor
sbb
mov
sub
shlb
push
dec
and
fcoms
or
push
or
cmp
add
ja
mov
jae
inc
push
mov
mov
insl
rol
jae
cmp
add
xchg
sub
jmp
rcrb
lret
cmp
out
mov
mov
repz
imul
or
rcll
xchg
inc
mov
or
mov
ffreep
lea
mov
in
into
loope
mov
jno
jnp
incb
xchg
push
pop
lds
outsb
cmp
xchg
insb
outsl
mov
scas
aad
in
sar
mov
lods
mov
xchg
or
dec
fs
cmp
test
cmpsb
xchg
inc
sbb
rolb
nop
lret
push
jno
imul
mov
add
scas
inc
aad
leave
in
test
sub
cli
stos
jb
jo
xor
aad
es
cmpsb
jb
fsubrs
lods
insl
mov
call
jb
out
xchg
pop
and
mov
push
pop
mov
sahf
and
xor
mov
mov
clc
or
or
push
push
adc
pop
jmp
rcl
mov
mov
mov
inc
int3
mov
cmpb
mov
fidivs
push
sub
xchg
sub
movl
cmp
cmp
mov
pop
stos
insb
lock
add
incb
in
notl
fcoms
lea
lahf
les
jecxz
inc
call
mov
mov
lret
imul
gs
imul
rclb
fbstp
int
aas
sub
xchg
dec
out
cmpsl
add
sarb
fs
cmp
xchg
mov
fistps
mov
mov
imul
jne
xchg
push
xchg
cmp
dec
and
bound
aad
xorb
shlb
fcoms
sub
cmpsl
xor
adc
mov
inc
push
cmp
inc
jne
cmp
ja
add
es
dec
lahf
and
inc
pop
lret
mov
jl
pop
addr16
lcall
sub
sbb
inc
push
mov
sbb
pop
lods
sbb
lea
or
adc
hlt
cmp
sbb
fadds
xchg
jecxz
out
xchg
sbb
movsb
daa
mov
or
or
mov
das
ds
push
xor
pop
testb
lahf
adc
shrl
push
add
push
sub
xor
imul
test
add
dec
cmp
bound
and
and
and
mov
xlat
addb
push
dec
out
js
fnstsw
dec
push
call
or
aas
lcall
sub
xor
imul
imul
fisttps
outsb
mov
imul
jmp
and
jmp
push
inc
sbb
mov
cmp
adc
testb
fadds
mov
xor
test
arpl
ljmp
aad
jge
ljmp
sub
cltd
mov
cmp
mov
lret
and
ljmp
jb
dec
test
cli
dec
in
push
pop
insl
andb
scas
test
xor
mov
pop
shlb
ficoms
test
mov
out
loope
rolb
fisubrl
or
enter
sti
or
rorb
adc
mov
pop
imul
jl
leave
call
inc
fcomps
addr16
loop
pusha
addb
pop
std
mov
stos
mov
dec
loope
xchg
repnz
sahf
push
xchg
sub
stc
sub
sbb
adc
idivb
loopne
jg
push
ret
lods
adc
push
out
imulb
push
rcrl
movsb
cmp
pop
mov
push
jbe
push
incb
mov
and
shrl
fucom
adc
mov
int
sbb
scas
lcall
in
pop
rcrb
loopne
aaa
pop
fbstp
shlb
pop
fisubrl
xorb
in
cmp
push
inc
push
xor
lea
rcrb
inc
adc
cld
mov
leave
fsubrp
mov
test
nop
xor
sub
call
pop
ja
les
pop
imulb
andl
mov
dec
dec
loope
jecxz
insl
cmp
pop
nop
mov
pusha
xchg
popa
jo
jns
jno
sub
jge
jl
test
enter
repz
sub
pop
call
ljmp
mov
xor
add
ss
add
rcl
mov
mov
mov
je
adc
xchg
or
jno
es
xchg
lds
sub
cmp
test
je
xor
stos
inc
iret
enter
lock
fcmovnbe
jmp
cld
stos
lcall
jl
inc
in
jae
jns
push
xchg
dec
jb,pt
frstor
pop
fdivrp
sub
sbb
insb
dec
sub
inc
or
pop
es
loopne
push
sub
mov
and
arpl
testl
icebp
sbb
mov
cmp
sbb
lods
inc
xor
les
lret
data16
sbb
add
std
outsb
fst
dec
fisttpll
dec
fsubs
das
mov
pop
mov
out
aad
lock
xlat
outsl
repz
jmp
dec
out
xchg
cwtl
mov
leave
repnz
aad
out
fwait
sahf
shll
mov
stos
sub
cmp
pop
cmc
jle
out
adc
std
cmp
push
rorl
lds
sub
sbb
dec
jecxz
es
cmpsl
mov
lret
lcall
xchg
adc
lods
xchg
inc
push
mov
loopne
cmp
leave
push
mov
mov
fimull
bound
aad
or
pop
cmp
add
fwait
adc
jp
mov
movsl
inc
push
fidivl
popa
mov
push
fldcw
inc
jae
cli
inc
test
mov
popf
cmpb
sub
cmpb
lods
cmp
pop
push
or
scas
mov
adc
add
stos
inc
push
lret
push
or
cmp
sbb
xor
or
es
jnp
dec
add
adc
popf
shrl
pop
jbe
mov
push
xchg
cld
xor
mov
into
mov
sahf
rorb
lock
ss
lods
xchg
pop
sub
call
adcl
outsl
xor
test
popf
test
jne
xorl
addr16
and
repnz
pop
push
mov
int3
mov
inc
imulb
fimuls
and
xchg
add
scas
or
arpl
mov
xchg
add
fimuls
add
mov
xchg
cmpsl
cld
mov
jnp
xor
mov
gs
lods
xchg
xchg
push
jae
dec
and
js
int3
fdivr
jmp
adc
jno
fsubl
dec
arpl
mov
out
sub
ja
xor
inc
fwait
inc
sub
mov
dec
push
jle
cmc
jb
or
mov
or
mov
shlb
xchg
add
divb
push
cmpl
stos
and
imul
fcompl
ds
imulb
pop
imul
mov
subl
or
addl
enter
jns
movsl
stos
jb
lahf
jne
in
sbb
push
mov
add
outsl
jg
fwait
cld
movsb
adc
xchg
cltd
and
aas
outsb
add
scas
push
adc
insl
rcrl
pop
test
sbb
push
or
mov
or
cmp
cltd
hlt
mov
aam
cmp
mov
shrl
adc
test
les
xchg
or
pushf
mov
inc
lret
xor
adc
cmp
pop
jl
cmp
mov
stc
or
cmp
mov
mov
ret
inc
cld
shlb
push
out
mov
mov
sub
xchg
int3
cmp
scas
mov
popf
arpl
lods
int
xchg
das
scas
add
fnstcw
and
das
shl
sbb
add
cmp
pop
jp
or
jl
mov
enter
iret
ret
xor
dec
or
aad
mov
push
add
pop
enter
jne
cwtl
push
stos
inc
pop
into
jb
jnp
lods
insb
in
mov
out
roll
add
cmp
int
pusha
and
js
call
movsb
add
pop
xchg
mov
pop
int
or
cmp
xchg
sub
mov
out
leave
and
lcall
push
dec
jge
test
movsl
push
sti
add
xchg
js
dec
dec
pop
dec
adc
mov
jb
jae
xchg
add
xchg
push
xorl
test
hlt
push
addr16
or
jno
and
adc
push
repz
xor
mov
in
test
andb
xchg
xor
mov
gs
imul
dec
jno
into
fdiv
xchg
xchg
pusha
xor
out
inc
jae
mov
fs
bound
lods
mov
sub
jbe
inc
fmull
cwtl
push
jb
in
jbe
out
lds
clc
sarl
and
movsl
aas
or
test
add
imul
xchg
loop
repz
xor
pop
xchg
add
incl
cmpsb
test
mov
jo
xchg
jne
mov
jmp
movhps
outsl
jmp
add
and
push
leave
and
mov
sti
cmp
lret
sub
mov
adc
lret
xlat
sbb
add
jno
xor
dec
xchg
jns
add
lea
scas
jae
loope
outsl
push
int3
push
jmp
addr16
xor
mov
push
repnz
lods
pop
imul
fildl
mov
int
mov
fmull
mov
scas
inc
notb
cmp
sbb
gs
mov
subl
stc
lods
mov
sbb
leave
lods
inc
push
adc
repnz
int
test
in
push
fwait
mov
jns
inc
test
cwtl
pop
push
cmp
or
pop
mov
mov
cmp
fimull
adc
ss
add
or
push
cmp
mov
cmp
pop
ds
pop
jecxz
stc
fdivrs
sbb
mov
cld
aam
out
xchg
jne
mov
xor
push
movsb
mov
in
cmp
sub
cmp
jmp
or
lds
push
cltd
pusha
test
ficoml
xor
fldl
sbb
lcall
jnp
pop
sub
mov
fsubp
mov
mov
push
dec
xor
daa
cmp
fcoms
scas
cmp
jo
jae
lret
cli
lods
or
cmp
addl
fxch
cltd
add
sub
or
and
or
adc
xchg
jo
cli
lcall
adc
mov
inc
push
clc
push
inc
xor
int3
incb
pop
jae
in
ficompl
dec
out
mov
xchg
jmp
fwait
daa
je
shl
iret
cmp
xchg
adc
sub
shll
out
cmpb
adc
sub
xlat
scas
push
test
stc
popf
mov
jmp
into
loope
clc
xchg
xchg
loopne
ljmp
ret
dec
and
aad
test
jg
cmp
inc
sub
testl
mov
mov
loope
xor
rorb
out
mov
mov
dec
add
xchg
xor
xchg
add
xor
fstps
or
adc
jmp
lcall
and
orl
sub
sub
loopne
loopne
dec
adc
gs
stc
xchg
pop
adc
inc
mov
repz
fidivl
fstp
xchg
push
cmp
enter
push
pop
mov
in
pop
jge
insl
sbb
sbb
sub
dec
adc
mov
fcmovbe
insb
or
outsl
jnp
sub
cmp
mov
lds
pusha
xor
les
call
shrl
xor
xchg
pusha
cmp
fs
mov
adc
mov
clc
or
cwtl
sti
fs
cld
inc
loopne
sbbb
push
push
pop
cmp
sub
pop
ret
pop
lcall
inc
ss
les
xchg
inc
fistpl
jne
mov
cs
add
mov
and
jmp
jno
mov
jge
jle
lock
inc
pop
lock
xor
jge
ja
mov
rorb
pop
pop
xor
stos
pushf
ds
int3
pushl
rorl
mov
ja
ja
push
rclb
imul
imul
adc
repz
cmp
adc
mov
shl
aad
adc
inc
aam
in
mov
lock
mov
cmp
insb
or
inc
dec
data16
sbb
mov
out
push
inc
pushf
iret
sub
add
into
std
lods
aad
ficomps
test
aad
popf
and
push
popf
dec
xchg
js
out
jmp
inc
pop
loope
shlb
push
pop
mov
xchg
aad
test
cs
ja
add
xor
inc
aam
cmp
aaa
mov
jbe
and
push
pushf
clc
adc
cwtl
dec
leave
ljmp
pop
stc
mov
ljmp
mov
jnp
out
dec
mov
fs
arpl
addr16
lcall
jno
ja
imul
mov
mov
ja
mov
cmp
pop
cmc
cmp
mov
or
into
mov
xlat
push
sub
push
loop
push
test
pop
adc
pop
cwtl
mov
cli
shrl
pop
call
jmp
ss
push
cltd
sti
subl
jb
call
jp
dec
movsb
insl
pop
stc
and
or
scas
add
sti
push
adc
shrb
incl
inc
dec
out
inc
adc
test
fwait
bound
sbb
sbb
cmpsl
pushf
gs
loope
adc
js
xchg
icebp
sub
js
call
mov
dec
jle
cmp
loope
in
shrl
push
lea
outsb
add
sbb
outsl
push
jno
lock
and
sbb
xchg
sub
cmp
out
int
sbb
dec
add
xchg
inc
jb
lretw
loopne
push
xchg
scas
cmp
jne
cmp
jnp
pop
aas
ret
cld
stos
add
mov
daa
mov
xchg
cli
repnz
push
adc
inc
cltd
enter
xor
push
mov
fistpll
and
xlat
call
lret
pop
sub
add
and
decb
cmp
dec
xor
aas
xchg
jno
fnsave
addr16
add
xchg
test
xchg
lcall
fsubs
cmp
add
or
movsl
jae
mov
rcr
enter
js
lods
daa
lds
je
fbld
sbbl
iret
inc
faddp
test
outsl
push
lahf
icebp
sti
xchg
jecxz
jl
push
out
mov
sub
adc
adc
idivb
arpl
fs
xchg
fistpl
ret
lods
fsub
cld
xchg
push
decb
cmpsl
bound
xchg
rorl
mov
pop
shrb
arpl
fsubrs
dec
hlt
cmp
jecxz
imul
xor
andnps
pop
fcoml
sub
pushf
loope
int
repz
mov
loop
xchg
fistpll
aam
movsb
gs
shlb
adc
jb
out
adcl
jno
js
or
lods
jno
cmc
push
jns
lock
xchg
call
bound
aas
imul
test
rolb
xor
xchg
xchg
or
sbb
aad
and
popf
xor
enter
pop
rorl
mov
cmp
sbb
ja
mov
inc
and
xchg
lods
mov
mov
negl
push
stos
mov
sti
shll
xchg
rol
insb
mul
xlat
adcb
or
ss
jl
rolb
loope
pop
sbb
add
rclb
int
add
and
and
xor
xchg
or
mov
addb
jp
xor
and
andb
xor
icebp
pop
add
repnz
xorl
ljmp
lahf
and
xchg
mov
movsb
jl
sbb
lock
hlt
out
xchg
and
jnp
out
xchg
or
add
scas
adcl
subb
or
dec
xchg
aas
pop
add
imulb
mov
jo
add
jno
insb
add
inc
and
test
es
jle
jo
ja,pn
sub
insl
push
mov
and
aaa
xchg
sbb
ja
movsb
filds
sbb
cld
cmc
daa
fsubs
sbb
xchg
sbb
arpl
inc
sbb
cmp
fs
and
shl
ret
mov
cmpsb
sbb
pop
mov
mov
aam
popa
xor
jb
or
stos
imul
push
mov
pop
out
out
cmp
fbld
out
test
lods
outsb
daa
adc
out
add
fcom
sub
pop
test
xor
dec
cld
aas
leave
dec
insb
add
jp
pushf
out
ss
sbb
test
xchg
jle
mov
mov
xchg
aad
popl
out
sti
jecxz
adc
repnz
cmp
push
pop
das
cmp
mov
lret
cs
stos
scas
in
ja
stc
push
test
sbb
xchg
jge
xlat
xchg
out
push
mov
add
mov
inc
dec
add
adc
inc
ss
subl
mov
inc
movsb
aaa
add
test
inc
out
test
jbe
out
loopne
repz
insl
add
xor
mov
loopne
push
lea
push
xor
jp
imul
and
add
inc
pop
jp
lret
sbb
jg
push
mov
mov
movsb
push
jnp
flds
sub
mov
fnsave
bound
cmc
shrb
mov
xchg
jp
inc
loopne
sarb
jo
lret
mov
adc
mov
inc
dec
mov
jp
ja
rcll
adc
jge
std
popa
sub
aaa
je
jmp
in
mov
test
inc
data16
mov
cwtl
lods
mov
loope
add
lods
fstps
xor
js
test
jge
out
jae
movsl
in
mov
mov
psadbw
push
cld
push
add
cld
in
sub
mov
cmc
pop
scas
mov
mov
push
mov
dec
cmp
mov
pop
aaa
loope
jne
push
or
sbb
enter
lcall
hlt
call
xchg
mov
aas
xchg
std
test
enter
sahf
mov
aas
out
sbb
jo
loop
mov
insl
jbe
call
push
cli
popa
out
push
pop
lcall
int3
outsb
mov
jecxz
pop
ja
mov
insb
jle
outsb
add
pop
orl
add
das
or
sub
mov
or
hlt
imul
bound
inc
and
mov
incl
cmc
xor
aaa
ret
sbb
loope
in
leave
pusha
pop
mov
cld
outsb
shld
shrl
pop
add
pop
xor
push
mov
inc
xchg
es
scas
push
wbinvd
ljmp
lods
xchg
sbb
mov
cmp
shl
dec
mov
or
xchg
pop
lods
mov
mov
lods
and
ja
push
out
ss
rcr
jmp
daa
jns
mov
shr
push
fwait
lods
or
mov
sbb
jae
mov
cmp
pusha
cs
lock
filds
xchg
xchg
xor
mov
mov
pushf
iret
lods
dec
add
sbb
adc
sbb
mov
adc
mov
pop
shrl
shrb
mov
pusha
aas
mov
das
imul
add
dec
mov
ja
faddl
sbbb
or
insb
jae
dec
test
stc
push
imul
xchg
pop
adc
std
jb
dec
pop
xchg
dec
jecxz
add
mov
pop
push
mov
sbb
mov
pop
lret
dec
fucomp
aaa
gs
addr16
pop
rorl
lret
lret
mov
shr
pop
aam
faddl
sub
xor
sbb
xchg
fwait
aam
inc
loop
inc
pop
je
and
mov
pushf
mov
xchg
jno
mov
imul
lea
pop
mov
fsubrl
inc
test
sbb
sti
xor
dec
bound
sub
xchg
ret
jo
mov
fisubrs
std
lcall
enter
mov
adc
mov
pop
insb
pop
mov
and
rcll
cwtl
pop
test
rcrl
fwait
in
inc
idiv
push
sub
hlt
fldenv
stc
sbb
cmpsb
ss
call
loopne
or
scas
into
xchg
pop
in
nop
pop
cmp
shrb
dec
mov
insl
stos
mov
adc
and
popf
cli
push
shl
aaa
pop
fcoms
sub
jp
stos
mov
add
jo
mov
dec
sbb
jnp
loope
js
call
xchg
mov
les
mov
xchg
jl
std
lods
xchg
movsb
pushf
cli
pushf
xor
rcrb
faddp
jp
lods
stos
mov
stc
sbb
sub
cwtl
push
cwtl
gs
sbb
inc
pop
mov
aaa
test
push
add
shl
cli
sub
addr16
jns
aad
jmp
mov
dec
ret
adc
test
addr16
pop
mov
pop
mov
mov
mov
jo
cli
pop
out
test
mov
jbe
mov
add
test
and
and
in
pop
adc
ret
jnp
or
pop
cmp
and
arpl
sub
mov
js
dec
mov
dec
mov
jge
mov
xor
mov
fimuls
mov
or
daa
xchg
je
push
push
inc
lods
test
lods
and
mov
push
xchg
add
mov
sub
sub
xor
lret
mov
pushf
dec
push
cmpsl
imul
repz
lods
jg
xchg
lock
pop
sub
lret
enter
mov
lahf
inc
sbb
into
insl
xor
bound
sbb
adc
xor
lahf
popa
jge
movsb
mov
mov
push
sub
or
push
pop
sub
aam
cmp
pop
rcll
shr
push
push
sub
iret
fucomp
pushl
or
cld
sub
sub
aaa
lock
mov
and
inc
into
daa
jno
inc
aas
int
jbe
mov
jbe
xchg
or
or
fs
icebp
mov
jo
mov
dec
adc
out
sahf
add
mov
lahf
push
scas
inc
cmc
stos
test
pop
inc
fisubl
push
push
sbb
mov
mov
cmpsb
ret
popa
add
push
repnz
xchg
mov
and
insl
test
data16
jp
out
mov
int
xchg
xlat
ror
data16
test
std
je
ljmp
int3
inc
fimuls
int
and
push
mov
sbb
pop
push
lods
roll
pop
xor
hlt
xor
iret
mov
and
std
ja
test
sub
insb
push
ret
push
or
sbb
push
push
lahf
outsl
rol
nop
bts
push
popf
add
inc
mov
nop
mov
fidivs
je
pop
push
push
adcb
mov
jmp
add
loope
xor
or
inc
mov
stc
test
pop
jmp
mov
lret
out
daa
sbb
mov
mov
jns
mov
or
sti
aam
and
pop
cmp
into
hlt
scas
mov
mov
hlt
jle
xor
pop
out
jae
pop
cld
mul
fldcw
cmp
add
push
push
add
jmp
aaa
mov
jb
scas
inc
fnstenv
and
int
inc
and
je
fdiv
push
mov
das
rcrl
jle
stos
or
mov
cmp
mov
daa
xchg
loope
ret
add
mov
testb
popf
ror
loope
rcll
cwtl
test
push
pop
sub
xchg
add
xor
mov
cmpb
sbb
shrb
fisubrs
mov
jno
jno
leave
fbld
and
mov
inc
mov
pop
cltd
sub
pop
int3
pop
add
es
pop
xchg
jg
les
scas
ljmp
mov
push
push
lea
lahf
mov
inc
int3
push
push
and
idivb
sahf
or
xchg
hlt
ret
xchg
add
cmp
in
movsb
rep
fisubrl
adc
sub
fidivrs
mov
pop
movsl
stos
pusha
neg
jp
and
mov
pop
mov
fsubrl
dec
adcl
or
gs
dec
mov
loope
das
sahf
and
xchg
lods
pop
push
cmp
add
lcall
pop
repnz
fstl
pop
movsb
adc
jl
out
imul
enter
into
pop
repz
out
and
shll
add
daa
cmovbe
pop
gs
cltd
push
test
lods
jp
lret
sub
jle
and
dec
pop
repnz
mov
jns
out
pop
cmc
in
in
pop
out
jge
lods
idivl
or
mov
scas
mov
rcll
mov
xchg
xchg
adc
mov
aas
xabort
push
mov
cmc
mov
into
jo
aas
outsl
adc
into
outsl
dec
xchg
nop
push
push
dec
cmp
imul
xor
loop
dec
sbb
stc
je
mov
addr16
jge
mov
repnz
xchg
pop
into
lds
mov
call
mov
out
mov
push
or
pop
rorb
jnp
xor
pop
mov
das
xor
mov
sarl
repnz
mov
fistps
mov
arpl
xor
shlb
xchg
in
es
pop
icebp
sbb
mov
test
inc
jbe
jne
mov
jle
or
or
rcrl
mov
popf
bound
outsl
xchg
adc
mov
jbe
ljmp
jne
sti
cmpsb
loope
in
test
test
fisubrs
push
push
cmp
out
add
scas
loope
ja
adc
sbb
lock
and
adc
lret
int3
arpl
fists
scas
icebp
test
call
cmp
pop
ljmp
push
rclb
jbe
or
ficoms
dec
loop
mov
psrlq
pop
lock
xchg
outsb
inc
mov
jne
imul
mov
clc
mov
rorb
test
loopne
call
jb
mov
push
push
adc
adcb
bound
pop
sub
leave
xchg
dec
lea
dec
push
repz
pop
add
xchg
adc
loopne
and
testl
ja
or
inc
sbb
xchg
lahf
shll
push
cld
or
jle
sbb
xor
shr
ret
lods
add
lock
lods
mov
sub
scas
test
sbb
gs
mov
fidivrs
nop
push
xor
jg
or
cmp
jo
inc
hlt
sbb
stc
test
in
jl
pop
in
or
jg
fs
rorb
insb
sub
insl
loop
arpl
jp
inc
outsl
mov
jg
inc
mov
mov
cltd
and
mov
js
mov
cwtl
push
sti
leave
xchg
dec
cmpsl
add
addl
dec
in
jp
call
or
shlb
mov
cs
in
adc
dec
leave
mov
pop
dec
cs
cs
mov
mov
negb
cwtl
cs
popa
xor
popf
xchg
adc
aad
ja
fs
js
movsl
pop
jle
aad
out
cld
sub
xor
sub
and
lahf
jmp
subl
into
lahf
xor
sbb
lahf
clc
add
jnp
mov
push
pop
pop
xor
add
ret
shl
shrl
add
js
pop
xor
fisubrs
leave
ss
js
or
push
test
xchg
adc
mov
mov
adc
iret
ja
xor
pop
cltd
stos
xor
xor
xor
mov
inc
shll
subl
adc
inc
ret
ret
insb
add
js
repz
icebp
sub
cmc
jbe
xchg
ja
or
push
pop
jg
dec
mov
xor
dec
leave
mov
fisttps
cmpsb
sub
xchg
push
jle
stos
and
inc
das
ret
xor
cmp
cmc
mov
xchg
cld
xor
inc
cmpps
icebp
push
mov
sbbb
push
mov
dec
cwtl
mov
out
scas
inc
xor
lock
xor
scas
and
lods
inc
mov
lods
test
xlat
xchg
lds
enter
sbb
jno
add
cmp
push
sub
ret
jae
inc
pusha
loope
push
xchg
dec
enter
out
and
mov
pop
xlat
mov
icebp
mov
mov
call
lahf
enter
pop
test
inc
fisubs
stc
push
inc
aaa
mov
jns
sbb
test
leave
cmp
leave
pop
and
adc
push
stos
data16
and
sahf
xchg
inc
popa
xchg
fwait
insl
scas
mov
jb
scas
adc
mov
scas
pop
sub
in
mov
test
lods
ret
mov
call
inc
les
scas
loope
mov
jmp
pop
outsb
xchg
or
stos
cmpsl
mov
mov
test
out
rolb
jb
pop
add
lret
pop
cmp
imul
mov
int
gs
fidivs
pop
inc
push
mov
dec
roll
cmc
cmp
es
add
xor
stc
adc
jp
shl
cmp
lock
fucomip
andb
and
xor
in
add
pop
and
mov
loopne
jne
dec
mov
repz
in
inc
push
jbe
jns
cli
scas
pop
das
push
cmpsl
pop
mov
and
frstor
out
push
mov
sbb
cmp
add
out
adc
cwtl
mov
sti
xor
mov
xchg
insb
ror
shrl
mov
std
xchg
insb
cmpsb
xor
lcall
imul
ret
jge
jae
std
pop
mov
nop
sbb
lret
ret
jo
hlt
test
fwait
push
dec
pop
sahf
andb
xchg
mov
insb
and
inc
mov
jns
push
xchg
xlat
imull
idiv
add
cmpsb
push
mov
out
lcall
call
push
pop
cmp
mov
and
jp
in
add
int3
adc
fisubrs
sahf
hlt
lahf
aas
push
rorb
sbb
fld
jno
lret
les
cmpsb
mov
sahf
jmp
out
sub
lds
hlt
and
lahf
mov
mov
int
push
cld
mov
imul
loope
xchg
repnz
scas
ljmp
xchg
aaa
xchg
jo
or
jo
mov
div
mov
in
adc
cmp
xchg
scas
ret
mov
mov
dec
cmp
push
push
movsb
jecxz
shlb
push
les
cmp
jo
shll
jae
sub
push
scas
xor
add
stc
sub
push
cwtl
fmul
bnd
std
scas
add
pop
xchg
mov
add
mov
filds
inc
dec
and
movsl
adc
jae
sbb
ja
and
test
adc
pop
inc
andb
sub
movsb
icebp
fnstenv
jo
adc
pushf
shlb
mov
inc
clc
adc
out
stc
adc
js
icebp
ds
mov
lea
iret
xchg
stos
jmp
xchg
push
dec
or
push
imul
lds
int3
and
push
in
mov
sbb
lods
cmp
pop
ds
fidivl
lret
movsl
lods
js
shlb
lret
bound
mov
fs
call
stos
inc
ds
adc
jge
add
add
mov
mov
fcoms
or
lahf
ss
shll
push
mov
adc
jne
xor
mov
nop
jne
jns
fiadds
ljmp
jno
imulb
ss
mov
andl
clc
mov
test
mov
sbb
ret
sbb
or
psrad
pop
xchg
mov
dec
xchg
add
sbb
jns
ret
jb
hlt
jo
in
push
adc
inc
inc
xor
cmpsb
xchg
sbb
orb
jmp
xchg
test
int3
xor
data16
arpl
outsb
push
dec
int3
jae
adc
std
inc
in
fnstenv
test
in
add
and
adc
cmp
testl
pop
testl
out
aad
pop
test
dec
hlt
jg
test
sbb
pop
fwait
push
and
jns
loope
sbb
aam
pop
sub
mov
pop
aam
adc
lds
xorl
mov
test
popf
addl
fucomip
xlat
dec
out
shlb
dec
pushf
and
in
shlb
sbb
inc
mov
seta
mov
roll
inc
jl
hlt
mov
push
outsl
push
jle
push
mov
push
stc
sahf
add
sub
cli
pop
ljmp
mov
cwtl
xchg
mov
test
add
aam
pop
or
mov
add
bound
fnstenv
test
dec
inc
negl
mov
or
xor
push
insb
repnz
fwait
and
and
lahf
js
mov
and
mov
inc
or
mov
mov
mov
pop
push
push
add
test
nop
test
mov
dec
xor
mov
and
inc
jae
mov
sbb
movsb
nop
pop
or
cmp
jle
aam
hlt
cmp
imul
cmpsl
fdivr
stos
and
xchg
in
iret
ret
or
insl
data16
pop
dec
mov
xchg
jg
ficomps
adc
repnz
jl
jno
sub
jl
icebp
pop
repnz
les
add
out
adc
cltd
in
pop
ret
xchg
mov
xor
sbb
bnd
xchg
dec
adc
loope
mov
pop
lock
mov
cmpsb
out
cli
xchg
push
xor
mov
repnz
aad
cmp
adc
mov
pop
out
das
mov
cmp
lods
incb
sub
push
lock
mov
adc
mov
or
xchg
rclb
add
enter
mov
inc
and
loopne
xchg
je
cld
mov
or
stc
xchg
shlb
add
aad
rcrb
int
add
enter
std
mov
test
iret
ficompl
test
outsl
lret
in
leave
xchg
sti
sbb
outsl
mov
in
imulb
mov
mov
cmp
push
mov
mov
and
push
inc
call
out
ja
addr16
scas
mov
out
testb
idivl
lret
gs
inc
loope
pop
sbb
pop
fidivs
adc
fstl
mov
pcmpgtw
nop
data16
mov
and
or
mov
das
mov
adc
ss
mov
mov
jae
xlat
push
jmp
dec
cli
push
popf
imul
insb
fildl
dec
or
clc
call
jecxz
xor
subb
movsl
loopne
or
mov
push
mov
mov
push
repnz
pop
sbb
ret
fmul
add
or
fwait
dec
cmp
repnz
loop
loope
and
fwait
mov
push
rcll
popf
ficompl
js
test
sbb
aas
push
rcl
add
fmull
aaa
ficompl
sbb
repz
shll
and
and
js
imul
xlat
cmp
mov
mov
pop
loopne
add
outsb
jbe
jb
inc
push
cli
ret
test
mov
leave
xor
fwait
outsb
cmp
jl
sub
xor
test
ja
xor
in
xchg
push
xchg
in
arpl
in
aad
cmp
mov
mov
aas
xchg
sub
ja
xchg
sub
mov
in
test
mov
mov
test
mov
push
and
lea
scas
xor
mov
daa
push
xor
mov
push
adc
sub
mov
ficomps
arpl
sbb
fnstsw
addr16
je,pt
mov
sbb
scas
ljmp
inc
mov
scas
jg
pop
pop
and
loop
int
xor
pop
popf
cmp
fwait
lods
lds
cmpsl
loopne
push
add
and
mov
add
aaa
int
cmp
push
pop
mov
int
daa
mov
ja
movsl
inc
mov
andl
lea
push
out
cmp
or
xlat
push
scas
stos
mov
mov
inc
out
fadds
push
sarl
xchg
leave
cmp
pop
push
bound
push
cltd
mov
test
popf
pop
pop
xlat
dec
jns
in
imul
push
shl
pop
mov
daa
fsubrl
shlb
mov
rolb
cli
adc
push
es
push
jno
add
push
mov
xor
or
adc
sub
fdivl
or
js
mov
cmpsl
jmp
sub
pop
pop
movsb
add
and
std
fisubs
xchg
xor
movsl
in
scas
mov
vmovss
push
sbb
stos
shll
test
xchg
push
in
addb
mov
es
mov
clc
mov
push
loopne
std
ror
in
outsl
notl
sbb
push
lds
or
mov
mov
hlt
jecxz
movsl
cmp
add
cmp
fucomip
sub
out
popf
push
in
iret
in
scas
xor
push
fs
adc
xor
mov
pushf
pop
xlat
fwait
add
leave
sahf
jns
in
lahf
xchg
mov
shll
lret
jb
and
jmp
imul
lahf
mov
ja
sub
jae
sbb
push
enter
or
std
pop
and
and
les
out
into
xchg
xchg
test
sub
lods
push
or
shll
fstl
pop
repz
daa
jns
sbb
js
cld
sbbl
push
jbe
call
shlb
push
pop
movsl
and
sbb
mov
jnp
and
jp
es
aaa
xlat
lods
inc
or
push
fisttpl
dec
pop
inc
mov
xchg
cs
and
xor
ljmp
sub
roll
scas
adc
pop
sahf
push
sub
pop
sub
sbb
ret
pop
sbb
ret
pop
mov
mov
mov
jbe
sbb
je
push
inc
orb
clc
testl
dec
dec
push
decl
mov
out
and
cltd
dec
xchg
sbb
insl
mov
jnp
loopne
mov
xchg
mov
shll
fwait
into
xchg
icebp
arpl
inc
dec
popf
sti
add
lret
inc
bound
dec
test
cmp
jp
arpl
inc
add
cmpsl
inc
movsl
pop
cli
repz
fbld
pop
jae
xor
shl
repnz
das
jo
and
loope
mov
dec
dec
sahf
inc
fisubl
sbb
xchg
and
adc
adc
scas
stos
push
bnd
notb
and
aad
mov
insl
icebp
pop
lcall
and
gs
jmp
inc
xchg
fbstp
jmp
in
sbbl
arpl
jg
and
cwtl
lds
xchg
xlat
or
dec
in
xchg
mov
mov
sahf
xor
jmp
repnz
cs
xor
dec
icebp
cmp
sbb
jno
mov
jg
lds
xor
lahf
or
or
xrelease
jmp
xchg
add
cmc
push
es
sub
jge
into
dec
xor
iret
lret
add
lcall
and
or
sub
xchg
jb
scas
add
mov
dec
in
push
xchg
dec
push
scas
mov
into
adc
mov
push
pop
adc
cltd
push
pmaxsw
stos
push
or
addr16
mov
shrl
cmp
stc
pop
popa
fcoml
inc
frstor
ja
je
jbe
jl
inc
sub
js
test
lret
ror
sub
xchg
dec
std
ret
shll
mov
jmp
addr16
inc
xlat
dec
dec
mov
addl
fcoml
adc
inc
jno
cmp
loope,pn
sub
rolb
sub
inc
pop
dec
clc
mov
add
cmp
jbe
add
iret
fnstcw
mov
pop
add
push
repnz
sbb
and
mov
or
cmp
mov
in
xchg
lods
sarb
bound
dec
and
xor
add
jg
pop
pop
xchg
push
mov
pop
jl
sbb
sbbb
aas
and
push
pop
into
mov
lods
bound
shl
call
cmp
sub
inc
lea
fisubrs
push
call
pop
aas
lret
jnp
cmp
pop
out
mov
cwtl
dec
pop
jnp
loopne
testb
mov
sahf
hlt
std
cmc
inc
xlat
adc
lea
jbe
cmc
push
mov
pushl
pop
jecxz
or
repnz
xchg
loope
pop
or
mov
adc
in
mov
fs
sbb
out
sbb
aas
dec
push
popa
and
enter
fstp
inc
fistl
push
movsl
fstpt
loope
ret
jle
and
sbb
aam
sahf
cmp
push
pusha
fidivs
mov
dec
fnstsw
xchg
dec
in
pop
sbb
divb
sub
mov
fstps
adc
out
push
loope
shrb
add
sbb
mov
mov
cmpsb
aaa
fucomip
push
repz
cltd
es
sbb
incb
and
mov
dec
or
inc
xlat
outsb
dec
sub
cmp
pushf
test
xor
loope
data16
xchg
pop
rcl
outsb
outsb
lahf
sub
mov
subb
dec
jb
lcall
and
aad
mov
sbbl
cld
and
xchg
xchg
mov
dec
mov
adc
jle
outsl
pop
dec
cmp
pushf
jp
fsubs
inc
xchg
scas
inc
enter
inc
insb
cmpsl
shrl
or
sub
insb
outsb
out
jb
pop
or
inc
cmp
mov
jbe
adc
dec
pop
ja
and
sbb
jo
aad
lret
mov
push
jae
adc
roll
dec
fistpll
cmpsl
addl
flds
adc
shl
mov
xchg
push
outsb
addl
loopne
je
movsb
rorb
adc
pcmpeqw
pop
fdivrl
fistpll
jp
aaa
dec
mov
ficoms
cltd
or
iret
push
jmp
jg,pt
push
mov
testb
pop
into
gs
dec
ss
in
mov
sbb
sahf
mov
cmpsb
cmp
add
ficomps
lods
mov
push
sar
mov
dec
cwtl
sbb
fcmovb
lret
pop
jne
push
mov
sbb
in
pop
inc
fisubrs
incl
mov
sub
xlat
addr16
or
lods
jge
int
loope
cmpsl
nop
fadds
movsb
jp
scas
push
cwtl
fs
lahf
out
mov
and
mov
jecxz
xchg
mov
jns
addb
gs
jne
lret
xchg
pop
je
inc
adc
lcall
repnz
jp
xchg
lret
mov
lds
push
test
and
cmpsb
push
push
jae
sbb
mov
pop
cmp
sub
out
or
cmpsb
mov
push
aaa
xchg
adc
pop
loopne
xor
inc
fnstcw
into
icebp
push
pusha
clc
test
inc
push
jg
rep
xchg
xor
test
inc
dec
pop
jne
scas
shll
mov
aam
icebp
mov
and
minps
add
stos
inc
rcrl
ja
xor
int3
std
push
int
pop
adc
cmp
and
dec
pushf
jo
into
imul
fiadds
ja
pop
jmp
movsb
fldenv
ljmp
push
in
xor
incl
aam
mov
arpl
and
pop
and
push
jno
insb
filds
push
sbb
mov
fimull
loope
divb
icebp
iret
cmpsl
mov
idivb
add
sbb
outsb
outsb
pushf
lea
push
imul
mov
pop
xchg
lods
xchg
add
shl
sahf
mov
add
jmp
popf
pushf
jo
cmpsl
inc
pusha
fld
imull
jae
lret
rorl
or
mov
pop
push
push
inc
out
mov
daa
in
std
and
addb
sahf
fistps
xchg
jbe
pusha
rcrl
movsl
repnz
sbb
push
mov
cmp
inc
add
mov
in
adc
int3
gs
xor
pop
pop
shll
add
dec
inc
loopne
sahf
cmc
push
cmp
ljmp
cltd
sub
ja
adc
xor
insb
incl
ljmp
inc
in
xchg
push
mov
jns
rcll
adc
sbbb
cltd
dec
clc
aaa
sahf
imul
ljmp
stos
pusha
cmp
jns
sahf
mov
fcomi
mov
aaa
stc
or
insb
add
pop
dec
loop
outsl
jae
push
mov
negl
inc
fmull
sub
jns
xchg
pop
movsl
cli
pop
mov
ficoml
insl
cmp
cmp
dec
testb
cmp
lods
mov
xor
sub
pusha
orl
push
test
mov
xor
mov
icebp
jno
xchg
leave
das
pushf
xlat
orl
sbb
xchg
jmp
movsl
dec
into
push
xchg
cmp
out
xchg
sub
pop
in
adc
pop
mov
repnz
je
clc
shrb
inc
jge
outsb
scas
daa
popa
pop
or
xchg
mov
push
mov
cmp
or
mov
shrl
lods
es
jmp
pop
sbb
dec
inc
addr16
sub
and
push
insl
mov
jno
nop
fs
aad
mov
mov
adc
inc
in
je
negl
jns
adc
outsl
sbb
jno
xor
in
fucomip
sbb
pop
xor
dec
jmp
rorl
and
dec
push
cmp
out
cltd
xchg
cmpsb
cmp
cmpsl
push
out
test
mov
sbb
cmpb
mov
xchg
jl
pop
or
out
repnz
in
xchg
imul
aam
xchg
jl
enter
aas
ja
popa
mov
pop
or
dec
mov
xchg
pop
jp
stos
mov
adc
jecxz
imul
cld
mov
pop
loope
dec
and
outsl
stc
call
lret
popa
sub
call
jmp
jns
cmp
inc
xchg
push
cmp
push
sbb
pop
shlb
cld
in
enter
insb
jmp
mov
bswap
fidivs
out
mov
int
dec
jg
andb
in
in
lds
dec
or
inc
or
icebp
je
push
and
push
inc
jae
cld
outsl
arpl
mov
adc
call
inc
inc
repz
ja
aam
dec
push
lcall
sbb
pop
cmpb
into
ficoml
cld
fisubs
movsb
lret
das
cmp
out
xlat
push
cmc
cli
add
iret
add
mov
je
lods
lret
mov
out
and
mov
sbb
or
out
dec
pop
and
pop
push
jmp
and
shr
pop
lds
add
scas
mov
lcall
sbb
enter
jnp
arpl
pop
pop
cmp
icebp
jns
and
and
je
rcpps
push
loop
sbb
push
insl
out
push
xchg
inc
stos
adc
stc
and
xor
mov
roll
or
or
movsl
push
jb
sbb
adc
mov
ja
sbbl
mov
cld
outsl
js
mov
loop
movsb
push
add
adc
jne
fbld
sbbl
mov
push
mov
inc
dec
ret
pop
jge
aam
xchg
sahf
loopne
shlb
call
xor
sub
xchg
hlt
mov
sti
xor
sub
hlt
dec
xchg
inc
add
push
push
sub
bound
hlt
push
repnz
jecxz
mov
push
movsl
mov
out
mov
adc
arpl
xor
and
dec
mov
dec
inc
push
gs
aas
adc
sbb
jb
jg
mov
fsts
mov
and
push
test
cmp
push
lock
jmp
inc
jns
mov
push
arpl
xchg
test
ljmp
or
mov
lcall
add
cmp
out
push
sbb
cmp
std
mov
out
in
push
sbb
mov
popf
jb
pop
pop
fiaddl
das
aad
ja
test
outsl
loop
js
inc
data16
pop
cmpsb
mov
fisubrs
call
xchg
fisubl
push
xchg
inc
clc
or
push
std
popl
je
in
test
pop
imul
sar
sbb
xchg
fnsave
jecxz
push
lret
adc
mov
imul
pop
lods
sarl
or
and
or
outsl
jns
decl
jo
enter
dec
in
pop
xchg
inc
scas
inc
fcmovnu
fcomps
rorl
sti
pusha
fidivs
jno
imul
jge
mov
out
jne
mov
sub
lods
pop
mov
ja
or
lret
sbb
or
pop
fs
push
aam
xchg
pop
and
push
pop
sahf
sbb
out
cltd
xchg
dec
pop
test
mov
mov
jmp
add
int
lds
or
fld
es
aad
inc
xor
hlt
lahf
inc
mov
jno
mov
jns
xchg
sbb
mov
aad
push
enter
mov
inc
adc
leave
and
ss
pop
push
mov
jbe
sub
mov
cmp
mov
push
sahf
js
inc
mov
push
enter
pop
imul
xor
cmp
jmp
insl
out
or
pop
adc
cmp
jno
sub
dec
adc
sbb
addr16
insl
outsl
jp
insb
add
push
scas
jb
inc
xor
shll
pop
idivl
mov
pop
xchg
outsl
mov
mov
dec
test
loop
dec
data16
xor
mov
and
pop
std
or
push
push
imul
addr16
aad
pop
xchg
xchg
test
push
icebp
fwait
bound
mov
imul
insl
loopne
pminub
jnp
test
mov
xchg
aaa
dec
scas
std
inc
mov
xor
clc
pop
hlt
sub
mov
into
inc
js
push
popa
dec
jno
dec
data16
push
insb
call
ljmp
es
lods
cwtl
cmp
push
dec
popf
jnp
repnz
sbb
pushf
inc
notl
es
fdivl
pop
sti
add
fmulp
shlb
cmpsl
inc
mov
loopne
push
xor
add
loopne
sub
stc
xor
mov
imul
lret
inc
xchg
repnz
out
int
sub
data16
mov
test
mov
adc
aam
add
xchg
addr16
rclb
lods
imul
aaa
sbbl
fisttpl
pop
pop
jle
fs
scas
dec
sub
dec
es
andl
pop
mov
jae
lods
jo
pop
sahf
xor
in
nop
icebp
adc
addl
dec
mov
pop
lret
popf
xsha1
cmpsb
into
cli
dec
stos
movsb
mov
push
lods
into
adcl
cmp
orb
jnp
loope
sub
scas
fwait
outsl
daa
std
sbb
stc
enter
cs
fs
mov
stc
andl
mov
xchg
dec
icebp
in
ret
cmp
dec
jecxz
arpl
into
jp
xlat
inc
lock
and
mov
repz
add
and
push
popf
repnz
mov
inc
inc
inc
enter
mov
sub
cmp
aas
adc
or
jl
and
arpl
pop
jb
sahf
and
sub
mov
dec
lods
and
pop
push
loopne
lock
xchg
sub
xchg
aad
pop
pushf
cli
sar
xlat
mov
jl
cmpsb
shlb
cs
bnd
fwait
ja
xchg
xor
shll
sub
and
js
mov
out
daa
mov
xor
inc
divl
pop
pop
lahf
xchg
mov
lcall
cmpsb
cmp
loopne
in
jno
and
enter
les
cmpl
mov
in
iret
int3
test
push
loope
outsl
jnp
add
or
sub
adc
sub
xor
int3
scas
mov
daa
mov
jnp
ja
mov
mov
push
call
push
scas
mov
loopne
mov
es
push
lea
lds
or
cwtl
stos
sbb
xchg
adc
sbb
rcrl
repnz
in
jnp
insb
fistpll
pop
sbb
xor
shrl
mov
mov
fwait
adc
add
dec
pop
lret
sahf
jb
adc
pop
xor
xchg
jecxz
xchg
mov
jp
mov
js
mov
cltd
ret
loope
add
in
out
cmp
add
hlt
push
movsl
adc
aaa
lret
in
sub
inc
and
scas
pusha
mov
sbb
or
push
outsl
jge
inc
sub
mov
stc
mov
sub
and
dec
sbb
mov
pusha
lahf
sub
fcmove
lock
xchg
jecxz
inc
test
and
inc
out
loop
shr
addb
lods
xor
push
or
or
adc
mov
push
icebp
je
loopne
sbbb
mov
ret
cmpsb
ljmp
cmc
pusha
push
adc
sbb
xor
xchg
addr16
ret
mov
in
and
or
push
jo
add
push
xchg
jle
shrb
push
std
add
fidivs
mov
in
mov
ret
mov
add
test
cmpsb
data16
scas
mov
dec
in
test
xchg
stos
scas
xchg
xor
subl
loop
mov
fisttpl
cmp
lea
insb
mov
lods
data16
mov
mov
push
ja
int
stc
iret
sub
fdivs
add
pop
xchg
pop
enter
push
pop
test
ja
jle
shrb
cmp
cmpsb
inc
loop
mov
sarl
lock
mov
fimuls
mov
xchg
cld
xor
cld
inc
lods
push
sbbl
dec
mov
jle
mov
enter
push
xlat
pushf
jae
xchg
test
jne
test
xchg
pop
dec
jno
mov
dec
mov
outsl
in
or
std
sahf
dec
mov
bound
cmpsb
sbb
lahf
mov
mov
sbb
or
xchg
lea
adc
int3
mov
push
cmp
sbb
pushf
cmp
in
sub
lods
mov
push
imul
pop
gs
aam
bound
lock
fwait
xor
inc
sahf
stc
or
jno
fwait
lds
cmp
lods
jecxz,pn
adc
fldenv
bound
cld
xchg
mov
sbb
rorb
movsb
push
inc
das
jb
sub
and
xor
push
sbb
xor
mov
xlat
repz
push
adc
insl
adc
fs
enter
rcr
xchg
fiadds
movsl
ret
xchg
cmp
xor
push
aaa
add
pop
add
bound
fisubs
sub
imul
js
add
lock
pushf
arpl
adc
cs
repz
test
fistpll
outsb
add
inc
mov
inc
incl
xor
std
push
inc
fnsave
pushf
and
xor
mov
pop
daa
mov
jmp
inc
push
add
rorl
faddl
adc
int
scas
inc
sbb
xor
lods
aas
mov
or
mov
cltd
adc
cmc
push
jb
testl
movsl
repnz
loopne
mov
addr16
push
and
loope
sbbl
xchg
imul
clc
pop
outsl
icebp
mov
fisttpl
cmpsb
or
add
xchg
xchg
movsb
dec
arpl
push
inc
sbb
xchg
fsts
inc
arpl
dec
push
ljmp
orb
out
jns
ret
add
mov
loope
leave
sbb
pop
xor
je
xchg
adc
fmull
adc
push
mov
push
lds
lret
notb
cli
xchg
dec
mov
push
ret
pop
je
test
inc
xchg
scas
mov
aad
scas
ljmp
movsb
xchg
notl
and
dec
mov
pusha
mull
sbb
ljmp
inc
fnsave
xchg
cs
mov
shll
mov
mov
sbb
out
loopne
test
arpl
jne
inc
or
cld
addl
mov
pop
and
or
in
mov
ja
in
sub
pusha
les
ret
push
imul
lods
loop
sahf
adc
push
jno
lcall
fiadds
stos
leave
xor
in
push
inc
aas
xor
sahf
xor
cs
call
adc
pop
mov
mov
sar
rcrb
inc
lret
jnp
das
dec
push
push
add
ficoms
fstpt
js
fistl
mov
dec
jb
std
xchg
ret
js
pop
push
test
jle
mov
push
lock
sbb
lea
loope
lret
aas
mov
add
add
mov
gs
aaa
pop
mov
mov
daa
or
add
cs
mov
push
pop
dec
aaa
je
lods
dec
andl
fadds
push
push
cmpsl
or
jg
repnz
mov
les
cmp
push
add
and
mov
std
xchg
nop
or
push
xor
mov
xchg
pop
cmpsb
test
add
cltd
arpl
out
lahf
dec
push
sub
in
fsubrs
dec
popa
ja
mov
jae
icebp
popf
imul
lea
mov
jge
and
jmp
fs
mov
jo
movsb
pop
jge
push
dec
mov
outsb
iret
testl
push
cld
or
in
dec
mov
jnp
scas
mov
sbb
xor
fldenv
mov
mov
pop
mov
lods
pusha
lods
jne
or
lock
repz
paddw
push
pop
and
cmp
sub
push
and
std
dec
xor
test
aas
test
test
loopne
xchg
in
cmpsl
out
push
xor
test
adc
inc
repnz
lret
jle
jg
add
add
popf
jle
adc
add
out
push
xchg
push
ret
ds
insl
lea
repz
and
xchg
xchg
sub
shl
sbb
mov
sub
inc
fimuls
aad
push
mov
gs
test
decb
sti
and
testl
in
lcall
push
or
test
push
mov
fdivs
addb
sub
test
jns
xor
call
mov
jb
je
cwtl
rcrb
stos
ja
rolb
out
dec
or
xor
sbbb
sbbl
movsb
mov
add
nop
out
outsl
and
cltd
or
test
in
jp
lret
sub
jg
lock
pop
mov
mov
daa
jle
xor
imul
push
add
push
insl
hlt
adc
push
fwait
aad
fldt
mov
add
dec
sbb
inc
int
filds
fwait
cmpsl
xchg
das
mov
mov
out
fadds
pop
sub
sbb
je
lds
outsb
stc
aaa
pop
jmp
in
add
dec
mov
stos
hlt
and
cmp
mov
inc
arpl
notl
stc
xor
sub
adc
stos
dec
das
adc
cmpsb
lock
sbb
dec
sbb
loope
scas
rcrl
push
stos
mov
mov
sub
movsb
movsl
mov
mov
pop
shlb
or
mov
mov
or
andl
in
rol
sub
cmp
mov
inc
mov
push
xchg
popf
stc
mov
in
ss
pop
stos
mov
or
adc
sbb
push
jg
adc
or
sub
pop
xor
dec
fcmovne
into
push
jg
pop
icebp
repz
pusha
into
xchg
mov
xlat
pop
in
xchg
dec
ret
outsl
ljmp
ret
std
orl
fimull
cmc
or
xchg
adc
or
sarb
xchg
fdivrs
pusha
pop
push
inc
mov
icebp
inc
mov
sub
cli
cmpsb
cmp
jecxz
lds
stos
jmp
adc
into
mov
cmpxchg
cmpsl
pop
pusha
pop
gs
adc
fldenv
xchg
pop
xor
pop
jne,pt
jae
pop
dec
pop
sbbb
in
roll
add
loope
lcall
out
jb
fistpl
lods
xlat
aas
inc
js
jbe
dec
leave
lods
adc
add
movsb
lea
sub
in
iret
stos
call
mov
xchg
ret
mov
or
push
popl
fistl
pop
cmp
or
orb
mov
sbb
push
das
aam
aam
icebp
lea
stc
jl
out
inc
pop
in
mov
sbb
push
int3
xor
sbb
notb
lret
jbe
sbb
ds
stos
sahf
push
adc
jmp
push
repnz
ror
sbb
dec
adc
insl
leave
jg
sbb
jo
mov
imul
das
xchg
fstpt
add
ret
and
push
sbb
push
clc
arpl
add
clc
sahf
mov
loop
xchg
jmp
inc
movsl
mov
into
insl
dec
jge
ljmp
sahf
shll
test
decl
ror
test
addb
sbb
js
ljmpw
iret
jmp
and
push
outsb
adc
cmp
adc
sbb
ds
fcomps
inc
pop
divb
sbb
push
or
rcrl
push
jle
cmp
insl
rcr
cmp
in
mov
jb
pop
and
nop
mov
andl
aad
sub
push
repnz
push
adc
loopne
inc
ja
sti
lea
mov
mov
clc
lods
jp
dec
lock
ds
or
dec
bound
fisubrs
sub
sbbl
jae
test
mov
mov
out
add
sbb
ljmp
out
mov
mov
mov
inc
inc
xor
jl
push
orl
test
inc
ljmp
stc
imul
inc
int
jbe
or
gs
loope
repnz
inc
fsubrp
mov
pushf
lods
scas
and
xor
or
cs
popf
aaa
add
test
or
repz
and
mov
aaa
inc
and
push
mov
pop
jle
or
sub
or
jmp
or
out
fwait
push
jmp
stos
js
jg
fs
jbe
cltd
lahf
data16
jb
xchg
or
jecxz
fidivs
pusha
mov
shlb
or
test
es
lea
mov
rolb
je
xor
cmc
mov
ret
adc
xor
xor
push
sub
adcb
lcall
inc
lods
outsb
adc
mov
movsl
mov
icebp
lahf
test
enter
test
mov
aas
adc
fstpt
lret
mov
fdivrl
outsl
cs
pushf
test
jl
mov
mov
aad
dec
adc
fisttpl
pop
xor
dec
mov
push
sub
xchg
mov
test
jnp
sbb
sub
sub
movsb
es
xor
lds
insl
sti
int3
jecxz
mov
mul
outsb
pop
pop
xchg
lods
mov
and
je
test
rcrb
inc
sub
add
movsl
lea
sbb
ret
shll
mov
psrad
lock
and
mov
mov
movsl
aad
mov
test
sbb
dec
daa
lcall
cltd
sbb
sub
mov
jecxz
fs
call
jb
jne
jg
mov
push
xchg
push
and
push
mov
jb
push
les
dec
cmp
shrb
xlat
xchg
mov
test
fwait
aaa
std
adc
outsb
rcll
leave
js
push
daa
out
lcall
inc
addr16
xchg
xchg
fiadds
rcrl
add
add
jle
lock
out
push
aaa
mov
decl
mov
push
and
fcmovnb
jmp
adc
dec
fs
push
cmpsb
mov
fsubrp
inc
xchg
sbb
push
daa
rcrb
mov
mov
mov
mov
inc
xor
jmp
pop
inc
add
jp
aam
int3
mov
nop
in
jne
jg
int3
mov
xchg
in
movsl
stos
cmp
std
mov
dec
shr
lock
mov
enter
inc
lods
adc
out
insb
subl
cmp
or
sub
xchg
lea
aaa
test
js
lret
repz
xchg
sub
outsb
inc
lret
inc
out
inc
push
and
leave
xor
call
push
jb
cmp
cmp
dec
jnp
dec
sub
pop
xor
jp
mov
jge
and
add
aaa
jp
imul
outsb
mov
fcompl
or
std
pop
icebp
adc
push
vmovdqa
mov
mov
add
into
sub
popf
into
popf
push
pop
outsb
pushf
scas
ret
pshufw
leave
inc
lcall
cwtl
inc
test
push
and
cmp
mov
repnz
test
dec
ja
stos
inc
jnp
cwtl
push
outsl
fwait
jns
mov
mov
adc
imul
test
pop
cli
sbb
push
sub
mov
adc
add
out
mov
inc
mov
addr16
xchg
in
mov
or
jmp
cmp
sub
jl
mov
idiv
xchg
sub
dec
in
mov
cmp
test
sbb
in
cmpsb
inc
sub
mov
jo
mov
je
xorb
stos
lret
mov
decb
movsb
mov
fs
int
mov
and
scas
xlat
fcoml
int
loop
cmp
adc
insl
dec
lahf
aas
or
mov
push
xchg
xchg
or
hlt
mov
outsb
outsl
les
mov
leave
adc
sti
lahf
or
hlt
mov
xchg
lea
outsl
inc
pop
xchg
and
fldenv
sub
scas
bnd
sub
into
data16
pop
pop
call
pop
nop
and
notl
and
xchg
fisttpl
push
pop
daa
shll
enter
sahf
aad
sbb
xchg
xchg
in
lcall
adc
inc
je
ffree
cs
mov
test
popf
pop
lods
gs
fidivrs
out
mov
insl
sbb
xor
pop
data16
mov
sub
push
repnz
stos
push
push
cwtl
inc
decl
cmp
xchg
mov
push
cmpsl
pop
sub
push
loopne
call
cmpsl
mov
lea
xchg
enter
shlb
mov
stos
xchg
pop
loopne
mov
in
adc
inc
inc
bound
jl
lret
sti
cmp
sub
ljmp
add
fs
or
push
pop
push
aaa
fstpt
cmp
mov
test
cmp
imul
mov
out
xchg
push
cmpsl
movsb
rorb
xchg
mov
fidivs
mov
dec
lcall
icebp
cmp
push
loope
fld
movsb
sub
ds
dec
xchg
jns
push
dec
outsb
mov
jge
shrl
ds
and
fcomps
test
xchg
dec
xor
xor
cwtl
mov
sub
jmp
dec
scas
dec
pop
cli
mov
or
jp
or
sbb
lods
mov
sbb
clc
iret
test
inc
fcoms
mov
outsl
mov
jle
fdivrl
jl
in
pushf
icebp
mov
fbstp
xchg
jle
cli
fwait
test
lret
mov
out
test
out
xchg
lret
pushf
jmp
push
pop
lea
pop
mov
data16
jbe
out
xor
insl
mov
aam
mov
aaa
inc
stos
adc
sbbb
out
out
sbb
jbe
jnp
mov
ret
pushf
into
pop
dec
pop
stos
ret
in
mov
inc
jle
mov
int
add
xor
shrl
loop
bound
add
or
cmc
movsl
cmp
fcompl
push
jae
shrb
hlt
out
add
addl
stc
rcr
jno
xchg
loope
cmp
pop
jb
std
sub
loopne
xor
dec
or
das
hlt
pop
ss
push
test
mov
dec
lock
icebp
xor
cmp
push
dec
pop
clc
icebp
mov
rolb
cmp
ljmp
dec
push
pop
xor
inc
push
cmp
popa
in
js
push
popa
jmp
repz
das
xorl
leave
cmp
push
inc
sub
loope
mov
mov
out
loopne
and
sub
mov
and
xor
cwtd
xor
outsl
inc
daa
mov
jb
inc
jo
mov
push
lock
ss
or
movsb
sbbl
add
roll
inc
cmp
pop
arpl
jmp
in
sbb
xor
inc
cltd
std
lock
out
add
or
aad
sub
cmp
mov
arpl
sbb
adc
aam
imul
jne
rcrb
movsb
ja
mov
pop
pop
mov
fsubrs
out
mov
xor
in
or
mov
cmp
xchg
sub
adc
sub
cmp
in
nop
int
rcl
mov
dec
jl
subl
jb
movsb
xor
sub
cwtl
fsubr
cwtl
inc
jge
repz
lods
and
sbb
test
lret
aam
inc
cltd
sbbl
mov
mov
dec
outsl
mov
testb
lcall
icebp
jno
fists
xchg
inc
pop
into
sbb
jb
out
test
sub
add
inc
mov
jmp
iret
clc
jo
inc
cmp
push
popf
mov
aas
push
outsb
in
adc
mov
divb
jnp
stos
in
jns
popa
lods
mov
psubb
mov
pop
sti
lahf
xchg
mov
xchg
in
jbe
repz
dec
xchg
push
aas
mov
push
je
outsl
pop
int3
lods
mov
je
push
and
rorb
dec
push
sub
sub
xchg
pop
cmp
hlt
ljmp
sbb
cmpsl
jmp
cmp
in
add
es
push
mov
stc
and
inc
lock
icebp
dec
mov
icebp
push
mov
nop
fs
stos
push
xchg
push
sbb
sahf
jge
sub
call
cmp
pop
push
leave
repz
mov
fcmovnu
repz
and
xor
out
ljmp
shrb
mov
mov
icebp
inc
std
filds
mov
cmp
test
nop
xchg
dec
pushf
or
mov
lods
mov
mov
xchg
gs
add
test
jle
andb
sbb
dec
aaa
sub
fs
xchg
sub
xor
insb
gs
lret
xor
dec
xchg
fcomps
insb
xchg
sub
or
pop
scas
mov
pop
fldcw
aam
imul
hlt
sbb
mov
jbe
and
mov
int
sbb
mov
pop
add
dec
mov
and
pop
out
and
push
mov
fimull
jl
ss
mov
sub
scas
or
testb
rcrl
fnstcw
pop
lret
popa
lahf
roll
sti
das
sti
cmc
push
hlt
int3
xlat
outsb
fs
aas
sub
testb
lea
jmp
push
push
cmp
fnstenv
call
stc
and
inc
pop
insl
jb
popa
and
mov
sahf
xchg
fsubr
decb
mov
mov
add
rclb
adcb
cmpsl
mov
xor
and
loope
lcall
std
inc
jno
jecxz
sahf
inc
lcall
inc
ss
dec
lods
fsubrs
fwait
addr16
xorl
push
dec
pusha
dec
pop
sub
pop
xor
mov
shrl
test
cmp
lock
mov
mov
xor
push
mov
scas
jbe
mov
fsubrl
cwtd
pop
imul
test
leave
pop
movsl
cli
cmc
icebp
mov
aaa
mov
addl
stc
icebp
addr16
rcl
inc
inc
popa
mov
pop
mov
dec
aam
xlat
mov
inc
mov
stos
or
mov
jnp
add
mov
inc
fbstp
mov
jge
mov
stos
sahf
rorb
stos
mov
out
faddl
xor
cmpsb
ja
jg
movsl
pop
mov
rcll
outsl
dec
cmp
or
dec
sbb
ret
jg
jo
jnp
cltd
call
cwtl
idivl
push
imul
cmp
cmpsb
lret
jb
push
add
xorl
and
out
mov
sbb
mov
cmp
aam
mov
test
sub
out
adc
mov
mov
inc
add
mov
jo
fld
sbbl
movsb
xor
pop
out
inc
cld
and
cli
iret
xor
nop
push
push
dec
scas
and
adc
mov
or
push
jne
mov
mov
popa
mov
or
and
sbb
repnz
mov
insl
shr
loopne
dec
cmp
imul
adcl
mov
fdivrl
iret
out
mov
lea
inc
xchg
rorb
add
cmp
in
out
sbb
roll
jbe
mov
pop
push
mov
fdivl
sub
test
sbb
mov
dec
xchg
repz
repnz
adc
inc
pop
movsl
push
insl
pop
stos
cmc
sub
fwait
mov
and
mov
mov
les
push
sbb
adc
test
or
push
cmp
stos
jne
jmp
fsubs
insb
add
rcrl
adc
aas
add
jo
lcall
xorl
aad
push
add
scas
mov
push
mov
jl
scas
cmp
movsl
cmp
imul
inc
dec
mov
mov
pop
xchg
add
idivl
das
mov
shlb
clc
insl
sbb
adc
xchg
jnp
in
lahf
xchg
frstor
mov
enter
in
xchg
jbe
push
sti
xchg
pop
movsl
icebp
cli
subb
push
loop
mov
cmc
inc
and
scas
inc
cmp
enter
or
jae
xchg
push
add
int3
xor
jmp
leave
outsl
mov
shl
pop
shrl
push
clc
es
sbb
sbb
test
jnp
sub
loop
fs
xchg
xor
ds
lock
cmc
out
subb
stc
in
pop
or
rorl
xchg
clc
sahf
dec
test
mov
adc
hlt
cmp
pop
out
mov
rcl
std
and
push
out
inc
mov
inc
jmp
aaa
push
loop
nop
sub
push
mov
jae
inc
fcmovnb
mov
mov
mov
dec
pop
fisubrl
xchg
loop
mov
out
inc
mov
divl
shlb
fstpl
xor
dec
subb
insl
ss
inc
dec
hlt
addr16
pusha
loop
clc
aas
mov
jne
sub
testb
rclb
test
repz
xlat
imul
dec
dec
mov
push
sub
mov
push
add
sti
inc
jno
or
imul
push
mov
int3
push
shll
mov
scas
pushf
rol
add
insl
jmp
mov
ret
jns
movsl
scas
jmp
ret
sbb
incb
loope
jle
lods
sub
push
xchg
pop
sub
push
xlat
cli
lahf
nop
daa
adc
jnp
dec
imulb
or
xchg
xlat
sbb
or
in
cmp
mov
int3
push
test
mov
and
adcb
cltd
add
or
or
into
div
inc
adc
faddl
nop
das
cwtl
pop
mov
fwait
sti
lods
in
mov
push
jo
jno
mov
fiadds
inc
xchg
lret
cmp
dec
faddl
inc
in
adc
daa
inc
add
mov
outsl
jmp
lret
in
mov
test
cs
dec
jg
mov
fcmovb
pop
ficomps
mov
out
pop
pusha
push
outsl
sub
rorl
xor
fs
or
sbb
jg
pop
aad
or
push
mov
or
insb
les
and
sub
mov
lahf
mov
inc
ss
inc
pop
or
leave
cmp
mov
rcll
imul
call
lods
jecxz
pop
and
test
cld
or
bound
adc
sub
push
or
mov
xor
or
jle
in
loopne
outsl
test
xchg
dec
inc
and
fs
popf
imul
lahf
pop
das
cmp
jmp
push
push
in
scas
popf
stos
and
sbb
aas
xchg
aam
cmp
lds
pop
out
cmp
mov
push
hlt
fimull
push
push
cmc
stos
loopne
add
mov
scas
mov
sbbb
rorb
mov
adc
enter
cwtl
pop
lods
lret
mov
xor
cmpsb
out
jmp
dec
lea
enter
adc
ljmp
cmpsl
or
cmpsl
cmp
jl
lcall
pop
scas
mov
mov
push
jbe
fisubrl
sub
cld
out
cmp
and
enter
add
ljmp
adc
outsl
outsb
cmp
fstl
mov
rorb
inc
pop
aas
mov
sub
add
mov
lret
pusha
bound
mov
ljmp
push
cld
xchg
sbbl
dec
sub
mov
mov
cmp
insl
adc
pop
into
cld
and
adc
in
push
cmp
or
pop
jb
lds
loop
adc
sahf
cmp
jmp
mov
push
add
sbb
popl
xor
cmp
adc
fs
inc
stos
les
pop
mov
adc
aam
enter
mov
xor
inc
cmp
xchg
lahf
shrb
and
sbb
or
imul
loope
in
test
mov
mov
insb
cmp
mov
sbb
inc
pop
out
sahf
mov
xchg
ss
lret
dec
jle
pop
icebp
imul
dec
mov
pop
repz
cltd
xor
mov
xor
fiadds
push
mov
scas
jne
sub
mov
rorl
jae
jo
xchg
rorb
pop
and
add
mov
and
bnd
mov
fldenv
cltd
inc
dec
dec
addl
mov
lcall
and
loope
jns
add
test
scas
cmpsb
push
gs
jno
xchg
push
push
adc
push
add
ret
lret
mov
imul
adc
xor
loop
lahf
xor
xchg
and
inc
insb
mov
and
nop
out
popa
or
clc
and
mov
scas
or
ja
rcll
dec
or
jg
pop
in
repnz
je
enter
dec
sbb
nop
mov
lock
out
jbe
lea
and
jo
jb
scas
adc
pop
cwtl
jl
cmpsl
sub
xchg
ljmp
jmp
outsl
mov
add
out
cmp
xchg
dec
shll
movsl
mov
lret
dec
mov
ds
pusha
cmp
sbb
es
lock
bound
xchg
aam
mov
pop
jns
cs
imul
mov
sbb
jns
mov
outsl
mov
sbb
in
and
mov
int3
jge
mov
in
gs
adc
jbe
bnd
dec
cwtl
cmp
mov
fistpll
ficompl
xchg
scas
fsubrs
add
inc
jmp
jne
iret
gs
lods
and
out
mov
inc
xchg
test
ret
rclb
lods
aas
mov
xor
inc
in
test
cltd
je
sub
or
or
jge
mov
mov
jmp
fst
cmp
fidivs
pop
jae
daa
mov
xor
jmp
shll
in
push
int
popf
sbb
xchg
clc
sahf
in
cmpsb
clc
ds
dec
cwtl
subl
fisttpl
jns
call
fcmovu
mov
mov
loopne
fs
pop
inc
mov
mov
push
mov
add
dec
pop
jnp
ret
dec
sti
cmp
mov
adc
jecxz
jecxz
adc
jecxz
insb
popf
aas
sub
xor
sbb
clc
adc
orb
scas
ljmp
inc
cmp
jg
dec
call
adc
jp
push
cld
and
js
das
imul
add
mov
loopne
pop
adc
imul
jno
addr16
fsts
ss
cld
pop
andl
loop
push
es
xchg
mov
sarl
cltd
addr16
addr16
int
fwait
sbb
ret
jge
jno
lahf
pop
dec
pop
jnp
push
cltd
or
jp
outsl
pop
jns
iret
or
or
sub
adc
into
xchg
pop
je
push
fldenv
pop
adc
mov
xchg
hlt
or
or
push
mov
or
xchg
lret
jl
inc
loopne
and
fwait
repnz
in
cmp
rclb
aam
jecxz
fbstp
mov
push
push
cs
andb
push
mov
mov
inc
jle
ds
mov
mov
mov
hlt
jne
or
dec
testb
jle
xchg
movsl
pop
jge
push
icebp
decl
sub
adc
shrl
mov
or
mov
mov
cli
jne
ret
mov
nop
lods
or
pushf
cmp
pop
fxch
mov
mov
in
sti
das
pop
add
outsl
sti
pop
sbb
cmp
cld
mov
inc
sbbl
cmpsl
pop
mov
sbb
gs
cmp
insb
add
cmpsl
mov
mov
adc
adc
cs
iret
out
mov
cmp
xchg
add
sbb
or
negb
mov
fwait
and
fwait
jecxz
pause
xor
adc
inc
dec
xchg
sub
lds
add
ljmp
adc
mov
in
mov
shrb
push
push
sahf
int
ja
dec
cmp
iret
fstpt
and
mov
sbb
sub
jl
das
out
mov
cltd
mov
in
mov
ror
mov
cmp
inc
into
push
mov
or
jecxz
testb
adc
sub
js
pusha
scas
bound
jbe
pop
in
arpl
cmpsb
sub
enter
mov
in
jns
movsl
data16
sub
inc
push
fldenv
xor
adcb
mov
scas
mov
xchg
dec
push
xchg
push
jmp
jp
data16
aad
adc
jne
pop
cmp
add
sarl
fidivrl
mov
mov
inc
sbb
movsb
sub
aaa
xor
add
jo
shrb
xchg
dec
shlb
data16
mov
xlat
neg
mov
sub
mov
cmp
sbb
mov
test
movb
test
ds
mov
pop
ret
icebp
mov
inc
xchg
popa
mov
push
sub
adcb
jae
out
mov
pop
sarb
fisttpll
adc
mov
jb
cmp
adc
cmpsb
into
in
cmpsl
mulb
jnp
mov
and
pop
int3
es
dec
xchg
lods
sub
pop
and
bound
fnstsw
stos
and
xlat
pop
lcall
mov
bound
xor
dec
lods
imul
pop
stos
movb
sub
mov
add
mov
add
xor
and
imul
in
mov
pushf
inc
fiaddl
lcall
xchg
push
lock
sub
push
or
stos
ja
cmp
lcall
popa
cmp
repnz
jnp
xor
mov
cmpsb
les
fmuls
test
cmpsl
icebp
jo
mov
shlb
shrl
xchg
insl
sub
and
test
cmpsl
adcl
ds
sti
dec
lods
jno
push
clc
rorl
adc
mov
and
rclb
inc
sbb
sbb
xchg
fiadds
popf
jae
pop
xchg
jb
xor
ja
cmp
rclb
cmp
pop
imul
scas
xchg
cmp
leave
iret
movsl
sbb
into
out
popf
roll
sti
push
fdivrs
fnsave
xchg
ja
in
pop
and
into
sub
sti
cltd
aam
lret
pop
jnp
add
adc
add
sbb
cltd
hlt
test
outsl
ja
lods
push
pop
aad
fldcw
pop
mov
push
add
jmp
and
rcll
shll
xlat
pop
fwait
cmp
and
cli
cli
jno
mov
jge
pushf
cmp
movsl
adc
and
cmp
adc
mov
mov
pushf
mov
push
outsb
rcrb
dec
loopne
sbb
les
addr16
aad
xor
mov
roll
jmp
xlat
inc
shlb
dec
dec
xlat
inc
shrl
cmp
cltd
leavew
xorb
pop
and
nop
pop
dec
xor
xchg
push
or
inc
cmp
dec
jne
movsl
and
and
test
into
sub
and
push
and
jmp
addb
inc
inc
stos
and
leave
jecxz
mov
mov
push
repz
rclb
xchg
cltd
xor
mov
push
imul
cmp
add
lods
outsl
sqrtps
lret
push
inc
js
and
stos
popf
mov
jge
fcoml
lcall
xchg
in
xchg
push
lcall
ror
mov
or
mov
add
int3
leave
aad
and
push
cmp
imul
fistl
mov
ss
mov
dec
dec
inc
stc
fdivl
pop
inc
loopne
je
mov
int3
jg
data16
pop
test
cmpsl
mov
inc
ljmp
or
xor
or
sub
fcompl
cwtl
mov
adc
pop
fbstp
add
sbb
xchg
icebp
adc
ret
or
mov
ficompl
hlt
lcall
mov
or
arpl
jb
aas
into
add
adc
cltd
repnz
push
loop
mov
adc
cmp
sbb
pushf
add
outsl
das
in
jns
sbbl
hlt
xchg
push
mov
xchg
test
sub
push
mov
adc
imul
xlat
adc
popa
jnp
std
adc
enter
mov
clc
jg
inc
jb
dec
subl
sbb
jmp
and
pop
loopne
orl
mov
movsb
mov
jo
fxch
popl
and
fidivl
ds
cltd
das
jle
mov
inc
in
call
cwtl
pop
mov
mov
leave
sub
mov
fwait
int
icebp
mov
je
test
addl
push
iret
sbb
add
test
and
add
cwtl
cltd
mov
lcall
and
mov
loopne
pop
push
mov
jle
mov
mov
add
add
sub
inc
inc
mov
cmpsb
cmp
mov
test
and
sub
lds
push
xchg
cli
xchg
jp
sbb
add
xor
in
stos
sub
fidivl
push
dec
inc
pop
lock
mov
mov
mov
adc
adc
fld1
mov
lods
push
xchg
lock
mov
mov
and
inc
hlt
in
xchg
add
sahf
pop
in
movsl
nop
adc
mov
mov
sbb
inc
xchg
loop
out
mov
mov
jno
cmpsl
das
nop
insl
in
mov
pop
or
bound
pushf
jg
sbb
mov
push
lods
xor
adc
cmp
bnd
and
ss
mov
sbb
inc
xor
inc
pop
bound
inc
ret
sbb
orl
or
pop
push
sub
cmpb
hlt
add
lret
xor
imul
sbb
das
push
loope
popf
push
and
addr16
mov
scas
enter
inc
mov
jp
ljmp
mov
mov
sbb
mov
mov
push
adc
shrb
mov
mov
sbb
jo
sbb
insb
shrl
rcrl
adc
jae
xchg
sub
in
jo
mov
mov
cli
pop
xor
adc
js
dec
dec
pop
push
cltd
es
sub
movsb
dec
out
ja
jno
cld
inc
sbbl
pushf
popa
inc
dec
jl
shrb
mov
adc
stc
cmp
xlat
push
xchg
fnstenv
cmp
sbb
popa
es
cmp
clc
out
enter
xor
test
aas
or
cmp
lock
pop
lea
pop
pop
call
push
jle
push
and
out
sbb
popf
filds
test
and
xchg
xlat
rol
xor
mov
movsb
mov
or
mov
mov
sbb
in
xor
ja
lcall
imul
gs
pop
ljmp
insl
jg
test
xchg
adc
popf
jb
or
add
mov
stos
andl
jl
jl
ret
dec
ljmp
dec
cs
push
ficoml
mov
jp
adc
out
cmpsl
fldenv
and
cli
cs
xor
clc
incb
mov
add
and
stos
push
ds
or
add
or
adc
jbe
xchg
pop
in
inc
adc
lock
in
push
nop
mov
insl
jmp
dec
ljmp
push
jne
pop
shlb
sbb
sti
into
adc
push
dec
fildl
shll
leave
popa
or
and
inc
lcall
mov
sbbb
nop
xor
adc
stos
into
mov
fmull
lods
data16
lds
ret
mov
jl
mov
and
test
faddl
mov
test
mov
lahf
inc
lds
sub
jge
sti
xchg
addb
imulb
fstpl
pop
jge
dec
outsb
cmp
fwait
xorb
xchg
xor
mov
mov
xchg
lcall
inc
jmp
mov
movl
dec
cmp
adc
mov
sub
dec
ds
repnz
mov
shrb
lods
add
jb
jne
mov
adc
or
inc
cmp
std
out
mov
data16
xchg
test
sub
ret
ret
sub
mov
add
push
sub
push
std
mov
das
js
sbb
jecxz
jge
sub
repz
mov
push
sub
into
insl
int3
dec
cmp
dec
arpl
loop
scas
xor
push
movsl
js
movsb
dec
xlat
mov
mov
mov
mov
and
push
push
sub
mov
testl
push
cs
jge
scas
cmp
popa
cld
popa
xor
cli
sub
leave
div
je
pop
lret
mov
jne
jb
ljmp
ss
inc
or
movsb
lds
jle
fidivl
dec
fwait
jne
lds
xchg
xlat
out
out
shl
inc
jmp
pop
and
popa
fisubrl
xchg
add
and
push
dec
add
jl
rcr
lret
insb
rclb
call
shll
xchg
mov
rcrl
out
stos
icebp
xor
add
mov
imul
add
mov
mov
cltd
push
testb
jle
sbb
push
lods
lret
sarl
pcmpeqd
inc
cmp
xor
insb
filds
cmpsl
mov
push
roll
pop
adc
xchg
pop
pop
cmp
inc
hlt
hlt
xchg
dec
mov
jmp
repz
in
push
xor
mov
xor
dec
iret
dec
push
pushf
jae
xchg
jae
sti
mov
push
sub
in
mov
and
rcll
push
sbb
inc
sbb
jmp
cltd
cmc
imul
lods
mov
mov
rcll
out
jp
popf
fnstenv
sbb
add
test
clc
aam
loope
scas
mov
fwait
sub
mov
popa
pop
add
mov
jo
or
aaa
push
and
sub
popf
sbb
push
xchg
pop
mov
ja
cmpb
cmp
xor
aam
das
rclb
dec
subb
cmp
push
in
mov
stos
add
mov
lea
jns
adc
add
pushw
and
jecxz
mov
push
xor
fs
movsl
cs
xor
add
cmpsl
jne
and
adc
xor
div
mov
and
or
jno
test
fimuls
cmp
andl
nop
xchg
sub
pop
add
adc
test
push
nop
pop
inc
ja
stc
push
mov
test
inc
mov
loopne
rcrl
inc
fyl2x
int3
hlt
sub
add
adc
stos
fyl2x
push
outsb
add
mov
pop
pushf
mov
cli
mov
xor
outsb
jb
push
scas
jp
out
test
push
fnsave
pop
das
iret
leave
mov
movsl
cmp
mov
inc
ss
aaa
or
js
mov
inc
adc
push
xchg
mov
pop
out
jmp
es
lcall
jbe
or
rol
mov
or
gs
jge
push
test
lahf
push
cmp
icebp
mov
leave
je
scas
mov
and
mov
sub
or
inc
mov
cmc
out
or
and
shll
popl
mov
int3
jne
jbe
dec
outsb
pop
cmp
insl
in
rorl
push
rclb
sub
push
int3
fwait
dec
repnz
push
jle
nop
dec
dec
aad
or
or
cli
or
or
mov
mov
mov
subl
sub
out
mov
movsl
xor
mov
xchg
jg
out
xchg
out
push
sbb
jmp
das
or
movb
mov
imul
jecxz
sub
shlb
xchg
add
ret
xor
inc
fdivl
pop
adc
test
das
lea
adc
scas
pop
dec
data16
fmulp
outsl
idivl
lcall
out
test
je
ss
jge
mov
cmp
adc
xlat
outsb
cmp
fprem1
testl
jns
push
mov
dec
mov
jnp
call
insb
cltd
sar
cwtl
cmc
xchg
sub
popa
stos
pop
lahf
mov
pop
xor
adc
xlat
xor
test
mov
in
sbbl
pop
out
mov
bound
aam
shrl
and
push
mov
ss
xor
pop
das
mov
sbb
movsl
push
mov
mov
cltd
aaa
cmpsl
jns
mov
imul
dec
mov
fldenv
add
push
cli
das
cmp
lods
stos
push
rcrl
mov
jo
xchg
jo
call
stos
or
insl
adc
cmp
sub
add
stos
shll
mov
outsl
jge
sbb
ret
rorb
mov
movsb
mov
dec
data16
out
mov
aad
mov
in
subl
in
push
dec
or
jl
je
fwait
sub
shrb
mov
adc
adc
bound
or
sub
in
insb
imul
repz
aaa
cltd
inc
imul
jns
loop
xchg
jne
pop
sub
jnp
mov
rol
xchg
xchg
adc
mov
push
lahf
pop
popf
push
mov
and
mov
or
pop
aaa
push
in
xchg
adc
add
jl
and
movl
or
imul
divb
sub
inc
xchg
test
aaa
into
gs
mov
add
and
jb
push
fs
inc
fadd
xchg
bound
push
jno
mov
fmul
icebp
aam
outsb
push
adc
sbb
mov
leave
mov
sub
pushf
shll
lahf
xor
leave
jmp
enter
dec
adc
or
xchg
mov
out
push
and
cli
lret
pop
mov
dec
mov
mov
daa
xchg
sub
lcall
popf
dec
in
pusha
inc
pop
xchg
or
and
cld
sub
jg
js
daa
jge
push
testb
jns
and
jle
cmp
add
dec
fcoms
adc
es
movsb
in
testl
xor
adc
push
xchg
call
and
or
sub
mov
xchg
sbb
jmp
dec
sbb
jl
add
mov
dec
fistpll
push
xchg
sub
mov
lret
pop
jmp
dec
cmp
pop
lock
ja
addr16
add
add
jecxz,pt
cmpsb
ds
fsubl
pop
xlat
lret
cld
clc
loopne
sub
mov
rorb
cwtl
mov
popa
adc
xchg
sbb
xor
jecxz
leave
push
xchg
out
fidivl
out
mov
out
and
icebp
adc
pop
or
mov
ficoms
stos
xchg
mov
adc
fwait
xor
mov
adc
mov
xchg
or
popa
or
add
dec
sub
or
sub
sub
imul
jo
dec
adc
xor
andb
xchg
mov
jo
lods
cmc
push
in
loop
sbb
mov
pop
icebp
shrb
mov
xchg
fsubl
mov
xor
sbb
or
std
lds
pop
xchg
cmp
add
add
cmp
and
mov
cld
inc
rcr
cmc
push
push
mov
cs
inc
int3
mov
lods
dec
cmpsb
sahf
ror
lds
movsl
ret
gs
insb
dec
or
sbb
sbb
les
ss
in
xor
leave
cmp
cmp
or
mov
lahf
nop
cmpsl
out
mov
fistpl
pusha
sar
and
jns
call
and
mov
shlb
call
mov
fwait
imul
sbb
pop
push
adc
repz
pop
rclb
adc
lret
fcoml
lods
mov
mov
push
mov
sbb
addr16
in
mov
in
cwtl
and
xchg
jle
xchg
mov
lahf
sbb
rcrb
mov
aas
aam
mov
pop
icebp
fs
js
idivl
inc
xchg
or
repz
std
or
xor
mov
testb
push
or
cmp
cmp
incb
ds
test
xlat
ret
jbe
mov
shr
inc
sti
jbe
test
fldl
mov
push
ljmp
ljmp
jge
ljmp
out
addr16
jle
dec
sbb
fidivrl
push
fsubrp
fisttpl
lods
idivl
fidivrl
push
or
mov
fildll
test
mov
loopne,pt
ret
rorl
jno
xor
mov
sbbb
jo
popf
and
lods
xchg
mov
popa
inc
arpl
cltd
sub
and
sbb
enter
mov
iret
jbe
jbe
pop
or
mov
movsb
cmpsl
mov
hlt
xor
popa
bound
jge
call
push
jo
hlt
push
ret
insl
mov
pop
imul
int
mov
not
jo
inc
xchg
aam
int
es
add
jnp
clc
cmp
inc
xor
mov
inc
icebp
outsl
test
js
adc
cmp
cmpsb
in
adc
outsb
jl
out
hlt
push
dec
xor
shl
mov
add
cld
xchg
shl
popa
clc
cmc
loope
push
pop
adc
test
pop
in
mov
popf
out
jge
notl
bound
push
loope
enter
cmp
out
inc
pushf
push
push
lahf
xor
aas
imul
lock
leave
jns
mov
push
pop
scas
mov
loop
push
mov
leave
test
cmpsl
mov
xchg
in
cmp
fisubrl
orb
stos
sbb
mulb
ds
jns
pop
mov
xor
shl
insl
mov
clc
or
mov
xchg
add
mov
xchg
sbb
sub
push
jb
ja
ret
imul
mov
pop
inc
fdiv
mov
cli
shll
mov
jmp
ret
repnz
fcoms
and
xchg
stos
add
addr16
arpl
loop
dec
xor
and
clc
or
jmp
push
cltd
mov
clc
or
mov
push
or
stos
sbb
rcrb
cmp
add
mov
in
int
out
xlat
insl
ljmp
cwtl
mov
inc
shrb
fdivrs
es
add
or
pop
xchg
pop
cmp
pop
jno
sub
xor
jle
push
inc
inc
clc
popa
into
fcoms
repnz
or
fisubl
adc
stos
add
jl
int3
jg
mov
jo
andb
cmc
cmp
cmc
push
mov
pop
sbb
and
not
push
insl
cmc
mov
jge
cld
movzbl
lcall
xchg
das
cmpsb
sbb
pop
ret
and
push
mov
por
jmp
or
cmp
mov
sub
sarb
pmaddwd
in
mov
pop
clc
pop
cmp
pop
push
cmp
and
testb
in
bound
repz
les
push
inc
cld
sub
inc
mov
cld
in
lret
loop
shrb
inc
out
add
popa
int
dec
mov
or
jge
mov
inc
lods
cli
mov
fldt
lds
xchg
mov
fstpt
out
shlb
push
adc
into
jno
and
sti
jle
sub
call
repnz
mov
sarb
fmull
xchg
test
mov
and
mov
test
pop
mov
sarl
xor
icebp
enter
inc
cmp
call
scas
mov
dec
inc
or
mov
cmp
mov
and
sub
xor
loope
jne
cmp
inc
shl
aaa
out
daa
dec
stos
icebp
cmc
xchg
or
ret
add
les
fwait
movsb
mov
dec
fucomip
dec
mov
sti
das
sbbb
sbb
sbb
js
hlt
push
xor
outsl
out
cmp
out
stos
mov
bound
push
popf
out
inc
movsl
enter
mov
aam
pop
rcrl
daa
jle
cmp
jae
ficomps
xchg
ficoms
xor
xchg
adc
cmp
movsl
in
lret
cmp
push
push
fwait
dec
pop
test
pop
rcll
pop
cmc
scas
ficoms
mov
or
jns
nop
jae
ret
pop
cmp
popl
in
pop
fdivrl
je
sbb
xchg
ret
or
xchg
xor
push
mov
inc
cmp
mov
mov
popf
fcomi
jbe
add
and
xchg
add
mov
fs
popa
das
lret
mov
or
enter
mov
jecxz
mov
sbb
mov
cmpsl
and
push
pop
mov
dec
insl
jp
ljmp
in
stc
stc
push
sbbb
nop
push
add
mulb
dec
shl
dec
mov
out
call
xchg
mov
add
les
in
pop
out
push
sbb
iret
adc
push
negl
ja
orb
push
or
and
rclb
orl
inc
fisubrl
xlat
push
sbb
push
popa
xor
pop
sub
mov
iret
fs
push
lods
jge
add
fstl
xor
das
arpl
mov
xchg
jg
sbb
jne
lods
scas
sub
sub
pushf
pop
cmc
int
jle
cs
insb
sbb
ljmp
pop
scas
mov
ret
lds
jmp
or
adc
rorl
mov
pop
push
jnp
push
jp
sti
mov
iret
idiv
mov
in
xchg
push
sub
pop
jg
xor
sahf
jmp
cmp
pop
dec
out
cmpsl
xchg
adc
push
cltd
movsl
push
mov
shll
rcll
and
cmpsb
add
outsb
icebp
pop
and
push
stos
mov
dec
pop
mov
lods
push
jnp
pushf
mov
mov
cmp
mov
iret
es
nop
jg
xor
sti
add
xor
stos
pop
hlt
sbb
push
cltd
enter
les
arpl
mov
imul
sbb
pop
subb
int
popa
clc
bound
lret
insl
adc
add
sbb
push
pop
mov
and
xchg
inc
ffree
das
push
mov
out
mov
adc
cltd
xorb
int
add
movsl
icebp
test
push
pop
pushl
mov
gs
or
or
mov
inc
xor
leave
mov
stc
inc
enter
rcll
dec
jecxz
pop
push
and
pop
mov
pop
dec
add
jg
test
jb
out
test
test
mov
add
push
mov
dec
lret
das
dec
cmpsb
pop
push
mov
push
aam
insb
repz
stos
loop
into
adc
pop
jo
xchg
insb
movl
dec
pop
loop
scas
shrl
lds
dec
jl
push
les
xor
loope
mov
sbb
clc
xchg
mov
add
in
xor
bound
jno
faddl
jae
mov
inc
push
jne
jb
add
push
cmp
xchg
dec
mov
lds
adc
js
cmp
xchg
loop
add
sub
ljmp
aam
repz
push
lock
leave
push
mov
mov
and
mov
sbb
rcrb
sarl
clc
das
xor
push
xchg
cmp
push
or
xlat
mov
les
into
inc
mov
inc
out
fnstenv
das
sarb
pop
mov
dec
dec
jp
scas
sub
bound
js
fnsave
loopne
add
in
dec
mov
loop
arpl
imul
dec
inc
mov
iret
outsl
inc
movsl
mov
adc
and
adc
sbb
movsb
pop
adc
aam
jle
sbbl
ds
mov
xor
shrb
scas
xchg
int3
inc
mov
in
inc
or
fcoms
arpl
into
push
mov
outsl
and
fmul
inc
int3
call
std
pop
lret
lods
mov
subb
push
pop
pop
mov
cmp
xchg
insb
test
inc
repz
sub
pop
call
andb
fdivrl
jmp
stos
insl
dec
fsubr
sahf
mov
push
test
pop
lock
or
xchg
test
movsl
vpsubusb
iret
mov
mov
cli
pop
push
mov
sub
mov
clc
mov
mov
in
notl
sub
mov
leave
daa
xor
sbb
testl
js
xchg
subb
xchg
orl
mov
push
out
in
or
adc
ss
mov
lods
xchg
xchg
sub
inc
lret
addb
dec
dec
and
and
inc
out
mov
push
pop
int
out
xor
sub
aam
cmpsl
jge
or
adc
fsubrp
cmp
fucomp
push
clc
jl
scas
cli
mov
sub
push
cmc
mov
fucom
adc
push
scas
mov
inc
mov
add
cmpsb
sbb
inc
push
push
mov
in
xchg
jmp
pusha
sbb
das
cmp
push
push
popf
loopne
adc
inc
add
adc
push
divb
pop
nop
lods
mov
fistpl
and
push
std
push
or
dec
jno
scas
pop
test
jp
filds
push
mov
adc
addl
ret
jnp
in
cli
insl
mov
mov
loop
and
outsb
test
enter
or
mov
jmp
adc
call
or
jns
ljmp
xorl
add
leave
cmpsb
cmpsb
add
nop
push
in
pop
outsl
push
movb
mov
je
xor
sbb
sub
push
out
in
dec
mov
in
and
jnp
int3
mov
popa
jns
mov
pop
aad
jb
jecxz
iret
adc
pop
cmp
mov
pop
dec
mov
cmp
fdivs
clc
adc
outsl
outsl
addr16
adc
bound
gs
inc
icebp
push
pushf
sub
shlb
mov
xchg
xchg
xchg
aam
sti
in
sbb
push
movsb
cwtl
outsl
rorl
push
sbb
lret
sbbb
push
lods
push
shlb
in
mov
fldt
pop
push
lea
repnz
je
rclb
ds
stc
mov
sub
dec
fs
xor
mov
clc
roll
insb
add
xor
dec
fidivl
pop
xor
push
lods
mov
cld
imul
or
clc
push
test
pop
mov
shll
fbstp
in
add
movsl
jno
push
cmpsl
sub
int
in
fisttps
andl
test
dec
ja
popa
xchg
shlb
add
sti
inc
scas
sub
in
pop
test
push
mov
push
fwait
inc
mov
or
popl
mov
out
bound
cmp
mov
cmpsl
rcrl
out
add
pusha
xchg
icebp
adc
ss
dec
sahf
lock
mov
adc
lods
fistl
jl
adc
hlt
das
das
jbe
mov
jae
xor
dec
cld
adc
mov
out
inc
in
lock
jmp
lret
jecxz
std
push
arpl
mov
mov
and
fidivl
fisubrs
out
mov
lea
data16
xchg
and
adc
int3
fmuls
mov
pop
push
test
jo
jb
fs
add
ja
adc
rcrb
js
cmpsb
scas
and
sbb
or
outsb
dec
pop
jl
pop
xor
popf
cmpsb
push
cli
pop
shrl
mov
icebp
mov
ret
push
mov
test
push
add
adc
cli
ljmp
inc
cwtl
stos
in
inc
icebp
sbb
mov
mov
scas
lods
inc
mov
cmpsl
mov
out
out
test
cmp
xor
xchg
adc
sub
hlt
hlt
mov
dec
add
icebp
sbb
loope
ja
mov
xchg
inc
xlat
pop
lock
sarb
ror
in
xchg
js
jo
push
inc
out
data16
fdiv
ja
jne
andb
push
mov
stc
jnp
mov
xchg
mov
out
mov
adc
inc
push
fimuls
dec
mov
pop
bnd
pop
sub
aad
and
cmp
mov
xor
and
xchg
jge
std
mov
lahf
stos
lock
or
jne
lcall
sbb
inc
lahf
or
xchg
lret
bound
sbbw
cld
lcall
ja
ror
add
hlt
addl
push
in
ss
xor
inc
dec
subl
adc
push
js
pusha
jp
push
cmp
fwait
stos
pop
movsl
das
jmp
sbb
mov
inc
ret
mov
mov
dec
cmp
xchg
imul
or
orb
call
scas
inc
ror
hlt
aas
adc
popa
aad
ss
insb
add
shrl
es
xchg
pop
jp
jge
lcall
bndstx
pop
xchg
or
push
jmp
lcall
mov
lods
mov
and
xor
xchg
and
mov
fldl
lods
sarb
jae
outsl
decl
sub
addr16
jmp
negl
fistpl
cli
sub
inc
add
rcrb
jne
mov
out
lds
pop
loop
add
mov
rcll
mov
sub
je
jl
cwtl
add
out
je
repnz
cld
cmpl
ret
in
push
out
pusha
sbb
notb
lods
shrb
mov
mov
pop
sub
or
mov
xor
cltd
clc
jg
sub
jle
test
lea
fbld
les
sbb
repz
cmp
inc
enter
xchg
gs
add
mov
mov
lds
push
xchg
push
rclb
mov
sbb
arpl
sub
cltd
sbb
inc
push
bound
adc
jns
push
aad
jg
mov
rcrl
fwait
xchg
mov
add
jns
cmpsl
ds
push
flds
bound
cltd
lea
mov
iret
mov
mov
adc
call
jbe
dec
in
lea
mov
mov
and
mov
lds
loop
sbb
inc
inc
jnp
hlt
cmp
push
fisttps
in
loopne
fldenv
sbb
push
add
je
sahf
jecxz
call
cmp
std
mov
push
push
in
mov
xchg
fmuls
daa
inc
lods
pop
das
pop
cmpsb
add
xor
daa
arpl
scas
mov
fldz
stos
push
cld
mov
add
ljmp
bound
dec
and
fwait
rcl
je
leave
sar
mov
sub
clc
push
xor
jb
sub
xchg
and
imul
enter
and
aad
pop
divl
imul
sahf
dec
xor
pop
and
and
jb
mov
lods
cld
or
cmp
mov
jae
and
push
sbb
sbb
popa
sbb
jae
xor
pop
pop
movsb
pop
hlt
test
sub
sahf
pop
addb
cmp
mov
inc
lahf
mov
shll
adc
pop
dec
and
lahf
push
stc
clc
push
and
aad
ljmp
jg
dec
cwtl
lods
jno
jnp
mov
outsl
daa
cwtl
in
xor
mov
jmp
jns
in
mov
shll
and
jecxz
int3
aaa
pop
and
pop
xchg
adc
orb
mov
mov
stos
push
jle
sub
out
inc
pop
in
push
imul
and
lahf
cli
test
jp
mul
cltd
pop
or
push
and
jo
clc
idivl
push
insb
jge
scas
pop
mov
mov
cld
stos
fidivrs
std
cmp
in
sub
lods
subb
lcall
or
iret
mov
fmull
pop
xor
ds
out
leave
jmp
loopne
or
pop
movsl
adc
or
leave
push
cmp
xchg
dec
add
repnz
enter
arpl
lock
movsl
push
sti
sbb
test
mov
addr16
jb
or
pusha
mov
incb
sub
xor
ror
rorb
push
mov
xlat
rorb
lods
pushl
imul
fsubrl
rorb
divps
movsl
inc
sbb
mov
adc
pop
sbb
scas
and
dec
mov
in
or
shlb
cmpsl
jecxz
jmp
leave
repz
loope
sub
jb
push
repz
decl
test
adc
jg
das
hlt
dec
gs
jmp
jecxz
or
hlt
xchg
xor
mov
loop
adc
fnstenv
sub
pop
mov
xchg
shl
mov
adc
cmp
jp
insl
sub
stc
jb
mov
out
mov
arpl
dec
in
dec
lea
jg
adc
or
cmp
repz
in
mov
cmp
je
sbb
cmc
and
push
in
in
cmp
mov
out
or
fdivs
bound
xchg
in
outsb
mov
loope
pop
inc
popf
jl
jnp
dec
sbb
shrb
pop
loope
rcl
dec
add
and
cltd
mov
inc
mov
adc
lods
mov
pop
or
pop
rolb
jb
in
lock
fstl
popf
roll
stos
fisubrs
cmp
xchg
jp
jae
test
fisttps
or
lcall
jns
lock
fwait
mov
mov
data16
cltd
xor
ja
add
or
and
frstor
mov
dec
cs
stos
xchg
lcall
outsl
loopne
jb
add
mov
mov
cmp
out
jb
push
jecxz
xchg
dec
jbe
mov
adcl
mov
in
cmp
and
fdiv
das
sbb
lea
scas
scas
stc
pop
mov
fs
xlat
inc
fimull
xor
lods
mov
iret
test
mov
pushf
jmp
imul
ja
push
xchg
xor
lret
add
movl
mov
cmp
inc
imul
push
jg
xchg
lea
out
shlb
jp
mov
jle
inc
and
push
out
cmp
aaa
sbb
inc
pop
scas
push
pushf
inc
and
and
cmp
or
jb
mov
push
test
int3
xchg
data16
inc
outsl
push
adc
jl
pushf
and
into
outsl
adc
jb
jl
mov
sub
adc
xlat
jb
fidivrl
dec
pop
cmpsb
inc
xor
in
test
fidivl
xorb
push
movsb
cwtl
nop
imul
add
adc
cmc
lea
and
je
adc
fldenv
rorl
dec
loopne
dec
inc
adc
popf
adc
jl
or
notb
jg
push
sub
mov
addr16
in
ret
cmpsb
xchg
jle
ljmp
xor
push
aad
push
inc
lret
notb
inc
mov
inc
sub
shlb
stc
test
add
mov
out
imul
lret
and
inc
fxch
int3
jb
jns
fnstcw
pop
xchg
leave
mov
dec
or
sarb
fs
lret
dec
testb
loopne
jp
int
mov
add
xlat
mov
cmpsl
push
outsl
daa
cli
test
lret
or
mov
jbe
notl
leave
and
xchg
imul
mov
orl
frstor
imul
sbb
cltd
mov
lret
das
js
daa
and
push
ljmp
xor
mov
fmul
push
arpl
mov
and
or
and
das
mov
stos
fidivrs
sbb
jo
std
inc
out
aam
enter
inc
mov
pop
and
dec
pop
sbb
pop
cmp
int
sbb
mov
dec
fmul
xchg
sub
out
stos
mov
or
sub
test
pop
pop
dec
out
ret
mov
mov
leave
push
icebp
push
pop
xchg
push
in
xchg
add
mov
repnz
ds
shll
icebp
das
adc
addr16
in
inc
push
inc
xchg
ror
mov
aas
mov
jne
sbbb
andl
mov
xchg
fisubl
jb
dec
cld
filds
xor
sbb
jnp,pt
jo
pop
repnz
cmp
pop
push
jp
sub
push
out
push
aad
mov
lods
pop
cmc
jg
leave
jo
xor
dec
mov
xchg
ror
shrb
jo
pop
call
inc
fs
jmp
push
sbb
rcr
inc
cmpsb
idivl
ja
add
xor
lahf
ret
sub
popf
notb
pop
movsb
cmp
pushf
sub
pop
sbb
mov
sti
std
popa
cmpsl
or
sub
ljmp
jp
jge
shlb
loope
cli
mov
dec
inc
jge
pop
mov
lcall
dec
out
insl
loopne
xor
cmp
rdpmc
xor
out
shl
adc
pop
repz
pop
movsl
mov
push
adc
cmp
sbb
out
stos
repz
lods
andb
add
shll
inc
in
xchg
push
add
xchg
xor
mov
inc
ficomps
loope
mov
lahf
stos
push
fstl
inc
and
lret
add
ja
dec
inc
cmpxchg
fadds
cwtl
leave
sbb
fcmove
lods
sbb
or
lea
inc
add
jecxz
pop
and
dec
mov
xchg
mov
mov
inc
fisubrl
cli
insl
or
mov
mov
cwtl
dec
mov
pusha
fdivrs
mov
mov
or
fists
mov
dec
pop
adcb
dec
or
cli
mov
lret
xor
sti
andb
xchg
xchg
jecxz
and
ret
fimull
loop
dec
int
notb
fildl
xlat
push
jl
or
lret
jmp
out
jmp
fbld
mov
adc
lods
aas
pop
xor
cmpsl
outsl
mov
add
xor
pop
and
xchg
gs
xchg
sub
sbb
xchg
aad
cli
add
adc
data16
xor
adcb
jle
or
jbe
jle
movsb
xchg
cs
dec
arpl
into
fmuls
mov
pop
out
and
into
loopne
repnz
add
mov
movsb
not
sbb
dec
sub
popa
mov
mov
aas
add
pop
mov
rol
fdivrs
mov
inc
mov
jp
dec
pop
sub
cwtl
add
inc
bnd
lods
jae
sub
cmpsb
jo
pop
dec
dec
movsb
rep
es
jno
pop
and
jecxz
cltd
sbb
xchg
xchg
stc
enter
pop
fsubrl
lret
cmp
adcl
pop
jmp
adc
nop
sbb
and
mov
or
ss
stos
imul
mov
out
push
push
jecxz
pop
enter
inc
lods
pop
scas
push
xor
xchg
jo
int3
cmp
testb
and
mov
push
adc
fs
daa
xchg
and
jbe
xchg
nop
aad
test
aad
mov
or
jp
inc
xchg
mov
push
push
imul
lock
stos
dec
insb
fists
xchg
mov
sub
cwtl
sbb
cltd
shll
mov
pop
adc
mov
idivl
and
mov
jl
cltd
sahf
jle
fcomp
adc
add
dec
sbb
inc
inc
pop
in
cli
fwait
loop
jge
outsl
inc
or
lret
xor
leave
arpl
enter
push
fisttps
dec
popf
xor
push
or
jl
in
mov
or
cmp
fwait
jl
dec
daa
out
into
jb
mov
mov
je
xchg
pop
xchg
push
cmp
pop
in
lods
stos
mov
sbb
inc
loop
call
pop
aaa
aas
fadd
and
pop
test
insl
das
shrl
sbb
outsb
mov
pop
test
or
jbe
push
lods
mov
and
lcall
dec
pusha
mov
stos
jp
int
int3
sub
mov
mov
sbb
xchg
in
dec
push
pop
xor
ljmp
mov
hlt
inc
jnp
movsb
les
shrl
je
repnz
shl
mov
cmp
mov
std
gs
adc
sub
cld
insl
and
lods
bswap
pop
pop
cli
push
push
xor
mov
sbbl
lods
popf
xchg
inc
pop
inc
ficoml
jno
pop
int3
mov
popl
xchg
movsb
cs
jmp
loopne
dec
rclb
push
out
lock
es
cmc
aas
inc
cltd
shrb
mov
pop
out
shrl
mov
mov
lds
push
rorl
xor
cs
adc
ljmp
ljmp
sub
iret
inc
test
push
jbe
jb
in
in
daa
outsl
inc
push
jp
push
movsl
jb
filds
jnp
mov
push
fiadds
adc
inc
gs
mov
das
call
xlat
nop
jge
sub
les
xchg
adc
lret
push
push
out
test
daa
cltd
push
pop
pop
pusha
clc
sbbb
subl
add
ja
jg
cmpl
fdiv
lcall
pop
adc
jae
je
js
lea
lret
dec
popf
jae
mov
repnz
mov
adc
mov
adc
push
testl
push
cmc
dec
or
mov
cmp
and
rclb
add
pop
out
sbb
rolb
adc
stos
add
fdiv
push
ljmp
cmp
xor
dec
ret
add
sbb
orl
rolb
insb
sbb
sbbb
or
les
ja
pop
adc
arpl
lock
dec
movsl
xchg
jnp
into
icebp
out
pop
movsb
out
and
mov
clc
cmp
ret
mov
rcrl
into
dec
jno
xor
lahf
sti
repnz
and
sarb
and
push
cmpsb
push
add
loopne
icebp
jmp
xchg
bound
or
push
call
hlt
hlt
repz
in
fs
xor
lods
add
pop
mov
bound
aam
push
or
cmpsl
movd
ds
daa
jo
dec
add
pop
xor
push
inc
xchg
push
add
xchg
push
cwtl
popa
or
jge
imulb
fwait
into
push
xchg
lds
imul
insb
aad
inc
jecxz
aaa
jo
stc
jo
shlb
dec
and
mov
insl
bswap
call
mov
repnz
and
scas
inc
sub
mov
lods
sub
lahf
movsl
dec
or
packsswb
cltd
jl
repnz
and
cmpsl
into
add
outsl
pop
negb
lret
daa
adc
fwait
pop
mov
ret
lcall
jmp
or
cmpsb
cmp
loop
insl
out
xchg
enter
cmpsl
xchg
push
mov
shll
adc
pop
pop
enter
in
jbe
sbb
mov
adc
into
pushf
mulb
jno
decb
jp
fcomps
ss
scas
shll
mov
push
decb
jb
sub
into
add
repz
jno
sbb
lods
inc
sbb
push
xor
enter
ds
mov
mov
in
test
push
cmpsb
fisubs
jnp
stc
or
push
decl
popf
sbb
sub
inc
push
mov
fdivs
addr16
sar
dec
pusha
cmpb
adc
push
or
jecxz
insb
inc
dec
ret
jmp
jp
enter
test
inc
fbstp
or
dec
rcrl
mov
loope
or
fcomps
mov
cwtl
fsubrl
cli
das
call
sbb
dec
data16
mov
pusha
fistps
and
inc
insl
and
add
jbe
seta
xchg
or
push
push
push
mov
pop
pop
imul
jns
jbe
mov
movsl
test
lods
incl
xor
xor
ds
push
fidivs
dec
cmp
mov
jmp
jp
je
out
cs
mov
lds
adc
ret
popf
pushf
xor
mov
data16
aas
pusha
and
sub
outsl
es
add
push
pop
mulb
clc
jge
cmp
mov
sbb
xchg
stos
pop
jb
lock
inc
iret
push
xchg
out
notl
leave
dec
adc
rclb
xorb
dec
lahf
jne
leave
jae
lret
jmp
pandn
loopne
pop
xchg
dec
in
ja
sahf
mov
clc
sbb
stos
lret
or
and
aas
loopne
mov
jl
in
push
popf
sub
and
loope
pushf
dec
js
jae
mov
fistps
and
jp
and
cs
xlat
mov
stos
es
pop
push
add
mov
sbb
sti
xor
inc
inc
jle
sti
xchg
cmp
lods
cmp
test
insl
pop
std
xor
cmp
popa
push
sar
jb
out
sbb
dec
fdiv
mov
fidivrl
add
ja
inc
push
or
cmp
test
iret
data16
add
in
jl
xor
dec
out
jge
add
mulb
mov
dec
ja
lods
xchg
or
cmp
fbld
mov
test
push
insl
sbb
jno
jl
stos
mov
sbb
jo
add
inc
or
adc
add
or
jle
lea
sub
popa
loopne
je
pop
cmpsb
in
dec
add
les
mov
into
enter
fsubr
cmpsl
fs
dec
sbbb
dec
pop
rclb
or
xor
into
outsl
push
mov
lods
out
call
or
ss
ficomps
mov
inc
movsl
pushf
in
outsb
into
mov
dec
mov
push
scas
sbb
rcrl
pop
sbb
rcrb
push
out
xchg
dec
or
jmp
cwtl
xchg
mov
pop
jb
jle
xor
push
mov
dec
pop
sub
jns
ret
jmp
or
cmc
mov
cmp
dec
lea
lds
mov
pusha
xor
out
pshufw
aaa
sub
inc
fstpt
int
int3
mov
sbb
jmp
mov
and
int
orb
add
push
out
mov
imul
mov
fstl
pushf
lea
xchg
daa
adc
jecxz
nop
sti
clc
sub
xor
shll
ret
dec
jne
iret
popa
sbb
jns
adc
std
cltd
pushf
lret
cld
mov
stos
push
lahf
sbb
cld
push
cmp
imul
mov
sbbb
scas
inc
cmpsl
inc
mov
dec
int3
repz
out
imul
sahf
and
inc
and
movsl
js
jge
mov
call
add
ljmp
mov
cli
shlb
punpcklbw
into
fidivl
sub
jb
mov
test
inc
out
xor
mov
stos
sti
icebp
dec
mov
test
jbe
test
rolb
xchg
jo
and
push
jmp
and
push
inc
sbb
inc
in
movsb
cld
sbb
repz
sbb
outsb
inc
test
inc
xchg
test
jle
sbb
repnz
mov
push
and
sahf
jp
adc
stc
and
cmpsb
xor
or
or
stos
loope
pusha
das
pop
cmpsl
aad
push
outsl
js
mov
fmull
and
mov
mov
ror
in
sub
push
lods
shrb
mov
cmp
div
sub
insw
mov
stc
clc
and
mov
nop
cld
insl
inc
rcll
mov
rol
gs
xchg
pop
cmp
jg
cmp
push
out
jmp
xlat
aas
sahf
push
movsl
jge
out
out
je
push
das
sbb
out
push
int3
fbstp
push
std
dec
cmp
test
lods
cli
imul
or
xor
and
add
dec
hlt
sub
lds
push
jmp
fwait
or
add
orb
daa
and
pusha
mov
push
xlat
lahf
pop
dec
dec
jle
lahf
call
mov
sahf
xor
aam
push
inc
movsl
dec
fildll
repnz
push
sbb
cmp
test
int
lods
sbb
lcall
jbe
sbb
inc
sbb
fwait
add
lds
mov
xlat
out
jmp
and
ja
lods
and
adc
mov
call
ret
dec
mov
mov
fcmovne
fisttpll
rol
mov
sarl
add
pop
popa
add
fwait
aaa
inc
adc
jne
and
lods
push
dec
pop
xor
inc
push
jnp
sbb
imul
push
jmp
sbb
in
shr
pop
in
xor
cmpsl
push
xchg
aas
andb
cltd
dec
pusha
mov
lock
test
hlt
js
cmp
je
rorb
dec
daa
movsl
int3
dec
sahf
ret
leave
mov
xchg
mov
pop
fstpl
inc
pusha
dec
arpl
lcall
dec
enter
xlat
and
mov
ds
insb
in
pop
jecxz
push
shl
dec
adc
je
mov
mov
in
sub
and
mov
push
mov
mov
inc
or
cli
push
sub
inc
in
mov
or
rol
lret
add
jp
push
rcrb
std
mov
push
aam
clc
incb
xchg
push
adc
inc
leave
jp
sbb
seto
push
icebp
or
dec
fs
jnp
mov
bound
sub
outsb
and
inc
addb
sub
shrb
dec
test
adc
lcall
and
mov
pop
enter
adcb
mov
fcomps
mov
jg
and
cmc
and
outsl
push
sbb
js
jecxz
lea
jecxz
mov
popf
push
lods
pop
cmp
cmp
xor
inc
pop
pop
popa
clc
inc
cmp
out
imul
add
cli
sbb
add
pop
or
pusha
jp
push
lods
out
push
jo
mov
test
pop
loope
fdivl
fmulp
gs
push
cmp
sub
cmp
or
sub
push
scas
mov
dec
lods
shlb
mov
sbb
stos
mov
leave
sub
pop
arpl
sub
push
add
mov
jns
pushf
sub
mov
pop
pusha
lcall
dec
out
rclb
xlat
outsb
sub
cltd
rol
pop
imul
adc
dec
xchg
add
je
and
mov
xorb
andb
dec
mov
sbb
mov
xchg
sub
mov
cmp
repnz
hlt
mov
xlat
cmp
or
sbb
sbb
repz
mov
jmp
imul
xchg
sbb
ret
xor
xchg
dec
test
sbb
dec
lret
xrelease
adc
loopne
jno
xchg
in
in
fcoms
add
repz
or
adc
movsl
inc
sub
das
shlb
xchg
sub
repnz
aaa
jbe
mov
fsub
inc
push
push
cwtl
mov
in
mov
push
mov
leave
push
mov
fbld
xorl
adc
faddl
bndstx
out
jns
aaa
hlt
pop
xrelease
shll
rcll
push
aad
adc
lds
and
in
xchg
iret
mov
push
push
loope
int3
shrb
shl
into
mov
mov
xchg
bound
cltd
lods
fadds
sub
mov
faddl
mov
pop
and
xchg
sub
cmp
imul
pop
inc
jmp
mov
xchg
add
shlb
dec
push
movsb
add
fiadds
pop
icebp
push
inc
data16
sub
push
lods
hlt
mov
hlt
adc
xor
jl
sub
aas
stos
pop
or
mov
pop
lock
les
in
sub
push
inc
mov
sbb
sbb
and
sub
mov
daa
lods
idivb
push
cwtl
xlat
addb
xor
repz
push
popa
loopne
push
and
jge
jo
ljmp
lock
ss
sarb
in
xchg
sub
push
cmpsl
lds
lock
mov
addr16
fsub
std
pop
movsb
and
gs
mov
mov
xchg
xchg
xor
dec
or
xchg
xchg
cmp
sbb
out
mov
jae
stos
movsb
test
mov
in
xor
std
dec
inc
clc
ds
pop
adc
fwait
clc
push
inc
inc
sbb
arpl
pop
xchg
dec
mov
jne
bound
sbb
rcll
sub
arpl
cld
nop
pop
cmp
cld
aas
out
inc
push
in
mov
aaa
out
mov
cmpsb
mov
sti
push
aam
xor
xorb
push
cmc
cmp
dec
cmp
xlat
ret
ds
iret
pop
push
jp
sub
les
lret
rol
loop
cmp
jecxz
cs
aad
popf
pop
stos
push
cmp
lahf
jo
sbb
mov
jmp
mov
inc
leave
dec
add
shrl
aad
cmp
xor
sbb
scas
add
retw
dec
out
cmp
mov
aaa
scas
je
fadd
inc
jae
fs
pop
adc
jecxz
sbb
dec
cwtl
and
jbe
popa
inc
arpl
jl
aam
in
pop
sbb
lds
js
sti
addr16
xchg
aas
dec
and
dec
adc
or
xchg
inc
inc
out
pop
adc
fdivrs
ja
add
xor
jl
fwait
in
dec
cmc
inc
adc
jb
divl
sub
pop
in
das
lods
add
ret
sub
mov
les
outsb
aad
imul
mov
gs
or
or
cmp
cmp
mov
and
shll
push
mov
or
into
dec
adc
inc
xor
in
outsl
enter
cmp
mov
lcall
aas
int3
loop
ss
stos
inc
fiaddl
sub
mov
fnstcw
jae
lret
sbb
mov
int
cmp
sti
lret
movsl
push
jbe
iret
shrb
leave
imul
push
xchg
je
rcrl
dec
fildll
xor
cmpsb
mov
jmp
insb
pop
outsl
scas
fisttps
ja
cld
addr16
enter
arpl
pop
lret
push
lods
test
pusha
jl
in
and
rorb
xchg
mov
pusha
sub
mov
call
jmp
cld
mov
xchg
imul
lock
inc
data16
inc
fwait
imul
pushf
mov
xor
inc
popf
repnz
cmpsb
mov
jnp
push
or
lcall
or
test
adc
movsl
aad
adc
jge
clc
leave
cmp
add
mov
out
cwtl
sub
sub
jmp
sub
cltd
pop
dec
ljmp
incb
sub
pop
cmc
push
sbb
push
mov
push
aam
add
leave
out
aam
mov
inc
push
lods
pop
sbb
iret
cmp
fcmovnu
jmp
int
daa
pop
ret
clc
mov
in
mov
imul
es
push
push
xchg
incl
jb
push
pop
xchg
daa
or
adc
sbb
js
adc
dec
imul
push
adc
lds
in
leave
jl
add
imul
or
sbb
in
stos
dec
lret
addr16
push
adc
dec
sti
xchg
cli
mul
xor
mov
rclb
stos
sub
shlb
hlt
fldt
xor
mov
les
and
fyl2xp1
cmc
mov
xor
out
cmp
and
ret
push
push
pop
aas
shl
roll
push
xor
adc
test
or
rcrl
clc
xchg
xchg
add
xchg
sbbl
outsl
call
fsubrs
cmp
add
dec
rol
sub
fstps
aam
mov
pop
cmp
dec
pop
cmpsl
lcall
sub
loop
jb
adc
add
scas
add
adcb
mov
mov
mov
test
test
nop
call
xor
sti
adc
das
add
push
mov
ds
mov
in
mov
xchg
sti
or
mov
icebp
mov
popf
out
xchg
dec
mov
pcmpgtd
sub
dec
iret
jmp
dec
dec
mov
jae
mov
hlt
jg
push
jmp
mov
mov
jge
imul
push
aam
out
mov
cltd
xor
out
lret
dec
mov
lds
push
out
or
loop
cmp
adc
xorl
neg
mov
pop
sahf
mov
sbb
mov
jnp
inc
movsl
notl
dec
rorl
scas
das
jns
adc
ret
mov
shlb
push
adc
dec
mov
or
mov
imul
sbbl
add
fisubl
lea
pop
fidivrl
ds
out
js
push
mov
sub
sub
inc
popa
cmpsl
adc
xchg
jno
das
mov
hlt
push
cs
push
push
cmp
imul
divb
mov
sar
nop
add
cwtl
das
dec
jl
out
out
mov
pop
out
stos
sbb
ljmp
inc
fidivl
xor
inc
lods
cmp
fdivp
mov
or
adc
xor
cmp
pop
mov
and
icebp
xchg
or
mov
jmp
adcl
mov
push
lea
cmpsb
aad
xchg
xchg
fcomip
adc
mov
lcall
stos
mov
out
push
in
push
daa
repnz
shrl
inc
fbstp
pop
popa
js
push
and
and
rclb
and
or
mov
test
adc
stc
pop
xchg
xchg
ret
adc
sbbb
les
cmp
cli
cmc
wbinvd
and
and
push
mov
xor
scas
fdivl
mov
cli
es
scas
mov
fsubrl
psrlq
push
lret
test
fwait
pop
jbe
int3
aas
lods
jmp
mov
shlb
pop
idiv
lods
push
aad
jge
icebp
mov
adc
cltd
mov
push
aas
xchg
mov
pop
mov
into
mov
pop
outsl
sub
mov
jle
fdiv
mov
adc
cmp
jp
adc
filds
sarl
and
add
cmp
in
mov
and
cmpsl
cmpb
setp
sbb
les
or
sarb
scas
inc
imul
cltd
mov
out
lcall
jne
push
lods
mov
push
cmpsl
xchg
gs
xchg
ss
dec
jo
pop
sub
in
add
pushf
mov
in
cmp
out
sti
push
shl
add
cmp
inc
pop
aaa
daa
xchg
jp
lahf
stc
shl
rcrb
sub
sub
out
inc
sbb
jl
inc
cs
cmp
mov
rclb
xchg
mov
mov
mov
pop
notl
stos
xchg
inc
adc
mov
cltd
pusha
sbb
cwtl
loop
repz
mov
and
sarl
pop
hlt
adc
push
test
or
mov
pop
je
xor
iret
jge
jbe
add
mov
xlat
mov
test
xor
fstpt
insb
dec
dec
xlat
rorb
mov
pop
test
jg
adc
pushf
jbe
mov
cmp
ja,pn
loope
movsb
push
imul
xchg
or
int
call
aad
push
sub
les
jnp
and
jp
iret
jl
ds
cmc
lret
xlat
pop
add
jge
dec
xchg
lock
xchg
add
inc
inc
divl
jmp
push
add
out
inc
js
and
mov
in
mov
aaa
repnz
arpl
dec
fadd
popf
leave
pusha
xchg
in
out
out
cmp
inc
dec
add
push
call
sbb
outsl
mov
je
pop
je
and
mov
outsb
stos
jo
fmull
xchg
add
addr16
adcb
lock
cmp
lods
adc
fwait
sub
das
repnz
pop
dec
dec
cwtl
xchg
add
push
xchg
lock
or
mov
xor
sti
adc
mov
cld
loop
jl
mov
fbstp
pop
xchg
cmp
loop
int
ja
cld
in
adcl
icebp
adc
test
mov
sahf
jmp
mov
into
popa
xor
and
dec
fsubrl
mov
xor
cmp
push
cli
cmp
pop
lret
pop
xchg
lods
xchg
lock
lods
pop
fmul
xor
hlt
out
push
jae
or
dec
xchg
call
in
fcomps
lcall
aas
mov
xchg
xor
push
shrb
lock
xor
mov
mov
or
lret
aas
xor
jbe
loopne
push
stos
mov
xchg
enter
fucomp
pop
in
inc
jg
sub
xor
cmp
stos
jmp
addb
ljmp
loop
adc
icebp
cmp
adc
jl
sub
cmp
sbb
lret
jmp
fistpll
sbb
push
sub
pop
dec
cmp
aad
aad
or
aas
mov
sahf
clc
adc
xor
cmpsl
sbbl
into
out
pop
daa
or
sub
shrb
lock
clc
out
push
or
xchg
sub
inc
xchg
andb
mov
fs
pop
xor
fbstp
je
jnp
fdivrp
mov
cltd
dec
pop
or
mov
or
stos
xchg
cmpsb
ja
stos
call
push
mov
inc
push
in
jl
in
movsb
repnz
data16
into
loop
pushl
cs
sbb
xor
std
mov
inc
pop
adc
sub
sbb
fisubrs
insl
dec
dec
jnp
push
lret
jne
jmp
push
sub
cld
mov
testl
cmp
clc
js
lret
cmp
shl
dec
dec
cmpsb
push
mov
lret
lret
sbb
cmc
cmpsl
fsubr
jl
jge
xchg
test
sbbb
nop
sbb
sbb
inc
lret
test
in
rcl
sbb
dec
dec
stc
or
mov
and
pop
cmp
jno
mov
bound
xor
mov
mov
jns
jp
rcll
and
jo
push
std
jecxz
pop
xor
repnz
push
mull
cmp
cmp
orb
dec
jg
lea
cwtl
mov
leave
push
outsb
push
rcll
mov
repz
dec
cmp
fldt
icebp
adc
movsl
mov
fildll
mov
xchg
pusha
and
jae
pop
sub
add
inc
fadds
out
daa
pop
in
roll
mov
xor
insl
sbb
cmp
jne
or
or
jg
mov
and
outsl
mov
sbb
cmp
sbb
nop
and
sub
cli
jp
nop
adc
xchg
mulb
mov
jnp
inc
pop
inc
pushf
sbb
mov
out
pushaw
add
movsl
dec
and
out
sbb
outsl
int
cmp
mov
jge
cmp
es
xchg
xor
adcl
int3
jbe
sbb
mov
in
scas
cmp
push
imul
in
inc
dec
outsb
mov
cwtl
sbb
inc
daa
pop
insl
jle
test
jge
out
mov
xchg
jl
push
idivb
mov
xor
push
negl
addr16
mov
outsb
testl
jbe
jl
jecxz
rol
fcoml
fidivrs
sbb
clc
adc
push
movsl
mov
add
into
enter
dec
rcll
push
adc
test
inc
mov
stos
jg
mov
cwtl
jb
insl
sub
sbb
ja
imul
pop
imul
cmpsb
cmpsl
out
lea
push
add
mov
orb
incb
rcrb
lods
inc
pushf
insl
mov
arpl
jns
dec
fcompl
pusha
inc
jge
or
movsl
sub
adc
xchg
je
mov
xchg
jge
ss
cmp
mov
cmpsb
imul
mov
cmc
xchg
pop
rol
add
mov
mov
push
lret
psubq
in
add
std
push
dec
loopne
fsubl
inc
cld
jp
pop
addr16
lods
dec
push
pop
cmp
jg
mov
lret
and
mov
fs
ss
xchg
mov
outsl
or
pop
test
stos
dec
and
pop
xor
push
push
inc
fdivp
sahf
mov
daa
dec
fistps
aas
jge
fcompl
push
add
popa
fmuls
dec
pop
jp
mov
jae
xchg
jecxz
pusha
push
mov
call
neg
mov
movsl
fildl
push
dec
xorb
xor
lock
loope
dec
xchg
xchg
js
lea
ret
nop
and
icebp
incb
repnz
inc
adc
cmp
lock
mov
pop
je
sub
movb
popa
addr16
aad
dec
and
nop
mov
xor
fs
inc
lret
mov
adc
mov
fidivl
shrl
in
andb
and
mov
stos
adc
aam
mov
subl
movsb
mov
mov
add
cmpsb
data16
orb
in
adc
lea
out
mov
sbb
fnstcw
pop
mov
push
xchg
jmp
rcr
mov
xchg
sbb
dec
mov
out
mov
fisttps
cld
push
mov
arpl
movsl
lcall
sbb
sub
outsb
pop
dec
and
fldln2
adcb
adc
push
xchg
lret
cld
pop
jl
or
icebp
movsl
mov
in
mov
bound
jmp
cmp
and
mov
fstl
loopne
push
out
dec
adc
jns
das
jp
sbb
pop
and
aam
sbb
dec
icebp
imul
sub
inc
fwait
xor
cmc
and
mov
inc
mov
pop
jmp
fnsave
push
aas
icebp
jno
out
mov
fisttpl
dec
and
fucomip
mov
into
xor
cltd
or
dec
cmp
in
scas
lret
xor
ret
dec
arpl
rorb
movsl
mov
cli
and
cmp
xchg
fidivl
inc
cmpsl
or
lcall
adc
int3
daa
xor
or
test
mov
cli
repz
movsl
jmp
mov
popf
mov
fldenv
mov
cmp
in
test
aam
xor
pop
jne
adc
testl
shrb
jl
mov
sbbl
test
ljmp
mov
add
xor
pop
xchg
push
push
add
cmp
lahf
lea
pop
or
pop
mov
sti
pop
movsb
cmp
adc
jbe
sbb
push
jns
push
or
jb
dec
or
xchg
push
rcll
inc
adc
push
mov
xchg
sub
mov
cmp
xchg
add
and
nop
adc
lret
cmpsl
ss
xor
fnstsw
jmp
pop
dec
pop
sub
fisttpll
rcrb
or
pushl
divb
dec
sub
push
jmp
ja
inc
rcr
addr16
rorb
pop
cmc
in
or
or
outsb
bound
mov
add
clc
mov
mov
inc
lods
outsl
fisubrs
cmp
add
jb
lock
xchg
test
jle
inc
psubusb
dec
stc
enter
and
inc
lods
ljmp
insb
ret
xor
push
shr
push
das
sbb
mov
and
xchg
push
mov
jecxz
lret
icebp
fwait
arpl
push
jg
loopne
fldenv
or
mov
insl
or
dec
lea
cmp
dec
fiaddl
outsb
out
cltd
adc
cmp
jg
fstpl
shll
in
addr16
inc
les
call
xchg
mov
push
fst
push
or
orb
mov
lods
xlat
ror
gs
int
mov
popa
add
popf
sub
andl
stos
mov
cmp
push
mov
pop
mov
jmp
mov
psrad
fstpt
insl
sub
int
fnstsw
cmp
push
cmc
cmp
and
bound
cmp
dec
in
aam
stos
sbb
outsb
jle
dec
add
lahf
sub
pop
mov
mov
sbb
add
jno
inc
push
das
mov
ss
inc
adc
int3
ret
sub
push
dec
out
and
dec
cld
jo
test
test
push
pop
dec
rcrl
lret
inc
call
nop
out
push
sbb
dec
outsb
xor
sub
mov
loop
daa
mov
push
js
add
mov
and
mov
outsb
lds
xchg
testl
nop
in
inc
cmp
xor
leave
out
add
insl
inc
mov
xor
ds
stos
sub
fildl
fwait
inc
imul
jl
add
lds
add
rclb
jmp
outsl
testl
cs
mov
ljmp
fadd
cmp
sbb
or
pop
and
xor
paddq
scas
icebp
dec
mov
outsl
cmp
out
add
out
cld
in
dec
fs
inc
fwait
int3
aad
int
adc
dec
dec
xchg
xor
sarb
mov
cmc
push
lock
fidivl
jl
or
lods
mov
mov
jl
jno
mov
xlat
call
jo
push
lret
mov
imul
test
inc
push
jne
mov
cwtl
incb
lods
data16
mov
scas
popf
dec
lods
fsubp
adc
xchg
and
jp
mov
call
add
xor
dec
scas
rcl
sarl
loope
icebp
inc
out
pop
sub
mov
adcb
inc
scas
sahf
push
fbld
in
test
jno
mov
inc
cmc
ljmp
aam
outsl
outsb
cli
iret
push
in
mov
mov
pop
js
jnp
mov
mov
int
mov
inc
adc
mov
jp
jnp
fcmovnb
push
out
dec
add
push
mov
test
jle
add
push
or
daa
inc
and
call
cmpsb
lret
jno
stc
xchg
out
or
and
std
xchg
inc
mov
inc
movsb
jb
scas
cmp
rolb
xchg
or
into
sub
mov
ror
or
daa
icebp
insb
scas
adc
stos
sbbb
cmp
jmp
xor
call
lea
movsb
shl
push
add
inc
mov
push
repnz
in
scas
or
ljmp
fwait
lock
add
add
push
fldenv
adc
push
push
mov
jbe
fistps
out
dec
inc
pusha
add
mov
xor
jp
ja
jb
fwait
mov
popa
sbb
fmuls
mov
or
daa
dec
int
notl
sbb
sbb
fnstsw
and
insb
and
leave
push
jno
repz
ret
repz
fbstp
fidivs
mov
imul
ds
and
cmpsl
aas
adc
sbb
pop
int
imul
sub
inc
push
jge
jo
js
cmp
les
push
fiadds
orl
sbb
adc
mov
or
insb
mov
jp
in
std
mov
fdivs
int
jb
jle
xor
ds
adc
push
cmpsb
add
lahf
jmp
in
pop
mov
fistpll
popf
xor
popf
mov
sbbb
jp
filds
fsubrp
lock
inc
jg
jecxz
in
cmc
xchg
sub
pop
out
int3
jg
or
mov
jl
dec
jmp
testb
xor
sbb
pop
dec
mov
pop
les
fisubl
repz
pop
imul
in
mov
inc
add
mov
fstps
xor
das
enter
test
xor
lds
lds
pusha
les
mov
loop
push
jecxz
xchg
xlat
jp
xchg
sub
rcrl
xor
dec
imulb
leave
push
sti
ret
mov
mov
js
xor
divl
sub
dec
sub
aas
jl
inc
leave
inc
jp
mov
push
out
scas
jge
sbb
lods
stc
outsb
push
xor
cmp
cwtl
orl
call
mov
or
push
push
mov
fisubrl
pop
mov
jp
sub
clc
shlb
sbb
subb
in
cld
lods
inc
xchg
xchg
inc
bound
repz
mov
push
jo
add
mov
imul
sbb
sub
rcrl
or
shl
ja
hlt
jae
out
jae
mov
cli
sbbl
xchg
push
or
mov
popa
in
push
mov
dec
out
insl
sbb
cmp
pop
push
jns
mov
inc
sub
jg
inc
jmp
xor
cmc
mov
pusha
idivl
daa
mov
mov
arpl
imull
ret
daa
mov
adc
stc
scas
xchg
daa
mov
faddl
leave
pusha
int3
mov
add
pop
sti
popa
clc
jmp
dec
in
lods
adc
cmp
sbbl
mov
sbb
incb
into
gs
pop
scas
sub
and
push
loope
jmp
sub
lcall
cmpsl
xchg
xchg
cs
pop
cmp
stos
cmp
arpl
jmp
mov
sbb
xchg
xchg
sub
iret
mov
sbb
mov
divb
pop
pop
mov
xchg
jmp
push
sahf
jno
mov
fwait
mov
int3
aaa
aas
or
lock
fists
fadds
sbb
ja
lods
bound
or
scas
xchg
ljmp
arpl
sub
pusha
add
sarl
das
mov
into
daa
jmp
or
mov
mov
pop
ss
lds
xchg
js
jecxz
nop
inc
xrelease
mov
adc
cli
movsb
outsl
add
and
pop
or
cli
pop
push
das
in
lods
loopne
call
adc
fmuls
cld
enter
aam
dec
shrb
mov
aas
loop
cwtl
imul
sub
leave
xor
cmpsb
aam
add
aaa
fiaddl
test
pop
in
push
xchg
push
shr
movsb
add
inc
mov
jns
or
enter
mov
cwtl
das
insl
stc
add
lahf
sub
mov
push
inc
cmc
in
movsl
xchg
mov
mov
lods
mov
lret
popa
js
add
fs
or
imul
inc
cwtl
xor
jge
hlt
sub
jle
or
fsub
mov
movsl
add
rclb
push
jg
or
mov
addl
outsb
or
cmpsb
out
je
pop
popa
mov
pop
jl
push
cmp
dec
out
xor
push
sub
dec
pop
mov
lea
xchg
ds
std
pop
outsb
test
mov
pop
push
lods
jecxz
push
add
mov
icebp
mov
xchg
pop
out
or
dec
jecxz
cltd
lock
mov
test
or
cmp
ficompl
or
adcl
outsb
lahf
mov
adc
jl
sahf
jns
lods
insl
jge
in
not
cmp
rol
js
in
fldcw
sbb
jne
pop
in
mov
clc
adc
bound
push
mov
and
sbb
and
fnstsw
or
aas
lock
arpl
std
cwtl
cmp
cld
xor
lea
jmp
or
lcall
adc
je
mov
dec
rclb
cs
fstl
mov
aad
sbb
aaa
lods
mov
enter
xor
xlat
mov
out
pop
jbe
mov
adc
shrl
loope
add
jg
jns
xchg
pusha
movsb
dec
nop
daa
jle
rol
fistps
arpl
xchg
mov
xchg
into
xchg
mov
out
js
or
add
lods
sub
stos
jle
push
in
mov
inc
arpl
add
scas
adc
push
inc
test
fidivrl
fildll
sub
sbb
loop
or
mov
in
fdiv
ljmp
mov
dec
jno
xchg
out
aam
sub
push
push
mov
into
push
push
mov
or
pop
insl
xor
xchg
xchg
les
xchg
sub
insb
or
loope
fdivr
cmp
xchg
loope
iret
fstpl
and
fsts
adc
pop
in
sbb
inc
pop
cmp
pop
mov
mov
leave
sbb
xor
insl
sub
jmp
repnz
xor
xor
and
hlt
mov
dec
adc
or
sarl
loop
clc
jp
movsb
js
les
cltd
loop
inc
inc
and
mov
shlb
or
imul
cmp
xor
repnz
sahf
xchg
xchg
cmp
mov
fiaddl
test
test
push
or
fs
pop
xchg
or
jns
repz
test
loopne
cmp
rol
and
test
out
pop
sub
in
hlt
inc
cmc
xor
inc
movsb
test
mov
iret
fimull
repnz
mov
js
mov
mov
enter
push
sub
sbb
sub
xor
popf
cmp
rcll
adc
dec
xchg
insl
jns
xlat
push
pop
test
or
lea
popf
push
aam
dec
push
xlat
jle
subb
inc
push
sbb
es
inc
mov
cli
jg
stos
xorl
mov
push
fcompl
arpl
stos
or
data16
inc
fnstenv
adc
rcrl
push
mov
outsb
testl
lahf
cmpsb
outsl
push
aam
jb
ret
sbb
or
sub
inc
mov
fwait
jle
push
inc
lock
gs
sub
cmpsl
push
inc
adc
ljmp
mov
pop
sub
repnz
mov
jg
scas
loopne
jb
iret
and
pop
loop
mov
add
repz
dec
pop
insb
out
je
push
daa
aaa
fnstsw
scas
out
dec
sbb
enter
aad
lods
cs
mov
jae
les
insl
ret
fwait
mov
out
dec
testl
repnz
stos
push
add
ss
and
pop
push
leave
dec
popa
loop
loopne
test
jmp
ljmp
push
call
fiaddl
xchg
add
adc
cltd
mov
push
adc
dec
bound
and
loope
rorl
in
pop
jecxz
mov
xchg
imul
add
movsb
xor
add
pushl
add
push
iret
in
cmp
sub
in
orl
sbb
bound
pop
cmc
adc
call
outsb
iret
imul
and
adc
push
and
mov
mov
nop
aad
dec
dec
pop
jg
stc
loope
imul
jmp
pop
lcall
and
fidivrs
les
pop
xor
je
out
jnp
mov
inc
je
dec
ja
cmpsb
cmp
pop
icebp
inc
loopne
xor
addb
insl
push
out
pop
in
in
std
in
cmp
cld
lcall
hlt
mov
mov
dec
jmp
inc
push
popa
adc
clc
pop
std
pop
jns
scas
or
fsubrs
push
xor
xchg
addl
push
sbb
xchg
add
mov
faddl
mov
jae
or
dec
pop
ljmp
sub
int
pushf
mov
xor
lock
sti
aad
sub
in
les
mov
cld
arpl
dec
pop
std
or
cmpsl
mov
std
daa
pop
mov
jl
mov
and
mov
repnz
and
insl
sub
ss
jnp
inc
sahf
add
inc
pop
movsl
jno
jo
mov
cld
outsl
test
dec
add
sub
xchg
pop
pusha
dec
imul
scas
fnsave
inc
xchg
out
sub
dec
push
push
jb
pop
fcoml
mov
xchg
mov
fxch
gs
cmp
stc
cmp
jge
inc
stos
inc
xor
cwtl
push
xchg
call
lds
not
cmc
add
add
or
lcall
jne
out
cmp
lds
jmp
jne
leave
addb
xchg
mov
add
adc
loop
les
in
les
shr
pop
mov
xlat
ja
repz
cwtl
cmp
xlat
inc
les
mov
push
or
lods
and
mov
sub
mov
insl
lcall
or
dec
mov
enter
mov
fisubrl
insl
mov
lea
repz
mov
xchg
daa
packssdw
jl
dec
xor
popa
loope
push
fstl
sbb
inc
outsl
xchg
bound
adc
jbe
sbb
imul
push
jmp
or
mov
aad
fcoms
or
jp
adcl
loopne
dec
lds
clc
mov
jg
inc
mov
ret
fimuls
cltd
dec
xlat
mov
cmp
lods
sub
xor
lods
xchg
cmp
mov
stos
sbb
hlt
mov
mov
add
repnz
cmp
jo
mov
mov
add
rol
cli
inc
or
hlt
mov
fwait
mov
aad
sub
call
js
in
pop
mov
pop
shrb
idivb
arpl
sti
fnstsw
movsb
aad
jmp
hlt
js
lret
cmp
dec
sub
add
xchg
scas
imul
mov
push
cmc
mov
dec
and
jae
mov
push
loopne
wbinvd
fldenv
adcl
or
lods
pushf
jno
push
int3
inc
or
test
test
cmp
dec
cltd
or
es
adc
mov
xchg
inc
mov
jno
push
sbb
aam
es
adc
aas
movsl
sbb
shl
inc
sub
clc
ljmp
fucomip
movsb
cmp
sub
inc
adc
lret
cmp
fsubs
cmpsb
sub
ficoml
mov
repnz
mov
push
pop
mov
dec
into
test
mov
sub
das
test
push
ret
sub
xchg
fwait
imul
adc
and
test
jno
sbb
inc
dec
xchg
add
dec
adc
xor
sarb
xchg
dec
loope
fcomi
cmpsb
sbb
mov
fbld
dec
pop
pop
mov
xchg
inc
xlat
ds
jae
mov
std
mov
test
into
xor
mov
rcr
push
arpl
je
or
fs
cwtl
adc
fs
mov
mov
mov
pop
jo
outsl
jns
test
cmp
sbb
push
ja
push
movsl
push
fadd
outsb
mov
jnp
fnstsw
sub
push
or
pushf
push
mov
jno
loop
xlat
rclb
cmp
mov
mov
iret
push
jp
add
fcmovnu
dec
cmp
cmp
adc
adc
fmull
mov
shlb
jle
ret
aaa
jb
mov
jbe
aad
notb
bsr
mov
add
jae
aas
dec
test
subl
xchg
dec
sbb
flds
push
movsb
jmp
push
pop
pop
rolb
adc
out
adc
jbe
ljmp
inc
or
icebp
or
aam
pop
inc
mov
fdivl
xor
test
inc
and
int
std
arpl
pop
data16
sub
test
fs
mov
ficoms
les
cli
test
cmpsw
push
repnz
test
insl
int
fcomip
mov
in
mov
push
mov
add
aad
mov
movsb
xchg
pop
fsubl
orl
pop
adc
test
out
jb
sub
push
dec
inc
push
outsb
cmp
sub
xchg
in
mov
lret
sbbl
dec
stos
cmc
lods
loop
adc
dec
nop
popa
clc
add
xchg
adcb
push
push
repz
sbbl
push
lahf
adc
out
xor
int3
dec
mov
daa
arpl
push
mov
clc
sahf
leave
xchg
or
xchg
cmpsb
ds
lcall
sbb
pusha
cltd
in
xlat
or
xchg
pop
enter
push
pop
pop
hlt
dec
sub
sarl
push
data16
or
ds
arpl
andb
push
fwait
mov
and
adc
jbe
mov
mov
aam
push
iret
hlt
ret
mov
data16
pop
lock
inc
scas
sub
mov
insl
jle
cmp
sub
xchg
sub
out
aaa
ret
add
flds
lods
jne
std
xor
push
mov
or
add
pop
cmp
mov
and
fnstsw
jno
iret
pop
cmp
dec
dec
push
cmp
mov
movsb
ret
outsb
push
mov
call
iret
out
jb
xchg
cmc
xor
mov
pop
sub
pop
jb
mov
dec
push
test
jge
xor
xchg
or
test
jbe
pop
lods
dec
dec
push
add
bound
pop
test
xor
arpl
mov
pop
repnz
rcrb
stos
fs
or
or
jmp
adcb
pop
mov
mov
cmpsb
xor
in
push
pop
sbb
lods
sbb
dec
repnz
inc
jo
push
xlat
fdivrs
lret
xor
jp
xchg
clc
mov
mov
mov
mov
pop
cli
loopne
hlt
dec
inc
pop
pop
out
jbe
test
sbb
popa
outsb
add
jg
or
aad
fs
dec
dec
adc
imul
pop
jmp
icebp
or
adc
mov
push
ret
push
push
cmp
push
mov
xchg
xchg
pusha
into
incl
int3
gs
fucomp
push
fidivrl
sti
mov
dec
sbbb
mov
sti
lods
cld
cwtl
xor
fldt
xchg
or
enter
jo
loopne
daa
pop
mov
cli
xchg
stc
adc
mov
xor
lahf
sub
sub
std
cmp
fcoms
jmp
push
mov
mov
and
sbb
mov
inc
and
mov
jnp
push
bound
das
cmp
mov
pop
jle
out
dec
dec
ljmp
fs
or
jbe
leave
pusha
mov
dec
mov
mov
adc
lds
jae
dec
xlat
in
sbb
pop
and
out
test
sub
xor
call
sub
inc
xchg
jecxz
enter
insl
int
inc
pop
xacquire
sbb
das
das
cs
dec
lds
push
xor
push
mov
jne
mov
jg
xchg
add
sub
repz
mov
fists
push
ljmp
inc
pop
fldt
or
loop
mov
test
icebp
lcall
sbb
add
mov
lods
xor
inc
inc
push
add
cmpsb
sub
push
mov
mov
xchg
pop
aas
shl
aam
or
ret
dec
push
mov
jb
int
jb
xor
xchg
jnp
jecxz
fistpll
and
daa
inc
xchg
inc
sub
xlat
pushf
pop
jno
sbbl
roll
xchg
orb
and
mov
xor
pop
adc
outsl
lahf
call
fstpt
cmp
inc
ss
xchg
and
mov
mov
out
jecxz
mov
ja
cmp
pop
adc
cmp
mov
sbb
pop
adc
inc
test
sub
fidivs
sbb
enter
ret
mov
andb
or
xor
mov
out
and
loop
or
addb
int3
mov
fidivs
jle
jns
sti
push
and
imul
push
or
lds
mov
add
xor
xor
inc
push
ja
inc
xchg
neg
and
das
sbb
pop
sbb
xor
out
leave
shlb
inc
lods
jl
pop
add
loope
into
adc
sub
pusha
sub
mov
sbb
jmp
dec
inc
sub
rol
sub
mov
outsl
ret
lret
popa
cwtl
dec
dec
arpl
mov
clc
dec
cltd
nop
lods
and
test
jae
mov
mov
scas
mov
and
sbbb
dec
mov
dec
and
shll
dec
stos
cmpsb
jno
aas
mov
push
out
sbb
pop
imul
jecxz
inc
scas
xchg
fadds
lds
inc
and
cmpsl
lds
lock
scas
pop
or
push
or
ja
aaa
xor
lock
mov
xchg
mov
rcrb
ret
dec
hlt
movsb
fdivs
pop
cmc
xchg
push
out
fwait
test
jno
outsl
ljmp
ljmp
cmpsl
mov
pop
enter
insb
jle
and
out
push
int3
pop
or
xchg
out
mov
daa
xor
mov
movsl
xor
lret
mov
sub
ss
dec
in
mov
ret
lea
insb
mov
ss
push
rcll
mov
je
iret
mov
push
add
lcall
loopne
xchg
testl
ja
aam
and
cmp
lcall
mov
out
ja
sbb
lahf
test
loop
ds
fsubrs
sbb
scas
and
mov
dec
ds
mov
data16
jne
push
imul
les
aaa
gs
sti
cmp
or
push
mov
xchg
mov
jns
add
mov
loope
sub
pushf
mov
mov
inc
out
cmpsl
pusha
sbb
dec
and
sub
jmp
lret
pusha
stos
ljmp
pop
into
xor
cmp
mov
mov
xor
movsb
mov
or
xor
dec
pop
xor
sar
jb
ret
sub
jns
aaa
pop
mov
dec
add
sti
in
mov
mov
add
sub
sub
ljmp
mov
ljmp
stc
ja
imul
fldl
jne
aaa
vpaddb
stos
xor
xchg
add
sbb
jae
insl
cli
and
arpl
in
aaa
cmp
xor
adc
adc
xlat
or
adc
push
jl
mov
jg
in
push
mov
loopne
mov
enter
cld
iret
aad
sbb
loopne
repnz
dec
enter
jecxz
loopne
xchg
add
outsb
mov
gs
xchg
xchg
adc
xchg
arpl
test
hlt
imul
cmp
mov
je
push
out
test
pop
rcrb
mov
ja
in
and
adc
xchg
mov
jne
mov
push
repz
sbb
dec
lcall
leave
xchg
dec
fldln2
adc
test
stc
xlat
xor
shrb
pop
sti
test
xor
leave
andl
mov
ret
jge
jbe
popa
out
sbb
and
xchg
jg
cwtl
es
arpl
or
adc
fs
xchg
repnz
test
xchg
nop
mov
test
or
icebp
sub
aad
jo
idiv
and
ret
mov
insl
mov
lret
push
testl
mov
xor
dec
loope
pusha
dec
scas
jne
rep
data16
cmp
shll
rcrl
repz
shrl
out
es
add
and
incl
and
mov
xchg
push
push
ret
pop
push
lods
mov
push
pop
push
insb
scas
jno
stos
pop
adc
cmp
xor
shrl
dec
jecxz
jl
fs
pop
mov
hlt
push
mov
push
loop
push
in
dec
rcr
call
test
sub
icebp
xchg
adc
iret
push
into
gs
sub
add
cmp
xor
aaa
aas
insb
cmp
mov
inc
jmp
pop
jecxz
cmp
mov
adc
and
movsl
mov
jns
and
and
and
push
imul
sub
xor
iret
int3
and
push
or
add
popa
decb
pushf
dec
mov
loopne
ficoml
scas
inc
and
fdivl
push
sub
cwtl
pusha
out
sbb
jne
cld
insb
sub
fildll
mov
pusha
imull
dec
mov
sbb
movb
clc
pop
jge
jns
fwait
testb
outsb
add
pop
xchg
dec
in
movl
or
aaa
jne
pop
mov
sarl
loop
lahf
jg
or
test
imul
adc
test
mov
cltd
test
and
loope
pusha
sbb
stos
push
add
cmp
fdivs
cmp
std
push
and
das
lods
xchg
scas
push
sahf
sub
dec
cmp
push
mov
mov
negb
and
dec
sub
inc
xchg
pop
add
mov
pop
cmp
xor
sarb
sahf
stos
pop
cmc
adc
fmuls
loope
cmp
mov
and
dec
pop
ljmp
dec
sti
or
mov
jg
cmp
lock
jmp
out
test
mov
outsb
mov
push
add
test
shl
xchg
adc
loope
cmp
sub
push
or
or
ja
shrb
mov
jb
call
enter
sbb
repnz
popa
and
cli
rorl
dec
sub
mov
mov
cmp
and
inc
lahf
inc
push
sbb
cmp
cmp
mov
push
sarl
shrb
push
outsl
mov
out
in
pop
movsb
jne
xor
pop
std
insb
push
push
adc
dec
mov
dec
imul
imul
lds
mov
fucom
movsl
push
xor
into
data16
int3
mov
fwait
repnz
and
into
insl
push
insl
add
push
push
lahf
repnz
fmull
and
test
fs
inc
jne
lods
or
pop
cwtl
adc
jle
das
loopne
outsl
aas
aam
pop
loopne
push
inc
xchg
out
mov
push
xchg
push
push
cmp
adc
mov
push
lock
jmp
and
lret
repnz
loopne
test
add
xor
pop
fisttps
adc
int
and
rclb
pop
cmp
icebp
fidivl
mov
repnz
pop
jno
int3
push
push
sub
pop
mov
jne
test
in
pop
adc
xchg
and
les
jge
cmp
out
xchg
arpl
push
pop
inc
mov
pop
mov
je
lret
pop
loopne
xor
inc
pop
mov
sbb
leave
nop
sub
jge
xchg
xor
mov
and
inc
test
stos
xchg
fxch
push
lret
rolb
mov
scas
push
push
fildll
jno
xlat
sub
int
mov
popa
popf
mov
jns
aaa
cmp
push
lret
cld
sub
std
sbb
xchg
cmp
addl
mov
shlb
sbb
testb
rorl
inc
stos
loope
pop
adc
sub
pop
stc
daa
stc
adc
sub
mov
in
hlt
mov
fyl2x
sub
push
mov
push
call
cmp
jo
lahf
aad
mov
cwtl
lea
cmp
lods
es
pop
into
lahf
jb
lret
insl
cmpsl
stc
orl
divb
adc
loop
and
imul
or
rcrb
mov
int3
test
pop
lock
aam
cmp
test
mov
and
jno
inc
push
mov
bound
dec
imul
lock
lods
xchg
add
push
imull
xor
rcl
in
push
xchg
pop
repz
mov
clc
adc
mov
sbb
inc
add
stc
jge
pop
scas
sub
lea
dec
test
xor
push
pop
stos
add
push
xchg
mov
rclb
adc
pop
lcall
outsb
cmp
lahf
cmp
adc
pop
lods
je
pop
xorb
out
dec
xor
sqrtps
in
ret
mov
testb
aas
mov
pop
mov
add
xor
inc
xchg
and
arpl
aaa
inc
fsubl
insl
loopne
or
sbb
sbb
mov
ss
jle
or
les
or
dec
and
jg
jg
enter
add
sbb
jg
mov
xchg
jge
mov
adc
jne
push
mov
push
sbb
aam
sbb
div
mov
or
xor
repnz
mov
daa
fidivl
push
mov
repz
icebp
jg
insl
push
test
gs
mov
pop
pop
aad
sbb
jae
lods
mov
mov
pop
pshufw
sbb
cli
jbe
sub
pop
or
xchg
dec
jge
in
pop
adc
fsubrp
ds
lcall
dec
or
mov
out
or
xchg
outsl
mov
pop
movsb
shll
pop
pop
fwait
insl
nop
fstps
shll
in
out
and
js
stos
jmp
test
into
shrb
int3
lret
cmpsl
pop
divb
mov
clc
fists
sub
jmp
and
clc
pop
imul
popa
xor
testl
add
mov
fnsave
sbb
loop
push
jbe
xchg
subl
pop
les
mov
std
xchg
sub
or
in
or
ja
inc
cmp
repz
mov
movsb
or
adcl
pop
fnsave
daa
mov
pop
mov
jb
mov
add
sbb
inc
sub
and
mov
jbe
push
jo
mov
pop
or
inc
dec
lahf
dec
popa
mov
rcrl
mov
sbb
xchg
popa
sti
test
call
gs
out
or
inc
mov
xchg
repz
insb
or
add
ret
and
lods
dec
loopne
dec
cld
addr16
inc
jp
pop
ljmp
jp
cwtl
push
test
sub
fstpl
mov
xorl
mov
jae
dec
cmp
fbld
repz
in
and
imul
into
push
jmp
adc
cmp
je
push
scas
mov
popa
mov
push
add
movsl
adc
leave
mov
pop
cli
in
mov
imul
push
nop
mov
push
shlb
test
xchg
in
sub
lock
mov
int3
push
cmp
stos
mov
or
pop
xor
rol
pop
cs
sbb
sbb
clc
push
dec
popaw
or
out
mov
into
dec
lcall
push
ret
arpl
addr16
ret
pushf
or
cli
rolb
push
mov
daa
cld
scas
sbb
dec
popa
insb
in
xchg
lods
xchg
movsb
call
mov
sbb
iret
mov
imul
loope
aad
add
in
negb
mov
mov
pushf
cmp
pop
and
jno
pop
mov
add
sbb
mov
std
jmp
cmp
arpl
mov
sub
sub
lea
lds
movsl
adc
mov
jb
lret
inc
inc
jmp
jg
mov
insl
loop
out
add
xchg
add
mov
adcl
mov
je
cld
ret
mov
adc
xchg
insl
test
dec
test
cmpsl
movsb
mov
xchg
jnp
inc
mov
inc
jmp
sbb
loope
sbb
loope
sbb
sahf
and
inc
xor
mov
mov
jecxz
xor
sub
outsl
lock
jmp
dec
cmp
jg
lock
xor
sub
xchg
cmpsl
ss
movsl
mov
xlat
cmc
fcomps
js
adc
sbb
stc
sub
cmp
scas
shll
adc
adc
push
jae
jp
je
dec
fsub
pop
pop
or
mov
stos
cmp
fldt
xor
xor
dec
inc
jno
sbb
in
mov
repz
leave
jge
cli
fsubs
dec
pop
shrb
jp
or
repz
or
pop
and
fisubrl
pop
inc
ret
and
jg
gs
loopne
pop
enter
into
movsl
pop
out
cmpsb
shrl
pop
push
jbe
cmp
adc
pop
jp
stos
pop
clc
nop
add
jo
icebp
lods
pop
pop
pop
or
insl
scas
jo
push
loope
dec
dec
shll
jle
push
mov
pop
or
or
and
inc
pop
mov
fisubrl
cld
ret
xchg
cmpsl
hlt
sbb
dec
sbb
enter
sub
call
out
insl
push
mov
dec
cmp
arpl
sbb
xchg
faddp
and
jns
add
push
mov
mov
add
xor
lret
sbb
mov
push
js
mov
xchg
mov
push
sub
loopne
ljmp
pop
ljmp
xchg
jg
jne
cmp
mov
lds
roll
lods
mov
and
ficoms
enter
push
loop
sbb
loope
ret
ss
rcll
lods
cltd
je
rep
xor
pcmpeqb
mov
pop
daa
mov
pop
adc
aad
push
xchg
jo
pop
mov
dec
xchg
sub
push
xchg
popf
push
sbb
fwait
mov
mov
add
in
lcall
mov
mov
popa
cld
out
fiadds
fidivrl
repz
fnstsw
in
jae
add
js
add
sbb
xchg
lds
les
leave
ret
mov
loopne
in
and
inc
sahf
cmpsl
aaa
add
es
nop
mov
cmpsl
arpl
push
push
sbb
fnsave
push
je
xchg
stos
cmp
pop
xor
lret
repz
adc
cmovbe
add
inc
outsb
loope
orb
xor
push
outsl
fdivs
mov
jmp
or
nop
lods
iret
in
mov
adc
jp
lds
jmp
sub
xor
nop
fs
mov
fs
ds
lds
in
hlt
sbb
add
imul
xchg
jecxz
xchg
jge
dec
addr16
ficompl
push
mov
cmp
inc
add
xor
and
ret
int3
cmc
rcr
sub
adc
cmp
adc
mov
push
lea
pusha
add
cwtl
mov
shl
xchg
adc
test
sahf
xchg
nop
push
xor
pop
dec
mov
adcb
cmp
sub
jmp
inc
loop
mov
ds
mov
aam
aaa
push
ljmp
stc
inc
pop
mov
sbb
cmpsl
or
inc
cmpsb
outsb
lahf
loopne
lret
int
cld
xor
xor
jb
adc
or
rolb
dec
push
insb
bt
fldenv
shll
add
sbb
pop
cmp
or
jb
xchg
pop
cmpsb
out
mov
outsl
pop
enter
in
fs
cltd
scas
xchg
icebp
push
sbb
mov
cs
cmp
xchg
sbb
mov
jp
stos
cltd
test
add
fsubrp
push
xchg
jne
fiadds
loopne
in
xchg
ret
jmp
mov
popf
dec
adc
sbb
popa
cmp
cmpsl
sbb
outsl
ret
sub
lcall
pop
outsb
loope
mov
lahf
or
pop
push
pop
dec
stos
jge
loopne
nop
push
push
dec
fimull
repz
das
push
stos
mov
jne
lods
data16
add
in
mov
xor
outsb
add
mov
insb
or
and
cmpsb
out
sub
push
stc
or
mov
pop
adc
movsl
addr16
mov
testl
pop
jo
pop
push
sbb
addb
xchg
dec
cwtl
mov
shll
inc
je
js
sbb
mov
mov
loop
orl
mov
push
or
pop
gs
leave
dec
and
cmc
push
ficoms
insb
jge
mov
fidivrs
sbbl
int3
jecxz
mov
jbe
xchg
pop
lds
xchg
jns
in
fistps
mov
loopne
ss
out
dec
mov
lock
sub
push
mov
mov
movsl
mov
inc
push
mov
inc
cmp
and
addl
dec
adc
adc
lret
sbb
dec
xor
lds
or
inc
pop
lahf
jbe
shlb
aad
push
pop
adc
out
popa
sub
sarb
addb
jecxz
sbb
lahf
xchg
in
pushf
in
adc
ss
std
test
sarl
cli
jnp
nop
daa
iret
mov
das
lea
mov
loopne
insb
add
inc
aam
arpl
lret
dec
sbb
jb
sbb
adc
cmp
iret
sbb
cwtl
mov
in
test
shlb
or
stos
scas
orl
sub
or
data16
dec
mov
pop
dec
insb
stos
dec
ret
inc
jp
repz
dec
testl
and
push
test
xacquire
mov
push
push
nop
mov
fsubr
sbb
push
jne
cmpl
xchg
call
push
sti
sub
and
xor
ljmp
cmp
pop
mov
add
int3
jae
and
or
jp
rorl
pop
push
jnp
push
pop
and
or
lret
rorb
hlt
xor
mov
dec
fwait
adc
inc
cmp
popf
jle
divb
enter
cmp
fs
push
push
jo
lret
push
mov
jge
loope
jp
stos
loopne
shl
mov
jmp
jecxz
fadd
lock
je
mov
les
xchg
ret
pop
push
add
repz
jbe
xor
mov
jecxz
into
enter
adc
test
ds
inc
mov
push
jns
mov
aas
cmp
inc
outsb
pop
mov
ret
cmpsb
popa
dec
divl
roll
imul
outsb
insb
mov
scas
jns
fisubs
jle
mov
pop
test
or
and
out
rol
ja
jns
add
cmpsl
xchg
mov
fmull
insl
fsubr
cmpsb
sub
add
or
mov
in
test
sub
pop
data16
push
stos
cmpsl
sub
adc
mov
jg
sub
mov
es
lods
sub
test
push
fistpll
fldt
mov
outsb
loope
imulb
xor
enter
insl
lods
pop
sbb
push
scas
scas
cmp
adc
mov
cmp
sbb
mov
fisubrs
lret
movsl
add
xchg
enter
push
shl
adc
inc
out
pop
paddusb
test
jns
call
imul
adc
scas
add
xlat
popa
jl
xorl
xchg
push
cld
and
lds
fcomps
and
lods
push
fistl
cmp
std
xchg
dec
mov
or
push
out
out
ljmp
out
in
push
scas
sub
cmp
movsb
lret
mov
stos
test
xchg
inc
push
mov
ret
jae
push
mov
shll
in
fmul
imul
lds
inc
push
bound
push
pop
sub
aas
jmp
push
mov
and
dec
shrl
icebp
push
stos
add
xor
push
stc
lea
je
inc
fcmovu
pop
dec
cwtl
fcomi
xor
arpl
mulb
adcl
das
adc
xor
jne
mov
insb
andb
das
xor
sub
in
cwtl
stos
pop
adc
mov
sbb
or
mov
sti
insl
in
dec
inc
xor
xchg
inc
mov
cld
adc
and
add
pusha
jg
in
or
mov
sub
inc
cld
int3
sarl
bound
and
cmp
mov
test
sub
cli
or
stc
mov
and
add
fldl
pusha
mov
cmp
mov
fisttpl
mov
mov
fwait
push
loope
mov
arpl
mov
pop
xor
mov
es
jne
in
stos
or
and
test
rorl
jb
lret
addr16
xor
test
repnz
push
lcall
inc
mov
adc
movsb
ja
cld
jbe
stos
ret
inc
push
leave
xchg
loope
clc
jae
mov
movsl
mov
mov
xor
stos
cltd
or
out
push
mov
ret
jb
jbe
imul
push
idivb
popa
mov
pushf
dec
pop
out
mov
mov
out
pop
mov
mov
aad
in
and
cwtl
repz
jmp
hlt
fadds
rcrl
vmovapd
push
cmp
movsl
cmp
push
fwait
or
cs
mov
mov
mov
add
push
jno
pop
and
sub
xchg
or
mov
fidivl
in
test
lret
jne
sbb
mov
jbe
mov
jl
lea
cmpl
sub
xchg
dec
pop
ret
push
sub
mov
adc
xor
test
stos
jge
cmp
stos
je
push
and
xor
cwtl
lea
jmp
mov
sub
adc
sbb
cmp
mov
pop
out
sub
aad
dec
shl
cmp
in
mov
daa
rclb
adc
lret
filds
and
xchg
inc
xchg
cmpsl
bnd
or
mov
ror
xchg
sub
pop
pop
andb
aaa
jno
push
jb
cmc
mov
xorl
mov
sub
mov
js
lahf
fldcw
xor
xor
push
aam
mov
insb
add
add
adc
ss
ja
cltd
imul
mulb
push
xor
cmp
xor
loop
inc
sahf
cmpsb
sbb
pushf
inc
cmp
aas
add
mov
jmp
pushf
add
dec
hlt
or
icebp
rol
add
enter
loope
push
testl
xchg
xor
mov
sbb
sbb
sbb
or
aaa
pop
sbb
add
imul
sub
loope
mov
cmp
fstps
pop
adc
sub
mull
mov
mov
sarb
in
xor
sti
and
push
mov
mov
adc
xchg
imul
mov
es
stos
in
mov
pop
xor
pop
cmp
pop
and
ret
inc
sub
in
fcomps
sub
ret
cmp
idiv
sbb
jns
nop
push
jno
fmull
mov
dec
loopne
and
cmp
cmp
mov
xorl
cs
pop
jns
jnp
pop
loopne
dec
decl
stos
jp
loopne
dec
cltd
and
or
xchg
xor
stc
lcall
cld
lret
jl
jno
jns
repz
call
inc
sahf
out
js
fistpl
fs
jp
xchg
sub
adc
xchg
xor
adc
xchg
dec
lods
pop
sbb
loope
mov
sub
fdivp
movsl
push
cmp
lods
mov
test
sub
sbb
fbld
dec
dec
lahf
cwtl
out
sub
aas
scas
shl
pop
lock
ja
and
nop
pop
mov
adc
push
addr16
push
stc
xchg
mov
pop
ret
push
pop
jo
push
lods
push
ljmp
dec
or
bound
mov
cmp
mov
adc
jb
and
aam
addl
std
mov
cmpsb
cmp
or
inc
sbb
daa
outsb
add
adc
and
jbe
jno
call
cli
push
push
pop
xlat
sub
js
mov
dec
xchg
cs
mov
mov
pop
shrl
lds
sbb
pop
ret
jle
je
xchg
add
xchg
insb
jns
sbb
jb
fs
add
push
iret
test
mov
int3
jg
pop
sub
das
pusha
test
inc
sub
rcrb
xor
data16
rcrb
pop
mov
jns
stos
aam
pop
lods
lcall
and
push
mov
pop
loop
shrb
add
pop
jns
decl
dec
rorl
cmc
push
jb
mov
test
xchg
mov
ss
out
mov
pop
or
rcrl
jbe,pt
jno
cmp
mov
loop
les
add
cmp
int3
pop
mov
inc
cmp
jnp
jecxz
sub
push
out
push
stos
lea
lea
cmp
add
jns
or
xchg
jle
mov
inc
adc
js
cmpl
loopne
movhlps
inc
fmuls
xor
xor
es
push
push
movsl
test
xor
cmpps
sub
lock
mov
xchg
test
sbb
and
loope
inc
add
mov
inc
sti
icebp
imul
std
mov
pop
xchg
inc
in
std
imul
and
scas
loopne
xor
adcl
enter
setb
mov
adc
lea
xor
mov
jno
test
push
fsubl
mov
std
in
sbb
push
pop
scas
clc
popa
stc
je
xchg
xor
pop
jmp
or
jne
mov
and
or
lret
cltd
sub
inc
in
xlat
fadd
aam
xchg
sub
mov
push
jb
test
mov
sarb
shrl
dec
add
push
insb
add
adc
imul
ja
jno
push
movsl
sbb
test
pop
out
jno
or
dec
push
hlt
aas
iret
mov
jp
fwait
sbb
lock
js
lcall
popf
pop
roll
or
and
mov
mov
rep
dec
mov
mov
fsubs
mov
mov
lret
jle
imul
sbb
sub
cmp
xor
xlat
neg
dec
fs
push
cmpsl
lea
mov
mov
add
sub
fmuls
and
outsl
push
fldl
xlat
mov
mov
inc
cmc
jmp
popa
movsb
rorl
xchg
loope
je
xchg
cmpsb
xchg
inc
std
jnp
fcomi
mov
fstpt
adc
sub
cwtl
mov
jb
lods
pop
std
jbe
pop
sti
jnp
sub
and
and
icebp
dec
lcall
mov
push
sbb
daa
jl
push
mov
push
leave
sub
into
or
stos
mov
test
lret
push
jmp
jo
push
shll
or
stos
test
push
xchg
push
gs
jb
mov
frstor
sub
or
bound
int
roll
xor
inc
imul
and
imul
lock
adc
loopne
std
xchg
inc
sti
lahf
mov
lahf
lret
shll
add
xchg
dec
in
dec
cmp
repnz
stos
fistpl
xor
mov
dec
mov
in
aaa
mov
int
cmp
mov
xchg
or
cld
aaa
mov
popf
inc
ficoml
jecxz
loope
mov
jecxz
mov
aas
cmp
jae
aam
addr16
ficoms
fsubs
and
push
insl
mov
mov
iret
mov
cmpsl
movw
ret
test
pop
les
sub
fwait
xchg
cs
pop
mov
jmp
jns
outsb
xor
mov
idivb
sub
sub
sarb
loope
push
enter
insb
mov
xchg
cmp
orl
sbb
push
dec
push
stc
xchg
sub
insl
jae
pop
xchg
stos
pushf
push
mov
lock
popa
mov
in
lcall
xor
cs
dec
ret
jmp
shll
xchg
pop
add
movaps
adc
jbe
scas
movsl
jl
sbb
mov
sbb
adc
jmp
sub
mov
sarb
push
sub
jp
ss
mov
add
add
ffree
adc
es
into
mov
shrb
push
fs
in
jge
jmp
ret
jnp
insl
pop
loope
pusha
or
shrl
cmp
push
jl
mov
mov
ss
mov
ljmp
insl
push
imul
repnz
cmp
xor
mov
mov
and
xor
sbb
sub
movsb
push
sub
mov
ret
xor
lock
es
aam
lock
mov
xlat
adc
xchg
cmpl
fcomps
push
lods
and
inc
icebp
out
enter
mov
push
scas
pop
fdivrs
mov
les
mov
pop
hlt
scas
mov
or
int
dec
dec
adc
add
mov
sahf
xlat
fwait
sidtl
add
enter
jg
push
jns
stos
jae
lods
movsb
int3
repnz
jns
hlt
push
lcall
inc
bound
mov
and
dec
mov
nop
jmp
jns
repz
jns
pushf
gs
cmp
jge
sti
and
dec
lcall
or
test
andb
int
mov
lods
rolb
jmp
dec
adc
sbbb
leave
xor
cmp
dec
mov
jbe
imul
pop
push
in
addr16
pop
ss
je
xor
leave
dec
test
arpl
inc
fcom
sbb
ljmp
dec
xor
lock
fimull
adc
mov
std
fidivrs
jae
dec
xor
pusha
fistpll
in
xchg
ret
rcrl
into
loop
push
popf
lods
xor
movsb
movb
call
je
sahf
inc
repz
int
fwait
push
dec
int3
sahf
test
inc
in
or
cwtl
nop
and
xor
pop
add
fs
leave
cmp
sarb
and
iret
mov
popa
leave
pop
lahf
mov
fcompl
mov
mull
enter
mov
test
lock
pop
fstpl
sub
fucomp
pop
mov
mov
cmp
sub
fistps
push
mov
cmp
push
inc
mov
add
ficompl
push
adc
ss
push
jge
sbb
sti
dec
pop
inc
loope
xor
xor
sub
jp
insb
and
or
jmp
leave
in
push
push
test
mov
mov
jnp
xor
ljmp
out
mov
lret
imul
js
loopne
popa
cmp
mov
iret
pop
lock
add
leave
sbb
push
enter
idivl
ja
pop
loope,pt
sbb
inc
xorb
mov
rolb
fwait
aad
insl
pushf
add
das
push
push
dec
cltd
adcb
pop
enter
jnp
mov
shll
cmp
and
inc
fidivrs
fwait
je
repz
test
cmc
mov
mov
out
add
cwtl
mov
pop
daa
repnz
aad
es
xor
pusha
repnz
mov
test
lret
int3
aad
pop
cmc
cs
ja,pn
pop
lcall
loopne
mull
popf
or
clc
ja
es
jmp
dec
fcomps
jp
push
xor
scas
dec
idivl
or
lahf
adc
or
cmp
out
sti
fldz
mov
adc
jp
repz
scas
mov
pop
dec
or
or
shl
cmp
and
mov
mov
jmp
daa
mov
movsl
out
les
xchg
into
int
mov
test
adc
sbb
loopne
lret
sarl
gs
inc
call
and
ja
pop
into
shrb
add
loop
in
jae
add
push
lahf
mov
in
hlt
mov
outsb
xor
scas
pop
dec
subl
xchg
std
leave
fs
orb
dec
jmp
inc
add
xor
stos
popf
clc
je
pushf
scas
test
std
divb
inc
je
xchg
push
jl
jle
xchg
push
lds
hlt
adc
ret
roll
leave
dec
fdivrs
aam
or
lcall
lahf
cmp
out
inc
mov
sbb
mov
rorb
mov
ret
mov
jns
or
outsb
jns
out
imul
fs
adc
adc
testb
filds
adc
dec
mov
xor
cmpsl
data16
jl
xor
sbb
outsb
dec
push
push
loop
shrl
dec
pop
out
hlt
daa
lods
push
ficoms
cli
sbb
out
les
jecxz
idivb
push
incb
dec
in
xchg
cli
xchg
adc
out
fs
sub
xor
push
sbb
add
idivl
fmuls
xor
mov
mov
mov
inc
push
clc
add
das
push
ret
outsb
and
cwtl
xchg
pushf
jno
ret
subl
add
push
mov
cmp
push
daa
dec
test
into
mov
stos
inc
adc
pcmpgtd
xor
rolb
inc
aas
and
aam
xor
pop
sahf
mov
sub
mov
mov
mov
das
push
mov
nop
add
lcall
jecxz
in
ret
xchg
pop
dec
rolb
or
xchg
jg
nop
scas
testb
je
cmp
jnp
mov
and
flds
addr16
enter
fdivl
sbb
lret
insb
pushf
jecxz
sbb
and
push
push
das
repz
dec
call
mov
aas
fbstp
pop
in
inc
mov
call
pop
addr16
add
into
popf
cmp
jle
jno
loope
or
mov
out
pushf
xchg
cmp
mov
dec
cmp
dec
mov
add
sub
xchg
jecxz
cld
pop
xor
xchg
aaa
clc
in
into
fcoml
test
add
test
dec
lret
pop
jbe
jne
clc
xlat
insb
les
and
das
fstpl
nop
dec
pop
imul
inc
popf
pushf
xor
repz
cltd
cmp
outsl
xchg
movw
lret
xchg
test
pop
hlt
loopne
mov
pop
movsb
xchg
jno
adc
notb
sub
mull
adc
adc
fdivl
push
iret
pop
mov
xchg
in
es
imul
test
roll
push
cmpsb
scas
sub
lcall
fidivrs
mov
xor
cld
inc
push
stos
gs
add
sub
and
lcall
push
outsb
int
sub
pushf
loop
lret
inc
lods
ljmp
inc
fsubl
mov
inc
fidivl
mov
mov
test
test
aaa
ret
push
lret
lea
cmp
or
les
push
repnz
lods
mov
test
and
adcl
decb
mov
dec
out
cmpsb
or
rcll
xor
or
fidivrl
popf
pop
stos
mov
scas
mov
mov
sub
xlat
lds
pop
cltd
inc
jp
ret
adc
mov
mov
mov
mov
push
xlat
daa
inc
aaa
xorl
mov
aad
sub
jmp
cmovle
sub
imul
aad
push
sub
cld
mov
mov
dec
insl
stc
jb
lahf
lods
jmp
inc
movsb
add
push
push
test
jo
jmp
dec
hlt
inc
inc
pop
aam
dec
jecxz
jbe
clc
xchg
jnp
add
sub
stos
ss
sub
mov
push
or
sarl
push
push
iret
mov
mov
idivb
pop
jp
adc
shr
data16
addb
cmp
aam
add
or
push
test
jle
cltd
add
adc
imul
aas
ret
call
movl
test
adc
ret
ret
in
xchg
loop
int
cmp
in
push
xchg
jne
test
mov
jns
testl
jbe
int
sbb
mov
daa
in
xor
aad
push
push
mov
sbb
mov
push
mov
or
jmp
xor
stos
mov
push
jecxz
invd
mov
dec
out
int3
lcall
push
mov
adc
imul
jno
jp
mov
iret
xchg
mov
cmp
repnz
and
ret
xchg
push
jb
pusha
cmp
sub
mov
mov
bound
icebp
insb
js
xor
push
mov
mov
fisttpll
cli
ds
pop
ljmp
scas
adc
roll
mov
aaa
movsb
outsb
shll
xchg
xchg
cmp
jbe
push
cmp
outsl
pop
addr16
mov
pushf
rcrb
sbb
aaa
dec
daa
mov
fsubr
pusha
cs
notl
pusha
into
add
xchg
repz
jp
sbbl
inc
sbb
push
neg
adc
push
dec
mov
pushf
jne
insl
out
fdivl
ljmp
cmp
inc
jle
jp
dec
imul
rcr
cld
lcall
lea
jge
cmc
xchg
cmp
in
test
in
add
cld
leave
fxch
addr16
js
inc
mov
js
inc
scas
pop
dec
mov
dec
lret
jb
sbb
or
into
lcall
in
imul
jg,pt
push
nop
mov
popa
outsl
cmp
ret
out
jne
lahf
dec
hlt
in
cmc
andl
and
notl
jnp
out
mov
dec
pop
scas
push
icebp
js
mov
pop
mov
int
or
dec
mov
pop
or
scas
xor
mov
enter
mov
jns
ljmp
iret
dec
loope
add
dec
xlat
iret
into
arpl
add
cwtl
js
lcall
fistps
adc
dec
pop
cltd
cmp
call
or
outsl
inc
xor
iret
lret
jae
inc
lods
lods
nop
mov
lds
push
nop
jecxz
lds
sbb
cmp
jecxz
lds
mov
jge
stos
nop
imul
iret
push
movsb
pop
movb
pop
push
addr16
movsb
fbstp
mov
mov
dec
mov
ret
andb
sbb
outsl
ficoms
sub
adcl
inc
imul
xor
xchg
stos
cmp
stc
push
inc
stc
jnp
mov
mov
fbld
aam
filds
pop
scas
and
cmpsl
shr
iret
sahf
sbb
fidivrl
inc
mov
movsl
and
cwtl
lock
sbb
dec
shlb
or
cli
and
rcrl
stos
xchg
dec
fidivrl
xor
hlt
ret
mov
mov
jmp
pop
sub
aaa
lcall
or
js
push
popf
pop
test
mov
mov
ds
push
sbb
cmp
insl
push
aad
jne
es
pop
pop
mov
cmp
cmp
gs
pop
xchg
insb
mov
gs
pop
inc
or
out
push
aad
fldcw
daa
inc
ljmp
out
cmp
pushf
out
scas
or
push
xchg
jl
cmp
and
aam
jle
mov
sub
mov
mov
outsb
stc
jle
xlat
daa
sbb
pop
out
lock
sub
cmc
mov
scas
and
and
cmp
gs
xchg
jo
sbb
mov
inc
push
jne
xor
push
push
push
lcall
or
mov
repnz
faddl
lea
repnz
and
push
ja
iret
es
mov
lods
dec
inc
mov
add
and
cmp
cltd
insb
mull
sarb
jb
idivb
adc
sub
sbb
ror
aaa
cmp
jecxz
or
push
push
cmpsl
sub
call
int
ja
fidivrl
movsl
mov
js
inc
test
test
inc
cmp
push
dec
daa
jb
test
mov
fwait
rcl
cwtl
sti
xchg
cli
in
adc
xchg
add
aas
test
add
xor
popf
dec
pop
dec
pushf
cli
xchg
into
push
imul
and
jae
sub
pop
add
cmp
add
js
jnp
fiadds
cmovl
and
stos
mov
push
xor
jnp
pop
pop
cld
mov
cmp
lahf
das
lahf
cmp
add
adcl
sahf
inc
mov
scas
js
sbb
stos
and
jle
mov
das
pop
ret
rcrl
inc
and
ds
inc
bound
imul
cmp
dec
push
ret
mov
cmpsb
repz
adc
lcall
push
inc
sbb
mov
mov
and
mov
ror
aad
mov
mov
or
fbstp
push
stc
adc
cmpsb
pop
into
jns
jl
bound
rorl
in
sub
dec
shrl
or
aas
mov
pop
push
push
xchg
test
rcl
push
mov
push
sub
mov
mov
push
push
adcl
popf
mov
mov
rcrl
out
flds
mov
test
inc
cmp
sbb
pop
add
sahf
mov
das
push
insl
xchg
dec
inc
stc
dec
add
pop
enter
imul
jbe
or
jmp
push
lods
or
outsb
aad
addb
fwait
sub
popa
aas
scas
pushf
out
pop
pusha
test
xchg
push
scas
mov
addb
jecxz
or
mov
repz
add
shll
mov
sbb
loopne
test
lock
into
and
jns
int3
and
xchg
push
in
pop
mov
sub
pop
sbb
and
and
int3
mov
jl
push
loop
insb
je
xorb
sbb
pop
cmpsl
xchg
xchg
xor
add
addl
jp
adc
push
sti
leave
int
iret
mov
fucomp
cmp
adc
rol
mov
sub
outsb
push
lods
xchg
adc
push
leave
popf
arpl
sbb
inc
push
sub
bnd
mov
inc
pushl
mov
cmc
mov
out
in
adc
mov
out
sbb
cmp
clc
sbb
xlat
imul
mov
hlt
sbb
mov
xchg
cld
cmp
imul
aam
dec
add
xchg
jns
push
push
pop
test
dec
inc
into
jne
mov
sbb
movsb
loopne
outsl
jb
dec
lret
nop
lods
cmp
out
cmpb
pop
xchg
push
push
loopne
test
mov
mov
push
cmp
add
bnd
nop
xchg
mov
mov
pop
notb
iret
lcall
loopne
outsl
rcll
imul
mov
es
pop
mov
push
loopne
int
ss
adc
insl
iret
push
fistpll
ss
pop
cmp
mov
push
and
and
mov
pop
mov
xor
lock
pop
adc
xchg
jnp
lock
cmp
mov
add
mov
test
cmp
cltd
in
in
lahf
inc
mov
shlb
aad
mov
mov
pop
fld
adc
mov
inc
rol
leave
into
and
xchg
enter
das
ljmp
in
sbb
mov
lds
push
jp
test
into
fdivl
jnp
mov
xor
adc
sbb
xor
or
jle
in
pop
mov
lds
fwait
xchg
push
inc
cmpsb
cmpl
sahf
fists
dec
cmp
inc
jo
or
call
nop
mov
and
push
ljmp
xorl
clc
fiadds
pop
out
aaa
ljmp
push
jle
jmp
aaa
inc
push
jno
mov
je
outsb
jg
pop
push
sti
shll
jns
xchg
dec
cmp
jns
mov
jecxz
outsb
in
inc
inc
xchg
jbe
or
pusha
aad
cmpsl
add
jne
pop
cmpsl
dec
fs
stc
dec
cltd
pusha
out
xchg
scas
add
lea
inc
push
sub
ret
push
notl
mov
jo
adc
insl
je
arpl
mov
dec
andl
cmp
sbb
shr
js
push
adc
lret
and
push
shll
push
adc
loope
xchg
mov
lods
dec
cmp
lds
mov
cmp
jne
out
test
lods
lret
adc
fs
mov
sti
or
mov
rcpps
sbb
hlt
or
mov
shll
shll
lods
mov
dec
jl
iret
shll
adc
cld
sbb
mov
adc
sub
repnz
ret
rcrl
add
popa
js
xchg
rcrl
aaa
or
mov
mov
cmp
or
fdivrs
sbb
mov
adc
and
dec
fstps
jae
mov
mov
mov
out
loope
icebp
mov
mov
and
or
cmpsb
cmp
xchg
pop
pop
ror
rcl
sub
pop
cmp
jge
movsb
cmp
and
sarl
jmp
test
sbb
cmpsl
addb
cmp
nop
pop
ds
xchg
mov
mov
aaa
jg
jmp
pop
fdivl
rolb
mov
xchg
cmp
rorb
adc
inc
lret
mov
jb
out
xchg
xchg
insl
sbb
ljmp
xchg
in
mov
push
fdivrl
xor
xor
aam
dec
sbb
mov
jge
filds
sarb
or
das
cmp
iret
std
xchg
add
push
sub
sbb
cmpsb
jno
pop
sub
dec
sub
xchg
cwtl
icebp
leave
cmp
xchg
in
ljmp
cmc
movsl
in
loop
push
sbb
or
inc
pop
out
sub
stos
inc
shll
cmp
sub
push
insb
add
mov
adc
xchg
adc
push
mov
push
shl
mov
xor
pop
insb
ret
rcll
cmp
jb
hlt
jge
mov
or
ss
sbb
pop
push
popf
lahf
sbbb
xor
addl
jbe
mov
dec
fbstp
popf
outsb
jne
iret
out
sub
test
push
inc
lock
mov
and
rcrl
repnz
cli
cmp
int
add
lods
ds
xorb
scas
mov
cld
nop
push
test
inc
cltd
dec
leave
fdivl
in
dec
in
test
insl
mov
push
mov
test
fldt
xchg
loopne
lret
mov
lods
movsb
inc
or
cli
add
ficomps
jb
jmp
js
leave
jno
rolb
bound
cmp
insl
cmp
jo
lret
gs
std
cmpsl
xor
in
punpckhdq
mov
das
in
mov
shrb
fldl
das
out
pop
lahf
inc
adc
pop
mov
fidivl
mov
outsl
rol
add
or
and
in
inc
out
mov
jle
jb
jae
sbb
cmp
outsl
inc
fisubs
roll
enter
mov
jg
push
test
mov
loope
push
or
int3
dec
jne
out
shll
dec
lcall
pusha
inc
xchg
sbb
pop
adcl
sbb
ret
xchg
ret
mov
fimuls
add
cmpsb
cmp
stc
push
and
pop
jge
testb
cmp
sub
in
pop
mov
verr
lcall
mov
cs
bnd
and
jae
mov
ret
notl
cmc
fdivs
out
ret
lahf
or
cmp
stos
push
test
push
lock
xchg
lcall
lret
data16
les
imul
addb
icebp
xor
push
test
xor
push
push
fdivl
in
jb
imul
or
adc
dec
dec
cmp
dec
sub
fmuls
jb
mov
adc
or
lret
cmp
push
adc
adc
imul
cmp
cmpsb
mov
push
or
scas
idiv
cmp
rcrl
imul
sbb
mov
pop
mov
pop
pop
hlt
lret
cmp
mov
xchg
stos
lds
push
test
mov
mov
push
cmpl
cmp
push
iret
movl
roll
xchg
or
sahf
int
fimuls
sbbl
sbb
idivl
push
shrb
pop
xor
mov
ficoms
daa
test
xchg
xor
hlt
test
shlb
fidivs
mov
insl
add
data16
add
sbb
mov
push
mov
sub
jg
xchg
pop
mov
push
in
loop
mov
in
add
add
xor
pop
xorb
imul
mov
mov
stc
fwait
pop
and
daa
xor
pop
mov
out
adc
out
repnz
fwait
xchg
jge
clc
inc
popa
hlt
lret
xor
push
cltd
jo
popa
pushf
and
testl
pop
scas
int3
mov
aad
inc
rol
int
jne
stos
sub
jo
cmp
cmp
negl
xor
sbb
dec
int
jns
xor
in
pop
sahf
or
jl
sti
mov
popa
stos
insb
mov
call
cmp
ss
adc
clc
stos
adc
outsb
mov
dec
push
sbb
fnsave
mov
lods
cmp
sbb
mov
mov
fsts
mov
push
push
push
pop
dec
sbb
xor
decb
shlb
jbe
outsb
sub
push
add
cmp
call
jbe
push
sub
jmp
cmc
scas
inc
fcmovu
lahf
jp
jns
popa
xor
out
pop
lret
adc
cmc
push
xor
std
jnp
xor
sbb
adc
outsl
and
les
dec
cmp
movsb
loopne
add
fdivrs
pop
mov
insl
insb
or
push
mov
push
rcr
out
stos
cmpsb
inc
mov
adc
test
cmpsb
imul
notl
ret
lds
cmpsl
stos
repz
xor
and
inc
sbb
jns
cmp
jno
inc
popf
roll
test
sbb
dec
jbe
gs
adc
pop
pop
mov
cmovge
lret
stos
jnp
inc
jne
pop
shll
xchg
loope
cmp
dec
pusha
xchg
jge
inc
cwtl
sbb
pop
sbb
sbb
jecxz
test
mov
out
mov
mov
sarb
push
adc
mov
inc
insl
into
add
xor
sar
push
dec
and
mov
pop
or
sub
pop
inc
cli
add
and
enter
lea
sub
push
adc
rcll
into
mov
std
jl
loopne
filds
mov
push
jb
jge
xor
or
std
lret
push
inc
mov
add
pop
repz
jns
xchg
call
fsts
push
in
movsb
divl
leave
mov
mov
sar
fsubl
jg
adc
cmp
clc
sbb
push
adcl
movsl
inc
cs
stos
mov
mov
insl
les
dec
dec
gs
and
jo,pn
sbb
clc
ret
add
gs
scas
cmp
push
popa
xor
adc
out
pop
ja
cmpsb
xchg
pop
xchg
and
mov
sbb
jmp
lea
push
xor
jp
std
xchg
adc
cmpsb
dec
push
leave
push
jne
fimull
push
jo
pop
ret
push
fsts
cli
inc
cli
shrd
cmp
fcomps
or
icebp
fs
jo
or
mov
enter
pop
insl
push
dec
add
xchg
sub
imul
enter
popl
mov
cmp
test
dec
xor
imul
mov
jb
enter
add
ret
xor
pop
lcall
cld
push
or
data16
lret
lret
out
push
inc
sahf
push
and
xor
or
xor
or
cmpb
lahf
pop
mov
xchg
fwait
xor
mov
test
sub
pop
ja
sub
xchg
mov
mov
push
jge
icebp
or
lods
pop
hlt
fnstsw
push
add
in
push
xchg
jge
lret
fsubrp
adc
cmp
test
enter
jnp
imul
sbb
ds
in
jns
stos
div
mov
mov
in
pop
sbb
cmp
je
aad
lret
ret
dec
jmp
mov
stos
xchg
dec
adc
add
mov
aam
aam
pop
and
hlt
mov
cmp
fldl
and
add
adc
mov
fistpl
or
pop
xor
mov
mov
pop
sbb
rcrl
sub
add
dec
loope
enter
xchg
mov
shl
dec
inc
add
lods
inc
fsubl
fldt
or
inc
lods
in
xchg
xor
ret
test
cmc
aas
in
cmp
cmp
push
xchg
sub
in
add
sub
sahf
jmp
nop
sbb
ret
sahf
push
and
lret
bound
cli
jmp
pop
mov
sbb
lods
push
push
imul
xor
fs
add
xchg
dec
lea
sub
pop
cmp
pop
in
mov
lock
add
jmp
or
jbe
cmc
sub
xchg
and
fwait
sti
push
xchg
mov
pop
addr16
ja
dec
jecxz
jb
xchg
add
imul
jp
sahf
jmp
and
imul
incl
adc
cmp
insb
adc
rcrl
pop
adc
fdivrl
test
popa
mov
icebp
int
call
cld
int3
push
mov
jae
sti
xor
mov
mov
aad
mov
adc
dec
inc
das
jne
aam
ret
mov
cmp
in
in
cmp
jo
shr
and
dec
mov
lock
jge
and
xchg
mov
sbb
aaa
dec
mov
cmp
jecxz
mov
or
aas
push
out
cmpsl
daa
lcall
adc
loop
dec
add
sbb
adc
rcl
call
or
xchg
push
enter
dec
add
daa
adc
dec
lret
pop
mov
jmp
and
push
cmp
pop
pusha
call
jle
in
xor
test
roll
data16
sbb
imul
cmc
sbb
data16
mov
popf
lods
cs
test
xchg
out
xchg
je
inc
test
leave
adc
or
leave
cmpsb
test
sub
xchg
rol
dec
addr16
xor
fidivl
fninit
jle
adc
adc
lret
call
jle
and
aad
fcmovb
xchg
adc
push
subb
pop
xchg
add
es
loop
je
in
dec
rclb
mov
or
pushf
mov
sti
lock
mov
rorb
mov
jae
xor
or
push
xor
mov
jmp
test
fstpt
out
fidivl
mov
ljmp
mov
mov
push
cld
mov
gs
rcrl
icebp
and
xlat
xlat
sbb
js
cwtl
cmp
fnstsw
cmp
and
jae
cmpsl
adcl
stos
inc
scas
fcomps
out
test
popf
int
int3
dec
or
jae
inc
pop
sub
in
push
orb
mov
push
lahf
out
mov
movl
fidivl
cmpsl
adc
rcl
add
out
cld
push
lea
in
ret
pop
jns
jmp
out
and
cmp
jb
sbb
int
jg
sub
cmp
ljmp
jb
fnstcw
out
stos
xchg
addr16
jbe
int
mov
xchg
notl
shll
mov
out
add
add
ljmp
pushf
scas
outsb
and
xchg
repnz
cmpsb
adc
mov
mov
or
int
adc
shlb
pop
mov
sub
cld
outsl
loope
lahf
push
mov
pop
loope
inc
fiaddl
inc
lds
loop
and
mov
jb
inc
add
pop
dec
xor
int3
arpl
bound
ljmp
or
cli
xchg
dec
push
mov
imul
mov
cmpsb
push
xchg
pop
or
sbb
mov
rorl
push
mov
mov
inc
mov
mov
jmp
clc
sbb
out
ret
frstor
adc
fucomp
ds
lahf
out
call
jmp
inc
inc
mov
fistpll
xchg
ja
pop
mov
je
xchg
dec
cmp
mov
mov
inc
cld
std
pop
dec
fcmove
cltd
arpl
lret
mov
xchg
shrl
popf
jge
pop
jae
popf
sub
mov
push
lods
scas
or
std
adc
cmp
xor
scas
out
loop
and
loope
shr
xchg
pushf
leave
test
loop
fndisi(8087
xor
and
and
rolb
fnstsw
push
in
stos
pop
xor
bnd
leave
cmpsl
cmpsl
hlt
outsl
inc
jo
fldcw
cmc
mov
stos
shl
mov
jmp
mov
gs
mov
mov
stos
outsb
sub
in
add
scas
dec
pusha
sub
xchg
sbb
adc
lds
test
lret
push
or
sub
in
mov
jg
xorb
das
add
inc
and
inc
pop
adc
out
mov
sub
sub
outsb
jl
fwait
bound
inc
push
adc
fcompl
stc
and
lcall
stc
mov
aaa
hlt
push
add
xor
jnp
into
cmp
loop
and
sub
add
adc
xchg
jp
mov
in
repz
shll
sbb
in
les
mov
into
test
cld
or
or
rcll
loope
mov
cmp
pop
xor
out
add
xchg
pop
jl
mov
cmc
jne
test
leave
es
lahf
pushl
shl
xor
fidivs
xchg
add
mov
cld
scas
rcll
jmp
push
stos
jmp
jne
fs
loop
stos
cld
or
jg
sub
push
aam
subl
dec
fs
into
das
cs
inc
sahf
ret
push
sub
scas
sbb
jg
fidivl
shll
rorl
sub
jecxz
xchg
mov
outsb
loop
int3
mov
outsl
aam
xchg
cmp
imul
lcall
inc
hlt
mov
jg
in
xor
cwtl
xor
xlat
test
std
imul
xor
pop
mov
jne
dec
adc
jle
and
pop
sbb
mov
ds
int3
insl
out
decb
mov
sub
les
or
jecxz
test
jl
and
pop
std
sbb
inc
inc
cli
rol
ss
pop
fucomi
mov
jno
mov
xor
xchg
adc
xor
xor
in
pushf
dec
jo
xchg
rcr
or
xlat
hlt
and
jb
xchg
mov
ret
pop
add
ds
mov
mov
jbe
push
sub
repnz
mov
inc
scas
jno
clc
sbb
pop
jmp
test
sbb
into
lahf
mov
in
fimuls
mov
push
scas
xchg
test
add
push
lahf
pop
mov
sarl
mov
in
pop
pop
cmp
dec
clc
xlat
lods
loop
xlat
adc
sbbb
fildl
and
pop
push
hlt
rorl
rcrl
loop
imul
andl
movsb
pop
cmp
xchg
mov
mov
push
push
inc
adc
out
scas
mov
ljmp
xor
imul
mov
mov
xor
insl
fstpt
push
sbb
sahf
iret
jae
leave
jno
outsb
shlb
pop
in
dec
pop
lods
sbb
aas
je
in
cs
dec
ss
xchg
xorb
pop
push
enter
dec
bound
mov
or
xor
ljmp
sbb
pushf
movsl
push
fstl
mov
cmp
rcr
pop
inc
push
xchg
adc
add
dec
adc
arpl
lahf
test
shlb
fmull
inc
push
mov
fadds
stos
cmp
dec
ds
bound
aad
pushf
or
push
xor
push
out
xor
sbb
fbstp
mov
mov
push
fildl
out
cli
mov
stos
jne
outsb
inc
ljmp
cmp
fisubrl
cltd
xchg
cmpsb
pop
and
jnp
mov
add
xor
or
or
inc
loop
scas
jns
fisttps
shl
out
fadds
mov
mov
jl
sbb
mov
xlat
out
mov
aad
imul
in
xchg
jne
sub
mov
mov
stc
xchg
mov
mov
out
mov
shrb
movsb
imull
add
jae
pop
out
and
fmul
lahf
mov
test
aam
aam
enter
inc
ret
jg
adc
int3
ljmp
cld
and
mov
jle
insb
insl
inc
shl
mov
in
imul
push
ret
jnp
adcb
fnsetpm(287
loope
mov
cmp
xchg
aad
sub
pop
js
les
add
cmp
sbbl
lea
test
outsb
mov
ja
dec
xor
ja
ds
enter
jnp
sti
mov
add
sub
fbstp
in
adc
bound
and
imul
mov
mov
lods
adc
and
in
arpl
cmp
xor
imul
test
cmp
mov
insl
sahf
ss
clc
neg
sub
data16
push
mov
xor
pop
dec
inc
data16
pop
sub
add
mov
mov
add
notb
repnz
je
adc
or
fwait
dec
jp
out
sub
mov
cmp
add
pop
lret
xchg
jne
cmp
xor
movsb
xchg
fwait
inc
pushf
inc
jno
fidivrs
loope
aas
adc
mov
aam
leave
mov
xchg
pop
imul
dec
adc
idivl
mov
fs
dec
pusha
idivl
out
cmp
enter
stc
rcrl
pop
out
add
es
loope
xsha1
cmpsb
dec
or
xor
mov
mov
lret
rcl
sbb
rcrb
cmpsb
mov
jbe
in
jmp
cltd
rcl
mov
lahf
and
sti
xchg
je
outsb
add
jmp
sbb
inc
pop
xor
pop
in
pop
out
push
jmp
inc
int3
and
mov
pusha
xchg
sti
stos
inc
mov
push
in
ret
pop
sbb
push
mov
neg
push
rcll
push
xorb
jl
mov
pop
sti
addb
add
xchg
cmpsl
pop
insl
pushf
xor
ljmp
scas
aaa
jmp
subl
movsb
notb
stc
out
roll
in
sbbl
pop
hlt
dec
fsubp
mov
push
movl
cld
outsl
jg,pn
nop
enter
push
fimull
push
scas
mov
adc
xchg
js
add
inc
mov
jmp
clc
lahf
insl
inc
mov
hlt
addr16
les
aaa
jmp
gs
inc
ja
adc
call
xor
sbb
jne
repz
jge
sub
pop
cltd
add
inc
outsl
push
cwtl
insl
mov
xchg
lds
push
divl
movsl
in
push
dec
xlat
inc
pcmpeqb
cli
fucom
mov
sbb
mov
hlt
ret
cmp
mov
inc
fwait
enter
pop
shll
les
sahf
and
jmp
sbb
and
and
dec
fistpll
mov
or
pushf
cmc
push
inc
push
fcmove
pop
les
push
shrb
stc
mov
jns
xchg
push
loop
mov
jno
sbb
shl
add
sbb
add
or
dec
in
stc
cli
shlb
push
loope
and
orl
xchg
lret
cmc
cmp
dec
inc
stos
dec
sbb
subl
cmp
enter
fimuls
enter
or
movsb
add
andb
les
rolb
jnp
jbe
mov
test
inc
scas
bound
mov
xchg
cmp
lahf
addr16
xor
dec
cld
lahf
aam
and
cmp
cmp
jmp
jnp
xor
adc
lock
sub
push
xor
movsb
test
jle
dec
mov
lods
adc
dec
pop
cli
add
sbbl
cmpl
mov
or
out
push
out
loopne
test
into
ljmp
dec
scas
jb
pop
movsl
adc
fiaddl
xchg
mov
sub
push
icebp
movsl
mov
push
out
insl
xlat
push
sub
addr16
lods
sbb
adc
std
movsl
xor
xchg
scas
mov
dec
jmp
pop
iret
fnstcw
arpl
xchg
sbb
daa
outsl
add
ret
inc
inc
imul
out
inc
push
adc
ss
fimull
jbe
cli
scas
push
ss
scas
lret
push
testl
test
lret
sub
fwait
mov
xchg
inc
sub
in
fdivs
enter
xchg
pushf
jmp
in
stos
pop
outsb
pushf
or
imul
ret
es
mov
clc
je
cmp
mov
mov
les
movsl
lret
cmp
jmp
pslld
dec
or
cmp
mov
xor
push
and
add
sarb
dec
ljmp
pop
cmp
push
insl
jl
cmp
inc
repz
inc
jp
jecxz
repnz
cmp
mov
fmull
in
or
stos
or
pop
push
cmp
push
jae
lret
add
xchg
xor
xchg
in
jg
push
adc
sbb
sarl
mov
scas
xchg
jb
test
add
ret
pop
add
fisubrl
daa
jne
test
inc
and
xor
jecxz
push
popf
testl
pop
jae
dec
mov
lea
popa
jg
sub
push
rcrl
stos
in
xor
xor
mov
ds
add
sti
push
iret
cmp
rclb
shlb
subb
mov
fsubrs
add
iret
mov
std
inc
jle
cmpsl
push
aas
sub
cmp
sbb
orl
sub
mov
ds
xlat
in
jno
andb
and
jbe
and
sbb
cmp
jo
cwtl
das
std
js
das
cmpsb
fsubrl
push
mov
fs
mov
xor
fs
jle
push
pop
int3
push
or
cmp
mov
mov
call
shrl
inc
arpl
stos
pop
subl
stos
inc
fists
sbb
int3
add
push
stc
sbb
push
in
pushf
jmp
pop
orl
mov
inc
aad
fists
and
test
aaa
loopne
or
sbb
inc
lds
out
pop
jmp
lea
mov
push
sub
jp
jg
dec
add
xchg
mov
jbe
mov
dec
add
mov
je
dec
sti
adc
jecxz
pop
out
hlt
pop
mov
out
fwait
sarb
mov
mov
adc
fnstenv
ss
mov
jp
cmp
pop
gs
or
sti
cmp
sub
fcoms
inc
in
xchg
or
jns
imul
stos
les
xchg
mov
out
push
push
and
jo
inc
shr
jp
insl
stc
or
insb
rorb
lret
out
loope
pop
pop
cs
jns
dec
inc
xchg
sarb
xlat
js
and
sub
add
push
mov
jmp
dec
stos
lock
out
add
loopne
xlat
lcall
xor
or
sar
or
mov
dec
lret
stos
add
lret
mov
jne
jle
mov
sub
xchg
stos
insl
imul
pop
stc
ret
gs
movl
xor
cmpsb
aam
pop
das
mov
ret
cmp
imul
or
shll
dec
mov
repz
stos
mov
mov
mov
std
and
pusha
cmp
cltd
sbbl
js
test
addr16
cmpsl
in
xor
mov
dec
inc
icebp
fstps
repz
lahf
mov
add
test
shlb
test
xchg
dec
loopne
dec
movsb
cmp
mov
loope
test
ret
movsb
lret
pop
ds
outsb
inc
pop
das
inc
pushf
pop
and
pop
mov
dec
repnz
movsb
mov
gs
adc
test
or
mov
pop
das
cmp
jl
inc
pop
mov
mov
pop
xchg
pop
shl
data16
daa
inc
loopne
jge
jmp
mov
outsl
movb
cld
test
test
test
leave
or
xchg
push
mov
cmpsl
lret
xchg
aad
add
andb
jae
sub
jg
movsb
stos
push
stos
repnz
ja
test
insl
mov
loope
adc
jns
sahf
fstps
loope
or
aam
loope
sahf
push
sahf
xor
iret
jbe
ret
dec
shr
mov
and
jle
daa
pop
cld
mov
push
add
out
mov
mov
mov
cmpsb
add
dec
pop
push
mov
jne
and
lods
into
js
and
in
push
fidivs
fsubs
xchg
sbb
mov
decl
scas
sbbl
lcall
add
xor
mov
fisttps
pop
adcb
fsubl
pushf
repnz
fildll
xchg
and
or
sub
cmp
and
int3
pop
fwait
subl
pop
cmp
and
mov
push
push
cmpsb
popf
or
inc
sti
jecxz
clc
inc
cltd
or
inc
xor
andb
mov
sbb
pop
scas
jmp
lea
addb
out
jge
in
jae
leave
mov
out
std
fdivrs
inc
pushf
or
test
cmp
mov
add
or
add
cli
mov
mov
jmp
rolb
add
sbbl
daa
in
test
lods
jne
xorb
data16
sbb
out
int3
loopne
pusha
out
and
fwait
jbe
nop
fcoml
or
add
xor
sub
mov
imul
outsl
notl
cmpl
mov
testb
adc
rorl
adc
nop
mov
inc
cmpsb
jno
rolb
dec
cmovge
ficoml
mov
push
int3
popa
push
push
xor
dec
outsb
roll
insl
and
adc
sub
cltd
xor
dec
add
in
xchg
add
ds
mov
negb
leave
insl
mov
jbe
inc
leave
enter
jg
dec
pop
or
out
pop
negb
js
insl
xchg
or
xchg
cmp
sbb
push
outsl
and
push
push
or
jae
repnz
sahf
mov
sarb
iret
pop
dec
fwait
and
pop
sbb
es
aas
sub
orb
sub
adc
push
push
sti
dec
call
orb
test
aas
and
xor
dec
jecxz
aam
pop
fldcw
sub
mov
mov
aas
movsl
addr16
loope
sub
dec
xchg
cli
xchg
sub
push
lds
mov
mov
pop
cmp
shl
mov
fcmovbe
sbb
pop
testb
icebp
cmp
jecxz
add
cmp
sbb
sbb
test
adc
sarb
xchg
pop
push
cld
bound
mov
int3
cwtl
xchg
mov
imul
and
adc
js
arpl
cs
call
or
fdivrs
xchg
cmp
cmp
sarb
dec
sbb
popa
adc
jmp
sbb
outsl
test
fwait
xor
dec
imul
sbb
mov
adc
xor
jmp
inc
sbb
xor
hlt
imul
test
call
add
inc
std
pushf
xor
or
jno
scas
ret
movl
mov
adc
dec
outsl
mov
or
nop
shrl
loop
adc
mov
cmp
push
push
jne
fisubs
jno
stc
ss
cli
or
sahf
xchg
sub
push
cli
mov
sbb
aaa
push
sub
xchg
pop
xchg
jecxz
jb
mov
push
dec
adc
insb
sub
shll
mov
mov
movsb
test
ret
lea
mov
sbb
push
and
loope
jecxz
inc
sti
sbb
mov
add
loope
adc
subl
pop
push
out
add
jecxz
xchg
and
pop
fisubrl
dec
jle
pop
cmp
push
daa
ljmp
xchg
pop
out
xchg
dec
xor
cmp
or
das
jg
imul
cwtl
call
out
or
xor
jae
pop
jno
push
push
out
aas
pop
mov
lea
movsl
adc
or
mov
stos
sbb
jecxz
sbb
stos
cmpsl
or
mov
shrb
push
jle
inc
xchg
popf
or
mov
push
pusha
mov
rolb
adc
xchg
sbb
call
jge
lock
push
or
stos
xor
repnz
jp
in
and
sub
xchg
dec
dec
test
daa
stc
sub
pop
and
sbb
pop
mov
inc
ror
and
shr
sbb
enter
xchg
nop
push
dec
and
or
mov
out
mov
fistps
adc
mov
imul
dec
mov
pop
mov
mov
push
cmpsl
les
cwtl
std
in
or
jmp
subl
cmp
dec
mov
add
scas
mov
cmpsb
cmp
pop
pop
pop
mov
fwait
pop
clc
in
cmp
lds
xchg
mov
mov
cmp
xchg
pop
sti
lea
cli
xchg
lret
rcrl
mov
mov
mov
rorl
xchg
sti
sub
cmpsb
sahf
jnp
mov
pop
das
test
cmp
xlat
lcall
sbb
mov
scas
xchg
dec
xlat
push
xchg
push
dec
jg
popa
icebp
lahf
mov
mov
call
ja
in
movsb
adc
std
popa
icebp
cltd
inc
aad
push
xchg
push
mov
insb
jl
repnz
popf
out
scas
stos
push
sbb
mov
cwtd
lahf
cs
push
jae
add
fidivrs
jno
out
sti
or
cmp
pusha
into
sahf
mov
pop
jg
xchg
adc
shl
add
test
sbb
in
leave
push
stos
jne
in
push
mov
or
push
outsb
pushf
push
inc
adc
mov
dec
out
pushf
cli
fs
fisttps
xchg
pop
xor
jns
cld
outsl
or
insl
sbbb
mov
scas
pop
out
loopne
insl
sbbb
mov
jecxz
pop
loope
xor
mov
add
sub
adc
dec
adc
sbbb
mov
adc
adcl
xchg
in
cs
sbb
dec
cwtl
fdivs
pop
add
das
cltd
mov
out
mov
in
movsb
fiadds
into
addr16
adc
sub
fwait
insl
or
xchg
es
push
jecxz
pop
lcall
mov
loope
popf
lret
loopne
lcall
xchg
and
repz
aas
mov
sub
mov
inc
jns
mov
js
xor
pop
pusha
push
imul
daa
jne
adc
cltd
push
mov
fsub
sbb
aaa
mov
cmpsb
in
std
cwtl
xor
in
in
clc
mov
mov
push
inc
jl
sbb
std
cmpsl
and
rcr
out
cmp
movsl
xor
adc
pop
out
mov
stc
popf
stc
dec
bound
rcll
sar
lcall
dec
or
xchg
fs
leave
mov
arpl
push
jge
pop
mov
xor
scas
cmp
and
push
mov
int
aad
in
fidivl
std
cmp
std
inc
into
push
js
loope
push
adc
xor
mov
pop
push
mov
aam
push
test
and
adc
mov
out
shr
int
and
lods
ljmp
xchg
loop
cs
jo
dec
cmpsb
mov
add
repz
shll
mov
cmp
popf
stos
and
lret
mov
cmp
or
sbb
es
insb
js
dec
pop
cmp
push
jge
jns
dec
fdivs
shl
fstl
rcl
nop
push
sub
mov
dec
xchg
lcall
jnp
fdivl
sub
push
mov
movsb
popf
cmp
pop
mov
add
test
jecxz
int3
dec
fwait
call
xor
jae
adc
lea
hlt
sar
jb
xor
push
adc
and
pop
xchg
je
pop
fisubs
sub
pcmpgtd
and
sahf
es
fsubr
data16
ficoml
mov
icebp
sbb
pop
fucomp
push
mov
inc
sub
cmpl
cmp
fs
sbb
aas
fimuls
pop
inc
gs
pushf
insb
cmp
jnp
iret
fdiv
push
add
push
mov
test
mov
fiaddl
imul
pop
xorb
jmp
sub
sub
ret
popf
adc
lods
jne
add
xchg
pushf
cld
stos
int
int
xor
cmp
dec
push
pop
or
test
js
xor
lock
leave
adc
rcrb
mov
rcll
loope
out
adc
movsl
sbb
fstl
das
mov
push
jno
sbb
or
pop
xchg
das
push
sbb
jg
sbb
push
fstpt
cmp
fs
imul
push
or
enter
mov
mov
push
push
into
sbb
mov
pop
aaa
lods
rorl
scas
into
movsl
pop
cmp
inc
mov
jae
or
adcl
xchg
and
imul
inc
pop
rorb
stc
xor
rcrb
scas
xchg
test
rcrb
xchg
jo
ret
push
push
or
sbb
and
xor
adc
mov
mov
lods
or
xor
jl
pop
xorb
mov
xor
arpl
adc
mov
mov
mov
xor
lcall
clc
inc
loopne
add
jmp
popf
mov
int3
sub
jge
clc
and
orb
xlat
mov
nop
jnp
jnp
inc
fcomps
mov
add
adc
cmp
in
mov
or
idivb
imull
pop
repz
aas
cwtl
cmp
cmpsl
adc
lds
jp
jg
aad
jmp
push
shlb
and
je
pop
push
mov
call
xor
mov
lods
mov
decl
and
std
and
out
test
push
stc
int
add
sub
cmc
lods
mov
int
addb
data16
xor
jle
push
imul
loopne
dec
push
push
ret
mov
enter
in
dec
arpl
jp
sub
and
pop
arpl
inc
mov
in
sub
repz
out
mov
xchg
imul
push
mov
inc
and
into
and
fsubl
movsb
dec
rorl
sbb
cld
or
std
leave
inc
rolb
repnz
test
pop
mov
mov
xor
je
lods
outsl
pushf
fdivl
push
fidivrs
jns
shl
subb
mov
mov
fisttpll
xchg
sbb
addl
mov
fs
and
int
aad
mov
pop
outsl
inc
imul
mov
adcb
mov
into
loopne
js
loope
adc
cs
int3
pop
popf
je
or
xchg
and
or
xchg
jno
jl
pushf
push
sti
add
fbstp
imul
mov
lret
xchg
out
enter
std
lock
xor
scas
adc
fdivp
popa
inc
xor
ss
xor
mov
mull
xorl
inc
iret
jecxz
sbb
add
lea
stos
dec
mov
xchg
jecxz
lret
adc
jmp
cmp
gs
std
stos
pop
call
aas
outsl
jnp
imul
jno
sub
adc
ss
test
cmp
inc
fcoml
insl
sub
pushf
dec
mov
cs
mov
jnp
jno
std
inc
inc
daa
sub
xlat
outsl
jp
das
pop
sbb
lret
xchg
shll
dec
movsl
sbbb
xchg
or
es
mov
stc
push
fyl2x
inc
push
aaa
cli
sarb
and
gs
cli
push
cmp
fistpll
pop
push
mov
cmp
aas
dec
cmp
fwait
jb
outsb
push
test
sarl
push
data16
and
push
int3
call
int
adc
mov
push
fstpl
les
popa
adc
cmp
mov
sti
xor
roll
xchg
jns
mov
into
jl
xchg
mov
jle
repnz
mov
push
sbb
orb
ja
in
jge
push
scas
add
jnp
fdivl
mov
cmp
cmpsb
push
xor
lcall
loope
cmp
jecxz
cmpsb
pop
cmp
mov
adc
push
icebp
xchg
add
test
mov
inc
pop
or
stos
mov
cmpsb
cmpsb
mov
out
mov
jle
les
lret
xor
cmp
rorl
movl
aam
and
fwait
std
xchg
mov
sub
shll
jmp
sub
data16
pushl
xor
add
notb
sbb
mov
add
jbe
push
in
dec
mov
xchg
mov
shl
call
add
mov
sub
repnz
data16
mov
dec
jl
pop
add
and
sahf
ja
test
jmp
add
dec
push
repnz
sbb
rolb
mov
stos
sub
mov
dec
jae
inc
movsl
loop
shll
orl
dec
aad
push
je
int3
xor
popa
push
add
scas
popf
test
jmp
pop
hlt
cmpsb
dec
xor
xchg
mov
mov
pop
add
push
addr16
adc
adc
aam
mov
mov
js
dec
je
xchg
mov
push
jnp
adcb
loope
pop
mov
movsb
sbb
add
xchg
adc
lds
pushf
push
adc
mov
dec
and
cmpsb
icebp
jno
adc
xchg
inc
hlt
jecxz
and
ljmp
inc
adc
cld
cltd
sbbl
in
pusha
cmpsl
mov
daa
mov
push
insl
loopne
lret
mov
sbb
cmp
movsb
sbb
push
aas
jo
jl
cltd
sub
pop
shrl
fdivrs
jg
cmp
dec
mov
xor
leave
mov
adc
add
jle
bound
xchg
in
pushf
movsl
xor
cmp
and
int
inc
cltd
imul
push
jmp
decl
add
cli
jecxz,pt
and
test
xchg
jbe
std
fidivs
test
fs
or
loope
xchg
stc
ret
mov
sub
adc
mov
pop
adc
lods
mov
cs
test
xchg
test
adc
xchg
xchg
inc
psubw
push
add
es
add
jecxz
pop
insl
int3
adc
jbe
ret
je
rolb
mov
mov
enter
lods
aad
pusha
test
inc
or
xor
mov
xchg
test
shrb
stos
aad
cld
dec
adc
stos
mov
adc
inc
pop
xor
fcoml
in
test
cmc
xchg
inc
fcmovnb
fists
fs
jg
fidivrs
loop
adc
leave
call
jge
dec
aad
leave
xchg
lods
faddl
xor
ljmp
mov
mov
in
inc
jnp
jne
mov
mov
sarl
sbb
mov
aam
cmp
cmpsb
test
cmp
push
jno
adc
cli
movsb
repnz
push
jmp
adc
xor
cli
xchg
test
sti
or
jnp
fdivrs
movsb
xchg
gs
pop
mov
and
dec
cmp
rorb
and
xor
cmp
jo
mov
fnstenv
test
xor
lds
cmp
inc
pop
adc
int3
in
pop
push
pop
andl
lods
ss
icebp
outsb
test
lahf
sbb
adc
inc
out
mul
jae
orl
jle
fsubrp
mov
test
mov
test
cmp
clc
shll
lcall
push
js
inc
popa
negl
and
pop
inc
lahf
add
dec
xor
and
pop
inc
cmp
and
imul
mov
mov
mov
cmc
cmp
mov
cmp
xchg
pop
or
sbb
sub
cmp
stc
cmp
xor
mov
daa
test
lea
mov
movsl
mov
and
aad
inc
xchg
ljmp
repz
pop
imul
dec
icebp
push
fisttpll
out
pop
xor
cmpsb
ja
inc
fstp
cmpsl
mov
loopne
test
lods
jp
lock
scas
jg
mov
cmp
pop
and
mov
mov
shll
xchg
add
inc
stos
orb
or
push
fwait
mov
jl
data16
adc
mov
test
rcrb
jg
hlt
sbb
xlat
add
sbb
loopne
scas
pop
in
mov
test
lahf
mov
lahf
sbb
or
divl
lcall
xor
call
mov
in
push
adc
inc
mov
rcl
lds
adc
loopne
push
or
sub
and
or
mov
sub
push
or
out
lock
or
mov
lock
xchg
stc
sbb
mov
push
cmp
sbb
xchg
sbb
cmp
iret
arpl
insl
subl
int3
insb
sub
or
jb
pop
bound
fwait
imul
loope
and
lds
in
inc
cs
int3
jns
and
add
inc
movsb
xchg
xor
out
sbbb
lods
xor
fnstcw
inc
pop
leave
cmp
les
adc
pop
lea
cmp
ds
and
inc
jl
dec
loop
pop
movsl
icebp
sbb
stos
mov
aam
push
push
mov
iret
inc
add
jle
icebp
mov
and
loop
mov
push
loopne
lahf
sbb
mov
sbb
adc
ss
stos
push
aaa
into
outsl
lds
loope
push
mov
lock
in
cmp
lea
sbb
andb
int3
mov
cmp
aad
call
cs
in
mov
test
mov
push
aas
sbb
rclb
cmp
lcall
add
cmp
ljmp
sub
cmc
fsubr
inc
push
aaa
cmpb
pop
mov
mov
iret
mov
rorb
inc
insb
jp
fstl
imul
cmp
xchg
roll
ja
add
jp
lock
test
jp
scas
and
adc
nop
and
pusha
and
popf
xchg
dec
xchg
push
icebp
sbb
jo
fisubl
fdivrs
sub
cmp
arpl
lahf
pop
sbb
ret
push
imul
jge
out
lods
ljmp
xchg
mov
pushf
sub
idiv
imul
bound
xor
jmp
repz
aam
jb
and
sub
scas
test
adc
pushf
stos
add
rorl
inc
gs
out
test
outsb
test
mov
add
dec
cmpsl
and
xchg
xlat
xor
dec
lahf
test
adc
mov
test
add
cmpsl
ds
daa
fsubrl
fmull
xchg
jge
stc
cmpsb
jecxz
cltd
loopne
cwtl
jge
cmpsl
outsb
test
test
sub
push
push
in
add
mov
popf
push
sbb
call
lcall
xchg
sub
mov
imulb
mov
sahf
into
fdivrl
mov
popf
out
cli
in
sub
jmp
fistpll
stos
mov
es
mov
rorl
in
or
fstpt
mov
push
sub
shl
jnp
dec
pop
fnstsw
add
xor
mov
lods
scas
and
test
in
jne
pop
or
mov
push
stc
mov
inc
js
cld
mov
icebp
mov
xor
jns
or
outsl
push
push
mov
fnstcw
shr
les
cmc
sbb
rcll
test
push
add
push
je
sbbl
repnz
mov
push
jns
xchg
les
movsb
insb
pop
jle
cmpsb
mov
dec
add
mov
ret
bnd
arpl
inc
ljmp
lcall
add
lcall
pop
movsb
repz
xlat
xor
adc
cmp
loope
mov
xchg
pop
jno
lods
inc
cltd
test
sub
roll
fs
xor
mov
fstpt
adc
cli
imul
js
push
mov
sbb
mov
xchg
aad
adc
and
aad
leave
lods
mov
in
push
xorb
add
push
cmp
daa
test
mov
cmp
sub
xchg
sbb
popf
pusha
xchg
pop
sarl
loope
push
push
rcll
mov
popf
loop
sbb
stos
inc
lret
and
sub
icebp
ret
mov
sub
or
inc
xchg
add
mov
sbb
or
movsb
stc
sub
jmp
adc
push
pushf
adc
push
shrb
or
xchg
or
lcall
mov
scas
mov
out
js
aaa
push
hlt
mov
add
mov
repz
fsubl
mov
out
hlt
pop
loopne
xchg
push
arpl
fidivrl
ret
test
cmp
sub
loope
push
shll
adc
add
jl
and
sub
pop
iret
adc
insl
pusha
and
push
and
fisubs
pop
rolb
xor
xchg
sub
push
vpaddusb
ss
cmp
xchg
dec
pmulhw
imul
mov
mov
imul
xchg
subb
lods
sahf
dec
popa
rorb
and
orb
stos
adc
das
jle
mov
or
push
mov
inc
cmp
jbe
in
icebp
dec
cmp
push
leave
pusha
inc
les
cmp
aaa
mov
test
lcall
rcl
or
jl
xchg
add
popf
lea
fisubl
notl
cld
stos
in
or
popa
rolb
cwtl
jg
sbb
add
push
jne
or
inc
call
lret
push
neg
call
add
scas
aas
push
cmpb
icebp
xchg
or
mov
shrb
adc
push
call
lret
jge
jmp
mov
ret
add
lods
inc
dec
and
cmp
lret
dec
mov
sbb
add
or
or
sub
mov
iret
loope
sbb
les
jnp
push
cmp
aas
das
clc
inc
fldt
ret
lret
mov
inc
imul
das
xor
fsubs
cmp
cmc
pop
add
xor
insb
add
xor
aad
jmp
push
mov
fsubl
rcl
xor
sub
xor
das
push
mov
enter
adc
ss
mov
fucompp
cs
mov
xor
rolb
cwtl
inc
in
fucomp
ss
lret
ljmp
inc
mov
cmp
shrb
stos
outsb
pusha
sub
sub
push
lcall
push
cwtl
inc
fs
jns
dec
xchg
inc
pop
shlb
subl
jnp
test
or
fstl
sbb
into
sub
imul
pop
add
cmp
jg
xor
mov
add
inc
push
or
or
jle
inc
lds
jl
dec
divb
and
xor
jmp
fucom
mov
test
cltd
xchg
dec
inc
jb
pop
dec
jp
mov
arpl
ja
mov
ret
cmp
outsb
cltd
insl
or
clc
sub
cmp
in
ret
dec
imul
push
mov
leave
je
arpl
adc
cmp
add
mov
shll
mov
fisttps
fsubr
iret
sub
add
dec
inc
mov
jl
shrb
jecxz
jo
cmp
in
test
loop
fs
sbb
out
ret
mov
or
mov
movsb
pop
scas
sbb
aas
jb
mov
xchg
in
pop
mov
ds
in
out
mov
sahf
clc
sub
mov
sub
add
jnp
xor
pop
cli
std
mov
cmp
movsb
fildll
add
mov
lret
shr
sti
rcrb
stos
outsl
fwait
mov
mov
pop
and
sbb
rcrl
cmp
mov
push
aam
push
push
je
push
and
xor
sbbl
or
mov
jge
in
lds
sarl
jnp
jp
xchg
mov
jno
lret
mov
aaa
dec
inc
push
in
andl
inc
mov
out
aas
push
xchg
cmp
cmp
or
cltd
shrl
mov
idiv
dec
out
outsb
filds
mov
mov
sbb
mov
popf
or
mov
push
leave
loope
dec
inc
push
jecxz
repz
dec
scas
cwtl
das
loopne
jns
in
xor
inc
cmpsl
mov
xchg
pop
or
rclb
les
fstps
iret
mov
or
lret
stos
adc
or
add
inc
xor
mov
pop
add
cmp
sub
and
mov
xlat
in
inc
popa
dec
lods
shlb
imul
shlb
cmp
pop
imul
insb
sarl
adc
or
push
insl
and
cmc
mov
mov
test
add
jg
or
ja
je
mov
dec
jb
mov
or
sbb
jmp
fsubrs
adc
jb
clc
add
lret
cwtl
lods
rol
push
push
pop
push
mov
hlt
fldl
out
mov
sahf
lods
lahf
xchg
hlt
inc
jmp
icebp
je
lahf
mov
nop
out
add
aas
pop
sbb
cmp
iret
fdivrl
fildll
inc
mov
add
fs
sbb
add
cli
mov
push
jbe
sbb
pop
out
sarl
outsb
add
pop
lahf
xor
loopne
xor
addl
test
icebp
bound
cmp
daa
outsl
add
addr16
repz
pusha
ss
mov
fistpl
pushf
scas
adc
sahf
addr16
std
sub
jge
lods
mov
aaa
push
rorl
sbb
and
sbb
outsl
sub
imul
and
mov
mov
sbb
add
rclb
in
jp
cmc
stos
mov
aaa
cmpsb
mov
stos
flds
pop
out
lcall
mov
mov
sub
jne
sub
in
xchg
xor
cmp
push
sbb
push
orl
pop
pop
xchg
jle
cld
std
xchg
lods
bound
popa
pop
fiaddl
loop
mov
rcrb
sub
cltd
xchg
sahf
xchg
call
and
jmp
xor
xor
hlt
push
push
fidivrl
mov
or
insl
ss
xchg
mov
add
out
imul
loop
outsb
lods
sub
mov
arpl
or
fisttpll
add
out
sbb
add
xor
scas
adc
data16
xchg
xchg
fidivl
dec
rcll
clc
and
xor
mov
push
test
popf
jecxz
movsl
testb
sub
cmpsl
dec
or
js
stos
lea
and
push
dec
fidivrs
jl
mov
cmp
popf
xchg
popa
pop
add
into
sahf
test
sbb
test
inc
cld
subb
mov
ret
mov
lock
test
mov
xor
jne
rol
cs
sbb
jne
movsb
cmp
mov
outsl
push
clc
aas
push
ja
xchg
test
add
mov
packsswb
pop
mov
enter
mov
lods
inc
push
test
jb
in
cwtl
push
int
pop
xlat
adc
lahf
je
jmp
lock
int
mulb
ss
stos
jge
in
dec
rorl
insb
inc
fldt
repnz
mov
mov
adc
js
adcb
sahf
mov
xor
mov
lods
movsl
fldt
cmc
cwtl
mov
lret
aas
sub
mov
outsw
in
dec
lods
insb
add
jg
mov
pop
adc
mov
arpl
mov
sbb
add
ficomps
jg
ret
lahf
and
or
dec
mov
or
movsl
inc
mov
pop
repz
aaa
sub
sbb
pop
push
cmp
fbstp
in
or
push
in
cmc
mov
mov
push
out
ffreep
push
cli
pusha
inc
in
sub
inc
test
cmp
xor
jp
insb
jp
jns
jle
addr16
jo
jge
rclb
out
inc
sub
cmpsl
out
lcall
sbb
scas
lahf
mov
dec
popa
jno
out
cmp
shlb
stc
add
inc
aam
mov
shl
mov
pop
outsb
shl
push
je
mov
lods
fiadds
push
je
orb
pop
inc
mov
mov
mov
test
cmpb
and
cmp
bound
inc
push
ret
adc
inc
mov
sbb
arpl
cmp
int3
xlat
out
jp
jmp
cltd
std
mov
outsl
ret
rol
xchg
rorb
dec
adc
or
dec
or
loope
punpckhwd
mov
adc
fldenv
bound
xchg
mov
add
xchg
ss
xchg
ds
cmp
mov
sarl
sub
test
ja
push
ret
pop
stos
fiaddl
pusha
sub
insl
add
jae
xchg
mov
and
lcall
mov
shlb
int3
mov
mov
orb
out
fisubl
roll
jmp
addr16
xor
movsl
xor
jmp
or
cld
cmp
adcb
inc
out
cli
pop
sahf
xor
xor
dec
dec
inc
loope
ficoms
cmp
jge
or
jle
sbb
stos
loope
cmp
pop
and
or
lods
push
inc
inc
mov
imul
popa
mul
mov
aam
jb
mov
adc
mov
std
push
mov
or
mov
jae
add
bnd
cwtl
int
pushf
cmp
adc
movsl
sbb
jp
xchg
in
sar
jns
movsl
dec
lock
pop
imul
sbb
mov
jp
inc
loopne
movsl
and
nop
cmp
add
sbb
into
fsts
ret
push
fnstcw
faddp
inc
push
or
jecxz
ja
xor
nop
pop
les
leave
adcb
mov
lds
out
cmp
mov
sub
mov
pop
xlat
rolb
cmp
loop
lock
ret
aad
jge
push
lahf
and
sarl
adc
and
sbb
int3
sbb
sahf
xor
jo
in
jl
mov
es
sbb
or
arpl
push
mov
cld
dec
xor
cmpsl
push
or
and
inc
pop
lock
into
mov
cli
sbb
dec
jae
call
movsb
enter
cmp
rcrl
pop
cmc
and
sbb
cli
adc
in
or
xchg
ljmp
mov
inc
and
daa
iret
mov
pushf
pop
aam
dec
xor
std
loop
mov
pushl
mov
les
insl
jb
mov
xor
sub
ficoml
lret
in
aas
xor
aaa
lods
cmp
mov
pop
fidivrl
adc
lods
xor
dec
and
shl
mov
xor
insl
adc
out
inc
cmp
add
mov
fildll
mov
and
cmpsl
cmp
rcrl
and
pop
cli
inc
mov
std
ljmp
lock
aas
dec
movsb
or
add
mov
inc
inc
popf
test
pminub
pop
lahf
cmp
sti
adc
jp
cmpsl
or
cld
dec
xchg
scas
dec
pusha
sbb
jmp
dec
mov
iret
push
out
xchg
ffreep
out
test
imul
outsb
xor
lock
xchg
stos
iret
pop
loope
lock
inc
lret
dec
in
stos
dec
adc
fs
xchg
xchg
clc
adc
rcrl
or
stos
lock
lods
hlt
add
das
ss
fisubrs
xor
adc
subl
xchg
jl
loope
pop
sahf
out
in
je
cli
imul
mov
shrl
cmp
movb
cmp
sub
test
das
sbb
sbb
jle
loopne
jecxz
fldl
sub
xor
push
add
jl
std
jp
outsb
sbb
push
mov
fsubs
dec
mov
outsl
adc
mov
push
add
add
push
in
insl
pop
aam
add
js
cmpsl
gs
iret
js
in
imul
loopne
add
movsb
inc
adc
cmp
scas
subb
add
xor
jp
sub
lret
push
outsl
add
test
stos
fwait
js
int
dec
pop
data16
cmc
jmp
mov
lods
scas
sbb
jae
andb
ss
cmp
cmpl
sub
popf
xchg
imul
leave
enter
testl
inc
xchg
cmp
mov
cmpsb
dec
jge
lcall
lods
jmp
fildll
aaa
or
xlat
mov
and
push
pop
xor
insb
imul
in
push
es
mov
push
mov
pop
or
jo
dec
mov
jns
inc
mov
pop
pop
fnsave
stos
in
ja
xor
shll
push
add
icebp
jp
lds
jns
sbb
inc
jmp
stc
jb
mov
mov
push
mov
decl
sub
fnstcw
sbb
jo
call
and
mov
xorb
aas
aad
xchg
js
inc
push
xchg
cltd
cmc
arpl
vcvtsi2sdl
imul
mov
adc
cmc
xor
fidivrs
lret
mov
shrl
adc
xchg
sub
imul
or
test
sub
mov
and
push
cmc
xor
clc
push
lods
mov
or
jmp
mov
cmp
jo
in
andl
push
jl
push
push
call
mov
call
jp
inc
mov
dec
pop
lahf
jl
sbb
scas
aad
inc
mov
aas
fcomp
xchg
pop
dec
ret
mov
insl
jnp
int3
sbb
push
xchg
aad
pushf
outsb
jbe
pusha
scas
mov
mov
outsb
add
mov
les
or
cmp
jp
outsl
scas
jno
pop
mov
mov
add
adc
sub
out
into
das
outsb
int
cmp
lods
rep
dec
sbb
mov
mov
fstp
insb
sub
sahf
pop
cmovg
aaa
into
fwait
push
sub
nop
divl
xchg
insb
pop
or
or
movsw
stos
fimuls
popa
mov
jnp
mov
push
cwtl
lods
xor
push
les
add
rclb
lcall
dec
adc
loop
pop
pop
push
inc
jne,pn
cmp
inc
and
mov
add
sbb
xorl
or
ja
push
cmp
into
push
sub
or
insl
cmp
shl
mov
mov
jnp
mov
gs
bound
imul
clc
cmp
mov
ret
aaa
mov
out
out
divl
jne
xchg
sub
xchg
mov
mov
cmc
outsb
andb
xchg
lods
pop
jne
jecxz
int3
mov
pop
xchg
dec
mov
pop
jnp
or
sbb
xchg
rcrl
cltd
jp
mov
pop
fs
add
test
mov
lock
or
pop
lcall
pop
and
cltd
inc
inc
push
fdivl
and
arpl
or
ljmp
in
sub
stc
paddb
jmp
jae
popa
cmp
rcr
mov
ficompl
loopne
cli
cmp
jecxz
int3
fs
aas
adc
add
data16
xor
sub
push
pop
pop
in
dec
add
xor
and
fwait
aad
push
pop
stos
sub
or
lds
insb
inc
jge
out
movsl
shrl
cwtl
outsl
enter
int
lcall
add
movl
add
pusha
testl
jle
cwtl
enter
cmp
and
mov
mov
mov
cmp
ds
test
push
out
dec
test
outsb
or
add
mov
cs
mov
pop
out
je
xchg
push
push
push
jo
jae
pop
shl
in
cli
test
push
outsb
lcall
push
pop
sbb
in
pop
ds
and
dec
je
xorl
je
inc
adc
or
adc
ss
jmp
add
out
int3
jne
gs
in
bound
mov
cmpsb
xchg
dec
or
in
pusha
cmc
mov
in
push
mov
dec
mov
mov
add
or
sbb
or
mov
bound
insb
push
push
ds
jp
mov
mov
jnp
pop
scas
aaa
pushf
insb
inc
dec
out
bound
sub
loop
jbe
or
adc
adc
das
push
pop
jne
jl
xchg
test
inc
and
cmpsb
in
out
cmc
sub
hlt
out
std
rcrb
add
ds
lahf
inc
aam
outsl
push
out
out
cld
inc
and
and
cmc
outsb
mov
lods
xchg
andl
pop
mov
xor
push
les
in
dec
inc
jecxz
popf
lods
outsb
sub
sarl
ljmp
mov
mov
mov
push
jl
outsb
mov
out
test
push
push
or
mov
push
repz
push
sub
subl
lret
shrl
push
sub
dec
xchg
icebp
jnp
jle
dec
das
cli
ret
xchg
lret
das
cmc
subb
lds
leave
sarl
imul
lcall
jno
add
mov
jle
mov
sbb
fiaddl
dec
mov
cmpsb
dec
inc
les
xchg
jns
xchg
adc
adc
jne
push
pop
cwtl
jp
dec
lods
mov
dec
pop
jbe
jnp
scas
push
cmp
ss
js
push
inc
loope
sub
bnd
js
rorl
xchg
push
icebp
call
mov
pop
adc
mov
ds
les
cmp
push
jns
inc
cmpsl
inc
adc
inc
or
out
adc
jnp
rol
pop
je
sbb
jecxz
cmp
sbb
cmp
sub
xchg
gs
std
leave
pop
inc
push
vpaddusw
daa
xchg
test
addr16
aam
cmc
dec
aaa
pop
sub
dec
lods
hlt
jl
pushl
add
ret
fcmovbe
and
in
inc
sbb
mov
cpuid
sub
xchg
es
bound
push
dec
add
push
or
inc
push
insl
popf
dec
xchg
push
mov
call
ss
fiadds
ljmp
jno
sub
jge
jecxz
push
arpl
add
push
pop
out
mov
pop
ja
or
adc
fs
call
loopne
or
aad
ljmp
mov
dec
fnstenv
xlat
outsb
and
push
fdivl
cmc
cmpsb
cmp
mov
jl
xor
cwtl
xchg
add
mov
sub
inc
push
add
mov
inc
xor
inc
inc
mov
addr16
sahf
test
mov
dec
cs
fadd
stos
pop
sbbb
and
lds
repz
mov
shlb
sub
in
adcb
dec
cmp
pop
in
int3
outsb
push
popf
xchg
dec
mov
mov
sub
pop
call
xchg
fstpt
aaa
ds
lods
pushf
loop
mov
pop
jge
xchg
cmp
repz
mov
test
inc
pushf
push
jne
ljmp
mov
adc
mov
push
shl
sbb
stos
xchg
fisttps
pop
inc
and
jecxz
sahf
scas
sbb
dec
mov
lret
roll
rol
lret
inc
fdivr
out
sbbl
add
or
mov
lret
fnstsw
push
jno
adcb
xor
add
xchg
jp
rorb
cld
loopne
or
add
sub
jne
adc
lods
cmp
gs
out
inc
mov
rolb
mov
outsb
adc
jnp
jp
adc
ja
cmp
test
out
mov
and
adc
aad
adc
fldcw
andl
xchg
test
insb
add
sbb
pop
fisttpl
test
jns
outsb
and
fdivs
or
ret
jle
xchg
xchg
addl
push
lea
gs
jbe
imul
inc
mov
mov
bound
jecxz
inc
ret
cmovo
adc
int
aaa
bound
scas
ja
inc
inc
sbb
dec
addl
cld
or
jo
repz
jg
cltd
out
xchg
pop
jle
test
sub
scas
jecxz
daa
std
stos
xor
xchg
andl
mov
jne
sbb
push
adc
std
inc
int3
xor
xchg
popf
inc
outsl
xor
sbb
out
arpl
mov
out
jbe
dec
dec
xor
lea
inc
xor
adc
adc
mov
fbstp
jp
loop
les
add
or
aas
or
jge
mov
setno
repz
mov
fdivrl
jb
lds
scas
orb
test
sub
pop
inc
or
in
into
xlat
sbb
insb
xchg
jb
xchg
sbb
jne
fstps
cmpsb
push
mov
pop
fcoms
xlat
outsl
push
testl
fcmovnb
sub
dec
or
loope,pn
jmp
inc
in
je
jb
outsb
mov
jb
pop
inc
stos
int
fdivl
mov
mov
cmp
lret
insb
fadd
cmp
loopne
jb
or
mov
ss
lock
fucomi
fs
cmpsl
aas
xchg
inc
mov
repz
jmp
dec
mov
icebp
es
pushf
inc
pop
xchg
nop
mov
dec
rep
mov
aam
repnz
ret
es
insl
mov
and
push
out
lods
in
dec
enter
repnz
mov
sbb
pop
inc
lods
dec
xchg
mov
adc
inc
aaa
jecxz
pop
pop
aad
jbe
aaa
pop
or
fisubrs
dec
inc
sbb
inc
lea
inc
inc
inc
sub
mov
adcb
mov
inc
fcoml
inc
lods
lahf
pop
stos
aam
push
fstpl
mov
pop
gs
data16
or
jae
call
adc
repz
in
pop
jecxz
cmp
cmp
lea
sub
outsl
lock
mov
dec
fidivrs
sub
es
jae
and
cli
pop
inc
inc
push
and
mov
std
inc
lds
ret
mov
sub
or
lret
outsl
push
ds
movsb
fucomp
in
push
mov
mov
or
lea
mov
ret
fbld
dec
shl
mov
arpl
add
in
cwtl
inc
pop
fcompl
cmp
pop
insl
sub
add
jno
push
mov
or
push
pop
xor
cmp
in
add
and
lret
lahf
out
popf
adc
mov
push
adc
loopne
ret
sub
inc
xchg
inc
js
jmp
dec
lods
push
stc
inc
cs
shl
sub
loop
jns
mov
imul
mov
mov
and
sbb
dec
test
enter
add
dec
jno
jecxz
mov
call
and
insb
iret
daa
push
push
pop
lock
mov
mov
push
dec
lahf
mov
mov
stos
jmp
mov
hlt
sahf
out
push
push
xor
sbb
mov
jnp
xchg
pop
repz
in
or
cltd
je
push
xchg
dec
sub
mov
jg,pn
pop
mov
mov
fnsave
xlat
sbb
jne
mov
adc
fucomi
push
mov
outsb
popa
cs
push
loope
test
jb
sbb
add
mov
cmp
and
insb
repnz
and
lea
cmc
les
in
xorl
pop
pop
jns
lock
and
lcall
cltd
test
mov
jno
jmp
andl
fadds
push
xor
in
das
mov
sub
lods
inc
pop
mulb
gs
jno
xor
adc
rcl
cmove
pop
cmovs
imull
fxch
popf
fwait
mov
push
xchg
jns
pop
pusha
xor
xchg
mov
cld
cmp
jge
imul
jne
out
outsl
jnp
popa
lods
jo
adc
stos
and
test
pop
or
test
dec
xor
out
std
push
ja
dec
sbb
mov
jle
dec
jge
pushf
mov
push
icebp
cwtl
insl
cmc
sub
xchg
scas
mov
cmc
in
cmpsb
lahf
iret
sahf
jns
jge
lea
inc
das
enter
dec
lahf
lret
sbbb
pop
imul
adc
jl
jno
xor
dec
in
subb
subb
mov
mov
cmp
aas
outsb
fnsetpm(287
dec
loope
push
jb
in
and
fcmovu
and
addb
ja
fcmovnb
push
inc
sbb
dec
xorb
lea
cmp
shrb
out
jl
test
les
xchg
adc
cmp
test
rolb
xor
mov
jp
sub
test
mov
je
sbb
in
jl
sub
add
add
mov
cwtl
jo
fcmovnb
mov
aaa
fldenv
jo
mov
inc
test
orb
lds
mov
mov
in
rcrb
mov
out
xchg
fs
mov
lret
ret
mov
sbb
adc
or
lods
mov
mov
in
lods
or
xchg
lcall
sbb
outsl
push
test
dec
rcll
int
ja
lcall
cmpsb
and
ljmp
push
pop
mov
and
andb
mov
xorb
xor
mov
sti
pop
mov
mov
add
and
out
sti
sbb
mov
rol
movl
aad
fwait
mov
lret
mov
pop
out
push
jnp
out
push
dec
mov
cltd
mov
ss
xor
xchg
in
adc
pop
adc
mov
pop
fsub
mov
addr16
aad
push
insl
repnz
sub
scas
pusha
xchg
dec
adc
sahf
rcrb
repz
mov
sub
xchg
sub
insb
incb
or
xchg
or
push
movl
cmpsl
ret
andl
es
rcrl
jbe
xor
xchg
adc
pop
popa
adc
imul
fsubr
or
and
jle
ret
sbb
and
ljmp
pop
and
xlat
test
lret
jecxz
fdivl
aas
xchg
fwait
arpl
out
aas
and
clc
or
aad
xchg
inc
xchg
add
cs
cmp
je
mov
ret
in
xor
das
addr16
mov
test
mov
push
mov
adc
and
popa
and
cltd
gs
sub
adc
js
cs
xchg
inc
inc
data16
fsubrp
test
scas
daa
mov
int3
inc
adc
std
mov
xchg
pop
fwait
cmp
mov
in
xchg
adc
leave
ret
sub
aam
out
xchg
in
jae
leave
xor
jmp
mov
xor
adcl
in
xchg
push
add
inc
mov
in
in
push
inc
outsl
or
jl
fcoms
call
dec
data16
out
add
xor
sub
mov
jge
enter
jb
fists
jb
cmp
mov
pop
repz
enter
fwait
inc
pop
roll
rorb
push
mov
xchg
xchg
rcll
sbb
and
sub
mov
dec
int
rclb
mov
ljmp
lret
pop
cltd
or
int3
xchg
cmpsl
fs
hlt
arpl
out
popf
fwait
push
xchg
sub
push
inc
clc
inc
enter
out
sub
adc
add
lock
fsubr
out
cmp
ss
or
arpl
cmp
or
jmp
push
in
sbb
fisttps
call
pop
push
pop
lret
mov
fcoml
xor
dec
mov
jno
jmp
jnp
mov
jge
or
movsb
pop
sub
test
push
lahf
add
mulb
cli
sbb
add
std
inc
cmpl
inc
popw
das
repnz
pop
mov
bound
in
push
and
test
shr
xor
ficoms
fucomp
fs
xor
add
push
sahf
test
push
fwait
sti
add
lcall
cmp
subb
and
pusha
pop
fwait
jne
xor
xchg
cli
mov
int
test
push
mov
dec
pop
cmpsl
clc
cmp
dec
sbb
sub
shrb
ds
sub
inc
stc
test
mov
cmc
jl
lds
add
imul
pop
mov
and
mov
xor
loop
aad
and
jb
aas
lret
fstl
inc
add
cmp
mov
stos
adc
je
ss
lds
fwait
xlat
ljmp
mov
sarl
ds
push
cmp
cmp
aad
out
shlb
or
adc
or
loope
cmp
xchg
xor
std
adc
mov
jb
xchg
insb
push
lahf
mov
ret
shlb
pop
mov
push
adc
outsb
sbb
ja
testl
sbb
or
mov
fists
sub
inc
pusha
adc
xchg
jl
mov
xchg
add
xor
dec
fisttps
mov
and
and
test
data16
cmp
inc
pusha
xchg
mov
ficoml
sub
jbe
jae
pusha
test
inc
jl
mov
dec
popa
sub
int3
imul
sahf
pop
push
and
lret
push
add
sbb
outsb
rorl
insb
dec
rcrl
test
sub
dec
pop
out
and
or
cmp
loopne
and
testb
je
sub
cmp
cmp
xor
scas
mov
adc
mov
xlat
sti
movsb
mov
lea
testl
je
sbbl
fcoms
mov
out
jle
dec
pop
addr16
cmp
dec
dec
mov
push
or
movsl
xorb
int3
aaa
popa
dec
sub
call
out
add
ds
sub
aas
add
jecxz
ja
mov
mov
mov
stos
cmp
pop
lds
cs
enter
mov
orl
aaa
rcr
and
cmpsl
xor
jecxz
or
loop
jp
mov
frstor
xchg
aam
xor
aaa
insl
adc
jo
mov
push
test
andb
shll
iret
clc
and
pop
push
iret
int
je
fidivrl
enter
cmp
adcl
dec
cmp
lods
ljmp
inc
aas
lods
popa
sbb
pop
sar
or
xor
mov
jne
mov
out
ljmp
movsl
cmp
pop
sub
inc
negb
mov
and
iret
mov
xchg
mov
out
test
pushf
jo
call
sub
mov
sub
jmp
fwait
dec
jmp
jae
call
xchg
cs
pop
aas
les
pop
scas
xor
or
stos
mov
insb
daa
mov
pop
cwtl
jge
insl
shrd
sbb
shl
aad
fmull
dec
inc
in
jp
mov
dec
xchg
inc
call
mov
das
adc
xor
inc
mov
add
or
clc
mov
test
jl
addr16
push
movsb
push
pushf
and
or
pop
adc
jnp
fs
jle
rcll
insb
push
enter
arpl
sbbb
cmp
aas
out
pop
mov
insb
nop
imul
jle
shll
aas
sbb
stos
ljmp
adc
iret
mov
pop
nop
push
push
outsl
fcoml
mov
fdivrs
adc
mov
into
testl
sbb
sti
stos
inc
test
dec
mov
xor
push
mov
pop
out
loope
mov
inc
stos
inc
dec
push
push
cmpsl
dec
stc
adc
adc
dec
cld
bound
test
mov
cmpl
pop
out
ds
mov
mov
or
push
lcall
popa
cld
std
lcall
inc
jle
xor
mov
out
cmp
dec
rorl
scas
mov
ret
xlat
mov
jp
xor
inc
fimull
scas
and
jmp
dec
cmp
shll
xor
push
jmp
jmp
test
mov
mov
xchg
push
cmp
iret
test
xor
loop
mov
cmp
or
loopne
hlt
rorl
movl
or
in
add
mov
ret
and
dec
es
addb
or
mov
jns
pop
adc
aas
pushf
jl
add
push
cld
sbb
gs
cmpsl
and
lahf
jle
jge
push
jl
in
mov
adc
pop
cmp
pop
loopne
push
mov
xchg
mov
or
arpl
loop
jb
sarl
repnz
and
add
or
pop
jl
stc
scas
mov
xor
movsb
mov
ret
stos
les
data16
and
iret
xor
add
int
sub
sbb
add
ror
push
daa
scas
push
out
fisttps
sub
push
fbstp
jae
xchg
in
std
lea
push
push
popf
adc
lea
ds
mov
shr
sub
push
test
adc
ja
jp
fstpl
push
fldt
sbb
push
adc
and
jbe
adc
decb
fwait
jnp
inc
lods
cmp
cmp
push
add
lods
or
mov
add
xor
pop
sub
push
jmp
adc
and
push
jmp
push
fidivl
or
stc
pop
js
add
cmc
jbe
aaa
leave
pusha
push
pop
out
mov
shrb
incl
cs
fldcw
mov
aad
popf
push
push
adc
push
dec
mov
cmc
inc
sbb
mov
inc
adc
inc
pop
pushf
xor
cmp
insb
aaa
mov
or
fwait
xchg
add
mov
sbb
lea
mov
js
icebp
inc
frstor
leave
test
sub
adc
sbb
xor
xor
stos
das
arpl
or
inc
stc
sub
mov
mov
cmp
push
addb
inc
inc
fdivp
pop
push
cmc
nop
adc
xchg
in
push
test
cwtl
cmp
subl
xchg
xlat
test
xchg
xor
sbb
mov
xchg
push
jbe
dec
mov
out
sbb
cwtl
call
or
mov
shlb
push
push
pop
rorl
cwtl
add
pop
mov
xchg
mov
iret
sahf
ret
imul
jno
push
inc
jb
cltd
mov
push
andl
lods
add
sahf
sbb
movsl
cmp
and
test
inc
mov
shl
loopne
sbb
adc
popf
lahf
popa
iret
xorl
cmp
sbb
pop
cld
shl
pop
cmc
mov
inc
xor
rcll
je
push
jne
popf
mov
dec
arpl
gs
rcl
xchg
bound
xchg
mov
push
nop
dec
push
xlat
dec
mov
xor
push
or
xchg
popf
pop
daa
popf
cmc
stos
inc
pop
push
push
mov
mov
cmp
stos
movsl
cmp
pop
push
jmp
ds
stos
sahf
stos
pop
cmpsb
sub
jp
mov
scas
xor
fst
ret
xchg
add
sahf
sub
test
dec
jb
push
stos
jbe
out
xchg
mov
xchg
xor
pop
lods
adc
cmp
cmpsb
xchg
sbb
lds
cmp
jnp
cmp
ret
idiv
mov
dec
jo
push
int3
ss
outsl
inc
out
cld
stos
push
daa
popa
sbb
loopne
xor
mov
and
std
adc
sarb
sbb
inc
cs
mov
into
sbb
fdivs
xchg
jno
int3
jge
jbe
mov
sub
int3
scas
fnstsw
push
pop
jecxz
popf
fldcw
mov
inc
cmpsl
or
cli
inc
pop
push
jecxz
je
inc
shrb
cmp
iret
xchg
int3
ret
mov
out
loopne
movsl
cmp
outsb
movsb
gs
hlt
inc
mov
mov
jmp
push
sahf
arpl
jo
xchg
fidivrl
mov
out
adc
mov
outsb
jp
add
ret
jb
dec
cmc
ja
add
push
add
jae
pop
jae
pop
mov
jecxz
lret
mov
in
sub
loop
or
scas
xchg
add
les
cltd
fnsave
imulb
jmp
jo
pop
out
lahf
mov
cwtl
shlb
into
xor
mov
filds
movsb
test
jp
mov
cwtl
sbb
insl
lock
fadds
dec
shrb
out
sub
xchg
clc
pop
cmp
fsubl
scas
fisubs
jns
out
push
aam
ds
repz
pop
xor
fndisi(8087
repnz
jno
addr16
call
sti
ss
mov
pop
subb
jp
cli
push
mov
loopne
dec
icebp
or
fwait
sub
das
push
ljmp
mov
inc
scas
sbbl
jecxz
adc
sbb
addr16
push
fs
das
test
outsl
and
sub
je
sub
jge
fisttps
stos
mov
out
repnz
cltd
mov
pop
push
sub
mov
sti
jnp
cmpsb
mov
imul
add
icebp
loope
stos
adc
xchg
mov
mov
dec
sub
inc
pop
jbe
scas
and
test
mov
aad
test
xchg
lahf
pop
in
aam
or
mov
lret
xlat
mov
mov
xchg
sbb
push
and
lea
into
or
pop
int
rorb
cmp
cmp
sub
mov
jns
cmpsl
insb
adc
and
fsubl
aam
pop
xchg
in
dec
inc
fidivrs
dec
dec
ret
sub
aam
pop
dec
out
pop
lock
sbb
in
cld
or
push
inc
or
or
data16
inc
push
cmpsb
xchg
mov
ret
clc
xchg
rcrl
fwait
xor
aaa
jbe
or
mov
pop
pushf
int
push
insb
cmp
bound
cwtl
mov
add
adc
mov
fstps
fstpl
das
adc
rcrl
sub
ljmp
jl
xor
jmp
daa
jp
xchg
cmp
sbbb
scas
cmc
add
pop
out
out
and
xor
sbb
mov
jno
cld
shll
mov
mov
push
sub
out
xchg
aas
mov
outsl
movsb
push
jmp
sbb
mov
popa
test
inc
mov
sahf
push
jbe
mov
xchg
adc
fidivrs
add
push
in
jo
inc
aaa
out
in
fcmovnbe
mov
adc
mov
mov
dec
scas
inc
jge
jl
shll
sub
neg
mov
and
repz
iret
pushw
push
movsb
jno
nop
push
lds
ja
testb
mov
adc
imul
ljmp
pop
sahf
pop
icebp
outsl
add
std
sbb
js
mov
cmc
fistl
push
stc
into
mov
cmc
into
fcoml
lret
fstpt
xor
imul
add
negl
sub
mov
fimull
add
stc
iret
sub
loope
mov
jb
fisubs
adc
out
jns
jae
lahf
lcall
in
xor
jle
push
jb
cmp
jl
jae
sbb
fdiv
sbb
aad
test
adc
xchg
xlat
xor
jmp
roll
sarl
push
outsb
xor
add
add
xor
cltd
jae
dec
rolb
icebp
mov
jge
lods
mov
shl
inc
push
dec
dec
shll
std
cmpsl
in
repnz
and
xchg
xchg
jge
test
ja
fcoml
cmc
push
jne
push
or
push
jl
pop
sahf
iret
pop
sub
loop
or
jo
pushf
sbb
aam
aas
pop
mov
arpl
xchg
clc
or
stos
sbb
cltd
and
and
cmc
push
rcrl
add
push
enter
jge
orl
dec
pusha
and
nop
rsqrtps
test
jle
fstl
test
mov
sub
imul
ja
mov
lret
and
in
push
imul
icebp
jbe
es
lcall
sbb
mov
movsb
lock
cmp
pusha
out
and
fldcw
xchg
sub
xor
mov
or
loope
push
push
xlat
icebp
xor
call
xchg
lea
cli
fcoms
loope
test
ja
mov
xchg
cmpsl
push
jle
fdivl
sbb
pusha
outsb
xchg
adc
jo
mov
roll
hlt
or
jle
push
mov
adc
insb
sub
dec
in
and
sub
push
cltd
pop
sbbl
push
dec
dec
loope
mov
lret
aas
popl
push
test
pusha
adc
cmpsl
cmp
cmp
mov
add
or
pop
mov
loopne
sbb
mov
mov
movsl
mov
fldcw
ret
fcoms
mov
jno
mov
cmp
fnstenv
sti
call
mov
mov
and
stos
fs
mov
jge
cmp
cs
mov
ds
add
cmp
or
leave
and
out
insl
mov
stos
pop
push
push
fstpl
add
cld
mov
cmp
out
rcll
xor
push
gs
cmpsl
stc
adc
sahf
cmp
sbb
shll
push
jb
or
mov
shlb
orl
shr
bnd
pop
subb
xchg
ficoms
xor
jecxz
push
jbe
jns
arpl
push
fs
insb
aaa
insb
bnd
and
imul
dec
fistpll
loop
lahf
xchg
pop
mov
mov
push
sub
xor
ficompl
aad
lcall
pop
sub
mov
mov
dec
xor
subb
jecxz
notb
fistpll
dec
add
dec
pop
test
mov
jg
push
xor
insl
out
xor
fstpl
test
outsb
fisubl
leave
pusha
faddl
ret
mov
push
imul
sbb
inc
sub
mov
int3
mov
add
mov
add
lfs
ret
ja
mov
inc
fimull
xchg
or
mov
orb
adc
cmp
pop
lods
aaa
add
ret
push
jge
sub
sbb
call
fsubs
pusha
mov
jmp
sub
aam
xchg
lahf
cld
mov
mov
sahf
xor
ret
push
jecxz
pop
lods
add
shl
outsl
mov
mov
dec
setns
fsub
jp
cld
pusha
jecxz
call
cs
fists
or
jnp
gs
adc
pusha
add
mov
cmp
or
xor
enter
rol
mov
rcl
outsl
push
inc
fs
jge
iret
add
sub
jo
jge
or
lret
sbb
lret
mov
cmp
jecxz
cmp
mov
sbb
loopne
arpl
shrb
cmpsb
mov
std
cltd
mov
mov
std
and
sbb
jle
xor
pop
cld
lret
incl
xor
insl
fisttpl
aaa
mov
jle
enter
xor
outsb
test
mov
lret
add
push
adc
sub
inc
fimuls
fldenv
out
out
psubusw
xchg
aad
jns
fwait
cmp
push
xor
in
inc
push
push
cmp
jns
ret
jnp
shll
movsl
jl
inc
cmpsl
mov
sub
insl
push
pop
sbb
push
jb
test
shlb
daa
popa
or
in
clc
mov
sbb
mov
test
mov
je
daa
mov
xor
lret
dec
xchg
jle
mov
jp
imul
ficomps
push
out
inc
jb,pt
roll
cs
imul
xchg
xor
daa
inc
shrl
xor
ret
push
pop
cmpsb
out
mov
pop
lret
mov
sti
enter
xor
xor
inc
out
or
fsubl
xlat
outsb
mov
push
sub
lods
xchg
test
xchg
out
mov
add
data16
mov
dec
test
out
or
or
pop
pop
andb
stos
call
push
push
in
adc
pop
ds
sarb
lret
cwtl
and
inc
dec
jne
jb
mov
test
xor
pop
push
outsb
mov
outsl
push
cli
sbb
pusha
sbb
sbb
stos
je
in
stos
stc
mov
and
lcall
sbbl
fdivl
out
and
mov
xor
test
xor
lock
lret
test
in
cmpsl
dec
and
push
loop
inc
insl
cli
arpl
shrb
flds
divl
pop
push
cmc
call
sbb
cmp
add
mov
cmpsb
xchg
sbb
mov
aam
pusha
mov
xchg
mov
mov
and
int
xor
sub
jo
lock
push
push
fstpl
mov
xchg
mov
push
leave
clc
xchg
xchg
cmp
xchg
inc
jmp
outsl
add
mov
jp
gs
ficomps
dec
xchg
push
fcmove
jl
xchg
pop
inc
fsubs
rorb
ss
jecxz
push
jmp
aaa
or
add
jle
outsb
rorb
xorb
and
leave
rcrb
dec
mov
scas
xchg
sub
in
mov
btr
mov
mov
dec
xchg
push
fnsave
fstpt
addr16
sbb
and
ja
pop
jp
test
or
inc
sub
cmp
daa
jecxz
loopne
lock
stc
inc
je
repz
push
push
nop
sbb
repnz
mov
push
xchg
mov
testl
test
pop
and
je
fwait
mov
push
sbb
in
and
add
sub
arpl
je
ficoms
mov
xor
jle,pn
lods
or
test
dec
mov
nop
ss
or
cmp
cmp
scas
shll
js
aad
outsb
and
outsb
mov
test
fsubs
mov
xchg
dec
data16
stos
adc
push
jecxz
cmp
jmp
popf
cmc
psrld
ja
shll
cmpsl
push
test
pop
fiadds
xchg
lods
jae
dec
and
inc
pop
popa
in
test
std
xchg
fld
xchg
xchg
sub
dec
push
insb
push
fcmovnb
mov
shrl
mov
mov
test
sbb
scas
call
push
in
das
jle,pn
aam
push
lods
sbb
inc
flds
mov
mulb
and
stos
leave
jmp
inc
movsb
ljmp
add
out
xor
adc
adc
push
aaa
xor
cmp
inc
fldcw
out
int3
bound
xchg
addb
push
shrb
ret
add
daa
scas
in
pushf
or
jg
cli
xchg
out
pop
cmpb
int3
movsl
jns
and
xchg
xchg
sbb
test
out
and
cmp
jecxz
jge
dec
test
mov
shrb
fmulp
addr16
or
cmc
xchg
in
stos
jl
fistl
incl
inc
or
out
ss
inc
std
jl
xor
xchg
sub
jg
xor
addr16
jle
call
lret
das
shlb
iret
inc
in
xchg
lods
adc
jne
push
mov
mov
push
push
insb
mov
xlat
fistl
jmp
add
inc
inc
pop
sub
arpl
xor
cmpsb
add
xor
and
cmc
mov
fdivl
inc
idiv
roll
push
push
aad
pop
rcr
pop
addr16
inc
stos
and
out
les
adc
push
mov
imul
cmp
mov
mov
inc
je
push
out
aad
dec
jp
cmp
add
rclb
sbb
cwtl
aaa
dec
js
mov
ffreep
jmp
add
xor
fcmovnb
adc
pop
out
imul
cmp
and
cs
xchg
aad
aad
stos
test
sti
int
jno
ret
adc
inc
ja
lds
sub
and
pusha
shlb
add
lcall
stc
nop
test
inc
pop
xor
ljmp
mov
sarl
add
ror
pop
js
stos
in
movsl
stos
cmp
dec
mov
mov
fisttpl
inc
jp
aam
dec
jg
mov
mov
sbb
mov
inc
rcr
out
adc
pushf
or
lock
imul
pop
sub
loop
jp
out
mov
adc
imul
stos
daa
sahf
popa
add
rolb
and
or
and
into
inc
inc
xor
push
pop
cmpsl
inc
and
inc
xor
adc
addr16
idivb
ret
mov
in
mov
sub
mov
mov
jns
mov
dec
aad
xor
loope
adc
inc
rcr
hlt
mov
fsts
addr16
adcl
scas
inc
xchg
pop
jecxz
and
out
shlb
dec
leave
in
decl
in
popf
movsb
repnz
or
push
or
add
dec
cltd
add
popa
cmc
cmp
loop
pop
fwait
push
hlt
mov
add
loopne
lea
ret
or
lret
mov
into
inc
pop
call
fimuls
or
inc
iret
in
or
mov
shll
dec
mov
push
cmpsb
out
out
sbb
pop
dec
pop
les
insb
push
rcrl
lcall
jl
push
sahf
pusha
imul
mov
rolb
sahf
jg
dec
sbb
dec
sahf
sbb
mov
pop
or
fmuls
and
push
daa
and
in
stos
pop
jg
push
inc
mov
subl
sub
rcrb
int3
inc
sub
push
fldl
test
push
fdivrs
inc
ret
push
push
lods
add
xor
mov
mov
add
fcoml
adc
push
and
push
xor
popa
or
call
test
call
fs
popf
sarl
fwait
mov
xlat
shrl
xor
pop
inc
xchg
mov
fucomi
pop
gs
stc
pop
inc
mov
lret
cld
negl
pop
ds
ffree
pop
sbb
ret
es
mov
pusha
add
aas
cmc
add
xchg
xor
mov
inc
adc
and
xchg
aam
dec
sarl
jb
jns
fwait
gs
int3
inc
sub
pop
dec
loope
mov
out
xchg
vpaddw
push
sbb
mov
aad
scas
add
popf
and
repnz
mov
rorb
mov
adc
popa
aad
xchg
dec
xchg
stc
out
bound
mov
cmp
test
pop
nop
fwait
aad
leave
mov
gs
mov
shl
ja
mov
cmp
dec
lods
dec
jge
xchg
pop
sbb
jae
or
adc
lds
iret
mov
mov
pop
mov
xchg
lahf
mov
shl
pop
mov
std
mov
pop
clc
mov
arpl
inc
mov
xor
mov
into
lds
cmc
sbb
xchg
xchg
insb
mov
jg
and
mov
adc
push
mov
push
ja
push
xchg
out
arpl
shll
xchg
push
cld
push
xor
or
sahf
push
arpl
mov
repnz
out
xor
mov
les
movswl
fldl
outsb
loopne
mov
pop
dec
loopne
pop
sbb
push
mov
insl
ret
adc
lret
rcrb
adc
or
imul
andb
sti
jbe
int3
or
add
mov
mov
mov
or
stos
pop
and
push
test
inc
sub
push
clc
pop
jle
mov
ret
shrl
fnstenv
imul
adc
stc
nop
push
out
cld
sahf
and
dec
xor
clc
inc
pop
push
aad
mov
inc
imul
scas
mov
sbb
dec
push
insl
pop
jmp
pop
je
xor
mov
mov
xchg
lea
lds
inc
test
jb
insb
cs
sti
dec
arpl
pushf
dec
icebp
rcl
pop
inc
pop
sub
sahf
jg
popf
insb
xor
mov
rcll
ret
cltd
mov
push
das
jb
add
mov
xchg
mov
push
daa
daa
outsl
or
imul
in
or
jne
pop
rcrl
pop
push
lea
xor
xchg
aaa
xchg
ret
ds
insb
sub
in
hlt
cltd
test
fincstp
in
xor
xor
dec
decl
adc
das
jno
rcll
jbe
mov
xor
cmp
mov
pop
push
mov
inc
fimull
orl
and
out
add
sbb
push
push
adc
push
iret
test
sub
mov
and
adc
addr16
mov
xor
jl
out
int
das
imull
pop
mov
xor
dec
jg
in
xchg
test
clc
push
hlt
mov
mov
adc
xchg
cmpsl
mov
fidivl
fidivl
dec
dec
push
xor
xor
dec
adc
cmp
add
int
push
hlt
push
mov
sbb
xchg
movsl
mov
ds
add
xchg
jns
sahf
xchg
adc
fadds
out
inc
repz
jae
icebp
fs
sbb
inc
xor
push
and
fs
push
movsl
in
repz
testl
in
xor
out
inc
jae
dec
lret
and
push
cmp
mov
mov
xchg
aam
jmp
add
cwtl
sbb
call
aaa
xor
jecxz
fwait
dec
bound
and
xor
loop
sbb
pop
fisubs
inc
adc
jl
push
jecxz
mov
xlat
jp
cmp
jp
sub
pop
push
mov
sarb
or
sti
stos
xor
inc
push
push
in
or
cli
xor
js
mov
pop
mov
popa
lret
xor
add
add
jb
mov
imul
test
out
stos
jmp
xor
sarb
mov
sarb
jg
dec
icebp
lock
aad
and
mov
or
lret
leave
pusha
std
and
lret
jae
mov
mov
push
jg
cmp
and
jmp
fwait
inc
aas
inc
fdivs
xchg
fisubl
xchg
mov
mov
xor
rclb
cld
sub
adc
sbb
movsb
js,pn
pop
jle
sub
xchg
int
outsl
daa
jno
fs
mov
popf
dec
out
ljmp
xchg
sbb
out
addr16
out
insb
sahf
aaa
rcrb
dec
cmp
mov
mov
fwait
scas
pop
adc
movsl
cmp
cmp
lcall
and
inc
inc
add
ja
fisubrs
in
int
pop
adcl
outsl
test
rcl
mov
mov
adc
sub
pop
sbb
xchg
sbb
inc
loop
cld
test
mov
mov
fildl
cs
repnz
jno
cmpsb
call
out
imul
xor
andl
mov
aad
add
notb
xor
shl
push
push
ja
loope
mov
lods
add
xchg
mov
les
xchg
fstps
cmp
out
test
movsb
test
iret
sub
loopne
das
stos
sahf
decb
ficomps
xchg
gs
lods
movsl
xchg
loope
es
pushf
pop
sbb
ret
push
push
and
lds
mov
addr16
std
in
inc
fmul
jecxz
movsl
cld
add
verr
lods
push
inc
rcrb
mov
push
dec
mov
pop
dec
movsl
adc
and
into
movsb
scas
xchg
out
gs
dec
sahf
and
cli
and
inc
adc
jle
ficomps
mov
lret
cs
adc
push
xorb
movsb
pop
fcmovu
clc
inc
subl
inc
jns
pop
into
or
inc
mov
popf
mov
mov
push
fsubrl
dec
or
jge
popf
ret
sti
and
push
sub
jge
xchg
cmpsl
xchg
out
stos
lods
sbbl
fstl
xchg
mov
jnp
mov
arpl
cwtl
sbb
sbb
aaa
mov
sub
pop
cmp
adc
rcl
out
jl
pop
adc
ds
or
inc
nop
popa
mov
loopne
cltd
lds
ret
mov
sti
push
fstl
mov
inc
mov
push
ja
mov
mov
pop
pusha
jl
leave
cmp
sbb
push
jle
out
aas
loopne
push
in
loope
std
mov
aam
pop
lret
loopne
lret
xchg
cmp
xchg
hlt
hlt
and
inc
xchg
in
aaa
dec
pop
xchg
inc
push
dec
in
repnz
xlat
scas
push
addr16
lock
rcrl
orb
push
icebp
cmpsl
sub
jecxz
sbb
push
pop
out
ja
mov
cmp
mov
adc
fdivrs
adc
scas
xor
cwtl
pushl
add
fidivs
push
adc
xor
jmp
aaa
xor
sbb
inc
stos
sbb
test
scas
negb
movsb
add
push
inc
frstor
mov
aad
sahf
das
mov
call
mov
pop
in
sub
mov
sbb
out
lock
fistl
dec
or
dec
popa
adc
mulb
popa
jno
sbb
lahf
sbb
test
xor
fs
popa
enter
sti
push
and
jmp
or
pusha
out
mov
dec
idivl
dec
sbb
rorl
sti
fsubl
lcall
push
xchg
cli
jbe
mov
mov
fidivrs
into
push
adc
mov
fwait
and
jecxz
dec
jle
fiaddl
outsl
push
fs
push
out
or
fdivs
push
test
das
xchg
stc
xchg
add
sub
and
loop
hlt
in
test
push
ficompl
ljmp
jle
mov
sub
shll
in
push
dec
push
std
mov
adc
cli
lcall
int
cwtl
repz
lcall
dec
or
int3
in
push
xchg
sub
sub
pop
mov
fistps
pop
push
int
divb
jnp
push
lds
add
jg
push
aaa
sub
pop
fcoml
cmc
cmp
adc
ret
push
aam
push
mov
cmpsl
xor
out
xchg
dec
or
xor
push
cmpsb
fists
jmp
fptan
add
lret
inc
push
adc
nop
or
insl
and
iret
hlt
push
cmp
or
nop
inc
lcall
inc
fistl
mov
push
xchg
out
jno
cld
dec
aam
xchg
mov
fbld
dec
pop
xchg
mov
or
mov
pusha
insl
jg
rcrb
in
fwait
add
pop
repz
mov
add
cmpsb
push
mov
push
xchg
add
stos
add
adcb
xlat
xchg
jp
gs
xor
pop
fwait
push
dec
fbld
adc
shr
movsl
push
fmul
ror
sub
ffree
lods
inc
mov
test
ljmp
adc
pop
mov
popl
stos
pop
jle
movsl
mov
cs
or
add
mov
sbb
sarb
scas
push
cld
inc
xchg
mov
xchg
out
mov
jns
inc
cwtl
push
stos
inc
popa
dec
xchg
mov
out
xchg
aad
jno
mov
dec
mov
hlt
out
mov
jno
and
lods
jbe
aam
dec
inc
fs
dec
pop
and
mov
lea
xchg
sti
mov
jge
xchg
pop
sub
lock
inc
push
fs
sbb
mov
scas
mov
hlt
push
push
insl
sarl
sbb
sub
or
stc
stos
push
cmpsb
popf
push
outsl
cwtl
dec
std
xchg
mov
pop
rcrl
add
arpl
test
lods
lret
mov
test
xchg
lock
mov
stos
mov
push
sbb
xchg
mov
xchg
cmp
sub
or
lahf
int3
les
rolb
jmp
in
ror
aad
addr16
hlt
adc
add
pop
nop
cwtl
mov
mov
xchg
mov
jl
or
test
adc
xchg
dec
ficomps
enter
icebp
insb
push
daa
sub
jb
inc
lea
mov
neg
in
ret
inc
popf
arpl
enter
rclb
jb
and
int3
in
or
mov
mov
pop
rorl
int3
inc
sbb
adc
pushl
call
les
jl
pop
ljmp
jmp
sahf
or
sbb
sti
lods
aad
test
mov
iret
data16
aam
xor
jne
inc
push
stos
addb
dec
dec
mov
leave
dec
clc
jmp
rorl
mov
pop
int
cmovb
js
nop
sbb
or
nop
mov
fnstsw
das
jl
or
add
inc
das
dec
sub
mov
xor
inc
xlat
outsl
cmpb
mov
icebp
and
cmpl
insl
mov
loope
or
sub
sub
cwtl
sub
out
daa
xor
out
imul
popf
mov
adc
enter
cmp
ret
mov
dec
mov
and
adc
push
sub
into
fcoml
aam
jg
mov
or
and
imul
adc
cmp
in
ss
mov
mov
scas
ret
and
lret
mov
sbb
sbb
mov
xor
adc
jl
inc
jb
jbe
fs
mov
test
xorl
cs
enter
stos
xlat
imul
sbb
or
xor
pop
inc
lock
sub
and
clc
hlt
sbb
dec
pop
cmpsb
dec
rcrl
sub
and
adc
dec
out
data16
lcall
sbb
jae
mov
fists
cmp
gs
pop
jns
sarb
jo
dec
out
loopne
push
icebp
sbb
and
lret
rclb
adc
sbbl
dec
mov
in
das
mov
mov
mov
nop
push
idivb
adc
popf
mov
cmc
stos
add
jg
cmp
std
repz
fildl
jmp
es
add
jmp
out
mov
xor
dec
sbb
ret
insb
bound
and
iret
xchg
mov
inc
inc
hlt
loop
aad
push
lret
inc
sahf
ss
lds
lahf
out
or
imul
fwait
out
sbb
mov
frstor
out
cmp
mov
or
mov
fcomps
fnsave
leave
int
mov
cmp
ror
pushf
das
fstpt
int
push
fmull
and
sub
mov
dec
push
fisubl
xchg
or
popf
jo
and
fs
popa
and
adc
sbb
xchg
loope
inc
pop
xchg
add
addr16
and
and
lcall
call
sbb
inc
pop
mov
sub
inc
mov
lahf
cld
xchg
pop
push
mov
loop
sub
test
mov
imul
dec
shll
loop
and
mov
test
sbbb
mov
ds
fnstsw
sbb
clc
lods
xorb
movsb
aas
mov
aaa
sti
mov
lds
test
ss
mov
push
jmp
or
out
insb
jb
les
pop
and
imul
popf
stos
cmp
adc
repnz
test
addb
ja
jecxz
ficoms
call
and
fisubs
mov
pop
data16
dec
xchg
cs
dec
push
idivl
repz
clc
jbe
and
push
in
add
pop
xor
mov
cmp
mov
inc
shrb
call
xchg
mov
cltd
test
adc
je
loope
mov
icebp
xor
aad
push
pop
into
mov
dec
sbb
popa
sahf
cmpsl
mov
jmp
add
sub
jnp
das
jo
and
add
or
loope
stc
call
gs
mov
sti
cmpsl
lods
lahf
mov
cli
sbb
ud0
add
frstor
mov
arpl
stos
jne
outsb
movsb
dec
push
add
in
jb
jl
ss
repz
xchg
or
xchg
or
xlat
ret
movsb
out
mov
add
hlt
mov
into
push
scas
or
out
dec
test
mov
pop
cmp
sub
das
in
stos
outsl
lret
dec
dec
addr16
les
push
lret
lret
frstor
dec
ret
loopne
dec
or
stc
movsl
repnz
cmp
xchg
fcoms
ljmp
ljmp
inc
popa
push
push
inc
push
fdiv
and
ret
dec
or
mov
test
nop
mov
nop
daa
cmp
out
loop
sub
jae
inc
mov
push
in
and
subb
loope
jl
pop
ljmp
xchg
orl
cmpsb
ss
inc
mov
jbe
jno
test
hlt
lret
loopne
and
adc
and
add
decb
jns
jp
lods
lahf
add
dec
jno
idivl
cmp
adc
jmp
pushf
cli
repz
popf
jbe
cmpsl
mov
clc
jg
stos
xlat
icebp
xor
pushf
xor
xor
mov
jno
rcr
repnz
in
inc
cmp
mov
jnp
jbe
cmpsl
dec
imul
add
xchg
cmc
ljmp
cmpsl
cmp
in
subl
mov
fsub
aas
scas
mov
xor
xor
or
rorb
out
xchg
push
mov
out
xor
leave
sub
dec
sub
xor
test
add
and
or
mov
in
sub
push
mov
and
mov
fstpt
pop
ss
push
test
cmc
add
mov
sahf
addb
sub
push
arpl
int
dec
in
stc
jle
aaa
shr
jns
pop
outsb
sub
jmp
in
lret
or
push
fdivrs
mov
rcll
adc
inc
lods
adc
push
pop
enter
jno
xor
cmpsl
imulb
cld
nop
xchg
mov
push
mov
scas
loope
pop
mov
inc
add
sub
movsl
xchg
ss
or
arpl
mov
aam
mov
idivb
jnp
or
push
push
cmp
xchg
iret
gs
int
call
loope
jns
lds
repnz
sahf
faddl
adc
sbb
pop
lods
add
push
jecxz
cmp
push
fs
sub
sbb
add
pusha
pop
and
sub
jo
pop
lock
sarl
adc
mov
je
pop
pop
mov
and
fstp
xor
push
sti
rolb
lds
in
dec
cmp
mov
inc
ljmp
cld
inc
push
scas
adc
add
fcomps
push
jbe
xor
cmc
pop
jmp
ja
ret
xchg
and
ljmp
jbe
jne
xor
push
int
outsb
or
js
jne
and
imul
jne
outsl
sbb
loope
cmp
rcrl
aas
mov
cli
loope
mov
subl
sbb
movsl
mov
nop
jns
int
enter
lods
icebp
int
pop
sub
or
out
icebp
into
test
adc
stos
cs
or
add
hlt
das
addr16
fstps
mov
insl
sub
mov
jbe
pushf
cmp
mov
lock
jns
shrb
rorb
pop
cmp
rclb
ja
jg
jp
pop
data16
xchg
dec
stos
sub
cli
mov
int
rorl
cmp
xchg
mov
sarb
lock
jl
test
rol
cmc
xchg
loop
jmp
dec
pop
inc
out
jle
mov
xchg
std
test
shlb
sub
and
inc
in
mov
push
inc
inc
dec
iret
jle
add
dec
stc
dec
and
out
add
inc
pop
subl
sbb
inc
out
data16
or
gs
mov
mov
pop
jle
sbb
aas
sti
jecxz
push
leave
enter
mov
loop
je
daa
clc
iret
aad
les
std
mov
jo
sti
loop
sub
or
test
rcl
push
lret
addr16
inc
push
inc
add
inc
dec
push
jno
pop
inc
aam
loopne
mul
inc
lcall
repnz
sbb
inc
rcll
into
fisubrl
andb
lcall
xor
in
mov
fldenv
repnz
jne
lods
rorb
mov
push
push
int
push
push
movsb
mov
jns
ret
aas
lds
pop
loop
icebp
inc
out
jne
adc
adc
and
xor
into
inc
jbe
out
push
ss
stc
cli
mov
leave
sub
repz
lcall
fbstp
jns
inc
fwait
mov
leave
inc
fnstsw
add
jnp
int3
jno
push
pop
lea
inc
imul
cmp
scas
add
in
arpl
andb
imul
movswl
pop
outsb
xor
xchg
xor
sbb
mov
aad
push
adc
and
es
aam
in
cmp
test
lret
and
sub
leave
test
sti
arpl
fsubr
mov
cmp
clc
repnz
insl
sub
pop
pop
fsub
dec
sub
jp
push
mov
xchg
mov
aaa
lods
lds
call
clc
lret
inc
aas
xor
les
inc
dec
add
jnp
ljmp
pop
popf
mov
mov
out
mov
cmc
cmp
sbb
shll
inc
sahf
lods
test
call
xor
ret
jnp
push
mov
xorl
jo
mov
mov
xor
jg
repnz
add
sub
mov
mov
cmp
leave
pop
cmp
clc
pop
test
cmp
out
in
pusha
rorl
mov
js
imul
dec
mov
pop
push
cmp
shr
jge
mov
test
scas
mov
loop
repnz
sbb
popa
push
lea
jb
push
cmp
fs
push
fwait
xor
cmp
pop
push
mov
jbe
add
lcall
in
adcb
xchg
sub
mov
dec
cmpsb
xorb
testl
shlb
push
dec
xchg
pop
fistl
mov
icebp
ja,pt
icebp
stos
js
or
jbe
dec
popf
in
ret
jb
sub
pop
sahf
jge
in
sbb
inc
je
jle
popa
push
and
mov
inc
or
enter
add
and
in
test
jnp
cmpsb
int3
add
insl
mov
imul
xchg
mov
es
and
cltd
jp
into
xor
popf
fs
pop
mov
add
je
cmp
sbb
sub
jp
int3
stos
adcl
into
sahf
jae
sub
and
adcb
xchg
mov
cmpl
mov
sbb
nop
cmp
rclb
fsts
inc
fidivl
in
mov
push
lods
mov
in
shr
addb
nop
daa
adc
rorl
enter
int
sbb
lods
leave
mov
test
in
dec
out
je
lcall
cltd
pusha
stc
inc
and
lea
std
xor
xor
mov
pop
adc
movd
cli
push
mov
adc
sub
repnz
dec
test
mov
outsl
dec
adc
cmpb
scas
sub
jae,pn
sahf
fxch
pop
add
cmp
imul
jbe
mov
push
lock
push
lret
xor
mov
stc
cmc
xchg
test
jg
push
out
ljmp
stos
jo
mov
dec
sbbl
int3
fistl
fsubs
sbb
cmp
cmp
mov
cmp
dec
mov
in
mov
adc
insb
xchg
cmpsl
arpl
push
push
xchg
adc
dec
shlb
mov
les
mov
pop
cmpsl
jp
das
or
nop
imul
pop
xor
cmp
and
adc
xor
mov
ds
lea
fiaddl
lcall
cmp
mov
push
sarl
gs
cltd
mov
or
fdivp
cmp
mov
addr16
and
and
leave
and
daa
ret
sbb
fstpt
jae
jns
adc
lods
mov
cmp
adc
lods
xor
jle
xchg
stos
dec
stos
push
xchg
scas
and
in
lea
pop
movsl
sbb
inc
lock
jae
into
xor
inc
cmp
jae
mov
dec
push
sub
dec
pop
cmp
jbe
lret
xchg
pop
cwtl
jno
sub
pop
dec
and
cmp
push
hlt
sti
ja
ficompl
cltd
iret
repnz
xor
je
cmpsl
in
cltd
add
or
xor
cmp
xlat
jecxz
pop
leave
scas
pop
xor
test
mov
ftst
mov
sbb
ret
popa
std
inc
fistpl
lds
loop
sahf
neg
cmpsl
dec
imul
sbb
jo
outsb
inc
jne
divl
dec
cmpb
or
and
dec
adc
push
jae
cmp
jb
jp
dec
aam
ja
aas
push
test
stos
and
lcall
mov
push
ficoml
pop
cld
inc
lret
xor
das
nop
sahf
cmp
out
mov
leave
xor
bound
push
mov
negl
cmpsl
xchg
jb
jmp
outsb
iret
mov
jmp
loop
cmovge
fchs
push
or
fs
and
sub
fcoms
xchg
xor
aam
lcall
leave
rorb
or
aad
sub
sarb
and
fwait
xchg
repz
imul
aad
lahf
stc
jle
push
in
cmpsl
sti
jl
adc
pop
adc
and
mov
pop
or
into
lods
and
sbb
sub
pop
jno
clc
xchg
inc
jmp
insl
adc
xchg
dec
or
sub
test
sub
das
or
xchg
iret
rol
inc
push
stos
xchg
pop
add
and
jne
pop
imul
jno
and
mov
les
imul
pop
in
movsl
popf
je
cmp
sti
stos
mov
ret
outsl
jnp
jecxz
mov
lahf
outsb
cmp
addl
das
adc
or
sarb
add
push
lock
mov
inc
fmull
mov
jg
inc
stc
cmc
xchg
sbb
pop
ret
stos
push
cmp
mov
js
frstor
adcb
xchg
rol
movsl
clc
inc
fwait
sbb
and
xor
out
aam
jecxz
mov
jecxz
outsb
or
sbbl
scas
add
xchg
inc
push
hlt
and
inc
fsubp
xchg
ret
loope
fidivrs
adc
mov
ljmp
mov
call
loop
cli
out
stos
pop
cmp
leave
les
dec
cwtl
jmp
push
sbb
push
jecxz
jecxz
pop
iret
or
mov
outsb
or
adc
pop
scas
fsubr
add
xor
repnz
sbb
in
cmp
pop
insl
add
scas
inc
push
andl
mov
mov
in
rcl
pop
push
stos
jg
inc
les
xor
xchg
decb
es
hlt
bound
into
in
xchg
ss
and
sub
in
inc
shlb
or
cs
and
pop
stos
imul
xchg
std
and
or
pop
mov
dec
pop
mov
fbld
mov
xchg
lret
mov
lcall
sub
sub
sbb
sbb
dec
arpl
inc
push
jmp
aaa
subb
or
add
jg
mov
loop
xor
push
out
xor
adc
adc
push
repz
xchg
in
lahf
jo
roll
mov
scas
push
fadds
mov
mov
ss
adc
adc
cmp
in
icebp
xchg
and
cwtl
sar
xor
leave
cmpsb
mov
das
xchg
arpl
sbb
or
adc
test
fucomip
inc
mov
jo
and
out
cmp
jl
cwtl
insl
add
or
cmp
push
fsubs
inc
cmpsb
popf
fstl
pop
and
xor
xor
dec
enter
addr16
ficoml
add
and
push
loope
xor
mov
xchg
daa
jg
xchg
cmp
xchg
into
adcb
xor
mov
andl
sahf
xor
or
aas
pop
popf
cmpsl
mov
lods
jmp
pop
test
lahf
adc
xor
insb
js
xor
fistl
je
mov
insb
xchg
mov
popf
add
out
stos
xchg
insl
nop
push
insl
inc
mov
sarb
mov
fstpl
push
mov
repnz
cmpsb
xlat
mov
push
add
ret
es
and
mov
push
mov
push
insl
add
into
test
xor
xchg
imul
xchg
loopne
ja
idiv
aaa
push
cmp
into
adc
loopne
push
jle
jno
sub
xor
or
inc
addb
cmp
out
mov
sbb
pop
or
pop
addl
loope
movsb
push
aad
sub
inc
and
lret
sub
push
pushf
test
sub
push
xor
mov
orb
mov
imul
cs
int3
push
in
mov
aaa
je
aas
mov
mov
shll
push
xor
cmpb
mov
dec
or
mov
add
mov
pop
xor
xor
jae
loopne
cwtl
push
jbe
cmp
loopne
out
push
sbb
sub
mov
icebp
cmpsb
mov
pop
imul
sbb
ja
test
hlt
mov
ljmp
inc
sbb
fs
shl
mov
rcrb
lret
fdivrs
cmp
movsb
test
aaa
imul
xchg
imul
sub
dec
sbb
xor
rolb
js
add
in
lock
loop
pop
cmp
pop
insl
and
test
imul
jno
push
jns
roll
push
pop
iret
sbbb
clc
loope
pop
imul
pop
insl
loope
sahf
scas
adc
mov
xchg
sbb
or
cld
or
hlt
gs
xlat
outsl
pop
mov
lahf
loope
push
outsl
xor
repz
adc
mov
adc
popa
adc
clc
dec
je
push
mov
or
es
xor
pushf
stos
out
movsl
sti
or
sub
ficoml
leave
pop
jl
xor
imul
push
leave
sbb
push
xchg
cmp
into
les
popa
dec
iret
mov
lret
xlat
mov
jo
enter
push
lcall
cmp
sub
lcall
insl
mov
push
cmp
mov
nop
out
xchg
mov
scas
sbb
mov
leave
xchg
dec
jno
ja
shl
mov
scas
mov
loope
push
fnop
sub
roll
test
in
pop
sub
jnp
lock
lcall
or
push
in
pop
push
or
aam
xor
dec
mov
or
push
add
mov
xor
out
cmpsl
cltd
push
mov
roll
push
or
dec
mov
jns
jmp
push
rcr
mov
clc
ror
jnp
xchg
neg
push
xchg
cs
jne
data16
jmp
push
in
dec
push
shl
fnstsw
pop
fs
sbb
and
les
sbb
mov
mov
sti
fwait
jb
and
mov
das
andl
dec
mov
mov
adcb
aas
imul
in
shlb
pop
xchg
push
aas
jg
sbb
ss
fnsave
scas
inc
scas
fsubs
lods
ljmp
xchg
rcl
in
inc
jae
mov
push
mov
jno
pop
addb
mov
hlt
mov
inc
adc
dec
xchg
jg
pushf
dec
adc
ja
sbb
ret
shld
push
xor
es
mov
cmp
mov
ja
test
cltd
mov
dec
adc
js
arpl
push
pop
and
pop
icebp
popa
clc
das
sbb
sbb
jg
lock
jmp
jl
fisubs
sti
dec
or
xchg
clc
sahf
lahf
std
adc
mov
gs
or
loop
sub
inc
mov
daa
movsl
pop
xchg
sub
xchg
add
arpl
into
push
inc
mulb
xor
push
imul
pop
loope
loop
sub
shl
aaa
jg
sbb
cmc
mov
lods
popa
push
andb
test
ds
jae
sbb
and
in
addr16
cltd
fwait
jle
lock
or
cmp
popf
xor
lods
mov
hlt
jmp
ret
vhaddpd
push
mov
sbb
jnp
jp
aas
push
js
xchg
jns
push
xor
jle
or
cmp
cmpsl
fstpt
lock
test
scas
rep
sbb
push
or
call
movsl
subb
arpl
call
int3
mov
sub
je
mov
xor
jecxz
inc
cmp
pushf
scas
cmp
cmp
dec
test
ljmp
jmp
iret
sub
mov
add
inc
add
testl
dec
mov
xchg
lock
fisubl
pop
cmp
aas
cs
jp
mov
sub
push
mov
repnz
in
push
mov
es
push
or
pusha
rorb
xor
or
enter
sbb
sahf
enter
out
cmc
inc
popa
cmp
add
or
jle
in
enter
sub
pop
sahf
int
shlb
sub
lret
jle
into
xlat
and
pop
cmp
imul
sti
dec
in
aad
adc
jl
fwait
in
ret
dec
cmp
jmp
xor
xor
mov
out
pop
cmp
ds
jp
int3
sub
cmp
sahf
pop
cmp
outsl
test
sbb
dec
lahf
stos
daa
adc
sbb
and
dec
cmp
push
cmp
xchg
mov
or
xor
xchg
mov
out
bound
mov
xchg
loop
add
jnp
pushf
scas
lods
movsl
testl
jmp
cld
xchg
das
or
movsl
cmp
mov
push
imul
repz
in
push
jbe
xor
pop
mov
sbb
fisubs
pop
jae
jbe
out
lods
sub
ja
and
jmp
and
into
fcmovu
imul
shlb
jecxz
mov
push
pop
inc
lea
mov
or
xchg
add
movsb
cmp
roll
fbld
inc
push
fnstsw
sub
or
scas
es
dec
ljmp
pushf
sahf
mov
lock
and
xor
jle
and
jns
into
lock
dec
sbb
out
scas
xchg
add
dec
cmp
sbb
int
xor
jnp
leave
lret
js
and
mov
les
int
sub
or
es
dec
add
lret
out
and
jmp
lods
lods
cmp
out
push
nop
cmp
movsl
dec
movsb
pop
movsb
andl
mov
and
outsb
push
stos
xchg
faddp
fdiv
mov
mov
js
lahf
and
sbb
xchg
aas
push
sbb
or
pop
leave
fnstcw
sub
mov
adc
mov
mov
lcall
iret
rcr
jno
sbb
xorl
sbb
dec
rorl
push
sahf
enter
inc
inc
data16
shl
ja
or
sub
enter
fisubs
sbb
xlat
push
jecxz
pop
clc
mov
sub
mov
sbb
mov
pop
das
add
subl
stos
adc
pop
sub
fildl
add
adc
cmp
scas
bound
mov
dec
dec
and
push
jmp
dec
mov
cli
movsb
dec
cmp
jbe
shl
je,pt
push
mov
push
movsl
test
mov
test
mov
lock
ja
sbb
fwait
js
xchg
mov
iret
inc
lods
jmp
mov
popf
xor
loope
pop
xchg
xor
loope
push
cmpsl
dec
sub
rorl
int3
loopne
stos
fstpt
inc
stos
xlat
push
mov
push
inc
mov
test
dec
popf
hlt
xchg
mov
xchg
sbb
sbb
sbb
jl
xchg
rcrb
clc
enter
scas
outsb
jo,pn
pop
xchg
repnz
and
aam
push
jl
add
pop
sbb
or
add
adc
incl
push
outsl
inc
dec
icebp
pop
fbld
xchg
lret
pop
xchg
in
sub
lods
mov
or
fbstp
mov
insl
xor
clc
adc
sub
xchg
jle,pt
pop
fs
mov
mulb
stos
in
in
adc
aad
lcall
fprem1
inc
mov
add
jp
pop
sbb
test
cmpsb
cmp
cwtl
sub
test
jmp
jbe
cmp
popf
into
out
inc
cmp
sub
repz
movsl
cs
mov
cmp
pop
inc
stos
lds
fnstenv
sub
sub
hlt
dec
call
add
sbb
es
cltd
pop
lock
jmp
daa
dec
mov
std
outsb
add
push
jmp
into
xchg
and
icebp
fistpl
outsb
dec
jnp
push
pop
lods
repz
jmp
mov
test
mov
mov
mov
cs
pusha
addr16
jo
jo
fisttpl
rolb
and
insl
inc
dec
scas
add
scas
jns
push
rcl
scas
mov
push
adc
popa
and
adc
dec
adc
xchg
inc
iret
inc
test
out
sbb
xor
mov
push
pop
push
test
int
push
popa
mov
int
pop
mov
xlat
adc
lahf
enter
cmp
jae
aad
pop
pop
and
into
subl
ljmp
dec
sbb
orb
dec
dec
dec
repnz
insl
xor
test
mov
xchg
lea
cmp
and
push
cmovnp
cli
jp
aaa
xor
fmul
mov
mov
push
lea
fcoml
imul
bound
lods
mov
or
into
gs
lock
push
outsl
daa
std
fstpl
mov
lahf
pop
xor
adc
test
pop
cmc
xor
xor
popa
pop
or
mov
dec
aam
jp
adc
imul
mov
dec
pop
loop
mov
inc
mov
xchg
cmp
sbb
jl
mov
mov
shl
xlat
out
adc
mov
gs
and
pop
out
inc
add
jp
fwait
notb
int3
add
pop
mov
stc
push
imul
pop
pop
fnstenv
jle
jo
mov
in
add
push
dec
mov
pusha
test
or
orl
sub
aam
push
sub
aas
in
cmp
xlat
sbb
push
cmpsb
sub
mov
insb
inc
inc
mov
and
mov
or
add
adc
daa
stos
sub
push
in
rorb
and
jb
mov
pusha
sub
xchg
or
push
mov
inc
fdivp
push
sarb
out
adc
and
rclb
and
mov
mov
mov
stos
jg
dec
and
sub
rorl
dec
bound
scas
lea
in
jl
sbb
outsl
js
or
adc
dec
inc
fnstenv
xlat
cmc
adc
shlb
add
xchg
push
in
mov
fbstp
push
repz
jne
ret
test
xor
inc
dec
cmp
jecxz
insl
dec
xor
jo
mov
ss
cwtl
bound
dec
movsl
push
xlat
push
sti
adc
enter
and
pushf
lret
mov
cmpsl
cmp
sub
movsb
cltd
das
push
sub
ljmp
and
and
nop
push
jbe
out
and
mov
aaa
das
jns
lret
cmp
mov
or
jecxz
inc
mov
gs
scas
xchg
mov
push
imul
mov
sti
or
mov
lods
mov
sbb
or
xor
jae
cld
xchg
cmp
sahf
clc
mov
xchg
cli
pushf
pushf
and
imul
ljmp
mov
push
jae
sbb
mov
cmc
and
aad
and
mov
addr16
adc
pop
fisttps
sarl
mov
data16
jbe
ss
or
popa
jo
movsl
and
mov
lcall
push
out
adc
fs
scas
xchg
pop
repnz
pop
lock
inc
pop
add
ja
sub
and
roll
add
sgdtl
or
push
in
repnz
testb
mov
mov
inc
pushf
sub
nop
mov
add
xor
add
aad
cmp
sub
inc
cmc
and
mov
and
mov
add
xor
fisubl
and
in
pop
in
add
fisttps
pushf
mov
movb
fildl
mov
adc
push
popf
insl
jne
fstp
cmc
push
push
dec
sti
and
rcrl
stos
pop
aam
aam
icebp
mov
inc
push
pop
fstpl
push
cmp
addr16
pusha
cmp
leave
fs
xchg
les
inc
add
enter
or
ss
lods
add
dec
dec
cmpsb
lret
lock
lcall
sahf
stos
xor
cmp
cmpsb
jbe
pop
sti
mov
outsb
mov
dec
mov
adc
and
mov
and
out
mov
std
dec
add
xchg
lods
out
popa
enter
les
inc
adc
rcrl
shlb
xchg
jecxz
je
dec
pop
mov
stc
test
aam
mov
fnsave
inc
and
aad
push
fwait
leave
notb
xor
push
jno
movsb
xchg
sbb
ret
adc
mov
and
ret
xor
and
mov
dec
inc
or
xchg
mov
cmp
ss
adc
pop
cmp
xchg
pusha
xor
adcb
sbb
push
les
jo
icebp
adc
ss
jb
dec
adc
in
pushw
jo
xchg
out
fnstenv
popa
jnp
adc
xor
jp
pop
out
iret
pusha
dec
cwtl
jecxz
js
bound
orl
mov
or
push
dec
sbb
insl
daa
cmp
insb
shlb
cmp
dec
mov
or
ja
sub
jno
mov
in
xchg
out
mov
lret
sarb
repnz
pop
mov
ds
jge
pop
std
cltd
roll
jbe
xchg
xchg
sub
scas
push
lcall
loope
ret
jbe
xor
or
sub
in
and
or
inc
mov
lahf
and
into
push
call
in
imul
loopne
nop
pop
dec
add
scas
dec
xchg
xchg
test
jb
movsb
cmp
loope
insb
jbe
out
push
shl
sar
sbb
xchg
dec
mov
jle
jmp
dec
repz
dec
imul
mov
pop
push
insb
mov
lods
call
mov
aad
mov
jae
sub
lods
jnp
mulb
enter
mov
cmovno
add
add
out
cmpsb
sbb
ss
fisubl
stos
in
call
nop
addr16
clc
cwtl
jae
pop
push
xchg
add
fisubrs
cmp
add
inc
pusha
jno
rcrl
insb
sbb
loope
pop
adc
arpl
mov
push
cmc
movsb
inc
fcmovnbe
lcall
in
aaa
and
push
fidivrs
mov
mov
dec
js
mov
arpl
sbb
pop
scas
shrb
jo
loope
test
and
lods
inc
jnp
mov
insl
nop
sti
rolb
cmp
arpl
rclb
or
dec
add
sti
pop
sbb
cmp
pop
out
cs
addb
out
nop
les
add
jecxz
mov
jg
pop
out
ret
jnp
je
out
out
movsb
add
xchg
push
pop
sub
inc
lods
fisttpl
test
and
sbb
into
shr
push
mov
popf
jnp
scas
stc
jb
loopne
sahf
mov
xor
mov
dec
movsb
cmp
inc
pop
lahf
ljmp
notl
dec
or
inc
mov
ljmp
xchg
sub
addr16
push
inc
pop
push
adc
cltd
mov
mov
fldl
andb
xchg
insl
ja
mov
stos
inc
push
lahf
loop
xor
pop
inc
dec
imul
pop
inc
mov
mov
cltd
jmp
and
loop
mov
fstpt
xor
xchg
mov
js
jmp
mov
mov
aam
xchg
mov
mov
ljmp
nop
aad
sub
push
fidivrl
sti
jbe
adc
xchg
dec
xor
subl
lock
push
les
pusha
cmp
movsl
cld
arpl
fldl
sahf
test
popa
pop
jge
pusha
or
popf
arpl
jl
popf
cmp
out
lea
xchg
test
mov
enter
xor
mov
and
dec
xor
mov
push
or
rclb
stos
pop
jne
or
insl
add
fnstcw
loop
data16
and
inc
arpl
cmc
xor
jae
cmc
jecxz
push
int
cmp
mov
imul
sub
shll
pop
push
movsl
lea
mov
cmpsl
and
mov
jecxz
mov
mov
cmpsl
ds
cltd
xchg
hlt
inc
movsl
cmp
mov
add
sar
lret
jnp
mov
test
sub
pop
mov
movsl
fisubrl
mov
cmpsl
ret
pop
imul
or
dec
xchg
outsl
add
jo
lock
mov
jmp
leave
aad
pusha
nop
push
or
pop
icebp
mov
mov
or
and
dec
pop
pop
or
daa
dec
and
addr16
pop
adc
jno
xor
scas
ljmp
mov
mov
sub
repnz
mov
sub
outsl
xchg
sahf
test
adc
xor
or
mov
push
adc
push
outsb
pop
xor
hlt
test
js
popf
test
ja
mov
shrl
mov
insb
jb
insb
or
pop
sbb
jge
and
ja
mov
pop
lret
pop
adc
nop
jecxz
int
add
sahf
push
paddw
repnz
or
inc
jp
pop
inc
data16
adc
push
pop
shlb
pop
jg
xor
icebp
insb
int3
cltd
in
sbb
dec
std
or
mov
add
imul
cld
push
mov
insl
add
xor
mov
mov
imul
add
xor
int3
fdivs
test
aas
push
je
jl
jno
mov
fidivl
les
push
or
lahf
sarb
hlt
jb
add
or
fmuls
jecxz
mov
js
ret
jnp
or
pusha
repnz
test
ret
outsl
pop
xchg
dec
lods
cmp
dec
mov
dec
and
sub
in
mov
pop
mov
mov
inc
fisubrl
loop
and
flds
jno
enter
push
sbb
xor
test
or
jbe
dec
nop
xchg
xlat
or
adc
push
pop
cmpsb
test
fildl
sbb
mov
scas
aas
jg
iret
push
sbb
std
xchg
jo
sbb
out
ret
ljmp
in
je
and
inc
in
mov
fwait
mov
popa
jnp
add
mov
and
push
cmp
dec
pop
rcrl
xor
movsb
popf
inc
mov
dec
dec
daa
loopne
mov
push
outsl
xor
push
cltd
stos
ret
testl
cmp
pop
out
shlb
addr16
mov
mov
je
loop
sbb
sahf
xlat
jbe
scas
mov
jmp
lahf
lea
lcall
imul
inc
mov
xchg
add
push
aas
adc
push
or
or
jae
out
aas
dec
mov
mov
mov
dec
and
lods
xchg
sub
call
movsl
xchg
xchg
pushf
xor
mov
dec
clc
and
dec
fisttps
inc
mov
fiaddl
push
pop
sub
movsl
jmp
cmp
je
loope
repnz
adc
cs
xchg
imul
xchg
gs
fsubp
cmp
pop
andb
shrl
mov
aam
sbbb
rcl
daa
sub
xchg
pop
or
dec
ret
aaa
clc
pop
fisubs
nop
fldcw
cmp
lock
stos
insb
xchg
mov
out
mov
jno
outsl
test
mov
push
inc
adc
sbb
xor
stos
xchg
push
loop
gs
push
mov
adc
shlb
mov
leave
pop
add
xchg
sub
and
jbe
jo
add
adc
das
pop
dec
stos
push
lret
jb
fidivl
inc
iret
xor
adc
popf
or
decl
xor
pop
test
mov
mov
sub
popf
popf
cli
shl
or
push
mull
xor
pop
adc
sarl
adc
sbb
push
popf
xchg
pop
test
sarb
pop
loopne
adc
cmpsl
cli
shrb
aad
and
mov
mov
imul
push
dec
adc
mov
out
shr
pop
int3
cld
xchg
mov
imul
out
mov
mov
dec
scas
push
xor
insl
jae
pop
movsl
mov
sbb
insb
inc
or
dec
mov
decb
mov
sbb
je
xchg
inc
sbb
stc
insb
jnp
xchg
cmp
shrb
mov
mov
cmp
and
xor
lcall
cli
inc
negb
dec
pushf
xchg
jle
out
mov
adc
mulb
xchg
call
mov
pop
sub
mov
mov
loope
sbbb
xchg
mov
outsl
nop
lods
adc
ja
cmp
lcall
addl
xchg
sub
ret
xorl
enterw
or
sub
pop
lahf
hlt
cli
add
jnp,pn
sub
xor
fisubs
dec
test
mov
call
ljmp
out
test
push
dec
xabort
or
jecxz
rclb
subl
call
or
mov
outsb
scas
rcrb
add
rep
es
icebp
xchg
daa
push
movsl
push
sahf
pop
push
hlt
nop
sub
inc
sbb
sahf
dec
mov
sub
test
test
fdivl
mov
jae
adc
pusha
negl
imul
mov
fnstenv
pop
stos
scas
aaa
popf
mov
cmp
loope
sbb
dec
mov
loopne
das
bound
xchg
rclb
test
scas
pop
movsl
push
pop
jmp
mov
andl
xor
inc
pop
imul
mov
rorb
mov
or
sbb
icebp
sbb
xor
push
shlb
fsubs
or
jp
lock
dec
mov
int
out
jmp
outsb
clc
inc
jecxz
adc
add
cwtl
rcrb
jo
mov
xorl
lea
cmp
xchg
xor
mov
dec
xchg
sub
fidivrl
adc
lcall
add
orb
lret
bound
push
jmp
cld
bound
pushf
xor
arpl
jecxz
movsl
test
mov
js
repz
loope
mov
xchg
jge
push
mov
cmpl
cmp
imul
clc
sahf
fidivrl
jb
in
mov
daa
inc
adc
adcb
push
orl
loopne
push
xchg
adc
xor
push
int3
jbe
dec
jb
shlb
mov
cltd
pushf
sbb
test
sti
mov
xchg
repz
lock
xchg
jecxz
push
mov
stc
mov
inc
sbb
cmpsl
ret
test
loope
notb
in
cmpb
nop
rcrb
out
sbb
lock
mov
aaa
pushf
fcoms
int3
lret
jb
mov
jmp
jns
pop
mov
int
fwait
into
push
inc
fbstp
xchg
fstpt
hlt
in
test
mov
shlb
xor
roll
and
jecxz
or
xchg
nop
ds
adc
mov
shrl
stc
mov
sbb
orb
jge
enter
movb
out
or
jecxz
aaa
xchg
cli
xor
and
cmp
inc
fcoms
clc
mov
mov
ja
ret
add
loope
sbbb
loope
mov
push
xlat
jge
adc
xchg
or
fsubs
fsub
xor
int
js
push
ljmp
mov
movl
cmp
and
bound
sub
sarb
and
in
xchg
ret
outsb
lret
pop
enter
pop
jmp
or
lret
inc
cs
ljmp
and
or
sbb
adc
mov
mov
sub
jp
push
outsb
inc
stos
adc
fwait
xchg
mov
dec
mov
fiaddl
std
mov
lods
inc
push
sub
hlt
push
sti
lret
pop
fmul
sub
loop
inc
dec
fs
cmpsb
mov
inc
mov
ja
inc
shlb
push
adc
pusha
lret
and
cmpsl
stos
icebp
mov
add
or
or
jno
add
xchg
sbb
call
add
imul
cs
mov
lods
ror
fdivrs
into
push
dec
mov
dec
iret
gs
imul
in
push
pop
and
aam
and
sbb
rolb
repz
cs
sub
out
addl
push
mov
add
xor
add
inc
sub
dec
jl
loop
cmp
dec
addb
cmp
jnp
popf
add
sbb
sbb
pop
adc
lahf
movsb
xor
sub
push
mov
add
daa
incl
push
out
cmpsl
ds
out
mov
cmp
out
dec
cmp
cmc
adc
int3
lcall
test
stos
rorl
stos
push
lcall
cwtl
das
es
jae
push
into
mov
sbb
push
std
test
push
in
cmpsb
fildll
jnp
gs
xchg
cs
xchg
test
loop
cs
sbb
mov
out
sbb
fstpl
ret
stos
shrb
push
xchg
repz
lea
out
adc
lock
push
xor
push
and
jecxz
lret
push
sbb
lods
xchg
add
lret
fwait
sbb
adc
xor
bound
pushf
imul
fnstcw
test
out
jno
sub
push
leave
test
imul
testl
std
cmc
mov
cmc
sbb
pop
jg
out
ret
adc
dec
add
xchg
enter
ret
pop
mov
cmp
rclb
xor
gs
sarb
pusha
lods
xor
daa
ljmp
adc
rorl
push
call
shrl
fsub
dec
pop
push
shlb
add
fisubrs
add
push
fimull
xchg
lods
mov
lret
cmp
les
test
xchg
dec
shlb
xchg
addb
and
jge
mov
push
rcl
popa
lock
mov
and
sbb
in
mov
ret
call
fildll
or
sbb
cld
jnp
sti
in
lock
mov
add
and
jbe
add
ds
push
cltd
insb
scas
insl
xchg
jmp
stc
pop
push
ss
jns
loop
push
dec
pop
jge
cmp
xchg
sbb
push
fistpl
fwait
or
xchg
imul
cmp
in
jne
push
jg
dec
lds
clc
and
pop
aam
pop
xor
dec
sub
in
int
or
insb
mov
and
sub
popa
cs
addr16
inc
jle
push
pop
mov
ljmp
imul
subl
mov
loopne
dec
repnz
ds
pop
mov
or
imul
push
das
sbb
xor
test
loop
push
js
lds
and
les
jp
sub
cmc
test
mov
lret
cli
jmp
dec
lret
and
movsl
inc
dec
sub
and
cmpsb
dec
rcl
cwtl
push
lds
dec
bound
xor
push
rcll
insb
lds
repz
dec
orb
pop
ss
dec
outsl
xor
scas
cmc
and
xlat
or
sbb
add
sub
enter
pop
in
pop
and
mov
pop
fwait
in
and
stos
mov
aad
mov
cld
xchg
scas
mov
xchg
xchg
mov
jne
mov
mov
mov
or
jecxz
movsb
jnp
fbld
jnp
inc
data16
dec
fidivl
leave
jp
je
clc
std
inc
cltd
js
lret
push
or
ljmp
inc
ds
adcl
bound
xchg
push
mov
sub
cwtl
adc
clc
or
rclb
pushf
or
lret
push
jae
xchg
out
jno
mov
jb
ja
push
incb
push
dec
push
push
ja
enter
cmp
add
rolb
cwtl
pop
insl
rorl
sub
pavgw
movsl
mov
jbe
pop
add
dec
mov
xor
stos
orb
shr
mov
cwtl
sbb
dec
mov
inc
and
push
cmpsl
aas
adc
or
hlt
xor
addr16
fmul
shlb
das
mov
rcr
dec
cmc
adc
fisubl
sahf
xlat
and
sbb
mov
cmp
mov
sbb
inc
pop
adc
mov
psllq
leave
pop
mov
pop
mov
xchg
sub
inc
or
inc
iret
push
enter
call
icebp
dec
loopne
inc
dec
lods
jae
cmpsl
cmp
dec
jle
mull
jecxz
adc
sub
sub
scas
repz
mov
mov
inc
outsb
inc
jbe
mov
adc
pop
out
cltd
sub
push
shrl
push
cmp
leave
int
aas
mov
cs
jne
jns
or
popf
fldenv
and
lahf
jbe
xor
std
xchg
xchg
cmp
adc
sbb
cmpsb
int3
xchg
fdivs
xchg
and
sub
jmp
dec
mov
pop
fwait
add
jo
push
xchg
ja
mov
mov
fistpl
outsb
add
dec
pusha
or
scas
addl
lods
jmp
lds
insl
adc
mov
dec
shr
dec
shll
iret
xor
inc
lcall
and
aaa
pop
insl
add
sbbb
stos
fwait
xor
jns,pt
cmp
leave
jge
cmp
lret
dec
xchg
cmp
mov
mov
es
xchg
mov
lods
cmpsl
sub
rcr
ljmp
repnz
push
cmc
ljmp
inc
adc
orl
pop
or
jbe
fucomip
outsb
jae
into
aad
mov
movsl
popf
push
xor
sbb
xor
std
or
pop
inc
jnp
in
jp
nop
nop
lret
cld
mov
or
jle
jo
mov
in
notl
add
xor
jg,pt
or
sbb
mov
pop
das
jl
or
push
loopne
dec
rorb
xchg
xchg
sti
dec
cmpsl
sbb
mov
stc
test
adc
pop
mov
pop
lret
lcall
cmpsb
cmp
sub
add
incl
mov
fst
hlt
push
test
mov
xchg
jl
mov
fbld
mov
fisttpll
and
cli
test
jne
inc
sub
jp
inc
idiv
pushf
ret
mov
inc
lret
push
int
sbb
inc
jo
shll
lods
repnz
push
push
movsb
adc
fisubl
jo
fs
lea
adc
or
lea
xor
testl
and
mov
push
mov
rorb
test
mov
repz
sbb
jg
mov
cmpsl
jle
mov
push
mov
js
fcomps
pop
mov
cmp
mov
mov
jp
mov
ficomps
pop
xchg
decl
out
negl
sbb
xor
or
iret
hlt
mov
ljmp
sbb
mov
push
shrl
testb
add
pop
xor
add
cmp
inc
loope
out
mov
mov
inc
shll
adc
hlt
mov
xchg
bound
jecxz
stc
inc
xchg
orl
xchg
inc
fadd
mov
filds
dec
aam
loope
sarb
sti
lock
lock
mov
and
and
sub
sub
cltd
vandnps
psubd
xchg
stos
cmp
dec
inc
add
cmp
popf
add
pop
push
xchg
jmp
rclb
popa
dec
mov
cmp
xchg
lds
pop
mov
xchg
testl
sub
mov
fiaddl
mov
pop
push
mov
scas
negl
xor
gs
add
and
aas
or
adc
mov
movsl
and
lods
jo
mov
hlt
push
hlt
pushf
loopne
mov
std
sub
je
mov
xor
lret
addr16
pusha
mov
nop
cmp
sub
test
mov
inc
out
data16
inc
xchg
ljmp
lcall
inc
adc
xor
or
xchg
push
sub
sbb
aas
inc
pop
pop
addl
lahf
mov
iret
imul
or
fwait
sbb
imul
es
push
sub
xor
push
push
mov
cmp
pop
jge
xchg
incl
pop
iret
stc
push
test
icebp
jge
and
fwait
ljmp
xor
les
jp
hlt
mov
push
stos
inc
addl
aam
std
mov
test
push
cmp
and
fcompl
xor
add
out
dec
pop
mov
adc
mov
std
add
add
push
mov
inc
sub
pop
icebp
js
sbb
mov
repnz
stc
stos
jmp
int
pop
lcall
mov
sbb
int
or
fistps
dec
jmp
pop
sub
dec
scas
cmp
sbb
js
dec
push
pop
lahf
movsb
cmp
jp
das
push
dec
mov
orb
dec
pop
testb
jnp
ljmp
dec
idivb
mov
sarl
shr
sbb
out
push
mov
out
insl
mov
jnp
ret
arpl
add
inc
lret
and
dec
cmp
jae
xchg
ret
cmp
scas
fsubr
rcll
sub
clc
add
push
xor
pop
out
lock
in
xchg
negb
cmp
push
xor
cmpsb
les
insl
mov
sbb
pop
inc
jmp
sub
and
in
out
shrl
lret
cs
sbb
lock
or
mov
add
lods
sbb
imul
and
pop
pop
shll
mull
enter
cmc
jnp
das
in
push
insl
adc
pop
lods
mov
push
iret
inc
xsha256
cmpsb
xchg
insl
fldt
test
repnz
imull
cmpsb
rcr
ret
lds
mov
and
outsb
stc
leave
mov
add
lcall
adc
dec
pop
xor
mov
xchg
vpmulhw
scas
sti
and
dec
adc
test
and
mov
mov
sub
es
xor
mov
cs
shr
xchg
dec
and
mov
clc
aaa
int3
mov
loopne
mov
repnz
repz
mov
es
cs
repz
pop
test
ljmp
and
adc
and
mov
and
adc
add
addb
movl
xor
xor
dec
inc
sbb
push
jno
cmpsb
jecxz
fcomps
insb
fst
jae
fbld
decl
push
ja
xchg
push
test
dec
push
pop
xchg
nop
sub
bound
outsl
fcomps
pop
jo
sub
int3
mov
sbb
pop
fdivs
pop
leave
popa
inc
mov
mov
sbbl
movsb
push
add
pushf
cli
mov
jle
xchg
ljmp
and
stos
mov
mov
xchg
test
data16
lret
xor
xchg
mov
dec
imul
and
sbb
jmp
jns
push
hlt
push
mov
adc
out
cmc
mov
xlat
lret
pop
aam
or
xor
clc
addl
gs
cmc
push
lods
sub
mulb
push
dec
fildll
std
lcall
in
or
insl
jnp
cmp
clc
cwtl
leave
icebp
mov
jnp
mov
xchg
fs
outsb
std
adc
scas
test
mov
pop
mov
jnp
lds
pop
add
push
out
imul
jl
push
inc
shlb
mov
scas
mov
mov
inc
outsl
test
popf
add
pop
test
ljmp
inc
lods
jmp
jle
popf
pop
mov
fisubl
clc
dec
cmp
mov
mov
loope
inc
push
pop
rcrl
and
sbb
adc
test
aam
dec
xchg
jae
dec
cmp
mov
pop
movsl
dec
pop
cmp
pop
mov
iret
sbb
cmp
push
add
out
test
xchg
mov
cmp
cmp
outsb
jne
mov
jmp
imulb
ljmp
and
rorl
insb
sbb
sub
mov
dec
mov
jae
xchg
test
aas
adc
enter
pop
fistps
push
inc
orb
pop
push
inc
daa
and
stc
inc
mov
stos
cmpsl
cld
xlat
xor
out
clc
jnp
loope
jb
push
mov
pop
int
jne
lret
fnstenv
adc
mov
arpl
mov
pop
nop
bound
and
nop
sub
xchg
imul
push
scas
in
push
jno
mov
leave
outsl
test
sbb
dec
in
lret
ljmp
fidivl
push
fwait
into
and
mov
faddl
mov
mov
xchg
push
ficompl
movsb
sub
mov
jp
leave
push
or
xor
mov
stc
pop
cmp
inc
jecxz
ljmp
scas
xchg
add
lods
or
insb
sub
dec
jecxz
mov
ljmp
jg
add
cmp
xchg
xor
push
adc
dec
push
scas
and
mov
push
jle
es
dec
jnp
xchg
or
xchg
daa
out
mov
jae
je
lock
jmp
dec
adc
shlb
cld
lcall
jne
lods
dec
sbbb
mov
jge
jns
cs
pop
dec
dec
sbbl
icebp
outsb
push
adc
lcall
and
sahf
lret
jns
mov
xor
cli
mov
jbe
adc
nop
adc
jns
pop
lods
or
outsl
and
sub
mov
or
dec
sbb
cmp
xor
loopne
jmp
xor
test
jne
xor
jmp
mov
ficoml
rcrl
pushf
adc
xchg
js
mov
leave
insb
test
mov
je
mov
rorb
cwtl
cmp
add
std
mov
in
stos
push
push
pop
call
push
add
aad
adc
in
stos
push
test
scas
sbb
pop
out
and
and
sub
push
sarl
lret
cmp
mov
sahf
int
inc
in
imul
cli
dec
cmpsb
test
mov
mov
data16
cmp
data16
and
mov
data16
cmp
cmp
add
mov
out
cmpsb
lock
or
sub
jp
nop
stos
stos
fwait
pop
ja
push
push
cmpsb
push
mov
inc
adc
enter
clc
jmp
push
repnz
push
mov
aad
pusha
adc
cmp
fldcw
popa
cltd
icebp
sub
adc
or
add
jmp
xor
cld
cmp
cmp
lahf
mov
sbb
xchg
lret
ss
xlat
addr16
sbb
incl
jb
adc
cmc
inc
adc
xchg
lds
sbb
dec
inc
ss
shr
mov
add
cmp
jecxz
fcoms
mov
fisubs
xchg
dec
shll
sbb
lahf
pop
add
xchg
xor
and
lods
inc
bound
mov
jg
mov
xchg
xor
mov
xchg
inc
pop
cmp
cld
push
aas
insl
inc
sub
push
push
fs
js
inc
mov
je
sbb
jnp
push
cmp
mov
jb
jecxz
shrb
mov
add
inc
dec
in
cmp
cmp
dec
loope
jle
jae
pop
ds
rcrb
pusha
aaa
lahf
jb
cmpsl
cli
xchg
fs
jno
outsl
mov
ljmp
push
dec
or
jmp
sub
repz
jne
arpl
pinsrw
push
outsb
add
lret
jmp
out
lods
iret
fidivs
sbb
xor
jbe
pop
fsts
xlat
pop
xchg
jne
in
mov
or
jl
mov
jae
idivb
jecxz
es
popf
cmp
mov
push
cmp
rcrl
idivb
cmp
in
cmpl
and
adc
adc
es
cltd
std
or
inc
icebp
cmp
or
fwait
pushf
jg
and
pop
sbb
jns
mov
insl
in
inc
jecxz
ffreep
cmp
jo
data16
cmp
pusha
jle
std
test
sub
rcll
insl
into
repz
cmp
push
aad
sbb
insl
pushl
jno
xchg
shr
sbbl
or
mov
inc
adc
dec
lock
inc
sbb
ret
xchg
pushf
loopne
repz
cmp
fisubs
push
adc
rorl
xor
xchg
outsb
mov
and
js
sbb
cmp
add
dec
xchg
add
xor
jmp
mov
cmpsb
pushw
jae
adc
andb
test
xchg
pop
xor
cmp
mov
sbb
inc
lret
jae
mov
aad
ret
jns
sub
shr
jo
push
ret
sub
mov
push
lods
imul
adc
rcr
loopne
and
xchg
cs
inc
fcmovnu
fcmove
arpl
sbbb
adc
outsl
inc
dec
jns
ljmp
cwtl
cli
sub
rcl
lods
sub
sbb
dec
xor
enter
or
js
xchg
inc
and
cmp
push
rcrb
jae
icebp
and
xchg
sbbl
imul
mov
movsl
push
or
in
sti
lcall
push
mov
cwtl
das
stos
dec
mov
cld
jns
dec
rcl
subl
hlt
iret
jno
mov
cmc
daa
push
adc
mov
ret
dec
outsb
pop
fs
sti
aaa
pop
sub
repz
dec
push
repnz
mov
jno
cmp
iret
inc
frstor
popl
nop
or
mov
jg
mov
push
dec
sbb
add
aas
out
out
aaa
gs
push
mov
dec
and
mov
mov
pop
mov
sbb
sub
cmpsb
dec
push
sbb
mul
aam
mov
in
clc
pop
dec
ds
in
aad
movsb
vpcomq
movsb
or
push
push
cmpsl
or
jl
insb
mov
add
popf
add
adc
pop
push
rcrl
xor
pusha
int
inc
inc
push
add
xor
rcll
int
ret
ss
ret
mov
inc
push
mov
xor
lods
and
outsb
vmwrite
fimull
inc
loop
in
xchg
xor
jle
dec
adc
pushf
fildll
je
fnstenv
bswap
xor
push
mov
or
cmp
pop
loopne
mov
sub
sbb
sbbl
and
lods
xchg
das
fldenv
cld
lods
push
mov
insb
xorb
mov
xchg
mov
or
cli
and
adc
cmp
out
or
bound
xchg
jo
mov
or
sub
pop
mov
pusha
ss
out
inc
mov
xchg
imul
addr16
jge
adc
jecxz
push
push
pop
dec
add
jae
mov
sbb
cmpsl
out
push
xor
pop
dec
xchg
jno
js
adc
and
cmpl
jnp
pusha
mov
dec
pop
sti
pop
sub
lds
popf
aaa
pop
xchg
pop
mov
mov
or
add
mov
mov
js
fs
push
xor
shlb
sub
jo
rclb
cs
pop
dec
stos
shl
jecxz
pop
cmpsb
sub
movsl
incb
aam
mov
daa
jle
pushf
lcall
sub
lahf
mulb
inc
andb
push
mov
xchg
add
jne
mov
cmp
fldcw
adc
mov
gs
je
mov
or
out
aam
sub
cmp
push
inc
pop
outsb
in
mov
incb
xor
int3
push
inc
push
add
jno
lret
mov
hlt
jbe
jecxz
insb
push
or
out
pop
imul
and
sub
xchg
call
sub
xchg
mov
mov
fidivrl
xchg
lret
cmp
mov
mov
sti
dec
pop
push
rcll
inc
push
and
mov
dec
push
mov
and
call
pop
ss
in
aas
pop
lcall
test
ret
insb
andl
sub
push
sti
adc
inc
pop
push
shl
dec
iret
shlb
pushf
lahf
lods
cltd
loop
xorb
pushl
mov
scas
cmpl
mov
pop
insb
jnp
xchg
movsl
xor
mov
jg
jecxz
xor
das
inc
jmp
add
subl
adc
pushf
and
outsl
inc
sbb
xor
test
in
pop
mov
xor
lods
in
push
cld
fnstcw
out
push
flds
cltd
lret
xor
fnstsw
fwait
cli
in
loop
mov
mov
dec
pop
insb
filds
cmp
repnz
pop
lret
or
clc
inc
mov
mov
or
cmp
mov
inc
loop
lret
mov
insb
sarb
jecxz
pop
push
testl
sub
nop
int3
jl
push
adc
push
shl
mov
push
hlt
fdivrs
lahf
sbb
dec
mov
sti
inc
in
adc
lcall
test
or
int3
fwait
sbb
mov
out
mov
push
imulb
and
in
xchg
add
dec
sbb
adcb
mov
test
xchg
mov
test
pcmpeqw
int3
es
cmpsb
out
or
jae
or
es
pop
or
and
testb
das
sahf
xor
adc
sub
mov
das
roll
shrl
adc
cmp
fsts
lcall
push
sbb
pop
cmp
out
scas
test
iret
or
stc
add
lds
add
xchg
or
pushl
push
shlb
jnp
enter
push
fsubrs
jne
adc
out
sbb
mov
cwtl
outsl
pop
mov
lcall
mov
or
pushl
inc
push
shr
in
popa
dec
xor
and
outsb
in
inc
adc
inc
into
xlat
sbb
sbb
mov
mov
mov
add
mov
sbb
mov
gs
pusha
sub
and
lcall
sub
addr16
xor
cs
sub
xor
xor
adc
adc
stos
adc
shr
adc
pushf
lret
shll
xchg
movsb
jno
inc
out
mov
xor
push
ljmp
inc
repz
jnp
cmp
jbe
ret
cmp
and
je
jb
stos
lods
mov
cs
jo
push
push
dec
int3
out
mov
push
mov
sbb
xchg
aaa
cmp
sub
pop
push
jno
lods
pop
inc
movsb
rol
xchg
and
mov
inc
xchg
sbb
loopne
hlt
aad
mov
xor
mov
push
clc
ljmp
and
or
cmpsl
iret
push
inc
into
sbb
les
mov
or
test
clc
sbb
inc
adc
lret
jmp
cwtl
mov
or
cltd
cmp
mov
and
imul
in
cli
push
test
cmpxchg
add
icebp
mov
jmp
or
xor
mov
sbbl
stos
in
rorb
call
filds
clc
jle
xor
jno
dec
jmp
rcrb
pop
push
lods
ljmp
es
add
pop
test
add
movsl
and
jmpw
cmp
mov
addr16
outsb
and
adc
inc
or
int3
pop
sub
bnd
movsl
xor
scas
adc
mov
scas
nop
in
mov
repz
push
mov
adc
pusha
adc
fidivrs
cmp
pop
cwtl
in
inc
cmpsl
mov
xchg
jne
pop
mov
cltd
cmp
push
sbb
jo
adc
or
and
mov
cmp
jecxz
add
movswl
stc
lds
push
les
int
inc
lods
push
jecxz
lcall
leave
sub
popf
loopne
or
sbb
inc
xchg
bnd
pop
add
outsl
iret
cs
dec
mov
mov
sarl
inc
lea
add
insb
rol
notl
mov
scas
xchg
cmpsl
and
sbb
sbb
enter
or
into
xor
mov
popa
adc
adcb
push
popf
xor
and
orb
in
pop
clc
jp
imulb
mov
clc
nop
sub
cs
adc
sbb
inc
xor
push
call
sti
inc
lret
lods
lret
insb
sti
mov
cmp
cmp
mov
orl
mov
cmpsb
loope
fnstsw
lret
push
cmpsb
mov
inc
cwtl
and
jb
fisubl
das
sarl
ficomps
rorl
stos
cmp
dec
adc
xchg
mov
mov
das
popl
or
repnz
xchg
inc
inc
gs
adc
or
pop
popa
out
dec
fs
adc
sbb
push
movsl
mov
jl
mov
sub
mov
scas
out
fisubl
cmp
pop
aas
inc
mov
ss
add
cmp
test
or
test
popa
jmp
jge
xchg
and
and
pop
sahf
xor
in
fdivrl
and
lahf
and
pop
nop
je
cltd
and
ficoms
jmp
xchg
imul
fistps
xchg
jb
shlb
out
cmpsb
pop
mov
lds
mov
outsb
inc
push
cwtl
fcmovu
sbb
icebp
jecxz
imul
pop
popf
cmp
pop
fs
pop
jae
mov
mov
loopne
in
xchg
arpl
inc
mov
repnz
enter
or
and
js
lahf
push
int
sub
out
enter
mov
roll
or
inc
insb
jg
imul
mov
xchg
mov
dec
push
xor
vpsubq
mov
mov
rol
inc
push
js
add
ret
sub
test
cmpl
dec
dec
mov
push
out
mov
fs
jmp
out
cmpsl
aas
fistl
loop
push
fidivs
sbb
scas
or
movsw
dec
iret
lcall
clc
and
xchg
jb
add
insl
pop
cmpsb
lea
xor
stc
shrb
jp
push
and
sub
fcompl
arpl
ficoms
push
jb
xchg
movsb
nop
sbb
out
cmpsl
dec
xor
int3
arpl
inc
hlt
pop
jl
addr16
or
ret
hlt
sbb
jns
out
or
mov
push
lret
pop
push
gs
jae
mov
lods
jnp
sahf
push
lock
test
xchg
mov
loope
ds
mov
aad
imul
hlt
mov
fnstcw
jmp
iret
scas
xchg
adc
outsb
inc
mov
test
dec
sbb
cmp
nop
mov
scas
fnstsw
xor
xor
cli
dec
loopne
xchg
xchg
std
lods
call
cmpsl
lret
test
ja
stos
ficompl
data16
jp
repnz
push
xor
movsl
cmp
in
insl
je
pusha
enter
cmpl
fs
jecxz
dec
add
js
xor
andl
pop
repz
and
xor
inc
pop
adc
sbbb
mov
jle
push
mov
and
ja
das
xor
mov
lret
pop
xor
cltd
sbb
cmp
div
push
cmp
addb
shrl
dec
dec
leave
mov
jge
fisubs
lret
mov
pusha
divl
popa
fists
push
roll
push
add
jp
mov
mov
mov
pop
sub
mov
call
sub
data16
sbb
in
add
mov
inc
pushl
fdivl
int3
pop
jnp
fstpl
out
inc
je
repz
inc
pop
dec
loopne
mov
pop
xor
mov
jmp
popa
adc
xchg
inc
ja
call
or
cmpsb
sub
or
cmc
push
fists
inc
out
xchg
or
test
adc
mov
mov
dec
or
subl
mov
sbb
xchg
and
lret
fs
sbb
outsl
push
or
setbe
es
dec
sub
mov
test
mov
inc
sbb
and
pop
adc
stc
cmpsl
sub
insl
or
pop
mov
push
jl
dec
mov
sbb
xchg
adc
out
jle
jge
mov
push
inc
cmp
cmc
adc
adc
xchg
mov
lods
rcrl
int
leave
mov
push
xchg
xchg
mov
and
lea
pop
scas
out
insl
dec
pushf
mov
lret
mov
stos
mov
jbe,pt
inc
fistpl
jo
jns
je
std
mov
sbb
stos
fimull
roll
push
pop
push
xchg
mov
sub
arpl
test
mov
and
lea
testl
fstl
xchg
mov
mov
xor
pop
shlb
ja
push
dec
jb
cmpsb
jg
xchg
jle
mov
mov
xor
sub
push
inc
call
int
or
lods
push
mov
bound
or
inc
imul
fiaddl
fbstp
jmp
mov
pop
fdiv
jmp
jno
dec
lahf
and
mov
pop
out
adc
xchg
add
outsb
ljmp
popf
cmpsl
inc
mov
in
add
lahf
push
fsubrl
movsb
jns
jmp
in
aas
mov
sbb
push
scas
rolb
es
pop
shrl
dec
mov
cs
mov
pop
sub
lret
and
inc
pushf
inc
lahf
dec
xchg
cmp
push
enter
daa
push
xor
jmp
popa
jle
out
and
insb
add
jle
dec
inc
jb
lods
ljmp
mov
fldcw
push
jne
mov
fidivs
or
adc
sub
lret
inc
loopne
inc
xor
xchg
addr16
lea
adc
mov
movsl
aad
lret
adc
cmp
mov
and
dec
stc
adc
sbb
push
ljmp
jb
leave
test
mov
enter
mov
pop
jp
cmpsb
and
xor
call
pusha
in
cmc
in
mov
lahf
aad
or
popa
sub
call
add
mov
sub
jno
lock
mov
mov
pop
inc
push
sbb
pcmpeqb
out
int
jo
dec
push
or
mov
push
mov
int
insl
rclb
xor
xor
test
xor
test
xor
mov
adc
out
inc
sbb
xor
push
in
inc
aas
arpl
fistl
mov
cmpsl
out
adc
scas
adcl
sbb
rcr
and
call
push
hlt
sub
xchg
into
push
mov
outsl
mov
jns
push
dec
jb
in
scas
int
js
mov
fisubl
movb
or
cmp
xchg
jmp
stc
mov
inc
loope
cmp
dec
adc
imul
loopne
popa
pop
test
mov
push
flds
scas
int3
fsubrs
mov
push
outsb
cmp
jmp
lret
sub
lods
faddp
lret
lret
add
fisubrl
cmp
fs
add
leave
sahf
xor
int3
std
les
sub
mov
pop
imul
lods
cmp
push
xchg
push
loope
mov
int3
loope
das
pop
dec
pop
cmc
inc
dec
aas
xchg
mov
loope
into
mov
jbe
xor
mov
aas
inc
and
lcall
and
sub
adc
test
fisubl
push
cltd
pop
rep
loopne
aad
sbb
inc
lahf
pusha
inc
fidivl
bound
ds
push
lahf
push
outsl
sbb
lret
icebp
add
and
jmp
add
cmpsl
stos
push
mov
pop
repz
andl
push
mov
push
cmc
leave
into
inc
cmp
jbe
pop
ret
popa
or
jno
xchg
scas
mov
mov
inc
sarb
mov
aam
sahf
scas
xlat
outsl
mov
sbb
into
dec
inc
iret
push
mov
mov
or
das
cli
xchg
push
xor
adc
inc
call
xor
sub
aam
or
pop
jns
inc
mov
les
pusha
ss
fwait
mov
cld
push
dec
gs
int3
lret
mov
cmp
pop
pushf
lahf
enter
jg
lret
push
mov
ret
lock
jno
movsb
jae
rcl
inc
rorl
test
cmp
int3
jg
lock
mov
pop
cmpsl
adc
or
add
sahf
out
insl
xchg
add
xchg
dec
mov
jbe
mov
iret
xchg
push
imul
push
mov
sbb
mov
fwait
aam
int3
mov
je
cmc
or
das
add
mov
push
xchg
test
mov
mov
fdiv
or
pop
imul
stos
jns
out
test
xor
jb
push
mov
xor
xchg
aas
jg
pushf
test
push
sar
mov
jnp
test
cltd
or
lods
inc
bound
inc
out
std
xchg
call
fistps
dec
iret
cmpsb
cli
fsts
cmpsb
xlat
mov
loopne
mov
dec
and
aam
xchg
and
or
lret
mov
cwtl
cmp
jb
sbbb
shrl
ret
leave
pushf
movsl
mov
dec
cmc
push
test
mov
cmp
movb
repz
xor
mov
xchg
dec
add
bound
jecxz
mov
jmp
out
or
sbb
jmp
cltd
push
sub
xor
call
out
sbbl
leave
sbbl
jno
and
inc
dec
push
mov
addb
std
jns
movl
out
jo
mov
out
rorb
pop
idiv
subb
int3
add
push
xor
adc
fistl
leave
daa
out
pop
call
lods
leave
mov
testl
pop
inc
fisubrl
dec
aaa
lret
int3
pop
sbb
mov
fidivrl
int
arpl
pop
mov
daa
repz
sub
and
add
les
and
les
ja
or
ss
fwait
cli
xchg
into
jg
int
adc
int
xorb
andl
fisttpll
mov
sahf
lods
js
lret
mov
addr16
insb
jno
aaa
push
push
mov
xor
pop
aas
add
lods
pop
imul
add
out
inc
cmp
in
add
cmp
lds
mov
lds
cltd
adc
addb
and
cli
stos
mov
sbb
ja
movsl
xchg
sub
mov
add
push
pop
mov
ret
xlat
sub
mov
push
lcall
fsubrs
sub
mull
mov
mov
test
sbbl
test
mov
loopne
xchg
std
sub
jno
bound
inc
xchg
adcl
adc
arpl
ror
jl
out
popa
rcll
mov
sbb
scas
xor
pop
std
outsb
pcmpgtd
jle
mov
cmp
aam
or
iret
sarl
imul
mov
push
outsb
jae
scas
subl
aad
dec
push
sub
outsb
scas
inc
xor
int3
mov
or
movsl
sbbl
push
jae
fwait
sub
push
mov
xchg
mov
jle
cmp
insb
push
out
dec
rorb
out
cmp
out
inc
sub
adcl
or
push
clc
fwait
test
cwtl
mov
sbb
jmp
pusha
sbb
cmpsl
or
pusha
xlat
je
stos
dec
adc
or
xor
xchg
push
adc
outsb
jp
mov
add
bound
dec
sub
iret
mov
bound
push
jae
sub
inc
fisubrl
out
lods
int3
sahf
push
imul
leave
xor
insb
std
and
add
addb
arpl
pusha
mov
dec
loopne
shl
aas
pop
and
xchg
bound
sub
sub
or
pop
mov
lds
push
insb
fistps
out
xchg
dec
dec
pop
jne
add
test
push
or
xor
adc
outsb
add
fnstcw
pushf
xor
stos
inc
std
sbb
push
bound
leave
addr16
xor
xor
int
push
or
xor
xor
ficompl
inc
jg
pop
mov
xchg
and
xchg
addr16
mov
in
aad
sub
fwait
notl
lds
mov
sahf
cltd
popf
jle
add
popa
idivl
push
mov
insb
je
sbb
cltd
clc
mov
sahf
and
fidivs
push
cmc
cli
test
ret
mov
or
xchg
pop
cmpsb
lods
sbb
lahf
pop
jae
addb
sbb
cmp
xchg
adc
in
int
jle
insl
and
push
dec
movb
fs
add
mov
mov
imul
add
bound
jle
xchg
cmp
jmp
out
xlat
dec
dec
addr16
imulb
mov
int3
push
dec
lods
xor
test
mov
lods
mov
jle
into
sbb
mov
jno
orw
stos
dec
test
sub
jmp
call
pop
xlat
push
sub
mov
js
inc
daa
mov
rorb
xchg
aam
dec
enter
imul
mov
out
xchg
sub
xor
jb
negl
or
into
fistl
ss
jne
es
inc
fwait
adc
fstps
push
outsb
cmp
or
or
push
outsb
or
mov
mov
out
pop
mov
mov
adc
mov
fstpl
mov
pop
sbb
leave
int
loope
pop
push
mov
pop
xchg
nop
cmp
xchg
cs
clc
lret
jne
push
sbb
inc
popf
xchg
add
jb
pop
adcb
push
mov
add
in
sub
mov
movsb
sub
insb
xchg
jge
push
or
dec
loop
jo
mov
mov
xchg
out
fucomp
pop
mov
add
mov
adcb
xor
sbb
mov
leave
fstpt
fsubl
adc
cltd
jo
std
push
stos
adc
out
inc
in
or
shlb
cmc
add
jbe
push
cmp
out
outsl
out
out
cwtl
push
stc
test
jmp
push
or
adc
mov
cmc
iret
cmp
jbe
movsl
adc
pusha
out
lcall
mov
cmp
loope
mov
adc
arpl
fwait
out
sarb
aaa
int3
pop
pop
in
insl
cmp
in
jae
add
pop
hlt
pop
aad
mov
dec
negl
mov
mov
dec
hlt
jne
jno
in
adcl
mov
dec
push
fistpl
ljmp
ljmp
xchg
lock
repnz
icebp
insb
mov
test
cmp
push
inc
sti
or
dec
jo
and
push
test
lods
test
jne
js
add
jmp
dec
imul
jmp
cld
inc
xor
dec
push
add
iret
mov
cltd
add
nop
jp
jmp
orl
jae
mov
sti
inc
sbb
lret
sbb
cmp
or
das
or
sbb
mov
push
pop
aaa
ficoms
pop
icebp
inc
cmp
sub
out
jbe
xor
test
pop
mov
into
adc
push
movsl
inc
xchg
repnz
hlt
or
clc
ja
xor
xchg
push
mov
push
sbb
mov
pop
sar
fwait
xchg
outsl
push
shlb
mov
movl
loop
adc
loopne
in
xor
adc
mov
cltd
xchg
jo
dec
call
cwtl
imul
imul
sub
fwait
jge
rep
xchg
adc
mov
or
das
cmp
scas
fmul
jecxz
jae
int
sub
inc
add
and
fdivs
in
mov
inc
insl
clc
pop
jbe
subb
cmp
and
scas
inc
cmp
push
add
dec
divb
decl
cmp
pop
cmp
xor
fdivrs
sub
mov
stos
jbe
mov
icebp
adc
fnstenv
xor
xchg
notl
pop
aaa
sbb
or
outsb
mov
insb
fstl
cmp
sub
cwtl
jae
mov
sbb
movsb
pop
jbe
test
dec
mov
cmpl
add
fldl
jb
cmp
mov
imul
js
xor
lea
or
mov
add
dec
rorb
pop
jl
cmp
scas
aaa
ret
icebp
andb
pop
idivl
dec
mov
dec
cld
lcall
cwtl
test
fcoms
xchg
mov
test
es
sbb
ret
in
popa
jbe
adc
adcb
fs
and
cli
inc
xchg
and
mov
jbe
scas
push
adcb
sbb
adc
mov
int
ret
repz
rcrl
xchg
mov
daa
push
movsb
cmp
xchg
xchg
dec
fldcw
xchg
lahf
lret
lods
dec
movlps
in
decl
adc
out
push
into
enter
sub
mov
ret
mov
push
sbb
mov
mov
sbb
es
cwtl
cmp
xchg
mov
mov
fs
aaa
ret
sbb
and
testl
add
sbb
mov
cmpsb
mov
pop
pop
fbstp
push
outsl
notl
pop
add
xchg
in
imulb
sub
cmpsl
call
inc
fidivl
lock
sub
xchg
or
addb
push
sti
sbb
insb
lret
mov
sti
cli
mov
nop
out
xchg
adc
imul
inc
popa
mov
push
mov
int
mov
gs
xor
fsubrl
fs
out
fwait
dec
hlt
out
dec
inc
pop
insb
icebp
rclb
sti
push
xchg
and
loopne
sbb
outsl
stos
or
js
pop
pop
pusha
fwait
or
and
xchg
xchg
mov
adc
cmc
mov
neg
jg
adc
mov
jle
xchg
out
dec
push
jns
fcompl
cltd
insl
sbb
and
sbbl
cmp
dec
jecxz
cli
pushf
ss
xchg
ljmp
jnp
iret
and
mov
in
dec
mov
je
ss
cmp
jb
pop
cwtl
test
xor
xchg
subl
out
mov
push
hlt
mov
pop
xor
ret
fwait
sub
pop
lods
mov
pusha
mov
and
loop
jnp
das
inc
inc
cmovl
and
call
testl
data16
sbb
xor
fldl
jae
das
fdivs
fdivs
fcoms
jns
cli
adc
es
lock
cmp
jno
fs
cli
cmp
adc
or
stc
inc
sub
sub
sub
shlb
inc
in
sbb
xchg
es
inc
ds
das
xchg
sbb
pop
sti
xor
push
mov
mov
xor
pop
push
cli
mov
cmp
test
xor
mov
sub
cmc
and
hlt
fists
push
mov
decl
shll
mov
xor
iret
dec
push
push
adcl
subb
es
jnp
rclb
inc
pop
repz
add
jnp
inc
push
jmp
sbbl
call
scas
movsb
and
adc
sbb
dec
inc
pop
ja
loop
mov
inc
push
stos
jbe
frstor
adc
jo
addl
inc
lods
xchg
mov
adc
addr16
outsb
rcrl
push
in
scas
xor
cmp
iret
je
stos
add
cmp
popf
xor
addr16
ljmp
adc
cmp
and
mov
add
pop
and
inc
lret
cmp
enter
inc
dec
inc
iret
jp
es
out
aaa
cld
scas
out
outsb
jle
movsl
aaa
dec
out
sar
or
xor
hlt
adc
je
mov
push
pop
adc
std
jge
in
xchg
std
sub
leave
or
mov
push
pop
out
test
push
push
dec
sahf
and
mov
dec
xchg
out
dec
add
or
repz
adc
adcb
mov
out
xchg
sar
mov
fistl
xor
ljmp
movsb
cmp
push
lods
lahf
pop
stos
inc
idivl
lods
mov
dec
mov
sahf
repz
test
mov
pop
scas
pop
jmp
add
mov
inc
or
scas
sbb
dec
dec
jmp
sbb
mov
and
inc
push
xorl
dec
sbb
imul
jmp
shrl
pop
testb
jnp
cmp
mov
pop
movsb
out
testb
inc
aaa
pop
movsl
sub
mov
shrb
jmp
out
xchg
cmp
pop
pusha
xor
divl
xor
and
daa
jno
scas
stc
lods
inc
sub
pop
pushf
mov
aaa
xor
cmc
xchg
cwtl
push
mov
add
and
mov
sbb
dec
fidivs
scas
inc
orl
int3
inc
add
cmpsb
pop
test
sub
sub
mov
das
xor
out
mov
sahf
mov
test
adcl
mov
ret
push
fldenvs
fsts
xchg
movsb
and
push
adc
fwait
ss
push
in
mov
insl
out
fimull
mov
dec
sub
inc
cmp
js
sub
and
test
or
and
push
cwtl
fidivs
or
popa
notl
mov
fsubrp
shll
mov
mov
adc
dec
xchg
lcall
xchg
imul
pop
fmull
adc
cmp
xor
fstps
das
and
or
mov
sbb
icebp
hlt
js
mov
rcr
or
outsb
cmp
int3
jnp
cltd
insb
cli
ret
rcrl
movsb
shll
cmp
xchg
jge
int3
and
dec
loope
addr16
fs
or
rcl
pop
sub
push
pop
xor
ret
pop
enter
lret
fs
pop
popa
shl
sub
mov
adc
push
arpl
fisubrl
sbb
movsl
xchg
jmp
mov
sbb
ss
cmpl
add
pusha
xor
xchg
push
cmpps
pop
out
imul
cmp
test
aam
xor
hlt
sub
jae
mov
out
gs
mov
test
jle
xchg
daa
sub
jae
adc
mov
mov
jno
cld
sbb
or
addl
and
fneni(8087
cltd
mov
xchg
fdivs
test
push
iret
pop
or
jge
ficomps
cli
push
mov
hlt
add
lods
call
jg
mov
jns
lock
lcall
add
shrl
dec
fistl
mov
sbb
ds
jno
dec
les
cli
fistpl
or
xchg
xor
xchg
or
add
in
inc
cmp
frstor
stc
sub
loope
roll
imulb
mov
and
outsl
jnp
push
adc
push
add
xor
loope
push
jae
mov
mov
push
or
jnp
jbe
cmp
mov
rorb
fs
mov
mov
mov
xchg
pop
dec
mov
jnp
jns
pop
pushf
cmp
test
movsb
xor
sbb
cmp
ja
adc
cmpsl
inc
sub
cmpl
cltd
inc
cwtl
mov
mov
out
cwtl
das
and
sub
sub
cmp
pop
xchg
mov
xchg
popf
insb
lcall
mov
int3
loop
or
xor
enter
les
dec
out
into
pop
in
fldcw
pop
mov
xor
xchg
pushf
sub
mov
adc
mov
adc
sbbl
add
push
jl
pop
inc
push
fwait
or
pop
imul
pusha
mov
sbb
push
pop
and
mov
lret
pop
idiv
out
xchg
mov
fidivrs
dec
push
adc
sarb
je
fwait
inc
scas
rorb
loope
jg
call
xchg
test
xchg
es
out
xchg
dec
loopne
sahf
push
shl
leave
sbb
ficomps
inc
inc
in
loopne
hlt
push
mov
lea
add
mov
xchg
sub
cmp
pop
shlb
insl
addb
xor
pop
scas
fists
shlb
mov
or
sub
sbbl
cmpsb
jns
out
xor
shrb
push
ljmp
insb
add
mov
fdivp
sbb
jp
mov
inc
fsubl
ret
arpl
mov
or
andb
loope
jo
pop
jb
mov
nop
dec
into
jbe
push
test
sahf
pop
push
ds
outsl
daa
fbld
add
cli
pusha
imul
cmp
cmp
add
dec
out
sti
iret
lret
insl
jmp
and
jb
jmp
push
mov
sarl
arpl
jns
shrb
mov
mov
lcall
or
add
in
push
mov
test
imul
nop
pusha
ret
jecxz
lods
adc
aam
in
pop
mov
pop
fcmovb
ss
testl
cmovge
push
fwait
test
outsb
scas
cli
inc
lahf
jge
sbb
test
and
cmp
mov
adc
adc
sbb
movsl
xchg
push
lret
dec
fnstenv
iret
ja
xor
cmp
xchg
negb
sti
mov
push
mov
stos
es
fidivrs
inc
add
fnstenv
inc
dec
movsb
sti
cmpsb
notl
sbb
xor
call
mov
mov
mov
inc
xlat
stos
inc
or
ja
outsl
mov
mov
cmp
pop
and
loop
std
dec
lods
push
or
mov
shrl
aam
popf
lret
jl
dec
jecxz
sti
mov
sahf
out
in
lea
mov
aas
imul
pop
mov
push
in
mov
bndldx
mov
jns
push
mov
xor
add
jge
and
stc
rorl
xchg
or
jbe
test
push
aas
sahf
std
cmp
clc
push
idivl
mov
cmp
or
or
add
jp
push
mov
std
xchg
sbb
sbb
cmp
mov
sub
xchg
mov
mov
add
cmp
cwtl
dec
fisubrs
aas
adc
xor
inc
fdivrp
dec
lds
mov
mov
mov
aaa
inc
push
push
jecxz
and
ljmp
jno
ret
pop
mov
movsb
or
push
or
lods
xchg
mov
stos
testl
xchg
sub
jne
jg
mov
jae
push
std
fwait
test
popf
stos
rolb
mov
shll
push
pop
mov
mov
add
xchg
or
rorl
scas
pop
lock
cwtl
pushf
scas
inc
push
ja
cmpl
push
jmp
xchg
xor
fisttpll
es
stos
inc
repnz
mov
leave
pusha
popa
dec
lahf
push
xor
mov
pusha
test
xor
cwtl
leave
call
sahf
int
fldcw
imul
loop
dec
push
mov
xchg
dec
push
pusha
shrl
ja
scas
aam
pop
push
and
js
int3
sbb
movsb
mov
xchg
mov
cs
and
das
int3
add
xchg
mov
jecxz
test
insl
add
insl
aaa
push
push
or
push
out
fimull
jnp
mov
push
xor
pop
fldcw
scas
arpl
filds
push
ja
sub
pop
mov
mov
adc
xchg
mov
sbb
cli
nop
and
enter
fbstp
std
dec
scas
fsubrp
std
cmp
mov
jmp
sbb
or
loope
inc
adc
fnstcw
negl
fistpll
xor
dec
mov
cmp
push
add
adc
and
jl
lods
mov
mov
cmp
testl
add
popf
ret
into
xor
push
or
fwait
out
adc
jno
and
repz
pop
dec
lock
subl
jle
jne
inc
cmpsl
cmp
je
les
jns
xor
lcall
out
cmp
xchg
xor
xchg
leave
jb
enter
aam
push
sub
jge
imul
xchg
xchg
adc
cld
leave
and
fsub
xchg
insl
cmp
mov
and
ret
jl
mov
sbbl
mov
lock
push
sbb
mov
subl
push
xchg
sti
aam
add
inc
mov
loope
mov
into
mov
mov
fisubrl
loope
loopne
add
scas
xor
cld
jg
mov
orl
leave
pop
in
push
arpl
xchg
rcl
ret
mov
sub
cmp
xchg
pop
mov
add
sbb
sub
mov
sub
mov
lret
incb
jl
mov
stos
jp
pop
nop
and
xor
push
arpl
pop
aaa
inc
lods
inc
add
mov
rol
scas
and
or
cmp
addr16
loop
jb
pop
and
and
ljmp
jo
adcb
roll
leave
push
mov
push
call
loope
outsl
loop
aas
in
push
es
or
mov
in
xchg
daa
ja
pop
orb
inc
lret
xor
jbe
inc
int3
mov
cwtl
xor
inc
mull
mov
pop
les
inc
cli
jmp
bound
and
dec
mov
sub
shl
jle
mov
shld
cmpsl
jg
loopne
mov
mov
pop
or
jl
mov
ljmp
popa
or
bound
dec
jbe
pop
das
pusha
xchg
shll
add
ljmp
enter
js
pop
and
adc
mov
cmc
mov
mov
fdivrs
ffree
fldl
pusha
lds
add
loope
mov
imul
testl
fs
pusha
cli
call
lret
pusha
mov
cmpsl
jle
or
jae
filds
mov
sbb
jo
adc
fs
jle
pusha
cli
pop
mov
push
cmp
sbb
sahf
dec
icebp
or
dec
push
movsl
xlat
mov
sbb
mov
lea
imul
mov
cli
ljmp
loop
lds
push
shll
js
lds
fsubp
mov
pop
out
add
push
lcall
stc
cmpsb
push
fisubl
jnp
nop
fldt
rcll
addr16
stos
sahf
sub
sbb
mov
inc
arpl
stos
fidivl
push
mov
mov
mov
fbstp
aad
ja
scas
fldcw
push
mov
sbb
jns
mov
imul
mov
aam
jo
hlt
int
cmp
sti
push
test
leave
mov
enter
xlat
rcrb
fcmovb
je
out
dec
push
pop
pop
je
xchg
push
mov
fsubrp
pop
mov
lds
outsb
pop
pop
mov
lds
sbb
pop
test
sahf
aas
popf
psrld
sti
fsubrs
pop
mov
sub
and
pop
push
xor
jne
push
rcl
push
mov
fisubl
fnsave
adc
loopne
push
ja
pop
xor
arpl
fstpt
mov
enter
fcompp
lret
sahf
mov
shrl
and
fldl2t
jle
sbb
xchg
mov
subb
inc
cmpl
lea
dec
int3
jg
cmpsl
pop
rorl
push
cs
scas
sub
and
inc
in
aaa
into
sbb
push
cwtl
lret
cmp
jo
add
notl
test
mov
int3
pop
jecxz
mov
mov
cmpl
popa
movsb
cmp
lods
and
loopne
inc
adc
push
push
ds
lods
jns
sub
lods
pop
cmp
or
dec
test
push
mov
outsb
shlb
adcl
les
stc
add
rcl
sbb
mov
push
push
inc
mov
xchg
cmp
dec
inc
cmp
xor
pop
cmp
fsubrs
mov
dec
bound
lods
pop
lock
cmp
push
jmp
idivb
aas
fwait
data16
dec
cmc
sub
push
fs
pop
xchg
cmp
xor
mov
pop
mov
popf
xlat
push
mov
mov
inc
repz
cmp
add
dec
pop
adc
fs
pop
inc
mov
pushl
cmp
xchg
stos
insb
sub
ret
inc
dec
mov
and
das
lahf
shrb
inc
inc
loop
in
mov
sbb
pop
sbb
adc
out
adc
repz
adc
add
jno
rol
xor
jmp
iret
cltd
das
inc
xchg
fnsave
out
xchg
cs
fsubl
or
icebp
or
adc
adc
popf
ds
sbb
dec
and
cmp
pop
icebp
mov
testl
hlt
adc
pop
sub
out
jne
inc
mov
xlat
add
es
lcall
jge
add
fdivr
and
pushf
push
pop
dec
push
lcall
out
in
mov
xor
outsb
test
add
cmc
call
mov
dec
mov
daa
rolb
xchg
fists
adc
mov
inc
push
fwait
mov
jnp
inc
flds
data16
jp
pusha
jnp
fwait
push
jmp
shlb
cmp
xor
mov
mov
sbb
mov
cli
lcall
stc
jno
pop
cltd
pop
cmp
inc
je
mov
pop
aad
mov
and
add
movsb
bound
scas
mov
into
sbb
inc
jnp
in
xor
inc
pop
lcall
mov
fsts
sub
cwtl
pop
addl
mov
fldl
mov
ds
scas
xor
jmp
mov
or
enter
test
jns
fisubs
in
adc
mov
sub
fdivl
mov
adc
addr16
pop
js
das
jne
add
jge
push
inc
fists
repnz
jl
es
cmp
and
ljmp
cwtl
das
andb
xchg
push
and
icebp
movsl
inc
mov
jmp
pop
insl
xor
negl
lods
cmp
push
icebp
insb
xchg
mov
popf
jb
popf
out
xchg
fsubl
out
mov
mov
pop
cmp
jecxz
hlt
adc
and
pop
stos
jge
jmp
scas
into
or
mov
push
mov
inc
decb
cmp
adc
fisubrs
mov
and
mov
add
mov
jg
fwait
repnz
lahf
and
stc
add
xchg
cmp
in
push
pop
icebp
mov
mov
cmp
jmp
into
or
mov
fcomip
push
cmpsl
negl
mov
fwait
mul
repz
add
je
xchg
sub
pop
insb
das
cmp
mov
mov
rcl
sar
scas
xor
dec
sbb
xchg
jnp
les
cmp
mov
and
mov
rol
jg
fwait
sub
sbb
mov
out
inc
jmp
dec
pushf
mov
in
int
aas
mov
lret
cmp
fcoms
inc
inc
dec
dec
fldl
pushl
jg
push
mov
rclb
daa
cmpsl
xchg
insl
rorl
dec
ffreep
pusha
sbb
xchg
call
sub
fwait
jne
pushl
inc
sti
jp
dec
andl
adc
jge
ret
hlt
sub
jp
lret
lods
cli
mov
loop
in
adc
fisubrl
fstl
pop
pop
xor
fs
mov
cmp
cltd
or
dec
les
movsl
ds
cmpsl
enter
movsl
mov
imul
incl
jbe
jnp
shrb
dec
push
cmp
push
aad
and
popf
push
inc
xchg
je
psllw
mov
cmpsl
jle
cwtl
subl
stc
repnz
dec
loop
sbb
ret
out
sbb
imul
xchg
test
dec
mov
inc
or
pop
cmp
xchg
fisubrl
xchg
sub
jp
dec
push
repnz
cmp
fwait
cmpsl
mov
loop
xchg
push
arpl
and
icebp
inc
je
mov
negb
je
fnstsw
dec
scas
inc
lods
and
frstor
cmpsl
xlat
movsl
pusha
ret
cs
xor
insb
and
test
mov
adc
cmp
fstpl
sub
dec
mov
popa
or
dec
xchg
fwait
pop
nop
aaa
cmp
sbb
in
lret
or
out
adc
push
pop
jmp
jle
out
fwait
pop
mov
mov
lret
inc
cwtl
pop
lahf
xchg
mov
lret
daa
push
jmp
mov
cmp
ret
aas
mov
outsl
xchg
xor
inc
push
movsb
or
cmpsl
jl
or
shlb
dec
arpl
sub
mov
sub
jecxz
jle
cmp
addr16
add
loopne
mov
shl
or
lret
dec
inc
mov
ret
push
mov
push
xor
push
mov
insl
xor
fidivl
sub
andb
and
divb
add
cmp
mov
aas
jns
aam
clc
or
adc
add
push
xor
mov
insb
mov
xchg
or
xor
shl
mov
in
movb
jle
movsb
cmp
mov
sahf
aaa
stos
or
aas
ljmp
sbb
leave
jmp
mov
std
jmp
notb
popa
clc
ficompl
mov
int3
adc
js
dec
loope
cltd
je
inc
js
mov
jle
pop
call
sbb
cli
stc
out
sub
jl
in
rolb
in
jae
and
dec
mov
jns
lods
push
pop
movsl
fsubrl
jmp
inc
jp
ja
and
les
mov
mov
aas
hlt
or
pop
hlt
pop
or
imul
xor
xchg
es
aas
and
push
hlt
lret
pop
std
push
popf
inc
ficompl
xor
cmpsl
in
ljmp
mov
outsl
jle
dec
and
fdivrl
and
mov
arpl
pushf
inc
std
stos
xchg
addr16
lret
pop
ljmp
enter
movsl
xor
cltd
xchg
mov
xor
lds
stos
dec
scas
loope
lods
fwait
iret
shr
rcr
lret
and
jge
clc
sub
fdiv
or
cwtl
das
add
mov
push
movsl
mov
or
mov
push
movsl
sbb
sub
inc
sub
pop
dec
push
mov
decb
xor
arpl
xor
xchg
adc
shrb
movsl
daa
cmp
mov
imul
push
dec
test
dec
push
jecxz
test
lret
mov
dec
jecxz
rcll
sbb
loop
iret
sbb
dec
cmpsl
jle
mov
mov
or
addr16
es
fs
sbb
mov
insl
mov
loopne
jge
jb
inc
adc
daa
fwait
aas
aad
push
stos
fdivs
jle
test
and
jl
jb
mov
ficoml
ljmp
cmpsl
sub
clc
sbbb
pop
xchg
and
lea
cld
pop
xor
shlb
mov
sub
mov
pop
sbb
dec
push
cs
or
xor
push
jp
mov
mov
pop
xchg
pop
and
sub
jl
loope
mov
xchg
adc
add
jbe
imul
add
dec
es
jmp
outsl
sub
sub
mov
or
push
inc
inc
aad
fisttpll
movb
cltd
adc
jp
jns
sub
xor
hlt
pop
out
add
cmpl
mov
dec
cld
leave
mov
push
icebp
mov
bound
sub
sar
ret
adc
sbb
popf
aas
and
cmp
mov
cmp
in
ficoml
cmpsb
jae
mov
and
ds
into
mov
mov
sub
ds
arpl
pslld
mov
xor
nop
xchg
dec
push
pusha
sti
push
ficompl
sbb
add
les
or
mov
or
xor
pop
popf
push
lea
notl
aad
fbstp
add
fisttps
dec
leave
cmp
mov
imul
adc
fadd
mov
pop
adc
addb
and
pop
repz
inc
out
rorb
movsl
xchg
sub
sbb
cmpsl
out
xchg
cs
es
sbb
cmp
inc
jb
aam
stos
pop
push
outsl
push
int3
mov
or
dec
cmp
push
xchg
int
adc
adc
inc
xor
mov
fwait
call
incl
out
dec
out
mov
out
insl
push
adc
xlat
adc
pop
inc
not
and
es
pushl
add
scas
jg
loope
loope
jmp
or
pop
jae
int3
push
push
jns
xor
or
mov
frstor
or
lcall
repnz
iret
lret
gs
mov
fiaddl
lods
xor
out
sub
sahf
pusha
mov
mov
adc
mov
dec
imul
int
sti
sbbl
aad
jne
cwtl
mov
sbb
test
lahf
dec
insl
out
and
out
or
pushf
xor
sbbl
cmp
stc
insl
imul
ljmp
and
sarl
push
mov
outsl
cmp
dec
add
dec
mov
jl
or
lds
push
call
push
shrl
add
pop
gs
int
cs
hlt
mov
pop
adc
stos
xchg
loopne
int3
outsb
leave
sbb
cmpsb
lock
cmp
xchg
pushf
lret
xlat
mov
mov
push
stos
xchg
int3
lea
lahf
sub
fildll
cmp
lock
adc
mov
add
aas
jo
leave
cmpsl
out
sub
hlt
testb
aam
insl
pop
out
xlat
mov
nop
dec
int3
arpl
popl
lret
mov
jg
mov
cs
scas
lods
ss
rep
jne
jge
add
cmpsl
add
push
sub
xor
cltd
adc
mov
fstl
nop
aaa
push
aad
cmc
clc
cmp
or
sub
mov
dec
filds
adc
ficoml
jp
add
stc
push
mov
mov
into
mov
imul
pop
adc
hlt
jnp
outsb
in
pusha
add
push
add
push
xor
and
mov
xor
mov
or
mov
sbb
cmp
test
out
dec
mov
mov
or
jns
adc
aam
cmp
push
fs
push
sbb
in
lods
cmp
lret
push
inc
xor
dec
and
shr
mov
lods
dec
xchg
fistl
movsl
pusha
mov
cwtl
scas
js
jns
mov
adc
subl
sbb
or
shll
out
push
mov
mov
insl
loop
enter
xchg
push
jno
xchg
das
lcall
jbe
stos
adc
mov
notl
repz
cmpsl
sbb
pop
idiv
push
out
push
fdivrl
xchg
out
outsb
add
movsl
scas
mov
mov
dec
xchg
dec
test
incl
std
or
int
outsl
incl
add
arpl
lret
pop
cmpsl
adc
ja
movsb
mov
adcb
mov
pop
popf
scas
xchg
out
pop
lahf
and
mov
fiadds
ja
xor
and
pushf
ds
test
push
mov
cmpsl
inc
inc
test
in
sbb
mov
push
cmpsb
xchg
lea
leave
lock
into
mov
xchg
jbe
adc
xchg
or
ret
xor
cwtl
jecxz
jle
xchg
or
sbb
sbb
inc
gs
dec
gs
mov
mov
mov
rclb
or
adc
lahf
xchg
test
mov
sub
mov
fwait
divb
std
mov
cli
loop
mov
movl
sub
adc
testl
mov
adc
fcompl
sbb
pop
outsl
cld
xor
dec
push
pop
stos
bound
std
out
into
gs
pop
mov
gs
jne
ds
sbbl
or
insb
loop
sbb
push
clc
mov
add
mov
mov
xor
stos
ljmp
addr16
mov
or
popa
push
cmp
add
movsl
mov
or
lea
in
loope
addb
pop
in
cli
std
push
in
es
xchg
bound
into
scas
inc
movsl
sbb
lret
dec
jnp
mov
aaa
mov
pop
inc
xor
in
xlat
arpl
or
incb
add
xchg
cs
push
pushf
sub
mov
and
rcr
out
add
mov
mov
xor
push
movsl
mov
adcb
sub
mov
mov
mov
xchg
test
int3
xchg
mov
popf
pop
cmc
adc
clc
fstp
das
inc
in
nop
ss
test
mov
les
mov
insl
adc
adc
and
std
mov
inc
loop
pop
fcmove
ret
push
jne
incb
pop
es
movsl
in
xchg
lcall
sub
or
iret
push
jno
in
repz
aas
xchg
xchg
imul
mov
jnp
pop
mov
hlt
mov
mov
dec
adc
je
jmp
ljmp
subl
dec
into
testl
inc
sub
fiadds
std
mov
add
and
pop
pushf
sub
fbstp
xor
push
dec
or
jp
push
and
ljmp
out
fninit
aad
add
sahf
imul
jne
xchg
in
cmp
sahf
sub
in
es
scas
and
inc
or
mov
sub
std
pop
insb
xchg
mov
pop
out
sbb
movsb
sub
test
push
cltd
adc
aas
mov
jno
sbb
push
daa
push
adc
mov
leave
and
lret
mov
adc
cmpsb
add
cmpsb
pop
inc
mov
mov
cmc
mov
xor
pop
jb
fmuls
or
fnsave
lods
imul
mov
mov
sub
out
js
mov
popa
clc
stc
nop
sub
idivb
icebp
stc
sarl
pop
cmp
frstor
add
adc
aaa
push
stos
mov
sahf
xor
xchg
ret
fadd
push
xchg
out
jmp
xchg
mov
inc
in
popa
icebp
lods
mov
xchg
data16
scas
jg
inc
fstpt
xor
mov
mov
mov
inc
leave
loopne
mov
cs
jnp
sbb
int
adc
jae
fwait
outsb
sub
sarl
jns
pop
mov
cwtl
adc
divb
xlat
push
adc
and
adc
hlt
push
add
cld
lcall
mov
or
into
mov
add
or
pop
aaa
sub
cmpl
in
pushf
pop
pushf
push
add
sub
dec
ror
cld
lods
daa
cmp
dec
dec
insb
ret
xchg
sub
in
clc
into
lcall
bound
cmpb
cmp
sarb
add
dec
jno
pop
imulb
js
jae
gs
mov
mov
or
clc
sahf
xorl
cwtl
insb
jle
test
mov
dec
leave
pop
stos
mov
sub
jp
clc
mov
sbb
xlat
aad
test
add
push
pushf
dec
popa
lds
insl
sub
pop
xchg
xor
or
and
and
dec
bound
dec
jmp
sbb
ret
fld
lods
rclb
or
xchg
int
adc
mov
lret
inc
mov
push
mov
loop
scas
sbb
les
mov
pop
in
xor
inc
jg
push
out
mov
add
sbbb
fwait
pop
out
sbb
es
push
es
sbb
add
addr16
movsb
fs
pop
push
mov
add
das
adc
fnsave
inc
cmpsb
add
popf
push
xchg
sub
or
mov
lret
push
inc
bnd
inc
dec
pop
clc
andb
jg
ret
mov
sub
fs
adcl
sub
cmp
inc
inc
pop
scas
outsb
add
fidivs
nop
dec
dec
popa
outsb
lock
repnz
fldt
mov
jo
into
inc
jecxz
cmpsb
push
ja
xchg
push
out
pushf
dec
sub
sub
int3
jns
sub
test
pop
mov
xchg
mov
aad
out
leave
and
scas
and
ljmp
ja
into
cmp
adc
pop
test
sahf
and
xchg
cmpsb
mov
fldenv
les
ret
std
mov
mov
sbb
iret
inc
sub
push
dec
out
lods
fcomip
loopne
push
nop
in
mov
int
xor
mov
sub
pop
test
lret
add
ss
push
inc
ret
cs
jl
adc
dec
mov
imul
jg
je
push
xchg
stos
ficoms
lahf
add
repnz
and
xchg
ud0
jl
dec
loope
sahf
aas
loop
stos
icebp
movsl
cs
dec
jecxz
sub
add
jnp
loope
stc
mov
sub
inc
push
xor
jle
insb
aad
lret
push
mov
scas
mov
or
sbb
sahf
inc
sahf
pop
add
add
sti
shrl
cmpsl
dec
pop
mov
jnp
hlt
int3
ljmp
adc
push
pop
and
jae
and
mov
add
fs
xlat
dec
xor
cmp
gs
les
push
cmpsl
xchg
test
popa
mov
push
jmp
xchg
xor
sbb
movsl
pusha
cmp
push
sbb
fsubrl
mov
cmp
and
lret
or
fldcw
push
dec
in
pusha
idivl
jb
push
sub
jo
dec
test
loop
adc
insl
push
stos
xchg
cmpl
orb
mov
xor
jl
mov
inc
loop
push
daa
ror
jnp
cmc
sti
dec
lock
dec
mov
dec
idivl
lcall
pop
jmp
jo
push
or
fimuls
sbbl
xchg
pusha
push
out
mov
xor
fwait
mov
stc
add
in
sbb
pop
mov
dec
push
scas
jp
jnp
arpl
test
mov
jno
out
xlat
jmp
pop
pop
or
or
sub
in
inc
fidivs
shlb
add
shlb
pop
push
js
in
pop
xor
popl
loope
xlat
push
outsb
mov
insl
in
clc
cmpsb
aaa
sbb
mov
outsl
mov
fidivrs
nop
ret
pop
in
scas
addr16
addr16
rol
push
add
test
fisubs
out
mov
pop
int
push
add
pop
jl,pt
fistps
sub
cmp
lods
jecxz
lret
bound
adc
in
ljmp
xchg
test
push
xchg
dec
in
cmp
lock
insb
jle
adc
jne
mov
mov
daa
rcrb
mov
aad
fiadds
xchg
sti
xchg
repz
icebp
push
cli
adc
jge
pop
clc
or
nop
loope
xlat
pusha
aaa
test
movsl
cmp
dec
ret
cwtl
in
lret
lret
cmpb
push
add
mov
lcall
dec
add
jge
mov
mov
inc
mov
xlat
mov
or
shrl
push
jl
shl
adc
gs
sub
mov
pop
sub
imul
imul
adc
mov
inc
and
and
dec
and
mov
push
sub
lret
rcl
inc
mov
idiv
loope
fldcw
arpl
shl
cltd
insb
ret
mov
fs
fsubr
shl
adc
cmp
or
out
jle
or
pushf
mov
sbb
dec
cmpsl
insb
in
jge
push
mov
ja
mov
sbb
dec
cs
shlb
dec
lcall
cld
xchg
fnstcw
into
dec
xor
or
imul
cmc
in
or
dec
cmp
inc
xlat
inc
cwtl
mov
imul
xchg
or
pop
push
push
dec
outsb
clc
jl
pushf
xor
mov
mov
test
shl
jl
add
dec
mov
out
insl
and
adc
in
sbb
cmp
test
ret
or
mov
or
sarl
sti
fwait
aas
fcomps
mov
mov
jmp
aaa
lret
mov
clc
enter
xor
sbbb
xor
mov
jg
jae
xchg
mov
add
xchg
out
xor
mov
adc
jo
sub
sub
add
fsin
push
int3
or
mov
test
adc
push
mov
int3
rcrl
mov
outsb
rol
mov
pop
push
fstps
and
fidivrs
sub
scas
mov
mov
or
or
mov
fstl
lret
lcall
fxch
ret
jb
cmc
jmp
cmc
call
or
sub
sbb
orb
call
in
aaa
mov
jae
push
push
xchg
scas
aaa
or
xor
xchg
cmp
jg
mov
inc
loope
fld
add
push
inc
pop
pop
sbb
push
push
cmpsl
das
jbe
into
cs
push
xor
inc
rcrl
popf
sub
dec
ljmp
or
das
imul
ja
cmpsl
push
or
aad
arpl
lock
push
psadbw
cltd
daa
mov
pushf
inc
mov
pop
sbb
push
outsl
or
jne
nop
cmpsb
incb
xchg
icebp
pop
pop
push
into
andb
mov
test
push
je
pushf
in
test
hlt
ja
out
or
nop
mov
mov
dec
xchg
inc
push
into
inc
scas
out
push
lret
pop
test
mov
lods
inc
inc
sub
leave
pusha
xchg
movsl
adc
out
ljmp
imul
dec
mov
mov
rol
test
scas
stc
in
or
cmp
inc
daa
stos
hlt
xchg
out
mov
pop
and
push
and
aas
adc
cmp
gs
jg
jp
vpcmpeqw
inc
add
jl
mov
je
nop
jecxz
adc
aas
imull
mov
insl
xchg
mov
insl
cmp
push
mov
cmp
ret
push
in
notl
out
xor
xor
in
push
or
add
leave
in
dec
loope
pop
push
jmp
lds
fmull
mov
rcrl
int
dec
sbb
fldenv
movsb
push
cmp
jecxz
and
add
insl
enter
pop
call
xchg
jno
outsb
daa
inc
jno
jae
mov
push
jge
stos
mov
ljmp
jmp
aaa
into
xor
pop
int
jne
push
jle
xchg
ljmp
pop
or
leave
aas
and
outsb
ja
add
inc
dec
ret
xor
jge
movsl
sub
sbbb
daa
xor
fisttpll
pop
imul
cmp
test
imul
ret
call
mov
pop
out
sbb
mov
jne
fsubrs
das
dec
daa
or
push
mov
and
ret
mov
adc
aas
inc
dec
pop
xor
outsl
test
repz
mov
movsb
int
int
gs
adc
and
add
mov
pop
push
sub
stos
mov
sub
push
mov
ret
fildl
enter
fdivrl
sbb
iret
dec
pop
ss
in
mov
push
xor
ss
pop
sbb
pusha
add
pop
mov
adc
fmuls
xchg
add
push
cmp
jp
fcompp
in
mov
pushf
xor
stos
lcall
dec
jp
imul
mov
jl
hlt
cmpsl
xchg
mov
mov
lock
pop
adc
mov
fsubrp
cmp
pop
add
cmpsl
xor
int
jg
ffree
or
outsb
mov
dec
cmp
or
mov
leave
xlat
shld
out
or
cmc
ljmp
leave
das
jmp
pop
pusha
popa
xor
mov
dec
push
push
add
mov
jno
daa
pop
xor
test
cmpsl
imul
xlat
mov
add
es
push
lds
out
push
fcmovnb
aad
pop
xrelease
call
sub
dec
mov
mov
sub
or
jnp
jp
adc
dec
xlat
jmp
hlt
adc
adc
xlat
sub
ficoms
shll
add
sbb
adc
cmp
mov
nop
xor
or
dec
push
or
test
cs
fnsave
mov
xchg
and
dec
in
mov
push
ss
lea
mov
insl
jmp
stos
mov
adc
lock
repz
roll
lahf
daa
and
sbbl
mov
ja
xchg
xor
adc
fstpl
inc
mov
dec
inc
adc
int
sti
ja
icebp
insb
mov
dec
sbb
rolb
jo
pop
out
movsl
les
adcb
adc
cmp
insl
xchg
mov
mov
add
mov
push
bound
iret
pop
adc
mov
cmovs
in
cwtl
insb
add
or
xchg
add
scas
das
lds
dec
jmp
loope
hlt
adc
insb
inc
cli
push
sahf
xlat
sbbb
clc
and
mov
push
jle
into
and
into
dec
jmp
mov
xor
data16
outsb
insb
sbb
push
dec
cmc
fsubs
and
and
mov
dec
in
adc
lea
or
shlb
les
test
testb
mov
add
cs
sbb
mov
cmp
and
lret
pop
cltd
jae
fistpll
aaa
fcmove
ficoms
ja
push
xchg
and
addr16
dec
inc
mov
imul
fnop
push
out
cmpsl
pop
cmp
push
adc
movsl
je
xchg
cmpsl
sbb
leave
sbb
xor
popa
fdivrs
fildl
cltd
stc
lret
mov
das
addr16
aam
mov
xor
add
loop
cmp
mov
sbb
rclb
jbe
in
pop
or
cmp
mov
pop
repz
sti
add
movsb
jp
push
rolb
daa
les
testb
jmp
ret
sub
adc
mov
xlat
scas
test
cmp
xlat
mov
fisubrl
mov
cmpsb
push
inc
pop
adc
cmpsl
ds
outsb
push
ljmp
jb
push
mov
iret
std
sbb
aaa
fcoml
push
out
test
cwtl
xor
cmc
jle
es
daa
inc
pushf
xor
and
push
cmpsl
outsb
mov
and
arpl
repnz
addr16
ret
rorb
int3
xor
push
push
xrelease
adc
icebp
lahf
mov
inc
jle
mov
popa
aam
repz
mov
sahf
shr
push
popf
add
insb
mov
jb
cmp
sub
cmpb
add
fcmovne
sub
cwtl
push
hlt
pop
or
stos
xchg
repz
cs
push
mov
ret
and
fidivrl
mov
mov
icebp
mov
xchg
les
je
in
aas
dec
lock
and
mov
out
push
pop
jecxz
jno
cmp
scas
push
test
dec
push
sbb
insb
hlt
or
flds
mov
in
inc
pusha
shrb
arpl
mov
movsl
push
dec
fdivr
rsqrtps
std
xchg
sub
mov
add
inc
scas
inc
xor
inc
mov
mov
and
xchg
sub
adc
dec
jp
ljmp
sbb
filds
clc
sahf
xor
mov
sbb
cmc
scas
inc
daa
sbb
jge
rcll
roll
pop
rcll
mov
hlt
mov
mov
push
jl
mov
push
sub
mov
mov
add
inc
imull
push
sti
fidivs
sub
or
xchg
push
jne
fwait
das
and
and
rorl
scas
nop
dec
sbb
and
fwait
xchg
add
test
ss
je
repnz
dec
cld
xlat
outsl
xor
andb
bound
icebp
in
mov
or
mov
mov
std
push
out
dec
xchg
and
inc
mov
arpl
mov
push
jae
fstpl
pop
inc
jg
daa
insl
lock
out
out
adc
fstps
lret
cltd
jmp
mov
xor
sti
andl
pop
hlt
mov
daa
lcall
pop
repz
add
aas
into
sbb
add
lret
jge
data16
push
inc
inc
call
rolb
lods
lods
push
xor
cmpsl
loop
fs
add
sub
jne
mov
pushf
int3
mov
into
test
inc
in
sbb
rorb
dec
stos
pop
mov
xor
jmp
dec
sbb
int3
lret
popa
ret
dec
xor
call
push
or
rol
pop
sub
jl
pushf
dec
dec
leave
add
push
push
mov
sbb
mov
mov
mov
into
push
jo
and
push
pop
pop
adc
pop
mov
fidivl
int3
or
cs
sub
rcll
mov
add
dec
int3
mov
mov
adc
fwait
adc
jg
inc
subb
pop
fidivrl
scas
test
scas
xor
cmpsl
push
xor
pop
sub
icebp
jecxz
clc
test
cmp
les
adc
addr16
sbb
sarb
push
and
cmp
into
inc
and
dec
mov
aaa
insl
pop
lods
inc
dec
lahf
push
adcb
mov
sbb
sbb
movsl
mov
mov
mov
mov
add
jns
mov
pop
xchg
pop
cmp
lcall
cmp
repnz
lcall
fwait
xor
or
repnz
cwtl
das
in
mov
mov
add
add
mov
cmp
testl
jo
and
in
mov
mov
out
xlat
jmp
jecxz
pop
push
mov
loope
mov
out
inc
cwtl
shrb
xchg
jecxz
or
loope
ror
cli
rolb
iret
clc
jae
xlat
bound
ja
out
push
out
and
add
stc
push
les
xchg
mov
xor
dec
in
movsl
test
adcb
push
movsl
enter
into
addl
repnz
mov
gs
dec
push
sahf
xor
mov
aam
cmpsb
mov
mov
inc
sar
xlat
outsb
jmp
fnsave
and
std
adc
test
push
lods
dec
and
orb
jg
call
rorb
adc
add
sub
shlb
pop
hlt
pop
add
jnp
scas
pop
mov
addr16
cmpsb
enter
mov
mov
add
inc
or
cmp
push
subl
aam
adc
jns
or
gs
fisttps
ret
jle
sbb
icebp
push
dec
cltd
dec
shll
daa
pop
add
adc
fiadds
andb
int3
icebp
jns
cmpsb
fmull
push
adc
push
or
dec
dec
jne
aas
pop
fdivl
mov
lret
and
xor
repnz
mov
scas
call
or
inc
pop
divb
or
ficompl
int3
enter
sbb
add
jle
mov
das
and
or
lea
mov
scas
mov
iret
cmp
cli
mov
cmp
je
iret
data16
and
xchg
mov
xchg
cld
inc
xchg
sub
cmpsb
cmp
sbb
enter
in
sub
daa
mov
xchg
test
testl
push
pop
movsl
jne
sbb
mov
pop
mov
fdivl
aam
movsb
xchg
cwtl
idivb
mov
mov
mov
es
xchg
fnsave
pop
out
mov
jle
cmpsl
pop
xchg
jb
jp
mov
inc
fldl
sti
add
xor
stos
aas
cmp
mov
cmpsb
mov
rcrb
and
and
pusha
pusha
cmpb
ljmp
inc
jno
xchg
jge
and
nop
sub
rorl
andb
mov
hlt
mov
dec
in
xchg
aad
out
dec
inc
andb
les
push
sbb
pop
dec
and
jno
jb
sbb
or
mov
dec
mov
cmp
mov
pop
inc
cmp
rolb
sahf
inc
test
cmp
cmp
mov
jns
pop
repnz
jns
nop
lods
xor
mov
dec
movsb
push
pop
xchg
rcrb
test
add
lret
inc
xchg
daa
dec
aaa
shll
filds
test
subb
call
xor
mov
push
cmp
adc
xor
mov
inc
push
dec
out
mov
out
and
fmuls
sub
call
adc
pop
cmc
gs
and
adc
xor
cmp
sahf
xor
pop
jl
das
and
es
shlb
adc
push
clc
popl
int
or
push
mov
fimull
xor
ret
pop
cmc
stos
pushf
sub
mov
jno
sahf
xchg
mov
call
adc
in
addr16
inc
mov
xchg
and
and
test
mov
jae
int
cwtl
pushf
sahf
jmp
or
ret
adc
add
mov
addr16
es
sahf
sub
test
sbb
mov
jnp
pop
dec
rcrb
adc
mov
inc
fwait
xlat
dec
or
cmp
mov
lds
std
jge
cmp
notl
ret
jle
sti
jle
sub
mov
inc
in
sbb
out
loope
cmp
js
inc
lea
inc
fnstcw
int
pop
jmp
pusha
notl
in
xchg
xor
or
fidivrs
out
aam
mov
nop
popf
mov
add
adc
jnp
push
sahf
aad
inc
mov
xchg
mov
call
ds
pop
xor
mov
cmp
push
dec
ss
shrb
and
fcoms
stos
jbe
xchg
mov
sub
out
sbb
sahf
cmp
lods
inc
lock
mov
cs
fbstp
xor
lods
mov
and
and
and
out
cli
mov
loop
shlb
cmc
mov
add
xchg
and
push
out
dec
xchg
inc
mov
push
adc
mov
les
out
daa
cli
cwtl
scas
loop
pop
or
call
int
mov
int
mov
pop
sahf
add
addr16
xor
lods
ljmp
insb
lahf
iret
or
and
cmc
xor
push
xchg
and
or
or
icebp
cmp
or
sbb
add
dec
fwait
test
mov
out
add
or
std
cmp
sub
xor
or
scas
adc
stc
shr
divl
stos
jp
mov
stos
shl
and
adc
aam
fcoms
cmp
fwait
and
cli
mov
loopne
pop
mov
xchg
jno
xlat
sahf
push
test
or
fadds
fisubrl
sahf
mov
adc
icebp
push
push
movsb
inc
xchg
jl
rcr
add
fists
shll
in
or
xor
mov
sub
xor
clc
xor
inc
jb
mov
stos
addr16
lret
ret
leave
test
mov
pop
xor
test
pop
cs
or
cmpl
clc
push
dec
lahf
xchg
hlt
pop
gs
sahf
sarl
jge
xor
mov
mov
test
popa
fistl
or
dec
xchg
sub
lods
jmp
or
sti
inc
cmp
add
std
push
inc
or
sub
cmp
cli
shlb
inc
mov
jmp
pop
sbb
loope
xchg
adc
js
mov
jmp
into
sbb
push
push
dec
sub
sub
sbb
inc
in
sti
dec
sub
lcall
lahf
mov
jne
out
lods
and
mov
rcrb
add
xchg
rolb
pop
ficompl
mov
aam
mov
pop
scas
xor
jae
mov
cmpsl
rorl
cwtl
pop
test
arpl
cmp
xchg
outsb
xchg
pushf
roll
jp
cmp
aam
adcl
jmp
mov
in
jle
cmpb
sbb
or
add
imul
test
hlt
pop
mov
mov
add
dec
clc
int3
stos
inc
xor
popa
push
aam
divb
sub
pop
icebp
xlat
sub
js
mov
lds
jp
jle
scas
scas
ja
mov
cli
xor
mov
push
xchg
shll
dec
aaa
aas
in
inc
pop
pop
jns
lods
insb
dec
adc
mov
mov
jb
sbb
movsb
ss
adc
mov
dec
pop
arpl
imul
jp
mull
lds
jbe
hlt
mov
pop
ret
out
test
insb
test
xor
adc
xchg
mov
dec
stc
test
inc
xchg
sbb
fsincos
pop
addr16
pop
ret
bound
js
stc
aam
rdpmc
jp
jl
xor
pop
adc
aas
mov
clc
popa
icebp
sub
add
fwait
mov
add
fidivrl
andb
mov
cmc
sub
cmp
xchg
sahf
in
lahf
pop
pop
out
lds
shl
scas
jmp
dec
sbb
or
dec
pushf
test
lds
push
aam
pop
cmpb
pop
add
cvtps2pi
inc
jns
sub
add
in
dec
out
push
mov
add
cmc
push
add
lds
ret
imul
and
lock
mov
sbb
scas
ret
roll
arpl
fxch
je
bound
dec
xor
jge
lock
mov
pop
stos
sub
test
sbb
das
and
rorl
mov
jg
stos
roll
xchg
dec
hlt
into
adcl
leave
cmp
movsl
cli
insl
add
test
push
dec
mov
ret
adc
add
je
fisubl
push
jmp
sar
jo
or
cmpsl
push
rcrb
inc
xchg
mull
mov
out
ja
outsb
adc
lahf
adc
mov
xor
inc
in
mov
outsl
call
shlb
or
push
inc
and
dec
jb
xchg
cld
jmp
and
cltd
mov
fdiv
xchg
ja
les
call
dec
dec
inc
mov
jmp
adc
and
je
ljmp
jo
mov
ret
test
stc
push
jmp
xor
pop
xlat
sub
mov
xchg
cmp
insb
mov
push
inc
aam
andb
dec
sub
push
mov
add
stc
inc
fwait
xor
sub
mov
adc
cli
jbe
inc
sub
cvtpi2ps
leave
pusha
jnp
xchg
dec
mov
mov
ret
pop
inc
inc
pushf
mov
pop
adc
shlb
mov
cmpsb
jg
mov
lahf
push
or
pop
in
dec
iret
push
push
mov
int
dec
mov
xchg
mov
lret
inc
adc
loopne
jbe
pop
aad
jb
test
js
ret
aad
ret
cmc
int
repz
adc
loope
or
lahf
add
lea
nop
out
in
outsl
jnp
das
xchg
sbb
xchg
cmp
mov
sub
sub
nop
popf
mov
loope
or
pop
mov
push
mov
andl
out
dec
into
push
cmp
in
inc
jecxz
jno
shll
fs
xchg
ret
mov
inc
adc
aaa
mov
adc
jecxz
daa
outsb
fiadds
out
dec
jb
outsl
jg
push
mov
faddp
aad
shlb
mov
leave
add
rcr
mov
jp
or
fcoms
xor
in
add
push
mov
inc
add
pop
xor
pop
repnz
xchg
pop
xlat
mov
mov
pop
xlat
rorl
sub
test
lea
add
dec
push
pop
adc
add
mov
pop
mov
sbb
fbld
adc
aad
roll
adc
jmp
stos
cmpsl
fwait
clc
mov
push
dec
movsl
adc
in
int
mov
jb
enter
jecxz
adc
repz
lcall
cmp
int3
js
popf
ss
xchg
add
idivb
adcl
push
sub
push
idivl
cmp
in
xchg
push
lret
mov
pop
repz
repz
xchg
push
je
xor
aas
icebp
leave
daa
aam
cmp
and
jno
out
jle
inc
mov
mov
fstps
sub
addr16
lea
pop
cwtl
das
inc
lret
inc
mul
or
and
fstpt
arpl
retw
aam
sub
nop
cli
sahf
fldl2t
xchg
and
mov
jns
je
insb
lahf
pushf
mov
xchg
mov
push
pop
cmp
aam
sbb
inc
in
lahf
ret
adc
jecxz
rcrl
mov
push
negb
xor
inc
sbbl
xor
mov
xor
aas
int3
push
or
negl
scas
in
lret
loope
dec
rcr
loopne
es
mov
ja
jae
orb
inc
lea
sub
xchg
cmp
cmc
cmpsb
jecxz
pop
cmovle
mov
repnz
jmp
pusha
popf
sbbl
xor
fdivl
push
push
notl
es
sbb
lahf
lcall
mov
sub
scas
push
nop
pop
loop
out
cmp
or
cld
inc
mov
add
lock
add
and
in
dec
push
mov
aad
pop
stc
fidivl
push
add
outsl
cmp
test
add
mov
shlb
push
aam
mov
test
mulb
cmp
xor
int3
xchg
xor
in
lret
mov
push
jle
fcompl
hlt
mov
pop
add
movsb
and
xchg
cmpsb
std
pop
xchg
scas
push
adc
push
jae
leave
and
call
cmpsl
out
mov
clc
dec
dec
adc
sahf
std
jecxz
mov
inc
mov
add
and
inc
fsts
nop
adc
mov
sub
add
pop
mov
push
cmp
xor
bound
push
adc
mov
mov
jne
enter
repz
inc
cltd
jg
call
sbb
sbb
gs
xor
or
mov
sbb
clc
jnp
jns
repnz
mov
imul
sub
jbe
mov
mov
idivb
andnps
mov
fsubrl
enter
fsubs
cmc
popa
adc
and
lret
es
push
adc
ja
out
dec
js
dec
stos
jle
dec
cmp
aad
aad
loop
push
loop
lret
in
daa
push
mov
dec
mov
loope
jg
jae
imul
cmp
sbb
out
push
in
sub
gs
js
sbb
dec
ret
jne
mov
fcompl
stos
push
mov
lds
frstor
add
mov
pop
push
jp
mov
xor
lea
adc
jne
add
xchg
je
pop
out
mov
push
mov
dec
int
mov
dec
mov
aaa
mov
popf
fidivs
and
mov
dec
andl
mov
mov
scas
add
mov
xchg
stos
movsl
xlat
add
xor
dec
mov
lock
ss
shr
call
xchg
fisubl
sub
lods
dec
pop
mov
loopne
hlt
dec
adc
out
sbb
leave
mov
mov
mov
xor
test
fimuls
adc
sub
sti
movsl
cld
pop
xchg
sarl
into
or
push
inc
mov
add
ret
xor
xchg
mov
fs
sbb
mov
push
sbbb
mov
jnp
int
dec
dec
pop
stos
test
hlt
push
rcr
mov
mov
pop
cmp
add
dec
loopne
lods
cltd
pop
jg
cmpsb
xor
shlb
imul
cmp
scas
mov
pushf
and
jbe
ljmp
adc
push
ret
cli
sub
pusha
shl
in
mov
jo
sti
je
or
sbb
mov
clc
cmp
scas
fwait
cmova
push
out
and
je
mov
aaa
outsb
sbb
inc
cmp
add
and
rcrb
loope
arpl
test
cltd
loopne
push
dec
cmp
dec
loop
lods
cld
mov
push
lods
in
shl
or
into
add
inc
lcall
sbb
xor
jg
cmp
inc
rclb
xchg
scas
test
cmpsl
mov
orl
jb
data16
sbb
test
pop
lcall
test
arpl
pop
pop
test
mov
dec
sbb
ja
jge
add
pushf
fwait
gs
call
xor
or
xor
pop
insl
cmp
add
movsl
std
inc
pusha
sbb
pop
dec
enter
outsb
fildll
or
jne
adc
mov
jmp
adc
mov
lcall
mov
inc
movsb
mov
cmp
fmul
pop
iret
mov
xchg
mov
fcompl
incl
cmpsb
orb
cltd
jae
mov
pop
mov
push
repnz
adc
mov
sarl
and
pop
fdivrs
loopne
mov
pop
pop
mov
mov
inc
scas
in
fsubrs
rcrl
sbbl
outsb
jle
xchg
sub
mov
add
mov
push
fnstenv
daa
sbb
cmc
dec
fisubl
adc
ret
dec
jno
dec
mov
xchg
mov
cmpsb
mov
cmp
add
add
test
push
mov
shll
pop
pop
inc
adc
dec
mov
xchg
jno
rclb
icebp
daa
fucomi
pop
aad
or
ret
jl
jb
test
push
or
nop
pop
fnstcw
or
je
outsl
les
jl
hlt
mov
jp
and
cmpsb
loopne
pop
or
sub
mulb
movsl
movsb
sbb
aaa
mov
andb
mov
in
and
ret
rcrl
insl
cld
push
jg
jbe
int3
sbb
cmp
xor
loopne
push
cmp
adc
rolb
xor
je
lret
xchg
mov
int
xlat
jle
daa
mov
mov
jns
ret
pop
iret
in
popa
lds
add
pop
jno
int
loopne
sahf
out
pushf
pop
mov
ret
lcall
sarl
sub
mov
fwait
cmpsb
inc
mov
ficomps
jbe
mov
pop
mov
aam
mov
enter
xchg
jecxz
ds
out
mov
icebp
movsl
dec
sbb
test
loop
loop
int
sbb
mov
jecxz
out
in
decl
mov
sub
dec
mov
dec
loop
cwtl
fists
popf
out
adc
cli
imulb
nop
bound
push
jno
jb
imul
xchg
nop
adc
repz
or
sub
add
arpl
loope
pop
jbe
ret
cmp
lahf
cmp
stos
scas
dec
cltd
inc
outsb
jb
lahf
mov
push
sbb
insl
push
stos
adc
push
out
pop
data16
adc
push
imul
daa
ds
push
in
repnz
in
jg
mov
mull
rcll
jmp
aaa
nop
pop
xor
sbb
push
out
adc
or
xchg
inc
mov
pop
ljmp
jno
ret
int3
and
in
xchg
xchg
es
fidivs
je
fidivs
out
test
xor
int3
adc
xchg
add
or
gs
mov
mov
add
aad
stos
pop
xor
cli
mov
enter
xor
jge
add
stc
popf
dec
sbb
int
sub
add
in
xor
jg
push
cltd
out
ss
mov
xor
and
stc
mov
push
pop
fstpl
sub
mov
xchg
jp
inc
mov
dec
cmpsl
dec
cmp
dec
pop
or
movsl
and
aad
inc
scas
fnstsw
mov
out
mov
cmp
jle
loop
xor
std
rcll
pop
fldcw
cmp
loop
pop
dec
jo
mov
mov
ret
pop
dec
jmp
loop
jmp
int
mov
insl
out
loopne
inc
aad
xchg
cmp
pop
dec
in
scas
xchg
cmp
lds
xchg
jo
inc
fldl
sbb
mov
incb
cltd
xchg
add
shrb
jbe
fists
sbb
ljmp
scas
js
cmp
add
and
add
adc
mov
in
pop
testb
popf
and
and
cs
push
mov
int3
pop
outsb
mov
sub
stos
sub
add
push
xchg
xor
int
push
sbb
inc
imulb
fsts
mov
jge
lods
addr16
in
sub
cmp
das
mov
fbld
cvtps2pi
arpl
out
cs
mov
aad
inc
pop
push
pop
imul
int3
lret
mov
push
icebp
push
dec
cltd
adc
les
inc
inc
push
jno
xlat
rorb
mov
jns
cmp
dec
mov
add
lods
jmp
inc
aaa
popf
jp
in
out
divl
stos
add
xlat
dec
fs
dec
jb
and
ja
repnz
out
leave
bound
add
cmp
inc
mov
stos
xchg
pop
int
lret
es
out
cmpsb
xchg
fsubrl
cmp
or
jge
pop
lcall
sbbl
fstpl
test
sub
push
sub
out
jae
push
jecxz
outsb
jne
xlat
lcall
jg
stc
xchg
push
inc
cmp
lret
bound
mov
arpl
inc
arpl
mov
push
andb
aam
add
pop
pop
clc
mov
inc
lcall
js
rcl
adc
adc
gs
xchg
test
clc
es
scas
sub
pop
orl
and
inc
mov
jmp
rorl
add
xchg
inc
jmp
fs
push
jo
rcll
jns
les
mov
clc
push
nop
adc
ret
int
jo
mov
cs
xchg
mov
fistpl
cld
dec
mov
sti
dec
sbb
pop
loope
and
fldenv
test
shlb
insb
lea
js
stc
inc
inc
mov
sub
fwait
xor
cmpsl
push
cmp
xor
inc
push
mov
push
movsl
test
enter
mov
cltd
mov
cltd
jbe
mov
push
ljmp
add
jle
jmp
cmp
insl
or
pop
dec
mov
pop
dec
add
xchg
add
test
jp
and
lahf
lea
sub
out
mov
fidivl
loope
repnz
sbb
pop
lock
lods
ret
or
add
imul
stos
dec
ljmp
call
mov
pop
dec
sub
ja
jp
push
ds
fwait
push
loope
xlat
in
popa
dec
pop
outsb
sub
div
push
rcl
mov
push
mov
mov
gs
push
icebp
xor
int3
lret
jne
enter
hlt
mov
rclb
stos
ret
loop
cmc
and
cmp
fdivr
cs
stos
add
mov
push
cmp
ds
outsl
cmpsb
daa
ds
pop
shrb
bound
mov
movb
add
hlt
xor
call
pop
xor
mov
push
dec
pop
lret
inc
inc
in
and
lahf
dec
or
push
out
addr16
lock
dec
into
loope
les
inc
enter
dec
or
sbb
fisttpl
adc
out
and
scas
xor
hlt
mov
and
stos
imul
aas
jmp
adc
test
movsl
xchg
lods
scas
push
dec
outsl
sti
std
jo
add
fsts
loopne
imul
hlt
push
push
mov
push
or
xchg
push
movsl
pop
negl
adc
fdivr
call
scas
push
sahf
cmc
push
fsub
cmp
mov
sub
adc
shrl
hlt
push
mov
data16
pop
and
xor
idivl
mov
dec
and
js
mov
les
stos
adc
push
mov
sbb
xor
andl
test
mov
mov
popa
or
inc
or
xlat
scas
and
jne
shlb
xor
mov
push
pop
cmp
xchg
subb
inc
decl
insb
das
cmpsl
les
cmpl
das
dec
in
xor
push
mov
xchg
pop
jno
sbb
fdivl
cmp
mov
and
in
xchg
cli
add
test
adc
xchg
mov
pop
stos
les
daa
sti
mov
cmp
cmp
inc
neg
test
loopne
in
push
pop
sarl
push
add
scas
mov
iret
dec
ret
xor
fildll
adc
stos
inc
arpl
lock
jnp
cmp
pop
into
mov
sub
or
add
or
mov
mov
fidivrl
lds
cmp
dec
in
imul
xchg
insb
add
repz
sbb
mov
mov
gs
adc
dec
lock
pop
jns
push
in
test
in
call
test
scas
cmp
pop
xor
ret
call
daa
into
pop
or
or
push
nop
daa
mov
or
test
pop
or
nop
pop
iret
mov
loop
cmp
lret
lea
fsubrl
xlat
mov
pop
mov
fisubrl
rep
mov
fwait
in
xchg
call
jl
aad
leave
shr
or
hlt
inc
leave
pusha
cmp
je
ffreep
stos
sbbl
mov
inc
xor
cmp
test
adcb
cmp
hlt
sbb
es
push
in
insb
pop
cwtl
sub
pop
jl
and
notb
scas
daa
sbb
repnz
ja
inc
fndisi(8087
test
xlat
mov
jecxz
test
pop
cmp
fdivs
lds
call
inc
lods
sbbl
jge
outsb
sub
push
test
lods
rcrb
xchg
outsb
lret
mov
jno
xchg
pop
fbstp
pop
nop
or
adc
ss
daa
mov
cwtl
das
sbb
dec
insl
mov
sahf
sub
mov
cmp
push
or
ja
adc
sub
jno
ret
pop
std
cmp
lret
rorl
out
push
ljmp
call
add
or
cmp
aaa
inc
pop
imul
ss
bound
dec
sti
fsubrs
cmp
cmp
jo
enter
mov
jne
dec
movsb
repnz
mov
scas
pop
mov
and
xchg
sbb
scas
clc
cmp
lods
add
and
mov
jge
adc
mov
fdivs
cli
cmpb
test
cs
sbb
cmp
das
pop
add
roll
scas
mov
aas
inc
stos
pop
or
insb
test
int
test
mov
call
cmp
add
je
icebp
cmpsl
cmpsb
test
ss
push
sbbl
or
call
lods
cmp
clc
iret
jae
add
cltd
je
lret
icebp
jge
jno
jo
xchg
pop
js
xchg
pushf
aad
cmp
mov
mov
addr16
sbb
enter
loop
mov
mov
add
lods
inc
ficomps
nop
lret
pop
xchg
adcl
out
hlt
lock
lahf
in
adc
imul
jle
lahf
lods
mov
mov
mov
mov
and
andl
mov
push
pop
call
mov
ljmp
stc
iret
dec
ss
mov
stos
imul
xchg
mov
or
jl
and
cmpsl
mov
loop
lret
add
popa
test
fdivs
adc
mov
push
sub
dec
push
adc
loope
cmp
pop
jbe
std
cmp
pop
sub
fnstcw
addr16
mov
mov
xchg
mov
or
insl
sub
pop
mov
dec
or
js
andb
adc
mov
pop
setp
or
cmpsb
sbb
mov
push
mov
jl
inc
fwait
pop
add
add
push
ficompl
mov
mov
cld
arpl
pop
jne
dec
std
xlat
cld
jp
pop
mov
mov
mov
cmpsb
hlt
clc
fidivrl
and
mov
fdivrs
sub
or
ja
dec
sub
sub
sub
sub
push
mov
shrl
or
push
push
jecxz
rcrb
in
repnz
xchg
mov
in
cmp
jl
mov
add
cmpsb
repnz
test
lds
pop
popf
adc
mov
lods
test
int
cld
test
loop
stos
and
pop
in
xchg
mov
lock
loop
sub
lods
mov
loopne
cli
fdivl
and
jge
mov
icebp
pop
inc
sbb
jbe
and
xchg
pop
sbb
aaa
hlt
pop
nop
sub
pop
leave
jge
ja
dec
push
cltd
lret
aam
inc
push
data16
imul
sbb
adc
outsb
lahf
cmp
push
xor
xchg
outsb
jl
pop
aaa
stc
mov
leave
pusha
nop
xchg
movsl
lret
inc
mov
or
js
add
sbb
mov
clc
dec
mov
imulb
lods
mov
push
and
mov
xchg
pop
movb
dec
enter
test
nop
sub
push
rolb
xchg
jecxz
adc
test
and
lahf
lcall
mov
aas
or
jl
es
in
dec
test
es
loop
stos
adc
test
movsl
sti
xor
pop
bound
in
out
mov
xor
mov
inc
add
xchg
bound
mov
mov
push
adcl
lcall
pop
lds
int
xchg
inc
stos
sahf
mov
sbb
jbe
lods
out
mov
adc
cmp
push
insb
in
cmp
jbe
jg
jl
xchg
mov
icebp
test
fisubl
mov
jg
or
loope
sbb
xchg
xchg
or
cltd
sbb
jp
inc
xchg
outsb
addl
mov
cmc
cmp
adc
xchg
jo
mov
jmp
fdivl
mov
cmp
push
mov
enter
das
pop
jnp
pop
icebp
inc
push
aas
cmp
loope
xor
push
es
push
xor
ret
fcmovne
popa
int
mov
push
aaa
sbb
push
iret
push
stc
pop
loopne
cld
iret
inc
sahf
and
sti
test
aam
gs
cmc
dec
pop
aam
xchg
push
cmc
pop
lea
sub
dec
js
sbb
xlat
dec
arpl
stos
mov
dec
sub
ficoml
shrl
xor
mov
or
adc
push
dec
fcoml
lods
jg
xchg
pop
divb
hlt
movsb
jnp
insb
nop
xor
in
xor
mov
pop
pop
aaa
inc
iret
inc
jmp
jnp
sti
dec
sub
out
test
xchg
pop
arpl
pop
stc
sbb
xor
arpl
and
jl
inc
cmp
das
repnz
loope
mov
gs
fldt
loope
popa
cmpsb
arpl
imul
or
aam
mov
outsb
mov
and
subb
scas
scas
pop
push
std
or
adc
jb
xchg
popf
cli
jmp
push
mov
push
mov
dec
jns
in
scas
bound
pop
push
int3
dec
shrb
dec
loop
jne
pop
sub
call
mov
sbb
jle
cwtl
scas
loop
les
fidivrs
daa
ss
addr16
aad
pop
movsl
lds
fs
loop
jge
sbb
push
mov
into
push
insl
jne
lahf
ja
sub
mov
cmp
ja
lahf
das
inc
in
inc
ljmp
std
fdivrl
jl
rorb
sub
jl
dec
mov
notb
mov
les
call
push
sbb
loopne
xchg
xchg
adc
cmpsb
mov
dec
mov
addr16
cwtl
outsb
jge
or
sbb
inc
push
sbb
lds
or
popf
leave
mov
aam
mov
pop
xor
sbb
call
and
repnz
aad
push
test
jne
cmpsl
ja
xchg
lods
and
push
sldt
icebp
in
fcmovb
push
arpl
outsb
inc
xor
dec
jecxz
push
dec
mov
push
test
xor
ret
test
lods
mov
xchg
adc
movsl
js
mov
inc
fstpl
lods
test
repz
enter
lahf
sbb
cmpsb
divl
loopne
lcall
sub
lahf
or
push
sbb
pushf
push
mov
lea
cmp
jo
ds
adc
aam
push
jae
test
cli
fcmovnb
sbb
in
insb
xchg
pop
cmp
pop
sbb
lcall
sub
repz
and
fwait
pop
mov
sub
arpl
or
jae
add
push
stos
fimuls
insb
fldenv
imul
inc
xor
insl
and
and
outsl
imul
fiaddl
fiadds
mov
lea
js
inc
pop
or
dec
push
enter
cmp
inc
in
fisttpl
xchg
test
xor
sub
repz
push
and
mov
xor
cmc
test
imul
jp
insb
ffreep
loope
add
push
fprem
faddl
gs
testb
in
pop
lret
div
sti
and
clc
or
mov
ja
out
test
lret
jne
ficomps
into
out
out
repz
loopne
xor
push
out
push
cmpsl
ret
push
icebp
std
jl
dec
mov
mov
pop
scas
mov
sub
mov
cmc
mov
daa
repz
nop
pop
ss
sti
subb
adc
inc
sbb
daa
jnp
adc
sbb
pushf
dec
lods
mov
push
sbb
arpl
lea
jbe
sub
insl
aam
dec
pop
and
cmp
in
xor
fwait
stc
sbb
sbb
jle
fsubrs
sysexit
int
push
and
clc
movups
aas
mov
jg
loop
ds
testb
fistl
sarl
or
and
fstps
xor
out
add
inc
das
mov
push
imul
in
push
imul
push
add
pop
nop
inc
lods
jmp
pop
mov
mov
push
cmp
mov
dec
mov
fldt
in
std
sti
test
xchg
sub
inc
or
loopne
daa
mov
dec
xor
scas
jecxz
push
adc
shlb
or
imul
or
sti
pop
and
push
mov
pop
out
aaa
dec
sub
jp
push
ret
lahf
subl
in
in
cmp
xchg
xor
xchg
cmpb
mov
mov
or
add
pop
cli
pop
jle
divl
sbb
mov
repz
push
xchg
xor
fnstenv
sti
and
cmpsl
and
sbb
push
jno
inc
xchg
jle
dec
or
dec
xchg
sbbb
fucom
jae
nop
and
dec
push
lea
push
insl
repnz
sahf
lret
add
pop
inc
mov
mov
js
inc
jecxz
cltd
mov
mov
mov
mov
lret
inc
jno
jmp
adc
cmc
pop
loopne
insw
adc
into
inc
inc
ja
fwait
aas
out
dec
push
and
je
mov
cltd
stos
and
jbe
loopne
jne
and
add
xor
call
adc
shrl
jp
fsubs
pop
icebp
or
daa
jle
testb
mov
hlt
pop
and
jl
xchg
ret
jl
xor
mov
out
jp
not
adc
lods
inc
push
mov
xor
cmpb
pop
inc
fiaddl
xchg
mov
push
in
nop
xor
mov
fdivs
mov
shlb
clc
mov
lods
push
add
outsl
cs
leave
adc
jge
fstpt
pop
xor
jae
insl
fwait
cli
pop
clc
mov
cmp
xchg
jle
ret
stos
idivb
push
leave
gs
insb
pop
push
and
cmpb
mov
mov
cmp
cmp
jo
inc
dec
dec
fistps
or
jns
jle
jae
pop
aaa
pop
xlat
fsubrl
dec
pop
movsl
dec
leave
int3
imul
scas
and
std
lds
int3
mov
cltd
fwait
sub
loopne
sub
repnz
aas
in
es
mov
cli
jns
popf
pop
pop
call
lods
movsl
in
pop
movsb
in
adc
xor
push
lock
cmp
pop
or
cmc
cmp
pop
aad
imulb
pop
mov
mov
or
xorl
std
add
or
dec
xor
or
out
sub
inc
fimull
jle
dec
fidivrs
fstl
inc
pop
nop
test
mov
aad
int
jmp
or
repnz
add
sub
pop
sbb
sbb
stos
arpl
outsb
push
inc
jl
jae
imul
sahf
push
testb
mov
mov
cmc
mov
outsb
add
nop
rcl
cmp
sub
scas
xor
je
mov
out
and
rcll
fidivl
hlt
xchg
insb
pop
fs
push
inc
repz
jns
frstor
jbe
movsb
mov
std
lods
loope
ret
rcl
ss
fldl
in
add
adc
mov
fnsave
adc
dec
fnstenv
pop
sub
cwtl
movsl
popa
leave
test
dec
clc
jmp
loope
inc
adc
xchg
mov
adc
pop
lea
shll
jp
clc
sbb
or
insl
jge
jnp
jno
outsb
or
or
push
pop
ss
pop
push
sub
lea
mov
in
sub
jle
incb
inc
rorl
mov
imul
jno
xchg
xor
push
push
mov
push
cwtl
pop
mov
xchg
dec
fadds
test
xchg
sbb
int3
loope
mov
add
mov
xchg
lods
out
test
adc
test
arpl
and
xchg
and
sbb
out
xchg
xlat
ja
sub
aam
adc
in
data16
mov
dec
xor
dec
mov
leave
add
mov
sbbb
int3
jg
sbb
iret
pop
ret
cli
cli
or
loope
enter
shlb
pop
popa
cmp
sbbb
mov
stc
dec
in
sbbb
leave
mov
sbb
xor
push
popf
orb
push
mov
popf
jo
mov
mov
mov
mov
out
add
mov
popa
sbb
mov
ret
xchg
gs
jnp
cmp
jle
xor
movsb
cmp
inc
mov
dec
pop
jle
fidivrs
shll
iret
xor
add
push
jp
mov
add
lret
test
sbb
stc
xlat
cwtl
xor
lcall
xchg
mov
es
out
imul
movl
iret
sti
inc
rcll
xor
push
cmp
jge
add
inc
cmp
add
enter
lods
mov
pop
jbe
mov
and
xchg
movsl
cmp
cmp
cmp
pop
mov
xchg
xor
cwtl
cmp
pminsw
jae
jg
push
loopne
sub
bound
stos
lcall
adc
repnz
or
sbb
rcrl
cmpsb
and
mov
mov
lret
jge
mov
int3
jnp
or
jl
scas
inc
mov
ljmp
xor
in
mov
cli
xchg
push
mov
lret
jecxz
jl
push
pop
sub
jnp
ljmp
in
inc
clc
push
test
jb
push
jo
or
xchg
xchg
add
and
sub
enter
imul
bound
test
jb
addr16
lods
bound
or
cmpl
jae
sub
mov
fwait
jae
jge
nop
xor
push
dec
test
cli
lds
movsb
jmp
xor
push
lret
add
lods
and
xor
xor
test
mov
xor
shll
ret
and
out
xchg
sub
pop
sub
adc
cld
or
mov
adc
mov
push
or
sbbb
insl
cmp
call
jbe
in
test
add
data16
pop
jae
fs
push
in
cmp
inc
sub
clc
stos
outsb
push
adc
xchg
sbb
jne
cmp
or
aaa
fdivl
sbb
fwait
push
mov
inc
xchg
cmpsb
in
push
in
in
adc
inc
sbb
pop
test
and
lock
fisubrl
test
orl
mov
mov
cmp
cmp
movsl
sbb
rcll
dec
stos
scas
daa
jbe
mov
sub
pop
scas
leave
and
cmp
push
push
and
adc
mov
push
call
pop
add
mov
push
push
cwtl
inc
insb
popa
or
ja
lds
lock
ret
movsb
xor
add
mov
adc
jbe
popf
bound
mov
jbe
jle
shll
gs
push
repnz
call
xchg
dec
jae
pushf
cli
pop
aaa
stos
mov
dec
cmpsb
push
out
fisttps
sub
ficomps
add
mov
hlt
fsubr
loop
sbb
pop
pop
cli
in
sar
repz
lods
scas
xchg
sub
xchg
mov
sahf
cmp
jne
and
popa
adc
xor
push
xor
clc
push
mov
dec
xchg
in
sti
popf
sub
aaa
or
hlt
into
push
push
ja
dec
pop
add
mov
push
in
jmp
push
das
mov
pop
push
repnz
sub
loopne
sub
dec
dec
jbe
outsl
rorl
add
insb
sub
rorb
xchg
push
leave
or
jae
xor
clc
in
out
mov
dec
fadd
hlt
xchg
sbb
push
push
push
mov
push
mov
notb
pop
lds
enter
cmp
cmp
push
inc
mull
inc
adc
arpl
push
inc
outsb
mov
and
insb
xor
addr16
add
push
push
enter
jb
mov
pop
lret
test
std
lahf
sub
inc
jo
in
fnsaves
shlb
sbb
subb
cmp
cmc
mov
inc
call
dec
push
stos
add
shrb
iret
inc
sub
fisubrs
xor
stos
dec
sub
scas
jbe
xor
cmp
lahf
add
push
loop
ja
sub
mov
lahf
fsubrs
mov
jge
adc
les
pop
out
push
jo
sub
js
adc
inc
mov
in
and
mov
or
cmp
mov
mov
filds
scas
mov
mov
cld
jp
mov
les
mov
lods
cld
movsb
ja
push
pop
lods
xchg
int3
cmp
pop
push
mov
lcall
popa
cs
js
lahf
mov
icebp
jnp
jg
cmc
jo
out
mov
std
cmp
dec
mov
in
lock
pop
xor
dec
loopne
aad
push
dec
jns
outsl
sbb
xor
and
lea
sbb
mov
push
lds
xchg
lret
xchg
addr16
mov
push
and
aaa
loope
stc
or
ss
ret
sbb
jmp
dec
inc
test
adc
dec
push
clc
out
add
push
pop
daa
ret
xlat
cld
lods
mov
pop
and
pop
inc
test
int3
pop
or
push
out
mov
andl
fsubrs
shlb
or
adcb
repz
ljmp
insb
mov
loope
incl
subb
sub
xchg
mov
cmc
pop
push
mov
cmpsb
pop
xor
adc
inc
mov
xchg
or
mov
push
test
cmp
jle
out
lahf
mov
xor
sbb
jecxz
int3
aaa
pop
into
or
add
xchg
push
cmp
cmpsl
or
xchg
sub
push
inc
arpl
dec
push
mov
inc
mov
out
push
sysexit
rcll
lahf
negb
xor
and
add
jno
jl
pop
dec
mov
cmp
push
testb
and
sahf
clc
mov
adc
cmpxchg
js
mov
inc
adc
pop
inc
js
loope
fcomps
or
bswap
cmp
sub
lahf
mov
pop
mov
xor
loop
lea
add
cmpl
imul
or
xchg
shrb
and
sub
fsubr
rcrb
jge
sub
mov
jb
pop
jne
shrb
std
mov
imul
ret
out
sub
mov
rolb
mov
pop
hlt
popf
cmp
lret
jb
scas
imull
xchg
cmp
push
aas
mov
shl
cmp
pusha
addr16
cltd
inc
icebp
adc
repz
dec
loop
sbb
adc
xor
insl
repnz
push
popf
test
js
dec
pop
xchg
mov
xchg
cs
adc
icebp
dec
popf
xor
push
mov
jne
mov
and
cld
mov
psubq
ds
mov
movsb
ffree
cmp
mov
push
stc
inc
jecxz
or
sub
test
std
pop
inc
dec
lock
cli
test
xor
push
jb
cmp
pop
pop
fstpt
jg
mov
adc
inc
dec
lods
mov
lea
dec
int
repnz
sar
imul
dec
fists
cmp
inc
or
out
outsl
push
fcompl
imul
lcall
pop
in
mov
sub
lahf
scas
ja
inc
mov
sub
mov
pop
popf
pushf
adc
stc
jae
adc
mov
and
out
push
adc
jbe
stos
inc
push
repnz
inc
mov
jne
xor
fdivr
sbb
sub
cmp
xlat
imul
pop
add
imul
icebp
or
jecxz
add
hlt
push
xchg
aad
int3
arpl
std
ljmp
dec
mov
rorl
and
aam
dec
push
dec
iret
fcmovnu
shr
sti
inc
mov
adc
or
out
cmp
test
pop
push
imul
sub
sub
leave
jecxz
enter
in
mov
cmp
adc
enter
lret
cmp
dec
cmpl
cwtl
loop
dec
shll
icebp
pusha
movsb
add
mov
jne
mov
mov
dec
push
inc
lcall
pop
dec
pop
iret
pushw
icebp
fsubrs
test
int
ds
repz
cmp
mov
jbe
mov
mov
out
inc
jns
scas
sbb
loope
add
enter
xlat
adc
xor
jns
leave
loope
cmp
mov
add
scas
or
test
xchg
ja
mov
repz
dec
adc
xor
pop
pop
xchg
push
mov
xchg
dec
mov
mov
outsb
fidivl
sbb
jg
mov
fisubs
add
dec
fnsave
xchg
mov
insl
inc
cmp
mov
and
pusha
jne
and
add
loop
aas
cltd
dec
pop
lret
mov
and
sub
pop
dec
or
xorb
rcrl
xor
into
daa
jno
xchg
inc
fwait
sub
lret
sti
xor
and
int
popa
mov
int3
je
add
nop
push
popa
movsl
mov
sub
fidivs
mov
jle
xor
cltd
decb
jnp
test
in
mov
nop
cmp
push
fsubl
aad
mov
fadd
int
fs
lds
xlat
stc
and
mov
cmp
pop
cmp
pop
pushf
rcrl
mov
cmp
repz
lods
xchg
in
clc
jae
cld
xchg
sub
icebp
sbb
add
adc
xor
pop
call
add
mov
cli
push
adc
out
psubsb
sahf
inc
data16
inc
test
xlat
lahf
adc
sbb
mov
add
xchg
js
rcrl
push
jae
test
adcb
xchg
add
pusha
mov
mov
xchg
fstpt
inc
addl
add
xchg
sub
setle
add
fiadds
hlt
pop
and
push
mov
push
stos
jge
daa
cmp
test
mov
sub
rcrb
lds
cs
into
iret
add
jmp
test
dec
dec
out
xor
push
testl
pop
lret
sub
pop
mov
dec
loopne
jp
sahf
lods
pop
insl
push
mov
mov
mov
cmp
sbb
daa
in
mov
sbb
jle
jmp
test
push
mov
out
pop
aam
loopne
pop
dec
xchg
pop
jle
cmp
inc
dec
and
dec
mov
dec
out
cmpsl
sbb
repz
mov
js
adc
cmpsb
pop
jnp
or
jae
setp
pop
pop
in
pop
sub
inc
dec
icebp
dec
hlt
jae
sbb
int3
push
sbb
mov
pop
jle
mov
sub
sub
cld
sarl
js
sbb
bound
inc
in
idivb
ret
hlt
movl
ret
rorb
pop
push
sbb
pop
add
lods
push
popf
out
inc
outsb
jb
cmp
xlat
fistpll
fisubs
test
in
shrl
pop
or
loope
repz
pop
pusha
mov
xor
cmp
lds
sub
sbb
movsb
mov
jge
cli
mov
sti
dec
not
inc
push
mov
out
sti
lods
outsb
jp
dec
xchg
add
jp
cwtl
push
je
imul
jo
pop
xchg
sahf
and
sar
sarl
and
cmp
mov
mov
mov
push
xchg
mov
sbb
data16
fsubs
adc
scas
call
mov
and
cmp
rol
pop
add
repnz
scas
ljmp
sti
data16
in
mull
inc
sub
add
push
fwait
pop
jns
mov
in
xchg
mov
arpl
fstpt
js
xchg
pop
xchg
pushf
xchg
jle
test
and
subb
fsubrs
jno
je
add
pop
mov
pop
rorl
ljmp
cmp
ss
int3
stos
xchg
enter
mov
data16
in
cwtl
and
push
into
xor
jno
les
aam
inc
push
popf
insl
stc
pushf
movsb
leave
pusha
inc
adc
jle
jp
push
xchg
loope
scas
sbbb
stc
adc
xor
stc
mov
icebp
test
sahf
jo
jmp
stos
outsl
ret
xrelease
leave
cmp
out
jecxz
push
roll
jae
dec
mov
nop
push
test
outsl
jle
mov
jb
ds
jno
mov
dec
sbb
lret
xchg
clc
sbb
sub
xchg
xor
cmpsl
inc
aad
stc
je
sub
testl
nop
call
sub
rcrb
cld
loop
mov
jecxz
pop
adc
sub
pop
and
jle
inc
mov
flds
aaa
stos
pop
dec
mov
inc
sbb
sub
aaa
pushf
cli
sbb
sbb
inc
gs
jns
mov
or
out
js
lods
sbb
stos
jg
iret
out
mov
mov
inc
in
std
pop
jbe
sbb
cmpsl
imul
movsb
mov
pop
pop
test
ja
pop
test
dec
cld
cmp
adc
jp
popf
fdivl
ja
push
xchg
mov
sub
xchg
fadds
lret
out
sbb
mov
in
sahf
fldcw
xor
mov
shll
mov
pop
into
ljmp
xchg
xor
mov
or
daa
add
sub
hlt
mov
mov
out
pushl
iret
jmp
rol
pop
mov
pop
sub
scas
add
mov
and
sub
sahf
cs
xor
mov
enter
andb
mov
aam
les
cmp
lock
or
inc
xchg
inc
dec
cmp
pop
shll
fildll
int3
in
ja
lret
pop
dec
enter
sub
sbb
inc
fs
pop
xchg
push
fwait
repnz
sub
mov
adc
movb
out
xor
or
jle
xchg
xchg
mov
in
mov
jo
in
lcall
xchg
ljmp
int
push
lcall
sahf
and
cs
out
inc
mov
cmpsb
out
add
cmpsl
ljmp
jg
or
and
sbb
outsb
adcl
sub
push
mov
jae
pop
mov
ljmp
sbb
arpl
hlt
jne
lcall
inc
jno
and
stc
je
int3
xchg
jp
mov
inc
mov
jo
xor
test
xchg
lods
and
dec
fists
dec
mov
das
test
inc
cmp
cmpsl
xchg
das
ljmp
push
jmp
push
cmp
int
and
bnd
out
and
lock
xor
sbb
movq
loop
push
mov
add
test
pop
lods
insl
sub
jmp
andb
push
popf
call
mov
push
and
andb
jg
hlt
and
add
pop
mov
pop
cmpsl
lock
push
xor
jp
out
push
pusha
jg
jb
xor
adcb
mov
and
mov
lock
lods
adc
fidivs
sbb
jne
mov
mov
test
scas
fstpt
fistl
xchg
test
mov
adc
inc
adc
outsl
je
pop
fisubs
adc
jno
jmp
push
aas
scas
and
fadds
jb
push
mov
sbb
std
aad
loop
rolb
cwtl
or
out
inc
rcrb
test
or
jp
stc
fistpll
cmp
sarl
sarl
loopne
push
adc
push
out
inc
xchg
jne
mov
cwtl
mov
fisttps
lcall
adc
dec
sbb
lods
inc
imul
insb
mov
aaa
test
repz
xor
orl
jl
push
and
push
xchg
mov
jne
cmc
xchg
jnp
pushf
rcll
and
dec
aad
ds
gs
adc
in
je
call
or
aam
xchg
adc
addl
add
loop
jle
pop
enter
push
pop
sub
leave
ds
imul
jge
jp
sub
fldt
cld
lcall
xchg
leave
addb
xor
cli
or
pop
cli
notb
scas
sbb
test
mov
pusha
or
mov
fsubs
xchg
push
inc
sbb
mov
shll
mov
clc
jae
adc
in
inc
cli
test
int3
imul
stos
or
sub
cld
outsl
sbb
mov
and
rorl
mov
shl
fs
insb
adc
mov
addr16
mov
xchg
andl
scas
test
test
cmpsb
ss
sbb
inc
inc
jb
push
jbe
daa
fdivl
outsb
and
xchg
andl
inc
sub
or
and
arpl
and
and
mov
xchg
and
xlat
dec
mov
cmp
push
adc
movsb
push
imul
into
arpl
sbb
std
dec
icebp
adc
rorl
test
inc
into
hlt
fsubr
scas
lret
test
add
arpl
add
pop
rorb
and
outsl
push
sti
je
mov
dec
inc
inc
repz
jge
sbb
jb
imul
sbb
inc
sub
stos
jae
jge
fistl
jo
dec
xlat
lock
imul
jae
insl
repnz
ret
xor
cs
idivb
xchg
xor
or
rcll
sub
or
popa
mov
add
std
jae
decl
rcl
or
mov
ss
out
ret
dec
stc
sbb
xchg
jns
adc
shll
push
mov
in
pop
enter
mov
lock
jae
push
scas
pop
cmpb
fldenv
out
sbbb
insl
ret
jmp
les
pop
movsb
cmovno
xchg
cmp
js
mov
or
clc
cmpsb
push
data16
leave
cwtl
int
xchg
mov
jno
cs
in
and
push
pushf
dec
and
pop
push
jmp
add
cwtl
mov
cld
adc
sub
push
addr16
and
adc
or
or
out
imul
sub
dec
cmpsl
pop
push
call
cmc
mov
mov
rorl
push
dec
imul
adcb
inc
pop
or
jg
lea
or
add
das
scas
movsb
pop
movlps
scas
pop
ja
or
scas
enter
out
nop
cmc
lahf
add
gs
mov
mov
mov
pop
adc
out
enter
cmp
shlb
in
mov
fildll
mov
fwait
sbb
adc
mov
int3
lock
in
ljmp
dec
cmp
jo
and
testb
cmc
mov
in
daa
test
inc
mov
stos
lea
cmp
clc
jge
or
in
mov
sahf
inc
xlat
or
jecxz
xor
jmp
rcll
sbbb
jp
aad
and
adc
xchg
or
mov
lods
insb
adc
cmp
xchg
inc
les
fidivs
ror
pop
clc
nop
movsl
cmp
mov
repz
pop
xchg
jb
dec
out
jns
out
pop
sub
adcl
addr16
jl
leave
pusha
inc
fs
inc
inc
int
jle
mov
mov
arpl
jo
pop
mov
std
mov
mov
out
jns
cmp
mov
std
pusha
aaa
fsts
les
jo
pop
mov
pop
repz
jae
push
push
cmp
dec
jae
fnstcw
cmpsl
repnz
add
fst
mov
mov
xchg
fists
test
adc
mov
mov
mov
outsl
jl
jge
add
push
xor
dec
add
sbbb
cmpsl
mov
les
aaa
les
dec
mov
jg
add
and
inc
and
fbld
inc
jne
es
sbb
dec
fstps
arpl
hlt
sbb
pop
repnz
or
xchg
cmpsl
xchg
sbb
lods
imul
xor
jp
shrb
subl
pop
ljmp
adc
outsl
int
push
lcall
push
pop
mov
out
sub
cld
mov
icebp
pushf
jl
mov
pop
mov
testb
ret
fiaddl
or
ficoms
arpl
daa
jo
sbb
test
insl
mov
pop
outsl
inc
adc
inc
lahf
ja
call
lds
dec
xchg
jnp
push
in
push
pop
push
pushf
mov
mov
pop
icebp
mov
sti
stc
scas
sti
int
data16
inc
mov
push
add
ret
shl
adc
mov
rclb
cmp
les
imul
mov
je
mov
test
add
push
movsb
pop
int
mov
insl
jnp
push
sbb
fs
or
stos
and
mov
mov
ljmp
xchg
in
rcrl
ds
in
xchg
and
dec
jns
sarl
aad
mov
xchg
adc
sub
mov
push
fmull
add
fbstp
pop
out
push
push
pop
add
and
outsb
popa
mov
push
in
je
sbb
ds
mov
loopne
scas
add
cmp
jle
or
pop
cltd
push
addr16
ficomps
dec
cs
pop
icebp
subb
pop
aam
or
pop
adc
fistps
cmp
in
popa
or
jle
test
repnz
std
scas
inc
dec
dec
fisubrs
sub
fadds
cmc
enter
push
xchg
adc
test
cmp
jge
push
scas
popl
xor
mov
push
fcomi
add
jae
idivl
pusha
in
test
pop
or
addr16
or
inc
inc
mov
inc
dec
sbb
sbbw
jecxz
jb
out
mov
xchg
and
out
mov
dec
adc
cli
shl
xchg
es
add
sti
dec
mov
mov
roll
mov
popaw
inc
xlat
xchg
xchg
xor
test
push
cld
mov
scas
fsubrs
mov
cmp
cmp
sarb
cld
fs
aam
in
xchg
fwait
push
pop
mov
pop
rolb
pop
aam
xchg
cltd
and
adc
mov
dec
or
loope
inc
jo
lcall
shll
or
dec
sub
imul
jno
cmp
loope
subl
dec
dec
cwtl
repnz
cmp
inc
in
push
jmp
outsb
fbld
mov
push
or
add
push
jno,pn
fldt
cli
loope
in
cmp
cltd
test
or
xchg
xchg
in
pop
mov
adc
imul
mov
cmp
adc
sbb
jo
adc
lret
cli
sub
inc
scas
sub
subl
imul
dec
mov
in
pop
inc
lea
jne
or
jae
pop
out
and
lods
nop
repnz
aas
and
aam
pushf
lret
cmp
push
pop
dec
shrl
jno
adc
or
clc
shll
sbb
aaa
xchg
push
adc
jg
mov
js
hlt
sub
ret
data16
push
mov
push
iret
jb
aad
sbb
or
jno
jns
xchg
sbb
fistpll
cmp
mov
xor
cltd
add
add
pop
orl
lods
push
pop
jge
subl
fnsave
sarl
mov
jns
loop
rcl
mov
out
int
lcall
cmp
push
and
pusha
inc
cmpsl
shl
popa
inc
inc
pop
jnp
mov
std
cmc
nop
jg
add
mov
lods
push
pop
and
cmpsl
dec
into
frstor
enter
movsb
and
test
roll
push
jno
es
pop
or
int3
icebp
ss
aas
loope
imul
jae
nop
in
loop
roll
int
stc
jbe
sub
sub
repz
pop
scas
mov
jne
mov
mov
add
and
aad
lret
push
lock
push
pop
sbb
stos
in
pushf
jne
std
push
in
xchg
adc
negl
cmp
cmp
fmul
std
mov
mov
inc
adc
in
pop
and
mov
jle
xor
lock
xchg
sub
xor
repz
push
mov
xchg
push
mov
fimull
and
stc
adc
loopne
mov
pop
test
in
mov
mov
pop
sbb
add
std
push
out
pop
mov
les
out
sbbb
sbb
iret
push
sbb
ss
je
mov
jp
and
or
jne
inc
adc
mov
xor
gs
mov
jg
pop
imull
cwtl
mov
incl
cwtl
ja
daa
adc
cwtl
jns
cltd
clc
mov
hlt
popl
jbe
out
orb
in
mov
pop
xor
mov
data16
das
or
push
jp
mov
lea
loopne
and
mov
fsts
add
call
xchg
fcmovnu
aaa
push
std
sub
sub
and
xchg
ftst
fbstp
or
or
xor
fs
mov
cltd
push
jmp
pop
int
pop
int3
jb
add
cltd
xchg
push
push
jmp
sbb
inc
int3
aam
sbb
cmp
mov
push
int3
and
test
and
pop
mov
and
dec
adc
cmp
psllq
adc
pop
pop
jmp
dec
movsb
dec
aaa
outsl
fwait
xchg
push
pop
xchg
jle
aas
and
mov
push
aas
aad
es
insl
add
or
out
mov
jns
and
cmp
or
fwait
insb
inc
pop
adc
add
arpl
inc
mov
xor
mov
test
mov
adc
lods
inc
aam
clc
shrl
and
fstpt
and
imul
cld
movsb
mov
push
mov
rcrb
push
repnz
lahf
xchg
sti
rcr
hlt
adc
jp
cmp
mov
fsubr
pusha
into
shrl
negl
int
lock
cmp
push
cmp
gs
andb
nop
outsb
lds
pop
dec
xlat
lret
cs
pop
mov
push
es
mov
jae
pop
sub
js
jg
dec
idivb
jge
xor
cmp
sarl
and
xor
addr16
and
push
xor
lock
cmp
outsl
or
daa
cwtl
mov
clc
add
gs
stc
dec
and
scas
jns
and
and
add
orb
xchg
or
sahf
inc
mov
stos
jge
sbb
dec
pop
hlt
into
mov
push
fidivs
hlt
mov
icebp
xchg
icebp
stos
lahf
into
lret
mov
dec
jns
fnstcw
or
adc
adc
movsl
aad
dec
insl
inc
pop
scas
inc
and
cli
pop
inc
xor
addr16
and
pushf
out
test
fdivs
sub
repnz
mov
out
mov
xchg
or
push
nop
sbb
jge
out
push
fsubrs
je
mulb
adc
mov
xlat
scas
fadds
iret
icebp
inc
cli
push
mov
movsb
mov
pop
rcrl
inc
sbb
jecxz
mov
fdivl
add
inc
jge
out
ret
addr16
dec
push
inc
lcall
mov
scas
inc
loope
inc
xor
ror
es
add
fwait
mov
test
shll
cli
adc
sub
push
adc
std
jle
or
outsl
int
mov
out
dec
in
pop
or
sub
jg
dec
jno
test
push
int3
xor
push
or
mov
rclb
shlb
mov
cmpsb
rol
enter
xor
sti
inc
add
cmpl
cs
out
xchg
dec
dec
mov
clc
insl
sub
in
push
dec
insb
fwait
cmpsl
jle
pop
xor
push
jne
add
mov
lahf
mov
add
ror
sti
fdivrl
pop
push
and
dec
fidivs
int
cmc
or
push
xlat
outsb
jae
test
ss
in
imul
popf
lsl
pop
cmp
jle
jge
push
scas
dec
jne
loop
lcall
fbstp
adc
push
adcb
inc
xor
push
out
ss
and
cld
or
xor
rorb
sub
cmp
fsubr
jno
cld
mov
rcrl
lods
call
ficompl
jo
lcall
push
add
test
cwtl
push
push
orb
cmp
sarb
push
leave
push
sub
scas
int
arpl
std
fistl
or
dec
lock
jl
adc
dec
test
pop
mov
dec
subb
aas
imul
or
jns
daa
mov
mov
fdivp
nop
adc
fwait
push
shl
stos
fiadds
mov
push
daa
jno
out
or
in
mov
call
adc
mov
sbb
into
out
inc
sbb
out
cmp
and
mov
jl
sub
jns
inc
stos
xchg
lock
lret
shlb
dec
div
icebp
fs
dec
repz
jb
push
fs
inc
lds
insb
scas
adc
fidivrl
pop
fwait
mov
loop
dec
lcall
inc
addr16
leave
out
fcmovbe
push
adc
pop
mov
xchg
and
cmp
addb
stc
test
fs
push
pop
mov
xor
flds
adc
enter
add
stos
xchg
push
inc
xor
cmp
scas
mov
jge
push
jmp
inc
stc
aam
cmc
mov
jmp
cmpsl
sub
mov
jle
push
sbb
add
inc
mov
xchg
into
js
sub
lock
cs
mov
ja
inc
add
scas
ret
mov
sbb
or
mov
insb
aas
cmc
leave
jno
cmp
jecxz
dec
lahf
mov
xchg
mov
lcall
sbb
ret
ss
sub
jg
mov
push
in
out
test
lret
inc
aas
add
or
fdivr
push
inc
or
mov
adc
bound
leave
ja
xlat
bound
lcall
jp
mov
outsb
add
scas
inc
pop
jno
hlt
cmc
int3
mov
ret
push
jns
push
int
mov
in
push
or
fxch
push
xor
loope
fmull
lret
jp
loopne
adc
in
mov
fs
lahf
mov
repnz
movsl
dec
adc
lock
jae
adc
pop
cmp
push
mov
add
push
movsb
sub
jecxz
pop
enter
lahf
ljmp
jae
movsl
add
xchg
sbb
pop
jbe
inc
jae
xor
inc
call
movsl
es
jb
loope
pop
pop
xor
enter
stos
movsl
dec
nop
xchg
inc
push
inc
data16
repnz
in
xchg
xchg
add
lret
adc
xor
clc
stc
pusha
es
fsubs
leave
sub
mov
out
add
mov
cmc
ja
loop
fcompl
push
adc
cmp
xorb
hlt
movsl
cmp
inc
mov
flds
loope
mull
xor
xchg
add
lahf
repnz
sbb
pop
mov
xchg
pop
repnz
dec
sbb
xchg
in
das
pop
in
bnd
xchg
push
xchg
repnz
out
sbb
aam
aam
add
push
push
sub
push
rcr
dec
jbe
jl
test
mov
lahf
and
out
sub
jno
adc
sbb
scas
sti
pop
sub
nop
inc
out
xor
lods
mov
mov
inc
jmp
push
sahf
cmpsl
fdivrl
popa
ja
push
mov
jp
in
pop
fdivs
jns
in
stos
icebp
and
mov
sbb
cld
ret
mov
add
xchg
xor
gs
popf
test
and
iret
sti
cmpl
push
test
popf
add
inc
out
in
jp
jecxz
in
stos
adc
int3
mov
cmc
popa
sbb
mov
xchg
aad
jecxz,pn
sub
cs
repnz
or
test
scas
call
mov
clc
inc
xor
and
push
fisubrs
jp
shrl
adc
fdivrl
mov
std
inc
push
in
sbb
sub
imul
jb
mov
or
ret
pop
jns
into
mov
clc
or
in
push
fisttpl
dec
and
rorl
add
lahf
hlt
and
and
es
sub
push
popf
js
add
dec
xlat
and
cmp
imul
push
jo
xchg
inc
stc
popf
insl
ficoml
mov
adc
jne
jle
es
sbb
adc
movsb
cmp
cmp
mov
pop
orl
pushf
jo
lds
lret
loope
sbb
int
pop
in
stos
jb
fldenv
test
arpl
push
jno
sbb
aad
add
es
cmpsl
fidivrs
sub
hlt
xchg
push
scas
or
xchg
pushf
xor
add
insl
push
rcll
sub
adc
or
inc
loop
add
imul
out
popa
sub
repnz
daa
test
push
hlt
stc
out
popa
call
add
push
fs
mov
pop
arpl
sbb
jg
lods
pop
inc
mov
mov
fdivr
les
mov
xchg
enter
jno
movsl
dec
outsl
test
mov
adc
loope,pt
xor
outsl
jnp
loopne
push
movsb
shlb
aad
test
js
mov
scas
xchg
sub
icebp
enter
push
lea
fnstenv
mov
testl
xchg
add
in
push
sbb
cmp
mov
pushf
call
into
enter
lret
dec
repnz
mov
nop
mov
xor
insl
pusha
es
dec
pop
aas
cmp
xor
out
jbe
aas
mov
jo
popa
mov
dec
cmc
mov
test
push
pop
jo
fisubs
mov
xchg
es
cmpb
cmpl
adc
xlat
cmp
mov
mov
jae
out
adc
cmpsb
jo
cld
pop
outsl
and
inc
xchg
push
sbb
movsl
int
sbb
ljmp
push
or
pop
jmp
fisubs
outsb
push
popf
pop
lret
clc
mov
add
cmpsl
jmp
jecxz
mov
fistps
pop
xor
lods
pop
push
loopne
push
std
ret
push
call
push
xlat
dec
out
pop
ja
xchg
imul
add
mov
xchg
sub
test
cli
push
sbb
pop
repnz
sub
push
jns
out
sbbl
mov
sub
lret
add
and
pop
maxps
fwait
roll
repz
add
push
lret
push
stc
orb
or
inc
cmpsb
lds
es
in
test
dec
pop
inc
cmp
jno
dec
add
scas
or
loope
cwtl
call
pop
fsubrp
testl
sub
hlt
pop
test
jl
std
jnp
ret
daa
mov
stos
xchg
repnz
leave
or
push
fstl
ret
incl
addr16
leave
aas
push
ja
rcrl
jb
jnp
cld
aas
lods
jle
pop
push
mov
xchg
jnp
or
or
xchg
inc
pop
scas
in
insb
repz
add
lcall
shl
sahf
sahf
jno
ret
les
push
test
add
adc
add
ljmp
and
inc
inc
test
add
rorb
stos
scas
icebp
and
fstp
inc
xchg
cmp
jl
in
or
xor
fidivrs
mov
push
sub
unpcklps
sub
roll
rol
push
pop
outsb
mov
aam
aaa
cmp
ds
push
imul
xchg
jl
ret
jo
mov
push
mov
lock
ret
and
pop
insl
shrl
mov
sbb
int
cmpsb
cmp
inc
stc
and
out
lea
xor
cld
repz
daa
push
sub
push
ljmp
xor
rclb
dec
aad
xchg
and
test
pop
jno
fcompl
push
mov
and
dec
or
mov
xlat
insl
add
loop
lods
xlat
scas
mov
sbb
cmp
push
mov
push
popa
and
jmpw
push
sub
cmpsl
xor
pop
fs
push
sti
fidivrl
xchg
push
cmc
aad
push
and
call
cmpsl
inc
adc
addr16
fisttps
inc
jb
mov
mov
jge
inc
dec
dec
lods
dec
nop
mov
mov
sub
sbb
aad
cmp
mov
or
inc
xchg
push
ss
in
inc
popf
mov
inc
popa
ss
mov
leave
xchg
mov
pop
cld
push
sbb
lret
lds
add
adc
jae
mov
fwait
pop
repz
and
xor
mov
ret
mov
cli
inc
pop
insb
adc
std
dec
mov
adc
dec
les
test
mov
fnsave
or
bound
fucomip
mov
lret
cld
sbb
pushf
insl
cltd
andb
and
imul
xchg
mov
mov
mov
jl
das
sti
or
mov
xchg
movsb
es
cld
xchg
into
sarl
push
mov
cli
mov
popa
mull
sub
out
inc
in
xorb
cli
push
push
rcr
arpl
and
addr16
mov
mov
fs
leave
mov
cld
in
mov
pop
xor
inc
push
jbe
sti
pushf
lcall
ret
or
outsl
push
iret
insl
test
shrb
mov
push
cmp
cwtl
adc
pavgb
pushf
adc
mov
clc
into
iret
fs
or
cmp
mov
mov
stos
sub
fisubrl
add
cmp
cmpsl
or
lock
popa
push
lcall
cwtl
mov
cmp
mov
add
popf
sub
bound
hlt
movsl
icebp
cmp
pop
popf
inc
loopne
in
add
jo
or
out
push
dec
clc
negl
xchg
push
jno
cmpsl
out
xor
pop
add
fimull
cmpsl
xor
cwtl
pop
jge
jecxz
testl
jp
jp
notl
int
inc
adc
cmp
xchg
or
imul
adc
std
mov
add
fwait
mov
imul
mov
jbe
xchg
and
push
leave
loope
out
adc
jg
mov
xchg
lods
add
cmpsl
repnz
repz
icebp
push
mov
faddl
or
mov
xor
jmp
push
int
lret
jno
mov
adc
dec
mov
adc
adc
std
xor
jmp
orl
dec
jne
xchg
in
stos
cmpsb
in
dec
ja
inc
js
xchg
sbb
inc
mov
push
in
mov
push
in
mov
cmp
or
dec
sbbl
inc
js
jl
and
cmp
xor
dec
and
dec
sub
data16
ret
mov
jo
or
stos
mov
insb
jecxz
jns
adcb
xchg
xor
xchg
dec
rcl
out
xchg
hlt
mov
addl
fidivrs
imul
xor
int3
punpckldq
lock
mov
lret
ficompl
rolb
cli
pop
and
jno
lcall
mov
data16
rcrb
add
sub
or
push
or
xchg
pop
ljmp
pop
sub
aad
mov
or
mov
arpl
xchg
std
push
mov
in
push
sbb
rorl
mov
jmp
or
mov
jno
mov
dec
clc
jno
in
sub
inc
adc
shrb
mov
fs
sbb
les
jbe
mov
in
push
loope
addl
or
inc
stos
jecxz
sub
sub
je
mov
push
adc
loope
inc
mov
mov
roll
rolb
and
adc
test
xor
xchg
jmp
mov
add
ret
hlt
jg
data16
lret
adc
fsubs
cmp
xor
sbb
rcr
movsb
repnz
dec
mov
mov
scas
movsl
sbb
pushf
adc
jmp
jns
mov
dec
mov
stc
jae
xor
ljmp
ja
arpl
xchg
pop
icebp
pop
push
jcxz
pop
addr16
cmp
push
icebp
test
stos
pop
cmpsl
pop
cmp
inc
lea
sbb
fistpl
in
inc
cltd
push
sub
ret
and
dec
js
icebp
dec
gs
clc
push
ja
cmp
mov
cmpsb
mov
dec
push
ja
sbb
gs
dec
das
scas
xchg
push
icebp
cmp
lods
jb
add
adcl
popf
mov
subb
add
aaa
call
push
aas
ljmp
inc
ficoms
or
sub
add
sti
mov
adc
test
into
and
push
addr16
dec
hlt
imull
cld
ja
jo
jp
mov
xor
sbb
inc
mulb
ss
xor
jmp
mov
or
add
xor
into
subl
mov
and
inc
in
aam
outsb
iret
repz
add
cmp
push
lcall
and
fs
xor
fsubrp
push
sub
jle
dec
push
cmp
js
add
into
movsb
mov
andl
mov
in
inc
fimuls
add
es
fcomip
bound
sahf
outsb
daa
xchg
xor
sub
aaa
icebp
xor
jno
inc
int
adc
push
call
pop
shr
dec
sbb
imul
mov
out
mov
xorb
mov
loopne
xlat
out
adc
xchg
sub
andl
mov
sbb
or
cmp
out
cmpsl
inc
sub
std
movsl
stos
push
add
xor
push
roll
sub
dec
addr16
xlat
in
mov
repnz
push
jmp
fnstenv
jae
insl
dec
inc
ja
mov
pop
in
in
inc
xchg
fimuls
jecxz
out
js
mov
stc
or
xchg
pop
sbb
mov
and
sub
mov
int3
movsb
out
fisubrl
push
lock
scas
ljmp
roll
nopl
ss
sti
mov
ss
dec
push
xor
jmp
xor
xor
push
sbb
mov
repz
pushf
sbb
test
in
cli
aam
loope
add
cmp
cwtl
push
iret
test
lahf
out
loopne,pt
pop
idivb
xor
imul
jne
insb
cmp
arpl
add
push
je
or
xlat
xchg
xor
stc
aad
mov
je
ss
mov
add
sbb
inc
lahf
or
addr16
sbbl
sbb
mov
aad
loop
pop
and
sub
pop
out
repnz
std
sidtl
enter
cwtl
sar
hlt
addr16
sbb
mov
jno
out
xor
pop
cltd
push
insb
popf
push
pop
sub
ja
leave
mov
push
pop
cmpl
icebp
sahf
mov
aas
pop
jle
jmp
clc
lock
fsubr
bound
sub
addl
sub
out
dec
cmc
mov
dec
dec
inc
mov
cmp
jp
int3
jp
push
sti
jmp
mov
sbb
hlt
and
es
mov
push
mov
movsl
jnp
and
aam
lods
pop
mov
fninit
push
test
fnstsw
ss
adcl
or
mov
or
push
icebp
sbbb
adc
xchg
mov
jae
leave
pusha
orl
lret
mov
icebp
and
fsubl
jp
repnz
fwait
mov
jge
xor
lods
add
cmp
lea
mov
pop
jns
inc
ret
into
lahf
mov
pop
idiv
or
cmp
das
cmp
lret
in
mov
in
js
cmp
popa
cld
subl
aaa
popf
mov
cmp
inc
movsl
icebp
out
push
add
jmp
inc
or
pop
xor
stos
cld
ret
lcallw
rcl
xchg
aas
loop
sti
mov
sub
mov
xchg
mov
cld
mov
mov
call
shll
xchg
push
push
xorb
mov
pop
loop
rorb
ret
sub
pop
stc
and
inc
mov
jbe
and
stc
inc
dec
xchg
mov
divl
stc
push
bound
fadd
cmp
lea
stc
sarb
adc
or
cmpl
out
addb
push
int3
loop
js
out
xor
bnd
sub
dec
push
mov
addb
jp
push
insl
mov
ret
dec
fisubl
inc
mov
xlat
mov
jns
sbb
xchg
push
ds
push
movsl
pop
pop
or
sti
jge
cmpsb
pop
daa
cli
add
mov
sub
lahf
roll
sbb
jp
push
lods
push
jmp
sbb
lahf
mov
enter
adc
xlat
lahf
and
lret
jecxz
rcrb
push
shlb
xchg
mov
adc
push
cli
sbb
fnstenv
mov
jge
push
push
shrl
das
sbb
out
xchg
xchg
bound
jne
pop
aaa
sbb
das
mov
mov
push
or
cmp
jp
sub
dec
cmp
les
sahf
lds
mov
sbb
mov
imul
pop
sbb
int3
fnstcw
push
cmp
filds
pusha
mov
test
jmp
cmp
push
jmp
in
xchg
inc
push
pushf
js
lods
cmp
roll
mov
fsubl
or
testl
sarl
jno
iret
mov
dec
xchg
xor
pushf
jae
pop
mov
int3
sub
call
xor
mov
out
aad
mov
scas
aad
push
idiv
or
xchg
enter
repz
insb
add
jp
cmp
mov
or
inc
cltd
nop
lret
xor
gs
stos
adc
pop
out
cmp
stos
adc
test
test
mov
icebp
mov
jns
pop
jge
adc
mov
xlat
xor
and
dec
dec
inc
std
daa
outsl
aas
sub
push
push
mov
cmp
arpl
ror
push
dec
push
aas
loop
inc
fsubrp
inc
inc
xlat
cmc
dec
mov
insb
sub
jle
sbb
inc
pop
ss
ffreep
mov
inc
mov
jb
cmc
xchg
sti
sbb
cld
jp
test
mov
imul
shrl
mov
and
xchg
in
stos
mov
jge
lret
cmp
jecxz
cs
test
push
int
jmp
movsl
dec
pop
pop
push
sub
pop
pop
clc
icebp
mov
leave
fwait
sti
pop
dec
mov
and
enter
cs
je
sub
dec
lods
xchg
sbbb
imulb
stc
in
gs
pop
dec
arpl
cmp
xchg
icebp
sub
jl
scas
sub
sub
outsl
test
mov
xor
push
add
mov
mov
arpl
push
pop
pop
dec
adc
cmp
loopne
jb
cmp
int
mov
rcrb
jb
sbb
insl
jg
pusha
dec
out
outsb
cmp
test
repz
xchg
inc
inc
scas
sarb
ror
mov
cmp
or
pop
das
mov
or
dec
loopne
test
push
jmp
cmpsl
push
push
addb
mov
xlat
in
or
dec
fistpll
subl
mov
push
into
enter
add
add
xor
and
and
and
mov
das
rcl
cltd
lahf
jp
and
xchg
fwait
data16
mov
pop
mov
inc
cld
mov
popf
insb
test
into
imul
test
pushf
rorb
fdivrp
jnp
lahf
lods
fst
mov
mov
pop
mov
les
xlat
pop
pop
out
sarl
pusha
add
jae
or
and
pop
cmpsb
mov
out
mov
jecxz
mov
pushf
mov
andl
push
inc
fptan
mov
or
mov
gs
push
dec
paddsw
mov
lahf
push
sbb
daa
adc
sarl
loope
xchg
push
cmp
jae
dec
mov
sbb
xchg
or
sub
dec
cmc
cmp
mov
nop
jo
pop
bswap
xchg
shrl
mov
sbb
iret
in
sub
cltd
jg
insb
adc
jae
mov
push
and
cwtl
in
idivl
inc
jg
lea
in
ja
inc
shlb
ficomps
mov
movq
jbe
push
in
imul
idivb
mov
aas
xor
incl
push
loop
dec
lcall
fbstp
jbe
arpl
into
cmp
pop
outsb
push
dec
fwait
roll
and
inc
push
xor
xchg
push
inc
ss
shrl
dec
sbb
mov
lcall
jle
mov
shll
fwait
add
dec
xor
push
pop
cld
lcall
lcall
mov
pushf
int3
push
aas
imul
ljmp
add
inc
data16
push
xchg
inc
sbb
and
clc
dec
rcr
mov
popa
mov
iret
cmpsl
add
push
mov
push
shrb
push
mov
jno
shll
iret
push
je
mov
mov
pop
insl
inc
popa
push
leave
jo
add
test
xchg
xchg
or
jp
sahf
or
sbb
adc
ss
mov
fdivrs
inc
sahf
scas
sahf
jne
fcmovnu
push
dec
add
push
scas
adc
ja
fnstenv
sti
mov
inc
or
adc
inc
mov
xlat
outsb
mov
push
ret
jle
add
fldl
mov
mov
sti
mov
aaa
daa
mov
icebp
xchg
jno
rclb
in
rcl
sbb
xchg
loop
jg
pushf
mov
cli
push
mov
fadd
bound
dec
aas
adc
addb
pop
cmp
in
fsubrs
sub
xlat
repnz
pusha
gs
cmp
mov
scas
shlb
pop
xlat
js
popa
outsl
jge
daa
mov
adc
ret
js
mov
aaa
enter
outsl
fwait
xchg
dec
pop
lds
outsb
add
out
mov
add
sub
cmp
call
xchg
jno
iret
data16
cmp
sub
sub
pop
hlt
cltd
xchg
pop
mov
jle
hlt
mov
push
pop
ds
push
cld
inc
push
pusha
out
xchg
push
inc
sbb
mov
cmp
test
push
pusha
xor
sbb
xchg
std
in
ss
xchg
dec
lahf
mov
stos
mov
pop
es
rcrb
sbbl
inc
mov
pop
or
mov
lret
xor
es
mov
iret
gs
push
dec
jae
movsb
sub
popa
cld
or
sub
cmc
adc
mov
pushf
dec
test
into
gs
and
loop
xor
data16
sub
cmovp
inc
test
lret
or
cli
out
lret
in
test
stos
js
and
cltd
div
dec
xchg
imul
data16
pop
pop
popf
jo
fnstcw
ret
push
das
testl
mov
push
add
aas
pop
mov
std
cld
inc
or
pop
test
sbb
push
pop
arpl
and
mov
cmpsb
pop
adc
pop
cmp
data16
in
sub
das
inc
adc
es
sbb
inc
dec
lahf
cli
insl
fcomps
adc
jecxz
cmp
fisubrs
into
inc
aas
ja
cmovb
mov
jle
std
cmp
popa
lods
pusha
fidivl
mov
test
ds
stos
xor
xlat
xchg
int3
inc
inc
cmp
pop
cmp
outsl
pop
and
jo
add
sbb
mov
xchg
add
xchg
adc
call
add
cmpsb
hlt
into
aad
mov
in
mov
adcl
or
hlt
test
mov
mov
mov
mov
in
xchg
or
stc
fstp
xor
jmp
mov
push
addr16
sbb
jne
push
add
and
push
mov
xor
mov
mov
jg
cmp
adc
fnstenv
fs
and
xor
mov
xor
sub
dec
jo
mov
pop
or
jecxz
xchg
pop
leave
push
adc
out
pop
data16
aam
in
pop
lods
gs
fnsave
lea
push
shll
movl
mov
adc
pop
pushf
aaa
xor
push
jmp
or
mov
add
shrb
out
push
sub
fsubl
mov
test
rorl
fmuls
mov
dec
rol
in
xor
lahf
aas
jge
aad
push
inc
sbb
pop
mov
ja
inc
jl
sbb
outsb
jmp
xchg
add
pmaddwd
ja
mov
daa
ljmp
push
mov
mov
and
imul
js
sbb
add
mov
adc
pusha
stos
aas
jg
sahf
enter
fstps
add
jae
sub
test
add
jmp
lret
outsl
sub
mov
xchg
mov
hlt
mov
cmp
cmp
inc
pusha
sbb
es
pop
adc
cltd
xor
pop
mov
enter
mov
adc
xchg
out
jnp
pop
out
ds
loop
add
mov
add
stos
hlt
call
sub
lahf
mov
push
ljmp
mov
jecxz
lods
dec
mov
shrb
hlt
outsl
jnp
test
rcr
mov
sbb
divb
loop
mov
arpl
loop
jnp
aas
sub
aaa
xchg
loope
xor
cli
mov
sti
mov
pop
fistpl
xor
addr16
xchg
xchg
repz
sub
mov
jg
sarl
push
arpl
loope
nop
cltd
lds
jl
adc
add
inc
jb
mov
cmpsb
inc
test
frstor
aam
or
mov
adc
and
icebp
adc
fwait
aas
outsb
sarb
cmpsl
jge
dec
adc
jg
je
pop
pop
mov
pop
mov
fs
pop
mov
push
in
xor
insb
jne
sub
and
mov
psrld
add
mov
ljmp
push
adcb
test
or
inc
dec
mov
push
mov
pop
pop
sub
pop
or
outsl
jnp
sub
jge
push
leave
xchg
mov
repz
pop
in
adcl
xchg
adc
mov
imul
mov
imul
shlb
fwait
xchg
xor
xchg
mov
adc
adc
jge
mov
inc
mov
sub
and
sbbl
leave
mov
les
or
pop
mov
add
fisubl
mov
jl
aaa
mov
and
repnz
mov
mov
pop
and
iret
loopne
cmp
pusha
aaa
adc
mov
nop
insl
int3
jns
jnp
lea
adc
std
xor
leave
inc
add
icebp
push
popf
adc
inc
popa
lods
inc
and
lods
xchg
mov
inc
les
mov
adc
lret
jbe
dec
outsb
adc
and
pop
lods
inc
xchg
aas
in
out
mov
sbb
mov
aad
inc
jge
frstor
lods
mov
sbb
push
stos
out
into
jno
incb
cmpsb
je
sub
out
hlt
out
in
sbbl
cmp
pop
rorb
xor
clc
push
jno
jo
inc
imul
and
or
sbb
pusha
or
cmpsb
pop
rcll
pop
pop
mov
inc
jmp
mov
dec
fisubrl
clc
xor
aas
add
jnp
mov
cmpsb
sub
lahf
mov
cmp
out
or
cmp
dec
in
dec
pop
scas
jnp
insb
test
sbbl
test
mov
dec
dec
ficoms
rcrb
jae
daa
or
cs
inc
pushf
fwait
pop
pop
push
mov
loopne
jno
and
mov
test
ja
sub
push
xchg
clc
mov
hlt
mov
loop
sbb
push
insb
adc
jg
sbb
je
mov
push
fdivrs
mov
inc
pop
cmp
mov
dec
mov
xor
mov
mov
inc
lret
push
mov
sbb
outsl
aas
add
dec
ret
cmp
mov
dec
jg
fidivs
mov
mov
arpl
ret
or
daa
cmp
gs
xor
adc
daa
xchg
in
dec
test
ret
push
jmp
shll
cmp
out
cld
enter
cmp
sbb
iret
sbb
add
push
pop
ficomps
pop
and
cwtl
mov
pop
test
add
outsb
cmp
and
cmp
sub
push
adc
insl
mov
inc
cmp
adc
lcall
xor
mov
sbb
fnstsw
js
in
pushf
call
int
fidivl
mov
pop
ss
or
ljmp
xchg
jb
pop
shlb
xor
inc
mov
pop
cmp
inc
dec
insb
dec
cmp
stc
lods
jl
aas
int
popa
cmp
fsubrs
stc
lahf
jb
scas
jg
jne
stc
fisubl
pop
push
movsl
dec
sub
sbb
aam
and
outsl
fists
mov
lcall
pushf
daa
sbb
dec
mov
mov
mov
sbb
lea
add
iret
sub
dec
push
dec
icebp
movsl
push
push
xchg
cmp
or
xchg
xor
jmp
pusha
daa
or
dec
jb
jp
imul
jno
fidivl
std
nop
loop
or
inc
add
decb
sub
std
pop
and
mov
out
xchg
mov
mov
jae
scas
sbb
les
insb
and
inc
in
imul
inc
cmp
and
and
or
sar
mov
xchg
inc
div
mov
add
add
pop
push
and
scas
jp
sarb
mov
mov
hlt
inc
daa
or
repnz
into
gs
push
dec
iret
dec
and
stos
xor
push
out
sbb
cmp
jge
out
lea
sar
fsubrs
mov
xor
sub
pop
mov
jmp
cmpsl
ds
movsb
lods
mov
inc
jns
sti
adc
in
adc
subb
ret
pop
sbb
push
data16
mov
xchg
xchg
enter
mov
sbb
pop
or
hlt
mov
add
mov
pop
xchg
in
jg
mov
pop
cld
xchg
pop
xchg
mov
pop
notb
dec
loopne
sbbl
addr16
loop
test
mov
jno
stos
sub
mov
out
popf
fsubr
pop
sahf
sbb
and
xor
pop
iret
scas
add
push
jno
ja
inc
fidivs
loopne
cmp
fimuls
mov
mov
or
shr
jae
mov
xchg
dec
mov
dec
mov
add
xor
pop
mov
pushf
dec
out
xor
ljmp
or
addb
leave
jae
dec
pop
mov
je
aam
arpl
xor
daa
or
movsl
gs
xor
push
lock
or
mov
pop
arpl
or
fisubl
xchg
jge
jo
mov
cli
mov
pop
fsubrl
cmp
clc
or
lods
test
mov
int
fsubrp
fdivrs
dec
xchg
mov
or
xor
xchg
addr16
shll
inc
jb
jp
jno
add
xchg
jle
out
scas
nop
inc
cmc
or
pop
cmp
mov
dec
loope
test
push
xlat
in
ljmp
fcompl
int
in
dec
scas
cmpsb
mov
test
lret
aas
dec
lret
lds
or
push
xchg
lock
loop
cmp
add
jmp
cmpsl
cwtl
add
cs
or
mov
and
mov
mov
ficomps
push
xor
and
dec
mov
shl
outsb
daa
repz
into
jg
sub
pop
fwait
aad
adc
or
push
bound
xor
sbb
icebp
adc
mov
add
add
mov
shr
mov
stos
inc
xor
mov
dec
pushf
mov
add
bound
out
sbb
cmpsl
insl
cmp
or
out
and
push
mov
dec
pop
mov
arpl
repz
or
pop
push
ja
xor
loop
push
inc
into
andl
mov
sbb
mov
or
mov
pushf
ficoml
subb
adc
adc
xor
movsb
pop
roll
aad
loop
ret
pop
dec
push
inc
mov
out
daa
dec
mov
shlb
aaa
ja
mov
fstl
xchg
sbbb
imul
adc
outsl
jnp
xor
jb
addr16
js
daa
adc
or
xchg
xor
pop
jl
pop
pop
jmp
sbb
pop
insl
cmp
xor
or
jae
jae
aad
dec
cmpsb
adcl
push
adc
sub
xor
aaa
fcoms
stos
cmp
ret
mov
aam
fdivs
fs
dec
xor
xchg
outsb
sbbl
call
jmp
ret
xor
clc
push
jp
jecxz
cmp
sub
test
mov
mov
jl
and
or
cmp
jg
inc
cmp
mov
xchg
mov
in
adc
mov
push
pop
mov
enter
jae
mov
loop
add
pop
das
adc
inc
int
ss
leave
subb
inc
arpl
fwait
pop
in
add
add
imul
inc
insl
inc
lods
int3
xchg
loopne
add
aaa
push
scas
lcall
sbb
ljmp
scas
jns
daa
jl
je
and
xor
push
fwait
lea
xor
and
add
inc
push
push
mov
lret
repz
sbb
imul
dec
sub
movsl
out
cmpsl
jp
adc
in
mov
xchg
inc
sti
js
mov
lods
jle
sub
pushf
cmp
mov
adc
dec
pop
sbb
or
pop
mov
lods
pop
jp
stos
or
std
pop
lcall
dec
dec
lcall
and
xchg
inc
ret
cmc
sub
push
jbe
sub
sub
push
ss
leave
popl
ss
pop
adc
adc
fs
aas
outsb
pusha
popa
ljmp
mov
and
popf
stc
sbb
sub
aad
nop
fidivs
xchg
jl
lods
pop
cmpsl
loop
ja
nop
test
and
frstor
pop
cmp
in
jo
cmp
push
add
add
repnz
xor
sbb
arpl
jge
xchg
shrl
pop
dec
jmp
mov
xlat
repz
movsb
loop
sub
shlb
cmpsb
lock
xchg
sbbl
insb
sbb
and
js
lcall
cs
int
jnp
movsb
dec
cmp
das
cwtl
add
push
inc
mov
in
enter
or
mov
and
movsb
mov
addr16
sbb
in
inc
in
mov
xor
dec
test
lock
lods
lock
cld
add
jns
add
or
mov
movb
ss
sbb
orl
lahf
out
dec
cwtl
gs
pop
or
sbb
mov
push
divl
push
in
jg
jmp
cld
jecxz
mov
push
mov
pop
or
xchg
jnp
stc
push
mov
pop
das
cmpb
repnz
das
aas
out
fiaddl
loope
scas
cmp
lret
lods
mov
jne
push
xor
pop
sub
leave
xchg
pop
dec
in
in
jbe
jg
movsl
in
mov
dec
fbstp
fldenv
sub
iret
push
ljmp
outsl
inc
dec
xorl
inc
adc
inc
jl
dec
mov
jo
dec
dec
cmc
into
xor
mov
out
inc
out
inc
divps
aas
pop
lahf
push
aad
sbb
xchg
mov
shrb
and
push
jl
xor
jmp
cmpsb
out
in
push
mov
rcll
pop
lea
div
les
aam
sbb
mov
jmp
ss
leave
pop
xchg
aaa
fs
push
adc
push
pop
xchg
test
push
iret
prefetch
or
negb
cmp
inc
outsb
push
pop
jo
mov
popa
negl
in
andb
xlat
mov
cmp
push
hlt
sub
xchg
push
pop
jle
sub
pop
cmp
dec
arpl
cmc
and
mov
ret
outsb
sbb
jb
rol
cmpsl
and
cmpl
call
mov
scas
adc
pop
out
adc
xchg
ja
dec
cmp
pop
addr16
out
ret
lret
sub
ljmpw
xchg
pop
xchg
jns
pop
mov
xchg
stos
sbb
dec
in
leave
sbb
mov
cltd
xchg
dec
movq
inc
insb
into
fsubl
test
sbb
pop
cwtl
stos
mov
loopw
mov
stos
jb
jp
dec
adc
lock
repz
xor
mov
or
insb
js
jmp
fbld
loopne
in
jg
pop
mov
fucom
mov
clc
adc
in
daa
lahf
loope
mov
or
dec
and
shrb
movsb
je
cwtl
mov
mov
add
out
jae
gs
in
inc
scas
leave
fwait
push
ficompl
jne
or
call
mov
mov
cmpsb
mov
jnp
jbe
sbb
stos
movsl
in
dec
iret
jecxz
es
inc
int3
sub
add
lock
mov
pusha
mov
jecxz
mov
outsb
imul
pop
xor
mov
mov
jecxz
mov
das
in
cld
inc
jne
push
test
cmp
inc
pop
fsin
loop
mov
cmp
test
inc
fisttpll
fwait
loope
aaa
movsb
pop
in
ja
and
loop
lea
ja
iret
lods
ljmp
popf
cmp
in
out
icebp
out
xlat
xchg
xor
ret
inc
enter
sub
ljmp
mov
adc
push
int
or
cmp
sub
outsb
loop
imul
cmp
dec
cmp
dec
add
mov
adcb
enter
pop
cmp
in
mov
ror
cwtl
mov
je
jae
sub
daa
mov
lret
adc
dec
cmp
out
sbb
adc
cs
or
dec
stc
lea
mov
inc
movsl
addr16
mov
xchg
mov
test
sbb
pop
outsb
push
pop
push
outsl
mov
mov
imul
mov
insb
adc
add
fldcw
sub
mov
cmp
mov
pop
aad
shlb
int
shld
jno
je
lret
and
fsubl
mov
adcb
push
pop
xchg
adc
inc
repz
leave
out
popw
mov
and
sti
into
out
data16
rorl
insb
ret
call
dec
sbbb
push
push
je
pushl
clc
xchg
scas
sub
sbb
push
call
or
mov
push
ret
outsb
js
dec
mov
scas
hlt
cmp
cmpsl
adc
mov
and
rcrb
imul
push
sbb
sub
aas
mov
neg
push
int3
out
jb
pop
and
mov
clc
in
jae
and
mov
call
int3
shrb
icebp
and
mov
or
push
mov
decb
fistpl
jp
jno
lods
sub
pop
adc
xor
push
ds
fsts
popf
and
into
scas
xchg
lret
ficompl
shlb
in
pop
dec
or
or
mov
mov
shlb
cmpsb
mov
test
out
in
stos
es
add
pop
shl
notl
dec
xchg
sub
or
and
out
mov
jnp
and
pusha
push
scas
fwait
divl
push
out
mov
mov
aad
into
gs
and
out
adc
in
mov
mov
dec
and
lret
out
test
jp
or
imul
in
imul
mov
xchg
or
lea
push
leave
push
fdivl
push
xlat
jae
into
enter
jbe
xchg
inc
push
or
stos
mov
push
jae
inc
cmc
clflush
adc
add
pop
mov
mull
jmp
xor
push
push
movsb
aaa
pop
dec
out
adc
adc
mov
jg
cmpl
mov
jmp
lret
push
mov
jno
jbe
stos
lods
xlat
pop
pop
sbb
inc
sub
data16
wrmsr
push
dec
jecxz
mov
mov
pop
imul
jle
imul
sbb
test
cmp
push
ljmp
dec
pop
and
insb
cmp
adc
das
push
in
mov
pop
lcall
push
out
lret
clc
popf
jmp
std
in
outsl
or
xor
jb
and
ret
jge
sbb
push
mov
cmp
fcomps
es
repnz
add
push
adc
pusha
cld
jo
ljmp
cmc
push
mov
fucomi
dec
test
repnz
ja
adc
mov
mov
and
mov
xchg
or
popf
cmc
push
rcr
pop
imul
popf
jle
cmp
mov
dec
sarl
mov
insl
add
jb
dec
clc
xor
cmp
aas
js
mov
dec
sub
insl
add
lds
cwtl
sbb
in
adc
stc
test
icebp
cmp
cmp
int
pop
pop
dec
stos
dec
loop
insl
mov
subb
push
mov
iret
ljmp
shrb
decb
adc
das
add
xchg
push
jl
push
mov
cmpsb
cli
and
jae
loopne
test
pop
cmpsl
rorl
test
adc
mov
lea
jo
jmp
not
test
jns
js
and
fists
pushf
ljmp
mov
js
push
mov
jno
or
mov
xchg
lcall
pop
shl
push
lret
add
push
mov
sar
jo
lret
push
xor
cmpb
cmc
movsb
mov
mov
jp
cmc
sbb
jmp
lock
pop
cmp
das
dec
iret
xchg
icebp
icebp
jle
lahf
pop
pop
or
cmp
incl
mov
or
std
les
push
aam
into
dec
add
das
into
adc
imul
test
jecxz,pt
add
rcl
into
sbb
test
xchg
dec
je
repz
pop
mov
and
fcoml
outsb
ret
stos
test
testl
xchg
mov
xchg
ret
xor
jae
pop
inc
ds
jl
pop
xchg
cmp
jl
xor
and
test
xchg
int3
xor
cmp
clc
mov
xor
rcll
pop
mov
jnp
dec
mov
js
or
es
enter
cwtl
mov
push
pop
add
jae
insl
sub
shlb
add
jecxz
out
mov
int
fdivrl
jns
xchg
pop
inc
adc
sub
fpatan
mov
test
dec
mov
into
ds
rcr
loope
pop
add
mov
cmp
lea
jg
and
dec
pop
sbb
call
mov
xchg
andl
dec
jae
jmp
andl
test
js
cmp
xor
es
inc
pusha
ja
enter
sbb
std
int3
arpl
fldenv
mov
or
jge
popl
dec
in
sbb
inc
sahf
lock
mov
iret
push
sbb
ret
xchg
imul
sub
adc
cwtl
dec
cltd
pop
jp
int3
imul
xchg
jge
mov
and
push
cwtl
pushf
jno
fcmovne
cmp
call
adc
test
and
repz
mov
sar
cmpsb
test
test
clc
call
fmuls
mov
cmp
sub
loop
xor
out
out
cmpsl
push
push
inc
pop
xchg
or
lods
and
pop
mov
pop
out
mov
lahf
addl
and
pop
push
addr16
push
mov
xchg
and
jmp
test
mov
scas
shl
sub
or
inc
fs
ficoms
cmp
cmp
sub
fwait
mov
xchg
push
call
cmp
cmp
loopne
fwait
lahf
adcb
sub
daa
rolb
scas
out
repz
inc
and
nop
dec
xor
nop
js
sbb
ss
mov
push
push
and
sti
cmp
cltd
jb
lret
fwait
mov
pop
popa
repnz
ret
pop
xchg
sbbl
or
dec
rcll
or
inc
hlt
insl
add
imul
mov
into
pop
add
mov
add
push
movsl
repnz
sub
jg
adc
js
repnz
jbe
icebp
sbbl
pop
outsb
mov
sub
das
inc
jbe
xchg
jl
out
loop
outsl
daa
icebp
cmp
xor
push
sub
mov
cmpsb
mov
inc
lret
jo
sbb
inc
sbb
or
dec
out
sub
insl
cmp
jmp
inc
fucomi
sub
es
jnp
dec
xchg
scas
pop
or
test
lret
and
and
cmc
mov
fisubl
pop
imul
mov
movsl
mov
fnstenv
incl
movsb
hlt
shlb
mov
and
push
lahf
ss
lahf
inc
cmpsb
in
cmp
mov
mov
push
pushf
dec
inc
sub
xchg
dec
fidivl
arpl
cmpsl
je
imul
hlt
mov
mov
stos
push
enter
lret
sub
inc
into
sbb
xchg
pop
or
stos
repz
adc
dec
insl
fs
sbb
xchg
shrl
repnz
out
dec
sbb
mov
pop
clc
dec
ljmp
adc
mov
test
daa
pop
icebp
notl
mov
fsubrs
dec
lret
fisubrs
into
mov
cld
sbb
sbbl
cwtl
fisttpl
mov
fs
icebp
push
mov
push
jae
imul
sbb
sbb
push
out
and
add
push
fdivp
fiaddl
adc
pop
mov
shr
jecxz
lret
call
int
mov
jle
jp
scas
push
ret
dec
cmp
cmp
std
or
and
or
mov
mov
mov
cmp
mov
dec
int3
jg
mov
sub
mov
add
push
nop
jbe
mov
adc
daa
outsb
adc
aaa
sarb
insb
sbb
loope
dec
push
out
mov
jle
movsl
add
and
aad
into
jle
inc
nop
sbb
mov
adc
cmpsl
pop
arpl
xchg
movsl
cmp
or
icebp
movsl
aam
sbb
adc
xchg
xchg
pop
xchg
jmp
add
cmp
int
xchg
push
fwait
movsl
mov
push
arpl
add
sub
and
fiadds
pusha
pop
and
cmpsw
lret
inc
adc
or
xlat
sahf
aad
ljmp
cmp
jmp
mov
push
mov
push
popf
pop
popa
mov
lret
mov
adc
cmpsb
insb
xor
fs
sub
sbb
lahf
test
sub
aas
mov
pusha
mov
jno
pop
iret
shlb
daa
cmp
iret
jno
nop
and
pop
imul
cmp
pop
and
out
pop
rcrb
mov
cltd
or
ffreep
das
dec
or
scas
pop
iret
cld
or
outsl
cmp
xchg
lcall
pop
stc
outsb
adc
xor
rcl
mov
in
scas
mov
fld
sti
repnz
lds
lahf
testl
or
inc
imul
lds
push
cltd
push
mov
and
rcrl
cs
stos
mov
inc
mov
jb
push
add
dec
sub
sbb
cs
stos
cs
je
aas
lcall
das
pop
sub
outsl
data16
jno
repnz
mov
out
out
mov
insl
das
aaa
mov
jp
mov
jecxz
mov
addb
jp
cmpsb
or
inc
mov
stos
data16
rolb
xchg
push
xchg
sub
mov
or
out
rol
sbb
loop
mov
pop
mov
cmpsl
push
bswap
frstor
xchg
subl
scas
gs
sbb
pusha
inc
jo
insb
add
pusha
rorb
jle
ljmp
inc
pop
inc
lds
lods
sub
insl
testb
xchg
addr16
adc
push
icebp
fistpl
pop
jo
cmp
fwait
hlt
fst
pop
adc
jns
cld
xchg
xor
outsb
mov
hlt
dec
jbe
jecxz
leave
frstpm(287
stos
and
adc
es
imul
add
jle
or
adc
adc
popf
cli
loop
lods
repz
sub
cli
push
js
or
xchg
push
dec
inc
iret
aas
loopne
test
loope
fsubp
out
fistps
fisttpl
es
jo
cmp
shlb
jno
mov
push
adc
out
rcrb
jnp
inc
push
fsubr
orl
push
cmpsb
push
lcall
ss
dec
push
andb
outsb
jo
sbb
sbb
imul
aas
pop
ret
in
lds
xor
ret
xchg
push
and
inc
inc
add
mov
int
adc
popl
lahf
or
add
add
das
shrb
mov
pop
mov
xorb
dec
dec
clc
outsb
sbb
imul
subl
xchg
test
test
inc
xor
stos
or
jge
imul
ret
repnz
or
insb
mov
out
or
and
add
cmpsb
imul
mov
call
repnz
pop
xchg
daa
push
icebp
test
js
inc
lds
clc
or
imul
out
mov
xchg
mov
push
push
call
test
mov
es
popf
lods
xlat
dec
repz
pop
into
sbb
pop
jns
mov
jne
call
or
xchg
cmp
xor
sahf
mov
in
jg
lcall
inc
push
repz
dec
arpl
mov
testl
pop
cmp
and
ss
out
add
inc
mov
fxch
sbb
pop
in
out
aad
movsl
cmp
and
scas
ja
lcall
push
mov
into
mov
je
aas
pop
jb
ja
sub
cmp
push
jbe
cmpsb
outsl
push
out
pop
xchg
insb
andb
and
cmp
loop
aas
mov
icebp
and
pop
push
fnstenv
add
adc
fisttpl
pop
scas
shlb
xchg
orl
std
in
sbb
dec
add
imul
or
push
add
dec
xlat
xchg
pop
ljmp
push
dec
mov
dec
add
jnp
mov
push
fdivl
jg
jbe
pop
test
out
add
and
sbb
stos
sbb
test
mov
sub
pop
sahf
push
outsb
in
xchg
jns
mov
mov
fmuls
sbb
push
stos
and
arpl
pop
data16
mov
imul
stc
std
adc
data16
cwtl
dec
cmp
cli
jg
jb
cmp
dec
out
pop
nop
sub
cmp
dec
subb
jb
or
ja
shlb
add
loopne
jae
movsb
out
jl
rol
mov
fwait
mov
insb
ficoms
inc
fdivl
xlat
arpl
pushf
xchg
or
xchg
pushf
sub
aam
stos
lock
jae
sbb
xor
xchg
sahf
and
incl
lds
popa
push
loope
jno
and
cld
pop
lock
push
cld
push
xor
cmp
inc
fisubl
pop
inc
ret
dec
mov
jb
sahf
daa
and
ret
inc
jno
fucom
subl
sub
enter
pop
jmp
fidivrl
or
loop
and
sbbb
cmp
pop
ret
pop
and
cmp
sbb
ret
ret
daa
ljmp
push
inc
mov
negb
pop
insb
xor
sbb
cmpsl
icebp
cmp
and
pop
das
xor
mul
dec
scas
pop
or
xchg
pop
insb
lods
outsl
insl
sub
push
and
aaa
aas
ret
or
sahf
iret
loop
int
arpl
vcvtps2pd
cltd
test
inc
adc
cmp
push
push
leave
xchg
jecxz
jp
cltd
stos
outsl
dec
stos
xchg
stos
insb
jbe
lds
dec
mov
in
dec
dec
adc
push
jecxz
divb
cmp
xor
fs
mov
cwtl
fnstcw
or
mov
pop
xorl
sti
ja
ljmp
jmp
ljmp
jno
in
stos
xchg
popa
mov
idiv
push
mov
cmpsl
roll
cmp
das
test
pop
pop
arpl
pop
mov
in
sahf
jecxz
test
roll
fistps
or
pop
mov
jae
leave
in
xor
arpl
mov
pop
aaa
out
test
mov
faddl
and
mov
pusha
pop
and
sti
push
cmp
ljmp
mov
aad
mov
jbe
movsl
jnp
loope
mov
and
push
push
dec
hlt
lret
test
imul
ret
js
std
and
sub
pushf
gs
fwait
and
cli
mov
out
jmp
outsb
shrl
dec
sub
adc
in
int3
pop
lods
push
cmp
cmp
add
inc
dec
jno
out
jo
shll
leave
mov
jb
aaa
mov
test
inc
test
xor
inc
cmpsb
outsl
hlt
test
iret
push
sbb
ljmp
lcall
xor
add
rcr
das
add
xchg
popa
les
xchg
pusha
ror
push
imul
xchg
dec
rdtsc
arpl
js
imul
movsb
and
or
inc
into
add
loop
out
lea
and
testl
or
and
loope
inc
shll
inc
sub
add
int3
cmp
es
add
lret
test
push
jmp
dec
in
nop
lock
inc
arpl
inc
xlat
push
cmc
outsl
inc
mov
dec
rcr
push
or
leave
cmp
inc
sbbl
out
in
and
adc
xlat
pop
outsb
addb
sub
push
and
jbe
std
fdivrl
dec
int3
repz
int3
pushf
movsl
xor
push
insb
add
xorl
aam
mov
lret
mov
js
push
dec
add
add
cs
pop
out
aam
loope
mov
sub
sbb
mov
dec
cwtl
mov
addr16
mov
push
test
mov
xchg
in
mov
popa
lods
sbb
sbb
mov
imul
cmp
loop
push
std
aad
xchg
sub
push
pop
and
ret
call
mov
mov
pop
push
inc
into
pop
cld
arpl
mov
fistpl
nop
pop
mov
iret
stc
add
sahf
add
xchg
in
add
push
loop
push
or
sbb
rcrb
push
pop
cmp
jo
pop
in
jae
pop
pop
fdivrs
or
in
pop
leave
pop
popf
arpl
inc
dec
mov
adc
in
cmp
in
add
nop
daa
sub
out
xchg
js
pusha
sub
sti
ret
ret
int3
mov
js
lds
push
es
push
fstpt
xchg
in
fisubs
cld
or
cld
xchg
ror
in
insl
dec
jmp
pop
pop
xchg
xchg
shll
pushl
mov
xchg
mov
add
jb
sbb
fiaddl
inc
ja
in
and
fwait
test
xor
xor
outsl
pop
jecxz
aam
and
lret
push
dec
add
add
jl
enter
arpl
iret
repnz
aas
mov
in
popa
flds
xchg
dec
and
loop
adc
cld
jge
push
lcall
imul
mov
xor
or
hlt
push
test
xchg
mov
loopne
dec
adc
in
pop
push
movsb
mov
cmp
push
loope
push
cmpsb
pop
scas
mov
fldenv
pop
pusha
mov
fdiv
push
inc
ds
je
jbe
xor
or
xchg
shll
dec
loopne
push
lcall
pop
mov
into
test
xor
cmp
xorl
fnstsw
test
lods
out
popf
inc
xchg
stos
loopne
adcl
xor
mov
push
inc
data16
pop
js
cmp
repnz
stos
cmp
test
nop
jns
xorb
imul
and
pop
or
shll
cmpsl
jb
dec
shr
mov
mov
lcallw
mov
icebp
mov
jo
adc
rcll
push
cmpl
pushf
popf
mov
ficoms
sub
jge
adc
xchg
cmp
repnz
inc
sub
mov
mov
cwtl
imul
incl
jbe
push
int3
xor
jo
xchg
test
jmp
ret
stos
mov
mov
jecxz
pop
sbb
bound
sarb
and
xchg
lret
or
lds
sub
xor
sbb
shl
aaa
in
mov
jo
push
inc
fxch
fs
inc
jno
fucom
ds
out
fs
and
xchg
push
dec
pop
loope
and
daa
cmpsl
je
dec
inc
gs
jae
sbb
sbb
cmp
sub
dec
push
lods
lea
jne
mov
lcall
std
or
enter
sub
inc
xor
xchg
je
ss
xor
mov
push
stos
dec
mov
push
xchg
fs
mov
jae
enter
insb
pop
fwait
mov
bound
xchg
sbb
push
roll
cmp
sbb
pop
mov
jl
sahf
aas
mov
ja
lcall
jns
push
in
jecxz
inc
leave
lods
lds
mov
imul
push
mov
push
xor
pop
sub
inc
punpckldq
push
mov
mov
insb
jmp
aaa
sbb
or
ds
loope
fnstenv
loopne
movsb
aad
mov
xlat
cmpsb
arpl
pop
out
cmpsb
ret
clc
push
cmpsb
ret
in
loop
test
sub
into
jg
or
loop
or
mov
or
mov
jae
in
ja
xchg
loope
into
xchg
and
jl
sbb
mov
mov
in
cmp
sbb
mov
pop
adc
iret
test
pop
jl,pt
mov
pop
xchg
repnz
mov
int3
or
jmp
fistps
mov
push
mov
and
sub
jge
rcrl
inc
test
add
popf
xor
dec
or
lret
pop
push
iret
mov
push
sub
jns
add
mov
jp
pop
push
mov
hlt
imul
pop
jecxz
inc
mov
pop
fsubrl
cmp
cmp
jge
adcl
std
mov
lret
call
adc
cmc
adc
int3
mov
vmread
adc
jns
mov
sbb
sti
fsubrs
in
sub
stc
inc
jecxz
decl
sti
lahf
xlat
add
jge
dec
mov
and
ret
or
imulb
movsl
mov
sub
enter
or
sbb
test
push
xchg
jno
jp
jbe
jae
cmpsl
ja
pop
sbb
aas
outsb
xchg
and
push
mov
arpl
mov
cmpl
xchg
cmp
xchg
sub
jle
mov
mov
cs
enter
out
mov
fldt
jge
cld
xrelease
stos
repz
fists
das
incb
popf
push
pop
mov
loope
jp
outsb
cmp
lahf
jl
mov
mov
sarl
lret
push
stc
xchg
aam
cmc
sbb
cmp
mov
mov
lds
rol
call
ja
push
push
loope
stos
adc
jb
movsl
lret
inc
jg
jns
sub
das
das
fnstenv
pusha
aad
fstps
push
dec
sbb
xchg
mov
inc
dec
stc
xchg
dec
lods
ret
lods
sbb
dec
jmp
loopne
xor
add
dec
pop
mov
call
fwait
jb
dec
sti
mov
sub
jg
cmc
clc
xchg
xchg
movl
addb
in
insb
sahf
lret
mov
stos
enter
xchg
sub
fs
repz
or
mov
jle
aad
lds
and
inc
fnstcw
dec
fsubl
xlat
insl
shlb
js
xor
addr16
pushw
lea
loop
lock
inc
test
js
adc
clc
mov
ficomps
and
aaa
shl
stc
aaa
rcrb
cltd
cmpb
jmp
imul
or
xor
fmul
add
cwtl
imul
xchg
push
sub
sbb
mov
aad
push
or
mov
out
pop
shlb
pcmpeqw
inc
lret
cli
js
das
mov
mov
xchg
cld
sub
rorl
outsl
fiadds
pop
sub
pushf
xor
mov
sbb
adc
arpl
imul
mov
and
fldt
int3
aam
xor
jno
bndstx
xchg
push
in
lods
sub
call
mov
cs
mov
mov
fwait
jns
pop
stos
mov
out
fwait
xchg
inc
mov
ret
or
stos
or
test
repnz
popf
push
ret
imul
sarb
push
cmc
push
lods
imul
scas
mov
std
sub
dec
mov
loopne
push
sbb
and
cmpsl
jnp
insl
arpl
add
jno
mov
aad
xor
scas
imul
or
adc
cltd
pop
test
jl
and
sahf
popa
adcl
dec
adc
cmc
push
jne
jmp
pop
xchg
mov
inc
lock
cmpsl
dec
inc
outsl
xchg
imul
fsubrs
mov
lret
imul
adc
aaa
mov
adcb
cmpsb
mov
fcom
xchg
sbb
loope
out
leave
mov
dec
sub
dec
xchg
adc
sub
inc
fstps
sti
pop
aas
pop
mov
int
fnsave
mov
push
stos
mov
inc
xor
aaa
add
adc
pop
aas
imul
push
jl
pop
jo
jmp
xor
cmp
push
inc
hlt
dec
xor
repz
std
shrl
sbb
mov
inc
pop
aaa
arpl
jno
push
fisubrs
aad
ret
dec
movsl
pushf
cmpsl
imul
jnp
incl
popf
js
cwtl
loope
pushf
das
jns
daa
jno
test
rcrb
xor
test
pop
mov
sbb
cltd
shll
inc
inc
lods
test
lcall
mov
push
mov
or
mov
std
mov
push
inc
stos
test
jns
xor
in
cltd
pop
mov
cmp
rclb
call
lahf
cmp
ret
lcall
lahf
test
fs
movsl
call
sbbb
and
xor
loopne
jne
test
xchg
rcrl
or
cmp
ja
les
lret
fisubl
movsl
xor
popa
jbe
stos
push
ljmp
inc
inc
xor
or
sbb
xchg
xchg
cli
mov
sarl
push
jo
pop
out
aas
outsb
pop
jp
mov
std
gs
aas
mov
add
inc
xchg
xchg
imul
adc
pop
inc
sbb
sbb
out
popa
aam
mov
add
out
sbb
xor
idivb
aad
pop
jmp
mov
rcr
jmp
call
imul
mov
out
scas
popa
xchg
jbe
test
sub
and
inc
in
cltd
mov
add
out
sub
xlat
pop
inc
mov
enter
inc
in
bound
dec
jmp
out
pop
mov
fcomps
lea
out
out
out
jne
aaa
int
adcl
push
daa
mov
lds
int3
jo
test
jp
adc
dec
jg
ja
fimuls
jmp
scas
xchg
adc
and
mov
iret
fisubs
adc
and
sbb
add
cmp
dec
xor
rcrl
scas
sub
jb
gs
mov
stc
mov
pusha
push
push
call
inc
js
clc
pop
bound
mov
sbb
ljmp
call
xchg
dec
jo
int3
mov
lahf
rclb
push
jecxz
pop
cmp
dec
xchg
enter
cmp
inc
mov
leave
arpl
imul
mov
xor
sti
lret
outsl
aaa
jb
sbb
mov
or
ret
mov
in
sub
mov
xchg
inc
xor
adc
jge
daa
ret
jb
bound
xchg
ds
dec
pop
mov
xchg
data16
shll
scas
in
rcrb
or
shr
daa
pop
fcomi
rorb
jp
movsb
mov
dec
rorl
clc
dec
imul
pop
cmp
jb
repnz
stc
and
sahf
clc
int3
jns
test
push
insl
fwait
mov
or
jmp
fistpl
or
xchg
ret
adc
push
inc
movsb
cmpsb
and
shl
inc
or
insb
filds
pop
pop
mov
push
jge
sub
mov
outsl
les
imul
or
lcall
lock
sbb
cmpsl
movsb
xor
in
cmpsl
mov
cli
test
xchg
push
jbe
push
jb
test
jle
xchg
daa
inc
adc
out
xchg
dec
iret
orb
and
ja
fimull
cmp
mov
mov
push
jo
jnp
fisttpl
xchg
insl
bound
inc
rcrb
pop
inc
mov
push
sbb
lods
mov
fs
jle
subb
mov
ret
jmp
imul
pop
sar
mov
sbb
xchg
or
icebp
sub
lods
fsub
cmp
dec
lods
test
out
sbb
xlat
fnstenv
idiv
repnz
outsb
xchg
mov
popf
lahf
cwtl
inc
enter
mov
push
mov
adc
pop
push
cmpsb
pop
xor
push
lods
movsl
scas
push
fldl
mov
mov
iret
mov
add
mov
adc
leave
fwait
jbe
push
inc
sbb
loop
out
std
daa
sub
sbb
dec
inc
int
js
or
scas
push
cmp
cmp
and
sub
sbb
adc
sbb
testl
mov
pop
adc
lret
sub
les
test
fisubs
mov
inc
aad
sub
cmpsl
xchg
fnstsw
fstpl
sbbl
mov
jb
cmp
pop
mov
aam
sub
cmp
push
push
pushf
sbbb
fidivrl
xlat
addb
insb
lods
outsl
lds
sbb
rcll
in
jae
ja
cwtl
addr16
lret
scas
enter
nop
xorb
scas
xchg
test
data16
xor
imulb
fisubs
enter
movsb
js
pushf
jno
jge
fisubs
dec
cmpsb
loope
jecxz
iret
subl
sbb
xchg
adc
sub
pop
lcall
and
inc
add
out
jp
aaa
pop
popf
lods
sbb
rcrb
push
in
call
cwtl
mov
xchg
scas
add
fcmovnbe
repz
or
pop
lcall
xor
inc
leave
add
repnz
mov
out
inc
pop
addr16
jg
and
daa
mov
xor
xchg
shrl
cmpsl
subb
sub
icebp
and
je
adc
xlat
inc
xor
ljmp
jns
pushl
or
ret
push
ss
dec
mov
rorb
sbb
fnstcw
dec
mov
fnstcw
sub
cwtl
out
and
mov
mov
sti
fs
and
test
mov
xor
mov
lahf
fnstsw
adc
xor
cmc
mov
repnz
mov
and
jmp
stos
pop
popa
push
sbbl
push
mov
jecxz
inc
pop
xor
cmp
lea
loopne
insl
jge
iret
data16
mov
dec
and
cmp
iret
sahf
jns
add
cmp
and
adc
inc
push
add
sbb
cmp
push
test
fwait
add
xchg
jp
stos
shll
xchg
icebp
in
test
or
cmpl
shl
aam
das
loopne
add
xchg
ljmp
je
cmp
adc
fbld
sahf
clc
and
insb
xchg
adc
outsb
out
enter
lret
push
aaa
int3
mov
cmp
inc
cmp
enter
rorl
xor
fbld
push
aam
mov
cmp
xor
fdivrl
fisubrl
sti
add
jb
inc
out
sbb
insb
cltd
cld
in
inc
or
outsb
imul
pusha
pop
mov
das
mov
mov
std
lahf
xchg
rcrl
xchg
insb
mov
sub
mov
cmpsl
insb
out
fidivs
add
lahf
jle
adc
cmp
into
cmp
sbb
push
push
loop
lcall
sub
push
jl
pop
popf
dec
aaa
push
daa
jo
and
adc
jle
adc
pop
cli
adc
imul
push
rolb
daa
ret
mov
addr16
sahf
cmp
dec
shl
or
sub
das
xchg
int3
mov
imul
mov
daa
push
les
cmp
jo
imul
push
pusha
ljmp
mov
sub
andb
mov
push
mov
push
daa
roll
sub
stc
insl
add
xchg
incb
scas
inc
shll
push
inc
xor
aas
jno
sarl
mov
push
xchg
test
fidivrl
jmp
std
pinsrw
fwait
shll
in
and
rol
mov
pushl
adc
or
int3
mov
sbb
aaa
fdivrl
imul
aas
into
xchg
es
aas
pop
rep
pop
leave
nop
gs
js
inc
and
adcl
jge
mov
jg
mov
daa
call
aad
xchg
adc
loope
pop
pushf
mov
push
scas
or
sub
fwait
insl
mov
sub
ret
push
sbb
or
sbb
pop
int
cmp
rorb
imul
daa
aad
test
mov
push
negl
sbb
insl
lahf
push
mov
cmp
enter
xor
jmp
lret
push
subl
insl
dec
push
xlat
push
stos
jmp
inc
scas
out
stc
and
mov
jmp
sub
xchg
mov
push
out
adc
xor
mov
pop
cmpsb
je
dec
icebp
hlt
and
sub
push
and
insb
xor
fs
in
ss
jmp
mov
mov
push
leave
cmc
data16
sub
in
xorl
mov
je
pop
mov
and
in
nop
mov
adc
xor
xchg
push
ds
cmp
pop
lcall
fisubl
jnp
daa
inc
inc
dec
clc
or
and
fst
xor
push
sub
push
mov
jae
add
popa
cmpsl
inc
inc
push
loop,pt
scas
push
inc
pop
jno
add
sbb
sub
cli
pushf
xor
pop
outsb
mov
addr16
xchg
mov
adc
out
xor
shlb
mov
sbb
dec
dec
iret
mov
ja
adc
repz
arpl
enter
testb
pop
adc
mov
stos
mov
cli
cmp
add
add
icebp
mov
xor
sub
fldenv
shl
jmp
xlat
xor
lea
add
push
ret
and
out
movsl
lock
inc
pop
mov
pop
and
mov
mov
jae
test
push
mov
jge
daa
jmp
lea
rcr
fbld
aad
add
mov
adc
jne
sarb
out
into
movsl
push
xchg
stos
pop
pop
in
addl
mov
sbbl
lods
outsl
int
xor
xor
mov
jmp
jo
cwtl
mov
mov
inc
adc
add
outsb
inc
call
out
mov
mov
mov
ds
mov
les
andb
mov
jp
shrl
fsubp
xor
mov
xor
mov
ret
mov
fcmovb
insl
push
mov
clc
mov
pop
dec
push
xchg
xor
fcompl
clc
or
push
inc
and
pop
daa
sbb
pop
push
and
ret
fnsave
std
inc
fs
sti
popf
iret
lods
inc
dec
pop
push
jmp
inc
stc
inc
or
sbb
bound
repnz
push
lock
pop
or
or
ljmp
mov
sbb
sbbl
out
fbstp
jp
movsb
sub
jecxz
pop
push
cmpsb
jns
nop
inc
pushf
popf
adc
and
ja
pop
xchg
mov
adcb
xchg
mov
adc
imul
cmpsb
mov
mov
pop
push
stos
inc
sbb
push
cmp
enter
ret
aam
movsb
sbb
in
loopne
push
mov
jnp
jle
es
xchg
sbb
aam
ja
and
xchg
imul
ret
sbb
or
repnz
dec
push
xchg
adc
pop
cmpsb
and
int3
stos
jmp
mov
and
add
insl
pop
fcmovne
jl
daa
imul
dec
sbb
push
pop
dec
scas
push
jne
pop
and
ds
mulb
jecxz
pop
lcall
push
push
popa
cmc
pop
ret
mov
js
pop
lea
push
adc
shlb
daa
adc
push
scas
push
inc
and
shl
or
sub
out
push
mov
popf
pop
fidivrs
sub
mov
mov
loop
and
sbb
lock
fldt
loopne
test
test
ret
lds
or
mov
dec
jne
dec
sub
push
xlat
outsl
jnp
dec
add
orb
inc
insb
sbb
lahf
xor
xchg
sub
out
inc
clc
mov
mov
test
push
sbb
popa
inc
mov
push
jecxz
testl
fisubs
push
leave
aas
and
xor
sbb
pop
addr16
adc
int3
loopne
push
outsb
cmpsl
ret
mov
enter
out
idivb
jl
mov
pop
or
iret
fisttpll
pop
arpl
test
mov
shlb
mov
dec
jecxz
es
jle
movsl
lds
dec
in
inc
mov
stos
inc
add
es
nop
pop
or
or
add
push
mov
test
dec
jl
out
jl
mov
aaa
add
push
dec
fmull
or
in
and
mov
scas
xchg
sbbb
cmp
dec
dec
in
push
sub
data16
inc
rorb
xchg
adc
mov
cltd
or
aas
icebp
movsl
icebp
push
mov
sti
xchg
sahf
sub
xchg
dec
jns
jge
mov
jbe
sbb
in
mov
decb
fcoml
jmp
dec
sbb
lret
aad
jo
icebp
push
jmp
add
lret
and
bound
cld
sbbb
mov
popa
inc
and
cmp
roll
mov
jmp
pop
pop
scas
cmp
int
xchg
dec
bound
mov
pop
xor
inc
pop
or
pop
push
lcall
lret
test
fwait
sti
call
rclb
mov
fwait
test
mov
ds
les
add
add
sbb
sbb
jmp
cmp
xchg
or
in
int
test
cli
popf
popa
pop
rolb
push
mov
iret
es
pop
in
jle
dec
cmp
mov
imul
andl
loope
sub
jae
aaa
xor
inc
adcl
pop
mov
add
popa
jecxz
fwait
mov
dec
movsl
cmp
add
mov
cli
movsl
dec
and
ret
outsl
shl
nop
repz
pop
addr16
test
jne
scas
into
movsb
mov
je
xor
js
push
sub
adc
jp
inc
inc
shrl
lods
mov
nop
dec
jae
fstpt
popf
stos
jno
and
adc
lods
inc
aas
daa
lods
mov
sbb
add
add
xchg
clc
xor
lret
fcomip
pop
arpl
bound
scas
xor
mov
dec
and
mov
sub
stos
jno
adc
sub
mov
sbb
lret
out
sbb
mov
mov
jne
sahf
pusha
repnz
ss
loop
in
jno
aam
movsb
subb
jg
cmp
mov
ret
loope
push
lret
shll
roll
add
inc
sbb
push
inc
pop
push
insl
mov
jle
jmp
scas
std
loop
das
sarl
popa
xor
xchg
jno
jae
out
xchg
mov
and
in
or
cli
push
mov
popf
lods
dec
jnp
popf
sub
outsl
push
or
std
or
and
aas
popf
or
or
aaa
jg
stc
int
and
push
jne
das
xchg
clc
xorl
dec
ret
jne
sbb
xchg
xchg
cld
pop
mov
jecxz,pt
adc
aam
ret
and
sub
mov
mov
adc
dec
mov
inc
sbb
cmpsb
bnd
repnz
inc
sub
mull
shll
movb
push
xchg
bound
ja
push
cmpsb
mov
iret
mov
scas
jb
jb
int3
jecxz
sti
stc
sti
sub
and
dec
divb
jb,pt
dec
imul
leave
pop
lods
in
mov
dec
add
inc
enter
loopne
push
dec
pop
mov
shrl
pop
pop
in
jp
cmp
pop
xor
hlt
fs
fcmovnbe
rcrb
push
push
je
loope
gs
mov
mov
mov
jae
push
cltd
xchg
jp
jb
in
in
or
outsb
repz
test
push
pusha
adc
mov
cmp
push
movsl
fisttpll
jb
es
movsb
popf
xor
mov
gs
in
xchg
mov
outsl
or
and
movsb
dec
dec
pop
and
je
fildll
sbb
lock
movsl
cli
xchg
push
sahf
xor
inc
jbe
mov
pop
mov
mov
sub
aaa
mov
sbb
xchg
xchg
leave
rclb
inc
nop
test
jbe
jns
push
repnz
dec
add
add
jge,pn
fsubp
dec
mov
cmp
ss
aad
dec
xor
pop
test
cmpsb
or
pop
out
push
xchg
cli
xchg
pop
jae
bound
scas
out
push
mov
ror
cmp
xchg
and
mov
in
test
insb
push
add
dec
lret
xor
sub
mov
lret
or
mov
cmp
cmp
hlt
loope
leave
mov
lret
icebp
mov
mov
shr
jno
sbb
mov
or
inc
or
push
adc
sub
push
ret
jp
icebp
cwtl
data16
in
jg
pop
stos
mov
pop
ret
cwtl
movsb
out
test
or
push
inc
push
sbb
ss
cli
xchg
test
sarb
pop
data16
or
sub
fidivl
xchg
lods
jmp
fsubr
insb
or
add
xor
scas
mov
testb
cld
aaa
adc
sbb
arpl
push
jno
shr
aas
cmp
leave
adc
add
nop
inc
repz
lret
xor
xor
push
xor
into
enter
fnstcw
fwait
jecxz
xchg
cmp
lds
shrl
stos
lds
adcb
cmp
imul
mov
pop
xor
pop
iret
ss
out
loop
bound
mov
and
mov
loopne
sub
hlt
aad
lretw
in
addr16
jnp
out
aad
xor
aad
inc
xlat
in
inc
mov
jecxz
repnz
aad
adc
xchg
in
jne
in
sub
inc
mov
pushf
pop
mov
sub
adc
sbb
stc
mov
and
or
or
inc
push
dec
xrelease
adc
mov
andl
lds
adc
test
out
sbbb
push
xor
dec
inc
scas
stos
cmp
xchg
into
loopne
cld
idiv
aam
enter
cmp
mov
sbb
scas
xor
movsb
push
jne
push
shlb
mov
add
dec
inc
test
in
cmp
or
mov
add
fs
filds
pop
negl
bound
push
mov
push
call
lods
test
mov
jo
cmc
xchg
sub
mov
jb
test
cmp
fsub
loope
mov
nop
ja
and
mov
inc
into
in
xchg
push
push
sbb
sub
rcrb
and
lahf
jno
aaa
mov
out
popf
insb
sbb
sahf
sbb
int3
nop
pop
je
fnstcw
sbbl
dec
das
imul
dec
or
or
mov
add
outsl
push
lods
adc
mov
mov
jnp
pop
fucomi
nop
std
inc
sahf
cmpsl
nop
stos
mov
sub
jnp
not
xor
mov
dec
shll
or
mov
enter
jl
pushf
mov
arpl
sbb
ljmp
mov
pop
insl
jmp
sub
addr16
and
mov
outsl
gs
pop
cli
iret
add
mov
ret
mov
dec
add
jns
nop
gs
sbb
insl
rol
inc
and
mov
lret
lret
xor
test
cmpsl
add
popf
inc
or
jp
cmp
in
orb
or
xchg
sbb
in
mov
dec
jb
xlat
pop
test
add
loopne
in
cmpsb
sub
jge
daa
cmc
inc
aam
inc
pop
fmull
arpl
stos
sbb
push
ret
cmp
scas
mov
or
push
insb
loopne
sbb
inc
icebp
cmp
mov
inc
or
in
or
mov
push
cmp
push
dec
dec
jne
dec
pop
mov
dec
pushf
shll
in
dec
jns
adc
leave
xor
iret
xchg
mov
mov
xorb
and
movsb
inc
jg
and
in
xchg
test
sub
int
pop
add
sub
or
jb
sbb
aaa
push
sbb
push
dec
inc
push
lcall
dec
jae
jnp
insb
das
dec
mov
mov
cmp
insl
cmp
pop
call
test
inc
cmc
jle
pop
scas
pop
pop
pop
push
xorl
nop
push
sbb
add
je
push
nop
and
inc
push
lods
mov
sub
call
xchg
or
cmp
insb
jge
mov
mov
stos
mov
mov
jl,pn
lock
push
mov
repz
ja
jp
sub
and
mov
mov
sub
pop
stc
mov
cmpsb
xchg
rcr
mov
cmp
out
imul
inc
lds
shl
icebp
cmp
stos
jne
xchg
sub
idivl
shrb
cli
inc
jb
fs
mov
cld
int3
outsb
aaa
jns
push
inc
push
data16
mov
inc
fisubrs
xchg
fdivrl
mov
ja
pop
movsl
jp
ds
repnz
rorl
gs
test
ljmp
mov
jnp
add
sbb
push
xor
xchg
pop
and
adc
inc
repz
pusha
cmc
and
cmpsw
jb
fstps
jno
andb
jno
ret
dec
xchg
cli
jle
int3
cmp
pop
inc
arpl
arpl
lock
push
add
pop
jb
or
add
lods
cmp
fmull
shl
fxch
xchg
sahf
js
xchg
orb
addr16
imul
das
negl
xor
push
add
pop
ja
push
es
add
push
sbb
movsl
mov
pop
xchg
add
add
sbbl
pop
les
or
rclb
mov
incb
sbb
or
lret
cmp
mov
and
in
jnp
lea
es
rorl
cli
hlt
fwait
jo
and
sbb
or
sub
insb
mov
xchg
fcmovnb
sbb
sub
mov
cmpsl
adc
jo
in
std
add
insb
mul
shlb
xor
mov
jns
fbstp
xor
enter
pop
xchg
lods
xchg
mov
shll
cs
pop
pusha
adc
adc
stos
out
mov
test
push
lret
xor
dec
in
adc
data16
repz
mov
loope
sub
iret
aad
add
xchg
jo
rcl
aaa
push
push
lods
cmpsl
push
pop
mov
js
mov
test
out
dec
mov
psubusb
lock
sub
imul
idivb
adc
and
mov
sub
mov
repnz
stc
adc
hlt
stc
lret
into
popf
jno
xchg
in
aad
xor
je
scas
int3
xor
mov
jae
jo
std
in
push
inc
and
inc
mov
adc
mov
scas
out
fsubrs
mov
jo
enter
adc
pop
jp
test
add
adc
jns
mov
push
cli
sbb
pop
cmc
mov
cwtl
notl
cli
push
or
shl
jnp
lods
ljmp
in
enter
push
cmpsl
jbe
enter
cld
out
dec
pop
testl
push
aad
jno
dec
addr16
pop
fwait
dec
xchg
sbbb
js
fs
and
stos
pop
shrl
cs
sub
into
gs
jne
je
in
stos
out
sub
jl
stc
add
popf
stos
xorb
mov
add
icebp
mov
mov
xchg
test
idiv
and
cmp
sub
and
mov
sub
stc
test
push
les
rcrb
mov
gs
xchg
pushf
xlat
sbb
xor
shrl
ret
push
fisubl
ret
xchg
cmp
mov
push
cmp
in
xor
out
out
in
aam
push
addr16
pusha
lds
ret
jmp
imul
xor
sbb
xor
mov
ss
in
xchg
nop
idivb
lcall
push
mov
fstps
insl
mov
dec
jo
sbb
add
in
lock
les
adc
push
je
cmp
jns
lds
jb
in
lock
lahf
dec
lea
test
push
xchg
add
ds
stos
out
frstpm(287
aaa
test
lods
jmp
mov
mov
xlat
sbb
mov
mov
fs
dec
pop
test
lods
adc
pusha
jl
fiaddl
and
or
aas
push
std
xchg
push
pusha
cs
jnp
outsl
mov
adc
mov
sbb
mov
movsb
xchg
lret
inc
loopne
mov
mov
mov
test
orb
push
mov
inc
sub
cmpsb
jmp
sti
and
add
cmpsl
js
sbb
lret
cmpb
jne
clc
inc
pop
cs
xchg
adc
enter
and
mov
mov
popf
lahf
ss
jae
xchg
jp
lret
pushf
mov
mov
es
add
sbb
push
jae
mov
insb
lcall
les
mov
bound
mov
fxch
enter
leave
in
mov
pop
xchg
push
outsl
in
fsubs
mov
shlb
cli
in
xchg
jns
mov
jb
xor
popa
sub
dec
call
adc
cwtl
push
test
loope
fdivs
add
mov
aaa
shll
repnz
pop
cmp
imul
ret
scas
loop
jge
outsb
iret
lcall
shlb
into
sub
arpl
and
iret
xorb
dec
mov
cwtl
sbb
cmpsl
ret
leave
cmp
pop
xor
and
call
aam
cmp
pop
mov
jo
xor
xor
pushl
dec
add
shlb
in
test
adc
xchg
xchg
sbb
jnp
ss
lahf
adc
add
jno
inc
jmp
les
or
data16
lret
into
push
cmp
jne
sbb
enter
out
jmp
pop
push
sub
scas
mov
pop
js
push
push
pop
jae
aaa
cmp
cmp
mov
push
jb
mov
push
out
and
in
inc
stc
ret
jle
mov
lds
add
imul
mov
aaa
lds
mov
mov
lods
inc
popa
lods
mov
nop
dec
out
jns
and
imul
inc
out
pop
aas
push
jg
enter
andb
cmpsl
cmp
xlat
and
mov
jge
scas
xor
notl
xlat
repnz
push
dec
pop
movsb
mov
popa
add
leave
enter
imul
popf
leave
fidivrs
mov
fisubrl
xor
icebp
jp
mov
das
add
nop
and
sbb
out
pop
fadds
aam
dec
fidivl
mov
pushf
xchg
out
xchg
sarl
pop
lds
and
mov
js
aad
mov
mov
push
push
inc
in
cmp
push
dec
faddl
xchg
xor
loopne
or
xchg
push
pushl
out
mov
mov
in
aas
pop
imul
ja
xor
inc
int3
dec
std
pop
loopne
out
xchg
leave
ret
repnz
xor
xchg
pop
and
rclb
clc
mov
cmc
sbb
pop
push
lods
or
xor
test
or
dec
dec
xor
push
in
stos
aaa
cmp
dec
imul
push
lret
fwait
or
jmp
call
pop
ljmp
jno
sub
mov
mov
inc
es
mov
or
push
jg
scas
xor
and
mov
mov
xor
jg
test
jg
fcmovnb
fcompl
into
cmpsb
shrl
sub
push
stos
add
xorb
mov
jne
testb
in
xor
pop
xor
test
loope
adc
mov
fsubrl
int
in
dec
popa
xorl
cs
dec
jecxz
xor
jge
lret
sti
dec
ret
sbb
repnz
cs
inc
outsb
clc
pop
jecxz
ficoms
push
xor
xor
jle
dec
mov
or
xchg
test
add
jno
jo
pop
inc
cmpsl
inc
das
bsr
inc
push
lret
aad
and
lret
repz
cmc
mov
xchg
out
dec
or
into
sub
pusha
notl
jne
lds
fmuls
push
pop
mov
sub
sahf
mov
negb
cmp
and
rorl
dec
movhlps
mov
pop
pop
push
fsts
mov
dec
stos
xchg
dec
mov
dec
gs
data16
lock
pop
or
test
orl
dec
aam
aas
xchg
xlat
mulb
movsl
xor
mov
add
add
and
mov
jle
inc
mov
shl
dec
sbbb
push
add
mov
bound
push
jbe
pop
inc
push
push
jno
mov
gs
fstpt
push
jmp
pop
shll
arpl
idivb
bound
bound
fiadds
push
out
sub
mov
or
xor
xor
in
mov
leave
jne
outsl
in
push
ds
jle
loop
push
cltd
movsl
inc
and
lods
out
das
mull
mov
jge
call
lea
icebp
das
xchg
push
mov
xor
inc
push
xor
jmp
fs
cltd
xchg
inc
in
mov
sbb
inc
pop
add
and
pop
stc
rcrb
jbe
clc
pop
incl
adc
jl
cltd
lock
or
idivl
mov
rclb
xchg
popl
pop
push
ss
inc
fidivrl
xchg
add
sub
lret
loop
aaa
pop
or
mov
loope
into
enter
ss
inc
mov
inc
scas
daa
lods
rclb
mov
sbb
daa
insb
add
sbb
and
sti
mov
inc
lret
lret
repz
dec
insb
cmp
ret
decl
dec
xchg
int3
sahf
inc
imul
inc
lock
pop
aam
xchg
cld
inc
popa
mov
int
loop
xor
leave
loop
imul
adc
shl
cmp
jbe
inc
iret
push
jb
insl
inc
fisttpll
jle
lock
nop
not
and
mov
mov
int
ljmp
jmp
mov
adc
pop
enter
mov
jecxz
mov
jae
xchg
out
pushf
mov
sbb
sbb
cli
push
xor
ljmp
into
mov
data16
sbb
clc
mov
arpl
xchg
setb
xor
int
repz
icebp
repz
cmp
stc
add
inc
sbb
add
mov
sti
repz
inc
mov
dec
xchg
xchg
sarl
xchg
or
fwait
rorl
negl
stos
shrl
andl
stos
jno
jne
pushf
mov
stos
jl
pusha
mov
leave
test
test
imul
scas
addr16
mov
mov
ret
pop
cmp
sbb
divb
add
dec
pop
imul
es
mov
mov
mov
addr16
sbb
rol
sub
rcl
outsb
in
fwait
cwtl
mov
pop
movsb
ds
dec
loope
push
roll
lds
cmp
add
sub
xchg
aaa
pop
mov
jno
xor
shlb
sbb
xor
xchg
dec
dec
sahf
xor
lock
sti
xor
repnz
scas
inc
and
int
cmpsl
and
xchg
push
mov
add
aas
mov
repnz
lcall
mov
out
dec
adc
stc
xor
jbe
addr16
lea
inc
pop
lcall
add
dec
and
bound
xor
jo
jge
imul
int3
iret
or
cltd
lds
mov
lods
jle
loop
inc
inc
cli
cmp
sbb
leave
mulps
lahf
add
sti
icebp
inc
sbb
sbb
mov
dec
gs
testb
fsubp
iret
daa
mov
and
loopne
ror
push
xchg
in
add
iret
cmp
xorl
icebp
test
mov
pop
pop
mov
nop
dec
lahf
jmp
lods
fidivrl
out
push
lret
push
and
xchg
dec
pop
into
mov
lahf
mov
push
out
xchg
sub
add
pop
movl
test
seta
in
push
mov
xor
leave
sahf
sbbl
loop
repz
xor
mov
cli
xchg
push
popf
xchg
cwtl
inc
divl
inc
lcall
mov
cmp
inc
jnp
shrb
lods
add
mov
std
icebp
mov
sub
addr16
fiaddl
sbb
fwait
popa
lods
int3
cmp
push
jne
xor
orl
adcb
ds
push
cld
push
xlat
and
jge
fdiv
stos
mov
or
in
sarb
push
popf
lock
inc
int3
fidivs
jbe
pop
sbb
dec
sarl
iret
addr16
push
sub
mov
push
xchg
scas
aaa
aas
out
call
test
ficoms
or
jecxz
sub
inc
aam
add
das
adc
xor
and
into
out
adc
aaa
addl
fs
xchg
dec
loopne
jmp
addr16
jl
arpl
adc
shrb
xor
imul
sub
shr
lea
or
mov
jecxz
push
icebp
mov
cmpsl
ds
mov
pop
adcb
jp
outsb
sub
push
iret
jp
ja
into
push
dec
pop
jl
sbbl
inc
fdivs
pop
pop
testb
jge
fstl
jmp
mov
stc
dec
push
test
popf
sti
pop
in
jns
fwait
xor
push
push
mov
jb
add
fidivl
testl
dec
jle
xor
adc
in
dec
xor
in
push
xlat
outsb
mov
int
mov
fucomp
orb
mov
daa
xchg
aad
outsl
cmp
scas
inc
clc
add
les
popf
daa
inc
stos
mov
es
jns
sub
mov
dec
fcmovu
mov
mov
test
jmp
aam
sti
xor
test
adc
pop
bswap
mov
xor
inc
mov
and
cmp
loope
repnz
mov
inc
dec
pusha
ds
jno
nop
mov
xchg
jae
or
xchg
inc
jns
push
cwtl
lods
or
sub
dec
lods
add
push
popa
sti
aaa
cmc
shrb
xor
movl
lret
xchg
xor
dec
push
and
cmp
aaa
mov
out
les
ficoml
dec
jge
movsl
ret
jns
push
adc
xchg
cs
mov
mov
or
dec
subb
mov
lret
jge
sarl
mov
or
pop
fwait
xor
test
dec
and
jne
roll
jns
inc
fsts
mov
imull
push
jg
xchg
or
pop
cmp
push
jmp
sbb
jo
inc
lods
lods
notl
jg
aam
jbe
pop
daa
cmp
sub
je
icebp
test
cmp
jg
movsl
and
icebp
sbb
adc
imul
xchg
mov
adcb
inc
aad
mov
push
repnz
movsl
mov
cvttps2pi
xchg
mov
decb
movsb
leave
movsb
pop
leave
enter
daa
jb
fcmovbe
loopne
jle
out
jo
mov
sbb
bound
in
cwtl
outsb
sub
bound
pop
cmp
outsb
iret
xchg
jge
sub
jo
push
divl
std
dec
sti
lea
shr
push
xchg
and
xchg
push
cmp
loope
roll
mov
sbb
decl
daa
outsl
lret
sbb
je
movsb
sti
lods
xchg
push
jo
or
or
sti
je
imul
or
pop
mov
sub
flds
pushf
jp
pop
imul
outsb
xor
insl
push
and
push
and
jmp
in
jo
jge
cltd
test
xor
jae
pop
mov
jb
mov
test
inc
pop
push
test
mov
aam
in
mov
cli
or
lea
or
pop
cmp
loop
and
packsswb
jle
or
or
into
loopne
out
movsl
push
jge
add
adc
pop
push
mov
pusha
mov
repnz
lds
int
les
sbb
nop
repz
repnz
daa
push
push
insb
idivb
inc
xor
fldcw
mov
jmp
jmp
pop
dec
and
insl
jg
icebp
mov
fwait
mov
scas
jmp
lea
into
imul
stc
ss
cmp
mov
fnstenv
mov
jp
adc
jbe
sub
loop
in
lock
iret
pop
gs
cs
test
push
lods
movsl
xor
lock
jo
imul
mov
stos
aas
in
fisttpll
pop
cli
bnd
and
int
lock
lret
iret
mov
dec
lcall
xor
adc
xlat
or
inc
and
mov
stc
nop
add
addr16
int
fidivl
jnp
xor
lahf
jae
arpl
push
sub
xchg
fwait
dec
jae
mov
fnsave
int
js
ret
mov
in
cmc
push
arpl
mov
mov
int3
xchg
mov
adc
mov
test
dec
movsl
xor
xchg
fcoms
adc
cltd
rolb
int3
sub
outsb
mov
and
pusha
jecxz
leave
ret
adc
dec
ficomps
xchg
inc
push
xor
push
jo
mov
mov
shlb
push
testb
and
leave
ficoms
push
push
fcmovnbe
daa
mov
pop
and
in
push
cmp
inc
mov
test
loop
sar
add
aad
out
fs
pop
fsub
lods
clc
adc
and
mov
pop
mov
aas
cltd
sub
scas
pop
mov
ss
in
cmp
int
jae
add
and
add
sbb
lea
faddl
push
fsubrl
mov
ret
push
cltd
mov
push
push
out
aas
cmp
push
cltd
and
pop
rclb
rorl
std
shrl
cmp
aaa
data16
test
xchg
lock
popa
stc
inc
mov
jmp
sub
sti
ret
jns
xchg
sub
push
mov
ret
test
xlat
push
or
roll
mov
pop
mov
or
sbb
mov
addr16
ljmp
jno
jecxz
cwtl
pop
xchg
cmp
and
popf
xor
pusha
cmp
iret
rclb
inc
ror
test
jmp
inc
fbld
jbe
inc
xchg
pop
cld
add
adc
lret
pop
push
aam
loop
jb
movsb
mov
loop
pop
fmuls
adc
movsl
lds
sub
test
add
inc
add
adc
aas
into
add
orl
mov
int
enter
adc
sahf
pop
cmpsb
mov
fsub
pop
push
xor
push
lret
in
out
mov
shrb
or
push
lock
mov
daa
inc
iret
sahf
stos
addb
das
in
jmp
mov
addl
imul
lds
mov
sub
enter
mov
iret
mov
xor
jecxz
xchg
ss
xchg
fs
jmp
shlb
iret
leave
xchg
divb
and
and
xchg
add
dec
xchg
hlt
adc
imul
les
je
cltd
jo
insl
data16
xor
mov
fisubrs
cmpsb
mov
push
jne
fldln2
inc
repz
cld
or
adc
arpl
or
imull
sbbl
iret
push
out
pop
mov
mov
cmp
repz
test
cmp
into
sub
jge
out
pop
xor
lret
mov
pop
xor
xchg
out
cli
lods
repz
fucomp
sbb
fisubrs
xchg
mov
rol
xchg
mov
scas
mov
mov
dec
fsubrp
xchg
cmp
mov
mov
aad
nop
sub
add
clc
sbb
adc
xlat
outsb
sbb
add
stc
imul
jb
dec
push
mov
add
in
stos
sub
shr
pop
or
daa
inc
xchg
mov
stos
mov
int3
mov
jmp
xchg
in
ret
je
mov
inc
xlat
xchg
js
cld
data16
cmc
add
sub
pop
xor
dec
data16
adc
fdivrs
cmp
cld
clc
cwtl
xor
and
or
outsb
loope
mov
or
fldenv
je
sbb
into
and
fsubs
sbbl
arpl
cmpsb
push
lcall
rorl
xor
out
setg
js
xlat
pop
xor
mov
pop
dec
arpl
orb
pushf
lcall
jb
lcall
in
lock
ficompl
jmp
jbe
das
sbbl
stc
push
cmp
xor
push
inc
pop
jb
push
hlt
ljmp
iret
divb
lcall
subb
pop
lret
ds
pusha
dec
cld
inc
mov
pop
neg
mov
jge
sub
mov
int
mov
mov
repnz
shrb
aas
fcom
in
push
pop
push
inc
adc
xor
and
testl
mov
adc
pushl
pop
hlt
stos
pop
xchg
test
xor
pop
sbb
push
aam
les
adc
aas
pop
data16
lret
xchg
xor
imul
mov
inc
repz
in
sub
aaa
push
xchg
hlt
lcall
inc
test
mov
int3
sbb
jl
aas
xchg
and
xchg
imul
xorb
mov
mov
push
xchg
lea
ss
fnstenv
dec
cmpsb
jp
addb
jb
ljmp
mov
mov
mov
jae
jg
lea
add
push
mov
subb
xchg
dec
or
add
or
pop
jg
dec
scas
adcl
add
int
add
sahf
mov
test
clc
lcall
in
sub
sub
mov
mov
nop
sbb
and
push
mov
jne
shlb
xchg
test
loope
in
add
rorb
or
sti
xchg
or
mov
data16
fs
repz
adc
out
xor
sahf
and
sti
jmp
insl
mov
sbbl
scas
ret
repnz
fs
lahf
and
push
mov
out
mov
cmp
push
mov
repz
add
ret
lds
sbb
sbb
sub
inc
ret
add
cmp
loope
dec
mov
adc
xchg
or
or
pcmpeqw
cmp
xchg
and
xchg
psrad
fs
jmp
lock
ret
adc
nop
xchg
cmpsb
stc
xlat
mov
jp
adc
sbb
loope
mov
in
xor
pop
inc
mov
ljmp
jno
xor
or
mov
and
scas
and
push
mov
stc
dec
push
sbb
mov
mov
sub
outsl
jecxz
xorl
xor
dec
push
sbbb
adc
fnstcw
pop
aam
enter
loopne
push
xor
push
lcall
sbb
sti
pop
movsb
jecxz
int3
add
rcrb
jae
shrb
inc
cvtpi2ps
pop
xchg
clc
fiadds
fprem
test
int3
or
movsb
out
push
cmc
pop
mov
shl
leave
imulb
fdiv
jp
xchg
xchg
add
pop
test
out
xor
lods
dec
mov
sbb
sub
cmp
ficomps
xchg
xor
pop
data16
push
in
mov
cli
je
daa
add
in
dec
sbb
sti
pop
loope
in
add
cmpsb
insb
pop
outsb
sbb
mov
test
rcll
dec
xor
xchg
daa
fsts
mov
lock
jge
minps
lods
jge
pop
cmpsb
add
fcomps
and
ret
jnp
xchg
outsb
adc
repz
test
jecxz
push
lods
sbb
lret
xchg
jno
test
push
sbb
jbe
push
dec
mov
lahf
xchg
sub
jns
lahf
fsubr
orb
xchg
adc
lret
fdivrs
add
addb
dec
sbb
adc
jecxz
test
or
mov
bound
out
enter
xor
xor
inc
data16
mov
dec
repnz
mov
jns
sub
popf
add
enter
and
push
stos
int3
fs
ja
push
xchg
insl
sbb
push
cs
fcompl
call
icebp
scas
cmp
insb
pop
insb
rolb
mov
popa
scas
ja
stos
stos
inc
cmpb
adc
mov
xchg
xchg
sub
mov
fcompl
leave
or
sbbb
aaa
xchg
mov
icebp
popf
loope
cmovnp
ja
adc
dec
dec
cpuid
adc
popa
xchg
add
sub
iret
jno
test
cmp
xchg
scas
push
adc
je
test
xchg
xor
cld
jae
test
xchg
adc
int3
jae
ss
arpl
and
xor
mov
lcall
in
dec
sub
aam
sub
ds
in
pop
mov
xor
jmp
sahf
pop
mov
cmp
mov
stos
mov
icebp
jmp
dec
out
inc
rcrb
shlb
popa
loopne
outsb
sbb
sarl
jg
in
push
jns
in
sub
adc
xchg
fwait
add
xchg
cmpsb
xor
mov
out
aas
push
sub
dec
loopne
dec
xor
test
cmp
aas
lock
and
adc
xchg
bound
test
mov
xor
mov
mov
fisubrs
mov
icebp
lret
or
out
add
rol
movsl
mov
test
pop
push
stos
inc
fmuls
mov
lea
mov
mov
fcompl
mov
mov
pop
outsl
cld
stc
das
repnz
lods
push
cmpb
je
push
addr16
pop
inc
iret
data16
fsubrp
out
es
cmp
mov
sahf
xor
inc
sahf
mov
pop
imul
sbb
mov
sub
popf
pop
jo
sub
push
and
push
mov
pop
or
sahf
fsubrs
in
ret
popf
hlt
mov
mov
outsb
sub
cmp
js
daa
dec
inc
mov
sbb
pop
and
cmp
mov
sub
push
cmp
pop
and
push
xchg
idivb
das
mov
fsubrs
adc
lret
fs
daa
push
in
dec
sub
adcb
push
test
lret
cld
dec
rol
or
sahf
insb
ucomiss
stc
or
mov
pop
loop
outsb
xchg
sub
push
mov
scas
mov
sbb
mov
pop
out
and
and
mov
mov
cltd
push
leave
fadds
daa
hlt
push
pop
sub
outsl
out
mov
adc
add
inc
add
popa
lret
fnop
imul
fisttpll
inc
sub
das
add
and
mov
pop
pop
incb
fisubl
push
jns
or
call
or
mov
mov
jb
sbb
addl
aas
sub
cmp
out
adc
dec
popf
shll
mov
mov
mov
fstp
ss
adc
iret
inc
outsl
sbb
push
je
add
pushl
push
jl
or
in
lea
xor
cld
inc
data16
mull
arpl
sub
sbb
sbb
or
mov
xchg
arpl
les
xchg
inc
mov
fcompl
loop
fs
sti
scas
iret
mov
fdiv
ja
fnstsw
and
aam
jno
mov
pop
lock
xor
mov
xor
movsl
push
dec
jb
inc
cld
push
je
cli
xchg
or
sar
sbb
test
xchg
repnz
sbb
mov
ret
xor
mov
xchg
pop
roll
fistpl
mov
push
scas
loopne
inc
dec
les
jns
aam
cmp
stos
xchg
xchg
xchg
pop
adc
mov
das
clc
and
je
aad
adc
arpl
es
cmpsl
js
xor
mov
dec
cli
or
outsl
push
cwtl
cld
and
popf
mov
fidivl
cmp
or
aas
cmp
jge
sub
cmp
scas
push
push
out
lret
dec
scas
push
fistpl
ret
pop
fwait
xor
cmp
xlat
push
sub
sub
jns
push
jl
es
ret
push
loopne
mov
xchg
mov
sbbb
jno
sub
psubw
jne
iret
inc
fiaddl
mov
xor
inc
sbbb
in
int3
arpl
dec
push
cltd
dec
adc
sub
leave
push
cmpsl
jae
scas
ret
dec
sbb
sarl
dec
dec
ja
repz
rep
sbb
cwtl
lea
sub
in
test
push
adc
jle
sbb
arpl
icebp
or
dec
in
lcall
aas
mov
call
jmp
imul
out
jbe
call
ret
psubusb
add
stc
xchg
stos
sub
mov
out
inc
fdivl
inc
cmp
in
arpl
ret
push
cs
mov
mov
fisttpl
cltd
cmp
sbb
dec
inc
aad
fs
lcall
lods
test
inc
jge
jmp
adc
adc
xor
imul
test
je
arpl
mov
cmc
stos
andb
mov
xlat
mov
xchg
jns
aam
fstl
hlt
arpl
dec
or
dec
mov
sahf
dec
test
insl
sub
mov
pop
jne
cltd
cmpsb
sub
push
sbb
out
std
push
nop
mov
mov
in
sub
adc
das
hlt
ret
xchg
dec
xchg
daa
xchg
pop
cmp
push
xor
call
adc
movsb
aaa
cmpsl
xor
stc
add
dec
pop
mov
shlb
dec
push
out
jle
fidivrl
sbb
movsl
ret
cmpsl
sub
ftst
xor
and
mov
leave
push
sbb
and
dec
ret
stos
xorl
push
ljmp
jno
clc
aam
out
nop
mov
sbb
rcrb
or
dec
fists
add
add
xor
cmpsl
push
add
cs
sbb
push
xor
movlps
loop
scas
xchg
scas
loopne
push
mov
fimuls
scas
jg
mov
and
lret
push
sbb
push
call
or
repz
or
inc
cltd
dec
fmulp
mov
fiadds
cmp
jno
dec
sub
ror
cmpsl
js
loope
loope
mov
movsl
cmp
xor
imul
mov
push
xor
dec
loop
mov
cmpl
sbb
fldenv
cmpsl
xchg
add
shlb
pop
push
push
rcrb
ss
ret
xchg
fdivr
daa
cmpsb
std
sbb
cmc
dec
shrb
stc
push
jl
es
xchg
cli
arpl
jbe
xor
mov
inc
pop
mov
xchg
dec
mov
jg
pop
insl
inc
push
or
les
test
or
mov
clc
jb
ds
push
inc
gs
or
repnz
mov
bound
pop
sahf
in
fidivs
inc
inc
in
mov
push
jno
push
sub
adc
add
ret
popf
repnz
pop
cmp
insl
cmp
in
pop
ds
push
push
cmp
mov
jnp
into
add
adc
xchg
inc
daa
sahf
cmp
inc
hlt
jmp
mov
sti
mov
inc
hlt
xchg
je
mov
mov
sub
movswl
sub
xor
scas
xor
ljmp
jno
and
call
mov
enter
push
xchg
pop
or
ret
stos
mov
adc
jae
shlb
add
xor
in
inc
ss
mov
mov
bound
sbbb
leave
stc
or
cmpsb
pusha
mov
push
mov
loopne
xor
pop
into
push
mov
das
mov
xchg
fs
inc
push
lods
mov
push
hlt
mov
add
jbe
dec
pop
sub
push
or
shlb
push
cld
shlb
inc
mov
mov
hlt
xlat
rorb
testl
gs
in
insb
xchg
aaa
mov
dec
jle
cwtl
and
ret
cmpsb
jmp
out
cld
add
out
mov
cmc
mov
mov
mov
mov
mov
pop
imul
pop
in
pushf
cmp
dec
mov
outsb
sahf
pop
ds
sub
xorl
mov
dec
lods
jo
mov
in
ja
push
dec
je
mov
xchg
or
stos
push
pop
mov
adc
lds
adcb
loop
adc
in
sbb
das
cmpsb
mov
cmc
xor
and
jp
push
mov
scas
inc
add
int
loopne
insb
xchg
mov
add
inc
or
movsb
jp
jl
inc
cmp
jmp
sub
sub
adc
das
and
cmp
ds
sbb
jp
insb
test
jg
ja
xor
fdivl
add
sub
xchg
inc
mov
pop
popf
fwait
aad
arpl
xor
insl
imul
dec
xchg
cmp
and
add
ret
pop
lret
jge
imul
int
sbb
mov
popf
jno
lret
push
inc
pop
jns
push
out
mov
adc
xchg
xchg
jo
arpl
cwtl
mov
pop
imul
nop
sub
or
xor
xlat
lods
mov
nop
cmp
lds
lea
ret
icebp
push
jb
loope
xor
out
clc
ljmp
inc
xor
cmp
sub
cld
cmp
in
mov
lds
movsb
jmp
ret
inc
sbb
out
and
insb
jle
inc
jae
loop
mov
add
cmp
lds
rorl
mov
inc
sbb
lock
lds
mov
and
dec
ret
bound
aaa
int
arpl
sbb
sbb
pushf
aaa
sub
mov
or
sbb
shll
sub
rolb
scas
mov
or
clc
arpl
and
lock
ds
xchg
push
lock
cmc
sub
pop
outsb
addr16
inc
fldenv
sub
pop
inc
pusha
stc
lock
sub
ficomps
icebp
adc
daa
mov
push
lret
or
sbbl
mov
jb
mov
add
stc
mov
mov
mov
sbb
scas
xchg
sub
jnp
shll
push
incl
or
xchg
xor
and
mov
add
mov
push
rorl
and
leave
fists
cld
cmp
shll
rcrl
push
ljmp
pop
cmp
or
cmp
cwtl
sub
dec
int3
sbb
sbb
sbbl
push
andl
or
test
test
push
sti
push
or
pop
fidivl
sbb
repz
xchg
mov
xchg
xchg
add
cmp
mov
pushf
jne
dec
sbb
imul
sub
rcr
pop
push
pusha
insl
mov
pop
test
pop
mov
xlat
testl
aas
in
xchg
push
dec
mov
gs
aas
cmovnp
pushf
mov
shll
jae
mov
add
fistpl
mov
movsb
xor
iret
loopne
test
sti
sbb
in
push
ss
inc
enter
or
inc
pop
lahf
mov
mov
inc
cmc
andb
jo
sbb
adc
dec
push
es
add
dec
testl
add
in
sbb
lret
xchg
ss
sti
loop
and
dec
xchg
lea
cmp
sub
enter
loope
push
jecxz
fs
or
outsb
push
ds
cmpsl
mov
mov
pop
test
dec
packssdw
push
push
sahf
mov
or
test
push
inc
out
jne
in
push
popf
pop
jl
mov
adc
mov
push
fwait
inc
movsl
mov
mov
or
mov
pop
daa
sub
fnstcw
mov
xchg
repz
add
das
mov
bndstx
imul
in
bound
inc
insl
or
jns
jl
outsl
cmpsl
in
cmp
mov
sahf
idivl
jne
adcb
push
xlat
mov
loope
jmp
mov
mov
lret
add
cmp
jle
les
jo
jne
ja
call
rorb
push
or
test
adc
pop
xorb
aas
and
fst
push
jg
xor
mov
rclb
push
mov
and
push
push
mov
add
cmpsl
movlhps
inc
lods
std
and
dec
mov
and
mov
cld
or
rolb
imul
lock
out
outsl
xchg
cmp
adc
gs
arpl
mov
int
aad
lea
cmp
pop
push
in
popf
das
dec
sbbb
mov
lock
mov
je
inc
lahf
stos
call
jno
mov
loop
xlat
push
and
fstpt
in
frstor
adc
inc
mov
ja
bound
or
arpl
xchg
lods
adc
pop
fistps
adcb
jecxz
sti
mov
sbb
add
xchg
inc
pop
jno
inc
cmp
test
nop
push
fisttpl
insl
cld
cmc
jecxz
icebp
adc
int
mov
js
push
in
sbbb
xchg
aas
test
pop
dec
test
sbb
adc
decb
out
jnp
jno
lcall
ja
lods
adcl
add
popf
inc
sbb
cmc
or
adc
jge
pop
push
jns
mov
jle
xchg
sub
and
fldcw
cld
aad
in
repnz
sbb
pop
outsb
add
dec
push
xorb
xor
in
jl
push
test
outsl
pop
fidivrs
mov
sbb
stc
sbb
push
dec
test
and
addr16
mov
stc
ss
mov
adcl
popf
push
popf
or
std
arpl
sub
aam
mov
jp
arpl
push
sbb
xchg
addr16
repnz
xchg
dec
std
in
cmp
pushw
test
cmp
mov
cltd
cmpsl
and
jne
push
mov
mov
in
test
fwait
dec
fucomp
imulb
notb
adc
xchg
jmp
inc
mov
jae
sbbb
adc
cmp
mov
mov
adc
cmp
xor
loopne
sub
scas
scas
ret
pop
adc
inc
jge
and
mov
jae
andb
mov
ja
or
push
test
inc
cld
push
daa
mov
mov
int3
xchg
pop
aad
or
or
outsl
pop
in
inc
dec
push
xor
sub
stc
inc
testl
mov
jno
les
jle
mov
les
mov
pop
mov
push
mov
into
dec
movsbl
sub
pop
loop
call
pop
add
enter
in
pop
fld
iret
push
les
xor
xor
xlat
imul
mov
xchg
pop
and
push
cmp
jecxz
pop
jmp
mov
leave
je
rep
decb
in
mov
js
jns
mov
sub
fnstcw
leave
ffree
pop
pop
call
aaa
and
out
scas
pushf
cld
xchg
fistl
scas
mov
je
xchg
pop
inc
xlat
test
adc
push
add
cmp
mov
pusha
dec
shrb
mulb
add
out
lea
push
mov
xchg
push
popf
push
std
add
mov
dec
je,pt
mov
adc
jne
jno
adc
rcll
les
shlb
lahf
pop
adc
mov
pop
mov
mov
xor
xor
hlt
inc
lods
mov
jle
gs
mov
mov
bound
ljmp
out
and
mov
stc
or
ficompl
lret
push
jle
jge
add
xor
call
lcall
push
lea
je
insb
adc
adc
je
mov
int3
pop
outsl
testb
mov
mov
fwait
push
jo
or
and
int
cmpsl
loope
stos
add
mov
jbe
cli
int
fiaddl
mov
xchg
mov
addl
xchg
sbb
ret
pop
cmc
cmp
jl
cwtl
loope
mov
shr
stc
adc
mov
jmp
cmp
push
inc
test
dec
shrl
fisttpl
lods
outsl
repz
frstor
and
pop
cmp
je
and
fdiv
aaa
and
out
cmp
mov
cmp
sarb
daa
inc
mov
push
ljmp
popf
mov
imulb
movsl
adc
fwait
xor
mov
inc
sahf
xor
xor
push
leave
loope
sbb
cmpsl
xchg
movsl
out
in
and
int
test
adc
pop
inc
sbb
enter
repnz
add
adc
hlt
mov
in
dec
pop
jg
das
js
arpl
mov
push
popa
mov
aas
sahf
daa
add
out
ret
arpl
jle
out
test
pop
xchg
shlb
mov
out
or
mov
les
mov
or
jmp
ret
cld
xlat
pop
mov
lds
mov
adc
add
inc
lods
movsb
cmp
push
sub
mov
in
fwait
loope
out
int
xchg
sub
ljmp
or
das
test
int
mov
cwtl
fs
mov
mov
xchg
lret
adcb
ja
xchg
dec
jb
inc
xchg
mov
test
out
or
lret
stc
in
inc
push
dec
xor
or
shl
test
adc
into
hlt
ret
loop
rcrb
dec
mov
pop
test
pop
sub
ret
mov
mov
jge
mov
in
mov
dec
gs
lock
inc
pop
subb
add
movsb
inc
pop
pop
jbe
enter
and
dec
jg
jne
xor
or
test
cmpsb
push
in
nop
add
fsubl
mov
pop
decb
dec
push
scas
test
push
add
push
xchg
sub
pop
pop
mov
add
jo
ss
in
mov
xchg
testb
cli
or
ret
call
lret
or
fsubr
dec
jnp
dec
and
inc
push
or
call
in
xor
loopne
pop
pushf
sub
xorb
add
addb
repnz
adc
adc
mov
lock
jnp
xchg
rcl
jns
sub
mov
or
pop
shll
sbb
int
pop
add
int
push
xchg
stos
cmp
sub
je
adc
aad
mov
fists
loop
dec
and
or
jle
mov
push
mov
mov
pusha
lret
mov
mov
adc
pop
std
cltd
sarl
adc
scas
dec
sbb
pop
addr16
sub
test
hlt
bound
inc
lret
inc
jnp
push
cmp
cmp
lret
outsb
lds
add
out
inc
mov
mov
stos
stos
and
mov
ljmp
scas
sbb
mov
roll
sbb
enter
cli
iret
lret
sub
pusha
lods
mov
and
fcompl
icebp
mov
mov
popa
pop
test
fcomi
dec
andb
rolb
out
test
pop
in
jno
sub
clc
cmp
mov
xor
andb
aad
shlb
test
stc
aad
or
repz
push
rclb
add
sahf
xor
test
jge
repz
sub
lea
aad
push
ja
out
mov
mov
pop
hlt
mov
fbld
mov
arpl
dec
sbb
lea
xor
and
sub
aas
inc
sbb
lock
push
sahf
sbb
mov
jbe
or
es
jl
mov
push
call
xchg
dec
dec
sbb
out
ret
or
xchg
std
ja
push
test
mov
adc
pop
jne
jp
xabort
andl
imul
hlt
subl
sub
es
adc
popa
fdivrl
fisttps
mov
aam
dec
movsl
or
mov
aam
mov
pop
lock
fiadds
lcall
pop
xor
mov
jge
cld
inc
and
hlt
adc
movsb
fs
xchg
sub
ljmp
rcll
fiadds
mov
jge
movl
adc
push
jmp
ss
shlb
out
sti
xchg
mov
lret
push
and
add
xchg
inc
xlat
ret
loop
push
stos
adc
lock
ror
test
mov
jae
imul
sbb
icebp
push
jno
dec
sub
inc
cmp
adc
popf
inc
outsb
push
addr16
jl
subl
add
fnsave
fildll
or
add
or
int3
ja
cmc
cmp
imul
lea
mov
cmpsb
loope
pop
aad
xchg
push
and
and
pop
inc
ss
push
fcoml
iret
das
movb
and
icebp
push
cmp
outsb
adc
ss
jo
loopne
rcrl
sbb
je
or
and
and
jb
pop
xchg
testl
sbb
test
fmuls
rol
sbb
test
mov
iret
xchg
lret
icebp
inc
loope
insb
adc
das
popa
aaa
insb
jb
push
mov
xchg
mov
test
and
dec
les
enter
nop
pop
inc
lret
bound
das
jmp
movsl
add
add
pop
cwtl
outsb
or
vphaddubw
stos
push
lods
icebp
sub
aam
dec
push
sbbb
or
push
fucomip
les
jge
pop
cmpsb
adc
leave
fbld
xchg
leave
loop
adc
lds
ss
cmp
inc
add
fdivs
mov
pop
cmpsb
or
std
lcall
adc
add
mov
in
std
icebp
xor
mov
xlat
mov
addr16
inc
mov
pop
mov
adc
decb
sub
ficomps
inc
mov
add
jns
jae
cmp
add
dec
cmp
inc
pop
sbb
pop
dec
pop
dec
hlt
mov
cmpsb
cmp
push
shrb
mov
mov
movsb
cltd
dec
add
test
pushf
jnp
or
push
dec
and
into
popf
ds
push
xchg
push
pop
mov
cmp
sbb
ss
orb
add
je
mov
clc
or
mov
leave
xchg
aam
push
jmp
mov
cli
add
push
mov
push
imul
adc
rcrb
lcall
cmp
clc
aas
out
pop
cltd
insl
daa
cmc
aaa
fimuls
push
aaa
jge
sbbl
fwait
ja
mov
jge
test
push
shlb
nop
and
adc
cmpsl
jbe
push
or
shlb
cs
ljmp
mov
pushl
jmp
test
in
jae
adc
outsl
mov
xor
cli
lcall
jns
mov
rcll
scas
jp
sub
jae
sub
jmp
dec
sbb
popf
fdivp
add
sub
push
mov
pop
mov
inc
xchg
out
sbbl
fidivrl
add
cmpsb
cmpsb
loopne
adc
outsl
inc
insl
andl
stc
or
lahf
scas
sbb
addb
adc
inc
sbb
data16
lret
into
outsb
adc
mov
stc
push
cmpb
pop
adc
and
xlat
dec
cmp
mov
fsubl
jmp
pusha
dec
xor
jp
lcall
rclb
push
mov
std
stos
inc
sbb
ja
mov
xchg
js
iretw
jbe
cmp
xchg
lods
jp
adc
add
pop
loopew
xchg
fcompp
jae
addb
push
inc
jmp
mov
rolb
out
mov
movsb
jne
sub
xchg
shll
stos
stc
aas
bndldx
cmp
and
repnz
mov
jne
jl
lret
xchg
push
sub
sub
pop
pop
test
mov
ret
add
or
push
frstor
shld
jnp
xor
mov
rcr
dec
add
xchg
cli
push
scas
xchg
mov
push
iret
and
pop
jmp
inc
sub
adc
jnp
and
cld
push
pop
nop
xor
dec
fistpll
fs
shlb
adc
in
xor
data16
adc
aas
clc
arpl
rcrb
mov
iret
fildl
movsl
push
fcomps
push
jns
testl
mov
push
push
repz
ss
dec
pop
inc
sbb
dec
in
mov
fildl
popf
or
cs
pop
mov
mov
push
jmp
push
in
icebp
xchg
sahf
repz
icebp
mov
cmc
jl
fwait
inc
dec
adc
dec
and
pop
xor
pop
xor
lahf
scas
scas
mov
xor
arpl
inc
hlt
add
push
xor
jmp
ret
xor
mov
sarl
mov
or
jle
sahf
cmp
sub
mov
mov
mov
sti
outsl
push
cmp
add
leave
or
in
sub
pop
jbe
push
iret
cmpb
test
fdivl
in
pop
push
sbb
xchg
dec
jne
jae
sub
das
pop
mov
cltd
cltd
movsb
jno
sub
pushl
rcrl
inc
lea
sbbb
out
push
lea
cmp
jmp
mov
jae
mov
call
xor
outsb
dec
adc
add
or
dec
push
movsl
ss
mov
cmp
inc
popf
xor
lds
jae
inc
out
cmp
and
lcall
fwait
xor
adc
movsl
inc
sbb
push
inc
outsl
rorl
xchg
add
in
push
dec
dec
addl
cmpsb
adc
pop
jmp
adc
push
mov
push
push
jno
scas
inc
and
int
fsubrl
imul
repnz
xor
adc
inc
or
imul
pusha
pop
push
popl
aad
add
add
lea
cmp
jo
sbb
pop
inc
and
ja
cld
xchg
adc
or
mov
les
test
insl
add
js
and
jbe,pt
inc
mov
pusha
sarl
xor
add
push
sbb
rolb
mov
push
inc
mov
xchg
push
out
mov
in
test
adc
jg
mov
jp
scas
and
jle
mov
pop
jmp
add
pop
data16
xchg
icebp
xchg
test
lret
or
outsb
nop
and
test
cli
dec
iret
sub
call
daa
lods
inc
pop
push
lods
add
mov
and
sarl
repnz
adc
dec
sbbl
xchg
cmp
mov
or
sub
push
push
pop
jb
xchg
xchg
xchg
negl
push
and
dec
sub
enter
cmp
jl
in
ret
pop
popf
popf
repz
imul
jno
movsb
jo
test
add
mov
daa
mov
outsl
flds
adcl
mov
dec
inc
call
dec
add
hlt
pushf
lods
hlt
add
push
stos
popf
jmp
in
gs
jmp
in
add
sub
les
inc
jle
fsubs
push
mov
out
push
repnz
aaa
sti
lcall
mov
push
iret
jecxz
in
loop
push
clc
lock
lods
sbb
adc
cmpsb
jmp
pop
ljmp
ljmp
push
xchg
out
mov
xchg
sub
subb
lcall
jo
add
lret
xchg
cmp
push
in
mov
xor
in
aas
push
inc
push
bound
frstpm(287
das
insl
or
jnp
sbb
mov
or
and
pop
test
xchg
stos
mov
sub
stos
inc
add
dec
dec
setge
es
and
jae
insb
mov
lds
ss
outsl
cmc
lret
pop
cmp
mov
dec
push
cmp
cli
fs
sub
cli
insb
imul
lret
dec
cld
ret
and
xor
mov
mov
in
or
jp
in
popa
fwait
dec
fldenv
ja
aas
dec
cmc
pop
jnp
add
push
call
cmp
cld
lods
inc
cs
push
mov
lods
inc
fisttpl
mov
lret
pop
mov
xor
shr
sbb
cmp
cmc
adc
or
enter
jp
fst
test
adc
outsl
push
out
in
xchg
aad
outsb
out
pop
mov
xor
xchg
pop
jge
jmp
add
inc
sbb
sbb
ss
ficomps
sbb
mov
jg,pn
addr16
stos
pop
aaa
push
out
push
ljmp
cmpsb
jg
mov
sbb
aas
leave
pusha
jno
jmp
pop
sbb
stc
or
pop
cwtl
lock
mov
mov
pop
mov
aam
pop
mov
mov
aam
inc
cltd
out
pop
movsb
mov
jbe
push
xor
inc
les
orb
pop
and
popa
imul
mov
stos
inc
and
jno
pusha
jle
xlat
pusha
add
pop
cmp
in
push
push
inc
clc
jg
sbb
cmpsl
jle
ficomps
out
sub
stos
int
push
jle
inc
add
jp
sbbl
sahf
xor
add
fdivl
ret
dec
push
pop
xlat
addl
cltd
xor
mov
pop
test
cmp
cld
mov
add
push
out
xor
push
inc
into
push
pushl
cs
pop
pop
or
test
sbb
pop
imul
and
xchg
mov
cld
call
cmp
mov
std
out
test
test
xor
adc
out
and
push
xor
popl
or
mov
or
pop
scas
lret
je
and
pop
mov
cmp
push
out
bound
int
xorl
sbb
mov
pop
out
outsb
add
rolb
mov
pop
popf
sub
lahf
shrl
ds
pop
cmp
inc
push
add
xor
sub
fdiv
pop
jb
jecxz
ret
dec
shll
mov
pop
repz
jp
push
imul
cmp
and
scas
rolb
xor
jne
jns
jl
rcrb
dec
int
inc
xchg
es
fstl
or
aad
test
in
out
ss
inc
jecxz
pop
mov
push
ljmp
repnz
and
jne
inc
movsl
add
insl
push
mov
stos
jne
mov
push
adc
cmc
sbb
out
pushf
cmp
lahf
xor
adc
jbe
lret
insb
add
rolb
cli
xchg
jns
cmp
sub
in
fdiv
mov
shlb
test
jb
jg
dec
mov
jge
enter
pop
add
cltd
sbb
in
xlat
ret
les
jo
outsl
inc
fs
fs
in
addb
dec
lock
clc
xchg
jp
xor
cmp
mov
mov
jno
shll
jle
dec
mov
jo
shll
dec
loopne
repnz
data16
pop
shll
fwait
outsb
test
insb
sti
jl
clc
or
jmp
dec
add
aam
xchg
rcrl
leave
arpl
jo
pushl
jo
sti
aam
lods
xchg
testl
fldl
stos
mov
sub
and
cmp
fidivrs
out
or
cmp
push
mov
xchg
mov
jp
pop
lds
pop
test
arpl
xchg
insb
outsl
add
popf
daa
mov
fwait
aaa
mov
fidivrl
popa
leave
into
jmp
adc
inc
mov
adc
jno
mov
aaa
add
mov
orl
sub
xor
int
enter
jle
fdivl
lea
mov
mov
fs
lock
inc
test
xlat
mov
or
add
fnsave
cmpsl
ret
jge
or
dec
fisubs
jmp
clc
pop
mov
xor
or
leave
and
testb
pop
pop
xor
jmp
mov
repnz
fdivl
out
mov
addb
add
sti
or
addr16
push
sbbl
decb
xor
test
cmp
add
push
cmpsb
leave
bound
jp
sbb
shll
mov
in
mov
xorb
mov
xor
ds
push
bound
stos
jnp
mov
cmp
adc
dec
fidivs
imul
pop
mov
mov
inc
add
inc
cmpsb
xchg
pusha
and
popf
aam
inc
mov
addr16
ja
hlt
mov
nop
mov
pop
xchg
je
addr16
lds
jle
pop
mov
or
popf
ret
xlat
jne
add
out
cmpsb
push
mov
jecxz
cmp
push
sbb
mov
pop
aaa
sbb
cltd
mov
mov
das
stos
inc
pusha
pop
das
mov
fadds
adc
in
lea
adc
repz
mov
adcb
xchg
rorb
movsl
test
push
enter
push
cmpsl
pop
clc
mov
mov
out
xchg
sub
cmp
insl
test
sub
dec
xchg
add
inc
push
loop
adc
xchg
jo
aas
jl
lods
pusha
sub
cwtl
jp
pop
jg,pt
push
mov
popa
stc
push
push
cwtl
lds
es
sub
icebp
pop
xorb
lock
add
into
fs
xlat
sub
pop
push
xor
ljmp
dec
popa
shll
mov
das
andl
cmpsb
sbb
xlat
lods
in
jb
in
lods
jg
test
stos
sahf
xlat
adc
movsb
int
pop
hlt
das
jge
aad
fwait
inc
shll
ret
repz
pushf
inc
add
sbb
jecxz
cmp
mov
xor
cmp
stos
add
je
inc
gs
xchg
jns
push
mov
dec
aad
sbb
test
xor
enter
mov
mov
jge
orb
jp
cmp
add
loopne
pushf
out
mov
inc
jle
dec
add
xchg
mov
xchg
xchg
jecxz
movsb
andl
daa
mov
and
cmp
enter
out
mov
dec
inc
int
cmp
andb
call
mov
call
push
aaa
addl
mov
and
xlat
dec
imul
fmul
jbe,pt
addr16
xchg
negb
icebp
jl
test
inc
mov
rcll
mov
pusha
addb
push
aaa
bound
inc
mov
inc
pop
xchg
or
xlat
cmp
jp
jge
push
sbb
inc
or
mov
jnp
or
stos
mov
mov
cmp
mull
faddl
fdivl
or
mov
sub
aas
iret
sbb
out
cmp
imul
mov
lcall
mov
mull
lods
inc
jb
sti
xchg
jmp
xor
sub
inc
pop
jo
popa
js
jbe
lods
addl
out
pop
mov
orb
sbb
hlt
mov
dec
sahf
push
dec
add
ds
out
cli
mov
sbb
mov
sub
lds
enter
aam
ror
js
decl
mov
push
aaa
fidivl
add
add
fs
inc
and
xchg
ss
pop
inc
pushf
or
fmull
xor
out
jg
jg
push
mov
ficompl
jbe
ljmp
test
jnp
pop
xchg
jne
jne
xchg
and
cmp
adc
xchg
stos
pop
ret
xor
pusha
and
ss
out
out
jge
idivb
push
pop
lds
divb
call
outsl
lahf
add
adc
aad
or
and
ficoml
mov
mov
push
xor
mov
xchg
arpl
mov
sbb
inc
aam
mov
xchg
jmp
in
and
xchg
push
nop
ja
mulb
and
mov
xchg
jge
imul
addr16
hlt
mov
dec
jnp
or
jl
mov
jg
jns
cltd
xor
loop
push
out
sbb
dec
inc
pop
into
imul
and
jnp
add
mov
loopne
pop
push
adc
dec
lret
jp
inc
arpl
aaa
lds
inc
push
outsl
scas
mov
ljmp
loop
and
push
movsl
sar
mov
cmp
push
mov
fisubrs
xchg
test
fdivl
dec
lds
shlb
popa
xor
in
icebp
adc
push
nop
insb
mov
jmp
jecxz
inc
decl
shrb
iret
xor
add
pop
jcxz
add
cs
test
push
mov
sbb
movsb
add
test
mov
mov
pop
icebp
shrl
jo
adc
and
ljmp
fs
adcb
dec
sahf
xor
aas
sub
mov
scas
dec
das
iret
inc
mov
jb
in
dec
xchg
xchg
sbb
and
lds
pop
ret
pop
daa
mov
lds
ds
pop
pop
cmpsb
push
gs
mov
icebp
inc
loope
xchg
add
cmp
cmp
or
mov
je
pop
push
inc
aam
push
dec
ljmp
cs
stc
nop
pop
mov
je
nop
scas
mov
push
push
cmc
mov
ss
or
lods
add
arpl
je
fs
mov
mov
sub
data16
push
xor
movsl
adc
jnp
and
sbb
pop
lret
bound
push
jmp
jb
or
sbb
in
je
call
icebp
sbbl
arpl
jl
add
js
insb
add
jmp
sbb
mov
out
test
aad
cs
aaa
and
mov
or
ja
xchg
fsubrs
dec
popf
cmp
out
inc
or
mov
sub
adc
cli
dec
jp
fsubl
lds
inc
xchg
lods
lds
xchg
out
out
xchg
sbb
sub
sti
fwait
inc
mov
jmp
mov
xchg
stc
int3
mov
adc
mov
aam
adc
in
and
daa
jnp
xchg
ljmp
insl
iret
jne
lods
jl
inc
dec
mov
shl
outsl
iret
sbb
hlt
int3
mov
pop
cmpsb
add
push
add
jbe
mov
xchg
insl
sbb
dec
push
or
nop
cmpsb
fsubl
and
xor
jae
lret
dec
push
test
add
rcrl
int3
test
and
sub
rcr
push
and
loop
sub
test
scas
pop
out
bnd
movsl
add
cmp
adc
add
mov
lret
sbb
hlt
dec
cwtl
sub
cwtl
cld
push
sub
pop
es
xchg
les
outsb
jns
leave
pop
js
sbb
sbb
stos
std
push
lds
xor
shl
daa
push
mov
jecxz
cld
mov
cs
mov
adc
xlat
mov
push
pop
mov
les
inc
inc
mov
sbb
pop
ljmp
out
lds
shlb
mov
mov
aad
lea
mov
jg
push
xor
push
cmp
rorl
mov
jae
add
outsl
outsl
daa
jl
leave
xchg
dec
popf
scas
sbb
or
push
and
pop
mov
out
mov
cmpsb
sbb
mov
mov
popf
push
fs
xorb
mov
pusha
mov
test
popa
popf
push
or
outsl
jno
jmp
add
xor
mov
rcrl
cli
push
and
aaa
fsubrs
xchg
pop
inc
test
out
lret
pop
in
push
fcomip
jae
jecxz
jb
enter
rclb
xchg
adc
mov
pop
icebp
mov
xlat
jnp
mov
xor
es
cld
data16
cmp
mov
jbe
loop
out
jb
mov
push
dec
xor
dec
push
jbe
add
sbb
xor
mov
jecxz
stos
notl
xor
test
adc
das
lret
add
sub
int3
test
in
fldln2
loope
jge
lds
stos
add
jno
pop
test
js
mov
mov
mov
xchg
push
inc
fadds
mov
push
mov
imul
lock
mov
or
andb
mov
cli
movsb
or
pushf
pop
cmpsb
test
adc
adc
dec
dec
push
push
push
pushf
jae
xchg
cmc
and
mov
push
pop
add
jbe
lcall
and
into
push
mov
jecxz
add
xchg
mov
jae
into
hlt
inc
cmp
adc
inc
xlat
rclw
ja
cmc
push
roll
push
dec
es
out
inc
pushf
push
js
xor
jne
mov
cs
je
repnz
xchg
adc
or
popa
jg
dec
hlt
jle
cs
hlt
xchg
jo
jge
lahf
mov
cmp
rcrb
and
pop
repnz
mov
dec
fisttps
rolb
xor
lea
clc
roll
xchg
icebp
or
cmp
sub
mov
pop
and
push
movsl
sbb
mov
and
adc
jns
testl
add
loop
sub
psllq
insl
popa
xchg
sub
jmp
cltd
xor
icebp
inc
push
in
jmp
push
cmp
lahf
fnstcw
es
sub
rcrl
adc
inc
jns
jmp
cmpsb
ret
dec
loop
lock
pop
and
in
mov
mov
or
out
sbb
fldt
or
rorl
rclb
mov
mov
push
cs
andl
shll
popa
mov
and
cmp
fdiv
js
insb
xor
push
negb
popf
and
lock
aam
cmpsl
ret
sbb
into
out
jne
add
inc
dec
das
jge
insl
jo
push
fsts
cmp
insb
inc
pop
test
push
adc
mov
cwtl
test
out
cmpsb
les
pop
setge
and
cmpsl
loope
mov
mov
push
and
push
je
xchg
push
xor
xchg
js
and
dec
cmpsb
dec
dec
adc
shlb
pop
sbb
icebp
movsb
iret
call
mov
fmul
flds
arpl
jo
adc
pop
lds
divl
leave
sub
loopne
ja
sbb
jne
cmp
sbb
mov
std
stos
adc
je
ret
jnp
mov
sub
shlb
lods
not
xchg
pop
push
sub
cmp
icebp
loope
inc
cmc
xchg
sarl
incb
orl
jbe
outsl
movsl
sbb
sahf
jge
and
ja
lea
and
push
xlat
jns
std
or
lcall
imul
fidivs
xor
andl
sub
mov
or
mov
push
pop
subb
bound
insl
sub
add
out
and
add
lcall
pop
mov
push
sbb
shlb
mov
and
jecxz
pop
in
adcl
dec
pop
lret
cmp
cltd
jne
mov
test
xor
loop
mov
repz
mov
or
push
xor
xchg
enter
mov
mov
xlat
loopne
jns
negl
xchg
lcall
sub
xchg
sbb
lahf
add
cmp
ljmp
lcall
scas
xor
lods
test
inc
jnp
cmp
loopne
xchg
pop
pop
testl
cmpl
stc
and
inc
loope
pop
or
sbb
push
push
sbb
hlt
dec
jne
jae
xlat
xchg
jno
pushf
xor
lahf
aam
sub
aam
leave
ljmp
roll
lock
lods
mov
cmp
adc
mov
movsb
cmp
testl
xchg
adc
and
jp
adc
fldl
repnz
pop
mov
xor
mov
push
push
mov
xlat
jecxz
add
cmp
pusha
pop
cmpsl
aam
stos
sarb
xor
shrb
mov
dec
dec
pop
inc
mov
inc
and
test
mov
xor
decb
inc
sbb
lods
add
cmp
cmc
hlt
dec
and
cwtl
inc
pop
jo
or
sub
push
sub
xchg
jbe
pop
pop
mov
pop
sub
in
es
jle
xchg
xor
push
nop
adc
pop
outsb
cli
mov
mov
xlat
cs
push
mov
ret
mov
mov
leave
jbe
adc
aam
cmp
out
leave
enter
in
mov
or
int
sbb
iret
mov
cwtl
out
stos
jmp
sub
repz
cmp
mov
push
mov
cmp
cmp
lret
data16
int3
sub
xchg
pusha
das
jbe
push
pop
jmp
push
pop
mov
xorl
mov
xor
adc
aaa
pop
mov
cli
ds
stos
and
int
add
adc
dec
in
xor
test
cmp
out
xlat
sbb
shl
aas
cwtl
jl
cmp
sbb
cmp
mov
ja
pop
mov
and
fidivrs
es
or
repnz
out
and
pop
repnz
es
cltd
inc
ljmp
inc
push
xchg
sub
cmp
int3
jle
dec
int3
push
data16
scas
movsl
lahf
movsb
or
ss
cmp
mov
lods
sahf
lcall
out
mov
ds
into
decl
pop
sbb
ss
or
cli
add
cli
cmpsb
cmp
ljmp
push
sahf
jns
push
stos
inc
lret
or
mov
cmp
fsubrs
test
icebp
clc
xor
inc
xor
aaa
push
repnz
xor
xchg
push
inc
pushf
add
je
mov
xchg
xchg
ja
adc
sub
repnz
and
mov
mov
cli
faddl
lods
testb
inc
sub
xchg
not
inc
js
pop
outsb
cmp
ret
fdivr
xor
outsl
adc
rclb
loop
movsb
push
test
es
enter
daa
loop
fcoml
push
ja
mov
push
mov
pop
sbb
loop
sub
lret
out
sbb
aam
cmpl
inc
adc
xor
scas
adc
shll
xorl
adc
xchg
pop
pop
lock
sbb
aad
dec
jg
jle
lock
into
inc
fisubrs
ret
hlt
pop
call
and
int3
and
push
jne
imul
lds
mov
push
xor
in
push
mov
dec
int
jge
pusha
mov
push
jbe
jmp
lahf
lock
aad
scas
sbb
push
jp
out
cmc
repz
sbb
mov
push
push
adc
cld
mov
sub
repnz
movsl
adc
pop
sub
cmp
adc
pop
mov
shrb
jg
imul
mov
pop
insb
sub
icebp
std
or
xchg
test
test
jp
pop
sub
xchg
out
scas
xchg
cmp
bound
inc
pushf
mov
decl
popf
and
push
ds
xor
push
mov
out
cmc
sbb
insb
inc
add
rclb
scas
ds
mov
jbe
in
push
xchg
xchg
mov
imul
pop
dec
xor
arpl
imul
xchg
cmpsl
aas
adc
jge
js
mov
fsub
push
lcall
stos
shl
jne
mov
setns
rcrb
int
mov
movsb
sbb
cmp
lock
mov
and
arpl
imul
add
mov
inc
cmpxchg
lret
dec
aaa
mov
out
xchg
mov
push
mov
stos
or
mov
hlt
cmp
inc
mov
push
test
cmp
cmp
mov
or
or
loope
sub
and
or
jae,pn
or
mov
mov
mov
or
xor
aam
repz
push
fsub
push
add
jb
adc
jecxz
popf
movsb
repnz
push
and
ficoml
out
sub
dec
xor
in
xchg
loopne
fistps
inc
dec
mov
dec
dec
pop
pop
xchg
mov
lcall
frstor
test
into
gs
or
gs
add
xor
jae
jnp
jns
xor
pop
stc
inc
mov
pop
lcall
xor
jecxz
sub
mov
cmpsl
in
int3
and
leave
jbe
push
jmp
adc
pop
mov
aam
xchg
push
adc
cmp
jmp
sbb
pop
dec
cmpsl
sbb
sti
stc
scas
mov
push
mov
or
insl
push
mov
push
xor
pushf
xor
jbe
jae
ja
sub
adc
sbb
jno
sbb
cwtl
push
aaa
dec
cmp
adc
jmp
es
jnp
sub
in
incl
jp
lock
insb
rorl
lret
dec
pop
sbb
arpl
mov
std
xchg
sbb
mov
vpsubw
cmp
aam
adc
jae
or
inc
mov
push
xor
sbb
lds
cmp
xchg
sbb
mov
mov
sub
jo
out
inc
mov
dec
test
pop
mov
adc
pop
dec
adc
clc
mov
push
push
inc
pop
dec
out
arpl
jae
out
test
and
cli
push
repnz
and
pop
mov
movsl
pop
frstor
sbb
mov
out
xchg
push
push
lock
adc
xor
jo
cltd
test
dec
test
and
es
jno
in
adcl
xor
std
or
xor
push
fstps
mov
aas
aaa
aas
pusha
jmp
or
add
les
adc
or
js
add
fcmovnb
xchg
adc
vandps
nop
fs
stos
shlb
fnstcw
fisubs
xorb
movsb
mov
leave
pusha
sti
jo
pop
mov
push
loope
js
adc
sbb
lods
mov
orl
sub
mov
cwtl
or
rclb
xchg
xor
enter
inc
imul
dec
loope
add
dec
mov
sbb
cmp
pop
clc
add
and
cmpsb
clc
cmpb
arpl
int
adc
jae
and
fwait
mov
sti
cltd
das
cmp
cmp
jae
pop
rcrl
lods
xchg
out
insl
mov
loop
clc
fwait
sbb
cs
outsb
ret
xchg
ja
ret
and
andb
xor
adc
jmp
add
mov
iret
repnz
and
mov
lea
jbe
sub
dec
pushf
mov
adc
xchg
fstps
sbb
pop
dec
flds
and
ljmp
movsl
outsb
data16
lahf
inc
ret
xor
fwait
loope
repnz
pop
rcrb
adc
cmp
lret
push
dec
jp
mov
icebp
push
cwtl
fdivrp
enter
pop
xchg
call
add
pop
xchg
cmp
int
arpl
in
sti
xor
outsb
add
nop
xchg
pop
mov
rcrl
mov
es
xchg
loop
sbb
and
and
int
mov
push
xchg
jle
ss
or
jle
mov
sbb
sahf
xchg
in
stos
in
iret
cltd
imul
loope
pusha
ljmp
jbe
mov
testb
xlat
sbbl
fwait
jnp
mov
popf
cmovne
xchg
into
cmpsl
fldcw
cmp
push
xor
xchg
mov
mov
movsb
push
call
inc
adc
push
call
ja
outsl
mov
sbb
pop
cmc
cltd
pushf
das
cmp
dec
cmp
mov
pop
imul
add
or
sub
fidivrs
mov
insl
jne
fs
sub
repz
in
call
mov
lret
notl
std
inc
sub
decb
lret
jbe
and
in
jmp
and
sub
ja
pusha
in
push
sbb
sahf
mov
mov
imul
mov
pop
subl
js
fldt
lahf
clc
into
int
cwtl
and
pop
pop
lods
mov
js
cmp
or
cmp
sub
pop
xor
outsb
mov
loopne
jne
pushf
std
mov
insb
mov
or
inc
fmulp
sub
xor
and
mov
fwait
pop
xchg
ret
repnz
mov
jg
pop
fmul
mov
stos
std
push
push
cmp
sub
sahf
pop
push
in
stos
std
sub
je
add
addb
stc
scas
int3
and
jns
mov
lods
bound
jl
jmp
enter
push
jae
jge
rol
cs
iret
push
pop
nop
push
pop
lods
addr16
jge
ret
ljmp
inc
xor
cwtl
std
imul
sbb
adc
dec
sbb
adcb
je
cmpsl
sbb
cmp
xor
xor
aam
test
push
mov
js
and
out
sbb
adc
mov
push
mov
xchg
popf
out
jmp
pop
pslld
mov
adcb
xchg
inc
xchg
cmp
pop
pop
sub
xchg
cmp
ret
mov
push
test
test
lret
fldenv
inc
or
jo
sbb
pop
pop
dec
rorb
inc
das
cmp
push
xlat
rcl
pop
mov
ret
aas
xor
ljmp
mov
aaa
into
and
mov
jg
push
in
jg
add
inc
or
shr
daa
fsubrs
sbb
in
inc
xor
in
ja
and
scas
push
and
mov
mov
sbb
cmp
cmp
sbb
call
test
lret
cmp
push
lea
mov
insl
shl
ss
adc
ja
push
loope
adc
jle
inc
movsb
repnz
jbe
ss
leave
testl
cwtl
testl
scas
xor
inc
iret
push
or
in
jp
sub
lcall
adc
es
add
in
ljmp
jmp
ss
dec
push
fwait
in
mov
pop
fs
repz
adc
push
fisttps
sbb
mov
push
leave
adc
dec
jecxz
ds
pop
and
pop
subb
mov
hlt
lea
mov
sbb
sbb
xchg
push
mov
or
shll
adc
les
data16
ret
test
inc
inc
fistpl
lret
incl
dec
and
loopne
dec
lods
add
mov
pop
add
sbb
insb
paddb
cmp
sahf
and
pop
test
cmpsb
sub
or
xchg
and
pop
test
repz
dec
mov
and
push
out
test
fmuls
cwtl
out
cli
enter
addr16
add
mov
outsl
inc
xchg
and
insb
push
jno
pop
jbe
ret
aas
inc
push
xor
jb
push
and
mov
fdivrp
inc
leave
sub
inc
adc
pop
mov
mov
push
xchg
lods
and
lcall
cltd
stos
inc
lret
popf
jbe
sub
push
mov
jno
cmpsb
adc
push
jp
mov
out
push
jmp
add
xchg
ss
jno
push
add
jb
push
imul
pop
je
inc
jnp
sbb
leave
mov
xor
popl
imul
xchg
lds
test
lods
fstps
test
and
xchg
jo
pop
xor
push
repnz
lds
adc
push
push
or
adc
sub
xor
in
push
scas
aaa
dec
lahf
sub
cmp
repz
and
mov
or
sar
mov
pop
jnp
adc
hlt
jecxz
lock
and
mov
jne
pop
push
xor
aam
in
cltd
jo
pop
push
mov
sub
sbb
jns
cmp
and
movsb
mov
ljmp
mov
lcall
push
jnp
inc
fcmovnbe
mov
jle
loope
xchg
pushf
push
xchg
xor
and
shlb
fadd
lods
dec
pop
cld
sub
outsl
gs
jl
or
aam
pop
jns,pn
xchg
lahf
ljmp
inc
fs
in
xlat
mov
aam
sbb
cmc
jns
adc
pusha
or
and
sbb
jmp
mov
sarb
mov
add
pop
adc
pop
mov
ljmp
mov
lea
xchg
lods
dec
ret
loop
data16
lret
xorl
mov
into
imul
push
jne
inc
dec
pop
inc
stc
lods
dec
movsl
push
xchg
lods
fimull
push
lds
jb
adc
mov
test
inc
adcb
and
js
cld
mov
subl
or
cmp
push
or
inc
inc
cmp
xchg
and
inc
pop
hlt
ja
in
in
push
mov
push
lcall
ds
push
stos
lea
jmp
fisttps
mov
xchg
push
push
fsubrl
mov
mov
dec
jbe
or
lcall
ljmp
insb
stos
xchg
cmpsl
subb
push
pop
imul
mov
push
mov
mov
push
adc
sub
and
inc
cld
mov
pop
sbb
add
jns
xchg
js
and
cmp
pop
xor
or
es
fnstsw
inc
inc
push
popf
jno
mov
ret
in
adc
jecxz
ror
in
xor
outsl
cmp
mov
fs
testl
push
cmc
xchg
mov
push
xor
adc
das
push
int3
add
lret
shld
ficoml
ds
adc
mov
daa
xchg
jns
cmp
fsubrs
nop
popa
enter
push
lea
pushl
push
xchg
fdivs
xchg
mov
scas
inc
pusha
or
push
into
and
pop
cmpsl
mov
xor
leave
dec
ficoms
test
test
jo
clc
fstp
in
push
hlt
and
inc
adc
cmp
mov
dec
out
sbb
fisttpll
in
stos
cmp
mov
and
out
or
pop
stos
push
cmp
push
sbb
fnsave
fisttpll
cs
loopne
cld
dec
loop
shlb
mov
lock
das
jg
imull
mov
pop
jb
aad
roll
xor
cwtl
cmpsb
in
popa
mov
or
stc
add
xor
addb
sbb
xchg
fstpl
in
outsl
test
add
dec
inc
mov
mov
xor
sub
mov
adc
xor
call
sbb
sub
mulb
jge
cmpb
xlat
mov
xor
in
mov
sbb
jge
aad
rcll
add
dec
dec
xchg
cmp
lret
mov
cmp
outsl
loop
push
xor
pop
data16
pop
jmp
mov
jo
rorb
add
movsb
mov
movb
push
daa
mov
or
test
cmpsl
sbb
addr16
fcompl
test
out
dec
pop
cmpsb
ljmp
adc
in
inc
lods
sbb
or
movsb
cmp
jmp
push
imul
xlat
inc
call
pop
cmc
pop
mov
xchg
outsb
or
mov
aam
cmp
fsubrp
inc
into
mov
push
aas
leave
enter
bswap
dec
push
out
rcrb
dec
push
mov
jb
or
jmp
into
sub
clc
fcmovnb
call
aam
jg
pop
sbbl
rcrl
pop
loopne
nop
iret
dec
add
and
mov
insl
adc
pop
cld
sub
or
sbb
movsl
stc
out
fidivs
outsl
mov
fldl
std
enter
jmp
xor
inc
bound
shlb
xchg
cli
or
into
bound
add
fstl
insl
jl
pop
mov
mov
jo
cli
test
cmpsl
aas
aas
sahf
xchg
sbb
adc
push
add
mov
push
inc
outsb
adc
mov
daa
pop
jg
jecxz
dec
pop
jo
push
sub
iret
leave
jbe
clc
xchg
pop
movsl
std
in
in
jne
mov
mov
lds
mov
cmp
mov
popw
pusha
and
pushf
mov
xchg
pop
mov
push
jno
add
cmc
icebp
cld
outsb
pop
test
mov
mov
icebp
in
daa
gs
adc
std
iret
fildl
in
jp
and
mov
stc
pop
repz
fcoml
lcall
pusha
jne
sbb
aas
aaa
mov
rcr
aas
into
ret
or
dec
adc
lods
add
and
xchg
sahf
movsl
dec
ret
jecxz
cmc
jns
mov
mov
pop
loop
addr16
inc
movsl
in
mov
sbb
push
mov
or
bound
sbb
mov
sub
mov
fistpl
insl
sub
push
sbb
xor
daa
pop
in
fwait
rol
insl
lcall
xchg
and
pop
mov
daa
sbb
mov
mov
pop
adc
sub
imulb
xor
push
cmp
fldenv
push
iret
fst
add
jns
nop
aam
dec
inc
add
push
dec
push
inc
call
dec
dec
icebp
daa
cltd
mov
hlt
dec
js
jecxz
repnz
push
push
add
and
dec
sbb
dec
mov
mov
dec
and
insl
cld
fmul
mov
call
nop
adc
repz
data16
adc
lret
dec
xchg
push
add
outsl
and
or
std
and
inc
jge
out
adc
jecxz
lock
mov
fs
ret
xlat
lods
xlat
stc
iret
test
pushf
ss
gs
pop
cwtl
xlat
jle
push
xchg
fbstp
ds
push
xchg
and
inc
jno
jl
ss
sbb
sub
ljmp
mov
pop
sbb
adc
pushf
push
daa
cmp
mov
lahf
ds
je
hlt
pop
es
enter
fwait
iret
adc
and
add
and
adc
ret
sbb
adc
mov
es
es
add
xor
sub
xchg
fld
ds
hlt
cli
pop
loopne
add
cmp
insl
adc
ficompl
ret
insl
ss
xorb
loopne
jl
cmp
lock
pop
adc
or
in
adc
jle
das
pop
pop
pop
jns
aam
xchg
das
js
pop
xor
mov
lret
loop
pop
fwait
mov
xchg
and
xchg
jbe
jecxz
pop
cwtl
or
inc
and
fwait
push
out
jp
jge
and
adc
xor
outsl
fstpt
js
add
pop
aaa
fwait
cmp
aaa
push
repnz
scas
fdivl
inc
adc
mov
add
push
dec
and
lods
pop
fiadds
inc
in
in
jns
mov
or
jno
mov
daa
jge
roll
add
and
adc
js
sbb
mov
imul
stos
dec
pop
fcmovnb
ret
rolb
mov
push
outsb
jl
sub
scas
dec
test
xlat
nop
ds
mov
ret
fucomip
and
xor
and
cmp
push
test
inc
mov
insl
inc
pop
popf
popa
in
rorb
add
add
in
cltd
and
fnstenv
lods
fstl
mov
mov
jp
jg
mov
sub
dec
sarl
pop
and
bound
leave
inc
xchg
sub
xchg
mov
push
addr16
ror
dec
ret
out
inc
xchg
daa
push
pusha
dec
es
mov
sbb
mov
in
daa
cmp
andb
lods
jns
xlat
push
popa
negl
jo
movsl
lods
mov
jecxz
inc
inc
xlat
pop
fs
jno
loope
call
cmp
inc
lods
cmp
lds
outsl
or
jp
inc
sub
cmp
imul
ja
mov
icebp
push
push
jle
out
cli
nop
dec
sbb
loope
rolb
sub
iret
sub
mov
icebp
femms
out
ljmp
shr
cmp
repnz
gs
popf
xor
jmp
xchg
or
in
xor
cli
wrmsr
dec
sub
pop
test
sbb
bound
addl
add
push
xchg
test
xorb
adc
cmp
es
call
mov
negb
fiaddl
jg
movsl
xchg
sub
out
dec
outsb
sahf
xor
sbb
inc
faddp
test
jp
pop
hlt
xchg
lcall
jb
add
stc
sahf
push
mov
sbb
fidivrs
inc
stos
jns
fidivs
xor
pop
mov
fnstsw
subb
sahf
xor
sbb
push
fidivs
in
jp
pop
hlt
xchg
lds
jle
cmp
push
mov
sbb
pop
movsb
jp
fidivs
xor
pop
cmpsl
inc
fisttpll
sub
sbbl
popf
jo
sbb
sbb
repz
movsb
hlt
add
pop
lods
xor
shlb
icebp
push
popa
pop
jae
xlat
ret
jecxz
sub
fldl
rdpmc
andb
out
arpl
rol
and
cmp
insb
roll
mov
hlt
xchg
loope
mov
les
pop
lock
cwtl
fwait
xor
adc
int3
add
and
stos
and
out
jnp
testb
pop
in
icebp
aam
hlt
loop
imul
push
cld
adcb
fisttpll
mov
test
mov
pop
dec
mov
out
cmc
sti
test
mov
pusha
add
lcall
cmp
push
fnsave
mov
sub
xor
in
push
lahf
and
cld
fldcw
inc
jo
sbb
sbb
pop
adc
pop
inc
jb
and
lcall
aas
lahf
ret
sbb
mov
scas
popf
iret
or
jne
dec
fbstp
add
xchg
data16
shr
popf
insl
push
gs
mov
mov
clc
cld
mov
xchg
test
dec
les
pop
cltd
push
inc
and
frstors
js
xor
and
cmp
sub
or
or
outsb
add
push
inc
mov
fs
or
xor
addr16
bound
dec
fiaddl
mov
push
fadds
cmp
fdivl
pop
jecxz
nop
in
mov
mov
bound
and
push
sub
ret
mov
sbb
fiadds
inc
nop
dec
lods
dec
loope
mov
test
in
aaa
or
je
dec
pop
cli
cwtl
dec
fadd
pushl
push
xor
xchg
and
pop
pop
push
push
call
lret
fwait
jo
inc
fdivrl
lcall
sahf
lcall
lahf
shrb
inc
jecxz
punpcklwd
xchg
jns,pn
xor
and
mov
xchg
lret
sti
mov
imul
jo
dec
add
xchg
mov
ret
hlt
stos
and
inc
cld
iret
cs
cltd
dec
and
icebp
xchg
iret
retw
invd
lahf
inc
sbb
out
xchg
ror
gs
sbb
mov
sahf
ror
incb
and
call
or
scas
adc
andl
add
shlb
arpl
sti
int
mov
inc
push
mov
aaa
ds
fisubl
xor
test
lret
xlat
sub
pushf
mov
xchg
nop
and
aas
or
sub
sbb
pop
stc
cmp
movsl
nop
rcll
iret
push
cmp
leave
or
add
out
shrb
les
add
lods
fisttps
pop
push
and
sub
aam
cmp
mov
lret
push
mov
leave
lret
je
xor
enter
pop
adc
jle
jns
ret
stos
inc
scas
out
arpl
mov
shr
in
addr16
adc
cld
mov
test
dec
adc
enter
js
sub
pushl
inc
sbb
mov
std
clc
into
int
mov
pop
popf
or
pmulhw
mov
outsb
ljmp
xor
dec
mov
adcl
ret
pop
stos
psrlw
mov
mov
and
bound
test
add
add
sbb
iret
xor
push
push
push
leave
push
repnz
jecxz
jecxz
lahf
cmp
xor
mov
jns
cs
jo
xor
loop
mov
sub
rclb
in
shlb
lret
scas
xchg
mov
cmpsl
sub
roll
sub
out
pushf
popf
loopne
xchg
bound
lret
pop
ret
pop
popf
jns
xor
fwait
notb
pop
repz
mov
dec
insb
push
fwait
mov
popf
push
push
aad
push
or
adc
popa
sub
lds
outsl
sub
fst
xchg
adc
pop
mov
lea
shlb
test
in
xor
pop
loop
dec
adc
pop
pop
loope
out
cmpsl
out
push
pop
arpl
jns
gs
ljmp
sarl
sub
test
subl
adc
mov
xchg
cmpsl
sbb
or
call
scas
cmpsl
lock
movsl
loopne
sub
pop
testb
arpl
mov
cmp
sub
inc
pop
xor
xchg
pusha
lgs
or
xchg
dec
in
jl
movsl
mov
sahf
lret
orl
aas
lahf
rcl
repnz
ret
rcl
or
les
fildl
out
nop
jmp
out
hlt
mov
add
dec
jnp
das
jg
lcall
sbb
ret
add
xor
push
mov
mov
mov
cmp
test
cmp
fstps
popf
int
iret
cmp
pop
imul
ret
loopne
or
mov
lahf
pop
in
test
mov
add
sbb
dec
stc
jo
sub
pop
sbb
mov
mov
push
repz
mov
add
and
out
mov
sub
ds
sbb
lcall
jmp
mov
jbe
add
push
int3
xchg
cld
dec
cld
add
xchg
mov
adc
in
sbb
xor
and
test
sub
scas
or
cmpsl
in
cwtl
add
xor
aam
sbb
pop
jnp
pushl
mov
jbe
dec
das
mov
shl
jns
pop
les
insl
inc
sub
push
test
dec
sub
lds
push
fiaddl
mov
xor
into
scas
call
fs
repnz
sub
sbb
mov
in
xchg
inc
and
add
push
int3
push
add
pop
jbe
inc
pop
lods
inc
mov
int
pop
add
and
aam
cmp
add
out
pop
cmpsl
std
cmc
mov
or
leave
mov
inc
inc
out
sub
and
orb
and
lds
out
mov
insb
call
add
lcall
shll
cltd
pop
cmp
lods
xchg
or
shrl
subb
cs
jg
dec
mov
xchg
cmp
fs
insl
xchg
dec
faddl
mov
mov
in
pop
or
xor
sarb
repz
mov
adc
mov
inc
in
mov
mov
xchg
sub
sti
and
repnz
and
pop
cmpsl
or
fsubrs
mov
or
mov
ret
sarl
lret
in
int
xchg
cmpb
mov
cli
movsl
shrl
push
push
in
or
lock
imul
loope
jmp
or
imul
pop
inc
pop
dec
icebp
cmpsl
ds
xchg
xor
sarl
and
into
enter
test
lret
jg
cmpsl
mov
test
insl
jo
mov
aas
mov
mov
mov
popa
sub
aam
notl
sub
jl
lods
or
sbb
cmp
sub
and
mov
mov
sub
daa
dec
sti
add
push
xlat
out
mov
pop
adc
and
popl
lahf
pop
sahf
lods
sahf
pop
out
pop
fistpll
xor
lods
dec
testl
sub
cmp
loopne
pop
cmp
push
jb
shll
adc
and
and
mov
fs
lds
sub
push
jmp
in
mov
cwtl
icebp
xchg
aad
push
pop
pop
ds
sub
sub
lods
lds
pop
jnp
fldcw
fs
popf
xlat
pop
setns
int3
xor
push
arpl
cmpsl
cmp
and
dec
sbb
cmp
mov
mov
adc
mov
repnz
mov
sahf
sub
jmp
leave
sub
pop
mov
mov
jne
insl
mov
xchg
inc
aas
mov
lea
mov
pop
cmpsb
imul
lret
shr
imul
inc
mov
repz
inc
fwait
mov
cmc
mov
add
cwtl
and
scas
subl
sbb
mov
pop
sbb
data16
rcll
lret
je
or
dec
sbb
mov
push
imul
fld
sub
imul
pushf
test
xchg
das
push
xchg
cmp
jne
ljmpw
test
jmp
jae
pop
mov
pop
out
hlt
push
jge
push
inc
repnz
jno
xor
xor
xchg
dec
or
movsb
dec
shlb
lcall
test
mov
jle
stos
push
jp
push
int3
std
xchg
data16
lods
mov
test
mov
cmp
dec
xor
decb
test
sbb
and
sub
add
xchg
jnp
and
mov
xor
mov
loopne
je
addr16
scas
aad
sbb
push
das
adc
pusha
push
inc
xor
jae
xor
push
xor
xor
aas
or
lods
xor
in
icebp
mov
xor
push
mov
fdivrl
ret
rol
mov
call
xor
mov
subb
je
imul
xor
nop
arpl
roll
enter
out
mov
stos
lret
pop
loop
or
imul
sahf
aad
mov
daa
inc
iret
push
icebp
and
cmp
int
xor
pop
bound
xchg
pop
xchg
lds
jl
adc
aad
aad
dec
ss
cmp
push
mov
cmp
xchg
xor
mov
clc
dec
xor
xchg
imul
lock
jb
scas
sbb
push
imul
dec
lahf
mov
aad
sbb
xchg
inc
cmp
jbe
push
loop
pushf
shlb
jo
or
arpl
ja
push
ljmp
sub
and
add
xchg
test
scas
sti
jns
in
leave
xlat
enter
popa
xor
scas
add
xchg
imul
and
push
mov
cli
mov
stc
leave
dec
fsqrt
sbb
lcall
and
loop
cmp
call
aaa
adc
imul
imul
inc
push
xor
inc
shlb
push
xchg
sub
ds
inc
adc
pusha
sahf
scas
aaa
mov
jb
test
pop
and
int3
mov
or
pop
scas
dec
cli
repz
jecxz
sbb
aas
push
sti
enter
add
cmp
test
pop
pop
jmp
lods
stos
jb
fucomip
adc
and
arpl
xlat
or
xor
fwait
cmp
enter
fwait
enter
jecxz
lcall
aas
aas
or
cmp
subl
js
push
ret
adc
push
sub
add
in
repz
xchg
mov
mov
add
scas
and
lcall
adc
or
movsl
and
popf
xor
inc
sub
adc
test
mov
sub
xor
inc
adc
xchg
ss
int3
dec
rol
out
ficoml
insb
push
insb
push
pop
js
jp
std
jecxz
test
or
fmuls
push
xor
cltd
popa
and
pop
add
xor
sub
icebp
mov
pop
popa
lret
xchg
sub
std
gs
scas
rcll
shlb
inc
pushf
mov
push
inc
pop
mov
sbb
mov
mov
or
sbb
or
cmp
std
test
out
popa
push
inc
aaa
fs
jns
xor
shll
fstpl
int
sbb
test
and
sub
call
xchg
push
mov
lahf
xor
fisttpl
cmp
inc
fisttpll
or
fstpt
ret
jno
frstpm(287
insl
popa
pop
loop
add
inc
inc
scas
test
or
dec
xlat
cmp
popl
aad
or
loop
divl
add
inc
mov
push
jl
ret
fwait
pop
add
and
movsb
andb
push
pop
imul
lods
pop
fbstp
shlb
icebp
jmp
push
insb
pushf
ret
mov
insl
adcb
nop
add
idivl
gs
loop
mov
repnz
sbb
and
adc
xchg
call
and
dec
sar
gs
dec
fwait
shl
rclb
popa
pand
or
pop
and
sub
scas
mov
xorb
movsb
call
nop
sub
push
scas
mov
fwait
jge
mov
xor
sbb
pop
adc
pusha
outsb
mov
fsubrl
dec
jle
inc
push
rorl
pop
push
rclb
mov
fldt
dec
push
lret
movsb
xchg
jns
repz
dec
out
jmp
in
xor
movsl
dec
fisttpl
into
cmp
dec
xlat
cltd
data16
ret
sbb
jnp
je
scas
sub
inc
aas
mov
mov
daa
jbe
xchg
add
cmp
lock
ss
nop
jnp
clc
ret
cli
xchg
mov
ljmp
xchg
jecxz
imul
scas
mov
jle
in
scas
mov
add
das
sub
pop
cltd
adc
repz
insb
push
sbb
sub
jbe
xchg
sbb
pusha
clc
les
cmp
mov
mov
movsb
loopne
xchg
aaa
fisubrs
adc
mov
or
jno
sahf
into
mov
cmp
out
or
mov
or
fbstp
pusha
mov
or
pop
cmp
mov
mov
xlat
xor
in
jmp
in
je
call
sbb
dec
jae
jle
dec
ror
mov
scas
xchg
ss
cld
sbb
std
or
clc
adc
pop
jns
loope
imulb
jl
jnp
mov
adc
imul
sbb
popf
cmp
mov
lods
cmp
test
jecxz
jno
loope
pop
out
add
push
cmpsb
iret
lock
push
push
cmc
and
sub
loope
mov
or
xor
fwait
pop
dec
pop
jle
pop
push
sbb
lds
std
push
cmpb
xor
out
pop
dec
fsubr
mov
in
fwait
sbb
add
in
push
int3
inc
jl
mov
lret
pop
inc
xchg
or
mov
push
pop
cmp
std
out
mov
add
xor
pop
jecxz
sub
pop
fwait
cmp
lcall
imul
inc
adc
push
xlat
pop
stos
mov
movl
jecxz
push
and
pop
movsl
dec
cmp
sbb
and
mov
imull
cmp
loopw
or
cltd
dec
sar
jb
sbb
outsl
push
push
pop
cwtl
cs
popa
and
xchg
cmp
inc
sbb
dec
fldenv
mul
mov
scas
jmp
cli
sub
ljmp
cli
lods
das
stos
out
test
mov
and
adc
stc
adc
jb
dec
lahf
insb
aad
push
xor
lock
dec
into
int
leave
cmp
je
inc
stos
mov
xchg
stos
mov
fnsave
je
push
push
or
pusha
mov
xchg
rclb
pop
pop
xor
sbb
leave
pop
ja
mov
andl
cwtl
push
jge
clc
lahf
lods
sbb
fisubrl
sbb
jp
mov
push
sub
loop
ja
jl
push
push
jge
les
fistl
mov
mov
adc
or
cmp
sub
or
test
lods
cmpl
repnz
push
pop
pushf
sbb
mov
sbb
leave
cmp
loope
inc
hlt
pop
call
loopne
mov
adc
sarl
rcrw
inc
insb
xchg
xchg
pop
mov
clc
xor
lret
inc
push
data16
lahf
mov
gs
fists
test
lcall
jne
or
dec
repnz
inc
inc
sbb
mov
js
imulb
fbstp
jle
xor
daa
popa
mov
cmp
das
pusha
push
outsb
xchg
in
mov
xor
or
aam
lods
mov
push
cltd
test
rcrb
jb
xchg
aas
xchg
add
push
lret
sub
sub
sub
pusha
aam
mov
int
lret
nop
stc
ljmp
inc
loop
lcall
pop
pop
dec
cmp
adcl
pop
xchg
jns
mov
fwait
cmpsl
sbb
lds
sarb
cmpb
inc
mov
leave
int
inc
push
sub
xchg
add
cmc
and
lcall
pop
mov
mov
fwait
sbb
fistpl
repz
push
lods
inc
and
scas
add
push
dec
sbbb
mov
mov
imul
push
loopne
xor
nop
clc
adc
or
xchg
in
mov
test
hlt
push
sbb
movsb
dec
je
or
push
movsb
cmp
out
cld
cmpsb
cmp
dec
lods
cmp
les
addr16
aad
ds
mov
add
lods
dec
loop
push
cmp
cltd
cli
out
xor
adcl
mov
mov
clc
inc
cmp
or
cmpsl
sub
ret
jmp
adc
push
loop
adc
insl
mov
popf
fstpl
push
repnz
pop
rcrl
cli
test
mov
or
add
cwtl
and
subb
out
mov
jne
fiadds
mov
sub
dec
mov
sbb
inc
dec
in
add
sub
cmc
cmp
test
xchg
stos
or
xchg
sbb
addr16
lcall
psubusw
addr16
pop
push
jno
test
subl
cmp
xor
mov
imull
imul
lahf
mov
int
add
out
push
mov
and
mov
inc
loop
lods
ret
repz
lea
lret
jns
inc
ss
lcall
repz
xchg
sub
mov
mov
andl
adc
dec
iret
inc
sbb
push
sub
jo
mov
shll
bound
repz
sbb
ror
and
jecxz
mov
insl
hlt
dec
jecxz
sahf
push
ror
loop
int
mov
lods
mov
pop
daa
leave
inc
push
mov
sbb
mov
pop
xchg
fstps
loope
data16
lcall
xor
lret
xlat
xchg
sahf
xor
nop
aas
lods
inc
push
js
fmull
add
cmp
repz
mov
adc
fdivs
cmp
and
mov
push
or
stos
es
movsb
fidivrl
and
inc
or
jmp
push
sbb
repnz
sub
lcall
mov
int
sub
inc
frstor
lods
aam
test
xor
rol
rolb
mov
inc
test
je
imul
mov
sti
cmp
push
jne
push
fwait
sbb
das
mov
inc
or
mov
pop
pop
dec
ss
insb
in
imul
add
je
movsb
sub
je
insl
enter
adc
std
bound
rcll
fsubl
fs
pop
push
adc
test
aaa
outsl
cs
stos
mov
loop
jle
pop
shld
pop
adc
sahf
mov
sbb
test
mov
loopne
or
mov
sbb
daa
mov
sub
js
pop
clc
cmpsb
jb
jae
mov
cli
xchg
stos
sbb
dec
icebp
add
iret
movsl
or
test
sbb
or
lea
hlt
lret
and
jb
xchg
push
insl
inc
and
mov
push
fstpt
sbb
jne
and
mov
jge
inc
test
xchg
int3
scas
lcall
test
or
std
fildll
and
insb
insl
loopne
enter
sbb
dec
scas
cmp
cmp
nop
mulb
loopne
out
lcall
xorl
dec
adc
push
jbe
lds
cmp
jl
in
stos
or
dec
xchg
dec
dec
add
fdivl
jecxz
push
fwait
inc
stos
inc
xor
sub
xor
jmp
leave
fnstcw
dec
jecxz
mov
xlat
mov
addr16
add
sbb
repnz
notl
pop
jl
dec
xchg
pushf
out
mov
mov
imul
fsubrl
mov
xchg
adc
push
incl
movl
aaa
mov
push
mov
mov
sub
dec
fbstp
and
scas
mov
fstl
cmp
pop
out
lock
out
mov
cltd
into
mov
daa
sub
hlt
ja
cmp
mov
jp
loop
outsl
adc
idivb
cmp
mov
lds
and
out
arpl
pop
cwtl
not
dec
sub
pop
push
es
pop
in
jne
ja
sbb
push
popa
scas
gs
sbb
xor
xor
andl
rcrb
jle
push
sti
xchg
test
add
stos
adc
jb
cltd
xchg
ja
pop
movsl
mov
es
add
inc
fadd
xor
movsb
sbb
fsubrl
sti
add
add
loopne
aam
or
cmp
ds
fwait
sub
pusha
push
orb
ret
stos
stos
push
in
xor
cli
fst
lret
xchg
inc
enter
fisubrs
ficompl
jl
into
pop
insl
dec
jle
jp
lea
int
jp
stos
jecxz
xlat
shlb
dec
pop
outsl
mov
xchg
pop
xlat
outsb
push
ds
sahf
sub
adc
ds
xor
mov
fstl
ret
rcrl
lahf
jg
pop
push
int3
xchg
psrad
adc
dec
sub
xorl
sbb
mov
mov
mov
add
and
sbb
fnsave
or
shll
enter
cmp
decb
fistps
aam
fistpll
jbe
xchg
cmpsl
lret
jne
jg
es
lea
enter
les
mov
cli
fsubrs
mov
std
adc
mov
lds
mov
cmp
adc
in
pop
mov
lds
mov
pop
sbb
or
loop
push
jmp
addl
stos
decb
cmpsl
aas
test
jno
imul
xchg
sti
or
jno
mov
adc
stos
and
xorl
xor
scas
jae
jg
jae
data16
lret
mov
aam
cltd
or
fldenv
mov
loope
mov
pop
dec
add
lret
mov
pop
shll
xor
les
mov
xor
lret
into
sbb
fwait
sti
filds
xchg
shll
stos
push
imul
aam
xor
gs
push
add
mov
and
mov
popf
cmc
data16
jl
inc
add
leave
cmp
mov
movsb
and
ja
ret
and
cld
cmp
fistpl
repz
loopne
dec
and
jae
fs
test
in
ret
sbb
cmc
jl
xchg
dec
mul
inc
js
inc
and
add
mulb
sbb
int
sbb
scas
push
mull
test
jecxz
push
push
pop
dec
pushf
mov
mov
lret
aam
jmp
mov
adc
int3
and
cs
add
xchg
test
mov
enter
fildll
xor
fists
push
arpl
xchg
push
push
mov
cmpsl
adc
stos
add
shrb
repnz
orb
pop
repnz
pop
out
jl
cmpsl
dec
imul
cmc
xor
movsl
mov
hlt
gs
andl
inc
sbb
xchg
out
dec
ljmp
adc
popa
fdivs
test
dec
jnp
psubsb
inc
shrl
push
lods
in
mov
jecxz
pushf
pusha
jle
frstor
pop
push
sub
push
mov
into
mov
xchg
popf
fmull
lret
pop
imull
fisubs
mov
pop
ret
xor
push
inc
xor
dec
les
stos
daa
aas
data16
ljmp
call
out
xor
sti
loope
sub
mov
push
pusha
divl
jg
shl
ret
aas
or
imull
dec
call
cmp
dec
inc
pop
push
cmp
movsl
cmp
mov
mov
push
daa
jmp
push
mov
je
es
lods
pop
icebp
fucomp
negl
jne
es
stos
inc
xlat
sbb
cmp
add
xlat
fldz
test
sub
addr16
mov
inc
ret
fisttpll
lret
lret
dec
fsubrs
xchg
and
jge
imul
out
mov
or
push
sub
dec
inc
push
lret
rcll
in
cmp
iret
imul
sub
mov
daa
fst
imul
lods
inc
dec
lock
inc
rolb
ret
mov
imul
loop
xchg
dec
in
add
outsb
dec
dec
ret
or
xchg
pop
pop
test
jge
xchg
inc
fldl
rclb
sbb
int3
cmp
mov
inc
stos
pop
sbb
push
mov
xchg
xchg
add
shrl
mov
mov
cs
xchg
mov
xlat
mov
or
dec
loop
ret
hlt
cli
imul
and
pop
jp
aam
out
cmpsb
addr16
sbb
nop
insl
rcl
push
mov
mov
push
mov
push
pop
loope
shrb
mov
adc
sbb
std
in
aam
call
movsl
pop
ja
mov
mov
imul
insl
pop
dec
lret
bound
push
jmp
lahf
jmp
or
cmp
js
in
stos
stos
outsl
push
add
sub
dec
fists
dec
out
outsb
add
loop
lea
add
int
jge
out
in
lahf
adc
aaa
es
pop
xchg
inc
fcmovnb
into
cmp
stc
sbb
pop
repz
aas
enter
push
mov
cmpsb
xchg
call
adc
lea
mov
stos
jecxz
or
adc
insl
add
sbb
and
jo
xor
dec
xchg
test
loopne
in
fsubrs
or
insb
add
in
test
dec
loope
jmp
lcall
cli
xchg
push
aaa
insl
imul
mov
ljmp
cld
xor
jl
out
sbbb
add
outsl
sbb
pop
dec
pushf
jae
rcr
pop
out
or
xchg
sub
dec
pop
mov
jo
imul
repnz
add
cmp
mov
enter
jae
daa
dec
out
stc
repnz
mov
xchg
decl
ds
cmpsb
cmp
cmp
movsb
cmp
adc
pop
jns
dec
out
int3
arpl
loopne
adcl
xor
lahf
arpl
jae
mov
push
in
or
popf
xor
das
xchg
pop
arpl
cwtl
jns
add
lret
into
add
jle
inc
es
mov
arpl
cwtl
js
and
lret
cmp
add
mov
rcll
out
xchg
mov
mov
ret
clc
or
ja
sbb
sbb
push
out
push
aam
test
fnsave
adcb
or
jg
add
lret
mov
cmpsl
call
or
je
cmp
inc
fimull
scas
popa
clc
jle
or
adc
imul
xchg
scas
cltd
sub
into
call
xor
push
pop
sahf
inc
aas
sub
xor
leave
jecxz
fisttpl
mov
dec
cmp
outsl
push
arpl
lds
sbbl
imul
pushf
xor
cmp
imul
pop
out
jns
sbb
mov
cmp
mov
imul
lret
push
in
call
ss
pop
addr16
jmp
das
mov
adc
push
mov
loope
repz
and
or
xor
mov
pop
sbb
es
xor
jmp
ljmp
and
pop
sub
movsl
pop
add
jb
clc
out
cld
adc
or
mov
stc
fistpll
pop
adc
inc
nop
daa
neg
imul
sub
pop
push
xchg
sub
neg
mov
or
mov
test
mov
push
sub
pop
sbb
dec
out
test
pushf
xor
sub
jnp
sbb
dec
jl
xchg
stos
outsl
jg
popf
lret
inc
fildl
mov
adc
push
push
test
cmp
pop
out
movsb
pop
ds
rep
add
inc
add
outsb
aaa
arpl
cwtl
pop
sbb
out
lods
xor
fimull
push
jmp
cld
or
sbb
popa
clc
pop
add
xor
pop
repnz
push
in
push
add
add
adcb
in
sbb
pop
lock
shrb
out
mov
ljmp
aas
add
push
pop
jmp
jo
or
js
add
jge
loope
jle
lock
cmp
out
lea
clc
dec
jecxz
adc
mov
fmulp
bound
add
xor
in
lret
bound
loope
xchg
int
sub
sbb
and
fnstenv
sti
add
filds
pop
and
insl
paddw
das
sbb
mov
out
xchg
divb
daa
and
push
add
add
pusha
negl
sbb
push
inc
fsubl
push
or
mov
cmp
add
and
pop
repz
xchg
sub
inc
dec
jecxz
inc
call
mov
shr
or
daa
aaa
clc
gs
shlb
mov
add
push
out
mov
bound
jb
pop
sahf
mov
loopne
js
in
icebp
push
cmp
xchg
outsb
xor
test
fstps
mov
rorb
pop
sub
dec
pop
xchg
pop
mov
mov
je
fsub
jns
and
data16
pop
jbe
shlb
lds
jmp
push
mov
mov
arpl
shrl
leave
add
inc
fdivrl
daa
and
mov
mov
ret
clc
idiv
xchg
and
xchg
sub
pop
mov
popa
repz
mov
sbb
repz
into
sub
insl
cmp
movsb
sbbb
mov
stc
leave
pusha
xor
or
sub
mov
jne
stos
mov
loope
sbb
ss
mov
sbb
fidivs
js,pt
insb
scas
inc
xlat
fmull
pop
cmc
sub
pop
repz
out
sub
outsb
add
test
lcall
sbb
sti
mov
fmuls
fdiv
es
push
sbb
sub
xchg
inc
pop
or
jmp
pop
int
cmp
sbb
rorb
imul
sub
push
push
jmp
stos
inc
xchg
sub
jg
clc
xchg
fdiv
lds
stos
rorl
loop
bound
xchg
cmp
mov
lock
cmp
lds
mov
push
lock
and
call
jne
sbbl
mov
movsl
cmp
stc
mov
sub
xchg
dec
push
insl
jge
push
insl
call
or
or
lock
xchg
jge
cmpsl
rcrl
xor
ret
neg
jbe
out
lret
dec
mov
xorl
das
fimull
fbstp
out
testb
xor
inc
mov
mov
sub
fsubrs
dec
inc
fdivrs
push
lods
sub
pop
hlt
in
adc
inc
add
je
bound
xchg
mov
movntq
call
cmp
push
mov
test
ss
add
pop
jp
sub
lret
pop
cld
dec
fs
sub
cld
loopne
nop
jo
mov
jmp
testb
ja
mov
fwait
mov
mov
mov
jmp
cmp
sbb
ds
sbb
call
lahf
dec
jb
cld
xchg
lret
aas
mov
sahf
out
or
shl
imul
xrelease
lods
xchg
cli
rorl
out
or
cmp
cmp
iret
cmp
add
jle
dec
rorl
les
call
mov
xchg
sub
xor
jecxz
push
int
mov
adc
outsl
inc
xlat
imul
daa
adc
mov
inc
adc
inc
jo
cmpsl
pop
sti
and
mov
adcl
xor
adc
lar
jle
mov
cltd
sub
daa
stos
push
mov
dec
gs
popf
push
xchg
or
pop
xchg
pushl
sbb
stos
mov
lcall
fsin
cs
push
lret
loope
loop
xlat
fwait
lods
hlt
mov
or
mov
push
ss
icebp
shlb
jg
ret
loope
sarl
scas
or
cld
or
dec
mov
hlt
cmp
or
scas
test
inc
repz
pop
add
xor
ljmp
push
fwait
xchg
mov
pop
pop
cltd
ljmp
cmpsl
stc
sub
adc
sbb
xor
es
sbb
xor
adc
addr16
lret
xor
push
out
cmp
dec
mov
test
int3
mulb
pop
dec
dec
push
enter
pop
xchg
xchg
imul
ja
jb
mov
rclb
imull
lds
xor
fnstenv
jo
fwait
inc
test
sbb
push
cmp
jo
ret
or
xlat
sub
mov
in
ss
lret
iret
cmpb
jecxz
aas
xor
xchg
push
add
repz
jle
loopne
push
pop
pop
shrb
pushf
dec
sub
ja
adc
push
mov
cmp
inc
lods
leave
pusha
push
dec
and
inc
push
lahf
sbb
sub
stos
cmpl
cmp
ss
test
inc
movsb
fwait
xchg
cli
gs
jle
mov
pop
cmc
scas
xchg
jl
mov
sub
mov
rorb
mov
ds
js
test
decb
ljmp
out
aad
dec
les
mov
adc
orb
icebp
outsl
mov
xor
pop
sbb
pop
sbb
ljmp
and
lods
pop
in
xor
jg
enter
notb
cmp
pop
mov
inc
fucomip
imull
mov
not
cmp
fidivrl
daa
les
andl
jns
js
test
leave
fwait
hlt
daa
cmpsb
xchg
push
inc
mov
addr16
xor
es
xchg
pop
cmpsb
ss
popa
pop
loop
in
xchg
pop
push
mov
loope
dec
lcall
bound
enter
imul
ror
xor
enter
aam
push
out
decb
mov
outsl
or
lea
in
scas
add
cmc
pop
adc
outsb
mov
out
add
lds
mov
rolb
xor
cmpsb
ja
mov
ficompl
popf
outsb
fmuls
call
stos
sub
add
jne
push
dec
xor
pop
stos
xchg
imul
ret
add
sarb
in
ljmp
adc
imul
outsb
mov
test
aaa
jecxz
jnp
data16
adc
add
mov
cmc
inc
fistpl
pop
and
outsb
push
mov
and
sbb
adc
insb
rclb
or
inc
sahf
je
push
clc
mov
fwait
xchg
cli
mov
push
pop
shrl
lds
lods
jns
cld
xchg
scas
inc
insl
sbb
mov
jne
jge
lods
xor
into
mov
and
or
cld
xor
mov
mov
jbe
inc
jo
lcallw
jg
arpl
jns
ret
cmp
and
mov
repnz
ds
divb
out
inc
int
ss
and
xor
add
ja
inc
mov
and
xor
shll
dec
rorb
push
mov
fmuls
or
jmp
sub
and
mov
xchg
lods
add
cmc
xor
adc
or
imul
jg
sti
mov
dec
add
inc
sbb
mov
mov
icebp
mov
mov
push
inc
repnz
jns
bound
pop
add
dec
je
ret
cmp
and
sub
jecxz
dec
dec
int3
arpl
in
and
pushf
loope
es
fldt
sbb
dec
dec
xchg
pop
enter
cmp
je
int3
imul
push
push
test
mov
xorl
sbb
xlat
mov
cmpl
lret
cmpsb
pop
jmp
sub
pop
mov
pop
add
aas
aad
and
sbb
ja
enter
sti
sub
ret
mov
mov
arpl
lret
repz
xchg
out
imul
mov
cmpl
sbb
xchg
mov
in
push
sbb
cli
pop
rol
std
xchg
out
mov
out
push
lods
in
cmpl
dec
shl
xchg
scas
and
pop
js
and
xchg
loop
mov
push
out
push
movsb
negl
sub
test
pop
insl
mov
pusha
stc
dec
add
mov
jmp
nop
mov
sti
xchg
and
cmp
cmp
adc
and
js
cltd
fwait
xchg
lcall
sbb
test
shrb
inc
mov
mov
mov
adc
call
xchg
or
lods
loop
sub
int
fcomp
outsb
repnz
jo
xor
jmp
fildll
lock
int3
inc
and
insl
lea
inc
test
roll
cltd
iret
fsts
add
jb
loope
jns
call
mov
lds
mov
pusha
cmpl
jle
lea
xor
pop
cmp
jo
jo
mov
mov
pop
stos
daa
sub
mov
xchg
clc
imul
add
inc
mov
pusha
add
fwait
je
cmp
movsb
mov
movsl
cmp
or
xchg
mov
push
call
dec
pop
insl
mov
pop
pop
mov
xor
mov
mov
add
lcall
and
jl
mov
stos
add
inc
pop
xchg
insb
cltd
and
xchg
je
add
push
test
test
mov
inc
dec
in
es
dec
xchg
sub
je
cmpb
push
popf
push
jle
cltd
pusha
sub
je
pop
repnz
out
xlat
dec
int3
cmp
sti
in
ret
mov
fmuls
and
test
std
fwait
mov
jne
insb
dec
aam
cmp
nop
cmp
jbe
insb
dec
daa
cld
push
cmp
enter
adc
scas
stos
cmp
add
aas
lods
cmpb
or
adc
movsl
aaa
xchg
push
jns
jmp
cs
jge
aad
sbbl
jno
cmc
jmp
xchg
lret
pop
stc
mov
add
scas
add
pop
add
lahf
mov
negb
daa
insb
faddl
inc
jnp
cmp
push
sbbb
ja
adc
dec
sub
pop
pop
cld
sbb
test
sub
js
inc
jg
scas
cmp
jb
in
cmp
sahf
outsb
fiaddl
cli
push
push
sarb
outsb
ljmp
fstpt
pushf
xchg
add
lea
pop
jb
lods
push
pop
jle
cmp
shrb
data16
cmpsb
mov
sbb
nop
and
cld
mov
sbb
std
xlat
adc
aad
and
fidivl
fcmovu
push
add
out
clc
and
clc
lret
ds
jmp
lods
mov
stos
and
dec
hlt
sahf
adc
or
xchg
jl
outsl
add
xor
pushf
jg
js
xor
mov
fnstsw
jbe
inc
ds
sti
out
mov
push
loopne
dec
adc
movsl
mov
bswap
out
mov
out
cmp
movsl
out
outsb
mov
ret
and
clc
mov
into
stos
lret
test
xchg
mull
outsb
add
cld
push
lcall
cmp
mov
call
imull
or
fdivrl
imul
js
push
dec
mov
xlat
push
cmp
mov
testl
jle
dec
das
clc
inc
jl
sub
imul
mov
pusha
aad
mov
es
push
jne
pop
xor
adc
loope
adcb
xor
in
and
add
sbb
std
call
sbb
cltd
lods
insb
push
or
aaa
jb
test
je
test
jecxz
mov
jo
insb
mov
jp
mov
nop
mov
test
int
mov
add
xchg
daa
flds
pushf
mov
ljmp
jl
dec
mov
flds
fimuls
dec
mov
in
jno
mov
and
mull
xchg
mov
nop
jp
mov
xchg
xchg
sub
ja
insl
adc
rolb
stos
pop
mov
gs
jl
stc
sub
inc
into
stc
dec
rcrb
insl
mov
movsl
outsb
and
es
outsl
test
out
and
int3
cmp
js
adc
fnstenv
sub
int3
push
xchg
add
and
aad
icebp
imul
jmp
or
mov
ret
cmpsl
pop
aam
xchg
ja
ret
cs
lea
xchg
hlt
mull
and
inc
adc
dec
addr16
lods
popa
sub
ret
sahf
mov
xor
cld
inc
xchg
xor
ret
inc
and
cmp
mov
sti
adc
cmpl
mov
into
inc
pop
xchg
jbe
sbb
xchg
aas
pop
shlb
pop
inc
shll
cmp
sbb
insb
scas
jno
sti
dec
cmpsb
imul
jl
sub
andl
cmpb
nop
mov
fwait
dec
in
jp
sbbl
out
dec
ja
xor
push
negl
adc
arpl
and
dec
mov
sbb
pop
repz
popf
inc
mov
dec
push
sub
jbe
movsl
data16
movl
jbe
in
add
fstpl
adc
lods
es
scas
pop
jne
sahf
inc
sub
test
mov
add
in
inc
dec
loopne
enter
sub
in
sbb
lock
or
popf
stc
push
mov
or
dec
rcr
sub
sbb
aad
add
or
aam
mov
push
add
outsl
out
xor
ss
je
xchg
mov
push
push
outsb
scas
popa
cmp
rcrl
and
add
push
int3
call
or
mov
pop
daa
mov
leave
outsl
jp
xor
inc
lods
loopne
pop
leave
aaa
lods
dec
pop
push
lcall
jp
pop
jg
sbb
push
push
jmp
addr16
sbb
mov
add
push
sub
into
jne
dec
mov
xor
cld
xchg
pop
cmpsl
pop
repz
rolb
push
mov
dec
sub
aas
jmp
sbb
cli
dec
mov
add
arpl
xchg
and
sbb
inc
lret
cmc
sbb
stos
in
cmc
cmp
lock
iret
add
and
imul
jmp
popa
stos
out
jge
popa
mov
cmpsb
or
dec
mov
sbbl
push
arpl
ss
jmp
xchg
mov
adc
std
cmp
andb
adc
xchg
jae
aad
icebp
push
adc
data16
imul
xor
sbb
cli
inc
add
mov
cmc
xor
xor
aas
or
loope
or
fiaddl
mov
cmpsl
ds
adc
or
leave
push
in
or
add
fprem1
jmp
fcomp
cmp
loopne
int
mov
add
cmp
jge
les
call
lods
shrb
jns
iret
aaa
adc
xor
jnp
int3
arpl
popf
or
and
js
sub
push
xchg
sarb
test
lret
push
mov
clc
lods
gs
in
mov
ficoms
mov
in
push
out
mov
cld
xor
mov
out
aaa
fdivrl
out
cmp
shrb
or
aas
push
sti
jnp
repz
out
xor
add
push
repz
test
lret
fistpll
sti
sbb
negb
jmp
int
fwait
mov
push
mov
sub
jle
stos
push
loopne
lret
inc
lcall
xchg
mov
dec
movsb
sahf
or
cmpsb
lcall
loope
out
int3
out
lock
lret
loopne
lret
mov
mov
add
lahf
xor
mov
fcompl
mov
fdivr
pop
fbstp
pop
fldt
incb
int3
inc
xchg
sub
sbb
pop
pushf
jae
loopne
sbb
xchg
out
jno
cmpsb
ss
dec
rorb
jp
rclb
mov
test
in
addl
imul
cmp
js
imul
jne
adc
rep
dec
mov
or
push
mov
and
xor
shll
cmp
fsubl
aad
mov
xchg
mov
icebp
inc
xchg
lcall
push
mov
and
fwait
sub
stos
shrb
and
ret
sbb
cld
and
test
xor
aas
out
xchg
push
sub
lea
imul
jno
divl
inc
and
xchg
inc
cmp
xchg
stos
pop
orl
lahf
sbbl
mov
cmp
add
xor
and
js
inc
adc
bound
fsts
sub
cmp
xchg
mov
push
mov
das
pop
push
scas
jo
jg
inc
inc
stc
movsl
pop
mov
loope
popa
xchg
lahf
xchg
les
mov
lret
inc
push
jmp
lret
lret
psraw
push
ret
jge
stc
aas
mov
jg
pusha
addr16
xchg
pop
in
xchg
sub
mov
icebp
hlt
mov
add
loop
inc
dec
mov
jg
push
mov
xchg
lock
movsb
or
mov
add
outsl
iret
sbb
shlb
cmp
aad
fs
push
aas
xor
jns
scas
into
xor
addr16
inc
mov
cmp
pop
lea
dec
daa
shrb
pop
divl
inc
push
out
enter
inc
lret
lock
cmpsl
pop
les
push
shrl
inc
repz
mov
jg
pop
cmp
jb
sbb
lods
inc
fbstp
stc
sub
xchg
lock
shrb
or
or
sbb
jmp
cs
vmaxsd
mov
mov
adc
dec
xchg
fsts
fcoml
rcrb
pop
repz
in
and
adc
cmp
in
sarl
out
pop
test
loopne
fucomi
addb
stos
jp
std
mov
jecxz,pt
scas
pop
test
movsb
cltd
push
ljmp
inc
add
add
xor
xchg
adc
inc
sbb
loope
gs
adcb
add
pop
jns
gs
xchg
cwtl
xchg
and
arpl
push
xor
jne
mov
icebp
jns
jmp
mov
cmp
imull
jmp
repz
xlat
pop
iret
fnstenv
in
loope
xor
adc
sarl
mov
test
cli
pusha
movsl
in
dec
cmp
jne
enter
adc
enter
lcall
and
test
push
pop
cmp
bound
inc
push
sub
jo
jb
mov
pop
and
push
rcrb
inc
mov
cmp
sbb
in
pop
outsl
mov
dec
pop
sarb
arpl
insl
pop
cmp
xor
iret
mov
xor
ret
rol
fbstp
hlt
push
cli
leave
mov
jno
into
adc
cmp
jg
lret
es
xchg
iret
dec
loopne
mov
call
imul
adc
inc
imul
push
inc
fwait
push
jp
repnz
inc
jle
cmp
cmp
hlt
cmp
or
mov
in
or
adc
in
es
mov
sarl
ljmp
pop
or
pop
repnz
inc
jmp
push
xchg
verw
dec
idivb
xchg
xor
enter
lret
das
add
cmc
sbb
incl
dec
pop
mov
dec
lds
outsl
mov
outsb
or
sub
rorl
out
jae
push
movsb
aam
shrl
negl
or
in
test
push
bnd
mov
loopne
mov
aam
pop
fsubs
mov
icebp
js
inc
popa
mov
arpl
addl
jge
inc
scas
xchg
adc
not
out
out
pop
add
lods
fidivl
int
and
fcoml
jmp
sub
cmp
jno
inc
hlt
mov
pushf
gs
xchg
arpl
sbb
jg
lods
nop
jo
or
pop
cmc
mov
sub
add
ss
xchg
unpcklps
mov
push
hlt
xor
cmp
test
adc
fs
push
andb
fnstsw
cltd
xchg
ja
xor
andl
jbe
or
movsb
push
pop
leave
push
sbb
mov
push
inc
mov
push
pop
push
sarl
xchg
xor
pop
out
insb
test
add
lea
cld
xchg
xchg
mov
mov
insl
lret
cmp
sti
jl
mov
in
xor
jb
mov
cmc
xor
lea
movsl
jb
jp
movb
cmp
pop
into
sbb
popf
ffree
cmp
adc
aam
add
es
sub
loop
lcall
jbe
jns
fdivs
lcall
movsb
sbb
repz
lahf
xchg
cld
xchg
repz
ret
and
es
push
lret
fsts
out
out
mov
stos
subb
or
lock
jp
xchg
cmpsb
enter
insl
add
fnsave
or
mov
clc
lcall
dec
sub
pop
aam
inc
stos
test
lds
pusha
movsl
je
and
iret
xor
xchg
faddl
add
inc
lret
mov
lea
icebp
enter
cmpsb
imul
xchg
in
adc
subl
cltd
stos
popf
mov
add
xchg
push
iret
lds
lds
mulb
mov
movsl
fistpll
in
in
push
lret
shll
cmp
fsts
in
inc
lret
loopne
adc
js
adc
cmp
jg
lock
cltd
xchg
push
dec
push
mov
sbb
arpl
adc
jbe
mov
adcb
arpl
dec
pop
fstps
fcompl
dec
cmp
jo
jb
mov
test
sub
or
repz
in
ror
testb
sub
scas
cld
and
in
cmpb
stos
ret
inc
adc
fwait
test
adc
addr16
xor
or
mov
jle
and
cmpl
iret
popf
jne
scas
sarb
in
addr16
push
add
push
js
dec
rorl
hlt
scas
push
lea
sbb
outsb
je
outsl
xchg
or
or
sbb
arpl
add
lret
test
stos
pop
test
sub
loope
lds
mov
pop
test
int3
inc
sub
leave
shrb
jae
lea
pop
fimuls
mov
mov
jge
sbb
xchg
pop
sarl
jle
mov
mov
sbb
mov
dec
mov
lods
inc
andl
test
adc
xchg
les
jge
push
cmp
dec
dec
sub
mov
cmp
mov
nop
orb
add
out
xchg
test
iret
push
into
addr16
and
enter
pop
leave
ds
gs
ds
insb
data16
inc
cmp
jmp
sbb
lods
jo
sahf
mov
and
out
sti
inc
cli
inc
pop
mov
jae
dec
scas
inc
js
sahf
outsl
mov
cltd
pusha
lea
mov
aaa
or
push
rorl
lds
xchg
push
inc
sub
push
pop
test
gs
xorb
sarl
jb
jb
cmp
jns
repnz
loop
pushf
xchg
mov
nop
or
mov
pushf
sbb
sub
xchg
insb
sub
ds
xorl
dec
mov
jo
pop
repz
ss
lcall
fsubl
call
and
insb
es
push
lea
mov
loopne
sub
lret
jnp
std
xor
xor
iret
mov
dec
mov
imull
mov
dec
jle
shrb
inc
fiadds
mov
gs
push
adc
inc
je
sbb
mov
and
sbb
push
dec
or
jne
pop
leave
pusha
sar
repnz
out
loopne
sbb
xor
rclb
mov
out
call
or
cmp
pusha
imull
pop
xchg
sub
mov
dec
loop
pushf
xor
add
push
and
xchg
stos
or
cld
sub
sub
dec
dec
loopne
cmp
leave
insb
mov
push
out
repz
inc
mov
and
rcrl
stos
inc
mov
fcmove
pop
or
std
xchg
jae
out
pop
xchg
sbb
mov
cmp
pop
shll
mov
push
inc
xlat
push
mov
mov
ficoms
adc
xor
xor
iret
data16
mov
test
xlat
outsb
imulb
or
dec
jl
shrb
inc
fdivrp
mov
data16
push
push
push
call
movsb
pusha
outsl
push
push
or
aam
pushf
ret
test
mov
fnsave
lock
push
movsl
pop
cld
xchg
dec
divl
enter
mov
mov
xchg
mov
fimuls
dec
out
xor
shll
insb
xchg
movsl
push
jmp
fildll
xor
stc
sub
dec
adcb
cmpsb
movsl
cmp
movsl
sahf
clc
mov
pop
ja
push
jmp
cwtl
xlat
outsb
lret
leave
das
jmp
scas
sbb
rol
filds
dec
add
xor
arpl
stos
mov
sbb
std
rcrl
cwtl
mov
ss
mov
push
mov
rcr
sti
test
mov
scas
sub
cwtl
das
es
ss
inc
mov
jp
and
or
cltd
push
push
lods
mov
xor
in
inc
sub
aas
cwtl
inc
popf
mov
jge
aam
and
sahf
icebp
fwait
jb
xor
push
arpl
cli
js
sarl
sar
inc
mov
sbbb
xor
mov
daa
arpl
jge
push
fsubrp
inc
repz
or
cmpsb
fldl
jp
jge
sub
sub
cltd
repnz
push
push
xor
les
mov
sbb
xor
popa
aad
les
mov
jl
or
out
lods
sbb
js
pop
loope
imul
shlb
movsbl
mov
cmp
mov
je
pop
and
test
insb
and
lods
push
cmp
cmp
fdivrs
xor
fwait
lcall
push
inc
inc
scas
negb
cmp
sub
ficoms
shr
jl
push
ljmp
ljmp
js
pop
sub
xchg
adc
rcrl
cmp
add
push
movsb
loope
cltd
rolb
lods
jno
cmp
cmp
jno
idivl
movsl
sbb
repnz
imul
mov
jl
outsb
call
jl
das
sub
cmp
jle
mov
lea
dec
sarl
mov
adc
lea
pop
out
inc
mov
add
xchg
push
ret
push
imul
xchg
pop
popa
pop
xchg
into
insb
cmp
ja
les
xor
fildl
push
cli
addr16
pop
test
mov
movsb
rcrb
ret
or
outsl
sbb
xorb
mov
lahf
fnsave
adc
ljmp
cmp
xor
insl
or
or
lcall
clc
pop
repnz
add
or
int3
adc
xlat
jbe
mov
hlt
scas
inc
adc
xor
daa
jmp
mov
in
pop
dec
adc
hlt
frstor
dec
bound
lods
cmp
dec
rorl
xchg
inc
into
and
loop
mov
ljmp
mov
repnz
aas
pop
xlat
or
jbe
out
mov
call
dec
sbb
ja
lock
add
inc
rolb
test
dec
popl
jmp
mov
xchg
out
jle
les
mov
push
lods
jle
jmp
cmc
fnstenv
cmp
stos
shl
mov
mov
jl
mov
shrl
imul
ss
cs
call
add
mov
cwtl
das
out
sub
shll
leave
out
mov
in
loopne
inc
inc
fnstcw
repz
int
add
sub
int
lret
pop
push
leave
pusha
inc
in
mov
fcomip
ja
out
arpl
pusha
cwtl
sbb
test
ss
test
and
mov
aas
push
lods
cmp
fisubrs
pop
hlt
pusha
lcall
xchg
jns
push
int
ja
call
movsl
add
xlat
outsb
pop
bound
xchg
jp
or
push
lret
cmc
pop
cwtl
mov
push
inc
lods
xor
popf
push
outsb
out
ret
pop
pop
adcb
jno
aas
mov
xor
bound
push
adc
dec
adc
sbb
and
data16
push
iret
lds
fwait
cmp
loopne
test
inc
inc
je
fcompl
in
inc
xchg
test
lcall
inc
popl
adc
popf
pop
lcall
inc
pop
iret
ret
xor
sbb
shrl
inc
dec
in
imul
xchg
lret
int3
or
add
jnp
lahf
jae
lock
sub
mov
scas
push
incb
xor
out
push
add
stc
incl
into
test
repz
mov
add
dec
fldenv
sub
mov
sbb
or
stos
mov
movl
sbb
sub
inc
push
adc
cmp
mov
idivl
inc
adc
inc
or
pop
mov
mov
sahf
filds
xor
ficomps
add
push
inc
push
and
sbb
sbb
mov
dec
repnz
adc
adc
out
rolb
into
adc
mov
push
mov
pop
dec
test
add
pushf
inc
sbb
mov
push
ds
stc
popa
aas
cs
inc
rcr
sub
fbld
inc
or
pop
or
mov
stc
popa
aas
test
xchg
test
popf
aad
xchg
cmp
add
adc
adc
mov
mov
inc
pop
or
nop
push
outsb
cli
mov
or
fisttpll
and
pop
xchg
loopne
sbb
add
pop
adc
test
mov
js
xor
cmp
pop
sbb
data16
and
push
dec
loope
in
push
mov
addr16
repnz
push
cld
mov
stc
gs
mov
rorl
sarb
roll
roll
int
shll
ss
data16
ja
and
or
and
cmpsb
aas
inc
adc
push
add
cmpsl
les
imul
add
and
iret
and
int3
mov
cmp
jns
or
or
mov
mov
fimull
mov
jns
xchg
daa
mov
mov
adcb
push
add
and
shrb
xor
and
stos
push
add
out
iret
lea
les
stos
cmp
mov
mov
lea
movsb
cmp
outsl
cmp
or
and
clc
pop
sub
xor
xor
or
mov
mov
int3
lea
les
mov
and
lret
dec
and
cmp
cmp
ja
dec
push
dec
insl
les
aas
inc
mov
push
les
mov
and
cwtl
and
aas
lret
xchg
les
and
or
and
cmp
scas
popf
xchg
sti
mov
test
into
pop
dec
pop
or
or
mov
adc
es
fnstcw
lock
xchg
inc
adc
mov
call
test
inc
adc
xchg
sahf
roll
mov
test
test
aam
dec
or
lret
or
mov
mov
inc
addps
pop
mov
rorb
cmpsb
pop
fnstcw
mov
leave
mov
xor
popf
xlat
in
test
push
enter
push
lret
aas
jnp
pushf
adc
push
enter
jae
cmp
add
mov
pop
adcl
jnp
lcall
dec
gs
jnp
shrb
cmc
pop
hlt
je
lret
and
cmpsl
sub
mov
movsb
xor
stos
xor
es
inc
and
jg
lock
lods
clc
out
cmp
inc
mov
pop
test
xchg
cmp
pusha
repnz
mov
sarb
jne
mov
or
xchg
cmp
pusha
pusha
out
jle
push
inc
or
jmp
jle
push
dec
aad
sahf
das
scas
mov
ret
lods
imul
stos
jecxz
lret
lcall
ror
xchg
mov
jno
cmpsl
ss
push
lcall
int
ds
adc
daa
mull
movsb
xor
jle
sarb
lahf
cmp
push
jae
adc
ss
insl
out
sbb
mov
js
jl
xchg
inc
dec
data16
in
adc
cmpsb
cmp
cmp
mov
mulb
out
imul
out
insb
jb
xchg
inc
fsubrs
test
xchg
inc
cltd
jbe
cld
xor
mov
jb
pop
aam
imul
push
outsl
mov
in
mov
cmp
sub
and
jne
nop
inc
dec
outsl
lahf
cmp
xchg
inc
js,pn
insb
ds
in
xchg
inc
in
movsb
aad
addr16
nop
inc
std
call
test
adc
jnp
xor
leave
fdivrl
and
into
xchg
aas
mov
mov
fnstcw
mov
push
out
push
mov
jp
pushf
aaa
aas
addr16
push
in
adcb
push
add
out
inc
adc
sahf
jg
mov
cmpsl
dec
jecxz
lret
pushf
xor
leave
push
sti
push
or
fwait
out
clc
fs
cwtl
jl
insb
lock
push
cmp
sbb
sub
test
push
cmp
je
jmp
mov
jl
iret
push
pop
add
lods
xor
pop
pusha
in
lock
push
dec
out
push
inc
cltd
jge
xchg
xchg
xor
call
push
shlb
repnz
pop
add
ret
fadds
xchg
or
ffreep
cmp
out
lret
test
popa
in
pop
rorb
mov
mov
pop
sti
xor
inc
push
lods
dec
int
dec
mov
xchg
xchg
pop
cmc
les
rclb
or
xchg
push
or
in
int3
hlt
outsb
imulb
les
mov
adc
sbb
outsl
add
jae
mov
in
push
hlt
pop
imul
insl
in
xchg
add
les
inc
stc
popa
icebp
mov
push
fsubrs
inc
adc
xor
lcall
insb
push
jecxz
push
fidivrl
cld
adcb
in
sbbl
jb
ret
mov
mov
mov
test
push
arpl
push
add
mov
ret
cmc
dec
loop
ss
adc
jmp
clc
and
inc
adc
repz
scas
daa
push
or
xchg
mov
mov
mov
mov
daa
sahf
lahf
jle
lods
iret
dec
adc
jnp
insb
rep
insb
dec
adc
int3
mov
fistps
pop
mov
cmpsb
adc
mov
xor
pop
mov
scas
popa
or
xchg
cmp
pop
cmp
mov
loopne
ret
rcrl
cmc
add
cli
pop
icebp
xchg
mov
sub
xor
leave
inc
xchg
fistpll
sahf
xchg
inc
adc
pop
loope,pn
lea
rcrb
dec
mov
mov
ficoms
xchg
dec
adc
cmp
sbb
adc
cli
xor
mov
jb
fsub
push
push
js
push
pop
pop
orl
aas
jns
mov
pop
hlt
aam
arpl
pop
cmc
sub
rorl
test
cmp
sti
arpl
jg,pn
lcall
cmp
test
repnz
out
cmp
and
jns
add
mov
pop
sbb
jbe
rorb
sbb
es
je,pn
daa
push
jns
xchg
mov
testb
roll
mov
ret
test
aam
scas
xor
add
fcoms
lahf
call
stc
pop
cmp
push
add
movsl
or
xchg
int
xor
xor
mov
add
or
jns
push
mulb
jo
stc
ljmp
sbb
rclb
sub
popa
lods
call
mov
daa
test
call
outsl
mov
mov
mov
inc
adc
rcr
je
cmp
push
int
and
fstpl
dec
adc
push
lret
sub
in
or
scas
add
xor
cld
sub
mov
iret
push
sub
xchg
sbb
jl
ret
cli
fs
push
add
cmp
inc
push
mov
movsb
lods
gs
or
cld
push
sub
daa
out
stc
pop
mov
mov
aam
mov
cmpsl
lods
sub
add
cmp
lock
out
addr16
xchg
inc
and
outsb
imull
test
jb
ret
repnz
xchg
sub
call
dec
sbb
dec
icebp
pop
cmp
pushf
inc
xor
out
cli
and
test
shrb
or
mov
sahf
pop
test
leave
lods
sub
pop
lea
dec
xchg
mov
mov
mov
loopne
ljmp
jle
pop
shll
repnz
pmaddwd
push
insl
movsl
sub
mov
lret
scas
or
pop
insb
test
or
mov
fnstenv
xlat
imul
and
pop
mov
push
mov
dec
test
lahf
mov
mov
mov
fnstcw
jbe
or
mov
jmp
jge
in
sbb
in
call
call
cli
cmpb
movsl
and
cld
push
sub
fistpll
xor
sub
fcmovu
jp
sti
fdivl
roll
add
add
rcll
and
mov
mov
testb
jae
add
loopne
jb
push
cld
fs
out
jne
int3
mov
and
cs
jnp
adc
inc
or
inc
jp
and
lret
aaa
jns
jg
jl
add
push
mov
insb
mov
aaa
data16
push
repz
inc
lock
inc
fwait
jmp
cld
test
xchg
mov
dec
adc
jb
je
cmp
cmp
xchg
inc
inc
data16
mov
dec
or
imul
sub
or
jl
xchg
into
xchg
inc
icebp
leave
aaa
mov
xchg
cmc
test
push
lret
mov
adc
dec
in
mov
mov
outsl
call
enter
rcll
insb
ljmp
icebp
mov
mov
dec
adc
outsb
inc
jne
pop
fstl
mov
testb
dec
and
test
push
les
mov
inc
or
jmp
clc
scas
pop
or
and
add
sti
mov
mov
mov
pop
negb
push
pop
add
ljmp
in
test
pop
stos
loope
cmc
add
pop
mov
push
repz
mov
cwtl
cmp
mov
push
das
sbb
mov
aam
mov
in
outsb
lods
insl
sbb
fcoml
iret
mov
add
fistpl
pop
testl
cmp
sbb
arpl
mov
fucomip
jo
outsl
gs
push
scas
jb
in
mov
or
addr16
pop
sbb
out
lds
leave
insb
inc
or
push
orb
inc
or
and
cmp
sub
cmpsb
rcl
popa
jmp
add
cld
pusha
push
or
ret
pop
popa
jmp
in
nop
cmp
cmp
es
pop
cmpsl
cwtl
cli
pop
cmpl
add
addr16
mov
lods
sub
imul
pop
jl
out
roll
movsl
cmp
sbb
push
negl
gs
pop
add
mov
mov
push
lret
mov
dec
pop
lods
ss
negb
movsb
cs
pop
add
cmp
das
movsl
sub
loop
mov
sarb
bswap
xchg
cmpsb
adc
cs
idivl
hlt
cld
mov
jbe
ljmpw
lods
data16
mov
mov
lock
cmp
in
dec
jmp
mov
xor
sub
in
insl
pop
push
jg
and
aas
out
imul
mov
fbstp
inc
adc
push
adcl
xor
test
icebp
push
fnsave
in
push
mov
movsb
pop
mov
inc
push
scas
sub
mov
dec
or
fbstp
pushl
lea
loope
xchg
add
cld
or
mov
leave
xchg
inc
stos
mov
xchg
mov
adcb
aam
jp
aas
or
jge
inc
or
outsb
sub
aas
jns
pop
into
push
push
andb
push
jns
mov
push
gs
clc
aas
mov
lretw
sbb
mov
bswap
repnz
out
outsb
ret
jmp
sbb
out
pop
mov
nop
inc
repz
mov
jmp
jge
fs
mov
lret
fidivrs
inc
or
xor
jae
lret
sub
mulb
lret
adc
inc
imul
test
cmp
cmp
pop
jb
dec
or
insl
sub
dec
sub
adcl
pop
mov
pop
incb
fucomip
outsb
test
mov
mov
mov
lock
jle
and
sub
dec
cmp
xchg
xchg
adcl
add
adc
fbstp
dec
pop
testl
sub
xchg
dec
pop
ss
cmp
pop
pop
divl
out
adc
and
dec
lock
mov
loop
mov
ljmp
cli
divb
or
fisttpl
in
insb
outsb
or
xchg
inc
sbb
inc
sub
mov
movsb
movsb
and
nop
xor
das
adcl
fisttpl
adc
cwtl
cmp
dec
add
jbe
jge
push
insb
insl
ljmp
cmp
inc
xor
test
push
pop
mov
cmpsb
loope
das
mov
fldcw
cli
lret
shr
sbb
cltd
xchg
std
inc
or
les
push
mov
sbb
mov
cmc
push
mov
push
clc
push
test
xchg
jo
sarb
addr16
aaa
jle
pand
orb
ds
cwtl
fiaddl
or
arpl
lock
into
jl
pop
adc
hlt
inc
xchg
mov
idivb
sub
jp
daa
cmp
jmp
xor
bound
les
mov
or
xor
mov
iret
fnstcw
and
les
push
mov
push
lea
popf
xor
loope
mov
rcll
and
sarl
arpl
xor
lahf
repnz
mov
jbe
adcl
or
sub
mov
outsl
out
fwait
xor
fsubrl
push
loop
pop
repnz
movsl
sub
ret
fildll
jns
or
xchg
push
out
and
adc
pop
js
xchg
rclb
dec
in
lea
mov
adc
subb
iret
mov
jb
jecxz
in
cs
out
xchg
xchg
lcall
jmp
testb
add
jp
cmp
push
dec
neg
sbb
cmp
jb
sbb
fidivl
cld
nop
daa
jnp,pn
repz
lds
add
mov
mov
mov
mov
das
icebp
pop
test
mov
push
lret
jl
rolb
and
xor
daa
cmp
sub
pop
inc
cmp
xchg
jge
ret
ljmp
cmp
mov
and
pop
xchg
xchg
ret
cmp
dec
push
jae
push
xchg
iret
mov
das
lods
cmpsb
imul
imul
ja
sub
adcl
es
or
insb
inc
xor
insb
jle
icebp
gs
mov
jns
mov
dec
mov
pop
mov
xor
out
adc
cli
stos
xor
int
scas
xor
data16
call
icebp
stc
push
aas
enter
es
mov
dec
or
push
sub
lods
inc
push
mov
xchg
pop
mov
fiadds
or
stos
ljmp
sbb
mov
mov
cmp
fcomps
cltd
pop
mov
mov
test
or
sbb
push
dec
adc
int
subb
out
insl
mov
cmpsb
mov
outsb
and
mov
inc
cli
icebp
pop
add
jmp
xor
fidivs
xchg
inc
mov
mov
cltd
cmp
xchg
jbe
jp
sub
nop
jb
cmp
mov
push
mov
shlb
or
movsb
or
sbb
add
jecxz
hlt
pusha
inc
adc
ljmp
push
repz
aas
xchg
lea
stos
dec
mov
jnp
movsl
mov
xor
or
jmp
adcl
jae
pushf
sub
int
imull
inc
or
mov
enter
loope
sahf
rorb
notb
int3
inc
fldl
sub
insl
cmp
mov
test
rorb
mov
js
fs
inc
sbb
ja
xchg
and
cs
mov
add
mov
scas
push
cwtl
fildl
jle
imul
rcr
sub
sbb
xchg
cmp
mov
sbb
xor
aad
clc
les
cmp
stos
cmp
jae
push
testl
leave
xchg
cmpsb
pop
jecxz
out
mov
test
stc
enter
cltd
aaa
es
inc
adc
hlt
pop
popf
dec
push
rcrl
test
mov
inc
test
jbe
in
and
mov
ja
into
stos
xor
out
insl
sbb
dec
cld
xchg
ds
lcall
rorl
imul
cmpsl
addr16
lcall
adc
push
cmpsl
jno
adc
xchg
in
dec
add
mov
mov
inc
or
aas
movsl
loopne
push
std
xchg
repnz
lret
cmc
js
test
sbb
mov
cli
bound
jecxz
lcall
or
mov
pushf
insl
std
data16
mov
bound
mov
cmpsb
sub
mov
fldt
cmpsl
add
xor
mov
mov
movsb
sub
fistpll
jne
fwait
add
mov
jnp
pop
xchg
loope
sub
imulb
mov
mov
xchg
inc
js
sbb
and
sub
xor
push
jae
test
loopne
mov
dec
or
mov
stos
fdivp
outsl
in
clts
pop
notb
lock
out
fidivrs
scas
sub
mov
data16
inc
jg
push
mov
push
mov
scas
icebp
pop
xchg
jo
das
cld
movl
daa
aad
cmpsb
cmpsb
or
mov
outsl
cmc
pop
or
push
lods
mov
sbb
lods
mov
pop
fidivrl
mov
sub
xor
lahf
cltd
inc
idiv
fs
push
clc
sbb
mov
add
push
ret
push
gs
push
fcoml
jecxz
inc
or
lock
push
inc
or
mov
movsl
sub
out
outsb
rcrb
sub
sub
pop
add
fidivrs
xchg
inc
sahf
and
gs
lahf
cmp
fcomps
int
inc
std
push
dec
push
pop
mov
xchg
ja
jo
lret
mov
fdivrl
stos
or
arpl
out
push
sbb
inc
adc
inc
vmptrld
mov
xor
jbe
ret
mov
mov
jns
loopnew
std
jg
push
ret
xchg
scas
jecxz
sbb
mov
movsl
adc
dec
inc
adc
ss
xchg
sub
negl
loop
pop
ror
add
rcrl
addr16
pop
and
xchg
xor
mov
push
fwait
jbe
jl
out
repz
adc
xchg
xchg
inc
loope
int3
iret
push
int3
repz
repnz
scas
jmp
stc
pop
xchg
lock
or
lret
testb
or
push
ret
cli
pop
pop
mov
lret
sub
cmp
and
popa
push
daa
push
out
pop
jbe
cmp
aaa
sahf
dec
xchg
aas
cmpsb
xchg
mov
sub
xchg
xlat
jmp
lods
repz
push
aam
loope
aam
stos
adc
pop
stos
xor
popa
mov
and
jge
stos
mov
shrl
je
xchg
adc
cwtl
pop
or
bswap
je
imul
es
aam
cmp
repnz
mov
push
sbb
ret
mov
outsb
shrl
sti
les
sbb
stos
adc
mov
xchg
cmp
adc
lcall
dec
push
add
in
popa
out
pop
subb
rcr
and
sbb
add
pushl
jb
out
rorl
or
mov
mov
cmpsl
xor
mov
inc
sbb
mov
scas
mov
fistpll
cltd
cmp
test
fsubrs
daa
xchg
sub
jb
push
mov
shll
aad
inc
xor
pusha
jmp
xor
xorl
fiaddl
jp
xchg
cmp
insl
sub
pop
push
and
pop
or
sub
dec
cmp
dec
stc
lock
jae
cmp
leave
mov
sub
inc
ljmp
xor
fstpt
mulb
rcll
sub
jbe
mov
jne
jge
push
iret
push
sbbl
fdivrs
sbb
push
scas
mov
lods
pushf
xor
xor
int
lcall
out
in
subl
xchg
fdiv
popa
hlt
iret
in
push
cli
clc
sub
add
enter
insl
adc
testb
adc
fnstenv
test
rcrl
mov
jl
pop
imul
sbb
jl
outsb
or
inc
mov
push
addr16
xlat
jge
ja
call
dec
inc
negl
mov
jl
and
add
ret
xor
imul
cmp
mov
pop
outsl
cmc
mov
out
jne
movsb
pushf
inc
jp
and
mov
push
sub
lahf
popf
sub
sbb
jbe
scas
scas
jns
ret
mov
sub
lahf
ret
xchg
into
jb
fildl
sbb
leave
out
je
mov
jnp
stos
mov
dec
mov
repz
mov
lret
mov
aas
mov
popa
lds
test
jae
adc
daa
fs
xchg
push
cmp
inc
rorb
fcoms
repz
mov
test
mov
jle
pop
or
jge
push
pusha
jle
add
push
jecxz
lds
xchg
out
aaa
lcall
sub
xchg
push
movsl
addr16
divb
pop
sti
jo
outsb
out
in
xchg
inc
push
sbb
mov
mov
adcl
dec
aam
dec
pop
out
or
cmp
repnz
xor
addr16
cmp
pop
cmc
pop
mov
pop
add
mov
cmp
inc
push
flds
and
fdivs
mov
rclb
cmp
jecxz
adc
loopne
movb
cld
jp
scas
call
repnz
cmp
lret
push
cwtl
pop
mull
pusha
hlt
pop
in
adc
test
xchg
jmp
xchg
inc
mov
jns
rorb
lret
push
js
inc
stos
das
fnstenv
imul
popf
cmpb
aam
gs
add
orb
inc
or
cmp
pop
cmp
mov
movsb
out
cmpsb
jp
lret
imul
dec
aaa
orb
flds
sub
pop
mov
ljmp
int3
imul
push
fwait
xor
or
das
cltd
gs
idivl
cwtl
aaa
mov
cmpsb
mov
loop
pop
inc
adc
inc
mov
inc
in
movsl
ss
lcall
sbb
lods
movsb
dec
into
mov
shrb
adc
shrb
ret
test
pop
leave
imul
add
add
test
ja
popf
cmp
pop
testl
push
mov
aad
test
loop
lods
jnp
push
cmp
mov
xor
stos
and
imul
or
cmpsl
mov
mov
std
mov
imul
imul
pop
popa
dec
movups
push
out
adc
adc
aaa
cltd
sbb
aad
cmp
or
scas
xor
adc
push
push
rorl
mov
lahf
pop
push
in
jb
nop
lcall
add
push
and
cmpb
imul
daa
cmp
lahf
sarb
je
pusha
icebp
push
out
jp
lock
testl
cs
mov
out
push
jp
into
stos
mov
xchg
int3
push
in
std
loop
dec
es
orl
popa
pop
add
mov
xor
rorl
sbb
cmc
es
in
xchg
xchg
aas
inc
loopne
test
iret
mov
mov
add
sbb
insb
cli
dec
push
or
push
add
push
xchg
mov
pop
and
lcall
cmp
and
outsb
ljmp
xchg
inc
pop
lret
bound
jmp
xchg
jmp
lds
sbb
mov
jbe
push
movsl
mov
or
shll
xchg
sbb
dec
sarl
and
stos
inc
sub
pop
jmp
incl
int3
mov
in
or
xchg
aas
pop
jg
push
add
rcrl
lods
dec
adc
adc
mov
jmp
or
push
outsl
sub
inc
fwait
xor
adc
xchg
cmp
add
push
les
mov
or
sub
sub
dec
outsb
lret
xchg
cmp
sub
sbb
sarl
pop
je
dec
push
inc
xor
dec
loope
cmp
sahf
mov
hlt
add
sbb
add
loopne
push
fiadds
or
pop
adc
mov
mov
and
adc
imulb
pop
push
mov
xchg
pusha
int
jnp
test
into
mov
or
ja
arpl
mov
mov
mov
arpl
dec
xor
imul
sahf
rcl
test
ret
mov
aas
fdivrs
xchg
xor
mov
sub
fstp
push
dec
adc
jg
mov
jp
and
jl
das
dec
adc
rcr
and
xor
mov
sub
insb
je
dec
push
or
lahf
push
push
loope
xchg
es
shll
xchg
add
jb
lds
mov
jge
and
fwait
inc
mov
stos
dec
adc
push
sarl
add
pop
into
jecxz
cmpsb
mov
lahf
mov
mov
leave
orb
inc
adc
movsl
mov
testl
push
aam
cmp
mov
mulb
xor
xchg
push
sahf
cmp
nop
ret
sbb
les
jp
andl
popf
fldenv
mov
aad
inc
scas
popa
cwtl
cmp
mov
xlat
xchg
push
jge
loop
mov
and
popl
inc
stos
aam
aas
mov
xchg
aas
or
jge
dec
lcall
push
sub
dec
hlt
pusha
dec
aas
ljmp
fsubl
add
pop
or
mov
lock
mov
add
jmp
pop
sbb
dec
stos
xor
push
je
cmpsl
jecxz
ljmp
inc
or
iret
cmp
mov
mov
aaa
clc
in
cld
gs
jmp
js
int3
jnp
fwait
mov
shlb
sub
cmp
cltd
inc
enter
push
lret
insb
or
arpl
mov
sbb
mov
jp
inc
push
les
xchg
gs
jae
xchg
cmp
hlt
pop
add
pop
jmpw
xchg
cmp
mov
mov
lds
pop
add
cmpsb
sub
lret
sahf
std
pusha
ja
jle
stc
fs
lret
xchg
cmp
dec
dec
rorl
fdivs
fwait
pop
cmc
mov
test
popf
jecxz
and
cmpsb
pop
leave
cmp
inc
or
mov
sub
push
in
jo
xchg
or
cmpsl
mov
les
fdivrl
cmpsb
pop
mov
mov
mov
push
cli
adc
movsl
sub
loopne
and
xor
xchg
add
popa
aaa
repz
pop
xor
jl
inc
stos
daa
js
stos
daa
mov
mov
inc
push
or
mull
push
les
popf
icebp
adc
insb
les
lods
push
je
leave
push
jae
subl
lcall
mov
int
cmpsb
pop
add
jne
jecxz
out
stc
fdiv
jbe
outsb
or
xchg
jp
movsb
stos
pop
fs
cmp
jae
sbb
xchg
inc
cmp
ret
sbb
je
ret
xchg
xchg
push
mov
rol
adcl
fistl
sti
pop
xlat
mov
int3
inc
or
fwait
icebp
gs
or
cmp
gs
or
pusha
adc
daa
cmp
mov
sbb
negb
inc
sbb
jno
out
adcb
adc
jg
dec
ret
cmpsl
repz
les
test
sbb
jns
sbb
fnstsw
cmp
sub
or
and
loope
push
pop
or
jbe
add
xlat
push
jg
jb
insw
pop
add
aad
mov
jne
rclb
adc
sbb
inc
inc
call
push
ja
cmpsl
sub
jg
cmp
xor
jmp
out
cvttps2pi
inc
insb
test
xchg
or
mov
stos
mov
mov
and
jg
push
xor
jecxz
sbb
cmp
in
sarb
shrb
mov
mov
test
sub
pop
orl
sahf
je
outsl
push
int3
xor
sub
sbb
sub
add
dec
adc
or
sub
arpl
pop
adc
movsl
xchg
sarl
and
cli
sub
clc
xor
sub
sub
stc
mov
mov
xchg
movsb
xor
data16
popa
out
js
and
jecxz
int3
lret
add
mov
sbb
in
lcall
mov
not
mov
fsts
jbe
aas
lea
dec
out
iret
sub
push
push
add
jg
mov
addr16
fcom
subb
mov
cmpsl
xchg
mov
mov
mov
mov
cwtl
lret
mov
mov
stos
daa
mov
or
outsb
call
push
aad
lret
xchg
into
mov
stos
sub
mov
mov
add
outsl
push
out
and
mov
test
rolb
push
or
cmp
popf
das
pop
add
js
or
xchg
insb
add
and
aaa
faddl
stos
add
lds
mov
cmp
insl
cmc
imul
mov
or
mov
shll
fdivl
repnz
inc
and
cli
xchg
test
lret
bound
sbb
lret
into
dec
jmp
sahf
sbb
push
in
lahf
cmp
jae
repnz
rclb
sub
popa
clc
adc
inc
cltd
xor
gs
popf
xor
or
mov
mov
pop
mov
shl
testl
add
std
mov
lret
test
fdivl
call
das
leave
outsl
push
sti
push
rclb
mov
aad
lods
inc
mov
ret
lret
dec
sbb
dec
fwait
cmp
int3
imul
in
push
mov
je
jno
inc
fstpt
xchg
xchg
sub
pusha
stc
xchg
in
inc
pop
mov
pop
in
into
gs
lahf
cmp
mov
mov
fbstp
sub
xor
sbb
add
sbbb
clc
push
jmp
jp
aaa
lods
dec
jb
jl
mov
daa
iret
and
je
lock
inc
and
cmpsb
inc
int3
arpl
sbb
enter
dec
jmp
push
in
popf
cmp
mov
lock
adc
stc
adc
dec
xchg
xor
ljmpw
or
test
pop
or
nop
sub
jno
mov
shl
clc
scas
add
xor
push
lods
add
incb
test
sbb
je
jmp
sub
dec
rcrl
es
mov
lods
inc
lahf
hlt
std
xchg
es
repz
sbb
inc
cltd
cmp
lret
lahf
cwtl
jmp
out
sbb
es
outsl
or
fdivrl
pop
arpl
jecxz
dec
adc
ss
pushw
aaa
ss
test
fmull
mov
sub
pop
cli
xchg
xor
sbb
add
ss
and
push
jmp
jns
cmp
int3
mov
daa
int
fidivs
out
scas
inc
and
xchg
movsl
inc
int3
arpl
sbb
sbb
rorb
or
pushf
cmp
mov
out
mov
adc
push
fs
xchg
das
adcb
mov
addr16
or
xchg
or
jno
mov
ret
clc
lods
add
xor
push
lods
call
test
xor
sbb
mov
lds
testl
dec
lahf
loopne
shrl
inc
popf
repnz
xchg
and
int3
arpl
inc
sbb
jbe
jmp
inc
xchg
cmp
enter
xchg
jmp
daa
mov
insl
or
cmp
fs
loope
dec
adc
shlb
add
test
fimull
or
sub
pop
cld
sti
xchg
jg,pn
fbstp
shll
add
test
push
hlt
push
in
and
inc
jae
js
rclb
xchg
sub
sbb
scas
inc
push
jno
xchg
mov
les
mov
xchg
jmp
les
cmp
inc
in
mov
lcall
or
mov
or
mov
xchg
sub
shrl
sbbb
cmp
mov
movsl
lea
scas
sub
fistpll
nop
stos
add
xor
pop
scas
std
push
imul
dec
movsl
xchg
xlat
jo
jmp
clc
movsl
cmp
ret
jb
cmc
dec
ret
pop
jge
xchg
sub
loope
shrb
inc
fwait
icebp
call
out
inc
sbb
addl
rol
arpl
mov
sbb
ja
insb
or
cmp
gs
mov
mov
adc
shrl
add
xchg
jne
sub
ret
cld
xchg
sub
dec
loopne
dec
sbb
add
test
repnz
in
and
cmp
leave
rcrl
xchg
sub
sbb
ja
ljmp
mov
ret
sbb
hlt
nop
in
add
cmp
inc
jecxz
mov
cltd
xor
ja
in
xchg
mov
fldenv
popa
mov
xchg
sub
imul
pop
icebp
mov
sarl
cmpsb
mov
jae
lods
sub
xchg
test
lret
sbb
sbbl
push
outsl
push
in
mov
ret
hlt
dec
ret
pop
jl
xchg
sub
loope
iret
push
call
out
inc
sbb
test
cmp
bound
mov
sbb
ja
imul
fistpll
mov
std
mov
mov
adc
push
xor
rclb
or
jne
sub
ret
cld
xchg
sub
loopne
dec
sbb
add
test
icebp
push
in
and
cmp
leave
rcrl
xchg
sub
sbb
ja
jmp
xchg
mov
ret
sbb
hlt
in
add
cmp
inc
loop
mov
cltd
xor
mov
in
xchg
mov
xchg
sub
or
dec
xchg
sub
imul
pop
icebp
mov
sarb
cmpsb
mov
fdivl
lods
sub
xchg
test
dec
loop
lret
sti
push
imul
dec
movsb
xchg
outsb
push
in
lahf
mull
or
dec
ret
pop
jl
xchg
sub
loope
iret
addr16
cltd
lock
in
inc
sbb
test
cmp
popa
or
sbb
push
imul
fbstp
mov
std
mov
mov
adc
shrl
mov
xchg
jne
sub
ret
cld
xchg
sub
loopne
dec
sbb
add
test
lock
in
and
cmp
leave
rcrl
xchg
sub
sbb
ja
call
xchg
mov
ret
sbb
hlt
mov
add
cmp
inc
loope
mov
cltd
xor
mov
in
test
mov
xchg
sub
or
dec
xchg
sub
imul
pop
icebp
mov
iret
mov
cmpsb
mov
fdivl
lods
sub
xchg
cmpsl
decl
xor
sbb
sbbl
into
dec
movsb
xchg
insl
push
in
sahf
mull
or
dec
ret
pop
jl
xchg
sub
loope
iret
data16
cwtl
lock
in
inc
sbb
test
xchg
cmp
pusha
or
sbb
ja
imul
sub
push
data16
mov
mov
adc
shrl
std
mov
xchg
jne
sub
ret
cld
xchg
sub
loopne
dec
sbb
add
test
out
push
in
and
cmp
leave
rcrl
xchg
sub
sbb
ja
out
inc
sbb
xchg
mov
ret
sbb
hlt
in
cmpl
or
cltd
xor
mov
in
test
mov
xchg
sub
pop
popa
mov
xchg
sub
imul
pop
icebp
mov
into
mov
cmpsb
mov
fdivl
lods
sub
xchg
cmpsb
decl
xor
sbb
sbbl
into
dec
movsb
xchg
insb
push
in
popf
mull
or
dec
ret
pop
jl
xchg
sub
js
gs
xchg
lock
jmp
sbb
test
xchg
cmp
pop
or
sbb
ja
imul
xor
push
data16
xchg
mov
adc
shrl
cld
mov
xchg
jne
sub
ret
cld
xchg
sub
loopne
dec
sbb
add
sbb
out
push
in
pop
jbe
cmp
leave
rcrl
xchg
sub
sbb
ja
out
inc
sbb
xchg
mov
ret
sbb
hlt
mov
cmpl
or
cltd
xor
mov
in
addl
or
fs
push
popa
mov
xchg
daa
sbbb
mov
imul
pop
icebp
mov
int
push
lcall
cmpsb
mov
fnsave
sub
xchg
movsl
decb
das
sbb
sbbb
iret
dec
mov
push
in
pushf
mulb
or
dec
ret
pop
jnp
xchg
sub
loope
into
fs
xchg
out
call
ljmp
test
pop
or
out
lock
mov
shl
ja
push
dec
loopne
mov
incb
test
sbb
xor
push
sub
dec
rcrl
or
jbe
sub
ret
std
xchg
daa
jge
loopne
dec
sbb
add
test
in
push
out
push
jne
cmp
enter
xchg
xchg
sub
sbb
ja
in
dec
pop
outsl
xchg
mov
ret
repz
test
fimuls
mov
cwtl
xor
shlb
push
jmp
inc
fidivs
aam
cld
add
sbbl
mov
imul
push
icebp
mov
int3
mov
cmpsb
mov
fidivs
stos
sub
xchg
movsb
std
dec
loop
sbb
sbbl
xchg
aam
push
out
fwait
cmc
movsl
cmp
mov
ret
pop
jp
xchg
sub
loope
int
mov
xchg
out
call
jmp
or
xchg
cmp
les
movsb
mov
pop
lock
mov
ret
ja
imul
xchg
sub
push
push
dec
xstore-rng
cmpsl
xchg
cli
movsb
cmp
out
xchg
xlat
or
ja
sub
ret
xchg
es
loopne
inc
sbb
js
addr16
lcall
xchg
sbb
movsb
cmp
mov
sub
sbb
js
jecxz
dec
adc
shlb
rcrl
mov
fmull
or
cs
pop
mov
dec
fbstp
shlb
add
dec
xchg
and
sbb
shrl
ja
cmp
lret
cld
pop
adc
dec
stos
cs
mov
les
mov
dec
push
adcb
roll
mov
shrl
out
cltd
hlt
cmpsb
cmp
in
inc
les
push
xchg
sub
lcall
xchg
in
add
out
push
mov
or
xchg
xchg
cmp
ret
movsl
mov
pop
icebp
adc
sub
fbstp
dec
loop
mov
add
xchg
fsubrs
shrb
stc
movsl
cmp
xor
mov
ret
pop
jle
push
movsl
push
mov
sub
pop
repz
stos
inc
sbb
std
cwtl
cmp
leave
push
xchg
push
ljmp
movsb
cmp
push
outsb
vcvtsd2ss
xchg
sub
sbb
jns
loop
dec
adc
add
addr16
out
xchg
fisttpl
repnz
sub
jns
out
dec
loopne
or
incb
pop
mov
mov
test
jbe
cmp
leave
rcrl
adc
dec
cmpsl
das
fsubrs
xchg
mov
ret
sbb
hlt
dec
imul
adc
mov
shlb
lock
icebp
cmpsl
and
lds
xchg
sub
leave
pusha
mov
xchg
ljmp
out
pop
mov
pop
icebp
mov
mov
cmpsb
mov
pop
repnz
jns
decl
xor
imul
or
shrl
clc
movsl
cmp
xor
mov
ret
pop
jge
montmul
cmpsb
add
loope
shll
call
test
lret
cld
xchg
cmp
enter
dec
jmp
cmpsb
cmp
insl
les
mov
jp
loope
dec
adc
cwtl
pushf
xor
push
out
xchg
xchg
fimull
repz
sub
ret
jp
out
dec
loopne
pop
cltd
xor
shlb
add
dec
lea
test
scas
aad
loopne
mov
mov
enter
push
adc
dec
cmpsb
xor
xlat
outsb
xchg
mov
ret
repz
insb
add
rolb
mov
iret
pop
lock
lock
and
pop
jne
xchg
sub
enter
xchg
jmp
shrb
cmp
mov
push
icebp
mov
lea
aad
pop
xsha1
cmpsb
mov
pop
repz
adc
dec
loop
test
add
movsb
xchg
sub
imul
cmp
jg
mov
rclb
cmpsl
add
lds
call
test
sbb
add
xchg
cmp
sbb
and
pop
lock
mov
ret
lds
xchg
sub
push
in
dec
loopne
dec
adc
cltd
fwait
xor
push
in
xchg
xchg
hlt
xchg
sub
ret
jnp
in
dec
loopne
push
lcall
pop
mov
sbb
lods
insl
fbstp
cmpsb
add
mov
mov
stos
test
loopne
dec
movsl
xor
insl
xchg
lahf
testl
repnz
insl
add
adc
rolb
and
gs
lock
out
test
push
ljmp
sub
pop
mov
nop
call
shrb
cmp
mov
aaa
mov
mov
ficomps
bts
adc
dec
loop
test
add
mov
aad
pop
mulb
mov
rcll
test
popf
loope
iret
and
push
lock
cmpsl
inc
sbb
add
xchg
cmp
sbb
lock
aas
mov
ret
hlt
mov
jl
fbstp
lcall
and
mov
inc
xlat
fmuls
cmc
xchg
sub
ret
jl
in
dec
loopne
add
addr16
lcall
push
mov
xchg
fnsave
cmp
mov
stos
sbbb
js
mov
call
rcrl
jns
cmp
inc
lcall
xchg
in
test
pminsw
pop
jb
xchg
cs
pop
mov
nop
out
lcall
and
aaa
mov
mov
fcompl
or
jnp,pn
pusha
std
dec
jecxz
sbbb
adc
mov
aad
aad
pop
mulb
mov
iret
adc
iret
and
push
lock
movsl
inc
push
mov
imul
xchg
cmp
lds
mov
dec
out
icebp
pop
insl
test
lahf
cmp
push
pop
repnz
jl
fidivs
cwtl
xor
imul
lock
xlat
push
movsl
or
cmc
vphaddbq
jl
loop
dec
loope
add
push
mov
push
push
test
movsl
cmp
cld
cmc
mov
mov
clc
dec
adc
dec
mov
add
and
push
mov
inc
insl
add
adc
and
arpl
xchg
jmp
inc
sbb
ds
pop
jo
cwtl
das
cmp
mov
mov
add
loop
and
xor
push
adc
or
jnp
pop
sti
dec
in
sbbb
jg
mov
add
es
pop
hlt
cmpsl
ds
mov
adc
int3
pop
xor
push
in
add
mov
les
xchg
cmp
and
pop
repnz
test
adc
pop
lock
jge
fwait
xchg
shrl
mov
mov
mov
inc
fdivrs
aam
cmpsb
add
es
adc
js
loop
add
cld
push
mov
pop
dec
cmpsl
fsubrs
jo
cmp
sub
les
dec
adc
jle
jecxz
dec
lahf
xor
shrb
cwtl
fwait
icebp
push
out
mov
outsb
add
inc
xchg
mov
enter
xchg
jmp
jp
out
enter
cltd
xor
out
rcrl
mov
add
adc
and
xor
adc
or
jl
pop
stc
dec
in
jle
xor
sarl
and
and
insl
push
repnz
and
hlt
mov
lret
adc
lret
enter
cltd
sbb
dec
out
cmp
insl
add
ds
adc
pop
repz
inc
fwait
xor
gs
cwtl
das
mov
fnstenv
pushf
xchg
sub
imul
mov
mov
inc
fnstcw
rclb
cmpsl
add
testl
jbe
jecxz
lcall
sti
push
mov
and
fsubrs
outsl
cmpsl
mov
ret
lds
adc
jl
in
dec
popf
xor
into
imul
out
mov
outsb
add
aas
xchg
mov
pusha
pop
hlt
xchg
out
inc
sbb
enter
lcall
pop
mov
fwait
adc
and
xor
stos
test
pop
cmc
pop
cmpsb
xor
xlat
sub
clc
dec
out
jl
xor
iret
mov
and
and
insl
push
icebp
test
mov
leave
adc
leave
sbb
enter
lcall
and
repnz
mov
loopne
hlt
adc
inc
cltd
xor
fs
cltd
xor
fdivs
pushf
xchg
sub
insb
pop
mov
mov
mov
inc
fnstenv
rcll
test
pop
pusha
testl
jne
in
std
pushf
xor
enter
push
mov
and
fsubrs
outsb
test
mov
ret
hlt
dec
adc
jp
in
inc
fwait
xor
int3
push
push
out
mov
outsb
add
ds
mov
les
cmc
nop
in
inc
pop
mov
adc
cmp
pop
push
fwait
xor
mov
jge
pop
mov
fwait
shrd
fidivs
and
xor
adc
push
movsl
xor
daa
jl
pop
testl
lods
dec
insl
add
into
mov
and
and
insl
push
lock
mov
enter
xchg
in
enter
dec
jmp
dec
out
cmp
mov
icebp
lea
mov
fistps
adc
inc
cwtl
xor
arpl
cltd
xor
xlat
mov
or
pushf
xchg
sub
insb
pop
mov
mov
scas
add
fnstenv
push
pusha
testl
mov
sahf
das
in
add
loop
fistpll
out
idivl
xchg
gs
inc
jb
adc
bound
cmp
pop
out
jbe
ret
cmp
jmp
or
iret
shlb
push
inc
test
cmp
xor
jecxz
arpl
lcall
mov
and
repnz
test
pop
mov
xor
xchg
cld
jne
jo
jns
pusha
or
pop
xchg
mov
aad
scas
sti
out
push
jo
in
aam
sub
or
or
push
pop
or
sbb
shrb
inc
add
pop
sbb
mov
arpl
data16
mull
fs
mov
mov
addr16
mov
sarl
mov
in
and
mov
adc
push
push
mov
out
xchg
mov
push
jbe
and
jge
orl
lahf
mov
int3
aaa
incb
xchg
out
dec
jle
xchg
and
les
enter
pop
fs
xchg
icebp
add
test
scas
mov
xor
push
or
sbb
xor
push
das
mov
test
dec
add
scas
ret
and
in
add
cmp
out
popa
sbb
add
mov
shll
fcomi
push
adcb
pop
add
iret
push
sbb
lahf
and
fsubrs
nop
cmc
jno
mov
cmc
push
jp
mov
dec
mov
les
fisttpll
es
rcl
ja
jbe
push
test
cmpsb
jp
lods
les
mov
iret
leave
outsl
je
cltd
pushl
inc
rclb
inc
pop
jp
sbb
cmpsl
mov
adc
shll
dec
mov
ljmp
jle
dec
mov
add
outsb
jno
ret
dec
test
mov
jb
jp
mov
mov
adc
fadd
aas
data16
sahf
icebp
jne
xor
mov
clc
add
jns
xor
mov
adc
cmpsb
pop
xchg
mov
movb
or
iret
push
add
jg
mov
mov
mov
insl
lcall
and
adc
in
pop
sbb
hlt
std
in
dec
idivl
sbb
std
in
clc
movlps
cmpl
add
cwtl
or
andl
or
ljmp
out
scas
fdivp
push
jo
inc
out
xor
cli
jmp
add
cli
in
std
ds
aad
add
mov
dec
clc
iret
pushf
pop
pop
scas
push
sub
sub
inc
xor
lret
jnp
mov
mov
and
sub
iret
cmpsl
int3
or
cld
addr16
jecxz
out
add
popa
incb
js
jb
data16
jmp
repz
lahf
mov
and
xor
sbb
mov
ds
cwtl
sarl
push
rep
push
mov
in
or
ja
jno
bt
rcrb
sub
iret
shll
sbb
sbb
or
dec
push
ds
pop
dec
or
testl
dec
das
mov
cmp
les
shlb
or
test
xor
mov
push
or
and
fidivs
push
stos
enter
stos
aaa
push
lods
and
cmp
stos
pop
pop
fstpt
outsb
lahf
data16
psubsw
out
mov
shrl
push
sbb
jg
gs
in
mov
add
mov
jmp
jae
out
adc
cmp
mov
jne
in
scas
fisubl
push
hlt
sbb
cmp
dec
mov
enter
mov
add
lret
xchg
in
lds
out
insl
lods
mov
add
pop
imul
inc
xlat
mov
sarb
adc
int3
test
pop
mov
ds
mov
jae
cld
dec
cmp
cmp
das
inc
or
mov
sbb
dec
ds
and
outsb
rcll
cltd
sti
add
xor
cltd
mov
nop
sarl
xchg
jns
call
pop
jne
aaa
and
int3
mov
dec
ss
mov
stos
stos
ljmp
test
sub
xor
fcmovbe
in
lods
rcrb
stos
pop
mull
mov
mov
mov
cmp
sbbl
es
shll
dec
lock
dec
out
adc
movsl
mov
adc
loopne
in
outsb
mov
or
xchg
dec
mov
mov
mov
xchg
mov
sub
push
je
push
mov
mov
das
clc
cld
and
in
mov
notl
jne
rcrl
insb
push
loope
add
jo
fwait
xor
sti
frstor
pop
or
dec
hlt
adc
sar
or
mov
mov
lret
or
nop
mov
jp
mov
lcall
sti
cmp
adc
xor
add
popf
push
xchg
bound
cld
mov
dec
testb
or
out
idivb
stos
loopne
sbb
xor
push
xor
and
int3
xchg
xor
and
xchg
push
cmp
outsb
or
cmp
test
mov
mov
cmpsb
mov
xorl
xor
cmp
pop
dec
ret
sti
jbe
mov
jecxz
pop
movsb
or
and
repz
das
sbbl
jnp
outsl
mov
xchg
jl
mov
shll
xchg
loop
mov
gs
je
and
out
sub
or
sbb
lcall
call
sbb
fistl
std
xor
sub
jns
out
push
jmp
arpl
in
adc
nop
inc
das
sub
sti
movsb
push
test
push
notl
sti
lahf
js
gs
arpl
shrb
ret
mov
cmp
jb
mov
jg
jp
sub
lock
bound
rol
subb
jge
insl
rclb
inc
shlb
aad
mov
loopne
xchg
jne
jne
mulb
fisubs
rclb
pop
cmp
repnz
mov
push
cmp
filds
xchg
enter
xchg
imul
and
push
push
pop
pop
cmp
loop
lods
mov
bound
aaa
mov
mov
jne
sarl
out
fnstcw
or
mov
pusha
in
outsb
ficomps
adc
pop
leave
in
mov
sub
es
arpl
sub
cmp
dec
hlt
inc
push
sbb
sbbb
jge
call
mov
mov
ret
pop
inc
sub
pop
inc
push
negb
pop
and
sub
je
dec
js
mov
cwtl
rorl
jo
addr16
daa
add
push
dec
test
ja
push
pop
adc
inc
cmp
jb
lcall
inc
arpl
mov
les
fidivs
or
iret
and
leave
and
jnp
stos
add
xor
stos
imul
push
ficomps
mov
jnp
lcall
push
mov
cmp
pop
mov
scas
push
jno
push
pushf
ds
test
sti
adc
mov
enter
jae
and
add
cmp
repnz
movsl
mov
push
pop
cmpsl
add
or
or
adc
inc
mov
fists
scas
push
push
mov
mov
in
or
cwtl
hlt
adc
or
cmp
pop
pop
fimuls
fsubrs
testl
xor
test
push
adc
rolb
cltd
dec
pop
xchg
dec
cwtl
sub
jns
jae
test
std
xchg
outsb
int3
push
iret
js
into
mov
mov
popa
mov
mov
sub
pusha
pop
ljmp
xchg
push
cmp
pop
lds
pop
ret
movsl
fisttpl
repz
roll
or
and
mov
mull
int
ljmp
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
popf
into
cmpsb
js
or
dec
mov
xchg
mov
es
cmpsl
insb
call
inc
inc
xor
fists
or
fucomp
push
in
and
lret
rorl
xorl
push
loop
lea
push
mov
mov
loope
mov
inc
dec
stc
loope
and
movsb
subl
jns
xor
test
int3
dec
jb
lds
lea
gs
clc
cmp
movsb
popa
gs
scas
dec
mov
jns
std
dec
.byte
.byte
lret
