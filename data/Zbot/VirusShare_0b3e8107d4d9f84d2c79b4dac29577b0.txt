push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
pop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
jmp
stos
xor
mov
mov
pusha
call
add
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
jmp
ret
mov
sub
sub
mov
mov
mov
shl
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
jg
mov
jle
mov
popf
dec
call
add
jne
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
mov
test
je
add
xor
movl
add
and
neg
addl
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
cld
and
add
and
add
and
add
and
add
and
add
add
or
add
push
and
add
and
add
and
add
and
add
add
xor
add
cwtl
and
add
and
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
add
mov
and
add
and
add
add
stos
and
add
add
add
add
xor
add
sbb
add
or
add
add
add
and
add
add
add
add
dec
and
add
and
add
add
test
add
pop
and
add
add
add
and
add
and
add
and
add
and
add
and
add
add
or
add
push
and
add
and
add
and
add
and
add
add
xor
add
cwtl
and
add
and
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
add
mov
and
add
and
add
add
stos
and
add
add
add
add
xor
add
sbb
add
or
add
add
add
dec
jo
outsb
dec
jne
gs
add
enter
jae
gs
popa
insb
jne
add
add
imul
jb
je
arpl
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
test
inc
jb
popa
je
inc
jbe
outsb
je
add
rolb
dec
gs
jo
gs
jb
jns
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
imul
bound
gs
add
roll
dec
gs
jo
jb
add
add
je
jb
jbe
je
push
jb
imul
push
add
add
je
jne
jb
outsb
je
jb
arpl
jae
aad
inc
gs
gs
inc
imul
outsl
popa
fs
imul
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
gs
jb
arpl
jae
gs
jo
add
insb
jae
jb
outsb
inc
add
aam
inc
gs
jb
jbe
push
jns
gs
add
inc
gs
je
imul
inc
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
gs
insl
gs
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
xchg
dec
jo
outsb
push
push
popa
je
add
gs
push
gs
dec
gs
imul
jb
ja
push
fs
jb
ja
push
popa
arpl
jb
jne
add
push
imul
gs
add
jnp
inc
gs
push
gs
inc
js
outsb
je
add
inc
gs
push
jns
push
imul
insb
outsl
jae
push
push
popa
je
add
jle
inc
gs
imul
gs
add
add
je
push
outsl
insb
outsl
jb
add
je
push
outsl
outsl
insb
add
addb
jae
push
arpl
add
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
push
jb
arpl
push
dec
inc
imul
add
push
jb
arpl
push
dec
inc
insb
insb
outsl
arpl
outsb
outsb
arpl
add
push
jb
arpl
push
dec
inc
insb
insb
outsl
arpl
jbe
add
add
arpl
push
dec
inc
insb
insb
outsl
arpl
insl
je
dec
inc
inc
inc
push
push
inc
inc
cs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
movsb
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
stos
stos
mov
mov
lcall
jg
add
jp
lods
lods
lods
add
test
push
mov
mov
mov
ret
lret
leave
lret
lret
int3
rcl
in
rcl
shl
iret
iret
shl
int
int3
hlt
enter
enter
mov
mov
mov
lods
lods
lea
cltd
fwait
and
jne
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
out
lret
rcl
sar
xlat
fcom
std
fcom
fdivr
fcomp
aam
rcl
sar
int3
int3
into
aad
dec
rcl
inc
mov
mov
iret
movsl
movsl
movsl
xchg
mov
and
add
push
add
add
add
add
add
add
add
add
stos
lods
lods
add
scas
sbb
mov
jnp
mov
mov
dec
lret
ror
sar
aam
xlat
xlat
call
xlat
call
aam
dec
into
int3
dec
into
int
aad
dec
int
inc
mov
mov
ljmp
cmpsl
cmpsb
ljmp
pop
or
or
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
dec
add
push
add
push
or
inc
or
sbb
add
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
enter
int
call
rcl
call
xlat
call
xlat
call
dec
into
int3
dec
leave
lret
int3
int3
inc
rol
mov
mov
ljmp
mov
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
bound
pop
fs
aas
cmp
das
or
push
sbb
cmp
ss
cmp
cmp
and
and
add
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
sarl
leave
call
ror
call
aad
call
aam
dec
iret
sar
leave
enter
vcmpsd
mov
mov
ljmp
movsl
movsb
popf
pushf
popf
cwtl
xchg
xchg
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jno
jg
jle
jg
jg
jb
jo
bound
mov
cmp
inc
mov
jo
outsb
nop
popa
popa
bound
inc
inc
xor
add
add
add
add
movsb
movsl
movsb
add
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
lret
lret
dec
enter
ret
mov
mov
lods
lods
scas
jmp
fwait
cltd
call
xchg
xchg
xchg
xchg
cltd
lcall
aas
ds
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
jo
add
pop
or
jl
xchg
fcoms
addl
jnp
jmp
outsb
jo
data16
fdivs
jae
jg
jle
jp
jp
arpl
inc
inc
cmp
pop
pop
sbb
adc
or
lods
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
test
sahf
sahf
popf
decl
test
decl
xchg
xchg
mov
mov
xchg
mov
jns
jns
xor
xor
add
add
add
add
add
add
add
add
add
add
mov
push
push
addb
in
mov
mov
addb
decb
xchg
loope
jb
enter
mov
addb
data16
cmp
and
jle
cmp
mov
test
icebp
stos
stos
stos
sti
lods
stos
lods
lods
stos
lods
test
test
movsb
movsl
mov
xchg
xchg
xchg
decl
jge
jp
js
jnp
jp
mov
cwtl
movsl
movsl
movsl
mov
mov
mov
mov
mov
mov
mov
scas
scas
stos
xchg
push
adc
add
or
add
add
add
add
add
add
push
pop
adc
mov
mov
xchg
xchg
xchg
incl
test
mov
xchg
std
cwtl
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
or
addl
mov
pop
pop
push
or
inc
inc
dec
imul
xchg
xchg
leave
cltd
cltd
fistps
fwait
lcall
mov
mov
mov
nop
xchg
lcall
cmpsl
cmpsb
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsb
mov
jp
lods
cmpsb
lods
add
pop
adc
test
call
cltd
xchg
xchg
incl
xchg
decb
xchg
pushf
popf
pushf
std
movsb
mov
mov
in
xchg
xchg
in
test
push
jne
cmovp
add
inc
sub
push
dec
dec
dec
data16
jo
xchg
xchg
rclb
xchg
std
xchg
decb
xchg
xchg
lcall
cmpsb
test
stos
test
pushl
cmpsl
lods
mov
xchg
stos
std
mov
xchg
scas
mov
mov
ljmp
mov
add
pop
pop
adc
scas
mov
ret
mov
pushf
incl
mov
call
nop
nop
xchg
xchg
xchg
popf
sahf
pushf
mov
test
movsl
notl
jl
movsl
push
push
push
outsl
dec
dec
dec
pushaw
bound
jno
jae
jp
jg
test
int
xchg
xchg
in
nop
xchg
testl
lea
jmp
mov
mov
pop
mov
mov
xor
jbe
mov
movsl
mov
mov
mov
mov
movsl
movsb
add
pop
pop
adc
mov
ljmp
popf
decl
xchg
call
xchg
xchg
call
xchg
xchg
lcall
sahf
sahf
sahf
mov
mov
lcall
xchg
xchg
les
xchg
cltd
in
xchg
xchg
out
mov
stc
xchg
test
std
xchg
je
cltd
push
test
movsb
push
cmp
inc
jge
mov
jnp
mov
jae
mov
insl
ljmp
pcmpgtw
stos
or
lods
or
pushl
mov
mov
pushf
movsb
mov
movsb
add
pop
pop
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
popf
sahf
lcall
sahf
pushf
lcall
xchg
xchg
decl
cwtl
xchg
call
cltd
cld
cwtl
cwtl
sahf
stc
mov
xchg
pushf
cld
sahf
mov
xchg
push
xchg
pop
jg
xchg
dec
jp
lcall
sahf
push
push
jmp
adc
ljmp
pcmpgtw
lods
adc
scas
adc
mov
imul
adc
pushl
cmp
mov
scas
lods
scas
movsl
movsb
movsl
sub
mov
add
add
add
add
pop
pop
adc
mov
ljmp
popf
call
popf
popf
lcall
mov
movsb
jmp
cwtl
xchg
decl
mov
mov
xchg
ja
cltd
jo
fwait
arpl
call
cs
decl
adc
nop
or
call
add
fwait
add
sahf
pop
pop
jmp
sbb
pushl
pop
jno
mov
outsb
mov
and
mov
and
inc
test
les
mov
mov
sahf
mov
movsb
add
pop
pop
adc
lods
mov
mov
cltd
pushf
lcall
movsl
movsb
jmp
cmpsl
cmpsb
ljmp
cmpsl
cmpsl
lcall
mov
mov
decl
cmp
mov
popa
decl
push
pop
incl
add
incl
add
lea
pop
decl
add
fwait
add
sahf
add
or
pushl
daa
ja
mov
sub
mov
sub
inc
sub
cmp
movl
mov
mov
lret
movsl
dec
mov
movsl
movsb
add
push
adc
cmpsl
scas
ljmp
sahf
jmp
test
lods
ljmp
mov
scas
lods
lods
jmp
jno
decl
or
incl
pop
push
incl
add
addb
incl
add
lea
push
call
add
lcall
jmp
addr16
mov
cmp
dec
cmp
dec
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
movsb
movsb
movsb
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
mov
mov
cmpsl
cmpsl
ljmp
mov
pushl
mov
pushl
stos
stos
lcall
and
push
decl
orps
mov
push
incl
add
push
decl
add
xchg
add
sahf
add
mov
add
stos
add
jo
ret
dec
inc
mov
int
mov
roll
call
dec
mov
xlat
dec
xchg
call
dec
xchg
fimull
fmull
fsts
call
test
std
mov
mov
mov
lahf
sahf
or
add
add
add
add
dec
dec
adc
jl
popf
mov
lcall
test
pushl
mov
pushl
mov
mov
scas
mov
movsl
xchg
decl
popa
decl
adc
pop
decl
add
xchg
add
xchg
add
pushf
add
add
test
pop
ljmp
add
ja
int3
dec
nop
call
push
cwtl
call
push
lcall
push
pushf
ficomps
jmp
pop
sahf
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
mov
lahf
add
inc
inc
adc
ja
sahf
cltd
popf
jmp
lahf
cltd
popf
ljmp
mov
pushl
mov
mov
pushl
mov
decl
and
xchg
and
call
sbb
nop
or
nop
add
xchg
add
lcall
jmp
add
mov
fs
mov
xor
call
pop
fwait
fldenv
fisubs
fisubs
jmp
data16
in
test
call
push
test
call
test
mov
cmpsl
cmpsl
mov
sahf
mov
add
add
add
inc
inc
adc
jb
lcall
lcall
scas
scas
pushl
mov
mov
mov
mov
ljmp
push
jle
xchg
sub
fwait
jo,pn
cltd
das
outsb
lcall
pop
callw
add
fwait
add
mov
add
lods
add
mov
pushw
adc
rolb
fldt
jmp
jo
jmp
jno
jmp
jb
jmp
je
in
je
out
jbe
in
je
out
jb
jmp
mov
mov
cmpsl
cmpsb
lcall
lahf
add
add
cmp
js
mov
lcall
mov
pushl
mov
mov
inc
rol
mov
cmpsb
scas
lcall
outsb
lcall
aaa
je
lahf
xor
lcall
lcall
add
movsl
add
add
mov
popa
pushl
add
enter
fsts
jmp
js
jmp
jg
in
xorl
push
test
push
test
call
mov
mov
test
cmpsl
pushf
pushf
popf
daa
lahf
mov
lahf
add
add
add
pusha
add
ss
jne
jge
out
test
xchg
xchg
xchg
pushl
mov
mov
mov
ret
ret
pushl
outsb
mov
fwait
cmp
inc
jl
movsl
inc
jge
mov
sbb
add
pushf
add
movsb
add
test
pusha
ljmp
add
mov
add
shlb
movsb
call
mov
push
mov
push
nop
ret
xchg
ret
push
xchg
ret
push
xchg
clc
pop
in
mov
ret
clc
lods
stos
stos
mov
popf
popf
xor
popf
add
add
add
inc
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
pushl
mov
mov
inc
ret
ret
inc
ret
mov
mov
jle
lcall
cmp
movsl
xor
popa
lcall
add
test
pusha
ljmp
add
mov
add
leave
add
call
xor
jmp
ja
out
xchg
ret
push
lcall
hlt
lcall
cmc
lcall
cli
sahf
int3
sti
lahf
int3
cli
cwtl
leave
push
xchg
ret
jmp
mov
cli
mov
mov
lahf
sahf
lahf
aas
nop
xchg
add
add
add
cs
outsb
dec
dec
dec
jecxz
pop
pusha
call
mov
mov
mov
sar
ret
inc
inc
mov
ljmp
dec
cmp
dec
mov
lods
push
mov
mov
pop
pop
lcall
pop
ljmp
popa
mov
add
movl
jbe
loopne
xchg
out
lea
push
movsb
int3
push
cmpsb
int
mull
iret
cld
cmpsl
iret
sti
test
stos
sar
std
stos
iret
test
push
lahf
jmp
mov
dec
enter
mov
into
lahf
lahf
lahf
dec
xchg
xchg
xchg
add
fwait
lcall
xor
sub
inc
inc
inc
bound
push
xlat
jae
jo
mov
rol
rol
mov
ret
ret
ret
mov
dec
enter
ret
pushl
push
test
lods
push
mov
lods
dec
test
sahf
sbb
lcall
add
stos
add
mov
arpl
mov
add
int3
add
xlat
add
loopne
jge
out
pop
test
cmc
lahf
lret
sti
scas
sar
cli
mov
cld
mov
cld
mov
cld
mov
cld
mov
cld
mov
cld
mov
mov
mov
push
movsl
jmp
mov
call
lret
mov
mov
sahf
lahf
mov
or
add
add
xor
add
dec
dec
ss
outsb
mov
aad
jmp
fcomp
test
int3
int
lret
lret
lret
lret
lret
leave
lret
inc
leave
mov
lods
jmp
push
mov
lods
jle,pt
lahf
punpcklwd
mov
add
mov
mov
add
rolb
jo
xlat
add
loopne
je
jmp
jno
cld
scas
aam
std
mov
cld
mov
std
mov
xlat
mov
xlat
std
rcr
mov
int3
jmp
mov
call
lret
int
mov
lahf
sahf
jo
xchg
xchg
or
add
add
xor
add
add
add
pop
or
enter
in
out
out
jecxz
in
loop
jecxz
fucom
fcmovu
fcomp
xlat
cli
xlat
std
int
into
mov
push
ljmp
sub
mov
add
mov
arpl
mov
add
lret
add
aad
jae
faddl
ja
in
js
in
das
xchg
push
mov
cli
mov
inc
loope
std
inc
loopne
inc
fdivrp
std
inc
dec
fdivrp
dec
dec
loope
sti
mov
leave
call
lret
into
mov
mov
xchg
adc
add
add
std
add
std
incb
std
incb
repz
cmc
or
in
in
pop
jmp
in
sub
in
in
dec
jmp
call
out
jecxz
out
fcmovnu
fucomi
ret
stc
stos
outsl
xchg
test
js
movsb
adc
pop
ljmp
add
mov
add
int3
add
fadds
je
loopne
jbe
ljmp
cli
mov
loop
cld
lret
dec
out
dec
jecxz
dec
in
std
int3
loope
std
int3
loope
call
in
call
in
call
in
shl
cli
out
mov
fdivr
cmpsb
test
mov
cwtl
xchg
add
add
add
incb
incb
cmc
clc
clc
add
repz
add
hlt
icebp
push
in
lock
out
icebp
lock
in
in
pop
fnstsw
loopne
mov
xchg
sti
mov
pop
pop
jmp
add
mov
data16
mov
add
roll
jo
fiaddl
jbe
in
jp
in
adc
pop
stos
cld
mov
std
shl
std
shl
std
shr
shl
call
jecxz
aam
std
call
std
fld1
fldl2e
cld
shl
push
ret
aad
in
fcos
lret
lret
lret
test
fwait
xchg
xchg
xchg
and
xchg
xchg
add
std
cld
add
stc
add
cld
stc
add
cmc
repz
shlb
sarb
negb
add
add
scas
add
mov
add
lret
add
rolb
jb
faddl
jbe
out
jns
in
sbb
cld
cld
xlat
ljmp
fucomi
std
fucomi
std
fucompp
fucomp
fsubr
fucomi
fsubrp
fucomip
jmp
in
shl
push
ret
aam
out
rcl
iret
clc
stos
stos
stos
lods
xchg
xchg
xchg
jo,pn
outsb
add
add
add
loope
add
leave
sbb
lods
jl
repnz
and
lahf
add
add
mov
mov
add
int
insl
call
add
fiadds
jne
call
sub
std
shr
fucomip
fsubr
fldl2e
fldl2e
call
jmp
shl
cli
shl
cld
shl
stc
int
clc
int
push
rcl
out
mov
xlat
xlat
fdivr
mov
mov
lcall
add
add
add
add
enter
mov
lahf
jmp
sub
lahf
add
test
add
add
les
imul
fadds
jae
loop
jp
ljmp
cli
xchg
cli
leave
cld
lret
cld
stc
rcr
cmc
mov
sar
icebp
mov
into
out
mov
int3
jmp
ret
jmp
shl
jmp
in
mov
mov
xchg
add
add
add
int3
lret
add
shrl
loopne
ss
mov
add
mov
data16
mov
add
int
jb
rorl
je
ficoml
js
loopne
cmp
call
scas
int3
jmp
scas
leave
std
loopne
mov
cli
lock
int3
in
leave
rcr
loopne
xlat
shl
fcmovnb
call
out
test
out
out
popf
call
leave
lret
push
stos
stos
lods
adc
test
test
mov
rolb
ret
mov
sahf
stos
aam
dec
jg
pushf
sbb
test
insb
scas
and
mov
js
mov
inc
xchg
ret
push
mov
lret
test
mov
sarl
enter
leave
lret
lret
rcl
lret
mov
into
shlb
xlat
rcl
jg
fcmovu
jb
loopne
gs
in
out
call
xor
div
mull
repnz
icebp
sbb
fstp
or
mov
int3
add
add
add
mov
rolb
mov
test
imul
mov
pushf
in
mov
sarb
stos
mov
ret
cmpsl
leave
mov
enter
int
iret
into
iret
addr16
rcll
rcl
dec
aad
xlat
inc
rcr
aam
aad
fsubs
fcomp
fcompl
fchs
fstl
fsub
loope
in
out
jmp
in
lock
add
cld
cmc
add
cld
add
std
add
incl
mov
mov
mov
mov
lods
mov
mov
mov
mov
mov
ret
push
rol
inc
ret
xor
int3
lret
daa
int
into
and
aam
sbb
aam
adc
aam
rcl
aam
rcr
fadds
add
add
jecxz
add
jmp
add
xlat
add
incb
mov
mov
add
ret
ret
or
mov
mov
mov
push
rol
or
enter
enter
int3
lret
roll
rcl
add
xlat
aam
aad
aad
aad
xlat
add
fchs
add
aam
add
loope
add
add
out
add
icebp
icebp
add
std
add
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
ret
mov
mov
mov
ja
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
push
mov
enter
iret
jmp
aad
cmc
rcl
aam
iret
rcl
cli
int
int
lret
int3
lret
hlt
mov
mov
iret
stos
stos
lods
fwait
xchg
xchg
xchg
dec
ds
add
add
add
add
add
add
add
jg
addl
push
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
sarb
iret
ror
aad
aad
aad
rcl
iret
dec
int
dec
lret
lret
mov
mov
icebp
cltd
xchg
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jne
jne
jae
data16
inc
dec
dec
cmp
sub
sub
ss
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
inc
ret
dec
int3
int3
call
rcl
call
aam
dec
lret
lret
inc
mov
pushl
test
popf
sahf
sahf
xchg
xchg
cwtl
jmp
jno
xchg
push
pop
pop
dec
add
add
add
add
add
add
jg
jg
jp
jp
test
jnp
imul
pop
pop
pop
movsb
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
jno
jno
mov
scas
pop
mov
mov
mov
mov
inc
ret
mov
mov
mov
jmp
lcall
xchg
xchg
xchg
cltd
fwait
fwait
out
addb
adc
xor
add
and
add
adc
add
pop
cltd
cltd
cltd
add
popf
xchg
cwtl
fcoml
addl
jmp
js
sarb
jnp
jnp
jns
jb
jae
push
push
push
cmp
jne
sahf
sahf
pushf
mov
scas
scas
repz
scas
scas
sti
lods
scas
lods
std
test
test
pushf
sahf
popf
call
xchg
call
mov
lods
jmp
lods
scas
leave
movsl
cmpsb
movsl
cltd
jb
je
adc
adc
add
add
add
add
outsl
outsb
insl
pop
xchg
mov
loop
lcall
mov
nop
sti
xchg
xchg
xchg
lock
xchg
xchg
fimuls
mov
jp
pop
and
inc
inc
dec
outsl
outsb
outsl
orl
cwtl
cltd
repnz
xchg
xchg
std
lea
mov
xchg
xchg
xchg
lcall
movsl
test
mov
scas
std
mov
scas
mov
xlat
cmpsb
mov
jg
popa
pusha
pusha
or
lods
mov
cmpsl
mov
mov
mov
lcall
sahf
sahf
sti
lahf
mov
lcall
push
push
jo
pop
pop
outsl
insb
outsl
insl
xchg
subl
nop
mov
lcall
mov
pushl
pop
mov
jl
mov
lods
lods
insl
test
add
add
add
add
popa
or
mov
in
mov
xchg
call
cwtl
cwtl
lcall
cwtl
cltd
lcall
cli
xchg
xchg
cltd
jmp
xchg
mov
popl
mov
xchg
insb
xchg
xchg
pop
jg
sahf
dec
jl
mov
aaa
jbe
scas
sub
mov
insl
ljmp
sbb
pop
mov
scas
scas
jle
movsl
movsb
push
popa
popa
popa
or
mov
lcall
popf
popf
jmp
lahf
mov
decl
addl
cld
xchg
popa
cmp
dec
jp
cmp
xchg
sub
xchg
sbb
lcall
push
ljmp
sbb
sbb
mov
jno
mov
and
pop
xchg
mov
scas
scas
xchg
popf
sahf
popf
adc
add
add
pop
pusha
pop
or
lods
mov
stos
mov
mov
ljmp
test
lcall
pop
jns
mov
imul
sub
sbb
pop
incl
add
push
call
add
cmpsb
or
jb
mov
das
jge
lds
jle
leave
xor
dec
pop
cwtl
inc
test
imull
cmpsl
test
add
add
add
pusha
or
movsl
test
ljmp
scas
scas
pushl
mov
jmp
inc
jb
mov
pop
decl
or
add
push
decl
add
lahf
add
cmpsl
add
mov
outsb
inc
cmp
call
inc
mov
rolb
xlat
inc
xchg
fmuls
call
bound
stc
mov
mov
movsb
mov
incl
add
add
pop
pusha
pusha
or
popf
mov
ljmp
mov
mov
mov
ljmp
push
jge
mov
arpl
xchg
sbb
mov
pop
decl
add
add
lahf
add
cmpsl
add
scas
add
ja
iret
dec
xchg
call
pop
fwait
ficompl
fistps
jmp
pop
mov
jmp
insl
cmpsb
dec
cmpsb
mov
ret
cmpsb
xor
add
add
dec
pop
jl
jl
popf
xchg
lcall
scas
scas
pushl
mov
mov
jmp
cs
lcall
and
xchg
adc
xchg
add
lahf
add
cmpsb
add
scas
add
mov
addr16
xor
fsubl
jmp
insb
test
call
jno
in
jb
call
test
std
mov
cmpsl
test
add
add
add
dec
pop
insl
outsb
imul
test
lcall
mov
mov
sar
mov
jmp
cmp
cmp
popf
sub
xchg
or
pop
jmp
add
mov
gs
or
aad
xchg
jmp
js
jmp
cmpl
xrelease
push
mov
mov
cmpsb
cmpsl
push
fwait
fwait
fwait
add
sub
push
push
push
dec
pop
imul
xchg
mov
mov
mov
mov
mov
xchg
ljmp
sub
fwait
or
add
add
mov
gs
mov
push
ja
fistps
out
nop
mov
push
cwtl
push
cltd
clc
lcall
negb
inc
mov
stos
popa
mov
add
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
ret
inc
ret
mov
cmpsl
jmp
dec
cmp
and
sahf
add
test
pop
pushl
add
lret
fisubl
cmp
jp
push
mov
iret
cli
test
iret
std
stos
iret
lods
sar
stc
cmpsb
int
call
rol
stos
stos
stos
jne
pushf
popf
or
add
add
dec
dec
dec
aaa
je
jb
stos
test
into
out
int
cmc
lret
int3
lret
sti
lret
std
enter
mov
ljmp
adc
test
add
add
int
outsl
fildl
ljmp
sti
mov
cld
mov
xlat
cld
mov
fdivr
mov
sar
jmp
rol
scas
lods
scas
mov
add
add
add
add
pop
or
rcl
dec
loopne
loop
fsubp
loopne
fcmovnu
fadd
fcmovnu
out
mov
gs
cmpsl
sub
jmp
add
mov
add
aad
jb
loop
jl
icebp
push
mov
sti
inc
loopne
std
enter
enter
lret
dec
std
out
mov
leave
divb
sahf
sahf
sbb
add
add
std
std
add
std
add
jmp
or
out
in
sbb
jmp
xor
loopne
jecxz
mov
mov
mov
add
mov
fs
add
iret
add
fildl
jne
jmp
outsb
mov
sti
sti
iret
out
std
shl
std
shl
shl
call
call
std
shl
push
xlat
fcmove
sar
mov
mov
add
incb
incb
cld
cld
pop
aam
aad
mov
pop
xchg
lahf
or
ljmp
add
add
rolb
outsl
fiadds
ja
out
pop
mov
clc
mov
shl
fucompp
fldl2e
std
std
xlat
out
sti
fsub
xlat
out
sti
shl
push
aad
mov
sahf
sahf
das
add
add
int
int3
or
fs
mov
add
mov
add
add
loop
js
in
xor
cli
int3
loopne
clc
leave
fdivrp
test
hlt
xlat
repz
out
aam
in
aam
out
shl
ljmp
ljmp
test
add
add
add
aad
push
mov
jb
or
mov
insl
inc
pop
jae
lret
and
sub
fwait
clc
jecxz
mov
out
in
lret
jmp
fdivrl
leave
ffreep
sarl
in
fcompl
out
jmp
rorl
mov
add
stos
lods
stos
add
xchg
movsl
les
xchg
mov
xchg
fidivrl
jg
rol
stos
mov
lahf
mov
iret
mov
jge
lret
insl
aad
into
pop
ror
iret
dec
fcom
fnstcw
loopne
loopne
jecxz
fisubs
in
repnz
jmp
or
std
incl
std
incl
mov
mov
outsb
scas
mov
scas
mov
push
mov
mov
xor
enter
rcl
rcll
mov
rcl
or
loopne
or
int3
int3
add
incl
incl
lcall
pextrw
or
into
int
add
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
lcall
rol
enter
enter
mov
rol
mov
mov
insb
stos
stos
stos
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aam
std
rcl
sar
into
iret
int
vshufpd
mov
in
test
jg
sbb
pop
add
add
add
add
add
add
add
add
jae
jb
push
dec
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
ret
dec
into
int
aam
aad
iret
int
dec
enter
mov
jmp
mov
push
add
add
add
add
jae
jae
xchg
aad
jo
ret
popa
mov
push
outsb
jb
bound
pop
pop
pusha
sbb
mov
in
mov
mov
mov
lods
lods
lcall
xchg
xchg
lcall
xchg
cltd
lds
jno
es
daa
das
add
add
add
add
je
jb
popf
xchg
fwait
mov
test
xchg
xchg
test
addb
push
push
push
inc
mov
fwait
into
mov
lahf
mov
decb
mov
lods
test
cld
mov
mov
ret
xchg
aas
sub
push
add
add
xorb
movsb
test
test
cmpsl
cld
mov
mov
xchg
xchg
xchg
cld
sahf
pushf
sahf
cmc
lcall
mov
push
push
imul
jge
mov
xchg
notl
mov
pushl
push
cltd
mov
mov
test
stos
stos
add
add
add
scas
test
xchg
xchg
xchg
call
lcall
cwtl
cltd
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jne
out
xchg
bound
std
fwait
inc
jbe
cmpsb
cmp
sub
pushl
sbb
mov
jnp
mov
mov
imul
int
add
add
test
pop
scas
movsl
stos
test
lahf
pushf
sahf
jmp
mov
xchg
decl
push
js
xchg
inc
jae
lea
imul
sbb
call
or
or
scas
sbb
pushl
and
inc
daa
jnp
les
xchg
rcrl
subl
jae
push
mov
mov
cmpsb
pushl
scas
mov
sahf
mov
decl
or
xchg
decl
add
mov
adc
ret
dec
ds
rolb
call
inc
call
push
xchg
dec
cltd
mov
mov
mov
movsb
movsb
movsl
push
add
add
push
xchg
xchg
test
mov
lods
pushl
mov
ljmp
aaa
outsb
call
sbb
xchg
add
mov
add
mov
push
xchg
fcompl
loopne
mov
jmp
cmpsl
call
pushf
mov
test
cmpsl
cmpsl
pop
add
add
bound
adc
pushf
lcall
mov
mov
mov
fwait
dec
jle
pushf
xor
cltd
and
xchg
or
sahf
add
stos
add
mov
xor
call
jp
out
jl
out
jle
fstps
mov
and
add
add
dec
adc
push
cmp
mov
mov
ret
ret
mov
fs
cmpsb
inc
jl
lahf
and
pop
jmp
add
or
dec
xchg
out
lea
push
xchg
push
xchg
enter
enter
mov
cmpsb
sub
aas
aas
inc
adc
push
xchg
mov
mov
inc
ret
vcmpsd
stos
dec
cmp
sbb
movsl
add
mov
arpl
les
imul
adc
jmp
scas
clc
test
clc
lods
sar
sti
lods
sar
std
scas
sar
cld
scas
iret
ljmp
fldenv
incb
xor
xor
inc
mov
mov
aad
aad
rcl
aam
rcl
shr
leave
enter
mov
jmp
arpl
ret
add
aam
jae
out
xchg
clc
pop
mov
fdivr
cld
rcr
inc
cld
ret
icebp
mov
shl
cmpsl
cmpsl
dec
addl
lods
add
in
in
or
jmp
out
outsb
fcmovu
fisubl
mov
add
mov
add
faddl
jbe
out
cmp
dec
out
std
shl
call
out
shl
std
aad
push
leave
aad
int3
in
lods
scas
lods
popa
cmpl
add
std
incl
std
std
incb
int3
lret
shrb
sahf
sbb
lods
add
mov
add
loop
jns
cmc
push
movsl
inc
loop
std
out
std
aam
shl
sti
shl
sti
shl
push
leave
fdivr
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
mov
mov
cld
scas
add
imul
or
ficomps
cmp
imul
out
mov
into
bnd
shl
in
aad
jmp
fcmovnu
scas
ret
les
fwait
lcall
add
add
rol
mov
stos
xchg
and
push
mov
ret
int3
lret
ja
mov
xlat
mov
lret
vmovdqu
lret
iret
pop
xlat
dec
in
loopne
out
out
out
in
in
sbb
rol
add
mov
cmp
mov
lods
push
mov
mov
ret
lds
int
fisttps
into
into
int
aad
aad
std
std
add
std
add
add
add
rol
std
incl
std
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
out
and
loop
js
xor
mov
ljmp
loop
add
in
push
andnps
out
xchg
adc
test
mov
scas
pop
nop
mov
int3
icebp
sub
cli
popf
leave
mov
call
inc
cmp
gs
pop
sub
es
mov
cmpsb
stos
pop
xor
add
push
sbb
mov
ss
mov
xchg
ds
jge
jae
cmc
scas
mov
pop
inc
add
inc
mov
enter
and
jmp
adc
pop
movsl
cmpb
xchg
movsb
sub
bound
insl
sarl
mov
dec
outsb
lock
push
sbb
rolb
int
fisubrl
push
add
mov
add
jle
dec
out
xor
mov
movsl
mov
addr16
out
data16
add
jmp
notb
imul
jge
ret
loope
in
cmp
or
jae
repnz
push
stos
int3
test
add
mov
test
inc
sbb
nop
hlt
push
or
lods
stos
xorb
push
popf
jge
lahf
mov
xchg
aaa
cmpsl
add
inc
insb
sbb
cmp
adc
dec
lahf
cmp
fmul
mov
cmp
mov
aaa
and
mov
jmp
scas
clc
or
andb
loopew
shlb
lret
cmpsb
adc
cmpsb
daa
adc
and
ds
mov
push
inc
rclb
pop
inc
outsl
jp
rcrb
inc
pushf
rol
push
cli
lcall
ja
and
mov
das
lret
ja
jmp
aad
je
and
push
pop
mov
push
sub
xchg
imul
xor
xchg
scas
jbe
push
lds
mov
das
test
xchg
mov
inc
pop
xchg
std
imul
pop
rorb
into
or
pop
jno
push
mov
xor
inc
mov
pop
push
adc
inc
ret
test
aaa
scas
adc
mov
mov
data16
xor
jo
sti
mov
jb
filds
xor
xchg
mov
js
sbb
in
lahf
jne
dec
adc
out
sahf
dec
pop
cld
xor
pusha
lock
and
ret
xchg
xlat
aam
xchg
sbb
cmp
stos
pusha
test
jp
mov
push
gs
bnd
out
loopne
lret
and
icebp
test
loope
rcll
push
add
or
pushf
fs
mov
xor
cmp
xor
dec
pop
cmp
sbb
jle
insl
jbe
movsl
fsubrl
dec
push
pop
cmp
dec
push
les
mov
inc
out
imul
lods
test
or
lret
sub
sub
sbb
test
call
test
mov
mov
pusha
or
or
js
xchg
pop
nop
xchg
xchg
repz
bound
and
mov
into
dec
or
and
xchg
inc
cwtl
xor
movsl
movb
mov
pushf
orl
mov
scas
ja
lods
daa
rclb
cmp
rcrb
add
ret
test
and
pop
aas
jmp
sub
jne
jecxz
inc
fwait
sbb
nop
fdiv
enter
pop
xchg
or
das
xchg
cmp
push
filds
icebp
roll
push
add
adc
mov
xchg
lock
push
lds
xchg
fwait
cld
or
imul
int3
mov
inc
mov
jmp
fwait
cmp
dec
into
mov
mov
pop
dec
fwait
cmp
xor
enter
mov
mov
dec
in
or
jp
sub
jne
in
js
push
mov
out
lock
lcall
mov
push
jne
cltd
jp
sbb
subl
jb
lds
cmp
enter
stos
sub
divl
cmpps
imul
ja
je
out
push
imul
lahf
xor
into
mov
push
jmp
div
pop
jne
outsb
call
lock
pop
ss
dec
in
sub
pop
aad
add
sbbb
mov
scas
sahf
inc
mov
clc
pop
lea
mov
cmp
aam
or
aam
cmp
dec
repz
fnsave
mov
lcall
sub
push
loopne
xor
pop
cmpsb
jbe
cmpsl
sub
test
mov
mov
or
pop
inc
or
push
negb
push
pop
lds
in
addl
aad
xchg
push
cld
std
popa
adc
jecxz
repnz
xor
or
dec
pushf
je
add
loopne
stos
mov
mov
xchg
dec
cmp
push
inc
lock
lret
mov
cld
push
ljmp
dec
dec
mov
xchg
inc
add
hlt
cli
jno
xchg
sbb
cmc
push
pop
xchg
or
js
xor
inc
push
sbb
sub
fwait
mov
cmc
mov
lds
push
or
jg
pop
mov
out
outsb
and
pop
sti
pop
mov
or
jb
sahf
ret
xchg
mov
cld
test
movsl
into
sub
mov
mov
sbb
sti
mov
and
subb
pop
mov
int
cltd
fs
das
cli
mov
jecxz
test
sti
xchg
cmc
jp
and
mov
dec
addl
mov
jne
mov
push
enter
add
orl
mov
addr16
lret
bound
dec
dec
notl
dec
xor
loope
xchg
idivl
xor
pop
mov
dec
rolb
outsl
push
insb
repnz
out
pushf
cld
xchg
push
scas
stc
add
and
push
into
dec
stc
or
mov
lock
cmpsb
dec
pop
add
pop
jne
fstl
add
mov
bound
jg
and
sub
subl
cmp
adc
cmp
inc
sub
pop
gs
out
xchg
jnp
xor
into
stos
inc
add
lahf
xor
enter
mov
jge
movsl
enter
clc
stc
nop
sub
and
jl
inc
std
fnstcw
hlt
cmp
jnp
sub
cmp
imul
mov
lods
leave
inc
cld
data16
cmp
jb
stos
xor
cld
dec
xchg
outsl
xorl
sub
and
dec
push
adc
inc
imul
xor
jl
aam
popfw
or
into
xchg
mov
fistl
cmpsl
or
dec
fbstp
lds
data16
lds
jecxz
out
sbb
shrb
add
mov
pop
push
rclb
cmpsb
cmp
adc
les
xor
xchg
gs
jecxz
push
xchg
mov
jb
cwtl
mov
lds
mov
sub
pop
pop
ds
jl
or
iret
xchg
sub
mov
mov
push
setns
inc
jne
cmpsl
bound
stos
push
mov
sub
test
lret
sbb
cwtl
mov
mov
mov
call
cmp
scas
clc
push
ss
in
jbe
inc
dec
int3
stos
cltd
sub
out
pop
sbb
test
xor
sub
lock
incb
sbb
loopne
push
push
in
mov
js
imulb
sahf
cwtl
sbb
scas
cmpsl
or
sub
mov
cmp
into
out
notb
call
jge
imul
or
xor
fistpll
inc
adc
xlat
outsb
gs
fs
mov
fsts
stos
or
or
pop
sub
dec
out
jg
fdivl
shlb
add
and
sbbl
test
lret
cld
lret
cld
sbb
fdivl
jo
fwait
mov
ret
repz
sbb
inc
adc
mov
push
add
movsl
cmp
dec
cmc
mov
les
mov
loop
stos
repnz
jecxz
dec
rclb
pop
divb
mov
add
add
js
sub
fsts
lret
loope
loop
mov
inc
xchg
push
push
fs
ja
sbb
jnp
mov
out
fstps
sbb
mov
icebp
scas
insb
add
xchg
jb
lret
inc
movsl
cmp
jo
pop
scas
push
ret
dec
jle
lea
push
sub
imul
inc
and
call
lret
xchg
xchg
into
gs
ds
lods
inc
lahf
inc
loopne
aaa
cmp
out
cli
lock
imul
int
add
outsl
cwtl
cld
xchg
iret
nop
insb
lcall
sbb
inc
mov
mov
push
dec
mov
cmp
testl
leave
pop
pop
cmc
mov
and
jp
xchg
iret
data16
sub
sbb
mov
dec
loopne
dec
dec
in
pop
outsl
push
sbbb
push
and
inc
xlat
bound
xor
aam
xchg
adc
call
mul
test
sub
mov
scas
inc
lods
push
and
into
sbbl
sub
std
insl
loope
rcl
or
lods
xor
aam
inc
add
movsb
pop
hlt
aam
push
in
or
scas
sub
pushf
dec
mov
mov
imul
push
or
inc
testb
arpl
lds
push
or
lods
adc
cld
cli
jno
jp
sbb
movsb
mov
das
push
inc
es
sub
cmc
inc
into
push
out
sti
gs
clc
adc
cmpsl
push
aas
out
inc
fdivrp
sbb
add
mov
inc
and
sub
push
inc
push
in
xor
repz
push
inc
fadds
shrl
push
inc
ficoml
xor
xchg
add
xor
push
and
xchg
mov
mov
cli
lret
repnz
loopne
pop
xor
dec
dec
xor
subl
enter
mov
cmp
and
in
adc
jge
xchg
mov
lds
jns
push
cmp
sub
push
pop
call
inc
push
outsb
shlb
mov
roll
dec
in
adc
xchg
push
jmp
cmpsl
push
ljmp
push
out
stos
mov
fnsave
inc
fucom
fildll
mov
shl
stos
loop
xchg
sub
jne
sbb
popa
xchg
scas
inc
or
add
fwait
xlat
fnsave
or
rorl
inc
imul
dec
push
dec
sbb
gs
lds
dec
fists
sbb
adc
lods
inc
xlat
push
xorb
push
xchg
sub
and
jg
in
cli
mov
and
rcrb
jge
fidivs
sahf
xchg
mov
push
loop
add
stos
mov
adcb
pop
cmc
negb
mov
jmp
les
cld
inc
fsubrp
lea
fdivrs
xor
sahf
mov
lcall
add
inc
fidivs
fsubs
dec
and
lea
leave
add
lock
jle
les
outsl
push
xorl
scas
movsb
push
lods
adc
ss
test
adc
mov
fmull
sti
std
out
shlb
xchg
out
test
pop
lods
inc
xchg
xchg
insl
add
inc
jle
jl
xchg
cs
jns
incb
jbe
popf
xor
arpl
jg
lods
stos
inc
adc
in
mov
dec
fbstp
sbb
pop
mov
int
pop
mov
loop
mov
js
xor
and
inc
aas
mov
ds
jno
push
jnp
mov
aam
lcall
and
xchg
es
inc
pop
mov
add
jmp
test
mov
pop
popf
xor
push
negb
sbb
insl
repnz
std
add
adc
xchg
mov
xor
mov
shlb
inc
in
test
push
mov
test
orl
sbbl
cmp
aam
push
add
xchg
in
and
inc
fcmovne
mov
and
xchg
dec
mov
cmp
pusha
testl
outsl
insl
add
or
cmp
jmp
sub
jp
xchg
xchg
sub
test
pop
scas
loope
push
scas
nop
add
sbb
popf
loop
jbe
xor
nop
pop
cmc
and
or
inc
xlat
jns
sbb
dec
or
outsl
push
lods
sub
cmc
mov
sbb
inc
push
sbb
sub
adc
push
les
out
addr16
inc
fxch
mov
cli
addr16
xchg
cmpsl
sbb
dec
mov
and
dec
inc
jne
xor
shrb
push
adc
adc
repnz
mov
call
test
pop
mov
xchg
xor
data16
sahf
and
jae
dec
inc
cmpsl
ds
stc
nop
sub
ficoms
and
sub
stos
jo
xchg
sbb
cwtl
and
xchg
sub
jbe
mov
scas
adc
xor
mov
ret
in
or
mov
pop
repnz
imul
ljmp
lock
out
fnsave
cmp
xchg
xlat
stos
inc
push
mov
pop
sub
addr16
cmp
ret
pop
daa
pop
clc
push
xlat
and
fs
jp
xchg
mov
sbb
mov
scas
lods
lods
pop
sahf
sbb
ds
mov
rcll
cltd
pop
in
mov
in
cwtl
das
mov
push
es
jnp
sub
insl
pushf
or
dec
cs
lahf
stc
mov
xor
jecxz
mov
stos
inc
cli
aam
jns
mov
ret
push
out
jnp
or
xorl
lahf
ds
sbb
mov
les
incb
sti
enter
daa
ljmp
cmc
cld
mov
out
xchg
pop
mov
dec
mov
icebp
mov
insb
add
mov
mov
fistl
paddw
rcrl
out
test
dec
adcb
xchg
xor
add
and
xchg
lret
repnz
imul
dec
arpl
cmp
cmp
jbe
jnp
dec
add
andl
shll
iret
insw
cmp
hlt
sbb
mov
adc
cmp
pop
pop
testb
lcall
xor
jl
push
fistl
in
jmp
scas
adc
pop
shll
in
aam
popa
mov
adc
xorb
mov
mov
imul
ja
mov
dec
loop
testb
rcrl
mov
and
lret
and
sti
in
test
pusha
clc
or
mov
pushf
mov
in
mov
aaa
into
imul
insb
add
ss
test
inc
popf
jno
decl
lahf
push
and
cltd
jp
adcb
fwait
jl
and
loop
inc
inc
out
xchg
lods
inc
xchg
mov
sub
mov
int3
arpl
int3
lea
lret
mov
bound
mov
xor
mov
mov
loop
xchg
mov
js
jge
sarb
loope
adcb
or
data16
rclb
sub
mov
or
insl
add
sub
popf
fnstenv
sub
and
sub
lcall
sbb
cmp
push
ljmp
rclb
pop
cmc
daa
mov
stc
or
xor
push
cs
add
lea
add
out
push
imul
mov
scas
or
stc
nop
out
and
pushf
fwait
pop
hlt
int3
mov
lds
fildll
inc
fst
or
rcrb
mov
push
in
mov
test
rcrl
add
mov
mov
sbb
pop
and
sbb
scas
inc
movsb
cmpsl
dec
xchg
cld
xchg
or
adc
ja
adc
loop
mov
std
lret
cld
mov
arpl
addr16
adc
ret
mov
or
adc
mov
fs
test
push
divl
int
test
jno
xor
imul
xchg
aam
pop
outsb
testb
out
mov
mov
scas
lods
ret
int3
dec
test
rcl
nop
out
movsl
xor
xor
das
xor
sbb
ja
out
mov
call
data16
xor
lock
pop
hlt
shll
into
xor
movsb
add
daa
mov
inc
adc
push
ljmp
mov
ret
jbe
and
arpl
out
xor
pushf
pop
pop
mov
decl
lret
push
les
mov
mov
sub
mov
sti
or
mov
ror
push
mov
jecxz
push
cld
mov
mov
mull
aas
and
jle
mov
test
jg
xor
sahf
mov
inc
xlat
lock
shrl
mov
stc
add
and
add
fs
fs
xlat
sahf
mov
adc
or
mov
fbld
in
mov
repz
mov
data16
out
enter
shl
pop
or
leave
fmuls
or
test
ja
adc
movsl
cmp
xor
test
mov
inc
fcoms
or
add
jbe
pop
cmpsl
ds
in
int
fists
mov
inc
pop
mov
outsb
jmp
or
adc
sahf
xor
cmp
add
lahf
pop
sbbl
rorb
pusha
out
xchg
adc
inc
in
sti
mov
faddl
idiv
loop
mov
fbstp
in
pop
repnz
testl
mov
es
pop
arpl
mov
cmp
insl
jno
lahf
outsl
xor
lods
inc
repnz
sub
lea
mov
stos
or
adc
pop
xor
mov
es
pop
cld
push
mov
loop
imul
pop
mov
out
inc
add
aas
je
cmp
lds
adc
lods
push
int
jns
pop
mulb
pushf
in
and
or
xlat
cmp
xor
insb
mov
jbe
test
ds
jns
icebp
pop
cli
xchg
pop
adc
shlb
jne
mov
mov
pop
into
and
andl
xlat
outsb
and
cmp
lret
mov
mov
fwait
push
mov
stos
sbbb
or
mov
pop
out
scas
inc
loopne
mov
mov
and
xchg
push
push
lods
inc
test
pop
negb
ret
insb
mov
fwait
mov
xchg
push
pop
dec
in
mov
add
jns
mov
in
dec
loopne
push
or
pushf
mov
outsl
push
lock
test
jge
mov
or
cmc
mov
icebp
mov
jo
xchg
mov
dec
loopne
stc
jmp
sub
popa
clc
faddl
mov
test
jle
aaa
jno
cmpsl
ds
cmpsl
cltd
xor
fstpl
mov
hlt
sbb
dec
inc
dec
loopne
aad
popf
mov
ds
pop
out
enter
orps
scas
inc
or
inc
add
adc
cwtl
pop
clc
push
loop
stos
ljmp
aad
push
aam
fcomp
xchg
adc
inc
enter
lock
xor
xchg
adc
inc
ficoms
repnz
mov
loop
mov
and
ljmp
push
movsl
stos
es
lods
xchg
packuswb
jge
pushf
xor
mov
sbb
leave
pusha
movsl
cmc
int
jmp
rol
pop
ret
jne,pn
nop
daa
sbb
cmpsb
sahf
xor
test
add
cmc
mov
hlt
and
into
push
icebp
mov
adc
into
dec
push
call
lea
int
scas
idivl
das
add
cmp
dec
out
mov
jb
xchg
or
outsl
push
pop
repnz
xlat
outsb
pop
adc
test
xchg
mov
push
xchg
call
or
jmp
les
movsb
jle
fdivl
lahf
pop
cmc
sbb
cmpsb
cmp
mov
out
scas
lods
add
std
rcrb
adc
and
gs
add
fdivr
pop
mov
std
insl
rcr
std
fabs
fwait
xor
sti
test
int3
xor
jbe
in
call
push
fnstcw
shrb
lea
repz
das
mov
into
gs
ds
xor
add
pop
adc
jo
xor
and
mov
insl
inc
add
cmp
int
pusha
xor
jns
adcl
and
shrl
js
inc
inc
jae
sub
fs
pop
andl
cmp
pop
mov
lods
xchg
lods
out
std
mov
loope
pop
fsubrs
sub
mov
int
icebp
jnp
in
adc
cmpsl
imul
xchg
fistps
movsb
insb
add
xor
add
jne
test
inc
xchg
daa
mov
fwait
inc
inc
fcoml
test
push
testl
mov
loopne
dec
add
test
and
testl
cmp
push
pop
cld
xchg
pop
jb
mov
dec
imul
cmp
pop
adc
push
adcb
xchg
aad
aam
out
call
test
pop
cmp
mov
jp
and
xchg
inc
push
stc
nop
addr16
sub
xchg
sbb
icebp
mov
mov
or
add
bound
test
push
ss
test
test
ret
lea
inc
pop
adc
sub
xor
sbb
dec
or
jp
fsubrs
ss
mov
mov
int3
and
sub
in
xchg
in
cmp
outsb
xchg
sub
push
out
cmp
out
and
add
jbe
pop
sbb
data16
pop
repz
es
cmc
mov
shr
mov
dec
or
add
pusha
scas
inc
xchg
insl
out
xchg
sbb
adc
add
repnz
xchg
sbb
jle
scas
inc
jg
xchg
outsl
sub
mov
rcrl
es
xlat
mov
push
push
stos
and
dec
xor
jl
push
fwait
pop
lahf
push
jmp
stos
mull
clc
mov
pop
in
jg
dec
add
popf
xor
pop
mov
adcb
test
sbb
xor
push
sub
daa
mov
data16
fnstcw
xor
mov
mov
mov
pusha
sbb
push
jo
push
or
cltd
jnp
sahf
xor
fidivrl
fwait
jne
sub
fimuls
jnp
js
jno
jecxz
pop
or
lea
xchg
int3
arpl
fs
xchg
dec
mov
movsl
inc
movsb
sub
pop
and
std
xchg
lret
insl
mov
faddp
pop
call
or
mov
mov
imul
push
mov
mov
mov
or
in
dec
mov
xchg
sahf
fistps
mov
in
sbb
dec
mov
pop
std
sti
das
sub
xlat
outsb
push
dec
pop
lock
call
adc
les
pop
sbb
pop
in
in
fsubrs
test
pop
std
xchg
push
and
xchg
xchg
sti
xchg
push
inc
mov
shrb
xor
push
xlat
ret
hlt
mov
gs
jne
add
jno
inc
jno
inc
fisubrs
sbb
mov
cwtl
sahf
je
dec
imul
sub
js
push
enter
decl
ljmp
aad
add
rolb
pop
idivb
repz
out
mov
ja
sbb
test
jmp
push
cwtl
loope
xchg
sub
lret
mov
add
jle
push
call
cmp
cld
dec
xchg
cmp
les
das
add
or
addr16
cltd
mov
lret
push
loop
pop
lea
sub
mov
push
lods
pop
into
mov
test
or
mov
outsl
add
ljmp
inc
fcoms
push
stos
or
pop
sub
dec
mov
imul
pop
xchg
jo
mov
adcl
pusha
decb
push
shrb
inc
fcompl
jge
sub
pusha
lcall
jl
test
cli
in
test
cs
mov
outsb
add
mov
loop
inc
adc
int3
push
push
lcall
nop
leave
lods
sbb
push
xchg
sub
mov
repz
pushf
mov
sub
push
lret
bound
out
push
lods
xchg
pop
lods
enter
test
sahf
mov
sub
sbb
mov
sbb
ds
lea
loop
jecxz
stc
mov
or
push
mov
mov
data16
or
pusha
cmpsl
movsb
popl
sub
addr16
mov
jns
ds
arpl
aaa
idivl
sub
mov
dec
and
enter
les
pop
loope
lea
cmp
jecxz
cmp
out
insl
and
dec
cltd
in
mov
test
not
xor
mov
ljmp
mov
scas
dec
in
ljmp
sub
jb
lret
cmpsl
xchg
fisubl
mov
montmul
cmpsb
sub
sar
or
jo
or
sub
push
mov
outsb
hlt
sub
push
filds
pop
arpl
dec
push
out
jle
pushf
jg
cmp
or
xchg
jge
and
and
push
insl
scas
out
push
mov
fldpi
sbbb
outsl
jo
aaa
into
adcb
mov
fsts
xor
hlt
pop
lret
fwait
push
std
ljmp
or
mov
jmp
jecxz,pt
jp
jmp
rcl
mov
addb
data16
push
pushf
xor
mov
lahf
ss
cmpsb
cmp
and
inc
out
push
arpl
xchg
jbe
jp
adc
xor
loope
and
dec
cltd
ja
lret
jl
push
imul
aas
push
fdivl
sub
filds
movb
mov
imul
inc
pop
push
pushf
mov
push
test
inc
adc
inc
leave
inc
push
sbb
scas
mov
aad
cld
daa
iret
jmp
out
mov
popa
nop
jle
or
push
push
sbb
pop
push
mov
jbe
push
lods
inc
jo
mov
dec
daa
jns
xor
dec
lods
inc
jp
mov
ja
inc
lahf
xor
jno
inc
cli
fwait
xor
pop
out
pop
rorb
mov
icebp
sti
shrl
push
testl
pop
pop
adc
sub
dec
in
push
shrl
pop
lret
test
jns
in
leave
pusha
push
fldl
out
mov
push
xor
xchg
stos
pop
in
shrb
xorb
add
adc
xchg
pop
ja
xchg
hlt
mov
mov
xor
popf
arpl
pop
jmp
push
inc
sub
add
push
sbb
repnz
and
pop
push
cmp
dec
adc
mov
inc
lea
aad
adc
mov
pop
pop
movl
or
mov
cmp
add
shr
test
in
mov
cwtl
or
in
addl
stos
xor
pop
ret
inc
ja
shrl
loop
enter
pop
test
sbb
adc
cmpsb
sbb
mov
mov
xor
push
pop
lret
sub
pushf
adc
xor
push
cld
imul
push
add
sbb
aad
out
test
mov
sarl
adcb
add
dec
mov
out
push
sbbl
mov
jge
sbb
out
gs
je
push
xchg
sub
popf
xchg
xchg
sub
xor
ds
fildll
outsb
mov
mov
dec
clc
jns
cmp
cmpsb
jae
adc
mov
adc
outsb
add
dec
jmp
and
push
in
orl
push
je
ret
cmp
repnz
loop
addr16
fnstenv
mov
jb
in
cld
icebp
or
inc
addr16
jno
mov
pop
mov
pop
fwait
in
cli
xchg
mov
xchg
leave
jne
pop
ljmp
xacquire
pop
sahf
xlat
inc
add
int
inc
decl
push
cmp
shrb
int3
arpl
sahf
or
test
ss
orb
mov
cmovs
jl
jmp
jne
aam
xor
cld
xlat
dec
out
in
xchg
lret
fsub
into
xor
sub
and
jge
push
scas
push
jne
dec
adc
sub
xchg
sub
mov
test
sbb
rorb
mov
or
xchg
mov
in
imul
shrb
mov
mov
sbb
xchg
sub
dec
fildl
popf
scas
pop
stc
nop
push
iret
and
stos
or
aaa
daa
jg
cli
das
stos
sub
ret
hlt
lea
inc
test
ljmp
inc
lret
adc
inc
push
sarl
ja
js
fsubp
daa
daa
adcb
jbe
popf
inc
pop
inc
int
adc
popa
push
jo
xchg
inc
xchg
inc
movl
fisttps
inc
inc
int
mov
adc
sbb
xor
xor
xchg
subb
dec
in
dec
sub
cmpsb
lret
sti
sarl
jnp
lods
leave
out
xchg
into
jmp
movsb
xor
mov
jnp
fwait
mov
xor
mov
push
fwait
int3
loope
mov
xlat
or
mov
adc
inc
lods
shl
push
je
xchg
into
lahf
test
pusha
fsubrl
lds
mov
push
frstor
bound
fisubs
popa
out
cld
xchg
in
icebp
push
dec
lret
lret
and
jne
sub
mov
movsl
cwtl
inc
jo
fdivs
gs
rolb
xor
dec
call
inc
push
outsl
jo
adc
sub
fsubrs
cwtl
jp
cmp
inc
dec
jecxz
sbb
adc
jmp
fdivrs
push
cmp
iret
out
or
mov
cmp
mov
je
or
mov
pop
sahf
ret
stos
dec
std
enter
pop
or
push
sub
dec
cmpsl
hlt
sub
sub
mov
xor
in
in
push
inc
inc
mov
xlat
iret
sub
pop
mov
out
rcrl
scas
xor
mov
cmp
inc
add
xchg
aaa
dec
mov
inc
shl
cmp
xlat
jge
repnz
adc
xor
push
xchg
sub
xor
test
popf
sub
fstl
mov
out
jo
fcompl
andnps
pop
orb
sbb
lret
mov
pop
repz
stc
scas
lret
fucomip
pop
mov
add
mul
shrl
cmpsb
ss
sub
sbb
mov
std
pop
stc
sahf
and
jp
add
test
sub
scas
insl
test
gs
add
adc
cwtl
fs
xchg
mov
jb
push
movsb
xor
fwait
je
or
inc
fdivs
jb
roll
insb
in
and
dec
andb
jl
inc
scas
pushf
popf
xor
int3
xchg
sbb
add
jne
daa
mov
lods
xor
mov
cmp
sub
sbb
cmp
ljmp
mov
add
lret
rcll
or
sbb
or
or
adc
add
jg
in
notl
imul
addr16
lods
cmpsb
xchg
cmp
test
sub
add
mov
xchg
adc
int
push
dec
mov
das
ds
push
sbb
xchg
data16
outsb
enter
jmp
ror
sub
mov
jno
daa
mov
scas
and
xchg
push
rcrb
mov
icebp
mov
shl
mov
out
lds
int
lds
mov
int3
fnsave
and
pop
popa
and
arpl
mov
mov
inc
std
out
loopne
pop
xchg
sahf
add
jnp
loopne
test
inc
cwtl
fs
inc
test
push
call
inc
fimull
and
sub
mov
scas
jno
loope
sbb
push
xchg
push
sub
out
mov
dec
jns
test
pushf
or
outsl
out
pop
push
in
sub
jne
xchg
cld
xchg
data16
addl
stos
bound
jbe
xor
test
cltd
jp
jns
cwtl
mov
add
cmp
dec
sub
je
pop
cmpsb
insb
cmp
sbb
ret
push
xor
test
cmp
xchg
addr16
dec
inc
repz
push
jp
aaa
push
stos
inc
rcl
aam
mov
pop
sahf
add
mov
out
outsl
or
clc
jae
cwtl
dec
mov
aad
fildl
rcll
pop
cmp
movsb
ficoms
out
loopne
push
das
add
or
dec
das
fwait
sub
lock
roll
xchg
and
pop
push
xor
inc
inc
sub
inc
dec
ss
mov
pop
addr16
or
xchg
fisubl
add
mov
push
popa
xchg
test
cwtl
xchg
test
or
add
es
or
xchg
outsb
push
xor
xorl
dec
sbb
nop
dec
push
mov
pop
mov
cli
mov
mov
inc
pop
sub
scas
pop
sub
inc
repz
out
and
imul
imul
stc
mov
mov
sahf
loopne
std
xchg
and
sub
xchg
sbb
dec
push
lock
shrl
popf
test
repz
jp
in
sahf
inc
or
int3
xchg
or
dec
cmp
xor
test
movsl
test
stc
push
add
call
repnz
shrb
dec
testb
pop
adc
dec
and
cmp
montmul
cmpsb
test
int
inc
cli
xchg
ja
push
add
cmp
cmc
mov
jge
inc
inc
pop
gs
jno
inc
cmp
pop
sub
cmp
imul
lods
jge
and
inc
or
cwtl
jle
clc
int
nop
int3
lret
or
scas
sbb
test
mov
sarl
stos
lods
psubw
sub
push
mov
push
divl
mov
cmp
sub
jbe
icebp
sbb
sub
push
cmpsb
lahf
add
test
mov
in
push
stos
jmp
mov
adc
push
ret
or
sub
pop
sti
or
sbb
std
rorl
outsl
sbb
xlat
call
mov
dec
enter
add
mov
sub
dec
xchg
aas
jle
inc
icebp
push
mov
ret
cmp
es
jb
xor
add
inc
inc
jl
and
shll
jl
xlat
and
or
cmp
int3
and
out
jae
push
test
nop
cmpsl
iret
cmp
xchg
gs
add
movsl
test
rorl
sub
mov
cmp
imul
dec
movsb
sub
pop
lds
pushl
scas
dec
idivb
loopne
add
jge
xchg
cmp
mov
loop
dec
pushf
lods
jg
mov
adcb
xchg
mov
mov
jmp
xor
notl
je
add
ss
mov
imul
dec
stc
dec
out
sub
pusha
push
pop
jb
test
es
stos
inc
push
adc
das
test
xchg
cs
int3
in
xchg
into
mov
scas
inc
adc
in
jge
xor
xchg
hlt
pop
loope
and
popf
pop
lret
enter
jno
xchg
lret
das
fistpll
xor
jg
mov
fisttpl
sub
xchg
mov
mov
inc
mov
sti
out
xchg
inc
fyl2xp1
outsl
push
sub
enter
imul
jo
push
pop
dec
movsb
out
jo
pop
push
jbe
xchg
cmc
jge
cmp
out
mov
mov
and
in
adc
push
and
mov
pop
lret
jb
std
jge
popf
cmp
xchg
sub
pop
je
out
inc
mov
std
aas
gs
add
jo
sbbl
cmpb
push
mov
jmp
ds
out
lret
lret
jno
addb
loopne
rcl
mov
add
xor
jno
lods
or
daa
sbb
sub
mov
push
pop
adc
mov
pop
pop
push
jp
rcrl
mov
insl
bound
addb
loope
mov
cmp
dec
and
loop
sub
adc
jge
xchg
loop
shr
xchg
je
je
cmc
mov
jle
lods
xor
roll
in
adc
jmp
mov
add
xor
leave
out
xchg
mov
mov
adc
mov
mov
xor
xchg
iret
xor
pop
test
xchg
out
test
in
jns
enter
stos
mov
fucomp
and
jmp
cld
jge
lret
das
mov
in
pop
pop
xchg
lods
cmp
arpl
stos
inc
sbb
inc
out
insl
fists
call
mov
lds
add
fidivrl
fidivrl
sbb
roll
aaa
in
test
mov
push
mov
or
aam
cmc
mov
mov
or
sub
idivb
aas
dec
dec
jle
in
push
xchg
cmp
inc
psubsw
shll
dec
inc
jb
mov
sbb
or
std
cmc
pop
xor
mov
imulb
mov
ficoms
add
aas
fs
jo
and
xchg
out
or
jb,pn
andb
adcb
mov
dec
ficomps
sbb
ret
pusha
aaa
jp
imul
je
aad
xchg
sub
xchg
push
push
and
push
jp
stc
push
jns
jmp
mov
mov
push
and
inc
mov
pop
or
ss
dec
scas
xor
pop
aas
in
insl
jmp
xchg
sub
aaa
leave
mov
ret
mov
inc
call
add
ss
push
ljmp
and
cmp
out
jne
mov
adc
les
cmc
push
movsl
mov
sbb
cwtl
inc
xor
push
xor
scas
cmp
scas
or
add
lock
jge
pop
or
aas
pop
hlt
and
mov
leave
or
xchg
insb
mov
lods
xor
cwtl
xor
cltd
jecxz
xlat
in
or
inc
addr16
dec
popa
inc
mov
sbb
pop
test
xor
jl
inc
push
jbe
call
xchg
inc
cwtl
movsb
or
les
ror
mov
fcoml
add
lock
pop
push
scas
xchg
add
xchg
pop
adc
pushf
pop
sub
scas
in
dec
push
imul
rol
mov
imul
loop
or
mov
fnsave
jg
pop
enter
jnp
movsb
shl
add
or
and
lds
mov
clc
shl
jge
int
ret
push
imul
pop
mov
negl
ljmp
aam
pop
insl
push
add
pop
sub
inc
push
sbb
jno
das
sbb
dec
stos
jbe
mov
fisubl
pop
int3
mull
push
imul
lret
dec
out
sbb
pushf
sbb
and
or
jle
sbb
mov
inc
das
and
mov
and
fistpl
pop
cli
sbb
jp
mov
nop
mov
and
jp
icebp
jmp
sbb
scas
fdivl
jae
mov
repnz
sarl
jecxz
sarb
hlt
adc
lcall
enter
shlb
add
sub
insl
sbb
mov
xor
arpl
xchg
out
arpl
sub
lahf
test
xorb
mul
jmp
add
xlat
cmp
or
cmp
js
adc
lret
roll
mov
fdivs
in
ror
and
push
push
inc
sub
dec
out
repz
push
or
jo
loope
adc
adc
cmpsb
cmp
push
sub
sbb
inc
das
loope
mov
mov
push
decb
mov
call
mov
imul
or
inc
out
mov
cmp
rorb
loopne
mov
cmp
push
sbb
rorb
push
cmpl
push
icebp
cmp
xor
pop
int
in
push
xchg
jns
pop
pop
jecxz
out
sbb
adc
add
mov
cmp
outsl
pop
cmp
dec
xchg
inc
ret
jns
jno
dec
ss
imul
cmp
push
inc
xchg
adc
inc
mov
push
add
popf
mov
cmovb
repnz
mov
add
ds
sub
xor
ret
fdivp
jecxz
std
mov
inc
iret
push
add
xchg
scas
xchg
cmpsl
outsb
jne
inc
mov
lea
ds
or
aaa
mov
popf
ss
aam
fstpt
cli
mov
or
aad
dec
imulb
dec
into
xchg
jge
inc
mov
es
lods
mov
mov
dec
mov
fwait
out
inc
pop
pop
dec
in
imul
fcomp
nop
push
adc
sbbl
pop
call
dec
loope
pop
dec
mov
inc
jno
scas
inc
andb
aad
aaa
push
sbb
pushf
dec
mov
jp
sub
jb
in
nop
leave
sub
lret
clc
dec
xor
ja
push
ljmp
mov
sub
xor
sbb
jmp
mov
add
jo
mov
es
jmp
fiadds
loope
add
add
dec
xor
pushf
pop
fdivl
cmpsl
inc
scas
test
loope
cs
cs
cmp
sahf
xor
cmp
mov
mov
gs
ret
stos
adc
dec
enter
imul
sarb
or
cmp
xchg
dec
pop
hlt
mov
adc
insb
add
in
addl
test
bound
pop
xchg
dec
aad
pop
inc
fmull
and
out
lock
cmp
sbb
dec
mov
mov
push
sbb
adc
out
inc
sbb
fildl
mov
dec
cwtl
js
xchg
testb
adc
mov
xchg
ret
inc
fdiv
mov
pusha
testl
jle
cltd
pop
xchg
nop
mov
sbb
loop
mov
shlb
fnstenv
push
pop
lock
ja
adc
ss
sub
imul
add
hlt
cmp
rolb
data16
popf
leave
decb
mov
dec
cmp
scas
add
ja
adc
or
push
cld
adc
adc
clc
inc
stc
cmpsb
mov
shll
popa
jnp
cmpsl
mov
adc
xchg
inc
mov
mov
pushl
push
stos
fiaddl
or
sbb
dec
adc
pop
insb
test
rcl
test
out
sbb
xchg
fisubrl
nop
xchg
scas
inc
fcompl
imul
mov
rol
scas
es
mov
popf
xchg
push
out
mov
dec
mov
sbb
jle
sub
xchg
sbb
mov
adc
sbb
and
sti
mov
inc
sahf
xchg
xlat
jmp
or
cmpsl
mov
or
iret
cltd
mov
shl
out
pop
mov
xor
inc
pushf
je
jae
ja
out
insb
sahf
mov
nop
jmp
lret
mov
outsl
ds
mov
jno
or
jg
sub
adc
mov
aam
dec
or
adc
lods
lods
aaa
xor
inc
pop
leave
mov
cwtl
test
dec
iret
xor
call
or
aas
push
jg
or
rcrl
add
fwait
push
daa
imull
stos
ds
add
push
dec
push
push
jno
ljmp
pop
inc
fs
daa
ret
xor
jb
or
mov
sub
add
pop
outsl
scas
and
push
enter
cli
test
imul
aaa
xchg
lcall
jmp
cmpsl
mov
aas
js
scas
sbb
mov
or
xchg
outsb
jmp
sub
and
and
ja
or
pop
and
sti
addr16
clc
popl
push
jae
dec
sbb
jns
xchg
ss
arpl
int3
jb
call
test
cmp
sub
aam
flds
movsl
mov
ja
sahf
sar
repnz
sub
and
shrb
lahf
push
dec
adc
xchg
shll
jp
sub
test
add
jge
sti
xchg
pop
xchg
out
xor
mov
test
mov
jl
dec
fidivs
sbb
lret
xchg
outsb
cmp
fwait
xorl
mov
lds
dec
xor
out
push
mov
in
cmpsb
adc
mov
outsl
add
push
dec
mov
sub
jne
int
mov
ret
pop
adc
loope
cltd
xor
xlat
stos
inc
or
adc
enter
int
je
fsts
fldl
out
orb
pushl
into
sbb
mov
shlb
int
lahf
popf
fwait
inc
push
iret
mov
jb
add
mov
pop
cltd
loopne
jecxz
add
inc
cs
aad
pop
imul
mov
repnz
out
bound
rorb
mov
pop
leave
out
loopne
add
mov
mov
cmpsb
std
sub
sbb
fisubrl
rcll
pop
not
inc
mov
push
jecxz
inc
add
or
lea
push
fnstenv
lret
jb
cwtl
xor
mov
mov
sbb
dec
fisubl
jge
jae
jl
arpl
adc
cmp
gs
out
jmp
out
mov
pusha
movsl
inc
inc
iret
aas
shr
xlat
push
cltd
insl
push
jmp
lods
sbb
mov
mov
mov
xor
aad
out
inc
jg
jns
xchg
int3
xchg
vminsd
leave
in
mov
mov
insb
pusha
shrb
cmpsb
scas
push
sbb
sbb
aaa
xchg
jmp
rcrb
and
sbb
cmp
je
xchg
xchg
loope
push
std
nop
lock
pop
sbb
sub
test
mov
and
inc
es
js
xor
es
cmp
cli
xor
rol
mov
inc
inc
or
mov
in
iret
in
daa
addr16
mov
inc
inc
inc
stc
xor
cmpsl
sbb
lahf
repz
sahf
lcall
dec
sub
pop
xchg
sbb
leave
xchg
xor
aad
cmp
push
jo
inc
shrl
leave
loopne
jae
jg
aam
arpl
call
and
xor
mov
adc
sbb
sub
int
aam
sbb
int3
sahf
xlat
and
repz
stc
push
sbb
cmp
mov
mov
enter
xchg
push
stos
pushf
arpl
fstpl
push
movsl
nop
pop
xorb
in
mov
fistpl
pop
filds
push
add
adc
and
xor
and
ficoml
out
gs
enter
pushf
aas
sbb
mov
jmp
pop
cs
in
enter
rclb
xchg
shrl
testl
popa
or
jmp
mov
jmp
bound
in
out
clc
push
test
icebp
lret
js
gs
inc
test
sbb
sub
mov
push
ficoms
cmpsb
jns
sub
sbb
scas
fdivl
push
inc
adc
hlt
cltd
out
and
iret
cmp
test
xor
fists
lret
int3
pop
or
out
jb
sbb
ss
push
icebp
add
mov
ret
jo
jb
and
insb
scas
leave
cmp
sahf
cmc
and
mov
aaa
adc
inc
and
xchg
cltd
das
out
xor
or
xchg
jl
lods
test
sbb
shll
add
push
lahf
lret
mov
jmp
mov
mov
ficomps
mov
aaa
into
fbld
cmp
xor
push
mov
into
and
mov
ret
sub
mov
sbb
cltd
out
movsl
arpl
push
in
fs
stc
jae
insl
cwtl
daa
push
push
cmpsb
jbe
dec
pop
out
popf
ja
inc
fidivrl
stos
jns
push
fidivs
jmp
cli
movsl
cmp
sub
fistpl
jl
add
and
xor
xchg
xchg
rol
inc
shlb
scas
je
shl
cmp
in
jbe
sub
xor
mov
addr16
je
jp
notb
xchg
dec
lea
adc
sub
cvtps2pd
shrb
fwait
mov
xchg
mov
roll
repnz
movsl
mull
scas
movb
not
mov
es
loop
into
ret
inc
out
test
ret
xchg
test
dec
cwtl
outsb
cld
ds
je
sbb
mov
aam
aaa
mov
jo
cmpsb
in
out
jb
andb
xchg
sub
cwtl
jp
in
push
movsb
cmp
fdivrl
pushf
and
xlat
mov
pop
aam
sbb
cmp
fsubp
pop
dec
out
subb
adc
sbb
push
mov
mov
cmc
xchg
fimuls
mov
lahf
mov
mov
mov
loope
je
inc
int
mov
cmp
inc
xor
sahf
call
pop
leave
xchg
not
cli
push
cmc
daa
sub
xchg
push
cmp
mov
lods
push
rcrl
cs
dec
sub
adcb
jmp
mov
addb
xchg
movsl
dec
aaa
mov
sbb
pop
xchg
sub
repz
fwait
out
mov
and
out
inc
adc
ss
pusha
cltd
loopne
add
mov
adc
push
add
push
jne
sbb
mov
out
pusha
jno
clc
push
or
mov
lds
sub
movsb
fsubrs
mov
imul
inc
sub
fistl
adc
and
ljmp
mov
and
sub
incl
nop
xchg
sbb
push
out
and
xor
in
and
insb
shll
inc
adc
shrb
sub
xlat
daa
adc
add
lds
push
inc
sub
clc
xor
adc
aaa
cmpsl
mov
mov
packsswb
cmpsl
insb
mov
mov
mov
pop
aad
add
rorl
mov
xchg
inc
adc
idivb
aaa
mov
cmc
jle
ljmp
loop
or
pop
mov
icebp
loop
sbb
sub
pop
addr16
sahf
addr16
adc
pop
lods
arpl
fisubs
loope
mov
cmpl
xorl
loopne
mov
movsb
jns
sbb
inc
shll
inc
mov
and
push
xchg
stc
dec
or
insl
adcb
fiaddl
mov
push
faddl
or
and
pop
leave
push
lcall
inc
addb
push
aas
insl
inc
in
jbe
xchg
pop
mov
fwait
ret
ja
dec
pop
sbb
push
sbb
jp
sub
push
inc
or
add
sbb
lock
pop
mov
adc
lret
and
gs
mov
and
mov
xchg
call
fisubs
cli
adc
xchg
push
loope
psllw
cmc
movsl
cmpsb
mov
outsb
dec
pop
push
mov
xor
fsubl
or
pop
andb
adc
push
pushf
xor
xlat
gs
scas
inc
jmp
int
jge
cmc
mov
imul
cmp
rcl
jg
bound
pushf
shlb
mov
test
bound
aam
sub
clc
push
out
leave
inc
ret
ja
push
pushf
push
mov
inc
and
inc
or
push
jmp
and
fimuls
or
pop
jae
adc
incl
stc
nop
and
int
xor
add
lods
mov
mov
leave
and
fidivrs
mov
cmc
mov
addl
xchg
jbe
mov
addr16
shl
sub
mov
jne
and
cmp
aaa
js
pop
stos
push
popf
scas
mov
cltd
jne
out
test
inc
pop
mov
hlt
aas
mov
adcb
cmp
mov
mov
add
pop
mov
daa
in
mov
jno
pop
sbb
add
outsb
fdivl
push
sub
cmp
adc
pop
je
mov
push
stos
cmpsl
mov
mov
pop
mov
cli
pushf
cli
fstpt
lcall
and
fsubrs
or
sbb
xor
cmpsl
data16
and
push
push
in
ss
push
mov
iret
adc
ds
fisubrl
fidivrl
push
leave
push
pop
insl
xchg
daa
js
pop
mov
sub
jp
subl
movsl
cwtl
call
sub
mov
loopne
sub
dec
loop
sub
mov
jl
mov
jae
sub
nop
lds
pop
jmp
test
xor
add
aas
mov
enter
and
arpl
mov
jo
add
negl
mov
adcl
dec
push
lret
enter
mov
ret
push
mov
add
sbbl
popa
out
imul
sub
stos
inc
inc
and
jg
xor
jbe
adc
sbb
into
dec
push
cmp
xlat
jmp
mov
xor
pop
stos
shll
imull
iret
add
divl
subb
repz
fnsave
cli
xchg
jno
jne
sbb
cmp
and
jmp
adc
or
jg
ds
dec
rol
call
xchg
sub
into
pop
xchg
ret
add
imul
cmp
xlat
subb
sub
cltd
aad
dec
bound
imul
and
dec
cmp
icebp
inc
mov
pop
adcl
cmp
push
xor
ficoml
mov
dec
orl
mov
jno
push
dec
dec
rorl
rcl
push
ret
ja
shlb
push
inc
sbb
rorl
cmpsl
jl
subl
mov
aam
ss
inc
jnp
sti
lods
cli
dec
pop
adc
sub
inc
into
cmp
add
mov
sbb
jbe
insl
mov
cmc
cmpsl
outsb
iret
mov
js
jb
jno
shlb
push
fwait
sub
add
scas
xchg
loopne
mov
mov
sbbb
mov
cmp
sub
out
cmp
cmp
dec
loope
jne
mov
inc
or
dec
mov
jbe
adc
mov
dec
sbb
aas
rol
and
mov
mov
outsl
fwait
cld
jp
mov
fisubrl
inc
lea
inc
push
rorb
imul
imul
loopne
pop
jmp
adc
sub
sbb
xchg
dec
lock
jl
ja
jno
and
insl
xchg
xchg
icebp
dec
xchg
mov
dec
xchg
pop
es
negb
add
rcrl
fstl
popa
icebp
fbld
xchg
pop
add
pop
cmc
mov
movsb
ss
test
adc
lss
pop
call
and
arpl
pop
decl
ret
sbb
and
xchg
pushf
push
call
js
hlt
aaa
cmp
mov
fwait
sarb
leave
jb
repnz
mov
lock
sbb
lahf
aam
repz
jecxz
jle
mov
fcoml
mov
or
rcrb
inc
fisubrs
stos
xchg
jns
in
dec
adc
add
repnz
inc
lcall
fs
xchg
sub
es
mov
cmpsl
pop
cmc
sbb
jno
lods
jge
ja
test
push
xor
stos
jl
pop
into
popa
mov
lcall
lcall
stos
jne
fs
xchg
mov
andb
push
pushf
adc
pand
jmp
pop
lret
ret
lret
xchg
inc
stos
mov
loop
and
test
lcall
or
daa
ficompl
cmpsl
pop
push
jns
stc
inc
mov
stc
test
jl
popf
lods
pop
dec
imul
sbb
hlt
jae
fstpl
dec
ret
cmp
jmp
dec
loop
test
rcrl
test
add
loope
lret
or
lds
dec
fwait
test
dec
xchg
repz
jmp
mov
popf
sub
xor
mov
fwait
mov
pop
out
mov
push
test
cmc
stc
inc
aad
adc
xchg
sbb
loopne
pushf
popa
insb
add
aam
push
sbb
mov
sub
inc
push
fwait
add
dec
jecxz
jl
in
and
push
ljmp
in
dec
pop
cmp
and
call
inc
jge
repz
pusha
sahf
iret
inc
popa
icebp
mov
cmp
push
fstpt
jno
dec
loopne
xchg
mov
dec
xor
cmp
push
pusha
icebp
lods
sub
sub
adc
mov
jbe
xchg
adc
xchg
inc
cwtl
mov
cwtl
push
pop
in
stos
in
je
xor
int
fcmovu
ret
rcrb
repz
pop
mov
cmc
fimull
rorl
lods
cmp
cmpsb
inc
xchg
cs
cltd
jne
inc
aam
dec
push
imul
andl
jge
xchg
push
sub
inc
movsl
cmc
fisttpl
lods
into
jae
push
mov
xlat
stos
mov
sbb
sub
pop
stos
out
dec
daa
shrl
lea
ljmp
and
add
aad
cmp
call
or
or
xor
mov
lods
adc
mov
insl
addr16
aas
cld
xor
aam
ljmp
mov
fistpll
rorb
push
push
out
fistps
mov
xchg
ds
out
or
pushf
out
pop
hlt
adc
and
fbld
cmp
test
mov
mov
lahf
test
iret
mov
lods
mov
xor
inc
xlat
xchg
mov
movsl
cwtl
ret
hlt
dec
jl
gs
pop
insb
mov
push
push
dec
mov
adc
mov
les
mov
sub
idivb
add
test
js
mov
in
imul
out
and
test
mov
cmpb
and
xorl
cmp
mov
sbb
test
lret
ljmp
sub
lds
test
shll
cmpsb
popa
cmp
sbb
fidivs
ja
jnp
in
loope
cwtl
out
dec
cmp
adc
inc
adc
sbb
or
aas
mov
fs
ljmp
add
ljmp
test
in
fwait
xor
test
mov
frstor
mov
stos
in
jb
sbb
mov
into
bound
icebp
mov
xor
cmp
ljmp
fadds
cmp
fdivs
popa
aam
sbb
in
xchg
add
jae
adc
data16
push
test
test
jl
jno
push
cmp
pushf
pop
pop
test
xor
ja
push
lahf
ss
push
lcall
sub
inc
nop
jl
mov
cld
mov
aam
mov
mov
mov
fildl
mov
mov
pop
cmpsl
ret
nop
lret
ja
dec
jecxz
cwtl
call
mov
dec
out
pop
and
add
imul
jle
nop
daa
sub
scas
jmp
mov
jb
outsb
test
loopne
popl
mov
lea
fpatan
xchg
lea
popa
xorl
xchg
mov
cld
popf
cmpsl
sub
sub
out
mov
loopne
mov
fnstenv
push
pop
js
dec
test
or
xchg
les
xor
addr16
jb
roll
or
scas
stc
pop
cmc
push
inc
add
jbe
jnp
add
jmp
pop
pop
cmp
add
cmp
leave
pop
xchg
iret
loope
das
out
lahf
xchg
sahf
cmc
inc
mov
es
or
ds
imul
outsl
jecxz
or
popl
imul
test
or
mov
icebp
jo
jne
mov
shrl
cmp
cltd
sub
jge
aas
pop
mov
enter
jl,pn
and
cwtl
cli
mov
out
test
insb
adc
les
add
out
xchg
in
adc
mov
popa
mov
cltd
mov
pusha
pop
filds
mov
add
gs
add
ljmp
outsl
mov
addr16
inc
sbb
sub
inc
inc
ret
outsl
add
fdivl
sbbl
scas
inc
push
fists
lea
lret
bound
scas
and
stos
out
mov
push
adc
clc
pop
pop
sti
and
sub
sbb
pop
dec
rcll
into
mov
in
sbb
rcrb
sbb
adc
add
cltd
jecxz
and
popl
jecxz
sub
or
push
sub
or
xchg
sbb
in
fadd
aaa
negl
mov
test
andps
repnz
cmp
jb
jno
lcall
jp
lcall
cmpsb
cmp
cmp
push
jmp
inc
vsubsd
rorl
xchg
cmpsl
nop
out
xor
cltd
out
into
inc
and
lcall
and
loopne
mov
test
sbb
test
add
sub
lret
mov
test
jg
push
dec
idivb
pop
pop
jns
cmp
in
in
push
sub
xor
inc
lahf
das
mov
int
in
jbe
out
scas
mov
cmpb
lret
mov
cltd
mov
xchg
pop
in
fistps
mov
pop
leave
cs
test
jno
inc
sbb
ds
push
mov
adc
in
fimuls
cwtl
in
jb
push
or
jmp
pop
sti
or
shl
loopne
cmc
inc
sub
outsb
xor
adc
push
mov
cltd
pop
mov
test
pop
fsubl
xchg
inc
test
popf
or
inc
out
test
addr16
push
xchg
xchg
or
imul
add
out
lds
in
xlat
sbb
int3
addr16
jno
ret
and
dec
cmc
std
jo
sbb
pop
jge
sub
ja
cmp
lret
push
popa
pop
push
or
stc
insb
xor
jp
lret
fistpll
inc
push
bound
imul
xchg
dec
je
pop
mov
mov
cmp
andl
and
adc
aad
cmp
dec
lcall
push
lahf
lret
push
in
clc
inc
push
js
cmp
jnp
pop
jno
repz
fildl
jp
sar
adc
jmp
or
ss
or
add
sbb
and
adc
jns
mov
icebp
xchg
push
jbe
adc
push
mov
and
clc
cld
testb
daa
and
pop
repnz
test
cmpsb
ficomps
addb
mov
dec
jae
movlps
xlat
xor
xchg
mov
push
addr16
jmp
mov
iret
xor
push
cli
mov
nop
enter
mov
xchg
push
xor
adc
adc
data16
cmp
movsb
mov
cmp
jmp
test
test
xlat
add
fistl
mov
and
push
fs
jne
pop
aas
flds
cmp
sub
mov
pushf
push
lods
sbb
inc
pop
mov
cmpsl
hlt
enter
ds
gs
inc
notb
lods
cwtl
sarl
cld
lcall
xor
ja
or
cwtl
jg
cwtl
dec
fwait
jae
movsl
or
cld
push
imul
je
das
xchg
inc
inc
out
push
mov
and
xchg
loopne
mov
fldt
fldl
sbbl
imul
xchg
sub
popf
lods
aaa
sbb
mov
xlat
pop
sarl
inc
pop
adc
ljmp
loopne
sub
sbb
inc
xlat
pop
or
mov
jg
xlat
aad
cmp
sub
adc
sti
fwait
ljmp
dec
or
dec
xchg
add
subb
adc
es
xor
mov
xchg
xor
cld
cmp
sub
imul
jno
stc
je
sbb
in
inc
lds
stos
mov
not
fildl
cmp
pop
mov
shlb
lcall
xchg
mov
repnz
push
xchg
fidivrs
out
adc
push
test
and
push
call
repz
outsl
mov
hlt
mov
push
or
lock
ret
icebp
xor
push
or
mov
pop
xor
sbbb
and
push
jns
xor
ljmp
lods
mov
lret
stos
adc
xchg
mov
fcmovnu
iret
sbb
ffreep
in
int3
dec
aaa
or
movl
cmp
out
and
insb
or
cmp
dec
addr16
or
loopne
sub
and
add
imul
inc
inc
test
pop
mov
idivb
push
loopne
ljmp
stc
inc
pushf
mov
dec
aaa
loop
mov
jne
or
aad
pop
test
jge
popa
movsb
js
loope
mov
mov
lods
insb
or
jg
dec
stos
xchg
stc
push
xchg
in
dec
jg
loopne
or
jno
push
int
push
sbb
mov
push
pop
leave
loop
lret
in
lcall
push
out
in
sub
push
push
pop
jnp
adc
sbb
mov
int
xor
jle
dec
cmp
orb
pop
mov
das
fsubr
add
push
jg
and
mov
sub
call
aad
cs
icebp
pusha
or
mov
add
stos
lods
sar
pushf
or
xor
mov
adc
mov
pop
test
out
inc
loope
xchg
fbstp
rcr
cmp
ret
adcl
ljmp
push
aaa
into
xor
and
in
inc
inc
xor
push
lcall
pop
sbb
enter
stos
fnstenv
xchg
sbbb
std
sub
jo
int
cmp
sub
rorl
cmp
nop
je
xchg
sub
pop
dec
cmp
popa
xor
imul
xchg
lock
popa
or
in
mov
outsb
jno
sbb
inc
pusha
aas
mov
pop
xor
dec
push
pop
dec
pop
fsts
xchg
jge
stos
pop
jge
loopne
repnz
push
cmp
aad
shlb
in
cmpsb
sbb
jmp
add
push
call
ss
in
and
lea
cmc
inc
add
jns
xchg
pop
adc
test
je
or
cld
outsl
leave
test
fs
mov
mov
jmp
enter
lret
addb
popf
or
mov
pop
mov
mull
jl
push
fdivrs
push
inc
xlat
push
mov
in
push
clc
mov
pop
mov
adc
pop
and
adcl
sub
hlt
pop
cmp
sub
sub
fs
dec
push
popf
aad
mov
add
xchg
jmp
sbb
jecxz
mov
in
pop
sub
gs
cmp
jle
or
test
add
clc
xor
daa
mov
fbstp
mov
das
push
sub
jbe
or
cwtl
nop
add
ret
loop
push
mov
cmp
addr16
xchg
arpl
push
ljmp
lock
inc
inc
int3
jbe
xor
out
lods
popf
sub
push
xchg
mov
xchg
jne
cltd
addl
jb
test
scas
std
xchg
xchg
in
fwait
ss
jae
jmp
sub
data16
lahf
repz
in
pop
mov
aaa
repz
icebp
push
adc
fcomps
int3
sti
xchg
fsubrs
push
fucomp
hlt
mov
aaa
cmp
cmp
ljmp
jns
jmp
or
pop
inc
xchg
xchg
mov
adc
push
mov
sbb
cs
mov
in
xchg
call
sbb
add
push
push
mov
xchg
add
xor
test
xchg
mov
push
sub
and
incl
mov
push
push
lock
das
add
pop
mov
mov
push
insl
lahf
pop
push
push
data16
jmp
es
cwtl
mov
insb
jmp
stc
jo
sbb
ds
jecxz
jp
popa
pop
xchg
xor
test
xchg
sub
int3
mov
in
insl
add
push
and
mov
fstl
bound
mov
leave
pop
daa
mov
xor
es
cli
sbb
push
test
mov
je
movb
jl
daa
mov
testb
out
jns
cmc
cmp
adc
cmpb
sub
aam
call
pusha
xchg
mov
leave
fninit
or
sbb
dec
aad
mov
push
dec
dec
push
fs
scas
cld
cmp
aaa
cld
xchg
sub
bound
fmull
lahf
mov
add
or
push
inc
fsubrl
jmp
xor
push
jmp
fs
loopne
jb
test
mov
int3
addr16
lock
push
push
jbe
fidivrs
xchg
sub
in
push
mov
mov
arpl
cld
xchg
dec
xchg
and
jle
or
insl
loopne
in
xchg
daa
sub
cmp
es
or
push
pop
int
or
sti
mov
lods
fbld
lods
lds
iret
stos
push
and
sti
fwait
dec
inc
xchg
mov
shr
insl
and
add
pop
push
inc
scas
jbe
leave
jb
test
sbbl
rcr
sbb
dec
push
lcall
test
jb
jl
cmp
js
sbb
jbe
push
mov
ficomps
outsl
dec
pop
fxch
shl
lea
repz
sti
nop
daa
sub
mov
lret
pop
mov
lret
js
mov
and
add
or
dec
pusha
jae
insb
sarl
daa
sbb
movsl
arpl
cmp
xchg
loope
inc
jmp
lcall
in
ret
adc
jl
mov
cli
and
pop
push
fwait
je
movsl
int
pop
dec
rcrl
add
scas
lahf
or
mov
xor
outsb
or
inc
frstor
mov
mov
aad
mov
mov
iret
push
ficoml
jae
mov
sub
imul
or
hlt
imul
dec
pop
jnp
push
addl
jno
negb
or
bound
cmovno
js
rcl
cmpsb
push
sub
mov
repz
mov
add
scas
outsb
test
stc
lea
in
ljmp
into
jle
adc
int
cmp
into
and
movsb
mov
push
in
movsl
mov
aaa
mov
in
mov
cli
or
mov
adc
dec
aad
jl
pop
out
aaa
mov
lds
pop
jbe
mov
dec
add
jbe
cmp
push
out
xlat
fistpll
lods
sbb
mov
inc
std
sbbl
aad
sahf
adc
fwait
inc
mov
leave
sub
jbe
mov
cmpsl
nop
aad
movsb
ret
mov
lock
outsb
and
xchg
lds
movsb
inc
les
daa
lcall
inc
or
clc
cmpsb
jns
mov
add
je
lock
fisubs
sbb
jp
or
and
or
aam
xchg
dec
dec
enter
js
push
xor
pop
inc
shrl
fcoml
xchg
jl
popf
mov
push
add
xor
adc
and
rolb
pop
fcomps
or
mov
notb
jmp
fs
inc
rcrb
mov
or
push
xchg
push
inc
imul
mov
push
popw
mov
ljmp
push
xor
cmp
std
scas
sub
popa
xor
xchg
pop
and
mov
fsubs
sti
je
lods
in
ss
shrl
daa
and
lahf
add
inc
in
fwait
lea
push
xchg
out
test
add
jmp
fldenv
fdivl
inc
movsl
dec
xchg
jl
or
popf
mov
in
loopne
lods
pushf
or
iret
or
cs
xor
ret
or
xor
add
jmp
fadds
movsl
xchg
mov
cwtl
cmp
sub
mul
in
std
inc
sahf
int
push
cmp
cwtl
das
cltd
jmp
mov
cld
subl
lock
sub
out
out
cmpsl
dec
cltd
cs
test
movsl
cmp
jns
push
jmp
ret
sbb
js
inc
jae
jns
loopne
xchg
cltd
mov
inc
sbb
mov
in
outsl
leave
push
adc
jmp
daa
push
mov
int
in
sbb
push
sti
outsb
dec
cmp
inc
add
jno
aam
hlt
xchg
mov
add
bound
mov
push
push
jnp
fsubl
out
roll
ret
sub
insb
pop
sbb
mov
sti
push
stc
push
push
scas
adc
ss
lret
dec
cmp
mov
and
scas
cwtl
orw
movsl
jge
call
jmp
sbb
adc
es
xor
ret
cmpsl
inc
sti
sbb
int
push
adc
stos
push
mov
inc
stos
cmp
mov
dec
push
test
imulb
sbb
mov
loope
cli
jae
push
movsl
sbb
xchg
mov
gs
in
cmpsb
lahf
push
shlb
push
aad
in
sub
xor
push
pop
sbb
mov
dec
in
and
adc
xor
imul
inc
xchg
test
lds
inc
popf
out
pop
or
enter
ss
scas
cmc
loope,pt
dec
push
pop
mov
jne
in
adc
in
add
lds
loope
insb
xlat
ficoms
xor
outsb
data16
adc
and
mov
cmpsb
loope
sub
mov
es
inc
cwtl
jns
lock
and
and
dec
ret
jge
mov
xor
daa
jo
shld
sub
aad
jle
mov
push
stos
add
dec
add
imul
adc
int
icebp
pop
push
out
test
nop
fs
and
imul
addl
mov
mov
xor
and
and
test
pop
sarb
push
out
pop
test
xor
jmp
mov
pop
xchg
dec
pushw
ffree
sbb
leave
pop
out
inc
cs
pop
gs
push
adc
test
sti
and
push
cmpsl
int3
dec
dec
dec
mov
ret
in
push
jae
sarl
and
pop
movsl
pop
adcb
jb
aad
iret
loope
xor
adc
mov
pop
jle
cmp
sbb
sub
ret
leave
push
in
xchg
pop
cmp
dec
pop
and
push
jle
sbb
repnz
lret
insb
ret
movsb
loopne
sub
out
push
fldenv
sub
lret
gs
stos
mov
fadds
fmull
mov
inc
mov
adc
add
loop
mov
repnz
xchg
ljmp
into
mov
fcoml
dec
push
mov
iret
cmpsb
nop
push
stc
in
outsb
lds
push
lcall
mov
or
inc
cmpb
mov
faddl
leave
push
dec
and
mov
es
push
sub
aaa
mov
jb
xor
test
repnz
cltd
dec
jg
popa
aad
xor
mov
js
add
mov
xchg
fcmovu
add
std
push
dec
xlat
push
pop
cmp
pop
into
ficoml
sub
xor
sbb
adc
leave
inc
fsts
in
dec
cld
jae
adc
or
pop
loopne
daa
or
movsb
jg
sub
loop
add
dec
ret
outsl
jns
xchg
pop
imul
mov
loopew
dec
adc
push
pop
add
enter
sahf
test
lcall
rol
mov
pop
push
daa
or
sub
ret
jle
sbb
push
nop
icebp
xchg
ret
jno
sbb
nop
aaa
dec
jge
jb
pushf
xor
mov
jb
popa
nop
push
xchg
pop
mov
lret
mov
test
fs
ret
pop
mov
inc
in
mov
sub
jle
xor
or
xor
pop
or
xchg
push
bound
mov
out
mov
lahf
ss
in
test
gs
jmp
ret
ss
or
idiv
movsb
mov
push
add
push
aaa
push
aas
inc
cli
repz
addr16
ror
repnz
cmp
pushf
popf
imul
pop
lock
jmp
ja
cmp
sbb
sub
xchg
push
cltd
rcrb
in
les
ss
imul
and
jnp
pop
lds
cli
pop
pop
ss
push
int3
sbbl
pop
cli
test
mov
and
out
xchg
pop
in
out
nop
add
sub
int3
and
adcb
dec
sub
sahf
and
cmp
loop
arpl
dec
xchg
rol
xchg
add
addr16
fcoml
popf
xor
out
dec
jl
outsl
inc
fs
out
es
imul
cmp
and
mov
fnstsw
xchg
xchg
sub
or
mov
cmpsl
xchg
lds
jo
clc
popf
mov
sub
xor
inc
mov
jle
cld
lcall
xor
cmpsl
push
fbld
rol
cwtl
sbb
lods
sub
xchg
push
xchg
push
mov
pop
cmc
mov
push
push
mov
push
mov
push
adc
ja
inc
sar
sub
ds
sub
and
push
pop
repz
mov
xchg
popf
cmpsb
ds
loope
sbb
lds
and
repnz
cmp
dec
popa
mov
xlat
mov
les
mulb
mov
cmpsl
or
mov
cmp
fwait
out
mov
push
and
mov
iret
push
loopne
fdivrl
mov
imul
cmp
daa
jle
popa
aam
pop
xor
cld
sub
lcall
inc
cmp
cltd
std
rolb
orl
ss
pop
lahf
loopne
cmp
aaa
iret
loope
aad
lea
scas
test
mov
orb
cwtl
lods
das
jmp
add
sub
repnz
aaa
jl
inc
fs
or
in
sbb
push
sbbb
pop
scas
lahf
jnp
sbb
pop
push
add
push
cltd
mov
xchg
clc
stos
mov
std
push
mov
and
dec
pop
jecxz
fidivl
xorl
pop
xor
clc
inc
mov
jo
lahf
and
out
movl
aad
fcomi
mov
dec
sbb
mov
jb
pop
out
mov
xchg
jmp
shll
cmp
and
xchg
jp
adc
sub
shll
test
push
cmp
stc
mov
jle
sub
test
lahf
and
mov
imul
jns
pusha
xchg
push
rcl
inc
aam
fistpl
mov
hlt
cmp
js
sub
into
inc
mov
test
movsb
jb
lret
mov
arpl
or
xchg
add
popa
nop
sbb
out
popl
imul
push
adc
pop
ja
cli
push
int3
sub
add
add
cmpsl
cld
lcall
jmp
mov
inc
popf
jmp
call
jae
aaa
sbb
inc
jo
sub
sub
pop
into
jg
pop
xchg
push
ljmp
jb
mov
shl
test
push
xchg
mov
aam
les
movsl
add
pop
dec
out
fcoms
std
adc
insl
lea
and
repz
ror
xchg
pop
gs
fisubl
shll
mov
fcoms
pop
mov
cs
and
jb
ja
dec
stos
or
lret
js
daa
call
cmp
push
das
test
pop
sahf
push
test
clc
cmp
clc
or
pop
cmc
or
sbb
jg
fsubl
push
xor
or
test
and
mov
test
inc
cwtl
push
mov
cld
pop
xor
jnp
or
insl
lds
mov
jle
cmc
cmp
daa
cli
cmp
in
loopne
call
enter
inc
fs
inc
lock
or
clc
aas
or
xchg
xchg
js
adc
pop
insl
mov
cmpsl
mov
jnp
mov
inc
adc
stc
sbb
bound
divl
inc
and
cmpsl
mov
dec
mov
and
sub
dec
in
int
lods
cli
jp
fwait
and
jge
lret
adc
mov
pop
add
ret
mov
vmovaps
push
pop
cmp
das
and
mov
mov
test
fdivs
sti
push
pop
sahf
push
jbe
imul
xor
or
dec
aaa
sub
dec
stos
jnp
xor
out
pop
cmpsl
inc
mov
cli
jne
pop
pushf
inc
add
dec
loop
push
and
sub
cmp
ret
pop
sub
mov
mov
imul
pop
call
mov
push
jnp
add
testb
adc
adc
test
xchg
daa
pop
dec
jg
push
test
jo
mov
cld
xchg
lret
push
and
push
push
adc
rcrl
or
es
xchg
xor
lods
inc
int3
test
arpl
cmovp
in
jg
sub
mov
pop
test
fsubrs
or
repnz
imul
inc
pusha
and
bound
add
xor
clc
loope
pop
pushf
into
and
js
iret
jno
xchg
dec
filds
jbe
and
enter
ret
cwtl
outsl
dec
fs
add
and
ret
push
cmc
pop
int
movsl
fsubrl
pop
pop
orb
testl
adc
jge
xor
sbb
mov
fs
pop
xchg
ja
enter
push
pushf
addr16
aam
mov
mov
out
lods
scas
movl
cmp
sbb
scas
lods
cli
jbe
sub
mov
jnp
push
jg
outsl
call
lea
jge
ja
aaa
ss
scas
std
cltd
fildll
ss
sub
int
jmp
imul
movsl
dec
repnz
cltd
mov
dec
mov
lea
mov
xchg
adc
mov
stc
or
mov
mov
sti
in
nop
movsb
pop
repz
imul
push
xchg
imul
mov
xchg
test
leave
jle
mov
sub
mov
imul
mov
or
adc
mov
push
inc
cld
lcall
cli
jne
lahf
fdivp
rorl
loop
cmpsl
jae
or
lds
or
mov
inc
push
cmp
sti
lahf
mov
jae
fucomp
sti
repnz
mov
dec
cmp
xchg
out
push
push
mov
lods
inc
push
nop
add
hlt
sub
sub
jle
inc
flds
stos
push
mov
push
out
xor
xor
mov
sub
mov
xor
sub
daa
cmp
add
mov
ret
pop
ret
sbb
in
dec
push
jbe
rcll
xchg
add
mov
mov
push
addr16
arpl
mov
push
adc
ret
ljmp
dec
cmc
dec
mov
adc
fdivp
and
sti
ucomiss
xchg
rcrb
jb
mov
clc
or
add
out
fwait
add
or
or
xlat
lahf
pop
sbb
popf
xor
aas
jns
ret
pop
frstor
rol
out
aam
or
and
shrl
repz
lods
adc
out
jl
xor
and
inc
mov
mov
mov
popf
rclb
cmpl
repz
fdivs
pop
push
sbb
and
mov
xchg
cmp
insb
outsb
cmpsb
js
push
mov
mov
std
jle
lret
popf
cmp
dec
pop
inc
cmpl
cli
rorl
mov
lea
cmpsb
xchg
mov
orl
cmp
adc
aaa
test
mov
sti
push
int3
add
push
adc
xchg
les
pushf
and
icebp
xchg
fnstenv
movsl
stc
inc
inc
and
sub
shr
cmp
repnz
insl
mov
push
xor
pop
fs
lea
and
or
xor
mov
mov
and
fisubl
mov
sub
repnz
aad
ret
ds
insb
jmp
das
movb
dec
andb
clc
cs
ljmp
test
mov
mov
clc
jl
orb
test
lret
pop
jge
loope
jnp
xor
jg
mov
das
sahf
xor
adc
dec
xchg
jo
inc
les
mov
clc
aas
insb
sub
and
xor
adc
adc
mov
in
jo
lcall
in
das
insl
pop
enter
in
or
jge
ret
scas
cmp
jge
scas
and
mov
repz
jmp
mov
aas
mov
add
xor
xor
std
push
inc
fsubs
sahf
sub
pop
test
imul
pop
mov
cltd
pop
repnz
pop
mov
shlb
dec
dec
or
mov
dec
adc
sub
mov
pop
pop
outsb
mov
add
cmp
lds
mov
adcl
loopne
es
jge
cmp
add
push
inc
sti
adc
jno
pop
mov
mov
lea
dec
sub
sahf
mov
ret
mov
fldt
vcvttsd2si
push
jne
jle
out
mov
mov
std
aad
mov
lret
xchg
and
and
jecxz
lods
in
aas
push
idiv
and
push
or
mov
push
aam
sti
or
sub
hlt
adc
sahf
lock
popf
mov
mov
fidivs
scas
test
pop
xor
adc
movsb
das
adc
push
cld
sub
test
push
mov
mov
or
add
bound
push
mov
fsubs
add
and
push
sbb
and
push
cld
dec
jne
inc
pop
out
push
xchg
mov
or
in
cs
int
xchg
pop
mov
loope
add
inc
aad
jno
aaa
sub
movsl
push
fildl
lods
lea
and
pop
push
icebp
adc
out
mov
faddl
mov
fsubl
add
gs
sub
popf
dec
in
or
sti
shll
push
aam
adc
mov
shl
data16
and
das
or
and
pop
push
cmp
mov
sbb
xchg
sahf
popa
cmp
enter
mov
fisubrl
or
clc
xchg
aas
mov
out
aas
lret
sub
ss
dec
es
or
pusha
mull
mov
jmp
fisubl
dec
int3
dec
add
in
mov
add
fidivrs
adc
push
cltd
inc
adcb
leave
push
mov
pop
and
fdivrl
lret
xor
pop
fcoms
ljmp
adc
inc
in
dec
mov
inc
mov
mov
jae
add
addr16
inc
data16
cwtl
test
jmp
loop
out
imul
pop
dec
lods
or
icebp
xor
push
xchg
sub
push
mov
lock
fsubrp
mov
dec
jmp
pop
in
test
sub
push
mov
out
and
repnz
int3
imul
fbstp
mov
jp
fs
aaa
or
testl
inc
xor
xor
ret
das
push
adc
xchg
and
dec
xor
dec
das
jb
stc
imul
dec
ss
or
vcvttsd2si
pop
repnz
mov
mov
call
push
stc
add
adc
cmp
lcall
stc
jb,pt
inc
cmpsl
out
andl
push
pop
lret
cld
jl
inc
mov
jne
cmp
fsubr
nop
pop
imul
orb
vpshuflw
rcrb
in
add
pushf
pop
jne
icebp
mov
mov
les
cmpsb
bswap
xchg
inc
and
aaa
in
lea
push
data16
xchg
adc
push
lods
xor
xor
mov
cli
aas
clc
test
pop
inc
push
or
mov
jp
test
jge
push
stos
je
movsl
cmp
mov
adc
repnz
mov
aaa
push
inc
push
lea
je
push
in
inc
pop
jmp
leave
inc
ror
pushf
mov
mov
int3
ja
dec
pop
jbe
mov
mov
inc
mov
and
mov
add
in
aas
fildl
ret
lret
push
ss
addr16
inc
mov
inc
jmp
imul
add
add
es
or
cmp
add
jb
mov
mov
add
das
cs
cmp
pushf
inc
xor
xchg
lcall
pop
loope
fcoml
negl
adc
xchg
repnz
pushf
aad
int3
outsl
aam
sahf
xor
jnp,pn
pusha
mov
add
dec
rcll
jmp
or
pop
das
popa
jmp
inc
es
fiaddl
inc
fwait
aam
pop
mov
xchg
xchg
aad
sbb
push
mov
jnp
push
fisttpll
xchg
sub
cmc
aaa
jle
push
dec
loopne
or
les
jl
xor
mov
cmp
mov
daa
mov
insb
outsb
sub
mov
xchg
sub
adc
sub
push
jo
cs
push
lret
cmp
lds
push
sub
jg
aaa
and
or
mov
lcall
push
gs
stc
push
test
adcb
mov
jo
repnz
jge
mov
popf
int3
arpl
ljmp
fcoms
jmp
roll
cli
jbe
xchg
test
sub
int3
or
in
inc
xlat
sbb
sub
inc
or
sbb
setg
out
fsubrs
add
adc
push
call
inc
popa
sbbb
sub
xor
and
mov
sbb
outsb
jnp
add
mov
and
sti
xchg
cmc
mov
mov
sbb
aam
sub
jp
test
pusha
pusha
iret
xchg
mov
xor
je
push
arpl
mov
inc
mov
pop
or
push
sub
xchg
or
dec
das
andl
scas
xchg
aad
xchg
push
jae
movsb
push
sahf
loop
inc
sahf
sbb
sbb
ret
das
inc
insl
and
scas
lcall
adc
shl
ja
aaa
in
jns
fs
pop
rcll
out
enter
push
mov
push
imul
cmpsl
or
xchg
push
mov
inc
push
mov
jo
lods
ret
aad
ljmp
jnp
into
jno
pusha
xchg
sub
addr16
pusha
sarl
mov
addr16
es
xchg
jo
int
mov
mov
in
add
xchg
dec
xchg
cmpsl
jmp
aaa
loopne
imul
movsl
in
xchg
mov
fcomps
adc
sub
push
ljmp
out
mov
insl
jns
loop
out
pusha
xchg
test
imul
push
sub
lea
stos
lods
cmpsl
fiaddl
out
xchg
in
int
or
pop
pop
fsubrl
sbb
loope
dec
ud0
mov
or
rolb
aaa
pushf
push
popf
sub
push
xor
push
push
xor
testb
cmp
imul
movsb
xor
popa
call
add
mov
xchg
sub
mov
add
mov
mov
push
mov
call
kmovb
pop
xchg
addr16
push
sarl
xchg
in
cmp
mov
or
sub
popa
aas
sbb
pop
dec
aaa
mov
inc
in
iret
mov
xchg
mov
pusha
add
das
cmp
out
push
pop
ret
push
jns
and
movsl
das
fimull
mov
aad
sbb
mov
fsubrl
mov
scas
xchg
shrl
movsb
cmp
test
ret
pop
xor
push
loop
aaa
add
mov
pop
xor
popf
add
or
mov
loop
pop
shrb
lock
lea
adc
xchg
mov
jecxz
popl
pop
cmp
pop
scas
jns
mov
fisttpll
cmp
lods
hlt
les
call
sub
xchg
mov
loopne
leave
pop
repnz
xor
jns
or
jp
jge
mov
inc
in
push
sub
cs
add
and
sbb
jmp
mov
and
lds
lds
inc
pop
fstl
mov
push
xchg
iret
arpl
das
pop
test
adc
aaa
scas
fsubl
lret
dec
ja
pop
stc
push
xchg
insb
cld
sti
inc
mov
mov
sub
jge
aad
sahf
mov
sbb
xlat
data16
xchg
sub
pop
ja
mov
push
mov
fcmovnb
jle
and
lds
adc
sbb
xor
sub
in
and
test
pop
fcmovu
test
inc
movsb
enter
es
and
addr16
imull
mov
xchg
or
inc
cmp
xchg
scas
mov
jne
cmp
insb
mov
mov
cmpsb
nop
pop
xlat
xchg
arpl
push
cs
outsl
sbb
mov
scas
dec
in
std
imul
pushf
sbb
fcoml
popa
lods
sbb
dec
out
push
xor
scas
xchg
js
adc
outsl
and
notl
xchg
cli
das
jno
lods
cwtl
sbb
add
js
jl
imul
incl
adc
pop
cld
stc
stc
jmp
or
and
ss
lahf
lea
call
fldcw
or
xlat
mov
or
jecxz
pusha
test
add
inc
adc
jae
shll
mov
lcall
mov
fwait
sti
into
test
jne
push
loop
lret
mov
push
mov
sbbb
adc
and
sub
add
mov
andb
insl
push
hlt
mov
adc
push
orb
fstpl
mov
mov
and
roll
xor
sbb
or
mov
cmp
sub
dec
sbb
cmpl
jmp
sub
test
sub
fisttpl
mov
insl
sbb
pop
imul
xchg
adc
outsb
push
scas
out
sbb
add
stos
mov
push
pushf
xor
mov
test
jo
pop
cmpsb
sahf
push
and
mov
xchg
enter
add
inc
xor
sub
ja
xor
xor
jle
lcall
sahf
or
push
lret
clc
mov
into
push
push
add
int
sbb
movsb
scas
jb
push
movsb
sub
repz
jge
test
notl
add
dec
arpl
lock
dec
mov
jp
jne
syscall
in
or
fdivl
scas
ds
mov
sub
mov
aam
pusha
jl
mov
xchg
pop
push
adc
and
dec
movsl
pop
sub
cmp
in
in
inc
mov
xor
pushf
or
icebp
push
filds
add
in
sbb
mov
xlat
xchg
and
mov
adc
mov
hlt
sbb
lcall
xor
mov
test
mov
out
call
pop
push
jbe
jmp
add
cmp
xchg
test
dec
ficoml
fidivrs
pop
ror
fmull
out
fld
cltd
inc
je
sub
mov
add
rclb
roll
lcall
mov
fs
jge
push
gs
outsl
insb
outsb
add
push
cltd
je
test
dec
adc
cmpb
ret
and
popf
and
nop
into
jno
js
lret
clc
and
fwait
xchg
xchg
push
mov
adc
xor
xor
mov
mov
push
sbb
sahf
push
stos
jmp
loope
iret
popf
sbb
inc
pop
sbb
push
inc
pop
shr
cmp
lret
mov
enter
aas
loop
out
leave
and
mov
xchg
push
sbb
rcll
sbb
lcall
sahf
xchg
aam
jo
cmp
mov
xor
pushf
sbb
pop
sub
add
imul
loop
xor
xchg
fwait
or
mov
push
jl
aaa
mov
dec
es
push
insl
cmp
adc
in
pop
movsl
add
popf
and
clc
mov
jle
dec
int
test
cltd
and
mov
notb
int3
mov
ss
or
in
xor
ds
cld
ret
jb
xor
xlat
shrb
inc
clc
out
xchg
push
call
dec
pop
scas
jp
mov
movsb
shrl
push
mov
xor
mov
cltd
fdivl
mov
mov
sarb
es
lret
xor
xor
ret
rclb
add
aas
lret
sti
pusha
pop
adc
lcall
imul
jbe
adc
fildl
decb
daa
imul
cwtl
add
mov
orl
mov
xchg
xor
inc
testl
fnstsw
movsb
and
and
add
lea
pop
pop
icebp
stc
lret
or
js
loop
push
aam
mov
call
cmp
adc
inc
push
adc
ja
dec
pop
aam
jmp
cltd
adc
data16
pop
push
dec
pop
xor
fidivs
lret
testl
fs
push
and
adc
pop
sti
push
xchg
cli
mov
movsl
and
lcall
stos
rol
out
out
fwait
cmp
inc
imul
popf
or
cs
cld
push
xor
mov
push
mov
ficompl
stos
lods
fs
pop
inc
rorb
pop
je
push
lods
ss
cmp
dec
imul
xor
jbe
push
and
imul
sbb
aam
lahf
cmc
dec
les
sub
push
pop
mov
dec
or
dec
mov
pop
test
pop
rolb
movsb
or
stc
mov
in
shll
into
mov
std
ret
fisubrs
jns
jo
mov
jmp
filds
lret
sub
aam
jbe
xor
or
test
test
icebp
fidivrs
add
push
mov
bswap
movsb
cmp
adc
idivb
pop
addr16
loop
fcomps
call
roll
vmwrite
xor
sbb
pop
lret
shll
add
inc
jno
xor
mov
cmp
fcomps
push
imul
lods
inc
loope
jb
inc
into
dec
lahf
inc
into
mov
sbb
es
inc
mov
sbb
jp
cwtl
inc
rcrl
jmp
rclb
xor
sbb
into
adc
aad
xchg
cs
mov
push
out
jb
mov
or
scas
dec
push
inc
xchg
cld
imul
mov
out
dec
sahf
push
insl
cwtl
out
sub
push
and
xchg
sub
test
adc
sbb
fs
and
fs
xchg
pushl
mov
int
jge
cmpl
sbb
inc
int
push
push
in
insl
add
push
or
xchg
dec
dec
test
inc
fisubrl
sarl
jl
stos
push
mov
cmpsb
sub
std
push
addl
inc
mov
mov
ret
mov
inc
cmp
xor
lret
adc
movl
or
std
mov
out
sti
pop
jp
jne
fsts
jns
sub
subl
inc
loope
jg
dec
mov
icebp
movsl
jno
int3
lret
and
aad
dec
pop
jne
mov
sahf
cmp
rorb
push
push
out
xor
add
mov
xorl
push
xor
or
xor
shrl
sbb
add
mov
aaa
push
push
xchg
jle
es
jne
add
fidivs
mov
jno
out
frstor
les
mov
insl
shlb
in
mov
rcrl
jge
sub
lods
sub
xor
cmp
cmpsl
imul
mov
mov
add
sub
dec
xor
sub
push
pop
cmp
jp
rcr
cmc
mov
testl
xor
mov
inc
sbb
call
stc
popf
repnz
adc
cli
test
in
stc
arpl
cmp
jmp
dec
pop
loope
pop
pushf
das
rcrb
cmp
clc
add
das
xchg
int3
and
repnz
aad
imul
dec
xchg
add
jge
ljmp
imul
mov
out
mov
mov
xchg
xor
mov
fdivp
sbb
mov
cli
xor
push
lods
mov
adc
mov
pop
xchg
xor
and
or
xchg
mov
jne
push
sub
mov
ret
movsl
cmp
insb
xor
inc
push
mov
adc
mov
popf
sub
in
lret
jmp
mov
or
inc
push
pop
mov
daa
pop
fidivrl
pop
cmpsb
insb
pop
popa
sbb
int3
call
movsb
dec
sbbl
shlb
xchg
into
push
sbb
dec
pop
mov
nop
scas
orl
clc
es
and
jo
jno
lcall
sahf
sbb
lret
cmp
mov
jl
jmp
ljmp
jg
push
mov
jnp
cmpsl
or
mov
cmp
ror
or
leave
es
cmp
inc
push
sbb
xchg
popf
mov
insl
jg
mov
sbb
fst
and
inc
lods
inc
push
xor
sbb
and
ficompl
xchg
pop
shl
mov
and
adc
add
imul
xchg
into
pop
and
test
sbb
ss
inc
loop
jb
lods
outsl
adc
cmpb
mov
mov
stos
mov
xor
adc
mov
das
mov
push
in
bound
dec
or
push
lods
icebp
push
inc
push
xor
lret
sub
subb
xlat
cld
xchg
pop
aas
int
insl
out
shl
cli
and
adc
sbb
mov
shrl
or
mov
popl
xchg
mov
or
mov
ljmp
mov
lds
sub
repz
rclb
adc
arpl
xchg
inc
cltd
std
jmp
mov
pop
sarb
pusha
jns
jne
dec
ret
decb
lods
ret
roll
mov
mov
das
sti
in
jle
add
dec
or
mov
stc
jl
push
sbb
sbb
cmp
cwtl
pop
mov
sub
push
int
arpl
int3
sub
xor
je
inc
push
dec
sahf
mov
push
dec
loope
sti
xchg
push
xchg
mov
inc
shlb
sub
scas
fsubrp
out
add
ret
mov
cmp
sahf
sub
int3
loop
aaa
mov
inc
xor
out
mov
and
jmp
rcrl
xor
push
in
dec
or
cmp
pop
mulb
subl
subb
sbb
je
test
popf
bound
std
mov
xor
movl
leave
int
mov
inc
bound
cmp
mov
lahf
dec
sbbl
pop
shll
js
hlt
xchg
lock
add
dec
inc
and
repnz
pop
and
sbb
pop
int3
in
decb
xchg
add
and
inc
dec
outsl
cmpl
adc
jne
adc
or
les
xchg
jle
in
mov
adc
cmp
push
pop
sbb
push
mov
xchg
ds
sub
repnz
or
or
lods
sub
ret
jnp
cmpsb
xor
xor
cmp
ss
inc
push
out
push
lcall
jmp
iret
xor
xor
fisubl
or
lods
or
insb
jl
sbb
mov
or
pop
bound
cmp
xchg
add
jne
cmp
iret
flds
les
cmc
loop
ficomps
push
mov
mov
fstpl
out
jecxz
sbb
push
orl
push
cmp
mov
inc
cmp
bound
inc
xlat
cmp
outsl
mov
in
and
pusha
push
jg
shll
out
fiadds
pop
or
and
dec
cli
and
adc
jne
out
mov
test
xor
idivl
push
push
cmc
insl
mov
fdivp
xchg
sub
mov
jmp
adc
mov
mov
add
mov
cli
mov
xor
push
insl
sbbl
mov
xchg
cmp
or
pop
lock
orl
pop
aas
mov
mov
sub
imul
mov
add
ljmp
mov
dec
jle
scas
es
scas
xor
stos
aas
in
popa
pusha
push
rorl
sbb
das
fidivs
add
xor
jl
inc
rcrl
push
sub
mov
adc
or
add
push
xchg
mov
cmp
dec
jecxz
pop
mov
and
xchg
mov
repz
mov
fisubrl
mov
aad
push
repnz
into
push
push
sar
test
and
fidivrl
mov
jmp
in
popa
cmpb
push
aaa
fldcw
add
mov
mov
xor
jnp
or
push
cmp
fdivs
leave
stc
je
mov
negl
inc
xchg
xchg
in
sahf
fldcw
mov
pusha
sbb
nop
xchg
daa
pop
stc
in
cmpsl
cmp
pop
fdivl
or
cli
xchg
pop
cli
sarl
movsb
sub
jmp
loopne
mov
xor
jle
jg
mov
xchg
ljmp
sub
push
cmpsl
stc
subl
xchg
push
mov
mov
sbb
arpl
or
cltd
es
fldl
push
mov
fsub
scas
outsl
arpl
je
mov
clc
jne
xchg
xor
fstps
loopne
xchg
mov
arpl
out
sbb
jmp
cmp
jecxz
imul
les
mov
fnsave
and
mov
jo
rcrb
adc
cmp
js
xor
and
mov
sar
cli
push
xchg
cs
nop
fildll
mov
or
pop
xchg
push
test
adc
lret
push
cmpsl
inc
fcoms
lahf
pop
cmc
pusha
pop
xlat
cmp
popa
cld
xlat
insb
pop
mov
das
inc
negl
lret
sub
xchg
repnz
pusha
sub
push
lret
and
cmp
push
iret
mov
dec
push
popf
loope
add
les
cmp
inc
cmpsl
fcomps
or
mov
lcall
cmp
pop
data16
dec
adc
scas
and
jg
push
mov
or
jae
dec
fistpll
pop
sti
jae
mov
jne
jo
jo
ds
jno
fbld
mull
fistps
inc
pop
mov
les
push
test
cmp
negl
cmp
and
sbb
xchg
inc
jp
lret
inc
pop
test
ja
mov
inc
jmp
arpl
cld
inc
adcw
push
popf
sbb
xchg
xchg
js
sbb
dec
add
aaa
adc
lea
clc
push
push
xor
ds
je
into
mov
mov
fidivl
mov
xchg
cmpsb
aad
lods
int
add
lods
addr16
cltd
or
fwait
lods
cmp
adcb
incl
or
and
mov
incb
ffreep
inc
pusha
pop
jne
dec
arpl
and
mov
push
jle
xor
push
cmp
xor
outsb
inc
pop
cmp
pushf
xchg
xlat
pop
bnd
sbb
dec
mov
addr16
push
mov
test
movd
sbb
sbb
test
sub
add
sub
movsb
jne
test
sbb
hlt
jae
push
mov
repz
aam
mov
in
scas
mov
fcoms
jo
in
mov
pushf
orb
fwait
lahf
das
data16
js
data16
sbb
mov
pop
stos
or
clc
dec
sbb
int3
imul
mov
add
aam
cmp
cmp
mov
jl
cmp
add
and
incb
roll
jb
inc
xor
or
cmc
adcb
cmp
xor
movsl
into
in
or
lods
stos
pop
and
fcoml
call
inc
dec
and
xchg
and
out
dec
push
fcomp
in
ror
sbb
movsl
push
dec
bound
inc
insl
adc
mov
sbb
jb
mov
push
idiv
xchg
rdpmc
push
pop
and
jp
popf
jae
insl
fisubl
mov
ret
out
push
cmpsl
popf
icebp
cmp
inc
loope
outsb
sbb
xchg
pop
lock
mov
in
push
xor
test
lods
aaa
lods
pop
call
or
dec
pop
cmp
std
add
sarl
outsb
cmp
dec
sub
mov
fld1
pop
add
icebp
enter
add
aaa
inc
movsb
xlat
xchg
xlat
lea
jecxz
lcall
ljmp
xor
andl
mov
pop
repz
push
push
scas
adc
mov
xorb
push
movsl
ljmp
add
mov
cmc
fsubl
pop
xchg
push
rclb
in
ja
push
or
punpckldq
cmp
mov
fxch
popa
or
mov
test
jge
adc
inc
xlat
mov
mov
inc
jnp
mulb
popa
pop
mov
shlb
mov
into
stc
push
push
loop
cvttps2pi
xchg
inc
lods
nop
mov
fnstenv
out
push
mov
outsb
sub
mov
shrb
in
inc
shl
jnp
ret
mov
dec
out
iret
fs
cmpsl
aas
fsubrs
xor
and
jne
pop
cld
adc
adc
mov
jge
jno
fimull
inc
fcmovb
pusha
ds
pop
and
sub
jbe
mov
xor
ret
int3
pusha
lret
push
mov
mov
inc
jbe
aad
inc
pop
ljmp
sbb
push
imul
aaa
push
jmp
lock
lods
mov
or
sahf
in
pop
fdivp
cmp
push
push
dec
mov
cmp
data16
fwait
into
in
sub
shr
repz
inc
fldt
adc
in
mov
orb
cmp
add
jno
cwtl
ss
in
inc
adc
flds
popf
lret
ja
jo
call
jle
mov
gs
data16
test
add
fbstp
ds
pop
rcl
mov
push
push
mov
imul
dec
pop
cmp
add
mov
dec
repnz
mov
cmp
aad
movb
scas
jg
loopne
cltd
and
les
insb
jmp
int
mov
sti
data16
jp
xchg
jecxz
lea
add
orb
pop
iret
cmpsb
dec
bound
jmp
xchg
jmp
scas
pop
gs
notl
xor
leave
lock
ljmp
mov
xlat
call
loope
fsubl
ret
insb
cmc
rol
sub
insb
sub
sbb
xor
cmp
lock
adc
push
imul
movsl
cmp
sub
insb
xchg
pop
scas
in
jbe
ss
jmp
pop
cwtl
test
lods
xchg
pop
pop
sbb
cmp
push
sub
imul
sbb
mov
sbb
mov
mov
aad
lods
les
cmpsb
mov
aam
dec
loop
les
xchg
das
not
dec
mov
mov
inc
push
mov
or
jl
mov
jg
mov
fidivrs
cmp
into
or
adcb
sarl
pop
inc
ljmp
pushf
xchg
xor
push
ds
xor
xchg
inc
insl
add
mov
in
mov
mov
imul
mov
addl
cmpsl
or
mov
inc
mov
sahf
popa
cmpsb
pusha
enter
pop
jb
and
dec
xchg
cmpsb
ret
repz
jl
jecxz
xchg
xchg
or
mov
loop
cmp
imul
cmp
xchg
add
in
fucompp
xor
ds
push
insl
add
cmp
mov
mov
mov
fsub
roll
jo
or
testl
fwait
iret
mov
shr
xor
inc
mov
dec
mov
push
mov
nop
cmpsl
mov
push
std
add
mov
out
xchg
jle
shrb
adc
sarl
roll
sub
hlt
push
jecxz
inc
push
repz
jne
add
xchg
xor
mov
repz
push
adc
fnstenv
lock
cmp
mov
adc
lds
dec
es
stos
xchg
clc
pop
iret
add
push
shll
add
int3
or
cwtl
pop
call
iret
data16
movb
inc
imul
xor
mov
pop
jmp
sarb
pop
pop
mov
cwtl
or
push
cmp
dec
mov
mov
xchg
test
mov
movsl
dec
mov
lods
mov
outsb
adc
adc
add
mov
gs
adcl
xchg
adc
stos
int
fst
repnz
movsl
inc
sub
ja
jecxz
fstpl
call
mov
push
ljmp
xor
cld
adc
mov
cli
mov
std
push
bound
sbb
pop
cmp
stos
and
enter
mov
mov
add
pop
shlb
jne
or
in
mov
cld
push
and
adc
lds
mov
aam
mov
addb
movsl
or
loop
inc
pop
add
out
aaa
into
or
dec
push
add
lahf
inc
pop
outsb
inc
rolb
push
and
adc
cmc
jae
mov
ret
inc
jp
sub
insl
sbb
cltd
xor
pop
inc
stos
mov
daa
jne
lods
xchg
pop
xchg
test
jecxz
mov
clc
push
xlat
mov
jae
fmull
test
push
or
aam
lahf
loop
jecxz
lret
lock
jo
movsb
sub
inc
inc
fcoms
xor
aaa
data16
or
ret
subb
mov
ret
cld
lods
imul
ret
cli
cmp
sub
aam
dec
or
sbb
cmpsb
lds
rcll
rcr
imul
pushf
add
lcall
cmp
int3
out
adc
mov
icebp
jecxz
inc
fisubs
lds
js
add
popa
cmp
call
pop
mov
jnp
popa
in
jmp
stos
xor
mov
sbb
test
add
cmp
outsb
mov
outsb
out
dec
adc
push
and
adcl
sub
mov
out
xchg
mov
lods
sub
loope
aam
sar
repz
daa
push
cltd
or
xor
cmp
cs
cmp
xchg
mov
mov
daa
mov
pop
aad
sbb
jnp
popf
inc
test
adc
lret
fucomi
pop
xor
cld
insl
sub
cmp
xchg
pop
std
and
das
lret
sbb
jecxz
jle
je
mov
leave
or
rol
scas
jb
lahf
mov
ret
rcrb
mov
int
pop
ljmp
or
sbb
cs
lahf
add
push
rcrl
outsb
dec
lahf
lods
in
out
pop
dec
es
jo
push
stos
and
stos
or
mov
cwtl
decl
add
push
insb
mov
outsb
adc
loop
adc
shll
dec
pop
insl
jg
mov
add
test
xchg
cld
xchg
ljmp
es
xor
sub
xchg
ror
sub
dec
add
jg
cmp
adcb
cmp
cmpsl
pop
cmp
or
push
jo
sub
mov
cwtl
imul
jg
lret
mov
std
adc
inc
mov
sbb
mov
pop
movsl
push
mov
test
out
xchg
ljmp
and
mov
mov
scas
stos
jmp
addl
mov
das
pop
popa
sbb
pop
or
cmpb
pop
rcll
adc
movsl
and
xlat
mov
aam
or
iret
in
lret
cli
mov
dec
shrl
push
or
aas
mull
sub
int3
cmp
push
jae
push
jnp
stos
mov
rclb
adc
leave
aaa
cwtl
sbb
cmp
enter
cmp
insl
jmp
jmp
jo
mov
jo
fmull
out
into
cmp
rolb
pop
push
adc
aas
cmpsb
adc
movsl
call
iret
push
add
pop
push
lds
fwait
xor
jne
lods
shr
repnz
dec
ficompl
dec
lods
pop
cli
jnp
jns
sbb
adcb
in
movsl
inc
call
inc
data16
xchg
lcall
int3
dec
push
xor
sbb
stos
in
js
int3
xchg
xchg
test
push
mov
out
xor
mov
arpl
jo
pop
repz
ja
push
lock
dec
in
xchg
add
xchg
pop
mov
fisubrs
pop
and
fisttps
jb
and
add
adc
jmp
inc
push
loop
sbb
ficoms
mov
imul
mov
cltd
inc
and
int
fsubrp
lods
push
sti
clc
stos
sub
sbb
rol
repnz
dec
cbtw
push
sahf
or
and
test
inc
xor
fisttpl
sbb
hlt
push
inc
jmp
mov
in
icebp
loopne
mov
gs
fcomps
cld
stos
sub
mov
cmp
call
and
stos
dec
mov
mov
lret
pop
mov
out
sbb
push
loopne
bound
mov
dec
and
test
in
test
loope
lea
repz
jae
mov
or
outsb
in
mov
cmp
mov
adc
out
sbb
mov
pop
jecxz
icebp
cmp
pop
movsl
scas
pop
push
push
enter
icebp
add
in
or
testb
jnp
jmp
pop
jp
push
xor
aaa
xor
loopne
xor
cwtl
gs
out
dec
imull
sbbl
or
std
xchg
jne
sbbb
xchg
and
xchg
mov
sub
jmp
sub
and
mov
inc
pop
test
pushf
bnd
in
cmp
adc
pop
xchg
jnp,pn
fdivl
mov
jge
hlt
xlat
aad
or
in
or
aaa
into
mov
dec
push
push
loop
jmp
jp
push
mov
fcoml
jg
sub
add
jmp
mov
xor
ja
lock
mov
addr16
or
xchg
inc
push
sub
ds
test
lods
and
out
bound
test
aas
icebp
xchg
xor
xchg
dec
sub
in
repnz
lret
hlt
stos
xchg
and
xlat
push
mov
xchg
arpl
push
mov
push
mov
enter
lods
fs
mov
rcll
pop
dec
mov
xchg
inc
test
test
push
push
adc
jne
das
ret
mov
jmp
les
mov
dec
xchg
addb
ds
push
cmp
enter
add
test
lods
out
push
push
popa
stos
push
pop
mov
std
popl
or
je
imul
cmp
mov
js
test
inc
sub
sub
pop
sahf
pushf
pusha
lret
nop
aas
in
xchg
add
mov
xchg
sub
popa
shll
mov
pop
pop
mov
loope
sbb
jo
xchg
outsb
cli
pop
stc
adcb
mov
and
or
stos
data16
mov
dec
mov
ljmp
dec
xor
push
or
stc
add
pop
push
inc
inc
cmp
in
push
repnz
xchg
int
inc
sbbl
fidivrs
xchg
testl
ret
pop
dec
mov
jns
mov
aad
mov
xor
push
je
dec
mov
in
xchg
mov
push
test
and
lods
xlat
inc
lods
pop
mov
stos
jmp
inc
adc
imul
jg
fisubl
scas
ss
push
and
inc
mov
daa
mov
ja
in
sub
repz
push
inc
sahf
mov
xchg
jmp
dec
xor
or
xlat
cmp
sbb
adc
aaa
data16
add
roll
mov
xchg
insb
mov
lock
out
push
rol
jg
outsb
pop
in
xchg
popl
push
xchg
lods
jmp
fwait
std
popf
mov
cmp
dec
pop
inc
xchg
jbe
mov
xchg
cwtl
sbb
inc
cmp
xchg
imul
add
inc
fsubp
sub
pop
cwtl
jno
and
mov
mov
inc
fisttpl
inc
fists
push
sub
jge
adc
out
dec
ret
sbb
ljmp
mov
cs
xchg
dec
push
leave
hlt
mov
inc
push
push
rcrl
mov
sbb
cmpsb
cmpsl
dec
call
lea
repnz
cmc
mov
dec
hlt
ja
xor
imul
jo
out
sahf
pop
insl
fisttps
xchg
daa
movsl
push
push
les
and
mov
or
pop
mov
lds
jae
loop
inc
dec
dec
inc
pop
dec
in
mov
mov
and
lods
inc
add
cmc
movsb
mov
sbb
jns
mov
fmull
fs
xchg
and
in
rcr
jb
mov
jo
xchg
pushf
arpl
mov
int3
xchg
into
sbb
mov
lods
push
inc
ret
sbb
add
mov
jmp
cmp
add
dec
mov
jae
sub
mov
rcrl
ficoms
cltd
punpckldq
adc
sbb
add
push
clc
jbe
sub
ficompl
loop
out
jg
xor
xlat
xchg
sub
push
cmp
xor
bound
adc
push
xchg
adcb
dec
cmp
out
pushf
xor
orb
cmp
ds
mov
ret
aam
and
jbe
cltd
pmulhuw
outsb
inc
mov
dec
ja
cmp
insl
inc
sbb
mov
mov
nop
das
dec
cltd
xchg
cmp
sub
add
dec
jge
sub
faddl
mov
cmpsl
dec
loop
psadbw
push
xchg
mov
ret
mov
das
mov
in
xor
and
pop
in
mov
pop
xor
out
dec
lcall
xor
add
adcl
mov
mov
adc
cmp
mov
adc
add
leave
cli
cltd
mov
mov
cli
inc
shll
cmp
dec
mov
subb
xlat
aam
push
iret
fisubl
jmp
mov
mov
pop
loopne
mov
add
aad
rorl
push
out
pop
sub
pop
pushf
fidivs
sbb
iret
loop
or
lret
xchg
neg
mov
xchg
pop
mov
jb
add
add
test
cmpsl
ds
jbe
sbb
inc
inc
insb
mov
ja
xchg
inc
dec
lods
inc
sbbl
jb
xor
lcall
xor
arpl
add
cltd
in
test
push
jae
xor
or
lret
or
mov
cmp
dec
insb
dec
xchg
mov
adc
test
gs
xchg
and
xor
mov
push
mov
dec
xor
inc
icebp
xor
pushf
es
imul
pop
aad
fistl
xchg
adc
jmp
sahf
and
dec
mov
lahf
pop
xor
sub
mov
cmpsb
push
sub
xor
adc
xchg
xchg
call
mov
mov
lods
loope
fs
stos
aas
popa
hlt
cmc
pop
int
cld
jmp
sbb
test
mov
xchg
add
ljmp
dec
cwtl
stos
push
outsl
add
and
xchg
enter
inc
pop
rol
push
out
and
xor
shrl
add
sub
sarl
sti
adc
inc
sbb
jp
icebp
loop
aas
adc
pusha
jnp
jb
xor
push
stc
add
out
adc
cld
movsl
fldenv
xchg
and
or
and
cmp
hlt
mov
sub
out
lahf
sbb
shrl
jp
ja
fistps
orl
call
popf
inc
add
jno
push
mov
mov
jae
or
push
push
inc
cli
inc
ja
shr
inc
pushf
xor
ret
int3
and
push
xchg
fsts
push
das
outsb
or
adc
popf
inc
xor
mov
or
popa
lahf
dec
movsb
les
pop
popl
je
xchg
movsl
std
or
dec
loopne
loope
les
jecxz
out
add
inc
jb
scas
out
mov
lahf
mov
iret
movsl
call
dec
lahf
ljmp
jecxz
fstl
xchg
push
cmpps
insb
sbb
fsubl
or
lcall
mov
mov
jecxz
testl
sbb
in
push
in
subl
pop
loopne
jmp
mov
jmp
cmp
adc
push
sub
lds
pop
lcall
jl
pop
out
xchg
pop
mov
and
lcall
movsl
jne
xchg
dec
mov
mov
mov
insb
and
push
add
mov
movl
sub
jns
mov
cld
outsl
pop
outsl
sbb
mov
int
out
pop
xchg
xchg
es
fwait
inc
andb
push
aas
push
out
ljmp
or
dec
mov
xor
fldenv
test
adc
pop
inc
jmp
dec
adc
ds
mov
adc
mov
ret
mov
adc
xor
movl
pop
dec
hlt
sbb
addr16
xor
add
aaa
into
pop
jmp
or
ficoms
mov
jg
xchg
mov
sbb
lret
std
cmp
pop
paddb
test
pop
ss
stos
ret
repnz
add
call
pop
test
sub
fucomi
or
out
mov
sbb
rorl
and
xor
mov
lret
mov
dec
jbe
jnp
mov
add
arpl
scas
fadd
fbstp
mov
mov
adc
fwait
test
icebp
notb
push
push
xchg
mov
jno
cmc
cmpsb
mov
cmp
mov
in
xchg
dec
inc
repz
je
imul
sub
push
hlt
addr16
mov
mov
idivb
sbb
dec
bound
repz
hlt
pop
dec
add
lcall
jle
arpl
popf
jmp
movl
xchg
mov
insb
jnp
repnz
stos
mov
int3
fldt
aad
sub
imulb
inc
mov
mov
xchg
xchg
les
cmp
aam
xchg
loopne
shll
dec
fwait
jle
pushf
gs
jae
movsl
rorb
and
jno
out
push
cmp
mov
arpl
mov
jae
pop
sub
xchg
pop
decl
sbb
push
out
popf
fsubrl
repz
cmp
cmpsb
out
ljmp
jno
call
mov
sub
out
rorb
dec
lahf
push
adc
fimull
jp
sti
adc
cli
fcoms
pop
scas
stc
mov
mov
add
mov
aaa
lcall
test
mov
mov
movsl
xor
movsw
negb
ret
adc
mov
xor
ret
sub
es
mov
xchg
lods
inc
pop
shrl
sti
push
lret
xlat
pop
mov
sahf
inc
test
push
in
frstor
push
push
inc
add
jnp
arpl
stos
and
sbb
sub
pop
xor
cmp
xor
dec
stos
cmpsb
jns
imul
imul
sbb
ret
test
ret
in
mov
cmp
mov
sbb
adc
cmp
and
mov
pop
dec
cmp
pop
call
imul
jns
mov
fmull
addr16
arpl
outsl
xchg
jne
gs
add
push
xorb
mov
std
mov
test
pop
in
ficomps
sarl
and
xchg
gs
mov
mov
lock
add
dec
xor
dec
jbe
nop
dec
shll
fdivrl
nop
push
ljmp
xchg
imul
dec
jae
push
out
or
outsb
ret
outsb
add
jae
fists
or
pop
loope
add
jb
mov
loope
outsl
lcall
mov
stc
repnz
push
cmp
loop
es
adc
inc
add
into
xor
jno
sbb
mov
sahf
stos
sub
push
xchg
pushl
insb
repz
mov
mov
ljmp
mov
int
js
push
out
cmp
sub
xchg
xor
jno
aas
in
xchg
loopne
aam
jp
and
ss
inc
icebp
jge
pop
sub
jno
lods
push
mov
repnz
test
cmp
inc
fstpl
jecxz
dec
mov
and
add
ds
push
adc
cmp
cmp
and
push
ss
mov
insb
lret
push
sbb
nop
imul
lret
enter
push
ljmp
jno
pop
int
sahf
into
jge
jb
mov
fnsave
mov
jl
adc
xchg
pusha
jle
mov
rcrl
pop
rcll
lds
scas
inc
pop
sbb
adc
sub
sbb
xorl
xlat
out
or
mov
sub
call
aad
jns
inc
imul
in
in
outsl
lcall
sbb
out
insb
add
bound
sbb
jbe
pusha
outsl
sbb
fsts
lea
xlat
push
xchg
jmp
aad
xchg
push
icebp
jns
imul
jo
xor
imul
cwtl
jns
inc
loop
push
sub
sub
inc
pop
sub
lods
inc
orl
pushf
call
pop
into
in
push
add
mov
pop
sahf
mov
add
gs
jl
loope
call
jmp
repnz
dec
and
dec
dec
mov
cmc
mov
cmpl
sub
sub
out
jae
cmpsl
movsb
jmp
mov
jmp
int3
loope
add
shrb
iret
push
xchg
adc
cwtl
and
xor
leave
fdivs
xchg
or
pop
ret
push
inc
mov
movsl
imul
pop
xlat
aad
aad
jns
out
dec
lcall
mov
xor
addr16
mov
adc
push
repnz
test
push
shll
push
dec
xor
dec
xchg
bound
sbb
mov
mov
sbb
cmp
js
movsl
mov
and
sub
je
mov
test
and
es
jg
pop
mov
mov
cmp
jo
popf
xchg
in
push
add
arpl
js
lcall
mov
xchg
jg
sbb
idivb
loope
ror
jns
and
xchg
sbb
rorb
cmp
and
mov
pop
mov
or
xchg
pop
jnp
daa
movsl
cmc
inc
arpl
push
pusha
xor
aad
rorl
and
xchg
ret
arpl
or
ljmp
xor
inc
incb
adc
popa
mov
shl
pop
call
aam
mov
dec
lods
loope
loop
cmpl
xchg
pop
mov
mov
movsl
xchg
xchg
insb
adc
scas
push
xchg
js
fsubr
adc
jne
sahf
mov
cmp
or
push
mov
je
pop
sub
popa
clc
cwtl
mov
jnp
mov
mov
test
mov
pop
out
adc
addl
mov
ss
lret
xchg
shr
mov
std
pop
int3
mov
dec
ret
outsl
sub
out
mov
mov
lods
jb
xlat
xchg
push
xchg
ss
mov
aaa
cld
inc
xchg
pop
xchg
stos
jp
inc
pop
xchg
xchg
repnz
mov
bound
fsubl
inc
int3
aam
gs
imul
div
mov
loopne
add
pop
cmpsb
add
jg
push
pop
pop
xor
jle
addr16
daa
or
mov
ret
rcl
mov
cmp
push
fs
xlat
mov
or
cmpsl
mov
mov
jge
xchg
mov
aad
jbe
lock
js
movsb
bnd
pop
arpl
push
loop
mov
mov
and
inc
adc
or
jne
or
jle
and
xorb
rorb
ss
and
pusha
jge
cmp
sbb
lahf
xorb
sbb
shrb
or
jle
jae
lea
mov
sarb
dec
popa
out
and
lock
push
inc
stos
fstpl
sub
or
pop
fwait
add
mov
test
or
jae
pop
mov
popf
inc
and
dec
data16
xchg
shrb
movsb
lahf
pop
cli
xchg
and
movsb
mov
jg
ljmp
jb
and
mov
addb
jecxz
enter
jp
sub
test
jg
mov
cmpsl
lret
clc
sarb
rcrb
insl
add
pop
ret
mov
sahf
mov
pushw
jg
mul
mov
fnstenv
or
sti
rolb
xor
add
pushf
in
stos
cmp
or
aas
cmp
dec
shrb
mov
cmp
adc
pushf
jg
jl
jns
mov
sbb
mov
cmp
sbb
pop
sar
rolb
mov
cwtl
test
add
dec
cmp
in
mov
mov
cmp
into
inc
push
aas
lods
scas
ds
pusha
sti
aas
aad
in
mov
jno
push
sub
mov
ja
inc
pop
dec
jns
insl
xchg
inc
fsubrs
jb
dec
ljmp
ljmp
pop
test
add
lret
cwtl
repnz
pop
pop
pushw
xchg
inc
mov
push
xor
nop
add
iret
jno
jns
mov
push
test
sub
loope
and
dec
lret
mov
or
or
jp
pop
cmc
cli
fwait
push
cmpsb
push
xchg
jl
ret
jbe
pushf
push
add
mov
jns
cmp
jmp
and
jne
dec
lret
clc
pop
je
pshufw
loope
or
mov
flds
or
fistps
lcall
and
inc
fcomps
inc
lds
arpl
test
inc
add
or
push
sub
dec
pop
sti
xchg
push
in
addr16
inc
mov
inc
je
mov
das
adc
push
cltd
shll
imul
loop
out
and
cmc
arpl
mov
pop
test
pushf
adc
imul
and
cs
dec
xchg
push
lods
fiadds
adc
es
je
cmp
mov
xchg
push
xchg
cmpxchg
cld
jecxz
cmpsl
mov
add
lds
mov
pop
mov
mov
jo
mov
shlb
test
lahf
and
push
mov
push
cltd
ss
daa
jo
fisttps
pop
aas
enter
pop
aaa
fmuls
mov
shrl
jae
insl
jae
mov
aad
pop
sbb
push
aaa
cmp
jno
or
sahf
xchg
in
std
adc
dec
xor
sbb
mov
rcl
shll
pusha
leave
daa
popa
mov
cmp
sbb
or
mov
mov
adc
cmpsb
jae
gs
fs
fisubs
push
lret
fwait
jno,pt
mov
fimull
repnz
loope
outsl
ret
jne
mov
adc
pop
inc
adc
out
cmp
lods
in
pop
add
sti
mov
mov
test
or
out
in
add
inc
data16
pop
in
cmp
jp
andb
or
adc
sbb
sub
inc
adc
sub
jg
das
push
pop
cld
inc
add
inc
ljmp
xchg
test
dec
cmpsb
lds
into
adc
ja
sbb
cs
jnp
leave
das
fsubrl
ret
rcrb
shll
cli
sbb
idivl
and
adc
outsl
push
lods
cwtl
push
scas
inc
shll
cld
cmpsl
dec
dec
sar
adc
or
pop
cmc
mov
dec
dec
andb
sbb
add
xchg
test
jp
hlt
out
mov
and
dec
test
ja
mov
dec
andl
and
popf
and
add
fstpl
fcoml
into
xor
inc
jns
call
cwtl
add
mov
in
lret
sarl
xchg
lods
inc
xchg
and
popa
lea
lds
or
lods
cld
stos
push
test
dec
testb
orb
inc
adc
jl
cmc
movsb
xor
int
jl
pop
cmp
cmp
pop
xchg
sbb
outsl
imull
cld
out
lds
mov
and
xor
jbe
loope
ret
lahf
in
jecxz
push
adc
push
lods
ljmp
xchg
mov
fildll
adc
mov
or
addl
fists
mov
sub
das
in
dec
repnz
stos
mov
sub
shll
pusha
sub
inc
lret
xchg
mov
lea
push
movsb
dec
inc
fnsave
fsubr
pushf
sbb
jb
cmp
pop
lock
or
sbb
or
out
dec
setp
pop
mov
cwtl
or
cli
mov
pop
and
sbb
jns
ret
outsb
sub
mov
push
hlt
cmp
call
dec
and
cltd
roll
sbb
popa
cs
xchg
jae
inc
cmp
push
xor
pushl
xchg
ja
xor
loopne
pop
mov
dec
test
ret
pop
lds
pop
xor
pop
in
inc
push
inc
rcrb
mov
cmp
sub
lea
rcrl
les
out
jb
int
mov
pop
add
leave
xor
mov
pusha
test
negb
movsb
aaa
jne
add
inc
sub
and
push
mov
lret
lea
repz
mov
mov
daa
mov
adc
lds
outsb
shll
lods
faddl
dec
data16
jecxz
test
dec
movsl
fwait
lcall
stos
and
pop
jbe
outsb
adc
push
int
xchg
ss
jge
loopne
fbld
inc
fcmovbe
scas
fildl
pusha
loopne
inc
leave
std
and
iret
xchg
cmovno
stos
cmp
jmp
lret
sbb
dec
dec
lea
mov
pop
into
jle
mov
lret
cli
cmp
inc
cmp
neg
mov
into
pushf
loope
movsb
das
cmp
aam
pop
inc
push
jno
adc
stc
loope
inc
mov
mov
in
mov
loope
in
mov
sub
adc
jae
sub
xchg
sbb
loopne
dec
jecxz
jmp
fwait
rcl
lcall
sbb
cltd
sbb
inc
or
dec
imul
cwtl
stc
aas
cmp
icebp
cmp
add
shlb
mov
mov
loopne
and
mov
jns
sub
jae
testl
adc
and
lcall
jbe
jmp
adc
ljmp
ss
push
sub
test
outsl
mov
or
or
push
inc
add
sbb
mov
or
dec
mov
insb
adc
iret
xor
push
jg
adc
xchg
sahf
xchg
xor
neg
jae
jl
rep
lods
stos
repz
iret
xchg
pop
je
aad
ds
lods
mov
mov
push
arpl
xchg
mov
andl
mov
lcall
xor
movsl
jae
sub
jge
add
daa
mov
mov
ret
repz
movsl
mov
add
repz
iret
ds
ds
movsb
dec
into
in
mov
movsb
icebp
or
pushf
cmp
cmpsb
mov
or
jecxz
push
mov
enter
subb
adc
aad
cmp
into
mov
shrl
mov
pop
pop
or
imul
jecxz
or
mov
popf
mov
es
aam
ljmp
arpl
xor
das
lea
xor
pushf
dec
mov
push
mov
stos
sbb
popf
lea
outsl
xor
sbb
xor
dec
out
jne
inc
in
xchg
sub
lods
test
lcall
xchg
pusha
add
or
xchg
jl
pop
stos
jb
or
pop
mov
xor
jns
insl
mov
pop
fwait
xor
enter
pop
mov
rcl
movsb
es
xchg
call
into
bound
ss
lret
aas
push
fidivrl
out
xchg
pop
and
lea
pop
repz
test
or
stos
es
movsl
stos
in
std
dec
mov
test
imul
ljmp
jo
cmpsb
add
and
mov
jnp
lahf
or
jae
inc
jmp
add
icebp
and
dec
push
dec
add
dec
mov
mov
pop
jg
outsb
sbb
pop
add
push
mov
int
call
das
inc
add
xor
mov
hlt
stos
mov
pop
sbb
lret
movsb
sti
and
jne
pop
test
dec
xchg
mov
adc
jnp
int
mov
sub
mov
movsl
ss
and
cs
loope
xor
pop
adc
out
dec
nop
pop
shlb
out
cltd
cmp
aad
mov
lods
push
leave
xor
mov
cmp
rcrb
mov
xor
xchg
inc
fcoms
push
cmp
cmpsb
hlt
mov
scas
lds
ret
jne
movsl
cmp
sbb
jae
sub
mov
or
clc
imul
mov
pushf
xor
out
xor
dec
pusha
das
loope
xor
xchg
adc
cmpb
daa
push
mov
jae
in
repz
adc
lods
cmp
shll
xchg
lahf
cmp
inc
pusha
mov
icebp
test
mov
not
cs
pop
loop
jl
mov
sbbb
movsb
gs
mov
xlat
rep
push
pop
daa
push
jecxz
mov
dec
and
sub
ss
push
cmp
or
das
rcr
jns
dec
add
popl
popa
ss
aas
xchg
cmp
imul
out
or
rcll
es
jg
mov
inc
jecxz
mov
arpl
in
popf
mov
mov
push
jne
repz
pop
jg
scas
mov
cmp
repnz
pop
cmp
out
mov
push
mov
sub
in
adc
mov
push
mov
xchg
enter
fcomp
icebp
jnp
out
leave
and
sbb
sahf
int3
fadds
or
inc
pop
fadds
scas
and
adc
inc
repnz
xor
loopne
xchg
nop
inc
pusha
popf
mov
push
out
pop
hlt
and
mov
mov
push
or
aam
sarb
mov
jno
xor
adc
pop
cmp
and
xchg
sbb
je
rol
inc
inc
inc
bound
xchg
cmp
sub
test
inc
mov
inc
mov
rcl
cld
enter
or
in
jns
arpl
mov
mov
dec
sub
jl
pop
pop
out
push
popf
or
dec
insl
ljmp
push
jnp
mov
mov
mov
dec
lods
mov
lock
fisubrl
cltd
xor
aas
jge
popa
and
push
push
xchg
xor
mov
les
mov
mov
dec
mov
push
stos
and
and
fmul
adcl
hlt
das
fnstcw
mov
shr
sbb
stc
mov
cmp
sbb
xor
mov
mul
cld
cs
pushf
push
cmpsl
or
adc
add
outsl
xchg
repz
mov
mov
scas
daa
bnd
shlb
jge
pusha
mov
les
out
divl
adc
xor
std
adc
loope
pop
mov
and
in
mov
jle
add
scas
nop
cwtl
inc
popf
inc
mov
sbb
push
lods
push
popf
and
cmp
cwtl
sahf
inc
mov
and
cmp
nop
adc
lea
push
mov
mov
rcrl
dec
push
xor
adc
sahf
xor
or
adc
mov
adc
adc
adc
int3
inc
es
jo
shll
sbb
ljmp
push
stos
int3
mov
jp
sbb
nop
lret
std
shrl
inc
pop
out
or
ror
fwait
sbb
fs
mov
mov
xor
dec
pop
lret
jge
xor
xor
in
mov
jl
add
ret
cld
mov
test
jg
inc
xchg
mov
cmpsl
pushf
xor
and
loope
jg
push
mov
xchg
xor
sahf
xor
push
aaa
test
out
arpl
pushf
xchg
leave
and
popf
sbb
mov
movsb
xchg
jns
scas
xor
lahf
sbb
fdivl
mov
movsl
push
cmp
dec
dec
pop
jae
andb
adc
mov
lods
and
aam
mov
jno
sarl
push
fs
pcmpgtb
add
jp
xchg
xlat
fadd
or
mov
dec
hlt
shlb
jmp
pop
jmp
cli
pop
sti
or
jecxz
fistps
or
mov
fwait
jno
aas
and
mov
add
dec
loopne
sub
scas
sub
data16
pop
in
push
add
add
es
adc
imul
lea
push
add
push
jl
outsl
mov
and
pop
rol
daa
sarl
jae
xor
pop
push
mov
jecxz
xchg
data16
mov
shrb
add
ret
push
test
movsl
hlt
in
mov
jp
xor
dec
dec
xlat
insl
rorb
mov
ret
imul
int
inc
icebp
mov
cmp
ret
xor
lcall
fsubs
dec
out
aas
cmc
mov
jno
jno
mov
cs
loopne
movsb
sbbl
addr16
xchg
stc
xchg
sub
test
mov
sbb
cs
sbb
mov
movsl
mov
xor
jb
scas
lds
cmp
push
push
inc
orl
inc
xchg
adc
mov
shlb
cmp
pop
pop
ficoml
repz
xor
xor
push
mov
mov
fistl
xlat
xchg
aas
add
cmp
pop
and
clc
mov
pop
int
stos
cmp
cmpsl
jp
dec
cvttps2pi
add
fwait
push
in
adc
rcrb
sbb
jge
jle
shrl
adc
call
or
jp
les
mov
repnz
mov
push
movsl
in
cwtl
js
pop
sub
ret
or
fwait
dec
push
xchg
mov
pop
sub
aad
mov
jecxz
aaa
in
rclb
stc
test
mov
shr
xor
adc
xor
adc
ja
push
xor
dec
in
sti
sbb
idivl
movb
dec
in
aaa
call
push
mov
pop
shrl
xor
shrl
mov
andb
mov
shll
jmp
imul
push
js
cld
cmp
popf
push
pop
roll
outsb
loop
mov
cmpsl
inc
xchg
xchg
cli
dec
xor
movb
dec
loope
sbb
icebp
adc
xchg
pop
dec
push
add
popf
mov
mov
cld
push
mov
fbstp
test
and
mov
clc
cmp
int3
cmpsl
push
test
ljmp
das
nop
pop
les
rorl
aaa
inc
bound
mov
fsubrl
stos
sbb
das
or
popa
push
das
popa
or
push
xlat
addr16
fiadds
add
sbb
or
iret
shrl
mov
inc
je
outsb
sub
and
sete
xchg
out
adc
sub
ss
mov
ret
xchg
aaa
push
push
pusha
fidivrl
test
mov
int3
mov
imull
rcrb
mov
and
je
mov
pop
lret
jl
add
and
js
ja
mov
push
sbb
dec
pushf
add
and
pop
out
test
mov
fxch
int
pop
adc
gs
pop
cmpsl
mov
test
mov
xchg
fucomi
stc
movsl
je
daa
xor
sub
xor
pop
xchg
call
popa
ds
pop
or
popa
faddl
push
jae
push
and
sbb
cmp
cld
sbb
push
push
stos
movlps
lock
lea
adc
test
fidivl
imul
cmp
push
lcall
push
jmp
lds
mov
mov
stc
xchg
mov
inc
and
mov
inc
inc
cmp
sbb
jp
cmp
test
jno
shlb
xchg
inc
hlt
scas
inc
mov
inc
cs
idivl
andb
data16
mov
sbb
sub
outsl
pushf
fstpt
push
pop
ja
inc
shll
rcll
hlt
fists
push
adc
push
mov
mov
mov
and
mov
in
mov
mov
cmpsb
je
xor
int3
jno
ja
lods
inc
inc
iret
test
dec
fdivr
lret
push
push
or
test
movsl
and
lret
cmp
je
pop
push
mov
jmp
push
jmp
into
ret
ret
jb
fdivs
fisubs
jg
jnp
popf
inc
push
popa
pop
and
test
rcrl
jae
fs
test
dec
gs
adc
mov
mov
mov
or
insb
fldl2t
pop
loopne
mov
out
sub
cmp
mov
aaa
cmpl
fs
dec
xor
aaa
cmp
stc
lret
stc
mov
xor
jmp
push
subb
adc
fnsave
mov
push
inc
test
mov
out
cmpsl
push
or
mov
loopne
dec
inc
scas
lds
les
clc
je
lahf
pusha
and
xor
dec
cmp
andb
dec
mov
pop
mov
gs
inc
pop
add
test
in
std
mov
adc
scas
sbb
mov
jno
mov
cmp
jne
jg
mov
push
mov
aaa
sub
mov
clc
jne
outsb
or
mov
xor
shlb
xchg
xor
xor
lea
sti
out
or
xor
lds
nop
mov
insb
aas
pop
cmp
mov
and
jge
in
jns
adc
cmp
inc
roll
mov
dec
xor
pop
icebp
mov
arpl
mov
sbb
cmpsl
mov
loopne
inc
adc
or
outsl
mov
sbb
dec
add
out
and
in
inc
sub
push
mov
leave
lods
in
fs
sbb
in
daa
push
outsl
pop
dec
pop
loope
loopne
dec
push
cwtl
mov
sbb
sbbl
and
inc
stos
daa
xor
divl
loope
inc
dec
inc
mov
cltd
jmp
sub
fistpl
int3
mov
mov
aam
and
fldt
imul
lock
lea
xchg
mov
movsl
adc
jge
aad
imul
ffree
mov
sbb
sti
add
fldenv
sbb
xchg
arpl
add
pop
mull
pop
out
xchg
or
scas
sarb
idiv
mov
pop
out
ljmp
push
outsb
in
negl
xchg
sub
decb
decb
int
xchg
fs
enter
cmc
adc
dec
fs
aam
fdivs
cltd
pop
repz
jno
add
xchg
arpl
sbb
ja
daa
fbstp
ja
inc
pop
lret
cwtl
sub
mov
sbb
jle
and
push
cmpsl
inc
lret
bound
fcmovb
pop
lret
sti
jg
fildll
sbb
outsb
add
pusha
jne
cwtl
out
in
sbb
dec
mov
jae
adc
jg
ja
mov
lea
repnz
out
and
dec
mov
ljmp
in
sbb
dec
or
out
adc
sbb
outsb
iret
cmp
inc
jns
stos
lret
cmp
xor
shll
in
repnz
xchg
jg
sub
adc
sbb
divb
xchg
pop
jne
push
ss
mov
jmp
push
in
mov
mov
mov
pop
adc
rolb
add
test
pop
xchg
outsb
push
in
lods
pop
push
mov
add
sbb
in
and
lahf
inc
aas
xchg
hlt
shlb
push
dec
shrb
mulb
xchg
out
and
out
push
loop
test
mov
popa
aaa
into
xchg
call
lret
in
outsb
add
insb
xchg
movd
jnp
inc
stos
or
and
xorl
mov
cmc
mov
dec
arpl
aad
insl
repz
push
dec
dec
out
pusha
test
push
iret
or
mov
mov
adc
ja
fstps
scas
mov
xchg
jns
xchg
lcall
and
loopne
movsb
inc
fcmovbe
inc
idivl
mov
adc
push
adc
mov
cli
and
testl
and
add
inc
xor
or
lods
push
push
cmp
mov
push
xchg
lock
ss
imul
and
fmull
std
xchg
movsl
or
sub
pop
in
push
ret
mov
data16
icebp
jae
scas
push
stos
inc
or
pushf
mov
fnstsw
fimull
mov
cmp
xchg
pop
xor
inc
dec
call
call
and
data16
push
jnp
mov
jle
mov
jp
enter
or
shl
dec
nop
push
push
push
aas
in
cmc
mov
dec
shrb
xchg
add
enter
out
fstps
jg
fwait
outsb
sbb
movsb
or
sub
aas
pop
sahf
lods
repz
xchg
lods
into
and
aam
aaa
arpl
adc
pop
insl
ds
push
push
jo
test
call
fistl
aam
mov
push
cmp
insb
or
push
cmpsl
pop
xchg
in
jge
jb
sbbl
imul
push
jns
mov
mov
push
mov
fimull
push
add
adc
pop
fsubs
add
cltd
subl
es
out
sti
add
lcall
out
or
dec
in
mov
jle
cmp
lahf
add
aad
stos
inc
divl
mov
mov
sbb
lea
push
out
pop
gs
cld
ret
arpl
shlb
in
add
mov
dec
adc
aam
pop
xlat
dec
mov
sub
loop
sbb
popl
shrb
stos
sbbl
mov
inc
push
inc
push
adc
fidivl
sbb
ds
fcomps
fsubl
sbb
outsb
xchg
decl
dec
inc
cld
jle
or
dec
add
sbb
aas
lcall
or
inc
mov
xchg
mov
cltd
cmc
pop
gs
cmpsb
imul
into
jb
arpl
repnz
mov
fstl
loop
js
mov
in
mov
add
adcb
push
ds
mov
push
fsubrl
pop
hlt
sbb
idivl
andl
mov
push
inc
xlat
addb
jp
push
icebp
or
cmpsb
adc
sbb
mov
clc
imul
les
pop
lahf
outsl
cli
xor
rcll
jmp
stc
mov
adcl
sub
adc
cld
out
jge
enter
movsb
sub
inc
cli
add
sub
or
and
xorl
mov
mov
xorb
inc
jmp
lock
cmp
xchg
mov
xchg
sub
mov
pop
add
adc
xor
ret
arpl
scas
sbbb
lods
or
cmp
imul
fldcw
inc
fsts
invd
xchg
jnp
mov
stc
and
dec
xchg
xor
push
lcall
adc
push
sahf
scas
loope
jns
cmp
rclb
cmp
jecxz
cwtl
das
dec
inc
fwait
dec
pushf
imul
mov
sbb
pop
xchg
mov
lds
mov
lcall
and
clc
push
les
push
jle
dec
iret
ret
xchg
xor
mov
dec
jp
mov
cwtl
jmp
add
add
add
push
add
adc
mov
xchg
ret
inc
dec
insb
cld
popf
sub
xchg
dec
aaa
pop
sbb
arpl
push
call
or
mov
and
mov
roll
mov
pop
enter
add
jb
mov
push
popa
out
mov
ds
fucomp
rcll
ret
shrl
xchg
lods
xchg
cmc
pop
into
inc
adc
mov
lds
subb
jle
and
xchg
jecxz
filds
ds
push
inc
add
sbb
jmp
outsl
cmp
addl
mov
mov
or
ds
clc
add
mov
mov
jmp
pushf
mov
lods
out
ror
fildl
int
in
pop
daa
pop
jg
mov
mov
sbb
les
lcall
lea
ror
aaa
lock
imul
mov
repz
add
xchg
lret
in
inc
cmp
loope
cmp
fs
xchg
sub
mov
clc
and
push
mov
push
inc
mov
movsl
popf
sbb
jmp
clc
js
aad
pop
pop
jecxz
lcall
cmp
jecxz
dec
xchg
push
jge
mov
add
or
jl
fdivrs
out
aas
pop
sub
xor
push
movsb
lret
add
daa
out
fdivrl
fisubl
push
xchg
in
test
dec
cmp
xchg
inc
scas
push
or
adc
cltd
or
mov
xchg
sbbb
sub
ljmp
jb
mov
push
sbb
into
push
sub
aaa
xor
jmp
loopne
popa
rclb
shr
cmpsb
cmp
sub
dec
xchg
xlat
sub
mov
pop
ffreep
jecxz
stc
aam
jle
das
mov
pop
and
push
fstpt
xchg
mov
or
out
push
imul
sti
outsb
and
rcrb
aaa
loope
out
push
sub
cmp
lods
and
pop
scas
xchg
sarb
or
rorb
or
xor
mov
jns
mov
xchg
xchg
dec
loop
mov
xchg
hlt
or
sub
sbb
push
cmpl
dec
mov
lock
adc
push
js
movsl
ret
fsubr
int3
cmpsb
out
inc
popa
lret
shrb
andb
scas
mov
ja
int
cmp
enter
jl
std
into
leave
jg
ljmp
mov
fldlg2
lret
insb
inc
scas
add
xor
cmp
paddb
mov
into
adc
dec
iret
mov
test
sub
je
push
in
adc
int3
gs
lcall
add
mov
mov
mov
push
fcmovnbe
jo
mov
mov
fisttpl
fnstcw
sbb
xor
xlat
iret
cwtl
pop
adc
data16
pop
data16
push
dec
push
pushf
sbb
xchg
iret
cmp
adc
repz
frstor
inc
mov
jmp
movsb
sbb
test
dec
push
xchg
movsl
and
add
in
lea
push
in
sbb
dec
xor
dec
inc
sbb
or
aas
mov
mov
mov
jge
fidivrs
jge
sub
mov
mov
addr16
insl
cltd
lret
das
adc
or
and
out
xor
scas
lods
bound
jg
std
imul
icebp
cmpsb
pop
xor
mov
jge
inc
push
pop
sub
inc
cmp
out
mov
rorb
nop
cmp
pushf
out
iret
pop
mov
push
xchg
lods
push
lahf
aas
sarl
lea
sbb
sub
dec
push
mov
fnstenv
add
mov
sub
repnz
ret
andl
iret
dec
std
pusha
loop
cmp
sub
pop
scas
jo
call
mov
jae
hlt
mov
inc
jmp
xchg
arpl
cmp
push
sahf
shlb
fbstp
mov
jae
xor
fs
sarl
pop
adc
add
and
mov
mov
test
not
filds
cmp
shl
cltd
and
dec
push
das
mov
lcall
add
push
nopl
bound
pop
pop
mov
xor
inc
rcrb
out
rol
jmp
add
dec
or
clc
or
sub
lods
and
cmp
xor
fcomps
sub
adc
ljmp
push
std
aas
add
push
jg
mov
nop
fnstsw
push
rorl
xor
stc
daa
sub
or
and
pop
push
inc
xlat
shrl
inc
jp
pop
ds
std
inc
fcoms
lcall
nop
and
dec
mov
cmc
iret
xchg
arpl
xor
jns
mov
sbb
outsb
movsl
jecxz
fwait
pop
repz
jg
xchg
jne
sub
mov
mov
sub
enter
sti
mov
xor
add
pusha
mov
cld
data16
push
or
fs
andl
dec
mov
cmpsb
pop
std
das
cs
inc
mov
pop
mov
test
mov
mov
jg
sub
mov
or
cmpsb
ret
mov
sbb
cli
clc
notb
sub
jnp
dec
repnz
out
pop
lods
aaa
into
push
dec
scas
xchg
sarl
popa
outsb
repz
arpl
test
add
hlt
xor
adc
cmp
dec
dec
loope
fidivrl
mov
nop
daa
faddp
std
jo
inc
scas
inc
je
sub
leave
fcoml
gs
les
mov
lret
cli
out
inc
ficoml
inc
lods
test
fsubrl
push
jbe
mov
movsb
ficoms
aam
movsb
push
mov
les
push
add
mov
cld
or
idiv
cmp
ror
cltd
lock
jno
xchg
les
mov
outsb
bound
inc
dec
imul
mov
call
int
icebp
ljmp
test
lea
out
mov
adc
lock
jne
sub
adc
lods
or
ds
cwtl
decb
rcl
insl
lea
fsubrs
mov
mov
roll
inc
jbe
gs
jno
mov
mov
int
imul
paddsw
xor
pop
jbe
cmp
fmul
jne
popf
stc
call
dec
add
aad
xchg
lods
sbb
cmp
jg
shlb
repnz
cmp
mov
clc
pop
das
mov
mov
arpl
jae
add
cld
fiaddl
mov
fisubrl
or
mov
ret
fwait
xor
test
mov
stos
mov
lds
xor
ret
aas
add
lock
inc
mov
mov
push
js
and
movsl
dec
mov
dec
cli
ljmp
fidivl
jl
adc
aaa
lds
push
fsubr
xchg
inc
cmp
imul
lcall
cli
mov
shlb
pushf
fidivrl
pop
jo
dec
mov
mov
pop
icebp
push
push
sar
and
push
ljmp
movsl
jg
idivl
inc
jmp
test
mov
and
es
push
pop
loope
or
xchg
xchg
inc
lock
mov
adc
imul
std
shll
jno
mov
leave
iret
fsub
mov
ud1
sub
ret
leave
jno
pop
jecxz
testb
out
or
mov
dec
inc
sbb
push
push
out
rol
call
into
std
mov
lods
and
push
addr16
lea
lret
insb
insl
aas
popf
movsb
push
jo
ja
outsb
test
dec
xor
mov
or
inc
int
and
repz
xchg
adc
stc
jbe
popf
pop
loope
add
sbb
test
ffree
pop
shll
les
shrb
test
cmp
iret
insb
cmp
aaa
push
push
inc
lret
std
out
leave
fldl2t
or
sub
pop
out
or
iret
xor
stos
imul
pop
add
movsb
test
pop
loop
add
mov
mov
mov
jae
pop
sbb
pusha
adc
fstl
dec
aad
cld
push
sub
jle
test
les
pop
addr16
pop
test
sub
sbb
dec
pushf
cmpsb
lock
cmp
fisttpll
or
mov
sub
fldenv
lret
mov
jmp
cmpsb
in
mov
xor
arpl
into
and
xchg
stos
in
clc
pop
mov
in
outsl
pop
or
pop
lret
cmpsl
sbb
jno
pop
jns
rorb
xchg
scas
insl
cld
push
shlb
divl
stc
cwtl
mov
jecxz
sbb
or
addr16
call
push
in
sahf
lcall
mov
test
mov
mov
add
push
out
repz
inc
fs
dec
xor
jmp
aad
push
rolb
sbb
mov
push
jb
shl
test
mov
sub
cmc
outsb
rorl
cltd
mov
dec
lock
outsl
cmc
lcall
scas
sub
cwtl
lock
or
cmp
pop
sahf
out
jns
data16
lret
fwait
sbb
add
jl
inc
loop
cmp
aas
into
adc
or
dec
lret
shr
bound
mov
inc
mov
mov
add
push
add
xchg
popa
faddl
insb
cltd
insb
adc
sub
aad
jp
jnp
push
jmp
ret
cmp
add
sbb
or
mov
and
push
dec
lods
pop
push
push
testb
cwtl
decb
add
shlb
adc
ds
jle
sub
jl
inc
lods
or
subl
test
mov
notb
popf
jle
shll
mov
ja
mov
je
dec
dec
jne
jnp
lock
inc
repnz
aas
xchg
rorb
out
cwtl
cld
inc
add
add
mov
adc
add
out
lea
push
outsl
jge
add
xchg
scas
test
inc
or
js
pop
movsb
mov
cli
jno
xchg
jns
enter
cwtl
in
mov
in
ficompl
dec
out
lds
jl
leave
pop
pushf
cmp
cmpl
dec
fnsave
dec
nop
rcrb
cli
mov
xor
sub
mov
ret
jbe
stos
dec
pop
insb
dec
xchg
push
hlt
mov
ficoml
jmp
addl
cmp
sub
dec
ds
shll
fcoms
cmp
dec
cmpsb
pop
lcall
pop
mov
sar
cmp
cmp
push
sub
jb
xlat
repz
jb
cmpsl
sbb
xchg
aaa
xchg
cmp
pop
movsl
cmp
enter
add
xchg
mov
inc
cli
cmc
pop
and
dec
xchg
xchg
daa
ret
orb
dec
mov
cmc
loop
push
sub
add
mov
xacquire
cmp
mov
xor
rcll
into
mov
push
gs
divb
aas
jecxz
mov
pushf
cli
jne
xchg
insl
mov
lds
mov
mov
in
aaa
loope
push
xor
push
fwait
jbe
roll
scas
mov
push
jl
mov
pop
popf
lock
das
xor
cld
fbstp
xchg
adc
popa
lods
cmp
packssdw
inc
add
inc
sbb
sarl
fs
and
mov
mov
scas
nop
stos
fistps
ds
int3
repnz
mov
or
xchg
adc
xor
mov
sub
sub
addr16
jle
xchg
fs
jb
iret
gs
sbb
or
sub
jmp
inc
sub
fstpl
add
xor
or
adc
sbb
adc
shlb
arpl
sahf
stos
lods
mov
mov
sub
addr16
xor
cmc
inc
jno,pn
pop
push
sub
ljmp
out
push
sbb
cmp
pop
lret
mov
or
jae
call
or
pop
push
pushf
cltd
jo
push
das
and
icebp
xor
mov
imul
push
inc
xchg
mov
loope
call
pop
push
out
add
jge
dec
mov
xor
aas
aad
xor
lret
out
orl
cmp
jg
jno
xchg
rcrb
sub
dec
sahf
pop
jb
pop
ret
mov
push
in
dec
push
jle
dec
dec
aaa
jnp
mov
xor
sbb
movsl
or
add
mov
out
xchg
adc
outsb
jp
mov
jle
cwtl
sar
cmp
aaa
push
pop
scas
xor
cmpsl
stc
pop
add
dec
dec
sub
sub
dec
mov
mov
shrb
scas
xor
xchg
rcrb
jg
out
mov
getsec
push
mov
add
jbe
stos
mov
push
adc
xchg
jns
in
mov
imul
jne
push
add
inc
jns
gs
or
in
pop
or
mov
aas
jecxz
outsl
out
and
and
lea
cmp
fdivs
jg
loope
or
jns
mov
rcrb
mov
sbb
movsb
mov
mov
movsl
rclb
mov
pop
cltd
xchg
or
mov
mov
cmp
sbb
negl
sbb
outsb
push
lea
scas
adc
push
cmp
hlt
shrl
and
bound
rcll
pop
sahf
clc
adc
xor
push
jb
fs
jne
pop
cmp
pop
hlt
adc
mov
xchg
cs
popa
rclb
jns
in
mov
mov
dec
sbb
dec
aam
repnz
add
sbb
dec
fimull
sbb
cmp
scas
xchg
iret
lahf
jno
inc
xchg
aad
mov
je
xlat
nop
xor
inc
or
push
call
lret
add
jmp
xlat
push
jp
inc
jnp
pop
xor
aam
shl
adc
pop
or
dec
insb
sub
and
pop
dec
icebp
je
std
xor
xchg
jmp
fidivrl
jne
aam
fldt
adc
xor
pop
cmpl
repnz
dec
imul
dec
in
sub
cmp
mov
ds
popf
les
cld
cmc
sbb
xchg
orl
and
movsb
add
addr16
enter
lods
test
xchg
imul
in
pop
sbbl
xor
push
lock
outsl
incl
mov
push
insb
nop
xchg
out
inc
pop
xchg
sub
das
mov
test
and
pop
pop
cmp
leave
clc
xlat
jnp
ljmp
idivb
enter
add
inc
mov
mov
lds
xchg
dec
jnp
push
and
outsl
push
push
testl
popa
insl
leave
lods
mov
jbe
pop
sbb
jp
mov
les
test
inc
cltd
dec
mov
dec
jnp
and
inc
cmpsl
inc
arpl
cmp
fucom
jbe
flds
rorl
mov
in
or
push
pop
adc
xchg
loopne
pop
cwtl
xlat
cmc
jo
jg
popf
push
or
cwtl
cmp
out
cltd
popf
nop
jmp
call
subb
mov
jnp
sarl
and
loop
xor
mov
xor
cmp
cmc
xchg
xor
mov
hlt
mov
xchg
sub
stos
mov
iret
repz
idivb
push
call
test
push
mov
fistps
dec
xor
out
sub
mov
xchg
sub
jae
repnz
dec
mov
ljmp
jne
or
add
stc
xor
shlb
insl
jge
scas
mov
cmp
popa
test
cwtl
sbb
fldlg2
jecxz
ss
hlt
push
jnp
in
pop
adc
in
clc
mov
cmp
sub
jg
sub
sbb
mov
lahf
jmp
xor
repz
jns
xchg
mov
adc
sub
cmc
jl
dec
ret
inc
mov
cli
divl
jo
lret
sub
jno
mov
mov
mov
dec
mov
enter
mov
rolb
sarb
insl
mov
scas
popl
or
or
dec
loope
jecxz
mov
xchg
ss
repz
orl
test
sbb
popf
scas
push
pop
adc
aam
pop
dec
add
or
test
and
or
jb
adc
pop
mov
out
out
enter
scas
nop
or
outsl
loop
test
mov
jge
inc
push
or
jp
sub
addps
mov
shl
aaa
fildll
cmpsb
in
jl
mov
data16
loopne
push
mov
imul
pop
movsb
mov
clc
bound
hlt
lret
imul
add
lods
iret
fidivs
loope
adc
icebp
sbb
adc
cmp
insb
inc
adc
pop
stos
imul
jbe
test
outsb
push
sub
xchg
mov
je
cmc
and
inc
js
rcrl
addb
jecxz
aas
xchg
mov
inc
cmp
je
outsb
in
incl
pop
leave
mov
cmp
cmp
sbb
les
cltd
ret
inc
ljmp
pop
cld
lea
ss
loopne
sarb
add
and
test
jg
popf
push
inc
mov
fwait
bound
mov
rcr
fcoms
aas
mov
cmpsl
test
ret
loopne
call
stos
xchg
int
fsubr
mov
lea
insl
les
sti
sbb
inc
adcb
cmp
adc
pop
dec
push
imul
das
mov
lock
cmp
xor
scas
inc
rcrb
jmp
sbb
outsl
inc
mov
lahf
ss
xchg
aad
sbb
aas
push
mov
or
mov
lret
xchg
xor
enterw
popa
cld
scas
test
fs
test
pop
cmovle
lock
mov
outsb
and
inc
mov
repnz
subl
or
lods
sub
lahf
inc
push
mov
stos
jl
pop
scas
jns
fisttps
lret
bound
cli
push
sbb
cmpsb
jecxz
mov
lret
mov
mov
sub
fldcw
arpl
mov
xchg
test
sub
int
ds
mov
and
cld
inc
lret
and
inc
mov
push
push
xchg
sub
push
filds
push
adc
cwtl
cltd
and
rcrl
imul
rcrb
adc
ja
sbb
testl
sub
pusha
sub
push
cmpsb
push
mov
enter
or
cmpsl
sbb
xchg
adc
adc
xchg
or
es
add
sbb
repz
imul
je
out
pop
mov
aas
sahf
xor
es
popf
scas
adc
sbb
shl
push
push
gs
mov
in
jne
or
cwtl
mov
inc
enter
sbb
fwait
scas
mov
outsb
sub
mov
mov
or
jnp
cltd
shrl
or
in
push
jl
jp
int
mov
cld
testb
push
or
xchg
imul
xor
sub
xchg
inc
in
add
xor
mov
push
fmulp
mov
pop
enter
cmc
inc
leave
mov
sbb
ss
fmuls
cmp
pop
iret
or
jl
lret
fimull
loopne
inc
cwtl
jne
sbb
in
inc
adc
cmp
call
mov
in
or
mov
sbbl
fiaddl
fbstp
lcall
add
fsubrs
mov
or
pop
fs
inc
jle
mov
push
and
jnp
std
and
call
jg
mov
loop
iret
out
or
mov
jne
out
cmp
popf
cmpl
stos
xlat
and
push
inc
movsl
jne
int
lds
jb
mov
and
mov
sahf
xor
mov
stos
das
cmp
not
add
arpl
sbb
rorb
pop
or
popf
cmpsl
dec
sub
mov
dec
mov
cld
out
sbb
mov
mov
mov
mov
inc
mov
mov
push
sbb
cmc
mov
mov
mov
pushf
into
iret
loopne
mov
cwtl
out
xor
pop
cmp
imul
shlb
push
or
in
les
fists
lret
inc
mov
push
popf
psadbw
dec
ljmp
int3
xchg
out
xor
mov
mov
iret
sbb
icebp
sbb
andb
adc
imul
loope
std
in
int3
mov
cmp
fistps
fildl
stos
mov
xchg
jae
clc
andb
lea
enter
and
mov
in
xchg
pushf
adcb
pop
push
shll
loope
addr16
add
lret
mov
and
push
test
mov
je
shrl
fs
xorb
pop
gs
pop
add
or
push
pusha
pop
mov
outsb
jle
jmp
and
jnp
gs
cs
sbb
add
pop
inc
test
xor
pop
fisubs
es
movsb
xchg
push
xchg
mov
mov
sbb
pushf
and
movsl
aas
je
movsl
pop
and
lods
icebp
lea
call
adc
push
sbb
or
repnz
jmp
pusha
in
out
push
sub
daa
jp
dec
fucom
ret
lods
inc
pop
xor
aaa
pushf
push
push
xchg
imul
dec
outsl
add
xchg
stos
dec
hlt
mov
stos
in
inc
push
fst
es
push
mov
jg
hlt
or
add
xor
cmpsl
loop
mov
aad
sbbl
or
fbld
sahf
std
jb
sbb
push
inc
in
adc
push
jbe
inc
in
pusha
test
mov
xorl
fs
push
call
adc
adc
xchg
and
pushf
inc
push
cmp
jle
sahf
out
in
or
mov
clc
fcoms
ja
adc
rolb
jae
sub
movsb
mov
pop
dec
cmpsb
pop
mov
or
mov
jmp
pop
shlb
sbb
and
adc
mov
cli
adc
inc
movsb
pop
xchg
jb
jecxz
psllq
dec
lahf
xchg
and
bound
std
mov
push
jg
fcompl
jmp
and
add
cs
add
jmp
add
repz
xlat
fs
jae
pop
in
imul
jp
push
test
inc
cmpsl
stos
leave
popf
push
scas
inc
js
je
rorl
push
lds
outsl
subb
pushf
adc
cmc
fisttpll
insw
aaa
pop
int3
xchg
xchg
call
sbb
mov
cltd
fstpt
mov
clc
inc
mov
pop
push
jmp
xor
and
xchg
ds
push
js
pusha
out
cmpsb
sbb
mov
push
test
xor
rorb
mov
xchg
and
cwtl
aad
repz
int3
lock
mov
jecxz
lods
mov
and
inc
fldenv
or
ss
lods
xchg
loop
leave
enter
pop
jo
arpl
sub
gs
pop
sub
or
xchg
das
push
push
insb
mov
cmp
pop
push
push
loope
idivb
ss
jo
fwait
and
cmp
lret
sub
dec
pop
repz
into
and
cmp
mov
fbstp
push
xor
jnp
cmp
icebp
inc
ret
inc
fucomp
inc
jecxz
in
inc
in
cld
fsubrl
mov
enter
or
and
pop
xlat
repz
xchg
pop
jbe
test
ss
cli
test
dec
gs
pop
mov
inc
jne
cmpb
and
movsl
adc
dec
imul
jno
mov
inc
push
sub
adc
mov
lds
cmp
outsl
or
fnsave
pop
push
and
icebp
dec
movsl
mov
lahf
loop
unpckhps
and
hlt
or
push
add
sub
pop
fnstsw
ret
mov
pop
mov
adc
or
addr16
clc
in
jp
das
cli
inc
mov
vmaxps
mov
inc
ja
jle
cld
cmpb
sarl
dec
add
dec
pushf
aad
dec
imul
or
push
fwait
out
xor
sbb
xchg
sahf
aaa
pop
lret
push
sbb
orl
scas
dec
fsubrs
mov
je
jl
aam
push
jecxz
cmp
movsl
inc
pop
pop
call
push
lcall
push
push
cmp
mov
sub
in
cmp
mov
mov
je
cmpsb
push
inc
push
rolb
cmp
cld
rcrl
jno
repnz
inc
xlat
shll
cmp
or
clc
jb
cmp
or
nop
mov
or
loope
loopne
aaa
add
out
test
inc
dec
enter
loop
out
jl
mov
test
pop
arpl
lret
mov
loope
inc
call
ja
push
es
cmp
jbe
mull
mov
push
xor
addl
lods
insb
ficomps
jnp
stos
jmp
pop
rolb
push
lcall
in
mov
inc
cmc
cmp
xor
add
mov
imul
cmp
push
leave
and
push
add
xor
jmp
fcomps
lds
jmp
or
mov
int
in
cli
sti
push
aaa
lret
hlt
arpl
xchg
sub
ja
lock
int3
mov
imul
movsl
or
stos
mov
jecxz
mov
iret
data16
jns
fsubrp
ficompl
mov
inc
call
repnz
nop
xor
lods
mov
xchg
sbb
push
inc
sub
add
addr16
mov
jns
es
pop
iret
cmp
daa
outsb
jg
cmpsl
push
aaa
xchg
mov
xor
andb
into
cmc
cmp
out
cmp
xor
adc
inc
ja
pusha
fildl
icebp
push
mov
xchg
sarl
jnp
rcrb
mov
sub
dec
add
lahf
xlat
sub
adc
sbb
fistpll
push
jb
mov
mov
pop
out
addr16
sbb
and
xchg
add
test
sbb
lea
dec
pop
repnz
sbb
adc
in
sub
mov
and
sbb
jmp
push
adc
stc
sbb
add
shlb
push
mov
imul
fnsave
inc
fcmovnb
jge
fldenv
out
dec
adc
lods
mov
add
sahf
add
xchg
call
cld
out
mov
xchg
xchg
push
mov
adc
or
arpl
or
sub
xchg
dec
mull
rolb
adc
sub
mov
pop
lock
pop
mov
pop
scas
adc
test
and
pop
adc
cmp
pop
xor
jge
adc
mov
pop
call
or
dec
xchg
pop
in
or
sahf
pop
xchg
sti
mov
pop
jbe
jbe
pop
push
iret
fistpl
rorl
jl
xchg
sub
cmp
stos
push
xchg
dec
jecxz
xchg
in
ret
push
enter
jecxz
inc
rorb
outsb
or
dec
aad
ret
dec
jmp
outsb
call
aad
pop
nop
lahf
addr16
sti
cmp
and
out
das
mov
mov
cmpsl
sbb
es
lea
mov
mov
push
fldl
mov
and
xchg
jbe
popf
stc
pop
xor
xor
pop
movsb
inc
push
dec
fwait
or
es
icebp
and
xlat
xor
and
test
cld
add
cmpsl
xor
cli
rorl
push
rcrl
jmp
out
adc
sub
test
adc
pop
pop
jg
cmp
jge
faddl
fcoms
push
sub
insb
sub
adc
xor
outsb
add
aaa
data16
enter
cmp
xchg
outsl
incb
out
inc
inc
and
push
into
enter
pop
mov
fcmovnu
mov
iret
jmp
xchg
in
lock
cmp
xor
sub
test
adc
dec
jecxz
fs
aad
push
xlat
out
sbb
mov
stc
lret
push
test
xchg
inc
fcmovb
and
dec
subb
insl
push
and
xchg
pusha
xor
adc
lods
inc
repz
pop
popa
sub
jecxz
stos
sub
mov
jnp
test
mov
dec
dec
cmp
lods
and
sti
andl
push
movsl
cs
pop
dec
inc
inc
xchg
jl
jg
aaa
int
out
lods
fwait
cmp
xchg
mov
out
int
jecxz
gs
lcall
cmpsl
cmpsl
notb
xor
jno
jne
or
xor
les
sbb
rcr
in
or
add
pop
repnz
incl
out
jle
je
dec
jno
dec
pop
stos
inc
mov
xlat
insl
xchg
das
enter
hlt
mov
jg
jmp
xchg
sub
and
inc
aas
and
jle
cmp
aaa
cmpb
cmp
sahf
xchg
test
push
insb
mov
cmc
sub
and
fs
pushf
fisubrs
pusha
subb
cli
pop
add
mov
pop
xchg
loop
mov
out
adc
ret
scas
clc
sti
dec
dec
loop
insl
xchg
pusha
fnstsw
lods
cli
sub
fbstp
rol
sub
pop
push
nop
aam
fsubrl
jle
adc
in
clc
push
adc
cmpsb
dec
lock
pusha
and
insl
mov
sub
push
lods
or
cmp
movsl
dec
and
pop
stc
incb
sub
push
and
cmp
adc
sbb
mov
mov
and
test
and
mov
mov
test
pop
repnz
int
sbb
mov
pop
rcl
mov
loope
ja
imul
dec
arpl
jge
fisubl
fldl
out
inc
dec
xchg
dec
push
popf
andb
cmp
or
mov
sti
xchg
jmp
or
cmc
std
pop
push
push
dec
push
pop
lock
sbb
cltd
popa
jg
das
cmp
xchg
sub
insb
cld
lret
fstp
lea
into
sbb
mov
ret
fists
sub
sub
dec
add
cmp
shl
outsb
negl
sub
or
in
pop
sahf
repnz
jle
mov
popa
stc
mov
mov
mov
sbbl
or
insb
icebp
mov
dec
mov
ret
mov
in
es
cmp
fs
ss
push
or
push
insl
pop
cmp
mov
jmp
jb
jmp
orb
cli
inc
dec
adc
pop
hlt
and
scas
xlat
inc
dec
mov
es
cltd
push
in
lret
cmp
mov
cmp
ret
js
push
cmpl
xor
mov
data16
loopne
inc
jmp
cld
stos
flds
stc
adc
fwait
daa
mov
push
mov
push
lock
outsl
punpckhdq
jb
mov
jmp
push
pop
and
mov
sub
cs
mov
jg
cld
lods
xchg
cmc
mov
or
or
pop
mov
push
cmp
mov
mov
jnp
sub
into
stos
repnz
int3
into
stos
push
sbb
fisubl
mov
repnz
and
push
jmp
pop
mov
in
xchg
xor
inc
push
jg
lea
in
pop
fmuls
and
ret
rcrb
cli
jp
in
jl
dec
push
mov
icebp
cmp
xlat
and
jno
mov
scas
jb
sub
rclb
ljmp
sbb
cmp
mov
jne
repz
mov
pop
mov
and
orps
stc
or
dec
lods
xchg
push
pop
lods
or
adc
or
cmpsl
shrl
lahf
orl
pop
jmp
mov
pop
aaa
dec
mov
adc
fdivs
xchg
pop
gs
sub
flds
cmp
xchg
xchg
cs
test
lahf
jno
lret
xlat
push
xchg
or
mov
jne
sub
cmp
lods
mov
das
cli
xor
pop
gs
rclb
aad
adcb
popa
pop
lret
mov
idivb
inc
arpl
push
inc
popf
or
movsl
fs
inc
xlat
push
aas
inc
fcoml
fldt
clc
arpl
sub
std
pop
lret
adcl
push
mov
lock
mov
jnp
adc
add
rcll
imul
hlt
xor
adc
clc
fidivrs
lods
sub
jg
sbb
ret
xor
xchg
xor
addl
insl
es
stc
inc
sti
std
je
sub
push
cmc
xor
jge
lods
call
out
sub
dec
pop
xor
aas
outsb
mov
xchg
cli
and
mov
rorl
mov
cmp
or
lock
out
repnz
lcall
sub
lahf
aam
mov
add
lods
cmp
cmpsl
fisttpll
gs
inc
cmp
fnstcw
push
sbb
stc
scas
adc
movsb
pop
xor
cli
cltd
adc
adc
lahf
andb
hlt
mov
xor
add
test
mov
fwait
pop
in
or
jae
inc
test
xchg
in
jne
shlb
insb
pop
add
pop
mov
jecxz
mov
inc
or
cmp
or
dec
jo
movups
fisubs
sub
sti
mov
push
stos
inc
mov
sub
mull
ficoms
push
lret
fbstp
in
push
scas
inc
test
ss
popa
push
mov
sub
mov
xor
in
testb
sbb
outsb
movsb
out
pop
xor
adc
mov
xchg
add
jmp
and
adc
mov
jbe
movsl
addr16
inc
lahf
adc
popf
push
mov
xor
test
xchg
idivb
push
insb
movsb
cltd
jle
mov
rcrb
adc
sbb
icebp
and
inc
scas
call
lock
mov
aad
add
cli
lods
sbbl
cwtl
pop
out
jp
cwtl
test
roll
inc
loop
pop
inc
in
mov
lret
xchg
cmpl
dec
mov
imul
rorl
out
add
ja
test
inc
lea
cld
test
dec
fistpll
mov
inc
pop
js
shr
enter
in
mov
push
xchg
fisubrl
push
daa
lret
lods
ret
pop
sub
sarb
outsl
mov
int
mov
loope
sbb
cmpsl
ret
cmpsb
movsl
cmp
sbb
xchg
push
mov
sahf
bound
mov
push
pop
lea
inc
mov
stc
xchg
dec
sbb
insl
sub
push
int
mov
lock
or
dec
sbb
iret
fadd
test
inc
mov
jbe
out
lcall
test
ret
into
lahf
jns
adcb
lcall
push
xchg
orl
xlat
imulb
sub
sbb
out
sub
jle
pop
push
stos
pop
rolb
push
mov
jbe
rclb
sub
mov
sbb
outsl
pop
pop
inc
inc
enter
and
dec
push
sahf
inc
fsubr
mov
xchg
movsl
or
xor
lret
push
fisubrl
add
cmc
arpl
push
test
iret
mov
pop
jmp
or
jle
stos
das
movb
dec
pop
mov
pop
outsb
push
notb
jnp
inc
fists
dec
movlps
lods
push
mov
pop
lea
mov
pushl
or
inc
add
cmp
cmp
je
mov
mov
pop
pushf
jo
ja
sub
mov
stc
adc
outsb
sbb
mov
shll
xchg
movsl
test
xlat
nop
sub
out
mov
jbe
inc
cmpsb
sub
icebp
adc
fs
jae
imul
out
jmp
outsb
push
call
cmpl
cmp
outsb
lea
sbb
xor
mov
xor
and
pop
mov
xchg
xor
enter
lahf
testb
data16
imul
fcoml
mov
and
fs
cltd
xor
into
adc
es
clc
adc
pop
lods
xchg
and
push
testb
insw
jge
inc
jecxz
dec
in
scas
loop
adc
jmp
orb
dec
push
push
enter
idiv
xchg
mov
in
std
and
std
xchg
mov
daa
pop
mov
mov
push
popa
clc
test
mov
lock
lds
jg
mov
or
xchg
icebp
xchg
cmpb
lds
cmp
cli
les
rclb
pop
inc
lahf
gs
ficomps
mov
aas
in
repz
push
mov
out
movsb
jmp
adc
arpl
xchg
mov
scas
jp
cmp
pop
sti
rclb
lcall
inc
and
sbb
pushl
jo
push
mov
outsb
in
adc
mov
dec
daa
test
pop
push
ds
imul
sub
mov
rcl
xlat
pop
fnstcw
gs
xchg
xchg
bnd
loope
mov
or
mov
cld
push
fisubrs
jecxz
mov
sbb
inc
fs
fnsave
inc
mov
test
pop
stc
nop
negb
cmpsl
mov
dec
mov
mov
xadd
mov
xor
insb
and
mov
xchg
inc
roll
addr16
call
leave
sarl
addr16
pxor
pop
mov
jne
jns
ret
orl
push
and
push
cli
outsl
jns
jbe
push
inc
pop
rcrb
add
cmp
in
and
jg
mov
xchg
mov
push
and
lds
jp
xchg
ret
jbe
testb
addr16
fiadds
cld
mov
pusha
test
cmp
lcall
xchg
test
sbb
or
sarb
sbb
jo
faddp
jp
pop
xchg
in
js
cmp
mov
bound
sbb
mov
shl
addr16
imul
fisubl
dec
xor
call
popa
mov
in
inc
and
scas
jae
pop
jnp
data16
add
in
movsb
jbe
pop
test
push
inc
xchg
hlt
xchg
and
sub
call
add
adc
test
daa
je
or
repz
pop
test
xchg
pop
loop
jl
lods
sbb
mov
leave
out
pushl
sbb
mov
cmpsb
test
xchg
lods
jl
subb
or
push
std
cwtl
data16
sbb
gs
stc
mov
adc
ds
add
enter
movsl
xchg
push
inc
popl
jle
xchg
push
add
mov
movsl
stos
sub
pop
adc
in
lea
scas
scas
inc
arpl
js
mov
pop
xor
pop
iret
jp
push
nop
fcompl
push
cmp
decl
leave
scas
jae
mov
test
inc
xor
ror
push
mov
outsl
and
jo
pop
jb
sbb
xor
inc
inc
lret
std
xlat
ds
dec
out
pop
pop
repnz
xchg
jns
bound
shlb
inc
ljmp
popl
out
imul
mov
push
mov
sar
xchg
fwait
stos
mov
sub
faddl
movl
pusha
pusha
ds
fs
jmp
je
and
aas
jle
adc
push
push
xor
pop
add
xor
push
push
pop
gs
mov
xor
insb
lret
xchg
stos
cmp
adc
cmp
xchg
push
test
sbb
jg
jns
pcmpeqb
add
ds
jno
and
nop
daa
in
test
dec
shrl
mov
push
add
cmp
xor
jo
arpl
shrb
cmpsl
pop
push
push
cmp
rcrb
jge
jl
repnz
es
xchg
jmp
imul
ja
xlat
insl
xor
fldcw
lds
push
and
mov
push
mov
push
adc
jb
xlat
fsubrp
add
stc
test
mov
rolb
in
loop
cwtl
daa
adc
frstor
test
mov
mov
test
push
push
popf
push
rol
popa
lea
adc
xor
insb
lret
mov
mov
xor
cld
jmp
fmuls
push
rcr
inc
fcoml
mov
push
loope
pushf
mov
ret
fmull
in
addr16
jne
lods
sub
pop
adc
pop
xchg
das
sbb
mov
scas
sbb
loop
jg
mov
mov
add
jp
mov
and
pop
repz
test
das
inc
jns
mov
fldcw
je
xchg
sbbb
pop
cwtl
ss
and
xchg
loop
inc
or
aas
mov
loopne
clc
and
movsb
add
cltd
movsl
sbbb
nop
punpcklbw
cmc
push
jns
jmp
pop
jb
jp
sbb
jbe
les
insl
and
pop
es
addr16
mov
in
cmpb
movsb
jl
dec
xorl
add
xchg
je
lret
xor
add
sub
pop
xor
stc
lea
inc
fnstsw
ljmp
xchg
test
andb
jnp
iret
das
cmpsl
lret
push
pop
push
inc
stc
jo
shl
cmp
push
stos
ljmp
fs
adc
ret
adc
push
imul
mov
pop
sti
sysexit
fildl
dec
dec
push
ljmp
fidivrl
pusha
sbb
xchg
push
lcall
fists
mov
push
rcrb
pusha
mov
out
sub
imul
mov
inc
sub
push
mov
mov
inc
dec
sub
mov
js
dec
popf
pop
xchg
stc
lret
or
fwait
lods
out
pop
out
ljmp
fistl
es
pop
test
fisubrs
pop
dec
mov
negl
bound
jge
sub
push
jnp
dec
cmc
scas
dec
lea
in
adc
sbb
adc
jle
pop
jmp
imul
push
xor
loop
cltd
fdivp
xchg
or
push
mov
dec
fnstsw
cwtl
repnz
nop
sbb
int3
add
dec
xor
sub
xor
jae
xchg
and
ret
pop
jns
out
je
jp
xlat
shll
adc
jne
pushf
mov
adc
cwtl
mov
dec
xor
in
inc
cmp
aas
mov
inc
les
test
loope
push
imul
daa
addr16
dec
inc
mov
rol
pop
or
xchg
nop
pop
imul
xchg
mov
jo
mov
fidivs
add
pushf
push
cltd
xor
loopw
icebp
call
cmp
std
pop
xor
xchg
in
dec
mov
mov
jge
jb
insb
lret
test
in
and
dec
lods
je
shr
pop
lcall
paddd
and
movsb
mov
in
push
movsl
add
pop
xchg
ret
enter
cmpsl
mov
push
pop
mov
rorl
or
es
repz
jnp
sbb
mov
stos
sub
push
cmpsl
adc
sbb
insl
cmp
adc
out
xchg
aad
cmp
outsb
cmc
inc
stos
push
xchg
and
jge
cmpsb
pop
sub
addl
or
cld
cmp
stos
decl
shl
ds
pop
dec
sbb
cltd
inc
testl
cld
cmc
adc
mov
jbe
adc
pushf
jae
mov
out
ret
mov
fistpll
loopne
cmp
sarl
mov
push
push
cmc
push
fidivl
iret
stc
js
inc
shrb
fs
pop
imul
xchg
mov
cwtl
mov
adc
aad
xchg
scas
cmc
in
inc
push
inc
into
addl
subl
addr16
cli
ljmp
in
sub
lret
lcall
mov
pop
xchg
dec
or
ds
sub
jl
ss
andb
mov
inc
dec
data16
lcallw
mov
shlb
or
shl
add
test
cli
out
push
mov
bound
cld
shl
fs
pop
orb
mov
pop
push
stos
or
xlat
mov
xchg
xor
mov
sbb
xchg
repz
sbb
xor
jo
subl
cmc
or
daa
std
cmpsb
jg,pt
loop
xchg
sahf
pop
out
out
insl
fdivs
das
jbe
stos
xchg
jmp
sbb
jle
sbb
outsb
mov
inc
pop
or
shl
sti
sbb
xor
out
push
cmp
out
stos
fdivrl
mov
jbe
pop
repz
sub
and
call
push
and
nop
outsl
leave
xchg
mov
lea
clc
xor
cmpsb
addr16
xlat
mov
push
xlat
push
fsub
stos
lea
xor
mov
and
mov
sbb
sub
dec
cmp
rcrl
sub
fnstenv
jbe
xchg
js
gs
out
negb
adc
nop
jnp
mov
outsb
int3
stos
in
push
daa
clc
sarl
sub
mov
lcall
rol
test
ret
xor
inc
push
cld
mov
jle
fsubs
add
ret
cli
mov
dec
adcl
loope
cmpsl
adc
xchg
add
ja
push
test
mov
xchg
adc
adc
sti
fwait
ja
movsl
xor
push
xchg
das
test
call
mov
pop
out
je
cli
lcall
push
mov
sti
or
sub
int
push
ds
aaa
lds
notb
lahf
in
sub
push
leave
testb
ljmp
movsb
movsb
jmp
adc
cs
testl
outsb
gs
push
sub
pop
and
push
xchg
xchg
or
loopne
pushf
dec
fnstsw
or
jns
add
flds
jp
sub
ljmp
mov
inc
mov
cli
pop
ss
sbb
shll
jp
sub
mov
data16
stos
dec
call
mov
call
pushf
mov
fsubr
sbb
xor
test
or
lcall
pop
test
daa
cmp
cltd
popa
jnp
push
adc
xchg
cwtl
das
mull
pusha
inc
and
push
scas
scas
jb
lahf
fnsave
mov
xchg
pop
lret
jp
jb
mov
mov
int
xor
hlt
cmp
cld
orb
test
jnp
loope
inc
lea
inc
jp
mov
xlat
push
sbb
sahf
push
mov
or
icebp
call
shr
fwait
and
mov
mov
cmp
testb
mov
mul
and
push
or
mov
loopne
push
lahf
mov
sti
inc
das
pop
dec
std
scas
mov
in
jno
or
xor
mov
jecxz
loope
mov
cltd
xor
scas
mov
add
es
push
lods
shl
negl
ret
into
sbb
enter
mov
or
ffree
adc
inc
sbb
inc
scas
cmc
ss
sbb
add
push
mov
jecxz
arpl
ss
pop
test
ret
mov
mov
sbbl
dec
or
ret
popa
push
push
ret
fwait
jae
sbb
jle
fistpll
jnp
call
mov
fbstp
lods
iret
mov
mov
lcall
or
flds
imul
cwtl
or
cltd
mov
and
xchg
inc
dec
jbe
push
xchg
pop
jmp
jge
push
sarl
sub
jp
imul
jle
add
mov
xchg
cmp
mov
subb
in
fs
loope
inc
lock
lea
rcrb
xor
or
inc
imulb
mov
std
mov
xor
cltd
leave
and
push
cmpsl
xchg
loop
addr16
fstl
in
jb
andl
or
rol
popf
sbb
or
dec
in
mov
movsb
cmp
sub
insl
popa
inc
fnop
or
pusha
ss
adc
lcall
xor
pop
fxch
adc
fnstenv
icebp
add
pop
orl
pop
lods
jo
or
les
sti
mov
pusha
addr16
push
pop
pop
mov
testl
call
aaa
mov
cli
push
dec
mov
dec
loope
sbb
aam
outsl
push
insl
mov
mov
je
lods
lcall
mov
cmpsl
mov
in
test
bound
cmp
lods
mov
fsub
int
xchg
sbb
insb
mov
jle
and
fs
std
int3
mov
dec
in
jmp
pop
loop
push
xor
clc
jp
pop
roll
sbb
sub
clc
pop
dec
ss
xchg
jno
and
idiv
lods
cli
outsb
add
add
sbb
pop
lcall
fsubrl
pop
jle
xchg
nop
push
stos
dec
mov
push
lcall
and
les
and
aad
mov
daa
orl
jp
ja
push
test
push
inc
repnz
inc
cld
fidivrl
daa
fcomi
push
call
and
inc
fildl
push
enter
xlat
outsb
out
das
pop
mov
stos
call
push
js
xor
mov
fstpt
arpl
fwait
and
loope
jnp
cld
repnz
sbb
or
data16
imul
xchg
addl
test
int3
enter
decb
xchg
add
sub
leave
pusha
push
or
or
insl
xchg
cmpsl
sahf
pop
shrl
loopne
sub
adc
jl
dec
ss
cs
jbe
xchg
test
aam
cld
dec
cmp
fstpl
jb
fwait
xchg
inc
push
cmp
jbe
aam
fsts
push
mov
and
bound
inc
sarb
jecxz
and
xor
sarl
jp
js
mov
loopne
mov
dec
stos
xlat
jg
mov
xchg
arpl
test
clc
rol
inc
sub
sbb
mov
test
xchg
adc
xchg
arpl
xchg
lods
in
or
push
inc
cmp
shrb
dec
push
faddp
pushf
int
test
mov
fdivl
xchg
repnz
dec
in
fwait
ds
adc
pop
lret
adc
cmc
xor
stos
repz
mov
rcr
icebp
pop
adc
in
cltd
jp
mov
push
jo
xor
and
jmp
sahf
jl
pop
jae
jno
addr16
dec
flds
mov
jne
push
xor
pop
outsb
lock
fldt
ds
hlt
pop
negb
fiadds
jge
inc
movsb
xchg
popa
aas
inc
aad
loope
outsb
shl
ret
sub
xor
dec
lds
cmp
insl
pusha
lods
int3
xchg
dec
push
shlb
xchg
movsl
rol
mov
roll
cmp
lods
movsb
jge
mov
lock
jp
cmp
add
sbb
cmp
xchg
and
dec
rorb
jle
aam
adc
mov
jle
push
mov
out
stos
aas
sbb
or
aad
xchg
add
sbb
jecxz
test
add
imul
dec
push
push
push
jo
gs
aas
gs
cmp
pop
mov
ret
cmp
sti
bound
xchg
cmp
adc
push
mov
sbb
aas
movsl
xchg
mov
push
sbb
push
xchg
frstor
jecxz
mov
xor
push
fisubl
ret
fildll
loopne
inc
adc
stos
mov
and
popa
sahf
pop
sahf
iret
sbbb
pushf
outsl
mov
sub
shrb
or
sbb
sub
mov
jl
fstpt
fisubs
inc
xchg
mov
insb
in
jg
jne
push
xor
ja
sub
xor
mov
push
loop
sbb
ret
and
cmpsl
test
push
and
xorl
out
push
popf
push
lock
int
outsl
daa
xor
notb
movsb
push
xlat
outsb
xchg
cmc
mov
test
lcall
inc
jp
in
mov
shlb
pop
mov
and
loop
out
testb
dec
dec
lock
mov
pop
mov
adc
push
sub
inc
fimuls
push
fstpl
mov
addl
sbb
push
fcomip
jne
sbb
push
inc
xchg
push
out
pop
jecxz
fs
in
pop
jg
cwtl
das
inc
subb
stos
pop
dec
cmp
jae
stos
dec
mov
out
cmp
aaa
mov
push
sbb
mov
lahf
mov
ret
ja
dec
pop
xchg
dec
mov
mov
pop
push
imul
adc
fiaddl
pslld
mov
push
fbld
outsb
iret
pop
scas
or
mov
cmp
and
push
mov
cmpsb
hlt
jle
sub
pushf
pop
cli
jmp
jl
cmc
cmp
xor
fcompl
add
mov
inc
pusha
sbb
push
loop
xor
push
jmp
mov
movsb
jl
add
cmc
cltd
ds
push
mov
icebp
scas
scas
xchg
jecxz
shrb
cs
in
fcoml
sub
lock
in
jg
mov
ss
inc
pushf
cli
pusha
test
lea
out
push
movsl
ljmp
inc
aam
add
push
testb
hlt
adc
iret
add
je
or
rorl
mov
xchg
sti
xchg
dec
adc
out
push
movsl
je
mov
mov
fwait
push
xor
and
arpl
mov
hlt
sbb
cmp
lods
xchg
outsl
int
sbb
push
insb
fisttpll
fstl
push
dec
inc
arpl
mov
inc
stc
sbb
xor
jmp
cli
add
hlt
aad
out
fcomi
incl
stos
add
xchg
repz
mov
fs
mov
mov
test
nop
loope
sbb
and
push
sub
mov
enter
inc
repnz
mov
ljmp
in
mov
inc
test
jg
push
dec
filds
faddl
mov
mov
leave
repnz
pop
cld
push
es
xor
popf
in
adc
push
xchg
sub
inc
xlat
int3
int
dec
sbb
and
xor
xlat
nop
sbb
mov
imul
call
push
dec
jno
cmp
pop
mov
mov
xor
push
mov
popl
inc
jp
ds
add
ficoml
mov
subb
or
icebp
sbb
add
cld
pop
mov
add
mov
xor
pop
pop
aas
or
push
pop
adc
das
subb
lret
xchg
outsb
sub
push
cmp
data16
fcoms
dec
and
stos
add
xchg
fs
lcall
popa
or
push
rolb
inc
push
test
enter
in
addr16
mov
sbb
or
add
ja
push
outsl
push
and
push
rcr
fsubs
in
repnz
jmp
cld
je
push
mov
inc
mov
cmpb
sbb
mov
fldt
jecxz
lods
or
addb
xor
jmp
sub
pop
out
cmp
inc
jno
jp
push
test
pop
sbb
gs
popa
aas
mov
imul
inc
sti
mov
and
bound
add
jle
ljmp
dec
in
mov
sahf
or
movsb
cmpb
push
sub
aaa
jae
cmp
and
mov
fsubl
iret
stos
and
xorl
iret
xchg
jns
test
sub
icebp
stos
fwait
xor
lcall
pop
clc
adc
or
dec
push
mov
sbb
mov
nop
daa
int
push
outsl
cltd
mov
dec
pop
mov
mov
inc
mov
out
les
lods
imul
ljmp
fildll
enter
jmp
mov
stc
scas
xchg
gs
dec
xchg
cmp
sbb
stos
mov
lea
mov
and
add
gs
mov
lods
sub
mov
fnstsw
pop
bound
xchg
imul
fidivrs
xchg
xchg
cmpb
mov
in
in
mov
repnz
lds
hlt
movsb
aaa
mov
dec
cltd
stc
xchg
cmp
push
and
ret
cs
mov
aaa
adc
jmp
mov
lcall
cltd
frstor
mov
loop
mov
cmp
sbb
das
js
and
in
int
adcb
push
es
pushl
imul
lock
xchg
and
stc
mov
fisubs
lahf
mov
add
or
jb
cmpsb
test
pop
inc
stc
and
insb
test
fldl
pop
mov
push
xchg
sub
xor
fs
jb
sub
mov
pop
xor
cmp
clc
mov
aas
jmp
leave
and
adc
cmpsl
inc
aam
lock
mov
pushf
test
add
adc
mov
mov
dec
xchg
cmp
mov
sti
push
fucomp
test
cwtl
out
inc
fcmovb
xlat
sbb
cmp
repnz
add
out
or
push
cli
lret
popa
ret
push
das
hlt
xchg
test
lcall
adc
cmc
es
push
sbb
fdivrp
mov
test
or
sbb
shrb
test
ja
pop
in
lea
sbb
xor
mov
sbb
mov
mov
out
mov
mov
and
push
out
xor
jo
lds
cmpsb
adc
mov
pop
out
idivb
sub
outsl
aad
dec
pop
ljmp
inc
cwtl
js
mov
js
adc
hlt
mov
or
hlt
fwait
push
adc
or
fs
pop
outsl
jl
mov
fldenv
pusha
dec
mov
cmc
mov
lcall
imul
lret
pop
inc
jge
je
pop
outsl
inc
fwait
stc
stc
pop
push
jl
pop
cli
xchg
push
cli
addr16
xor
cs
mov
loopne
sbb
mov
jbe
and
into
movsl
loop
and
fwait
xor
and
cmpsl
data16
int
cli
popa
mov
cmpsb
es
mov
jl
sub
movsb
mov
push
stos
xchg
std
into
mov
jmp
dec
icebp
mov
xchg
dec
lcall
repz
popf
stos
pop
adc
popf
stc
bound
mov
add
add
jo
addl
add
nop
pcmpgtw
out
test
in
mov
das
or
loope
int3
loop
add
aad
daa
jne
jg
inc
lods
mov
or
sahf
lods
mov
push
mov
mov
lcall
jb
mov
jo
aad
scas
push
int3
stc
xor
cmpsb
test
push
pushf
stos
incb
pop
add
mov
divb
clc
rclb
push
test
divb
sbb
test
pop
push
jle
xor
inc
or
add
pop
pusha
shr
jg
sbb
push
sbb
pop
adc
dec
dec
lahf
ss
data16
pop
scas
mov
repnz
stos
add
mov
movsb
mov
mov
mov
push
clc
mov
stc
test
cmpl
push
push
xchg
adc
imul
mov
cwtl
cmp
popa
xor
dec
jl
insb
scas
imul
lock
test
stos
rcll
xchg
push
jbe
leave
fs
leave
push
js
lahf
lcall
and
push
lret
or
xchg
idiv
vpminub
sbb
sub
mov
lcall
lahf
inc
cmp
into
jle
popa
add
mov
bound
stos
xchg
xor
jbe
aad
aam
in
inc
js
in
imul
push
or
jb
and
cmp
jne
dec
sub
inc
pop
mov
push
adc
pop
ja
in
sub
in
sbb
les
lock
add
push
dec
jecxz
cmpsb
pop
jae
mov
add
cmp
xabort
jge
adc
sbb
adc
cmc
stos
jle
pop
sbb
and
dec
and
cmp
rol
in
inc
or
or
xchg
sub
out
push
aam
inc
mov
cmp
dec
faddl
pop
mov
fwait
adc
test
sarb
aad
jbe
scas
jb
adc
cmove
add
cmp
mov
mov
mov
cmpb
divl
pusha
sbb
mov
fistpl
add
or
ficoml
in
pop
test
pop
mov
and
clc
sub
mov
in
dec
jp
inc
cmp
in
pop
inc
rcl
xchg
mov
mov
arpl
mov
sti
pushf
iret
jp
aam
cmpl
inc
fwait
lods
jbe
leave
fistl
insb
cmp
cmp
mov
leave
xchg
out
mov
adc
xorl
or
mov
mov
sbb
popf
sub
lods
xabort
jno
out
mov
mov
push
mov
jg
mov
xor
addr16
mov
jmp
les
in
aam
pop
mov
cmp
mov
je
lock
push
inc
mov
or
cmp
sti
es
push
fucomp
aad
ja
inc
push
pusha
int
adc
inc
add
cmp
sub
dec
fs
roll
push
sub
inc
xor
int
push
gs
jmp
pop
xchg
pop
stos
lret
jae
sbb
insl
mov
mov
sub
fcomps
inc
jne
cmpsb
ja
addr16
cmp
nop
sbbl
mov
aaa
stc
xchg
aam
xor
mov
or
aas
mov
jge
ljmp
cmp
idivl
pop
jle
mov
repz
jnp
add
filds
mov
xlat
sbb
enter
mov
mov
subb
xchg
repnz
inc
push
movsl
jne
push
sub
shl
ja
mov
movd
sbb
cmpsb
dec
mov
jl
pop
ficomps
sub
lahf
xor
xor
popa
insl
sahf
cwtl
fimull
cld
mov
inc
mov
or
mov
int3
fistpll
mov
and
xor
decl
push
jnp
add
mov
les
xorb
jmp
fdivl
mov
mov
jbe
nop
das
test
pushf
xorb
fisubrs
fiadds
xlat
pushf
lods
ret
mov
jae
clc
orb
jmp
das
pop
fnstcw
icebp
mov
movsb
or
mov
sub
cmp
pop
mov
je
ljmp
sti
fistpl
rol
jmp
or
sbb
sub
frstor
jmp
cmp
push
pop
int
mov
cmp
out
sbb
adc
int
or
add
xor
je
ja
push
cmpsl
fisubs
pop
andb
arpl
mov
test
in
adc
js
pop
stos
enter
inc
sub
sub
adcb
inc
add
jle
push
and
push
in
testb
jae
movsb
cltd
je
int
leave
arpl
cmpsl
inc
imul
fnstsw
push
mov
pop
pop
inc
fisttpl
cmpsb
or
mov
cmp
inc
sub
cmp
jb
jnp
mov
enter
sub
dec
popf
sbb
leave
xor
add
lods
and
jp
in
ljmp
jno
jne
inc
cmpsb
add
pop
cmp
mov
pop
arpl
jecxz
push
in
fisubl
fdiv
scas
loope
cld
xchg
scas
cmp
or
outsl
addl
into
mov
sahf
lods
dec
dec
fisttpl
pop
scas
push
in
xchg
ss
cmp
jecxz
dec
adc
repnz
inc
test
insl
jge
lcall
or
mov
inc
fcomps
or
inc
loopne
jne
push
jle
inc
test
mov
popf
lods
xchg
icebp
mov
lret
imul
jae
mov
lret
jp
xlat
cmp
mov
sbb
push
out
pusha
scas
sarb
lods
pop
negb
push
popf
mov
lret
pusha
jecxz
std
mov
popf
add
cs
jp
pop
ds
mov
or
sar
popf
inc
pusha
sbb
mov
mov
mov
cld
inc
cmpsb
cmp
in
icebp
or
mov
add
sahf
sub
ss
and
sti
inc
popf
mov
inc
enter
push
push
imul
pop
jle
mov
mov
ja
pushf
sub
mov
xor
addl
or
cmpb
scas
mov
fdivp
ja
aam
push
cwtl
out
sbb
pop
ret
das
mov
mov
test
adc
fwait
stc
jo
popa
inc
fwait
lret
cld
xor
xchg
pop
or
adc
fisttpll
test
cmp
inc
dec
dec
out
scas
inc
pop
into
add
loope
fidivrs
pop
inc
int
rorl
lea
add
add
mov
cmc
popa
inc
mov
push
jmp
add
je
pop
jb
aas
jl
xchg
mov
fnstenv
rcll
fistpll
inc
xchg
pop
shld
lods
ds
ss
inc
sahf
sbb
stos
xlat
inc
lret
cmp
pop
repz
cmpsb
push
scas
mov
mov
repnz
mov
idiv
cwtl
pop
inc
sbb
xchg
xchg
or
mov
bnd
mov
or
imul
and
mov
dec
ds
dec
inc
mov
in
loope
daa
xor
nop
aam
cmpl
add
insl
push
adc
dec
pop
xchg
xchg
out
outsl
lods
es
and
dec
xchg
push
repz
dec
push
jmp
pop
push
fistps
cmp
xchg
sbb
xor
mov
fstpt
jge
mov
or
add
ja
fadd
xor
imul
xlat
jecxz
dec
push
inc
mov
jge
lods
adc
sub
scas
outsb
lea
cmpsb
xchg
imul
loop
int3
jmp
lret
movl
cmp
popa
or
fnstcw
pusha
push
mov
je
outsb
imul
push
xor
xchg
scas
xchg
sbb
rorl
test
jecxz
ja
fidivl
shlb
sbbb
fs
cltd
dec
test
jge
xor
iret
cmp
mov
jmp
orl
add
mov
loop
jmp
push
test
lods
cmp
or
daa
insb
sub
pusha
cwtl
adc
cmc
or
xor
xchg
ja
inc
lret
mov
stos
test
int
and
add
cmp
mov
add
out
or
mov
cmpsl
test
notl
xchg
sbb
scas
fdivr
push
push
jb
mov
and
cmp
inc
sbb
cmpsb
loop
mov
lea
nop
into
outsl
gs
xchg
nop
cmp
sbb
sbb
aam
mov
shll
into
cmp
in
mov
shll
imul
sbb
insl
dec
pusha
adc
imul
mov
repnz
pop
mov
aam
ret
pop
lds
push
insb
fistps
pop
mov
dec
jmp
nop
out
xor
sbb
in
mov
cmp
out
push
imul
test
bound
icebp
cmpsb
inc
push
mov
jb
andb
sbb
scas
inc
mov
imul
mov
sahf
mov
sahf
mov
std
pushl
test
cmp
jo
inc
inc
inc
push
push
sub
xor
jge
jbe
ret
call
imull
or
andl
addr16
cmp
clc
popf
je
popa
data16
adc
cld
add
mov
fdivl
fiaddl
cmc
mov
roll
clc
popf
fs
js
jmp
mov
shll
or
adc
out
jb
test
movsb
dec
xchg
sub
add
jo
dec
jle
mov
cli
repnz
adc
ss
sahf
addr16
add
mov
jno
sub
dec
rorb
inc
jp,pt
jno
fcomps
push
jl
add
and
ljmp
test
pop
lahf
mov
dec
mov
out
cltd
or
mov
pop
divb
pop
or
xchg
jge
or
xor
loope
dec
push
lods
int
jbe,pn
insb
test
fldenv
dec
push
test
inc
mov
loop
adc
aad
mov
aad
xor
lcall
mov
dec
sbb
enter
aad
insb
jnp
outsb
cmpsb
int
pop
inc
cmp
pop
cmc
dec
sub
stos
fimull
ja
call
bswap
into
lahf
and
and
pusha
sbb
inc
sbb
out
fiaddl
popf
xor
mov
inc
fcomi
lea
jle
adc
mov
lcall
jns
add
andl
inc
pop
sbb
push
repz
aaa
into
push
outsb
jno
cwtl
test
into
mov
push
sahf
pushf
out
push
and
cld
popf
inc
mov
jo
sub
push
ret
cmp
cmp
repnz
xchg
imul
daa
push
cs
cmc
mov
or
xchg
adc
lds
mov
jb
or
nop
mov
outsb
xlat
jnp
pop
cmp
or
or
mov
mov
popf
sbb
or
pop
xor
push
fnsave
dec
addb
xor
ret
gs
sub
jbe
add
jp
cmpsl
and
push
mov
adc
mov
or
in
inc
in
test
int3
pop
pop
in
pop
sahf
sbb
mov
add
movsl
pushf
cmp
inc
push
xor
aaa
cltd
xor
jge
xor
shr
inc
push
pop
dec
test
sbb
lret
xchg
mov
call
out
fwait
js
and
sbb
jno
or
insl
push
sub
jmp
enter
xor
xor
cli
mov
adc
inc
mov
je
mov
add
repz
cmp
out
loopne
pop
fimull
xchg
jp
xor
cltd
push
lahf
and
inc
jge
fsubrs
push
lock
pop
inc
sahf
mov
jnp
ret
push
push
mov
or
cmp
jno
cmpsl
or
fadds
aas
out
mov
jns
or
dec
dec
je
pop
lods
loop
pusha
adc
cld
jb
sbb
cmp
imul
add
cs
mov
jo
mov
add
iret
dec
cmp
mov
aam
test
xchg
stos
stos
fcmovu
mov
mov
imul
insb
rclb
fmull
jmp
sub
icebp
int3
arpl
pop
out
jne
push
pop
int3
inc
jg
mull
jbe
sbb
dec
jle
mov
pop
sub
repnz
add
jns
nop
dec
andl
mov
hlt
stc
and
xlat
mov
and
add
out
and
pop
shlb
sub
and
icebp
sbb
mov
adc
jns
les
stos
mulb
mov
cmp
cwtl
sbb
cmp
pusha
pop
mov
pop
pop
push
sub
jg
mov
inc
inc
daa
fdivs
subl
jmp
lret
sub
sub
repnz
cmp
das
push
dec
add
and
fsts
leave
add
fldenv
dec
xlat
jns
jp
test
and
dec
cmp
addr16
and
mov
or
push
pop
cs
sti
xchg
das
jbe
rcr
int3
sbb
jl
mov
popf
lcall
inc
in
adc
outsb
push
into
add
test
or
mov
mov
inc
sbb
mov
ja
jns
adc
into
ret
shlb
push
es
push
jb
lret
sbb
and
or
insl
jnp
mov
punpckhwd
jns
jnp
in
icebp
fwait
loopne
lcall
and
lock
fwait
jle
std
pop
push
mov
or
fimull
xchg
adc
xchg
loope
pop
test
flds
call
scas
inc
push
inc
enter
dec
dec
je
jmp
inc
jno
cmp
adc
mov
fisubl
ret
jl
cmp
dec
popa
popa
jmp
inc
mov
push
shlb
mov
enter
pop
adc
push
sbb
push
cli
sbb
inc
daa
sarb
cwtl
mov
add
dec
sbb
shlb
add
push
cmp
jae
jmp
cltd
inc
repz
loop
mov
mov
and
add
sbb
lcall
sub
das
mov
test
cmpsl
cmp
cmpsl
jecxz
cmc
shll
lea
inc
dec
cmp
scas
cltd
addr16
in
fidivs
mov
sarl
pop
in
xor
outsl
imul
mov
lret
in
in
push
outsl
stos
and
les
mov
jecxz
sbb
jg
hlt
push
adc
push
mov
shll
loope
nop
cmp
dec
ss
iret
cli
aas
nop
sbb
pop
jae
jns
mov
jbe
roll
addb
adcb
or
mov
les
mov
push
call
jmp
mov
xchg
mov
adc
pop
ljmp
jno
lahf
xchg
leave
imul
inc
or
fwait
pop
adc
int
push
addr16
sbb
lods
xchg
add
call
pop
dec
scas
pop
pusha
notl
ja
out
in
orl
sub
pop
adc
enter
xor
popf
lods
and
pop
daa
ljmp
insl
sub
push
test
addl
adc
jnp
outsb
rcrb
pop
daa
mov
lret
add
sbb
pop
adc
and
js
mov
push
and
mov
mov
jnp
xor
pusha
mov
xchg
inc
or
fisubl
in
lods
sub
mov
ret
cmpsl
in
sarb
nop
js
adcl
loop
jge
gs
push
jl
cmp
jmp
test
inc
jp
adc
call
call
mov
aad
pop
ret
adc
sub
sahf
or
or
cmp
ret
inc
dec
inc
cmpsb
dec
loopne
pop
push
sarl
rcrb
xchg
dec
lahf
testb
mov
mov
inc
mov
ljmp
cmp
push
lea
outsb
adc
aaa
mov
adc
dec
or
cld
sbb
mov
mov
pop
cwtl
test
addr16
lret
pop
push
stc
push
sahf
sub
lods
jge
xor
imul
movsb
roll
stc
xchg
ror
pop
addr16
pop
mov
rorl
inc
insl
or
sub
or
popa
mov
loopne
pop
mov
lret
push
int3
mov
rclb
shlb
repnz
add
xor
int3
ficomps
adc
arpl
scas
xchg
adc
push
frstor
add
adc
mov
pop
ds
or
adc
dec
mov
stc
scas
inc
cmp
call
lds
cmp
and
testb
out
or
or
cmp
js
xchg
xchg
pop
cwtl
loope
ret
push
add
dec
sub
sahf
loopne
sub
mov
xchg
fs
cmp
aam
outsl
daa
sbb
scas
inc
decl
int
jo
add
xchg
insl
jb
clc
sub
cli
dec
test
push
mov
fcmovnbe
pop
xor
loope
jecxz
mov
test
adc
add
inc
pop
test
stos
fsubs
sti
dec
aad
dec
add
sbb
out
popf
mul
int
mov
cmp
in
ficompl
jae
and
in
stc
inc
xor
jno
push
or
sbb
dec
pop
push
sahf
cmc
mov
call
add
mov
jae
and
cmpsb
adc
xchg
inc
dec
rorb
int3
sbb
jae
shrb
bound
ret
mov
sbb
push
gs
les
xor
sbb
sti
pop
in
jne
pop
cmp
mov
xchg
inc
dec
ror
fsubs
sbb
shr
shrb
and
in
pop
sahf
shlb
dec
dec
arpl
mov
pushf
xor
xlat
fs
lea
cs
frstor
jle
je
sbb
fwait
xchg
lret
push
xor
dec
lea
out
push
adc
cmp
xlat
rcrb
cmp
mov
mov
sti
and
sbb
aad
xchg
arpl
stc
mov
sub
dec
fs
push
add
pop
mov
xchg
jne
shlb
xchg
andl
add
pop
xor
stos
lds
loop
dec
or
adc
push
or
nop
sahf
sti
push
mov
pop
fnstenv
mov
xchg
inc
push
push
add
cmp
sbb
sti
in
fwait
rcll
or
pusha
leave
das
xor
in
pop
icebp
dec
testb
leave
sub
and
lea
pop
mov
xchg
mov
jb
icebp
xchg
xor
pop
inc
inc
lea
mov
dec
mov
mov
cmpsb
sub
scas
inc
adcl
in
add
ffree
fstpt
ss
in
jns
sbb
sbb
jl
loop
jns
cmp
jge
test
pushf
imul
mov
out
inc
xor
xchg
jae
fidivrs
test
mov
xorl
xchg
pop
nop
push
or
out
sti
pusha
ret
aaa
xor
popf
sbb
jge
jge
add
aad
ljmp
or
test
addr16
in
dec
fdivl
test
aaa
xlat
shlb
or
dec
fucomip
das
push
cmp
fldenv
mov
int
imul
aam
mov
push
movsb
ss
sub
test
dec
dec
mov
xor
mov
push
cld
cli
loope
pop
fsubrs
dec
shll
xlat
push
mov
loopne
repz
cmp
pop
cmpsb
sbb
sti
jns
iret
stos
and
mov
cmpsl
scas
cmp
adc
pop
repz
in
mov
and
sbb
xor
mov
imul
fs
and
pop
adc
cmp
adc
es
movsl
test
xchg
stc
xor
xor
loopne
pusha
int3
adc
std
sub
leave
lret
addr16
push
lods
xchg
addb
loope
jle
adc
std
and
pop
add
in
fidivl
loopne
jb
mov
sub
imul
mov
pop
sbb
mov
sbb
push
or
sti
or
popa
add
sbb
sub
push
cld
andb
cmp
xorb
mov
sbb
and
inc
jge
push
aam
xchg
mov
sbb
and
iret
stos
mov
xchg
adc
test
and
iret
int3
loop
xor
call
jmp
and
push
lea
in
mov
lcall
or
pop
imul
sbb
mov
dec
dec
int3
mov
call
cmp
je
mov
sarl
sahf
add
mov
xor
or
in
ret
pop
bound
adc
fnstsw
jns
mov
push
xchg
sahf
jb
jb
xchg
or
mov
jmp
fidivl
into
mov
cmp
mov
push
mov
mov
ljmp
push
or
fs
daa
mov
nop
inc
inc
fdivs
push
adc
stos
fidivl
cmpl
es
sub
adc
cld
or
mov
or
sahf
sub
leave
mov
lret
fisubl
xchg
mov
lcall
xchg
pushf
xor
mov
dec
mov
insl
iret
js
pop
and
shrl
xor
inc
dec
in
add
fcoml
mov
mov
sub
lods
imul
test
adc
jns
cmpl
dec
loope
pushf
xlat
ds
sub
sbb
enter
mov
mov
push
in
xlat
lret
cmpsb
sbb
cmp
ret
mov
mov
adc
inc
push
ret
arpl
cmp
sahf
xor
loop
inc
fnstsw
mov
sub
push
push
jbe
sar
xor
cmp
sbb
addr16
jb
xor
pop
adc
aaa
popf
and
gs
mov
or
scas
inc
aaa
fs
clc
or
sbb
sbb
mov
aad
les
mov
jb
xchg
mov
andb
inc
sub
mov
dec
push
inc
pop
mov
adc
repz
rol
add
enter
push
jle
dec
lea
mov
cld
testb
xchg
jmp
stc
xchg
mov
outsb
mov
imul
jne
cmp
push
sub
insl
imul
hlt
or
lret
lret
and
lods
cmpsb
dec
bound
mov
pop
aad
test
jno
loopne
test
dec
test
jae
push
xor
mov
dec
scas
xor
mov
iret
jne
faddl
fs
rcll
pop
xor
je
subb
adc
xchg
xor
imul
push
mov
jg
jo
inc
rcrl
pop
filds
mov
sbb
and
mov
fmull
lock
sahf
aam
popf
int
push
jne
fxch
or
fcomip
sbb
push
mov
mul
imul
sub
add
and
xchg
dec
hlt
add
int
xchg
out
mov
push
mov
and
or
dec
mov
mov
mov
fwait
mov
jge
std
test
lock
push
int3
icebp
aaa
push
mov
adc
ds
cltd
add
shll
adc
sub
fsubs
enter
mov
push
add
in
icebp
mov
movsb
adc
inc
xchg
sbb
std
add
mov
mov
inc
movsl
cli
push
js
xor
jecxz
incl
xor
dec
aad
fcomps
inc
shll
xor
sbb
jp
mov
sbb
mov
xor
jp
pushf
clc
dec
loop
mov
test
sub
pop
add
mov
repnz
inc
insl
das
inc
pushf
call
xor
lcall
xchg
lods
xchg
popa
add
icebp
xchg
repz
ds
es
and
xchg
cmp
dec
inc
ss
jmp
push
je
rcrb
jbe
testl
cmpsl
pop
xchg
scas
lea
fldenv
push
sbb
xchg
or
xchg
ss
lods
stos
push
mov
or
sbb
jecxz
fldl
popa
xor
dec
mov
les
dec
les
shll
jae
cmp
sub
sub
cmp
cmp
jg
add
xorb
sbb
sti
test
or
push
je
mov
sahf
gs
testb
push
inc
test
xchg
cld
lcall
in
ret
cli
dec
push
sub
out
lods
nop
pop
mov
sub
idiv
or
outsl
push
out
mov
sarl
pop
shll
fwait
xor
adc
test
fisttpl
xlat
cmpsl
push
bswap
inc
mov
scas
gs
jo
das
lock
mov
cld
movsb
inc
jns
cmpsb
std
ret
adc
xor
add
nop
xchg
pop
stc
jne
rclb
mov
cmp
xor
outsl
in
repz
mov
sub
mov
dec
pusha
xor
bound
mov
arpl
xchg
in
jno
lcall
xchg
jbe
adc
repnz
outsb
mov
lret
pop
scas
ja
mov
bound
cli
adc
or
mov
dec
stos
mov
xor
jg
sub
shlb
and
xchg
jae
lahf
mov
or
mov
ljmp
pop
out
mov
stc
lret
and
es
dec
xlat
mov
ret
iret
sub
idiv
mov
sub
add
dec
fisubrs
and
shl
in
mov
sbb
fldcw
and
int
out
cmp
fidivs
adc
pop
ja
mov
mov
decl
xchg
bound
in
outsb
decl
mov
mov
inc
add
mov
cmp
lods
sub
aas
jns
loop
adc
movsl
jbe
mov
std
jo
push
icebp
jle
fucomp
mov
repz
test
call
mov
nop
shrl
stos
inc
and
hlt
mov
push
mov
fadd
xchg
dec
shrb
in
fmulp
inc
adc
inc
inc
and
pop
mov
inc
pop
xlat
xchg
add
popl
mov
pop
xchg
sub
addl
mov
adc
inc
aam
dec
pop
pop
dec
ficompl
cmp
enter
dec
test
xor
and
push
pop
inc
int
repnz
je
sbb
sbb
call
fcomi
dec
les
movsl
xchg
lods
fldcw
mov
std
jmp
sarl
rolb
cmp
ret
ficompl
pop
add
and
lahf
mov
lea
mov
loopne
push
jo
in
call
pop
jae
clc
mov
sahf
mov
adc
shlb
data16
mov
fs
sub
std
push
xchg
ror
repz
dec
loopne
popa
stc
into
sbb
sbb
dec
and
add
iret
ret
psrad
mov
js
sarb
pop
aam
stc
mov
xor
lret
stos
or
push
adc
in
jae
movsb
test
mov
cmp
jle
dec
insb
mov
add
and
pop
imul
cwtl
pushf
ljmp
loop
int
fxch
mov
or
xorl
push
iret
fstps
dec
add
seta
mov
sub
in
jle
loopne
stos
jne
xchg
mov
mov
aaa
or
xor
mov
fsubrl
cmp
jle
mov
std
sub
and
shlb
out
push
testb
enter
nop
out
stos
out
sbb
ds
adc
dec
into
add
icebp
xor
imul
xor
dec
or
aam
daa
enter
dec
mov
mov
rorb
push
cs
inc
cmc
arpl
push
fs
pop
adc
in
xor
push
insl
sbb
in
or
ss
inc
xlat
jae
rorl
ja
insl
jno
out
cmp
or
dec
fadds
aad
sub
call
cmp
pop
cmpl
jmp
adc
or
xlat
not
cli
jmp
mov
rcl
jmp
push
ds
add
xchg
mov
and
jecxz
lods
cmp
jo
fisubrs
xchg
inc
sti
mov
mov
xchg
sub
cs
data16
mov
pop
pop
leave
jae
mov
cs
jp
into
mov
jno
aam
rcrl
dec
outsl
into
xor
pop
cld
pop
push
jnp
cld
outsl
pop
in
test
mov
fscale
pop
loopne
inc
enter
inc
rcrl
sub
add
xlat
mov
in
dec
subb
hlt
sub
mov
and
mov
mov
push
dec
or
in
pop
rcr
decb
cmp
out
mov
jecxz
lods
imul
push
mov
enter
sti
js
pop
outsl
sbb
int
pop
xchg
sub
pop
outsb
insl
stos
xor
ret
mov
jp
stos
sub
push
ds
mov
push
fcompl
out
mov
add
mov
lret
cmp
cld
rcrl
push
inc
fdivl
inc
dec
fdivs
mov
add
sbb
stc
roll
sub
inc
outsl
inc
xor
inc
adc
popf
push
stos
ret
sbb
inc
in
outsl
orl
push
jno
lods
mov
or
xchg
mov
out
push
js
sub
and
test
decl
es
add
mov
gs
mov
xchg
test
jns
xor
push
push
loopne
popa
int3
jbe
test
mov
mov
jb
scas
inc
cmp
mov
bound
mov
add
inc
push
gs
daa
adc
jecxz
leave
ret
lret
xchg
outsb
and
mov
outsl
js
insl
and
and
filds
mov
repnz
ds
or
pop
scas
xchg
int
ret
xor
cmpsl
repz
sub
loope
into
lods
fs
add
push
lcall
or
sub
xchg
sar
jmp
push
dec
lret
inc
out
sub
dec
jecxz
cwtl
stos
and
adc
jmp
jno
fisubrs
xchg
xchg
bnd
push
sub
int3
notl
push
jae,pn
fwait
rclb
push
in
mov
pop
stos
lods
jae
push
lret
nop
sub
and
test
add
sbb
xor
cwtl
inc
insb
adc
cltd
add
scas
sbb
popf
inc
inc
inc
loopne
je
stc
nop
mov
cmp
lahf
adc
inc
push
mov
cmc
xor
or
adc
xor
xor
xor
sub
dec
cmp
icebp
out
xchg
int
mulb
add
inc
scas
jbe
lods
and
dec
cmp
mov
lods
push
mov
push
add
ljmp
in
test
in
jnp
iret
cmp
or
lea
and
adc
leave
rclb
jb
push
pop
ljmp
cmpl
push
testb
notb
fldenv
push
jmp
xor
jo
cs
dec
lds
jg
nop
pop
push
pusha
fistpl
sbb
int
ds
add
insb
adc
or
add
xor
xchg
sarb
and
popf
jo
dec
pushf
in
push
jno
push
adc
mov
and
imul
pop
repnz
daa
jbe
pop
cmc
lds
js
mov
lea
jp
out
xorb
cmp
lds
ja
lret
pushf
addr16
adc
mov
cld
rcrb
jl
int
daa
sbb
outsb
jle
add
mov
ret
pop
fidivs
and
inc
lret
lods
pop
mov
imul
mul
aas
xchg
icebp
iret
test
adc
in
jl
sbb
cmp
shll
cmp
mov
cmpl
popf
repnz
sti
int3
test
out
inc
test
movsb
jbe
cmp
mov
ljmp
stos
xchg
mov
xchg
dec
and
xchg
and
jnp
push
outsl
mov
add
ljmp
xchg
nop
xor
sub
popa
sub
push
loope
dec
xchg
mov
jecxz
iret
hlt
cmpl
sbb
je
mov
test
dec
jl
jl
das
cli
sub
nop
and
pop
gs
pop
xor
data16
mov
mov
mov
shlb
ficompl
mov
push
sti
pop
jp
push
jo
bound
imul
cmp
testl
rcrb
dec
sbb
add
pop
xchg
add
repnz
je
popf
sbb
lods
lods
fs
inc
xchg
aaa
inc
movsb
movb
cmp
inc
adc
add
mov
push
mov
test
mov
dec
ret
ja
pop
jo
cmp
clc
sbbl
cs
repnz
cmp
rcrb
fstpt
mov
and
lds
cwtl
add
cmc
outsl
mov
sbb
shl
cmp
pop
dec
daa
pop
mov
scas
cmp
sarb
ret
mov
mov
and
les
mov
pop
jle
mov
test
in
xorb
movsl
mov
jg
cmpsl
sbb
mov
test
xorl
sahf
jle
mov
int3
test
xchg
pop
movsl
push
iret
mov
jae
mov
std
xchg
xor
insb
out
orl
fldcw
sbb
add
pop
pop
testl
inc
pop
shl
push
sti
pop
ss
adc
lods
dec
jmp
mov
pop
xchg
xchg
dec
pop
mov
cwtl
push
add
sub
fcmove
jl
scas
pop
popf
push
ss
mov
or
push
jnp
push
mov
pop
cmpsl
xchg
outsl
daa
sahf
and
pop
imul
jmp
mov
stc
dec
cs
fwait
ds
gs
inc
in
jge
jp
push
lahf
ret
sub
pop
mov
add
ficoml
icebp
sub
xchg
rclb
lcall
xchg
add
rol
out
xchg
aam
sub
insl
ret
jne
dec
into
pop
jb
ret
mov
addr16
out
adc
aaa
jo
ja
mov
and
sub
pop
mov
mov
mov
fwait
cltd
dec
fmuls
cmp
mov
sbb
xchg
push
pop
stos
mov
push
add
ljmp
nop
mov
fcompl
dec
ljmp
je
bound
cltd
ljmp
in
cmp
sbb
jecxz
pop
jle
jnp
jl
subb
cmp
dec
pop
pop
mov
fwait
mov
cmp
and
or
das
pop
jne
es
in
popf
mov
inc
rcll
mov
jecxz
orb
dec
fs
cmp
rcl
aaa
ljmp
dec
jg
stc
cmpsb
std
mov
mov
ds
mov
lea
in
add
aad
mov
fldenv
or
lea
mov
lret
push
jmp
fsts
aam
fsubl
lahf
inc
fldcw
jg
fsubr
jg
mov
push
in
adc
inc
xchg
mov
enter
in
xor
cs
outsl
gs
sbb
cmp
incb
pop
mov
lea
xor
mov
xchg
adc
xor
ret
nop
loope
ret
movsl
pop
aaa
dec
dec
fcmovnbe
lahf
xlat
xchg
cmp
adc
mov
cmp
aad
pop
xchg
mov
dec
xchg
outsl
push
mov
jae
jl
lret
fnsave
nop
xchg
xchg
idivb
cmp
sbb
out
into
sbb
xlat
adcb
mov
mov
loope
pop
ret
xchg
mov
add
rcrl
xlat
insl
inc
ret
imul
mov
movlps
mov
inc
sbb
test
loop
loope
call
adc
xchg
sub
lock
popf
loopne
xor
ror
push
loope
daa
adc
dec
jecxz
les
xchg
cmpl
add
outsb
mov
xchg
jnp
out
xchg
pop
addb
in
pusha
daa
ret
aaa
loope
fmulp
inc
ds
cs
mov
aaa
out
dec
inc
mov
shlb
cmp
in
dec
loop
mov
imul
adc
addb
adc
and
sbb
mov
jmp
or
cmp
xlat
jns
adc
movl
push
or
jns
mov
and
sbbb
scas
xlat
imul
movsl
lea
loope
iret
pop
xchg
push
mov
or
push
fs
and
xchg
add
and
popa
mov
ss
aas
std
xchg
jno
inc
dec
hlt
mov
rcrl
pop
fcoms
lock
sub
mov
adc
nop
adc
dec
fbstp
jmp
nop
fistps
sbb
push
mov
cmpsb
imul
mov
stos
hlt
adc
vxorps
adc
mov
jl
imul
xor
cmp
rcll
imul
xchg
out
mov
xchg
or
sub
and
cltd
stc
xchg
jnp
scas
ds
enter
push
xlat
mov
xor
xor
or
cmp
lods
nop
lret
cmp
cld
mov
adc
enter
pop
insb
dec
in
aad
fiaddl
test
and
ss
movsb
in
pop
push
or
xor
mov
mov
fnsave
lcall
sbb
xor
add
out
mov
cmp
fisttpll
push
jmp
jp
bound
dec
mov
mov
jae
add
les
pushf
out
xlat
repz
cmc
rclb
in
mov
push
gs
inc
jmp
push
mov
inc
lds
test
mov
nop
adc
dec
out
leave
mov
cmpsb
les
inc
stc
or
fcoms
adc
pop
and
or
adc
xor
cltd
call
mov
and
fistps
fwait
push
xor
sarl
xchg
mov
out
or
imulb
jnp
sti
jmp
mov
lret
ret
add
imul
sub
dec
cmp
hlt
test
setle
mov
xchg
repz
sub
xchg
add
adc
jbe
or
xchg
imul
idivl
scas
jb
mov
mov
inc
cs
push
sub
jne
mov
jecxz
test
fistpl
dec
mov
loope
xor
mov
scas
adc
lock
sbb
enter
insb
cld
or
test
pop
mov
push
xchg
insb
or
rolb
iret
stos
xor
mov
je
sub
mov
inc
dec
jl
cmpb
in
jmp
lock
lret
jns
pop
push
lea
into
in
add
lods
inc
inc
and
xchg
lea
lock
add
sub
mov
mov
jmpw
dec
leave
mov
int
nop
call
mov
pop
cld
fwait
lods
fnstsw
iret
dec
sbb
pop
push
adc
shll
push
add
mov
aad
xor
add
dec
pop
mov
in
add
push
jbe
aad
cli
ljmp
and
dec
mov
enter
inc
outsb
lret
into
inc
out
ficompl
push
push
push
int
jno
loop
daa
lds
xchg
aad
ret
incl
lods
orl
imul
pop
sub
mov
and
fldl
daa
movsb
leave
xchg
scas
rcl
aad
dec
out
idivl
scas
dec
pop
lock
test
pop
mov
pop
cmp
xlat
pop
xchg
jno
adc
scas
icebp
adc
add
cld
and
pop
xchg
jne
dec
and
xchg
cmp
and
push
xor
int3
push
inc
push
and
jns
pop
adc
and
dec
mov
inc
mulb
cmpsb
inc
mov
mov
dec
lods
adc
xchg
dec
int3
imul
jecxz
imul
jecxz
add
notb
pushf
ds
xchg
cmp
ret
jae
mov
push
sub
push
pop
cmp
xor
daa
mov
test
inc
mov
mov
ret
dec
outsl
insl
jae
dec
loopne
xchg
sub
fwait
mov
sbb
popa
das
fimuls
add
cwtl
pusha
rcrl
insl
and
outsb
test
rcr
nop
cmp
test
gs
jle
adc
jne
sbb
sbb
dec
dec
pop
jge
js
leave
cmpl
clc
insl
dec
and
popa
mov
sahf
or
cmp
cmp
scas
in
dec
cmc
push
mov
rcrb
imul
pusha
mov
push
adc
enter
inc
sbb
xchg
pop
jg
dec
mov
xchg
es
and
aam
adc
test
mulb
aam
xor
and
sbbb
stos
push
outsl
fsub
and
clc
push
sub
adc
ret
insl
es
sbb
add
adc
push
cmpsl
mov
cmp
lods
add
lcall
mov
dec
enter
xchg
cmp
nop
mov
negb
leave
orb
mov
je
cld
in
cmp
lds
repnz
data16
mov
jno
in
repz
jg
mov
test
rclb
testb
jbe
out
popf
in
push
xchg
adc
and
adc
pop
push
in
mov
xor
mov
push
cmpsl
add
adc
enter
cwtl
fs
mov
dec
jmp
push
pop
rcl
dec
or
fwait
xchg
jne
scas
cmp
sub
ja
int3
je
xorl
les
bnd
dec
scas
adc
cmc
mov
stos
pop
jae
int
movsb
bswap
cmp
dec
push
jae
and
rcrb
sti
dec
xchg
mov
icebp
adc
xchg
push
in
out
xchg
ds
sub
ljmp
sub
xor
xchg
lods
fsub
in
int
inc
cmpsl
jmp
out
int
in
xchg
sub
es
in
cs
ret
pop
and
repz
push
loope
dec
dec
dec
sub
test
xlat
cmp
xchg
jl
adc
mov
xor
mov
fcompl
xor
dec
push
outsl
jge
mov
mov
and
mov
fcmovu
fisttpll
pop
js
xchg
xchg
dec
mov
dec
pop
sarb
mov
lds
pop
mulps
adc
nop
xor
gs
cmpb
into
inc
or
iret
aam
es
push
sahf
in
sub
repz
daa
mov
data16
movsl
inc
push
and
test
sarl
mov
pop
enter
mov
adc
or
push
lds
bound
shlb
adc
pushf
add
dec
and
mov
push
sub
adc
insl
xor
in
pop
or
cmp
dec
xchg
add
lret
out
or
clc
dec
movsl
adc
push
cli
push
fimull
xchg
cwtl
pop
loop
xchg
xchg
in
dec
mov
mov
aas
pop
scas
xchg
add
dec
or
cmp
or
cs
adc
inc
ds
in
xchg
pop
push
adc
fiaddl
imul
adc
popa
stos
push
mov
or
hlt
xor
ljmp
push
in
adc
jecxz
sahf
and
addb
xor
xchg
mov
pop
loop
dec
add
clc
sbb
test
inc
sti
adc
ss
push
mov
fwait
mov
push
subb
sbb
dec
push
mov
pusha
xchg
mov
push
jl
lret
popa
sbb
sbb
lcall
ljmp
xor
arpl
bound
mov
outsb
out
mov
loope
insb
inc
imul
popf
test
out
mov
push
jae
movsl
lods
jbe
cmp
ret
subl
adc
xor
fistl
test
push
pop
pop
sub
leave
stc
xchg
dec
out
arpl
cmp
shll
xor
stos
fs
or
fistl
lret
pop
sbb
sbb
insl
dec
add
cmc
mov
cmp
das
lock
push
mov
fstps
sub
in
and
pop
dec
popa
sub
je
or
and
ds
xor
xchg
inc
cltd
rclb
dec
cmp
pop
test
add
pusha
push
call
shlb
mov
mov
xchg
stc
nop
or
lcall
mov
xchg
aam
pop
mov
aam
leave
mov
inc
divl
lcall
cwtl
stos
aad
stos
and
mov
pop
sbb
push
cs
inc
stos
cmp
xor
or
adc
sbb
negb
xchg
add
outsl
testb
rorl
dec
nop
mov
popf
enter
call
sahf
inc
outsl
jnp
addb
mov
adc
repz
popa
clc
add
pop
jae
push
mov
gs
test
out
out
xor
push
js
sub
add
mov
into
dec
popf
sub
lahf
xor
mov
jmp
add
push
sub
xchg
shlb
add
add
xchg
push
mov
lods
xchg
aaa
lock
jae
fnsave
or
fmull
jle
int
or
add
or
and
push
pop
add
push
pop
pop
in
inc
adc
ljmp
stos
mov
add
sub
mov
ret
pop
jae
mov
out
arpl
cmp
je
or
adc
push
mov
dec
mov
subl
cmpsl
fdivrl
mov
or
outsl
mov
scas
mov
push
add
sbbl
pushf
pop
cmp
mov
iret
fistl
cmp
push
sete
jae
je
pop
inc
inc
adc
mov
mov
pop
fildl
outsb
mov
xor
pop
jmp
cmp
rcll
mov
jecxz
js
outsl
in
lds
inc
dec
pushf
leave
cltd
daa
out
outsl
push
mov
les
imul
into
lods
mov
sarb
mov
jle
packssdw
cmp
aaa
push
repnz
mov
lods
aas
sub
sub
cmc
notl
sub
loope
adc
mov
in
outsb
push
push
int3
mov
js
and
arpl
in
data16
adc
je
xchg
lret
sub
das
addr16
mov
jae
lea
mov
adc
add
daa
xor
mov
or
stos
flds
sbbb
pop
call
or
push
jecxz
xor
decl
cmp
lret
mov
dec
cmp
mov
xchg
push
pmaddwd
jbe
cmpsb
imul
jecxz
mov
mov
push
jbe
enter
scas
aaa
dec
je
mov
pop
pop
push
pop
or
adc
jae
adc
jbe
orb
xchg
xchg
adc
adc
test
scas
mov
sbb
dec
cmp
sbb
dec
nop
xchg
sub
xchg
sar
loopne
and
loope
jb
dec
mov
stos
inc
lea
inc
pop
fbstp
fildl
pop
cmp
push
mov
outsl
cmp
fnstsw
ficompl
rolb
aad
fs
arpl
movsb
int
mov
and
dec
pop
dec
mov
rcrl
sub
mov
ss
jnp
lock
aas
leave
shrl
add
rolb
mov
sbb
pushf
scas
dec
enter
fs
fcoms
sbb
adc
inc
lcall
xor
cs
out
or
insl
jle
gs
sbb
mov
sbbb
mov
mov
sbb
dec
xchg
push
dec
push
mov
cltd
ds
mov
lds
sbb
scas
in
jecxz
sti
repz
xchg
mov
icebp
mov
push
adc
mov
adc
mov
lea
movsl
or
int
in
data16
ret
mov
scas
and
std
pop
jno
aam
sahf
add
outsb
xchg
or
jge
or
mov
push
mov
dec
enter
mov
push
das
pop
jl
in
scas
sub
in
loopne
rcrl
dec
jae
jle
jp
jb
enter
sbb
push
rorb
mov
negl
xor
daa
xchg
pop
mov
dec
fwait
pop
jnp
ds
shrb
bound
je
in
mov
pop
xchg
add
adcb
imul
sbb
sbb
dec
xor
or
sbb
cmpsl
movb
aad
pop
inc
cmp
xor
hlt
fwait
data16
shrl
insb
mov
in
outsb
test
sub
and
out
and
shrl
dec
dec
test
lea
cld
sbb
ds
in
aad
rorl
sub
lds
aaa
pop
xchg
jo
lahf
sub
and
leave
xor
paddq
xchg
mov
push
divb
push
sti
xchg
xchg
sbb
push
dec
or
lods
add
loop
pushf
scas
xchg
push
pop
imul
mov
shll
subb
sub
jmp
mov
jb
cs
xor
test
jbe
jp
pop
jo
in
pop
out
xchg
add
mov
movsl
out
and
pushf
ds
mov
mov
movsb
jnp
arpl
movsl
mov
or
data16
dec
mov
fmuls
xor
loopne
lret
and
jbe
pop
idiv
jb
icebp
xor
js
dec
in
dec
inc
in
adc
mov
test
icebp
movsl
int3
fdiv
mov
and
push
cmpsb
and
fdivs
mov
dec
aas
jle
cmp
push
mov
insb
and
xor
sub
cmp
mov
xor
inc
popa
add
in
addl
repz
mov
inc
sub
jp
pop
testl
pushf
in
fs
rcrl
jnp
and
jbe
imul
shlb
sti
cmp
xchg
push
testl
sbb
pusha
mov
pop
inc
out
ds
sub
and
sti
movsb
push
xchg
push
push
push
mov
mov
pop
arpl
shll
fildl
rol
icebp
and
push
test
popf
jl
mov
xor
lds
dec
inc
test
fldl
andl
sahf
sbb
insl
scas
roll
or
mov
fimuls
sub
sbb
movsb
aas
mov
cmp
popa
inc
jae
sbb
cmp
push
int3
mov
add
dec
jecxz
and
cmc
test
jecxz
mov
adc
jg
cltd
pop
repnz
sub
dec
and
mov
js
inc
pop
test
mov
sub
fs
fiadds
mov
cmp
and
and
push
cli
test
cwtl
out
shl
jecxz
xor
iret
sub
or
push
outsl
iret
push
sbb
push
push
jmp
mov
sbbb
int3
mov
ljmp
repz
push
nop
subl
iret
pop
ljmp
inc
std
adc
js
jmp
or
jg
pop
mov
xchg
ss
add
add
adc
push
loop
jecxz
outsb
add
xor
pop
dec
mov
add
or
fsts
filds
cltd
push
cmp
add
sti
pop
mov
mov
and
movsl
jne
cmp
jb
sarl
or
pop
aad
lret
loop
lcall
scas
in
arpl
xchg
or
xchg
mov
mull
cmp
xor
ss
jae
lods
push
stc
dec
adc
mov
out
sub
leave
sub
vfmsub132ps
add
les
jb
dec
push
xor
lcall
pop
inc
jecxz
sub
sub
jb
sbb
repz
pop
mov
fxch
jne
pop
mov
mov
shrl
imul
mov
jnp
test
dec
xchg
push
jb
mov
mov
or
pushf
int
sbb
movsl
push
cmp
shrl
cmp
xlat
push
xchg
sbb
cmp
rorb
lods
and
jp
in
nop
fldl
out
scas
dec
jecxz
sbb
jb
aas
ficoml
xchg
or
lods
xlat
fadd
or
push
inc
ss
imul
dec
add
jnp
jne
stos
pushf
or
adc
mov
loopne
out
cmp
test
sbb
mov
cmp
xchg
enter
jno
int
adc
outsb
push
js
sbb
fisubl
mov
dec
ss
fdivrl
pop
fdivrs
mov
sub
pop
mov
jecxz
out
and
pop
xchg
ds
into
dec
es
sarl
mov
mov
rcr
xchg
sub
rorb
pop
mov
jl
fs
in
mov
imul
inc
cmc
or
pop
pop
hlt
mov
mov
jnp
jnp
inc
aad
pop
pop
addr16
lods
mov
pop
addr16
add
lock
jns
scas
xlat
mov
cld
ss
mov
and
loopne
jns
imul
clc
jns
ljmp
test
or
mov
enter
cmp
xchg
sub
test
inc
fidivs
out
xchg
cli
aaa
faddl
stos
jg
addr16
dec
gs
jge
aad
push
adc
je
imul
dec
shl
fwait
xchg
cmp
inc
fnstsw
aaa
pop
pushf
xor
daa
lcall
sub
gs
out
dec
ds
xchg
orl
sbb
xchg
or
sbb
lcall
mov
push
mov
pop
cli
mov
cmc
cwtl
in
lret
push
pop
xchg
push
mov
cmpsb
stc
fs
repz
xchg
add
cltd
imul
movsl
js
sub
mov
mov
and
xchg
dec
lock
out
xor
loop
xchg
pusha
mov
cmp
stos
jg
cmc
jecxz
flds
mov
cli
enter
popa
mov
push
cli
push
call
outsl
adc
sub
jno
xor
imulb
jmp
movsb
shlb
fistps
fnstsw
pop
and
pop
insb
adc
mov
xchg
es
cli
je
sub
mov
pop
dec
mov
xchg
xchg
insb
push
sub
sub
rcrb
adc
dec
mov
mov
lretw
inc
xlat
mov
push
popf
mov
aam
sub
enter
mov
gs
jge
aad
in
sahf
mov
stc
xlat
xchg
pop
sub
mov
cmp
sti
lret
ror
xor
jb
mov
and
pushf
int
push
push
push
in
je
jle
dec
dec
mov
fidivs
mov
xchg
pop
sub
xchg
ret
push
and
out
in
jne
outsl
inc
or
xchg
insl
inc
cmp
push
cmpsl
and
lret
and
scas
fucomip
xchg
negl
or
scas
cmp
aad
and
add
sub
cmpsb
mov
adc
imul
out
add
adc
adc
insl
icebp
insl
and
clc
xchg
mov
fldl
mov
add
xlat
mov
pop
fisttpll
andb
adc
xchg
jle
ret
ljmp
adc
fsubrp
cltd
jae
idiv
test
cmp
xchg
push
cld
pop
xlat
in
sbb
jecxz
fstpl
stos
xchg
inc
popa
lods
pop
and
add
ljmp
fldl
jl
outsl
dec
in
stos
mov
int3
mov
aas
and
mov
dec
mov
mov
push
test
push
ljmp
xchg
cs
loopne
testb
cmp
insl
ds
lods
insl
dec
fdivl
sub
aaa
add
loopne
or
xchg
xor
push
hlt
or
pop
mov
fisttpl
and
call
clc
mov
xor
cmpsl
adc
cwtl
push
add
popf
and
aam
addl
mov
jle
xchg
repz
inc
filds
test
test
lret
jb
clc
stos
xor
and
fisubrl
add
icebp
pop
call
and
cwtl
sub
sbbl
test
mov
in
in
fwait
xlat
mov
inc
test
aad
cld
adc
fadd
adc
dec
lret
mov
dec
call
shlb
jecxz
lret
enter
dec
sbb
or
mov
fwait
sbb
out
stc
je
mov
xlat
mov
pop
lock
fmul
xor
push
dec
out
xchg
or
mov
and
or
adc
xor
dec
jmp
fisttpl
clc
icebp
or
mov
mov
inc
push
jne
xchg
imul
aad
stos
rclb
lods
shrb
adc
fcmovnu
inc
dec
xor
jae
out
and
and
xchg
stc
enter
aad
imul
inc
stos
xlat
xchg
repnz
mov
xor
inc
push
sub
inc
std
lods
inc
mov
mov
out
aaa
int
loopne
daa
push
imul
mov
mov
lcall
xor
jae
xor
add
inc
mov
lea
mov
fstp
sbb
negl
cmp
xchg
cmp
leave
push
daa
test
mov
sti
subl
adc
push
xchg
gs
inc
enter
repz
xor
xchg
popa
test
jmp
shlb
clc
sub
sub
stc
into
cmp
repnz
mov
mov
scas
add
pop
ja
add
idivl
jp
stc
sub
pop
sbb
cmp
out
adc
rolb
js
jae
push
pop
mov
cmc
mov
jg
mov
mov
inc
mov
cld
sbb
pop
cmp
sub
fidivl
mov
clc
cmpsl
adc
mov
in
xchg
adc
inc
xlat
xchg
lea
mov
shll
sahf
jmp
cli
inc
fsub
cmp
or
insl
mov
sbb
push
or
aad
mov
dec
mov
add
add
ja
sub
imul
xchg
les
dec
iret
dec
int3
sbb
dec
dec
lret
arpl
adc
adc
mov
jmp
fldcw
jmp
mov
ss
mov
lret
mov
cmp
xchg
aam
cmp
mov
fnstenv
pop
ja
push
push
stc
pop
ja
test
test
shll
add
xor
sbbb
sarl
stos
addr16
fimull
test
cmpsb
mov
sbb
pop
sub
insl
cld
in
push
in
movsl
ret
fidivrl
mov
mov
and
sbb
testb
fucomp
sbb
shrl
mov
mov
ss
bound
into
lods
jmp
adc
in
jp
imul
xor
pop
mov
pusha
imul
add
lods
mov
test
arpl
out
mov
and
shl
shlb
or
or
push
dec
ljmp
inc
mov
ja
shll
ficoml
push
dec
imul
sbb
cld
lcall
in
orl
mov
ret
pop
push
xor
jmp
push
mov
pop
fcomp
cmc
jl
clc
aaa
push
sub
sahf
vpsrlw
test
test
mov
lods
mov
and
push
sub
mov
adc
sub
jg
testb
sub
push
movsl
add
push
js
adc
cmpsl
push
mov
jb
cmpsl
out
arpl
in
addb
xor
cmpsl
pop
repz
dec
out
cmp
inc
mov
movsb
sbb
fdivrs
pop
or
imul
ficomps
sub
les
jg
jns
and
clc
mov
sub
iret
pop
movb
pop
pop
in
bound
xchg
push
add
xor
xchg
and
xchg
rcr
js
lea
pop
push
movsb
fmull
fists
inc
loop
inc
shl
dec
lahf
cmp
lea
push
movsb
jb
sbb
test
shrl
cli
xchg
adc
mov
mov
cmp
ja
shl
xor
lcall
scas
sub
lds
xor
xchg
inc
mov
mov
sbb
add
test
nop
push
repnz
inc
push
sub
fnstcw
or
leave
test
push
scas
jb
push
dec
cwtl
or
pop
imul
and
jo
rcrb
or
iret
insl
sub
sbb
shl
mov
imul
fisubs
mov
mov
gs
repnz
mov
enter
jmp
push
cmpsl
add
scas
xor
cld
xchg
sub
into
in
or
and
and
les
sub
popa
jnp
cs
and
inc
adc
push
or
inc
mov
repz
jmp
push
nop
cmpsl
push
repnz
jp
int3
xor
mov
mov
lods
jp
out
xchg
mov
rcrl
testb
enter
jb
and
sbbl
sub
sub
fs
lcall
ja
push
mov
pusha
xor
xchg
frstor
popa
dec
cmp
not
xchg
push
rcll
mov
lock
jg
mov
pop
mov
dec
lret
pop
mov
and
mov
mov
addr16
fsubs
int
mov
mov
xor
addl
add
lds
outsl
jl
orl
or
out
shr
cmp
loop
arpl
pop
out
xchg
mov
sbb
inc
xchg
xor
inc
and
lock
into
in
xchg
mov
inc
push
shrl
iret
pop
cmp
divl
popa
movsb
jp
pushf
imul
cmpb
repz
insl
cmpsb
sbb
bound
aaa
les
sti
push
fdivl
data16
adc
push
lahf
mull
add
fisttpll
dec
pop
push
test
repnz
push
movsl
cmp
jl
sbb
pusha
add
jae
repz
xchg
xchg
add
ret
movsb
xchg
nop
lahf
adc
xchg
xor
xchg
mov
jns
sbb
arpl
or
dec
sub
repz
mov
pushf
cmp
fucompp
test
repnz
jns
int
sbb
xor
push
hlt
out
pop
addr16
or
das
inc
popf
ja,pt
aas
xor
mov
xchg
sub
jnp
pxor
mov
call
stos
xor
mov
pop
pop
pop
xchg
sub
test
gs
loopne
jecxz
sti
inc
lret
xor
jbe,pt
dec
cltd
fbstp
sahf
js
inc
mov
mov
movsl
outsl
inc
fiadds
xor
xchg
addr16
push
jg
pop
dec
cmpsb
and
dec
push
sbb
insl
ret
lret
or
add
into
sub
xor
xor
outsb
fidivl
xorb
shlb
adc
lods
cmp
xchg
cmpsl
jns
push
scas
jmp
gs
adc
mov
ljmp
dec
stos
imul
fstl
cmp
cmpsb
mov
mov
dec
loope
in
fidivrl
mov
mov
mov
lea
and
imul
or
jmp
inc
mov
in
ja
sbb
push
mov
mov
out
xchg
sub
aad
into
pop
ficoml
add
mov
or
repnz
out
gs
pop
adc
push
insb
inc
mov
js
jb
pop
pushf
rcll
insl
int
sbb
sahf
cltd
lea
ja
mov
add
pop
push
into
inc
test
hlt
adc
dec
fidivs
or
repz
ds
jge
out
fnstcw
mov
das
or
fsts
jo
add
or
or
mov
popa
ljmp
mov
pop
scas
xchg
nop
popf
movsb
hlt
inc
mov
pop
in
and
aad
data16
es
fcompl
jne
fistpll
or
inc
or
xchg
pop
daa
add
repnz
adc
loopne
add
mov
adc
les
push
add
dec
mov
stc
and
movsb
jbe
ror
sub
pop
adc
cmp
enter
xchg
mov
out
add
into
fdivrp
mov
inc
cwtl
test
or
and
fistpll
inc
fdivrl
rcrl
add
ror
test
pop
enter
xchg
ret
lock
enter
ret
pop
cmc
mov
push
sub
roll
and
add
out
cmpsl
insl
and
ja
sub
xlat
push
mov
inc
push
jns
sbb
mov
int3
insb
mov
add
out
sub
popf
add
dec
push
jg
sahf
lea
xchg
sub
out
adc
inc
jg
jae
jne
dec
sub
leave
int
mov
pop
mov
mov
dec
xchg
test
dec
mov
xchg
nop
daa
xchg
pop
push
mov
push
sbb
pop
stc
out
cmp
stc
insl
and
dec
test
xor
into
push
outsl
xor
push
push
aas
xor
xchg
test
inc
jge
inc
mov
inc
mov
les
xor
clc
pop
mov
fisttpll
movsl
mov
mov
xchg
rol
cmp
fcomip
sbb
iret
add
xor
arpl
mov
mov
adc
pusha
cmc
sub
adc
xchg
data16
jb
mov
lcall
ljmp
call
pop
clc
cltd
jns
add
sub
adc
inc
in
xchg
inc
or
inc
mov
lret
call
filds
loopne
test
repnz
mov
lahf
xchg
dec
pusha
sti
push
mov
dec
shlb
shrl
mov
fidivrl
or
xorps
mov
leave
out
fsubl
and
dec
lock
push
cmp
sub
adc
imul
jb
pop
adc
fdivl
push
inc
ds
mov
fidivrl
xor
fbstp
mov
lahf
jge
rcll
lods
imul
dec
test
stc
mov
fsubrs
or
dec
cmp
xchg
xor
cmp
dec
mov
into
and
or
mov
aam
fildl
pop
dec
inc
in
add
mov
shrl
fcomps
in
repnz
dec
pushf
paddd
add
push
jle
rorl
mov
pop
dec
add
sbb
push
sbb
or
je
outsl
jle
xchg
add
in
mov
sub
jp
ficoml
dec
lahf
xor
test
pop
sub
std
dec
lds
adc
sub
repz
orl
stos
or
je
push
dec
insl
sub
pop
sbb
and
pop
fldenv
jnp
push
cld
aad
xor
dec
mov
outsb
jns
lret
popf
mov
sti
jecxz
pusha
imull
add
sub
mov
jno
add
inc
sbb
sahf
pop
sti
adc
das
js
and
sbb
push
mov
lods
jns
adc
dec
cmpsb
cmp
insl
scas
sbb
inc
fisubs
push
movsb
movsl
jne
jo
icebp
sbb
push
dec
scas
mov
mov
leave
cltd
mov
les
clc
stos
ficoml
ljmp
jb
pmaddwd
inc
daa
xor
movb
push
or
cmpsb
testw
ret
cli
mov
pushf
rcll
push
lret
cmp
into
insl
xor
xchg
and
cltd
outsb
lahf
add
fwait
xchg
sahf
jg
inc
lea
movsl
dec
popa
ljmp
mov
clc
imul
iret
mov
adc
pushf
hlt
js
sbb
imul
pop
addr16
lods
aaa
out
stos
jmp
imul
fdivrl
lcall
les
fdivs
push
pop
insb
sub
incb
mov
xorl
pop
loopne
xchg
adc
xchg
cs
mov
cli
sbb
xchg
fildll
sub
push
out
pop
fidivrl
xchg
js
mov
adc
or
pop
ss
dec
in
nop
movsb
mov
mov
dec
out
shlb
repz
cmc
pop
cmp
sbbb
pop
minps
push
mov
adcl
xchg
mov
seta
enter
dec
pop
stc
inc
push
pop
test
and
fcompl
jb
roll
test
adc
ret
inc
xchg
xor
out
jne
mov
xchg
pop
push
mov
sti
push
sbb
and
outsl
sahf
ss
int
sub
mov
dec
xchg
pop
arpl
popf
xchg
push
cli
push
das
data16
ja
fidivrs
ret
out
and
pop
xchg
ds
adc
in
jne
in
add
jns
shrl
mov
xchg
push
push
xor
adcl
sub
cmp
adc
inc
inc
pop
andb
lret
int
sbb
repnz
add
popl
lea
aaa
in
psubb
mov
jbe
jl
and
cmpsb
insl
mov
pop
insb
sub
or
pop
mov
jp
sbb
xor
arpl
cs
repnz
dec
add
xchg
fs
outsb
loope
mov
jl
rcr
insb
add
jecxz
rclb
mov
imul
insl
push
mov
mov
into
fs
outsl
rcll
jmp
add
cltd
das
jbe
sbb
imul
outsb
add
sbb
mov
ja,pt
sub
cs
ds
sub
pop
sbb
sahf
mov
ret
inc
arpl
icebp
xor
imul
jae
in
fsubrs
lret
shrb
popa
sbb
mov
fmull
add
push
int
mov
fucom
push
push
push
jp
cmp
movsl
lock
lods
popa
scas
pop
ret
xor
fnstsw
xchg
scas
mov
xor
lret
sub
lods
popa
add
mov
inc
or
mov
xorb
push
pop
mov
imul
inc
nop
sbb
jns
cs
jae
pop
sub
out
cmc
xor
hlt
aad
loope
or
dec
push
jl
leave
pusha
sub
mov
loopne
in
loopne
insb
je
adc
fildl
call
es
mov
mov
mov
push
mov
push
ss
push
movsb
adc
xchg
mov
xchg
push
pop
inc
cmp
xchg
mov
mov
sti
std
inc
inc
inc
jno
ja
stos
test
fildll
adc
xchg
pop
push
add
scas
xor
lods
cmp
in
leave
pop
loope
inc
mov
mov
inc
mov
insl
push
sbbb
jg
mov
push
sub
mov
mov
pop
rorb
xchg
int
in
mov
mov
test
in
xchg
rcrl
fnstenv
or
dec
or
in
mov
leave
push
push
sub
mov
add
mov
sub
jg
adc
orb
insl
add
xchg
push
push
jge
ret
pushl
sub
or
sbbl
xor
loopne
fwait
arpl
fs
pop
call
loop
loopne
adc
add
push
fldl
movl
repz
jno
loop
out
pop
orl
jb
pusha
jp
daa
ja
andl
call
adc
lret
test
in
test
mov
add
movsb
push
adc
or
push
fcmovne
mov
xchg
lods
clc
insl
dec
movsl
sbb
addr16
inc
lret
dec
repz
add
leave
pusha
inc
jb
divl
nop
xchg
pop
ret
cmp
scas
add
jb
inc
movsl
push
xchg
or
push
es
sbb
addl
ret
out
repz
mov
es
xor
cmpsl
or
cs
inc
popf
scas
repz
push
out
dec
mov
incl
orb
jb
xchg
jge
sbb
leave
scas
into
fsubrl
pop
push
inc
sbb
icebp
xchg
mov
mov
testl
inc
lahf
xlat
lods
sub
int
out
cmp
loop
xchg
stc
sbb
mov
mov
push
jo
and
loop
xrelease
xor
mov
jae
cmpb
jb
push
pop
aaa
cmp
aam
in
leave
ss
aam
mov
push
inc
or
push
jmp
pop
jo
or
test
in
sub
fsubrl
sbb
out
les
repz
movsb
lea
gs
insl
jle
sahf
or
aaa
jl
aas
rorl
jecxz
jmp
mov
jp
fnstcw
or
add
fistpll
or
test
jecxz
pop
shll
imul
mov
xor
pop
pop
pop
aas
mov
jbe
mov
inc
int3
sub
mov
lahf
sub
es
stos
outsb
fs
rolb
lcall
inc
sbbb
xor
push
leave
das
adc
into
mov
add
mov
movsb
xchg
subl
mov
lock
adc
jns
lret
shr
and
pop
inc
in
jnp
out
push
je
mov
jns
pop
sti
je
in
outsl
out
test
aaa
pop
scas
nop
sub
adc
insb
xchg
pusha
mov
lods
push
push
fisubs
ds
pop
xlat
int3
lret
fdivrl
test
and
mov
fs
lea
xchg
inc
stos
repz
stos
pop
and
jmp
andl
negl
int
mov
rcrl
leave
pusha
push
icebp
cmp
and
pop
mov
push
cli
lods
sahf
xor
xor
aaa
into
xor
push
movsl
popf
int3
ffreep
lea
mov
int3
aam
and
out
and
pop
lods
push
fldl
adc
mov
ret
adc
pushf
das
repnz
sub
xlat
jno
jmp
in
outsl
ret
outsb
nop
dec
in
jl
mov
dec
adc
mov
push
test
dec
xor
jle
and
pop
cmp
dec
jbe
int3
push
mov
pusha
push
cmp
push
lods
rorb
int
fildl
dec
push
sbb
cltd
fsubs
stc
divb
jecxz
adc
jmp
pusha
cwtl
jno
pushf
jae
xlat
cs
nop
adc
dec
mov
push
ja
movsb
pop
cmp
adc
aaa
pop
icebp
addr16
out
xor
lret
jno
ljmp
mov
outsl
push
jmp
jmp
nop
lods
aas
outsb
lods
cmp
pop
cmc
je
sub
jb
stc
daa
insb
jl
cmpl
sbb
xor
cmp
popf
sub
mov
cli
xor
mov
cwtl
and
hlt
loop
cmp
mov
inc
cltd
std
in
cwtl
add
test
sub
push
iret
rcl
sbb
add
xchg
dec
enter
lea
sub
dec
mov
push
lcall
push
lods
xor
inc
cmc
push
xor
or
in
inc
lods
dec
test
andb
or
clc
pushf
repz
out
cltd
mov
mov
pop
pop
insb
scas
repz
mov
cmpsl
shll
cmp
test
mov
push
jmp
loope
nopl
out
dec
aam
scas
ret
imull
pop
outsl
les
jae
stos
mov
scas
add
loopne
inc
incb
cltd
sub
mov
enter
cmpsb
sub
sbb
int
insl
jae
outsb
mov
pop
insb
shll
ret
test
jno
in
adc
aaa
ret
repz
fnstenv
clc
push
xor
out
cld
pop
incl
stc
sbb
adc
inc
in
and
jle
loop
push
out
loope
cwtl
aam
filds
stos
sbbb
pop
sub
loopne
sub
je
adc
rolb
subb
sbb
int
popa
cmpb
add
loop
mov
les
mov
dec
cltd
lods
xchg
xchg
das
add
add
movsl
icebp
sbb
or
adc
scas
push
sbb
popa
stos
and
test
in
fisubl
adc
mov
ljmp
vpunpckhdq
jg
cmp
pop
jg
sbbb
and
cld
pop
jb
inc
loop
cs
ror
and
insb
nop
inc
mov
fmul
push
sahf
inc
pop
push
xorb
inc
push
adc
nop
xchg
dec
in
jb
pop
mov
sub
test
fidivs
leave
or
jae
lods
inc
push
iret
data16
xor
decb
and
pushf
idivl
xor
push
cltd
cwtl
mov
jae
pop
cmpsl
loopne
pushf
sbb
fs
xchg
dec
loop
jp
lods
nop
add
mov
pop
add
je
daa
jnp
cltd
aam
xchg
adc
dec
add
into
sbb
jg
mov
movups
es
aaa
lahf
pushfw
pop
inc
cmpb
lods
push
xor
fnstsw
push
lret
arpl
and
lods
icebp
sti
insb
add
or
cmpsl
cmp
fisubrs
push
popf
xor
push
sbbb
lods
int
fisttps
push
cmp
jge
popa
mov
adc
mov
pop
lret
mov
inc
jp
sub
jg
rol
xor
outsb
data16
sub
jnp
push
push
loop
push
adc
sbb
push
sbb
add
mov
xchg
add
xor
cmp
imul
xchg
xor
xchg
pop
cmp
jle
sahf
sub
mov
sub
mov
popa
push
lahf
jecxz
aas
adc
insb
subb
adc
addr16
in
sub
inc
pop
push
jb
dec
fwait
xchg
xchg
jno
fldenv
mov
jo
daa
int3
pop
fidivs
and
ret
dec
leave
cmp
repnz
in
in
stos
out
mov
add
push
lret
add
xchg
mov
mov
mov
je
test
pop
aas
adc
in
sbb
or
cmpb
ds
mov
loopne
jp
setl
ljmp
xor
inc
xor
jle
jne
and
lret
and
aaa
inc
or
inc
xorl
xchg
ds
push
aas
cli
mov
push
mov
pop
mov
in
xchg
adc
idivl
mov
hlt
cli
and
mov
movsl
loop
xchg
loope
mov
sbb
aaa
dec
hlt
stc
and
add
xchg
push
jbe
pop
cli
jne
addr16
jge
jae
orl
pop
push
packsswb
stos
mov
in
inc
sti
lret
loop
push
sbb
cmp
sbb
and
arpl
std
aad
pop
mov
es
or
cmp
jae
nop
push
aam
jp
push
out
mov
or
pop
mov
std
jo
mov
cmpsb
jl
fimull
mov
or
inc
loop
sub
hlt
jl
jle
sub
push
pop
test
sbb
fisttpl
mov
into
xlat
inc
bound
lock
sbb
scas
inc
cld
gs
mov
test
add
lea
mov
mov
int3
iret
xlat
inc
cli
aam
mov
dec
pop
shl
icebp
sbb
ljmp
jbe
jo
mov
xorb
push
call
cld
insb
je
cmp
mov
or
es
iret
mov
or
xchg
mov
sub
loope
movsb
clc
rcl
push
negl
jl
jb
mov
mov
pop
mov
bound
and
cmpsb
xchg
mov
scas
inc
mov
sbb
bound
nop
clc
or
dec
in
leave
addr16
adc
fcompl
pop
mov
fildll
aad
fwait
negl
xchg
and
lds
repz
push
pop
adc
and
sub
fwait
sub
inc
leave
xor
mov
add
je
call
loop
rorl
add
pop
pop
lcall
das
cld
lret
aad
sbb
movnti
bound
lahf
stos
cs
fbstp
fdivs
into
xchg
hlt
and
leave
mov
lcall
add
lahf
repz
jno
pop
faddl
pop
out
loop
push
cs
mov
ja
xchg
out
cmp
inc
sub
enter
xchg
jp
xchg
ss
scas
push
mov
ret
mov
in
or
push
xor
sbb
paddq
pop
and
aaa
xor
stc
sub
pop
xchg
pop
repnz
popa
sbbl
and
insb
xchg
fmull
decl
push
push
scas
sub
cld
xchg
xor
xchg
mov
or
jg
ret
fdivrl
mov
jg
pop
xor
jle
or
lret
test
shll
add
push
fldt
repnz
inc
xlat
lret
mov
fsubs
mov
mov
mov
push
nop
mov
loopne
scas
mov
push
shlb
and
loope
jno
out
sbb
mov
pop
scas
mov
xor
notb
mov
andb
mov
clc
dec
jno
outsb
xor
shll
cmc
adc
stos
adc
fsub
xchg
add
dec
lds
clc
rol
push
out
ret
les
loop
jae
popl
jge
loop
fmuls
inc
in
mov
mov
pop
mov
jb
loop
addl
mov
push
hlt
mov
or
jle
xor
push
cmc
lods
repz
je
cmp
xchg
test
mov
adc
sarb
stos
lea
std
insl
push
push
movsl
lds
xor
sub
shlb
daa
lcall
adc
add
sbb
cmpsb
adc
popa
push
xor
dec
jmp
shrl
or
push
push
mov
mov
jno
subl
loopne
cmp
mov
adc
mov
inc
cld
jl
xor
repnz
dec
loopne
rclb
imul
lods
enter
inc
add
or
insl
adc
jo
leave
push
pop
adc
frstor
ficoml
xor
inc
mov
mov
and
dec
adc
int
sbb
in
sub
dec
pop
or
xchg
add
cltd
xchg
xchg
int
sbb
mov
sbb
mov
movsb
mov
dec
or
jg
jle
mov
jmp
pop
xchg
shll
inc
gs
xchg
and
fdivl
add
mov
lahf
stos
xchg
jo
cmp
in
out
lret
push
lock
inc
stc
cmp
stc
jb
orb
mov
adc
fstpl
fbstp
int3
dec
iret
and
xchg
repz
cmc
push
jnp
in
push
mov
ret
fdivl
jbe
jo
cli
pushf
mov
pop
inc
stos
add
xorb
xchg
adc
data16
pop
dec
cmp
lret
scas
mov
dec
mov
lods
pop
dec
xor
mov
xor
pop
cltd
jecxz
mov
fbstp
push
pusha
ss
cmp
pop
iret
cmpb
adc
inc
shlb
dec
mov
data16
mov
mov
jns
idiv
inc
inc
and
ror
movsl
mov
mov
pop
mov
pop
test
xchg
lea
movsb
rcr
and
dec
scas
mov
pop
mov
mov
cmp
in
fisttps
repnz
xor
sub
int
xor
decl
aad
xchg
cs
cmc
int3
lret
dec
add
mov
rol
or
test
or
mov
aad
out
lock
jnp
ljmp
jl
adc
ret
add
xchg
mov
mov
popf
sbb
mov
add
jnp
and
stos
mov
jge
mov
daa
ljmp
test
sar
fldt
jecxz
xlat
sub
es
gs
lea
add
and
xchg
addr16
xchg
add
sub
loope
addr16
mov
mov
mov
fistpl
ljmp
jno
insl
mov
insb
dec
mov
add
lret
xchg
inc
sbb
mov
mov
fidivs
pop
push
out
sar
cmp
mov
cmp
lods
dec
mov
or
ljmp
cmp
mov
dec
lahf
call
fwait
xor
inc
out
faddl
adcl
sbb
movsl
mov
add
push
movsb
dec
cmc
sub
nop
popa
jns
dec
pop
or
push
cmpsb
ds
hlt
pop
sub
push
sbb
jns
dec
shlb
fcompl
xchg
xchg
adc
andb
lahf
mov
inc
cs
imull
cmp
push
jmp
jns
mov
shlb
and
pop
jo
xor
cmpsl
les
or
mov
out
jnp
xchg
test
inc
cmp
mov
repz
ficoms
push
lods
dec
push
out
aaa
lods
js
ficoml
sbb
inc
pusha
jae
adc
aaa
pop
and
movsl
cmpl
xchg
mov
daa
pop
fnsave
or
movsb
push
cmp
xchg
test
shr
add
pop
pop
xchg
cs
xlat
mov
sub
sbb
pop
sahf
dec
jg
lods
fldt
in
into
gs
push
xor
in
mov
jg
pop
xor
mov
call
adc
mov
out
push
push
popa
lret
or
pusha
jecxz
mov
outsl
or
jo
inc
push
sarl
test
scas
popa
mov
lds
jg
adc
int
jle
sbb
jle
sub
dec
stos
xchg
icebp
insb
cld
inc
out
addr16
mov
jne
or
pop
pop
xor
xor
add
lds
rol
out
in
dec
idivl
shrd
pop
roll
and
xchg
pushf
and
sbbb
insl
push
pushf
shrb
xchg
pop
rcll
fsubs
lds
ja
dec
jmp
leave
or
push
fdivs
push
or
repnz
daa
xchg
mov
sbbl
pop
les
add
imul
pop
sub
mov
fdivrp
lods
das
pop
push
aas
xlat
or
in
dec
and
test
xchg
scas
pop
scas
mov
fisttpl
adc
inc
je
mov
push
shll
std
pop
jle
mov
pusha
lods
int3
and
pop
xor
into
lea
cmp
daa
pop
out
push
sub
adc
push
add
cwtl
mov
jb
insl
lret
imul
xor
mov
enter
mov
adc
mov
mov
adc
sbb
or
hlt
jl
dec
jb
call
mov
cmp
pop
jmp
test
xor
push
js
dec
mov
jmp
adc
testl
fimuls
icebp
xchg
jle
push
jle
pop
push
or
xchg
cld
in
arpl
test
out
fidivrl
cmpsb
mov
jl
and
loopne
adc
xchg
jle
or
ss
mov
shll
pop
pop
inc
or
pop
jae
or
sarl
lock
imulb
adc
fsqrt
mov
mov
adc
and
add
xor
and
ret
sahf
jmp
icebp
sarl
pushf
cmpsl
shl
push
jecxz
ss
sub
adcb
jbe
xor
scas
fisubl
mov
hlt
dec
in
sti
dec
ret
sbb
push
inc
xlat
push
mov
daa
jle
pop
mov
shrb
cmp
hlt
fdiv
adc
sar
aas
movsb
jo
pop
scas
sub
xchg
insl
gs
ss
cli
sahf
shrb
lahf
or
popf
lock
imul
fs
mov
adc
popa
iret
cli
push
fidivl
sub
inc
rolb
mov
jp
xlat
out
sub
es
fstps
cli
call
add
fcomip
pop
imul
repz
aas
pop
sahf
xor
clc
fidivrs
xor
cmpsl
mov
mov
add
sub
inc
in
or
addr16
fiaddl
call
into
mov
cmc
call
es
push
sbb
lds
and
xor
xor
popa
jns
fidivrs
popa
mov
lret
and
cmpsb
ret
leave
fs
test
xchg
mov
dec
leave
stos
dec
pop
sub
add
pop
repz
xor
addr16
cltd
shl
repnz
movsl
and
clc
jbe
add
jge
testb
inc
fisubs
sbb
test
mov
xor
or
shrb
imul
lret
jno
mov
xlat
jle
dec
in
data16
inc
stos
xchg
cmp
loope
push
bound
jge
movsl
test
xlat
je
add
cld
mov
push
xchg
jae
push
jl
andl
inc
test
jecxz
push
or
mov
cmp
push
div
mov
sub
cmp
dec
into
addl
xor
adc
rclb
mov
lock
sub
mov
xchg
sub
mov
pop
popa
test
clc
or
ds
inc
imul
into
es
adcl
mov
cs
jge
cwtl
cmp
fwait
mov
popa
clc
orb
pop
ret
sub
pop
sahf
scas
leave
mov
out
nop
mov
xchg
pop
mov
and
jl
out
mov
push
cwtl
push
cmp
int
js
cli
shll
mov
lahf
and
fnstenv
xchg
fmul
fnstcw
add
lahf
in
xchg
mov
xchg
std
cmc
mov
or
sbb
fwait
cmp
out
cmc
pop
hlt
adc
xor
and
mov
fistpl
jo
add
or
popa
mov
dec
sub
push
or
cmp
sub
test
clc
jnp
cmp
adc
xor
pop
cltd
and
jp
cmpb
sbbb
dec
and
pop
stc
push
jg
int
add
adc
mov
lret
xchg
inc
movsl
mov
sub
jl
mov
add
fcomi
je
push
popa
leave
or
sti
sbb
inc
jmp
push
xor
dec
add
iret
dec
inc
das
cmpsb
idivl
popf
sub
fisttps
add
test
cmp
jne
or
lret
xor
cmp
daa
subb
sub
cs
shl
jle
adc
ret
test
cmp
add
push
and
je
in
push
push
push
fstps
pop
mov
jo
ss
pop
cmp
nop
mov
push
test
jl
int3
arpl
xor
jp
xchg
bound
aas
jmp
jne
sub
mov
xor
nop
fstpl
jbe
jmp
and
es
lret
cltd
test
cmp
fbstp
movsl
dec
fists
clc
or
pop
or
xor
testb
ret
mov
in
aad
xchg
repnz
aam
push
in
andb
mov
clc
mov
call
outsl
loopne
cmpsb
cmp
inc
fldcw
aad
or
mov
xchg
dec
insb
inc
sti
mov
xchg
and
mov
sbb
pop
cltd
pmuludq
mov
call
xorl
ret
aaa
repz
jp
or
xchg
sub
sub
mov
pop
out
xor
pop
cmp
sub
cltd
pushf
out
cli
popf
jmp
ljmp
inc
fcmovne
mov
add
or
movsl
push
outsb
loope
dec
movsl
mov
cmp
cmp
rcl
adc
jno
stos
xchg
fimuls
xchg
adc
ljmp
adc
add
jne
inc
mov
or
jb
inc
push
push
push
je
push
mov
insb
sbb
jle
mov
or
xor
std
lods
data16
or
insb
sti
or
aas
data16
or
adc
pop
inc
clc
adcb
jb
in
movsb
sahf
mov
sbb
mov
and
jl
shrb
mov
je
add
inc
stos
pop
sti
lret
push
int3
int
mov
jb
lods
push
or
pop
ss
insl
and
ja
mov
jb
mov
sub
sbbl
mov
lds
int3
xor
mov
imul
inc
lods
jg
scas
shrl
rcrl
jnp
and
rcrb
cmpsl
dec
test
daa
mov
leave
xchg
bound
mov
mov
mov
aad
lods
or
daa
jne
lds
or
insb
mov
stos
add
push
pushf
aam
or
sub
fisubl
lock
fs
mov
fucomip
sub
ja
xchg
jecxz
sarb
sbb
jle
loop
pop
addr16
push
cmp
clc
enter
push
cld
xlat
rol
xchg
sbb
in
and
adc
add
sub
jns
icebp
dec
lahf
fildl
and
add
pop
lret
and
call
sub
xor
insl
imul
sti
int
xor
push
sub
mov
push
mov
call
pop
nop
mov
or
inc
dec
and
sbb
lret
jbe
lock
add
lcall
xchg
pop
or
add
push
jecxz
aas
stc
sub
int
shl
xor
aas
into
outsl
push
mov
in
mov
add
test
mov
stos
inc
add
popa
dec
push
xchg
repz
jl
mov
mov
into
add
leave
fs
dec
jmp
mov
push
insb
add
push
xchg
lea
mov
fisttpll
stos
and
mov
jecxz
ss
insb
cmp
leave
add
push
xchg
mov
jb
test
lock
push
call
jecxz
mov
pop
ret
mov
lock
sub
aam
inc
dec
cmpsl
mov
cmp
or
cmp
sub
cltd
das
dec
mov
xor
loope
rcll
cmpsb
jge
pop
push
sbb
fisttpll
pop
cld
mov
cmp
cs
out
sbb
cld
test
out
cli
dec
pop
lods
out
imul
mov
or
push
mov
jbe
inc
xor
jne
repnz
sahf
inc
faddp
movd
mov
lret
xor
insb
aas
pusha
sahf
pop
aad
jnp
stos
outsb
mov
shrl
jle
ljmp
out
jnp
insb
jb
jns
jg
fcoml
adc
jg
aaa
push
push
pop
test
shlb
xchg
ss
in
je
in
mov
cmpsl
mov
popa
cmp
dec
cmp
gs
adc
loopne
fs
insb
cmp
pop
outsb
jp
subb
mov
jle
unpcklps
imul
xchg
lahf
repz
stos
jmp
rcll
mov
loopne
adc
rorb
sbb
mov
test
push
int3
frstor
jle
or
adc
adc
and
cmc
mov
or
in
mov
mov
sbb
inc
cld
cld
push
push
cs
push
mov
repnz
arpl
mov
test
pop
fnsave
in
aaa
gs
dec
mov
add
lcall
xchg
jno
pop
addr16
movsb
or
sub
test
subb
adc
neg
enter
in
pop
test
mov
out
bound
cmpsb
lock
and
cmp
cmc
insb
popf
inc
movsb
ret
xchg
hlt
cmp
ljmp
push
popf
imul
out
push
xchg
dec
inc
pop
jg,pt
imul
mov
test
xchg
insb
das
into
fnstenv
mov
push
iret
ret
ss
fdivrs
pop
mov
sahf
xchg
add
loop
icebp
mov
or
movsb
jge
mov
or
loop
push
or
jno
ss
xchg
push
imul
popa
in
adcl
or
adc
jmp
and
repnz
mov
popa
jne
nop
xchg
test
jecxz
repnz
test
pop
fdivrl
push
adc
mov
push
jmp
cltd
mov
xor
xchg
icebp
cmpl
cmp
es
in
mov
aad
sbb
test
repz
bound
pop
mov
xchg
jmp
add
int
xlat
or
mov
or
cmp
jnp
call
std
std
js
cmpsl
jae
repnz
scas
xchg
arpl
shlb
and
xchg
shrl
mov
rolb
inc
mov
pop
in
and
jo
push
xorb
jb
add
outsl
cld
xchg
sub
xchg
enter
inc
ret
movsb
mov
jecxz
adc
cmp
push
jno
es
jg
in
insb
xchg
add
push
pop
dec
inc
ds
xchg
jmp
mov
sbb
dec
es
shlb
xchg
mov
mov
shll
or
mov
jno
dec
cmp
lret
or
and
sbbb
js
dec
sub
mov
xchg
outsb
push
mov
add
cmp
cmp
loop
cmp
mov
cmp
cmpsb
push
in
push
bound
sbb
xor
sub
ja
jecxz
testb
aaa
pop
mov
pop
int
push
scas
jmp
fucomip
and
add
pushl
xor
cmp
adc
push
xor
inc
aaa
or
pop
das
aam
xchg
pop
pop
pop
sahf
jle
sbb
cmp
in
inc
pop
jg
inc
inc
inc
jg
jns
xchg
lahf
fcoms
jno
adc
mov
popf
mov
iret
dec
mov
mov
addl
sub
mov
cld
cmpb
leave
fwait
inc
fistl
or
nop
sbb
xchg
mov
leave
aam
stc
shll
data16
lret
movl
push
movsl
std
cltd
stos
push
dec
or
mov
adc
push
jmp
mov
jb
inc
dec
push
stc
mov
fdivs
jecxz
js
out
or
fdivs
test
pop
mov
push
mov
add
push
add
pushf
and
add
xor
movsl
push
xchg
aad
imul
xchg
mov
add
or
sbb
mov
push
hlt
mov
sub
push
test
mov
loopne
and
aaa
and
repnz
mov
bound
mov
jno
add
xchg
mov
lods
sub
out
iret
popa
dec
fistps
add
inc
lods
inc
pop
jle
daa
and
sahf
mov
outsl
or
inc
inc
test
cmp
gs
daa
push
jmp
jns
sub
cltd
jb
mov
xadd
repz
inc
cmp
aas
jbe
into
cmp
mov
pop
push
in
nop
xchg
lds
jae
das
stc
int3
arpl
dec
aam
jge
fnstsw
push
or
inc
das
xchg
insb
aam
es
fxch
neg
mov
sbbl
lcall
cwtl
jge
sbb
ljmp
imul
or
cmp
cs
cmp
mov
cmp
fistpl
or
dec
mov
push
pushf
test
xchg
push
fidivrl
repnz
cmpsl
jl,pt
sbb
xor
xchg
dec
sbb
add
cmc
adc
rclb
mov
cwtl
dec
xor
and
inc
mov
aaa
dec
dec
cli
loopne
adc
push
in
lret
outsb
jns
inc
imul
fildll
lods
inc
daa
fsubrs
cs
jecxz
in
ss
pop
xchg
lcall
jbe
dec
movsb
add
jne
adc
addl
xor
loopne
call
mov
call
icebp
test
mov
js
jle
lds
sub
add
push
sahf
adc
shl
mov
in
setp
cmpsl
jno
mov
jg
das
inc
jno
iret
mov
sahf
out
sbb
adc
or
inc
pop
outsb
loope
in
sbb
notb
cmp
or
dec
jnp
cld
shr
sbbl
mov
jl
sbb
jo
icebp
mov
push
add
icebp
rol
pop
xchg
nop
sub
clc
jecxz
hlt
js
adc
ret
mov
je
pop
xor
mov
inc
mov
jl
inc
mov
push
push
scas
cmpsb
mov
sub
add
orl
movsl
xor
xor
sbb
add
push
xor
xchg
ja
js
mov
or
mov
push
mov
sti
popw
adc
mov
adcl
push
jns
lock
out
or
push
shr
add
ljmp
mov
ss
adc
push
stos
xchg
push
out
sub
fiadds
and
push
pop
xchg
add
enter
aad
lahf
into
mov
xor
sub
push
outsl
xor
scas
xchg
pop
std
mov
outsl
outsl
sub
jl
pop
xchg
and
mov
xor
pop
lock
into
or
in
cmp
lcall
cmp
push
fidivl
mov
lods
inc
sbb
addr16
xchg
add
mov
testb
mov
fsubrp
mov
xchg
sub
and
mov
mov
pop
rorb
stc
or
push
daa
lret
in
sub
es
lods
pop
xor
jge
dec
shrb
add
repz
mov
cmpl
les
sub
ret
shl
repnz
adc
adc
ljmp
hlt
cmpsb
jo
mov
add
inc
aad
pop
lret
iret
jo
jge
sub
sbb
xor
testl
sub
jne
mov
es
push
add
js
mov
int
rcll
pop
scas
icebp
and
jl
scas
frstor
rcrl
cld
xor
fdivrl
popf
jmp
movb
js
xor
cwtl
pop
das
shlb
mov
ds
inc
stos
test
test
popf
or
and
mov
push
pop
sahf
push
pop
das
imulb
ja
inc
test
or
xor
into
pop
mov
data16
xchg
lock
ret
in
mov
addr16
test
addr16
jno
imul
ret
inc
out
ficoms
fs
ljmp
sahf
nop
mov
inc
arpl
cld
ja
adc
ss
mov
inc
mov
add
cmpsl
xchg
sub
mov
addb
sub
int3
dec
cs
sbb
jno
and
sbb
cmpsl
push
cmp
pop
aam
pushf
xchg
jge
addr16
adc
cmp
and
shlb
jae
mulb
pop
rclb
inc
jge
cli
or
jnp
test
lret
mov
mov
loop
imul
xchg
dec
mov
and
adc
outsb
insl
pop
cmpsl
imul
pop
lret
or
repnz
inc
mov
pop
movsb
dec
add
pop
adc
or
sbb
mov
ja
fsubrl
repz
aas
jae
and
shrl
mov
mov
mov
mov
iret
pop
xor
dec
mov
push
mov
movsl
xchg
ret
jle
push
cmpsl
lock
shrl
dec
fcmovb
push
pop
lock
arpl
mov
rcll
mov
jp
test
insl
mov
pop
pushf
jl
sub
mov
xor
jmp
insl
sbb
arpl
or
xchg
inc
gs
jbe
cmpsl
push
mov
pop
lret
pop
stos
pop
ss
xor
and
inc
inc
jmp
inc
add
xor
lcall
mov
lods
fisubrs
sub
in
jmp
xlat
in
ret
adc
push
shll
rcll
iret
pxor
orl
add
mov
leave
jbe
mov
push
xlat
adcl
mov
outsb
inc
xchg
push
jb
jecxz
lret
inc
xchg
mov
mov
cmp
ljmp
and
cmp
lods
ljmp
pushf
imul
or
push
es
out
xchg
jae
or
test
dec
cmp
movsl
pop
cltd
xchg
int
repz
sbb
push
test
inc
daa
mov
add
push
imul
push
sbb
into
gs
mov
sahf
mov
movsb
jecxz
mulb
outsb
mov
cld
lcall
in
ret
or
cli
cmp
adc
mov
pop
cmp
hlt
outsl
daa
cmp
push
fstps
loop
jnp
aas
or
mov
mov
shrl
push
ret
xchg
out
mov
inc
cmpsb
xor
jp
enter
pop
js
out
rcl
inc
cmp
scas
repz
loop
sbb
push
push
icebp
enter
loop
and
int
xchg
xchg
adc
into
xchg
cmp
in
test
dec
dec
mov
mov
mov
jmp
mov
roll
cld
jmp
push
xchg
jmp
mov
fidivs
xor
inc
or
js
gs
inc
mov
add
out
inc
cmp
xchg
pop
bound
mov
cltd
cmp
mov
adc
mov
icebp
mov
pushf
inc
popf
pop
lock
mov
cld
pop
xor
lret
jns
in
jg
fists
sbb
leave
negl
and
decb
jb
cmp
push
jp,pn
je
mov
xchg
pop
repz
andl
fidivrs
and
mov
dec
adc
dec
insl
icebp
push
push
in
add
xor
or
ss
clc
sbb
pop
inc
cmp
sbb
call
jg
arpl
or
adc
jle
jl
idivb
aam
sahf
out
push
sbb
pop
adc
out
outsb
dec
dec
out
fildll
pushf
push
subl
ja
leave
popa
add
pop
xchg
or
xchg
sbb
pop
xchg
mov
nop
xchg
scas
ret
push
jo
push
movsl
les
gs
fcomps
popf
xor
loopne
jmp
mov
and
dec
or
stos
cli
inc
sbb
dec
repnz
add
inc
cmp
sub
mov
cld
clc
push
cmp
xor
cmp
outsb
jg
pop
les
push
aaa
addr16
pop
popf
arpl
mov
sub
leave
and
stos
imul
jb
cmp
enter
adc
sub
aas
fmull
fiaddl
sbb
jo
xchg
mov
add
or
sarl
pop
add
add
dec
jecxz
mov
les
push
in
push
adc
mov
mov
sub
xchg
stos
jne
jo
shrb
and
and
jp
inc
xchg
rcrl
cmp
sub
sub
or
fcomip
xlat
repnz
mov
cmpsb
movsl
inc
movsl
andb
shll
dec
in
mov
out
add
mov
shlb
divl
xchg
fistpl
mulb
mov
out
xor
jae
outsb
ss
sub
fbld
jl
shr
ret
jge
daa
mov
cmp
insb
pusha
jnp
leave
cmc
mov
xchg
fstpl
adc
je
xor
shlb
dec
fidivl
adc
mov
jns
adc
popa
mov
xchg
inc
shrb
jbe
pop
mov
xchg
xchg
or
mov
shr
lret
jbe
sbb
inc
daa
xlat
sub
lahf
push
insb
ret
outsb
insb
add
sbb
pop
bound
fdivp
push
inc
aas
mov
dec
dec
dec
pop
inc
stc
push
out
cmp
xor
add
es
decl
cmpsb
xchg
push
push
mov
dec
inc
cwtl
jg
movsl
add
mov
jno
pushf
mov
scas
idivl
lods
mov
lcall
xchg
fstps
sub
daa
fcoms
aam
int3
push
mov
hlt
out
inc
pop
adc
popa
out
add
scas
in
xor
push
dec
dec
jb
test
xchg
mov
clc
add
and
in
ficomps
sahf
xor
stos
mov
push
jae
dec
inc
dec
movsl
stos
dec
sahf
mov
sbb
decl
fnstenv
or
idivl
fnstcw
icebp
andl
aas
push
push
in
frstor
dec
es
cmp
xchg
imul
fdivs
das
enter
mov
inc
xlat
sbb
fsubr
xor
out
dec
rorl
pusha
cli
addr16
mov
outsb
testb
lods
xchg
add
loop
adc
pushf
scas
bound
adc
xchg
jb
leave
les
mov
lods
dec
push
push
mov
sbb
inc
inc
outsl
or
jecxz
push
adc
leave
xchg
in
mov
sti
cmpsb
jne
mov
push
cmpsl
sub
dec
sub
lret
lods
ss
loope
and
push
jmp
cmp
fwait
xor
out
scas
sbb
jae
sbb
or
lahf
orb
mov
repz
popa
sarb
add
sbbb
icebp
stc
cmp
jecxz
lea
push
jae
mov
mov
in
xor
dec
scas
call
sub
mov
xchg
stos
push
jg
pushf
mov
pop
mov
shll
aad
xchg
xchg
xor
out
fdivl
inc
daa
xlat
add
pop
xor
lods
sub
andl
or
in
pop
cli
mov
aad
sti
dec
pusha
or
lea
or
or
inc
mov
aam
inc
inc
in
out
loopne
push
shr
adc
lods
adc
lock
xor
inc
and
push
test
mov
xchg
int
xchg
lds
xor
sbb
xchg
adc
mov
das
inc
xchg
or
iret
lods
mov
cmp
bound
mov
add
mov
xchg
in
jb
adc
movsl
jbe
xchg
mov
or
dec
add
enter
imul
cmc
fisubrl
mov
cmpsb
mov
lock
dec
xor
add
inc
push
cmc
rclb
daa
fwait
cld
popa
xchg
test
push
cmp
repz
iret
movsb
pop
ret
lds
cltd
iret
add
dec
pusha
dec
xor
jecxz
test
sbb
es
or
and
xor
aam
mov
orb
int3
pop
fsubrl
mov
mov
test
xor
pop
pop
out
jo
movb
testl
adc
adc
and
shll
or
or
ret
enter
push
popf
xchg
jo
imul
insb
std
add
mov
outsl
pushf
sbb
ret
cmp
popa
adc
xchg
adc
jp
cmp
xchg
cmpsl
test
in
sti
sbb
adc
jno
jnp
out
xchg
and
dec
push
sti
mov
jmp
pop
xor
icebp
mov
cmp
lock
out
cmp
pop
icebp
repnz
and
call
add
bound
xchg
mov
pop
bound
inc
sub
mov
mov
mov
es
dec
arpl
ljmp
mov
xor
jl
les
push
in
inc
sub
jb
inc
jecxz
adc
ja
imul
and
inc
pop
inc
enter
nop
pusha
in
xor
or
sub
stos
je
mov
insb
repnz
jmp
mov
incb
mov
adc
dec
jl
lods
nop
cmp
cmp
int3
add
repnz
ret
pop
sti
dec
xor
push
lock
ljmp
mov
gs
mov
cmp
pop
test
loope
fadd
pop
dec
es
fidivrs
in
addr16
add
adcl
mov
mov
clc
rcrb
pop
jne
ret
push
pop
loopne
pop
fnsave
hlt
mov
push
mov
and
mov
sub
push
loopne
and
out
mov
inc
fwait
rcrb
ja
out
popf
std
sbb
loopne
adc
dec
daa
jl
data16
gs
sbb
movsb
cwtl
stos
scas
aam
out
rcr
repnz
clc
fstps
pop
scas
dec
popa
add
mov
inc
mov
jo
mov
outsb
mov
mul
mov
pushf
dec
xchg
mov
loop
mov
and
or
dec
pop
dec
out
and
push
rcrb
sbb
lods
lods
test
jb
leave
dec
mov
test
lods
mov
cmp
movb
subl
and
lcall
dec
xchg
push
sub
jmp
cwtl
pop
push
shrb
pop
je
sub
das
xchg
out
lods
out
jmp
lcall
and
xchg
jne
inc
xor
ret
pop
mov
sarl
outsb
gs
jecxz
pop
adc
ss
icebp
lea
js
push
pop
loopne
dec
lret
imul
sarb
push
or
stos
iret
jecxz
push
nop
sub
test
cmp
ret
int
popf
jle
les
fsubrs
into
push
dec
inc
out
cmpsb
or
xchg
loope
aas
or
and
es
popf
xchg
movsl
in
pop
mov
sub
sub
pushf
pushf
mov
popl
rclb
out
bound
mov
test
fdivrl
xchg
scas
cmpsl
ret
sub
mov
cmp
rcrb
mov
sub
sbb
aam
pop
sub
fldl
scas
adc
xor
mov
jne
mov
mov
pop
insb
lea
outsl
cs
ljmp
add
insl
jnp
dec
jo
int3
mov
jbe
div
fbstp
inc
data16
imul
sbb
jp
sub
outsb
add
adcb
aam
lahf
sub
jbe
les
cmp
enter
fidivrs
mov
in
add
mov
xchg
push
adc
and
out
popf
shlb
in
dec
dec
es
subl
or
dec
or
jb
sub
in
inc
or
ss
daa
mov
pop
jge
cmp
jp
mov
in
adc
nop
cmp
pop
mov
icebp
sti
stc
push
lcall
jne
xchg
in
add
lcall
push
pop
shlb
and
cwtl
stos
jo
mov
jp
in
push
sub
call
adc
shl
pop
gs
outsl
int3
and
lods
aaa
movsl
xor
out
sbb
in
imul
out
lcall
jbe
mov
mov
mov
jne
lret
leave
pop
out
mov
adc
fnstenv
fwait
insl
int3
jb
icebp
push
test
imulb
add
xor
xor
sub
mov
dec
push
add
xchg
out
dec
aam
inc
dec
movsw
out
dec
jg
dec
data16
pushl
push
cs
outsb
std
adcl
in
cmp
leave
mull
mov
roll
test
cmpsl
mov
add
inc
inc
das
movsb
mov
lret
stos
popa
cli
jno
mov
mov
int3
adc
xor
stos
pusha
cwtl
push
jbe
in
xor
pop
xor
add
in
add
cmp
mov
jge
and
pusha
jg
mov
xchg
ds
or
fistps
pop
push
ds
cmpsl
push
adc
aad
inc
cmpsl
ljmp
add
arpl
call
dec
stc
and
out
scas
and
mov
push
ljmp
fildll
add
or
push
or
ss
sub
loope
aas
push
sub
jecxz
imulb
jecxz
ja
xor
xlat
and
add
and
xlat
lret
outsl
push
push
sub
mov
clc
lea
and
push
add
fwait
mov
jmp
loope
mov
sub
cmpsl
aad
mov
sbb
and
mov
ret
lds
mov
les
sbb
shll
enter
jns
adc
xchg
dec
arpl
mov
imul
ja
xor
rclb
sbb
lahf
gs
mov
fsub
inc
fcmovb
cld
lcall
es
fnstsw
push
clc
pop
push
icebp
enter
pop
sub
das
adc
mov
mov
pushf
mov
ljmp
or
lea
lahf
je
or
lods
call
inc
push
sahf
cmc
add
mov
mov
testb
xchg
and
adc
in
test
fsubl
jbe
movsb
fidivs
test
rorb
xchg
mov
pushf
inc
gs
jne
add
mov
xchg
call
flds
mov
pop
pop
push
mov
fisttpll
jb
cmp
xor
fisttps
icebp
sarb
enter
cwtl
movsb
cmpsl
mov
fs
mov
mov
mov
xor
pusha
jbe
shlb
int3
xchg
sub
lret
std
dec
pop
out
popl
movb
dec
popf
je
fildll
lods
jmp
jo
decl
mov
lret
mov
pop
cmp
ss
lock
mov
inc
jg
shrb
je
mov
mov
popf
addr16
stc
lock
lea
mov
and
pop
inc
sahf
cmp
mov
inc
xchg
sbb
out
out
xchg
xchg
adc
dec
in
daa
shrb
lods
jmp
popf
adc
dec
inc
xchg
adc
in
ds
es
sub
imul
and
shrw
aas
int
cli
js
cmp
lcall
or
xchg
adc
dec
adc
pop
pop
ret
mov
jp
in
xlat
cwtl
clc
and
push
clc
jg
pop
sub
mov
jb
int3
shlb
test
mov
stos
and
loop
dec
inc
mov
pop
jo
and
jae
and
or
in
roll
mov
push
insl
jge
xchg
test
hlt
mov
and
or
jnp
sub
sbb
and
pusha
mov
outsb
scas
jl
ret
sub
sub
pop
push
pop
pop
mov
dec
push
lahf
cmp
nop
idivb
pop
in
cmp
fstps
jl
cmpsb
insb
xor
mov
loopne
sbb
lcall
push
ret
pavgb
inc
ret
inc
test
inc
test
sbb
xor
and
mov
mov
jmp
mov
xchg
push
push
pop
mov
push
cltd
mov
or
push
leave
sub
call
pop
out
xchg
jmp
clc
addl
push
std
mov
popa
xorl
sti
popa
xor
add
cli
mov
mov
or
mov
xor
jne
pushf
mov
xchg
jecxz
sbb
movsl
sbb
jle
push
jbe
push
jb
xor
xchg
and
fldt
dec
push
pushf
adc
push
sbb
sti
push
sahf
and
mov
mov
mov
mov
cmpsb
pop
pop
jno
cmc
cmp
cmp
scas
ret
mov
push
mov
cwtl
in
cmp
xchg
cs
and
add
shl
push
xor
add
cmpsl
mov
repz
sbb
cmpsb
call
dec
scas
inc
mov
popf
dec
in
pop
jle
dec
cmp
fwait
cmp
imul
sarl
jl,pt
outsb
jp
pop
sub
mov
push
mov
inc
add
and
inc
stos
mov
sub
dec
push
jns
or
shrd
sbb
je
or
fmuls
sbb
add
cltd
sbb
ret
cmp
dec
push
leave
fwait
lds
shll
jg
jne
pop
shll
dec
pop
xchg
out
roll
js
ss
inc
xchg
enter
mov
scas
test
movl
repz
lods
and
pop
xchg
add
jns
enter
dec
movsb
jecxz
insl
inc
push
les
lea
mov
sahf
pop
fucom
and
add
test
lret
or
in
inc
mov
js
add
leave
pusha
inc
outsb
daa
mov
add
fistpl
ret
jnp
mov
xchg
add
cmp
xor
aas
pop
int
fdivrl
outsl
loope
imul
mov
jecxz
jp
dec
addr16
mov
adc
mov
mov
icebp
in
insl
push
movsl
and
jp
mov
lds
lds
lock
cmp
sbbl
jbe
sbb
cmp
sbb
mov
sub
xor
jb
fdivrp
imul
mov
pop
inc
cs
das
aam
fs
shrb
mov
dec
push
in
mov
fst
mov
add
ret
sub
je
outsb
dec
loopne
ljmp
mov
cmp
jge
xchg
stos
pop
push
push
mov
cmc
pop
xor
jne
insl
add
das
outsl
loopne
rcll
push
in
push
pop
push
mov
xchg
push
or
fisubrs
cmpl
rcrl
jg
aaa
stc
nop
imul
inc
push
stos
mov
push
test
fldenv
fcompl
mov
shrb
fwait
cwtl
mov
fnstenv
cltd
inc
mov
fwait
push
xchg
cs
add
int
jae
test
pusha
xchg
out
inc
jle
mov
add
push
dec
cld
scas
andb
push
addr16
mov
out
fldl
cli
jb
or
pop
cwtl
xchg
nop
daa
jnp
or
and
stc
push
mov
sbb
ret
xor
pop
das
push
inc
in
test
pop
out
sbbb
iret
xchg
mov
cld
push
jmp
sub
leave
shrl
push
inc
jne
ret
pop
push
inc
lea
pop
fildll
inc
pop
mov
inc
loop
add
clc
dec
out
imul
pushf
sbb
mov
dec
jne
dec
ds
mov
bound
dec
dec
mov
mov
fldcw
jns
or
dec
push
fiadds
push
scas
push
push
sub
push
in
arpl
sub
sbb
pop
outsb
imul
add
sarl
mov
dec
xor
sub
iret
daa
int3
std
mov
mov
lods
jg
outsb
mov
or
movsb
dec
dec
mov
cmp
mov
mov
dec
sbb
incb
arpl
imul
cld
jno
fldl
cmp
add
cmp
xor
dec
or
jnp
pop
xor
push
jns
test
add
mov
xchg
gs
sbb
fs
mov
push
jl
aaa
mov
push
outsb
jl
rcrl
mov
ljmp
js
mov
pop
inc
cltd
pop
lock
ret
xchg
out
mov
mov
jl
scas
and
pop
xor
xor
dec
mov
gs
rclb
xor
lods
lock
arpl
xchg
sub
in
aas
mov
xchg
imul
mov
aam
out
jl
ret
jge
dec
jnp
add
es
jb
pop
cltd
andl
popf
cmp
negb
enter
leave
test
out
xor
xchg
lea
fs
or
sub
xchg
inc
inc
loop
jle
negb
psadbw
pushf
cmp
mov
nop
jmp
or
sbb
repz
jp
xchg
pop
mov
insl
test
mov
add
adc
cmpxchg
fildll
mov
xchg
sub
xchg
dec
ffreep
jnp
or
add
and
mull
or
lcall
and
jae
pop
scas
cmp
mov
xchg
scas
inc
and
mov
arpl
add
cmp
in
inc
or
sbb
adc
outsb
inc
pop
fwait
sarl
mov
pop
and
popf
stos
fsubl
xchg
pop
ss
movsl
call
loope
shr
push
sbb
out
mov
std
add
call
dec
mov
push
mov
dec
outsb
daa
out
push
insb
loope
dec
and
fsubrs
or
in
sub
sbb
mov
loope
mov
pushf
frstor
fmull
stc
hlt
xor
or
out
popf
pop
mov
push
sub
test
shll
add
enter
std
fs
je
xchg
cmp
in
xlat
repz
sbb
outsb
test
mov
inc
sub
xlat
stos
lock
in
movsl
xorb
fidivs
in
push
dec
icebp
fistpl
pop
insb
lock
repnz
mov
shlb
xchg
addr16
and
imul
pop
xchg
add
lods
cmpsl
js
xor
push
mov
das
std
and
and
cld
pop
ljmp
jg
jo
aad
repz
adc
mov
sahf
inc
inc
xchg
outsb
add
jle
mov
mov
rcl
ja
ss
imul
addb
pusha
xor
jp
mov
lcall
je
and
sti
push
mov
stos
and
stos
pop
mov
push
cld
and
inc
inc
push
shl
adc
fstps
mov
jns
gs
lcall
and
stos
sahf
clc
sub
dec
xlat
mov
inc
mov
mov
mov
push
cmp
fwait
pop
cmp
mov
test
mov
mov
push
je
or
sub
hlt
mov
inc
ficomps
incb
mov
repz
fwait
outsb
aam
sub
mov
orb
jns
pop
js
or
daa
fsubrs
xor
mov
sub
add
insl
mov
push
sbb
repnz
into
and
push
imull
loopne
push
sub
ret
xor
mov
test
fldpi
ret
mov
cmp
scas
ret
int
inc
xchg
mov
inc
test
out
push
cmpsl
out
inc
sub
je
push
xor
fmull
xlat
fimull
in
int
das
cmpsb
iret
stos
sbbb
mov
mov
pop
sub
insb
pop
fnstenv
sahf
jne
mov
lods
sbbb
cmp
aad
add
mov
add
sub
push
pop
lods
push
pusha
fcmove
and
push
dec
lods
mov
adc
cmp
xchg
adc
mov
add
xchg
pusha
fistpl
ss
rep
sbb
or
daa
or
xchg
mov
lret
int3
mov
sub
xchg
rcr
xor
push
call
hlt
dec
shrb
repz
mov
aaa
xchg
jae
inc
mov
rorb
insb
and
out
or
sbb
cmp
mov
fdiv
repnz
clc
mov
push
das
jg
test
dec
es
or
cwtl
add
jae
cmpl
xlat
cmp
mov
dec
dec
mov
lret
dec
movsl
movsb
loopne
cmp
fimuls
fistl
xchg
xchg
mov
fld
pop
and
push
add
test
sub
xor
or
popa
and
pop
fwait
daa
lods
mov
or
ret
xor
mov
cmp
mov
sub
bnd
pop
cwtl
dec
cmp
and
in
inc
cmp
cmpsl
push
subb
mov
bound
mov
mov
inc
lahf
xor
mov
xlat
outsb
push
xchg
loope
pop
pushf
sub
jmp
mov
aaa
int
pop
orb
iret
jno
cmpsb
dec
xchg
pop
outsl
mov
mov
idiv
inc
add
ret
arpl
push
pop
push
imul
inc
cwtl
adc
fldcw
inc
loop
mov
pop
aad
xor
test
flds
and
adc
mov
jge
stos
lods
in
incb
inc
sbb
int3
push
push
mov
bound
jae
rcr
cli
loop
das
push
sbb
nop
dec
lds
xchg
cwtl
lock
aam
xchg
cmp
out
sub
jns
mov
enter
and
mov
cmp
sarb
ficompl
loop
fcomi
cmp
adc
stos
fstl
addl
imul
divb
repnz
mov
push
inc
lret
rcrb
jge
clc
xchg
mov
fisubl
int
pop
xor
xchg
jp
dec
jo
repnz
dec
adc
push
outsl
or
mov
xorb
shrl
dec
in
mov
or
mov
push
in
in
rorb
and
aam
cmpsl
jg
mov
stos
cld
xor
inc
inc
fdivs
in
xchg
outsb
cmp
filds
pop
pop
jbe
adc
xor
mov
inc
jp
fsubr
jo
cli
inc
popa
fs
jb
push
fistl
lock
add
mov
push
mov
gs
stos
mov
les
xchg
sbb
aam
cld
jb
hlt
jl
sahf
outsb
sub
mov
mov
mov
mov
mov
or
ret
js
push
call
in
jno
insb
mov
les
cmpsl
vpsubsw
loope
fcmovu
sub
dec
fs
cmp
jge
leave
cmpb
dec
sbb
add
mov
es
mov
gs
xor
lret
jmp
sbb
push
mov
mov
ds
pop
or
mov
les
pop
dec
aas
cmp
xchg
ficompl
sub
int
xor
pop
and
add
fcompl
xor
hlt
mov
push
stc
nop
scas
stos
cmp
outsl
xor
shl
ss
pop
jge
int3
sub
in
fwait
mov
int
in
test
in
mov
fstl
pop
xchg
add
mov
sbbl
inc
mov
inc
jnp
pop
lock
aad
push
fidivrs
xchg
repz
pop
mov
sbb
fistps
lcall
mov
cmp
aam
cld
xchg
cmp
ss
out
push
pop
lock
sbb
push
fsub
aad
xchg
push
fidivrs
mov
adc
mov
jb
popf
push
sarb
ficomps
mov
jb
push
xchg
push
mov
or
jmp
leave
mov
fmulp
es
ds
test
sub
shl
or
test
pop
or
xchg
rorl
xchg
mov
iret
and
sbb
pop
sbbb
test
cmp
xlat
cmpsb
les
mov
xchg
jbe
fcomps
cmpsl
loopne
cli
push
nop
in
in
mov
call
jno
cmp
es
or
fsubr
add
out
dec
xchg
pop
test
fwait
mov
out
mov
icebp
outsl
dec
dec
add
jle
and
pop
pusha
scas
mov
hlt
add
es
mov
sbb
shrl
popa
pop
out
cmp
xchg
jae
shrb
push
out
test
ljmp
shrb
test
data16
add
gs
adc
mull
sub
push
inc
cmpsl
inc
jbe
cmp
lahf
xor
lret
sub
rcll
outsb
xchg
mov
xchg
cmp
ret
int3
sub
xorb
test
mov
sbb
loop
adc
add
inc
popf
pop
sbbb
dec
popf
loopne
add
in
jmp
mov
cmp
push
aad
fimuls
xchg
hlt
out
mov
ret
in
push
jb
fs
stos
in
lahf
push
call
movsl
mov
jne
fwait
xchg
fisttps
xor
jl
mov
out
sbb
add
outsl
xor
jecxz
inc
sbb
sub
sbb
pop
insl
testl
cmp
notl
inc
xlat
mov
cltd
flds
in
and
insl
adc
jl
jle
rcl
outsb
add
or
test
js
ficoml
cmp
mov
repnz
out
or
mov
call
inc
jg
jle
aaa
mov
test
mov
mov
sqrtps
sbbb
cmp
int
sub
add
mov
gs
xor
addr16
test
dec
xchg
mov
mov
lock
add
sbb
into
jae
cmpsb
push
rorl
leave
insb
les
outsb
in
push
push
test
mov
inc
add
pop
push
test
add
arpl
ret
ds
mov
push
cmp
cmp
mov
or
cmp
jl
pop
sub
pop
or
pop
push
dec
mov
pop
mov
out
test
or
jmp
inc
sbb
into
shrb
pop
inc
adcl
cmpsl
rep
mov
insl
insl
stos
pop
sbb
in
push
mov
mov
sub
mov
leave
pop
push
jne
mov
decb
nop
xchg
outsb
dec
das
cld
lcall
pop
pop
pushf
stos
mov
sub
inc
push
loop
inc
in
int
mov
lea
push
sbb
sub
inc
sub
cmc
add
out
fnstsw
and
lds
push
jns
xchg
sti
leave
add
cs
lods
xchg
xor
fistl
addr16
and
and
js
pop
mov
push
push
in
jbe
fbld
or
das
rclb
test
fcoms
shrl
stos
xchg
mov
aas
add
int3
dec
jge
stc
mov
add
xchg
xchg
adc
cld
sbb
loopne,pn
clc
push
xchg
jne
dec
daa
jg
adc
cmp
lret
mov
lods
sub
fildl
lods
cmp
jno
stos
mov
ss
aaa
dec
add
adc
popa
xchg
gs
or
clc
nop
sahf
movsl
mov
or
mov
subl
insl
add
jl
mov
mov
pusha
lods
xchg
mov
cmpsb
mov
push
movsl
sbb
mov
out
ja
pop
mov
test
outsl
mov
lea
xchg
shr
sbb
push
outsl
pusha
sbb
loopne
loope
stos
in
xchg
xchg
scas
ljmp
std
mov
and
nop
fdiv
into
loope
in
imul
dec
dec
repz
add
push
lahf
sbb
add
loop
adc
cmc
cmpsl
cmp
dec
xor
test
push
das
push
iret
jge
pop
lahf
or
andb
nop
fs
cmpsl
rcrb
xor
pop
out
push
mov
add
mov
push
pop
addr16
lahf
das
add
pop
mov
arpl
and
pop
arpl
pop
out
mov
xor
mov
int3
shlb
in
mov
push
sub
lods
add
in
inc
sti
adc
pop
and
inc
cltd
out
add
lea
xorb
fldcw
cmp
popa
mov
arpl
shlb
insl
neg
push
jbe
inc
cld
jne
sub
loop
jae
mov
in
fidivl
cmp
fmuls
adc
xor
xorl
push
dec
lea
mov
mov
push
nop
fld
loopne
mov
mov
imul
inc
push
mov
out
xor
push
mov
pop
push
loop
mov
sbb
mov
ss
out
push
xchg
push
mov
ss
jae
cmp
or
test
and
int
in
dec
test
mov
iret
jo
fdivs
lret
mov
lret
pop
pop
push
and
mov
mov
cmp
mov
push
imul
mov
mov
gs
dec
movsb
ret
test
cmpsb
jg
or
fstpt
jno
push
cmc
shrb
dec
inc
rsqrtps
sub
pop
lock
mov
xchg
arpl
scas
add
dec
push
lods
jo
out
push
jmp
and
sahf
xchg
jno
push
addr16
pusha
or
in
or
or
popf
mov
fidivs
iret
mov
movsb
push
push
je
push
jmp
mov
or
das
std
add
pop
mov
notl
imulb
in
xlat
or
fisttps
jp
mov
push
cwtl
rolb
or
call
sarl
in
outsb
popa
inc
dec
sbb
testl
and
xor
mov
jg
popa
cli
mov
xchg
xor
add
mov
shrb
or
imul
mov
inc
lods
dec
iret
push
or
push
jae
xchg
adc
popa
fnstsw
mov
dec
inc
push
mov
sub
add
es
ret
sub
add
ss
inc
dec
ljmp
cmp
push
jmp
add
iret
sbb
and
cmp
notb
les
stc
pop
xor
into
xchg
loopne
mov
fcoml
or
in
addb
inc
pusha
xor
pushf
push
and
xor
in
jno
daa
icebp
test
test
add
dec
repnz
jno
lcall
cmp
mov
dec
idivb
inc
push
es
test
ror
out
lret
hlt
push
xor
mov
mov
dec
pusha
push
pop
sbb
jle
fld1
and
into
jl
mov
pushf
cli
in
into
subl
xor
ja
push
and
test
pop
cmp
xchg
dec
and
arpl
fisubs
mov
xchg
jl
jns
loop
sbb
sbb
cltd
sbbl
fldcw
pop
pop
jle
push
andl
add
inc
jb
sbb
fdivs
pusha
cmp
or
int
es
mov
in
push
repz
jo
outsb
adc
mov
dec
sbbb
push
mov
sub
pusha
popf
and
arpl
xchg
mov
xchg
sbb
ss
lods
xchg
imulb
scas
mov
jmp
in
mov
je
das
test
cmpsb
aaa
pusha
outsb
sub
xchg
and
mov
mov
outsl
lcall
fucom
scas
out
int3
repz
push
outsl
jns
loopne
sarl
loop
xor
pop
inc
sbb
insl
mov
mov
pop
lods
add
cwtl
into
jg
mov
pushf
jo
cs
aad
xchg
sub
push
sbb
adc
mov
or
sub
movq
cmc
fildll
das
xchg
cmc
mov
xchg
shl
sub
daa
add
and
xor
insb
aad
dec
push
cmp
test
popf
cli
xor
iret
mov
dec
fimuls
int3
fcmovnb
outsl
fnstsw
negb
or
mov
adc
xor
ret
xor
test
into
adc
in
cmp
sbb
dec
sub
cmp
sbb
stos
xchg
sub
push
mov
push
inc
or
mov
or
fisubl
popa
pop
icebp
cmp
lods
xchg
sub
je
pop
cmpsb
jle
pop
icebp
jno
fidivrs
es
pop
loope
adcl
jl
stos
xchg
sahf
or
out
xchg
scas
push
add
sbbb
pusha
in
push
mov
xor
fistl
mov
xchg
repnz
xlat
push
ret
xorb
cmp
inc
loop
cmp
jne
mov
ljmp
xchg
in
cmp
pop
jmp
outsb
xor
sbb
loop
popf
mov
sub
bound
lcall
adc
cli
rcll
es
imul
push
and
mov
int3
dec
push
inc
scas
aas
jp
sti
and
dec
ror
lcall
jno
xor
out
ficoml
rcll
gs
mov
xchg
insl
sub
sbb
rcrb
shl
sbb
sbb
sub
ss
enter
sbb
xchg
jo
or
fisubrl
ret
loopne
dec
movsl
mov
adc
push
and
rorl
je
outsl
daa
cmp
xlat
xchg
lcall
stc
rorb
push
inc
daa
jns
aaa
xchg
test
add
lcall
cmpsb
add
test
popf
enter
repz
push
pop
loope
xchg
pop
dec
dec
or
jmp
cltd
ja
in
xchg
lea
xor
orb
rcrb
notl
push
fstpl
xchg
mov
mov
xor
xchg
insb
das
lahf
rcll
adc
repnz
aam
mov
xchg
mov
insl
push
pop
jmp
xorb
or
test
mov
daa
movswl
fxch
scas
add
mov
mov
mov
or
aas
dec
pop
arpl
sbb
cmp
sbb
and
mov
or
pushl
cmpsl
ds
vpsubsw
lods
fdiv
iret
js
bound
pop
into
adc
jl
iret
xchg
jecxz
adc
push
aad
pop
pop
scas
inc
dec
imul
cwtl
std
outsl
push
cli
mov
xor
xor
jp
iret
mov
jge
xchg
scas
fistl
add
jne
arpl
cmp
stos
xchg
imulb
jae
cmp
cli
jns
xor
std
jo
test
jb
or
push
xor
mov
pop
and
leave
into
xor
cld
gs
pusha
pop
sub
cmpsb
xchg
pop
xchg
out
insl
mov
cmp
sbb
flds
arpl
sbb
subl
inc
jae
sbb
dec
fsubrl
hlt
and
test
add
sub
in
xchg
add
adc
mov
test
sarb
dec
ret
and
pop
in
enter
clc
or
add
mov
cli
stos
cmpsl
mov
push
xor
xchg
sub
ds
adc
pop
lock
subl
pushf
or
jp
jmp
imul
rorl
sbbb
fwait
pop
loope
loopne
push
fisttpll
jb
dec
int3
sub
out
aaa
aad
dec
mov
adc
int3
mov
clc
es
sub
push
inc
jle
push
mov
push
cmpsb
ljmp
mov
mov
cmp
imul
icebp
js
cmp
sub
add
cmpsl
movsl
aaa
xor
jnp
test
push
je
pop
cmpsb
xor
pop
dec
mov
ds
lret
push
pop
sub
nop
divl
xor
aad
jae
and
pop
stos
aam
xchg
add
push
dec
popf
hlt
incb
xchg
jbe
int3
xor
sbb
testl
aaa
and
push
mov
inc
push
sarl
popf
imul
lret
es
stos
addl
sar
mov
loopne
test
adc
out
lods
repz
pop
dec
xchg
cltd
xor
leave
movsb
xchg
loop
and
mov
jae
add
into
sbb
push
jp
jg
fdivs
in
das
jmp
dec
movsl
and
or
add
inc
xor
lock
mov
or
inc
ds
sbb
mov
inc
hlt
js
fcomip
mov
add
nop
sbb
fmuls
add
sbb
mov
xlat
outsl
push
test
addb
jbe
xlat
mov
pop
mov
lret
xor
fidivrl
sahf
sub
je
push
mov
ja
outsl
mul
mov
aas
adc
jge
dec
jb
fstl
add
mov
add
mov
add
push
lret
adc
mov
shlb
leave
add
pop
sub
cmpsb
jp
fwait
ds
push
inc
mov
push
pop
jo
push
sub
sub
dec
sbb
mov
push
push
xchg
cmp
leave
shrl
cld
and
push
imul
sub
sbb
add
jno
fisubrl
or
inc
pop
bound
push
mov
mov
dec
add
mov
mov
repnz
outsb
test
jp
push
pop
scas
mov
xchg
ja
cmpsb
test
xchg
sub
cmp
pop
icebp
clc
cs
cmpsb
aam
pop
pop
sbb
fsubrs
dec
pop
out
or
scas
pop
push
mov
insl
bound
sbb
cld
cmp
xor
xchg
pushf
or
ror
add
sub
xchg
in
mov
ljmp
mov
xor
sbb
mov
inc
sti
sub
jge
cld
shrl
mov
push
cmp
sub
cwtl
xchg
add
ret
pop
xor
fistl
pop
mov
jmp
lock
pushf
divb
mov
push
rcrl
in
jecxz
inc
mov
fists
xor
test
push
rcrl
add
out
scas
scas
xor
movsb
pusha
add
out
xchg
pop
shrb
sub
inc
dec
aas
movsb
aas
sub
loopne
mov
js
push
xchg
jae
add
cld
jg
icebp
fcomp
ljmp
call
xor
shrl
add
sub
addr16
sbb
mov
aam
jbe
pop
xchg
iret
pop
mov
cld
int3
pop
neg
sbbl
outsl
repz
loopne
js
fidivrs
mov
dec
cli
sbb
or
lods
xchg
pop
filds
xchg
sub
inc
iret
mov
in
mov
insl
dec
mov
jecxz
jne
bound
pop
pop
addr16
ljmp
ss
mov
cmpsl
push
out
sti
xchg
xor
repnz
sbb
outsl
loop
mov
cwtl
aas
xchg
cmp
inc
jae
jns
imulb
adc
mov
push
leave
inc
repnz
xchg
and
call
cmp
sarb
ret
jle
pop
out
aas
aam
lret
jnp
outsb
mov
xlat
in
cmpsl
mov
stos
add
stos
ljmp
inc
mov
shrb
ljmp
ja
cmpsl
ds
sbb
lret
bound
js
ds
jo
pop
mov
jbe
xor
je
fs
mov
lret
sub
fistl
or
popf
xor
xchg
push
insl
fs
ror
cmc
mov
lret
std
repnz
fiaddl
add
scas
inc
repz
scas
cmp
inc
cltd
out
jb
adc
je
push
xchg
hlt
data16
jae
pushf
xor
test
push
fisubrl
xchg
sbb
call
loope
jmp
pop
add
dec
mov
pop
cmc
push
and
dec
insl
pop
adc
xor
sub
push
shll
les
xor
xchg
jecxz
mov
mov
push
fwait
stc
add
shr
mov
sti
lcall
jmp
repz
sbb
sub
dec
add
adc
in
jo
iret
test
or
push
fwait
addr16
pop
cltd
mov
sub
repnz
loopne
pusha
or
aam
xor
jle
sub
loopne
test
mov
addl
ljmp
ja
inc
stos
mov
mov
mov
xor
jp
pop
push
adc
adc
cli
ja
outsb
add
sbb
mov
fincstp
or
movsb
div
adc
nop
add
fidivl
push
or
nopl
or
leave
mov
mov
aas
xchg
enter
mul
sti
mov
pop
mov
add
out
test
lret
push
fcoms
into
dec
je
cmp
call
lcall
lahf
xchg
rcll
push
pushf
and
in
sarl
sub
inc
cli
lret
add
add
jp
lods
dec
mov
mov
sti
sub
jg
inc
in
loopne
fcoms
jne
or
cs
out
subl
cld
jmp
sub
xchg
addl
ret
adc
mov
test
add
cld
jae
jg
inc
cmc
or
jecxz
push
lret
xchg
xor
pop
es
inc
cmc
inc
mov
aaa
ret
add
push
dec
push
pop
mov
dec
fxch
pop
add
bswap
and
mov
xor
pop
cmpb
imul
sbb
dec
sbb
fnstsw
xchg
dec
mov
adc
or
xchg
cmp
cwtl
sub
test
push
aas
repz
or
into
shl
dec
and
dec
inc
mov
movsb
loopne
movsb
xchg
int3
dec
pop
mov
ret
out
data16
or
dec
loop
stos
jge
push
sub
fisubl
xchg
adc
fldt
xor
test
outsb
add
jnp
xchg
inc
mov
sarb
sbb
push
cmpsb
inc
mov
cmp
adc
clc
mov
push
adc
lock
mov
push
xor
shll
andl
les
sub
mov
jno
inc
push
xlat
mov
js
sub
pop
and
inc
xor
mov
jmp
ret
jg
xor
into
fs
mov
or
subb
repnz
pop
jb
repnz
adc
adc
and
jnp
cmp
inc
pop
sub
add
push
and
inc
fsubl
int
xor
push
xor
popa
jae
fimuls
jl
or
push
sub
stc
inc
fstpl
mov
push
mov
cli
in
rcrl
aam
cmpsb
cmc
jo
mov
pop
add
cs
pop
add
xchg
fiaddl
dec
test
add
mov
addr16
pop
or
cmpl
xor
insb
andb
faddl
sbb
nop
mov
ficoms
scas
pxor
pop
jl
clc
scas
jnp
fisubl
push
fidivl
mov
out
xchg
adc
add
cmp
dec
lret
bound
sbb
sbb
pop
inc
scas
sbb
sub
and
sbb
cmp
jecxz
movsb
les
into
xchg
inc
cld
mov
movsl
sub
pop
push
jge
cmp
insb
xchg
xchg
xchg
xor
push
sbb
and
jmp
pop
sbb
fnstenv
cltd
or
push
adcb
or
push
push
call
sar
add
mov
shl
jb
repnz
aad
cmp
dec
pop
cmp
repnz
mov
add
lret
push
mov
push
repz
push
adc
or
imul
push
mov
pop
loope
sub
js
jb
stc
test
push
ficompl
cmp
jae
sarb
jp
ficomps
adc
dec
and
lods
sbb
insl
sbb
js
inc
outsl
mov
xor
aas
into
fsts
fcmovne
inc
xor
pop
shl
or
adc
jg
sub
jle
ljmp
jno
xchg
mov
rclb
xchg
ss
add
retw
mov
rorb
push
jmp
mov
mov
out
pop
out
les
std
out
sahf
das
pop
stos
inc
push
push
mov
cmpsb
notb
daa
enter
test
add
inc
loope
incb
data16
adc
and
test
xor
lcall
mov
xchg
xchg
fldcw
insb
pop
mov
bound
ljmp
sub
fwait
popa
std
xchg
inc
mov
ret
and
jb
xor
pop
les
test
adc
rcll
push
out
adc
cmp
sbb
jecxz
cmp
add
dec
out
push
fwait
les
adc
clc
loopne
popa
lods
std
add
gs
call
icebp
lret
sbb
dec
dec
sub
rclb
clc
cmp
sub
and
sub
pop
mov
fisttpl
lods
or
jnp
int3
sub
pushf
dec
pop
jge
fldenv
imul
jg
mov
jae
imul
rcrb
adc
push
inc
push
popf
ja
aad
lds
andb
and
ss
lret
scas
push
jmp
dec
stos
scas
mov
or
push
scas
mov
outsl
les
cmc
shlb
fcompl
hlt
aas
and
dec
pop
in
fstpt
xchg
int
loope
js
inc
add
imul
cltd
or
adc
repnz
and
enter
adc
adc
pop
sub
int3
mov
scas
pop
stos
les
ror
data16
jecxz
aas
scas
jbe
loope
jge
and
movsl
mov
jne
and
popf
in
adc
cmp
xor
inc
js
lock
xor
pop
xchg
sub
cmp
jle
mov
jb
cmpsl
lds
or
sahf
xchg
adc
cmc
mov
inc
pop
repz
dec
inc
lret
popa
dec
adc
jg
bound
sbb
adc
inc
negl
mov
mov
insl
push
or
push
test
mov
mov
pop
sbb
mov
addr16
pop
mov
jb
fs
jb
andb
or
mov
ret
mov
mov
fidivl
outsl
enter
dec
call
mov
das
lods
pop
xchg
cmp
cmc
insb
push
mov
inc
stos
je
and
rol
inc
jbe
adcb
cwtl
cmp
pop
popf
inc
sub
jg
add
lods
shr
mov
adc
movsb
mov
mov
imul
inc
test
mov
or
out
cmpsl
lods
adcb
xchg
mov
pusha
sti
push
mov
in
test
xchg
push
jbe
insl
pop
inc
cld
mov
inc
cmc
push
pushf
xchg
call
sub
cs
add
sbb
pop
push
sub
fidivl
inc
in
jno
and
es
or
subl
xchg
sub
and
mov
clc
int3
rcrb
out
xchg
mov
add
mov
xchg
nop
pusha
aaa
inc
mov
stc
jecxz
mov
inc
cmp
pop
stos
rolb
inc
insl
jae
mov
cmp
aaa
imul
push
xor
insb
cmp
imul
lret
add
mov
incl
sbb
in
shrb
jmp
jno
aad
adc
testl
jecxz
inc
push
dec
add
scas
mov
xor
daa
cmp
vpaddq
pop
sub
sbb
jl
popf
sub
fidivrs
rdpmc
scas
xchg
gs
xor
cli
xorl
and
sti
inc
dec
iret
mov
mov
jle
call
jnp
xchg
inc
shrb
loop
int3
fcoml
insb
bound
outsl
jnp
call
stc
nop
sbb
add
lods
addr16
test
jae
movsl
leave
push
dec
add
mov
dec
xchg
or
mov
xor
mov
fisttpll
adc
push
jns
push
cmpsl
jp
or
call
leave
adc
hlt
jecxz
push
adc
mov
inc
sahf
xchg
or
sahf
and
xor
xor
mov
testb
sahf
and
imul
insl
mov
mov
inc
int3
sbb
mov
out
bound
push
std
nop
xor
inc
pop
xchg
insb
add
mov
mov
jmp
inc
in
xor
mov
rdtsc
jnp
mov
shll
mov
inc
out
rcl
pop
adc
push
xchg
sub
push
repnz
xchg
dec
push
jle
jns
xchg
jbe
pop
loopne
cs
scas
pop
out
loopne
add
shr
icebp
or
in
jge
inc
and
adc
and
fwait
mov
fnsave
push
loop
or
inc
testb
bound
sbb
add
pop
push
jmp
loop
mov
sbb
dec
fidivrl
xchg
bound
std
dec
inc
das
sub
andb
or
outsb
sub
loope
push
mov
cmpsb
mov
lds
mov
test
and
inc
out
cmp
sbbl
cld
imul
inc
pop
test
ffree
cwtl
xchg
aad
xor
sti
xchg
mov
mov
mov
push
imul
inc
iret
flds
jo
aam
and
lock
movsl
push
add
es
sbb
leave
sbb
in
addr16
lock
fstl
hlt
cli
shll
aam
in
jp
mov
or
jp
stos
les
fdiv
test
movsb
cmp
in
lods
loop
add
jno
jae
mov
icebp
enter
cltd
dec
loopne
cwtl
stos
lahf
dec
xchg
sub
imul
push
jne
out
outsb
and
push
sbb
xor
pop
icebp
scas
adc
mov
cmovs
inc
mov
stos
push
mov
scas
dec
jmp
sub
dec
adc
movsl
rcrb
fisubrl
push
inc
dec
dec
gs
mov
fstpt
movsb
xor
xchg
movsl
adc
je
outsb
and
repz
sbb
pop
sub
push
mov
sbb
or
stc
out
flds
cmp
lods
fucomp
cmp
repz
adc
pop
out
js
jne
sbb
repnz
es
adcb
xchg
clc
ret
ljmp
add
call
popa
div
xchg
rcl
push
push
jmp
jno
int
lods
daa
mov
pop
fimuls
test
sub
popf
fcomi
xchg
stos
push
scas
popf
cmp
cmp
insb
roll
pop
lds
jb
jecxz
xlat
sbb
xchg
push
test
xor
negl
int
xchg
stc
jg
dec
jbe
pusha
fdivrs
lret
pop
lret
out
scas
in
add
jmp
sahf
cwtl
bound
rcll
sbb
mov
out
inc
fstpt
insb
sub
xchg
mov
inc
lcall
clc
or
push
pop
mov
cwtl
xor
lock
call
jg
sub
stos
popa
dec
mov
add
leave
mov
stc
movsl
cmp
setge
stos
or
xchg
orb
cmc
push
push
xor
out
cmp
shl
mov
push
cmp
icebp
xchg
enter
lods
pop
xor
push
ja
xchg
cmp
in
jbe
jno
imull
ret
pop
dec
cmc
adc
js
lret
dec
subl
out
push
mov
pop
test
xchg
add
adc
aas
adc
mov
xor
lahf
pop
repz
mov
cltd
test
and
jp
adc
lds
divl
fsubrp
push
aam
mov
sbb
lahf
fmull
push
fcmovnbe
das
mov
mov
movl
repnz
mov
out
mov
xchg
ja
fimuls
and
adc
xorl
dec
cmpsb
jl
and
int
es
jmp
fdivr
xchg
or
outsl
mov
pop
inc
stos
cld
sub
ja
jge
icebp
cltd
cmc
mov
adc
int3
push
pop
xor
bound
push
mov
fs
bound
and
cmp
push
mov
repz
dec
xchg
and
jmp
sti
push
popa
and
test
fwait
push
push
icebp
sahf
inc
andl
popa
and
pop
icebp
xchg
bound
popf
sub
mov
sub
les
lcall
stc
aad
jne
sbb
orb
pop
shr
adc
pushf
icebp
sahf
mov
or
shrl
dec
jne
mov
mov
jg
push
pop
bsr
jle
imul
adc
inc
hlt
add
mov
or
ja
test
mov
in
fmull
and
inc
or
push
adc
push
les
jb
push
push
xchg
fdivp
int
sbb
push
imul
repz
pop
hlt
rcll
aad
xor
and
mov
inc
jmp
in
lea
scas
fimuls
push
mov
ds
jl
aas
das
enter
insb
cmp
dec
xlat
sub
push
enter
imul
scas
sbb
sbb
jge
insl
sub
movsb
scas
lods
fcomps
cmc
push
push
cmc
ret
jl
jae
pop
xchg
test
fstl
test
jg
int
or
sbbb
ja
xchg
stos
sub
inc
xchg
test
lret
aaa
inc
in
cmc
enter
in
fs
inc
out
jg
jmp
jo
ljmp
int3
push
ljmp
sbb
push
jge
dec
push
inc
jecxz
sbb
mov
insl
mov
or
scas
nop
add
pop
pop
xchg
adc
test
test
lret
cld
xchg
mov
dec
popf
lds
div
cmpsb
cmp
and
std
pop
mov
mov
mov
scas
sbb
mov
shlb
add
hlt
stc
arpl
pushf
dec
xor
push
outsb
gs
lret
mov
arpl
outsl
sbb
outsl
sub
inc
push
aas
adc
add
sub
testl
sbbb
fistps
or
stos
jle
mov
loope
std
push
ljmp
jb
mov
pop
push
sbb
mov
cmpsb
test
ret
mov
test
je
in
cmp
push
test
adc
cmp
sahf
stos
cs
sub
push
push
sbb
jb
push
sub
popa
gs
jno
push
pop
je
test
jnp
aas
insl
lea
pop
test
dec
js
insl
add
xor
mov
rolb
pop
test
mov
fstpl
inc
jno
aam
vmulpd
cmpsl
pop
or
lods
outsb
addr16
shrb
cmpsb
loopne
clc
push
inc
mov
xchg
ss
ljmp
ljmp
mov
pop
jnp
mov
pop
cs
orl
jne
outsb
push
mov
jno
test
orb
jecxz
bound
js
aas
dec
outsl
jge
out
xchg
pop
call
int3
pop
add
not
add
ret
cmpsl
popa
mov
inc
shlb
pop
scas
mov
dec
xor
jmp
jnp
jno
cmp
dec
cli
inc
enter
fisttpll
dec
sbb
out
es
ret
mov
loop
cmp
inc
or
jnp
push
xor
sar
mov
cmp
or
decb
pop
repnz
dec
cmp
mov
mov
mov
push
inc
adc
ds
aas
ret
orb
movsb
test
pop
adc
jno
mov
cmc
pop
add
adc
ss
nop
fldcw
fiadds
add
pop
jnp
bswap
and
icebp
stos
jge
fildll
add
shrl
stc
jbe
or
lcall
sub
rcl
stc
inc
scas
mov
mov
mov
mov
sub
aad
sub
pushf
movsl
mov
lahf
jae
pop
js
andl
lods
out
int3
aam
pushf
dec
cmp
sahf
out
cmp
loope
inc
es
subb
fwait
into
gs
dec
add
sbb
insb
adc
or
pop
dec
and
sub
popf
cmp
mov
cmp
cmp
push
pop
cmpsb
aam
mov
enter
and
out
xor
stos
cmp
fidivrs
push
pushw
sub
ds
daa
mov
jg
popf
add
xor
mov
fdivp
call
outsb
jbe
add
mov
add
mov
dec
inc
mov
jbe
sbb
push
insl
push
xchg
xchg
push
cmp
cld
test
test
rcl
movsl
pop
ss
mov
adc
add
xor
add
arpl
push
out
xchg
mov
das
push
push
dec
adc
or
jecxz
mov
lods
inc
cwtl
or
pop
cmc
push
nop
scas
add
xor
or
imul
mov
adc
test
rcr
ret
or
sbb
jns
scas
cmp
loopne
or
pop
jmp
mov
or
ds
fwait
aad
or
rolb
stos
pop
iret
jecxz
call
outsb
jl
shlb
cmc
in
push
adc
pushf
jb
fs
add
into
lea
addl
xor
inc
adc
jne
test
add
jo
mov
adc
test
scas
aad
loope
test
fistps
jle
mov
xchg
enter
cmc
aam
mov
mov
aad
lods
add
fnsave
and
sti
push
cmp
push
imul
xchg
popa
in
jnp
and
call
in
scas
and
inc
push
adc
inc
repz
enter
js
loope
out
xor
sti
add
sub
mov
je
add
adc
push
cmp
mov
or
stos
mov
shlb
dec
sub
pop
lock
stos
add
or
stos
ljmp
pop
ds
push
arpl
lods
jbe
xchg
dec
out
push
adc
stc
lret
xor
push
mov
fsubrs
add
mov
in
ljmp
jns
push
pop
cmp
sarl
into
sbb
sbb
dec
decl
sub
xor
push
cmpb
xor
js
mov
jl
sub
shrl
lret
neg
out
int3
out
mov
dec
inc
inc
pop
adc
jmp
jg
lea
outsl
and
in
mov
mov
adc
fistpl
lahf
scas
call
xchg
pusha
add
cmp
aam
push
jmp
dec
insl
jo
lahf
outsl
movsb
jecxz
xor
popf
sub
lahf
jns
lds
scas
or
sub
sub
add
or
inc
cmp
mov
pop
push
idivl
sti
xor
push
scas
pop
jge
leave
and
pop
inc
mov
imul
or
aaa
iret
stos
icebp
negl
pop
out
dec
aad
and
cmp
inc
fsubrs
or
dec
mov
fistl
cmp
movsl
cmp
out
or
push
mov
test
cmpsb
lock
cmpsb
fcompl
movsl
jbe
push
hlt
jae,pt
cs
stc
test
loopne
push
and
fwait
cmpsl
lds
fstps
mov
call
mov
sub
adc
repz
jp
clc
repnz
push
sub
push
in
xchg
sbb
icebp
or
mov
aas
mov
mov
push
mov
ret
mov
cmp
xchg
addr16
in
aam
lret
jns
sbb
jo
ds
and
je
insl
sbbb
daa
sub
jbe
dec
pop
cmp
inc
sub
jge
dec
lahf
xor
es
xchg
in
inc
cmpsl
xchg
movsb
xchg
insb
pop
scas
or
push
mov
pusha
negl
jmp
mov
movsb
push
pushf
lods
jle
les
and
insl
leave
cmp
push
jl
push
sub
test
sbb
xchg
xor
cmp
cmpsl
mov
xor
enter
in
xor
adc
data16
stc
push
jne
ljmp
cmc
push
mov
shrl
ficomps
cmp
fnstenv
and
incb
test
jmp
cmp
cltd
hlt
mov
daa
test
sub
jecxz
stos
jno
imul
jbe
jne
mov
popf
push
or
sarl
lods
push
sbb
pop
insb
mov
shrb
mov
push
mov
sarb
lea
push
scas
mov
xchg
ss
test
aas
mov
push
jmp
mulb
or
enter
loopne
and
mov
push
aaa
fisttpll
orb
out
stos
dec
dec
hlt
cltd
sbb
push
and
and
inc
lret
and
fucomi
aaa
mov
pop
addr16
mov
add
sub
popa
adc
jge
push
scas
mov
mov
arpl
out
insb
jle
xchg
lods
or
push
data16
pop
pop
cmp
mov
xchg
sbb
pop
cld
in
in
xorb
mov
outsb
fisubrs
das
mov
jl
ret
ds
shl
mov
test
aam
xchg
push
scas
inc
xchg
add
cmpsb
jle
out
sub
bound
mov
add
mov
pop
pop
sbb
rcr
jl
jl
and
mov
sbbl
call
and
add
pop
adc
sbb
or
aam
test
in
add
aad
rorl
repnz
pop
nop
outsl
ljmp
imul
clc
loopne
aad
sbb
mov
test
cmpsl
outsl
mov
ficompl
in
push
fwait
mov
xchg
inc
xor
cmpsb
pushf
push
inc
sbb
aam
inc
arpl
jbe
icebp
pusha
scas
cmp
das
shll
movsl
adc
xor
adc
lods
loopne
xchg
shrl
pop
push
fneni(8087
xchg
imul
or
mov
sbb
fisubs
insb
push
rcrl
xchg
add
jae
pop
in
fcmove
mov
cltd
test
cwtl
sub
dec
aad
arpl
imulb
inc
cmpsl
sub
inc
outsl
xchg
dec
pop
imul
out
imulb
xor
pop
lds
aas
lds
push
scas
inc
cmpsb
fidivl
lret
lea
nop
inc
cwtl
ret
xor
adc
push
mov
mov
mov
call
ficoml
lods
fs
or
cmp
in
data16
dec
loop
or
lahf
mov
imul
pop
push
out
mov
clc
adc
mov
sbb
rcr
cli
jb
mov
movsb
aaa
rcll
xchg
repz
pushf
lods
stc
cmp
mov
mov
fldcw
mov
sub
inc
xchg
fwait
out
cmp
inc
popa
sbb
scas
sbbl
dec
into
sub
mov
xor
mov
fisttps
outsl
pushf
add
scas
cmpsl
xor
iret
and
mov
test
mov
lods
add
jno
dec
lods
mov
out
test
add
lods
inc
jbe
pop
shl
arpl
push
testb
out
adc
ret
push
jno
in
inc
sub
pop
test
out
test
or
js
into
and
cs
and
push
or
jmp
cmp
sub
test
ret
enter
xor
ss
mov
cmp
ds
clc
mov
sarb
add
stos
orb
push
fstps
subb
xchg
mov
sub
nop
cwtl
das
ret
into
pop
mov
aam
rclb
mov
sub
dec
loope
testl
clc
add
je
dec
je
push
xlat
push
stos
inc
xchg
inc
pop
jmp
out
mov
shl
pop
jae
shlb
jne
add
in
mov
jno
dec
add
test
filds
or
rcrl
adc
adc
ljmp
push
mov
mov
xchg
xchg
fdiv
pop
mov
xchg
sub
mov
leave
insl
xchg
push
sbb
mov
mov
sbb
test
loop
out
flds
sbb
js
test
shll
xchg
mov
add
xchg
repnz
mov
fwait
push
jmp
add
push
jmp
xor
dec
test
pop
repnz
in
push
ljmp
sbb
repnz
cltd
mov
insb
xchg
ret
add
sub
push
lods
mov
int
cltd
das
icebp
push
xchg
sub
iret
jb
sub
mov
aad
dec
or
packssdw
cmp
jno
cmp
mov
data16
insb
pushf
mov
cld
int3
add
dec
and
gs
lret
mov
and
mov
lret
sbb
orb
loopne
xchg
ljmp
popl
jns
mov
lds
xor
pop
pop
mov
jno
jge
insl
fnsave
mov
sahf
xor
sbb
inc
clc
int
stos
insb
mov
push
fwait
adc
cmpsb
or
dec
daa
clc
call
xchg
divb
scas
mov
test
push
insl
push
in
scas
imulb
mov
add
cmp
xor
jno
push
or
jl
jno
sub
pop
incb
adc
rolb
cmp
loope
test
lods
idivl
xchg
add
add
movsb
xchg
cld
nop
sti
jae
adc
push
mov
call
fdivrs
outsl
push
les
adc
mov
shll
shrl
loop
jmp
je
push
push
mov
mov
test
filds
inc
push
fldl2t
cwtl
aas
loope
mov
sub
les
scas
pop
xor
je
notl
fbstp
fnstenv
push
jle
sti
pop
sbb
jle
inc
pushf
push
mov
mov
rorl
or
and
pop
add
push
ret
test
loope
push
mov
xchg
lret
imul
pop
aas
fidivl
push
fsubr
inc
mov
inc
mov
xor
sahf
xchg
stos
insb
inc
fstpl
jmp
sti
sbb
xor
push
sbbl
xor
mov
aad
les
or
lods
sub
mov
lret
stc
popa
in
ja
push
dec
fidivl
mov
mov
sub
dec
in
sub
imul
adc
pop
sbb
or
mov
sbb
nop
sbb
add
sti
adc
imul
push
pushf
dec
es
or
ljmp
inc
bound
stos
pop
ljmp
es
pop
mov
jp
dec
loope
cltd
cmpsb
jecxz
add
mov
pop
xchg
xor
pushf
cmp
shl
and
cmc
add
cwtl
inc
mov
movsb
repnz
ja
xacquire
pop
repz
icebp
repnz
adc
cmp
movsb
fs
ret
sbbb
sbb
scas
push
mov
mov
and
cmpsb
cmp
sub
rolb
inc
aad
sbb
and
adc
xor
das
cmp
cmp
out
adc
sub
dec
mov
dec
or
xor
or
sbb
rol
arpl
ret
sbb
push
inc
or
cwtl
mov
jmp
pop
and
rcrb
enter
pop
loope
mov
mov
daa
scas
mov
pop
inc
adc
dec
sti
xchg
jge
sbb
decb
jl
dec
mov
sub
jle
or
sub
dec
std
testl
imul
jno
pop
adc
out
xchg
fucom
jnp
mov
sti
push
sbb
cmp
in
repnz
inc
fwait
pop
cmc
cltd
loop
sbb
aam
jb
and
cwtl
aaa
cmp
cmpsb
mov
jno
adc
inc
push
negb
imulb
sbbb
cmp
jg
sbb
push
mov
js,pt
mov
in
jp
sbb
arpl
aam
test
data16
inc
sub
adc
shll
pop
push
jno
ljmp
push
imul
adc
mov
cmpsb
cmp
xlat
mov
adc
or
cmpsl
inc
mov
in
lods
out
jp
jbe
mov
add
orb
sub
xchg
fldcw
mov
adc
jecxz
fld
xchg
xor
cwtl
pop
lock
pop
popf
mov
mov
push
sbb
in
lret
cmp
add
sbb
loope
rorl
sbb
mov
fcoml
mov
xchg
mov
fcmovu
jb
ljmp
fldenv
testl
loope
sti
or
xchg
xchg
dec
xor
add
popa
xchg
dec
mov
inc
xlat
ficompl
jo
test
lock
jne
test
cmp
out
dec
insb
mov
xor
stc
aaa
pop
sub
mov
nop
xchg
scas
fxch
int3
rorl
pusha
xor
rcll
aas
stos
fdivrl
lret
cld
fidivs
adc
inc
mov
xor
cmpsb
and
mov
int
insl
jo
out
cmpsb
cmp
inc
ljmp
push
inc
sbb
js
ja
aas
std
loop
mov
outsb
je
popf
stos
icebp
mov
outsb
sar
jp
mov
pop
jbe
lods
mov
sbbb
inc
lods
lds
jecxz
aaa
pop
push
and
andb
mov
out
dec
or
jnp
outsb
mov
je
pop
and
rorb
mov
and
xlat
loop
mov
fiadds
fsubr
bound
mulb
mov
adc
stos
into
pushf
push
fistpl
stos
cmp
jle
cmp
add
lods
dec
fcompl
push
aam
and
sub
inc
fisubrl
popa
pop
mov
sub
cmp
je
push
in
jp
add
jp
test
inc
stos
inc
enter
sub
or
xchg
adc
outsl
or
pop
out
dec
push
jb
lret
inc
das
ret
rcll
nop
inc
es
ja
into
into
gs
mov
mov
lods
scas
mov
add
addl
lds
dec
mov
jp
xchg
repz
dec
faddl
hlt
sub
jl
dec
mov
out
xchg
imul
add
xor
sub
inc
xor
ss
enter
push
call
jno
ljmp
movl
mov
inc
push
mov
xor
sbbl
decb
sbb
insl
mov
cmpsb
lock
jge
int3
sahf
push
jp
or
add
addr16
jecxz
cmp
mov
stos
arpl
mov
dec
cmpsl
pop
and
nop
movsb
push
insb
pop
mov
xorb
xchg
call
mov
ds
xchg
jp
mov
mov
and
mov
hlt
cmp
aam
sub
ret
scas
pop
je
xor
into
push
adc
je
xchg
or
ja
addr16
jne
cmc
sbbb
mov
cmp
sbb
les
popa
ret
push
loop
cmpsl
mov
mov
rorb
jno
clc
sbb
mov
leave
pop
leave
mull
jnp
mov
pop
mov
sub
test
cmpsl
add
es
xchg
pop
xor
idivb
add
cmp
xor
test
xchg
adc
jmp
dec
lcall
or
push
push
out
push
add
test
lods
push
lods
je
sbb
je
mov
or
xchg
adc
xor
cmp
sbb
les
and
push
in
fs
out
sub
scas
pop
aaa
into
mov
pop
movsl
or
push
mov
orps
sarb
mov
in
inc
fimuls
xchg
xor
dec
dec
hlt
sarb
adc
xor
push
cmp
dec
xchg
jne
cli
sbb
les
movsl
xor
sbb
icebp
mov
cmp
mov
int
and
and
adc
popa
cmp
cmpb
xlat
cmp
cmovp
outsl
add
xchg
mov
aad
push
jle
inc
icebp
test
inc
add
fcompl
mov
and
test
and
push
call
in
imul
pop
bnd
xor
lcall
jns
enter
aas
fsubrs
out
mov
mov
cmp
mov
pop
adc
and
out
dec
mov
inc
inc
mov
xchg
mov
insl
and
cmc
popl
mov
decb
fistps
dec
adc
cltd
and
pop
dec
cmpl
jle
fs
cli
push
push
std
dec
jbe
lahf
scas
push
test
add
sbb
inc
test
sarb
inc
fimuls
and
jae,pn
dec
xor
mov
loop
push
jae
add
push
cmpl
mov
imull
insl
pop
hlt
sahf
jns
js
dec
xchg
adc
add
sti
bound
out
cmp
sub
pop
enter
lods
lock
mov
pop
xchg
jecxz
xchg
sahf
xor
jae
xor
dec
dec
insl
into
repnz
jl
aas
cmp
sbb
sarb
jo
fcmovnbe
dec
mov
mov
lea
or
and
lahf
mov
rolb
add
in
test
inc
test
clc
or
adc
cmp
lcall
in
lahf
andl
shlb
out
xchg
movb
into
add
lcall
je
inc
les
and
pop
or
stos
push
scas
fisttpl
int
arpl
shll
ret
pop
xchg
bound
mov
push
movsb
fcoms
idivb
cmp
pop
mov
jno
sahf
fnstenv
mov
psubsb
shrb
loope
fildll
out
sbbl
or
pop
into
insb
sub
jg
enter
cmp
jne
popa
mov
ljmp
outsb
in
ret
adc
dec
scas
xchg
test
fucomi
mov
movb
fstpt
and
fsubl
sbb
int3
cmp
sarl
and
add
ss
or
mov
jecxz
xlat
cli
pop
push
out
xchg
cs
fsincos
pop
jo
xor
cmc
fdivs
push
xchg
lods
add
imul
sti
arpl
push
mov
inc
clc
xor
pop
addr16
add
xor
hlt
imul
jmp
or
test
push
nop
push
fists
ret
xor
js
aaa
test
push
add
xchg
push
mov
pop
loop
push
mov
out
pop
dec
cmpl
xor
dec
sbb
ds
xor
mov
outsb
insb
sbb
roll
cs
pushaw
or
xchg
mov
icebp
rorb
mov
xchg
int
mov
xchg
jg
inc
cmc
ja
arpl
and
mov
push
push
arpl
in
pushf
decb
lea
iret
or
xchg
jbe
les
shrb
lcall
leave
jnp
add
cmpsb
test
imull
cmp
cmp
out
dec
push
sar
pop
push
jo
pop
pop
jmp
mov
or
outsl
lcall
in
imul
mov
jo
sbb
fdivs
out
fs
ret
jno
mov
ret
fisttpl
je
mov
pop
rolb
jmp
scas
daa
mov
push
push
inc
jnp
xorb
add
in
and
xor
sbb
pop
jg
nop
inc
lahf
ss
repz
pop
mov
pop
bnd
mov
sub
addl
mov
ds
repz
call
sub
xlat
outsb
jae
aas
loopne
lods
je
xchg
psrld
pushf
jl
iret
inc
stos
jmp
xlat
insl
lock
popa
lahf
mov
fdivrl
loop
int
aaa
xor
jmp
sub
jecxz
pop
hlt
lods
clc
loopne
sub
jl
adc
cmpsl
fwait
mov
hlt
out
sub
xchg
mov
sbb
imul
sti
dec
add
xor
int3
ret
pop
mov
addr16
cltd
pop
inc
mov
dec
or
int3
cmp
jne
dec
lods
bound
jae
or
push
jnp
movsb
lock
pop
movsb
leave
in
cld
incb
fsubrs
push
mov
adc
int
pop
or
test
sub
mov
insl
add
hlt
cmpl
jmp
out
test
rorb
fimuls
movl
lcall
mov
pushf
mov
xchg
mov
mov
pop
ja
roll
lcall
and
stc
outsb
sbb
pop
and
lcall
out
cmp
loop
dec
loopne
add
or
push
sahf
sub
mov
imul
mov
cmpsb
sub
adc
pop
add
mov
cs
sbb
or
loope
scas
push
nop
jbe
int
push
mov
xchg
mov
dec
insb
fwait
sbb
out
es
or
cs
imul
iret
xor
add
rolb
dec
movsb
inc
sub
clc
pop
cmp
ret
arpl
clc
mov
cmpsb
cmp
lock
inc
jmp
push
es
imul
ljmp
mov
sub
xor
jmp
call
cmp
xchg
sbb
mov
mov
xchg
in
aas
push
mulb
fistl
cmp
xlat
inc
std
xchg
push
loop
xchg
jnp
or
cmpsb
sub
mov
sub
add
mulb
or
sbb
fbld
jl
sbbb
mov
or
sarl
mov
gs
pop
dec
cmpb
jnp
push
add
jecxz
and
adc
adc
cmp
xor
and
in
or
push
stos
jl
xchg
stos
mov
dec
sub
mov
es
cmc
mov
jp
pushf
mov
lret
pop
and
mov
inc
sbb
push
jns
jp
or
cmpsb
push
fsub
pop
in
sbb
out
pop
pop
sbb
scas
jmp
xchg
mov
lahf
push
mov
in
andl
push
or
fidivs
pop
sbb
lcall
in
stos
aam
cmpsb
icebp
ljmp
mov
mov
sbb
movsl
fwait
cmp
sub
mov
pop
in
insb
icebp
dec
dec
and
ja
sub
pop
push
push
inc
andb
jae
mov
fcoml
stos
xchg
adc
or
xchg
gs
cmc
outsb
xor
sub
loopne
adc
das
or
cmc
pop
int3
gs
jmp
jae
push
pop
xor
mov
dec
xchg
jae
sub
and
mov
jb
mov
add
insb
add
mov
mov
jb
jbe
iret
scas
xchg
mull
leave
sub
push
int3
in
push
adc
inc
ja
lcall
mov
outsl
fildll
sub
sbb
orb
sti
and
sbb
pop
adc
movsb
aad
and
mov
ret
push
jo
push
xchg
les
cmpsl
cmpsb
daa
adcl
jge
push
xor
sbb
lret
lods
xorl
loopne
mov
out
jg
pushf
xor
jl
cmp
mov
fldcw
std
cltd
mov
testb
sub
dec
out
jae
aad
cwtl
nop
and
cld
pop
shrb
sub
jae
leave
aam
dec
fcompl
jae
fnstcw
daa
lods
rcr
shrb
mov
lock
adc
jbe
lods
push
movsl
fst
fldenv
xchg
repz
aad
test
addr16
cld
or
mov
mov
sub
ret
inc
mov
sub
gs
lods
inc
push
mov
push
xor
mov
adc
add
aam
add
jmp
xor
push
cmpsl
mov
ret
negb
jge
mov
jo
outsb
push
or
jmp
xor
push
int3
aas
inc
daa
lcall
gs
fmulp
mov
add
mov
sub
xor
test
repnz
lods
shll
mov
jmp
enter
and
insb
push
test
sbb
mov
cmp
xchg
fst
addl
inc
popf
pop
push
sub
fbstp
mov
jnp
pop
sub
pop
fidivs
gs
and
test
jo
mov
xor
jl
hlt
inc
outsl
mov
rcl
clc
fcomi
and
gs
or
jge
and
js
xor
mov
mov
adc
inc
sub
into
imul
int3
mov
aad
pop
in
out
test
mov
or
in
jb
jmp
outsb
mov
mov
push
sub
lcall
sub
sti
or
mov
add
rcl
and
bound
sbb
sbb
call
or
inc
pop
mov
lret
pop
out
cmc
mov
mov
push
mov
or
dec
lock
aaa
dec
push
rcl
andb
mov
add
cmpsb
out
ljmp
jmp
sahf
mov
rcrb
in
add
xor
sahf
jno
mov
mov
out
mov
inc
jo
out
ja
jmp
cwtl
repz
xchg
inc
pop
push
push
and
fs
or
jp
arpl
adc
pop
or
shlb
mov
int
xchg
jb
mov
out
sti
push
sbb
dec
fstl
fdivs
mov
jne
cmp
outsb
sub
dec
pop
mov
xchg
pop
mov
call
cmp
mov
stos
xchg
imul
testb
repnz
mov
shlb
bound
and
scas
adcl
stos
jg
rorb
fcomip
sub
fldt
mov
bound
idiv
adc
les
repz
jp
es
mov
test
daa
jmp
xor
add
scas
orl
fs
test
jmp
jle
mov
enter
inc
xchg
movsb
aam
cmp
je
loope
push
jnp
dec
xchg
push
lods
aam
dec
mov
and
sub
push
xor
popa
lods
shr
inc
lcall
enter
enter
test
out
test
jnp
or
adc
jecxz
shll
push
mov
sbb
sub
fisubrl
add
mov
popa
xchg
ljmp
cmpsl
sbb
ret
enter
mov
sbbl
jp
xor
push
mov
add
bound
sub
xchg
imulb
sub
mov
cmpsb
dec
loopne
je
jp
std
push
movl
psrld
shl
test
jmp
sbb
cld
lahf
and
jbe
mov
ficoms
ds
and
push
mov
in
sbb
test
dec
adc
push
stos
ss
js
lods
orb
adc
add
call
ret
xor
mov
sbbb
shrl
mov
js
inc
fwait
test
movsb
and
mov
xor
mov
mov
xchg
sbb
out
aaa
or
xchg
js
in
sub
mov
into
out
inc
and
cmp
sub
lret
and
arpl
jl
ret
push
pop
add
stos
push
fnstenv
movsb
add
push
out
mov
cltd
stc
ljmp
repnz
sbbb
pop
mov
xchg
loopne
loop
cmp
rcll
rcrl
stos
cltd
jb
fisubs
push
mov
add
negb
popa
mov
insb
je
lcall
and
shll
jge
sbbl
sub
cmp
sub
cmp
xchg
jb
shll
int3
out
push
sub
mov
push
or
lods
loop
stos
dec
mov
insl
jge
mov
mov
dec
push
and
popa
test
pusha
xor
jmp
in
inc
imul
mov
push
ljmp
dec
lock
fisttpl
pop
adc
movb
mov
in
add
jmp
sub
mov
and
inc
fnstenv
inc
xchg
mov
mov
sub
mov
icebp
iret
and
jne
mov
es
mov
push
gs
sbb
cld
fcoms
mov
dec
sbb
mov
cld
push
xchg
loope
js
gs
push
push
jg
ss
sti
mov
nop
stc
cmpsb
arpl
mov
test
ljmp
xchg
cmpsb
rclb
icebp
inc
inc
int3
mov
shll
fwait
dec
pop
int
lods
add
out
or
and
or
push
fidivrs
mov
xor
lock
mov
pop
cltd
int
cltd
fs
sti
dec
fcompl
sarb
repnz
int3
and
out
add
add
out
xor
loopne
or
inc
into
xor
icebp
mov
push
cltd
mulb
cmp
mov
mov
dec
lret
es
notl
xor
and
push
mov
push
arpl
dec
push
test
cltd
cmpsl
fwait
lret
sbb
and
push
lahf
sub
ffreep
mov
aas
xchg
test
mov
adc
mov
sti
jbe
pusha
jo
xchg
loop
sbb
jno
xor
xchg
mov
xchg
cwtl
data16
fistl
jnp
movsl
in
fcmovbe
cmc
dec
sbb
mov
fsts
mov
adc
inc
cmp
ds
xchg
sub
int3
xchg
stc
adc
sbb
subl
cmp
mov
jge
push
pop
dec
loopne
or
call
or
and
xchg
enter
lock
push
lcall
lods
stc
pop
dec
inc
call
sbbl
stos
sahf
sahf
mov
adc
xor
cli
test
add
in
dec
cs
mov
mov
dec
in
fsubrs
jle
mov
ret
fisttps
adc
jne
or
arpl
push
ja
out
test
push
add
out
mov
and
push
add
cmp
fisttpll
push
imul
xchg
jg
or
sbb
add
test
xchg
mov
xchg
cmp
pop
popf
repz
dec
popf
sti
add
pop
mov
lock
cmovne
xor
ret
loop
jnp
cmpsl
aas
ss
das
dec
ret
push
push
shl
aam
dec
add
xchg
sbb
inc
xchg
push
popf
lds
gs
popf
fwait
xchg
xchg
jmp
cld
mov
aam
adc
xchg
fisttpll
push
std
push
int
push
jae
fcmove
ds
testl
jno
cmp
mov
jle
rcl
jae
pop
out
lds
adc
push
pushf
pop
sub
test
push
fidivl
rcl
push
in
movsl
sbb
stc
sub
testl
cmp
jmp
or
and
neg
dec
sarb
xor
andb
pop
cli
adc
mov
in
mov
jo
es
lret
cld
test
jg
mov
xchg
pop
mov
jns
loope
test
add
adc
cmp
mov
jno
test
xchg
ds
inc
or
cltd
int
int
pop
mov
jecxz
roll
xchg
push
arpl
imul
sub
xchg
jecxz
daa
mov
inc
push
jp
or
inc
adc
addr16
mov
bound
hlt
jae
adc
cmp
xchg
xchg
pop
mov
and
test
mov
inc
hlt
addr16
out
rclb
jb
insb
mov
mov
in
aas
jecxz
add
lahf
cmc
aaa
inc
and
sub
orb
jae
lods
pop
mov
test
add
push
fucomp
jp
enter
mov
test
adcb
subl
arpl
mov
and
in
lods
mov
mov
add
repz
push
movsl
mov
mov
cld
pop
or
icebp
movsl
test
xor
lock
cwtl
cs
add
dec
ss
xor
dec
pop
inc
sti
aas
xchg
lea
insb
inc
ds
inc
popa
das
inc
lds
inc
aas
ficoms
inc
pop
jae
xchg
mov
lret
mov
lahf
ss
stos
mov
xor
cmp
fnstenv
pop
mov
iret
jecxz
jl
lods
rcr
orb
lret
mov
rclb
test
rcll
inc
cmpsb
jmp
jmp
aad
cmp
mov
les
cli
push
ja
mov
into
xor
call
lret
cmp
gs
cmp
fidivs
lea
add
scas
jge
dec
inc
jg
xchg
cmp
add
pop
or
sbb
insl
mov
fidivrs
push
stos
jb
mov
jmp
sbb
ljmp
cltd
loope
mov
lret
cmp
jb
or
add
pop
ret
pop
fcoms
ficompl
dec
into
xchg
daa
pop
xchg
push
mov
jne
pop
and
and
jg
addr16
jl
jl
dec
adc
xlat
jmp
lds
aam
lods
dec
lahf
fisubrs
sub
jp
imul
sbb
cli
cmp
sbb
and
sbb
insl
or
push
mov
cmpsb
cmp
push
loop
dec
mov
mov
inc
test
dec
mov
cmc
xor
add
or
int
sub
and
jno
test
arpl
mov
sbb
in
nop
dec
add
movsl
jle
xchg
movsb
stos
add
rorl
pop
rcrl
scas
or
sub
pusha
add
xchg
cltd
cwtl
es
xchg
imul
add
vphaddbw
mov
pop
mov
xor
test
repnz
in
in
addl
or
xchg
mov
pop
adc
movsl
cmc
push
or
push
frstor
and
test
enter
and
push
fstl
mov
ja
daa
out
pop
ret
dec
std
insl
out
sub
fs
sub
movl
cmpsb
dec
mov
test
sub
fstpl
leave
push
add
andb
stos
insl
insb
pop
sbb
xor
mov
movsl
mov
icebp
inc
mov
cmp
fadds
jne
das
jge
pop
xor
sbb
gs
xor
cs
jp
xor
or
cmp
stc
out
inc
push
inc
xchg
jmp
fldenv
pop
xlat
repnz
aaa
aas
dec
xchg
mov
test
or
add
jne
adc
xor
push
sbb
shrb
cmpsb
add
lret
mov
mov
insb
sbb
fsubr
mov
fidivrs
lock
sub
push
mov
or
pushf
shlb
xchg
loope
inc
jmp
mov
int
mov
outsb
sbb
mov
icebp
cmp
xchg
loopne
jecxz
cmp
jb
stos
mov
pusha
jge
cmp
fwait
shll
imul
jnp
cwtl
fidivl
dec
add
fucomp
push
lock
cmc
dec
pop
mov
sbbl
repnz
push
mov
cmp
lods
dec
cmpsb
ja
and
inc
inc
pop
xchg
ret
test
shll
sub
scas
dec
cmpsb
lods
lahf
inc
icebp
adc
xor
shll
popf
sub
push
xchg
ret
hlt
sub
cltd
test
fs
insl
cltd
lods
add
shrl
insb
ret
sub
imul
pop
cmp
in
lock
in
pop
push
cmp
in
pop
rorl
cmp
in
sub
xchg
ds
pop
jne
lahf
xchg
repnz
ftst
push
imul
out
xchg
pop
xor
jnp
pop
cltd
pop
xor
inc
repz
mov
fcompl
pop
inc
push
jmp
and
call
into
lods
outsl
mov
pop
leave
cmp
cli
repnz
sub
mov
pushf
inc
fidivs
pop
push
je
push
mov
lcall
test
jle
stos
pop
xor
sub
out
loopne
sbb
aas
test
or
pushf
and
mov
push
dec
idiv
dec
xor
mov
pusha
repnz
push
add
shll
fucomip
rcrb
dec
or
jl
mov
mov
pop
pusha
imul
cmpsl
push
push
aas
and
insl
jg
sbb
fdivrl
mov
lcall
popa
pop
and
sti
sysret
xchg
jg
adc
jg
and
or
xor
out
dec
nop
xchg
cs
insl
jno
pop
dec
es
loop
fnstsw
aaa
cli
lods
in
shrb
int3
sub
test
aas
mov
sub
ss
lcall
sbb
insb
add
xorl
push
in
pop
test
fimuls
jg
sbbl
sbb
aam
jae
insb
imul
out
lea
add
cmp
mov
and
sbb
stos
lea
mov
inc
leave
push
mov
sbb
mov
inc
or
cmp
dec
lret
sub
xchg
shlb
add
xchg
and
stos
test
addr16
cld
insb
xchg
xor
stc
aam
sbb
xchg
or
or
sti
sbb
pop
jg
xor
push
cltd
and
stos
xchg
inc
and
adcl
test
push
sbb
mov
loop
pop
adc
in
inc
sub
pop
test
fldt
ja
lret
mov
add
push
fs
sarl
and
inc
daa
adc
jae
inc
out
cld
cli
cmp
scas
out
gs
int3
lahf
jle
rorb
mov
clc
rol
mov
push
enter
shl
gs
lock
fdivl
xchg
push
adc
ret
push
mov
ret
dec
mov
outsb
inc
pop
and
xchg
mov
push
lods
mov
push
jg
xor
pop
testb
cmp
add
jle
lods
mov
cmp
fisttpll
sub
adc
or
sub
or
int
mov
pop
lock
lret
xchg
adc
lret
mov
push
pop
mov
imul
inc
fstpl
cwtl
jp
imul
xlat
outsb
cld
mov
mov
mov
sub
out
jmp
test
iret
jbe
push
jg
mov
pop
pop
cmovno
mov
loopne
jge
add
cmpsl
cmp
test
push
pusha
pop
xor
das
stc
ror
push
jmp
xor
in
fwait
inc
lods
sti
adc
mov
hlt
mov
sbb
push
leave
mov
mov
mov
sbbb
xchg
mov
inc
jns
add
cmp
and
stos
popa
andl
outsl
mov
es
cmc
pop
pop
das
pusha
setb
cmpsb
cmp
mov
add
cwtl
shl
dec
jecxz
xor
cmp
lock
mov
adc
fstl
xor
dec
jge
inc
scas
gs
xchg
lods
xchg
sub
cli
add
pop
xor
mov
rclb
enter
mov
sti
test
int
das
xor
inc
popl
fwait
ss
fprem1
mov
call
mov
nop
fcomps
or
fcoms
or
pusha
add
cs
dec
jns
xchg
sub
add
es
pop
mov
and
jmp
nop
iret
xchg
add
push
test
cmpb
loope
mov
xchg
mov
iret
sbb
add
andl
xor
and
add
sbb
push
ret
mov
mov
ja
xchg
xor
xchg
pop
movsb
ret
leave
xor
push
xor
adc
xchg
scas
and
inc
fwait
out
add
xchg
fs
fcmovne
xor
sbb
test
lret
call
outsl
or
cmp
mov
xor
pop
pcmpeqw
dec
jecxz
cwtl
loop
out
test
int3
cmpl
pop
push
mov
cltd
jo
sbb
jle
pop
clc
scas
orl
cwtl
jne
jo
adc
lret
xchg
adc
fwait
adc
test
push
shl
push
xadd
push
dec
movlps
popf
inc
jbe
pusha
test
fwait
push
cmp
je
aad
les
push
test
rcl
xor
inc
repz
push
xchg
adc
cmc
push
mov
ror
pop
cmp
push
sbb
inc
pop
mov
sub
jae
stos
push
push
sbb
cmpsb
xrelease
je
mov
jno
inc
push
imul
xchg
sub
pop
pop
dec
mov
shrb
cli
pop
mov
dec
cmc
sbb
sub
ret
mov
cmp
scas
mov
pushl
pop
jg
cmp
jecxz
adc
scas
mov
xor
hlt
dec
test
in
stos
dec
xor
shlb
out
cmpsl
jbe
sub
mov
dec
mov
sahf
daa
sahf
or
imul
das
fdivrl
lock
xor
pop
lea
mov
idivl
sub
mov
xor
pop
testb
repz
xchg
in
mov
inc
pop
jae
xchg
test
add
pop
xlat
movsb
and
xchg
xchg
jmp
ja
fs
pop
xchg
mov
stos
mov
sub
pop
sub
ja
pop
cmp
scas
in
shrb
int
pop
js
cmpsb
mov
loopne
ja
lcall
das
push
cltd
cmc
das
cmc
js
ret
or
mov
push
imul
push
cmp
jnp
push
lods
shll
mov
lahf
push
mov
jmp
push
cmp
imul
test
inc
ret
aas
cltd
outsl
nop
jmp
in
addl
int
dec
jp
and
popl
adc
shl
std
pushf
xor
xor
mov
jg
push
jp
test
out
sub
mov
xchg
sbb
scas
ret
xor
push
xchg
jle
test
jnp
movsl
cwtl
icebp
das
call
jl
or
add
outsl
push
jmp
jp
mov
lret
cmp
adc
xchg
xor
mov
pusha
pushl
pop
xchg
sub
lods
scas
bnd
stc
fistps
gs
xchg
jg
sub
mov
stos
mov
mov
sarb
sbb
sti
cmpsb
mov
jle
ret
in
out
cltd
sub
fwait
gs
add
xchg
push
push
add
xor
mov
mov
jl
insl
adc
fsubs
out
in
cld
sub
scas
adc
inc
xor
mov
hlt
mov
and
mov
jp
aam
sahf
hlt
inc
ljmp
pop
mov
aam
cmp
mov
repnz
int
adc
jecxz
test
imul
fcompl
cmp
dec
xchg
fstl
scas
push
cmp
add
int3
ss
push
fmull
aad
sarb
cmp
fisubs
lds
pop
lock
daa
cmp
inc
ret
xor
rolb
cmpsl
jle
mov
loopne
testl
sub
aam
daa
outsl
jno
sbb
aas
cwtl
mov
fwait
add
inc
or
adc
rorl
sub
pusha
cmp
pop
repnz
das
inc
xor
push
pop
mov
jns
clc
push
add
stos
iret
dec
cltd
dec
mov
mov
dec
xor
mov
push
stos
sub
xor
sbb
sub
sub
dec
outsl
sti
ljmp
leave
in
xorl
or
aas
aam
popa
andb
out
inc
test
pop
xorl
sbb
pop
dec
out
in
mov
or
adc
mov
orb
cmp
out
mov
push
out
ljmp
inc
loopne
fdivrl
or
cmp
xor
imul
xor
pop
aaa
iret
cmp
push
jmp
rcl
rcll
xor
dec
jbe
pop
fs
repz
shrl
pop
jns
test
sub
repnz
loopne
cs
or
ja
xchg
ss
pop
pop
fsubrs
or
lea
sbbl
cli
inc
out
add
mov
xchg
sub
ja
shlb
inc
out
ja
lret
inc
pop
test
frstor
insl
iret
iret
jbe
cltd
fs
and
mov
and
aas
xchg
lods
inc
enter
push
insl
shr
popa
leave
pop
fcomip
stos
cmpsl
dec
pop
addr16
mov
mov
in
inc
gs
fmuls
push
inc
cmp
test
sbb
xor
sbb
addr16
ja
stc
push
xor
mov
into
xchg
test
jp
stc
and
pop
shrl
push
scas
xchg
inc
jae
inc
hlt
inc
dec
jecxz
adc
enter
add
mov
sbb
shrb
je
divl
sar
fwait
gs
int3
fwait
enter
sub
loop
lret
adc
push
int
mov
mov
sti
ljmp
pushf
jnp
pop
dec
ja
and
pop
jecxz
fcoms
dec
fildll
int
imul
mov
push
sub
cmp
out
out
xor
cli
mov
fstpt
jge
push
cmpsl
in
into
pusha
dec
xchg
add
insl
fsubrl
leave
push
insl
sub
or
and
pop
in
add
jp
xor
inc
jno
subb
ja
mov
push
iret
jnp
mov
fnstsw
sub
pop
and
jl
jecxz
jns
repnz
jg
test
push
mov
ljmp
mov
inc
pop
mov
into
xor
or
sub
dec
add
nop
insl
jmp
mov
mov
rcl
sub
push
xchg
movsl
mov
fsubrl
aam
sbb
push
aas
jge
lcall
adc
jne
xchg
arpl
add
arpl
loop
xor
std
or
and
sbbl
jbe
lahf
mov
int
inc
mov
jecxz
inc
adc
jae
xchg
jg
sub
pop
aad
dec
dec
flds
cmp
ss
or
push
data16
aas
inc
cld
xchg
jns
addr16
push
mov
adc
push
pop
cs
je
adc
cmp
insb
test
dec
out
jg
sbb
pushf
jne
and
shlb
jno
outsb
mov
push
adc
cltd
mov
jne
pusha
lods
outsl
jnp
addr16
inc
call
mov
subl
stos
mov
and
pop
add
xor
cmpsb
lock
xor
and
xchg
arpl
stc
add
icebp
fwait
adc
daa
mov
sbb
adc
sbb
fs
cmpsl
fs
pushf
je
jnp
out
push
pushf
xchg
jle
insb
popf
cmp
cmp
rcrb
and
shrb
lods
inc
mov
ljmp
xor
mov
jmp
mov
sbb
pop
mov
rcr
jl
ret
push
insb
gs
sub
popa
rcrl
sub
jg
and
addr16
fnstenv
loop
inc
testb
jmp
repnz
mov
stos
aam
cmp
sub
jae
ret
pop
sti
std
pand
mov
cli
rclb
scas
sub
jp
fnstsw
adc
orl
jp
push
adc
popa
gs
inc
pop
test
dec
xchg
shr
add
adc
iret
push
das
ret
mov
push
js
mov
cs
imull
or
scas
and
cmc
mov
push
mov
push
out
push
hlt
dec
pop
imulb
jno
loope
iret
jge
inc
icebp
insb
imul
jmp
xchg
xchg
or
dec
mov
notl
incb
xchg
adc
mov
mov
cmp
cmp
insl
sbb
cmp
sbbl
add
jecxz
adc
mov
ficomps
jge
push
lea
pop
dec
scas
ror
aaa
bswap
mov
xchg
sub
dec
orb
push
aas
icebp
icebp
rcr
das
inc
arpl
into
cmpsl
cmp
jno
xchg
mov
push
fisttps
addl
inc
cmpsl
xchg
lds
add
push
insb
je
and
push
jmp
out
sub
inc
int3
mov
outsl
daa
fwait
call
dec
xchg
rol
xlat
test
outsb
sar
mov
sbb
sbb
stos
hlt
aam
ror
call
mov
gs
aaa
scas
push
fldenv
or
inc
cmp
fs
bt
push
and
or
jl
jnp
xlat
daa
mov
dec
fimuls
call
std
sbb
pop
xchg
push
ret
out
inc
fdiv
pusha
inc
loop
mov
lock
stos
or
xor
adc
cwtl
loopne
jecxz
test
lcall
adc
pop
pushf
add
hlt
adc
add
cmc
mov
mov
xorb
test
imull
sbb
inc
sub
sbbb
xor
add
sub
outsl
sbb
sbb
cmp
jno
sbb
xor
ds
mov
mov
bound
cmc
add
mov
stos
adc
push
adc
xchg
daa
jae
fucom
mov
les
js
in
mov
jno,pn
sbb
mov
or
scas
xor
loop
mov
test
arpl
mov
mov
iret
xor
mov
aaa
stc
mov
ds
loope
sub
dec
push
xchg
je
jae
and
cld
pop
aam
rcl
xor
cmp
inc
loop
sti
rcr
dec
lock
inc
pop
jmp
pop
sub
fsubs
dec
stos
cmp
xchg
or
lahf
ss
add
scas
jp
andb
ljmp
dec
dec
or
mov
mov
iret
fcmovne
jg
sub
mov
or
add
pop
dec
in
imul
mov
mov
fmul
fisttpl
rcrb
fldenv
sub
int
sub
rol
xchg
xchg
and
aas
pop
adc
pop
lea
jle
aaa
jmp
add
xor
lcall
fcomp
inc
pusha
jns
clc
je
mov
or
lock
mov
pop
and
cmp
fldenv
push
sbb
lea
push
mov
pop
loope
repz
stos
lahf
xor
mov
frstor
sbb
lahf
mov
mov
xchg
and
pop
and
cmc
fcoms
mov
rcr
repz
aam
sahf
outsb
movsl
mov
bound
gs
lock
mov
ja
pop
scas
mov
ja
jg
xchg
dec
fwait
loopne
lods
scas
adcl
sub
sbb
cmp
jp
test
dec
dec
xor
in
int
push
loop
leave
fbstp
sub
xchg
sub
out
push
cmc
insl
jne
lahf
mov
scas
lcall
xlat
pop
aaa
and
lret
aaa
xchg
pop
jne
sti
aad
sub
mov
jmp
xchg
sub
add
idiv
mov
int3
inc
je
notl
mov
cmpsl
or
repnz
movsb
jns
xor
jno
sbb
out
shrb
cmp
jae
fucomi
aaa
or
jno
mov
sub
jb
fwait
mov
insl
and
adc
push
pusha
negl
jle
xchg
and
xchg
push
mov
or
in
xor
sub
insb
xchg
xor
dec
gs
sbb
mov
dec
mov
mov
dec
fdivrs
xchg
mov
insb
hlt
pop
pop
jle
sub
pop
ret
xchg
sub
mov
dec
pop
imulb
cli
xchg
lahf
pop
adc
xchg
jae
cmp
dec
icebp
sub
popa
mov
xchg
jb
in
adc
inc
ljmp
data16
jno
in
adc
xor
add
mov
jno
or
jg
les
sahf
test
jge
xchg
cmp
out
lea
sbb
imul
mov
xchg
sbb
sahf
push
das
pop
dec
fcomi
mov
loop
cltd
adc
cmpsb
inc
insl
in
fnclex
test
sbb
xchg
sbb
or
loopne
lret
or
or
xlat
es
xchg
cmp
mov
fs
ret
fidivrs
pop
pop
jecxz
mov
sub
fmull
or
jecxz
sub
lds
repz
addr16
sub
or
push
ss
xor
xor
fiadds
fistpll
ret
push
nop
mov
add
imul
push
push
pop
mov
jecxz
pop
js
stos
mov
addr16
or
jb
pop
push
mov
mov
fidivrl
push
push
jle
push
or
in
xor
push
adc
xchg
sub
jecxz
lods
ja
fstl
test
cmpps
divl
subb
sub
popa
ds
or
mov
je
sbb
xchg
sbb
ljmp
sub
xor
xchg
lcall
fs
loop
ds
adc
xlat
inc
loopne
pop
xchg
lock
sub
pop
fdivr
push
mov
add
push
loopne
clc
or
pop
clc
xorl
xor
sbb
jo
pop
push
lahf
cmp
dec
out
jae
imul
pushf
mov
push
and
mov
push
addr16
into
movsl
mov
cltd
push
cmp
mov
inc
pop
mov
lcall
jge
imul
push
xor
dec
imul
inc
xor
xchg
sbb
push
sub
ja
pop
popf
scas
ja
sbbl
adcb
in
sub
push
mov
push
and
inc
sbb
cmp
int
imul
out
add
data16
adcb
xchg
rol
and
add
jb
push
mov
or
nop
loope
test
xlat
shll
xchg
in
int
xchg
or
test
lods
imul
push
xor
jno
jno
add
daa
bound
shr
out
out
jb
scas
fistl
jg
cmp
xor
push
jae
out
out
push
or
mov
pop
pavgw
xor
xor
mov
mov
pushf
enter
xchg
add
testb
add
stos
movsl
xchg
mov
pop
rolb
xchg
inc
fadds
push
mov
and
pushf
or
cli
subb
movsl
xchg
stos
or
les
mov
inc
pop
sub
dec
dec
out
sbb
cmp
add
fbld
sub
inc
mov
pop
adc
cmp
cmpsl
out
mov
xchg
pop
adcl
out
in
test
pop
lret
or
dec
pop
scas
push
xchg
adc
add
xchg
mov
les
mov
out
cmp
insl
popf
jo
push
cmpsb
jo
in
stos
mov
add
pop
stos
add
out
jnp
lds
cmp
data16
add
sbb
jecxz
subl
cmp
mov
jge
sub
mov
adc
into
cwtl
inc
xlat
leave
out
mov
loop
scas
mov
aam
adc
pop
push
push
sub
gs
inc
cmp
lds
mov
jns
mov
mov
out
movsb
sti
es
mov
and
daa
mov
mov
dec
pushf
and
adc
cld
pusha
mov
daa
mov
movsl
xor
xchg
mov
ret
adc
gs
xchg
xchg
sub
xorl
cmp
dec
and
cmpsb
jns
xchg
loope
repz
in
or
push
adc
add
push
lcall
mov
add
ds
sbb
cmp
xchg
inc
mov
sbb
inc
adc
pop
sbb
jb
cwtl
xchg
testl
jmp
cmp
arpl
pop
mov
dec
cld
jl
xchg
jp
mull
mov
arpl
pop
pop
adc
std
out
and
iret
cmpsl
fldcw
loop
inc
xor
bound
xchg
cmp
negl
mov
xchg
sub
xor
int3
out
push
xor
enter
adc
mov
adc
or
dec
dec
adc
repz
dec
pop
test
mov
and
in
es
push
sub
jnp
stc
jb
push
push
sbb
mov
jmp
dec
xchg
ret
lret
test
sub
xor
fld
enter
push
call
pop
test
sbb
push
xchg
je
loop
idivl
pop
pop
movsb
lds
js
hlt
out
mov
and
sbb
lcall
sbb
mov
push
jmp
call
sub
decl
mov
fwait
int
cmp
dec
iret
dec
fisubs
jns
insl
repnz
outsb
fldcw
lds
outsb
mov
pop
int
aam
pop
pop
or
and
test
rcl
insl
or
pop
and
hlt
push
jmp
xchg
mov
mov
jno
jne
fsubs
cmp
cmp
mov
iret
jle
das
mov
inc
mov
test
inc
and
push
fstpl
sbb
dec
dec
loope
lahf
adc
mov
popf
sbbl
cli
sbb
xor
push
mov
cs
xchg
sarl
adc
cmp
or
adc
imul
dec
loopne
inc
add
rcrb
push
std
adc
pushf
push
cs
into
fs
test
xchg
fidivrl
stos
mov
or
mov
lods
inc
in
pushf
scas
sbb
xor
scas
dec
shl
filds
sarl
sahf
dec
pop
insb
xchg
jl
pop
out
aas
and
ret
lea
pop
mov
xchg
sbb
bound
jbe
dec
sarb
sub
hlt
inc
stos
rcr
mov
js
std
shlb
clc
mov
sub
cmp
je
inc
push
cmp
or
add
or
leave
and
das
sbbl
dec
xor
jl
mov
cmp
sbb
aaa
add
stos
mov
mov
jo
or
mov
testl
pop
insl
outsb
shrb
je
add
rol
pop
or
scas
in
mov
pop
sbb
mov
mov
mov
xor
mov
cmp
ret
cmpsl
adc
inc
into
jp
or
pop
xchg
jl
and
fs
xor
call
adc
sub
aaa
mov
dec
ror
fistpl
mulb
jmp
xchg
in
xchg
jns
xlat
push
in
clc
sbb
in
nop
sub
pop
stos
cmc
inc
leave
cmp
sbb
hlt
dec
loop
rorl
sbb
call
stos
test
cmp
or
rcrb
arpl
cmp
sub
mov
sbb
bound
insl
mov
loope
xor
pop
aas
xchg
paddd
ret
or
adc
lahf
incl
pop
sbbl
outsb
cmc
aas
sbb
loope
mov
jmp
das
scas
jo
or
in
adc
ss
dec
pop
sbbl
push
xchg
pop
out
ret
int3
or
inc
push
iret
xchg
mov
lret
jno
mov
inc
jecxz
sbb
and
sti
and
mov
adc
pop
mov
sub
mov
gs
dec
xchg
add
lods
push
and
xchg
sbb
repz
xor
push
les
testl
ja
or
data16
rorl
cmpsl
or
dec
jnp
jecxz
iret
clc
xchg
dec
inc
aas
mov
or
and
subl
popf
rcrb
mov
push
repz
test
popa
adc
jg
sar
add
in
dec
sbb
lret
out
or
jmp
mov
ret
and
jl
jo
push
sub
pop
push
add
notl
jne
iret
mov
push
mov
test
jecxz
lahf
dec
cmp
lret
jb
std
inc
loop
xchg
rorb
imul
mov
pop
in
sub
loop
test
mov
test
fdiv
mov
mov
mov
and
cmp
popa
jbe
loope
xchg
add
cmp
push
xor
and
pop
aas
cltd
mov
cmp
add
push
jns
cmpsl
xchg
xchg
scas
jb
int3
mov
pop
mov
jae
ss
clc
adc
ss
lods
add
mov
rep
jmp
cli
pop
push
xor
cmp
rcrl
inc
dec
inc
pmullw
adcl
sub
cld
push
mov
repnz
stos
fdiv
mov
int3
push
dec
jg
adcb
cmp
std
and
cs
cmp
repz
xchg
adc
or
jb
mov
add
rorb
in
pop
les
pop
insb
popa
mov
ud1
or
cmpsl
shrb
out
aad
and
mov
lret
data16
sahf
sub
out
sbbl
cli
or
mov
sbb
xchg
mov
mov
lret
in
out
or
dec
imul
cs
jge
lcall
js
fxch
lods
pop
add
lods
or
icebp
nop
jle
adc
add
mov
push
mov
jg
inc
fcmovbe
fsubr
inc
mov
mov
aad
jmp
jle
jmp
cwtl
dec
jae
push
fs
add
push
or
nop
pop
aam
mov
in
into
in
mov
stc
xchg
cmpsl
xchg
fwait
xchg
scas
xchg
jmp
scas
inc
xor
popa
test
lret
jecxz
out
js
movsb
pop
pop
mov
aaa
jmp
and
pop
pop
inc
ret
push
xor
outsl
sbb
xlat
or
ja
mov
mov
imul
stos
int
popf
lahf
push
inc
cli
jmp
jmp
frstor
xchg
and
sub
push
mov
bound
jbe
sbb
neg
mov
jge
fwait
and
rcl
cs
es
iret
add
imul
or
popf
cmp
jmp
mov
lods
outsl
outsl
pop
mov
outsl
rcll
fnstcw
add
jno
xchg
outsb
into
adcb
add
inc
pop
jb
push
jmp
cmp
arpl
add
pop
dec
push
mov
sub
pop
cmpsb
jecxz
add
insb
dec
ss
punpckhdq
jge
inc
xchg
fwait
inc
inc
sar
hlt
jo
inc
mov
iret
movsb
jecxz
roll
inc
sbb
sbb
outsl
or
adc
cld
je
xor
shl
add
xor
pop
cmpsb
out
out
dec
popa
lods
loope
xchg
mov
fsubrs
outsb
pop
pop
mov
sbb
imul
rcrb
pop
and
cmpsl
call
inc
sub
into
jno
roll
outsl
rcrl
icebp
inc
stos
xchg
test
sbb
pop
push
movsb
inc
aam
xchg
in
xchg
int3
jae
and
sub
adc
ds
scas
push
faddl
lock
sar
aad
addb
icebp
in
in
or
mov
add
cmp
jecxz
or
sub
addl
lret
cmpsl
push
xchg
mov
inc
in
cmp
loopne
mov
addr16
sbb
pop
pop
aam
int
mov
insl
das
jle
stos
pop
jp
sahf
xchg
mov
das
scas
lret
fnstcw
es
popa
loopne
das
inc
mov
dec
repnz
inc
jb
je
into
jae
jb
xor
mov
out
jns
jp
movsl
sbb
negl
shrl
inc
or
inc
sbb
popf
popf
mov
std
jg
xchg
stc
nop
add
push
dec
xor
out
sub
dec
pushf
mov
pop
movsb
sbb
jp
pop
loop,pn
sarb
sbb
add
fstl
shlb
das
adc
subb
xchg
jbe
test
fiaddl
cli
mov
js
and
pop
or
jp
rorb
adc
jb
push
test
fwait
out
fmul
xchg
dec
pop
imul
mov
stos
push
jmp
int3
lahf
push
add
out
ret
and
rcrb
add
fs
jle
and
lret
bound
out
mov
push
inc
test
mov
in
loop
ret
and
shrb
add
int3
jo
cmp
add
repnz
aad
icebp
popl
mov
mov
mov
stos
jmp
imul
inc
daa
icebp
ds
and
popa
cmp
mov
das
and
scas
jecxz
sub
fisttpll
sub
fldt
adc
inc
popf
jne
ds
arpl
out
decb
adc
and
insl
ljmp
cwtl
and
shrb
icebp
pusha
sbbb
and
push
cmp
andl
dec
pusha
rcl
aam
loop
repz
call
jp
test
rcr
and
push
pop
fidivrs
mov
faddl
xchg
leave
in
outsl
xchg
inc
out
xchg
fimuls
mov
jbe
inc
rcrl
stos
rcl
push
jmp
or
hlt
xor
push
fdivl
pop
dec
mov
scas
ret
mov
mov
les
scas
xor
inc
jbe
fsubrs
ficompl
xor
fisttpll
insb
fwait
pop
lcall
push
pop
add
xlat
ja
sub
jae
jbe
enter
push
inc
fnstsw
jno
jns
decb
mov
inc
fsubl
xchg
stos
mov
xor
shlb
dec
mov
es
fdivrs
pop
and
xchg
mov
lahf
xchg
outsb
adc
cmpb
mulb
xor
std
cmp
pop
push
sbb
pop
sub
loop
mov
inc
dec
lea
dec
pushf
dec
cli
test
and
lock
jl
and
push
imul
aaa
pushf
xor
push
jae
mov
dec
loope
lods
aam
in
into
push
cmp
cmp
sbb
push
ret
cli
xchg
jge
rorb
cmp
jne
dec
adc
xchg
push
std
loopne
mov
dec
call
push
div
cmp
aas
shrb
dec
mov
sbb
mov
xor
cmpsl
push
jge
loope
push
adc
fisubs
add
fsubl
popa
dec
loop
mov
and
mov
pop
and
popf
imul
adcb
xlat
mov
mov
pop
adc
adc
and
xor
jmp
mov
popa
movsb
sti
loop
sbb
inc
sbb
jle
cmpsl
mov
ljmp
scas
or
es
mov
lock
lods
cmc
shl
sub
adc
dec
lahf
mov
inc
push
fbld
aad
add
jbe
push
movsl
fisttpl
inc
dec
pop
cmp
fdivp
mov
jle
mov
inc
shll
xchg
cmc
sbb
loopne
aaa
dec
pop
inc
sbb
pop
out
adc
adc
mov
pop
lds
jae
pop
enter
jg
add
mov
or
jge
loopne
push
out
mov
outsl
or
sbb
pop
stos
dec
pop
fldl
es
daa
mov
nop
bnd
aas
loop
and
mov
outsl
outsl
cmpsl
rcrl
dec
pop
push
lods
inc
test
lret
outsb
sub
cmpsl
ds
repz
stos
mov
js
jbe
ja
cltd
out
mov
pop
or
adc
mov
push
sub
mov
inc
push
je
push
fisttps
repz
sti
icebp
js
int3
add
push
fs
insb
ror
push
mov
cltd
and
lahf
xor
out
sbb
sbb
inc
cmp
push
js
adc
test
inc
mov
push
pop
mov
sbb
fists
inc
std
and
out
jge
test
add
mov
and
inc
push
xor
ret
outsl
add
ss
out
xchg
enter
mov
pop
mov
rolb
dec
loop
mov
push
pusha
js
ds
orl
mov
mov
cmp
xchg
aaa
stos
mov
add
xlat
sbb
dec
dec
sbb
iret
jmp
sub
insb
stc
push
push
push
daa
cmp
push
aad
xchg
outsl
sub
pop
nop
xlat
mov
clc
pusha
adc
add
xchg
inc
leave
pop
test
lcall
fnstenv
push
mov
xchg
sti
data16
sub
jbe
dec
and
inc
aad
sub
dec
imul
in
xchg
jmp
mull
mov
js
inc
push
sbb
fidivrs
inc
shrl
fcomps
add
sbb
loopne
jbe
int3
jo
inc
xchg
sub
or
push
mov
fsubl
mov
add
pop
in
inc
add
xor
push
cmpsb
inc
scas
bound
push
rcll
xchg
adc
test
enter
adc
jbe
test
xchg
lods
fsubs
adc
ret
test
or
xor
dec
jl
mov
push
fcoms
mov
jmp
sbb
adc
call
push
sub
push
pop
jg
mov
not
repz
mov
pop
test
outsb
inc
dec
test
jns
je
push
sbb
inc
jp
push
scas
sub
jne
outsb
mov
push
xor
lock
jnp
lock
and
push
or
jmp
xchg
les
iret
push
int
shll
outsl
jp
mov
cli
nop
pop
subb
add
dec
mov
xchg
ret
les
dec
loop
test
data16
dec
shlb
stos
push
sbbb
cld
insl
insb
sbb
add
push
daa
xor
cld
ja
and
cmp
pop
sets
sub
in
mov
test
xor
out
mov
test
jg
inc
lods
and
cltd
jmp
lret
sub
popa
dec
fs
fisttpll
hlt
repnz
mov
imul
mov
mov
push
in
cmp
int
popa
add
fwait
test
dec
dec
popa
add
in
ret
test
or
xor
cld
mov
std
xor
sbb
popf
and
fmull
dec
outsl
add
scas
pop
ss
clc
hlt
push
lock
mov
adc
and
repz
or
jbe
pop
mov
cmp
out
sbb
pop
movsl
and
aam
data16
adc
pop
scas
iret
js
push
js
test
loope
push
add
mov
imul
shlb
sahf
mov
cmpsl
loope
movsl
dec
sub
dec
xchg
sub
cmp
xor
gs
xor
sbb
push
sbb
fdivl
ljmp
les
lea
sahf
xor
scas
repnz
out
or
test
stc
mov
fimuls
push
stos
sub
cmp
divb
cwtl
push
fdivrs
push
add
sbb
testb
pusha
add
push
sub
iret
xchg
or
std
aaa
push
sti
std
push
jle
pop
ret
dec
push
out
or
add
and
sahf
cmp
push
jg
mov
jle
sub
in
inc
ret
or
ficompl
rcrl
out
jge
jmp
lret
stc
or
pop
jb
pop
aaa
dec
pop
out
xor
mov
enter
arpl
xchg
or
movsl
add
fstl
orb
cld
or
lsl
test
lret
jmp
push
push
jno
pop
pop
sub
js
shll
imulb
jp
mov
mov
mov
or
pop
stc
out
dec
aad
cli
jne
sarl
in
pusha
fs
lods
mov
pop
daa
mov
dec
xor
mov
ret
sub
pop
cmc
mov
sbb
cmp
adc
inc
stos
leave
push
popf
call
addr16
mov
inc
in
imul
out
and
cld
rcrb
jl
dec
xor
adc
fsubr
push
and
push
loopne
pop
sub
cwtl
lahf
ss
ljmp
call
fisttpll
mov
je
sbb
add
addb
push
lcall
xor
ljmp
push
inc
pop
pop
repz
xchg
push
mov
icebp
mov
add
mov
adc
rclb
xor
or
jle
pop
pop
imul
icebp
stos
jmp
xchg
mov
sti
adc
mov
sub
js
mov
push
cmp
mov
jg
fs
xor
add
mov
jbe
lret
dec
notb
mov
xlat
repz
out
mov
sti
mov
addb
loopne
or
sub
cmpsb
sbb
add
loope
pop
pop
pop
loope
clc
test
push
push
jmp
push
mov
iret
lods
aas
in
sbbl
lds
rorb
std
inc
xchg
icebp
mov
jp
out
lds
xor
mov
inc
roll
xchg
sbb
pop
cmp
shr
xchg
jb
push
cmp
jb
fstl
sub
insl
mov
shll
push
jno
mov
mov
cmp
pop
jl
mov
pop
sbb
dec
push
adc
cmp
add
jl
add
int
mov
fbld
loope
ja
ror
or
xchg
loopne
jp
xchg
mov
cmp
clc
fistpl
pop
fistpl
fsubr
imul
stos
jbe
fdivrs
jne
shll
sbbl
xchg
pop
in
les
and
test
mov
stc
jg,pt
repz
stos
repz
jp
clc
adc
out
mov
fmulp
pop
fldl
int3
sbb
jmp
hlt
cmp
cmc
push
or
xor
adc
inc
std
leave
cli
adc
mov
mov
jae
sti
cmp
sbb
mov
xchg
jp
pop
dec
push
push
add
or
mov
push
in
pop
cmp
cmp
imul
xor
lret
insb
jb
fiaddl
sbb
mov
out
jns
xchg
mov
xor
cmp
xor
inc
fucomi
jg
inc
inc
dec
lods
dec
ds
out
cmc
push
loop
and
lret
pusha
ret
imul
inc
in
mov
mov
out
fxch
es
outsl
jge
dec
repz
jno
faddl
jecxz
or
daa
dec
cmpsl
push
adc
andb
xor
sbb
jge
ret
jp
insl
mov
sbb
dec
pop
hlt
xor
push
es
out
fs
push
aas
and
xlat
xchg
das
addr16
dec
mov
sbb
incb
fdivrl
adc
jecxz,pn
movsb
fsubrs
mov
nopl
testl
xchg
jb
mov
imul
in
lods
in
sbb
stos
push
jne
sahf
mov
fdivrl
push
andb
sub
jnp
mov
jae
outsb
or
fmull
sub
fsubl
ret
xchg
cmp
mov
xor
sub
ja
sbb
mov
popf
jnp
add
cmp
push
pop
push
sbbl
mov
add
js
dec
sub
std
daa
gs
jle
xor
pusha
mov
push
lret
out
sbb
fwait
push
inc
data16
jnp
pushf
sub
dec
mov
rcll
ret
mov
xor
nop
mov
insl
xor
les
pushf
pusha
adc
sbb
mov
adc
jno
push
lock
push
or
or
cmp
xchg
and
xchg
cmp
sahf
sbb
push
sbb
movsl
adc
stc
and
dec
sbb
outsl
rcrl
test
lahf
mov
add
and
sub
xor
out
push
enter
sti
push
nop
ss
xchg
stos
divb
repz
and
lds
addb
notb
pop
xchg
sub
daa
leave
jecxz
sbb
pop
enter
inc
xor
sub
pop
mov
rol
out
lret
aad
cmpl
xchg
ret
jecxz
cmp
xchg
rorb
insb
lock
mov
inc
adc
sbb
xorb
lds
fistpll
dec
aam
rorl
lret
bound
testb
adc
and
adc
push
pop
scas
icebp
pop
cli
or
mov
pop
adc
mov
jle
xchg
mov
pop
fcoms
mov
jge
mov
loope
sti
dec
jo
roll
ret
xchg
jae
cltd
cmp
xorb
fistl
and
cld
jge
das
testl
aaa
test
scas
shrb
jnp
nop
imul
jne
cwtl
xchg
sub
jnp
fistl
sbb
out
int3
jg
lea
movsb
pop
out
push
jo
sbb
loope
mov
push
mov
dec
popf
push
dec
inc
push
xchg
mov
push
add
fmul
sub
bound
xchg
push
das
cmp
roll
jne
cmp
ja
mov
dec
cwtl
mov
jmp
push
fcoms
jno
jne
xor
cmpsl
sub
scas
fs
inc
and
sbb
inc
nop
pop
ret
inc
adc
in
push
cmc
and
or
xor
call
out
sbb
inc
xchg
mov
adc
and
icebp
lret
pusha
in
lock
lret
orl
out
push
push
out
push
adc
dec
aaa
push
cmp
mov
xlat
cmpsb
xchg
cmp
xchg
jbe
stc
xchg
mov
push
sbb
cli
fwait
inc
movsl
dec
xlat
pop
out
jmp
jns
mov
adc
mov
in
push
jmp
shrl
imul
mov
push
mov
xchg
xor
movsl
adc
mov
mov
or
inc
push
push
jg
jl
loopne
cmp
nop
xchg
dec
jp
daa
les
or
push
inc
lret
inc
adc
test
adc
pop
bound
lds
xorl
fstpt
add
pop
daa
outsl
sahf
mov
hlt
cmp
sub
rcll
sbb
xor
pop
icebp
in
lret
cmp
jmp
scas
test
adc
push
ss
inc
js
mov
imul
lahf
cmp
lret
loop
pop
call
lret
adc
push
mov
cmp
out
jge
xchg
sub
and
shlb
xor
ljmp
mov
inc
or
cmp
sub
loope
pop
rcll
cld
inc
dec
ficoml
daa
xor
pusha
sti
adc
jbe
divl
xchg
jmp
adc
push
pushf
scas
mov
inc
out
jmp
cmp
scas
in
stc
adcl
jbe
push
dec
xchg
cmpsb
cmp
jb
outsb
mov
stc
je
push
sarb
mov
lret
hlt
mov
pop
imul
repz
push
dec
and
insl
outsl
add
ffree
arpl
in
push
loop
jne
je
xor
jge
inc
pushf
mov
dec
inc
or
cmp
sbb
xchg
or
push
dec
clc
and
mov
lock
sub
mov
pop
je
mov
mov
jle
sbb
adc
sbb
rorb
incl
and
mov
in
cmp
mov
std
lret
and
dec
pop
jg
test
mov
popa
ds
adc
aas
mov
sbb
sub
or
dec
and
cmp
mov
jp
push
sbb
jb
lret
insb
inc
lods
xorb
cmp
scas
pop
aaa
lods
ja
je
test
fidivrs
xchg
pop
and
movsl
cmp
add
mov
data16
enter
sub
cmp
rol
aaa
in
cltd
push
inc
cmp
sbb
loopne
mov
dec
push
pushf
cmpsb
mov
xchg
adc
dec
mov
pop
js
push
adc
dec
fsubr
sbbb
pop
sbb
dec
dec
in
and
cmp
cli
or
xchg
pop
mov
in
sub
repz
xor
xor
gs
dec
int
addr16
dec
or
lcall
ret
cltd
mov
sbb
subb
lds
sub
iret
sub
xchg
jnp
pop
les
sbb
dec
es
hlt
push
iret
in
test
mov
mov
or
xor
mov
cmp
ds
out
jecxz
orl
push
xchg
repz
rolb
pop
xchg
xchg
jg
pop
inc
jns
test
lods
sub
movsl
std
lods
dec
jae
out
popf
sbbb
int3
inc
xchg
sub
mov
aam
cmpsb
nop
or
sti
sarb
push
cltd
push
fwait
dec
inc
adc
dec
cmpsb
stos
push
cltd
sub
insl
inc
or
out
mov
mov
shld
cmc
xchg
mov
pop
enter
add
outsl
mov
adc
stos
xchg
fstp
jne
test
movsl
cli
cmpb
mov
or
data16
in
xchg
jmp
sub
es
sti
xchg
jae
mov
outsb
aaa
pop
ret
clc
adc
rcrl
or
mov
cltd
mov
fbstp
ret
xor
mov
mov
leave
mov
out
inc
call
lret
and
dec
inc
pop
in
test
aaa
loop
ss
clc
ds
enter
cmp
lods
imul
cmpsb
rcrl
mov
sbb
fs
jae
push
jl
inc
sub
and
movsb
pop
fisttpll
bound
push
dec
jl
add
negl
add
jecxz
aas
adc
mov
mov
inc
jg
dec
addr16
loop
mov
mov
mov
arpl
push
fadds
cmp
mov
rcrl
push
ja
cmp
loop
mov
jns
inc
mov
pop
lock
adc
js
mov
cs
outsl
push
and
push
arpl
testb
jnp
dec
and
push
cmc
mov
sbb
imul
aaa
lret
decl
dec
call
pop
lock
xor
pop
mov
dec
or
xor
popf
aam
inc
xor
pusha
movsl
lock
mov
push
sbb
ds
les
xchg
sub
nop
fucomip
shr
push
sub
mov
mov
pop
adc
rcrb
mov
jg
fisubrs
inc
gs
outsl
push
imul
pushf
inc
test
loop
ss
inc
test
inc
jle
lretw
inc
sbb
jmp
mov
xor
mov
dec
push
jno
adc
adc
int3
mov
mov
hlt
dec
out
ss
in
hlt
cmp
sub
shlb
sbb
mov
push
fimull
add
into
pop
xchg
xor
outsl
push
jecxz
adc
inc
popf
or
gs
out
lods
sub
nop
cmp
jne
cmp
lcall
mov
adc
aas
mov
scas
xchg
add
add
push
mov
xchg
ja
xchg
mov
pusha
add
mov
xchg
mov
fwait
mov
cmpsl
data16
adc
jae
sbb
xor
jmp
ror
pop
rcr
repnz
clc
sarl
jecxz
popf
loop
or
out
mov
mov
fisubs
nopl
push
in
lods
xchg
dec
aad
lret
test
insl
adc
je
bndstx
adc
cmp
repz
imulb
mov
xchg
sbb
lahf
inc
jle
mov
sbb
repz
or
xor
mov
sub
mov
pop
cmp
outsb
jle
out
inc
mov
inc
fmulp
mov
dec
add
imul
popf
loop
pop
mov
mov
mov
cmpb
adc
xchg
das
dec
mov
fst
mov
lea
cmp
in
pushf
addr16
andb
mov
lods
add
jno
xchg
pop
add
sarl
inc
add
inc
dec
mov
faddp
out
mov
xchg
sbb
jno
mov
fistpl
xlat
inc
insl
lds
call
loop
ret
movsl
pop
test
add
push
cmp
push
insl
je
sahf
lods
xor
mov
push
cld
adc
pushf
cwtl
cltd
xchg
stc
dec
mov
jge
xchg
xchg
inc
fadd
aad
sti
add
stc
and
adc
repz
or
push
mov
je
loope
xchg
pushf
mov
add
std
xor
jp
cmp
xchg
dec
mov
movsb
test
push
loopne
pop
mov
sbb
imul
insl
aam
push
or
push
cmp
div
aaa
lods
mov
lahf
add
fwait
xor
dec
test
xor
loop
lret
mov
mov
in
insl
cmc
popf
mov
rolb
mov
mov
jns
pop
gs
inc
xchg
cmp
push
lret
and
xor
add
add
cltd
push
jb
mov
les
mov
push
insb
outsb
cmp
loop
hlt
fisttpll
inc
in
test
arpl
inc
test
mov
rorb
and
ja
adc
or
loop
xlat
or
jle
pop
punpcklwd
xchg
pcmpeqb
mov
pop
aas
ficomps
fisubl
imul
lods
pusha
dec
xor
int3
jg
pop
and
xchg
or
inc
push
inc
fnsave
fcom
inc
add
or
mov
in
mov
fdivrl
xchg
inc
pop
call
or
sub
sbb
xchg
das
mov
lret
dec
mov
jb
test
sbb
mov
mov
sub
xchg
sbb
ret
sub
in
sbb
mov
dec
xlat
aaa
call
in
and
in
inc
scas
inc
jb
imul
mov
lea
imul
jmp
out
and
adc
sbbl
adc
inc
nop
xchg
sbb
lret
mov
leave
in
sti
sub
sub
pop
popf
arpl
adc
popa
loopne
xchg
xchg
outsb
mov
mov
inc
dec
mov
or
aam
xchg
sbb
cmc
inc
stos
mov
jg
add
push
div
sbbl
xor
push
jo
adc
cmp
xor
sti
arpl
cmp
popf
dec
stos
shlb
push
arpl
inc
pop
ret
stos
sbb
sbb
add
pusha
mov
or
shlb
cs
outsl
iret
inc
push
inc
hlt
in
sub
stos
fsubl
push
stos
push
pop
scas
dec
mov
dec
inc
cwtl
cmp
xor
push
mov
fs
xchg
lret
xorl
cmc
outsb
inc
add
enter
dec
add
lret
jb
sbb
das
or
icebp
movsb
dec
sub
xlat
lds
idiv
fidivl
sahf
jg
int3
dec
jg
jnp
iret
mov
hlt
mov
ret
icebp
sub
stos
in
xor
add
mov
or
idivb
adc
and
mov
add
cmp
inc
inc
push
icebp
xchg
sub
mov
and
test
popa
push
jnp
pop
inc
outsl
add
jge
pop
mov
in
scas
mov
fisttps
lods
ljmp
movsl
adc
inc
aad
jbe
cmpl
inc
repz
sub
pushf
popf
add
and
in
push
xchg
cmp
pop
dec
add
push
hlt
lds
cmp
mov
les
jmp
xor
and
repnz
loop
xor
jns
add
cmp
arpl
aad
rorl
xchg
mov
lds
xchg
fwait
adcl
pop
adc
sub
mov
into
pop
movb
jp
pushf
lods
test
jb
adc
mov
cmp
pusha
ret
fsubl
mov
cltd
add
mov
push
bound
push
dec
inc
fisubs
inc
outsl
out
push
cmp
dec
movsb
pop
mov
sub
hlt
jge
clc
xchg
sahf
bound
jo
adc
aam
jmp
out
inc
cmp
lea
aam
mull
and
xchg
cmp
xchg
rolb
cmp
scas
aad
fisubrs
lahf
mov
mov
dec
push
lret
and
out
jae
mov
into
pop
jno
test
or
loope
pop
sub
pop
sub
imul
fcoms
or
and
mov
jae
pop
sub
enter
push
jecxz
in
jecxz
aas
adc
addl
nop
or
aam
insl
scas
les
mov
ja
cmp
dec
push
shl
mov
or
mov
fsubr
sub
inc
stos
les
jb
dec
test
movsl
cmp
sub
sbb
sub
cmc
sarb
mov
sub
inc
cltd
das
inc
enter
sub
mov
jns
pop
pushfw
imul
or
or
pop
dec
bound
ja
les
xlat
sbb
sahf
lods
jo
aad
push
sahf
pop
jbe
adc
pop
inc
loop
jne
and
imul
out
repz
daa
stos
arpl
pushf
jae
ret
add
scas
stos
jmp
repz
inc
popa
sbb
mov
into
je
inc
sbb
xchg
push
jmp
outsb
fwait
lods
outsb
dec
jb
dec
xchg
jnp
xor
mov
test
add
lds
inc
xor
mov
scas
adc
jns
jl
leave
mov
xor
jl
movsb
push
les
mov
fwait
cmpsl
mov
dec
mov
xor
mov
xchg
dec
ret
cmp
push
data16
jg
sbbl
xor
adc
test
repnz
jmp
stos
dec
push
jno
ret
push
jbe
dec
out
adc
lret
add
push
in
ret
sbb
sub
sbb
in
scas
cmp
cmpsb
push
fbld
sahf
scas
push
mov
jno
dec
add
jno
xorl
sbb
lcall
cwtl
inc
push
fdivs
mov
cld
sub
lahf
aam
sahf
lret
fwait
test
icebp
clc
je
or
push
xchg
push
and
push
jb
cwtl
fwait
xchg
push
or
xor
mov
pop
inc
lret
mov
push
pusha
fisttpl
std
jo
in
in
pop
repz
pop
pusha
pop
mov
lret
inc
pop
xchg
jecxz
in
xor
pop
mov
pushf
mov
loopne
test
inc
cmpsb
pusha
outsb
and
mov
or
imul
xchg
movsl
xchg
add
cmpsb
and
dec
adcl
int3
icebp
movsl
fadds
in
add
popa
cmp
xchg
ja
push
rcr
loop
push
dec
xor
ss
fiaddl
mov
cmp
pop
shrl
mov
es
mov
mov
test
inc
xchg
xchg
or
int
mov
hlt
popa
cmpsb
and
loope
xchg
adc
xchg
add
jp
adc
and
cli
and
jne
fwait
shrb
aaa
notrack
or
push
xchg
cmp
mov
sbb
inc
ja
pop
jno
je
lods
lods
xchg
montmul
cmpsb
into
push
cmpb
push
mov
jae
out
mov
pop
scas
stc
iret
push
cmp
stos
dec
xor
dec
cs
scas
and
nop
call
je
outsl
push
ljmp
out
in
mov
dec
insl
add
mov
mov
adc
push
ret
lret
lds
or
xchg
sahf
cmp
ret
xor
pop
ljmp
shrl
add
mov
cmp
icebp
inc
lock
adc
jmp
popf
outsb
iret
call
notb
daa
test
rcrl
sbb
sbb
mov
jecxz
movsl
sbbl
xor
vphsubwd
mov
and
jmp
or
into
cmpsb
cmp
jmp
push
mov
xchg
xchg
jb
dec
mov
pop
cmp
push
mov
imul
dec
lods
clc
mov
test
sub
insl
push
es
xchg
mov
stc
or
jp
arpl
mov
decl
incl
in
ljmp
jae
mov
mov
and
xchg
data16
fldcw
mov
mov
jg
or
push
dec
lds
jb
pop
cmc
or
xlat
daa
and
xchg
jne
out
insl
push
xchg
mov
repnz
fstpl
jo
test
ret
push
out
xchg
mov
loopne
mov
mov
ja
jecxz
xor
in
jns
in
dec
fistps
mov
xor
sub
push
jne
je
dec
cmp
jl
sti
mov
jo
mov
mov
lret
test
ljmp
test
call
movsb
lahf
ss
in
pop
push
mov
jo
cmovl
sbbb
push
fwait
jae
mov
cmp
mov
loopne
pop
std
cltd
push
pop
addr16
adc
mov
jmp
jae
mov
jg
dec
mov
loope
shll
jge
jae
in
aaa
cwtl
lret
fwait
in
test
jge
test
jmp
or
shlb
lret
xor
test
int
test
inc
push
push
outsb
loope
push
cltd
cli
or
push
cltd
mov
gs
jl
stos
sti
sub
xor
mov
jb
out
xor
adc
icebp
cwtl
push
out
cmpsb
les
fsqrt
cmp
adc
gs
mov
mov
mov
pop
xchg
lds
mov
imul
shrb
scas
shl
mov
xlat
push
jg
movsb
jg
dec
fdivr
rcl
loop
pop
dec
mov
insl
xchg
inc
inc
lret
jmp
test
pop
push
inc
fidivs
pop
push
mov
adc
es
mov
sbb
add
xor
or
push
cmpsl
jns
jae
fsubrs
repnz
xchg
sbb
dec
xchg
jl
adc
aam
popf
es
pop
inc
mov
out
sbbl
filds
lcall
sub
cmp
pop
jo
test
aaa
dec
adc
pop
addr16
cmp
out
jae
mov
cmp
shlb
pushf
int
iret
outsl
imul
aaa
decb
mov
movsb
cmp
or
loopne
loope
xor
ret
dec
adc
pop
insb
in
push
push
ljmp
jno
xchg
and
out
outsl
pop
aaa
pop
cmp
mov
mov
cmpsb
in
mov
pop
loopne
in
inc
shrb
jp
pop
pop
ret
in
fistpl
dec
push
test
les
shl
sub
or
clc
pop
adc
iret
cwtl
cmp
pusha
add
aas
rcr
dec
adc
orb
in
sub
or
mov
xchg
jns
in
inc
mov
mov
xchg
fdivr
insb
imul
adc
gs
sbb
and
or
xchg
push
jmp
out
out
jbe
adc
push
fcomps
call
fists
inc
ret
adc
mov
fs
mov
mov
sbb
cmp
cli
xchg
add
roll
push
and
lahf
push
jbe
fs
es
test
jb
mov
hlt
pop
cwtl
or
scas
notl
fisttpl
add
and
or
and
or
mov
out
dec
and
or
add
and
and
es
cmp
enter
cmp
cltd
aas
add
lods
xchg
cli
cmp
fimull
out
flds
sti
lock
in
lahf
rorb
sahf
repz
inc
fdivr
nop
mov
push
lds
iret
das
out
inc
fnsave
js
xor
add
adc
gs
sbb
in
std
pop
xor
cmpb
add
inc
cmpsl
clc
push
fsubrs
or
imul
xchg
jns
pop
pop
cmp
cltd
cs
mov
cmpsl
inc
cmp
lcall
dec
xlat
outsl
mov
add
pop
nop
sub
sbb
adc
inc
nop
loopne
ret
int3
add
or
cmp
in
sarb
mov
enter
out
push
pop
out
in
xchg
or
push
cmp
mov
in
faddp
gs
push
das
movb
dec
xor
cmc
mov
add
push
les
mov
iret
mov
inc
cmc
daa
xchg
sbb
shl
lods
jmp
std
out
push
and
push
out
cmp
mov
inc
cs
xor
sbb
fistps
jmp
jecxz
pop
xchg
lock
xchg
fidivs
sub
cmp
xor
mov
or
xor
sub
ficoml
inc
shll
mov
fadds
mov
sahf
and
sub
adcl
std
or
cmp
aam
xchg
pop
cmp
mov
aas
in
frstor
aam
stc
pop
push
insl
lret
adc
pop
stc
pop
sub
fimuls
out
add
inc
and
xchg
mov
push
lods
pop
xor
fidivrs
in
mov
sub
add
in
add
add
jb
inc
fsubr
mov
xchg
and
inc
jns
into
in
out
lahf
mov
in
dec
add
dec
ret
jl
mov
jmp
mov
mov
dec
lcall
stc
nop
dec
out
ds
inc
cli
xchg
je
adc
data16
sbb
int3
popa
mov
jmp
stc
adc
sub
mov
jo
jns
xor
pushl
std
sub
cmpl
sub
dec
pop
lret
add
les
lods
pop
popa
clc
mov
enter
adc
push
out
mov
mov
enter
push
mov
scas
push
cmpsb
mov
fstps
shrb
insb
rcll
cs
int3
in
push
rorb
xor
adc
movl
sub
adc
add
add
cmpl
test
add
jbe
and
test
adc
bound
roll
loopne
add
xchg
jge
jp
aaa
push
movsl
cmp
sbb
nop
mov
ret
jle
and
ljmp
cmp
push
js
push
xchg
call
jno
cmp
push
jecxz
dec
mov
jb
aas
xchg
xchg
pop
enter
jbe
pop
repnz
testl
jns
aaa
into
mul
xor
fists
mov
jno
add
jnp
xchg
mov
rorb
dec
loope
ficoms
or
push
pusha
jg
mov
cmp
sub
jp
pop
sub
and
mov
cmpsb
mov
sbb
xor
outsb
imul
mov
sti
gs
test
push
push
call
inc
test
ja
mov
sub
mov
xchg
mov
push
mov
sub
jno
jb
in
pop
nop
outsl
ds
xor
pop
jmp
mov
pop
cld
mov
dec
movsl
lock
mov
pushl
pusha
push
rcrl
cmc
jne
notl
fstpl
mov
adc
nop
adc
push
and
fiaddl
or
mov
icebp
movsb
sbb
pusha
ret
lds
lds
test
aad
add
andl
lock
inc
fisttpll
add
enter
mov
xor
pop
insb
mov
push
leave
and
lcall
jb
cmc
test
mov
lea
add
cmp
lret
xchg
xor
in
aad
dec
and
testb
pop
adc
out
pop
jne
add
mov
xorl
stc
sub
or
mov
or
out
mov
pop
outsb
scas
and
std
cltd
mov
lret
add
dec
rcl
rcrb
leave
push
xor
filds
sbb
adc
out
mov
pop
call
in
xchg
mov
mov
push
lea
push
mov
push
popf
repnz
mov
fwait
sti
xchg
jb
mov
mov
sub
mov
and
mov
fwait
mov
call
loop
cwtl
dec
jmp
dec
in
adc
lea
imul
xchg
cs
hlt
xchg
and
mov
out
icebp
movsl
dec
mov
jg
js
sbb
stc
daa
hlt
adc
jmp
push
mov
mov
cmp
add
imul
sbb
cmp
jno
pop
sahf
sbb
repnz
dec
add
and
push
mov
push
std
js
or
lret
adc
and
sar
add
inc
mov
adc
sbb
adc
and
jl
insb
ss
dec
aas
inc
fwait
pop
je
mov
stc
and
inc
dec
in
arpl
dec
test
jp
xchg
and
mov
mov
adc
xchg
fs
add
rol
push
repz
mov
out
ss
addr16
adc
mov
popa
cli
inc
imul
push
mov
pop
mov
sub
das
lahf
mov
cmp
sbb
push
imul
and
dec
out
sarb
pop
loopne
cmp
std
repz
fcmovb
sub
xor
push
or
mov
dec
mov
arpl
sbb
sbb
mov
lods
push
enter
stos
pop
jmp
repnz
orl
and
sbb
xor
push
in
mov
and
or
out
sar
jle
sarb
ret
js
lret
jne
mov
xor
je
flds
into
dec
out
inc
idivl
in
inc
divl
push
iret
inc
push
jo
push
jp
inc
in
mov
lcall
xchg
or
les
imul
dec
sbb
cs
test
add
lock
aad
mov
jge
sbb
aad
aam
pusha
repz
leave
aam
test
push
mov
outsb
add
mov
into
fdivrp
dec
mov
pushf
lock
jmp
cmpsb
sbb
pop
and
mov
xor
jo
xor
xor
inc
push
mov
sbb
shlb
pusha
pop
mov
lods
pop
xor
pop
push
popa
sub
movsb
scas
push
inc
cli
push
inc
cli
jne
cld
cmp
imul
into
test
xor
lock
popa
xchg
jmp
xchg
mov
xor
dec
jecxz
mov
lahf
or
xchg
mov
cmp
in
sbb
aad
pop
sub
sar
jmp
cmp
pop
mov
xchg
in
inc
xor
movsl
or
inc
into
call
pop
insl
loopne
mov
hlt
cli
push
xor
xchg
inc
sub
cmpsb
sub
xchg
mov
dec
pop
jmp
decb
fdivrs
or
sti
mov
popf
call
bound
rcll
shlb
fnstenv
or
pop
xchg
adcl
lcall
pop
mov
pop
js
adc
jle
push
mov
and
ds
flds
adc
jo
mov
mov
cmp
add
cmp
adc
jecxz
sub
push
and
test
fidivrl
fistl
popf
xor
add
or
stc
lea
jg
fsubl
ret
scas
out
test
pop
cmp
int3
test
mov
and
or
pusha
xchg
jmp
and
loopne
mov
adc
or
push
or
pop
mov
int3
sbbb
jne
push
ret
xchg
stos
fwait
std
iret
sbb
rol
js
xchg
cmp
adc
in
push
xchg
dec
push
lds
dec
and
popa
push
stc
andb
cmc
pop
dec
pop
imul
jo
aas
adc
jmp
cmpsl
es
imul
or
xchg
mov
iret
lahf
int
inc
sbb
cwtl
jno
rorb
mov
test
and
jp
xlat
xchg
cmpsl
cmp
cmpxchg
mov
outsl
jl
push
and
dec
test
subb
jmp
or
pop
call
lea
push
imul
mov
mov
adc
aaa
pop
mov
mov
mov
push
sub
mov
std
popa
xor
xchg
push
repnz
stc
nop
jecxz
ret
mov
pusha
scas
xlat
insl
fidivl
mov
xchg
xor
rep
ret
cmpsb
rcrb
add
ret
jle
xor
sub
shlb
and
aas
call
repnz
cmc
adc
rol
addl
and
and
loopw
cmpsl
mov
ror
inc
pop
gs
mov
stc
mov
ret
adcb
sbbb
lcall
xchg
ja
shlb
fldenv
push
xlat
loopne
and
cmp
mov
aam
sbbl
mov
jge
call
xchg
pushf
popf
push
in
into
cmp
cmc
fdivr
cmc
imul
inc
xchg
xchg
jno
and
rcrb
int
or
loope
js
dec
pop
xlat
xor
cmp
mov
lret
ret
xchg
repz
jecxz
mov
sbb
fidivs
adc
mov
push
xor
mov
jno
negb
cmpsb
cmp
scas
and
push
aaa
add
pop
in
and
jg
mov
movsb
popf
xor
ror
pop
xchg
je
out
mov
dec
push
cltd
xor
mov
push
pop
xor
pop
call
adc
mov
outsb
in
push
jo
cmp
sbb
add
lods
mov
push
mov
push
xchg
sub
ret
scas
mov
fists
call
or
flds
adc
inc
mov
mov
fsubr
sbbb
scas
push
and
sbb
cmp
inc
popa
and
mov
ret
cli
or
push
popf
sbb
sbbl
inc
loopne
adc
in
int3
or
dec
pop
scas
jnp
pop
je
and
jbe
add
mov
jmp
push
inc
xor
sbb
push
sub
into
and
iret
int
inc
push
sbb
iret
dec
add
movsl
mov
lret
shlb
js
mov
pop
mov
push
pop
scas
arpl
into
pop
insl
jb
loopne
lock
fnstsw
jb
and
and
loope
push
test
fdivrp
outsl
mov
adc
fbld
roll
imul
sub
cmp
rolb
mov
mov
shl
mov
mov
xchg
mov
jbe
xor
inc
inc
bound
fxam
lods
sarb
cmc
int
fucomip
sub
shlb
xchg
sbb
rorl
aad
scas
pop
aam
mov
xchg
xor
bnd
dec
repnz
aaa
lds
sbb
cmp
xchg
repz
mov
sbb
iret
ss
add
ficoml
inc
std
jmp
and
jmp
aaa
inc
sbb
in
andl
fcoms
pop
adc
into
jge
xchg
dec
fists
fistps
cmp
out
add
jecxz
or
dec
fstpt
pop
fdiv
scas
fldenv
sub
sbbl
xor
in
call
ss
push
ret
test
and
lcall
adc
inc
lods
push
inc
stc
cmpsb
inc
cmpsl
sbb
xor
lret
jg
bound
cld
pushf
inc
iret
dec
adc
jb
or
jp
data16
loope
mov
ret
test
lods
jo
test
sub
pushf
arpl
push
push
lahf
nop
daa
shll
mov
cli
push
pop
repz
xchg
add
or
adc
adc
inc
inc
dec
pop
incl
add
inc
mulb
push
xchg
pop
or
push
arpl
xor
fmuls
sub
push
ficoms
cmpsl
lret
pushf
sti
xchg
mov
sbb
in
and
sub
aaa
pop
mov
nop
push
sbb
pop
arpl
sbbl
jnp
jg
shlb
add
pop
cmpsl
sbb
sub
add
test
mov
aas
in
aaa
dec
insb
mov
outsb
xchg
ds
loopne
adc
das
andb
sbb
mov
cmp
adc
mov
arpl
adcl
je
dec
cmp
mov
xchg
add
test
pop
adc
push
push
je
xor
xlat
inc
jb
lds
repz
cmp
mul
and
mov
rcrl
filds
cld
xchg
ds
xor
mov
dec
sbb
jo
test
push
nop
add
pmaxsw
hlt
lods
xor
adc
movsb
cmp
insw
stos
push
test
jne
inc
sub
cmpl
xchg
cwtl
dec
shll
outsl
pop
scas
xchg
mov
xor
pop
es
lcall
push
int3
inc
cmpsb
inc
dec
pop
mov
xchg
test
adc
in
sub
mov
sbb
push
outsl
enter
jb
call
mov
or
imul
dec
sbbl
fdivs
int3
and
mov
jnp
loop
sub
sbb
out
lock
icebp
das
lret
dec
outsb
jle
jnp
mov
pop
lds
ficoms
xor
idiv
stc
in
inc
std
cmp
xor
sbbl
movsl
data16
shrl
or
ljmp
mull
jo
movsl
sub
jo
in
inc
dec
pop
out
addr16
arpl
inc
pop
test
and
arpl
sub
bound
dec
dec
sbb
pop
movsb
flds
shll
in
loop
xchg
push
sbb
or
xlat
pop
pop
cmpsl
insb
incb
mov
daa
jle
in
mov
test
cs
idivb
repnz
mov
test
cltd
jle
add
lock
adc
add
dec
lea
aad
test
fldl
out
dec
push
pop
ret
push
xchg
stos
shll
ja
jbe
dec
cs
std
xor
inc
cmpsl
sub
sub
int
adc
cs
add
sub
lcall
cmp
fs
mov
clc
cmpsl
daa
stos
adc
fistl
inc
jmp
push
dec
or
mov
jne
mov
xlat
sbb
hlt
dec
je
mov
sarb
testl
sub
mov
pop
jmp
adc
std
and
jne
fcompl
mov
inc
jmp
mov
fistps
mov
ret
loope
cmpl
mov
sbb
je
or
push
push
lods
dec
stc
adc
fisubrs
xchg
repz
xchg
je
lods
adc
mov
adc
fisttpll
lods
nop
ljmp
mov
jmp
movsb
loopne
cs
mov
ror
mov
push
gs
jle
cli
lret
add
xor
mov
cmp
cmp
dec
int
push
mov
popa
clc
out
xor
push
pop
mov
clc
movsb
mov
cmovae
mov
and
rorb
xchg
cwtl
ds
sti
push
negl
imul
cli
and
add
jo
out
cltd
pop
cmp
cld
js
mov
push
xchg
fisubrs
bound
ja
xchg
jb
insb
adc
icebp
jp
sahf
mov
jg
ss
in
div
flds
inc
int
test
jmp
cmpl
sub
shl
jge
sub
dec
iret
mov
hlt
pop
jne
arpl
orl
ret
and
sti
aam
in
inc
subb
sbb
xchg
test
out
rcrl
xchg
in
sbb
loope
xor
push
pop
movsb
ffreep
adc
cmp
mov
pop
adc
test
xor
in
imul
adc
mov
mov
pop
dec
inc
adc
lods
in
mov
dec
sub
hlt
inc
mov
je
int
lret
sti
push
arpl
ja
rorl
sub
idivl
scas
ret
stc
fistl
subb
ret
push
push
icebp
or
fnstcw
adc
lret
and
icebp
sbb
out
mov
lret
testb
loopne
xlat
add
sub
adc
jbe
insb
and
jp
sbb
dec
or
xchg
aas
sbb
out
jo
mov
scas
mov
mov
addr16
xchg
in
jae
pop
adc
mov
daa
add
insb
push
mov
mov
repz
adc
imul
mov
mov
push
mov
test
aad
lock
push
insl
mov
and
rcr
subl
xchg
mov
pop
pop
jnp
add
xor
mov
sbb
mov
mov
movsb
push
je
adc
pop
xchg
daa
test
data16
std
xchg
mov
pop
mov
loop
xchg
outsb
dec
cmp
mov
cmp
cmp
add
sbb
adc
repnz
jecxz
in
sub
cwtl
add
sub
add
leave
fisubs
jbe
sub
sub
dec
jnp
call
shrl
cli
push
cltd
xchg
cs
adc
and
push
or
xlat
mov
ss
add
pop
mov
pop
lea
mov
adc
loop
sbb
mov
sub
adc
xor
xor
cmp
pop
push
bnd
dec
js
mov
test
out
cmp
mov
pop
or
adc
mov
stos
mov
rolb
pop
aad
mov
adcl
mov
dec
cltd
mov
aaa
xor
push
enter
mov
push
jmp
xor
rcr
jl
mov
rcrl
push
mov
icebp
pop
mov
add
cmp
aad
xor
bnd
mov
add
pop
sub
fcmovnu
outsb
push
hlt
adc
std
testl
xlat
cmc
adc
mov
sub
outsb
pop
notb
sbb
xchg
cmp
push
iret
inc
jmp
ficoml
dec
push
sahf
push
inc
mov
lods
or
mov
push
fwait
enter
xor
fnstenv
loop
sub
xchg
mov
lea
push
iret
js
jns
mov
dec
pushf
aas
test
pop
insb
mov
dec
int
sti
aad
xchg
jmp
movsb
sbb
add
xchg
adc
jbe
mov
mov
loop
xchg
jns
xor
aam
sbb
sbb
sub
addr16
fldcw
cld
popf
sub
test
inc
push
add
cmp
xchg
push
addr16
xchg
pop
jne
mov
jl
push
and
sbb
xchg
dec
stos
mov
aad
jecxz
add
pop
mov
sbb
test
je
insb
fnstenv
hlt
jle
jp
imul
xchg
movsb
mov
jge
into
mov
nop
int
jl
or
jmp
daa
shl
adc
rcrb
inc
lahf
outsb
imul
push
out
xchg
jne
ret
iret
cmc
adc
xchg
ret
iret
mov
cmp
dec
hlt
inc
clc
mov
dec
dec
cmp
aaa
lret
in
push
adc
and
sahf
xor
data16
lock
int3
movsl
adc
loop
jge
push
mov
out
cltd
pop
test
xlat
push
ja
roll
int3
xchg
jno
hlt
cmpsb
dec
add
dec
push
frstor
ja
cmovl
scas
mov
xor
mov
pop
mov
cmp
call
xor
out
lret
mov
in
add
cld
mov
pop
inc
xlat
nop
loop
mov
ds
and
pop
sahf
fwait
inc
xor
mov
push
jge
fcomi
pop
or
inc
les
in
call
pop
pop
jnp
xor
mov
mov
pop
sub
mov
add
stos
mov
jno
jne
test
push
cmpsl
and
mov
sti
push
pushf
cltd
insb
ret
or
insb
hlt
push
cmp
mov
imul
cmpsl
test
fisttpl
mov
lods
xor
mov
mov
adc
inc
dec
pop
inc
dec
mov
lahf
xchg
xlat
mov
pop
jp
and
add
jge
ret
sbb
and
pusha
arpl
push
xor
mov
add
jmp
sahf
popa
lock
ds
add
xor
fnstenv
and
mov
add
scas
repz
pop
ficoms
lea
scas
cmp
rol
pop
and
jae
pop
mov
pop
jle
popa
daa
cwtl
loopne
in
int3
push
cmpl
pushf
xchg
mov
sarb
es
cli
mov
mov
mov
pop
add
sub
cmp
and
ret
lcall
pop
or
sarl
lahf
dec
add
mov
dec
jb
sub
pop
xchg
cmc
dec
sar
jecxz
cwtl
cs
jno
lock
push
xchg
inc
push
fdivs
imul
or
xchg
ret
jp
subb
pushf
dec
cmc
mov
xor
pop
add
inc
pop
clc
lods
loop
test
mov
adc
cmp
popw
lcall
das
fdivl
das
aam
pop
cld
push
jmp
gs
ljmp
scas
or
ret
cwtl
jp
cltd
pop
lahf
mov
adc
call
dec
mull
inc
dec
dec
inc
sub
aaa
adc
cltd
fwait
je
jmp
decl
pop
cmp
and
in
aas
flds
cs
adc
int3
jnp
scas
push
xchg
decl
adc
in
and
sbb
imul
jmp
mov
roll
data16
jno
fisttps
scas
push
out
loopne
shrl
inc
or
std
sahf
xchg
stos
andl
hlt
fcomip
jns
push
ret
jb
jb
pop
cmpsl
dec
adc
cli
xchg
subl
or
cltd
std
sarl
fsub
mov
cmp
js
dec
sub
imul
mov
into
or
bound
xlat
adc
mov
add
testb
pop
mov
daa
lcall
and
leave
lods
mov
imul
add
lea
repz
fs
jb
pusha
in
leave
and
inc
push
repz
jp
xor
pop
js
xchg
loopne
rorb
stos
sbb
cli
pushf
dec
mov
adc
jne
mov
dec
loop
adc
or
dec
repnz
jb
xchg
sbb
fwait
pop
lock
or
push
fsts
fmuls
and
xchg
fstps
pop
lcall
fidivs
mov
push
call
mov
pushf
xor
into
jmp
push
dec
test
daa
leave
mov
cmp
pop
push
adc
and
sub
pop
jge
add
incl
jge
sbb
movsl
or
mov
sub
loope
imul
jle
jmp
mov
das
mov
dec
ds
nop
outsl
cld
or
mov
gs
xchg
insb
add
fimuls
or
push
and
cmp
out
push
mov
mov
xchg
movsb
clc
stos
aad
lea
xchg
inc
adc
lahf
mov
add
vldmxcsr
pop
push
test
fimull
test
subb
das
jle
mov
adcb
mov
cmpsl
push
jno
push
lretw
test
loope
icebp
push
fnstenv
stos
mov
pushl
cs
sarb
adc
mov
mov
leave
mov
sbb
cltd
push
imul
push
loope
jle
bound
xchg
jge
adc
xlat
addl
cs
push
xchg
dec
jecxz
jb
fbld
clc
dec
jae
xor
ja
negb
inc
push
test
mov
enter
lret
or
jg
push
fldcw
xchg
icebp
cmpsb
mov
mov
stc
icebp
push
jbe
das
lea
jmp
sbb
jns
int
addr16
dec
push
rol
mov
push
jge
pop
fldl
in
repnz
push
or
mov
inc
sahf
add
pop
notb
mov
testb
xchg
xchg
aam
jmp
outsb
mov
loope
push
jno
out
jne
mov
or
stos
lods
and
out
mov
push
rcrb
inc
push
jo
repnz
test
in
repnz
push
dec
sbb
push
jns
lahf
and
arpl
mov
loopne
sbb
or
pushf
daa
push
or
ficoml
adc
fsubrp
pop
hlt
sbb
jnp
and
xchg
mov
testb
call
cmp
inc
data16
cmp
call
out
dec
fists
cmpsb
pop
mov
dec
sarb
leave
cmp
arpl
cmpsl
xchg
or
and
mov
jecxz
and
push
cmp
imul
mov
sbb
sub
mov
adc
bound
jo
add
cld
and
push
fsub
jno
lods
mov
jnp
push
or
jne
adc
mov
sub
adc
movb
and
pop
call
scas
and
jnp
outsl
cli
into
jb
pop
imul
inc
or
dec
lods
mov
fbld
notb
ss
or
into
gs
sbb
aad
aas
mov
int3
sbbb
jmp
aaa
dec
pop
subl
stc
je
shl
jge
rcrb
cmp
fnsave
and
or
ret
adc
inc
xchg
cltd
divl
inc
push
ss
xchg
pop
rclb
pop
mov
push
in
mov
test
xchg
popa
clc
sbb
jg
out
cmpsb
sbb
nop
negl
xor
jmp
mov
cmpsl
mov
movsb
jg
imul
mov
movsl
dec
pop
push
adc
icebp
mov
sub
ja
imul
push
data16
cwtl
daa
sub
xchg
mov
xchg
aaa
mov
mov
pop
inc
push
outsb
dec
and
xor
xor
and
mov
popa
lret
xor
js
les
pop
iret
movl
cmp
lods
fdivr
or
cmovge
stos
jnp
lret
shlb
stc
push
dec
scas
sbb
push
int
xchg
cmc
aam
mov
mov
sbb
rorb
mov
mov
or
scas
pop
adc
push
sub
aad
mov
loop
add
bound
ss
pop
mov
adc
loopne
pop
sbb
aaa
xor
and
mov
mov
xchg
xchg
jg
int
add
fsubrl
lret
int
fcom
lods
and
je
adc
movsb
out
pusha
xchg
mov
outsb
loop
push
jae
mov
xchg
mov
cmp
or
adc
jmp
and
pop
push
dec
shrl
in
pop
dec
inc
movsb
ds
and
nop
aad
and
mov
cltd
adcl
call
loop
jg
sub
arpl
test
jno
mov
movaps
lods
and
int
int3
push
fimuls
xchg
cmp
jg
mov
sahf
add
pushf
adc
xor
or
sub
clc
and
sbb
lcall
ja
cs
dec
loopne
repnz
cmpl
loop
data16
incl
jg
pop
lods
mov
dec
jl
jl
push
sub
dec
mov
sub
imul
sbbl
int
pop
out
stos
dec
xchg
and
test
jno
mov
sub
push
inc
sub
rcrb
les
pushw
test
xchg
mov
in
test
into
mov
fldt
or
popf
test
inc
pop
icebp
pusha
ret
outsl
int3
add
ds
addl
sbb
pop
ret
movsb
pop
pop
sahf
jnp
fidivs
push
mov
cmpsl
push
popa
pop
aam
fdivl
fidivrl
dec
lret
mov
and
js
or
push
jle
adc
ret
mov
bound
enter
sbb
or
imul
push
lock
xchg
sub
stos
scas
inc
repz
push
pop
push
mov
in
sbb
nop
mov
inc
imulb
mov
pop
push
inc
xchg
jo
in
sarb
outsb
inc
add
xchg
xor
or
rolb
xchg
fisubl
cmc
shr
cs
ds
adc
pop
stos
mov
xlat
dec
movdqu
fbstp
mov
dec
push
daa
add
jbe
ljmp
icebp
clc
popa
or
adc
scas
sbb
sub
fstpt
jne
ds
lret
inc
loope
adc
mov
in
inc
sub
ja
into
mov
pop
pop
dec
adc
rorl
lods
int
test
fldt
cmc
push
cwtl
mov
daa
scas
sub
fmulp
out
js
inc
iret
xbegin
and
adc
dec
pop
xchg
pop
cltd
repnz
out
enter
imul
hlt
or
xor
pushf
iret
aas
add
aad
movsb
shl
cltd
movb
sub
aad
inc
dec
stos
orl
insl
movsl
lds
lock
pop
mov
push
inc
aas
add
ja
adc
fadd
pop
mov
dec
and
xor
orl
test
mov
xor
jl
nop
sbb
cmp
inc
mov
cmp
mov
mov
cltd
fcom
push
imul
sub
popf
loopne
sbb
inc
lods
pop
data16
icebp
cmc
adcl
push
push
inc
in
lods
fcmovnbe
cmp
jns
fidivs
inc
inc
in
xor
xorl
js
jg
test
pop
push
clc
push
dec
mull
sbb
cmp
lret
dec
test
push
jmp
aas
stos
lds
fidivs
cs
mov
popf
imul
push
cwtl
inc
xlat
mov
sbb
or
mov
jmp
scas
inc
jmp
popf
jmp
shll
xor
pop
ds
loopne
add
push
jge
repz
or
jnp
cmpsb
repz
push
dec
xlat
jno
or
adc
out
mov
or
jge
lds
add
mulb
jg
hlt
pop
fwait
inc
addb
outsb
outsl
cmp
dec
adc
dec
loopne
in
sbb
mov
push
mov
inc
popa
add
cmpsb
xchg
into
jg
test
push
jmp
out
inc
out
jae
pop
icebp
mov
or
rcll
add
lret
repz
pop
imul
mov
and
and
mov
jg,pt
cmp
lock
ret
adc
xor
pop
cli
arpl
inc
sti
int
pop
leave
mov
push
or
rcrb
arpl
sbb
pop
sub
jge
xor
pusha
jno
test
sarb
push
cwtl
sub
fwait
push
icebp
inc
xchg
int
xchg
inc
mov
loop
fiaddl
mov
cmp
push
lcall
ja
lcall
scas
inc
adc
inc
push
imul
add
cltd
rclb
cmc
mov
push
add
or
xchg
push
out
fistl
fsubr
test
out
je
sub
enter
fldcw
sbb
cmp
inc
xor
int
dec
loopne
mov
mov
ljmp
in
cmpsb
sub
dec
out
xchg
sbb
jmp
loopne
mov
dec
pop
adc
xor
ss
movsb
cs
xor
mov
sbbb
and
lcall
inc
cltd
mov
rcrl
or
ror
loop
pop
clc
daa
les
cmc
inc
adcl
dec
je
std
sub
ss
dec
mov
insl
mov
pushf
test
test
or
sub
xchg
inc
or
fldl
pop
sub
xor
pop
add
inc
dec
mov
mov
mov
inc
outsl
mov
xchg
lahf
loop
shll
jns
sub
mov
je
cmp
lahf
adc
aam
xor
sub
out
rolb
add
push
sahf
mov
xchg
hlt
loope
push
insl
sub
inc
xor
je
xchg
xor
jno
sbb
push
dec
movsb
jno
divl
dec
and
jno
pop
dec
lret
lock
mov
arpl
adc
shrb
fldenv
push
fwait
ss
sbb
push
lret
rolb
clc
cmc
mov
in
jle
andl
or
push
loope
repnz
fsubrs
out
into
jmp
add
sbb
scas
xchg
sti
xchg
sbb
sbb
fldenv
jns
fistpll
mov
ja
xor
daa
leave
add
add
dec
pop
and
movsb
pop
test
test
int
inc
fsts
out
sbb
xchg
inc
xor
sti
loopne
or
add
xor
jle
xor
pop
sahf
bound
iret
test
dec
push
push
jmp
shr
xchg
sub
cmp
xchg
in
cs
ret
ret
dec
jecxz
xchg
mov
cld
aad
sub
sub
push
test
push
sbb
adc
pop
in
subb
std
push
cs
and
icebp
rclb
stc
adc
out
lret
bound
push
pop
mov
iret
jecxz
shl
pop
ret
xor
xor
pop
outsl
cs
jae
sbb
int
pop
sbbb
inc
sbb
push
add
sti
repz
xor
loop
je
int3
popa
iret
cmp
pop
push
imul
add
mov
mov
das
call
cmp
sub
dec
or
and
mov
mov
imul
pop
icebp
sbb
sahf
and
xlat
into
mov
sub
and
sahf
adc
pmuludq
add
dec
out
add
frstor
clc
test
dec
xor
rsqrtps
test
jge
inc
incb
jns
pop
ljmp
fadds
aad
lahf
push
loopne
jnp
inc
outsb
fisttpl
fsub
ret
frstor
leave
xlat
pop
pop
iret
and
jp
inc
dec
jmp
add
lds
jne
inc
in
hlt
loop
adc
ja
xor
stc
in
push
xchg
sub
cwtl
mov
lret
mov
sub
pop
notl
adc
and
xor
lea
pop
out
stos
rolb
mov
push
je
rol
js
scas
in
fildll
mov
push
mov
gs
scas
aad
xchg
arpl
mov
dec
pusha
mov
mov
shl
or
pop
shrb
mov
pop
adc
mov
mov
in
repnz
push
andl
mov
pop
adc
add
mov
testl
test
xor
inc
mov
mov
add
xor
pop
inc
cmp
cmc
xchg
imul
lock
cmp
push
pop
mov
movsl
imul
popf
xchg
and
pop
jl
cltd
lods
cmp
jae
cmp
inc
aam
xchg
sbbl
sub
inc
or
push
in
dec
call
fistl
loope
in
and
mov
jge
ffree
jns
movsb
inc
fwait
xor
addr16
push
ficoms
sub
xor
push
test
in
cmp
cwtl
bound
mov
ljmp
mov
lcall
sti
scas
jno
adc
push
xchg
daa
push
sbb
or
outsb
mov
pusha
lcall
rorl
pop
xor
int
bound
fcoml
cmp
or
jecxz
stc
nop
jge
pushf
sub
lahf
mov
mov
mov
add
and
xlat
push
and
pop
cmc
xor
popa
fsub
fsubrl
rorb
sbb
sbb
sbb
fisttps
push
xor
scas
out
and
sbb
pop
ficomps
push
outsl
add
mov
fucomp
xchg
addr16
cli
pusha
mov
sarb
int
fnstenv
subb
cmp
popa
popa
int3
sbb
loope
into
xor
adc
lret
mov
mov
mov
fcmovnb
movsb
popf
and
repz
test
scas
mov
imul
push
pop
mov
cmpsl
push
test
jp
test
and
mov
aad
sbb
je
adc
and
mov
jmp
aas
dec
nop
in
add
jns
int3
stos
mov
decb
fs
sub
addr16
xchg
xchg
imul
out
ret
or
xor
mov
aam
loopne
mov
push
pop
lret
mov
and
mov
movsb
inc
add
mov
or
mov
sbb
and
push
jp
jl
and
xchg
jl
lock
or
pop
popf
gs
push
aad
pop
jo
jns
sbb
add
jg
pop
jne
sahf
xor
xor
je
in
mov
add
inc
mov
mov
faddl
pop
mov
ret
jle
popa
and
mov
imul
nop
dec
int3
pop
insb
nop
jge
bnd
loop
cwtl
fwait
pop
mov
mov
ljmp
out
popf
test
les
cmc
jo
and
pop
jle
pop
and
mov
pop
mov
lock
dec
pop
imulb
jns
pop
les
add
bound
sbb
fwait
xchg
xor
es
popf
hlt
inc
es
push
into
inc
fdivrp
in
shrl
cmp
xlat
cmpsb
jo
sahf
lds
loop
pop
adc
mov
add
call
mov
jge
out
test
jmp
or
lds
jl
inc
sub
jnp
sbb
dec
dec
movsl
shl
cs
lods
fdivrs
mov
cmp
test
and
add
ds
je
xor
js
dec
and
adc
dec
adc
aam
gs
sbb
mov
sbb
lods
enter
lret
sbb
stos
dec
or
sub
sub
bound
adc
pop
lcall
ds
jecxz
in
rol
lret
shlb
push
ss
pop
icebp
pusha
test
fcoml
clc
insb
xchg
nopl
vmovups
fwait
in
xchg
cwtl
addr16
fisubs
xchg
lcall
pop
mov
xchg
fsubrs
xchg
pop
push
aad
in
nop
sbb
adc
xchg
sub
mov
aaa
pop
daa
out
aad
andb
xor
xchg
push
sbb
mov
inc
fldt
arpl
push
xchg
push
outsb
ret
daa
aas
push
mov
xor
inc
or
clc
test
add
js
test
cmp
insl
aaa
push
in
arpl
mov
test
adc
shrl
xor
rcrb
jno
mov
in
add
sbb
fucomp
inc
mov
test
cmpsb
inc
sbb
and
mov
lcall
cltd
push
fmuls
dec
loop
subl
leave
sub
daa
and
xchg
gs
cld
cmpsb
push
sub
pop
mov
les
int
aad
jle
xor
imul
jg
icebp
scas
into
ljmp
or
jecxz
inc
hlt
dec
sti
push
sbbb
cmp
fsub
rorl
or
dec
ljmp
or
jbe
xchg
adc
pop
jmp
scas
dec
xchg
mov
and
out
pop
test
fstpt
outsb
xchg
adc
add
and
jne
int
cmpsl
or
adc
push
ljmp
jmp
gs
xchg
in
ret
int3
and
out
dec
lods
sbbl
lret
aam
mov
push
outsl
stos
and
mov
imul
xchg
arpl
jmp
jne
and
add
mov
sbb
push
in
add
repz
ret
adc
mov
test
ljmp
and
cld
lcall
jne
lret
int
sbb
in
pop
scas
ja
sbb
mov
gs
push
test
punpcklbw
push
mov
pop
inc
sbb
sbb
adc
ljmp
push
jmp
push
int
mov
divb
add
mov
cmp
inc
ret
push
inc
dec
or
das
scas
pop
fidivrs
jmp
cltd
adc
mov
and
xchg
dec
lods
sti
shlb
jb
loop
push
xsha1
cmpsb
dec
roll
mov
push
imull
push
aad
dec
add
jmp
mov
sarb
mov
mov
gs
fwait
push
xor
scas
dec
push
ds
idivl
pop
inc
sub
jmp
ds
mov
jp
mov
lods
sub
sub
outsb
mov
inc
idivb
mov
sub
adc
dec
xchg
mov
sub
icebp
push
mov
fimuls
out
and
xchg
inc
pop
adc
cmp
xchg
xchg
add
pop
test
sub
lock
sub
cltd
aad
sub
lcall
fcmovu
or
incb
push
js
and
lahf
mov
inc
dec
mov
dec
lret
xchg
pusha
pop
jg
sbb
repnz
shll
jmp
ret
adc
mov
outsb
add
mov
leave
pop
fidivs
pusha
cmpsb
push
mov
xchg
xor
push
xor
pop
lods
jmp
in
push
sahf
pop
mov
lret
mov
dec
popf
les
add
mov
mov
or
repnz
fisubs
cmp
shr
cli
test
sarl
flds
and
sub
pusha
andb
shrl
pop
lds
jp
sub
dec
outsl
push
inc
and
call
mov
cmpsb
push
xor
mov
pushf
or
mov
sti
stos
lods
or
mov
inc
and
xchg
aaa
faddl
leave
arpl
cmp
out
stc
push
mov
pusha
mov
or
test
loopne
or
mov
jo
mov
outsb
into
jge
leave
cmp
push
jno
test
aaa
or
in
fwait
jg
movsl
mov
data16
in
xor
test
jns
rclb
xor
addr16
pop
insb
test
push
ret
and
fiadds
lock
scas
mov
mov
clc
cltd
pusha
add
xchg
push
es
mov
loop
mov
xor
aam
dec
dec
sahf
lods
stc
ja
in
inc
or
test
push
mov
dec
push
sbb
sbb
stos
rcrb
stos
dec
lea
pusha
pop
icebp
inc
aaa
pusha
dec
hlt
aad
lahf
push
ret
jg
dec
imul
xchg
es
mov
movsl
sbb
push
test
mov
or
cmpsl
xchg
push
aam
or
decl
das
rcrb
fsubp
and
cmp
sub
pop
adc
and
ficompl
out
push
leave
int
xchg
xchg
test
mov
out
jle
insl
daa
jmp
jo
xchg
pop
cmp
cltd
shl
push
in
stc
xchg
inc
dec
loop
jle
dec
sarl
repnz
outsl
add
fcmove
inc
mov
push
orl
cmp
mov
jae
movsl
jmp
push
jno
xchg
pop
adc
ds
lahf
xchg
leave
xor
or
shll
imul
frstor
add
lret
jmp
shl
xor
push
sub
add
xor
xor
mov
jb
fisubs
inc
test
sti
jg
inc
pushf
dec
mov
aas
mov
rclb
lahf
enter
inc
jmp
faddl
lods
sbb
adc
mov
addl
xor
pop
push
pusha
push
stos
es
or
cli
mov
lcall
pusha
fistpll
loop
pushf
mov
shrb
orb
jnp
mov
dec
jle
mov
mov
stos
imul
push
and
sbb
dec
mov
or
mov
sbb
inc
push
divb
cmpsb
jb
fcoml
testl
bound
dec
pop
popa
push
fucomi
mov
repnz
lcall
in
sbb
lcall
dec
pop
int
adc
add
add
cwtl
inc
push
stc
scas
add
clc
dec
cltd
dec
std
push
mov
add
loop
fdivrl
push
mov
sub
push
mov
cwtl
in
es
cmp
mov
xchg
push
push
stos
push
mov
mov
mov
xlat
cmpsl
mov
push
lcall
in
mov
pop
adc
je
loop
pop
cmp
add
leave
cmc
or
popf
xor
shl
pop
mov
add
leave
jecxz
inc
test
xorl
sub
lret
and
out
inc
push
in
lea
mov
mov
iret
scas
out
xchg
incb
mov
and
mov
mov
push
push
fnstsw
popa
or
xchg
xchg
add
repz
pushf
cli
xchg
mov
scas
cld
fnsave
lods
fmull
xor
xchg
or
sub
mov
arpl
fimull
lcall
or
pop
lret
mov
xlat
fistps
or
hlt
fninit
sub
popa
int
mov
xor
push
sbb
sbb
mov
sub
das
lods
filds
lret
das
mov
and
xor
and
mov
lret
push
xlat
in
icebp
inc
sub
jns
aad
or
sub
sar
icebp
loope
jns
cmp
enter
xchg
pop
sub
sbb
dec
cmp
outsl
imul
mov
or
add
jb
fldenv
subl
pextrw
jp
inc
inc
outsl
mov
push
cmc
adc
inc
repz
das
fucomi
test
ret
mov
lds
adc
mov
fisttpl
orb
fidivrl
pop
icebp
or
fildll
subb
xor
out
insl
out
or
jl
xchg
fdivrl
fsubl
inc
sbb
das
mov
adc
lock
pop
jge
pop
movsl
xchg
aad
or
out
xlat
pop
out
mov
sarb
enter
gs
pop
mov
inc
inc
dec
mov
ljmp
idivb
outsl
stos
jmp
enter
test
mov
add
pusha
lock
push
mov
into
loop
leave
aad
sub
xor
xor
push
or
aaa
dec
inc
sbb
cwtl
xor
fsub
je
les
sbbl
in
jmp
and
xor
push
jns
or
push
aas
xchg
sbb
movsb
cmp
pushf
arpl
lock
mov
xchg
adc
int3
pop
dec
jns
cmp
push
mov
mov
jns
push
stos
adc
pop
push
loopne
mov
lret
test
mov
popw
jp
lods
sbb
adc
jl
pop
shlb
push
or
or
icebp
jae
pop
cmp
lods
ljmp
xor
jbe
jl
hlt
inc
add
pushf
mulb
test
shll
es
movsl
mov
inc
cmp
ret
out
sbb
push
addr16
sbb
push
mov
xchg
dec
and
cld
cmp
mov
stos
in
jbe
sub
aam
out
cwtl
or
aam
mov
out
fidivrl
mov
push
outsl
daa
ficomps
fnstsw
xor
popa
cli
negl
inc
clc
ds
and
push
pop
rcr
out
stos
inc
push
and
loopne
das
enter
add
test
mov
mov
pop
icebp
mov
loope
push
xchg
xor
adc
mov
inc
fs
fidivrs
mulb
movsb
push
shlb
shrb
xor
pop
out
ds
mov
jmp
aaa
sub
imul
mov
cmp
xchg
sub
pop
inc
push
cmc
dec
inc
lret
xor
or
dec
loop
shrl
ret
es
std
jae
ret
xchg
ss
out
mov
loope
push
or
pushl
stc
std
mov
ss
popa
xchg
cwtl
adc
mov
addr16
sti
les
mov
scas
and
xchg
test
mov
pop
insb
mov
cmpsb
push
jns
popf
bnd
andl
int
dec
xorb
push
hlt
std
gs
cli
add
xchg
sub
dec
jle
iret
mov
aaa
adc
mov
out
mov
decl
test
mov
xor
enter
popf
dec
cmp
xchg
push
inc
sahf
cmp
fsubrp
xchg
ds
arpl
mov
gs
jg
mov
cmp
je
mov
or
mov
mov
pop
pushf
out
roll
adc
or
mov
imul
lahf
adc
ret
sbb
mov
mov
repnz
adc
add
out
bnd
sbb
pop
xor
xor
fsubs
xchg
aas
rcll
inc
pop
je
lods
ljmp
out
js
adc
and
fsubs
mov
pop
mov
imul
mov
pop
andl
ds
dec
in
mov
out
mov
mov
stos
dec
xchg
sbb
ret
jecxz
hlt
sub
cmp
add
movsb
das
out
movsb
cmp
pop
daa
into
test
cltd
lods
pushf
add
sub
sub
sub
aam
std
js
mov
xchg
shll
ret
mov
mov
jno
adc
push
divb
adc
imul
into
gs
or
in
orb
xchg
sub
in
or
stos
lcall
cmp
imull
push
inc
jno
out
ror
hlt
test
rcrl
xor
sbb
mov
in
hlt
jg
sub
dec
cltd
pop
idivl
les
dec
mov
and
mov
sub
inc
dec
stc
clc
jge
repz
into
test
adc
popf
stc
rclb
andb
inc
fcomps
jl
jmp
rol
ja
xor
push
cmpsl
adc
mov
adc
clc
dec
mov
cld
jg
in
lea
lea
and
and
out
push
inc
cmp
xor
mov
shl
fstl
xor
sub
inc
mov
mov
in
xlat
or
pop
pop
jbe
sbbl
jno
js
sti
jbe
pop
push
orb
pop
cmpsl
movsl
pushf
fcmove
cld
stos
or
testl
mov
out
lcall
rcrb
scas
ret
stos
imul
cmpsl
sbb
je
outsl
ffree
lea
gs
ja
nop
insl
outsb
jns
sbb
mov
xor
jnp
pop
mov
enter
data16
leave
fst
ret
xor
mov
push
mov
jns
and
dec
gs
dec
adc
jge
pop
lret
aas
fidivs
cmpsb
cmpb
scas
aas
dec
add
pop
movsl
cmpsb
scas
or
loopne
loope
sbb
leave
je
xor
fldpi
inc
mov
pop
scas
add
imulb
push
add
stc
jle
daa
ret
aad
jmp
mov
out
pushf
aaa
adc
subb
call
cmp
imul
pop
push
addr16
stos
mov
insb
pop
popf
or
and
adc
out
dec
mov
out
jmp
or
js
adc
jp
popf
xor
lods
cmc
in
aas
or
xlat
mov
mov
lds
cmp
xorb
call
push
bound
sbb
sbb
mov
ret
xlat
inc
xlat
push
or
pop
jmp
sbb
dec
cltd
mov
das
mov
fwait
jmp
lock
xchg
mov
aad
mov
fucomi
xor
je
mov
scas
adcl
cmp
sub
mov
test
fldcw
popf
fidivl
int3
arpl
xchg
in
sbb
xchg
insl
repz
push
fwait
sahf
lods
adc
imul
jl
add
cli
shl
daa
loop
out
iret
jne
stc
aam
cmp
xor
dec
xchg
mov
insl
repnz
hlt
cmp
jbe
icebp
add
ficoms
xor
out
mov
dec
shr
repnz
push
cmp
adc
nop
jnp
pop
aam
inc
mov
jge
fiadds
xchg
iret
or
mov
jp
push
cwtl
das
dec
rcrb
fildl
mov
repz
or
cld
adc
cs
add
mov
scas
les
sbbl
cmpsb
out
mov
xchg
adc
rolb
ljmp
sahf
xor
pushf
mov
mov
sbb
xchg
inc
xchg
cltd
rol
sub
mov
stos
mov
lret
pop
loope
mov
movsb
aas
xor
pop
aaa
into
dec
sbb
pop
inc
rcrl
fadds
and
sbb
xchg
pop
xlat
lds
insb
stos
icebp
scas
pop
lods
int3
mov
lret
mov
imull
sbb
sub
nop
pop
jbe
lea
aaa
lret
adc
or
cmp
shrb
xor
inc
xchg
dec
cmp
fcomps
jnp
sub
lock
lret
xlat
das
int
or
fwait
gs
xchg
push
jnp
fwait
nop
xor
lahf
lods
or
int
gs
push
je
xlat
fs
push
fisttps
inc
jecxz
mov
jmp
rolb
mov
pop
movsb
sub
les
je
jl
adc
xlat
cs
push
mov
inc
cld
sub
cmpsb
xor
dec
lcall
push
hlt
push
sahf
sub
outsb
adc
pop
call
mov
adc
in
xchg
adc
lcall
in
clc
and
cli
push
cmp
cli
pop
into
test
inc
outsl
mov
cmpsb
in
mov
adc
int
cwtl
test
pop
adc
xchg
xchg
not
mov
shrb
lahf
ds
subb
insl
or
push
cmp
imul
pushf
popa
movsb
cmp
cmp
or
inc
fimuls
jo
push
ret
lds
ljmp
cmp
imul
inc
fstps
adc
xchg
cmp
jg
mov
insb
jmp
push
xchg
mov
cmpb
movsl
xchg
repz
sbb
mov
pop
cmc
scas
shll
sahf
jne
xchg
cmpsb
pop
hlt
adc
clc
or
mov
insb
push
inc
xor
std
repz
adc
shrl
fscale
or
push
or
daa
pop
xchg
es
mov
xchg
sbb
data16
add
mov
bnd
sub
jmp
mov
scas
fsubrl
bound
xchg
push
cmpsb
ficomps
xor
and
rcrl
sbb
cmc
pushf
jge
sbb
and
roll
jbe
xchg
mov
dec
dec
nop
push
out
in
jnp
push
pop
add
cli
jne
ds
xorl
inc
inc
gs
sub
inc
ds
jne
sbbb
sbb
out
and
fidivl
mov
mov
jecxz
jb
mov
mov
test
adc
inc
ds
outsl
gs
arpl
cmc
mov
push
mov
cmpsb
les
mov
sub
int3
scas
pop
cmp
xchg
push
lret
pop
inc
cmp
fs
pop
mov
jg
xchg
cmpsl
sub
sub
sti
xor
bound
cmp
push
call
fists
repnz
mov
push
push
inc
mov
sbb
out
dec
jmp
lock
jmp
jge
int
pop
int3
out
xor
and
outsl
push
shl
xchg
cs
push
js
out
call
adc
or
lret
mov
jo
dec
aas
lahf
sbb
sub
cmp
shl
repz
mov
stos
xchg
int3
and
push
jmp
mov
mov
fwait
cld
dec
fucomp
mov
inc
mov
mov
loopne
sahf
mov
rcrl
mov
xor
mov
lret
test
xor
pop
sbb
and
sub
jo
mov
mov
jmp
inc
mov
ret
add
jns
dec
xlat
xlat
aam
filds
ljmp
out
gs
dec
ds
sub
dec
cmp
push
adc
hlt
adc
es
cltd
popa
xchg
and
roll
dec
sbb
or
lock
out
mov
int
push
push
test
lret
int
into
mov
stc
orps
jge
push
mov
testb
inc
test
fs
test
inc
idiv
popa
into
and
push
mov
cld
scas
jl
out
aam
mov
daa
dec
dec
add
sbb
leave
push
adc
mov
aad
mov
bound
and
out
in
lea
adc
outsl
scas
nop
daa
loopne
ds
mov
mov
mov
stos
sub
dec
std
sbb
aas
test
xor
fsubrl
loope
push
adc
push
repnz
std
addr16
push
add
jnp
das
push
lea
test
pop
fbld
or
push
xor
push
pop
ret
jge
mov
mov
sahf
ret
repz
mov
push
cs
xor
mov
mov
filds
sub
pusha
hlt
push
jns
in
jb
scas
and
scas
aad
sub
das
addr16
lods
daa
push
dec
jae
ljmp
xor
jae
cs
inc
pop
and
divb
dec
inc
cli
cltd
xchg
add
mov
and
ss
sahf
stos
mov
cmp
ljmp
mov
dec
cwtl
lods
cmp
dec
scas
loop
outsl
dec
mov
scas
insl
rcl
repz
fcomi
cmp
or
negl
xor
pop
mov
mov
aas
mov
dec
push
cmp
push
xchg
push
outsl
push
idivl
mov
sbb
jne
sti
or
out
or
in
in
stos
es
int
mov
jge
adc
adc
adcl
push
sub
sub
repz
mov
xchg
mov
mov
mov
xchg
shlb
pop
push
mov
repz
test
sbb
orl
sbb
pop
test
pop
insl
movsl
and
or
or
push
das
cs
push
scas
push
and
nop
xlat
pop
lret
xor
aas
rorl
sbb
fwait
mov
fstl
sti
jbe
mov
mov
mov
or
das
xchg
dec
lock
std
inc
lods
push
push
add
fcoml
jae
nop
pusha
adc
idivb
sti
arpl
loop
call
jnp
and
repz
sub
fists
mov
xor
scas
aas
les
not
mov
mov
in
pop
in
pop
scas
adc
rcpps
sti
mov
in
scas
call
push
cmp
pop
iret
jb
mov
mov
xchg
push
cwtl
in
sbbl
cmp
mov
adc
mov
repnz
in
xchg
jo
daa
scas
sbb
sti
cmp
xor
mov
sbb
mov
push
aaa
je
xchg
jl
dec
out
out
xchg
pop
aad
sub
lock
sbb
std
cwtl
lcall
xor
mov
jl
in
xlat
aaa
iret
clc
lds
pop
std
out
iret
data16
fisubrl
rcl
in
cld
test
mov
add
or
mov
stos
mov
mov
icebp
flds
or
fldcw
or
pusha
push
loope
pop
or
sub
inc
scas
and
add
hlt
out
pop
sbb
jo
inc
mov
pop
in
test
test
pusha
push
or
out
and
pop
mov
mov
xchg
xor
sub
inc
and
push
push
out
jmp
dec
inc
jbe
sbb
popa
outsl
aas
jg
cwtl
das
mov
stos
mov
fnsave
dec
push
subb
fldcw
mov
pop
inc
sub
or
in
fisubs
movsl
push
push
leave
cwtl
test
ret
add
stos
imul
mov
in
xchg
movups
movsb
out
push
pop
mov
pushl
push
jbe
add
and
fnstsw
sbb
xor
out
jo
xor
pop
out
ljmp
scas
or
hlt
mov
sub
adc
imul
jns
adc
addr16
fsubr
lret
addr16
push
imul
mov
out
imul
insl
add
cs
sub
xor
cs
imul
mov
mov
inc
push
arpl
mov
jnp
repz
ss
jno
and
hlt
movsb
scas
mov
lret
out
popa
outsl
sub
fdivl
and
js
rorb
into
and
loope
lcall
push
cmp
or
rcrl
mov
decb
mov
dec
add
pusha
iret
mov
lret
cli
es
adcb
push
push
cwtl
imul
cli
cmpsb
mov
sub
dec
jae
jle
mov
inc
push
nop
mov
imul
lea
dec
adc
jge
sbb
lea
fisubrs
jecxz
sbb
or
adcl
or
sub
int
js
jae
aad
xchg
inc
in
pusha
arpl
int3
fcoml
clc
sub
aaa
add
cmp
test
mov
out
fcomi
testl
pop
shrl
mov
pop
mov
std
jl
mov
xor
push
mov
inc
add
mov
mov
stc
push
push
nop
das
pop
or
stos
test
push
lret
fs
call
or
cmp
enter
in
ret
sbb
push
das
into
daa
mov
and
lret
jbe
sbb
les
xchg
push
stc
dec
cmp
fisubrs
out
inc
mov
andl
add
or
push
stos
fwait
lcall
and
cmp
sahf
insl
adc
push
jne
cmp
cld
lods
jg
sbb
inc
iretw
xchg
in
xchg
xor
scas
es
and
dec
xor
rep
xchg
pop
adc
inc
mov
xchg
jge
sub
imull
ret
outsl
push
xor
add
ljmp
xor
and
adc
adc
mov
fbstp
sub
sti
sti
cli
popf
add
cmpsl
xor
and
cs
movb
and
fs
and
xchg
cmp
mov
pop
fisubl
movsl
das
push
stos
hlt
push
or
mov
sub
movsl
xchg
and
pop
xchg
lods
push
inc
ss
sub
imul
pop
jp
pop
mov
inc
pop
pop
sbb
mov
les
popf
mov
fwait
sbb
fcoms
xchg
jle
jg
mov
in
int3
sbb
mov
lds
js
hlt
lret
mov
mov
fsubrp
inc
shl
adc
andb
cmp
adcb
cmp
sbb
int
push
popf
xchg
in
test
xchg
cmpsl
test
fcoms
xor
inc
pusha
jne
adc
xlat
andb
pushw
and
add
sub
jbe
push
jbe
daa
pop
loope
fdivr
mov
out
lea
js
or
jecxz
adc
pop
lock
and
mov
push
in
push
sub
adc
rorb
push
jbe
sti
or
loope
xchg
lea
in
in
pop
out
das
ljmp
mov
cmp
jmp
sarl
mov
xor
iret
dec
pop
sbb
add
shll
jmp
fprem
jns
push
mov
aam
mov
mov
ficompl
pop
sub
push
ljmp
jo
call
or
fnsave
xchg
mov
lahf
repnz
add
pusha
int3
jg
xchg
pop
fcompl
shrb
imul
lds
cmc
sbb
imul
aaa
daa
outsl
sub
mov
add
mov
mov
pop
in
adc
cmp
outsb
sbb
js
push
mov
jp
xor
xchg
daa
enter
vhaddpd
in
mov
sbb
mov
cmp
xor
repz
adc
lea
and
and
lds
dec
repz
iret
sub
adc
push
cld
fsts
sub
sbbl
stos
cmc
mov
xchg
push
cmp
ret
xor
int3
fisubs
mov
and
lahf
ss
dec
stos
xchg
dec
call
dec
pcmpeqw
and
pop
pop
adc
adc
popf
lea
lods
push
push
int3
in
in
inc
mov
shl
icebp
adc
cs
addr16
push
jmp
mov
jno
jnp
out
xchg
aaa
stos
push
icebp
or
adc
mov
mov
gs
xchg
test
std
mov
fldl
pop
ficoml
push
add
mov
adc
ret
pop
pop
cmp
or
in
sti
sub
sbb
jns
push
scas
aaa
loopne
mov
sub
pop
js
add
out
out
adc
mov
insl
fs
mov
lea
mov
aam
movsb
mov
mov
out
cwtl
jg
jnp
in
stos
inc
fmulp
loop
push
les
iret
inc
xchg
test
addr16
xor
cmp
out
sub
pop
xor
sub
jnp
cli
pushf
mov
add
sub
sti
xchg
cmc
dec
and
loopne
lock
add
cld
hlt
adc
jnp
and
push
stos
in
aaa
daa
addr16
push
cld
loop
lods
stc
test
and
jp
fs
xlat
xor
es
adc
or
jle
jne
in
sbbl
and
fs
icebp
out
dec
lock
dec
add
jle
jp
jb
xchg
xchg
mov
pop
orl
jo
or
test
aaa
nop
movsl
cmp
leave
ret
mov
lea
mov
aam
sub
rcrl
jge
call
clc
or
xor
pop
lcall
mov
pusha
dec
sub
mov
fimull
mov
adc
jle
xorb
outsl
xchg
xchg
sbb
or
sarl
mov
jl
mov
adc
inc
lret
sbb
fiaddl
jmp
shrb
movsb
jno
sub
lock
fmuls
and
dec
pop
push
lea
mov
test
into
push
lret
popf
lods
lret
bound
mov
xor
jmp
jb
mov
cli
nop
hlt
mov
push
sbb
xor
mov
push
popf
int3
dec
imul
sub
xchg
sbb
sub
sbb
or
xor
sub
adc
dec
dec
xchg
xor
aaa
xor
fldt
es
xchg
xchg
in
mov
lea
mov
push
loop
test
adc
scas
or
fsub
fwait
xor
inc
and
push
xchg
sbb
jo
mov
stc
loopne
out
add
mov
dec
mov
shr
lcall
adc
sub
bound
loop
enter
fdivrs
mov
lcall
xorb
pop
and
bound
fdivrl
pop
fwait
outsl
std
push
sub
push
dec
pop
cmp
mov
inc
fidivrl
push
or
fstpt
lret
bound
in
mov
xchg
mov
call
movsl
js
nop
cmpsb
stc
pop
add
fsubrs
xchg
xchg
add
pop
adc
jle
xchg
mov
xchg
push
mov
cli
ret
ret
andl
mov
cmp
out
and
sub
and
lea
leave
lahf
sub
fstps
inc
add
andl
cmp
dec
out
leave
cs
rcr
mov
sub
ret
jecxz
push
jae
sbb
sub
stc
popf
decl
inc
lahf
movsb
pusha
lahf
arpl
xor
daa
xchg
nop
dec
jmp
fistpl
mov
pop
flds
xchg
mov
mov
test
in
orl
or
out
inc
fnstenvs
test
xor
test
sbb
loope
cmp
jb
subl
jg
pop
sub
jl
xchg
push
insl
dec
shlb
inc
dec
mov
cwtl
bound
lods
and
pop
ret
mov
sbb
hlt
sbb
adc
pop
mov
mov
popa
jge
mov
mov
popa
andb
xlat
imul
jge
and
lods
mov
jns
sbb
test
xchg
or
push
push
addb
cmp
sahf
dec
push
cwtl
std
out
adc
sbb
mov
jg
add
loopne
sbb
fs
mov
cltd
cmpsl
fucomi
test
out
add
stc
fwait
inc
sub
xchg
pop
cltd
xchg
cld
loope
ljmp
fistpl
adc
stc
pusha
xor
pop
dec
add
sub
pop
cmpsl
mov
add
and
xchg
dec
stc
adc
jae
int3
movsb
pop
mov
cmp
mov
inc
loopne
int3
mov
xlat
push
sbb
adc
loopne
xchg
popf
inc
sahf
inc
mov
and
xor
sbb
test
bound
sbb
ljmp
jno
xchg
lea
inc
scas
cli
xchg
mov
pop
cmp
test
mov
call
leave
jne
xor
push
es
push
fcoml
jecxz
ss
cltd
lcall
sbb
cmp
aad
lahf
cltd
fwait
arpl
or
jecxz
push
insl
sub
xchg
jge
pop
pop
lret
dec
int3
mov
pop
add
pusha
ss
sbb
dec
leave
or
cmp
or
mov
daa
les
insl
pop
jae
lar
xchg
test
inc
sahf
jp
data16
inc
inc
movsb
pop
xor
mov
test
push
ja
hlt
loop
cwtl
pop
mov
out
addr16
push
sbb
cmp
adc
jne
mov
roll
in
cwtl
cmpl
cli
shll
mov
dec
movl
into
enter
pop
mov
mov
mov
mov
fwait
in
mov
in
add
xlat
adc
mov
pop
xchg
push
pop
adc
ret
xchg
sub
arpl
int3
pusha
cmp
jg
arpl
mov
adc
pop
cmpsb
stc
or
xchg
insb
mov
jne
inc
sbb
test
lock
inc
jbe
fidivrs
xchg
cmpsl
mov
jp
outsl
inc
or
jae
std
je
dec
jbe
loopne
out
jae
aam
in
dec
cmp
shlb
outsl
pop
icebp
or
cmpsb
pop
xor
adc
or
ljmp
adcl
mov
mov
jg
inc
adc
xchg
xchg
cltd
aaa
jns
cli
pop
and
mov
fmuls
dec
add
xlat
popa
outsb
sbb
out
dec
fnstsw
mov
jle
xchg
sub
or
outsb
dec
pop
adc
mov
int3
daa
movsl
mov
in
stos
xchg
lea
sbb
sbb
sbbl
pop
int
pop
cmpsb
mov
mov
jnp
das
pushf
push
inc
xchg
scas
je
push
outsl
test
pop
mov
dec
mov
js
fisttps
insl
in
mov
orb
test
and
into
cmpsl
mov
andb
lea
dec
out
cltd
lds
insb
mov
dec
mov
adc
sub
mov
push
inc
dec
dec
mov
inc
out
sub
loope
dec
adc
cmp
and
lods
jb
out
dec
int
insl
push
cmp
or
stos
loop
inc
ret
lock
fmuls
and
out
jne
leave
int
mov
fdivrs
ficompl
out
and
inc
dec
roll
dec
pop
loope
pop
outsl
sub
lahf
push
lock
pop
mov
xor
scas
mov
cmp
inc
fsubr
inc
andl
lret
mov
mov
pop
pop
sarb
test
inc
sub
and
rcrb
fiadds
mov
pop
divb
mov
xchg
push
push
pop
mov
sbb
mov
sti
shrl
bound
sbb
inc
aad
pop
dec
in
push
addb
jne
adc
xor
ror
loope
insl
xchg
stos
jle
sbb
fnstenv
xchg
mov
outsl
add
mov
insb
mov
sbb
or
in
in
dec
xchg
shll
mov
gs
push
dec
pop
cmp
ljmp
loop
cmp
jg
and
aas
cli
adc
dec
jo
andb
in
adc
dec
decb
int
pop
ss
lods
sbb
jo
mov
dec
fisttps
lea
cmp
cmpsb
xor
bnd
orb
and
sbb
inc
test
push
rorl
aad
test
les
test
leave
lcall
sub
repnz
cmp
testl
cvtpi2ps
add
ds
and
decl
sahf
fstps
loope
cmp
push
jmp
lcall
and
and
adc
sub
adc
cmc
stos
movzbl
mov
adc
outsl
mov
dec
xor
ds
scas
cltd
xorb
inc
sbb
mov
inc
bound
xlat
cmp
inc
add
xor
and
cs
adc
add
jmp
and
repz
lret
cmp
rcll
mov
and
mov
jl
iret
clc
adc
in
arpl
cmpsl
xor
mov
lea
shl
iret
push
xchg
dec
ss
push
movsl
inc
push
mov
or
sub
lcall
jle
enter
adc
decb
mov
mov
cmpsb
clc
cld
xchg
sub
pop
mov
add
mov
inc
and
hlt
cmpsb
cmp
add
and
decl
popf
xor
inc
mov
fs
cld
push
cmpsb
ds
jnp
push
fadd
js
cwtl
xlat
and
into
jae
cltd
mov
leave
in
dec
jbe
out
cmp
aaa
pop
adc
testl
and
add
adc
int3
aas
dec
into
fidivrl
mov
repnz
pop
adc
ret
sbb
adc
test
jae
push
movsb
cmp
aam
push
movsl
cmp
jns
pop
test
loopne
xlat
lret
push
pusha
aad
je
ds
sahf
inc
fmul
neg
xchg
movsl
jecxz
ss
daa
adc
push
ljmp
shr
rcrl
ss
imul
inc
movsb
inc
aaa
rcrb
and
test
mov
shlb
or
fcoms
and
movsl
clc
add
lock
inc
in
in
xlat
cmp
fcmovu
jae
into
sub
popa
clc
ljmp
push
iret
test
mov
dec
dec
xor
mov
arpl
sbb
cmp
test
pop
lds
out
xchg
sbb
mov
cmc
xor
inc
inc
pusha
dec
addr16
out
lods
jnp
inc
xor
pusha
adc
sbb
xor
incl
mov
fstpt
and
lea
repz
lock
sarb
cmp
mov
and
mov
pop
or
lods
inc
lock
pop
lahf
cmpsb
adc
arpl
orb
cmp
out
inc
pop
popf
dec
and
and
testb
nop
imul
and
sahf
repnz
sub
addr16
aam
sub
lods
mov
pop
out
out
adc
sbb
rcl
add
add
jbe
es
mov
insb
fwait
sub
call
popf
jb
leave
push
shll
movsl
aas
mov
mov
lods
nop
stc
inc
ret
lret
push
sub
stc
nop
sti
loop
xchg
fwait
int
push
js
cmp
loope
out
jp
cmp
or
in
mov
incb
xchg
fs
jne
aaa
and
shrl
shll
dec
mov
xor
xchg
cmp
movsb
cmp
mov
sbb
pop
pop
pushf
daa
push
or
xchg
or
fdivp
lcall
inc
fistl
jb
inc
ret
out
xchg
popa
sbb
xchg
fs
data16
jbe
xor
clc
jnp
into
or
adc
mov
push
cltd
sbb
xor
and
out
ja
xchg
pop
rolb
push
testb
pushf
scas
mov
cmc
pop
jge
mov
push
pop
outsb
jl
jo
in
cmc
adc
add
repz
sub
rcrl
insb
pop
stos
cmp
or
pop
pop
jle
xchg
lods
mul
jns
negb
adc
les
push
xchg
sub
xor
insb
in
push
lods
add
xchg
ja
or
mov
fiaddl
push
xor
dec
lock
out
aad
xchg
dec
mov
fildl
leave
repnz
mov
adc
xchg
cld
push
mov
jmp
movlps
and
xor
jmp
add
push
jl
retw
mov
push
pushf
shr
int
add
xchg
fidivl
pop
out
cs
clc
pop
mov
dec
xchg
xor
fnstsw
aaa
and
jo
std
in
das
xor
jp
adc
mov
dec
aad
adc
nop
cltd
out
dec
cli
xchg
sub
add
hlt
fwait
push
xor
push
xchg
add
pop
xchg
loop
imul
les
dec
push
sar
out
inc
pop
push
jmp
fs
stc
arpl
mov
or
ss
aaa
jbe
sub
jp
push
mov
cmp
flds
enter
xchg
repz
pop
sbb
mov
or
jp
mov
or
rclb
dec
push
mov
fidivs
pop
repnz
popf
or
dec
jae
lods
jmp
jmp
andl
andl
movsb
idivl
mov
push
popf
push
xchg
jmp
push
push
and
fisubs
mov
ret
ret
insl
outsb
xor
mov
fwait
rorb
aaa
cli
xchg
imul
enter
jbe
and
sti
pop
and
mov
pop
shrl
clc
nop
imul
dec
xchg
ret
hlt
mov
cltd
arpl
sub
shlb
sbb
lds
mov
int
cmp
mov
lahf
pop
adcl
mov
and
xorl
aad
sahf
clc
bound
xor
fwait
xchg
jne
pop
mov
and
imull
pop
sub
sub
sbb
cmp
subb
in
jno
aad
mov
inc
loopne
andb
leave
fxch
and
fld1
pminub
shr
mov
xchg
sub
xchg
xor
and
push
js
mov
pop
ss
cmp
pop
lock
jno
incb
subb
pop
insl
jnp
pop
mov
dec
sub
lret
inc
sub
filds
mull
sbb
in
mov
or
arpl
add
stos
xor
or
loope
stos
stos
lcall
mov
aas
push
mov
add
xchg
stc
popf
divl
xor
or
aaa
scas
jb
jbe
ret
mov
sub
daa
aaa
mov
sahf
or
test
mov
pushf
add
sub
gs
jne
mov
lret
iret
pop
push
jb
fistl
xchg
ss
cltd
adc
xchg
and
cmp
lods
sbb
fsubs
jge
lret
insb
adc
fidivrs
sti
jl
mov
sahf
sub
sub
jg
xor
rol
jl
insb
inc
lods
jo
add
sub
repnz
dec
add
rol
subb
xor
inc
inc
jmp
je
test
cs
xor
sarl
xchg
lret
mov
mov
sbb
pushf
xchg
mov
jno
inc
test
push
ret
outsb
popf
xor
cwtl
mov
loopne
call
push
popf
sti
push
aas
adc
rcrl
sbbl
ja
cmp
hlt
popf
clc
sahf
xchg
jo
cmp
rolb
sub
adc
in
xor
mov
adc
push
mov
jl
sbbl
cmpb
pop
sub
fmuls
jmp
test
call
inc
push
xor
sub
nop
ljmp
sub
stos
lds
pop
test
dec
jg
pop
xchg
nop
jge
int
xchg
loop
push
insb
xor
lods
lock
push
cmpsb
in
sbb
mov
adc
inc
cld
cmc
sbb
mov
sarl
lea
pop
cli
jne
push
fildll
mov
xchg
les
xor
or
test
add
ljmp
in
popa
mov
loop
daa
scas
or
scas
fcompl
push
or
fcomps
jns
pop
dec
stc
inc
dec
gs
addr16
cmp
xchg
mov
dec
jmp
mov
repz
jge
adc
mov
sub
data16
sahf
push
push
mov
into
push
les
mov
dec
call
mov
je
and
sbb
push
mov
jne
xchg
cmpsb
push
xor
xchg
inc
mov
pop
cmp
test
and
iretw
into
mov
add
sbb
ds
clc
mov
mov
in
fldenv
lret
or
mov
push
scas
inc
push
sbbl
dec
xchg
cli
cmp
jmp
testb
mov
out
jnp
mov
movsl
daa
clc
mov
adc
shlb
stos
outsb
pop
mov
mov
or
in
ljmp
ud2
cvtpi2ps
inc
add
sub
out
dec
dec
ljmp
cltd
movsl
fnsave
xor
lahf
test
in
lea
cmp
pop
jl
pusha
mov
xor
popa
jno
inc
add
test
cmpsl
dec
adc
out
sub
xchg
jne
popf
insl
dec
dec
add
sub
rolb
clc
cmpsl
std
jp
push
mov
cmpsb
push
outsl
push
stos
or
cld
sbb
stos
sub
pusha
idivb
mov
adc
pop
jno
pop
scas
jbe
sub
push
push
je
jmp
mov
ljmp
inc
jl
cwtl
outsl
cwtl
push
scas
mov
test
inc
adc
js
addr16
dec
push
cli
mov
pop
xchg
cmc
daa
cmp
xchg
lahf
pop
stos
xor
dec
push
je
mov
jle
dec
mov
fnstenv
or
adc
fildll
notb
out
sti
mov
fildll
push
push
push
out
jae
das
js
idivl
inc
mov
inc
xlat
lds
outsb
or
iret
push
cmp
movsb
notl
das
ja
mov
es
mov
push
out
mov
dec
push
mov
rorl
push
jge
push
out
loopne
cwtl
fwait
inc
cmp
xor
jo
xor
adc
bswap
inc
pop
mov
fabs
in
cmpl
scas
das
pop
or
inc
sub
sbb
jbe
movsl
sub
jne
push
iret
mov
pop
pop
sub
decl
mov
pushf
mov
out
les
xchg
lods
jo
mov
sbb
xchg
inc
fadd
pop
add
pop
sahf
add
decb
mov
repz
adc
cltd
pusha
test
push
xchg
test
mov
sbb
mov
repnz
mov
xchg
lcall
xor
push
push
call
mov
out
addr16
das
push
in
jne
stc
add
popa
push
adc
cvttps2pi
lods
pop
sahf
sub
and
ss
fadds
divb
loope
push
xchg
push
lea
xor
sub
mov
in
lods
xchg
adc
test
and
pop
jne
pop
rol
cmp
pop
mov
push
daa
mov
pop
jmp
mov
fwait
cmp
pop
jne
jo
int3
xor
lock
pop
push
imul
and
frstors
jg
cli
and
in
pop
aaa
aam
inc
adcb
inc
or
data16
aam
adc
cmp
jne
xchg
out
shl
insb
sbb
fistl
mov
js
pop
test
push
icebp
and
and
mov
add
ljmp
jne
repnz
shll
or
mov
mov
fistps
mov
mov
sti
xor
pusha
pop
insl
adcl
rorl
popa
sbb
fbstp
jb
jp
orl
mov
fcmovbe
and
xchg
outsb
mov
shl
fdiv
or
inc
cmpsb
mov
lcall
ja
rorb
inc
inc
mov
ret
or
jns
rcrl
pushf
xor
push
out
test
loope
cmpsl
jle
pop
push
outsb
add
test
xchg
sub
xor
mov
outsl
adc
add
sbbb
and
out
xor
sbb
mov
stos
imul
push
test
clc
mov
arpl
mov
int3
sbb
ljmp
mov
jle
loopne
hlt
mov
insb
or
cmpsl
inc
add
movsb
or
aad
rcl
adc
in
adc
sub
call
arpl
jns
dec
sub
xchg
xor
push
lcall
mov
dec
mov
out
and
inc
cwtl
or
movsb
pop
xchg
mov
mov
xor
out
loopne
aam
ret
push
xchg
cmc
add
imul
jecxz
or
adc
cltd
mov
and
pop
daa
shlb
jo
loopne
lahf
pop
roll
push
jmp
fstpt
mov
and
outsb
ss
cltd
je
fisttpll
cwtl
mov
mov
add
andl
ja
imul
or
jno
les
nop
pop
lcall
cwtl
cmp
int3
and
xchg
mov
cmpsl
out
adc
or
mov
dec
ljmp
sbb
pop
ja
jecxz
lods
mov
dec
push
test
or
nop
jae
mov
dec
out
sub
bnd
sub
xor
pop
test
pushf
hlt
mov
and
jle
cld
mov
les
mov
pcmpeqw
mov
rorb
jb
xor
pop
sti
gs
xor
jb
pop
test
mov
out
fs
push
cltd
adc
jg
cmp
adc
pop
cli
jo
scas
out
xchg
xchg
lods
lea
mov
or
lods
ret
pop
stos
incl
movsb
mov
pop
push
mov
xchg
sti
ljmp
mov
mov
mov
pop
and
xchg
das
ret
incl
das
cmp
adc
sub
daa
mov
xchg
fsubrl
push
std
icebp
push
out
cwtl
pop
jmp
xor
imul
mov
or
inc
leave
and
stos
mov
cmp
in
cltd
pusha
fildll
mulb
sub
not
dec
or
xchg
and
mov
and
xchg
in
pop
in
cmpsl
test
adc
lds
mov
mov
inc
ss
inc
fsts
jle
push
in
shll
pop
and
adc
pop
mov
push
jl
mov
add
aas
mov
pusha
add
push
repz
and
and
je
inc
adc
test
add
dec
test
scas
sbb
popf
or
sub
leave
test
mov
pop
lods
lea
test
fiadds
fwait
push
inc
insl
js
out
push
insl
adc
mov
int
xor
dec
pop
sbb
lahf
in
cld
sbb
cmpsl
pop
jae
mov
insl
adc
lcall
pop
sti
push
or
mov
stc
cmpsl
mov
les
cmp
cmpsb
cmovs
stc
dec
dec
mov
xchg
ret
aas
arpl
mov
fwait
pop
jo
xchg
mov
push
insb
fisubl
fwait
xor
push
add
add
add
jbe
shl
and
stc
xchg
adc
bound
cmp
out
sub
sbbb
sti
mov
gs
and
adc
fnstcw
stos
add
fmull
mov
sbb
cmp
loopne
xchg
pop
jmp
mov
lcall
int3
data16
xchg
ss
add
in
and
pop
in
repnz
and
push
mov
jle
popa
hlt
push
cmpb
int
xchg
push
jb
inc
jbe
fiaddl
int3
mov
and
shlb
ror
inc
hlt
or
shrl
das
or
mov
pop
mov
mov
xor
fcmove
rcrl
or
lods
mov
inc
and
bound
push
sbb
mov
pop
int3
mov
fdivrl
jge
gs
stos
in
ja
orl
lcall
mull
mov
lahf
mov
fsubr
inc
rcll
jb
jmp
adc
lods
xchg
enter
mov
call
mov
lea
adc
inc
movsl
fmull
pushf
jp
sbb
loopne
out
and
push
bound
mov
sbb
sub
lret
pusha
and
arpl
inc
aas
mov
mov
faddl
adc
xor
imul
and
leave
cmp
jg
outsb
dec
mov
sbb
sub
cmp
fxch
fdivrl
push
xchg
movsl
xor
loop
loopne
mov
adc
push
push
cmp
mov
mov
xor
adc
mov
mov
mov
dec
or
lahf
push
inc
icebp
insb
aas
mov
cmc
popa
push
push
push
loopne
std
fiadds
cltd
std
sub
mov
xchg
xchg
ret
xchg
fdivrl
pop
inc
jmp
mov
mov
adc
nop
daa
dec
push
lahf
push
test
sub
inc
movsl
inc
test
jbe
ds
lret
jle
ss
pop
sti
into
or
jecxz
and
cmp
aas
pop
dec
lea
xor
popf
lods
pop
xor
jno
jb
mov
jle
arpl
insl
aad
xor
fwait
outsb
and
xor
mov
pop
out
push
test
inc
cmppd
cmp
add
and
xchg
mov
les
test
fwait
aaa
dec
int
push
out
push
out
inc
push
jns
add
lret
xor
jne
loopne
insl
xchg
pop
fldt
mov
scas
cmp
cmpsl
xchg
or
inc
fcompl
testb
repnz
push
aas
loope
shl
pop
hlt
pop
nop
xchg
in
add
syscall
icebp
scas
xor
dec
dec
add
jnp
lock
inc
adcb
push
xor
add
mov
fnstcw
insl
add
popa
mov
gs
addr16
xchg
loopne
lods
sub
les
je
test
mov
icebp
jno
hlt
cmp
scas
and
iret
xchg
mov
dec
dec
arpl
pushf
pop
out
cmpl
jle
arpl
and
cs
push
inc
ds
orb
xchg
inc
loop
mov
or
pop
je
inc
es
cwtl
loopne
xor
lret
push
notb
orb
add
xor
push
xor
ds
lahf
xchg
push
jmp
lcall
fcmove
jmp
cmc
rolb
mov
push
push
sarl
insl
aas
repnz
xchg
test
dec
sbb
jno
push
sahf
sub
push
sbb
aam
mov
sbb
lods
pop
pop
push
xchg
mov
shlb
jno
push
mov
xchg
cld
cli
mov
sub
inc
sub
movl
pop
shlb
mov
dec
hlt
inc
movl
cmp
popf
mov
xor
inc
and
out
int
pop
rcr
out
je
sub
sbb
into
or
mov
mov
sbb
pop
cmp
fsub
or
push
repnz
and
insb
or
pusha
jl
jecxz
xchg
dec
adc
fdivrs
and
lods
xorb
fbstp
loop
rorl
lahf
testl
scas
call
cmp
sahf
xor
fisttpl
push
popf
popa
add
cmp
cs
adc
jge
setae
cmp
jmp
push
sbb
mov
pop
loop
push
hlt
mull
aas
or
ret
lahf
aad
out
xchg
xor
std
aaa
add
je
pop
or
mov
les
xor
push
jb
jmp
idivb
ret
adc
sarb
js
movb
insl
outsb
in
and
cmc
in
jae
sahf
ret
mov
lds
or
jg
mov
pusha
rolb
dec
jbe
cmp
mov
mov
xchg
xor
rol
pop
or
cmp
shr
mov
jge
jg
inc
fmul
lahf
std
iret
popf
or
jge
mov
sub
pop
and
getsec
pop
and
arpl
dec
lock
fdivp
mov
push
loopne
cmp
outsb
jns
mov
lds
test
in
out
pop
decl
sbb
pop
loop
mov
test
adc
aas
into
push
xchg
in
pop
sahf
orb
pop
mov
adc
sub
xor
fidivrs
add
jns
sub
test
inc
fstl
xor
stc
addr16
mov
dec
stc
rorl
clc
loopne
lods
adc
xchg
loop
xor
in
inc
pop
xor
and
push
ret
push
jmp
mov
jb
lahf
f2xm1
clc
sar
add
into
pushf
xor
cmovnp
and
xor
sbb
data16
and
iret
gs
cmp
mov
icebp
mov
pusha
xchg
imul
add
mov
inc
bound
adc
icebp
or
andb
out
nop
adcb
shrl
or
mov
in
das
je
jge
cmc
dec
sbbl
jl
mov
xchg
push
cmp
push
movsb
xor
sub
clc
fnstenv
in
ja
testb
or
mov
xchg
test
in
sbbl
decl
and
fwait
aas
jmp
rcrl
js
jge
dec
arpl
jp
sub
sub
sbb
xor
in
bound
lahf
sbb
jmp
dec
sbbl
pop
pushf
mov
popa
lods
ljmp
out
sbb
sbb
rorb
pop
lret
jle
jge
ss
sub
pusha
add
inc
push
mov
out
jecxz
lret
jno
data16
fistl
into
addr16
adc
call
jbe
repz
je
loop
aam
sub
ja
push
mov
addr16
jmp
push
into
out
sub
data16
xlat
incl
mov
iret
push
mov
cmp
pusha
adc
iret
cmp
loopne
pop
inc
and
lahf
xor
mov
inc
adc
mov
or
es
mov
rcr
int3
out
fs
aas
dec
shlb
jl
aam
aaa
mov
enter
ficompl
mov
rcl
pop
in
jns
iret
fdivl
bound
movsb
pushf
loopne
rcll
mov
lods
js
jge
xchg
pop
sarl
dec
pop
add
movsl
arpl
hlt
mov
mov
xchg
hlt
out
mov
fcmovnbe
dec
and
xchg
sub
mov
stos
push
mov
repz
sub
mov
or
mov
xor
repnz
sub
xor
repnz
leave
int
and
aam
cmc
js
lcall
in
pushf
adc
test
pxor
pop
pop
dec
test
fwait
add
jnp
imul
xor
ret
sbb
roll
and
insl
jbe
ret
or
icebp
sub
js
leave
std
mov
xor
and
push
adcb
stos
fidivl
dec
insl
cld
inc
and
and
pop
jg
sub
inc
and
jmp
les
inc
ret
lock
cmp
cmp
cltd
jecxz
sub
icebp
int3
loop
cmp
idiv
inc
adc
adc
cmp
xor
sti
cmpb
push
insl
sti
arpl
cmpb
xor
push
pop
call
push
push
jno
fisttps
push
ljmp
icebp
movsl
xchg
cld
aad
mov
jbe
dec
ds
in
and
int3
leave
pop
imul
std
sarb
loopne
sbb
mov
pop
adc
out
mov
pop
addl
int3
cmp
and
loope
and
sub
mov
fistps
ret
cmp
mov
cltd
in
cltd
cmp
imul
mov
pop
jg
test
or
jno
aaa
push
ja
pop
das
sbb
int
add
adc
xor
cmp
dec
inc
cmp
in
std
pop
mov
xor
jmp
xor
data16
add
pop
inc
shlb
push
adc
loop
mov
jge
lods
scas
in
pushf
aam
fwait
sti
pusha
inc
push
mov
dec
clc
mov
mov
sub
xchg
stos
cmc
loope
pop
xchg
out
xor
bound
push
das
mov
dec
push
mov
mov
sbb
push
sahf
push
push
inc
addr16
out
mov
add
sbb
mov
inc
shll
xor
iret
cs
and
pop
loopne
push
jmp
fdivrl
push
xlat
dec
test
fcmovnb
es
jl
sti
rcrb
push
faddl
ja
and
daa
fbld
jge
fcoms
scas
in
movd
sub
adc
pop
ss
lret
mov
ficomps
push
adc
inc
shlb
fimuls
mov
mov
fstl
add
dec
mov
scas
rol
pop
cmpsb
or
jg
dec
fldl
fsub
xchg
mov
out
dec
mov
cli
pop
or
pop
in
insb
cmp
adc
adc
adc
mov
bound
and
mov
arpl
out
jne
test
dec
sub
mov
mov
ret
adc
mov
scas
aas
jl
pop
in
dec
adc
adc
push
adc
stc
sbb
rcl
lods
jge
shlb
xchg
popf
sub
movsw
outsb
inc
mov
repz
adc
inc
jno
cmp
bndldx
dec
jp
int
fidivs
insl
push
mov
pop
xor
jle
testb
add
cli
adc
cwtl
das
or
push
xlat
xchg
es
xchg
js
jecxz
xor
xor
and
clc
add
sbb
mov
xor
ret
shrl
jmp
fidivrl
xor
pop
arpl
xchg
push
add
mov
sbb
jg
xchg
mov
mov
xor
cmp
pusha
idivl
dec
pop
in
mov
push
mov
int
sub
ljmp
push
enter
lds
push
sbb
sbb
lds
or
ja
mov
and
push
jecxz
out
xchg
or
mov
push
and
in
lahf
xchg
and
mov
mov
adc
fldcw
shlb
jmp
lock
or
je
cs
movsl
pop
popa
add
and
cmp
test
ja
or
cmp
mov
int3
add
pop
sub
out
imul
jnp
cltd
xchg
andb
xchg
ljmp
mov
xor
inc
sti
inc
pop
xchg
sub
out
aam
add
lods
add
sahf
rol
add
mov
jo
mov
push
add
std
dec
and
jns
loop
dec
cltd
jecxz
stos
jns
xchg
jle
les
scas
mov
push
scas
call
pop
repz
cmpsl
xor
xchg
test
daa
out
jo
dec
pop
jo
jg
and
fucomip
fwait
xor
arpl
call
sub
push
std
fisubrs
sbb
pop
inc
insl
in
xchg
fs
or
cmp
in
mov
mov
mov
push
xorb
push
or
test
pop
mov
insl
mov
cmc
jge
int3
pop
popf
call
mov
pushf
inc
addr16
out
sbb
das
mov
push
movsl
cmp
leave
mov
les
andb
int
or
iret
push
pop
into
and
imul
jns
cmc
push
test
out
cmp
sub
add
xor
pop
mov
gs
fstl
mov
ret
or
outsb
fcmovne
pop
loopne
imul
cmpsl
sbb
loopne
cld
xlat
and
cwtl
pop
jle
imulb
inc
jge
jl
sub
cmp
jb
loop
inc
or
mov
sub
mov
add
rcrl
mov
js
js
lds
call
dec
test
push
or
stos
test
andl
dec
mulb
fiaddl
xchg
repnz
movb
imul
lock
adc
mov
ret
add
mov
cld
dec
sbb
dec
adc
adc
loope
xchg
inc
in
out
in
cmp
cmp
lods
testl
lods
rolb
out
jmp
push
pop
bound
jg
push
and
lahf
push
in
movsl
ss
add
decb
cmpsb
ja
jns
aaa
mov
scas
jnp
leave
pop
sbb
leave
int
or
pop
addb
cmp
cmp
jmp
push
out
and
data16
pop
xchg
loopne
pop
sub
jge
mov
cmp
aam
loope
sub
loop
movsb
cmp
jae
add
je
mov
mov
mulb
mov
adc
jecxz
sbb
movsl
aaa
mov
cmpsl
ja
lds
arpl
push
mov
sbbb
jecxz
shll
ret
jge
mov
frstor
data16
cmp
add
fildll
shrb
cmovno
jle
popa
clc
mov
insl
pusha
mull
push
movsl
subb
lahf
syscall
adcb
pop
ds
mov
stc
nop
adc
push
push
jmp
mov
std
test
in
sbb
sub
addb
and
sahf
adc
push
jmp
adc
xchg
mov
ja
mov
scas
push
movsl
push
mov
jmp
or
jns
sbb
insl
fisubrs
pop
xchg
mov
xor
fadds
popa
xorb
in
movsb
les
or
mov
xor
dec
xchg
sti
enter
adc
or
jb
loopne
inc
fidivs
cwtl
je
mov
das
xchg
and
pop
pushf
addr16
sub
in
pop
cmp
jnp
cltd
icebp
lds
cwtl
xchg
in
or
cmpl
jle
sub
pop
movsl
push
cwtl
pop
out
repz
inc
test
out
call
xchg
out
xchg
cmp
fidivs
or
xchg
repnz
mov
jmp
pop
clc
push
fidivl
pop
pusha
and
inc
push
jecxz
pop
loopne
rorb
cmpsb
lods
xchg
cmp
cli
or
mov
data16
mov
or
test
test
xor
push
push
add
jne
in
es
adc
xor
in
push
out
fistl
xchg
add
popf
mov
xor
mov
lock
gs
push
mov
loope
fld
out
push
test
orl
xchg
adc
aas
adc
mov
inc
inc
shrb
jg
inc
lods
insl
scas
inc
mov
loop
fbstp
pop
sbb
int
mov
fstpt
mov
imul
cmc
into
divl
pop
cmp
dec
cmc
pusha
sub
and
dec
push
xchg
pusha
and
cmp
hlt
inc
xchg
test
aas
popf
xor
fnstenv
add
or
xchg
xchg
testb
dec
mov
jle
mov
nop
rcrl
aas
sub
and
xchg
adc
push
fdivrs
jecxz
cs
and
js
sbb
dec
test
pop
outsb
mov
int3
leave
and
aam
dec
ret
cmpsl
sbb
jne
dec
sub
icebp
call
lock
sbb
mov
sti
jmp
or
outsl
xorb
bound
xor
dec
dec
outsb
out
push
inc
mov
jle
cmpsl
sub
pop
mov
shl
test
or
or
mov
call
in
je
fs
fwait
lahf
jns
std
aam
or
cmp
cld
jmp
pop
pop
clc
dec
std
in
adc
in
cmp
and
mov
mov
jae
push
dec
out
cltd
sub
adc
repz
stos
jmp
int
sub
icebp
xor
mov
adc
or
sbbl
push
out
mov
mov
xchg
pop
imul
cli
lods
add
les
adc
adc
cltd
sbb
popa
push
scas
push
out
data16
cmc
aaa
lods
xchg
jp
mov
inc
jo
fiaddl
xor
cmp
pop
jle
adc
xorl
xor
in
cmp
cmp
lcall
ror
js
lea
mov
mov
orb
leave
cmp
mov
lods
mov
divl
mov
inc
sbb
leave
adc
dec
call
dec
cmp
dec
push
inc
xchg
add
jns
push
inc
repz
inc
loopne
cmp
jmp
lods
xlat
mov
pop
or
pop
dec
pop
mov
xchg
xor
jno
inc
arpl
add
jo
mov
jg
and
jnp
jmp
aaa
leave
loope
ret
sbb
xor
or
or
sub
lret
fidivs
adc
cmpsl
mov
and
xchg
push
call
stc
mulb
add
dec
mov
xor
movl
into
mov
mov
outsb
mov
mov
bound
pop
out
inc
in
mov
sub
ret
pop
add
xchg
jne
adc
lock
faddl
decb
ficoms
call
jmp
mov
test
push
out
in
shll
imul
and
hlt
sbb
sub
popa
popa
aad
mov
dec
lock
mov
push
mov
les
int3
adc
out
pop
sbb
xchg
lods
getsec
fldt
push
sub
popf
sbb
inc
pushf
icebp
dec
inc
addr16
mov
int
cmp
xor
lret
loop
add
das
aas
mov
aam
xchg
add
hlt
push
xchg
pop
sbb
pop
jb
sub
or
pop
aad
and
stos
fdivl
ljmp
scas
test
movsb
jl
in
dec
mov
cmp
ficomps
pop
jae
ret
adc
mov
das
cmp
loopne
push
push
popa
push
inc
stos
xchg
pop
repz
jecxz
sbb
lods
lds
add
mov
mov
push
and
loope
clc
cld
mov
sub
mov
in
lods
or
mov
cmp
add
xor
xlat
ljmp
mov
xlat
mov
sub
xor
hlt
movsb
in
fcoms
test
mov
stos
aaa
mov
push
test
sbb
ret
mov
sub
rcl
insl
add
movsb
pop
xchg
mov
popa
or
xchg
lret
mov
cld
mov
cmp
int
mov
inc
cwtl
call
lcall
test
sub
inc
push
inc
push
mov
ljmp
inc
add
outsl
dec
test
adc
push
sbb
xlat
fnstsw
mov
les
pop
or
test
test
adc
cwtl
jmp
fdivl
je
mov
shr
movsl
aad
cs
lret
cld
mov
jecxz
mov
ss
pop
out
cmp
sahf
out
dec
scas
mov
ficompl
mov
lods
cmp
fsubrp
cwtl
or
dec
loop
sub
or
test
and
lds
clc
push
dec
xor
int3
arpl
push
mov
jecxz
mov
inc
stc
in
cmp
or
in
mov
or
mov
inc
fldt
pop
xchg
mov
pusha
negl
sysenter
pop
mov
sub
movsl
jmp
inc
and
push
push
jb
pop
in
fdivl
nop
sahf
ja
xchg
mov
sti
xor
nop
pop
jl
stc
push
pusha
cmpsb
pop
outsb
mov
in
in
fldcw
adc
scas
adcl
sti
cmp
jae
push
push
out
iret
jle
stc
add
jmp
jle
push
scas
fwait
jmp
dec
or
sbb
ss
xor
mov
out
out
jmp
jbe
in
repz
jmp
sahf
mov
inc
mov
pop
push
loopne
adc
scas
lods
fnsave
push
mov
mov
or
notl
inc
mov
cmp
jmp
mov
cmpsl
push
and
rcll
mov
cmp
mov
lods
xchg
xchg
clc
sar
aam
mov
jle
jo
ficompl
vmaxsd
xor
andb
aad
jp
div
inc
icebp
iret
inc
jne
je
cli
pushf
mov
sahf
mov
add
jl
arpl
into
sbb
ret
cmp
push
cmpsb
jnp
mov
ret
or
jns
mov
dec
loop
push
mov
cwtl
imul
or
stos
lods
outsl
cwtl
sbb
scas
and
repnz
add
or
nop
push
lods
roll
adcl
adc
dec
cmp
js
ret
fidivrl
iret
or
adc
inc
jl
mov
scas
leave
and
add
seto
jp
inc
push
xor
or
cli
pushf
rcll
fsubs
ds
mov
rorb
orl
fwait
insl
jle
sarl
lret
and
test
inc
fidivrl
sbb
pusha
sub
mov
shl
stc
add
inc
fdivl
or
adc
pop
mov
xor
mov
mov
inc
adc
jbe
icebp
and
repnz
xlat
fucomi
jmp
out
adc
sti
dec
ja
cmp
sub
xchg
into
enter
cmp
sahf
movsb
dec
nop
fiaddl
lods
sub
das
add
jnp
and
or
sbb
scas
add
cmp
aaa
stos
rcr
stos
and
and
movsb
mov
mov
rolb
sub
les
shll
popf
pop
xchg
repz
enter
push
call
cmp
or
jb,pt
testl
xchg
mov
aam
push
ret
bound
mov
sbb
dec
repz
and
push
loopne
mov
repnz
add
adc
loope
inc
lcall
addl
or
push
fists
stos
adc
test
cltd
lea
mov
stos
arpl
in
mov
rcl
cwtl
or
xchg
inc
popa
sar
add
lcall
xor
push
mov
xabort
jmp
xor
push
aas
arpl
jns
dec
stos
and
dec
mov
inc
and
add
pop
std
dec
and
xlat
push
movsb
sub
in
pushf
lret
fidivrs
jns
mov
cmp
fwait
xlat
rcl
pop
adc
aas
hlt
cld
sub
inc
ja
jl
adc
push
inc
cld
fildll
out
ficoms
cmpsb
ss
mov
movl
xchg
dec
sub
inc
pop
out
push
hlt
add
mov
mov
pop
adc
loopne
push
movsl
cwtl
jae
ficoml
sbbl
or
stos
push
push
pop
stc
add
mov
lret
sbb
mov
rcll
mov
mov
shl
ja
jecxz
adc
sbb
sub
and
xchg
push
jne
je
jge
mov
sti
shll
adc
test
dec
xlat
insl
pop
es
pusha
jle
enter
mov
push
dec
jecxz
inc
divl
in
adc
xor
in
jns
mov
xchg
pop
cld
xchg
mov
mov
fisubrs
sbb
fsubs
xor
cli
or
daa
xor
dec
jge
ds
fs
es
jmp
cltd
test
ficompl
inc
push
fdivs
addr16
lcall
lret
test
pop
sbb
push
jbe
and
xchg
shrb
sbb
dec
mov
gs
loope
movsl
test
mov
sti
lock
dec
sbb
jae
xlat
push
pop
test
cmp
movsl
sahf
xor
mov
and
jl
inc
stos
xchg
movsb
add
push
movsb
jns
arpl
fwait
inc
xor
inc
mov
jne
jmp
hlt
xor
cltd
popa
mov
adc
clc
sbb
cltd
fwait
loope
inc
ljmp
adc
leave
pusha
stc
in
inc
mov
fidivs
movsb
push
fnstsw
mov
add
sbb
gs
outsb
xor
add
iret
cmpsl
jbe
fstl
aas
push
push
xchg
and
add
nop
daa
fisubl
mov
add
js
xchg
arpl
and
sub
in
call
sbbl
loope
jne
add
nop
pop
xchg
pop
push
mov
pop
xchg
clc
shlb
add
pushf
xor
aas
pusha
dec
sub
cld
xor
scas
mov
pop
mov
enter
andl
push
pop
push
movsl
xchg
es
sarb
push
xor
xor
jp
pop
lods
xor
arpl
fildl
jle
das
iret
dec
mov
push
cs
lcall
sahf
int3
in
jle
mov
jp
pop
mov
imul
inc
adc
add
test
jne
adc
mov
jnp
pop
fwait
adc
or
sub
cmp
movsb
hlt
xor
xchg
or
fs
iret
add
ficompl
jge
cmp
inc
xor
call
lcall
push
into
mov
mov
push
sub
mov
lds
imul
fcomi
push
rol
fsubrl
pop
fwait
cmp
rcrl
sbb
and
ljmp
aad
dec
pushf
testb
addb
push
mov
mov
repz
sbb
mov
into
movsb
ja
jbe
loope
cmp
cmp
jno
mov
insl
adc
mov
sti
push
fdivr
inc
push
push
movsl
mov
jg
sub
adc
dec
xchg
lcall
pop
and
js
repz
test
sub
je
cmp
cmp
cltd
popf
divl
into
sub
sub
mov
arpl
dec
or
aaa
arpl
jp
inc
pop
arpl
and
cwtl
mov
lock
mulb
and
call
fildll
outsl
ret
pop
jmp
in
jnp
scas
aas
push
jmp
mov
shl
mov
cwtl
pop
dec
jp
lea
pop
ret
pop
mov
sub
sub
jp
adc
call
or
mov
jge
fcmove
inc
cmpsb
je
mov
mov
xor
jns
mov
pop
push
popf
xor
xchg
pop
cli
fwait
sbb
ret
pop
add
test
push
sub
scas
pushf
dec
or
pop
in
jnp
lea
mov
into
in
sahf
and
jno
in
inc
jae
dec
add
sbb
lret
cmp
xchg
aas
inc
popf
pop
or
add
cmpsb
or
scas
mov
loop
int
popa
std
pop
test
dec
sarb
lcall
sub
out
pop
mov
jne
inc
cmpsl
cmp
add
lods
adc
ss
xlat
jnp
out
lea
xchg
out
push
jo
daa
xor
mov
stc
negl
inc
lcall
sarl
fsubl
jno
es
popf
scas
std
push
or
dec
test
pop
inc
and
mov
ja
fwait
xchg
dec
and
imul
and
pop
pop
scas
jg
mov
shl
xchg
adc
loop
pop
rcrb
sub
inc
nop
out
dec
repnz
mov
into
xor
xor
es
ds
js
fpatan
lock
sbb
jecxz
mov
stc
int
push
data16
mov
pop
jno
sub
or
add
aas
sbbb
jl
push
pushf
rcrl
mov
xchg
lahf
jg
inc
test
mov
xor
cmp
sub
test
lods
jg
dec
mov
aas
mov
dec
mov
ds
js
gs
pop
ds
xchg
pop
pop
outsb
idivb
das
add
pop
jo
inc
in
pop
xchg
xorb
jge
dec
rcrl
gs
sahf
lret
lret
cmp
in
rcll
dec
add
and
add
lahf
xchg
andb
icebp
cmpsl
adc
lock
add
cmp
and
xorl
mov
arpl
cmc
xchg
rclb
add
cmp
loop
in
lcall
repz
jle
cmp
roll
popf
repnz
jo
sub
popf
gs
mov
or
or
inc
push
loop
xchg
out
sahf
add
xlat
and
xchg
subb
addr16
adc
scas
inc
pop
push
push
in
mov
xchg
in
cwtl
arpl
into
stos
fs
loopne
or
stc
sti
loope
mov
fnsave
inc
imul
cmp
adc
leave
fisubrl
xchg
outsb
inc
sarl
xchg
je
cmp
dec
ficomps
sub
lret
and
out
test
cwtl
test
jns
popf
jne
inc
out
jle
loope
and
std
movsb
outsb
fcompl
jnp
pop
rorb
or
push
sbb
test
inc
shl
in
sub
scas
orb
mov
adcl
xchg
push
sub
imul
repz
pop
idivl
lock
cmpsl
stc
repz
fwait
push
dec
mov
or
sub
mov
int
xor
fmuls
pop
pop
int
xor
insb
mov
and
stc
popf
insb
in
jbe
sub
test
ja
dec
cltd
insb
mov
lods
mov
pop
hlt
int
fwait
jne
add
adc
add
lret
mov
ret
mov
sbbb
pop
dec
addr16
addr16
imul
cmpsb
and
cltd
repnz
cmpsl
enter
int3
fidivrl
sbb
mov
es
mov
xor
pop
mov
cmpsb
or
sbb
cmp
dec
dec
cmpsb
mov
sub
and
push
and
mov
mov
pop
jmp
mov
rolb
aas
dec
mov
cmpps
int3
cli
pop
hlt
sub
jnp
add
add
cs
fs
outsb
in
aaa
je
repnz
jl
push
fbstp
ret
test
xor
push
push
dec
pushl
xor
std
push
jno
or
adc
jne
outsl
dec
jb
jl
das
in
or
mov
adc
dec
fstps
aam
gs
in
sub
add
insb
pushf
mov
adc
jnp
outsl
lods
mov
rclb
fnstcw
stos
fisubs
out
fdivs
cmp
jae
mov
mul
add
mov
cmp
lret
sbb
mov
or
orl
or
jle
inc
mov
jno
mov
and
divb
pop
in
jg
popf
fnsave
push
out
outsb
lahf
popa
mov
insl
jno
lahf
mov
hlt
pushf
jl
lods
stos
xchg
scas
pop
into
push
mov
fld
loopne
pop
imul
daa
mov
pop
xorb
cmpsb
int
sub
mov
lret
dec
jg
mov
sub
repnz
cld
or
xchg
inc
mov
xchg
sub
andb
scas
xor
andl
andb
scas
in
sub
mov
xor
inc
movsb
mov
dec
jo
mov
sbb
dec
xlat
lret
popa
data16
es
add
pop
jp
imul
scas
or
iret
shrw
mov
push
mov
xchg
loop
int3
mov
fcoml
clc
xchg
sbb
je
and
dec
loop
inc
push
sub
sbbb
pop
popa
clc
push
imul
sub
addr16
daa
jno
or
aaa
dec
cmp
cmp
push
scas
adcl
popa
rcl
xor
cmp
mov
xor
adc
push
scas
pop
xlat
mov
imul
mov
js
cmp
insb
sbb
out
lock
int3
dec
movb
dec
lahf
dec
sbb
mov
cmc
sub
pop
push
push
cmp
pop
cwtl
or
mov
add
mov
push
movsb
imul
out
test
out
hlt
xorb
push
add
pop
lds
scas
mov
fisubrs
aad
hlt
push
mov
jns
xor
mov
mov
cld
rdmsr
shll
inc
popf
or
mov
add
mov
out
imul
add
js
insb
inc
fcompl
daa
int
insl
stos
add
adc
mov
add
ljmp
jno
fisttpll
xchg
jno
ds
xor
outsl
test
movsl
mov
xchg
mov
push
cltd
iret
push
fwait
sti
add
or
jge
dec
lcall
add
outsl
repnz
fsincos
mov
cmpsl
push
jnp
mov
ja
lea
dec
cmpsl
sarl
pop
test
call
xchg
lock
cmp
decl
adc
test
xor
pop
cmpsb
pop
call
pop
add
imulb
add
xchg
fidivrl
jge
les
loopne
mov
cmp
push
pop
addb
adc
mov
ss
pop
and
sarb
jbe
cmp
push
and
loope
lahf
movb
insl
xorb
mov
pop
pop
outsb
cmp
mov
mov
xchg
addr16
mov
mov
lcall
and
mov
sub
pop
lcallw
cmpsb
leave
imul
addr16
cltd
call
in
mulb
fcoms
loop
add
push
cmp
mov
out
jae
xchg
push
insb
add
jp
mov
in
fwait
pop
push
fldt
ja
mov
mov
int
popf
or
jnp
loope
dec
cs
pop
xor
pop
jecxz
mov
daa
and
lcall
gs
stos
adc
lret
movsl
pop
jp
xor
cmpl
out
cmc
mov
or
push
pop
aam
sbb
test
stos
popf
lahf
pminub
mov
out
add
and
imul
inc
xlat
leave
or
fwait
cmpsl
jbe
pushf
pop
xor
xchg
xchg
jg
inc
mov
push
adc
gs
fcompl
lret
cli
sub
cmpsl
fwait
or
sub
jbe
mov
scas
mov
jae
jae
popf
mov
jmp
aam
sti
out
sub
out
in
xchg
or
cmp
pusha
xor
xchg
lods
psadbw
fcoms
popa
outsb
sub
shl
iret
clc
fucom
jp
and
pmulhw
xchg
xor
pusha
jp
repnz
aas
mov
sbb
jmp
push
sbb
mov
aaa
mov
repnz
dec
mov
adc
jecxz
xor
mov
dec
aaa
lret
outsl
lds
or
pop
es
repz
push
daa
xchg
aad
shrb
div
xor
sbb
inc
xor
popa
aas
push
cmpsb
loopne
mov
or
and
pop
lcall
in
roll
cmp
fnstenv
shll
jmp
int3
mov
mul
jae
cmp
push
movb
mov
dec
inc
and
popl
cwtl
or
cltd
lahf
mov
adc
fdivrl
out
insb
icebp
xchg
mov
sub
ret
outsl
xor
into
and
inc
xchg
lods
rol
push
shlb
xchg
ret
add
dec
inc
pop
aad
daa
loop
xchg
shlb
jbe
sub
cmp
xchg
or
push
les
jle
ljmp
jo
arpl
std
aas
inc
les
fiadds
mov
test
adc
out
jns
mov
mov
shrl
enter
aas
insb
and
adc
and
in
fcmovb
jge
ljmp
adc
mov
hlt
push
or
inc
jae
call
adc
pop
test
jmp
in
add
cs
pop
or
cli
sub
repz
out
mov
in
stc
add
and
inc
pop
mov
or
adc
mov
nop
das
addl
xchg
mov
inc
lds
push
mov
adc
push
clc
aaa
pop
xor
mov
push
xchg
rol
lahf
mov
cmp
mov
push
test
mov
inc
clc
mov
cmp
push
push
in
lods
sub
hlt
lahf
add
and
sbb
jb
mov
and
in
out
fldenv
addr16
out
rol
mov
test
push
inc
mov
int3
dec
inc
repnz
divl
fldenv
in
push
sub
sbbb
add
into
outsb
sbb
cmc
or
sbb
scas
push
dec
pop
mov
sub
out
xchg
mov
push
xor
insb
dec
jae
jge
fadd
push
cld
inc
out
scas
loopne
adc
into
das
cmpsl
or
mov
adc
sbb
nop
push
inc
xchg
jns
dec
je
pushf
push
nop
ja
xchg
sarl
cmp
mov
push
outsb
loope
adc
cmp
mov
sbb
fistpl
adc
push
push
and
xchg
icebp
out
and
popa
dec
xor
lock
stos
cmp
cli
xor
in
insb
push
cwtl
cmpsl
dec
into
and
pop
add
out
ftst
sbb
jmp
mov
or
adc
js
dec
loopne
cltd
pop
test
in
cmpsb
dec
out
fstpt
cmpb
xchg
pop
cwtl
sti
pop
add
and
cld
pop
and
pop
sub
int3
sbb
jg
ss
cmpsl
in
hlt
out
push
push
inc
fisubrs
fadd
test
ja
dec
jmp
dec
mov
jmp
cvttps2pi
xor
lret
sarb
inc
daa
dec
xchg
push
daa
pop
addr16
fists
test
out
cmp
orl
test
call
sbb
test
jno
leave
jge
mov
dec
imulb
call
jge
mov
jne
inc
shrl
sahf
pop
out
inc
jb
mov
imul
or
pop
mov
imul
push
mov
sahf
sti
daa
lea
rcll
ret
jnp
or
dec
pop
dec
ds
inc
daa
leave
push
or
adc
ret
in
mov
push
ljmp
pop
ficomps
sbb
out
mov
xor
adc
or
inc
dec
jmp
rcrl
mov
mov
repz
mov
imul
mov
jnp
pop
pushf
leave
popa
push
gs
mov
mov
push
andb
mov
lcall
mov
jnp
push
sarb
mov
jmp
daa
leave
sarb
inc
inc
push
xlat
lock
adc
or
cmpsl
int
js
enter
movsb
mov
push
popf
das
mov
mov
jl
test
dec
imul
mov
add
xor
push
ljmp
pop
inc
pop
add
xor
ret
lods
jle
jbe
and
rolb
inc
pop
jmp
and
jbe
xlat
mov
and
std
inc
pop
and
cmpsb
cmp
iret
aas
push
repnz
sbb
xchg
push
mov
push
test
sbb
add
push
fnstenv
add
sarb
jne
add
dec
mov
imull
sarb
outsb
mov
les
or
in
xchg
popa
cmp
mov
mov
sbb
fdivl
adcl
lock
inc
push
cmp
shll
adc
inc
decb
xchg
mov
out
inc
hlt
add
jnp
xor
jmp
pop
aam
stos
lret
pop
scas
jmp
mov
mov
adc
sbb
jb
mov
mov
push
cltd
xlat
rolb
into
ficompl
mov
js
js
int3
pop
lcall
shrb
or
shrl
pop
mov
xchg
mov
aad
imul
stos
mov
lock
adc
push
aam
add
mov
mov
lcall
lahf
testl
in
add
addr16
repz
cmpsb
out
dec
xchg
push
icebp
mov
loope
xchg
leave
and
adc
fsubr
movsl
jp
imul
loop
cs
cs
xor
or
ret
jp
pop
imul
imul
call
aaa
aad
std
out
sbb
repz
loopne
or
out
dec
lret
addr16
xor
flds
inc
xor
adc
repnz
mov
outsb
mov
pop
test
cmp
jg
jne
lahf
mov
and
mov
xor
and
fwait
jp
jmp
lods
pop
lahf
and
jnp
jle
in
pop
xchg
cmpsb
jl
push
int
repnz
jb
or
jo
and
mov
xchg
in
xchg
les
sbb
orl
ds
aam
cmc
imul
test
sub
loopne
outsl
daa
xchg
mov
repnz
mov
xor
sbb
clc
jl
clc
in
fwait
andb
in
in
mov
jge
dec
insl
cmp
pusha
mov
in
xchg
cmpsb
xchg
or
mov
int
mov
xorl
bound
scas
xor
mov
test
or
aas
enter
xchg
jmp
jne
fsubl
xor
mov
jp
cld
rcrl
push
xor
jns
in
repnz
int
ret
scas
outsb
adc
mov
mov
je
or
pop
outsl
xchg
sub
ret
lods
mov
or
arpl
add
mov
jge
mov
cwtl
mov
call
adc
jne
mov
cld
call
mov
psubq
in
xchg
iret
pop
cmp
loop
add
jle
stos
imul
js
hlt
imul
jp
leave
outsl
fucomp
jo
push
lock
mov
ja
cmc
add
mov
jae
add
loop
fisubrs
je
pop
mov
mov
rolb
fdivrl
sbb
adcb
pop
cmp
mov
cmp
fadd
fsts
es
nop
mov
out
and
in
loop
xchg
cmpsl
jne
or
cs
add
cmc
pop
je
xlat
pop
in
jnp
cmp
shl
mov
dec
stc
lock
loop
std
nop
mov
testb
push
aaa
sbbl
lods
mov
sub
mov
jmp
je
ljmp
sub
sbb
jns
scas
jle
fcoml
addw
lock
or
or
jg
add
pop
xchg
fwait
repnz
arpl
cmp
jecxz
push
xor
xchg
arpl
xor
ret
xchg
fisubrs
hlt
dec
xor
cld
in
push
insl
cwtl
in
mov
mov
adc
es
xchg
fists
inc
cmp
mov
sbb
mov
mov
fcmovu
jo
fnstcw
test
jle
mov
jne
adc
add
cwtl
daa
jl
or
jmp
icebp
movsl
das
addr16
push
mov
test
mov
ss
loop
push
adc
mov
xchg
nop
push
fcoml
fcoml
scas
gs
fmulp
sub
push
jmp
inc
outsb
icebp
sbb
sub
mov
or
cmp
cmc
cmp
cld
out
add
mov
xchg
xchg
call
mov
testb
dec
adc
hlt
sbb
dec
mov
lock
ja
es
cli
roll
cmpsl
pop
push
inc
push
sub
push
adc
fldl
jecxz
mov
aas
jmp
mov
mov
fistpll
je
mov
cld
sub
push
lea
jge
pop
jno
sub
xchg
pop
pushf
push
jmp
jnp
hlt
and
pop
dec
sub
movl
das
sbb
bound
clc
test
addb
cmp
lods
cmpl
fists
inc
cwtl
xchg
in
std
shll
out
mov
addr16
arpl
test
sbbb
clc
cs
jnp
movsl
shrl
mov
add
test
lock
inc
and
push
push
sbb
cmp
lret
mov
inc
xor
stos
dec
outsb
push
jne
shlb
ss
inc
mov
ljmp
ss
pop
dec
dec
inc
pop
aaa
in
push
jae
adc
xchg
out
pusha
and
adc
hlt
dec
inc
xor
inc
popa
inc
push
dec
cs
lea
pop
mov
mov
in
fwait
pop
in
xor
push
aaa
int
in
aas
sub
jecxz
push
decb
sub
mov
sbb
out
jge
xchg
pop
jmp
and
call
insl
dec
mov
pop
scas
ljmp
pushf
push
xchg
fwait
xchg
cmpsl
fmul
lds
dec
jecxz
arpl
dec
xchg
aad
mov
cmp
gs
shld
in
std
xchg
mov
push
movsl
mov
mov
mov
jmp
rolb
add
mov
int
mov
dec
lock
mov
adc
sbb
mov
mov
jns
stos
vmovd
out
fistl
int3
fsubs
subl
insl
push
loope
in
xor
out
inc
dec
out
lret
add
jb
je
sbb
mov
push
and
ret
sbb
sbb
ficomps
jnp
inc
or
shrl
clc
je
sbbb
adc
enter
les
pop
lea
dec
adc
ret
mov
sbb
loope
cmp
repz
cli
pop
stos
inc
or
xor
idivb
push
adc
push
aam
or
sbbl
jne
inc
aas
stos
stos
sbb
divb
daa
mov
add
mov
movsl
enter
jl
lods
repz
dec
mov
aaa
jl
cmp
dec
add
in
xor
jmp
popa
pushf
and
or
xor
inc
push
inc
out
sbb
fs
adc
jb
jbe
adc
add
and
fwait
push
cmpsl
jecxz,pt
xchg
arpl
in
sbb
sub
and
popf
pushf
rcll
lock
daa
jle
das
pusha
mull
inc
jle
mov
xor
and
lods
int
and
cmp
loope
pop
add
push
mov
fistps
lret
mov
shrl
cmp
pop
test
add
ret
ret
shrl
sahf
mov
or
mov
mov
mov
push
jp
js
test
jae
dec
and
sub
sbb
in
repz
xor
and
enter
ret
leave
jne
sti
sub
mov
mov
pop
sbb
add
inc
pusha
sbb
mov
icebp
movsl
push
mov
test
fisubrs
push
outsb
and
in
push
jmp
imul
bound
pop
xchg
pop
imul
negl
pop
popf
mov
in
rcll
xor
idivl
call
or
jp
fsubrs
add
mov
or
cmp
imul
inc
mulb
mov
incb
add
jbe
adc
dec
gs
xchg
ljmp
rcll
aas
loop
cwtl
lcall
cmc
push
fistpll
out
or
enter
adc
rcrl
fmulp
inc
js
insl
push
repnz
stos
aas
hlt
mov
test
dec
pop
je
loope
lock
push
call
push
mulb
enter
xchg
xchg
ret
mov
loopne
mov
sub
hlt
stos
hlt
adc
jno
jbe
inc
daa
pop
push
xchg
dec
pop
pop
sub
dec
outsb
dec
loop
xorl
dec
adcl
mov
daa
sub
xchg
out
mov
nop
sub
sbb
dec
add
sarb
bound
dec
pop
testb
movsl
fisubs
xchg
hlt
xchg
mov
jecxz
push
and
mov
mov
sub
std
mov
xor
in
add
mov
je
mov
mov
dec
ds
jl
scas
cld
lcall
xor
sbb
jno
inc
fcomps
push
push
sub
in
cmp
pop
dec
test
pop
or
lea
ljmp
mov
cld
mov
pop
dec
pop
push
dec
sub
in
mov
sub
mov
fcmovb
push
into
sub
and
add
push
mov
lods
inc
loope
push
or
mov
and
pop
and
and
mov
jl
mov
cmp
add
cld
les
cld
inc
ss
push
pop
lds
into
nop
pop
or
outsb
xchg
test
movsb
hlt
mov
or
loop
imul
sahf
jo
fstps
and
fdivl
das
das
data16
sti
xchg
imul
push
inc
adc
inc
pop
aad
and
add
inc
fstpt
and
lret
je
jmp
bound
jno
push
loop
dec
cltd
jbe
and
ret
pop
lock
pushf
loope
int
in
push
aad
inc
pop
fadds
das
test
lret
dec
adc
push
or
add
or
ficoms
lods
mov
in
nop
hlt
push
ret
and
inc
pop
in
test
lods
std
add
xor
das
fwait
and
inc
or
stc
addr16
xor
cmpsb
adc
cmpsl
adc
scas
mov
add
sahf
mov
and
xlat
pusha
mov
cltd
jge
cwtl
das
push
jmp
daa
xchg
jb
dec
movsb
mov
movsl
pusha
dec
std
mov
sub
dec
push
mov
mov
cmc
movsl
push
jmp
shr
repz
scas
rcrl
ss
add
fwait
jae
fwait
mov
addl
xchg
addr16
cmp
mov
ret
mov
adc
mov
stos
sbb
inc
ds
fwait
stos
mov
insb
cmp
ja
or
push
sbb
into
gs
stos
andl
mov
lret
loop
or
fldl
inc
jno
imul
inc
jnp
cmp
adc
movsb
mov
jmp
add
sbb
jo
test
xchg
xchg
mov
aaa
inc
sbb
pop
stos
inc
mov
xlat
aaa
lock
repnz
pusha
in
rcl
xchg
fs
add
cs
shlb
popa
pop
push
mov
data16
cwtl
fildl
push
in
testl
cltd
mov
popa
in
notl
add
cs
jmp
pop
or
mov
lret
dec
ret
and
out
and
adc
out
iret
and
xchg
mov
push
and
cwtl
das
aas
dec
popa
mov
dec
or
mov
leave
popa
pusha
imull
imul
xorb
loopne
sub
addr16
cs
addr16
or
or
pop
fwait
sbbl
flds
add
pop
gs
xor
jecxz
mov
mov
adc
jnp
jnp
out
and
test
cwtl
ret
sub
lcall
out
cwtl
inc
add
mov
add
pop
push
test
mov
jb
icebp
mov
mov
add
inc
and
and
std
popa
inc
clc
cmpsl
mov
ficomps
pop
lods
les
and
push
ss
pop
std
test
add
mov
fs
fildl
das
loop
repz
lds
movsb
pop
mov
jnp
and
loope
scas
push
sub
or
fnstenv
aam
mov
push
pop
test
scas
mov
and
inc
cmpsb
mov
repz
push
xor
inc
insb
movsb
aad
jl
gs
adc
sti
iret
dec
mov
or
outsl
dec
mov
lret
mov
aas
and
in
xor
push
dec
mov
dec
jl
mov
sarl
loop
fdivs
mov
dec
sbb
nop
sahf
or
mov
in
scas
pop
jb
test
mov
add
pop
add
jmp
adc
cltd
jbe
xchg
cs
sbb
ljmp
and
sbbb
mov
or
pop
hlt
push
pushf
popf
adc
hlt
out
xor
and
insb
sbbl
mov
push
adc
pop
das
das
inc
fdivrs
scas
stc
dec
out
mov
and
out
in
jmp
out
or
push
pop
popf
sub
lds
and
pop
add
sbb
cmp
arpl
inc
pop
sbb
xchg
add
or
testl
mov
lret
lds
dec
mov
xchg
sub
push
aad
subl
cmpl
je
cmp
and
dec
xchg
stos
xchg
mov
xor
aad
cmp
aad
je
and
cld
pop
sbb
call
test
cwtl
mov
jbe
hlt
cmpsl
ret
loope
lds
js
push
iret
pusha
or
test
outsb
xlat
data16
nop
sub
scas
xchg
mov
les
imul
sbb
sub
jbe
mov
sahf
outsb
cmp
inc
fisttps
mov
ret
das
mov
jns
repnz
stc
cmpsl
int3
arpl
ret
notl
mov
mov
aaa
aad
leave
outsb
fnstsw
mov
icebp
pop
loop
push
lds
or
hlt
pushw
icebp
in
stos
lods
xchg
sbb
rcrl
pop
out
and
adc
in
and
rorb
push
sbb
incl
jae
xchg
sbb
lods
jns
mov
stos
jnp
test
push
mov
push
adc
in
push
sbb
imul
or
adc
bound
gs
ret
mov
cltd
cli
pop
and
xchg
xlat
scas
dec
out
gs
sbb
sub
cld
push
sub
jns
sub
mov
or
stos
hlt
xor
jbe
arpl
add
push
push
loopne
popf
stc
mov
lea
sahf
push
sub
dec
mov
pop
push
mov
shrl
jnp
into
jns
cld
sahf
movsb
cmp
mov
jecxz
push
iret
es
mov
out
xor
jmp
ljmp
je
xlat
mov
or
repnz
ds
lds
xor
push
shll
mov
imul
cmp
push
ret
sub
adc
addb
pop
fwait
jno
adc
in
sbb
fldcw
rcrb
popf
in
imul
fisttpll
or
in
xchg
cmp
jne
das
popa
pop
xchg
xchg
nop
cmp
jge
pop
jo
cmp
sbb
and
dec
pop
insl
mov
pop
inc
sbb
sarb
incl
pop
es
add
pop
pop
inc
mov
das
jecxz
pop
dec
push
call
or
shrb
sub
not
stc
inc
mov
ss
jae
mov
push
sbb
les
dec
mov
aas
fdiv
scas
add
sbb
pop
and
add
addr16
addr16
push
sub
pushl
and
adc
push
lds
sbb
test
inc
jge
xor
ret
cltd
mov
push
xchg
dec
pop
pop
xchg
mov
jg
push
push
outsb
aaa
int
enter
xor
sub
sbb
inc
sbb
pop
mov
sub
mov
jp
jecxz
pop
das
or
cmp
sbb
std
jno
jno
ljmp
outsb
sub
push
fimuls
sub
mov
cli
adc
xchg
dec
adc
out
nop
dec
out
mov
adc
add
mov
jno
inc
adc
sub
arpl
mov
dec
dec
pop
jns
std
and
cmp
jb
sub
sbb
out
add
popa
mov
insl
jge
insl
jno
call
fidivrs
ret
push
push
jnp
js
push
xchg
fstpl
sub
add
and
fsts
inc
movsl
cmp
sub
mulb
scas
push
out
inc
loopne
pop
adc
pop
repnz
jmp
and
lahf
and
out
xor
xor
outsb
sti
mov
jmp
sbb
inc
shl
or
scas
inc
jbe
pop
mov
imul
pop
cmp
hlt
in
xchg
mov
sub
push
leave
ljmp
dec
xchg
gs
aad
sub
lret
int3
mov
mov
mov
sub
and
adc
test
int3
and
mov
mov
aas
mov
insb
add
sbb
enter
cmp
jg
dec
in
in
adc
cmp
ret
pop
call
push
inc
std
lahf
call
pop
hlt
xchg
and
mov
and
jne
inc
dec
and
out
sbb
imul
sarl
jmp
fdivrs
loopne
stos
out
mov
pop
jbe
xchg
scas
jo
pop
mov
outsb
js
or
xor
mov
repnz
and
cmp
push
shrl
mov
xor
lock
sub
push
enter
fnstcw
push
fwait
lcall
push
jae
enter
jo
aad
inc
fld1
pop
mov
pop
or
mov
fildll
pop
out
mov
sub
mov
fcmovbe
lock
jl
adc
out
setle
cmp
xchg
je
mov
push
cs
movsb
repnz
and
lds
sbb
out
jno
out
mov
mov
int
or
jns
sbb
cwtl
out
push
mov
icebp
iret
leave
fnstenv
or
xchg
pop
xchg
pop
les
xor
mov
outsl
xchg
push
dec
fdivrl
xchg
pop
pop
xchg
hlt
mov
mov
cld
call
sar
cmp
mov
lea
test
jo
dec
mov
xchg
cmpsl
mov
jns
sbb
mov
mov
aam
or
or
mov
imul
fs
rcrl
cmp
test
insb
cli
test
mov
popf
sbb
mov
aam
test
jbe
jo
jge
nop
cmp
decl
push
insl
in
lahf
jl
mov
xlat
sbb
push
mov
xor
cmp
sbb
sub
push
lds
mov
repz
push
xchg
aaa
lret
xor
jecxz
sbb
out
rorb
xchg
jbe
loope
jno
and
pop
cmp
xchg
scas
lcall
enter
sub
outsl
xchg
sbb
or
mov
jecxz
arpl
sarb
jp
out
pop
lahf
pop
add
pop
cltd
and
jnp
add
out
xlat
shl
test
push
cmc
pop
hlt
dec
das
push
jbe
pop
add
cmp
xchg
pop
rcll
jge
sbb
sub
test
cmp
adc
push
push
sbb
aas
cmpsl
ret
pop
sbb
cs
push
pop
fsubl
imull
icebp
push
inc
xchg
mov
xor
mov
xor
and
orl
mov
call
loope
mov
mov
sbb
lods
leave
add
xor
mov
cwtl
dec
pop
push
mov
not
and
or
pop
adc
jbe
gs
dec
int3
and
sahf
loopne
dec
dec
push
jge
cmp
lods
cmp
and
jmp
decl
sub
xchg
les
mov
in
mov
jno
and
bound
jnp
pop
pop
xor
mov
sbb
aad
mov
dec
push
cmp
enter
mov
stos
add
lcall
insb
call
cmp
add
sub
dec
test
fs
adc
mov
rclb
lods
cmpsb
adc
fnstenv
pop
sbbl
xor
xchg
mov
jae
and
orl
lcall
add
dec
sbb
insl
loope
fwait
sar
pop
shll
add
outsb
loope
shll
jecxz
nop
mov
mov
out
mov
sbbl
xor
xor
jge
ret
or
scas
lods
aas
fstl
push
dec
jno
fistpll
lret
xchg
mov
xchg
xchg
imul
es
push
pop
push
iret
jp
andl
push
sub
dec
and
xor
lods
xchg
outsb
adc
mov
sub
lods
jecxz
daa
aam
loopne
movsb
dec
and
push
shl
cmp
mov
pushf
or
adc
lods
xchg
inc
fmulp
sub
jo
test
adc
repz
jnp
or
dec
xor
cmp
mov
pop
in
sub
or
mov
mov
mov
in
xlat
jmp
xor
fs
in
lods
pop
popf
and
jae
push
jns
stc
mov
gs
push
nop
stos
mov
xchg
cmc
aas
testb
adc
das
stc
or
mov
push
jecxz
nop
call
movsb
outsl
in
repnz
or
sbb
and
adc
cmp
clc
sahf
xor
sbb
or
push
jae
jmp
es
xor
imul
fs
inc
sub
ljmp
nop
jmp
aad
mov
add
inc
jbe
sbb
mov
or
dec
sub
in
pusha
nop
sbb
stos
loope
adc
sti
inc
scas
inc
addr16
pop
inc
jecxz
or
pop
inc
xor
dec
pop
push
cs
pop
loop
iret
outsl
movsl
data16
gs
xor
push
cwtl
popf
or
mov
out
out
xchg
inc
addb
repz
or
cwtl
pusha
mov
mov
sub
lock
push
rorb
push
adc
bound
xchg
adc
sub
adc
xor
pop
out
inc
fcomps
xorb
mov
mov
lret
ret
jae
pop
aad
dec
jg
dec
mov
aam
push
leave
mov
out
mov
test
call
ja
fldt
dec
daa
fsubl
jb
stc
fldcw
test
lret
inc
adc
mov
mov
dec
cmpsl
shrb
stc
mov
jge
jns
xlat
mov
std
jo
pop
data16
or
lds
pop
repz
jns
aam
sbb
adc
sub
fld
mov
adc
jecxz
scas
jno
cli
call
pop
mov
les
jbe
pop
xor
xor
jle
inc
mov
xchg
dec
pop
or
imul
push
pushl
aaa
sub
pop
cmp
sub
popf
cli
or
outsw
xchg
sub
dec
sbb
loop
loopne
iret
adc
mov
jnp
mov
add
es
inc
dec
mov
jl
cld
repz
push
or
push
push
mov
aam
addr16
dec
movsb
xchg
or
aaa
jae
and
test
in
in
adc
fnstcw
jmp
stc
dec
lret
inc
fsub
add
popf
xor
dec
cmp
xchg
sbb
je
lods
or
xchg
loope
xlat
or
add
mov
or
cmpsl
jns
fdiv
fstpt
push
xor
jmp
or
sub
xchg
ljmp
jne
test
and
add
and
call
in
clc
out
jbe
inc
aas
inc
push
mov
into
scas
aas
hlt
jnp
lcall
sahf
xor
arpl
inc
add
fldt
data16
xor
scas
mov
loopne
ret
lds
cmpl
bt
pop
lret
enter
aaa
and
jnp
cmpsb
inc
pop
je
push
xlat
scas
pop
fsubrp
sahf
mov
int3
fmulp
decb
in
push
jp
cmp
add
adc
cmpsb
faddl
sarl
mov
mov
rcr
mov
lods
call
mov
add
inc
sbb
mov
decl
fsubrs
popf
and
int
jb
inc
mov
in
leave
push
jae
jmp
outsl
jnp
or
dec
jle
jne
pop
sbb
rclb
ja
xor
sub
and
sti
mov
mov
repz
adc
jno
hlt
and
sub
leave
push
js
push
mov
inc
mov
pop
movq
sub
mov
sbb
jp
xor
xor
cmp
add
mov
push
dec
fidivs
add
jo
mov
jmp
or
add
pop
dec
pop
gs
loopne
inc
bound
repnz
nop
mov
lock
pop
and
aaa
dec
xorb
mov
mov
cmpsb
rolb
add
mov
lods
jae
xchg
inc
repnz
out
sti
xor
outsl
jnp
xor
adc
imul
jmp
cmp
jge
clc
fwait
and
stos
out
fstpl
mov
sub
cmpsl
aaa
je
movb
shrb
adc
faddp
movsl
xchg
sub
xchg
stos
sbb
push
insb
dec
out
or
pusha
ds
rol
sbb
adc
add
nop
imul
test
ret
inc
dec
xchg
adc
in
out
mov
pop
insl
push
adc
insb
xchg
rorb
mov
add
add
scas
pause
add
gs
addb
mov
lock
xchg
mov
adc
adc
mov
in
shll
int3
inc
je
xchg
cmpsb
arpl
inc
enter
fucomp
sbb
roll
ret
mov
adcl
clc
jecxz
mov
dec
ret
jl
add
loope
arpl
ret
sbbl
cmp
pop
jmp
inc
leave
in
xchg
in
daa
daa
mov
pop
inc
mov
jnp
test
mov
fnsave
sub
xchg
inc
or
sti
test
mov
mov
push
imul
push
pop
cmp
or
push
sbb
lret
and
es
xchg
stos
movsb
push
cmc
in
xchg
loope
scas
mov
nop
jae
xlat
ss
mov
fisubrs
pop
aad
cmp
aad
aas
ds
or
mov
imul
in
fidivrl
or
sub
dec
shr
mov
stos
mov
mov
adc
jno
jb
aas
dec
ss
inc
repnz
lods
xor
mov
sub
lock
lahf
cmc
movsl
test
cmp
leave
cmp
int
movl
inc
cmp
xchg
ret
es
adc
mov
jb
leave
int
fadd
daa
mov
or
sub
pushf
repnz
mov
xchg
fsub
cmpsb
inc
cmp
lret
test
aad
cltd
or
adc
mov
scas
jae
fcmovu
mov
lods
ljmp
call
pop
or
xchg
adc
jmp
loopne
adc
mov
mov
stos
pop
ret
fldenv
clc
push
jne
inc
es
je
daa
jo
notl
or
faddl
sub
or
inc
cwtl
push
cmpsb
adc
sub
jno
pop
dec
xor
nop
and
and
das
xchg
mov
sbb
cmp
jbe
and
pushl
xchg
cmpsb
push
xor
subl
xchg
stos
mov
and
pop
imul
andb
mov
mov
fimull
add
lods
ljmp
pushf
cli
pop
mov
xchg
mov
xor
les
repz
cwtl
xor
hlt
sub
push
xchg
xor
adc
and
mov
into
sbb
out
jle
inc
mov
lcall
sahf
stos
rcr
aaa
hlt
in
jbe
and
push
imul
push
mov
ss
lods
pop
cwtl
push
pop
pusha
ss
cli
push
negb
lcall
imul
gs
xlat
test
inc
jbe
pop
movsb
aam
jne
lock
test
xchg
pop
and
add
xchg
adc
es
dec
or
jns
mov
rcll
test
xchg
xor
divl
pushf
jg
add
jge
pop
movsl
inc
fisubrs
sub
loope
jno
or
lcall
gs
jecxz
scas
sub
sub
push
sub
and
rorl
cmpsl
or
pop
pop
xchg
lock
push
cltd
int3
xchg
sti
jp
inc
xchg
mov
lods
pushf
stos
jns
mov
ljmp
dec
cmc
fcomip
cmp
into
fdivr
outsl
mov
sub
rcrb
mov
mul
test
ss
jge
cwtl
ja
push
sub
or
add
mov
pop
sbb
ljmp
cs
xor
xor
test
push
cltd
sbb
arpl
pop
or
and
cmp
xlat
negl
xchg
sub
or
sub
aad
pop
add
xor
dec
dec
and
iret
cmp
xor
pop
outsl
cltd
aas
ja
test
fs
xor
push
sub
adc
popf
push
es
cmc
cltd
pusha
pop
add
inc
mov
std
enter
xchg
cwtl
inc
movsl
repnz
arpl
js
stc
pop
aad
imulb
jg
cs
int3
or
dec
jecxz
xchg
sbb
cmp
jp
hlt
pop
mov
in
testb
insb
sub
icebp
cmp
mov
inc
adc
jae
clc
xchg
sub
fildl
or
les
dec
cmpsb
jno
cwtl
xor
movsb
out
mov
cmp
repz
mov
jnp
and
mov
rol
dec
add
add
mov
sub
sbb
dec
bound
in
stos
shlb
les
mov
outsl
dec
xchg
lock
lahf
push
pusha
ds
ficoml
stos
mov
dec
inc
pop
sbb
cmp
pop
pop
jl
in
mov
sbb
sar
lock
fdivs
add
lods
inc
test
rcr
cmp
sbb
xchg
ret
scas
mov
mov
rcrl
xchg
clc
xchg
test
jle
cmp
pusha
adc
imul
idivl
mov
ret
loopne
or
push
xor
add
inc
mov
add
pop
jg
add
jo
movb
orb
mov
add
arpl
mov
mov
stos
sbb
stos
loopne
or
inc
dec
lock
add
shl
scas
add
test
in
mov
and
push
or
scas
mov
das
movsl
rcl
cltd
lds
push
cmp
idivb
orl
ja
mov
int
lahf
arpl
xchg
and
push
push
or
xchg
sub
and
add
inc
repnz
mov
sarb
ja
pop
xchg
lock
fs
cmc
shl
inc
adc
jns
add
scas
xor
jg
pop
std
test
ret
and
mov
cmp
out
jne
inc
mov
ljmp
outsb
mov
mov
xchg
sbb
arpl
out
or
mov
pop
mov
call
int
add
adc
rorl
ficomps
lret
mov
add
xchg
add
add
pop
stos
test
ja
daa
stos
pop
insl
leave
and
scas
adc
push
nop
iret
out
in
nop
insl
test
shrl
add
fldcw
mov
ja
and
push
test
lret
sarl
push
jno
xchg
add
cmp
gs
aaa
ljmp
mov
push
jae
sub
or
ds
sub
arpl
mov
lock
aas
sbb
and
into
insl
or
jns
xchg
inc
into
cltd
xchg
hlt
xchg
xrelease
mov
push
addr16
stc
ds
ret
mov
ds
pop
call
mov
dec
ss
mov
inc
aaa
mov
push
jns
pop
pushf
or
push
xchg
xchg
ret
xchg
daa
call
shlb
fcmove
push
aas
pushf
jmp
es
and
scas
push
incl
scas
test
repnz
aad
push
push
push
cltd
imul
jmp
dec
push
or
jle
jmp
aaa
dec
add
mov
mov
data16
std
clc
or
ret
icebp
mov
add
cmpsb
inc
mov
sbb
int
jmp
or
iret
in
lahf
add
add
cld
loop,pt
inc
clc
mov
jns
push
aas
sti
or
in
pop
pop
movsb
dec
sbb
push
pop
mov
push
xlat
xchg
ja
jne
ja
ljmp
adc
popl
push
push
xchg
push
jb
jb
push
cmp
and
add
ljmp
outsb
pop
testb
gs
cmp
jbe
jl
cmp
stos
aam
adc
ja
mov
addr16
jge
push
and
imul
outsl
ja
xor
mov
inc
lods
and
mov
sbb
add
or
sbb
xor
icebp
pop
pop
lods
dec
push
lcall
lcall
dec
jne
push
fisttps
scas
mov
addl
mov
mov
cmpsl
in
mov
cmc
pushl
dec
xchg
sub
notb
inc
icebp
pop
es
fsubrs
aas
mov
jae
int
pop
inc
lret
dec
es
xor
sahf
adc
imul
clc
sub
mov
push
add
clc
ret
xor
dec
jmp
mov
ja
inc
stos
mov
xchg
sbb
and
imul
movsb
and
dec
jle
jge
nop
imul
dec
aas
mov
xor
jmp
popf
out
mov
in
hlt
ds
stos
inc
or
cmc
inc
shl
cmpsb
ds
add
jecxz
daa
and
inc
ficomps
xor
sub
inc
push
ficoms
std
test
xor
cmp
dec
mov
or
push
mov
ret
xchg
int
and
mov
aaa
sbb
sbb
les
pop
sub
jno
xlat
xor
pushf
inc
jno
jno
pop
ljmp
sbb
aad
rorl
push
mov
mov
aam
shll
call
and
ljmp
jb
es
notl
fstl
or
aam
in
test
sub
test
sbb
or
stos
hlt
jmp
dec
xchg
sub
push
mov
jae
push
or
adc
out
sub
add
jne
and
add
push
cwtl
jg
or
push
push
je
movb
fs
aad
push
xchg
clc
push
xor
pop
bound
xor
add
inc
jp
xchg
add
cmc
rorb
jecxz
sbb
push
daa
xchg
adc
jb
js
ficoms
divb
push
pop
rcrl
decb
jl
and
pop
jmp
lahf
fmull
jecxz
mov
or
mov
std
xor
adc
loop
pop
mov
or
rcll
ss
jb
xor
rolb
adc
sbb
or
sbb
aad
rorb
dec
movsb
lods
out
negb
sbb
sub
jo
and
mov
mov
pop
sub
and
mov
mov
subb
enter
cmp
ret
shr
push
push
inc
imul
add
std
rol
stos
mov
ret
es
hlt
popf
add
loopne
and
mov
push
dec
jmp
cli
inc
dec
lock
push
shrb
arpl
lods
adc
out
xlat
icebp
jmp
out
cmp
adc
jo
lds
cmpb
push
pop
mov
icebp
aad
imul
dec
lahf
pop
pop
jg
push
jecxz
ss
inc
repnz
mov
xor
pop
or
rcll
sbb
fnstsw
fwait
add
mov
mov
sbb
jge
cltd
inc
xchg
dec
mov
test
cli
add
rcrb
mov
and
mov
xchg
xchg
sbb
fst
sbb
adc
out
sti
lret
arpl
cmp
sbb
dec
xor
divl
dec
out
xor
repnz
aam
popf
sub
mov
sub
test
add
lret
out
jmp
test
lods
sub
fisubrl
rorb
fdivrl
pop
mov
dec
bound
andl
subb
inc
cltd
pop
call
cmp
inc
pop
cmp
int3
aam
mov
fsubr
lods
adc
pop
cltd
daa
push
adcl
cmp
fisttpll
mov
xchg
ret
js
jmp
cmp
adc
cs
movsl
jne
push
mov
push
stc
and
mov
pcmpeqw
mov
or
cmp
adc
mov
push
mov
or
sub
minps
and
jbe
into
sub
add
jg
push
loopne
push
dec
clc
and
stos
mov
rclb
leave
call
xchg
pushf
ret
repz
cmp
sbb
jg
fidivs
pop
push
adc
int3
sbb
and
in
jmp
fs
dec
fnstsw
fwait
sti
imulb
cmp
idivl
jge
adc
sti
sub
mov
xchg
insb
xlat
sbb
lock
xor
icebp
movsl
insb
bnd
dec
mov
pop
popf
mov
pop
inc
les
testb
inc
push
imul
mov
sbbb
add
imul
roll
or
pop
push
sarl
and
decl
pop
pop
fs
pop
push
test
in
dec
fstpl
leave
les
shll
xchg
cli
or
and
jmp
int
dec
call
mov
lods
xor
push
mov
push
pop
sub
dec
pop
test
push
inc
enter
pop
jmp
sub
stc
mov
std
xchg
call
fisttpll
mov
jae
stos
mov
dec
repnz
mov
bound
mov
stos
shlb
pop
jnp
xchg
insb
repnz
insl
mov
and
popf
xchg
jp
in
dec
testb
insb
stc
ja
lods
pop
jbe
call
outsl
push
push
lea
rcrb
lcall
out
sbb
sbb
mov
jnp
dec
adc
adc
add
enter
mov
xor
mov
fs
cmp
xchg
jp
imul
inc
mov
mov
mov
mov
vunpcklps
repnz
cwtl
push
test
arpl
pop
fidivl
add
and
dec
icebp
and
mov
or
sub
xchg
cmp
push
inc
mov
push
leave
mov
arpl
sbb
sarl
mov
add
call
sbb
into
lock
hlt
outsb
lds
or
rol
adc
lods
sub
repz
xor
sub
pushf
jb
mov
test
add
in
lahf
stos
and
ja
scas
mov
lret
pop
sub
stos
jo
test
loopne
mov
mov
icebp
mull
mov
xchg
jge
dec
rorb
fildll
xadd
pop
in
stc
jae
aaa
push
mov
sub
xchg
mov
mov
mov
ljmp
pushf
jno
lcall
add
xlat
push
xor
xchg
sti
pop
dec
mov
pop
pop
sub
mov
pop
imul
push
and
add
rol
mov
mov
cmpsl
scas
les
dec
imul
sbb
add
scas
call
lcall
inc
and
cltd
and
push
push
mov
and
inc
idivb
in
mov
lds
out
addl
or
sbb
mov
xor
data16
sub
push
ljmp
les
push
cmp
aaa
pop
lea
mov
xor
fsubs
in
ss
test
dec
repnz
es
mov
jo
push
dec
test
and
push
adc
into
push
ds
xchg
mov
jbe
xor
movsb
cmc
lock
cmpsl
out
pusha
push
ret
cmc
std
adc
shl
lret
scas
lock
add
rcl
stos
mov
cld
and
inc
add
aaa
jecxz
xor
xor
add
add
data16
mov
push
xchg
fidivrs
mov
subl
sbb
cmp
or
in
cmpsl
in
loopne
js
filds
push
add
dec
iret
popf
rol
xchg
dec
mov
fstl
pop
xor
xor
je
movsl
ret
sbb
movsb
adc
jns
sbb
inc
xchg
adc
insb
or
or
cld
movsb
insl
int
adc
pop
sbb
mov
fnstcw
bound
add
fisttpll
push
dec
shrl
lea
int
repz
sub
and
scas
popf
rorb
rcr
in
lds
aas
push
out
sbb
push
xor
popa
jg
out
mov
fwait
and
jno
pop
into
mov
jo
int
add
mov
jg
out
mov
cld
mov
lods
add
xchg
push
mov
add
inc
fisubl
or
pop
movsl
sbb
inc
lods
or
xchg
addr16
sti
fisubrl
mov
vmovdqa
sarb
mov
jl
stos
lds
test
mov
mov
idivl
int3
sub
les
ds
cli
fbstp
jb
pop
dec
xchg
fldl
fs
mov
mov
ja
jno
mov
and
or
in
test
out
dec
pop
clc
loopne
hlt
push
sub
test
fwait
mov
lea
in
stos
pop
pop
insl
int3
mov
lret
or
xlat
ljmp
sti
xor
jp
jns
ret
or
icebp
adc
test
aad
ljmp
icebp
pop
icebp
and
js
in
es
dec
xchg
mov
arpl
inc
aad
sarb
dec
dec
out
sarb
imul
jae
jbe
and
sar
cmpsb
adc
and
int3
dec
imul
inc
addl
pop
pop
fldt
jbe
out
std
cmovae
add
insb
lahf
flds
loopne
mov
fsubrp
pusha
pop
lcall
sbb
dec
jle
cmpb
cmp
lods
call
jg
popa
leave
fstps
push
jp
or
outsb
pop
xchg
loope
pop
push
mov
andb
pop
push
xlat
add
pop
out
ret
movsl
push
mov
push
bound
and
push
scas
jle
sti
lcall
pop
sub
or
xor
in
sub
imul
ja
sbb
jns
inc
mov
mov
into
xor
fnsave
cmpl
es
sub
ret
xchg
stos
jnp
push
mov
mov
mov
insb
jle
inc
push
stc
sub
adc
push
inc
mov
xchg
add
pop
outsl
int
lret
jecxz
fstps
into
in
jl
cmp
loop
mov
jbe
fidivl
adc
push
stos
or
insb
mov
lds
mov
notb
shlb
xor
xchg
or
xor
xchg
in
in
mov
jle
cmp
insb
cld
inc
stc
sub
jmp
xchg
test
xlat
inc
sbb
enterw
cmp
insb
lods
lret
bound
mov
jo
adc
push
outsb
movsb
jge
pop
scas
lds
adc
rclb
sbb
mov
fisttpll
jbe
sub
ljmp
xchg
add
and
or
pusha
inc
into
adc
push
jp
xchg
or
jo
ja
jp
cmp
lret
das
xlat
outsb
in
gs
and
testb
sbb
popa
addr16
cltd
cmpb
lods
jno
ja
leave
cwtl
push
sahf
inc
scas
iret
add
mov
mov
sar
pop
jle
daa
mov
push
inc
idivl
and
xchg
adc
jge
add
fs
dec
loop
adcl
mov
sub
clc
aam
movsb
dec
xchg
fisubl
lds
push
outsb
dec
xor
repnz
xchg
gs
pop
insl
iret
mov
scas
pop
out
icebp
inc
mov
popa
cmp
xor
sbb
adc
push
sbb
xchg
mov
pop
cmp
sub
outsb
mov
lods
add
mov
negl
add
xlat
sub
mov
sbb
inc
mov
pusha
les
push
orl
scas
and
xor
mov
inc
pop
loope
jo
cltd
mov
movsl
mov
push
mov
mov
xor
aas
mov
jae
shrb
fmul
or
pop
mov
adc
test
lods
inc
sbb
popa
mov
fildl
or
mov
mov
sbb
ficoms
mov
or
int
pop
sahf
push
jmp
in
adc
mov
out
fsts
sbb
xchg
pop
push
mov
leave
jl
rcrl
jge
fcomps
fisttpl
or
xor
push
fxch
push
mov
cmp
cmp
aaa
ret
or
jb
shrb
xchg
xchg
lods
pop
dec
dec
ds
popa
iret
iret
rcr
dec
push
leave
test
mov
push
in
mov
aas
push
xor
insb
enter
or
cmp
pop
repz
inc
mov
les
fs
dec
movsl
jbe
add
rorb
loopne
test
loop
adc
sbb
test
and
jns
and
mov
loopne
sbb
lcall
xchg
and
mov
fists
and
cmp
stos
inc
adc
leave
pusha
in
cmc
jecxz
call
push
xchg
int3
mov
sub
pop
rorl
push
ljmp
jno
into
jle
or
or
pop
add
sbb
addb
push
cs
mov
jae
dec
mov
cmpsl
ret
in
loope
pop
das
ljmp
jae
test
add
cmp
inc
sub
mov
and
stos
shrb
mov
cmp
xchg
daa
and
xor
xor
dec
rol
in
mov
pop
and
bound
fdivl
pop
test
es
xchg
loopne
dec
pop
mov
repnz
lcall
mov
and
mov
into
fsubl
mov
push
xor
mov
test
mov
popf
enter
shlb
sbb
stc
mov
push
incb
add
lret
mov
lock
mov
dec
mov
shrb
out
inc
enter
ss
cmp
lcall
andb
loope
ret
int
xor
adc
hlt
inc
or
cli
fadd
mov
insb
xor
lcall
xor
daa
ljmp
xchg
cmp
jl
push
sub
repz
stos
mov
and
aad
cmp
mov
sbbl
cld
cmp
mov
popf
lcall
jge
sbb
xor
pop
rcl
cmp
fs
mov
mov
lret
sub
jnp
outsb
inc
dec
cmp
pop
mov
in
hlt
dec
and
adc
mov
pop
jo
call
inc
xlat
cmpsb
fstpt
hlt
mov
mov
push
push
add
aad
add
out
and
out
pop
jb
ljmp
jecxz
jb
daa
mov
call
popa
test
test
mov
fwait
outsb
cmp
sub
dec
pop
xchg
dec
jbe
mov
das
mov
inc
test
cmp
jmp
mov
fimuls
xor
iret
xchg
fsubr
xor
push
test
mov
fs
and
xor
stos
mov
push
mov
in
arpl
adcl
or
icebp
mov
xchg
sub
add
cmpsb
cmp
cmp
mov
mov
jne
in
loop
f2xm1
enter
cmpsb
mov
loope
mov
cmp
pop
sub
imul
pop
dec
fisubrl
ljmp
enter
ss
stc
fcomps
lret
xor
mov
leave
outsb
lahf
and
imul
xchg
add
mov
xor
dec
pop
rcrl
pop
mov
jg
pop
test
lret
out
bnd
cmp
loope
pushf
in
ja
test
mov
pushf
iret
mov
jbe
test
shll
jg
out
mov
push
xor
cmp
jbe
sarl
cmp
dec
aam
xchg
inc
lcall
cmp
stos
jne
in
jb
daa
negl
repnz
popf
jo
fs
mov
mov
add
and
test
adc
loop
icebp
push
xchg
lods
mov
cmp
test
ja
xchg
jns
xlat
adc
mov
mov
cwtl
adc
push
lods
test
roll
xor
out
mov
addr16
inc
in
cld
jge
cmpsl
mov
shl
inc
add
and
repz
popa
mov
jb
ficompl
ds
jg
sbb
test
movsb
push
mov
push
mov
insl
sub
lahf
sbb
js
mov
or
out
cltd
sarb
sbb
pop
mov
sbb
icebp
inc
into
inc
pop
ja
sub
jle
inc
push
sbb
or
jp
jl
sbb
leave
mov
out
cli
xor
push
mov
sub
cmp
aaa
pop
mov
xchg
inc
stc
or
jge
stos
push
adc
jle
dec
loope
lahf
mov
outsl
mov
call
mov
pusha
out
shrb
jae
jg
scas
pop
xor
cmc
mov
xchg
push
cli
mov
mov
rorl
scas
js
loopne
jecxz
pop
sub
push
pop
push
test
add
cwtl
jbe
sub
add
das
movsl
or
add
push
loope
push
push
and
inc
and
jmp
push
add
mov
in
cmp
outsb
inc
add
cmc
pop
push
arpl
push
lea
hlt
pop
sbb
fimuls
pop
pop
clc
pop
jnp
push
xchg
pop
insb
pushf
iret
outsb
mov
popa
sbb
add
sbb
or
inc
cmp
out
fldt
xor
xchg
adc
add
adc
in
cs
fs
pop
adc
mov
push
xor
ja
loope
je
aam
lahf
mov
mov
cmp
pop
or
add
push
fs
aad
pop
add
fimull
in
dec
dec
andl
div
popf
sbb
xchg
pop
rcll
cli
push
out
xor
adc
punpckhwd
lcall
mov
mov
loop
xor
dec
mov
mov
cmpsl
pop
fwait
iret
aad
pop
neg
push
lods
mov
mov
stos
fidivrl
aaa
cmc
loope
rcrl
int3
inc
aam
pop
outsb
jle
imul
sub
cli
stos
inc
jns
cld
sbb
data16
mov
inc
mov
push
filds
lret
sbb
dec
and
imul
aas
cmp
imull
movsb
add
mov
dec
loopne
stos
inc
or
add
out
mov
jmp
subl
push
mov
xor
movsb
icebp
add
mov
inc
jp
inc
movsb
and
testl
push
xor
imul
xor
mov
dec
out
aas
hlt
xchg
push
int3
into
pop
pop
mov
sbb
scas
jg
aaa
pop
push
data16
xchg
iret
adc
inc
dec
mov
int3
arpl
and
inc
pop
ljmp
arpl
adc
sub
and
cli
sub
repnz
xchg
fdivs
divl
mov
or
mov
rorb
out
jmp
icebp
cmpsb
and
lcall
cltd
pop
imul
jne
jb
shlb
sbb
adc
repnz
rcl
int3
repz
jb
xchg
and
pop
movsb
fistl
jp
loope
inc
fldl
and
push
jno
or
fdivl
fisttps
mov
and
sub
insl
lods
or
mov
sub
insl
add
mov
imul
jmp
and
push
pusha
or
adcb
jb
lea
xchg
cmc
enter
rcl
push
push
mov
fildll
sbb
sub
xor
in
and
and
cmpsl
dec
fists
scas
ds
lahf
push
lcall
jns
or
lods
pushl
aam
pop
sbb
push
cmc
outsb
cmp
mov
mov
inc
cwtl
loope
xchg
in
mov
mov
mov
cmp
out
sti
cmp
mov
cmp
or
dec
fdivrs
push
fsubrl
cmp
jl
xchg
out
cltd
popa
sbb
sarl
jne
dec
mov
inc
mov
das
mov
jae
adc
push
repnz
push
and
dec
bound
inc
pop
insb
cmp
jmp
mov
push
jae
xchg
push
movsl
push
mov
sarb
aam
mov
mov
out
addr16
jl
and
xor
sbb
addl
xor
adc
dec
icebp
orb
jecxz
aam
mov
ja
adcb
mov
outsb
scas
mov
lods
imul
or
in
mov
andl
cli
adc
sbb
out
pop
mov
mov
pop
dec
lods
orl
xchg
nop
repnz
jno
sbbb
xchg
jnp
adc
subb
sbb
jecxz
mov
lds
out
mov
xchg
inc
pop
pushf
dec
xor
push
and
and
inc
shrl
bound
or
dec
repz
movsb
aas
hlt
cmp
pop
jmp
fisubs
mov
jge
loope
fwait
cmpsl
lcall
cmp
xchg
shlb
sub
dec
addb
inc
dec
in
jge
or
loop
ljmp
xchg
jl
sti
ja
push
mov
fsubrs
or
cmp
das
or
and
mov
aaa
cmp
sahf
sub
sbb
adc
mov
insl
jno
insl
movsb
cmp
lea
push
sarl
xchg
test
jp
out
daa
xor
dec
sub
les
outsb
in
movsb
lahf
mov
add
subl
iret
xor
pop
cmp
aas
filds
shlb
inc
and
xor
jge
jne
pop
shll
or
fsubr
sbb
or
repz
cltd
loop
ret
test
jp
in
test
pop
sti
test
mov
push
jecxz
or
imul
jge
cmp
jae
fstps
popf
fstps
mov
push
aam
test
das
cmp
icebp
jmp
jmp
fwait
notb
cmp
cmpsl
loope
dec
movsl
jo
cmpsl
and
cmp
in
ret
leave
xchg
shlb
stos
sti
mov
ja
negb
inc
fisttpll
lret
cld
sub
cwtl
ret
cmpsb
test
leave
push
aaa
mov
paddsb
mov
pop
scas
lods
shl
xor
sub
inc
pop
pop
les
arpl
mov
pop
arpl
inc
cmpsb
sbb
out
inc
and
xor
and
inc
gs
push
and
sahf
sti
negb
inc
ljmp
out
les
and
push
out
loop
add
aaa
loopne
xchg
inc
jmp
ds
mov
mov
scas
xchg
cmpsl
je
imul
xchg
call
cmp
jae
fisubs
mov
in
mov
movd
adc
jns
adc
fistpl
jmp
fstpt
fwait
pop
inc
stos
jmp
pop
les
mov
xlat
push
ja
or
adc
into
pop
push
inc
je
xlat
ficoms
mov
je
push
aaa
push
addl
ja
sbb
xchg
notb
movsl
rol
sbb
enter
pop
jb
add
enter
mov
push
xchg
movsb
testl
sub
aas
dec
push
jmp
xor
mov
or
inc
daa
or
sub
sbb
je
loopne
test
hlt
test
dec
out
and
inc
shll
lds
add
pop
addb
mov
pushf
xchg
xchg
out
xchg
out
add
repz
loop
mov
inc
fisttpl
into
adc
popf
sbb
popa
leave
out
pusha
pop
sub
cmpsb
sbb
icebp
aam
sahf
loope
mov
test
bound
mov
jmp
jo
popf
mov
jb
inc
hlt
mov
out
inc
sbb
lea
jne
popa
mov
mov
mov
aam
outsb
add
cmp
jmp
push
mov
lods
and
pop
popa
xor
enter
aas
mov
xor
cmp
sbb
cwtl
push
lds
sbb
ret
sar
xor
pop
loopne
pop
scas
push
add
mov
pusha
fiadds
lret
mov
jge
lret
dec
jb
fldl
xor
insb
and
iret
pop
and
shrl
call
pop
mov
cmp
sbb
push
jns
adc
mov
pop
fists
ja
gs
repz
cmp
mov
std
fwait
inc
xchg
test
addr16
adc
inc
and
push
sbb
stos
xchg
adcl
loopne
fmull
mull
sub
pop
sub
fistl
and
in
sbb
xchg
inc
clc
and
test
jg
xchg
and
mov
jle
scas
inc
mov
in
xchg
sub
addr16
inc
in
jae
inc
aad
pop
test
out
lds
in
pushf
and
pusha
jo
push
movups
mov
add
outsb
pop
sub
mov
in
push
cld
subb
xlat
repz
sub
or
or
ret
stos
add
orb
mov
movsl
dec
scas
and
cmp
stos
fnsave
adc
divb
into
jb
in
jns
into
gs
push
push
xor
insl
leave
in
jns
sbb
push
xchg
movsl
arpl
in
sti
ds
jle
lcall
jb
mov
pop
jb
rcrl
sub
pop
aas
mov
fwait
repnz
mov
xor
mov
add
sbb
mov
sbb
js
dec
clc
int
outsb
xchg
sub
test
mov
sub
int3
dec
jge
jp
push
call
cmc
test
sbb
pop
es
sub
lret
push
lock
scas
or
mov
cmp
pop
mov
inc
mov
fadd
pop
dec
pop
xchg
xchg
je
and
mov
push
icebp
enter
push
mov
xlat
dec
add
loope
xchg
and
adc
daa
push
daa
int3
arpl
mov
addl
lcall
fiadds
and
pop
mov
add
lock
xchg
pop
shl
add
ja
out
add
testl
sbb
test
addr16
push
in
mov
mov
pop
jecxz
xorl
cmp
cltd
sub
jb
push
mov
add
popa
mov
xor
movsb
lods
sub
in
test
push
std
test
or
aas
loope
jno
mov
xchg
mov
fists
shlb
mov
cmc
scas
fst
movsb
nop
daa
sar
push
xor
mul
sub
pop
aas
fwait
mov
dec
jecxz
jecxz
mov
dec
dec
mov
jmp
mov
and
pop
mov
dec
pop
aaa
out
ss
test
rep
adc
push
lcall
dec
jecxz
push
jl
pop
lcall
cmpsb
lock
push
add
mov
inc
std
int3
loopne
movsb
mov
mov
jb
xor
in
stos
inc
rorb
ret
out
mov
push
sbb
jmp
ret
jo
xchg
add
enter
mov
mov
bound
rcll
fstpt
mov
fsubrl
dec
pop
mov
dec
add
inc
enter
aas
jp
and
iret
lahf
pusha
into
nop
inc
cmpsl
int
jb
mov
cmp
jecxz
iret
pop
push
jb
lret
stos
negl
sub
movsb
mov
popa
fdivr
cli
in
and
mov
movsb
mov
loopne
out
mov
jp
sarb
cltd
test
je
out
jnp
add
outsb
shrb
push
ljmp
cmpsl
cmp
xchg
sbb
jo
jecxz
mov
push
push
es
inc
sub
mov
push
aam
jo
popf
stos
int3
stos
mov
push
popa
shr
outsl
push
cmpsb
pop
test
stc
pop
ret
cmc
cmp
xlat
mov
fidivl
pop
mov
outsb
stos
cld
xchg
push
movsb
or
pusha
adc
gs
pop
cmp
inc
add
ss
push
lahf
jmp
push
in
mov
push
sub
dec
daa
stc
and
jg
mov
bound
mov
mov
fs
arpl
mov
frstor
icebp
shr
es
mov
xor
mov
loop
cmp
clc
cltd
icebp
or
pop
pop
jo
fcoml
mov
and
cmpsb
cmpsl
out
mov
mov
outsl
repz
sahf
data16
push
pop
adcl
mov
cltd
stos
movsb
mov
les
testb
push
sbb
aas
inc
std
loopne
mov
adc
sub
adc
imul
shll
inc
push
jbe
addr16
jle
push
mov
pop
xor
pop
inc
mov
in
mov
sbb
test
adc
lret
lret
call
pusha
cmc
sahf
dec
dec
xchg
dec
pop
aad
inc
and
push
cmpsb
fcmovnb
xor
mov
movsl
les
data16
and
xchg
cltd
inc
or
or
shll
sub
add
repz
bound
push
sbb
ss
mov
sbb
and
test
ja
push
mov
mov
push
cmp
or
sub
ds
out
or
pop
imul
lcall
xor
jle
mov
mov
lcall
sbb
mov
idiv
incb
push
lods
pusha
push
xor
mov
inc
test
push
push
xor
ds
movsl
xchg
mov
ss
cld
jl
mov
ja
add
mov
out
pop
cmp
sti
jns
movsb
das
iret
lret
andb
test
nop
popf
and
test
fnstcw
sti
mov
pop
pop
adcb
sub
arpl
jne
sarb
push
lcall
test
jmp
and
mov
sahf
lods
pop
in
or
icebp
or
sbb
cmp
jnp
inc
mov
mov
roll
mov
mov
shl
dec
or
mov
xchg
inc
xchg
or
pop
push
insb
push
imul
jmp
mov
adc
in
mov
sub
dec
outsl
push
jle
push
mov
dec
pop
stos
out
dec
mov
mov
jmp
rclb
in
or
ljmp
pushf
notl
cmpb
add
mov
xor
aas
lcall
bound
sbb
aad
xor
es
dec
xor
loope
mov
push
xchg
adc
and
jns
jmp
or
lods
mov
shlb
adc
addl
cmc
mov
push
adc
jmp
mov
leave
dec
or
mov
test
cs
jecxz
cmp
out
cmp
repz
stc
sbb
arpl
inc
push
pminub
repnz
push
push
push
add
inc
dec
sbb
mov
mov
xor
push
mov
sub
jmp
mov
repnz
fmuls
movsb
mov
sbb
jne
cmp
pop
mov
pop
scas
fildll
jecxz
dec
rclb
jp
jne
enter
and
inc
mov
jb
int
xchg
js
mov
ret
fistpll
data16
mov
jg
mov
push
add
mov
popf
aas
or
and
cmp
push
shr
adc
adc
mov
push
xor
xorb
outsl
fnstsw
pop
cli
sbb
lods
lahf
gs
and
mov
xchg
ja
fidivs
aad
jmp
jmp
lods
inc
sbb
jo
loopne
inc
push
jbe
push
ret
and
iret
cmpsb
push
mov
out
mov
sti
fcmovnu
test
pop
pusha
inc
movsl
jmp
jp
popf
addr16
cmpb
push
mov
jae
adc
ret
push
mov
rcrl
push
popf
push
xlat
popl
pop
push
cld
jae
jg
adc
out
test
mov
mov
popa
and
jno
inc
sub
incb
push
sti
out
repz
or
jbe
xchg
sbb
push
xchg
xor
lods
and
xchg
or
ds
dec
dec
xor
movsb
sbb
cmp
arpl
dec
or
mov
addr16
shlb
divb
or
inc
pop
push
ds
mov
cwtl
in
icebp
test
sub
adcl
hlt
iret
bound
aam
dec
add
insl
lods
in
cmp
push
xor
ret
in
adc
out
cs
add
add
adc
sarb
int
pusha
mov
xchg
mov
jecxz
std
or
outsb
add
jmp
test
cmp
lahf
ss
inc
ficompl
mov
xlat
outsb
shlb
mov
iret
mov
iret
xchg
iret
xchg
mov
mov
jo
out
push
lods
xchg
or
daa
adc
jl
xlat
stos
aam
xchg
cmp
inc
and
clc
ret
insl
jae
inc
jecxz
adc
into
cltd
int3
mov
fsubrl
std
add
adc
insb
adc
mov
in
mov
add
or
jae
shr
inc
mov
mov
lods
lcall
ror
cmpsl
and
hlt
lret
pop
xor
adc
fstp
push
cmc
push
xor
mov
fstps
mov
nop
jne
xchg
gs
fadds
sbb
cmp
add
jecxz
mov
fistpl
xchg
lods
jae
mov
jg
lock
dec
popf
cli
popa
or
jns
cltd
ret
xchg
xchg
leave
or
fsubrl
cmp
fsubr
hlt
jo
lds
mov
xor
fdivp
into
rcrb
add
push
add
scas
add
jns
dec
jmp
push
js,pn
js
jp
push
push
hlt
ficompl
sub
mov
add
mov
out
clc
data16
movsl
scas
cwtl
movsl
jp
imulb
ret
stc
push
mov
mov
shrb
pop
dec
dec
pop
cld
ret
xor
mov
dec
test
cmpsb
lock
cmp
push
mov
mov
shrl
es
pop
test
xor
jp
std
and
rorb
out
cmpsb
fistps
or
lcall
ret
adc
aad
mov
inc
jecxz
insl
add
add
jg
add
bound
xchg
pop
imul
mov
mov
mov
out
or
sub
mov
pop
sti
xchg
pusha
mov
test
rcrb
jg
jl
and
sub
test
jmp
notb
push
or
int
cmpsl
ja
negl
out
add
andb
mov
push
call
push
inc
std
mov
cwtl
and
test
cmpsl
imul
pop
mov
lahf
xor
test
cmc
int
outsl
shlb
adc
aam
and
cli
sub
test
inc
and
jne
xchg
sub
js
xorb
rcrl
out
sbb
push
mov
push
xlat
movsb
push
sahf
cli
pusha
idivl
push
daa
lret
daa
mov
cmp
mov
mov
hlt
sbb
push
xchg
lea
clc
in
sbb
stos
inc
push
cmc
insb
jle
xchg
leave
pusha
iret
ja
mov
out
inc
pop
xor
add
sbb
xchg
pop
lcall
sub
daa
js
fdivl
xchg
sbb
ljmp
push
outsl
lret
insb
jmp
es
xchg
jmp
dec
fldenv
mov
xchg
pop
cld
out
and
cmp
jg
mov
push
or
cmp
cmp
push
push
test
in
fisubs
mov
loopne
outsb
jecxz
test
sub
mov
es
hlt
gs
pop
outsl
sti
xabort
clc
sbb
and
xchg
js
das
adc
inc
js
or
cmp
jp
lcall
mov
test
add
pop
hlt
pavgb
js
daa
cmp
aaa
dec
lahf
lds
cmp
or
jp
mov
add
and
je
rorb
jle
mov
stos
xchg
in
mov
or
in
inc
cmpsb
mov
jecxz
loop
cmp
ss
fisttpl
pushf
rol
out
ljmp
cmpsl
ret
icebp
lods
rcrb
mov
cwtl
mov
add
push
cmp
fidivs
mov
sbb
mov
dec
mov
inc
xchg
rol
and
rcrb
sub
dec
cmp
dec
jno
cmp
sbb
mov
push
jne
shrb
mov
int3
arpl
ja
mov
and
fprem
jmp
mov
push
add
cmp
into
movsb
push
test
ja
xor
leave
or
jle
mov
imul
pop
mov
out
ret
pop
adcb
push
test
or
or
out
dec
fstpl
inc
pop
jo
xchg
adc
mov
out
int3
pop
fs
mov
push
movsb
repnz
push
ljmp
scas
inc
pusha
jb
cmp
inc
inc
iret
sub
aas
jne
std
xchg
bound
mov
jno
xor
dec
in
fwait
andl
lcall
in
jecxz
fimuls
mov
jl
sub
fsts
add
pop
inc
and
rcrl
in
xor
mov
cs
add
insb
add
dec
int3
jo
cmp
adc
sub
out
inc
arpl
or
xchg
lods
clc
xchg
sahf
aad
cmpl
sub
in
les
in
sub
cmp
out
testl
and
pop
faddp
cld
idivl
and
fcmovu
lcall
scas
or
lahf
mov
dec
aad
out
sbb
call
or
je
pop
rclb
adc
test
dec
xchg
mov
dec
xor
xor
in
xor
push
ret
int3
dec
mov
sahf
mov
dec
outsb
aad
aam
inc
cmp
leave
pusha
lea
in
add
push
fwait
pop
inc
pop
or
add
cs
rcr
pushf
push
sub
movsl
add
and
sub
cmpb
dec
cmp
insl
inc
push
dec
sbb
mov
lea
into
enter
mov
jb
fnstsw
cmp
int
ret
sbb
insl
sub
push
jge
push
stos
pop
inc
pop
std
cld
stos
xor
inc
push
imul
pop
jno
arpl
and
sysret
aam
sub
mov
dec
fs
ret
js
daa
andl
add
mov
leave
int
pushf
ljmp
mov
pop
cwtl
inc
add
or
mov
in
lods
out
mov
cbtw
dec
mov
das
add
pop
or
cmp
push
jecxz
pop
ds
loope
cmc
pop
mov
das
inc
repnz
cmp
pop
int
addr16
sub
push
xchg
sbb
sbb
icebp
rol
std
movsl
or
or
es
fsubrs
inc
test
push
orb
scas
xor
xchg
scas
test
xlat
mov
lods
clc
lcall
and
cltd
sbb
lahf
cmp
mov
int
cmp
mov
enter
xchg
pop
cmp
cs
or
mov
movsb
dec
jl
icebp
push
out
xor
insl
sub
dec
fwait
cmpsb
adc
mov
clc
in
int
sbb
bound
gs
imul
dec
enter
or
push
cmp
fs
pop
add
cli
mov
jle
add
push
push
pop
inc
push
or
jnp
sbb
addr16
or
sbb
out
cmpsl
out
sub
dec
inc
stos
mov
pop
test
mov
mov
push
divb
mov
sarl
jnp
sahf
mov
dec
add
test
dec
outsb
cmp
jno
js
pop
cmpsb
dec
ds
push
shll
push
push
jno
arpl
fsubs
fcomi
popa
in
sbb
add
mov
fidivs
shrb
insb
sub
xorl
mov
hlt
dec
subl
pop
pop
adc
sub
sub
mov
mov
andl
call
jae
push
cltd
mov
push
fwait
stc
jmp
xchg
scas
in
xor
repnz
push
mov
fucomip
mov
cld
jnp
xchg
and
cli
pushf
int
sbb
gs
ljmp
aaa
lret
and
mov
imul
insl
jg
stc
rcl
jmp
mov
ret
fucomip
jnp
rol
or
or
pop
mov
clc
sahf
insl
and
mov
ret
push
aam
es
hlt
dec
dec
jno
lods
ljmp
pushf
cli
lret
pusha
jo
inc
outsl
clc
leave
adc
sti
push
inc
and
or
das
xchg
inc
sbb
es
sbb
loopne
arpl
hlt
inc
adc
icebp
sub
jno
sbb
jae
leave
fnstenv
sbb
jle
sbb
add
daa
enter
out
pop
testb
and
xlat
rcrl
and
xor
lods
outsb
sub
pop
outsb
add
xchg
jo
clc
stos
imul
jl
jae
sbb
lahf
push
jge
test
xor
sub
sbb
lods
js
and
lahf
shlb
mov
popa
xlat
push
mov
cmpb
inc
xlat
xchg
mov
xchg
outsl
mov
outsb
inc
mov
mov
rorb
pusha
testl
jle
push
jmp
jp
iret
push
ret
adc
movsl
add
and
mov
daa
sbb
cld
dec
dec
cmp
lods
mov
cmp
outsl
pop
jns
mov
pop
ds
ds
push
adc
insl
cs
cltd
ss
hlt
movsl
repnz
loope
xchg
je
jbe
in
xchg
scas
push
mov
movsl
mov
out
pcmpgtb
fisubl
or
mov
fwait
push
dec
lret
and
bound
cmpsl
data16
in
sbb
aas
out
pop
mov
jbe
ljmp
pop
ljmp
xor
push
notb
xchg
into
jne
js
imul
sahf
mov
pop
dec
mov
dec
or
sbb
arpl
sub
test
cmp
cwtl
jbe
mov
ljmp
inc
data16
pushf
lahf
sub
jbe
das
push
and
and
lock
sub
pop
outsb
nop
mov
push
fidivrl
popf
js
push
jb
and
nop
daa
mov
mov
xchg
sub
sarb
pusha
xor
stos
mov
out
es
pop
or
insl
jg
push
add
and
dec
jecxz
hlt
andb
pop
jbe
lret
stc
iret
sub
es
into
je
jg
lods
inc
sbbb
shl
fdivrl
fisttpl
rcrl
dec
flds
fbstp
popa
movsl
cmp
test
cmp
xchg
mov
imul
mov
bound
loop
mov
clc
or
pop
adc
int
cwtl
das
and
stos
popf
mov
xor
push
test
xchg
popa
les
in
scas
jle
loopne
cmpsl
ret
adc
shlb
mov
out
xchg
loope
fidivl
add
xchg
int3
sbb
sbb
lods
lahf
rcrb
sbb
pop
ficomps
and
test
sbb
and
mov
mov
mov
mov
fimuls
add
cmpsb
incl
and
int
or
in
sbb
jae
loop
mov
sbb
push
mov
cmpsb
mov
sub
pop
adc
out
mov
cwtl
scas
leave
fs
aaa
ss
cltd
setbe
mov
pmulhw
push
push
orb
add
and
pop
cmp
mov
dec
mov
jno
sub
xor
fldcw
out
ret
insb
aaa
mov
jmp
push
repnz
test
es
lods
data16
xor
in
push
push
fiaddl
mov
loopne
in
into
mov
lds
pop
lds
daa
jnp
loope
sbb
inc
out
jge
dec
jecxz
popf
mov
mov
add
int3
dec
and
sub
or
pushf
cld
je
and
adc
ds
outsl
mov
push
out
rcrb
and
mov
outsl
daa
jge
push
inc
xor
bound
pushf
ds
inc
jno
pop
adc
ret
jmp
lea
jge
ljmp
sbb
cmpsl
mov
repnz
test
inc
fwait
sbb
jnp
lods
fwait
lods
sub
repnz
and
outsl
shrl
and
xor
cmp
sbb
adc
icebp
in
frstor
inc
lds
mov
insl
fistpll
sbbl
ja
cmp
mov
enter
sbb
mov
inc
mov
adc
sub
adc
test
mov
mov
xchg
ret
inc
or
inc
hlt
pop
lahf
adc
inc
push
or
cltd
push
cmc
mov
pusha
jl
test
sub
cmp
popa
sub
shr
mov
mov
dec
dec
icebp
dec
int
outsl
mov
imul
sbb
mov
xchg
es
cmpsl
mov
test
inc
fidivrs
push
add
ja
ror
imul
inc
mov
shlb
add
pop
push
das
rclb
imul
pushl
inc
shr
sti
mov
out
je
fcoml
mov
sbb
iret
push
in
dec
push
sub
hlt
cmp
test
repnz
outsl
cltd
mov
mov
push
adc
fstps
pop
xchg
push
jae
xor
cmp
adc
inc
push
testb
cwtl
inc
lock
out
cmp
ss
inc
out
test
sahf
jns
movsl
add
mov
out
jbe
ljmp
adc
mov
mov
mov
fisttpll
lods
ss
pop
cmc
push
dec
push
inc
js
jl
or
jg
xchg
and
dec
cmc
cmp
in
inc
push
je
loopne
xchg
jb
ss
mov
icebp
inc
ficompl
ret
call
dec
test
pop
mov
sub
outsl
movsb
addb
mov
stos
outsb
bound
mov
inc
aad
dec
mov
mov
subb
unpcklps
xchg
idivb
adc
movsl
bts
in
adc
xor
nop
es
fidivs
jae
mov
or
mov
into
push
lods
in
inc
inc
in
xor
fs
add
or
adc
pushf
das
outsl
cmp
cmp
lds
dec
cmc
sbb
push
pop
or
call
loopne
mov
test
adc
cmp
shll
pusha
jmp
mov
repz
xchg
mov
add
xchg
mov
and
outsl
jnp
arpl
movsb
cmp
les
jp
fistpl
adc
push
mov
test
mov
jo
test
xor
dec
dec
jmp
fwait
aad
aas
notb
jno
or
ret
sub
call
lea
shl
ss
inc
mov
xchg
sbb
xchg
inc
pop
test
pop
adc
aad
sub
jle
cltd
pushf
dec
cmp
mov
cwtl
shlb
ret
out
clc
mov
sbb
sbb
add
adc
mov
imul
cwtl
jp
cltd
sub
adc
jne
add
jbe
and
pop
xchg
push
and
pop
icebp
mov
adc
lock
sub
mov
clc
add
fcomip
es
cli
iret
dec
dec
mov
mov
outsl
mov
jg
inc
cmp
dec
push
les
sub
xorb
dec
dec
out
lea
stc
out
loope
cmpsl
daa
inc
in
enter
pop
inc
mov
mov
sti
rolb
sub
xlat
jle
mov
and
adc
sti
jbe
jmp
lds
ss
inc
out
aas
mov
test
andl
popa
enter
jbe
ror
jae
adc
push
adc
sbb
mov
jae
test
xorb
cmp
inc
xchg
jae
out
push
nop
icebp
jae
insl
jmp
dec
in
adc
icebp
addr16
push
sub
out
jae
pop
cmp
jecxz
dec
sbb
or
xchg
mov
push
js
addr16
test
cmpsl
js
test
sbb
and
shl
inc
fdivs
add
rcrl
push
fiaddl
pop
repnz
hlt
and
jl
test
out
xor
push
mov
arpl
faddl
aad
imul
rolb
xchg
not
sbb
aaa
imul
xor
ljmp
iret
cld
mov
lret
xor
test
mov
mov
sbb
mov
loope
fidivs
scas
cmpl
jno
push
xchg
sub
cmpsl
xor
movsb
notb
mov
in
mov
fmuls
cmp
pop
or
xchg
gs
sbb
mov
out
xor
sub
aam
jne
dec
jle
sbb
lods
push
repnz
push
adc
int
je
aam
ret
xchg
repnz
movsb
push
repnz
push
lock
fs
repnz
leave
xor
int3
mov
mov
add
xchg
mov
sbb
sahf
lea
adc
sahf
cmp
sbb
rorl
xchg
cltd
cmpsl
shll
xchg
xor
push
fldt
mov
adc
adc
fisttps
cmpsl
mov
imul
loop
cld
cwtl
adc
imul
fidivrs
addr16
jl
mov
ret
adc
lock
push
dec
fnstcw
addl
sub
push
pop
or
es
xlat
outsl
mov
adc
popa
sub
push
lahf
or
scas
mov
xor
cli
mov
fldcw
push
jb
int3
lret
inc
out
cwtl
pop
xlat
inc
xchg
sbb
call
push
out
mov
dec
lock
add
in
dec
pop
rcr
jbe
les
mov
xchg
inc
xlat
adc
neg
jbe
pop
arpl
hlt
in
aam
adc
mov
mov
fldcw
cmp
xchg
ja
adc
iret
js
repz
inc
fidivl
jb
add
xchg
stc
nop
leave
push
inc
adc
popa
mov
mov
leave
adc
insl
jbe
stos
dec
hlt
stc
hlt
mov
mov
push
cmpl
mov
cwtl
xchg
jne
shlb
in
fwait
cmpsl
cmpsl
dec
jecxz
or
mov
pop
adc
pusha
sbb
and
mov
dec
clc
js
adc
mov
fnstcw
rorl
leave
int3
sbb
into
jae
sbb
mov
std
push
jmp
dec
mov
adcb
mov
ja
icebp
aam
push
mov
jl
insl
lods
xchg
imulb
loopne
xchg
lahf
push
dec
lret
inc
test
insb
movsl
in
xchg
pop
adc
outsb
aad
jns
or
inc
push
sbb
in
nop
mov
xchg
push
add
test
xlat
adc
out
cmp
xlat
mov
sub
bswap
add
sarl
sub
mov
push
popf
iret
lods
add
out
les
out
psllw
daa
add
fldl
xlat
jmp
ja
icebp
das
mov
xor
xchg
or
cmp
ret
in
mov
out
pop
fsubrl
mov
cmp
mov
loopne
xchg
dec
scas
roll
ret
in
pop
or
data16
xchg
push
push
outsl
aam
inc
push
out
filds
or
xor
jp
in
fwait
cltd
mov
mov
jle
dec
lock
in
testb
scas
nop
push
fwait
adc
jno
iret
sub
sbb
arpl
aam
dec
inc
push
jle
movsl
and
xchg
or
jae
into
cmp
sbb
cld
dec
fs
rorb
pushf
mov
jl
lods
dec
push
inc
loop
add
push
push
je
or
movsb
icebp
or
and
pop
out
mov
in
jbe
dec
nop
jno
ret
push
lret
in
dec
ret
gs
mov
push
push
fiadds
mov
add
lods
mov
icebp
mov
mov
montmul
cmpsb
les
in
test
imul
icebp
fldl
hlt
lds
pop
scas
arpl
jge
push
das
add
mov
test
ja
mov
cwtl
jns
addb
sbb
dec
jle
das
mov
loop
mov
fimuls
in
pop
sub
xor
pusha
int
mov
push
jle
scas
mov
fistpll
sub
lahf
mov
push
mov
std
cltd
mov
pop
arpl
cmp
or
aam
ljmp
call
icebp
mov
lods
cmp
stos
outsb
jle
ljmp
cld
cmpsb
or
sbbl
into
loope
shrl
mov
cs
adc
mov
dec
sbb
mov
lods
inc
pop
hlt
lea
pusha
lret
test
shrb
daa
xor
rol
sub
jne
call
dec
mov
add
push
adc
inc
ja
int3
test
mov
sub
popf
mov
jns
dec
pop
inc
dec
mov
jg
mov
xchg
cmp
call
or
or
push
dec
push
jae
sub
es
push
mov
data16
and
mov
or
sub
add
sub
jmp
mov
fwait
xor
cs
mov
and
jmp
sub
decb
repnz
repnz
call
or
dec
mov
mull
and
shr
cmp
mov
jno
fdivrs
dec
test
mov
pop
hlt
mov
push
push
lods
ret
xor
bound
into
loope
fwait
jmp
pop
xchg
or
ret
fistps
test
in
xchg
dec
repz
pop
cmp
push
or
cmp
jge
cmp
mov
mov
or
rolb
scas
pop
jnp
stc
sub
pop
fwait
shll
cli
cli
adc
add
xor
lock
fcmovne
pop
lret
movsl
loopne
sub
mov
xchg
dec
mov
sbb
mov
ss
push
dec
and
mov
mov
scas
js
das
sub
loop
xchg
stc
adc
inc
adc
inc
mov
or
mov
andb
inc
sbb
rolb
outsl
jns
arpl
mov
pop
mov
filds
imul
int3
push
jle
cmp
push
dec
flds
add
add
fcomip
dec
sbb
fildll
aaa
push
out
push
sbb
add
jmp
jge
xor
pushf
sbb
and
out
mov
mov
push
or
int3
mov
fistl
xchg
cmp
jle
mov
xor
inc
xchg
int3
push
enter
data16
cmp
push
and
and
mov
sbb
xor
jns,pn
and
cs
sub
sub
dec
add
psadbw
push
call
xchg
out
icebp
inc
mov
scas
adc
jbe
xchg
jl
dec
inc
std
xor
cmp
inc
adc
sbb
in
cmp
cmp
test
mov
jge
pop
cmp
movsb
insl
ss
outsl
lret
jp
cmp
pop
outsl
push
pusha
clc
mov
jne
loopne
pop
inc
aas
pop
testl
xor
pop
fsubrs
adc
inc
pop
je
jb
and
mov
lock
inc
lods
and
push
lahf
inc
mov
push
cmc
sbb
xor
and
fidivrl
ljmp
inc
bound
ss
shrl
lahf
adc
sti
pop
icebp
xor
and
loop
aam
dec
shl
outsl
mov
inc
popa
int
adc
inc
xor
jb
inc
fldenv
stc
enter
outsb
sahf
or
lds
int3
cmp
cmc
dec
mov
xlat
push
jle
or
in
sti
sbb
jns,pt
pop
add
insb
hlt
xchg
xchg
into
inc
out
sub
and
bound
xor
cmc
xchg
incb
xor
inc
xor
push
fst
hlt
loop
lret
scas
sub
push
popf
dec
test
cld
jnp
sub
add
add
push
xor
cmp
fnsave
ficoms
mov
sub
into
inc
cwtl
stos
repnz
inc
jnp
aaa
fldenv
push
les
out
and
jmp
sbb
or
stos
inc
roll
pusha
adc
ret
mov
cmc
rol
lods
xchg
fsubrl
jae
pop
inc
popf
xchg
cwtl
mov
ret
pop
mov
stc
mov
stc
ds
sbb
mov
pop
imul
sub
int3
stos
mov
pop
popf
pushl
mov
addl
ja
push
jb
push
push
in
in
mov
xlat
rcrl
add
mov
push
pop
fmull
mov
scas
rolb
push
jle
jae
and
lock
xor
adc
mov
fnsetpm(287
jnp
mov
add
lods
andb
cmp
loop
lret
pop
jg
shr
mov
mov
xchg
ljmp
jnp
fdivl
dec
cmpsb
testl
test
scas
ret
scas
outsb
jb
out
inc
xchg
add
or
dec
mov
inc
cmpsl
fmull
in
pmullw
loopne
sar
lcall
enter
sub
or
pop
or
mov
fdiv
add
lods
cmp
sub
orl
lods
mov
push
ja
lods
inc
xor
inc
call
push
sub
andl
mov
sbb
out
sarb
mov
lock
cmpsb
inc
arpl
stc
lret
aad
pop
ficoms
filds
bound
and
jno
mov
roll
push
ds
addb
and
push
mov
aad
pop
cmc
pop
pop
mov
push
sub
scas
imul
jp
rorl
test
xlat
lds
mov
stos
sahf
ficompl
repz
xchg
pusha
push
pop
jb
int
cmpsl
xor
sbb
mov
mov
les
sub
cmp
adc
ret
push
pop
imul
icebp
fwait
je
sbb
jmp
jmp
test
or
pop
and
shll
push
lds
in
repz
adc
daa
inc
add
or
in
mov
cmp
stos
cmp
pop
mov
inc
dec
data16
adcb
ja
sbb
xchg
dec
out
faddp
pop
fcomip
mov
divps
push
in
and
xchg
sub
mov
mov
push
repz
sbb
jl
or
lret
push
ret
enter
pop
loop
xchg
xchg
dec
clc
adc
push
lds
aas
mov
push
push
inc
es
dec
fildl
stos
fidivrl
cltd
jecxz
mov
adc
xchg
mov
adc
nop
xchg
hlt
ds
es
dec
cltd
push
aaa
push
nop
adc
sub
mov
inc
dec
lcall
or
cmp
movsl
pop
leave
rclb
sahf
cmpsl
push
and
pop
push
rolb
popf
add
out
mov
xor
outsb
gs
shll
cli
jecxz
xor
call
iret
sbb
adc
ja
push
in
jmp
subb
movsb
cmpsl
push
dec
cs
je
in
xchg
cmp
je
cmp
bound
pop
rorl
sub
les
xor
scas
xchg
jb
nop
popa
lock
jmp
cwtl
lods
rorb
js
sub
dec
loopne
sbb
addr16
fsubp
push
adc
or
sub
jp
or
push
pop
rcll
jb
mov
mov
adc
mov
add
sahf
xlat
addr16
adc
push
test
xor
mull
jbe
xor
ss
mov
mov
popa
fwait
jbe
mov
xor
stc
and
imul
pop
mov
mov
add
into
in
loope
testl
add
or
das
cmp
lock
rcrl
xchg
mov
call
inc
cmp
cmp
sbb
xchg
lret
pop
dec
xor
xchg
lods
idiv
aam
push
jne
mov
fldenv
out
insb
sub
xor
out
outsb
jl
mov
rcrl
pop
fwait
pusha
add
mov
test
leave
mov
sbb
daa
rcll
stos
push
icebp
aaa
cmpsb
pop
in
ficompl
cmp
or
jbe
xor
arpl
sbb
pusha
js
les
incl
push
movsb
popf
aas
ljmp
mov
xchg
or
sub
mov
pop
push
decb
adc
mov
pop
aaa
mov
sarb
hlt
jecxz
es
leave
add
mov
popf
push
push
or
pop
lea
mov
pop
or
dec
or
push
out
ljmp
icebp
mov
and
cmc
cmp
iret
test
xchg
aas
addr16
clc
dec
cmpsb
movsb
ja
xchg
push
scas
or
jp
mov
in
xchg
push
decl
mov
sbb
ljmp
in
scas
shrl
jno
lods
shrb
ret
sub
insb
notb
cmp
inc
mov
outsl
data16
xor
in
inc
imul
out
sahf
add
and
or
jg
push
dec
dec
arpl
call
sub
jne
xchg
jp
xchg
pop
popf
or
data16
lahf
xor
inc
je
jbe
jp
mov
cmpsb
push
addr16
jecxz
mov
js
pop
adc
jg
std
cltd
repnz
into
arpl
xor
into
adc
jb
ror
sub
xchg
add
push
jne
cwtl
pop
sti
and
xor
mov
subl
repnz
cmp
in
bound
pop
fiaddl
add
loop
jp
arpl
lods
xchg
cs
shr
cs
inc
in
dec
cwtl
das
jle
repz
xor
imul
lret
pop
jno
pop
push
hlt
push
fstl
xchg
outsl
lods
mov
loope
ss
push
mov
jmp
jbe
shll
stc
xlat
daa
jo
shlb
aaa
push
aam
mov
or
mov
push
insb
push
or
pop
pusha
clc
adc
iret
jecxz
xor
outsb
cmp
dec
mov
test
imul
repnz
sub
int3
cmp
call
outsl
repnz
insb
incl
sbb
xchg
jle
stos
in
jbe
pop
adc
in
bnd
out
xchg
pop
rorl
jbe
shl
jge
mov
push
adc
pop
icebp
out
add
xchg
rolb
testb
push
and
fs
roll
shl
mov
lods
testb
shlb
ljmp
ja
and
mov
imul
cli
jl
xor
push
jmp
imul
or
and
int3
nop
loopne
ret
test
out
aas
dec
faddp
je
testl
inc
insb
fbstp
cmpsb
cld
outsl
sub
std
mov
test
jb
mov
popf
addr16
out
sti
jg
es
mov
mov
das
mov
outsl
aam
out
cmpsb
outsb
ds
push
and
mov
or
iret
add
xchg
xor
stos
dec
pop
icebp
mov
mov
stos
push
mov
xchg
and
test
dec
push
cltd
cmp
cltd
pop
lret
mov
lret
outsb
pop
popf
scas
mov
out
je
mov
or
inc
cmp
sbb
xchg
mov
pop
jno
push
jno
sub
in
stos
pop
out
fnstenv
add
cli
jbe
movsb
xchg
or
ret
sub
orb
flds
push
fisubs
pop
scas
mov
add
fsubs
pop
xchg
sub
mov
cmpl
aam
fisttps
and
sahf
addr16
lds
add
mov
jo
movsb
std
subb
add
jg
imul
and
jecxz
stos
xchg
les
jle
xor
or
insb
and
mov
sbb
pop
shll
add
pop
lock
lods
test
push
and
aas
xchg
sub
je
movsb
xor
fbld
scas
cmpl
imulb
mov
int
bound
je
test
movsl
pushf
sub
repz
xchg
daa
push
jo
mov
xchg
dec
shrl
sub
addb
sbb
sub
xchg
push
loopne
jbe
xchg
stos
out
in
loop
mov
and
ficompl
cmp
xchg
jp
push
xor
cmp
adc
pop
dec
and
inc
push
outsb
das
rcrb
shr
inc
xor
cmp
dec
outsl
movsb
lods
cs
in
mov
testl
cs
clc
and
sub
push
inc
nop
orl
sbb
cmp
mov
jecxz
jg
outsb
cmp
push
push
jg
ljmp
jae
xor
inc
cld
mov
xchg
scas
xor
sarl
or
inc
je
lea
mov
sbb
outsl
fmull
sbb
xlat
jecxz
sbb
push
jnp
inc
push
cmpb
mov
loopne
out
rclb
jl
or
lcall
ret
jo
mov
mov
outsb
dec
and
adc
sub
hlt
mov
push
or
or
std
stc
dec
xchg
ds
outsl
jnp
pop
popf
testb
mov
push
jns
pop
mov
int
sub
sarb
mov
cltd
xchg
mov
mov
or
lret
jb
mov
mov
jmp
push
push
and
push
or
call
xorb
jge
aam
jo
mov
cs
or
cltd
movsl
cmp
mov
cmp
fldlg2
decb
sbb
insl
mov
mov
int
cmp
jne
adc
leave
aaa
sub
rcrb
mov
push
lods
xor
xor
aam
hlt
inc
leave
and
aas
push
mov
test
fnstenv
sti
cmp
pop
push
addl
cmp
mov
xchg
add
jl
scas
movsb
cmp
sarb
push
lea
lea
cwtl
aaa
lret
bound
mov
pop
and
out
ljmp
sbb
push
pushf
jle
lcall
pop
fdivl
mov
sbb
mov
filds
fistpl
jg
cmp
jb
lods
pushf
mov
mov
push
dec
fildl
test
adc
stos
xor
mov
lret
int
push
jo
jne
mov
adc
xorl
xor
test
shlb
add
cs
cmp
insl
subb
push
mov
fisubs
call
and
hlt
pop
call
xlat
and
push
dec
push
movsb
mov
ret
adc
imulb
iret
jno
push
fwait
hlt
mov
iret
addr16
mov
xorl
enter
add
enter
sbb
subl
cli
sbb
in
xchg
ret
dec
lahf
push
cmp
loope
rorb
dec
inc
push
shll
aas
xor
jno
testl
push
icebp
cld
mov
sub
and
lds
notb
loope
jecxz
dec
mov
add
xchg
cmp
js
jno
mov
cmpsl
enter
iret
bound
mov
cmpsl
pop
sti
shl
jecxz
mov
sbb
xchg
sub
sub
cmp
pop
cmp
mov
pop
out
bound
int
sbb
ja
mov
ret
hlt
pop
mov
sbb
stos
add
arpl
xchg
mov
test
sub
push
in
sahf
or
push
xchg
mov
inc
jno
mov
out
mov
adc
mov
inc
enter
ret
fistpll
sbb
or
rclb
addr16
dec
jecxz
or
cltd
push
mov
mov
iret
rcrb
pushf
and
cmc
stos
sbb
cli
bound
cmp
xchg
sbb
mov
fldenv
dec
bound
lods
mov
sbb
push
out
lds
pop
jno
jmp
repz
dec
sbb
jns
adc
mov
shrb
sbb
cmp
ds
cwtl
daa
xor
ss
jl
mov
push
dec
lock
jne
cltd
lea
aaa
lret
xchg
xor
lds
cld
xor
jmp
xorl
adc
out
fnstenv
jae
hlt
xchg
jae
stos
inc
inc
mov
jl
aam
and
iret
out
test
stc
xor
sub
arpl
pop
das
lds
mov
movsl
lcall
andl
lods
and
call
adc
pusha
lock
jle
push
push
imul
push
adc
ss
add
ljmp
imul
push
xor
stos
push
mull
jbe
add
sub
inc
xchg
lock
xor
add
push
ret
aaa
fwait
adc
repz
imul
cs
mov
shrl
aad
in
push
fnstenv
sub
adc
out
lret
cwtl
clc
stos
or
adc
pop
pushf
and
jmp
jb
sbbl
popa
pop
and
js
mov
jecxz
xsha1
cmpsb
dec
adc
pop
jne
sub
xor
jmp
lock
dec
test
lods
sahf
filds
lods
gs
pop
stos
mov
fwait
push
fs
mov
outsl
add
rorb
in
mov
ja
data16
cwtl
fcomi
enter
ljmp
jp
inc
push
je
add
shlb
in
fldenv
pushl
aad
flds
test
aas
pop
sar
or
xor
addr16
bound
dec
jne
jl
stc
dec
int3
shlb
jo
out
push
popf
clc
push
inc
iret
xor
lcall
jmp
addr16
mov
ja
sub
and
sar
in
lods
mov
xchg
xchg
outsb
mov
jmp
mov
stos
xchg
sub
cmp
cmpsl
out
loope
push
add
mov
out
outsl
push
fcoms
mov
xor
jl
leave
cmp
and
push
mov
aas
shrl
in
daa
out
xor
idivb
aad
int
lds
outsb
add
test
inc
dec
mov
clc
lock
fsubl
sbb
lret
and
jmp
sahf
sbb
aaa
xchg
out
rorl
inc
or
fsubrs
out
xchg
inc
mov
loop
rolb
ds
mov
jno
test
jno
into
push
pop
jns
clc
xchg
lcall
xor
rcrb
pop
inc
fmuls
dec
mov
je
inc
ds
cmp
dec
and
int
mov
cmp
in
cwtl
imul
jl
pop
cmp
out
or
jle
scas
jecxz
scas
cli
xor
jmp
pushf
out
cmp
stc
std
icebp
test
xchg
inc
mov
dec
inc
data16
sahf
sbb
push
rcrb
dec
dec
sub
aam
add
adc
mov
sbb
xchg
jecxz
test
cmp
push
pop
movsl
notb
xlat
jnp
lods
and
in
lret
test
cmp
pop
mov
ret
in
repnz
ds
xor
push
mov
add
ds
int
mov
cltd
cmpsb
mov
xor
in
xchg
pop
ret
mov
out
mov
cmp
dec
inc
jbe
loopne
aas
pop
sub
hlt
jns,pn
dec
push
ror
mov
lret
into
mov
ds
add
sbb
sti
pop
add
jbe
mov
or
cld
pop
rcr
sbb
mov
loopne
mov
push
sti
fdivl
scas
jl
mov
loope
test
mov
lcall
sub
adc
mov
push
sub
mov
stos
inc
sub
xor
or
in
or
sbb
scas
pusha
xorl
ret
icebp
aam
adc
push
push
lahf
stos
lock
iret
xchg
daa
add
repz
sbb
aaa
pusha
add
dec
arpl
stos
pushf
pop
out
test
loopne
mov
int3
dec
cmp
roll
scas
dec
jns
jecxz
test
mov
jne
mov
fcoms
mov
aas
xchg
add
out
out
inc
adc
mov
mov
mov
mov
jg
ja
aam
pop
shll
cld
mov
adc
and
adc
lret
imulb
shlb
imul
inc
or
pushf
mov
pop
dec
sbb
dec
xchg
adc
add
shr
mov
add
out
ds
cmpsl
sbb
push
fdivp
jmp
dec
jbe
xor
loope
and
les
push
test
movsb
or
pusha
lcall
sub
test
mov
push
shlb
cmp
pop
jo
das
add
shrl
inc
dec
clc
sub
imul
pop
rorl
inc
push
push
adc
call
roll
mov
push
jge
xchg
sahf
xor
ds
inc
lcall
cmp
mov
or
mov
adc
or
mov
pop
sbb
inc
idivb
sarl
in
dec
repz
repz
xor
pop
jbe
and
cmp
add
xchg
fnsave
jns
jge
enter
por
lret
cld
enter
lcall
mov
imul
out
je
xchg
mov
push
insl
cmp
mov
and
push
pushf
pushf
es
imull
lods
jne
cmp
inc
fistpll
push
xchg
fists
push
fwait
cmpsb
ljmp
int3
hlt
bound
shrl
push
xor
aam
decb
fisubrl
inc
mov
fwait
iret
dec
xchg
imul
gs
inc
iret
xor
jmp
inc
adc
push
jp
dec
lods
hlt
aas
sbb
sbb
xor
xchg
sub
lea
test
fcmovnu
gs
dec
sbb
xor
cmp
iret
push
iret
mov
jle
and
jp
adc
lds
in
push
lret
or
jne
movsl
pop
testb
add
addr16
push
mov
cmovb
jle
shll
push
out
mov
js
xchg
dec
lods
xchg
cmp
and
inc
pop
lock
push
sub
leave
cmc
int3
jge
and
xchg
fwait
aas
push
xchg
mov
std
subl
add
lret
xchg
sahf
bound
xchg
mov
ja
bound
and
aaa
xchg
lods
adc
cmp
hlt
pop
push
cmp
pcmpeqb
mov
jmp
jp
pop
dec
xchg
cmp
cwtl
stos
and
jg
inc
ret
clc
int3
or
adc
leave
bound
mov
push
pxor
xchg
push
ret
fists
dec
shrl
mov
mov
xor
in
adc
in
xchg
pop
fnstenv
mov
xchg
in
into
cmpsl
fs
clc
ss
movsb
xor
mov
pop
adc
inc
mov
orl
andb
clc
cmc
adc
cmp
push
sbb
mov
xchg
out
add
sbb
cltd
xor
shlb
testb
inc
fidivl
mov
pop
in
xchg
pop
jb
lret
pop
insl
repz
enter
cmp
mov
push
lods
cmp
aas
add
fmul
jo
je
les
outsl
mov
shl
mov
test
sub
pop
mov
aad
and
cmp
mov
sbb
add
mov
prefetchnta
xchg
scas
jo
and
jb
into
sub
xchg
sbb
aam
xchg
mov
aas
and
push
movsl
incl
je
inc
ss
mov
ret
pop
xchg
push
imull
pop
xchg
stos
push
adc
cli
mov
mov
dec
out
out
xchg
jo
hlt
int3
inc
or
cltd
pop
and
mov
shl
inc
aam
fwait
mov
loop
cmpsl
and
jnp
mov
repnz
js
xchg
cmc
imul
dec
push
ret
mov
sahf
fldcw
cmp
mov
fists
inc
jp
jp
adc
cmp
pusha
pop
add
dec
adc
stos
cmp
clc
pop
sub
lret
push
lods
cld
mov
pusha
jp
and
and
lret
mov
shlb
jns
notl
adc
or
dec
jge
sbb
pop
inc
dec
pop
jb
jp
fadds
dec
pop
sbb
movsl
in
push
cltd
inc
pusha
je
sbb
pop
fcmove
mov
add
scas
fwait
jae
sub
jbe
mov
adc
fidivs
stc
lds
nop
adc
mov
push
cmp
imul
es
movsb
dec
adc
jno
sub
jmp
inc
push
mov
into
call
in
add
mov
push
mov
mov
sub
lods
xchg
mov
xchg
push
sub
jmp
sbb
add
jne
push
lods
adc
icebp
mov
cmpsb
es
aas
pop
xlat
imul
jns
in
mov
sub
imul
jg
pop
add
push
repnz
fadd
test
xchg
push
and
ss
jb
sub
lds
out
out
xor
out
sub
jge
jnp
out
pop
sbb
movsl
lock
jmp
jmp
mov
pop
pop
push
cli
mov
jnp
cld
jbe
jecxz
out
movsl
dec
inc
or
sbb
sbb
inc
inc
pop
lock
std
and
cmpsl
ljmp
pop
loopne
mov
jmp
dec
adc
test
push
xchg
rorb
mov
cmpsb
aam
push
dec
sbb
pushf
pop
mov
jo
stc
sbb
lods
and
push
out
jno
adc
dec
outsb
add
inc
fisttpl
xchg
ds
bound
out
test
push
adc
nop
ret
pop
out
insl
adc
jno
mov
cmc
inc
mov
cli
ljmp
or
inc
fdivrl
mov
popf
cs
mov
xor
adc
fld
fsts
call
jbe
mov
pop
push
mov
loop
call
test
dec
call
xor
lock
js
or
mov
test
shll
inc
arpl
xchg
push
imul
push
push
out
in
scas
aas
pop
sqrtps
inc
jle
push
mov
rcr
jno
fcmovnbe
test
popf
xor
leave
pop
cmc
repnz
push
add
inc
push
push
inc
lds
xor
lea
scas
rolb
fldcw
or
add
pop
sbb
stc
push
leave
stos
mov
pushf
insl
cld
adcl
into
leave
sbb
xchg
dec
add
push
fisttpl
adc
sbb
stos
cmpsb
cmc
das
mov
test
mov
fwait
jg
jno
mov
push
fildll
dec
stos
inc
xorb
mov
addl
mov
sbb
push
sub
jb
int3
jae
xlat
in
lock
das
dec
dec
fwait
push
js
jne
test
sub
xchg
and
outsb
lahf
lods
xor
or
cwtl
imul
and
aas
cmp
xchg
lea
push
mov
cld
push
insb
scas
add
push
test
imul
int
add
push
lods
aaa
pusha
popf
xchg
dec
nop
mov
es
out
xor
push
outsl
sub
inc
mov
jno
push
dec
jecxz
js
dec
test
dec
jo
adc
jnp
aad
ret
repnz
lcall
rcrb
insl
and
inc
mov
dec
dec
int
adc
adc
push
ljmp
mov
fucomi
test
fbld
cli
sbb
mov
test
mov
add
add
movzwl
push
outsb
xor
stc
push
inc
loop
fwait
push
fxch
mov
mov
popf
and
stc
add
xor
loopne
adc
mov
xchg
out
cs
out
into
adc
mov
mov
dec
repz
inc
cmp
pop
xchg
sub
sub
stos
push
testb
jbe,pt
jo
jns
cs
xlat
jmp
xchg
xchg
pop
dec
or
nop
dec
inc
mov
hlt
mov
outsb
inc
and
xchg
ljmp
insb
dec
shll
fiaddl
ja
and
pop
les
imul
lret
sbb
cmp
jp
shr
push
in
xchg
adc
mov
jae
jle
andl
or
mov
inc
ss
pop
pusha
rcrb
imul
insl
mov
lods
dec
dec
addl
or
enter
mov
pusha
push
sbb
cmp
insl
xor
adc
pop
xchg
jb
jmp
mov
mov
jb
shrb
jb
push
rcll
out
add
xor
jo
sbb
sbb
xchg
sub
stos
std
sub
das
inc
lods
mov
dec
push
push
xchg
cmpsl
dec
loopne
add
data16
scas
jmp
sbb
out
js
jne
pusha
mov
pop
es
adc
cmpsl
mov
jne
pop
xchg
cs
addb
mov
mov
fcoms
adc
push
pcmpgtw
sbb
lret
jl
add
xor
movsb
xchg
mul
imul
aam
cmp
xchg
inc
leave
push
js
cmovb
in
aam
pop
xlat
js
sahf
push
mov
mov
imul
push
mov
mov
mov
mov
and
xor
xchg
xor
mov
jl
mov
add
out
add
xorb
push
divl
pop
push
inc
iret
ss
sbb
adc
mov
loop
xor
mov
mov
jmp
iret
xor
add
lcall
out
xor
ljmp
add
ret
jp
pop
xor
push
add
inc
loopne
out
sub
jbe
inc
int
sub
mov
mov
inc
aas
add
mov
pop
jl
stc
xlat
add
ret
rorb
pcmpgtw
push
test
mov
movsl
imul
mov
iret
pop
xor
fstpl
in
repnz
sub
rcrb
push
repnz
mov
out
shll
sub
mov
popf
mov
scas
jne
loope
mov
mov
sub
ljmp
outsl
es
mov
test
nop
ret
jg
stos
scas
mov
test
test
test
loopne
mov
icebp
lock
subl
adc
sub
iret
cmpsb
fisttpll
jecxz
cmp
icebp
mov
and
cwtl
mov
cmp
fcomps
cmpsl
cli
sbb
lods
push
rcr
rcrb
je
xor
fldcw
mov
gs
loope
dec
fidivrs
cmpsb
fbstp
dec
lahf
push
mov
dec
out
stc
mov
mov
imul
in
hlt
add
mov
xchg
clc
sbbb
mov
fdivs
push
push
lds
mov
add
dec
pusha
push
sbbb
lahf
aas
sub
dec
push
stos
cmc
sbb
xor
pop
jmp
icebp
vpsubusw
sub
push
ss
dec
int
jne
arpl
aas
bound
sbb
push
sub
test
add
stc
xchg
pushf
push
adc
sbb
out
out
and
dec
cmp
shlb
cmpsb
or
and
andb
pop
or
call
mov
jmp
imul
mov
test
aad
adc
test
cli
xchg
xlat
leave
dec
loopne
je
cmp
lods
addr16
fimuls
mov
mov
dec
daa
cmp
inc
roll
mov
pop
mov
idivl
add
adc
and
dec
out
pop
pop
stos
lds
inc
out
ljmp
cmpsb
sbb
push
xchg
sbb
or
xlat
jne
mov
arpl
sbb
and
call
fstpt
sbb
add
add
test
xchg
addr16
mov
sbb
insl
xchg
jae
mov
and
inc
sbb
lret
cmpsb
dec
in
ljmp
jno
cmpsl
out
lock
ljmp
cs
jge
lods
xchg
cmc
cmp
push
lret
sub
inc
mov
xor
jns
push
pop
mov
in
fistpll
lret
cmp
addr16
tzmsk
adc
out
mov
lret
jne
mov
xchg
gs
adc
or
enter
xchg
ficomps
jl
cmpsb
cmp
mov
in
jecxz
xchg
scas
in
loope
mov
mov
cld
xor
mov
inc
adc
pop
push
adc
icebp
fisttpl
es
insl
cmpsb
icebp
push
push
stos
loop
rolb
lds
icebp
mov
loopne
push
sbb
rolb
jns
push
addr16
pop
push
loop
cmc
add
popa
cmc
pop
clc
enter
popa
sbb
jecxz
mov
lea
stos
lcall
icebp
adc
xchg
pusha
push
jb
push
mov
fdivl
xchg
pushf
lods
fsubr
jns
sbb
jnp
xor
pushf
cmp
xchg
and
cmp
cmc
nop
mov
push
lret
data16
jl
fidivl
rcl
mov
cmp
insl
mov
sbb
das
movb
jp
aam
push
jge
cmc
popf
in
js
jno
or
cmp
in
mov
push
pop
ss
fistps
ds
outsb
xchg
cmpl
xlat
lods
movsl
test
xchg
push
or
xorb
std
xchg
mov
adcl
jnp
sbb
mov
add
rcrb
imul
insl
fisttpll
sub
nop
inc
mov
cli
repnz
lds
cmp
push
cmpsl
mov
jle
mov
out
inc
add
dec
mov
or
jle
sbb
pop
mov
outsb
fnstsw
xchg
jne
jg
shrl
jl
push
or
rcl
xchg
mov
xor
mov
cmpsb
jl
aaa
lret
xor
inc
dec
push
inc
xor
mov
testb
mov
jp
in
mov
push
xor
pop
mov
lods
mov
mov
jg
iret
imul
cmp
test
je
mov
subb
inc
push
je
inc
mov
xor
test
push
shrl
push
mov
cwtl
xchg
mov
cmc
jge
or
cmpsb
sub
pop
add
cmp
pop
cmpsl
fldl
fidivrl
cmp
xchg
int3
aaa
or
stos
cld
xchg
aam
push
lods
push
aad
jb
push
push
loope
test
int
mov
loope
mov
pop
adc
pushf
adc
sbb
cmp
pop
imul
sbb
mov
mov
xchg
icebp
lea
jns
mov
push
sbb
adc
enter
lea
or
jne
push
mov
ds
out
jno
jge
lcall
popa
jnp
xor
das
popf
call
adc
sbb
inc
sbb
pop
mov
pop
jle
cmc
inc
pop
inc
outsl
jl
pop
insl
es
cmpb
mov
adc
pop
iret
inc
hlt
xchg
fldt
xor
and
adc
sbb
xchg
outsb
pop
jecxz
addr16
and
sbb
jge
jo
add
push
stc
nop
jl
adc
in
rclb
mov
xchg
add
notl
inc
dec
push
mov
sbb
sub
int3
enter
data16
mov
les
push
test
into
pop
frstor
ret
leave
add
add
sbb
arpl
mov
mov
into
mov
push
lock
popf
mov
mov
pop
jo
cli
lahf
daa
sub
xchg
sub
sub
add
shll
pop
cli
dec
shlb
xchg
js
test
lret
sbb
mov
inc
sbb
xchg
fnstcw
je
push
loopne
test
pop
inc
mov
push
push
sti
push
mov
out
sbb
push
sub
clc
lea
cmp
jno
jmp
pop
pop
pop
mov
jo
and
neg
stos
loop
sbb
bound
repnz
adc
dec
ret
pop
stos
jnp
and
mov
pushf
sub
jecxz
lods
sbbb
not
and
push
fistpl
loopne
add
xor
mov
push
test
test
sub
xor
pop
inc
loope
dec
pop
orb
fiadds
loopne
pop
leave
and
repnz
lea
pop
gs
das
jnp
push
lods
pusha
pushf
sub
fiaddl
push
xorb
xchg
push
out
xlat
pop
divb
fnstcw
adc
mov
sub
test
xchg
xchg
cmpsl
push
lcall
lcall
cwtl
jbe
sub
fistps
jnp
add
repz
frstor
adc
push
add
addl
and
lahf
xor
fbld
inc
pop
mov
out
bound
inc
iret
in
aam
stos
push
or
popw
icebp
sti
pushf
sub
popa
add
push
xchg
pop
out
in
mov
jl,pn
adc
dec
and
push
jmp
scas
dec
orl
cmp
mov
mov
lcall
nop
mov
stos
bound
mov
mov
cmp
pop
cmp
inc
out
or
xor
pop
xchg
xor
jl
and
fdiv
mov
jecxz
mov
add
dec
dec
mov
inc
mov
adc
nop
jg
les
cltd
mov
xchg
mov
js
xor
js
inc
lods
dec
mov
das
call
inc
fdecstp
jno
mov
popa
add
pop
repnz
mov
xchg
test
mov
jmp
clc
xlat
rcll
iret
int
lds
jbe
adc
mov
rcll
stos
and
in
jnp
aaa
sub
pushf
pop
mov
cmpsb
xor
jmp
jb
pop
cld
push
inc
lea
sbb
xor
jecxz
dec
add
jo
sbb
cltd
jecxz
push
push
cmp
xor
fsubl
jnp
mov
push
ljmp
scas
adcl
fmuls
cld
rcrl
push
jecxz
xor
pmullw
ret
mov
mov
imul
jge
imul
sahf
stos
mov
mov
jbe
inc
add
das
add
push
in
xchg
mov
icebp
mov
and
aad
ss
adc
push
hlt
or
es
inc
mov
fsubs
punpckldq
sbb
cmp
imul
mov
nop
js
jae
out
inc
outsb
and
mov
pop
adc
js
push
dec
data16
mov
ja
addr16
xchg
popa
sti
cmp
inc
movsl
xlat
pushl
out
test
adc
outsl
lods
add
mov
dec
les
in
shlb
lds
lock
cmp
inc
fnstcw
inc
lahf
cmp
push
arpl
cli
xchg
mov
xchg
sub
xor
jnp
lds
mov
xor
dec
dec
xor
cmp
jae
jnp
clc
sub
cmp
pop
and
movsb
pusha
negl
sbb
mov
cmc
mov
dec
xlat
outsb
ds
js
ud1
xchg
sub
mov
mov
inc
jnp
xor
test
sub
sbb
add
out
add
aam
fwait
sbb
rcr
lods
jo
jns
out
push
out
sub
icebp
jo
ret
pop
jo
cmpsl
andb
cmp
and
ret
loop
push
lea
pop
stos
inc
frstor
push
xchg
sbb
sbb
inc
add
jg
insl
out
adc
push
ret
pusha
inc
pusha
cmpsb
mov
arpl
xchg
insb
jle
fwait
outsl
jnp
rol
sub
sbb
push
insb
mov
push
mov
shll
test
mov
mov
ret
add
mov
call
jg
jnp
or
ds
test
sbb
mov
mov
or
cmp
fcomip
mov
cmp
push
dec
pop
xchg
xchg
scas
sbb
mov
inc
arpl
and
jnp
xchg
adc
aas
mov
jle
dec
les
xchg
outsl
cwtl
insb
sub
insl
xor
ja
pusha
sbb
and
xor
out
push
sbb
cmp
jmp
rcrb
push
sbb
pop
mov
ja
in
inc
and
sahf
cli
cli
and
leave
aam
push
push
jmp
call
xchg
aaa
js
call
or
xor
jg
mov
jp
loop
adc
mov
mov
sarl
add
pop
scas
dec
mov
xor
xchg
xchg
fisubrs
pop
jbe
loopne
add
in
ds
fcoms
in
dec
xchg
ja
shlb
fbstp
ret
repz
rorl
dec
adcb
je
clc
data16
in
xchg
sub
fimuls
ja
and
testb
cmp
les
xor
out
pushf
or
repnz
adc
push
js
xchg
mov
ficompl
xor
jnp
xchg
jg
xchg
lock
and
adc
fisttps
sub
jg
adc
add
xor
jecxz
adc
mov
xchg
adc
or
push
and
sub
push
mov
push
stc
pop
add
test
xchg
testl
push
dec
jne
jle
je
jmp
and
shll
andl
add
sub
loope
mov
int
mov
ljmp
mov
xlat
jnp
mov
dec
inc
lods
mulb
xchg
fisubl
mov
cmp
push
cmpsl
daa
jb
cmp
mov
cmp
fs
nop
gs
pop
scas
push
shrl
clc
dec
out
xchg
cmp
or
in
mov
insb
xchg
adc
sub
out
rcll
stos
pop
outsl
in
nop
push
xorl
or
push
stos
xchg
lods
add
xchg
cmp
adc
insb
loop
scas
out
add
das
rclb
ja
mov
es
sub
jmp
or
mov
mov
cld
xchg
lock
scas
lret
sbb
jmp
sti
xor
in
fidivl
das
int
dec
in
clc
dec
hsubps
push
lock
pop
es
lret
into
shlb
movsl
and
sub
movsb
inc
fcmovnbe
mov
fsubr
cmp
mov
push
adc
fsubrs
push
push
and
cld
mov
add
and
dec
ret
outsb
mov
mov
mov
aas
loope
pop
inc
pop
xor
fucom
hlt
popa
xor
mov
shrb
sbb
mov
movsl
xchg
push
push
test
sarb
xor
test
pop
imul
mov
pop
inc
mov
fistl
pop
or
fbstp
lret
arpl
xor
push
sub
fstpt
jnp
ss
out
sahf
mov
xor
lods
add
lcall
mul
add
fwait
mov
jl
cmp
sahf
scas
cltd
lock
cmp
and
xchg
imul
mov
xor
inc
test
lret
sbb
jl
cmp
popf
aaa
into
mov
add
add
dec
out
test
push
cmp
pushf
fstpt
and
daa
mov
or
ja
cmpsb
or
mov
inc
adc
jb
jae
xchg
xor
es
out
push
addr16
in
xor
fisubrl
shlb
push
fnstenv
out
test
add
or
call
sbb
jmp
adc
or
mov
xchg
sub
outsl
fdivrs
push
jbe
iret
neg
ja
stos
inc
xchg
dec
rclb
push
aas
enter
mov
loopne
jbe
cld
cmp
inc
xchg
mov
enter
sbb
bound
call
and
mov
mov
mov
add
outsl
xor
outsl
and
nop
mov
les
sbb
sub
xchg
pop
dec
pop
jbe
mov
and
push
cmp
mov
mov
mov
cwtl
inc
mov
push
les
cmp
push
adcl
fldcw
cmp
stos
mov
fldl
xchg
shr
test
push
cli
pusha
add
mov
dec
jo
mov
cmp
ds
sbb
pop
dec
movsl
in
nop
and
pop
pop
sahf
inc
pop
scas
and
iret
pop
aam
into
js
int
sahf
adc
rclb
test
xor
out
sbb
mov
add
pop
mov
jle
sub
dec
fildll
insb
push
pushf
mov
in
dec
scas
jp
add
jnp
dec
jo
jl
mov
mov
nop
mov
xchg
sbbl
mov
aad
add
jmp
nop
adcl
jg
stc
adc
cltd
mov
cmpsl
lcall
xor
xchg
nop
or
pop
or
jmp
ficoms
testl
pop
mov
lahf
ror
cli
ljmp
popf
outsb
xchg
aaa
mov
and
cli
test
cmpsl
cmc
mov
add
mov
dec
or
jg
ds
xchg
out
add
shll
pop
push
dec
mov
cmp
xor
jo
xor
push
outsb
sbb
mov
adc
lcall
cmp
andb
xchg
mov
pop
sub
pop
nop
xchg
mov
sbb
add
sub
shrb
aam
stos
jg
jb
xchg
adc
es
xchg
int3
rcll
cmpsl
add
jmp
adc
add
test
ja
cmp
in
test
lock
fs
pop
outsb
test
ret
cmpsb
cli
push
adc
pop
icebp
aam
loope
pop
aas
outsl
or
insl
push
cmp
fildl
sub
cmc
sbb
or
ret
jge
jge
fstl
in
incl
and
or
pop
xchg
inc
xchg
pop
sbb
dec
cmc
add
mov
or
movsl
fwait
test
les
xchg
addr16
inc
mov
out
pusha
stos
shrl
in
pop
out
push
stos
sbb
jecxz
bswap
adc
jmp
andb
cmc
adc
xchg
out
and
push
out
mov
ret
jbe
jbe
xchg
aaa
adc
insb
std
push
shrl
xchg
lret
pop
pop
icebp
leave
sub
dec
inc
gs
pop
ljmp
fidivrl
mov
les
sbb
dec
and
sti
into
scas
into
jbe
xor
mov
in
aam
fidivrl
xchg
cmp
sub
pop
decl
cmpsl
xor
mov
sbb
test
push
std
fstpt
pop
cli
xchg
mov
out
fucomp
and
stc
arpl
ret
in
sti
mov
hlt
and
adc
inc
mov
xor
jp
push
mov
out
roll
and
xchg
lcall
mov
daa
mov
aaa
or
addr16
fucomi
xchg
cmpsb
xchg
sbb
xchg
dec
aas
outsl
mov
inc
stc
mov
and
fs
mov
cmpsl
inc
dec
loopne
lds
adc
xlat
dec
dec
jecxz
loop
jp
dec
out
inc
in
in
or
or
jno
sub
outsl
xchg
xorl
sti
lods
mov
imul
jmp
dec
les
push
scas
cmp
cmpsb
movsl
fadds
pop
imul
inc
jg
xchg
mov
out
daa
sbb
aam
stc
imull
add
sarl
push
pusha
lds
jo
es
mov
outsl
aas
inc
test
subl
pop
aam
xchg
adc
imul
sahf
test
sbb
lcall
or
fstpt
pop
mov
pop
sarl
push
addr16
mov
in
in
and
sbbl
stos
push
jno
inc
bound
sub
shrl
mov
pop
out
into
sbb
ficomps
xor
imul
in
cltd
add
inc
sarl
mov
inc
mov
jle
dec
lcall
inc
push
pop
str
pop
icebp
mov
fstps
mov
ss
stos
lock
shlb
mov
push
mov
addb
jbe
push
adc
ficoml
jl
cmpsb
sahf
popf
adc
xchg
sbb
pop
imul
push
cmp
lahf
jno
mov
sbb
divl
shrl
out
test
decl
mov
and
pop
mov
jns
jmp
mov
adc
xor
or
xchg
lds
sbbl
out
call
test
xor
into
test
mov
ss
cmovg
dec
into
pop
lock
cwtl
dec
pop
testb
xchg
cmp
int
add
mov
push
or
daa
mov
fistpll
imul
push
lcall
cltd
xor
pop
mov
jle
jbe
mov
jno
ficoms
ret
xlat
hlt
xor
mov
fnsave
push
fcom
jae
or
push
f2xm1
and
inc
mov
mov
imul
jge
xor
out
fsubs
mov
sbb
pop
mov
fwait
enter
push
cltd
push
sbb
xor
js
mov
int3
fucom
fwait
pop
adc
mov
xchg
cs
jb
jns
divb
fwait
rcrl
dec
or
test
sti
xor
cmpsl
add
mov
int
stos
bound
sbb
inc
ljmp
sbb
adc
pop
sbb
mov
push
cmp
pop
cmc
xchg
and
aas
shr
jge
push
mov
mov
gs
push
and
pop
pop
cmp
mov
mov
outsb
cmp
imul
add
divb
sahf
lods
push
iret
aas
inc
ja
pop
repnz
addb
test
loope
mov
pop
dec
imul
std
inc
ljmp
jno
mov
fidivs
orb
pusha
xchg
cwtl
das
les
xor
push
call
dec
std
xor
mov
fisubrl
adc
leave
pusha
rcll
in
ss
add
push
adc
shl
fldenv
enter
push
call
lret
add
jge
stos
imul
into
add
test
idivb
leave
xor
mov
std
or
fimuls
imul
sub
jecxz
ret
or
mov
stc
pushf
push
out
aas
xchg
test
add
mov
lahf
push
test
jb
loopne
sbb
pushf
xchg
into
cmpl
jecxz
mov
loope
cmp
add
mov
adc
push
movsl
call
movsl
call
cltd
xor
inc
push
mov
ljmp
xchg
cs
lcall
cltd
xor
movsl
inc
clc
in
rcrl
push
jmp
ror
in
jecxz
pop
sub
inc
mov
fadd
mul
xorl
movsb
movsb
jle
dec
cmp
xchg
cmc
test
jg
add
mov
fidivrs
test
cmp
xor
mov
lcall
xor
and
push
mov
imul
shl
jp
lock
mov
das
imul
test
icebp
aam
test
sbb
insl
add
in
sbb
push
jae
add
dec
fisttpl
sub
loop
sub
sbb
jne
inc
cmp
pop
popa
sbb
mov
sbb
cltd
mov
cmpsl
dec
mov
jnp
lods
iret
pop
adc
jno
popa
sub
mov
in
pop
fs
adc
add
fsts
inc
subl
fsubl
std
out
dec
insl
call
stc
xor
push
adc
movsb
xchg
scas
aad
dec
pop
sar
jno
sub
insb
push
rol
jecxz
daa
pop
jl
mov
jle
and
push
lods
push
mov
xor
jne
stos
inc
xchg
inc
jmp
mov
pop
arpl
out
cld
out
fisttps
lcall
lods
mov
in
outsl
mov
int3
loopne
frstor
enter
aas
aas
ret
add
imull
xor
outsl
mov
dec
icebp
adc
hlt
adc
dec
xor
in
js
lea
aas
lock
sub
aam
stos
out
jge
jbe
sbb
cli
adc
loope
imul
xor
aaa
cmp
in
push
mov
adc
pop
fsts
shll
sti
incl
shlb
xor
addl
mov
das
add
pop
fwait
lret
adc
cli
adc
out
mov
in
stos
push
fidivs
cmp
clc
insb
cld
or
mov
lahf
cmp
fidivrl
imul
adc
sbb
fldt
imul
test
enter
mov
fldl
call
jno
ret
fdivrl
fwait
mov
out
aas
test
mov
int
cli
incb
icebp
mov
xchg
push
mov
cmp
dec
adc
out
or
push
orl
sti
sub
in
fwait
stos
les
sub
mov
mov
aam
dec
ds
add
sbb
fistpl
xchg
pop
add
rcll
ljmp
add
inc
xchg
mov
aam
mov
mov
mov
mov
push
inc
adc
mov
jo
sbb
jmp
cs
cmp
lcall
xorl
es
push
xor
aad
pop
push
bound
sbb
mov
movsl
mov
pusha
notl
rcl
cli
jle
daa
mov
outsl
out
sbb
jle
clc
into
mov
mov
call
or
cmpsl
in
pop
push
rcr
nop
pop
shrl
cmpsl
jmp
decb
mov
test
jg
ds
out
mov
mov
cmc
sub
jp
inc
popf
data16
pop
ljmp
jecxz
sbb
rcrb
pop
movsb
dec
loop
in
mov
cmpxchg
sub
mov
loopne
mov
test
fcompl
jge
leave
xchg
lds
int3
dec
out
mov
ret
jbe
hlt
push
shlb
stos
inc
and
outsl
jae
dec
enter
cli
xor
shll
scas
addr16
lret
cld
lock
repnz
mov
sub
sbb
bound
and
push
fadds
xlat
pop
mov
fisttps
or
idivl
fisubrl
xchg
sub
jmp
sbb
cwtl
add
andb
fs
cmc
adc
js
arpl
jle
fisubrl
add
mov
lock
push
subb
cmp
ja
scas
jl
out
cmp
add
cltd
push
fmull
xor
push
test
cmpsl
dec
push
inc
jns
das
in
cmpsl
mov
sbb
sbb
sub
push
fsubp
or
mov
xlat
adc
inc
clc
subb
rcrl
add
xchg
mov
jp
imull
fadds
pop
or
dec
test
pop
sarb
ds
call
xorl
scas
nop
adcl
dec
pop
xor
jbe
pop
popf
xor
jae
notl
orl
mov
xchg
es
push
jge
shrl
shlb
mov
pop
pop
imul
pushf
jnp
pop
cld
test
movsl
inc
stos
aas
data16
scas
scas
lret
jl
add
jmp
popf
xor
push
arpl
or
ja
or
inc
jecxz
mov
out
cmc
cmpsb
loopne
push
rorb
movsl
inc
xor
push
add
dec
lods
push
sub
mov
pop
dec
fcmovnb
push
les
push
mov
push
inc
pop
pop
push
sti
push
rcrb
std
inc
loope
cld
test
jle
dec
mov
cmp
jmp
repz
cltd
and
cmp
arpl
sbb
scas
mov
outsl
jno
ljmp
pop
xor
aam
xor
out
cwtl
insb
mov
xchg
out
pop
xchg
adc
fucomp
lds
addl
icebp
lds
aam
add
or
cmpl
data16
aaa
cmpsb
mov
lahf
cmp
adc
popf
xchg
jl
lahf
andl
stc
mov
mov
inc
pusha
std
orb
xor
iret
push
dec
mov
and
jmp
dec
cmp
inc
dec
in
pop
mov
push
fwait
imul
popa
mov
dec
adc
repz
dec
jmp
add
stos
sub
cmc
adc
push
int3
cmc
xor
or
pop
xlat
ret
test
imul
pushf
pop
mov
roll
insl
cmpsb
add
repz
dec
gs
data16
ja
xlat
test
outsl
push
mov
pop
sarl
in
aas
dec
movsl
stos
push
insb
push
orb
jbe
mov
cmc
lret
rcr
scas
imul
xchg
call
inc
mov
imul
pop
lcall
and
mov
loopne
in
adc
jb
xor
mov
jne
ja
int3
xlat
test
dec
and
in
dec
cmp
dec
push
out
aad
push
fsubl
xchg
cs
sbb
outsb
mov
ljmp
ret
hlt
sbb
ret
enter
dec
popa
push
hlt
cmpsb
xor
cmpsl
mov
fsubrl
mov
icebp
ret
and
lret
or
lret
icebp
paddw
mov
and
sahf
sarl
xchg
data16
push
push
push
in
test
dec
fistl
xchg
xor
push
sbb
or
out
and
scas
scas
jmp
pop
cwtl
std
or
and
push
loop
iret
pop
jbe
lds
repz
and
enter
adc
push
or
cmp
pusha
xchg
lea
scas
notl
dec
lret
xlat
lea
xchg
sub
and
add
mov
xchg
fcmovbe
pop
xchg
das
cmp
daa
dec
xor
cmovae
dec
cli
pusha
jae
in
rcll
cli
cltd
in
sbb
pushw
int
mov
mov
xor
test
ss
push
mov
pop
outsl
in
loopne
push
popa
pop
push
dec
fistl
mov
mov
flds
mov
es
xor
cli
sbb
clc
xchg
fcompl
cltd
movsb
jnp
aas
inc
xor
xchg
in
enter
mov
testl
rcl
testb
and
cltd
imul
enter
and
push
stos
std
mov
xor
dec
xchg
xor
out
movsl
push
mov
les
mov
out
jl
rorl
imul
dec
cmp
pop
hlt
push
ret
adc
out
ljmp
adcl
out
mov
xchg
repnz
xchg
adc
mov
pop
add
scas
pop
jge
mov
lods
jecxz
dec
mov
mul
sub
fdivr
outsb
or
sbb
jmp
xchg
fcmovu
or
add
jmp
in
popf
and
scas
sub
jae
and
gs
jmp
scas
lods
lret
test
cmc
jno
or
mov
daa
hlt
lret
pop
movsb
jae
fwait
decb
in
jge
rclb
push
pop
mov
jne
mov
iret
nop
sbb
mov
add
stos
inc
mov
xor
mov
scas
subl
fnstenv
adc
imull
adc
jne
imul
cltd
add
push
push
mov
pop
std
mov
cmpsb
lock
std
inc
mov
ret
rcrb
fcomps
repnz
xor
pop
xor
push
inc
in
cmp
cmp
cmp
jae
jg
pop
lahf
sbb
imul
decb
mov
add
add
jg
cmp
dec
xor
roll
push
and
dec
movsb
dec
imul
cmpsl
out
sub
data16
sti
shrb
in
add
add
cmp
sbb
lods
mov
sub
xor
enter
push
jmp
cli
into
or
mov
sub
pop
ficomps
fs
dec
pop
inc
fidivs
adc
je
mov
les
add
xchg
and
cmp
cmpsl
rcl
cmp
add
and
inc
mov
inc
gs
iret
mov
sbb
aad
push
mov
daa
mov
mov
pop
xor
inc
push
mov
call
clc
inc
outsl
sar
mov
fucomp
push
mov
add
push
in
test
xchg
int3
xchg
adc
mov
jnp
lock
jg
pop
pushf
xor
sbb
push
or
mov
gs
test
mov
adc
ficomps
aam
js
sub
and
std
cltd
cmpsl
sbb
movsb
jb
in
jge
add
add
imul
inc
sbb
xor
in
fildll
fs
sbbl
lcall
add
lahf
mov
in
pop
jg
out
mov
push
es
cld
or
aam
outsl
outsb
daa
insl
test
mov
mov
pop
pop
sub
inc
testb
adc
enter
out
sbb
push
lock
xor
jge
inc
push
xchg
jb
fwait
test
lret
and
je
rorb
push
or
or
push
in
push
sub
rcll
testl
jle
orl
mov
mov
aad
out
sbb
mov
jl
js
bound
clc
xchg
popf
insl
stos
push
pop
repnz
mov
lods
shl
fists
push
jns
inc
xlat
pop
repz
jp
sub
iret
adc
insb
jle
fildll
pop
es
sub
bound
out
mov
into
aas
rorl
inc
out
fs
push
inc
inc
shrl
sbb
jge
adc
xlat
ss
xchg
repnz
and
lods
and
cmp
ret
fdivs
dec
cmp
out
fmul
adc
mov
lds
jno
mov
test
fnsave
mov
mov
mov
mov
stos
subb
jecxz
mov
enter
ljmp
enter
pop
and
sti
into
scas
clc
xchg
outsb
push
or
imul
daa
ret
pop
pop
stos
inc
fstp
jl
sbb
fisubs
fcom
inc
or
aad
imul
fidivl
shlb
int3
dec
dec
out
icebp
xor
dec
repnz
dec
mov
add
and
fnsave
and
movsl
cld
int
popl
jecxz
lods
popa
bound
add
cltd
mov
mov
xchg
cmp
loope
pop
dec
jg
idivl
testb
inc
loopne
xor
adc
adc
push
andl
xchg
mov
je
inc
in
addl
jp
loopne
fsubs
lea
mov
enter
dec
sub
jle
or
out
or
pop
mov
loop
aas
popa
and
test
pusha
icebp
mov
jnp
lcall
movsl
into
mov
xor
repnz
sbb
pop
frstor
lahf
xor
frstor
push
repnz
clc
inc
mov
xlat
outsb
rcll
or
inc
hlt
cmc
or
and
stc
cwtl
xchg
in
cmpsl
ja
mov
lea
cmp
dec
outsb
pusha
or
mov
xchg
inc
das
addr16
loopne
rcll
pop
aad
mov
add
scas
inc
into
negb
dec
stos
data16
xchg
lret
out
jns
scas
inc
xchg
cmp
xchg
or
fcoml
xchg
cs
mov
sub
xchg
in
test
or
mov
adc
sbb
inc
and
inc
pop
js
dec
bound
sahf
in
rorb
jno
cmp
gs
lcall
sarb
pusha
outsb
cmp
lea
adc
and
push
add
sti
fwait
and
cmp
scas
sbb
sub
and
gs
ss
movb
add
jbe
imul
fsubs
or
xchg
mov
rcl
dec
clc
xor
insb
xchg
insl
add
cmc
add
sbb
mov
sbb
inc
mov
mov
mov
sbb
cmp
lds
out
ja
dec
dec
out
sbb
sarl
push
pop
push
sub
shl
fisttpl
iret
fisubrs
mov
xlat
mov
adc
stos
dec
cs
or
mov
or
js
int
shl
fdivrl
or
mov
jp
jle
mov
lahf
mov
repnz
aaa
cmpl
adc
sub
and
xchg
lret
jne
jmp
cmp
and
mov
sub
jecxz
mov
dec
rcl
mov
fst
and
fs
dec
mov
repz
pushl
dec
push
fisttpl
iret
enter
sahf
lods
cmp
push
jne
push
push
aaa
sub
or
mov
cmc
jecxz
sub
adc
dec
sbbl
pop
je
mov
in
add
xchg
mov
lcall
cld
aam
int
mov
idivb
hlt
mov
in
and
lret
add
sub
cmp
or
adc
or
mov
faddl
inc
fdivrs
mov
lods
fwait
in
xor
inc
mov
icebp
mov
jo
mov
xchg
sarl
dec
push
push
add
and
add
ljmp
push
xchg
lods
aad
aaa
out
cmp
loope
pop
lcall
imull
repz
lea
lret
mov
lea
call
aaa
clc
push
insl
dec
in
jne
outsb
cmc
jmp
dec
inc
pop
cmc
cmp
insb
push
movsb
icebp
lds
jns
cmc
lea
mov
pop
imul
les
inc
std
in
xor
xor
push
and
stc
ret
jmp
or
inc
insb
dec
in
and
daa
mov
insb
push
movsb
loope
push
mov
cmc
lea
in
dec
imul
les
xor
in
xor
fadds
push
movsl
icebp
clc
inc
and
imul
inc
aaa
inc
push
inc
jne
sbb
pop
ret
aad
inc
ss
shlb
pop
pop
push
repnz
ret
sub
test
xchg
cmc
jp
push
aaa
adcb
ja
movsb
or
loopne
jecxz
insb
movsl
shrb
sti
cld
inc
jg
sub
and
xchg
sub
jp
jle
or
and
add
push
out
jne
jge
and
and
sti
adc
and
cltd
data16
int3
call
or
andl
or
data16
and
pop
mov
out
xor
mov
outsl
dec
out
sub
cmp
and
sub
stos
pop
sbb
push
icebp
xor
sbbb
movsl
test
fmuls
js
into
fcomip
cli
lea
push
and
movsl
cmp
mov
inc
inc
mov
jne
hlt
push
fwait
xchg
push
xor
stc
xchg
xor
repnz
ret
pusha
mov
sbb
ss
mov
xorl
jecxz
test
imul
sub
mov
mov
int3
xchg
or
dec
loop
sbb
jne
sbb
lret
sub
jae
jbe
or
and
jmp
adc
push
iret
dec
pop
and
jle
cmp
xchg
mov
cmp
js
adc
hlt
adc
inc
test
lods
sbb
xor
mov
into
das
inc
fnstsw
shl
call
push
xor
scas
push
xor
or
mov
pop
mov
jns
repz
bound
scas
movsb
les
cmp
pop
mov
jge
cmp
faddl
in
mov
add
mov
mov
push
push
mov
or
mov
sti
push
sbb
pop
cli
cs
mov
lahf
cmp
test
mov
xor
fdivs
fyl2xp1
dec
imull
xchg
popf
xor
sbb
jo
inc
popf
push
popf
inc
fs
pop
testb
pop
xorb
adc
sahf
cmp
gs
in
sbb
jl
dec
data16
inc
inc
nop
dec
sub
das
jne
movsb
xor
ret
scas
inc
push
mov
in
dec
enter
das
pop
les
testl
test
add
inc
mov
mov
push
pop
lret
and
add
add
mov
pop
test
lods
sti
pusha
fcmovnb
inc
fs
in
add
out
ja
or
push
xchg
sbb
lret
dec
lods
btc
and
xchg
sbb
scas
mov
bound
fcmovne
dec
xor
and
or
pop
repnz
int3
arpl
popa
ljmp
stc
or
orb
jl
inc
fcom
popf
inc
fxch
cmc
pop
cmc
es
in
dec
push
call
jae
sahf
xor
vsqrtps
and
and
subb
fs
ficoms
cmove
mov
inc
stos
int
fcmovu
push
out
inc
and
cmp
dec
out
push
and
faddl
gs
dec
loopne
xor
cmpsb
push
std
and
ss
adc
cmpsl
mov
jp
mov
lahf
push
cwtl
pop
mov
pop
xor
mov
xor
dec
adc
pmulhw
addr16
adc
pop
ret
insl
enter
incb
jbe
xor
mov
test
xchg
jnp
fbld
mov
sbb
shrb
adc
repnz
xor
xor
mov
fists
movsb
cmc
fmul
jp
lahf
daa
inc
loope
js
negb
je
shrl
rcll
aaa
insb
out
repnz
outsl
or
hlt
ja
gs
mov
icebp
mov
enter
or
adc
in
cmp
jnp
pop
bound
fsubp
pop
scas
adc
es
adcl
mov
add
ret
ja
inc
arpl
sbb
cmp
sub
insb
dec
pop
add
addr16
xchg
cmp
es
cmp
ja
dec
cmc
or
negl
shlb
je
xor
cmpsl
ljmp
xor
sub
aaa
jmp
push
pop
loope
mov
std
fnstenv
cmp
pusha
xchg
call
sar
or
in
or
xchg
xchg
cltd
inc
and
mov
out
loop
arpl
lods
pop
adc
sahf
jmp
cwtl
testl
fwait
jl
cmp
sub
sbb
jae
bound
inc
jmp
xor
cmp
std
fcoml
jge
xor
push
jbe
jne
push
call
sub
popf
ret
sbb
jecxz
xchg
sti
lods
addl
or
lods
outsb
arpl
add
mov
pop
repnz
and
mov
mov
mov
xor
mov
or
ja
sbb
pushf
sbb
mov
std
jbe
outsb
fwait
out
addl
mov
xor
add
movsl
pushf
ficoml
test
and
and
mov
jmp
mov
lret
outsl
push
in
std
xchg
push
lcall
pop
cs
cmpsl
cmpsb
mov
sub
xor
mov
daa
sarl
fstp
sbb
pop
jo
cbtw
pop
lock
push
outsl
inc
js
iret
sub
scas
add
xor
rclb
or
js
cld
test
fwait
sbb
push
lods
cmp
lret
aaa
pop
test
testl
cmp
jae
inc
pop
xor
ljmp
call
dec
jne
or
inc
fimuls
pop
xchg
dec
or
xchg
dec
mov
lods
push
jp
mov
aas
mov
inc
jnp
jmp
mov
mov
jno
pop
mov
pop
iret
mov
outsb
cwtl
dec
add
pop
inc
int3
add
xor
add
dec
cltd
cmp
and
mov
mov
std
mov
addb
ret
fbstp
or
jns
sbb
push
jno
shrl
fisttpll
push
int3
sub
mov
pop
lret
mov
mov
cmp
pop
and
fchs
cld
ret
out
push
loop
sbb
loop
pushf
mov
push
in
push
das
shlb
or
push
mov
jle
ds
mov
mov
jmp
sub
sub
inc
cld
mov
sub
xor
fnsave
push
popf
mov
dec
repz
jae
pop
movsl
push
pop
loope
test
mov
fisttpll
adc
jb
dec
sub
sbb
inc
int3
mov
scas
mov
mov
push
mov
wbinvd
ljmp
jne
lds
mov
xchg
mov
aad
leave
mov
cmp
inc
xor
pop
pop
out
int
ja
cmp
fisttps
iret
mov
add
add
xor
das
repnz
sbb
mov
movsb
decl
lods
leave
sub
cli
adc
mov
ds
inc
ret
jno
hlt
push
fwait
xchg
pusha
loop
xor
or
cwtl
ss
xor
lea
cmpsb
mov
arpl
lds
aad
aaa
test
fcmovnb
inc
or
call
pusha
push
sbb
imul
jb
xor
cmc
push
pop
cmc
inc
sahf
inc
dec
int3
mov
imul
cli
call
mov
fnsave
aam
mull
in
mov
mov
mov
jb
ss
push
scas
add
out
repz
out
jb
sub
lods
outsl
push
and
notl
aas
push
sbb
divl
in
xchg
ret
inc
push
and
shr
sub
rolb
sbb
call
insl
xchg
mov
dec
pushf
mov
daa
inc
ficoml
mov
scas
mov
xor
cmp
es
rcrl
call
insb
sbb
or
mov
add
push
mov
in
inc
mov
in
pop
divb
xchg
or
aam
mov
scas
and
xor
andb
ucomiss
test
daa
imul
adc
jb
xchg
aas
add
daa
in
in
pop
sbb
aas
push
jmp
pop
orb
mov
jle
scas
es
push
mov
fs
fdivrs
outsb
je
stc
rcrb
add
aas
xor
xchg
scas
mov
push
jmp
mov
cmp
inc
push
in
adc
test
mov
dec
scas
clc
mov
adc
arpl
mov
mov
les
push
add
jl
stos
pminsw
jae
mov
out
rorb
xchg
sbb
cmp
icebp
cmpb
jecxz
inc
push
pop
jmp
and
pop
xchg
xor
lahf
repz
jns
and
stos
inc
sbb
ds
lcall
popa
inc
mov
mov
fsubl
cmc
or
and
aaa
shll
mov
sbb
sub
jmp
push
xchg
jg
inc
mov
into
movsl
popf
xchg
mov
cmp
jge
and
pushf
cwtl
das
into
mov
xor
adc
cs
mov
adc
mov
decb
cmpsb
pop
insl
stc
adc
lret
xor
push
scas
imul
mov
in
xor
mov
pop
sbb
xor
dec
dec
test
inc
jns
xlat
and
fistpl
mov
add
lods
and
and
cltd
sub
lret
jo
adc
ret
or
sbb
ds
divb
lods
mov
push
or
mov
xor
int3
sbb
sub
sub
jbe
shrl
inc
ret
outsl
stc
dec
loopne
mov
ljmp
mov
adc
loop
icebp
adc
js
dec
sub
imul
mov
test
or
test
mov
imul
mov
fnstcw
jns
pop
ja
inc
loopne
and
fdivp
inc
stc
mov
movsl
dec
xor
ja
addr16
mov
add
xor
dec
sbb
adc
fcoml
stc
rol
aaa
lret
arpl
lock
sub
das
sbb
sqrtps
dec
mov
and
push
mov
xorb
out
sbb
push
cmpb
stc
cli
cmp
sub
sti
push
ret
inc
shll
cli
or
loop
dec
fwait
dec
jl
xor
mov
and
popa
add
les
mov
and
shl
fistps
nop
mov
xchg
jl
push
sub
cmc
mov
and
lcall
pop
fiadds
ds
outsl
and
push
movsb
push
mov
cld
addl
add
mov
out
dec
out
mov
imull
dec
fisubrs
or
mov
xchg
and
jg
xchg
arpl
inc
mov
xchg
inc
dec
gs
rcrb
inc
sti
dec
sub
outsb
fsubs
test
pop
repz
sbb
repnz
push
lcall
in
ret
imul
mov
test
lret
movsb
in
xchg
lahf
xchg
aad
rolb
mov
jnp
jmp
jp
sub
fildll
hlt
pop
cli
and
push
mov
jne
call
mov
out
xchg
add
shll
add
test
push
mov
lea
gs
and
mov
aad
fimuls
and
lock
mov
mov
lret
idivb
repz
cmp
sub
jle
xchg
fistl
xor
call
xchg
in
or
cmc
ret
jnp
cli
push
dec
shlb
inc
rcrb
dec
ret
test
sub
pop
pop
je
push
ljmp
adc
inc
test
lock
lock
jne
mov
pop
xor
sub
push
in
mov
mov
cwtl
cmpsl
mov
je
add
addr16
push
mov
sbb
pop
fcompl
sub
aam
pop
push
cmp
dec
icebp
pop
pop
or
fisttpll
push
dec
dec
leave
and
xchg
cmpsb
aam
mov
les
test
aas
add
dec
mov
push
fbstp
jae
addl
divl
jmp
int
aaa
jle
in
in
jbe
push
dec
test
daa
mov
mov
xlat
outsb
xor
push
push
mov
jns
or
push
dec
loope
xchg
repz
add
insl
repnz
ret
dec
inc
xor
mov
daa
in
aas
push
inc
sti
iret
leave
push
mov
fwait
lods
sub
lods
jmp
mov
xor
jne
adc
xchg
push
adc
aam
sub
ret
in
outsb
pop
push
iret
movsb
and
lret
lret
xchg
outsb
mov
push
cmc
adc
mov
add
lret
das
mov
sbb
mov
jno
call
test
and
sbb
jae
addl
mov
out
xor
xchg
adc
push
or
dec
sbb
rcrl
ss
mov
pop
xchg
xchg
mov
mov
jl
push
cs
and
shl
out
sbb
rcll
enter
adc
mov
fisubrs
test
jge
inc
insl
cltd
clc
pop
xor
out
push
dec
pop
xor
repz
loopne
cmp
fsubrs
cmp
orb
cmc
das
es
leave
lcall
rcrl
and
mov
xlat
push
icebp
loopne
out
cli
mov
and
dec
dec
leave
test
daa
jae
xchg
cwtl
mov
and
cltd
das
fmul
xchg
jbe
scas
xor
pusha
orb
jmp
dec
cmp
cwtl
xor
xor
out
jbe
push
test
sti
mov
and
pop
mov
jo,pt
int
loopne
nop
adc
push
fwait
sbb
mov
in
stos
or
fnsave
aas
inc
ret
jo
mov
and
cli
out
xchg
or
test
jmp
aam
mov
in
movsl
addr16
mov
aaa
xor
imul
mov
sub
xchg
or
xchg
test
popf
seta
inc
leave
jne
sub
push
cmp
es
push
mov
adc
cmpsb
ds
mov
mov
mov
xor
fists
fstpt
sahf
xlat
jmp
xchg
push
pop
lods
mov
popf
or
in
or
and
call
cmp
inc
pop
test
jo
xchg
inc
sbb
mov
sbb
leave
jl
addr16
pop
out
nop
jnp
mov
hlt
mov
pop
iret
aad
subl
rcrl
jge
xchg
xor
fisubs
add
inc
inc
push
lods
aad
test
lock
adcl
ljmp
nop
xor
repnz
outsb
add
fisttpl
add
mov
jno
and
sub
jns
dec
inc
jo
cmp
mov
imul
mov
enter
xchg
mov
lahf
stc
dec
and
cmc
push
xor
mov
sub
incl
jp
cmpsb
inc
add
jno
and
addr16
jg
hlt
jmp
xor
arpl
adcl
or
adc
into
mov
add
pop
adc
jge
push
mov
cmp
inc
dec
call
dec
or
mov
into
and
andb
jp
mov
add
sub
jb
dec
sub
or
xor
iret
sub
rolb
inc
add
jo
aad
mov
cwtl
bnd
out
test
mov
out
outsb
fiadds
mov
and
push
pushl
mov
xchg
cmp
pop
dec
dec
aad
inc
dec
test
nop
xor
sahf
ds
iret
call
and
mov
mov
ja
int
es
stos
aam
int
loop
fstpt
xor
aaa
mov
enter
push
fimull
xchg
subb
loope
mov
mov
in
aad
std
test
adc
daa
sub
add
push
push
or
or
push
js
jmp
hlt
dec
push
xchg
arpl
cmp
int
andb
mov
mov
scas
inc
sbb
out
add
cmp
popa
jbe
sbb
aam
repnz
mov
pop
popf
ljmp
pop
mov
rcr
sbb
adc
jp
imul
jb
xchg
xchg
adc
rcrb
cmp
jnp
std
clc
mov
xchg
and
jge
cwtl
and
rolb
pop
jae
sub
test
jne
repnz
push
xchg
scas
xor
push
push
mov
leave
mov
fwait
sub
data16
loop
jg
and
fwait
testl
cmpsl
jg
iret
aaa
mov
lcall
loope
jne
inc
sahf
mov
jmp
addl
jb
mov
and
les
adc
test
or
mov
xlat
scas
mov
aas
sbb
push
sti
mov
mov
sbb
js
aad
mov
call
mov
lcall
arpl
mov
mov
inc
lcall
aas
sub
call
mov
loopne
sbb
jno
into
insl
adc
pop
inc
jl
ja
jo
xor
pusha
sub
cmpb
and
movsl
je
xchg
mov
pop
cmp
leave
inc
bound
xchg
inc
cmpsl
jns
jge
sub
mov
cmpsb
popl
add
cld
xor
cmp
in
cs
inc
jns
mov
ret
xorb
mov
neg
pop
rclb
popa
lahf
int
aaa
repz
pop
adc
or
jge
clc
clc
or
lds
add
lea
rcrb
movsl
cmp
pop
dec
push
pushf
xor
out
sbb
pop
ret
cld
cltd
ljmp
in
or
cwtl
mov
xor
xor
lahf
clc
ljmp
movsl
mov
arpl
pop
inc
lock
imul
push
data16
xchg
jnp
mov
push
test
mov
or
mov
push
out
test
inc
or
dec
mov
jmp
push
mov
nop
daa
movsl
repz
stos
mov
sub
mov
cmp
test
mov
movsb
push
rcrb
mov
xor
pop
mov
push
sub
repnz
xchg
stos
fnstenv
fdivrl
rorb
out
push
jae
rol
jbe
pop
loop
push
les
pushf
pop
cltd
dec
cbtw
ret
ljmp
icebp
inc
aas
lods
enter
xchg
cld
out
jno
mov
xor
mov
dec
call
mov
jnp
inc
and
cwtl
stos
outsb
jecxz
add
pop
int
data16
dec
or
shll
push
adc
mov
and
ds
cmp
in
aam
ljmp
sub
adc
jo
lods
mov
mov
fldenv
push
in
or
sub
xor
and
roll
xchg
jns
bound
pop
imul
jae
popa
sub
hlt
and
mov
mov
cmp
and
data16
leave
or
mov
jecxz
pop
jp
ds
mov
mov
mov
int
fsubs
or
push
jbe
ds
fildll
or
jns
scas
mov
pop
sbb
dec
push
enter
xor
adc
fs
in
outsl
dec
outsl
mov
or
fwait
icebp
xor
sub
in
mov
jecxz
adc
mov
dec
andb
fsubs
xchg
mov
push
dec
ret
lods
or
popf
xor
sub
jmp
loopne
sbb
add
shll
movsb
xchg
xchg
mov
mov
addr16
testb
out
js
fwait
jp
xchg
js
imul
jno
push
ss
pop
sti
lret
and
cmpsb
les
jno
mov
add
push
cltd
lds
mov
push
and
or
cmpsl
sbb
cli
pop
sbb
mov
add
or
fdivs
call
dec
cwtl
xchg
daa
fdivr
or
pop
dec
sbb
jle
cmp
test
push
adcb
sub
pop
aas
adc
jmp
loop
rcl
push
fidivs
pop
mov
aaa
jnp
out
jo
fnstcw
dec
pushf
subb
mov
adc
lahf
sub
jns
fld
es
jno
fisubl
adc
mov
ss
dec
sbb
lret
cwtl
push
rcrl
cmp
push
int3
jg
jno
and
sub
mov
jbe
rcr
ror
add
scas
mov
out
ja
out
lods
adc
in
outsb
adc
push
cmp
jg
out
push
jno
lret
add
addr16
sub
xchg
xchg
jl
les
and
repnz
in
call
cmc
cltd
rorb
fs
push
inc
arpl
pushf
xor
inc
in
or
cs
fwait
cmp
test
aad
pop
leave
pop
sahf
mov
lods
sahf
cmp
adcb
fs
fsubl
pop
push
fstpt
inc
arpl
pop
es
jp
add
pop
lods
cmp
mov
inc
clc
xor
daa
addb
dec
adc
mov
subl
inc
adc
ss
outsl
incb
mov
mov
lahf
mov
inc
fdiv
insl
add
sti
enter
mov
js
nop
imul
repnz
sub
pop
insl
and
lahf
jl
sbb
jecxz
cltd
adc
jmp
mov
test
lcall
push
repnz
dec
repnz
cmp
xchg
cmp
jo
aas
rcr
mov
scas
loope
dec
lock
adc
cmp
fsubrs
sub
cmp
cmp
test
mov
add
jo
adc
out
mov
push
push
cli
mov
icebp
test
scas
xor
aam
jp
loop
lcall
dec
psllw
mov
lahf
rorb
je
sub
out
push
out
sub
adc
inc
adc
xchg
das
pop
mov
icebp
fsubrl
loopne
jmp
push
cmc
add
add
pop
cmp
xlat
push
mov
cmp
add
leave
mov
mov
cmp
das
ret
pop
test
add
das
mov
or
xchg
ds
pop
sub
psllw
hlt
sub
push
pop
lahf
ljmp
call
testl
cmpb
bound
negl
inc
movsl
mov
push
jmp
sbb
jo
push
les
sarl
mov
in
and
lret
clc
int
xor
fxch
and
push
movsb
cs
lret
ror
mov
out
inc
mov
pop
aas
xchg
mov
inc
insb
stos
shlb
or
jo
or
orl
jle
adc
add
sbb
into
jb
fsubs
sub
in
hlt
sbbl
test
sub
in
cmpsb
xchg
cmpl
sahf
pusha
sub
out
adc
sub
pop
mov
gs
mov
nop
jmp
push
pop
sbb
sbb
xor
adc
sub
rcll
sbbl
leave
in
mov
fs
mov
pop
sub
sbbb
dec
test
cmpsl
movsb
dec
inc
ljmp
jb
mov
int
loopne
aas
adc
jb
jg
fcoml
stos
std
subb
mov
pop
sahf
dec
rcrl
and
insb
das
jns
xor
sub
push
xor
cmp
xchg
les
adc
cld
addr16
lret
call
pop
pop
xor
ficoml
inc
inc
mov
inc
mov
dec
dec
jae
inc
lret
lock
inc
lods
pop
loope
loopne
lock
ss
fnstcw
ror
cwtl
inc
push
xchg
faddp
jo
cmp
stos
clc
mov
dec
and
xchg
jne
movsb
cmp
mov
adc
and
xchg
ss
jb
inc
jnp
dec
xchg
dec
sti
inc
dec
xchg
jmp
popa
xor
jno
lcall
sub
shlb
add
out
jmp
andl
cwtl
xor
push
inc
sbb
push
out
into
sbb
or
out
sbb
insl
rcrb
imul
imul
mov
hlt
ret
jl
add
jmp
cmp
mov
jns
mov
adc
xchg
dec
sub
orl
std
xorb
and
ds
jmp
les
mov
mov
or
or
data16
stos
out
lods
clc
push
mov
ss
sbb
mov
xchg
or
adcb
sbb
adc
aaa
ret
pop
dec
or
add
insl
shll
mov
mov
cmp
shll
test
xchg
lods
cli
mov
sub
sbb
mov
test
xchg
lods
sti
insl
ljmp
mov
test
jne
vpunpcklqdq
pop
inc
fstpt
scas
pop
aaa
sub
inc
fildl
popa
clc
jno
aaa
into
or
mov
dec
or
rol
and
nop
shlb
mov
insb
cmpsb
mov
fdivrs
sbb
mov
cld
lcall
sub
mov
jnp
int
imul
push
xchg
push
outsl
push
inc
mov
mov
rorl
in
cmpl
cltd
popf
or
sub
mov
mov
jb
cmp
pop
or
mov
xchg
pop
stc
ja
jg
sahf
or
jns
mov
or
pop
jle
cmc
mov
cmp
cmc
sub
mov
mov
push
or
inc
fcompl
mov
stos
inc
jns
mov
sahf
add
rol
jno
std
xchg
fimull
mov
andl
ret
mov
pop
cmc
push
pusha
es
mov
xchg
mov
ret
stos
xchg
sbb
cwtl
sbb
mov
lret
icebp
mov
xchg
mov
popa
dec
fsubrs
andb
mov
and
sbb
or
sbb
jns
popa
xor
shll
cs
dec
fbstp
ret
data16
icebp
xchg
xchg
sub
adc
dec
sbb
sub
cs
pop
cwtl
das
cmp
mov
mov
push
mov
mov
inc
aas
out
outsb
push
loop
ss
sub
push
sbb
dec
jbe
fisubs
enter
mov
xchg
in
xor
mov
adcl
pop
popf
xor
leave
fnsave
mov
mov
fcmovnbe
insb
adc
aas
mov
insb
mov
push
stos
mov
gs
cli
push
push
out
dec
aaa
mov
imul
insb
rol
enter
dec
sub
es
shrl
xchg
lods
inc
ret
clc
lret
mov
inc
iret
data16
adc
test
xchg
fbstp
clc
daa
mov
je
inc
fdivrl
mov
in
hlt
cmp
jbe
dec
pop
bnd
std
xchg
ret
lahf
pop
mov
clc
sub
sub
mov
xchg
dec
dec
loopne
mov
callw
ss
xchg
push
out
mov
mov
inc
les
shl
xchg
stc
nop
leave
sub
xchg
cs
inc
and
push
dec
or
add
xsha256
cmpsb
xlat
sbb
dec
dec
shr
test
sbbb
dec
jmp
pop
fwait
dec
in
testb
int
cmpsl
lcall
add
test
mov
add
popa
clc
dec
dec
imul
or
xchg
jle
mov
or
inc
pop
iret
inc
push
lods
inc
test
aas
adc
adc
inc
out
das
sbb
mov
fsubrl
push
ljmp
xchg
aas
loopne
sub
pusha
jmp
xchg
cmp
push
or
rolb
out
push
push
ret
aaa
adc
daa
rolb
movsb
cmp
inc
rclb
dec
out
test
adc
shl
hlt
push
stc
test
daa
mov
int
xor
cmc
pop
pop
mov
ja
push
sahf
cwtl
das
iret
jmp
negl
lret
and
testb
inc
enter
repnz
inc
fchs
fildl
xchg
or
fs
pushw
or
mul
fistpl
mov
aaa
cmp
gs
jb
dec
mov
fdivr
xchg
adc
aam
insl
push
mov
stc
ljmp
dec
jne
loop
inc
mov
xchg
pop
inc
shlb
adc
movb
inc
fst
and
jnp
push
in
inc
scas
pop
icebp
fst
shrb
push
in
addl
jge
fdivrl
xchg
xchg
cld
xchg
cmp
in
pusha
mull
push
sbb
and
hlt
ret
push
repnz
xchg
aam
enter
sbb
scas
xchg
sete
test
test
sbb
or
fdivl
fsubrs
or
sbb
dec
arpl
xchg
fists
cmpl
fidivs
fnstsw
adc
push
cmp
lds
cmpl
mov
aas
cmp
cwtl
in
sbb
lods
shl
mov
xor
jp
xchg
cs
dec
in
pop
cld
xchg
clc
lret
bound
std
mov
addr16
loop
jbe
xchg
push
xor
or
test
mov
imul
and
rcrl
push
out
xchg
add
enter
sub
sbb
popf
in
shl
mov
jge
add
jnp
mov
sbb
and
jmp
sbbl
loop
push
pop
mov
add
lret
cli
std
add
scas
gs
ficoms
lods
test
sbb
mov
shl
leave
pusha
add
dec
jecxz
push
push
lods
mov
cwtl
das
and
js
xchg
jmp
rcrl
push
popf
cmp
pop
out
and
xchg
adc
xchg
sub
push
lea
aaa
sbbb
mov
cmp
mov
jbe
sbb
inc
push
mov
popa
bsf
aad
adc
scas
inc
cs
pop
loopne
dec
adc
loopne
inc
imul
lcall
pop
mov
xor
mov
jbe
xchg
mov
push
aaa
xchg
mov
mov
popa
cmp
xchg
jecxz
notb
nop
ds
or
scas
inc
mov
add
ret
cli
dec
pusha
mov
xchg
xlat
aaa
into
add
es
in
push
fs
mov
xchg
movsl
mov
fbstp
sub
push
rolb
ficoml
add
stc
xlat
xor
add
sbb
es
xchg
sti
sbb
addr16
and
popf
add
dec
loop
sbb
xchg
dec
rcrl
mov
aad
dec
or
out
test
pop
mov
imul
insl
add
lds
test
in
xor
dec
or
cmp
pop
push
movsl
mov
outsb
add
inc
push
movsl
cmp
arpl
cwtl
push
push
ljmp
test
cmpsb
inc
clc
popa
clc
sub
inc
xchg
dec
jno
jl
fnstenv
popf
mov
pushl
out
push
outsb
and
cltd
mov
sbb
cmp
ret
es
adc
leave
mov
sbbl
fisttps
xor
xor
push
push
in
test
out
xchg
jnp
aam
adc
or
jbe
inc
push
out
jb
inc
pop
pusha
xchg
popa
js
and
stos
pop
aam
or
cmp
push
push
mov
inc
mov
fmulp
out
leave
sub
xor
daa
bound
push
dec
subl
cltd
fidivrs
nop
in
sub
pop
or
mov
adc
add
sahf
xor
push
or
inc
jae
arpl
lret
sti
lcall
inc
leave
pusha
je
pop
icebp
mov
fnstcw
or
jge
imul
mov
or
popa
clc
jo
out
test
popf
xor
push
mov
imul
fldcw
gs
xor
xchg
jmp
dec
adc
sub
jle
xchg
sub
xor
out
mov
int3
dec
push
sbb
cmpsb
pop
xchg
xchg
insb
jmp
ja
or
mov
jo
ret
mov
into
data16
faddl
data16
xchg
dec
out
roll
leave
dec
or
push
fidivs
jmp
pusha
cmc
sbb
enter
jns
and
cmpsl
mov
frstor
outsl
dec
movsb
xchg
pop
cli
dec
xchg
xchg
jno
les
inc
test
scas
jae
stos
cmp
mov
jp
mov
sub
shrl
mov
jo
inc
leave
js
mov
je
daa
ljmp
or
cmpsb
lods
cmp
repz
sbb
or
std
cs
ss
mov
push
or
negl
jns
scas
xchg
jp
jecxz
xorb
popa
int3
or
mov
and
shr
push
out
push
cmp
iret
jge
adc
mov
sti
pop
or
mov
test
stc
xor
loope
iret
gs
adc
fimuls
dec
in
push
popa
imul
fidivs
inc
dec
shll
jecxz
test
jg
dec
rorl
mov
xchg
cld
hlt
dec
ret
mov
js
std
cli
push
mov
mov
pop
les
pop
rorl
lret
cmp
push
fsts
out
add
andb
hlt
sub
add
arpl
jecxz
xchg
xor
xchg
inc
test
mov
scas
and
jno
add
cs
mov
adc
push
repz
iret
int
push
lods
mov
inc
cmpsb
fadds
dec
mov
dec
fcomip
mov
loop
mov
or
mov
ss
daa
sbb
fbstp
out
mov
mov
or
test
adc
leave
adc
push
test
sbb
out
cltd
jge
sbb
xor
and
cmp
xor
movsb
jns
mov
fildl
aaa
xchg
ja
daa
test
je
cmpsb
pop
xchg
cmp
js
push
mov
cmpsb
in
pushf
xor
in
stc
push
mov
jmp
inc
sub
imul
adc
pushl
add
and
popa
lods
je
xlat
cmp
sbbl
rcl
inc
fnstenv
xchg
enter
sbb
xlat
pavgw
pop
adc
xor
or
xchg
jnp
inc
add
orl
xchg
jnp
iret
pop
repnz
add
je
and
mov
mov
iret
cltd
push
insl
cltd
push
adc
movsl
pop
jle
pop
pop
cmp
mov
ret
repnz
mov
icebp
sbb
inc
fmul
mov
cld
add
mov
fsubl
lds
frstor
movsl
arpl
mov
and
xor
pop
rolb
add
dec
fdivrp
sub
insb
ror
cmp
adc
or
int3
inc
lcall
mov
out
out
lret
loopne
push
stos
lar
or
std
repnz
les
adc
sahf
xchg
mov
clc
pop
out
xchg
inc
mov
fcoml
pop
and
pop
out
pushf
mov
or
daa
fstps
xor
into
mov
or
lds
imul
cltd
xchg
aam
rorl
aam
lods
pusha
mov
pop
xchg
sub
bound
das
mov
push
std
movsl
or
fs
xor
out
mov
sub
mov
call
subb
xor
inc
push
mov
dec
negb
push
and
inc
xchg
xchg
xchg
mov
jg
xchg
movsb
xor
nop
mov
adc
lods
inc
jg
addr16
add
mov
push
or
in
cmc
daa
fsubrl
xor
ficoml
dec
int
push
lcall
ds
pop
cld
inc
push
cmp
jp
inc
lods
pop
pop
add
cmp
ds
pop
jle
sbb
aam
adc
sub
sbb
cmpsl
pop
and
mov
sbb
ds
jnp
dec
les
and
adc
lods
hlt
addr16
and
mov
cmpb
movsl
dec
outsl
mov
jecxz
inc
mov
sahf
sti
push
enter
push
lahf
scas
inc
fsub
jmp
js
pushf
xlat
xchg
adc
test
mov
cld
pop
rol
jl
mov
into
and
rorb
or
das
mov
fldl
cmp
sarb
in
dec
mov
add
push
in
xchg
xchg
mov
out
ljmp
stc
nop
add
cmp
mov
cmp
jo
movsb
xor
adc
pop
cmp
and
pop
inc
mov
int3
daa
push
aad
aad
std
jecxz
cmp
ret
add
lea
or
scas
mov
pop
mov
cli
xchg
popf
sub
aad
dec
mov
in
out
in
xchg
inc
stos
xchg
icebp
addr16
mov
pusha
testl
stos
ss
jns
jne
pushf
cmp
test
les
filds
fadds
sti
mov
sub
dec
loopne
pusha
sbbl
pusha
aam
pop
jmp
mov
pop
lock
jge
push
dec
fsubl
jecxz
insb
sbbl
imul
jnp
jo
lods
or
cmp
push
orb
add
insb
insb
lahf
ds
cmp
jns
mov
mov
jns
push
cmp
loope
sbb
push
call
inc
out
jecxz
decb
int3
inc
mov
sarl
sti
lea
mov
xor
fimull
adc
cld
stos
out
push
or
xlat
dec
mov
adc
ds
mov
lock
stos
mov
stos
inc
sbb
std
and
cld
int3
and
xorb
loopne
fwait
xchg
stc
add
jnp
lock
lea
adc
sbb
sbb
push
ds
sub
xchg
dec
jl
insb
cmp
jnp
jp
jle
dec
dec
pusha
pushf
dec
outsb
popf
mov
sub
mov
dec
mov
push
or
int3
cmp
dec
mov
icebp
test
mov
fnsave
mov
test
jge
cmc
in
out
xor
movsl
pop
add
sti
cmp
ret
outsl
mov
push
sbb
mov
sti
hlt
push
sti
push
jecxz
push
movsb
mov
dec
inc
mov
lea
inc
lds
pop
xchg
imul
popa
fldcw
repz
loope
fisttpll
jnp
lods
shlb
fcoms
adc
lods
adc
cmp
aam
rolb
sar
mov
mov
sbb
in
xor
cmp
cltd
addr16
scas
mov
outsb
adc
push
jns
add
or
dec
mov
in
push
bound
mov
out
xor
mov
add
pop
ret
xchg
sub
stos
xor
js
mov
gs
push
mov
fs
xchg
mov
push
sub
mov
stos
cmp
cmp
loop
jge
xchg
jns
insb
mov
pop
mov
shll
mov
roll
jg
or
dec
loope
xor
cmc
ja
sub
xlat
mov
inc
fisubrs
es
jle
call
jnp
and
sub
mov
xorb
mov
push
int
loopne
jmp
mull
or
mov
cmpsb
push
out
sbb
ljmp
sbb
xchg
nop
mov
rolb
sbbl
pop
sarl
jno
xchg
mov
add
mov
lret
sbb
xchg
pop
scas
lea
hlt
adc
ja
mov
mov
sbb
pop
hlt
mov
fucomi
das
fimull
rcll
sahf
push
imull
imul
gs
or
pop
popf
mov
out
sub
sbb
repnz
test
orl
cmpb
adc
fwait
add
and
add
dec
xchg
cmp
popf
adc
or
xor
jb
pop
rcrl
xchg
dec
fdivrl
ret
lcall
shr
out
in
shlb
imul
mov
sbb
sti
es
rolw
push
pop
xlat
mov
in
pop
dec
add
lcall
and
mov
mov
pop
aad
outsl
push
in
lret
mov
rolb
shrb
sbbl
adc
in
andb
stos
dec
cmp
ret
fwait
xor
stos
jmp
hlt
es
add
lcall
mov
sbb
push
lret
addb
loop
mov
or
pop
mov
adc
xor
aas
shll
and
lds
imul
sub
jbe
and
mov
nop
jnp
xor
dec
lds
insb
dec
xor
xor
pop
iret
imul
in
dec
flds
push
or
sub
sbb
xor
xchg
sahf
mov
mov
repz
rclb
daa
fstl
lods
jmp
int
imulb
add
sub
ret
fldl
cmp
sahf
aad
outsb
fmuls
and
arpl
popf
xchg
sub
mov
pop
lock
arpl
test
dec
mov
add
pop
or
push
adc
or
mov
adc
dec
scas
inc
int
addr16
mov
sub
dec
cwtl
sbbb
je
cmp
mov
out
push
rcr
cmp
add
sbb
pop
mov
fists
mov
cmp
rolb
lea
lock
mov
mov
ss
fidivl
fcmovu
sub
sbb
cltd
add
sub
dec
mov
popa
aam
push
lret
sub
orl
popf
dec
sub
cwtl
inc
jno
pop
or
cmp
pusha
xor
xor
cmp
cmpsb
xchg
or
sub
das
loope
jl
pop
dec
leave
xor
add
or
je
pop
fwait
xchg
andb
xor
push
cmpb
hlt
inc
jp
scas
outsb
popa
inc
int3
inc
dec
leave
insl
dec
inc
fnstsw
fildll
add
in
popf
xchg
cmpl
adc
sub
jne
in
in
ds
sub
rcrb
xchg
pop
clc
sub
ss
mov
cmp
fiadds
push
dec
ret
cwtl
dec
mov
ss
xchg
jle
mov
mov
cmp
out
cmp
inc
subl
mov
cmpsb
cli
ss
loop
cmp
sbb
das
cmp
sbb
inc
sbb
add
mov
ret
xlat
inc
xchg
test
lret
and
movsb
aad
dec
ja
sub
sti
xor
or
les
js
xlat
insb
adc
xchg
lds
gs
xor
jle
gs
cmpsb
imul
adcl
out
testb
call
sbb
rcll
ret
scas
movsl
push
repnz
ss
stos
loop
sub
add
xacquire
cltd
push
adc
lret
pop
jmp
xchg
rcrb
mov
arpl
adc
cld
xchg
sub
cld
inc
push
fildll
cmp
out
sbb
xchg
sub
mov
sbbb
sbb
sub
repz
push
xlat
xor
push
adc
xor
lret
in
cmc
sbb
fildll
xchg
or
enter
orb
mov
mov
cmp
mov
push
fs
pop
rcr
pop
sahf
xor
int
jnp
sub
sbb
fdivrl
in
push
add
mov
mov
add
push
call
push
adc
cld
scas
insl
lret
lahf
add
addr16
and
andl
pop
mov
les
loope
je
sbb
mov
out
lret
mov
or
jbe
sbb
and
mov
mov
jle
out
repz
shrb
add
mov
call
sti
roll
enter
popf
int3
xchg
addr16
add
fwait
mov
jge
or
pop
lahf
fcoms
and
add
int
or
iret
inc
enter
sbb
mov
sub
mov
fists
lret
aad
lods
jne
mov
jle
push
popf
popa
push
adcl
ds
out
sbb
xchg
cmp
jnp
dec
nop
ret
aaa
and
pusha
stc
or
mov
fisubrl
jp
fisttps
push
pushf
pop
cmp
or
sbb
or
xchg
clc
cs
pop
adcl
stc
sti
mov
rcll
xlat
xchg
nop
in
inc
fldt
push
sbb
mov
call
push
push
push
ret
repz
jmp
fmull
xor
in
mov
cmp
or
mov
or
add
xor
repnz
mov
fnstenv
fimuls
push
int
push
lock
xchg
mov
stos
inc
clc
pop
jg
inc
sbb
mov
repz
leave
pop
inc
ret
jo
xor
push
aaa
cmp
mov
leave
cmp
jp
cmp
pop
xor
push
testb
sub
dec
adc
mov
dec
lret
ja
xlat
dec
and
cmp
pusha
stos
out
jg
icebp
inc
mov
js
inc
popf
cmp
and
push
lock
jno
popa
push
fstl
fbld
inc
sbb
je
test
sbb
push
ss
test
sub
mov
enter
daa
out
dec
xchg
mov
xor
sbbb
mov
adc
fsubrs
pushl
icebp
jno
and
stos
sti
sub
shrl
ret
int3
inc
lds
mov
loopne
add
pop
mov
push
adc
adc
and
sbb
dec
sbb
add
call
pop
popa
cmp
cmpsb
jge
clc
xor
jge
jmp
in
jne
pop
data16
add
cld
clc
cs
aaa
testb
test
or
cmpsl
cmpsb
das
idiv
add
inc
leave
rclb
out
jo
inc
fcmovb
xchg
inc
lcall
jle
iret
jmp
ret
lret
arpl
fnstenv
fnstsw
sbb
into
mov
movsb
pop
subb
jbe
jl
inc
pop
pop
mov
lcall
jb
imul
fs
sub
sbb
add
in
ja
fiaddl
xor
or
dec
popf
jle
enter
mov
nop
xchg
mov
dec
mov
adc
popf
cmc
cs
mov
dec
push
or
lds
stos
sub
jnp
push
sbb
jle
mov
stos
jg
mov
or
mov
shr
mov
mov
cwtl
dec
or
jae
push
sbb
cmp
inc
test
pop
addr16
fstpt
inc
insb
mov
out
or
mov
fcoml
imul
xor
movsl
mov
sbb
scas
xchg
and
xor
and
lret
inc
jae
pop
fsub
sub
cmp
pop
rcr
xchg
sub
ret
mov
imul
fsubl
xchg
testb
leave
add
in
les
mov
out
cmp
adc
out
sub
mov
leave
ds
cmp
leave
push
in
movsl
movsl
sbb
hlt
in
pop
call
mov
testl
dec
or
inc
mov
inc
fisttpll
stos
out
pop
neg
mov
jmp
fidivrs
jns
mov
xchg
cmc
jae
outsb
xor
sub
xchg
jnp
sbb
adc
call
test
in
jmp
inc
mov
clc
imul
mov
xchg
femms
add
xchg
xchg
sbb
mov
push
out
ret
sbb
push
divl
mov
lock
mov
in
push
loop
push
lret
in
and
subb
push
sub
inc
ficoml
movsb
insl
dec
je
stos
xor
xchg
push
jg
movsb
inc
inc
jle
xor
dec
push
jp
clc
jl
pop
roll
inc
les
push
xor
xchg
pop
pop
mov
icebp
ss
or
fs
mov
jmp
hlt
dec
sbb
mov
push
add
aas
icebp
dec
dec
in
test
cmp
lahf
jo
pop
inc
cld
or
lret
pushf
fildl
rolb
stc
or
jno
jbe
add
movsb
or
mov
fildl
out
mov
pop
add
cwtl
ret
mov
push
leave
mov
repnz
fldenv
push
shrb
pop
fs
sbb
mov
add
mov
push
into
test
and
xor
jge
popa
arpl
pop
adcb
xor
ja
addb
ja
sahf
outsl
pushf
jg
std
and
cmpsl
push
aam
pushf
adc
fmull
add
call
xor
inc
sahf
mov
xchg
lea
stc
addl
mov
fists
fidivs
xchg
lret
das
repnz
add
out
mov
loopne
cmp
pop
imul
sbb
cmp
out
jnp
daa
cmp
jmp
inc
cs
fcoms
out
xor
stc
lret
inc
sbb
aaa
mov
mov
jns
jge
lret
aaa
lods
pop
test
jno
mov
push
adc
pushf
int
dec
pop
mov
xchg
jnp
les
loope
nop
mov
push
call
inc
or
jge
xchg
mov
cs
jl
push
lret
pop
lock
xor
clc
popl
or
movsl
add
mov
lea
mov
cli
insl
mov
mov
data16
or
and
mov
lock
in
add
mov
mov
into
clc
xor
imul
in
int
mov
in
mov
ret
dec
aad
mov
dec
pop
add
mov
xchg
jmp
xchg
mov
adc
out
test
ret
jmp
shll
dec
mov
leave
inc
pop
mov
sahf
loop
lea
add
int
and
sbb
sbb
lcall
jecxz
cmpsb
nop
xchg
hlt
das
pop
out
rcll
sub
ja
sti
cmp
lret
or
xor
mov
add
fsubrs
xor
xchg
dec
loop
mov
sub
out
adc
fists
movsb
push
or
cmp
xchg
rclb
gs
fimuls
pop
cmc
ljmp
sbb
mov
lock
data16
adc
lods
bound
dec
mov
lahf
fidivs
or
je
aaa
lock
dec
rcll
sub
xchg
xor
sub
out
ds
fadd
aaa
fisubrl
int3
dec
out
test
mov
in
adc
xchg
mov
push
test
cld
pop
icebp
les
fnstsw
inc
test
je
push
ljmp
pop
cli
cmp
and
pusha
jb
daa
std
xor
mov
into
push
test
shl
pop
xchg
xchg
insl
fisubrl
ret
mov
lods
jmp
cli
add
sbbb
inc
and
jle
sar
xchg
add
daa
call
mov
jecxz
dec
mov
jg
pop
fcom
sub
pop
filds
fcomp
inc
out
dec
scas
bound
mov
jg
jmp
inc
jnp
cmpsl
ds
das
mov
lods
and
pop
dec
add
stc
nop
cmpsb
mov
pop
rol
in
inc
and
sub
aad
scas
je
sbb
push
cmp
pop
insb
xchg
mov
ret
inc
rorb
in
mov
or
data16
adcb
push
cwtl
pusha
push
jl
dec
inc
push
pushf
subb
cmp
pop
insb
mov
cs
cmpsl
pusha
sub
cmp
test
insb
dec
or
ret
add
xchg
data16
xchg
inc
lret
pop
negb
sub
pop
jg
jno
test
mov
inc
sbb
dec
push
out
jno
xchg
std
pop
adc
bound
call
movsb
mov
in
dec
iret
iret
cmc
repz
int
fidivs
mov
clc
inc
fistpl
add
or
clc
xor
mov
mov
mov
test
inc
lea
mov
push
scas
lods
jo
dec
fidivl
pushf
cmpsb
pop
sbb
mov
dec
mov
loopne
adc
pop
iret
add
int
mov
inc
lods
adc
cmc
aaa
fwait
addb
push
add
call
push
jle
mov
cwtl
lret
pop
leave
rcll
call
loope
jmp
pop
sbb
cmp
mov
in
aas
into
push
sub
pushf
into
into
aaa
rcll
or
lods
or
sub
js
loope
aaa
dec
lret
enter
xor
adc
jmp
shll
rorb
xlat
gs
sub
imul
and
sub
xchg
inc
jl
enter
int
shrb
jge
icebp
jmp
and
or
add
inc
xlat
push
jmp
pop
cmc
test
arpl
insb
leave
jl
sti
lea
xor
lahf
adc
push
mov
ret
xlat
outsb
cmc
xchg
jb
push
testb
push
stos
pop
push
jle
cmp
popf
scas
lea
mov
sbb
mov
lods
lret
fdivp
das
daa
add
mov
dec
dec
in
xchg
mov
ret
pop
imul
in
ja
scas
mov
loopne
xchg
imul
bound
mov
fstpl
adc
mov
xor
xchg
mov
mov
adc
fcompl
push
dec
add
mov
out
les
in
scas
adc
ss
lods
addr16
xchg
sub
mov
mov
cmp
insb
adc
mov
fimull
or
dec
movsl
inc
adc
inc
gs
xchg
mov
sub
mov
out
jge
jmp
les
int3
jecxz
rclb
push
imul
fidivs
add
jns
jns
lods
stos
mov
pusha
arpl
xor
sub
dec
xchg
and
subl
add
dec
faddl
adc
iret
cmp
sbb
mov
cmpsb
sbb
mov
inc
daa
cli
sbb
out
mov
out
fistps
sub
xchg
pop
cwtl
outsl
push
jae
aas
push
pop
pop
mov
ljmp
inc
lods
es
add
punpckhbw
into
mov
test
xlat
fildll
adc
inc
jg
iret
cltd
jno
dec
xchg
pop
mov
jp
xchg
add
cmpsb
push
adc
lret
and
mov
jns
insb
mov
inc
mov
xor
xor
negl
cmp
dec
in
add
inc
sub
fnsave
push
gs
jae
fsincos
jbe
mov
scas
sbb
mov
aam
and
sub
scas
daa
insb
add
cmp
outsb
test
enter
stos
int
sub
dec
add
out
xor
aaa
dec
pop
pushf
and
int
and
sbb
imul
pop
shll
clc
mov
mov
pop
adc
add
adc
lcall
and
fwait
cmp
pop
push
sub
cmpsb
and
cmpsl
das
clc
out
sbb
pop
inc
out
ret
hlt
bound
sbb
fidivrs
mov
in
xchg
xchg
adc
mov
loopne
mov
or
pop
xchg
inc
dec
sbb
stos
lock
in
sahf
jecxz
sbb
inc
dec
movsl
outsl
mov
cld
movl
jns
in
sub
pop
popf
adc
add
add
insl
in
adc
mov
gs
movsl
outsb
outsb
inc
cmp
aas
inc
cwtl
stos
rcrb
jl
es
enter
push
pop
adcb
push
daa
iret
jb
push
mov
push
fldt
push
add
aas
inc
dec
cld
rclb
push
push
xchg
in
and
out
or
out
push
mov
adc
jae
xor
rcll
inc
lods
pop
in
cmc
pushf
lcall
fldt
xor
arpl
out
xchg
test
insl
loopne
pop
and
mov
ja
clc
rcrl
push
loope
js
cld
xchg
iret
sbb
bound
int
add
mov
mov
les
push
pop
icebp
inc
sub
lcall
out
lods
jbe
leave
addr16
ret
or
iret
rcrl
dec
fisttps
pop
cmc
lahf
push
leave
pusha
js
jo
mov
shlb
push
mov
ret
and
dec
sbb
mov
sbb
sbb
push
push
lods
inc
adc
int3
arpl
push
jmp
subb
aam
mov
stos
cmp
iret
mov
cmp
mov
movsl
add
pop
lock
ret
xchg
cmp
lods
pop
iret
push
add
xchg
cmp
add
popa
call
idivb
addb
out
mov
pusha
enter
pop
cli
mov
cmpsb
add
or
sti
add
add
and
push
mov
mov
add
and
ss
dec
jne
mov
add
bound
mov
inc
orb
xchg
cmp
aas
das
or
mov
mov
movsl
jmp
fwait
scas
sbb
push
mov
imul
hlt
pop
test
mov
sbb
cmpsl
test
sub
cmp
cmpsb
inc
arpl
push
ja
into
jl
lcall
aad
push
inc
dec
adc
adcb
mov
scas
ss
mov
jmp
fwait
sbb
mov
sti
insl
cmp
xchg
ja
push
mov
sub
mov
iret
aas
imul
add
iret
xchg
lock
adc
out
and
inc
test
push
int3
push
mov
jg
stc
mov
movsb
mov
enter
push
sti
pusha
ficompl
pop
or
repnz
repz
rcrb
and
dec
adc
pushf
aas
jle
mov
imul
push
fdivp
pop
mov
and
adc
jmpw
xchg
aaa
or
add
lds
pop
mov
out
inc
cmp
mov
push
fsubrs
cmc
test
cltd
fabs
sbb
push
push
xor
aam
addr16
push
cmp
sub
jae
loopne
sub
mov
int3
nop
insb
and
lret
xchg
leave
inc
scas
xor
sbb
mov
jbe
inc
mov
cld
leave
xchg
loop
pushf
inc
sub
cmp
xor
ljmp
and
mov
test
sbb
stos
ret
pusha
mov
add
lods
fs
call
sub
pop
sti
xorb
lods
rcll
shll
imul
and
incb
sar
push
pop
test
xchg
vcvtps2dq
push
push
and
lods
jae
mov
mov
add
dec
dec
loopne
jno
cmp
das
mov
fs
mov
sbb
and
cmp
fdivrs
push
adc
mov
enter
add
mov
mov
hlt
adc
nop
inc
add
dec
xor
add
lret
mov
clc
ds
gs
fdivrs
push
adc
test
push
add
ret
out
mov
fcompl
dec
or
sahf
fdivrs
dec
je
lea
jo
or
es
cli
ret
pop
daa
mov
sbb
mov
adc
shll
out
addl
insb
mov
and
xchg
push
fisttpl
int
in
or
lcall
mov
mov
lds
repnz
xchg
push
out
rolb
popf
jb
jae
ret
mull
cmp
add
data16
cmp
pop
xchg
pop
cld
and
sub
lock
pop
sti
fsubr
aam
jl
out
imul
negb
push
jno
adc
xchg
aas
jge
pop
std
or
sbb
push
pop
pop
les
roll
scas
xchg
das
fstps
jle
sub
pop
push
inc
loopne
pop
mov
mov
mov
leave
xlat
pop
std
hlt
pop
mov
gs
push
inc
push
pop
std
xor
xchg
inc
inc
sub
scas
mov
std
je
xor
arpl
or
inc
in
push
pop
std
mov
adc
inc
lods
test
mov
pop
lock
rcl
push
sub
jbe
push
cmc
pop
jl
jmp
pop
rorl
int3
mov
pop
ret
pop
popa
icebp
popa
iret
dec
mov
push
mov
roll
rcll
cltd
cmp
pop
out
push
lret
js
jne
cmp
and
mov
scas
gs
fcoml
pop
jne
test
imul
xchg
mov
sti
iret
aaa
lahf
int3
in
mov
adc
or
into
pop
mov
dec
or
into
ds
dec
movsl
xor
lods
fs
fmulp
xchg
dec
sbbb
pop
leave
nop
inc
push
movsb
sub
rcll
hlt
loop
add
cmp
sub
mov
scas
add
xor
push
aad
es
int
pop
cwtl
aas
mov
test
pop
add
je
cmc
xchg
pushf
inc
out
in
in
add
pusha
jle
sub
dec
and
mov
or
je
xchg
cmp
or
adc
mov
repz
into
mov
xor
int
xchg
adc
xchg
std
adc
lods
leave
icebp
jno
into
sbb
cli
xchg
sbb
add
cmp
fdiv
pop
xchg
decb
aam
shll
rcrb
inc
or
add
sub
xchg
cli
mov
lods
into
cld
add
stc
xchg
adc
rol
add
mov
and
pop
xchg
hlt
mov
scas
inc
jp
dec
enter
popf
sbb
or
lret
pop
cwtl
lahf
inc
out
push
cltd
repz
pusha
icebp
into
cmp
mov
test
sbb
cmp
jmp
stos
adc
movsb
dec
popa
repz
mov
lods
xor
add
pop
mov
pushf
adc
hlt
lret
loop
fnstsw
stos
xor
mov
lds
insb
lock
mov
stos
xor
es
dec
adc
pop
adc
mov
cmp
ret
ljmp
rcr
push
test
sub
icebp
push
cld
cmp
pop
xlat
imul
adcb
or
mov
pop
subb
fstpl
repnz
data16
add
jmp
hlt
push
lret
sarl
addr16
or
mov
cmp
jmp
and
fistpll
out
insb
rcrb
movsb
mov
inc
adc
dec
jl
in
jo
mov
cs
mov
lods
sub
je
in
outsb
divb
fcompl
mov
nopl
push
aam
pop
gs
iret
aaa
out
imul
mov
lods
and
push
push
aaa
inc
mull
sub
pop
ret
sub
movsb
das
mov
xchg
mov
clc
jg
scas
cwtl
in
sbb
lds
fwait
out
pop
stc
jbe
stos
sbb
ret
jae
sbb
outsb
out
stos
push
mov
enter
cmp
je
sti
pop
pop
fdivrs
subl
sbb
mov
or
enter
pop
sub
xchg
inc
in
xor
jecxz
cmc
jg
outsb
cmp
testb
cmp
mov
mov
lods
mov
ret
or
fmulp
mov
lods
pop
add
add
addr16
cmp
leave
in
in
outsl
loope
push
imul
mov
xchg
xor
sub
ds
mov
sub
cli
pop
in
fistpll
fnstsw
push
cltd
aaa
mov
dec
or
cmpsl
sbb
ret
inc
adc
dec
stc
pop
std
pop
int
mov
jnp
lods
mov
jne
lods
fldl
sub
xchg
cmp
cmp
ds
cld
test
sub
inc
inc
or
jne
jmp
gs
xchg
sarb
rorb
mov
mov
push
ja
repnz
xor
pushf
push
sub
pop
idivl
aaa
cmp
inc
fistpl
lods
mov
fidivrl
sub
lock
push
jmp
xchg
mov
ficompl
or
push
ffree
popa
jmp
mov
stos
push
mov
mov
push
lock
mov
jp
mov
dec
jbe
pop
add
gs
cmp
jmp
out
xchg
jp
cld
orb
sub
mov
lret
xchg
add
push
mov
mov
orl
mov
ret
ja
push
xchg
xlat
sarl
fbld
inc
dec
lahf
icebp
sahf
orl
gs
jecxz
xchg
cld
xchg
repnz
outsb
xchg
ret
lret
or
or
sbb
xor
iret
int
movsl
rcrb
inc
xor
das
xchg
mov
sbb
mov
push
shll
xchg
rorb
les
je
aad
arpl
sub
mov
xor
mov
jbe
loopne
rorb
lods
mov
test
mov
pop
lret
push
movsb
xor
dec
shrl
inc
mov
pushf
jecxz
in
mov
das
mov
fdivl
cmc
ret
stos
cli
popa
adc
mov
jle
imulb
and
fs
pop
xchg
push
xchg
dec
add
addr16
fdivrs
cmpsb
and
sbb
sub
adc
and
mov
sarl
xor
int
popa
in
sbb
dec
cmpsl
ss
mov
xor
xchg
out
fimuls
rol
xchg
jg
aas
fwait
push
adcb
cmpsb
xor
loop
mov
jbe
test
aaa
mov
cmpsb
dec
or
jae
inc
je
popf
aaa
outsb
push
iret
push
je
pop
dec
es
xchg
dec
or
adcl
or
outsl
push
xor
mov
pop
ljmp
mov
arpl
add
cmp
sub
rorl
xor
into
decb
leave
sbb
dec
or
inc
iret
lea
xor
lret
add
inc
ja
repz
adcb
push
add
popf
ds
sbb
jb
inc
pushf
cmp
test
mov
lcall
or
pop
jecxz
aaa
test
nop
sub
add
and
mov
inc
xchg
jae
aad
inc
xchg
adc
popf
jne
addb
pop
cwtl
mov
mov
btc
xchg
dec
pop
jmp
xchg
xchg
stos
push
rcll
leave
inc
or
into
repnz
mov
pop
rcrl
flds
or
leave
pusha
bswap
cmp
sub
jl
out
add
and
jne
nop
ljmp
inc
arpl
leave
fwait
lahf
cmp
adc
fcoml
lret
cmp
movsb
xchg
mov
in
mov
jmp
sbb
popa
movsl
dec
out
repz
setp
push
push
dec
movsl
sub
cmp
and
inc
movsl
stos
sub
push
push
jbe
or
loope
insb
out
mov
sub
dec
push
mov
cwtl
jl
out
ss
fdivrp
shrb
add
mov
push
jp
pop
xchg
lods
sarb
shll
add
push
pop
pop
adc
std
and
scas
js
test
and
mov
jge
pusha
push
add
leave
pop
insb
inc
out
cmp
inc
push
inc
and
cmp
sub
and
in
push
outsb
nop
pop
sarb
outsl
call
gs
inc
push
pop
jl
push
xor
pop
cld
mov
movsb
fidivrl
xchg
outsb
mov
sub
mov
and
and
addr16
push
in
out
test
push
xchg
sbb
sbb
push
adc
xchg
loopne
xor
fstpl
mov
stos
sub
out
sbb
leave
repz
push
mov
cltd
and
int
sub
cmp
push
adc
cmp
inc
adcb
pop
cld
aas
std
das
lods
sbb
je
xor
xor
push
add
stos
cld
pop
imul
outsl
jae
dec
or
push
mov
jae
es
xchg
aas
sarb
jo
push
or
scas
sbb
inc
dec
or
fs
cli
pop
sbb
jmp
testb
pusha
fildl
leave
jg
push
sbb
shl
or
repz
push
rorb
out
lds
repnz
mov
pop
insb
and
movl
inc
dec
in
movb
addr16
jo
mov
shll
add
iret
xchg
cld
sub
mov
xor
cmp
stos
dec
lret
xchg
cmc
mov
stos
xor
and
jg
rolb
mov
data16
xor
xchg
inc
xchg
sahf
mull
rolb
fsubr
dec
mov
jg
arpl
das
mov
js
sbb
adc
dec
xchg
aaa
cmc
aas
insl
testb
addl
addr16
out
inc
mov
scas
ret
xchg
mov
xor
out
add
pushl
in
dec
scas
xor
sbb
sbb
jb
push
stc
daa
test
xchg
mov
inc
or
xor
sbbb
push
mov
cwtl
cmp
fwait
xchg
rcr
lret
and
pop
xlat
aaa
mov
push
and
addr16
pop
cltd
jae
or
leave
ja
iret
hlt
popa
ljmp
jns
outsb
pop
ret
shll
sarl
mov
mov
enter
pop
test
sbb
pop
xchg
rcl
xchg
rcrb
arpl
fidivrl
jns
inc
nop
mov
scas
add
add
ret
pop
ret
xchg
lcall
dec
clc
jge
xor
sarb
in
sahf
inc
imul
scas
xor
cs
mov
pop
jns
pop
add
scas
in
loope
dec
adc
add
xchg
cmp
lahf
rclb
in
call
std
popa
pop
jp
xchg
mov
sbb
mov
and
xor
and
mov
mov
out
dec
mov
insl
stos
fsubrs
movswl
rcrl
hlt
gs
or
mov
iret
lea
lods
dec
or
ss
sub
xorl
aas
fbstp
xchg
and
jmp
testl
lea
xchg
rcr
mov
dec
jp
or
lahf
loope
xlat
cmc
outsl
repnz
add
pop
ret
rorb
sbb
xor
add
sub
aam
enter
sbbl
lret
xchg
mov
pop
add
movsl
mov
sti
aas
jne
push
in
push
in
mov
jo
stc
mov
dec
mull
sti
es
adc
dec
push
add
adc
iret
fsts
adc
sbb
mov
inc
pop
stc
add
cmp
pop
out
loop
stc
sub
stos
xchg
notl
mov
enter
mov
xor
nop
mov
mov
dec
adc
cmpsl
sub
xchg
pop
add
imul
loope
fcoms
lods
popf
and
shrl
mov
pop
int
bound
iret
cmp
loop
and
add
ss
pop
loopne
in
addl
es
mov
enter
fisubs
mov
adc
mov
and
mov
and
js
xorb
loop
test
ret
incb
lahf
inc
pop
push
pop
add
nop
mov
loope
push
mov
mov
lret
loope
sbb
leave
mov
test
push
std
cmpl
pop
jnp
mov
xlat
outsl
out
jecxz
ja
test
jp
pop
arpl
les
nop
xchg
inc
xchg
les
ret
cmc
mov
in
adc
ja
pop
inc
sahf
inc
mov
scas
xor
dec
pop
test
mov
cmpsl
daa
out
push
stc
repnz
cmp
ss
imul
jl
cmp
dec
xchg
jl
xor
rolb
mov
mov
pushf
cmp
aad
mov
sbb
pop
add
inc
xrelease
cwtl
out
popa
stc
icebp
pop
sbb
mov
push
push
enter
icebp
lods
fiadds
enter
icebp
adc
shr
mov
outsl
or
add
js
jne
lods
sub
insl
inc
push
aad
or
and
jge
xchg
cmp
lret
iret
roll
jae
push
add
lret
xchg
mov
pop
fnsave
cmp
xor
or
jge
cmpsb
mov
aaa
pop
or
xor
test
and
and
add
dec
pop
dec
lods
decl
push
les
or
fisttpll
or
lret
andb
pop
in
popf
inc
stos
icebp
or
out
mov
cmp
test
jle
pop
inc
adc
ret
lret
repz
mov
sahf
aaa
mov
pusha
negb
fcomps
mov
ja
inc
fmull
cltd
mov
scas
pop
jle
push
xlat
jns
xorb
sub
or
cmp
jle
dec
adc
push
fyl2x
sub
pop
cmp
sub
inc
or
add
and
push
xchg
push
xor
xchg
mov
ret
hlt
jge
call
repz
and
push
add
cmp
xchg
mov
sbb
inc
stc
pop
in
push
and
and
pop
inc
fimull
les
aad
cld
fs
add
lock
in
gs
div
pop
pop
nop
jl
iret
xchg
test
jmp
mov
js
rorl
and
repnz
xchg
rcll
lret
inc
rcrl
xlat
lret
dec
cmpsb
cmp
jge
enter
cmp
mov
mov
pop
mov
insl
jbe
xchg
jl
inc
push
or
in
xlat
call
test
xchg
mov
dec
int3
sbb
mov
mov
imul
sbb
test
inc
sub
ret
ljmp
sub
add
mov
cmpsb
fnstenv
sbb
mov
mov
pop
insb
and
dec
adc
sbbb
cmpsb
add
roll
fsubp
addr16
notl
mov
jno
shrl
push
sti
lret
or
fdivrs
mov
in
int3
xchg
cmp
and
adc
andl
sarl
mov
mov
xchg
cmp
outsl
pop
mov
dec
cmc
out
ds
stos
xor
adc
test
sub
popa
inc
or
jmp
pop
mov
addr16
xchg
fwait
inc
pop
dec
push
incl
cld
in
in
insb
jmp
mov
mov
and
xlat
jp
cmp
jb
loop
mov
mov
pusha
ret
cld
ret
jge
sbb
pop
jne
push
mov
cmpsb
test
xor
ljmp
insl
repnz
jle
loope
adc
mov
aas
mov
jg
fadds
and
fs
jge
sbb
add
test
pop
pop
es
xchg
nop
mov
fmuls
into
test
jae,pt
pop
cli
mov
bound
movsl
adc
rorl
push
add
jne
shll
fbstp
add
dec
or
cmc
and
sub
imul
mov
xor
xchg
mov
push
clc
xchg
adc
mov
inc
sub
xchg
cltd
pusha
jmp
mov
xchg
ds
test
mov
cmp
add
sbb
lods
sub
rcll
push
lds
movsb
pusha
out
pop
and
add
mov
cmpsb
dec
loop
inc
push
popf
jno
push
dec
xchg
or
sub
gs
push
dec
loopne
mov
imul
jecxz
nop
mov
mov
popa
cmpsb
mov
add
ret
pop
iret
xchg
xchg
sbb
xchg
call
decl
iret
adc
cmpsl
add
stc
inc
pop
jmp
fwait
jnp
sub
mov
mov
jp
pusha
shrb
xchg
sbb
jno
ret
or
jmp
inc
pop
popa
in
cmpsb
xchg
fldl
mov
stos
rorl
inc
inc
pop
dec
mov
loope
and
pop
add
xchg
sbb
rorl
enter
lods
out
jo
aad
in
lods
sub
mov
aas
lahf
adc
loope
lret
xchg
push
inc
push
xor
jno
daa
jb
jg
fwait
cmp
push
test
mov
pop
mov
push
cs
sub
mov
sahf
cmp
mov
fsubp
xlat
pop
aas
xchg
inc
push
sub
stos
lods
in
arpl
inc
mov
jbe
lahf
xchg
inc
enter
inc
adc
cmpl
mov
push
jp
aad
jg
mov
dec
sarl
or
jne
idiv
pop
insl
addr16
lea
roll
aam
mov
test
sub
rcl
pop
add
pop
test
jge
aad
xor
cmpsl
mov
mov
mov
pop
fucom
je
dec
mov
pusha
inc
sarl
jge
setbe
push
leave
lods
lret
mov
fwait
mov
jo
enter
ret
outsb
push
mov
mov
shlb
mov
xchg
xchg
xor
inc
mov
stos
inc
push
mov
lods
sarl
bnd
sbb
je
aad
mov
loope
xor
xchg
movsl
test
cmc
pop
loopne
fdivrs
cld
jb
xor
add
jae
test
lock
add
push
notl
movsl
sub
leave
add
xchg
dec
adc
cmp
stc
mov
cltd
inc
in
jbe
int3
iret
xchg
inc
dec
dec
adc
xchg
loope
mov
push
clc
dec
movsb
and
icebp
cmp
shl
imul
push
ss
mov
psrld
lods
sarb
xchg
and
jne
add
bound
fxch
ja
mov
int
lods
cmpb
fsubs
and
aas
aaa
mov
andb
in
jb
or
mov
aam
fsubrl
jo
outsb
sub
popf
jmp
xor
cmp
jo
jne
and
aam
in
pop
adc
jg
dec
sbb
jo
sarb
xchg
pushf
pop
cld
out
scas
sub
mov
mov
fisttpl
or
sub
int
ja
push
add
push
fs
pusha
pop
mov
fmul
xchg
cmp
in
je
cli
pusha
fldt
aas
decl
jg
or
push
shrl
pop
mov
ds
or
xor
adc
aaa
xchg
cmp
fs
das
scas
std
mov
lods
xor
ficoms
shrb
gs
in
lea
add
pop
add
pop
cmp
int
sti
ljmp
cmp
jl
mov
outsl
or
mov
aas
push
outsb
adc
cmc
mov
fidivl
imulw
addl
js
loopne
stc
pop
scas
cli
xchg
inc
loopne
mov
jne
adc
dec
cld
xchg
jnp
and
jl
sub
xor
and
test
sahf
or
repnz
mov
pop
jg
lods
sub
insb
xchg
mov
rcll
fnsetpm(287
jno
push
cmc
popa
xor
sub
xchg
ror
arpl
sahf
or
loope
inc
push
adcb
fwait
sbb
lret
ss
xchg
cmp
jmp
sahf
test
mov
sbb
mov
jnp
xchg
push
orb
mov
divb
mov
lret
inc
flds
sbb
add
cwtl
rorl
xchg
cmp
in
xor
mov
dec
mov
pop
mov
lret
mov
cmpsb
add
adc
pop
mov
mov
popa
repnz
add
push
scas
mov
les
enter
mov
adc
fists
push
add
xchg
inc
pop
jl
sub
orl
jp
test
repz
aaa
and
aaa
iret
ds
pop
add
call
jo
inc
or
xchg
cmp
mov
pop
pusha
loope
sarl
mov
test
inc
or
add
fnsave
stos
inc
adc
or
sub
dec
or
aas
jbe
mov
test
test
stos
loopne,pn
push
add
call
push
xchg
mov
outsl
mov
ficoms
sbb
xor
jne
out
and
push
in
loope
pop
std
pusha
jnp
scas
xor
jo
mov
movsl
sub
shl
push
mov
addr16
negb
jae
inc
mov
jno
mov
adc
in
repnz
mov
pushf
lea
testl
push
inc
ret
cwtl
jb
insl
mov
cwtl
inc
out
adc
push
hlt
pop
add
mov
sub
mov
out
in
sbb
cmp
mov
lods
test
mov
sti
int
std
test
pop
xor
mov
insl
cs
jne
loop
loop
push
pop
mov
sti
mov
bswap
or
cmp
and
add
push
push
add
pop
dec
pop
mov
loopne
out
movsb
jg
pop
mov
mov
mov
js
ret
stos
push
cmp
test
sub
sahf
inc
addr16
or
jns
push
std
daa
outsl
pop
lret
push
leave
xor
pop
or
pop
dec
or
fnstsw
roll
in
adcl
xchg
pop
xor
in
addr16
mov
test
pop
mov
mov
andb
cmp
int3
xchg
popf
inc
arpl
lods
lds
mov
mov
dec
or
lods
bswap
push
iret
adc
mov
loope
scas
xchg
push
add
pusha
repnz
cwtl
or
roll
lret
cmp
sbbb
xor
fsub
push
aam
add
mov
and
subl
sub
lds
fs
push
mov
dec
or
mov
sbb
repnz
fidivrl
in
sub
push
push
les
xlat
subb
adcl
add
sbbl
lods
movsl
xorl
mov
or
mov
xor
sub
pushf
and
mov
into
mov
xor
xlat
or
std
mov
jns
adc
pop
mull
jle
push
jle
fs
mov
push
push
pop
add
int3
inc
rclb
dec
stos
daa
jg
out
insb
ljmp
nop
mov
movsb
fwait
aaa
cltd
ss
push
jbe
push
push
xor
scas
sub
es
insl
jbe
les
xorl
sub
outsl
cmp
or
push
stos
sub
out
pop
mov
dec
cmpsl
mov
jl
inc
adc
arpl
adc
rorb
mov
icebp
add
je
push
lds
inc
or
imul
icebp
push
mov
pmullw
addl
out
jb
sub
fs
push
test
fidivrl
ljmp
loopne
jo
movsl
repz
lods
pop
movsl
inc
push
inc
mov
or
fisttps
std
push
mov
enter
cmp
add
addr16
jbe
in
jae
icebp
pop
cli
adc
sub
pop
add
sbbb
lock
fadds
out
jnp
xchg
inc
fldenv
xor
mov
push
jecxz
sub
jno
mov
cmp
cmpsl
pop
cli
rcrb
add
or
lahf
pop
sbb
test
mov
test
mov
orb
xchg
sbb
jmp
ficompl
lods
xor
push
notl
mov
hlt
fs
clc
sbb
fstps
jmp
out
rorb
pop
xchg
jecxz
iret
push
push
sub
inc
jnp
jne
fs
mov
mov
cs
xor
mov
pop
rorl
pusha
mov
mov
test
xor
xchg
adc
adc
or
out
rclb
cs
push
pop
add
leave
sbbl
sahf
mov
mov
mov
test
jecxz
sbb
xchg
pop
push
jae
pop
lea
scas
mov
int
mov
lock
push
movsl
divb
scas
push
scas
push
push
xchg
inc
ret
and
mov
sbb
roll
fiadds
in
sti
mov
ret
inc
adc
inc
jnp
pop
out
std
push
mov
pop
icebp
add
pop
daa
lods
pop
sbb
mov
cmp
inc
sub
xchg
push
sub
lahf
cmp
mov
mov
mov
cmc
push
or
addr16
add
xlat
js
imul
mov
lods
inc
or
push
stc
adc
mov
inc
lret
mov
mov
lea
lea
pop
cli
pop
sahf
adc
jns
push
dec
filds
adc
sub
sti
outsb
hlt
loop
lods
jge
mov
sarb
dec
in
jo
aam
nop
mov
mov
push
mov
push
test
push
out
sub
and
jecxz
jb
adc
add
push
mov
pop
fsubrs
pop
ss
xor
and
fwait
daa
leave
lea
sub
lcall
cs
jae
outsb
in
pop
sarb
mul
je
xchg
jb
sbbl
and
xor
mov
inc
call
filds
loope
xchg
lret
sbb
adc
lret
mov
adc
gs
mov
adc
cmp
sub
pop
sbb
and
ret
es
push
jg
push
pop
xor
icebp
push
push
out
adc
xor
mov
inc
adc
stos
adc
or
adc
xor
ja
je
jnp
mov
data16
insl
push
ss
cmp
dec
or
pop
adc
dec
pop
das
mov
inc
fcom
sub
rclb
sarl
xor
rcll
ljmp
jle
and
dec
adc
ss
xchg
dec
nop
jns
es
push
jmp
pop
data16
dec
out
add
lcall
stc
cli
mov
mov
ss
cmp
pop
mov
push
int
aad
out
mov
inc
adc
mov
fwait
xor
repnz
mov
mov
mov
mov
sub
ret
xor
adc
jle
mov
sarl
dec
adc
jno
sub
push
push
cld
aam
arpl
dec
push
mov
lahf
jg
loop
add
shl
push
cld
dec
add
rcl
lcall
fildl
sbb
dec
push
test
push
shlb
repz
insl
cs
push
or
enter
mov
bound
leave
xchg
cmp
aad
xor
rcrl
insl
sub
cmp
adc
popa
cmp
or
sti
mov
lods
mov
fabs
insl
sub
shrl
pop
hlt
mov
loopne
mov
mov
sbb
mov
sub
ret
or
mov
mov
ret
xchg
sbb
push
mov
test
imul
or
cmp
cltd
inc
add
in
push
sbb
loop
mov
xor
push
in
leave
sub
ljmp
lods
cmp
mov
add
cmpsb
cmp
push
jne
pop
cmpsl
aaa
in
subl
jns
mov
mov
dec
fsubrl
mov
lahf
cs
fstpl
cmp
sti
mov
pop
repz
rolb
adc
mov
mov
dec
cmp
pop
aad
nop
push
sti
xchg
push
mov
mov
jno
mov
add
test
hlt
push
xor
xchg
dec
in
addr16
cltd
cli
insb
add
xchg
sub
dec
mov
jg
mov
inc
mov
iret
xchg
repz
pop
and
inc
in
js
or
cmp
sub
mov
and
fidivrs
data16
xor
test
and
adc
cwtl
das
addr16
rclb
mov
mov
imul
cld
xchg
shrl
repnz
sbb
mov
cmp
jne
lds
xchg
push
in
enter
pop
jmp
push
lods
cmp
sub
mov
decl
cmpsl
ds
loop
gs
lds
in
andl
jp
mov
mov
dec
fisubrl
mov
sahf
sub
fstpl
ds
jle
sti
scas
adc
inc
rolb
adc
mov
xor
jbe
push
test
mov
jae
pop
insl
sbb
xchg
dec
mov
mov
outsl
sbb
xor
aaa
into
repnz
xor
xchg
push
in
inc
cmpsl
dec
out
gs
xchg
stc
insl
add
mov
mov
jle
mov
ds
test
xchg
repnz
pop
and
in
test
inc
in
ja
or
aaa
cwtl
add
mov
and
fdivrl
insl
std
data16
cs
pop
hlt
rorb
and
mov
xor
rclb
mov
mov
fcmovnbe
insb
or
repz
sbb
mov
cmp
jae
das
movb
dec
in
out
or
jns
add
int3
mov
decb
test
push
loopne
adc
pop
movsl
xor
andl
jnp
xchg
mov
dec
fsubrs
mov
popf
sub
pop
mov
fs
lods
adc
inc
into
sbbb
arpl
and
xor
je
push
cmpsb
or
jae
pop
xlat
outsb
mov
sti
xchg
dec
scas
cmc
mov
insl
sbb
xor
xor
test
push
in
inc
cmpsb
push
out
arpl
clc
outsb
add
jmp
or
inc
rcrb
data16
icebp
enter
in
test
inc
out
jbe
or
xor
push
sub
xchg
and
fidivrl
inc
xlat
insb
sti
data16
sub
pop
cmc
mov
loopne
adc
mov
lcall
xchg
jne
fcmovbe
insl
or
cld
xchg
int
hlt
mov
sbb
mov
cmp
jno
xor
add
push
in
les
je
pop
js
add
lret
mov
std
mov
inc
push
fmulp
adc
pop
movsb
xor
andl
jl
test
mov
dec
sub
pushf
sub
pop
mov
fs
stos
maxps
inc
int3
sbbb
popa
jge
xchg
pop
mov
xor
jb
push
movsb
pop
mov
je
pop
fsubrs
sbb
xchg
dec
lods
testb
add
iret
out
push
xor
orl
out
inc
movsb
push
call
xchg
imulb
sub
lea
or
inc
into
pop
shlb
out
leave
pusha
and
out
je
or
pushf
push
sub
test
and
fdivrs
inc
fsubrs
addr16
sub
sbb
fidivrs
adc
fwait
xor
rcrl
mov
jbe
fcom
outsb
or
cmc
mov
sbb
mov
cmp
outsl
shll
enter
out
ret
out
jecxz
or
jbe
add
ss
sub
mov
sti
mov
inc
dec
fmul
pushw
jo
pop
mov
ret
out
cmc
orb
mov
add
rolb
inc
ficoms
inc
fsubr
js
cld
test
lret
cld
pop
jle
xchg
sbb
pushf
xor
jo
push
mov
ret
fidivs
pop
fnstenv
push
std
xchg
dec
stos
testl
das
mov
xor
orl
push
call
xchg
hlt
outsl
push
es
sub
inc
lea
pop
mov
cmp
shrl
in
leave
pusha
pop
scas
out
xchg
inc
out
jb
push
movsl
xor
sub
test
and
xlat
aaa
inc
fsubrs
push
idivb
fdivrl
push
sahf
movsb
cmp
das
fwait
xor
ret
cmpl
jbe
xlat
outsb
or
cmc
mov
sbb
sbb
adc
outsb
iret
xor
add
dec
out
loop
or
cmpsb
xor
mov
stc
mov
inc
dec
fcmovnbe
addr16
cs
test
out
repz
inc
shrl
roll
mov
push
mov
data16
test
pusha
idivl
test
sti
pop
jle
sbb
cmp
pushf
xor
outsl
rcrl
mov
jbe
push
fnstenv
adc
testl
sub
dec
xor
jg
pop
lock
ja
xchg
repnz
push
and
xchg
sub
inc
lea
push
mov
cmp
shrb
jmp
pusha
sbb
ds
jo
xor
sub
mov
xor
imul
mov
fidivrl
or
movsl
cmp
sub
ret
pop
and
loope
jbe
xlat
outsb
push
cwtl
call
pop
jmp
mov
jnp
stos
lods
cmp
xor
decb
push
out
loope
push
adc
add
lds
mov
fcmovbe
push
sahf
sub
out
icebp
orb
inc
shrb
ret
and
xchg
and
loopne
mov
fld1
jbe
cmpsl
or
cmp
test
pop
jg
lea
movsb
cmp
popf
xor
outsb
ret
add
repz
fidivl
adc
xchg
inc
cmpsl
clc
fldenv
mov
cli
push
lods
sub
xor
jge
pop
icebp
cmp
pop
js
nop
lock
and
mov
aaa
xchg
lods
inc
enter
mov
lret
lods
icebp
mov
cmp
jg
decl
cmpsb
xor
sub
mov
aad
inc
fldenv
imul
mov
fnstcw
or
pushf
xor
ret
pop
and
loope
jne
fsubrs
xchg
call
pop
ljmp
stos
cmp
shrb
xor
std
mov
mov
loopne
push
adc
push
mov
les
dec
mov
push
popf
sub
xchg
call
movsb
mov
pop
sahf
inc
shrl
ret
and
loopne
mov
jne
cmpsb
or
cmp
test
pop
adcb
sbb
fildll
pop
lahf
add
ja
push
adc
xchg
inc
cmpsb
stc
nop
fsubs
mov
stc
pop
scas
sub
xor
icebp
cmp
push
ljmp
jno
and
es
mov
ss
lods
inc
push
shrl
call
icebp
mov
cmp
subb
cmpsb
das
popl
sahf
rclb
and
dec
loop
xor
fs
imul
mov
xchg
jp
jg
or
xor
out
ret
pop
and
push
mov
loope
je
fnstenv
xchg
call
push
jmp
adc
shrb
lret
pop
lock
fbstp
adc
pop
mov
ret
mov
mov
lods
inc
dec
fcom
push
pushf
sub
xchg
jmp
movsb
scas
adc
lahf
inc
shrb
ret
es
push
mov
je
movsl
pop
arpl
cmp
test
pop
sbbl
dec
lods
lahf
fisubrs
sahf
mov
ja
push
adc
xchg
inc
movsl
stc
nop
xlat
sbb
clc
pop
scas
sub
xor
icebp
cmp
push
ljmp
jno
and
es
mov
ss
lods
inc
push
shrl
out
bound
stos
icebp
mov
cmp
subb
das
mov
sahf
mov
loopne
mov
aam
inc
fisubl
imul
mov
xchg
jp
jg
or
xor
out
ret
pop
and
push
mov
loope
je
fnstenv
xchg
call
push
jmp
adc
shrb
lret
pop
lock
fbstp
adc
pop
mov
ret
hlt
test
inc
inc
fcom
push
fwait
sub
xchg
jmp
movsb
scas
invd
lahf
inc
shrb
ret
es
push
mov
frstpm(287
je
movsl
push
arpl
aaa
movb
mov
movsb
cmp
lahf
sahf
mov
ja
push
adc
xchg
inc
movsb
stc
nop
sbb
notl
scas
sub
xor
icebp
cmp
push
ljmp
jno
pop
mov
sub
jb
mov
ss
lods
inc
lds
push
out
bound
stos
icebp
mov
cmp
subb
cmpsb
das
lea
sahf
mov
fbld
loop
xor
cmc
imul
mov
xchg
jp
jg
or
xor
out
ret
pop
and
push
scas
inc
loope
je
fnstenv
xchg
call
push
jmp
adc
shrb
lret
pop
lock
fbstp
adc
pop
mov
rorl
mov
lods
inc
inc
fcom
push
lcall
sub
or
lahf
aas
shrb
ret
es
push
mov
fnsetpm(287
je
movsl
add
test
push
sbbl
dec
stos
lahf
fsubrl
sahf
std
mov
ja
push
adc
xchg
inc
mov
sbb
scas
daa
mov
xor
icebp
cmp
push
ljmp
jno
push
mov
sub
jno
mov
ss
lods
inc
les
push
in
bound
stos
icebp
mov
cmp
subb
cmpsb
das
mov
sahf
mov
fisubs
loop
xor
popa
cmc
imul
mov
xchg
jp
jg
pop
pushf
movsl
cmp
sub
pop
and
scas
inc
loope
je
fnstenv
xchg
call
push
jmp
adc
shrb
lret
pop
lock
fbstp
adc
pop
lahf
xor
and
mov
lods
inc
inc
fcom
push
cltd
sub
xchg
jmp
movsb
scas
or
sub
add
mov
push
mov
fninit
je
movsl
add
cli
xor
push
sbbl
dec
test
ret
cld
mov
ja
dec
adc
xchg
inc
mov
sbb
scas
es
xor
icebp
cmp
push
ljmp
jno
sbb
ds
es
mov
ss
lods
inc
ret
push
shrl
in
bound
stos
icebp
mov
aaa
jmp
cmpsb
das
mov
sahf
mov
frstor
loop
das
inc
fisubl
imul
mov
xchg
jp
jg
push
pushf
movsl
cmp
daa
popf
xor
out
ret
pop
and
push
lods
inc
loope
je
fnstenv
xchg
call
push
jmp
adc
shrb
lret
pop
lock
fbstp
adc
sahf
xor
and
mov
lods
inc
inc
fcom
push
cwtl
sub
xchg
jmp
movsb
scas
or
lahf
cmp
pop
es
push
mov
fnclex
je
movsl
add
xor
test
push
sbbl
dec
test
fisubrl
sahf
sti
mov
ja
dec
adc
xchg
inc
mov
sbb
scas
and
inc
xor
icebp
cmp
push
ljmp
jno
sbb
xchg
sub
outsl
add
dec
ss
lods
inc
ret
push
jecxz
bound
ss
cmpsb
das
mov
sahf
mov
fsubl
loop
cs
ficompl
imul
mov
xchg
jp
jg
add
es
xor
out
ret
pop
and
push
lods
inc
loope
je
fnstenv
xchg
call
push
call
push
lods
movsl
cmp
shrb
xor
testl
push
adc
or
mov
mov
mov
scas
inc
inc
xlat
shrl
gs
arpl
mov
or
mov
add
mov
push
mov
fsub
jae
movsb
add
lds
sbb
cmpsl
mov
pop
popf
cli
mov
ja
dec
fdivl
adc
xchg
inc
mov
sbb
scas
and
cmp
jmp
or
cmp
js
mov
jb
sbb
nop
daa
outsb
add
inc
rcll
mov
int3
arpl
icebp
mov
xor
mov
lahf
mov
mov
shrl
imul
mov
xchg
jns
adcb
fwait
movsl
cmp
and
ret
pop
and
push
stos
inc
loope
jae
fidivl
xchg
call
push
out
mov
jae
scas
movsb
cmp
shrb
xor
lock
fnsave
punpckhdq
pushf
xor
daa
out
xorl
inc
shrl
fs
xchg
sub
xchg
jmp
jmp
or
mov
lcall
lea
dec
loope
scas
inc
fstp
jb
jmp
les
sbb
mov
pop
pushf
clc
mov
js
dec
fnsave
add
shlb
mov
icebp
sbb
out
aaa
into
je
pop
repnz
jns
mov
jae
sbb
xchg
sub
dec
xor
aam
xchg
int
adc
jmp
gs
adc
mov
fldenv
mov
shrl
inc
fcompl
add
arpl
scas
inc
mov
ja
sbbl
lret
and
pop
push
ja
push
test
lret
cld
xchg
add
dec
in
mov
jno
scas
mov
ret
ss
mov
mov
fidivrl
or
jae
lcall
sub
xorb
rcl
imul
mov
and
push
movsl
stos
or
mov
cld
pop
sub
mov
inc
outsl
imul
das
ret
xchg
cmc
push
sbbl
push
cmpsb
cmp
aad
les
idivb
jns
dec
fnsave
add
into
bound
mov
out
sbb
out
aaa
into
jb
pop
repz
jp
mov
jae
pop
lods
cwtl
das
fistpll
xchg
sub
mov
xor
aad
test
int
adc
jmp
arpl
adc
mov
das
jge
daa
mov
shrb
inc
fcompl
imul
jl
cli
lods
inc
mov
jbe
sbbl
lret
ss
jmp
pop
sbb
jecxz,pt
jo
xchg
add
dec
jecxz
mov
outsl
sbb
shlw
xacquire
mov
fnstcw
or
or
mov
mov
mov
mov
ds
push
pusha
into
gs
and
in
and
test
lret
sti
pop
sub
mov
jecxz
stos
inc
outsb
push
mov
ret
hlt
dec
sbbl
adc
mov
pop
lcall
jp
inc
fnsave
add
int3
popa
and
push
mov
aad
aas
aaa
into
jo
pop
hlt
aaa
xchg
push
in
ret
adc
lods
cltd
xor
ss
sub
mov
xor
aad
test
int
repz
xor
andb
test
test
mov
jl
daa
mov
iret
sub
pop
lock
jnp
cli
lods
inc
mov
jne
sbbl
enter
push
jmp
mov
jp
fdivl
popl
cwtl
rcrb
xchg
dec
loope
mov
outsb
sbb
shlb
icebp
test
mov
push
in
inc
xlat
jns
or
or
mov
mov
scas
or
push
pop
iret
xchg
and
mov
in
test
jbe
cmpsb
cmpsl
add
sub
rorl
dec
insb
push
sahf
sti
data16
sub
mov
repnz
test
jg
cmpsl
ds
mov
lds
rclb
jecxz
in
inc
fidivs
or
cld
xchg
lret
pop
and
sbb
ds
outsl
add
hlt
xor
push
jnp
mov
je
adc
cltd
xor
xor
mov
das
mov
insb
sbb
gs
movsb
repz
das
in
andl
test
orl
mov
das
jp
sub
int
inc
fstpl
imul
jp
dec
and
xchg
dec
mov
shlb
xchg
notb
jmp
adc
sarb
subl
loope
cmp
aam
jno
pop
push
fidivl
leave
gs
test
enter
add
dec
out
mov
and
cmp
dec
adc
icebp
loope
rcll
loop
ret
jnp
xor
leave
mov
insl
jle
sub
mov
adc
xchg
xchg
sub
add
je
cmp
negb
fs
xlat
adc
shl
mov
out
int
fsubrs
jle
fsts
jno
aaa
cmc
inc
jb
mov
cld
mov
jg
scas
adc
and
out
cmp
or
dec
jle
sub
fs
mov
sub
jo
enter
xchg
bound
or
and
pop
or
aaa
xchg
fisubl
xchg
data16
es
repnz
sub
and
xchg
insl
dec
nop
sti
shl
rclb
fcomps
xchg
and
lcall
push
pop
sbb
stos
add
mov
aas
inc
cmp
iret
cmp
sahf
cs
jno
push
mov
xor
mov
mov
mov
push
push
inc
ja
ljmp
cli
xchg
movsb
enter
jmp
ds
xor
mov
jp
inc
fwait
leave
sbb
pop
aas
stc
movb
call
mov
inc
lret
pop
push
test
pushf
inc
lret
inc
into
dec
push
imull
inc
cmp
xor
jg
icebp
mov
push
push
pop
in
mov
test
arpl
mov
pop
mov
xchg
jg
jmp
add
pop
mov
and
hlt
mov
pop
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
xchg
dec
xor
cli
xor
cmp
jne
dec
pop
cmc
and
push
xor
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
out
pop
test
inc
lea
je
inc
push
jae
push
addr16
rcl
or
push
xchg
loopne
ja
mov
rorb
push
jnp
adc
mov
shll
in
movsb
bound
pop
int
cltd
xchg
or
repnz
les
or
mov
int
cmpl
flds
clc
rclb
in
sbb
pop
add
sahf
add
outsb
mov
sbb
cmp
cltd
das
xor
repnz
repnz
popa
jecxz
arpl
or
cmp
adc
inc
test
mov
cld
cmp
sbb
jnp
stos
xchg
in
scas
inc
mov
outsb
sbb
stos
dec
movsb
pop
dec
mov
scas
incb
dec
adc
out
cmpl
ds
inc
int
pop
fisubrs
adc
lcall
push
das
pop
jns
imul
sub
dec
in
mov
movsb
inc
cld
xchg
repnz
movsb
test
jle
lods
fisubl
or
nop
jmp
out
jp
je
and
mov
adcb
push
xlat
shlb
lahf
sahf
mov
sub
aaa
push
les
jmp
mov
jns
incl
sub
mov
dec
xor
mov
cmp
jl
clc
xchg
js
xor
mov
sub
loopne
mov
xchg
cmp
push
inc
push
adc
sbbl
andl
mov
cmp
inc
loopne
rclb
dec
push
or
repz
lea
call
stos
loope
out
or
pop
xchg
hlt
aad
in
push
repz
jl
js
pushf
into
stc
cmpb
insb
xchg
imull
mov
push
and
xchg
pop
xor
push
orl
pop
dec
stc
sub
jg
push
xor
data16
push
lahf
dec
cmp
popa
ret
icebp
outsb
sbb
cmp
xchg
fldl
cmpsl
add
ds
inc
aas
inc
mov
imul
push
jbe
test
int
jae
