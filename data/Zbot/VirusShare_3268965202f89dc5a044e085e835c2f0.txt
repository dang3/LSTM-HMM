push
mov
sub
push
push
push
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
mov
add
call
add
add
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
xor
mov
pop
pop
pusha
call
add
add
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
push
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
add
xlat
inc
push
pop
inc
mov
sub
mov
mov
shl
xor
push
sub
push
mov
mov
mov
cmp
je
add
lea
mov
cmp
ja
mov
cmp
jb
lea
jae
popf
push
pushl
decl
jmp
add
fcomi
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
push
push
pushl
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
push
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
push
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
push
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
pop
call
add
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
xorl
pop
sub
or
xor
add
mov
push
push
push
pop
push
pop
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
sub
cmp
jne
mov
pop
lea
add
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
push
push
pushl
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
mov
mov
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
push
pushl
push
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
pushl
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
push
push
pushl
call
add
pop
mov
mov
mov
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
mov
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
repnz
add
add
jle
add
push
and
add
add
mov
add
loop
add
add
add
in
add
enter
lock
add
add
and
add
and
add
and
add
and
add
add
add
add
mov
add
push
and
add
and
add
add
mov
add
shlb
add
and
add
and
add
and
add
add
add
add
add
and
add
and
add
add
sub
add
add
add
add
add
add
adc
add
cmp
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jb
add
movsb
and
add
and
add
add
jle
add
push
and
add
add
mov
add
loop
add
add
add
in
add
enter
lock
add
add
and
add
and
add
and
add
and
add
add
add
add
mov
add
push
and
add
and
add
add
mov
add
shlb
add
and
add
and
add
and
add
add
add
add
add
and
add
and
add
add
sub
add
add
add
add
add
add
aad
inc
imul
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
dec
outsl
arpl
inc
insb
popa
addr16
add
add
je
imul
bound
gs
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
add
gs
outsl
jbe
inc
imul
jns
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
popa
je
inc
imul
jns
add
repnz
imul
jb
je
arpl
add
call
inc
imul
bound
gs
add
movsl
add
je
gs
imul
or
dec
jae
popa
insb
imul
add
gs
jne
jb
outsb
je
push
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
roll
dec
gs
jo
jb
add
pop
add
je
outsl
arpl
gs
outsb
outsw
push
add
rolb
insb
outsl
bound
dec
outsl
arpl
add
inc
gs
je
imul
inc
add
loop
inc
gs
js
je
outsl
fs
push
add
add
insb
jae
gs
popa
insb
jne
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
int
dec
outsl
popa
fs
jne
jae
jb
add
imul
jae
popa
addr16
add
mov
inc
imul
dec
gs
popa
addr16
add
xchg
push
push
gs
jae
addr16
add
sbb
ja
jo
imul
or
je
outsl
arpl
add
pop
or
jae
dec
gs
popa
addr16
add
rolb
jae
imul
xchg
inc
gs
imul
js
push
add
cwtl
push
inc
gs
insb
addr16
jb
arpl
jae
push
gs
jne
jae
jb
outsl
jae
add
inc
gs
imul
outsb
addr16
add
jno
push
gs
jne
jae
jb
push
push
inc
push
xor
cs
insb
add
or
inc
push
inc
pop
pop
popa
dec
jo
outsb
add
push
add
pop
pop
popa
inc
outsl
insl
insl
imul
inc
pop
pop
popa
push
je
jb
add
inc
push
inc
pop
pop
popa
inc
outsb
add
inc
push
inc
push
push
pop
cs
insb
add
xor
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
add
pop
ja
mov
push
and
push
add
or
mov
rorb
cmp
mov
pop
pop
push
push
pop
lret
lods
in
daa
mov
mov
add
cmp
scas
inc
sti
hlt
shrl
inc
movsl
in
ficomps
add
mov
aaa
or
push
adc
sti
cmc
lea
nop
sub
scas
fmull
sti
movsl
mov
aaa
mov
lock
rcll
aad
mov
arpl
and
std
or
int
sarb
cwtl
and
mov
scas
sarl
pop
sbb
push
lea
movsb
mov
push
pushf
repnz
push
fcmove
jo
dec
cmpsl
and
or
or
and
addl
scas
call
imul
rcr
mov
and
sub
mov
iret
into
xorb
pop
xchg
mov
pop
mov
cmp
nop
xor
es
or
sbb
ss
fwait
sub
rcrl
jp
rorl
mov
cmp
fisttps
xchg
pop
scas
iret
xchg
leave
and
sbb
filds
add
and
jae
aam
push
xchg
mov
mov
pop
or
cmp
push
lock
pop
jbe
cmp
fdivs
ret
enter
hlt
mov
lahf
jne
out
rorb
ficoms
cmp
sbb
cmpsl
out
add
dec
movsb
xchg
dec
loop
leave
pop
std
js
loopne
push
enter
sarl
cmp
test
push
iret
cltd
in
test
js
mov
std
mov
dec
sbb
xor
das
add
add
add
add
xor
add
decl
add
add
add
pusha
add
addb
add
add
add
js
add
add
add
hlt
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
pusha
add
test
add
cwtl
xchg
add
ss
cwtl
mov
add
sub
add
xor
add
pusha
add
add
add
add
add
add
and
add
or
add
or
add
imul
sub
xchg
xchg
xchg
add
scas
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
lods
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jle
jp
jnp
stos
stos
stos
add
test
push
mov
mov
mov
rol
lret
lret
lret
lret
into
rcl
in
rcl
shl
ror
shl
lret
lret
int
leave
lret
lret
out
mov
mov
mov
stos
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
scas
scas
and
mov
mov
lret
lret
lret
rcl
cld
xlat
std
xlat
fcomp
fcomp
fsin
aam
aam
iret
ror
dec
iret
iret
aad
aad
rcl
sar
ret
std
mov
mov
lods
iret
movsb
mov
xchg
xor
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
scas
sbb
mov
jnp
mov
sar
mov
call
iret
sar
aad
fcos
fcos
aam
dec
iret
int
int3
into
into
call
rcl
dec
into
into
inc
rol
mov
mov
scas
std
movsl
cmpsl
movsl
ljmp
push
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
push
add
push
or
inc
or
sbb
push
add
add
add
add
or
or
add
add
mov
mov
add
mov
inc
mov
mov
mov
mov
sar
enter
into
into
call
aam
call
fcos
aam
aad
int
int3
dec
int3
lret
dec
int
inc
mov
sarb
pushl
cmpsl
cmpsl
jmp
lcall
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
bound
pop
fs
inc
inc
sbb
sbb
push
or
sbb
xor
cmp
and
push
push
add
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
iret
into
call
rcl
call
rcl
call
iret
iret
dec
leave
lret
ret
mov
mov
ljmp
movsl
movsl
pushf
pushf
popf
cwtl
cltd
cltd
lcall
addl
inc
add
add
add
add
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
outsl
xor
lcall
jno
arpl
push
push
push
xchg
cmp
lea
inc
mov
insl
outsb
outsl
nop
arpl
inc
inc
inc
xor
add
add
add
add
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
leave
dec
lret
lret
lret
leave
leave
inc
ret
ret
mov
mov
pushl
cmpsb
movsb
lcall
xchg
xchg
xchg
xchg
xchg
cwtl
xchg
xchg
cltd
cwtl
lcall
aas
ds
or
push
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsb
jo
pop
pop
pop
or
js
xchg
lea
incb
jnp
jl
jp
outsb
outsl
outsl
out
gs
jne
je
jle
xorb
arpl
inc
inc
cmp
sbb
sbb
adc
or
lods
lods
scas
test
mov
sti
mov
mov
mov
mov
mov
mov
jmp
pushf
pushf
decl
xchg
mov
xchg
lahf
mov
mov
mov
ja
jns
das
das
sub
push
add
add
add
add
add
add
add
add
mov
pop
push
cmpb
popf
fwait
lcall
mov
xchg
mov
mov
jg
jb
jae
jne
je
jge
jle
addl
data16
cmp
and
es
jge
jg
lcall
shrb
lods
lods
sti
lods
lods
lods
lods
lods
lods
test
mov
cltd
xchg
xchg
xchg
decl
jg
jp
js
jl
jp
xchg
xchg
movsl
movsl
cmpsb
scas
mov
sti
mov
mov
mov
mov
mov
scas
mov
test
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
lods
call
addl
mov
std
cwtl
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
or
cmpl
mov
push
push
or
or
inc
inc
inc
dec
insl
insl
insb
jl
test
leave
fwait
lcall
lcall
std
mov
xchg
mov
mov
xchg
xchg
lcall
cmpsb
cmpsl
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsb
movsb
movsb
addr16
jge
scas
test
add
pop
adc
stos
stos
call
fwait
xchg
xchg
incl
xchg
decb
xchg
xchg
sahf
sahf
sahf
std
mov
mov
xchg
in
xchg
nop
in
xchg
push
jne
adc
dec
add
inc
or
or
daa
es
dec
dec
dec
data16
jb
mov
xchg
rclb
xchg
std
mov
xchg
call
pushf
lahf
jmp
test
test
mov
cltd
xchg
std
rorl
mov
mov
ljmp
lahf
adc
add
add
pop
pop
adc
scas
mov
lds
cwtl
decl
mov
mov
nop
xchg
xchg
xchg
popf
pushf
pushf
movsb
cmpsb
cmpsb
test
test
movsl
movsb
movsl
notl
jnp
movsl
push
push
push
outsl
dec
dec
dec
bound
jne
jae
mov
lahf
test
int
mov
testl
mov
jmp
lea
mov
push
dec
mov
ss
mov
sub
mov
pop
mov
mov
lods
mov
movsb
add
mov
add
pop
adc
mov
ljmp
lcall
nop
xchg
call
xchg
call
cwtl
cwtl
cltd
cltd
cltd
lcall
mov
mov
fwait
out
nop
xchg
xchg
xchg
xchg
les
xchg
cltd
in
xchg
cltd
out
xchg
xchg
cmc
xchg
mov
cld
xchg
jg
std
xchg
jne
cltd
imul
movsl
push
dec
ljmp
inc
ljmp
sub
pushl
and
ljmp
and
mov
mov
lods
pushf
movsl
movsl
cmpsb
and
add
mov
pop
pop
adc
mov
ljmp
pushf
call
xchg
xchg
lcall
fwait
pushf
lcall
popf
pushf
call
xchg
xchg
call
xchg
xchg
call
lcall
cwtl
pushf
stc
popf
xchg
xchg
cld
fwait
mov
xchg
imul
pop
pop
cwtl
push
dec
cwtl
inc
cmp
fwait
xor
pushf
sub
lahf
and
adc
cmpsl
and
adc
lods
and
ljmp
and
adc
mov
adc
mov
adc
mov
mov
scas
scas
cmpsb
cmpsb
movsl
sub
movsl
movsb
movsl
add
pop
pop
adc
mov
ljmp
lcall
popf
popf
jmp
movsb
movsb
jmp
mov
decl
mov
decl
ja
cltd
jno
cltd
fs
xchg
push
push
call
xor
decl
sbb
call
adc
lcall
adc
adc
lods
sub
pushl
xor
pushl
xor
mov
xor
mov
push
inc
inc
fwait
xchg
mov
scas
scas
mov
mov
mov
add
add
add
mov
test
adc
lods
lods
ljmp
cltd
lcall
mov
cmpsb
jmp
stos
test
lcall
cmp
pop
pop
decl
inc
cmp
mov
sub
mov
push
incl
or
incl
or
decl
add
xchg
or
lcall
adc
ljmp
xor
pushl
cmp
mov
cmp
sub
lds
inc
inc
das
dec
inc
sub
dec
xchg
inc
mov
mov
cmpsb
movsl
cmpsb
dec
mov
mov
add
add
add
stos
movsb
movsb
add
push
adc
test
ljmp
fwait
jmp
test
stos
ljmp
scas
scas
ljmp
mov
outsl
decl
adc
incl
push
pop
incl
pop
add
addb
incl
or
call
or
lcall
adc
jmp
adc
mov
inc
xor
dec
dec
cmp
int3
dec
cmp
into
push
cmp
into
push
cmp
rclb
call
push
cmp
rcrb
dec
nop
xchg
ret
mov
mov
movsb
movsl
cmpsb
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
lods
lcall
cmpsb
cmpsb
ljmp
mov
pushl
mov
pushl
stos
lcall
sub
decl
pop
ud0
adc
incl
or
decl
add
xchg
or
add
mov
adc
ljmp
das
sbb
dec
push
inc
dec
pop
inc
call
pop
inc
call
pop
dec
call
pop
dec
call
pop
dec
fisubl
fsubs
rcll
mov
fsubl
mov
mov
add
add
add
dec
dec
adc
jl
sahf
popf
jmp
mov
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
sbb
xchg
and
nop
and
decl
sbb
decl
push
add
nop
or
call
adc
jmp
adc
ljmp
sbb
inc
cmp
dec
pop
dec
call
gs
call
push
fisubl
fldt
fisubrs
fildll
jmp
jo
jmp
outsl
pop
jmp
jno
call
xchg
xchg
lret
mov
mov
jne
lahf
lahf
or
xchg
xchg
xchg
add
inc
adc
je
mov
mov
popf
ljmp
mov
pushl
mov
mov
pushl
xchg
xchg
call
sub
call
sub
call
and
call
or
add
pushf
push
add
mov
adc
ljmp
adc
mov
dec
xor
xlat
imul
jb
fnsave
jmp
je
jmp
jbe
jmp
js
call
jl
jmp
jnp
fstl
mov
in
cmpsb
test
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
adc
jae
fwait
xchg
xchg
call
sahf
popf
popf
ljmp
mov
pushl
mov
mov
mov
mov
push
call
xor
cltd
ss
lcall
push
or
xchg
or
add
mov
adc
ljmp
adc
pushl
sub
call
pop
inc
fdivrl
jmp
xorl
in
jae
out
jb
jmp
jae
in
mov
out
mov
out
mov
out
xchg
loope
xchg
sarb
mov
lcall
mov
add
add
add
add
cmp
insb
js
out
cwtl
xchg
lcall
scas
scas
pushl
mov
mov
mov
mov
cmpsl
lcall
aaa
xor
mov
inc
cmp
lahf
cmp
push
call
or
add
movsl
adc
ljmp
adc
mov
sbb
dec
xor
fsubs
jmp
mov
call
mov
in
xchg
jg
in
xchg
cmp
lock
test
repnz
test
hlt
xchg
test
hlt
xchg
cmp
aad
mov
rol
imulb
pushf
pushf
daa
sahf
sahf
sahf
add
add
add
pop
add
cmp
pop
popa
pop
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
sarl
rol
pushl
jo
lcall
dec
inc
jmp
cmp
fwait
and
call
jmp
adc
ljmp
adc
add
ret
dec
aas
daa
fbstp
jmp
fwait
mov
out
popf
push
sahf
push
sahf
push
lahf
push
mov
xchg
clc
mov
out
sahf
mov
fnstcw
clc
lods
lods
lods
mov
sahf
pushf
xor
fwait
popf
add
add
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
xchg
nop
pushl
mov
mov
ret
ret
ret
inc
mov
jle
lcall
dec
dec
ljmp
aas
xor
lcall
jmp
adc
pushl
sbb
inc
sbb
dec
and
call
dec
xor
call
movsb
xchg
push
cmpsb
cltd
push
test
fwait
push
stos
fwait
push
stos
popf
stc
lods
sahf
stc
lods
popf
std
mov
cld
stos
fwait
push
cmpsl
xchg
jmp
mov
scas
mov
lahf
sahf
popf
aas
nop
popl
cltd
fwait
cltd
add
add
add
add
cs
or
aas
cmp
jecxz
popa
pusha
call
mov
mov
mov
sar
ret
ret
inc
mov
ljmp
dec
ljmp
push
jmp
adc
add
movsl
adc
ljmp
adc
add
ret
dec
sbb
call
es
fistps
in
pushf
push
mov
push
mov
push
mov
cli
mov
stc
mov
cli
mov
test
cld
mov
test
push
mov
jmp
mov
leave
std
mov
mov
sahf
popf
popf
dec
xchg
xchg
xchg
add
lcall
xor
add
inc
inc
bound
push
xlat
jne
jno
mov
mov
ret
inc
rol
ret
ret
inc
leave
enter
pushl
pop
push
ljmp
push
dec
jmp
adc
jmp
add
mov
add
mov
sbb
dec
sbb
add
loopne
adc
in
jae
push
lods
lahf
sti
mov
mov
cld
shlb
cld
ret
mov
cld
ret
mov
std
les
std
enter
les
jmp
ret
mov
iret
int3
leave
mov
mov
sahf
mov
xchg
or
add
add
xor
sbb
ss
outsl
mov
mov
fcomp
jmp
aad
test
int
dec
int3
int3
dec
leave
lret
int3
leave
inc
enter
mov
pop
ljmp
dec
cmp
jmp
adc
pushl
add
sbb
dec
sbb
add
loope
add
jmp
xchg
cld
mov
mov
cld
mov
std
lret
std
into
mov
cld
iret
mov
cld
sarb
jmp
lds
pushl
mov
xchg
or
add
add
xor
add
add
pop
or
leave
inc
loop
in
in
call
test
loop
leave
loopne
fcmovu
xlat
fcmovu
cli
aam
aad
int
iret
mov
insl
imul
stos
xor
jmp
adc
pushl
pop
add
les
add
int3
sbb
call
push
add
fistpl
add
in
add
out
dec
xor
clc
popf
mov
std
enter
int3
cld
into
ret
std
iret
cld
rol
std
aam
std
rol
std
aad
cld
xlat
leave
fxch
std
xlat
enter
mov
fnop
lret
mov
mov
xchg
adc
add
add
incb
std
incl
cld
incb
repnz
out
lock
ljmp
dec
call
jmp
call
aad
fstp
jmp
mov
jno
cmpsl
inc
cmp
movsl
and
jmp
adc
pushl
add
les
add
iret
sbb
fsubs
add
loopne
add
out
push
push
pusha
inc
cli
mov
cld
ror
sti
aad
cld
aam
call
lret
fcmove
std
fcmovne
std
fcmove
fmulp
fst
loopne
cld
aam
push
leave
mov
inc
out
cmpsb
cmpsb
cmpsl
mov
cwtl
xchg
add
add
add
incb
std
std
incb
clc
stc
clc
add
hlt
hlt
add
repnz
push
out
icebp
lock
out
out
lock
lock
pop
loopne
jecxz
lds
jno
mov
adc
jmp
adc
pushl
sbb
dec
sbb
call
sbb
fstps
add
loop
add
in
xor
push
jbe
sti
shll
fcmovbe
jmp
aam
loope
cld
loope
std
loop
std
in
jecxz
std
fcmovne
push
iret
ret
dec
lret
lret
repz
test
and
cwtl
xchg
add
std
incb
stc
std
sti
add
cli
cli
add
div
or
rcl
xor
mov
jae
cltd
daa
sbb
popf
push
add
cmpsl
adc
ljmp
pop
add
ret
sbb
dec
sbb
call
push
add
fistpl
add
in
add
lock
testl
fcos
loop
cld
loope
jecxz
jmp
fcos
cld
out
in
std
out
std
out
out
cld
out
fst
push
rol
jmp
fcmovbe
call
ror
clc
scas
scas
lods
lods
xchg
xchg
xchg
cs
outsb
outsl
add
add
add
jecxz
rol
sbb
lods
cmpb
pop
lcall
adc
pushl
push
add
les
add
int
add
and
fisubs
add
call
dec
sub
sti
mov
sar
loop
std
jecxz
in
loope
std
loopne
cld
loop
cld
fst
sti
fcmovne
cli
fmul
stc
fmul
clc
rol
out
mov
out
sar
xlat
aam
sti
mov
mov
lcall
add
add
mov
mov
add
mov
mov
pushf
ss
mov
adc
pushl
add
les
add
into
sbb
call
pop
add
loope
add
jmp
add
hlt
push
aaa
cli
test
sti
aam
sti
lret
sti
rol
cli
int
push
int
push
lret
icebp
lret
icebp
leave
mov
call
leave
mov
std
jmp
rol
imul
loope
cmc
loopne
loopne
mov
mov
xchg
add
add
add
leave
int
mov
rol
mov
xchg
loopne
ds
adc
pushl
add
ret
dec
and
call
es
fisubrl
jmp
cmp
jmp
pusha
inc
ljmp
call
mov
scas
cld
fistpll
mov
fadd
mov
ljmp
enter
rcl
loop
out
fidivs
icebp
out
out
popf
call
int3
lret
push
lods
lods
scas
adc
test
cmpsl
add
rol
mov
rol
mov
sahf
aam
push
dec
pushf
and
sbb
mov
das
std
mov
push
inc
sti
ret
push
stc
leave
jae
test
xchg
mov
shrb
mov
rcl
ror
enter
int3
enter
int3
mov
sarl
jb
gs
jecxz
in
out
ljmp
sub
div
and
out
icebp
sbb
fstp
or
mov
int
xchg
add
mov
mov
ret
mov
les
outsl
insl
lock
xchg
fnstsw
mov
test
les
mov
mov
lret
iret
into
int3
addr16
rcll
rcl
dec
aam
xlat
inc
aad
fnstenv
aad
fcompl
fcmovu
loopne
fucom
in
loop
call
pop
in
out
repnz
cli
cli
add
std
std
add
incl
incl
mov
mov
ret
mov
mov
mov
lods
xchg
mov
mov
mov
mov
rcll
les
lret
int3
iret
daa
lret
rcl
and
aam
sbb
aam
adc
aad
or
fadds
rcr
fildl
fsub
add
jecxz
add
jmp
fadds
incl
mov
mov
add
ret
les
rol
sub
mov
mov
push
ret
or
mov
add
int
add
rcl
add
aam
add
fadds
rcl
aad
fcom
flds
loopne
loop
fcmovnbe
fildl
loop
fcmovnu
loopne
jecxz
in
lock
std
add
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
test
lret
sti
mov
push
dec
or
mov
mov
ret
hlt
mov
inc
in
lds
enter
jecxz
lcall
cwtl
in
lods
add
fisttpll
or
das
popa
es
xorl
arpl
ss
jl
es
sbbl
jns
lahf
fstpl
mov
insl
and
jb
inc
hlt
mov
stc
nop
xlat
xchg
adc
sub
xor
sbb
int3
jl
dec
in
popf
push
ljmp
jno
and
mov
adc
es
test
fs
lods
inc
enter
mov
lret
bound
ftst
jnp
cmp
add
sarl
scas
loop
mov
add
pop
repz
xchg
mov
fnstcw
or
cwtl
das
sti
sub
xor
sbb
dec
dec
jg
push
mov
aad
mov
ret
repz
and
adc
test
lret
sti
std
push
mov
sbb
mulb
lds
testl
adc
insl
add
aam
xor
stos
mov
frstor
mov
into
mov
insl
mov
shl
repz
jae
stc
adc
stos
inc
sbb
leave
xchg
insl
mov
lahf
mov
out
inc
shlb
or
cmp
mov
jge
lea
vphaddubw
stos
inc
imul
pop
adc
leave
pusha
mov
loopne
jle
mov
mov
imul
fwait
xor
mov
test
aam
xlat
ret
pop
add
inc
add
and
inc
xchg
js,pn
cmp
dec
int3
ds
repnz
in
shrl
xchg
jns
ret
stos
jns
fucom
xlat
outsb
push
call
mov
mov
je
mov
ret
push
jecxz
inc
adc
aaa
pop
imul
xor
cmp
cmpsb
insb
inc
pop
jae
ret
pop
in
test
jl
cmp
js
fiadds
lcall
and
adc
pop
add
rcrl
ljmp
cwtl
or
test
test
inc
fcmovnbe
clc
cmp
and
int
lcall
rorb
popa
das
xchg
in
rcrl
dec
in
cmp
push
imul
mov
mov
fiadds
ja
pusha
mull
add
adc
pop
pushf
xor
jg
fdivs
rcrl
add
outsl
scas
and
push
shl
lea
ja
xor
lret
cld
jne
leave
cmpsb
sbb
push
out
jo
lea
ret
adc
hlt
insb
lea
adc
stos
inc
icebp
addr16
call
inc
mov
call
and
jmp
or
popa
in
inc
fimull
scas
popa
clc
fistps
sahf
mov
adcb
stos
and
xor
sub
dec
popa
clc
jg
fidivl
mov
clc
jg
popf
xor
mov
mov
lret
and
fnstenv
inc
push
jmp
and
adc
and
lds
lods
inc
jo
push
call
les
outsl
push
push
call
and
cmp
popf
imul
and
mov
fldl
push
xchg
jle
das
pusha
mull
add
adc
pop
aad
xor
jle
fsubrs
rcrb
add
scas
and
push
iret
testb
and
push
leave
mov
leave
movsl
sbb
outsl
dec
push
out
outsl
testb
ret
repz
inc
mov
push
call
pop
mov
jp
les
push
xchg
lds
shrl
int3
mov
pop
popf
push
mov
lret
jbe
or
jb
adc
xchg
dec
jg
cmp
ja
pushf
movsl
sbb
dec
jg
mov
add
jo
sbb
dec
ja
fisubl
addl
decl
mov
test
mov
test
imul
mov
gs
gs
flds
nop
stc
nop
lds
in
test
pop
scas
adc
lcall
push
out
xchg
mov
xchg
cmp
insl
add
pop
ljmp
scas
or
stos
cld
lcall
dec
enter
out
test
xchg
sub
cmpsl
stc
sahf
xor
push
mov
add
jle
fnstsw
addps
push
xchg
sub
sbbb
ffree
pop
adc
dec
jge
jmp
cmp
outsl
push
sbb
sarl
mov
scas
in
sbb
nop
daa
sbb
insl
jle
xchg
cmp
adc
and
repnz
cmp
xchg
push
xbegin
int3
arpl
sahf
nop
daa
iret
add
pop
cmp
nop
loop
leave
adc
xchg
sub
fs
cwtl
jecxz
loopne
push
out
add
dec
in
out
pop
pop
nop
xor
les
cmp
lret
xor
jo
cltd
loopne
int3
icebp
pop
hlt
and
add
andb
cmp
adc
xorl
sub
cmpsb
cmp
sub
das
das
data16
xchg
cli
sti
xchg
sub
testl
sub
sbb
orl
cmc
mov
pop
or
mov
xchg
sub
lahf
mov
mov
mov
out
test
sahf
fs
into
add
xchg
xor
js
xchg
cmp
pop
mov
sbb
cmp
test
jge
mov
test
or
sub
add
inc
cmp
gs
orl
push
popf
out
stos
inc
dec
cmp
pop
adc
rclb
mov
xor
mov
popf
xor
and
push
sbb
push
or
sub
pop
out
mov
cltd
decl
xor
cmp
out
inc
ficompl
mov
jge
unpcklps
data16
and
in
cmp
repz
test
add
cmp
mov
inc
idivl
es
dec
ljmp
push
test
lahf
fmul
ds
push
ds
xor
dec
jecxz
test
xchg
sub
insl
push
mov
nop
fidivl
xchg
rclb
mov
jp
testb
xor
repz
aas
mov
push
popf
jg
je
add
add
pop
in
and
push
jnp
lea
into
or
add
stos
inc
push
pop
test
movsl
stc
xchg
aaa
into
ret
sbb
ds
lds
rcr
fnstenv
pop
dec
out
ret
repz
mov
leave
cs
pop
pop
ret
pop
ret
repnz
push
in
enter
pusha
push
xchg
test
xor
imul
fsubp
xchg
pop
ret
cmp
jb
mov
push
out
cltd
xor
cmp
nop
mov
popa
clc
lds
mov
arpl
jg
pop
mov
nop
daa
cmp
sbb
lea
test
sarb
bound
enter
pop
adc
ljmp
jecxz
xor
mov
push
repz
xchg
xchg
mov
add
movsl
jmp
sub
jg
mov
add
mov
jbe
andb
pop
sahf
cmp
outsb
sbb
aad
mov
mov
loopne
pushf
adc
aaa
jge
sbb
je
outsb
mov
mov
sub
cwtl
pop
push
cmp
inc
adc
mov
push
popf
xchg
aad
adc
mov
xchg
cmp
shrb
dec
pusha
lods
test
jmp
cmp
jae
inc
test
lret
add
addps
sub
es
imull
cmp
xchg
jns
les
push
popf
push
out
es
sbb
lods
xor
into
gs
xorl
dec
fiaddl
jmp
pop
ret
test
xorb
mov
hlt
or
jmp
lahf
and
ds
bnd
mov
lret
adc
xchg
and
call
xchg
movsl
pop
jae
xor
push
sub
xchg
add
mov
mov
adc
inc
mov
es
push
sbb
dec
fimull
mov
cltd
adc
lds
pop
out
or
stos
inc
lcall
mov
fmul
fs
fdivs
into
or
pop
repz
sub
jle
push
out
jb
jb
jnp
mov
enter
out
popf
mov
inc
mov
in
mov
dec
addr16
inc
mov
mov
mov
xor
sbb
adc
xor
insb
jb
movsl
inc
jnp
add
sub
orb
in
adc
mov
int
xchg
stos
add
rolb
das
adc
mov
sahf
jo
rcrb
fists
hlt
mov
sub
loope
fnsave
lods
int3
and
add
mov
shlb
lret
fwait
lock
in
sub
lods
dec
inc
popf
and
incl
shlb
pop
jmp
cmp
mov
pop
jb
sub
adc
lahf
mov
shll
mov
or
sub
cmp
or
movsl
jl
xor
outsl
push
or
or
adc
cmc
mov
cmp
in
inc
data16
mov
lods
cmpsl
mov
fadds
jne
pop
mov
jle
sbb
js
int
mov
js
inc
incb
jmp
pop
shrb
ret
dec
mov
cmp
dec
testb
jecxz
adc
movsb
aam
cmpsl
data16
cwtl
pop
js
xlat
popa
pop
xchg
mov
stc
mov
sbb
prefetch
into
in
outsb
insl
cmp
lods
mov
fs
iret
pop
jnp
inc
lds
or
jns
push
jmp
out
in
pop
xor
idivl
dec
cld
or
mov
dec
fbld
ss
pop
cltd
add
and
mov
mov
arpl
mov
jne
sbb
leave
mov
xchg
divl
pop
push
ret
test
push
mov
imul
mov
stos
push
cmpsb
sub
js
xchg
pop
icebp
inc
gs
fisubrl
add
imulb
and
sarb
push
lods
iret
icebp
push
addl
pop
mov
outsb
int
push
rcrl
dec
aam
les
mov
mov
mov
les
sbb
mov
mov
cltd
repz
out
in
shrb
mov
fwait
enter
movsb
inc
into
dec
and
pop
xor
jge
je
jle,pt
xor
dec
jle
jle
and
mov
xor
pop
pop
enter
or
cmc
jnp
rclb
sub
dec
les
mov
cmp
cmpsb
sbb
sbb
and
and
mov
push
or
sub
xor
fidivrl
cmpl
out
xchg
mov
push
cld
mov
insl
mov
ret
hlt
mov
rcll
lods
or
push
sti
les
sbbl
in
or
push
mov
shrb
mov
loop
loopne
out
xchg
xchg
pop
mov
fildl
sub
ljmp
jg
cltd
xor
dec
outsl
aaa
into
pop
jb
popf
and
or
push
das
lds
mov
repnz
insb
add
adc
add
lds
or
arpl
jbe
out
and
leave
adc
xor
test
dec
scas
lods
jle
aas
shrl
pop
pushf
xor
adc
xchg
lods
push
movsl
fcoml
leave
pusha
jge
sub
push
xchg
out
cmp
dec
loope
pop
hlt
mov
push
test
add
aas
iret
sub
cmp
call
ret
mov
loopne
sub
inc
xchg
jae
cmpsl
ds
sbb
mov
shrl
insb
addl
mov
and
insb
sub
mov
cmpsb
cmp
mov
les
mov
loop
sbb
add
mov
push
mov
rcr
jb
jp
shll
cli
xchg
add
or
pop
xchg
sub
lods
jne
mov
mov
aad
push
or
icebp
mov
xchg
sub
and
fisubrs
pop
push
testl
lock
pop
sbb
test
or
xchg
mov
sub
push
mov
fistps
rclb
push
mov
int3
push
lods
rol
cmp
add
lds
push
jmp
jb
jo
ficomps
mov
xor
inc
cmp
loopne
lret
or
scas
call
adc
add
pop
imul
in
out
movsl
cmp
adc
push
ja
dec
inc
jns
mov
repnz
icebp
mov
push
pop
divb
xor
push
cmp
xor
pop
pop
repnz
dec
mov
add
jnp
mov
xchg
xchg
cmc
mov
aam
stos
sub
insl
movb
jle
hlt
mov
mov
insl
add
xchg
push
out
jg
and
leave
mov
xor
and
jae
out
mov
xchg
cwtl
jns
pop
dec
mov
scas
shll
repz
add
int
push
jmp
out
mov
cli
push
xor
cmp
xchg
sub
dec
in
push
scas
inc
lahf
adc
lcall
xor
mov
inc
push
push
or
lcall
stos
in
inc
fst
les
lcall
adc
andl
lds
daa
mov
shrb
adc
xor
arpl
mov
movl
or
push
inc
es
pop
inc
fildl
stos
stc
out
adc
mov
inc
fcmovu
cmpsl
lahf
ss
hlt
popa
clc
pop
out
push
and
or
bound
nop
jecxz
lods
inc
loopne
sbb
and
inc
cli
xchg
inc
call
sbb
cwtl
or
mov
cmp
rcrl
outsl
push
push
orl
inc
and
sbb
cmp
add
testl
cwtl
jne
inc
aas
in
pop
xchg
sub
pop
cmc
add
mov
pushf
and
add
shrb
out
test
push
or
aaa
ds
sub
mov
xlat
outsb
jnp
dec
xchg
cmc
mov
or
es
lock
inc
fistl
fs
inc
jbe
call
jp
outsl
push
notl
and
fcomi
lods
inc
dec
repz
imul
inc
cli
xchg
mov
sbb
dec
pop
aaa
into
push
fs
xlat
jmp
push
in
xchg
or
jae
lds
sub
mov
add
scas
inc
mov
int3
int
and
jl
pop
in
cmpl
add
jle
adc
fadd
lds
push
pop
repz
js
xchg
mov
popa
mov
cwtl
das
cmp
mov
mov
dec
out
shrl
add
jl
add
mov
add
nop
adcl
sub
lds
fisttpl
jecxz
repnz
aad
adc
mov
cmpsl
lds
lds
jecxz
ret
jp
jmp
cwtl
cmp
lea
stos
adc
shlb
in
cli
xor
sub
cmc
cltd
inc
push
out
mov
adc
outsb
add
adc
lea
cmp
stos
inc
sti
and
jge
adc
popa
cmp
add
jno
call
lods
sbb
push
popf
mov
lret
and
or
es
fnstcw
stos
jle
inc
push
pusha
notl
mov
mov
xor
leave
pusha
jg
mov
jle
jmp
hlt
mov
push
ljmp
orb
mov
aad
mov
fildl
jl
test
stc
or
lcall
jg
aas
push
jno
xor
inc
mov
push
sub
addr16
inc
fidivl
arpl
test
or
pop
mov
and
lods
cmp
cmp
lret
lret
jno
push
jmp
mov
enter
mov
cmp
jmp
mov
push
or
subb
xchg
test
cwtl
mov
and
pop
adc
cmp
hlt
dec
fisubl
add
mov
and
mov
jae
pop
mov
xchg
cmpsb
jg
jo
rcrb
scas
cld
hlt
jmp
into
insb
in
sahf
mov
and
or
jbe
fidivrl
inc
fdivrs
pop
testb
imul
mov
mov
pop
ljmp
lea
xor
dec
cmpsb
aad
aaa
push
jmp
adc
adc
jp
aas
mov
lret
mov
lret
scas
outsb
add
xor
mov
and
push
popf
jge
mov
mov
std
sbb
inc
push
testb
cli
adc
cmp
push
stos
pop
inc
fnstcw
popf
xor
push
pusha
clc
test
inc
cmp
leave
pusha
cwtl
and
jle
cmp
push
mov
push
popf
insl
movsb
test
mov
stc
nop
and
inc
fxch
dec
pop
scas
shl
pusha
mull
testl
xchg
arpl
mov
leave
jne
out
mov
sub
pop
fsubrs
and
push
adcl
lods
aas
insb
cld
xchg
adc
lret
sbb
lahf
and
shlb
fidivrs
negb
jmp
xor
or
pop
insl
mov
mov
mov
adc
push
sub
pushf
aas
cli
xchg
or
or
inc
iret
es
pop
scas
xor
add
cs
in
stos
pop
jmp
jle
push
add
jge
sbbb
cmpb
enter
aad
inc
xlat
sbb
push
popf
aam
pop
cmc
push
std
and
cmpl
outsb
or
repnz
xchg
jns
jns
mov
aad
cs
lcall
ss
push
or
icebp
mov
add
cmpsb
int
and
mov
xor
loop
pop
push
ljmp
jg
in
jl
push
test
movsl
cmp
add
ret
pop
in
push
loop
inc
jp
jg
gs
mov
les
mov
and
mov
xor
mov
stc
cmpsl
mov
hlt
in
jo
hlt
add
adc
xor
xchg
shlb
inc
ljmp
jo
repz
pop
sbb
ljmp
aas
pop
mov
mov
fs
mov
mov
fdivrl
seta
lods
xlat
sub
iret
das
jnp
bound
sti
xchg
cld
fistpll
sar
sbb
dec
loop
outsl
xor
lcall
jmp
iret
mov
adc
inc
pop
mov
push
data16
es
jno
popa
mov
mov
daa
in
mov
adc
fisubs
in
xchg
jnp
xor
lods
aaa
outsl
push
inc
je
int3
push
dec
inc
inc
inc
insl
mov
int
dec
data16
mov
insl
xor
ret
pop
mov
aaa
inc
dec
adc
sub
fmuls
jno
push
movsb
mov
lret
mov
sbb
pop
insb
ret
repnz
and
stos
pusha
stc
imul
inc
add
cmp
push
mov
sbb
pop
dec
jmp
inc
and
inc
jp
jg
imul
test
outsb
mov
sahf
mov
push
jae
cli
inc
in
call
rcrb
sti
test
dec
add
pop
call
and
clc
xlat
mov
shlb
push
jg
sbb
insl
lds
ficomps
mov
mov
xlat
cmp
pop
out
js
hlt
dec
ds
in
gs
mov
ds
jge
cmp
adc
loop
mov
pop
lcall
sbb
bound
cli
sbb
insb
pusha
pushl
add
mov
mov
fistpl
icebp
cs
aam
xchg
call
lahf
add
adc
movsb
xor
fwait
ja
jmp
jo
lcall
xchg
mov
xor
jo
inc
dec
pop
les
lds
dec
adc
cmp
adc
jle
notl
popf
aaa
push
pop
or
mov
leave
xchg
outsl
inc
popf
aaa
mov
jmp
aaa
sub
insl
jns
lret
pop
test
cmp
xor
jno
jl
or
movsb
sbb
lock
arpl
push
icebp
ss
or
orl
or
leave
lods
mov
mov
insl
loop
mov
pop
fistps
mov
sub
dec
and
mov
sbb
xor
scas
loopne
cmpsb
inc
test
int
jg
in
out
mov
aas
leave
sahf
add
sbb
fucom
lods
add
arpl
and
lret
push
leave
pop
inc
clc
call
sbb
cmp
in
add
repz
mov
stos
shlb
pop
or
aas
out
pop
fs
psubd
and
or
and
dec
push
mov
aas
xor
daa
or
inc
jmp
loopne
sub
shr
adc
and
cmp
mov
cmp
lea
in
pop
jae
push
dec
repnz
adc
sub
dec
pop
sbb
fdivr
lret
cmpsl
mov
push
xchg
pop
mov
lods
call
mov
outsb
leave
mov
in
xchg
cmc
xlat
jne
pop
pop
sub
in
add
call
jle
jg
or
cmpsb
nop
adc
and
or
push
mov
xor
in
movntq
xchg
pop
and
int3
dec
inc
dec
inc
fwait
jle
lds
xor
notl
movsb
popa
daa
mov
xor
sbb
fs
mov
cmp
dec
out
cltd
dec
shl
jae
popl
sbb
inc
push
fdivl
loope
adc
stos
ljmp
shrb
repz
mov
cmp
adc
sbb
test
addr16
roll
sub
mov
das
add
inc
or
push
cmp
sbb
movsb
jbe
inc
movsb
dec
push
inc
fldcw
repnz
js
xchg
std
sub
sarl
xchg
loopne
mov
adc
mov
imul
sub
dec
scas
sbb
push
rorl
iret
mov
push
jbe
test
or
xor
or
nop
leave
jns
jmp
add
outsb
fs
jo
sbb
xchg
js
push
in
int3
push
inc
push
and
adc
dec
insl
pushf
shl
mov
xchg
xor
aas
add
cmc
push
int
jno
adc
mov
lea
mov
out
sbbl
pop
pop
push
stc
int
push
push
or
push
adc
stos
gs
jnp
enter
cmpsl
adcl
add
popf
mov
scas
mov
mov
mov
adc
cmpsl
cmp
imul
loope
jae
cmpb
xor
out
mov
movsb
dec
xchg
lods
jne
sbb
cmp
jge
repnz
add
movsl
mov
adc
out
movsb
mov
adc
mov
xchg
mov
jp
aam
sahf
add
outsl
jnp
cmp
outsl
sbbl
movsb
into
dec
pop
je
add
pop
orb
mov
lea
lods
rcrl
dec
imul
xchg
insb
shrb
jno
push
xor
inc
adc
cwtl
push
mov
icebp
sbb
ljmp
addr16
mov
ret
lea
mov
dec
flds
push
xor
stos
xchg
xchg
nop
mov
cmp
and
faddl
movsb
cli
sbb
lds
add
pop
repz
sub
js
aas
outsl
xchg
outsl
icebp
sub
mov
cmp
dec
clc
aad
xchg
iret
int3
push
fiadds
pushf
cmp
mov
jp
sub
jg
aad
sbb
clc
mov
movsl
and
xchg
aaa
bound
xchg
jae
lret
jp
stc
pop
daa
push
jecxz
clc
sarl
iret
lahf
sbb
adc
or
add
cs
pop
fxch
loope
mov
lock
movsb
loope
dec
and
gs
decl
jne
js
lcall
inc
jmp
push
xor
add
mov
push
mov
rorb
ja
stos
lods
je
or
push
pop
insl
cld
mov
fsub
repz
jnp
sub
scas
idiv
testl
cmp
mov
minps
jecxz
test
dec
xchg
js
dec
lahf
mov
stos
das
push
mov
sbb
dec
lret
mov
cmp
mov
loop
push
dec
mov
xchg
fadd
mov
xchg
rcll
push
push
mov
or
cmc
shrb
sahf
divl
inc
fdivs
movsl
mov
adc
rcl
xchg
addl
inc
xor
ret
fidivl
xchg
add
push
push
ja
adc
fldt
sti
dec
out
dec
cmpsb
mov
inc
rcll
aas
repz
sub
cs
inc
sub
push
outsb
push
lret
fldl
leave
dec
insb
test
push
insb
xchg
or
pop
out
mov
or
dec
jle
or
int
xor
xchg
xchg
push
xchg
out
mov
sub
inc
popf
mov
stc
mov
pop
movsl
int
cwtl
or
xorl
or
jae
pushf
jmp
rcll
xchg
roll
push
jg
iret
dec
mov
repz
push
xchg
jmp
cmp
fstpl
mov
pop
mov
xchg
ds
adc
dec
push
cmc
inc
jnp
adc
mov
cld
cs
mov
adc
aas
mov
les
and
lahf
add
mov
sub
jecxz
fcomps
ret
cmp
xor
xor
lods
mov
arpl
cmp
insb
js
fcoms
dec
lahf
sub
sbb
outsb
subb
hlt
enter
imul
or
jns
mov
roll
cmc
pop
lret
pop
rcr
scas
lea
mov
cmc
jnp
mov
aas
fnsave
test
mov
or
pop
ja
shlb
push
sbb
shlb
push
mov
push
pushf
adc
xchg
shl
jg
test
cmc
mov
xchg
cmp
cwtl
pushf
sbb
mov
pop
fimuls
pop
jecxz
loopne
and
sti
nop
or
push
jo
iret
mov
push
cmp
pop
cmc
inc
adc
cmp
dec
or
int
cmp
hlt
lret
pop
ret
push
push
mov
scas
add
cmp
or
push
roll
int3
xchg
add
insl
imulb
dec
mov
pop
dec
loope
adc
adc
inc
inc
sub
lcall
in
mov
lret
andb
push
inc
mov
lret
cli
adc
sbb
inc
pop
or
mov
add
movsb
out
sbb
mov
mov
cmp
mov
xor
cmp
in
add
jl
stos
jo
insb
push
push
adc
inc
ret
movsl
addr16
cli
inc
aad
mov
jo
xor
repz
in
sub
sub
fcmovu
adc
shl
stos
push
xchg
sbb
js
add
jmp
xor
enter
les
pop
int3
lods
insl
popa
lahf
iret
mov
jns
rcrl
adc
jp
inc
andl
shll
divl
imul
test
pop
jp
sub
adc
aad
iret
mov
xor
lret
or
jo
pop
mov
add
into
sbb
sbb
xor
cltd
je
xor
mov
ret
xchg
arpl
std
mov
ss
mov
out
dec
push
sub
mov
icebp
int
cmp
adc
push
repnz
inc
mov
inc
inc
mov
xor
imul
sub
div
aas
loope
in
mov
fcmove
push
outsl
pop
push
dec
adc
or
test
movsl
inc
xchg
mov
pop
jp
push
push
into
jnp
rorb
jb
add
push
insb
sbb
or
rorb
adcl
sub
icebp
inc
xchg
add
pop
jl
jns
out
outsl
out
scas
and
sub
lods
bound
fbld
faddp
sub
pop
inc
enter
leave
stos
pop
inc
xchg
add
shlb
dec
lcall
add
lahf
sub
loope
xchg
ja,pt
in
xchg
test
cmc
mov
xchg
and
xchg
xlat
mov
std
mov
mov
pop
or
jno
test
mov
mov
xchg
jne
loop
jbe
sub
leave
xor
sarb
xchg
pop
pop
testl
fdivl
daa
movsl
mov
into
sti
inc
shlb
popf
pop
sub
add
mov
popf
cmpsb
or
pop
jl
jp
jle
mov
ret
xchg
sbb
repz
or
pop
lahf
test
xchg
or
sub
xchg
xchg
lods
test
pop
or
sub
ss
ds
cwtl
add
hlt
data16
sub
inc
clc
jge
js
js
mov
gs
mov
imull
stos
cmp
jnp
fisttps
xor
inc
xorl
add
jle
rorb
pop
mov
stos
jl
lea
xlat
and
sbb
out
aad
and
jmp
or
adc
repnz
add
mov
flds
sub
rorb
ljmp
or
fidivl
pop
mov
dec
mov
pop
aaa
and
stos
lods
inc
dec
adc
cltd
enter
pop
jns
int
add
and
enter
dec
sbb
nop
fldt
movsb
loope
in
pop
cli
movsb
clc
jg
addr16
push
stc
sub
jle
mov
sahf
loop
push
addr16
jmp
sbb
inc
fisubs
jge
push
mov
sar
outsb
mov
subb
jb
out
and
xchg
bound
jns
mov
nop
lret
jmp
lods
mov
or
add
out
daa
test
ja
fldl
rcl
sub
mov
xor
mov
aam
inc
cwtl
subl
lea
cs
pop
jnp
push
push
dec
aas
push
aad
loope
xor
addr16
iret
sub
mov
ljmp
push
inc
sub
push
and
pop
imul
xor
int3
sub
roll
sub
stc
xchg
sbb
loope
in
dec
pushl
inc
or
shr
xlat
cmpsl
bound
and
mov
jecxz
pop
repnz
shll
ss
fsubrs
sbb
aam
inc
cs
push
in
pop
stc
push
lds
mov
adc
cmp
xlat
mov
popf
test
push
repnz
out
lea
outsb
push
jl
imul
dec
clc
mov
mov
fldln2
loopne
sub
jnp
xor
loop
or
addr16
out
and
outsb
pop
jle
fwait
xchg
fnstcw
lea
and
xchg
cmpsb
into
jmp
shrb
idivl
cmp
cli
rolb
sub
mov
inc
inc
scas
rcl
mov
adc
nop
sbb
bound
insl
movsl
test
mov
stos
fstpt
inc
aam
shll
push
add
mov
dec
jnp
cmp
xchg
and
push
jmp
aaa
inc
insb
imul
mov
sub
imul
mulb
mov
xor
cmp
pusha
inc
icebp
pop
shll
pushf
mov
inc
cmp
mov
mov
fldcw
mov
bound
inc
in
mov
jle
repnz
dec
push
add
movsb
pop
mov
das
push
loope
sbb
mov
das
xchg
pop
xchg
rclb
pop
mov
xor
ss
inc
jle
roll
mov
pop
sub
sub
xor
std
adc
es
ljmp
or
inc
sub
pushf
push
or
jo
xchg
sub
daa
push
jl
sbb
sub
jne
xor
cmp
stos
cmp
cli
rcr
sbb
out
cs
stc
pop
adc
inc
testb
jno
xchg
call
jae
push
fmul
and
out
inc
pop
sub
lret
pushf
push
cmp
outsb
scas
xchg
cwtl
xchg
popf
femms
mov
dec
mov
jl
ljmp
arpl
lret
jecxz
pusha
inc
mov
out
imul
push
cmp
aas
gs
sub
add
xchg
xor
xor
or
cs
jns
loopne
dec
cld
mov
fistpl
cld
fadds
test
mov
in
pop
mov
pop
and
neg
mov
adc
mov
les
int3
mov
push
mov
adc
outsl
xchg
mov
sbb
test
jg
sbb
xchg
cld
faddl
push
cmp
pop
inc
inc
popa
mov
lahf
mov
mov
cli
insl
stos
insb
lods
shl
xor
cmp
cmpsl
lods
pop
movsl
xor
fidivl
pop
fnsave
scas
sbb
repnz
jae
mov
sti
cmp
sub
push
lret
sahf
push
mov
jmp
inc
imul
dec
push
dec
push
leave
xor
ds
shl
fidivl
mov
jg
les
scas
mov
cmp
js
jo
jecxz
call
clc
xchg
sub
mov
mov
mov
pop
cmpsl
dec
sub
push
lahf
push
stos
insl
hlt
data16
mov
xchg
mov
mov
jae
hlt
or
pop
mov
nop
adc
les
stos
lcall
and
fwait
add
lahf
cmp
xor
add
outsb
mov
adc
es
call
clc
repz
xor
cs
stos
adc
xor
sar
call
push
or
mov
sbb
xor
mov
aam
cmp
add
les
xor
dec
cmp
jmp
ljmp
add
sub
adc
push
mov
ljmp
jl
out
pusha
shl
loop
xchg
shrl
mov
int
sub
mov
xor
loope
fiaddl
push
jle
xlat
pop
cmp
fsubrs
das
cltd
aam
push
push
jl
and
inc
cmc
aad
push
push
jne
les
cmc
adc
jns
adc
mov
fsubr
mov
add
addr16
insb
mov
fs
inc
lods
incb
adc
lock
cmc
mov
mov
cmp
in
sti
in
and
bound
xlat
cwtl
inc
jmp
mov
push
xchg
bound
ret
pop
pop
data16
mov
jecxz
cmp
push
test
shlb
call
or
dec
popa
popa
jle
bound
or
mov
int3
test
sbb
out
inc
sti
mov
mov
imul
repnz
jge
mov
inc
addb
mov
and
pusha
xchg
mov
je
addb
sub
jo
and
loop
and
pushf
pop
jno
mov
gs
xor
dec
xor
popa
mov
daa
cli
hlt
xorl
sub
dec
hlt
inc
push
stos
bound
push
inc
int
mov
sahf
out
sub
insb
push
out
test
xchg
adc
or
push
enter
add
popa
mov
mov
xlat
dec
cmp
jbe
js
mov
in
lahf
fnstenv
cltd
imul
cmp
mov
ffree
cmp
mov
imul
add
imul
mov
mov
adc
ss
cmc
lcall
mov
mov
mov
sub
xchg
push
pop
mov
add
cltd
cmpsb
pop
xchg
mov
sub
jl
ret
adc
pop
inc
pop
repnz
cld
xor
inc
das
jge
mov
fs
xchg
aaa
mov
xor
xlat
pop
xor
xor
lods
push
fmuls
dec
xor
cwtl
fisubrl
test
repnz
ret
dec
fwait
ret
xlat
push
mov
xor
repnz
inc
sbb
fidivrl
fsubrl
cli
repnz
mov
cmp
pop
and
subl
add
push
lock
dec
clc
sahf
add
pop
add
scas
mov
dec
leave
aaa
mov
sbb
mov
cmp
cmp
jle
subl
inc
mov
insb
int3
add
clc
aam
outsb
and
lcall
lret
dec
cmp
in
fwait
cs
mov
mov
mov
lods
xor
jo
cmp
jno
dec
testl
scas
scas
scas
push
ja
in
lahf
jp
out
push
clc
fimuls
mov
jo
aad
mov
jnp
lea
in
aad
add
cld
pop
xor
in
dec
push
scas
xlat
sub
push
pop
mov
fwait
pop
cmc
push
push
lcall
add
push
jge
loopne
mov
imul
mov
push
sub
ret
add
push
jae
push
pushf
mov
mov
jl
hlt
in
mov
fimull
scas
movsb
lods
repnz
lock
mov
mov
xor
jbe
and
cmpb
mov
xor
fists
dec
jne
cmp
push
mov
aaa
imul
mov
cmp
jp
aam
dec
insb
and
test
das
fcmovb
ror
mov
xchg
jns
mov
adc
jb
stos
mov
fs
shll
les
das
and
cmp
inc
xchg
call
sub
xchg
lret
into
test
sbbl
pop
mov
loop
sahf
mov
xlat
imul
pop
test
int
inc
inc
and
sbb
or
xchg
mov
xor
ss
orb
and
jae
cmpb
scas
mov
and
pop
pop
out
dec
test
adc
adc
adc
or
into
mov
out
mov
push
cmpsb
das
in
fwait
sbb
pop
xor
dec
sahf
inc
jnp
rcrl
xchg
mov
xchg
dec
fucomi
xchg
jno
dec
inc
es
imull
nop
fistpll
jo
or
jo
in
inc
imul
fmulp
lret
lock
cmp
shrl
loope
ja
cwtl
addl
push
xchg
cmp
sbb
xchg
dec
iret
jl
rorb
and
fists
push
sub
mov
xchg
cmpsl
hlt
rcrl
cmc
and
adc
xchg
cmpsb
out
adc
test
xor
and
xor
mov
subl
das
les
cmp
add
int3
movsb
call
rolb
dec
push
push
out
adc
shr
out
xchg
and
and
scas
inc
iret
out
fsqrt
shll
lret
sti
adc
das
arpl
xchg
pusha
pop
sbb
jo
mov
lds
into
add
mov
cmpsl
xchg
int3
mov
jle
xchg
nop
jne
mov
or
fdivl
jl
movsb
cwtl
mov
int3
cli
cmp
xor
inc
mov
pushl
jmp
imul
pop
adc
jle
or
jmp
and
bound
cwtl
mov
ss
stc
popf
lods
sub
cmp
push
dec
jb
mov
outsb
in
jne
shll
fcom
mov
in
pop
jns
push
cmp
xchg
iret
mov
out
loop
mov
dec
add
mov
mov
sahf
test
bound
adc
push
pop
movsb
push
dec
fs
clc
push
test
mov
jg
mov
cmp
cld
adc
jp
outsb
icebp
inc
sbb
in
jge
xchg
repnz
fs
out
cmpsl
xchg
mov
dec
test
mov
addr16
test
roll
mov
and
add
mov
mov
addl
js
push
mov
sub
inc
mov
push
test
stos
adc
push
dec
dec
leave
stos
fs
jbe
pop
scas
pusha
pop
inc
mov
cmpl
ficoms
pop
pop
xchg
mov
push
cmp
push
insb
cwtl
mov
and
pop
cli
ret
jecxz
je
pop
sub
les
jb
cmp
popa
movsb
and
int
cwtl
rclb
call
push
jl
push
subl
test
mov
leave
jns
cmp
shll
std
or
pop
imul
shll
into
pop
shrb
popa
leave
add
popa
add
rorb
mov
jne
fdiv
xchg
mov
pop
dec
pop
sbb
stos
or
mov
and
enter
mov
addr16
jmp
popf
and
jae
jbe
push
sub
lret
ret
xchg
decl
andl
and
jne
out
fimuls
rorb
push
imul
add
sbb
push
arpl
cli
adc
mov
lods
fstl
inc
xor
popf
rol
cmp
mov
push
jge
cmp
sub
fldcw
push
or
pusha
xchg
push
xor
pop
mov
jg
jo
lds
push
jo
lret
and
fld
add
cmp
mov
dec
int3
push
mov
push
fstl
xor
cmpsl
jg
lcall
sub
int
lcall
andb
jne
stos
jge
clc
mov
arpl
cmp
sub
add
cmpsb
adc
lahf
sub
jo
stc
ss
mov
or
mov
xchg
jbe
nop
mov
sub
ljmp
pop
xor
aad
dec
dec
popf
cmpsb
sub
cmpb
add
sbb
popf
jo
inc
mov
xor
and
cltd
xor
cmp
inc
hlt
lss
ljmp
aas
sub
sub
lods
jnp
lods
jmp
mov
inc
xchg
push
out
adc
and
aas
push
or
xchg
ds
add
inc
xchg
or
push
lcall
fsubr
dec
in
enter
push
xchg
xor
js
mov
sub
push
lcall
sti
gs
repz
or
mov
push
icebp
push
fwait
pushf
insb
xchg
xor
lret
loope
sub
insb
inc
nop
test
lock
xchg
mov
pusha
pop
xchg
cltd
cmpsl
hlt
cmp
xchg
mov
mov
gs
or
ljmp
pop
je
je
push
jne
cmp
pop
popl
inc
roll
sbb
pop
insb
out
sbb
mov
xlat
cmpsb
test
mov
pop
lcall
fldl
mov
dec
insb
gs
and
or
xchg
lahf
dec
jl
xor
test
ljmp
imul
ss
cwtl
add
cmp
mov
xor
xor
mov
jg
sub
cmc
pop
jno
or
pop
cmp
fcomps
cmpsl
jge
push
mov
jnp
push
inc
jg
mov
sbb
pusha
jno
jno
lcall
cli
fs
rcl
or
clc
mov
push
inc
mov
or
xor
std
mov
xchg
pop
shlb
xor
mov
cld
fcomi
ds
add
xor
adc
xor
jo
mov
push
or
bound
dec
cpuid
inc
aad
dec
add
sub
out
add
les
lods
and
inc
dec
cmp
aad
adc
jg
insl
inc
dec
xchg
push
dec
mov
push
andl
ljmp
enter
mov
pop
leave
ja
out
dec
add
frstor
push
mov
push
and
add
xor
aas
das
sub
aad
push
cmp
cmc
adc
pop
aad
jo
pop
cmpsb
sub
lret
into
test
lds
mov
sahf
push
sbb
aam
adc
je
rcr
push
pop
lret
lcall
sbb
pop
aaa
jp
xchg
lock
mov
int3
arpl
fdivp
sub
pop
push
test
stos
clc
mov
lds
or
fsubs
sbb
bound
or
mov
inc
addb
ret
rcrb
shrl
cmp
jg
dec
fisubs
pop
aas
lock
xchg
sbb
repz
sbb
rorb
xchg
or
jne
rolb
test
adc
popf
imul
mov
hlt
das
and
inc
cs
stos
std
mov
sub
and
xchg
jb
xor
mov
push
push
dec
popa
cmpsl
test
mov
mov
jle
test
pop
unpckhps
pop
enter
addr16
rorl
fadds
adc
and
mov
xchg
aas
xchg
dec
rcr
icebp
or
push
mov
lret
shrb
leave
push
scas
lcall
jp
test
sbb
andl
mov
sbb
daa
aam
call
je
ds
or
jbe
mov
cmpl
xor
dec
push
mov
rcrl
or
xor
subl
add
mov
lcall
addr16
test
mov
arpl
int
stos
xchg
add
push
dec
shl
add
lods
int
fnsave
mov
dec
rorl
aam
dec
lahf
dec
dec
adc
in
std
push
js
xorb
cmc
push
shlb
lret
sbb
push
arpl
mov
add
notb
rorb
cmp
std
pop
xorl
das
pop
div
mov
rol
fimuls
popf
jne
and
les
in
imulb
mov
or
clc
mov
lcall
cmp
ljmp
hlt
lods
ss
shlb
fs
mov
jmp
popf
jo
sahf
pushf
xchg
daa
mov
fcoml
sbbl
loope
mov
lcall
jns
dec
mov
pop
imul
jb
sub
shrb
fs
repz
repz
cmpsb
daa
lods
mov
cmp
lds
out
enter
inc
aam
sub
enter
inc
jg
es
test
sbb
mov
call
jg
sub
call
mov
adc
enter
xor
enter
inc
andl
lea
and
xlat
js
cwtl
add
inc
adc
clc
or
jb
dec
scas
xor
jno
test
nop
loop
les
mov
sti
inc
insb
shll
jmp
mov
push
stos
je
mov
sbb
mov
dec
in
arpl
daa
fs
sub
jns
mov
xorb
mov
mov
sub
push
adc
clc
into
xor
aaa
insl
lahf
pop
jge
mov
adc
sub
sbb
or
jno
mov
xor
sbb
and
jnp
mov
cli
test
inc
std
sub
out
rcll
cmp
xchg
lret
dec
and
in
out
insb
insl
pop
push
loope
mov
dec
rclb
into
cmpsb
shrb
lret
sbb
gs
je
and
fmull
push
inc
inc
orl
rolb
into
gs
popa
push
out
xchg
imul
subl
jne
out
or
cmp
dec
mov
inc
fcompl
scas
iret
data16
fs
jno
out
xchg
xchg
adcb
push
or
pop
cmpsl
daa
mov
push
inc
fldt
mov
imul
testb
xor
cmpsl
arpl
fwait
xor
test
shlb
dec
jecxz
cwtl
xlat
outsb
lret
add
add
sub
fldt
ror
int3
arpl
inc
fisubs
jnp
subl
xchg
test
lds
and
push
out
aaa
sbb
movsb
cmp
lock
dec
adc
xor
mov
daa
mov
inc
cmp
xchg
xchg
sub
mov
js
lods
or
int
and
pop
pop
cmc
lea
mov
push
scas
jg
loopne
pop
movsl
add
jl
push
mov
fwait
dec
cmpsl
fidivl
imul
pushf
cli
clc
sub
inc
xlat
out
dec
push
lods
jle
pop
testb
lret
shlb
adc
icebp
push
jmp
call
or
and
pop
fnstenv
jmp
testl
xor
push
je
nop
loop
xor
cs
jecxz
addr16
dec
ss
test
rcrl
or
mov
in
sub
js
aaa
ja
mov
pop
jp
adc
into
or
stos
push
cli
xchg
sub
cmpsb
scas
dec
mov
loop
xchg
cmp
into
sub
push
out
lret
jbe
jp
cmp
shll
iret
or
fwait
xor
cli
xchg
sbb
push
mov
ret
mov
adc
push
cwtl
das
dec
loope
fstps
push
arpl
add
mov
loopne
push
sbb
hlt
cmpl
or
adc
adc
xor
daa
loop
mov
dec
adc
xchg
xchg
adc
shr
in
push
jecxz
rcrl
sbbl
addr16
mov
fsubp
js
shr
test
cs
xchg
pop
jne
inc
scas
jns
cmp
or
jp
ljmp
mov
push
and
pop
jbe
insb
mov
mov
movsb
sar
nop
or
push
out
ljmp
dec
pop
jbe
lock
jnp
shld
adc
sub
push
and
test
jl
mov
mov
add
dec
in
and
pop
fs
sahf
jl
je
mov
sub
add
fsubrs
and
nop
pop
push
movsl
cmp
jl
jg
mov
push
jmp
jge
add
fs
pop
pop
xchg
cmpb
mov
and
sub
mov
pop
dec
dec
loope
jge
mov
xchg
pop
test
xchg
sub
out
push
lods
pop
and
pop
cmp
popa
jge
mov
enter
fmull
mov
dec
es
in
outsb
es
xorb
mov
loop
add
shrl
pop
sbb
cmp
rcr
mov
push
cmc
pop
lock
pop
jns
xchg
sub
into
into
gs
in
pop
pop
sbb
xchg
inc
inc
adc
popf
lcall
out
mov
pop
or
lods
xor
iret
jp
inc
fmull
lods
insl
xlat
call
lds
pop
repnz
inc
push
lods
jnp
test
lret
pushf
and
sub
xchg
sub
outsl
xor
jl
dec
loop
nop
push
lods
lret
das
adc
sub
inc
insb
aaa
insl
jo
push
out
xchg
lods
inc
lret
lret
push
lods
push
daa
mov
pusha
aaa
or
push
mov
fldl
fs
sub
lcall
clc
aam
int3
sbb
adc
mov
inc
xor
lcall
mov
sbb
push
xor
xchg
sub
xchg
jge
je
mov
lcall
jmp
leave
pop
push
push
movsl
mov
insb
movsb
mov
inc
jmp
mov
decb
es
push
lods
inc
push
push
test
mov
imul
mov
sub
cmp
sahf
xor
movsb
pop
lock
outsl
push
cmp
insl
xor
sbb
mov
push
lods
xlat
decb
sub
and
je
xchg
sub
rcrb
aas
sub
push
lods
adc
aas
js
sub
outsb
lcall
mov
fisubrl
scas
push
mov
jg
orl
outsb
push
fistl
fildll
leave
pusha
pop
mov
into
mov
push
lods
cmpsl
shrl
shl
sub
ds
adc
outsb
dec
ja
mov
cltd
iret
addr16
idivl
test
mov
jb
popf
lods
pop
xchg
sub
stc
stos
fnstenv
sbb
pop
inc
notb
lods
xor
mov
xchg
or
push
add
cmp
push
push
ljmp
and
out
ja
es
addl
test
and
lds
or
inc
xor
addr16
xchg
test
rcll
add
and
pushf
add
mov
mov
xor
cmp
mov
push
out
outsl
push
add
insl
add
movsl
cmp
push
xchg
xchg
inc
movsl
cmpsl
cltd
xor
loope
cmc
cmc
mov
mov
js
sbb
int
cs
sbb
inc
cmp
jb
xchg
mov
shlb
call
ss
gs
into
test
std
xchg
aad
rcrl
push
lods
and
out
push
inc
inc
fnstenv
add
movsb
xchg
fs
ret
ret
and
and
pop
cmp
dec
cmp
fcomps
pop
ljmp
push
xchg
or
cmpsb
mov
sub
sub
cmp
pop
dec
mov
jbe
inc
loop
fwait
loopne
leave
jne
std
out
mov
adc
imul
movsl
xchg
mov
xlat
jnp
or
xor
and
dec
ficomps
mov
enter
xchg
aaa
dec
fisubrl
pop
cwtl
sub
lds
incb
sub
mov
dec
into
push
js
inc
jecxz
xchg
loopne
lret
loopne
adc
out
mov
push
movsl
inc
nop
aaa
inc
in
rcl
add
add
inc
or
shlb
add
jbe
movsb
stos
pop
xchg
xor
scas
lds
push
arpl
dec
std
cmc
xchg
and
xchg
sbb
fistl
mov
push
call
lods
push
movsb
pop
xor
decb
cld
jnp
cli
pop
fsts
imul
movsb
sub
arpl
sbb
mov
or
pop
jne
mov
push
aam
insl
into
imul
clc
jns
addb
pop
divl
cltd
mov
loopne
outsl
int3
or
mov
movb
sahf
sub
mov
jbe
push
shlb
imul
ficompl
outsb
mov
insb
dec
fldcw
sbbb
and
gs
adc
stos
add
sbb
ret
jp
fisttps
adc
mov
and
dec
lcall
mov
testb
shll
or
xor
pop
mov
pop
ret
popa
xchg
scas
dec
pusha
das
sarl
jns
and
xchg
cli
les
mov
ljmp
idivb
ss
dec
insl
xor
lods
jns
sbb
add
ss
cmp
mov
jbe
xor
cli
adcl
dec
std
xchg
push
sbb
xchg
push
push
hlt
subl
xor
shrb
jg
add
jno
shr
or
xchg
xchg
inc
pop
sahf
mov
or
lods
sub
cmp
jle
sub
addb
in
ljmp
and
pop
scas
dec
jbe
scas
dec
int
fistpl
cmc
fistpl
je
es
sub
xchg
add
rcrb
ret
adc
push
loop
sub
bound
jg
pop
lcall
stos
leave
shll
sub
inc
icebp
orl
jno
aas
mov
vsubpd
push
ja
sbbb
jle
mov
add
sub
lret
bound
ds
pushf
cmc
mov
bound
xchg
out
and
out
sub
jb
lahf
cmp
movsl
cmp
in
in
push
scas
mov
loope
xor
push
mov
enter
incl
test
jge
cs
mov
mov
inc
fnstcw
imul
shll
mov
pop
bnd
and
stos
inc
lods
inc
pushf
xor
shrl
cwtl
pop
lret
xchg
push
jmp
arpl
fidivl
lds
notb
mov
or
pushf
cmp
imul
push
lods
inc
fistl
or
xor
mov
rcll
add
mov
lahf
inc
jo
ja
stos
inc
add
and
mov
js
dec
popa
es
pop
inc
icebp
mov
test
or
rorl
mov
loop
sbbl
fmuls
mov
sub
inc
fldcw
dec
push
out
mov
cltd
shll
adc
pop
ss
dec
pop
jbe
in
jge
jnp
mov
adc
pop
testl
sub
sub
mov
cmpsl
xsha256
cmpsb
shll
insl
add
repnz
mov
mov
cli
xchg
add
and
xor
mov
xor
movsb
ficoml
or
pop
add
dec
push
and
mov
filds
xor
jle
fs
test
hlt
mov
lds
cs
and
mov
out
mov
insb
jl
sub
dec
xchg
sub
outsl
push
into
dec
dec
in
arpl
sub
addr16
lcall
pushf
imul
jg
test
leave
repnz
call
icebp
mov
mull
mov
dec
test
mov
popa
jle
pop
nop
daa
or
scas
mov
jae
sbb
pop
dec
jecxz
les
lret
mov
mov
xor
call
out
test
mov
shr
mov
fyl2x
xor
or
arpl
outsl
jmp
push
xchg
mov
xchg
movsb
loop
gs
and
mov
mov
fidivl
mov
dec
jecxz
cmpsb
movsb
cmp
push
cmp
inc
mov
push
and
mov
jmp
lahf
pop
out
shr
xor
sbb
jne
cmp
insb
inc
xchg
sub
lea
mov
loopne
pop
adc
shlb
xor
aaa
cmp
outsb
test
aad
jne
rcl
cmp
lock
and
mov
in
jae
cmc
movsb
xchg
dec
ffreep
lds
jge
sbb
xchg
dec
cmp
shrl
cltd
xor
xchg
adc
rclb
out
arpl
aad
test
js
mov
add
aam
daa
out
fldt
add
insb
int3
or
inc
aad
imul
inc
rol
mov
cmp
ljmp
aam
cs
lods
mov
in
sub
fdivl
pop
push
jle
int
aam
xor
dec
inc
mov
rclb
aam
pop
loop
imul
xchg
enter
sub
push
or
sbb
cmp
xor
push
into
mov
pop
jbe
leave
xchg
mov
lods
jl
pop
sub
cmpsl
loopne
ret
fisttpll
sbb
cmp
movsb
add
sub
aaa
cmp
out
nop
pop
stos
stos
mov
mov
xlat
jg
mov
push
xchg
ret
push
in
jge
add
push
push
sbb
mov
push
pop
jl
fisttpll
pop
add
pop
insl
adc
addr16
inc
pop
lret
scas
bound
shl
push
mov
out
ror
in
fcmovb
leave
idiv
push
aaa
push
ffreep
mov
into
mov
cmpb
or
push
sub
mov
inc
fcmovne
filds
punpcklbw
jg
in
pop
jp
add
movsl
xor
jnp
test
sbbl
sub
jae
js
ret
add
repz
scas
sbbl
add
sub
and
fistpl
mov
jp
cmpsb
jno
sbb
dec
jecxz
pop
mov
dec
push
jmp
mov
mov
rcll
bound
ret
stc
nop
sti
inc
int3
arpl
lahf
in
sahf
imul
out
adc
or
sub
inc
xlat
popl
inc
jb
dec
loope
pushf
dec
jecxz
add
call
mov
imul
and
push
pop
mov
ret
shrl
jmp
arpl
aaa
fs
push
test
arpl
frstor
test
clc
sbb
int3
arpl
insb
add
scas
movsb
cmp
ror
arpl
and
inc
xchg
sub
add
jmp
mov
jle
stos
inc
add
add
dec
jecxz
je
inc
addr16
subb
ret
pop
idivl
sub
add
imul
xchg
loope
inc
sarb
cmc
mov
shrl
fs
xchg
mov
pop
daa
ror
repnz
cltd
sbb
add
in
test
or
xor
cmpb
add
sbb
mov
dec
sub
sbbb
mov
jecxz
sub
ret
cmp
jle
adcb
mov
lods
inc
mov
insb
add
mov
mov
decl
mov
sahf
pop
lods
inc
mov
test
fistl
pop
inc
icebp
sub
and
jle
dec
add
jnp
into
gs
cmp
test
and
int
rorb
ret
jnp
fbstp
xchg
add
ret
imul
jmp
jne
cmp
loope
sub
mov
scas
inc
xlat
fmulp
bound
pop
mov
insb
add
jmp
mov
mov
lods
inc
adc
and
outsb
fiadds
cmpl
mov
add
ret
pop
mov
mov
lret
bound
insb
add
fbld
and
mov
cmpb
stos
ret
or
divb
in
test
lret
bound
fidivl
notl
mov
bound
repnz
mov
or
cltd
adc
mov
popf
or
in
test
jge
jbe
adc
aas
pop
imul
popf
out
test
mov
out
arpl
cmp
inc
daa
mov
pushf
xor
mov
inc
jmp
add
xor
cmpsl
ds
pop
in
adcl
mov
ljmp
les
loope
jge
pusha
lret
adc
in
shl
mov
or
and
inc
test
fnsave
dec
loop
rcrl
test
push
mov
xchg
sub
loop
int3
arpl
lret
bound
xchg
xchg
sub
pop
insb
add
mov
xchg
sub
mov
dec
loop
pop
xchg
sub
lahf
in
adc
leave
pusha
std
cli
mov
sub
inc
sub
jne
in
push
popf
lret
xchg
sbb
loopne
fidivs
or
orl
dec
loop
mov
push
sub
in
adcl
pushf
jle
and
fisubrl
or
xchg
aam
add
push
out
or
jp
inc
lods
jmp
test
cli
in
jl
fists
sub
loopne
add
test
clc
mov
mov
in
cmpl
lods
test
mov
sub
add
lret
bound
subb
insb
add
inc
lea
loope
mov
lcall
push
ret
test
loop
pop
pop
out
xchg
in
test
out
test
imul
test
sub
mov
push
adc
sahf
shll
sarl
popl
aad
pop
cmp
pop
adc
scas
xchg
test
rorl
and
sub
xchg
fwait
gs
pusha
xchg
fimull
repz
sbbb
mov
mov
lods
inc
xchg
mov
adc
out
and
mov
cmp
mov
and
lods
cs
sti
xchg
insb
cmc
leave
pusha
es
daa
arpl
add
push
stos
or
or
scas
inc
daa
dec
sbbl
dec
dec
loopne
ds
mov
out
test
mov
and
mov
adc
pop
sahf
lcall
pop
lret
pusha
mov
shrb
add
sub
push
popf
or
lahf
ss
ret
les
cmpsb
cmc
roll
push
mov
shlb
jp
into
stos
and
cltd
xchg
ret
shlb
aad
push
sbb
sbbb
call
pop
rcrb
or
dec
dec
mov
outsl
fwait
inc
xchg
in
xor
movsb
push
or
pop
imul
dec
mov
loopne
mov
xchg
pop
mov
mov
add
mov
loop
dec
aad
mov
push
mov
out
mov
fbstp
pusha
add
push
cmc
dec
in
subl
jle
or
lret
out
cmp
jecxz
rclb
or
insb
shlb
add
rorl
movsl
add
subb
inc
pop
push
pop
pop
je
in
mov
jmp
xchg
inc
sub
es
xchg
fnstenv
js
shrb
into
negw
imul
inc
jnp
movsl
lods
xchg
clc
test
dec
in
adc
inc
out
or
fildll
jg
push
lock
aam
imul
push
sub
js
mov
sub
lock
imul
ud0
add
scas
inc
lahf
inc
test
cmp
je
lods
pavgb
scas
pop
negb
imul
pop
test
cmpsl
call
add
xorl
aas
nop
xor
fsubrs
movsl
xor
adc
pop
cwtl
das
dec
push
pop
sahf
orl
push
out
hlt
aaa
into
es
pop
gs
shlb
push
addr16
fistpl
add
ds
xchg
cmpl
pop
daa
and
xchg
dec
pusha
idivl
rclb
testl
adc
cmp
cmp
bound
mov
out
adc
lock
mov
push
mov
shll
mov
stos
mov
dec
pop
pop
inc
fimull
push
out
mov
jle
inc
inc
fnstenv
cmp
scas
cmpsl
fldt
ret
xchg
decb
mov
enter
mov
xchg
icebp
aam
loop
jno
lock
mov
dec
adc
xchg
inc
cltd
sbb
loope
fbstp
or
js
das
adc
sbb
shll
adc
aas
mov
pusha
testl
sub
je
or
test
push
ss
fidivs
lods
cli
xchg
fists
std
xchg
inc
add
mov
sbb
addr16
shr
fs
out
cmp
fs
add
mov
or
xchg
sub
jg
aaa
mov
mov
xor
lods
inc
call
in
fdivl
test
jmp
cmpsb
sub
cs
jnp
es
lret
pop
inc
lods
cli
fnstsw
mov
jno
jg
cs
scas
inc
lds
ss
pushw
movsb
mov
xchg
fidivl
xchg
or
jecxz
mov
lret
cmp
xor
and
inc
push
in
ja
sbbl
cmp
mov
push
xchg
mov
inc
jno
xchg
lret
xor
xchg
gs
mov
fnstcw
rorb
nop
and
shrl
out
pop
loop
fsts
jle
or
xor
mull
xchg
sub
xchg
mov
ficompl
stos
sub
in
test
jns
hlt
test
sar
repnz
mov
dec
std
inc
addr16
cwtl
lock
loop
fidivs
clc
adcb
push
jp
inc
sbb
mov
mov
mov
jnp
divps
aas
cmpsb
stc
nop
sbb
nop
mov
dec
mov
cmp
std
cmp
das
add
jno
fidivs
gs
push
xchg
jns
ret
push
push
mov
insb
xchg
cs
cmp
xchg
imul
xor
push
aam
inc
fistpll
rorl
xchg
xchg
mull
fnsave
or
movsb
jmp
aam
into
sbb
loopne
pop
mov
adc
bound
xor
xchg
in
test
push
sbb
popf
xor
pop
aad
dec
push
cmp
test
fnsave
push
lods
xor
jnp
cmp
cmp
cmpsl
push
sbb
xchg
mov
or
or
hlt
cmp
push
cli
xchg
xchg
pop
mov
xor
sahf
xchg
sub
or
sarb
push
xchg
sub
pop
fdivl
xchg
adc
cld
nop
daa
out
std
sbb
cs
mov
out
dec
mov
and
ret
mov
dec
fistps
pop
es
cmp
jbe
mov
stc
mov
adc
xchg
sub
cmp
pop
xchg
xchg
mov
mov
outsl
adc
add
xor
cmp
mov
mov
fdivl
xor
mov
mov
sbb
mov
fdivrs
idiv
and
repz
out
dec
loopne
jge
xchg
scas
adc
test
outsl
push
clc
mov
loopne
adc
mov
fwait
imul
int3
mov
loopne
maxps
jg
out
xchg
pop
mov
jae
cmc
arpl
dec
out
repnz
testb
mov
out
lods
pop
repnz
cs
cld
xchg
daa
in
mov
and
cmp
inc
fcmovnbe
hlt
out
mov
sub
push
outsb
fdivp
mov
inc
loop
pop
repnz
xchg
out
test
negl
in
dec
inc
cmp
jb
sub
jb
fwait
xsha1
cmpsb
or
jl
sbb
or
rorb
mov
aad
pop
repnz
lahf
fnstenv
cld
xchg
gs
fwait
xor
xlat
cmp
or
sub
jb
adc
scas
cmpl
sbb
fistpl
mov
push
aad
inc
es
pop
imul
mov
int3
cld
xchg
ds
mov
pushf
xor
lds
cmp
xchg
les
jae
movl
adc
push
call
add
aam
lods
mov
test
sub
push
out
inc
cld
xchg
jae
or
xor
mov
cmp
pop
xor
movsl
mov
rorl
rcrl
loope
jecxz
pop
adc
test
inc
fsubrs
test
shll
int
push
sbb
mov
outsb
add
mov
stos
sub
add
icebp
sahf
sub
iret
pop
mov
mov
test
shrl
js
mov
cmp
pop
scas
inc
jp
pop
mov
xchg
jl
mov
dec
loop
fildll
roll
sbb
insl
xor
stc
cmpsb
mov
pop
lret
stos
adc
pop
arpl
dec
dec
inc
fsts
mov
pop
icebp
in
clc
mov
cmpsb
loope
insb
add
arpl
jp
rcrl
mov
jg
enter
call
and
in
mov
stc
lahf
movsl
push
jmp
rorb
lods
inc
ja
ja
mov
loopne
mov
jmp
dec
xor
mov
ficomps
in
mov
repnz
ror
pop
ret
cld
xchg
sub
add
jae
xor
ja
push
popf
fs
aad
shlb
xor
jb
sub
inc
adc
jo
xchg
mov
lds
push
in
sbb
repnz
lds
xchg
sub
xlat
pop
lock
fdivl
leave
push
pop
pop
sahf
ja
aad
pop
xchg
or
rclb
insb
add
mov
pop
xor
in
cmpsl
aad
cmpsl
mov
idivb
sub
sbb
mov
leave
movsb
mov
aad
add
es
sub
pop
addb
jae
pushf
movsb
into
gs
lret
mov
int
sahf
mov
int
and
rolb
ret
mov
out
les
repz
fsubp
mov
push
popf
out
inc
cld
dec
repz
pop
in
add
in
lds
inc
xlat
test
arpl
dec
mov
nop
es
xchg
pop
mov
cmp
jnp
adc
fdivrl
outsl
inc
xlat
pop
push
loop
test
test
or
mov
add
xchg
aaa
into
mov
shr
add
hlt
mov
out
mov
add
lret
cmp
mov
mov
test
xchg
mov
mov
mov
lds
xor
inc
push
stc
xchg
add
inc
out
or
adc
push
inc
pop
mov
xor
in
arpl
shl
add
fwait
sub
lods
inc
jmp
std
xchg
ret
cld
sub
sbb
xor
and
mov
out
ljmp
lock
lds
add
mov
fsubs
pushf
clc
and
fistl
fbstp
and
mov
cmp
test
push
lahf
andl
js
pop
movsb
rorb
into
data16
inc
mov
mov
add
adc
and
inc
jmp
sbb
idivb
pop
xchg
cs
push
subl
outsb
lods
ss
adc
rcrl
es
jbe
repz
mov
fbstp
cld
cmpsb
cmp
fildl
fdivrs
lahf
lea
push
ret
out
sbbl
out
sub
inc
mov
and
and
cmc
mov
mov
je
xchg
lods
inc
sub
int
out
dec
loope
ficompl
test
jp
addl
in
mov
sub
push
sub
lret
sub
into
pushf
subb
shr
or
das
adc
into
xchg
test
movsb
mov
int
add
xor
scas
inc
fwait
pop
cli
xchg
mov
daa
mov
fimull
loope
xor
rcll
cmp
iret
data16
add
rorl
fldcw
fwait
xor
cmp
fnstenv
shll
in
cmp
jl
pop
in
les
jbe
mov
lock
loop
dec
out
adc
push
xchg
sub
daa
outsl
xchg
sub
int3
fsubrs
jp
fsubrs
pop
dec
sahf
mov
adc
sahf
xchg
xor
mov
mov
mov
xchg
xor
cmp
mov
int3
mov
mov
iret
inc
fstpt
shlb
jle
repz
loopne
xchg
adcb
adc
scas
pop
enter
aaa
mov
imul
pop
lock
les
fnstenv
or
sub
mov
jns
inc
popf
add
lret
inc
test
pop
fcoml
aam
cmp
sub
dec
xor
mov
inc
sbb
inc
or
push
shll
push
in
sbb
mov
and
sbb
sbb
test
fmull
ljmp
push
add
and
adc
cmp
or
inc
movsb
insb
cmp
inc
cli
fsubrl
dec
fucomip
clc
inc
cli
or
xchg
out
adc
mov
dec
push
ret
pop
xor
aaa
ss
and
cmp
lcall
xchg
add
cmpl
or
pop
in
cmp
and
xchg
cmp
cli
sti
jbe
int3
rorl
add
sub
sbb
jmp
mov
cs
fcmovne
dec
in
xor
ret
fimuls
push
lds
lret
decl
push
repz
sarl
adc
sub
and
cmp
xchg
fistpl
adc
mov
jge
sbb
in
jno
cmp
orl
xchg
inc
in
pop
or
lea
dec
cmc
xchg
mov
imul
mov
xchg
cld
gs
dec
ret
sbb
xchg
fisubrl
jge
jmp
lods
pop
add
daa
cmp
mov
sbb
sub
pop
sub
das
cs
out
fsubl
dec
jl
inc
jae
push
pop
pop
lret
insb
lahf
mov
jnp
adc
lret
pop
test
add
sbb
pop
or
and
popa
dec
sbb
mov
mov
pushf
loope
jnp
js
insl
ret
pushf
fimull
insl
and
addr16
jge
fmul
jb
pop
inc
jne
ror
mov
mov
clc
cli
jecxz
jecxz
sbb
pop
dec
xor
sahf
xor
mov
outsl
sbb
les
cmp
das
outsb
subb
aad
popa
pop
jecxz
imul
repnz
jl
popf
lods
sbb
cmpsl
dec
into
and
ljmp
lds
rorb
popa
clc
mov
les
insl
faddl
sub
popa
loop
dec
adc
mov
imul
lock
data16
pop
mov
cmp
lods
or
in
arpl
aad
cltd
xor
jl
mov
leave
into
call
push
out
cmp
sahf
hlt
jmp
cs
daa
mov
pop
inc
scas
inc
jne
shrl
xchg
int3
arpl
int
movsl
arpl
jae
mov
adc
cltd
xor
lret
jno
in
dec
out
cmp
fwait
insl
add
lock
loopne
push
adc
xchg
sub
cld
mov
xor
pop
icebp
in
push
insb
add
test
and
pusha
pop
scas
xchg
sti
test
sub
dec
pop
addb
jnp
push
repnz
stos
adc
ja
lds
cltd
cmp
loop
jmp
repnz
and
adc
jns
shl
and
sbb
and
push
inc
test
mov
xchg
pushf
mov
cmp
scas
or
cmp
sub
cmp
push
dec
cmc
add
jl
pop
pop
cld
test
imul
test
mov
dec
fmull
std
push
in
cs
stc
nop
dec
je
xorl
ss
cmc
mov
daa
push
push
jmp
dec
into
gs
jb
fstps
nop
daa
sub
or
addb
jb
int3
arpl
xchg
inc
ffree
hlt
ljmp
dec
or
push
es
mov
fistpll
stc
jo
fdivl
xchg
adcb
test
xchg
mov
sahf
xor
or
mov
push
push
adc
subl
adc
fldpi
inc
ficompl
loopne
lods
mov
sub
daa
adc
inc
dec
xchg
mov
sbb
fisubs
or
and
cmp
cmp
mov
test
xor
pop
gs
push
mov
sub
das
and
test
mov
fistpl
js
add
int3
mov
ss
mov
xchg
lcall
mov
inc
mov
xchg
xchg
popa
int3
jb
jp
xor
cmpl
shlb
pusha
fcmovne
sub
ret
mov
ret
dec
sub
fstpl
stos
mov
aam
into
push
daa
adc
push
pop
jo
mov
fnsave
nop
sub
xchg
arpl
movb
inc
xor
jnp
sbb
arpl
stos
call
dec
mov
push
push
sub
mov
dec
loop
test
lcall
and
sbb
inc
divl
push
jle
xchg
rcrb
sahf
xor
inc
loopne
je
mov
lcall
and
into
cmp
push
adc
mov
adc
stc
inc
xchg
adc
cwtl
in
int
fxsave
aaa
dec
out
push
cld
and
popf
dec
jo
xor
mov
pushf
aad
fdivrl
push
xchg
dec
test
push
outsb
add
xlat
int3
add
fs
adc
pop
dec
jo
and
cmc
sbb
jg
and
adc
adc
add
fwait
cmp
pop
fbstp
push
push
sbb
ja
mov
shlb
jp
mov
jo
xchg
pop
cmpsb
mov
inc
inc
xchg
xlat
mov
inc
lea
insb
jmp
mov
daa
sub
dec
mov
stc
fbld
jle
pop
fcompl
popf
scas
mov
dec
push
mov
das
into
je
xor
adc
das
lret
mov
inc
jo
jnp
mov
pusha
fisubl
sbb
sbb
dec
jb
inc
adc
lcall
xchg
sub
divl
insl
gs
inc
mov
outsl
sub
xchg
out
clc
aas
notl
flds
mov
fiaddl
fwait
stc
xor
push
push
popf
sub
cltd
cwtl
jbe
xchg
rorb
add
ljmp
scas
sbb
daa
cmp
or
mov
lods
iret
add
jl
imul
xor
test
xor
movsb
jle
push
push
xor
jg
cmc
and
test
push
add
fidivs
add
xlat
cld
adc
js
xor
pop
pop
movl
data16
icebp
into
and
jg
sbb
pop
sbb
bound
cmp
push
pop
cli
rorl
test
cmp
sub
lcall
cmpsl
cltd
lret
pop
scas
mov
rcrl
enter
push
mov
mov
out
or
cmp
push
sbb
mov
loope
test
subl
int3
nop
aad
fildl
mov
aaa
pop
mov
push
sbb
stc
push
int3
xchg
fwait
loopne
lret
jl
jecxz
inc
or
in
jno
test
mov
cmp
outsl
rclb
movsb
arpl
xor
dec
and
lahf
aas
fbstp
insl
dec
or
ja
push
mov
cmp
and
push
mov
inc
je
outsb
rorl
and
jg
ss
jae
xor
mov
out
cmp
push
cltd
call
sbb
add
pusha
pop
mov
or
lret
clc
and
dec
loop
mov
jno
push
bound
ljmp
add
or
xor
and
xchg
xchg
aas
gs
dec
push
sbb
xchg
fwait
cmp
mov
fucomi
lahf
inc
outsb
mov
push
xor
es
popf
inc
movsl
call
repz
xchg
xor
adc
fs
fnstenv
rorl
xor
pop
add
adc
push
add
sbbb
add
fdivrs
push
sub
dec
pop
aad
loopne
or
pop
mov
lods
faddl
adc
mov
cs
int3
sti
pop
fimull
push
mov
xor
or
adc
andb
adc
stos
rorb
rolb
xchg
leave
rcrl
ret
out
jle
dec
sbb
dec
cmc
lods
sbb
mov
cmp
mov
idivl
mov
mov
adc
xchg
stos
addr16
scas
leave
xchg
inc
pop
mov
and
xor
arpl
mov
movsb
mov
roll
lret
inc
sub
rcll
adc
cli
push
iret
lahf
sbb
outsb
out
ret
test
dec
pop
mov
jno
sub
outsl
jae
lods
leave
sub
pushf
mov
mov
mov
pushf
jmp
or
scas
sub
and
adc
shlb
rorb
mov
push
add
rol
xchg
push
jns
fwait
stos
push
xchg
sub
jmp
mov
lcall
pop
add
mov
inc
repnz
mov
cmpsb
xor
cmp
cmp
dec
mov
mov
push
pushf
es
pop
jg
or
imul
xchg
fisubrl
mov
xor
add
push
xor
stos
loopne,pn
cmp
mov
popf
test
jle
xchg
xchg
jmp
aas
out
pop
mov
test
mov
mov
daa
lahf
jno
test
push
or
pop
xor
sub
popa
out
lods
inc
and
mov
fdivrs
nop
xor
and
fs
xor
fcmovb
negb
or
mov
jo
testl
or
pop
push
int
sub
xchg
cmp
cmp
les
popf
das
mov
ret
rolb
mov
movsl
sub
mov
push
mov
adc
mov
and
add
jp
dec
mov
dec
mov
cmpsl
jae
repnz
xchg
in
mov
and
inc
adc
adc
pop
js
ret
push
mull
xor
sbb
sar
or
repnz
adc
push
fiaddl
cmpsl
mov
test
fstl
fildll
repz
cld
mov
cwtl
inc
test
mov
xchg
pusha
or
in
pop
or
flds
fcomi
add
js
loope
lret
bound
sbb
push
jmp
fsubr
jo
mov
sahf
loope
mov
adc
push
aaa
jle
aam
sub
jno
pop
xchg
sbbl
loop
loopne
insb
push
mov
loope
jp
cld
push
dec
sub
les
loope
jno
frstor
mov
scas
lahf
push
jge
add
inc
mov
ss
pop
cmc
mov
push
stc
mov
inc
fdivrl
dec
cld
aad
sbb
mov
lcall
loopne
push
inc
mov
dec
push
pop
and
sbb
cmp
or
add
cld
mov
adc
fdivl
lock
sbb
ret
sub
mull
pop
loop
and
mov
and
outsb
aas
mov
loope
loope
sub
dec
js
push
test
pop
repnz
jns
mov
ficoms
mov
arpl
xor
and
push
call
or
and
sbb
aad
cmp
adc
imul
xor
jns
lret
jl
xchg
imul
jp
movsb
pop
push
cmp
roll
cmp
lcall
ljmp
sbb
ficoml
inc
faddl
and
int
xor
lret
mov
lea
mov
out
push
add
outsb
xor
jne
cmpsl
push
cmc
mov
test
stos
fstps
mov
dec
cli
xor
sub
addr16
out
ret
hlt
sahf
insl
add
adc
mov
and
ret
test
loopne
xchg
pop
leave
or
cmp
pop
xchg
outsb
mov
cmp
and
aaa
loope
adc
js
xor
lods
call
mov
sbb
std
push
lock
inc
leave
mov
push
mov
mov
pusha
cmpsl
imul
fwait
mov
add
test
lods
lahf
adcb
cmp
cmpsl
mov
xor
ret
pop
cmp
ret
shll
mov
xlat
jmp
or
sub
push
inc
cmp
inc
push
dec
mov
aad
les
std
and
arpl
or
adc
inc
sbb
add
push
sub
dec
fsubrs
inc
dec
out
mov
insl
add
cmc
adc
es
jns
test
out
nop
pop
ret
add
push
inc
mov
jb
add
lds
enter
aas
or
cs
hlt
pop
lea
mov
fbld
mov
push
xor
arpl
mov
pop
test
mov
aad
lods
jl
or
repz
sub
test
jge
pop
mov
in
bound
les
jne
pop
adc
mov
sub
adc
std
cmp
pop
pop
push
fbstp
sti
shrb
mov
andb
daa
adc
xchg
cmp
mov
dec
xchg
pop
push
shrb
jle
mov
jne
fs
pusha
testl
and
adcl
mov
sub
in
test
and
xchg
outsl
aaa
into
pusha
xor
in
push
andl
xor
dec
xchg
cmpsb
cmp
sbb
mov
lods
outsl
xchg
sub
mov
fildll
rcl
push
out
xor
shrl
rorb
daa
mov
or
in
test
xor
lcall
fildll
mov
orb
ds
push
clc
cltd
xor
jae
scas
fs
ja
cld
test
negl
dec
jecxz
addr16
scas
sbb
adc
push
scas
stc
iret
and
pop
ret
mov
aad
aaa
into
ret
stos
out
pop
hlt
movsb
or
jp
arpl
jne
scas
inc
or
cs
lahf
negl
scas
and
test
sbb
aam
in
lds
fdivl
imul
jae
or
lods
jl
jg
dec
popf
push
mov
out
or
andl
push
call
leave
aad
and
jo
shrb
popf
xor
sti
mov
in
adc
jnp
and
std
sbb
xchg
sub
xor
pop
cmc
mov
pop
adcb
fidivrl
int3
and
lcall
jecxz
jb
mov
rclb
daa
cltd
and
sub
gs
ljmp
push
in
cmp
pop
repnz
ret
in
add
mov
mov
sub
adc
dec
loop
cmpsl
push
ljmp
daa
mov
adc
add
mov
fisubs
ror
icebp
call
mov
jbe
arpl
ja
repz
and
movsl
pusha
sub
pushf
or
das
das
jmp
and
pop
fs
add
mov
xlat
ja
lock
mov
cli
popa
inc
fisubl
dec
push
call
push
dec
inc
fidivrs
out
mov
or
out
jecxz
out
sti
xlat
mov
mov
ljmp
sahf
jl
loop
outsb
popf
enter
dec
loopne
xor
mov
les
mov
adc
enter
mov
pop
cmc
mov
cmp
mov
insb
add
mov
inc
fistpl
xor
jle
jecxz
mov
mov
fisttpl
imul
fimuls
jnp
inc
adc
dec
adc
rcrb
sub
out
cmp
pop
stos
xchg
shlb
pop
das
mov
shrb
and
fs
lock
xor
stc
addr16
push
add
test
mov
nop
in
xchg
mov
or
int3
arpl
mov
push
out
push
or
outsb
pusha
jp
push
add
pop
repnz
xchg
into
lds
lock
stos
sub
sbb
mov
push
test
mov
fsubl
pop
out
aam
fsubrs
cmc
enter
sbbb
or
jmp
into
gs
orb
mov
ret
mov
into
gs
aad
dec
xor
andl
mov
or
stos
ss
and
fcoms
push
mov
loop
mov
dec
in
xor
pop
repnz
mov
mov
fidivl
es
in
xor
mov
icebp
xchg
testl
stos
movsl
pop
icebp
push
dec
sbb
test
lret
mov
fcompl
out
inc
out
mov
loopne
std
xchg
add
push
clc
xchg
cli
xchg
pop
xchg
sbbl
cltd
outsl
xor
jns
push
jmp
inc
dec
test
jmp
das
push
into
ljmp
xchg
cld
xchg
mov
lret
negl
test
mov
mov
mov
stos
adc
adc
jo
mov
and
rcl
aaa
into
ret
sbb
pop
add
out
xchg
push
or
subb
push
popf
or
mov
pop
sbb
rcl
mov
testl
gs
jl
or
scas
dec
clc
rclb
fidivl
or
xlat
jge
in
adcl
ds
xor
mov
push
push
in
xchg
mov
leave
sub
push
ljmp
sbb
xor
out
mov
xchg
adc
rolb
mov
sbb
jbe
sbbl
sbb
test
in
out
inc
popf
mov
ret
add
into
jno
add
add
popa
clc
lea
das
pop
mov
and
xchg
cmp
pop
mov
push
xchg
sbb
arpl
dec
mov
push
dec
in
pop
dec
loope
cmp
xchg
outsb
test
mov
mov
out
pop
adc
sbbl
out
lods
inc
rcrl
ret
pop
out
fidivs
pop
ljmp
lcall
push
sub
jl
in
adc
rcl
mov
lret
rcrl
mov
adcl
fdivs
sub
fmuls
ret
pop
insb
popf
pop
lock
and
insl
gs
mov
nop
ds
mov
daa
mov
mov
adc
call
add
in
xor
xor
pop
sahf
popa
mov
push
movsl
dec
xor
movsb
std
or
cmc
lds
mov
push
lods
mov
hlt
mov
inc
dec
jecxz
ljmp
jo
pushf
xor
add
push
inc
cvtps2pi
xor
cli
sub
jmp
cmpsl
mov
inc
lock
test
mov
dec
push
out
nop
in
xchg
sub
and
pop
pop
jmp
shrb
adc
test
mov
add
lret
fnstcw
push
lods
stos
outsb
add
mov
into
sbb
sbb
fucom
icebp
enter
push
out
jae
mov
es
xchg
mov
shlb
fnsave
push
jmp
sub
clc
push
dec
inc
fdivrs
pop
loop
push
stos
adcb
jb
xchg
fs
jns
mov
and
sbb
mov
push
out
adc
or
lahf
jbe
adc
loopne
xchg
xlat
fnsave
xchg
jmp
lods
pop
scas
jmp
mov
jmp
stos
mov
push
scas
lret
mov
xor
mov
or
inc
fadd
sub
mov
out
mov
sar
or
loope
shll
cmp
in
mov
aas
mov
shlb
stos
inc
mov
xor
mov
pop
stos
stos
and
bswap
jecxz
lock
adc
mov
lcall
lods
inc
popf
xor
int
fcmovnbe
imul
fcmovnb
push
es
jecxz
mov
fdivl
jmp
xchg
sarb
mov
clc
mov
loope
or
shl
in
lods
inc
incl
lret
imul
out
cs
sahf
sar
jmp
mov
imull
sub
lds
cltd
xor
out
rcrl
pop
adc
pop
and
cltd
xor
fbstp
and
test
add
ss
pop
push
push
scas
inc
mov
jne
outsl
and
or
inc
in
aaa
dec
sbb
mov
xchg
mov
ds
push
jge
and
fwait
in
xor
enter
clc
aas
mov
pop
cmp
mov
std
pop
stos
inc
push
in
andl
mov
out
bnd
aam
out
stos
cmc
call
es
lcall
fidivrs
pop
push
mov
lods
scas
popa
add
add
and
outsl
push
das
xor
mov
cmp
cmpsb
cmp
sub
push
cmpsb
mov
push
mov
xor
das
xor
or
test
adc
xchg
cs
push
ret
and
xor
mov
jnp
iret
cmp
push
or
pause
adc
sbb
jnp
clc
sbbb
mov
ror
test
jo
jg
cmpsl
fists
adc
fisubrs
stos
add
or
or
jns
test
jne
stos
adcb
arpl
add
dec
lcall
cld
pop
mov
push
mov
pop
outsl
in
mov
inc
lcall
cmp
int
mov
adc
inc
hlt
cs
inc
insl
xchg
pusha
lret
push
call
or
jo
sbbl
mov
pushf
pop
mov
push
mov
and
bound
fs
outsl
mov
out
jnp
popa
dec
lret
dec
ficoms
dec
fimuls
cltd
or
xchg
cmp
jg
xor
xchg
jmp
or
cwtl
sub
int3
pusha
loope
ss
ret
iret
xchg
fs
push
mov
lds
fbstp
mov
push
xor
aam
sub
dec
jne
cmp
xor
cmpsl
push
fs
add
sub
cmp
mov
pusha
lahf
sti
xchg
adc
jbe
push
arpl
inc
xchg
pop
sbb
enter
push
mov
mov
xor
scas
push
lcall
cmp
leave
pusha
mov
push
leave
jbe
adc
xrelease
stos
inc
lcall
pusha
in
stc
and
loopne
les
add
cltd
iret
movsb
cmp
mov
stc
nop
ret
es
repz
les
lahf
call
or
xchg
or
xchg
mov
fwait
in
jl
sbb
ds
test
mov
dec
loop
and
xorl
stos
loope
jae
flds
pop
scas
stos
cli
lds
adc
push
jge
cmp
rclb
cltd
xor
test
xor
das
pop
mov
sti
into
gs
dec
iret
inc
cs
popf
mov
lea
cmpsb
ljmp
pop
xor
pop
adcb
jg
leave
outsl
shl
ja
es
inc
cltd
into
dec
in
or
nop
daa
into
and
push
out
lods
pop
mov
in
mov
mov
sti
ret
fstps
scas
leave
stos
pop
mov
xor
cs
testl
xchg
vcvttsd2si
call
mov
sbb
dec
mov
aaa
sub
pop
repz
test
bound
cmpsl
fnstenv
hlt
mov
lret
mov
dec
or
stos
inc
popf
lret
mov
and
test
dec
dec
in
mov
or
add
test
mov
mov
scas
inc
in
sahf
xor
inc
in
leave
aad
out
sbb
in
mov
push
or
xchg
movsb
sbbb
mov
rolb
inc
xlat
jl
jns
jmp
cmp
mov
repnz
pop
xchg
xchg
bound
aam
rol
mov
shlb
addr16
ficoml
leave
pusha
fadd
cli
xchg
mov
dec
loope
data16
sbb
les
outsl
push
inc
in
sbb
loopne
jbe
dec
inc
fistl
adc
sub
sbb
pop
sbb
lahf
push
jp
mov
out
dec
mov
xchg
mov
cmp
rcll
and
jecxz
sbb
mov
mov
nop
imul
in
loop
mov
scas
ret
mov
pop
lock
add
dec
add
fistps
imul
incl
cmp
dec
push
adc
jg
xor
aad
mov
mov
inc
fiaddl
and
fwait
les
out
imul
maskmovq
testl
das
and
lea
mov
ror
push
jmp
lock
inc
xlat
push
adc
mov
aas
sub
test
gs
in
movsl
sub
cli
or
aas
dec
shlb
leave
loop
cmp
aas
add
fwait
pusha
inc
fdivl
mov
arpl
outsl
push
sub
sub
dec
out
sbb
mov
cli
xchg
fldl
clc
push
mov
sbb
notrack
mov
fcomip
mov
call
xor
test
fs
xchg
cmpsb
cmpsl
sbbb
xbegin
cltd
mov
ret
sbbl
jecxz
fstl
mov
fmull
scas
ss
std
mov
das
push
inc
fcomps
sarb
fidivrs
cs
cmp
xor
pop
ss
inc
mov
jno
aas
and
cmp
push
xor
pop
xchg
js
fimull
cli
xchg
or
shlb
sub
rclb
xor
out
sbb
scas
test
mov
cli
push
jmp
out
dec
in
in
adc
loope
in
addl
jae
hlt
mov
lods
inc
movsl
xor
andb
popa
loope
js
daa
add
mov
pop
sarl
scas
hlt
in
leave
iret
clc
sub
movsl
pop
shlb
movb
inc
inc
sub
cmpsl
bound
adc
fmuls
pop
stc
xchg
sub
jnp
jl
jmp
jns
bound
jne
pop
insl
mov
cld
xchg
out
lods
xchg
sub
adc
scas
sub
imul
mov
shll
and
es
shlb
pusha
neg
lcall
mov
les
adc
aaa
inc
fldl
test
sar
movsb
out
xchg
pop
jns
cwtl
cmp
cmpb
fwait
hlt
xor
or
lret
xlat
dec
lcall
jns
jae
lock
rep
mov
into
adc
addl
je
ds
xchg
lds
gs
repnz
mov
out
mov
andl
cwtl
push
loopne
jp
in
das
fildll
add
pop
loop
je
loop
and
pop
insl
sub
and
push
jmp
or
data16
int3
ret
repz
cmpsl
adc
dec
loope
push
and
test
rcrl
add
and
roll
pop
int3
movsb
shrl
lds
repnz
lret
xor
mov
js
or
dec
xlat
add
insb
std
pop
sub
std
pop
jl
sbb
shll
dec
add
add
xchg
stos
and
in
aas
lock
scas
addr16
arpl
and
push
or
mov
daa
mov
clc
sbb
imul
and
jbe
cmpsb
test
push
mov
cs
inc
sahf
add
into
ja
out
ds
mov
mov
fldl
cltd
pop
push
in
jb
sub
cmpsl
xchg
mov
bswap
push
mov
xor
lods
inc
pop
clc
gs
pop
push
ret
pop
aad
ja
xor
xor
dec
enter
daa
mov
cmp
je
mov
jge
lods
testb
push
gs
xchg
dec
enter
sbb
push
jp
pop
lods
daa
pop
hlt
pop
int
outsl
jns
sbb
and
adcl
cs
jae
mov
inc
mov
xor
or
xor
mov
pop
or
enter
jae
pop
arpl
into
in
addl
je
and
aad
int
fdivl
xor
xchg
mov
addr16
sahf
pop
stc
dec
fucomip
fsubrp
or
push
push
and
xchg
cld
xor
out
xchg
pop
mov
int3
adc
les
imul
test
add
sub
bound
ja
cmpsl
dec
movsb
jle
push
loop
dec
pop
ret
sub
pop
pop
bound
xor
adc
push
mov
adc
lea
and
mov
inc
cltd
jg
xlat
outsb
dec
mov
lds
mov
fsubl
dec
xor
cmp
add
add
in
pop
scas
ds
enter
sbbl
rcrb
jmp
xchg
adc
or
pop
lods
int
shlb
out
xor
in
push
mov
test
fisubs
repnz
jo
mov
test
push
mov
pushf
mov
sbb
jle
xchg
sub
lahf
test
int3
add
xorb
and
mov
int3
or
dec
aaa
inc
cmp
push
jp
pop
inc
pop
or
cmp
dec
std
mov
out
scas
sbb
inc
push
mov
pop
push
mov
push
and
movsl
cmp
inc
clc
and
addr16
push
movl
push
mov
arpl
rclb
and
xchg
push
cmp
jl
or
jne
test
xor
loope
jg
mov
inc
repnz
in
sahf
mov
ljmp
sub
bound
cmp
imul
xchg
jne
hlt
loopne
sti
mov
hlt
inc
cmpsb
ret
dec
add
push
jmp
jge
xor
sti
mov
inc
int3
mov
in
es
pop
fwait
sbbl
popa
mov
pop
mov
daa
movsb
test
out
leave
mov
cld
push
xlat
sbb
jae
fadds
testb
cmp
popa
adc
xchg
push
mov
mov
mov
int3
in
mov
shrb
fsubrs
inc
out
in
cmpsb
pusha
in
mov
sahf
xchg
shl
mov
les
adc
mov
xsha1
cmpsb
leave
test
cmpsb
fsubr
pop
repz
or
or
jns
or
xchg
sub
dec
mov
pop
or
popf
push
aam
outsl
add
xor
push
loop
or
or
lea
xorl
mov
add
loope
test
add
aas
lods
and
jnp
cli
cmp
sbbb
scas
pop
pop
sub
cltd
in
clc
rcll
fisttpl
pop
neg
imul
lret
and
adc
lods
std
xor
pop
sub
es
call
and
xchg
mov
les
lods
lock
in
add
test
sbbl
add
fsubl
out
cmp
mov
sub
add
prefetch
or
adc
int3
dec
and
shrb
push
and
pop
into
fdivrl
push
scas
shrl
jecxz
lock
cmp
lods
push
or
divb
adc
add
push
xor
hlt
xor
mov
movsb
xchg
mov
ds
sbb
cltd
rclb
in
cli
sub
aas
mov
push
lods
es
dec
cmp
ret
test
lret
je
add
mov
testl
lret
pop
xchg
jmp
mov
mov
sbb
lahf
test
das
mov
shl
fimull
test
vdivpd
xchg
insl
hlt
or
add
out
nop
daa
loopne
mov
xlat
ds
aas
cmp
dec
inc
clc
cmp
xor
pop
sarl
insb
add
arpl
cmp
sbb
jb
dec
outsl
call
mov
pop
fldt
mov
cmpsb
cmp
cmp
push
call
movsb
push
dec
xchg
call
aam
mov
sbb
jmp
leave
sub
jae
cwtl
add
pop
test
repz
in
jg
sbb
inc
add
pop
popa
loope
and
add
orl
test
lods
sbb
repnz
inc
ficompl
or
mov
sbb
lods
pop
arpl
into
nop
jnp
test
subl
popf
test
lock
fsubrs
cmp
jns
out
ss
sub
lret
mov
push
xchg
xor
scas
mov
xor
pop
repz
mov
xchg
lea
lret
mov
xchg
mov
addr16
pop
testb
push
out
and
jecxz
cwtl
frstor
jnp
rcl
lock
and
inc
push
dec
test
push
mov
lgs
pop
add
add
jb
sub
ja
dec
push
movsb
jae
sbb
ja
cli
insb
enter
jp
fwait
subl
jne
mov
out
hlt
pop
mov
out
or
push
add
sbb
mov
mov
xchg
daa
mov
push
mov
mov
testl
fdivl
push
adc
scas
sti
jb
addr16
cltd
jle
or
iret
in
xor
cmp
xor
inc
xchg
add
xor
ret
bnd
bound
or
pop
loopne
ljmp
sar
xchg
sub
dec
cmp
jecxz
cmp
pop
arpl
dec
lods
xor
cmp
pop
pop
xchg
jb
scas
adc
mov
xlat
hlt
pop
stos
mov
leave
and
sar
adc
sub
outsb
out
mov
or
cmp
sbb
pop
or
xor
adc
fidivl
xor
pop
jno
mov
stos
xchg
out
daa
in
inc
out
push
dec
test
pop
das
leave
cmp
addl
sti
enter
ss
mov
arpl
pushf
es
mov
rcrb
repz
sub
or
daa
in
clc
js
mov
mov
mov
dec
xchg
mov
dec
pop
idivb
mov
in
test
or
xorl
sub
lds
cmp
jbe
outsl
mov
fdiv
popw
insb
imul
rolb
cmp
xor
jmp
xorb
not
add
mov
loop
in
mov
rorl
repz
push
pop
cmp
loope
aaa
cmp
jb
cmp
das
push
jg
insl
xor
sbb
into
jo
test
inc
mov
fucom
sub
adc
add
out
jno
scas
sub
jno
adc
cmpsb
lea
sbb
cld
jno
psubusb
pop
xor
stos
mulb
lock
or
and
add
movsb
sbb
jecxz
pusha
int
or
in
xchg
sub
shll
mov
nop
ret
je
mov
flds
push
xchg
pushf
xchg
shrl
dec
xchg
and
lret
mov
dec
call
pop
add
inc
cwtl
cld
nop
lret
mov
and
xor
inc
sub
inc
push
icebp
push
pop
mov
adc
aad
or
mov
sbb
fwait
ljmp
shl
ret
ret
je
mov
daa
xchg
add
inc
pop
enter
repnz
out
ss
inc
icebp
shrl
xchg
mov
jo
sbb
bound
test
xchg
mov
or
xchg
aas
add
or
mov
iret
shll
int
stos
call
addl
pop
mov
popa
clc
int3
das
mov
loopne
out
ss
std
xchg
lock
mov
rcrl
sahf
cmp
out
aam
add
cwtl
pop
dec
push
sbb
mov
int
push
lahf
cmp
mov
xor
aad
cmpsl
cmpsl
mov
popa
clc
enter
inc
lods
or
xchg
scas
test
push
daa
add
je
sahf
xor
push
enter
imul
mov
int
sar
mov
outsl
incl
ret
or
fsts
ret
cmp
cld
clc
jb
adc
pop
rolb
add
int
andl
adc
jge
pop
lock
cli
xchg
incb
or
or
fisubrl
pop
leave
lret
xchg
sub
pop
lock
sub
push
and
sbb
cmpsb
icebp
enter
xchg
sahf
xchg
lret
popa
push
jl
lock
iret
lahf
inc
xor
das
aad
rorl
test
or
and
test
fstps
bound
add
scas
sub
loopne
mov
and
mov
or
mov
js
popf
aas
pushf
ljmp
movsb
sarl
lods
xchg
lea
jnp
pop
lods
mov
bound
cmp
imul
sahf
imul
and
push
pop
and
jae
shrl
test
jne
pop
mov
push
sbb
pushw
daa
loope
push
rcr
cmp
call
pop
les
adc
cld
cmpsb
lock
sbb
add
xor
and
or
ljmp
jge
shlb
or
mov
int3
arpl
mov
aas
mov
shl
shl
repz
mov
jmp
cmp
mov
xchg
push
dec
sbb
xor
aas
daa
xor
aad
lcall
and
mov
nop
shrl
and
pop
push
xchg
insb
lret
std
cwtl
hlt
test
loopne
mov
fs
or
xchg
sbb
out
lock
fildl
pop
mov
mov
repnz
adc
mov
mov
lcall
dec
movsl
cmp
mov
frstor
and
or
hlt
mov
leave
add
repz
ds
nop
lock
cmpsl
cmp
leave
fcompl
testl
pop
mov
call
jb
fs
cmpsb
xchg
iret
dec
mov
lret
inc
jp
jae
pop
mov
pop
in
nop
lock
js
pop
aaa
push
lock
dec
ret
repz
shll
cli
sub
sub
stos
popf
iret
mov
xchg
mov
insl
adc
insb
adc
movb
repz
aad
pop
fists
fnstenv
ja
ret
jb
decl
jbe
dec
jmp
and
xchg
mov
or
push
ficoms
mov
test
dec
push
mov
mov
pop
fdivl
sbb
dec
push
and
shlb
mov
test
fsubr
test
movsbl
pushf
jbe
cmp
mov
jo
pop
int
in
push
roll
test
mov
jl
mov
aas
hlt
inc
in
gs
xchg
push
movsb
stc
add
or
shll
mov
into
inc
orl
xor
adc
dec
pop
in
push
ds
push
inc
pop
roll
pop
clc
inc
nop
cld
and
sahf
push
sti
roll
stos
jno
fisttpll
rolb
shlb
icebp
insl
sbb
out
pop
hlt
and
pop
dec
jle
loope
pusha
lds
ds
lea
sbb
add
dec
out
push
int
pop
in
cmp
leave
sub
push
movsl
lcall
mov
out
fsts
push
les
fxch
xchg
movsl
xor
mov
aaa
jmp
mov
sub
loop
repz
lods
inc
ljmp
xchg
sbb
push
in
cs
or
bound
inc
aad
cmp
pop
loop
in
add
icebp
mov
movsb
jb
lods
sub
out
jmp
mov
ret
je
rcr
mov
mov
outsb
sarl
pushl
loop
sti
out
nop
lret
imul
jb
jle
xor
shlb
js
dec
ljmp
int
pop
sbb
cmp
lea
es
addb
cmp
push
stc
mov
js
es
push
rorb
dec
popa
movsb
pop
mov
mov
call
inc
fldenv
pop
sarb
in
jnp
outsb
jl
mov
idivl
inc
lret
lock
das
aam
inc
or
adc
jae
pop
dec
xchg
subl
popf
fcompl
mov
sbb
lret
clc
pop
mov
inc
out
scas
sbb
pop
data16
xchg
int3
pop
enter
jl
roll
in
flds
lret
push
out
inc
add
dec
inc
cmc
push
add
call
out
aas
or
inc
adc
enter
mov
jl
popf
cmpsl
cmp
ret
les
sbb
inc
scas
inc
jns
dec
mov
inc
inc
jno
mov
mov
push
jge
daa
mov
sbb
inc
fidivl
ja
add
mov
rorb
jns
xchg
rclb
add
sbb
mov
mov
jg
jnp
sti
test
shrl
popf
daa
icebp
mov
mov
cmc
sarb
lret
xchg
stos
mov
std
xchg
sub
mov
lcall
fcomp
xor
mov
outsb
daa
insb
lods
shll
aam
mov
fucom
jg
les
add
mov
mov
adc
cmpsl
and
scas
add
lea
daa
cwtl
mov
cmc
daa
aas
cltd
jb
pushf
add
sub
ret
xchg
sbbb
das
fdivs
jbe
cmp
pop
rorb
cmp
jnp
lds
subl
in
jae
push
out
inc
inc
or
int3
frstor
pop
and
dec
inc
jns
and
push
inc
add
ja
lcall
push
loop
push
sbb
mov
ficompl
mov
adc
popf
xchg
push
mov
dec
or
xor
mov
dec
imul
cmpsl
mov
mov
repz
mulb
sbb
mov
push
jmp
aad
cmp
cltd
jecxz
imulb
out
dec
mov
pop
jno
imul
sbb
insl
xchg
cs
test
mov
mov
fstps
mov
sahf
test
in
movsl
pop
cwtl
add
fst
clc
sahf
mov
fwait
jecxz
popf
inc
push
inc
hlt
mov
mov
mov
ret
lcall
sub
es
mov
cltd
cli
push
xchg
les
test
lahf
ss
leave
xchg
xchg
fidivrl
dec
outsb
and
pop
sbbb
mov
pop
or
xor
or
cs
or
loopne
pop
adc
xchg
das
cmp
shrb
pop
mov
test
pop
lcall
mov
aas
pushf
inc
lahf
add
dec
call
test
xlat
fucomi
push
lods
sbb
outsl
shrl
and
icebp
aas
mov
sub
xor
sub
lods
bound
out
add
dec
cmp
push
xlat
outsb
test
mov
push
fcmovnu
scas
xchg
mov
push
pop
test
fdivp
jle
daa
add
aas
xchg
out
rol
nop
fs
cmpsb
mov
insb
lods
sbbb
cmp
dec
cwtl
xchg
inc
icebp
mov
addr16
repz
sub
mov
out
pusha
inc
daa
lret
fbld
fs
fistpll
dec
jp
test
lods
hlt
mov
mov
pop
add
sub
sbbb
adc
push
fdivs
push
imul
dec
sub
mov
test
lea
ret
push
cmp
pop
mov
jg
push
xchg
fs
jnp
inc
push
leave
push
jg
or
add
sub
std
aas
inc
pop
pop
pop
icebp
cmp
stos
out
mov
stc
shrl
mov
jns
xor
mov
pop
lods
mov
xor
mov
js
fcmovbe
pop
scas
cld
mov
adc
mov
fs
sti
mov
gs
fdivrl
ja
in
pop
rep
hlt
add
jnp
mov
dec
push
jl
test
fisttps
mov
and
ret
int
push
push
push
fildll
and
aas
stos
scas
mov
es
cmp
mov
fildl
mov
test
dec
in
test
aad
add
cli
scas
imul
lcall
cmpsb
mov
adc
pop
mov
inc
jbe
cld
add
swapgs
les
jecxz
mov
cld
sti
int3
int3
test
inc
mov
mov
mov
enter
flds
dec
shlb
out
xchg
outsb
sbb
cwtl
imul
xor
mov
nop
test
jns
call
jecxz
push
jecxz
clc
nop
test
test
cmpsb
jecxz
inc
outsb
test
and
stos
neg
cmp
jmp
loop
add
fcmovb
inc
stc
insb
lods
mov
xor
cmpsb
rclb
pop
jge
xchg
ja
imul
xchg
mov
sbb
adc
orb
fidivrl
ficoms
add
repnz
scas
adc
inc
lahf
sbb
lret
arpl
jge
pop
call
je
push
or
cmp
dec
stc
popf
xor
inc
xchg
outsl
inc
and
push
cmpsl
sub
jne
int
dec
xchg
mov
jnp
es
jp
aas
repnz
sub
dec
cmp
jns
inc
cmp
mov
pop
repnz
scas
clc
fnstcw
arpl
add
mov
jp
adc
fwait
cmp
orl
add
jae
cmpsl
sub
fiadds
sahf
and
jbe
push
scas
insl
aaa
jge
xchg
mov
jmp
mov
dec
in
xchg
pop
insb
loop
dec
xchg
js
and
js
jnp
fmulp
int3
push
mov
ljmp
imul
and
jno
jne
mov
inc
add
push
pop
and
xor
and
add
inc
sbb
and
cmpsl
ljmp
mov
sbb
xchg
mov
call
mov
out
lds
sbb
sbb
sub
lea
dec
mov
aad
sub
pop
loopne
pop
sbb
pop
cmp
les
aad
out
push
and
xor
je
push
or
mov
inc
out
ds
test
adc
gs
ret
xchg
mov
jl
mov
sub
out
int
adc
mov
jl
pop
int3
out
fnsave
aas
das
bound
das
jmp
xchg
or
mov
cmc
or
movb
mov
in
loope
fsubs
popa
xor
xor
cli
into
loop
idivl
pusha
xchg
add
or
push
subl
je
fdivrs
or
shrb
ja
dec
test
lret
aad
popf
xor
imulb
shrb
scas
inc
pop
icebp
mov
xchg
nop
mov
add
mov
int
ret
into
ds
xor
lahf
repz
in
std
or
mov
add
movsl
nop
clc
push
or
sbb
push
lret
clc
lock
dec
add
xchg
testb
and
push
loopne
out
adc
leave
cmpsb
xor
fs
push
out
test
dec
fdivs
and
sub
addr16
shrb
mov
lret
rorl
add
jg
and
rcrl
dec
fucomip
std
loopne
mov
jp
push
ds
dec
leave
mov
cmp
shrb
aad
in
jb
test
jle
inc
pop
aad
cmp
mov
xor
cs
pop
enter
xchg
xchg
lcall
insl
jg
jg
adc
scas
cmp
sahf
jnp
popf
sub
adc
js
cmpsb
out
sub
sbb
hlt
mov
mov
and
fcomps
ret
in
xchg
aas
or
test
lods
adc
sti
js
fwait
les
inc
jmp
test
jns
cld
cs
jbe
push
jne
xchg
inc
xchg
idivl
negl
cmp
add
dec
aam
mov
rcl
insl
adc
in
push
shl
imul
loope
sti
mov
sbb
movsl
inc
filds
and
xor
fs
les
push
in
inc
lcall
pushf
mov
hlt
pop
lods
cmpsb
sti
pop
inc
lahf
cmp
jecxz
push
das
and
cmp
js
es
iret
xor
inc
pusha
leave
imul
push
movsb
aaa
jp
pop
add
lea
adc
pop
push
ja
push
test
ret
xor
shr
or
pop
jne
out
xchg
inc
lahf
ss
bound
int3
push
je
inc
and
inc
sub
js
push
sub
ret
mov
mov
xor
or
fdivrs
cmp
mov
loopne
or
cmp
insb
negb
add
adc
push
std
cmp
das
adcb
test
jge
out
into
shr
mov
and
dec
ret
jmp
push
lods
imul
jae
inc
lods
or
fidivl
test
pop
inc
pop
push
mov
cwtl
lods
xor
dec
xchg
jle
xchg
mov
nop
jnp
mov
or
test
pop
lods
push
pop
mov
in
aam
adc
push
shrl
shr
pop
leave
pushf
sbb
dec
push
popa
or
in
in
cmpsb
add
dec
lret
mov
xchg
push
or
inc
cmc
insb
int3
dec
scas
mov
ljmp
inc
roll
or
cmp
dec
push
pusha
fistps
xchg
jg
sub
bound
jecxz
mov
cmp
add
cmp
push
out
iret
push
out
push
or
scas
imul
fisubrl
pop
lock
or
in
das
cmp
leave
popf
vpsllq
mov
inc
mov
pushf
dec
out
lods
jbe
mov
or
stos
mov
prefetch
mov
push
or
sub
ljmp
lds
imul
sub
dec
fsubr
pop
add
outsb
dec
inc
repz
dec
outsl
cmc
or
jbe
iret
push
ljmp
jge
imulb
push
das
jae
sub
mov
lock
in
pop
push
sahf
pop
push
or
sahf
jne
dec
in
inc
clc
cld
cld
mov
roll
das
or
adc
and
pushf
stos
add
inc
jle
mov
dec
pop
adc
testb
dec
mov
mov
add
inc
les
jle
pushf
stos
mov
mov
loop
inc
popf
cld
jg
jae
lcall
xchg
orb
rcr
test
push
pop
shlb
jmp
subb
adc
cmp
ds
dec
sbb
dec
jecxz
mov
imul
cmpsl
add
mov
xlat
mov
or
jbe
icebp
out
popf
sbb
pop
or
adc
or
pop
push
cmp
xor
xchg
icebp
add
push
test
nop
mov
fsubrl
cmp
inc
adc
sbb
std
pop
mov
aad
mov
popf
sbb
jo
outsb
push
adc
mov
and
xor
add
jp
xchg
inc
fwait
inc
mov
cltd
jb
imul
loope
adc
and
add
cltd
cmpsl
lret
int
cld
add
test
cld
cmp
cmpsl
mov
pop
das
cmp
jp
popf
add
mov
sub
mov
rcrb
movsl
cltd
ljmp
cli
cmc
xor
testb
push
faddp
xor
ja
jno
lods
movsb
dec
add
outsb
test
mov
push
mov
mov
out
or
leave
movsl
jecxz
clc
push
je
xchg
lds
ja
outsl
dec
jecxz
mov
and
inc
push
xchg
add
sub
mov
pop
pop
inc
dec
push
jne
adc
call
js
int
inc
movsl
jne
jg
shlb
cmpl
in
aam
shr
xchg
pop
lock
xchg
pop
adc
lock
in
xchg
and
inc
jno
ljmp
mov
outsb
aas
lea
sti
arpl
lock
sub
sub
dec
popf
pop
jge
or
pop
inc
fistpl
outsb
push
movsl
mov
add
or
fistps
jmp
in
imull
lret
cmp
imul
mov
mov
aaa
test
xchg
mov
mov
or
repnz
addl
fdivr
cli
and
fstps
test
aad
adc
push
mov
push
xor
imul
aaa
mov
shl
lods
xchg
pop
push
pop
scas
jno
mov
xor
mov
cli
push
inc
pop
adc
lret
xlat
pop
mov
jo
sub
sbb
int3
lahf
xor
adc
push
jb
fdivl
mov
sti
in
mov
mov
push
imul
jp,pn
add
call
push
mov
pushf
xor
inc
mov
lock
cld
jnp
outsb
lods
call
pop
push
xchg
lahf
popf
sti
or
mov
rorl
in
daa
sub
lahf
mov
mov
cmp
decl
or
addr16
adc
shll
cmp
dec
jge
test
idivl
sub
lret
mov
or
jle
cwtl
out
push
cli
in
pushf
lret
lea
fisubrs
push
out
dec
repz
jle
dec
jmp
imul
cmp
sub
mov
shl
bound
cmpsl
xchg
popa
in
pusha
push
ds
cs
fs
sub
mov
cmpsb
sub
fstpl
xchg
jne
les
mov
arpl
iret
inc
cmp
dec
and
iret
imul
shrl
cmp
push
and
mov
fisttps
xchg
addl
into
andl
test
rclb
test
jae
iret
mov
sbbb
cmp
inc
fistl
inc
pop
ficoml
ret
fdivrs
cmp
push
sub
enter
iret
pop
shll
and
test
stos
bound
add
sub
pop
pop
cmp
pop
outsb
ljmp
push
push
sub
jle
sbb
jp
stc
mov
sbb
cmpsb
jbe
pop
jmp
push
out
sarb
pop
data16
mov
mov
call
jns
sub
sub
rep
mov
mov
cmpsl
pop
add
cmp
xor
inc
jecxz
push
test
push
in
dec
mov
or
pop
notb
fidivl
xchg
xor
or
mov
sbb
cmpb
or
lret
push
pop
add
fdiv
and
fldenv
mov
out
mov
jg
mov
aaa
stos
mov
fdivrl
cli
xchg
dec
add
aaa
xor
dec
xchg
dec
push
push
xchg
add
movsb
aaa
or
mov
test
jo
mov
shrb
imul
adc
adc
or
mov
popf
push
nop
daa
sbb
pushl
aaa
stos
push
imul
lock
repz
sub
xor
sbb
pushf
je
popa
mov
int3
pushf
sub
int
outsl
sub
lods
iret
mov
addr16
std
push
adc
mov
lcall
jo
stos
shr
sbb
mov
push
and
or
bound
ret
xchg
stos
mov
jnp
mov
hlt
inc
add
sub
cmpsb
std
sarb
pushf
lret
andb
and
adc
pop
jb
xor
mov
sahf
xor
adc
test
xchg
cmp
shrl
cmp
cmp
fcmovne
adcl
mov
xchg
daa
xor
pusha
or
fbld
cmp
and
pop
inc
push
add
xor
cmp
cld
aas
push
test
leave
mov
adcl
movsl
in
adcb
push
and
test
idivb
pop
or
fmulp
shrb
imul
inc
je
insb
push
inc
xlat
cld
stos
add
sar
xchg
add
cmovnp
mov
fnsave
popf
idivb
hlt
mov
inc
sbb
cmp
into
sbb
cmp
fsubl
sbb
lret
push
cltd
subl
sbb
pusha
nop
sbb
jmp
mov
ret
xorb
inc
ljmp
ljmp
mov
xor
jl
adc
sahf
pop
xchg
mov
shll
mov
pop
xchg
ja
idivl
cmpsl
stos
mov
cmp
pop
fidivs
and
addb
xchg
pop
lods
add
into
cltd
pushf
sub
sahf
push
inc
sbb
push
lds
and
inc
mov
gs
fnstsw
mov
lock
aaa
int
cwtl
mov
shrl
jbe
lea
or
mov
sub
or
dec
loop
je
insl
mov
jnp
xchg
loop
inc
pop
ret
cmp
lods
adc
into
and
fs
inc
pusha
faddl
xchg
xchg
inc
xor
jb
repz
sbb
inc
dec
or
mov
mov
rclb
xchg
dec
add
pop
cmc
loop
int
cli
dec
add
cmc
or
push
inc
cmpb
out
or
mov
sub
test
or
mulb
and
lahf
imul
and
pop
gs
mov
dec
mov
cmp
xchg
cmp
inc
add
fwait
sbb
iret
cltd
cmp
xchg
dec
jnp
insb
mov
sub
jb
pop
xor
std
mov
popa
clc
test
and
stos
inc
xlat
pop
push
jmp
cmp
pop
roll
inc
xlat
outsb
jae
addr16
jne
cmc
mov
adc
adc
jmp
sbb
inc
pop
sub
mov
sbb
out
cmp
jge
mov
mov
ret
jge
pop
in
cltd
push
jg
sub
and
mov
sub
pop
xchg
lcall
outsl
mov
push
ljmp
imul
aaa
and
je
sub
fcom
psllq
cli
lret
mov
ljmp
jbe
push
sub
xchg
sub
pop
sub
dec
out
out
dec
xchg
adc
inc
aas
and
jo
stos
xchg
dec
ret
sbb
mov
movsb
jae
xchg
outsl
pop
hlt
pop
cmp
int
sub
stc
ds
jo
inc
xlat
mov
movsl
in
mov
add
mov
or
cmp
cmp
fildll
dec
mov
add
or
std
loop
push
mov
scas
rcrl
and
dec
xchg
pop
hlt
filds
dec
mov
mov
iret
data16
fstpt
sbb
cmp
lds
or
stc
les
mov
out
sti
into
shrb
leave
push
mov
push
xor
mov
lahf
push
xor
idivl
push
mov
add
int
imul
pushf
or
or
cmp
test
jmp
xor
dec
or
jns
lock
mov
outsl
push
push
cmp
xchg
pop
sti
inc
in
mov
pop
push
or
movsl
mov
cmp
jmp
pop
arpl
js
scas
inc
add
int3
xchg
fbld
insl
jecxz
fdivl
push
add
lcall
enterw
inc
lock
loop
cmp
out
xchg
and
addl
scas
xor
mov
popa
mov
lret
mov
insl
mov
dec
dec
shll
pop
popa
mov
pusha
es
sub
fists
mov
jg
clc
pushf
and
popa
mov
push
cmpsb
fs
jge
mov
push
divb
popa
adc
mov
movsl
cmp
add
xor
pop
cld
cmp
stc
adc
inc
jmp
mov
pop
inc
std
pop
push
filds
jge
jb
js
push
aaa
inc
stc
or
xchg
fs
cmc
sbb
rorl
mov
mov
sbb
xchg
pop
ret
push
push
js
lret
or
repz
popa
fdivrp
and
call
cltd
in
in
test
mov
or
adc
outsl
inc
xor
in
outsl
aad
mov
jne
push
push
aad
sbb
ficomps
sti
push
rorb
xor
sti
jg
fldenv
sub
fldt
ja
cltd
add
loope
in
imul
pop
and
sti
push
roll
aam
enter
mov
jp
cli
pushf
leave
pusha
inc
imulb
add
xor
xor
add
add
sub
addl
jp
xchg
push
adc
test
mov
jb
xor
imul
xor
push
in
mov
sub
lods
popf
lock
fsts
push
cs
mov
popf
into
xchg
mov
xchg
fcmove
outsb
sbb
mov
test
push
rol
fists
into
out
adc
icebp
ror
add
xchg
lock
xor
mov
push
dec
mov
call
and
repz
jns
jmp
repz
sbb
xchg
adc
jb
push
sbb
xor
lods
push
fisubl
fcompl
fistpll
adc
enter
pop
jmp
cmp
add
xor
mov
loop
movsb
cmp
hlt
rcrb
ret
pop
rcll
loopne
ja
xchg
aaa
xchg
jo
scas
cs
adc
out
cmc
inc
fs
adc
pop
lock
and
or
leave
cmp
push
pop
xor
push
inc
cmp
push
enter
shll
mov
in
scas
xchg
and
push
loope
push
movsl
aas
dec
out
xor
fsubl
mov
lods
sub
shlb
cli
xchg
rorb
mov
push
xchg
stos
notb
out
cltd
pushf
lcall
xchg
pop
rol
cmp
push
stos
clc
pop
pop
rclb
ss
lock
jo
mov
mov
xchg
jge
loope
jne
xor
lahf
int3
arpl
stos
fs
xor
fs
mov
mov
cli
jnp
bnd
cmp
push
iret
push
mov
cli
fildll
sbb
pop
ret
dec
lock
dec
add
scas
dec
jl
and
imul
fidivs
data16
incl
data16
and
mov
push
inc
jg
cmc
lods
and
push
push
popf
test
pop
icebp
pushf
cld
add
in
and
mov
sub
scas
and
push
or
fdivrl
fiaddl
inc
outsb
xor
lahf
out
ljmp
mov
repz
cld
rcll
iret
sbb
std
leave
fld
aaa
insl
in
repnz
mov
fldt
sbb
sub
aas
pop
cltd
dec
sub
ljmp
xor
fdivs
scas
lds
jge
cmc
inc
in
push
adc
sbb
xor
xor
add
arpl
ficoms
shrl
or
sarb
xchg
cmpsb
cmp
sbb
in
sahf
scas
pop
dec
cmpl
loope
add
sub
dec
pop
lret
xor
rolb
fbld
and
add
mov
clc
adc
in
mov
fbstp
adc
jmp
or
push
mov
xor
jl
add
dec
stos
jmp
scas
inc
iret
mov
add
jg
pop
sub
mov
in
pop
adc
cmp
sub
cltd
pop
test
and
jecxz
sub
stos
je
add
mov
std
fnstenv
mov
std
cli
inc
call
mov
fisttpll
shrb
ds
adc
out
int3
xor
xchg
mov
mov
mov
inc
js
xchg
mov
jmp
test
lds
sub
inc
ja
popa
xor
cli
ljmp
js
jle
mov
dec
insl
pop
mov
imul
pop
lods
push
into
and
into
loope
js
lea
lcall
lcall
cmc
xchg
call
repz
jmp
sbb
cmp
lret
sub
loopew
mov
xchg
repnz
ss
insl
pushf
jae
push
inc
in
dec
pop
repz
mov
pusha
pop
test
cmp
xchg
mov
outsb
and
jae
test
lret
addr16
add
mov
lret
fidivl
and
push
push
sahf
lods
mov
insb
pop
test
lds
ret
sbb
sbb
iret
dec
mov
dec
mov
je
lea
outsb
adc
loope
mov
fidivrl
in
insl
pop
mov
mov
shll
mov
dec
es
or
lret
dec
cmp
pop
xchg
sub
dec
filds
fldenv
or
xchg
lea
mov
mov
lock
sarl
mov
sbb
and
xlat
xlat
aaa
shrl
mull
mov
jbe
repz
adc
insb
repz
push
mov
gs
mov
xlat
andl
xchg
fucomp
lds
mov
and
dec
jae
mov
cmp
add
and
mov
test
aaa
orb
or
mov
jmp
mov
pop
jecxz
jb
cmp
pop
mov
mov
int
filds
popa
addl
repnz
and
mov
sbb
or
jmp
sbb
jo
lods
or
dec
inc
xlat
jp
cmpsb
cmp
aad
les
es
pop
xchg
loop
mov
test
ja
fcmovnb
pop
or
mov
add
mov
and
add
jl
nop
mov
dec
jecxz
push
adc
mov
push
jmp
mov
mov
adc
add
mov
mov
dec
mov
xor
xchg
mov
pop
imul
sahf
insb
mov
mov
out
je
stos
pop
fsubr
add
enter
stc
xor
mov
push
sbb
es
add
rdtsc
xor
push
aaa
cmp
push
leave
loopne
jne
dec
shll
jl
outsb
lods
loopne
xchg
push
insl
sub
fwait
pop
ja
pop
inc
bound
call
int
add
cs
push
push
stos
add
xchg
xor
sarl
lock
mov
xchg
pop
push
sub
in
xchg
ds
leave
push
jp
dec
push
clc
jae
loope
es
xor
xor
lock
xchg
add
idiv
push
mov
sbb
add
insb
add
inc
xchg
jns
in
mov
mov
mov
int3
sub
popf
and
outsl
loop
or
xchg
andb
xor
add
adc
lcall
pushf
mov
ss
mov
idivl
cmpsl
xchg
mov
andl
pop
push
ret
outsb
fs
stos
inc
lret
sbb
clc
sbb
imul
mov
xchg
repz
cmpsl
mov
inc
mov
js
push
daa
jle
xor
inc
fstl
sub
shll
enter
in
nop
pop
sti
push
mov
and
and
mov
mov
jns
cltd
mov
fwait
aam
out
fwait
cli
mov
icebp
aad
scas
pop
dec
lahf
add
mov
adc
mov
shrl
adc
pop
addr16
int
mov
pushl
push
pop
push
inc
aam
je
add
sbb
jne
std
xchg
jmp
push
or
sbbb
mov
fnstcw
add
and
push
push
jns
gs
fs
sbb
mov
popf
fcoml
out
fsubr
adc
xchg
mov
sbb
push
or
adc
jns
push
push
pushf
test
push
adc
cwtl
push
addl
add
sub
mov
jg
add
cli
mov
call
test
sub
adc
movsb
out
xchg
mov
mov
pop
xlat
add
lea
test
and
lods
out
cmp
push
inc
int
imul
mov
int
mov
es
mov
sarl
movl
je
pmaxsw
cmp
and
inc
xor
call
cmp
xchg
call
or
mov
outsb
fwait
cmpsl
int
jmp
sbb
insb
xorl
es
pushl
cmpsl
sub
mov
data16
mov
divb
out
and
push
pop
sti
lods
mov
iret
stos
cs
xchg
pop
int
push
dec
add
dec
aaa
test
in
cmpsb
sbb
push
mov
pop
imul
sbb
imul
inc
inc
ja
jmp
rcll
insl
jg
xchg
jl
arpl
movsb
adc
lods
lret
sub
dec
scas
mov
into
ljmp
shl
sbb
or
aad
fcompl
cmp
daa
fimuls
sbb
or
push
addr16
cwtl
sbb
out
les
mov
loope
pop
cmpsl
push
pop
imul
ja
insb
jle
mov
pop
xor
push
mov
lods
jmp
cmp
cmp
cmpsl
cmp
rorb
lds
pushl
push
pop
cmp
push
xor
lds
or
cmp
xchg
add
inc
mov
mov
mov
or
mov
aad
cmp
mov
movsl
push
ss
mov
lock
lods
inc
mov
in
push
inc
sbb
inc
into
inc
sbb
lahf
fidivl
das
cmc
lcall
pop
inc
loop
lea
fisttpl
testl
xchg
jae
imull
sahf
xchg
dec
dec
jge
jmp
mov
pop
xchg
mov
std
inc
cld
push
push
mov
iret
divl
shlb
jmp
sbb
lock
repnz
insb
push
test
jmp
sub
mov
data16
mov
xlat
xchg
in
test
fwait
and
into
or
pop
rcrl
ljmp
push
jno
and
xor
push
lods
inc
dec
mov
out
call
or
gs
jge
or
push
rcrb
lea
push
outsb
add
lock
adc
outsl
je
inc
sub
mov
xchg
insb
out
jae
in
or
jge
pop
mov
dec
jge
push
sbbl
sbb
iret
sarl
imul
xor
inc
std
or
jo
dec
and
fsubrl
dec
mov
xor
xchg
xchg
mov
and
add
push
mov
add
xlat
sbb
xor
loopne
popf
adc
cltd
scas
sbbb
hlt
sarb
xchg
int
mov
lock
aad
shrb
lock
loope
icebp
adc
lods
jecxz
fistpll
aaa
movsb
inc
test
lds
repnz
in
push
ja
cmp
pushf
arpl
cmp
cmp
mov
pusha
fwait
lcall
sbb
ds
pop
mov
lret
add
stos
xchg
lcall
dec
sbb
aad
aas
mov
xchg
in
cmp
repnz
xor
mov
push
or
add
mov
addr16
divl
call
lret
subb
fisubl
push
pushf
and
sahf
xchg
adcb
cwtl
mov
sub
dec
fwait
cmc
sbb
fidivrl
xor
jg
lds
mov
lods
xlat
std
sbb
or
mov
pop
mov
jg
outsb
mov
mov
and
mov
pushf
or
popa
add
mov
imul
mov
jmp
cmp
test
cmp
movb
arpl
xchg
rolb
push
sub
andb
gs
mov
shl
clc
lds
aaa
sti
lods
push
mov
sbb
push
and
push
hlt
pop
adc
adc
dec
repz
into
fucom
lret
sbb
repz
iret
mov
pop
cmpsl
shll
cmp
shl
imul
mov
leave
sbb
rolb
mov
test
stos
cmp
mov
xchg
jg
add
scas
dec
sub
push
adc
adc
mov
data16
mov
xlat
jmp
jne
mov
xchg
mov
mov
test
jmp
mov
fimuls
aam
in
pop
and
add
or
dec
pop
mov
mov
into
cmp
dec
gs
mov
sub
inc
push
inc
cli
inc
mov
sbbb
jg
stc
sub
aaa
mov
cwtl
sbb
fstl
pushf
sahf
pushf
aad
fistpll
jp
es
out
arpl
mov
call
push
xchg
dec
or
scas
mov
dec
dec
nop
inc
add
pop
mov
leave
es
icebp
cmc
push
xlat
add
sub
dec
shlb
push
xchg
jp
mov
out
mov
ljmp
mov
aam
mov
add
ds
rcrl
pushf
jp
mov
es
push
add
out
cltd
out
mov
push
and
pop
mov
pop
xchg
jge
add
pop
push
sti
add
sub
mov
jg
jmp
lods
je
out
sarb
cmpsb
mov
int3
mov
les
push
icebp
sbb
adc
nop
dec
adc
fisubrl
inc
into
cmpsb
jecxz
divb
and
fxch
add
sbb
and
mov
scas
dec
jbe
popf
dec
ds
and
ljmp
rcr
icebp
dec
test
call
fnstenv
dec
mov
insl
xor
fldenv
arpl
dec
lea
sbb
ss
es
es
push
test
fsubrs
mov
sub
fwait
mov
and
add
cmc
test
lods
ljmp
pushf
mov
add
cmpsl
sub
push
xchg
nop
lea
bound
cli
clc
or
shlb
pop
pop
adc
repz
cmp
sbb
call
aas
pop
scas
cmpb
and
pop
or
sbb
fs
fldcw
pop
ja
ds
cmp
dec
loopne
iret
sbb
ret
jbe
shrb
sahf
movsl
andl
cmp
dec
cmpsb
dec
cmp
sub
inc
dec
jmp
mov
fdivl
out
pop
sbb
scas
ret
scas
scas
in
aas
subl
jne
push
cltd
mov
push
push
scas
push
and
addr16
divl
imul
add
cld
inc
repz
aaa
sahf
mov
adc
push
sbb
je
xor
cmc
negl
adc
cli
add
mov
push
ret
sbb
push
hlt
out
insb
adcb
xchg
xchg
movsb
hlt
movsl
cmp
repz
insl
test
pop
push
mov
cmc
xlat
sbb
add
shrb
push
xor
test
cmpsb
test
sbb
js
leave
rol
xor
incl
std
rorb
and
fldt
jae
push
lods
pop
sub
call
mov
int
cmp
push
jecxz
lods
dec
sub
aaa
mov
sub
std
adc
ds
and
mov
iret
gs
push
mov
les
roll
jae
sbb
push
jnp
xor
or
adc
lea
mov
fcomp
out
pop
dec
mov
popf
and
jmp
jmp
adc
sahf
inc
shll
int
bound
cmpsb
cmp
hlt
cmp
xor
jno
shr
jmp
sti
mov
ret
inc
fldl
mov
sti
pop
adc
movsbl
adcb
andl
push
sbb
call
je
inc
and
pushf
xchg
idivb
and
ljmp
mov
gs
test
ds
mov
inc
insl
pop
cltd
xor
aad
jecxz
mov
push
enter
lret
sti
je
mov
stos
ret
outsl
mov
imul
mov
pop
mov
lea
sub
test
imul
and
sbb
imul
adc
dec
lahf
cmp
cmp
cmp
add
shrb
mov
out
out
mov
mov
loope
aad
aas
dec
es
mov
push
mov
arpl
andb
ja
out
pop
cmp
jmp
inc
iret
movsb
fcmovnb
daa
or
jnp
outsl
inc
mov
mov
mov
sub
and
add
mov
jo
dec
icebp
mov
sub
stc
and
daa
dec
sbb
mov
mov
jo
popa
cli
xchg
in
aaa
hlt
dec
push
sbb
push
fwait
jge
adc
jae
into
sti
lock
std
aam
mov
xchg
icebp
add
aaa
into
adc
inc
jecxz
ret
dec
aas
jb
mov
xchg
pop
inc
fwait
add
cltd
test
mov
fdivrs
std
xchg
ds
repz
int
push
jl
xor
mov
or
int3
mov
loope
ss
shlb
dec
mov
popf
hlt
loopne
popf
push
sub
pop
push
jne
fsubrs
mov
xchg
aas
rcrb
mov
add
push
jmp
mov
jmp
popa
fwait
xchg
dec
cmpsl
jge
sub
pop
mov
mov
ljmp
ret
pusha
mov
add
sub
inc
mov
pop
aaa
or
stos
dec
sub
xchg
jmp
jb
inc
test
xchg
push
jne
xchg
sbb
into
repz
ja
loopne
fisttps
sti
mov
lods
popa
dec
pop
xor
aas
add
lahf
adc
inc
jbe
xchg
push
fildll
xchg
mov
leave
adc
jbe
lret
data16
ror
into
pop
pusha
or
cmc
and
pushf
push
mov
inc
ss
ds
cmp
cmp
inc
scas
and
or
jge,pt
xchg
mov
sub
pop
dec
xlat
bound
in
daa
push
xchg
jne
or
push
pop
pusha
and
and
push
clc
lods
inc
ljmp
bound
or
mov
cltd
xor
icebp
sbb
sbb
or
ja
jns
pop
popf
mov
ljmp
jbe
ja
dec
es
dec
cltd
or
imul
jge
cmpsb
cmp
cmp
jae
xor
les
mov
cmp
sbb
xor
and
sbb
xchg
dec
dec
stc
shrb
jno
js
leave
daa
in
cmp
movsl
cli
insb
jne
outsl
cmp
sbb
pop
pop
or
loop
cmp
es
cli
sti
shrb
push
cs
sbb
insl
fs
lret
out
dec
dec
add
stos
mov
fnsave
sti
mov
js
sbb
nop
push
pop
cli
xor
js
push
arpl
jb
loope
pop
or
inc
xlat
sub
stos
inc
js
subl
cmp
sbb
dec
push
fwait
push
out
jmp
xchg
loope
pusha
xorb
aas
xchg
repz
push
lods
adc
mov
or
jmp
jmp
sub
jl
scas
sbbl
or
dec
mov
popa
addl
or
movsb
call
sub
clc
lgs
dec
loopne
leave
sub
cmp
pop
out
mov
jbe
repnz
stos
lock
pop
cmp
dec
xchg
sbb
scas
movsb
loopne
aad
push
mov
jecxz
or
push
movsl
cmp
mov
dec
cld
xchg
push
pop
sbb
dec
aaa
sbb
sub
push
cmpsl
dec
mov
pop
pop
sub
dec
jg
push
insl
jg
dec
jno
xchg
cmp
and
xchg
inc
mov
hlt
push
mov
ljmp
call
lret
out
aam
push
ljmp
jno
nop
xor
xor
xchg
adc
jmp
leave
jg
jae
inc
imul
insb
sub
jo
mov
fists
out
or
inc
add
mov
fbstp
mov
mov
out
sti
xor
mov
push
es
sbb
xlat
imul
lock
push
sub
popa
std
scas
mov
mov
push
arpl
pop
mov
lock
adc
mov
and
nop
psubsb
fidivrl
in
cmp
mov
xorb
mov
cmp
cmpsl
imul
pop
repnz
lods
aad
pop
sahf
clc
movsl
cmpsl
adc
popf
adc
outsb
filds
push
pusha
xor
cmpsb
fnstcw
adc
jbe
shlb
jo
adc
xor
cs
fists
adcb
add
rcll
ret
into
aaa
and
pop
add
jbe
dec
jle,pn
fimull
ret
sarb
xchg
pop
dec
pop
adc
push
inc
imul
inc
push
inc
push
adc
js
into
or
inc
ljmp
adc
jp
addb
xor
pop
pushf
movsb
decb
inc
popf
divb
xlat
jns
insb
jge
dec
sbbl
xor
movsl
icebp
cmp
fwait
push
push
dec
xor
bound
sub
insl
test
mov
adc
lods
aas
lcall
jno
push
shrl
xor
push
jge
add
jae
jg
sti
dec
in
dec
inc
fcom
rcrb
iret
imul
sti
shrl
sahf
xor
pop
fwait
mov
jmp
sub
inc
mov
pusha
jecxz
push
cmc
lods
mov
scas
push
xchg
xor
loope
stos
push
dec
mov
xor
mov
push
cld
test
ret
arpl
mov
popa
mov
js
daa
jnp
push
cmp
outsb
pop
xor
push
pop
mov
push
mov
sbb
addr16
hlt
cwtl
push
inc
scas
inc
fs
test
dec
scas
cmpb
xchg
inc
out
adc
outsb
test
das
mov
inc
nop
sbbl
or
outsb
xor
push
daa
aaa
into
pop
ja
test
outsl
mov
mov
movsb
sub
fcomps
insl
jb
xchg
mov
jl
mov
cld
stos
mov
push
leave
and
das
popf
inc
mov
xchg
xor
pop
fs
and
out
inc
sub
test
stos
jp
and
dec
pop
sub
push
jb
mov
ret
pop
push
dec
pop
cmp
test
out
or
cwtl
out
insl
mov
fstpl
rcrb
jp
mov
movd
aam
roll
and
and
sub
scas
ja
test
in
add
fwait
jmp
das
iret
fwait
jmp
enter
enter
add
inc
lods
push
sub
loopne
mov
ret
fwait
dec
dec
dec
push
ljmp
outsl
popf
push
jmp
lahf
repz
test
call
push
pushf
xor
je
jle
repz
jb
int3
and
mov
test
sub
rolb
or
shlb
movsl
lahf
mov
dec
lcall
outsl
and
inc
stos
inc
mov
mov
adc
test
fidivrs
leave
test
and
int
les
or
sub
lods
dec
clc
sbbl
jge
or
jle
sbb
mov
cmp
insl
jmp
mov
adcl
insl
in
test
mov
fnsave
jae
sbb
and
clc
adc
mov
ret
repz
pop
clc
cwtl
out
inc
addb
mov
into
dec
pop
add
mov
icebp
lcall
loopne
repnz
movsl
adcl
xchg
idivl
ljmp
out
pop
mov
xchg
xchg
jns
xchg
orl
pop
dec
add
repnz
ret
call
xchg
cmp
push
or
pop
mov
push
mov
fsubrs
mov
insb
rorl
push
pop
in
sub
fwait
out
mov
cld
or
shrl
mov
add
ljmp
mov
adc
pop
mov
mov
je
pop
jle
push
out
and
jmp
flds
xchg
jae
leave
xor
mov
fimull
scas
mov
xor
mov
out
sub
dec
mov
adc
ljmp
xchg
pop
fidivrl
cmpsb
xor
mov
cmp
sub
cmpl
shl
cwtl
xor
adc
mov
je
scas
and
pop
xchg
stos
jle
lods
call
pushaw
sbb
mov
jbe
mov
bnd
add
and
push
and
inc
cmp
fcoml
jbe
lahf
movsl
js
fsqrt
mov
pop
inc
pop
lock
mov
out
cmp
add
gs
sbb
sbb
fucomi
xchg
jns
xchg
out
push
loop
call
xor
sti
xchg
cmpl
outsl
ret
icebp
jnp
dec
dec
loopne
sbb
and
cltd
xor
shlb
pop
dec
iret
push
lods
add
mov
out
lods
lds
ljmp
mov
inc
push
hlt
add
sbb
out
dec
cmp
jae
in
mov
sarb
sub
mov
xchg
enter
sub
lea
add
divl
decb
scas
sbbl
insl
jno
xchg
inc
out
jmp
mov
push
std
xchg
adc
fisubs
and
add
inc
pushf
insl
sbb
fbstp
cmp
and
outsl
fucomi
mov
rcr
mov
iret
popa
lds
push
pop
mov
test
sbb
push
mov
and
add
loope
fcompl
push
pop
fwait
dec
cmpsb
lahf
mov
xchg
jbe
fidivs
cli
adc
inc
hlt
mov
mov
adc
xchg
pop
test
insl
mov
idivl
mov
mov
cwtl
xor
push
imul
inc
mov
mov
stos
pop
out
leave
inc
sub
jne
sahf
jno
arpl
xor
ret
clc
mov
and
outsb
sbb
int3
mov
xor
scas
mov
inc
imul
push
in
sbb
xor
pop
pushf
repz
or
fs
pop
in
and
and
inc
jae
xchg
je
and
lock
out
repnz
js
xlat
jnp
into
sub
fwait
popf
lods
mov
scas
out
ja
dec
pop
shlb
stos
lds
daa
shrl
dec
pop
out
inc
dec
out
in
pop
mov
fidivl
or
adc
cs
call
push
icebp
cld
or
pop
add
push
mov
into
push
push
and
push
push
fistps
xor
ljmp
jbe
imul
das
mov
sub
add
mov
mov
in
cmp
mov
push
out
pop
dec
cmp
sub
lcall
cmc
scas
ret
cmp
loope
push
push
enter
and
cmc
cmp
in
mov
sti
pusha
xchg
xchg
mov
int
add
adc
stos
inc
les
jb,pt
adc
fildll
pop
push
fwait
test
and
test
pop
repz
mov
mov
lcall
sbb
inc
push
xor
out
stos
mov
cmp
adc
lods
jg
rorl
xor
or
lock
lods
xor
jge
push
add
xchg
xchg
inc
cmp
dec
push
xor
pop
fcomip
xor
ss
inc
mov
lock
mov
and
inc
test
jns
int
call
xchg
xchg
scas
fsubr
filds
or
outsb
imull
jns
andb
add
cmc
push
adc
xchg
imul
leave
push
cmpsl
std
aad
inc
mov
mov
push
jne
mov
jecxz
inc
out
aad
dec
and
and
iret
nop
push
mov
xor
cmp
xor
js
and
test
cmpsb
movsl
lea
mov
pop
fistps
aam
add
adc
movsl
mov
xor
lret
xchg
xchg
mov
pop
out
aad
int3
or
cmpl
jecxz
sti
mov
xor
sub
adc
mov
push
jmp
mov
xchg
xor
sub
or
shlb
in
pushf
xchg
pop
ja
push
or
cwtl
jnp
push
mov
mov
cmp
ljmp
ljmp
pop
push
mov
dec
dec
stos
adc
cs
stc
les
mov
lock
mov
push
mov
mov
test
add
loop
jbe
je
pop
sbb
jle
inc
shlb
add
je
or
ret
cmp
fwait
iret
fxch
sbb
arpl
out
jno
sub
mov
jmp
inc
sahf
repz
gs
and
or
xchg
ret
psubusw
aam
lret
mov
mov
jno
call
or
add
inc
xor
scas
aas
push
adc
adc
mov
cwtl
in
push
cltd
mov
xor
xchg
popl
lock
push
js
push
xor
mov
sub
sbb
sub
push
in
pop
lods
sub
ror
mov
sbb
mov
pop
xor
shl
jmp
cmpsb
fsubs
in
jp
push
pushf
ret
in
std
rcrl
lret
repnz
icebp
mov
ret
insb
add
sub
xchg
lcall
mov
test
and
sub
push
test
shrb
cmpsl
cltd
push
cmp
outsb
mov
cmp
inc
rclb
mov
mov
cwtl
incb
xchg
sbb
jae
pop
gs
movsb
nop
fstpl
xor
sahf
addb
jmp
and
aas
sbbl
push
testl
push
mov
rcrl
pop
add
into
pop
cmp
push
xchg
insb
xor
shl
je
dec
mov
sti
jg
mov
add
mov
mov
not
popl
movsl
fstl
adc
lods
outsb
clc
jbe
or
les
inc
and
pop
push
fbld
fmul
pop
mov
out
pop
negb
or
cmpsl
out
pop
pop
add
outsl
push
mov
mov
sbb
dec
pop
jl
es
shr
mov
mov
or
pop
xchg
shrb
mov
ja
movsb
sub
jne
roll
enter
pop
orl
sbb
inc
sarb
mov
jmp
inc
bound
jbe
jne
inc
add
imul
cli
mov
push
popf
mov
pop
inc
fidivs
in
addb
inc
lods
jmp
call
dec
mov
and
cwtl
das
adc
add
mov
xor
aam
fildl
fidivl
or
fdivl
andb
push
mov
mov
enter
or
adc
or
cmp
jb
cmp
and
popf
pop
loop
pop
repnz
inc
sbb
mov
dec
dec
rcrl
out
jo
add
sbb
sbb
insl
jbe
call
mov
adc
and
sbb
ds
dec
lea
outsl
imul
jae
or
mov
fisubs
cmp
push
dec
adc
add
lcall
pop
adc
mov
jle
jle
xchg
sbb
push
out
aas
xchg
popa
mov
push
addr16
call
outsb
push
das
mov
push
mov
adcb
push
or
imul
movsb
dec
mov
movsb
das
or
xchg
jge
push
test
mov
inc
sub
test
js
jns
cmpsb
fsts
xchg
idivl
shl
pop
stos
and
cmp
aam
shl
sub
daa
pop
fsubrs
cmc
fwait
xor
iret
xor
dec
mov
ljmp
pusha
ja
mov
sbb
lcall
iret
push
add
push
and
xor
out
sti
mov
lahf
rolb
test
pushf
dec
fsts
jecxz
sahf
sbb
and
adc
jle
popa
lock
out
and
lds
ret
push
addr16
arpl
xchg
ljmp
arpl
mov
and
adc
add
roll
mov
repnz
fwait
jne
mov
andb
clc
jno
mov
pushf
or
out
lods
es
aad
in
mov
bndstx
mov
mul
add
dec
xor
mov
lret
mov
pop
mov
sub
cmp
cmp
test
outsl
add
mov
push
jo
btr
lahf
std
inc
mov
outsb
call
mov
fwait
pop
lahf
std
movsl
sbb
aam
call
cmpsb
jno
adc
cmp
sub
or
rorl
fucomp
or
push
dec
cmp
or
adc
loop
adc
fiaddl
arpl
jne
test
stos
mov
out
pop
pop
push
data16
xchg
imul
hlt
in
test
mov
push
xor
inc
les
imul
adc
adc
cmp
mov
fs
test
dec
lods
test
and
popa
xor
sub
shl
dec
mov
jge
sub
mov
fnstenv
inc
jmp
test
jg
aad
xor
push
js
inc
adcl
pop
xlat
sbb
sbbl
add
fld
loope
nop
es
orl
popa
aam
inc
fidivl
adc
dec
sbb
xor
or
inc
jbe
push
or
inc
fistl
xor
xacquire
xor
add
out
out
js
xchg
fwait
jl
push
mov
sbb
pusha
mov
fsubrp
xor
pop
lcall
and
inc
jg
cmp
push
jmp
movsl
adc
imul
mov
cmpb
mov
mov
or
adc
jle
outsl
cli
and
xor
push
clc
adc
cwtl
jne
pop
xor
cmc
mov
cmp
pusha
lea
or
add
subb
cmp
scas
jo
add
push
rcrb
cmp
mov
lea
or
jb
pop
pusha
testl
mov
out
xchg
xchg
jno
pop
lahf
fs
xor
ljmp
pop
push
adcl
cmp
popf
aaa
adc
decl
outsb
mov
fcmovu
rcrl
push
lea
movsb
sub
adc
push
lock
xor
mov
push
jne
cmpsl
insl
sub
hlt
cmpsl
cltd
dec
push
sub
outsb
mov
mov
push
mov
and
fmull
mov
gs
inc
notb
ret
leave
int
fwait
dec
in
mov
pop
mov
jg
mov
and
adc
leave
cmpsb
sbb
mov
push
adc
xor
call
mov
in
test
lret
incl
cltd
das
aam
sbbb
jae
aas
mov
shrl
popa
adc
rcl
adc
inc
lcall
and
ds
ret
or
inc
mov
mov
lahf
inc
fadd
popa
call
add
adc
xchg
inc
push
adc
cmp
inc
push
or
out
or
outsb
cli
cmp
cmpsl
ds
ret
adc
or
aas
cmp
jns
popf
outsb
dec
jl
popf
pushf
jmp
pop
sub
push
mov
shl
and
stos
mov
and
addr16
push
into
out
mov
jmp
mov
in
aas
mov
mov
cmp
pusha
fcompl
pop
imul
or
ljmp
jno
push
outsl
repnz
push
inc
add
xlat
int
add
mov
jne
subl
cmpsb
cli
mov
inc
lods
inc
mov
mov
sbb
mov
int
aam
sub
ljmp
loope
aas
mov
jb
mov
fadds
fimull
xor
aas
adc
jl
repnz
gs
cmp
aam
push
fnsave
dec
push
int3
fiadds
pop
divb
mov
pusha
daa
or
push
jnp
xchg
jno
repnz
mov
mov
aad
sti
pop
fnsave
popf
outsl
movsb
es
nop
and
mov
in
sbb
mov
cld
mov
add
es
pop
fisttps
inc
call
sbb
sub
je
sub
and
cmpb
push
mov
addr16
in
cmp
jne
add
stos
and
repnz
insb
or
test
out
repz
outsl
cmc
sbb
test
xchg
mov
mov
loop
sbb
push
lods
xchg
test
js
fnsave
fidivl
cmc
cmp
cmp
int
sub
lods
mov
sbb
dec
push
push
pushf
imul
mov
fs
movsb
aad
sub
and
cmpb
rcr
adc
or
dec
cmpsl
mov
pop
imul
xchg
mov
dec
loope
outsb
cmc
push
pop
ljmp
xchg
cmp
in
sarb
add
pop
popa
repz
sbbb
inc
xlat
inc
dec
add
imul
shlb
inc
arpl
dec
fidivl
mov
stc
imul
add
andl
jle
repnz
dec
cltd
stos
mov
into
xchg
sahf
jo
int3
ja
xor
push
pop
repnz
jg
mov
movsl
lds
std
scas
out
jle
cwtl
xlat
movb
das
fstpl
cmpsl
jp
jnp
shll
popa
in
push
iret
push
inc
arpl
enter
int
and
push
inc
sub
insb
inc
inc
aad
cmp
int3
es
in
xchg
call
outsb
sub
call
lock
insb
mov
dec
flds
or
leave
pusha
popa
sub
cmp
stc
aas
ret
mov
xor
ret
data16
xchg
push
movsb
cmp
mov
vpcmpgtd
sahf
mov
jle
scas
rorb
test
sub
or
mov
mov
mov
cmp
inc
stc
nop
ja
mov
cmpsb
pop
movsb
push
out
xor
roll
jmp
cmp
push
cwtl
push
lahf
xchg
insl
shll
in
shufps
push
xchg
jle
lds
pop
mov
shrb
sarl
loopne
lock
test
sub
sub
dec
in
mov
lock
mov
aaa
xchg
pop
repnz
push
mov
bound
rclb
add
cmpb
and
int
outsl
mov
dec
ret
aas
test
daa
loopne
mov
xchg
jbe
or
jo
shll
xchg
xchg
push
movb
rorb
imul
scas
dec
fdivp
pop
jb
cmpsl
ds
out
dec
stc
in
cmp
gs
lret
xor
jne
mov
push
call
movsl
ljmp
shrb
sbb
aas
xchg
xchg
imulb
dec
cmp
loopne
stc
popf
mov
fwait
sti
gs
sbb
push
mov
pop
divb
mov
std
popf
dec
icebp
xchg
jl
xchg
add
inc
xchg
jb
inc
cmp
jmp
in
sbb
cmp
sbb
cmp
imul
aas
pop
jae
mov
inc
rcr
and
mov
push
push
or
jg
aam
cmc
inc
cld
rcl
les
lods
pop
add
xchg
mov
add
mov
les
or
out
and
or
ret
stos
sbb
mov
je
cmpsb
xchg
cmp
movsb
popf
cmp
cmp
cwtl
jge
inc
or
or
dec
lret
cmp
rol
scas
jge
mov
std
mov
int
mov
sti
sub
push
inc
sbb
mov
call
ficomps
mov
xchg
aas
push
inc
sub
xchg
add
or
or
dec
pop
leave
sahf
jne
sbb
js
push
cld
mov
add
lret
cld
sub
das
and
jno
js
cmp
pop
testb
and
mov
stos
shll
jbe
fildl
cli
xor
adc
and
adc
jo
cli
adc
gs
lock
pushf
daa
mov
pop
xchg
pusha
or
jg
rolb
pop
mov
stc
mov
daa
jecxz
in
addr16
or
sub
stc
int
sbb
mov
adc
nop
mov
xchg
mov
rcrb
and
add
xchg
push
rorl
hlt
jno
mov
ja
mov
or
jle
mov
push
call
in
fnstenv
sbb
adc
push
sub
pop
jno
loope
xchg
fsts
lret
int
daa
ljmp
jno
dec
stos
sub
or
jns
stos
sub
repz
pop
sbb
js
mov
sub
mov
xchg
es
mov
lds
popf
jg
pop
push
jbe
in
xchg
cmp
xlat
test
jmp
je
test
rcrl
inc
int3
jecxz
out
pop
fsubrl
pushf
xchg
add
mov
add
enter
mov
sahf
push
sub
push
nop
xor
or
push
fs
mov
jbe
in
stc
ja
inc
add
ljmp
sub
cld
jb
push
int3
push
in
test
icebp
mov
ret
rcr
cmc
push
push
jle
ficoml
punpckhbw
outsl
subl
jnp
adc
push
jne
fisubl
dec
xchg
adc
ljmp
sbb
mov
adc
push
xlat
jne,pn
mov
xchg
pop
mov
gs
sbb
or
dec
fcmove
mov
pop
add
adc
and
pusha
cwtl
add
jp
stc
stc
nop
sub
leave
bswap
imul
or
lcall
push
fdivrs
rcll
mov
fwait
clc
ja
cmp
push
cmc
mov
lcall
stc
je
push
inc
enter
mov
adc
imul
and
push
add
adc
fnstsw
add
ret
lods
shl
or
push
negb
adc
mov
sahf
outsl
stos
vmread
gs
hlt
popa
lret
push
jle
shrl
dec
dec
addr16
add
add
jmp
pop
add
imul
repnz
cmp
das
add
xchg
test
pop
xchg
or
add
push
cmpsb
push
jl
arpl
stos
mov
fisttpll
aam
aas
dec
and
cmp
cmpsl
outsl
dec
in
push
roll
imul
mov
and
bound
aaa
mov
fsubl
pop
mov
adc
movsb
nop
jbe
loop
ljmp
mov
popf
shll
sbb
inc
ljmp
ljmp
jo
mov
mov
ja
dec
pop
outsb
je
push
sub
insb
lret
add
ret
aam
sbb
dec
loope
cmp
push
mov
xlat
cltd
aaa
jecxz
cmp
sub
mov
test
sbb
mov
xchg
imul
pop
push
out
dec
jg
ret
outsb
inc
xlat
fidivs
aas
or
in
sahf
xchg
mov
jno
lea
jle
inc
je
add
mov
lahf
jb
insb
leave
and
push
fnsave
xchg
mov
sub
add
frstor
loopne
ss
inc
add
mov
lea
ret
adc
cmp
loopne
xor
std
add
inc
sbb
nop
mov
cmp
mov
cmpsb
cmp
add
push
jo
inc
pop
push
rorb
mov
sbb
dec
scas
call
jge
sahf
mov
jecxz
sub
push
jl
shlb
inc
loope
lcall
cwtl
mov
fdivl
mov
mov
cld
stos
hlt
iret
loop
inc
sbb
pop
jae
repnz
and
jmp
stos
and
ljmp
jbe
adc
or
roll
inc
imul
aas
popa
push
in
xor
rcrl
enter
scas
loop
mov
mov
sbb
adc
popf
pusha
bound
jmp
out
mov
rol
fadds
in
test
mov
or
leave
jne
or
les
into
leave
or
je
dec
mov
fimuls
stos
pop
out
mov
and
sbb
pop
jecxz
test
jbe
pop
shl
xor
xor
fadds
add
dec
pop
push
stos
addr16
adc
push
jae
decl
pop
cs
sub
js
pop
jecxz
lods
adc
push
lea
in
xchg
xor
inc
ss
fisubs
popf
shl
cmp
lahf
sbb
dec
cmp
nop
push
cmp
push
cli
and
dec
pop
xchg
pop
mov
sarb
and
push
xlat
inc
mov
icebp
adc
test
jl
loopne
xor
mov
cmp
push
fcomps
xor
rcr
jmp
push
movsl
cwtl
test
pop
jg
pop
lret
xchg
xchg
rorb
fistps
cmpsl
ret
and
fwait
mov
int
jge
adc
pop
dec
push
hlt
xor
xor
mov
adc
lods
icebp
push
testb
in
dec
cld
xchg
jg
pop
push
sub
mov
out
inc
push
jb
inc
dec
out
mov
rolb
adc
mov
mov
mov
inc
mov
cmp
cmp
xlat
lcall
lahf
jmp
stc
fdivrs
lret
or
push
push
mov
mov
and
jp
shlb
loop,pn
cmc
int3
xor
and
xchg
mov
in
xor
cmc
lds
push
shlb
gs
lcall
rcr
and
rorb
insb
pusha
imul
jno
mov
inc
push
mov
ljmp
push
gs
dec
push
paddusb
adc
mov
lcall
mov
jb
xor
inc
pop
add
iret
xor
fs
lods
movsl
out
jge
les
push
gs
test
cmp
stos
rorl
orl
or
add
std
shr
sub
mov
mov
stos
xchg
and
cltd
rolb
push
lods
or
and
sub
push
sahf
pop
mov
aaa
mov
sarl
dec
sbb
xor
sub
jmp
lods
mov
gs
dec
mov
movsb
cmp
scas
hlt
adc
ljmp
inc
in
or
loop
add
aam
or
adc
mov
xchg
jo
jnp
inc
mov
mov
sub
rcrl
fwait
jle
sbb
push
dec
cmp
aas
jecxz
jno
not
dec
ffree
fwait
push
js
leave
adc
aas
out
sub
pop
fwait
sti
popf
or
xchg
das
icebp
adc
clc
aaa
xchg
imul
mov
test
in
add
sub
dec
scas
fimuls
out
mov
fisttps
mov
xchg
cmpsl
out
lahf
stos
call
ljmp
lea
xchg
cld
les
stc
or
movsl
jae
or
js
or
lods
dec
xchg
adc
mov
data16
popf
jno
pop
push
mov
xchg
ret
gs
les
outsl
pop
lods
pushf
pop
int
insl
jnp
xchg
and
cmp
xor
insb
jmp
jp
dec
popa
clc
cmp
aam
in
sub
pop
dec
in
sub
int3
lds
pop
scas
adc
dec
sbb
jl
xchg
sbb
mov
popf
inc
or
xlat
sti
and
shll
jb
std
mov
lret
pusha
call
sti
test
daa
xor
cwtl
or
pop
mov
mov
xor
mov
fimuls
in
jmp
push
fucomp
push
cmovo
mov
jns
jbe
lds
jns
int3
daa
popa
xchg
lcall
orl
dec
insl
sub
stos
pop
lahf
movsw
scas
mov
sbb
mov
nop
lret
cmp
cmp
push
sbb
shlb
cmpsb
cmp
push
jno
pop
scas
mov
data16
loop
imul
aad
cwtl
mov
cmp
jmp
adc
imul
fiaddl
fs
fdivs
decb
xchg
popa
and
xchg
stc
popf
dec
lds
jg
outsl
cmp
push
push
insb
test
jp
outsb
iret
repnz
pop
pop
or
add
insb
fstps
adc
pop
pop
repz
mov
aam
sbbb
test
push
sbb
ficoml
sbb
sbbl
ja
mov
jae
lret
xlat
push
lods
cmp
jnp
ret
mov
inc
xchg
and
sub
lods
xchg
dec
fwait
dec
ret
mov
sub
inc
bound
adc
int
pop
mov
cs
test
mov
sub
data16
in
xchg
iret
mov
cmp
lock
cmp
fdivr
lret
stc
jg
sbb
sbb
ret
loop
call
xlat
js
adc
in
orl
insl
mov
pop
mov
cmp
in
pop
cmc
jecxz
mov
rorb
fs
aad
cmc
cmp
xor
int
leave
ss
mov
mov
mov
adc
int
jmp
shlb
push
int3
jo
mov
pop
sbb
call
push
or
cmpsl
xorl
shrb
sub
jnp
test
cmp
or
fldenv
sti
fs
push
inc
and
jl
xchg
dec
adc
inc
pop
dec
mov
or
cmp
fs
mov
sti
jae
out
sbb
jns
dec
or
insb
insl
jge
lahf
mov
mov
xchg
and
jo
dec
loop
arpl
push
sti
imul
mov
adc
dec
jge
jb
sub
or
loopne
out
xor
cli
divb
fistpl
out
sub
push
xchg
data16
xlat
repz
and
push
and
jl
ja
jecxz
or
int3
mov
cmp
jge
out
stc
fmull
or
mov
cmp
and
sbb
add
cmp
mov
outsb
adc
cmc
subb
fs
push
ljmp
jno
cmp
ljmp
call
ror
dec
cmp
push
adc
into
lcall
bound
movsl
leave
cmp
push
gs
rol
jle
sbb
test
outsl
leave
scas
roll
aad
add
sub
jne
adc
js
out
arpl
movsl
sbb
mov
inc
cmpsl
mov
pop
push
out
xchg
inc
inc
mov
or
std
mov
mov
dec
fistps
clc
push
pop
shlb
outsl
add
mov
test
adc
inc
repz
aas
in
dec
jge
jb
jae
add
lods
and
cli
rorb
pop
std
xchg
mov
cmpsb
ds
add
aas
xchg
hlt
ds
sub
xchg
hlt
push
pop
dec
sbb
jne
jge
jne
popa
enter
pop
adc
jp
out
jnp
mov
mov
addb
or
sti
mov
jg
mov
jb
imul
xchg
mov
jo
and
stc
or
test
mov
jo
mov
mov
add
mov
push
rol
add
ret
test
ficomps
and
xor
arpl
test
mov
xorl
sub
push
dec
adc
shll
add
push
push
movsb
repnz
aaa
xchg
enter
jl
adc
mov
sub
inc
pop
sar
inc
stos
adcl
leave
sbbb
jecxz
lea
mov
and
jmp
mov
lcall
js
xchg
pusha
cli
nop
jno
mov
ret
or
ljmp
lds
adc
sub
lcall
out
jge
mov
pusha
or
mov
enter
add
fwait
jne
scas
insl
dec
sbb
enter
leave
push
mov
pushf
xor
cmp
adc
sbb
in
aam
or
inc
outsb
dec
rol
fisttpl
loope
inc
shll
sub
popf
jbe
sub
sti
pop
loopne
or
sti
mov
fidivrl
pcmpeqb
sub
shl
pop
inc
rcrl
pop
push
dec
adc
lock
ss
lods
pushf
repz
ja
shlb
loopne
sub
jle
jo
loope
sbb
push
mov
hlt
adc
ss
mov
jp
cmpsb
or
lock
cli
test
mov
jo
cmc
adc
jmp
mov
not
sbb
rcrl
pop
loop
xchg
push
aaa
cld
cmpsl
in
sub
mov
and
pop
cmpsl
rcrb
mov
inc
stc
or
aad
aas
cmpb
movsl
subb
add
in
mov
jecxz
outsb
dec
pop
aam
pop
jl
outsl
sub
mov
mov
push
jo
shl
push
cmpsl
out
loopne
clc
cmpsl
data16
xchg
cs
mov
and
or
cwtl
cmp
inc
in
xchg
jmp
push
int3
and
push
cmpsl
div
pusha
xor
popf
dec
daa
add
in
mov
and
mov
add
lcall
into
and
je
adc
loopne
jge
lahf
add
xchg
push
pop
outsl
dec
sbb
fstl
adc
in
mov
jns
sbbl
cltd
xor
mov
aad
pop
mov
adc
cmpsl
push
cltd
and
xchg
push
in
mov
inc
fucomp
xchg
ss
cmpl
or
pusha
ss
mov
pusha
jne
mov
push
sbb
sarl
movsl
scas
repnz
fldt
and
ja
xorl
loope
mov
cmp
or
jle
push
sub
aas
imul
push
js
sbb
aas
push
ficomps
aad
jbe
dec
fs
or
rcll
leave
test
or
cmpsl
ret
jp
sahf
push
push
xor
xchg
fdivrl
sbb
mov
pusha
adc
sahf
push
push
shrb
mov
or
andb
mov
movsb
xor
jle
arpl
out
mov
loope
mov
ljmp
xchg
or
iret
stos
in
fsubrl
sti
add
jo
sub
adc
call
fs
outsb
mov
orb
sub
iret
pop
dec
add
sbb
dec
push
add
push
or
sahf
sbb
mov
jae
push
enter
cmpsl
jb
fdiv
cmp
bound
fmull
cmp
rcll
enter
iret
lahf
fstps
gs
jb
dec
mov
ficomps
push
mov
pop
jmp
pop
xchg
mov
fldl
xchg
inc
in
stos
fs
enter
cmp
lcall
pop
pop
xchg
sbb
subb
push
rol
sub
or
sbb
sbbl
repnz
jo
loopne
mov
lock
or
mov
loope
jge
lea
cmp
test
add
jb
clc
adc
imul
mov
test
addl
fcmovu
shrb
sbb
inc
xchg
and
lds
mov
loope
and
cmp
js
bound
adc
pop
mov
ljmp
insl
dec
inc
int3
gs
dec
mov
xchg
jb
push
arpl
fldenv
movsl
in
daa
push
jnp
pushf
push
cmp
adc
loopne
mov
jg
dec
out
aaa
ljmp
mov
jb
add
mov
pop
dec
mov
mov
ret
and
shlb
or
nop
daa
stc
jge
push
inc
popf
xor
xlat
popa
outsl
adc
clc
or
sbb
mov
lods
push
mov
and
dec
shl
dec
xchg
ljmp
clc
inc
xor
sub
hlt
in
hlt
fs
sbb
imul
stos
stc
insb
pop
popf
outsl
inc
push
daa
xchg
jne
sarb
or
jno
ljmp
shll
adc
into
lds
xchg
sbb
xor
lahf
retw
adc
fnstenv
iret
dec
pop
je
jg
add
es
pop
add
test
lahf
lret
rclb
or
and
mov
loopne
leave
fisttpl
add
xchg
xchg
and
and
mov
andb
jns
push
mov
mov
pop
jmp
fwait
pushf
subb
push
push
insl
inc
mov
in
out
pusha
mov
push
or
adcb
in
pop
in
fistps
mov
cwtl
adc
scas
inc
ljmp
sbb
int3
enter
repz
mov
xchg
mov
push
int
fstpt
inc
push
popa
or
idiv
lret
xchg
imul
rcl
sub
mov
mov
das
add
or
sti
add
lea
mov
out
addr16
xchg
xor
sarl
ret
fwait
sbb
jbe
cmpsl
call
jl
dec
mov
iret
and
push
jo
or
ret
sub
aad
imul
into
es
out
dec
inc
fdivrs
sub
mov
fsubrs
lea
lods
lret
idivl
stos
scas
sbb
sbb
sub
dec
pop
outsl
pop
fisubrs
dec
gs
jp
mov
dec
lcall
mov
lods
ljmp
pushf
repz
loop
lret
push
mov
push
fnstsw
push
clc
leave
xchg
stc
mov
sbb
sub
cmp
stos
enter
sbb
xor
mov
cmpsl
jge
inc
push
popf
dec
jge
jp
fidivs
das
or
jg
daa
pusha
jnp
int3
fildll
push
push
stos
fwait
pop
push
inc
aam
or
cmp
add
jno
sub
mov
pop
jge
cmp
mov
and
test
nop
sub
stos
cmp
jg
cmp
add
jecxz
fimuls
gs
jmp
sub
push
sub
xor
pusha
imull
iret
and
shlb
shr
movsb
mov
es
call
or
pusha
ss
mov
cltd
scas
push
out
jbe
xchg
xor
adc
push
test
fcompl
adc
sub
test
imul
xchg
mov
test
jmp
fdiv
adc
cmpsb
xchg
mov
mov
push
push
jne
ds
frstor
xchg
cmp
cmc
loopne
testb
clc
hlt
mov
aaa
inc
es
inc
xchg
push
inc
daa
fucom
cltd
aas
sarl
sub
or
jno
add
push
adc
xchg
roll
stc
lahf
scas
inc
or
mov
add
lea
xchg
mov
dec
push
fucomi
jl
clc
inc
popa
sub
pushf
mov
insb
sub
cs
jns
addl
xchg
dec
ja
mov
or
mov
jg
insl
cs
pusha
mov
into
mov
adc
adc
stos
xor
loope
outsb
lcall
mov
sub
inc
movsl
xchg
push
clc
lret
ljmp
leave
mov
shlb
inc
loop
je
fdivl
jno
lea
std
push
loopne
and
mov
pop
mov
movsb
push
lcall
icebp
dec
aam
cmp
ret
inc
push
mov
jbe
sbb
mov
cmc
mov
add
mov
push
inc
rcr
mov
or
leave
pusha
and
lret
je
std
and
jns
lea
es
ds
dec
pop
iret
fwait
mov
ja
gs
cwtl
test
fiaddl
and
inc
jbe
scas
mov
ret
pop
pop
sub
inc
inc
sar
popa
sub
jae
dec
pop
xchg
xchg
insl
jmp
mov
and
iret
popa
mov
inc
and
aam
dec
int3
xchg
xchg
push
jo
and
movsl
xor
push
xor
jnp
cmp
dec
pop
mov
pop
hlt
sbb
arpl
imul
pop
mul
fs
adc
ljmp
push
icebp
jecxz
cmp
aas
push
outsl
cmp
push
or
fstpt
fcmovu
and
test
xor
or
mov
and
push
xchg
movsb
push
repz
jmp
jae
int3
inc
in
inc
sbb
flds
inc
cld
jne
out
sbb
js
enter
adc
xchg
inc
orl
arpl
mov
cmp
arpl
imul
add
es
xor
aam
pop
testb
mov
insl
dec
fs
cmp
lock
pop
lds
cltd
aad
lret
jns
push
movsl
ds
push
das
icebp
enter
cmp
adcb
popf
arpl
or
push
in
stos
inc
sbb
in
sbb
pop
dec
dec
into
xchg
add
fdivrl
mov
fldl
pop
mov
loopne
ja
xorb
jle
test
xchg
cmpsl
fcmovnb
jge
call
out
cmc
push
cmc
lcall
gs
inc
push
insb
into
cmpl
in
jmp
sti
and
push
xchg
lds
mov
and
or
call
aam
mov
or
stos
xchg
xor
xor
cmp
cwtl
dec
out
rclb
lds
or
mov
movsb
dec
adc
mov
jns
int
add
int3
dec
negl
mov
dec
addr16
jo
in
jae
fisubrs
jbe
pop
inc
push
imul
xor
hlt
pop
xor
push
inc
jge
ja
cwtl
and
fcoms
fiaddl
mov
pop
add
sbb
sahf
clc
add
sub
in
mov
imul
cmp
pop
aas
mov
jp
xrelease
mov
fldl
add
ljmp
and
mov
out
cmp
dec
fstps
jl
jno
cmp
inc
call
repnz
lahf
jne
sbb
cmp
call
and
mov
icebp
nop
pop
adcb
add
xchg
and
inc
sbb
mov
push
jle
xor
xchg
or
test
pop
mov
sub
mov
dec
or
inc
mov
repnz
sbbl
fwait
push
dec
mov
std
sbb
xlat
pop
or
push
or
mov
faddl
dec
xor
stos
stc
daa
cmp
gs
jno
inc
lret
mov
jmp
add
ror
popa
mov
sub
popa
clc
add
add
sbb
adc
movsb
faddl
mov
shr
neg
stc
adc
sbb
fs
dec
mov
mov
scas
pop
pop
xchg
addr16
icebp
xor
mov
jecxz
in
pop
sub
add
mov
cmp
mov
inc
mov
sub
mov
xchg
pop
int
jg
repz
mov
jp
sahf
dec
xchg
out
jns
add
lods
pop
pop
rcrb
xchg
ljmp
cmp
pop
sub
roll
dec
data16
notl
sar
push
push
mov
cmp
xchg
rol
scas
mov
andb
pop
fs
pop
xor
out
sarb
mov
xchg
mov
addr16
das
adc
sub
dec
xchg
orl
inc
aam
cwtl
xor
aas
sub
hlt
mov
mov
addr16
adc
pop
aaa
jo
cmc
pop
sub
fsts
test
arpl
dec
sbb
insb
mov
test
aaa
mov
mov
loopne
aad
dec
pop
movsl
push
cwtl
daa
adc
dec
out
test
aam
lret
sti
sahf
andb
xchg
jmp
xor
je
xlat
cmpsb
mov
jae
lret
lds
inc
imul
leave
jl
sub
icebp
pusha
sbb
stos
mov
xor
rorl
arpl
aaa
into
in
or
cmovg
dec
jecxz
adc
aam
xor
jb
adc
and
mov
rcrb
pop
pop
ss
inc
sbb
pop
loope
mov
pop
xlat
stos
aam
mov
lret
jno
or
mov
in
stos
jno
movsb
jnp
lret
inc
pop
insl
mov
add
cmp
lret
and
and
pop
mov
imul
inc
cmpsl
cmc
mov
test
nop
cmpsb
jo
pop
out
daa
or
aaa
push
mov
stc
nop
test
sub
test
adc
adc
pop
sti
stos
xchg
pop
cmp
mov
dec
jp
rcrl
push
lods
mov
jp
pop
fs
sbb
aam
push
push
jo
mov
inc
and
test
or
andl
aaa
into
aaa
mov
push
lcall
test
negb
fsubrs
adc
clc
lret
inc
adc
xchg
lock
or
fsubr
ret
or
dec
push
push
jl
in
ret
loope
lahf
cmc
or
xchg
or
sbb
lods
fld
xlat
inc
mov
xor
lods
fcoml
or
mov
out
stos
mov
mov
xchg
fsubrl
push
stc
or
pushf
bound
shlb
and
xchg
sub
inc
sbb
sbb
es
les
test
sbb
cmp
dec
or
xchg
pop
pop
lock
xchg
aad
stos
fstpt
aam
ja
xorb
outsl
cmp
xor
push
roll
repnz
or
push
cmp
mull
add
push
and
mov
sbb
mov
pusha
sbb
pop
cmp
mov
cmp
xchg
sub
cs
jae
loopne
lret
or
cmpsl
mov
xchg
xchg
mov
mov
push
test
inc
jge
sub
sub
cli
jne
les
mov
mov
test
fwait
and
mov
shrb
pop
aas
maskmovq
testl
inc
jb
stc
pop
jb
xor
jmp
sti
xchg
movsb
sti
cmp
nop
xor
in
cmp
pop
add
ja
sub
add
cmc
add
push
ficompl
add
out
mov
or
out
in
push
mov
dec
xor
and
adc
sar
pop
mov
cmp
jnp
rcrl
pop
loope
mov
cmp
pop
gs
insb
push
inc
mov
pop
push
mov
loop
mov
push
aam
dec
ljmp
mov
popa
xchg
xor
sub
dec
scas
jge
push
ret
jg
aas
pop
or
pusha
cs
pop
je
sub
loope
insl
jmp
push
les
ret
mov
adc
sub
notb
push
test
mov
loope
adc
xor
pop
js
ror
fdivs
and
test
push
mov
and
lea
mov
test
inc
push
mov
cmc
inc
xchg
cmc
adc
std
mov
xlat
push
xchg
movsl
lock
ret
jmp
or
xor
sarb
adcb
jl
sub
mov
or
push
rorl
push
out
xchg
outsb
int3
jg
mov
mov
outsb
frstor
mov
int3
insb
pop
scas
pop
cmp
shrl
roll
inc
dec
xchg
in
jns
push
mov
sub
call
pop
mov
sub
adc
adc
cmp
jb
popa
outsb
xor
scas
stos
fsts
pop
scas
movsb
lock
imul
fsub
push
into
test
in
sbbl
xchg
les
cmc
mov
jecxz
sub
aam
imul
idivl
add
mov
cmp
int3
fldl2t
gs
notl
outsl
jb
and
push
aad
and
aas
fwait
clc
mov
push
add
popf
push
xchg
ret
shrb
xchg
test
inc
add
in
aas
push
cmp
lock
movsb
in
dec
pop
test
and
sub
mov
pushl
and
fidivs
and
mov
jns
mov
mov
cld
mov
dec
add
xor
inc
and
xchg
pop
jno
lcall
fbstp
les
push
inc
jnp
popf
mov
movsl
idivl
xlat
sub
ret
xchg
adc
rolb
imul
push
add
xorb
fwait
not
iret
mov
add
std
adc
cmp
addr16
pop
xor
xchg
mov
pop
fcmove
lret
jp
test
shlb
mov
cs
dec
or
xchg
pop
daa
dec
hlt
xchg
mov
mov
ret
jmp
sahf
nop
add
sbb
out
pop
and
adc
out
shlb
xchg
std
mov
or
xchg
sbb
inc
cmp
cmp
jne
xor
movsl
adc
pop
push
insb
sti
bound
xchg
sbb
jo
push
movsl
and
sub
js
pusha
lahf
mov
idivb
inc
inc
fldenv
andl
scas
fldpi
sbbl
daa
and
scas
mov
xor
imul
jnp
cmp
mov
pusha
lock
daa
push
ljmp
jle
mov
pushf
cmp
andb
hlt
jmp
pop
and
iret
ret
mov
hlt
lock
pop
ret
repz
into
sbb
or
add
aad
xor
xchg
insl
xor
out
sub
inc
ret
stos
fnsave
or
sahf
push
pop
adc
xor
insb
xchg
cmp
push
pop
xor
movsl
in
loop
sbb
inc
icebp
and
stc
pop
dec
and
cmc
stc
or
std
fs
and
xor
test
scas
xchg
mov
clc
sbb
push
add
xor
shld
out
pop
jecxz
cmpsb
fdiv
test
into
test
nop
sbb
adc
xchg
pop
dec
dec
push
push
es
mov
lock
std
bound
sbb
lods
and
or
mov
mov
lahf
aas
inc
jns
dec
and
les
and
das
cmp
inc
ret
cmp
push
scas
inc
fcomps
mov
mov
mov
jp
xchg
push
ja
inc
ja
and
pop
mov
push
cmp
loop
pop
scas
mov
xchg
jns
inc
lods
test
xchg
aam
hlt
icebp
mov
icebp
int
movsl
and
pop
and
fmul
push
mov
cmc
lea
sysret
fldt
adc
popa
addr16
push
mov
xor
addr16
sbb
std
sbb
cmp
inc
insb
shlb
mov
dec
jne
mov
sbb
mov
jmp
outsl
xor
inc
push
dec
cmp
push
aaa
into
test
cmp
out
hlt
pop
jmp
lahf
pop
push
jp
cmp
jecxz
cmp
pushf
int
cmpsl
jmp
mov
scas
jae
mov
incl
js
sub
repz
xor
jno
lret
lds
leave
dec
loope
mov
ds
push
or
push
movsl
stos
mov
sub
jb
lcall
push
in
test
imul
je
call
sti
jbe
push
or
int
jg
xchg
mov
sub
loopne
sbb
dec
stos
fs
mov
in
pushf
das
cmp
lods
icebp
bound
lahf
pushf
scas
shr
out
fidivrl
scas
adcb
or
mov
inc
ljmp
pop
pop
movsl
mov
or
xor
jns
push
aaa
stos
aaa
cs
lods
adc
cmp
popa
adc
loop
ljmp
mov
xchg
aas
fstpt
xor
pushf
dec
push
pop
fs
test
cmp
stos
push
outsb
jecxz
jg
pop
arpl
mov
jns
adc
xchg
cs
mov
push
in
scas
xor
loopne
pop
mov
and
dec
jecxz
inc
lea
xchg
ljmp
in
mov
mov
jne
aas
outsb
mov
ficoml
das
sub
and
jnp
mulb
add
orl
das
sahf
sti
xchg
rclb
movsl
movsl
mov
dec
jl
jp
mov
sbb
notb
fmull
mov
lds
adcb
out
adc
andb
add
loop
cmp
adc
stos
inc
xlat
rclb
les
jle
cmc
add
shr
cmp
jl
push
pop
bound
cwtl
popa
clc
or
push
inc
lahf
jmp
rcrl
xor
sbb
mov
jmp
or
lods
clc
push
or
inc
imul
ja
push
clc
jbe
jnp
cli
test
pop
jnp
push
shll
shl
lret
inc
xchg
mov
adc
push
sarl
push
js
sub
std
ficoml
mov
jp
ret
sub
mov
sbb
pop
scas
mov
jge
test
int3
iret
bound
xchg
and
into
gs
inc
or
lcall
sub
loopne
mov
test
mov
adc
bound
mov
pextrw
js
aas
push
lcall
inc
gs
mov
xor
inc
cwtl
stos
ja
mov
bound
les
in
jns
pop
mov
jns
rorl
ret
add
mov
adcl
cmp
mov
movsb
jg
stc
enter
imul
push
xchg
adc
pop
adc
mov
scas
jno
or
sahf
insl
adc
cwtl
or
push
sub
jg
out
out
add
das
sahf
and
jbe
or
je
cld
mov
xor
cld
jnp
popf
xor
outsl
les
jle
jne
hlt
jae
push
movsl
adc
xor
pushf
push
loop
cmp
mov
loope
stos
mov
ret
xor
outsb
std
jmp
mov
xchg
ss
cmc
pop
jo
lea
mov
sbb
mov
mov
cmp
filds
cwtl
mov
leave
aaa
jbe
xchg
das
pop
push
stos
add
out
fdivl
xchg
ds
pop
ljmp
push
addr16
gs
xor
je
shl
lock
stos
inc
add
notl
fsubs
enter
fnsave
dec
icebp
adc
add
test
and
push
inc
and
sub
mov
rorb
xlat
outsb
add
loop
push
and
adc
pushf
xchg
add
mov
jnp
cs
imul
cmpsl
dec
sbb
mov
jle
sub
jl
mov
or
push
insl
sbb
jbe
pop
ja
mov
adc
lea
dec
fisttps
jle
add
arpl
xchg
and
mov
ds
or
lret
xchg
out
and
jl
in
sub
add
xor
aaa
mov
data16
fnstcw
int
jle
mov
and
jne
push
inc
notb
movsb
cmp
push
mov
xchg
out
out
cld
imul
cwtl
bound
fldt
cmp
mov
sbb
sub
fcom
out
cmp
shrb
movsl
stos
aas
arpl
test
insb
pop
sahf
sbb
cmp
pop
movl
mov
push
pop
mov
cmp
fsub
jg
scas
mov
das
imul
stc
fs
test
insb
hlt
adc
cmp
mov
sub
fnstenv
jl
aas
cmp
popa
mov
sub
jl
adc
inc
pop
lahf
js
and
test
xchg
lahf
mov
or
xchg
cmp
popf
mov
shl
scas
inc
mulb
or
xchg
pushf
lret
repnz
adc
inc
dec
pop
lock
jge
inc
movsb
rdmsr
and
jge
or
mov
mov
je
mov
mov
pushf
sti
xchg
into
inc
adc
xor
push
lahf
fildl
paddusw
pushl
das
movb
bound
dec
push
mov
fs
pop
mov
loopne
das
and
mov
cmp
mov
sub
adc
jge
mov
lock
adc
mov
faddl
sub
or
movsb
pusha
mov
xor
subl
test
jbe
mov
pop
jge
or
xlat
outsb
or
cmc
mov
out
movsl
mov
push
xchg
dec
idivb
push
addr16
add
adc
dec
es
push
or
pop
jae
nop
and
out
cmp
push
lcall
in
subl
mov
cmc
mull
pop
icebp
pop
adc
mov
sub
cmpsl
fidivrl
je
xchg
scas
dec
mov
imul
mov
shrb
mov
enter
stos
cltd
ss
cmpsl
daa
sbb
cmp
cmp
pop
out
mov
cmp
lock
add
cs
xchg
inc
push
outsb
in
xor
pop
lock
test
jb
in
lret
cmpb
cmp
cmp
inc
fisttpll
stos
push
loopne
fisttpll
push
mov
in
mov
shlb
dec
stc
adc
sub
fwait
adc
int3
mov
shrb
cmpsl
xchg
xchg
arpl
sahf
mov
mov
cmp
imul
fstl
push
sbb
lods
lds
pop
mov
rorb
mov
sarb
sbb
push
aad
xor
mov
mov
jp
mov
sbb
cld
inc
les
and
xchg
mov
dec
aaa
test
stc
aas
imul
dec
int
fsub
loop
adc
clc
or
pop
int3
jo
adc
mov
scas
std
or
add
popf
mov
mov
push
mov
mov
sbb
popf
mov
sbb
iret
mov
jns
outsl
nop
imul
push
adc
xor
jne
inc
lods
dec
inc
xor
ss
sub
and
mov
shr
xor
inc
rcr
sub
xchg
dec
push
jae
or
and
mov
mov
mov
psrld
dec
pushf
hlt
push
lea
std
mov
dec
insb
adc
retw
fistps
frstor
pop
push
cmp
dec
loopne
xchg
mov
add
rclb
call
push
xchg
or
stc
das
adc
mov
ds
cld
cltd
loopne
push
sub
insb
dec
dec
lcall
ljmp
sahf
shll
lods
inc
mov
inc
pushl
lret
xor
repz
mov
outsb
jmpw
or
sub
jp
jg
pop
inc
fstpl
shlb
mov
mov
cmp
inc
dec
in
adc
jecxz
pushf
or
mov
and
sahf
sbb
xchg
xchg
ss
add
je
gs
cli
xchg
lods
cld
xchg
int
jg
inc
sub
dec
jecxz
xchg
sub
jae
icebp
inc
fsubr
js
iret
xor
test
dec
mov
adc
test
outsl
mov
jo
pushl
arpl
sub
addr16
aas
push
in
or
push
sub
jg
gs
sti
ror
call
push
mov
adc
daa
and
daa
or
out
adc
push
cmp
sub
xor
cmp
ds
out
dec
and
xchg
out
fdivrs
loopne
leave
and
mov
insl
stos
inc
cmp
dec
mov
adc
jbe
xchg
scas
scas
inc
xlat
or
hlt
sbb
push
fdiv
push
stc
lcall
stc
pusha
or
daa
pop
sarl
mul
jno
sahf
and
xchg
fucomp
mov
jns
pusha
cltd
test
orb
repz
stos
mov
outsb
popf
inc
fdivrl
cmc
or
pop
arpl
xor
push
inc
int3
mov
inc
fldcw
lds
fs
mov
xchg
mov
movsb
repnz
xchg
or
cltd
lret
pop
adcb
xchg
lcall
mov
cld
lock
add
insl
pop
clc
mov
loop
pop
enter
lahf
push
data16
mov
test
in
add
push
add
lret
and
in
and
inc
test
test
ret
stos
cmp
arpl
xchg
aas
adc
xchg
cmpsb
xchg
mov
leave
outsb
shll
push
and
mov
in
arpl
xorb
pop
frstor
push
je
fdivs
fnstcw
cmp
inc
pop
inc
les
and
lret
std
lret
fildll
push
lock
das
jge
xorb
xchg
nop
out
enter
aaa
sbb
dec
xchg
stos
inc
push
test
or
or
loope
cmp
pop
repnz
pop
add
jp
sar
sub
ret
mov
insl
ss
and
loopne
push
mov
daa
outsl
scas
nop
cmpsl
test
ja
out
int3
sub
lea
sarl
xor
mov
push
pop
outsb
jmp
inc
fisttpll
fs
add
into
add
mov
sub
imull
loope
bound
mov
dec
mov
leave
jmp
orl
jecxz
shlb
push
stc
xchg
sti
xchg
sahf
xor
or
clc
cmp
shll
mov
lea
call
mov
cltd
test
stos
lock
es
dec
movsl
lea
adc
mov
inc
divl
pop
jnp
dec
fsubp
inc
sub
gs
out
push
es
jne
outsl
stos
pushf
jmp
pop
divl
in
ds
adc
leave
sti
dec
pop
push
xor
scas
mov
mov
outsl
pop
std
jo
lret
scas
nop
out
lds
or
jge
jae
mov
fs
in
mov
popf
insl
pop
dec
xchg
mov
add
jnp
and
int3
lds
aas
xchg
jmp
arpl
mov
dec
stos
mov
pop
insb
sub
out
inc
mov
je
cmpb
rorl
int
or
xor
mov
pushf
xchg
cmp
lahf
sub
movl
insb
enter
mov
jmp
lcall
addr16
jbe
pop
ds
xor
push
and
dec
cmp
xchg
and
jns
xchg
cld
mov
loopne
jo
push
sbb
and
xor
xor
mov
sub
fiadds
ret
rclb
cld
aad
ljmp
push
xor
cmp
cmp
adc
mov
xor
cmp
sbb
pop
sub
pop
fiadds
xchg
cmpb
mov
cmp
sbb
test
jns
jl
test
push
or
stc
scas
sub
push
xor
cmpl
mov
je
test
push
ss
in
jge
and
mov
push
insl
inc
stos
push
cmp
icebp
push
adc
inc
leave
push
imul
mov
into
cmc
mov
sub
sub
dec
push
sub
push
popa
xchg
pop
lods
inc
add
jb
lds
mov
add
ss
push
push
xchg
or
mov
dec
fisttpl
out
call
mov
cmp
pop
repnz
mov
jecxz
out
xor
xchg
jle
mov
push
dec
loop
movsb
aaa
sti
fprem
call
test
add
xchg
shrl
cmp
lret
lock
enter
or
inc
lret
movsl
shrb
push
aaa
pop
in
cmp
pop
insb
out
imul
es
aaa
sub
wbinvd
test
xor
cmp
or
cmp
sbb
mov
lahf
in
xor
loop
mov
mov
jb
sub
lods
ja
test
or
scas
mov
add
adc
mov
cli
cmpsl
jmp
inc
fdivr
jp
sbb
push
fldt
cmp
in
sbb
cmp
mov
fucomi
inc
mov
xchg
jecxz
push
dec
and
lcall
push
in
dec
adc
mov
or
scas
jnp
push
mov
cmpsb
cs
sub
roll
push
add
outsb
jl
xchg
orb
pop
stc
add
dec
mov
push
shlb
stos
mov
je
test
mov
dec
scas
jmp
daa
lcall
jb
test
stc
or
lcall
cmp
mov
xchg
sarl
pop
jecxz
ret
imul
cmp
push
stc
test
iret
inc
or
bound
loop
je
push
jne
rcl
jg
cmpsl
inc
sub
mov
xchg
negl
jecxz
xlat
lea
stos
inc
lods
js
clc
or
ret
loopne
jnp
jmp
fcmovbe
mov
popa
mov
mov
pop
dec
jg
addsd
xor
mov
sub
sti
cmpsl
cmp
or
pop
movsb
lds
jmp
out
test
or
cmpsb
ds
fcomps
dec
rcrl
insl
mov
mov
dec
je
sbb
cmp
xchg
mov
sarb
xor
clc
nop
mov
sarb
cmp
mulb
popa
push
add
in
cmp
jns
arpl
cmpsl
pushf
pop
or
call
stc
repnz
aam
xlat
or
lcall
mov
mov
mov
pop
pop
ret
inc
mov
ja
imul
add
je
stos
in
sbb
mov
popa
adc
xor
xor
call
pmaddwd
ja
mov
cmp
fisubl
and
sarb
clc
jle
mov
mov
push
and
pop
iret
aam
shlb
mov
sbb
shrl
sbb
cli
fcmovnb
lds
jno
je
pop
fsubs
cmp
dec
jmp
mov
rcr
inc
ficoms
cld
test
add
add
lret
sahf
push
xor
fistps
pop
lea
inc
xor
mov
push
pusha
jp
pop
mov
sub
push
mov
push
inc
cmpsl
or
mov
pop
lock
and
push
push
adc
outsl
jl
sbb
ljmp
movsl
xchg
dec
cmp
mov
mov
pushf
cmp
jmp
sti
sbb
popl
mov
imul
cmp
loop
sub
loop
ss
out
inc
add
push
dec
rcrl
or
test
xor
aaa
cmp
cmpsl
mov
or
cmp
or
mov
mov
and
lret
mov
sub
pusha
out
ljmp
push
aas
test
xor
std
inc
sbb
xchg
and
icebp
mov
arpl
cmp
cmpsb
popf
icebp
es
dec
lret
int
ja
fsubrs
lods
push
mov
adc
mov
cltd
jle
sub
cmp
cmpsb
scas
test
jns
dec
mov
in
aad
sub
test
sbb
xor
lods
lahf
cld
xchg
mov
stos
inc
roll
jg
nop
icebp
mov
jns
push
out
aaa
push
mov
pop
xor
lock
mov
xchg
cmpsb
jno
out
sub
inc
test
push
mov
mov
aam
popf
push
and
fsubl
xchg
pop
pop
mov
pop
idivl
imul
repnz
std
lret
or
cmp
outsl
add
xchg
sub
lds
lahf
mov
pushf
jne
les
and
mov
outsl
pop
xor
clc
or
dec
jns
pop
xor
dec
in
repnz
or
in
xor
push
addr16
xchg
push
mov
dec
pop
or
int3
in
sahf
lds
pop
dec
out
jo
mov
sbb
mov
jp
sbbb
std
test
popf
push
lret
dec
push
push
arpl
xchg
jbe
ret
fistpll
jl
test
mov
jbe
rolb
cmp
pop
mov
iret
shlb
mov
mov
push
sbbb
xor
outsl
jmp
loopne
insl
push
mov
clc
adc
icebp
lds
or
fs
nop
stos
in
inc
dec
push
movsb
andb
incb
xor
dec
adc
pushf
scas
xlat
faddp
xchg
lret
jge
inc
movsb
sub
xchg
cs
cmp
loope
loope
xlat
loop
out
cmp
xor
in
push
ret
xchg
inc
ficoml
and
pusha
inc
test
int3
mov
mov
ljmp
popf
cs
jno
test
mov
mov
cli
lock
xchg
adc
jnp
mov
mov
mov
add
inc
adc
mov
decl
push
leave
xchg
xor
test
inc
int
dec
mov
clc
mov
test
inc
mov
add
add
fldcw
or
cmp
sbb
pop
cmp
adc
jbe
adc
adc
jbe
bound
les
push
xor
cmp
xchg
mov
pop
cmp
rclb
pop
add
test
fstpt
jae
sub
mov
addr16
push
push
dec
jae
ss
lods
in
testb
rol
fwait
sub
mov
nop
bound
and
es
fstl
mov
add
lret
xchg
fimull
add
xchg
and
and
dec
or
jnp
sub
push
jb
cmpsl
adc
push
push
int3
sarl
lods
imul
adc
or
jns
pop
lds
sbb
push
das
fsubrs
aaa
shl
arpl
mov
repz
cmp
lds
cmp
cwtl
notb
sub
fbstp
hlt
ljmp
cmpsb
pushf
popa
daa
lcall
cmp
jg
mov
je
sub
jle
lcallw
in
push
mov
enter
lret
push
lret
sbb
cmpsb
xchg
sbb
pop
ljmp
daa
ja
push
or
lods
repnz
sbb
mov
adc
mov
xor
xchg
imul
pop
movsb
mov
ds
bound
adc
inc
or
inc
cmp
sahf
mov
mov
outsl
xchg
and
aam
stos
or
shlb
into
cld
mov
pop
adc
dec
mov
mov
daa
cli
push
add
mov
ficoms
cmp
dec
xchg
jle
add
jge
mov
sbb
dec
adc
inc
popa
add
in
sbb
or
push
insl
test
into
xchg
rcll
jnp
lods
push
ds
jae
and
fildll
xchg
icebp
and
fwait
arpl
sbb
jle
sub
mov
push
sti
repz
xor
cmp
jg
jmp
jo
jns
push
mov
adc
mov
jb
cmpsl
xor
aaa
jp
clc
dec
jmp
or
dec
loope
fnsave
cltd
xor
cmp
inc
cwtl
mov
cltd
fbld
inc
mov
ret
sub
inc
or
adc
adc
stos
cmp
cld
inc
iret
movsb
sub
xor
or
rcll
mov
push
xchg
stos
and
aad
add
pop
xor
testl
pushf
js
xor
mov
in
jns
repz
xor
push
aam
lea
test
cmpsb
and
adc
xchg
popf
xor
mov
pop
jb
inc
push
fsubs
xor
out
dec
pop
ljmp
and
in
sub
mov
mov
outsl
xchg
jge
aas
loop
mov
and
inc
insl
clc
cmp
jmp
dec
pop
push
test
mov
or
cli
or
ret
dec
loopne
mov
scas
fucom
pop
pop
cmp
cmp
pop
sub
jmp
jne
dec
jae
dec
cmp
push
stos
sbbb
enter
cmpsl
test
pop
loope
flds
out
lods
movsb
cmp
jmp
sub
sbb
pop
sbb
xor
sbb
adc
jne
mov
sbb
mov
jge
ret
add
cmc
testb
pusha
mov
data16
shrl
push
sbb
jge
xor
pusha
notl
mov
adc
enter
cmp
hlt
mov
inc
sbbl
pop
adc
jp
or
enter
jge
sbb
dec
mov
lea
cmp
mov
dec
mov
movl
and
jle
je
fsub
jl
rorb
out
dec
inc
mov
mov
xorb
test
push
iret
xor
sbb
pop
pop
sbb
sub
lahf
or
popa
add
xor
jmp
dec
bound
and
test
roll
stos
cld
int3
pusha
and
mov
mov
add
cltd
mov
or
ljmp
mov
pop
dec
mov
sub
push
outsl
jmp
leave
cli
iret
mov
aas
hlt
xlat
xor
add
outsb
repnz
sbb
ds
loope
xorl
pop
adc
jecxz
mov
loopne
orb
pop
repnz
insb
and
inc
jecxz
mov
rcrl
outsl
add
clc
cs
sub
movsb
orl
cmpsb
adc
lods
or
pop
inc
sub
cltd
cmp
cmpsb
pushf
lds
sub
cmp
fadd
clc
push
out
call
or
mov
aam
mov
outsl
inc
xlat
fisubl
in
xchg
push
pop
pop
or
sub
repz
jnp
add
xlat
pop
lret
pusha
out
repnz
call
je
or
adc
add
fdivs
xchg
cmp
andl
leave
out
and
mov
or
cmp
scas
inc
push
sbb
sahf
roll
sub
cmpsl
dec
jecxz
mov
pushf
adc
sub
xor
mov
incl
xor
sub
fimuls
push
ljmp
les
xor
xchg
popa
and
xor
js
sub
xor
jl
push
lock
jge
xlat
insl
aad
add
adc
mov
rol
cmpsb
jp
pop
push
adc
int3
pop
jg
xor
sbb
add
cmp
sub
das
and
xchg
pop
add
fisubrs
or
stos
outsb
push
push
mov
push
test
stos
adc
jns
and
int3
jge
sbb
js
cmp
jmp
sahf
rcrb
ret
cmp
adc
sbb
and
add
leave
das
test
sbb
je
scas
xor
and
ds
inc
or
mov
xchg
push
sbb
sbb
movsl
fsubrl
pop
mov
je
pop
sub
sarb
jge
cwtl
out
jno
xchg
add
push
jae
sbb
jno
dec
and
fprem
imul
rcrb
inc
loopne
jmp
mov
mov
push
movsl
cltd
push
leave
xor
std
scas
out
rcll
enter
aam
mov
pop
dec
subl
int3
or
incb
sbb
lret
hlt
dec
je
shlb
test
xchg
lds
cmp
or
adc
fsubrs
add
mov
push
dec
or
add
pop
int
or
fldenv
mov
and
mov
mov
mov
xor
push
lret
pop
pop
or
xchg
sub
sbbl
cmp
sub
nop
inc
lods
mov
in
push
xlat
repz
fldenv
jo
mull
pop
cmpsl
push
add
es
push
cld
pop
dec
add
dec
test
jmp
inc
sub
test
or
xchg
aam
lret
and
or
inc
shll
icebp
and
pop
xor
inc
jo
mov
imul
into
repnz
xchg
and
stos
inc
repz
dec
dec
in
stc
je
popa
dec
add
fists
test
adc
jg
cmpl
mov
inc
fsub
lret
add
mov
stos
cmp
das
ret
cld
stos
test
cltd
mov
adc
cmpsb
stc
inc
mov
je
xrelease
dec
fildl
xor
sbb
push
cwtl
mov
cwtl
cmc
enter
push
pushf
scas
pop
movsb
je
mov
fnstenv
test
imul
sub
adc
aas
and
xchg
and
js
iret
jnp
imul
icebp
xchg
out
push
push
sbb
jmp
iret
loope
sbb
mov
jmp
and
fidivrl
fwait
mov
jle
cmp
out
push
mov
lods
push
jb
jne
pop
in
mov
ja
aas
or
jbe
pop
outsb
test
imul
sbb
insl
or
in
xor
pop
mov
mov
mov
je
in
int
insb
jg
push
lcall
cmpsl
sub
fsubrs
and
lcall
repz
xchg
xor
js
js
mov
xchg
fistps
lret
push
jo
ss
add
fwait
jbe
fnstcw
pop
inc
ss
jge
bound
push
sub
movsl
bound
sub
inc
jg
repz
pop
in
ja
int
sub
sti
push
leave
or
mov
fldl
enter
test
orb
imul
or
rorb
jl
mov
mov
adc
mov
sbb
aad
sbb
shr
jmp
or
xor
stc
inc
or
jbe,pn
jge
dec
and
sbb
xor
mov
inc
out
jle
or
loop
stc
test
mov
sub
movsb
repnz
stc
popf
fnclex
or
add
leave
imul
add
mov
sbb
cli
jp
aad
fists
ret
xor
clc
mov
sti
pop
xor
push
mov
jae
and
test
mov
jge
mov
test
mov
jbe
pop
cmp
stos
rcl
push
imul
push
pop
ret
iret
je
mov
lods
mov
sbb
aad
xchg
out
xor
or
pushf
fnstcw
dec
stc
jb
sub
dec
shr
dec
loope
std
lods
cmp
push
mov
hlt
xchg
cmp
cld
loop
movsl
xchg
gs
cmp
jmp
fidivl
adc
cltd
into
xchg
mov
jmp
mov
inc
ret
jbe
add
inc
fdivr
rcll
dec
jnp
stos
xor
xchg
push
xor
push
mov
lods
das
mov
jb
and
nop
xor
dec
cmp
test
adc
sbb
xor
addr16
data16
jbe
imul
mov
std
loope
jl
out
adc
pushf
xchg
orl
mov
shrb
push
push
in
inc
loope
adc
loop
sub
shll
sbb
js
leave
push
sub
sbb
lea
mov
sbb
ficoml
movsb
xchg
add
xor
sti
out
push
ljmp
jno
sbb
fidivrs
pop
mov
mov
mov
jecxz
shlb
adcb
popf
ja
or
push
aas
test
sbb
lods
inc
jp
or
xchg
scas
adc
push
jmp
fs
adcl
or
mov
std
pop
cmc
sub
jl
cwtl
movsb
mov
iret
cmp
aam
xchg
stos
xchg
repnz
fst
je
adc
mov
aaa
mov
in
out
and
aad
jge
pop
push
std
push
jle
ss
sbbb
mov
ss
nop
insl
pop
cmc
mov
mov
mov
fsubrl
push
or
pop
mov
xchg
push
inc
out
sbb
mov
test
xor
push
sub
push
les
sub
imulb
inc
nop
imul
imul
pop
mov
lods
inc
xor
in
adc
fcoms
or
lods
xchg
faddl
dec
je
xor
jo
mov
mov
sbb
xor
xor
xchg
jno
out
sbb
testl
mov
push
addr16
aaa
stos
cwtl
dec
lret
jne
mov
push
lds
cmp
push
xorl
pop
aaa
into
lea
imul
insb
push
inc
pushf
outsb
loope
out
mov
scas
push
push
inc
fildl
or
jge
adc
lods
sbb
sub
jo
inc
xor
xchg
icebp
int3
dec
inc
dec
loope
popa
jecxz
sbb
mov
push
push
fisubl
sub
enter
sbb
inc
lret
test
push
cmpsb
jb
pop
push
mov
adc
jne
jmp
ljmp
push
jo
or
and
pop
fisubrs
sbbb
sub
clc
imul
pop
repnz
jns,pt
repz
adc
cmovae
popf
bound
mov
push
nop
push
push
das
jns
aam
les
pop
aaa
int
lock
shrl
ljmp
lods
dec
in
lret
hlt
dec
js
imul
jns
or
incl
push
xor
lods
inc
or
in
sub
fsubs
and
xchg
rcrb
sbb
and
add
jno
lret
sbb
jle
mov
mov
jo
xor
sub
sbb
pop
out
sub
sub
shr
lahf
pop
rorl
in
xchg
fldln2
pop
cmp
sti
pop
and
addr16
or
mov
sbb
fs
jns
mov
mov
pop
push
ret
pop
test
jle
scas
shlb
shll
or
loope
rolb
inc
adcb
lret
cmpb
lds
rcrl
dec
or
mov
fwait
inc
push
pop
cmp
sub
mov
mov
adc
push
and
js
sub
push
pop
nop
mov
inc
pop
out
mov
push
stc
ljmp
fs
pusha
pop
aas
je
stos
sar
mov
subb
fldl2t
in
ret
cli
cmp
out
and
in
cmp
mov
aas
cmp
shrb
adc
pop
or
jge
testl
dec
mov
sub
xlat
popa
mov
imulb
add
pop
lods
icebp
mov
xor
mov
jae
test
jo
bound
add
mov
scas
inc
sub
xchg
cmp
cmp
lret
subb
dec
jge
sbb
sub
test
mov
mov
cmp
jne
das
pushf
js
or
jne
and
add
repnz
repz
pop
push
push
insl
stos
adc
je
mov
cld
or
addr16
inc
ss
jb
pop
into
push
lret
movsl
sbb
jne
lret
jb
pop
test
jle
lods
jmp
cmp
jecxz
dec
adc
xor
cmc
jbe
inc
loopne
push
shrl
mov
pushf
adc
or
cmp
loop
add
aas
aad
jo
mov
test
xchg
sub
gs
jns
or
idivl
call
push
dec
cmp
mov
fldl
loop
fsubrp
pop
add
std
cmpl
and
jge
pop
lock
cmpsl
flds
mov
cli
mov
pop
rclb
adc
and
insb
and
pop
lds
xor
cli
test
lcall
out
test
push
mov
pop
xchg
sbb
lret
shrl
in
mov
xor
or
cmp
xchg
mov
xchg
mov
mov
testb
sub
cmpsb
sbb
jp
js
xor
js
rorl
fisubrl
test
and
push
lret
lret
popa
push
pop
call
mov
xor
mov
lret
bound
arpl
mulb
mov
in
jne
movsb
les
iret
add
mov
add
fs
mov
les
and
xchg
ljmp
sub
pop
lret
not
sbb
mov
cmp
imul
stos
sbb
das
adcb
xchg
jno
inc
je
in
in
inc
push
sbb
ret
mov
add
add
jae
pop
adcb
mov
rcll
pop
out
mov
push
repz
xchg
mov
push
cld
loopne
and
pop
cmp
shrl
fcompl
mov
push
push
and
adc
mov
into
in
mov
or
out
lcall
jns
andb
hlt
in
xchg
insl
xchg
in
push
call
inc
gs
xor
inc
xor
fidivrl
mov
out
xchg
leave
mov
in
insl
mov
and
sub
outsb
pop
xor
imul
mov
lods
push
ret
sbb
cmpsl
fisubrl
insl
lods
jmp
xchg
or
xor
lcall
mov
pushf
inc
dec
xchg
cmp
pusha
sbb
mov
fbld
adc
cmpsb
push
push
push
xchg
sbb
mov
mov
fmull
inc
addb
inc
lock
xchg
adc
movsb
dec
push
mov
subb
xor
pop
cld
stc
bound
and
jge
dec
std
fwait
xchg
inc
aam
inc
pop
f2xm1
xchg
jle
and
cmp
cmp
lea
pop
popa
scas
cmpsb
and
jb
jbe
adc
cmp
rorb
fwait
xor
les
inc
cmp
clc
adc
xor
in
adc
cltd
int3
cmp
mov
push
mov
loope
sbb
xor
stos
inc
jmp
or
addl
and
decl
or
xor
test
enter
mov
popf
lods
sub
sbb
in
shl
sbb
or
adc
fisttpll
pop
outsl
daa
shr
mov
xor
addb
dec
sarl
fwait
pop
bound
jmp
out
xchg
jg
ret
ret
ja
fnstcw
repnz
adc
push
pop
dec
call
or
flds
pop
xchg
insl
jge
rcll
addr16
sbb
pop
add
lret
dec
jmp
loop
clc
repnz
lds
jg
loop
mov
stc
jge
mov
mov
or
mov
fcoms
mov
pop
sbb
xchg
sbb
ljmp
push
and
inc
xchg
in
ficompl
iret
call
and
cld
cli
inc
pusha
in
loopne
data16
stos
loope
sbb
pop
test
dec
push
clc
ret
outsb
mov
adc
test
push
jp
add
insb
scas
mov
xor
js
movsb
popa
shr
xchg
add
mov
jp
movsl
jmp
or
or
mov
mov
cwtl
cs
in
cmpl
sub
add
ficoml
jne
add
clc
inc
js
nop
stos
outsl
shrb
sbb
clc
cmp
je
inc
arpl
gs
add
cmpsb
insl
pop
ja
hlt
sub
cmp
mov
add
xor
sbb
add
xor
out
mov
xor
jbe
in
xchg
dec
and
mov
mov
or
nop
mov
xor
stos
and
icebp
dec
je
lahf
pop
jle
into
fsubrl
mov
adc
and
and
or
outsl
push
mov
sbb
cwtl
sbb
mov
pop
imul
and
scas
ljmp
shrb
rol
cmp
shlb
orb
xchg
lea
loop
xchg
mov
in
ja
sub
xchg
cmp
mov
or
hlt
in
enter
loopne
sub
ret
adcl
pop
mov
pusha
stc
fistpll
inc
scas
mov
mov
push
sub
mov
mov
pop
movsb
ja
mov
sbb
add
add
nop
inc
jb
mov
ljmp
in
jno
jne
mov
xchg
enter
mov
push
out
ret
jecxz
jecxz
or
std
ss
mov
push
add
sahf
fisubl
inc
cmp
inc
push
es
jae
mov
push
test
ja
push
test
ja
je
xor
add
adc
pop
test
push
lahf
jle
xchg
mov
sub
stos
mov
dec
jle
jle
call
sbb
in
jnp
add
in
loop
lea
data16
cmp
jp
mov
jae
jecxz
mov
mov
mov
dec
sbb
shrl
jg
xchg
dec
push
sahf
add
jnp
pop
xor
enter
aaa
mov
inc
lods
jmp
stc
and
imul
and
cli
pop
cmp
add
dec
inc
cld
mov
sarl
xchg
adc
xor
lret
dec
mov
sbb
adc
pop
push
fisubs
xchg
nop
scas
mov
mov
inc
jge
jne
fiaddl
inc
pop
xor
repnz
call
imul
xlat
mov
arpl
xchg
mov
add
jp
out
adc
ja
fwait
lret
inc
fidivrs
sbb
ljmp
jns
inc
incb
out
gs
imul
nop
lcall
jmp
cmpsl
std
and
xchg
sub
out
mov
cmc
pop
popa
fistpl
jl
push
mov
mov
sti
or
scas
out
adc
rorb
cmpsb
fistps
pop
lock
cmp
int3
les
lods
pusha
fsubrl
fistpl
mov
sbb
popf
lods
sarl
rcrl
rcrl
pop
push
in
dec
xlat
out
and
add
or
loope
lods
inc
testb
add
repz
add
fcompl
jge
mov
or
stc
dec
dec
dec
mov
jbe
xor
je
cltd
mull
out
das
and
jg
xchg
dec
push
dec
jae
adc
jne
out
out
cmp
adc
pop
dec
mov
ss
xchg
in
int
inc
fdivs
dec
cmp
push
mov
dec
mov
mov
push
mov
inc
fstps
inc
data16
addr16
movsl
push
push
mov
hlt
adc
movb
push
mov
and
jnp
pop
out
xchg
pop
adc
jp
in
sbb
in
je
in
lcall
xchg
or
jecxz
cmpl
push
xlat
mov
into
std
xor
cs
adc
popa
cmp
xchg
mov
mov
out
in
mov
mov
sub
shlb
call
popa
or
jecxz
inc
scas
inc
js
fdiv
bound
fisubrs
dec
adcb
mov
xchg
xor
hlt
jmp
insb
xor
fistps
mov
sub
shl
or
out
in
mov
mov
inc
inc
jns
mov
sahf
cmc
jp
cmc
aaa
mov
fsubl
call
xor
scas
jns
push
cmp
cmp
insb
jne
push
pop
jp
enter
adc
mov
adc
pop
mov
test
dec
ja
sbbb
into
pop
dec
sub
movsb
xacquire
xor
sti
lahf
cs
scas
icebp
pop
mov
inc
push
mov
xlat
in
mov
mul
cmc
inc
pop
daa
add
inc
and
dec
mov
mov
mov
in
test
pop
xor
int
fiadds
scas
push
lahf
and
inc
sbb
in
subb
in
mov
sar
mov
repnz
outsb
add
aad
je
dec
jg
sub
pusha
aaa
mov
jg
gs
adc
and
jge
pop
xor
push
ret
pop
inc
mov
je
es
ds
xchg
inc
shll
int
jmp
mov
movsl
cli
push
pusha
mov
std
pop
pmaxub
cmp
rcrb
lods
dec
stos
or
loope
outsb
lods
and
fwait
xchg
sbb
sub
popf
cmp
mov
xchg
add
dec
push
lahf
imul
lods
std
push
fwait
cmpsl
jno
mov
lcall
aaa
push
jno
sbb
jbe
mov
pop
out
cmp
cmpsl
movsb
inc
sub
inc
call
jnp
sahf
jno
pushf
cs
sub
imul
fidivrl
and
push
push
lahf
push
insb
in
xchg
cs
inc
orl
divb
or
arpl
rclb
decb
xchg
fisubs
mov
popa
cs
xlat
movsb
mov
movsb
out
sub
leave
dec
scas
cmp
ja
jl
push
dec
loopne
popf
add
xlat
movsl
lds
cmpl
push
shlb
cmp
test
subb
psllw
xor
xchg
icebp
add
outsl
sub
ss
loope
lods
xchg
jecxz
mov
or
pop
jge
xchg
cmp
pop
pop
shlb
pushl
push
push
xchg
sub
mov
daa
inc
stos
mov
dec
mov
sbb
xor
and
xchg
xchg
jp
movsb
mov
pop
imul
jecxz
fnstsw
jnp
sbb
test
or
test
scas
ret
outsb
xchg
std
cs
and
cltd
mov
mov
jle
mov
test
cmp
xrelease
cmp
push
xor
or
scas
fnsave
aad
je
jb
cmp
sti
icebp
movsl
fsubl
bound
sbb
mov
inc
cwtl
ss
inc
xchg
xchg
mov
sub
push
mov
cmp
inc
mov
bound
sub
insl
push
fcmovb
mov
add
lret
xchg
repz
mov
pop
rcll
or
sbb
or
jne
in
mov
lods
xchg
mov
inc
push
cmp
popf
icebp
mov
lock
pop
mov
leave
insb
test
addl
jge
sub
pop
inc
add
push
lret
lods
vpaddusw
cld
mov
mov
mov
adc
cmp
das
push
adc
lret
sahf
jmp
or
insl
pusha
je
mulb
dec
sub
insl
fidivl
jo
mov
xchg
movsl
mull
jo
jnp
rcrl
mov
call
shl
lods
loop
dec
push
fidivrs
add
adc
jg
fcomps
mov
jg
shll
xchg
jnp
cmp
xorb
shlb
or
leave
ljmp
mov
xor
cmp
pop
divb
dec
bound
xchg
jge
out
xor
iret
fwait
idivb
push
or
inc
int3
or
std
ret
daa
mov
in
idivb
out
xlat
push
test
mov
xor
bound
mov
push
stos
pop
movb
lods
outsl
in
inc
cld
ljmp
outsb
sbb
pop
sub
out
push
push
or
pusha
ret
movsb
into
leave
inc
pop
push
enter
xchg
mov
test
xchg
out
lea
add
jmp
and
dec
popf
mov
mov
xor
lea
bound
mov
sub
cmp
add
mov
mov
jnp
lea
xchg
dec
mov
cmp
int3
ret
jbe
scas
sub
loopne
push
adc
mov
dec
jae
cmp
mov
cwtl
cmp
xor
frstor
lret
rep
push
cmp
fsubr
shrl
rclb
inc
sbb
insl
xor
mov
pop
iret
push
stc
inc
ds
test
xlat
outsl
bts
cmp
add
mov
push
push
jmp
mov
dec
outsl
mov
notb
cmpsb
mov
jg
cld
or
mov
adc
dec
out
clc
dec
cld
cs
pop
mov
in
sub
cmp
ja
lea
push
push
test
ds
jns
xchg
sbb
fdivr
jg
pop
in
sahf
push
rorb
in
adc
dec
mov
xchg
aam
pop
pop
rorl
mov
fsts
xchg
mov
jae
xor
push
inc
push
fdivl
push
iret
xchg
dec
cmp
loope
lds
bound
es
adc
or
xchg
jge
cwtl
and
sahf
push
out
psraw
jl
and
adc
mov
push
les
pop
aad
cld
mov
fcmovbe
mov
add
dec
dec
ds
sbb
cmp
push
pop
jno
lea
ret
pop
add
adc
movl
push
stos
jmp
xor
scas
adc
ss
add
popa
inc
inc
dec
jae
dec
mov
outsb
sub
pop
lods
inc
cmp
repz
jmp
xor
xor
jl
cltd
loope
xchg
fwait
mov
mov
scas
xorl
mov
or
mov
rcr
aad
push
fnsave
fbstp
cltd
mov
aas
inc
jmp
mov
sub
adc
cli
push
cs
sbb
push
shll
pop
mov
lret
cmp
jo
cld
xchg
jnp
cli
mov
insb
lea
call
inc
movsb
in
push
loopne
inc
movl
add
xor
cwtl
cmp
fidivl
movhps
cmp
pusha
xchg
mov
imul
push
adc
xchg
and
mov
out
call
hlt
pop
cs
cltd
add
test
clc
xchg
fwait
gs
adc
mov
and
xor
test
call
outsl
sbb
cmp
dec
cmp
ds
fdivrl
push
daa
sbb
pop
shll
inc
cli
mov
mov
jae
test
mov
add
rcrl
rclb
cld
mov
and
stos
ret
test
movsb
ret
jb
pop
xchg
nop
daa
lea
bound
popf
loopne
xchg
xor
lret
xlat
incb
mov
int
icebp
movsl
test
mov
sbb
ret
rcrl
hlt
push
sbb
dec
sbb
mov
push
out
mov
hlt
mov
outsb
aad
lea
cli
xor
inc
adcl
push
pop
jmp
ficompl
sti
pop
inc
mov
enter
xchg
fs
sub
xchg
das
dec
jecxz
sbb
and
inc
mov
popa
cmpsb
pop
insb
sbb
dec
call
leave
pushf
jnp
cmpsl
bound
ja
ret
jbe
push
bnd
ja
fwait
test
ja
arpl
jmp
jne
xchg
ret
pop
sarb
sbb
aad
rorl
outsl
and
mov
inc
inc
lret
cmp
xchg
push
scas
and
into
lods
inc
add
mov
fs
mov
jmp
sbb
xchg
sub
rcrb
push
fmull
rcrb
jle
mov
add
dec
push
ret
nop
fldt
sbb
cli
cmpsl
ljmp
dec
aas
adc
pop
jb
xchg
call
dec
sahf
or
mov
fnstsw
cltd
cmp
push
rcll
inc
dec
loopne
pushf
in
out
push
aad
pop
mov
hlt
jnp
xchg
out
stos
es
les
leave
lds
popa
insb
fistpll
out
cmpb
adc
mov
inc
bound
mov
popf
ljmp
mov
outsb
cmp
and
fs
testl
stos
push
aas
xchg
shrl
addr16
pop
dec
in
mov
popf
xchg
pop
mov
push
xchg
popf
das
in
scas
mov
loopne
lret
lea
mov
clc
adcl
addr16
mov
xor
sbb
rcll
pop
int3
add
cmp
jae
dec
and
fsubrl
shrb
fiadds
push
jbe
je
mov
clc
addr16
aam
sbb
iret
jae
adc
fildl
dec
fisttpl
in
jl
aam
mov
push
popf
sahf
imul
out
add
push
fisubrs
xchg
dec
dec
inc
add
mov
sub
mov
fcompl
in
inc
pop
mov
sbb
outsb
lods
mov
ljmp
jno
cmc
addb
jns
or
jns
in
and
sub
insl
ret
adc
xchg
stc
mov
aaa
aad
mov
fidivrl
inc
mov
dec
add
into
or
mov
mov
stos
push
jns
shr
lock
dec
mov
clc
jp
movsl
xor
fwait
stc
mov
out
xlat
stc
es
mov
popf
in
cwtl
push
and
sti
in
sub
push
sub
inc
scas
xor
or
mov
sub
dec
jae
arpl
lds
cld
bound
sbb
pop
mov
jmp
fimull
mov
pop
jmp
hlt
cli
test
xor
int
pushf
lea
adcb
iret
pop
mov
sbb
dec
test
jne
test
jge
addl
jnp
iret
mov
pop
mov
cli
rolb
clc
loop
push
shrl
xor
cmp
jmp
or
add
or
pop
cmp
pop
jmp
sbb
xchg
add
push
mov
pop
xchg
sub
jg
inc
imul
push
aaa
xor
jl
fsts
in
or
push
in
sbb
xchg
insb
lea
nop
nop
sub
mov
mov
shrb
or
adc
pop
sub
and
push
cmp
pop
sbb
les
es
push
int3
xor
add
sub
inc
and
lahf
stos
repnz
popa
stos
xchg
imul
mov
mov
jb
dec
out
add
mov
inc
push
inc
mov
or
push
dec
add
in
lock
push
out
sub
daa
das
dec
hlt
xchg
add
das
mov
jbe
mov
add
repz
outsb
sub
loope
mov
imul
aaa
sub
popa
lahf
and
xchg
xchg
sub
popa
and
pop
das
or
mov
xchg
push
sub
pushf
pop
imul
pop
push
scas
pop
sub
or
or
icebp
daa
mov
push
fmull
mov
mov
das
xchg
cs
push
jmp
fwait
xor
mov
mov
cwtl
out
push
mov
mov
int3
pop
and
pusha
push
push
aam
out
clc
rcl
inc
cli
movb
adc
enter
cmp
sbb
fsts
add
dec
ds
in
test
inc
inc
sub
scas
shrl
rorl
je
push
adc
rolb
mov
jg
push
rorl
dec
add
jmp
xlat
dec
lret
inc
mov
mov
mov
pop
pushf
push
mov
and
divb
or
jo
cltd
mov
jae
xchg
dec
add
sub
jae
gs
or
mov
das
ficomps
stos
sub
dec
mov
lods
sub
jmp
lret
stos
add
pop
repnz
adc
in
loop
int3
mov
incb
mov
and
mov
lock
shlb
mov
aam
mov
out
fsubrs
mov
test
dec
lods
cmp
pushf
sub
pop
std
jnp
lea
xchg
fistl
cltd
inc
clc
ret
in
sbb
jo
push
sbb
imul
cmc
arpl
outsl
sahf
bound
stos
pop
fdivrs
inc
push
push
stos
mov
sarb
add
and
xorl
sub
stos
add
popf
xchg
lods
mov
dec
mov
cmp
inc
sahf
mov
adc
stos
cmc
push
test
xor
and
outsl
pushw
xchg
cmp
inc
repz
mov
aas
sbb
xchg
lds
jo
pushf
arpl
pop
mov
mov
mov
imul
aad
loopne
push
or
ja
or
movsl
insb
push
and
push
int
mov
xchg
je
add
les
add
repnz
mov
clc
and
pop
fwait
xor
push
ljmp
sub
push
movsb
add
repnz
fstpl
xor
fincstp
adc
in
enter
xchg
sub
push
arpl
scas
outsl
cmp
pop
stos
pop
hlt
push
sar
repnz
fisubrs
xor
cld
fucom
pop
lret
xchg
sbb
lods
inc
pop
rorl
xchg
scas
inc
int3
and
or
jmp
enter
sub
in
add
mov
mov
inc
jb
pop
test
mov
mov
pop
imul
ret
cmp
ret
xchg
adc
repnz
mov
imul
sub
jecxz
cmpsb
in
into
aas
cli
repz
add
test
fmul
jae
pop
xor
lods
ljmp
mov
test
je
jmpw
xor
sub
das
mov
dec
ljmp
inc
inc
add
sub
ror
popa
cmp
push
fidivl
or
xchg
mov
and
jp
inc
fildl
sahf
ja
add
xchg
scas
mov
cmp
lods
pop
or
data16
xchg
lret
xor
mov
jecxz
in
shll
dec
jno
mov
cmp
js
scas
mov
xor
dec
mov
int3
mov
pop
addl
xchg
sarl
jp
dec
mov
mov
mov
rcl
cmp
pop
push
dec
mov
xchg
mov
rol
into
gs
add
xor
decl
mov
xchg
scas
cmc
or
mov
add
dec
mov
into
push
mov
movl
les
xor
lock
jg
push
and
dec
jecxz
mov
insb
mov
pop
repz
loop
mov
dec
fdivs
adc
in
lods
xchg
pop
int3
ds
std
sub
mov
pop
or
mov
test
sub
xchg
xor
stc
outsl
fcmovb
pusha
cmp
out
clc
cld
sbb
int3
jle
adcb
pusha
add
fidivs
cli
imul
jmp
imul
iret
mov
bound
mov
jmp
mov
and
or
inc
pop
ss
fwait
bound
movsb
push
aaa
or
lea
jb
leave
push
add
mov
icebp
mov
add
sti
xchg
jb
rclb
out
lea
mov
js
push
jb
mov
push
nop
mov
dec
fsubl
fs
mov
mov
lahf
addb
daa
push
lahf
push
lock
imul
in
fwait
mov
das
add
pcmpgtd
fildl
and
ljmp
in
xchg
or
pop
xor
mov
add
jp
in
mov
jns
aam
stos
inc
mov
test
and
mov
pop
scas
sub
ja
xchg
xor
pop
repnz
int3
pop
sub
xchg
jo
out
sub
inc
pushf
jl
aaa
push
xchg
out
pop
lcall
lret
mov
xor
jne
in
sub
pop
jg
dec
mov
mov
jmp
pop
mov
dec
and
movsb
push
mov
out
test
decl
pop
cmp
mov
xor
rol
pop
xor
popa
cmp
jmp
aad
add
iret
movsb
pop
call
out
adc
jbe
cmp
push
sub
inc
add
add
add
xchg
leave
inc
stc
xor
push
add
xor
xchg
sbb
sti
mov
sbb
jne
fiadds
and
shr
leave
data16
incb
call
cld
xchg
lock
aad
push
popf
or
rcl
cli
mov
xchg
rcrl
aad
mov
shll
sub
mov
pop
lds
add
lea
call
lods
jb
in
fiaddl
cmc
push
inc
imul
xchg
mov
ljmp
sbb
fldenv
mov
push
fisttpll
mov
mov
ja
mov
cs
lret
sbb
lret
mov
sbb
push
xchg
mov
mov
and
int
leave
inc
inc
enter
jg
lods
paddsw
lea
push
adc
lock
insl
jl
scas
cs
loopne
out
sbb
mov
mov
push
movsl
cmp
sub
in
cvtps2pd
add
xor
sbb
rcrl
add
sbb
je
push
ljmp
inc
lods
outsl
les
adc
mov
scas
mov
test
dec
mov
mov
xchg
mov
lea
aad
xor
fsubs
xchg
xchg
sub
das
rorl
fwait
cmc
xor
pop
inc
scas
mov
and
jbe
jmp
or
jg
sub
adc
mov
out
rcll
push
jg
arpl
mov
inc
lds
adc
leave
fildl
int3
xor
es
rep
in
test
adc
mov
jg
push
aaa
pop
push
int3
jge
xor
mov
cmc
inc
scas
inc
push
jmp
sbbb
pop
mov
push
xchg
daa
inc
aad
clc
xchg
xor
mov
inc
push
ret
rcrl
repnz
aam
and
loope
cltd
sub
addl
inc
adc
and
in
jg
into
dec
mov
aaa
pop
test
dec
xorl
pop
pop
jae
adc
dec
lock
gs
xchg
push
lcall
rorb
mov
xor
mov
test
jbe
add
push
mov
pop
mov
and
mov
out
int
fsubp
dec
cmp
dec
mov
xchg
pop
cmp
cmp
in
dec
loope
aad
mov
sub
iret
pop
loop
inc
adc
mov
pop
xor
lahf
imull
loopne
or
iret
mov
enter
inc
aad
and
push
adc
mov
cmp
jg
test
iret
ds
push
js
push
push
lods
xor
hlt
pop
push
xlat
xor
lcall
sti
pop
es
test
mov
push
inc
inc
lods
ja
insb
xor
pusha
out
push
cltd
xorl
sbb
in
lret
test
daa
into
add
leave
push
sub
enter
jle
xchg
pushf
aaa
test
mov
std
cmpl
mov
mov
fldenv
sti
dec
cmc
xor
inc
jo
jg
fdivrl
ja
add
jp
ss
les
adc
in
nop
arpl
mov
sbb
push
aaa
into
test
inc
and
push
jne
sub
pop
adc
lea
aaa
pusha
ja
lea
and
call
xchg
dec
jae
adc
rclb
add
leave
lcall
imul
outsl
sbb
and
je
mov
mov
sub
cmc
cmp
je
mov
sti
jae
xlat
mov
adc
inc
adc
xchg
dec
movsl
in
scas
out
cli
fldt
inc
dec
orl
mov
outsl
aas
jo
xchg
sub
mov
push
in
addr16
insb
aam
push
dec
push
lods
xchg
xor
bound
and
pop
or
movsl
andl
dec
xchg
push
add
jo
jae
std
out
orb
and
outsb
xchg
sldt
fwait
sahf
cmpl
in
fbstp
sub
jmp
sti
jle
fmuls
or
movsb
iret
aad
mov
or
lcall
mov
mov
inc
out
lea
movb
bound
or
push
flds
lea
or
repz
mov
pop
dec
or
sub
ficoms
ss
sti
loopne
outsb
in
lahf
add
out
inc
push
imul
xor
andb
dec
rorl
je
orl
mov
pop
mov
adc
pushf
imul
mov
insl
and
aam
add
nop
or
clc
aam
inc
mov
pop
insb
call
jbe
cmp
stc
xchg
fstps
sbb
cmp
cmp
enter
ds
cmpsl
and
shlb
fdivl
push
mov
pop
or
outsb
sbb
inc
shrb
leave
mov
jecxz
sub
mov
in
es
mov
cli
or
fdiv
outsb
xor
add
push
mov
into
gs
jo
js
rol
mov
call
cmp
fcompl
cmp
fwait
sti
test
mov
mov
rorb
xorl
xor
push
add
or
in
test
xchg
scas
mov
mov
fcmovnbe
cmc
push
fmulp
daa
mov
mov
xor
out
je
subl
jmp
je
and
cld
adcb
inc
clc
add
scas
mov
add
testl
subb
cmc
mov
out
or
dec
push
daa
outsl
lds
add
push
sub
in
gs
notb
adc
mov
cli
mov
sub
test
mov
mov
cmp
mov
lods
sbb
arpl
adc
nop
push
adc
pop
or
or
lret
mov
fsubrl
cmp
jp
dec
inc
inc
cld
loopne
movlps
in
movsl
repz
in
dec
movsl
icebp
jecxz
out
jle
mov
lahf
pop
leave
pop
imul
push
daa
roll
inc
ja
mov
sahf
xchg
insb
mov
xchg
jmp
fstpt
rcr
inc
cmp
shll
ret
lret
shrl
xor
push
lods
inc
mov
pop
lret
lods
lcall
les
jb
adc
mov
leave
xchg
mov
cld
cmp
xchg
aam
andb
movsl
aam
sbb
jbe
dec
test
add
out
push
dec
pop
jae
data16
sub
icebp
sbb
pop
icebp
je
mov
push
sub
xchg
data16
cmp
pop
test
jmp
lahf
sbb
cli
xchg
das
stos
loope
xlat
andl
gs
pop
scas
popf
push
imul
jge
pop
cmp
fwait
push
rcl
in
inc
ja
pop
insl
in
imulb
add
add
stc
popf
xchg
cli
dec
add
dec
shrl
out
ja
pop
jmp
xor
mov
jo
aaa
int
sbb
insl
out
test
mov
clc
push
in
mov
add
andb
push
fsubl
lret
xchg
and
jns
cld
test
inc
sbbl
add
sub
dec
cld
cmp
outsb
xchg
pop
mov
insl
pop
stc
mov
mov
or
rcll
fadds
dec
mov
in
pop
lahf
movsb
cmp
daa
subb
mov
daa
mov
xchg
pop
adc
push
mov
pop
mov
and
xchg
mov
dec
sbbl
mov
lods
popa
mov
sub
popf
fdivl
scas
xor
adc
cli
hlt
sbb
aas
xchg
int3
cmp
shrb
add
repnz
and
mov
ret
dec
xchg
sbb
sahf
lcall
pushf
xor
hlt
orb
push
jns
cmp
or
xchg
aam
mov
pop
fdivp
adc
jp
dec
insl
test
in
icebp
mov
es
ficoms
leave
ret
pusha
jge
push
outsl
push
xchg
mov
imul
dec
out
std
lret
inc
pop
sbbl
ljmp
ja
dec
mov
out
fiaddl
cltd
xor
in
inc
fisubrl
adc
and
int3
outsb
add
adc
mov
and
shl
fwait
lahf
or
out
setbe
jle
push
stc
nop
repz
jb
cli
adc
jnp
int
xor
add
sti
inc
adcl
lock
cmp
popf
clc
into
and
mov
insl
ja
jbe
inc
fxch
ficoml
icebp
xchg
lock
mov
mov
iret
jmp
or
mov
popf
dec
je
lahf
sbb
cmp
mov
les
pop
mov
jge
dec
xchg
mov
sbb
add
fstps
jo
bound
fdivrl
loopne
xchg
fs
push
push
add
out
loope
fisttpll
add
test
stc
ret
add
or
cmp
or
add
or
cmp
fildll
xchg
hlt
pop
cmp
push
dec
mov
repnz
jns
or
ds
push
fdivrs
or
inc
pop
iret
mov
and
adc
insb
jle
leave
sub
cmp
jmp
jo
adc
inc
mov
fcmovb
or
dec
xchg
mov
inc
shll
in
stos
sub
subb
adc
mov
icebp
call
test
test
out
jle
cld
addr16
lds
ja
sbb
add
mov
sub
push
rcll
pop
jb
das
inc
in
cmp
idiv
mov
cli
ljmp
fdivs
fs
sbb
mov
pop
mov
jbe
das
jbe
popf
minps
je
fyl2x
pop
and
fidivs
movsb
mov
or
outsl
cmp
xor
sub
daa
jo
pop
out
arpl
andb
or
xor
inc
cmp
cs
sub
mov
dec
movsb
aaa
pop
and
dec
xchg
jp
sbb
clc
cld
cmc
std
cs
stos
mov
jne
mov
cltd
stos
jae
xchg
xor
cmp
pop
add
lods
mov
cmpsb
mov
mov
adc
jle
jl
ljmp
xorl
push
pushf
cli
adcl
or
pop
sub
mov
pop
mov
mov
xchg
jp
sub
push
add
out
jle
stos
jns
in
fmuls
mov
fisubrs
in
mov
dec
and
adc
add
test
pop
xor
stos
xchg
push
push
cmp
pop
add
adc
xchg
jp
inc
adc
cmp
mov
rorl
ret
mov
jne
loope
or
dec
and
pop
mov
cmp
mov
in
into
gs
scas
insb
sub
add
rol
mov
sbb
out
mov
push
jo
adc
dec
ret
push
cld
add
stc
add
incb
aam
xchg
pop
xchg
add
cmp
lods
add
and
loope
push
lret
in
mov
inc
pusha
fadds
jecxz
xchg
jp
mov
mov
movsl
clc
iret
cmp
movsb
mov
shll
jmp
iret
fsubr
aad
pop
dec
cmpsb
cmp
pop
mov
inc
jle
dec
mov
outsb
mov
insb
cmp
dec
jno
nop
int3
jo
andl
fnstcw
jmp
loop
mov
stos
fwait
mov
cmc
ss
lds
lcall
cs
pusha
int
mov
xor
jmp
cwtl
xchg
add
push
daa
xor
test
and
sub
dec
mov
jp
imul
orb
mov
dec
gs
rcrb
pop
sub
inc
or
into
gs
push
mov
jb
stos
nop
pop
xchg
loope
cmc
sub
repnz
dec
dec
sbb
cmp
loop
push
je
push
cmpsb
lods
cmpsl
mov
rol
negl
loope
leave
push
shl
mov
xchg
out
xor
sub
fdivrl
jo
loop
inc
inc
ds
ret
insl
xadd
dec
repz
scas
mov
adcl
pop
fistpl
push
xchg
dec
arpl
sbb
addb
inc
mov
jle
popf
cmpsl
jne
or
add
lods
test
out
pusha
xor
jno
rorb
mull
or
icebp
jnp
sbb
sbbl
cmp
xchg
lods
int3
loope
cli
stc
inc
pop
insb
xor
in
daa
sarl
or
mov
out
push
and
into
js
sti
xlat
jb
repnz
sahf
or
add
lcall
in
cmp
testl
add
scas
mov
pop
push
cmp
lea
dec
mov
xchg
pop
sbb
push
pusha
push
dec
mov
mov
jge
jg
inc
cmp
and
fdivl
jp
dec
test
ja
inc
sbb
mov
sbb
inc
pop
shrb
push
aas
cmp
sub
dec
add
arpl
call
testb
sub
pop
test
push
push
pop
out
test
iret
cwtl
outsl
or
inc
fbstp
aam
aas
mov
pop
ljmp
and
xor
mov
loope
div
adc
mov
and
push
lds
dec
addb
in
out
icebp
pop
std
xchg
nop
adc
push
mov
and
mov
mov
xor
mov
sub
test
lock
sub
ja
fs
mov
jb
sbb
scas
pop
inc
sarl
mov
inc
loop
jns
test
jb
loopne
xor
push
xchg
cmpb
bound
lods
push
add
jns
test
pop
mov
arpl
jp
xchg
xchg
cmp
sub
jmp
mov
sub
sbb
scas
sbb
sub
insl
mov
sbb
ja
movsb
xor
push
pop
scas
fwait
mov
sbb
bound
xchg
test
jl
pop
cmc
outsb
js
xchg
push
ret
add
xchg
mov
or
xlat
lds
cmp
xchg
stc
adc
push
les
cmp
imul
fists
lea
mov
pushf
je
shl
or
js
insl
push
inc
in
gs
mov
repz
fsub
mov
idivl
inc
and
xchg
push
mov
cld
add
insb
pop
cltd
jmp
lret
jl
test
add
sub
and
in
test
inc
cmc
or
push
pop
add
cmc
inc
fistpll
inc
test
lods
or
mov
ds
call
in
mov
xchg
jl
bound
push
cmp
pop
popf
inc
adc
sub
sub
fidivl
cmp
and
rcrb
dec
dec
dec
inc
xchg
and
loopne
sub
lods
aad
mov
adc
ja
fiadds
xchg
xchg
dec
push
xchg
sub
ss
insb
mov
sbb
dec
add
mov
inc
ljmp
push
sbb
sub
movsl
cmp
cmc
adc
pop
xlat
enter
and
repnz
bnd
push
dec
xchg
jge
push
ja
mov
cld
push
ljmp
mov
insb
adc
icebp
loope
out
ljmp
adc
ficomps
jle
sub
popa
scas
ret
sbb
sbb
adc
add
pop
loop
jno
pop
push
sbb
aam
cmp
xchg
mov
pop
fiaddl
xchg
jnp
scas
xchg
or
or
imul
fldl
pop
imul
movsl
mov
rcrb
ja
sbb
xchg
outsl
or
xchg
sbb
clc
mov
repnz
and
imul
xchg
pop
adc
dec
mov
in
adc
fdivrl
scas
push
out
xchg
cmpsl
inc
out
cs
nop
add
mov
addl
xchg
adc
mov
aam
add
push
stc
xor
sbb
aad
adc
add
sbb
loop
jge
pop
adc
xchg
mov
jp
sub
push
sbb
into
cmpsl
jecxz
clc
adc
sbbb
adc
xor
or
lahf
stc
inc
lds
test
nop
leave
xor
or
lods
incb
or
cmpsl
push
add
push
cmp
incb
sbb
cltd
test
out
jne
pop
loope
test
mov
xchg
sub
xor
scas
shr
push
xlat
pand
inc
fldpi
mov
pop
je
jbe
mov
adcb
inc
push
xor
mul
xor
gs
mov
inc
aaa
push
js
cmp
lds
mov
jb
pop
sub
imul
push
adcl
mov
loop
stos
dec
push
out
mov
pop
lea
or
ja
sbb
in
dec
mov
and
shl
xlat
ds
lds
outsb
pop
push
mov
outsb
shll
sub
mov
xorl
or
loope
es
adc
sarl
add
xchg
and
mov
lret
jbe
mov
bound
xchg
mov
data16
fwait
cmpsl
loopne
fnstcw
sahf
cmp
push
pop
xchg
mov
mov
xchg
dec
je
cs
mov
dec
add
xchg
aaa
fimuls
lds
aaa
pusha
lret
xor
int
pop
js
into
sub
cltd
std
rorb
jb
sub
int3
jg
int3
mov
mov
negb
ret
stos
mov
ja
mov
int
mov
mov
je
iret
and
inc
daa
addb
jmp
jg
movsb
cmp
pop
mov
pop
subl
mov
sub
xor
mov
hlt
popa
fsubr
iret
sub
xor
sub
aaa
bound
xchg
adc
icebp
leave
scas
aam
testl
push
mov
int3
loope
mov
push
and
out
out
test
shrl
pop
or
mov
sarl
cmp
mov
in
push
mov
pop
adc
fbstp
xchg
mov
jge
push
sti
xchg
in
cli
jno
add
mov
stos
mov
mov
adc
in
fyl2x
mov
xlat
nop
daa
or
or
inc
xchg
add
test
cs
outsb
jge
and
out
test
inc
jbe
mov
cmp
mov
sbb
popa
mov
cmp
mov
popf
push
fmull
xchg
xchg
mov
fldl
addr16
push
inc
push
notl
inc
sub
mov
push
int
out
pop
inc
pop
popf
push
pop
testl
dec
mov
inc
gs
mov
mov
adc
inc
add
fldt
pop
dec
mov
aaa
dec
add
cmp
mov
cli
out
mov
push
xor
test
push
inc
flds
mov
jl
jp
es
xchg
dec
notb
cld
pop
das
jecxz
add
out
jmp
push
pop
popa
dec
or
out
mov
fs
xchg
dec
icebp
inc
mov
popf
mov
pop
bswap
cwtl
fidivrl
add
pushf
sub
and
jno
int
ret
sbb
ret
jge
out
das
ds
lods
ret
imul
cmp
aad
lcall
mov
in
xchg
sbb
rcr
xlat
loope
xlat
out
mov
shlb
and
pop
sub
ret
adc
dec
pop
orl
iret
mov
ret
adc
push
ja
in
test
repz
inc
out
xchg
xchg
xchg
outsb
mov
xlat
jne
cmp
stos
xlat
cmp
sbb
xchg
je
cli
lods
or
fstpt
outsl
and
push
popa
aam
in
push
xchg
call
cmp
sub
lahf
sbb
cmp
ljmp
and
call
imul
dec
xchg
and
aad
addr16
mov
mov
or
in
lods
sub
pop
lods
jge
repz
mulb
roll
add
jmp
lahf
icebp
push
mov
jp
cmpsl
sbb
adc
push
push
into
data16
lea
in
dec
lods
std
imul
jp
mov
cwtl
jg
sbb
add
arpl
and
or
cmpsl
scas
test
fisubl
mov
lret
adcb
fisttpll
stc
dec
repnz
mov
xor
pop
cld
inc
fisttps
notl
xor
or
xor
movsl
rorb
jns
pop
adc
mov
and
pop
xchg
push
imul
mov
or
cmpsl
shlb
xchg
sbb
mov
fs
out
add
dec
mov
push
add
test
lods
aaa
xor
int
dec
in
pop
imul
inc
je
je
dec
pop
popa
jno
pushf
loop
jecxz
mov
bound
insb
fwait
mov
push
mov
test
cmp
call
int
dec
loopne
stc
jg
adc
push
outsl
jno
sbb
jle
lcall
cwtl
stos
mov
into
jae
sbb
aaa
mov
jle
pop
fs
clc
jae
push
iret
ljmp
sbb
fmul
fdivr
cmp
sub
cmp
dec
pop
dec
push
das
add
jle
sti
mov
lahf
ss
shlb
push
mov
pop
mov
sub
fdivr
or
jnp
pop
fsubl
shll
add
dec
inc
and
test
dec
ja
jnp
and
enter
test
ljmp
fwait
jmp
int
loope
fstp
std
jp
pop
into
pop
test
fdivs
test
lods
dec
pop
out
ret
ret
xchg
imul
jecxz
aas
dec
jmp
out
xchg
push
dec
out
insb
dec
out
iret
jmp
sub
test
jmp
add
int
es
or
aaa
jo
sub
push
test
jno
loop
xchg
popa
add
outsl
daa
pop
or
add
rclb
mov
mov
pop
testl
mov
mov
pop
stc
jge
scas
shll
push
and
cmpsl
pusha
out
jle
loopne
adc
mov
lods
push
and
add
mov
dec
mov
push
lods
imul
lds
xor
mov
push
stos
les
sbb
push
lcall
popa
cmp
shll
in
mov
les
lahf
adc
xor
sub
sahf
lock
test
cmc
xchg
add
xlat
test
jb
xor
fcomps
pusha
inc
shrl
imul
mov
das
jbe
cmp
mov
test
ret
mov
in
repnz
pop
out
xchg
xchg
les
cli
aaa
movsb
rclb
or
int
sbbl
mov
xchg
sub
outsl
xor
mov
imul
nop
cmp
shrd
jne
jb
dec
lea
sbb
pop
out
stos
pusha
pop
das
sbb
pop
jbe
pop
fstpt
adc
clc
pop
push
or
mov
or
scas
sub
loope
or
in
jmp
rorb
std
loop
mov
fidivrl
mov
out
or
xor
adc
jne
mov
jecxz
repz
sbb
jmp
movsb
addr16
pop
add
mov
mov
inc
lret
sbb
clc
dec
ret
clc
mov
inc
arpl
fisttpll
leave
fisttpl
std
inc
fsubs
inc
mov
jge
enter
xor
lods
jge
mov
mov
fwait
sub
and
iret
clc
inc
leave
xor
pop
cmc
or
js
sbb
jge
roll
repz
xchg
lock
addr16
sbb
inc
add
jmp
fucom
pushf
and
fwait
sbb
and
fstp
js
insb
add
call
push
add
xor
sub
int
adc
xchg
fcmovb
xchg
or
adc
cmp
daa
ds
ffreep
dec
push
ror
arpl
repz
ror
movsb
adc
inc
lods
xor
push
push
sahf
andl
xor
inc
inc
ret
dec
loop
cmpb
lcall
or
fnstsw
popf
mov
roll
sbb
jns
movsb
negb
lea
adc
lret
out
js
popf
dec
fists
testl
xchg
and
loopne
in
dec
stc
and
add
imul
js
lods
inc
sub
mov
mov
lods
cs
inc
aad
cmp
jp
mov
inc
movsb
or
fisttpll
inc
jecxz
xor
andl
loop
imul
mov
add
roll
sbb
mov
aaa
lock
sti
lret
sub
sbb
fdivs
dec
cs
lods
mov
push
test
lods
xor
pop
subl
iret
hlt
addr16
clc
shrb
gs
icebp
add
in
adc
addr16
pop
scas
fildl
adc
mov
jg
pop
js
mov
cmpsl
cld
inc
fldenv
mov
inc
popf
lods
js
sub
dec
adc
or
insb
dec
push
sahf
add
std
clc
loop
aam
test
pop
arpl
and
sub
int
mov
decb
movsl
ljmp
ret
sti
push
and
aam
mov
addl
or
push
adc
into
addw
jns
es
or
outsl
fildl
and
mov
xchg
sbb
lea
gs
add
or
dec
out
fs
xor
fidivrl
ror
std
test
cmpsb
cmp
js
fnstcw
rcr
test
out
mov
pop
enter
mov
add
inc
pop
mov
dec
mov
xchg
dec
push
call
aam
push
or
mov
daa
cmp
pop
icebp
sbb
pop
cmc
arpl
jne
and
add
lods
cltd
dec
test
add
shrb
ret
mov
or
mov
adc
push
jne
aaa
insb
into
fwait
leave
mov
and
out
xor
jge
sbb
xor
jl
popf
inc
sbb
rcll
push
mov
xchg
adc
mov
xchg
mov
sub
pop
cld
fisubrl
repz
push
stos
sub
push
cmp
sub
fwait
pop
push
out
xor
mov
data16
mov
pusha
imul
sub
mov
cmc
jg
mov
out
cmpsl
ds
jge
add
stos
out
test
mov
loopne
adc
sahf
cmp
sbb
mov
jl
xor
loopne
xchg
mov
mov
xchg
movsb
jmp
adc
xchg
ds
xchg
test
or
ja
sahf
adc
subb
add
mov
stos
mov
mov
jecxz
mov
addr16
jmp
add
call
ljmp
scas
jns
out
adcb
dec
inc
in
in
loope
aam
out
mov
add
psraw
push
xlat
jo
js
pop
xchg
push
sub
dec
inc
pop
loope
cmp
repz
out
pop
sahf
sub
ret
hlt
jb
daa
movsb
push
push
or
inc
pusha
daa
nop
mov
rcl
xor
mov
cs
cmp
push
xchg
mov
nop
scas
ficoms
dec
cltd
push
cld
or
test
mov
pop
cmpsb
pushf
pop
popf
clc
xchg
mov
lret
mov
sub
push
and
aaa
mov
addb
or
fisubrl
inc
gs
das
stos
xchg
call
jmp
mov
push
jne
repnz
cmp
push
ds
lret
xor
mov
push
stos
mov
push
xor
inc
inc
in
xor
int3
fisubrs
in
inc
inc
jne
jb
mov
pop
aaa
daa
idivl
fstpl
jmp
push
je
stos
mov
mov
in
jecxz
xchg
cmp
pop
mov
fisubs
fcmovb
mov
pop
mov
adc
xchg
rcrb
add
xor
mov
lret
ds
call
or
jp
cltd
sbbb
sti
cmpb
or
scas
cmp
inc
xlat
xchg
and
out
xchg
add
jne
sub
fidivrs
dec
add
push
pop
and
xor
test
xchg
addr16
dec
inc
cmp
cmp
ror
fs
push
lods
lods
xor
adc
xorb
lods
aad
aaa
into
and
test
lret
mov
aaa
pop
or
cmovbe
ja
int3
mov
xchg
jae
or
test
mov
dec
cs
xor
xchg
add
and
jbe
inc
mov
loopnew
cmp
mov
mov
cs
cli
dec
andb
mov
movsb
mov
dec
sbb
stos
mov
in
scas
arpl
pushf
lret
mov
ljmp
mov
lret
or
fsubrp
subb
jmp
popf
nop
nop
cmc
outsl
mov
fisttps
cmpsl
pop
lahf
outsb
data16
jns
add
and
inc
sub
jle
xor
ss
sub
mov
sub
inc
pop
lock
add
mov
vprotq
pop
bnd
cmp
inc
pushl
lret
imul
xor
inc
sub
imul
rclb
test
and
xor
lret
mov
xor
dec
jecxz
cmc
incl
dec
or
jecxz
and
repz
jae
in
test
push
stc
nop
mov
xchg
adc
dec
aam
cmc
pop
sbb
jecxz
popa
mov
jae
lahf
sub
pushl
sub
dec
sbb
cwtl
int3
arpl
inc
sub
popa
ljmp
sub
mov
pop
neg
xor
scas
pushf
scas
xchg
pop
push
leave
lods
cmp
insb
cmp
sbbl
dec
sbb
xchg
jno
ret
jnp
fdivrl
das
std
int3
push
outsl
lret
insl
loopne
add
dec
scas
daa
mov
adc
cmp
mov
jl
and
add
jo
cmp
jns
or
mov
adc
xor
jg
clc
or
xchg
lock
notl
mov
xlat
lahf
mov
add
fmull
in
and
shll
dec
clc
pushf
jle
dec
adc
fnsave
je
and
sbb
imul
shlb
aam
cmp
pop
ja
mov
mov
ret
mov
bound
xchg
mov
mov
in
push
jno
test
sub
mov
in
icebp
cmp
inc
pusha
fwait
jmp
mov
inc
fistpll
xchg
sub
sbb
fdivrl
les
cmp
aad
mov
pop
adc
add
sbb
mov
jno
lea
adc
mov
fldenv
repz
es
aad
dec
sbb
cmp
in
pop
cmp
mov
push
mov
jno
push
test
push
mov
sbb
mov
movd
ja
push
sbb
repnz
sbb
xlat
mov
inc
xor
pop
fisubrs
mov
jne
dec
and
jmp
sbb
or
fadds
loop
adc
dec
bound
ja
movsb
ljmp
sub
xor
stos
mov
mov
cld
or
mov
popf
rorl
sbb
test
stos
xchg
xchg
insb
add
mov
in
sbb
movsb
aam
jnp
nop
adc
cwtl
mov
es
pop
repz
or
cmp
inc
in
adc
sbb
pop
adc
xchg
mov
fwait
das
adc
pop
ss
lods
xchg
pop
jbe
or
lcall
adc
inc
fisubrs
pop
cmc
jmp
sbbl
mov
mov
bound
mov
std
mov
push
out
cmp
or
stos
insb
and
sahf
aam
jg
push
cmpsb
and
sar
aas
loope
jbe
fsub
arpl
lea
ja
loope
jge
cwtl
cmpnleps
jle
mov
push
stos
adc
xor
aaa
xchg
aaa
into
enter
call
or
addl
xchg
imul
or
in
sub
push
mov
jp
dec
popa
add
sbb
sub
pop
push
pop
adc
sarb
xor
mov
out
pop
mulb
inc
xor
je
sub
rcrb
adc
or
testl
add
fildl
cmpsl
pop
xor
or
xchg
clc
inc
and
add
es
adc
push
bound
and
cmp
cmc
inc
popf
scas
out
add
dec
adc
dec
or
sarl
ret
jmp
dec
xor
push
roll
loopne
loopne
pop
cmp
in
cmp
or
es
mov
cmp
mov
lcall
aas
dec
sbb
mov
inc
mov
jle
xchg
adc
call
iret
and
push
jnp
maskmovq
testl
cmpsb
test
add
push
pusha
aad
shl
hlt
cmp
movsb
iret
xchg
add
gs
sub
dec
test
lret
push
scas
pop
push
jbe
scas
sub
ror
in
jnp
mov
push
push
popa
mov
jne
cmp
cld
pop
addr16
cmpsb
arpl
ss
sti
aas
sbb
xor
push
aad
fstpl
es
xchg
inc
lea
push
cmp
lret
inc
dec
cld
push
mov
addr16
sub
dec
mov
call
pop
inc
lcall
cli
xor
dec
xchg
js
stos
xchg
mov
mov
cli
adc
jnp
movsl
xor
lcall
and
ret
mov
lods
lret
jo
pushf
pop
mov
popa
add
push
rolb
es
cmp
mov
out
or
lret
mov
add
das
sbb
push
stos
and
add
push
jnp
dec
dec
adc
pop
adc
repnz
dec
in
xor
out
push
jl
mov
cmp
jo
ficompl
mov
je
and
in
jb
clc
mov
or
rcrl
jg
pop
xor
ret
mov
pop
push
cmp
jge
call
cmc
push
xchg
push
das
orb
mov
outsb
sub
dec
pop
mov
scas
loopne
dec
or
cmc
sbbb
add
insb
mov
lahf
into
xchg
jbe
out
dec
sub
xchg
cld
jmp
das
cmp
enter
push
mov
aaa
jae
scas
in
jae
call
daa
arpl
fidivrs
sub
dec
or
or
cmp
jle
sub
leave
push
iret
popf
pushf
cld
inc
mov
xchg
xchg
xchg
cld
inc
xchg
negl
xchg
xchg
push
in
ret
push
mov
push
out
cli
pop
cmp
fchs
ljmp
dec
pop
jb
gs
das
adc
cmpsl
cmp
pop
leave
jmp
rclb
or
inc
inc
sbb
adc
add
fwait
xor
mov
lods
inc
push
and
sub
cld
xchg
or
push
addr16
fadd
push
cmpl
cmp
hlt
jno
cmp
or
data16
out
mov
inc
fldcw
addr16
sbb
jbe
hlt
mov
mov
sub
movsb
add
cwtl
mov
push
cmpsb
jb
mov
mov
addr16
fnstenv
cmp
sbbb
jp
or
int3
mov
fsubrp
daa
push
insb
mov
or
cmc
cmpsl
pop
cmp
out
and
xchg
cld
dec
xchg
xchg
cltd
sbb
xor
push
lret
and
movsb
inc
push
shll
pop
sub
mov
cld
push
ljmp
stos
and
fucomp
mov
stos
mov
cli
xchg
fs
mov
loopne
inc
adc
scas
dec
pop
xor
mov
or
sbb
dec
mov
jl
jecxz
mulb
jge
pop
cmp
mov
jg
dec
stos
add
cmpsl
out
sub
lret
mov
mov
mov
pop
cmc
or
sbb
push
push
imul
call
int
or
adc
andb
push
mov
rcl
sbb
cld
outsl
push
out
mov
jbe
xchg
cmp
test
shll
jne
sub
int3
inc
add
jae
aad
out
mov
out
shll
mov
imul
xchg
test
outsl
add
push
movsl
out
push
popf
add
push
ficomps
xchg
cs
outsb
mov
push
add
dec
sbb
test
in
push
scas
test
out
lret
scas
cmpl
sub
mov
vprotw
pop
or
mov
pop
sbb
or
test
fbld
dec
fcmovne
dec
mulb
orl
mov
mov
maskmovq
divl
add
loop
sbb
cmp
xchg
bound
jmp
sub
mov
loopne
cmpsl
cmc
mov
push
xor
and
pusha
pop
cmp
jno
inc
test
or
inc
jg
std
and
andb
shlb
xchg
nop
nop
push
pop
lock
lock
mov
pop
jbe
xchg
dec
pop
dec
aam
and
aas
test
lea
and
cmp
call
xorb
jg
popf
xchg
mov
inc
push
shll
rorl
push
mov
dec
pop
into
fxch
iret
idivb
push
jbe
in
pop
add
adc
push
dec
mov
out
xor
xor
pushf
scas
in
cmp
inc
sub
nop
mov
and
mov
pusha
lods
add
out
icebp
movsb
pop
jo
aam
xchg
add
loop
in
add
out
mov
frstor
pop
pmaxub
mov
mov
gs
xor
push
jae
add
cmp
fbstp
dec
adc
mov
cmpsb
mov
or
std
adc
es
or
fwait
loopne
aad
movsl
ss
push
xchg
ds
xchg
arpl
test
and
notl
sub
lods
ljmp
in
pop
cmp
lcall
xchg
mov
dec
sub
rcr
in
jmp
nop
pop
insl
xor
inc
int
dec
mov
cmpsl
out
mov
scas
add
lods
add
fdivs
fdivs
and
ja
dec
and
out
lahf
sbb
xchg
push
mov
scas
out
fcoms
loope
or
inc
fisubrl
cld
xchg
lea
jnp
add
jle
xorb
out
xor
adc
mov
mov
sub
aam
adc
jnp
sub
outsb
inc
and
adc
icebp
test
stc
insl
push
sub
addb
mov
or
ss
cwtl
adc
inc
loop
incl
dec
inc
add
xchg
dec
sbbl
sbb
jecxz
sub
mov
mov
xchg
punpckhdq
cmpb
loopne
nop
lods
xchg
clc
loopne
mov
iret
adc
stc
inc
xchg
push
xor
fnsave
mov
cmp
push
inc
insl
mov
xlat
pop
mov
cmpsb
adc
jo
dec
fisubrs
sti
dec
fldt
aad
test
lcall
out
dec
push
sbb
ss
fnsave
out
or
push
and
ret
jp
pop
andl
or
xchg
mov
dec
cmc
enter
rcl
mov
shlb
icebp
nop
ret
adc
ret
shlb
dec
bound
fisttpll
shl
out
sub
insb
pop
or
cltd
test
shr
mov
or
repnz
and
mov
lods
fstpt
addr16
notb
xchg
add
jg
clc
xchg
inc
rolb
jle
dec
sar
dec
xchg
push
adc
and
out
sub
mov
sub
add
insb
fs
push
imul
and
sbb
test
sub
out
in
mov
fxch
pop
ficomps
lock
dec
arpl
jp
cmc
dec
mov
jb
bound
iret
insb
push
in
pop
sub
js
je
call
jo
outsl
pop
push
xorl
mov
divb
mov
push
in
pushf
adcb
adc
push
insb
punpcklwd
xchg
xchg
add
mov
addr16
adc
outsb
sbb
dec
xor
mov
rcpps
fists
xchg
xor
push
inc
jecxz
sti
in
xor
jne
xchg
ljmp
int
cwtl
gs
popl
sbb
and
pop
and
jg
cmp
lea
cmpl
push
outsb
aaa
out
cs
in
stos
sti
cwtl
arpl
jp
pop
lcall
insl
xchg
push
lahf
loop
movsb
xchg
xchg
arpl
lds
xor
or
in
adc
inc
jmp
jbe
int3
cmpsl
mov
rclb
push
cmp
outsl
inc
jmp
aad
in
imul
or
fcos
or
sub
push
rolb
push
jno
jg
clc
fcompl
test
in
sbb
movsb
mov
lcall
mov
jbe
dec
rorl
add
dec
inc
sbbb
push
xchg
pushf
ja
aad
push
pop
push
xor
cmpsb
add
movsb
cld
aad
stos
jl
stos
sub
pusha
lods
inc
into
and
sub
push
adc
mov
out
add
mov
add
inc
cli
push
inc
mov
and
popa
add
mov
xchg
pop
shll
test
xor
and
cmp
out
dec
mov
sbb
lahf
and
inc
imul
xchg
lcall
fwait
mov
pop
jecxz
mov
cmp
cmpsb
sub
repz
adc
mov
mov
sbb
lret
mov
dec
lret
add
shrl
fcoml
mov
je
jge
pop
inc
test
rol
pushf
and
adc
mov
call
dec
faddl
lret
lret
xchg
push
stos
xorl
or
sbb
sub
cwtl
mov
in
push
aas
push
push
push
ficomps
enter
fcompp
xor
imull
inc
xchg
pop
lods
mov
add
jg
pop
leave
xchg
fcoms
adc
push
jne
jb
mov
push
mov
call
push
push
mov
sub
aaa
pop
test
lods
fisubl
jno
mov
and
cmpsb
negl
sub
fwait
cmp
popa
jae
add
sbb
mov
push
pop
ret
add
push
lock
pop
rorb
xor
test
push
add
jl
push
in
test
lret
mov
out
pusha
call
bound
sub
ja
or
and
xlat
adc
or
xchg
fxch
mov
cmpsl
or
ljmp
mov
pop
lock
sub
test
inc
loopne
jge
sbb
add
dec
cwtl
sbbl
cmpb
add
lock
out
rcll
orl
test
push
or
dec
inc
jo
loop
sub
movsl
cmp
dec
cwtl
xor
jmp
into
sbb
adc
imul
in
push
mov
adc
scas
ret
jmp
sub
aad
repnz
ret
sti
cmpsl
jge
popf
push
ret
lahf
xor
mov
pop
sub
cmp
mov
testl
xor
push
jmp
test
pop
pop
je
stos
dec
jae
mov
shlb
les
test
xor
repnz
roll
add
mov
pop
push
pusha
jge
jbe
pop
lret
or
aad
outsl
pop
rcl
scas
xchg
or
loopne,pt
or
cmpsb
sbb
ljmp
testl
xor
xchg
or
subl
ret
aaa
sbb
pushf
xchg
daa
fsubrs
push
push
mov
and
mov
sbb
push
scas
jmp
sub
fwait
xchg
fldt
ror
aam
out
lret
cmc
shl
mov
pop
cmp
aas
popf
stc
push
cld
aad
jmp
aaa
lds
insb
shrb
pop
xchg
mov
adc
cmp
push
scas
add
xor
jecxz
dec
adc
jbe
enter
adcb
pusha
add
add
adc
mov
roll
sub
call
push
or
andl
repz
outsl
testl
dec
cmp
push
lahf
add
cmpsl
clc
and
out
mov
std
out
adc
cmp
rorb
sbb
inc
movsl
leave
add
das
shl
mov
sbb
daa
mov
push
mov
pop
jg
test
lahf
sahf
aam
mov
les
iret
jmp
cmp
scas
or
push
rclb
add
repnz
xchg
bnd
aas
in
call
dec
stos
mov
in
lods
aam
push
mov
jg
pop
push
push
daa
or
jbe
jmp
std
or
push
stos
pop
aam
xchg
fstpl
loope
repnz
out
repz
lret
cld
cmp
xorb
pop
sahf
enter
jmp
sahf
and
add
das
cmp
inc
sub
xor
mov
jmp
pop
in
cli
and
ficompl
nop
movsb
mov
int3
cmpsl
jns
sub
lcall
add
enter
mov
xchg
leave
jecxz
cmp
push
cwtl
fisttpll
sbb
cmp
es
sbb
std
xchg
add
push
sbb
mov
push
add
loopne
es
inc
mov
sbb
adc
int
dec
sarb
xchg
arpl
add
lret
cld
int
fsubs
mov
leave
sub
data16
clc
jp
push
mov
mov
pop
mov
cmpb
sub
mov
mov
xlat
or
movsl
lods
mov
lods
inc
xchg
push
dec
inc
mov
popf
fs
aam
pop
repnz
sbb
notb
push
rclb
and
je
fiadds
mov
mov
inc
das
ret
push
aam
test
sbb
rcl
jae
pop
pop
sub
fisubl
mov
pop
cld
push
mov
shrb
add
xchg
inc
repz
ljmp
adcb
pop
test
pop
popl
mov
fnstsw
or
out
outsl
mov
dec
inc
lods
rcrl
pop
adc
sbb
sbb
cltd
dec
lock
pop
and
xchg
xor
testl
dec
test
negl
aad
sahf
nop
and
xchg
shll
xor
test
sub
jo
push
push
push
sbb
jb
adc
fcomps
sub
dec
dec
inc
mov
movsl
xor
cmp
in
sbbb
push
jo
push
push
sbb
inc
jne
shll
mov
leave
addl
test
leave
outsl
cwtl
lods
lahf
push
sbb
sbb
insb
shrl
jmp
aaa
call
push
inc
fdivs
sub
fldenv
pop
jbe
loop
lock
sub
sbb
cmp
mov
jbe
xchg
mov
cltd
aaa
xor
cltd
sbb
dec
lret
nop
arpl
pop
addr16
dec
xchg
pop
inc
scas
cmp
data16
mov
nop
dec
inc
inc
jp
les
out
jmp
rcll
inc
lds
cmp
pop
jle
mov
dec
jbe
jg
jne
mov
in
rolb
movsb
cmp
fsub
movsb
aas
xchg
arpl
mov
daa
pop
out
mov
mov
in
sti
jns
call
sbb
sbb
gs
fists
xchg
ss
cli
dec
add
aad
insl
add
es
jge
xchg
pop
fildll
rorb
daa
repnz
xchg
sub
push
and
pop
mov
imul
xor
arpl
movsl
lods
pop
add
aaa
sub
push
or
dec
pop
cltd
imul
ficoms
xor
iret
mov
push
add
inc
es
push
jmp
repz
fwait
es
inc
pop
adc
test
lret
jb
into
out
xchg
mov
dec
cmp
and
out
shrl
push
outsb
add
fistps
mov
jno
push
in
push
cmp
subl
out
fnstcw
pop
pop
cmc
sub
mov
push
leave
jl
ror
nop
cmc
loopne
icebp
sahf
or
adc
pop
outsl
xor
sbb
push
ss
mov
mov
flds
sub
pop
push
add
xor
lods
sbb
fmul
fnsave
or
push
stc
jmp
jecxz
rorb
sbb
sub
lret
cmp
shrb
jno
in
scas
xchg
int3
mov
scas
fstps
dec
lret
test
ja
dec
pop
xor
xchg
pop
add
dec
push
rcrl
pop
clc
iret
movsb
out
ficoml
sbb
out
pop
mov
jecxz
stc
nop
xor
in
sbb
andl
jne
jp
out
scas
sub
inc
mov
adc
cmp
inc
fldl2e
les
inc
and
sbb
cmp
nop
xchg
and
rcl
sbb
adc
fwait
jle
in
ds
lahf
xor
rcrl
lea
fcmovb
pusha
lahf
push
cmpsl
pop
adc
insb
stc
or
push
lret
xchg
inc
outsl
test
lods
mov
shrl
xchg
and
sbb
sub
rorb
loopne
in
jge
loope
pop
mov
pop
stc
inc
aas
in
call
pop
mov
test
add
pop
std
sub
ficompl
rol
mov
jne
pop
xchg
mov
arpl
mov
adc
push
sub
pop
in
mov
out
aam
jb
nop
cmp
and
cmp
pop
mov
push
sbb
aaa
test
jne
test
fisubs
lea
aam
popa
or
lds
inc
out
rcrl
cli
jbe
fnstenv
mov
sbb
sarb
or
les
sar
mov
xchg
pop
mov
xchg
and
pop
jecxz
jbe
push
lods
sbb
addl
lock
out
mov
ja
jmp
je
push
sub
pop
ss
and
int
mov
dec
ljmp
sbb
mov
mov
ret
adc
inc
shll
rol
fadd
and
stc
ret
sub
std
cs
clc
and
lret
xchg
stos
mov
fidivl
int3
dec
fninit
mov
xlat
push
outsb
mov
xor
js
jnp
push
mov
push
movsl
mov
cmpsb
or
sbb
popf
dec
push
cmpsl
inc
cmpsb
pop
jmp
fcoms
mov
cmp
and
popa
notb
in
mov
sub
ja
out
inc
pop
je
push
xchg
cmp
in
push
pushf
je
inc
das
rcrl
lock
test
sbbl
adc
movsl
bound
xchg
rcrb
movl
sub
xlat
movl
adc
cmp
pop
enter
cmp
sbb
lcall
mov
or
in
cmpsl
inc
adc
add
cmpsb
shll
push
xor
inc
mov
rolb
fisubrl
adc
scas
outsb
push
clc
pop
loop
js
orb
pop
test
pop
and
dec
push
jns
add
add
shll
xchg
add
rcrl
mov
or
xorl
xor
pop
rolb
stos
xlat
lret
push
jge
movsl
pop
xchg
leave
fcmovnb
push
fldt
jns
fdivrs
cmp
fcomps
sub
in
scas
mov
iret
xlat
sub
pop
xchg
xor
decb
sbb
inc
fldenv
out
xor
popa
cmpl
xchg
dec
clc
jae
sub
jge
aad
imul
das
mov
sbb
jne
ss
iret
inc
data16
push
cmpsb
mov
dec
adc
jne
xchg
je
daa
push
mov
xor
imul
jbe
mov
dec
xchg
js
or
adcb
mov
and
xor
ljmp
imulb
sbb
scas
xchg
jne
inc
jo
ljmp
mov
cmpsl
out
pop
pop
ss
insb
lock
ss
movsl
stc
rcrb
cmpsl
lods
inc
and
cmp
lret
add
inc
bound
es
lods
push
enter
jmp
addr16
xchg
mov
out
ret
lahf
in
inc
inc
lahf
rclb
mov
inc
pop
adc
xchg
mov
xor
into
loope
xchg
fidivs
fisttpll
outsl
cld
xchg
mov
mov
cmp
in
jp
mov
push
xlat
test
es
cli
out
test
inc
lods
mov
ret
repnz
in
cmp
imul
sbb
fldl
in
pop
push
btr
and
jno
push
sti
out
rol
sbb
clc
and
es
mov
push
dec
pop
addr16
sahf
mov
fidivrl
dec
mov
sbb
or
sub
in
mov
adc
in
into
mov
scas
jne
nop
mov
sbb
adc
adc
cmpsb
repz
ror
add
xor
imul
jmp
sbb
les
es
cmp
mov
bnd
imul
mov
push
imul
pop
inc
and
or
jecxz
dec
xchg
or
add
lahf
xchg
pop
movsb
jmp
push
xchg
rcl
inc
fildl
dec
and
stc
adc
adcb
push
imul
and
in
pop
mov
fucomi
push
push
int
adc
test
mov
cmpsb
sbbl
jmp
pushf
outsl
ret
in
jo
sub
popa
movl
mov
scas
gs
out
jg
add
stos
cld
lcall
push
lcall
add
imulb
out
test
stc
xchg
mov
mov
jle
das
jns
es
add
cmp
mov
dec
add
xchg
mov
cltd
lea
xchg
subb
push
rol
repz
fcompl
jg
or
mov
lret
mov
mov
pop
add
lret
dec
movsb
mov
into
xor
pop
sbb
test
imul
enter
jne
lea
pop
stos
pop
movsl
ret
push
int
jg
cmpsb
sbb
lods
in
test
cli
pop
call
xchg
int3
add
xor
les
nop
mov
out
pop
movsb
loope
in
in
adc
push
in
cmp
js
roll
mov
cmp
or
xorl
outsl
fisubl
scas
pop
scas
sub
add
mov
stos
insl
sbb
insb
dec
xor
mov
jmp
mov
pop
adc
inc
jg,pt
jo
mov
fucom
push
add
iret
mov
addr16
and
or
inc
lret
cld
mov
xchg
stos
inc
lds
fistl
mov
std
out
cmp
dec
call
ficompl
xchg
add
sti
mov
lds
xor
mov
inc
lahf
in
not
bound
jae
cmp
jbe
mov
in
or
out
leave
clc
mov
arpl
pop
jns
push
in
inc
loop
fucomi
sahf
je
dec
add
pop
roll
lahf
add
push
lods
mov
lahf
xor
pop
xor
popa
xchg
cmp
cmp
sbbb
pop
int3
cmp
enter
into
test
dec
fwait
adc
cld
rclb
adc
hlt
ljmp
outsl
xchg
mov
test
repnz
cmp
xchg
das
cmp
dec
push
mov
movsl
xchg
stos
mov
mov
rcrb
sahf
xor
or
inc
test
ds
fldpi
je
daa
mov
push
stos
aas
les
push
or
data16
jbe
push
push
pushf
loop
in
xlat
jnp
ret
xorl
arpl
loope
push
cmc
mov
inc
push
fwait
insb
out
test
xor
fs
icebp
push
pop
sahf
mov
inc
scas
mov
cmp
imul
dec
lock
pop
repz
jae
or
xor
dec
adc
push
cmp
movsl
pop
pinsrw
out
into
aas
and
cld
push
pop
fnstenv
rol
mov
lret
dec
sbb
ds
and
xor
ljmp
sarl
inc
fstl
fisubrl
ljmp
jae
clc
jae
fstl
mov
add
mov
repz
jl
leave
inc
xor
call
adc
sub
mov
mov
ss
mov
push
sbb
and
xchg
jge
sub
mov
pop
js
arpl
loopne
xchg
mov
lret
outsb
and
cmp
dec
fmuls
jae
inc
jo
nop
cltd
adc
mov
and
xchg
arpl
add
loopne
xor
mov
jg
orl
inc
jge
stos
fiaddl
cltd
xor
cli
xchg
mov
inc
fcomp
imul
aad
pop
repz
cmp
mov
mov
dec
jno
adc
int
mov
sahf
imul
inc
jno
pop
sub
sbb
xor
data16
adc
fs
popa
sbbb
mov
cmpsb
xor
mov
dec
ret
sbb
push
popf
jno
das
je
cld
pop
aam
shlb
mov
mov
sbb
mov
lea
adc
daa
movhps
lcall
pop
dec
cmp
repnz
dec
xor
cltd
test
cmp
out
mov
pop
xchg
repnz
adc
push
xor
jnp
aam
loope
adc
push
ja
inc
mov
mov
and
mov
or
das
cmp
pusha
fsts
adc
cmc
dec
dec
or
popf
mov
repnz
add
and
sub
arpl
push
cmp
bound
cltd
xchg
xlat
push
hlt
pop
mov
mov
jmp
pop
mov
sbb
xlat
xchg
adc
inc
mov
icebp
push
cmpsb
daa
daa
inc
insb
cmp
pop
xor
and
or
jae
mov
aad
add
lret
push
repz
dec
sahf
cwtl
mov
inc
in
cltd
xor
out
mov
mov
aad
pop
popf
sbbb
into
pop
repz
add
push
cltd
pop
mov
cmp
subb
punpckldq
rorb
movsb
das
rolb
movsb
inc
mov
shrl
cwtl
hlt
push
insl
shll
inc
inc
add
and
or
and
xor
mov
pop
shll
je
or
sub
add
es
test
ja
lcall
xor
out
jp
xlat
cmp
loopne
xchg
ds
xchg
add
push
movsb
iret
mov
push
out
hlt
cmp
mov
adc
ja
xor
repz
sub
out
pop
clc
inc
rcl
sbb
xor
pop
insb
sub
rol
movsb
addr16
in
add
adc
adc
imul
inc
pop
sbb
or
jmp
cltd
sbb
aas
push
jmp
inc
clc
nop
mov
loop
lock
add
sub
pop
dec
push
inc
in
dec
mov
mov
fs
dec
add
cmpsl
push
mov
or
xchg
adc
mov
jg
adc
out
lods
rcr
jl
xchg
cmpsl
mov
lahf
cmp
push
jb
inc
pop
inc
sahf
add
inc
pop
jle
aaa
stos
rcll
cmpsl
fidivl
cwtl
and
leave
pop
mov
int3
lret
add
lea
lock
lods
test
and
arpl
pushf
sbb
mov
mov
pop
sub
jnp
xchg
test
sub
and
push
aas
add
cmpsl
cmp
push
fsubrs
jnp
inc
int
xchg
ds
lock
dec
jne
mov
in
dec
and
mov
in
and
popa
or
sbb
and
in
push
cmp
shr
shrb
movl
shll
jb
insl
jecxz
ds
cmp
out
out
mov
repz
push
jmp
bound
mov
fimull
dec
add
dec
jle
adc
shlb
add
jmp
cmpsl
sub
add
pop
imul
out
bound
pop
mov
jmp
les
data16
sbbb
rcrl
jecxz
inc
into
lahf
shrl
lods
push
inc
test
inc
pop
pop
nop
inc
or
test
lcall
dec
mov
out
cwtl
out
or
in
xchg
xchg
mov
mov
test
sbb
call
test
push
pop
cwtl
xchg
push
dec
dec
fldl
aad
push
cmp
addr16
sbb
popf
test
mov
dec
aaa
mov
jge
xchg
pop
xchg
hlt
div
add
outsl
repz
lcall
xorb
scas
int3
push
lret
or
sahf
scas
cmp
cmp
bound
mov
mov
lods
pop
sti
pop
aam
jmp
aaa
jno
repnz
mov
xor
out
in
xchg
push
stos
dec
sbb
push
lods
xchg
mov
xor
jg
and
loop
scas
push
adc
pop
sub
push
adc
xor
fsubr
ja
xor
in
mov
loopne
add
mov
jo
iret
std
pop
subl
add
popa
ret
push
imul
fnstenv
call
xchg
je
mov
xor
xchg
push
cmc
test
ja
popa
daa
jl
ficoms
dec
adc
pop
cmc
and
cmp
and
pop
pop
repz
cmp
xchg
xor
mov
sub
jns
shrl
mov
lock
push
ss
ret
push
repz
loop
dec
xor
mov
mov
ss
cmp
nop
jecxz
test
cmp
cmovo
test
jb
xchg
stc
popf
clc
sub
jo
test
push
inc
cmpsb
gs
push
iret
dec
inc
fidivrs
das
inc
or
dec
rcll
int
or
mov
pop
mov
dec
popa
xchg
imul
scas
int3
sub
pop
decb
lret
call
xor
or
mov
dec
xchg
fisubl
pop
mov
jle
sub
sub
mov
lret
mov
jno
mov
cmp
shlb
arpl
pop
sbb
sbbl
sarb
cld
inc
insb
mov
mov
stos
mov
int
sbb
test
stos
imul
scas
scas
sub
push
sti
ljmp
aad
xor
mov
test
ret
mov
add
insb
xchg
add
dec
lea
cmp
aad
xor
js
mov
cmpsl
pop
imul
dec
pop
outsb
push
lahf
cmp
movsb
std
dec
gs
cmpsb
and
sub
add
and
adcb
int
hlt
ja
add
in
mov
loopne
dec
iret
aam
rcl
xchg
arpl
lahf
pop
lods
sbb
std
push
hlt
data16
test
int3
js
icebp
and
pushf
cmp
ret
fucomip
pop
decb
mov
pop
test
in
sbb
test
rorl
rclb
mov
push
cwtl
mov
push
jae,pn
push
mov
shl
mov
mov
dec
pop
dec
xchg
stos
add
or
cmp
jmp
icebp
inc
mov
out
fidivrl
sub
inc
ja
sbb
jp
dec
push
mov
outsb
xor
cmc
push
add
mov
push
jnp
loopne
cmp
cmpsl
cs
cwtl
pop
push
stos
adc
lcall
dec
jg
pop
ss
mov
add
xor
adc
je
mov
xor
imul
mov
xchg
fcmovbe
cmpsb
cmp
pushf
faddp
xchg
ljmp
stc
inc
push
or
cmpsb
gs
pop
gs
pop
in
nop
insl
std
xor
out
popf
pop
adc
enter
pop
repz
jae
int3
or
or
inc
scas
aas
ret
sahf
in
rorb
jge
int
jae
add
push
cwtl
pop
repnz
and
into
sbb
jae
sbb
scas
sarb
lds
stc
mov
jne
mov
cld
add
imul
mov
xor
cli
in
xor
and
push
loope
sbb
fisubs
outsb
mov
ss
movsb
out
inc
and
and
arpl
pop
add
dec
ffreep
and
mov
sarb
pusha
xlat
nop
fsts
sti
fxtract
sub
cmp
sbb
out
add
xchg
add
push
or
cmp
data16
adc
mov
push
or
sub
adc
mov
mov
sub
stc
subb
int3
fcom
mov
push
mov
repnz
adc
stos
inc
int3
push
mov
stos
aam
push
pop
ja
mov
movsb
aas
xlat
int
sub
aaa
dec
loop
loopne
sbb
fsubrp
jp
cmp
mov
ds
jnp
ds
popf
aam
lret
lret
bound
scas
rorl
nop
sbb
xchg
popa
xor
aaa
xlat
hlt
lea
inc
push
jae
movsb
addr16
mov
mov
outsl
test
scas
jns
jle
aam
ss
fnstenv
cmp
xor
cmp
or
sub
ret
je
xchg
cli
or
pusha
xchg
pop
sarl
adc
les
out
cwtl
push
and
xchg
add
lods
jb
push
dec
mov
pop
aaa
inc
sbb
jmp
rorb
sbb
push
sbb
daa
and
cmp
xor
inc
in
push
dec
push
mov
sub
mov
push
daa
lcall
or
and
shl
insl
movl
dec
fdivp
push
jne
lock
xor
xor
imul
jge
dec
sub
jmp
pop
outsb
mov
or
in
cmc
int3
or
mov
outsb
adc
or
cli
sub
insb
xor
les
sbb
inc
sbb
daa
mov
test
hlt
jmp
bound
pop
clc
adc
sbb
mov
inc
jnp
dec
push
fwait
adc
mov
mov
cmp
lds
jbe
push
xchg
nop
xchg
pop
pop
push
rclb
add
stos
push
xchg
stos
pop
cld
in
repnz
push
pcmpgtw
pop
push
xor
jg
outsl
xor
daa
daa
outsb
xchg
into
xor
push
jb
leave
pop
mov
sbb
push
jbe
lds
lret
sub
clc
sahf
outsl
xor
jno
xchg
xor
adc
test
adc
jne
sub
dec
repnz
sbb
xor
sub
into
dec
in
in
dec
pop
gs
nop
xchg
sub
sub
or
shr
xor
mov
or
les
cmp
cmp
pop
jne
cmp
sbb
inc
pop
sbb
pop
jecxz
je
notl
mov
xlat
cmpsl
cmp
loopne
lds
sbb
dec
insl
mov
sahf
add
and
dec
pop
cltd
jno
xor
mov
nop
mov
shll
pop
imul
imul
je
mov
cmp
or
in
lds
fimull
xor
xchg
shl
sbb
xor
lea
sub
data16
dec
add
rcl
decl
pop
jecxz
and
sub
adc
out
repz
push
push
imul
sti
fldl
out
in
pop
shlb
int3
mov
add
inc
mov
enter
daa
dec
xchg
test
lds
sbb
lock
movsb
addr16
out
inc
je
lods
sti
inc
popf
mov
xchg
lds
movsl
divl
sub
mov
popf
or
pop
sbb
test
fistpll
cltd
jnp
out
leave
xchg
mov
movsl
mov
stos
aad
or
fsubl
sbb
cmp
mov
imul
and
cmp
pop
inc
out
lret
int
addl
repnz
pop
hlt
sbb
cmpsb
jb
push
xchg
add
cmpsl
sub
pushf
xor
pop
outsb
mov
sub
ss
adcb
subl
mov
ss
add
adc
pop
leave
inc
or
out
pusha
push
inc
ret
or
pop
inc
xchg
jge
movsb
repz
pop
mov
mov
or
jae
xchg
add
cs
xchg
out
or
nop
in
sbb
jge
fcomip
shrl
int3
outsb
nop
xor
or
rcrb
loop
cmp
sarb
imul
ret
std
shll
ds
shr
push
xlat
pushf
scas
stc
inc
mov
jno
xlat
pop
or
mov
ret
adcl
lods
mov
sarb
or
repz
cmc
hlt
repz
sahf
roll
dec
pop
sub
dec
mov
fstl
arpl
adc
ljmp
and
mov
mov
lahf
ret
hlt
push
mov
push
lds
cli
fisubrs
sbb
or
cwtl
mov
data16
add
mov
adc
mov
cwtl
sarl
xor
inc
pop
mov
loope
inc
inc
hlt
out
scas
nop
and
iret
cwtl
into
push
mov
sbb
repz
dec
mov
push
icebp
mov
mov
dec
int
and
stos
add
pop
popf
dec
dec
out
mov
test
xor
sbb
in
lcall
xchg
xor
out
sbb
adc
push
adc
jbe
xor
ffree
pop
fiaddl
cmp
leave
jns
mov
sbb
pop
cmp
mov
jle
fadds
sbb
divb
hlt
inc
xchg
pop
dec
testb
mov
pop
sbb
je
xor
sbb
jae
mov
andl
shrb
or
sub
jns
je
andb
loope
insl
lock
mov
iret
pop
jg
test
xor
test
sbb
sub
adc
stos
mov
mov
cli
fadds
adc
xchg
xchg
arpl
cmpsb
jae
hlt
adc
scas
loopne
add
int3
loopne
and
sub
mov
lahf
ret
adc
ja
add
fistps
mov
daa
and
sbb
incb
mov
faddl
out
fnstenv
xor
psubsb
shlb
pop
lods
repz
filds
dec
loop
mov
or
fsubrp
and
bound
or
sub
ljmp
pop
lret
mov
cli
pop
in
add
cmpl
inc
pusha
jp
fisubrl
std
mov
jecxz
and
scas
push
xchg
sub
ror
icebp
jbe
dec
cmpsb
rorb
fmull
sub
pop
or
dec
adc
imul
mov
xor
push
scas
mov
paddsw
xchg
mov
iret
jb
add
pushf
lea
sti
adc
mov
xor
xchg
jle
jno
pop
loopne
test
repnz
scas
daa
jmp
or
mov
xor
mov
hlt
inc
pop
cmp
or
adc
xchg
outsl
popa
sbb
rcrb
imul
sub
movq
push
pop
shl
ret
xlat
cmp
pop
add
out
adc
dec
mov
jbe
or
iret
lds
push
dec
js
sub
jo
movsl
cmp
jge
pop
lcall
addr16
addr16
movsl
jge
xchg
push
jne
sub
aam
int
in
push
push
mov
push
pop
dec
loopne
or
dec
and
mov
popf
adcl
push
arpl
mov
and
sbb
mov
stc
mov
sahf
xchg
xchg
std
mov
clc
movsb
pop
mov
hlt
popf
movsb
sar
mov
das
lods
iret
push
lahf
lret
cmp
in
outsb
fdivrl
fstpl
sub
xor
out
xor
sub
lret
inc
loope
inc
xchg
push
ss
aam
pmulhw
lock
dec
outsl
xor
rorb
add
pop
push
sbb
adcb
nop
push
mov
dec
mov
loopne
sub
pop
adc
and
scas
pushl
pop
mov
push
jp
mov
sahf
add
cmp
pushl
or
ret
fdivl
push
mov
sub
test
or
stos
out
clc
movsl
jb
test
jecxz
pop
icebp
scas
add
out
nop
dec
cmp
push
ret
inc
cwtl
and
pop
sub
lret
add
mov
sbbl
lock
and
imul
repnz
jne
adc
pop
adc
push
imul
mov
loopne
sub
mov
ficompl
jo
cmp
xor
loopne
fs
jle
test
scas
xchg
push
jnp
cmp
add
mov
mov
adc
ss
dec
mov
test
xor
lcall
mov
mov
orl
pop
fstpl
jp
insl
arpl
mov
pushf
cmp
sbb
sbb
cmp
outsb
xabort
xor
cltd
push
roll
push
cli
push
aas
mov
std
aas
subb
xchg
adc
nop
push
push
test
adc
xchg
enter
mov
sbb
fistpll
xor
xor
mov
cmpsb
mov
sub
testl
outsl
loop
add
xor
push
loopne
cmc
dec
fistpl
pop
mov
aad
mov
cmp
xor
dec
mov
pop
test
pop
xchg
xchg
fstps
outsb
sub
and
pop
cld
clc
pop
jo
sub
xchg
into
xorb
lcall
lahf
lock
push
jmp
pop
js
xor
fildll
adc
push
call
cmpsl
lods
outsb
push
pop
sbb
mov
push
adc
cmc
xlat
jl
jno
into
sbb
jle
mov
jb
mov
sub
dec
mov
lcall
ja
mov
xor
fbstp
mov
fwait
xchg
push
cmpsl
popf
lods
mov
repz
loopne
test
xorl
dec
add
in
mull
cmpsl
add
lret
push
shll
adc
xchg
mov
les
addb
cmp
lock
popf
leave
adc
lahf
sti
dec
loopne
push
sbb
xor
ja
push
cltd
fildll
add
js
jecxz
or
jmp
arpl
fnop
out
jne
cmp
mov
lahf
lods
dec
pop
push
lea
push
sub
addb
mov
or
scas
int3
out
ljmp
mov
mov
into
xchg
mov
movsb
loope
inc
sahf
rcll
lods
add
pop
lret
lret
push
jmp
pop
sbb
in
cmp
or
scas
scas
mov
mov
loop
shl
xchg
ds
cmp
test
mov
inc
les
xchg
add
mov
mov
cmpsl
lahf
je
test
ja
repz
push
fnsave
xlat
fs
pop
mov
adc
adc
addr16
and
pop
les
xor
jbe
adc
cltd
std
scas
repnz
jo
dec
mov
or
divl
aaa
xor
dec
in
fcoms
cmpsl
xor
aas
mov
int3
ret
pusha
push
mov
out
jg
cmp
xor
pop
dec
dec
aas
jmp
inc
in
mov
mov
int3
push
fcoms
and
repz
sbbl
jb
mov
xchg
rclb
jo
les
push
mov
mov
or
cmpsl
mov
push
xor
fiaddl
subl
nop
jp
sub
sbb
daa
jl,pn
fwait
lods
mov
dec
ret
fimuls
mov
hlt
inc
outsl
or
and
push
adc
and
xchg
mov
movsl
push
sub
enter
add
cmpsl
stc
bound
faddp
adc
cmp
int3
ret
xor
je
push
ja
jb
roll
arpl
mov
xchg
stos
sub
and
jg
and
mov
push
lahf
adc
popf
xor
push
mov
popa
data16
mov
bswap
call
or
ret
call
push
roll
xchg
mov
negl
mov
sbb
ds
push
in
lods
bound
xchg
xchg
mov
pushf
pop
scas
dec
jno
mov
adc
push
xor
addl
sbb
and
and
xor
into
inc
lods
je
or
imul
mov
iret
clc
fsubr
push
inc
shll
stc
or
mov
rcll
es
xor
push
je
aas
pop
into
mov
fiaddl
sbbb
mov
mov
xor
stos
es
or
xchg
rclb
addr16
cmp
in
stos
adc
jge
jg
inc
out
fdivs
dec
xlat
cli
inc
mov
in
lods
xor
cwtl
add
or
sub
popa
js
xchg
pop
es
scas
add
mov
cli
xchg
sti
pop
inc
inc
ret
jle
pop
xorl
adc
inc
mov
bnd
aas
adc
lret
cmp
jle
bound
ret
std
sbb
adcl
test
sahf
push
dec
inc
int3
jg
loope
jae
mul
pop
sub
in
popa
mov
mov
loopne
xor
mov
jle
or
pop
orb
cmp
add
sub
mov
and
loope
xchg
nop
fisubrl
shlb
cmc
sub
into
fmull
inc
xchg
push
xchg
dec
pop
jg
mov
loop
pop
jl
call
cmp
pop
std
mov
pop
les
add
scas
push
out
aaa
jge
cwtl
mov
sahf
cld
xchg
jmp
dec
xor
shl
adc
popf
jbe
mov
and
mov
jno
lods
pop
xlat
in
sub
cmp
jb
and
fcoms
stos
in
dec
pop
ret
in
test
cs
jl
loop
xor
out
ds
and
loope
sahf
ss
sub
push
imul
and
psllq
out
data16
cmp
je
js
int3
dec
or
imulb
mov
rol
cs
inc
lret
mov
ret
jp
dec
mov
add
xor
add
mov
mov
push
lret
sarb
arpl
popf
insb
add
rclb
push
mov
mov
pop
jbe
into
lea
adc
cmp
es
xchg
mov
inc
dec
xchg
push
and
push
inc
rclb
inc
clc
nop
addb
lcall
jns
jmp
inc
fimuls
into
daa
inc
sbb
sub
mov
cld
out
push
ljmp
xor
test
push
adc
mov
inc
out
xchg
mov
in
add
pusha
incl
push
xor
push
in
dec
adc
in
daa
and
dec
fstl
push
out
or
push
and
xchg
adc
ja
xchg
pop
mov
push
fistl
out
xor
std
xlat
ljmp
mov
popf
jp
xchg
xchg
sub
enter
ljmp
test
mov
in
xchg
sbb
mov
mov
scas
lods
ja
sbb
repz
sub
adc
lret
leave
inc
testl
movsb
xchg
aaa
pop
scas
xchg
mov
je
push
add
and
mov
cvtdq2ps
xchg
sub
mov
ror
or
in
mov
xor
dec
scas
cs
xchg
movsb
or
push
in
and
daa
notl
push
xor
sub
mov
jl
jb
daa
or
xchg
insl
sub
aaa
pop
scas
push
js
sbb
cltd
cwtl
test
and
push
fstpl
aad
icebp
inc
sbb
dec
cmp
loope
fwait
les
inc
xchg
rcll
jecxz
xor
rcrl
std
xchg
dec
shll
dec
movsl
stos
int3
add
jns
pop
cmp
fimull
add
aas
mov
stos
fistl
mov
mov
sbb
jle
repnz
sbb
addr16
out
out
push
repz
and
sub
nop
xchg
jo
in
lods
in
adc
ss
push
adc
jns
dec
fcom
imul
icebp
loope
dec
sbb
cmp
rcl
dec
repz
cs
dec
push
fwait
cmc
sub
aam
test
lahf
xchg
mov
jecxz
mov
sahf
orb
andb
mov
in
dec
dec
dec
sub
pop
sbb
cmp
sbb
icebp
sbb
aad
rclb
mov
xchg
mov
cmpsb
les
popf
js
js
mov
sbb
adc
scas
jge
adc
sbb
das
pop
in
pop
cmp
pop
xchg
mov
das
iret
mov
jle
mov
pop
in
cmp
in
pop
sbb
popa
xor
push
cmp
push
push
sbb
adc
xchg
pop
and
xchg
cmp
cli
fisttpll
mov
ljmp
cmp
insl
inc
subl
inc
cmpsl
xor
sub
push
out
in
fwait
push
shrl
add
mov
fsubrl
sti
pop
mov
sub
outsb
jle
insb
daa
pop
leave
pop
fsts
and
mov
adc
jae
xor
xchg
cltd
pop
enter
in
test
out
in
cwtl
popa
inc
jg
sbb
imul
adc
mov
adc
data16
jecxz
cmp
dec
mov
arpl
test
dec
jecxz
stos
cmc
imul
cmpsb
and
aad
cli
dec
jecxz
gs
xor
jp
add
sbb
filds
cmpsl
ret
push
ss
pop
sub
ror
in
lahf
ljmp
test
cmp
sahf
xor
iret
idivb
sarl
jmp
gs
jnp
mov
frstor
add
adc
jbe
xchg
jl
adc
and
movsb
popf
sahf
xchg
mov
mov
out
hlt
shlb
fldcw
sub
and
push
es
push
popf
lds
and
cld
or
int3
and
cltd
loop
and
test
mov
scas
fldt
mov
pop
push
inc
jo
inc
lods
or
jle
fwait
leave
mov
mov
repnz
aad
inc
push
xchg
out
mov
sub
jg
xchg
sub
mov
loop
lahf
inc
sbb
and
push
movsl
or
and
mov
push
cmp
cmp
call
sbb
in
or
inc
leave
push
mov
out
pushf
or
or
fimuls
or
pop
imul
lds
enter
sub
xchg
add
fsubrl
scas
push
popa
sbb
mov
inc
gs
jno
sub
sbb
pusha
dec
or
fldl
add
fsts
sub
dec
and
hlt
jo
cmp
mov
adcb
pop
mov
mov
cmp
mov
lahf
hlt
fnstenv
jecxz
push
adc
addl
xchg
out
arpl
adc
in
outsl
sbb
loopne
shlb
xchg
call
or
adc
imul
push
pop
lea
mov
add
push
mov
sahf
and
aaa
lock
push
dec
fmulp
pop
sub
adc
push
fxch
pusha
dec
das
cmc
nop
mov
out
les
xchg
push
jg
je
or
mov
inc
paddusb
adc
data16
mov
pop
mov
dec
rcrl
xor
in
sub
mov
xchg
push
movl
dec
in
sbb
jge
insb
or
adcl
test
add
repnz
cmp
outsl
clc
in
mov
jecxz
mov
xchg
mov
ljmp
js
sbbl
rorb
jns
adc
jecxz
inc
sbb
cwtl
mov
mov
idiv
out
mov
xor
in
sbb
dec
fisttpll
dec
and
in
push
mov
inc
loopne
bound
rcr
repnz
lcall
xor
fbstp
loope
dec
pop
xor
aad
shl
push
inc
mov
xchg
mov
xor
pop
cmp
pop
mov
inc
xchg
sarb
in
cwtl
pop
data16
xchg
mov
ss
leave
mov
fisttps
xchg
dec
cwtl
pusha
ljmp
mov
lret
mov
sub
mov
inc
fisubrs
push
movsb
out
mov
jge
in
inc
pop
xchg
lea
lret
or
jnp
lods
in
push
fildll
outsl
adc
mov
inc
mov
loopne
lods
cmp
int3
cmp
push
clc
mov
insl
sub
push
scas
pop
aaa
ret
bound
cld
xor
push
mov
add
sbb
jle
pop
jl
and
push
adc
jecxz
add
xchg
imul
orb
cmp
jmp
pop
dec
les
jb
mov
out
aad
and
mov
test
nop
rcll
ja
mov
mov
orl
push
shr
jge
push
rol
jnp
and
push
inc
into
out
movsl
neg
xchg
in
lds
xchg
int3
mov
mov
sbb
cmp
imul
sahf
jne
cwtl
fbld
or
sbb
setbe
add
inc
std
int3
lods
aad
test
or
mov
addr16
sbb
sahf
pop
sbb
cmp
xchg
jl
cwtl
pushl
or
es
jnp
sub
pushf
jecxz
into
xchg
popl
add
hlt
cwtl
stos
add
xor
fwait
xor
in
mov
xor
pop
mov
sub
orl
and
cmpsl
xor
pop
sub
das
test
mov
and
arpl
inc
aad
xchg
sahf
daa
sbb
xor
daa
add
sub
add
mov
push
cltd
or
add
cmpsb
in
xor
pop
inc
xor
ja
mov
xchg
out
ds
sahf
sti
ds
xor
out
sbb
adc
lods
jns
outsb
add
cmc
adc
dec
in
ret
mov
rorb
mov
sub
loopne
subb
test
sub
adcl
clc
mov
lods
cli
and
sub
jge
shrl
in
inc
pop
adc
sub
test
mov
xor
cmp
xor
out
push
pushf
xchg
push
jle
test
xchg
cmpl
xlat
inc
mov
icebp
lret
fstpl
lret
pop
stos
mov
adc
pop
pop
fcmovne
lcall
mov
dec
mulb
add
adc
cmpsb
in
loop
jle
sahf
out
aaa
cmc
sti
es
call
jmp
aam
dec
lea
xchg
mov
popf
cmpsl
mov
mov
outsl
ror
out
cwtl
ljmp
pusha
ljmp
mov
mov
aad
cmc
mov
je
repz
pop
in
scas
les
mov
movsl
jbe
leave
and
lods
jg
sahf
inc
scas
jge
mov
xchg
xchg
xchg
push
or
inc
in
das
call
mov
adc
aam
data16
sub
dec
out
mov
cmpsb
jmp
iret
inc
test
outsl
lret
in
fmuls
in
testb
pop
push
cmpsb
push
xlat
pop
faddl
cmpsl
xor
mov
out
inc
fnstsw
xor
push
and
rcll
ficompl
or
shrb
mov
inc
shll
add
inc
dec
jecxz
popa
push
fnsave
icebp
xchg
xchg
xchg
jl,pt
outsb
push
push
sbb
mov
scas
mov
pop
mov
mov
insl
xchg
add
popfw
lds
adc
and
cli
or
sub
and
jb
test
ja
lret
xlat
sub
inc
fs
psubw
and
aad
ja
jns
mov
movups
in
push
adc
stc
inc
cmp
and
outsl
in
push
fmull
inc
xor
add
jae
je
push
push
mov
push
cltd
and
call
ret
sahf
stc
popl
jo
sub
in
or
repnz
pop
dec
iret
add
imul
scas
adc
pop
test
stos
mov
jge
movsl
shlb
sub
dec
cmp
imul
xchg
mov
out
add
add
imul
jo
lods
mov
push
test
sbb
cwtl
xor
pop
xor
mov
add
adc
mov
mov
lods
scas
out
es
iret
xor
mov
mov
lock
xlat
enter
clc
sub
test
mov
jl,pn
das
mov
rcrb
sbb
pop
and
pop
sti
mov
and
and
sub
adc
inc
xor
mov
push
int
test
iret
jp
add
sbb
dec
stos
mov
iret
jp
cmp
push
mov
inc
daa
lret
sti
mov
int
add
xor
jmp
mov
mov
pop
sahf
cmc
mov
mov
mov
sbb
leave
push
jns
movsl
repz
sub
push
lahf
jne
xor
repnz
xchg
cld
or
lcall
mov
mov
and
xor
jmp
or
ss
arpl
fucom
mov
mov
pop
xchg
inc
cmpsb
cmp
fsubr
xchg
sub
pop
push
js
jne
aas
sub
pop
pop
push
ficompl
popa
clc
sub
xchg
dec
inc
mov
jae
call
outsb
inc
daa
or
movsb
cmp
das
inc
aas
mov
loop
jb
test
scas
movsb
and
pop
sbbb
enter
stc
test
movb
addr16
data16
add
push
cmp
mov
in
je
jnp
mov
in
add
test
mov
ret
push
jmp
add
imul
iret
mov
popa
out
jbe
and
idivb
jbe
add
test
cmp
fcmovne
jnp
xor
aas
xchg
mov
cld
lahf
push
mov
jle
out
xlat
test
imulb
xchg
jmp
lahf
aam
xor
jmp
push
sub
repz
xchg
and
lahf
test
dec
dec
loope
aam
jge
xor
jno
lds
insb
adc
jnp
test
add
mov
bnd
dec
pop
mov
dec
mov
push
lahf
mov
lret
xchg
xor
lods
mov
mov
lock
flds
aad
jae
mov
push
xchg
adc
and
mov
fists
gs
cmp
pop
movsb
mov
sub
out
lahf
cltd
mov
pop
outsb
mulb
shr
je
inc
cmp
scas
or
sub
push
jge
or
int
ret
mov
adc
je
lea
enter
jecxz
hlt
push
aaa
iret
notl
shll
push
dec
xchg
jl
xor
add
pop
jae
pop
subb
adc
clc
fsubrs
rcl
adc
or
shrb
jecxz
add
mov
push
push
mov
mov
mov
mov
jg
std
imul
std
or
rcll
shl
movsl
adc
sbb
andb
mov
icebp
aas
dec
leave
sti
jle
iret
adc
lods
push
mov
out
sti
repz
mov
lods
fstps
out
pop
idivl
sbb
aas
popa
les
adc
idivb
mov
adc
push
and
imul
sbb
rclb
test
xor
add
fwait
sbb
test
in
and
jg
and
ret
repz
out
sub
stc
pop
outsb
test
mov
in
lods
jle
cli
loope
mov
xor
addb
insl
inc
and
mov
jle
hlt
mov
pop
cwtl
test
icebp
aas
lret
add
mov
ficoms
push
into
das
in
sahf
adc
data16
push
jae
cmp
in
shll
mov
int3
arpl
pop
mov
mov
cmp
scas
imul
mov
add
lret
std
inc
pop
dec
daa
inc
gs
xchg
jmp
xchg
imul
pop
push
sub
int3
lods
les
sahf
and
mov
outsl
jns
push
std
cmp
and
stos
subl
push
loop
imul
gs
fxtract
mov
imul
pop
nop
fstl
movsl
ja
lret
sarb
sbb
cmpsl
add
inc
ss
xor
sub
jmp
or
pop
sub
mov
test
test
jg
lods
dec
dec
sarl
aaa
stos
inc
cld
lret
push
into
inc
movsb
jbe
sbb
movl
mov
and
cmpsl
jmp
mov
loopne
or
xlat
das
fadd
lods
hlt
pop
cmp
push
inc
decl
or
cmp
pop
mov
mov
fwait
add
jno
and
xchg
dec
cwtl
nop
adc
sub
jg
xchg
mov
and
mov
ljmp
iret
xor
popa
lock
xlat
fistl
test
mov
inc
rorl
jno
and
mull
mov
cld
and
cmpsl
loope
and
decl
jmp
lret
stos
mov
fmull
inc
inc
inc
and
popf
mov
push
cmp
std
pop
rcr
mov
push
rol
sub
cmp
je
scas
and
lahf
lcall
and
mov
mov
inc
dec
add
jl
mov
jp
push
nop
test
movsl
or
jl
sbb
push
and
call
pop
out
ret
push
or
sbb
mov
shll
xor
or
mov
push
jbe
jmp
and
xlat
loopne
xor
lock
xchg
dec
test
clc
cmp
cmpsb
les
lods
mov
repz
xchg
out
fnstcw
or
mov
aaa
mov
mov
or
xchg
sub
outsl
cmp
mov
mov
imul
fldt
or
into
js
jmp
mov
nop
cmp
sbb
ss
cltd
repz
push
pop
addr16
pop
sub
jae
and
xor
lock
pop
jmp
adc
xchg
push
ja
inc
mov
rol
pop
sbb
mov
dec
aas
into
js,pt
or
and
stos
inc
pop
scas
cmp
in
movsl
sbb
cli
lods
mov
aam
dec
adc
adc
lds
enter
hlt
outsl
mull
or
outsl
scas
push
lea
inc
mov
lds
fucomi
bound
test
andb
sub
or
sahf
jb
cmc
jp
adc
js
push
pop
insl
ja
dec
andl
mov
sub
ret
stc
pop
imul
and
insb
cli
jae
hlt
mov
sarl
pop
add
in
cmp
pop
mov
aad
jne
mov
int
les
lods
jne
push
loopne
or
mov
xchg
mov
aam
jp
js
ss
rcrl
data16
aaa
and
mov
or
and
push
mov
inc
test
mov
test
scas
mov
sti
push
hlt
push
mov
jmp
pop
push
in
icebp
insb
fiaddl
and
test
and
loop
ret
and
jo
pop
outsb
loopne
xchg
daa
mov
shl
push
into
loope
or
pop
lods
in
daa
mov
or
inc
push
inc
inc
mov
xchg
jnp
sub
aam
repz
mov
push
or
pop
cmp
test
mov
outsb
xor
mov
fcoms
iret
or
loopne
dec
xchg
pop
jge
scas
mov
lret
xlat
dec
loope
inc
cmp
scas
mov
ljmp
js
fsubs
push
in
lds
loop
sub
sahf
mov
inc
mov
ljmp
adc
sbb
push
push
sbb
mov
mov
xor
inc
pop
lcall
xchg
or
xor
sbb
push
or
lods
cmp
push
jmp
out
decb
daa
cmpsl
popf
add
mov
fstl
cmp
mov
call
stc
lea
xor
ljmp
pop
push
mov
add
pop
add
jb
ljmp
push
push
ret
ret
inc
pop
ds
enter
scas
ljmp
pushf
jo
fs
push
xchg
xchg
jmp
ljmp
test
cmpsl
cmpl
push
or
call
fmul
cmp
fidivs
imul
pop
inc
xchg
pop
imul
sub
push
pop
xor
cwtl
das
lret
jg
fisubrl
cmpsl
ds
mov
scas
outsb
jo
insl
lret
xor
dec
mov
dec
or
fimuls
pop
cmc
xchg
aas
inc
and
push
cmpsl
push
mov
out
sub
sub
ds
cmovl
ss
sbb
cmp
aaa
mov
add
repz
in
adc
push
rol
js
shr
adc
fsubrp
sbb
mov
add
sub
test
ja
xor
popa
je
stc
movsl
sbbb
fstps
push
jae
sbb
int
lods
cld
inc
push
test
xchg
outsb
push
dec
pop
mov
sbb
mov
push
sbbl
fldenv
shl
psrlw
out
sbb
xchg
or
mov
in
xchg
adc
rcrl
xor
add
inc
add
lret
fs
push
sbb
sub
or
out
cmp
iret
gs
incl
clc
inc
push
xor
aaa
int
ss
cmpsl
std
push
inc
lods
cwtl
pushl
mov
das
out
popa
mov
shll
and
ljmp
push
add
cld
stos
mov
popl
daa
lcall
pop
lret
sub
cld
cmp
adc
cmp
adc
mov
movsb
sti
xlat
xchg
arpl
lock
xor
aaa
dec
mov
mov
icebp
mov
loop
out
xor
sbb
dec
xchg
push
sbb
mov
cwtl
mov
mov
rcrb
jno
jnp
test
mov
into
push
xchg
push
xlat
mov
and
push
inc
insb
mov
dec
repnz
mov
sub
mov
loop
xchg
cmpsl
inc
data16
adc
sbb
mov
or
cwtl
pop
test
mov
pop
enter
and
xor
rorl
push
fcmovnb
lret
and
xlat
xchg
xor
push
xchg
xor
into
inc
fidivs
aad
pop
pop
jg
repz
dec
incb
imul
inc
fcoml
inc
loope
je
pop
fdivrl
adc
push
sub
outsb
call
or
mov
push
daa
adc
insl
je
mov
push
push
daa
out
lods
popa
frstor
mov
xchg
cmc
pop
mov
iret
xchg
adc
xchg
push
adc
sbb
mov
dec
push
ljmp
jno
lret
jg
add
in
inc
jae
into
xchg
add
mov
into
xor
test
adc
nop
jp
mov
leave
jecxz
sbb
fcomps
aaa
pop
cmp
mov
ds
push
stos
xor
test
test
jmp
pop
pop
mov
orb
pop
pop
lods
inc
mov
lret
leave
mov
loope
pop
pushf
mov
test
stos
sub
mov
into
jle
push
fs
shrl
scas
leave
ds
or
and
mov
mov
mov
ljmp
mov
enter
in
xchg
mov
pop
and
mov
cli
xchg
pushf
xchg
incb
mov
repnz
sub
daa
scas
xor
lods
mov
inc
cmp
imulb
fstpt
and
repnz
sub
sbb
add
movsb
add
pop
xchg
enter
pop
dec
hlt
and
push
pop
mov
fstpl
dec
in
fcmovbe
lods
nop
fcomip
adc
addr16
push
orl
cmp
insb
loope
outsl
add
pop
stos
dec
push
inc
cmp
icebp
aas
test
or
daa
dec
and
xchg
stc
cmp
mov
xchg
in
push
enter
stos
pop
pusha
lahf
xchg
in
xor
cmpsl
or
and
mov
jp
adc
jecxz
lret
cmp
push
mov
pushf
xor
lods
xchg
push
mov
inc
test
xchg
lds
es
aaa
in
test
mov
xchg
sub
scas
pushf
adc
jb
jle
movsl
lcall
mov
xchg
xchg
xchg
stos
lahf
rcrl
scas
fsubr
aaa
adc
cmp
xchg
mov
aas
jb
xchg
push
fwait
scas
inc
pop
loopne
add
int
and
fiadds
shrb
aas
inc
in
out
xor
cmp
imul
test
jno
out
cmpsb
inc
aam
xchg
lea
adc
sub
jecxz
outsl
iret
int3
cmp
es
push
sbb
das
popf
addr16
push
mov
xchg
mov
mov
gs
add
cld
inc
mov
scas
nop
fisubs
out
fcomps
ret
adc
mov
je
mov
or
aam
cld
sahf
aas
bound
cmpb
pop
out
mov
xor
lahf
divb
dec
pop
sbbl
push
mov
xchg
sub
xchg
cmp
daa
adc
sar
inc
cwtl
pop
fisubs
js
pop
iret
pop
cs
pop
cmp
mov
hlt
push
adc
push
movsl
pop
mov
pop
ja
fisttpl
push
sbb
outsb
repnz
dec
lcall
andl
loope
je
in
fiadds
xchg
inc
sbb
adc
push
mov
enter
and
adc
xor
xlat
cmpsb
ds
cltd
add
imul
call
and
data16
pop
arpl
push
pop
or
into
gs
decb
test
popf
imul
jne
adc
xor
js
ficoms
mov
sbb
lods
mov
and
arpl
inc
faddl
inc
push
test
dec
xor
shrb
shll
stc
push
adc
lahf
mov
xor
int3
pop
addr16
xchg
test
lret
hlt
mov
mov
add
pop
pop
mov
ret
sahf
and
xlat
sbb
subb
jnp
mov
lock
mov
shrb
loope
xchg
jns
push
push
shrb
mov
and
mov
out
or
fld
pop
adc
fisubs
or
push
adc
push
mov
mov
out
dec
pop
outsb
out
mov
jne
xchg
mov
sbb
dec
lcall
jg
cwtl
dec
fstl
push
push
jg
fcmove
gs
fwait
pop
push
int
lods
mov
outsb
dec
js
les
inc
flds
mov
call
aam
stc
imul
cli
xor
add
jmp
aas
lock
into
filds
stos
sub
int
repz
mov
je
mov
testl
and
pop
sbb
fsubrp
loope
aam
dec
in
push
outsb
xchg
pop
test
lret
lret
xchg
inc
stos
adc
or
xchg
xchg
add
sub
scas
fidivrl
mov
stos
dec
aas
xchg
hlt
sbb
push
cltd
dec
ror
pop
andl
pop
lcall
mov
lret
sbb
jo
jecxz
and
xchg
test
inc
mov
or
mov
mov
xchg
xchg
mov
sbb
das
dec
lds
fldenv
add
push
out
sbb
mov
jb
mov
xor
frstor
sarl
sub
adc
cmp
push
xor
dec
mov
popa
fsubs
insb
add
pop
popf
ja
xor
mov
test
enter
mov
pop
shlb
jnp
cwtl
daa
cmp
sbb
movsb
jns
lret
aam
ffree
mov
and
ja
cmp
and
xor
xchg
repnz
dec
jns,pt
ss
pop
inc
setl
outsl
jns
in
cmpsl
adc
cs
add
dec
sar
adc
sub
dec
out
outsb
xchg
xor
lret
lds
ret
mov
cmp
test
fcompl
movl
sarl
fsubl
fidivrl
add
dec
cmp
or
fwait
inc
xchg
stc
cmp
loope
push
push
sti
sub
fcompl
in
mov
jb
xchg
sarb
pop
push
dec
mov
cmp
jo
aas
adc
scas
lret
iret
add
or
and
inc
fildl
xor
lods
cmp
jo
mov
jge
popa
inc
shll
outsl
adc
icebp
mov
mov
cmc
pop
pop
mov
inc
pop
movsl
jmp
xor
push
inc
and
sti
inc
xchg
stos
jl
jnp
scas
cmp
push
rolb
test
das
fs
pop
sti
lods
and
incl
pop
dec
fxch
fcoml
rcll
xchg
pop
ljmp
push
jne
rclb
movsb
mov
adc
daa
push
xor
xchg
mov
push
icebp
jb
enter
adc
cwtl
leave
scas
jo
shll
xorb
mov
cltd
mov
fsub
dec
pop
mov
cmp
dec
inc
enter
shll
mov
outsl
jg
push
inc
xor
rclb
inc
fiaddl
fstpl
push
mov
cmp
fbld
arpl
push
aaa
cli
cltd
xchg
mov
or
add
mov
add
insl
add
call
xchg
cmp
iret
movsl
mov
fcmovnu
and
test
cmp
clc
stc
cwtl
mov
or
pusha
mov
adc
mov
adc
ds
sbb
cmp
je
push
push
jo
mov
or
inc
movsl
or
scas
mov
imull
test
add
imul
jns
stc
into
repz
inc
fisubrs
gs
iret
xchg
push
sub
pop
pop
ljmp
push
add
or
imul
jmp
or
push
mov
adcl
pop
fbstp
cmp
out
cwtl
lahf
pop
lret
mov
dec
push
inc
rorl
fnstenv
aaa
jle
bound
icebp
ja
dec
aam
mov
mov
pop
pusha
subb
jnp
insb
fdivrl
ja
jne
inc
fcoms
pop
ljmp
adc
ds
es
and
ss
xor
jle
xor
je
aas
inc
mov
test
callw
scas
mov
push
sbb
inc
mov
mov
push
inc
sbb
fisttpl
lods
mov
ret
cmpsl
inc
stos
jp
test
and
lret
push
out
mov
andb
rcrl
push
jns
mov
push
lea
inc
dec
xchg
aaa
jg
sti
cmp
mov
in
cwtl
bound
xchg
test
loope
pop
sbb
fsubs
scas
iret
popf
ja
rolb
cltd
shll
mov
sbb
dec
movsl
inc
out
mov
les
fdivs
ljmp
fidivl
roll
insl
cld
clc
or
pop
into
test
shlb
push
iret
outsl
insl
jge
fdivl
mov
lock
add
xchg
cmpsl
cmp
outsl
jge
jnp
add
adc
pop
shll
scas
test
imul
popa
enter
out
sbb
pop
idivl
aas
outsb
testb
loopne
adc
pop
inc
adc
adc
insl
mov
jae
sbbb
lea
mov
mov
jns
and
out
jne
cwtl
cwtl
mov
pop
stos
jns
in
test
fcoml
pop
adc
inc
cmp
xchg
testb
nop
movsb
repz
push
push
nop
sub
mov
test
rcll
hlt
adc
sbb
insl
pop
cmp
adc
sub
mov
shlb
inc
dec
mov
mov
imul
jp
push
outsb
test
fmulp
add
sti
rcrl
adc
aas
and
mov
mov
and
lods
mov
inc
sbb
rcll
int3
ja
loopne
in
mov
lret
lret
imul
out
nop
cmp
stc
xchg
daa
mov
loope
xchg
sbb
call
or
fcomp
and
cmp
dec
xor
leave
mov
idivb
imul
test
rcrb
ret
dec
cmpl
mov
loopne
mov
repnz
push
push
xor
sub
bound
mov
fnsave
adc
mov
jmp
loopne
dec
rorb
inc
out
push
iret
inc
stos
add
fnstenv
aam
div
xchg
xor
xchg
xchg
int
stos
iret
mov
mov
idivl
push
inc
fildl
and
inc
or
xor
push
add
xor
scas
or
jecxz
fmul
es
xchg
bound
add
pusha
mov
pushf
loope
call
mov
or
adc
jp
xor
add
inc
xchg
and
xorl
popa
or
aaa
into
pop
imul
xchg
mov
mov
into
fisubrs
add
es
mov
and
leave
test
jle
mov
mov
push
lods
imulb
jle
push
sbb
mov
xchg
lock
adcl
incb
sbb
clc
aas
sbb
push
xchg
ljmp
inc
mov
subb
sbb
jecxz
out
and
jbe
cli
aas
pushf
dec
movsl
xchg
xchg
cmp
mov
mov
mov
shrl
jno
jge
imul
jg
mov
in
add
inc
movsb
ja
xchg
out
adc
jae
popf
mov
es
cs
sub
scas
mov
loope
add
loop
and
shlb
popf
sbb
mov
adc
pop
dec
lea
lcall
sub
mov
insl
jb
cmp
lock
je
lods
frstor
jb
sub
pusha
pop
cmp
ret
pop
pop
mov
fisubs
and
in
sub
rclb
jg
mov
dec
ja
iret
call
pop
rorl
sub
scas
cltd
outsl
cmp
xchg
ljmp
cmp
leave
mov
sub
in
mov
sub
in
stc
lods
push
xor
xor
rcrb
lret
fwait
mov
dec
mov
popf
pop
xor
sub
inc
and
jae
lods
jg
adc
mov
xchg
mov
pop
and
pop
call
je
inc
inc
jno
jle
out
daa
push
adc
jmp
lods
mov
adc
fstl
movsl
add
push
repnz
jns
jge
pop
mov
scas
fisubrs
adc
add
lret
adc
outsb
mov
jo
and
jecxz
add
cmpb
mov
insb
xlat
xor
loopne
repnz
popa
mov
mov
xor
call
inc
push
jo
cld
or
sbb
inc
sarl
push
popf
stos
out
fisttps
std
and
subb
mov
ljmp
jecxz
dec
fs
sub
inc
push
xchg
inc
jmp
jge
jo
rorl
adc
pop
mov
in
dec
inc
les
out
mov
mov
fcom
imul
nop
aaa
push
dec
inc
test
gs
inc
jg
xor
shrl
lfs
lods
lret
adc
inc
enter
ljmp
pushf
and
mov
dec
arpl
and
outsl
std
push
call
or
xor
nop
pop
dec
or
sahf
jno
cmp
clc
mov
sub
nop
jle
push
movsl
mov
repz
push
push
adc
test
leave
jg
test
sub
aas
jo
icebp
pop
or
dec
xchg
test
iret
xchg
das
stos
lds
push
nop
daa
lahf
fidivs
pop
mov
sub
je
xchg
repz
imul
adc
add
xor
shlb
mov
outsb
jge
pop
hlt
cld
xorl
push
mov
out
in
xorl
jle
pushf
fisttpll
rcrl
test
or
imulb
into
mov
movsl
out
divb
and
pop
out
add
jnp
sbb
adcl
add
mov
jmp
or
lcall
add
testl
cltd
movsl
fbstp
mov
lods
jne
testb
cmpsb
sbb
sbb
mov
lea
mov
in
mov
data16
xor
imul
mov
pop
push
mov
add
add
push
sub
sar
icebp
or
mov
dec
jecxz
push
dec
gs
in
jecxz
cmp
mov
int3
sbb
int3
fidivrl
pusha
ret
xor
mov
popl
nop
push
pop
stos
pop
mov
mov
call
pop
and
adc
push
and
mov
mov
and
sar
psllq
push
push
dec
imul
inc
jb
lea
out
cmpsb
sahf
cmp
jecxz
or
hlt
bound
jge
or
sub
movsb
adcl
inc
lods
outsl
xchg
inc
stc
int
cmpsl
push
push
fldt
ret
inc
ss
inc
push
mov
in
xor
jno
dec
es
stos
lea
movsb
fldenv
and
jo
push
cmpsl
jp
das
leave
sahf
inc
pop
jge
pop
cld
mov
cmpsl
xor
push
adc
or
jmp
mov
out
adc
pop
addr16
push
movsl
mov
adc
push
pop
pushf
push
lods
adcb
cmp
aas
fisubl
dec
aam
js
andb
sub
cmp
pop
rorb
imul
push
inc
pop
xchg
pusha
push
popf
movsb
xlat
cmpsl
push
and
mov
or
push
clc
sub
cmp
data16
xor
push
enter
sahf
inc
std
repnz
in
int
inc
sbb
mov
jmp
movsb
mov
inc
rcrb
outsl
gs
testl
cld
mov
adc
mov
out
stos
sub
add
mov
cld
lods
lea
test
mov
pushf
push
notl
fwait
sti
push
sbb
or
mov
out
and
add
pop
dec
ss
lea
stos
inc
xchg
jmp
cld
insl
je
mov
mov
pop
ficoms
rcrl
sbb
lds
push
mov
mov
nop
ljmp
add
sbb
mov
dec
or
in
and
sbb
mov
in
xchg
int
in
pop
in
shll
mov
mov
jl
jno
insb
shr
cmp
rcrb
cmp
popf
jl
xor
add
sar
adc
xchg
dec
in
adc
out
or
push
inc
pop
hlt
test
or
and
xchg
jp
inc
push
jecxz
das
push
imul
jge
xchg
push
push
sub
call
mov
xchg
rclb
rorb
fs
adc
cltd
addr16
fildll
test
jb
call
push
push
test
xor
adc
inc
clc
cltd
mov
fists
sti
jbe
inc
int
lock
inc
dec
cmc
sti
les
mov
sarl
in
mov
jmp
dec
das
lods
or
loopne
jg
sub
test
jge
pop
test
pop
mov
mov
inc
pusha
mov
sub
adc
popa
pop
dec
xchg
ljmp
xor
jle
cwtl
push
push
sub
lock
mov
jle
int
mov
push
jne
mov
mov
fmull
imul
scas
ret
jno
lahf
dec
movsl
sub
xchg
mov
jl
sti
test
add
sub
sub
or
mov
dec
adc
mov
and
mov
dec
xchg
inc
fldcw
je
dec
xor
jmp
xor
mov
adc
xor
adc
int
or
cs
pop
mov
or
mov
test
rcrb
daa
std
xchg
cltd
pushl
test
les
lret
insl
push
add
pushf
xchg
loopne
cmpl
outsl
sbb
sbb
pop
cvtps2pi
mov
sub
int
mov
mov
dec
mov
jle
or
cltd
das
dec
loop
repz
jp
cmc
mov
test
out
mov
enter
in
adcl
lret
pop
mov
pop
ss
scas
xchg
push
enter
cmpl
or
test
inc
jae
pop
cmp
dec
dec
mov
test
stc
jg
cmpsb
cmpsl
call
enter
mov
mov
mov
mov
mov
xor
jp
xchg
lret
jne
mov
mov
pop
lahf
testl
add
es
inc
xlat
inc
arpl
dec
out
or
insl
mov
in
orl
hlt
jge
cltd
cmp
mov
ja
adc
jmp
ljmp
test
push
sbb
push
ja
push
cmp
scas
movsb
mov
xchg
lods
psllq
jae
in
int3
inc
call
jmp
xor
mov
outsb
or
sub
or
rolb
push
hlt
adc
mov
pushf
daa
mov
cli
mov
push
outsb
stos
xchg
je
lods
movsl
mov
repnz
lahf
mov
rorl
cli
pushf
and
lods
aas
aas
data16
fwait
fs
arpl
rcll
int
xchg
adc
addr16
ds
in
push
neg
xchg
shl
lds
mov
mov
push
in
xor
xlat
mov
and
push
and
sub
mov
mov
ficoms
and
xor
push
cmpsl
outsb
ss
jnp
xor
in
pushf
push
or
aas
adc
jg
inc
popf
push
in
icebp
mov
js
fmull
and
xchg
inc
push
jbe
cmpsb
cmp
dec
dec
push
mov
cmp
adc
imul
xchg
lret
mov
out
arpl
sbb
sub
adc
test
mov
test
or
ret
loope
xor
cmpsb
inc
cli
inc
shr
cld
add
repnz
pop
mov
outsb
sub
mov
sub
sbb
popa
dec
add
push
sub
mov
xor
fs
cmp
add
mov
inc
sbb
stos
dec
arpl
jo
and
popf
clc
xchg
or
mov
ja
repnz
pop
mov
inc
push
jl
sbb
insb
pop
pushf
test
jnp
cwtl
dec
and
mov
sahf
mov
and
sti
jb
or
mov
add
xchg
xchg
sbb
lods
jo
mov
pop
cmp
pop
in
sbb
je
and
inc
popf
stc
inc
je
imul
cld
or
bound
es
dec
mov
orl
jns
mov
mov
lahf
mov
int3
vaddps
sarl
mov
add
push
or
lods
stos
and
les
clc
test
adc
les
shll
pop
imul
inc
cld
or
shrl
fistps
cmp
or
mov
fwait
stos
cwtl
xor
cmp
xchg
outsb
mov
in
cmp
mov
ljmp
jo
mov
lea
fnsave
xchg
jns
jns
xchg
pop
adc
dec
add
test
cli
fnstenv
cli
xchg
bound
pushf
pop
adc
pusha
push
mov
pushf
fwait
jo
xchg
fstl
scas
jb
sbb
xor
insl
inc
xor
adc
pop
fs
xchg
jno
mov
loop
outsb
cld
cs
fwait
xchg
jno
std
jnp
sbb
ret
jbe
sub
movsl
icebp
cmp
fcoms
and
pop
data16
mov
mov
jbe
test
sub
mov
inc
in
sbb
insb
stos
adc
sub
sbbl
push
in
cmpsb
subb
mov
cmpsl
sbb
jle
pop
mov
lahf
gs
rolb
and
divb
add
scas
inc
pop
mov
jge
fcomps
bnd
sbb
inc
dec
mov
hlt
jbe
or
or
pop
rcr
dec
cmp
lea
mov
jbe
movlps
jl
xor
or
cmpsl
push
jno
sbb
inc
push
into
movsl
or
iret
pop
ds
hlt
test
leave
mov
pop
inc
pop
je
or
mov
mov
mov
pop
cmp
mov
pop
dec
sub
mov
loope
icebp
xchg
je
jnp
pusha
push
js
xchg
adc
jns
stos
pushf
and
data16
fs
sahf
pop
sbb
ret
xchg
xor
data16
sbb
pushf
addr16
ret
lret
and
push
shll
jae
bound
dec
popa
jecxz
xor
rolb
sub
jo
sub
and
pop
lods
outsl
shl
jbe
stos
adc
pop
sbb
sub
in
push
inc
xchg
inc
stos
inc
lret
lret
enter
jne
inc
mov
dec
loop
or
cmp
jnp
ss
pop
fsubrs
data16
lret
xchg
sub
mov
pop
push
subb
or
mov
faddl
loop
cmpsl
cmc
add
das
sbb
xchg
addr16
fistpl
orl
push
mov
addr16
js
daa
adc
fsubrl
xchg
aam
ret
jae
push
push
mov
mov
addr16
stc
loopne
xor
in
sub
cmp
pop
pop
das
ja
and
rcrb
mov
lods
addr16
or
xchg
pushf
into
cltd
push
int3
fs
sar
shlb
jb
sub
gs
mov
mov
hlt
lea
and
lods
cmpsb
mov
mov
and
shlb
insb
nop
pop
outsb
xchg
pusha
fisttpl
pop
xchg
mov
mov
inc
sahf
test
inc
mov
mov
sub
xchg
xchg
add
jmp
push
sbb
dec
call
inc
inc
fidivs
mov
scas
pop
lcall
dec
mov
cs
sub
loope
ret
jecxz
mov
dec
sarb
aas
out
mov
bound
mov
pop
add
add
sub
lds
xchg
mov
pop
jp
popf
sbb
nop
jge
add
inc
pusha
jne
xor
jae
inc
pop
adc
and
xor
dec
pop
test
lret
in
dec
add
jg
ret
dec
dec
xor
inc
pop
inc
pop
aam
mov
std
adc
aas
cmc
push
xchg
out
bnd
push
cmp
ljmp
pushf
cmc
sub
and
fmuls
movq
push
fmull
dec
mov
push
dec
dec
adc
push
mov
ds
fidivs
xor
and
imul
adc
inc
lahf
dec
sbb
and
mov
mov
push
ficomps
push
jo
inc
lea
testl
cmp
hlt
mov
loop
jge
and
cld
push
hlt
pusha
xchg
ss
cwtl
fisubrl
cmp
shll
in
pop
imul
sbb
popf
xor
adc
ja
sbb
xor
subl
or
add
sub
stos
call
push
add
orl
test
enter
flds
jno
hlt
mov
ret
jnp
pop
xchg
mov
jno
cmp
pusha
jg
jne
movsb
pop
lret
fnstsw
lret
andl
mov
fs
inc
fnstenv
xchg
mov
scas
pop
push
fnstenv
aam
stc
and
push
or
jb
std
sbbl
fsubs
pop
pop
xor
subl
stc
and
sbb
xchg
fs
push
cmp
mov
add
push
aas
in
xchg
sub
lods
popf
sub
loopne
mov
cmc
jno
ljmp
inc
mov
add
jmp
jae
fwait
ret
les
loop
stos
aaa
mov
push
add
insl
add
test
jnp
xor
add
mov
repnz
push
xchg
add
sub
xor
pop
hlt
sbb
add
sbb
ss
and
nop
daa
scas
sub
xor
jne
sub
mov
enter
jno
and
push
sahf
mov
iret
sti
cmp
push
clc
sbb
add
sub
mov
pop
in
push
xchg
jl
aam
fdiv
mov
cmpsl
fcomps
fisttps
lret
rol
lret
in
aam
sbb
sub
cmp
mov
stos
pushf
rolb
mov
sbb
cmp
fwait
addr16
push
push
sub
cli
ss
mov
lods
das
xchg
movsb
pop
sti
imul
xor
adc
jns
call
xchg
ror
movsb
cmp
aas
add
mov
in
lock
ljmp
sbb
xchg
pop
push
popa
in
jp
sub
mov
mov
pop
pop
adc
mov
les
orb
mov
cld
mov
call
and
pop
inc
xlat
add
sti
dec
inc
cld
ds
lods
ljmp
xchg
outsl
outsl
xchg
fs
xor
dec
mov
fildll
rcrl
push
pusha
orl
push
jmp
out
jo
xor
dec
dec
xor
xor
mov
adc
lods
lret
mov
mov
out
push
adcl
xor
loopne
cmpsl
mov
jl
cmp
mov
sbb
sub
repnz
add
test
out
andl
es
outsb
inc
dec
cwtl
sbb
and
add
imul
arpl
rcrl
popf
movsb
cmp
pop
add
test
aas
dec
dec
xlat
or
stc
jge
and
arpl
xchg
sbb
lret
stos
jmp
or
lods
ficoms
nop
sbb
sarl
call
mov
mov
test
ret
jae
insb
testb
push
sbb
xor
not
or
icebp
mov
xor
shlb
std
fadd
jns
cmp
je,pt
call
pmaxub
iret
aas
jp
cmpl
jl
push
jno
xchg
stos
xor
loop
xor
dec
or
pop
lods
pop
lahf
sbb
add
out
xchg
or
sti
mov
test
adc
cmpsl
imul
nop
call
fxch
insl
push
inc
and
movsl
xchg
jl
lret
sub
mov
xchg
sub
das
xchg
adc
out
mov
outsb
add
rcrl
lahf
mov
inc
es
loop
pushf
add
and
mov
jae
dec
or
jno
jbe
in
dec
lods
inc
cmp
imul
jge
fbld
dec
dec
leave
push
dec
add
mov
pop
adc
mov
lahf
sti
stos
andl
xchg
ljmp
imul
cmp
mov
cmp
icebp
aad
pushf
outsb
pop
lret
nop
pop
addr16
sub
shl
bound
je
inc
fsubl
xchg
lods
xor
sarb
lret
lcall
bndstx
inc
xchg
adc
inc
push
inc
out
pop
jge
ret
sub
lcall
dec
cmpsl
jle,pt
jp
push
pop
sarb
mov
mov
mov
loope
nop
sbb
das
adc
mov
or
jae
add
mov
push
fnstsw
daa
ret
add
fmuls
sbb
lods
fbld
clc
bound
into
jmp
or
nop
mov
leave
jmp
sbb
xor
adc
cmpsl
cmp
cmp
call
jg
mov
arpl
adc
out
dec
sub
mov
dec
mov
mov
xchg
pop
sahf
cltd
js
in
mov
mov
cmpsl
daa
shlb
mov
mov
sbb
fbld
push
add
sti
leave
push
adcl
pusha
je
pop
cmp
sub
test
push
pop
adc
insb
adcl
jp
mov
insb
add
lret
hlt
pushf
andb
bound
sub
repz
pop
and
add
les
mov
imul
outsl
cs
mov
popf
cmc
or
stos
dec
and
sbb
xor
fisubrl
adc
out
inc
push
jo
jg
shlb
mov
out
vpmaxsw
or
dec
inc
int3
lret
jns
sbb
and
push
popa
add
mov
pop
fisttpl
in
out
xlat
mov
add
adc
push
stc
pop
xchg
in
pop
xor
adcb
push
insl
jb
and
test
cmp
pop
shlb
push
scas
sbb
sbb
lods
inc
jbe
mov
dec
xchg
inc
xchg
pop
xor
dec
addr16
sbb
mov
sbbb
jns
test
sub
inc
mov
dec
mov
cmpsl
xchg
push
jmp
dec
add
or
pop
sub
sbbb
repnz
aad
popf
pop
jg
push
xor
outsb
mov
scas
imul
mov
mov
stos
mov
aad
into
cmp
loop
mov
xchg
fnstcw
sti
popf
sub
dec
cmp
jge
sub
jne
add
pop
jb
shl
jmp
sarb
mov
ficompl
stos
fstp
nop
pop
test
mov
aam
pusha
xchg
pop
xchg
icebp
arpl
sahf
imul
mov
pop
call
in
hlt
and
push
divb
cli
insl
cmp
cld
pop
fcoml
push
mov
mov
rclb
xor
popl
pushf
add
loope
or
lock
dec
sbb
fisubrl
ret
jnp
iret
in
add
inc
test
in
dec
lods
and
sti
scas
inc
push
stc
out
sbb
mov
xor
lea
push
jnp
inc
pop
or
in
daa
loop
dec
cltd
pop
dec
adc
jnp
sbb
xchg
addb
cmp
mov
pop
cmp
jae
adc
jg
jmp
sahf
icebp
and
insb
add
dec
dec
ud1
outsl
mov
jne
push
enter
or
sti
fwait
push
ret
xor
mov
bound
shlb
jle
jo
push
dec
scas
cmp
sbb
inc
decb
dec
loopne
jo
jl
out
imul
inc
jne
insl
xchg
test
jbe
cld
or
mov
jo
imul
or
stos
fcomps
and
mov
inc
push
int
arpl
std
pop
xor
add
repnz
js
fsubrs
int
mov
sbb
inc
cmp
jnp
dec
icebp
into
adc
fcmove
shlb
and
popa
jl
sub
mov
push
ss
aas
push
inc
insl
or
cmp
xor
popl
int3
hlt
jp
js
inc
pop
push
ss
push
push
jge
aas
addr16
push
mov
mov
xor
xor
mov
push
xchg
sub
out
loopne
pop
push
dec
and
mov
call
push
inc
cld
add
movsl
fsubrl
sarl
es
cmp
dec
and
ds
dec
pop
out
add
cmp
fwait
pop
out
sahf
ds
cmp
pop
fsubl
mov
test
inc
dec
cmp
cmp
push
pop
aam
aas
and
jo
cmp
insl
fidivrs
idivb
mov
mov
fcmove
jle
pop
mov
icebp
movsl
inc
mov
loope
adc
sar
xor
lds
mov
stc
dec
and
repnz
mov
inc
ljmp
jg
cmp
sbb
fstpt
dec
pop
sbb
dec
int
xchg
sub
push
rorb
lea
xchg
push
in
mov
mov
repz
push
push
insl
stc
mov
xchg
mov
std
sbb
rcr
xchg
mov
repz
jge
mov
es
iret
adc
or
pushf
mov
push
dec
shlb
popa
cmp
inc
pop
pusha
cmpl
fwait
rclb
int3
pop
and
punpcklbw
sub
ljmp
or
rcll
mov
pop
sahf
or
xor
fwait
jne
pop
popa
les
adc
ss
sub
and
cli
or
cld
repz
xchg
dec
adc
xchg
sbb
jle
mov
dec
test
jae
fsubrp
xchg
xchg
push
push
sbb
mov
pop
out
or
dec
movsl
fists
adc
add
ror
mov
insl
mov
push
ret
in
fisubl
pop
fs
popa
clc
testb
into
pop
sar
adc
rcl
repz
inc
add
cmpsl
inc
cmp
andl
push
fwait
xchg
and
xor
insb
cli
notb
test
shl
mov
jns
sbb
pop
cmp
out
fstpl
push
mov
mov
adc
add
pop
sti
or
adc
pusha
stos
fdivs
jns
mov
sbb
ret
jbe
loop
jle
arpl
adc
mov
in
sbb
into
cmp
sahf
popa
or
adc
lret
cmp
mov
inc
mov
dec
push
xor
mov
dec
divl
icebp
repnz
cltd
leave
or
call
or
xchg
jmp
arpl
inc
push
sbb
adc
sbb
mov
cmp
jge
or
fbstp
ret
sbb
lods
mov
push
jo
dec
xor
mov
push
jge
cmc
dec
addr16
sbb
xor
add
cmc
or
sbb
jp
fisttps
div
cmp
jl
push
out
fsts
ds
mov
mov
pop
and
in
inc
jp
mov
leave
sbb
scas
aas
sti
add
pop
dec
lock
push
xchg
rclb
data16
movsb
push
jmp
cmp
cmp
in
fidivl
mov
cltd
std
xor
idivl
js
fs
insl
stc
je
inc
jmp
add
test
aaa
loopne
xlat
outsb
and
pop
jno
add
or
outsl
scas
and
repz
jo
test
mov
shll
movsl
icebp
sbb
lods
pop
jg
xchg
mov
rorl
rcll
cmp
fsubrp
xchg
add
out
fdivrs
iret
or
fdivrl
mov
in
push
ficomps
shll
ret
xchg
mov
mov
inc
test
popa
fsubrl
loop
mov
dec
out
ss
cmpsl
xor
inc
fcompl
stos
test
jg
andl
mov
pop
inc
cmp
imul
mov
std
and
fnstcw
sti
data16
xlat
pop
pop
adc
js
jge
cmp
outsb
and
popa
ret
es
mov
pop
push
adc
jl
cmpsl
incb
mov
lea
xchg
or
inc
repz
gs
mov
paddb
or
ja
lds
dec
dec
mov
sbb
cmp
in
sahf
pop
pop
shrb
inc
or
ret
outsl
jmp
js
nop
xchg
bound
loop
xor
aaa
cmpsl
dec
in
fimull
mov
rorb
xchg
add
mov
out
test
add
mov
stc
jns
movsb
leave
lahf
ss
inc
aaa
stos
ss
dec
push
mov
into
repz
sbb
and
clc
xchg
es
cmp
mov
xor
shll
xor
adcb
sub
push
sub
jl
rcrl
mov
repnz
pop
sahf
cmp
mov
mov
mov
or
push
inc
push
cmpsb
cmp
mov
xchg
push
jp
pop
jo
movsl
fs
add
cli
cmp
test
test
jbe
inc
mov
jne
xor
into
mov
xor
pop
or
lods
nop
sbb
les
cmc
jno
hlt
push
into
inc
pop
shlb
add
mov
in
test
test
aaa
daa
inc
out
jle
test
and
jno
aaa
lret
push
iret
and
lea
in
imul
insl
mov
mov
ficomps
mov
aas
dec
mov
and
lcall
dec
sbb
push
imul
xchg
popa
js
aad
dec
pop
sbb
adc
adc
dec
rorb
mov
push
xor
dec
mov
cwtl
popa
add
out
or
sub
or
mov
jecxz
mov
adcl
inc
jp
sarb
mov
imul
out
cmp
adc
mov
loop
adc
inc
push
iret
into
pop
cmp
mov
ficoms
in
sub
or
mov
shlb
xchg
add
test
mov
jp
mov
adc
std
shrl
lahf
pop
fsubr
leave
imul
je
repnz
orl
mov
lea
pop
fidivl
dec
cs
jle
push
fsubrs
pop
add
imul
fsubrs
leave
loope
imul
mov
das
mov
xchg
into
icebp
mov
xorl
aaa
push
cmpsl
adcl
xor
sar
ficompl
lret
mov
dec
icebp
leave
movsb
mov
ljmp
pop
ds
lods
sbbl
test
data16
dec
cmp
outsb
loope
xlat
mov
addr16
sbb
sub
stc
and
das
daa
lcall
popf
mov
xchg
notb
dec
popf
clc
shr
mov
or
push
mov
sbb
inc
cmp
cmc
pop
outsb
out
cmp
loop
inc
cmp
mov
xlat
mov
sahf
or
cmp
pop
xchg
shlb
ret
sbb
dec
arpl
cmp
inc
divl
fadds
rorb
sbb
lods
movsb
bnd
xchg
outsb
daa
push
mov
sbbl
call
mov
pop
lds
sbb
outsb
cwtl
sub
stc
scas
jbe
xor
je
dec
mov
xchg
xchg
gs
inc
xchg
mov
faddp
aam
lret
je
dec
mov
fcoml
mov
pop
cmpsl
data16
out
jne
test
or
ja
xor
fsub
test
stc
jno
xchg
mov
adc
push
leave
adc
ficomps
and
mov
int
inc
enter
ss
sub
out
pop
xor
cmp
jecxz
dec
lcall
adc
fs
negl
xchg
cltd
jno
out
jmp
ja
mov
and
mov
add
jp
push
mov
cwtl
xchg
mov
sbb
adc
push
je
hlt
push
inc
in
nop
and
fldt
ret
and
outsb
movsl
or
adc
mov
into
adc
shll
lods
ss
cmp
loopne
xchg
mov
mov
clc
loopne
mov
mov
xchg
popf
push
cmp
mov
cwtl
outsb
jno
out
mov
lahf
jmp
neg
mov
sahf
xchg
pop
into
ret
jnp
fstpt
nop
cld
rorb
dec
imull
aam
out
jns
insb
jle
cmpsl
xchg
mov
test
xchg
and
bound
sub
popf
push
aam
pop
sbb
rol
pop
cs
shl
incl
sahf
sub
and
jb
xchg
and
xchg
loope
jne
push
jge
mov
mov
scas
jmp
adc
mov
shlb
pop
adcb
inc
fcoml
call
mov
ss
out
xlat
mov
int
lea
test
bound
ljmp
or
lcall
es
sub
shlb
push
sub
mov
out
adc
mov
pushf
repnz
pop
push
out
sbb
mov
xchg
push
mov
cltd
sbb
pop
jne
jge
cs
fs
roll
hlt
jb
loope
xor
xchg
lahf
push
add
popa
push
jl
add
xlat
xchg
pop
add
int3
ret
data16
xchg
repnz
mov
lods
fsubs
mov
ds
stos
inc
enter
mov
pushf
sub
pushf
test
xlat
mov
or
shl
les
inc
sub
mov
hlt
ret
in
xchg
dec
call
in
mov
cli
cmp
or
popf
push
in
adc
inc
pop
out
popa
push
call
std
js
mov
cltd
or
sub
mov
fsubrp
shlb
aam
xchg
adc
lea
push
jo
and
jle
adc
es
mov
xor
adc
dec
fnstenv
pop
fdivl
lds
mov
and
or
mov
cmpsl
popa
sti
mov
insl
jnp
in
xor
pop
mov
inc
and
sahf
outsl
mov
or
dec
loopne
js
in
adc
bound
ret
shll
ja
rcrl
mov
aaa
sbbb
popa
pusha
push
popf
jne
fnstenv
pop
std
movsb
add
cwtl
dec
cmpsl
in
jae
jmp
jnp
mov
test
pop
out
cmp
leave
pop
jo
pop
daa
es
iret
and
adc
lea
fdivs
jle
in
dec
xchg
jno
xor
xchg
movsl
or
pop
xchg
mov
sbb
mov
or
dec
sub
xchg
cmp
jo
push
push
add
decb
rsm
xchg
inc
mov
jb
push
lock
fidivs
js
sti
inc
sub
pop
and
sub
jg
push
cmp
push
add
in
xchg
das
addr16
adc
push
mov
or
cmp
mov
xchg
add
out
sub
test
pop
aas
push
adcl
test
adcl
bound
shlb
sub
add
jge
mov
dec
push
mov
xlat
ds
mov
loope
addr16
out
xchg
test
add
jne
ds
cmp
inc
pushf
icebp
and
leave
notb
addl
out
ljmp
cmp
outsl
movsl
xchg
mov
push
xchg
dec
mov
sahf
push
mov
mov
xchg
in
adc
mov
setbe
movsb
inc
rcr
cli
push
cmc
dec
cmp
cli
mov
sub
inc
cld
adc
lret
decb
ds
fbld
push
rclb
mov
pushf
call
arpl
setg
inc
fistl
clc
movsb
sub
ret
enter
mov
and
jnp,pt
jae
adc
popa
dec
jne
out
addr16
jo
dec
push
or
daa
push
gs
mov
inc
cwtl
push
cmp
cmp
and
adc
scas
push
lods
mov
xchg
ljmp
dec
xor
out
mov
sub
hlt
xor
fwait
imul
ret
jmp
push
cmp
mov
push
into
mov
inc
or
lret
adc
int
ljmp
movb
xchg
lods
popa
std
push
adc
data16
pop
inc
addr16
shlb
test
popl
xchg
insb
pop
or
adc
inc
or
pusha
scas
sarl
xchg
iret
cs
std
and
int
cmpsl
ja
lret
pop
lods
cltd
sbb
das
push
test
aas
xchg
enter
movsb
fdivl
pop
inc
outsb
jle
sub
ja
daa
mov
or
jle
outsl
mov
repnz
lods
adc
xor
fistps
xor
inc
or
xor
scas
out
js
call
pop
subl
sbb
repnz
fwait
shrl
dec
cmp
scas
cmp
cmp
int
xor
dec
les
arpl
push
addr16
pop
xchg
push
popa
adc
xor
into
pop
or
scas
pop
push
jmp
daa
push
sbb
ss
pop
xchg
shl
mov
sub
adc
cmc
data16
pushf
arpl
sbb
mov
or
and
lret
inc
push
orb
jg
jo
addr16
pop
xor
adc
dec
je
cli
mov
add
push
pop
insb
stos
add
popa
and
pop
mov
pop
mov
vmovsldup
mov
push
negb
lret
jns
jl
push
xchg
and
lahf
jno
rcll
insb
jle
ljmp
push
outsb
in
sub
jp
mov
mov
mov
mov
dec
xchg
mulb
rorl
fwait
push
dec
and
adc
shl
jb
out
mov
mov
xchg
outsb
jbe
jl
lahf
adc
mov
sub
je
push
je
xlat
insb
jb
inc
mov
fmul
arpl
sub
cmp
insb
adc
ret
shll
outsl
loop
and
aam
fisttpll
shl
jle
in
orl
in
jb
push
mov
lods
cmpl
or
cmp
jno
movsl
pop
pop
shlb
xchg
or
icebp
mov
sub
cmp
jmp
and
aaa
pop
filds
sahf
sbb
and
shrl
push
ljmp
mov
cmp
ja
xchg
cmp
adc
fs
gs
lret
inc
xor
pop
scas
mov
xor
push
aad
sbb
mov
dec
aad
jns
mov
cld
test
push
outsb
cld
mov
mov
in
dec
cmp
loopne
pop
push
icebp
mov
dec
mov
jmp
and
jb
xchg
mov
pop
dec
movsl
cmp
pop
mov
ret
hlt
lret
sbb
jbe
and
jle
xchg
lods
pop
sahf
xor
ja
fcoml
rorl
lret
rorb
mov
and
push
add
and
fucomi
or
push
inc
pop
adc
dec
mov
loope
sub
jbe
cmp
push
out
enter
adc
mov
and
cmc
mov
fucomp
cmp
and
js
popa
gs
jne
adc
sub
iret
and
decb
aas
in
ret
loope
add
jbe
sbb
mov
and
std
pop
push
or
pop
clc
subb
imul
ret
mov
cmpsb
or
xchg
adc
or
mov
push
popa
lods
mov
push
push
lea
push
je
jne
cmpsb
sbb
and
jo
jecxz
mov
not
arpl
in
ja
sub
shl
decb
mov
stos
jge
xor
add
xor
xchg
movsb
ds
out
pop
movsb
mov
roll
and
inc
out
add
in
ljmp
or
fiadds
jns
je
divl
xchg
loopne
dec
xor
xchg
jb
fs
insl
xchg
pop
xor
nop
sahf
lods
cld
stos
testb
lock
cs
faddp
std
fcmovnbe
sbb
and
mov
pushf
pop
mov
nop
mov
arpl
cmp
clc
daa
sub
cwtl
or
or
lods
lds
int3
insb
sub
js
loope
outsb
mov
xchg
xorl
lods
rcl
in
arpl
daa
mov
aam
xor
in
inc
jle
sub
cmp
mov
or
and
fcomi
adc
fwait
hlt
dec
pop
outsl
orl
sbbl
and
mov
cmpsl
ds
fdivs
std
adc
dec
cmpsl
pop
or
insb
rorl
sahf
aas
cmc
mov
jecxz
dec
sti
xchg
inc
sbb
into
insb
jecxz
or
add
outsb
sbb
sbb
hlt
pop
int
in
or
push
mov
mov
adc
test
dec
faddl
fmulp
mov
lahf
idivl
lret
mov
add
mov
jb
xlat
add
cld
sbb
jecxz
cmp
cmp
les
cwtl
dec
jecxz
sahf
mov
inc
je
fdivs
push
scas
decb
in
and
ret
arpl
test
outsl
out
sahf
and
clc
push
mov
push
mov
test
mov
std
dec
loop
xlat
sbb
dec
clc
or
cmp
sbb
cmp
push
imul
jne
xchg
cmpsl
push
or
pusha
clc
lds
inc
orb
pop
pusha
jp
test
xchg
psadbw
mov
stos
mov
f2xm1
pop
xor
sahf
outsl
std
xchg
and
pop
mov
popa
mov
sub
mov
sbb
cmp
mov
pop
ss
and
clc
sbb
or
insb
xchg
leave
insl
aad
aam
adc
data16
cmp
orl
les
and
xchg
movsb
gs
pushf
sti
jbe
enter
pop
out
add
hlt
lea
or
pop
jae
popf
push
fstpl
inc
adc
jp
cmp
mov
and
hlt
insl
iret
mov
and
push
xor
in
addb
adc
inc
cmp
xor
mov
outsb
cmp
pop
mov
scas
jae
pop
mov
in
cmp
adc
mov
lret
loop
dec
cwtl
imul
push
insl
cli
push
mov
decl
jmp
negb
push
popl
pop
and
out
mov
lret
mov
cltd
jecxz
mov
cmp
cmp
sbb
into
sbb
lahf
xor
cmp
mov
pop
loop
dec
push
mov
mov
negl
push
add
xor
mov
sbb
lahf
mov
mov
aam
in
adc
add
fimuls
sub
cmp
jle
out
dec
mov
cltd
icebp
loop
pop
rclb
and
inc
imul
push
call
and
xchg
popa
inc
ret
fadds
dec
sbb
out
mov
mull
movsb
pusha
popf
hlt
xchg
xchg
cmp
dec
jg
fwait
lods
cmp
loopne
or
xchg
push
mov
add
rclb
incb
pop
sbb
inc
dec
arpl
mov
fiaddl
loopne
divb
mov
movl
pusha
scas
cmp
ja
cmp
fcoml
push
xor
pushw
pop
inc
lret
in
sbb
pop
icebp
icebp
push
loop,pt
add
mov
lds
ret
and
pop
ficoms
or
stos
gs
aam
enter
mov
lods
mov
mov
jp
cmpl
jns
daa
cmp
in
mov
outsl
jl
scas
out
mov
mov
out
insl
mov
xchg
push
jmp
mov
cmc
js
cmp
or
ret
mov
jecxz
mov
pop
inc
pop
pop
imulb
pop
push
jge
xchg
jbe
fistpl
cmp
sub
cli
xlat
test
push
movsb
xlat
outsb
rol
push
pop
mov
int3
jl
das
repnz
sbb
insl
sub
pop
cmp
pop
jno
stos
arpl
mov
lock
push
lods
xchg
lods
imul
mov
cli
test
cmp
in
add
data16
in
hlt
lea
shufps
or
fisttpll
hlt
pop
sahf
sub
push
jmp
es
jo
inc
into
adc
dec
scas
add
xchg
ret
hlt
mov
movsl
mov
inc
fucomi
jb
cmp
mov
repz
into
add
mov
cli
sub
dec
leave
popa
push
push
daa
mov
arpl
mov
popf
ds
rorb
or
mov
mov
ret
fisttpl
and
jno
mov
pop
aaa
sti
stos
pmaxsw
outsl
movsl
push
jae
clc
fdivs
popa
pop
out
sbb
push
push
repnz
arpl
pop
push
sahf
stc
push
add
aad
daa
lea
inc
lret
in
mov
dec
dec
cmp
push
cmpsb
jmp
lds
lcall
jg
fucomi
adc
sub
fsubl
sub
push
cmp
xor
pop
daa
dec
out
fcom
ret
repnz
mov
cmp
adc
rcrb
inc
push
out
jno
repnz
adc
jmp
xchg
adc
cmp
cmp
inc
mov
cmp
arpl
sub
push
or
testl
call
mov
jl
fwait
cmp
jmp
imul
mov
pop
loop
mov
xor
ret
or
fdivs
xor
and
mov
and
rclb
xchg
add
and
orl
out
int3
or
gs
jg
incb
mov
loopne
push
int3
fimuls
fdivr
test
fstps
sahf
mov
mov
mov
pop
mov
cmpsb
lock
insb
sub
sbb
jle
jmp
adc
into
dec
mov
or
xchg
adc
pop
out
enter
dec
or
jns
fstps
mov
jb
mov
stc
push
pop
mov
xlat
bound
stos
jae
stos
inc
pop
daa
mov
lods
cmp
mov
roll
mov
inc
daa
sahf
test
adc
loope
and
push
xchg
mov
ss
adc
sub
jp
insb
dec
icebp
pop
imul
mov
adc
mov
xchg
div
movsb
unpckhps
lods
add
and
cli
out
out
es
xchg
inc
lds
xchg
dec
fucomip
lds
xor
orl
je
cltd
rolb
mov
inc
js
stc
rcr
jmp
pop
fsubr
jp
mov
js
sub
jo
es
lret
pop
dec
push
inc
dec
mov
cmpb
adc
dec
leave
jecxz
cmpsb
ret
jne
inc
lods
xor
push
or
insb
xchg
sub
push
subl
mov
and
push
sub
andl
xor
mov
or
and
or
aad
sub
sbb
adc
mov
shl
pop
mov
mov
adc
cmpb
repz
fnstsw
xchg
mov
jno
rcrb
loopne
or
mov
enter
loopne
fbstp
sub
lahf
fsubrp
les
dec
dec
add
jmp
pop
pop
inc
push
scas
pushf
mov
push
mov
lret
lret
pcmpgtd
mov
sub
ds
insb
jg
loop
ljmp
insl
sub
sub
push
jne
je
jnp
pusha
jno
stos
xchg
inc
mov
adc
mov
pushf
cmpsl
add
xchg
sub
xlat
mov
lcall
cli
sti
xchg
insl
cmp
xor
lods
fcmovnb
fldcw
or
or
adc
dec
xor
jp
mov
add
loope
push
adc
jp
mov
cltd
fld
push
ds
pop
outsl
pop
insb
mov
ret
mov
in
icebp
dec
cmpsb
out
xchg
jg
lea
addr16
jmp
mov
rcrb
pop
cs
cld
stos
inc
mov
lock
negl
add
lods
icebp
xchg
and
sub
xor
cli
sbb
fidivl
xor
loop
sarl
rcll
test
fcmovnu
insb
push
int3
ljmp
jae
sbb
pop
fnsave
dec
mov
pop
cmpsl
jbe
enter
or
mov
cmpsl
fnstcw
push
out
mov
sbb
lcall
in
or
lods
ljmp
adc
mov
sub
jmp
inc
adc
mov
jnp
popf
push
pop
sbb
adcb
push
pop
mov
pop
stc
popf
fs
loopne
push
or
sub
pop
cmp
aad
lock
mov
cmp
out
or
cmp
subb
stc
faddp
adc
push
inc
mov
in
inc
lds
movsl
cmpsb
xchg
cmp
mov
xchg
loopne
test
mov
jb
mov
stos
cmc
inc
shll
jge
movsl
xor
addl
or
or
fucomi
test
push
xchg
cmc
mov
push
mov
outsl
mull
pop
fsubrs
xchg
xchg
daa
jl
pop
mov
ficomps
fidivrs
mov
dec
pop
lahf
jns
call
fwait
jnp
mov
fists
repnz
push
cmp
jnp
mov
push
dec
rclb
adc
xchg
inc
mov
call
out
mov
and
mov
sbb
movsb
scas
ds
ds
and
sbb
jp
push
jo
xorb
sub
jle
fnstsw
cwtl
sub
xor
arpl
int
and
dec
add
sbb
aaa
loope
inc
scas
cltd
push
mov
pushf
xchg
xchg
mov
xor
int3
cwtl
orb
imul
andb
lret
xor
push
ljmp
sub
or
hlt
in
jno
sbb
or
fldt
jae
out
mov
cmpb
jmp
out
ficoms
sub
int
and
shrb
jo
arpl
aaa
ljmp
into
xor
in
inc
scas
inc
pop
cmp
into
and
adc
cmpsb
and
out
cmpsl
push
pop
push
mov
cmpsb
mov
pop
ds
lea
bound
xor
sbb
js
cld
negl
in
imul
int
push
popf
xchg
or
mov
sub
xorl
jl
ljmp
pop
mov
mov
mov
push
adc
dec
sub
sahf
cwtl
xorl
xlat
mov
je
xchg
rorl
add
mov
out
shll
push
or
stos
fldenv
mov
or
push
mov
mov
popf
in
stos
lcall
jo
lds
jne
fwait
push
lea
mov
les
dec
lods
push
xchg
sbb
xchg
jne
mov
mov
jl
dec
loopne
xchg
out
mov
xor
cmp
cmpb
sbb
sub
inc
push
cs
scas
fcomi
in
or
jg
add
popa
fildl
mov
inc
repz
jne
or
adc
test
jae
xor
xchg
inc
in
add
out
lahf
add
jbe
subl
and
jno
aaa
ss
push
lock
sti
sub
mov
mov
xor
je
cmp
in
jns
fdivs
push
xor
cmc
dec
leave
cmpsl
leave
int
out
fsubs
and
mov
leave
cmp
and
push
test
lret
imul
adc
cltd
mov
testl
dec
mov
je
inc
int3
xchg
ss
shl
dec
leave
idiv
test
cmp
scas
inc
dec
fisubrl
or
mov
mov
ds
lds
aaa
call
mov
xchg
sub
out
pop
cmp
sub
push
inc
fadds
sbb
dec
fsts
cmp
scas
xor
pop
out
pushf
setnp
lret
ljmp
shll
xor
jbe
lret
in
pop
pop
jg
inc
xor
popa
and
sbbl
push
and
ljmp
adc
stc
adc
ficomps
or
mov
cmc
movsb
xchg
xchg
dec
adc
lahf
bound
lea
xor
cwtl
test
sbb
sbb
ret
out
xchg
sub
and
mov
mov
movsl
pop
add
das
loopne
add
clc
mov
and
fidivrl
push
xor
push
and
push
hlt
push
test
ja
inc
lret
lock
orl
daa
repnz
push
test
stc
mov
xor
fisubs
jl
enter
inc
xlat
mov
lock
clc
in
in
inc
push
push
shr
pop
dec
adc
xchg
mov
pop
xor
lods
sbb
and
enter
jo
rcrb
mov
jle
rcl
jl
aad
adc
or
daa
decb
pop
sbb
ficompl
aad
int3
jnp
jp
or
cmp
mov
adc
jmp
and
mov
xor
inc
ljmp
pop
xor
inc
arpl
inc
cld
cmpsb
xor
out
cmp
jecxz
gs
push
test
push
add
push
das
jle
cltd
xor
mov
mov
je
into
sub
xchg
jmp
das
jno
popa
xchg
jb
lds
stos
mov
andl
les
cmc
sbb
ss
sub
and
and
ds
arpl
push
mov
xchg
cli
xlat
sbb
dec
pop
dec
cwtl
sub
pop
cltd
jge
or
sub
scas
mov
mov
in
andb
xchg
xlat
cwtl
lcall
push
inc
ret
sub
jge
inc
mov
in
clc
stc
ljmp
pop
shr
or
push
je
sub
test
cmp
pop
jb
mov
pop
outsl
mov
jg
and
adc
or
and
test
sbb
out
pop
repnz
jae
push
mov
add
repnz
add
mov
in
mov
in
imul
cs
sbb
and
lds
xchg
push
lods
jecxz
fidivrs
fnsave
or
jge
sti
stos
loope
fidivs
or
xchg
jno
and
or
fiaddl
pop
out
add
xchg
loop
mov
sti
xor
cltd
mov
mov
pusha
repz
mov
mov
xor
inc
repz
fs
push
push
mov
xchg
jbe
shrl
mov
insb
frstpm(287
movsb
or
repz
pop
clc
test
xchg
outsb
xchg
dec
jae
mov
adc
dec
pop
test
mov
mov
push
pslld
pop
sbb
hlt
inc
jp
ds
xchg
dec
aad
movsb
pop
cmp
bound
jmp
addb
and
push
imul
xor
lods
dec
jae
jp
dec
popa
dec
jg
mov
pusha
and
icebp
subb
adc
out
data16
cltd
lock
rorl
add
add
lds
es
adc
xchg
xchg
andl
pop
sbb
sarb
scas
out
fcmove
jg
mov
sub
xchg
test
xor
sub
xchg
test
dec
lea
aad
sti
or
outsb
dec
rcrb
pushf
imul
cmp
in
inc
in
adc
push
sahf
mov
out
dec
popf
inc
pop
stc
adc
cltd
cltd
nop
out
lock
movsl
cmp
inc
in
insb
shlb
adc
insb
mov
decl
ret
cld
insl
loopne
sbbb
jb
stos
xchg
xor
or
mov
xlat
data16
ficomps
in
mov
push
mov
cmc
inc
dec
add
xlat
and
rcl
pop
and
dec
xor
fisubl
xchg
xor
cmp
pop
adc
jnp
jbe
cwtl
push
daa
iret
inc
rorl
test
add
mov
pop
mov
lahf
data16
fisubrs
push
gs
outsl
fdivrl
mov
loope
loope
lods
js
mov
enter
jge
repz
xor
mov
stos
pop
mov
mov
lret
inc
push
adc
test
pushl
mov
xchg
xor
aad
clc
out
pop
fbstp
rcr
int3
push
push
incb
mov
sbb
sahf
out
cmp
aas
rcrl
push
jns
jecxz
sub
add
xor
xor
push
jge
mov
inc
adc
pushf
cltd
sarb
mov
bound
sub
inc
pop
inc
int3
ja
jge
addr16
mov
test
add
cli
jle
or
shll
movsb
cmpl
lods
call
aad
loopne
and
sub
and
outsb
inc
sbbl
icebp
inc
inc
hlt
mov
aaa
into
and
into
xchg
out
mov
push
mov
cmpsl
jg
pop
arpl
pop
bound
scas
xor
dec
shll
repz
inc
in
out
mov
pop
fdivrl
test
ja
and
inc
cld
aad
ds
fldl
xchg
or
mov
cmp
lea
rcl
cld
out
xchg
jecxz
out
push
dec
pop
mov
pop
mov
loope
loope
repz
into
mov
pop
cs
xor
out
movsb
adc
mov
cli
es
xlat
xchg
push
jecxz
push
call
or
jecxz
and
add
fisubrs
sub
iret
jnp
mov
test
lock
lcall
and
add
adc
lock
ja
fcomps
cmc
xchg
dec
outsb
xor
mov
mov
cmp
jg
cmp
cmp
dec
mov
pop
mov
push
lds
std
test
rclb
andl
adc
lcall
xchg
jno
hlt
jge
out
insb
pop
outsb
add
jmp
jae
ss
outsl
or
or
dec
nop
lds
shrl
cmpsl
vhsubps
mov
cwtl
repnz
aas
mov
test
dec
loopne
or
addr16
xchg
out
xchg
mov
push
sbb
xchg
outsb
imul
cmp
pop
xor
test
sti
push
je
test
push
cli
sbb
aam
push
xchg
add
insl
mov
leave
cmp
scas
daa
mov
push
imul
iret
clc
jmp
mov
fwait
pop
sahf
or
add
ds
ffree
pop
iret
loope
ja
test
add
pop
cmp
xchg
std
dec
or
mov
mov
xlat
mov
stc
call
xor
or
fcoml
sub
sub
popa
lock
jle
shr
or
adc
xchg
aaa
jge
test
das
xor
mov
repz
addl
out
dec
xchg
test
adc
imul
fdivl
mov
cmp
mov
dec
push
push
cwtl
fwait
cli
jns
orl
sub
test
mov
das
pusha
sbb
sbb
aam
add
inc
inc
cld
pop
or
data16
arpl
lea
test
xor
dec
mov
cmp
dec
ror
stos
mov
sub
lock
ret
cmpsl
sarb
add
mov
push
xchg
pushf
and
cmc
test
es
and
movsl
out
mov
sbb
add
sub
jle
pushf
inc
cltd
and
outsb
or
push
pop
or
out
pop
sbb
das
out
mov
lcall
mov
adcl
push
mov
and
sahf
jne
lcall
adc
aas
cs
repz
mov
fs
push
mov
adcl
inc
push
jnp
test
xor
lea
scas
adc
insl
test
orl
cmpsb
pop
shrb
push
sub
xor
sub
dec
dec
das
testb
rcrl
pop
sub
or
rcr
aad
ret
pop
xor
mov
push
int3
push
scas
fnsave
adc
adc
orps
push
fbld
push
cmp
cld
push
add
imul
xchg
rcrb
or
orl
rorb
fwait
jp
or
xchg
jo
loop
cmp
leave
cmp
push
mov
fistps
ds
sbb
mov
shll
bound
pushf
sarl
mov
adc
push
xor
stos
mov
cmc
ja
pop
shrb
ficompl
loope
imul
mov
loope
xchg
lds
enter
cltd
mov
sub
xchg
pop
jmp
cmp
insl
in
mov
in
mov
mov
stc
mov
dec
dec
ret
rolb
pop
cmp
loop
mov
and
mov
mov
adc
outsb
add
movsw
or
lods
inc
xchg
push
jno
in
bnd
std
mov
out
mov
int3
jmp
adc
subb
add
bound
or
cmp
adc
jns
xchg
push
or
dec
and
outsl
xchg
mov
aas
and
xchg
scas
or
aad
jnp
pop
out
jmp
or
mov
ret
xchg
jge
hlt
pop
push
or
dec
sti
push
pop
outsb
test
jbe
mov
subl
es
repz
dec
test
fiaddl
inc
sbb
xchg
or
xor
xchg
or
push
sub
out
sub
dec
imul
push
stc
push
mov
xchg
jmp
shl
orl
xchg
sub
test
dec
les
fidivrs
es
mov
jmp
push
nop
icebp
inc
or
xor
testb
popa
mov
add
in
xchg
ja
push
rcll
in
fsubrl
dec
aad
dec
out
jge
stos
pusha
ss
or
icebp
fisubl
fbld
dec
mov
mov
ljmp
jl
shrb
stos
and
lock
mov
add
cmp
pusha
and
pop
jmp
popf
pop
outsl
daa
mov
flds
sarl
lea
mov
dec
rclb
inc
xchg
inc
aaa
mov
cli
pop
sti
lds
mov
mov
cwtl
arpl
push
mov
mov
or
jne
fldenv
cmp
xor
addl
inc
nop
fwait
pop
ret
mov
push
xor
mov
popf
in
notl
subl
mov
negl
popa
push
out
gs
jae
inc
data16
sbb
in
jecxz
test
arpl
inc
mov
aad
addb
std
pop
popa
adc
loop
or
pop
iret
xchg
xchg
ds
push
dec
cmp
mov
shlb
scas
mov
fnstsw
js
fistpll
adc
enter
movsb
jle
ret
popa
cmp
imul
dec
sub
lea
sub
dec
mov
jns
xchg
lock
mov
and
xchg
xor
cmpl
mov
enter
pop
pushf
and
jne
into
mov
and
jae
dec
lea
pop
or
jnp
mov
test
fmull
popa
fsubrp
xchg
jg
loop
mov
repnz
sbb
xor
push
or
jnp
repnz
sub
push
subb
outsl
sahf
sub
jecxz
jge
cwtl
push
mov
pushf
bound
dec
adc
sahf
mov
in
movsl
add
push
xchg
jb
iret
lods
movsl
inc
and
dec
rcr
das
cmp
jnp
mov
shll
sbb
rol
popa
mov
dec
dec
pop
mov
mov
xor
stc
sbb
mov
ret
aad
ljmp
repz
mov
add
cmpb
xor
int3
pushf
dec
push
lcall
adc
orb
xchg
push
pop
add
jg
push
out
adc
xchg
pop
dec
adc
loopne
cmp
pop
repnz
mov
pusha
cmp
shll
jo
stos
jle
mov
negb
mov
dec
aaa
stos
in
stc
push
xor
and
lds
lcall
test
jnp
inc
subl
dec
std
sub
outsl
sahf
insl
lret
hlt
push
fsubr
adcl
push
xor
sub
xchg
js
ja
movsb
pop
movsl
fstl
loope
popf
repz
sti
outsl
bound
or
lock
and
test
clc
adc
les
and
push
cmp
cmp
mov
dec
in
xor
cmp
adc
ljmp
mov
data16
mov
lods
and
lret
test
out
sbb
arpl
pop
mov
sti
outsb
sbb
fstpl
mov
cmpb
sbb
add
push
push
jne
daa
shlb
fcmovne
icebp
aam
aas
push
mov
adc
jnp
filds
cwtl
das
aam
int
out
mov
addr16
es
and
fucomp
adc
test
jmp
lret
stos
jne
gs
ss
xlat
add
in
xchg
stos
inc
jl
les
test
popa
add
sbb
call
arpl
push
push
jne
jge
cmc
xchg
add
enter
cmp
mov
fs
pop
cmp
fidivs
in
ret
out
test
xor
sbb
push
pop
and
iret
xchg
jge
pop
aaa
fs
iret
call
jne
and
dec
adc
cld
pop
inc
pusha
mov
add
inc
into
xchg
sbb
dec
idivb
ret
sub
and
or
pmovmskb
xor
jnp
pop
pop
sub
push
pop
mov
jae
jle
iret
pop
daa
ljmp
xchg
adc
push
fwait
xor
inc
bound
sbb
xor
sub
and
sub
and
js
add
xor
xor
dec
mov
cltd
mov
cli
arpl
subl
inc
call
pop
subb
push
les
rcll
cmpsb
es
sub
dec
jb
aaa
xchg
ds
or
xor
mov
and
inc
pusha
inc
mov
imul
mov
adc
ss
sbb
dec
fldenv
fisubrs
add
testb
jge
mov
movsb
cmp
push
mov
xchg
fiadds
mov
lret
mov
in
sub
inc
mov
incb
int
or
iret
xchg
mov
cmpsb
jnp
push
and
pop
in
xchg
icebp
les
mov
cld
and
jno
sub
xlat
cmp
mov
test
cmpsl
push
sub
add
sub
jmp
lods
jmp
lcall
je
add
xlat
add
or
es
xchg
es
adc
mov
and
fistl
cmp
jae
cld
xchg
in
push
inc
mov
dec
test
add
es
inc
pop
call
and
xor
dec
xchg
fnsave
push
outsb
push
ret
rclb
lock
pop
ss
pop
push
xchg
or
mov
out
test
or
add
mov
lahf
imul
xchg
mov
jge
in
pop
adc
vmovupd
movsl
push
incb
pop
rolb
dec
loope
jl
outsl
in
popf
pop
mov
or
mov
cli
insl
jl
pop
dec
mov
cli
mov
fbld
cld
dec
push
jb
cwtl
inc
dec
mov
jno
and
xchg
inc
cmc
push
dec
pop
mov
push
popf
lcall
add
test
mov
push
fst
test
pop
fstp
adc
fildl
dec
imul
jnp
xchg
mov
sub
dec
sbb
jmp
xor
adc
mov
mov
mov
pop
jmp
xlat
loopne
mov
xcrypt-ecb
cmpsl
dec
pop
mov
inc
xchg
movsb
repz
std
push
stos
push
fdivs
cmc
pop
or
sbb
add
jo
into
adcb
mov
in
mov
sbb
nop
data16
jb
xchg
std
lret
das
loopne
loope
sub
shll
icebp
aad
xchg
out
mov
les
push
add
xor
cmp
stc
xchg
push
sar
mov
testl
jb
mov
adc
jmp
push
mov
insb
movsb
cmp
jae
test
cmp
loope
ret
mov
outsb
adc
popf
xor
cwtl
ds
ljmp
in
mov
and
jae
test
into
push
cli
roll
lock
push
lods
and
mov
xchg
inc
rorl
loope
and
xchg
push
push
lret
jbe
sub
lods
xchg
sub
jae
mov
push
jbe
stc
nop
push
adcb
sbb
xor
sbb
outsl
push
push
shll
std
xchg
xor
mov
xchg
push
test
mov
inc
jg
out
scas
mov
fmull
fiadds
mov
int
xchg
popf
mov
sbb
aaa
mov
int
cwtl
pop
jb
mov
cmpsb
cmp
hlt
shl
cmp
icebp
insl
jnp
inc
scas
addr16
hlt
orl
lods
ss
jo
into
insl
scas
inc
lret
data16
xor
push
dec
out
pop
sub
sub
jbe
jg
test
xor
add
xchg
adc
push
int
xchg
jmp
add
iret
sarb
adc
and
addr16
jl
xor
outsl
in
pusha
pop
inc
add
add
add
callw
or
ljmp
sub
sbbl
es
test
xchg
add
xchg
mov
sbb
jge
scas
lods
sbb
mov
rclb
push
jmp
adc
mov
out
xchg
push
es
mov
mov
test
mov
lods
movsb
cltd
push
mov
push
stc
addl
xchg
orl
shl
std
imul
icebp
in
cwtl
fcmovb
shrl
lds
dec
mov
add
xchg
cs
imul
sub
pop
clc
mov
sub
mov
add
mov
fwait
and
sbb
sbb
pushf
push
add
push
stos
pop
imul
in
jns
popa
jg
aas
loop
dec
cli
xchg
push
dec
in
adc
xchg
inc
push
sbb
jle
inc
bnd
lahf
and
inc
movsl
fidivs
push
inc
dec
pop
mull
or
fldln2
repnz
out
jg
xchg
cmc
sub
movsl
jne
or
sub
adc
adc
or
pushf
inc
jp
lock
add
int3
test
enter
xor
add
mov
gs
rcll
ds
out
jo
dec
inc
jge
aas
push
loop
fsubrs
out
xchg
sahf
xchg
mov
dec
or
push
pushf
add
xor
inc
in
adc
jmp
mov
xor
or
scas
push
outsl
sub
scas
mov
arpl
xchg
jae
sbb
adc
idivl
adc
jecxz
negb
out
movsb
aas
mov
mul
xor
dec
jmp
and
xchg
cmp
push
bnd
in
sub
xchg
cmp
subb
mov
cmp
imul
sbb
pop
sub
push
clc
push
popf
and
iret
dec
mov
cltd
xor
push
enter
test
pop
mov
fists
loopne
std
repz
jmp
int
fs
je
in
in
mov
sbbl
fdiv
data16
sub
insl
out
add
or
cmp
fiaddl
xchg
sub
imul
push
cmp
sub
fisubrl
bound
sbb
sub
fwait
inc
dec
pop
and
and
xchg
gs
cli
mov
and
ret
jne
movsb
mov
or
mov
call
divb
pop
push
and
lods
stc
xor
aas
xchg
pop
adc
in
aaa
cmpsl
xchg
mov
cmp
add
jle
and
xor
lds
js
jg
push
das
int3
loopne
pop
dec
pop
xor
or
pop
inc
data16
mov
in
imul
adc
inc
lea
add
aaa
ret
idiv
call
pop
ret
movsl
cmp
ret
xor
cwtl
out
pop
dec
pusha
int3
mov
xor
sub
jbe
rol
lds
iret
mov
inc
cltd
jo
inc
into
sub
cmp
ss
scas
fnstsw
lods
mov
clc
and
mov
sbb
gs
xchg
xchg
push
mov
fistl
jg
cmp
add
xor
mov
mov
insl
in
xor
leave
mov
mov
in
push
out
popa
mov
mov
stos
loope
sub
sub
xchg
xchg
xor
lahf
sub
lock
stc
mov
push
in
testl
sub
jmp
mov
xor
xor
mov
add
sbb
push
fmull
mov
sbbl
fwait
test
dec
mov
jb
and
ret
mov
fldt
adc
cmp
dec
mov
mov
psubd
stos
or
test
mov
mov
gs
mov
and
jb
fnstcw
mov
in
cmc
xor
mov
ror
pop
adc
mov
jle
adc
imul
in
repz
lods
das
or
lret
or
mov
aad
push
jp
mov
mov
cwtl
xchg
cmp
ret
fiadds
jb
outsb
rclb
mov
cmpsw
and
sub
lds
xor
or
cmp
mov
cmpsb
daa
xchg
jne
or
mov
or
and
stos
data16
jo
jecxz
cmp
inc
push
xor
xchg
mov
inc
mov
je
or
leave
pop
dec
mov
aad
or
aas
repnz
stos
jl
add
inc
outsl
lcall
cmp
ljmp
sub
sbb
fldt
clc
mov
cs
idivb
mov
jns
mov
mov
pop
xor
mov
dec
ret
andl
jl
dec
mov
dec
popa
frndint
les
jnp
jmp
loop
stc
dec
jb
hlt
adc
lods
int
pop
repnz
imul
jo
jp
cld
push
pop
icebp
insb
bound
sub
jp
rcr
and
mov
xchg
jnp
inc
mov
add
cmp
and
fldl
or
fs
pop
jmp
push
ja
add
dec
xchg
subb
icebp
in
fsub
out
test
sbb
or
test
clc
and
push
pusha
fidivrs
movsl
xchg
sbb
mov
inc
mov
pop
shrl
jbe
gs
stos
sbbl
movsb
ficompl
inc
xchg
pop
mov
push
stos
movsl
push
sbb
cmpsl
xlat
daa
pop
add
and
mov
inc
add
into
into
push
rolb
adc
test
stc
stos
gs
xor
mov
inc
mov
clc
rorl
jl
out
ja
jmp
rcrl
inc
dec
pop
jl
mov
lea
imul
out
aam
leave
xchg
mov
bound
push
leave
and
mov
fbstp
or
xchg
pop
xor
subl
pop
dec
or
jp
idivl
dec
inc
fdivrs
xchg
repz
dec
xchg
pop
xor
mov
pop
scas
enter
int
sub
bound
xchg
push
andl
xchg
movsb
cmp
xor
int
andl
jle
lcall
fiadds
es
adc
xchg
sbb
sbb
cmpsb
push
jb
jp
xchg
pusha
jmp
xchg
cmc
dec
clc
adc
je
in
mov
rorl
sub
shll
sbbb
mov
jnp
xchg
pusha
repnz
sarb
ror
int3
add
notl
mov
stc
mov
fists
pop
pop
adc
clc
outsl
mov
cmovg
mov
xchg
xor
xor
xor
stos
loop
mov
xor
pop
stos
mov
fsubrp
mov
out
jl
dec
sub
cli
inc
sahf
cmp
popf
insb
lds
dec
in
dec
cmp
xor
jecxz
movsl
inc
mov
in
ds
lret
xlat
pop
inc
sbb
push
pop
movsl
lret
and
xlat
cmp
mov
inc
out
jge
xchg
scas
into
jle
test
std
dec
mov
adc
and
cld
outsl
lahf
into
lahf
push
aam
rorb
push
dec
xor
mov
insb
add
lods
xchg
cmc
mov
ffreep
sub
mov
dec
xor
jmp
push
xchg
jno
push
imul
cmp
jmp
pop
mov
cltd
out
inc
mov
repz
xchg
cmpsb
xchg
imul
push
gs
and
mov
pop
cmc
adc
jecxz
fsubrs
cmpsb
call
cs
inc
add
mov
mov
push
pusha
enter
or
mov
jle
or
jns
incb
or
fcmovnbe
stos
or
and
imul
add
orl
iret
jle
mov
mov
sub
mov
aas
and
aas
mov
insl
mov
mov
xchg
loop
cmp
xchg
mov
les
outsl
cmp
notb
cld
lods
add
fstp
mov
lss
cmp
mov
cmpsb
xor
mov
or
lock
pushf
or
stc
aaa
dec
sub
pop
insb
aaa
dec
dec
pop
hlt
pop
mov
gs
xchg
or
es
jno
inc
fsub
xchg
lret
mov
repz
ret
mov
lds
outsl
iret
cltd
subl
jb
inc
dec
push
sbb
addr16
scas
pop
pushf
loopne
into
inc
rcll
movsl
and
mov
add
es
pop
repnz
xor
mov
clc
nop
ror
push
push
and
andl
int
and
sbb
ss
or
shrl
jmp
rol
push
insl
clc
inc
adc
in
lock
data16
gs
cmp
roll
rcrb
pop
cmp
mov
xchg
aas
xor
push
inc
dec
out
lods
add
lahf
mov
aam
testl
pop
lods
popa
mov
scas
inc
inc
fildll
or
pusha
ret
inc
bound
pop
sahf
int3
pop
int
push
push
sbb
xchg
and
bound
and
cmpsl
push
movsl
mov
xchg
xor
aad
ret
cmp
adc
xchg
xor
aaa
sub
out
sbbb
pusha
jle
adc
inc
or
popa
adc
jmp
mov
push
mov
mov
lret
jne
jmp
and
scas
gs
sbb
dec
mov
aas
aaa
rorl
cltd
les
push
decl
xor
and
xchg
inc
dec
dec
out
mov
int3
sub
push
mov
push
cld
or
mov
les
pop
jo
loop
mov
pop
inc
mov
stos
dec
inc
pushf
sub
mov
divb
les
in
inc
mov
jecxz
or
fdivrl
xchg
adc
jb
hlt
add
shl
xchg
dec
xchg
ja
or
dec
mov
mov
push
or
adc
push
adc
orb
mov
jo
cld
jmp
rep
pop
inc
sub
inc
cmpsb
loope
pusha
dec
in
and
push
jo
jnp
andb
sbbl
in
daa
out
sti
mov
repz
ret
idivl
mov
aad
insb
inc
cmp
xor
hlt
add
leave
orb
aam
repnz
mov
jno
or
cld
pop
push
lea
mov
xorb
imul
push
mov
rorl
popf
mov
fcompl
or
and
hlt
insb
inc
pop
sbb
and
mov
lods
mov
lds
xor
insb
les
cmpsl
push
insb
pop
das
loop
popa
jg
pop
lea
js
inc
scas
in
jo
xchg
ret
clc
das
pop
and
ror
outsl
push
push
jecxz
rcrl
dec
dec
xchg
cmp
push
and
pop
imul
cmp
addl
test
pop
repz
pusha
ss
add
fwait
or
add
rorb
and
push
mov
aaa
add
sbbl
dec
adc
xchg
mov
int3
hlt
pop
lcall
lods
cmpsl
mov
xlat
or
jge
add
mov
add
add
lret
xorb
mov
push
std
shll
inc
cmp
cmpsl
cmpsl
pop
int3
jg
dec
daa
mov
push
pop
mov
hlt
stos
shll
adc
dec
and
and
xchg
pop
or
mov
or
cmp
mov
xchg
outsb
add
jne
xchg
outsl
stos
iret
loop
mov
dec
pop
cmp
cwtl
and
cmp
scas
jae
jnp
sub
xchg
pop
stos
add
mov
loope
or
sub
fwait
adc
inc
sti
sbb
iret
gs
mov
mov
in
add
js
and
lcall
insb
andb
jne
loope
aam
cmp
insb
or
and
mov
mov
sbb
jecxz
xchg
sahf
and
aas
loop
adc
jae
add
adc
cmpb
jbe
arpl
jmp
rolb
or
gs
pushf
jb
jp
mov
das
ret
or
add
mov
sbb
lods
dec
jge
mov
cmp
pop
pop
push
into
loope
fcompl
loope
int
mov
jecxz
mov
mov
sbb
lods
inc
leave
xchg
inc
jnp
ss
mov
popf
xor
mov
dec
out
pop
lock
je
test
cltd
jmp
add
and
pop
pushf
xor
add
mov
clc
mov
fisubrl
push
mov
dec
add
rcl
adc
fsubrs
out
fldcw
lret
cmp
inc
pop
adc
ret
push
xlat
mov
fucom
incl
hlt
std
out
jne
nop
add
inc
sbb
mov
sub
or
mov
mov
mov
or
xlat
sub
fxch
sub
dec
mov
popf
mov
mov
pop
or
xchg
idiv
js
xor
aas
pushl
pop
inc
fsubs
fcmovnb
or
inc
pop
mov
es
sbb
cmc
jmp
sbb
sbb
jns
xor
inc
jmp
ficoml
scas
ds
adc
getsec
cs
insb
popa
gs
xchg
out
mov
or
pusha
and
jbe
cltd
imul
in
push
xor
in
or
fidivrs
shrb
pop
out
inc
fnstcw
call
int3
cltd
xor
stos
mov
jge
adc
repz
sub
cmpsb
inc
mov
mov
dec
pop
test
dec
pop
ret
lods
mov
mov
dec
mov
mov
push
mov
scas
add
pop
mov
std
imul
xor
push
or
jbe
frstor
int
xchg
xchg
pop
sbb
add
mov
push
das
mov
aaa
jmp
sbb
fsubs
test
imul
aaa
add
test
lds
mov
jbe
mov
fiaddl
mov
sbb
pop
sahf
jecxz
dec
ja
dec
test
scas
dec
pop
mov
mov
movsb
jne
aas
into
aad
das
pop
lock
cmp
data16
in
lret
lods
inc
std
data16
cmp
enter
mov
mov
mov
cmp
push
es
inc
adc
repnz
aam
sbb
aaa
inc
and
icebp
ljmp
push
shlb
enter
pop
out
out
popf
xor
arpl
cmp
inc
sti
sub
popa
std
and
loop
pop
aad
mov
fnstenv
pop
movsw
mov
and
outsb
fidivl
popa
or
es
dec
xor
or
je
jnp
xor
inc
lahf
push
scas
inc
xor
cmp
sbb
dec
push
lods
fisubs
push
insb
pop
cmpsb
insl
insb
or
mov
mov
imul
fsubrl
lock
cmpb
popf
scas
push
loopne
movsb
dec
pop
cli
int
mov
insb
stos
jae
popa
mov
inc
mov
inc
nop
or
testb
mov
cli
cwtl
lret
add
ret
imul
lcall
lcall
inc
mov
in
pop
mov
inc
add
daa
xchg
imul
mov
cmpsb
mov
repz
add
xor
mov
mov
lods
aam
pop
mov
xchg
cs
mov
bound
ds
hlt
call
push
adc
or
mov
mov
sbb
xlat
and
push
mov
aas
push
daa
or
mov
in
push
pop
mov
ljmp
fidivrl
fnstcw
mov
fdivl
and
adc
jns
je
mov
pop
stc
leave
adc
fnsave
mov
adc
dec
mov
and
imul
xor
call
add
scas
xchg
inc
arpl
xchg
cmpsl
cmpsl
addl
sub
add
cli
rdmsr
jns
call
mov
lret
insb
mov
mov
and
jp
inc
lods
push
inc
out
lock
addr16
adc
mov
xlat
call
inc
jnp
stc
xlat
xor
sbb
adc
ss
imul
cmp
call
enter
pop
popa
push
xor
sbb
add
pushf
popa
icebp
and
and
in
ds
insb
scas
es
mov
aaa
jb
xchg
jae
push
stos
int3
sbb
cmpsb
lods
pop
jg
repnz
xlat
dec
lods
cs
bnd
or
cmp
lahf
lods
mov
scas
mov
inc
or
repnz
mov
call
lcall
and
xor
mov
stos
cmp
sbb
movsl
and
inc
lret
mov
jmp
mov
mov
sahf
and
and
push
xchg
test
sub
repnz
lods
jne
cmp
dec
mov
sbb
jecxz
aad
adc
xchg
xchg
mov
insl
lock
push
fdivs
sarl
ja
sti
test
cltd
inc
aaa
fistpl
mov
data16
dec
fcoms
out
cli
clc
pop
aaa
xor
sahf
test
pop
pop
pop
mov
movsl
xor
or
icebp
adc
fldt
into
inc
in
std
cltd
inc
fisttpl
call
mov
sbb
pusha
and
push
test
cs
and
jb
xor
dec
outsb
sbb
test
mov
cli
and
adc
xchg
and
cmpl
push
popf
in
gs
out
jle
sbb
loop
jne
roll
outsl
push
dec
in
sbb
sub
fbstp
in
pop
add
rorb
lcall
test
popa
pop
loop
clc
dec
sbb
aas
dec
sbb
dec
je
callw
sahf
inc
or
cmc
cmp
sbb
movsl
dec
xlat
mov
das
mov
fidivl
scas
dec
pusha
rclb
popl
daa
cmp
aad
addl
test
cmp
je
or
xchg
pop
push
mov
dec
sahf
pop
cwtl
aaa
out
mov
add
pop
cmpsl
mov
stos
and
lret
cld
rcr
outsl
adc
mov
and
or
sahf
clc
lods
mov
jle
outsb
push
outsb
mov
ja
mov
add
cs
dec
add
shll
push
inc
sbb
push
pop
jnp
xchg
push
jo
jmp
and
inc
or
mov
mov
mov
mov
xchg
cmp
jne
fidivrl
pop
int
mov
or
jle
sub
outsl
dec
fidivs
and
jecxz
jle
pop
adc
lods
jno
push
and
mov
and
in
jg
jle
ja
jno
stos
adc
sbb
lret
mov
jecxz
cwtl
sti
cmpsb
mov
ficompl
mov
call
in
push
mov
mov
rcr
ja
nop
mov
push
shlb
mov
push
jns
gs
inc
jnp
outsl
inc
xchg
lahf
sbb
cmp
pop
aad
ror
in
mov
xor
mov
mov
sub
nop
xchg
hlt
dec
lea
cmp
inc
data16
pop
lock
pop
mov
and
imul
jl
hlt
jg,pt
cmpsl
popl
out
rcrl
xor
and
test
jmp
je
xchg
sub
sbb
insl
stc
pop
cmp
mov
sti
push
xor
loopne
adc
push
incl
adcb
psraw
aad
ffreep
out
lods
aam
push
sub
xchg
mov
jecxz
mov
mov
arpl
pop
test
inc
insb
imul
jo
sub
fldenv
sbb
jo
jo
cmp
or
jae
pop
inc
adc
hlt
pusha
clc
aad
repz
popf
idivb
shlb
ljmp
mov
push
jne
faddl
pop
mov
lock
xor
push
inc
cmp
iret
and
cld
mov
cs
mov
push
leave
push
or
das
mov
lods
scas
dec
xor
jg
cmp
xor
xchg
push
inc
and
and
mov
xchg
pop
mov
cmp
pop
adc
aam
fwait
xchg
xchg
inc
sub
xor
aaa
into
sub
lds
mov
cli
pop
ss
lret
mov
adc
in
mov
pushf
dec
out
xchg
sub
imul
movq
test
sahf
inc
add
xchg
xchg
aaa
ret
dec
pop
mov
cmp
xor
data16
dec
adc
dec
push
sbb
adc
test
lods
subl
cmp
mov
jle
or
mov
xor
ljmp
insb
outsl
es
xor
push
sbb
cmp
aaa
jb
ds
mov
and
cmc
loop
xchg
xchg
pusha
loopne
in
sbb
add
mov
test
and
insl
sahf
xchg
or
lcall
push
int3
movsb
popf
xchg
fbstp
push
jbe
inc
jg
popf
or
sbb
jle
sub
out
test
mov
or
jge
imul
cmp
cltd
sbb
loope
outsb
imul
test
dec
arpl
in
movsb
fdivrs
cwtl
stos
and
je
arpl
pop
adc
lea
jbe
fstl
pushf
aad
je
cmp
outsb
pop
mov
sub
out
ret
sti
fwait
je
add
xlat
and
pop
push
clc
adc
icebp
add
outsb
loopne
mov
push
push
add
fdivs
je
push
mov
rcll
stc
out
test
popa
fs
movsl
mov
pusha
jno
and
stos
or
adc
xor
lock
cmc
mov
xchg
scas
cmpsl
insb
xchg
nop
addr16
loopne
xor
mov
lods
inc
cmp
rorl
push
nop
stos
rcll
add
adc
icebp
test
pop
xor
lea
movsb
nop
mov
sub
loopne
adc
imul
inc
pop
add
mov
dec
adc
pop
loop
mov
pop
cmpsb
stos
daa
or
insl
xchg
shl
iret
cmpsb
xor
dec
sub
mov
jg
adc
sbb
cld
mov
jp
aam
inc
and
int
xchg
sbb
mov
push
fiadds
mov
jns
lds
xor
mov
mov
popf
sub
into
lret
bound
cmp
push
sub
sub
or
inc
pop
daa
cmpb
dec
pop
imul
lds
pop
outsl
xor
sub
cld
and
notb
lods
pop
or
jl
es
lret
mov
jmp
pop
inc
stos
xchg
cmpsl
aad
in
xor
dec
stos
cli
xchg
enterw
jo
jbe
test
jmp
stc
add
pop
sbb
lods
jmp
cli
cli
in
sbb
sbb
ds
enter
dec
add
inc
lods
cmpsl
enter
into
gs
xchg
lods
xchg
in
pop
cld
mov
add
gs
aaa
fidivrl
out
add
adc
push
jne
lods
dec
push
mov
je
mov
pop
xchg
mov
stos
in
stc
add
hlt
jmp
dec
add
out
loopne
std
mov
mov
mov
sbb
test
les
mov
xchg
scas
sub
scas
call
hlt
xlat
repnz
add
mov
ficoms
aas
jnp
fisttpl
popa
pop
adc
leave
push
dec
xor
push
test
std
sbb
mov
adc
xchg
and
dec
or
test
xchg
or
ljmp
inc
or
movsb
idiv
jno
jl
les
cltd
insl
lret
and
icebp
mov
das
adc
dec
or
push
and
shl
jmp
xor
mov
cltd
and
and
mov
scas
cmp
aad
stos
pop
xor
jbe
mov
mov
gs
stc
and
dec
mov
or
sub
sbb
nop
cmpsb
fnstsw
insl
int
jmp
mov
sub
dec
dec
pop
sbbl
sbb
in
popa
sbb
xchg
daa
mov
aam
fld
in
cmc
pop
ds
scas
inc
xchg
stos
mov
push
xchg
pop
sub
cmp
rol
insb
xsavec
cmpsb
rorl
loop
out
push
cld
loop
outsb
cmp
es
in
fdivrp
push
push
push
jnp
jb
or
adc
jbe
jne
xor
movsl
adc
movsb
repnz
xor
xor
mov
jmp
sti
sbb
mov
insb
pcmpgtd
cmp
sbb
and
pop
clc
pop
in
cmpsb
sbb
loope
mov
or
push
icebp
fdiv
lcall
and
pop
leave
ljmp
test
and
movsb
pop
jp
je
push
mov
stc
or
mov
imul
xor
lods
jmp
push
xchg
scas
mov
shrb
jl
imulb
pop
imul
mov
aam
outsl
clc
call
jp
sbb
cmp
push
sbb
adc
xor
and
loope
inc
mov
ss
leave
jl
sbb
mov
pop
jmp
mov
imull
sub
sub
mov
sbb
and
cmp
mov
jle
push
sahf
sub
lods
and
xchg
mov
mov
cltd
aam
shrl
sbb
push
shrb
and
cmp
ss
xor
lcall
bound
xor
movsl
cmp
push
inc
mov
lea
imul
sbb
push
jmp
dec
xor
push
ja
lret
pop
fbstp
jae
mov
in
pop
arpl
adc
push
ds
sub
mov
dec
pusha
dec
out
lea
xor
jae
xorb
xchg
mov
sbb
adc
jge
test
divb
mov
push
stos
flds
lcall
pushf
dec
xchg
aas
lahf
add
xor
call
xchg
lahf
adc
outsl
addr16
xor
inc
shl
dec
aam
out
insb
adc
xchg
inc
add
sub
out
hlt
inc
fsubrl
xchg
push
sub
icebp
js
xor
cmp
and
popa
push
xchg
sbb
iret
mov
stos
jb
jbe
adc
push
test
out
inc
xchg
into
in
and
imul
pop
nop
in
jmp
or
idivb
scas
dec
pop
push
xchg
cwtl
mov
add
rcrl
and
pop
out
jns
and
jecxz
xor
mov
and
cmp
call
inc
adc
in
add
xlat
ss
enter
ljmp
push
and
loope
fsubr
jbe
fwait
stc
adc
movsb
mov
lcall
ljmp
inc
into
and
ljmp
jmp
mov
inc
std
daa
mov
push
mov
and
jp
mov
sar
adc
jno
xchg
inc
pop
jmp
sbb
out
or
ja
mov
sbbb
cld
mov
andl
cld
xchg
add
cmpb
insb
pop
dec
mov
lcall
sahf
xor
inc
pop
and
sbb
xor
and
jp
sub
je
or
nop
lret
es
mov
into
dec
out
test
and
push
xchg
shrb
lret
lock
mov
shlb
and
adc
jne
push
loop
loope
or
das
add
and
adc
clc
xchg
arpl
push
or
js
sbb
int
adc
sti
aas
push
push
add
pushf
sub
repz
add
outsl
addl
enter
xchg
adc
fsts
cmp
int
mov
lea
inc
adc
ds
mov
lds
leave
adc
mov
lea
mov
jo
scas
adcb
mov
mov
pop
mov
push
mov
jns
lods
pop
sahf
sub
mov
out
sub
pushf
incb
test
in
cltd
icebp
repz
xor
cs
sub
mov
out
cmp
jp
aaa
jb
imul
nop
in
mov
lcall
je
mov
test
jmp
test
inc
or
push
mov
das
adcb
mov
sub
das
or
insl
push
dec
push
sub
icebp
ficoms
xor
xor
xchg
loop
hlt
add
ds
xchg
sub
dec
adc
jg
popf
mov
xchg
xor
jle
add
minps
lods
cmp
sahf
jecxz
je
sti
and
dec
insl
jge
in
jns
inc
fnstsw
push
into
pop
sub
mov
pop
mov
addl
scas
adc
add
xor
pop
movsl
inc
jne
jns
outsl
jge
fcmovb
xchg
add
lret
xchg
cmp
aaa
add
and
xchg
sub
in
xor
out
inc
pop
fdivl
fimuls
push
ret
lods
fnstenv
inc
sub
pop
arpl
sbb
mov
push
fcmovnu
xchg
gs
xchg
fsubrl
jno
into
arpl
or
inc
mov
mov
gs
cmc
adc
jl
sbb
outsb
inc
pop
shlb
or
sti
cs
jecxz
xor
in
fidivrl
jno
fcoml
mov
add
xor
cmpsl
scas
jecxz
rol
jne
mul
push
mov
rorl
ror
js
xchg
adc
repz
jp
clc
jno
cld
shl
push
xor
dec
xchg
mov
push
mov
addb
pop
inc
cmpsl
ret
jb
imul
mov
adc
xchg
add
sbb
movsl
sbb
les
gs
out
push
mov
xor
mov
and
mov
insl
sub
cmp
enter
ficoms
xchg
cmp
pop
mov
sbb
or
xor
mov
lcall
adc
or
push
stos
adc
js
jno
and
mov
cmc
jno
adc
out
mov
mov
push
in
jmp
xor
cwtl
jno
xor
dec
inc
movsb
les
mov
addr16
loope
out
inc
sbb
sub
jbe
jecxz
rcl
push
int3
mov
push
mov
pop
daa
push
pop
jle
xor
mov
add
lds
push
dec
pop
cmp
push
add
lahf
stos
leave
cmp
push
push
ja
adcb
cmpsl
fistps
mov
mov
jge
bound
push
or
mov
mov
call
ret
push
call
lcall
push
jo
sub
lret
jmp
repz
cmp
fnstenv
sbb
aaa
dec
repnz
adc
jl
adc
cs
inc
sub
pop
jbe
or
shlb
mov
loopne
xor
mov
pushl
jge
inc
or
fldcw
dec
push
push
notb
dec
repnz
dec
loopne
pop
pop
inc
adc
incl
fnsave
xchg
and
cli
inc
jmp
in
pusha
jnp
sahf
xor
xchg
roll
add
mov
inc
jne
cli
movsl
cmp
mov
jnp
sbb
inc
rol
jmp
lea
mov
push
xor
subl
jp
leave
je
inc
arpl
xchg
add
xor
arpl
jnp
dec
pop
jne
sbbb
cld
xor
cmp
fs
cmp
or
pop
mov
fidivrl
imul
stc
and
aaa
xchg
imul
xor
fdivr
jecxz
nop
frstor
test
repz
cltd
mov
xchg
xor
dec
or
jns
push
shll
incl
xor
sbb
and
rorl
jns
mov
cli
lcall
adc
in
testl
dec
cmc
jp
mov
jns
jo
loope
xchg
and
ja
adc
sub
bound
lahf
lahf
mov
xchg
and
ljmp
inc
aad
or
adc
mov
inc
ror
pop
pop
loope
jecxz
outsb
mov
xchg
or
cmp
je
iret
leave
test
aas
jge
repz
mov
or
xchg
test
pop
loop
stc
adc
cmc
xor
mov
clc
jmp
popf
adc
adc
push
mov
add
std
xor
ret
cmc
inc
add
inc
or
xlat
cli
adcb
mov
mov
shlb
out
push
addb
cmpsl
cmp
out
mov
ret
rcr
aam
data16
add
mov
push
movsl
jns
pop
lret
jge
jmp
add
fisttpl
pop
test
push
std
jp
pop
stos
dec
lahf
xchg
push
mov
addb
jo
rolb
out
mov
movsl
xor
imul
hlt
sbbb
pop
pop
incl
jle
cmp
in
test
and
dec
xchg
cli
dec
int3
popl
and
les
xchg
cmc
bound
rcpps
repnz
pushf
jb,pt
into
in
aas
call
rorb
ret
rcrb
and
xchg
in
fistps
hlt
mov
push
pop
in
mov
cld
loope
outsb
jns
jp
clc
lods
adcb
or
sarl
adc
outsl
mov
push
mov
push
popa
shr
fwait
mov
das
inc
adc
std
inc
push
imul
shl
fistl
pop
addr16
push
jb
in
lahf
adc
xchg
xor
cwtl
push
dec
mov
dec
loope
cmp
decl
add
lret
and
dec
adc
call
cmp
sub
inc
sahf
scas
jae
mov
jl
mov
push
iret
in
jge
mov
push
xor
ss
lcall
in
stos
and
and
pop
cmpsb
sbb
test
mov
insb
sbbb
stc
cmp
and
lret
push
adcb
frstor
sub
push
xor
jb
jno
cmp
sbb
and
leave
insl
faddp
fwait
mov
sbb
mov
std
loop
pop
mov
cmp
pusha
or
in
notl
push
push
stos
inc
jp
decb
and
jmp
lods
int3
pop
sbb
ret
pop
add
xor
mov
test
in
mov
icebp
shrb
cltd
out
test
add
mov
or
test
mov
mov
dec
test
ret
jle
pushf
insl
into
lods
test
mov
mov
in
jns
shrb
scas
in
cmp
mov
loopne
ljmp
adc
dec
addl
cmp
dec
sahf
adcl
mov
pop
bound
data16
xchg
cmc
fsubrs
cwtl
sarl
xchg
sub
dec
mov
mov
inc
in
mov
sbb
loopne
xchg
negb
es
adc
in
jne
subb
jno
dec
cmpsl
mov
mov
xchg
div
push
arpl
ss
mov
push
in
stc
movsb
clc
sahf
and
je
jns
mov
fcompl
jne
mov
rcrb
mov
adc
push
lret
push
fwait
in
mov
jae
sbb
loop
mov
jmp
or
sbb
mov
xor
test
jle
movsb
leave
xchg
sub
inc
nop
dec
repz
mov
ret
adc
loop
loop
mov
pushf
pushf
lods
test
cmp
mov
test
jmp
aam
das
xorb
pushf
daa
sarl
rol
and
xchg
loope
push
mov
sub
xchg
jecxz,pn
dec
data16
add
dec
sbb
jo
dec
pop
add
xchg
mov
dec
pop
mov
insb
movsl
js
sbb
shl
jp
fimull
push
or
inc
orb
popf
adc
mov
cmpsb
lock
cmp
sub
pop
aas
adc
movb
pop
lcall
out
mov
dec
jbe
lahf
pop
ret
rolb
iret
out
popa
out
fs
and
es
pusha
pusha
stc
cs
add
and
pop
inc
xor
xchg
cmpl
cmp
mov
shl
or
dec
dec
insb
jle
pusha
insl
jge
shlb
sbb
mov
cmc
call
sbb
lret
into
push
in
dec
shll
stos
push
out
cltd
pop
xor
hlt
sbb
in
clc
mov
imul
cmp
pop
cmc
ss
std
loope
jl
xchg
out
sti
orl
mov
pushf
bound
fstpl
test
and
xor
mov
nop
sti
jmp
cmp
adc
mov
mov
mov
arpl
jns
cld
dec
jmp
repnz
orl
aam
sbb
imul
hlt
or
and
push
mov
lcall
pop
adc
ret
pop
aam
sbb
xchg
jg
xchg
mov
lahf
es
push
mov
mov
hlt
jno
stc
cwtl
cltd
cmovge
mov
push
push
test
divl
das
fs
sahf
mov
shrl
mov
cwtl
fisttpl
js
lods
pop
cmc
and
jl
xchg
cmpsl
imul
scas
cmp
filds
inc
and
push
out
jae
mov
pop
sbb
leave
lock
adc
mov
mov
xchg
jg
into
mov
mov
cli
xor
dec
inc
jno
pop
fwait
xchg
cmpsb
mov
mov
dec
add
arpl
xchg
or
dec
dec
xchg
xor
or
popa
int3
mov
pop
xlat
cltd
add
xor
pop
push
mov
push
push
test
stos
call
xorb
icebp
int
filds
fs
add
dec
push
outsl
and
ja
stc
mov
push
gs
fnstenv
enter
out
fistpll
sub
mov
leave
xchg
pop
imulb
fildl
jge
sti
mov
mov
inc
les
xor
repnz
inc
adc
stos
je
mov
test
daa
scas
inc
pop
sbb
push
rorl
ljmp
out
sbb
xor
popf
ret
scas
movsb
scas
push
jmp
int3
cld
outsl
mov
hlt
pop
fs
imul
ret
cmp
jl
jmp
sbbl
xor
mov
mov
fucomi
dec
xor
shrb
in
lcall
aam
test
push
inc
insb
jne
mov
cmp
int3
pop
inc
bound
lahf
jne
push
cmpsl
mov
repnz
adc
cmp
pop
mov
cltd
add
add
adc
sub
dec
xor
dec
movsb
cs
repnz
sbb
movsl
std
or
adc
mov
inc
fldt
cmp
jmp
mov
out
mov
adc
loop
cmpsl
in
mov
cld
aaa
add
aaa
push
push
and
iret
jecxz
sub
dec
xor
aam
xor
insb
mov
test
add
push
sub
dec
fs
test
jp
adc
xor
mov
lahf
push
out
inc
fsubl
or
jbe
xchg
and
nop
out
std
cmp
inc
jl
ja
rcll
xor
jne
add
stos
cmp
roll
out
pusha
inc
mov
cmp
loopne
mov
insl
push
inc
std
jae
loope
jge
je
push
xchg
lret
xchg
aaa
xchg
data16
pushf
out
mov
shl
rcr
adc
inc
pop
xchg
and
into
xchg
aaa
int3
jg
mov
mov
aad
mov
mov
pop
mov
pop
loop
scas
shll
adc
out
sbb
pop
outsb
leave
rorb
bound
js
sub
lcall
add
push
int3
or
mov
jns
mov
xchg
adc
push
dec
insb
rol
shll
sub
or
mov
jmp
push
out
cmc
loope
xlat
adc
aaa
cs
insl
repz
xor
push
dec
ja
or
pushf
push
gs
xchg
cmpsb
xchg
shl
shrb
mov
jl
adc
fsubp
fs
adc
jnp
inc
xor
pop
test
cmp
lahf
and
pop
jg
aad
jo
and
xor
aas
push
sbbb
mov
mov
int3
int
test
stc
imul
arpl
fs
or
loop
es
xor
inc
jl
pop
loopne
xor
lcall
and
dec
and
sbb
xchg
test
and
out
ret
push
int
cltd
test
sub
sbb
mov
pop
pop
sub
add
adc
jle
insb
xchg
mov
sbb
cmp
push
pushl
mov
cmp
xchg
mov
jecxz
fidivrs
sub
into
popa
xchg
adc
stos
inc
and
pop
jns
xor
cmpsl
sub
jecxz
inc
fadd
clc
adc
inc
clc
pusha
cmpb
xchg
cs
cs
pop
push
imul
mov
dec
cmpsb
imul
loopne
push
mov
movsl
and
loope
out
add
rcll
add
lock
jo
push
ljmp
cmp
call
xor
cltd
std
inc
in
or
cs
std
push
adc
dec
lds
and
mov
stos
mov
and
adc
jg
mov
push
and
push
les
cli
or
mov
cmpsl
sbb
mov
js
add
gs
imul
xor
sti
push
and
lret
sti
or
into
test
jecxz
inc
cmpsb
push
lods
hlt
cltd
add
les
lret
icebp
movsl
popa
push
push
ljmp
jno
ljmp
dec
es
mov
inc
lret
sub
cltd
pop
pop
loopne
add
jae
or
cmp
xchg
push
mov
cmp
movsb
jns
and
mov
cmp
je
jle
jl
in
jne
ret
pop
les
stc
clc
xchg
into
push
js
mov
push
or
and
mov
int
jmp
cmp
push
idivb
in
rclb
jns
jge
mov
sti
test
inc
movsl
cmpsb
add
xchg
lea
movsb
call
into
cmc
fnsave
push
lahf
cs
and
jp
fists
hlt
aas
adc
pop
inc
pusha
jl
shll
es
aas
shrl
imul
lcall
and
and
pushf
cli
and
and
pop
mov
add
nop
addr16
cwtl
mov
test
and
in
push
push
xchg
xchg
stos
and
test
out
daa
cmc
xchg
xchg
add
adc
nop
jl
mov
sbb
mov
mov
lahf
aas
jae
call
xor
je
push
mov
mov
scas
sub
sti
jb
inc
pusha
add
jno
leave
sub
out
insb
sbb
mov
sub
notl
add
jle
inc
mov
aam
fistps
xchg
ja
in
repz
sub
orb
cmp
cmp
cmp
enter
into
xchg
rcrb
mov
repnz
mov
pop
std
ja
mov
fwait
movsl
inc
push
xlat
dec
pusha
aad
outsb
outsl
dec
mul
lds
lds
in
stos
push
jns
jle
xchg
movsl
test
js
pushf
stos
out
outsl
lahf
sbb
jb
lds
cwtl
cmpsb
adc
adcb
mul
xchg
mov
push
jg
mov
mov
arpl
das
push
movsb
cmp
and
out
sub
pop
cld
xchg
lret
push
jmp
repnz
popa
jns
xchg
stos
aaa
pop
js,pn
xor
jb
pop
ja
jl
cmovle
subb
push
lods
lahf
or
mov
pusha
inc
pushf
xchg
mov
push
ljmp
insb
in
or
ret
mov
pusha
pop
inc
stos
mov
das
fdivrl
inc
gs
mov
arpl
pop
pop
incl
sbb
lea
ret
cmp
repz
pop
outsb
jl
daa
jp
lods
aad
pusha
or
cltd
pusha
shrl
ja
xchg
es
std
cltd
mov
mov
hlt
push
sbb
push
mov
into
enter
sub
sub
push
pusha
mov
jbe
sbb
mov
out
add
stos
dec
pop
xchg
sbb
mov
cmp
roll
xchg
scas
clc
sbb
inc
jb
mov
out
xchg
lret
cs
or
dec
xchg
fildl
lea
mov
shll
pusha
adc
inc
out
test
lahf
jmp
dec
or
int3
stos
mov
fwait
and
xchg
in
decl
adc
fidivl
xor
sti
sbb
stos
push
xor
pop
sahf
jmp
pop
es
lods
call
xchg
repnz
pop
dec
out
adc
inc
shl
or
insl
ja
pop
adc
ds
loopne
mov
mov
loopne
pmaxsw
test
lods
push
cmc
int3
add
cmp
xchg
push
sub
repz
cmp
lea
sub
ss
hlt
movsb
subl
icebp
cs
insl
scas
insl
lcall
dec
in
iret
push
and
ret
push
test
cmp
mov
jle
and
into
mov
ljmp
or
sti
ss
decb
rolb
mov
xor
mov
push
and
insl
push
int3
and
ss
cmp
and
xor
inc
add
aas
push
mov
orl
mov
dec
fstpt
enter
xor
int3
in
or
cmp
sub
ss
xchg
dec
lods
jecxz
inc
sahf
inc
add
cwtl
push
and
and
es
ret
or
inc
repz
fldt
imul
test
xlat
mov
stos
xchg
out
je
vprotb
std
jo
pusha
clc
xchg
divb
inc
pusha
jp
es
inc
push
imul
inc
xchg
fimuls
pop
out
lods
xor
fdivrl
cwtl
std
push
xchg
adc
mov
jne
pop
test
jmp
and
pop
shll
out
out
mov
test
in
mov
xchg
mov
mov
cmpsb
cld
lods
jecxz
pop
aaa
arpl
inc
sbb
enter
pop
inc
push
shlb
lret
xchg
mov
xchg
sub
or
popf
repz
dec
cmc
scas
mov
push
into
mov
sbb
movsb
ss
ds
loop
dec
test
call
rorl
fisttpl
jmp
cwtl
xchg
cld
outsl
push
cs
ljmp
jno
pop
stos
jmp
mov
loope
jmp
fisubrl
loopne
add
out
fidivrl
in
and
jb
sub
push
jmp
pop
dec
movsb
inc
cli
jb
sbb
dec
mov
jnp
sub
mov
jecxz
sub
mov
aaa
imul
mov
rorl
sbb
nop
mov
mov
in
lret
and
cmp
stos
add
inc
ds
jno
stos
das
add
jle
push
mov
or
xor
out
push
mov
sbb
mov
lahf
je
sub
bound
push
mov
pop
mov
xlat
sub
les
adc
loope
mov
cltd
jb
dec
pmulhuw
enter
xchg
fnstenv
jmp
cmp
clc
andl
aam
jp
rorb
fstpl
cld
je
or
dec
cmp
ja
xchg
push
aas
dec
out
inc
jns
testb
lret
and
xchg
shlb
lret
jl
mov
adc
add
and
fbld
pop
mov
test
in
cmp
jae
inc
xchg
subb
repz
mov
dec
ljmp
and
sub
dec
mov
xor
xor
stos
mov
fdivl
arpl
add
ds
ret
mov
push
push
pavgw
jne
rcrb
movsl
push
or
add
scas
and
fwait
adc
out
cld
xchg
jmp
repz
cld
popa
ret
loop
ret
push
test
insl
out
cmp
fidivrs
xor
cmp
push
mov
ret
xor
adcb
das
add
iret
fwait
imul
cli
stos
jg
mov
cmp
mov
fcmovnu
imul
jp
bound
adc
adc
rcrl
mov
push
nop
inc
cltd
loop
shlb
and
outsl
scas
cmpl
pop
jl
or
sbb
mov
rcrl
out
xchg
hlt
shll
clc
inc
add
sahf
nop
jp
out
sub
inc
rcll
add
push
out
xor
sti
jnp
repz
mov
jge
iret
andl
inc
inc
mov
fadd
sbb
dec
xor
lods
inc
mov
arpl
push
and
ljmp
lret
sbb
cmp
ja
repnz
push
sahf
push
jecxz
outsl
ljmp
jb
add
xchg
sub
fdivrl
scas
jp
in
jae
mov
in
mov
xlat
mov
lcall
dec
jecxz
imul
in
repnz
xchg
xor
jmp
ljmp
push
lods
or
jge
hlt
jns
cs
sbb
divb
mov
into
pop
pop
push
add
and
fiaddl
push
mov
insb
sub
enter
mov
ficoms
setp
push
fisubrl
mov
je
xchg
stos
adc
add
add
push
imull
mov
xchg
sub
das
out
add
sub
mov
xlat
or
push
cmpb
mov
dec
data16
lea
and
jne
mov
adc
popa
sahf
lods
xchg
xor
lret
push
add
xor
mov
jo
sbb
hlt
insl
dec
andb
xchg
je
test
out
sub
mov
push
cli
test
push
imul
and
sub
inc
into
jae
daa
mov
sets
pop
sub
loope
push
and
pop
adc
lods
inc
das
lcall
notb
mov
jnp
adc
push
inc
pop
out
adc
jne
push
or
adc
cld
pop
loope
dec
in
jb
cmp
insb
mulb
jg
mov
nop
lahf
rcll
pop
mov
es
cmc
adc
jo
xchg
jb
repnz
sbbb
inc
inc
fbstp
aaa
scas
and
add
add
adc
or
xor
test
int
in
cs
vmxoff
xchg
mov
inc
mov
adc
mov
and
pop
adc
or
cmp
cmp
pop
adc
test
mov
pop
and
lock
pop
subl
bnd
mov
sub
cltd
test
xchg
dec
push
jae
push
movsl
jne
push
sbbl
not
bound
xchg
jne
fiaddl
cmpsb
popa
clc
int3
fsubp
sub
out
jg
cmp
inc
push
ss
xor
xchg
adc
test
jg
and
adc
add
dec
or
out
xor
mov
and
or
aaa
int3
jl
scas
push
jb
into
gs
stc
and
and
out
hlt
js
mov
adc
cmp
out
xchg
or
aaa
scas
sub
fidivrs
pop
mov
mov
sbb
test
xchg
popf
mov
or
sbb
add
pop
insb
hlt
xor
sub
push
push
jnp
cmp
stos
ss
gs
ss
jle
sub
mov
jno
xchg
and
push
mov
mov
xchg
dec
cmp
call
or
pop
jns
das
cmp
mov
mov
cmp
sti
stc
adc
lret
rcll
shlb
xchg
rcl
jmp
mov
outsl
movsl
test
es
pop
popfw
lods
xchg
ret
int
push
js
xchg
push
bound
pop
sbb
lahf
lea
mov
aas
aaa
mov
ljmp
jo
les
sub
rcr
stos
pusha
and
cmp
lahf
or
sub
cmp
or
mov
adc
push
fidivrs
rcll
add
call
mov
lds
orl
jnp
push
pushf
xor
mov
inc
pop
mov
or
test
jg
or
mov
push
pop
es
xor
cmp
jb
sub
pusha
lahf
push
pop
nop
push
push
pop
jbe
test
mov
shrb
js
je
cld
pop
xchg
test
adc
sub
fstl
mov
and
ret
fucomp
xor
fiaddl
and
cmp
push
decb
mov
rcr
iret
shll
inc
add
lahf
xchg
and
bound
mov
or
adc
sub
mov
push
or
xchg
and
and
mov
rcrl
mov
sub
pop
inc
xlat
push
testl
in
sarb
mull
cmp
lret
lret
cmpb
pop
inc
lods
fmulp
loopne
push
jbe
mov
addb
outsb
mov
das
shl
fbstp
in
cmp
call
jne
push
jns
push
and
gs
insb
mov
mov
les
or
jp
cmp
dec
rclb
popf
push
addr16
or
jg
push
add
cwtl
pop
ret
mov
jmp
pop
lcall
add
aaa
into
sub
lods
fidivl
and
adc
sahf
xor
dec
insl
mov
push
adc
das
insb
push
jbe
mov
sbb
in
push
imul
push
out
dec
pop
sub
shl
sub
inc
adc
insl
in
add
inc
loopne
addr16
hlt
cmpsl
xor
rolb
in
loope
pop
scas
adc
sahf
leave
test
aaa
popf
jg
test
ja
jecxz
imul
repnz
jo
popl
inc
sahf
jp
in
jno
push
idiv
es
rcrb
cld
xchg
xchg
repz
out
pusha
add
fldcw
push
sahf
mov
or
mov
ss
push
mov
shrl
jbe
adc
test
popa
stos
pop
fwait
xor
adc
js
mulb
push
loop
bound
add
pop
pop
jmp
push
mov
xor
insb
fdivr
jno
adc
xchg
repz
sub
dec
mulb
out
shrb
and
insb
insl
add
sbb
lret
faddp
ljmp
dec
lahf
cmpb
rcl
sub
ljmp
fsts
inc
or
cmp
jo
shll
lret
bound
lcall
in
inc
ficoml
lock
push
fisubs
pop
notb
ret
push
cld
xchg
or
sub
pop
jae
push
push
hlt
cmp
adc
out
push
mov
adc
dec
es
sbbl
pop
imul
imul
cmp
mov
cmpsl
push
dec
cwtl
clc
mov
les
subb
addr16
test
shr
jnp
xchg
mov
jecxz
or
dec
cmp
cmpsl
lret
add
pop
mov
es
fldt
decl
stos
xor
bound
jg
fidivrl
xchg
push
mov
add
push
push
addr16
popa
push
add
and
rclb
cli
aad
sbb
faddl
sub
jmp
mov
push
add
jns
inc
xor
push
mov
cmpsl
lcall
jb
int3
mov
fsubl
inc
jg
mov
push
mov
inc
shlb
popf
and
cmpl
iret
mov
in
sti
jb
data16
push
xchg
or
test
movsb
jno
shll
fnstcw
je
dec
out
xor
test
sbb
add
mov
mov
orb
and
xchg
push
clc
inc
push
fidivrl
das
pushf
jecxz
pop
pop
inc
mov
xchg
pop
sti
das
mov
jmp
sub
cmp
shll
imul
fnstcw
movsb
push
in
push
xchg
push
jns
stos
cmpsl
cmp
sub
xchg
aam
xchg
mov
jecxz
cmp
xchg
sbb
sub
sub
into
xchg
jns
or
mov
js
pop
ror
sbb
icebp
dec
in
cmp
or
mov
add
into
les
sbb
popa
movsl
jle
lahf
xor
mov
sbb
imul
fwait
or
xor
js
lods
mov
ficoms
dec
addr16
mov
mov
scas
sbb
xor
lods
and
ds
sub
inc
dec
pop
add
aaa
xor
lea
lret
mov
ss
popa
jle
jge
dec
and
cmp
xchg
sub
lds
sub
push
add
les
arpl
sbb
pop
mov
or
mov
cmp
fwait
mov
pushf
mov
cmc
or
sub
xor
idivb
sub
mov
dec
std
xchg
and
insb
cmc
insb
lret
xchg
xor
add
repz
push
test
jp
loope
pop
jg
pop
inc
jno
inc
daa
mov
clc
and
inc
mov
push
enter
lcall
cmp
jns
jmp
scas
mov
in
dec
cld
stos
jle
inc
push
gs
jl
orl
xchg
ss
mov
pop
mov
lods
out
sbb
cmp
mov
int3
incb
and
mov
pusha
in
int
insb
inc
xchg
push
cltd
insb
or
les
pop
ror
out
hlt
mov
sbb
push
loopne
xor
outsl
cmp
cld
mov
and
out
sti
inc
mov
sbb
add
scas
sub
int3
cmpsb
ffree
cltd
mov
ja
sub
cmp
nop
imul
xor
mov
xchg
push
lcall
rcl
sub
jno
xor
hlt
addr16
cmp
push
ljmp
cmc
js
movsb
sbb
arpl
mov
insb
dec
adc
in
movb
mov
push
inc
shl
mov
mov
imul
sbb
dec
inc
and
pop
push
sahf
aad
sbb
ret
mov
jbe
mov
lahf
mov
lea
mov
repnz
aad
stos
mov
je
mov
pop
loopne
js
inc
repnz
dec
add
adc
mov
pop
loope
fcoms
test
sub
or
in
dec
sbbb
jge
hlt
shl
mov
push
ljmp
in
jns
das
out
pop
sbb
mov
mov
lcall
and
or
mov
pop
push
ja
cmpl
stc
imul
int
das
pop
cmp
mov
dec
mov
sbb
sub
push
loope
cmc
push
das
lds
mov
repz
mov
adc
aad
adc
pop
mov
add
push
dec
arpl
fsubrs
cld
mov
and
movsl
xchg
sahf
dec
jmp
xor
jb
sbb
cmp
jecxz
push
fdiv
subb
and
int3
or
dec
scas
pop
ljmp
stc
xchg
push
push
cmc
or
jnp
pop
xor
lea
das
adc
jno
dec
xor
pop
fs
cmpsl
jns
and
inc
mov
hlt
cmp
jl
pop
scas
mov
xor
and
inc
cmp
cmpsl
stos
jmp
das
xor
stos
cmpsl
xchg
shrl
push
mov
mov
and
jl
ljmp
movsl
inc
stos
aad
pop
test
inc
cmpsl
ds
scas
jns
push
shl
test
mov
cmp
dec
aas
into
mov
insb
lods
cmp
fidivs
jae
dec
int3
mov
fdivl
fnstenv
test
xchg
mov
lods
lea
out
jo
push
into
sti
cmp
fcoml
daa
push
lods
fldl
das
aam
adc
rol
ss
fdivrl
lret
hlt
or
cmp
sbb
dec
int
cmp
out
addr16
inc
push
lods
jo
jecxz
adcb
pop
je
or
cltd
enter
fs
cwtl
cwtl
xlat
rcrb
jne
out
pushf
push
add
mov
pop
adc
int
pop
mov
xor
cmpsb
gs
ret
shr
mov
mov
fbstp
sub
popf
cmp
rol
loope
cld
stos
xchg
inc
xor
ja
and
push
adc
sub
gs
inc
xor
hlt
enter
pop
mov
push
xchg
or
mov
cmp
push
loop
leave
xchg
pop
inc
xor
shll
inc
or
jg
mov
std
int
inc
testl
call
js
sub
fdivrl
gs
sbbl
jg
clc
xor
test
jl
xor
add
push
jp
cmp
enter
aam
cli
dec
out
push
out
xchg
test
in
arpl
leave
sbb
sti
dec
jmp
push
push
jg
dec
add
insl
jbe
push
push
jae
add
cmpsb
adc
lea
lret
int
or
jo
xor
ds
les
cmp
add
mov
mov
dec
lea
je
jb
insl
mov
addb
mov
mov
mov
loope
inc
sbb
ja
add
das
mov
jmp
xchg
subb
mov
movsl
fs
iret
adc
repz
mov
jae
fisttps
test
call
add
inc
mov
jae
or
xchg
out
add
outsb
add
pop
add
dec
add
add
out
dec
data16
fistpl
mov
xchg
dec
adc
dec
mov
test
lret
mov
fsts
clc
jno
ja
mov
sbb
insb
cmp
outsl
outsb
dec
pusha
inc
xlat
xchg
cwtl
jge
fisttps
and
fists
mov
cmpsb
inc
push
mov
mov
pop
xlat
mov
out
mov
dec
icebp
ret
outsb
and
jb
dec
inc
inc
jg
sti
es
pusha
mov
sti
test
sub
or
sarl
mov
jno
mov
lret
in
das
dec
push
mov
add
les
mov
mov
adc
cwtl
repnz
loop
int3
lcall
mov
and
dec
movsl
inc
test
xchg
add
sub
out
or
mov
jl
daa
sub
mov
push
pop
sub
rolb
pop
lea
js
out
xor
sbb
gs
shl
xchg
jae
sahf
in
push
cltd
xlat
jno
mov
out
pusha
dec
gs
aam
ret
mov
add
pushf
mov
jno
sub
and
leave
call
lods
pop
pop
or
pusha
fsubrs
mov
fiadds
and
push
cmp
ljmp
ret
mov
add
xor
stos
nop
stos
inc
push
mov
pop
add
jbe
ss
push
mov
xor
lock
cmc
stos
mov
dec
xor
mov
dec
xor
mov
repnz
dec
mov
outsb
test
dec
jmp
dec
rcrl
xchg
ljmp
les
sub
sub
aas
pop
rol
popf
xchg
lret
test
scas
adc
xchg
mov
add
adc
mov
push
movsb
icebp
daa
addl
dec
mov
pop
lods
imul
or
std
mov
xchg
jmp
cmp
or
icebp
int3
aam
pop
call
mov
fidivs
xchg
fmuls
repz
sbbb
inc
jl
mov
je
sub
sub
or
push
mov
cwtl
hlt
sub
sub
int3
inc
dec
push
mov
push
mov
xchg
pop
mov
pop
hlt
fistpll
cmp
add
cmp
flds
mov
pop
call
test
xchg
aad
xchg
dec
dec
inc
or
sbb
sub
mov
imul
mov
mov
pop
add
mov
ficoml
push
and
jge
test
and
mov
leave
lcall
mov
ss
pop
sbb
xchg
imul
jb
push
pop
adc
dec
sbb
cmp
push
std
push
cmp
and
jbe
std
dec
dec
filds
mov
mov
and
out
push
sarl
ret
push
xor
xchg
in
cmp
test
jl
test
cmpsb
push
js
repnz
popf
cmp
cmp
out
inc
add
jae
pop
and
push
fsubr
fwait
shlb
insb
or
out
adc
les
mov
mov
stos
rcrb
test
cmp
push
out
pushf
pop
xor
add
mov
pop
hlt
or
and
sub
dec
lcall
sarb
icebp
jmp
mov
jmp
fcmovu
leave
ret
jno
lcall
push
out
pop
jnp
jne
inc
pop
mov
pop
enter
mov
cmp
mov
add
ss
pop
test
stc
or
mov
cs
aad
mov
in
push
sub
mov
out
pop
jnp
xor
test
lcall
sbbb
scas
arpl
xor
sbb
fimull
fsub
pop
mov
and
push
inc
pop
aas
push
aas
xlat
or
aas
mov
lds
lret
sub
les
dec
push
call
leave
dec
outsl
adc
dec
leave
cmp
jecxz
outsl
shl
jmp
lds
jg
loopne
and
cmpsl
shll
pop
cmc
or
jl
push
and
loopne
lahf
xlat
outsb
iret
lahf
jae
lcall
pop
sub
out
jg
jo
and
inc
cli
xor
add
lods
xchg
adc
cmc
aam
dec
xor
pop
mov
jg
aam
xor
les
bound
repnz
mov
push
in
xchg
stos
push
cmc
inc
xchg
push
fisubl
or
jo
jecxz
outsl
push
mov
ret
outsl
xor
or
jle
scas
inc
xchg
loopne
leave
es
loop
sub
or
mov
stos
js
loopne
dec
fcomps
sar
ret
arpl
shlb
test
sbb
mov
adc
push
and
push
nop
dec
dec
mov
int
push
xor
clc
lahf
and
lds
js
gs
mov
inc
lods
sbb
jo
out
mov
mov
xor
xor
sub
lods
add
jne
and
sub
bound
mov
es
outsb
sub
push
push
or
fsubs
test
mov
adc
mov
pop
dec
cmp
dec
or
rcrl
cmp
mov
mov
cmp
mov
shlb
aam
out
or
push
xor
mov
rol
dec
insb
pop
fwait
test
pop
leave
push
jecxz
ljmp
bound
and
xchg
jg
mov
push
sub
jp
gs
or
adc
xchg
pop
loope
push
xchg
push
mov
insl
and
dec
push
adcb
cmp
sub
or
test
rorl
lock
hlt
mov
ljmp
cwtl
clc
dec
xchg
pop
pushf
fstpl
repz
pushf
scas
add
or
loopne
fisttps
popl
add
fidivl
fsubs
mov
add
pop
scas
repz
sub
outsl
push
mov
cmp
in
test
mov
mov
pop
jge
inc
movsb
movsl
cmp
lds
adc
cltd
pop
sbb
ret
insb
add
and
push
inc
or
push
jle
xchg
dec
clc
push
xchg
mov
cmc
mov
pop
dec
or
jle
adc
jnp
sub
call
push
shrl
notl
dec
mov
out
les
sbb
outsb
mov
aam
add
mov
lds
or
mov
sub
pop
mov
rcrb
mov
movsl
cmp
pop
mov
push
ret
push
int3
fwait
xchg
xchg
rolb
aad
leave
jns
xchg
out
sbb
sbb
sub
xchg
test
xor
pop
push
inc
sbb
xchg
cmp
and
bound
pop
sub
imul
jmp
dec
jecxz
in
adc
insb
dec
mov
add
sahf
jno
or
scas
adc
das
clc
xor
cmp
sub
jg
mov
sub
xor
jo
clc
adc
sub
jae
stos
movsb
or
inc
aas
or
fdivrs
insb
xchg
inc
lcall
test
movsl
xchg
arpl
cmpsl
clc
pop
clc
das
dec
nop
inc
jb
pop
cli
test
clc
jle
cmc
mov
test
mov
aam
bnd
test
daa
insb
ja
sbb
ja
sub
xor
xchg
cmp
test
hlt
in
xor
adc
fucomp
aam
aam
dec
in
xor
jno
dec
popa
lcall
mov
setp
jl
loope
cwtl
stos
scas
sub
movl
mov
rcr
call
addr16
repz
cmpsl
xlat
movsl
pop
push
aam
xor
sarb
mov
fnstcw
jg
dec
push
jl
sbb
pusha
push
cli
or
add
sub
sbb
jns
pop
movb
mov
loop
rolb
out
push
xor
push
sub
push
cld
inc
test
add
xor
loope
pushf
cli
and
sbb
mov
adc
push
cmp
roll
adc
cli
xchg
aad
jnp
mov
cmp
ror
xchg
xor
jmp
push
adc
or
jno
fistl
mov
test
jo
inc
jmp
adc
pushf
adc
or
lret
hlt
or
nop
or
pushf
and
test
inc
push
mov
xchg
lret
out
ds
jp
pop
rcl
stos
mov
lock
inc
loop
xchg
nop
pop
push
lahf
mov
fsubl
mov
push
sbb
fidivl
outsb
inc
mov
push
sub
cmp
ret
xchg
xchg
sub
cmc
divl
data16
pop
inc
jl
lcall
nop
mov
subl
jge
adc
in
xor
adc
jl
or
or
ret
je
lock
imul
scas
pusha
neg
and
jle
into
out
mov
xchg
call
sbb
mov
shlb
dec
dec
pop
mov
aas
loop
stc
shl
add
and
xor
inc
stos
test
dec
push
ret
xchg
jno
lahf
testb
or
mov
jae
xchg
pop
ja
mov
or
add
dec
push
sub
test
mov
frstor
add
add
punpcklwd
push
push
push
cli
test
and
testl
sbb
jge
sbb
cmp
and
es
jb
je
push
imul
sti
cmp
std
cli
test
ljmp
sub
call
arpl
jae
in
push
lea
mov
insl
jns
adc
xchg
and
add
adc
vmovdqu
mov
leave
out
inc
out
cld
jge
xor
mov
and
xor
shrb
adc
std
adc
arpl
mov
movsb
jne
cmp
ret
pop
dec
add
in
sub
loope
dec
movsl
aas
out
je
cmp
sti
pop
clc
sbb
sbb
cwtl
jnp
cmc
in
mov
sbb
add
insl
cs
sbb
dec
mov
dec
and
sar
pop
mov
xor
pop
push
push
dec
in
mov
shlb
sub
pop
pop
ss
lret
jmp
mov
jbe
mov
dec
xchg
int
jecxz
es
gs
outsb
jo
call
mov
jae
lea
aaa
fwait
push
sub
xor
jmp
loop
pusha
popf
out
xlat
pusha
push
sbb
pop
cmc
mov
push
jl
adcb
lods
adc
inc
push
les
repz
cmpsl
cmp
dec
mov
push
fadds
add
fmul
test
pop
ds
dec
adcb
pop
pop
adc
lahf
cmp
orb
daa
and
inc
repz
ret
in
jnp
cltd
cmp
fdivr
sub
or
fidivs
add
lods
push
sahf
test
loopne
mov
std
and
aaa
and
sbb
sub
dec
pop
adc
arpl
cmpsl
ss
ficompl
push
les
cmp
inc
add
xlat
repz
cs
and
sti
fsubrl
gs
mov
sub
leave
mov
pop
lcall
mov
int3
xchg
push
push
pushf
add
into
ja
call
dec
shrl
push
mov
test
mov
jnp
das
pushf
cld
push
mov
mov
or
inc
pop
xor
xchg
pop
xchg
add
push
mov
fistps
into
shrl
test
push
out
nop
jbe
stc
mov
fidivl
mov
jns
enter
mov
push
jmp
leave
outsl
rep
jge
ret
sahf
hlt
pop
xchg
and
pop
push
add
loop
mov
lock
das
sbb
or
push
mov
call
test
arpl
jb
daa
fldl2t
or
sub
jg
lcall
sbb
mov
dec
movups
mov
fsubl
aad
xor
scas
out
enter
mov
repnz
mov
aad
or
and
iret
xor
imul
sub
mov
add
loope
loopne
outsb
ret
xor
rorl
or
mov
inc
xor
dec
pop
repnz
push
test
or
imul
inc
pop
int3
arpl
outsb
je
fisubs
push
push
std
xchg
nop
popa
xchg
mov
out
push
daa
call
or
movsb
mov
dec
insl
pusha
imul
es
shl
or
add
lea
inc
adc
loopne
jnp
pop
add
jmp
or
xchg
bound
insl
dec
adc
inc
jnp
push
or
adc
dec
inc
dec
adc
mov
popa
or
xchg
add
gs
sbb
add
cmp
in
mov
out
nop
scas
pop
hlt
mov
es
pop
push
inc
ja
scas
inc
lods
xchg
mov
inc
mov
mov
inc
push
jmp
inc
jle
jl
out
cmp
mov
stos
test
cmc
sbb
adc
lea
push
jmp
push
fs
dec
jb
std
nop
mov
or
ficoms
dec
xor
mov
shll
lods
mov
rep
hlt
ret
pop
mov
jbe
sub
mov
add
pop
movsl
mov
fistl
int3
or
push
imul
mov
imul
jle
jecxz
jmp
mov
mov
add
mov
cmc
push
lret
dec
pop
hlt
outsl
clc
outsl
pop
mov
insl
data16
mov
loope
cmp
leave
mov
arpl
lea
mov
out
rorb
and
fistpl
adc
dec
inc
xchg
mov
pop
adc
jle
dec
out
dec
mov
test
sub
fisubl
sub
lahf
jle
or
or
call
dec
dec
xor
pusha
or
jl
jo
nop
mov
dec
imul
push
aad
xchg
movsl
mov
pop
xchg
fldcw
jmp
cmp
pop
in
pop
push
fwait
int
jbe
push
sub
shrb
mov
xrelease
mov
xchg
jecxz
push
in
movsl
fsubl
lds
clc
sub
cwtl
das
sub
xlat
imul
pop
sub
shlb
subl
adc
lcall
popf
dec
and
clc
adc
xor
mov
movsb
mov
sahf
mov
jge
mov
dec
sbb
mov
adc
mov
jae
mov
mov
sub
pop
sahf
sub
add
out
inc
stc
nop
ja
loope
xchg
fcomps
lcall
fsubl
into
inc
lret
es
mov
and
push
mov
stos
mov
inc
pusha
rorb
push
xchg
test
ficoms
imul
pop
insb
sub
hlt
cmc
insl
decl
push
inc
loop
cmp
repnz
ds
test
cmpsb
jns
incb
clc
inc
shl
pop
mov
jg
sbb
js
lahf
xor
push
jmp
mov
in
pop
subl
and
dec
fbld
xchg
pop
cmc
mov
xchg
sbb
sbb
nop
hlt
addr16
into
inc
xchg
sbb
mov
sub
xor
adc
pop
jge
dec
sub
pop
sahf
push
mov
aam
std
mov
cmp
push
pop
les
cmp
cld
or
sbbl
shll
cmc
push
rcl
aas
pop
mov
nop
dec
pop
repnz
mov
negl
push
ja
push
test
scas
pop
mov
lcall
push
dec
push
popf
xor
cmp
xor
inc
popa
pop
jb
adcl
or
int
mull
mov
sub
lods
cmp
repnz
in
cwtl
das
mov
mov
jne
push
pop
rcr
int
xor
int3
addr16
stc
nop
sub
pop
scas
mov
jge
jo
fdivs
loopne
lcall
dec
mov
and
inc
or
cmp
add
jmp
lods
xchg
adc
inc
mov
loop
sub
rcr
enter
shlb
push
pop
jae
mov
lock
movsl
adc
out
jmp
ret
jg
lods
sub
sahf
or
aas
aaa
pop
mov
mov
xchg
or
mov
in
mov
push
inc
data16
mov
cmp
push
leave
inc
push
jle
int3
into
sub
xchg
dec
or
push
test
movsl
mov
rcl
sub
pop
repnz
mov
call
inc
imul
pop
out
test
jae
push
mov
xchg
outsl
and
divl
sbb
pop
sbb
dec
out
dec
xchg
sub
pop
cmp
inc
fwait
jecxz
dec
jge
or
push
jge
imul
mov
or
dec
mov
ret
pop
pop
bound
mov
enter
out
xchg
push
out
popf
mov
push
hlt
daa
leave
lret
test
mov
into
dec
inc
sbb
fadd
movsb
jns
adc
cmpsb
scas
or
cmp
xchg
loope
add
jg
aam
cmp
dec
sbb
roll
loopne
loopne
jnp
sbb
and
jecxz
pushf
mov
sbb
or
add
aas
push
mov
cmpsl
shrl
and
cmp
jae
xor
insl
test
xchg
lcall
pop
or
dec
adc
add
fs
and
xchg
sub
cmpsl
mov
push
fsubs
add
adc
cmp
ret
hlt
cltd
cltd
push
dec
and
stc
ds
test
mov
sub
sub
fmul
imul
pop
dec
sbb
popa
ret
jae
jp
inc
mov
and
movsl
cmpsb
movsl
outsl
orb
xor
and
jbe
inc
fcmovne
loope
add
jmp
or
fcomp
outsl
or
iret
adc
mov
inc
popa
leave
mov
dec
xor
xchg
movsl
add
movsb
icebp
sub
inc
test
notb
mov
lods
out
push
dec
sub
bound
jbe,pt
repnz
adc
mov
or
mov
loope
loope
rcrl
aaa
dec
xor
movsb
cmp
cmp
out
push
test
xchg
push
out
shrb
jae
cmp
sti
xchg
push
scas
mov
int3
adc
mov
pop
dec
dec
out
ret
hlt
dec
inc
loope
cwtl
xor
or
mov
xor
aad
aam
xor
cmp
cmpsb
jp
sub
adc
fidivl
clc
mov
xchg
subl
cmp
or
and
cld
pop
push
cmp
mov
push
cmp
test
cmpsb
mov
jno
rcrl
scas
xchg
jge
das
pop
cmp
cmp
dec
fwait
cmpsl
dec
repnz
add
xchg
shll
xchg
xchg
jmp
sub
xorb
push
insb
shll
popa
mov
jmp
pop
fnstcw
or
sub
sbb
insl
push
test
imul
push
adc
sbb
cmpsb
sub
mov
lahf
xor
and
xchg
scas
outsb
add
andl
add
sub
dec
lcall
icebp
push
jno
push
stc
or
add
add
popa
jns
xchg
sahf
js
mov
fs
xor
and
and
push
test
xchg
sub
cld
pop
cmp
scas
inc
xchg
dec
stos
sbb
jb
fdiv
mov
cmpsl
out
cli
frstor
ret
add
or
daa
lret
xor
fs
out
in
dec
cmpps
fwait
or
jae
outsb
mov
fcomi
mov
xor
nop
mov
cmpsl
shll
pop
mov
mov
scas
fidivrs
sub
push
aam
or
jl
ljmp
push
pop
out
sub
rorb
filds
mov
mov
sbb
icebp
mov
mov
pop
loope
leave
push
push
add
or
je
add
pop
jge
add
jno
mov
shl
jle
loope
add
jl
loop
pop
fbstp
lock
push
pop
cmp
xor
sbb
sbb
jl
popa
cli
and
push
mov
and
bound
out
mov
loop
sbb
roll
insl
jge
xchg
mov
shlb
jmp
and
dec
and
mov
lcall
adc
out
scas
fs
mov
jl
mov
cmp
xor
out
sti
addr16
ret
mov
xchg
test
fidivrs
fcmovnb
jne
xor
cmp
xor
jg
loope
cmp
dec
movsb
clc
push
dec
fadds
pop
pusha
inc
into
nop
cltd
std
lahf
repnz
xor
and
mov
xchg
jb
adc
shlb
js
or
scas
call
movsb
mov
and
sbb
repnz
pusha
jl
in
jnp
repz
and
push
fcoms
mov
les
adc
hlt
and
or
ja
fldt
and
fistps
pop
mov
cmp
cmp
stos
cmp
fistps
mov
mov
ret
cmp
cs
adc
iret
jecxz
in
lock
push
and
push
out
inc
test
cmc
jmp
adc
sub
pop
pop
xchg
mov
jae
or
adc
aas
sub
or
hlt
hlt
dec
sarl
imul
sub
cwtl
incb
gs
cmc
inc
insb
add
and
inc
and
dec
push
or
jae
jno
inc
stos
push
insb
dec
clc
push
mov
ret
cwtl
ja
daa
ret
popf
jae
ljmp
inc
lods
mov
iret
xrelease
xchg
xchg
jmp
and
pop
add
insb
sbb
push
aas
jno
movl
je
adc
push
clc
stos
mov
mov
test
hlt
aam
sbb
mov
mov
sbb
mov
fcmovne
insl
mov
sub
lcall
mov
sub
es
pop
mov
add
iret
out
mov
imul
pop
add
lea
and
das
pop
pop
aaa
push
int3
cmpb
pop
xchg
into
pop
xchg
add
js
jno
dec
push
fsin
fisttpll
mov
push
fistps
add
cmpsb
cmp
xorb
add
pop
mov
notl
rcl
xchg
mov
clc
jl
mov
out
rorb
shl
sub
int
cli
in
cmp
mov
cmpsl
cld
scas
inc
cs
jb
repnz
popa
mov
lods
ljmp
mov
scas
add
or
ljmp
jge
add
lock
sub
mov
dec
pop
sub
sbb
dec
loopne
aaa
fsincos
xchg
sub
dec
rcrl
in
addr16
mov
popf
xor
int3
inc
fsubrp
popf
sarb
cmpsl
inc
faddl
dec
int
jae
test
inc
pop
subl
adcl
test
addr16
adc
xchg
and
pop
jbe
inc
pop
xor
ss
in
aaa
jecxz
dec
aaa
pop
pop
inc
fidivrl
out
sub
xor
mov
dec
ljmp
cltd
int3
sub
xlat
insb
pop
inc
fwait
cli
adc
outsb
dec
cmc
scas
or
inc
mov
ljmp
fwait
enter
sbb
sub
fwait
and
mov
pop
cs
cltd
or
add
dec
lock
js
add
insb
mov
call
fisubl
mov
sbb
inc
mov
pop
lock
hlt
jge
push
sub
popf
div
xchg
adc
sbb
inc
xor
push
pop
xchg
or
fs
stos
inc
popf
mov
add
push
mov
lods
in
jb
lods
ud2
repnz
mov
stc
adc
clc
dec
call
ss
inc
cltd
aad
sbb
mov
and
cli
dec
pusha
cmp
cmp
pop
jno
outsb
cmpsl
inc
xchg
cmpsb
dec
sbb
test
push
data16
int
shlb
adc
outsb
scas
push
outsl
out
movsl
stos
iret
adc
add
add
adc
cmp
dec
sbb
and
mov
popf
lods
add
ret
shll
je
push
mov
cltd
aam
sahf
mov
dec
and
adc
addr16
push
sbb
inc
stos
jg
and
adc
popfw
mov
push
adc
pop
mov
inc
stos
and
decb
js
je
imul
push
xchg
imul
lock
pop
stos
sub
insb
shll
sarb
movsl
mov
adc
cs
cmpsl
ds
mov
dec
mov
lret
lea
mov
imull
mov
sbb
dec
pop
xor
addr16
ficomps
xchg
add
test
les
aam
pop
and
or
fwait
mov
jno
popf
inc
lret
cmp
jl
mov
repz
aad
insl
sub
loop
mov
push
mov
rcll
std
push
daa
stos
sbbl
pushf
gs
test
push
and
icebp
jge
aaa
xchg
stc
jb
xor
pop
hlt
dec
pop
rcr
push
sbb
rol
stc
jle
push
lock
cltd
jnp
mov
ret
xchg
aam
inc
icebp
sub
xor
lods
aam
in
mov
inc
push
in
addl
cmpsb
insb
xchg
add
imul
cs
stc
add
dec
dec
and
shll
movsb
pop
dec
popa
mov
mov
dec
push
cmpsb
loope
addr16
add
shrl
jp
xor
mov
mov
cmpsb
mov
fisubs
pop
shlb
mov
pop
push
xchg
mov
ret
cmp
pop
lret
and
push
fdivrl
sarb
stc
cmp
movsb
inc
decl
or
out
data16
push
movsb
stc
jb
or
jecxz
xor
fwait
je
push
dec
rol
xor
bound
imul
sub
push
popf
pop
nop
fs
mov
push
jbe
sbb
push
or
clc
stos
dec
pop
ficomps
mov
xor
aad
pusha
jb
adc
enter
test
cmpsl
add
lods
insb
and
les
jns
clc
push
or
jns
rcr
jl
out
into
enter
ret
pop
gs
jno
adc
xchg
daa
mov
mov
cmpsl
add
fsubs
sub
fldt
mov
jne
inc
xor
dec
in
loop
mov
and
das
mov
jne
sbb
test
cmp
mov
push
loopne
fidivrl
and
pusha
rclb
lods
add
int3
imul
and
jne
add
dec
fmuls
popf
and
cs
sbb
push
addr16
loope
sbb
dec
sub
cmp
pop
inc
dec
jns
sub
add
push
in
popf
ret
pop
dec
notl
pushf
adc
pop
loop
xchg
jmp
mov
imulb
lret
add
jl
push
add
lods
stos
xchg
push
lret
xor
or
sbb
outsb
mov
push
inc
hlt
je
test
mov
push
sub
shrb
mov
cs
ret
clc
jns
ret
push
sbb
or
testl
xor
ret
testl
cmpsb
mov
xor
pop
and
fbld
mov
rep
pop
lret
or
push
push
push
add
jmp
jmp
ljmp
mov
cmp
xchg
fiaddl
pusha
adc
xchg
sub
jp
movsl
jl
lahf
jo
repz
fmul
jae
and
in
push
pop
lcall
sbb
and
or
dec
test
int3
shlb
aaa
rclb
pop
mov
xchg
int3
mov
add
xor
mov
push
or
pop
aas
dec
jno
lods
jge
xchg
xchg
push
ret
inc
inc
add
mov
clc
inc
xchg
jae
xchg
xchg
jg
rcl
pop
int
kmovw
sahf
sub
cmpsl
mov
in
into
xorb
jmp
ljmp
std
jge
shlb
dec
filds
cmc
push
adc
in
je
lcall
mov
lret
push
loopne
xor
jnp
pop
xchg
int
inc
sub
imulb
mov
test
gs
int
iret
loop
sbb
dec
imul
in
cld
orb
push
call
out
mov
or
mov
mov
push
cltd
and
mov
mov
iret
or
pop
xchg
lock
push
repnz
adc
lods
ljmp
repnz
ret
insl
sbb
push
imul
test
mov
das
pop
xlat
jbe
jne
mov
fisubrs
dec
ret
jne
pop
inc
enter
arpl
inc
add
shll
push
repnz
cmp
sbb
ds
cs
push
push
rcll
jmp
pop
adc
dec
mov
inc
and
mov
lahf
pushf
mov
clc
lahf
pop
ret
stos
mov
push
push
mov
movsb
stos
out
add
icebp
lods
cmp
jp
inc
mov
push
loop
ja
push
in
jmp
sub
cli
mov
repz
sub
mov
jp
shr
cmp
sarl
and
popa
mov
pop
push
sub
sub
push
clc
push
outsl
movsl
and
mov
or
sbb
movsl
out
dec
xlat
sbb
fisubrs
daa
pop
add
lcall
popa
push
push
cmp
or
mov
jg
out
mov
imul
cmp
jbe
cs
dec
or
adc
pushf
sbbb
or
jp
jns
mov
push
fstl
cmpsb
int3
test
jecxz
mov
xor
in
fsubrs
leave
push
xchg
add
in
jle
inc
push
mov
ret
lret
xor
xor
loopne
and
ret
in
testl
cltd
and
adc
int
push
mov
stos
cmp
shld
gs
cmp
push
test
fbstp
pop
and
test
lcall
nop
xlat
jl
push
out
sbb
cmpb
push
adcl
std
stos
jne
push
jae
mov
mull
scas
ffreep
popf
mov
dec
or
call
loope
fsubrp
add
cwtl
aas
outsl
push
lods
aad
in
add
push
jns
mov
shrb
loope
fs
mov
cmpsb
mov
mov
jl
inc
pop
fisttpl
mov
push
jmp
dec
rcl
leave
ret
es
cmp
inc
xor
dec
mov
push
mov
sub
pop
cmp
sub
orb
xchg
jp
dec
dec
add
sbbb
in
rcrl
mov
mov
add
xor
andb
mov
popf
jb
imul
xchg
fs
cli
xor
arpl
jb
inc
nop
cwtl
daa
adc
rcl
sbb
ret
push
mov
dec
and
cltd
add
movsl
cmp
es
xor
cmp
sub
shr
sub
mov
test
cli
imul
jl
jb
mov
mov
imul
sub
mov
jg
je
sbb
addb
xor
push
jb
inc
lds
mov
pop
mov
mov
out
in
mov
dec
fsubr
and
hlt
add
mov
push
adc
or
adc
inc
jmp
testb
data16
xchg
xor
mov
jl
enter
push
xchg
call
dec
icebp
dec
out
movsb
xchg
outsl
cmp
xchg
clc
pop
cmpsb
or
sub
scas
pop
xor
xor
xor
lret
mov
push
rol
xor
sahf
repz
cmp
cmp
xor
push
fiaddl
xchg
xor
and
xchg
add
sub
pop
mov
outsl
call
ss
mov
test
data16
pop
mov
lcall
aad
mov
rcr
jg
jp
sti
pusha
pop
dec
add
sub
xchg
out
test
mov
imulb
cmp
mov
les
cmpsb
mov
cs
aaa
add
dec
cmp
xor
rcr
repnz
testl
mov
push
out
cmp
ja
xchg
stos
push
xchg
pop
mov
xchg
mov
sub
and
aaa
stos
sar
xor
mov
fwait
jns
ljmp
add
mov
mov
lds
int
insb
pop
mov
mov
jge
mov
pop
movsl
mov
vmread
pop
pop
push
loope
pop
sub
xor
pop
lock
dec
lret
dec
xchg
xor
mov
add
jbe
jb
mov
and
or
arpl
inc
mov
jmp
sub
sahf
call
das
push
and
cwtl
test
lret
push
push
dec
int3
das
pop
cmp
xlat
cmp
test
int
pusha
pop
xor
push
push
and
mov
inc
and
push
sbb
shrb
or
cld
loopne
out
mov
jns
pushf
iret
xchg
inc
fldt
pop
sub
xchg
jns
cmp
sbb
jl
mov
add
sbb
xchg
aam
jmp
xor
daa
repnz
sbb
inc
add
xchg
add
lcall
cwtl
mov
jns
or
adc
into
cmp
push
fldt
mov
ljmp
mov
mov
dec
lods
rorl
arpl
cli
cmc
pop
sbb
dec
cmp
pop
addl
jno
jne
movhps
push
and
push
popw
or
lods
enter
mov
push
das
inc
inc
scas
pop
jbe
push
and
jecxz
dec
stc
xchg
mov
xor
popa
add
cltd
push
push
ds
dec
outsb
lods
loop
dec
dec
je
les
adc
pandn
int3
xor
inc
int3
cmp
hlt
jno
out
rcr
xchg
lods
imul
lods
push
pop
es
xor
iret
jne
jl
mov
xchg
adc
into
test
xor
inc
xchg
jo
xor
add
mov
cmp
cltd
outsb
fwait
xchg
or
scas
cmp
fbstp
jmp
xchg
xchg
xor
lock
stos
shl
sti
psubw
push
test
and
jmp
daa
inc
pop
add
adc
lods
mov
lea
sti
pop
bound
notl
pop
call
stos
cmp
gs
outsl
arpl
les
dec
inc
loop
in
cs
xchg
and
movsl
icebp
xor
push
icebp
clc
adc
push
jle
inc
sbb
inc
push
je
aas
xchg
push
or
add
sbb
add
jb
mov
mov
subb
jle
xorb
jle
shll
enter
fimuls
jmp
mov
dec
scas
out
xchg
jnp
cmp
mov
call
mov
aad
js
xchg
hlt
push
or
jmp
push
sbb
add
addr16
imul
pop
add
cli
or
or
pop
cmp
movsl
cmpl
lods
cld
test
pop
mov
cld
or
lret
pop
jmp
ret
xchg
out
in
and
sbb
outsb
push
cltd
push
dec
ss
and
enter
mov
xor
data16
pop
mov
cmc
jg
adc
sbb
adc
das
push
shrb
inc
decb
mov
fildll
sbb
setne
and
and
mov
arpl
jne
mov
adc
cmp
mov
jmp
add
test
jp
aad
xor
or
sub
pusha
add
dec
scas
xor
pop
adc
xchg
lea
outsl
test
movsb
mov
or
cwtl
subl
push
daa
sub
imul
mov
sahf
push
adc
add
ja
fcomip
lods
push
xor
adc
jl
mov
shrl
jb
jmp
dec
cmp
pop
push
mov
xchg
mov
notl
push
rorl
std
js
pop
or
jl
jbe
lods
cmc
mov
ret
repz
pop
lret
mov
sbb
xlat
andl
jmp
lret
into
mov
jbe
xor
out
xchg
insb
adc
lcall
and
push
shll
or
xor
pop
jbe
mov
sti
push
fdivl
add
jbe
sti
jbe
push
xor
divb
dec
lea
popf
repnz
out
push
inc
in
jb
test
cltd
cmp
pop
push
jp
sbb
bndstx
jp
pop
and
aam
popf
dec
aad
fdivrs
mov
arpl
pusha
stos
or
int3
jmp
and
outsb
inc
mov
rcll
jb
pop
push
pop
int
outsb
xchg
cmp
dec
aas
mov
movsb
mov
gs
push
call
pop
data16
lret
adc
sub
mov
add
lcall
lahf
xor
jmp
ljmp
mov
or
mov
fsubp
add
sahf
adc
pop
cmpb
inc
push
or
popl
fwait
inc
pop
int
rcrl
scas
divl
ja
inc
outsb
leave
movsl
cmp
ja
outsl
out
cmp
pop
insb
xchg
push
mov
sti
mov
cmp
orl
mov
neg
mov
pop
imul
xlat
outsb
insl
jle
dec
call
pop
mov
lods
add
mov
sub
in
inc
xor
repz
push
popf
cmp
in
repnz
daa
int3
loop
push
and
lret
sub
stos
pop
stos
add
xor
outsl
rcll
and
ljmp
sbbb
or
loop
in
movsb
pop
imul
inc
jl
jge
popa
cmp
aam
cmpsl
in
in
mov
mov
mov
fucomi
cmp
lods
mov
pushf
daa
dec
movsl
fwait
or
mov
test
mov
sub
pusha
mov
jg
push
mov
adc
mov
dec
call
dec
pop
mov
popa
loop
xor
mov
aaa
jecxz
push
jo
fistpll
adc
pop
daa
lret
pop
fdivrl
lcall
in
filds
cld
mov
shlb
rorb
in
cmp
or
fdivr
and
push
cmpb
fisubl
ja
mov
fisubl
jg
shlb
sub
jne
mov
addr16
ret
std
cmp
inc
aam
cmpsl
and
jns
pop
insb
jge
fidivrs
aas
mov
inc
sbb
sbb
jg
mov
mov
pop
push
inc
ficoml
clc
mov
ret
mull
rol
addl
pop
xor
jl
aad
les
pop
repnz
mov
std
stos
sub
pop
mov
pop
bswap
je
or
mov
jp
xor
nop
push
jb
js
ja
stc
and
xchg
dec
leave
lods
movl
sub
lret
jns
xchg
sub
sbbl
dec
test
repz
or
xchg
shr
sub
mov
cmp
mov
inc
hlt
nop
cmc
inc
pop
vpcmpgtb
lea
or
mov
sub
lcall
roll
or
in
mov
or
ss
repnz
xor
push
out
addr16
out
mov
dec
shrb
jecxz
iret
addr16
lret
sti
shlb
xchg
xchg
shll
je
mov
adc
ret
sti
sbb
add
test
ja
js
ds
xchg
sub
pop
pop
roll
sub
jmp
mov
push
testb
adc
and
leave
xchg
lcall
in
lcall
mov
adc
xchg
inc
push
pop
mov
leave
inc
pop
clc
cld
xchg
sub
sbb
inc
je
test
and
jge
in
jbe
mov
add
push
loope
mov
dec
dec
nop
push
mov
shrl
dec
shr
mov
sbb
mov
sub
push
adc
push
jb
push
sbb
and
notl
push
jae
repnz
mov
xchg
mov
and
lret
push
dec
daa
gs
decl
rcl
xor
pop
cmc
adc
cld
inc
int
leave
je
stc
inc
push
movsb
je
mov
lahf
pop
mov
push
jnp
inc
push
repz
lahf
clc
cmpsl
popl
lret
push
daa
ret
cmpsb
pop
in
rcl
std
aad
mov
mov
in
or
jp
stos
xlat
adc
mov
xor
out
push
push
xor
aas
push
xor
pop
sub
and
out
aad
in
ljmp
negl
sub
mov
icebp
sar
imul
dec
pop
xchg
stc
lret
push
inc
xor
or
xchg
push
jmp
inc
cltd
aas
in
lret
dec
sbb
sahf
and
xor
fwait
idiv
int3
idivb
cmp
cmc
inc
mov
int3
lret
shlb
mov
push
jl
pop
xor
jbe
add
adc
cmp
icebp
movsl
lods
mov
iret
xchg
aaa
dec
lahf
gs
pop
lahf
or
dec
cmp
shr
xor
mov
push
mov
or
and
inc
int3
pop
xchg
fs
cmpsb
cmp
daa
cmp
bound
mov
popa
ret
pushf
adc
movsl
pop
and
fcoml
repz
data16
jmp
jp
popf
aas
push
fs
inc
sbb
popa
jmp
sbbb
int
gs
dec
add
stc
jo
pop
dec
push
pminsw
pop
outsl
jne
jle
push
push
mov
pop
icebp
xchg
out
lds
mov
mov
push
inc
sbb
fidivl
mov
jne
ficoml
xchg
es
mov
dec
lret
and
insb
subl
push
mov
adc
xchg
in
pop
xlat
inc
andb
mov
fildll
or
pop
mov
xor
fisubs
adc
fidivrs
mov
frstor
sbbl
out
push
push
shl
ja
jnp
xchg
inc
cmp
repnz
adc
popa
mov
pop
les
ficompl
push
nop
mov
sbb
fnclex
repnz
adc
push
mov
ss
notl
lahf
imull
add
mov
pop
mov
pop
repz
inc
pop
lcall
mov
fucomp
pop
fs
add
cmp
sub
adc
sti
fwait
roll
jmp
xor
pop
sub
repnz
fwait
or
jmp
cmp
or
xchg
cltd
scas
fmulp
mov
push
jle
and
push
adc
jb
mov
sarb
xlat
pop
repz
push
sub
imul
aaa
jmp
or
mov
stos
mov
dec
imul
cmp
jl
xchg
cmc
outsb
add
cmp
sub
lods
shld
cmpsb
aas
lods
mov
pop
cltd
pop
call
and
ljmp
xchg
orl
lods
adc
pushf
add
xor
insl
pavgw
inc
jbe
jmp
sbb
and
pop
imul
popa
clc
push
adc
or
push
sahf
idivl
fldt
dec
and
test
add
sub
cmp
insb
fdiv
cltd
xorb
push
xchg
mov
and
out
mov
mov
cmp
test
xor
and
clc
cmp
mov
mov
mov
dec
lret
lods
sarl
mov
xor
fists
rorb
mov
mov
pop
shl
adc
mov
cmp
fildll
xrelease
fstpt
shll
xchg
mov
add
xor
push
mov
sub
ljmp
xchg
add
mov
lock
lret
std
pop
jno
push
lahf
clc
nop
push
icebp
mov
lods
repz
mov
fwait
adc
int3
inc
mov
jae
popf
mov
jecxz
aas
aad
cmpsl
cmp
push
or
pop
and
test
scas
inc
jecxz
jns
es
mov
mov
out
xchg
jle
fucomip
scas
fstp
icebp
shrb
cmp
icebp
cmpsb
mov
pusha
loopne
cmpsb
add
xor
xor
and
sub
inc
rolb
xor
cld
shrw
mov
push
lahf
arpl
idivb
lods
sub
push
fstpl
push
bound
loope
xor
ss
mov
xor
aas
and
add
in
push
sbb
jnp
out
xchg
insb
js
mov
add
mov
adc
sahf
lock
xchg
and
sub
test
cld
push
pop
outsb
out
movsb
hlt
or
inc
cmp
pop
das
movsb
stos
jecxz
out
adc
cs
jle
bound
push
je
test
mov
inc
sub
xchg
clc
dec
data16
push
mov
les
lock
dec
sub
mov
or
test
inc
xchg
adc
push
jo
pop
ss
rol
rcrl
add
push
mov
imul
mov
and
rorl
cwtl
adc
in
cmc
mov
push
outsl
sarb
leave
into
insl
pop
cmpsb
jp
push
add
aam
cmp
movsb
adc
aad
ret
dec
adc
jge
in
das
jnp
shr
push
call
mov
pusha
mov
pop
ja
add
sbb
sahf
cmp
sahf
jne
xor
cmpsl
xchg
jno
mov
cmp
or
push
jb
xor
push
call
cmp
out
iret
fcmovnb
and
sub
mov
jbe
aam
sub
adc
xor
sahf
mov
stos
mov
test
sub
lds
into
fistpll
jg
mov
dec
lahf
les
cs
pop
out
shrb
std
orb
rcrb
and
pop
shl
jmp
xchg
push
inc
in
sbb
xlat
out
jl
arpl
sti
or
or
or
pop
and
xlat
test
out
lret
cli
cmpsb
cmpsb
jnp
pop
mov
or
scas
sub
inc
adc
je
hlt
pop
outsl
fstp
add
shrb
pop
xchg
int
or
or
mov
push
xchg
aas
mov
icebp
mov
adc
dec
inc
sub
xor
sbb
xor
xlat
ss
bound
pushf
int3
sub
xor
or
dec
dec
fs
sahf
xchg
in
sub
lods
xchg
mov
mov
mov
sub
push
and
jl
mov
jb
imul
pop
mov
ss
xor
add
in
mov
mov
dec
fstpt
sub
mov
mov
pop
mov
push
mov
icebp
in
psadbw
cmp
clc
jno
xchg
jmp
outsb
xchg
push
and
lock
sbb
mov
sub
mov
mov
push
push
jmp
fsubrs
lds
mov
in
jecxz
xchg
push
repnz
adc
sub
xor
xchg
jns
les
push
jb
loope
mov
mov
sub
cmp
or
adc
ljmp
or
out
subl
jbe
adc
out
test
mov
pop
xchg
jge
fidivrl
or
mov
lret
fildll
aad
lret
cld
movsb
sbb
lret
mov
cld
pop
xchg
or
sbb
loopne
mov
dec
sub
les
sub
aad
cwtl
lahf
sahf
jne
mov
cld
dec
stos
add
insb
cmpsb
stc
lret
pop
cmp
pop
pusha
mov
call
movq
jmp
jo
popa
dec
jbe
xchg
scas
or
cmp
mov
shrb
mov
cmp
cmp
mov
dec
out
add
adc
xlat
cmp
stos
jne
xchg
xorb
lahf
mov
adc
mov
pop
imull
push
js
add
mov
add
js
sbb
orl
cmp
mov
iret
mov
xor
fdiv
testl
xchg
sbb
ret
fistl
cmp
pop
pop
popa
int
inc
pop
adc
imul
mov
ret
call
out
arpl
insb
jg
cmpsb
pop
scas
dec
scas
add
push
cmp
push
inc
lods
orl
insl
jns
test
push
mov
pop
imul
stc
or
int3
sbb
sbb
mov
add
ds
das
jo
dec
mov
test
fsubrs
mov
in
push
hlt
mov
movsb
jns
and
pop
and
dec
fists
mov
mov
sbb
xchg
fcomi
xor
mov
push
push
lods
mov
int3
sbb
jp
xor
shll
dec
call
mov
mov
lret
mov
inc
dec
mov
cmp
int
test
mov
data16
test
inc
adc
jp
ficoml
adc
xchg
mov
lds
xor
push
cltd
das
dec
mov
lods
pop
inc
fimull
outsb
in
mov
dec
mov
jge
rcrb
mov
js
or
mov
call
dec
push
mov
xchg
cmpb
mov
ret
sbb
push
imul
xchg
push
jp
gs
movsl
test
pop
inc
jne
xor
push
in
xchg
mov
mov
dec
sub
jae
jbe
inc
test
jg
and
dec
pop
or
test
cli
test
out
xor
int
push
inc
cmp
rcll
data16
enter
mov
rcr
sahf
cmp
sbb
ljmp
push
fcomps
scas
incb
addb
jb
inc
fdivrp
shll
sub
xchg
xchg
cmpsb
fbstp
inc
inc
jmp
lahf
add
sub
data16
shll
cmpl
lret
addr16
or
jp
addr16
push
mov
push
push
in
ret
mov
je
cmpsb
orl
rcll
pop
mov
mov
fsubrl
lret
push
pop
sub
cmp
mov
add
sbb
in
ss
push
push
mul
jmp
mov
sub
mov
dec
jns
scas
ret
sbb
sar
pop
out
add
rorl
sar
mov
jmp
mov
fs
mov
mov
add
jg
lods
in
mov
es
adc
pop
cs
xchg
and
push
iret
cmpsb
and
lods
cmp
or
cli
cmpsb
and
fnstcw
xchg
adc
js
mov
xchg
in
sub
test
fisubs
push
outsl
into
das
insb
es
jns
cmp
aaa
mov
dec
push
jae
and
mov
ss
mov
jge
les
js
clc
pop
mov
mov
push
fnstcw
dec
or
push
sub
lea
inc
nop
lods
inc
out
lcall
dec
mov
ret
inc
sbb
icebp
leave
push
or
pop
repz
cmp
pop
mov
aas
shl
push
in
movsl
mov
and
mov
jno
dec
imul
hlt
xchg
jnp
fisubrl
imulb
data16
xchg
cwtl
imul
xchg
jo
fbld
mov
data16
and
std
push
push
jmp
je
sbbl
sbb
les
xor
in
fisubs
inc
push
sub
lods
scas
pop
into
sbb
loopne
cwtl
repz
xchg
js
sbb
or
negl
or
sahf
add
adc
pop
or
fldcw
adc
loop
ds
jg
test
lret
adc
jne
ljmp
jle
mov
into
push
imul
push
xor
mov
adc
or
push
test
scas
adc
sub
mov
and
xor
pop
push
pop
call
jno
outsl
jnp
inc
rcrl
cmpl
mov
inc
icebp
dec
jecxz
xchg
scas
inc
add
jnp
adc
inc
cwtl
jno
arpl
cmp
addr16
outsb
xsaves
mov
xor
or
iret
loope
in
leave
pusha
push
sbb
enter
and
mov
pusha
push
in
xchg
bound
pusha
cmp
inc
mov
loop
add
or
xchg
and
out
and
fwait
jp
movsb
stos
mov
in
xor
jg
cli
mov
xchg
cltd
test
fistl
lods
fldl
pop
scas
stos
inc
ja
mov
xlat
fdivr
and
jns
add
fs
divb
jns
xchg
cmpsb
jnp
mulb
cmp
pop
in
pop
dec
ret
ds
insl
out
in
adc
push
dec
aaa
inc
jb
mov
je
pusha
dec
enter
fsubs
add
enter
xor
mov
mov
fs
sahf
xchg
mov
jmp
jl
jo
push
mov
in
lret
test
lret
adc
mov
sbb
push
repnz
inc
cmp
and
mov
movsb
fisttpl
xlat
mov
or
stos
push
js
mov
ja
mov
loop
mov
jae
mov
cmp
push
mov
pop
xor
in
sbb
je
dec
cmc
add
sbb
xchg
adc
mov
sbb
pop
aad
enter
and
push
mov
mov
jb,pn
sbb
scas
push
or
mov
push
mov
add
or
ret
int3
lret
ret
push
inc
into
enter
cwtl
or
mov
icebp
cmp
pop
jne
dec
loop
and
sbb
mov
and
lahf
mov
das
test
scas
pop
sbb
sbb
cmp
pusha
jp
pop
ja
mov
mov
xchg
test
sbb
cs
data16
arpl
mov
mov
int3
pop
sub
test
mov
icebp
aad
rorl
mov
sub
xlat
dec
stos
inc
mov
pop
int3
lea
ljmp
jno
jae
add
xor
loopne
jo
push
icebp
movsl
fnstsw
lret
mov
rcrl
mov
xchg
xchg
adc
jnp
sahf
push
mov
and
cmp
push
xor
sbb
sub
add
adc
lock
das
mov
mov
dec
mov
fldcw
mov
mov
inc
enter
xor
in
push
mov
mov
loopne
nop
and
jle
int
dec
inc
in
test
sahf
push
mov
sub
addb
pop
mov
and
push
mov
inc
es
scas
addl
in
lods
cmc
inc
fsubs
lods
pop
push
mov
jmp
push
in
cmp
outsl
jns
ja
das
xchg
and
xor
sbb
xor
cmp
std
aaa
push
inc
mov
push
inc
xchg
add
daa
sbb
mov
test
and
cmpsb
loopne
xorl
or
cmp
push
shl
loop
stos
nop
jns
cmp
mov
ret
and
sarl
jg
ss
movsb
mov
test
test
lea
loopne
decl
fcomps
loop
popf
lods
mov
and
push
cmpsl
mov
pop
orb
es
in
jae
xchg
stc
rolb
mov
xchg
pop
jbe
and
icebp
and
pop
scas
into
xor
jb
inc
clc
fldenv
mov
lods
pop
js
mov
loop
fwait
xchg
rcl
cmp
lret
out
push
inc
inc
rolb
aad
lcall
and
shlb
es
imul
ljmp
adc
dec
pop
aam
push
pop
sbb
and
loop
aam
add
incl
mov
fstpt
xlat
mov
or
ret
mov
idivl
ds
imul
arpl
mov
aas
inc
sub
xor
mov
ss
lods
out
daa
movl
xor
in
mov
add
into
mov
jle
mov
gs
cmp
sub
add
ja
sbb
sahf
sbb
cmc
aam
dec
cli
fwait
ljmp
ss
add
and
das
sub
flds
into
fdiv
push
mov
ret
aas
add
shrl
sbbb
repnz
shlb
dec
sub
std
jg
insl
mov
pop
or
xor
int
add
bound
or
iret
fldt
or
sub
in
cmpsb
cs
popa
xlat
hlt
mov
test
sbb
cmp
inc
popf
cmp
push
mov
inc
adc
dec
adc
mov
imul
pop
rcr
push
aaa
pushf
cmpb
aaa
xor
mov
stc
ljmp
mov
mov
push
aad
pop
testl
inc
imul
out
fdivs
adc
cmc
pop
adc
jl
sbb
add
xlat
test
jb
pop
mov
xchg
xor
adc
or
inc
in
loope
andb
ret
jnp
adc
out
jmp
xor
pusha
xchg
mov
call
cli
xorl
push
push
push
or
xlat
movsb
rcrb
stos
mov
add
mov
pop
call
mov
xchg
out
jecxz
fcmovu
dec
and
into
xor
jns
push
jg
lcall
lret
mov
aas
out
inc
dec
loop
sbb
jecxz
sahf
rcrb
sbb
sti
sbb
mov
push
lret
push
pop
cmp
test
sbb
lods
fbld
insb
add
bound
das
mov
mov
outsb
loope
and
or
jg
inc
dec
orl
dec
cmp
xlat
pop
out
or
jmp
push
pop
mov
sti
mov
sub
cmp
jle
sarb
push
in
setp
dec
lock
in
sbb
push
sbb
mov
mov
add
xchg
mov
sub
lret
lea
xor
bound
into
jmp
and
popa
movsl
xchg
jecxz
arpl
in
jno
jnp
aam
mov
ja
enter
cli
add
mov
ljmp
mov
popf
mov
xchg
dec
daa
push
sahf
push
pop
test
loope
gs
fdivl
shrl
out
or
mov
into
mov
pop
and
add
mov
xor
pusha
push
xor
pushl
add
mov
push
fucomp
mov
cmpsl
mov
mov
pop
jecxz
jne
or
mov
xchg
sub
or
jnp
mov
int3
lds
fisttpll
in
dec
rolb
and
cmp
xor
add
push
add
fnsave
mov
iret
lock
mov
inc
cli
std
pop
adc
push
pop
xacquire
mov
push
inc
ljmp
fdivs
and
jb
mov
stc
push
push
xchg
out
pop
jmp
clc
rcll
and
mov
mov
pop
std
pop
jecxz
push
mov
leave
xchg
pop
stos
dec
or
mov
je
lods
cmpsb
xchg
loop
fiadds
leave
aaa
jl
sub
ror
mov
jne,pn
sbb
or
mov
outsl
andb
dec
out
mov
in
sub
add
ret
jle
sarb
rep
push
or
fisubs
aam
cli
xchg
mov
and
mov
sbb
stos
push
lods
mov
fstps
scas
xor
pop
add
jle
repz
dec
xlat
pop
mov
jecxz
jp
jmp
movsl
xchg
std
or
sbb
loope
mov
add
test
cmpsl
sub
sbb
lahf
les
out
lahf
sar
out
xchg
jbe
lcall
add
js
or
shrb
pop
push
mov
jg
or
and
or
jmp
fadds
cld
pop
add
testl
pop
ss
mov
lcall
movsl
xchg
add
stos
subl
aam
rep
lahf
dec
pop
dec
jmp
and
jecxz
pop
mov
jle
ret
and
xchg
test
dec
xor
cmc
lods
inc
aaa
dec
jnp
push
inc
mov
push
push
xchg
into
sarl
xchg
ret
iret
or
push
popa
mov
push
test
negb
mov
lods
cli
jl
dec
pop
or
lock
shll
int3
sbb
lea
lahf
dec
or
cmp
push
xor
insb
sbb
leave
push
sbb
or
inc
or
pop
sti
test
ja
in
lock
and
cld
pop
into
cmpsb
sbb
sbb
pop
jb
xor
sar
stos
test
shrb
test
pop
int3
imul
into
enter
xor
inc
cli
mov
adc
sbb
or
push
jle
inc
jp
test
out
lret
inc
ficompl
aaa
popa
fsubrl
inc
lcall
inc
cwtl
jg
xchg
cmpsb
lret
data16
fsubrs
jnp
sbb
dec
ds
mov
rcll
dec
jecxz
testl
out
inc
lods
inc
push
imul
sahf
mov
xor
scas
dec
jns
mov
jb
mov
sbb
lea
fidivrl
test
and
sub
sahf
cltd
pop
imul
mov
mov
push
les
mov
aad
clc
sub
cmp
push
add
mov
imul
jp
call
xchg
push
imull
shrl
pop
ss
inc
fstps
jmp
mov
insl
into
pop
fildl
adc
push
pop
repnz
ret
int
movsb
adc
sub
mov
mov
cmp
jb
mov
push
jo
and
jmp
push
cmc
inc
shrb
idiv
scas
test
inc
mov
outsb
clc
out
adc
xor
stos
jb
mov
lret
cmpsl
or
inc
outsl
xor
or
or
call
ljmp
sub
mov
lahf
mov
or
and
stc
inc
jno
movsl
inc
out
inc
xchg
cs
out
ret
movb
lcall
mov
dec
jmp
add
mov
lods
dec
cmp
pop
cmp
pusha
sub
mov
or
pop
push
inc
or
bound
jo
mov
or
fldl2t
mov
aam
mov
out
adc
insl
cld
orl
pop
rclb
adcb
ret
sbbl
shll
jne
nop
incl
stos
adcb
cmp
test
xor
lcall
loop
enter
rsqrtps
add
sub
pop
imul
or
loop
add
jge
clc
dec
push
push
push
mov
adc
pop
scas
jae
xchg
inc
xchg
pop
scas
pop
xchg
notb
mov
loop
xor
dec
inc
inc
sbb
cmp
push
mov
jae
push
mov
sbb
loopne
fcoms
xor
ds
xor
fsubr
fwait
inc
pop
cmp
xchg
lods
add
dec
pop
push
push
scas
fidivrs
pop
pop
lock
ljmp
stos
mov
cli
add
mov
stos
aas
dec
rcrl
xchg
cs
in
dec
jmp
pop
sub
jno
test
sarb
mov
testl
xor
fcmovnbe
loopne
out
and
test
cmp
aaa
dec
fisubl
lahf
testl
popl
mov
add
nop
push
inc
stos
push
lret
outsb
sbb
mov
mov
aas
fisubrl
in
stos
xor
inc
scas
dec
mov
dec
jp
addl
addl
mov
adc
clc
div
mov
push
jg
fimuls
and
int3
adc
mov
sahf
push
and
std
fdivs
cmp
dec
and
jne,pt
sbb
xchg
pop
mov
add
scas
test
outsl
inc
inc
lahf
mov
push
push
into
mov
inc
xchg
pop
je
ss
adc
les
cs
lea
dec
lods
pop
mov
into
aam
push
dec
out
mov
jb
and
stc
out
mov
addr16
call
pop
jle
mov
loopne
call
ja
dec
cld
js
xor
sub
push
xor
aad
push
push
hlt
div
mov
xchg
jg
sub
xchg
mov
iret
aas
pop
loop
mov
dec
inc
outsl
mov
ret
roll
cmpsl
pop
icebp
fadd
scas
mov
fdivr
push
fwait
movsb
and
jb
or
pop
fiadds
cmp
xchg
sub
adc
jns
mov
sysexit
stos
inc
ffreep
push
shll
leave
pusha
movsl
xchg
fdivl
pop
mov
adc
ja
mov
adc
inc
ja
xor
sahf
xchg
sub
push
cmp
mov
ficoml
jp
js
jne
ret
jo
push
testl
xchg
add
sahf
inc
std
fnstenv
sub
inc
xor
xchg
sub
stos
sbb
pop
push
loop
sbb
mov
adc
jmp
inc
pop
push
fmul
fs
mov
pop
mov
ret
repz
int3
jg
lahf
push
cmpsl
inc
xchg
decb
popf
or
dec
cmp
insb
jecxz
leave
pop
jbe
hlt
in
test
sbb
pop
push
xchg
test
out
inc
test
or
adc
movsl
ret
cmpsb
in
mov
mov
sbb
ds
or
dec
stos
jge
sbb
loopne
mov
andl
iret
lock
pop
insb
mov
push
addb
inc
scas
sti
or
insb
and
into
or
shrb
adc
ja
imul
inc
sbbl
int3
es
ss
push
or
sub
push
mov
inc
in
jecxz
dec
rcrb
andb
out
pop
lock
push
rcrl
lods
out
loop
xchg
inc
jp
les
pop
out
dec
sbbl
fdivrs
mov
daa
stos
adc
xchg
js
mov
ljmp
add
or
adc
pusha
push
in
popf
or
int3
fs
sbb
lea
sub
int3
pop
das
andl
out
outsb
cwtl
pop
pop
jmp
push
xor
push
dec
loop
cli
adc
fsubl
mov
daa
fisubrs
ret
pop
stos
pop
sbb
push
nop
and
jno
std
movsl
jno
pop
in
pusha
jne
add
inc
cli
ss
fmuls
jne
call
dec
testl
jae
ljmp
dec
rcll
test
arpl
jecxz
jb
add
ret
je
cmc
inc
or
xchg
mov
sbb
out
iret
stos
mov
les
push
rclb
in
ficompl
faddl
outsl
stc
ljmp
and
into
enter
mov
faddl
push
push
daa
aaa
fimull
lahf
mov
sti
pop
test
or
pop
icebp
lock
mov
adc
mov
stos
repz
hlt
mov
push
jnp
xchg
mov
inc
fwait
pop
xor
in
add
in
bound
clc
scas
cmovno
jl
pop
call
ss
inc
stc
mov
push
orl
je
flds
addb
js
adc
rorb
scas
jb
xchg
pop
mov
mov
int3
push
pop
sbb
xchg
xchg
outsb
mov
dec
cmc
xchg
in
or
pushf
rolb
aad
das
adc
stos
cltd
hlt
push
repnz
mov
cmc
and
iret
dec
jne
pop
out
cwtl
inc
cmc
mov
repnz
jo
adc
pop
adc
sbb
clc
shlb
gs
lahf
add
mov
jge
push
outsb
das
add
aad
inc
mov
repnz
push
mov
jge
cmp
aad
push
adc
roll
add
lods
adc
jno
inc
inc
fsubl
pusha
shr
inc
fisubrs
incb
shrb
out
test
adc
mov
bound
les
adc
xchg
cmpsl
lret
xchg
sub
rcll
mov
int
mov
jns
mov
lcall
inc
js
adc
leave
cmpsb
lea
pop
adc
or
jno
daa
test
int
add
movl
scas
jge
add
jp,pt
mov
loop
sbb
clc
roll
shl
sbb
jmp
xor
or
nop
mov
xchg
sub
fidivl
rcl
ljmp
mov
fisttpl
cmpsb
or
inc
stc
jns
cs
xchg
jo
dec
iret
lods
mov
pop
clc
sbbl
jmp
or
push
push
sub
sub
dec
cmpsl
dec
mov
push
mov
loopne
xchg
sub
loop
mov
testl
ljmp
lret
cltd
inc
inc
insb
cmp
fldln2
mov
mull
inc
push
mov
sbb
shl
and
mov
push
mov
js
inc
nop
pop
jne
mov
outsb
push
mov
xchg
repz
cmp
push
jmp
and
lahf
aaa
push
mov
jae
mov
jbe
push
ja
lret
daa
push
dec
fdivs
loop
and
jg
lret
mov
sub
push
cwtl
adc
divb
and
popa
jnp
push
sub
addr16
enter
pop
fiadds
push
mov
add
mov
pop
mov
pop
cli
imul
fisttpll
inc
lret
stc
negl
cmp
jns
or
push
iret
movl
xor
subl
add
cmp
imul
inc
int
out
mov
movsb
mov
ja
pop
xor
rorl
mov
pop
outsb
pop
insb
jne
insl
js
cmp
sbb
imul
lods
xchg
ss
out
out
insl
adc
mull
lahf
bound
lret
xor
cli
cwtl
and
sbb
xor
imul
repz
push
lcall
in
mov
and
pusha
add
mov
adc
test
out
js
push
xchg
sub
test
shl
mov
push
mov
clc
mov
mov
ljmp
xchg
in
sub
jmp
xor
inc
loopne
sahf
adc
push
aaa
outsb
dec
mov
push
and
jecxz
ret
sub
cmp
pop
cmp
push
pop
jno
jno
or
rorl
pop
inc
pushl
mov
jge
lds
lahf
repz
fsubrl
or
adc
inc
push
addr16
mov
jle
xabort
dec
and
cld
inc
mov
call
lods
inc
pop
stos
cld
mov
jg
push
lahf
dec
jp
pop
sbb
and
pusha
adc
pop
jbe
push
xchg
xor
movsl
lea
jnp
mov
fnstsw
fistl
mov
mov
aaa
popf
jo
dec
lock
cmp
push
call
jo
jno
aas
loope
push
popa
and
push
sahf
pusha
adc
in
mov
push
jle
stc
loope
jnp
xchg
pop
mov
leave
and
jl
mov
fdivrl
inc
or
fwait
mov
daa
outsl
hlt
jg
cmpsl
fs
int
popf
or
push
addr16
jmp
lcall
and
loope
adc
jmp
repnz
adc
mov
repz
mov
sarl
push
jb
and
adc
push
xor
and
or
jecxz
adc
inc
inc
inc
shlb
push
adc
in
mov
xchg
and
dec
sub
shll
addr16
xorb
mov
movsb
xchg
andb
insb
jae
test
add
scas
out
test
call
fmuls
sbb
repnz
fdivl
xchg
jbe
enter
sbb
outsl
pusha
mov
jo
shl
dec
sbb
mov
mov
pop
scas
sub
xlat
mov
jg
cmp
lcall
cwtl
addr16
in
popf
jns
jmp
pop
adc
lcall
sub
mov
nop
cmp
xor
jb
cmp
add
lods
sub
ja
cmc
loope
mov
mov
pop
cli
ror
cmp
push
addr16
sbb
mov
jge
cwtl
pushf
jo
sub
add
cmp
pop
in
nop
stc
in
push
cs
mov
rorb
sbb
sti
bound
sbb
movsb
push
mov
stos
pop
inc
and
shl
or
inc
das
clc
push
jns
movsl
ljmp
mov
sbb
sub
and
sub
xor
sub
add
push
jecxz
scas
mulb
mov
mov
push
mov
lret
iret
adc
xor
rclb
pop
mov
jecxz
inc
sbb
fdivp
xchg
mov
mov
in
out
inc
add
adc
cwtl
xor
xchg
jns
push
or
dec
mov
cmpsl
cmp
jbe
mov
test
shlb
shll
arpl
loop
push
sbb
mov
xor
pop
push
orb
sbb
jge
mov
cmp
sbb
mov
or
xor
sub
shll
add
data16
inc
cld
sub
pop
ficoml
mov
xchg
call
pop
or
out
lods
inc
xchg
fisttpl
push
gs
fisttpl
cld
jb
sub
iret
xor
sti
cmp
aaa
jle
addb
lahf
mov
cmpsl
out
stos
outsb
lret
fisubl
aam
std
and
inc
stos
inc
bound
jne
fneni(8087
cmp
dec
ret
add
popa
mov
cmp
inc
mov
push
mov
bound
and
fldcw
test
or
ret
popf
fwait
pop
add
push
movsb
dec
cmp
iret
dec
into
daa
idivb
ja
lods
enter
cmp
into
inc
xor
fldt
adcb
int3
movsl
xchg
jne
dec
jne
in
call
inc
mov
sbb
and
push
cmp
cwtl
stos
push
push
loop
jp
ret
loop
jbe
or
bound
push
incl
stos
xchg
adc
add
jecxz
mov
in
xchg
in
sub
xor
fsts
mov
inc
mov
fwait
sti
cmp
sbb
js
mov
and
sbb
dec
jmp
rcll
mov
aad
out
lret
icebp
pop
cmc
jno
xchg
int3
xor
mov
andl
mov
sbb
in
push
mov
jmp
pop
adc
xorb
or
jbe
jbe
sti
es
inc
push
xchg
jb
jecxz
push
mov
pop
stc
bound
in
cmp
aaa
push
or
fsubrl
mov
std
sbbl
or
ja
addr16
cwtl
ljmp
subb
setne
jno
arpl
cmpsl
popa
int3
out
add
adc
jl
and
imul
xor
adc
ret
pop
adc
pop
jle
fimull
lret
inc
adc
test
out
push
scas
test
lods
addb
stos
push
fsub
xchg
jns
inc
or
les
test
adc
std
adc
push
or
notl
jmp
out
out
push
or
into
and
add
jnp
cs
cwtl
gs
jo
movsl
push
je
pop
fistpl
vshufps
hlt
dec
mov
dec
in
xchg
dec
shl
aad
sarb
jmp
dec
and
sbb
inc
sub
data16
pop
cmp
out
dec
pop
bound
mov
jbe
jecxz
fmull
in
and
xchg
std
lret
cmp
xchg
mov
mov
and
ret
push
cmp
mov
rolb
cs
in
add
and
stos
adc
daa
sahf
and
out
cmpb
xchg
cmpsl
mov
shll
dec
movsb
jp
cmp
pop
cs
in
cmpsb
and
inc
int3
xor
in
cmpsl
add
xchg
cltd
rol
imul
jnp
lods
rcrb
enter
js
sbb
data16
pop
cmp
insb
popf
lods
push
sub
cmpsb
or
pop
int3
imul
out
out
mov
flds
xlat
std
mov
stc
pushf
sub
sar
sarb
sub
loop
add
cmp
insl
negb
mov
ret
call
dec
iret
cmp
adc
pop
dec
iret
mov
xlat
sub
loope
mov
nop
push
inc
fildll
imul
ljmp
xor
mov
scas
dec
rorl
and
or
stos
mov
pop
jb
push
jge
arpl
in
ja
add
int3
mov
dec
or
push
cmc
mov
mov
sbb
cld
in
das
hlt
fbstp
jl
ss
lock
adc
jmp
aad
mov
push
or
cmpsl
adc
sbb
mov
out
xchg
pop
scas
inc
aad
pushf
xor
nop
int
clc
push
mov
movsb
xchg
adc
test
and
add
std
rcrb
mov
mov
add
adcb
mov
pop
rol
add
or
in
enter
pop
mov
xlat
mov
repnz
xchg
mov
mov
and
sarb
xchg
pop
or
mov
loope
pop
fstpt
lret
test
xor
dec
adc
inc
sbb
xchg
mov
inc
movsb
inc
insl
int3
fidivs
pop
and
pop
mov
cmp
mov
adc
pop
rcr
inc
inc
cld
insb
fbstp
pop
pop
in
push
pusha
testl
inc
adcb
jmp
cmpsb
and
pop
sbb
cmp
xor
ljmp
out
jno
pop
cmp
pop
insl
js
mov
cld
int
ret
dec
jecxz
cmpsb
enter
push
sbb
in
dec
xchg
popa
jl
pop
mov
fwait
nop
sub
jmp
jb
ja
mov
jle
xor
xor
and
mov
or
mov
loop
adc
sbb
in
sbb
repnz
sbb
fwait
jp
jnp
test
insl
pop
imul
inc
push
arpl
shr
cli
rcrl
jg
lds
jns
lcall
pop
test
mov
mov
scas
push
jl
into
iret
or
aaa
jae
insl
dec
scas
popf
pop
jbe
xchg
fbstp
pop
jb
je
std
or
sbb
inc
pop
jle
adc
sbb
add
mov
add
or
adc
inc
mov
ds
pusha
stc
dec
pushl
les
cmp
xchg
ja
lcall
sbb
xor
int3
insl
test
aaa
rclb
in
scas
orb
adc
icebp
or
xor
and
and
std
fwait
or
mov
jl
enter
mov
andb
out
pop
jbe
stos
sbb
ror
inc
push
mov
mov
xchg
imul
and
aam
sbbl
test
stc
ret
pop
jno
sbb
sarl
pop
cmp
jnp
mov
lds
js
jns
sbb
mov
xchg
push
aam
xor
aaa
push
dec
hlt
pop
fcompl
xchg
repz
mov
fiadds
xor
cltd
add
mov
fcmove
ss
jo
push
shl
adc
push
lea
inc
push
jne
nop
aad
pop
std
and
jns
repnz
leave
mov
cmc
add
push
mov
movsl
stc
rcr
dec
push
mov
push
fxch
shr
cld
mov
mov
sti
cmp
and
mov
in
cmp
rcl
ss
es
test
mov
sbb
sub
cltd
movsl
js
push
stos
mov
test
iret
pop
ret
fldt
lcall
popa
or
cmp
testl
sarb
call
sbb
and
mov
inc
sbb
mov
gs
scas
insb
sbb
inc
daa
ficomps
mov
cltd
std
repz
push
push
add
sti
in
test
push
push
mov
fs
icebp
pop
hlt
out
mov
sti
push
les
and
lcall
gs
mov
or
call
pusha
test
dec
aad
cmpsb
sbb
lds
jecxz
nop
sbb
pop
mov
jns
call
sbb
daa
xor
aam
decb
mov
lret
mov
popf
add
into
arpl
adc
in
xorl
dec
jge
pop
xrelease
xchg
push
add
jae
xchg
cmpsl
add
sbb
add
push
into
cmpsb
push
sub
in
popl
mov
push
aaa
jb
cs
add
jge
aad
xlat
mov
sbb
mov
or
sub
dec
mov
std
xchg
in
ja
test
scas
cld
outsl
sbb
pop
pop
mov
test
pushf
lahf
lret
xchg
shll
enter
push
xchg
clc
inc
movsb
sti
imull
ja
or
adc
sbb
sbb
add
dec
or
push
lock
sub
in
fidivrl
aad
cmc
dec
sarb
push
cmp
sub
icebp
pop
add
dec
loope
mov
sub
add
pop
or
imul
imul
sbb
je
sbb
cmp
cmpsb
fcmovnu
pop
inc
sbb
pop
cmp
mov
scas
lea
cmc
mov
gs
das
xlat
push
lods
ljmp
pushf
lea
ds
push
and
xor
dec
shlb
cmc
push
mov
cmp
xor
mov
xchg
fidivl
clc
or
lret
cmp
mov
dec
test
sbb
mov
or
and
imul
idivb
cmpsb
dec
int3
pop
push
movsl
dec
stc
push
insl
sub
push
insl
sub
ret
lea
mov
mov
jne
or
filds
xor
add
cld
inc
jmp
aam
cmpsl
push
subb
sbb
ror
dec
loop
mov
adc
xchg
movsl
mov
add
pop
mov
pop
in
inc
cld
fxch
cs
outsl
aad
loopne
xchg
or
push
dec
addr16
pop
inc
insb
cltd
fwait
dec
shll
push
mov
pop
shrl
add
sbb
sbb
sarb
push
ret
out
stc
icebp
xlat
add
dec
popa
aad
loope
stos
adc
cmp
fbld
repz
jns
fwait
mov
cltd
in
sbb
jl
std
pop
adc
sbb
jno
mov
xchg
inc
in
mov
fistpll
lret
sub
or
scas
in
inc
and
in
mov
outsb
negb
pop
pop
in
incb
out
test
adc
or
aam
in
in
scas
mov
mov
pop
pop
jnp
or
rcrl
mov
cmpsl
xlat
out
xchg
rorl
je
mov
ljmp
lea
decl
or
or
imul
int
cmp
mov
clc
lret
lret
sub
outsl
adc
jbe
inc
jb
pop
lret
movsl
rorb
add
ret
jno
cmp
push
push
into
and
pop
data16
rcrb
jns
stos
xchg
jne
repnz
imul
pop
adc
cmp
popf
lods
cmp
add
jb
push
xor
xchg
orl
xor
cmp
mov
pop
jno
mov
dec
sbb
out
out
jne
push
add
aam
test
sub
repz
in
xchg
arpl
push
mov
icebp
aas
dec
add
jae
punpckhdq
sbb
adc
in
push
push
pop
pop
imul
add
mov
xchg
add
and
ret
add
pop
mov
xchg
pop
mov
loope
add
aam
daa
mov
adc
push
pinsrw
imul
pop
mov
mov
mov
pop
jno
adc
aaa
mov
lods
int
movsb
jge
mov
add
lret
dec
int3
test
into
jno
cmp
lock
out
xchg
add
add
cmovns
cltd
test
xchg
jmp
mov
subb
mov
mov
push
push
test
fs
lods
scas
daa
stc
cltd
sbb
nop
sti
sub
sub
add
es
arpl
neg
mov
cmp
sarb
xlat
mov
in
push
xchg
pop
decl
sub
jbe
mov
cmp
and
sahf
adc
xchg
cli
xor
stos
cli
push
bound
int3
push
pop
loope
jno
sub
sbb
pop
sub
adc
pop
cmp
jecxz
mov
push
adc
xchg
fwait
jae
je
push
xor
push
shrb
inc
cmp
ret
push
aas
outsb
popw
xchg
movsl
mov
adc
push
or
push
xorb
pop
xor
movsl
cld
outsl
adc
shll
shrb
xchg
inc
dec
push
loop
xor
pop
dec
dec
cmovge
inc
fwait
cmp
shlb
lods
push
cwtl
inc
popf
into
sbb
mov
les
xorl
pop
mov
jge
and
xchg
pop
inc
lret
lret
xchg
arpl
xchg
fs
fs
enter
test
shr
jo
daa
or
or
mov
aam
xchg
add
incb
fmuls
cmp
sbb
insl
sbbb
ret
mov
add
and
ret
adc
in
test
test
lds
mov
lahf
mov
mov
mov
into
cmp
jg
lds
dec
mov
test
shrb
and
imul
call
add
lock
das
add
xchg
xlat
insb
add
push
js
jns
push
inc
stos
dec
sbb
jl
pop
mov
ds
in
fidivl
jp
pop
or
popf
pop
fwait
sbb
sarb
ljmp
insl
shll
push
sub
bound
xlat
sbb
test
pop
inc
mov
xor
loope
movsb
cltd
inc
mov
or
jg
jmp
or
pushf
nop
mov
push
imul
cmc
xchg
shlb
push
sbb
cmp
fwait
add
test
mov
or
ljmp
adc
push
jo
ljmp
sbb
xchg
cli
insb
stos
push
mov
cs
hlt
insl
pop
aad
aam
sbb
pop
aaa
arpl
xor
in
push
xchg
aam
scas
nop
out
int3
loop
stos
inc
int
push
pop
popa
ret
sbb
adc
test
sub
lock
cmpsb
add
sti
and
inc
xor
sahf
and
adc
subl
mov
loopne
xor
pop
aas
inc
pop
push
popf
dec
mov
add
inc
lahf
jp
pop
inc
popf
daa
aad
iret
mov
inc
sti
xchg
pusha
and
hlt
mov
fidivrs
ljmp
cli
mov
xlat
andb
movsl
fmull
negl
and
hlt
lods
mov
push
cli
xchg
mov
adc
test
mov
filds
in
lret
jp
pop
cld
xchg
dec
sar
fidivl
pop
mov
lea
sti
loopne
test
xchg
dec
std
cli
jl
mov
or
jbe
or
cmp
mov
testb
push
cmp
push
push
add
sub
mov
jecxz
outsl
out
dec
aam
add
divl
lock
cmp
shl
cmp
sub
cmc
aaa
cltd
movsb
repnz
out
xor
adc
xchg
stos
xor
adc
mov
sub
cmc
and
jp
xor
mov
lods
sub
dec
loop
bound
lods
cmp
dec
dec
mov
in
cltd
repnz
nop
cmp
mov
jmp
mov
mov
push
in
push
or
add
mov
inc
add
inc
mov
mov
jl
push
fwait
insb
and
cs
xchg
jp
outsl
push
sub
loope
add
pop
dec
mov
jmp
je
loop
jns
xchg
mov
mov
stos
dec
sahf
sbb
ret
dec
loopne
loope
jg
xlat
decb
daa
into
pusha
test
add
int
and
cwtl
or
pop
mov
shlb
bound
or
dec
andl
mov
xchg
mov
push
and
mov
fldenv
cs
mov
in
scas
push
cli
adcl
push
push
lret
or
popf
jo
sbbl
sbbl
cmp
inc
sti
lret
pop
mov
mov
xchg
jge
adc
cltd
inc
xor
push
inc
fucomi
push
inc
adc
and
sub
aad
out
pop
pop
fisttpll
out
enter
out
pop
sbb
mov
iret
les
adc
aaa
inc
jecxz
insb
jl
add
lods
xor
xorl
hlt
jle
inc
mov
mov
mov
loop
leave
xor
or
mov
xchg
sub
iret
dec
and
jns
add
xor
push
jl
xchg
xchg
mov
dec
call
cmp
shrb
std
add
xchg
add
lods
fimull
lods
mov
cld
xor
xor
sbb
push
call
dec
mov
clc
call
in
sar
inc
mov
xor
js
fdivr
cmp
imul
repnz
fs
ja
addl
mov
sti
mov
and
xchg
mov
jge
sbb
notl
test
mov
and
shll
mov
out
mov
movsl
sub
jbe
lods
xchg
pop
xor
into
inc
fdivl
in
ret
push
arpl
fidivrs
inc
pop
out
adc
push
rol
jp
sti
pop
in
sub
jecxz
imul
test
add
mov
mov
pop
push
loope
dec
test
adc
sbb
cld
testl
push
ja
enter
clc
push
sarb
rolb
ds
jnp
lods
mov
pop
sub
outsl
pop
and
cmpsb
in
out
pusha
shl
xchg
push
or
adc
or
inc
ds
jp
int
or
ret
std
jb
xchg
mov
js
fbstp
into
shlb
pop
inc
or
lods
inc
sbb
pusha
daa
or
bound
inc
sti
stos
decl
mov
rorb
inc
loop
clc
aam
frstor
xchg
in
cmp
mov
jmp
sbb
sub
in
and
mov
ja
int3
arpl
loop
shrl
lcall
adc
inc
arpl
cld
xchg
jge
push
mov
xchg
icebp
shlb
mov
push
subps
rorb
movsb
mov
rol
add
inc
popa
je
inc
iret
jle
fisubs
add
xchg
jae
jb
mov
shrl
dec
mov
cltd
ret
fldcw
or
xchg
mov
pop
aaa
cmp
cs
loop
adc
adc
out
or
lret
lret
cmc
sub
inc
in
sub
addl
mov
jae
sbb
das
sbb
sub
push
jbe
xchg
xchg
dec
jne
jne
int3
cwtl
add
inc
cmp
jecxz
push
mov
mov
jp
rorb
mov
shrd
fidivrl
lds
dec
add
daa
iret
dec
fcos
xchg
js
clc
cmc
inc
in
cli
add
mov
pop
es
stos
sbb
sahf
push
cmpsl
sbb
out
lahf
movsl
mov
sub
popa
mov
test
pop
push
out
mov
sub
cmp
divb
mov
fcmovnu
lock
ret
fs
sub
das
pusha
mov
call
popa
shll
sbb
inc
popa
cmp
lret
aaa
into
push
jae
inc
popf
mov
inc
gs
fnop
sub
jae
add
jne
dec
std
cmp
lds
mov
mov
jmp
rcrl
xchg
daa
pop
std
fstl
pop
cmp
and
pusha
fmul
xchg
cmp
mov
adc
push
mov
movsl
pushf
mov
in
jnp
pop
mov
loope
lods
jmp
sti
mov
lahf
jbe
push
sbb
enter
shrl
xchg
add
xchg
je
and
loop
into
enter
fdiv
mov
ret
das
xchg
pop
mov
aaa
repz
sahf
pop
mov
je
testb
xor
push
out
sbb
xor
movsl
mov
lcall
cwtl
stos
push
push
cmc
mov
loop
pop
pop
adc
lea
jmp
adcb
lods
xchg
and
and
leave
inc
leavew
cmp
shrl
call
or
xor
sbb
in
shrb
dec
pop
scas
cmpsl
orb
enter
inc
adc
repz
repz
sub
add
dec
pop
add
and
mov
shll
mov
adc
testl
gs
sbb
or
xor
sub
adc
mov
gs
xor
cmp
lcall
push
jne
adc
dec
rorb
inc
jnp
pop
jae
pusha
cmp
inc
les
fldenv
jecxz
nopl
das
xchg
push
lds
adc
mov
mov
xchg
mov
aam
mov
outsb
jle
mov
mov
xchg
es
cmp
mov
jl
lcall
and
icebp
adc
push
incl
jle
xlat
cmp
cwtl
and
dec
scas
add
dec
jmp
ds
xchg
mov
fadds
test
ja
sbb
sbb
sub
in
or
repnz
sub
push
mov
stos
insl
add
int3
adc
mov
push
jg
sub
iret
fdiv
lea
mov
xor
fldenv
shll
aas
sub
or
test
mov
jns
sbb
in
test
sti
xchg
imul
xor
aaa
jno
pop
mov
cmp
xchg
xchg
cmp
imul
mov
mov
xor
lcall
mov
scas
dec
pop
cs
or
xor
loop
xor
arpl
lea
push
jmp
aaa
sbbb
out
mov
pop
out
inc
sar
mov
aam
xchg
lahf
or
mov
movlps
xor
or
test
pop
fcomps
addr16
shll
push
out
test
or
sbb
shr
mov
sub
and
add
aas
cltd
sub
call
jmp
or
cmp
outsl
daa
loopne
jno
mov
dec
xchg
mov
insb
shl
push
repz
mov
sar
popf
pop
sbb
lods
imul
ja
lret
iret
pop
and
xor
mov
popl
sarl
cmp
mov
aad
data16
xchg
rcrl
test
dec
mov
and
mov
setg
clc
cmp
lods
sbb
aas
pop
add
clc
ja
lock
lods
sbb
scas
and
test
add
mov
enter
cmp
inc
lods
loope
dec
aas
push
int3
xor
mov
push
or
pop
clc
add
imull
fbld
arpl
jns
mov
nop
mov
sub
addr16
xor
mov
out
shll
repnz
and
js
push
xor
push
xchg
and
enter
subl
inc
loop
pop
dec
in
dec
in
pusha
push
mov
jle
sub
or
and
jns
or
loopne
dec
addr16
jnp
mov
inc
scas
mov
out
jno
movsl
mov
out
insb
sbb
jle
outsl
pop
xchg
rorb
jae
inc
xchg
mov
lds
dec
mov
mov
mov
adcb
pop
jae
iret
pop
jmp
les
stc
lea
addr16
hlt
xor
push
nop
push
xchg
push
mov
aad
cmp
mov
adc
cld
imul
sub
lcall
cwtl
mov
xor
and
cmpsl
jnp
pop
and
mov
cld
lock
inc
cmpsl
sub
mov
loopne
fisubrl
test
mov
or
movsl
lahf
mov
mov
cmp
in
jnp
cmp
lret
pop
cli
pushf
sbb
ljmp
sub
aam
fstp
call
cmp
lock
add
inc
andl
lret
test
bound
pop
mov
jge
ret
cmp
jo
cmp
jns
dec
pop
or
or
pop
xor
inc
lds
cld
outsl
scas
notl
pop
cmpsb
imul
jnp
jnp
mov
xchg
daa
rclb
aad
int
pop
fisttps
subl
aaa
je
cmp
xor
sub
and
xor
sbbl
aas
push
repnz
lods
mov
mov
pop
hlt
jecxz
jb
stos
jmp
iret
sti
in
dec
sub
cmp
leave
idivl
cmpsb
inc
sub
sbb
addr16
inc
xor
sbb
shrb
mov
cmpsb
dec
imul
jae
adc
lock
pop
sub
push
mov
shlb
sbbb
xchg
mov
out
sbb
mov
mov
mov
mov
std
xchg
mov
dec
repnz
test
imul
outsb
icebp
mov
push
fnstsw
repz
or
ret
fcompl
ljmp
outsl
pop
je
repnz
std
fdivr
lea
insb
subb
sbbb
call
sub
subl
xchg
add
ret
fists
or
pop
cmp
orb
or
mov
bswap
sub
cltd
lock
mov
cmp
aaa
shr
arpl
sahf
mov
daa
adc
fwait
jne
sub
xor
xchg
mov
adc
xchg
pop
sub
jmp
sbb
nop
fwait
ss
adc
daa
inc
lret
icebp
sbb
push
inc
rcrl
popf
scas
sbb
ljmp
lods
jle
xchg
sub
fwait
pusha
inc
inc
aad
in
push
xor
mov
int3
sbb
stc
mov
int
pusha
pop
fidivs
xchg
adc
push
xchg
jne
mov
xor
fimuls
int3
lea
out
mov
mov
xchg
xor
arpl
cltd
test
scas
insb
jl
cwtl
stos
xor
stos
scas
xchg
frstor
dec
loope
sbb
std
mov
rcrl
ret
inc
mov
cmp
mov
insb
or
dec
and
or
inc
inc
adc
test
fisubs
sub
jnp
loopne
mov
add
dec
icebp
fwait
xor
sbb
cmp
xchg
xchg
std
jo
outsl
fidivrs
xlat
cmp
lock
xor
idivb
in
push
int3
fildll
jle
and
scas
rorl
mov
addr16
repz
cwtl
push
test
cmp
cmpsl
mov
mov
cwtl
mov
xlat
ljmp
jmp
pop
outsw
iret
cli
scas
fnsave
dec
inc
les
out
jecxz
dec
pop
push
ds
ljmp
or
aas
lret
fwait
cmpsl
mov
mov
ja
sub
cmpb
or
stos
or
xchg
rorl
mov
lret
jecxz
out
xlat
addr16
xchg
fiadds
rorb
add
pop
dec
xor
stos
in
cmp
pusha
or
xor
shlb
testl
xor
push
jno
fdiv
cmp
sub
test
mov
aam
add
pop
push
xor
push
fnstenv
loope
jne
add
js,pn
jno
jle
and
sub
xchg
push
adc
fs
push
sub
repnz
imul
outsb
and
mov
mov
jle
and
test
shrb
jo
dec
push
cld
inc
notl
lret
loope
popa
push
paddsw
into
jno
sti
jmp
cmp
call
xchg
incb
add
mov
inc
insl
push
lods
xchg
cmp
xchg
lea
dec
or
xchg
lret
cld
and
jl
fwait
push
sbb
xchg
add
jno
fsubr
xor
sbb
dec
pop
fs
xchg
lods
sbb
mov
and
scas
mov
push
push
lods
outsl
dec
mov
mov
movsl
dec
jbe
out
and
repnz
inc
inc
jg
data16
pop
cmc
test
jb
sub
xchg
loop
fmuls
cmc
xor
mov
dec
sub
sub
or
popf
xor
ja
sub
loop
out
xor
mov
or
push
inc
pop
push
jbe
mov
inc
push
xchg
sarb
push
mov
out
scas
rcl
imul
mov
clc
push
cmpsb
adc
and
into
push
cld
push
xchg
ss
divl
lret
int3
adc
or
dec
push
mov
push
out
add
int3
cwtl
mov
and
in
push
mov
sub
iret
enter
jb
xchg
push
rcl
aas
mov
mov
andb
sub
jl
jmp
nop
xchg
stos
cmp
fsub
push
sbb
xchg
xlat
imul
xchg
pop
setb
add
bound
xor
cmpsl
test
jge
inc
pop
out
mov
rolb
mov
mov
add
pop
orl
dec
mov
and
jne
shrb
ds
adc
mov
hlt
dec
stc
adc
cmp
jo
jg
sbb
cs
cmpsl
adc
mov
mov
add
xchg
das
mov
push
mov
fsts
push
je
and
sub
lods
int
js
daa
inc
push
and
hlt
and
inc
jnp
dec
jns
test
imul
call
cmpsb
ss
int3
jmp
js
enter
cwtl
or
mov
mov
loope
push
aas
pop
jb
mov
std
mov
push
test
les
popf
pusha
pop
xchg
fcomps
mov
iret
stos
data16
inc
add
movlhps
test
jno
loopne
dec
repnz
call
adc
jno
jmp
repz
dec
cmp
jp
fsubp
xchg
mov
lret
jge
data16
stos
pop
jecxz
insl
mov
add
pop
mov
inc
cmpsl
add
cmp
jnp
xor
mov
jmp
lds
jp
pop
repz
fwait
sub
inc
lds
xchg
inc
jne
stos
out
out
lock
inc
outsb
adc
xchg
pop
mov
lret
jmp
sbb
jle
inc
leave
xchg
jp
jle
inc
cmp
inc
popa
pop
pop
jmp
loop
stos
outsl
ds
std
jns
lea
jp
cmpsb
xor
add
xor
mov
pop
jg
cmp
cmp
adc
add
cld
pop
repz
out
push
xchg
jo
and
dec
rorb
sbb
or
and
cli
and
mov
loopw
cltd
xlat
jp
mov
xchg
xchg
jmp
in
cs
sbb
and
pop
pop
lret
xchg
mov
mov
pop
pop
jns
or
mov
xor
insl
jp
lock
lahf
lods
mov
pushf
pop
sub
cmc
mov
pop
fildll
out
cmp
cmp
ret
loopne
call
cmp
push
dec
into
xor
ss
inc
std
fistpll
scas
add
arpl
pop
sub
or
jp
add
cwtl
orb
nop
adc
push
or
dec
mov
mov
mov
icebp
int
scas
mov
or
mov
add
movsl
push
les
lcall
sbb
mov
jle
sub
lret
insb
sub
inc
or
mov
fiaddl
add
fisubl
xchg
dec
mov
jbe
xchg
xchg
mov
or
lcall
inc
data16
int3
xor
adc
popf
mov
lahf
scas
inc
es
rorb
enter
pop
test
out
adc
mov
dec
lahf
mov
in
clc
ffreep
inc
inc
xor
pushf
or
sti
pop
movsl
sub
in
loopne
mov
mov
arpl
fstps
adcl
fmul
pop
lahf
lock
cltd
and
lds
jle
sub
sbb
or
adc
push
jo
fadds
arpl
loope
inc
push
pop
push
push
jnp
xchg
add
or
aam
lret
cmc
jle
lods
imul
mov
pop
lods
mov
cmpsb
lock
lods
fcmovne
movsl
xor
push
ljmpw
test
and
loop
mov
fisubl
addr16
lret
leave
mov
mov
cltd
in
arpl
jnp
xchg
nop
inc
outsb
add
adc
adc
mov
andl
xchg
cmp
xchg
imul
fs
out
and
inc
jbe
xor
mov
addl
jae
gs
fwait
popf
jge
cwtl
xchg
xor
dec
mov
iret
aaa
jbe
sbb
dec
mov
cld
jns
xchg
jae
push
movsl
sbb
pop
les
out
mov
in
or
push
xor
push
popf
pop
mov
jnp
and
sub
daa
inc
adc
mov
pop
xor
out
test
jle
cmp
or
leave
xchg
mov
je
jg
jecxz
xchg
dec
scas
int
stos
push
dec
in
mov
ret
add
loop
push
ret
jg
fisttpl
mov
cwtl
push
inc
lret
cmpsb
outsl
movsb
inc
pop
out
cs
jecxz
lds
orb
jb
adc
jl
daa
daa
sbb
sbb
and
stc
movsb
push
rcl
ds
lcall
fucomi
add
sbb
push
or
mov
test
xchg
mov
xchg
lahf
decl
je
push
cmpl
jp
fdiv
fadd
sahf
xor
ljmp
xlat
xor
pop
mov
xor
sbb
dec
xchg
movsb
aas
dec
fnsave
in
cmpsb
gs
dec
inc
sub
roll
insl
push
daa
inc
fdivl
movsb
inc
imul
popf
push
mov
mov
das
jne
inc
push
dec
out
mov
cld
sub
xchg
inc
adc
push
cmp
stos
push
or
cli
or
pop
rcll
clc
push
in
add
inc
jg
mov
pop
std
xlat
mov
mov
sbb
push
lock
jnp
push
mov
lea
add
in
pop
hlt
loope
dec
loopne
jnp
icebp
je
addr16
cmp
xchg
push
jno
mov
push
outsb
cwtl
bound
dec
mov
cmpsl
cmp
mov
jle
jbe
mov
mov
lods
js
sahf
xlat
sahf
xchg
jno
ds
mov
cmp
movsl
in
add
push
out
add
inc
or
mov
ss
stos
jmp
ss
inc
sbb
lds
notl
test
arpl
cmp
push
inc
sbbb
imul
xchg
adc
shll
out
mov
test
imul
mov
push
lret
push
ja
push
out
inc
jmp
out
xor
movsl
jne
add
scas
rcr
adc
sbb
mov
xor
mov
sub
jbe
arpl
dec
jnp
aas
or
test
inc
repz
jmp
jg
sub
out
push
jnp
jae
pop
cmpsb
mov
ljmp
inc
lahf
and
jmp
aas
mov
cmpsl
mov
fldt
daa
enter
mov
test
out
les
jp
daa
andl
sti
insl
jns
mov
sub
sbb
scas
xchg
aaa
mov
adc
leave
and
scas
insb
jmp
je
or
sbb
insb
shlb
push
outsl
sbb
pop
xchg
scas
imul
and
sbb
or
lcall
lahf
mov
test
mov
fnsave
cmp
arpl
int3
push
or
bound
xchg
ljmp
stos
sub
pop
sbb
aas
add
xor
mov
mov
fisubs
cmp
add
push
push
cltd
add
lcall
xor
test
fisubrl
jmp
je
xor
out
pop
dec
adc
imul
mov
lds
lret
xchg
and
push
or
push
mov
int
insl
sbb
xlat
xchg
pop
jne
mov
pop
mov
imul
inc
add
arpl
jns
fmuls
xchg
dec
ss
and
fistl
and
std
sub
sbb
ret
pop
scas
mov
push
ss
inc
cmpsb
mov
std
scas
or
arpl
cld
push
dec
fs
fisubl
adc
pop
in
and
rclb
sub
jge
das
arpl
sub
adcl
test
sar
aam
or
fiaddl
xor
adc
out
sti
inc
cmp
in
or
cmp
push
xchg
pop
testl
cmp
cmpsl
test
data16
fidivrl
sarl
inc
sbb
lcall
cwtl
testl
popf
popl
int
test
nop
jbe
xchg
sub
xor
mov
mov
jns
or
cmpl
mov
sbb
pusha
jmp
in
mov
aas
add
cld
xor
aas
xchg
push
and
mov
mov
cmp
or
dec
mov
loope
hlt
mov
mov
push
pop
mov
popf
sbb
xchg
inc
add
jg
jl
iret
in
push
popf
sti
leave
ficompl
enter
jl
pop
imul
dec
push
repz
repz
decb
and
lea
jmp
int3
jecxz
or
stc
ss
mov
pop
pop
nop
stos
nop
pop
mov
push
scas
bound
jnp
mov
add
jnp
and
leave
outsb
jl
or
inc
std
mov
outsb
push
call
cmc
es
mov
lret
repz
adc
aaa
dec
cli
xchg
mov
aam
test
jp
mov
mov
sbb
inc
cld
cmp
aaa
push
popa
outsb
jbe
xchg
xchg
inc
jecxz
cmp
dec
mov
mov
jb
clc
fdivrl
and
add
nop
inc
fstpl
lods
rcll
jge
movsb
lods
and
sbb
sbb
cmpsb
sub
pop
dec
adc
sub
jmp
aas
mov
cmpl
lcall
ljmp
loop
shrb
sarb
xchg
xor
pop
push
punpckhdq
sbb
ret
hlt
sub
push
popf
and
iret
or
and
cwtl
lods
inc
push
mov
push
mov
sub
repz
negb
xor
adc
loope
lcall
in
push
xlat
xchg
fcomi
ret
mov
popa
mov
shll
icebp
fnstcw
jb
or
cli
and
cld
push
out
jmp
jne
jb
jae
iret
sbb
xchg
and
and
or
push
and
ret
cmpsb
lret
mov
push
mov
nop
lods
adc
mov
push
mov
or
in
and
adc
mov
popa
cmp
test
jecxz
and
int3
je
push
ds
or
mov
test
and
data16
pusha
rcll
int
push
aaa
xor
cld
push
daa
adc
lods
dec
or
iret
test
push
lea
inc
push
ja
push
popf
pop
push
pop
out
pop
mov
fs
test
push
sub
mov
push
inc
fisubrl
out
gs
mov
in
test
loope
xchg
pushf
adc
and
add
ja
enter
arpl
mov
fdivl
lea
xor
daa
out
adc
pop
lret
or
ret
xlat
and
jnp
or
ja
push
leave
mov
pop
xlat
dec
das
mov
inc
repz
inc
test
leave
arpl
pop
jecxz
ret
sbb
addr16
nop
enter
test
inc
aas
pop
mov
xchg
sub
dec
shl
push
shr
push
mov
stos
xchg
xchg
pop
jg
pop
cmp
mov
add
sub
jae
das
mov
cltd
xchg
fsubrl
or
stos
xor
or
stc
lcall
rcr
xor
mov
jne
mov
cmp
fisubs
test
lock
jecxz
push
xchg
add
lcall
sahf
cld
jg
stos
rorb
mov
dec
jae
lcall
and
arpl
fsubl
xchg
arpl
sbbb
movsl
paddd
mov
xorl
arpl
insl
sahf
jne
aam
adcl
repnz
cmp
push
push
adc
nop
xor
sbb
mov
sbb
inc
inc
jne
xchg
push
fistps
mov
sub
shll
sahf
dec
pop
aam
jb
dec
adc
fldenv
mov
jge
dec
mov
mov
bswap
mov
mov
int3
test
lahf
out
push
fidivl
ret
dec
cwtl
das
cmp
cmp
aam
in
mov
jg
es
or
xchg
push
sub
xor
push
mov
mov
cmp
xor
ljmp
or
push
mov
lret
insl
adc
adc
push
xor
cmp
in
mov
adc
xchg
xor
ja
rorl
inc
sub
dec
add
inc
jne
ljmp
cmpsl
clc
iret
push
dec
adc
xlat
xchg
loopne
sahf
stc
sti
loope
sbb
push
arpl
outsl
xor
addr16
das
testb
test
or
xlat
imul
inc
push
cmpsb
sub
iret
push
repz
jnp
loopne
and
push
cwtl
mov
ljmp
cmp
sbb
xor
ja
orl
dec
in
mov
call
mov
and
andl
pop
popf
stc
pop
pop
aas
loope
sti
lea
repnz
outsl
inc
mov
sbbb
mov
dec
jo
xor
dec
xchg
mov
xchg
fstpt
adc
cmp
mov
or
scas
pusha
jmp
fidivs
xchg
sub
jae
fldcw
nop
pusha
mov
xchg
mov
inc
aad
jno
stc
adc
jle
sbb
dec
inc
push
cmc
test
loop
inc
idivl
lea
dec
loopne
dec
or
cmpsb
es
push
inc
sub
xchg
xchg
loop
xchg
sbb
dec
cli
xchg
adc
stos
sbb
jbe
adc
mov
std
jo
loop
and
lods
call
mov
and
jae
xor
sbb
adc
mov
fbld
xor
clc
mov
xor
sbb
int
or
lods
cmp
insb
push
cld
dec
pop
nop
cmpsb
dec
loopne
mov
pop
jp
dec
out
negl
inc
imul
aas
popl
popf
push
xchg
fs
mov
scas
cmp
xchg
es
lds
cmp
pusha
inc
rcrb
sub
jne
nop
mov
pop
sub
repnz
sahf
lods
sbbl
jne
mov
movsl
addr16
pop
out
dec
outsb
repnz
lahf
test
push
leave
in
jnp
and
popa
aas
mov
fcmovbe
xchg
fs
aam
xchg
leave
push
daa
loop
shlb
jge
dec
repz
mov
loope
xor
xchg
insb
out
add
mov
xchg
idiv
jae
xor
je
cmp
add
add
pop
xchg
rcl
data16
mov
repnz
push
adc
mov
dec
mov
js
iret
sbb
stos
scas
push
lods
push
out
xor
popa
adc
sbb
sahf
xor
aas
in
jge
sub
xor
sbb
roll
xor
outsb
addr16
lods
cltd
imul
fisubs
js
lods
mov
cmpl
adc
add
dec
push
pop
ljmp
mov
add
mov
je
adc
adc
xchg
pop
mov
popf
pop
push
xchg
and
jecxz
xchg
add
mov
sub
cmp
pop
in
cli
jne
nop
shlb
daa
inc
sbb
or
push
ss
fimuls
es
or
mov
mov
hlt
mov
hlt
js
jmp
hlt
aad
mov
arpl
push
jb
jg
je
mov
iret
push
jae
sti
lret
mov
sub
sbb
test
jmp
imul
mov
inc
push
sub
sub
sub
sbb
mov
push
shrl
stc
test
in
mov
add
mov
shlb
cmp
lock
add
out
dec
dec
cli
lcall
decb
in
pop
pushf
cli
xchg
mov
xchg
push
sbb
cwtl
test
movsl
js
push
pop
adc
jecxz
pop
mov
mov
fs
das
fdivs
sti
xchg
jge
inc
mov
inc
imul
out
pop
mov
sbb
and
lods
mov
dec
fsubrp
subb
aas
or
adc
push
dec
cli
adc
sub
into
gs
ret
scas
in
xorl
cmp
or
dec
xor
mov
imul
jnp
enter
rcrb
int3
and
inc
xchg
jle
inc
stos
cmp
lahf
ret
mov
jmp
outsb
fimull
ret
out
into
cmpl
sbb
addr16
mov
cltd
sub
pop
arpl
ja
aaa
outsl
push
aaa
mov
pop
xor
loopne
xchg
mov
sbbl
or
dec
add
orb
cmp
js
sbb
out
dec
inc
sbbb
xchg
mov
mov
mov
mov
push
int3
push
adc
push
out
scas
repz
sub
mov
test
cmp
or
stos
inc
sbb
sbbb
lret
push
add
gs
std
push
lods
jg
dec
push
fisubrs
or
repnz
mov
inc
lods
movsb
push
xlat
ds
outsl
xor
arpl
sbb
in
lea
imul
out
adc
or
dec
xor
hlt
das
aaa
and
pop
fstpt
xchg
sbb
pusha
out
pop
sbb
daa
cmpsl
ss
ficompl
jne
push
into
orl
xor
popa
or
imul
arpl
sub
xor
adc
jo
push
popa
ret
arpl
add
sub
jno
jmp
jno
xchg
sub
je
push
mov
jge
movsb
cld
rorb
xor
cwtl
cmpsl
sbb
fyl2xp1
pop
adc
je
dec
data16
mov
shrl
and
adc
xor
ret
xor
mov
dec
aad
in
fnstsw
dec
fadds
push
inc
dec
cmp
mov
outsb
in
mov
xchg
xor
push
mov
cmp
loopne
sti
xchg
cmpsw
and
adc
jp
xor
push
shl
add
inc
fldcw
pushf
xor
jl
pop
loopne
dec
cmp
scas
pop
rorb
fmull
pop
test
test
shlb
popf
adc
dec
push
pop
pop
inc
int
inc
fwait
lods
loopne
sub
mov
inc
sti
and
mov
int3
data16
adc
jno
lods
or
mov
inc
pusha
xor
cmp
sbb
imul
or
sub
mov
jnp
or
push
push
ja
loope
arpl
push
inc
or
out
fisubl
mov
or
mov
clc
pop
mov
enter
loopne
rcrb
mov
in
cs
mov
sub
sub
xchg
mov
insl
or
aaa
cmc
mov
jnp
jo
rcll
sbb
in
movsl
je
dec
in
jle
push
sub
inc
subl
sbb
mov
inc
cmp
ficoml
sbb
divl
cmp
fiaddl
or
xor
daa
scas
jo
sbb
dec
inc
mov
shrb
add
out
cli
lea
test
fadd
fadd
and
repnz
xorb
fnsave
insb
sub
movsb
and
int
movsb
jbe
pop
test
mov
adc
cmp
iret
mov
mov
xlat
insb
push
je
cmpl
rorb
movsb
test
dec
leave
out
aad
ljmp
xchg
dec
inc
dec
outsb
lea
flds
xchg
pop
dec
in
pushf
inc
mov
in
imul
add
cmp
nop
lds
cmpsl
mov
mov
mov
movb
jbe
popf
sbb
sub
jne
pop
stc
inc
inc
adc
xchg
into
sbb
jmp
ja
mov
mov
testb
addb
dec
cmp
lahf
sbb
mov
pop
icebp
sub
and
inc
dec
mov
jb
xor
cmp
mov
or
insb
mov
xchg
mov
push
iret
cmp
add
pop
icebp
push
std
movsb
push
test
js
push
jne,pt
ljmp
cs
sbb
add
aaa
mov
stc
adc
push
push
lock
test
jae
test
jns
pusha
movsb
call
jo
cmc
popa
nop
daa
xchg
push
sbb
insl
lock
push
into
jmp
shrb
jl
add
subb
loope
cmpsl
dec
mov
add
push
sub
jb
xor
and
add
call
mov
in
clc
fwait
rol
pop
add
jbe
jl
fisttps
ljmp
out
cmpsl
jae
push
out
adc
xchg
mov
repnz
sbb
xor
fisttps
adc
xor
xor
jl
pusha
add
mov
mov
jl
cmp
cmp
mov
and
add
inc
popa
clc
sub
pop
pop
ja
sbb
cmc
fisttps
mov
xor
adc
mov
incb
cltd
mov
int
cmc
sub
mov
inc
lock
and
outsb
stc
cld
lds
sbb
cmpsb
jmp
int
inc
push
clc
inc
stos
push
inc
sub
lret
xor
lcall
cli
fsubrs
mov
scas
mov
mov
repnz
in
add
xchg
sti
xchg
enter
dec
pop
dec
popa
mov
in
cmpsl
sub
fdiv
mov
fdivs
insl
add
jae
mov
lahf
dec
test
aam
loope
clc
adc
inc
sarb
xchg
pop
scas
flds
cmp
cmpsb
dec
je
jnp
jnp
clc
daa
xchg
mov
adc
mov
push
and
or
mov
push
lret
stc
stc
jmp
lock
and
stc
loopne
xchg
sub
mov
arpl
mov
repz
arpl
leave
std
repnz
std
push
pop
sub
and
jo
repz
mov
inc
push
cwtl
jne
lcall
dec
adc
push
mov
or
jecxz
adc
add
lods
cmp
call
imul
popa
pop
mov
out
int3
sub
dec
pop
cltd
mov
cmp
rorl
test
lret
xor
jnp
scas
xchg
mov
test
add
sbb
mov
das
push
lds
std
ficomps
decl
imul
pavgb
ja
inc
jl
jp
xchg
imul
repnz
std
aam
sbb
fldl
or
push
fbld
jg
pop
insl
xchg
test
hlt
cmpsb
inc
js
cmp
or
pavgb
lds
shl
dec
mov
repz
ret
jns
shlb
insl
je
dec
push
mov
test
sbb
shrl
pop
lahf
icebp
sub
adc
jbe
test
mov
xchg
add
cmp
pop
repnz
shll
push
iret
inc
adc
mov
js
loope
scas
nop
in
sbb
or
dec
mov
loope,pt
xor
cmc
dec
sub
sub
xchg
data16
xchg
cltd
fwait
lock
cld
nop
dec
adc
adc
sbb
paddd
inc
push
xchg
push
out
data16
repnz
in
dec
mov
mov
rorl
neg
inc
push
adc
xchg
lret
add
dec
shrb
mov
add
jne
imul
enter
jmp
sti
nop
push
jb
xchg
fdivs
mov
inc
push
negb
inc
int3
loop
ret
subb
test
inc
push
in
lods
ret
and
mov
mov
shrl
jp
xchg
jno
dec
pop
push
push
and
aas
inc
cmpsb
cmp
and
out
add
and
xchg
jle
or
or
xchg
jmp
mov
outsb
movsl
addb
int3
add
ss
sub
or
xor
cmp
or
cltd
jl
inc
jg
test
popa
pop
adc
dec
mov
push
in
jne
mov
adc
push
sub
test
insl
adc
jg
mulb
xchg
data16
rcrl
fld
mov
pop
icebp
jne
out
sahf
sub
stos
mov
add
pop
shrb
jbe
push
push
xchg
mov
inc
fs
pop
inc
fcomi
xchg
loopne
bound
jle
adc
xor
enter
lea
or
add
mov
inc
dec
popa
pop
mov
push
sub
cmp
cmp
arpl
add
mov
jge
inc
cwtl
out
inc
outsb
jl
mov
pop
ljmp
jno
js
int
stos
mov
inc
jbe
into
jmp
mov
cld
inc
lcall
or
jmp
adc
cltd
iret
mov
adc
jge
add
mov
hlt
mov
push
insb
call
jae
pop
mov
gs
add
cld
hlt
mov
test
mov
lahf
mov
shlb
add
lahf
inc
inc
xlat
mov
mov
or
lods
arpl
or
xor
push
or
mov
sub
leave
in
dec
push
ja
mov
pop
loopne
movsl
icebp
or
fisubl
sbb
xchg
adc
sbb
es
cmpsl
stc
adc
cmpsb
jae
fcoms
inc
inc
outsl
jg
sub
add
mov
jno
dec
sahf
roll
mov
je
std
test
aam
push
push
rolb
push
fs
mov
popa
pop
inc
push
pop
mov
mov
loope
push
jb
cmc
lret
mov
or
mov
in
das
std
sbb
lods
and
dec
add
lahf
daa
out
mov
sub
jg
inc
jae
cmp
and
and
dec
mov
imul
pop
imul
test
inc
hlt
or
adc
dec
out
jnp
adc
mov
into
push
jge
xlat
sbb
gs
adc
push
popa
mov
sub
jno,pt
push
fidivl
test
loopne
fs
cmp
aam
jnp
cmpsl
inc
insl
jp
mov
push
cmpsl
inc
push
imul
arpl
jbe
adc
mov
push
lcall
insb
jmp
push
repnz
loop
mov
nop
daa
rorb
fisttpll
je
jp
int3
aam
fisubrs
cmp
fs
js
cmp
dec
sbb
loope
and
mov
leave
mov
mov
mov
and
ficomps
icebp
outsb
sub
mov
mov
lahf
in
inc
sbbl
push
xchg
xchg
push
ljmp
lds
pop
inc
adc
xor
js
xchg
mov
adcb
sti
push
jmp
mov
jo
sar
xor
or
iret
loop
and
dec
push
inc
dec
orb
andb
mov
xchg
sbb
sahf
enter
inc
scas
sahf
xor
pop
add
leave
out
je
push
loopne
sbb
dec
out
jg
fdivrp
pop
or
int
jae
xchg
xor
shll
xchg
xchg
test
push
lahf
js
clc
out
movsb
aas
int3
push
adc
movsb
add
scas
loop
frstor
int3
fdivrp
adc
test
adc
xor
sahf
push
shl
mov
dec
cmp
je
ss
or
push
jbe
push
add
clc
xchg
icebp
stos
flds
fsubrs
mov
mov
or
and
dec
lahf
mov
mov
pop
or
pop
ret
adc
xrstor
or
lret
xchg
pop
sub
xchg
sub
pushf
sahf
cmp
add
cs
out
cld
and
add
scas
add
mov
sub
clc
push
or
xchg
mov
scas
in
out
incl
mov
dec
pop
fmull
in
push
daa
adc
mov
adc
sbb
jo
mov
sbb
mov
and
xchg
popa
out
sbb
ret
sarb
jle
dec
mov
arpl
mov
adc
stos
xchg
mov
pop
mov
imul
int3
pop
cmpsl
int3
adc
inc
aas
lahf
xor
rcrb
push
and
and
mov
pop
mov
push
add
push
cmp
in
test
icebp
lahf
fsts
xchg
mov
pop
cmp
clc
cltd
inc
stos
insl
ds
xchg
xor
pushf
push
sbb
sbb
lcall
mov
xor
lret
in
mov
addr16
push
insb
xor
jb
or
outsl
outsl
jb
mov
cmpsl
testb
ds
frstor
mov
xchg
sbb
ja
lret
test
xchg
dec
xlat
mov
jg
xchg
cmp
pop
inc
arpl
iret
aaa
or
test
dec
and
xchg
insb
mov
es
std
push
outsl
ror
mov
push
pop
imul
ss
fcompl
push
loop
test
shlb
jno
xor
add
cmp
into
xchg
not
out
cmp
mov
ss
ret
lcall
sbb
dec
cmp
sarb
sub
pop
pop
shlb
into
fs
int3
mov
lea
xchg
xor
push
jne
in
sbb
hlt
xchg
loop
pop
sub
das
and
std
out
cmpsl
jae
mov
xchg
ds
sub
out
cmp
mov
xchg
add
push
outsb
push
sub
push
in
inc
or
xor
push
jno
sub
push
mov
or
outsb
dec
xchg
loopne
xchg
sbb
bound
mov
inc
scas
sbb
outsb
sub
mov
push
or
pusha
pop
mov
add
ja
cmp
mov
sbb
and
test
popa
add
pop
and
mov
ret
inc
imul
xchg
mov
jp
mov
out
sbb
ret
sbb
fidivrl
subb
cli
cmp
push
push
jecxz
cltd
pop
xchg
aas
jb
insl
jbe
lea
pop
out
or
fidivrl
sbb
add
sub
mov
test
addr16
add
lahf
sti
push
pop
aaa
loope
out
adc
cmpsb
or
or
pop
sahf
rorl
fnsave
and
jmp
cmp
fisubrl
ja
inc
cmp
pop
xchg
roll
out
pop
push
push
lods
les
or
movsl
jne
pop
cmpsl
push
mov
js
mov
sbb
dec
add
mov
fcmove
pop
adc
dec
cld
dec
add
sar
lods
inc
int3
sbb
xor
xor
dec
into
mov
ret
in
leave
adc
add
fs
scas
xchg
cmp
jmp
pop
mov
or
lods
add
nop
out
clc
sub
stos
dec
sarb
pop
test
shrb
add
mov
in
ret
dec
inc
push
or
add
outsb
adcb
pop
dec
test
stc
cmp
loope
mov
imul
clc
jne
popa
js
xchg
jle
insl
mov
jle
xchg
xchg
sbb
inc
mov
sbb
daa
repz
adc
pop
cs
sti
cltd
loope
pop
sarl
pop
cmc
cmp
pop
rolb
enter
sbb
pop
and
adcl
lock
ds
sub
jp
xor
fsubrs
ja
jmp
pop
mov
ss
std
or
lcall
out
mov
xor
jecxz
mov
lock
shll
xchg
add
push
out
mov
subl
mov
and
push
cmc
and
fcoms
dec
arpl
push
mov
insb
lea
jo
loope
mov
cmpsl
out
sub
mov
cld
int
adc
sbb
faddl
adc
in
inc
mov
fldpi
mov
shlb
jp
mov
push
or
xchg
fs
xor
sbbb
add
xchg
lahf
faddl
fistpl
pop
sbb
push
aas
sub
nop
pop
aad
mov
mov
inc
jmp
icebp
xchg
jg
xor
jmp
mov
std
subb
mov
sbb
fisubrl
int3
xchg
mov
push
clc
dec
imul
cltd
cwtl
loopne
mov
sbb
out
inc
jmp
movsb
xor
xchg
test
pop
mov
pop
outsl
inc
pop
cmp
mov
fisubs
popa
dec
je
sbb
push
hlt
inc
jno
flds
scas
fbstp
adc
add
adc
xchg
bound
inc
push
pop
fldt
xor
xor
jbe
lods
fcoml
repz
insb
or
push
inc
test
push
das
aaa
ret
sbb
rclb
push
insb
xlat
aaa
loopne
retw
xor
scas
bndstx
repnz
out
push
in
mov
rolb
lock
outsb
lods
xchg
xchg
lods
into
and
mov
push
fsubrl
movsl
mov
mov
push
xchg
dec
lods
xorl
adc
ds
xor
fsubl
dec
rcll
leave
xchg
std
pop
ja
dec
gs
mov
iret
and
inc
xor
cltd
inc
mov
stos
jmp
inc
push
test
mov
insl
test
ja
ret
lods
push
or
dec
and
sbbl
testl
push
jb
and
push
add
xchg
add
xor
cmp
mov
in
sub
incl
aaa
sahf
inc
stos
mov
push
push
mov
adc
outsl
mull
aad
pop
cltd
mov
pop
and
inc
daa
add
rcll
mov
mov
xor
jge
dec
lcall
jmp
stos
rorb
enter
sbb
cmp
mov
jg
xor
fsts
jns
jae
cltd
mov
scas
in
pushf
sti
and
mov
pop
das
and
scas
and
pusha
int3
sarb
mov
cli
shlb
mov
fs
mov
movsl
xor
pop
mov
mov
cmp
pop
cmpsl
loop
popf
fistl
pop
jl
cmp
mov
fldenv
int3
mov
lock
cli
adc
pop
movsb
sbb
sti
dec
sub
pop
sub
dec
mov
mov
jae
insb
js
xchg
iret
mov
gs
test
clc
jp
cmp
sarb
test
mov
ljmp
mov
int
dec
push
mov
mov
aam
mov
inc
push
or
and
sbb
iret
cwtl
nop
insb
and
adc
pop
sub
and
mov
mov
jnp
daa
ret
pop
cmp
xchg
sub
into
sub
or
add
out
repnz
aaa
mov
aaa
jbe
lock
aas
in
scas
roll
out
dec
out
cmpsl
push
out
cwtl
incb
stos
das
fwait
lret
call
or
bound
or
popa
cli
adc
aaa
inc
pop
movsl
inc
xchg
fs
jp
xchg
mov
loop
and
pop
xor
pop
mov
pop
dec
inc
imul
sub
cmp
mov
out
outsb
aam
sarb
mov
inc
in
sub
ret
dec
xor
jo
fcmovnbe
jmp
lret
mov
bound
cmp
fsubrp
pop
leave
lcall
jmp
popf
in
loope
in
adc
mov
jg
cwtl
cmp
in
pusha
jle
push
push
cltd
sbbl
xchg
lods
inc
dec
pop
mov
sub
shrl
cmp
pop
popf
mov
daa
adc
pop
inc
fimuls
add
cwtl
mov
ficompl
sbb
lods
push
inc
mov
and
jecxz
sbb
mov
cmc
movsl
jge
sahf
and
push
call
xor
cwtl
sub
sbb
pop
aad
jae
inc
lcall
adc
sbb
dec
in
in
dec
lcall
jb
into
es
inc
lds
mov
mov
jle
inc
pop
add
jns
add
enter
insl
jle
dec
scas
subl
insb
dec
adc
add
sar
and
adc
loop
pushf
imul
loope
mov
dec
jecxz
lea
mov
push
sub
test
jb
test
pop
movsb
in
or
cmp
pop
rcl
sbb
xchg
and
mov
or
xchg
scas
mov
in
cmc
cmp
sar
repnz
sub
cltd
xor
fdivp
out
dec
das
mov
pop
lock
pop
insl
mov
inc
hlt
mov
in
or
cmp
add
inc
ljmp
das
pop
mov
push
sbb
mov
pusha
clc
orl
sbb
adc
sbb
add
ret
std
sub
sbb
or
clts
icebp
cmpsl
hlt
mov
adc
jmp
aaa
je
jo
push
xor
dec
jle
cmp
lock
sub
pop
push
jae
rcrb
hlt
mov
shll
or
and
nop
stos
inc
and
into
call
pushf
mov
mov
outsl
push
push
adcb
pop
repz
xchg
inc
dec
inc
push
fbstp
lahf
and
addr16
jbe
in
fwait
lods
ret
mov
xchg
and
mov
sub
shlb
jle
push
ljmp
jno
sbbl
push
sub
das
hlt
xor
cli
and
sub
inc
dec
inc
adc
loopne
idivb
fistps
push
fadds
jo
jnp
invd
stc
inc
dec
add
mov
sbb
dec
adc
or
pop
or
push
cwtl
jp
pop
sub
inc
rorl
pop
cli
sub
pop
lds
cmp
dec
xor
popa
or
arpl
xor
dec
imul
mov
or
push
cs
jnp
sub
sbb
and
lret
aas
es
mov
push
loopne
mov
pop
xor
cmpl
fsubp
inc
pop
fisubs
outsl
inc
in
insl
mov
fwait
mov
inc
pop
jne
add
push
mov
jge
mov
push
xor
out
adc
jbe
xor
adcb
imul
in
lahf
sti
popf
jb
subl
pop
je
fld
clc
test
aad
xor
xlat
testb
pop
sbb
movsb
pop
je
shll
inc
mov
cwtl
lods
sarb
pop
xorb
pop
pop
icebp
xchg
or
xor
mov
repz
mov
cmpsl
push
xor
bound
pop
xchg
popa
sub
or
mov
cmp
push
mov
decb
push
mov
inc
sub
jns
or
mov
aad
sbbl
xchg
xchg
insl
sub
cmpsb
sbb
rorb
arpl
pusha
dec
and
ret
pop
mov
or
addr16
insb
mov
add
test
and
test
outsl
out
test
or
test
or
jae
test
repz
inc
lcall
lods
jmp
push
enter
stc
dec
push
cmp
nop
jp
out
xlat
clc
fldt
inc
or
dec
ret
and
aaa
or
inc
xchg
rol
adcb
sbb
adc
mov
rcrl
pop
xor
jp
es
mov
xchg
xchg
mov
push
sbb
push
adc
popa
in
sub
adc
jno
enter
xchg
sbb
and
divl
xor
shrl
sbb
popl
in
rcll
js
mov
mov
pop
mov
dec
scas
inc
pushf
cmpl
push
xchg
jno
call
or
je
push
insb
jne
repnz
movsl
std
adc
xchg
rcr
sti
jbe
sub
clc
adc
sub
mov
repnz
add
fisubrl
mov
inc
add
es
and
xchg
outsl
sbb
sbb
or
jmp
dec
xlat
out
pop
dec
cmp
pushf
xor
scas
aaa
cmp
cmc
in
cmp
loop
dec
enter
pinsrw
popf
aas
dec
mov
xchg
dec
xchg
mov
fnsave
sbb
iret
sbb
jl
aad
xchg
out
and
adc
mov
push
dec
push
in
test
lret
jg
or
in
mov
ja
daa
push
sub
dec
xchg
dec
rcrl
mov
sbb
dec
jae
mov
push
jbe
dec
fidivrl
jle
or
sbb
rcrl
lock
out
pop
jle
sbb
dec
or
cmp
inc
inc
repz
sbb
into
or
dec
jge
shr
lds
or
inc
inc
push
icebp
sbb
mov
xlat
adc
outsb
jp
icebp
adc
ror
in
mov
mov
imul
mov
rcl
aaa
mov
lcall
inc
stc
je
pop
or
xchg
pop
push
xor
cld
xchg
shll
lret
js
xchg
sub
mov
sahf
lods
dec
xchg
in
inc
jno
mov
cltd
jb
inc
pop
sbb
xchg
test
pop
pop
push
cltd
push
pop
mov
cmp
and
sahf
fnstsw
inc
or
mov
push
sbb
lret
rclb
in
je
divl
mov
xchg
and
js
shrl
pop
and
xchg
int3
rorb
fisubs
aad
pusha
or
outsl
and
mov
loope
jle
dec
pop
adc
xchg
push
movsb
mov
in
sti
loopne
repz
cld
mov
adc
dec
or
aaa
push
add
sbb
jmp
xor
inc
scas
ret
out
inc
xchg
shrb
jge
inc
imul
test
fsubrp
sub
andb
cmp
cmp
jae
jmp
inc
in
icebp
bound
mov
scas
fcom
andl
imul
push
or
popa
ret
lea
xor
xchg
incb
popa
pop
cltd
push
jp
fsubr
jl
pop
scas
xchg
mov
mov
inc
xlat
aas
fmull
sub
hlt
ja
jo
mov
psubusw
pushl
test
sarb
das
add
mov
adc
xchg
push
cmc
std
mov
jge
push
jge
jb
loopne
sbb
add
insb
in
push
ds
out
xchg
sub
and
add
xchg
outsl
mov
pop
mov
jmp
test
adc
sahf
lret
sti
mov
xchg
pop
cmp
insb
jb
inc
mov
cltd
inc
push
push
jae
mov
into
xor
pop
pop
adc
enter
dec
mov
jecxz
inc
fsub
jbe
push
sub
imul
cld
xchg
push
je
push
lods
jb
mov
into
sbb
ret
sahf
mov
leave
lret
imulb
add
or
mov
xor
mov
cmpsl
lock
cmp
enter
lea
test
push
ja
dec
cmpsb
sub
js
sti
xchg
mov
pop
sbb
hlt
mov
out
jl
fldt
movsb
insb
mov
scas
int3
stos
push
ss
test
loope
cmp
xor
pop
or
push
pop
daa
mov
es
test
aad
inc
sahf
mov
or
mov
insb
shrl
pop
xor
adc
push
int
jge
subb
movsl
xchg
adc
filds
ja
add
jp
pop
and
pop
loopne
bound
arpl
xlat
push
xchg
dec
and
out
ja
jmp
mov
lds
mov
inc
lret
adc
movsb
lds
out
les
cmp
insl
mov
pop
ret
jp
fdivrl
pop
inc
shll
outsb
mov
lods
aaa
and
cli
jno
and
fstl
orl
jl
inc
outsb
cmc
sbb
dec
test
dec
pop
inc
mov
sub
sbbl
mov
sbb
cs
in
mov
inc
cmp
xor
mov
outsb
cli
mov
inc
sbb
pop
adc
xor
das
mov
inc
fdivl
lahf
jp
adc
fisttpl
stos
and
pushf
lods
sub
fdivrp
int
data16
fucom
add
cmc
sub
mov
xchg
xor
call
pusha
add
out
je
jl
add
mov
pop
arpl
mov
mov
jl
and
inc
or
jge
movsb
cmp
jne
dec
ss
cmp
popa
out
xchg
push
mov
mov
adc
jecxz
lcall
idivb
popf
sub
cs
pop
xorb
sti
adc
adc
test
lods
out
push
mov
movsb
xchg
hlt
cmp
lret
cmp
fildl
ja
cld
rol
pop
mov
fisttpll
jl
insl
enter
add
xchg
bts
hlt
imul
dec
fmul
jmp
loopne
repnz
lcall
dec
mov
iret
inc
dec
mov
adc
aas
in
or
call
mov
lret
pop
cmp
cmp
in
js
movsl
scas
fistpll
vpsllw
jne
loop
adc
shll
cld
adc
das
mov
ljmp
loope
lock
stos
sbb
dec
sub
dec
shlb
lods
and
ficomps
addl
mov
jbe,pt
xchg
and
insl
test
mov
add
enter
mov
cltd
popa
xor
inc
push
dec
ficoml
add
and
push
add
pop
push
sub
das
popa
js
and
mov
stos
ja
xor
mov
aam
lds
pop
or
lock
dec
pop
jnp
bound
xor
mov
arpl
sbb
push
ss
fildll
or
mov
sti
xchg
lock
ret
xor
jp
dec
xchg
xor
sub
push
xlat
call
or
mov
push
data16
repz
subl
imul
outsl
movsb
int3
hlt
sub
vcvttsd2si
shlb
test
in
sahf
clc
inc
add
xchg
sub
mov
and
arpl
add
aam
lret
mov
mov
cmp
jmp
push
in
les
addb
xor
pop
ds
scas
cmp
mov
fmuls
lods
pop
mov
sub
inc
push
aaa
mov
xor
dec
inc
mov
pusha
dec
mov
lret
inc
cli
shlb
call
fs
jno
test
fimull
lods
andl
xlat
pop
shr
cs
bound
xor
mov
and
mov
das
sti
push
sahf
pop
dec
pop
test
jg
ljmp
fstps
lahf
pop
mov
loop
mov
mov
pop
pop
jbe
imul
in
std
cmpsb
inc
leave
scas
or
arpl
rol
div
mov
test
jb
sub
popf
shr
or
or
insb
imul
lahf
push
jle
fstpt
outsl
xor
dec
xchg
sbb
mov
adc
pop
mov
inc
sbb
adc
in
inc
cmpsb
test
out
es
adc
enter
lret
push
sub
fcomi
mov
jmp
lods
inc
loope
cmp
fmuls
in
sub
mov
sbb
jge
adc
mov
cmp
into
xor
repz
stc
and
inc
adcb
mov
sbb
xor
xor
popa
out
mov
add
mov
stc
lcall
xor
jns
and
in
enter
stos
cmp
stos
aaa
mov
xchg
gs
popf
push
mov
push
xchg
cmp
inc
mov
jb
xor
or
pop
mov
xchg
in
xlat
mov
daa
ds
pop
jb
add
xor
push
repz
ds
cmp
mov
cmp
jns
popf
jg
mov
out
jge
sub
mov
roll
repz
and
push
fwait
xor
push
int3
jecxz
nop
out
pop
push
lahf
sub
inc
push
and
dec
and
test
ljmp
inc
aam
mov
std
push
popf
rol
dec
add
push
ljmp
es
inc
jp
mov
dec
aad
mov
and
pushf
ss
movsb
roll
cld
in
je
fdiv
mov
cmp
fs
xchg
rcr
clc
insl
sub
jnp
lea
rep
or
jo
js
mov
stc
dec
data16
loope
mov
sub
add
pushf
mov
test
cmpsb
push
sub
je
jb
daa
mov
and
xchg
mov
sbb
add
arpl
pushf
adc
jo
xor
xchg
mov
adc
lahf
call
adc
orl
jo
stc
adc
dec
or
insl
push
insb
cs
stos
and
push
ljmp
imulb
lds
imul
int3
rorb
test
jmp
mov
and
cmpb
or
cs
mov
mov
jne
and
xchg
lea
pusha
cmp
js
add
jmp
inc
or
push
or
mov
cmpsb
push
insb
dec
aaa
xorb
mov
push
xchg
daa
and
cmp
mov
scas
add
ja
insl
test
into
enter
orb
lldt
pop
roll
xchg
push
sbb
stc
push
jno
push
mov
fxch
rorl
or
ja
pop
mov
aad
mov
lods
jnp
adc
jnp
leave
fcoml
and
and
mov
dec
mov
cli
cmp
arpl
xor
and
divb
call
xor
mov
inc
or
int
fldt
pop
xchg
aad
pop
pop
sub
mov
jecxz
sbb
sbb
test
mov
mov
inc
pop
cmc
je
and
jecxz
and
repz
inc
lret
out
imul
ret
jge
mov
ljmp
or
jecxz
sub
and
sub
cmp
pop
iret
arpl
jg
cmc
stos
push
adcl
aas
arpl
xor
incb
mov
push
jmp
js
add
or
or
add
add
sbb
xchg
inc
adc
inc
lds
push
sbb
aaa
push
fiadds
xchg
push
mov
xchg
setg
nop
aas
ss
xor
xchg
decl
cmp
push
clc
xor
js
xor
pop
inc
bound
imul
mov
cmc
dec
loop
orb
cmp
sbb
cli
loopne
xor
pop
mov
jo
mov
test
xor
out
jmp
jmp
neg
ret
lods
or
ret
push
push
iret
dec
or
adc
add
js
push
or
loopne
fs
repnz
and
push
adc
outsb
push
rorb
or
sbb
adc
icebp
xchg
dec
sub
inc
pop
jmp
fstl
stos
hlt
and
pop
lods
mov
xchg
ljmp
inc
cmpb
out
pop
xor
push
push
pop
popa
sti
fwait
iret
int
jae
movsl
cwtl
cs
jnp
lret
insb
xor
dec
push
inc
cli
ljmp
int
jmp
lods
fs
jecxz
mov
jbe
xor
loopne
xor
inc
outsl
push
scas
push
jo
or
push
inc
out
inc
iret
xchg
stos
or
jmp
fsts
mov
movsl
fwait
add
inc
pop
loope
jecxz
dec
hlt
xchg
jle
sub
in
push
xchg
dec
in
jp
fwait
pop
pop
pushf
xchg
cltd
add
mov
call
jmp
and
cmp
in
loope
adc
roll
in
jmp
stos
and
mov
or
add
fdivrs
and
je
and
adc
out
mov
mov
shrb
or
cmp
imul
rorb
addr16
sub
push
std
in
lea
sar
push
sub
ja,pn
push
sti
adc
cmp
pop
jo
dec
sbbl
sahf
shr
adc
sub
pop
adc
sbb
inc
sbb
imul
push
aad
pop
dec
xchg
inc
fld
movsl
test
jno
outsb
lods
ja
fwait
and
out
pop
and
cmp
push
xchg
std
mov
sub
inc
and
adc
dec
scas
aas
int
lods
fdivrl
push
outsb
inc
add
loopne
and
mov
into
ljmp
ja
cmp
jle
in
adc
fs
cmp
sbb
cmp
jg
mov
xchg
or
movsb
cmp
in
pop
fbstp
push
xor
mov
andl
mov
mov
andl
mov
mov
aad
js
xor
pop
pop
jge
fucomip
jecxz
idivb
or
sbb
or
daa
outsl
frstor
add
ljmp
popf
push
mov
cmp
popf
lahf
test
divb
sbb
pop
pop
in
pusha
cmp
mov
loope
mov
test
jae
scas
jne
lahf
stos
cli
xchg
pop
jnp
cmp
xor
pop
add
ss
rcll
test
ficomps
cmp
fisubrs
lds
pop
push
cmp
adc
inc
push
popf
xor
pop
jbe
out
sub
jg
aaa
or
add
sbb
arpl
or
repz
add
and
xor
mov
and
out
mov
mov
xchg
dec
fildll
data16
push
hlt
mov
cmp
mov
push
and
push
dec
or
fnsave
ret
imul
mov
int
loop
and
xor
xchg
shr
lret
bound
lcall
mulb
outsl
cmp
call
and
sbbb
jbe
subb
xchg
das
inc
jne
ret
lock
pusha
leave
int
test
xchg
add
inc
inc
adc
je
mov
pop
imul
add
out
les
mov
repz
cmp
btcl
js
jo
mov
dec
mov
je
and
jnp
pslld
cmp
xchg
movl
or
inc
pop
xchg
ljmp
xor
dec
jge
inc
pop
and
int3
sub
or
dec
daa
cmp
inc
fucomip
jle
sbbb
dec
sbb
shl
lods
cmp
push
jnp
sbb
inc
stc
outsb
mov
jne
pop
das
sbbl
pop
clc
jl
cmp
arpl
insb
std
adc
xor
cmp
fwait
and
inc
mov
mov
lods
xor
push
fstpt
enter
jecxz
inc
and
jg
shlb
movl
movsl
cmpsb
pop
cmpsb
in
pop
jo
xor
cltd
sub
sub
mov
and
mov
out
nopl
aas
dec
mov
mov
cwtl
adc
popf
fidivrs
sbb
inc
or
mov
push
add
loope
leave
pop
fidivrs
pushf
loop
xchg
cmp
idivb
fldenv
jg
mov
out
mov
in
xchg
shr
sub
repz
imul
aad
std
push
add
or
push
inc
imul
jae
jo
push
inc
cmc
mov
rclb
cmp
sti
enter
xor
add
pop
test
xor
lds
lcall
and
loope
push
jmp
xor
mov
adc
cmp
popa
push
adc
and
mov
jecxz
dec
in
xor
xchg
clc
popl
pop
mov
daa
mov
xor
or
rcrb
jle
leave
fs
mov
imul
sahf
leave
or
sti
imul
mov
je
addr16
jle
and
cmpsl
xlat
jmp
mov
jl
ficomps
aam
xsha1
cmpsb
dec
pop
inc
xlat
dec
aam
sbb
fsubs
pop
inc
push
into
gs
lret
mov
jne
xchg
imul
fdivl
in
mov
out
fcmovnbe
dec
mov
ds
pushf
xor
in
xchg
fmuls
inc
dec
jo
aas
xlat
shlb
ljmp
jbe
mov
push
and
pop
bound
out
dec
les
gs
xchg
incb
call
cmpsb
and
inc
std
xchg
or
ficompl
jb
xor
mov
jge
rcrl
push
sub
push
mov
js
dec
push
push
out
jp
stos
jp
inc
ljmp
and
sahf
inc
dec
mov
mov
push
add
sysenter
subl
pop
xor
scas
fildll
arpl
mov
shl
mov
je,pt
and
sbb
mov
xor
mov
into
lret
xchg
hlt
push
imul
cmp
add
mov
fdivrs
xchg
pop
icebp
lods
sbb
mov
movsl
movsb
mov
dec
or
ficoms
test
insl
test
std
cs
add
or
xchg
add
cli
jle
es
mov
jo
notb
fsubr
pushf
pop
push
fdivrs
push
mov
dec
and
daa
mov
dec
sub
fstpt
scas
mov
mov
call
xor
mov
outsl
mov
ret
rcll
iret
int3
stc
sahf
stos
ret
cmp
pop
rorb
add
pop
or
cmp
push
in
in
add
push
xchg
lahf
out
stc
push
inc
inc
sbb
push
repnz
mov
daa
dec
inc
dec
mulb
fs
inc
fldenv
int
nop
mov
arpl
push
shrl
les
ret
insl
add
ret
mov
pop
lock
insl
mov
shlb
dec
fneni(8087
push
lock
and
jae
jg
fnstsw
imul
stos
rclb
push
jo
arpl
or
mov
ficoms
xchg
pushf
adc
add
jl
and
pop
push
test
das
jle
sub
mov
pop
or
loop
push
mov
mov
dec
dec
or
cmp
jmp
cmc
and
lock
shlb
and
jns
push
sub
push
je
jns
push
icebp
sbb
testb
and
es
jnp
push
lds
add
fsts
pop
inc
mov
out
push
into
cmp
mov
xor
icebp
mov
lods
call
mov
adc
cmp
xchg
jle
jmp
jb
dec
mov
push
push
inc
or
xor
push
push
fldt
shl
aaa
lea
leave
jl
leave
mov
leave
cmpsl
jmp
mov
adc
inc
push
lea
jge
sahf
das
cld
pop
and
loopne
xor
stc
jge
in
mov
add
pop
fcmovb
subl
and
cld
add
cmpsb
pop
fsubrs
sbb
pop
cmp
outsb
adc
cmpsb
add
cmpsb
cmovns
push
xor
in
dec
dec
cmp
or
xchg
sahf
mov
xchg
leave
push
rcrb
xchg
lret
mov
push
xor
mov
pusha
pop
je
dec
xchg
mov
mov
test
inc
add
insb
test
or
mov
push
or
inc
push
adc
dec
ret
ja
jge
adc
fsubr
jbe
pop
test
push
inc
sub
bound
mov
hlt
mov
pop
xor
dec
dec
in
aad
and
out
jae
adc
lahf
int3
imull
out
xchg
xchg
jp
cmp
hlt
push
lret
sti
jbe
jb
fwait
sti
lea
mov
or
insl
mov
sbb
push
and
iret
pop
lret
push
inc
inc
cmp
popf
inc
aas
inc
into
push
mov
sub
push
ds
cs
rcr
inc
fs
lcall
jmp
push
adc
fdivl
out
enter
mov
movsb
mov
mov
mov
test
hlt
push
push
cmp
xchg
test
mov
ljmp
and
int
cmpsb
enter
test
js
aam
push
push
ret
repz
and
imul
inc
sbb
into
push
push
push
out
scas
mov
ficompl
xchg
inc
mov
movsb
lods
xlat
faddl
clc
out
inc
ret
inc
cli
adc
inc
or
jne
jmp
sarb
xor
enter
stos
xlat
add
xor
test
or
scas
add
xchg
mov
mov
adc
dec
fcomip
mov
push
adc
inc
imul
lods
idivl
adc
inc
addr16
sbb
outsl
dec
sbb
mov
icebp
loop
jecxz
cmc
out
movb
or
out
jp
pop
outsl
jecxz
loopne
jmp
sub
lret
call
fwait
loop
jnp
fwait
cmp
cmc
mov
loope
ds
data16
out
mov
insl
repnz
movsl
sub
or
mov
push
mov
movsl
sbb
std
cltd
jp
xchg
dec
push
sbb
dec
sub
xchg
mov
imul
cmpsl
mov
jle
and
pop
push
push
inc
xchg
lds
add
test
and
scas
andb
imul
mov
fdivrs
nop
jg
fucom
cmp
xor
xor
cmp
test
icebp
cli
fbld
mov
enter
jae
arpl
out
add
inc
shll
jne
dec
pop
xchg
push
mov
or
push
outsl
data16
sbb
es
dec
lret
jnp
jl
xchg
jns
ret
ss
cwtl
lock
pop
mov
mov
iret
and
push
xchg
jne
mov
push
pop
icebp
movsb
adc
cltd
or
ror
popa
add
jns
jecxz
in
jl
mov
out
pop
add
pop
stos
add
push
jmp
sbb
xchg
push
sbb
mov
lcall
lahf
pop
mov
inc
push
mov
das
movsl
stos
int
pushf
mov
dec
jecxz
cmp
loop
xchg
jmp
fisubs
test
mov
shl
mov
mov
push
adc
adc
je
sbb
or
sbb
dec
out
enter
inc
jmp
mov
pushl
sub
ds
in
imul
aam
into
or
data16
or
jbe
xchg
popa
mov
lea
das
mov
ds
imulb
inc
sub
inc
es
push
fxch
outsb
jl
dec
movsl
sub
cmp
xorb
mov
or
xor
mov
in
in
sub
jb
aas
xchg
dec
dec
adc
out
cmp
sbbb
cmp
dec
pop
out
and
push
xchg
xchg
xchg
fildl
or
ss
xchg
cmp
in
sbbb
push
xchg
mov
add
sbb
inc
or
popw
or
in
pushf
xchg
and
pop
in
shrb
sbb
aaa
dec
icebp
xchg
push
lods
adc
xor
ljmp
loope
jno
sahf
shlb
mov
adc
inc
lods
stos
inc
fbld
jb
call
xor
sbb
sub
rcr
pop
hlt
add
lret
push
cmp
ds
shl
or
mov
jp
dec
sbb
pop
mov
sahf
jp
sub
enter
push
and
test
mov
jno
xor
lret
and
sub
rolb
lock
fwait
push
arpl
jmp
incl
insb
add
lea
loope
outsb
sahf
lods
stos
das
das
test
push
xor
fpatan
and
mov
pop
adc
fcmovnbe
dec
in
and
xchg
xchg
push
mull
rclb
scas
add
pop
arpl
loop
sti
sbb
outsl
fcomps
jp
das
in
cmp
push
fstpt
leave
lahf
fnsave
inc
cmpsb
rcrl
cltd
or
push
sbb
mov
add
aad
xchg
sbb
outsl
aad
add
adc
imul
cmp
leave
cs
jg
push
cs
xchg
push
or
jg
dec
mov
int
and
loop
popf
out
test
inc
cld
xchg
or
in
notb
sub
loopne
cwtl
inc
aaa
dec
pusha
bnd
in
push
cld
push
loopne
mov
mov
adc
jecxz
sub
inc
lcall
sub
push
push
sub
ret
testl
std
call
leave
lea
sbb
mov
mov
mov
mov
mov
test
mov
jmp
mov
das
iret
mov
push
stos
xchg
xchg
das
shl
out
cld
xor
add
sbb
add
xor
scas
cmp
add
cmc
imul
push
jl
repnz
enter
fsubr
sbb
stos
aaa
shl
push
and
dec
add
lcall
mov
cltd
jmp
mov
inc
or
dec
popf
xor
mov
mov
inc
fistpll
pop
mov
xchg
mov
xchg
dec
loopne
rolb
mov
movl
pop
cmc
rorl
jl
add
ret
sub
push
cmp
jbe
push
sub
into
jecxz
pop
add
add
das
in
push
inc
flds
pop
popa
jns
mov
sub
scas
mov
pop
sbb
daa
dec
jl
cltd
aas
insb
gs
pop
cltd
push
outsl
cmp
mov
xor
xchg
and
daa
loopne
jp
cltd
std
stos
insl
es
xlat
sti
cmp
mov
gs
inc
push
ficomps
scas
and
lods
push
ds
in
dec
fcompl
in
lock
mov
aad
adc
push
push
pop
icebp
inc
mov
out
xacquire
sbb
divb
aam
sub
sbb
add
lea
ret
mov
dec
jnp
and
jle
jecxz
enter
icebp
out
cs
in
push
dec
add
shl
inc
daa
pusha
lods
mov
jp
xorb
add
in
sbb
loope
jge
mulb
cmp
jl
pop
pop
lock
jg
mov
lcall
mov
test
fildl
mov
ret
lods
sbb
mov
stos
mov
push
ror
es
lock
stos
mov
enter
or
cmpsl
divb
push
mov
or
scas
dec
rorl
lods
ja
insl
inc
sarb
push
pop
or
outsl
loop
test
xor
idivl
cwtl
mov
jg
jp
mov
xlat
and
repnz
out
mov
jne
dec
adc
aaa
xlat
pop
adc
cltd
sub
jg
adc
adc
arpl
fsubr
pushf
mov
jmp
andb
icebp
inc
adc
je
std
sub
and
in
or
xor
cwtl
push
inc
orb
or
dec
adc
faddp
fisubl
hlt
repz
stos
es
push
push
mov
mov
xor
stos
xlat
xchg
popf
jo
test
gs
ret
bound
lea
add
dec
dec
rcl
out
add
fsubrl
mov
ss
xor
pop
fwait
push
mov
loop
pop
inc
popa
out
cmp
setle
inc
add
xor
call
and
fcmovnb
js
or
cmp
outsb
adc
andl
fmuls
ljmp
mov
movsb
jecxz
sahf
cmpsb
and
add
int
xchg
push
sub
lock
pop
cmp
scas
aad
sbbb
lock
mov
jo
xchg
out
stos
in
testb
xchg
mov
test
test
or
gs
mov
dec
mov
and
loope
mov
xchg
jns
push
ret
scas
cmp
sbbl
test
sbb
lcall
lods
rorl
loopne
scas
jp
in
movsb
ljmp
sub
jl
push
shll
rcr
rcrl
sub
rolb
lret
push
xchg
mov
and
inc
and
call
daa
adc
or
adc
xor
mov
rclb
mov
loopne
fisubs
insl
or
iret
nop
xchg
mov
xor
mov
stos
ljmp
dec
xor
jmp
mov
cmp
js
stos
push
adcl
mov
test
rclb
nop
dec
loopne
jbe
push
xor
in
push
clc
xchg
fs
mov
mov
inc
dec
jmp
mov
cwtl
leave
inc
cwtl
jno
out
jl
addb
jmp
lods
dec
adc
je
push
movsb
aas
jmp
cmp
mov
rclb
lods
jo
movsb
mov
mov
sahf
pusha
and
or
popf
std
mov
mov
in
enter
call
aaa
mov
decb
mov
sbb
or
pop
add
mov
jp
std
mov
adcb
stc
dec
pushl
aad
mov
inc
mov
popa
fadd
lods
push
fadds
fcmovbe
std
rcrl
cmpsl
pop
imul
mov
out
xlat
loop
dec
and
sub
dec
lret
pop
mov
loopne,pn
mov
incb
mov
jmp
xchg
sbb
dec
int
inc
pop
mov
loope
and
and
sti
ret
hlt
and
pop
out
pop
in
mov
cs
pop
inc
repz
leave
jecxz
pop
push
xchg
test
xchg
mov
pusha
mov
dec
jmp
lret
xchg
and
fcmovbe
jl
ficoms
setl
dec
push
fdivs
mov
jl
outsl
sub
jno
add
insl
stos
add
mov
mov
and
or
sub
addr16
jle
gs
rcrl
mov
movsl
push
popf
imul
outsl
adc
test
cs
pop
movsb
cmp
into
dec
loop
imul
call
push
je
add
idivl
ljmp
inc
and
mov
fisubs
jmp
lods
xor
jne
test
or
iret
and
leave
add
shrb
out
mov
or
inc
mov
std
int3
push
test
stos
imul
dec
push
insb
test
scas
fstps
jbe
ss
repnz
loope
iret
gs
ret
ret
dec
les
mov
dec
scas
cmp
mov
xchg
mov
or
jae
mov
popa
incl
addr16
dec
in
add
outsl
mov
or
sub
js
test
pop
jns
ss
and
dec
or
xchg
xchg
dec
sbbb
mov
gs
rol
mov
fs
scas
call
xchg
sub
aas
lret
das
shll
jns
pushf
xchg
fs
jle
jae
xor
mov
cmpsl
inc
mov
xlat
stos
in
cld
and
lahf
ss
inc
dec
jae
mov
lods
mov
shll
jl
push
in
fildl
sub
jae
lea
pop
push
and
popa
and
dec
iret
xchg
repnz
sbbb
popf
in
nopl
cmp
sahf
ljmp
cmp
call
sbb
xor
jbe
mov
cmpb
push
push
lcall
orl
aaa
sbb
inc
jae
sub
cli
ret
push
outsl
and
mov
jo
sbb
mov
mov
pop
sub
push
inc
test
ds
fcmovb
rcll
mulb
adc
jbe
dec
je
cli
and
xchg
xor
and
push
test
in
or
dec
ljmp
cmp
rcl
ds
adc
mov
xchg
gs
int
jge
ljmp
sub
xchg
insb
in
bound
mov
jno
xchg
call
mov
sbb
xlat
lock
mov
insb
sub
add
sub
dec
out
js
fcom
pop
xor
mov
lret
push
sahf
pusha
iret
lods
test
jle
adcb
mov
roll
leave
mov
push
jo
mov
clc
in
jmp
cmc
fstps
dec
cmp
mov
arpl
sahf
pop
sbb
test
call
test
ret
popa
das
movb
and
sub
sub
fwait
addr16
rol
pop
pop
sub
mov
sub
adc
dec
lret
cld
sub
adc
jae
sbb
or
push
ror
inc
fisttpll
xor
bound
sti
pop
orl
xor
daa
inc
loopne
insl
stc
out
mov
mov
aaa
or
add
sbb
jae
pusha
sub
mov
bound
scas
int3
jno
in
or
lcall
dec
int3
gs
pusha
adc
sbb
pop
scas
jno
stos
or
adc
pop
in
test
or
les
fadds
jmp
stos
sbbb
or
sub
cmpb
arpl
cmpsb
int
leave
pusha
pop
add
mov
xor
cmpsl
jno
pop
xchg
or
imul
notl
pop
in
add
jmp
imul
add
ljmp
jg
sbb
push
nop
out
dec
movsb
inc
lcall
xor
jb
xchg
enter
in
mov
push
sbb
inc
pop
in
dec
loopne
loop
popa
jb
aad
addr16
std
in
clc
inc
push
jae
fcmovu
out
mov
aad
daa
mov
insb
jle
icebp
or
sbb
inc
aas
mov
jo
push
inc
ret
icebp
fdivl
cmp
je
rep
xchg
jno
ss
add
iret
lret
and
enter
jnp
arpl
imul
jmp
out
push
data16
xchg
mov
movsb
insb
aaa
divl
cltd
mov
jns
cmp
add
les
fiadds
imul
testl
pushf
bound
xchg
lret
shlb
mov
lock
xor
repnz
jecxz
bound
cmpsl
ds
movsb
lods
fldenv
repz
pop
aas
test
xchg
jl
in
xor
dec
lock
sub
test
and
aaa
inc
ljmp
xor
scas
jecxz
fadds
jecxz
xchg
inc
shlb
lea
int3
mov
push
xor
mov
scas
adc
imul
dec
gs
push
cld
adc
pushl
movsl
aaa
xor
sbb
xor
jmp
pop
sbb
cwtl
pop
repnz
loop
mov
out
test
pushf
cmp
dec
gs
and
push
cmp
xchg
xor
cld
push
sub
or
fisttpl
fstpt
xor
stos
in
cmp
in
adc
sub
xchg
outsl
mov
add
loopne
jae
js
inc
adc
mov
mov
lods
adc
pop
cmp
lock
jae
loopne
push
sbb
adc
fucomip
nop
fdiv
mov
cmp
mov
jl
fwait
jecxz
or
cmp
enter
ror
std
sti
stos
sub
pop
insl
or
pop
repz
mov
sbb
jle
cltd
jl
inc
rcll
aam
mov
mulb
jp
pop
jl
sbb
sbb
out
fisubs
pop
das
js
or
loop
dec
inc
cltd
mov
andb
mov
lret
out
dec
popa
push
data16
pop
seta
push
dec
push
dec
mov
fdivrs
jnp
mov
mov
clc
int3
cmp
enter
mov
fdivrl
pop
jg
into
xchg
push
out
scas
out
dec
fwait
test
or
arpl
inc
mov
sarl
popa
mov
test
aaa
add
outsb
sub
push
mov
lea
add
cwtl
push
jbe
pop
fcomps
cmp
cmp
push
pop
sti
xchg
xchg
inc
pop
push
mov
jecxz
inc
out
xchg
icebp
mov
iret
and
adc
cmp
aam
xor
sbb
les
notl
ss
mov
repnz
ja
sbb
insl
ds
mov
outsb
sahf
jp
jle
cmp
imul
es
adc
dec
push
cmpsl
cwtl
sbb
cs
ja
or
mov
cmp
imul
cli
sub
out
lea
mov
loopne
or
inc
gs
xor
rcrl
in
pop
cmp
lret
jmp
mov
push
in
rcl
xchg
adc
mov
sbb
jge
or
je
out
mov
and
lds
or
pop
cmpb
das
mov
mov
push
jmp
dec
clc
xor
test
rcl
je
and
adc
jl
mov
pop
xchg
push
jb
mov
and
push
repnz
aaa
imul
icebp
repz
jae
loope
rcll
dec
push
xor
rcll
push
and
jle
sub
call
or
inc
fadds
pop
push
lock
scas
jns
add
ror
jp
adc
sbbb
pop
lcall
sbb
out
cmp
mov
pop
insl
mov
add
pop
sub
mov
or
and
ds
and
or
daa
es
test
xor
inc
pusha
add
mov
push
lret
cld
aaa
add
and
jge
cli
xchg
sub
cmp
rolb
popa
lcall
push
mov
xor
mov
es
xchg
imul
mov
xchg
fidivs
fcompl
lods
jo
jnp
ljmp
jg
call
cmp
mov
ret
call
cmp
ljmp
xchg
sbb
mov
sub
int3
movl
xchg
fucomi
and
inc
cmp
out
pop
testl
fldl2e
dec
and
and
xor
insb
call
pop
xlat
pmullw
sbb
sbb
outsb
jbe
jno
dec
dec
sbb
cmp
leave
or
mov
mov
jne
mov
inc
cmp
sahf
sub
cwtl
rcrb
cmp
ret
bound
aad
jne
int
adc
sahf
xor
mulps
into
cmp
dec
xor
dec
inc
test
push
cmp
das
push
lods
fidivs
pop
js
adc
stos
sbb
pop
lds
xchg
mulb
sbb
les
arpl
idivl
and
mov
ret
or
mov
add
mov
adc
mov
rcr
jle
enter
stos
xor
inc
cmp
lock
and
push
jnp
out
stc
ds
dec
es
push
dec
cli
cmp
cmp
out
pop
sarb
pop
pop
jle
sub
cld
sub
sahf
scas
call
sub
sahf
stc
cmp
sti
fwait
jo
cwtl
pop
and
jmp
fmuls
mov
mov
add
sbb
ret
lds
subb
rcr
out
xor
or
sbb
fadd
jae
xchg
sub
cs
or
sbb
push
cmp
push
dec
push
mov
dec
data16
xchg
sbb
sub
hlt
mov
cld
lcall
bnd
sub
add
cmp
dec
leave
int
mov
mov
inc
into
pop
adc
ret
push
mov
mov
pop
imul
mov
movsb
cmpsl
mov
mov
add
imul
cmpsl
ds
sbb
push
shr
xchg
je
push
xchg
sbb
sahf
and
jge
sarb
pushf
push
jo
inc
push
movsl
fcompl
lods
pop
pop
jecxz
ds
aaa
movsl
add
jns
aad
test
aas
dec
hlt
lret
incl
inc
mov
iret
cmpsl
in
push
push
in
inc
lcall
int
shll
xor
and
fwait
add
pop
xor
loopne
icebp
mov
cmp
insb
add
in
outsb
jle
fnstenv
loope
in
cmp
popf
in
xchg
incl
dec
xor
and
mov
mov
inc
data16
jb
ret
mov
push
mov
ret
loope
test
aam
pop
jns
mov
jp
shrb
sbb
lcall
negb
ljmp
jb
test
add
dec
in
fcoml
cmp
inc
inc
and
sub
in
pop
repnz
lock
sub
ja
pop
call
inc
push
sub
push
xor
cmp
pop
movsb
mov
hlt
rclb
roll
fld
lds
mov
adc
and
test
ret
xlat
xor
rorl
add
pop
push
ds
cltd
mov
jne
add
cmp
dec
out
mov
ljmp
sub
pop
popf
fcomi
dec
push
jg
in
adc
ret
gs
sbb
cwtl
imul
adc
sbb
push
mov
clc
xor
or
sub
stos
repz
jge
jne
and
mov
sub
movsl
pop
arpl
into
or
inc
jne
inc
adcl
outsb
dec
scas
outsb
cmpsl
xor
mov
sbb
pop
gs
or
addr16
sub
subb
sub
dec
pop
sub
ja
sub
or
lret
jb
repnz
daa
cmp
jp
inc
mov
stc
addl
xchg
xchg
jl
push
sub
fs
mov
adcl
popf
lods
cmp
or
inc
fsubl
or
and
add
ds
test
addr16
popa
into
jae
inc
out
xchg
or
insb
rcrl
push
inc
mov
cld
and
sbb
fstps
jae
mov
mov
test
xor
and
mov
cs
dec
ret
mov
lahf
stos
mov
test
xor
jb
push
fmuls
pop
stc
pop
insl
repz
xor
je
aas
push
mov
test
jo
stos
rcrb
fcomp
jp
stos
out
imul
sahf
sub
dec
jecxz
data16
push
sti
push
sub
jecxz
mov
push
jge
das
stc
adc
xchg
in
leave
push
ss
add
sub
xchg
in
cld
xchg
int
div
lcall
dec
and
cmp
aad
mov
movsb
pop
ja
adc
fwait
mov
push
cmp
mov
add
je
jns
xor
ret
ds
enter
jmp
loope
mov
mov
xchg
insl
sbb
shll
std
ds
mov
pushf
add
scas
mov
sbb
dec
add
xchg
adc
sbb
xchg
stos
cmp
push
inc
rclb
push
xorl
hlt
into
mov
mov
enter
in
loope
sub
stos
loop
or
xchg
movsb
mov
jb
mov
mov
iret
popa
popa
mov
xor
enter
xor
mov
push
jp
mov
stc
pop
pop
in
xor
insl
mov
imul
ret
hlt
and
aam
rcrb
or
aam
clc
cmpsb
push
call
outsl
ret
js
lock
adc
push
stos
enter
or
sbb
lock
and
cmp
mov
into
fcoml
pop
and
jl
push
rcrb
pop
fstps
icebp
inc
lock
arpl
mov
push
inc
sub
std
daa
test
xchg
xchg
stos
push
mov
lcall
pop
xlat
cmp
shl
or
fucom
movsb
cmpsl
xchg
lea
or
movsl
pop
jl
pop
or
ljmp
fcomi
xchg
fs
aam
xor
mov
sbb
push
mov
insb
xor
es
mov
mov
xchg
jno
daa
loop
leave
add
aad
and
jb
jb
add
insb
andl
daa
sub
or
cmpsb
inc
and
mov
mov
mov
xor
push
sbb
adc
mov
xchg
outsl
mov
lods
in
sbb
cs
iret
mov
xchg
mov
push
ret
fbstp
mov
lods
lock
test
inc
adc
in
mov
pop
xlat
xor
and
xchg
jecxz
scas
mov
push
mov
imul
ljmp
ss
test
daa
add
popa
enter
mov
fdivrl
lahf
scas
cmp
inc
loopne
jb
cmp
cmc
in
cmpsl
mov
hlt
mov
and
enter
dec
pusha
xor
cmp
ds
jae
sbb
aam
or
and
stos
jnp
or
dec
add
aas
mov
add
aam
es
mov
pop
sub
and
ljmp
shlb
push
push
xchg
or
xor
xchg
sbb
cli
dec
jecxz
popa
push
cmpsl
inc
or
mov
fsubrl
fsubp
push
or
add
test
fcomip
mov
les
mov
jge
aaa
push
push
fildl
lcall
and
cltd
dec
push
lock
xchg
idivb
les
pop
pop
dec
pop
imul
pop
sbb
sbb
add
test
mov
mov
adcl
xor
test
test
lea
aaa
cmp
jnp
in
ret
add
xchg
shlb
adc
xor
out
mov
or
jne
pmaddwd
shr
pop
xchg
mov
aas
aad
rorl
aam
dec
and
stc
daa
jb
xchg
xchg
test
push
imul
fcmovnbe
cmp
dec
xor
pop
fildll
inc
jae
xor
das
xchg
lret
pop
add
push
popa
or
test
js
mov
popf
xchg
es
push
movsl
push
push
sub
adc
mov
std
adc
pop
sub
test
sub
bound
or
gs
cmp
sbb
lret
bound
std
cmc
xchg
cmpb
pop
sbb
inc
cmpsb
imul
mov
out
ljmpw
or
ja
xor
adc
insl
decb
sub
inc
dec
mov
jle
jno
inc
push
mov
push
xor
lods
sub
xorl
jnp
sbb
mov
loopne
push
cmp
repz
pop
loopne
test
inc
pop
and
mov
add
fdivs
push
dec
mov
cmp
pop
mov
stos
jbe
out
mov
bnd
add
insl
push
adcb
sbb
mov
dec
dec
cltd
clc
out
adc
jo
adc
pusha
sbb
push
outsl
mov
loopne
scas
mov
shlb
mov
jb
sbb
ret
inc
data16
pushl
pushf
or
push
add
fistpl
mov
lods
cmp
mov
pusha
insl
addl
cmp
cmp
and
aam
repnz
pop
pop
loopne
xor
out
push
aaa
push
xchg
add
adc
add
out
daa
sub
loopne
cmc
and
add
test
lret
sub
je
std
mov
or
mov
inc
mov
popf
cmp
cld
in
mov
scas
xor
xor
push
pop
cli
push
or
sub
out
jp
shrl
jno
pop
rol
mov
xchg
dec
and
cmp
insb
fs
mov
or
sti
inc
addb
pushf
push
ret
lds
xor
xchg
testb
adc
mov
jb
push
sub
xlat
adc
loopne
jle
pop
cmc
arpl
jle
je
adc
add
repz
adc
jno
jmp
into
std
and
rorb
jns
inc
xchg
in
mov
sub
sbb
xor
stos
mov
xor
inc
rcrl
aas
push
call
add
arpl
adc
mov
les
je
jge
loop
movb
jg
je
jl
testl
push
mov
sub
addb
jns
mov
inc
xor
pushf
stos
sub
add
jp
es
in
pop
loop
add
mov
push
mov
pusha
test
xchg
sub
ret
jg
cmp
in
out
jo
divb
cmp
push
dec
loopne
mov
js
repnz
hlt
lds
leave
lret
sbb
das
fadd
aad
adc
dec
push
sub
jl
push
dec
jmp
loope
mov
mov
mov
or
jmp
popa
sbb
je
and
mov
push
in
in
and
adc
mov
fcomps
cmp
cmp
dec
loop
imul
adc
cmp
shrl
and
dec
mov
mov
mov
nop
pop
xchg
sub
ja
cmp
add
sbbl
insb
or
pop
mov
xor
push
out
sarb
jnp
jns,pn
pop
insl
and
push
cmpsl
out
cli
xor
sub
stos
je
and
sbb
pusha
data16
in
jnp
jecxz
out
xchg
mov
loopne
je
adc
pop
xor
xor
das
and
jo
cmpsl
pop
insl
outsl
push
lahf
jae
xor
repz
jg
push
mov
mov
sbb
daa
pop
pop
pop
pop
mov
or
nop
push
push
dec
mov
gs
leave
mov
les
xchg
push
push
pop
cmp
mov
cmpb
mov
fisubl
das
pop
pop
cmp
mov
dec
lods
or
jp
fisubs
sbb
mov
insb
test
dec
in
jns
test
cld
xchg
test
lcall
xchg
mov
cs
inc
cmc
mov
std
imul
sbb
pop
scas
fsts
xor
mov
movsl
jp
mov
dec
cmpsl
inc
xchg
dec
enter
mov
xor
add
sbb
cmp
sbb
inc
inc
fldl
es
aad
cmp
mov
sarl
fdiv
pop
mov
xor
jb
lcall
mov
sbb
or
push
test
and
jb
and
inc
fsubrs
arpl
fs
pop
jne
cmp
inc
jns
pop
add
dec
enter
scas
add
mov
add
stos
mov
xchg
ljmp
imul
xchg
clc
aam
mov
pop
adc
nop
push
enter
mov
sti
cli
push
aas
aad
lea
leave
int
adc
mov
les
aad
fdivs
sbb
fs
push
outsb
cmp
jo
scas
cld
into
xor
ds
mov
cmp
dec
leave
out
stc
push
sbb
xchg
push
pop
lcall
and
iret
cmp
inc
xor
jbe
push
lock
push
insb
mulb
daa
call
test
popa
mov
dec
in
xchg
shrb
jecxz
jb
jo
adc
movsl
push
push
mov
mov
fiaddl
pop
xor
add
cmp
sahf
bound
pop
inc
flds
loopne
xor
mov
pop
je
and
nop
push
xchg
mov
fldt
cmp
dec
call
pop
cltd
test
psubb
js
test
mov
fwait
inc
mov
mov
xor
cmc
stc
clc
sub
jle
dec
dec
out
push
mov
pop
loop
rep
xchg
ds
rcl
loop
sub
nop
loope
dec
pop
push
movsl
pop
pop
icebp
dec
push
in
mov
or
rcll
imul
or
mov
jge
and
pop
in
add
flds
out
inc
enter
pop
or
ficoml
mov
pop
out
je
push
or
ds
jecxz
dec
xchg
sub
es
daa
push
adc
ret
push
jmp
add
pop
pushl
dec
sbb
pop
hlt
jecxz
dec
je
add
adc
subl
adc
loopne
push
into
cwtl
or
aam
adc
or
or
insb
shlb
call
cmp
xchg
mov
dec
pop
cmp
js
shrl
or
push
mov
out
xchg
jnp
sub
or
or
xchg
adc
mov
xor
jmp
stc
aad
into
fstsw
mov
push
addr16
or
pop
mov
mov
pushf
cmpsl
jno
pop
mov
sbb
test
ja
jmp
cmp
xlat
inc
lea
mov
in
inc
arpl
pop
fbstp
fwait
push
notb
ret
repz
cli
add
xor
add
mov
insb
push
pushf
pop
pop
cmovle
mov
push
call
idivl
arpl
sbb
jno
int3
iret
data16
add
stos
in
test
jmp
xchg
xor
pushf
push
mov
insl
rolb
lods
in
xchg
sbb
repz
push
mov
or
inc
das
ja
inc
fimull
jno
insl
push
jne
int3
in
imul
dec
cmp
dec
lcall
push
jae
testl
stc
repnz
sub
xchg
lahf
push
popf
shlb
inc
lods
testb
mov
popf
icebp
mov
fwait
lods
pop
nop
pop
out
sarl
adc
aaa
mov
imul
pop
mov
jno
or
shlb
dec
xchg
sub
push
in
or
sar
ss
sbb
scas
sub
nop
stos
test
pop
pop
loopne
pop
dec
movl
jmp
xlat
scas
movsl
inc
inc
testl
in
add
inc
and
mov
out
fdivrl
mov
sub
jb
rcrl
dec
mov
push
push
sbb
rcrl
pop
test
jecxz
into
aaa
jbe
data16
ss
orl
test
fs
dec
cmp
add
mov
and
ds
mov
push
sbb
xchg
ss
pusha
icebp
push
pop
push
xchg
repz
cmp
es
incb
xchg
in
pop
mov
add
push
fisubrl
int3
and
fsubrs
cld
inc
push
pop
negl
jmp
mov
inc
sub
xchg
mov
inc
mov
jle
dec
test
repnz
or
xor
or
inc
sbb
les
repnz
arpl
sbb
pop
pushl
jne
ljmp
mov
loopne
es
adc
mov
fldt
mov
lds
fmull
lret
andl
push
aad
xchg
mov
mov
adc
je
pushf
and
aad
popf
mov
idiv
cli
scas
out
movsl
push
lahf
stos
or
sub
mov
inc
pop
popa
aas
sub
mov
pop
out
aam
cltd
xor
cmc
negb
xor
decl
fadds
jb
pop
repz
imul
xchg
adc
ret
pop
or
dec
ja
mov
push
jmp
cli
fnstsw
dec
inc
sbb
jo
data16
lahf
jp
add
inc
mov
inc
popa
clc
jne
loope
out
sbb
imul
sbb
pushf
sbb
and
jg
inc
push
pushf
dec
mov
xchg
or
nop
nop
inc
lock
ljmp
sbb
mov
imul
sbb
jno
jl
adcl
or
and
popf
cs
fidivs
and
mov
lds
pop
sub
scas
out
xchg
hlt
sbb
popa
cmp
loope
call
test
dec
xchg
inc
sbb
jmp
xor
mov
mov
jmp
xchg
sub
push
mov
push
add
into
mov
pop
dec
out
sbb
hlt
mov
mov
or
sahf
sub
loope
add
pop
push
loope
xor
loopne
scas
add
pop
daa
pusha
pop
xchg
stc
mov
sub
mov
rorb
and
push
add
aaa
adc
sahf
sti
adc
pop
lock
xchg
jmp
fisubrs
shrl
fidivs
and
inc
or
enter
push
mov
xchg
out
fdivp
fucomp
js
xchg
mov
je
adc
and
pushf
push
aam
ja
inc
notb
jle
add
mov
xlat
scas
popa
imul
lods
aaa
mov
movsb
mov
in
xchg
loop
dec
roll
push
ja
ja
and
dec
push
jo
jge
fdivs
aam
adc
int3
xchg
cmp
mov
xorb
adc
mov
jmp
sbbl
aam
ja
push
popa
clc
inc
lea
aaa
mov
jmp
jae
jo
bound
fs
add
mov
pop
dec
cmp
out
gs
jae
mov
or
cs
mov
mov
shr
ljmp
add
or
popa
cmpsb
mov
insl
push
movsl
cmc
fcmovu
call
gs
pop
pop
loope
cltd
pop
lods
inc
popl
lret
pop
mov
stos
cs
xchg
imul
arpl
add
and
sti
push
es
int
mov
lret
xlat
aaa
ret
out
xchg
pop
pop
mov
dec
jl
dec
lock
js
aam
dec
adc
and
sbb
push
pop
and
cmp
xor
sub
xchg
adc
add
jl
xor
pop
cltd
fistps
add
fwait
pop
sub
cmpsb
or
cmc
mov
movsb
mov
and
js
icebp
sarl
cli
rcrl
sub
flds
mov
sub
and
sub
xor
imul
push
repz
cmc
sub
stos
pop
dec
in
mov
aad
enter
push
mov
and
mov
int
mov
sub
sbb
pop
mov
push
nop
xor
jnp
dec
nop
btc
mov
jecxz
xor
or
pop
mov
fcoml
push
sahf
loop
mov
push
mov
pop
arpl
inc
je
repnz
pop
aad
repnz
inc
repz
mov
cltd
sub
cltd
test
shrl
imul
sbb
jmp
ljmp
push
add
sbb
js
ds
adc
incb
push
addr16
pop
fwait
jg
fistpl
loope
sub
adc
sets
jp
or
pop
mov
and
add
mov
push
and
and
or
mov
notl
xchg
in
lret
out
call
push
call
test
and
ds
bound
mov
in
sahf
testl
daa
or
jb
and
arpl
adc
jo
movl
iret
sbb
neg
add
mov
in
lret
and
fucomp
scas
es
jle
dec
out
lret
xchg
sub
xchg
push
adc
lock
jo
dec
dec
sahf
fs
adc
enter
int3
adc
jae
mov
or
xchg
xor
repnz
mov
stos
aad
jp
in
pop
fwait
mov
cwtl
pop
fldl
mov
cmp
xor
mov
idivb
add
or
push
mov
push
xchg
sbb
mov
mov
mov
cmp
pop
sub
jnp
cmp
repz
pushf
mov
push
je
sub
das
jno
fisubs
sub
scas
mov
jbe
and
xchg
das
add
pop
xor
bound
dec
mov
pop
lret
jl
jge
dec
popf
sub
sahf
push
sbb
ja
divb
push
nop
mov
push
jle
xor
lds
push
inc
fnstcw
mov
inc
push
xchg
loop
or
xchg
loop
push
ljmp
sub
out
ja
pop
add
stos
mov
dec
pop
dec
shlb
divl
daa
mov
cs
xor
es
mov
pop
and
xchg
out
neg
jp
pop
movsb
movl
inc
jno
mov
stos
add
imul
xor
xor
fiadds
shld
mov
pop
inc
push
ljmp
call
pop
shrl
xlat
cmp
push
hlt
mov
test
scas
cmp
inc
or
cmp
sbb
icebp
dec
mov
mov
push
movsl
ret
mov
mov
xor
jmp
movsb
cmp
mov
stos
add
pop
loop
and
add
mov
jg
pop
pop
pop
call
mov
test
mov
adc
inc
into
mov
jge
dec
dec
mov
jne
insl
push
outsl
scas
xor
jb
popf
push
int
js
mov
hlt
fwait
loop
xor
adc
orl
xchg
push
out
jnp
insb
test
push
sub
sub
push
pop
sbb
xchg
and
out
daa
lret
ret
adc
or
adc
lods
add
push
xor
jns
pop
add
or
cmc
adcb
xchg
out
lods
int3
fiadds
push
xor
inc
push
ror
pop
adc
jnp
in
push
loope
inc
mov
imul
jecxz
sti
out
push
ds
aam
in
out
jg
into
lcall
jns
out
andb
mov
inc
inc
cwtl
stc
mov
push
sub
or
mov
adc
dec
pop
mov
lret
data16
and
shll
xchg
pop
aam
es
jg
sub
lcall
jno
and
daa
arpl
scas
cwtl
add
pop
fnstsw
push
dec
call
dec
repnz
rcll
add
cmp
push
pushf
loope
xor
popl
inc
mov
mov
aam
fcmove
lock
test
pop
mov
and
sub
test
mov
arpl
int
insl
int3
push
outsl
daa
cmp
mov
or
xchg
xchg
imul
mov
adc
jne
mov
sbb
cltd
push
cmp
inc
push
pop
into
fidivs
mov
adc
rcrl
movsl
pop
or
jl
fsubrs
lahf
mov
dec
iret
mulb
lods
and
sub
add
ljmp
lods
xchg
fistps
mov
mov
sahf
pop
test
push
fnstenv
jecxz
sti
or
fistpll
or
leave
mov
mov
mov
xchg
call
cltd
mov
out
push
inc
mov
out
jp
arpl
xchg
adcl
data16
jns
inc
push
data16
sub
pop
ret
js
sub
lds
rcrl
nop
pop
adc
movsb
aas
pop
jae
dec
insl
cmpsb
xchg
sbb
jns
cld
push
adc
clc
test
xchg
pop
das
sub
mov
out
mov
push
cld
xchg
idiv
loope
inc
sbb
sbb
imul
dec
cmp
dec
pop
repz
orl
and
gs
std
and
mov
push
pushf
test
mov
sti
loopne
pusha
out
stos
mov
aad
adc
call
pop
dec
pop
and
push
jl
mov
pop
xchg
jg
pusha
cmp
or
mov
out
mov
and
cmp
call
test
stc
adc
mov
int
fs
mov
and
cmpsb
mov
mov
mov
sbb
ljmp
jle
hlt
pop
dec
sbb
pop
inc
in
mov
rorb
cwtl
inc
mov
insl
push
fildll
sbb
pusha
leave
out
aaa
ret
pop
ret
testb
mov
popa
ds
pop
gs
push
addr16
imulb
repz
adc
xor
aam
sbb
fdivl
ret
outsb
ds
mov
iret
ficoms
or
into
gs
mov
or
jns
pop
ljmp
das
adc
lods
pusha
daa
into
xchg
stos
lret
in
ds
outsl
or
pop
aaa
inc
xchg
and
cmp
mov
or
and
pop
cmp
add
jnp
mov
test
or
shlb
or
adc
les
adc
push
popf
dec
scas
dec
adc
cmp
xchg
divb
das
or
mov
movd
andb
movsb
inc
sbb
xchg
add
cmpsb
andl
sar
dec
std
mov
and
sub
repnz
add
divl
push
ret
sbb
and
pushf
sbb
bound
in
out
aad
push
cmc
xchg
xor
push
das
pop
or
lcall
lahf
ja
aam
xchg
ljmp
mov
push
push
insl
enter
dec
fstpl
jge
inc
adc
loop
cwtl
insl
xor
cmp
cld
out
iret
xchg
pop
bound
out
or
sbb
icebp
lret
mov
jge
ss
cmp
add
int3
loope
lods
dec
mov
xor
test
jecxz
push
dec
mov
popf
scas
mov
inc
outsb
add
jnp
xchg
adc
lret
adc
cmp
test
inc
mov
xlat
mov
adc
repz
adc
push
cmpsb
cmp
fwait
mov
sub
loop
insl
imul
sub
sub
lea
ret
repz
xor
mov
clc
sub
insl
pop
sti
push
add
mov
pushaw
pop
movsb
int
cmp
push
out
imul
jae
out
add
jp
call
repnz
push
pop
out
adc
cmp
insl
cmp
sbb
jbe
stos
pop
repnz
jmp
fldz
jmp
sbb
popf
push
imul
insb
add
fs
popf
xorb
and
cld
pop
adc
test
out
xor
stc
or
loopne
dec
in
cmpsl
push
je
jae
leave
pop
jecxz
popa
orb
cmp
pop
out
sbb
xlat
pushf
pop
aad
mov
std
shl
ret
and
sub
cmp
push
inc
mov
movl
inc
enter
lods
cld
cmpsb
lock
pop
or
jl
popa
stos
imul
mov
sbb
push
mov
and
xor
push
xor
xor
mov
js
or
fnstenv
loopne
loop
enter
es
mov
dec
xchg
mov
add
sbb
fcmovb
xor
jb
add
xchg
dec
in
cs
lea
lret
repnz
and
mov
ljmp
negl
jbe
pop
lahf
stc
or
sub
xchg
in
out
ret
movsl
vmaxps
push
icebp
or
and
dec
jne
pop
dec
push
inc
dec
stos
sub
jno
pop
xor
pop
idivb
fidivrs
adc
in
nop
stc
gs
sbb
sub
cmp
insb
jle
popa
adc
dec
fldcw
negb
cmpb
arpl
scas
fstps
sub
sahf
popf
call
movsl
mov
lock
lods
mov
mov
out
addl
cmc
lods
mov
ja
out
imul
add
lret
shl
int
cmc
sub
fcoms
mov
or
dec
movsb
jne
xor
sahf
add
orl
int3
and
out
insb
jle
sti
cltd
insb
mov
mov
and
out
ret
insb
aaa
js
movsl
or
stos
sub
int3
sbb
fyl2xp1
cmp
adc
stos
mov
jae
int3
add
mov
nop
cltd
call
push
loope
cmp
idivb
jg
push
imul
jae
pop
mov
in
sub
cmp
repnz
scas
sbbb
xchg
cmpsl
mov
jmp
xchg
inc
inc
loop
dec
cmp
pop
test
mov
inc
repnz
fisubrl
test
inc
inc
push
lods
xchg
aad
jne
jno
sub
fcoms
inc
jne
cmp
push
es
aaa
out
push
add
mov
stc
xchg
fs
sbb
cmp
movsl
fs
fsubrl
icebp
or
std
addr16
test
in
xchg
xchg
rcrl
enter
inc
inc
or
dec
push
jp
jae
jo
xor
or
sahf
adc
call
mov
xchg
insb
andl
jle
lret
cmp
adc
dec
jne
ja
adc
jb
test
test
sub
pop
sahf
and
adc
mov
pinsrw
xchg
mov
scas
push
mov
lock
ja
jmp
jns
pop
inc
hlt
addr16
push
shl
fbstp
or
mov
xchg
sbb
inc
ljmp
mov
mov
cmp
outsb
add
nop
loope
out
idiv
lods
inc
fmul
xchg
push
mov
push
pop
imul
or
jne
push
sub
push
fsubs
aaa
nop
mov
lock
lret
fdivs
je
js
in
sahf
mov
jle
out
sub
divb
adc
jno
xor
fmul
jg
sti
fwait
dec
adc
cmp
sbb
jecxz
iret
repnz
aam
dec
shlb
mov
es
or
repz
sub
mov
jg
add
mov
lret
xchg
push
rol
rolb
mov
andl
push
sub
mov
xchg
cmp
xor
inc
mov
testb
sahf
jbe
sub
lock
jb
int
cli
pushf
jmp
push
mov
es
cmp
xchg
ds
inc
xor
sbb
pop
push
add
xor
rolb
enter
add
push
mov
xchg
call
jle
jmp
xor
push
adc
push
inc
add
into
xor
xchg
insl
and
pushf
fsts
mov
jmp
loope
sub
dec
pop
push
je
loope
cs
jecxz
movsb
repnz
mov
subl
xchg
test
hlt
jo
es
sub
xchg
into
push
lods
cmp
cmp
jb
aam
popf
jle
add
iret
mul
arpl
popa
popf
mov
xchg
mov
mov
or
in
subb
dec
mov
mov
jl
lret
push
xchg
sbb
and
out
cltd
sub
xchg
cmp
inc
mov
xor
lcall
dec
jbe
jnp
stc
jae
and
repnz
cld
sub
aad
nop
stos
inc
dec
xor
sti
jno
mov
xchg
pop
jb
or
lods
popa
mov
mov
xchg
sarl
call
mov
sbb
pop
stos
or
mov
int
dec
fs
add
xlat
mov
testl
lock
inc
fistpl
xchg
sub
pop
xchg
fildll
mov
movsl
pop
mov
adc
push
mov
divb
cmp
sub
in
adc
push
push
pop
cmp
pop
cmc
mov
dec
jl
jmp
and
outsb
fisttpl
or
push
jno
movsl
ljmp
and
imul
push
push
mov
cmp
sub
jp
sti
inc
insb
clc
andl
dec
xchg
mov
push
call
rcr
inc
adc
mov
in
xor
iret
gs
adc
in
lret
je
data16
jmp
test
inc
mov
or
sbb
fadds
fisttpl
sub
or
or
loop
sahf
aam
adc
repz
hlt
fldenv
movl
sti
adc
or
add
cmp
dec
lret
test
cmp
psllw
xor
jb
icebp
mov
ja
mov
pop
loop
cltd
cmp
dec
popa
hlt
sub
pop
popf
inc
sbb
push
or
dec
fisubrs
or
or
xor
pop
cltd
mov
or
out
push
xchg
mov
test
dec
mov
pop
lret
sbb
rol
int3
adc
xchg
js
jnp
aaa
push
adc
push
mov
sbb
test
mov
aas
cmp
mov
das
lods
inc
mov
fmulp
into
adcl
xchg
xor
shr
scas
xor
dec
add
out
nop
inc
nop
add
inc
test
sahf
adc
ret
xchg
mov
push
loop
insb
push
jbe
mov
cltd
lea
es
xchg
jmp
jb
push
or
pop
mov
punpckhdq
loope
cwtl
and
and
xor
hlt
nop
or
test
jne
or
mov
jae
cmp
xchg
cmp
pop
adc
sub
ja
push
mov
mov
sar
insb
inc
xchg
test
xchg
xor
movsb
and
mov
adc
fdivs
clc
jnp
idivb
and
and
cmc
push
push
lock
filds
xchg
inc
mov
imul
mov
imul
push
mov
pusha
fildl
xor
dec
jo
inc
push
jecxz
test
imulb
push
mov
pop
mov
dec
adcl
repnz
stos
mov
pop
push
test
and
dec
test
test
xchg
int3
jg
jne
xchg
mov
hlt
pop
cmp
push
cmp
mov
test
test
shrb
inc
or
inc
into
pop
sbb
sti
xchg
iret
scas
pushf
dec
pop
xchg
xlat
inc
popa
xor
xchg
mov
xor
adc
stc
pop
push
xchg
mov
stc
or
mov
sub
call
clc
xchg
mov
mov
adc
shll
adc
and
scas
xor
and
dec
cmp
adc
fmulp
cld
mov
dec
shll
loopne
enter
pop
adc
dec
and
push
incl
xor
inc
cs
or
ret
stc
out
mov
in
repz
xchg
clc
outsl
jecxz
sbb
mov
jmp
mov
mov
pop
sbb
jns
dec
jge
les
sub
cmpsb
pop
pop
pop
sub
xchg
aad
push
out
add
inc
aam
fsts
mov
xor
ficomps
das
jge
add
or
ss
dec
shrl
and
std
iret
sbb
sbb
push
jb
loop
test
mov
arpl
jg
cwtl
sub
lahf
cmp
ja
aaa
mov
add
sub
xchg
adc
adc
mov
adc
rcl
sbbb
mov
push
aad
cwtl
xor
ljmp
es
lods
jecxz
jmp
in
ja
mov
push
shlb
cmpsl
jge
mov
add
aam
add
inc
fnstcw
ja
and
lods
fldl
xchg
das
testb
gs
fbld
pop
addr16
aas
lret
add
adc
sbb
mov
mov
pushf
inc
inc
int
mov
pop
adc
test
mov
stos
and
popf
pushf
xorb
outsb
jl
adcl
popa
jecxz
add
jae
lock
add
and
push
aas
sub
test
pop
sub
jmp
adc
mov
lahf
push
repnz
push
idivl
mov
cmp
out
jnp
repz
iret
cmpsl
test
or
push
jne
and
mov
idivl
gs
js
jp
adc
imul
cli
outsb
shrl
sti
cmp
and
add
sub
and
icebp
sub
sbb
xor
clc
cmc
or
lods
fbstp
mov
subb
in
mov
xor
out
in
or
decb
leave
sahf
sub
js
sbb
mov
rol
inc
lahf
sub
inc
scas
sbb
cmpsb
xor
add
addr16
pop
add
pop
outsl
push
xchg
sub
add
or
stos
popf
lret
xchg
jmp
push
mov
add
push
fdiv
mov
mov
icebp
add
xchg
iret
mov
cmp
jmp
sub
sahf
testb
stos
inc
jmp
js
enter
xchg
jbe
out
in
and
sbb
lret
push
in
idivb
pop
jge
sbbb
sub
jo
cmp
movsb
pop
mov
jmp
jb
or
push
inc
insl
add
sbb
pop
popf
xor
mov
clc
xchg
push
shr
fimuls
dec
cld
jo
cmp
ror
popl
mov
sub
int3
test
cs
loope
adc
movsl
inc
stos
es
jnp
insb
xor
mov
dec
cmp
mov
testl
adcb
xor
cmpsl
out
inc
xchg
push
inc
out
mov
dec
jge
dec
testb
xchg
sbb
rcl
mov
mov
mov
fbstp
mov
jo
stos
xchg
xorl
js
cmpb
adcb
in
mov
shl
mov
cmp
movsl
mov
add
lcall
adc
arpl
das
jbe
adc
mov
popa
out
and
mov
ljmp
push
jne
clc
scas
jno
jns
mov
xchg
pop
or
movsb
pop
es
push
fwait
roll
jl
jae
mov
sti
nop
jnp
int
mov
mov
xchg
das
pop
adc
sbb
shlb
xor
insl
mov
push
sahf
cmp
cmp
in
pushf
dec
aam
das
pop
cmpsl
divl
cmp
pop
pop
test
mov
adc
mov
push
jecxz
jnp
jae
lcall
push
stos
lods
sub
add
pushf
andb
pop
pop
adc
mov
xor
inc
ret
cmpsb
pop
jmp
shrb
out
cmc
mov
sbbl
cmp
rcrb
adc
and
popl
xchg
negl
add
push
movsl
pushf
sub
out
push
cmp
outsb
ror
lock
jge
insb
add
les
or
stos
mov
imulb
jp
pop
jae
xchg
jo
cwtl
cld
mov
ljmp
dec
fiadds
xchg
sub
iret
sbb
push
push
mov
and
fiadds
dec
mov
inc
or
movb
mov
cltd
xor
int3
jb
int3
ds
xor
mov
mov
mov
xchg
test
mov
sbb
add
js
jns
jb
out
ds
dec
mov
pusha
adc
mov
shr
pop
mov
adc
ljmp
jl
xchg
mov
mov
mov
mov
in
mov
out
sub
out
leave
ret
cmp
pop
push
pop
ds
xor
popf
or
or
incb
jp
lock
xchg
push
cmp
xor
jl
add
push
enter
or
fs
mov
lds
or
xor
mov
pop
mov
jne
add
gs
lods
ss
sub
add
add
or
sbb
push
jl
fistpll
add
sti
inc
leave
add
das
out
mov
lcall
adc
or
dec
pop
mov
dec
lahf
fwait
jne
ja
jne
nop
xchg
mov
or
loope
js
sub
adc
sahf
and
in
pop
lea
push
rcll
insb
shlb
stc
add
fnstcw
push
test
daa
movsb
lret
stc
push
mov
out
xchg
adc
rolb
mov
orb
pop
sbb
sub
ljmp
mov
mov
cmp
subl
popf
popl
lret
inc
and
mov
insb
fisubrl
insb
xchg
adc
sbb
lds
adc
pop
mov
sti
enter
mov
adc
loope
jno
and
je
data16
pop
int
xor
jp
jo
cmp
adc
dec
fldenv
jecxz
nop
nop
jae
jno
lock
repnz
sub
aaa
out
aam
test
cmp
rorl
jno
in
mov
adc
enter
popa
loopne
into
adc
pop
imul
mov
dec
test
mov
push
cmp
or
insb
mov
lock
imul
scas
cs
or
push
ss
jge
pop
cli
xchg
push
and
pop
frstor
sbb
loopne
mov
adc
popa
stos
fidivs
and
arpl
mov
jle
addr16
push
dec
add
je
cld
sub
or
subl
pop
int
pop
imulb
insl
cmp
pop
cmp
stos
cmc
inc
repnz
add
xor
pop
mov
and
xor
dec
out
dec
pop
outsb
jbe
in
loopne
and
and
or
aam
or
jae
sub
daa
ljmp
dec
push
jmp
addr16
aas
cs
pop
xchg
push
mov
jge
jno
fs
cwtl
sbb
clc
or
jp
mov
andw
das
mov
out
jecxz
push
sub
repz
fidivl
push
mov
into
fidivl
outsl
cmpsl
test
sahf
enter
test
xchg
cmp
mov
scas
int3
clc
xchg
cmp
popf
jnp
femms
dec
pop
xor
sbb
xor
jmp
lods
fsubrs
repz
push
jg
dec
cmp
movsb
out
jmp
mov
daa
inc
push
shll
xchg
mov
popa
dec
add
and
pop
notl
fsubrs
inc
dec
or
fiadds
in
cmp
push
js
aam
pop
mov
shlb
jecxz
clc
add
mov
or
or
pop
lret
mov
vaddss
xlat
cli
movsb
sti
cli
call
mov
xor
stos
mov
mov
stc
jmp
ja
ds
movzbl
push
lock
and
movsl
insb
mov
call
push
ss
lcall
jae
iret
mov
jp
pop
sbb
fcoms
push
imul
push
loop
inc
and
scas
xchg
xor
cltd
test
aam
sbb
pop
es
addl
jnp
aaa
pop
into
add
outsl
ja
aaa
into
scas
jl
dec
in
push
inc
in
mov
sub
mov
ljmp
and
test
rorb
in
test
popf
mov
xchg
push
ja
fucom
aad
inc
ja
imul
out
lea
lods
xor
aas
mov
xor
and
inc
and
addr16
outsl
cwtl
mov
inc
sbb
ds
mov
push
das
pop
ds
sub
rcrl
adc
dec
pop
mov
pop
test
xor
cmpsl
sub
scas
pop
loop
clc
sbb
daa
imul
cld
and
mov
and
push
call
sub
in
cld
cmp
cs
sbb
outsb
add
mov
jns
ss
pop
inc
popa
cmc
dec
and
arpl
sbb
pop
das
sbb
js
xchg
mov
arpl
add
push
pop
jno
leave
fwait
and
adc
mov
std
cltd
cmpsl
push
mov
push
insl
shll
or
ljmp
xor
mov
xor
adc
test
shlb
add
add
pushl
lret
mov
fistpll
repnz
sbb
xchg
daa
gs
clc
dec
stos
lods
iret
ds
jae
lret
push
or
sbb
sahf
mov
mov
inc
in
dec
xchg
call
int3
in
gs
shll
push
pop
lret
lret
xlat
cwtl
jne
cmp
ljmp
pushf
or
cmpsb
lock
pop
xchg
pop
sub
repz
call
dec
inc
outsb
ret
ficompl
pop
sub
sar
jns
leave
xchg
lods
sahf
mov
lods
loop
aaa
push
sar
jno
ljmp
cmp
test
insl
enter
adc
inc
aam
out
push
popa
lret
adc
das
sbb
stos
mov
int3
dec
sbbb
pop
mov
ret
inc
bound
jbe
pop
cmp
mov
push
xchg
pushf
cmp
in
push
xchg
inc
loopne
sarb
movntq
and
xlat
fwait
popa
xchg
xchg
stos
das
dec
cltd
cmp
and
test
outsl
arpl
mov
dec
pushf
scas
ja
dec
dec
jl
subb
sub
and
sbb
mov
xchg
ljmp
loopne
mov
into
arpl
fimull
int3
rol
inc
push
inc
dec
and
cmp
push
fcomps
imul
push
shrl
adc
sub
cmc
cwtl
out
clc
mov
cmp
insl
lea
and
das
icebp
ret
cwtl
push
popa
imul
xor
fldenv
pop
fcmovne
or
pop
cmp
sbb
jecxz
cmpsl
or
inc
cld
enter
push
inc
mov
mov
push
adc
and
mov
pop
adc
std
mov
sti
pop
pushf
jbe
push
mov
inc
aam
ret
lea
and
mov
mov
fildll
inc
adc
rcrb
aas
das
push
imul
int3
loopne
rorl
lret
sti
xchg
mov
ss
cmp
xor
mov
imul
cmp
jl
mov
mov
inc
test
lods
mov
fidivs
jle
mov
outsb
push
aam
das
pop
shr
testl
lret
jo
or
lahf
add
and
ret
mov
addr16
lods
jno
test
xchg
stos
je
shll
cltd
into
and
inc
scas
jp
push
mov
push
addr16
jecxz
lcall
push
test
mov
dec
jnp
adc
not
pop
dec
xchg
orl
cltd
mov
sbb
inc
mov
xchg
cltd
adc
call
mov
pop
jne
and
inc
cmpsl
jp
jno
xor
xor
inc
clc
push
mov
add
inc
sub
xchg
lahf
in
push
push
push
push
xchg
mov
cmp
outsb
repnz
or
cmp
add
jnp
sets
jno
adc
xchg
sbb
jae
lahf
push
cld
ret
dec
mov
push
mov
inc
inc
dec
pusha
push
lods
lret
mov
xor
push
insl
adc
mov
pop
subb
jae
lea
loopne
sbb
mov
inc
hlt
ret
mov
cli
stc
cli
rclb
sub
fidivs
add
lods
or
daa
cmp
sahf
shlb
dec
ret
pop
cltd
clc
cmp
movsl
mov
jne
jg
and
xor
std
xchg
int3
push
inc
pop
jne
repz
stos
daa
daa
xchg
mov
cld
cmpsl
movb
or
push
imul
shrl
xor
pop
dec
or
sahf
mov
or
imul
das
xchg
pop
les
jb
push
mov
test
pop
or
mov
std
icebp
and
xchg
call
pop
push
popf
dec
mov
sbb
and
jno
inc
in
push
ljmp
call
mov
out
cmp
adc
mov
adc
jp
mov
cmc
mov
aas
mov
xchg
jge
xor
fistpll
mov
fidivl
test
dec
rclb
outsb
enter
repnz
sbb
ret
daa
or
insl
adc
or
xchg
addr16
mov
sbb
xor
push
out
in
fbstp
mov
sub
push
mov
jnp
jns
loope
adc
mov
or
mov
and
push
cmpsb
jns
repz
xchg
fmuls
lods
mov
das
jnp
or
pop
rcrl
cli
dec
in
lret
add
loope
int3
testb
add
push
sub
into
inc
dec
pop
icebp
push
test
add
fdivp
adc
push
jg
mov
or
or
jns
xchg
cmpsl
or
cs
cmp
inc
push
rolb
adc
icebp
add
jnp
sbb
pop
xchg
lret
mov
gs
adc
pop
fsubl
in
dec
mov
cmp
mov
push
push
jge
cmp
mov
dec
les
test
test
ja
push
test
pop
sbbl
mov
push
or
nop
movsl
in
xchg
ret
popf
or
cmp
mov
aaa
movsl
cmp
push
aad
add
movsb
xor
test
aam
push
xchg
add
insb
mov
mov
dec
mov
rcrl
mov
lahf
sub
sarl
cld
imul
je
ror
fs
and
dec
ds
pop
int3
arpl
sub
sbbl
or
cmp
cmp
jge
adc
xchg
or
mov
mov
dec
hlt
shl
xor
inc
rcrb
jge
dec
stos
std
ljmp
dec
cmc
into
movsl
cmp
cmc
inc
push
inc
mov
dec
cmp
test
sti
cmpsb
pop
sub
jb
xchg
test
js
sbb
cmp
mov
addl
dec
and
icebp
or
fisubl
adc
out
psubq
je
sub
xchg
jmp
test
nop
dec
jbe
mov
outsb
inc
pop
mov
cmp
mov
jb
repz
cmp
cmc
and
push
loope
popa
xor
xchg
push
hlt
sub
add
shlb
xchg
lods
insb
sub
xchg
stc
and
popf
jge
dec
dec
ja
js
call
push
xor
inc
pop
mov
cmp
dec
adc
test
pusha
mov
push
out
xor
js
dec
popl
mov
push
fwait
hlt
mov
sti
sbb
jl
int3
sub
das
rorl
inc
aas
xor
push
out
inc
cmp
imulb
fsubs
sbb
lods
cmp
loop
movsb
lcall
nop
dec
and
ds
push
dec
mov
icebp
dec
stos
cmp
sbb
and
sub
sub
fadd
daa
mov
scas
pop
negb
pop
stos
cmp
and
mov
push
pusha
push
push
xor
out
lds
adc
sahf
xor
pop
outsl
add
jecxz
add
imul
in
or
rcr
jl
in
sub
lret
repz
nop
call
cmp
ret
outsb
xchg
ds
iret
inc
iret
lahf
dec
fsubl
mov
cmp
inc
fstps
cmc
jno
mov
cmp
leave
add
jg
sub
xchg
mov
sbbl
mov
inc
sub
out
jns
mov
mov
mov
jb
dec
cmpsb
rcll
data16
sub
shrb
rcrb
dec
aas
bndstx
cmp
jle
xlat
lea
push
imul
fcomps
mov
ljmp
push
stc
add
ficompl
sub
cld
adcb
mov
jl
aam
and
xor
sub
rcll
ss
jo
out
xchg
lahf
and
iret
mov
adc
push
inc
adc
xchg
pushl
sbb
lock
xchg
and
mov
stc
popf
pop
pop
and
mov
mov
xor
xor
xlat
pop
fisubs
les
std
jo
xor
aam
std
cltd
aam
ret
cmp
cmp
mov
movsb
repnz
sbb
shrl
mov
push
and
sahf
test
les
cmp
sbb
add
jo
add
push
outsl
or
jb
sbb
inc
mov
stos
in
arpl
inc
inc
mov
out
lock
dec
xor
add
lahf
repz
andb
loopne
inc
in
jg
mov
lock
outsb
incb
xchg
xor
fnstsw
adc
add
aam
push
or
negl
rcrb
pop
jl
in
cmpb
mov
call
push
add
inc
cltd
xor
cmc
sbb
xlat
mov
xchg
fcoms
negl
add
aam
mov
jle
pop
push
ljmp
call
dec
inc
push
stc
cltd
xor
pop
outsb
lret
lahf
push
int
mov
ret
arpl
inc
aad
fstps
loopne
add
adc
inc
lcall
and
sahf
mov
sbbb
pop
aad
pushf
fildll
mov
pop
fs
int3
mov
mov
outsl
lods
lea
adc
jbe
jns
push
aam
insl
dec
aaa
cltd
arpl
sub
outsl
leave
xchg
stos
fisubl
das
jmp
data16
orb
int3
fidivrs
pop
mov
pusha
xor
dec
add
jae
add
inc
out
icebp
arpl
xchg
mov
lds
push
push
inc
sbb
dec
cmpsb
mov
xor
mov
xchg
data16
or
pop
jmp
loop
jecxz
rcrl
aam
inc
push
shl
lds
fisubrs
in
movsl
mov
sub
inc
lds
scas
mov
loope
data16
mov
fldcw
in
lret
lret
mov
mov
push
rol
mov
addr16
mov
movups
es
scas
jb
dec
lods
pusha
mov
dec
xchg
jmp
nop
xchg
cltd
aam
and
inc
xor
orb
mov
movsb
cmc
xor
push
fnsave
movsl
es
inc
or
fs
sub
sub
or
out
in
push
xchg
xor
pop
mov
fucom
mov
mov
rcrb
outsl
dec
lds
out
adc
or
mov
push
hlt
xchg
subb
push
jb
xor
pop
test
mov
add
cmp
add
dec
push
bound
or
and
bound
cmp
popa
shlb
mov
js
imul
push
lock
push
ficomps
jns
and
and
sub
adcb
push
jnp
test
rolb
daa
test
test
sbb
pop
pop
jmp
adc
xchg
lods
pusha
sti
push
cmp
testl
loop
add
adc
out
negl
faddl
enter
popf
mov
inc
sub
push
mov
jne
or
pop
decb
mov
xchg
jle
stos
mull
sub
dec
cmp
in
test
add
mov
and
pop
cwtl
jne
int
pop
sbb
mov
cld
mov
adc
fnstsw
icebp
jno
imul
shll
aas
mov
and
rcl
inc
shrl
push
sub
fs
mov
idivb
adc
rcrb
fdivs
adc
dec
and
cmp
adc
adc
inc
inc
mov
andb
mov
test
mov
fmul
in
aas
jnp
pop
popf
jno
shl
xchg
and
dec
out
ret
mov
insl
push
inc
pop
mov
jne
cmp
enter
ja
stos
xchg
adc
cmc
dec
aad
xchg
xchg
pop
loopne
pusha
shr
sub
push
mov
inc
ficomps
out
fdivl
xchg
or
enter
aam
pop
dec
pop
fstps
or
xor
push
pop
jno
sub
push
frstor
dec
repnz
sub
in
aad
adc
adc
in
jb
pop
inc
pop
ja
jne
das
adc
push
jmp
repz
or
inc
lret
pop
push
mov
pop
out
out
push
xor
cs
fxch
arpl
repnz
test
mov
sub
xchg
lods
cmp
push
aam
or
sub
mov
or
in
cmc
cltd
mov
lret
push
shrb
insl
lret
sbb
lret
or
imul
jmp
rcll
stos
push
addr16
mov
or
push
or
xchg
mov
loopne
or
mov
mov
outsb
jl
cwtl
push
inc
inc
mov
push
lock
js
xchg
das
lahf
pop
mov
sub
pop
push
aas
inc
sub
dec
pop
incb
push
rcrb
ljmp
andl
adc
imul
mov
or
test
lock
jge
movsb
int3
loop
testb
jge
mov
loopne
out
push
sbb
pop
addr16
ja
add
mov
lea
in
pop
insl
cmp
push
jmp
enter
sahf
adc
cmc
jl
and
fimuls
cvtpi2ps
xchg
test
sub
mov
call
mov
or
imul
jae
jmp
shl
push
push
adc
or
xchg
jmp
aad
std
mov
es
sbb
sahf
pop
mov
cmp
sub
pop
push
xor
pop
mov
out
stc
movsb
in
int3
jne
adc
cmp
pop
push
sbb
or
shlb
ss
mov
les
sahf
fnstenv
fdivl
pop
inc
sahf
int
insb
popf
and
cmpsl
pop
pop
enter
stos
scas
das
xor
int
repz
or
iret
fmul
lahf
outsb
dec
mov
mov
mov
sbb
ret
outsl
adc
lret
mov
pop
adc
push
sahf
xor
dec
shl
pop
jge
xchg
mov
sub
out
aaa
and
xor
jp
adcl
pop
cs
pop
sbb
mov
cwtl
cli
movsl
lcall
mov
fs
shll
les
out
loope
xchg
push
hlt
inc
mov
mov
ja
dec
mov
mov
lret
dec
and
push
push
addb
clc
adc
jle
inc
andl
mov
push
adcb
jl
cmpsl
jns
mov
shlb
inc
or
xor
cmpsl
mov
imul
test
xchg
and
daa
sbb
lock
adc
test
mov
xor
jno
fldenv
dec
daa
outsl
and
cmp
stos
sub
xor
adc
ret
or
sbb
aam
lods
xchg
pop
hlt
sub
daa
push
xchg
add
pop
loopne
jns
jno
and
mov
mov
out
incb
outsl
sarl
mov
fisubrs
ljmp
call
add
rorb
mov
popa
and
aaa
js
outsl
inc
sbb
int
and
rcl
in
and
dec
mov
mov
pop
aad
subb
inc
push
andl
cld
rcr
insb
mov
or
jge
rclb
and
movsb
jp,pn
cld
push
popa
dec
add
cmp
mov
push
xchg
pushf
jo
aas
test
imul
hlt
adc
jg
lret
pop
or
sbbb
mov
jg
clc
in
das
push
sub
inc
or
mov
cwtl
xor
decb
mov
push
xchg
insl
inc
inc
jmp
cmp
mov
data16
cmp
push
pop
cmp
cmp
ret
xchg
mov
mov
sbb
lea
xchg
imul
mov
jmp
movb
xchg
mov
inc
xchg
adc
push
jo
pop
fsub
movsl
mov
gs
out
int3
cmp
mov
aad
inc
mov
lea
out
ret
leave
andl
icebp
cli
xchg
mov
fwait
jb
xor
jp
add
cmp
sbb
stc
cmc
and
and
mov
and
sub
sub
mov
ret
sarl
in
add
fldcw
fiaddl
jle
fs
mov
int3
loopne
xchg
xor
xchg
inc
cmp
lea
pop
nop
inc
pop
mov
and
sbb
mov
pop
fdivrl
xorb
into
repz
cmp
pop
xchg
lahf
fdivs
lea
mov
xor
jae
test
lods
aaa
adc
xor
mov
and
shlb
in
dec
cmp
or
aas
lret
flds
out
jmp
adc
cmc
andl
mov
and
loope
add
adc
jmp
mov
fwait
jg
mov
jl
and
or
daa
sbb
mov
pop
push
pushf
cmp
jb
stos
bound
or
loop
push
dec
cmp
lea
aaa
nop
dec
cmp
add
stos
mov
pop
push
jge
das
loopne
sub
sub
add
cs
in
xchg
xchg
dec
ja
jmp
or
sub
stc
aas
cs
aaa
push
gs
mov
cli
push
and
rclb
orl
mov
fistps
dec
lea
push
push
fs
xchg
xchg
bound
inc
push
sbb
dec
jae
lds
shll
sub
pop
mov
xor
sub
push
cmpsb
or
xlat
call
mov
loope
pop
inc
push
loopne
dec
inc
add
push
xchg
sub
jno
lock
cmc
loop
mov
roll
sub
mov
dec
cmp
or
sbb
sti
push
imul
stos
pop
sbbb
push
icebp
dec
or
jg
fsubrl
aad
pusha
pop
out
jecxz
xor
xor
cmpsl
inc
jnp
repnz
ret
pop
repz
or
daa
xor
aas
rcr
pop
loop
verw
aaa
sub
jo
or
in
or
clc
shl
cmp
dec
dec
cs
push
repnz
repnz
and
pop
cmp
mov
cmpb
scas
push
cmpsb
cmp
jge
cmp
ja
loope
jae
and
push
sti
stc
inc
fildll
addr16
ret
push
lcall
push
inc
imul
lret
lret
aas
mov
push
data16
cwtl
jo
icebp
inc
push
arpl
and
arpl
aas
daa
mov
pushf
gs
roll
xchg
sti
sub
sbb
xchg
aad
push
fwait
and
aas
mov
jno
adc
mov
fwait
ss
int3
cmp
lds
push
mov
inc
movsl
mov
das
fiaddl
ljmp
mov
jne
fwait
das
inc
cmp
cmpsl
into
mov
aaa
jbe
push
fmull
cmpsl
out
cmp
pusha
js
popf
in
or
inc
fadds
jo
push
jge
jae
adc
test
gs
in
lods
or
out
mov
and
sti
std
std
es
mov
mov
jae
mov
jp
dec
mov
jl
add
int
and
lea
dec
xchg
mov
clc
es
aam
xor
add
fwait
jne
stos
sub
and
xor
dec
nop
icebp
mov
pop
test
in
dec
mov
stc
out
push
leave
mov
adc
dec
lods
aaa
dec
aam
sbb
mov
shl
int
cmp
xchg
cmc
insl
push
sbb
pop
dec
pop
inc
int
ljmp
leave
pop
out
sub
std
dec
fdivrs
sbb
lock
or
pop
fnstenv
pop
jge
aam
sbb
mov
rcrb
lahf
sbb
inc
aaa
test
in
sub
mov
icebp
leave
imul
sahf
pop
sbb
adc
mov
fpatan
add
inc
xchg
and
das
push
mov
in
sub
gs
xchg
add
jbe
sbb
and
cmp
insl
sbb
push
sbb
ljmp
leave
pushf
ret
imul
pop
cmp
dec
mov
add
dec
sbb
lods
call
adc
fdiv
pop
cmpsb
sbb
push
insb
pop
adcb
or
inc
pop
inc
lods
cmp
sbb
jo
dec
inc
out
sahf
stc
adc
pop
shll
mov
das
inc
rcl
iret
shrl
or
inc
addr16
or
and
push
popa
inc
iret
inc
lea
push
aas
jne
out
movsb
dec
imul
jo
imul
mov
dec
sahf
std
dec
fwait
and
cltd
int3
cmpsb
xchg
or
daa
cld
aam
imul
jecxz
gs
or
in
jg
push
add
out
jb
in
add
repz
dec
imul
clc
sbb
mov
cmp
not
inc
pop
push
das
or
cmpsl
add
and
rolb
cmp
imul
push
sbb
jns
popa
adcl
outsl
push
std
push
adc
dec
pop
xor
test
adc
leave
cltd
test
sbb
xchg
add
dec
push
xlat
idiv
xchg
push
imul
xor
mov
dec
mov
icebp
mov
push
mov
jae
inc
cltd
lret
lods
xor
xor
mov
pop
jb
aam
sub
and
imul
adc
push
insb
daa
mov
mov
mov
dec
push
inc
call
dec
dec
pusha
sbbb
mov
pop
push
xchg
mov
jnp
imul
rorb
fs
nop
sbbb
cmc
cltd
cmp
cmp
fcompl
cmc
mov
icebp
negl
push
cwtl
stos
fildl
xchg
jae
or
push
mov
dec
inc
jecxz
int3
dec
fucomip
lcall
add
inc
and
cmp
das
push
in
sbb
sub
inc
std
out
sti
xor
inc
js
addr16
ret
jl
int
cmp
mov
cli
idiv
in
idivl
clc
or
lods
cmp
in
cs
idivl
sub
jne
test
or
ljmp
mov
cltd
iret
aad
jnp
pop
sub
pop
push
adc
pop
movsb
jmp
adc
inc
mov
ljmp
repnz
jle
movsl
push
cmp
mov
dec
lret
movsl
push
je
push
pop
add
hlt
adc
popa
call
fdiv
pusha
out
jle
popf
test
das
sub
jns
dec
lahf
sub
mov
pcmpgtd
cltd
cld
ds
jb
jns
xor
jo
fyl2x
pop
mov
and
jge
push
xor
js
data16
jle
shl
jae
cmp
push
addr16
dec
mov
insl
pop
dec
push
test
inc
sahf
xor
insl
int
jp
push
imul
add
inc
aam
mov
fisubrs
jae
in
jns
jbe
mov
cwtl
jl
insb
into
leave
inc
filds
or
mov
adc
jp
movsl
push
rcll
xor
cmpb
or
sub
push
fwait
fwait
lahf
shrb
stos
xchg
push
daa
dec
int3
mov
ds
mov
test
mov
dec
loop
in
adc
scas
pop
mov
lods
xchg
popf
enter
in
movsl
mov
inc
mov
ret
mov
xchg
out
pop
jl
ds
aad
ss
cld
sub
jp
cwtl
stos
mov
pop
add
bound
cmp
or
mov
or
xorb
icebp
pusha
xor
fwait
dec
mov
test
cwtl
pop
bound
mov
fsubl
xchg
test
inc
push
mov
movb
adc
mov
rolb
and
out
imul
out
sbb
adc
mov
dec
repz
aas
inc
push
repnz
pop
insl
xchg
cmpsl
out
test
cmp
mov
loop
in
push
add
movhlps
iret
or
sbb
adc
movsb
pop
pop
push
mov
subl
fwait
jne
cmp
xchg
jp
dec
decl
jo
fdivrs
sbb
fstpl
or
aaa
mov
fst
add
mov
lds
or
andb
xchg
pop
push
dec
jb
shrl
mov
pop
mov
insb
sbb
xlat
xor
jecxz
mov
imul
xchg
loope
loopne
mov
in
jbe
repnz
movsb
scas
sub
ror
mov
ja
lret
push
mov
add
sti
movsl
outsl
test
lcall
or
repz
mov
test
jmp
add
inc
out
push
jl
out
aas
cmp
xlat
xor
jo
cmpsb
outsl
shlb
enter
and
outsl
inc
clc
dec
bound
test
and
lahf
mov
dec
pop
inc
filds
cmc
dec
mov
pop
imul
fsubrl
sbb
fcomps
mov
add
out
insb
sub
xor
test
mov
pop
icebp
or
pop
push
mov
xlat
cmp
gs
insb
push
mov
inc
dec
push
popa
mov
cvtps2pd
xor
jb
mov
fstps
aam
mov
push
mov
dec
into
into
gs
cmp
pop
stos
jle
fidivl
push
lods
inc
test
jbe
movb
aam
in
sub
push
cmpsb
mov
sbb
push
in
sbb
fwait
loope
xchg
sub
fisubl
adc
cmp
sbb
mull
mov
lods
aas
adc
lret
enter
ss
mov
sbb
enter
ficoml
adc
fnsave
sbb
mov
xlat
mov
xor
iret
sahf
adc
shr
dec
movsl
sbb
fisttpll
vpcmov
fs
and
outsb
add
and
xchg
push
xor
or
add
inc
adc
mov
lods
popf
stc
bound
leave
inc
mov
xchg
sub
mov
push
jmp
lretw
cmp
ss
cmc
hlt
ret
fwait
xor
ret
std
xchg
lds
adcb
jbe
push
mov
inc
lar
mov
pop
xor
adc
mov
mov
sub
mov
ss
in
ja
in
out
stos
inc
aaa
xchg
mov
xchg
in
scas
pop
or
push
addr16
jb
xchg
inc
sbb
mov
hlt
out
xchg
sub
jge
sub
cmpsb
mov
vmwrite
dec
pop
outsb
inc
or
pop
push
lahf
lret
cmp
popa
jecxz
iret
push
push
pop
and
push
add
jnp
fucom
std
add
or
xor
or
sub
adc
ss
adc
cmp
adc
movl
enter
cmpsb
mov
mov
mov
dec
xor
mov
pusha
nop
leave
xor
jno
pop
shlb
gs
and
mov
xchg
add
push
push
sub
fs
enter
sbb
inc
push
addr16
jns
sub
aad
retw
lods
cmp
mov
sbb
stos
sbb
xchg
out
inc
in
aaa
xchg
cmpsb
xchg
xor
lahf
aad
sbb
jno
lock
mov
jp
mov
fistps
dec
mov
adcl
outsb
pop
mov
daa
cmpsl
mov
adc
adc
push
lods
jo
inc
lock
mov
mov
ret
cmp
mov
mov
nop
lret
ss
mov
imul
push
xor
push
jnp
popa
pop
cmp
rcl
jno
icebp
movsl
cmp
les
aaa
mov
aad
test
xor
jnp
fcomps
test
out
xchg
mov
les
mov
clc
out
in
ljmp
sti
or
jmp
and
dec
rcrl
inc
inc
pushf
pusha
and
xor
test
int
xor
jge
mov
pop
ds
aaa
add
jecxz
fs
push
call
mov
pop
loopne
stc
cmpsb
pop
sbb
or
adc
inc
push
jne
les
arpl
sub
mov
xor
divl
fsub
aad
pop
xor
pmuludq
cmp
outsl
and
rcrl
cli
fcomps
dec
pop
call
iret
in
ljmp
and
stos
sub
in
pop
dec
cs
es
outsl
mov
jle
ja
cli
and
pop
sbb
ret
and
negl
add
pusha
cmp
out
add
jmp
xor
dec
test
aad
es
stc
push
shl
cli
push
jnp
xchg
cltd
sub
popa
mov
jne
pop
xchg
sub
mov
inc
adc
mov
ret
or
sub
int3
xor
add
stc
cld
mov
ljmp
or
mov
mov
lahf
or
loope
sub
stos
outsb
sbb
jno
ja
in
scas
add
out
jle
cmc
and
in
xchg
xchg
cmp
sbb
or
je
push
sub
loopne
jno
imull
inc
cmp
jne
jle
cmp
pushf
mov
jae
mov
sub
lret
lds
push
jmp
pushf
pop
cmpsb
cld
movsb
jb
pop
xchg
mov
repz
jmp
inc
or
lods
movsl
sub
mov
pop
jns
aaa
push
je
pop
aas
sbb
jne
inc
fsubrs
rcrb
pusha
idivl
fldt
adc
out
cmp
xchg
pop
and
or
cwtl
test
or
mov
jne
jp
and
jl
pop
ret
in
cli
sbb
js,pn
mov
push
out
mov
rcrb
jo
and
out
cmpsb
clc
push
popa
cs
ficompl
std
fdivr
inc
add
jns
addr16
fstps
xor
adc
fs
inc
adc
xchg
orb
lock
data16
loop
add
stos
pop
test
pop
lods
inc
out
dec
pop
shrl
das
stos
shlb
jmp
rcr
testb
xchg
push
nop
daa
dec
cmp
adc
addl
js
sub
mov
out
call
pop
loope
insb
loop
mov
inc
push
xchg
xlat
mov
or
aas
out
mov
xchg
cmp
sub
mov
aaa
pusha
fimull
cmovg
or
les
mov
test
pop
out
sbb
mov
xchg
push
push
not
lret
add
jge
movsl
add
shl
cmp
cmc
sbb
movsb
iret
dec
fucomip
inc
out
pushf
in
cld
xor
sub
mov
add
in
pop
xchg
paddusb
popa
or
push
call
fadd
outsl
push
repz
xchg
cmpsb
icebp
add
xchg
xor
testb
outsb
mov
adc
ss
insb
dec
mov
data16
lret
std
mov
sahf
add
push
shr
out
adc
fxch
enter
imul
mov
adc
js
jo
push
hlt
inc
mov
jp
pop
sub
cwtl
stos
push
jg
adcb
pop
jbe
pop
in
cld
cmpsb
add
sbb
fisttps
fdivl
hlt
dec
mov
cli
mov
loop
mov
xchg
jnp
xchg
inc
pop
sarb
inc
and
loopne
mov
inc
fisubrs
mov
jle
add
inc
sbb
add
jl
negl
int3
jo
xchg
jo
in
dec
adc
add
lcall
xchg
pop
pop
jns
adc
stc
xchg
pop
cmp
jae
pusha
sahf
and
adcl
aas
int
out
add
jnp
fstpl
jp
shlb
mov
or
scas
imul
inc
cmc
dec
push
cmp
xor
mov
in
lret
jnp
bound
sbb
xor
fmull
xchg
stos
in
lahf
push
test
lock
mov
xlat
xchg
je
adc
sub
clc
cli
adc
aaa
std
inc
dec
loop
add
mov
add
lcall
sbb
push
sub
or
ret
mov
fs
adc
mov
test
lret
xchg
jns
in
mov
xchg
jge
clc
or
xchg
or
push
aas
sti
stos
sbb
lahf
cmp
pop
or
addb
ret
cld
adc
add
mov
arpl
sbb
add
movsb
bound
sarb
mov
adc
or
push
xchg
test
out
mov
xlat
or
ret
shr
push
xchg
inc
inc
mov
ret
cmpsl
sti
fwait
outsl
in
mov
jmp
jg
dec
inc
inc
or
push
push
lahf
mov
adcb
or
mov
xlat
mov
aas
mov
ljmp
rcr
hlt
pop
fstps
popf
dec
adc
adc
mov
cmp
dec
mov
mov
dec
ja
ret
test
test
dec
fwait
pop
in
les
test
add
jns
andb
stos
stos
outsb
push
sahf
cmp
mov
dec
movsl
sub
adc
popf
mov
mov
outsb
sarb
ds
dec
loope
lods
mov
in
mov
inc
ss
cmp
ljmp
push
movsb
pop
jbe
inc
mov
inc
inc
pop
dec
sbb
and
xchg
or
js
sub
repz
sbb
mov
scas
cmp
sbb
jl
outsb
jp
movsb
mov
mov
lahf
sub
add
rorl
mov
sbb
dec
es
daa
push
js
cwtl
adc
jge
lret
data16
inc
mov
jmp
in
das
scas
sub
les
mov
imull
es
mov
loop
movsl
xchg
lods
ljmp
pushf
cli
push
cmp
ds
xchg
sti
xchg
loopne
scas
and
loope
sub
dec
sbb
dec
push
inc
dec
jno
sarl
pop
loope
add
inc
push
dec
push
jg
lods
stc
fs
je
daa
mov
xchg
push
jmp
inc
gs
scas
daa
cmp
leave
int
lret
das
insb
loope
repnz
add
or
cmc
pop
addr16
mov
icebp
jnp
push
in
xchg
pop
cmp
daa
aaa
and
or
enter
lret
lret
mov
sbb
inc
aas
arpl
movl
or
jge
sub
mov
push
mov
add
cmp
mov
xchg
mov
addr16
cld
out
sub
ss
push
mov
sbb
push
iret
and
cmovnp
fcoml
iret
enter
fwait
test
popf
lret
mov
push
jne
outsl
sbb
pop
dec
mov
lret
add
and
fldcw
jge
lret
mov
stos
in
aas
rolb
mov
push
sub
and
mov
push
cmp
jl
sbbb
loopne
jle
ss
xchg
inc
shrb
or
gs
and
rclb
pop
pop
clc
rorl
lds
aaa
int
pop
in
out
pop
call
shlb
add
cmc
dec
jecxz
lock
inc
and
cmp
cmove
fisubl
inc
pusha
or
aam
lds
imul
xorl
jb
scas
fisubl
pop
add
push
xlat
cli
and
bound
sbb
fmull
outsb
out
fs
je
mov
xchg
or
fdivs
popa
sbb
mov
aam
adc
repz
mov
repnz
stos
adc
fisubrl
sti
push
hlt
dec
inc
push
test
push
imul
inc
enter
jnp
jb
outsl
mov
enter
lods
aad
cs
test
fdivr
pop
xor
ds
fs
push
mov
push
imul
daa
dec
fidivl
dec
movsb
jae
lret
sti
in
fisubrl
cltd
in
inc
pop
cmpsl
fnsave
mov
jb
sti
jb
mov
xor
mov
iret
mov
ret
or
and
jge
sub
jg
inc
imul
loope
ret
xlat
je
lds
xchg
lahf
mov
into
add
mov
jmp
sub
mov
mov
rcrb
addr16
xchg
call
or
aas
xchg
adc
das
outsl
adcl
add
mov
int3
adc
sub
das
pop
dec
and
stos
adc
hlt
es
and
cli
cmp
addr16
lock
test
xchg
sub
lea
sub
dec
inc
mov
add
shl
pop
pop
adc
and
sti
push
out
sub
xchg
mov
push
jl
or
movsb
xor
and
jns
stos
inc
or
cs
in
out
push
je
int
iret
cmp
mov
jge
rcr
rep
pusha
orb
lcall
sbb
mov
fstpt
pop
hlt
mov
fcmovnbe
jle
and
sub
pop
ret
and
mov
out
sti
and
enter
dec
fs
xchg
jl,pn
scas
inc
cmpsl
jp
repz
jmp
or
xchg
jno
roll
test
xchg
sub
xchg
sub
dec
out
inc
movsb
fisubrs
xor
fadds
roll
orb
jmp
xorl
lcall
mov
push
and
adc
fdivs
cmp
add
repnz
popf
push
popf
call
movsb
and
jp
lods
pop
neg
jg
xor
xor
xor
push
fwait
xor
lret
mov
adc
sub
pop
cmp
and
and
push
fwait
push
mov
xchg
sub
mov
and
dec
je
inc
add
jae
cmpsl
aas
xlat
push
add
hlt
sub
jnp
pop
cmp
lea
push
out
int
stos
decb
aaa
mov
xchg
and
sub
mov
imul
adc
adc
pop
hlt
push
or
outsl
pop
aas
push
loopne
loope
hlt
inc
stos
sub
jge
out
int3
sub
lahf
aas
mov
push
fnsave
enter
les
cmp
dec
xchg
push
clc
scas
shr
std
pop
jb
loope
jae
enter
orl
xchg
out
repnz
aad
lcall
mov
fidivrl
push
out
loop
sub
sbb
mov
inc
icebp
ja
outsl
stos
pushf
out
les
int3
jb
in
lods
roll
gs
aas
dec
or
xor
cmp
xchg
pop
outsb
scas
pop
out
jmp
xchg
stos
jecxz
xchg
push
mov
mov
or
in
mov
aam
or
mov
jb
mov
xchg
lret
icebp
aas
addr16
or
mov
jmp
aam
mov
cmp
es
fs
adc
cmp
clc
dec
scas
and
pushf
dec
and
add
in
ss
jmp
jp
mov
mov
leave
loope
inc
xchg
xchg
adc
sbb
mov
or
es
cmp
xchg
mov
cmp
popa
addr16
sti
lcall
mov
dec
test
mov
and
mov
mov
clc
mov
test
sub
push
add
mov
int
sub
mov
jg
push
xor
aam
pop
push
jmp
int3
inc
pop
cmp
insl
inc
lahf
pop
inc
fnsave
push
adc
in
xchg
mov
pop
adc
ss
ss
add
xor
les
sub
mov
enter
pop
dec
icebp
rorb
push
aam
jmp
js
add
xchg
test
xchg
inc
pop
push
xor
out
and
xor
gs
mov
cmp
icebp
push
adc
mov
add
pop
test
lea
test
insl
jge
movsb
push
insl
pop
outsl
mov
fdivr
sbb
dec
jo
mov
xchg
icebp
mov
cwtl
out
and
repnz
sub
mov
push
mov
dec
adc
daa
loopne
xchg
incl
add
pop
out
test
mov
pop
add
repnz
ret
rcll
xchg
popa
cmp
xor
mov
adc
push
dec
mov
lods
into
dec
pop
fsubrl
cmp
add
push
xor
pop
xchg
imulb
sahf
testl
cld
cwtl
xchg
stc
ret
mov
stc
push
pop
adc
jg
aad
mov
test
cmpsb
hlt
sbb
pop
mov
push
in
mov
sub
pop
aaa
mov
idivb
es
aas
dec
addl
outsl
insb
mov
mov
pusha
aam
in
mov
ficomps
leave
fadds
jecxz
xor
lods
adc
sahf
loop
lcall
mov
into
mov
out
push
icebp
xchg
add
ret
mov
sbb
and
lock
and
jb
pop
inc
jo
xor
add
sbb
or
push
mov
inc
loopne
pop
int3
mov
xchg
mov
shll
les
cmp
push
outsl
add
push
es
and
loopne
cld
subb
push
adc
push
sub
popa
inc
popa
xchg
sbb
cmp
xchg
push
pop
int3
lret
jbe
xchg
cli
and
sub
push
icebp
or
jl
jge,pn
out
test
fldl
sahf
clc
sub
mov
inc
arpl
sti
or
inc
mov
addr16
gs
adc
jp
lret
and
lahf
pusha
fisttps
push
leave
gs
and
scas
sbb
sahf
popl
fdiv
call
mov
ficomps
push
push
mov
sbb
push
call
mov
sbb
dec
mov
scas
mov
sub
in
adc
or
jg
mov
or
xchg
daa
lahf
sub
or
mov
insb
aaa
dec
outsb
iret
lcall
cwtl
clc
mov
fstl
mov
nop
xchg
cmp
pop
mov
inc
pop
mov
adc
fiadds
mov
dec
in
pop
iret
xchg
les
jecxz
shr
jne
mov
test
fisttpll
adc
loopne
outsl
add
call
push
push
xor
cmpsb
fldt
and
stc
xchg
ds
pop
pop
push
pop
lahf
orb
stos
xchg
sub
add
ss
and
xor
mov
pop
mov
ficompl
lahf
dec
mov
xchg
repz
cmpsb
adc
pusha
stc
das
ljmp
clc
ret
push
idiv
lahf
dec
mov
xor
jno
faddl
mov
repnz
adcl
dec
rorb
xor
inc
jmp
ss
aad
in
mov
push
mov
jl
scas
rcrl
jne
mov
inc
pop
rol
jae
in
stos
xchg
xchg
mov
pushf
in
test
stc
shrl
mov
mov
adc
xchg
addr16
sub
sbb
adc
inc
ret
cld
leave
xor
push
inc
add
fs
test
sub
adc
lds
je
jge
xchg
mov
jle
mov
fadds
pop
je
fxch
sbbl
scas
sbb
gs
shlb
clc
cmpsl
push
xor
ret
cmpl
pusha
inc
cs
pop
addr16
ss
adc
push
xorl
fdivrl
mov
push
inc
ja
out
xchg
sbb
dec
mov
push
sbb
jno
push
xor
mov
popf
test
dec
aas
imul
sbb
das
lods
cmp
mov
test
jle
and
scas
sbb
jp
push
or
xor
inc
stos
mov
jbe
jle
adc
push
or
sbbb
mul
pushl
push
cmp
enter
mov
adc
mov
sti
xchg
repz
loope,pt
cltd
sbb
or
xor
ja
or
pop
ljmp
and
lret
lcall
loopne
inc
or
mov
or
aam
sub
xchg
pop
imul
mov
je
add
cmp
inc
les
sub
xor
dec
cltd
adc
sahf
leave
jecxz
fcompl
mov
popa
jo,pt
sbbl
xchg
ret
leave
fcmove
mov
fdiv
pop
repnz
lds
ror
push
cmp
jae
out
cld
cmpsl
dec
push
xor
push
jmp
push
ret
pop
jb
xor
cmp
lcall
or
cmpsb
pop
or
pop
enter
ret
outsb
into
sbb
jge
sub
les
add
dec
in
stos
fsubr
cmp
inc
mov
lahf
ss
xchg
sub
adc
lret
cmp
leave
xchg
inc
iretw
xor
fs
out
jl
idivb
xor
push
push
add
inc
sub
sbb
cmp
addr16
sbbb
push
lds
push
outsb
outsl
ret
loopne
rcll
xchg
loope
inc
aas
mov
stos
hlt
int3
fstps
adc
mov
dec
fwait
shrl
jnp
jns
and
lret
xchg
clc
xor
sbb
dec
adc
pop
imul
push
mov
leave
pusha
mov
fsub
cmp
fstl
mov
ds
jecxz
xchg
std
xchg
call
pop
lret
dec
xchg
mov
les
inc
adc
or
fstpl
mov
fsubr
xlat
mov
insb
cli
mov
stos
mov
sbb
push
xlat
mov
jle
inc
push
cmp
movsl
jae
adc
mov
pop
mov
fisubl
inc
sbb
aas
pop
lcall
stc
adc
mov
cs
icebp
dec
loopne
adcl
gs
jnp
outsl
cmp
fcoms
jbe
cmp
push
out
stos
cmp
scas
sbb
inc
add
fwait
cmpsb
and
jno
xchg
ret
sbb
in
mov
mov
imul
jbe
cli
xchg
sub
mov
mov
add
adc
push
cwtl
negl
lret
adc
loope
xchg
inc
mov
pop
and
int
jns
lods
insl
xchg
xchg
cmpsb
sbb
std
insl
shlb
leave
sbb
mov
por
lret
pop
jo
in
lea
out
xchg
out
lea
lods
inc
xor
xchg
push
dec
int
pop
cmpsl
mov
pop
push
jecxz
mov
or
xor
xlat
sub
and
push
push
aas
lods
mov
addr16
aaa
into
das
xchg
xchg
sbb
int3
data16
jne
adc
cmp
add
pop
mov
adc
ss
push
mov
and
fdiv
jno
xchg
arpl
mov
or
int
cltd
ds
jo
jnp
scas
or
or
aas
pop
sub
push
sub
pop
das
nop
fwait
push
pop
push
mov
inc
fdivs
shlb
mov
sub
sti
stos
adc
testl
loope
scas
arpl
lods
cmp
adc
or
fwait
pusha
sbb
rorb
stos
loopne
clc
lcall
mov
loop
xchg
stos
inc
enter
sbb
leave
pusha
adc
mov
lods
fidivl
lds
push
pop
movsb
mov
jp
das
and
pop
out
jae
cs
std
arpl
xlat
mov
push
ljmp
call
fstp
mov
fucomp
adc
push
mov
or
out
mov
sub
adc
lret
nop
mov
dec
in
insb
add
cld
iret
jnp
dec
mov
icebp
jp
iret
stos
adc
push
mov
jp
mov
xor
stos
in
outsl
add
and
pop
add
dec
inc
push
fisubrl
fwait
insb
push
jnp
xor
shrl
jl
jbe
loope
ret
test
cmp
cmc
mov
and
lahf
dec
fst
lret
push
pop
aam
ss
lret
xchg
lods
inc
fwait
pop
cwtl
xor
mov
mov
enter
icebp
pop
push
xor
and
ror
mov
scas
push
pushf
das
leave
ds
push
sahf
xchg
xor
loope
out
scas
sub
and
add
adc
subb
pusha
cmp
das
jge
shll
insb
out
jp
ds
jo
lahf
xchg
lods
les
in
push
sarb
inc
ret
dec
cmp
iret
sub
pop
mov
sbb
mov
cmc
adc
insb
xchg
jmp
iret
lods
divl
mov
sbb
daa
daa
je
cli
xor
clc
stos
xor
push
pop
pop
sub
jno
pop
addr16
push
scas
inc
and
mov
fistpl
sbb
mov
sub
lahf
loopne
inc
xchg
cmp
daa
sbb
stc
cmp
fs
test
inc
cs
call
insl
sub
cmp
mov
mov
cmc
cmp
cmp
xlat
imul
add
dec
lret
xchg
scas
popa
xor
push
xor
xlat
imul
jp
dec
and
inc
mov
lret
adc
cli
mov
test
or
fildll
and
adc
xor
adcb
test
into
lcall
ret
sub
jl
in
lds
adc
and
and
sub
sub
stc
push
inc
jle
xor
ljmp
out
stos
popa
adc
pop
repz
mov
jp
setle
and
inc
enter
hlt
outsl
stc
xor
nop
ret
into
push
ret
hlt
push
shrb
push
jmp
xchg
pop
mov
in
js
adc
pop
sahf
inc
lods
mov
sub
sub
pop
insb
insb
add
dec
xchg
mov
sbb
adc
cmp
inc
rclb
cld
xchg
fistpl
sbb
lods
ret
jge
adc
sahf
pop
mov
test
rcrl
dec
fists
jns
inc
xor
fldl2t
cmp
data16
negb
in
in
xor
bound
test
out
pop
sbb
int
jp
adc
hlt
fistpl
subl
cmp
test
repz
mov
push
mov
xchg
mov
xchg
push
movsb
mov
hlt
cmpsb
mov
cmp
xchg
lea
add
cmpsb
mov
aam
int3
push
cmpb
jo
and
ljmp
xchg
or
lret
adc
fisttps
xor
fstp
mov
rclb
das
clc
push
fs
xchg
loopne
inc
out
hlt
sbb
test
test
out
or
lods
cmp
pop
insl
stc
in
rcrw
in
dec
xor
inc
mov
and
xchg
hlt
cmpsb
cmp
popf
cmpl
ss
mov
xlat
sbb
and
lret
bound
adc
mov
shrl
pop
push
in
cmp
out
andps
jae
or
test
jnp
mov
cmc
cltd
out
mov
cmp
es
into
sub
test
mov
lret
mov
ret
xchg
test
xchg
jne
dec
pop
repz
ss
sbb
scas
mov
xor
clc
in
enter
adc
jecxz
xchg
rcll
call
inc
rorl
dec
cmpsb
dec
int
and
dec
lcall
pushf
shrl
mov
dec
adc
lret
pop
pop
and
jp
add
xchg
mov
add
cmpsl
aad
mov
inc
sub
cld
xchg
cmp
push
cltd
or
in
sbb
lods
xchg
cmp
or
mov
jmp
or
test
and
ficompl
xchg
repz
sbbl
data16
rcrl
mov
xor
rorl
pop
cmc
idivl
daa
push
lret
addr16
pop
stc
inc
jne
sub
mov
mov
mov
mov
shrl
jl
sub
jns
xchg
sbb
dec
xchg
lock
mov
push
sbb
or
cld
cmpsb
push
add
loopne
adc
fidivrl
sbb
sub
addr16
jne
cmp
enter
and
or
fbld
and
mov
iret
sub
xchg
and
or
repnz
in
xchg
jae
dec
xor
mov
and
jbe,pn
mov
incb
or
data16
and
inc
arpl
and
inc
xor
inc
aad
sti
inc
lahf
test
pop
mov
jno
bound
pop
mov
add
test
out
add
adc
pop
or
push
fisubrs
or
movsb
lea
shlb
pop
in
push
jnp
sahf
jnp
dec
mov
arpl
mov
negb
mov
in
lods
inc
mov
sbb
mov
pop
jmp
dec
xchg
out
adc
leave
bound
lock
push
dec
ljmp
inc
or
jnp
pusha
cld
sbb
into
inc
ja
cmovbe
sbb
xlat
dec
lods
push
je
dec
out
xchg
and
hlt
adc
stc
jge
lds
jae
xchg
sub
dec
and
inc
sub
push
lret
loope
insl
adc
fdivl
stos
jb
popa
xchg
cli
xchg
ret
xchg
fcmovb
push
cmc
sarl
loop
sbb
push
xchg
mov
or
mov
iret
inc
ret
aaa
arpl
xchg
pop
jp
mov
in
mov
outsb
neg
jnp
push
loop
inc
or
push
add
xchg
mov
xor
repz
insb
mov
pop
fnsave
mov
gs
add
dec
and
test
loopne
jge
sbb
jbe
movsb
lret
neg
or
mov
jge
ja
sarb
push
out
repz
test
stc
dec
pop
pop
mov
dec
leave
jge
jae
test
shll
repz
fbstp
stos
mull
lret
inc
out
dec
mov
sub
push
sbb
sarl
push
out
lock
sub
lds
test
jg
add
sbb
push
jg
or
pusha
daa
push
add
mov
lcall
adc
or
jbe
sub
pop
xor
addr16
lcall
popf
add
jge
xchg
xor
jle
xchg
inc
sub
mov
sbb
jg
push
or
lcall
and
leave
ret
inc
cmp
je
pop
idiv
sub
js
or
pop
cli
adc
sti
testb
jge
pop
and
gs
jns
and
sti
xchg
cmp
xor
push
int3
les
loopne
clc
out
push
mov
xor
jp
mov
push
std
inc
out
mov
outsb
add
imul
add
mov
call
outsb
pop
pop
inc
xor
adc
insb
add
xchg
imul
cmpsb
pop
mov
mov
ljmp
mov
sub
stc
and
xchg
sub
imul
out
mov
fcomi
cmp
xchg
push
pop
xorb
iret
push
mov
imul
xor
ficompl
mov
lcall
cs
call
fnstcw
scas
mov
nop
out
mov
data16
insb
scas
or
ret
movsb
sbb
sub
and
dec
push
xchg
add
imul
je
je
mov
or
mov
or
cld
mov
fnsave
push
imul
js
in
lock
mov
xor
addl
loop
fildl
mov
xchg
lret
data16
stc
lock
sub
enter
insl
cmp
fisubs
imul
hlt
and
cmp
and
shlb
mov
sahf
insl
mov
mov
mov
mov
cmp
aam
and
inc
sbb
sub
aaa
into
inc
sarb
mov
mov
pop
lods
sbb
mov
bound
shr
inc
mov
dec
sub
jle
adc
and
xchg
in
shrl
in
pusha
jp
xor
mov
adc
mov
ljmp
jb
fwait
add
out
sar
mov
xchg
aad
cwtl
les
jg
cmp
lahf
repz
add
insl
mov
sub
xor
mov
rorb
rcrb
fs
pop
sahf
sbb
mov
jnp
jns
in
pusha
push
testl
in
negl
adc
xor
and
mov
loope
xor
mov
sbb
lret
add
push
fildl
xor
xor
cld
push
call
rcpps
mov
sub
adc
cmp
outsl
pop
or
dec
imul
push
xchg
sub
jge
popa
scas
push
loopne
mov
mov
in
add
push
lea
enter
call
stos
movsl
jns
cmpsb
lret
outsl
xlat
dec
inc
mov
mov
sbb
push
fwait
jne
and
jb
into
add
or
cli
dec
add
out
mov
push
enter
insb
sarl
lds
insl
xchg
push
xlat
push
or
push
lcall
pop
lods
adc
jnp
or
out
mov
mov
aaa
aad
and
addb
lret
jb
mov
xchg
cmp
pop
scas
fistps
jle
and
ds
fsubrs
inc
iret
aam
pop
hlt
mov
enter
cltd
push
je
ret
jnp
test
outsb
mov
into
scas
ds
ljmp
cmp
popa
ds
sbb
movsb
repz
and
cmp
jnp
mov
fwait
or
xchg
xor
fcomps
mov
lds
decb
jp
pop
sub
inc
dec
jno
mov
inc
adc
xor
arpl
add
xor
push
push
mov
or
jle
xor
add
dec
pop
push
dec
in
pcmpgtd
and
inc
push
imul
outsl
les
jle
push
scas
ljmp
inc
adc
or
jl
mov
mov
aad
into
popa
push
pop
ja
out
repnz
nop
push
jb
xchg
out
sbb
mov
pop
mov
push
add
cmp
pop
aam
sar
ja
jg
push
adc
jl
jo
sbb
push
ja
int
cltd
jecxz
call
sub
sub
pop
lcall
cwtl
jne
insl
xchg
loope
fdivrl
enter
sbb
fidivrl
fisubrl
hlt
or
daa
call
les
push
pop
mov
data16
aad
mov
mov
inc
jg
xor
mov
mov
scas
icebp
mov
adc
add
inc
fidivs
jmp
jb
push
testb
pop
out
aam
mov
sbb
std
int
push
push
rcrb
xchg
xchg
sbb
cmc
mov
sub
test
jg
cmp
dec
jmp
es
jle
push
popf
xor
scas
inc
push
loope
mov
xor
push
and
icebp
push
cmp
lcall
lods
push
loope
and
xchg
test
js
dec
add
jg
aaa
push
call
add
pop
mov
push
daa
push
movsl
mov
sbb
rorb
cmpsb
scas
and
mov
rcrl
gs
jnp
push
dec
enter
pop
mov
nop
dec
stc
push
hlt
mov
xchg
sti
cwtl
shl
mov
sbb
mov
leave
mov
jno
pop
sub
cli
test
sarb
jl
mov
das
add
in
push
pop
jp
es
lds
add
mov
out
out
push
jbe
test
std
lods
xor
fnstenv
push
out
adc
inc
rcrl
mov
hlt
push
bndstx
cmp
in
stos
pop
repnz
fsubr
push
lret
mov
jno
das
repnz
pop
dec
add
push
aaa
adc
movl
adc
stc
in
xlat
shll
dec
out
out
pop
mov
insl
fdivs
in
xor
imul
push
pop
ljmp
je
andb
xchg
jmp
dec
xchg
cs
push
xor
add
insb
xchg
orb
ja
lock
xlat
xor
rol
inc
push
pop
bound
movsl
and
pop
add
out
popf
mov
dec
sbb
jge
in
fistps
mov
add
jb
js
arpl
rcrb
push
loop
or
scas
push
imul
cmp
sbb
xchg
xchg
sbb
add
lock
lods
nop
and
mov
mov
loopne
scas
sahf
stos
shll
adcl
jo
std
cli
aaa
lea
aaa
dec
sub
push
repnz
mov
sub
hlt
ljmp
pop
add
test
es
xchg
pusha
lcall
clc
in
inc
ficomps
sbb
and
es
xor
dec
out
and
jbe
outsb
jl
stos
jg
lcall
lods
push
in
into
push
inc
pop
in
mov
insl
out
or
test
mov
xchg
sub
orl
jp
bound
push
stc
fwait
in
rorb
xchg
xor
dec
fsub
pop
repnz
fdivrp
mov
imul
daa
lahf
sub
xor
mov
test
bound
shll
push
daa
call
xlat
outsl
push
mov
jb
out
nop
push
mov
lea
popf
jg
lods
cmp
pop
dec
and
xlat
mov
cmp
dec
je
out
scas
inc
jecxz
add
int3
push
push
cs
mov
in
ror
das
mov
repnz
out
mov
xchg
insl
lret
inc
lods
lret
mov
sbb
inc
xlat
pop
sbbl
jbe
aaa
dec
lds
jle
clc
arpl
out
xchg
call
mov
dec
dec
int3
idivl
mov
fidivrl
fldenv
cld
aaa
dec
push
ljmp
aaa
mov
in
lahf
jnp
hlt
add
movsl
mov
loopne
rcr
cmp
jecxz
iret
lcall
push
push
rcrl
sbb
push
lods
out
mov
sub
sbb
mov
and
push
fstl
lret
popa
mov
xlat
pop
mov
lret
mov
pusha
fwait
leave
push
xchg
add
dec
out
enter
dec
in
jmp
inc
fdivs
mov
scas
je
scas
lods
push
subl
jb
fbld
lcall
notb
or
pop
inc
in
and
mov
cmp
xchg
fs
push
push
mov
push
outsb
sub
in
xchg
aad
pop
repnz
lcall
in
inc
lock
or
jno
cltd
sub
cmp
ja
dec
lahf
ds
mov
call
cld
js
rcl
add
inc
hlt
loopne
mov
add
nop
idivb
insb
pop
pop
in
or
mov
lock
inc
or
pop
test
int
push
scas
out
loopne
test
sbb
daa
scas
mov
int3
lret
jb
or
fcompl
mov
dec
mull
je
adc
lea
adc
pop
inc
out
jp
cld
push
cs
inc
repnz
sub
and
jg
cld
cmc
push
repz
mov
adc
test
push
outsb
divb
mov
dec
jmp
push
in
push
iret
into
xor
js
or
mov
mov
mov
lret
xor
data16
out
push
bound
in
cld
mov
pushf
fcoml
lds
add
fwait
cld
hlt
cmp
adc
movsb
leave
and
pop
cs
and
jb
sub
in
xchg
inc
out
jmp
cmpsl
xchg
sub
les
sbbb
int3
and
jbe
mov
mov
inc
or
or
mov
inc
sti
add
xor
pop
stos
inc
jns
jge
out
leave
ss
jmp
or
out
cmc
add
mov
push
adc
sbb
add
pop
mov
int
dec
in
movsb
and
loope
repz
mov
push
sbb
push
fs
pop
ss
or
inc
fildll
dec
mov
push
je
lods
loope
das
pop
ret
sub
call
push
stc
test
or
xor
ljmp
dec
ror
in
cmp
cmp
rcrl
push
shll
aaa
mov
arpl
aas
inc
in
aad
inc
mov
vcvttpd2dqx
stos
inc
enter
cmp
pop
and
mov
xchg
jmp
xchg
push
mov
das
repz
roll
dec
mov
fistpl
jmp
cmp
loop
cli
lcall
push
or
jno
cmp
arpl
movsb
xchg
out
cltd
fnstenv
mov
in
in
lahf
pop
testl
jbe
inc
nopl
movsl
repz
or
stos
mov
iret
xchg
jle
inc
pop
mov
sbb
xorb
sub
in
push
add
ss
cli
and
xorb
lods
dec
jmp
or
in
std
es
sbbl
out
leave
add
enter
cmp
mov
movsb
push
aas
or
jle
or
sbb
imull
adcl
jbe
in
dec
push
sahf
repnz
pop
test
ja
insb
add
sbb
xchg
test
mov
ret
fnstcw
sahf
clc
and
shr
adc
xor
sarl
outsb
gs
adc
or
push
mov
rcrb
inc
sub
xchg
rol
pushf
inc
adc
pop
cmp
inc
dec
or
divb
mov
outsl
pusha
cmp
stos
dec
adc
sti
mov
sub
xchg
adc
outsl
jmp
sarl
jg
sbb
nop
adc
test
std
std
pop
jb
push
mov
xor
outsl
push
or
lea
pop
jb
mov
dec
jns
mov
fcom
pop
ret
push
cmc
mov
cli
sbbl
mov
stos
scas
outsb
call
cmp
popa
cs
xor
mov
loope
jg
adc
and
inc
test
shrb
jmp
xlat
xchg
out
outsl
cltd
pop
sbb
fadd
sbb
das
mov
adc
rcr
sarb
adc
push
aas
mov
jmp
outsl
xchg
push
add
fisttpll
jl
daa
test
cmp
pop
sahf
push
cmp
in
test
xchg
es
das
mov
lock
imulb
sbb
push
imul
xor
mov
sti
fcoml
dec
arpl
sbbl
pop
enter
mov
add
or
dec
mov
inc
cmp
into
xchg
dec
imul
outsl
xor
fwait
push
push
daa
inc
icebp
mov
xchg
adc
gs
xchg
hlt
push
push
stos
and
or
push
insb
add
ret
xor
popf
mov
icebp
in
inc
psubusw
adc
stos
insl
into
xor
add
addr16
sbb
aas
pop
mov
inc
ljmp
xlat
xor
cld
je
inc
add
mov
mov
or
and
or
les
repz
cmp
daa
xor
inc
sbb
bound
dec
into
mov
xchg
push
in
sti
clc
mov
jo
divb
scas
arpl
xchg
loope
mov
cmp
mov
nop
sbb
out
sub
scas
jbe
dec
xchg
ds
push
jecxz
bound
add
push
mov
std
and
cwtl
rcr
jne
push
sub
and
xchg
push
push
mov
mov
sbb
mov
dec
lea
test
sbb
inc
test
xor
inc
gs
push
push
leave
xor
jmp
fcmovbe
dec
sub
lea
popf
mov
scas
or
aam
xchg
jecxz
scas
xchg
rcrl
daa
add
mov
movsb
sub
ja
rcrl
mov
aas
add
push
std
and
scas
xchg
sbbb
pop
jg
mov
repz
scas
dec
or
xchg
dec
xor
call
aaa
movsb
mov
pop
mov
pusha
adc
inc
xlat
pop
mov
scas
sub
pop
stos
cmpsb
dec
dec
lods
repz
insb
call
fcmovnb
out
les
sub
cmp
mov
ficoml
or
mov
push
fnstsw
mov
adc
je
test
adc
xorl
push
mov
sarl
push
pop
les
push
cmp
xor
dec
inc
jp
cmpsl
imul
add
sarl
lcall
fdiv
loopne
mov
ror
push
call
adc
jo
cmpsl
adc
pop
mov
fucom
mov
xchg
xchg
cli
lret
jae
mov
imul
out
in
mov
into
xchg
out
add
mov
pop
test
data16
data16
imulb
dec
jge
sahf
xor
push
mov
dec
cmc
lret
mov
and
pop
dec
cwtl
pop
inc
negl
sti
sahf
ss
sub
mov
sbb
dec
mov
mov
stc
mov
cmp
or
push
mov
scas
dec
pop
loopne
mov
jo
sub
sub
scas
xor
mov
into
divl
int
shrl
sti
inc
jmp
cmc
test
xchg
inc
dec
xor
aad
repnz
aad
stos
out
fnstenv
shlb
jne
sub
fwait
ljmp
mov
jp
ds
xchg
ret
pop
sub
call
mov
repz
dec
shrb
rol
fs
push
mov
mov
popf
out
mov
fucomp
pop
push
loopne
rcl
pop
shrl
mov
insb
enter
addr16
mov
subl
ror
push
cmc
mov
outsl
call
testl
push
sbb
mov
mov
ds
pop
adc
sub
or
adc
ds
andl
pushf
jp
pop
mov
inc
mov
cmpsb
mov
sbb
ja
mov
aas
xlat
in
es
jge
mov
testl
xchg
push
fcoms
test
jnp
pop
cmpsb
shll
push
mov
testl
sbb
out
cmp
out
mov
outsb
rcl
fwait
jae
call
ljmp
lcall
in
inc
testl
arpl
cmp
mov
xchg
add
jl
inc
jo
dec
mov
xchg
mov
call
or
mov
popf
sbb
inc
xchg
orl
adc
pushf
pop
repz
aaa
and
jp
mov
pop
and
mov
jmp
lret
xchg
cwtl
mov
fsubl
idivb
mov
push
out
jbe
cwtl
stos
test
inc
out
shlb
jmp
pop
mov
fildl
rorl
mov
cmp
push
outsb
jne
inc
stc
nop
subl
outsl
sub
xor
sbbl
mov
adc
mov
mov
jb
mov
fnstsw
rorl
outsb
mov
fldt
pop
out
pusha
cld
shrb
dec
lahf
daa
jnp
call
outsb
xchg
adc
into
enter
lock
and
ret
mov
ljmp
xor
dec
mov
fldenv
sub
mov
inc
adc
push
into
lds
mov
jecxz
fildl
sahf
cmpl
rcll
stc
pusha
xor
jne
mov
cld
dec
sbbb
idivl
test
out
andb
mov
xchg
ret
jae
lock
popa
push
inc
data16
ja
xchg
add
outsl
and
imul
sti
xchg
push
rorb
mov
push
inc
lahf
shlb
repnz
repnz
nop
inc
pop
ret
pop
lcall
sub
insl
sbb
mov
in
mov
mov
jns
mov
and
jp
adc
cmpsb
fdivrs
push
dec
mov
sarl
mov
xchg
sub
adc
stc
aaa
sbb
or
inc
adc
inc
jo
insb
lcall
in
push
fwait
jae
add
repnz
pop
ror
push
jae
mov
ss
dec
push
ja
test
shlb
lahf
push
test
in
and
movzbl
insb
sub
insb
pop
lea
mov
inc
xchg
jns
cwtl
sti
cmpsl
dec
inc
cmpsb
cmp
xchg
xor
and
test
int
xchg
mov
testb
aas
xchg
out
std
push
pushf
xor
jg
rorb
or
dec
add
adc
dec
mov
xor
ds
popa
scas
rclb
dec
or
push
jo
outsl
inc
xlat
fstps
arpl
daa
jecxz
movsb
dec
lds
jno
cltd
testb
lahf
or
adc
dec
test
adc
jg
adc
test
cmpsl
adc
stos
pusha
cmp
and
dec
aam
sbb
pop
imul
mov
mov
jnp
sub
jnp
jg
fldl
ds
jb
xchg
and
pop
outsl
or
mov
and
jp
arpl
int
mov
out
jns
and
jns
xlat
and
xchg
loop
cmpsl
adc
push
ja
xlat
outsb
das
sbb
mov
bound
mov
xchg
rcl
je
outsb
repnz
mov
adc
xor
outsl
push
pop
stos
into
lods
nop
mov
aam
inc
cmp
das
je
pushf
mov
pop
lret
xchg
add
adc
in
adc
lret
bound
cmp
mov
inc
fisttpll
stos
lret
sub
call
inc
push
pop
add
or
lock
in
pop
ret
sbb
std
jbe
xor
mov
out
nop
pop
jle
cmp
pushf
xor
jae
stc
addr16
lds
testb
jge
test
aaa
pop
sub
or
mov
cwtl
mov
mov
add
xor
int3
aad
aad
sub
cmpsb
mov
inc
mov
iret
xor
mov
int
mov
inc
jo
lods
add
xorl
loopne
push
daa
icebp
or
mov
xor
cmp
lods
adc
in
std
cmp
test
mov
jae
mov
sbb
sbbb
lcall
push
pop
lret
and
xor
pop
out
aad
add
mov
pop
or
fcoms
push
mov
mov
jmp
cmpsb
xchg
out
test
lret
ljmp
inc
test
push
jmp
or
jns
xchg
inc
fcomps
cmpsl
dec
loop
fmull
mov
imul
mov
xchg
dec
cmpsl
std
xchg
popf
xor
arpl
nopl
inc
fimull
out
outsb
cmp
aam
fdivl
jp
sub
pop
push
hlt
enter
pop
cmp
pop
popa
push
xor
mov
shll
popf
and
mov
lods
fiadds
call
fs
fisttps
dec
gs
inc
sub
xor
fisttpll
inc
push
sub
sub
fsubrs
lret
ja
jne
inc
inc
adc
imul
adc
inc
adc
push
scas
and
fdivs
mov
sbb
shlb
lds
or
fsubrp
pushf
jg,pn
or
mov
js
mov
std
stos
add
push
shll
xor
ja
imull
sub
into
fiadds
sub
sti
or
das
subb
xchg
sub
shlb
jmp
iret
mov
stos
xor
out
xchg
fcmovnb
sbb
sti
cmp
mov
sbb
dec
mov
int3
sbb
aam
repz
jnp
pop
lods
cmc
and
jg
shl
leave
xchg
xor
lods
sub
cmp
mov
mov
fimuls
jmp
jle
sub
rorb
test
and
leave
mov
jnp
dec
and
add
rcrb
ret
jge
cmc
sbb
push
pop
mov
in
in
stos
mov
hlt
inc
mov
pop
lret
outsb
dec
cwtl
pop
sub
and
div
push
outsl
lret
sbb
sub
dec
push
ljmp
in
stc
nop
xchg
scas
inc
sub
fwait
sub
sar
negl
cmp
out
testb
clc
xchg
mov
dec
and
out
or
push
inc
pushf
into
xor
and
jg
mov
lcall
push
mov
scas
xor
andb
out
add
rcll
xchg
jbe
popf
xor
xchg
xor
xor
dec
sbb
mov
push
sbbl
notb
mov
sub
call
jo
int3
and
inc
pop
and
addr16
sub
dec
popf
loopne
and
inc
xor
hlt
pushf
and
xchg
xor
rorl
sbb
sbb
cmpsl
or
imulb
push
dec
ret
mov
inc
fdivs
or
mov
out
pop
out
aad
in
and
fadd
xchg
lret
adc
pusha
hlt
mov
mov
pop
repz
cmp
jecxz
xchg
cmpb
std
lods
imul
pusha
mov
jbe
loop
dec
les
subb
sbb
arpl
lcall
hlt
mov
loopne
push
xchg
sub
jne
stc
mov
movsl
je
xchg
cmpsb
roll
jg
sub
mov
fimull
mov
js
sub
xchg
and
fnstenv
dec
in
shr
testl
arpl
movsb
andb
xchg
lock
or
mov
pop
xor
dec
inc
sahf
pop
out
iret
dec
push
gs
sti
mov
mov
xor
sbb
xor
xor
xchg
xor
insl
push
pop
xchg
mov
add
ss
movsl
and
cmc
int3
ret
mov
sub
sub
jmp
xor
mov
in
mov
push
pop
ret
leave
inc
adc
lods
xchg
sub
push
mov
nop
dec
xor
cmc
mov
jae
pop
adc
dec
ret
jl
xor
push
mov
pop
js
push
sub
stos
mov
xchg
jg
inc
movsb
out
out
and
and
bound
mov
int
push
testb
in
or
jg
adc
mov
das
cltd
add
movsb
pop
pushf
xor
inc
dec
xchg
sub
loop
mov
lock
mov
mov
mov
fldt
leave
add
jb
push
scas
lds
jno
mov
and
rcr
xchg
xor
xchg
cmovle
mov
aad
rcpps
pusha
sbb
divps
or
add
jecxz
xor
add
fsubrl
loope
sti
adcl
mov
ret
mov
pop
lock
sbb
jmp
mov
ljmp
aam
mov
aas
mov
jno
cmp
mov
addr16
pop
dec
xor
jle
pop
mov
push
mov
jo
es
and
cmp
hlt
and
inc
imull
scas
imul
or
pop
loop
pop
outsb
jge
pop
scas
js
repnz
daa
fnclex
js
mov
jp
lret
divl
xchg
push
rcrb
jle
jge
sbb
repnz
pop
hlt
ja
sti
xchg
mov
add
jo
sbb
push
cmpsb
jge
cmpsb
jle
add
and
sti
or
fstpt
jo
or
pop
in
adc
aam
xlat
mov
or
or
inc
xchg
dec
or
inc
lods
mov
jbe
iret
push
xchg
xchg
mov
mov
in
pop
hlt
sub
jnp
mov
mov
fdivl
pop
push
xchg
stc
jae
mov
mov
jbe
push
mov
and
test
fsubrs
or
imulb
cld
push
ja
ss
xchg
mov
sbb
sbb
pushf
xor
cmc
sub
enter
out
cs
sahf
movsl
sbb
pop
ja
pop
movsl
cmc
sub
mov
push
fnstcw
push
sub
out
aad
pusha
pop
lock
popa
outsb
sbb
sbb
hlt
stos
or
pop
in
shlb
daa
testb
jns
xor
stos
xor
repz
adc
enter
jp
shr
jmp
leave
xor
push
mov
aas
pop
xor
out
sbb
mov
aaa
push
sub
lret
test
inc
mov
pop
xor
adc
ljmp
cmp
mov
in
test
fwait
loopne
or
adc
and
add
int
mov
mov
aam
inc
shlb
jmp
push
push
xchg
stos
inc
lds
enter
pop
mov
scas
sbb
or
sti
or
mov
sbbl
sahf
mov
in
push
mov
adc
fwait
out
in
pop
popf
pslld
inc
mov
pop
cmc
cltd
pusha
fnstenv
jle
rol
imull
aaa
fs
popf
xchg
dec
leave
or
adc
pop
mov
sbbl
cs
lds
lahf
outsl
repz
jecxz
xchg
scas
je
push
mulb
lock
outsb
mov
adc
rcl
adc
fcompl
push
sub
scas
adc
cmp
ljmp
inc
rcr
pop
scas
repnz
jo
xor
sti
ret
dec
int
push
jge
push
fnsave
mov
dec
push
adc
fisttpl
jp
jmp
xchg
fld
pop
lahf
in
xor
cmp
test
mov
call
jg
push
shrl
lods
mov
push
lods
mov
movsl
add
pop
outsb
cmp
pusha
cmp
jecxz
mov
ret
lods
mov
sub
cld
jle
jmp
jno
aaa
inc
xchg
in
scas
lea
cmc
jne
loop
js
loope
jmp
cwtl
xor
add
enter
testl
fdivrs
imul
mov
add
lods
push
mov
or
mov
fcoms
xlat
mov
mov
mov
in
in
sbb
jno
xor
test
push
fimull
test
cmp
inc
loope
fcmovb
or
sbb
pop
add
jne
mov
pop
dec
stc
mov
xor
mov
or
and
sbb
outsb
mov
insb
ret
adc
jecxz
aas
nop
mov
shr
pop
mov
insb
adc
repnz
je
push
xchg
push
hlt
cs
pop
lock
fisubrs
dec
jne
inc
sbb
gs
ss
les
xchg
hlt
ja
in
enter
or
add
cs
aas
psubw
jne
push
out
inc
add
pop
xchg
jne
pop
or
je
movsl
sub
fs
setbe
cmpsb
cmpsl
testl
sub
sbb
and
inc
push
push
mov
mov
inc
inc
add
lret
popa
shll
cmp
lds
add
stc
mov
push
jge
sbbb
lea
jae
sbbb
mov
xchg
outsb
popf
cltd
or
std
outsl
jl
sbb
psadbw
movsb
das
sub
clc
stc
or
lret
sbb
mov
mov
cmp
movsl
scas
aas
loopne
push
in
cmpsb
add
or
dec
xchg
into
inc
sbb
cmp
xchg
mov
cmc
bound
and
mov
dec
stc
sbb
jle
clc
xchg
ret
insb
mov
sbb
hlt
icebp
call
out
adc
adc
dec
inc
pop
in
xchg
pop
mov
mov
mov
jge
in
xchg
scas
das
jecxz
jg
dec
popa
cld
aas
shlb
mov
cmp
mov
jno
sti
into
in
lds
xchg
inc
push
dec
lods
cmp
add
cli
mov
and
test
stc
jmp
push
and
fstpl
jno
xor
fdivr
adc
sub
or
add
rcrb
add
xchg
mov
fisubs
pop
inc
jp
cmp
push
pop
inc
push
out
jle
bound
dec
sbb
aas
and
cmp
mov
sahf
adc
loope
cmp
int3
leave
xlat
cmp
dec
mov
test
fisubrl
cwtl
pop
bound
sbb
dec
loope
cli
sahf
clc
ss
loopne
jle
mov
iret
inc
popa
clc
xor
ljmp
push
mov
inc
outsb
add
mov
push
mov
dec
dec
loope
std
xchg
lock
mov
push
out
decb
bound
cmpl
mov
testb
xchg
idivb
shrl
test
sub
test
xchg
leave
pusha
add
adcb
jns
inc
insb
xor
mov
xor
sahf
lahf
xchg
sub
and
insl
add
daa
add
dec
jp
mov
jge
pop
sub
in
cmp
and
sarb
inc
enter
in
fwait
sub
lcall
in
les
lret
or
les
in
or
outsb
test
imul
xor
jg
sbb
outsl
cmp
outsl
or
jge
sub
add
and
scas
cmp
jo
aas
dec
stos
inc
mov
mov
sub
jle
nop
notl
jo
inc
sub
popf
out
ret
dec
mov
insb
mov
sub
and
jmp
out
dec
and
shrl
arpl
test
sub
test
lret
xor
cmp
call
dec
stos
sbb
cmp
mov
into
pop
push
lds
jle
add
mov
ljmp
xor
cmc
cmp
sub
test
jp
sti
and
lahf
jle
adc
leave
gs
andb
or
pop
mov
or
jmp
dec
pop
pop
xor
and
mov
pop
cmpsb
push
xchg
cwtl
xchg
mov
loop
clc
lret
inc
dec
into
shr
out
and
dec
mov
loopne
jl
dec
mov
popf
and
jb
movsb
mov
sbb
insl
jbe
mov
ss
movsb
adc
jnp
cltd
stos
nop
pcmpgtw
adc
sbb
fnstsw
and
adc
stos
inc
pushaw
enter
push
cli
lds
jne
and
lods
xchg
lock
subl
or
rcrl
mov
js
lret
push
daa
les
push
inc
outsl
cmc
push
je
xchg
jns
ret
test
mov
arpl
negb
rcr
int
push
push
arpl
lds
imul
jno
push
es
inc
inc
cmc
push
xor
rcrb
test
jno
dec
rcrb
das
ret
loope
sub
test
ret
dec
fmuls
inc
jmp
dec
insb
addr16
out
fbld
ljmp
jno
mov
adc
push
push
scas
inc
test
ljmp
rcl
pop
fwait
jbe
stos
mov
ljmp
jne
dec
mov
push
xchg
data16
mov
mov
aam
fimuls
pop
ret
aas
mov
or
jb
pop
jmp
aam
fistps
jl
jge
mov
inc
sub
lods
sbb
out
adc
xchg
pop
adc
cli
pushf
sbb
and
fwait
out
insb
inc
pop
xor
dec
mov
inc
rcrb
inc
xor
sub
jbe
lcall
cwtl
pushf
or
pop
in
push
in
pop
push
loop
pop
and
mov
add
fldcw
jne
jb
sub
and
cld
sbbb
adc
aam
push
mov
into
cltd
inc
fs
push
adc
mov
insl
fiaddl
or
cs
popf
push
mov
arpl
fists
xor
jl
iret
or
cs
cs
cmpsb
rclb
push
pusha
decb
jbe
clc
inc
inc
imul
mov
jns
jns
hlt
xchg
cs
pop
mov
movsl
mov
and
push
scas
lahf
stc
mov
pusha
xor
xchg
out
adc
and
sub
bound
test
and
cwtl
sbbb
shrb
les
pop
jne
in
inc
sbb
dec
loop
pusha
lret
mov
inc
xchg
sub
mov
add
sub
jb
stos
in
push
adc
jae
outsl
mov
mov
out
sub
ljmp
lret
pop
or
jle
jne
mov
fsts
xchg
stc
jae
mov
push
push
in
xchg
loop
fldenv
add
sub
out
push
jno
add
add
mov
aas
shl
shrl
mov
jmp
subl
int
xchg
mov
movb
stc
hlt
std
out
std
int3
and
adc
push
xorl
or
pop
sub
mov
std
or
sub
fwait
adc
cmp
xor
gs
dec
and
pop
daa
push
popf
shll
test
xchg
or
or
scas
or
mov
sub
pop
sar
adc
movsl
xor
fsubl
fldl
jg
sub
push
inc
inc
fnsave
leave
adc
sub
mov
fistps
cli
test
sar
daa
push
mov
cmp
sub
cli
dec
push
jb
sbb
int3
jno
dec
scas
xchg
xchg
push
ficoms
ficompl
jp
lcall
outsl
jl
mov
test
or
xchg
sub
mov
sub
nop
mov
sbb
mov
fwait
test
ret
jne
jns
mov
push
inc
orl
cmp
inc
mov
mov
inc
in
stc
call
mov
addr16
test
repz
push
ficomps
popa
inc
push
xor
jns
scas
cwtl
pusha
push
inc
sbb
stc
es
pop
rcrl
dec
ss
ss
ficoms
mov
pusha
mov
call
sub
test
inc
sub
outsl
inc
ljmp
lcall
lcall
pop
call
rcrl
mul
addr16
xor
xor
hlt
ja
frstor
mov
xchg
xchg
cmc
push
insl
ret
addb
dec
sub
lret
fistps
dec
cmp
or
icebp
cld
push
test
sti
cmpsb
scas
jnp
sbb
xchg
mov
test
scas
outsb
cmpsl
orb
or
sub
lahf
sbb
pusha
addb
push
int3
mov
imul
shlb
xor
les
insl
loopne
inc
or
mov
pop
nop
pop
subb
inc
mov
mov
ror
scas
add
daa
mov
bound
repz
adc
mov
cmp
roll
xlat
ficoml
lds
ss
push
subb
popa
call
out
pop
lcall
roll
xchg
lods
mov
sbb
pushl
pop
stos
rcrl
pop
hlt
push
stc
sbb
fwait
xchg
cmp
mov
icebp
xor
pusha
sub
xchg
sub
ds
inc
jo
cmp
pusha
push
push
adc
mov
mov
mov
outsl
sub
jne
cmp
repz
cli
adc
and
dec
dec
push
je
adc
repz
nop
shlb
or
xlat
pop
ss
out
shll
push
mov
add
add
shr
xor
push
cltd
lods
inc
mov
and
xlat
cmpsl
add
push
push
enter
lcall
xchg
xor
xchg
cmp
mov
push
rcrl
cs
fst
mov
dec
jg
or
sbb
out
adc
add
sahf
shl
push
push
push
bound
jb,pn
sarl
shrl
xchg
xor
inc
xor
push
dec
rcrb
pop
pusha
jnp
lcall
gs
nop
scas
jmp
adc
stc
int
or
aaa
out
sbb
jmp
pop
aaa
sub
roll
inc
xlat
sbb
pop
xor
xor
pop
mov
fsub
subb
movb
ret
lods
dec
loopne
js
inc
mov
add
xchg
and
push
in
push
outsb
dec
mov
js
push
test
int3
xchg
in
data16
aaa
pop
cmp
xor
in
mov
cli
ja
xor
testl
mov
mov
rolb
cmpsl
fnstsw
das
mov
pusha
addb
testl
jmp
xchg
mov
mov
and
push
data16
bound
mov
mov
loopne
or
inc
cltd
xor
cwtl
push
addl
in
jg
std
jae
xlat
movsb
sbb
mov
clc
aam
sub
push
mov
enter
loop
or
sub
movsb
insb
jl
cmp
icebp
mov
and
cmpsb
push
jne
nop
xchg
and
adc
inc
and
mov
cltd
ds
ret
mov
mov
pop
repnz
das
pmaxsw
jns
ds
andl
in
cli
xchg
ror
adc
and
adc
inc
fmul
push
fistpl
rolb
imul
cmp
cmc
fcmovb
mov
inc
push
mov
jns
fsubrs
lcall
lret
jge
outsl
scas
in
in
aaa
xchg
ja
push
xor
push
add
push
lahf
daa
insb
das
push
sbb
dec
icebp
push
sbb
enter
arpl
cmp
dec
cli
inc
repz
adc
rorl
stc
aam
or
ljmp
jno
nop
inc
inc
adcb
mov
and
sahf
mov
xchg
cmpsl
sbb
mov
icebp
push
mov
outsb
jle
cmp
mov
dec
repnz
and
in
lds
pop
pop
ds
inc
sub
jb
scas
mov
fcoml
pop
es
aad
mov
and
cmp
add
js
mov
rclb
sub
pop
mov
dec
ret
mov
inc
xor
imul
bound
adc
push
mov
shrl
lock
cmp
mov
je
ret
orl
fbld
cli
nop
jne
pop
xchg
jmp
aad
sbb
mov
icebp
push
out
fwait
adc
adc
iret
aas
xor
push
inc
pop
in
sub
ljmp
loop
push
adc
popa
jg
jp
je
xor
in
ss
punpckhbw
xlat
lds
loop
sbb
pop
cmpl
popf
incb
test
fsub
adc
and
daa
daa
push
mov
mov
mov
dec
movl
lcall
test
xor
and
sbb
stos
push
lods
ret
pop
into
ficoml
jg
cmpsl
dec
add
lahf
inc
adc
mov
jg
inc
push
jnp
bound
popa
xchg
out
movl
scas
mov
es
mov
add
rorl
jo
push
mov
mov
or
movb
dec
test
out
mov
fnstcw
gs
js
mov
jp
jo
dec
fadd
sbb
cmp
stc
lods
push
rorl
cwtl
in
jp
insb
iret
xor
out
lds
stos
add
xchg
jb
xchg
ljmp
xchg
into
roll
sub
dec
lea
add
jecxz
adc
sbb
movsl
xchg
addr16
movsl
repnz
into
fldenv
pop
fidivs
cmpl
sbb
adc
adc
jecxz
inc
pop
adc
or
mov
scas
inc
pop
rclb
cli
xor
ljmp
add
push
dec
notb
pop
fbld
outsb
adc
pop
ficompl
ss
stos
sti
loopne
pop
xor
inc
mov
in
aas
pop
mov
inc
fisubrl
repnz
sub
repnz
in
mov
jle
push
pop
in
mov
scas
push
dec
out
mov
lret
insl
jge
std
xor
xchg
jo
adc
adc
mov
xor
fsts
int
lret
fbld
imul
repnz
insb
lret
inc
daa
pop
aam
adc
hlt
das
movsl
mov
pop
and
add
mov
mov
jge
push
push
out
aad
bound
lahf
xchg
stc
jno
and
daa
mov
fildll
inc
fldt
insb
addr16
clc
cwtl
or
xchg
sbb
and
pop
clc
gs
cmp
ror
dec
mov
pop
push
push
cmc
js
aaa
lcall
push
mov
stos
imul
les
cmovge
mulb
cwtl
mov
xor
xor
jbe
subb
xchg
inc
mov
stos
push
cmp
jbe
sbb
push
aaa
out
or
bound
lcall
sbb
mov
stos
xor
aad
xor
test
aas
sbb
ret
cmp
test
mov
aas
dec
test
cmp
lock
pushf
out
fsubs
dec
pop
inc
mov
test
dec
inc
cmp
stos
xchg
cmp
inc
xlat
sbb
push
aad
pop
insb
shld
popa
rorb
jmp
inc
lea
testl
add
sahf
repnz
sbb
or
xchg
cmp
mov
sbb
outsb
pop
lret
hlt
int
ret
pop
mov
iret
adc
clc
push
mov
add
push
adc
negl
lahf
cmpb
mov
ds
mov
loopne
stos
jg
push
shrb
mov
xchg
adc
daa
test
test
dec
xchg
jne
ficoms
or
jmp
mov
inc
mov
ret
inc
repnz
fldenv
jne
lock
and
lahf
push
or
ljmp
sbb
mov
lds
mov
std
iret
push
lret
testb
mov
pusha
adc
xchg
in
pop
xor
mov
daa
jle
popf
bound
gs
rol
and
and
sub
jle
pushf
mov
cwtl
out
xchg
aaa
nop
sub
xchg
lcall
stos
mov
mov
push
or
sbb
or
sub
mov
ljmp
jge
or
ret
repz
cmp
add
mov
xchg
lds
or
aam
jecxz
xchg
cmp
push
test
into
inc
mov
push
icebp
xor
dec
mov
cli
je
add
lea
daa
sbb
pushf
jle
mov
push
sub
mov
dec
mov
push
shlb
out
lods
out
xor
idivl
leave
mov
xchg
add
cli
xor
inc
rolb
loope
dec
loop
add
jp
fucomp
cmp
xchg
or
jae
push
imul
fbstp
lret
jno
mov
xchg
iret
jo
pusha
push
sub
and
mov
lock
jnp
push
cmp
outsl
mov
sbb
xchg
dec
xchg
fldcw
notb
inc
scas
sbbb
jmp
mov
mov
test
cmp
pop
fcomip
call
sbb
notb
jno
arpl
je
cld
add
xchg
inc
dec
fwait
cmpsl
ljmp
inc
or
xor
xchg
or
add
sbb
or
sbb
mov
mov
mov
ucomiss
xor
pop
les
shl
imul
inc
xchg
inc
int3
notl
addr16
mov
or
jbe
add
sub
jmp
sub
pop
xor
inc
loope
addr16
ljmp
and
in
lods
push
mov
enter
flds
gs
lea
dec
or
dec
push
xchg
and
scas
rolb
push
cld
or
test
sbb
int
cmp
push
xlat
sti
or
in
pop
or
nop
add
aas
and
movsb
stos
arpl
aaa
mov
xlat
or
popf
xor
inc
push
xlat
xor
or
mov
loope
push
in
stos
push
and
enter
pusha
mov
paddw
push
sub
sub
fs
jnp
ds
jo
hlt
jns
loope
shl
fiaddl
pop
mov
xor
push
sbb
mov
dec
repz
and
in
push
adc
jno
cmpsl
shrb
out
lea
or
pop
or
lds
mov
les
cmc
mov
push
fsubl
movsb
mov
push
add
lret
enter
jecxz
pop
or
mov
ret
fadds
push
test
and
inc
js
inc
daa
fdivr
add
mov
xchg
pop
les
ss
mov
ss
scas
mov
or
dec
or
pop
jl,pt
dec
repz
pop
addr16
xchg
data16
mov
test
popw
mov
lds
mov
pop
dec
leave
ret
inc
pop
and
cmc
test
lds
pushf
sahf
pop
ss
mov
inc
out
adc
stos
jno
scas
into
ss
inc
fst
inc
decb
mov
sti
fidivrs
or
mov
pop
dec
negb
jle
push
add
pop
inc
int3
cs
sbb
ret
popf
dec
mov
decb
daa
mov
leave
fsubrs
mov
test
mov
and
cli
dec
cmp
addr16
add
or
cmovbe
in
add
fisubrs
jne
loopne
adc
aad
cmpsb
nop
lea
dec
xor
sub
pop
jge
inc
add
movsb
adc
stos
or
or
xchg
ror
arpl
push
and
rorb
mov
fsubrl
loopne
push
popf
add
jl
in
adc
cmp
xor
cmp
push
cs
mov
mov
stos
mov
xlat
push
mov
cli
outsb
inc
adc
push
add
jae
scas
dec
cmpsb
push
lods
add
add
idivl
jle
pop
cmp
lods
cmp
stos
in
fsubr
cld
addl
std
mov
int
aaa
cmpsb
mov
mov
add
decb
mov
lret
and
imul
push
add
ljmp
inc
dec
arpl
dec
sbb
add
mov
xchg
cmp
fstpt
xor
push
js
int3
test
pop
xlat
mov
fdivrp
int3
and
loop
in
jbe
loop
lock
pop
bound
lcall
clc
loopne
mov
mov
stc
mov
xchg
lods
arpl
mov
shlb
shr
push
repnz
sub
lea
inc
pop
enter
mov
cmp
sbb
enter
mov
out
jbe
into
cmp
sub
lds
dec
pop
cmp
jmp
movl
out
mov
inc
cs
xchg
std
jae
sbb
inc
hlt
std
adc
pop
adc
push
or
and
mov
sub
sbb
icebp
ja
sti
icebp
xchg
and
mov
fldt
dec
sub
mov
js
imul
fs
dec
or
and
xchg
and
cwtl
xchg
xchg
insb
mov
sahf
cmpsb
mov
fisubs
insl
xchg
push
fs
inc
xchg
aas
or
inc
cmpsl
xchg
jb
out
mov
push
xchg
lock
test
ret
insb
int3
inc
jb
inc
in
repz
daa
xchg
out
cld
dec
dec
xchg
hlt
repz
mov
leave
xchg
mov
xchg
mov
pop
outsb
xchg
scas
or
xchg
sbb
mov
dec
imul
dec
test
call
mov
fnsave
test
fldenv
mov
jno
jb
sbb
mov
cmp
inc
pop
stos
mov
aad
outsl
adc
dec
dec
mov
ja
inc
xchg
lds
adc
into
mov
ds
or
mov
lods
jnp
push
pop
inc
pop
pop
loop
or
icebp
sub
cli
add
lahf
fstpt
shlb
icebp
inc
or
sbb
fcmovnb
stos
aad
push
jmp
sbb
mov
sbb
cmp
fcoms
xor
aam
je
in
add
add
push
jo
mov
dec
dec
mov
cmc
inc
push
or
lds
adc
lcall
fsubrl
stos
pop
scas
jnp
leave
mov
jnp
ljmp
sbb
fwait
mov
jecxz
das
addr16
inc
inc
and
push
std
pop
xor
clc
stc
nop
sub
pop
xor
xor
in
fs
fs
outsl
cmp
in
push
and
shll
cmp
inc
dec
jg
and
sbb
cld
scas
scas
mov
sbbb
push
push
lahf
scas
scas
int3
shlb
lds
ret
adc
adc
andl
dec
and
add
in
loopne
xchg
add
mov
rorl
insb
mov
push
jg
repnz
cmc
into
pop
jbe
cwtl
shr
jno
xchg
xchg
and
sub
mov
pop
lds
sbb
stos
xlat
jo
mov
in
adc
pop
cmp
jae
movsl
xor
setne
in
jg
mov
mov
fisubs
cmpsb
test
testl
out
nop
dec
icebp
stc
or
cmp
jns
ds
fldenv
rcrb
sub
jo
repz
popa
or
outsb
or
sahf
popa
xchg
push
pop
cmp
bound
sub
xchg
and
push
imul
daa
pushf
pop
xchg
mov
cmc
mov
push
shrl
sbb
mov
and
jp
add
hlt
pop
movsl
and
jnp
mov
dec
cltd
push
jbe
imul
push
test
xchg
mov
imul
pushf
idivb
sub
pop
loope
pop
add
incl
test
movsb
fnstcw
mov
popa
scas
mov
pop
or
insl
cmp
sub
divb
mov
test
fldenv
jnp
fs
data16
aad
lcall
insb
cwtl
insb
sbb
sbb
xorl
or
add
lret
testb
call
leave
dec
mov
mov
aas
inc
ret
mov
mov
inc
outsb
pop
sahf
lahf
je
mov
cmp
mov
movntq
mov
push
inc
pop
sbb
xchg
dec
xchg
ss
call
inc
push
cmp
xchg
ds
aas
dec
mov
rcll
jb
shlb
fimull
dec
insl
or
cmp
daa
inc
dec
out
dec
pop
lahf
dec
sbb
ja
adc
out
mov
pop
and
add
lds
jge
enter
inc
xlat
adc
adc
sub
or
xchg
mov
dec
or
movsl
dec
xchg
push
lea
scas
or
adc
xor
call
cmp
bound
mov
adcb
sbb
inc
mov
fstpl
mulb
mov
adc
insl
in
cmpsl
nop
ljmp
lock
lret
lods
fcomps
je
out
jmp
addl
cwtl
shlb
dec
fs
push
imul
pop
imul
add
push
inc
mov
inc
cmp
sbb
and
mov
dec
inc
in
in
push
xor
frstor
cltd
stos
mov
inc
hlt
sub
xchg
xchg
xchg
cmp
or
test
push
fxch
push
inc
stos
push
out
pusha
addr16
mov
lds
add
jae
xchg
popf
xor
insb
hlt
mov
pop
mov
mov
call
xlat
dec
mov
pop
xor
outsl
cmp
mov
dec
inc
xchg
dec
sbb
test
rcl
cmpsb
mov
or
jge
or
mov
insl
push
inc
xchg
sub
pop
push
and
dec
xor
rcrl
jl
cwtl
xor
in
movsb
outsl
sbb
or
test
sub
mov
lods
sbb
icebp
sbb
cmp
xlat
test
and
lock
and
xor
inc
xor
ja
mov
jo
jns
mov
jmp
push
insl
mov
jle
int
xor
mov
mov
xchg
int3
inc
mov
push
iret
int
shll
into
xchg
dec
hlt
pusha
ja
add
cmpb
xchg
sub
aas
ds
pop
cmpsl
push
frstor
repz
sub
pop
les
ljmp
std
mov
mov
xor
jnp
rcrb
sbb
dec
pop
imul
xor
pop
call
or
ss
push
add
mov
out
and
sub
fs
mov
aas
ljmp
adc
mov
push
stos
inc
or
pusha
pop
mov
out
inc
xorb
dec
jge
xor
aad
jnp
int3
movsl
mov
cmpsb
negl
xchg
and
dec
push
mov
mov
mov
in
sub
rol
imull
divl
mov
push
mov
sbb
gs
or
enter
test
cmc
pop
jnp
pop
jmp
xchg
ja
pop
adc
jne
jne
mov
insb
xchg
push
clc
mov
lret
aad
pop
pop
jmp
sahf
xor
push
mov
pop
addr16
cs
test
mov
inc
arpl
inc
jecxz
mov
stos
add
push
fnstsw
inc
pop
xchg
push
adc
mov
out
out
xor
ret
jmp
jge
cmpsb
mov
pop
push
mov
das
in
jle
sbb
mov
pop
adc
sbb
sbb
mov
icebp
enter
xchg
call
mov
pop
insl
mov
push
call
adc
divb
fsubrl
sbb
pop
jne
push
cmpsl
ljmp
adc
mov
cli
fnstsw
lods
mov
inc
enter
call
daa
pop
mov
or
add
mov
shr
mulb
adc
je
mov
or
jmp
fldenv
cld
or
xor
push
jp
inc
push
into
mov
jb
scas
adc
ss
in
mov
loopne
test
cmp
daa
jge
pop
pop
js
es
mov
imul
loopne
mov
fdivs
sahf
clc
add
and
addl
shlb
adc
push
pop
sbb
xchg
push
mov
inc
mov
xchg
mov
popa
mov
sub
cmp
dec
inc
fs
fldl
test
dec
sti
cltd
xor
fcmovb
fmuls
sbb
aad
inc
add
repz
out
sahf
push
jno
mov
arpl
adc
lret
jns
cmp
pusha
dec
lret
ret
sub
add
imul
pop
ss
in
push
inc
and
mov
mov
jmp
inc
inc
sbb
mov
sbb
pop
adcl
jp
add
stos
xchg
cmp
popa
or
mov
xchg
sub
cmc
sbb
inc
xchg
pop
and
shll
pop
adc
daa
mov
mov
cmp
push
mov
je
jl
mov
push
std
inc
push
fildl
pushf
push
ss
fnsave
sarb
fcoml
call
mov
jne
push
fiaddl
test
mov
sub
push
mov
mov
push
or
pushf
push
xor
jne
call
fcoml
fbld
ss
xor
adc
xchg
xor
push
std
jne
jmp
and
repz
inc
jge
xchg
xchg
inc
mov
enter
stc
adc
jns
scas
jmp
mov
jg
mov
pop
mov
or
inc
leave
mov
sub
int
cltd
mov
loope
mov
test
cmpsb
dec
jnp
pop
ljmp
xchg
sbb
aam
inc
jmp
dec
jnp
sub
popa
in
cld
xchg
inc
andl
ret
fimuls
fs
outsl
push
push
lcall
sbb
push
push
out
jne
mov
in
mov
inc
sbb
fildll
lahf
sar
adc
dec
lahf
mov
xlat
ret
call
dec
and
rol
push
or
dec
and
mov
mov
pop
in
movsb
mov
js
xor
bound
cmp
push
cmp
or
in
sahf
scas
mov
and
mov
jle
rorb
push
push
inc
dec
push
and
jne
outsb
out
dec
and
dec
push
push
popa
hlt
cmpsb
daa
or
aad
sub
sbb
stos
xchg
fsubr
jg
adc
lahf
or
fsubrp
cmp
add
jns
shlb
push
orb
subb
adcb
xorl
mov
test
pop
pop
push
fdivl
mov
cmp
rolb
aam
jle
scas
mov
daa
mov
dec
outsl
and
pop
push
nop
pop
sti
adc
mov
mov
mov
scas
mov
sub
test
sbb
add
pusha
out
sub
addl
adc
xor
ds
sub
or
fdivs
pop
pop
inc
mov
dec
jecxz
pop
loope
cmpb
jne
push
repz
pusha
xchg
gs
lds
cmp
incl
je
dec
sbb
mov
in
xor
sub
sub
and
pop
jmp
xlat
scas
adc
iret
clc
xor
sub
stos
xor
ret
dec
shrb
cmp
dec
push
mov
out
xchg
bswap
or
sub
and
mov
test
fldt
or
pop
push
pop
movsl
or
xchg
cmp
in
mov
sbb
xchg
mov
mov
test
fistpl
mov
or
rorl
mov
dec
xchg
xor
lcall
out
fsubrs
insl
mov
xchg
sbbb
adc
arpl
movsl
mov
jne
push
ljmp
jae
mov
mov
adcl
in
sbb
out
jo
in
fisttpl
pop
dec
inc
or
jp
shrb
ret
add
xchg
pop
mov
mov
jmp
loope
rcll
pop
adcb
xor
fs
mov
loopne
mov
cmpsl
xor
dec
jecxz
push
fbstp
je
cmp
mov
fbstp
xor
adc
out
mov
mov
cmpsl
aaa
rorl
fbstp
xor
stos
push
and
adc
fsubrl
adc
mov
xor
cmpsl
mov
icebp
and
dec
nop
sahf
push
push
out
sub
mov
sub
or
mov
xor
jbe
mov
andw
pop
fsubrs
rcrl
inc
lds
rorb
mov
roll
hlt
mov
aaa
insl
rclb
pop
add
mov
mov
imul
jecxz
add
out
jp
mov
sub
aam
lret
or
andb
push
sub
test
mov
lods
inc
icebp
aaa
cli
test
mov
lock
std
push
adc
mov
lods
fldcw
lcall
mov
loop
adc
aad
in
push
xchg
push
test
mov
gs
lods
sub
les
test
push
jge
popf
cs
and
jle
or
jo
pop
sub
fldcw
pop
adc
popf
jbe
dec
mov
pop
jmp
int
aas
fidivl
mov
inc
rcl
dec
dec
mov
fdivr
mov
add
mov
std
and
popw
or
pop
in
popa
clc
jg
mov
scas
sbb
stc
outsl
adc
dec
movsl
sbbb
fidivl
add
clc
call
xchg
idivl
push
loope
mov
outsl
adc
sbb
popa
or
int3
or
and
popf
sbb
xchg
popa
or
loopne
fidivs
aam
cmp
lock
and
iret
pop
sub
popa
jl
mov
lahf
mov
jl
insb
xlat
lea
and
add
dec
loopne
xor
sub
push
dec
push
push
into
mov
cmp
lock
mov
dec
aaa
ret
xor
pop
xchg
jae
das
mov
loopne
jle
jmp
data16
push
fldt
movsl
mov
xchg
repz
mov
jmp
ljmp
jne
mov
xchg
dec
sbb
push
movsl
xorb
ret
addb
fiaddl
xchg
push
sub
inc
xor
mov
xchg
mov
adc
xor
inc
fs
sbb
jnp
leave
ss
pop
mov
call
inc
mov
xlat
test
jae
jb
pop
inc
fs
mov
push
testl
mov
inc
call
or
fcmovnbe
pop
or
jbe
lods
inc
jmp
or
addr16
or
and
sub
sbb
cmp
adc
pushf
mov
jge
movsl
push
adcb
and
movsl
jae
mov
sbb
data16
ret
push
mov
cmpsb
or
lcall
ficompl
pop
cld
sbb
push
mov
negl
rol
xchg
mov
icebp
fsubr
xchg
push
mov
into
mov
aam
test
sub
iret
mov
xor
or
mov
push
test
jno
mov
jae
shlb
rorl
leave
rclb
add
divl
test
or
adc
mov
pop
leave
xchg
xchg
sti
fists
insb
out
enter
lcall
fcmovnu
xchg
mov
jae
ds
inc
ljmp
insl
inc
mov
cmp
fxch
pop
sub
push
lahf
or
cmp
dec
es
add
cwtl
jnp
clc
clc
adc
jns
nop
sbb
inc
repz
sbb
andb
data16
push
mov
xchg
and
push
xchg
xchg
and
or
faddl
addl
mov
mov
inc
scas
add
or
aas
loopne
daa
pop
cmc
push
repz
scas
adc
out
andb
and
xchg
lcall
in
xchg
mov
and
mov
int
sti
stos
pop
sub
adc
decl
push
out
mov
out
xor
cmp
cmp
jle
pop
out
mov
jnp
mov
fdivp
push
insb
outsb
popa
shll
sub
adc
sub
pop
inc
xlat
sbb
int
into
sbb
fildl
sub
mov
std
xor
fiadds
dec
jge
sub
into
outsl
inc
sbb
test
orl
pop
mov
pop
repnz
out
test
stos
add
pop
xor
pop
gs
andl
xlat
jmp
mov
lea
lods
dec
negl
and
je
xor
push
imul
ret
outsl
aad
push
pop
subl
into
push
pop
in
push
iret
jnp
mov
clc
jmp
dec
pop
cmp
aaa
xor
movsb
mov
jno
push
shl
xchg
adc
xchg
pop
insl
in
add
scas
sbb
xchg
ret
fbld
jbe
popa
xor
adc
xlat
rcl
jmp
dec
rcrl
cmp
xchg
loopne
sbb
push
stos
sub
pop
out
xor
mov
lock
in
push
lods
sbb
push
int
sbb
ds
jo
mov
lock
loopne
pushf
adc
orb
shlb
and
mov
sbb
mov
rcrb
rcr
pop
ret
sub
in
out
sub
cmp
je
and
scas
dec
lret
in
cli
ret
cmc
lea
std
push
scas
sub
mov
imul
push
pop
cmp
pop
jecxz
popf
sub
xlat
xor
ss
rolb
rorl
xchg
js
int
popl
jecxz
jle
cmc
das
rolb
or
mov
jo
mov
lods
aas
cli
pop
enter
pop
xor
popf
lods
aas
pop
outsl
shrl
cmp
inc
ret
fidivl
out
xchg
cmp
fcoms
push
mov
sub
daa
int3
push
popa
sbbl
sti
das
mov
int
add
or
fimuls
dec
dec
inc
aad
mov
loope
inc
fwait
dec
fnstsw
movsb
mov
in
pop
mov
add
pop
jp
scas
out
dec
jp
lods
movsb
sub
outsl
stc
mov
jecxz
movb
sub
andl
cld
dec
shrb
inc
push
cmc
cs
incb
pop
int
sub
sti
xchg
mov
imul
xor
int3
cmpsb
jle
xchg
sub
and
mov
push
inc
cli
and
into
jne
inc
ja
idivl
xchg
sub
int3
movsb
mov
mov
inc
icebp
icebp
mov
dec
lcall
fcoml
xchg
mov
pop
mov
lds
inc
popa
xchg
pusha
loop
subl
sub
pop
inc
adc
repz
sti
shld
hlt
push
icebp
jnp
adc
int
jne
pop
repnz
xlat
jbe
add
push
mov
test
data16
push
mov
and
mov
cmp
push
in
adc
pushf
adc
push
lods
insb
xlat
or
cmp
mov
fadds
sbb
stos
mov
scas
into
push
test
jecxz
mov
pusha
or
pop
cmp
mov
sbb
jns
out
mov
adc
xor
xor
ficomps
fdivs
cwtl
inc
repz
insl
and
subl
repnz
mov
push
popa
adc
jno
cmp
gs
inc
xor
mov
xchg
push
scas
dec
pop
adcb
pop
fcmovnbe
cmc
stos
sahf
lods
je
loop
mov
call
xor
out
jae
cmp
pop
inc
fst
rcl
sbb
sub
loop
ds
fidivrs
aad
mov
in
mov
ds
mov
pushf
sub
pop
lea
push
test
pusha
ljmp
sub
xchg
xor
mov
sbb
sahf
fnstenv
inc
jmp
jne
xor
jge
jle
pop
jns
inc
aaa
lahf
in
dec
scas
adc
stos
out
test
or
or
cmp
std
lods
pop
fsubs
inc
inc
cmp
sub
lret
inc
mov
std
cwtl
sub
leave
push
dec
and
outsl
cs
jg
cs
sub
push
aam
xchg
xchg
pop
lcall
cmpsb
xsha256
cmpsb
xlat
in
leave
xchg
pusha
aad
lea
xor
sub
sbb
mov
cmpsb
mov
outsb
call
mov
mov
jl
sub
xchg
inc
and
imul
scas
push
xchg
add
lods
push
cmp
ja
popa
mov
sbb
inc
testb
out
pusha
sahf
cli
cmp
pop
cmp
jle
repz
cmp
jg
jl
in
dec
push
sub
or
sbbb
fdivl
cmp
inc
aas
stos
xlat
icebp
out
xor
sti
rorl
push
outsb
mov
sbb
dec
arpl
in
jns
fcom
fnstenv
cwtl
sti
and
sub
dec
lock
imul
pushf
imul
in
and
xchg
pop
aaa
fdivp
jo
pop
scas
mov
ljmp
mov
dec
mov
cmpsb
lods
sbb
sub
lcall
jp
add
popf
sbb
push
xor
cli
cmp
ret
ffreep
mov
cmpsb
jo
sbb
sbb
mov
push
mov
adc
popa
fwait
push
sub
add
fstps
nop
daa
stos
jle
cltd
int3
inc
add
out
push
out
test
sti
push
pop
xor
mov
xor
adcl
ljmp
fwait
mov
sbb
add
or
fimull
pop
inc
jbe
in
les
xor
sub
push
pop
mov
gs
mov
cwtl
add
sbb
push
push
xchg
cmpsl
or
mov
sbb
ret
sbb
ret
into
lock
in
xor
cmp
addb
xlat
sub
or
sti
xchg
dec
cmc
push
jae
mov
adc
pop
fldl
lcall
and
dec
mov
outsb
popf
pop
dec
iret
adc
lock
stos
jne
in
dec
iret
dec
ja
lods
sub
push
scas
mov
mov
pop
sub
lock
out
cmp
mov
jl
push
loopne
jae
push
add
int3
bndstx
and
repnz
push
jns
sub
orl
xchg
xor
out
sbb
sub
sub
rcrb
fiadds
ja
mov
aad
sub
test
shr
popa
and
xor
scas
aad
push
out
jp
mov
adc
ja
sti
fstpt
push
sbb
and
mov
scas
cli
xor
mov
test
or
aaa
mov
sbb
cmp
test
jmp
shrl
inc
lds
in
and
pop
inc
fcoms
test
xor
cmc
lods
xchg
push
mov
insl
call
cmp
cmp
sbb
ret
inc
push
inc
and
jbe
mov
lcall
inc
es
icebp
push
movsl
andl
adc
or
cmp
pop
xor
sub
mov
adc
and
xor
sti
aad
call
fisttpl
xchg
inc
mov
test
rolb
sub
das
or
movsb
mov
add
into
dec
stos
mov
mov
std
cltd
hlt
outsl
add
sbb
outsb
adc
decb
adc
mov
sti
mov
cmp
jo
ret
inc
xlat
jb
jbe
cmp
jbe
mov
int3
fists
jle
outsl
fsubr
lods
sbb
inc
jmp
loopne
icebp
popa
mov
mov
aam
sbb
or
pushf
stos
nop
cld
pop
ljmp
sbb
mov
lret
or
and
sbbl
sbbl
inc
in
stos
ja
jae
test
mov
cltd
xchg
aas
mov
sbb
xorl
ljmp
xor
mov
popl
adc
xlat
aad
mov
sub
sti
sub
ja
out
mov
xchg
jecxz
mov
ret
enter
out
sub
fmulp
aad
sbb
pushf
andl
mov
mov
mov
das
rcrl
jb
cmpsb
dec
mov
in
movsb
add
push
push
inc
in
push
mov
shll
in
test
lds
decb
ljmp
clc
or
adc
scas
data16
js
rolb
out
xor
cmp
ljmp
jno
mov
mov
mov
cld
stos
push
inc
ss
dec
dec
test
divb
bound
pop
iret
and
pop
insb
mov
outsb
sub
mov
mov
pop
in
cmp
pop
mov
js
sti
mov
push
aas
fistpll
shlb
cmc
mov
gs
int3
fdivrs
push
mov
dec
leave
push
and
lods
push
jbe
mov
into
dec
popa
pop
mov
call
push
pop
lret
enter
clc
pop
jp
pop
filds
stc
scas
js
mov
sub
inc
scas
cmp
in
adc
xchg
push
es
adc
xor
dec
and
jmp
arpl
inc
jecxz
jle
mov
rcrb
add
inc
dec
push
or
jp
int3
aaa
push
idivb
stos
mov
in
daa
int
add
or
adc
imul
sbb
sti
xor
subl
into
into
int
jae
mov
es
inc
popa
scas
dec
xor
cmp
clc
jmp
sub
pop
xor
mov
in
stos
in
imul
fldl
inc
or
pop
lock
mov
ja
cmp
push
pop
pop
rcrb
dec
sbb
jb
pop
mov
push
insl
sbb
add
insb
xor
popf
gs
push
xchg
pop
adc
push
xor
int
mov
cmc
faddl
add
popl
mov
fdivs
pop
push
jmp
pop
cmc
jo
mov
aas
push
sub
and
inc
test
push
gs
iret
mov
fsubrs
ds
movsb
out
in
movsl
mov
loopne
add
dec
pop
xchg
mov
pop
mov
xchg
sahf
sub
ss
clc
arpl
sub
decl
loope
pop
push
pusha
mov
jo
outsb
cmp
mov
mov
ret
push
dec
imul
lahf
mov
jecxz
ret
pop
or
aas
mov
or
mov
syscall
test
cmpsl
mov
pop
loopne
pushf
add
in
mov
adcl
stos
popl
jne
in
dec
out
stos
test
cwtl
dec
fwait
cmpsl
dec
out
adc
xor
repnz
mov
mov
push
repz
mov
sti
into
gs
mov
orb
leave
xor
movsb
cmp
cmp
sbb
sbb
xor
test
in
outsl
shl
add
mov
sub
into
in
das
add
pop
sahf
lahf
sub
sbb
sbb
push
lret
mov
test
push
lret
into
fs
mov
mov
loopne
mov
sbb
mov
sti
lods
and
lcall
scas
repnz
push
xor
enter
mov
jae
jno
or
repz
bound
movsb
jb
mov
lret
lret
cmc
test
cmp
mov
cmp
mov
shl
bound
nop
movsb
test
div
jp
or
imull
rorl
inc
fucomip
cltd
test
pop
pop
xor
pop
xchg
lods
adc
lcall
lods
sahf
or
nop
dec
mov
sbbl
out
test
xor
iret
in
test
sub
scas
scas
insl
push
mov
orl
adc
scas
arpl
xor
enter
sbb
xchg
lahf
inc
test
arpl
push
ss
outsl
push
add
enter
icebp
lods
xor
nop
imul
sahf
movsl
pop
daa
mov
daa
mov
lcall
inc
test
aam
nop
clc
adc
movsb
mov
jg
xchg
hlt
xor
fmul
mov
pop
mov
and
negl
repnz
sbb
dec
insl
sbb
dec
dec
scas
int3
cmc
outsb
jg
mov
aad
inc
repz
loop
xchg
inc
push
fwait
xor
inc
adc
mov
cmpsb
jl
test
jl
in
daa
add
jmp
ds
jb
xor
inc
pop
repz
xor
mov
jp
js
mov
fisubl
loope
sti
cmp
adc
lret
rol
fcompp
sbb
fsubr
sbb
sbb
xchg
aas
dec
fildll
jbe
add
call
adc
sti
test
xchg
cwtl
das
add
in
push
loope
xor
push
push
mov
and
mov
pushf
in
jo
push
cmp
mov
lds
in
cmp
ja
insl
mov
shr
jg
inc
scas
add
xchg
push
jp
pop
call
sub
ljmp
jmp
shlb
dec
mov
stc
sub
xchg
mov
add
inc
push
and
scas
cmpl
adc
dec
out
addr16
dec
flds
out
mov
shl
ret
test
test
add
dec
dec
pushf
js
bound
ret
sbb
mov
int3
push
jl
pop
out
jge
push
arpl
xchg
clc
or
sbb
arpl
cmc
mov
adcl
ret
mov
or
dec
dec
push
push
mov
jnp
cmc
add
imul
xchg
ret
xor
inc
sarb
adc
jb
and
inc
out
push
outsl
aad
stos
inc
or
js
out
ret
mov
imul
movb
mov
lock
enter
ds
pop
lods
mov
mov
and
mov
xchg
test
mov
push
test
stc
push
cltd
or
mov
fdivl
ret
lahf
push
sbb
xchg
outsb
jge
xor
movsb
ret
testl
mov
int
pop
mov
fldenv
adc
js
cmp
stc
fmull
out
lret
cld
sbb
inc
jle
imul
insb
add
test
rcrl
inc
cltd
das
jbe
insb
fs
mov
push
cmpsl
repnz
lods
dec
lcall
adc
inc
adc
fnstenv
jne
mov
jp
or
lret
ja
mov
aad
xor
subl
insb
push
je
xor
das
cmp
icebp
sbb
ret
mov
push
aaa
push
mov
push
sub
cmp
pop
mov
pop
and
lods
jne
out
xor
imul
shl
cli
stos
adc
sub
mov
popl
inc
cwtl
inc
add
test
lods
pop
lret
das
jo
sti
pop
xchg
inc
test
xchg
inc
inc
sub
cld
mov
roll
cmp
lret
pop
pop
lahf
or
in
sub
cmpsl
push
pop
out
mov
stos
mov
and
sbb
cmc
jl
arpl
mov
ret
add
test
jb
dec
rolb
adc
jg
jo
xchg
lods
xchg
negb
push
ljmp
pushf
out
and
stos
pop
leave
mov
aaa
hlt
in
std
shr
and
das
push
mov
mov
cwtl
je
mov
out
scas
ja
sbb
mov
cld
mov
mov
or
cmp
cmp
mov
jmp
hlt
push
out
xor
sbbl
in
add
orb
loop
int3
jge
outsb
sub
mov
sub
imul
imul
pushf
pop
call
out
mov
out
fcoms
or
and
in
add
sub
popa
xchg
sub
sub
lock
pop
mov
daa
ljmp
ficompl
dec
inc
data16
mov
leave
int
imul
mov
mov
ret
xchg
fwait
xchg
dec
adc
test
sub
adc
nop
pop
add
jbe
in
mov
je
scas
push
fcomps
out
pop
mov
sub
pop
cmc
cmp
aad
rcrb
add
test
fdivrl
mov
xor
arpl
scas
mov
stc
andb
les
das
xchg
pop
scas
adc
xchg
xchg
xor
xchg
and
je
pop
test
or
mov
arpl
jmp
pop
and
inc
scas
inc
xor
int
das
lahf
lds
hlt
jmp
cmovbe
or
into
mov
cmpsb
sbb
add
test
add
mov
mov
xchg
out
xor
cwtl
arpl
pop
mov
addr16
mov
gs
movsl
icebp
popf
fs
subl
mov
ficomps
idivl
mov
adcl
in
and
ret
outsl
into
ret
mov
je
push
outsb
add
xchg
imul
xor
movsb
incb
outsl
mov
addr16
cmp
loop
mov
mov
inc
testb
sub
pushf
cmp
in
repnz
in
loope
cli
lds
adc
mov
bound
add
test
xchg
clc
add
les
adcl
jno
jmp
shrl
sbb
xchg
fldl
xchg
jne
data16
inc
xor
mov
movsl
push
int3
cmpsb
lds
xor
or
jecxz
and
dec
mov
inc
and
int
addr16
mov
out
movsl
mov
lds
add
mov
insb
push
rorb
mov
jp
imul
mov
test
pusha
data16
push
adc
mov
push
cmpsl
or
or
cmpl
or
in
cmp
mov
pop
cmp
dec
xchg
inc
sub
fwait
loope
ficoms
mov
test
movsb
test
pop
lock
cmpsb
sub
int
sub
sahf
pop
hlt
mov
sti
xchg
pop
sbb
mov
mov
xchg
xor
mov
les
insl
and
int
adc
repnz
movsl
mov
mov
xchg
sub
dec
test
lret
data16
stos
inc
lea
into
addb
xor
es
push
mov
push
lods
jmp
xchg
hlt
mov
addr16
pop
jbe
test
inc
push
out
aaa
dec
into
gs
jne
fldenv
and
pop
scas
fnstsw
in
mov
fsubrs
dec
mov
cmp
or
shll
in
xchg
cmp
pop
mov
jmp
mov
sahf
clc
pop
outsl
add
pop
movsb
test
movsb
sbb
testl
jl
cli
data16
sub
sahf
dec
test
jge
dec
in
mov
fwait
in
xor
dec
sub
push
jmp
mov
adc
idivb
lods
pop
imul
call
aaa
into
add
outsl
push
aas
or
popa
cmp
pop
call
faddp
rolb
hlt
dec
rcrl
and
jbe
dec
add
xor
shrl
push
xchg
sub
sarl
out
adc
mov
in
jg
prefetcht0
dec
add
std
sahf
push
mov
or
mov
jne
cmp
pop
imul
mov
lret
dec
test
outsb
mov
decb
cmc
mov
insb
shrl
cmp
push
aad
lret
xor
loope
fcoml
push
cltd
xor
mov
mov
test
outsl
push
sub
xchg
sub
in
in
xor
add
sbb
jns
stos
out
int3
dec
in
inc
or
loopne
mov
decb
add
loop
insb
add
inc
fsubl
mov
rolb
shrb
les
clc
in
adc
sbb
dec
cmp
sbb
into
mov
pop
and
ret
pop
inc
inc
in
je
loope
xchg
test
push
ljmp
out
xchg
nop
arpl
les
xchg
test
out
mov
mov
and
xchg
cltd
loop
int3
nop
xor
les
aas
lea
lods
xchg
xchg
xchg
sub
les
inc
pop
test
mov
xchg
adc
nop
pop
xchg
sub
xchg
xor
fs
cwtl
pop
xor
popl
montmul
cmpsb
insb
or
jnp
mov
xchg
mov
jno
mov
mov
mov
or
dec
in
sub
xchg
stc
addl
fcom
mov
fildll
fsubrs
dec
into
gs
push
mov
mov
popl
daa
data16
push
cmp
jae
jne
in
xchg
cli
xchg
enter
cmc
jmp
lds
lahf
ss
xchg
sub
ljmp
pop
or
cld
lock
and
not
imul
testb
imul
shll
inc
fucomp
cmc
mov
push
push
dec
in
rcr
cmc
in
adc
push
or
mov
or
push
pop
sbb
dec
loope
lds
imull
fsubrs
and
inc
pop
iret
inc
fscale
into
ss
sub
pop
sub
loope
iret
pop
cmc
std
mov
icebp
out
inc
fstps
xor
push
mov
shlb
cmp
fwait
jo
jp
cmpsb
out
xlat
sub
jmp
inc
or
jno
insb
add
test
mov
fs
jo
jp
xchg
sub
loopne
loop
push
mov
and
imul
jns
mov
cli
xchg
in
mov
ret
push
rcrb
hlt
daa
push
in
push
and
jecxz
ret
sbb
icebp
shr
addl
mov
inc
lret
sbbb
adc
jmp
adc
jge
push
jge
xor
or
pop
cmp
pop
negb
cmp
insb
or
aad
mov
dec
fistps
inc
cmp
jae
lds
mov
rcl
incb
inc
ss
adc
jge
cmpsl
lret
aam
and
dec
lcall
scas
call
inc
cmovl
sbbb
jg
xchg
js
ret
loopne
popf
adc
test
mov
pop
out
lret
jmp
shrb
or
jg
xorl
add
lea
mov
mov
outsb
push
jmp
sbb
loope
xchg
sahf
xor
adc
sbb
push
jecxz
xor
imulb
lret
bound
push
mov
cmpsb
xchg
sub
or
add
add
or
cmp
fisubrs
data16
xchg
jmp
jns
lret
pop
inc
inc
and
add
push
push
in
out
jae
sub
cmp
imul
mov
mov
ficoml
push
pop
icebp
or
jg
fidivs
shll
add
sbbl
dec
sbb
dec
outsl
loopne
sahf
xlat
jo
push
test
mov
mov
or
cmp
push
adc
add
movsb
cmp
jecxz
or
adc
sbbl
add
sbb
dec
loope
into
dec
loop
loopne
jno
and
test
mov
xor
sub
fdivl
ret
das
icebp
in
dec
sbb
jno
pop
or
xor
pop
stos
inc
sub
jp
mov
negl
mov
shrb
cwtl
pop
test
cwtl
das
or
mov
adc
xchg
inc
popf
adc
or
pop
lea
add
fdivrl
adc
bound
mov
scas
mov
push
sahf
xor
mov
insb
add
jno
lock
daa
mov
mov
fisubrl
daa
cltd
xor
push
bound
mov
mov
fdivrl
outsb
lcall
mov
mov
fildl
cltd
adc
daa
lea
and
arpl
test
mov
testl
add
xchg
stos
test
inc
pop
fdivrs
ljmp
lret
sti
push
pop
mov
sbb
mov
mov
add
leave
sahf
xor
js
mov
lret
shlb
out
dec
loopne
shlb
mov
ds
xor
mov
xchg
mov
loopne
xor
leave
mov
cli
xor
or
mov
cmpsl
lahf
fmull
push
shll
repz
in
pusha
adc
movb
lods
mov
dec
in
fdivs
mov
sub
pusha
or
pop
inc
test
xchg
mov
dec
in
fadd
push
push
mov
jo
popa
or
ret
fs
mov
lods
inc
mov
pushf
xor
scas
lret
filds
loope
xor
sub
in
xchg
push
and
xor
testl
das
cld
fdivl
repnz
in
and
and
and
sti
xchg
sub
push
stos
pop
push
orl
pop
mov
out
and
insl
mov
sahf
dec
pop
cmc
jg
mov
xchg
mov
pushf
imul
xor
adc
xchg
daa
js
sbb
sub
jmp
inc
cmpsl
loop
sub
ljmp
clc
loop
xor
or
fmuls
sub
cmp
addb
jae
xchg
movsb
xchg
sub
sbb
xchg
sbb
jbe
pop
enter
out
pop
sbb
icebp
popf
pop
adc
xorb
icebp
lods
mov
sbb
int3
test
test
xlat
and
aam
aam
mov
in
xlat
rcll
stos
out
fxch
push
mov
sbb
xchg
mov
in
jl
mov
sahf
xor
dec
lock
in
push
call
cmpsl
movb
xchg
cmc
mov
pop
sbb
icebp
sub
add
cmp
or
test
add
push
cltd
ljmp
fnstcw
jo
lods
into
mov
mov
movsl
mov
shrb
inc
lret
aam
in
sbb
xor
or
lea
add
fildll
fcoml
sbb
cmpsb
mov
cmc
and
lods
push
mov
loope
ds
pop
cmc
mov
stc
cmp
cmp
ret
mov
dec
ret
xor
test
inc
pop
shl
jge
xchg
cmpsl
pop
add
imul
mov
movl
in
pop
lock
ret
mov
adc
out
stos
and
icebp
mov
or
rorl
insb
fisttpll
add
or
sub
adc
push
outsl
stc
xchg
lds
mov
in
insb
add
pop
mov
dec
into
push
mov
pop
fisttps
rcrl
sub
ds
mov
out
insl
add
inc
sbb
cmp
push
lods
test
xchg
lods
xchg
ljmp
pop
adc
repz
shll
dec
fmuls
mov
aad
dec
jecxz
notb
fdivl
icebp
cmp
shlb
pop
test
mov
test
fs
mov
fiaddl
or
subb
mov
jns
ds
aam
dec
mov
insb
pop
daa
mov
mov
and
notb
fdivp
in
dec
pop
mov
mov
mov
xor
jns
mov
jne
xor
push
into
rcll
push
movsb
inc
mov
jbe
push
ljmp
or
out
cmc
js
mov
sub
stc
repz
add
ja
xlat
inc
jmp
pop
stc
cmp
cmp
movsb
jb
sarl
inc
into
in
pushf
nop
pop
movsl
xor
or
insb
popf
adc
into
pop
inc
movb
sbb
pop
movl
fcompl
add
adc
fsubp
ljmp
sldt
pop
sbb
cmpsb
and
dec
jae
shrl
inc
mov
xor
sahf
xor
jnp
bound
cmp
xor
sbb
inc
mov
hlt
mov
lret
pushf
xchg
xlat
push
ljmp
scas
push
gs
sub
push
add
fwait
and
scas
js
cmpl
jecxz
adc
nop
pop
les
mov
xor
incb
dec
xor
inc
enter
sub
std
sub
mov
adc
test
pop
jne,pn
mov
aas
inc
add
out
xor
xor
mov
dec
dec
push
and
xchg
inc
xchg
xchg
adc
cmp
jns
rorl
in
pop
inc
xor
cli
pusha
pop
cmp
das
sbb
lcall
sbb
mov
sti
xor
xchg
mov
rorb
scas
fwait
pop
std
jecxz
pop
mov
or
cmp
insl
fwait
movsb
dec
dec
insb
out
test
mov
inc
sbb
rol
sub
adc
jmp
jle
adc
add
daa
add
mov
notl
mov
push
xlat
inc
pop
icebp
sbb
into
cmp
bound
xor
inc
xor
inc
sbb
mov
cld
jl
leave
bound
inc
xlat
gs
scas
push
sub
and
cwtl
insb
push
xchg
pushf
sub
incl
add
push
adc
jbe
xor
mov
sbb
cltd
jbe
pop
add
push
mov
sbb
es
mov
repz
xor
cmpsl
xor
adc
adc
mov
lock
and
rorl
inc
xchg
pop
jne
pop
lret
cld
dec
data16
push
sbb
aad
adc
scas
bound
add
or
jo
inc
inc
sarb
mov
cmc
inc
lods
xchg
xchg
hlt
and
push
push
adc
push
cmpsb
mov
pop
fiaddl
push
fiaddl
into
scas
arpl
cmp
clc
or
fwait
pushf
lods
mov
ret
xor
loop
in
push
pop
movsb
xor
add
aas
test
sahf
orl
add
mov
sub
sbb
outsl
pop
repz
mov
fsub
xchg
mov
and
cmp
fcoms
mov
stos
notb
lret
into
loop
push
ljmp
mov
dec
mov
cltd
mov
ljmp
repz
mov
insb
movsb
test
in
inc
in
jecxz
popa
adc
xor
fldt
into
es
cmp
negl
nop
pop
mov
stc
hlt
push
jl
bound
das
ret
add
mov
mov
or
mull
mov
imul
lcall
cmc
jmp
jmp
push
fistpl
fdivrl
shrb
push
jne
rorl
cmp
nop
insb
enter
mov
mulb
sbb
pushf
cmpsb
xchg
sbb
sub
insb
mov
out
mov
dec
lods
push
int3
cmp
test
mov
loop
mov
adc
pop
adc
add
out
test
scas
stos
or
test
sbb
imul
mov
jl
push
loop
test
je
mov
loope
push
test
ret
mov
ficoml
mov
mov
ss
leave
mov
xchg
push
jg
ljmp
movb
push
inc
xchg
cmp
repnz
outsl
xor
mov
mov
test
js
add
dec
adc
xchg
and
daa
mov
and
test
lods
xor
loopne
mov
repnz
inc
leave
push
add
push
shlb
or
movsb
testl
frstor
dec
ljmp
loopne
inc
mov
add
aas
or
sti
das
sbb
xchg
aad
sub
jecxz
jo
les
jo
cmp
adc
aam
pop
mov
shrl
jp
outsl
mov
enter
rorb
shll
lea
cli
ss
push
test
je
shrl
pusha
xlat
or
subb
ja
jge
insb
push
jno
push
pusha
push
rclb
fbld
call
aaa
call
cld
pop
push
mull
in
and
rcrl
outsb
or
cmp
std
xor
and
dec
ljmp
imul
sbb
and
lret
bound
into
jl
loopne
movsl
push
ljmp
xchg
sahf
sbb
push
stos
aad
and
lock
sarb
icebp
cmp
jne
testb
mov
sub
push
and
jns
add
ds
jae
and
cmp
repz
ret
and
inc
jl
orl
pop
xchg
mov
cmpsl
mov
in
sbb
push
push
iret
test
out
aaa
hlt
in
jecxz
mov
push
in
fmuls
adc
jne
mov
ljmp
sub
sbb
add
mov
add
mov
adc
pop
shrb
sub
loope
inc
repnz
cmp
cmpsl
out
jge
fistps
scas
bound
into
fsubrs
dec
pop
or
and
ds
out
pop
ss
pushf
fsts
and
pop
lret
loop
ljmp
in
shll
dec
iret
jecxz
orl
sub
popf
in
pop
negb
push
pop
jmp
and
push
add
fmuls
loopne
rcll
add
in
mov
mov
fidivl
divl
lds
fidivs
cmp
mov
adc
mov
cmpb
scas
data16
fwait
mov
mov
push
lock
xchg
xchg
rorb
sbb
stos
dec
jmp
xchg
sub
mov
and
lea
rorb
mov
lods
sub
or
add
mov
hlt
das
repnz
or
push
scas
dec
mov
adc
cmpb
sahf
xchg
sub
mov
fsubs
mov
icebp
jno
jmp
and
sub
adc
and
mov
cmpl
sti
push
lods
sub
mov
loope
repz
loope
movl
add
push
pop
lret
fcompl
inc
popa
aam
aad
inc
mov
pop
mov
sti
sub
jecxz
dec
loope
or
sbb
mov
loopne
out
sbb
sub
testb
jge
cmc
stc
dec
ret
inc
mov
mov
jmp
iret
push
or
popa
mov
ret
add
stc
and
mov
add
push
xchg
iret
data16
inc
dec
push
mov
push
push
pusha
sahf
fs
ret
push
cmpb
mov
pop
push
lcall
xchg
out
clc
sub
loope
pop
shlb
mov
scas
into
inc
imulb
test
and
pop
aad
insl
xchg
sub
cmovb
imul
arpl
gs
orb
add
add
clc
aas
enter
mov
fists
adc
movsl
les
std
enter
push
fiadds
data16
cmp
nop
sub
mov
sub
loopne
jno
je
clc
add
sub
push
cwtl
ss
sbb
jge
cmp
fildl
aaa
int3
aas
nop
jle
dec
aaa
mov
inc
adc
pop
inc
test
insb
xchg
xchg
xchg
mulb
mov
push
ret
shll
aaa
mov
lods
imul
out
je
sub
cmp
jae
jecxz
pop
xor
fnstsw
fstpl
mov
cmp
cltd
fiadds
in
inc
cltd
cltd
xchg
movsb
xchg
sub
ret
push
shrl
sub
loopne
add
or
xor
jno
aad
add
cmp
lea
pusha
pop
stc
aas
data16
jge
xchg
sbb
outsb
adc
scas
dec
popf
aaa
jmp
jecxz
pop
jge
jo
cmp
fwait
and
and
inc
inc
or
xor
sub
inc
jbe
subl
in
push
out
imul
jae
sbb
sub
mov
leave
jne
cmpsb
pop
dec
and
fdivs
inc
jo
inc
leave
stos
xchg
and
pop
cld
aaa
fadd
mov
es
mov
cmpsl
inc
lods
je
testb
push
xchg
shll
int
mov
pop
ret
mov
in
lret
mov
jns
fsubs
pop
movsb
lret
stos
inc
fsub
mov
xlat
stc
or
mov
lock
in
mov
jecxz
jp
insb
add
inc
mov
out
stos
pop
fimuls
mov
shl
imul
adc
xchg
sbbb
sbb
lock
mov
adc
cmp
call
cld
cmp
add
insl
and
adc
repnz
std
sbb
xor
pop
lret
cld
xor
push
cmpsb
cmpsb
inc
movb
cmp
inc
loope
or
iret
mov
add
lock
call
or
fwait
iret
xor
sti
je
inc
inc
mov
mov
jo
cmp
jg
dec
mov
jns
aaa
sahf
test
and
jae
adc
pop
cmp
push
jg
inc
popf
sub
jg
cmpsl
cmp
lods
data16
ret
xchg
pop
jmp
stos
ret
push
add
es
cwtl
add
mov
std
xchg
cs
pop
mov
fwait
inc
or
or
std
repz
xor
movsl
lret
pusha
push
sbb
insb
sub
loope
in
jp
xchg
push
cmpsl
stos
inc
jb
out
mov
push
stc
xor
sbb
aam
out
mov
sub
jge
and
iret
xor
iret
nop
lock
mov
adc
jbe
lock
clc
cli
sub
inc
push
mov
movsb
loopne
sbb
roll
fs
inc
dec
jne
arpl
cmp
cwtl
mov
nop
test
xchg
adc
test
popa
pop
aad
orl
pop
outsb
dec
mov
je
push
in
xor
setbe
test
out
sahf
in
cmp
xchg
mov
or
lods
mov
adc
mov
jnp
xor
sbb
push
movsl
xchg
pop
xchg
mov
cmp
sub
xor
add
cltd
xor
stos
xlat
push
nop
mov
loopne
movsb
dec
ret
fcomps
push
test
dec
sbb
in
sbb
test
jmp
push
out
mov
cld
xor
rorl
dec
in
push
ja
cmp
xchg
imul
in
mov
or
in
xchg
sub
scas
cli
xor
dec
daa
int
inc
inc
cmp
push
inc
add
push
pop
sbb
subl
sbb
mov
adc
xchg
aam
push
push
out
xor
xchg
fbstp
inc
xchg
fdivl
jg
imul
mov
pop
outsb
rcl
ds
dec
mov
pushf
or
movsl
jnp
loop
inc
sub
add
sbb
xor
aaa
fimull
mov
pop
jge
lret
in
pusha
push
inc
shll
shrl
arpl
rcrb
mov
loop
inc
adc
popa
jo
lahf
inc
andb
inc
push
aaa
jne
mov
jae
adc
fs
xchg
pop
lcall
pusha
dec
mov
int
push
jmp
int
inc
fwait
xor
lret
jp
test
sbb
ds
mov
cmc
and
movl
fcoms
cwtl
cmp
sbb
imul
outsl
mov
mov
outsb
mov
push
xor
xor
cs
jp
repz
aaa
fucomi
ss
lock
ja
sbb
jle
int
ficoml
cmpsb
int
sti
clc
test
dec
or
js
push
sub
push
js
shll
sub
mov
sbb
jne
and
cmc
xor
inc
lds
pop
and
inc
jne
testb
xchg
gs
mov
jecxz
fmull
ja
mov
lea
imul
xor
out
pop
shr
fadd
inc
fdivrl
mov
mov
enter
jecxz
popf
xchg
fdivl
jnp
rolb
insl
mov
ret
push
mov
xchg
xlat
push
lret
dec
pslld
xor
mov
les
fsubs
push
mov
sbb
jno
inc
push
scas
jno
popa
inc
mov
adcb
dec
clc
rclb
repz
fwait
xchg
sbb
pop
inc
xchg
arpl
bound
loope
cs
sarl
paddw
aas
imul
inc
mov
call
cmc
pop
sbb
pop
mov
cli
sub
repz
lret
jp
sbb
lret
push
ret
mov
loopne
in
dec
mov
enter
movsl
adc
nop
aaa
in
aam
jo
adc
jno
jle
xor
cli
xor
mov
xorl
das
stos
push
cwtl
mov
ret
loopne
jns
outsl
add
cmp
jmp
cmp
fwait
cmc
and
lds
and
test
inc
xchg
les
test
dec
in
xchg
jae
cmc
sbb
or
lahf
ss
loop,pn
aas
mov
pop
adc
push
jae
jmp
std
xchg
jmp
adc
call
add
adc
mov
mov
scas
inc
lods
fst
push
ror
fldl
mov
test
aaa
push
jmp
mov
add
leave
adc
fwait
ss
and
cmp
cmp
push
push
in
push
divl
jo
adc
add
xchg
sub
imul
insb
inc
stos
insb
hlt
loopne
ret
pusha
jb
pop
in
xor
sub
jl
aad
inc
lds
lods
pop
mov
hlt
sub
sub
nop
cmpsl
hlt
aaa
repnz
dec
shrb
shrb
sti
fwait
jno
fwait
push
add
stos
pushf
mov
mov
sub
pushaw
negl
int
imul
cmp
sti
push
pop
imul
inc
movsb
pop
push
subl
dec
pop
fistl
bound
test
dec
mov
lcall
loop
jnp
adcb
lock
ja
aaa
cld
sub
ret
jg
push
ja
cmp
xlat
inc
fmuls
aad
test
test
sub
rcrb
aam
lret
cmp
les
loopne
das
iret
xchg
dec
mov
inc
fcomp
and
mov
and
sar
push
mov
in
sub
sbb
ds
stos
in
sbb
lret
mov
jmp
pop
mov
sarb
rcl
jge
mov
stc
fiadds
jecxz
jmp
mov
lock
adc
bound
das
clc
jne
mov
stc
dec
jmp
jmp
out
cmp
mov
lock
mov
lret
cmp
jecxz
and
dec
fisttps
push
shrl
aas
in
rcrb
fidivl
in
shrl
mov
jmp
lods
xchg
sbb
jmp
dec
lahf
push
cmp
flds
push
ds
sub
les
mov
movlhps
lahf
mov
fldt
loopne
cltd
test
je
adc
sbbb
popa
pop
lret
pop
jb
cmpsb
xor
lret
dec
pushf
push
jo
lock
inc
jae
ja
and
sub
push
and
test
xor
pushf
jne
ds
mov
ss
dec
repnz
xor
into
rep
cwtl
mov
push
clc
shl
jle
iret
sbb
xchg
nop
and
mov
adc
sub
call
mov
cmp
stc
jecxz
sub
das
fdivs
cmpb
movl
jge
and
outsl
or
cmp
flds
enter
test
jl
in
pop
sub
daa
jle
ljmp
inc
fidivl
fildl
shrb
jo
xorb
aam
mov
pop
stos
mov
pop
jo
mov
pop
cmp
outsl
jb
pop
xor
pop
scas
mov
fists
sti
outsb
mov
pop
stos
pop
push
test
mov
outsl
xlat
cli
mov
out
mov
pop
sbb
into
gs
xchg
inc
mov
inc
adcb
daa
add
cltd
ja
repnz
mov
mov
cwtl
subl
jns
in
pop
icebp
cmp
xor
mov
jmp
cmp
test
hlt
das
out
mov
lea
lock
mov
hlt
sub
pop
jecxz
nop
out
mov
std
mov
insl
add
imul
jl
pushf
test
or
lahf
pop
imul
in
fnstsw
andb
mov
push
adc
outsl
dec
divl
pop
daa
addb
cmp
je
adc
out
imul
and
inc
push
sarl
in
jae
loope
scas
gs
ja
push
mov
cmp
mov
das
ret
scas
xchg
xchg
push
xchg
jnp
mov
xchg
sub
test
and
adc
inc
in
sbb
rclb
cmp
mov
mov
dec
negl
lods
inc
push
aas
mov
cmp
xchg
mov
ljmp
push
push
sub
push
xchg
clc
xor
xlat
outsl
arpl
jle
sub
insl
xor
xchg
mov
mov
fcompl
out
imul
fadds
mov
idivb
add
ljmp
add
mov
cmp
nop
sub
jp
ds
sub
mov
int3
aas
dec
repnz
dec
fiaddl
lds
fistpl
pop
rclw
cmpsl
add
sarl
and
jge
push
mov
mov
add
cmc
repz
idivl
rcr
cltd
loopne
pop
shl
mov
inc
and
push
or
cmp
push
cmpsl
pop
adcb
enter
scas
sahf
xor
dec
add
jns
push
roll
repnz
stc
nop
fsts
pop
mov
cli
pop
scas
sub
aam
dec
xor
bnd
or
cmp
jno
and
das
nop
inc
es
mov
jecxz
lods
inc
enter
ss
and
in
sub
pop
or
pop
hlt
imul
cli
jl
adc
iret
jle
les
push
in
addl
aas
xor
push
mov
int3
in
fdivrp
sbb
in
and
imul
or
rcll
xchg
and
inc
push
pop
ja
xor
shlb
mov
pop
scas
mov
xchg
movsl
xlat
mov
pop
jnp
xor
into
rcrl
mov
inc
push
and
jae
jne
and
lret
cld
addr16
xchg
push
enter
ja
out
out
sarb
les
xchg
mov
iret
fisubl
test
rclb
add
xor
jns
cwtl
das
movsl
lcall
add
mov
push
enter
or
xchg
ds
fmul
pop
sbb
adcb
testb
mov
lock
xchg
push
scas
sub
mov
loope
jg
mov
leave
jg
push
fmull
or
stc
push
xchg
adc
add
mov
movsb
scas
inc
pop
loop
jmp
dec
lds
gs
loop
xor
out
adc
dec
sahf
xor
shr
fs
rcll
fcmovbe
sbb
ss
or
sub
pushf
xchg
movsl
pop
mov
jbe
stos
rcrl
inc
jmp
in
enter
mov
insl
ret
dec
fadd
bound
adc
std
push
mov
sarl
xchg
lahf
arpl
cmp
fnstsw
xor
xchg
mov
test
mov
add
jns
push
test
jp
in
add
adc
mov
hlt
cmp
xor
push
adc
cmp
or
mov
pop
insl
xchg
repnz
jns
sbb
xor
xchg
les
jb
sbb
mov
mov
in
fsubs
daa
movsb
fs
or
popl
loopne
into
sti
push
inc
mov
fwait
lahf
mov
and
les
int3
mov
nop
imul
xchg
pop
fnstcw
xchg
popa
icebp
repnz
and
or
test
into
icebp
xchg
lock
sbb
popa
das
fs
stos
xor
test
xor
sbb
add
fbstp
and
jne
mov
call
inc
arpl
scas
jp
mov
mov
jo
sub
mov
lcall
insl
mov
cmpb
cmp
pop
pushf
pushf
jge,pt
dec
fildl
inc
adc
and
shr
mov
push
jle
jl
add
lds
pop
outsl
clc
mov
push
fdivr
js
sbbb
push
rorl
out
arpl
pop
jb
or
call
pop
and
dec
fldlg2
xorl
pop
jp
sub
push
cwtl
mov
std
inc
jne
int3
leave
fs
fbld
ret
repz
cmp
test
inc
sbb
mov
ds
loope
iret
fnsave
icebp
mov
sub
jl
cmp
ja
cli
dec
scas
inc
inc
fwait
sbb
aad
mov
push
or
out
sbb
add
in
sub
das
ja
mov
inc
lea
or
push
lds
mov
test
sbb
cmp
jmp
mov
fcoms
jne
dec
xchg
cmp
test
adc
cmp
das
mov
add
mov
imul
or
or
iret
lods
pop
testl
xchg
test
mov
sbb
sbb
xor
daa
aas
cltd
nop
xchg
xchg
cmp
insb
call
out
jmp
and
cmp
jbe
out
outsb
call
or
push
loopne
adc
imul
repnz
loopne
mov
outsb
call
jae
xchg
inc
mov
loopne
lahf
add
bound
mov
in
je
hlt
mov
jle
pop
lcall
lcall
xor
mov
insb
ljmp
push
jns
mov
dec
push
add
popf
push
sti
mov
mov
ds
sub
gs
pop
pushl
push
jnp
stos
xor
imul
imul
mov
daa
xor
ljmp
in
push
shlw
mov
xchg
sbb
xor
orl
in
outsb
sti
arpl
push
in
jbe
or
mov
int3
xchg
movb
popa
data16
fildll
scas
xchg
in
out
push
repnz
dec
addb
mov
xchg
and
add
adc
dec
push
jp
cmp
or
xchg
pushf
loope
sarb
repz
push
xchg
imul
cmp
xor
pop
jge
jmpw
orb
test
mov
cli
gs
cmpsb
sub
movsb
mov
ja
out
fiadds
sub
pushf
aas
mov
mov
mov
stos
shl
pop
mov
ss
adc
lret
mov
scas
push
mov
pop
xor
jg
cs
imul
sub
lods
das
mov
pop
add
cmpsl
dec
adc
mov
movb
mov
push
divl
mov
adc
js
push
divl
outsl
adc
shll
daa
rcrl
adc
sbb
notb
adc
loope
cmp
addr16
lcall
dec
mov
movsl
and
jo,pt
mov
sub
sbbl
cmp
test
pop
divl
clc
push
push
outsl
mov
int
inc
adc
movsl
xor
cmpsb
ss
popa
out
adc
iret
push
dec
cmp
cmp
jmp
and
sub
lods
push
into
lcall
inc
push
dec
ret
mov
lahf
shr
data16
sbb
mov
xor
popa
sub
scas
jl
fmuls
inc
adc
xchg
cmp
lods
pushf
fwait
cmp
adcl
and
sti
pop
dec
cmp
xchg
call
cmc
gs
and
movsl
cs
fwait
mov
or
xlat
dec
inc
adc
xor
adc
lcall
and
mov
dec
jne
int3
dec
add
loopne
rcll
inc
hlt
pop
test
and
xchg
pop
mov
fwait
push
jge
enter
jg
sahf
sub
cld
push
xchg
xor
add
or
pop
in
push
add
cwtl
jp,pn
push
mov
mov
sbb
pop
ja
outsb
xor
adc
and
fcoms
dec
lret
lea
adc
sbb
push
jbe
jecxz
inc
adc
call
loop
xor
addb
push
rcrl
negb
push
jne
aam
dec
sarb
ret
mov
add
or
fcomps
mov
or
std
pop
push
push
pop
sti
loope
or
aaa
or
xchg
inc
xchg
mov
mov
call
dec
hlt
pusha
rclb
mov
or
xchg
shrb
ret
adc
xchg
or
push
loope
loop
adc
in
and
daa
jno
aad
dec
push
std
jne
pop
jmp
data16
jnp
lock
insb
push
loope
stos
daa
int3
sti
xchg
aas
cmp
pop
incb
ret
lcall
jle
push
add
arpl
jo
fnstsw
insl
sbb
inc
sbb
xor
sub
adc
iret
xchg
out
je
les
fildll
int3
iret
lock
xor
cltd
mov
outsl
out
jae
ret
or
add
lcall
addr16
adc
daa
popf
inc
adc
cmp
insb
imul
push
idivl
mov
pop
add
mov
jecxz
pop
sub
gs
or
cwtl
cld
mov
mov
shl
lods
xor
add
pop
mov
push
mov
enter
lcall
cmc
pop
sub
sub
lret
sub
add
cwtl
pop
stos
xor
sub
sub
mov
push
enter
movsl
sbb
pop
mov
aas
pushf
push
lods
xor
into
ljmp
jne
mov
mov
dec
roll
cmp
scas
xor
out
dec
jns
xchg
daa
pushf
jbe
xor
mov
and
lret
leave
pop
outsl
hlt
add
xchg
cmp
push
cmpsl
sub
loop
add
add
cmp
das
test
sbb
pop
pop
daa
add
pushf
mov
lods
out
push
iret
xchg
pusha
pusha
ljmp
add
jmp
sahf
add
xorl
sub
out
pusha
jmp
rep
icebp
and
xchg
ss
cmp
aas
xor
sahf
sub
lds
lock
jmp
jmp
xchg
push
mov
ja
cmp
sub
repnz
add
enter
xor
rorl
shrl
iret
insl
out
and
insb
lock
mov
orl
stc
push
cli
xchg
pop
pop
leave
sub
in
stos
ds
and
sub
or
pop
pusha
in
sbbb
aam
orb
dec
cmova
pop
stos
xchg
ret
mov
dec
rorl
cmp
outsl
push
outsl
out
jbe
repnz
mov
push
mov
jo
dec
or
push
iret
pop
push
or
pop
dec
outsb
jmp
cmpb
mov
mull
mull
mov
ds
adc
sarb
pop
sbb
mov
xchg
scas
cwtl
cmp
outsb
jmp
xchg
or
lea
mov
or
mov
push
ja
jecxz
sbb
repz
xchg
aam
dec
fwait
xor
leave
or
mov
nop
xchg
jp
clc
int3
sub
mov
dec
or
mov
shlb
push
pop
ret
les
repz
adc
push
sbb
or
adc
adc
iret
adc
pop
inc
adc
in
rcll
jo
pop
std
add
mov
adc
sets
inc
push
enter
loop
push
mov
fisttps
sbb
mov
shlb
cli
mov
sbb
into
mov
mov
into
nopl
scas
aad
add
ret
cmp
push
cltd
xor
ret
jno
scas
sbb
cmpb
std
fs
xor
ss
fildl
xchg
mov
adc
mov
cmp
xchg
aaa
jl
pop
add
push
xor
mov
icebp
pop
es
push
xor
andb
test
xchg
loope
daa
test
xchg
pop
lods
xor
ret
icebp
pop
div
dec
push
cmp
rolb
mov
mov
les
roll
push
pop
xlat
and
test
cmp
jbe
push
int
push
inc
or
into
fildl
lret
jge
sahf
daa
sbb
push
rcll
lret
push
jo
push
into
mov
ret
push
cld
mov
test
cltd
cmp
mov
std
repz
pushf
cmp
and
pusha
idivl
pop
lock
cwtd
aam
sbb
leave
sub
dec
dec
ja
sbb
pop
rcr
fs
xchg
jp
scas
stc
sbb
push
js
mov
repz
test
xor
mov
in
lcall
stos
aaa
rorl
test
sub
jecxz
mov
mov
lret
push
mov
xor
outsl
lock
and
pop
or
lret
xchg
push
lods
cltd
inc
and
mov
mov
and
scas
ds
pop
mov
fidivrl
mov
jle
push
jae
dec
mov
mov
push
push
jmp
xchg
inc
sbb
cs
jo
or
mov
rcll
mov
pop
sti
pop
rorl
xlat
sub
add
sti
cmp
adc
dec
sbb
jns
dec
imul
testl
sbb
daa
repz
fsubl
dec
lods
sub
cmp
andb
imul
rdtsc
enter
mov
jp
ss
ljmp
cmp
lock
push
fisttpll
ljmp
mov
push
stc
sub
and
cmp
jo
xchg
cmp
loopne
xor
adc
notb
inc
and
popa
push
cltd
inc
mov
pushl
repz
mov
mov
fildl
shrb
adc
lods
roll
shrb
mov
jge
inc
xchg
mov
in
movsb
les
mov
xchg
es
pop
call
dec
pop
pop
in
mov
lahf
cmp
cmp
add
mov
mov
addr16
fsubrl
clc
pop
mov
mov
sti
or
fidivs
sub
into
mov
mov
je
sbb
lea
and
pop
jb
cmp
mov
jp
out
fidivl
jo
andb
stc
push
aad
lock
cwtl
cmp
popf
sbb
les
je
mov
cmpsl
sub
mov
movsb
test
int
jbe
repnz
sub
inc
inc
aaa
mov
fidivrl
adc
inc
mov
sahf
xor
jmp
cli
lock
ss
lret
xchg
ds
je
xor
addr16
sbb
movsb
rorb
add
bound
adc
mov
pop
add
mov
or
popf
aas
jns
stos
sub
xchg
pop
ds
add
mov
xchg
fdivrp
data16
and
gs
sub
push
jecxz
pop
jb
imul
insb
adc
leave
push
rcll
adcl
xchg
ja
mov
movsl
sbb
cmp
cs
ss
or
or
push
sti
ficompl
pop
or
mov
or
mov
sub
cmpsb
fwait
sub
out
and
xchg
inc
push
cmp
sbb
cs
not
in
sub
cmpsl
xor
scas
mov
loope
cmp
daa
repnz
xor
les
enter
xchg
jne
add
and
ds
pop
into
pop
aad
xchg
inc
push
or
clc
pop
cmp
popa
hlt
enter
push
adc
pop
rcr
loope
inc
add
in
cltd
mov
cltd
cs
push
or
das
call
imulb
aaa
sbbl
es
jp
cmp
movsl
xor
out
push
dec
xchg
mov
push
sub
test
jl
push
in
pushf
cmp
cld
adc
ss
js
inc
and
mov
out
in
cltd
xor
and
pop
push
aas
pop
push
or
cmpsb
cs
repnz
mov
orb
adc
xchg
dec
or
mov
popf
mov
leave
test
push
mov
lret
mov
loopne
cld
popa
mov
dec
push
lahf
aas
cmp
xlat
inc
and
movsb
icebp
adc
mov
dec
xor
insl
xchg
divb
test
cmpsb
xor
inc
xor
outsb
sbb
mov
pushf
cmp
loop
idivb
sbb
cmpsl
xor
dec
xchg
mov
xchg
inc
adcb
neg
push
add
sarb
stc
pop
pop
mov
dec
icebp
sbb
jecxz
mov
pop
ljmp
orb
fcmovu
fbstp
push
lock
jb
xchg
pop
lcall
pop
stc
mov
cmpsl
mov
and
jns
pop
mov
shl
xchg
cmp
pop
test
push
xchg
cmp
lods
sarl
lds
lods
cmpb
repnz
mov
ret
mov
mov
hlt
gs
ficoml
rol
outsl
call
inc
loop
aam
popf
or
xor
lods
xor
and
xchg
jmp
stc
in
jbe
xchg
pop
fistps
xchg
cmp
ror
test
cmp
inc
and
test
ja
int
pop
mov
and
lret
cmp
movb
out
pop
enter
inc
and
xchg
or
and
aam
mov
loop
jns
cmp
popa
hlt
jmp
mov
mov
push
movsl
cmp
dec
outsl
cmc
mov
test
in
jbe
mov
mov
sub
cmp
movsl
inc
jno
push
mov
jmp
mov
scas
pop
xor
lock
mov
aaa
mov
dec
push
es
ds
insb
ljmp
fidivl
push
cmp
jg
je
sbb
push
pop
dec
pmullw
nop
negl
xor
jno
mov
cltd
inc
pop
jmp
cmp
push
inc
or
push
sub
jl
adc
inc
push
sub
addb
pop
adc
mov
stos
lret
fadds
xlat
pop
add
cltd
sarl
inc
fadds
adc
ss
cmpps
ljmp
pop
adc
or
inc
int3
mov
mov
iret
mov
mov
and
mov
test
add
lahf
sbb
xchg
pop
adc
adc
push
sub
pop
mov
mov
cld
into
flds
cld
and
push
jmp
cmpsb
sub
repz
rcll
cwtl
inc
or
ret
jge
sub
mov
lods
mov
push
lret
mov
jo
out
imul
inc
add
pop
clc
pop
inc
adc
or
push
pushl
lods
out
imul
loope
mov
insb
jg
sub
pop
decb
xor
cmpsb
cmp
iret
movsl
loopne
mov
lods
lods
xor
pop
loopne
gs
dec
adc
mov
mov
frstor
xor
push
std
mov
test
test
mov
lcall
ds
mov
jl
lock
or
pop
sub
and
pop
xchg
jecxz
notb
jge
out
jo
out
into
xchg
add
dec
adc
push
mov
jecxz
lds
ret
or
sbb
dec
mov
sub
dec
rorb
shll
xchg
adc
enter
dec
je
xchg
cmp
gs
xchg
xchg
xchg
inc
jecxz
sti
pop
fwait
cld
std
pop
ffreep
in
imul
mov
push
xchg
inc
ror
nop
xchg
sbb
push
int
sub
mov
inc
xchg
mov
mov
xchg
cmp
das
lret
push
rol
xor
push
lret
js
adc
sub
scas
clc
fidivl
shlb
scas
push
cmp
add
pop
add
fs
add
push
in
jb
jle
jne
mov
sub
stc
inc
inc
mov
mov
pop
std
xor
mov
mull
dec
pushf
aaa
mov
test
loope
add
push
iret
pushf
cmp
roll
sti
xchg
test
jb
ret
jmp
adc
mov
inc
or
pop
add
lods
push
test
popa
mov
xor
cmp
mov
lds
ja
push
jae
dec
mov
dec
push
dec
or
mov
lods
in
jecxz
mov
adc
call
hlt
int3
daa
mov
lock
push
xchg
negb
mov
mov
mov
xor
pop
test
lret
int
inc
or
inc
or
sbb
mov
cmc
pop
mov
mov
sub
mov
lods
jns
sbb
and
xor
mov
inc
push
mov
inc
or
or
mov
shlb
jmp
add
pop
rolb
push
sbb
imul
sti
pop
mov
lods
out
pop
mulb
xor
rolb
xlat
adc
add
and
or
or
pop
xor
movsl
jg
outsb
out
adc
dec
adc
fimull
loop
or
inc
or
ret
daa
lds
mov
and
rclb
fninit
jo
cmpb
in
fnstsw
push
jb
adcb
push
fisttpl
lret
rcll
cwtl
jle,pt
dec
fisttps
push
jmp
ljmp
fdiv
mov
jnp
lret
xchg
add
xchg
dec
stos
push
iret
mov
js
movb
js
ret
add
xchg
xor
jmp
lcall
lret
inc
imul
cltd
xsha1
cmpsb
lret
mov
jge
dec
jae
ror
xchg
sub
popa
in
dec
aas
daa
test
sub
fdivs
callw
cmpl
outsl
imul
cltd
add
push
ret
mov
adcb
jmp
popf
icebp
insl
in
pop
xor
inc
or
test
clc
inc
xchg
loope
dec
lahf
gs
jge
jne
or
loopne
push
inc
adc
movsb
or
cmp
mov
sub
lret
xchg
outsl
sbb
push
andl
or
out
xchg
mov
es
into
push
cmp
cmc
test
dec
cs
mov
sarl
lea
fdivl
lahf
daa
nop
cmp
iret
cmc
pop
push
xor
xor
out
cmp
data16
aaa
push
cmp
lret
mov
lret
push
out
dec
xchg
popa
rcrb
movsb
lods
das
leave
jb
js
push
pushf
aas
test
sbb
icebp
pop
out
jmp
cmc
mov
sub
mov
sahf
xchg
or
push
push
xor
in
sub
cmpsb
stc
jmp
cmp
cld
pusha
push
icebp
cmp
leave
inc
inc
or
les
or
xchg
insb
into
xchg
push
enter
test
scas
aad
cmc
mov
pop
add
mov
mov
dec
pop
shrb
gs
insl
repnz
inc
cmpsb
sub
jne
xorl
mov
xchg
jge
cli
fwait
dec
push
and
jg
outsl
cmp
je
sub
nop
loopne
stos
cld
jp
cmp
cmpsl
xor
aas
cwtl
fnstcw
daa
or
mov
xchg
inc
adc
movb
fcomps
fmul
xchg
ljmp
inc
and
stos
xor
sbb
inc
inc
gs
dec
xchg
push
aad
xchg
int3
xchg
add
ret
mov
and
jl
cwtl
and
sbb
daa
mov
sbb
scas
inc
jmp
mov
cld
ret
xchg
test
scas
sub
pop
lea
sbb
inc
les
lds
adc
in
imul
mov
mov
ret
sarb
ret
adc
dec
mov
pop
pushf
inc
or
mov
in
or
fcomip
call
adc
add
aaa
cwtl
mul
jg
popa
loope
subl
jecxz
push
dec
adc
adc
sbb
imul
dec
mov
je
jge
lahf
fs
inc
scas
leave
jnp
sbb
dec
adc
test
xor
lea
scas
cmc
dec
std
popa
dec
jecxz
cmc
jmp
mov
scas
enter
jl
dec
adc
insb
imul
fdivp
pop
mov
popa
or
pop
jnp
sub
int
mov
stos
stos
xor
lret
jge
dec
rcrl
and
mov
push
add
call
pop
inc
andb
bound
inc
adc
jnp
addr16
adc
or
insl
lock
push
push
inc
adc
pop
imul
and
cmp
xlat
push
and
rcll
or
arpl
xlat
arpl
imull
cmc
arpl
imul
jb
pushf
mov
add
mov
jl
insl
mul
outsb
jns
call
sti
xchg
ds
das
fldl
cmp
jmp
and
xchg
aaa
push
ss
lcall
adc
push
inc
or
or
mov
jae
aad
jge
movsb
xor
cmp
push
sbb
loop
pop
fdivrl
sbb
and
movsb
ss
daa
xchg
inc
ror
push
mov
mov
scas
sub
xor
and
out
test
dec
stos
inc
jl
pop
push
insl
xor
repnz
mov
mov
das
mov
sub
pusha
aaa
sti
xor
add
mov
movb
mov
fildll
shrb
mov
mov
push
add
xchg
mov
iret
inc
in
shlb
and
fs
xchg
inc
push
or
dec
adc
mov
push
std
inc
movsb
sarb
xchg
orb
hlt
pop
push
adc
pop
push
xor
jo
in
mov
dec
xchg
cmp
lret
dec
adc
inc
or
call
push
in
mov
and
cmp
inc
mov
mov
inc
mov
mov
xor
mov
test
rorl
xchg
jae
leave
xchg
scas
cmp
lods
xor
rclb
sub
sarl
inc
xor
nop
dec
xor
inc
enter
xchg
mov
in
popa
push
or
in
jp
push
notl
mov
sbb
das
xlat
pop
pop
aaa
in
dec
or
push
xchg
xchg
inc
push
nop
lods
cs
nop
jg
jp
test
stc
pop
cld
fisttpl
lcall
push
xchg
jmp
repz
lcall
mov
fisubs
repz
add
cmp
mov
jns
aas
movsb
test
scas
loop
sahf
inc
sbb
clc
lsl
stos
mov
scas
sarl
mov
addr16
dec
rcr
orb
call
cmpsb
cmp
mov
add
mov
scas
xor
xor
aaa
jg
addb
push
gs
in
addr16
push
mov
into
adcl
mov
repnz
mov
iret
mov
mov
call
sub
xlat
fiaddl
push
orb
and
xchg
lods
cmp
xchg
adc
fidivrl
dec
xsavec
xlat
jg
dec
out
mov
lahf
inc
lock
mov
out
cmp
nop
pop
add
adc
or
mov
lods
jle
inc
jge
mov
xchg
test
xchg
xlat
xchg
lahf
cmp
jge
adc
add
mov
and
xlat
jg
dec
cmp
xchg
dec
mov
or
aaa
sti
inc
into
gs
pop
mov
sbb
dec
add
push
fldcw
mov
xchg
mov
ret
jno
pop
dec
adc
fs
sahf
cmp
cmp
loopne
sub
mov
mov
dec
and
pop
add
xor
jae
push
orb
fiaddl
xchg
mov
mov
setbe
data16
sub
movsb
ret
shlb
xchg
loope
xor
jp
hlt
gs
repz
outsb
mov
test
mov
in
cmp
xchg
dec
icebp
jae
adc
daa
scas
inc
cwtl
mov
sahf
dec
or
dec
or
lahf
inc
fcmovnbe
scas
pop
repnz
or
add
mov
pop
push
std
data16
std
mov
xchg
cmp
push
mov
jl
cltd
cmp
jp
mov
pop
stc
loop
or
jne
mov
nop
outsl
adc
or
or
ss
xchg
sub
jno
out
push
lcall
mov
lods
adcb
pop
jo
pop
setno
mov
or
pop
mov
lods
flds
addr16
xchg
mov
je
inc
pop
aad
xchg
cmp
xlat
jp
jne
outsb
sahf
mov
into
mov
scas
or
aam
test
dec
add
inc
cmp
xor
jl
test
jmp
aad
jle
mov
mov
dec
adc
ficompl
and
lock
test
and
insl
shlb
lods
aam
or
mov
inc
std
bound
or
mov
sub
fisttps
mov
or
jl
and
lret
repz
xor
out
cmp
mov
dec
sbb
xor
je
sahf
cmp
adc
inc
insb
xorl
jae
and
xor
imul
inc
adc
mov
add
mov
xor
add
mov
in
xchg
pop
pop
and
push
scas
cmp
mov
mov
or
test
jle
inc
adc
add
scas
test
pop
daa
mov
lahf
sub
and
popa
lock
sub
adc
mov
sahf
dec
jge
popa
movl
rcll
ret
push
sbb
sbb
in
fmulp
lock
into
or
data16
jge
jle
adc
mov
repz
fdivp
dec
or
ret
mov
mov
sbb
addr16
sbbl
push
inc
pandn
dec
lock
and
bound
clc
out
jp
jge
notb
lds
xor
addr16
dec
pop
jl
movsb
das
lcall
sbb
dec
mov
dec
push
lods
stos
sub
repnz
in
addr16
out
xchg
inc
in
xchg
sub
test
push
je
in
pushf
imul
subb
cmp
lret
hlt
pop
sbb
loopne
add
push
std
sub
inc
sarl
dec
iret
xchg
and
filds
sti
pop
cmp
cmp
and
test
js,pn
fsubrl
cmp
mov
dec
lock
daa
mov
xchg
mov
std
pop
inc
and
mov
clc
pop
mov
xchg
xchg
lods
mov
dec
leave
mov
addr16
cwtl
xor
ljmp
in
push
bswap
out
lret
cmp
cld
pop
std
es
dec
jle
fstpt
xor
pop
lret
test
mov
data16
out
test
or
rcrl
rcrl
jne
pop
mov
xchg
lret
and
sbb
mov
filds
jmp
stc
test
in
jns
in
xor
je
and
pop
mov
and
cmp
call
inc
adc
dec
push
cli
add
arpl
mov
fadd
lea
xchg
aaa
pop
outsl
jp
lea
pop
sbb
xchg
ds
insb
pop
decl
fadds
repnz
test
js
roll
out
xchg
mov
mov
imul
scas
dec
or
add
pop
jg
mov
mov
repnz
aas
sarl
cltd
push
sub
ret
cmp
out
lret
divb
sub
mov
jns
sub
insb
sub
sub
dec
adc
mov
mov
mov
add
mov
lds
jp
xchg
inc
mov
fisttpl
aad
mov
repz
inc
sahf
cld
stos
cs
xlat
jg
cwtl
popl
stos
xor
fidivrl
sub
jle
daa
lods
jg
mov
and
cld
lods
adc
scas
mov
lods
xor
aam
int3
jl
jmp
lret
imul
hlt
cmp
jmp
inc
sub
es
pusha
lods
cmpsl
fistpll
sbb
mov
mov
bound
sub
push
andl
loop
push
cld
sub
jns
xor
sub
mov
lods
imul
and
aas
dec
or
je
push
add
aaa
mov
movsl
cmp
test
aad
adc
leave
lods
push
add
push
push
add
mov
movsb
jno
fldenv
jl
and
fidivl
fsts
lcall
or
loop
jo
test
xchg
lcall
jle
adc
ljmpw
stc
dec
inc
push
sbb
inc
or
mov
stos
dec
adc
mov
fiaddl
scas
aam
bound
ds
aad
popf
hlt
pop
cli
sbb
pop
iret
scas
dec
loop
jge
push
in
and
inc
xlat
outsb
xchg
jne
push
cmp
push
mov
dec
push
shlb
pop
mov
stos
adc
xchg
popa
inc
or
movl
repnz
adc
push
lret
and
xor
lock
fsubrs
xchg
cmpl
negl
test
pop
cli
mov
cltd
in
rclb
cmpsl
ds
cmpsl
inc
imul
lods
adc
jl
xchg
inc
mulb
sbbl
xchg
sub
push
fidivl
push
pop
mov
js
pop
std
add
ds
and
popl
enter
adc
lock
mov
jmp
jge
loopne
stc
jns
pusha
icebp
or
jge
push
int3
push
dec
or
push
roll
push
pop
fnstsw
pop
pop
cld
cmp
and
lds
jmp
mov
mov
push
add
fnstcw
popf
or
insb
stc
push
push
leave
jl
sbb
sbb
jnp
mov
int3
mov
cltd
ds
fwait
mov
lods
jnp
pop
cmc
mov
xor
sbb
dec
xor
or
adcb
xor
dec
lret
jae
push
sbb
sbbl
or
loope
aam
cmc
loop
inc
xlat
dec
push
jl
test
fimuls
push
daa
mov
push
les
fs
jne
fs
repz
xor
popa
popa
add
mov
aam
xchg
cmp
mov
push
repz
push
stc
cmpsl
jecxz
sbb
iret
push
mov
pop
xchg
cmp
cmp
add
add
pop
push
cwtl
inc
xchg
subl
cmp
pusha
push
fadds
or
push
lret
mov
pop
push
scas
das
push
outsb
out
rolb
jnp
push
jg
add
jmp
out
jecxz
cmp
lahf
inc
movsb
sub
push
cld
inc
cli
sub
outsb
push
lock
movsb
gs
mov
cmpsb
lahf
movl
inc
hlt
pop
repnz
ss
pop
les
int
push
mull
and
jp
sbb
je
out
je
push
push
inc
dec
mov
in
cmp
pop
xor
negl
and
mov
test
in
sbb
mov
sarl
pushf
inc
jnp
daa
stos
cmc
imul
sbb
int
dec
cmp
subl
mov
rorl
repnz
mov
inc
xor
bound
fstl
mov
sbbb
or
aaa
pop
pop
mov
push
lods
mov
push
jecxz
fdivl
add
cli
xchg
push
pop
cld
xchg
mov
movsl
stos
sbb
idiv
cmp
sbb
dec
dec
push
in
subb
popf
mov
xchg
sub
hlt
xchg
sub
adc
inc
jns
into
gs
lcall
ljmp
mov
jno
sub
xchg
sub
loope
inc
fstl
ss
addr16
test
xchg
mov
aaa
or
das
mov
jne
sbb
mov
cld
xchg
aam
cli
xchg
pop
negb
mov
sub
scas
pop
dec
cmp
jns
ss
lcall
in
je
push
and
push
aas
xchg
sub
xchg
sub
scas
inc
clc
in
gs
sbb
gs
cmp
subl
sbbl
or
push
adc
rolb
pusha
gs
ficoms
mov
cld
call
or
pop
pop
mov
push
stos
mov
push
loop
fdivl
add
jbe
pop
sti
xchg
push
push
std
xchg
mov
mov
test
aaa
into
cmc
sti
cmp
sub
push
in
dec
dec
push
out
jle
je
fwait
lahf
jne
sarl
sub
mov
inc
inc
mov
ja
iret
xchg
cwtl
iret
lretw
test
jmp
test
or
lea
dec
loop
ficoms
add
xor
sbb
xchg
cmp
fldenv
pop
sub
mov
jbe
sbb
mov
std
xchg
rcl
sti
xchg
add
daa
sbb
ja
aaa
into
stos
cwtl
push
out
leave
lret
push
in
cld
ljmp
push
cmp
xchg
sub
les
adc
dec
ss
test
in
test
mov
sub
or
sub
inc
sub
dec
fists
data16
out
sbbl
or
cmp
mov
push
test
lret
cld
add
ja
sbb
xchg
xchg
mov
cmpsl
sbb
fadd
cmp
repz
cmp
sub
pop
out
jl
jne
cltd
popf
jbe
iret
mov
xchg
sub
push
mov
inc
inc
mov
jne
shlb
xchg
shlb
mov
test
jmp
or
mov
mov
dec
loopne
loopne
fists
jmp
xor
data16
fs
test
test
fsubs
pop
sub
push
pop
dec
fbstp
jg
jne
sahf
std
xchg
rcl
cld
xchg
add
sbb
push
inc
cmp
jne
cmp
test
lret
sti
call
jne
dec
cmp
sub
ret
mov
cmc
loope
adc
shlb
xor
test
out
test
or
out
fldcw
rorb
sub
inc
sub
pop
bound
xchg
jge
cld
scas
mov
in
sbbl
pop
xchg
push
pop
movsb
cmp
ret
enter
add
js
sbb
xchg
dec
push
call
lahf
cmpsb
sbb
iret
icebp
clc
cmp
sub
push
out
inc
dec
pop
lock
jne
xchg
pushf
ja
into
mov
xchg
sub
or
dec
ds
mov
je
shlb
xchg
shrl
mov
test
call
or
movsb
insb
pop
sub
mov
dec
loopne
fisttps
adc
addr16
xor
arpl
sbb
test
cmp
xlat
mov
pop
sub
rcrl
fbstp
jle
jbe
pushf
std
xchg
into
sar
xchg
add
sbb
push
inc
cmp
jae
cmp
test
push
out
vxorpd
cli
out
or
sbb
or
imul
mov
ret
hlt
adc
shrl
xor
test
xchg
mov
sub
or
sub
inc
sub
pop
popa
dec
loope
jnp
cld
lods
mov
jmp
int
sbb
add
mov
cmp
jae
push
movsl
stos
ret
pop
ffree
fidivs
loope
xor
std
xchg
dec
push
call
sahf
movsb
sbb
shl
idivb
shlb
adc
inc
dec
pop
lock
jbe
xchg
lcall
jmp
or
dec
jb
shrl
xchg
shrl
mov
xchg
out
xchg
add
or
ret
mov
dec
loope
fisttpll
push
cld
push
popa
dec
xchg
mov
movsb
cmp
aad
cmp
cmc
ret
sub
pop
pop
dec
loopne
jp
fbstp
fwait
xchg
int
std
xchg
add
sbb
and
sbb
jb
cmp
cmpsb
xchg
pop
out
push
out
clc
in
or
dec
cmp
lahf
mov
dec
repnz
adc
shrl
xor
test
out
xchg
mov
sub
pop
or
dec
fistps
dec
loope
jp
std
stos
mov
jmp
int3
test
incb
xchg
xor
push
movsl
cmp
jb
pop
movsb
test
fbstp
cld
loope
cs
xchg
dec
dec
call
popf
mov
cmp
out
hlt
cmp
and
inc
pop
lock
ja
xchg
cwtl
ja
lret
sub
jmp
sub
or
jo
shrb
xchg
shrl
mov
xchg
in
xchg
add
cmpsb
xor
push
sub
ret
dec
loop
fisttpl
or
imul
pop
dec
xchg
addb
cmp
shll
pop
daa
daa
rcrl
loope
jp
fbstp
fwait
call
out
sbb
mov
inc
cmp
jno
cmp
movsb
xchg
pop
lock
lds
mul
ja
push
sbb
dec
aaa
xchg
sub
imul
mov
fst
push
inc
xor
xchg
lock
mov
sub
push
or
loopne
pop
dec
loop
jns
stos
scas
imul
std
add
cmp
cmpsb
cmp
mov
loopne
idiv
loop
sub
dec
add
pushf
mov
cmp
out
repnz
and
pop
icebp
inc
inc
pop
icebp
jne
js
xchg
xchg
js
enter
out
xchg
sub
cmp
dec
outsb
pop
shrl
shrb
scas
icebp
mov
loop
xchg
adc
push
lds
cmpsl
dec
jecxz
or
push
sub
push
pop
jg
xchg
rcl
movsb
cmp
hlt
les
and
loop
jns
loopne
stos
lcall
std
in
push
mov
pop
sbb
shrl
cmp
mov
ret
pop
lock
loop
unpcklps
js
dec
xor
xchg
sub
mov
fcmovnbe
imul
arpl
mov
mov
cmpsb
out
sub
add
lds
and
dec
jecxz
ja
ljmp
leave
xchg
xor
test
pop
mov
ret
hlt
stc
jecxz
sub
add
jge
push
mov
sahf
pop
mov
mov
cmp
repnz
pop
bnd
jns
xchg
xchg
jns
mov
cs
xchg
sbb
mov
cmp
mov
insb
pop
aam
mov
repnz
loopne
mov
add
test
xor
cmpsb
fs
das
movb
dec
in
xlat
dec
loop
imull
sub
imul
jl
xchg
scas
popf
cmpsl
ds
shlb
pop
and
pop
push
inc
jecxz
jbe
loope
test
lret
cld
jmp
push
mov
cmp
shll
ret
repz
adc
xchg
cs
mov
mov
mov
in
fcom
push
paddq
sub
mov
repnz
adc
add
das
cmp
dec
loop
pop
dec
in
je
add
movl
cmp
test
pop
mov
shl
repz
jecxz
sub
add
cwtl
popf
pop
mov
mov
cmp
repz
pop
jp
nop
xchg
jns
lds
xchg
sbb
mov
imul
mov
mov
fcomip
mov
call
test
xor
cmpsb
fs
das
movb
dec
in
xlat
dec
loop
imulb
sub
imul
jnp
xchg
scas
pushf
cmpsl
ds
shlb
pop
and
pop
push
inc
jecxz
jne
loope
test
lret
cld
call
push
mov
cmp
shll
ret
repz
adc
xchg
arpl
cs
dec
in
xlat
shrl
paddq
sub
mov
mov
adc
add
das
cmp
dec
loop
pop
dec
in
jae
add
movb
xor
cmpsb
cmp
test
pop
lahf
movsl
lds
loop
repnz
jecxz
sub
cwtl
inc
dec
add
xchg
popf
pop
mov
mov
cmp
repz
pop
bnd
jp
xchg
jns
lds
xchg
sbb
dec
cmp
insb
mov
mov
fcomip
mov
adc
fs
das
movb
dec
in
xlat
dec
loop
cmc
imul
sub
pop
dec
mov
jp
xchg
scas
fwait
cmpsl
ds
movsl
cmp
out
lds
ret
pop
push
inc
jecxz
je
loope
test
lret
cld
out
mov
push
push
mov
cmp
shll
ret
repz
unpckhps
inc
xor
cs
dec
in
shrl
paddq
sub
mov
repnz
adc
incl
das
cmp
dec
jecxz
pop
dec
in
jb
add
mov
idiv
mov
xor
cmpsl
ds
push
cmpsl
subl
movsb
lds
jecxz
icebp
mul
jp
adc
cltd
inc
dec
add
xchg
pushf
pop
mov
mov
aad
out
cmp
hlt
cmp
bnd
jnp
mov
cltd
xor
in
cs
add
dec
push
insl
mov
hlt
mov
fdivp
mov
std
adc
arpl
movl
dec
loop
hlt
insb
add
sub
pop
inc
mov
jns
xchg
scas
lcall
add
pop
and
ret
pop
push
inc
in
jae
loope
test
add
sti
out
mov
sbb
ds
outsl
cmp
mov
rcrl
fdivrl
push
adc
adc
cwtl
das
popa
addr16
cs
xorb
in
aad
imul
aam
inc
sub
mov
repnz
mov
cmpsl
in
cs
das
aaa
pop
dec
in
pop
dec
in
jno
add
les
and
sbb
subb
popf
mov
in
lock
jp
adc
lcall
and
int3
mov
out
cmp
cmc
cmp
pop
bnd
jl
lea
lcall
add
dec
imul
push
test
mov
mov
cld
adc
bound
enter
les
dec
loop
rep
add
sub
pop
inc
mov
js
xchg
lods
cltd
test
cmp
in
pop
pop
and
pop
push
inc
in
jb
loope
cmpsl
xchg
add
cli
in
mov
dec
aaa
aas
push
mov
mov
fstpt
or
cs
xor
xchg
cs
xorl
insb
push
or
repz
repnz
mov
cmpsl
in
das
std
add
dec
in
push
dec
in
jo
add
ret
mov
cmc
cld
mov
cs
test
subl
pop
aam
in
out
cmc
jecxz
daa
adc
inc
dec
add
xchg
lcall
out
cmp
idivb
ds
repnz
pop
jge
mov
fwait
xor
jecxz
cs
ss
push
mov
push
cmpsl
testb
sti
adc
sub
popa
dec
xor
jle
sub
out
aam
loop
repnz
add
pop
inc
mov
ja
xchg
lods
cwtl
stos
inc
lret
cmp
jmp
pop
sbb
ds
jo
loop
cmpsb
xchg
add
ret
xchg
clc
jecxz
mov
dec
xor
cmp
cmc
mov
fnstcw
adc
inc
sub
xor
cwtl
das
xchg
jg
dec
mov
mov
jmp
or
insb
cmp
pop
repz
mov
test
lret
sti
add
xor
dec
out
push
dec
in
outsb
insl
add
cmpsl
insb
add
rorl
sub
stos
inc
inc
dec
test
jg
enter
pop
sarb
in
and
inc
add
xchg
cwtl
and
in
ds
push
pusha
divl
cmp
rep
pop
jle
mov
pushf
xor
loope
das
adc
mov
dec
addr16
fsubrs
mov
imul
repnz
das
adc
jl
lds
rorl
lock
add
pop
inc
mov
jne
mov
stos
xchg
stos
inc
enter
jmp
lds
out
outsb
jae
jp
popl
rol
cwtl
mul
and
dec
xor
imul
pushf
test
mov
pop
repz
xlat
jl
or
jnp
inc
sub
xor
mov
dec
call
or
insl
cmp
hlt
mov
hlt
mov
mov
test
stc
add
enter
out
push
dec
out
insb
insl
add
cmpsb
insl
add
mov
mov
sub
stos
inc
inc
dec
test
pop
cwtl
lahf
pop
sarl
in
and
add
lcall
and
loop
aas
sbb
divl
push
jle
mov
pushf
xor
loopne
xor
std
mov
dec
push
fsubrs
xchg
insb
mov
mov
adc
sub
adc
jp
das
mov
push
out
rorb
add
outsb
add
push
inc
mov
jae
mov
stos
xchg
stos
inc
lret
cmpsl
ds
out
pop
sbb
pop
push
cmp
jge
jb
jnp
lea
mov
fbld
mov
dec
xor
bound
fwait
sbbl
mov
jl
pop
adc
lcall
jnp
dec
lods
mov
dec
out
insl
add
xlat
outsb
cmp
hlt
mov
cmc
mov
scas
adc
testl
dec
out
push
push
out
push
add
movsl
outsb
add
out
clc
mov
sub
stos
inc
inc
dec
stos
inc
jge
enter
enter
out
jmp
or
fwait
jne
and
scas
inc
fsub
call
pusha
divl
cmp
imul
mov
cmpsl
pushf
xor
fistps
push
sub
dec
fsubrs
xchg
insl
mov
fxtract
mov
cmc
adc
es
xor
js
xor
mov
push
out
rorl
add
outsb
add
push
aas
mov
jno
mov
test
lret
cld
in
pop
pop
push
pop
push
cmp
jge
jno
jl
mov
mov
frstor
mov
dec
das
inc
xlat
pusha
imul
mov
pop
cmc
in
sarl
push
jge
inc
es
jns
dec
stos
mov
push
out
insl
incb
fsubrs
pop
cmc
mov
testb
lods
adc
faddp
xor
cmc
pushl
leave
xor
push
out
push
push
out
imul
aad
mov
out
testb
dec
stos
inc
jnp
leave
pusha
xchg
pushf
enter
out
call
or
popf
cmp
fwait
jae
and
lea
out
xlat
pop
add
xor
pop
cmc
imul
adc
lcall
xor
jo
test
insl
mov
testl
and
inc
xor
ja
xor
scas
cwtl
push
call
add
outsl
push
sbb
lea
jne
and
enter
in
pusha
push
sbb
pop
dec
aaa
out
imul
pushf
mov
fsubl
mov
inc
cs
fcomps
inc
xlat
cwtl
sbbb
mov
jge
add
jge
ds
fwait
xor
mov
push
in
xlat
outsb
std
add
testb
jno
stos
mov
ret
xor
hlt
std
xor
cs
push
call
subb
lcall
and
hlt
mov
shrd
stos
inc
jns
lret
lcall
out
out
pop
or
sahf
cmp
fwait
jno
and
mov
fsubp
inc
xlat
adc
ss
cmc
addr16
adcb
mov
movsl
sahf
xor
or
das
mov
jno
adc
mov
clc
rcl
hlt
mov
repz
lods
and
adc
jbe
xor
lods
xchg
push
jmp
jmp
insl
add
cmp
and
movsl
lods
inc
rol
inc
clc
loop
popa
adc
enter
call
xchg
lcall
pop
adc
std
push
and
jmp
mov
in
lods
aad
and
and
pop
mov
out
jl
cs
notb
dec
mov
sub
or
test
rorb
aas
lcall
int3
and
mov
mov
lock
ja
test
push
cmc
outsl
cmpsb
addr16
std
add
je
or
nop
flds
in
push
pop
shrb
adc
or
cmpsl
push
lcall
stc
xchg
and
imul
push
in
jg
test
icebp
pop
clc
outsl
testb
aam
jnp
xchg
mov
xor
push
lea
mov
les
adc
leave
sbb
imul
pop
sub
fs
xchg
pop
pop
loopne
test
cmp
xchg
inc
inc
dec
mov
sbbl
popf
xchg
jb
mov
dec
ja
jmp
push
imul
sbb
jnp
mov
ljmp
cmp
xchg
in
push
mov
lea
xor
popf
lcall
mov
std
jge
negb
sbb
or
es
test
mov
xorl
mov
sbb
xor
push
xchg
jmp
mov
mov
push
jnp
jb
arpl
in
fldenv
push
pop
cmp
ss
sbb
dec
into
add
push
fmul
mov
push
ret
xor
ss
mov
sub
and
or
and
pop
jno
movsl
test
das
cld
jno
lds
jle
inc
cmp
iret
mov
push
add
pop
mov
pop
inc
xchg
ret
lcall
mov
jg
test
das
xchg
xor
add
add
add
xor
add
add
add
add
cmp
fisttpll
mov
and
push
es
outsl
cli
adc
iret
inc
inc
dec
rolb
mov
mov
cmpsl
rolb
int3
mov
inc
jbe
mov
mov
cmpsb
pop
pop
scas
mov
push
cmpsb
movsb
out
test
jp
movsl
inc
cmp
cmpsl
cli
or
xlat
es
push
fs
fisubs
inc
xchg
cmp
sbb
shl
scas
cltd
mov
stos
jnp
cmp
pop
je
add
or
bound
add
dec
push
lods
pop
movsb
sbb
fs
adc
fstpt
enter
jnp
shlb
lret
adc
push
loopne
scas
sub
inc
fyl2x
fldcw
push
jbe
insb
xor
xlat
sub
mov
jnp
les
arpl
jne
testl
or
hlt
push
js
xchg
fst
xchg
mov
lret
pop
jl
lock
gs
test
hlt
sub
or
xchg
cmpsl
fs
das
cmp
fldt
inc
jbe
pop
loope
loopne
fwait
jbe
xchg
int3
int
xor
or
pop
fwait
mov
movsb
arpl
pop
pop
pusha
adc
div
cld
nop
fsts
call
mov
pop
pop
std
les
mov
lea
and
into
std
mov
jne
outsl
rclb
sti
pop
push
cmp
out
and
push
mov
jbe
cmc
mov
cltd
inc
cwtl
mov
mov
mov
mov
mov
xchg
adc
cld
sahf
xchg
iret
pop
dec
adc
and
mov
inc
int3
adc
and
mov
lcall
dec
leave
popw
pop
cltd
insb
imul
js
dec
xchg
pop
les
jno
les
xlat
inc
mov
lds
push
inc
fisubrs
or
inc
lds
call
inc
mov
pop
mov
jae
mov
nop
aaa
xor
mov
xchg
jo
xor
scas
lret
sub
pop
shll
lds
jl
xchg
inc
nop
sub
jae
cmpsb
out
or
pcmpgtd
daa
outsb
xchg
push
loop
sti
popf
pop
pop
and
fs
out
repnz
lods
dec
mov
mov
test
movsl
inc
pop
inc
or
adc
inc
cmp
sbb
insb
push
sub
jne
push
cmp
icebp
mov
inc
or
jbe
and
lea
jno
xchg
out
bound
addr16
dec
adc
push
pop
inc
mov
rclb
gs
add
ja
insl
xor
push
pop
mov
into
fsubl
test
fidivl
or
xor
xchg
enter
push
ss
in
xor
daa
into
outsl
jb
jns
sub
out
in
and
xor
outsl
rcll
fdivl
fists
and
dec
jp
inc
dec
or
scas
push
cli
pop
xor
xor
or
inc
adc
shr
adc
adc
in
sbb
sarl
xchg
in
sbb
push
out
add
mov
lcall
cmp
bound
inc
inc
jg
adc
daa
and
jnp
cwtl
rclb
pop
test
addb
pusha
mov
insb
pop
mov
xchg
mov
stc
adc
mov
adc
mov
in
adc
out
ss
mov
iret
jnp
icebp
adc
ret
enter
xchg
cmp
cmpsl
mov
addr16
test
fisubl
push
movsl
jnp
xchg
stos
incl
push
arpl
add
push
inc
fisttpll
in
je
adc
inc
jmp
mov
mov
insb
sub
xchg
adc
push
popa
lea
pushf
aad
jb
pop
sub
dec
mov
sbb
mov
xor
inc
iret
jp
mov
out
in
mov
jo
add
aaa
inc
mov
outsb
pop
xchg
mov
push
push
mov
push
xor
aad
jmp
push
lcall
adc
aad
sarl
sub
imul
mov
xor
xchg
lahf
mov
sti
lahf
pop
and
aam
and
push
pop
xchg
ss
leave
add
cmp
je
call
pop
jp
ljmp
pop
mov
add
ret
dec
cmp
jae
jae
add
mov
push
xor
add
or
mov
jl
xor
les
dec
jp
mov
jae
js
mov
test
mov
mov
mov
add
mov
push
lret
mov
xor
dec
adc
xor
dec
xor
dec
push
xor
das
and
lods
data16
enter
and
mov
leave
stc
or
and
popa
or
lds
adc
les
jbe
lods
pop
and
sbb
int
stc
jno
cmpsl
das
cmp
xchg
les
dec
jp
xchg
out
icebp
lods
pop
movsbl
in
negl
mov
movsl
pop
or
inc
inc
repz
jl
jmp
mov
cltd
loope
popf
leave
inc
outsl
sahf
pop
mov
mov
mov
mov
mov
inc
xchg
jo
sub
testl
cmp
jl
adc
ss
and
sbb
dec
movsl
xchg
mov
call
xchg
xchg
call
mov
xchg
sti
test
pop
dec
dec
sbb
je
in
mov
jbe
push
dec
xor
stos
lret
adc
insl
movsl
mov
or
and
push
add
or
push
imul
divl
add
cli
inc
adc
bound
popf
aam
fstl
imul
adc
rolb
jnp,pn
xor
lods
sub
and
xor
xchg
iret
cwtl
es
mov
int
int
xorl
pop
int3
add
or
fdivrp
sti
push
std
mov
fmull
jb
sub
mov
sbb
stc
loopne
xchg
lret
xor
or
adc
test
in
push
and
aam
test
mov
and
arpl
jo
mov
setl
jo
mov
setp
jo
mov
bnd
mov
cmp
mov
cmp
inc
xor
stos
inc
gs
push
arpl
and
mov
pop
cmp
sahf
add
add
