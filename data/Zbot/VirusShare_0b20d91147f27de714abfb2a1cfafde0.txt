xor
mov
mov
pusha
call
add
pop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
jmp
ret
mov
sub
sub
lods
mov
mov
shl
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
mov
add
mov
sub
jb
mov
sub
jg
mov
jle
popf
mov
dec
call
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
addl
pop
sub
or
push
pop
cmp
je
add
xor
movl
add
and
neg
addl
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
cwtl
and
add
and
add
add
push
add
and
add
in
add
inc
and
add
and
add
and
add
and
add
add
fsubl
add
into
and
add
add
pop
and
add
add
mov
add
add
and
add
add
insb
and
add
add
dec
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
add
add
hlt
and
add
add
add
add
dec
and
add
and
add
add
test
add
dec
and
add
add
add
and
add
add
push
add
and
add
in
add
inc
and
add
and
add
and
add
and
add
add
fsubl
add
into
and
add
add
pop
and
add
add
mov
add
add
and
add
add
insb
and
add
add
dec
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
add
add
repnz
imul
jb
je
arpl
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
gs
je
imul
inc
add
roll
dec
gs
jo
jb
add
aad
inc
gs
gs
inc
imul
outsl
popa
fs
imul
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
popa
jo
gs
jb
jns
ret
gs
jne
jb
outsb
je
jb
arpl
jae
dec
add
insb
outsb
inc
add
add
je
jb
jbe
je
push
jb
imul
push
add
dec
jo
outsb
dec
jne
gs
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
push
gs
insl
gs
push
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jb
jbe
push
jns
gs
add
inc
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
test
inc
jb
popa
je
inc
jbe
outsb
je
add
out
inc
gs
imul
bound
gs
add
dec
add
je
jb
arpl
jae
gs
jo
add
add
insb
jae
gs
popa
insb
jne
add
push
dec
inc
dec
xor
cs
insb
add
add
inc
ja
outsb
jne
inc
outsb
je
jns
gs
imul
ja
insb
outsl
outsb
gs
outsb
je
jns
add
inc
ja
outsb
jne
inc
outsb
je
jns
gs
imul
popa
jae
gs
gs
inc
outsb
je
jns
add
push
popa
jae
imul
add
jae
imul
add
outsb
jne
inc
outsb
je
jns
gs
imul
popa
jae
imul
add
insb
outsl
outsb
gs
outsb
je
jns
add
popa
jae
outsb
imul
imul
ja
popa
jae
outsb
imul
imul
ja
popa
jae
outsb
imul
imul
popa
jae
gs
gs
inc
outsb
je
jns
add
push
inc
push
dec
xor
cs
insb
add
add
gs
outsb
jne
inc
jb
jne
jae
add
add
gs
gs
gs
dec
je
insl
add
gs
outsb
jb
push
je
jb
jne
add
add
gs
jb
gs
popa
je
add
push
xor
fs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
scas
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
lcall
jg
add
jnp
stos
stos
lods
add
cmpsb
cmpsb
push
mov
mov
mov
ret
ret
lret
int3
int
rcl
in
rcl
shl
iret
ror
hlt
int
int
mov
enter
in
mov
mov
stos
lods
lods
lea
cltd
fwait
and
jne
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
out
lret
rcl
sar
xlat
xlat
std
xlat
xlat
fcom
aad
aad
rcl
iret
dec
int3
int
aad
aam
ror
sar
ret
ret
mov
mov
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
stos
stos
lods
add
scas
sbb
mov
jnp
mov
mov
dec
leave
leave
call
rcl
aad
aad
fcom
xlat
fcom
call
aam
into
int3
int
int
int3
call
aad
dec
into
int3
mov
mov
mov
std
test
test
xchg
xchg
xchg
mov
pop
pop
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
pop
add
push
or
or
sbb
push
add
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
into
int
rcl
sar
xlat
fdivr
fcomp
xlat
call
aad
dec
int
dec
lret
leave
dec
into
int
vshufps
mov
mov
jmp
mov
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
bound
fs
ds
sbb
push
das
prefetch
sbb
ss
aaa
cmp
cmp
and
and
add
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
enter
iret
sar
aam
aam
aam
aam
rcl
iret
dec
leave
leave
inc
ret
ret
ret
mov
mov
ljmp
mov
pushf
cwtl
xchg
xchg
lcall
test
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
jo
jge
jl
jge
jg
jo
jo
popa
arpl
dec
push
dec
xchg
cmp
cmp
pop
pop
pop
stos
outsb
jo
nop
popa
bound
inc
inc
inc
xor
add
add
add
add
movsb
movsb
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
inc
mov
mov
mov
ljmp
mov
cltd
call
xchg
xchg
cwtl
xchg
xchg
cltd
lcall
ds
push
push
push
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
jo
add
pop
or
jl
nop
lea
incb
jnp
jnp
jl
outsb
outsb
jo
push
push
jae
jg
jle
jp
jp
arpl
fs
inc
inc
cmp
sbb
sbb
adc
or
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
test
pushf
pushf
pushf
call
test
decl
xchg
xchg
sahf
lahf
mov
ficomps
xchg
xchg
jle
jns
pop
das
das
das
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
popf
in
mov
incl
mov
std
mov
jg
jo
jb
jae
jae
jg
jg
test
xchg
push
cmp
ss
es
jg
jg
cltd
lcall
stos
test
lods
sti
stos
stos
lods
stos
lods
lods
test
mov
fwait
xchg
xchg
xchg
incl
jg
jns
jns
jp
jnp
mov
xchg
mov
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
movsb
cmpsb
out
scas
mov
xchg
xchg
incl
xchg
mov
xchg
std
cwtl
cwtl
cwtl
stc
xchg
xchg
xchg
in
mov
or
lea
xchg
or
or
dec
insl
insb
imul
test
lcall
out
fwait
cltd
cltd
stc
xchg
std
mov
mov
mov
mov
lea
cltd
jmp
lods
scas
mov
mov
mov
mov
mov
std
mov
mov
movsl
mov
jnp
scas
test
add
adc
test
mov
incl
xchg
decb
xchg
sahf
sahf
sahf
std
mov
mov
xchg
in
nop
nop
in
xchg
push
jne
cmovp
or
dec
dec
dec
data16
jb
mov
xchg
rclb
xchg
std
mov
nop
call
lahf
mov
ljmp
test
scas
mov
xchg
test
rolb
mov
mov
ljmp
mov
add
pop
adc
mov
jmp
popf
cwtl
pushf
incl
mov
nop
nop
xchg
call
xchg
xchg
sahf
pushf
pushf
movsb
movsb
mov
movsl
movsl
movsb
notl
jl
movsl
push
push
push
outsl
dec
dec
dec
pushaw
bound
jno
je
jl
jle
test
int
nop
xchg
in
xchg
xchg
testl
lea
jmp
mov
mov
pop
mov
xor
jbe
mov
cmpsb
mov
mov
lods
lods
mov
movsl
movsl
add
mov
add
pop
adc
mov
ljmp
pushf
decl
xchg
call
xchg
xchg
call
xchg
cltd
lcall
mov
mov
movsb
stc
cwtl
lcall
xchg
xchg
les
fwait
in
xchg
xchg
out
mov
stc
xchg
test
std
xchg
jb
lcall
jmp
jl
mov
jp
mov
jae
mov
outsb
ljmp
adc
stos
or
ljmp
inc
jle
mov
mov
stos
pushf
mov
movsl
mov
add
pop
pusha
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
popf
popf
lcall
pushf
pushf
call
xchg
cwtl
decl
xchg
xchg
call
lcall
fwait
mov
cld
popf
mov
xchg
insb
xchg
xchg
pop
jle
xchg
dec
jns
fwait
cmp
fwait
sub
popf
pop
push
jmp
adc
stos
adc
lods
adc
lods
adc
scas
adc
mov
push
mov
imul
push
insl
mov
lcall
lods
scas
lods
scas
movsb
movsl
mov
add
add
add
add
add
pop
pop
adc
mov
lcall
xchg
xchg
lcall
mov
movsl
jmp
mov
cwtl
decl
mov
mov
mov
xchg
jbe
cltd
jo
lcall
call
cs
decl
adc
xchg
or
add
push
lcall
add
ljmpw
sbb
mov
jno
mov
outsb
mov
and
mov
and
inc
test
ret
mov
lods
lods
mov
mov
movsb
movsl
add
pop
pop
adc
lods
mov
mov
cwtl
pushf
lcall
movsb
jmp
test
ljmp
cmpsl
cmpsl
lcall
orb
mov
decl
sub
mov
popa
decl
or
addb
incl
add
mov
pop
call
add
lcall
ljmp
and
mov
jbe
mov
sub
inc
sub
inc
sub
sub
enter
leave
das
jg
movl
sarb
movsl
movsb
mov
add
add
add
add
stos
movsb
stos
add
adc
cmpsl
scas
ljmp
lahf
jmp
test
ljmp
stos
lods
pushl
lods
scas
jmp
jo
decl
or
incl
or
add
incl
add
add
mov
push
decl
add
xchg
add
fwait
add
lahf
add
mov
adc
mov
aaa
cmp
cmp
dec
cmp
call
cmp
call
cmp
call
inc
xchg
dec
mov
std
mov
mov
movsb
movsb
mov
add
mov
add
add
add
mov
dec
dec
adc
test
mov
mov
lahf
cltd
sahf
ljmp
scas
lods
pushl
mov
pushl
mov
ljmp
ja
decl
or
mov
pop
decl
or
test
push
incl
add
lea
push
call
add
popf
add
mov
add
lods
add
jb
ret
dec
inc
dec
inc
mov
roll
call
inc
nop
fmuls
call
dec
xchg
fimull
fmull
fistl
call
xchg
mov
mov
movsl
mov
lahf
or
add
add
add
add
dec
dec
adc
jl
popf
mov
jmp
stos
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
outsb
decl
sbb
call
push
pop
decl
pop
push
decl
add
xchg
add
popf
add
mov
add
test
push
fs
es
int
call
push
cwtl
fcoms
ficoml
fstl
fists
fistps
jmp
pop
lahf
jmp
pop
mov
fadds
ret
mov
mov
cmpsl
cmpsl
test
sahf
sahf
sahf
or
cwtl
xchg
xchg
add
inc
adc
jns
lahf
lcall
mov
lods
stos
pushl
mov
mov
mov
mov
ljmp
inc
jbe
xchg
pop
arpl
xchg
and
call
call
or
decl
add
fwait
add
mov
add
stos
add
mov
data16
mov
xor
call
pop
fwait
ficompl
fbld
fbld
jmp
cmpsl
jmp
cmpsb
jmp
data16
call
cmpsl
jmp
test
mov
cmpsl
cmpsb
mov
sahf
lahf
add
inc
inc
adc
jp
xchg
lcall
fwait
popf
ljmp
mov
pushl
mov
mov
mov
mov
cmp
sub
lcall
call
pop
call
add
fwait
add
mov
add
stos
add
mov
pushl
adc
roll
frstor
jmp
jo
jmp
jo
jmp
jno
ljmp
in
je
out
jbe
in
je
in
jb
jmp
mov
mov
cmpsl
test
mov
sahf
sahf
add
add
insl
js
mov
lcall
mov
pushl
mov
mov
inc
mov
mov
lcall
xor
lahf
aaa
jbe
mov
xor
lcall
call
add
mov
add
mov
arpl
mov
data16
mov
sbb
fistl
jmp
js
ljmp
in
jg
out
cmpl
push
test
push
cmpb
mov
inc
mov
test
sahf
sahf
popf
daa
lahf
sahf
lahf
add
add
add
pusha
add
xor
pop
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
mov
ret
mov
mov
lahf
insb
mov
cltd
cmp
inc
jle
movsb
inc
jg
movsb
cmp
lcall
lcall
pop
ljmp
add
mov
fs
mov
add
dec
daa
cmp
movsl
jmp
mov
icebp
pop
push
xchg
ret
nop
ret
nop
nop
ret
clc
xchg
clc
mov
in
mov
fnstenv
ret
clc
stos
lods
test
xor
pushf
sahf
add
add
add
inc
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
xchg
pushl
mov
mov
inc
ret
ret
ret
ret
mov
jl
lcall
jg
lods
dec
test
movsb
xor
lcall
add
mov
add
lods
add
mov
mov
add
movl
out
xchg
fwait
push
fwait
push
cltd
push
fwait
leave
push
pushf
lret
popf
lret
lahf
into
sti
sahf
into
cld
cltd
lret
push
xchg
sar
mov
cli
mov
mov
lahf
lahf
lahf
aas
nop
xchg
xchg
add
add
add
aaa
xor
or
cmp
outsb
dec
dec
dec
jecxz
pop
popa
decl
mov
mov
mov
sar
mov
mov
mov
ljmp
dec
xchg
movsb
sub
fwait
push
pop
lcall
pop
ljmp
add
mov
add
movl
je
fiadds
in
mov
push
movsb
int
cmc
cmpsb
into
stc
test
cli
test
sar
cli
test
test
sar
test
mov
dec
enter
mov
into
sahf
mov
xchg
add
cltd
lcall
xor
sub
inc
inc
inc
bound
pop
xlat
je
jno
mov
mov
ret
sarl
inc
enter
rol
mov
cmpsl
jmp
push
mov
scas
dec
test
mov
add
mov
add
mov
mov
add
into
add
xlat
add
ficoms
out
pop
cmpsl
push
lahf
lret
sti
lods
sar
cli
mov
sti
scas
aam
cli
mov
mov
cld
mov
mov
mov
pushl
sar
mulb
call
lret
mov
mov
sahf
mov
xchg
or
add
add
xor
sbb
sbb
outsl
jo
mov
vpsubusb
jmp
xlat
not
rcl
std
lret
dec
leave
leave
dec
leave
leave
dec
leave
lret
inc
enter
lahf
scas
jmp
push
mov
lods
jg,pt
lahf
punpckldq
mov
add
mov
arpl
mov
add
rolb
outsl
fadds
je
loopne
jae
ljmp
cli
lods
aad
cld
mov
cld
mov
fdivr
cld
mov
xlat
cld
mov
fdivr
inc
mov
lret
jmp
mov
call
lret
mov
mov
xchg
or
add
add
xor
add
add
or
enter
in
call
call
jecxz
fucom
fsub
fcmovnu
fdiv
fcomp
xlat
cli
aad
std
int3
iret
sar
mov
push
test
test
jae
mov
add
mov
arpl
mov
add
leave
add
aam
jae
faddl
jbe
in
jbe
out
xor
cli
mov
loopne
inc
loopne
std
loopne
inc
loopne
dec
loopne
inc
fdivrp
std
enter
enter
lret
loopne
cli
mov
enter
into
mov
mov
xchg
adc
add
add
incl
std
std
add
std
std
add
div
or
out
in
pop
in
in
out
sub
in
in
dec
ljmp
xchg
call
out
aad
jmp
mov
xchg
test
jns
mov
add
ljmp
add
mov
add
into
add
fadds
je
loopne
js
call
inc
popf
cld
mov
loop
std
int3
jecxz
dec
out
dec
in
dec
in
dec
loop
std
int3
loop
dec
in
std
iret
jecxz
shl
call
in
cld
fdivr
in
mov
inc
out
cmpsb
test
mov
xchg
xchg
add
add
add
incb
std
std
std
add
div
add
repz
repnz
push
out
repnz
out
repnz
cmp
out
in
pop
fsubp
loope
les
sti
sahf
es
lahf
add
pop
ljmp
add
mov
add
rolb
jo
fildl
jne
in
jnp
in
movd
cmc
pop
test
sti
mov
shl
cld
shl
call
out
std
shl
call
jecxz
std
aad
xlat
out
call
fucomi
cld
iret
loop
hlt
ret
jmp
aad
dec
leave
leave
repz
stos
fwait
xchg
xchg
xchg
and
xchg
xchg
add
std
cld
add
cld
stc
add
cld
stc
add
cmc
repz
aad
xor
mov
xchg
negb
add
add
lods
add
mov
add
lret
call
add
fildl
jne
call
sbb
sti
cld
xlat
call
std
fucomp
fucomp
std
fsubr
std
fucomip
loopne
fucomip
std
aam
push
ret
aam
out
iret
rcl
clc
lods
lods
lods
lods
xchg
xchg
xchg
outsl
jo
add
add
add
loope
add
mov
cwtl
repnz
and
sahf
add
cmpsb
add
mov
popa
mov
add
into
add
aam
jb
fiadds
jae
call
sub
cld
shl
std
fcomip
std
fucomi
std
fucomi
fldpi
fsub
std
in
std
shl
cld
iret
loopne
cli
shl
push
iret
clc
int
push
ret
in
mov
jmp
rcr
call
fcom
sti
mov
mov
cltd
cltd
cltd
cmp
fwait
fwait
add
fcom
add
mov
sahf
jmp
sub
lahf
add
stos
add
mov
fs
mov
add
rolb
outsb
call
add
loop
js
jmp
xor
cld
enter
lret
cld
idivl
aam
hlt
mov
iret
push
mov
int3
ljmp
call
ret
call
fneni(8087
cmc
loopne
fucomip
mov
mov
xchg
add
add
add
into
lret
add
rol
mov
cmpsl
loopne
ss
mov
add
mov
gs
mov
add
dec
push
jno
rorl
jbe
fisttpl
js
loop
cmp
dec
cwtl
ljmp
jmp
scas
enter
mov
cli
fdivl
lock
int
fmul
rcr
loopne
aad
loope
fcmovb
out
loop
jmp
out
lock
out
popf
jmp
leave
lret
push
stos
lods
stos
adc
cmpsb
cmpsb
cmpsb
add
ret
mov
popf
stos
aam
dec
jg
popf
sbb
test
insb
lods
and
ja
mov
inc
xchg
ret
stc
lret
fs
mov
out
mov
mov
lret
ror
int3
mov
into
shlb
xlat
rcl
jg
fcmovu
jb
loopne
gs
jecxz
call
in
jmp
lock
hlt
sub
div
and
repnz
sbb
fstp
or
mov
int
xchg
add
mov
rol
mov
scas
mov
test
fwait
cmc
mov
jbe
ljmp
mov
sarb
stos
mov
les
rcrl
int
ror
into
addr16
rcl
push
rcl
rorl
fcom
inc
rcl
aam
fcmovu
daa
fcompl
fneni(8087
fstl
fsubp
jecxz
in
out
ljmp
cli
testl
std
std
add
std
incl
mov
mov
shrb
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
mov
ror
xor
into
lret
ror
and
rcrl
iret
aam
adc
rorb
aam
push
rcr
xlat
add
fcmovnu
add
loopne
add
in
add
in
jmp
lret
fcom
add
std
incb
mov
mov
add
ret
ret
or
mov
mov
mov
push
rol
or
enter
leave
enter
lret
add
rolb
rcl
aad
rcl
aam
aam
aam
aad
xlat
add
xlat
loope
aad
fiaddl
loope
loopne
jecxz
out
lock
add
incb
std
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
ret
ret
mov
ret
mov
mov
mov
ja
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
mov
aam
rcl
jmp
aam
cmc
aam
sar
into
into
sar
lret
lret
lret
stc
lret
lret
int3
hlt
mov
mov
stos
fwait
xchg
xchg
xchg
dec
aas
aas
aas
and
add
sbb
add
adc
add
push
add
add
jg
addl
push
push
push
add
add
add
add
add
add
add
add
add
mov
mov
mov
enter
sar
aad
call
aad
call
ror
dec
into
iret
dec
lret
int3
inc
rol
mov
mov
icebp
cwtl
cwtl
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jae
je
jne
data16
dec
inc
inc
cmp
sub
sub
xor
dec
sub
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
dec
lret
rcl
sar
rcl
sar
lret
inc
mov
mov
ljmp
lahf
lahf
xchg
cwtl
cwtl
jmp
jno
xchg
adc
add
xor
add
add
add
add
cmpb
jl
jp
test
jnp
imul
movsb
push
push
push
stos
push
outsb
insl
push
pop
pop
cmp
cmp
pop
outsl
jno
adc
mov
mov
sar
mov
mov
ljmp
pushf
fwait
call
xchg
xchg
cltd
cltd
fwait
out
test
movups
xor
add
and
add
adc
add
pop
cltd
fwait
fwait
add
fwait
xchg
cltd
fcoml
addb
jnp
jl
jns
jns
jns
jns
jp
jns
jb
jb
push
push
push
cmp
jae
sahf
sahf
popf
mov
lods
scas
repz
scas
lods
sti
scas
lods
scas
std
cmpsl
test
sahf
call
test
call
mov
lods
jmp
lods
scas
leave
cmpsb
movsl
movsl
cltd
jb
jae
adc
adc
add
add
add
add
insl
insl
insl
pop
nop
mov
loop
cltd
sahf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
outsb
orl
lcall
mov
xchg
xchg
xchg
lcall
cmpsb
cmpsl
mov
scas
std
mov
scas
mov
mov
mov
cmpsl
mov
addb
add
add
add
add
pusha
or
lods
mov
movsl
sahf
movsl
decl
mov
nop
call
sahf
mov
negl
jle
stos
push
push
push
jo
pop
pop
outsl
imul
jge
subb
mov
std
nop
mov
ljmp
jg
pushl
pop
mov
jge
mov
lods
stos
insl
stos
stos
test
add
add
add
popa
or
mov
in
mov
nop
call
xchg
lcall
cltd
fwait
cltd
fwait
lcall
xchg
cltd
jmp
xchg
mov
jecxz
orb
xchg
insb
xchg
xchg
pop
jg
sahf
dec
jnp
movsb
inc
jp
scas
ss
mov
jae
mov
outsb
ljmp
sbb
mov
lods
mov
scas
scas
mov
movsl
movsb
mov
add
add
add
pop
or
mov
in
movsl
test
cltd
xchg
xchg
lcall
mov
lahf
call
mov
call
jno
cld
xchg
pusha
test
xchg
dec
jp
cmp
nop
sub
xchg
sbb
lcall
push
ljmp
sbb
mov
insb
pushl
push
jb
mov
pop
mov
scas
scas
xchg
popf
lahf
popf
adc
add
add
popa
popa
pop
or
mov
stos
movsb
cmpsb
jmp
test
ljmp
test
lcall
cmp
mov
decl
adc
xchg
push
decl
add
call
add
or
pushl
sub
mov
jle,pn
xor
dec
pop
xchg
inc
test
divl
cmpsl
test
add
add
add
pop
or
movsb
test
ljmp
scas
mov
mov
mov
mov
mov
cmpsb
cwtl
lahf
decl
adc
mov
pop
incl
push
push
decl
add
xchg
add
mov
add
mov
outsb
inc
cmp
rolb
call
inc
nop
call
inc
xchg
call
arpl
stc
mov
mov
movsl
movsb
movsb
daa
std
add
add
add
pop
or
mov
ljmp
mov
mov
mov
ljmp
push
jge
nop
push
call
pop
pop
decl
add
add
sahf
add
add
lods
add
ja
rorl
call
push
pushf
fistpl
jmp
pop
mov
jmp
pop
mov
dec
test
cld
mov
mov
movsl
stos
movsl
xor
addb
add
add
dec
pop
jge
jl
fwait
xchg
cwtl
jecxz
mov
scas
pushl
mov
mov
lcall
sub
lcall
and
xchg
cvtdq2ps
xchg
add
sahf
add
cmpsb
add
scas
add
push
imul
jmp
insl
test
in
stos
ljmp
in
jb
call
test
mov
inc
jg
jg
add
add
dec
dec
dec
pop
outsb
insl
insb
bound
cltd
xchg
ljmp
mov
mov
mov
jne
lcall
cmp
popf
sub
lcall
add
movsb
add
stos
add
mov
inc
or
call
dec
xchg
jmp
jns
ljmp
push
test
push
mov
fldt
mov
push
cltd
cltd
fwait
add
sub
sub
push
push
dec
pop
gs
loopne
mov
mov
mov
ret
inc
mov
pushf
jmp
inc
cmp
fwait
pop
pop
jmp
add
mov
arpl
mov
push
jne
loopne
mov
push
xchg
ret
push
xchg
push
cltd
enter
enter
lret
clc
xchg
jmp
lods
inc
mov
stos
popa
mov
add
add
xor
inc
pop
pop
pop
push
fisttpl
mov
mov
ret
ret
ret
ret
inc
ret
xchg
test
movsl
pop
xchg
lods
dec
cmp
and
lahf
add
ljmp
add
add
lret
add
fldenv
cmp
jnp
push
mov
iret
stc
test
sar
cld
lods
sar
cld
lods
sar
stc
cmpsl
lret
jmp
mov
inc
rol
stos
stos
stos
jne
pushf
sahf
or
add
add
dec
dec
dec
aaa
jae
je
test
into
into
out
iret
lret
cmc
leave
int3
lret
lret
enter
mov
bound
jmp
add
mov
fs
add
iret
add
fiaddl
je
ljmp
std
mov
cld
mov
fdivr
cld
mov
fdivr
mov
sar
ljmp
repz
lods
lods
mov
add
add
add
add
pop
or
aad
dec
loope
loopne
fcmovnb
fcmovnu
fcmovu
aam
out
shlb
test
or
mov
arpl
mov
add
aad
je
in
jl
repnz
mov
sti
ret
loop
inc
loope
dec
inc
loopne
dec
loopne
dec
loope
sti
out
mov
lret
mov
xchg
sahf
sahf
sahf
sbb
add
add
incb
incl
ljmp
jmp
jmp
ljmp
xchg
mov
mov
mov
add
mov
arpl
rolb
dec
add
fildl
jbe
ljmp
sti
fdivrp
std
shl
std
shl
call
in
aam
out
std
xlat
call
push
fcos
fcmove
sar
mov
mov
add
std
incl
std
std
incb
std
std
incb
aam
aad
mov
pop
xchg
popf
or
pop
pushl
add
rolb
jo
loopne
jbe
in
and
std
shl
std
fucompp
std
fld1
std
xlat
jmp
std
fld1
cld
fld1
cld
shl
push
jmp
rcl
sti
mov
sahf
lahf
das
add
add
into
int3
int3
or
bound
lods
add
mov
add
add
loop
js
out
das
xchg
stc
fwait
sti
int3
loop
clc
lret
test
aad
bnd
std
lock
sar
out
aad
out
in
jecxz
fsubr
mov
test
std
incl
aad
mov
jae
push
addr16
mov
insl
inc
pop
jno
int
jl
aad
test
ficoms
clc
jecxz
mov
out
jecxz
lret
jmp
fidivrs
leave
ffreep
sarl
in
fcompl
in
out
jns
rcl
dec
mov
add
add
mov
inc
scas
xchg
movsb
les
pop
mov
mov
fidivrl
andb
int
mov
sarb
enter
lret
insl
aam
iret
pop
rcl
iret
dec
fcomp
fnstcw
fildll
in
fsubl
in
lock
in
in
or
std
std
add
add
add
std
add
mov
outsb
scas
mov
lods
mov
push
mov
mov
xor
enter
rcl
rcll
sarb
or
loope
or
int3
into
add
std
incl
std
add
add
add
int3
into
shufps
or
into
int3
int
stos
lods
stos
add
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
cltd
cltd
add
ret
mov
enter
mov
mov
scas
scas
insb
stos
stos
stos
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
jmp
aad
std
rcl
sar
iret
int
std
mov
stc
mov
test
roll
pop
add
add
add
add
add
add
add
add
jno
jae
push
inc
inc
das
das
sub
inc
and
add
add
mov
mov
cmpl
ret
dec
into
into
call
aad
dec
int
inc
enter
mov
scas
lcall
mov
push
add
add
add
add
jae
jae
xchg
aad
outsl
outsb
ret
bound
outsb
insl
outsb
jb
bound
pusha
pusha
pusha
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cwtl
cltd
lds
jae
es
add
add
add
add
jb
jae
pushf
xchg
pushf
mov
test
xchg
xchg
test
addl
dec
push
dec
inc
mov
fwait
into
mov
mov
xchg
decb
lcall
cmpsl
lods
cld
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
adcl
test
test
mov
mov
xchg
xchg
xchg
cld
popf
popf
sahf
cmc
lcall
mov
push
push
imul
jge
mov
xchg
notl
mov
pushl
imul
stos
lods
lods
push
stos
stos
stos
add
add
add
test
lods
cld
xchg
xchg
xchg
call
lcall
xchg
cltd
lcall
mov
loope
je
out
xchg
fs
push
jp
lcall
ljmp
and
mov
insl
pushl
pushf
scas
lock
mov
imul
int
add
add
test
pop
lods
movsl
stos
test
sahf
pushf
popf
jmp
movsl
cmpsb
call
imul
inc
jb
mov
imul
sbb
pop
call
or
pushl
and
jne
shll
inc
aas
test
mov
scas
scas
subl
jne
push
movsb
fwait
mov
cld
cmpsl
cmpsb
test
scas
mov
pushl
xchg
decl
or
xchg
decl
add
mov
adc
shll
dec
ds
roll
call
inc
mov
aam
xchg
dec
cltd
mov
mov
mov
mov
add
add
imul
movsl
mov
lods
pushl
mov
movsb
call
pop
arpl
sbb
xchg
add
mov
add
mov
push
xchg
fistpl
loope
mov
jmp
movsw
call
fwait
mov
test
cmpsl
cmpsl
pop
add
add
popa
bound
mov
lcall
mov
mov
lcall
xor
lcall
lcall
add
mov
xor
call
jl
push
jle
out
jle
ficompl
mov
and
add
add
adc
addr16
mov
mov
mov
mov
rol
mov
bound
lcall
add
ljmp
add
or
dec
xchg
in
mov
push
xchg
clc
cwtl
clc
xchg
enter
mov
movsb
sub
aas
inc
inc
adc
push
xchg
xchg
mov
inc
inc
mov
cwtl
ljmp
pop
imul
mov
gs
add
aad
jns
jmp
lods
clc
cmpsb
iret
clc
lods
sar
cli
lods
sar
cld
scas
sar
lods
sar
in
mov
inc
mov
movsb
ds
std
add
outsl
outsl
inc
scas
mov
mov
aam
rcl
aam
rcl
shr
lret
lret
mov
mov
jmp
add
les
imul
out
xchg
clc
pop
std
mov
fdivr
inc
std
ret
cld
ret
out
mov
ret
in
test
jg
add
add
stos
stos
stos
add
in
in
or
out
jmp
outsb
fisubl
mov
add
mov
add
fldl
sti
scas
dec
out
std
iret
out
shl
std
shl
aam
push
leave
rol
int3
in
scas
lods
scas
popa
addb
add
std
add
std
push
int3
int
sub
lahf
sbb
lods
add
mov
add
jecxz
jns
repz
cmpsb
std
loope
cld
out
std
aad
aad
sti
shl
sti
shl
push
leave
xlat
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
ret
ret
ret
mov
cld
lods
add
push
iret
or
cmp
lock
aam
ljmp
jmp
in
rcl
jmp
scas
push
lcall
add
popf
lods
xchg
dec
and
push
mov
shlb
jbe
mov
xlat
mov
lret
adc
int3
outsl
fxch
into
pop
dec
in
loopne
out
out
out
out
in
sbb
sarb
cmp
movsb
lods
arpl
lods
mov
les
ret
and
ret
fimuls
int
into
or
aam
push
incl
cmpb
incl
stos
incl
rol
add
incb
std
std
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
adc
inc
repz
cwtl
das
fs
adc
mov
das
push
imul
dec
in
sub
mov
imul
jg
cmpsl
mov
mov
psrld
lds
xor
jecxz
test
pop
mov
sbbb
xlat
jecxz
or
mov
cwtl
pop
sbb
push
dec
jl
mov
outsl
fnsave
cmp
xchg
hlt
and
adc
jp
movsb
addr16
cwtl
lds
in
ljmp
or
imul
popf
pop
xchg
sub
mov
dec
jecxz
adc
arpl
xchg
push
out
test
stos
or
fildl
insl
add
cld
sub
sub
dec
dec
fistpll
test
std
roll
enter
test
and
out
xchg
cmp
add
fstps
and
push
dec
inc
xlat
jle
cld
xchg
jno
pop
cmc
rclb
jl
and
cmp
push
inc
lcall
cwtl
mov
or
fstl
mov
mov
bound
stc
xchg
sbb
cmp
mov
mov
cmp
aam
push
xlat
outsb
xchg
sbbl
adc
dec
mov
cwtl
das
pushf
pop
mov
dec
lock
jno
adc
imul
xchg
aaa
arpl
mov
mov
cmp
adc
outsb
scas
inc
dec
loop
shl
mov
mov
add
and
stos
push
or
enter
dec
xchg
bound
xchg
mov
inc
jecxz
xchg
sub
add
bound
or
orb
pop
sahf
fucomip
in
andl
inc
fisttpll
or
mov
ret
hlt
in
fstl
push
mov
sti
push
push
jmp
push
mov
or
inc
shll
mov
xchg
and
adcb
ja
cli
test
lahf
ss
pop
mov
push
loop
scas
inc
mov
ror
fs
and
adcb
inc
jne
mov
cltd
movl
push
sub
adc
sbb
ja
imul
jecxz
lea
fisttpll
or
sarl
sahf
pop
out
iret
insl
stc
nop
mov
rcll
repnz
xchg
sub
adc
or
repnz
addr16
sub
mov
cs
iret
data16
out
dec
jecxz
popa
in
test
mov
mov
movb
shll
cmpsb
cmp
mov
les
stos
data16
fmull
test
das
loope
xchg
adc
cmp
movsb
rclb
cmp
mov
fidivs
fcomps
or
xchg
jge
js
pop
sahf
sbb
scas
lock
and
mov
add
in
je
shrb
xchg
je
ja
xchg
lret
push
movsl
cld
cmp
les
into
shrb
mov
ret
hlt
xor
mov
inc
xchg
mov
lcall
pop
out
sub
pavgw
jl
sbb
iret
mov
mov
and
aad
jne
jae
pop
pop
repz
cli
xchg
cli
stos
jp
fstpl
sbb
xor
into
lahf
push
mov
add
in
icebp
movsb
aam
adc
div
mov
xchg
sub
mov
cs
iret
data16
dec
jecxz
pusha
in
test
mov
mov
lds
cmpsb
cmp
mov
les
stos
data16
fisttpl
sbb
loopne
xchg
adc
cmp
mov
cmp
mov
fidivs
xlat
pop
icebp
or
xchg
jl
js
pop
mov
inc
fpatan
dec
push
jns
test
lods
fdivrl
jb
je
repnz
mov
in
es
outsb
test
loope
mov
imul
inc
xlat
jl
mov
jo
outsb
add
loope
mov
jbe
or
fildll
out
test
pop
out
jae
cwtl
das
fildll
loop
ja
jbe
jae
mov
fildll
add
jae
and
fildll
in
xorl
addr16
pop
loop
out
test
add
add
repz
sub
orb
daa
mov
iret
add
addr16
inc
frstor
pop
out
test
mov
daa
out
cmpsb
cmp
ds
in
sbb
loop,pt
insb
mov
pushf
call
or
push
mov
out
cmpsb
cmp
push
push
jge
aas
ret
ja
repnz
fwait
xor
and
cmp
ret
xchg
repnz
sti
xchg
sub
sti
xchg
push
cli
xchg
cs
xchg
repnz
adc
push
stc
jmp
sub
mov
test
loop
lahf
adc
jnp
incb
inc
fdivl
loop
mov
rcrb
sti
cmp
shrb
jmp
push
out
or
pop
cmp
scas
inc
push
lock
and
xor
icebp
repnz
loop
clc
imul
lds
idiv
shrl
and
rcrb
xchg
sub
iret
sub
fsubrl
add
addr16
loope
fsts
sub
pop
divb
lret
cli
loope
ljmp
cmp
ss
cli
loope
lds
mov
js
lret
cli
loop
ficoml
cs
bound
test
cmp
out
xchg
lock
rcrb
add
and
or
and
repz
add
mov
sub
sti
jl
sub
or
sub
divb
daa
out
outsb
pop
add
inc
inc
out
inc
push
push
mov
ret
movsb
cmp
ficompl
or
dec
loopne
sbb
xor
pop
ret
repnz
cmp
in
clc
and
loop
sti
repnz
and
cmp
shrb
mov
fwait
loop
pop
out
sub
inc
frstor
sbbb
mov
jae
xor
out
ficoms
mov
add
js
mov
or
or
jle
dec
out
sub
aam
ret
xchg
inc
push
in
addl
hlt
mov
jno
jnp
test
push
jmp
mov
andl
jbe
lcall
jnp
data16
dec
fidivl
lcall
jmp
sub
scas
pop
mov
lcall
or
mov
adc
mov
fidivl
mov
mov
sub
mov
flds
popf
push
pop
mov
cltd
pop
scas
adcb
jl
aaa
scas
add
roll
push
aas
push
xchg
popa
clc
push
cmpsl
fnsave
test
sarb
cmp
push
fwait
push
out
leave
into
test
call
xor
test
push
out
inc
add
pop
mov
in
enter
cmp
mov
push
in
pop
mov
dec
call
aaa
add
pop
mov
ss
xor
bound
enter
hlt
iret
fdivl
sub
jb
and
xor
ret
pop
repz
clc
das
std
xchg
pop
daa
stc
push
les
test
jbe
pop
cmpsl
sub
daa
lods
aaa
into
cmc
je
lea
orb
outsb
into
gs
push
jae
aas
xchg
ja
out
inc
push
jno
jmp
jl
lahf
mov
repnz
imul
cltd
pop
sbb
mov
ret
pop
adcb
sbb
dec
jns
leave
stos
dec
filds
jne
xor
push
in
xor
pop
repz
pop
inc
fmull
jp
cmc
insb
shrl
pop
cmc
mov
mov
lock
clc
xchg
adc
addl
and
cmp
pusha
push
jmp
xor
loopne
out
push
fnsave
call
inc
stos
in
add
bound
push
das
mov
fcomi
orl
test
pop
enter
cmp
and
inc
fidivrs
adc
jl
push
dec
loop
repnz
and
adc
jne
cltd
xor
xchg
mov
les
inc
mov
mov
adc
aas
fbstp
xchg
sub
adcl
mov
xor
stos
push
fsubrl
in
pop
std
push
imul
push
icebp
or
movsb
mov
push
notb
sub
movsl
test
int
inc
sti
pushf
test
and
push
out
sbb
xchg
test
into
rcrl
sbbl
sbb
dec
fistps
or
data16
lcall
xor
xorb
jne
sti
xchg
mov
nop
daa
ljmp
sub
cmp
pop
enter
les
ja
daa
pop
push
cwtl
das
test
mov
pop
sbb
dec
shl
repz
push
adc
adc
or
lcall
ret
scas
in
or
rcll
testl
lods
sbb
jnp
ror
mov
cmpsb
xchg
sbb
sahf
test
aaa
push
adc
stc
loop
adc
ficomps
rolb
sti
lods
jns
push
jg
jno
dec
hlt
sbb
addr16
leave
cld
test
pop
xor
fs
xchg
xchg
pop
hlt
enter
test
xchg
push
std
pop
sub
mov
aad
sti
sbb
adc
inc
ljmp
dec
push
add
inc
arpl
imulb
mov
mov
mov
add
xlat
cmp
hlt
imul
ror
dec
mov
scas
hlt
nop
sub
stos
xchg
dec
fisubrl
movsb
test
pop
ror
js
cmp
aaa
sub
jb
or
out
add
scas
lds
cmp
sub
jg
jne
decl
push
scas
mov
xchg
ficompl
scas
and
pop
adc
int3
xor
loop
xchg
jl
push
aas
mov
andl
ja
sbb
mov
sahf
mov
in
inc
push
inc
dec
fnstsw
pop
out
push
sub
jge
push
movsb
outsb
xchg
push
cmp
jns
xchg
stc
or
pop
cmpb
xchg
push
cltd
cmp
lret
lock
push
stos
sahf
arpl
dec
insb
jb
out
lcall
add
jp
mov
inc
cmp
enter
insb
enter
pop
jo
dec
mov
dec
mov
pcmpgtd
mov
lcall
mov
adc
or
subb
rcll
subl
int3
sub
xchg
sbb
push
hlt
inc
aaa
pop
lret
mov
inc
xchg
in
pusha
aaa
push
or
mov
jmp
dec
fwait
fbstp
fildl
pushw
cmp
shlb
lds
add
mov
mov
pop
sbb
loop
negb
icebp
repnz
mov
xlat
jns
js
sub
insb
xchg
mov
adc
aam
jmp
lret
out
pop
stos
imul
enter
adc
insb
daa
xor
stos
xchg
add
push
pop
adc
inc
sahf
or
push
xor
pop
out
push
mov
mov
push
sub
daa
in
loope
in
mov
ljmp
leave
js
cmpsl
push
cmp
fistl
push
dec
inc
pop
inc
mov
or
nop
ret
xchg
mov
enter
mov
into
fcoml
in
dec
std
call
xchg
pop
ja
sub
movsl
vcvtdq2ps
jge
push
dec
loopne
jb
sub
leave
ret
inc
sub
xchg
fsubrs
test
push
in
repnz
adc
adc
mov
mov
fidivl
jne
pop
daa
xchg
fdivs
inc
movsb
cmp
imul
mov
jo
pop
push
xchg
sub
jle
and
sub
lods
inc
cld
inc
icebp
mov
jbe
test
mov
cwtl
dec
aas
mov
ljmp
add
jnp
out
lods
decb
or
imul
sub
mov
dec
outsl
and
imul
shlb
add
out
xchg
push
mov
cltd
or
ret
sub
sub
loopne
inc
dec
loopne
sub
decb
add
sbb
inc
xchg
sub
cmp
mov
loope
into
lock
mul
call
pop
xchg
movsl
adc
adc
test
fucomp
dec
loope
testb
mov
decl
stos
jbe
sub
and
xchg
sub
sahf
test
ljmp
pop
push
lods
in
cmpsb
and
leave
ret
loopne
add
loop
and
mov
rorl
je
cmc
test
jp
pop
sarl
cwtl
das
or
sub
pop
mov
inc
xchg
movsb
loope
xchg
mov
lock
adc
jg
das
push
movsl
mov
aad
ret
mov
and
lds
inc
fstps
xchg
js
sti
xor
negl
xchg
cs
jle
data16
rcrl
pushf
xor
neg
jbe
btc
jae
orb
jo
or
les
daa
mov
fdivr
inc
fdivrl
repnz
sub
ljmp
jno
mov
mov
in
adc
pop
adc
add
shlb
jbe
and
lods
cmpsl
fdivl
mov
loop
sub
in
or
jnp
or
xchg
cltd
scas
scas
ja
gs
and
das
ds
dec
mov
hlt
cmp
lret
bound
xlat
jmp
xor
mov
sahf
push
mov
sahf
andl
ljmp
mov
sbb
cmpsb
xchg
sub
int
fisubrl
inc
popa
clc
jge
fnsave
jg
jmp
add
mov
pop
mov
into
repnz
push
data16
cmpb
insl
call
lods
cmc
mov
int3
push
dec
lods
inc
sarl
ljmp
jno
ret
stc
cli
xchg
jge
es
sbb
cmpsb
push
lret
bound
out
fs
in
das
jmp
sbb
test
scas
fistps
sub
int3
jne
inc
icebp
sbb
pop
fbstp
outsl
jb
jl
std
xchg
cltd
xchg
nop
daa
lds
scas
inc
fldl
int3
arpl
mov
ljmp
mov
lahf
adc
outsl
push
mov
es
insb
pop
inc
fstpt
mov
stc
in
or
stc
nop
mov
ss
cmpsl
pop
scas
mov
push
xchg
stos
inc
fsubrl
mov
arpl
mov
out
xchg
pop
jne
movsb
ja
mov
lds
dec
loopne
dec
fnstenv
push
push
mov
outsl
xchg
and
cmp
fld
pop
hlt
push
loope
mov
or
xchg
into
lea
mov
lods
ret
inc
cmp
lahf
adc
js
mov
lock
call
jg
sbb
sub
or
mov
sub
loopne
inc
xchg
sub
ret
daa
pusha
cwtl
das
loopne
into
gs
pop
mov
lret
xchg
or
mov
imul
mov
ja
fisubrs
leave
gs
pop
aas
dec
jecxz
das
sbbl
idivb
mov
aam
xor
mov
aas
fs
fnsave
pop
gs
in
xor
sbb
rcrl
adcb
out
in
sub
lahf
movsb
inc
adcb
les
xor
add
mov
jnp
fidivl
xchg
push
lods
data16
xchg
xor
inc
mov
push
jmp
jb
adcb
fwait
push
jmp
sbb
pop
pop
test
mov
das
les
push
xor
popa
dec
jge
scas
std
fs
into
iret
mov
popf
xor
push
in
dec
pop
and
outsl
sbbl
test
fldln2
xchg
jmp
mov
dec
divl
or
shrl
sahf
nop
daa
lds
scas
inc
cld
mov
int
inc
push
cmp
add
sbbb
hlt
jbe
mov
jp
daa
mov
aas
sub
xchg
sub
arpl
and
dec
sbbl
hlt
movsl
lahf
ss
sarl
mov
cmp
jb
aaa
into
pusha
ret
xrelease
or
sbbl
imul
fists
inc
outsl
jge
es
jb
push
fwait
xor
mov
scas
xchg
pop
fsubrs
mov
testb
hlt
adc
pop
push
sbbl
movsl
adc
and
dec
outsb
add
adc
add
sbb
push
mov
xor
pop
lods
cmpsl
cmp
add
jge
movsl
dec
loope
sbb
pushf
cmp
jle
arpl
cwtl
lcall
mov
xchg
sub
lahf
and
push
pop
dec
mov
jne
lret
es
xchg
rclb
cli
xchg
cmp
mov
stos
sbb
jo
ss
lcall
mov
out
mov
outsb
add
and
dec
scas
inc
xchg
mov
push
cmp
int3
arpl
push
push
jmp
jb
stc
nop
or
sub
lods
out
mov
ja
xor
adcb
out
cmp
jp
out
add
pusha
cmp
pop
arpl
les
mov
dec
loop
pop
out
xchg
add
adc
test
das
insl
and
and
inc
fmuls
loope
shlb
cmpsb
clc
lock
iret
jge
sbb
push
movsl
xor
ret
push
xchg
loope
sub
outsb
pop
call
cmc
mov
mov
lds
inc
fmuls
jne
jp
and
pop
sbb
mov
enter
lods
fwait
xor
mov
mov
in
add
outsl
cmp
jnp
adc
ds
xor
xchg
adc
div
stos
inc
mov
xlat
leave
pusha
ds
stc
nop
imul
pop
scas
imul
int3
inc
test
inc
pop
push
ljmp
sbbl
adc
mov
adc
xchg
push
clc
popl
dec
jecxz
sub
push
sbb
mov
cmpsl
mov
jmp
cli
mov
pop
sbb
ss
xor
pop
cmc
test
shlb
jg
pop
jo
pop
mov
cwtl
insl
and
dec
hlt
mov
dec
pop
bnd
adc
push
adc
enter
xor
xchg
mov
lret
adc
jecxz
sub
sbb
dec
dec
leave
lods
inc
cmp
cwtd
pusha
fdivl
mov
test
push
cli
xchg
das
lock
incl
shlb
aaa
into
sub
ficomps
mov
cld
sbb
testb
popa
lock
dec
xchg
mov
jbe
fnsave
xchg
fsin
sti
xchg
and
sbb
lods
dec
sbb
push
aaa
into
nop
nop
dec
loopne
mov
neg
call
jae
sub
xchg
sub
lcall
pop
mov
mov
xchg
sub
mov
mov
and
scas
shl
hlt
mov
divb
es
mov
shlb
test
cmc
test
loopne
iret
mov
icebp
mov
notb
scas
test
inc
pop
or
pushf
daa
adc
add
mov
arpl
jge
test
fwait
cld
xchg
iret
aad
sbb
icebp
and
pop
inc
inc
fnstenv
ret
pop
lods
xchg
pop
cmc
enter
add
jl
push
push
insb
sbb
add
ret
sahf
inc
rorl
rcl
sbb
add
mov
xor
sbb
in
out
sarb
fldt
mov
xorb
repz
aaa
pop
lods
mov
or
dec
xchg
add
rolb
dec
movsb
mov
add
mov
fcmovbe
pop
insb
in
dec
repz
loop
dec
mov
inc
ja
sub
jmp
mov
test
inc
mov
jae
movsb
pop
inc
jp
xor
xchg
inc
jno
sub
xchg
aad
hlt
mov
aad
cmp
stos
push
daa
push
movl
adc
ss
test
sbb
push
cld
xchg
and
push
sub
mov
iret
push
hlt
mov
xor
cltd
mov
cltd
mov
jb
add
jecxz
xchg
and
bnd
or
jge
mov
addr16
out
les
aaa
dec
out
inc
aas
insb
jns
insb
cli
or
iret
in
jo
cld
add
icebp
mov
cmc
push
lds
das
cltd
sub
and
sub
fisubs
in
pusha
incl
or
lods
mov
adc
xchg
mov
std
mov
enter
fcompl
test
push
adc
xor
adc
fnstcw
nop
ljmp
and
scas
es
scas
jns
imul
push
xor
pop
scas
lea
add
sbb
out
out
cmovs
ja
in
cmp
sbb
mov
mov
mov
adc
sbb
stos
inc
andl
mov
sbb
sbb
test
adc
jp
jnp
mov
stc
into
add
push
dec
clc
clc
lock
push
andl
fcmovbe
mov
xchg
clc
sbb
jmp
outsl
sbb
es
rorl
xor
add
mov
cmpsl
imul
sti
or
sub
push
mov
push
pop
xchg
or
mov
sbb
mov
push
mov
lea
pop
fcompl
daa
in
mov
aas
push
stc
pop
jae
icebp
scas
push
int3
xor
jl
stc
test
pop
pop
and
mov
imul
rcrb
and
pop
and
and
add
call
scas
push
scas
xor
pop
loope
cmc
push
mov
lods
adc
mov
loop
pusha
push
cmpsl
cs
jnp
cltd
mov
pop
sbb
scas
mov
add
mov
jbe
inc
cmp
imul
pop
jg
mov
shl
idivb
inc
loope
xchg
pop
lods
lret
mov
pop
test
lret
jecxz
shrl
pop
push
int
stos
ffreep
add
fstpl
mov
jge
sbb
in
cmp
movsl
insb
fcompl
jecxz
adc
fcmovnbe
cmp
outsl
mov
push
jnp
mov
js
cltd
aam
mov
cmpsl
daa
aam
and
adc
in
mov
push
push
pusha
mov
int3
cmp
pop
sbb
test
in
add
loope
stc
inc
out
push
mov
sahf
sbb
icebp
daa
mov
mov
loopne
lcall
mov
cs
daa
jnp
jo
out
mov
sbb
add
aad
cmc
bnd
and
enter
lea
inc
fiaddl
xor
out
and
xlat
push
mov
aaa
rcrb
mov
or
dec
ss
xchg
sbb
outsl
adc
xchg
push
jnp
fcomip
out
nop
dec
scas
sub
dec
stos
and
or
xor
xor
and
mov
cmpsb
and
mov
xor
xor
xchg
nop
xchg
or
imul
call
mov
push
movsb
repnz
inc
cmp
inc
les
cmp
or
lds
shrb
and
mov
inc
cmpb
stos
sbb
sub
sbb
or
call
scas
idivb
cmp
sub
push
ss
mov
sbb
daa
cmpsb
test
test
add
in
xchg
jge
jmp
out
fwait
iret
mov
or
dec
cmpsl
in
lds
in
xchg
rcll
lcall
adc
out
popf
add
lods
dec
jne
mov
in
xlat
jp
fstps
movsl
mov
repz
mov
or
lods
mov
xor
push
push
lcall
rorl
insb
imul
lods
ja
mov
popf
pop
das
pop
insl
add
jp
popa
popa
push
addb
push
fsubr
xor
mul
repz
out
outsb
sub
in
adc
stos
aaa
leave
aam
nop
mov
and
lods
jo
inc
mov
adc
inc
fnstsw
sti
out
iret
rcr
in
nop
adc
out
mov
ds
mov
leavew
ror
dec
xchg
jp
cmp
adc
fldz
inc
mov
pop
popa
push
test
dec
fsubrs
leave
sahf
push
and
dec
mov
je
adc
ds
cmpsb
pop
pop
movsb
cmp
rorb
push
addr16
push
or
push
test
bound
inc
jo
add
cmp
cmp
and
sbb
pcmpeqw
pop
or
in
ss
pusha
ret
shrl
xor
sbb
mov
daa
sub
fsubs
inc
and
xchg
repz
or
xchg
push
push
fdivrp
pop
in
mov
outsb
and
pop
loope
adc
das
jle
or
dec
rcll
cmpsb
sbb
out
mov
mov
sbb
outsb
ja
pop
fisttpll
push
cmp
notl
cli
out
lea
sub
cmp
insb
int
add
pusha
or
out
imul
xchg
push
addr16
pop
cltd
imul
and
xor
and
mov
jecxz
hlt
stos
rcl
cltd
je
xor
mov
imul
mov
outsl
or
xlat
inc
push
mov
mov
stc
lcall
dec
mov
mov
push
icebp
mov
cmp
add
mov
sti
jne
ficomps
jge
mov
cmp
and
push
pushl
sbb
loope
push
nop
test
add
jns
xchg
lea
shlb
jo
push
sbb
jo
or
and
mov
and
mov
push
push
mov
hlt
popa
adc
push
stc
inc
jae
jge
data16
sbb
pop
pop
ficoms
lret
mov
jmp
imulb
mov
subb
gs
adc
test
jg
push
xor
cltd
test
in
xchg
mov
jle
subl
dec
xor
sub
imul
xchg
shll
and
in
or
add
ret
pop
jns
or
subl
adc
jge
cltd
pop
jno
ret
insb
enter
mov
jb
insb
add
pop
enter
adc
inc
cmp
repnz
mov
mov
addr16
lahf
or
sahf
dec
push
or
add
bound
out
sub
add
fsub
cli
and
imul
in
adc
hlt
lea
stos
inc
clc
repnz
pop
das
ret
dec
loop
xor
push
push
pop
loop
clc
mov
dec
sahf
fldcw
sbb
xor
aad
nop
ds
daa
xchg
clc
shlb
pop
ficomps
cli
test
insb
or
inc
hlt
std
lret
xchg
inc
mov
shll
pop
mov
pop
outsb
sub
sarl
inc
ljmp
pop
xchg
pop
add
addb
fdivrl
push
add
loop
or
add
xchg
mov
mov
lods
dec
or
loopne
xor
pop
fiaddl
lahf
cmp
sub
movsl
dec
jl
lcall
jmp
into
jle
inc
dec
movsb
scas
and
mov
jl
rorb
jno
mov
jo
sbb
jbe
inc
mov
cmp
pop
or
jl
iret
jl
outsl
mov
adc
push
rolb
lret
adc
mov
sbb
add
or
dec
movsb
sar
mov
aad
orb
in
stos
push
sbb
sbb
sub
stc
mov
loope
mov
arpl
push
outsb
je
dec
fcmovne
cmp
cmp
out
cli
inc
nop
mov
insl
movsl
sti
sub
ror
sub
jecxz
pushf
lea
orl
insb
fldenv
stos
jmp
leave
aad
push
jbe
aad
xor
pop
andl
dec
cmpsb
repnz
mov
pop
pop
scas
shlb
push
adc
push
fistl
dec
mov
aas
jb
cmp
mov
sbb
push
iret
in
and
cmp
je
and
into
outsb
sahf
pop
cmpb
rcrb
pop
jbe
imul
scas
fistps
repz
loop
dec
test
mov
push
scas
fbld
outsl
pop
push
fstpt
jne
pop
mov
push
mov
popw
adc
sub
scas
rcl
add
rol
add
or
jmp
pop
lea
outsl
dec
add
or
dec
pushf
cmp
adc
fnstsw
aad
push
cmp
shll
rclb
arpl
pushf
pop
push
or
ja
xchg
mov
adc
ss
lahf
fsubr
cmpsb
mov
dec
mov
test
aaa
dec
sub
pop
add
push
sbb
cld
jge
inc
test
dec
xor
mov
xchg
jmp
and
inc
sbb
loopne
ret
sub
xchg
in
gs
lods
dec
adc
jns
pop
fidivrs
jecxz
in
sbb
push
das
fidivrs
and
pop
and
scas
jecxz
dec
jo
inc
pusha
mov
pop
sbb
pop
cmp
mov
or
out
and
mov
and
loopne
in
pop
pop
xor
clc
stos
mov
inc
push
inc
arpl
fldln2
cmp
xchg
mov
ret
mov
lock
scas
sub
addr16
mov
xchg
lds
aam
inc
int
add
pop
sbb
or
ja
ret
rcll
ljmp
push
sahf
int3
daa
or
fistl
xorl
push
adcb
repz
or
push
arpl
pusha
popf
iret
or
popf
rolb
test
jbe
fdivr
mov
xchg
mov
enter
dec
or
mov
js
int
loope
add
pop
pop
mov
iret
push
xchg
dec
push
inc
adc
adc
mov
sbb
push
mov
add
adc
rorl
movsl
pop
sub
jo
push
mov
add
push
test
data16
data16
in
es
and
mov
testb
pop
pop
cmp
cmpl
pop
out
enter
cmp
in
das
xchg
xchg
fs
xchg
fwait
out
fwait
dec
data16
shlb
in
jp
repz
push
pop
addl
out
aad
rorl
xchg
fisubl
inc
lret
adc
cmpsl
ds
icebp
add
dec
cwtl
sub
loopne
add
xor
pop
sbb
stos
jae
push
jb
jle
jns
pop
cmpsb
or
dec
cmpsb
push
divb
popa
push
cmp
inc
inc
cmpsb
add
push
adc
or
xchg
ficoml
jbe
adc
mov
scas
ror
mov
cli
repnz
add
cld
xchg
pop
pop
inc
out
mov
jge
pop
mov
scas
push
xchg
mov
jp
xchg
or
repnz
xor
push
mov
scas
mov
es
fs
pop
insl
jno
aam
or
adc
mov
lahf
lea
xchg
dec
lret
mov
pop
in
rorb
movsl
cltd
dec
jne
sub
outsl
jo
mov
cld
insb
sbb
mov
nop/reserved
test
pop
jmp
aam
je
inc
pop
sbb
push
or
and
in
movsb
mov
jp
cs
adc
dec
dec
lock
mov
add
std
sub
movsb
xchg
repz
mov
cmp
imul
push
pusha
in
ljmp
mov
pop
xchg
xchg
fs
pushf
popa
lea
xchg
sbb
ret
inc
rcrl
pop
stos
add
sub
addr16
mov
stos
std
int3
decb
dec
mov
cmovle
mov
cmc
aaa
idivl
inc
pop
stos
push
mov
sbb
dec
das
jmp
add
xchg
cmpsb
push
mov
lods
cmpsb
xchg
test
sbb
jne
sbb
sahf
or
dec
inc
sub
lods
movntps
ret
sub
xchg
or
and
cmp
sub
mov
push
push
shlb
gs
pop
and
inc
mov
xchg
add
pop
jbe
repz
push
js
mov
jp
fcmovnb
xchg
shlb
lock
jmp
xchg
nop
adc
push
mov
mov
push
in
or
pusha
mov
jge
out
xor
sbb
mov
mov
sub
sbb
out
fs
xor
rcll
mov
or
pusha
inc
inc
jle
push
push
lret
xchg
addr16
sbb
inc
leave
push
shl
sarl
insl
sbb
shll
or
std
out
das
loop
xchg
out
sti
mov
cmpsb
stc
jmp
ret
daa
arpl
push
and
les
cltd
add
movl
jmp
ret
fnsave
ja
mov
jle
int
add
test
fsub
jl
mov
xchg
mov
in
scas
inc
add
int
cmpsb
jmp
ja
inc
scas
jl
adc
jl
fnstcw
adc
mov
test
cmc
scas
call
das
ljmp
les
fdivrl
jno
sbb
int3
inc
rcrb
stos
pop
aam
ret
jecxz
add
out
jae
pop
mov
jnp
mov
cmpb
inc
mov
lea
jmp
aam
jb
pop
in
push
adc
mov
sar
repz
je
mov
or
add
mov
and
je
jge
sbb
sbb
in
jo
sbb
je
daa
cmp
add
push
push
cmpsb
mov
jns
xchg
out
jge
dec
mov
stc
sub
sahf
jno
popa
sub
test
and
shr
outsl
adc
mov
insl
addr16
and
sub
and
mov
or
mov
dec
push
insb
push
or
push
pushl
lods
loop
mov
jp
pusha
mov
cmp
mov
inc
inc
xchg
into
inc
nop
jno
lea
loope
cli
and
ljmp
repnz
inc
push
inc
push
adc
jl
les
aas
adc
imul
pop
repnz
fnsave
mov
je
add
add
push
xchg
inc
xchg
xor
sahf
inc
mov
inc
sti
add
repz
sub
ljmp
mov
mov
cs
jecxz
sbb
jmp
sub
jmp
jg
inc
in
data16
fdecstp
adc
push
ljmp
xor
dec
lret
pop
adc
bound
scas
cmp
push
daa
push
xor
test
or
inc
inc
test
sub
push
jecxz
xchg
xchg
xor
mov
add
jae
dec
es
pushf
pop
xlat
mov
xor
pop
cmp
in
test
imul
hlt
lods
or
sbb
cmpsb
in
iret
sarb
hlt
iret
cmp
pop
sahf
inc
and
mov
or
les
and
sbb
orl
inc
push
xlat
push
inc
xlat
popf
clc
aas
dec
out
repz
mov
lret
and
or
xlat
push
adc
sti
mov
mov
fisttps
aad
cmpl
ret
mov
mov
dec
adc
pop
and
mull
lea
cmp
test
cmpsl
mov
stc
int
cld
scas
andl
mov
sub
ja
in
loopne
lret
xchg
jno
jecxz
imul
xchg
sbb
shrb
mov
cmp
ds
int3
pop
dec
imul
push
rcl
jecxz
dec
out
test
mov
gs
xchg
shlb
cld
bound
jnp
stos
mov
or
and
and
shrl
pop
xchg
add
aam
add
fwait
or
lcall
push
inc
int
adc
push
jo
aad
jp
hlt
xchg
cmpsl
add
cli
cmp
sub
mov
or
sbb
rcl
ja
fcomip
shll
loope
push
jmp
and
inc
mov
xor
movsl
movsb
test
jecxz
insb
ficompl
or
inc
gs
cmpsb
and
aad
xchg
sub
xchg
stos
adc
adc
divl
push
jp
xor
insb
repnz
mov
lahf
jne
fs
sti
adc
add
lods
ss
push
mov
lcall
xchg
imul
cmpsl
cmp
mov
mov
xchg
insl
call
adc
inc
mov
test
inc
lcall
pop
xchg
jp
sub
ja
andl
pusha
xchg
mov
hlt
lret
cmp
pop
pop
dec
cmp
js
push
sub
dec
cmc
sub
sbb
insl
dec
das
add
inc
mov
xchg
and
int
xchg
cld
and
jno
lret
mov
xchg
out
sub
pop
lahf
sbb
sbb
jg
push
incb
sti
hlt
jg
push
rcl
fldl
cmpsl
mov
inc
into
sbb
push
cwtl
leave
jl
mov
sbb
push
jg
shl
cs
rcrl
cltd
sbb
cmc
and
adc
mov
ljmp
dec
jecxz
clc
sbb
cmp
mov
push
test
pop
stos
inc
mov
fsubrs
or
mov
enter
xor
pusha
scas
cld
inc
out
ret
fcomps
pop
sahf
in
pop
scas
aam
xlat
or
xor
subl
divl
jl
loopne
jo
int
dec
imul
enter
pushf
or
call
and
add
pop
fadd
ja
or
lods
xchg
cltd
in
mov
cmp
and
and
test
test
jno
iret
pop
ds
sahf
pop
push
mov
mov
push
xchg
or
mov
ss
movsl
imul
jecxz
or
pop
test
iret
xchg
mov
pop
mov
add
or
push
out
jo
movl
je
pop
incb
mov
mov
xchg
push
or
xor
outsb
mov
aam
inc
gs
or
xchg
sti
lea
popa
cmp
pop
fldcw
enter
lcall
jle
aam
sahf
mov
cmp
test
xchg
les
add
fs
jne
sti
push
lret
cs
xchg
and
sti
jmp
and
mov
and
std
fstpl
pop
nop
dec
jecxz
loop
mov
xor
je
inc
cmp
and
jge
xchg
lea
fimuls
push
lcall
inc
mov
add
or
jg
dec
cmp
dec
outsl
fnstsw
dec
mov
xor
sbb
xor
pop
shl
outsb
sub
mov
test
out
pop
push
in
xchg
pushl
mov
mov
ljmp
and
pop
jb
aaa
pop
push
pop
cld
xchg
and
add
cmp
ret
clc
lcall
mov
mov
dec
add
mov
sbb
imul
and
mov
iret
sbbl
fisubl
sub
loope
jmp
xor
mov
jae
ds
mov
int3
movb
xor
jg
inc
adc
and
dec
push
sbb
js
mov
pusha
and
cs
loopne
xchg
jmp
xorl
mov
xor
data16
scas
add
or
nop
outsb
cmpsb
imul
ror
jbe
leave
pop
inc
stc
outsl
pop
push
mov
aaa
or
mov
aas
mov
shll
sbb
mov
ljmp
gs
push
std
in
push
out
and
or
dec
adc
sub
inc
or
mov
mov
lcall
mov
add
push
or
in
push
pop
push
jnp
dec
fcompl
pop
enter
or
dec
nop
cld
sub
pop
push
push
xchg
out
sub
call
add
add
in
mov
mov
lock
lahf
sbb
mov
lods
mov
pop
sub
mov
iret
push
clc
or
out
lahf
xor
push
imul
add
and
mov
notb
xor
add
cmpsb
mov
adc
sarb
iret
push
test
mov
adc
fisttpl
cmp
or
pop
movsb
lock
ja
mov
cmp
fs
and
xlat
mov
inc
fdivrs
mov
dec
pusha
fadd
imul
nop
pop
mov
xchg
stc
repz
mov
sub
test
ja
loopne
jl
aam
xchg
enter
pop
dec
sub
sbb
xlat
jmp
bound
ja
aam
mov
sub
cmp
xor
inc
hlt
or
pop
mov
cmp
jle
mov
es
popa
je
mov
sub
sbb
arpl
lahf
ja
and
arpl
sub
mov
in
nop
call
aaa
or
jmp
test
frstor
jle
mov
lret
mov
inc
lds
add
push
mov
lds
push
mov
mov
out
add
aas
mov
repz
lahf
pop
nop
inc
dec
xor
scas
into
ds
movsb
into
sbb
xor
adc
ret
sbb
sbb
fisttpll
imul
mov
and
sub
add
sbb
test
add
subl
loop
mov
xor
jle
cmp
cmp
and
xor
jecxz
cld
jno
imul
sahf
shll
inc
mov
mov
aas
lods
mov
pop
lret
hlt
cmpsb
aad
stc
pusha
mov
push
or
nop
bound
ljmp
popf
sub
pushf
loopne
mov
mov
movsw
add
mov
lret
fidivs
je
div
addr16
testl
adc
aaa
rcrl
scas
test
add
mov
imul
jmp
loope
stos
pushf
dec
or
mov
cmp
xchg
adc
or
and
push
shlb
addr16
je
xchg
mov
pop
stos
cmp
lock
je
xchg
popf
cmp
test
stos
push
pop
jns
xchg
mov
mov
stos
lods
lea
lea
lods
pop
jo
pop
lds
test
pop
nop
sarl
inc
rcl
cli
cmp
or
ret
adcb
test
sub
pop
or
lcall
cmpsl
andl
int3
sarl
push
xchg
lret
in
sub
lea
jecxz
enter
cmp
push
les
jl
xchg
outsb
lods
and
in
xlat
mov
pop
test
data16
mov
xor
leave
outsl
clc
jno
xchg
jno
lods
mov
bndstx
stc
ret
dec
aas
into
and
pop
rclb
dec
xchg
add
bound
dec
int
sbb
cmp
fiadds
ret
push
mov
cmp
xor
data16
lods
idivl
dec
mov
dec
add
clc
out
outsb
or
fnstsw
or
xor
inc
lret
test
mov
das
jb
lret
cld
dec
insb
ret
or
sub
stc
mov
test
lahf
lcall
xchg
std
fisttpll
iret
cli
pop
lock
lret
scas
sti
aad
mov
in
mov
cs
and
mov
lret
and
sub
sti
pop
mov
xchg
ljmp
adc
xchg
shrl
rcr
add
and
clc
jbe
pop
dec
or
jle
cmp
adc
cmpsl
and
xor
loopne
inc
in
popfw
in
in
movsl
pop
popa
push
jg
mov
pop
push
inc
push
movsb
jae
out
gs
cltd
test
sub
add
push
cmc
sbb
out
adc
es
jnp
aas
sub
sub
icebp
push
adc
push
cmpl
jnp
test
push
add
sbb
add
mov
inc
mov
ret
or
pop
sbb
pop
xor
sahf
fcmovnu
daa
popa
in
popa
in
adcl
ret
mov
xchg
dec
popf
jns
cmp
sub
push
jp
mov
daa
pop
xchg
test
adc
dec
addr16
lock
jb
arpl
xchg
pop
das
test
pop
ds
cs
icebp
loop
dec
aam
jo
mov
test
int
inc
sub
fists
sub
mov
jbe
mov
xchg
and
adc
jg
movsb
xor
outsb
xor
fcomps
xchg
lret
and
jnp
or
imul
jno
sub
lret
movsb
or
mov
pop
cltd
pop
inc
mov
mov
lahf
js
sbb
cli
sub
lock
sarb
adc
mov
mov
mov
lock
cmc
lods
movsb
jo
or
movsb
adc
adc
xchg
xor
cmpsb
nop
push
shl
insb
xchg
mov
adc
jge
rorl
xor
ja
push
mov
sbb
in
pop
jg
sub
and
jae
in
cli
hlt
pop
jg
or
lds
sbb
lds
in
das
out
sbb
mov
daa
pop
or
sub
sbb
repz
adc
jae
imul
lret
push
pop
nop
dec
dec
cmp
lds
jae
leave
sub
lret
xor
adc
call
int
mov
ss
xor
stos
js
fcompl
loop
movsl
sub
mov
test
mov
xor
mov
shl
out
jbe
dec
jnp
fcomip
pushf
xchg
test
ss
daa
lret
jae
out
repz
sahf
outsb
lret
xor
pop
adc
hlt
scas
test
orl
dec
add
inc
pop
mov
jp
cmp
cltd
cmp
hlt
inc
dec
add
out
push
popa
stos
pop
jb
adc
push
or
xor
add
xchg
loopne
inc
mov
mov
mov
pop
lcall
daa
cmp
mov
stos
cmp
test
push
dec
or
loopne
aad
aam
jno
adc
sub
dec
mov
aam
in
dec
icebp
push
mov
lahf
dec
leave
sbb
jo
push
and
gs
mov
movsb
pop
stos
mov
or
mov
test
lret
inc
arpl
sub
sahf
shrl
lock
imul
push
iret
mov
ret
push
adc
and
aas
rcr
insb
sbb
sbb
adc
sub
das
dec
mov
lahf
testl
jle
movsb
add
js
sub
cmp
enter
aas
loope
jne
mov
mov
xorl
repz
test
ret
cmpsb
cmp
cmp
gs
push
lret
dec
mov
ret
les
sahf
or
push
sarl
out
fwait
mov
cmp
popa
xor
mov
mov
inc
mov
jmp
xchg
fcomps
sbb
pop
lret
mov
push
sbb
insl
pushf
mov
vhsubpd
data16
fwait
jp
jb
cmp
mov
sub
jb
cs
movsb
sbb
int
fstl
push
xchg
push
js
fiadds
pop
jbe
dec
sahf
adc
push
mov
addl
and
movsb
jo
fisubs
jbe
ret
jge
sbb
test
dec
or
mull
cmp
test
fcoms
mov
inc
jns
leave
jecxz
add
xchg
fwait
xorb
scas
mov
cmp
or
mov
xchg
cmp
repnz
mov
add
adc
movsl
xor
andl
testl
sub
popf
sub
pop
mov
arpl
lods
adc
sbb
fs
pop
xchg
and
jbe
jae
push
movsl
or
xchg
cmp
fdivl
pop
push
mov
sbb
dec
scas
cmp
loopne
adc
xor
jbe
test
push
in
inc
cmpsb
fsubs
push
xchg
stc
lods
inc
sbb
cmp
outsb
bound
rcrb
jmp
jne
loopne
sahf
adc
and
mov
test
push
cmp
xchg
pusha
testl
sub
pop
sti
jns
sub
dec
fwait
xor
mov
shlb
cmc
fidivl
jbe
jle
dec
std
xchg
jp
std
xchg
sti
fwait
and
dec
in
cmp
push
outsl
cmp
stc
jo
data16
repnz
jns
ret
adc
inc
in
cmp
movsb
cmp
mov
fdivl
or
cli
xchg
punpcklwd
xchg
xchg
xor
scas
popa
mov
mov
xorb
mov
cmp
aaa
aam
jmp
pop
pop
icebp
mov
jb
pop
stos
js
fnstsw
daa
stos
xchg
sub
call
dec
andl
gs
movsb
shrl
jae
subl
xchg
sub
mov
imul
aad
xor
sahf
idivb
shrb
shrb
mov
pusha
testl
dec
lahf
hlt
outsl
push
sarl
add
inc
cltd
and
mov
ret
cld
rcrl
lods
inc
inc
mov
pop
mov
sub
push
mov
dec
in
das
rcrl
and
movsb
pop
xchg
sub
mov
lcall
jl
cltd
movsl
dec
loope
jb
cmp
call
inc
ficompl
mov
fisubs
or
mov
fisttpll
mov
xchg
daa
loope
popa
mov
or
addb
cmp
popa
clc
push
pop
shrl
daa
in
popa
cmpsb
xchg
sub
andb
mov
fdivl
sub
pusha
test
cmp
adcl
clc
push
dec
ljmp
lcall
mov
ficomps
pop
aas
push
lods
push
mov
shll
rcll
lods
or
mov
mov
sbb
movsl
inc
ja
in
mov
loop
popf
shll
or
shrb
or
xor
data16
fidivs
rorb
mov
sub
stos
inc
xor
mov
mov
ret
xchg
cs
scas
xchg
fstps
out
dec
cli
jbe
and
xchg
xchg
inc
or
out
lahf
repnz
cvtdq2ps
cmp
cmpsl
ds
and
outsb
movsb
daa
mov
mov
fcmovnu
jno
dec
ret
pop
je
dec
out
xchg
stos
inc
iret
andb
sub
aas
add
es
sbbl
cmp
fidivs
dec
mov
js
addr16
pusha
cltd
cmpsb
cmp
mov
fldl
jno
sub
push
fwait
add
lods
in
cmc
push
into
fidivl
aas
pop
imulb
fs
inc
mov
mov
popf
shrl
ret
xor
call
or
sahf
mov
or
or
cltd
xor
cmc
mov
inc
cmpsb
cmp
cld
mov
jmp
inc
sti
out
and
cmp
xchg
inc
aad
xorl
jno
aaa
stc
adc
sbb
mov
std
xchg
std
inc
fldenv
inc
sbb
insb
mov
out
mov
fcmovu
je
inc
add
pop
sahf
jns
leave
jge
mov
ljmp
add
mov
jo
in
test
inc
fxch
jl
cmp
adc
in
test
xor
out
dec
mov
sarb
add
in
imul
inc
jle
sbb
lret
cmc
mov
inc
ficoml
lahf
xor
mov
mov
add
fsts
enter
add
jg
test
lahf
clc
sbb
ljmp
lcall
lea
lods
fmuls
cltd
lcall
int3
jecxz
pop
out
mov
ret
fbstp
pop
je
mov
mov
dec
test
pop
cmc
xchg
repz
xor
sbbl
jne
pop
mov
xchg
sbb
rclb
pop
mov
add
jmp
or
xor
fidivs
out
jl
sbb
sbbl
clc
pop
cmc
and
jno
jg
inc
ficompl
mov
or
fs
jno
daa
xchg
lcall
sub
sbb
add
daa
xchg
inc
xchg
sub
mov
mov
shll
lea
shll
lods
inc
or
or
pop
loop
or
stos
cmp
arpl
pop
scas
std
xchg
xchg
sub
push
ds
call
je
popf
inc
jle
ja
xchg
sub
rorl
sub
pop
ret
pop
mov
fwait
subb
or
sub
adc
or
inc
testb
mov
mov
sub
ss
dec
shrl
dec
fs
jns
jmp
add
in
or
sub
dec
jle
push
in
mov
loopne
add
out
out
test
sbb
mov
fst
imul
arpl
cvttps2pi
sbbb
add
or
stos
mov
int3
jmp
mov
pop
and
push
cmp
jl
jbe
add
mov
cmc
call
stos
inc
inc
inc
cmp
ja
push
xchg
xchg
pop
in
lret
test
jecxz
stc
sbb
adc
cmp
ja
imul
mov
jae
loopne
shrl
or
jmp
push
push
mov
cmpsb
movsb
mov
xor
testb
movsb
sbb
dec
pop
das
mov
pushf
movsl
cmp
pusha
out
clc
dec
fsubs
add
pop
call
xchg
sbb
or
add
roll
lea
jp
add
mov
test
xor
mov
outsl
pop
mov
test
in
aam
adc
inc
inc
out
dec
inc
out
xchg
outsl
clc
int
outsl
mul
jecxz
or
adc
sbb
mov
roll
xchg
icebp
scas
cmp
aas
adc
mov
iret
into
pop
repnz
add
fbld
mov
ja
jge
pop
lahf
mov
test
scas
rcrl
pop
cltd
sub
rcrl
pop
push
xchg
jle
iret
outsl
into
mov
inc
cmc
and
in
mov
pop
je
je
sbb
leave
aam
mov
icebp
fstpl
or
insl
jg
adc
scas
nop
and
iret
hlt
test
push
ret
jo
ds
icebp
orl
fbstp
negb
loopne
push
mov
xor
stos
mov
jmp
push
loope
cmp
xor
cmp
rsm
mov
int
mov
mov
loopne
sub
xor
bound
test
imul
in
jno
in
cltd
sbb
pop
hlt
xorb
sub
mov
ret
cmp
add
dec
cmc
test
sbb
jmp
sub
pop
movsl
jge
jmp
adc
clc
jl
dec
mov
mov
shlb
sbb
int
mov
adc
dec
lea
mov
push
negb
mov
pop
jmp
mov
subl
test
push
sbb
ret
and
cli
adcb
cmpsb
iretw
sub
or
cmp
mov
bound
pop
lds
add
dec
stos
xor
loop
sub
mov
aad
cmp
lea
int3
add
dec
sbb
sub
xchg
gs
out
jmp
adc
icebp
stc
inc
inc
repnz
jno
dec
mov
add
jne
sbb
xor
dec
fstpl
sbb
or
dec
mov
add
pop
fisubl
shrl
bound
add
mov
cmp
sbb
arpl
adc
shlb
and
loopne
dec
mov
jb
js
mov
adc
and
jl,pn
aam
dec
lcall
mov
js
push
cmc
fdivl
je
cmpsb
dec
add
stc
lcall
dec
in
sub
sbb
ds
imull
adc
rcll
scas
inc
loop
jecxz
sbb
xor
shll
add
xchg
mov
cmp
pop
mov
mov
jecxz
inc
fldcw
iret
pusha
testl
and
stos
fdivl
cmpsb
std
cmpsl
ds
enter
push
mov
push
mov
shrl
neg
je
ret
hlt
dec
fwait
xor
dec
in
pushf
jns
into
push
pop
scas
and
xor
inc
cmp
pop
xchg
jno
sbb
es
jmp
lcall
and
xor
inc
flds
push
out
test
scas
adc
xchg
cmc
sub
adc
pop
notb
mov
push
adc
pop
sahf
or
in
pop
stos
lods
inc
fnstsw
popf
mov
jmp
inc
movsb
sbb
mov
ret
add
in
lods
and
and
int
pop
or
and
loop
popa
mov
pop
mov
insl
or
das
out
xchg
pushf
jo
push
mov
xchg
inc
xchg
jnp
mov
ja
stos
lcall
cli
mov
movsb
xchg
pop
sarl
sub
or
add
insb
inc
push
movsl
xchg
cmp
out
les
or
dec
dec
insl
mov
adc
lret
mov
add
es
inc
fsubrs
iret
dec
loop
out
fsubs
filds
or
icebp
stos
movsl
out
add
and
mov
repnz
mov
mov
popf
jg
dec
pop
lret
cltd
sub
sub
push
jae
dec
imul
sarb
test
jb
dec
and
mov
or
jg
fnsave
fwait
bound
dec
imul
aad
aas
cmpsb
or
mov
aam
stc
push
push
add
sahf
aad
add
fbld
mov
add
rcll
mov
fsubrs
filds
mov
push
testb
imul
mov
out
js
loopne
lcall
adc
dec
xchg
imul
icebp
mov
cli
out
xchg
adc
jle
ljmp
mov
ret
jle
and
stos
inc
cmp
mov
jne
adc
mov
adc
pop
pop
add
dec
ss
rcrl
or
mov
or
push
adc
aaa
stc
nop
imul
mov
ficoml
std
dec
cmpsb
cmpsl
dec
xor
jae
sub
in
outsl
mov
cltd
stos
dec
xor
out
adc
dec
loop
pop
inc
xchg
arpl
repnz
mov
push
jge
iret
inc
push
push
fistpl
inc
adc
sbb
xchg
xor
in
xchg
push
sub
mov
cmc
scas
mov
pop
notb
or
lock
in
stos
or
leave
mull
jle
push
fnstsw
jmp
add
aam
xlat
enter
sbbb
push
subl
ret
roll
cmp
je
mov
mov
push
or
iret
fxch
outsl
xor
aad
lret
es
inc
add
ret
pop
gs
push
shll
cmp
mov
std
lahf
aaa
int
in
pop
lret
and
adc
sub
nop
xchg
lret
je
std
aaa
cmpsl
cmp
inc
inc
ss
sub
loopne
mov
std
fsubrp
scas
mov
jne
popf
fdivs
int
loope
sub
and
push
cmpb
mov
iret
data16
adc
and
push
push
movsl
inc
jae
adc
iret
ss
imul
push
pop
js
hlt
test
ret
hlt
dec
xchg
sub
sahf
xor
bound
lods
popa
mov
dec
mull
push
sbb
testl
ds
push
call
add
xor
inc
fstl
pop
stc
nop
nop
push
push
ljmp
jg
clc
add
mov
in
pop
fnsave
mov
adc
jecxz
pop
aam
sbb
mov
push
jl
testl
mov
cli
xchg
adc
xor
mov
mov
jb
pop
out
mov
jp
int3
lds
mov
ss
leave
xchg
sub
xor
xchg
gs
mov
dec
ror
outsl
shr
adc
clc
ja
sbb
int
cmpb
pop
fstpl
or
es
xchg
pop
push
in
addl
xor
jne
lds
adc
add
xor
adc
xor
jp
cmp
inc
jns
in
imul
in
lret
std
popf
push
in
or
push
inc
fiadds
mov
adc
mov
pop
loop
cli
xchg
ss
nop
shlb
xor
adc
mov
in
les
jne
mov
mov
xchg
sub
lods
lcall
mov
add
or
nop
nop
push
mov
mov
or
fcomps
mov
pop
shrb
cld
push
lods
out
mov
pop
mov
pop
shrl
movsb
adc
push
push
pop
repnz
push
mov
scas
shrl
lods
push
or
repz
push
aam
mov
adc
roll
sti
xchg
sub
into
imul
inc
pop
xchg
cmp
rcrl
jae
push
out
inc
xor
ret
nop
sbb
ret
cmp
pop
out
cwtl
fdivs
pop
repz
mov
sub
xor
xor
outsb
add
shll
addr16
jmp
mov
lds
mov
or
push
ret
jp
mov
pop
repz
mulb
sti
xchg
fs
pushf
xor
xchg
push
mov
ljmp
cmp
fdivl
cmp
outsb
stos
cmpl
sbb
sbb
or
and
add
mov
inc
fidivs
fsincos
xchg
or
pushf
xor
xchg
mov
int
dec
jae
xchg
mov
adc
xchg
sub
jae
mov
xor
xchg
mov
mov
pop
hlt
inc
push
montmul
cmpsb
inc
outsl
cli
xchg
mov
lret
std
clc
push
movsl
ljmp
in
insl
fdivl
sbb
lahf
mov
sbbl
xor
mov
sbb
mov
sti
xchg
xor
add
pop
pushf
xor
cmp
fadds
outsl
push
jae
fdivl
jae
mov
adc
insb
add
sbb
lret
mov
imul
inc
pop
hlt
jb
stc
nop
add
push
xor
cltd
adc
or
shlb
pop
testb
jae
mov
mov
sbb
pop
hlt
jb
sbb
push
cmpb
push
ficomps
imul
push
imul
scas
imul
imul
pop
icebp
pop
adc
hlt
inc
imul
mov
lret
pop
hlt
sti
pushf
adc
inc
dec
pop
cmc
cmp
sub
xchg
lcall
xor
adc
je
pop
cmp
xchg
adc
int3
sbb
adc
sbb
hlt
rclb
mov
xchg
sbb
pop
hlt
les
popf
xor
adc
test
rcll
mov
inc
flds
fnstenv
aas
sbb
sbb
fcompl
hlt
daa
sbb
cli
xchg
xchg
fcompl
into
mov
in
cmpl
shlb
jge
xor
fdivl
insl
sub
pop
mov
fidivl
pop
sbb
add
mov
mov
mov
test
xchg
cmp
pop
cmc
fsts
xor
lods
cmp
fmulp
pushf
xor
clc
fdivl
add
jnp
je
fidivl
sahf
sbb
shrb
or
mov
mov
inc
pop
repz
mov
inc
xchg
sti
xchg
lds
pushf
xor
cld
fdivl
aaa
cmp
push
sbb
mov
fnstenv
fidivrs
adc
pop
repnz
sbb
imul
mov
lock
hlt
or
sub
push
dec
jb
hlt
mov
lret
cli
xchg
std
stc
gs
jmp
in
fnsave
cmp
lahf
push
addr16
nop
mov
jbe
fnstenv
add
xor
pop
push
mov
sub
jae
mov
arpl
iret
add
shrb
pop
clc
mov
pop
divb
mov
bound
hlt
sub
cwtl
push
mov
jns
stos
pop
out
fisttpl
push
jmp
repz
xchg
in
jo
mov
xorl
mov
xchg
fnstenv
repz
es
dec
pop
mov
mov
jnp
cwtl
mov
ficoms
fldl2t
or
stc
nop
insb
or
pop
jp
sahf
xor
push
cmp
add
fstpl
jne
lahf
movsb
cmp
jne
adc
rcrb
mov
mov
cli
sub
push
pop
stc
ret
ja
mulb
iret
clc
nop
add
push
popf
jno
sahf
ss
arpl
jns
jne
iret
movsl
xchg
inc
faddl
into
iret
data16
xor
sub
pop
cmp
xchg
movsl
scas
pop
icebp
pop
into
cwtl
das
add
pop
push
sub
pop
xchg
sbb
cmpsb
inc
push
popf
xor
pop
testb
fidivl
sub
pop
stos
inc
fcompl
cmpsb
cs
sub
movsl
sbbb
sub
jmp
test
rcrl
call
stos
in
sbb
push
popf
fildll
scas
lcall
inc
out
inc
fcmovnb
cmovs
aas
add
fbstp
jne
sbb
js
aad
dec
loope
std
sub
inc
test
jns
or
sarl
scas
jmp
lret
xor
inc
fcoml
aad
pop
in
lahf
ss
push
inc
fidivrl
cmp
addr16
push
insb
iret
data16
pop
ljmp
adc
call
inc
sbbb
cmc
or
and
fidivs
sbbb
push
and
nop
fdivr
paddq
outsl
daa
es
push
or
js
sub
insb
into
mov
sahf
bound
pop
out
pop
popa
testl
add
mov
pushl
lods
cmpsb
adc
jecxz
push
outsb
into
mov
leave
imul
sti
adc
cmpsb
inc
cli
push
movsl
in
jo
aas
mov
lret
aas
sti
jecxz
mov
adc
jo
adc
pusha
test
adc
mov
mov
mov
mov
insl
pop
out
popf
insb
iret
mov
xchg
push
sbb
inc
ret
fnstenv
imul
fwait
mov
lods
daa
mov
pusha
out
fidivl
push
data16
aas
imul
sbb
xlat
xchg
sub
sysexit
int3
inc
dec
rclb
push
ljmp
jno
in
cld
xchg
es
nop
daa
cmp
or
mov
int3
arpl
pop
data16
cmp
jmp
xor
or
ret
test
ret
scas
inc
adc
dec
loop
aaa
into
pushw
add
jmp
mov
fisttpll
mov
daa
cs
mov
js
inc
fidivs
arpl
add
or
sbb
jb
lahf
xor
iret
mov
cli
push
sbb
outsl
push
xor
mov
adc
unpcklps
leave
inc
sub
jb
push
ljmp
jno
ljmp
daa
cmp
pop
scas
inc
nop
jb
jmp
mov
arpl
les
testb
ss
xchg
sub
or
pushf
test
int
out
sti
inc
fsubrl
out
jmp
loopne
loop
je
or
rcll
sub
test
and
mov
mov
stc
int
sbbl
in
pushf
push
loope
cmp
inc
mov
pop
xlat
pushf
inc
fmul
push
call
add
rcrb
mov
and
and
lds
pop
repnz
xor
xchg
rol
xor
enter
xor
push
lea
mov
mov
mov
popa
clc
popa
push
inc
fadds
push
popf
mov
aam
cmp
out
xchg
popa
adc
js
mov
pop
es
sbb
cltd
das
and
iret
ja
pop
test
adc
add
clc
hlt
ret
aaa
into
mov
pop
sahf
dec
mov
lock
mov
or
aad
xor
or
mov
jmp
jbe
mov
icebp
mov
mov
xor
xchg
mov
xor
jno
lds
call
jnp
testb
sti
xchg
sub
inc
ss
sahf
push
aad
and
xchg
out
jo
fsubs
lret
adc
jns
sbb
outsb
aad
push
push
outsb
pop
cmc
pusha
xor
popa
arpl
push
mov
xchg
mov
rcrl
cmc
jp
shrl
mov
decb
out
xlat
adc
loope
mov
pusha
in
in
mov
mov
testb
and
or
jg
int
xor
pop
mov
aam
mov
fnstenv
push
cmp
js
jle
mov
int3
sbb
pusha
sbb
jle
arpl
xchg
xchg
leave
pusha
or
in
push
sbb
arpl
loope
xchg
fs
push
mov
rcrl
and
pop
arpl
pop
xchg
insl
cld
xchg
pop
mov
push
out
bound
push
popf
cmp
cmp
inc
fstp
fdivl
mul
js
add
imul
sbb
hlt
fwait
and
jns
pop
sbb
popa
clc
arpl
push
popf
mov
mov
sbb
mov
jae
jl
js
push
ret
pop
inc
enter
ja
sub
and
or
lds
dec
jecxz
lret
sti
ret
mov
push
popf
inc
and
mov
lret
sti
int
jnp
adc
jns
shlb
sbb
repz
xor
mov
mov
mov
pop
xor
pop
lock
clc
nop
pop
xor
dec
mov
sbb
imul
jne
or
fmull
cmpsl
loop
mov
shl
test
jecxz
dec
aam
and
fsts
mov
loope
stc
adc
mov
sarb
pushf
push
mov
in
insl
add
adc
add
inc
sub
out
push
pop
test
dec
jns
xchg
stos
fidivs
lds
cmp
int3
push
lahf
xlat
outsb
adc
push
inc
mov
aaa
lds
inc
insl
cmp
adc
push
dec
xchg
cmp
dec
testl
inc
pop
hlt
mov
push
lods
icebp
insb
ret
hlt
arpl
out
jo
pop
out
cmpsb
fsubrs
ds
sbb
mov
pop
sahf
mov
shlb
push
push
popf
and
insl
mov
fs
neg
testl
subb
lods
ret
repz
js
sub
cli
xchg
popf
lret
iret
loopne
or
out
lock
adc
xchg
test
pop
nop
jae
mov
lods
adc
aaa
jns
inc
push
cmpsl
ds
imul
mov
jle
add
jle
incl
pop
repz
jecxz
pop
scas
xlat
loop
pop
aad
mov
xor
fs
mov
fimuls
loopne
fnstcw
ja
and
dec
adc
sbb
push
dec
loope
xlat
adc
xlat
outsb
insl
inc
stos
inc
aaa
test
mov
push
jmp
loopne
sahf
adc
add
imul
es
xorl
mov
cmp
nop
adc
adc
addr16
insb
es
call
mov
add
sbb
xchg
adc
xchg
sub
rolb
les
leave
pusha
jmp
sbb
jle
sti
or
mov
rclb
scas
add
mov
pop
pop
add
test
shl
repz
hlt
sbb
dec
loop
xchg
aad
out
cbtw
add
push
loopne
cmp
push
push
out
xchg
stc
nop
xorb
push
and
push
jl
inc
push
pop
mov
js
shrb
mov
cwtl
pop
decb
das
mov
jg
xor
xchg
jg
aam
mov
sbb
ljmp
inc
xchg
dec
ffreep
mov
fbstp
inc
lds
dec
js
jnp
cld
xchg
movsl
xchg
montmul
cmpsb
les
test
and
adc
jp
sub
call
xchg
icebp
lock
push
and
lods
inc
out
or
xchg
lahf
ss
adc
cmp
rolb
out
adc
jg
roll
push
and
das
mov
jge
add
sbb
fbld
loope
sbb
dec
fbstp
or
jp
js
leave
push
and
loope
mov
nop
insb
add
cmp
filds
dec
out
jno
cmp
call
sbb
cmp
insl
cwtl
pusha
testl
pop
mov
push
add
sub
cmc
mov
js
xchg
stos
sbb
popf
and
fidivs
rclb
mov
stos
in
pop
ret
imul
adc
sbb
inc
imul
hlt
jecxz
call
cmp
into
gs
aad
mov
mov
sub
js
rolb
jne
stc
jae
sbb
into
xorl
sbb
and
fs
jg
mov
imul
sub
or
sahf
movsl
cmp
xor
outsb
add
mov
fcoms
cld
mov
out
and
mov
sbb
sub
fidivl
or
pop
icebp
mov
lret
lock
in
xorl
push
in
jmp
out
movsb
add
jnp
cmpsl
and
xchg
push
in
dec
mov
and
incb
pop
ss
jecxz
out
pusha
arpl
mov
leave
add
or
loopne
out
and
dec
push
fisubl
int3
adcb
fsubrs
in
loop
push
mov
mov
imul
inc
andl
mov
or
adc
stc
insb
and
mov
aam
cmp
mov
lret
mov
int
leave
mov
int
pop
mov
fbstp
lret
hlt
mov
data16
ljmp
cltd
xor
pop
movsl
cmp
push
sub
dec
mov
rcrl
out
xor
pop
sbbl
scas
mov
sub
sbb
lds
push
ljmp
jno
frstor
add
and
dec
shrl
inc
in
hlt
mov
jge
inc
ljmp
fdivr
adc
or
jle
outsb
inc
orl
mov
mov
mov
iret
aas
pop
mov
fimuls
mov
sub
pop
inc
addb
scas
mov
jno
xor
xchg
aas
adc
scas
jae
leave
xor
pop
sarb
aas
xlat
lret
pop
xor
insb
fdivp
sbb
pop
outsl
testb
mov
inc
push
sub
xchg
icebp
jmp
fwait
call
push
dec
das
sti
inc
mov
jg
cmp
les
xchg
xor
fwait
das
aam
push
je
mov
cld
add
pop
fistps
ds
sub
xchg
iret
mov
es
enter
dec
push
inc
mov
push
outsb
cmp
xor
out
jo
inc
add
cmp
xchg
pop
subb
cmpsb
nop
push
loop
lds
sbb
sub
icebp
imul
xchg
ljmp
or
add
bound
xchg
xchg
jl
fnstenv
xor
jecxz
and
xchg
ds
repz
mov
in
call
push
dec
aam
adc
out
pushf
add
jmp
ds
lret
inc
ret
aaa
shl
xor
jb
push
xor
rcrb
nop
xchg
and
negb
and
jmp
jp
aam
hlt
lahf
mov
loopne
add
adc
cmpsl
jno
mov
xchg
mov
fistpl
inc
xchg
add
mov
inc
xchg
enter
imul
out
jo
mov
jo,pt
nop
push
push
lods
cmp
xchg
arpl
ret
pop
lcall
aam
out
cmpsl
and
jl
lds
dec
in
nop
dec
jecxz
out
imul
jecxz
add
mov
push
mov
pop
sbb
leave
pusha
cld
cmp
inc
outsb
sbb
pop
shll
mov
ret
and
insl
xor
inc
fdivrl
loopne
cli
adc
aas
or
sbbl
pop
xchg
adc
aam
xor
mov
mov
and
insl
lods
popa
stos
inc
xchg
int
mov
mov
data16
cld
xchg
push
sahf
in
test
je
mov
icebp
or
clc
inc
sub
in
sbb
sbb
pop
std
or
mov
push
pop
aas
mov
xchg
mov
les
insl
inc
xchg
add
jle
sbbl
roll
scas
inc
and
mov
leave
ljmp
pop
cli
add
mov
dec
push
inc
flds
test
neg
rcrl
js
add
inc
cltd
test
addr16
cs
in
mov
dec
in
aas
rcl
xor
shll
hlt
inc
test
mov
jnp
xchg
fdiv
lea
mov
adc
pop
or
dec
scas
pop
insl
xchg
iret
shlb
mov
mov
and
test
test
cmpsb
push
xor
mov
sub
clc
test
pop
dec
jnp
pop
cltd
js
insb
xchg
cmpsb
mov
push
shlb
xchg
push
and
pop
xchg
sbb
xchg
lods
xchg
sbb
fisttps
and
mov
sub
inc
add
sarl
stc
andb
pop
scas
add
dec
scas
and
push
jbe
ljmp
jno
cli
jbe
cmpsb
cmpsl
sbb
stc
outsb
scas
inc
mov
ror
rep
push
sahf
adc
addb
pop
icebp
or
cmpsl
ds
mov
lds
inc
fnstsw
jecxz
ljmp
cltd
cmp
sbbb
pop
and
xor
ds
push
mov
hlt
xor
jnp
test
sti
xchg
sub
aad
pop
push
inc
xor
aas
enter
push
xchg
or
push
adc
sbb
pusha
sbb
stos
mov
daa
adc
xor
aad
pop
adc
jnp
lock
mov
jb
lret
sub
fistps
rcrb
cmpsl
xchg
ss
and
push
icebp
das
pop
fldt
add
pop
lcall
in
dec
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
and
iret
jne
data16
sub
lds
mov
ss
js
aaa
ds
lahf
xchg
movb
popa
jno
dec
stos
addr16
ret
sti
and
or
divb
sub
mov
push
jle
test
shlb
rcrb
add
mov
adc
fidivs
jnp
xor
shlb
mov
sub
bound
cmp
jle
in
xchg
aam
mov
sub
nop
dec
lcall
arpl
shll
call
sbb
xchg
movsw
cmp
call
or
out
adc
ja
pop
insb
add
mov
pop
in
aaa
into
sub
dec
push
in
jg
xchg
mov
fs
pop
lods
pop
scas
fisttpll
mov
test
cmp
jg
out
iret
out
or
cld
arpl
mov
jp
dec
ffree
ljmp
loop
xchg
clc
pop
push
ret
int
outsl
cmpsl
in
fldenv
cmpsl
push
loope
pop
mov
ljmp
adc
cmp
inc
scas
fdivrs
int3
xchg
loop
push
cmp
or
pop
call
mov
aaa
inc
movsb
sahf
sahf
mov
cmc
or
and
out
inc
lret
mov
push
inc
es
popf
push
add
test
sub
pop
ffreep
dec
imul
sub
dec
imul
cmp
xor
sub
test
fdiv
xchg
popf
cmp
in
pushf
xor
dec
xchg
pop
pop
enter
adc
sarb
or
inc
es
cmp
les
lods
dec
xor
lcall
in
ret
aad
addr16
fstl
stos
dec
dec
shrb
pop
push
stos
leave
push
xchg
cltd
into
add
movsb
popa
jl
stos
int3
dec
es
mov
sub
cmp
or
xor
xor
rcrb
pop
sbb
and
or
mov
or
aas
xlat
jno
dec
repnz
jns
mov
mov
dec
mov
jp
mov
sbb
rcr
push
fisubl
xchg
xchg
pop
popw
lea
negb
and
cltd
in
jno
add
pop
inc
push
loope
out
dec
mov
stc
xchg
enter
ljmp
call
mov
fcompl
pop
repz
pop
add
push
mov
ja
sbb
sbb
push
push
rorl
dec
push
aas
mov
iret
push
and
push
sbb
add
xchg
or
mov
pop
enter
cmp
jne
dec
adc
out
cwtl
stos
push
jecxz
addr16
or
ja
xchg
xchg
cwtl
inc
xor
inc
or
daa
mov
rclb
sti
lea
inc
notl
testb
addr16
cld
dec
mov
cmp
rol
inc
push
pop
or
mov
mov
push
xor
or
lahf
push
pop
mov
sub
mov
stc
rep
push
add
mov
mov
pop
cld
add
dec
or
pop
ja
fiaddl
xor
mov
loopne
inc
mov
push
add
stos
push
aas
test
icebp
pop
adc
bndstx
inc
adc
or
adc
xor
ja
adc
ret
mov
mov
fwait
push
or
xor
cmpsb
xor
sub
mov
jbe
dec
loop
jecxz
cmpsb
cmp
jle
rcl
in
add
dec
sub
dec
jno
xor
cltd
jg
push
sbb
sti
lcall
hlt
adc
rclb
rcr
push
loop
in
andb
ds
es
adc
jg
nop
fstl
sti
in
aam
int3
pop
cld
stc
lds
mov
cmp
xchg
das
lock
pop
outsb
xor
mov
push
add
scas
mov
dec
cmpsl
mov
mov
mov
pop
sub
pop
aaa
mov
pushf
and
cs
daa
xor
lds
mov
xor
test
cltd
ja
test
loopne
cltd
xor
add
inc
das
jecxz
std
mov
and
fldl
mov
and
xor
aaa
imul
mov
ds
lea
ja
mov
shr
mov
xor
xor
inc
fstl
movb
xor
daa
lods
mov
xchg
inc
sub
popl
cmp
xchg
xchg
mov
inc
cli
add
push
inc
repnz
adc
jnp
faddl
cmpsl
pop
js
pop
stos
inc
loop
jae
loop
pop
xchg
push
es
lods
jmp
jp
xlat
cwtl
add
loop
andb
int3
faddl
add
nop
inc
inc
pop
xchg
popf
out
imul
adc
xchg
mov
dec
fsubrs
test
lcall
and
pop
jo
fwait
movsl
pop
xchg
inc
cmpb
jo
adc
xchg
addl
mov
cmp
cmpsl
pop
adc
add
out
push
xchg
sbb
xchg
add
pop
jo
addr16
add
pop
lcall
mov
repz
xor
outsb
cmc
add
dec
adc
dec
repz
pushf
loop
and
mov
sub
adc
or
roll
dec
das
imul
jg
fwait
inc
sti
jo
in
jmp
xchg
sub
cmpsb
adc
nop
sub
movsl
ret
fbstp
cs
in
lds
cmp
mov
cmp
and
sub
inc
outsl
test
popa
lret
add
shlb
test
or
sub
roll
sbb
xorl
test
pop
dec
or
xchg
sbb
sub
rolb
mov
lods
std
xlat
sbb
xor
sub
mov
jecxz
aam
push
lret
add
insl
or
sbb
add
jbe
add
fs
mov
and
push
adc
lods
ret
ss
xchg
and
or
imul
sbb
or
stc
fsubl
ret
and
mov
cli
or
mov
push
xor
adc
jno
data16
imul
xlat
xor
dec
sahf
xlat
jle
leave
outsl
arpl
mov
das
jae
adc
rorb
jnp
das
sti
dec
fmul
push
jmp
pusha
or
sarb
daa
pop
adc
cmp
out
pop
ss
sub
xchg
ret
fnsave
xchg
aam
or
dec
inc
xchg
xchg
add
popf
xor
mov
and
aas
popf
dec
inc
fidivrs
xor
or
iret
dec
fst
pop
mov
leave
add
pop
push
mov
mov
xchg
fiaddl
xchg
push
movsb
adc
mov
mov
call
push
add
mov
sub
ret
lret
shlb
adcb
addr16
sub
test
xchg
cmp
flds
or
ret
push
pop
or
push
ret
pushf
imul
xchg
sub
movsb
imul
mov
call
repnz
imul
adc
ja
hlt
inc
enter
sub
test
cmp
xlat
xchg
xchg
jmp
fiadds
imul
push
pop
mov
or
xlat
outsb
loope
nop
daa
mov
testb
push
adc
xchg
int3
arpl
xor
fnstcw
subl
dec
outsb
add
push
mov
inc
stc
testl
sbb
out
lret
imul
sbb
and
inc
nop
inc
xlat
shll
xchg
loop
cmc
adc
jl
or
into
cmp
lcall
ja
or
aam
out
pop
data16
lret
les
sub
mov
push
jge
pop
cmp
mov
dec
dec
xchg
push
rclb
mov
jmp
pop
cmp
dec
ficomps
mov
cmp
test
in
mov
cltd
std
cwtl
nop
cmp
mov
movsl
les
std
int3
aaa
pop
and
push
mov
pop
cmp
lods
pop
jg
add
xor
imul
inc
inc
fidivl
push
movsl
sub
sub
jnp
jg
pop
popf
dec
loope
cmp
jmp
mov
sbb
adc
testl
mov
loopne
insl
fdivs
lret
xchg
shrl
call
adc
push
scas
xor
shll
lea
xchg
mov
fnstenv
or
pusha
test
lret
cld
jg
fs
ja
rcll
xchg
inc
loop
adc
push
mov
xor
cmp
in
out
cli
sbbl
push
xchg
scas
add
insb
inc
repz
or
inc
push
mov
adcb
cmp
pop
mov
in
test
pop
mov
mov
std
xor
jmp
nop
or
stos
aaa
mov
and
aad
test
inc
out
test
test
jnp
pop
pop
mov
jge
mov
pop
inc
shlb
jl
clc
insl
sub
mov
scas
adc
outsl
push
xchg
mov
test
daa
xchg
scas
mov
lds
push
jbe
xchg
rorb
fs
push
popf
pop
add
ret
outsl
in
dec
sbb
mov
int
xchg
pop
hlt
out
dec
in
test
lcall
mov
rorl
or
mov
pop
sti
push
call
repz
cmpsl
notb
push
xchg
xchg
sbb
out
test
xchg
sub
dec
xchg
sub
lret
adc
repz
loopne
push
shr
sbbb
hlt
js
out
mov
aad
pop
hlt
js
mov
jp
inc
pushf
xor
sub
cltd
pop
mov
push
jmp
push
push
aad
fs
push
xchg
cmp
mov
push
ljmp
and
cli
sub
ja
sbb
mov
xor
and
in
stos
mov
sub
cwtl
sbb
or
lcall
jl
mov
decb
sub
xchg
aad
insl
or
jnp
and
inc
adc
scas
pop
sbbb
dec
fs
je
cli
xchg
pop
adc
repnz
jle
outsb
jo
dec
in
xchg
cmp
add
ret
cmp
xchg
dec
int
jae
outsl
push
daa
push
js
dec
dec
stos
inc
cmp
ss
pop
push
call
movq
pusha
test
lahf
repz
sbb
cmpsl
out
sbb
das
jae
mov
pop
ds
mov
xlat
add
rcrl
pushf
xor
push
jns
jg
stc
nop
ja
clc
mov
push
sub
pushf
mov
mov
das
jle
inc
pushf
push
aaa
into
inc
xor
sbb
adc
mov
cmp
stc
jae
add
mov
pushf
xor
cmp
sbb
aas
add
sub
ret
add
aam
cld
xchg
cmpsl
cmc
leave
pusha
out
jbe
jnp
adc
push
fwait
xor
or
jmp
sub
xchg
mov
shll
rcl
hlt
lds
xor
out
push
fmuls
fidivrs
mov
jmp
stos
inc
dec
or
out
in
arpl
lahf
lahf
ss
xchg
divb
shrl
popf
inc
xlat
iret
lds
mov
jb
xchg
fdivs
lret
insl
jmp
dec
fisttpll
mov
aas
lcall
adc
cmpl
adc
ss
test
sti
xchg
leave
das
mov
fcmovnu
jne
testl
es
test
mov
xlat
xchg
xchg
cs
jg
insb
xchg
sub
addr16
mov
adc
inc
push
dec
pop
sahf
ds
and
negl
in
push
sahf
fidivl
jno
inc
arpl
ja
test
xchg
cmc
adc
dec
push
pushf
xor
stos
cwtl
das
sbb
shrl
cmp
mov
mov
fwait
loope
inc
shll
loope
data16
je
out
je
aas
pop
call
mov
lcall
aad
test
lahf
jg
movsl
cmpsb
rclb
jp
fbstp
pop
testl
sub
jmp
shl
or
push
in
ret
push
adc
out
xor
movsw
sti
pop
hlt
xor
adcb
fldl
lcall
xchg
sub
out
dec
loopne
lahf
sbb
jb
add
add
outsb
add
push
pop
cmp
mov
pop
jno
dec
imul
jo
xlat
popa
dec
pop
mov
xorb
sahf
xor
xchg
and
sbb
mov
sub
scas
imul
lahf
iret
shll
imul
or
jne
out
xlat
outsb
sub
xchg
sub
stc
fwait
call
ret
aas
lahf
imul
mov
scas
inc
test
mov
les
and
hlt
lret
bound
stc
or
icebp
or
jl
popf
test
jge
test
mov
mov
ret
cmp
mov
mov
push
aad
push
js
and
das
fcmove
push
or
or
jmp
insl
addb
adcb
mov
cltd
movsl
dec
repnz
xor
gs
insb
lret
or
scas
cmp
fsubrs
fcomps
cli
fnstenv
xchg
add
test
and
movsl
mov
pop
xor
cmpsb
push
cmp
js
stc
mov
and
filds
rcrb
adc
icebp
jecxz
jecxz
mov
push
xchg
sub
push
popf
dec
xchg
sub
or
fs
sub
leave
cld
mov
sbb
inc
dec
data16
jns
dec
jecxz
or
fisubl
stos
inc
or
push
call
mov
pushf
xor
jne
push
mov
push
sbbl
sarb
enter
xlat
jmp
jns
jmp
leave
pusha
decl
inc
jle
in
add
jecxz
fwait
xor
les
je
xlat
pop
lock
scas
jmp
int
scas
cld
imul
pop
sub
mov
push
lods
inc
andb
outsb
push
xor
test
pushf
xor
fimull
lret
test
lret
fstsw
lcall
cltd
xor
and
sahf
push
mov
or
popf
cmpsl
scas
or
mov
fisubrl
loop
in
jmp
fistpll
sbb
jb
mov
push
add
daa
out
test
mov
mov
jmp
mov
sbbl
inc
pop
xchg
or
ss
insb
xchg
pop
clc
and
bound
inc
fimuls
stos
push
out
add
xchg
shll
mov
icebp
jecxz
mov
xchg
sarb
dec
adc
jp
inc
fisubs
dec
in
adc
sbb
and
shrl
sarl
or
mov
pushf
xor
lahf
ljmp
ja
push
lea
push
mov
mov
enter
arpl
fs
out
inc
in
inc
xlat
add
movsl
cmp
cwtl
into
gs
sub
shrb
sbb
mov
imulb
adc
cld
and
adc
lret
bound
stos
mov
icebp
mov
std
stc
nop
fninit
push
in
sar
dec
in
hlt
inc
fsubr
or
cltd
or
enter
xor
mov
fmulp
arpl
out
cmp
loop
stc
jge
push
movsl
cmpsl
sahf
inc
fcomps
ds
fistpl
mov
jae
loop
cmp
cmpsb
add
jne
sub
fistpll
xor
fwait
mov
dec
in
icebp
xor
ror
aad
shr
inc
fcom
or
fwait
idivb
les
mov
pusha
loopne
enter
fnstenv
xchg
push
mov
cmc
fdivs
daa
adc
pop
icebp
sub
mov
add
gs
fdivr
xchg
push
icebp
stos
inc
and
sbb
popa
inc
into
gs
cmp
repz
repnz
jne
push
popf
repz
xor
adc
mov
dec
mov
push
in
and
mov
fmul
xchg
jno
add
test
repz
mov
dec
xchg
push
and
orl
inc
pusha
mov
mov
cwtl
popa
push
lods
ss
dec
fisttps
stos
adc
and
out
inc
and
pop
sbb
dec
hlt
dec
out
imul
dec
out
popa
repnz
mov
shl
xchg
sub
push
dec
dec
mov
js
imul
or
jmp
fdiv
add
inc
sub
rcrl
xor
test
aam
addl
loope
aas
xchg
ss
push
sbb
inc
sbb
push
fbstp
mov
and
adc
jmp
fidivs
push
dec
push
and
add
stos
push
sub
ret
mov
adc
xchg
add
aad
sub
mov
stos
and
dec
imul
lods
rclb
xchg
sbb
sti
add
mov
stc
push
push
mov
ret
mov
and
aad
in
inc
sbb
xchg
jne
test
cli
or
xchg
imul
sti
rclb
in
pop
sub
outsb
add
cwtl
cs
ja
arpl
jle
push
jmp
roll
shlb
and
nop
incl
test
sahf
pop
fs
jns
xor
test
jne
leave
dec
subb
inc
sub
arpl
or
jb
pop
add
rorb
fidivrs
dec
xor
nop
dec
ret
mov
mov
icebp
mov
push
jmp
imul
or
gs
adc
dec
test
mov
xor
mov
push
dec
and
mov
sub
cmp
mov
in
aaa
insb
mov
clc
pop
ja
xchg
mov
add
arpl
xchg
dec
mov
cmp
aaa
into
lds
subl
push
call
and
or
into
mov
mov
fnsave
adc
mov
enter
inc
fadd
cmp
lea
pop
testb
jge
pop
std
sbb
cmp
pop
cmpsl
ds
out
mov
adc
fs
shlb
xchg
adc
mul
push
jmp
cmpsl
fisttps
adc
xor
jne
jmp
mov
push
popf
add
insb
add
and
popf
push
out
test
mov
inc
fnstsw
ret
pop
and
cmc
mov
mov
int3
arpl
daa
movsb
cmp
insb
ret
popf
movsl
cmp
in
mov
fldl
imul
sbb
rcrl
pop
pushf
dec
in
mov
pop
xchg
xchg
clc
push
adcb
mov
jge
ret
loopne
mov
pop
scas
pop
cld
dec
in
dec
shrb
mov
daa
and
in
test
sbb
addr16
mov
pop
sub
pop
mov
pop
mov
repz
xor
add
cwtl
das
push
mov
and
mov
pop
flds
out
in
dec
cld
xchg
inc
jg
xchg
outsl
adc
hlt
xchg
imul
xchg
push
insl
mov
mov
sahf
xor
and
pusha
inc
cltd
xor
mov
xchg
lods
clc
pop
bound
ljmp
jo
les
mov
push
shrl
mov
adc
pop
arpl
dec
xor
stos
mov
mov
mov
push
add
jno
aas
xor
jno
das
inc
fnsave
xchg
mov
shll
lcall
adc
inc
fcompl
outsl
cmp
pop
repnz
gs
insl
mov
imul
pop
jb
sub
dec
jecxz
mov
repnz
pop
scas
in
jb
loopne
sbbl
jb
int
aam
dec
loopne
sbb
sbb
mov
psadbw
lds
testb
jmp
dec
mov
adc
jne
testl
daa
scas
push
movsl
sbb
sbbb
movsb
shrl
lds
leave
pusha
jl
stc
nop
pop
popa
sbb
lds
dec
loopne
movsb
outsb
add
test
inc
fmull
jecxz
mov
ds
or
in
ja
sbb
pop
repz
inc
shlb
shr
jg
rcr
mov
mov
pop
and
xchg
jbe
push
xor
iret
dec
lcall
dec
inc
popa
mov
inc
inc
xchg
sub
test
mov
and
pop
lret
mov
loopne
or
movsl
cmpsb
dec
loop
movsl
cmp
sbb
mov
or
pop
fwait
outsb
pop
repnz
and
pop
pop
push
inc
fisubrl
les
nop
inc
fsubrl
jb
push
cmp
pop
fdivl
popf
xor
and
inc
fsubs
leave
pusha
imul
pop
mov
xor
imul
idiv
xchg
lcall
aad
cwtl
pushf
xor
shrl
mov
mov
sub
and
push
stos
fs
add
mov
leave
jo
shrb
sti
xchg
enter
push
jmp
jmp
cmp
out
xchg
aam
add
sbb
lock
xchg
sub
movsl
fbstp
dec
in
test
movsl
cmp
jl
push
dec
cwtl
cltd
xor
insl
add
dec
imul
pop
sub
add
pop
push
cmp
sbb
sub
icebp
mov
dec
and
mov
rorl
pop
scas
in
add
dec
loopne
mov
cld
add
or
jbe
pop
out
xor
adc
popl
and
xlat
sbb
cmp
arpl
mov
fsubl
mov
std
cmp
cmp
into
gs
pop
sbb
xor
mov
fnstenv
sub
nop
pop
mov
cmpsl
mov
add
es
dec
sarb
enter
pop
rcrb
lret
rcrl
loope
add
xchg
ja
add
leave
jne
sahf
cmpsb
ljmp
out
cmp
xlat
pop
es
or
mov
sub
lods
sbbb
adc
hlt
arpl
sbb
adc
fs
sub
push
out
dec
adc
adc
pop
cmc
mov
out
push
lods
sbb
ja
pusha
negl
cltd
sbb
lret
adc
mov
cmpsl
jo,pt
push
movsl
out
clc
xchg
movsl
cs
lahf
pop
xchg
sub
in
cltd
idivb
call
xchg
adc
lcall
add
das
or
sahf
jb
stos
cwtl
mov
cmp
in
sbbl
push
jp
cmp
xchg
mov
hlt
imul
sahf
jo
andb
jno
in
incb
jle
fcomps
xor
sbbl
pop
jno
lret
xor
sub
cmpsb
stos
aaa
fisubs
les
add
jle
pop
pushf
xor
mov
mov
in
cmp
test
or
cltd
sub
pop
pop
mov
mov
push
xchg
sub
dec
ret
aam
jecxz
mov
add
jmp
sbb
cmpl
dec
pop
enter
push
outsb
add
lahf
lock
loop
push
out
je
pop
push
std
push
in
lock
int3
imul
mov
jno
adc
push
sbbl
push
mov
outsb
add
sbb
lds
in
test
cld
xchg
add
mov
jecxz
add
into
jle
fsubrs
push
jae
loop
mov
fisubl
ffreep
shrl
add
lahf
add
or
ret
fidivs
or
jg
add
cmp
push
lods
inc
xchg
push
inc
test
insl
fisubl
jnp
sti
add
pop
push
xor
dec
cmpsb
dec
loop
add
data16
add
repz
and
or
aaa
mov
es
and
sub
scas
in
adc
insb
pop
out
pop
bound
xor
aad
push
leave
dec
or
bound
in
je
stc
push
sbb
push
test
popa
jo
movsl
cmp
xchg
call
push
pop
fadd
pop
mov
setge
repnz
test
std
out
das
pop
dec
cmpsl
mov
cs
sbb
lahf
ss
cmp
arpl
shlb
bnd
adc
leave
inc
sub
mov
mov
mov
test
ds
pusha
jmp
xchg
ja
sti
pop
clc
push
out
sub
xor
mov
or
jge
xorb
repnz
or
mov
mov
mov
lods
xchg
jo
lret
jbe
std
inc
notl
ror
popa
add
jno
xchg
push
stos
inc
mov
sbb
outsl
out
mov
in
dec
xor
cmpsl
mulb
mov
repnz
in
push
lds
lock
xchg
inc
mov
mov
dec
pop
insl
dec
loope
cmp
push
mov
or
fwait
adc
inc
adc
cmpsl
push
or
fs
xchg
mov
sti
sbbb
lahf
xchg
jnp
jg
mov
dec
inc
jo
push
dec
xchg
jnp
push
repz
fnsave
into
push
js
sahf
xor
and
fimull
inc
adc
lods
inc
popf
gs
cli
jns
mov
ljmp
push
loop
aad
dec
ret
roll
jmp
mov
mov
cmpb
inc
adc
jge
in
dec
shll
add
sbb
movsl
dec
adc
xor
jmp
popa
movsl
jns
icebp
sbb
cmp
shrl
cltd
dec
shlb
fbstp
adc
faddl
mov
out
int
movsb
inc
mov
jnp
jl
adc
movsb
test
shlb
jae
inc
nop
adc
arpl
mov
aad
push
enter
cmpsb
jmp
dec
jecxz
or
pop
fadds
shrb
mov
cmp
movsl
add
xor
testl
lods
and
out
push
int
dec
sbb
ljmp
push
call
inc
int3
and
jmp
ret
pop
push
test
incb
gs
jge
mov
or
adc
xchg
and
cmp
jo
add
pusha
inc
icebp
xor
xor
loop
push
mov
inc
mov
dec
push
xchg
sub
dec
movsb
dec
shll
loope
outsb
mov
mov
loop
and
fmuls
in
jo
cmp
stc
nop
cmc
pop
in
orl
dec
les
mov
or
les
mov
stos
inc
das
jb
jg
add
mov
in
dec
shll
xor
ror
gs
subl
pusha
pop
sub
push
fwait
lcall
mov
xchg
lods
clc
push
or
ret
dec
sbb
int
les
push
aam
stos
inc
rol
cmp
lods
cwtl
mov
lods
push
sbb
fwait
ret
inc
and
leave
push
push
push
es
cmp
cmp
sub
jp
mov
repnz
cmpsl
mov
testl
andb
stc
sbb
adcb
ret
pop
call
cmpsl
inc
mov
inc
lcall
xchg
in
and
mov
lods
push
movsl
pop
std
out
out
cmc
ret
inc
insb
add
dec
dec
in
adc
test
mov
xchg
sub
sub
cmp
adc
inc
sbbb
aaa
pause
data16
lahf
ss
in
jo
into
mov
add
pushf
mov
sarl
call
inc
xor
xchg
imul
gs
popa
stc
xlat
lods
or
add
xor
cmp
inc
push
sbb
in
lods
pop
sbb
jo
push
adc
imul
mov
fidivrl
lcall
and
fildl
in
mov
mov
add
aam
pop
xlat
mov
push
in
cmpb
adc
xchg
push
mov
in
xchg
sub
xor
adc
or
lea
cmc
mov
mov
int
lds
pop
lock
mov
sub
xor
sub
in
out
leave
pusha
or
les
adc
mov
popf
xor
pop
sbb
sub
sbb
pop
adcb
aad
popa
into
xor
dec
xchg
fcomip
cmp
fsubr
rcrl
xchg
lods
repnz
les
std
fidivrs
jo
lds
std
fidivrl
dec
dec
fcomps
add
test
xor
xchg
test
gs
xchg
xchg
xchg
mov
insb
jns
sahf
mov
out
push
jmp
adc
imul
and
pop
xchg
int3
mov
mov
enter
data16
or
push
gs
movsb
adc
cmp
sbb
mov
daa
add
push
lahf
adcl
inc
inc
scas
enter
sbb
imul
jae
imul
jne
fisttpl
sbb
jnp
sub
into
jle
popf
scas
sbb
lock
push
and
outsl
or
push
popa
xor
sbbb
int
xchg
mov
std
mov
pop
cwtl
orl
outsl
cmp
xor
push
jl
add
mov
or
imul
adc
imul
and
add
movl
shrl
sti
add
jbe
inc
jg
out
xor
mov
sbb
int
cmpsb
rcll
into
hlt
fldenv
add
mov
je
popf
jns
cmc
pop
cmpsl
insl
dec
mov
lcall
js
lret
aad
sarb
scas
popf
fisubrs
aam
mov
sub
sbbl
fistps
out
jg
in
mov
imul
out
pop
popa
pop
cmc
xchg
cmp
xor
pop
lock
fwait
xor
dec
sub
jle
in
cmp
adc
dec
stos
stos
out
sbb
xchg
xor
aam
in
out
test
hlt
mov
repnz
and
mov
push
orb
gs
cmpsb
test
jo
das
dec
ja
mov
fxam
and
jge
or
cwtl
mov
jbe
mov
lods
inc
mov
adc
sub
mov
mov
sbbl
cmpsb
inc
int3
arpl
jno
fildl
fsubs
and
sub
jno
mov
daa
push
jg
fwait
testb
xchg
pop
icebp
ret
cld
sahf
cli
ljmp
add
mov
xchg
xor
in
fcoml
cmp
push
jecxz
sbb
stos
push
movsl
xor
mov
push
or
stos
movsb
test
rcpps
pop
push
xchg
xor
sbb
jmp
es
mulb
fnsave
xchg
sahf
aaa
in
pop
inc
iret
inc
push
xor
cmpsb
cmp
push
fdivrs
fistpll
jnp
push
mov
xchg
test
fcmove
mov
mov
and
movsl
rcrl
pop
pushf
sbb
sub
sbb
push
clc
addr16
cmp
mov
daa
lds
testb
mov
xchg
and
jl
inc
movsb
lret
xchg
lea
fstpl
xor
xchg
outsl
imul
mov
ss
and
aaa
leave
or
inc
dec
fwait
or
insb
or
cmp
imul
mov
cmp
or
sarb
ret
mov
insl
rcr
or
in
cmc
xor
cmp
jmp
or
stc
lret
cmpsl
jbe
in
or
xchg
stc
xchg
decl
das
ss
adc
and
mov
call
enter
xchg
pop
imul
pushf
jle
jle
xchg
mov
adc
leave
push
push
pop
ljmp
cmp
imul
jb
movsl
xlat
adc
popf
dec
ja
push
sub
jmp
jge
inc
add
adc
cld
xchg
and
inc
mov
xor
adc
inc
aam
ffree
adc
jnp
lret
aam
mov
dec
jb
mov
insl
lds
sub
inc
lds
add
dec
in
not
aas
and
ljmp
cwtl
fiaddl
in
inc
movsl
test
and
cwtl
xchg
and
pop
inc
ret
xor
mov
cmp
mov
pop
jbe
scas
ret
cli
xor
add
es
cmp
imul
cmp
out
pop
scas
popa
fxch
fs
mov
xlat
push
lock
add
pop
mov
jl
andb
scas
fdivl
std
push
sbb
xchg
jae
aaa
push
es
inc
call
pop
fwait
test
addr16
js
das
out
movsb
lcall
ret
aam
cmp
pop
icebp
mov
push
dec
aad
out
jne
icebp
loopne
int
push
add
sti
loope
xchg
push
pop
cmp
into
flds
lock
clc
xchg
lods
jge
in
push
ficompl
stc
and
loope
insl
or
inc
jge
mov
xchg
mov
xchg
outsb
call
aam
ss
insb
xchg
dec
xchg
dec
incb
loope
popa
repz
push
iret
fs
xor
sub
mov
mov
cmp
aam
sub
and
out
add
cli
xchg
jo
iret
sbb
fldenv
pop
mov
push
xchg
std
jle
xor
scas
fsubr
nop
neg
adc
lret
fldt
ret
lcall
iret
or
stos
inc
cmp
jo
xchg
sub
xchg
aad
pop
push
push
xchg
adc
sub
mov
cmc
or
jge
xchg
or
or
pop
aaa
mov
sub
pop
sub
outsl
push
jg
jge
dec
ret
mov
xchg
inc
push
xor
mov
xchg
out
xchg
rorb
adc
cmp
sub
xor
aaa
or
lret
jl
or
pop
out
loopne
or
xchg
fildl
mov
mov
test
xor
clc
lahf
ss
cli
xor
insb
sarl
lods
movsl
cmp
rcrb
cmp
inc
mov
data16
push
fadds
mov
mov
xor
or
andl
data16
xchg
test
push
cwtl
mov
cltd
sti
add
mov
ljmp
cli
idivl
adc
das
and
jp
popf
dec
stos
repz
and
out
call
push
push
dec
ret
in
sub
push
mov
ja
pop
mulb
in
lds
inc
inc
sub
sti
xchg
call
mov
mov
jg
jg
dec
das
mov
dec
shlb
idivl
xor
call
add
stos
mov
fstl
shrl
adc
insl
pop
mov
js
aad
mov
filds
clc
add
pop
mov
mov
jns
popf
mov
sbb
leave
sub
adc
insb
mov
dec
mov
stos
cli
inc
insl
sub
pop
jp
dec
pop
or
lds
popa
sub
stos
pop
and
cmp
andl
ficompl
rorb
lret
shlb
jnp
loope
xchg
out
outsb
xor
xchg
pop
mov
cmpsb
loope
mov
push
mov
sbb
push
lahf
mov
add
popf
mov
xchg
or
pop
dec
loopne
test
jg
or
incb
cmp
dec
or
sbb
dec
ficomps
cmc
inc
frstor
mov
or
in
cmc
orl
dec
fisubrs
rorl
xchg
sub
inc
cli
xchg
sub
xor
mov
mov
push
pop
in
or
jno
cmp
mov
mov
xor
orb
ret
js
sbb
shl
cwtl
push
sbb
adc
sti
jp
lret
sbb
xchg
xor
clc
inc
js
sub
rcll
push
pop
cmp
and
push
mov
push
rcrb
xor
test
mov
cli
call
xor
push
int3
adc
hlt
cld
mov
jbe
icebp
popf
xor
pop
xor
insl
data16
arpl
sub
mov
cmp
jp
push
xlat
fidivrl
iret
or
fldl
xchg
push
call
cmp
jg
ja
dec
imul
jp,pt
mov
scas
sbb
movsb
pop
mov
add
das
mov
add
push
jnp
dec
sub
adc
sbb
cmp
fdiv
enter
mov
sti
inc
cmp
add
lods
xchg
loop
cmp
push
cmc
xchg
sahf
lea
mov
stos
sti
insl
out
sbb
divb
sbbl
xchg
add
xor
int
xchg
xor
or
ss
dec
xor
popa
adc
fdivrs
repz
sub
push
dec
in
pop
inc
or
arpl
cmp
or
push
rcrb
cwtl
or
in
inc
mov
lret
fsubrs
rdpmc
cmpsl
leave
pusha
or
sub
frstor
push
push
mov
test
push
movsb
cmpsb
add
sub
hlt
test
cli
test
sub
mov
lcall
ja
xchg
sub
pop
pop
jnp
dec
mov
fcmovnu
jb
xchg
repz
cwtl
dec
movsb
and
jmp
sahf
je
push
cmpsb
mov
flds
pushf
push
cmpsb
push
add
clc
lds
mov
addr16
lret
loop
mov
leave
pop
rcr
gs
mov
pop
jge
push
cmpsb
insl
xchg
cmp
xor
mov
pop
mov
insl
sub
xchg
loopne
mov
gs
jmp
cmp
mov
in
lret
sti
push
xor
cs
or
jnp,pn
xor
hlt
fwait
inc
js
mov
xor
dec
mull
xor
xor
mov
add
inc
loopne
icebp
out
inc
jbe
pusha
push
in
decl
inc
iret
data16
adc
mov
sbb
xor
popa
arpl
xchg
ret
lea
xchg
inc
pusha
scas
sub
add
lahf
test
sahf
mov
dec
in
das
lock
je
arpl
push
jb
pop
fcomps
stos
jl
das
or
imul
pop
loope
mov
jb
dec
xor
cmp
mov
cmpsb
cmp
jns
shll
dec
cmp
sub
xor
xchg
xchg
lock
lret
bound
pushf
mov
jge
ret
add
mov
sbb
push
dec
cmp
dec
outsb
inc
fisttpll
lahf
push
pop
jns
mov
pop
push
and
mov
mov
xor
rcl
add
sbb
mov
and
popf
push
scas
hlt
test
enter
lret
test
xor
imul
mov
mov
jb
add
std
leave
lds
and
push
inc
rcrb
repz
fidivrs
cmpsb
shrb
mov
jle
xchg
add
movsl
fistl
add
sbb
jnp
mov
mov
mov
xor
inc
xor
or
aas
xchg
pop
xchg
cs
push
or
cli
repz
fsubp
pop
fstps
call
xor
test
or
xchg
pop
add
ret
rcll
jno
pop
mov
insb
jo
ret
sub
push
aad
out
stos
divb
test
dec
jns
cmp
leavew
and
stc
or
les
sbb
divl
sbb
add
mov
push
add
add
jmp
fsts
inc
sar
add
adc
fistpl
enter
xor
les
scas
sti
test
and
shrb
xchg
mov
ret
mov
je
lods
pushf
add
adc
sbb
jbe
sbb
and
arpl
cmp
fistpll
rcll
and
push
push
xor
daa
mov
nop
xchg
jmp
jno
or
in
or
popa
popw
mov
adc
or
cmp
sbb
or
push
adc
stc
push
xchg
cmpb
jmp
loopne
xchg
fwait
mov
lock
and
add
pop
in
cmp
mov
pop
cmp
jbe
mulb
xchg
lahf
cmp
push
mov
imull
mov
inc
sbb
mov
jp
lock
divl
jmp
jmp
xor
inc
aam
popa
shll
jb
pop
jle
xor
call
inc
loopne
push
lods
das
sub
les
into
sbb
lahf
shll
iret
shlb
add
inc
test
add
fwait
insl
xchg
mov
xor
clc
fsts
rorl
sarl
loope
es
xor
xor
call
mov
lret
repnz
cwtl
adc
call
lea
cmp
iret
jg
sub
pop
jmp
cmc
mov
or
in
cmp
scas
icebp
add
cmp
pop
ficoms
bound
adc
dec
mov
out
es
daa
mov
dec
test
cltd
sahf
mov
inc
mov
mov
push
xchg
fmul
xchg
lods
mov
push
jne
lds
aas
stos
je
push
ret
xchg
xchg
popa
das
cmc
mov
ja
mov
pop
xor
mov
mov
lods
mov
rcll
imulb
adc
dec
inc
lcall
pop
xchg
xor
jmp
push
sbb
xchg
mov
les
mov
popa
or
and
add
pushf
test
scas
lret
dec
ret
aam
fnstenv
int3
xchg
sub
push
std
push
sub
sbb
push
cmc
mov
jle
pop
jbe
pop
das
test
xchg
fsts
xchg
fucom
ret
cmp
sarl
movsl
mov
int3
xor
pop
mov
xor
mov
mov
dec
dec
sbb
insl
loopne
or
jnp
stc
xchg
dec
add
mov
pop
and
clc
cwtl
nop
out
test
in
dec
in
mov
popa
clc
pop
adc
lods
sub
mov
adc
push
ljmp
push
in
inc
sbb
push
push
mov
jp
inc
gs
jp
or
stos
inc
push
mov
hlt
aaa
mov
mov
rclb
inc
xchg
sub
jg
adc
jle
pop
jo
mov
icebp
dec
sub
cmp
jnp
pop
pop
dec
fisttps
lods
data16
call
xor
sbb
cmp
rclb
pop
lock
clc
fidivs
sbb
dec
dec
cld
xchg
jge
xchg
sub
iret
shlb
xlat
shrb
push
fwait
sub
scas
and
out
mov
xor
jno
ja
aaa
mov
or
int3
ss
call
mov
cmc
xor
pop
sahf
and
xchg
mov
sbb
popa
aas
cli
or
out
mov
lret
mov
push
inc
ljmp
pop
mov
sub
fstpt
dec
xchg
mul
mov
pop
movsl
je
shrb
mov
je
test
out
les
test
sbb
les
rcrb
cmp
mov
and
decb
je
mov
imul
or
gs
fsts
hlt
mov
cmp
cmp
dec
test
cmpsl
jecxz
push
push
add
scas
add
icebp
cli
andb
das
insl
repnz
xor
cwtl
popa
sbb
or
fildll
push
pop
vhsubpd
int
movsb
lcall
outsb
lods
nop
das
push
ja
or
or
sbb
inc
cmpsb
mov
fsubrs
mov
jge
outsb
mov
jp
adc
inc
or
cltd
and
cld
pop
cmp
fcmovnbe
cmc
or
repnz
push
es
into
sbb
aaa
enter
sub
rcrb
or
add
mov
or
shll
mov
in
inc
adc
adc
inc
in
scas
addr16
in
insb
test
popa
hlt
sub
mov
dec
pop
jo
mov
sub
lcall
mov
sbb
push
sbb
test
cmp
mov
and
xchg
fstpl
dec
pop
scas
push
iret
inc
mov
ret
cmpsl
shrb
xchg
mov
dec
insl
shl
test
negb
insb
sti
mov
std
cmp
cli
fsubl
sub
orb
mov
mov
mov
aad
idivb
push
sub
idiv
addr16
andl
inc
aam
in
jp
inc
and
jns
les
inc
in
pop
into
pop
xor
cs
cli
mov
inc
and
adc
gs
icebp
jp
jns
add
je
push
test
loop
ret
jl
jp
insl
add
adc
pop
ret
cmpsl
or
enter
lods
xchg
push
sub
xor
aaa
mov
in
or
cmp
pop
outsb
add
and
mov
mov
repz
ficomps
jns
xor
lret
jns
std
dec
xchg
pop
push
push
ficoms
daa
inc
and
jp
jmp
flds
dec
icebp
cltd
popa
cmp
adc
nop
xchg
xor
mov
ret
popa
js
dec
pop
out
popf
fwait
xor
cmp
add
dec
fistl
mov
xor
cmpb
stos
loopne
je
jo
pop
xchg
lcall
in
movsb
jnp
in
xchg
dec
loop
add
add
es
iret
stos
add
fdivl
xor
adcl
jae
push
andb
mov
xchg
inc
fiaddl
jg
repz
daa
inc
fwait
std
jo
and
lods
xchg
popf
cmpsl
inc
daa
jmp
fnsave
fnsave
inc
cmp
push
xchg
jp
dec
xchg
dec
cmp
mov
mov
lods
cltd
dec
pop
dec
sti
fwait
jl
iret
fstpt
and
lea
cmp
mov
lods
ret
cld
bound
in
and
gs
adc
or
lret
enter
stos
pop
mov
mov
cmp
cmc
sub
subl
fwait
mov
pop
mov
sub
shrb
ljmp
mov
rorb
adc
mov
dec
jecxz
xchg
dec
push
mov
in
add
fsubs
test
jle
sub
push
mov
pop
fs
ret
sub
outsb
outsl
rolb
mov
lods
inc
int
xor
out
lret
or
mov
dec
nop
lods
inc
ret
jle
push
stc
add
out
stc
aas
and
mov
mov
mov
fdivrp
enter
mov
int
test
fmuls
pusha
rep
shll
xchg
test
jmp
outsl
inc
mov
add
insb
mov
movsl
das
repnz
inc
movsb
add
sti
stos
inc
xchg
push
call
push
sub
packssdw
adc
pop
popa
jmp
iret
ret
fldln2
sarl
sbb
aas
dec
fnstcw
push
push
orb
test
fwait
add
test
jb
push
cmp
test
js
sub
or
inc
inc
cmp
lahf
xor
loopne
push
hlt
popa
mov
aaa
mov
cmp
dec
pop
pushf
pop
dec
out
lock
dec
mov
jne
cld
xchg
lds
lahf
gs
or
mov
pop
jo
xchg
sarl
stos
lahf
jnp
les
ret
or
insl
pusha
inc
cli
push
pop
dec
loop
jnp
mov
push
or
dec
test
icebp
dec
dec
or
lea
shr
test
cwtl
push
scas
inc
stos
sbb
jle
lock
repz
movsl
mov
ret
dec
lock
and
sti
or
out
into
out
iret
lock
insl
cmp
je
xchg
int3
mov
mov
or
sbb
fldl
push
push
out
sbb
adc
cmp
jo
sahf
cltd
xor
inc
iret
mov
adcl
xor
jmp
jo
lret
sarb
mov
or
lcall
push
pop
ds
test
lret
sti
xchg
xor
jl
loop
out
out
lea
scas
inc
dec
out
and
fistl
movsl
fidivl
mov
stc
nop
or
sbbl
push
or
inc
dec
inc
cmp
scas
jecxz
into
cltd
iret
push
jo
xor
bound
mov
sarb
loope
inc
xor
ss
jecxz
xchg
cld
jnp
sub
push
pop
sbb
cmp
jb
scas
dec
mov
dec
loop
sbb
inc
push
testb
int
jge
test
add
fidivs
lds
inc
dec
mov
mov
cwtl
lret
ja
lods
adc
jmp
cld
daa
adc
adcb
int
in
sbb
out
dec
subb
lds
xor
xor
push
mov
dec
fisubrl
loop
lods
adc
repz
mov
fdivr
lea
and
fs
test
scas
in
jmp
pop
rcll
cltd
es
cli
xchg
into
and
repz
popf
fwait
adc
fs
dec
ds
int
pop
lcall
xchg
dec
jl
adc
shll
pusha
mov
or
xchg
jae
movsl
mov
add
fidivl
xor
adc
ret
movsb
push
sbb
pop
stos
adcl
test
repnz
xchg
std
sbb
loope,pt
cmc
adc
push
repnz
lock
addr16
cmovns
mov
icebp
xchg
jmp
mov
addb
incl
pop
jno
push
mov
cmpsl
lods
clc
and
outsl
mov
addr16
int
cmp
lock
push
lds
jo
lds
add
mov
mov
inc
and
xor
in
push
add
data16
pop
push
inc
mov
mov
in
test
jmp
add
ja
pop
mov
mov
mov
ret
push
fwait
jne
xor
and
cmp
dec
roll
arpl
inc
pop
pop
outsl
popa
popa
bound
ja
insb
pusha
insl
fisttps
addr16
mov
fnstcw
jo
push
and
inc
mov
jne
negb
or
xchg
dec
inc
pop
icebp
jno
rcrb
add
jecxz
pushf
in
sub
sub
fnsetpm(287
or
cmp
stos
sbb
out
xlat
call
vpshlq
xchg
rcrb
cmc
fcoml
out
lahf
jp
mov
mov
inc
cwtl
push
add
jbe,pt
lahf
cmpsl
pop
cmp
cmp
push
sbb
inc
add
js
and
ja
movsl
shrb
inc
xchg
dec
stos
fyl2x
imul
aad
movb
mov
jno
leave
pop
mov
mov
mov
popf
and
movsb
popa
add
push
inc
enter
mov
imul
ja
jge
jge
jmp
inc
int3
jecxz
cmc
and
shrl
int
xor
cmp
dec
cmp
jge
leave
mov
inc
adc
xchg
mov
bnd
imul
imul
or
mov
pushf
xor
cmp
int
add
call
in
pop
sub
add
mov
addb
dec
js
std
in
mov
dec
lds
xor
aaa
in
push
pop
add
sbb
loopne
hlt
xchg
sub
cld
out
or
add
mov
addr16
sub
cltd
leave
daa
repnz
clc
bound
sub
icebp
cmp
ss
stos
loopne
idivb
clc
add
cmpsb
mov
pop
cmpsl
enter
addb
adc
test
popa
pop
int3
mov
ret
adc
test
iret
cmp
sub
rorl
stc
push
and
push
fisubrs
sbb
xor
mov
out
pop
xchg
je
jle
mov
nop
adc
loop
xor
loope
pop
icebp
cmpsb
xchg
sbb
enter
icebp
imul
adc
pop
rolb
jge
inc
ret
fisttps
sahf
xchg
adc
sahf
inc
jp
sbb
call
or
push
shr
jae
loop
ds
or
pop
cmp
pop
and
dec
xchg
sbb
sbb
push
push
in
dec
add
into
out
fs
mov
mov
cld
jb
mov
aas
dec
inc
arpl
xor
sahf
clc
insb
cld
cmp
insb
or
outsl
add
xor
shll
push
sub
xchg
mov
test
jnp
out
std
inc
ljmp
mov
xor
test
sahf
sbb
mov
adc
daa
stos
xor
sub
jg
cs
add
push
dec
sbb
mov
fmull
stos
sub
mov
inc
dec
out
jmp
or
into
cmp
jle
in
mov
xor
inc
pop
push
es
into
arpl
or
adc
and
pop
cmp
subb
mov
icebp
mov
nop
cmpsb
mov
cmc
aam
pop
repz
add
push
add
add
jecxz
insl
arpl
popf
std
hlt
cmp
sbb
test
mov
repnz
jp
test
leave
lcall
jle
cmpsl
cmp
clc
sbb
in
pop
xchg
cs
hlt
out
rcr
mov
rcrl
cmp
cwtl
outsl
jge
mov
jg
push
fistpl
int
testl
cmp
orl
mov
sub
sub
dec
fistps
mov
xor
gs
sub
ds
out
xlat
outsb
lahf
mov
scas
test
arpl
mov
pop
or
ss
shrl
rcrl
fidivrs
lcall
inc
fistl
inc
cwtl
adc
mov
pop
lahf
jb
or
mov
xchg
je
add
iret
inc
into
add
mov
xor
int3
lahf
xchg
inc
lock
out
out
push
outsb
push
or
and
adc
adc
pop
mov
scas
mov
cld
lods
mov
cmp
and
aas
fdivrs
lds
mov
xor
push
mov
pop
cli
iret
mov
rclb
cwtl
add
es
fwait
push
jmp
pop
xor
dec
cltd
dec
lcall
loopne
or
xor
lds
cs
test
bound
xor
out
push
aas
or
sbb
inc
and
pop
addr16
je
push
cmpsl
bnd
dec
adc
repnz
outsb
sub
roll
or
out
test
cmpsl
push
jg
andb
and
insb
int3
or
jno
loope
mov
mov
aad
jbe
sar
std
mov
fwait
outsb
xor
push
mov
inc
shll
fildll
sahf
in
out
jnp
sti
lea
mov
mov
fisttps
lods
cmp
ljmp
lret
or
sub
push
sahf
inc
sahf
lods
mov
icebp
xchg
fs
mov
fimuls
mov
scas
out
cmpsb
lock
mov
push
mov
ljmp
pop
cmp
mov
pop
test
sub
sbb
jmp
pushf
mov
xor
cmp
pop
or
cs
icebp
dec
call
outsl
xchg
aaa
push
repz
pop
sub
in
je
push
push
add
jmp
orl
mov
pop
je
push
insb
sbb
lahf
pop
mov
xor
cld
mov
ret
mov
cmc
int
iret
xor
jl
xchg
xchg
add
scas
scas
push
sbb
test
and
inc
std
or
call
lret
or
push
mov
call
cmpsl
rcll
add
inc
jg
push
mov
jg
xchg
mov
and
mov
into
loopne
and
lret
in
arpl
dec
mov
cmp
pop
cmpsb
sub
mov
ret
sub
push
push
arpl
mov
ret
or
jp
fidivl
and
mov
and
sub
sub
notb
iret
xlat
aas
jnp
call
sbb
bt
mov
testl
aas
mov
mov
mov
cmp
and
sub
pusha
inc
idivl
int
jecxz
outsl
push
xchg
sub
fwait
add
int
xor
xchg
mov
jmp
pop
hlt
xor
inc
dec
jnp
dec
jle
test
call
mov
or
es
adc
sti
fwait
sbb
aad
sbb
iret
bound
jnp
aam
mov
push
enter
mov
bound
stos
mov
mov
dec
or
sub
out
xchg
dec
mov
ret
jne
jecxz
addb
jno
xor
pop
mov
or
les
jmp
pop
fimuls
daa
rcrl
pop
xchg
push
scas
cmpsl
in
fnop
mov
mov
pop
push
rep
ja
cs
inc
notl
loop
push
mov
cli
shrb
lret
add
and
ret
sub
mov
not
pop
movsb
mov
out
xchg
inc
loop
jne
pop
movl
dec
cmc
push
jp
das
les
cmpsb
movsb
in
jge
ds
mov
cmp
and
subl
mov
stc
sbb
inc
inc
cmp
arpl
jbe
pop
adc
mov
gs
xor
arpl
std
call
test
xor
fdivrp
cltd
pop
shrl
mov
or
out
cmpsb
ret
mov
outsb
sub
aaa
fisubs
mov
xchg
push
aas
imul
out
dec
and
stos
stos
loop
in
inc
test
scas
mov
sub
inc
ret
in
mov
mov
sbb
mov
loopne
xor
repz
xlat
cmp
dec
pop
addr16
mov
sub
jns
inc
mov
das
lret
sbbb
cmp
ljmp
cli
xchg
pop
imul
jne
incb
test
push
shrb
ret
sub
or
sbb
push
scas
sub
pop
mov
push
mov
push
cld
test
xor
or
pop
leave
add
jno
and
ret
test
pop
lret
adc
add
cmp
out
and
inc
push
es
bound
insb
cmpsl
out
jmp
adc
in
sarb
lods
loope
ret
jb
out
xchg
xchg
dec
pop
jbe
pop
repz
popa
cmp
add
mov
mov
std
aam
lods
jne
fdivrl
xchg
hlt
adc
push
xor
aas
jecxz
andl
arpl
call
xchg
mov
shl
jge
gs
sub
or
scas
ret
cmpsl
cli
sbbl
enter
mov
mov
mov
cmp
pushf
xchg
daa
fs
icebp
cwtl
push
inc
std
mov
push
mov
mov
push
dec
mov
cld
push
popa
mov
rorl
jg
gs
or
out
add
movsl
pop
ljmp
push
outsl
mov
mov
push
int
dec
clc
fxch
fs
rol
lcall
lret
mov
push
dec
inc
addr16
sbb
out
mov
sub
pop
scas
orl
outsl
adc
xor
pop
nop
cwtl
mov
div
ss
lods
inc
clc
pop
pop
cli
or
rcll
sub
mov
jg
pushf
push
xchg
push
mov
xchg
xlat
inc
icebp
mov
pop
cmp
xchg
sbbl
xor
fbld
pop
mov
inc
addr16
loope
or
dec
subl
sbb
fwait
xor
xchg
mov
lods
sbb
mov
push
loop
adc
sub
inc
push
orb
inc
or
iret
lret
notb
daa
add
cld
push
cmp
adc
and
aaa
popa
add
pop
ds
xchg
mov
loope
out
add
cmp
push
cwtl
lock
jle
push
mov
ljmp
dec
in
pusha
clc
mov
xor
or
mov
shll
insl
mov
aam
mov
jns
inc
pop
mov
add
push
fcoml
mov
scas
and
rclb
adcb
in
jb
sbb
pop
scas
outsb
negb
cs
pop
xor
mov
lret
fildl
popl
add
pop
sub
xchg
pop
les
frndint
adc
push
sbb
mov
jns
push
addl
lea
sbb
mov
fdivl
push
ret
xor
cmp
test
popa
or
in
jne
jmp
xchg
dec
mul
movsb
sti
xchg
or
movl
leave
mov
inc
xchg
jns
jge
je
and
sbb
cld
outsl
incl
mov
sub
cld
out
test
ret
stc
outsb
mov
push
sub
mov
xor
push
adcl
sbb
int3
stc
mov
sbb
popf
mov
mov
leave
fnstcw
jecxz
leave
int
cs
cmp
inc
stos
mov
movsl
ja
jmp
outsb
imul
fwait
adc
mov
out
outsl
daa
mov
pop
js
pop
arpl
ss
jno
clc
rclb
push
ja
daa
lea
test
jge
lret
mov
pop
push
xor
into
arpl
in
jne
xchg
jns
subl
adc
inc
xor
cwtl
adc
jp
in
imul
aad
clc
and
out
cld
inc
andb
mov
sarl
push
out
or
dec
cwtl
imul
call
or
mov
inc
cmpps
movsl
jl
aam
popf
pop
jecxz
hlt
in
inc
es
std
xlat
xor
mov
mov
ror
je
imul
sbb
repnz
jb
add
movsl
xchg
push
mov
scas
call
cmp
pop
daa
and
repnz
jb
sbb
jns
sti
mov
xor
ror
cwtl
cmpl
dec
shrl
pusha
dec
stos
dec
dec
cwtl
jo
push
or
mov
fidivrl
lahf
ss
mov
mov
call
mov
test
xlat
jmp
mov
mov
lods
scas
jl
push
xchg
cltd
sbb
push
sahf
mov
lods
das
andb
jl
lods
adc
or
jge
js
ficomps
fs
loope
inc
rcrb
clc
push
les
pop
loop
lods
in
jg
cmp
jg
or
push
aas
fwait
add
pusha
fisubs
xchg
jmp
pop
scas
lahf
xor
movsb
dec
sub
dec
adc
aam
or
cli
mov
xchg
cmpsl
stc
lea
lds
or
jbe
jle
cltd
sub
inc
negl
loope
and
fimuls
mov
dec
loopne
int
iret
jno
subl
dec
iret
jnp
mov
jno
xchg
fcoms
mov
dec
rcrl
fisttps
mov
cmc
pop
mov
xchg
je
sbb
pushf
sbb
sti
or
sub
sarl
pop
cmpsl
int
pop
ret
or
jecxz
pop
sti
jbe
jl
test
inc
push
push
inc
inc
test
test
out
sub
xor
shr
xor
leave
cld
jp
xchg
lds
sbb
outsl
push
ljmp
push
jge
pop
imul
mov
int3
pop
inc
and
repz
xor
sub
push
cltd
imul
mov
mov
xchg
out
pop
sub
mov
pop
iret
jne
movsl
xchg
or
xchg
and
push
aaa
hlt
xor
test
aam
addb
movsl
push
sbb
mov
push
aas
stc
pusha
subb
fisttpll
xor
xchg
repz
sub
push
cltd
push
jno
popa
xchg
push
jno
mov
adc
int
dec
aaa
movsl
or
orb
push
aaa
hlt
ja
aad
jecxz
xorb
popf
lods
dec
xchg
and
mov
testl
out
push
jne
pop
dec
popf
jg
imul
imul
and
mulb
in
dec
test
iret
lods
je
inc
mov
nop
scas
and
scas
pop
gs
rclb
cwtl
push
push
adc
push
ja
call
fistl
cmp
insl
cmp
mov
adc
aam
test
add
ljmp
inc
jbe
mov
inc
sbb
inc
lahf
int
leave
jp
lret
push
jno
inc
lcall
push
xor
test
pushf
fimuls
jecxz
mov
add
das
push
xor
xchg
sub
adc
and
mov
jae
mov
call
ljmp
pusha
pop
or
inc
and
in
lret
jp
imul
sbb
stos
fstpt
jbe
je
test
dec
push
dec
dec
add
or
imul
repnz
sbb
je
xor
mov
xchg
pop
out
xor
xor
notb
mov
sbb
jno
mov
in
ss
cld
scas
and
out
lods
das
les
or
push
es
cmp
and
aad
jmp
jnp
adc
in
inc
add
dec
push
push
dec
mov
mov
push
inc
stc
cltd
add
dec
jo
jo
pop
and
lcall
clc
inc
mov
jmp
ljmp
loopne
xor
xchg
pusha
fcomi
push
std
jo
fwait
push
inc
xor
icebp
xchg
mov
aad
cmp
imul
xlat
push
pop
shrl
shrb
pop
aas
nop
daa
mov
mov
adc
orl
jns
imul
push
inc
stc
inc
lret
inc
cltd
shl
fs
mov
loope
mov
and
dec
leave
ljmp
movsb
fdivrs
push
jno
fisttps
fs
jmp
add
push
jle
data16
pop
sbb
lret
xor
mov
fwait
je
sub
fbld
addr16
push
out
in
ljmp
in
xchg
sub
or
insb
rcrb
mov
shl
int3
push
popf
jbe
sbb
and
inc
bnd
push
je
pop
into
lds
imul
stos
cli
jmp
and
cmpsl
imul
dec
cmpsb
test
lcall
loope
aaa
ds
mov
into
les
xchg
ja
pop
fsubrp
push
cmpsb
and
adc
jecxz
xor
mov
in
in
std
sbb
fistpll
xor
jae
outsl
or
test
std
popf
subb
ja
add
icebp
mov
outsb
add
pop
xor
pop
cmp
push
inc
inc
jo
mov
bound
mov
cmp
xchg
sub
repnz
aam
ljmp
sbb
notl
ds
lock
push
cwtl
dec
pop
test
sub
dec
pop
inc
jge
rcrl
pop
cltd
xchg
loopne
cltd
xor
mov
jmp
inc
bound
stc
dec
push
dec
int3
pop
mov
or
ss
icebp
addb
push
scas
in
outsb
xchg
dec
pop
lds
lcall
pushf
inc
fiadds
jl
les
aaa
add
jns
mov
ret
or
dec
cmp
dec
add
shll
int3
fs
sti
into
jg,pt
stos
push
push
adc
lods
in
insl
sbb
mov
clc
or
ret
mov
add
push
inc
and
movsb
add
test
jbe
pusha
cmp
mov
xor
jecxz
mov
jg
cmp
movsb
xor
in
adc
aam
adc
test
pop
adc
dec
inc
inc
cmpsb
mov
jmp
adc
ret
repnz
inc
and
mov
testl
push
bound
test
ds
pop
jp
and
cmpsl
gs
aas
sahf
repz
mov
subb
fwait
das
int3
xchg
movsl
aam
data16
push
mov
add
xchg
lret
adc
xlat
jge
dec
pop
mov
into
mov
hlt
or
or
addr16
mov
in
or
sbb
sub
repnz
adc
cmp
jge
sbb
int3
push
insb
sahf
test
or
loope
sbb
inc
sbb
sti
aad
shlb
mov
bound
iret
mov
lock
xor
cmpsb
push
add
xchg
cltd
xor
jns
jnp
xor
and
pusha
lods
ja
test
das
insl
das
or
in
push
out
mov
xor
outsb
popf
inc
and
push
lret
movsl
cmp
mov
add
pop
aas
xchg
push
mov
or
adc
and
lods
pop
inc
nop
sub
pusha
test
mov
mov
mov
in
mov
dec
int3
pop
dec
in
mov
fiadds
out
mov
adc
add
mov
push
cmp
les
xor
fs
and
js
lea
int3
nop
mov
add
addl
leave
movsb
jge
push
inc
rcr
jb
insb
mov
test
jb
xor
add
jb
jge
push
push
dec
pop
scas
inc
shr
gs
mov
sub
pop
test
pop
pushf
jecxz
pop
es
divb
int3
loopne
gs
lfs
xchg
aas
xchg
dec
inc
jnp
hlt
arpl
adc
out
jle
add
and
inc
mov
xor
fisttpl
jne
iret
pop
push
and
fwait
fwait
xchg
adc
pop
rolb
push
cltd
mov
je
mov
xor
mov
test
fdivl
lret
push
stos
jg
sti
out
mov
lods
sub
lahf
sbbb
and
push
xchg
jl
fdivrl
fs
ja
loop
pop
pop
mov
movsl
sub
and
or
cmp
js
sar
popl
shll
adc
xchg
jnp
mov
add
inc
adc
aam
sbb
das
call
orl
cmp
gs
aaa
pop
dec
mov
rcrb
or
or
xchg
shrb
pop
jmp
cmpsb
in
add
ja
shll
xchg
mov
shlb
adc
push
adc
loopne
jge
cli
inc
jge
cwtl
mov
pop
xlat
and
sti
test
dec
in
das
jmp
inc
mov
std
add
pop
popf
in
add
mov
push
outsb
fcompl
mov
sbb
out
xchg
or
addr16
mov
jne
cli
inc
mov
jnp
pop
mov
add
and
repnz
lret
pop
pusha
sbb
mov
lcall
inc
lods
int
test
into
sub
lods
cli
jg
es
add
adc
mov
xchg
cmp
cmpsb
add
es
mov
xor
stc
rorb
mov
shlb
cmp
aaa
jg
pop
repnz
jns
xchg
cmpsl
or
cs
cmpl
pop
in
mov
jae
push
jns
cmp
fcomi
mov
mov
shll
enter
decb
push
rcl
adc
inc
xchg
outsb
add
mov
cmpsb
lahf
out
dec
jge
xor
inc
dec
dec
into
jecxz
dec
testb
add
shr
jae
jg
arpl
pop
adcb
jecxz
js
fwait
outsl
jo
je
cli
xor
sahf
aam
lcall
adc
push
out
jge
idivl
cmp
je
shrl
xorl
mov
adc
decb
jecxz
loop
mov
movsb
pusha
fadd
xchg
xor
fbstp
adc
cmp
fstl
daa
repnz
sbb
pop
dec
add
rorl
push
mov
movsl
mov
out
mov
jmp
jbe
inc
inc
push
mov
das
iret
jae
jne
cmp
adc
pop
pop
sbb
fs
and
sub
addl
leave
shll
gs
loop
mov
lock
sub
and
in
loop
jae
sbb
mov
popl
jp
dec
js
ds
icebp
cmp
aam
fsubrp
fists
xor
mov
jae
fdivr
jae
xor
inc
shll
out
dec
mov
mov
add
cmp
sbb
mov
xor
jmp
and
pop
sti
xchg
push
xchg
jg
scas
mov
lock
mov
jg
std
mov
mov
cmp
imul
jno
scas
mov
push
hlt
mov
rclb
lcall
adc
or
je
shlb
inc
dec
lods
pop
shlb
jg
loope
aam
scas
add
inc
fmul
sub
fisubl
dec
push
and
fidivl
testl
aas
sbb
je
push
bound
mov
jp
jge
nop
inc
xlat
sar
add
lods
add
mov
testb
xor
loop
lea
xchg
out
js
mov
adc
icebp
movsb
cmp
iret
xchg
stos
jae
aaa
pop
fsubrl
xchg
sub
mov
jno
jge
shl
xchg
sarl
push
or
dec
clc
stc
adc
imul
and
sub
cld
dec
in
iret
mov
in
mov
shr
scas
pop
inc
xlat
lea
and
shrd
xchg
movsl
dec
cmp
mul
adc
pop
gs
les
in
cmp
fwait
mov
sub
inc
jns
loopne
in
sbb
pop
addr16
mulb
test
fdivrl
pop
imul
data16
xchg
or
ret
add
jbe
cmpsb
xlat
data16
pop
aam
pop
mov
xor
add
stc
cs
xlat
and
jo
mov
cli
out
xor
xchg
loopne
jnp
adc
jb
arpl
push
dec
lods
cmp
push
add
add
mov
jns
lret
lcall
push
mov
daa
cs
xchg
dec
ljmp
xor
sbb
emms
movb
ja
mov
negb
fsubl
movsl
push
pusha
fisttpl
clc
loope
les
jb
addr16
and
jnp
addr16
test
push
stc
test
push
or
cmp
movsb
inc
cmp
fisubrs
or
jno
jbe
xchg
add
and
daa
mov
sahf
xor
mov
pop
or
mov
loopne
stos
leave
or
sub
adc
dec
stc
cmp
movsl
into
dec
mov
fistpll
adc
inc
pop
and
stos
int
loop
lret
test
std
adc
xor
mov
insb
add
ret
xor
and
sbb
inc
loope
sub
stos
mov
lcall
data16
inc
inc
fnsave
inc
adc
push
dec
cld
adc
jmp
ljmp
xchg
mov
ds
jmp
call
ret
sub
in
nop
addr16
xor
jb
insl
add
xchg
testl
shld
jns
lds
xorb
xchg
add
es
cmp
xchg
int3
push
adc
out
push
in
orl
ja
jne
popl
mov
jge
xor
out
inc
mov
jae
call
test
mov
jmp
mov
inc
int
nop
enter
jle
adc
push
or
ds
mov
push
pop
rcrb
shrl
pop
mov
insl
in
add
pop
fsubrl
rorl
gs
dec
add
test
mov
scas
xchg
in
jne
xchg
mov
mov
cld
xor
inc
lcall
and
fwait
push
xchg
sub
mov
mov
inc
fcmove
inc
fnstcw
or
sbbb
jecxz
mov
and
add
addb
rol
stos
popa
adc
lods
push
or
ljmp
mov
dec
xchg
xor
insb
out
mov
int3
movsb
add
into
int
stos
arpl
pop
cmp
fisttps
push
dec
push
sbb
inc
or
leave
mov
and
xor
mov
movsl
rcpps
jg
stos
repnz
inc
fisubs
sub
xchg
add
arpl
cwtl
mov
or
jg
ret
cmc
and
or
cli
ljmp
test
aam
xlat
dec
dec
pop
jge
cwtl
out
mov
inc
adc
and
sub
pushf
aaa
or
jno
push
xor
scas
mov
cmp
call
mov
ret
dec
es
adc
cmovae
add
push
push
gs
xor
or
fnstenv
bound
test
mov
xchg
push
rolb
shrw
insb
xchg
push
mov
cmp
fisubs
sub
cld
mov
dec
xor
jnp
lods
mov
mov
roll
push
movsb
inc
pusha
adc
shrb
push
inc
lock
sarl
or
cmp
cmp
add
cmp
mov
sub
pop
mov
out
pop
jmp
daa
push
icebp
add
jo
add
movsb
fimuls
mov
mov
mov
sub
in
xchg
ret
mov
or
jnp
lods
lds
mov
xchg
xor
int
in
xor
cmp
pop
xor
test
cli
arpl
jmp
iret
aam
pop
push
imul
mov
adc
push
fstl
lock
xchg
outsl
mov
xchg
push
adc
mov
add
sub
rol
in
test
in
mov
shl
stos
pop
shl
add
mov
add
jmp
sbb
hlt
outsl
add
or
cmpsl
mov
add
scas
push
call
pop
cld
movsl
push
imul
pop
cmp
adc
pop
mov
bound
cld
pop
jb
lods
fdivrl
nop
daa
test
jns
loope
clc
push
lcall
bound
ret
jge
imul
repz
xchg
mov
andb
mov
out
add
test
sbbl
rcr
stc
test
jp
stos
stos
sbb
cmpsl
lods
push
stos
es
aam
in
mov
mov
sti
insl
dec
xchg
xchg
out
push
and
jecxz
xchg
dec
out
fwait
sti
mov
into
lds
inc
popa
push
stos
hlt
mov
pop
lods
inc
lea
cmp
pop
repnz
xchg
cmp
pop
scas
cmp
addr16
sbb
cmp
mov
stos
mov
imulb
lods
sbb
cli
test
push
out
fstpl
mov
adc
dec
mov
cmp
outsl
push
pop
leave
fisttpl
fidivs
pop
je
mov
push
mov
push
xchg
pushf
lock
sarb
ret
add
ud2
orl
mov
loopne
out
push
test
sbb
outsl
cmpsb
lods
pop
lds
xchg
ret
fidivs
scas
lret
test
mov
mov
outsb
sub
arpl
mov
dec
xor
aas
pop
in
pop
xlat
cmp
or
xor
aad
push
fcomp
imulb
fdivrs
jb
push
sbb
pop
icebp
fs
sub
xor
stc
mov
loopne
lds
lahf
sub
add
pop
push
std
jns
lret
dec
gs
out
pop
cwtl
xor
push
inc
inc
jmp
cmp
lcall
es
popa
and
sbb
stos
mov
das
pusha
sbb
ficomps
mov
or
lea
xor
ja
mov
in
mov
jp
xchg
insb
sub
mov
pusha
lret
push
push
montmul
cmpsb
inc
xchg
test
adc
xchg
in
sub
dec
mov
rclb
sti
dec
testl
movsl
mov
daa
arpl
sahf
lods
inc
xchg
out
mov
mov
lret
inc
jnp
xor
adc
mov
sub
add
test
xor
or
daa
or
and
cld
xchg
popa
cs
lock
mov
aam
out
cmc
dec
icebp
mov
or
jg
ljmp
cmp
pop
fcmove
loope
test
popa
clc
sub
out
rcr
inc
add
insl
mov
test
sbb
in
scas
inc
fists
lds
sbb
mov
cwtl
stos
fisubrs
pushf
test
es
mov
outsb
add
insl
jae
sub
mov
loopne
pushf
xchg
out
mov
mov
push
outsb
jno
out
cld
stos
es
pop
mov
pop
mov
scas
sub
out
int3
sbb
nop
pop
movlps
jp
ds
repz
data16
lret
push
das
dec
cli
sbb
adc
shl
cwtl
hlt
insl
sbb
cli
inc
push
aaa
adc
sub
pop
jbe
bound
outsb
or
or
mov
push
in
sbb
in
icebp
pop
negb
and
repnz
iret
fdivl
je
dec
xor
dec
push
xchg
jge
cmpsb
icebp
iret
push
push
jle
pop
gs
mov
jbe
add
or
negl
mov
pop
cmc
fidivrs
pushf
mov
fbld
bound
push
enter
je
sbb
pop
repnz
popf
push
mov
sarl
mov
ljmp
add
xchg
push
ljmp
cmp
test
js
jecxz
adc
xchg
leave
jne
add
adc
mov
cmc
push
xor
adc
jo
jecxz
mov
xchg
daa
cmpl
bound
mov
xchg
jno
sbb
xchg
add
in
or
fcomps
jae
cmp
push
insl
push
pop
out
js
xor
lods
popf
shll
inc
shll
iret
adc
add
cmc
cmp
sub
popf
fiaddl
ljmp
mov
loopne
loope
dec
aad
cmp
in
push
ljmp
call
outsb
imul
jl
push
sbbb
imul
fs
or
ret
add
test
ja
mov
inc
andl
mov
clc
pop
lods
rorb
cmp
lods
jo
test
cmp
lods
add
push
cwtl
inc
loop
add
lcall
inc
enter
js
jbe
pop
cmp
mov
imul
mov
inc
into
repnz
cs
notl
outsb
adcl
lret
add
jno
cmc
xor
lods
std
and
mov
or
inc
mov
stos
pusha
mov
push
outsl
inc
or
outsb
popf
es
adc
pop
test
imul
in
push
or
outsb
add
jo
mov
sbb
addb
rclb
jecxz
xchg
push
roll
sti
cmc
ja
pop
jmp
dec
mov
notl
xor
insl
addr16
lahf
aas
loop
jns
mov
scas
dec
call
mov
xchg
or
out
add
outsl
xchg
add
mov
mov
sub
iret
pop
jne
nop
mov
xchg
loope
out
hlt
insl
xchg
mov
ret
sbb
mov
mov
aas
enter
jge
cmp
pusha
lahf
xchg
roll
push
mov
dec
pop
adc
pushf
std
jg
jecxz
push
aad
out
pop
mov
fs
xchg
popa
cmp
fiaddl
test
sub
cmp
cmp
jbe
push
mov
leave
into
xchg
fstpt
push
jge
mov
adc
shll
mov
fnstsw
mov
push
push
movb
pop
insl
lret
push
shll
adc
mov
adc
mov
jge
stc
sub
shrb
mov
pushf
dec
pop
shrb
cltd
push
mov
fiadds
jge
hlt
mov
data16
xchg
sti
fwait
xchg
sbb
data16
fdivs
divb
std
cld
sub
daa
cli
mov
pushf
jp
mov
cmpsb
fnstsw
mov
cmpsb
pop
jno
or
fmuls
xchg
les
movsl
data16
out
cld
xchg
adc
mov
dec
test
jmp
pop
insb
out
adc
aas
test
imul
sti
jge
push
lahf
xchg
enter
xchg
sub
arpl
movsb
cmp
dec
cs
cmp
and
insb
dec
leave
sbb
lea
aaa
repz
add
mov
mov
push
pop
icebp
jg
aaa
mov
xor
arpl
fdivrp
push
pushl
std
cltd
popa
mov
repz
out
dec
ret
iret
enter
jns
mov
pop
mov
xor
adc
mov
mov
aad
stc
fnstcw
inc
pop
inc
ret
rcr
dec
fstps
fs
push
pushf
movsb
cmpsb
aas
sub
pop
sub
imul
jle
int
ja
scas
xchg
jg
xor
jmp
push
lock
fists
gs
sub
mov
fucomip
bound
cmp
pop
mov
loope
xchg
xchg
xchg
or
cmp
sbb
ja
lock
loopne
or
mov
loopne
add
push
jl
xchg
pop
leave
popf
fdivs
scas
mov
add
push
sub
xor
scas
call
in
and
mov
popa
imul
pand
mov
call
cld
push
adc
push
mov
add
lods
jo
aam
sbb
shl
push
mov
dec
jle
addr16
lret
cmovbe
push
mov
lcall
cmp
mov
imul
or
push
dec
loope
in
repnz
cltd
fyl2x
xchg
arpl
inc
sbb
sti
mov
jle
mov
out
push
adc
loope
sub
fsubr
push
lods
inc
inc
fisttps
or
imul
xchg
in
dec
cmp
pop
mov
stc
nop
call
loop
outsb
pop
test
and
push
loopne
pop
mov
add
xchg
mov
jb
inc
sbb
jns
dec
jnp
adc
push
out
sbb
xor
mov
or
push
movsl
data16
or
mov
mov
or
mov
repz
push
ljmp
xchg
pop
cmc
push
mov
aas
xchg
push
mov
adc
xchg
sbb
aas
dec
jmp
nop
pop
add
inc
jl
jl
fs
push
fstl
sbb
lods
xchg
sbb
mov
lcall
scas
cmp
mov
xchg
add
sti
movsb
xchg
pop
push
out
idiv
pop
jne
movsl
test
pop
fldcw
rorb
lods
mov
cmp
stc
stc
cwtl
lea
sub
rep
ja
fsubl
push
push
jns
ja
jne
popa
cmpsl
jecxz
push
out
xorb
dec
and
mov
push
in
jbe
dec
pop
cwtl
push
les
sub
lahf
add
jae
pop
call
jnp
mov
in
movsl
jl
mov
jnp
sub
jp
pop
stos
arpl
dec
cmp
clc
lock
dec
nopl
popf
mov
or
call
xor
dec
add
arpl
cmp
pextrw
xor
push
psrad
stos
dec
mov
int3
cmp
xchg
insl
dec
push
insb
mov
iret
loop
xor
test
dec
outsl
cs
es
stos
sub
ret
idivb
stos
mov
mov
push
icebp
xlat
fldl2t
enter
xor
push
dec
in
aas
mov
and
lock
dec
lss
xchg
dec
and
jae
mov
inc
fildl
call
bound
test
mov
inc
cmpb
loop
pop
pop
jp
add
sub
pop
imul
push
dec
and
sbb
cmp
jbe
push
or
mov
nop
lea
mov
push
out
jnp
cmp
dec
mov
adc
ljmp
rorl
mov
popf
lods
arpl
stos
mov
fildll
add
xchg
cwtl
or
ss
insb
loopne
sbb
lds
pushl
orb
movups
shl
in
les
jnp
aas
leave
fisubrl
aaa
pop
arpl
add
loopne
push
adc
in
jae
push
jecxz
and
dec
dec
sti
lahf
mov
es
jmp
inc
adc
pop
in
xor
jmp
leave
loope
insb
lock
imul
mov
and
add
scas
fildl
outsl
loop
out
ffree
jbe
and
repz
sahf
int3
fs
iret
push
lock
pop
lret
jbe
cli
ljmp
and
push
pushf
and
ss
clc
push
pushf
in
into
xor
xchg
in
xchg
pop
shrl
xor
pop
push
push
push
and
jecxz
mov
push
and
mov
sti
pop
push
mov
enter
add
xor
mov
mov
popa
fdivrl
push
jne
push
enter
jb
mov
shrl
sub
sbb
jmp
fwait
and
xor
pop
mov
inc
pusha
sub
std
xchg
jo
fistpll
dec
xchg
fcmovb
mov
push
and
cmp
push
push
or
daa
mov
pop
fldcw
shll
dec
dec
aam
jp
pop
mov
adc
vunpckhps
xchg
xor
xor
jmp
daa
das
xchg
pop
testl
sub
mov
lods
ret
or
aad
fistps
mov
add
test
sbb
inc
insb
roll
sub
cli
cmpsb
mov
jg
mov
fcompl
mov
mov
dec
out
test
lds
xor
fiadds
pop
pop
add
mov
notb
in
sahf
sar
inc
mov
cmp
gs
push
adc
mov
pop
stos
xchg
xchg
je
aaa
push
cmpsb
aaa
push
pop
xchg
xor
and
mov
data16
push
inc
sbb
fwait
xor
mov
daa
pop
in
inc
lcall
fwait
push
pop
lods
js
ja
lret
shl
mov
sbb
pop
or
dec
push
xchg
jle
test
rcll
hlt
mov
fidivrl
loopne
or
mov
inc
cmp
pop
in
stos
ret
pop
pop
lea
call
fsubs
xor
jns
rorb
and
popl
rorl
xchg
xchg
pop
mov
jecxz
mov
mov
xor
dec
mov
or
addr16
das
imul
jecxz
bound
add
dec
sbb
jl
cmpsb
pop
cmp
mov
push
mov
stos
add
cmpsl
sub
push
push
mov
sbbb
or
pop
imulb
inc
stc
test
shl
xchg
cmpsl
ja
out
bound
enter
shl
pop
jnp
inc
inc
mov
ja
enter
icebp
mov
xchg
jnp
fldenv
push
inc
iret
xchg
je
ss
xor
test
xlat
cmp
mov
jmp
stos
mov
adc
add
clc
mov
popf
sbb
in
test
jae
lea
sub
inc
out
mov
push
and
xor
andl
hlt
adc
xchg
xchg
push
xor
pop
test
stos
mov
loop
cld
jl
shrb
mov
jno
data16
xchg
jbe
outsb
fdivrs
sbb
stos
fstpl
ja
or
movsb
mov
mov
sarl
clc
xlat
and
aas
aad
xchg
cmp
jg
or
cmp
jp
and
rcll
sbb
fisttps
jge
imul
dec
aas
vpsllq
cld
int
cmp
fdivl
sbb
pop
iret
leavew
dec
xor
ret
sbb
je
fmuls
xchg
xlat
cmp
mov
lods
mov
lds
movsb
adc
mov
sbb
mov
adc
push
xchg
push
lret
das
push
and
dec
dec
scas
mov
in
xchg
js
pop
outsb
xlat
fwait
pop
add
es
scas
cmp
in
lea
mov
imul
adc
adc
je
or
mov
or
add
divl
ljmp
sub
jb
xchg
xrelease
sbb
push
out
clc
clc
stos
sub
gs
pop
fs
mov
divb
push
jb
sub
inc
mov
lcall
lcall
ljmp
push
call
mov
push
jl
cmp
push
cltd
sbb
sti
ljmp
adc
jp
stos
push
dec
jne
std
inc
loop
sbb
mov
filds
or
jl
cmp
mov
xchg
inc
push
fs
push
xchg
in
movsb
mov
nop
sbb
inc
sbb
test
out
pushf
fwait
xchg
imul
cld
rolb
sbb
ljmp
add
xor
cltd
test
fsub
out
mov
std
add
jae
and
faddp
loopne
loop
cmp
mov
mov
push
stos
dec
cmp
outsb
lock
sbb
jmp
xor
fists
push
mov
xchg
mov
rolb
cmp
mov
inc
xchg
lahf
call
data16
inc
lock
out
lret
ficoms
cs
aad
jg
mov
add
mov
push
loop
mov
scas
imul
imul
sub
aas
lock
push
icebp
ffreep
adc
jbe
out
cmpsl
pop
or
jno
push
aaa
cld
pop
sbb
iret
mov
add
dec
sub
pop
add
mov
mov
xchg
xchg
pop
pop
jno
mov
cwtl
aad
rorl
mov
cmpsb
mov
inc
mov
dec
or
and
insl
dec
cmp
mov
xor
sub
pushf
sub
into
or
add
daa
stc
adc
xchg
xor
push
mov
mov
mov
mov
cmp
lcall
out
loope
push
xchg
mov
cmpsl
decl
sahf
cmpl
jae
cmpsb
push
ds
sti
sbb
sbb
stc
in
sbb
pop
push
lcall
mov
outsl
and
mov
idivl
in
adc
mov
out
daa
fwait
push
popf
test
mov
pushf
out
setg
adc
xor
popf
xlat
stos
cmp
cwtl
daa
jl
lcall
popa
sub
mov
call
mov
stos
and
xor
pop
lock
or
or
dec
pop
pop
mov
mov
inc
shlb
pop
xchg
mov
sub
stos
adc
test
mov
push
xor
loopne
mov
sbbb
dec
leave
mov
repnz
cmp
mov
movsl
cmp
test
mov
xor
les
fdivp
subl
sub
pusha
idiv
cmp
es
mov
mov
xor
push
xchg
sbb
mov
out
imul
adc
mov
xchg
or
and
pusha
clc
jne
cmpsb
adcl
imul
pop
popa
pop
push
mov
iret
jmp
jmp
adc
rcll
sbb
and
nop
push
icebp
xchg
add
cmpsb
ret
nop
push
cmpsl
sti
or
sar
mov
dec
fisttpl
inc
push
daa
arpl
mov
mov
call
rcll
adc
push
icebp
xchg
popa
xlat
pop
or
dec
loope
inc
icebp
pop
pop
mov
or
or
dec
xchg
imul
sub
add
push
imul
cld
jp
mov
in
mov
xchg
or
push
arpl
pop
cld
arpl
movsl
push
jle
inc
lahf
or
mov
or
enter
cmp
ret
nop
test
mov
cmp
movsl
in
rcl
addr16
out
scas
xchg
rcrb
les
das
inc
dec
inc
inc
push
aaa
add
dec
xchg
and
arpl
enter
inc
inc
clc
test
bound
mov
faddl
add
pop
pop
lea
in
test
jnp
and
sbb
and
push
scas
mov
adc
ds
out
test
fidivs
into
jb
push
mov
test
sets
xchg
daa
jl
push
mov
pop
cli
imul
gs
xchg
mov
bound
std
pusha
dec
adc
add
daa
push
push
add
pop
cmp
fwait
les
and
lret
cmp
xlat
pusha
jle
sti
aaa
insb
sti
popa
mov
mov
mov
sar
adc
adc
ds
sbb
adc
repnz
push
jbe
pop
test
and
fists
fdivl
cld
iret
or
pop
xor
fidivrl
sub
cmpsl
out
sbb
imul
mov
or
sbb
outsl
push
stc
pop
shrl
xchg
and
adc
int3
add
mov
outsl
sub
lcall
in
inc
shl
shl
push
dec
sub
xor
dec
inc
enter
rcll
sbbb
add
jmp
test
sahf
js
xchg
lods
repz
mov
divb
mov
xchg
rcrb
add
dec
push
and
fwait
push
inc
lret
jno
test
popf
xor
ljmp
jg
movsb
aaa
adc
fidivl
pop
ffree
jae
inc
cmp
jp
repnz
mov
loopne
cmc
jecxz
pop
mov
mov
test
dec
clc
push
into
dec
fcoms
mov
inc
inc
ds
cmpl
fs
js
loop
sub
aad
push
mov
ret
ffree
popf
dec
les
loopne
cmp
call
mov
jns
mov
ret
test
imul
lcall
test
push
adc
call
scas
and
pop
jg
mov
pop
xchg
repz
add
outsb
sarl
sbb
in
sub
fldcw
inc
fstpl
cld
adc
aam
fidivs
in
jl
xchg
adc
clc
mov
ret
std
shlb
in
cwtl
inc
sub
push
ss
fnstcw
inc
pop
sub
lcall
add
push
imul
push
fs
or
inc
pop
jmp
push
fnstsw
ljmp
sub
mov
out
lods
je
push
or
mov
jb
and
pop
or
push
int
dec
fwait
mov
dec
aad
jnp
aaa
push
or
pop
addr16
mov
pop
scas
sub
rcrb
cmpl
sbbb
cmpsl
add
fdiv
sti
pop
add
dec
fldl
inc
lret
movsb
fists
mov
cmpsb
or
adc
scas
or
jg
aas
dec
mov
xchg
push
mov
into
lds
movsl
dec
and
mov
push
stos
out
push
add
icebp
or
aas
pop
cli
cmp
push
outsl
jno
mov
jbe
xor
shl
fwait
sbb
mov
insb
jae
adc
lds
fndisi(8087
movsl
dec
jne
fnstenv
fisubrs
jns
shl
mov
out
rcrb
mov
pushf
mov
sub
pop
rcl
clc
dec
mov
ret
stos
pop
mov
mov
lods
inc
out
ja
dec
fcomp
dec
stos
sti
imull
fwait
cmpsl
bnd
pop
cmp
lock
call
loope
or
add
arpl
outsl
jnp
test
and
push
mov
leave
push
je
or
mov
add
xchg
cmp
int
aaa
insl
push
jmp
xchg
scas
ds
mov
imul
rorl
aam
dec
or
mov
nop
stos
loopne
and
adc
xchg
cwtl
js
test
adc
xor
and
js
push
pop
mov
fnsave
stc
xchg
mov
or
lahf
cwtl
cld
data16
loope
fstpl
or
or
cmc
push
popf
mov
les
pop
insl
jbe
sarb
push
loope
fdivs
ficoms
mov
or
arpl
dec
sahf
inc
or
add
and
mov
gs
mov
fwait
and
pushf
dec
cmp
aam
cmp
jb
xchg
out
push
pop
jmp
push
movsl
jmp
or
pop
aaa
pop
push
in
test
popf
faddl
sbb
dec
fldt
popf
pusha
add
imul
pop
jnp
xlat
pushf
or
xchg
mov
push
adc
popf
xor
and
mov
fsubr
xor
test
pop
inc
xor
js
xor
jo
aaa
xchg
add
sbb
push
mov
into
jne
xor
inc
mov
xchg
jns
inc
fwait
in
jp
das
loope
insl
and
hlt
mov
mov
ds
xchg
lods
push
pop
sahf
sub
sbb
dec
mov
outsl
fadds
push
inc
je
out
lret
cmpl
out
test
mov
jmp
movb
cs
aam
aad
pop
cmp
add
scas
mov
jo
lock
xor
std
ljmp
xor
mov
or
mov
test
push
xor
cmp
pop
sub
xchg
cmp
jp
mov
bound
inc
jbe
ror
stos
fdivp
fucomi
jo
and
mov
jbe
jnp
popf
js
sbb
add
push
mov
inc
int
sub
out
repnz
das
mov
fdivl
xor
test
push
leave
jo
cltd
pop
jmp
mov
in
lcall
cmp
add
dec
jnp
cld
push
subl
lds
arpl
sub
in
add
add
punpckhbw
mov
iret
flds
and
xchg
fs
cltd
insb
ret
mov
pusha
dec
icebp
pop
sub
sbb
stc
mov
xor
cmp
mov
iret
mov
les
jecxz
or
popa
cmpsl
push
dec
xor
in
ret
lret
call
cmp
les
mov
cmpsl
div
addb
lahf
adc
xchg
cld
cmp
adc
stos
xchg
lret
sbb
sub
orl
out
jno
repnz
lret
bound
add
les
push
push
adc
jne
mov
add
out
mov
xchg
jle
push
mov
inc
sar
popf
add
jp
sub
push
pop
fisttpl
fs
mov
outsb
into
je
add
push
dec
mov
lahf
and
add
mov
lretw
cld
mov
notl
pop
jno
dec
jge
ja
adc
push
out
xchg
mov
enter
add
cmp
rcl
mov
cwtl
add
loope
arpl
loope
cmp
xor
rcrb
jl
pop
jp
lods
inc
shlb
cltd
pusha
sahf
aad
cli
cltd
xor
fisubs
mov
loopne
jb
scas
jno
loopne
in
movsl
rcll
icebp
imul
inc
enter
sbb
mov
cli
push
testl
leave
aad
sti
mov
imul
pop
xchg
test
aad
mov
fiadds
and
dec
cmpsb
clc
in
jnp
xchg
cmp
cltd
xor
and
mov
mov
push
testl
push
imul
scas
xchg
ror
aaa
jl
dec
scas
adc
and
jmp
mov
orb
dec
lds
in
enter
xor
and
sbb
sti
aas
fwait
push
xor
test
adc
push
jno
inc
mov
push
push
jg
fcoml
jge
sbb
sbb
decl
mov
xchg
int3
add
sarl
aas
mov
data16
jae
inc
pusha
int3
adc
lahf
mov
das
out
popa
int3
das
pop
xor
pop
ds
xchg
add
fscale
lret
sbb
mov
mov
and
popa
in
popa
out
sub
jo
es
xchg
pop
jbe
push
ja
cmpsb
je
sbb
lahf
rolb
cmp
fs
jae
xchg
mov
add
fwait
stc
mov
cmp
popa
fdivrl
xorl
jbe
and
in
push
bound
ret
push
inc
pop
inc
xor
dec
loopne
mov
dec
pop
cmp
in
test
inc
adc
pop
xchg
mov
lahf
mov
imul
fdivs
cmc
in
lods
fistl
in
sbbl
inc
push
xchg
add
mov
add
daa
jl
jb
out
addr16
cmp
imul
push
ds
mov
adc
cmpsb
jo
mov
push
in
xor
std
cmp
fnsave
sahf
out
test
imul
jo
pop
jle
sahf
popa
dec
stos
xchg
div
int3
xchg
aas
mov
out
movsl
or
int
dec
loopne
push
lds
mov
jmp
jns
jmp
inc
inc
mov
not
push
inc
mov
adc
mov
lret
xchg
inc
inc
mov
mov
jns
or
sbb
pop
int
push
cmc
shrl
mov
scas
push
push
xchg
cli
testl
test
in
ss
fadd
rcrb
jbe
in
ret
add
stos
ss
test
xor
sti
shrb
adc
or
pop
sub
sub
pop
add
das
repnz
adc
mov
in
add
add
push
in
test
xor
movsb
movsl
je
or
fimuls
sbb
jbe
xor
or
or
mov
xor
mov
out
mov
pop
outsl
loopne
leave
push
fwait
sub
dec
jbe
inc
and
inc
lret
mov
mov
sbb
mov
mov
mov
inc
inc
push
lret
jg
std
mov
sbb
pop
in
pop
lea
loope
mov
test
fisubrs
mov
test
sub
fnsave
add
mov
les
xor
les
sub
adc
xor
es
push
or
add
xchg
adc
aam
int3
jns
cmpl
jbe
out
sub
adc
ss
cmpb
mov
ja
mov
es
lds
out
mov
inc
mov
enter
xchg
sub
push
mov
movsb
aam
dec
imul
sbbl
int
aam
insb
and
sbb
scas
addb
call
scas
adc
dec
pop
repz
call
xchg
insl
jmp
dec
mov
ret
mov
in
test
push
push
xchg
push
add
mov
scas
movsb
or
push
std
jecxz
or
add
daa
addb
out
fwait
cmp
xor
pop
in
lock
out
push
mov
lds
leave
pushl
pop
fstpl
lahf
xor
adc
push
xchg
mov
mov
xor
incl
in
push
or
mov
sub
dec
jne
std
ja
test
pop
test
arpl
pop
int3
or
xchg
xchg
daa
adc
pop
popf
or
iret
sbb
lock
jne
mov
jno
push
add
push
inc
sbb
test
aas
fdivp
pop
out
add
in
arpl
scas
pop
adc
int3
jno
or
push
cs
and
test
repz
pop
cmpsb
adc
inc
sub
mov
iret
loope
mov
mov
outsb
or
in
test
lods
mov
mov
loope
sbb
push
xchg
mov
clc
sub
jp
popa
mov
lods
cmpsb
imul
sbbl
push
xor
mov
out
clc
xchg
xor
cld
mov
lcall
pusha
je
sub
fisttpll
jno
and
pop
or
sbb
lea
add
and
push
adc
push
icebp
cmc
outsb
mov
sbb
test
add
aam
mov
mov
jecxz
enter
dec
in
jle
fmuls
fstl
jbe
scas
lret
addr16
push
push
push
rorb
test
adc
cmpsb
mov
fbstp
xchg
mov
sbbl
or
lods
fildl
aaa
in
std
popf
mov
sub
iret
mov
add
into
xchg
push
pop
test
mov
test
lods
ljmp
inc
fiaddl
data16
test
lock
add
jno
mov
xchg
sbb
scas
push
xor
sbb
push
lcall
jb
mov
in
shl
sub
lods
notb
rolb
faddl
cmp
pop
lock
add
jbe
adcb
repz
mov
xchg
gs
add
push
mov
aam
inc
loope
fstpl
pop
insb
rolb
dec
ds
mov
or
aaa
sub
sub
push
dec
bound
adcb
insb
xor
push
rcrl
cmpsb
movsl
outsb
mov
shlb
pop
mov
ret
repz
in
push
jbe
fstpt
cwtl
inc
mov
mov
inc
mov
dec
mov
and
or
and
adcb
lcall
and
fldt
addr16
out
pop
xor
andl
mov
fs
fisubrl
roll
push
jmp
dec
sarb
jb
loopne
repnz
scas
sub
shlb
aam
iret
pop
sarl
mov
jb
cld
mov
jmp
mov
xchg
test
mov
lea
cmpsl
movsb
pop
cmc
xlat
scas
xchg
pop
hlt
jecxz
adc
mov
add
sbb
test
outsl
negl
and
ds
dec
mov
cmp
inc
fyl2x
or
test
outsb
xchg
js
hlt
add
push
pop
icebp
pop
adc
repz
out
cmp
mov
fildl
aas
and
data16
jbe
cltd
lret
lret
xchg
mov
sbb
hlt
bound
jecxz
inc
mov
arpl
cmp
mov
and
fs
test
inc
xchg
test
xchg
mov
adcl
jno
addl
out
cmc
lcall
outsb
daa
sub
jle
push
mov
pop
sarb
mov
fstpt
mov
jb
stos
or
adc
lea
or
mov
jb
xchg
xchg
xchg
test
das
inc
sarb
js
enter
jb
loopne
fwait
mov
add
push
lret
xchg
fdivl
or
cltd
add
adc
jno
ror
test
push
push
dec
dec
repz
lods
fcoml
rcrl
dec
cmp
push
dec
cmp
loopne
daa
xchg
movsb
pop
pop
add
jns
mov
lret
inc
pop
rcrl
and
gs
mov
out
inc
cmp
and
dec
sub
gs
pop
xor
sub
popf
outsb
dec
push
and
scas
mov
jge
and
push
push
or
mov
int
cmp
rclb
adc
imul
test
mov
fisubs
iret
adc
scas
mov
sbb
rclb
pushf
in
imul
push
fs
push
scas
adc
fbstp
add
movl
lret
push
imul
sbb
adc
adc
xor
bound
mov
fsubs
test
lods
inc
xor
fsubr
or
insb
test
lret
mov
cltd
dec
rorb
sub
jno
fildl
sbb
in
mov
or
in
mov
stc
adc
fstpt
lods
add
mov
repz
inc
xchg
repnz
mov
inc
sbb
jg
jmp
pop
insl
xor
sub
adc
jp
cmpsl
and
aas
jbe
into
pop
ja
ficoms
cli
and
rcl
outsb
aad
dec
ret
scas
mov
pop
inc
scas
inc
arpl
dec
and
stc
sub
jmp
xor
sbb
xor
or
mov
xor
xor
outsb
dec
push
jae
lea
xchg
adc
sbb
notl
sub
jnp
dec
stos
std
hlt
cmp
dec
popa
dec
mov
cli
add
std
dec
pop
das
std
mov
sahf
cwtl
je
xchg
mov
cmpsb
decb
sbb
sbbl
inc
push
push
push
icebp
xor
imul
mov
aaa
int
mov
inc
sub
pop
rcl
or
outsl
jg
mov
push
xchg
int3
into
fs
mov
or
xchg
test
rol
iret
lods
popa
push
push
jne
idivl
test
xchg
xor
jne
lcall
movsl
arpl
cmp
pusha
aaa
mov
mov
push
in
xchg
mov
mov
fcmovbe
dec
mov
popf
push
lods
daa
stc
push
das
in
inc
aam
pushf
jo
movsl
das
addr16
pop
out
pop
gs
inc
jg
mov
jmp
jb
int
add
xchg
lea
lahf
jne
stos
arpl
xor
shl
repnz
popf
sbb
pshufw
aas
sbb
cld
and
cmp
imul
shll
push
jge
shll
adc
outsl
cmp
push
cmp
xor
jns
cmp
and
mov
adc
sahf
testl
jno
cmp
jl
push
pop
out
enter
pop
insl
jbe
sbb
rcrl
cmp
add
mov
shll
stos
inc
cmp
mov
pop
xchg
push
xor
and
xchg
cmp
cs
and
xchg
add
push
fidivl
sti
xchg
adc
jns
inc
mov
sbb
dec
fsubrs
and
jne
sbb
jns
mulb
sub
push
stos
push
mov
shlb
sbb
jge
add
or
push
arpl
mov
ljmp
outsl
sub
mov
jle
adc
mov
mull
sub
mov
mov
cmp
jl
hlt
into
imul
insb
sub
mov
loop
dec
in
pop
idivb
jbe
imul
shl
jg
mov
rorb
and
imul
cmpsb
outsl
cmp
loopne
fwait
outsb
sti
sbb
mov
pop
hlt
cmp
in
jne
pop
pop
mov
push
fwait
aaa
dec
data16
jno
jns
or
sahf
jno
mov
dec
push
test
jae
cmp
add
jb
pop
mov
test
jne
fistl
xor
je
adcb
pop
repz
push
mov
cmp
jp
adc
movsl
sbb
pop
out
jmp
xor
inc
xchg
mov
fwait
decb
mov
xchg
movb
pop
dec
add
fs
mov
mov
lea
dec
cmpsb
mov
cli
xlat
cld
ret
or
push
push
mov
xchg
jae
fmuls
lahf
jl
jbe
lahf
jo
jnp
cmp
iret
insl
cmpsl
call
imul
jae
adc
mov
idivl
in
pop
mov
xor
ds
enter
test
or
cmp
popa
add
shl
mov
or
inc
neg
xor
sbb
pusha
dec
jmp
je
sbb
js
push
lods
pop
popf
add
stos
dec
pop
sub
ja
jbe
fs
stos
xchg
xchg
lods
jb
and
gs
cmp
adc
mov
repnz
cmp
iret
es
add
bound
sub
rolb
aam
pop
mov
jmp
sbb
pop
pop
ror
adc
and
ret
sbb
mov
loope
popf
push
sbbb
push
and
mov
aaa
jo
fidivl
cmp
sti
jbe
notb
test
add
shll
loopne
and
lds
sti
fnstsw
loope
sti
adc
negb
jecxz
es
mov
pop
mov
imul
push
xchg
cmp
in
cmpsb
push
jo
and
imul
sbb
dec
add
cmp
imul
rcl
ret
ret
shll
repnz
adc
lret
bound
inc
lcall
pop
cwtl
jg
lcall
jp
dec
mov
add
ljmp
jo
stos
mov
inc
test
popf
xor
lret
lods
inc
push
daa
arpl
call
leave
dec
add
outsl
dec
gs
pushf
xor
enter
mov
std
andl
push
sti
sahf
sub
imul
sbb
mov
popa
sti
mov
movzbl
imul
sub
stos
pop
inc
fisttpll
lea
mov
int3
sub
or
xor
jae
out
dec
out
mov
ljmp
repnz
aas
aas
mov
mov
mov
fst
sbb
xor
out
in
scas
sbb
aaa
mov
clc
sbb
ret
in
cmpsb
sub
je
pop
sub
add
xchg
test
mov
add
mov
sbb
ret
add
int
mov
sarl
adc
jmp
mov
push
jle
std
inc
fldcw
xor
lds
in
mov
aad
dec
insb
cmp
dec
sub
mov
mov
repnz
adcl
daa
mov
jns
rorl
mov
or
cmp
or
fucompp
inc
pop
arpl
aad
jae
mov
inc
mov
jns
stos
rcr
sbb
jle
mov
push
push
xor
ds
jae
cli
lret
jae
inc
into
xchg
pop
or
rcll
ret
hlt
xlat
adc
jo
mov
mov
loope
sub
xchg
addr16
pop
icebp
mov
in
cmp
push
ret
outsb
imul
pop
ret
mov
pop
mov
sub
jo
pop
mov
ret
mov
jmp
iret
sbb
jo
sarb
ds
loope
pop
cmpb
mov
xchg
into
popa
ljmp
inc
enter
ret
cli
int
out
shrl
xadd
outsl
sbbb
adc
sbb
xchg
iret
mov
add
mov
dec
in
mov
mov
cmp
movsb
mov
xchg
scas
cmc
jnp
nop
jb
mov
imul
push
xchg
test
cmpsb
out
mov
mov
out
jbe
cwtl
fidivl
lock
jbe
cmp
mov
mov
cld
outsl
cmp
repnz
loop
dec
adc
sub
out
sub
sbb
jge
std
mov
mov
cmp
out
mov
push
cli
repz
out
fwait
sub
push
push
or
aam
push
or
jp
push
lock
imul
or
push
es
mov
fs
xchg
mov
cwtl
callw
mov
pop
push
jge
push
cmp
test
sbb
inc
inc
pop
lock
push
arpl
mov
aas
outsb
and
popf
xor
fmul
mov
cli
out
test
pop
fidivl
cmp
mov
push
ret
jmp
inc
mov
mov
dec
mov
mov
sbb
pop
int3
inc
jns
ds
fbstp
mov
lods
sbb
cwtl
or
daa
mov
dec
gs
arpl
mov
or
xchg
cmpsb
or
sti
stc
sub
lret
xchg
dec
nop
pavgw
in
xchg
or
inc
inc
push
ret
hlt
incl
mov
xchg
fwait
jno
sub
rolb
popf
addr16
iret
in
sti
mov
je
dec
mov
adc
leave
xchg
inc
cmpsl
enter
sub
cltd
jo
ljmp
jnp
lea
bound
adc
or
sbb
aad
mov
push
sarl
mov
movsb
test
mov
int
sbb
movsb
outsb
add
scas
jle
jno
into
enter
cmpsl
fdivs
outsl
adc
inc
test
pop
and
pop
out
stos
aas
imull
sbb
sub
sub
cwtl
mov
inc
mov
pop
push
or
das
dec
loopne
insb
popa
fcompl
addr16
cmc
inc
ficoms
mov
mov
test
add
push
das
mov
sbb
enter
pop
lods
popa
cmpl
pop
xor
enter
repz
or
and
insb
push
mov
mov
jne
sbb
push
mov
lret
cs
arpl
in
sti
loop
cltd
dec
and
xor
fsubr
add
rcr
lock
repnz
lea
push
mov
cmpsl
jmp
test
mov
mov
pop
hlt
jp
push
mov
cmpsl
shrl
std
imull
mov
insb
add
lods
or
xchg
out
jge
mov
mov
pop
pop
adc
add
ds
mov
scas
repz
stos
mov
int3
into
mov
mov
push
or
cmpsw
ret
mov
mov
push
shll
add
mov
lahf
aad
fdiv
movsb
add
dec
fidivl
out
lea
cli
or
stc
sub
inc
pop
repz
mov
sub
mov
dec
mov
sbb
ljmp
cmp
and
and
or
fimull
cmp
mov
stc
fidivrl
xor
cmpb
pop
mov
cld
idivl
cmp
rol
jns
sbb
dec
sbb
popf
pop
rclb
imul
fnstcw
jnp,pn
cmp
fisubl
call
mov
cli
inc
mov
cli
mov
dec
rcrl
icebp
cmp
pop
ret
add
in
aaa
sub
cmp
add
inc
pop
incl
xor
in
xor
in
push
pop
data16
mov
cmp
gs
add
sarb
mov
or
pop
ret
mov
sub
rcrl
mov
inc
lds
cmp
idivb
aaa
jo
out
dec
add
push
and
jl
je
or
lods
xchg
xorl
sti
scas
aaa
aas
mov
cmp
cmp
sahf
mov
pop
aas
mov
repz
ljmp
pushf
mov
notl
push
insb
sbb
pop
fisubs
xchg
mov
xchg
in
xor
xor
push
xchg
jp
jae
inc
rcrb
xor
xchg
test
mov
into
fiaddl
orl
loopne
jbe
enter
insl
cld
pop
data16
mov
sbb
mov
or
cmp
or
das
int
mov
shr
stos
pop
adc
jle
fcomi
cli
and
xchg
rclb
jnp
jmp
xor
push
inc
cli
adc
in
std
cwtl
dec
mov
push
mov
adc
mov
xchg
sub
jg
imul
ljmp
into
mov
mov
std
jno
xor
adc
dec
imul
xorb
movsl
cmp
por
cmc
and
inc
and
repz
rcrb
inc
fadd
pop
scas
idiv
jno
fisubrs
jg
mov
add
add
aaa
xchg
div
cld
xchg
mov
push
sbb
inc
inc
scas
mov
xor
in
xchg
sbb
out
xor
adc
gs
ss
xchg
add
sbb
pop
fimull
mov
hlt
or
ss
ljmp
divb
test
jno
lret
or
arpl
jp
daa
imul
pop
mov
dec
mov
mov
pop
shrb
loop
xlat
fdivr
shll
mov
sub
icebp
pop
mov
or
add
pop
sub
pop
stos
cmp
pusha
jne
cmp
inc
or
in
jo
int3
and
jb
cmc
shrb
add
in
push
lock
and
ss
jmp
jne
jle
push
xor
scas
inc
adc
xchg
or
jg
sub
pop
out
rcll
icebp
xor
and
stos
hlt
sti
rol
scas
cmc
push
stos
in
dec
push
repz
or
and
les
push
jmp
lea
push
es
mov
int
int
dec
jp
and
push
and
fsubrl
inc
cmpsl
shl
mov
pushf
in
repnz
in
shll
ljmp
pop
dec
mov
mov
push
inc
mov
in
ret
mov
pop
push
xchg
push
mov
add
lods
std
test
fdivl
push
xchg
xor
dec
inc
mov
imul
popa
push
mov
xchg
sub
push
ret
mov
repnz
push
out
xchg
push
in
mov
lahf
mov
call
push
lret
sti
js
jle
or
push
aad
out
push
mov
xor
add
adc
jns
push
sbb
push
push
in
xor
push
out
loopne
out
int3
pop
or
cmp
cmp
add
and
data16
mov
repnz
jnp
cmp
ficompl
je
xor
stos
out
xchg
les
cmpsb
mov
shl
add
inc
xchg
dec
lahf
dec
xor
xchg
test
mov
push
je
xchg
loope
xchg
int
xlat
add
jecxz
sbb
pop
inc
push
pop
test
int
loop
fmull
test
pop
outsb
jnp
mov
in
cmpl
xchg
pop
enter
je
xor
cmpb
xor
inc
inc
and
andb
nop
inc
sub
mov
add
sar
mov
lods
imul
adc
fistps
das
pop
loop
bound
mov
pop
mov
sbb
mov
mov
dec
sahf
and
sub
jae
mov
pop
or
dec
insb
push
icebp
mov
call
inc
inc
jb
popf
movsl
xchg
mov
repz
pop
mov
subb
cmp
dec
test
mov
ss
inc
add
sub
test
mov
imul
cli
mov
aam
inc
add
jbe
xlat
cmpsl
push
clc
cmpsl
lret
dec
or
pushf
xor
pop
neg
push
movsl
xchg
cli
jge
lods
or
sub
into
sub
mov
xor
outsl
add
mov
mov
leave
les
movb
sti
xor
add
insb
int
xchg
mov
lods
jo
pusha
dec
mov
pop
push
sbb
push
push
andl
ret
into
das
xor
xchg
movsl
push
xchg
mov
mov
cs
sti
jns
pop
inc
rcll
int3
cmpl
push
ljmp
jno
mov
xlat
push
push
inc
adc
cmp
aad
sbb
jge
xlat
mov
cmpsb
inc
xor
jbe
or
fnsave
fisubrs
sbb
add
in
xor
mov
in
push
push
sub
std
xlat
mov
mov
fcompl
ficoms
sahf
sub
repz
mov
daa
lcall
cmp
es
xor
jae
shlb
loopne
pop
out
fcompl
xchg
push
xchg
or
inc
fsubrl
and
mov
dec
mov
sub
mov
push
andb
inc
fsubl
fs
mov
lahf
mov
je
pushf
movsl
sub
mov
and
out
aas
jnp
mov
mov
pop
inc
aad
scas
iret
arpl
incb
cli
dec
loope
xor
dec
sbb
or
fldenv
dec
add
pop
repnz
mov
mov
sarl
lret
xchg
mov
mov
sbb
daa
jbe
cmp
dec
or
lcall
popa
decl
lea
cmp
dec
loope
pop
dec
loop
pop
nop
dec
inc
cmp
mov
fldl
popf
cltd
dec
jle
cmp
sbb
outsb
push
xlat
out
or
ds
cmp
dec
jecxz
inc
fsts
mov
or
mov
bound
mov
or
daa
cmp
jmp
pushf
popa
xor
xor
lret
sub
ljmp
pop
cltd
test
pop
jno
mov
sub
pushf
mov
push
or
outsl
rcrl
jmp
mov
sub
insl
lret
xor
xor
shll
xchg
add
les
stos
sbb
fstpt
mov
aas
or
sahf
push
and
ds
xchg
pop
and
cmp
push
or
pop
push
mov
xor
dec
or
repz
aam
filds
xchg
pop
hlt
inc
das
cmpsb
les
jge
pop
push
dec
dec
mov
push
pop
pop
arpl
sar
popf
xor
pop
or
ss
out
mov
push
cmp
add
into
inc
xlat
jmp
mov
or
dec
mov
cmp
shl
mov
ja
inc
mov
shr
lret
jae
arpl
mov
inc
lds
adc
ss
icebp
cmpsl
jp
rclb
in
stc
jns
lcall
in
jb
mov
nop
loope
mov
imul
jle
lahf
pop
rclb
dec
pop
or
popf
pop
inc
dec
mov
lock
xchg
movsl
insl
jne
sbb
int
sbb
inc
lahf
push
pushf
dec
dec
xor
ljmp
mov
dec
pop
mov
push
or
ds
pop
mov
fcompl
mov
cmp
mov
iret
lret
subl
into
and
push
notb
xchg
or
ss
pop
dec
add
addb
or
cwtl
iret
jno
cmp
lock
sub
enter
xchg
mov
cmp
adc
xlat
fisubs
insb
js
xchg
stos
xchg
mov
ret
jb
in
cmp
cmc
xchg
je
pop
mov
stos
sub
mov
aad
xor
jbe
or
push
ljmp
or
xor
lret
cli
aaa
out
xor
mov
mov
or
and
dec
adc
pop
and
jno
repz
js
lret
pusha
mov
lea
cli
fadds
jo
pop
pop
mov
cli
xor
movsb
or
sbb
lods
jp
and
shll
mov
imulb
leave
or
sbb
dec
pop
loope
xchg
lock
aas
shl
add
movsb
mov
push
mov
mov
lret
sti
shll
jo
jae
xchg
push
cmpsl
icebp
das
xchg
dec
xchg
sub
push
push
arpl
mov
or
xlat
mov
in
popf
sub
rcl
out
ret
roll
sub
push
fld
pop
or
outsl
fmull
lret
pop
scas
stos
xor
shll
push
cmpsl
xchg
gs
bound
shrb
jecxz
sbb
ds
pop
mov
jne
data16
lods
ljmp
pushf
mov
jo
call
inc
jle
inc
add
adcl
dec
sub
jle
insl
push
sub
scas
mov
and
cmp
movsb
pop
enter
nop
mov
pop
pop
cld
sbb
and
jp
ds
dec
xchg
sub
or
sbb
dec
or
adc
mov
jo
mov
subl
inc
pop
outsl
mov
and
es
scas
push
sbb
in
push
lods
xchg
orb
xchg
xlat
shrb
add
lea
sti
xchg
hlt
xchg
lods
inc
leave
mov
int
movsl
pop
lods
xor
jge
jne
push
mov
xchg
add
push
pop
adc
jg
movsl
dec
dec
inc
int
xor
push
in
test
cli
or
loop
mov
rol
lods
inc
push
js
insl
daa
cmp
lock
ror
rcl
push
add
add
gs
cmp
inc
sti
mov
push
cli
cmpsb
ret
cld
aaa
std
std
sub
mov
fadds
cmpsb
mov
mov
adc
repnz
outsb
sub
repz
add
std
jmp
loop
cli
inc
loope
enter
push
cmp
imul
aam
and
or
fildll
sbb
push
push
xchg
mov
add
bound
cmpsb
xor
jge
adc
out
sbb
int3
mov
fsubl
xchg
mov
std
movzbl
xchg
sbb
xchg
das
sahf
loop
push
in
or
test
sarb
inc
and
cmp
cmpsb
test
mov
ficoms
mov
push
fstps
push
pop
cld
jb
or
sbb
push
stc
xor
mov
or
test
dec
movl
mov
jae
xchg
lods
fs
test
repz
hlt
shrl
lods
imul
mov
pusha
in
xchg
xchg
arpl
mov
mov
imul
push
pop
or
xchg
les
dec
test
pop
out
mov
loope
push
imul
dec
in
cmp
pop
jbe
sbb
xor
jp
or
pop
lods
dec
js
mov
out
pop
pusha
adc
pop
cmp
mov
les
xchg
cmpb
pop
mov
or
push
aaa
jg
inc
xor
in
outsb
arpl
into
mov
loope
mov
fwait
enter
sbb
pop
insl
fsubrl
mov
sbb
or
mov
movsl
jo
pop
xor
inc
loope
mov
decb
rorb
pusha
mov
mov
jno
stc
stos
push
rclb
push
scas
inc
lods
andl
ds
inc
inc
fincstp
jl
aam
inc
xchg
xchg
xchg
sub
rcrb
ds
in
jo
lods
push
pop
jmp
mov
js
jne
lret
cltd
in
std
lret
xor
sub
dec
mov
add
rcrb
mov
sbb
jnp
movsb
cmpsb
lcall
xor
out
test
sbb
iretw
sub
dec
imul
adc
fs
addb
and
fsts
fcmovnu
dec
adc
insb
popa
clc
lahf
movsl
mov
into
mov
mov
pop
loopne
push
cmp
scas
push
lods
aas
adc
xor
mov
or
cmp
jne
or
leave
xchg
pop
repz
push
std
mov
xor
jecxz
test
lret
imulb
add
push
push
cmp
sub
mov
ffreep
cltd
mov
inc
fwait
cmpsb
push
outsl
sbb
notb
pop
cmp
divl
push
sbb
cmpsl
push
xchg
adc
scas
inc
add
jl
xchg
sub
in
inc
cmovg
sti
mov
xchg
fistpll
mov
pop
das
mov
aam
xchg
insl
ret
pop
aad
in
mov
xor
pushl
mov
push
mov
iret
cwtl
andb
aaa
icebp
cmp
ljmp
in
push
xor
les
inc
dec
jo
pop
stos
out
outsl
lahf
ret
xchg
xor
sbb
adc
fdivr
jge,pt
repz
sbb
ja
fdivs
mov
cld
cmp
idivb
ss
cmpsl
jl
loop
sub
aaa
xor
mov
das
lret
fsts
aas
xlat
and
in
inc
cmp
dec
dec
dec
aas
sbb
popl
jl
lret
test
jg
add
out
subl
sarl
sbb
mov
loope
and
mov
and
decb
mov
pop
mov
and
mov
inc
sbb
int
icebp
xchg
and
xchg
sub
std
inc
scas
sub
xor
mov
jns
fucomi
stos
mov
sub
add
movsb
push
adc
mov
inc
call
jmp
aas
dec
mov
xor
pop
sbb
cmc
ljmp
clc
sbb
fs
sub
loop
or
sub
movsl
inc
out
dec
lahf
arpl
subl
scas
cmc
cmp
sbb
les
imul
imul
inc
pop
xor
inc
add
test
jnp
mov
jae
inc
movsb
inc
xor
addb
rcrb
mov
aam
repz
not
and
inc
scas
lods
jb
movb
xor
mov
push
shl
cs
pusha
or
insb
cmp
insb
xor
pop
pop
in
lds
xor
inc
hlt
lds
stc
jmp
out
jo
sub
lret
ret
loopne
add
add
popa
mov
cmp
xchg
jge
dec
loope
push
inc
clc
mov
sub
pop
je
push
loop
dec
pushf
jb
sub
std
inc
jg
sub
rcll
xor
out
mov
xchg
out
addr16
jno
mov
aas
es
popf
pop
popf
shlb
test
sbb
out
mov
push
andl
fmuls
movsl
push
cmp
mov
adc
sub
cmp
cltd
xor
rolb
test
jo
pop
outsb
pop
adc
or
cmp
mov
call
push
stos
sbb
mov
fbstp
pop
mov
inc
sahf
jl
sbb
rcr
int
push
ds
mov
inc
and
adc
mov
popa
jae
jnp
ja
loop
jg
jno
mov
adc
cmp
rolb
pop
imul
sti
loope
out
jb
stos
in
cli
adc
pop
lret
cmp
push
pop
xorl
movsl
mov
sbb
leave
mov
dec
xlat
aaa
push
mov
sbb
shrl
aam
movsb
icebp
cltd
sar
out
jbe
sbb
jbe
scas
xor
daa
lods
jo
movsl
test
or
mov
repz
mov
fldt
mov
inc
icebp
jle
sub
push
jnp
inc
jg
idivb
subb
mov
or
mov
bound
sbb
repnz
mov
pop
insl
adc
pop
ret
sbb
lret
test
dec
mov
out
sub
hlt
xchg
push
sbb
clc
and
mov
sub
dec
push
icebp
jge
decb
mov
leave
xor
loop
sbbb
sbbl
outsb
in
mov
push
jecxz
lcall
adc
adc
jle
mov
loopne
ja
inc
mov
jae
rcl
push
call
jmp
repnz
movsb
fimuls
insb
fisttpl
iret
jg
pop
imul
sub
shlb
mov
ror
xor
push
push
pushf
fists
xorl
jnp
inc
gs
or
popa
and
cmp
cli
push
xchg
ficompl
lret
pop
ljmp
gs
mov
fcmovnbe
in
sbbl
or
xor
add
lds
mov
imul
fwait
add
xorb
jecxz
pop
inc
sub
inc
jge
shll
push
sbb
sub
inc
shrb
imul
cmp
push
lock
sub
or
sub
pop
sbb
jge
fcomps
cmp
insb
test
mov
push
lcall
in
nop
sbb
push
out
jo
fmulp
fs
in
cmp
aam
sub
mov
inc
and
and
ja
fdivl
mov
mov
out
outsl
cli
loope
xor
imul
cli
add
rcrb
or
cmpsl
xchg
ljmp
mov
jbe
xor
imul
repz
pop
xor
inc
xchg
jge
cmpsl
mov
sahf
test
mov
leave
fsubl
push
bound
icebp
pusha
jae
shrl
andb
scas
loop
push
imul
mov
divl
pop
xor
data16
adc
pop
mov
movb
cmpsl
rcl
push
and
sub
imul
mov
inc
aas
daa
cltd
jmp
sti
sbb
into
sub
mov
cmc
dec
dec
cmp
pushl
shll
mov
arpl
fcmovnu
testl
cmp
add
adc
mov
xchg
sub
in
inc
aad
aaa
xchg
and
insl
jbe
fiadds
popa
fucomp
shll
fs
lods
push
mov
push
xchg
and
push
push
arpl
cmpsb
notb
xlat
es
pop
and
scas
pop
dec
mov
xchg
jmp
test
cmp
cs
pshufw
nop
filds
jg
mov
test
aaa
jbe
jbe
xor
dec
dec
out
std
int3
orl
add
cmp
pop
pop
xchg
sub
cmp
stc
repz
ret
incl
enter
test
outsb
sarb
and
mov
movsb
push
mov
in
pmaxub
mov
fstpt
bnd
adc
dec
jmp
xchg
sub
xchg
jge
das
adc
dec
jnp
aad
adcl
mov
int
jle
add
mov
xchg
jns
fwait
nop
sub
jge
sbb
jb
popa
mov
pop
aaa
cmpsl
imul
xor
cs
cli
stos
inc
mov
notl
push
jae
ljmp
mov
hlt
dec
fildll
movsl
ljmp
in
cltd
shll
mov
popa
lods
fistl
shl
aam
add
or
push
mov
pop
int3
fimuls
mov
gs
and
test
or
push
cmp
cmp
mov
cltd
cmp
out
mov
negl
mov
pop
jecxz
in
insl
repz
cmc
mov
loope
pop
adc
ss
cmp
data16
and
es
xor
fincstp
push
add
call
sbb
jmp
add
mov
lock
dec
jle
or
inc
sub
iret
into
xor
and
adc
lds
punpckldq
sub
out
push
repz
push
adc
add
dec
or
arpl
adc
jmp
jle
cli
inc
cli
xchg
push
or
jbe
call
mov
xor
mulb
pop
inc
mov
xchg
mov
adc
jnp
jg
dec
ds
push
jo
movsl
je
xor
sbb
cwtl
and
sub
adc
pop
std
hlt
mov
mov
push
push
shrb
xchg
and
jo
call
push
mov
or
bound
ss
aam
mov
dec
insl
cmpsl
or
loop
sub
mov
push
dec
stos
dec
in
mov
or
fmulp
call
jmp
ljmp
pushf
jae
dec
and
ja
cli
jg
cmpl
cli
dec
sub
cwtl
mov
jb
fadd
adc
jnp
xchg
int3
leave
mov
mov
shll
pop
and
roll
or
leave
outsb
sahf
or
jecxz
xchg
shlb
pusha
aaa
mov
sub
les
or
in
mov
pushw
mov
sahf
mov
ss
ret
outsl
repz
cmp
ficoml
mov
sbb
popa
enter
inc
addr16
sub
or
fldt
mov
loopne
cmp
sti
xchg
sub
or
jl
test
xor
cmp
add
push
aam
xchg
pop
scas
add
arpl
fildll
xchg
pop
faddp
cmp
cmpsl
and
jle
cmp
dec
les
js
xlat
repz
scas
enter
push
jge
decl
jbe
cmp
and
sbb
and
xchg
push
pop
out
add
gs
jp
imul
lods
and
push
scas
pop
insb
sub
xor
dec
dec
push
jecxz
jge
daa
sbb
int3
dec
int3
dec
inc
lds
imul
push
cltd
push
jmp
cli
jg
pop
fcmovu
sub
fs
cmp
pop
loope
nop
push
jae
cmp
dec
out
mov
xchg
sbb
out
push
pop
call
jnp
call
loop
pop
sub
mov
jmp
std
sub
clc
lods
loop
mov
daa
inc
sub
inc
dec
jmp
sbb
cmp
sarl
cmpsl
sbb
sbb
scas
les
or
rclb
in
negb
in
fs
pop
ret
ds
jg
push
lock
cmp
out
add
out
cmp
pop
test
movsl
js
jmp
jecxz
inc
mov
push
in
lods
loop
ds
cs
je
push
test
out
inc
pop
adc
loopne
repz
push
push
pusha
mov
int
push
mov
ret
mov
shll
sub
shrl
xchg
jecxz
mov
dec
mov
push
cmpsl
and
mov
adc
mull
push
add
mov
test
adc
imul
scas
mov
dec
pop
push
aaa
je
cwtl
das
mov
jmp
adc
xchg
cmp
mov
and
cmp
in
enter
leave
fucomp
pusha
shll
mov
lock
leave
cmp
in
inc
mov
and
loope
mov
sub
das
stos
mov
sbbl
xchg
jle
sbb
mov
fwait
sub
mov
clc
shlw
lea
into
es
daa
push
movsl
xchg
mov
jmp
fimuls
aam
rorb
or
fcos
xchg
lret
sub
stos
cmpsb
cmp
inc
movsb
les
cltd
push
sbb
or
jmp
push
je
bound
fsub
mov
fistpll
andb
loopne
cmpsb
aam
scas
or
and
jns
cmp
inc
nop
push
xor
cli
jne
pop
fdivs
push
lock
push
test
mov
cmpsl
les
mov
pop
jae
mov
mov
jp
xchg
ss
inc
xchg
movsb
sub
dec
aad
jns
jb
sahf
cmpsl
lcall
lods
add
nop
int
ret
add
jmp
cli
xchg
popf
mov
cmpsl
scas
cmp
add
aam
and
push
lods
in
pop
xor
adc
repnz
add
in
nop
sbb
mov
sub
adc
add
inc
ds
sbb
add
mov
sbb
adc
inc
sahf
or
popf
xor
bound
lahf
adc
jmp
sbb
iret
movsl
push
pop
inc
jmp
cld
sub
repz
insb
mov
pop
es
dec
mov
sbb
push
mov
or
jo
out
cli
xchg
shlb
cwtl
inc
push
cltd
out
insb
add
mov
mov
out
pop
shll
cmc
and
das
inc
popf
sbb
add
sub
mov
pop
shrl
mov
jp
mov
xchg
inc
test
gs
add
daa
and
add
xchg
and
not
fsubl
out
mov
and
dec
popf
ja
cltd
ret
or
or
lods
inc
cwtl
sub
dec
pop
xchg
jmp
andl
shll
pop
push
imul
jnp
and
iret
loopne
adc
xchg
lods
ljmp
cmp
sub
inc
xchg
ds
lods
xchg
add
mov
jle
inc
out
and
in
je
pop
cmpsb
in
dec
cli
pop
les
and
inc
push
pop
inc
out
mov
xor
movsl
and
test
and
cmp
popf
xor
test
mov
bound
xchg
shrb
test
call
out
xlat
insl
adc
aaa
cmc
xor
pop
shlb
jl
push
mov
repz
xchg
add
cmc
mov
cmp
sub
xlat
sbbl
or
jo
out
xchg
mov
mov
js
mov
inc
cmovne
dec
fists
mul
xchg
mov
push
subl
dec
sbb
fistpll
das
andb
or
hlt
nop
add
mov
pop
push
mov
in
fsubrs
xchg
and
das
shll
lds
jno
ljmp
mov
enter
jbe
xlat
xor
stc
jnp
push
cwtl
or
test
adcl
and
cld
jo
fwait
movb
adc
stos
pop
gs
xlat
mov
lret
mov
scas
fs
mov
push
xchg
mov
insl
or
rcrl
cmpsb
aad
aad
add
bound
daa
clc
fsubrs
int
or
loope
mov
jns
shrb
fsubrs
mov
mov
imul
test
cs
rolb
and
push
mov
inc
fstpl
pop
inc
out
aam
popa
clc
fsubp
push
mov
daa
data16
lret
shll
or
xchg
out
cmp
push
xor
dec
mov
xlat
incl
xor
into
mov
cmp
jo
je
jg
lret
fsts
pop
into
iret
xor
jo
jo
aam
add
bswap
fistl
adc
int
lds
mov
pop
loopne
mov
xchg
test
loope
mov
push
cmpsl
mov
loope
leave
and
push
push
xor
arpl
add
dec
xor
shlb
adc
cwtl
add
xchg
cmpsb
mov
aaa
mov
push
icebp
mov
jp
xchg
js
lret
push
or
pop
xchg
daa
pop
mov
mov
dec
in
int
sbb
xchg
mov
out
and
fcmovnb
xchg
dec
les
sahf
pop
mov
pop
jne
sub
cmpsb
lock
ficomps
lret
inc
shrb
push
xor
stc
sub
or
push
push
lods
mov
pop
loopne
sarl
xor
into
jnp
xorps
cmp
mov
aad
dec
aad
outsb
mov
adc
jbe
xor
loop
in
push
fs
sub
cmpsl
mov
sbb
div
mov
or
and
test
pop
test
dec
mov
mov
int3
inc
sbb
rolb
cli
loope
out
lret
jnp
dec
rcll
xchg
push
inc
jae
lods
sbb
inc
mov
dec
push
mov
inc
in
aaa
sub
lods
mov
sbbl
insl
out
cmp
xchg
and
fbld
es
inc
or
inc
movsb
or
lods
jmp
out
inc
jae
sub
mov
dec
pop
mov
jne
or
push
insl
cmp
mov
call
cmp
jle
dec
fnstsw
push
mov
xlat
test
push
insb
jmp
xchg
cltd
dec
cmc
sarl
loopne
adc
ss
cli
dec
fwait
sub
test
mov
jle
ret
es
push
lcall
push
jmp
or
cmpsl
mov
adcb
mov
xchg
mov
in
adc
and
inc
inc
in
jne
mov
adc
mov
pop
cli
fcmove
test
mov
repnz
dec
mov
and
push
es
fcmovbe
dec
mov
push
jno
jno
inc
add
or
jmp
add
adc
and
mov
mov
in
add
jg
lods
dec
add
std
out
mov
or
stos
jb
inc
mov
test
push
fsubl
pop
rcpps
into
cmp
jmp
imul
out
in
add
mov
cmpsl
int
hlt
arpl
test
loope
call
jmp
jge
cmc
push
mov
push
xor
and
loope
sub
cmp
push
inc
push
jmp
xlat
aad
hlt
outsb
mov
xchg
mov
sbb
inc
xor
inc
lds
jg
pop
inc
orb
ds
arpl
imul
cmp
jecxz
in
fwait
push
pushf
test
ud2
mov
inc
mov
adc
lock
lcall
cwtl
or
rep
js
ja
mov
sub
nop
adc
into
mov
call
inc
cmc
inc
and
mov
lods
push
push
mov
lea
lds
add
repz
outsb
pushf
push
push
stc
sub
push
insl
or
add
mov
mov
and
or
push
insl
ja
adc
dec
and
stos
loopne
jle
insl
pop
notl
inc
cmp
imul
outsl
xchg
cmp
iret
xchg
lcall
cwtl
shll
dec
sti
sbb
mov
inc
in
inc
adc
fxch
fldl
dec
sbb
int
sbb
inc
fsubrl
leave
je
pop
push
out
rcll
ljmp
push
mov
icebp
and
ficoml
test
and
push
mov
push
xor
jnp
sub
inc
scas
std
sti
push
cltd
and
stos
mov
inc
cwtl
test
push
lods
and
out
or
outsl
mov
pop
aam
aas
push
nop
pop
hlt
sub
cltd
and
in
idiv
cld
push
popf
cs
push
test
xchg
sahf
xor
stos
xchg
fidivl
mov
fidivrs
idiv
push
stos
sbb
jle
mov
hlt
andl
dec
pushw
sub
sar
mov
or
pop
scas
and
filds
adc
xor
jo
xchg
pop
test
xchg
fnstcw
cli
dec
push
inc
call
fimuls
sti
push
dec
pop
loopne
sub
movsl
fisubl
mov
in
lea
mov
adc
in
inc
loop
mov
divl
leave
clc
mov
sub
adc
push
shrl
inc
in
inc
push
movsl
jne
out
mov
sub
out
dec
inc
pop
jmp
dec
push
mov
add
xchg
test
and
xor
push
xor
jmp
shll
push
mov
insb
and
sbb
mov
fbstp
adc
shr
jo
pop
stos
ds
lea
movsl
and
pcmpgtw
lea
add
call
mov
loop
sub
jo
stc
das
icebp
push
mov
testl
sbb
add
mov
cltd
mov
inc
into
rcrl
add
pop
fildll
mov
add
mov
je
pop
push
lock
or
adc
sub
ret
movsl
cmp
and
xchg
ret
testl
aad
adc
addr16
cmp
sub
push
iret
add
cmp
imul
pop
dec
cmp
mov
imul
and
push
jmp
mov
jne
outsb
xchg
dec
pop
insl
cld
outsl
imul
mov
mov
fldcw
xor
xchg
subl
inc
faddl
jnp
out
arpl
pop
fsubs
xchg
or
sub
jne
inc
fmull
jno
shrl
cli
fwait
jbe
sarl
int3
sbb
ja
mov
arpl
stos
stc
js
or
icebp
addr16
fidivs
out
bound
rclb
out
movsl
lock
in
pop
mov
mov
xchg
xor
xchg
enter
xchg
push
aam
inc
inc
mov
les
hlt
cld
adc
sbb
iret
ds
jno
lock
jne
lods
push
mov
xchg
sub
fnstenv
lcall
jmp
mov
or
out
dec
sbb
xor
clc
mov
les
or
shr
jns
in
ss
dec
mov
mov
dec
incb
mov
cmp
xchg
imul
or
push
lods
addr16
in
or
mov
movsl
movsb
aad
les
jle
adc
fcomip
mov
sbb
xor
loop
xchg
adc
inc
sti
mov
flds
xor
mov
mov
push
mov
sbb
push
data16
xchg
adc
dec
dec
cltd
xor
pop
dec
popa
int3
inc
fscale
sub
sub
jnp
or
mov
or
gs
lcall
push
pusha
jmp
lahf
xorl
and
mov
push
sahf
mov
jnp
or
inc
les
push
xor
mov
pop
xchg
adc
pop
dec
sbb
icebp
and
sub
repnz
sbb
or
pop
pop
fcomps
jmp
sub
push
aad
push
test
rorl
idiv
hlt
fbstp
gs
pop
icebp
and
inc
js
jmp
dec
mov
dec
decb
imulb
insl
push
xlat
negb
mov
pop
pop
out
cmp
out
adc
pusha
out
jo
adcl
icebp
xchg
icebp
adc
movsl
sbb
mov
mov
pop
ja
mov
clc
jae
sahf
out
leave
mov
add
jecxz
es
lret
fisttps
xchg
pop
adc
test
call
subl
push
xor
fisubs
jg
pusha
mov
stos
add
test
fnstsw
pop
mov
popa
pop
xchg
out
inc
fisubs
mov
mov
sahf
insl
sub
jmp
testb
and
dec
mov
in
out
jmp
movsl
add
mov
pop
cmpsb
xlat
mov
shl
add
pop
xlat
sbb
in
mov
pop
cmpsl
xchg
out
mov
cltd
test
push
les
mov
shrb
dec
mov
ret
iret
cmpsb
ja
pop
cmc
sub
mov
dec
es
dec
sub
fidivrs
mov
and
mov
insl
aad
push
inc
push
push
outsl
clc
test
ds
add
es
mulb
push
push
scas
mov
jns
insb
push
dec
xchg
mov
push
popf
adc
bound
mov
rol
cwtl
pop
out
loop
fdivrl
test
xor
and
cmpsb
xor
aad
jnp
aam
fcomps
leave
pop
adc
enter
xchg
aam
enter
push
inc
mov
lods
xor
repnz
xor
mov
movsb
push
es
mov
fists
xchg
xchg
push
aad
loope
cmpsl
xorb
imul
les
insl
repz
sub
sub
cmp
mov
ret
dec
cmpsb
cli
or
or
sbb
mov
add
bound
pop
aam
mov
push
mulb
add
dec
hlt
ret
mov
mov
or
sub
jns
pop
mov
cmp
adc
loope
mov
pusha
test
xchg
pop
lret
mov
push
xchg
stos
xchg
repnz
xchg
insl
pop
mov
stos
test
in
rolb
pop
xor
lahf
add
mov
jecxz
push
pushf
xchg
and
push
and
cli
bound
cs
aad
push
dec
jnp
jmp
test
adc
push
mov
nop
push
or
xor
and
mov
call
stc
or
pushf
sahf
sub
mov
mov
xchg
push
insb
pop
out
xchg
aad
sbbb
out
gs
mov
xchg
sub
dec
loopne
mov
repnz
mov
shl
jbe
inc
xor
ljmp
dec
xlat
hlt
stos
jmp
andl
jns
mov
cld
std
out
int
xor
ret
jnp
dec
dec
movsl
jo
fistl
mov
xchg
stos
jmp
dec
fisttpl
xor
jl
popl
lret
xchg
imul
shrb
dec
lret
addr16
test
jns
push
mov
jmp
repz
gs
mov
mov
sarb
test
fcoms
and
sbb
inc
sbb
dec
sbb
ds
jp
and
idivl
test
lret
decl
imul
int
mov
popa
mov
nopl
ret
xchg
mov
daa
inc
js
mov
add
add
push
dec
push
cmpsb
lahf
xlat
pop
xchg
adc
aas
xlat
push
jge
pop
xchg
xor
pop
adc
mov
or
call
jmp
add
call
cmpsb
gs
xchg
adc
out
mov
jae
jb
xchg
mov
mov
test
add
push
call
test
lahf
pusha
pop
cmpsl
lahf
clc
push
adc
outsl
xor
fwait
pop
testl
add
inc
ss
popa
sbb
ja
and
inc
repz
in
jnp
dec
mov
das
fistpll
test
mov
and
pop
add
fwait
js
push
ljmp
inc
inc
outsb
sub
mov
mov
scas
xor
inc
adc
je
mov
add
movsb
ljmp
pop
scas
dec
cmp
push
add
xor
cs
lcall
inc
inc
out
dec
iret
in
pop
iret
or
rcll
repz
cltd
je
ja
push
jns
xlat
sub
fwait
cltd
ja
pop
xchg
sbb
push
mov
stc
mov
icebp
sbbb
mov
cmp
divl
mov
test
xchg
subl
xchg
aaa
outsl
adc
out
xor
sbb
sahf
xor
push
stos
mov
repz
inc
pop
mov
adc
leave
js
sbb
scas
dec
popa
mov
mov
rclb
int3
xor
xor
shlb
lahf
stos
sub
sub
cmp
int
dec
xor
test
repnz
mov
lcall
lea
inc
into
ja
js
inc
test
mov
les
adc
pop
enter
lods
shlb
je
jae
aam
scas
into
loop
ficoms
addr16
mov
ds
adcb
mov
push
popa
movsb
out
stc
test
pop
arpl
mov
jo
into
cmp
in
jo
aaa
cmp
fwait
arpl
xchg
cmpsl
cltd
push
scas
push
mov
outsb
icebp
out
in
insl
test
adc
sbb
mov
xchg
inc
dec
and
cmp
cltd
popa
fdivr
jle
jl
xchg
jnp
or
loopne
jnp
imul
xor
xor
fcoml
lahf
fldenv
into
inc
inc
mov
dec
push
xchg
outsl
lock
xchg
adc
sahf
insl
sahf
scas
cmp
arpl
in
push
xor
shlb
jno
mov
fists
push
or
mov
ss
push
out
das
inc
scas
and
subl
pop
fistpll
data16
pushl
jg
jl
into
push
repz
scas
xor
int3
cmp
mov
rcl
arpl
dec
and
stos
xchg
imul
push
xchg
lds
lods
repnz
sbb
push
std
scas
or
sarb
out
lret
sbbb
mov
movd
lods
das
lahf
es
insl
inc
sbbl
mov
adc
aad
int3
or
push
lods
out
push
stos
cmp
clc
jo
sub
scas
inc
ret
mov
xor
pop
scas
lods
and
add
mov
jecxz
sbb
pop
incb
cmp
dec
pop
xchg
nop
xchg
xor
inc
xor
test
jmp
and
pop
lds
dec
or
dec
insb
sbb
aam
xor
mov
mov
nop
hlt
xchg
sbb
ret
aad
sbb
xlat
ja
pop
pop
out
xor
jmp
into
dec
sbb
std
or
xor
xchg
xchg
mov
incb
cwtl
dec
out
xchg
and
add
repz
dec
test
inc
mov
pop
cmp
scas
push
out
adc
mov
add
test
and
adc
pop
pushf
xor
dec
sahf
or
jae
adc
mov
dec
addr16
hlt
je
add
cmp
or
repz
in
dec
fstpt
in
cmp
addb
gs
cmp
sub
ljmp
and
sti
push
xchg
sub
xor
nop
add
lahf
addb
sbb
cmpsb
pop
sahf
xlat
cmp
pusha
dec
push
mov
mov
xchg
ljmp
ss
out
cwtl
fidivl
ret
jnp
adc
lock
mov
hlt
dec
xchg
dec
mov
arpl
andl
test
iret
outsl
mov
sub
mov
shr
je
mov
dec
jnp
cwtl
sbbl
xor
call
add
jae
pop
pop
mov
and
and
stos
add
mov
xchg
pop
cmp
pop
lock
push
ficomps
or
xor
mov
cs
pop
ss
rcl
sbb
adc
pop
test
out
test
add
lcall
shll
std
mov
add
sbb
dec
add
sub
push
xchg
and
push
or
imul
ja
out
push
flds
dec
je
jae
adc
sbb
fcoms
stos
mov
je
repnz
mov
movsb
sti
cmp
mov
pop
jp
cmp
cmp
mov
ret
pop
insb
in
fildll
mov
mov
mov
inc
xchg
sub
mov
xor
fcoml
xlat
repz
fildll
outsl
ret
int3
sbb
insb
adc
cld
cmp
in
pop
pushf
xor
jne
lea
fcompl
sbb
mov
pop
out
jg
and
ret
mov
clc
adc
push
pop
xor
lret
cmp
fdivrp
jns
dec
jecxz
lcall
pop
sub
les
shl
mov
ret
push
movsl
mov
sub
jmp
pop
aaa
mov
stc
enter
pop
in
push
in
push
xor
push
sahf
cmpl
jmp
pop
divb
inc
xchg
adc
nop
daa
fwait
adc
test
and
cmp
scas
mov
test
adc
xor
xchg
scas
mov
pop
dec
push
mov
push
jle
or
lods
jnp
nop
xchg
add
sahf
ret
mov
and
cltd
mov
rcrl
mov
cmp
aam
loopne
jae
aas
add
xor
mov
mov
xor
jecxz
cmp
xchg
xor
push
mov
lock
movsb
push
mov
out
add
orb
add
sub
push
arpl
fidivrl
mov
jo
pop
inc
mov
lods
mov
pop
dec
faddl
pop
mov
sbb
mov
js
sub
lods
cmp
aam
xchg
testl
cli
inc
pusha
cmp
cs
leave
mov
push
jecxz
lret
add
and
cmc
pop
test
mov
jmp
adc
mov
pusha
les
adcl
jne
mov
adc
fxam
jecxz
sub
pusha
pop
add
mov
ret
inc
push
xor
out
cmpsb
pop
adc
inc
cmp
sbb
and
xchg
xchg
lcall
inc
xor
jl
cmp
mov
arpl
testb
sbb
push
dec
lcall
dec
stc
pop
mov
jno
aaa
jmp
ret
xor
loope
scas
adc
sub
pop
dec
loopne
lret
pop
scas
inc
xlat
jbe
lahf
popa
xor
aas
jb
stc
es
cmp
and
pop
stos
add
int3
outsl
sar
data16
and
sbb
in
dec
jbe
or
push
pop
ja
pop
fs
pop
sub
add
mov
fiaddl
ss
arpl
in
mov
lods
fmulp
loopne
js
dec
lahf
pop
lret
add
add
hlt
ret
xchg
faddp
and
mov
and
jae
add
cmpb
sahf
adc
rcrb
insb
shl
push
ja
mov
push
pusha
dec
push
jmp
lret
pusha
jo
hlt
mov
xlat
mov
xor
and
mov
adc
adc
lcall
rcl
sbb
jl
inc
fwait
pop
jbe
mov
fdiv
or
pop
or
mov
or
mov
push
mov
add
pop
ja
jb
xlat
mov
dec
pop
movsl
xchg
loope
popa
inc
xchg
int
outsb
dec
fucomp
enter
xchg
lods
push
and
xchg
sbb
sbb
jo
jnp
add
std
aas
ja
fdiv
ret
fcoml
and
lret
mov
jbe
bound
jmp
pusha
pop
jmp
push
lcall
repz
push
or
fsubrs
mov
js
dec
imul
sbb
and
dec
outsl
push
and
cltd
inc
fistps
shll
mov
sbb
icebp
pop
sub
jmp
cmc
adc
sar
nop
add
ror
sbb
mov
pop
cmpb
imul
loop
out
cmp
mov
shll
es
movsb
lds
sbb
stc
push
add
sbb
jmp
fcomps
clc
lret
xlat
fsubrs
xor
push
jne
pop
test
sbb
inc
pop
mov
outsl
lods
ljmp
xchg
js
xchg
xchg
xchg
popa
repnz
in
and
xchg
rolb
cltd
mov
cli
push
push
pop
lods
sbbb
in
pop
int
sbb
imul
insl
sub
inc
ret
dec
mov
mov
icebp
into
je
in
add
adc
pop
in
pushf
xchg
add
xor
call
pushf
jg
xacquire
sbb
fucomp
int
bound
loopne
dec
mov
mov
xor
xchg
mov
add
sbb
adc
jge
mulb
and
mov
stos
mov
addb
cwtl
sbbl
pop
mov
xchg
std
sub
mov
dec
test
inc
in
pop
jnp
cmpsb
cmp
pop
insb
pop
out
sti
mov
mov
push
out
outsb
fcmovne
and
leave
test
outsl
pop
repnz
pop
hlt
gs
int3
fsubrs
xchg
sbb
and
repnz
fwait
loopne
adc
pop
pop
lods
inc
loop
outsl
adcb
sub
jg
popf
jmp
into
lds
fldl
push
or
test
lods
test
mov
int3
xorl
movsl
push
ljmp
jno
loope
mov
push
mov
add
xor
xor
add
cwtl
das
xor
add
xchg
rcrb
ljmp
cli
inc
int3
imul
xchg
jle
clc
imul
sbb
push
leave
roll
push
mov
add
aaa
fwait
mov
inc
out
push
shlb
push
dec
sub
cmp
adc
fidivl
mov
mov
cld
aas
jl
jecxz
sbb
xor
lock
inc
mov
test
ret
and
in
fldlg2
mov
shll
fnsave
insl
add
loopne
cs
fadds
fnstenv
push
in
aaa
or
lcall
sub
inc
mov
aaa
dec
or
pushf
cmpsb
sub
xchg
dec
push
test
push
or
cmpsl
mov
decb
lret
cmp
test
mov
and
inc
data16
repnz
repnz
das
adc
add
xor
test
je
leave
xchg
jb
stos
sti
les
out
xchg
pusha
testl
jle
dec
and
cmp
iret
cmp
jae
sub
xor
push
popf
lcall
adc
jg
inc
xor
dec
xor
mov
mov
inc
xchg
je
fcomi
clc
and
lods
push
shll
mov
cwtl
lods
pop
ja
lcall
jbe
mov
adc
xor
mov
int
adc
add
sub
inc
sbb
push
leave
cmp
push
scas
stc
test
scas
jg
mov
lret
push
negb
movsl
dec
jbe
je
add
sbb
adc
nop
push
test
mov
add
sub
jmp
or
mov
jg
pop
fstpt
movl
mov
sbb
lea
inc
xchg
mov
fwait
add
push
mov
mov
sti
pop
sti
jg
mov
jnp
out
sub
jecxz
mov
xor
push
repz
or
pop
shlb
sbb
xchg
inc
pop
out
mov
outsl
inc
cmp
and
push
mov
stc
testl
jno
js
dec
pop
sti
lret
and
sub
jmp
movsl
lahf
mov
mov
jmp
jg
jmp
dec
add
ja
in
adc
out
push
mov
leave
es
and
mov
fiaddl
push
pushf
in
lcall
std
push
xchg
inc
lahf
pop
jb
inc
pop
or
rcll
push
mov
mov
js
xchg
and
add
insb
decb
mov
sti
pop
inc
sarl
aad
fdivl
adc
rcrb
mov
lcall
mov
pop
xchg
fs
fwait
int3
enter
leavew
test
xchg
push
push
adc
decl
mov
ds
rol
ret
outsl
shll
sub
lret
add
lock
and
loopew
xchg
pop
xor
sub
clc
out
cmc
stos
mov
adc
or
push
lcall
jo
nop
push
xchg
es
mov
push
and
rorb
mov
xchg
push
xchg
nop
add
insl
sub
adc
loopne
cli
fbstp
sub
inc
stos
mov
jmp
sbb
pop
popf
xor
out
cmpsl
sbb
das
jo
mov
vcvtdq2pd
mov
xchg
call
push
mov
fstps
mov
sbb
xor
mov
mov
loop
sbb
outsb
and
jnp
sbb
ja
sub
push
stos
outsb
inc
push
fs
cmp
push
fiaddl
push
mov
sub
std
sbbb
push
cltd
inc
xor
and
mov
sbbl
xor
insl
sbb
lcall
jbe
xor
xchg
jno
jl
dec
jbe
jns
bound
or
stos
mov
mov
pop
and
cmp
scas
adc
pop
stos
nop
add
xchg
add
es
xor
jmp
in
ds
rorl
mov
dec
shl
loopne
and
clc
jae
lret
enter
gs
cmp
add
pushf
dec
xlat
inc
out
cmpsb
in
out
push
or
xchg
sbb
cmp
inc
outsl
daa
pop
fistpll
xor
mov
mov
test
jp
sbb
sbb
subl
push
adc
pop
dec
ja
iret
repnz
cwtl
xor
push
imul
addr16
mov
sbbl
pop
sub
cmc
fucomip
notl
les
xchg
lcall
and
aam
out
mov
push
pop
iret
inc
adc
insb
lret
xor
aam
pop
out
push
out
adc
imul
scas
cmp
push
push
ret
hlt
sub
dec
pusha
inc
or
jnp
adc
xor
fmull
repnz
mov
mov
cmpb
mov
cmp
add
in
fimull
adc
and
add
and
push
out
sbb
test
push
out
jb
sbb
scas
and
xor
mov
push
dec
lods
aas
dec
ja
repnz
xor
ja
fs
jns
xor
dec
jg
push
inc
clc
lds
xchg
push
out
clc
mov
sbb
mov
pushf
subb
or
adc
cmp
inc
cwtl
fdivr
stos
ret
pop
jb
add
daa
lock
jno
add
dec
pop
ss
adc
xchg
push
rorb
data16
outsb
loope
mov
test
js
loope
and
and
mov
std
jmp
mov
push
sahf
bound
xor
in
ds
dec
cmp
clc
stc
cwtl
jle
sahf
cmp
jns
fsubr
repnz
aad
rol
adc
int
push
repz
mov
loopne
jmp
mov
xor
mov
repnz
loopne
and
nop
dec
stos
inc
add
aas
xchg
in
fcomi
loop
lret
xlat
mov
popf
and
add
xlat
xor
push
ss
scas
stos
push
fiadds
lret
xor
adc
xchg
sbb
mov
rcrb
cli
xlat
pushf
cmp
mov
cmp
sub
out
adc
fisubrs
fmuls
addr16
jle
iret
and
fs
inc
push
mov
pop
xor
aas
or
hlt
and
shrl
mov
rcl
sti
in
adc
pop
sbb
insl
ds
hlt
lahf
call
dec
sbb
ret
pop
sub
add
add
xchg
pop
out
shlb
jl
mov
pop
sarl
xchg
or
jmp
das
pop
lock
pop
pop
ficoms
in
lahf
and
adc
cmp
and
dec
dec
arpl
push
mov
sub
inc
cmp
notb
or
lods
jbe
repz
inc
cmp
pop
cmp
mov
mov
jae
adc
inc
pop
idivl
mov
mov
mov
mov
push
popa
jg
lock
rcl
outsl
push
xchg
jns
fwait
sbbl
lcall
aaa
push
push
jno
push
outsb
and
test
lods
addl
or
push
mov
adc
rolb
mul
scas
xchg
push
pusha
lret
movsl
stc
int
inc
push
jmp
or
cwtl
lea
jae
fbstp
add
push
xor
or
mov
push
mov
xchg
pop
loope
out
in
sbb
scas
mov
fsubs
testb
jle
pop
insb
lea
xchg
movsb
pop
mov
dec
push
jl
lea
mov
test
sahf
add
mov
push
pushf
dec
inc
mov
cli
push
pop
xorb
cmp
fsts
lret
lret
dec
push
jle
sarl
or
out
or
xchg
dec
cltd
test
mov
lock
and
call
pusha
mov
sbb
push
mov
ss
fsubrl
stos
inc
pop
mov
mov
mov
imul
cmc
xor
mov
mov
cmp
sub
push
sub
data16
enter
sub
sub
or
dec
add
aaa
xor
pop
xor
pop
jp
cmp
int3
xor
aad
out
xchg
cmp
push
mov
push
imul
adc
cmpsl
idivb
jbe
imul
loop
xlat
aad
or
cwtl
jno
sbb
flds
lock
scas
xchg
push
in
push
lcall
cmp
and
scas
shll
mov
mov
jne
xchg
sarb
jne
ret
outsb
jo
iret
cmp
es
xchg
cwtl
mov
cltd
loop
movsb
shrl
scas
add
ds
cmp
scas
ret
mov
cmp
push
mov
clc
inc
sub
xlat
xor
stc
push
stos
mov
jmp
xchg
dec
fdivrs
add
jne
lods
movsl
fwait
cli
rcr
enter
cmp
out
jo
adc
xchg
aas
outsb
lea
lea
mov
jmp
mov
and
xchg
add
jns
mov
clc
pop
adc
xchg
subb
push
sti
sahf
lods
sub
lea
pop
xor
jecxz
cwtl
sbb
jmp
aam
dec
pop
xchg
and
and
fcoms
sbb
xor
repz
outsb
lret
dec
loopne
addr16
ja
ja
pop
mov
pusha
dec
and
push
xchg
xorl
mov
xchg
cmpsb
sbb
mov
adc
jno
repz
xchg
jae
mov
popf
adc
pusha
clc
sti
add
rol
setle
fbld
inc
sub
xchg
addb
nop
cmp
add
fistl
ffreep
adc
aad
and
cwtl
test
imul
rcl
dec
mov
mov
or
insl
xor
lock
ret
test
movaps
mov
repz
roll
jg
jb
and
dec
xchg
jns
imul
mov
xlat
mov
pop
gs
outsb
xor
dec
lret
adc
sbb
dec
nop
clc
pushf
cmpsl
test
outsb
and
lret
sbb
xchg
dec
lret
jae
sub
push
push
pop
push
pop
mov
jno
xor
cltd
out
lret
xchg
mov
cltd
xchg
repz
jmp
mov
cmp
je
loopne
inc
shrl
sahf
insb
addr16
popf
imul
adc
add
sbb
mov
imul
sbb
repz
aad
clc
out
test
jle
outsb
xchg
dec
mov
icebp
repnz
rclb
add
cwtl
xchg
pop
mov
xchg
pop
mov
inc
mov
cmp
pop
sbb
icebp
dec
push
subb
rep
jne
imul
xchg
jge
testl
lds
out
movsb
sbb
push
or
cmp
add
add
push
jne
leave
sub
cld
mov
rcll
pushf
jo
test
pop
lahf
cmp
sarl
cwtl
and
sbbb
sti
stos
into
stos
or
push
push
movsb
mov
lods
int
pop
int
icebp
dec
adc
shll
outsl
iret
mov
sub
jl
nop
loope
mov
mov
arpl
pop
mov
sub
andb
out
jmp
divb
jmp
enter
repnz
sbb
enter
push
adc
push
test
sub
dec
and
and
les
xchg
dec
and
jno
test
adc
roll
pop
pop
cmpsl
nop
push
push
fwait
negl
add
pop
std
dec
or
jg
add
xlat
test
int
pushf
push
cwtl
iret
outsl
int
sahf
stos
mov
shll
xchg
jne
mov
and
push
fldl
fdivr
xchg
rclb
into
imul
push
push
push
sbb
js,pt
add
mov
jnp
mov
vcvtdq2ps
lret
push
xchg
paddusb
scas
mov
sbb
adc
mov
les
mov
mov
mov
mov
rcrb
stos
xchg
push
negb
repnz
sbb
clc
dec
dec
adc
iret
notl
lods
inc
insl
jns
cmp
int
lret
outsb
xchg
jo
aas
mov
push
adc
outsb
or
adc
out
rolb
jl
lods
mov
ret
hlt
ja
out
mov
sahf
std
adc
jbe
push
movsb
test
push
test
sbb
icebp
xchg
sbb
addr16
sub
xor
daa
cmp
test
mov
lock
out
inc
jle
sub
enter
test
xor
movsb
sub
aam
mov
mov
adcl
jne
out
push
fcomi
int
jne
mov
lret
mov
aad
sahf
pop
dec
xchg
fldl
out
jecxz
jmp
ds
pop
scas
mov
arpl
dec
pusha
ret
pop
xchg
out
dec
jecxz
cltd
or
dec
in
cmpsl
xchg
js
stc
cmc
pop
inc
cld
jmp
mov
or
mov
adc
loopne
xchg
xchg
jmp
repnz
sbb
pop
mov
andb
cmp
cmc
outsl
cmp
insb
sub
nop
daa
cmc
push
push
jo
pop
scas
std
int
ret
lods
push
aaa
shlb
jge
xlat
idivl
idivb
push
sti
adc
mov
jle
push
das
enter
fldcw
aaa
mov
iret
add
bound
inc
jmp
mov
xor
shrb
cmp
and
push
fmull
and
fwait
mov
mov
stos
test
movsb
add
shrb
shlb
add
cmp
and
inc
ficoms
mov
xchg
out
outsl
jnp
popa
sbb
cmp
push
enter
data16
mov
pop
roll
push
jnp
push
sub
sti
push
repnz
xor
xor
ret
aad
mov
enter
call
pop
rcll
dec
clc
insl
shll
lahf
add
mov
pusha
in
sub
rcll
in
push
mov
sbb
and
add
imul
mov
loop
or
mov
sub
lods
push
and
mov
fwait
xorb
adc
or
cmpsb
fwait
lods
mov
fstpt
sub
push
jns
les
adc
sub
sarl
jo
out
fldl
push
popf
cmp
bound
nop
push
inc
mov
sbb
popf
imul
sbb
inc
push
dec
lds
adc
jp
int
out
adc
pop
cmpsl
add
lret
mov
jle
fcmovnbe
xchg
inc
test
imul
out
test
cwtl
aas
or
arpl
xor
movsb
inc
scas
sbb
leave
dec
rorb
add
push
push
and
dec
cmpsb
jbe
or
pop
lret
add
adc
or
cmc
jno
xor
fdivr
sub
out
popa
pop
int
lahf
rep
pop
ja
rcrl
push
test
jge
or
sbb
jns
adcb
push
pop
mov
stos
mov
pop
in
es
add
in
cld
out
jge
int
xor
mov
xor
xchg
hlt
inc
xchg
lods
mov
cmp
ret
mov
shll
imul
rolb
imul
sbb
adc
insl
mov
fistpll
imul
xor
pop
icebp
ljmp
outsl
ljmp
enter
sub
pushf
andb
add
push
jo
mov
dec
push
and
xchg
xchg
jl
add
or
fwait
jp
jle
pop
jo
mov
sbb
xor
imul
jno
xchg
out
pop
mov
sub
mov
pusha
jns
adc
fwait
stos
pop
sub
mov
cmp
jns
loop
out
pushf
ror
mov
lds
jecxz
xchg
jnp
sbb
lods
gs
imul
or
inc
jnp
lret
cmp
xchg
xchg
cltd
int
dec
stos
pop
jno
pop
dec
cmp
clc
fidivl
mov
ficomps
cld
mov
mov
aaa
xchg
inc
mov
jb
dec
and
stos
mov
and
movsl
adc
movsl
pop
bound
ja
mov
pop
int
or
jp
sbb
rorl
popa
loop
lahf
je
cmp
out
inc
pop
pop
les
idivb
pusha
cmp
sub
cmp
jne
addr16
push
adc
cmpsl
push
mov
lock
in
fldcw
jne
aas
xor
jle
fsubr
mov
ret
ret
mov
shrl
jo
and
xchg
mov
jns
daa
sbb
pop
mov
push
mov
and
push
dec
scas
mov
mov
shll
push
addb
js
es
adc
imul
in
push
mov
adc
inc
popf
call
and
ret
sub
dec
jns
cmp
jno
jp
ret
mov
mov
mov
xor
sub
or
xchg
pop
fistps
pop
or
pop
out
xchg
loopne
stos
icebp
inc
test
jecxz
repnz
aad
clc
insb
mulb
pop
movsl
inc
dec
xchg
faddl
sbb
xor
decb
cmpsb
jbe
or
mov
js
jl
add
lods
cmp
jle
je
xor
and
mov
sub
mov
pop
cmpsb
jno
xchg
pop
out
push
mov
fcmovb
pop
out
repz
stc
adcl
mov
hlt
mov
pop
lock
mov
shll
jle
test
dec
rorl
sbb
fisttps
in
jne
fwait
mov
xchg
xchg
test
aas
shl
jno
adc
mov
hlt
out
add
into
repz
out
sbb
outsl
lret
fs
pop
iret
cmc
out
dec
fnsave
or
sarl
jmp
or
mov
fimull
add
clc
or
xchg
aas
push
sahf
or
inc
lcall
jecxz
pop
cmpsl
cmp
xor
mov
pop
ret
xor
lods
mov
test
outsl
push
cmpsb
mov
jbe
mov
mov
mov
call
and
hlt
or
pusha
pop
loop
dec
filds
in
pushf
in
sti
pop
inc
push
push
cltd
xchg
aas
dec
jg
out
test
movb
pop
pop
push
in
arpl
sbb
fidivs
iret
sbb
cmp
cmpsb
loope
popa
cmp
xchg
test
jae
jl
inc
vpsubsw
pop
bound
adc
dec
add
testl
or
mov
xchg
xor
inc
xchg
jecxz
pop
loop
sti
sbb
std
dec
or
and
dec
sub
movsl
xor
mov
sub
outsb
sub
cmp
mov
pop
xor
inc
mov
adc
je
in
jmp
xchg
push
pusha
ror
jp
adcb
push
scas
mov
adc
pop
xchg
push
std
fwait
call
std
or
scas
cltd
jnp
jae
cmpsb
arpl
jnp
shll
sbb
mov
cmp
pop
mov
mov
push
push
popf
xchg
aad
repz
and
mov
aam
add
mov
daa
inc
mov
cmpsb
mov
out
fwait
les
push
rcrl
mov
sub
scas
add
sarl
and
outsb
push
push
ljmp
xor
sahf
push
xor
adc
dec
test
mov
dec
aad
movsb
or
in
repz
push
cmp
jecxz
push
pop
ja
daa
mov
jne
cwtl
bound
pop
xchg
loop
out
inc
xchg
mov
mov
ja
lea
jecxz
jne
cmpsb
inc
dec
lods
dec
pop
test
and
cmp
mov
and
mov
add
cmp
outsl
test
imul
lock
shlb
arpl
push
test
test
data16
adc
xor
xor
mov
and
hlt
cmp
mov
fwait
pop
mov
push
test
xor
mov
imul
push
jp
in
js
push
adc
jb
jno
lea
mov
pop
add
stc
je
sbb
mov
fs
mov
xchg
testl
sbb
mov
daa
sub
lods
out
and
int3
je
pop
sbb
jns
insl
pop
cltd
mov
lcall
stos
out
test
or
xor
add
fimuls
fnstsw
je
pop
xchg
jb
jb
sbb
inc
sbb
mov
fucomip
test
lcall
and
mov
jo
xor
jmp
repz
ds
xchg
sub
or
mov
xor
leave
fyl2x
cltd
mov
mov
ret
mov
sahf
pop
into
out
mov
and
adc
add
arpl
cmp
add
jecxz
dec
pop
jnp
sbb
pop
lods
dec
repz
cmpsb
scas
imul
lds
jl
inc
jp
jb
pusha
mov
iret
push
inc
aas
jl
sub
cmp
fwait
rcll
cli
jbe
xor
sub
ret
add
shl
sub
test
jge
mov
xchg
sahf
lcall
out
mov
das
inc
in
scas
repnz
or
jns
lock
adc
pop
int3
inc
je
pop
in
ljmp
dec
std
fidivl
outsl
mov
dec
mov
cltd
pusha
jo
mov
push
sub
cltd
xor
jne
in
lds
in
cmp
lock
mov
xchg
cmp
cmc
imul
shlb
jecxz
mov
ret
cmp
pop
es
jge
inc
in
mov
fwait
in
ret
or
xchg
mov
sub
test
and
jmp
pop
push
fisubl
pop
mov
out
pop
repz
rcrb
jl
test
lahf
xchg
push
add
xor
into
fstl
out
xor
pop
mov
fwait
ss
jmp
xchg
mov
xor
mov
xorl
cmp
scas
fucomp
fisttpl
or
mov
xor
lret
inc
cs
testb
sbb
inc
fimull
test
repnz
jae
test
rcll
dec
stos
xchg
jge
fidivrl
xchg
ds
je
loopne
xchg
daa
sti
xchg
dec
dec
cwtl
test
cmc
cmp
push
stos
das
out
lea
test
lods
jo
test
pop
outsb
test
ret
dec
adc
mov
cmp
sti
cmpsb
out
inc
ret
xor
mov
mov
shrl
jmp
jns
fcmovne
sub
pop
ss
mov
scas
xchg
dec
lock
or
pop
lock
add
loope
jle
xor
jp
test
mov
outsb
fnsave
push
inc
scas
pop
sub
add
insb
or
xchg
mov
ja
or
popa
jl
iret
aad
scas
leave
gs
cmpsb
fstp
mov
sub
adc
xor
xchg
sub
imul
decl
mov
sub
xor
sbb
mov
sub
loope
dec
fnsave
push
mov
mov
sbb
in
lret
scas
add
pop
add
loope
out
sti
pop
cmc
or
adc
ss
lcall
fs
int
sti
insb
dec
mov
lock
and
bound
ret
test
push
pop
iret
mov
cmp
push
nopl
xchg
and
lcall
fmuls
sbb
fdiv
jg
push
imul
test
jecxz
xor
xchg
movsb
add
and
adc
fildl
push
lea
adc
jns
xor
pop
adc
es
iret
cmp
xchg
sub
jmp
or
lahf
fsubp
mov
push
lahf
mov
sub
mov
cli
pop
rcrl
push
insb
les
jmp
add
inc
cmp
nop
icebp
xor
std
push
sti
cs
pop
push
adc
push
lods
xchg
orl
call
cld
push
movsl
sub
divb
rorb
and
push
mov
mov
pushf
loop
inc
in
mov
fwait
pusha
jne
xchg
cld
mov
fldenv
addr16
scas
xchg
sbb
shl
test
cs
and
mov
mov
lock
test
mov
pop
out
mov
fnsave
test
xchg
jl
inc
call
sahf
inc
dec
mov
jmp
cltd
repnz
pop
mov
push
cmpsb
dec
fildl
mov
das
ret
flds
test
pop
cmc
xor
shl
push
dec
and
in
jae
mov
pop
xor
pop
popf
sub
lret
fbld
lods
inc
mov
loopne
popf
cmpsl
jmp
pop
mov
dec
pop
jp
mov
push
insl
dec
cmpsl
dec
mov
sti
cmp
scas
mov
lret
xlat
jmp
ja
mov
out
mov
out
push
adc
sbb
mov
js
insb
cmp
daa
jp
movsl
cmp
xor
ret
iret
enter
gs
adc
sti
rclb
aaa
and
inc
shrb
mov
cwtl
cltd
mov
inc
outsl
mov
push
call
fistpll
sub
inc
dec
subl
inc
les
jmp
mov
adc
aad
fs
cwtl
stos
ficoml
aad
and
push
sbb
add
sub
and
daa
out
add
inc
mov
popf
xor
test
push
mov
gs
imul
mov
push
pop
mov
mov
cmp
dec
mov
push
sahf
fs
cmpsl
data16
push
js
rorb
mul
enter
test
inc
xlat
mov
push
and
loope
and
out
sbb
or
xchg
jns
fsubrs
jge
inc
stos
jo
adc
mov
fdivr
pop
icebp
nop
imul
lahf
xor
or
mov
loopne
mov
mov
gs
mov
push
or
xchg
jmp
call
cmpsl
or
inc
in
lea
cmp
add
mov
jns
lret
popf
sub
mov
aad
shrl
mov
mov
or
lds
ficoms
jmp
ds
movsl
lcall
dec
lret
aam
inc
lods
dec
or
jle
rcrl
rcll
push
jbe
pop
aad
mov
in
aaa
or
mov
scas
lods
lods
aam
xchg
cmpsl
rol
sbb
inc
icebp
ja
enter
add
lret
test
movsl
mov
arpl
adc
das
cmp
inc
movsb
in
sbb
jae
fs
es
pop
pop
xor
daa
sahf
or
push
lods
sub
cmp
fsubr
mov
stos
cmpsb
ret
shr
or
push
xor
dec
or
movsl
xchg
loope
sbb
cli
ljmp
pushf
sub
pop
fstps
sarb
imul
andl
ja
lea
in
xchg
je
xchg
pop
addr16
fs
gs
xor
push
mov
pop
xchg
or
adc
cmp
mov
inc
jne
popa
sbb
dec
cmpsb
push
shrl
call
xor
xor
and
out
adc
mov
jnp
adc
mov
push
cs
fisubs
arpl
sbb
cmp
lods
lods
mov
push
adc
cltd
lret
push
sub
scas
xchg
imul
vmwrite
dec
aam
cmc
lcall
inc
outsb
cmpsl
rcl
mov
xor
push
stos
mov
jge
ds
movsl
push
call
in
mov
ret
xlat
scas
out
dec
lahf
xchg
bound
sub
jae
xor
mov
sahf
rcll
loope
sbbl
ljmp
jecxz
scas
xchg
sbb
outsl
jnp
outsl
dec
add
adc
in
jns
push
push
sbb
dec
add
dec
mov
shrl
jle
xchg
negl
fiaddl
dec
pop
sub
testb
jg
je
shlb
cmp
jae
aaa
xor
mov
pop
cld
inc
pop
stc
les
push
lds
sbb
in
clc
and
lahf
add
movb
fimuls
mov
cmpsb
stos
cmp
xchg
cmpsb
jp
xchg
aaa
pop
les
xor
jmp
mov
xchg
out
jnp
outsl
xchg
mov
imul
int
cmp
ret
pop
das
adcl
fdiv
shll
dec
cmpsb
arpl
xchg
sti
es
mov
adcb
outsl
xchg
dec
faddl
fnstenv
or
fadd
stc
cld
inc
dec
dec
scas
cmp
scas
lock
shl
js
dec
daa
push
jp
or
test
add
fisttps
dec
jecxz
out
push
ror
cld
aam
test
pop
insb
mov
cmp
imul
repz
pop
push
lcall
popa
or
pop
pusha
mov
int
cmp
or
pop
imul
icebp
test
das
outsb
mov
cmp
push
cltd
dec
daa
sub
mov
dec
or
mov
add
sti
insb
dec
sbb
mov
out
mov
arpl
js
cmpsl
shrl
aad
mov
sub
sarl
and
jge
push
rorb
add
xchg
call
mov
les
cmp
cmpsb
and
jge
or
push
lods
cmpsb
fisttpl
adcl
xchg
add
adc
lahf
gs
jb
aad
xor
cmpsl
mov
adc
xlat
outsb
pop
sbb
fdivs
rcl
imul
push
ficoml
and
or
adc
mov
movsb
and
outsb
ret
pop
pop
ljmp
push
jmp
lods
pop
aaa
aam
jb
jae
mov
out
ret
cmp
mov
pinsrw
or
stos
xchg
sub
test
mulb
loope
or
orb
das
sti
addps
scas
shrl
fcompl
cmpsb
stos
cltd
cmp
pop
ja
xchg
xor
popa
jmp
cmpsl
xchg
in
lock
push
adc
push
cmp
dec
adcl
hlt
inc
scas
ret
sahf
jge
adc
sbb
scas
mov
data16
jecxz
rcrl
xor
lahf
lock
fisubl
sarl
ljmp
and
adc
xor
mov
lods
pop
lret
xchg
cmc
sbb
mov
jns
int3
push
and
repnz
mov
dec
cmp
adc
cmpsb
mov
iret
adcl
dec
pop
lcall
rclb
xchg
mov
jl
dec
jo
dec
inc
mov
push
aas
mov
mov
jbe
repz
daa
sbb
das
mov
sbb
clc
xchg
and
sbb
jne
lods
ja
data16
jno
scas
addl
leave
mov
push
fidivs
lods
in
push
sti
faddl
xlat
dec
dec
pop
cmpb
stos
cli
mov
movsb
jg
add
mov
sbb
enter
stos
add
pop
out
cld
bound
insl
shll
jb
push
mov
mov
pop
ja
call
in
fs
xchg
mov
mov
mov
aaa
mov
mov
out
insl
mov
push
or
orl
pop
mov
in
dec
cmp
inc
int
shlb
popf
pop
push
mov
or
aam
sub
jle
jg
fistl
dec
arpl
subb
mov
cmp
mov
sbb
pop
test
mov
or
mov
adc
dec
ss
scas
daa
pushf
out
xchg
int3
loopne
cwtl
cmpsb
mov
xor
shrl
push
cli
push
ss
mov
dec
rcll
pop
loopne
sti
xchg
sbb
add
dec
cli
mov
aas
rcl
add
sbbb
mov
fcmove
pusha
mov
stos
ss
mov
push
data16
iret
daa
pop
pop
xchg
sub
mov
push
add
xlat
lods
sti
test
mov
mov
inc
stos
inc
mov
ljmp
mov
push
mov
xor
out
pop
push
and
jl
push
leave
xor
cmp
out
jmp
xor
inc
rorl
lret
aaa
adc
repz
ret
je
xchg
in
pop
in
push
sahf
or
scas
out
sub
shrb
jns
push
or
pop
xor
cmc
xchg
sub
xchg
insb
xchg
pop
data16
mov
addr16
mov
lret
jbe
lea
mov
into
or
jl
or
icebp
or
repnz
inc
sbb
mov
mov
or
hlt
pop
sub
add
push
and
lods
xchg
xchg
xor
cwtl
in
fsubs
jnp
xor
cmpsb
sub
or
mov
lods
cmp
fpatan
scas
mov
movsl
cli
jmp
pop
or
or
sbb
les
sahf
push
jne
ret
out
dec
add
hlt
rclb
pop
shll
enter
xor
lahf
lods
out
les
add
sub
jo
mov
sub
je
mov
and
mov
jl
mov
sbb
fldl
mov
imul
imul
mov
dec
add
les
fisubrs
ja
xor
inc
in
enter
je
mov
je
scas
popa
dec
cmp
or
mov
push
imul
divb
mov
test
xchg
outsl
out
lcall
mov
push
cltd
inc
pop
lea
push
fistps
add
out
int3
jge
xor
popa
sahf
cli
mov
fiaddl
and
push
cmpsl
rcl
jb
mov
js
nop
std
or
mov
shrl
aam
jl
lret
xor
push
cltd
bound
xor
stc
jnp
outsl
xchg
or
mov
mov
push
inc
push
into
sbbb
lea
sbb
sub
rorl
sbb
jle
shrl
or
inc
pop
cmp
ja
inc
xchg
inc
test
cmpsl
scas
lds
mov
add
mov
cmpsb
call
or
mov
inc
call
imul
mov
push
jne
sarb
inc
xor
xor
or
icebp
mov
in
cltd
mov
lret
imul
mov
test
mov
inc
cltd
cmp
jne
dec
cltd
adc
notl
adc
jae
adc
mov
lods
mov
pop
dec
inc
fistps
jnp
aas
mov
iret
in
scas
je
jmp
sub
dec
adc
xor
and
shrl
pop
pop
inc
int3
pop
in
ljmp
addr16
scas
mov
and
jbe
pop
push
mov
adc
icebp
out
mov
clc
jo
in
shlb
mov
xchg
push
pop
xchg
sbb
jnp
mov
adc
push
fisubs
push
rorb
enter
loopne
and
mov
adc
clc
sub
dec
sahf
fdivl
mov
add
sbb
jb
clc
test
sub
dec
lret
add
mov
pop
xor
fs
pop
jb
xor
jno
sbb
ss
push
mov
aad
loop
mov
ficomps
sbb
sbb
lret
pop
sarb
push
loope
adc
xchg
scas
xchg
hlt
mov
add
jb
sub
sbb
dec
mov
cmpsb
sbb
mov
xchg
mov
mov
lods
leave
pusha
xor
inc
xor
ss
mov
test
lods
shlb
sbb
jp
xor
mov
mov
pop
fwait
lcall
mov
xchg
cmpsb
xchg
and
loope
xor
lahf
xchg
out
add
shlb
sub
enter
adc
xchg
mov
data16
iret
mov
add
aad
in
fisubl
aad
movsl
add
call
mov
pop
es
push
test
cli
xor
icebp
jmp
ja
adc
add
movsb
add
push
push
repz
out
rcr
pop
filds
jb
cs
aad
mov
cmp
gs
cltd
lea
loope
aaa
push
cmp
xchg
js
push
shrl
jecxz
push
lcall
roll
mov
iret
adc
mov
in
shll
out
pop
mov
mov
jae
mov
dec
fldl
scas
movsb
test
inc
pop
mov
mov
faddl
xchg
add
push
add
fdivrs
jae
adc
clc
or
cwtl
das
sbb
fcomps
cmp
out
icebp
mov
mov
jg
fdivl
and
bound
mov
sub
mov
aaa
jg
xor
repz
pop
or
out
jns
aaa
in
cmp
sub
scas
pop
and
sbb
imul
test
push
add
cld
push
mov
jmp
rcrl
test
sbb
lea
sbb
out
into
push
inc
sbb
fstpt
add
subb
cmpsl
aam
dec
in
dec
ja
jg
jl
lahf
lods
sub
pushf
inc
adc
inc
bound
in
sub
jp
mov
sahf
dec
or
mov
imul
jecxz
pop
in
leave
pop
cwtl
push
sbb
lret
ja
int3
push
mov
into
dec
insl
mov
mov
call
or
jbe
subb
xchg
sti
mov
pop
nop
push
ljmp
mov
aam
outsl
subb
stos
out
and
dec
arpl
jge
mov
jmp
jnp
pushf
cmc
adc
xor
out
fsubs
mov
and
ja
subb
nop
and
addb
ret
fmulp
sbb
shll
cmpsl
and
out
xchg
and
pop
xchg
lahf
addl
mov
iret
aas
xchg
jle
stos
mov
ljmp
sbb
mov
inc
xor
std
push
rcll
inc
push
or
arpl
push
out
imul
stos
in
xchg
sub
fsubs
ficoml
loope
mov
in
addb
add
xor
add
fidivs
xchg
bound
aas
mov
cmpsb
mov
stos
fistpll
aad
pop
mov
jmp
or
ss
sbb
jmp
movsl
js
cmp
aad
adc
mov
testl
push
dec
lods
inc
jnp
shufps
cmp
inc
inc
orl
arpl
mov
aam
jmp
cmpl
cmp
add
popf
ja
and
into
xchg
arpl
stc
nop
xchg
xchg
shrb
cmp
pop
test
mov
out
add
pop
cmp
adcb
jae
imul
mov
test
sub
sub
mov
ret
outsb
jg
sub
nop
dec
pusha
mov
cwtl
test
clc
pop
test
mov
adc
xor
mov
das
cmpsb
cmp
mov
dec
pop
cwtl
pusha
cmc
lret
and
aas
test
xchg
or
add
icebp
pop
or
adcb
push
nop
js
push
sub
popf
pop
cld
or
push
repnz
add
jae
enter
loope
hlt
mov
mov
push
and
fisttps
add
jecxz
lahf
fnstsw
test
sbbb
inc
mov
in
mov
xlat
push
inc
mov
sbb
sub
sub
mov
icebp
mov
shl
mov
repz
push
aas
mov
enter
mov
test
jmp
jo
jecxz
shr
mov
movsl
and
mov
pushl
jecxz
adc
sub
pop
rcrl
outsb
dec
out
sub
cmp
push
lods
dec
jge
pusha
and
ds
inc
lret
bound
add
inc
mov
pop
enter
pop
xor
fstps
int
push
clc
sub
jecxz
lods
mov
fists
xchg
xor
stos
lcall
icebp
in
lret
cmp
cmc
lods
add
movsl
movsb
jae
aam
shl
push
sbb
mov
test
sbb
int3
and
sbb
jmp
xor
push
adc
pop
jns
mov
enter
mov
out
outsb
mov
incl
sbb
cmp
jle
loop
testl
sahf
call
adc
insl
add
bound
push
mov
or
jg
mov
mov
jno
mov
lods
clc
int
jg
or
sbbb
rcll
ret
rcrb
movsl
shl
xchg
push
mov
mov
pop
sbb
and
shl
lahf
icebp
mov
cltd
std
push
out
lahf
and
outsl
cli
scas
leave
es
mov
sub
cmp
or
or
mov
and
in
test
imul
xchg
std
or
add
ret
mov
inc
loop
data16
ds
loop
add
xor
mov
jns
push
call
stos
stos
jo
sbb
decb
scas
aas
prefetchwt1
sbb
repz
lret
mov
inc
into
push
jmp
out
or
in
dec
inc
pop
xrelease
mov
fdivl
mov
imul
xor
popa
cs
dec
jecxz
dec
call
bound
add
cli
mov
mov
mov
mov
cmp
pop
mov
and
fbld
push
adc
out
test
adc
push
mov
push
or
jg
push
fisttps
iret
lods
pop
cmpsl
jle
fstps
iret
sbb
mov
push
test
xor
inc
out
pop
insb
cmpb
mov
xor
movb
notb
mov
dec
push
add
push
adc
shrb
sub
shll
jo
mov
xchg
call
cmp
fsts
ds
jb
push
cmp
cli
test
dec
jge
aas
stc
xchg
and
xor
mov
fbld
inc
cmpsl
mov
arpl
cli
inc
test
sub
call
sbb
cmpsl
loopne
adc
inc
mov
jno
cld
xchg
mov
cmpb
mov
shl
xor
neg
idivb
fwait
jbe
mov
imul
pop
rcrb
movsl
in
popa
pop
cmp
les
cwtl
adc
fwait
inc
and
pop
imul
mov
and
ret
add
mov
inc
push
push
data16
shll
mov
adc
push
imul
pop
fnstcw
out
leave
push
mov
mul
jns
adc
inc
bnd
add
jnp
or
mov
push
and
mov
push
stos
add
adc
xor
xchg
adc
nop
push
imul
mov
insl
icebp
cmp
xor
test
jg,pt
out
add
push
repnz
ret
aaa
or
mov
xor
xor
in
fwait
aad
stc
jge
negl
outsb
mov
pusha
stos
mov
fistl
into
ljmp
mov
jbe
aad
jno
in
mov
xor
loope
sahf
je
rcl
imul
pop
mov
popa
mov
pop
xlat
data16
push
pop
cmp
and
sbb
gs
push
lahf
nop
jb
repz
rcrl
ss
adc
repnz
mov
addr16
cmp
lock
rol
outsb
sub
jp
mov
js
je
xchg
pop
push
fstpt
stc
cmp
jge
push
sti
push
setle
sahf
jl
fbld
cltd
cmp
mov
gs
bound
arpl
jns,pt
add
xorb
push
sbb
dec
movsb
lods
push
sub
sbb
add
and
sub
fwait
mov
push
cltd
leave
xor
push
cwtl
add
fninit
clc
sahf
dec
movsl
enter
call
jb
testb
inc
cmp
xchg
jecxz
clc
push
and
jmp
xchg
cs
push
fldenv
jecxz
imul
cli
push
ret
sti
aam
cmp
pop
lods
dec
loopne
pop
xor
add
fs
sbb
xchg
add
mov
cmp
clc
push
ds
jns
in
movsb
cmp
std
push
adc
mov
cli
push
push
xor
fiaddl
std
jb
andl
pop
rclb
inc
add
dec
push
push
repz
test
adc
insb
push
lods
push
xchg
popf
push
adc
mov
movsl
cmp
divl
cmp
stos
jl
mov
inc
pop
xor
or
lret
pop
mov
dec
shl
not
jns
jg
int3
pop
in
xor
lods
lods
adc
fwait
inc
push
fistpl
jge
sub
mov
ljmp
into
pop
cli
mov
lock
mov
xchg
rol
ja
add
sbb
test
stc
je
jg,pn
addr16
push
push
cmp
push
jno
adc
enter
dec
xchg
enter
iret
xor
mov
pop
fidivrl
ds
mov
or
bound
mov
mov
or
cmp
sub
les
pop
sub
in
adc
fadds
in
fwait
das
xchg
data16
lds
push
rcl
pushf
inc
popa
jnp
fdivs
cmpsl
and
pop
push
jbe
jl
jne
outsb
push
dec
ljmp
insb
xchg
addr16
mov
mov
shrb
and
stos
fldcw
pop
gs
cli
mov
ds
outsl
add
ja
mov
dec
pusha
fildl
mov
pop
js
aam
jns
xchg
test
inc
push
shll
xchg
jno
or
push
je
jl
dec
mov
jl
jno
fisubrl
jmp
sbb
add
xchg
jp
stos
clc
pop
sub
jbe
mov
insl
jno
scas
jp
xlat
popl
mov
repz
outsl
ret
testl
out
insb
cmc
fnstsw
push
shrb
cmp
mov
push
fstpl
mov
push
lcall
xchg
mov
daa
push
testl
icebp
xchg
sub
push
lcall
inc
fsubrl
xchg
rclb
arpl
pop
aam
adc
outsb
and
lahf
cli
xchg
adc
shl
push
negb
imul
add
fnstenv
add
pop
mov
movsb
mov
pop
mov
imul
xchg
stos
fsubrs
icebp
pop
sbb
mov
pop
movsb
pop
mov
popa
out
out
pop
scas
add
enter
aaa
jae
fs
and
into
arpl
push
fsin
add
dec
call
or
in
cmp
fildll
mov
xlat
cmp
out
loopne
add
out
testl
pusha
or
adc
lods
ljmp
pushf
xor
fisubl
xor
push
int3
imul
scas
mulb
push
sbb
inc
leave
fildl
cmpb
pop
inc
nop
loope
pop
adc
negl
shl
aam
bound
or
leave
and
push
jae
jp
arpl
ss
lcall
fcoml
lea
mov
or
jb
pusha
fidivl
pop
add
add
or
pusha
mov
pusha
cld
fstpl
mov
push
add
insb
mov
fcomip
scas
adc
inc
mov
mov
int
fldl
shrb
inc
cld
xchg
jb
adc
adc
dec
in
stc
push
mov
out
ds
xor
inc
test
xchg
shl
clc
pop
dec
cltd
sti
xor
pushf
out
and
sbb
inc
mov
repz
xor
add
insl
push
xchg
sub
lods
dec
daa
mov
push
loope
lea
js
shrl
inc
shrb
lret
arpl
jno
out
test
scas
or
notb
sub
adc
stos
cmpsb
xor
sti
jbe
mov
sbb
mov
aam
dec
dec
adc
mov
fwait
push
jg
mov
xchg
aas
pop
add
mov
add
and
inc
pop
sub
loop
rcr
cmp
je
test
int
cmpsl
fdiv
push
cwtl
push
mov
lcall
clc
mov
cmpsl
stc
push
lahf
jo
dec
mov
and
fdivs
push
push
or
sbb
iret
movsb
lahf
pop
cmc
into
mov
pop
inc
add
in
jnp
stc
lods
lret
insb
insb
add
sub
mov
add
test
push
loop
adc
fadds
fldcw
xchg
jb
lret
int
cli
adc
cwtl
fstps
cld
mov
lret
rcrl
sbb
jl
sbb
and
pop
sbb
dec
dec
push
jno
push
test
inc
add
dec
pop
cmpsb
outsb
out
mov
mov
mov
adc
cmp
adc
cmp
or
lock
jnp
or
jbe
pushf
iret
cmpsl
jp
pop
insl
hlt
into
fmul
mov
out
mov
xchg
shrb
mov
sbb
jmp
lea
outsl
fcoms
or
mov
xor
mov
outsb
popa
stos
enter
jbe
sub
jmp
inc
jecxz
jno
xchg
rclb
mov
pop
jae
scas
inc
and
mov
jmp
or
idivl
addr16
ds
jge
aaa
lret
jle
cld
pop
into
fimull
iret
sbb
movsl
icebp
loope
mov
ja
sub
mov
faddl
shr
or
xor
sub
cli
test
ja
or
sbb
or
std
pusha
sub
push
xrelease
push
gs
fwait
orb
outsl
insb
movsl
ja
shll
and
aaa
pop
dec
std
popf
xor
xorl
inc
fadds
popf
jge
cmpsl
data16
sahf
and
adc
sti
mov
xor
xor
adc
in
or
mov
out
adc
loope
jp
and
adc
add
addb
in
and
std
stos
jbe
cltd
inc
testl
pop
outsl
add
mov
adc
mov
fcoml
push
jo
pop
push
jle
cli
jnp
mov
mov
mov
inc
adc
into
ret
mov
jl
and
stos
dec
sub
out
fdivrl
mov
pop
add
pop
dec
test
adcb
in
icebp
xor
pushf
mov
pop
shl
nop
pop
notl
nop
pushf
shl
fucom
rcrb
sub
faddl
inc
cmpsl
xor
mov
shlb
xor
mov
mov
add
pushf
clc
dec
pop
outsl
jp
out
mov
mov
mov
push
dec
jmp
je
inc
xchg
lea
add
xchg
dec
mul
mov
mov
push
xor
andb
and
in
cmp
add
adc
mov
nop
pop
inc
dec
pop
inc
aad
aam
rcl
and
jmp
xor
arpl
sub
fiadds
sub
sub
das
push
or
xchg
or
mov
mov
outsb
lods
cmp
or
cld
jge
adc
xchg
and
pop
lcall
fmull
fsubl
add
loope
ja
out
bound
js
aad
sbb
pop
repz
mov
insl
faddl
add
add
sub
out
pop
inc
mov
xchg
sti
insb
shlb
fdivrs
jnp
push
call
imul
sahf
std
sub
mov
lret
cmp
das
shll
in
icebp
or
and
mov
and
scas
jl
call
jo
fsubs
or
xlat
jecxz
push
and
out
pop
inc
and
ficoms
in
test
in
mov
clc
sbb
jnp
mov
jno
lods
es
frstor
push
ss
ret
stc
xor
jne
add
inc
dec
mov
jno
mov
push
push
sbb
mov
add
xchg
inc
les
sarl
sarb
addl
mov
pop
scas
divl
mov
rcl
pop
movsb
add
enter
shll
jbe
xchg
dec
insl
xor
rorl
fadds
lcall
jge
cwtl
sub
sahf
adc
xchg
sbb
mov
xchg
hlt
faddl
mov
dec
in
out
enter
adc
enter
aad
lcall
test
push
insb
cmp
mov
pop
ds
mov
pop
fsubrs
dec
in
mov
ficomps
sub
aas
movsl
icebp
icebp
daa
test
fadd
out
in
pop
stc
out
jge
pop
cmp
popf
out
in
arpl
push
inc
in
int
xorl
dec
push
in
inc
out
aam
and
call
mov
lret
sti
mov
or
aas
clc
divb
ljmp
pushf
test
jns
or
adc
push
movsb
shlb
pop
cld
xchg
xchg
pop
sbb
sbb
movd
add
sbb
loopne
mov
pop
icebp
sahf
nopl
in
push
pusha
loopne
ss
inc
jecxz
ljmp
iret
fisubl
or
pop
add
and
push
sub
pop
pop
inc
fbstp
andb
fldenv
mov
lea
xchg
push
outsb
xor
inc
inc
popf
stos
sti
inc
push
push
testb
or
popf
sahf
xchg
pop
shl
aaa
jb
pop
pop
icebp
mov
and
imul
xchg
xor
push
push
fucomip
movsl
icebp
inc
in
or
sbb
sub
inc
outsl
jg
out
jns
lret
sub
push
mov
adc
stos
sbb
hlt
rorb
add
fidivs
xor
scas
cmp
xchg
or
imul
addr16
mov
ja
lods
std
gs
std
shr
sbb
cmp
xchg
xorb
bound
and
mov
in
mov
loopne
jecxz
aad
filds
cmpsl
xor
cwtl
or
repz
cmp
adc
jae
push
movsl
cwtl
xchg
lret
inc
cwtl
xchg
and
cmp
sub
xor
mov
inc
fs
sar
mov
adc
push
xorb
or
xor
shrb
push
cmpsl
cmp
pop
push
loopne
cltd
mov
mov
lret
dec
pop
cli
aad
outsb
adc
test
push
jne
sub
mov
jns
test
push
out
test
adc
mov
push
ret
js
fcoms
xchg
lock
aas
mov
sbb
push
sbb
movsb
shrl
iret
fwait
jb
jg
in
data16
xchg
sub
jb
shrl
inc
fidivs
int
ds
loope
pusha
insb
das
push
mov
daa
arpl
and
xorb
push
std
mov
inc
sbb
pop
ret
in
aad
mov
jecxz
cmp
jge
aam
xlat
add
mov
inc
or
stos
out
dec
adc
cmp
jp
adc
pop
fidivrs
decb
and
push
imul
or
ret
decl
ja
jbe
mov
xchg
mov
das
js
loop
imul
cld
jne
leave
pusha
push
repnz
xchg
sahf
mov
repz
xchg
repnz
sub
lock
scas
pop
stos
mov
mov
jbe
addr16
xor
fnsetpm(287
orb
mov
adc
dec
mov
enter
clc
inc
cli
or
or
out
add
mov
lods
dec
je
inc
lock
mov
dec
test
lock
sbbb
adc
pop
inc
jno
aad
aam
dec
addr16
out
int
sub
mov
enter
jb
xor
and
mov
iret
lds
jl
das
jno
xchg
pusha
or
push
push
setge
into
xor
inc
lret
cmc
cmp
mov
sbb
sub
mov
lods
bound
xor
daa
lds
pop
repnz
in
mov
mov
sbb
xlat
mov
shl
jg
fstpt
cmovl
xchg
dec
adc
mov
mov
inc
inc
or
mov
xor
mov
lds
xor
push
jbe
mov
mov
lahf
add
jp
and
adc
pop
fs
call
pop
adc
scas
xor
aaa
lods
mov
xchg
loope
cmp
push
roll
fs
jae
aad
aaa
mov
inc
lods
dec
lcall
nop
aaa
pop
ret
xor
xchg
or
nop
xchg
jae
jbe,pt
arpl
bound
and
cmpsl
push
mov
fidivrs
loopne
inc
shlb
std
icebp
les
adc
xor
leave
dec
jp,pt
and
add
jo
lods
sti
aad
adc
mov
aaa
loope
inc
fnstsw
inc
fidivs
pusha
mov
mov
dec
aam
push
or
std
stc
and
fldt
push
xchg
out
push
adc
adc
add
mov
adc
add
sbb
sti
in
sbb
xor
and
sbb
mov
jnp
enter
rcl
lds
addr16
loopne
insl
divb
jns
ret
xor
add
mov
xor
xchg
jecxz
dec
popa
notl
xchg
adc
sub
and
push
cmovo
cmc
or
fnstenv
das
push
incl
mov
inc
negl
mov
fmull
iret
xchg
imul
cmp
add
add
xor
cmpsb
iret
outsb
stc
mov
pop
xor
sbb
fadds
out
mov
cld
xchg
fs
dec
outsb
aad
mov
cmp
jno
sbb
es
inc
sbbl
push
lahf
ss
hlt
mov
aad
mov
mov
sbb
aas
mov
icebp
xchg
add
loope
inc
push
movsl
jb
out
shlb
xlat
out
decl
stos
mov
push
pop
cmp
js
and
mov
push
jnp
xor
or
mov
leave
jge
xchg
test
imul
mov
fistpll
data16
xor
jo
into
std
test
test
inc
pop
negb
pushf
data16
jl
icebp
sub
xchg
mov
gs
adc
xor
cmp
outsb
cli
cmpsb
out
pop
sbb
dec
adc
test
xlat
push
loope
or
push
mov
js
not
fcomps
dec
and
lcall
xor
fsts
les
jae
lcall
movsl
insb
xchg
mov
mov
mov
aas
push
sbb
mov
scas
mov
pop
ss
or
aad
mov
rol
jp
pop
test
push
scas
xchg
mov
mov
jo
pop
mov
mov
dec
and
mov
lods
sbb
outsl
cmpl
push
jae
stc
mov
call
xchg
sbb
test
outsl
push
call
cmp
and
mov
sbb
imul
jg
cmp
out
fsubs
fld
dec
pop
xchg
mov
or
clc
push
imull
xor
push
outsb
or
cwtl
and
pop
jl
pop
mov
sbb
test
add
mov
xchg
adc
sbb
ret
xchg
cli
aas
dec
mov
lret
jae
push
fnstenv
inc
mov
sbbl
or
jp
and
adc
lods
faddl
xor
sbb
jl
bound
shrl
mov
push
push
in
scas
mov
out
lea
mov
fstpl
sti
fildl
aad
jno
cmp
inc
or
xchg
adc
and
cmp
jg
mov
insl
mov
les
push
jb
orl
lods
inc
in
sarb
and
add
xchg
loop
xchg
rorl
std
sarb
imul
popl
ljmp
jno
in
cmc
cvtps2pd
rorb
xchg
outsb
cwtl
push
pop
cmp
aaa
jecxz
push
test
loopne
sub
cmp
jns
mov
and
push
test
imul
fdivs
test
cs
jecxz
cmp
pusha
les
inc
out
imul
leave
jl
icebp
sbb
xor
pop
push
mov
shll
jge
lods
pop
dec
pop
adc
ficoms
movsb
loopne
mov
pop
push
xor
jmp
push
imul
dec
arpl
gs
insb
sub
add
je
stos
negl
xchg
out
inc
xor
mov
in
inc
mov
adc
and
cmpb
and
outsb
mov
pop
ja
test
fldcw
mov
fidivl
or
mov
adc
mov
cld
call
cmp
bnd
int
stos
bnd
test
push
xor
scas
out
clc
ss
push
pop
sbbb
pop
xor
cmc
int3
lahf
xor
jecxz
or
push
cwtl
mov
mov
xor
sahf
inc
push
outsb
xchg
cmp
addr16
orb
or
in
adc
sub
rcrb
psubd
cmpl
and
or
inc
cmp
das
jl
xchg
pop
jno
shrb
pop
and
popl
or
rorl
mov
inc
popf
jmp
xchg
xor
dec
loope
jge
pop
psrlq
xchg
imul
sub
divl
test
jg
imul
cltd
std
mov
stc
push
imul
sbb
rclb
inc
push
and
lret
ss
dec
dec
ja
push
xchg
mov
orb
hlt
scas
out
add
ret
cmp
or
mov
bound
aad
loope
bound
mov
add
sbb
nop
fsts
repz
fbld
sbbb
pop
push
jg
mov
xchg
mov
sbb
mov
stc
mov
push
inc
notb
lcall
jecxz
int3
call
imul
mov
add
insl
shrb
enter
imul
aam
and
lea
into
in
int
mov
in
rcll
add
es
rcr
fisubs
out
jnp
mov
fucomip
hlt
jge
das
lahf
icebp
xor
lods
mov
add
sub
ljmp
pop
ss
out
push
lret
insb
or
dec
lods
push
sbb
shll
xlat
das
in
xor
test
inc
mov
fwait
xor
or
lea
adc
repnz
mov
imul
pop
icebp
cmp
mov
jle
aas
dec
sub
repz
jp
xor
push
xchg
or
das
movl
mul
pop
cmp
movsl
cmp
pop
iret
data16
jae
push
pop
in
test
xchg
xor
test
mov
cmp
xchg
xchg
and
push
mov
ret
insl
sbb
adc
inc
int3
jp
jp
adc
adc
mov
adc
mov
pop
jb
pop
aas
pop
jo
push
mov
inc
or
call
mov
outsl
add
in
decb
cmpsb
push
imul
lret
bnd
in
insb
dec
add
or
lret
loop
push
mov
mov
xchg
rclb
fdivp
mov
push
mov
cld
and
push
fstpt
enter
or
clc
outsl
es
mov
lret
mov
pusha
or
les
jns
shll
adc
add
in
cmp
and
cmpsl
loope
xor
cmp
gs
sbb
jl
mov
lret
pop
jnp
inc
movsl
shrb
pop
pop
lcall
jmp
lret
mov
and
ret
or
xchg
out
mov
cmp
cmp
add
pop
test
pop
daa
jecxz
mov
dec
fnstenv
mov
and
stc
out
push
hlt
test
ret
xor
pop
mov
hlt
sub
pop
rorb
mov
fsubrl
pop
or
push
lea
dec
adc
sub
mov
mov
xchg
int3
icebp
adc
pop
out
mov
jno
int3
lret
ds
xor
xchg
insl
sub
lods
mov
mov
out
inc
jne
adc
icebp
jb
xchg
fstpl
push
cmc
add
addr16
js
cs
ret
in
call
dec
jno
inc
mov
clc
or
andl
xorl
outsl
fmulp
jne
std
lcall
or
stos
iret
xor
lcall
mov
xchg
pop
das
push
add
dec
mov
ret
jg
repnz
shll
jp
imul
aam
rclb
leave
push
sbb
dec
in
adc
and
insb
sbb
lret
roll
xor
movsb
ja
fisttpl
sbb
jno
mov
sbb
or
mov
sub
ja
idivl
sub
fadd
sub
xor
add
stos
sbb
pop
jecxz
fnsave
scas
add
ret
cmp
inc
and
in
int3
test
decb
test
int3
iret
out
and
insl
movsb
loopne
pop
popf
subl
sbb
jle
pop
dec
loope
icebp
andl
inc
xor
test
xor
bound
lret
nop
pop
sbb
pusha
jno
push
jo
int3
inc
push
mov
gs
jbe
into
jbe
insb
mov
mov
mov
sbb
mov
cmp
push
mov
xchg
lods
pop
dec
movsl
xor
inc
testl
dec
pop
ficoms
out
cmp
mov
icebp
fildl
lcall
stc
loopne
sub
mov
dec
pop
scas
jl
or
jg
stos
xchg
dec
mov
hlt
aaa
and
in
dec
sbbl
std
mov
push
jne
push
pop
gs
movsl
insb
and
cmp
jnp
cmpsl
movsb
pop
xchg
rclb
xorb
test
scas
out
mov
fildll
add
test
daa
hlt
sub
mov
ret
mov
push
rcr
repnz
rcr
push
cli
xchg
mov
sbb
xchg
cmp
jmp
add
xchg
in
bound
scas
int
in
inc
jo
je
negl
jl,pn
pop
push
mov
js
pop
pop
jb
loope
int
sbb
sarb
pusha
adc
pop
xchg
jbe
imull
mov
fisttpll
daa
lret
popf
sub
imul
lods
enter
loope
dec
xor
push
xchg
arpl
push
je
lods
sub
in
lret
adc
add
out
xchg
sub
rcrl
push
mov
sbb
in
leave
pop
sub
loope
jnp
jae
and
push
rcr
stc
pop
lcall
and
lret
xor
in
mov
stc
or
mov
jno
mov
adc
test
outsb
pusha
gs
jmp
cmpsl
aas
data16
jae
loop
in
imul
aad
sub
rcrb
popa
sub
cmp
arpl
leave
cli
pop
in
imul
sbb
call
das
xor
movsb
out
aaa
into
clc
push
fs
popf
lret
je
ret
push
js
sbb
mov
mov
sub
lcall
jmp
xlat
idivl
pop
js
insb
mov
cmp
lods
and
sub
dec
dec
bound
lock
imul
test
add
xor
and
mov
pop
push
cmc
iret
cld
imul
clc
jae
ret
mov
cmc
xchg
cmpb
push
test
cs
pop
push
cli
aas
sub
orb
mov
decl
mov
lea
mov
sahf
ret
pop
jno
push
jno
imul
lods
inc
pop
and
and
in
in
push
sbb
shll
mov
flds
imul
xchg
ss
sub
sbb
data16
pop
int
mov
stos
inc
sbb
xlat
cmpsl
inc
enter
jp
cli
sbb
lods
into
fldenv
inc
adc
dec
fistps
xor
jp
mov
jmp
pop
adc
jge
inc
push
fs
jnp
out
add
fdivr
outsb
lods
cs
nop
out
daa
add
mov
lcall
and
in
dec
shll
xchg
in
repz
or
inc
mov
fmull
nop
push
xchg
pusha
orl
add
mov
incb
sub
pop
loopne
cmp
cmp
movsb
ds
jmp
ret
hlt
pop
jecxz
insl
imul
xor
sbb
mov
aad
es
jne
dec
es
data16
sub
les
mov
mov
dec
xor
popa
loopne
jge
jle
aas
sahf
pop
cmpsl
adc
jp
or
xchg
lods
cmp
mov
pop
imul
rorb
lock
pop
mov
jae
or
adc
orb
mov
les
jb
jge
pop
icebp
fistpll
popa
xchg
cmpsb
cmp
jb
sbbb
xchg
outsb
push
leave
add
int3
cs
xchg
xlat
pop
xor
mov
les
fdivl
jnp
ss
pusha
pop
stos
into
arpl
cli
call
jmp
test
sbb
adc
in
insb
cmp
adc
sbb
push
sub
jg
repz
sub
in
ja
pop
pop
aad
xlat
repnz
in
es
das
ret
lock
popf
arpl
enter
cs
aam
filds
in
movsl
cli
mov
scas
inc
pop
inc
ret
lods
int
lds
cmpsl
push
adc
xchg
adcb
adc
pop
xchg
stos
enter
fucomip
clc
and
jbe
ret
jb
xchg
mov
enter
push
lock
lcall
outsl
inc
push
loop
stos
push
sub
jl
push
out
cmp
adc
data16
out
add
pop
sub
into
fldl
cli
pop
jne
mov
sub
inc
cmpsl
add
or
sub
sub
pusha
fwait
push
loope
cmp
sbb
or
xchg
sub
ret
add
stc
or
push
or
cmpsl
push
adc
jbe
sub
adc
call
pop
bnd
decl
clc
sub
loope
aas
sbb
es
shrl
bound
shrl
or
pushf
pop
xchg
pusha
sub
jg
fdivr
jl
in
cli
es
stc
xchg
loopne
adc
add
bound
jle
into
pop
and
cmp
add
jae
rol
aas
push
xchg
jl
aaa
sti
popf
movsb
push
inc
test
xor
or
fcomps
mov
sub
les
cs
sub
popa
aam
out
leave
adc
add
shll
and
dec
push
enter
in
pop
ret
int
out
dec
sbb
sbb
inc
cmpsl
mov
addr16
inc
sub
mov
jg
mov
fdivr
shl
push
mov
add
sub
popa
out
rolb
outsb
jl
lods
stos
stos
sub
sub
pop
ret
out
dec
lret
outsb
aam
outsb
mov
push
mov
xchg
std
das
movsl
cld
fistpl
or
jo
or
adc
repz
pop
jae
test
iret
add
and
adc
lock
xor
cmpsb
mov
jbe
jns
idivb
and
jb
and
or
inc
pushf
xchg
sbb
jb
cmp
jle
sub
jne
mov
lods
and
scas
cwtl
pop
mov
test
loope
ss
movsl
cli
inc
ds
inc
cmpsb
loope
mov
scas
jge
divl
lods
iret
popf
add
sbb
lret
jnp
jo
cmp
mov
mov
push
mov
repnz
out
fcompl
dec
cmpsl
out
out
outsb
insl
xor
rcll
dec
jecxz
mov
inc
daa
pushf
cs
sbb
dec
faddl
cmp
arpl
jnp
mov
lret
call
in
push
push
xor
lds
xchg
sub
sar
xchg
fldcw
iret
lahf
or
and
cmp
mov
adc
inc
int
inc
pop
pushf
pop
repz
push
gs
fstps
xor
pop
mov
mov
testb
icebp
adc
mov
or
fstpt
mov
sbb
cmp
inc
sti
out
xchg
mov
aam
hlt
std
mov
rcrb
mov
aaa
fs
in
nop
lret
adc
out
push
in
not
jne
pusha
pop
scas
xchg
jle
adc
movsl
sbb
pop
cmp
fucomi
js
and
aaa
into
aaa
add
adc
fisubs
mov
jo
adc
adc
push
ficomps
jb
sub
movsb
cmp
xor
mov
popf
scas
mov
out
in
negl
sub
pop
outsl
cs
push
add
pop
jmp
push
mov
sub
mov
or
shrl
dec
cmpsl
xchg
jns
out
dec
shrl
add
out
or
hlt
or
dec
xor
hlt
enter
aad
mov
xchg
lods
in
imul
add
adc
fldl
insb
cmpsb
cmp
cmp
imul
adc
sub
xchg
xchg
pop
sahf
stc
jmp
xlat
sbb
in
pop
adc
dec
fnsave
shrl
ja
push
inc
stc
cwtl
out
sbb
inc
fstpl
std
pop
call
aad
aas
push
mov
mov
test
sbb
mov
inc
or
jge
push
push
fstl
mov
fnstsw
jb
imul
sbb
sub
cli
inc
mov
fs
test
cmpsb
out
mov
ljmp
mov
cs
mov
jecxz
pusha
mov
jbe
dec
fs
dec
icebp
clc
sbb
pop
xchg
lods
scas
adcb
pop
sub
dec
pop
loop,pt
dec
into
pusha
ds
dec
repz
push
cmp
or
inc
or
sbb
jne
mov
movsb
pop
cmp
inc
jae
cwtl
add
xchg
sbb
jmp
loop
pop
dec
decl
out
mov
inc
imul
mov
and
lock
mov
cli
sbb
or
mov
mov
push
sub
push
lds
sbb
addl
add
inc
xchg
jne
test
pop
sbb
jns
jmp
mov
pop
jns
sub
pop
adc
shlb
outsb
mov
and
imul
xor
xchg
pushl
movsb
daa
test
xchg
push
dec
adc
dec
jecxz
nop
xor
std
out
push
pop
lcall
inc
mov
in
cmpl
mov
pop
jle
sub
push
sub
pop
adcl
jns
scas
imul
aam
sub
xchg
insl
imul
repnz
outsb
sub
bound
jmp
in
xor
inc
gs
xor
dec
addr16
mov
mov
lock
fsubs
ret
lods
xchg
mov
add
cmp
pop
mov
fildl
gs
pop
inc
or
fidivs
dec
mov
repz
mov
mov
inc
ds
int
fs
gs
push
and
mov
clc
and
xor
and
xor
mov
or
inc
cmp
push
mov
imul
fisubs
sahf
les
lcall
fidivl
jle
cwtl
jae
js
push
jge
fsubrp
fistl
mov
cmp
int
aas
mov
imul
jle
ja
ficomps
or
jmp
iret
leave
mov
sbb
cld
cmp
movsl
loope,pn
add
jmp
test
mov
fdivs
xor
shll
or
xor
lods
into
aas
rorb
lret
xchg
pop
mov
push
mov
insb
sahf
ss
pop
das
stos
dec
mov
mov
test
inc
push
cmp
xor
mov
leave
in
xor
sbbb
mov
sub
cmp
cmp
rclb
or
out
xchg
adc
xlat
jb
dec
hlt
lcall
fiadds
dec
add
cmp
sub
pop
loope
xchg
adc
arpl
hlt
jg
push
shll
bound
pop
push
mov
dec
xchg
dec
cmp
dec
mov
jecxz
push
imul
xor
xchg
out
test
or
push
mov
xchg
mov
pop
jge
add
sbb
dec
xchg
dec
inc
stos
fistpll
in
cmp
int3
arpl
test
jnp
mov
mov
jp
cs
mov
mov
sahf
cmc
xchg
cld
pop
adc
mov
xor
xor
cmpxchg
pop
mov
gs
sbb
mov
insl
shr
xor
xor
and
shrl
push
fwait
jg
jmp
adc
cld
cmp
lea
mov
es
jnp
leave
jmp
inc
adc
pushw
cmp
repnz
sbb
pop
xchg
sbb
dec
jno
in
in
arpl
push
jg
outsb
dec
cmpsb
pop
push
ljmp
dec
enter
shr
jb
mov
and
xlat
jge
mov
scas
inc
xor
mov
sub
jno
push
add
into
decl
dec
js
pop
movsb
jae
rcrl
fbld
adc
fcomps
scas
repz
mov
dec
inc
and
sbb
inc
or
pop
in
repnz
out
fcmovbe
cmp
pop
cld
fmuls
shll
push
mull
cmp
push
adcl
in
enter
les
push
fisubs
cwtl
das
xchg
fld
data16
mov
add
sbb
dec
int
inc
jmp
sbbl
dec
aaa
leave
jo
mov
out
lret
sti
pop
mov
lock
adc
mov
mov
and
das
fildll
pop
jne
mov
js
jb
adc
mov
ficompl
xor
scas
out
cmp
adc
addb
push
mov
cmp
addl
ljmp
sbbl
mov
data16
in
out
pop
pop
bound
outsl
push
std
inc
pop
stos
inc
int
clc
aam
cmp
mov
add
out
pop
sbb
and
cs
and
stc
xor
mov
mov
popf
loopne
mov
mov
xchg
shl
pop
mov
pusha
decb
shlb
dec
xchg
insb
xor
pop
jne
sub
popa
mov
rcll
inc
jns
and
aaa
pushl
fiadds
inc
push
in
stc
inc
sbbl
sub
xchg
in
mov
adc
jg
icebp
mov
es
dec
loope
mov
fcmovne
push
loope
pop
mov
sbb
adc
rolw
pop
inc
addr16
leave
pop
enter
enter
xchg
call
mov
out
jb
pop
sub
dec
jg
xor
out
mov
or
push
jbe
cmp
xchg
pop
inc
aam
xor
inc
push
sbb
dec
loopne
adc
cli
mov
lods
pop
sti
ret
cltd
popf
rcll
test
xchg
sub
and
mov
shlb
iret
pop
mov
mov
hlt
cmpl
ja
mov
addl
mov
stos
mov
int3
xor
add
pop
test
ss
test
lret
movsb
mov
out
sub
and
mov
jae
jns
mov
mov
cmc
bound
ret
cmpsb
inc
sbbl
or
jnp
jne
fidivl
adc
cwtl
xor
jbe
push
and
jno
or
adc
int3
mov
shlb
xchg
add
xorl
mov
cmp
adc
aaa
lods
add
xlat
imul
int3
adc
hlt
push
lahf
fstpt
dec
mov
cmp
adc
imul
bound
jbe
rorl
xchg
jmp
jne
orb
sbb
repnz
outsl
xchg
jge
call
es
pop
inc
sbb
incl
push
lods
sbb
mov
das
mov
jmp
add
mov
rolb
or
inc
sub
insb
mov
out
faddl
fiaddl
iret
test
stos
dec
push
xor
ret
lods
cmp
cmp
insb
pop
and
enter
pop
and
andb
push
jmp
iret
es
sbb
aam
fists
mov
loope
add
jne
xor
mov
mov
shlb
in
jne
out
add
ffreep
xor
loope
jae
and
cmp
xchg
cli
push
mov
outsl
fdivs
cli
test
mov
pop
mov
xchg
cmp
add
pop
sti
or
enter
aam
iret
jmp
and
add
pop
jb
xchg
movsl
jl
ret
sbb
xor
movsl
out
repz
mov
sub
cs
movsl
push
testb
fsts
xchg
sbb
inc
popa
rcll
stos
jmp
daa
xlat
pop
or
fwait
xor
cmp
mov
ds
rcrb
jmp
in
popf
aad
pop
cmp
jp
cmp
decb
xor
xor
pop
jno
nop
mov
not
out
and
mov
dec
pushf
xor
cmpl
idivb
shrb
sahf
movsb
add
cs
mov
jo
in
sub
insb
jle
imul
inc
adc
cli
jne
mov
hlt
outsb
mov
lds
lock
pop
enter
inc
cmc
icebp
and
idivl
sub
sbb
jno
xor
push
or
andb
adc
and
das
push
sbb
xor
data16
insb
rclb
nop
in
popa
mov
or
test
xchg
adc
and
dec
mov
dec
xor
adc
lods
arpl
in
dec
loope
daa
aad
fiadds
dec
mov
xlat
repz
cmpsb
inc
xor
sbb
xlat
lcall
jo
out
mov
add
subb
incb
pop
mov
imul
and
sahf
jnp
adc
dec
cltd
fdivp
decb
stos
test
ss
pop
mov
subps
mov
jnp
push
jp
sub
icebp
addr16
addr16
lcall
mov
loopne
imul
xchg
jne
iret
ds
bound
jle
mov
xchg
adc
aas
jecxz
sahf
sbb
sub
gs
fwait
roll
ficoml
adc
sub
dec
cmp
hlt
ficompl
mov
in
pop
insl
ss
cli
mov
push
or
andl
jmp
mov
push
clc
or
aam
into
mov
int3
loopne
aam
sub
mov
inc
sub
dec
mov
push
jge
test
jns
dec
add
dec
pusha
iret
and
lods
jb
test
ja
jae
pop
cwtl
or
nop
adcb
mov
add
mov
int3
es
lds
popa
lods
repnz
pop
inc
bound
movsb
dec
adc
outsl
je
xor
add
xchg
popa
inc
mov
sbbb
fs
fildl
or
pop
out
outsl
subl
enter
out
cld
jnp
ss
mov
shl
adc
inc
ret
bound
xor
test
adc
mov
rorb
loope
aas
scas
xchg
out
sbb
in
pop
movsb
mov
std
mov
into
mov
cmp
lock
fbstp
dec
fstps
loop
scas
into
push
push
push
lea
add
add
xchg
dec
mov
sub
sbb
iret
adc
enter
inc
add
sarl
movsl
push
fs
sahf
sbb
cmp
shll
aas
shl
sbb
push
sar
adc
das
repz
lcall
adc
mov
jb
dec
fdivrl
mov
je
insl
cmpsl
dec
lods
xchg
cmpsb
movsl
xchg
pushf
xchg
sub
xchg
xchg
jmp
aaa
pop
test
mov
sbb
or
out
test
and
cmp
testb
push
sbb
nop
sbb
fwait
push
xchg
shrb
sub
jg
loop
dec
dec
int
pop
movsb
sarb
repnz
adc
ret
test
add
and
notl
xchg
dec
fcoml
das
mov
insl
or
sbb
adc
idivb
in
adc
sub
cld
dec
ss
ja
sbb
shlb
fdivl
cmp
dec
adc
mov
iret
std
insl
jbe
cmpsb
xchg
mov
out
push
mov
aaa
push
mov
cmp
stos
flds
outsl
mov
mov
test
addl
pop
out
dec
mov
hlt
jbe
clc
mov
fstl
nop
jae
movsb
pop
sub
mov
xchg
xchg
out
pop
jb
mov
or
push
cmp
int
xor
gs
cmp
and
aam
pop
ret
orb
sbb
stc
dec
cld
mov
stos
fdivr
gs
das
les
pop
cltd
sub
loope
mov
xor
xlat
xchg
mov
movsb
cld
fcmove
ss
movsb
add
inc
inc
jl
out
and
xor
out
push
int
mov
shll
js
pop
jbe
sahf
cmpsl
in
std
push
cld
fbstp
xchg
xchg
cs
lods
sti
jmp
adc
fdivrs
shl
fwait
bound
add
sbb
push
sti
adc
data16
push
cmpsb
mov
daa
andb
insl
jb
sahf
pop
xchg
xor
test
push
test
cmpsl
in
xor
or
cmp
mov
push
or
xlat
sbb
pop
cli
jmp
and
fdivrs
inc
dec
or
fidivl
pusha
mov
xchg
insl
push
loope
inc
lea
negb
outsb
dec
dec
jg
rorb
pop
orl
ret
xor
cmp
push
lcall
in
test
js
xor
inc
add
or
adc
jle
xor
inc
jae
subl
dec
lock
or
jle
and
and
inc
fwait
jge,pn
pop
mov
imul
sub
dec
rorl
cmc
mov
adc
outsb
push
fcomp
in
adc
hlt
int
mov
mov
sbb
sbb
stos
ja
xchg
cld
cmp
push
mov
xchg
jmp
int3
sub
test
mov
xor
outsl
and
adc
xchg
aaa
and
mov
mov
or
call
es
cld
push
inc
nop
sub
fldcw
jne
cmc
mov
push
outsb
sub
ret
or
pop
adc
jo
jle
mov
call
mov
mov
outsb
ljmp
andb
xchg
mov
push
jno
inc
xorl
mov
add
int
dec
icebp
insb
lret
rolb
setl
xchg
push
iret
lods
sbb
cmc
lock
mov
bnd
cmp
lcall
mov
add
es
test
lret
xchg
or
stos
sbb
adc
sub
leave
or
hlt
mov
mov
add
ljmp
jb
jae
or
add
adc
cli
and
jecxz
push
gs
xchg
sbbl
arpl
adcl
repnz
pop
lods
incb
and
int3
xor
push
test
outsl
jl
lret
cltd
or
dec
call
test
idivb
or
sahf
cmp
push
cmc
pop
or
ficoml
pop
cs
das
pop
repnz
adc
dec
jnp
jp
cmpsl
cmp
lcall
mov
inc
test
mov
mov
repz
jle
mov
or
fsubl
lods
jae
popf
stos
in
jmp
adc
fs
mov
in
cmpsb
xor
mov
popf
dec
add
xor
xchg
aas
inc
mov
or
lret
mov
sahf
stc
sub
lcall
or
ja
scas
pop
mov
aas
mov
cli
xchg
push
mul
mov
clc
int
enter
pop
repnz
andl
adc
pop
cmp
sbb
hlt
jl
sbb
jno
pop
and
cmpsb
mov
lret
mov
inc
xchg
imul
icebp
stc
js
inc
mov
fwait
push
scas
push
testl
cmpb
pop
hlt
in
shrb
push
pop
dec
cmpsb
fs
sbb
or
fisttps
mov
inc
push
inc
in
xor
and
xchg
lret
test
jmp
pop
ret
roll
mov
mov
add
mov
adc
adc
push
adc
add
sarb
jle
loope
xor
sbb
jbe
bound
lahf
das
test
xchg
lahf
test
sbb
dec
in
js
fists
stos
xchg
mov
shrl
jl
inc
cmp
lcall
addr16
test
pusha
mov
fildl
mov
xchg
xchg
shll
lcall
sub
add
lahf
imul
xchg
shlb
test
clc
inc
int
sbb
aam
mov
xchg
dec
icebp
push
mov
aam
cmp
pop
pushf
cli
adc
pop
jbe
mov
pop
and
ja
push
out
add
movsl
cmp
and
inc
xor
push
into
sahf
cmp
mov
clc
fists
xor
xor
mov
fisubrs
dec
push
or
and
int3
xchg
mov
and
clc
jns
pop
xor
cmpsl
mov
popa
mov
fbld
sbb
mov
mov
adc
push
jmp
adc
and
or
xor
gs
pop
lds
jae
add
xrelease
stos
mov
push
xor
xor
mov
outsl
ret
mov
imul
out
or
pusha
std
sbb
out
mov
aam
rolb
sub
test
inc
mov
jb
imul
ror
stc
xor
sbb
enter
inc
cmpsb
push
insl
mov
cmp
inc
out
aam
dec
and
cmc
xor
adc
fnsave
pushf
addr16
inc
int
lret
out
dec
dec
das
stc
lods
mov
xor
xor
mov
sub
aaa
arpl
mov
push
inc
xor
push
daa
ret
jmp
test
dec
pop
add
inc
scas
out
xchg
pop
int3
dec
daa
repz
rorl
jno
xchg
jle,pt
fwait
fs
int3
inc
add
das
jo
daa
jne
mov
adc
lret
jns
divl
ds
sbb
inc
and
push
in
push
jbe
xchg
ljmp
out
inc
inc
or
sub
xlat
push
add
ficoms
sti
ret
adc
cmc
fsubrl
and
and
pushf
sbb
int3
dec
mov
mov
push
les
aas
mov
int3
mov
inc
fsubrs
push
or
push
inc
cld
xchg
jne
adc
adc
mov
int
hlt
in
jl
mov
sub
add
stos
sub
insl
insl
scas
jmp
mov
ljmp
sar
nop
add
jle
inc
mov
inc
pop
jl
cmpsl
popa
mov
push
sbb
xor
mov
lret
imul
mov
sbb
outsb
outsb
or
xor
sbb
hlt
ss
insb
stc
fdivrl
jp
mov
mov
xchg
dec
frstor
clc
lea
outsb
stos
pop
or
add
shrl
ss
pushf
lock
inc
pop
aas
test
and
xlat
jecxz
imul
icebp
sbb
inc
and
jno
jp
lods
add
outsl
dec
cwtl
xor
fldenv
aam
mov
inc
jp
ficompl
rolb
mov
int3
out
fdivr
inc
rol
cmp
xchg
jb
sub
pushf
and
inc
jge
in
fimuls
xlat
pushf
movsl
xchg
mov
stc
popf
sahf
lahf
cmpsl
jle
cmpsl
setp
stc
je
cmc
mov
mov
icebp
adc
loope
js
mov
push
fildl
xchg
cmpsl
inc
dec
pop
cmc
jg
lret
and
pop
loope
loope
je
xor
loopne
cmp
and
pop
insb
cmpsb
and
dec
add
xchg
repnz
sarl
test
mov
fidivs
add
mov
fld
ja
mov
cld
cltd
daa
sbbb
xchg
scas
mov
jo
scas
xlat
mov
outsl
and
leave
jns
cs
test
add
mov
stos
cmp
mov
cmp
aaa
subb
stos
lret
inc
sarb
sbb
jle
into
es
mov
test
sbb
js
add
mov
push
test
jge
push
sub
clc
inc
pop
xchg
mov
cmpsb
add
out
adcl
std
push
ret
push
and
in
std
stc
pushl
iret
das
mov
test
imul
sub
xor
xor
loopne
aad
mov
out
xchg
and
pop
aad
inc
data16
test
xchg
push
out
insl
sub
rcrb
push
dec
mov
sbb
push
xorl
int
xor
int
jmp
fists
out
mov
out
mov
insb
in
and
mov
clc
nop
mov
adc
rol
sub
ds
scas
fadds
aam
outsl
inc
sahf
and
sbb
mov
repnz
pop
mov
shl
into
fstl
dec
mov
ud1
or
pop
stos
fpatan
xor
imul
in
xor
xchg
pop
dec
or
xchg
push
movsl
in
mov
leave
loop
jb
pop
jl
rol
jg
data16
lods
sub
sti
add
mov
fistps
jmp
jne
popa
xchg
iret
movsb
dec
xlat
mov
or
cmpsb
mov
cmp
out
pop
adc
fmul
outsb
ds
cmp
cmp
mov
cmp
js
xor
lea
mov
inc
add
frstor
and
dec
inc
lods
mov
inc
cmp
jmp
jmp
lods
aad
push
pop
into
nop
push
arpl
in
jg
adc
frstor
bound
leave
xor
fnstenv
cmp
add
dec
jmp
enter
cld
xchg
js
xchg
sbb
sub
lret
cmc
sub
fs
fsubrs
vmovss
push
in
adc
xchg
shlb
sub
fs
or
scas
adc
jns
mov
push
ret
xchg
lds
hlt
mov
data16
ljmp
cmc
mov
push
int
mov
jb
jne
adc
insl
cld
mov
std
imul
popf
bound
and
in
mov
or
dec
dec
mov
dec
mov
mov
in
clc
jno
mov
adc
mov
and
or
mov
or
and
cmp
je
sub
xor
inc
into
xchg
scas
jmp
into
pop
lahf
mov
out
pushf
and
rcrb
add
and
push
sub
stc
cmpsb
mov
mov
lahf
pop
push
sbb
or
das
push
mov
shrl
les
int3
pusha
popa
jecxz
sub
xor
nop
scas
mov
and
jl
sub
rorl
rcrl
pop
mov
or
mov
mov
push
fimuls
push
mov
mov
mov
inc
movsb
sti
test
mov
iret
inc
push
leave
mull
inc
sbb
inc
pop
lret
push
cmp
push
mov
cmp
js,pn
lods
shrl
pop
addr16
test
mov
mov
mov
and
mov
cmp
or
push
data16
xchg
xchg
pop
subl
dec
pop
xchg
lock
xchg
inc
pop
adc
sahf
xchg
out
dec
pop
sbb
pushf
dec
dec
xor
std
nop
mov
sarl
adc
sub
insl
ss
adc
mov
mov
rorl
inc
push
xchg
in
dec
jne
xor
mov
pop
lret
call
xor
dec
mov
push
lds
ret
arpl
outsl
cmp
int
popa
jmp
call
cmp
jge
shl
lock
mov
pop
mov
pop
daa
movsb
sbb
push
les
cld
cmp
adc
and
pop
xor
xor
bound
dec
lock
adc
imul
mov
shr
sub
test
push
in
sbb
lods
pushf
aas
xor
pop
test
outsb
jl
push
inc
fcomi
out
iret
dec
adc
loop
in
push
scas
std
push
xorb
test
mov
lret
xlat
sbb
mov
ss
fidivrs
xor
inc
std
and
jae
ss
es
popf
push
jmp
inc
andb
push
jne
jnp
add
int3
inc
cld
xor
loope
sub
and
jl
mov
push
pushf
xor
aam
in
test
mov
popa
out
xchg
mov
ds
jo
xor
pop
loope
mov
add
inc
lods
sub
sbb
lahf
jg
push
jno
push
mov
ss
lods
arpl
mov
sahf
cmp
mov
add
inc
mov
or
sub
push
ss
cmp
fs
push
pop
out
arpl
and
push
xchg
and
pop
pop
xor
adc
push
sub
and
cltd
cmc
jae
xor
stos
cmpsb
dec
stos
inc
jp
cmp
add
insl
insb
cmp
pop
sbb
jb
mov
ja
cmp
inc
sarb
mov
mov
addr16
xorps
jne
mov
mov
ret
adc
test
lods
jae
fwait
jns
pushf
scas
add
jbe
sbb
add
shlb
pop
insb
insl
push
jmp
push
sbbb
imul
ret
sub
sti
cmp
mov
call
sbb
inc
inc
test
faddl
xchg
decl
sar
and
out
sbb
fisttps
sahf
push
inc
out
std
sbb
pop
jle
sti
push
mov
adc
dec
lods
xchg
mov
mov
adc
or
fsubrs
and
push
pop
int3
out
mov
addr16
add
mov
popl
ljmp
sub
dec
pusha
mov
fisttps
sti
sbb
xor
call
jae
fdivl
int3
xchg
in
js
jo
jnp
rcll
scas
xchg
xor
cli
mov
testl
icebp
in
and
ret
out
sarb
imul
or
push
push
sub
adc
mov
jg
dec
mov
push
xchg
pop
xor
push
pop
dec
sub
ja
hlt
orl
dec
sbb
repnz
jecxz
ja
sub
inc
out
push
dec
and
out
roll
sub
clc
pop
mov
aad
jg
not
test
pop
aas
dec
or
xchg
movsl
mov
mov
mov
fisttpll
sbb
cs
shll
adc
leave
add
lret
cmp
repz
jle
cmp
cmp
push
testl
stc
dec
jne
clc
bound
aad
xchg
sbb
cmp
add
call
into
pushf
jg
add
in
mov
mov
dec
in
mov
idivb
lret
aas
fimuls
dec
fisttps
jle
inc
daa
outsl
or
mov
ficompl
add
mov
stos
es
pop
and
add
add
and
bndstx
in
jns
ret
push
js
add
xchg
inc
fbld
inc
fadds
pop
in
add
xor
daa
lcall
or
push
sub
xorl
mov
mov
out
add
xchg
sub
mov
les
pop
data16
inc
xchg
push
xchg
add
enter
pop
or
andl
dec
sub
negb
and
mov
pushf
adc
push
xorb
push
subl
and
and
lock
sbb
xchg
bswap
divl
daa
and
sti
dec
mov
or
pop
movsb
adc
cmpb
inc
repz
or
cmc
jmp
jo
adc
push
pop
insb
push
lcall
lret
jns
mov
roll
mov
pop
js
jbe
dec
aaa
sub
jo
clc
test
lods
lods
mov
lcall
icebp
and
and
push
scas
xlat
mov
sbb
pop
out
jo
shll
fadds
sub
gs
lcall
or
test
aad
shr
push
inc
inc
roll
cmp
popa
loopne
clc
adc
mov
xlat
mov
adc
pop
adc
inc
jnp
scas
daa
push
nop
jl
inc
adc
in
jne
push
push
push
add
jb
add
sub
in
pop
or
enter
dec
call
les
test
lret
neg
iret
adc
lods
outsb
xchg
filds
ret
lods
inc
repz
aaa
test
fstps
aas
pusha
fldt
jae
dec
out
inc
fnstenv
lcall
dec
outsl
mov
jmp
mov
std
aad
out
mov
insl
call
int
in
test
ret
pop
shlb
sbb
and
pop
les
out
pop
jp
arpl
pop
rcl
pushf
mov
jmp
fwait
xchg
mov
bound
and
push
test
vmptrld
imul
and
pop
sbbb
jne
cmp
mov
movsl
scas
scas
or
fwait
inc
fdivrs
xchg
sub
nop
inc
mov
dec
sub
and
cmp
je
mov
stos
xchg
push
xor
mov
fsubs
adc
xchg
outsl
adc
dec
mov
bound
pop
loope
push
jmp
insl
ds
aad
jb
mov
outsb
cmp
int3
mov
xor
cmpsl
out
sub
sbb
xchg
xchg
sub
sub
sbb
int
into
sbb
sbb
mov
pusha
sbb
jne
rolb
shlb
iret
jecxz
mov
or
scas
scas
sbb
sbb
xor
inc
call
int3
shll
mov
iret
and
adc
test
fimull
push
sub
insb
and
inc
cli
lret
dec
cld
mov
ret
jnp
mov
movsl
js
stos
sahf
jnp
mov
xor
and
sub
mov
popf
sub
adc
andl
fnstcw
xorl
pop
mov
into
mov
mov
fwait
test
and
xchg
mov
adc
add
sbb
xchg
gs
xor
pop
xchg
sahf
xchg
pop
adc
addr16
ficompl
jno
inc
or
ficomps
rorl
cmp
cmp
push
outsb
fwait
daa
ss
lock
test
cmpsl
or
push
jg
test
ljmp
xor
out
jno
mov
sub
addr16
loop
push
push
fisttpl
shrb
mov
push
inc
mov
cmpsl
ja
jg
cld
mov
cmpsb
xor
mov
xor
insb
out
inc
adc
cmp
fs
jecxz
adc
mov
sub
out
sub
lret
jb
icebp
inc
scas
cmp
stc
and
or
or
xchg
sub
add
dec
fists
rcrl
fstpt
pop
fldcw
out
in
fcompl
mull
pop
adc
and
push
das
adc
fidivrs
and
ret
mov
push
filds
xor
mov
cmpsl
ret
rorl
lock
orb
sub
sub
push
sbb
jle
dec
rcll
repz
xor
fistps
sub
loop
out
jecxz
cmc
cmp
mov
cltd
orl
sub
adc
push
stos
fimull
js
or
dec
leave
jg
shll
mov
cmp
pusha
cmp
pop
cmp
inc
fisubl
test
push
xchg
or
jle
test
in
mov
sar
repnz
and
leave
loop
pop
mov
inc
mov
movsb
jb
aam
xchg
imul
mov
insl
out
dec
bound
data16
mov
cmp
repz
xchg
mov
sub
rolb
loope
xchg
repnz
inc
dec
sbb
xor
leave
xor
mov
repnz
adc
scas
or
add
inc
adc
adc
xchg
int
inc
dec
jmp
insl
inc
int3
mov
ret
xor
xlat
lret
mov
pusha
push
cmpsb
push
mov
adc
pusha
mov
mov
or
adc
aaa
add
mov
pop
mov
in
mov
jle
cld
fsubs
into
hlt
adc
push
cwtl
pop
cwtl
pmulhuw
out
xchg
sbb
mov
lea
xchg
cmp
push
mov
fstl
mov
mov
lods
dec
in
cli
push
adc
ds
push
mov
ret
loopne
sbb
stc
jnp
push
stc
dec
and
rcr
dec
scas
dec
mov
dec
pushf
or
xchg
aas
ret
xchg
aas
pop
lods
into
jp
mov
shr
mov
fsubs
cli
dec
inc
aas
dec
pop
push
inc
adc
stos
inc
repz
add
mov
pop
mov
stc
in
xor
push
aad
fmull
sbb
daa
add
mov
mov
stos
fiaddl
sti
fists
mov
inc
add
aas
push
push
push
push
lock
cmp
mov
call
add
aaa
and
stc
push
fisttpl
lahf
or
jmp
cmpsb
adc
cli
mov
xlat
outsb
dec
push
jg
mov
cmc
mov
int
dec
fs
jmp
inc
sub
rcl
dec
pop
or
pop
and
pusha
pusha
call
test
outsb
scas
addr16
insb
stos
mov
rcrl
scas
scas
addr16
adc
shrb
jp
out
scas
fwait
ja
test
dec
pop
shrb
lcall
incl
or
ljmp
js
sub
leave
mov
ss
lcall
cwtl
sbb
cmp
ja
aas
mov
jmp
and
cmp
int
in
cld
push
or
xchg
cmp
hlt
xchg
aaa
sbb
test
push
xor
mov
data16
sbb
dec
inc
sub
fldcw
inc
jns
outsb
daa
xchg
scas
les
xor
pop
xchg
aas
shl
leave
xchg
xor
rclb
es
movsb
cmp
jae
aam
inc
mov
pop
cmp
ret
adc
lret
test
fwait
sti
cmp
fisttpl
imul
push
mov
and
int3
mov
fwait
sub
sbb
mov
pop
or
stos
insl
test
xchg
call
sbb
nop
js
fiaddl
imul
sbb
add
imul
inc
mov
push
into
orl
cmp
ret
fidivl
addr16
jno
jp
mov
push
sub
sbb
mov
lds
xor
xchg
cmp
test
adc
xchg
mov
push
inc
fistpl
test
push
insl
mov
push
sahf
mov
in
test
fwait
sti
les
frstor
and
xor
nop
jmp
out
imul
test
cli
addl
or
inc
mov
fimull
aam
lock
or
aad
sbb
jmp
lds
adc
sub
xchg
faddl
call
sub
mov
repnz
pop
repz
jge
cmpsl
imul
or
push
push
inc
popf
pop
jno
dec
xor
pop
push
loope
mov
cmp
fldl2t
jo
fistpll
jne
aad
add
sbb
nop
xlat
and
mulb
lahf
les
jmp
or
aaa
fisubs
ficomps
repz
fdivr
popa
fsubr
js
xor
cmpsb
jg
sub
insl
cs
dec
clc
fisttpl
jbe
inc
and
dec
les
inc
lcall
fcmovnu
ljmp
sub
or
and
or
mov
test
decb
inc
dec
arpl
fldlg2
clc
mov
inc
lret
sti
cmp
test
xchg
sub
punpcklwd
inc
xchg
mov
ret
shl
movsl
jle
fcomps
sub
out
and
cmc
cltd
xchg
ja
dec
lret
dec
test
jbe
dec
mov
jl
mov
test
jns
aaa
in
das
rcr
scas
pop
xchg
imul
outsl
aam
adc
cmpsb
gs
imul
and
xchg
mov
or
aad
inc
mov
jbe
fucomi
rcll
imul
cs
xchg
imul
lcall
pop
or
jb
jle
jle
fnsave
jb
sub
cli
sub
mov
mov
jg
jbe
or
iret
sub
xchg
dec
add
dec
dec
mov
js
jne
pop
sbb
jge
xor
pop
nop
les
pushf
xor
cwtl
jmp
into
mov
shll
mov
sub
sarb
sbb
jb
int3
ljmp
push
jns
jge
repnz
imul
pop
jg
das
mov
xorl
aas
push
loop
into
push
mov
popf
inc
sarl
mov
xchg
sub
mov
push
and
xor
sbbb
pop
cmpl
jo
push
jbe
ja
mov
hlt
lret
mov
stos
enter
fiadds
sbb
push
gs
push
xchg
xor
adcb
or
xlat
in
mov
stc
adcl
arpl
nop
test
imul
ljmp
insb
loop
popa
sbbl
aam
repz
xor
or
jno
gs
dec
or
push
je
dec
repnz
sti
stos
cmc
sbb
mov
dec
out
xchg
adc
ljmp
mov
cmpsb
mov
or
add
das
out
and
addl
dec
or
aam
in
imul
mov
in
xchg
sub
cmp
int3
out
test
dec
in
mov
sub
sbb
xchg
cltd
es
cmp
std
fistpll
test
roll
add
lahf
jns
cmp
dec
cmc
or
fnstcw
fucom
mov
ret
inc
or
push
in
es
and
orl
mov
jo
mov
imul
jo
pop
xchg
sub
mov
aad
push
aaa
dec
test
sub
cmpl
add
mov
shlb
sub
rcrb
pop
jp
dec
sub
mov
clc
xor
inc
outsl
xor
loope
mov
lcall
and
xchg
jg
mov
das
sbb
mov
mov
mov
xchg
jecxz
jl
jge
insb
popf
out
test
loopne
out
pop
in
gs
bnd
aas
stc
mov
ljmp
jne
loope
push
stos
iret
add
jno
push
imull
imul
add
js
lods
xchg
xchg
in
sbb
aas
xorb
mov
loopne
cmp
xor
and
aad
pop
pop
cmp
gs
dec
sbb
push
add
mov
push
daa
lret
cmpl
and
cmp
jmp
jo
stos
cli
cmp
aas
outsb
sbb
or
push
fwait
inc
xor
pop
ficoms
cmp
pop
icebp
xor
fidivrs
ret
js
cmp
mov
lahf
sbbl
rorl
setns
xchg
sub
push
jnp
jl
add
push
jo
mov
icebp
or
pop
cwtl
inc
es
arpl
sub
cwtl
xchg
stc
inc
and
push
or
test
xchg
pop
pushf
je
aas
cmp
adc
or
fbld
push
xlat
sbb
fs
notb
popf
shlb
lahf
out
xchg
and
movsb
outsl
sub
stos
mov
or
lret
sti
xchg
xchg
mov
pushf
and
das
lret
sbb
mov
mov
inc
sub
sbb
mov
imul
adc
mov
sub
aas
addl
mov
pop
cmc
cmp
inc
pop
jae
add
data16
cmpsl
loop
popa
or
loopne
test
pop
push
lods
xchg
sub
jns
and
fsub
aam
dec
lods
cmp
adc
push
sub
jno
push
sub
test
or
cli
pop
push
sbb
pop
arpl
jmp
jle
and
push
insb
imul
lods
shrb
inc
aas
insl
lds
cmp
das
pushf
fsubl
xchg
sarb
push
loopne
scas
inc
scas
add
test
popa
out
pop
leave
cmp
mov
inc
pop
cmp
out
cmp
inc
cs
in
fs
xchg
fdivrs
lea
ljmp
imul
rolb
mov
cmp
aam
lret
repz
repnz
fldcw
fnstsw
mov
mov
jg
aad
adc
outsl
push
dec
fistps
xchg
cld
rcr
add
fimuls
repnz
clc
mov
fsubrl
pop
xchg
repnz
xchg
add
push
add
and
jge
cltd
and
sbbb
popa
repz
and
and
xchg
mov
addr16
cmp
out
ficoml
push
mov
loopne
jns
add
mov
push
cltd
int
sub
inc
ljmp
pop
or
xor
mov
in
xor
lea
outsb
push
adc
mov
xchg
jle
push
add
mov
pushf
dec
xor
mov
sti
in
xor
cmp
and
pop
mov
scas
sbb
in
mov
jbe
cmc
mov
sti
out
sahf
sub
mov
mov
and
jp
ret
add
pop
fldenv
cli
rolb
xor
movsb
jge
out
test
lds
pop
dec
cmp
push
les
jne
jnp
popf
cmp
xchg
ss
jnp
movsl
xchg
dec
sbb
call
outsl
fsubrp
adc
daa
xchg
xchg
or
and
subl
stos
enter
int3
pop
mov
mov
rcr
jo
mov
mov
xchg
add
popf
out
cwtl
test
and
addr16
sub
pop
inc
and
pop
mulb
sarl
push
cs
and
push
lods
inc
push
popa
lcall
mov
cli
shrb
push
in
sub
sbb
sbb
jns
push
pushf
outsb
inc
dec
jb
sbb
mov
lret
or
xchg
cmpsb
mov
divl
push
adc
adc
loope
push
fiaddl
sbbl
jg
insb
cmp
test
and
pop
sbb
loope
out
lock
sahf
xchg
hlt
inc
sbb
popf
lods
shlb
sub
in
jne
clc
sbb
sbb
enter
jl
cs
xchg
add
push
push
jg
jne
lods
js
sbb
and
fildll
mov
or
pushf
or
sar
sbb
lods
push
xchg
push
mov
subl
out
sub
shll
out
loope
mov
ss
mov
and
sub
mov
mov
call
xor
inc
ja
xor
jg
insb
mov
push
gs
fbstp
ret
push
cmpsb
pop
push
sub
lock
xchg
inc
mov
out
out
xorb
aas
inc
mov
mov
mov
lds
cld
clc
test
fildll
dec
xor
movsb
testb
mov
shrb
je
add
pop
xor
test
sbb
dec
sbb
sbb
inc
insl
repz
inc
hlt
mov
mov
or
jg
sbbb
xchg
adc
outsb
inc
mov
cmc
mov
sbb
addr16
adc
icebp
lahf
test
adc
dec
loop
mov
call
repz
jmp
mov
xor
clc
jae
imul
mov
cmp
pop
aad
movsb
repnz
xchg
leave
xchg
js
xor
push
lods
sbb
push
mov
sbb
sahf
mov
sti
push
mov
or
mov
inc
in
or
xlat
outsb
movsb
mov
imul
inc
test
lret
lcall
jmp
sbb
iret
inc
cmp
ss
ret
push
pop
out
rcrb
ljmp
jmp
xlat
stc
cmp
loope
adc
jae
push
lcall
popa
clc
int
sub
push
loop
sub
repz
repz
jl
xchg
and
mov
jmp
sub
adc
sub
shlb
push
sbb
mov
icebp
call
in
aam
pop
pop
dec
add
xor
test
xchg
jno
mov
cmp
es
cmpsl
cs
pop
push
pusha
divl
fs
popf
xchg
jl
stc
mov
insb
test
pop
cmc
add
jl
sub
lret
popf
xor
insb
cmpsb
sbb
popa
outsb
out
and
and
je
inc
add
inc
mov
xor
ja
in
subl
shl
in
mov
mov
daa
add
jae
insl
xchg
lods
mov
mov
loop
fidivrs
test
jo
insb
mov
pop
scas
jo
loope
jae
clc
mov
dec
jg
clc
xor
inc
xchg
push
je
data16
lods
add
imulb
mov
and
sub
sbb
push
fwait
daa
rcrb
in
in
lahf
scas
repnz
sbb
push
mov
mov
push
inc
mov
and
in
cmpb
leave
and
jle
adc
jne
in
aaa
pusha
xlat
push
rcrl
jge
mov
pushf
imul
mov
stc
pushf
imul
pop
xor
iret
xor
shl
test
sub
cwtl
jge
lcall
aam
cmpsl
xchg
add
dec
adcl
mov
int3
arpl
inc
and
ret
sub
and
cs
push
sub
je
jmp
jno
pop
adc
mov
data16
stos
push
mov
fdivl
in
shl
xchg
or
movsb
mov
lea
fs
mov
out
shrl
inc
insl
orb
mov
dec
in
push
mov
dec
test
mov
push
loopne
pop
fisttpl
nop
pop
scas
xchg
cmc
aaa
push
mov
sti
outsb
jp
addl
push
fbstp
pop
push
mov
or
rolb
scas
cmp
and
outsl
add
sub
mov
cltd
mov
xchg
lea
sbb
and
mov
lods
or
dec
gs
lcall
and
xorb
add
loopne
je
mov
push
movsb
int
or
repz
add
daa
fwait
xor
and
or
aaa
dec
pusha
dec
enter
sub
dec
fistps
cmp
xlat
pusha
cli
mov
jo
pop
ficoml
pop
aad
inc
popa
sahf
xchg
sub
ljmp
jb
xlat
or
insl
xchg
and
roll
test
movsl
sbb
pop
push
ss
mov
insl
add
lods
pop
mov
arpl
cmp
pop
out
xchg
stos
mov
pop
jmp
stc
sbb
xchg
mov
sbb
push
out
mov
shll
lret
and
orl
push
mov
push
pop
jne
add
xor
pop
das
jne
pushf
mov
pop
xor
dec
mov
add
add
fwait
xchg
jle
pop
jmp
test
jecxz
sbb
js
lock
add
scas
xor
filds
jns
adc
mov
sti
out
shr
pop
inc
out
iret
inc
adc
aam
xchg
jns
movsl
jb
mov
clc
or
pop
lock
pop
push
enter
xor
out
push
ret
mov
das
pop
out
sahf
faddl
jle
dec
out
clc
and
push
adc
je
fadd
scas
and
push
sub
ljmp
popa
or
xor
shl
or
jnp
icebp
inc
and
clc
mov
pop
jg
lds
push
sarb
imul
aad
mov
mov
sub
jg
sbb
fisubs
jmp
stc
nop
loope
dec
pop
xor
xchg
cmc
fisubs
clc
stos
std
xchg
das
movl
lea
filds
cmp
pop
cmpsl
pop
jo
push
adc
lret
cltd
out
clc
cmp
enter
mov
dec
pop
shl
pop
fs
pusha
shrl
sti
dec
jecxz
aad
cmp
cmp
xor
xchg
pop
aad
dec
jecxz
in
loop
out
push
lock
aaa
addr16
rorl
lods
lods
and
hlt
lret
icebp
mov
cs
sarl
les
into
gs
outsb
daa
outsl
sbb
sub
or
cli
pushf
outsl
xchg
shrl
mov
adc
push
lods
or
push
out
jg
sub
pushf
pop
hlt
or
je
int
sbb
push
sahf
mov
lcall
xlat
jae
and
push
push
add
xchg
push
pop
pop
sbb
test
popf
call
jg
mov
cld
cwtl
lret
addr16
addr16
or
mov
call
jg
mov
dec
jmp
fcmovnu
xor
or
dec
sub
pop
loopne
je
adc
pop
xchg
xor
mov
nop
imul
ret
lcall
sbb
dec
je
mov
stc
leave
jno
cltd
xchg
push
andb
loope,pn
pusha
mov
push
push
jg
mov
repz
lea
leave
sub
mov
aam
push
adc
movsb
mov
jmp
sub
sahf
mov
insl
mov
sbb
mov
sti
lret
xor
movsl
jl
push
notl
mov
add
bound
pop
stos
push
arpl
xchg
jbe
enter
jg
std
lret
pop
orb
movsl
jns
dec
out
and
out
xchg
loopne
and
jle
inc
idivb
pop
add
rcll
or
adc
and
pop
das
test
adc
insl
lds
mov
dec
xchg
mov
dec
ja
push
lahf
roll
enter
xchg
mov
andb
jge
push
mov
sub
rcll
xlat
inc
in
mov
push
add
lock
adc
loopne
ss
int
ss
loop
inc
lods
xchg
inc
xchg
sub
movsb
ljmp
pop
mov
jle
insl
mov
add
jl
gs
xchg
arpl
xchg
dec
dec
pop
and
loopne
aad
sbb
int
xchg
mov
hlt
mov
cmp
and
and
adcb
shrl
dec
and
aaa
out
and
xchg
and
imul
jns
popf
xor
loop
repz
inc
in
pop
std
shlb
movsl
push
scas
mov
ror
ret
pushf
xor
sbb
push
popa
ljmp
test
fbstp
mov
push
int3
loope
test
jmp
das
fnstsw
cld
bound
popa
pop
sahf
jp
mov
xor
xor
dec
mov
iret
sub
mov
outsb
pop
or
inc
into
lods
or
out
inc
dec
pop
popf
lods
cmp
push
cltd
test
in
inc
xor
in
xchg
in
dec
scas
or
xchg
jle
fsubrl
mov
scas
or
jle
arpl
cmc
fsub
dec
push
shr
push
pop
cmp
pop
dec
xor
in
pop
icebp
loop
and
push
mov
shrb
push
xor
mov
sbb
jecxz
inc
sub
js
fldt
mov
insl
out
shll
pop
pop
adc
adc
pop
repnz
jp
mov
addl
es
xchg
cmp
dec
adc
movsl
inc
jg
pop
cmp
test
mov
nop
dec
in
push
pop
mov
dec
xchg
sub
lahf
push
dec
call
test
sbb
xor
lret
je
insb
es
scas
jb
mov
mov
cmp
mov
out
sbb
or
pop
ja
in
push
lods
mov
mov
xchg
xchg
inc
fcompp
in
jle
data16
and
xor
push
dec
mov
inc
push
cmpsb
sbb
loope
xor
push
cltd
or
lock
dec
lret
in
or
mov
leave
testl
in
push
push
stc
mov
out
out
ljmp
sub
inc
pusha
idivl
or
add
mov
push
xor
andb
cmp
adc
and
xchg
mov
outsl
push
adc
addb
jmp
adcb
icebp
or
push
dec
cmp
ficoml
mov
sub
jge
or
es
jb
dec
dec
and
sarb
lds
xchg
cs
dec
cmp
adc
push
push
call
cmp
hlt
gs
add
into
mov
xchg
xor
mov
mov
or
ss
shrb
mov
mov
inc
shl
je
adc
pop
inc
clc
dec
mov
mov
jno
cmp
or
dec
mov
movb
int3
mov
imul
popf
mov
lret
lds
test
outsl
mov
push
pop
sbb
inc
stos
out
rclb
dec
mov
repnz
hlt
lret
mov
xor
stos
and
stos
pop
packssdw
dec
mov
and
aad
mov
pop
bts
cmp
jnp
ret
pop
mov
xchg
mov
bound
ja
jno
mov
jmp
xchg
add
lods
and
data16
pop
out
push
rcll
insb
xchg
jge
andb
adc
mov
dec
xor
mov
push
push
fcomps
fs
leave
lods
mov
in
push
int3
popa
mov
xchg
in
mov
or
mov
jp
xor
int3
inc
xor
into
gs
mov
adc
mov
repnz
dec
jns
inc
pop
mov
xor
addl
mov
xor
push
lret
sarb
push
push
inc
shl
jno
icebp
mov
mov
add
lahf
xorl
and
icebp
mov
xor
mov
pop
mov
repnz
mov
ja
sahf
fadds
adc
and
xlat
add
dec
xor
or
push
jbe
sub
xor
or
test
lahf
loop
ficompl
xlat
test
mov
pop
push
testl
and
roll
testl
sar
ret
sbb
pop
adc
pop
dec
add
jns
shll
and
add
sub
fisubs
mov
fs
cltd
cmp
push
inc
push
mov
aas
int3
cwtl
mov
sbb
loop
mov
dec
push
pop
inc
push
les
xor
jg
push
mov
imul
add
addr16
jae
clc
aas
loop
push
sahf
iret
andl
or
or
or
jg
out
shrb
add
mov
movsl
mov
xlat
sub
aam
dec
sbb
popf
scas
out
mov
arpl
int
add
inc
or
mov
and
cmp
adc
fisubrs
fisttpll
lds
jnp
jo
pop
repz
ja
subb
push
rorl
stos
pop
lcall
filds
pop
je
mov
lods
push
adc
and
fcmove
sti
std
push
movsl
cmpsl
leave
dec
and
mov
push
pushl
pop
sub
cmc
sub
stc
or
or
sbb
rol
jl
aaa
jbe
dec
cmp
jns
call
test
jbe
decb
mov
test
je
iret
cmpsb
inc
scas
std
add
inc
push
push
xchg
mov
shll
push
add
mov
mov
repnz
dec
push
or
mov
add
push
dec
mov
jns
popf
xchg
cwtl
mov
aaa
int
rcll
mov
xorb
or
and
dec
loopne
inc
mov
xor
nop
std
std
xchg
decl
call
test
stc
je
mov
cmp
test
iret
test
xchg
mov
jae
xlat
cli
fildl
xchg
shlb
mov
and
add
xor
jo
and
ja
sub
mov
sbb
push
jns
lahf
pusha
es
nop
mov
clc
jb
sub
stc
ljmp
sbb
mov
push
popf
xor
in
add
xchg
sarl
in
pushf
outsl
mov
mov
push
rcll
lret
xor
xchg
rcll
les
stc
inc
bound
push
inc
in
add
xchg
jg
sbb
xchg
mov
push
mov
add
inc
cmp
jecxz
inc
inc
push
cmp
dec
stos
aas
aam
in
sbb
and
pop
push
lds
mov
popf
daa
add
cmp
and
mov
adc
test
push
cmp
jl
int3
mov
ljmp
jecxz
mov
dec
int
pushf
jg
out
loopne
inc
mov
xchg
aam
js
insl
cmp
mov
lock
xchg
icebp
jle
jno
xchg
mov
mov
mov
push
lods
xchg
xchg
movsl
ljmp
hlt
pop
gs
push
das
mov
fdivl
pusha
push
repz
gs
es
pop
mov
test
and
aad
sti
divl
hlt
inc
int3
jg
sub
add
jns
cli
dec
test
and
inc
pusha
lret
addr16
inc
fmull
push
into
push
push
ret
mov
inc
xor
push
imul
subb
aaa
int3
fistl
push
push
mov
je
aad
add
sbb
popf
push
mov
xor
or
js
cmpsl
idivl
shlb
mov
ljmp
push
cmpsb
bsr
dec
push
popf
xor
cmp
insb
imul
pop
inc
pop
mov
and
sub
imul
or
dec
dec
arpl
into
cmp
iret
insb
in
loop
out
lret
mov
inc
js
mov
lock
movsl
stos
loopne
ds
mov
push
and
mov
aaa
mov
xchg
ret
in
or
sbb
jle
xlat
jb
inc
inc
cld
inc
enter
ljmp
mov
arpl
mov
fs
popf
xchg
jl
and
or
mov
rol
inc
pop
push
fwait
aam
shrl
lret
adc
les
das
repnz
inc
fsubp
loop
icebp
push
xchg
mov
je
es
sub
push
add
jmp
pop
insl
arpl
popf
sbb
andl
dec
jno
int3
push
fcom
daa
ljmp
add
popf
scas
rol
or
mov
test
loope
mov
xor
mov
jmp
jo
xchg
jmp
loope
loope
sti
jbe
stc
pop
ljmp
das
jo
int
scas
das
data16
xchg
scas
jb
shll
xchg
sbbl
fstl
int
cmpsl
pop
aaa
cmp
stos
push
or
jecxz
sub
jg
test
jmp
jecxz
js
lods
add
or
push
dec
scas
pop
jle
aam
int3
data16
out
nop
and
xchg
popa
mov
call
jmp
in
das
xor
ffreep
dec
adc
dec
or
pop
lret
int3
adc
shlb
push
cmp
cltd
sbb
aad
loop
adc
pop
xchg
repz
fstpl
fmull
insb
fbld
popa
sbb
arpl
adc
push
adc
popa
inc
popaw
imul
dec
scas
nop
dec
movq
popa
jns
xor
enter
pushf
cmp
mov
mov
sbb
add
mov
ret
and
fstpl
jbe
sub
adc
stc
mov
mov
push
jle
and
cld
js
inc
xor
dec
fcmovnbe
xchg
fisttps
or
sub
sub
pop
aaa
sub
stc
mov
sub
sbb
mov
cmp
inc
mov
push
fdivs
add
lret
shlb
out
xchg
mov
pop
fidivs
or
lcall
scas
fadds
loope
rcl
mov
mov
jo
sub
movsb
pop
pop
cmp
in
sub
sbb
pop
cld
inc
or
cld
aaa
jle
ljmp
sbb
fists
xlat
sarl
fst
adc
push
jo
mov
cli
cmp
mov
adc
sbb
icebp
cmp
imul
mov
dec
push
mov
ja
jne
mov
in
cwtl
and
mull
mov
mov
xor
dec
mov
mov
inc
mov
rolb
and
mov
std
cltd
xchg
les
mov
push
mov
jbe
jno
int3
or
or
sub
xor
adc
cmpsl
pop
jmp
lcall
lret
movsl
sbb
pusha
dec
jns
mov
push
fiaddl
fstl
adc
gs
add
mov
clc
enter
inc
push
push
into
out
arpl
rcrb
fs
sbb
fstps
movsl
xor
or
jae
test
fcoms
adc
or
and
sarb
and
insl
lret
jae
ret
mov
xchg
mov
jo
addr16
push
xchg
ljmp
inc
popa
push
js
in
mov
aaa
xchg
lea
jb
jmp
mov
mov
cltd
or
push
fistpl
pop
in
lods
adc
push
addr16
fildll
sub
out
cltd
adc
decb
push
dec
shlb
push
loop
pop
mov
and
dec
dec
stos
xchg
lcall
jno
dec
and
and
push
and
fcomi
mov
mov
push
sbb
loope
fs
push
insl
pop
push
mov
loope
and
and
inc
push
or
or
fs
lds
lods
jmp
enter
test
dec
mov
sbb
xchg
arpl
add
dec
sub
lock
push
adc
or
dec
popa
flds
or
or
insb
popf
cltd
push
cmpsl
xchg
andb
jno
push
push
or
stos
push
aad
jae
mov
sbb
xchg
push
stc
cs
jbe
add
inc
mov
arpl
push
inc
add
in
data16
addr16
in
dec
fwait
and
and
jne
pushf
mov
cmpsb
imul
xchg
mov
adcl
negb
stos
inc
pop
dec
test
inc
ss
lods
mov
adc
inc
pop
inc
sbb
cs
ja
mov
add
lahf
cs
std
xchg
inc
sub
sarb
in
ja
dec
scas
xchg
xor
or
jecxz
lret
pop
cmp
sub
lods
subl
fxch
icebp
dec
push
movsl
jnp
clc
or
jge
pushf
je
jbe
icebp
rol
push
and
fstpl
data16
rcll
ss
je
fs
push
adc
inc
mov
xlat
xor
jnp
jmp
loope
push
in
mov
fidivl
lcall
and
mov
lods
jmp
mov
mov
dec
jmp
mov
je
lret
cmp
fildl
movsb
mov
adc
lods
xlat
sub
imul
push
jbe
sub
add
xchg
sub
leave
repnz
dec
dec
scas
fisubrs
loope
cmpsb
in
je
ret
mov
xchg
call
push
mov
cmp
mov
inc
cwtl
inc
or
bound
lcall
fwait
mov
mov
pop
and
maxps
pop
in
and
jge
lea
add
jnp
fwait
pop
aam
pop
cmpsl
xor
rolb
shl
add
add
push
mov
addr16
cltd
sub
and
cmp
pop
sti
arpl
nop
repz
lea
rcll
pop
insl
ja
push
or
jns
mov
xor
mov
jno
and
shlb
inc
fwait
xor
jns
jne
mov
mov
negl
mov
fldcw
movsl
dec
lods
jg
push
jo
ja
loop
add
push
ja
pop
aaa
insb
cwtl
pushf
mov
imul
nop
push
xor
sarb
push
pop
sahf
mov
jecxz
std
jo
mov
mov
dec
fbld
push
or
or
mov
pop
cmp
arpl
enter
ds
push
add
and
aas
mov
sbb
test
ret
cmp
pop
loop
add
push
jns
in
clc
and
scas
arpl
mov
aam
arpl
lahf
ret
data16
pushf
stos
insl
loopne
cmp
movsl
add
imul
loopne
and
repnz
mov
dec
dec
enter
xchg
rorl
cmp
xor
fbld
ret
pop
push
loop
sub
js
cmp
js
lahf
gs
fstl
cmp
mov
jmp
xorl
stos
inc
mov
decl
pop
lods
pop
jmp
cmp
jl
mov
push
fs
int
cmp
pop
jmp
shlb
mov
pop
cmp
dec
out
cmp
imul
or
pop
add
jnp
sub
call
xchg
lods
fldln2
aas
test
clc
repnz
inc
add
data16
fnsave
pop
mov
rcl
xchg
out
aam
andb
or
mov
push
rol
icebp
cmp
push
movsb
jecxz
pop
aam
rcll
shrb
inc
cmp
cmp
leave
das
xorl
movsb
popf
popf
out
test
dec
shll
mov
add
pushf
cmp
and
sub
cmc
pop
pop
mov
cld
push
jg
mov
jne
pop
jle
in
pop
fistl
or
mov
ja
or
pop
seto
adc
cli
ret
dec
data16
pusha
or
jne
mulb
mov
mov
cld
or
cwtl
rorb
dec
int
sbbb
into
jbe
rcl
scas
cld
repnz
xchg
xor
movsb
sbb
ds
bnd
mov
mov
dec
inc
inc
add
mov
cmp
outsl
fnstenv
xchg
mov
ret
add
jmp
movsl
and
push
jmp
cltd
pop
lret
push
pusha
xorb
pop
mov
or
in
adc
jno
movsb
and
add
mov
jnp
cld
data16
mov
ret
mov
hlt
mov
xchg
cmp
popa
ja
sbb
xor
pop
call
ret
arpl
idivb
or
orl
pop
in
shlb
xchg
mov
ds
aas
ds
ret
xor
loope
inc
add
xor
push
nop
sub
mov
and
mov
xor
mov
test
xchg
ja
mov
sti
xchg
mov
loop
sub
ret
push
cmp
jnp
or
aas
mov
adc
incb
in
fimuls
push
int
and
pusha
stos
inc
repz
inc
jo
dec
loopne
pop
out
int3
or
repnz
aas
mov
ds
pop
in
sbb
push
aas
jbe
inc
push
and
xlat
test
or
icebp
adc
mov
out
push
cmc
sub
cltd
icebp
mov
aaa
out
in
push
push
mov
hlt
mov
or
xchg
fcoml
clc
push
jne
scas
cmp
xor
add
adc
insl
insb
das
mov
imul
sbb
add
mov
in
scas
inc
fidivrs
lret
std
punpckhdq
addr16
push
xchg
sub
lock
insb
dec
loope
and
push
frstor
std
pop
stos
inc
dec
outsl
rolb
aam
mov
lods
xchg
push
lcall
jecxz
or
out
cmpsl
aaa
push
dec
mov
ds
push
dec
xchg
into
gs
jle
lret
cmp
push
sub
ljmp
push
inc
loop
pusha
mov
cli
push
add
and
inc
imul
les
ds
jmp
frstor
jmp
xchg
xor
xchg
mov
inc
aas
xchg
fistpll
insl
cmc
inc
out
xchg
js
sbb
cltd
pop
push
hlt
test
clc
xchg
shr
pop
add
pop
loop
push
dec
inc
push
dec
sbb
pop
insb
xchg
das
cmp
sti
insb
dec
and
mov
cmp
inc
sbb
mov
cld
inc
cld
mov
push
jg
nop
sti
mov
insl
xor
adc
adc
mov
push
jl
and
add
outsl
das
jl
adc
push
repnz
add
jnp
ljmp
push
and
jge
test
jp
pop
jge
pushf
push
mov
mov
inc
outsb
daa
add
pop
mov
lahf
xor
jae
and
je
inc
xchg
or
jno
mov
out
jp
or
mov
lcall
or
sub
cmpb
mov
mov
fsubl
jp
sbb
add
add
lods
movlps
cmc
inc
sar
stos
inc
xor
int3
pop
fs
inc
pop
movsl
cmp
sti
xlat
sbb
sbb
mov
pop
jbe
fistpl
sub
jns
fwait
sub
pop
push
cs
fsubl
xor
hlt
dec
inc
push
mov
xchg
stc
push
or
jg
loop
test
std
aas
das
mov
push
cmpsl
sbbb
roll
cmp
sub
and
sub
test
hlt
or
addr16
cmp
clc
frstor
bound
xor
out
ret
dec
ret
sbb
jnp
fcmovnu
xchg
lds
or
pop
outsb
mov
mov
outsb
sub
jecxz
ljmp
pop
outsb
ret
pop
cwtl
das
cmp
in
loope
cli
cmp
fsubrs
mov
ret
push
inc
push
ljmp
and
dec
cmp
in
shrl
xchg
sbb
loop
jae
test
push
jbe
movsl
sbb
push
div
xor
sar
mov
outsb
mov
jge
andl
push
lahf
jne
jnp
cmp
add
out
pop
or
sbb
cltd
icebp
mov
popa
and
xchg
cmp
mov
adc
xchg
pop
push
lods
test
xor
xchg
pushf
pop
mov
inc
test
sbb
inc
pusha
andl
adc
lock
stos
sbb
mov
cli
sub
sub
pop
call
jle
mov
popf
gs
xchg
mov
lods
xchg
pop
mov
and
mov
mov
add
inc
cwtl
dec
cmp
mov
cmp
cmpsl
divl
mov
and
out
push
nop
je
jp
sbb
pop
frstor
dec
or
push
xlat
pop
loope
in
nop
push
inc
icebp
xchg
jno
add
jl
nop
scas
loope
div
or
push
sbb
or
cmpsb
cmc
mov
fnstenv
sti
jbe
lea
ret
lods
adc
imul
mov
xor
sub
cmpb
sbb
dec
lock
fists
inc
fnsave
mov
adcb
scas
push
cmpsl
push
push
dec
pop
nop
aas
or
mov
lahf
xacquire
jno
cli
jbe
fsubs
shrl
xchg
cwtl
xchg
xchg
sub
mov
mov
cmc
in
add
add
jb
xor
movsl
bound
jns
ja
nop
jmp
or
mov
mov
lds
bound
mov
sbb
into
imul
fidivrs
adc
stos
cltd
int3
mov
lock
jne
pop
shl
je
repz
mov
inc
ss
xor
enter
psllq
push
pop
insl
mov
pop
cwtl
shrb
xor
xor
pop
mov
pop
add
out
bound
scas
xor
add
sub
lahf
inc
pop
das
adc
orb
sbb
or
mov
js
add
jg
jno
inc
mov
mov
mov
mov
add
inc
sbb
lret
pop
lret
or
dec
and
or
out
loopne
or
sbb
and
xchg
xor
jns
imul
test
xchg
sbb
lds
pop
lods
xor
jg
push
sbb
icebp
iret
xchg
or
scas
jne
and
mov
push
int3
jg
out
imul
loop
test
lret
add
cmpsl
sbb
cmp
lret
sub
sub
pop
movsb
je
fnstsw
dec
fistl
cwtl
jl
ljmp
stc
push
in
ljmp
test
cmp
inc
xchg
out
test
stos
adc
aad
push
iret
cmp
xlat
xor
mov
testl
ljmp
dec
jg
hlt
popf
mov
sbb
sbb
roll
sbb
pusha
push
mov
int3
or
or
mov
call
jnp
outsb
push
out
lahf
xor
push
data16
mov
fs
call
pop
mov
fld
cmp
xchg
gs
jnp
test
mov
push
sbb
nop
xchg
pop
rcl
and
fcomip
dec
mov
shlb
mov
fcmovnbe
clc
andb
ret
mov
mov
or
pop
and
pop
lea
addr16
mov
shrb
mov
mov
mov
dec
cs
mov
lods
cmp
adc
or
sbb
lret
aad
shll
inc
push
aad
rorb
leave
fstl
repz
adc
pop
pop
or
push
cwtl
ret
jle
xchg
sub
inc
or
cmp
mov
mov
mov
daa
iret
mov
cmpsl
es
xchg
jle
mov
testb
pop
testb
push
and
push
divl
sub
int3
jg
shr
imul
ret
cltd
xor
int
pop
addr16
gs
sbb
mov
or
sbb
mov
lret
aaa
fnsave
mov
mov
sbb
aad
ljmp
int
adc
das
xchg
pop
movsb
nop
shrb
andl
sahf
adc
xchg
sahf
jno
push
push
push
push
mov
cs
arpl
popa
dec
popf
test
pop
jno
jg
fadds
fisttpll
pop
test
aas
out
jno
adcb
adc
mov
sahf
push
xchg
and
push
cwtl
cmp
jmp
xor
testl
mov
insb
jecxz
xchg
dec
jae
repz
xor
mov
jns
mov
pusha
dec
iret
jno
popf
call
dec
lock
int3
fimuls
sub
xchg
dec
pop
pop
cmpsl
xchg
mov
lcall
aaa
gs
jae
and
pushf
lods
js
fcmovnbe
into
enter
leave
pushf
jnp
pop
lods
mov
sub
jp
mov
xorl
add
hlt
out
testb
pop
cmp
mov
dec
popa
clc
jp
mov
mov
imul
push
mov
adc
sbbb
push
sub
mov
sub
pop
lret
es
pop
mov
test
call
aam
repz
aaa
mov
jno
pop
xchg
dec
mov
push
push
pop
loope
mov
test
mov
pusha
les
iret
sbb
mov
lcall
mov
leave
je
test
aad
sarb
test
je
sahf
das
jg
sub
adc
ret
bound
in
add
push
inc
mov
or
test
lahf
lods
mov
dec
adc
es
lahf
sub
push
rol
adc
mov
push
jle
lock
lret
out
out
fstl
jo
pushf
test
and
sbbl
push
mov
xor
out
test
shll
add
dec
into
subl
sub
jo
lock
sub
shrb
mov
pop
adcb
push
mov
mov
push
fildl
push
js
cmpsl
test
mov
inc
mov
jbe
popa
pop
ret
mov
ds
xchg
stos
sbb
jo
xor
mov
or
or
inc
xchg
sub
mov
cmpsb
cld
sti
nop
push
movsb
fcomi
pop
aaa
pop
scas
data16
adc
push
ss
or
cmpsl
fwait
sub
loope
aaa
jle
cli
ljmp
mov
dec
loop
push
nop
sub
imul
rolb
pop
stos
lcall
and
push
lea
call
int
sar
insb
movsb
pop
xor
ljmp
dec
dec
loop
push
fdivs
sbb
popf
insb
jle
mov
inc
popf
cmpsb
rclb
fldl
inc
or
es
adc
adc
cltd
add
sti
leave
or
in
inc
insl
lret
ficoms
cmp
pop
insl
mov
in
xchg
or
aam
xor
mov
or
test
dec
inc
push
xor
xor
sub
pop
xor
cmc
inc
in
aad
dec
pop
test
xchg
adc
sahf
sti
lods
out
into
fsubl
andl
mov
cmp
aam
add
xchg
dec
push
push
aaa
pushf
mov
adc
mov
push
hlt
daa
inc
pop
aad
adc
dec
stc
lods
mov
test
cmp
mov
sub
inc
aam
roll
xchg
xor
cmp
or
sbb
daa
fsubr
sub
fnstenv
mov
mov
pop
outsl
scas
inc
cmc
mov
lcall
cld
or
call
push
cmpsl
outsl
loop
std
jge
or
mov
aas
jo
stc
mov
push
popa
mov
cld
paddq
icebp
mov
jbe
sub
add
xchg
xchg
outsl
loop
popa
into
xlat
lahf
xor
insl
incl
popl
movsb
inc
fdivr
add
insl
jbe
inc
pop
stc
dec
mov
xchg
pop
loope
stos
call
pop
fildll
or
push
xrelease
and
cli
hlt
fidivrs
test
mov
test
sub
mov
sbb
push
or
or
xor
andl
sub
daa
stos
mov
cmp
aad
mov
mov
aam
mov
ret
xchg
fs
scas
adc
scas
test
cld
arpl
ljmp
jecxz
test
and
mov
loop
leave
cmp
enter
out
mov
sub
cmp
lcall
sbb
pusha
inc
sub
gs
mov
insb
outsl
add
out
sbb
in
fldt
shl
lods
int3
lcall
divl
gs
xchg
pop
sub
pop
adc
out
loopne
cli
inc
inc
cwtl
mov
sub
cmp
cmp
lods
or
push
lea
popf
fs
call
mov
cwtl
inc
dec
inc
cld
xor
dec
pushaw
sub
pop
shlb
hlt
push
sub
mov
ret
les
cmp
fiaddl
movsb
mov
push
mov
test
lds
subb
bound
sbbl
mov
clc
insl
sub
inc
sarb
add
in
popf
adc
mov
test
push
mov
bound
xor
xchg
cmp
sbb
roll
jbe
jg
sub
xchg
pop
insl
sub
test
mov
notb
mov
adc
push
and
mov
pop
push
fwait
cmpb
cmp
cmp
pop
outsl
daa
mov
les
jbe
into
mov
mov
fistpl
pop
sti
mov
test
pop
rorb
int
lock
hlt
push
mov
cwtl
enter
adc
mov
pushf
push
fsts
inc
aas
or
int3
pop
push
into
ss
out
mov
cmpsb
mov
sahf
ror
push
hlt
into
mov
test
or
out
sahf
sbb
fsub
pushf
mov
xchg
loop,pt
repnz
pop
mulb
shrb
jecxz
stos
sti
aam
repz
dec
sub
in
jle
fs
cmpsl
push
pop
pop
and
addr16
ss
cli
inc
lret
xchg
add
push
imul
adc
movsb
popa
in
js
xlat
mov
pop
ljmp
jp
bound
cmpsb
lahf
test
inc
jg
das
push
and
out
sub
repz
sbb
pushl
mov
cmp
pop
jg
loop
fistps
jecxz
leave
mov
popf
stc
or
scas
fnstenv
lea
mov
orb
sbb
addr16
pop
out
push
aam
pmaddwd
bound
loope
cs
in
xchg
scas
add
sbb
push
sbb
fsubl
inc
jge
bound
cld
std
lods
ljmp
fisubs
dec
dec
roll
notb
aad
xor
aas
cmp
sti
aad
dec
ret
lret
mov
pop
adc
push
addr16
inc
out
ljmp
jb
cmp
fs
gs
jno
pop
pushf
fcomp
push
rorl
sbb
pushf
inc
pop
push
flds
and
movsb
lods
fdivl
das
lods
in
lods
fstp
xchg
mov
xlat
es
nop
and
jecxz
or
iret
mov
push
mov
dec
jle
adc
repnz
lods
pop
dec
add
icebp
and
aas
add
lcall
sbb
test
ss
xor
push
mov
popf
jecxz
shl
mov
shlb
pop
lret
mov
shl
daa
xor
xor
xor
lahf
adc
mov
scas
cld
push
das
pop
lock
pop
data16
inc
or
pop
imul
divb
mov
mov
int3
mov
pop
int
pop
inc
and
add
lods
add
xorb
fisubl
loope
cmp
loop
stos
xchg
mov
sub
testb
add
nop
imul
leave
movsb
xor
pop
or
cmp
imul
fsubrl
xor
xor
and
xchg
dec
imul
jecxz
mov
xchg
testb
std
sbb
cs
lods
jg
sub
movsb
dec
loop
mov
cmpsb
shll
mov
insb
sub
jae
jbe
orb
cmp
dec
dec
jne
int
sbb
cmp
xchg
mov
imul
movsl
in
pop
push
pop
inc
leave
stos
xchg
cmp
scas
or
jle
sbb
outsb
jp
jo
movsb
jg
popf
add
call
mov
and
or
xor
mov
xor
loope
je
arpl
adc
xchg
cmp
andl
push
insl
mov
sbb
and
mov
movsl
jl
sbbb
lea
adc
mov
jbe
xchg
notb
lret
pop
lret
jg
neg
push
test
mov
dec
dec
adc
cmp
scas
daa
mov
stos
mov
cmc
dec
dec
or
jmp
or
cs
mov
fsubrs
mov
xor
imul
iret
das
stc
sub
sarb
ret
jle
fcmovb
fiaddl
mov
cltd
std
sbb
int
outsl
mov
push
push
int
pop
gs
stos
subb
aaa
nop
push
push
or
aad
clc
xchg
xchg
add
dec
push
fwait
outsl
xchg
sub
out
add
jmp
cwtl
xchg
push
sbb
jae
out
xchg
mov
clc
lock
fdivr
cli
xchg
popa
push
jle
mov
fbstp
movsl
ljmp
ja
cmp
int
lret
xchg
fistps
dec
mov
sbb
jo
and
sbb
mov
mov
aas
dec
in
bnd
mov
dec
fldt
test
push
adc
std
mov
sbb
rclb
roll
pop
imul
notb
mov
xchg
call
mov
mov
or
lahf
xor
ljmp
cmp
dec
pop
imul
pop
push
es
sbbl
jbe
push
jo
je
adc
lret
cs
pop
stos
cli
xchg
repnz
lds
pop
ds
pop
insb
xchg
dec
rcl
mov
inc
fldt
pop
out
push
or
or
out
rorl
mov
test
jnp
ds
test
mov
pop
in
in
dec
pop
scas
in
lret
push
sub
and
pop
scas
jne
imul
sbb
cmp
sub
dec
sbb
pushf
popf
icebp
dec
pop
pop
iret
pop
add
sub
xor
sti
xchg
xchg
push
cs
pop
push
add
and
dec
pop
adc
xchg
mov
sbb
outsb
repz
call
or
jl
mov
mov
dec
les
insl
cld
leave
pop
mov
push
pop
aaa
sbb
cmp
enter
out
sub
push
test
adc
je
jle
add
xchg
jg
pop
xchg
mov
jg
mov
xor
and
pop
push
cld
cmp
jl
ret
js
pop
imul
xchg
inc
sub
push
std
cmc
loopne
testb
fdivs
inc
mov
clc
jecxz
cmp
cmp
clc
push
movsb
in
mov
adc
pop
xchg
cwtl
xchg
decl
pop
pop
sbb
fcompl
lret
std
cmp
cmp
adc
mov
mov
push
int
xor
scas
int3
cmp
dec
cmpsb
mov
mov
das
cmp
add
movsl
fs
add
jmp
or
jne
aas
mov
cltd
hlt
in
adc
rorb
cmp
push
mov
inc
xchg
inc
xchg
sahf
pop
mov
call
int3
push
push
pop
cmpsb
fcmovnbe
outsb
or
imul
mov
lods
jmp
fwait
cltd
popf
cld
fcomps
mov
pop
and
cmp
stos
fbld
fdiv
enter
data16
cmp
enter
push
jge
xchg
push
out
cltd
push
lret
fbstp
jne
jns
xor
inc
jno
inc
fs
sub
xor
out
fmull
adc
xchg
cmc
minps
lods
jnp
dec
into
es
cmp
test
mov
sub
loop
fidivl
xor
adc
ja
cmp
cmpsb
test
fwait
sbbb
test
sub
das
dec
popa
sub
inc
fdivp
sbb
gs
jno
in
lods
dec
xor
repz
fadds
mov
sub
insl
ja
push
jmp
or
repz
inc
fbld
in
popf
inc
or
add
aaa
xchg
imul
loopne
fstps
test
xor
cmp
push
frstor
outsl
or
xor
lahf
lods
cmp
jp
push
fidivrl
or
outsb
lds
push
push
sbb
pop
add
hlt
dec
sbbb
les
test
popa
inc
xchg
mov
imul
push
xchg
xchg
aad
jmp
stc
mov
imul
jl
jns
or
mov
ret
stos
cs
lret
cmpb
xor
sbb
clc
addr16
fwait
sbb
in
sbb
cmp
imul
mov
push
lods
sbb
jne
aad
mov
mov
test
cltd
or
xchg
jb
dec
inc
sub
add
pop
repnz
xor
ret
fsubrl
fs
fldenv
dec
testb
loope
and
cmpsb
mov
mov
or
inc
pop
aad
adc
stos
cmc
aam
jl
lods
mov
stos
cmc
jae
inc
mov
jle
xchg
cmp
andb
add
mov
or
stos
mov
imul
imul
sarl
push
in
outsl
add
dec
mov
or
fwait
loop
iret
xor
xor
in
inc
gs
add
cli
xor
int
repz
leave
cmpsl
cmp
push
mov
pusha
mov
sub
sbb
mov
lds
ss
cli
sti
add
xor
mov
fnsave
jne
decb
add
aas
js
std
je
and
pop
adc
xor
ljmp
cwtl
mov
mov
out
xchg
inc
addl
loop
popf
xor
sti
test
xchg
cmp
sbbb
repnz
daa
mov
leave
fcmovnu
stos
sub
fsubrl
ds
xchg
dec
repz
mov
mov
pop
and
jmp
cmp
sub
cmpsb
cltd
xor
mov
lock
mov
cmpsb
sbb
loopne
mov
fwait
out
ja
scas
dec
movsl
lds
xor
xchg
hlt
or
push
shr
xchg
jge
lcall
mov
jno
pop
imul
mov
fiadds
push
dec
icebp
or
dec
xor
adc
repz
adc
pop
dec
mov
and
jmp
push
mov
int
sub
cmpsb
mov
pop
mov
dec
ret
pop
xor
jp
jno
push
mov
in
sahf
lods
in
gs
dec
fimuls
mov
or
add
jno
dec
jp
dec
ret
xor
push
jmp
or
inc
push
rolb
inc
imul
pop
adc
adc
or
iret
clc
das
outsl
inc
inc
mov
mov
hlt
es
pop
imul
out
test
fnstenv
jmp
inc
mov
js
mov
mov
addb
js
ja
mov
or
and
xlat
sbb
data16
mov
movsb
jecxz
cmc
sub
inc
call
imul
dec
xchg
rcr
inc
popa
pmaddwd
fnsave
sbb
dec
fmuls
or
cmpsb
sahf
sub
mov
fidivrs
xlat
rcrl
aad
test
mov
rcl
add
repnz
stc
ss
ljmp
fcomps
je
sub
adcb
or
int
jno
push
mov
xchg
outsb
and
xchg
adc
arpl
mov
push
xor
inc
shl
xor
and
mov
fcmovnu
pop
mov
test
mov
out
add
cmp
xor
sbb
mov
int3
scas
xor
push
test
loop
sub
jmp
xorb
or
inc
outsb
pop
stos
outsb
ja
icebp
das
push
jl
xchg
add
in
xlat
aaa
push
loop
xor
inc
lods
sub
lea
inc
icebp
fildll
dec
inc
das
dec
mov
cmc
adc
sbb
int3
xor
je
bound
xor
iret
pop
es
push
jge
xor
jp
enter
inc
stc
rolb
sbb
push
mov
popf
mov
mov
popf
repz
jbe
xchg
xchg
mov
sbb
and
or
pop
fwait
xor
add
sbb
sub
ret
orb
dec
adc
hlt
leave
stc
dec
es
push
pop
pop
sbb
scas
lds
adc
sub
inc
dec
push
in
cmpsl
aas
leave
aaa
mov
mov
push
sub
out
shrl
push
adc
stos
ret
jne
pop
into
je
add
jne
int3
xor
push
ljmp
idivb
jnp
xchg
cmp
lods
popf
pop
adc
adc
push
popa
scas
adc
and
pop
mov
daa
push
je
pop
cld
pop
imulb
xchg
jle
mov
add
push
mov
lds
mov
mov
jmp
cwtl
push
or
jle
jb
dec
or
std
push
stos
xchg
inc
cli
fsubrp
dec
adc
xchg
ljmp
dec
pop
pop
pop
inc
stc
pusha
test
fidivrs
inc
call
xlat
sahf
adc
mov
lcall
and
jnp
lret
lret
jns
outsl
add
es
xchg
add
jb
fdivl
cld
cmp
aas
loope
pusha
push
or
outsb
mov
pop
or
movsl
mov
clc
pop
ds
cmpsl
loopne
pop
rcl
ret
jp
pusha
inc
pop
rcll
or
jne
and
push
loop
adc
dec
scas
pop
xchg
mov
mov
into
jo
jge
adc
xchg
mov
sub
mov
jb
pop
jnp
insl
push
mov
arpl
mov
scas
inc
ds
and
push
push
rorb
stc
sub
jp
xor
push
sbb
ret
leave
popa
cli
push
push
and
aas
cmp
pop
cmp
out
or
mov
cld
xchg
daa
xor
fidivrs
bound
or
pop
cmp
push
test
pop
and
dec
pop
lock
dec
insl
int3
cld
mov
lods
pop
pop
push
push
cli
xlat
shlb
es
pop
pop
lods
bound
pushf
adc
in
std
fldenv
mov
mov
pushf
js
repnz
cli
ficompl
dec
mov
or
bound
subl
aam
enter
fadds
mov
stc
aad
inc
outsb
adc
fdivs
and
loop
imul
adc
dec
lods
push
ret
dec
les
shlb
pop
mov
push
fs
in
mov
jae
sub
pop
mov
insl
std
adc
jl
outsb
or
pop
push
or
fcmovne
sti
push
or
xchg
dec
mov
fldl2t
mov
xchg
loopne
outsb
ret
cmp
xchg
xor
pushf
cmpsl
fidivl
movsl
add
jle
stos
roll
in
scas
jns
adc
inc
pop
popf
adc
xlat
imul
test
mov
push
test
ds
adc
fistps
lds
cmp
push
sbb
push
aas
push
and
push
sub
int3
and
mov
pusha
das
cmpsl
ret
jp
sbb
fsubrs
notb
fbstp
ftst
xor
fcomps
out
push
imul
jbe
push
stos
pushf
js
test
shlb
push
add
jae
repnz
sahf
nop
jp
in
jmp
call
push
cmpb
lods
scas
es
cli
xchg
lods
inc
mov
push
add
inc
lret
adc
aam
les
sbb
add
imul
xchg
inc
xchg
inc
pop
inc
fptan
mov
test
push
out
popf
stc
cmp
divl
in
mov
sbb
adc
xor
sbb
test
cmp
cmc
mov
push
fcompl
and
aas
sub
and
in
dec
es
cwtl
or
imul
jle
mov
mov
and
and
scas
movsb
sub
adc
cmp
mov
scas
mov
mov
dec
and
ret
add
scas
out
lods
mov
mov
mov
scas
mov
sub
sbb
or
rcr
inc
mov
push
fisubrl
in
mov
push
repnz
out
bound
aad
push
inc
sub
aas
sub
popf
shll
sti
out
nop
add
jge
in
cmp
sub
adc
mov
insb
cmc
into
adcl
or
ds
bound
sahf
jecxz
mov
cmp
subb
dec
mov
dec
into
in
add
mov
mov
js
lret
inc
add
imul
jmp
cltd
sbb
jg
jecxz
and
mov
add
ds
fucomp
sahf
fwait
xor
inc
shlb
mov
cs
inc
sar
mov
gs
push
cmp
pop
dec
loop
push
stc
dec
scas
mov
push
dec
outsl
ficompl
xor
mov
jle
xorb
adc
pop
push
fnsave
mov
ret
cmpsl
or
jl
and
and
andb
mov
in
pop
rol
mov
mov
or
inc
es
insb
sbb
testl
lock
imul
xchg
dec
fbstp
mov
push
and
push
rcll
mov
iret
mov
mov
in
scas
dec
sub
mov
dec
addr16
ds
sbb
cmpsl
jecxz
repz
cmp
adc
test
inc
ljmp
stc
lahf
add
test
sub
sub
mov
sbb
arpl
popa
clc
call
pop
mov
jnp
mov
adc
sahf
xchg
push
test
hlt
push
fbstp
sub
scas
adc
std
and
orb
add
in
sub
loop
fildl
push
sbb
mov
push
mov
je
outsl
cwtl
aas
in
leave
nop
scas
cvtdq2ps
xchg
adc
out
jbe
and
push
aaa
xchg
repnz
jmp
leave
add
in
popf
mov
adc
icebp
or
add
push
inc
mov
frstor
add
dec
leave
xchg
push
jno
stos
jecxz
call
mov
jle
push
pusha
fwait
js
mov
pop
adc
int3
and
dec
inc
fcoms
adc
stc
xorl
sub
jns
dec
loopne
push
rorl
and
push
xor
push
imul
imul
faddl
ret
jg
pop
ss
cmp
ss
jne
xchg
jmp
push
fs
jmp
adc
xchg
mov
xor
add
in
jl
jnp
push
insl
adc
imul
and
outsb
lcall
or
js
sub
ja
mov
adc
clc
add
xor
push
in
dec
push
mov
jno
push
loope
xchg
lods
jmp
mov
mov
sub
jae
add
icebp
adc
and
push
js
adc
in
ljmp
pop
loop
popa
clc
jl
push
xchg
dec
push
xor
in
out
xchg
pop
fcmove
imul
pop
test
outsl
and
add
inc
mov
adc
push
jae
test
cltd
stos
mov
movsl
lret
pop
movsb
mov
sbb
inc
adc
inc
sbb
pop
insl
rolb
testb
imul
inc
shrl
divb
or
insb
jle
or
push
add
xor
daa
dec
cwtl
push
push
aas
fsubr
push
and
or
mov
xor
xchg
aaa
pop
sahf
add
mov
ss
lcall
cmp
xchg
cmc
dec
pop
push
hlt
iret
push
outsl
int3
pop
xchg
add
jo
lock
and
push
cmpsb
pop
sub
jno
fsts
ljmp
pop
gs
mov
rcrb
xchg
mov
jb
mov
sub
adc
rolb
test
add
cmpsb
popa
fmull
and
ja
dec
add
xlat
cmpsb
les
mov
pop
mov
jns
xchg
xchg
cmpsl
fs
xchg
les
cwtl
arpl
mov
cmp
sub
or
movsb
dec
pop
lock
shlb
push
aas
push
movsb
jl
fxch
subl
test
gs
imul
pop
sub
out
sub
arpl
jmp
inc
xor
das
call
aad
add
sbb
sbb
cwtl
test
outsb
loope
adc
pop
shl
xor
movsb
push
mov
pop
sub
gs
add
sbb
cltd
adcl
jb
sub
pop
nop
lds
stc
int3
fcomp
xor
std
movsl
pop
and
cmp
mov
sbbl
push
sub
mov
mov
mov
adc
scas
xor
les
sub
icebp
ds
mov
fdivs
and
and
insl
ret
jge
jo
stc
imul
pop
xchg
std
jo
clc
jnp
adc
push
push
mull
or
lcall
and
jns
pop
test
test
dec
ja
movb
hlt
out
or
das
inc
mov
std
xor
addl
adc
lahf
mov
or
xchg
or
rep
enter
test
xchg
mov
cmp
pop
loopne
push
inc
dec
cld
lods
jns
mov
jmp
shll
cmp
push
xor
popf
push
adc
aaa
mov
imul
mov
sub
fbstp
imul
jno
lds
je
xchg
movsb
xchg
add
fdivl
jnp
push
push
mov
outsb
add
jae
idivb
inc
cmp
sbb
mov
xor
adc
sahf
xchg
iret
mov
popa
add
fs
or
mov
push
pop
test
loopne
aam
add
idiv
test
jge
mov
jmp
jae
add
daa
inc
pop
call
mov
into
das
cwtl
outsl
dec
or
push
mov
add
cmp
aam
dec
fsubs
push
jg
lods
push
cmp
xchg
xor
sbb
sbb
inc
cmp
cli
das
mov
std
outsl
inc
or
fisubrl
add
movsb
jecxz
aad
lcall
js
mov
dec
cmpsb
add
aaa
leave
enter
add
push
add
cmp
push
out
mov
in
divl
cmp
sub
jmp
xor
jmp
jle
push
sbb
cmp
sahf
cwtl
test
add
mov
lods
jo
push
jmp
cli
sbb
popf
and
cld
std
and
cwtl
and
mov
addr16
inc
arpl
jne
lahf
fnstsw
cmpl
ret
pop
cmp
inc
lahf
sbb
lods
push
sbb
dec
xchg
iret
pop
cwtl
ret
fistps
dec
and
ds
cmpsl
lock
pop
mov
adc
loope
xchg
or
inc
dec
outsl
inc
mov
xchg
push
dec
adc
and
mov
jge
mov
lea
push
jmp
sbbl
xlat
outsb
adc
cmc
pop
adc
bound
jg
jecxz
mov
jno
mov
xchg
mov
les
lret
ficompl
push
jbe
lret
cltd
xor
mov
dec
in
cmp
sbb
aaa
in
negl
pusha
negl
cli
push
jl
sub
sub
push
insb
add
dec
lds
dec
fwait
jae
push
add
jb
out
outsb
in
xor
imulb
outsl
or
jbe
sub
inc
std
test
push
in
ja
xchg
ja
call
adc
das
leave
jae
inc
sbb
xor
mov
xchg
lahf
test
movsb
xor
cld
aaa
pop
adc
nop
pop
stos
es
in
inc
leave
push
out
mov
jno
ret
cld
scas
in
push
shll
mov
adc
add
xor
lods
mov
shrd
mov
cmp
sub
int
aas
test
les
push
rclb
pop
xlat
jge
xlat
mov
dec
cmpsl
jbe
push
cmp
dec
imul
dec
add
rcrl
jmp
das
imul
xchg
call
add
push
add
jo
shlb
sub
iret
aad
lret
lretw
adc
in
arpl
push
sbb
sbb
or
mov
fwait
sti
iret
stos
in
pop
call
lcall
add
lds
mov
shll
inc
mov
outsl
jl
inc
lahf
mov
inc
data16
push
sub
aam
push
push
sti
inc
aas
adc
ja
sarl
jae
sub
lcall
pop
int3
xor
negl
das
jg
push
inc
shll
jns
fldpi
xchg
pop
mov
jb
lds
push
loope
mov
lock
adc
adc
lds
es
adc
les
sub
mov
rorb
and
adc
js
jbe
push
sub
andl
nop
sbb
sub
clc
xchg
add
das
fidivl
lret
subps
sub
mov
inc
fisttpl
cwtl
pop
je
pushf
xor
jecxz
dec
stc
int3
push
inc
into
pop
rorb
jnp
lea
sub
mov
faddp
jge
lods
push
mov
adc
sub
int3
push
shll
mov
xor
or
iret
pop
fcoml
scas
or
push
out
cli
stos
dec
loop
sbb
in
dec
lea
mov
cmpsl
adc
jmp
lret
pop
mov
sub
aaa
test
or
sti
push
movsb
stos
xor
dec
loope
xchg
push
mov
adc
adc
fsubrs
push
test
in
ja
jecxz
loope
je
mov
push
dec
pop
test
sub
jne
enter
lods
push
lret
xchg
sub
adc
dec
sub
add
int3
adc
mov
pop
mov
fsubl
jae
and
movsb
fisubrl
pop
in
jo
nop
arpl
dec
pusha
mov
pop
js
sub
popa
hlt
pop
mov
fwait
push
pop
rolb
mov
dec
pop
xchg
xchg
mov
sub
push
ficompl
xor
lret
ds
cmp
or
int3
push
aas
dec
xor
dec
mov
and
lahf
aaa
arpl
imul
push
ljmp
jge
sar
rcrl
and
imul
pop
mov
adcl
int
and
push
outsl
sub
addr16
sbb
xchg
dec
loop
xchg
repz
clc
fcoml
add
or
push
xor
mov
inc
fucomp
cmp
std
hlt
fdivrs
ret
ds
jecxz
lret
mov
outsb
pushf
dec
xlat
mov
sub
fs
addr16
sub
imul
push
dec
cltd
sahf
ret
mov
hlt
call
stos
out
gs
jecxz
test
sub
aas
push
jno
ret
pop
sbb
lds
cmp
icebp
in
sbb
pop
mov
iret
mov
sbb
notl
in
sbb
mov
idivb
sbb
pop
data16
in
add
sbb
lcall
xlat
outsb
stc
mov
dec
dec
push
xchg
sub
repnz
mov
inc
sbb
and
repnz
jo
jp
pop
cmpb
ret
mov
sbb
cmp
xlat
imul
fnsave
mov
mov
mov
je
xchg
fidivl
loopne
roll
nop
pop
cld
dec
insl
je
pop
jns
xchg
add
or
cs
icebp
lahf
fidivs
mov
imul
sub
iret
mov
mov
or
fbstp
cltd
and
aad
xchg
sbb
inc
mov
outsl
cltd
fwait
pop
mov
jmp
mov
mov
cmp
pop
es
pop
fildll
pop
in
sbb
mov
jo
push
mov
int
ss
push
cld
mov
out
xchg
mov
loop
pop
dec
or
adc
push
movsb
neg
aad
dec
in
fsubrl
sub
add
or
dec
imul
xchg
cmp
imul
idivl
or
cld
adc
lock
xchg
push
stos
mov
in
lret
xchg
ljmp
adc
out
pushf
add
inc
mov
stos
and
or
push
or
fs
cli
xchg
ret
hlt
cmc
cmp
or
ss
sbb
cmp
dec
xorb
push
daa
pop
xchg
clc
rol
pop
push
jb
mov
addl
enter
jns
inc
stos
fsts
cmp
popf
lret
decb
in
loope
xor
ret
shll
aad
pop
daa
add
gs
cmp
cld
movsb
push
adc
popf
je
adc
push
mov
sti
rorb
movsl
sub
cmp
mov
jg
xor
sarl
mov
and
in
mov
sbb
out
cmp
stos
sub
icebp
mov
data16
sbb
and
sub
xchg
pop
xor
mov
lret
jns
bound
mov
xchg
pop
inc
arpl
mov
push
lods
jle
add
add
fiadds
xchg
loop
mov
divb
dec
push
mov
xchg
stos
hlt
mov
daa
in
add
sbb
push
pop
push
dec
popf
push
nop
and
or
jge
mov
das
fs
cmp
mov
mov
xor
roll
push
xlat
in
xchg
insl
sbb
aaa
jg
fistl
fsubl
xchg
adc
or
stos
cmp
cmpsb
rep
outsl
ds
mov
call
test
jecxz
dec
adc
int
clc
data16
xchg
cmp
jecxz
ja
pop
xor
js
out
sbbb
sbb
sub
cmp
push
jmp
gs
and
inc
dec
loope
ds
sub
jo
movsl
mov
andl
lods
pusha
lea
xchg
ljmp
xor
pop
mov
mov
insl
ret
arpl
pushf
sbb
jmp
cmp
xchg
nop
leave
jnp
aam
rcrl
or
mov
jo
or
xchg
push
in
push
mov
movsl
mov
push
inc
shlb
push
flds
mov
rcl
push
pop
pop
lahf
push
aaa
mov
fwait
sbb
scas
out
aaa
push
or
sbb
ljmp
pop
mov
enter
cld
test
push
or
enter
bound
mov
and
push
xlat
sbb
xlat
cwtl
inc
jb
pushf
test
xchg
lret
pop
jne
jns
and
stc
and
arpl
sub
imul
mov
adc
sub
mov
jge
aas
lea
push
aad
movsl
cwtl
push
pandn
cld
or
in
int3
xchg
or
fs
sub
pop
jns
adc
out
in
loope
shrb
dec
sbb
fs
or
mov
call
push
inc
idivl
or
inc
fadds
push
call
aas
out
lock
mov
movsl
fwait
cli
inc
cli
cli
add
shlb
test
push
cmpsl
inc
push
mov
inc
sub
add
xor
or
pop
fiaddl
fincstp
push
ds
xchg
push
add
cmc
mov
mov
imul
test
repnz
je
jbe
mov
fistps
repnz
pop
movups
das
pop
adc
dec
add
out
jge
and
mov
mov
sbb
ret
cli
or
mov
push
clc
imul
aam
mov
lods
inc
pop
mov
lret
or
mov
pusha
test
mov
dec
bnd
jo
stos
or
jg
int3
adc
add
and
jo
movsl
cmp
pusha
mov
xchg
lods
rcll
lcall
jne
mov
adc
sub
into
stc
call
inc
inc
adc
mov
aam
adc
cmpsl
imul
sub
or
sub
mov
gs
shlb
mov
jge
inc
mov
lods
inc
xor
xchg
add
push
cmp
iret
lock
out
mov
loop
loopne
mov
aam
sbb
dec
ss
and
fisubrl
cmp
or
inc
idivb
mov
out
push
mov
jb
sti
out
pop
neg
mov
cli
mov
adc
push
sahf
sub
mov
aad
xchg
or
pop
mov
jl
inc
icebp
adc
outsb
ret
ds
jne
mov
pop
insb
out
or
inc
or
int
jmp
cwtl
in
testb
test
push
scas
fiadds
mov
movsl
xchg
add
sarl
push
test
jb
addr16
ja
or
mov
hlt
jae
xchg
pop
stos
add
mov
lock
movl
mov
lea
mov
icebp
movsl
jle
push
outsl
repz
loop
scas
cmp
jl
iret
pop
call
inc
jae
jae
xchg
xchg
in
mov
mov
mov
jae
xorl
xlat
adc
div
loop
mov
mov
push
xor
inc
lea
js
pop
and
nop
pop
pop
insb
sub
fadd
das
dec
and
dec
mov
inc
sub
mov
cmc
mov
or
imul
movsb
mov
or
mov
inc
or
loop
sbb
imul
mov
in
adcl
ds
xor
inc
inc
xor
fsubrs
into
in
aaa
pop
roll
inc
mov
or
xchg
outsb
sub
pusha
int
pop
inc
test
xchg
sbb
mov
push
or
mov
pop
add
lcall
xor
sbb
outsl
and
mov
mov
lahf
pushf
mov
lods
sbb
lahf
jno
fmulp
mov
push
arpl
pop
stos
xchg
push
sbb
mov
ret
add
jae
clc
es
aad
rorb
sbb
pop
cmp
xchg
fstpl
cmp
pop
test
mov
push
aas
add
lahf
mov
addr16
mov
stos
std
sahf
add
xchg
push
inc
roll
pop
test
lret
push
sub
dec
add
inc
mov
in
jle
shll
mov
mov
lods
repnz
in
adc
xlat
or
jne
call
js
and
js
xor
mov
sarb
mov
jp
cmp
push
sbb
jo
and
movsb
xlat
popa
cmp
ffreep
in
dec
std
push
test
push
inc
fs
xlat
cmpsb
cmp
mov
dec
outsb
je
ret
jae
jecxz
pop
xor
mov
fdivl
in
das
mov
je
push
xor
xlat
repz
jno
lahf
jp
jns
sbb
iret
mov
sbb
lahf
xor
sub
rcrb
fcomps
xchg
xchg
into
in
hlt
add
fstpt
inc
sbb
and
mov
xchg
adc
adc
inc
ds
or
out
adcb
pop
jns
cmp
and
nop
pop
frstor
ds
fs
ss
mov
gs
insl
sahf
xchg
dec
sbb
jno
int3
faddp
insb
clc
sub
add
clc
pop
push
xor
push
shlb
or
in
xchg
xchg
push
mov
pop
loop
pop
mov
mov
daa
icebp
adc
sub
mov
sbb
cmp
repz
pusha
cmp
movsb
mov
ret
xor
test
mov
pop
jno
mov
sub
jne
sahf
iret
mov
or
stc
add
mov
dec
pop
into
in
inc
jg
movsl
cld
xchg
sahf
mov
out
mov
xchg
popa
lock
int
popa
and
push
fcompl
hlt
aas
icebp
shrl
scas
cmc
movsb
push
repnz
jle
fdivl
push
xchg
xor
movb
mov
jp
sbb
je
ss
xchg
sti
ret
movsl
icebp
leave
or
cwtl
outsl
das
cltd
movsl
mov
scas
movsb
jnp
cltd
jb
cmp
mov
int3
jnp
subb
push
jmp
adc
and
sbbb
andl
ret
jb
cli
cmp
or
jmp
ds
jle
pop
insb
jbe
and
idivb
add
mov
mov
pop
adc
inc
dec
ljmp
dec
mov
pop
adc
aas
jmp
mov
or
lods
add
push
cltd
or
out
mov
jp
dec
sub
add
xor
jmp
xchg
enter
js
or
xchg
adc
or
adc
mov
jne
mov
mov
mov
jp
add
outsl
jg
mov
pop
shrl
dec
push
and
add
lock
jp
std
or
nop
mov
loope
mov
pushf
pop
xor
mov
cmp
pop
jae
test
jne
scas
cmp
shlb
cmc
fwait
cltd
cmc
jbe
cmp
cli
inc
das
xor
arpl
push
inc
mov
cli
mov
es
push
xchg
cwtl
or
xor
int
ficoml
testb
loopne
jecxz
sti
loope
mov
cmp
icebp
ds
iret
mov
arpl
jl
fisubrl
fmull
mov
inc
cmp
mov
pop
aas
stos
mov
shll
sub
xor
jg
stc
test
adc
pop
xor
jmp
out
ljmp
mov
movsb
cmp
clc
es
push
imul
dec
cmp
or
stos
cmp
sbb
outsl
hlt
loop
mov
or
dec
cs
mov
mov
ljmp
outsl
adc
cltd
pop
fwait
xor
mov
in
addr16
cmp
loop
mov
dec
ret
push
mov
push
and
rolb
mov
xor
lods
inc
inc
jmp
lret
inc
repz
in
adc
data16
js
sbb
xor
cmp
les
or
add
popa
fs
xchg
adc
pop
and
test
push
dec
mov
jae
add
pop
scas
xchg
jmp
jecxz
pop
mov
fildll
mov
idivl
jle
popf
pop
jno,pn
fbld
fidivs
dec
lret
int3
mov
pop
adc
mov
out
js
sti
mov
adc
and
mov
pop
jp
sub
add
cmp
icebp
repnz
outsb
dec
call
cltd
pusha
outsb
loope
xor
inc
add
js
and
xor
lods
sbb
jbe
daa
data16
jg
movsb
ret
js
and
sub
mov
icebp
or
aad
cmpsb
xchg
dec
mov
mov
fcmovb
cmp
xor
add
cs
push
or
int3
pop
cmpl
ret
shrl
xchg
inc
push
jl
jbe
or
sbbb
int3
sub
mov
loopne
jp
test
icebp
mov
adc
fmuls
mov
in
cmp
arpl
xchg
xchg
lret
sti
xor
sub
sbb
test
leave
pushf
jge
loopne
loope
rcll
addr16
xor
push
pop
mulb
out
fcoms
or
adc
popa
lret
jle
xchg
inc
dec
and
sti
dec
cs
push
sbb
ret
pop
out
outsl
dec
mov
push
mov
repz
add
push
xchg
sub
mov
cmp
fldenv
into
fnsave
pop
or
mov
push
stos
mov
fdivrl
mov
into
mov
adc
jo
mov
cli
jmp
add
dec
pop
sub
ja
add
jbe
jmp
dec
negl
xor
push
or
and
mov
aad
aam
into
aas
imul
mov
addr16
ret
push
push
cli
in
sbb
out
int3
mov
or
aaa
dec
gs
test
and
rorb
and
jno
inc
or
jmp
sbb
outsb
jmp
mov
cmp
sub
pop
rclb
mov
push
jno
jecxz
dec
aaa
dec
sub
sbb
rcrb
rcrb
jb
fmulp
mov
push
xor
shlb
mov
sbb
or
add
iret
jmp
in
pop
inc
ljmp
xor
fildll
inc
push
pop
into
aad
inc
lret
adc
movsb
add
xchg
addl
mov
xchg
xor
inc
add
subl
sbb
sub
aas
sbb
int3
arpl
jge
inc
imul
shr
mov
or
jo
sbb
inc
popf
jae
or
mov
inc
jo
in
cmpsb
sbb
xchg
sub
aad
iret
mov
jo
insl
out
stc
subb
push
xchg
lcall
mov
out
shld
aam
std
mov
cmpsb
cld
stos
inc
adc
popa
cltd
push
pop
ja
fwait
sub
mov
push
jle
mov
mov
jo
xor
xor
cmc
cmp
dec
mov
in
iret
pop
std
stos
mov
pop
push
shlb
outsl
test
rcrl
xor
dec
cmp
mov
stc
sbb
lds
jp
divl
lret
pop
mov
mov
addb
xchg
dec
repz
iret
mov
fnstenv
or
pop
outsl
xorl
sti
cs
outsl
dec
arpl
mov
fcoms
out
pop
iret
movsb
jg
inc
lods
mov
scas
ja
pop
hlt
pop
cmp
insb
mov
imull
xor
push
and
xor
loope
stos
mov
aad
je
aad
movsl
in
pop
push
addr16
xor
out
jnp
dec
xchg
push
push
mov
add
inc
negl
push
out
sub
push
mov
dec
push
out
pop
pop
in
testl
sub
fildll
lds
or
ja
shl
sbb
xchg
ds
cwtl
dec
add
inc
lock
fidivrl
out
sbb
lcall
out
cmpsl
mov
stc
js
adc
xchg
movsl
xchg
xchg
popa
ljmp
test
cs
push
les
sbb
divb
cmp
adc
int
sbb
orl
ret
cs
mov
mov
dec
xlat
jle
and
xchg
stos
sbb
sti
into
test
and
mov
pushf
mov
sbb
push
leave
pop
push
mov
fwait
add
xchg
cli
xchg
aam
gs
xor
pop
shrl
fisttpll
cmp
and
fs
fisubl
pop
xor
inc
jno
lods
push
cld
push
pop
jae
mull
adc
mov
adc
into
enter
pop
ljmp
and
pop
adc
xor
shlb
xlat
cld
adc
jle
push
leave
or
out
iret
mov
xchg
insb
std
jns
mov
inc
lret
test
icebp
in
xchg
dec
lret
sbb
fs
bound
mov
popl
and
fadds
cmpsl
fisttps
and
cmp
mov
ljmp
push
jp
adc
fwait
lock
ja
addr16
add
push
mov
adc
idivl
daa
fldcw
cli
adc
fadds
js
lret
aaa
or
push
dec
je
cs
adc
and
and
sub
popa
jg
imul
mov
inc
enter
xor
pop
lahf
push
xlat
jns
add
push
sub
sub
pushf
sti
in
mov
les
scas
lret
sub
bound
dec
cltd
shll
lea
insl
add
add
xchg
mov
push
and
sbb
jo
fisubl
enter
test
adc
std
adc
cmp
leave
mov
stos
xchg
mov
pop
pop
xlat
sub
jne
stos
lds
mov
popa
cs
mov
and
inc
fsubrl
inc
enter
and
adc
std
jns
dec
sbb
lcall
push
xor
fmuls
push
js
stc
lret
popa
xlat
aas
push
fmuls
stc
call
push
push
lcall
cmpsl
dec
xorb
jp
out
mov
add
mov
repz
fsts
push
mov
repz
cwtl
in
test
mov
andb
out
das
repnz
xor
pop
mov
cmp
dec
loopne
aam
inc
rclb
lods
addr16
adc
dec
out
mov
hlt
push
jbe
loope
jns
sub
test
shrb
popa
jnp
pop
mov
mov
and
xlat
pop
mov
xchg
pop
addr16
mov
cs
cmp
ret
lea
mov
add
mov
push
les
mov
insl
cli
mov
lahf
shrb
push
lock
sbb
popa
int3
call
out
inc
fiaddl
jle
cli
in
popa
loopne
loop
mov
adc
decb
inc
std
lcall
enter
lret
push
or
push
insl
fsubl
xchg
popa
les
sti
mov
das
xchg
dec
popf
and
mov
and
in
divps
movsl
cmp
fwait
or
cmp
sub
pop
shrb
addb
pop
jmp
rcr
push
push
sahf
jae
mov
and
push
add
bound
push
pop
leave
into
cmpsl
icebp
mov
movsl
cmpsb
dec
jle
mov
aad
fisubrl
test
lods
mulb
xchg
test
inc
testl
rorl
scas
shrb
jnp
add
xor
add
jo
popf
bnd
insb
pop
add
xchg
inc
dec
cmp
fstl
mov
fnstcw
fcomps
ja
movb
cmp
cmp
jno
pop
rcll
and
push
mov
jecxz
add
out
outsl
xor
push
or
fldt
outsb
sbb
call
push
jnp
xor
lret
mov
lcall
xchg
stc
call
shrl
xor
subb
xor
push
dec
sahf
sahf
xlat
ljmp
inc
lcall
lcall
je
xor
dec
idivb
shl
or
xor
ja
push
outsl
aaa
mov
daa
fisubrl
inc
sbb
popa
inc
xor
roll
push
mov
hlt
popf
sbb
jns
pop
or
loopne,pn
or
mov
mov
int
dec
decl
jo
fmulp
jmp
sti
dec
hlt
adc
daa
mov
jns
fpatan
mov
enter
xlat
lods
inc
jb
mov
test
into
pop
inc
cli
mov
dec
in
jp
sbb
stos
dec
loop
fisttpll
lret
pushl
jmp
add
int
sti
cmp
sub
pop
or
pushaw
push
loopew
push
jae
push
jbe
mov
adc
aad
jno
movsb
push
enter
sub
mov
and
outsb
push
xor
pop
int
mov
addl
and
loop
xor
xchg
jmp
xchg
jns
clc
inc
xchg
jl
adc
notl
fs
std
daa
dec
xchg
fstl
push
push
dec
pop
mov
lods
inc
mov
pop
btr
or
imul
push
stos
mov
loopne
sub
aad
xor
xlat
add
inc
xchg
sub
icebp
testl
push
ja
pop
mov
xchg
rcr
jo
and
sbb
test
test
leave
mov
lock
jo
dec
push
cmp
rolb
push
mov
in
inc
jnp
cmp
mov
mov
mov
data16
clc
xor
xchg
test
sbb
sahf
jns
mov
dec
or
push
ss
inc
add
dec
bound
lods
mov
imul
mov
xchg
mov
jle
mov
loope
arpl
push
lret
into
fs
sbb
out
aam
in
jmp
fisubl
sarl
pop
mov
mov
fildl
mov
inc
fldl
lcall
mulb
shlb
pop
mov
int
xchg
cli
cmpsb
lock
int
roll
mov
add
dec
fmull
into
inc
push
popa
in
xchg
pop
aaa
mov
pushf
mov
cmc
int
cmp
popa
adc
stos
aas
sub
sub
insl
push
mov
lods
std
pop
push
dec
es
outsb
push
lods
mov
pop
es
xor
and
mov
out
test
adc
divl
imul
fldenvs
jo
xchg
mov
flds
test
arpl
inc
cmpsl
lret
push
xchg
sub
outsb
scas
sub
stos
ds
aas
sbb
mov
cmpsl
mov
pusha
test
rclb
imul
mov
dec
aad
fisttpll
insl
dec
popa
push
sub
mov
mov
cmp
test
das
ret
cltd
xor
rclb
popf
aam
mov
pop
add
es
gs
xor
sbb
movsb
mov
sub
fxch
cmpsl
xchg
xor
popa
outsb
push
sarl
dec
cmpsb
push
jne
adc
cmc
push
insl
mov
jmp
out
shrl
pop
mov
mov
mov
mov
dec
ffreep
mov
out
pop
repz
fcomip
or
repnz
mov
cmp
cwtl
cs
ret
push
sub
loope
dec
sub
ret
ffreep
sub
pop
test
lret
pcmpeqw
adc
dec
cmp
xchg
aam
mov
mov
cmp
mov
addr16
adc
ljmp
mov
out
or
fsubrs
imul
sahf
mov
sarl
sub
xor
dec
or
cli
cmp
dec
inc
sbb
sub
push
lcall
loopne
loopne
dec
lea
mov
mov
cli
push
ds
outsl
sbb
pop
xlat
mov
js
cmp
adc
fwait
dec
pop
fistpll
or
lock
sub
daa
pop
cmc
int
sub
imul
xchg
push
leave
rcrb
sti
pushf
sahf
xor
inc
outsl
mov
int3
and
out
cmpsl
cmp
dec
lods
cs
repnz
xchg
add
xchg
test
jns
pop
stos
ljmp
fbld
inc
pop
insl
js
fwait
xor
jge
xchg
mov
das
pop
lahf
mov
mov
aad
call
loopne
mov
fdivl
test
ds
orb
xchg
int3
mov
add
xor
mov
aad
lock
or
cmc
fisubl
ret
cmp
je
lret
int3
push
mov
aas
cmc
ret
out
shl
cwtl
in
mul
in
rcrb
dec
mov
jge
jle
shr
push
mov
aas
aad
pop
ret
fistpll
cli
pop
inc
jmp
fwait
repnz
inc
imulb
jge
hlt
xchg
or
adc
xor
xchg
jp
mov
dec
loopne
ror
mov
mov
xor
lret
sub
lods
xor
sbb
add
xor
fnstsw
jge
xchg
negb
xchg
mov
mov
mov
arpl
jp
pop
xor
leave
int
loope
stos
mov
psraw
xor
jp
push
or
popa
int3
add
cmovo
and
cmpsb
mov
add
rcrl
popa
enter
test
inc
daa
xchg
lods
hlt
movsb
pop
add
enter
and
loope
mov
push
mov
flds
push
repz
es
mov
scas
rcrb
dec
data16
adc
xchg
pop
aam
mov
xchg
sbb
adc
cmp
xchg
pop
mov
xchg
mov
insl
add
sbb
mov
popa
xor
or
incw
inc
rolb
dec
lods
xchg
add
xchg
lret
mov
jecxz
mov
ret
or
shrl
setg
nop
push
insb
xor
movsb
aaa
das
or
in
mov
in
adc
ret
fldt
out
shl
rolb
mov
cmp
mov
dec
cli
xor
fcoml
rolb
cmpsb
push
in
ja
in
ja
stos
inc
push
fadds
int
mov
pop
daa
inc
jnp
cli
adc
ljmp
xor
sbb
enter
jp
xchg
sub
aam
xchg
loope
mov
push
outsl
sub
pop
popf
gs
pop
jbe
bound
iret
and
jno
pop
je
mov
rol
scas
movsb
cmp
call
add
mov
iret
rcrb
add
mov
jge
pop
sbb
shrb
sti
fdivs
xor
jns
or
mov
lds
lret
pop
cmc
xchg
out
mov
icebp
insb
jmp
test
nop
pushf
xor
out
mov
xchg
pop
push
add
fsubrs
mov
mov
enter
sub
nop
aas
add
push
mov
adc
push
imull
xor
lds
jb
ljmp
mov
ljmp
mulb
cmp
es
push
inc
aas
xchg
sbb
outsb
sti
lcall
lret
ja
xor
jnp
mov
pop
push
in
insb
lds
sahf
mov
push
ret
cmp
lcall
sub
fbstp
pop
imul
sbbl
jl
jnp
ds
adc
fs
add
push
lods
stc
xchg
aaa
adc
and
repnz
mov
mov
xchg
mov
lcall
mov
es
cli
push
dec
inc
add
xorb
in
jmp
sarb
or
outsb
rol
inc
setno
fcmovnb
rcr
mov
mov
mul
xchg
aas
adc
iretw
mov
push
int3
scas
push
fdivl
ljmp
out
xor
adc
sub
xchg
push
xor
lock
cmp
fiadds
imul
imul
test
int3
adc
cltd
mov
mov
test
pop
sbb
cmp
in
or
or
das
shll
shrb
fwait
aaa
pop
push
pop
je
mov
xchg
fdivp
xor
sub
xor
add
add
adc
mov
xor
mov
mov
mov
cmp
and
pop
xor
xchg
adc
ss
mov
pop
and
fadds
and
cmpsl
and
leave
and
xchg
test
das
inc
sbb
cli
push
repz
xchg
mov
call
scas
mov
ficoms
lods
mov
jg
inc
adc
and
mov
rclb
cmpsb
sbb
jle
repnz
adc
out
or
jns
and
movsb
test
mov
sbb
ds
pop
aaa
vpunpckhqdq
add
jnp
cmpb
pop
pop
mov
and
mov
inc
jo
stos
inc
pushf
jmp
mov
jae
add
and
mov
cltd
pop
mov
mov
in
in
clc
inc
mov
dec
pop
mov
xchg
mov
sub
orb
mov
fcmovb
andb
mov
sub
jns
push
mov
enter
or
and
sub
xlat
cmc
jnp
or
mov
mov
cmp
loopne
and
and
outsb
add
mov
mov
push
insl
and
add
inc
in
gs
jbe
call
adc
push
call
push
add
int
dec
repz
ficoms
test
mov
das
cmp
push
scas
add
hlt
push
pop
push
sbb
pop
cmc
pushf
jg
lret
mov
mov
cltd
jle
stos
nop
mov
inc
lds
mull
cmp
sub
sbb
xchg
sbb
andl
or
cmp
mov
mov
pop
data16
jno
loope
push
aas
xor
data16
int3
jae
or
mov
pop
adc
pop
cmp
popa
push
dec
mov
ja
fstpl
in
or
inc
mov
gs
pop
pop
dec
fnstenv
sub
mov
pop
in
stos
or
adc
dec
popf
cs
sbb
xchg
shrb
pop
add
xor
aam
cmp
mov
mov
push
sbb
cmp
cmp
xchg
inc
sbb
push
inc
call
cmc
dec
dec
cmp
cmp
scas
sbb
dec
adc
into
gs
stos
jae
out
lods
or
xchg
mov
stos
inc
repnz
out
ja
sub
data16
lods
jl
jp
int
das
fmull
sti
mov
push
inc
jbe
xor
fstl
out
imul
lock
jnp
push
add
andb
sub
movsl
cmp
push
das
xchg
test
gs
xor
xchg
ret
jl
mov
mov
sbb
add
push
inc
mov
jnp
dec
mov
mov
push
icebp
adc
pushf
and
add
adc
sbb
and
cmp
loop
mov
data16
mulb
rolb
add
sbb
xor
or
mov
jo
mov
pop
xchg
adcb
mov
jbe
rolb
mov
xor
ret
xor
dec
xchg
push
fidivrs
push
or
loopne
aaa
nop
daa
imul
shrb
cltd
sti
jnp
addr16
pop
xchg
repnz
inc
js
fwait
test
imul
mov
fisubrs
mov
fs
cmpsl
in
js
imul
jb
push
jbe
sub
lahf
push
mov
sbb
push
pop
jmp
mov
xor
mov
xchg
adc
ror
loopne
sub
loopne
insb
cli
cmpsl
jecxz
push
ja
cmp
sub
mov
icebp
insb
lods
adc
outsb
jmp
xor
sbb
inc
loop
cmp
mov
or
aad
mov
insl
cld
and
cld
xchg
hlt
je
cltd
lods
pop
and
faddp
push
push
or
cmp
jb
loopne
push
xchg
jne
imul
sbbl
add
es
int3
pop
dec
or
or
mov
adc
jne
adc
aam
fdivl
push
ret
mov
mov
enter
mov
mov
jge
mov
imul
adc
lods
ja
mov
cmc
inc
cmp
bnd
add
xchg
sub
cld
test
icebp
std
sbb
xchg
fcomps
js
js
call
sbb
rorb
sbb
adc
push
pushf
insl
sub
jno
mov
mov
jle
das
xchg
push
into
sub
mov
addl
push
into
jl
mov
push
jle
or
jb
cmpsl
xor
jecxz
dec
xchg
stos
add
adc
xor
jmp
cmp
in
pop
pop
and
push
repnz
push
leave
push
jb
xchg
push
ret
sti
sub
mov
jge
loope
mov
lahf
mov
mov
add
aam
dec
into
jg
out
nop
ss
jecxz
adc
cmc
cmovs
dec
mov
mov
xchg
fs
xchg
jp
sbb
pop
push
scas
mov
imul
mov
cmp
push
sarb
movsl
and
cmp
add
mov
sbb
fnstenv
pop
mov
add
xchg
or
ret
cmp
cmpsl
imul
arpl
ret
or
and
sub
pop
int
push
add
stc
cmc
lds
mov
movsb
pop
ss
mov
jns
mov
in
xchg
dec
pushf
cmc
movsl
repnz
out
sbbl
je
loope
push
adc
dec
sub
repz
sub
repz
gs
mov
das
mov
xor
and
pop
mov
cwtl
pop
xor
jecxz
push
lea
lahf
sbb
pop
xchg
add
mov
jbe
into
arpl
lret
fsubrl
inc
dec
mov
clc
mov
pop
insb
push
hlt
jne
in
int3
inc
leave
lahf
je
mov
cmovg
lret
mov
cmp
inc
jnp
pop
pop
and
ret
loopne
cmpsl
jg
shll
jnp
mov
pop
xor
push
fdivl
and
mov
jae
cwtl
push
mov
xchg
sbb
jecxz
pusha
jp
data16
sarl
sub
popf
jbe
test
sahf
scas
or
or
pushf
dec
sbbl
push
xor
mov
pop
pop
into
cmp
aas
ret
into
jne
or
pop
or
in
lods
rclb
leave
adcl
jnp
clc
shlb
jle
inc
xor
jbe
clc
dec
xchg
jmp
sub
lret
pop
lock
ja
lods
pop
psrad
or
dec
sbb
icebp
push
pushf
ja
das
mov
jno
lcall
fcmovbe
mov
ret
daa
mov
cmp
insb
and
inc
dec
cmp
jne
mov
jg
bound
dec
repnz
cli
sub
push
rorl
loope
mov
jl
adc
mov
rcll
xor
call
call
or
pop
mov
fs
sub
pop
inc
iret
ret
repz
fucom
or
xchg
xchg
add
mov
scas
mov
scas
sbbb
daa
sbb
mov
lods
inc
nop
xor
repz
mov
xor
ficoml
fdivrs
cmp
push
jbe
shlb
shrl
inc
jge
adc
mov
mulb
add
and
sarb
pop
popa
loope
mov
cwtl
loop
arpl
js
jbe
adc
mov
call
jmp
mov
jbe
pop
add
jne
pop
jnp
fsubr
int3
adc
inc
push
ss
dec
push
and
add
movsl
icebp
or
cmp
sbb
jb
insb
movsb
adc
shlb
cmp
pop
xchg
pop
add
push
jb
cwtl
movsl
hlt
inc
aad
mov
lds
and
rcll
clc
xchg
xchg
inc
and
and
jg
leave
pop
bound
outsb
and
jmp
cmp
mov
adc
sub
out
cwtl
push
xchg
inc
pop
mov
mov
push
in
fsubp
fwait
sub
adcb
enter
dec
sahf
xor
loop
inc
in
scas
fists
addr16
cmp
mov
mov
mov
jmp
push
cmp
nop
movsb
test
xor
pop
dec
mov
out
enter
adc
jne
inc
or
lods
xchg
cmp
dec
cld
adc
test
loop
iret
imull
mov
pop
sbb
xor
pusha
out
push
jns
jns
jb
mov
rcrb
push
xchg
out
sahf
sub
add
mov
cmp
add
xchg
push
nop
lods
dec
or
xlat
fwait
pop
cmp
inc
mov
ljmp
cmpb
lahf
loopne
das
push
mov
scas
and
inc
mov
push
xchg
ss
push
push
cmc
das
subl
pop
icebp
call
leave
mov
cmpsl
cmp
xchg
fcmovu
adc
mov
push
popa
xor
sub
cltd
scas
push
les
adc
mov
xor
test
scas
fwait
test
ficomps
in
arpl
pusha
ss
lds
and
push
lods
icebp
dec
dec
in
aad
lret
int
mov
ret
push
gs
ljmp
push
in
push
mov
out
js
mov
push
jae
sbb
mov
mov
mov
cld
cmp
clc
mov
ja
sbb
test
xchg
adc
imul
movsb
jg
push
mov
popf
mov
or
mov
fwait
mov
mov
sub
mov
popf
push
mov
pop
jo
lods
sti
xchg
ficomps
mov
movsb
neg
xchg
popa
adc
sub
int3
ds
xor
fidivrl
int
mov
outsl
dec
cmp
shrl
js
adc
popa
inc
icebp
ss
daa
jno
xor
cmp
dec
pop
ja
aam
xchg
pop
xchg
ret
test
and
sub
stc
pushf
inc
cmpsl
mov
jnp
imulb
add
int3
dec
rorb
mov
mov
xchg
inc
xlat
arpl
push
mov
xchg
lea
cmp
scas
test
fsubrs
cmp
pop
or
push
dec
incl
repnz
jl
jae
pop
and
jo
mov
les
push
test
scas
stc
fadds
adc
mov
push
es
cmp
xchg
aad
or
ds
lcall
loop
add
pop
jne
insb
cwtl
push
mov
mov
sub
cmp
imul
adc
scas
leave
dec
cmp
xor
xlat
mov
and
ret
jp
stc
orb
mov
shll
imul
inc
adc
int
adc
aam
ret
loope
cmc
mov
jbe
repnz
arpl
xchg
or
repz
jnp
shll
addr16
mov
es
lret
mov
imul
icebp
insb
test
leave
mov
scas
loopne
int3
adc
std
cmp
mov
stc
loopne
nop
lods
fldl
movsl
div
repz
sbb
mov
or
fisubrl
dec
shll
push
sub
adc
repz
int3
out
call
lret
lods
add
pop
push
fnstenv
scas
adc
movsl
xchg
inc
push
repnz
lea
mov
stos
cmp
movsb
jae
xlat
mov
addr16
sub
ljmp
inc
cmp
cmp
aad
es
jbe
sub
cmp
inc
scas
cmp
inc
addr16
mov
cs
jp
adc
jne
stos
adc
int3
in
pusha
lahf
or
mov
movsb
lahf
xchg
mov
sub
inc
orb
sbbl
pushl
xchg
pop
inc
xchg
push
mov
sbb
and
shrl
addb
inc
sub
pop
lret
jnp
mov
xor
push
mov
adc
sub
test
loopne
idiv
test
jns
test
push
pop
add
pop
sub
out
xor
mov
mov
sti
push
pop
lret
js
lock
mov
push
inc
and
and
jo
pop
outsb
mov
mov
xchg
test
fidivl
sti
xchg
mov
aam
xlat
ss
jp
lahf
xor
xlat
imul
adc
shl
fisttps
cmp
lods
or
out
cmp
mov
movsl
cmp
daa
cmp
add
pop
cli
pop
mov
cmp
and
xor
jns
push
stos
es
fcmovnb
cmp
push
aam
jb
adcb
ret
inc
mov
roll
adc
xor
ret
pop
sarb
subl
jge
fwait
xor
inc
call
sti
enter
adc
fdivl
out
sbb
out
cmp
push
add
jae
adc
jb
clc
jb
inc
sti
sbbl
or
sbb
xchg
std
sub
ret
stc
mov
lods
fs
stos
adc
mov
outsl
mul
js
lahf
push
out
stos
int3
loop
add
xor
imul
fnstenv
pusha
push
rorb
clc
sbbl
xchg
scas
aas
fisttps
sub
and
stos
fs
das
mov
popa
out
lret
sti
adc
test
jns
sbb
in
cwtl
pop
dec
cmp
loopne
insb
rcrb
push
aam
pop
mov
int3
push
mov
in
insl
test
mov
lock
adcb
xchg
push
mov
loop
and
in
cmp
push
xor
mov
lret
push
es
rorb
push
stos
mov
bound
push
or
repnz
pop
sub
lahf
fnstenv
aaa
mov
fimuls
sbb
pop
jl
nop
xor
mov
scas
cmp
pop
xor
div
in
into
sbb
add
clc
fidivl
aas
cmp
mov
sub
inc
in
shl
out
out
scas
movsl
insb
add
inc
xor
clc
cmpsl
sub
cmp
cld
jne
jmp
and
mov
pop
fisttpll
push
out
popf
pop
add
push
outsb
std
popa
cwtl
xchg
mov
mull
xchg
sahf
mov
call
into
or
mov
mov
std
aam
lcall
adcb
xchg
xchg
aad
inc
jmp
inc
push
pusha
push
xor
xlat
imul
mov
ljmp
pusha
push
inc
push
mov
push
push
jl
pop
repnz
sahf
jle
adc
dec
or
push
pusha
or
ljmp
stos
push
stos
stos
cmp
jbe
add
jecxz
cmpsl
sbb
mov
ss
fwait
xor
int3
pusha
adc
pop
push
scas
or
pop
add
mov
int3
xorb
jg
ret
inc
jns
icebp
dec
lcall
cmpsb
sbb
stos
and
add
xor
fwait
or
push
push
jmp
stos
xor
add
xchg
scas
lods
inc
loope
repz
js
out
insb
out
jbe
mov
setb
fisttpl
andb
cmpsb
imul
push
sub
mov
push
daa
mov
or
dec
fxtract
js
mov
inc
mov
jmp
push
xor
popa
mov
shl
mov
andb
shrl
xor
pop
jg
pop
addr16
fucomip
stos
xorl
dec
rcrb
jg
cmpsl
push
jl
push
fnsave
lock
cs
fiadds
push
lret
fdivs
loopne
push
xchg
and
leave
inc
lcall
cltd
int3
fisubs
arpl
lods
push
andb
push
lahf
imul
adc
cmpsb
xor
stos
cmpsl
mov
dec
loop
sub
vandps
dec
scas
add
mov
sbb
neg
xor
test
mov
push
imul
adc
inc
sti
inc
inc
lock
push
inc
mov
mov
dec
jb
rclb
nop
cmp
shlb
es
push
cmp
jmp
mov
andb
pop
sbb
inc
gs
mov
sub
test
xor
dec
xor
test
adc
jns
xchg
inc
push
je
stos
mov
out
jnp
aaa
outsb
lock
jmp
out
mov
or
pop
pop
fldcw
mov
movsl
mov
mov
push
cli
xor
arpl
sarb
in
mov
pop
sbb
mov
std
movsb
repz
and
xchg
mov
arpl
xlat
push
xor
movb
lds
lods
rclb
notb
cmpsb
xor
scas
aam
sar
inc
push
xor
sbb
es
dec
gs
sbb
sbb
ja
jl
hlt
arpl
adc
mov
fcomps
test
xor
cwtl
das
sub
mov
fmul
cmpsl
jl
dec
movsb
adc
mov
enter
cmp
sbbl
fistl
mov
cwtl
divb
xor
jb
out
test
ja
and
sti
data16
sub
sahf
imull
jns
mov
mov
cmpsl
fidivs
repnz
push
mov
adc
cmc
xchg
out
out
xor
mov
clc
mov
ljmp
outsb
add
jb
xchg
addr16
pop
sub
jecxz
push
dec
mov
xor
cmp
in
ret
push
mov
dec
cli
add
loopne
lock
aad
fsubrs
mov
in
cmpsl
mulb
jno
ss
data16
adc
xchg
in
xor
mov
mov
std
lcall
in
outsl
movsb
pop
outsl
add
xchg
sub
leave
fcomip
fcom
dec
and
mov
or
mov
arpl
pushf
adc
adc
and
je
inc
cmp
xchg
pop
imul
and
xchg
gs
add
movsl
out
mov
jg
dec
lea
inc
mov
mov
repnz
repz
sub
test
pop
aas
and
xor
pop
sub
cmp
dec
sub
es
mov
js
out
and
fnstcw
enter
jno
cmp
sbb
sahf
mov
cmc
dec
pop
repnz
std
mov
fwait
sbb
sarl
lret
xchg
addr16
add
inc
xor
xor
or
pusha
mov
scas
lret
lods
je
pop
call
xor
aas
push
xor
or
add
popa
andb
inc
lds
in
out
incb
fimuls
xchg
out
cmp
insl
add
mov
jne
mov
jb
ja
daa
adc
daa
lahf
mov
mov
out
or
dec
mov
mov
push
or
cmp
out
test
lret
sub
jns
and
pop
fsubrp
movsl
call
jne
je
in
pop
xchg
lea
lcall
stos
mov
pop
push
int3
arpl
push
jmp
adc
push
xor
pop
inc
pop
mov
sbb
enter
push
add
push
call
out
cmpsl
imul
inc
cwtl
jo
ret
mov
int3
and
stos
ficoml
inc
jb
inc
push
mov
pusha
and
out
xchg
add
fidivl
xor
stc
adc
adc
cmp
fsub
out
add
sar
sub
sub
dec
aas
jle
clc
xchg
pop
dec
adc
lret
pusha
mov
sub
mov
orb
push
mov
xlat
or
outsl
mov
mov
mov
shlb
adc
in
xchg
dec
test
lods
inc
pop
jecxz
adc
punpckhdq
xchg
dec
inc
push
out
andb
cmp
mov
mov
xorl
push
mov
movl
daa
dec
test
popa
push
das
lds
cmp
rcrb
pusha
je
ljmp
mov
lcall
mov
dec
fs
pop
popf
cmpsb
or
shlb
movsl
icebp
inc
frstor
inc
mov
cmc
lret
sti
adc
stc
filds
andl
xchg
test
daa
mov
and
nop
mov
aam
cld
add
jbe
fstps
enter
pusha
stos
mov
sahf
nop
repnz
xor
das
testb
mov
push
scas
aas
mov
or
lock
fcmovne
int
pop
es
xchg
popa
push
adc
movsl
imul
sti
daa
int3
or
ds
mov
jg
sub
dec
mov
fwait
jb
cwtl
pop
loopne
das
push
sbbb
icebp
lcall
pusha
sbbb
or
iret
adc
fcomip
rcl
imul
loop
xchg
push
pcmpgtd
rcll
cmpsl
mov
mov
shll
jne
mov
daa
add
aam
push
mov
lods
dec
fiaddl
sbb
or
lcall
sbb
daa
mov
mov
xchg
negl
pop
imul
int3
arpl
lret
pushf
push
mov
sbb
mov
cmovno
sbb
and
push
push
popf
xor
cmpsb
or
imul
jbe
aas
and
les
jno
sahf
and
in
pop
push
orb
xor
mov
pop
or
popa
fidivl
aaa
mov
mov
jmp
sbb
pop
enter
imul
scas
xor
ja
or
fdivs
shrb
jbe
add
rcll
xchg
push
push
es
ss
cld
andl
jp
inc
dec
mov
fistl
cs
jmp
sub
mov
ret
out
sbb
ds
in
test
cmp
insl
add
imul
fwait
jge
stc
mov
int
add
push
xor
in
adcl
cmpsl
or
cmp
jmp
push
leave
mov
gs
and
orl
std
mov
mov
adc
adc
rcll
in
jno
insl
loop
add
or
cltd
push
in
mov
aad
int3
mov
out
daa
mov
mov
stos
and
mov
mov
cltd
ljmp
mov
sbb
cmp
arpl
pushf
std
or
test
sbb
dec
dec
mov
mov
ljmp
pushf
scas
pop
sub
adcl
or
insb
sub
movsb
pop
lea
movsb
mov
cmp
xchg
ds
or
xchg
cld
lods
stos
adc
popf
xor
pop
sub
mov
cmp
les
insl
enter
cmp
inc
dec
in
movsl
push
and
mov
clc
mov
jnp
inc
jmp
cltd
incb
stc
out
fimuls
pop
or
xchg
dec
aam
lea
das
sub
sub
cmpsb
add
jbe
outsl
test
inc
testb
jb
enter
fistl
sbb
insl
lds
repz
out
dec
and
xchg
or
lcall
mov
fstl
in
mov
in
out
test
mov
outsl
notl
cmpsl
sti
popl
pop
cmovo
mov
mov
cmpsb
xlat
cmc
sbb
inc
mov
mov
ss
scas
pushf
and
push
adc
xlat
into
testl
pop
xor
into
fnstsw
mov
cld
or
cmp
push
loopne
shrl
inc
test
dec
cltd
jne
adc
cmp
xchg
xor
test
jg
cmp
xchg
movb
daa
clc
lret
mov
adc
mov
jnp
outsl
movsb
mov
inc
add
adc
and
dec
and
fsubrs
in
jmp
xor
mov
in
stos
icebp
ss
mov
adc
mov
bound
aad
bound
dec
push
mov
stc
sbb
test
and
lahf
stos
ja
fadd
push
imul
inc
push
pop
sbb
in
pusha
xor
fsubr
mov
add
mov
pop
fsubl
mov
sbb
lods
xchg
cld
xchg
leave
into
rsqrtps
lahf
outsb
pusha
std
inc
fldl
mov
push
mov
mov
sbb
scas
inc
rcrb
pop
push
in
in
cmpsb
insb
popf
mov
movsl
notb
mov
or
jmp
insb
adc
arpl
push
sahf
pop
and
xorl
xor
sbb
adc
or
cs
pushf
test
push
rcrb
cmp
out
adc
xor
and
jl
gs
mov
andl
pop
leave
arpl
out
cmpsl
mov
iret
or
sub
adc
xor
fistpll
ret
insl
add
iret
cmp
cmc
je
enter
lret
inc
in
pop
idivb
mov
outsl
out
cld
push
hlt
movsb
add
xor
int3
sub
pop
sahf
sbb
imul
clc
cmpsb
mov
jno
into
enter
mov
test
mov
mov
mov
pop
pop
rcll
inc
pop
xchg
repnz
pusha
mov
inc
or
imul
in
stos
jae
push
sub
adc
iret
bound
jo
mov
adc
inc
pop
dec
xchg
call
or
shrl
jae
imul
movsl
mov
ja
inc
stos
push
pop
testb
cld
adc
mov
cmp
inc
fdivr
rorb
or
push
fldenv
and
push
fdivl
or
fs
sbb
pushf
inc
adc
les
jno
pop
mov
lret
cld
stos
test
rcrl
cwtl
idivl
pop
cmc
pop
mov
add
rclb
and
jbe
xchg
test
mov
or
sub
rcl
jo
rol
aam
mov
sti
es
adc
inc
dec
mov
push
jb
out
adc
mov
fildll
adc
test
fcomps
jnp
inc
out
in
in
cltd
dec
popa
mov
lea
xchg
mov
xor
cwtl
push
movsb
test
mov
mov
xorb
sub
lret
inc
or
xchg
mov
insl
sub
mov
and
pop
aaa
dec
lahf
orl
jmp
xlat
ss
xor
inc
fmull
daa
in
insl
arpl
jp
pop
dec
stos
fwait
pop
cmp
cmp
cmpb
mov
shrl
mov
nop
daa
inc
adc
add
mov
mov
jmp
add
inc
lret
loop
and
fnsave
leave
shl
ja
js
sub
mov
jge
outsl
loop
pop
adc
jb
ja
inc
dec
lods
cld
xor
sub
sbb
inc
jg
sub
ror
lock
add
xor
sbb
push
std
popf
stc
cmp
and
mov
ss
mov
in
or
test
js
jno
pusha
mov
and
pop
dec
in
cmc
test
dec
ret
mov
fdivs
and
scas
fstl
mov
das
inc
pop
jno
movsb
mov
sub
dec
cs
mov
lds
adc
adc
data16
mov
arpl
sahf
test
call
aas
int
add
mov
mov
add
adc
aad
popa
mov
sahf
or
shll
es
pop
push
push
ss
loopne
dec
dec
pop
mov
jo
dec
ret
pop
in
add
bound
or
xchg
add
in
jo
jns
test
push
cmp
data16
add
shl
ret
push
arpl
cmp
pop
xorb
xor
xchg
int
popf
icebp
jmp
mov
and
ds
inc
mov
fisubs
sbb
rol
jno
mov
adc
das
mov
outsb
add
push
icebp
mov
cs
inc
xor
xor
mov
xor
shll
imul
test
repnz
xchg
adc
sti
je
dec
loope
jno
stc
mov
add
inc
rorl
femms
pop
xor
pop
lea
mov
out
mov
fidivrl
mov
jns
push
or
pop
ret
pusha
cmc
jg
pop
mov
pop
repz
fistpll
jmp
ja
jno
pop
out
xchg
cmp
or
std
je
xor
nop
arpl
movsl
dec
mov
sbb
lahf
and
rcr
cld
aad
stos
pop
mov
xlat
gs
nop
arpl
in
xor
jmp
mov
int3
or
lret
lods
xor
ljmp
push
cwtl
adc
out
test
aad
test
fmull
jno
pop
sti
rorb
mov
shrb
jp
dec
inc
cld
push
je
movsb
cmp
jno
ds
ret
sub
shl
inc
sub
ljmp
jecxz
fnstcw
inc
mov
mov
pop
cmc
andl
adc
hlt
cwtl
mov
pop
jg
jecxz
inc
aad
je
fildl
je
dec
mov
loopne
or
adc
mov
bnd
aas
icebp
add
scas
jmp
adc
cmp
mov
pop
dec
xchg
sub
aad
les
mov
sbb
adc
fsubr
sub
in
repnz
pop
dec
loopne
insb
and
mov
mov
xchg
xor
not
aaa
bound
push
pop
adc
and
xor
std
inc
pop
das
push
mov
into
out
cmp
jecxz
mov
jmp
jmp
push
pop
xor
test
dec
loope
pop
jbe
lods
sub
inc
mov
jg
pop
pusha
xor
xor
pop
outsb
call
and
in
or
je
out
in
jle
jl
push
stos
lods
movsb
insl
mov
xor
jbe
jge
je
stc
mov
sub
push
fwait
mov
dec
jmp
pop
sar
or
pop
lret
filds
sub
sahf
lret
add
xlat
sbb
mov
xor
in
repnz
test
push
sub
push
and
leave
popf
inc
push
test
pop
int3
adc
repz
and
mov
addb
les
or
or
push
insl
ret
jle
sti
pop
ret
arpl
mov
dec
pop
out
mov
fs
scas
xchg
cmp
fs
arpl
test
lahf
aas
cmp
mov
dec
push
js
pop
outsb
fwait
cmp
mov
mov
iret
sub
mov
mov
sahf
mov
fadd
jmp
inc
inc
mov
test
cmp
mov
popa
sub
pop
pop
orb
jmp
dec
loope
lock
movsb
push
aas
in
push
or
cmp
adc
xlat
mov
les
gs
es
xlat
push
add
das
jo
andl
inc
or
jno
xor
scas
pop
mov
ja
cmpsl
das
xor
mov
xchg
jae
jne,pn
repz
outsb
cmp
or
lea
rorb
stos
nop
loope
xchg
xchg
mov
jge
pop
dec
pop
gs
xchg
add
out
push
sti
movsb
adc
nop
mov
ret
mov
out
jo
inc
cwtl
leave
and
cmp
xor
mov
arpl
clc
cmp
jae
pop
repz
test
lret
xorb
mov
pop
cs
cwtl
xorb
and
xchg
push
sub
in
or
xor
cmp
sub
mov
test
or
mov
jns
int
shll
pusha
fidivrl
sub
sbb
mov
popa
jge
cmpsb
int
jmp
or
leave
adc
push
jne
push
test
xor
push
push
std
push
je
nop
imul
push
mov
sub
push
push
repz
sub
rolb
adc
add
push
lods
mov
push
xor
cmp
mov
cmc
xchg
sub
mov
inc
xchg
adc
int3
mov
aaa
leave
inc
mov
nop
xchg
in
and
out
xchg
jne
cmp
push
scas
nop
and
outsb
add
call
pusha
sbb
cmc
dec
cmp
cmp
aaa
aad
dec
cmpsl
ret
sbb
lahf
mov
mov
nop
adc
push
adc
mov
sub
push
mov
push
xor
in
insb
xchg
outsb
jbe
insb
lds
cmc
dec
sti
movsb
dec
movsl
fsubl
sub
sub
movsb
add
mov
pop
pmulhuw
mov
int
push
pop
lods
xchg
add
jecxz
test
push
mov
test
and
push
stc
xchg
lret
add
adc
push
ja
testl
out
inc
add
pop
mov
xor
mov
pop
roll
cmpl
xchg
push
not
cmp
call
fdivrs
push
sub
loope
cwtl
cmp
mov
sbb
push
test
orl
mov
push
gs
in
mov
pop
or
add
int
sub
lods
xchg
jmp
out
inc
leave
and
stos
jg
push
dec
cmpsb
cmpsl
sysret
fcompl
sub
mov
repz
aas
adc
mov
inc
loopne
fwait
jo
cmc
int
or
mov
shrl
push
xchg
or
test
or
ret
pop
je
loopne
scas
dec
lahf
mov
addr16
test
cwtl
fwait
pushf
adcb
pop
hlt
mov
fidivs
or
jnp
sub
fistl
es
push
jmp
xor
dec
pushf
jb
in
fs
dec
mov
bound
sub
inc
xor
cmc
mov
inc
xor
lcall
mov
mov
in
pop
hlt
cmp
mov
inc
pop
insl
dec
out
aaa
pop
shl
sbb
mov
stos
xorl
xlat
xor
adc
xchg
popf
notb
in
and
or
cli
dec
daa
mov
jmp
inc
fldl
xlat
dec
in
fs
push
jo
icebp
test
ja
mov
inc
pop
adc
lock
mov
rol
jne
cmp
leave
xchg
aaa
sub
cmp
push
testl
mov
mov
clc
sub
add
ja
cmp
je
imul
adc
outsb
xchg
addb
lcall
mov
fwait
cmpsl
push
xlat
xchg
dec
in
add
cmp
mov
enter
pop
enter
and
inc
xor
dec
pop
adc
add
cmpsl
inc
mov
je
and
pop
in
test
ja
gs
or
add
ljmp
repnz
sub
sub
dec
pop
data16
xchg
fucomi
into
push
ljmp
jno
mov
rorl
cmpsl
enter
fcoml
ret
mov
aad
mov
test
dec
hlt
push
sub
xchg
pop
test
es
in
fdivl
mov
jnp
xor
fimuls
paddusw
fucomip
inc
aad
stc
test
fisttps
inc
adcb
add
es
pop
mov
mov
inc
orl
insl
xchg
cli
mov
mov
imul
mov
xchg
shr
mov
mov
flds
sbb
cltd
mov
cmpsl
out
fxch
js
pop
ja
mov
scas
push
jmp
push
clc
adc
jb
adc
daa
nop
daa
pop
call
int3
iret
lock
dec
and
add
sub
les
stos
fidivl
xor
arpl
adc
pop
mov
dec
xchg
and
aad
bnd
inc
adc
decb
mov
cmpsl
out
test
pop
outsl
fwait
inc
or
jbe
inc
fistl
clc
xlat
outsb
divl
testb
pop
xor
mov
repz
sbb
mov
push
mov
or
push
fldcw
enter
inc
out
dec
ficoml
nop
stos
inc
sti
lahf
arpl
ja
roll
pop
mov
or
push
pop
insb
sub
nop
push
out
sub
xor
mull
jle
inc
jp
pop
ss
jp
mov
sub
cmp
cmp
int3
out
mov
test
sub
addr16
shll
pop
mov
push
cwtl
or
lret
fwait
pop
ljmp
cld
and
mov
and
in
push
push
enter
jo
push
mov
jecxz
xchg
aaa
cwtl
scas
xor
mov
jg
pop
inc
inc
insb
fadd
in
repz
lock
into
clc
sub
and
mov
loopne
or
mov
nop
jl
aaa
stos
frstor
icebp
mov
mov
movsb
repnz
and
fidivrl
pop
out
dec
add
fbstp
xchg
or
xchg
cmp
xor
adc
sti
push
mov
imul
sbb
mov
andb
nop
push
mov
sbb
xchg
fstps
add
xchg
sub
push
xchg
cmpsl
and
imulb
mov
lret
xchg
sbb
bound
push
mov
push
and
push
xchg
or
pop
rcrb
cltd
in
arpl
jo
or
pop
lcall
repz
and
pop
fnstcw
dec
or
lret
push
xchg
mov
sub
ret
cltd
jbe
sbb
shll
gs
pop
lcall
stos
mov
sub
cmp
fldenv
fwait
mov
jbe
cli
xchg
pop
fwait
sbbb
jge
add
pop
pop
lods
or
stos
cmpl
jecxz
mov
arpl
xchg
pop
xor
shll
dec
lret
test
repnz
fidivs
push
inc
xor
inc
popf
stc
cwtl
pop
sbb
scas
fstl
out
repz
mov
xor
arpl
sbb
sub
inc
pop
fbstp
pop
mov
adc
pop
push
jae
ret
mov
out
mov
ficomps
push
mov
sahf
and
imul
stos
xor
dec
out
mov
add
pushf
mov
mov
test
add
mov
mov
push
and
sbb
ds
jge
stos
or
jecxz
mov
mov
repz
fldenv
or
push
lods
insl
jg
mov
jmp
scas
xlat
lock
lret
mov
movsl
mov
push
sub
xchg
sub
dec
and
adc
nop
mov
jnp
call
push
add
mov
pushf
push
xlat
sbb
stos
xchg
nop
scas
pop
out
scas
and
xchg
sub
xchg
and
fwait
mov
pop
add
mov
add
mov
ljmp
lret
mov
mov
sbb
lret
lock
dec
in
cli
xchg
lcall
stos
ljmp
jns
adc
push
lret
adc
cld
or
cmp
mov
add
xor
jp
xor
idivl
pop
outsb
or
test
outsb
shll
cmc
push
mov
sbb
xrelease
repnz
and
outsb
mov
test
jne
cmp
mov
jl
out
mov
adc
gs
loope
inc
in
jne
sbb
add
movsl
jne
cmp
jmp
outsb
xchg
popa
out
and
xor
jle
ss
add
clc
adc
fwait
mov
adcb
sarb
sub
cmc
cltd
dec
popa
shlb
in
pop
and
push
xchg
sbb
jno
push
mov
dec
fidivl
or
sar
sti
xchg
dec
icebp
xchg
dec
fldl
and
inc
push
add
push
xchg
mov
lahf
jo
jp
mov
xchg
in
add
cmp
loop
das
enter
ja
cmpsl
out
pop
cltd
inc
push
cwtl
or
sbb
test
lret
and
popf
inc
mov
xchg
jns
dec
cmc
xchg
sub
and
test
ss
inc
push
pop
mov
movsl
jno
add
xlat
shlb
inc
inc
sahf
rorb
jo
fs
rorl
std
fldl
std
lods
fwait
mull
and
cli
and
inc
add
ja
rorl
sbb
or
pop
sub
mov
or
push
jo
sub
or
mov
out
push
sbb
and
sub
cmp
imul
add
or
fadd
pop
xchg
aad
out
or
aaa
fstps
adc
or
push
lcall
dec
push
movsl
jle
in
xchg
xor
jne
push
movsl
sub
fidivrl
cwtl
cmp
jne
or
rclb
mov
fidivrl
subb
mov
and
cmc
cmp
mov
cmp
jmp
xor
push
inc
adc
into
adc
popa
xor
pop
push
stc
fisubrs
lds
sbb
movsb
je
roll
addr16
aad
ret
mov
jae
popf
xchg
in
lcall
insl
aaa
sahf
inc
add
clc
outsb
jae
ret
jl
sbb
mov
xor
orb
dec
xor
jl
ja
out
and
movsb
in
out
stc
cwtl
lds
negb
fdivs
in
addl
leave
xchg
jmp
leave
out
and
mov
idiv
jo
dec
add
or
inc
mov
test
adc
adc
or
mov
mov
inc
sbb
dec
ret
iret
cmp
dec
shlb
dec
in
dec
and
xor
pushf
gs
in
inc
jno,pt
add
ret
es
xor
push
mov
mov
stos
or
jb
jne
cli
scas
add
push
movsb
xor
ss
dec
jb
lret
push
dec
je
dec
dec
loope
mov
and
dec
icebp
std
insl
ret
push
sti
call
mov
stos
in
imul
dec
xor
jne
jmp
mov
pop
hlt
push
mov
sub
out
add
imul
cmpsb
int
or
pushf
or
mov
cwtl
dec
rolb
sub
imul
enter
aad
pop
cld
dec
pop
ja
cld
sub
jg
or
loope
sbb
mov
add
sti
call
repz
mov
xbegin
xchg
lds
push
je
inc
xor
ljmp
and
aad
fstps
movsb
dec
mov
adc
int3
cwtl
enter
ja
xchg
test
pop
jle
ss
dec
and
pusha
lods
lds
data16
fdivrs
mov
dec
movsl
js
pop
pop
ljmp
push
stos
loope
lcall
lods
fcoms
jl
and
mov
xchg
sub
popl
iret
sub
or
scas
pop
in
or
int
insb
adc
pushf
mov
stos
jae
pop
mov
popa
xchg
add
mov
mov
dec
mov
aad
push
scas
imull
fcomps
pop
icebp
arpl
sub
adc
mov
jns
cmc
pop
xor
adc
inc
cmpsb
sub
rorl
and
in
push
push
push
pusha
or
jge
pop
cmc
cmp
lahf
cmpsb
fdivrl
test
shll
dec
movsb
pop
pop
movsb
cmp
push
mov
mov
shlb
push
cmpsb
enter
mov
scas
aad
adc
adc
test
fwait
ljmp
jno
vpsubw
pop
mov
es
or
popa
mov
repnz
inc
cmp
mul
jl
imul
sub
js
in
jmp
subl
repz
outsb
fadds
sbb
popfw
pop
pusha
or
in
in
test
out
iret
sbb
mov
push
mov
cmp
sbbb
mov
xchg
push
in
adc
shll
adc
mov
ficoml
je
dec
daa
pop
shrb
inc
lret
stos
xor
mov
push
or
adc
xchg
cmp
dec
pop
jbe
pop
push
xor
or
call
dec
mov
add
inc
mov
sbbl
fiaddl
out
std
sbb
xlat
imul
jb
cli
cmpl
outsb
sub
mov
dec
and
in
mov
cmpsl
mov
bound
push
mov
dec
into
mov
pop
insl
fsubr
sahf
jns
add
loope
ficompl
aaa
adc
lret
xor
shrl
push
cmp
mov
dec
jnp
push
and
pop
out
mov
lret
sub
pusha
jae
xchg
test
jp
aam
sub
repz
xor
inc
cltd
popa
jp
inc
jp
pop
mov
lods
xor
fstpl
lods
clc
test
ficompl
inc
inc
int3
mov
popa
and
es
pop
das
stos
sti
cmpsb
inc
movsb
cmp
sub
xlat
in
lods
stos
dec
adc
inc
sub
jl
out
push
inc
mov
or
or
push
pop
loopne
fisubrl
int
data16
addr16
in
xchg
leave
xchg
test
mov
jo
jnp
hlt
ljmp
adc
xchg
and
adc
les
int3
add
push
xchg
in
push
lods
mov
imul
jge
fidivl
in
jl
fldt
inc
test
push
std
cltd
mov
sahf
push
add
call
sbb
addl
jp
mov
pop
scas
lock
iret
pop
lods
pop
xchg
inc
sub
mov
dec
loop
je
testb
movsl
inc
push
mov
jge
test
test
mov
push
mov
jmp
push
mov
ret
hlt
movsl
mov
out
jnp
xchg
jno
and
push
sti
sahf
xchg
pop
adc
push
mov
mov
jge
sub
jnp
cmp
pop
cmp
dec
cs
dec
imul
cmc
insb
sub
cwtl
fisubl
hlt
mov
push
push
mov
and
daa
sub
dec
cltd
sbb
mov
push
fldenv
dec
pusha
idivl
sbb
pop
add
shl
inc
fidivrl
push
xchg
xchg
jge
adc
in
repnz
pop
pop
lahf
jge
sarl
mov
outsl
fiaddl
and
and
lret
adc
push
call
pop
shl
rorl
loope
ds
lret
loopne
cli
mov
lret
bound
out
jbe
sti
sbb
adc
out
fistpll
aad
js
lods
pop
cmp
mov
dec
pop
mov
shll
cmpb
or
mov
sub
mov
add
inc
push
dec
pop
cmp
call
mov
dec
in
lret
add
xlat
repz
sbbl
push
mov
sbb
push
push
subl
repnz
or
mov
and
and
add
sti
cs
pop
test
sub
or
adc
jge
repz
test
jp
sahf
push
in
jmp
dec
dec
punpcklwd
dec
movsb
xor
pop
xchg
push
iret
cmpb
rolb
and
mov
mov
or
dec
jb
or
dec
sub
mov
sarl
sarb
cmp
xlat
mov
pop
hlt
test
add
movsb
shrl
outsb
mov
cmp
ret
stos
aas
pop
sti
enter
sub
int
sub
push
mov
cmc
dec
pop
push
loop
aad
fdivs
fldenv
pop
outsb
sub
bound
add
dec
loope
rcrl
xchg
push
hlt
mov
cmpsb
rcrl
mov
push
jecxz
inc
mov
mov
je
mov
sbb
cwtl
pop
fistpll
mov
movsb
xchg
xchg
int3
outsl
sar
mov
or
btc
jl
jo
cmpsb
mov
mov
inc
std
sub
xchg
xchg
outsl
mov
int3
push
pop
dec
es
push
std
adc
out
pop
test
mov
add
pop
dec
push
jnp
adc
jg
std
mov
jp
xor
std
outsl
mov
ret
aam
pop
out
sbb
fwait
cltd
in
cmp
hlt
aas
cmpsl
push
add
sbb
clc
or
mov
das
rcrb
xor
adc
cli
push
repz
outsl
xlat
jbe
push
mov
jmp
mov
sbb
daa
outsl
and
lahf
jp
sub
push
pop
cltd
in
adc
xchg
sub
repz
lret
push
icebp
js
loopne
add
jle
ret
scas
mov
es
adc
into
inc
loope
dec
inc
in
pop
sub
mov
mov
pop
lock
xchg
and
test
jbe
lea
and
and
xchg
sbb
imul
push
inc
fld
ret
int
pusha
lret
gs
outsl
aad
xorl
xchg
fs
das
dec
int
pop
cmp
nop
daa
jns
out
into
mov
nop
or
xor
jg
outsb
shlb
in
popf
fxch
cli
xor
push
mov
xchg
pop
jne
imul
imul
lahf
daa
mov
test
cmpsl
arpl
inc
mov
stos
idivb
into
or
les
mov
test
int3
jo
movsl
push
in
push
or
hlt
pop
daa
mov
lods
inc
pop
sub
sbb
in
insl
jne
adc
pop
add
sub
add
sbb
mov
dec
das
and
lcall
int
pop
dec
cmp
push
iret
loop
pop
pop
sahf
mov
and
pop
icebp
ljmp
jmp
adc
aas
gs
shrl
pop
mov
xchg
pop
outsl
lcall
stos
jns
test
dec
cmp
out
rcrl
mov
push
fs
ret
ljmp
mov
fwait
lods
sbb
jmp
daa
push
inc
lock
cmp
out
ds
mov
pop
xor
lods
add
int
sub
in
test
add
js
and
push
jl
shll
push
lds
jle
xor
jecxz
stos
inc
add
pop
add
mov
ret
enter
outsb
xchg
sahf
cmp
imul
push
cmpsl
rcrl
lds
or
in
and
les
inc
out
jns
rorb
jno
daa
mov
repz
xchg
clc
movsl
cmp
mov
jae
testb
mov
clc
and
inc
mov
cmpsb
push
xchg
cmpb
mov
aas
dec
mov
and
lods
pop
inc
xor
popf
ss
cmc
addr16
sub
cmp
adc
mov
fs
xchg
pop
or
lea
or
xchg
lock
ja
outsl
cmpl
loop
pop
aaa
or
push
fisttpll
cmp
imul
aas
xlat
ret
jno
movsl
push
loope
push
sub
ret
pop
add
cmp
outsl
aad
inc
cmc
lds
inc
stc
jno
add
pop
sbb
mov
pop
mov
rcrl
add
and
sbb
les
mov
sbb
jp
cmpsb
mov
or
inc
mov
and
fwait
cmp
test
shlb
or
xor
sub
mov
pop
movsb
es
call
aad
cmc
add
dec
dec
pop
das
fdivl
sub
add
adc
lcall
jmp
jno
mov
dec
aaa
rorb
insl
lock
stos
xor
rolb
or
pop
iret
mov
pusha
add
or
jb
mov
sahf
push
ret
xlat
mov
jecxz
or
addb
orb
mov
mov
imul
movsb
fsubrl
jg
ds
inc
mov
and
int
enter
cmp
mov
mov
loope
repnz
test
xor
out
xor
xchg
add
dec
cmp
push
std
xchg
inc
ret
xor
mov
cmc
xor
or
push
filds
or
adcb
mov
add
scas
mov
mov
dec
outsb
xchg
filds
and
fldenv
inc
int
push
je
inc
pop
imul
into
or
jg
inc
xchg
sub
sbb
mov
cmp
lods
sub
pop
sub
xor
dec
jge
add
repz
and
mov
ret
bound
lret
and
sbb
mov
push
stos
inc
jge
push
call
jb
jo
arpl
test
rolb
and
xor
inc
test
sahf
scas
push
iret
into
fiadds
ss
xor
pop
inc
in
aaa
push
cmpsl
in
inc
push
jne
sbb
pusha
arpl
mov
or
add
shll
les
jae
and
jns
jecxz
cmp
aad
bnd
test
out
inc
popa
and
addr16
es
jo
stos
mov
mov
and
icebp
scas
sbb
add
add
int
and
std
jo
in
pusha
inc
cltd
add
hlt
xchg
mov
stc
sub
mov
bound
mov
xor
or
dec
iret
movsl
and
mov
sbb
cmp
inc
aas
mov
pop
push
xchg
rcl
les
rorb
cmc
gs
pusha
mov
push
dec
es
cwtl
jae
cmc
shrl
push
jo
inc
arpl
mov
adc
scas
jge
leave
test
pop
ss
jb
dec
mov
ja
cs
add
scas
xor
aas
lcall
sbb
and
lret
stos
pop
jg
xor
out
jg
adcl
loope
push
push
outsl
fwait
jg
mov
stos
outsb
jle
inc
add
imulb
cli
push
cmp
clc
jae
out
cmp
fstl
ljmp
jb
leave
mov
dec
xor
inc
sbb
outsl
push
cld
xchg
pop
mulb
movsl
jnp
xchg
outsl
dec
push
out
notl
jb
outsl
fstl
lock
call
imul
push
jbe
cmp
stc
nop
jne
push
jge
adcl
js
in
daa
push
popl
pop
and
xor
sbb
and
sub
mov
adc
adc
fwait
lock
sub
add
adc
and
inc
push
add
xchg
fwait
or
mov
ljmp
insl
inc
test
dec
mulb
lods
jg
fdivp
sti
fwait
negb
jmp
popa
repz
sbb
xor
cmp
adcb
mov
scas
and
das
add
mov
mov
sub
subl
inc
sbb
jecxz
xor
or
leave
scas
jge
les
jb
mov
jmp
iret
rorb
jno
lods
xor
pusha
std
sbb
and
sbb
and
mov
enter
xor
jbe
cmc
shlb
std
or
xor
jb
sbb
mov
xor
and
stos
pop
test
orl
dec
cmpsl
rcll
mov
xlat
mov
xor
rcrl
gs
out
mov
popf
call
xchg
sub
lods
cwtl
data16
xor
stc
shlb
inc
jmp
or
pop
cmp
mov
out
cmp
push
out
mov
roll
dec
lahf
repz
repnz
sub
mov
mov
notl
clc
add
sub
jns
andb
dec
stos
testl
jmp
adc
pop
add
test
lea
cmp
ja
insb
cs
addr16
out
cmp
jae
mov
aad
sbb
dec
mov
sbb
push
cmp
cmp
fists
scas
and
aaa
out
inc
jo
xor
cmpsb
dec
shl
sbb
test
outsb
sub
pushf
sahf
jne
sub
pop
pop
pop
cld
or
jno
sub
mov
in
adc
push
ja
sbb
hlt
jne
std
addb
leave
pusha
loop
sub
imul
loope
cmpsb
cmp
lret
mov
popa
inc
and
les
ret
call
pop
scas
dec
test
lret
call
and
insl
insl
add
je
xchg
sub
lret
pop
adc
and
gs
push
in
js
outsl
mov
and
int
nop
ljmp
adc
xor
bound
mov
cmp
fwait
clc
sub
aas
sbb
push
xchg
mov
imul
jg
daa
mov
xor
popf
cltd
popf
xor
dec
xor
cmp
mov
push
sub
mov
cmp
and
xchg
fsubrs
xchg
adcb
out
xchg
daa
mov
jne
mov
iret
inc
inc
ds
mov
cmpsl
and
push
mov
dec
add
sbb
lods
in
fisubs
pop
scas
stc
lret
push
jl
and
mov
lds
add
mov
imul
jmp
mov
test
movsl
ljmp
xchg
lods
xchg
icebp
rolb
je
lahf
push
lret
sbb
jb
inc
int
add
in
adc
push
fwait
addr16
xor
xchg
mov
push
loope
jmp
ja
icebp
cwtl
das
and
xchg
push
sub
in
shl
nop
mov
xor
mov
mov
arpl
sub
or
cmp
das
test
or
push
cmp
push
aas
sbb
fidivl
leave
mov
sahf
imul
outsl
dec
jecxz
cmpsl
jge
and
push
adc
fidivs
sbb
xchg
mulb
push
jmp
push
mov
and
add
movsb
into
fsubrp
ret
or
jns
and
popf
jle
cld
outsb
xor
fwait
add
cwtl
stos
pop
fwait
decb
mov
jne
dec
in
daa
jne
push
dec
cmpsb
jbe
or
push
dec
movsl
ss
mov
adc
icebp
int3
arpl
ss
push
dec
out
fistl
fidivs
ljmp
insb
test
or
push
adc
mov
in
push
pop
push
stos
xor
cmpsl
dec
adc
push
add
xor
sub
and
out
push
jo
dec
and
fs
imul
ret
scas
call
out
sarl
aam
leave
loop
push
outsb
shrl
rolb
jp
lea
jmp
cmpsl
mov
fsts
jle
lods
mov
push
out
jl
inc
and
xchg
insl
hlt
cmp
shrb
jmp
sbb
mov
adc
adc
add
pop
dec
or
jne
test
lret
push
push
push
push
fs
xchg
std
mov
adc
scas
and
in
mov
mov
test
dec
daa
inc
jg
aam
fcomps
mov
outsb
inc
xchg
cld
sbbb
pop
inc
rclb
fisubs
andl
mov
adc
lock
adc
mov
repnz
pop
ds
lcall
cmp
shr
xlat
xor
pushl
push
push
mov
push
jnp
mov
lock
aad
pop
rolb
jle
in
imul
xor
sbb
testb
pop
xor
cmp
cwtl
call
or
cs
jno
jae
push
sbb
mov
lods
inc
inc
pop
push
popf
jnp
add
jb
pop
test
into
inc
data16
pop
push
cltd
sbb
popf
mov
iret
sbb
inc
test
jb
js
sahf
scas
jmp
aam
cld
lock
ljmp
push
xchg
mov
sbb
push
ss
adc
into
xor
and
cmp
adc
pop
inc
dec
aaa
stos
cmp
xlat
cmp
outsl
jb
xor
inc
cmp
sub
jl
push
addr16
inc
pop
pop
xchg
es
scas
into
mov
les
lds
stos
jl
ret
xchg
mov
push
jecxz
test
xchg
xchg
pop
push
and
outsb
pop
push
lahf
testl
xchg
pop
sbb
sti
lock
and
sbb
aas
scas
fwait
sti
mov
jp
stos
mov
test
mov
sbb
cmp
icebp
mov
push
movsb
dec
lcall
stc
cmp
pop
rclb
fldcw
gs
fsubrp
ret
pop
sbb
int3
mov
data16
test
adc
cwtl
icebp
test
add
mov
inc
push
stos
xchg
sub
add
mov
aam
push
outsb
cmp
or
dec
pop
xchg
pop
pop
jecxz
scas
cmp
sbb
test
fwait
xor
adc
inc
test
hlt
mov
mov
mov
lods
adc
insl
sbb
pop
mov
insb
inc
push
xor
int
repz
add
pop
pop
mov
imul
push
sub
div
pop
clc
sub
aaa
scas
and
push
lcall
sbb
shll
fwait
pop
out
int3
mov
je
lds
jns
sti
or
cmp
enter
pop
add
bound
mov
push
lds
cs
sbb
push
das
std
insb
jne
sahf
push
out
adcl
push
mov
loop
ret
add
ret
lock
sub
jmp
add
xlat
cli
pop
or
shrb
fadd
push
test
out
int3
loop
aam
add
shrb
stos
mov
loope
push
in
enter
fwait
data16
adc
jge
inc
adc
sbb
fmull
std
push
or
dec
int3
dec
xor
loopne
pop
rcl
test
jnp
cmp
push
stos
into
mov
xor
sahf
testb
gs
pop
jnp
or
out
bound
stos
jg
movsl
mov
sub
mov
in
jl
into
gs
adc
in
test
or
inc
aam
push
test
cmpsb
fsubr
daa
imul
sbb
sti
xor
and
lret
mov
sarb
xchg
std
add
aam
mov
pop
xor
push
dec
into
mov
mov
push
push
movsl
arpl
pop
dec
cmp
aaa
jne
inc
inc
push
out
mov
pop
mov
mov
jle
out
ret
aaa
push
jp
lret
bound
xchg
jo
shr
or
jmp
xor
push
or
outsl
jle
test
add
and
lret
arpl
imul
cmp
push
in
mov
shlb
test
xchg
push
jge
sbb
jno
je
push
call
inc
sti
mov
mov
inc
mov
pop
push
jno
clc
lret
fs
jno
jae
or
mov
dec
bound
sub
add
stos
aad
xor
add
pop
popf
je
pop
mov
cmp
inc
rcr
lret
dec
jmp
xor
dec
cld
popa
stos
and
mov
cwtl
aas
or
ret
xchg
inc
add
mov
call
jae
mov
mov
sub
leave
clc
clc
mov
ret
outsl
xor
xor
jle
pop
mov
xor
cmpsb
ds
popf
and
shll
repz
cmp
jae
ror
test
and
and
jb
dec
inc
lret
popa
clc
loop
idivl
sbb
jno
out
or
lods
cld
mov
dec
std
loop
daa
lods
inc
sub
inc
inc
mov
cltd
into
jno
xor
test
enter
mov
in
pop
fmulp
cmpsb
sbb
hlt
xor
insl
cmc
lds
repz
mov
cmp
lea
jle
fucomi
orb
xchg
jmp
stos
mov
push
and
or
outsb
mov
jae
adc
jmp
jno
test
xor
stos
mov
pop
xor
add
adc
rol
mov
inc
xrelease
stc
cmp
dec
fs
sub
shll
jne
and
xor
ds
sbb
inc
sbb
mov
insl
cs
push
sub
cltd
test
in
xor
xchg
mov
or
add
push
push
clc
pusha
adc
pop
fisubs
loopne
mov
in
add
cmp
jmp
sbbb
adc
sub
enter
sub
andb
mov
dec
sbb
mov
imul
push
or
jg
movsl
and
pop
inc
pop
xchg
cmc
mov
out
sahf
pop
cwtl
stos
in
xchg
sbb
icebp
lcall
or
cmp
movsb
icebp
mov
shlb
xchg
adc
out
add
enter
fildll
cld
push
mov
lret
xlat
push
and
scas
push
addr16
mov
dec
mov
jmp
dec
pop
lods
test
sub
adc
inc
lds
loop
testl
or
xor
fwait
push
mov
mov
push
or
aas
aas
inc
data16
jmp
mov
int
jmp
push
ss
mov
jo
push
mov
arpl
out
movsl
inc
daa
lret
test
sub
test
mov
sub
mov
lods
fcomip
stc
or
inc
orl
cmp
add
mov
cmpb
jnp
sub
ficoml
test
icebp
lret
adc
gs
dec
dec
mov
jl
push
insl
cmp
sbb
xchg
xchg
mov
xchg
insl
mov
lock
and
dec
add
push
add
dec
mov
dec
sbb
mov
or
or
cld
insl
add
cmc
or
mov
xchg
lods
stc
ret
and
push
lea
nop
std
push
lock
xchg
sbb
loopne
mov
pop
pop
vpblendw
pop
cmp
sti
das
sbb
inc
inc
fucomi
int3
pop
sbb
std
mov
test
cwtl
cmp
add
ret
mov
mov
xchg
imul
icebp
jo
in
jp
sbb
xchg
pop
mov
add
mov
test
mov
xchg
int3
cld
mov
pop
dec
dec
in
adc
negb
inc
loop
xchg
mov
imul
add
test
cltd
xor
outsl
subl
loope
outsb
out
es
lahf
shr
enter
and
stos
inc
adc
push
ds
and
outsb
cmpsl
ja
mov
out
test
sub
jbe
push
xchg
push
pop
outsl
scas
aad
add
lds
push
mov
orb
outsl
mov
dec
fcompl
xor
push
out
dec
lcall
xor
in
jmp
popf
aad
and
dec
pop
xor
xchg
push
push
test
inc
int
sbb
addr16
jo
and
pop
mov
dec
pop
cmp
sub
inc
shr
mov
mov
mov
data16
mov
and
xor
mov
cmc
subl
pop
mov
jmp
cmpsl
sahf
inc
fsubrp
movsb
loop
xlat
adc
xchg
das
dec
push
je
push
testl
daa
jle
fadds
mov
jle
mov
movsl
movsl
fcmovb
pop
adc
mov
mov
adc
dec
iret
and
dec
lahf
sub
test
xor
scas
sti
aad
sbb
jmp
mov
inc
or
cmp
testl
cmp
xchg
and
js
bound
xchg
push
inc
sub
mov
out
sbb
adc
pop
loope
popl
shr
sbb
xor
inc
sbb
mov
cmc
sbbb
jbe
aas
nop
jnp
shll
das
fmuls
or
bound
add
fildl
pop
jmp
adc
mov
sbbl
pusha
sti
sbb
push
or
mull
mov
mov
push
fcomps
loop
cmp
adc
out
dec
add
dec
push
inc
xchg
arpl
xor
mull
or
mov
jle
cwtl
test
push
lret
sub
bnd
pusha
stos
sbb
jp
ja
push
xor
dec
cmp
pop
fstpl
sub
clc
cmp
xchg
dec
movsb
test
test
push
xor
ret
cmp
scas
mull
cmpsb
jecxz
jge
leave
ret
jnp
add
jge
pushf
mov
jae
mov
pusha
arpl
inc
gs
cmpl
in
sub
nop
cmc
mov
push
jl
mov
inc
sbb
repnz
notl
arpl
cli
and
pop
pop
lret
sbb
inc
stos
push
sub
movsl
ja
xchg
test
shlb
mov
lcall
enter
sub
xchg
gs
pop
clc
inc
ss
inc
inc
push
test
mov
in
sub
out
ss
cmp
mov
mov
push
push
arpl
adc
inc
cmp
sahf
nop
outsb
lret
bound
jno
pop
add
mov
outsl
mov
cwtl
sbb
cmc
sqrtps
adc
mov
dec
pop
imul
imul
xchg
stos
out
sub
cmp
popa
imul
push
dec
dec
fs
jns
and
aad
in
fadd
jb
mov
inc
mov
and
inc
in
mov
dec
fildll
out
les
mov
es
and
push
cli
mov
fistps
loopne
jl
xor
xlat
and
cld
jl
mov
stos
or
hlt
nop
loop
sbb
lret
daa
push
insl
pusha
notl
ds
repnz
incb
test
cmpsl
pop
imul
jne
mov
sbb
clc
aad
inc
push
xor
enter
rcl
pmuludq
mov
popf
imul
je
cmp
out
aam
dec
xchg
inc
mov
mov
inc
push
jo
cmp
test
popa
fwait
and
mov
fsts
nop
mov
mov
rorl
fcoms
subl
mov
pop
xlat
insl
and
lahf
mov
pop
jecxz
es
shll
xchg
inc
inc
scas
jge
int
mov
fnstcw
lods
add
mov
and
and
adc
xor
je
rolb
arpl
ret
cmp
push
scas
dec
cld
xor
popl
sub
xor
clc
outsl
repz
stos
cli
inc
adc
bnd
adc
cmp
filds
pop
pusha
mov
sub
lock
push
add
cld
and
pushf
pop
mov
in
cwtl
cld
lahf
mov
pop
adc
jae
and
xchg
xor
cwtl
lock
push
pop
bound
out
cwtl
stos
int3
pop
aas
leave
and
insb
sarl
inc
in
xchg
out
dec
mov
repnz
out
xorl
aas
cmp
std
xchg
xchg
fsubrp
inc
sti
enter
and
xchg
in
jbe
mov
ret
jmp
pushf
jae
rcl
dec
pop
mov
pushf
mov
pop
shrl
repz
cs
out
pop
ret
lcall
sbb
cmc
pop
mov
xchg
repz
clc
sub
iret
ds
cli
xor
jmp
adc
xor
or
inc
fsts
out
mov
outsb
sub
add
or
jae
movsb
sub
xchg
aad
add
sbb
aaa
nop
cmp
cwtl
lods
add
repnz
inc
pop
pop
dec
or
push
aam
sub
pop
loop
lret
and
call
or
std
movsl
push
dec
insl
jnp
adc
dec
dec
loop
push
xchg
std
rcrb
or
jb
test
or
andb
ja
add
outsl
and
js
rcll
cmpsb
ret
xor
scas
loopne
int
jge
jb
xchg
jmp
or
mov
fidivl
jmp
inc
xor
notb
out
enter
and
rcrl
out
push
add
dec
idivb
or
and
fwait
scas
rclb
inc
dec
aam
mov
imul
pop
es
inc
push
aam
fmul
faddp
jb
repz
fwait
inc
lods
inc
or
adc
inc
jb
arpl
and
out
inc
daa
mov
loopne
inc
sbb
and
rolb
shlb
outsb
inc
cmc
xchg
or
lahf
jne
call
hlt
sub
shll
jnp
push
lods
cmp
xor
xorl
xor
test
inc
inc
jo
mov
test
add
lea
adc
cs
into
fisubs
inc
pop
lds
dec
scas
xlat
stos
cmpsl
sti
and
ja
sub
outsb
add
leave
mov
imul
iret
xchg
mov
sahf
mov
mov
sub
test
inc
hlt
out
sub
sub
fwait
jo
les
inc
and
div
sub
push
out
arpl
or
jno
add
push
fsubl
mov
mov
fnstcw
mov
jo
fmulp
adc
popf
inc
and
jle
pop
movsl
add
shr
je
push
jns
adc
add
xorl
movsb
enter
mov
stc
fistpll
inc
out
test
mov
mov
push
int3
aaa
and
push
jge
ret
jbe
fsubrp
inc
jmp
lock
mov
rcll
in
dec
fisttps
imul
push
iret
pop
stc
jl
addr16
mov
ret
out
btc
and
sti
repnz
mov
roll
leave
pusha
xchg
repz
lods
aam
out
jns
jbe
and
mov
inc
pop
fstp
jae
sub
pop
mov
push
or
hlt
daa
pushf
sbb
sbbl
xor
loope
pusha
xchg
mov
repz
mov
insb
fcmove
dec
test
sti
mov
imul
mov
rol
inc
bound
andl
sub
pusha
pop
mov
cmpsl
mov
xlat
pop
add
icebp
fsubl
mov
shr
loopne
mov
in
loope
cmp
sbb
imul
cmpl
or
jb
lahf
movsb
jns
fld
lahf
adc
jne
test
cmp
mov
mov
mov
fwait
sbb
xor
cmpsb
and
mov
bound
mov
pop
cmc
enter
or
cmpsl
jle
mov
pop
ss
addr16
fucomp
popa
mov
add
xor
js,pn
pop
aas
js
dec
xor
imul
xchg
mov
adc
jns
xor
push
pop
data16
arpl
cmp
inc
fstps
jl
or
cld
and
cs
mov
sub
cmpsl
add
jbe
lds
add
inc
push
sbb
xor
cmpb
ficoml
xor
lret
test
lods
jne,pn
cmp
shl
inc
xor
add
jo
cmc
fnstsw
jo
jo
mov
fincstp
hlt
clc
sbb
and
sbb
mov
pop
and
mov
cmpsb
decl
and
hlt
cltd
test
in
pop
ror
insb
adc
inc
adc
testl
dec
stos
fstl
adc
imul
pop
pop
mov
inc
and
push
xor
int3
lea
cld
scas
dec
out
cmp
pop
pop
aas
lods
mov
roll
outsb
mov
xchg
test
into
inc
lock
inc
push
mov
mov
push
lock
sub
test
inc
sub
jo
jnp
add
test
ja
and
ljmp
mov
test
testl
sarb
push
pop
dec
das
int3
mov
jnp
and
sarb
push
add
out
fcoms
pop
mov
jle
in
jne
sub
aas
sub
xchg
aas
testl
hlt
xorb
adc
clc
out
push
add
jmp
xor
sub
sub
inc
aaa
jo
push
mov
das
inc
test
add
adc
pop
jmp
cli
push
dec
push
test
mov
dec
mov
pop
inc
les
inc
push
xor
jae
sub
lea
mov
lock
lea
in
and
outsl
push
call
std
and
loope
add
mov
movsl
and
xchg
dec
xlat
pop
and
xchg
push
xor
fsub
test
fbstp
rcl
lahf
mov
inc
sbb
fs
loop
inc
cmp
ja
cmpsb
aaa
fisubrl
inc
orl
add
out
xchg
les
push
or
bound
imul
shlb
int3
lret
ret
fidivrl
mov
jg
in
xor
add
dec
push
int
mov
out
push
ds
xor
and
inc
adc
arpl
jns
addl
pop
inc
int
mov
and
xor
xor
inc
pop
mov
and
jmp
jnp
jp
stos
es
push
rcrb
fnstcw
cld
mov
das
lds
mov
imull
incl
xchg
stc
jge
and
mov
pushf
mov
clc
and
jp
mov
call
add
decb
outsl
pushf
sub
pop
pop
and
pushf
icebp
push
imul
daa
xchg
adc
notb
repnz
fisubrl
std
lods
stc
icebp
add
and
inc
fbstp
hlt
push
mov
gs
dec
jnp
xor
imul
mov
dec
test
jg
stc
push
imul
fwait
inc
cmp
insb
testl
mov
push
push
pop
or
js
dec
lahf
aas
xchg
add
dec
mov
arpl
adc
test
lds
loopne
inc
push
sbb
dec
or
stos
add
das
nopl
cli
sub
sub
in
or
test
push
or
pusha
jbe
mov
fsts
das
fisubrl
dec
shll
push
in
das
add
xchg
dec
push
lcall
sbb
data16
mov
andb
lret
lods
std
call
dec
repnz
aaa
test
pop
sbb
or
in
push
in
in
cmp
out
mov
push
jecxz
dec
roll
sub
push
jo
and
push
fisttpll
std
jnp
outsl
sbb
or
imul
xchg
mov
daa
xchg
jecxz
mov
mov
pushf
jg
xchg
jmp
into
inc
xchg
xchg
addb
inc
mov
loopne
jmp
cmp
cmc
mov
rcl
jle
mov
inc
pop
enter
or
dec
adc
test
pusha
add
out
adcb
inc
fwait
andb
in
jmp
add
mov
xlat
inc
lcall
sbb
into
pop
xchg
out
and
js
adc
jae
test
enter
adc
ja
out
cwtl
pushf
xor
mov
js
pop
pop
fnstenv
cmp
xor
sarl
mov
mov
les
push
sahf
test
cwtl
xor
cmp
ds
das
out
inc
rcrb
repnz
mov
push
cltd
test
jbe
adc
inc
into
arpl
scas
mov
push
insl
loopne
add
movsb
data16
jae
dec
mov
jb
rorl
jl
push
icebp
insb
inc
out
sbb
add
mov
mov
jae
movsl
daa
add
inc
jge
jnp
or
int3
aam
in
sbb
out
jo
inc
fstpl
rcrb
rcr
pop
xchg
ljmp
test
leave
xorl
xor
scas
xorl
dec
cmp
push
mov
std
out
outsb
jl
jecxz
xor
adc
cmp
jecxz
cmp
inc
mov
mov
lcall
sub
and
dec
stos
jmp
nop
add
aas
clc
mov
jbe
in
inc
xchg
hlt
sti
nop
pop
scas
gs
mov
add
push
jbe
ja
fs
xchg
mov
pop
ljmp
and
int3
cmp
push
mov
and
xchg
jb
xor
iret
arpl
jle
push
push
xchg
imul
mov
inc
cmc
push
icebp
xchg
push
sub
arpl
daa
pop
movsb
jb
jmp
add
std
dec
cmp
pop
repnz
mov
imull
push
ret
sbb
out
push
mov
cmp
mov
in
cmp
sub
mov
cmpsl
jae
add
push
in
rolb
mov
push
stc
les
aam
jno
and
jp
faddl
sbb
jge
mov
adc
ds
dec
ja
out
call
xchg
sub
aam
test
daa
sub
xor
add
mov
sahf
fsubrl
pop
das
fstpl
scas
andb
adc
inc
push
inc
sbb
insl
into
ficomps
mov
add
mov
in
mov
cmp
push
dec
lea
outsb
jb
ret
mov
arpl
adc
and
jnp
xchg
mov
popf
cmp
shl
clc
cmc
push
or
je
jecxz
mov
adcl
fadds
sub
add
je
notb
repz
lods
cmp
fnstcw
sbb
mov
xor
cmpsl
rolb
out
jmp
inc
test
pop
cmc
shll
dec
imul
jmp
movsb
frstor
movsb
lcall
mov
pop
mov
dec
dec
imul
xlat
sbb
inc
and
dec
addb
popa
pop
push
cmp
xchg
loop
sub
cli
mov
test
mov
sbb
sbb
mov
bound
pop
fldcw
push
push
mov
xchg
lret
inc
aas
imulb
outsl
dec
cmpsl
cwtl
jb
inc
cltd
mov
mov
jbe
mul
cld
pop
iret
jmp
sti
pop
or
ljmp
xchg
push
lcall
test
stc
push
pushf
ljmp
ja
sub
sbb
daa
outsl
pop
pop
bnd
jb
and
lods
cmp
daa
mov
push
sti
mov
stc
or
fisubl
out
mov
or
sbb
cmpsb
and
pop
insb
into
push
jno
jns
ror
fidivs
push
mov
loope
sbb
push
inc
call
aam
cmp
fnsave
pushf
dec
push
or
mov
in
test
int
popa
push
je
in
jo
xchg
rclb
outsl
sbb
jo
pop
jecxz
xchg
outsl
daa
adc
lock
popf
sbb
dec
out
loope
insb
jo
sahf
pusha
pop
mov
scas
cli
pop
loope
sbb
push
add
fcompl
mov
sahf
movsb
cmp
insl
fadds
or
fucomip
enter
pop
or
repnz
push
ljmp
inc
cwtl
das
int
mov
dec
cwtl
sbb
ret
mov
push
fadd
fstps
push
fcomps
mov
lret
rorb
leave
ds
sub
int3
data16
pop
xor
pop
or
xchg
daa
dec
dec
ja
pop
insb
shrl
aam
stos
add
cmpsl
pop
sahf
fcoms
and
sbbb
lcall
add
jg
sbb
lods
pop
adc
das
lret
jg
into
lds
xchg
aaa
mov
sub
push
ret
call
mov
pop
lahf
fs
lods
cmp
inc
je
ret
ficompl
js
jae
jo
out
xchg
jns
fildl
mov
mov
pushaw
decb
add
cmpl
test
mov
inc
lods
jle
ja
pop
sbb
lods
pop
scas
lods
fistpll
inc
ficompl
inc
and
pop
dec
push
out
xor
cs
push
sub
pop
stos
movsb
sub
mov
mov
testb
mov
int
mov
jno
mov
fcmove
push
or
inc
dec
ss
out
ja
out
jb
xor
int3
cmp
xchg
pushl
insl
jb
test
dec
outsb
push
inc
ficompl
lock
push
mov
int
adc
pop
ja
cmp
xchg
imul
xchg
jp
mov
pop
sub
and
pop
in
pusha
push
mov
fstps
mov
aad
adc
mov
xor
fiaddl
add
push
scas
push
or
test
clc
fldcw
es
cmpsb
and
fwait
mov
mov
jb
sub
lcall
imul
sub
mov
xchg
insl
mov
sahf
dec
sarl
mov
and
in
aaa
push
lcall
mov
cmp
cmp
push
divl
iret
xor
lret
and
in
mov
push
jo
mov
or
or
jnp
subl
or
mov
cltd
pop
nopl
lcall
xchg
sahf
sbbb
cs
xor
sbb
push
ficoms
nop
rclb
xorl
xor
fistpll
ss
fisubrs
jp
leave
popa
sahf
sbb
pop
mov
js
aaa
scas
loop
xor
fisttpll
rolb
test
fnstenv
sub
enter
in
dec
std
and
sub
aad
les
mov
frstor
repnz
inc
mov
lods
jmp
repz
out
sbb
fldenv
ret
dec
data16
add
lock
gs
mov
jl
inc
push
test
cwtl
outsl
and
cltd
negb
roll
popa
fcompl
xchg
pop
adc
cmpsl
jge
add
xor
es
push
bound
sub
test
scas
mov
mov
loop
fistpll
jmp
movsl
inc
cmpl
mov
dec
dec
into
outsl
mov
imul
pushf
mov
andb
sbb
dec
lret
insb
jne
mov
repz
imul
int3
ret
inc
fdivp
mov
jge
push
faddl
movsb
ja
adc
jmp
jns
out
add
dec
fmull
aaa
xor
adc
leave
push
in
int3
loopne
push
clc
fcmove
pop
popf
inc
mov
popa
or
fsubs
imul
jmp
imul
fnstenv
std
mov
loopne
imull
mov
mov
sti
push
xor
int
sbb
ss
jo
lret
mov
mov
aaa
ficoml
dec
adc
push
ja
or
mov
clc
dec
dec
fidivrl
rcrb
sub
imul
cmp
fsubp
stc
pop
sub
dec
in
lahf
out
enter
enter
sbb
jecxz
pop
xchg
add
pusha
and
cmpsb
xchg
inc
or
loop
jle
testb
enter
lahf
stc
test
ret
outsb
lret
addr16
leave
jo
rcll
or
out
cltd
popa
cmp
aam
and
push
or
ss
divl
lret
sub
sahf
rclb
into
jle
mov
iret
xchg
mov
sbb
clc
xchg
xlat
and
adc
mov
push
and
lods
xor
fldenv
xorl
or
fmull
das
mov
and
cs
sahf
xchg
leave
pusha
sub
mov
pop
dec
jl
cmpsb
mov
lea
sbb
out
and
movsl
cmp
dec
mov
mov
fwait
dec
filds
popa
inc
cmc
popa
cmp
sbb
fs
sub
mov
stc
push
mov
sbb
push
fidivl
inc
dec
out
add
out
mov
movsl
lock
arpl
xor
enter
pop
and
and
push
pop
inc
test
add
lahf
and
and
aad
mov
jno
gs
mov
cmovge
cmp
adc
xor
ljmp
sarb
pop
xchg
insl
dec
cmp
dec
outsb
test
mov
ja
in
cmc
mov
lods
adc
mov
dec
les
out
cmp
in
mov
push
decl
dec
mull
in
addb
mov
xchg
mov
xchg
movsl
mov
mov
ja
cmp
rcl
rcll
fists
pop
push
loopne
cmpsl
data16
cwtl
das
ja
into
movsb
jl
push
lods
jl
push
in
int
jno
mov
mov
pop
icebp
sbb
pop
cmp
jl
rcll
aam
add
jno
jae
add
fimuls
push
cmp
push
inc
sbb
mov
mov
imul
insl
push
stos
sub
sbb
js
push
cmp
xchg
sub
mov
jae
add
fcmovnbe
push
xor
xor
inc
enter
mov
pushf
cltd
stos
mov
fisttps
jns
inc
add
dec
and
inc
iret
sarl
jnp
enter
movsl
ret
lods
inc
mov
stos
movb
fsubrs
mov
js
and
dec
push
mov
ficoml
pop
xor
imul
sbb
lods
mov
int
lahf
loop
sub
push
sbb
jae
leave
xchg
jo
pop
mov
push
aad
das
jge
add
sbb
lret
sahf
jg
and
jae
xchg
lods
mov
push
xor
test
dec
pop
push
jmp
xor
in
nop
shlb
and
not
push
mov
xlat
jae
icebp
adc
int3
fsubrl
add
dec
cmp
insl
push
dec
pop
cwtl
add
subl
xor
negb
int3
pop
push
hlt
jb
mov
and
cwtl
push
ret
stos
inc
inc
push
int
xchg
add
or
sbb
and
mov
imul
sub
jg
es
dec
scas
xor
lods
mov
mov
or
jmp
shll
pop
rcrl
jle
push
gs
push
jno
popf
scas
cmc
push
enter
xlat
loope
mov
sbb
sbb
mov
ret
ljmp
loop
cmp
into
pop
xchg
sahf
jns
inc
dec
inc
add
dec
stos
loope
and
xchg
test
bound
iret
inc
mov
mov
out
in
test
inc
or
xor
ficoms
push
outsl
dec
mov
adc
maskmovq
divl
jecxz
cmp
pop
sbb
in
dec
xor
add
lods
jecxz
push
sbb
add
lret
xor
and
mov
enter
aad
lret
ret
aad
add
jle
dec
bnd
jmp
xor
sahf
mov
push
jg
xchg
mov
fistpl
xor
mov
aam
adc
inc
adc
movl
dec
push
cltd
stos
test
test
pop
xlat
loope
xchg
sbb
stos
sbb
sbb
push
lret
std
or
ljmp
shl
lea
push
js
mov
dec
rcrl
inc
mov
mov
loope
mov
in
shrb
adc
adc
mov
insb
adc
jmp
stos
inc
or
pusha
iret
pop
jge
inc
xor
enter
out
mov
std
aaa
subl
mov
lret
andl
gs
mov
mov
rdtsc
jb
cmp
push
loopne
into
test
cmpb
and
push
jns
dec
bound
shrl
lret
and
ljmp
rolb
xor
fsubp
in
adc
and
outsb
jl
and
add
xchg
mov
push
cmp
pop
pusha
pop
adc
and
int
mov
dec
stc
fwait
shl
lock
dec
mov
adc
data16
jae
xchg
imul
adc
xor
xor
dec
and
fldcw
decl
lcall
in
mov
xchg
aaa
dec
in
pushf
arpl
jg
into
mov
mov
fs
push
fsubrl
fildll
xchg
add
mov
pop
jns
mov
ffree
pop
mov
xlat
adc
adc
lcall
jmp
test
test
pop
shl
pushf
pusha
repnz
int3
mov
cwtl
mov
les
and
or
and
lods
mov
rolb
xchg
rcll
dec
mov
jge
sub
inc
shll
ret
pop
cmc
clc
call
insl
add
or
ljmp
or
jl
sub
stc
int
js
adc
and
into
addr16
add
mov
test
sbb
imul
dec
in
jg
jbe
jl
lcall
repnz
gs
cmpb
pop
cmp
add
cmc
pop
faddl
clc
jmp
imul
add
int
ljmp
lret
outsb
hlt
ret
aas
loopne
call
adc
adc
flds
shlb
enter
add
mov
mov
jmp
pop
xor
mov
mov
mov
insl
mov
fisttps
pushf
ds
xchg
sbb
sti
push
pop
in
lret
pop
push
leave
repnz
xchg
addb
sub
xor
mov
cltd
fwait
ds
add
test
fisubrs
jmp
pop
push
test
jle
cmp
sbb
add
dec
pop
scas
call
cmp
sahf
scas
test
scas
jno
sbb
jnp
out
ja
jnp
and
mov
sbb
jp
or
es
bound
xchg
push
and
addr16
in
push
pop
adc
insl
nopl
lret
sub
cltd
lret
sbb
mov
call
sub
jle
sub
or
je
es
ss
and
adc
divl
sub
sub
add
mov
cwtl
pop
lds
les
sbb
loope
lcall
arpl
push
lock
aaa
pop
cld
mov
sbb
sti
dec
xor
lret
push
aad
bound
ss
fidivrl
repz
es
pop
cmpb
out
xor
mov
cmp
hlt
in
cltd
push
mov
sub
cmpsl
adc
dec
cmp
push
lock
fst
lods
jns
xor
adc
jnp
sbb
lcall
mov
xor
cs
sub
aad
jns
shrb
pop
inc
lds
jle
int3
dec
stc
arpl
and
loop
ljmp
repnz
pop
cmpl
and
inc
push
testb
adc
repnz
mov
adc
mov
mov
addr16
stos
in
adc
jmp
sbb
dec
mov
std
imul
xchg
cltd
aas
xchg
mov
jmp
or
es
push
pop
mov
sbb
and
dec
dec
ds
or
pop
subb
jnp
outsb
imul
or
push
push
mov
jle
seto
fwait
xchg
aaa
xchg
sbb
xchg
inc
fildl
or
outsb
lahf
lock
mov
test
sub
jl
add
adc
push
xchg
sub
xor
out
arpl
mov
pop
lods
outsl
dec
mov
add
and
iret
hlt
lahf
jnp
idivl
xor
call
loop
and
cltd
xor
lock
mov
sahf
xor
inc
pop
sub
mov
xchg
dec
test
int
and
xchg
out
jb
movsl
pushf
js
dec
xchg
xor
add
cmp
mov
enter
pop
out
sbb
insb
sbb
push
jl
inc
xchg
mov
rcl
xchg
mov
and
xchg
test
jne
andb
sbb
or
stc
hlt
dec
and
lods
pop
adc
movsb
xbegin
sub
out
adc
inc
pop
icebp
xchg
cmp
inc
jmp
and
jge
mov
sbb
pop
sbb
push
test
out
out
sbb
mov
push
mov
adc
and
data16
cmpsb
sbb
adc
dec
sub
mov
xchg
mov
cmpsb
or
mov
mov
les
ret
xor
mov
sbb
pop
dec
push
sub
cmp
pop
fisttpl
lock
sbb
pop
repnz
movsl
sti
sti
mov
push
das
add
dec
jmp
popa
sub
aam
cmpsb
and
dec
push
xchg
rol
mov
ljmp
inc
jg
xchg
jo
lds
dec
add
in
pop
adc
xor
xchg
dec
pushf
repz
sbb
ss
push
stc
dec
sti
pop
xchg
lahf
push
dec
shrb
stc
in
insb
lfs
add
push
lcall
inc
sbb
cmp
mov
imul
sbb
ja
and
mov
loopne
jno
call
inc
scas
dec
cld
rcll
data16
lret
addr16
mov
scas
pop
es
cmpsl
aaa
push
mov
and
cltd
jle
sbb
js
dec
mov
push
dec
std
pop
add
sub
sub
xchg
popa
cltd
dec
out
sbb
sbb
in
dec
in
out
jnp
inc
push
fistps
xor
mov
xchg
sbb
push
sbb
out
sahf
fmuls
mov
pushf
inc
adc
test
rcr
sub
adc
fisubl
out
adc
adc
sbb
add
scas
pushf
lods
lods
xor
ja
jmp
mov
cmp
pop
xchg
fwait
xor
and
out
iret
pusha
mov
loopne
rcrb
or
add
or
lods
data16
mov
cmc
mov
push
push
test
js
cli
jmp
cs
dec
or
sbb
lret
sahf
xor
fbld
loopne
mov
or
imul
sub
outsb
adc
mov
leave
out
and
pop
dec
mov
movsb
mov
pop
cmp
or
or
ret
mov
push
jb
adcl
mov
scas
imul
out
lods
jl
sbb
inc
gs
sbb
lock
repnz
push
add
sbb
dec
adc
and
leave
push
cmp
in
adc
ds
xor
adc
inc
pop
stos
pusha
into
pop
iret
sahf
sub
rolb
pop
cli
push
xchg
sbb
fldl
sbb
mov
jle
inc
fildl
in
es
sbb
cltd
or
arpl
push
sub
xor
jmp
ss
and
inc
push
xchg
cmpl
gs
fcmovu
js
add
mov
xlat
pushf
repz
fs
int
std
shrb
cmp
pusha
add
mov
xchg
subl
mov
fsubr
or
les
pop
sub
lea
and
mov
test
mov
mov
jecxz
ds
fs
xchg
repnz
inc
addr16
ja
ret
outsb
fcomps
or
xchg
test
sbb
stc
out
lods
icebp
in
xor
jmp
xchg
dec
push
inc
xor
mov
adc
out
sub
idivl
jmp
filds
lea
test
mov
mov
jg
xor
cmp
stos
push
aas
lock
lea
movsl
addr16
adc
dec
pop
sbb
dec
in
push
add
lea
fisubs
cmp
rcrb
cld
js
sbb
mov
sarl
fisubl
sbb
imul
mov
jp
mov
ja
stc
addr16
nop
xlat
ret
and
jp
pop
sub
xlat
dec
jno,pn
enter
ret
push
stos
push
test
jbe
sub
rcl
loopne
push
popf
dec
mov
inc
xor
add
mov
cltd
or
xor
xchg
sub
pop
stos
test
stos
xor
jns
xchg
pop
loop
jns
out
jecxz
cmp
hlt
dec
lea
cmp
jnp
bound
pop
jge
jge
sbb
clc
jnp
xor
addr16
sbb
int3
mov
push
mov
mov
sbb
insl
cmpsb
add
add
aad
arpl
add
or
fnstsw
and
mov
jg
ficompl
outsl
push
sub
cmpsl
push
push
fldcw
cmp
das
fsubrl
aam
push
push
test
dec
rolb
sub
pop
lods
lret
in
inc
or
pop
fcoms
cs
rcll
cmp
xlat
out
mov
rcrb
insl
pop
fucomp
test
cld
pop
sub
popa
dec
jp
subl
xor
ljmp
loope
mov
mov
in
push
push
and
test
sbb
pop
mov
or
and
out
push
and
or
stos
ficoml
out
cmpsl
out
jo
sub
mov
add
test
cs
idiv
xchg
adc
sub
xlat
mov
adc
ss
and
pop
push
and
pop
inc
dec
pop
jg
das
mov
nop
mov
iret
and
dec
fadds
popf
fdivr
sub
push
xchg
and
into
in
sar
bnd
xor
mov
ss
repnz
outsl
xor
inc
dec
int
fcoml
mov
das
cmp
ljmp
jns
jno
arpl
call
jmp
in
icebp
mov
mov
in
in
test
adc
xchg
int3
repz
pop
insl
xor
jo
inc
rclb
scas
mov
sub
jl
cwtl
fs
arpl
stos
push
ret
in
loope
jb
xor
and
test
dec
push
stc
fidivs
ja
cmpsl
ret
sub
decl
or
adc
xchg
data16
je
lock
gs
in
clc
mulb
fwait
jnp
inc
dec
mov
mov
gs
mov
int
es
add
jns
and
mov
rcl
inc
lods
mov
filds
dec
pop
xorl
mov
mov
outsb
adc
pcmpgtb
push
mov
mov
push
xor
imul
ret
orb
fists
and
inc
push
pop
jnp
push
icebp
cltd
sbb
xor
addl
push
inc
ljmp
push
gs
fistl
jp
rep
cmp
stos
pop
mov
fucom
neg
pop
add
fnsave
cmp
xchg
dec
mov
push
cs
stc
movb
gs
shrl
mov
sub
test
in
cmpsb
clc
enter
enter
mov
and
or
loop
jne
and
push
push
add
mov
lahf
inc
adc
int
xor
mov
rcrl
test
pop
or
and
jne
jecxz
test
adcl
ficoms
lcall
mov
out
pop
mov
fidivs
jno
stos
sub
jb
out
lret
movsb
adc
mov
pop
out
inc
loope
aaa
nop
sbbl
inc
pop
clc
jo
test
dec
dec
addr16
jne
jo
inc
shl
test
mov
inc
popa
pusha
pop
icebp
push
xchg
loop
lret
mov
or
lret
mov
push
or
adc
or
xor
fmul
adc
or
imul
push
add
and
adc
lahf
push
pop
mov
cmp
clc
inc
xchg
and
movsl
jecxz
push
loope
pop
movsb
cmc
fprem
mov
and
mov
jno
leave
xchg
sub
sarb
or
shlb
push
pop
push
das
mov
test
pop
push
mov
loopne
mov
dec
int
xor
sbb
jg
mov
or
sbb
jge
in
pusha
sub
or
jae
ret
jle
sbb
stos
nop
sub
fs
mov
sub
shr
jnp
jmp
push
sbb
inc
push
xlat
les
mov
jae
and
das
jno
aad
add
pusha
mov
cli
in
adc
cmp
sub
adc
stos
and
movsl
in
dec
sub
pop
push
insb
inc
or
mov
jns
cmp
call
push
pusha
sahf
stos
pushf
pop
ss
popa
fnstenv
fidivs
into
ljmp
inc
xor
sbb
cmpsb
inc
push
flds
lret
lea
test
roll
pusha
insl
gs
or
sti
cmp
lcall
ja
addl
cltd
aad
xchg
and
sbb
push
movsb
scas
dec
push
mov
adc
stc
dec
cmp
ds
jne
push
xlat
jb
les
fs
xchg
jne
leave
jmp
ljmp
divb
fstps
cmp
xor
and
mov
call
scas
jge
andb
adc
les
jne
fiaddl
pop
mov
shrb
call
bound
repnz
sarl
mov
rol
cli
bound
rcrl
andl
sbb
mov
mov
xchg
xchg
adc
loopne
dec
jo
cmc
bound
and
jbe
cmc
into
mov
inc
call
jmp
out
xchg
add
lcall
push
pop
push
into
xchg
mov
mov
sahf
in
xor
push
mov
loopne
and
into
hlt
mov
dec
test
jge
xor
lea
pop
ljmp
and
aaa
jae
lcall
lcall
ds
mov
push
imul
ja
shrl
and
rcrl
mov
jnp
test
sbb
out
inc
addl
pop
adc
xchg
scas
sahf
cmp
and
sti
shl
jnp
dec
xchg
xlat
loopne
or
int
unpckhps
xchg
arpl
adcl
testl
mov
xor
cmp
enter
push
sarl
adc
sub
mov
pop
push
sub
push
jno
mov
sub
or
pop
sbb
cltd
hlt
mov
sub
xchg
pop
imul
mov
jge
ljmp
lds
fwait
inc
or
aam
pop
aad
fildl
movsb
popa
clc
loope
sbbl
shrb
std
adc
cmpsl
jne
inc
dec
pusha
fsubs
into
sub
jp
popf
stos
mov
add
inc
push
fsubrp
shrl
inc
cwtl
dec
aaa
mov
les
dec
lods
dec
jmp
out
push
push
xchg
and
jbe
cmp
mov
sti
std
int3
mov
jns
insl
stos
out
mov
mov
xlat
arpl
cmc
adc
xlat
sub
cmp
ds
cmp
idivl
push
in
movsl
pop
cwtl
out
inc
xchg
mov
mov
leave
jecxz
das
out
out
mov
sbb
push
icebp
mov
int
and
push
leave
sbb
push
mov
xor
and
fldt
enter
outsb
adcb
or
add
pop
adc
cmpsl
sarl
inc
repnz
test
inc
fisttpl
inc
add
and
and
icebp
inc
testb
ss
sub
rorb
in
outsb
sbb
dec
or
mov
mov
out
inc
lea
mov
mov
fimull
data16
and
push
loopne
sbb
push
cmp
loopne
fimull
mov
ljmp
jo
push
ljmp
imul
jne
mov
jbe
out
xor
fdivl
std
jnp
and
mov
stos
daa
xor
xor
adcb
fldl
dec
aad
sar
cmp
mov
test
enter
push
inc
test
imul
mov
cmpl
insl
mov
sbb
pop
lcall
lcall
and
lret
nop
inc
sbb
dec
mov
js
mov
push
mov
scas
push
add
cltd
jl
jecxz
sub
sub
dec
lret
lock
cli
ficomps
shrb
mov
pop
subb
dec
push
cmp
and
testb
dec
pusha
cmp
incb
push
daa
inc
mov
xchg
into
mov
in
cmp
inc
aad
cmp
pop
xchg
imul
cmp
jae
sub
cs
mov
rclb
or
into
vmovd
aad
xchg
scas
sub
lods
jecxz
aam
ss
negb
adc
mov
sti
clc
lahf
xor
movsl
or
movups
dec
cmpsb
xor
xlat
add
lods
pop
pushf
mov
data16
and
cmp
and
sbb
scas
pop
cmp
xlat
mov
in
jmp
lods
xchg
pop
cmp
sti
adc
mov
cmc
mov
jns
std
jo
adc
faddl
mov
dec
scas
data16
xor
inc
lods
mov
fisubrl
rep
les
aad
pop
xchg
movsl
cmc
les
popf
iret
lahf
push
mov
mov
dec
sbb
into
outsl
sub
push
jle
push
je
sub
mov
adc
cmp
in
pop
xchg
push
loopne
push
mov
int
pop
sahf
rorl
mov
out
rcl
add
outsl
sbb
je,pt
dec
cmp
outsl
push
movsb
pusha
add
push
hlt
inc
xchg
fbstp
test
scas
imul
inc
div
mov
jo
aam
rclb
add
push
ficompl
lock
fnstsw
das
and
mov
cmp
out
sub
cmp
jp
xchg
sub
fimuls
xchg
imul
mov
iret
and
dec
push
or
ss
add
sub
daa
dec
arpl
inc
fcomi
jl
inc
mov
push
cmp
inc
adc
les
cmc
dec
inc
inc
jl
in
add
scas
aaa
pop
fs
inc
xchg
mov
int3
pop
outsb
adc
jg
mulb
pop
dec
push
pop
out
xor
jo
loope
out
adc
jmp
mov
loop
dec
mov
and
dec
insb
mov
dec
xlat
inc
mov
xchg
test
in
mov
adc
cmp
or
push
mulb
jmp
stos
test
fsubl
mov
arpl
sub
pop
push
pop
addr16
jg
mov
int3
fnstcw
or
and
sub
stos
mov
jbe
jbe
call
mov
sub
cmc
or
shrl
pop
sub
xor
xchg
xchg
pop
mov
mov
rorb
scas
and
push
push
adc
pop
jg
aad
mov
test
int3
outsl
loop
mov
dec
shl
cltd
pushf
sub
mov
add
cmp
push
jbe
sbb
sub
aas
fs
sbb
and
push
jmp
lea
mov
sahf
out
cmp
call
aas
pop
vpsubd
fstpl
pushf
dec
or
inc
sti
cmp
pop
adc
mull
in
mov
jnp
loop
xchg
bound
push
aas
test
sub
movsl
jmp
mov
mov
pop
adc
mov
push
fildl
dec
cld
cld
sti
adc
out
cmp
dec
cwtl
scas
in
mov
dec
and
inc
aad
fimull
lods
stc
mov
jae
inc
mov
arpl
and
xor
and
xchg
mov
pop
pop
dec
lds
pusha
je
lahf
das
cmp
fdivrl
mov
cld
sbb
popf
or
loopne
ret
sbb
adc
and
gs
scas
leave
xor
and
xchg
add
adc
jnp
add
push
bound
cmp
sbb
ss
cmp
in
mov
pop
lret
adc
and
push
jae
and
rcll
stc
stc
mov
into
adcl
dec
sbb
jne
push
insb
orb
and
or
cld
sbb
and
add
mov
sbb
inc
test
jl
sbbb
jecxz
jle
mov
mov
into
add
insl
cmp
fists
jb
mov
cmpsl
jg
jo
cli
sbb
insb
leave
sbb
push
mov
cmc
pop
mov
insl
int
outsl
stos
sbb
pop
add
adc
and
add
sub
dec
fistl
inc
mov
lret
sbb
mov
xchg
aad
gs
sti
stos
aad
mov
jl
mov
or
stos
mov
shll
out
pop
dec
jecxz
mov
xor
adc
pop
mov
in
repz
loope
inc
adc
out
add
push
pushf
jmp
test
cmp
stos
mov
outsl
sbb
ret
into
lods
xlat
jp
test
cwtl
xor
shlb
adc
scas
xchg
sbb
mov
cmp
daa
mov
xchg
test
enter
xchg
mov
inc
xlat
and
cmc
cli
dec
loopne
inc
in
jnp
push
add
mov
xchg
rcr
xchg
xchg
cld
iret
cmpsl
sbb
xlat
cld
pop
adc
lret
sbb
sub
adc
push
lds
testl
in
jg
ds
add
sub
out
movsl
sahf
out
cmpsl
sbb
jae
dec
insb
cmp
sahf
jo
sbb
shlb
insb
xlat
scas
pop
and
sti
mov
pop
mov
int3
lds
and
stos
nop
daa
frstor
xchg
stos
scas
push
in
push
jno
push
lcall
int3
push
fidivrs
insl
jl
lahf
push
jl
fstl
loop
sbb
mov
sbb
imul
jmp
std
inc
mov
or
and
cmp
mov
mov
repz
cmpsl
xchg
add
lds
pop
dec
jecxz
cmpb
addb
or
lret
and
nop
mov
push
incb
xor
sbb
imul
dec
sub
jp
and
idivb
repnz
mov
insl
xchg
dec
push
out
insl
cmp
les
xchg
scas
jne
push
mov
or
cmc
addr16
je
xchg
inc
mov
sub
xchg
sub
imul
iret
push
fstpl
lods
xchg
add
test
and
fxch
push
push
in
fnsave
or
imul
popf
lahf
js
test
lret
stc
jo
insl
pusha
movsl
pusha
xor
pop
sub
fldcw
mov
lods
je
ficoms
test
mov
mov
cmp
and
arpl
fadds
inc
push
adc
mov
in
daa
sub
pop
aad
adc
jle
xchg
sub
fidivrs
nop
stc
xor
mov
cmp
hlt
push
jp
xchg
mov
pop
out
jnp
daa
lcall
push
mov
cli
decb
sbb
xchg
pusha
pop
xchg
fnstcw
data16
js
xor
mov
popf
in
adc
and
inc
pop
fwait
orb
daa
or
test
sbb
adc
push
ds
mov
mov
repnz
aas
adc
mov
jle
rol
inc
hlt
ljmp
ret
lock
mov
and
arpl
sbb
les
pusha
lods
leave
xlat
xchg
je
shrl
sbb
inc
mov
arpl
push
adc
mov
xor
je
mov
pop
add
out
mov
inc
lods
inc
xchg
cmpsl
mov
dec
cmpb
sbb
dec
lods
nop
mov
loopne
loope
mov
xor
add
add
jno
xchg
fstpl
jp
dec
add
js
gs
in
push
mov
dec
arpl
jo
loope
adc
ljmp
push
or
cmpsl
mov
xchg
mov
shlb
lret
out
xlat
lods
inc
fstp
mull
mov
push
xchg
imul
decb
shr
repz
xchg
adc
bound
repnz
jo
mov
and
cmp
test
jnp
insl
insl
push
cmpsl
mov
daa
push
mov
pop
lcall
inc
cmp
dec
inc
les
imul
inc
cmp
ret
sbb
loopne
icebp
sbb
push
inc
mov
movsb
clc
fstp
dec
addr16
push
xor
mov
js
inc
xchg
push
aam
faddp
sbb
stos
mov
movsl
divb
insl
mov
add
cmp
mov
aad
inc
outsl
mov
cltd
cs
fistps
repnz
dec
fistl
loope
cld
xchg
test
fisubs
mov
sub
ss
jmp
call
pop
jp
xor
inc
jmp
push
mov
in
cltd
adc
test
xchg
push
sub
fisubrs
decb
lcall
ret
ljmp
inc
add
mov
xchg
mov
ss
xlat
mov
sub
pop
std
imul
dec
andl
jne
xor
mov
iret
pop
dec
std
outsb
sub
xor
jo
fucom
call
sbb
cmpsl
xor
rcll
aaa
and
and
jl
das
in
jbe
cmp
or
sti
xchg
fldcw
shrb
lret
or
add
jmp
push
mov
mov
shrl
add
push
ljmp
insl
jnp
ss
nop
adc
lret
mov
dec
xchg
test
adc
shr
pop
push
jl
nop
loop
test
fdivl
pop
pop
dec
faddl
outsb
add
jmp
mov
sub
push
jmp
fisttps
lret
repz
dec
call
xchg
add
push
nop
mov
ja
or
dec
dec
test
lea
add
mov
xchg
in
scas
mov
ja
decb
repz
xchg
scas
push
xor
sub
xchg
pop
ror
nop
inc
dec
push
fisttps
loopne
lock
jno
mov
push
mov
pop
cmc
push
dec
mov
pusha
sub
xlat
jl
lret
xchg
jle
cltd
rcl
jge
int3
insb
push
mov
push
xor
xchg
imul
lock
out
mov
mov
push
sub
ljmp
test
mov
sar
push
xor
fstl
rol
mov
shlb
aaa
pop
jg
rorl
sub
ret
out
insl
add
push
jne
les
in
xchg
gs
jb
les
subb
or
fcomps
bound
aaa
movsl
xchg
pop
dec
inc
push
mov
aaa
fldl2t
xchg
gs
and
test
lods
loop
and
ds
repz
fdivl
rorb
xchg
cli
dec
dec
sub
jecxz
cmp
and
addr16
adc
inc
mov
adc
mov
addr16
and
mov
jge
jne
push
or
out
dec
or
xorb
outsl
jge
fnstcw
or
push
mov
cltd
addr16
sbb
mov
ret
jae
lods
sti
ljmp
ret
jb
jns
mov
js
pop
stos
movsl
jne
mov
xor
xchg
mov
cltd
push
mov
ret
cli
mov
into
push
mov
jne
cltd
neg
mov
mov
mov
mov
push
pop
and
mov
int
sub
in
mov
popf
xchg
aaa
adc
stos
push
and
cmp
filds
jl
cmp
xor
arpl
aaa
dec
cwtl
inc
or
stc
mov
nop
mov
data16
pop
or
pop
hlt
or
adc
aam
inc
pop
aaa
idivl
ret
imul
out
test
mov
int3
jle
sbb
in
insl
add
int
mov
adc
jb
lea
imul
imul
jns
outsb
stos
das
out
jp
stos
pop
out
test
int
cmp
fs
andl
aad
xor
iret
mov
out
xor
sbb
out
push
jmp
jg
outsl
adc
dec
dec
out
xchg
out
fs
scas
adc
xor
decl
arpl
mov
imul
lock
push
shl
es
jle
mov
sbb
negl
outsb
movsl
mov
push
sbb
invd
or
sub
push
dec
les
push
mov
das
or
mov
add
push
sub
es
add
scas
xchg
pop
jmp
add
leave
sahf
xor
sbbb
cwtl
in
movsl
jg
sub
sbb
adc
or
push
movsb
mov
fiaddl
lea
mov
cmp
mov
push
xor
mov
mov
shll
sti
sub
push
insb
mov
xlat
inc
and
jp
bound
xchg
std
mov
daa
mov
lahf
push
ljmp
imul
push
or
xchg
inc
or
and
and
sub
repz
outsb
mov
aaa
sbbl
push
cmp
mov
mov
or
clc
lods
iret
bound
popf
push
mov
add
xchg
cmc
das
xchg
insb
add
test
in
lods
pop
out
xor
scas
inc
xchg
xrelease
addr16
cmc
mov
clc
gs
cmp
push
mov
ffreep
xchg
popf
or
and
sarb
add
jecxz
add
or
mov
aaa
adc
xor
sbb
inc
test
pop
movsb
je
jle
adc
pop
xchg
dec
fcmovnb
mov
scas
jb
stos
xor
mov
mov
popf
jmp
ljmp
lock
fucomi
sbb
inc
lcall
test
aaa
ret
cmp
sub
sbb
mov
mov
fdivrs
int
enter
xchg
mov
fildl
ret
into
xchg
xor
push
ret
and
dec
fs
mov
sarl
pop
loopne
cmpsb
adc
movsb
clc
mov
test
xchg
inc
jecxz
xor
les
mov
shrb
orb
mov
movsb
les
xchg
jns
xchg
pop
ret
mov
mov
lods
insl
lcall
movsb
in
fucomip
dec
mov
inc
fnstcw
cmc
mov
es
pop
jbe
jae
je
mov
stc
or
mov
jp
and
rcrl
pop
lahf
mov
faddp
mov
insl
sub
jbe
push
ja
lret
loop
test
ja
fcmove
fisubs
adc
mov
movsl
or
rol
pop
pop
repnz
jmp
fnstcw
std
mov
fucom
push
xlat
dec
cmp
jp
cmp
pushf
stc
pop
cmpsl
inc
in
fs
cmp
lea
ds
adc
test
sub
loopne
cmc
dec
pop
inc
out
jle
rep
fwait
sbb
lea
cmpps
and
fidivrl
mov
and
std
cltd
push
push
out
popa
je
and
adc
adc
inc
push
jmp
jb
push
sbb
push
jp
jae
out
cmpsl
cwtl
mov
into
push
les
gs
lods
push
ds
xchg
hlt
mov
je
sub
xchg
cmp
aaa
xor
icebp
mov
popa
mov
xlat
imul
std
mov
dec
sub
call
shrb
sbb
das
lcall
fs
xchg
test
sbb
xchg
dec
lods
andb
mov
push
inc
test
iret
ds
cmpsl
jmp
aas
sbb
adc
popf
push
ss
nop
pusha
sbbl
stc
inc
mov
pop
mov
into
push
jo
repnz
popf
movq
push
and
and
cmp
push
push
outsl
aaa
in
jecxz
aad
mov
movsb
xchg
sub
xor
sub
push
inc
sahf
jne
add
pop
lret
imull
mov
adc
xchg
enter
mov
and
cli
xchg
insb
jle
imul
pop
aas
lods
loope
cmp
mov
js
adc
scas
iret
sub
mov
in
aas
ret
push
xor
or
sbb
cmp
jecxz,pt
xchg
int3
or
push
lods
ja
inc
cltd
gs
inc
mov
jle
cmp
test
inc
sbb
arpl
cmp
out
repz
int3
arpl
adc
cltd
push
cmp
cmp
rorl
add
mov
jbe
pop
test
mov
xor
andl
repnz
dec
faddl
call
shl
in
sbb
dec
xchg
sub
cmpsl
sbb
sub
mov
pop
inc
fmull
mov
lcall
popf
mov
mov
imul
fnstsw
cltd
and
cmpsb
out
lods
sub
mov
fistps
or
and
lahf
adc
call
ret
or
mov
fisubl
xchg
sub
jb
ds
mov
loope
fisttpll
dec
sub
cmc
xchg
and
add
xchg
sub
xchg
in
mov
sub
push
xor
fsubrl
lret
jle
stc
dec
repnz
movsb
or
aaa
int
ds
and
ja
dec
movsl
or
xor
add
mov
mov
mov
lcall
lock
and
into
inc
fdiv
push
inc
mov
pop
jne
mov
mov
push
ds
pop
mov
ret
adc
orl
cld
xchg
sub
lahf
into
dec
outsb
mov
lock
and
pop
cmpsb
add
adc
sbb
fcompl
cmpsb
sarb
xor
add
xlat
ss
aam
fdivrl
inc
sahf
or
dec
insl
iret
sbb
mov
cmc
jae
xchg
ja
xchg
pop
in
adc
xor
data16
repz
outsl
and
popa
mov
mov
sar
dec
mov
jno
orl
hlt
mov
adc
dec
test
sub
push
sub
mov
cli
jae
icebp
shl
jbe
std
inc
xchg
stos
jb
mov
cmc
nop
out
aad
push
push
dec
xor
cltd
adc
imul
inc
sbb
test
arpl
test
push
into
sbb
fnstenv
outsl
into
pop
aad
mov
outsl
xchg
sbb
fdiv
punpcklbw
mov
push
mov
jnp
add
shrl
filds
pavgb
fistps
sub
mov
sti
dec
push
push
das
lock
ds
xor
add
mov
mov
fmull
mov
fdivl
aad
push
xor
cmp
jo
je
repnz
xchg
cmp
clc
push
daa
mov
adc
push
insl
pop
rol
cmp
imul
mov
and
add
mov
push
scas
call
pop
lds
xchg
xor
bound
hlt
sbb
or
lahf
incl
mov
adc
nop
and
adc
test
imul
hlt
aad
ja
push
std
mov
xchg
repnz
add
aad
lret
and
xchg
stos
mov
aad
jbe
jae
mov
in
cmp
iret
xor
push
mov
xlat
sub
inc
add
ret
outsl
daa
xchg
outsl
mov
shl
loope
testb
sbb
sahf
and
lock
jp
adc
xchg
xchg
add
mov
cld
mov
jbe
fstps
jg
push
int
add
xchg
xlat
out
xchg
cmp
push
insb
inc
scas
pop
add
bnd
and
cmpsb
in
xchg
cmc
mov
sbb
xor
popa
cmp
jbe
mov
loope
fnstenv
packssdw
lcall
xor
cmp
aam
popf
cmp
cmp
aam
ret
sarb
clc
pop
jbe
pop
pop
lods
sbb
mov
fs
fs
xchg
mov
and
adc
adcl
divl
shl
mov
and
or
push
out
mov
adc
lds
jle
sub
loopne
add
xor
pop
sub
add
jbe
mov
pop
clc
stos
mov
push
ljmp
inc
push
xchg
fistps
push
movsl
sahf
clc
nop
xlat
xor
pop
xchg
movsb
mov
test
jp
or
xchg
jmp
sub
mov
cmp
inc
dec
dec
dec
mov
iret
pop
push
mov
sbb
xor
hlt
and
and
push
xor
inc
mov
jle
push
shlb
int3
pop
push
or
pop
add
cmp
out
scas
jae
out
in
pop
pushf
push
mov
jge
test
out
or
fcmovnbe
push
push
mov
data16
jb
pop
imul
adc
fldt
push
scas
inc
jmp
jbe
mov
clc
push
arpl
mov
xor
adc
sub
mov
push
mov
mov
sbbb
repnz
push
xchg
add
daa
pop
icebp
test
mov
xchg
cs
xlat
mov
push
imul
and
aam
out
out
dec
push
cwtl
jns
cmp
or
xchg
pop
inc
out
pop
in
dec
es
push
stos
lods
iret
bound
in
jmp
cwtl
lock
pusha
or
adc
mov
mov
fwait
adc
push
or
push
mov
cli
inc
and
popa
sub
jecxz
ret
pop
cmp
shrl
fldcw
ret
jle
jae
pusha
mov
push
aad
dec
or
mov
pop
call
mov
cwtl
hlt
mov
loope
sbb
mov
lret
mov
loop
push
push
and
popf
xor
aam
push
imul
mov
mov
xchg
popa
negb
ret
pop
adc
sub
stos
jmp
shlb
loopne
jmp
mov
add
inc
or
mov
inc
sub
jno
sbb
popf
lea
add
jmp
imul
xor
add
mov
pusha
mov
lret
call
repz
daa
lods
and
mov
in
push
sub
shll
flds
pusha
andb
test
xor
push
mov
call
mov
mov
ret
or
into
jb
cmp
lcall
cs
sbb
mov
pop
jbe
fisubrl
dec
mov
mov
jnp
hlt
addr16
scas
sbb
jno
push
ja
adcl
and
aad
or
sub
dec
lock
push
inc
xlat
inc
cltd
xchg
movsb
mov
jne
gs
pop
repz
repnz
xchg
and
jbe
mov
mov
jg
push
jecxz
dec
inc
dec
in
mov
outsb
out
ret
or
cli
dec
push
nop
inc
pusha
mov
repz
aaa
mov
pop
icebp
mov
imul
mov
push
sbb
xchg
push
mov
repz
into
dec
xchg
js
jecxz
jbe
cmp
jecxz
inc
jns
dec
cltd
fidivrl
aaa
push
out
mov
pop
mov
negb
shl
jl
and
movsb
repnz
fiadds
or
and
fsts
clc
rolb
rcr
mov
movsb
movsb
cwtl
adc
mov
ljmp
dec
icebp
icebp
into
jne
das
enter
subb
out
test
dec
push
aam
xchg
sub
adc
hlt
xchg
paddw
lods
or
int3
inc
ja
dec
mov
pop
fcmovbe
push
movsb
mov
adc
mov
inc
into
fwait
xor
bound
dec
int3
cld
and
push
test
dec
mov
jae
add
mov
xchg
call
outsb
inc
cmp
xchg
call
jl
int3
lret
sarl
shrb
movsl
adc
imul
and
jno
mov
inc
mov
lret
jecxz
stos
or
xor
jb
loope
jnp
inc
push
lds
dec
xor
jne
mov
push
dec
pop
push
dec
fldt
clc
out
lods
fisubs
add
cmpsb
scas
add
push
or
xchg
insl
push
lcall
jns
sti
xchg
fdivl
pop
sarb
scas
xchg
cmpsl
mov
leave
aaa
cltd
xor
xchg
mov
mov
mov
mov
jnp
movsl
adc
sub
cmp
jecxz
cmp
aad
lock
shll
sub
daa
inc
jle
je
jmp
xchg
xchg
ja
popa
cwtl
outsl
cmpsb
jno
mov
ret
sbb
arpl
fdivp
popf
xor
in
lods
inc
push
loop
dec
adc
pop
cmp
xor
sbb
test
mov
push
or
jecxz
xchg
mov
mov
push
adc
inc
imul
test
jo
cmpsb
mov
mov
daa
ss
in
inc
xchg
lret
mov
shl
movsb
mov
in
and
pop
fadds
add
cmp
xchg
pop
pop
mov
pop
and
jno
xchg
mov
shlb
imul
mov
jbe
cmc
jbe
mov
cmp
xchg
lock
sti
movsb
xchg
les
inc
cmp
push
mov
xchg
mov
iret
insl
xor
pop
lock
loope
rcrl
add
fstps
dec
xchg
std
pop
sahf
rcrl
push
fmul
aaa
push
xchg
cmp
mov
cli
stos
mov
jbe
xorb
cs
test
in
in
cmp
stc
mov
jecxz
cmp
adc
push
cmpsl
add
inc
mov
push
jmp
cmp
fldt
pushf
cld
ret
pop
adc
or
cwtl
std
loope
xchg
xchg
out
scas
aad
out
push
aam
pop
hlt
bound
pop
mov
fstpt
sbb
push
repnz
sbb
rorb
xor
out
out
setl
push
fcoms
mov
pushf
cmp
ret
lods
cmp
pop
outsb
adc
dec
xor
jae
mov
adc
das
cmp
sarb
out
xchg
scas
adc
je
push
xchg
inc
or
es
sub
into
cmpl
es
iret
loope
push
scas
pop
dec
cmp
fidivrl
cmp
sbb
inc
cwtl
int3
cmp
outsl
out
pop
jmp
pop
cmp
ds
cmp
jecxz
and
inc
pop
sbb
mov
cld
xor
mov
cltd
and
pand
aam
fidivrl
jg
push
hlt
mov
mov
or
sub
popf
inc
sub
dec
lret
rolb
vmovapd
push
outsl
jns
sub
or
mov
adc
dec
mov
jle
push
push
sahf
mov
cmpsb
cmp
inc
rol
fmuls
popf
xchg
mov
sbb
aad
div
insb
in
fs
cmp
or
lea
jg
cmp
mov
shrl
js
adc
ret
repz
mov
adc
sub
sub
pop
adc
ret
xor
mov
or
repnz
dec
rorl
pop
addr16
aam
add
addr16
leave
xor
mov
sbb
adc
hlt
xchg
js
lods
test
scas
and
cltd
mov
mov
jne
mov
mov
cmp
cmp
mov
mov
in
mov
xor
stc
es
outsl
sahf
scas
pop
push
sub
mov
sub
push
gs
inc
aaa
outsb
cld
mov
push
sub
xor
int
and
inc
fidivrs
lcall
es
out
bound
mov
xor
jl
lods
lods
out
pop
les
xchg
mov
adc
cmpsl
aaa
lret
leave
mov
jp
rcl
push
xchg
test
xor
int
push
xchg
mov
dec
sub
cmp
jnp
push
mov
clc
mov
lret
scas
shl
mov
pop
fs
arpl
inc
aad
aam
bound
pop
testl
and
push
fmuls
pushf
mov
dec
mov
mov
jne
cmpb
jge
orl
rclb
jecxz
popf
sub
sahf
or
insl
pop
pushl
into
jle
add
or
out
pop
stc
jecxz
mov
sbb
add
cmp
dec
push
mov
and
dec
icebp
xor
cmpsl
or
popf
sahf
dec
dec
cli
ficoms
push
add
push
into
jno
hlt
sbb
xor
sbbb
cmp
jge
arpl
mov
ret
sub
imul
add
adc
popf
push
lcall
int3
jb
lods
sub
mov
ficompl
aaa
mov
adc
jmp
pushf
xor
or
pop
push
inc
pushf
jg
sbb
pop
mov
int3
jg
xor
pop
fs
or
idivb
sbb
mov
mov
mov
xchg
xor
ja
xor
scas
fs
xchg
mov
loopne
mov
push
call
into
mov
fsts
cmp
and
mov
inc
push
dec
push
daa
lret
data16
insl
notb
or
inc
pop
cmp
push
or
xchg
and
scas
mov
ljmp
negb
pop
push
push
int3
icebp
out
sbb
ret
jle
mov
mov
jmp
bound
xor
aad
int
mov
rcrb
mov
popf
je
sbb
shll
adc
or
icebp
ss
in
push
js
jl
daa
sub
jo
pop
mov
xchg
jnp
push
repz
js
add
lcall
std
inc
sbb
xchg
adc
push
ror
cmp
cmp
xchg
dec
dec
hlt
mov
jge
jl
dec
out
jg
fists
rol
or
nop
xor
pop
jg
sub
cmpsl
cli
push
lds
test
add
addl
jmp
imul
mov
dec
andl
jecxz
xor
loope
jmp
inc
test
sub
fmull
mov
es
subl
adc
xor
test
in
adc
popa
or
cwtl
bound
xchg
pop
aam
mov
enter
rcrl
push
add
fs
aaa
adc
push
cli
mov
push
adc
pop
nop
sarb
shrl
jge
and
std
ret
xor
mov
aam
lock
mov
ss
add
push
stc
popf
add
jo
add
and
in
add
push
cs
fneni(8087
mov
into
xchg
and
int
ret
into
subl
mov
arpl
movsl
pusha
arpl
sbb
mov
dec
sub
sub
roll
lret
and
negb
inc
cmc
inc
xor
sahf
leave
sub
push
andb
cmp
test
pop
aas
out
cmpsl
lcall
out
push
call
pop
cmc
daa
xchg
push
ds
mul
mov
add
das
adc
dec
hlt
bound
clc
fs
xchg
repz
and
out
lods
add
jbe
jle
lods
add
jns
sub
push
or
test
scas
js
lock
sbb
lea
adc
sti
imul
dec
or
add
mov
push
jmp
cli
imul
or
cmp
pop
jg
push
xchg
sahf
mov
bound
sbb
pop
lock
jno
fldl
cmpl
xor
stos
popa
pop
xor
out
int
or
ret
les
adc
mov
pop
inc
dec
mov
sbb
imul
inc
cltd
scas
idivb
sarl
aas
ret
stc
ds
imul
xchg
int
pushl
negl
aad
jb
pusha
cmpsb
shrl
mov
fstps
add
dec
repz
or
mov
mov
or
or
fists
sub
push
xor
aaa
mov
divb
jnp
gs
cltd
test
push
or
test
shll
add
sbb
test
mov
mov
add
es
mov
pop
mov
je
push
adc
lret
xor
xchg
js
test
shrb
or
lcall
xchg
push
cli
and
std
int
loope
mov
cmp
stos
push
lock
cmp
fsubrl
pop
pop
pop
pop
ret
add
jecxz
pop
and
push
outsb
enter
ja
outsl
sbb
inc
push
adc
inc
out
cmp
dec
jbe
push
jmp
xchg
pop
outsb
mov
call
cmp
fstpt
cmpsb
les
fistps
xchg
sbb
rcl
jg
hlt
mov
lcall
inc
push
nop
dec
pop
dec
inc
iret
fcomi
and
addr16
notb
ss
xchg
ds
int3
gs
inc
pop
xor
shrb
cmp
cltd
clc
fidivl
repz
repz
rcll
in
dec
mov
mov
std
push
stos
incb
loope
pop
sub
push
fisubs
sub
mov
dec
movsb
jge
scas
scas
pop
push
rorl
push
nopl
cmc
fdivp
es
xor
mov
popa
cltd
sub
push
mov
pop
pop
push
jmp
aaa
insb
xchg
addr16
sub
jo
dec
dec
test
sub
xchg
adc
jne
dec
fs
lds
gs
mov
scas
mov
cmova
daa
xchg
sbb
mov
in
scas
adc
xchg
pop
popf
mov
sbb
jle
adc
aas
loop
das
jae
inc
imul
sub
inc
adc
sub
gs
xchg
sub
inc
push
clc
mov
xor
in
jbe
subl
mov
cltd
lock
jmp
sahf
outsl
pop
mov
test
inc
test
fnstenv
faddl
in
test
sub
cmp
loop
push
adc
pusha
aad
rcr
xor
adc
xorl
xchg
gs
stos
mov
loope
mov
std
pushf
aaa
ret
fwait
push
repz
push
mov
js
in
es
xchg
jge,pn
add
jge
repz
cmp
sahf
jle
mov
ror
dec
cltd
push
inc
cltd
stos
outsl
push
shl
jecxz
dec
or
out
lods
mov
loop
fldenv
dec
mov
push
hlt
js
push
fimull
test
out
out
sub
mov
push
jno
or
push
je
add
mov
mov
dec
popa
inc
sbb
lcall
and
lret
sysenter
add
jecxz
jno,pn
pusha
fwait
pop
lret
int3
cltd
jno
cmpsb
push
data16
xchg
jbe
les
push
pop
fbstp
int3
mov
fldcw
aad
lods
dec
in
xor
es
cmp
aas
mov
add
cmpsb
sar
mov
xlat
aad
dec
ja
shrb
mov
pop
shrb
jmp
pop
push
adc
xor
lret
and
xor
inc
data16
bound
roll
push
cli
dec
pop
mov
cmp
leave
mov
outsl
push
outsl
loop
jnp
jno
lea
mov
xchg
shrb
rep
jo
xchg
sahf
mov
push
push
por
in
add
cwtl
in
lock
jecxz
fidivrl
imul
mov
jae
pop
xchg
pop
add
jg
movsb
xor
lds
cmc
stc
adcb
test
mov
add
sub
sbb
sbb
mov
push
loope
shl
adc
shrl
es
sub
int
lods
int
fisttpll
call
leave
mov
push
sahf
outsb
sbb
jnp
xlat
lods
inc
xchg
lods
mov
out
xor
xlat
xchg
xor
call
push
lret
imul
ljmp
sub
inc
repnz
or
xchg
and
mov
jp
outsl
adc
pop
sbb
jb
stos
fst
dec
mov
dec
cmp
movsb
scas
cmp
push
sbb
cmp
add
xchg
lret
addb
icebp
or
in
stos
cmp
orb
pop
and
adc
add
ljmp
ror
sbb
movsb
push
shrl
jmp
cmp
add
popa
push
test
ret
add
dec
loop
dec
add
mov
mulb
popf
imul
fcompl
adcl
rclb
mov
xchg
je
insb
shll
mov
das
iret
pop
add
sub
test
out
shlb
xchg
sbb
dec
js
inc
and
iret
fnstenv
in
xchg
mov
mov
ret
out
adc
mov
cmp
jg,pn
sub
lea
mov
imul
aad
shlb
mov
mov
mov
mov
mov
mov
push
movl
cmp
xchg
inc
fldt
pop
jnp
jecxz
mov
add
loop
lds
int3
test
push
sahf
jo
lret
push
test
aaa
lock
nop
stos
dec
fwait
pop
jnp
or
mov
sbb
aaa
sbb
sbb
pushl
mov
movsb
test
cmp
mov
arpl
aam
gs
iret
sub
test
andl
mov
sub
dec
cltd
mov
gs
stos
pop
pop
int3
sub
aad
lret
mov
sti
jne
jae
cs
sbb
std
xor
xor
jnp
bound
mov
test
mov
js
pop
addr16
leave
cmpsw
xchg
call
push
and
test
fsubrs
adc
and
test
add
jno
mov
dec
jecxz
clc
out
outsb
inc
xchg
stc
cltd
jmp
jl
lcall
and
mov
xlat
cmp
daa
dec
push
jmp
add
jo
inc
inc
ja
leave
xchg
imul
aas
mov
loop
aad
incl
push
inc
mov
fwait
mov
enter
cmp
mov
mov
in
sbb
stc
sti
sub
push
sti
inc
in
adc
jmp
push
ja
test
into
dec
add
popf
das
push
data16
insb
cwtl
movsb
xor
inc
sti
jbe
in
push
les
jo
inc
test
xchg
ja
mov
popf
movsl
push
outsl
orl
into
adcl
xor
lret
dec
or
fwait
sbb
lahf
insl
mov
inc
rolb
into
pop
mov
inc
jp
call
cs
push
insl
je
push
jmp
xchg
insb
sub
sbb
pop
sbb
sub
out
shll
xchg
sub
cmp
sbb
mov
pusha
jmp
fldenv
xchg
cmp
lret
test
add
fsubrl
daa
daa
std
jl
xor
mov
mov
dec
sbb
sbb
mov
cmp
mov
fildl
adc
movsb
std
add
cmp
std
sbb
and
push
movsb
mov
enter
push
outsl
pop
add
jb
out
rol
add
cmpsl
in
fmull
or
xchg
jbe
aaa
mov
sub
add
ret
jp
sub
xor
push
lods
loope
mov
test
leave
orb
fpatan
cli
je
mov
scas
mov
jnp
loop
xor
rcrb
jmp
mov
cmp
xchg
shll
cmp
shrl
dec
mov
cwtl
jne
mov
adc
dec
xor
cli
test
and
rolb
jl
inc
out
test
cmpsl
jne
fnstcw
jne
push
lea
push
int3
in
imul
pop
scas
pop
mov
ss
ret
pop
xorl
xlat
lret
orb
push
xor
cmp
lea
call
fldenv
jne
jnp
lock
fdivrl
dec
mov
call
outsl
mov
js
insl
inc
sub
xor
mov
mov
stos
test
addr16
icebp
mov
fnstcw
subl
sbb
imull
xor
aad
push
jle
les
cwtl
mov
cmc
popf
mov
cmp
push
push
in
ret
lret
add
push
mov
or
cltd
jns
out
cld
and
decb
mov
sbb
or
int
mov
push
iret
data16
js
jo
sti
dec
pop
sub
pop
pushf
push
sub
repz
mov
cmp
mov
lcall
pop
xchg
insl
xchg
pop
insl
jecxz
andb
std
cltd
in
push
in
ss
movsb
out
jmp
xchg
enter
pop
scas
mov
cmp
decl
dec
cmp
jl
lret
dec
jne
jge
mov
ffree
mov
insb
sub
or
lahf
or
lea
push
aad
cmp
aam
loopne
dec
js
cmp
pop
mov
add
scas
inc
cs
into
jae
dec
scas
leave
test
shrb
xchg
jge
sbbb
addl
and
fcomip
and
decl
ljmp
cmc
mov
jno
add
push
jp
ja
sbbb
jecxz
mov
fs
adc
add
xchg
xor
and
pop
cmp
fisttpl
mov
idivl
or
and
andl
or
into
xor
popa
popf
mov
mov
lock
jno
aas
sub
cmp
xchg
fldl
pop
jl
xor
popl
lret
inc
ljmp
mov
mov
adc
or
lret
fmull
xchg
inc
ljmp
gs
adc
push
out
idiv
outsb
push
inc
and
jb
ret
dec
cmc
mov
sub
jg
cmp
lret
push
xor
mov
xchg
cmc
lock
xor
jg
or
mov
shl
testl
cmp
sbb
imul
imul
xor
in
pop
add
mov
pop
mov
in
out
ret
aam
mov
mov
pop
popf
pusha
add
negb
mov
lods
movsb
cmp
cli
pop
add
mov
dec
fistl
andb
push
insb
jg
loopne
sub
stc
ret
stos
inc
mov
in
rcl
sbb
rcll
addr16
and
mov
cltd
arpl
fs
mov
bswap
jmp
adcb
mov
mov
adc
inc
cmc
mov
popf
and
jl
mov
sub
andb
push
adc
adcb
or
fcoml
lret
xchg
leave
and
fsubrl
cmp
hlt
push
sahf
pop
hlt
sbb
mov
and
sbb
inc
scas
xchg
ds
mulb
in
push
mov
call
pop
or
das
mov
popa
loope
cmpl
xor
pop
push
in
addb
insb
movsl
mov
add
dec
test
adc
cmp
sub
imul
xchg
jge
ret
push
outsb
loope
add
jge
mov
test
or
dec
and
pop
loop
mov
and
out
pop
sahf
cld
sbb
push
pop
push
shlb
pop
mov
dec
call
test
rcr
xchg
push
insl
and
iret
and
pmuludq
pop
lods
mov
mov
jg
nop
mov
out
cmc
jno
xchg
push
data16
repz
ljmp
pushf
mov
hlt
notb
in
xor
cmp
xlat
in
mov
mov
sbb
mov
inc
out
or
mov
into
lock
and
call
sbb
lock
sahf
pop
add
movsl
dec
push
jae
stc
jns
cmp
or
dec
push
sti
jp
sub
gs
loopne
in
push
repnz
lock
mov
pop
loope
das
mov
movb
mov
scas
into
and
loop
insl
popa
mov
aad
pop
cmp
cltd
pushf
and
dec
inc
lds
stos
dec
cmpsl
push
dec
idivb
insb
or
push
fcmovne
sti
out
mov
sbb
pop
stos
dec
lods
cmp
shl
repnz
pushf
sub
sarb
inc
sub
ds
mov
mov
repz
push
ss
jbe
push
jno
push
mov
cwtl
out
lods
pop
cli
mov
incb
stc
sub
stc
mov
movsl
pop
push
sarb
push
popa
lret
or
orl
mulb
push
popa
lods
mov
dec
rol
jge
rcrb
into
mov
shrb
lahf
int
fmul
sbb
es
sysexit
ret
aam
jecxz
mov
aam
ret
or
mov
loop
xchg
adc
test
call
mov
les
push
jne
jae
out
mov
sbb
or
jle
adc
inc
xor
cmp
xchg
jle
lcall
add
xchg
xchg
cmp
loop
fstpl
add
cmc
mov
ret
dec
adc
push
mov
repnz
sbb
inc
repz
mov
call
sbb
pushf
sbb
sub
fsubs
clc
xlat
xchg
sub
lds
push
sbb
je
cmc
mov
push
out
fucomi
push
mov
loopne
js
mov
adc
mov
and
cmp
mov
ja
and
das
dec
ret
jnp
dec
clc
adc
pop
loop
adcb
jnp
adc
enter
cmpsl
addr16
pop
add
dec
pop
jl
gs
jns
mov
mov
xchg
xchg
out
dec
lods
push
pushf
mov
bound
lea
fwait
inc
scas
push
cmp
stc
insl
test
outsl
lret
scas
add
jmp
rorb
icebp
mov
pop
sarb
aad
xor
dec
rclb
lds
jl
iret
ret
adcb
call
dec
cmp
and
push
stos
leave
scas
fsubr
fs
jb
fimuls
mov
xchg
jg
outsl
jnp
pop
sbb
pop
mov
in
sahf
jmp
lcall
fnsave
xchg
pusha
mov
add
push
outsl
stos
xchg
mov
leave
inc
mov
pop
sbbb
dec
mov
adc
xor
cmc
dec
jnp
addr16
jo
mov
dec
adc
ljmp
xchg
and
push
lret
inc
aaa
pushl
jmp
dec
sub
iret
or
clc
bound
pop
inc
sub
into
aas
inc
fs
movsl
dec
sbb
mov
popa
jns
lock
aas
inc
dec
xchg
inc
sub
mov
repnz
push
sbb
fnstsw
ss
mov
xchg
dec
fisttps
les
cmpsl
and
sub
jae
push
hlt
cmp
and
push
add
sub
addb
dec
add
movsb
jne
inc
xor
dec
xor
scas
jmp
shll
outsb
jne
arpl
aas
outsl
pop
mov
pop
mov
mov
popl
pusha
sub
sub
mov
or
cmc
test
popa
jnp
cmpsb
inc
inc
mov
adc
loop
mov
push
cmpsl
push
daa
adc
cmpsb
push
aad
xchg
repnz
je
adc
mov
out
aaa
fcomps
movsl
cwtl
lret
idivl
mov
mov
push
pop
mov
xor
aad
dec
nop
lock
lods
add
cmp
dec
sub
inc
iret
push
lock
and
cwtl
adc
out
xor
ret
jmp
dec
test
shrl
pushf
cmpsb
popf
int
add
test
mov
cltd
filds
repz
cmp
pop
shrb
mov
dec
sahf
xor
inc
fucomip
dec
adc
sbb
rcrl
cmp
imul
out
test
xchg
xorl
imul
sub
inc
jg
pop
dec
lret
xchg
mov
fidivl
rorl
push
cmp
add
shlb
dec
pandn
add
xchg
ja
dec
pop
ret
pop
cmp
dec
jmp
dec
pop
xorb
cmp
push
insb
adc
and
clc
push
inc
in
inc
sbb
mov
je
add
test
xchg
adc
jp
pop
mov
add
fdivrs
mov
push
jae
dec
or
and
or
stos
cmpsb
cmp
das
scas
jge
sti
cltd
mov
cmpsb
cmp
stc
cmp
inc
sbb
mov
lret
push
or
adc
cltd
xchg
mov
sbb
shl
rorb
xchg
loop
icebp
sbb
nop
fwait
ret
dec
push
lods
push
add
rcr
mov
sbb
xchg
das
dec
rcrl
loop
lahf
std
fimull
push
aad
cli
xchg
adc
xchg
sbbl
xor
rol
gs
and
push
jmp
xlat
pop
pop
cmp
sti
lods
es
pop
pop
mov
or
dec
sub
cld
sti
outsb
inc
or
push
dec
mov
les
test
testb
hlt
sub
movb
sub
sub
xor
sbb
dec
loopne
mov
sub
mov
mov
ljmp
add
int
adc
sub
push
out
inc
lods
xchg
and
lret
sub
insb
movsb
pusha
test
loop
cmp
jne
int
add
leave
add
aas
jmp
push
push
fyl2x
xchg
mov
mov
mov
inc
pop
mull
lea
cmc
xchg
cmp
outsb
add
add
mov
and
aad
and
ss
divb
jecxz
insb
movsl
ret
decl
inc
jb
inc
inc
pop
pushf
mov
push
lods
lret
and
enter
sub
mov
mov
or
dec
out
sti
hlt
pop
or
lea
imul
jb
xor
mov
outsl
adc
aad
jmp
mov
sbb
mov
ret
call
int3
add
push
and
sbb
or
sbb
xchg
cmpsb
jne
into
cmp
xor
dec
in
sbb
push
jmp
push
push
or
xor
popa
mov
push
mov
dec
mov
jl
fmuls
mov
out
stos
sub
jmp
loopne
xor
subl
jne
test
sub
push
xchg
aad
mov
filds
test
cmc
mov
jbe
into
cmpl
scas
mov
push
fdivrs
mov
sub
pop
mov
sti
hlt
fisubs
inc
cmp
data16
pusha
cmp
in
mov
cmp
sub
rolb
fildll
mov
adc
push
mov
rolb
imul
pop
push
or
les
ljmp
mov
push
push
push
sbb
dec
popf
jno
mov
call
cld
pop
mov
cmp
cmp
pusha
pop
xchg
lahf
aam
fsubs
or
inc
int3
mov
leave
adc
xchg
leave
xchg
mov
imul
cwtl
push
jg
sti
mov
push
jbe
mov
insl
jmp
xchg
add
nop
lds
stos
jmp
addb
and
jmp
das
stc
jnp
in
jns
mov
or
repz
xchg
cmpsl
sbb
sbb
loope
jp
in
std
adc
orl
imul
addr16
leave
enterw
xchg
mov
lret
sub
mov
mov
shll
jp
sub
ret
mov
sbb
add
mov
fsubrl
shll
mov
stos
jle
cli
adc
adc
dec
push
mov
fnsave
cmpsl
aas
in
les
inc
sarl
imul
cmp
into
subl
into
xor
repnz
outsl
push
and
push
stos
mov
js
jmp
dec
adc
xor
loop
loope
negb
filds
call
cmp
leave
mov
out
xchg
xchg
jecxz
adcl
sbb
jle
jle
mov
pop
mov
push
mov
mov
adc
xchg
hlt
mov
mov
mov
pop
fnsave
lods
inc
jmp
data16
mov
xor
dec
sub
xlat
out
cmp
push
mov
adc
mov
loope
popa
or
sbb
je
ret
lock
outsb
bound
pop
loop
testb
xor
cmp
andb
mov
cwtl
and
out
sub
sbb
pop
movsb
lea
lods
lods
stos
xchg
add
mov
mov
pop
cmp
sar
dec
and
xor
push
mov
adc
in
or
sbb
int
push
js
pop
jmp
and
mov
inc
aas
mov
dec
xchg
dec
imul
xchg
mov
lret
filds
repz
cmp
fcmovb
les
call
pop
out
test
daa
test
lret
int
add
pop
jmp
jno
scas
pusha
jp
and
test
push
out
push
dec
imul
mov
les
add
mov
dec
adc
lcall
outsl
aam
add
movsl
pop
in
test
cmp
and
push
lods
popa
and
fistps
in
sbb
mov
adc
inc
aas
je
push
mov
sub
call
test
pop
lret
mov
ret
rcll
add
fsts
mov
icebp
xchg
mov
adc
pop
sbb
pusha
and
mov
adc
test
add
inc
das
jo
testl
pop
test
inc
cwtl
jmp
cmpsl
out
aaa
pop
movsl
popf
dec
aad
mov
out
fstpl
movsb
vbroadcastss
sub
out
adc
nop
lea
dec
jl
lahf
fwait
mov
inc
mov
and
andb
mov
mov
push
cwtl
dec
pop
mov
mov
jbe
dec
pop
mov
push
push
hlt
dec
lock
fnstenv
mov
push
smsw
inc
inc
popf
or
data16
mov
inc
loope
sbb
jl
in
icebp
insl
add
inc
into
stos
and
nop
cmp
stc
sbb
mov
push
dec
mov
jbe
xor
adc
inc
int
xor
or
jb
insb
jecxz
rorb
push
sbb
outsl
fsubrl
outsb
add
lcall
cmp
lret
lock
scas
ret
mov
mov
rol
adc
mov
imul
cmp
ret
pop
mov
push
ret
dec
iret
sar
sub
lea
stos
cmp
add
cmpsl
arpl
dec
sbb
lcall
inc
ljmp
ret
adc
add
mov
inc
divl
xlat
outsb
test
loopne
popa
mov
repz
mov
or
dec
jp
cmp
mov
fdivl
dec
mov
pop
clc
in
sarb
loop
add
call
adc
outsl
insl
test
rcll
cmp
xchg
and
pop
push
pop
scas
pop
sub
pop
or
pusha
pusha
insb
repnz
cwtl
xchg
scas
das
orb
push
push
ds
or
negl
xor
xchg
pop
ss
clc
insb
in
mov
or
pushf
jno
notb
inc
dec
pushf
stos
js
sub
pop
mov
add
push
xchg
scas
test
scas
pop
icebp
push
push
mov
dec
movsl
jae
ret
dec
hlt
inc
sti
mov
mov
push
xchg
call
push
icebp
push
mov
out
popa
out
pusha
push
lahf
test
test
mov
push
inc
inc
xchg
call
call
inc
jae
stos
push
pop
inc
fstpt
xor
cmp
pop
insl
and
test
inc
mov
jmp
test
cmc
xchg
mov
push
dec
jne,pn
pop
xchg
add
and
and
jecxz
push
jmp
xor
mov
in
pop
xor
out
cwtl
mov
fs
inc
fcmovne
out
adc
mov
fisubl
or
in
xor
jge
in
int
push
lods
and
or
cmp
sub
rcrl
add
sub
stc
mov
adc
lahf
mov
mov
es
xor
dec
add
add
out
dec
cpuid
insl
dec
enter
test
cmp
test
fidivl
xor
cwtl
pop
sub
xchg
xchg
test
fldenv
test
jmp
mov
push
int
mov
lret
mov
fidivrl
test
mov
push
jns
cmpsb
mov
mov
pop
outsl
push
insl
mov
lahf
aas
bound
clc
mov
mov
xor
push
xlat
and
mov
scas
bound
xor
add
les
mov
xlat
xchg
ret
mov
cli
mov
fiadds
mov
into
dec
shl
ja
mov
fwait
mov
lds
or
and
iret
arpl
repnz
push
cmc
inc
rcll
lahf
popf
jne
cmp
jno
cmp
lods
mov
fbstp
inc
add
or
xchg
int
push
cmp
loop
push
sbb
divb
cmp
mov
xchg
sub
mov
loop
ret
xchg
mov
cmp
xchg
subl
jnp
inc
sub
adc
loope
jns
push
cld
std
mov
xchg
loop
ret
fs
sahf
lods
pushl
inc
stc
adc
lret
shrl
or
repz
lret
lea
xchg
mov
pusha
mov
aam
test
sub
adc
push
iret
pminub
lcall
cmpsb
sub
insl
pop
jb
data16
lods
rcrb
inc
add
cmp
or
sbb
sbb
xor
stos
xchg
fs
xlat
xor
dec
cmpb
xor
jae
pusha
loope
dec
arpl
out
pushf
dec
adc
cmp
fsubs
test
jno
pop
repnz
cmp
nop
outsb
pop
mov
mov
aas
cmpsb
mov
sbb
xlat
fsubrl
test
push
movsb
jno
cmpsb
insb
cld
pop
mov
leave
out
hlt
push
and
imull
lock
cmpsb
or
mov
mov
out
test
push
inc
in
pop
sub
outsl
je
push
inc
jno
mov
xor
ficoml
sti
sub
mov
dec
jae
cld
inc
cmp
aaa
ljmp
pushf
insb
cmp
repnz
adc
cmp
add
sbb
mov
mov
push
in
ret
mov
fstl
cmp
stos
jns
out
sub
lcall
xor
pop
mov
jmp
mov
pop
adc
dec
mov
dec
nop
shrl
and
insb
mov
push
ret
sbb
mov
sub
mov
jmp
cmp
gs
lcall
or
mov
notb
das
and
call
dec
xor
movsb
adc
pushf
or
sahf
xor
arpl
inc
cmp
xchg
imul
or
scas
mov
movsl
inc
mov
test
fsubrp
jno
popa
jmp
fidivs
data16
add
mov
jmp
xor
stos
mov
xlat
mov
out
push
test
ret
enter
xchg
xchg
jo
repnz
push
sbbb
ljmp
mov
cli
or
jge
rorb
and
inc
jbe
jns
xchg
add
jmp
outsb
jne
or
pop
lds
pusha
jns
mov
call
aaa
or
popa
sbb
add
cmp
shl
cmp
ret
sub
sbb
pop
jb
scas
call
in
outsl
push
lahf
jae
mov
xor
shrl
jbe
lock
jo
push
jl,pn
inc
sbbb
lods
jl
jne
mov
jne
out
jns
pusha
mov
arpl
data16
sar
clc
cs
dec
lods
into
push
cs
mov
adc
call
xchg
rorb
fwait
outsb
mov
jmp
fdivr
xchg
into
mov
mov
push
mov
jns
xor
andl
clc
push
mov
hlt
mov
es
lea
shrl
js
xchg
loopne
rcrl
sbb
xchg
sub
into
pop
and
push
das
push
inc
imul
jge
push
mov
movsb
out
mov
rolb
add
outsl
xchg
or
lods
and
testb
lea
ffreep
pop
scas
cld
int
data16
out
fwait
es
mov
lret
xchg
addr16
in
aad
inc
sahf
test
dec
lret
cmpsb
mov
and
into
xchg
mov
cmpsb
mov
jne
lret
popf
push
fs
and
sbb
imul
adc
xor
adc
xor
sahf
loop
cmpsl
fs
sbb
or
loopne
xchg
das
hlt
cmp
shl
xor
es
outsl
cmp
call
xchg
js
push
sub
pushf
xchg
dec
lea
dec
stos
inc
adc
leave
xor
xchg
sub
stc
inc
push
fcmovnbe
mov
dec
jns
mov
xchg
cmp
inc
push
inc
sub
mov
jmp
sub
mov
fdivs
add
adcl
nop
mov
les
fcoms
sub
js
into
popf
bound
mov
sbb
mov
xor
or
fstl
or
movsb
and
das
xchg
sub
jb
mov
xchg
fisttps
cmpsb
sahf
jne
jecxz
shrb
pop
sub
xchg
sub
cwtl
aad
std
or
ret
iret
into
mov
adc
ss
out
and
mov
push
repz
push
outsl
or
push
nop
sub
mov
pop
imul
adc
std
divb
enter
mov
sub
jle
jp
and
dec
and
inc
pop
pusha
pushl
add
and
fstpl
mov
and
outsl
icebp
cmp
filds
mov
shll
xchg
dec
out
std
rorl
insl
jge
dec
dec
jecxz
pusha
xorb
cmp
popf
xchg
cmp
cs
mov
mov
insl
mov
push
xorl
js
xor
jmp
es
mov
sub
aad
ljmp
push
ficoms
pop
ss
push
cmpsb
and
int
repz
popf
cli
or
arpl
jmp
popa
ljmp
dec
pusha
mov
popa
jo
lods
popw
ja
movsb
adc
cli
mov
sub
test
pop
adc
xchg
push
pop
movsl
xchg
xlat
jns
cmpl
out
lret
loop
lea
mov
inc
jp
lcall
cmpl
mov
clc
xchg
dec
loopne
aad
push
or
insb
cmp
or
cmc
mov
push
mov
mov
mov
sbb
add
push
push
lea
jb
xor
and
addb
js
mov
test
push
gs
mov
dec
movsb
inc
pop
push
insb
scas
loopne
cwtl
bound
fbld
mov
mov
fstpl
jns
pop
mov
adc
push
movsl
popa
jge
daa
dec
loope
jl
icebp
lcall
jns
add
and
shll
js
push
popf
repnz
mov
push
in
imulb
out
cmpsl
test
dec
fbld
movl
push
cltd
xchg
add
loopne
sub
bound
inc
int
lock
fiaddl
fadds
je
xlat
jl
shr
lret
push
dec
jecxz
add
dec
imul
les
mov
dec
loop
mov
daa
pushf
out
ljmp
cld
cmp
out
test
arpl
xchg
push
push
mov
lea
lds
add
stc
jo,pt
jno
sbb
cmpsb
jl
aas
dec
addb
pop
pop
sbb
push
push
mov
loop
scas
xor
fwait
xchg
ss
add
orb
fsubrl
jg
test
pop
scas
xor
lea
lods
outsb
sub
cmp
nop
js
pop
loope
xchg
add
inc
popa
sub
test
leave
rorl
arpl
mov
outsl
rorb
add
dec
pop
loop
pop
cmpsl
clc
loop
lock
popf
fisttps
inc
xlat
popa
mov
jecxz
gs
enter
dec
pop
int3
push
mov
cmp
out
lea
mov
and
pushf
push
lods
outsb
ret
jbe
sahf
lods
jae
ret
ret
jmp
dec
lock
movsb
int3
push
movsl
ljmp
stc
add
sub
imul
into
mov
sub
mov
lea
cmp
sub
pop
cmp
int
out
mov
mov
pop
dec
dec
pop
dec
dec
fdiv
fucomip
push
iret
cmp
jmp
fwait
daa
mov
rcrb
outsl
clc
or
lahf
sbbl
add
fldenv
and
inc
loope
fidivl
sub
mov
jle
dec
mov
lds
outsb
jecxz
insl
out
mov
in
xor
mov
xor
sub
data16
adc
call
add
pop
ret
imulb
jns
push
mov
sar
lret
push
dec
mov
mov
pusha
ss
leave
mov
adc
mov
shrb
cmc
pop
fisttps
add
inc
fcoms
lret
mov
mov
inc
aam
dec
push
push
xor
sarb
mov
mov
cmp
fdiv
popa
cmp
fisubrl
fists
push
dec
int
insb
add
push
inc
js
addl
jge
fbstp
xor
adc
and
popa
insb
mov
mov
test
ja
and
inc
stos
loope
bound
jp
push
push
push
movsl
clc
stc
push
sbb
mov
dec
andl
xchg
xchg
data16
push
jb
mov
jbe
mov
rcl
fadd
jae
in
pop
sbb
jp
add
lock
popf
imul
movsb
rcrb
ss
rorl
cmp
std
push
mov
mov
add
scas
in
push
sbb
out
mov
mov
popa
clc
sub
insl
js
call
decb
daa
mov
popf
test
dec
cmp
mov
dec
xor
mov
sbb
mov
pop
iret
xchg
clc
mov
int3
inc
push
add
inc
pop
inc
add
push
and
pop
addr16
push
lods
mov
je
dec
jae
or
dec
pop
cmc
ss
pop
push
ds
cltd
pop
aas
notl
mov
sbb
leave
push
ret
testl
hlt
addl
adc
movl
and
ret
out
jbe
jmp
in
cmp
xchg
out
cmp
jb
cmpsb
mov
sub
shlb
cmpsl
mov
mov
test
mov
mov
adc
out
sbb
pop
je
repz
push
sub
adc
mov
std
rorl
rcll
arpl
mov
aad
cmpsl
push
lods
lds
clc
jno
inc
add
cmp
xchg
sbb
mov
sub
ror
insl
ds
xor
mov
and
xor
or
dec
out
jno
ja
sbb
or
mov
push
sbb
or
adc
stos
jbe
ja
pop
out
inc
cmp
aaa
mov
insl
cmp
das
mov
addr16
inc
push
and
andb
addr16
ret
mov
cli
or
inc
cmpsb
pushf
sub
cmc
lahf
xor
sbb
sbb
xchg
aas
dec
jp
dec
aad
adc
jae
xlat
repz
dec
mov
mov
xorb
sub
xchg
in
fs
sahf
adc
inc
daa
mov
jmp
ss
lret
mov
sbb
add
xor
mov
mov
clc
and
sbb
loop
push
xlat
mov
hlt
jg
je
mov
divl
cwtl
addl
sti
out
stos
jbe
mov
jo
loope
les
mov
push
enter
jg
movsb
mov
inc
aam
lea
stc
pusha
xchg
scas
lahf
inc
pop
cmp
mov
inc
mov
mov
sbb
test
ror
sbb
in
bound
cmc
push
test
xchg
jmp
sub
cld
xchg
ja
repnz
out
xchg
mov
pop
scas
xchg
xchg
shl
out
add
mov
pop
or
mov
movsb
mov
icebp
sub
push
stos
lea
dec
dec
ffreep
sti
imul
jecxz
fstps
adc
and
adc
mov
xchg
add
add
inc
push
scas
fsubrp
das
je
pop
sub
inc
push
ret
ret
jo
sbb
jb
sarl
stc
mov
data16
in
ret
rolb
cmp
cmp
pop
sbb
movsb
popa
scas
fbstp
subb
mov
mov
subb
jle
or
cmp
mov
xlat
add
inc
fstl
mov
jl
mov
add
loop
mov
stc
jecxz
mov
stc
pop
mov
mov
fsubl
xor
jg
arpl
rorb
aad
fstps
mov
sub
xor
xor
decl
lea
rcll
enter
sub
cmp
scas
insb
nop
mov
push
jne
cli
jno
cltd
arpl
dec
push
mov
mov
call
push
jle
daa
daa
push
movsb
cmp
sub
push
lds
sbb
mov
out
mov
std
push
or
int3
aad
mov
push
test
std
adc
mov
and
jne
sub
dec
mov
clc
cmpsl
push
xchg
or
imul
cmp
jg
xchg
fdivrs
insb
inc
sub
les
aad
dec
hlt
test
jne
cmp
jmp
sti
or
subl
mov
pop
lds
mov
mov
imul
stos
cwtl
std
xchg
fidivs
dec
jnp
sbb
xchg
int
pop
jmp
mov
or
pop
push
sub
xor
and
push
les
jp
push
jecxz
test
sub
push
pop
pop
and
popa
aad
cmp
loopne
add
cmc
mov
jb
lods
out
jns
cmp
and
decl
movsl
xor
loopne
push
push
xor
mov
push
popf
stc
loopne
jb
test
sub
insb
mov
dec
mov
dec
arpl
outsl
test
sub
lea
fbld
fsubl
xchg
pusha
fldenv
imul
xchg
ss
jle
or
outsb
xchg
sub
jl
daa
psllq
mov
out
dec
dec
xchg
ret
xlat
test
in
clc
cs
push
out
subb
mov
mov
mov
inc
pop
stos
leave
sub
cmpsl
push
inc
dec
pop
push
sub
or
das
shll
sbb
mov
ja
inc
cs
stc
nop
jbe
mov
dec
lods
cld
mov
gs
sub
lods
xchg
jae
push
inc
sbb
outsb
inc
and
je
ja
inc
sub
ljmp
push
int
in
pop
sbb
les
lcall
stos
sbb
cs
stos
jbe
imul
or
cs
fldl
rorb
cmp
lret
sbb
push
in
jb
imul
push
imul
xchg
clc
or
and
jl
push
push
punpckhbw
adc
xchg
jns
fpatan
int3
lcall
or
scas
decl
and
push
jo
dec
movsb
pop
xchg
add
adc
faddl
push
incl
outsl
inc
and
das
push
ret
jmp
inc
test
jbe
push
lods
sbb
data16
push
xor
or
nop
adc
dec
daa
dec
cmpsb
add
pop
mov
push
adc
dec
aaa
mov
add
cmp
out
sub
test
or
xor
leave
pusha
test
test
cli
add
hlt
ljmp
shrl
mov
in
sbb
xor
stos
or
aas
push
out
mov
xchg
jge
in
and
push
icebp
mov
xor
fldenv
and
incb
inc
pop
ret
sub
sti
fwait
inc
adc
cmp
mov
aam
loope
enter
inc
push
mov
mov
sbb
test
and
mov
mov
pop
rol
cmpl
repnz
loopne
cmpsl
rol
addr16
cmc
mov
hlt
fsubr
adc
testb
jmp
fstps
mov
lcall
jge
movsb
cmp
sahf
and
dec
or
std
mov
adcb
pop
stc
imul
cmp
rcll
adc
pop
xor
push
push
sbb
ljmp
fistl
lods
imul
push
push
cmc
sbb
popf
cmpsl
mov
push
dec
jmp
mov
pop
and
test
mov
fcoms
push
fidivs
cld
cwtl
xchg
mov
stc
insl
mov
xchg
cmp
into
fwait
mov
enter
sti
pop
mov
pushl
inc
dec
push
jnp
dec
push
orl
mov
cmpsl
ds
ja
sub
rcrl
dec
mov
lcall
mov
pop
and
mov
jbe
push
out
xchg
mov
rclb
mov
das
jmp
mov
cmp
sbb
and
cmp
pop
lods
arpl
jmp
lahf
and
out
mov
fidivs
push
push
jnp
xchg
and
sahf
out
mov
std
xor
push
out
leave
minps
outsl
repz
orb
push
mov
xchg
or
pop
jne
cmp
and
mov
ret
pop
push
imul
loop
sub
add
out
movsb
adc
adc
cmp
fucomp
cmp
testl
cmp
loop
adc
nop
clc
mov
xlat
aad
int3
ret
shll
jecxz
fisubrs
push
push
out
in
jbe
imul
pop
fsubp
mov
movsb
repnz
addl
out
insl
xchg
fwait
push
in
test
xchg
add
dec
pushf
pushf
insl
call
cmp
cmpsb
mov
outsb
sub
and
movd
lcall
enter
test
mov
je
cmp
out
rcr
int3
divl
cmp
cmc
pop
push
shl
mov
jl
inc
int
pop
and
and
dec
inc
pop
jbe
jle
pop
xchg
test
jbe
test
fstps
xor
lahf
mov
nop
xlat
and
inc
pop
cmp
mov
jmp
or
das
adc
cmp
mov
mov
fwait
idivb
xchg
ret
xchg
dec
sbb
pop
aaa
in
lahf
sub
mov
sbb
cmpsl
mov
aam
add
out
ret
xor
xor
pop
imul
xchg
jnp
pop
cltd
fsubrs
insb
add
sbb
test
inc
xor
adc
insl
sbb
or
sub
aad
mov
in
test
mov
inc
mov
xchg
push
xchg
xor
inc
mov
mov
xchg
cmpsl
xchg
jecxz
mov
ljmp
push
mov
sahf
leave
roll
stc
adc
mov
pop
jbe
stos
pushf
mov
dec
jb
cmpsl
adc
adc
xor
sbb
fcmovne
jge
lret
cli
adc
movsl
fs
add
fst
lahf
fstp
int
add
ja
insl
in
stos
movsb
aaa
bnd
mov
cs
pusha
repnz
push
push
jae
jae
jbe
loope
jp
lcall
mov
jb
sub
xchg
dec
psubw
cld
sub
dec
test
mov
rcr
cmp
repnz
xlat
mul
mov
daa
adc
push
lahf
fiaddl
dec
push
in
lds
adc
lret
aam
or
and
pop
sbb
mov
cltd
and
xchg
xor
lret
popa
es
out
repnz
and
insl
addr16
jns
test
mov
mov
es
sbb
push
cld
jge
clc
stos
pop
sbb
sbb
xor
in
icebp
les
es
cs
cmp
in
test
in
push
or
mov
cmp
clc
sbb
sbb
fmull
test
in
mov
jno
xchg
daa
adc
inc
int3
dec
pop
lods
idivb
test
or
outsl
negl
mov
ret
call
fbld
mov
mov
jle
mov
push
jo
mov
or
xchg
data16
inc
jno
lock
rcrb
push
dec
jle
rol
mov
loop
test
jmp
ret
cmp
dec
in
testb
icebp
push
xor
xchg
jne
insl
xor
or
mov
pop
pushf
xor
inc
mov
mov
mov
roll
call
stc
xor
scas
nop
pop
in
fnstcw
push
or
xchg
outsb
jbe
sbb
inc
add
push
movsl
popf
lods
test
mov
fidivl
arpl
push
ljmp
pop
shlb
popa
clc
movsl
mov
jg
loopne
imul
inc
cmp
jns
clc
into
std
cmp
pop
inc
inc
lods
push
dec
cmp
mov
or
out
aam
pop
lret
rolw
rcrb
jl
sbb
or
sahf
cs
sti
das
in
andl
inc
dec
mov
inc
in
lea
and
lret
sti
popl
sbb
pop
dec
aam
ljmp
mov
lcall
and
jnp
lds
in
add
jns
outsb
xchg
dec
aas
in
test
cmp
inc
stos
mov
faddl
aad
dec
xlat
test
cmc
jae
call
cmpsb
lods
gs
push
mov
je
sti
mov
sub
clc
push
out
jl
pop
fwait
popa
outsb
fmul
cmp
cmpsb
mov
fbstp
test
mov
cmp
insl
mov
xchg
aas
je
jno
sbb
stos
adc
subl
pop
pop
shl
testb
pop
aas
rclb
inc
jns
pop
xor
repnz
mov
sarl
repz
fsubrl
fimuls
je
arpl
in
pop
add
xor
jecxz
jbe
movsl
cmpsb
imul
adc
ds
xchg
cmpsb
and
lods
and
outsl
sub
bound
jns
aam
cmpsb
pusha
mov
mov
mov
push
adc
mov
fnstsw
xchg
jnp,pn
push
lock
ja
jne
addb
insb
cmp
lods
xchg
pop
cmp
sub
scas
pop
mov
loop
mov
enter
or
aad
mov
sbb
lcall
xchg
mov
jp
je
out
xchg
xchg
jge
adcb
movsb
lock
movsb
jne
jle
mov
sbb
clc
dec
sbb
dec
bswap
mov
jle
aad
ficomps
sahf
jb
rcrb
les
rcl
jo
insl
jmp
sub
rclb
js
std
lods
inc
jns
pop
lea
and
jbe
outsb
mov
mov
jle
imul
and
cmp
addr16
mov
dec
jecxz
pop
add
jg
hlt
mov
mov
and
cmp
pop
sub
inc
int3
dec
push
imul
dec
pop
mov
or
out
cltd
sub
inc
lods
mov
xor
xor
push
push
imul
mov
pop
aad
dec
nop
cmpsl
ficompl
in
push
push
and
jne
ret
stos
or
fisubl
ret
mov
add
loopne
xor
jnp
stc
mov
and
cld
adcl
out
sar
mov
dec
pop
or
xor
mull
and
cltd
xchg
fs
dec
daa
pop
loop
and
les
pushf
sbb
dec
adc
lahf
or
icebp
mov
mov
adc
pop
hlt
lea
jnp
push
xchg
mov
lcall
ja
mov
and
dec
fs
jp
fldt
mov
jbe
sub
jbe
test
cmpb
xchg
les
lods
dec
pop
out
xchg
push
inc
xlat
in
xchg
lret
fxtract
cmc
mov
pop
jmp
xor
testb
mov
mov
mov
adc
pop
jno
pop
adc
in
pop
nop
xchg
cmpsl
adc
mov
mov
sahf
je
xchg
and
gs
adc
test
cwtl
sub
inc
mov
test
add
aas
lods
inc
jno
push
je
dec
out
xchg
xor
and
or
xchg
sub
addb
xchg
add
adc
push
and
xchg
mov
ror
fimuls
sub
les
lds
sahf
fs
sbb
xor
mov
sti
lea
mov
sbb
rol
push
adc
sub
inc
fbstp
add
dec
inc
and
dec
fs
sahf
xchg
je
dec
or
jne
xlat
mov
in
lret
sbb
xchg
outsb
in
call
test
pop
hlt
push
sbb
aad
out
push
sahf
and
fmuls
pusha
mov
mov
push
push
mov
xchg
cmp
outsl
insl
fisubrl
test
imul
das
aaa
shrb
mov
mov
and
cs
push
movsb
or
push
gs
push
mov
lahf
add
inc
inc
test
add
in
gs
push
jg
int
movsl
pop
popa
inc
inc
jecxz
xchg
push
lahf
imul
out
xchg
les
inc
add
sbb
testl
cmpl
jb
sub
arpl
jmp
cltd
adc
fiaddl
ds
mov
or
jae
mov
cld
test
jb
xchg
push
testb
stc
inc
bound
fdiv
call
cmpsb
es
fisubrl
fstl
insl
fucomp
adc
test
imul
push
jle
sbb
fidivl
fldcw
rolb
out
fdiv
das
xchg
es
in
mov
out
lock
fisttps
add
mov
lcall
aam
out
inc
mov
or
jne
sbb
jnp
push
lahf
out
xor
inc
add
add
das
icebp
lock
mov
xor
fwait
mov
lahf
je
sbb
add
scas
xor
sbb
push
cli
lahf
and
jl
xor
add
hlt
lret
sbb
jb
sahf
jno
sbb
adc
jle
adc
lcall
cli
push
jle
xorl
rcll
clc
jp
insl
pop
iret
es
or
and
ss
cltd
cmp
insb
fistpll
gs
push
iret
and
mov
icebp
sbb
outsb
adc
lock
in
jbe
jl
dec
xchg
xchg
pushf
outsb
add
cld
pop
cmp
dec
inc
fcompl
insb
int
aas
es
cmc
lret
pop
dec
movsb
arpl
or
jno
outsl
cltd
adc
fldl
mov
insb
cli
xor
mov
dec
data16
xchg
add
sbb
fsubl
aam
sbb
cmp
ja
jge
adc
sbb
icebp
cmpsb
dec
mov
loopne
xor
lahf
subl
lds
ret
mov
xor
enter
aaa
fsubs
pop
push
xchg
out
aam
lds
out
imul
cmp
and
ljmp
loopne
fcoms
popa
or
push
mov
cld
jnp
daa
inc
fbstp
cld
or
sbb
xchg
enter
in
cmp
and
loopne
lods
mov
out
out
cmpsl
cmpsl
cli
imull
jae
pop
mov
adc
repnz
push
dec
cs
sbb
jg
in
daa
insl
sbb
pop
sti
arpl
stos
cmp
pop
inc
shrl
ret
pop
push
cwtl
in
mov
scas
mov
scas
es
sub
jmp
fidivrl
pslld
ss
gs
adc
jmp
jecxz
xor
sub
push
divl
sbb
adc
cli
add
dec
mov
xlat
sbb
shll
das
jp
sbb
mov
sbb
push
inc
aam
pop
dec
cwtl
filds
adc
mov
ja
repnz
cmp
call
cmp
mov
mov
stos
ja
or
add
xor
xchg
xor
fwait
or
sub
das
sub
dec
sbb
add
jbe
mov
and
pop
or
ja
mov
sub
jp
rcr
cld
mov
xor
xlat
fisttps
arpl
cmpsl
mov
mov
ret
jnp
or
scas
dec
int3
lret
sti
ret
hlt
sbb
movsl
or
daa
push
sub
adc
ds
into
or
cltd
mov
sbb
ljmp
insl
enter
and
sbb
iret
inc
sub
xor
fisubl
ret
ret
pop
cmp
inc
sahf
int
or
out
lods
mov
dec
add
jg
or
adc
add
add
lods
test
jp
adc
or
xor
pop
mov
pushf
cmpsb
sbb
fisubs
cmp
out
sarl
std
and
cwtl
jb
mov
mov
aas
stos
mov
imul
mov
pop
cmp
or
out
cs
fwait
or
mov
xorb
and
test
rclb
insb
pop
lods
inc
sbb
sti
push
shlb
jmp
imul
jmp
pop
cmc
push
cmp
out
sahf
and
mov
loope
cltd
xchg
shll
mov
cwtl
mov
andb
insb
cs
lock
loope
xor
and
jmp
fsub
jge
lcall
xor
pop
arpl
out
xchg
jae
les
cmp
push
mov
fdivl
sbb
lods
andb
test
filds
add
andb
adc
sarl
pop
sub
mov
sub
xchg
fs
sbb
cmovge
lcall
adc
dec
mov
cmpsl
xlat
mov
ds
pop
aam
xchg
jne
sbb
and
dec
inc
jecxz
mov
cmp
push
xor
ss
push
icebp
mov
lahf
sub
loope
ret
and
xlat
out
rcrl
decl
xor
jbe
xchg
adc
mov
lahf
fbstp
push
lods
daa
add
cld
mov
pusha
jnp
int3
mov
fld1
lock
inc
enter
ljmp
xlat
cwtl
pop
mov
js
nop
aaa
xor
jecxz
negb
lahf
or
push
xor
test
out
cmp
inc
xlat
and
xchg
loope
cmpsb
push
mov
fmuls
xor
pop
xor
cmpsb
shlb
inc
mov
inc
inc
leave
cmp
test
test
bound
out
jecxz
mov
cmp
adc
insl
lds
aaa
pop
jae
or
sti
outsb
xrstors
sti
push
xchg
inc
in
setbe
es
add
popa
in
aam
sub
inc
into
gs
pop
loop
fsubrp
shl
jne
inc
push
cmpxchg
stos
add
mov
int
cmpb
imul
sbb
inc
pop
arpl
fldt
int
into
ja
fs
cmp
mov
push
aas
call
call
cmc
fbstp
gs
mov
xchg
jae
cs
imul
cmpsl
int
das
jg
hlt
or
sub
push
mov
jge
mov
xchg
sbb
sarl
les
test
into
gs
in
jl
sbb
ret
sbb
dec
popf
outsl
bound
or
jb
jecxz
cltd
or
cmp
clc
nop
sbb
pop
insb
inc
xchg
add
and
mov
sub
cmc
sub
jne
sub
lods
les
or
rclb
cmp
adc
xchg
enter
and
imul
into
int
shll
outsb
pop
in
and
stos
cld
inc
jae
repz
inc
inc
adc
orl
mov
mov
repz
aas
mov
sbb
pop
adcl
lret
mov
jmp
jb
stos
imul
jmp
sbbl
arpl
or
and
sub
imul
fsubs
inc
jle
repz
aam
cld
inc
adcb
fcomps
mov
mov
ljmp
fisubrl
mov
pop
test
mov
add
jl
mov
aaa
mov
fsubs
pop
add
pop
fwait
je
lods
outsb
outsl
aad
cld
mov
imul
jo
ss
dec
pop
lods
inc
xchg
outsb
dec
rcll
ss
iret
out
xor
mov
adc
mov
add
pop
in
test
pop
jnp
adc
popa
or
lret
fstl
inc
or
aas
ficompl
fiadds
mov
mov
sarb
add
loop
pop
pop
or
xchg
cld
push
fucomi
xchg
pop
mov
mov
mov
out
dec
xor
or
lds
clc
dec
inc
cmp
ljmp
xor
rcrl
mov
jnp
enter
or
shll
fsubrs
imul
jg
push
notl
fstpl
push
sub
notb
outsl
lods
pushf
xor
lret
xor
pop
lahf
sti
enter
cmpsb
call
es
cmp
lea
rcll
inc
dec
test
rclb
xchg
in
jb
jbe
push
push
js
mov
and
jbe
repz
push
xor
xchg
repz
orl
std
lahf
adc
test
lock
loope
jl
dec
jecxz
dec
dec
loope
cmp
mov
test
jae
push
mov
je
es
orb
out
jno
mov
ficomps
testl
pop
inc
mov
pop
mul
add
and
sbb
daa
leave
adc
cs
sbbl
push
cmp
mov
movsb
sti
push
out
sbb
mov
repz
mov
nop
jnp
adc
xchg
add
inc
loop
je
hlt
xchg
push
inc
push
fstpt
ss
jbe
mov
xchg
pop
orb
fidivs
into
sbb
into
adc
jmp
jo
dec
lcall
inc
mov
add
and
or
es
aad
jno
sqrtps
xchg
fisttpl
jb
div
or
ret
iret
loope
add
jns
xor
lock
jge
mov
call
cmpsl
sahf
jb
ret
idivb
xlat
nop
test
fdiv
cli
loope
daa
push
cs
cmp
xor
out
jecxz
push
in
xchg
sub
in
loop
arpl
inc
mov
add
daa
and
mov
jbe
loope
sbb
cltd
movsl
jmp
das
mov
gs
aam
cmp
jbe
mov
gs
fidivl
mov
mov
fidivrl
adc
xchg
xor
sub
in
inc
push
mov
fbld
aam
cmp
jmp
mov
movsl
jecxz
scas
in
cmpb
add
mov
xor
cmpsl
cmp
cmpsb
jo
orl
mov
mov
mov
sbbb
lret
xor
jmp
pop
xchg
cld
daa
ljmp
loopne
cmp
pop
cli
push
push
sub
mov
inc
lret
jae
mov
sub
lcall
aad
into
and
dec
orl
sbb
and
xchg
and
cld
inc
das
and
fimuls
cltd
leave
sub
cs
or
dec
stos
test
mov
mov
sti
es
cmp
sbb
ret
repz
xor
jle
paddsw
xchg
or
imul
aaa
add
data16
inc
lds
into
int3
mov
out
dec
std
pop
mov
mov
cmpl
jne
push
fidivs
push
jecxz
outsl
lcall
jecxz
mov
or
lret
je
lea
jp
sahf
lods
xchg
mov
push
mov
and
xchg
test
fwait
outsb
flds
and
iret
xlat
inc
xchg
cmpsl
xchg
aas
xor
xor
sar
enter
dec
fcomp
xchg
scas
call
xor
cli
pop
shll
mov
test
gs
and
mov
mov
lock
scas
cmpsb
outsb
clc
xlat
rclb
sub
lds
push
adc
imul
imul
mov
cmp
aam
repz
mov
add
mov
cmp
mov
daa
mov
orl
jl
pusha
cmp
outsb
pop
and
lret
repz
sbb
push
push
mov
jne
add
adc
dec
lcall
push
sub
mov
inc
sbb
mov
int3
xlat
outsb
cli
jp
mov
xchg
rcrl
in
cwtl
in
aaa
ficompl
cld
pop
aas
aas
ror
sbb
loope
jecxz
daa
fwait
loopne
jle
inc
movsb
jmp
fcmovbe
jl
adc
jno
adcl
adc
int
mov
mov
cld
stos
and
pop
hlt
xchg
cmp
lock
cmp
popf
or
loopne
push
loopne
lods
cmc
aaa
les
push
mov
pop
add
js
mov
fnop
lret
cmp
les
je
mov
pop
jbe
into
cmp
popf
out
je
fistps
lret
pop
mov
in
push
cmpb
mov
sbb
das
in
dec
stos
push
insl
xor
mov
pop
adc
or
inc
sbb
jp
bound
stos
mov
fistps
and
cmc
aad
dec
fwait
repnz
repz
nopl
sbbb
inc
adc
jnp
mov
cmpsb
lds
mov
or
addr16
jle
pop
in
cmp
xchg
inc
xchg
stos
test
je
in
add
sub
loopne
lock
and
js
mov
fwait
insl
sbb
mov
or
adc
inc
fisubs
inc
sbb
or
movsl
lds
test
lret
mov
mov
jecxz
mov
mov
mov
ret
inc
out
gs
pop
dec
ret
inc
stc
shr
jge
ljmp
insb
mov
cmp
icebp
loopne
notb
das
mov
aaa
mov
mull
test
cwtl
cmpsl
outsb
imul
lcall
arpl
inc
aas
inc
lock
ljmp
jl
stc
push
leave
faddl
or
cmp
inc
push
outsb
xchg
hlt
xchg
push
mov
xchg
sub
and
pushf
sub
jno
mov
or
out
gs
out
xchg
jecxz
xchg
popf
push
ret
clc
xchg
jo
pushf
adc
pusha
add
stos
inc
cld
outsl
paddsb
leave
jbe
fwait
mov
int
es
jnp
lretw
or
jle
daa
and
xchg
rolb
or
mov
xchg
sub
mov
js
mov
jb
pusha
or
sbb
adc
cltd
pusha
jge
inc
xchg
cmp
jmp
adc
ljmp
sets
and
xchg
push
push
sbb
cmp
mov
mov
sbb
inc
ret
sahf
pop
fmull
push
loope
out
loopne
inc
mov
fwait
mov
andl
insl
or
and
addb
out
test
sbb
and
pop
ucomiss
sbb
cli
sti
xor
sub
mov
cli
pushf
dec
adc
mov
mov
imul
mov
icebp
sbb
mov
mov
scas
xchg
xchg
mulb
std
push
cmp
sbb
push
lea
fidivs
int3
xlat
outsb
sar
xchg
jmp
cmp
inc
cmp
lods
rcr
jb
cmp
hlt
push
jge
inc
sub
lahf
nop
inc
flds
push
xchg
sub
aam
test
inc
fcmovne
xchg
test
pop
aad
push
adc
xor
popf
xchg
sub
fs
pop
push
xchg
jbe
ret
pop
shll
sbb
or
jl
test
mov
iret
and
repz
jecxz
dec
loopne
sub
loop
test
gs
iret
push
jmp
xchg
push
xlat
outsb
or
adc
repnz
inc
fildl
lods
stos
inc
and
push
nop
lock
inc
in
shrb
xor
mov
js
or
cli
std
mov
sbbl
add
subb
adc
add
int3
cmpsb
mov
imull
adc
cmc
and
cmpsb
cli
xchg
nop
fdivs
mov
repnz
and
iret
push
pop
fcomps
insl
xor
and
popf
js
int
pop
in
mov
cmp
pop
push
ljmp
pusha
aad
out
int
push
adc
mov
dec
lahf
push
shrb
fists
pop
mov
jge
subb
cld
js
jno
in
mov
addl
pop
mov
das
add
and
dec
les
cmp
mov
mov
sarb
jp
dec
lods
or
movsb
int
pop
jbe
ficoml
jmp
mov
repnz
out
mov
push
cmc
mov
pusha
jne
lret
mov
fnstcw
xchg
pop
jl
dec
nop
dec
xor
imul
jecxz
mov
mov
orb
mov
cmp
inc
xlat
shrb
mov
push
inc
add
pop
ja
dec
das
mov
int3
dec
ds
inc
xchg
fnstcw
sti
mov
mov
xchg
test
shrl
loope
sub
into
push
inc
push
mov
in
mov
sub
push
aam
mov
xor
push
push
cmp
mov
add
lea
xchg
in
fidivrs
movsl
push
xlat
xchg
jg
jno
push
mov
popf
mov
fdivp
mov
aad
in
mov
lahf
data16
push
xor
mov
jge
xorl
or
scas
mov
cmc
nop
add
movsb
ja
test
ljmp
sarl
fdivl
or
mov
fsubrl
mov
fists
jecxz
loop
out
and
adc
cmpl
fldt
and
mov
push
cli
inc
and
cmc
push
imul
pop
scas
shlb
neg
jbe
enter
adc
jle
out
mov
int3
inc
pop
mov
dec
shrb
rorl
std
test
and
mov
out
and
adc
je
lahf
scas
jl
out
xlat
mov
mov
es
into
aas
test
cmp
pushf
adc
adc
xchg
xchg
stc
mov
cmp
leave
mov
pand
cwtl
mov
sarl
cld
mov
fidivs
mov
fwait
cmp
push
and
daa
pop
add
cmp
xorl
orb
push
sub
aad
xor
jae
imull
ljmp
sub
js
mov
mov
je,pt
xor
call
mov
faddl
lret
jge
cmp
js
in
mov
aam
add
xor
jbe
fldenv
push
mov
or
xchg
sbb
push
push
pop
xchg
jmp
fwait
add
xchg
cmpsl
hlt
jp
hlt
hlt
cmpsl
in
xlat
mov
dec
fisttps
and
cmc
out
xlat
addr16
or
push
push
int3
es
mov
push
ret
lods
sub
out
pop
sbb
pop
mov
cltd
lret
mov
mov
cmp
mov
mov
jns
adc
outsb
sbb
add
pop
cmp
or
pop
ret
shrb
mov
rcr
mov
movsl
imul
int3
inc
mov
rcll
loopne
xorl
test
fcomip
xor
lods
mov
sbb
shlb
xorl
sbb
push
call
jle
outsl
push
addr16
jle
sbb
fiaddl
sbb
sub
pop
sahf
enter
cli
cmp
imul
movsl
dec
jns
push
mov
jge
mov
cmp
mov
adc
sbb
cmp
notl
xchg
pushf
outsl
in
push
xchg
pop
out
dec
fdivrs
loop
cmp
jb
jae
push
mov
ret
sub
add
push
iret
ss
xorb
cltd
lea
mov
jo
in
bound
cmpb
push
xor
push
imul
mov
mov
mov
jl
rcr
rcrl
push
adc
or
rclb
inc
push
in
insb
rol
cmp
jae
xor
repz
mov
add
lds
adc
pop
out
mov
sub
pop
xchg
jnp
mov
ds
fstl
iret
sub
int3
push
mov
stc
jecxz
cmpsl
ret
roll
ficoml
cwtl
sub
das
mov
pop
shrb
push
loop
mov
pop
or
call
jmp
xor
mov
int
loop
daa
jle
shll
loopne
lret
xchg
clc
xchg
add
xor
ljmp
push
negb
add
orl
mov
addr16
add
das
xor
nop
sub
jne
mov
into
popf
jl
and
lret
cli
dec
cwtl
mov
xor
sub
mov
iret
inc
and
testb
fucomp
out
mov
cmp
inc
push
lea
push
movsb
adc
xchg
js
popa
pop
repnz
push
pop
mov
aas
mov
sub
sub
or
push
je
insl
jecxz
outsl
scas
mov
mov
add
lcall
sbb
add
push
mov
sbb
in
sub
mov
loope
inc
adc
or
sub
loopne
repz
in
mov
scas
aaa
cmp
aas
insb
fbstp
mov
push
pop
fidivs
out
mov
test
rorl
lcall
mov
adc
addr16
push
std
test
pop
sbb
add
sub
insl
bound
imul
jmp
ljmp
pop
shll
stos
push
or
aam
jg
insb
mov
add
lret
jmp
and
fidivrs
aad
dec
mov
dec
xor
fxch
adc
shll
mov
test
or
stos
push
sub
jb
and
call
andl
push
mov
xchg
jb
fsts
mov
call
pushf
sbb
xor
inc
jb
push
jle
es
and
aaa
push
fldln2
lret
cmpsl
jge
or
and
call
xchg
subb
cld
push
enter
test
mov
aad
in
adc
cmp
push
addl
pop
aad
aad
loopne
ja
jns
lahf
test
call
jae
add
pop
adc
sbb
adc
add
xchg
outsl
loop
bound
push
iret
dec
lock
hlt
mov
and
and
fisubs
add
mov
ljmp
sub
xchg
sbb
shl
outsb
adc
pop
nop
ds
scas
push
aas
mov
lret
add
rcrb
enter
mov
movsb
sub
adc
insl
add
push
and
inc
mov
repnz
xor
or
jbe
mov
ret
xchg
xchg
lods
shlb
clc
inc
in
push
mov
jg
cmp
mov
cmp
ret
push
cld
mov
dec
jecxz
push
jp
jmp
push
mov
pop
pop
sahf
mov
in
and
iret
dec
dec
push
fldl
mov
pop
loope
xlat
xlat
pop
mov
push
js
xchg
mov
and
push
mov
icebp
leave
fcoms
sbb
xchg
add
jge
or
das
mov
jle
jne
xchg
fnstcw
inc
pop
jl
loope
sti
jns
ss
mov
push
mov
pop
xchg
stos
out
icebp
fsubrs
push
dec
rol
mov
adc
mov
scas
inc
adc
ss
mov
clc
adc
mov
mov
push
call
push
sbb
xlat
sub
dec
loop
cmp
ja
daa
test
addr16
adc
add
push
xchg
mov
pop
mov
inc
pusha
aaa
popa
jp
stos
or
mov
sahf
push
mov
cmpsl
addb
sub
es
stos
dec
sti
inc
xor
data16
fnstenv
jb
push
fdivs
lea
mov
dec
mov
hlt
movd
jb
adc
push
andb
jno
add
sarl
clc
fsubrs
push
mov
popf
out
nop
cmp
popf
dec
sti
mov
ret
andl
inc
les
rorb
and
in
push
inc
mov
loop
cmp
insb
xchg
dec
mov
and
shrl
xchg
cmpsl
incl
test
lcall
repnz
and
pop
les
mov
push
push
jg
cmpsb
mov
jg
mov
mov
aaa
out
push
adc
mov
mov
jp
add
add
scas
or
out
adc
lret
mov
out
sarb
bound
push
int3
xor
dec
cld
pusha
sbb
stos
inc
fcmovne
jno
stos
jmp
aaa
fcompl
jae
sbb
xchg
or
fwait
jl
mov
out
pop
dec
sbb
mov
sub
push
out
clc
enter
outsb
in
cmpsl
push
out
test
lret
jno
test
xor
xor
dec
out
fisttpll
dec
mov
aad
pop
mov
add
cmp
xor
mov
fiaddl
out
jmp
add
jg
insl
xchg
or
and
inc
outsb
xorl
lock
movsb
xor
ljmp
jbe
dec
add
push
insl
ret
inc
mov
push
fbstp
dec
xor
pushf
test
mov
mov
push
out
shlb
imul
fnsave
jmp
xchg
in
xchg
mov
adc
push
inc
mov
xor
mov
pop
mov
std
jg
sub
mov
jecxz
push
mov
cmpsl
cli
and
imul
dec
insb
mov
outsb
rorb
leave
and
mov
dec
push
sar
repnz
jp
push
imul
xchg
add
mov
add
sbb
loope
test
pop
xchg
mov
cmpsb
xchg
add
lahf
pop
cld
es
pop
xor
cmp
mov
movntq
mov
fisubrs
ror
test
add
das
mov
xchg
pop
adc
mov
shll
inc
movb
int
dec
inc
mov
mov
test
dec
pop
sti
jecxz
mov
push
std
fisubrs
ljmp
and
scas
cmp
sbbl
mov
or
and
inc
cwtl
push
cmp
adc
lret
mov
dec
or
dec
add
aam
dec
add
mov
enter
fcoml
out
cltd
and
adc
fimuls
cmpsb
iret
ficoml
insl
ljmp
mov
imul
out
stc
push
xchg
adcb
push
inc
pusha
ss
dec
inc
xor
pop
mov
mov
jmp
push
les
insl
adc
xchg
push
push
js
fmul
dec
test
and
ljmp
sbb
dec
mov
xchg
mov
dec
ss
xor
loopne
ds
or
adc
in
push
or
xor
jne
dec
push
sbb
sti
cmp
and
inc
movsl
insl
inc
sbb
jge
test
insb
mov
xchg
inc
cli
test
lret
xlat
daa
or
jge
push
daa
mov
push
cmp
jl
sti
mov
inc
sub
aas
ljmp
mov
pop
lea
mov
mov
in
jg
cmp
cvttps2pi
rorb
call
cmpl
sbb
cmp
add
arpl
or
pop
lods
out
lods
ret
push
jbe
adc
sbb
jb
fld
ljmp
das
mov
xor
push
add
mov
mov
popf
jb
fsts
test
cmp
jb
push
add
mov
xlat
pop
gs
mov
in
push
addb
lahf
push
loop
mov
fsubrl
sub
outsl
jg
lea
mov
pop
cli
xor
les
mov
push
test
es
or
and
sub
jge
das
ljmp
push
jmp
test
mov
push
cmp
aad
int
mov
gs
test
push
outsb
fnstcw
cmp
add
aaa
xor
add
mov
and
xchg
dec
in
icebp
xchg
pop
pop
hlt
outsb
dec
call
push
or
je
roll
data16
xchg
ljmp
mov
xlat
cs
ds
cs
fnstcw
pop
mov
xor
cwtl
rcrl
mov
pushf
pop
and
shr
roll
cmpsb
lock
adc
ss
mov
sbb
cmp
in
and
jge
mov
cmp
pop
xor
pop
idivb
or
lret
mov
cmp
dec
xchg
push
loop
rorl
xor
xchg
mov
mov
or
test
imul
cmp
and
repnz
cvtps2pd
adc
or
rcl
movsb
dec
dec
call
xchg
imul
clc
pushf
cli
or
xchg
jbe
andb
enter
cmpsl
mov
jle
jl
mov
imulb
fnstcw
mov
imul
add
or
push
mov
movsb
mov
mov
add
pop
lret
mov
fcoms
or
sub
sub
xlat
mov
aas
pushl
jmp
sbb
mov
push
aaa
push
dec
mov
and
and
fdivs
hlt
xchg
pop
pop
jo
jmp
lds
mov
sahf
aad
mov
jae
jmp
cmpl
les
cltd
clc
jl
lret
outsl
adc
and
loopne
scas
mov
orb
ret
popf
jb
in
mov
icebp
shl
jb
mov
cmp
lahf
nop
mov
push
int
shl
mov
fldenv
mov
adc
or
pop
sub
mov
mov
cwtl
iret
in
lea
cli
je
shl
dec
pop
or
cmp
leave
sbb
xchg
imul
addb
adc
inc
rcr
xor
loopnew
fsts
jbe
xlat
xchg
push
aam
lods
push
adc
cli
lcall
inc
or
and
jns
mov
inc
aaa
inc
pop
xor
pop
mov
xorb
push
repz
iret
add
mov
pop
or
pop
adc
cmpl
stos
xchg
add
dec
iret
xchg
test
inc
cmpsb
xchg
es
and
loope
or
aas
loop
jno
pop
cmpsw
inc
push
add
xchg
add
dec
cld
xchg
aas
rorl
and
adc
andb
xor
stos
aas
and
push
inc
dec
xor
or
out
add
imul
cmp
pop
sbbb
outsb
sub
loopne
jecxz
xor
xorb
mov
loop
or
jo
sbb
dec
test
xor
rorb
mov
dec
dec
dec
pop
subb
jns
adc
nop
stos
daa
fwait
jne
int
inc
fs
cmp
arpl
cltd
out
xchg
cmpsl
pop
jno
out
mov
addl
or
inc
cld
mov
inc
push
lcall
in
or
xchg
mulb
inc
jae
push
push
sbb
mov
loop
loopne
scas
add
sub
sub
sahf
jecxz
ja
sub
clc
mov
sti
pusha
lods
ljmp
insb
pop
xchg
fdivrs
or
popf
cmp
lahf
fiaddl
stc
fsubrp
sbb
and
add
dec
fisubl
lds
scas
cmp
out
dec
inc
push
shll
xchg
add
lods
pop
test
pop
add
add
xchg
in
mov
jnp
add
std
xchg
xor
jle
jge
das
gs
or
ljmp
xchg
push
out
roll
and
filds
mov
fildl
mov
aam
cs
lret
push
ljmp
call
ljmp
or
iret
inc
push
inc
lock
fucomp
outsb
xlat
mov
cmpsb
adc
cmpsb
lds
call
xchg
dec
push
inc
fiaddl
fucomp
imul
lea
cmc
outsl
data16
mov
inc
test
js
int
pop
adc
lds
pop
frstor
adc
lea
fistpl
xchg
pop
or
cmpsb
cmp
movl
or
adc
mov
imul
loopne
jo
xchg
rcl
mov
add
mov
push
ds
sub
fisttps
add
push
mov
cmpl
sub
repz
jl
xchg
rorb
shll
mov
xchg
push
les
rcll
cltd
xchg
addb
popf
test
divb
imul
adc
lahf
cltd
sbb
sub
data16
shrb
jg
repz
xlat
loope
dec
sahf
cmpsl
xchg
out
cmp
sbb
xor
pop
mov
pop
pop
loope
push
dec
cmp
sub
fsubl
rorb
xor
mov
int
pop
sub
mov
mov
pmullw
out
fsts
push
mov
jmp
sub
aad
push
jbe,pt
pop
mov
cmp
and
inc
or
repnz
flds
dec
pop
stos
rorb
sahf
pop
js
dec
ds
es
sbb
sahf
iret
jle
ja
lock
xchg
loop
adc
inc
xchg
insb
mov
fdivrl
popf
ss
addr16
sbbb
icebp
imul
incb
nop
cmpsl
lea
pop
out
stos
aas
jae
mov
mov
rolb
out
pop
cmp
cmp
sub
pop
push
outsb
add
cld
daa
paddd
dec
dec
dec
push
xor
cmp
arpl
cmp
cli
sub
hlt
lret
cwtl
daa
les
ja
cmpsl
es
mov
add
repz
mov
adc
adc
shlb
fwait
pop
and
in
es
sbb
push
jb
mov
inc
sub
repz
push
ds
lret
mov
sahf
bound
mov
mov
addr16
sub
or
add
jns
cmp
cmpsl
rolb
scas
dec
movsb
out
sbb
shrl
inc
cmc
xchg
cmp
push
lret
loop
fcomps
or
inc
ja
xor
fs
call
cmp
push
jne
sbb
dec
loopne
cmp
adc
mov
mov
xchg
dec
cmp
add
pop
mov
adc
js
cmp
mov
fistpl
scas
sub
cmp
lods
xchg
outsb
aam
outsb
shlb
jg
outsb
add
xchg
es
outsb
pop
pop
jg
shlb
jl
xchg
sub
scas
ret
xchg
fdivrs
mov
jg
fidivs
dec
je
ret
pop
adc
aad
push
nop
out
lods
jmp
shr
sbb
xchg
mov
jae
pop
jg
bound
sub
loope
jo
movsl
or
test
mov
jmp
fidivrs
rcl
out
mov
sub
shl
xchg
mov
repz
in
push
xchg
xor
inc
pop
outsb
xchg
or
ret
cmp
les
cmpsb
cld
inc
pushf
mov
sbb
shrl
pop
sub
cmp
iret
fstpt
pop
fcomi
mov
test
or
xchg
mov
add
dec
xor
add
lret
js
push
pusha
mov
lcall
and
and
mov
js
and
lock
xor
and
orl
or
gs
pop
mov
xlat
outsl
inc
xchg
jnp
test
and
sbb
in
ja
test
jbe
xor
add
hlt
and
sub
push
cld
sbb
add
aad
outsl
cltd
jl
imul
dec
mov
mov
adc
addr16
adc
arpl
sub
jle
jbe
dec
call
int3
enter
or
push
mov
fsubs
and
inc
inc
add
add
pop
or
jmp
rorb
pusha
repz
jbe
push
insl
inc
jl
pushf
imul
xor
xchg
xchg
sub
add
arpl
and
ds
pop
mov
and
inc
aaa
subb
xor
xor
dec
cltd
aas
clc
and
ljmp
and
rorb
dec
hlt
mov
int3
jmp
gs
sarl
mov
adc
mov
rorl
lds
fnstcw
ret
fbld
cwtl
xor
cmp
aaa
outsb
out
and
lock
push
mov
jae
insb
jno
dec
xor
or
vmovq
scas
sbb
daa
inc
fidivrs
inc
cld
sti
mov
xor
cs
rorl
add
lds
rol
pop
ret
adc
cli
fldt
movsb
mov
jns
sbb
mov
mov
jmp
imul
andb
xchg
mov
sub
js
fcoms
lahf
add
xor
or
push
cli
fidivrl
sti
xor
scas
jl
jmp
lcall
cmp
cli
sub
or
xor
test
add
adc
stos
lods
jo
aad
cltd
push
loopne
sbb
pusha
idiv
das
lret
jne
pop
stc
push
psllq
repnz
push
scas
sahf
dec
push
mov
cs
push
outsb
gs
sbb
jns
push
rcrl
pop
fdivs
jle
mov
jle
dec
insb
lret
lock
cmpsb
out
pop
pop
cmp
sub
xchg
inc
jne
push
cmpsl
and
cltd
test
or
jnp
mov
lock
stc
xchg
jb
mov
mov
test
sub
cmp
mov
cmp
scas
sbb
dec
pop
rolb
sub
aad
ret
pop
sbb
xor
int
aad
push
push
jecxz
jb
jle
aad
pop
shll
mov
cmp
je
cmp
sbb
clc
das
push
dec
fs
lcall
lret
pop
int3
pop
xor
ja
push
pop
pop
sti
ret
push
xchg
cwtl
xor
cs
mov
xchg
jo
pop
call
mov
push
fimull
scas
and
iret
popa
xor
cmp
sahf
xor
shl
cmp
stc
lock
mov
pop
dec
mov
xchg
insl
and
mov
dec
enter
xor
mov
ja
je
jno
xchg
sub
jbe
push
hlt
hlt
pop
sbb
rclb
inc
insl
and
iret
inc
je
add
jecxz
loop
mov
adc
xor
adc
cmpsl
jg
cwtl
xchg
xor
jb
xor
dec
mov
loope
out
stos
xchg
ljmp
repnz
cmp
sbb
jmp
out
push
inc
mov
gs
fwait
sbb
adc
inc
bound
fnstenv
pop
jle
dec
mov
jge
jno
dec
bound
xchg
test
dec
incb
mov
aam
lret
shll
lret
mov
jo
xor
add
add
insl
dec
sti
fwait
dec
pop
shll
aam
inc
movsl
sbb
mov
xchg
cmp
popf
mov
es
arpl
pushf
mov
leave
jo
data16
cmp
aas
jle
mov
jecxz
sbb
inc
les
popf
xor
lret
inc
int3
sbb
push
dec
lods
ficompl
jg
cmpb
and
and
pop
movsb
xor
lahf
mov
mov
cmp
dec
rcrl
fsubrl
mov
pop
dec
out
pop
cmp
cmp
jmp
fdivrs
sbb
mov
or
mov
in
mov
sbb
cltd
pop
cmp
out
out
ja
mov
jmp
dec
scas
inc
insb
sahf
cmc
mov
mov
aad
inc
pop
icebp
cli
adc
mov
bound
sbb
popa
push
cmpsb
imul
outsl
out
orb
add
xor
into
aam
mov
sbb
jbe
subb
mov
push
mov
pop
cltd
test
or
daa
cs
scas
andl
mov
fwait
xchg
mov
xor
xchg
nop
push
sub
adc
and
xchg
jno
adc
sbb
pop
loop
lock
jne
push
cmpsl
mov
popa
loope
xor
inc
push
fxam
movsl
sub
mov
mov
sbb
es
inc
fsubrs
pop
scas
xor
mov
stos
inc
cmpsl
sbb
lret
adc
fimull
lahf
ss
rolb
dec
cmp
pushl
into
rcl
das
ret
sub
and
mov
scas
jo
ja
ja
filds
sub
adc
dec
jne
icebp
mov
adc
jl
test
inc
test
xchg
out
inc
sbb
leave
ror
or
jno
fidivs
jp
testb
cmp
xchg
sbb
inc
scas
inc
aaa
cmp
jge
lods
xchg
xchg
cmp
test
or
ret
jl
insl
jnp
or
into
ficompl
ret
and
pusha
adc
add
add
and
inc
loope
repnz
sbb
dec
mov
or
sub
fidivs
mov
shll
fstps
or
fwait
xchg
loope
sub
jp
scas
jl
sbbb
sub
ds
and
repz
inc
jle
bound
push
in
cmove
std
add
inc
xor
insb
shrl
dec
repnz
mov
inc
add
pop
xchg
xchg
sbbl
fistpll
sbb
inc
or
into
imul
test
xchg
xchg
sbb
xor
dec
push
in
sbb
push
push
sub
jecxz
das
sbb
cmp
dec
dec
jbe
aam
sub
out
ljmp
and
pop
push
mov
pop
int3
jno
jb
aad
pop
lods
mov
fisubrl
mov
insb
xlat
sub
pushf
cmp
in
dec
and
pop
sub
popf
scas
neg
into
scas
sbb
aas
inc
arpl
shll
stc
popf
pop
mov
ss
adc
pop
jmp
les
add
aaa
cmpsl
and
add
add
push
lea
jo
popa
jl
scas
jo
aad
inc
outsl
adc
or
orl
js
mov
out
pop
inc
jle
shll
xchg
loop
jp
or
je
pop
loope
sbb
push
mov
stos
das
fidivs
cmpsl
fs
shrb
push
dec
inc
cmpsl
test
into
in
sti
in
push
sub
sbb
scas
push
mov
sbb
and
cltd
add
in
adc
mov
mov
popa
repz
mov
imul
pushf
insb
mov
test
mov
rep
pop
in
enter
xchg
ret
in
inc
push
in
in
pop
and
bound
in
jle
xlat
int3
xorb
adc
popa
test
shrl
into
xor
in
fdivs
push
xchg
ss
dec
cmp
test
ror
mov
mov
jb
pop
push
add
cmp
lret
mov
add
loope
cmc
and
pop
sbb
dec
push
mov
into
xchg
test
sahf
jns
cs
push
daa
mov
imul
push
ficomps
cmp
push
shr
sbb
roll
pop
xor
jae
nop
and
mov
mov
sub
dec
pop
cmp
mov
cmpsl
fisubrl
pop
inc
fmuls
imull
imul
loopne
add
out
test
xchg
xchg
in
xor
lds
loope
mov
push
sbb
adc
push
push
mov
mov
xlat
sbb
mov
jnp
ret
jnp
xchg
sub
mov
xchg
cmp
rclb
test
dec
or
jmp
notl
sahf
mov
xorb
mov
fwait
sub
jmp
aaa
inc
sbb
mov
js
mov
clc
xchg
jg
dec
fistpll
rcrl
mov
pop
imul
mov
push
mov
inc
xor
je
icebp
push
pop
adc
pop
arpl
ljmp
roll
mov
add
sub
stos
sti
mov
jl
test
loopne
jno
dec
mov
push
mov
aam
jmp
bound
addr16
test
pop
mov
fwait
jb
sbb
adc
cli
test
xor
mov
sbbl
jb
pop
les
frstor
sti
add
mov
mov
or
rol
insl
pop
std
or
cmc
insl
cmp
cmp
dec
lock
sub
sbb
lods
repnz
or
jecxz
clc
and
aad
pop
xchg
jp
in
mov
imul
mov
or
popf
dec
inc
cmc
imul
push
lods
dec
adc
test
push
ret
mov
dec
fldenv
icebp
jno
test
shrl
pop
or
or
xchg
in
jmp
xor
ss
shrl
dec
mov
sub
xor
fnstcw
nop
in
gs
test
outsb
jl
je
cwtl
lods
gs
inc
loopne
ja
add
xchg
ret
cmpsb
adc
cli
inc
xor
jb
and
shll
test
mov
push
xor
adc
mov
mov
dec
popf
fadds
jmp
dec
loope
push
mov
dec
mov
mov
pop
xlat
add
jb
stos
fsubrs
push
popl
push
push
add
fisttpll
mov
mov
jl
dec
mov
xor
imul
inc
and
mov
bswap
in
scas
cmp
lods
inc
jo
jbe
pop
xchg
lret
or
add
fistpl
popf
mull
and
mov
pushf
dec
and
fildll
xor
cld
adc
lock
mulb
in
clc
ret
int
lods
aaa
dec
xchg
int
adc
sbbb
data16
add
xor
jnp
out
call
sub
stc
xchg
cmpsl
jbe
into
arpl
add
xlat
roll
cli
cltd
sub
scas
push
inc
pop
notl
cli
xchg
and
jo
dec
xchg
inc
setl
mov
jl
testl
in
push
repnz
sti
pop
xor
adc
ja
mov
add
je
popa
enter
xorb
enter
lock
or
fidivl
jmp
roll
jp
xlat
shrl
push
push
xchg
jno
jae
sbb
leave
mov
lret
loopne
int
xchg
dec
and
out
fldcw
jb
add
adc
dec
data16
lods
mov
push
xchg
pop
sti
push
jle
enter
push
jmp
dec
ret
and
fnstenv
scas
inc
mov
pop
in
test
jmp
xor
mov
xor
mov
sub
js
jmp
bound
lods
pop
push
push
js
inc
fdivl
enter
cld
push
and
movsb
sahf
pop
and
es
dec
inc
test
insb
enter
or
test
sbb
mov
fwait
subb
test
add
push
inc
call
and
repnz
repnz
and
jns
mov
clc
cltd
bound
adc
inc
movsb
mov
fisubrl
mov
imul
out
add
jge
mov
cmp
add
imul
mov
stos
ljmp
call
add
js
jmp
lcall
mov
decb
xor
lret
js
bound
adc
xchg
loop
pop
dec
mov
mov
jnp
pop
repnz
cmc
mov
aaa
add
xchg
xchg
js
out
std
xor
sbb
test
popa
lcall
push
bound
leave
jae
mov
cmp
mov
nop
int3
mov
inc
cmp
mov
out
mov
out
rep
jb
test
mov
sub
xor
mov
repnz
mov
push
sbb
push
imul
idivb
jno
loope
jbe
adc
push
sbb
push
mov
loop
cmc
call
mov
test
fidivl
les
dec
loope
das
sbb
mov
addl
mov
dec
aas
sbb
adcb
pop
mov
pop
xor
mov
xchg
mov
rcrl
sub
add
inc
fisubs
mov
push
clc
sahf
fstps
and
les
inc
fsts
cmp
lds
int
push
pop
dec
clc
dec
stc
sbbb
mov
inc
mov
cmc
stos
movsb
or
dec
sub
mov
movlps
and
push
icebp
sbb
inc
and
cmp
leave
cld
iret
jnp
ret
dec
scas
pop
arpl
out
xlat
push
out
or
and
mov
or
fadds
xchg
push
icebp
push
les
xor
mull
mov
fs
fwait
sti
inc
outsl
xchg
dec
movsl
push
dec
adc
add
mov
adc
sarl
and
mov
shr
mov
or
aas
sbb
int
sbb
jmp
jnp
mov
sbb
mov
mov
xchg
not
popw
fsts
in
scas
adc
in
test
jp
xchg
sub
fwait
sahf
cmpsb
inc
add
xor
xor
add
jp
pop
inc
icebp
pop
mov
add
xchg
lea
or
add
sbb
inc
xchg
cmp
sub
sbb
push
or
ljmp
and
and
mov
scas
inc
adc
nop
mov
dec
mov
cltd
lods
add
outsl
js
stc
xchg
sub
outsl
add
cmp
add
cmp
jo
fsubrs
mov
gs
and
mov
mov
or
cmpsb
cmp
test
dec
adc
mov
and
iret
dec
inc
shr
in
insl
pop
dec
jbe
xchg
out
xor
and
into
sbb
rorb
push
rcl
and
mov
xor
dec
and
xorl
cmpsl
cs
aam
lret
inc
inc
mov
rcrl
mov
aaa
out
cmc
pop
cmp
xchg
inc
inc
imul
outsb
xchg
scas
cmp
int
inc
pop
sbb
inc
inc
push
inc
add
cmpsl
inc
mov
cmp
dec
dec
sbb
scas
in
pop
add
bound
stos
sub
insl
jnp
dec
xor
push
mov
cmp
enter
out
cli
or
mov
mov
mov
xsha1
cmpsb
mov
and
add
inc
gs
adc
cltd
into
shr
repz
mov
inc
pop
sbb
mov
ds
mov
and
mov
js
mov
jle
sbb
jmp
dec
or
rcr
jge
enter
repnz
adc
pop
mov
add
lea
in
cmp
push
mov
fwait
and
dec
add
sbb
jnp
jl
xchg
xchg
shrb
pop
dec
push
xchg
pop
lock
test
push
and
in
ja
pop
test
daa
scas
inc
mov
fcmove
arpl
dec
sub
sbb
push
pop
stos
adc
aam
push
mov
mov
or
inc
ficompl
jp
dec
lods
mov
cmp
popa
pop
lock
ja
push
out
push
fmul
xchg
sbb
fidivrs
aaa
mov
les
addr16
pop
adc
xchg
outsb
push
inc
xchg
cs
das
mov
xor
imul
pusha
pushf
scas
xchg
cwtl
push
lret
movsb
adc
mov
mov
inc
fucom
stc
out
sbb
lret
sti
out
xchg
add
mov
and
imul
inc
movsb
cmc
pop
sub
sbb
adc
xor
cld
and
xchg
or
xchg
fsubs
movsl
cmp
mov
cmp
ret
pop
jmp
and
jo
mov
jo
adc
inc
adc
ss
sub
test
popl
mov
insb
or
mov
sbb
push
jp
add
in
mov
inc
push
or
stc
arpl
jno
mov
sbb
repnz
clc
lret
xlat
in
inc
imul
adc
mov
call
pop
or
sub
dec
daa
dec
fwait
in
mov
jmp
xlat
and
mov
leave
int
mov
xor
push
jge
mov
shl
jp
xor
jle
aad
insb
mov
add
ds
mov
jmp
xchg
cmp
xchg
jae
mov
movsb
mov
mov
ror
dec
sbb
int
icebp
mov
out
nop
out
mov
lds
mov
ljmp
aam
outsb
fmuls
xchg
lock
arpl
into
xchg
mov
mov
addr16
outsb
int
unpckhps
test
lret
bound
inc
arpl
repz
subl
push
or
adc
mov
arpl
and
imul
dec
loope
insb
lcall
ljmp
jno
cmpsl
pop
popa
cmp
orb
push
pop
mov
int3
sub
outsl
push
mov
jne
stos
pop
xchg
loopne
repz
clc
fs
jp
mov
xchg
popf
fcomps
addl
mov
scas
sub
dec
xor
inc
sbb
jno
bound
jmp
test
arpl
test
cli
pop
out
scas
cmp
aaa
push
jbe
movl
leave
pusha
mov
ret
mov
fimuls
adc
jge
shrl
lahf
addb
dec
pop
jecxz,pt
rol
daa
cmp
cmp
xchg
outsb
add
push
ljmp
mov
jbe
add
xor
mov
cmc
xorl
in
call
lds
lret
ds
shrl
mov
shl
jbe
adc
fbstp
mov
movsl
mov
test
cmp
cld
sti
rolb
dec
popa
mov
xor
xchg
mov
int
ss
jns
sahf
xchg
cltd
sub
and
push
inc
mov
iret
shl
jae
sbb
push
sub
orl
shrl
and
jle
push
aas
dec
cmovge
xchg
scas
sti
mov
jge
hlt
incb
jo
pop
push
jmp
inc
sbb
das
mov
std
ret
cwtl
gs
sbb
push
inc
aaa
cmpl
clc
das
lret
pushf
sbb
add
int
repz
mov
sub
or
cmpl
pop
or
or
xor
jo
ficompl
or
cs
sahf
cltd
ret
xchg
pop
or
jl
mov
testb
pop
lret
push
arpl
test
insl
sbb
jno
pop
sti
mov
and
inc
cmc
pop
sbbb
jns
xor
sahf
arpl
sbb
jnp
es
cmpl
into
xchg
pavgb
adc
dec
std
xchg
jno
xchg
rorb
dec
les
icebp
sbb
mov
lods
mov
xor
lock
xor
mov
testl
inc
lock
jb
pushw
aam
ljmp
push
sarl
sub
inc
pop
jnp
jae
and
mov
rorl
jae
jo
out
in
sbb
mov
xor
mov
testb
push
xchg
cli
inc
fadds
aad
lea
stos
push
mov
mov
ljmp
mov
je
add
ffreep
xchg
sub
sub
jg
inc
aam
fcomps
les
and
jg
inc
lea
jns
lea
jmp
xor
dec
pop
clc
cs
jecxz
inc
adc
xor
xor
clc
mov
add
push
mov
dec
xchg
pop
repz
pop
sahf
pop
jmp
sahf
and
out
test
mov
mov
ret
mov
mov
inc
bound
cmc
jp
rep
pop
adc
scas
adc
add
addr16
inc
jbe
mov
and
popa
xchg
addr16
fldl
pcmpgtd
ret
sub
test
jmp
in
dec
insl
aaa
test
data16
mov
sub
add
add
insb
mov
jge
arpl
adc
sbb
out
loopne
cmp
fcomps
movl
push
inc
jge
movsl
mov
mov
xor
sub
cmpsb
mov
loopne
test
xor
fidivs
cld
mov
jg
mov
in
sbb
stos
sub
dec
sbb
fldenv
enter
js
jl
out
ljmp
or
imul
sub
or
pushf
mov
mov
inc
push
out
outsl
push
and
and
push
sub
mov
fldcw
jns
jmp
iret
push
jb
insl
int
lahf
adc
nop
aas
xchg
sbb
jae
sub
sub
loop
shlb
adc
test
rcrb
push
dec
dec
int3
movsl
jae
cmp
fs
in
into
stc
scas
adc
loopne
int3
mov
dec
adc
push
jb
and
push
mov
movsb
push
dec
fstpt
jmp
bound
dec
xchg
adc
jecxz
lock
adc
aam
shl
mov
cmpsl
mov
xchg
mov
shrb
pop
add
rcll
lods
roll
rcrl
push
sbb
in
lods
fwait
icebp
lahf
out
dec
and
mov
lret
jbe
mov
test
xchg
lods
mov
xlat
mov
or
sahf
xchg
pusha
rcrb
std
add
sub
pop
in
or
jo
out
xlat
lods
adc
mov
push
movl
or
pop
nop
ljmp
sahf
xor
andb
mov
push
mov
pop
fimull
pop
mov
xchg
pop
sub
push
mov
dec
sub
xor
push
mov
js,pt
lret
or
pop
mov
mov
mov
push
mov
adc
fsubl
xlat
in
lahf
mov
jne
mov
mov
js
clc
loope
cmp
jecxz
lods
dec
xor
mov
mov
call
cmp
xlat
std
xchg
add
out
cmpsl
sbb
mov
imul
out
imul
xchg
aaa
std
cltd
add
push
push
stos
in
jne
jnp
mov
dec
sub
lea
push
leave
dec
and
test
jg
cmpsb
jbe
mov
xor
inc
mov
push
insb
jp
push
outsb
pop
and
mov
out
repz
adcb
inc
mov
cltd
sbb
sbb
xchg
rclb
and
gs
or
mov
dec
hlt
popa
xor
dec
push
inc
shll
sarl
mov
test
std
cltd
enter
pop
and
inc
or
xchg
cld
cmp
enter
pop
push
pop
xlat
xchg
lods
or
jbe
and
stc
and
sub
add
in
cmpsb
mov
ljmp
and
orps
or
xor
or
cmp
jbe
fbstp
xchg
inc
inc
jae
jb
push
inc
mull
mov
or
mov
loope
mov
and
push
and
push
pop
dec
mov
loopne
fstl
andb
push
jbe
test
or
fs
aad
sbb
js
pusha
jmp
repnz
clc
adc
aam
xor
scas
sbb
movsl
das
fidivs
mov
nop
stos
inc
stos
sub
jo
dec
enter
aad
call
stos
shrb
jp
xor
jle
or
pop
mov
xchg
mov
xchg
mov
iret
imul
sbb
ja
lods
mov
push
pushf
mov
mov
adc
ret
mov
sahf
scas
ljmp
jmp
dec
fiadds
movsl
addr16
repnz
cmpsb
mov
outsl
ss
loopne
sbb
push
repnz
push
push
les
push
fnstcw
dec
test
loop
in
ficoms
mov
mov
es
jle
mov
and
inc
leave
adc
lock
adc
push
dec
repnz
jo
aaa
pop
add
repz
push
jmp
icebp
add
ljmp
mov
cmpsb
cld
stos
cltd
insl
addr16
vmaxpd
push
test
jg
icebp
pusha
xchg
loopne
daa
jno
nopl
cmp
aam
cmpb
out
cs
pop
inc
mov
xchg
insl
dec
mov
rcrb
je
push
mov
dec
out
ret
mov
mov
notl
sbb
movsb
pop
xchg
mov
push
push
xlat
xorl
aaa
or
arpl
cli
fwait
loope
xchg
mov
out
lahf
xchg
out
inc
xor
inc
out
jae
test
fdivl
icebp
lods
jo
mov
adc
fcmovb
push
and
push
int3
mov
cmp
dec
out
cli
jge
ret
push
incb
popa
adcl
lods
mov
push
rcl
sbb
cmp
sbb
cld
aas
jge
cmp
clc
jp
inc
fsubp
add
mov
das
cmpxchg
pushf
push
fcmovne
hlt
xchg
jo
ljmp
add
mov
cwtl
xchg
sub
or
add
leave
mov
call
dec
inc
fisubrl
mov
cmp
inc
repnz
shll
mov
adc
mov
jne
jecxz
mov
push
popf
cmp
into
push
repnz
sub
int
jb
inc
hlt
sar
fnstsw
outsb
arpl
xor
mov
mov
mov
popf
pop
in
test
in
pusha
outsl
movsb
push
popl
push
dec
pop
mov
fisubl
push
cmp
aad
dec
inc
loope
aad
or
shr
mov
xchg
test
into
or
or
pop
loop
pop
lahf
ss
mov
xchg
sti
popa
cld
mov
stc
repz
and
mov
nop
mov
lcall
inc
jo
dec
jp
lock
aad
mov
add
dec
mov
sbb
leave
dec
stos
lds
push
lahf
daa
fs
subb
mov
repz
jno
es
push
icebp
sub
xchg
add
xor
xor
jne
mov
jecxz
aam
pop
sti
inc
dec
loopne
push
jp
mov
inc
sarl
call
stos
inc
pop
outsb
pop
negb
leave
jae
sub
pushf
push
fcmove
lea
jp
daa
inc
xchg
fildll
in
cltd
jne
hlt
adc
jle
or
jnp
std
adc
push
lret
push
dec
mov
add
inc
je
shrl
jnp
xchg
lods
testl
hlt
sbb
mov
mov
adc
enter
in
dec
out
mov
adc
jb
and
adcb
ss
add
inc
inc
stos
jb
dec
sahf
std
movsb
test
aam
sbb
dec
icebp
sbb
push
ret
mov
shrl
ljmp
cmp
inc
loope
loopne
rcll
pop
pop
movsl
push
cmp
pusha
sub
iret
inc
movsb
mov
sub
pop
push
repz
pop
and
mov
push
push
xchg
popa
xor
mov
gs
dec
cmp
or
into
adc
push
adc
sti
sahf
xchg
sub
test
jbe
push
out
push
push
das
rcll
mov
aaa
iret
daa
sub
scas
mov
mov
xlat
ret
dec
push
lea
mov
jp
pop
mov
loopne
cmp
insl
icebp
jge
jecxz
test
adc
sbbl
lcall
in
push
repnz
lods
bound
xor
movsb
cmpl
cli
mov
rep
sbb
push
sahf
shl
add
movsb
cli
mov
adc
add
mov
add
xor
mov
leave
or
aaa
mov
clc
mov
fistps
xlat
jecxz
mov
mov
or
insb
fcmovnbe
pop
xor
das
jo
bound
push
sub
mov
cmp
jg
push
cmpsl
adc
shll
pushw
jmp
clc
add
inc
mov
shr
jnp
push
xchg
sbb
add
or
adc
mov
mov
mov
cmp
dec
loope
and
xchg
loopne
fnstsw
idivl
add
shll
and
sbb
xor
xor
mov
inc
dec
mov
fcompl
push
adc
loope
in
notb
stos
xor
jge
cmpb
cs
ljmp
dec
jbe
sti
mov
mov
cs
cmp
into
iret
data16
fs
bound
icebp
mov
orb
mov
outsl
fs
es
jnp
sub
mov
mov
addl
cli
adc
rcrb
jno
xor
jge
inc
inc
xor
cld
sbb
mov
cmpl
mov
repnz
in
sbb
xchg
in
add
xchg
leave
adc
lret
or
lcall
jb
popf
sbb
mov
sbb
mov
in
mov
jg
into
enter
arpl
ret
pop
jg
xorb
into
mov
mov
clc
nop
inc
dec
xchg
lea
mov
push
ss
xor
mov
js
cs
in
lcall
push
inc
mov
jl
fs
adc
pop
iret
fstpt
insb
repz
mov
mov
sub
cmp
mov
mov
sbb
in
out
stc
lret
inc
mov
int
push
repz
sbb
push
adc
and
test
push
adc
mov
dec
xchg
jg
and
into
add
popl
das
testb
fldcw
cmpsb
xchg
sub
mov
aad
pop
jg
mov
mov
sti
lods
jnp
xor
subb
mov
jmp
cs
jb
test
rcl
pop
mov
mov
lods
jns
add
dec
out
or
jne
jmp
jnp
inc
test
push
mov
or
mov
jo
test
mov
mov
rclb
fcomi
jnp
ror
fiaddl
xchg
leave
testl
mov
push
cli
add
sti
inc
popf
and
xchg
inc
lret
inc
sub
sbb
inc
ljmp
decb
lahf
das
jle
cmp
aas
movl
cmp
pop
dec
cmp
daa
pop
es
pop
pextrw
lods
sti
xchg
jg
lahf
scas
lret
mov
push
data16
out
out
xor
mov
out
test
xor
jle
fstl
sub
hlt
mov
add
addl
sub
lods
call
bound
int3
push
jmp
pop
movsl
jnp
jbe
mov
jns
insl
rorb
cwtl
subb
sbb
test
cmpsb
les
push
push
popa
pop
cltd
lock
scas
hlt
pushf
adc
jmp
loope
dec
aas
dec
add
xor
jle
shll
mov
subb
into
pop
dec
xchg
add
and
push
inc
sti
jge
mov
dec
sub
bound
cmp
pop
aas
inc
adc
mov
jl
cli
fldt
lret
pop
dec
sbb
cltd
std
sub
mov
xchg
sub
xchg
loop
ror
mov
iret
fidivs
cmpsb
int
mov
pop
dec
mov
andb
pop
pop
pop
rolb
insl
jge
jns
imul
add
aam
enter
adc
xorb
sbb
test
and
add
xchg
jno
hlt
xchg
mov
mov
push
lea
loop
ljmp
mov
adc
into
pusha
ss
stos
inc
test
pop
pop
push
jecxz
stos
mov
dec
aaa
test
cmp
xor
mov
jg
aaa
dec
pop
xchg
and
sbb
mov
loopne
fs
insl
jb
scas
inc
es
out
add
xchg
inc
fstl
and
mov
mov
jae
sti
loopne
fsubl
push
mov
in
or
mov
mov
lret
cmc
sti
push
cmp
jge
lret
dec
outsl
adc
pushf
addr16
mov
pop
test
test
aas
xchg
pop
jne
dec
mov
adc
xchg
enter
cmp
lods
insb
inc
fdivrl
inc
lods
add
insb
iret
fst
rcll
loop
stc
test
sub
add
sub
add
pop
xor
or
incb
inc
fdivs
xchg
scas
pusha
xor
xor
lcall
out
pop
lahf
sub
sub
xlat
mov
and
orb
pushf
xor
and
clc
sub
nop
and
scas
mov
fcomip
jmp
imul
scas
push
pop
insl
lahf
mov
lods
fsubrl
dec
cmp
stos
adc
fdivrl
int
mov
mov
gs
sbb
arpl
xor
dec
sbbl
pop
sub
sahf
cmc
das
popa
addl
test
mov
xchg
mov
dec
mov
jae
inc
push
xchg
out
fsubrs
or
inc
rcrb
aas
sahf
jnp
int3
lcall
ljmp
push
mov
enter
mov
xlat
sbb
imul
stos
add
imul
loope
mov
jmp
inc
fidivs
test
lods
mov
inc
stos
ss
mov
xchg
int3
lret
call
lea
sub
inc
out
bound
into
and
jno
rclb
stc
test
xor
leave
lds
push
and
pop
cld
daa
fsts
test
cli
out
cli
ss
es
xor
dec
and
push
push
inc
daa
in
xchg
cltd
mov
push
daa
sub
daa
mov
sub
sarl
mov
adc
xchg
das
nop
or
mov
inc
cli
ret
insl
sub
call
mov
xchg
sbb
pop
adc
mov
mov
vmwrite
xchg
add
dec
xchg
shrl
arpl
cmp
xor
mov
or
mov
xor
push
std
mov
push
push
jl
sbb
and
lret
push
mov
lods
xchg
jle
adc
cltd
pop
sarl
mov
xchg
or
jns,pn
cmp
rcrb
xchg
jp
icebp
mov
and
in
out
cwtl
inc
adc
pop
mov
imul
jl
rclb
mov
pop
jbe
cmpsl
dec
sbb
mov
sub
repz
sub
dec
rcrb
bound
ja
test
xchg
inc
mov
test
fwait
sti
adc
mov
jle
and
popf
xor
cld
jbe
xor
push
jp
or
mov
test
xchg
inc
shlb
push
aam
rclb
cmc
xchg
push
sbb
and
movsl
in
sub
dec
sbb
pop
lcall
cmp
je
out
xor
adc
inc
cld
dec
pop
call
cld
xlat
ljmp
mov
psrad
test
jo
add
clc
xchg
loope
outsb
jl
mov
or
jge
dec
es
leave
jl
test
xor
scas
pop
mov
int
fcoms
fistpll
jp
cli
imul
adc
les
mov
ja
cmp
dec
cmp
ja
jae
sub
jmp
out
scas
mov
jb
cmp
daa
push
inc
or
sahf
les
les
mov
imul
stos
decl
out
pop
sub
sub
dec
pop
aad
xchg
add
cmp
add
push
mov
cmpsl
xor
jle
xchg
push
jg
cld
mov
push
stos
rcr
push
lods
mov
sbb
dec
ret
xchg
test
dec
in
inc
lds
in
sbb
mov
mov
adc
clc
adc
into
cld
adc
loop
adcb
fs
loopne
inc
psubq
dec
test
inc
into
mov
pop
xor
or
push
mov
call
mov
cmp
out
adc
je
pushf
popa
or
mov
sbb
mov
nop
hlt
jmp
cmp
jmp
push
shl
sub
xchg
mov
ficoms
pop
test
cwtl
sub
daa
inc
or
xor
push
es
add
dec
xchg
lea
jg
push
xchg
sbb
testb
pop
xchg
test
push
lcall
inc
cwtl
push
mov
inc
pop
ja
incl
xchg
sub
adc
icebp
sbb
push
sub
dec
lods
mov
insb
iret
jbe
or
pop
and
insb
jne
jo
push
das
test
pop
cmp
xor
dec
pop
lods
jl
push
push
mov
sbb
xchg
dec
imul
ffree
insb
fildl
and
imul
pop
dec
sbb
push
les
cmpsb
imul
xor
and
pop
aad
int
add
mov
dec
sbb
cmc
ljmp
movsb
jno
adc
je
pop
mov
push
loop
xor
mov
mov
inc
clc
movsl
jl
cmp
inc
pop
ret
mov
mov
fucomip
xchg
jl
enter
aam
dec
add
inc
into
fdivl
xor
dec
push
or
push
loop
sbb
mov
cmp
nop
pop
xor
push
mov
daa
jmp
xchg
mov
ss
outsb
fwait
sbb
pop
fisttps
mov
or
shrl
out
dec
pop
ljmp
mov
and
cli
or
lods
test
jb
bound
xchg
and
adc
sub
mov
sub
and
mov
pop
call
and
in
cld
mov
sbb
jnp
cmpsb
jge
jge
jns
mov
stos
mov
imul
pop
mov
lods
inc
mov
sbb
cmpsl
xor
mov
pop
cs
pop
ret
xor
dec
pop
xor
roll
ret
adc
repnz
lods
dec
loopne
mov
gs
jge
add
movsb
pop
pusha
xchg
sbb
push
shrl
cmp
and
bnd
mov
std
lcall
in
mov
aad
test
dec
jg
sub
jne
test
jne
jnp
shll
repnz
popf
ret
xchg
retw
add
hlt
xchg
out
sahf
cmp
punpcklwd
dec
ja
cwtl
lea
cmp
or
pop
outsl
inc
mov
data16
lcall
stos
xor
int
call
cmp
negl
xchg
cmp
or
mov
jnp
sub
or
sbb
fistps
inc
push
movsl
enter
mov
repnz
into
fmull
daa
dec
mov
outsb
nop
daa
jo
inc
xor
mov
push
movsl
mov
dec
inc
mov
loope
dec
sarl
or
add
pop
mov
mov
test
out
cmc
xchg
and
xchg
mov
testb
int
sbb
xchg
jmp
mov
or
iret
out
push
repnz
aam
std
xlat
ffree
xchg
scas
xchg
clc
mov
jbe
push
movsb
kmovb
into
jne,pn
inc
push
lds
cmp
push
cmp
in
cmpsb
shl
push
imul
ss
scas
push
lock
out
sub
mov
mov
ret
jnp
sti
lds
ds
insl
sarb
add
ret
pop
push
in
std
fadd
xchg
dec
lret
add
lret
or
movsl
xchg
mov
cmp
cmpsl
xor
popa
jle
pusha
push
jp
shrb
testb
mov
imul
mov
cmpps
push
cmp
cmp
xchg
bound
js
sub
rcl
and
sbb
dec
test
sbb
xor
push
xchg
fs
and
add
inc
sbb
stos
ret
push
aaa
push
push
movsl
movsl
subb
repnz
or
pop
cmp
add
cmc
dec
dec
mov
lds
jle
mov
inc
sub
cs
inc
clc
ret
dec
movsl
add
mov
cli
jmp
addl
test
jmp
mov
in
or
xchg
and
outsb
loope
sti
xchg
mov
push
xor
adc
dec
sbb
jp
push
out
jecxz
jo
cmp
jmp
lea
xor
pop
ret
outsb
jnp
out
push
cmp
mov
sbb
lds
cmp
ds
cwtl
xor
add
and
addr16
adc
mov
cmp
dec
mov
or
test
sbb
repnz
xlat
cs
xchg
popa
jg
cs
pop
fwait
ret
xor
aas
in
imul
out
arpl
ss
jne
enter
fldcw
or
mov
popf
xchg
mov
in
cmc
js
data16
or
in
mov
test
es
jb
int3
std
mov
fstpl
out
or
jle
pop
xor
sub
jl
sub
test
xchg
dec
jp
pop
inc
stc
mov
mov
aam
and
inc
jno
xor
addr16
and
mov
jp
dec
inc
lea
ja
cmp
cltd
and
lret
cmpsl
out
jno
adc
inc
shlb
jns
iretw
loope
mov
pop
lret
add
cmpsb
mov
jne
cmp
jecxz
dec
sub
jg
xor
pop
fcmovbe
adc
or
sub
mov
movsl
lret
outsb
xor
stos
adc
add
mov
mov
mov
xor
js
aas
out
pop
bound
cmpsb
ja
dec
adc
inc
inc
push
sahf
xchg
lcall
sub
sahf
iret
lock
leave
mov
or
fdivrl
jmp
jmp
inc
lock
cmpl
loopne
out
iret
fimull
sbb
and
call
lret
movsl
js
sbb
adc
jecxz
ja
xchg
mov
jo
das
test
in
pop
mov
int
dec
push
cmp
je
pop
mov
jno
ja
push
inc
adc
xchg
mov
mov
out
mov
int
xlat
and
lret
push
imul
out
xor
xchg
push
bswap
mov
imul
in
test
call
js
push
ret
adc
insl
lcall
mov
je
mov
jo
sti
shll
xchg
push
shl
xlat
pop
mov
mov
jns
loope
xchg
xchg
das
push
adc
fsubrl
push
imul
scas
add
push
jmp
pop
inc
cmp
push
and
frstor
pop
ret
pop
shl
ffreep
add
sbb
lds
xchg
mov
jb
pop
aad
inc
clc
test
add
icebp
mov
and
mov
sbb
mov
aaa
std
xor
inc
sbb
sbb
insb
jle
pop
dec
rcl
lcall
mov
ret
outsl
push
mov
pop
subl
mov
pop
or
and
cmp
sub
dec
xchg
xor
out
js
addr16
pop
push
icebp
lods
and
inc
cmp
xchg
pop
movd
jnp
cs
xor
and
jne
int3
push
arpl
shrb
es
dec
push
jnp
pop
xor
xlat
dec
push
mov
daa
out
test
and
push
mov
gs
data16
outsl
lods
push
inc
flds
fistl
or
popa
loopne
in
add
sti
sbb
lods
iret
inc
pop
adc
sub
inc
xchg
aam
in
xchg
add
mov
test
pushl
and
mov
test
push
in
inc
fstl
mov
mov
mov
fildl
pop
adc
xchg
dec
mov
mov
mov
fmull
dec
cld
ss
roll
outsl
jge
adc
xchg
insl
jne
xor
add
pop
cmp
jecxz
popf
rorl
inc
stos
xor
mov
push
push
je
and
inc
mov
jmp
lret
and
arpl
and
decl
xchg
adc
jnp
xor
insl
popa
mov
cmp
out
dec
pop
mov
xor
dec
ret
push
hlt
pop
add
ds
jno
lods
push
iret
or
sbb
mov
jo
adc
scas
in
mov
sahf
cmp
out
movsl
dec
repnz
ja
pop
shl
jns
cmp
into
cmp
enter
adc
in
inc
sbb
pop
mov
jle
je
lock
loop
repz
inc
and
loope
dec
push
gs
addr16
bound
lret
push
xor
dec
cmp
test
in
xchg
fsubl
jg
ret
rorl
rol
lods
insl
mov
pop
adc
push
bound
stos
std
es
sub
lods
jns
test
add
inc
jae
lcall
jo
loopne
jecxz
lahf
cmp
dec
dec
and
ds
jbe
add
adc
fisubl
jne,pt
mov
movsl
fdivl
jb
pop
mov
sub
xor
mov
out
sbb
in
xchg
sahf
cmp
scas
adc
outsl
shlb
jb
in
rcrb
ljmp
loope
sahf
and
les
bound
jp
pop
jo
out
push
jp
sub
testb
sbb
xor
adc
adc
fstpl
addb
mov
int
pop
adc
ficompl
jmp
cs
cmpsb
xor
lods
ljmp
in
push
ds
cwtl
hlt
mov
movsb
mov
adc
adc
mov
sub
dec
lods
pop
ret
xorl
mov
push
mov
lds
push
fildll
mov
icebp
in
cltd
xor
loop
mov
push
sarb
jb
imul
les
sbb
pop
mov
mov
and
fdiv
adc
jge
scas
call
lret
cmc
sahf
or
jge
ficomps
lret
push
adc
inc
xor
in
insl
ss
pop
outsb
aad
cmp
or
push
sub
std
outsl
out
stc
test
xor
adc
subl
jbe
or
pop
xor
int
mov
mov
add
popa
hlt
or
and
cmpsl
lcall
das
mov
push
leave
sbb
rcrl
aaa
and
adc
jnp
jmp
push
cmpsl
enter
lret
outsb
outsb
jp
ret
int
mov
orl
shl
hlt
adc
dec
clc
iret
stc
inc
fnstcw
and
xchg
xchg
jmp
dec
xchg
jecxz
mov
out
jmp
inc
lods
cmp
xchg
add
mov
cmpsb
test
decl
inc
cld
movq
inc
icebp
mov
mov
insl
sub
adc
adc
out
jl
pop
in
stos
cltd
jg
pmaxub
lret
mov
jnp
pushf
rolb
push
sub
repnz
out
daa
movsl
lods
jg
cli
xchg
gs
jns
cmc
adc
loop
imul
mov
xchg
xchg
pusha
leave
cmp
push
pop
dec
testl
pop
mov
add
sahf
or
dec
cmc
push
loopne
roll
aaa
sub
lock
je
call
in
fxch
jle
popa
xor
pop
bound
dec
jecxz
xchg
out
je
xchg
add
imul
sub
and
mov
imul
clc
and
icebp
pushf
lea
and
mov
fstpt
xor
mov
and
outsl
daa
dec
mov
aam
lcall
aad
in
push
mov
xchg
xor
subl
out
adc
jnp
cmp
mov
push
imul
loopne
push
push
mov
fucomip
mov
fidivl
add
push
ss
scas
add
test
and
iret
inc
lret
push
stos
inc
cmp
imul
xchg
aad
xor
inc
jno
shr
jmp
xor
add
aas
pusha
xchg
adc
bound
mov
cmp
std
jle
push
popa
lret
mov
jbe
and
pusha
stos
jl
sub
cld
mov
loop
lcall
fprem
dec
xchg
loope
pop
add
out
sub
cmp
and
adc
stos
pop
mov
inc
xchg
jle
mov
fst
out
pop
pop
call
inc
fsts
bound
lret
into
mov
xchg
test
mov
and
rclb
shrb
dec
data16
adc
pop
movsl
dec
bnd
xor
mov
adc
sti
sub
dec
mov
mov
out
sbb
xor
aam
stos
lds
sti
gs
push
sbb
jb
pushf
jecxz
xchg
cmp
sahf
lret
int3
or
in
mov
in
inc
aaa
sub
pop
mov
inc
into
ljmp
lock
dec
mov
xchg
jl
xchg
dec
notl
test
add
ds
mov
adcl
pop
push
push
xchg
stos
pop
jbe
cmc
mov
out
mov
mov
dec
aam
rcll
addr16
push
sub
mov
fbstp
xchg
mov
lds
mov
outsl
push
jo
xor
outsl
xor
mov
dec
mov
xchg
testb
lods
mov
pushf
lcall
adc
xchg
nop
jp
popf
pop
push
push
pop
aad
mov
mov
test
imul
scas
inc
cmp
xchg
cwtl
pop
int
adc
mov
pop
push
test
cmpsb
sub
or
xlat
icebp
mov
jns
int3
ljmp
adc
cmc
sub
xor
std
cltd
clc
xchg
mov
sbb
pop
sbb
nop
add
cmpsl
icebp
xlat
inc
mov
xor
hlt
jnp
inc
roll
mov
js
js
jnp
in
push
movsl
stos
and
fcmovne
sub
or
adc
mov
ds
and
arpl
in
mov
mov
shlb
sub
into
ss
mov
sbb
jo
or
cmpsl
mov
jnp
mov
pop
fnstcw
lret
push
es
pop
das
repnz
jg
jnp
jecxz
xor
fisubl
cmpsb
sbb
sub
cmpsl
xchg
cs
repz
fsubs
dec
inc
add
xchg
or
mov
fwait
movsl
mov
out
and
in
inc
push
or
out
test
inc
pusha
xor
push
out
or
cld
xchg
cmc
mov
loope
pop
lahf
lret
pop
sarb
xchg
jle
mov
or
aas
cmp
fwait
dec
push
or
popl
cmp
mov
lock
test
cli
dec
push
fcmovnbe
push
push
aad
xlat
ljmp
mov
push
xchg
sub
cmp
cmp
cmpsl
pushf
das
mov
enter
xor
mov
sti
pop
sbb
push
adc
notb
add
dec
cmc
or
mov
cmp
inc
jae
mov
inc
jmp
or
nop
pusha
iret
test
ja
lods
mov
aam
repz
or
clc
inc
shlb
pop
movsb
xchg
inc
inc
ja
js
sbb
out
add
movsl
and
btr
std
aas
dec
cmpsl
xor
mov
repnz
imul
push
or
loopne
add
xrelease
mov
cmpb
addr16
daa
xchg
lret
sbb
jnp
xchg
add
mov
adc
lds
adc
inc
repz
jns
dec
popf
cltd
sub
adc
sbb
cmpsl
adcb
mov
lods
mov
ja
push
insl
add
or
jle
mov
mov
jne
sub
movsl
adc
loope
sbb
daa
or
sbb
jge
xchg
out
scas
sub
pop
xchg
movsl
nop
push
add
mov
das
cwtl
out
inc
fistpl
mov
mov
or
sti
mov
sub
test
xor
mov
mov
mov
push
push
iret
test
out
loop
in
test
pop
ja
test
stos
or
jmpw
sbb
jb
cmp
imul
imul
rolb
mov
out
xchg
ljmp
testb
mov
jmp
sbb
icebp
sbb
pusha
jl
pop
cmp
psubw
sub
xlat
outsb
arpl
imul
mov
dec
cmpsb
add
aad
lcall
sahf
mov
movl
fsts
dec
mov
aas
in
jp
loopne
pop
mov
sub
cmpsb
add
int3
je
cmp
fcomps
aad
mov
ret
jns
push
xchg
negl
sti
jae
push
scas
mov
sub
imul
repz
jge
les
mov
jb
lods
pop
js
shrb
mov
loopne
nop
cmp
in
ljmp
shrb
mov
jne
push
inc
popf
pushf
mov
enter
mov
and
push
call
ds
arpl
dec
iret
inc
imul
push
mov
sub
ljmp
push
insb
xchg
in
jns
call
cmpsl
dec
loope
into
push
lock
sbb
rcll
orb
mov
in
fstpl
jmp
out
xchg
jp
mov
mov
push
adc
les
data16
outsb
pop
adc
ds
clc
test
jo
fdivl
aam
push
fldt
cmp
std
and
xor
pop
dec
sahf
jae
pop
jns
push
aas
jo
sub
xchg
pusha
ds
insb
add
out
and
or
fnstcw
fwait
sub
dec
mov
pop
jns
je
or
gs
and
popa
std
clc
jmp
pop
insl
mov
mov
out
sub
jne
lock
add
adc
cmpsl
ds
cli
xchg
fcomps
or
je
loop
xchg
xchg
xor
push
mov
lcall
mov
jg
hlt
sub
scas
shrl
gs
mov
and
sbbb
inc
mov
or
cmpsl
fstpl
nop
adc
pop
and
in
add
sbbl
mov
and
stos
sahf
es
add
icebp
movsl
sbb
inc
scas
loope
cwtl
fldl
sti
mov
mov
sahf
pushf
cli
xchg
mov
lea
sub
mull
cmpsl
mov
data16
je
dec
inc
xchg
sbb
std
sbb
xchg
pop
movsl
dec
pop
or
int
or
mov
mov
lods
mov
mov
call
add
cmp
or
rclb
test
and
xor
cmp
push
es
nop
daa
dec
dec
dec
hlt
insl
stos
sub
add
pop
sbb
arpl
xor
jnp
hlt
sbb
add
sub
or
nop
nop
ljmp
jns
gs
jbe
add
push
in
das
dec
inc
sbb
mov
dec
repz
sbb
mov
mov
xchg
fsubrl
xchg
incl
mov
imull
jle
add
or
les
xchg
scas
xor
or
sub
dec
call
push
lds
les
enter
lahf
icebp
mov
jnp
mov
lret
pop
mov
cltd
in
push
xor
xor
inc
push
sub
popa
mov
shlb
dec
mov
adc
xor
pushf
bound
movsb
inc
pop
mov
jb
lret
pop
pop
imul
push
jle
into
xor
jo
in
cmp
cmc
aaa
cmp
test
es
cmpsb
sbbl
cmp
rorl
clc
cmp
lret
jg
mov
jo
and
pushf
mov
add
fs
pop
insb
addl
in
sub
push
or
rcl
and
imul
data16
cltd
push
mov
sahf
imul
push
hlt
lret
lds
cmpsb
mov
stos
push
adc
stos
mov
scas
bound
pause
inc
loope
idiv
mov
mov
sbb
cli
ss
out
jp
shlb
jne
out
xchg
or
enter
adc
xor
dec
xchg
mov
dec
addl
add
pop
sub
adc
outsl
iret
push
mov
add
aaa
fldcw
mov
ljmp
aam
mov
push
mov
nop
sbbb
jno
push
lock
out
pushf
jae
add
xchg
popl
arpl
lods
mov
insb
jmp
mov
fisttpll
push
push
adc
add
adc
scas
fucomp
loopne
add
mov
cmp
div
mov
push
jl
mov
aaa
mov
sbb
fdivrl
sub
adc
sub
xchg
push
jl
cmp
out
pop
mov
sbb
inc
mov
mov
test
in
xchg
pop
loopne
and
cmp
xchg
daa
cmp
inc
inc
fdivl
cmp
push
inc
in
out
and
ficoml
inc
or
mov
fs
adc
or
les
cmp
fwait
loope
idivl
xor
mov
popf
pop
bound
jnp
push
jbe
pop
cld
aam
mov
cld
fldt
jae
cmpsl
insb
lds
or
mov
cmp
rol
loopne
cmpsl
rolb
adc
pop
xor
or
scas
jp
fldenv
mov
js
mov
imul
mov
mov
fcmovnbe
sub
sbb
jo
push
jl
shrl
pop
pop
adc
insl
xchg
add
pop
repnz
cli
imul
mov
pop
mov
add
mov
dec
cmc
mov
pop
jmp
pop
mov
pushf
stos
jmp
xchg
adc
mov
in
enter
or
ds
xor
inc
push
in
movsl
and
xchg
pop
jl
push
mov
jmp
adc
jg
out
rcrb
add
mov
fisubrs
xchg
push
jno
arpl
test
add
jno
dec
mov
lods
push
adc
aaa
and
adc
mov
popw
add
test
cmp
jge
in
addb
cltd
sbbb
and
dec
adc
aam
insl
jae
and
addl
xor
sbb
aad
inc
js
jp
in
mulb
test
js
xor
mov
push
adc
clc
cmp
mov
lods
mov
fcompl
jnp
negb
movsl
sbb
outsb
pop
clc
ret
sbb
add
xor
ficompl
lock
mov
push
adc
test
push
cmp
lods
icebp
sbb
sub
ljmp
lods
imull
adc
mov
imul
daa
je
xor
push
mov
push
sbb
jbe
fdivs
push
xor
imul
shrl
xor
add
std
pop
outsb
popf
mov
fnsave
es
loop
mov
and
imul
jmp
mov
pop
aaa
scas
lds
cmp
test
jnp
aam
repnz
test
push
addr16
insb
mov
mov
pushf
jge
test
jne
leave
push
push
adc
xchg
and
cwtl
dec
mov
lcall
scas
mov
sbb
fildll
mov
sub
loop
mov
xorl
pusha
or
in
jg
aas
mov
inc
sub
out
sub
mov
int3
jl
repnz
mov
sub
aas
call
arpl
and
add
mov
out
shl
cmc
or
cs
repnz
sti
cmpsb
lret
xor
loope
mov
pusha
dec
int
repz
jb
or
out
mov
std
nop
out
popf
lods
mov
movsb
jecxz
pop
ljmp
mov
pop
daa
dec
repz
mov
not
dec
fstpl
jl
shl
repz
lret
nop
push
jae
inc
or
mov
popa
mov
test
and
into
sbb
xor
xlat
cld
mov
adc
adc
mov
xchg
shrl
es
cwtl
adc
add
cmp
inc
add
fstpt
pop
pop
sub
in
test
or
dec
xchg
jp
jno
inc
push
test
xor
aaa
xor
std
mov
jo
dec
and
add
cmc
fwait
add
popa
dec
mov
dec
stos
lcall
cmpsb
and
ss
ret
cltd
mov
aad
xor
bnd
aad
dec
add
fs
jno
lret
bound
mov
dec
push
in
out
mov
in
inc
dec
or
leave
cld
xor
aaa
xchg
rclb
in
jecxz
ja
fistpll
pop
in
stos
test
inc
fsubr
lcall
insl
or
push
aad
mov
enter
outsl
daa
test
cwtl
out
fcompl
jns
pop
push
lahf
clc
outsb
or
cmp
sbb
inc
aad
shl
cmp
repnz
out
sti
push
fsubrp
jg
cmp
cmc
les
insl
lds
inc
pop
lret
dec
fsubrp
daa
inc
push
xchg
jp
push
insb
mov
in
inc
or
lret
lret
mov
loopne
jmp
mov
arpl
sar
pop
sarl
cmpsb
popf
pop
mov
dec
mov
loopne
lock
in
inc
cltd
int
fdivrs
cmp
adcl
push
jle
test
add
jb
inc
lods
scas
scas
push
pop
adc
fldenv
cmc
xchg
xor
int
cmp
shll
jne
sub
inc
ja
mov
push
mov
fsubrp
ret
mov
fs
rcr
arpl
cmp
mov
jg
mov
push
cmp
mov
je
lcall
ds
mov
loop
addr16
inc
je
fisubrl
pop
fwait
out
inc
dec
xchg
xchg
call
inc
out
jae
in
out
pusha
pop
ret
or
lahf
and
lds
pop
outsl
fisubrl
and
testb
leave
pushf
bound
push
sahf
mov
push
cmp
cmpsl
mov
adc
out
xchg
imul
in
adc
xor
xlat
cmpsb
jns
xor
dec
mov
je
push
jge
test
insb
jle
insl
jp
pop
xor
mov
and
ds
int
out
leave
mov
mov
cmpsb
loopne
lcall
adc
xchg
enter
sub
sub
sub
lret
mulb
adc
stos
in
mov
xlat
lods
dec
fsincos
lcall
loop
jmp
test
jp
cmp
cmpsb
mov
pushw
sbb
les
mov
rol
jo
out
movsb
dec
pop
andb
int3
in
mov
inc
xchg
push
inc
scas
xor
jno
pop
sub
and
mov
test
enter
or
mov
mov
sbbl
push
mov
push
insl
xor
std
jmp
pusha
add
jl
dec
mov
ja
xchg
mov
mov
test
mov
jae
sub
mov
sahf
mov
sarb
adc
jecxz
bound
fnstcw
inc
sbb
mov
xchg
out
cmc
rclb
and
sahf
stc
or
pop
mov
sub
scas
nop
sbb
shll
dec
mov
adc
ret
add
leave
pusha
or
jns
out
push
adc
dec
sbb
pop
push
push
in
dec
arpl
inc
lcall
inc
lahf
mov
test
scas
mov
sbb
negl
test
lret
jae
sti
ret
mov
dec
pop
insl
xlat
sub
jbe
stc
out
pop
jge
cmc
shrb
roll
push
adc
fidivl
xor
negb
push
movsl
pop
mov
sub
lret
iret
lcall
mov
add
inc
adc
sub
bound
scas
sub
pop
or
movsl
in
xchg
jecxz
cmp
js
scas
jmp
xlat
mov
xlat
inc
add
xor
adc
mov
xor
les
arpl
sbb
adc
stos
pop
insb
or
pop
mov
adc
sub
inc
rcrb
adc
jne
ds
cmpsl
add
add
fdivl
cmpsl
sub
sub
rcll
adc
dec
adc
negb
pusha
or
inc
mov
inc
sub
arpl
dec
sub
in
adcl
gs
xor
loope
sub
push
or
sub
rclb
imul
pop
and
xchg
ljmp
imul
jge
cmpsl
pop
aaa
inc
scas
xchg
js
dec
cmpsb
adc
sbb
xor
dec
std
and
ror
pushf
js
push
ret
data16
jmp
leave
inc
ret
dec
adc
mov
in
sub
iret
je
ja
jnp
pusha
pop
movsb
dec
lcall
pop
in
sub
inc
push
mov
mov
sbbl
ficompl
xchg
das
xchg
imul
arpl
cld
data16
jnp
outsb
push
ss
mov
dec
pop
fxtract
leave
mov
pop
test
out
pop
sub
pop
jge
or
pop
pop
or
cmpb
xchg
sub
out
movsl
in
scas
cmp
mov
mov
not
sub
pop
dec
scas
add
inc
dec
shrl
push
mov
push
lea
jl
sarl
cmp
in
pop
sub
mov
stos
inc
in
cmp
add
in
cmp
adc
out
and
jnp
pop
cmp
mov
mov
adc
gs
lods
mov
iret
ss
jne
push
add
sbb
inc
pusha
fcoms
add
jle
pop
into
mov
fmuls
mov
jnp
mov
bnd
and
xor
or
outsl
cmpsl
pop
pop
xchg
cmpsb
dec
fadds
insl
std
mov
mov
mov
mov
lods
jmp
push
lret
jo
scas
ret
mov
jae
data16
das
cltd
mov
jno
xor
push
jne
rolb
inc
shlb
and
stos
xchg
imul
outsb
out
sbb
inc
cmpsb
mov
test
ja
test
lcall
cmp
fcomip
aad
stos
mov
sti
mov
adc
fistps
push
int
jle
mov
adc
push
sbb
jae
in
fstpt
adc
cmpb
imul
dec
or
sbb
mov
jg
sub
sub
sbb
std
push
aas
xor
pop
sbb
inc
push
pushf
mov
xor
mov
pop
scas
or
rcrl
fisttps
mov
mov
cli
cli
or
insl
cs
test
and
pop
out
cmp
stos
jmp
adc
fwait
xor
hlt
jge
addr16
pop
mov
dec
inc
loopne
das
jp
inc
movsl
mov
or
pxor
mov
in
xchg
add
cmpsb
in
lcall
mov
js
andl
adc
cmp
or
add
mov
pop
or
lret
push
cs
sub
inc
aam
dec
pop
push
sbb
int
aaa
push
sub
lret
shrb
mov
xchg
cmp
jno
mov
cmp
insl
je
fwait
mov
and
cltd
push
shll
pop
fisubrl
mov
push
or
mov
icebp
mov
loopne
cmpsl
xchg
aaa
mov
sti
fstp
jmp
mov
imul
mov
or
lods
inc
int3
popf
cmp
jp
push
lods
jecxz
std
push
sub
dec
ret
outsb
adc
int
xchg
outsb
imull
clc
std
and
shr
mov
mov
lods
or
push
ljmp
cmpsl
jge
xor
daa
xchg
das
addr16
ljmp
fimuls
test
adc
cmc
xchg
adc
stos
jmp
mov
cmp
lcall
insb
push
dec
outsb
dec
add
mov
loop
rorb
dec
push
stos
flds
add
inc
ret
xchg
mov
push
ret
lods
jb
loopne
mov
test
fiadds
xchg
popf
dec
scas
adc
adc
ds
std
lret
and
cmp
fcoms
bound
aaa
mov
in
das
stos
cld
aad
adc
sti
add
adc
mov
xchg
jge
aad
lcall
jno
popa
in
shr
cld
lcall
cwtl
stos
mov
mov
xchg
dec
test
sub
je
push
scas
cmp
shll
clc
mov
sbb
adc
gs
xorb
xchg
mov
xchg
enter
jns
pop
mov
fstpl
nop
cltd
push
sub
aas
pop
add
addb
cmp
jo
test
jge
das
xor
sbb
ja
shl
adc
dec
fnstenv
or
adc
and
mov
fcoml
push
lea
mov
and
mov
fstl
jno
pusha
lret
into
pop
cmp
xor
ror
lret
test
push
jmp
insl
jge
jg
add
mov
mov
int3
sbb
xor
sbb
jns
mov
cmpsb
ret
mov
imul
mov
dec
leave
faddl
jmp
xchg
pop
inc
popf
pop
movsb
daa
cmp
dec
call
and
mov
icebp
and
sbb
mov
sub
or
mov
xchg
pop
mov
xlat
or
pop
movsl
cmp
sub
repz
mov
dec
enter
loopne
lods
pop
cmpsl
mov
push
fisubrs
fsubrs
leave
mov
sbb
das
cmpb
lods
imull
aas
push
jae
or
sbbb
mov
sti
arpl
mov
push
sbbl
aas
bound
pop
lret
ljmp
mov
xchg
xor
xchg
cmp
rcr
inc
push
adc
cmp
xor
sub
jle
mov
push
jnp
ret
nop
lret
push
adc
mov
sub
lahf
fsub
in
xchg
cld
sti
fidivl
fisubs
adc
inc
lahf
mov
maskmovq
negl
bswap
out
icebp
lock
dec
cmp
dec
insb
push
insb
lcall
pop
movsb
test
xchg
mov
out
imul
fdivrl
pop
push
push
and
mov
imul
imul
cwtl
es
cld
or
push
xor
cmp
int3
sarl
pop
jb
mov
std
pop
iret
inc
loope
addr16
lods
inc
cmp
repz
test
outsb
lods
lcall
mov
movsb
shrb
in
jo
sub
inc
adc
iret
jecxz
adc
ss
std
adc
mov
shr
xor
bound
push
inc
mov
cld
je
divb
push
sahf
adc
jno
sbb
shl
jbe
loope
jno
push
kmovw
and
mov
ret
add
pop
xor
xchg
clc
rcr
cmpsb
jp
icebp
lcall
ljmp
sbb
or
jp
fdivl
jle
dec
in
nop
fisttpl
addr16
lcall
xchg
push
aaa
sbb
inc
pushf
and
jne
mov
cmp
mov
mov
xor
pop
imul
mov
mov
pop
add
subl
dec
leave
lods
jmp
or
jb
daa
mov
push
sbb
in
mov
hlt
aaa
fstps
lcall
addr16
push
pop
rorb
mov
sbb
repz
inc
mov
fisubrs
pop
fildll
jge
pop
add
jb
dec
push
in
jno
cmpsb
sbb
bswap
xor
cmp
jge
fs
mov
dec
cmp
or
pop
ja
insl
test
in
mov
repz
jmp
push
jge
pop
scas
negl
fildll
push
and
or
mov
sub
and
test
mov
pop
dec
fsubrp
pop
jmp
das
or
pop
hlt
jo
fsubl
inc
lods
repnz
out
adc
aaa
push
push
mov
lods
sbb
call
jno
leave
inc
and
sbbl
shll
xor
cwtl
fucom
cmp
pop
xchg
mov
push
movsb
sti
into
nop
sub
jb
andl
jo
add
mov
daa
mov
pop
jae
add
lods
push
mov
andb
push
pop
or
xchg
loop
push
popf
es
sbb
repz
and
jo
xrstors
push
test
pop
and
xchg
pop
ljmp
fwait
clc
sbb
xchg
pop
cwtl
addr16
mov
pop
jb
fucomip
hlt
fsubrs
lcall
bnd
push
pop
xchg
repz
hlt
daa
in
pop
insb
push
shlb
add
es
lret
fwait
add
aam
pop
fidivrs
mov
jbe
dec
daa
xchg
adc
mov
sub
fdivs
iret
xchg
mov
mov
sbbb
rorl
lds
sub
lods
jmp
ret
movsb
popf
inc
adc
iret
add
ss
jle
sbb
or
test
scas
mov
sub
push
fs
daa
mov
fcmovnu
or
mov
test
imul
movsb
mov
xchg
adc
inc
inc
mov
les
ss
aaa
dec
lcall
pop
jge
mov
mov
mov
rcr
popf
jno
dec
loope
add
test
xor
std
sub
or
xor
loope
rcll
add
push
insl
xor
dec
pop
ss
nop
jmp
daa
sbb
cmp
cld
outsb
and
jbe
mov
push
subl
inc
loopne
cmc
enter
int
aad
inc
dec
push
dec
cltd
or
in
stos
pop
mov
icebp
mov
data16
sub
dec
test
add
push
out
mov
fwait
mov
dec
mov
push
add
mov
or
ffree
and
cld
pop
cltd
mov
shl
imul
iret
push
dec
jne
movsl
shl
ja
mov
and
stc
shr
mov
sti
mov
popa
jmp
xor
das
or
dec
js
push
lret
push
add
xor
leave
jno
jns
ljmp
out
cmpsl
rcll
or
mov
pop
cmp
add
out
mov
add
mov
and
rclb
scas
lcall
add
stc
jp
or
nop
xlat
dec
pop
mov
xchg
pop
jo
sub
aam
and
or
xchg
fstpl
cltd
sub
pop
mov
and
test
sbb
stos
fidivrs
pop
mov
lahf
lcall
in
lds
das
push
and
jae
xchg
insl
fcmovnbe
pop
out
sahf
xor
sub
pop
loop
cli
xor
push
inc
ss
push
inc
xchg
sub
sbb
cmp
fisubs
lret
into
pop
mov
sahf
cmc
jge
jle
outsl
ja
ret
andl
sar
mov
sub
xorl
shrl
or
mov
fidivl
jbe
xchg
dec
jp
stc
push
stos
inc
rcrl
cltd
mov
hlt
mov
ret
dec
sbb
imul
imul
imul
dec
cli
stc
nop
sub
jbe
push
dec
andl
nop
inc
fcompl
xor
pop
insl
cltd
popa
clc
lret
scas
aaa
in
xchg
pop
pop
mov
xchg
push
rclb
xchg
pop
sbb
fidivs
pop
stc
sub
ret
popf
out
in
icebp
adc
fwait
je
cmp
add
mov
and
push
sub
pop
pop
mov
fbstp
push
fstpt
and
cmp
pop
add
mov
mov
repz
push
mov
xor
popa
std
inc
divb
jge
dec
pop
mov
shrl
inc
push
std
mov
mov
rorb
fucompp
inc
test
cmp
jo
loop
stos
fisttpl
sbb
in
mov
div
cmp
mov
out
sti
adc
test
lea
fwait
aaa
sbb
xchg
arpl
adcl
mov
repnz
in
jmp
adc
xor
shll
pop
repnz
sbb
push
and
cli
mov
mov
xlat
and
jecxz
shl
cmp
mov
inc
mov
mov
fidivrs
mov
js
ds
out
dec
lds
imul
jno
cld
xchg
ficoms
fwait
cld
ret
xor
ss
sub
addr16
jl
mov
xor
loop
pushf
test
data16
fldcw
test
dec
jbe
dec
xlat
mov
movsb
repnz
lea
add
push
ljmp
mov
sbb
sub
ds
pop
in
xchg
fmull
or
dec
sub
dec
shrl
or
jmp
out
test
ds
sarb
jb
xchg
arpl
xchg
sbb
xlat
clc
pop
mov
xchg
jmp
into
jmp
add
nop
cmpsb
xchg
or
ret
pop
hlt
hlt
out
dec
sbb
sub
icebp
jb
sbb
adc
xchg
out
cli
fs
mov
push
mov
xlat
add
mov
add
add
sbb
js
push
push
daa
cmp
sub
pop
movsl
lcall
iret
jbe
mov
pop
stc
or
insb
push
inc
lret
add
ret
push
mov
enter
mov
or
int
stos
jne
repnz
stc
stos
push
sub
pop
es
movsl
je,pt
bnd
cmpb
movsl
int
cmpsl
jns
and
cmp
mov
ret
jmp
mov
aas
test
lods
loope
inc
outsl
or
pusha
ret
xor
daa
push
push
xor
in
lret
data16
add
dec
rol
jmp
aaa
rcr
jle
dec
sub
dec
jns
andw
jge
jmp
and
and
inc
fstps
out
int3
jge
lret
out
je
mov
int
sbb
rorl
mov
jmp
adc
popf
xor
inc
inc
cmp
ss
subl
cwtl
loopne
adcl
mov
lea
icebp
movsl
notb
scas
call
add
sahf
mov
sbb
addr16
xchg
not
inc
jmp
mov
mov
sbbb
outsl
in
xchg
mov
arpl
xor
lret
xor
fiadds
test
xchg
lcall
not
inc
push
pop
cmp
out
and
inc
push
incl
jge
lret
arpl
mov
xchg
scas
push
push
cmp
xor
push
negl
mov
call
inc
outsb
out
sbbb
add
sbb
cltd
incl
jle
sub
inc
push
js
sbb
in
xor
mov
sub
or
adc
fildl
cli
pushf
inc
test
aaa
mul
cwtl
stos
jecxz
dec
inc
pop
jmp
aas
outsb
xchg
sub
or
insl
dec
dec
les
sub
es
jno
cli
out
aas
jae
add
rorb
cmp
fs
cmp
push
jno
adcb
popa
int
or
je
lahf
and
inc
sbb
fcmovnbe
mov
test
dec
shrb
movsb
repnz
pop
cmp
add
arpl
lahf
neg
mov
cmpsb
cmp
sub
mov
pop
push
push
cmp
fistpl
ljmp
aad
je
or
or
cwtl
cmp
mov
or
movsl
xchg
sub
mov
clc
iret
sub
popf
in
orl
add
sbb
push
jne
or
into
outsl
jns
loopne
mov
cmp
js
nop
mov
push
notb
fmull
scas
loop
or
fisttpll
loop
outsl
xchg
stos
pushf
dec
call
dec
mov
push
add
rorl
int3
repnz
enter
sbb
aaa
jnp
test
and
push
or
xchg
and
mov
or
jae
test
mov
hlt
mov
mov
ja
push
fnstsw
insb
mov
fdivrs
mov
leave
int
outsb
jmp
mov
lods
aas
bound
outsl
push
ret
inc
popa
outsb
mov
mov
jge
xor
or
adc
outsb
add
mov
and
out
out
rcrl
dec
dec
and
dec
mov
pushf
outsl
daa
push
mov
fisubrs
pusha
jl
ret
outsl
fstpl
jle
lds
in
xor
daa
jno
cmp
fwait
and
mov
movb
push
xor
inc
xorl
xchg
adc
std
or
jne
arpl
adc
xchg
mov
ljmp
or
pop
clc
or
xchg
add
push
adc
sbb
andl
sbb
xchg
mov
sahf
or
jnp
lahf
mov
push
mov
sub
dec
pop
dec
das
lods
xor
subl
or
xlat
mov
or
xor
mov
gs
inc
nop
push
arpl
mov
js
loope
daa
mov
dec
in
ret
sbb
mov
cmp
pop
push
test
mov
adc
jno
cld
imul
clc
sahf
into
cmpl
js
call
outsl
inc
adc
jge
mov
scas
shrl
push
cmp
xchg
and
dec
enter
mov
dec
out
pop
cwtl
rcrb
mov
arpl
jno
xor
xchg
cmp
pop
xor
push
add
out
stc
sti
repz
push
add
iret
test
mov
cmpsl
fidivs
jmp
and
cmp
aam
hlt
xchg
icebp
inc
js
push
fcomps
ret
cli
mov
or
daa
ret
outsb
pop
jbe
daa
cli
dec
cmc
sbb
stc
movsl
mov
fcoml
mov
mov
inc
dec
loopne
dec
push
scas
dec
scas
aam
ja
pop
sbb
xchg
inc
neg
jo
dec
dec
loope
jns
es
int3
cmp
sbb
sbb
sbb
stos
inc
ret
or
enter
jge
inc
add
rolb
ljmp
jno
mov
jns
push
dec
pop
mov
in
aas
pop
mov
mov
inc
ret
mov
popf
or
lods
jmp
andb
push
xor
dec
movsl
xchg
sub
in
imul
scas
imul
xor
mov
cmc
into
mov
jle
jmp
xor
jbe
into
dec
jnp
js
mov
test
add
mov
or
sub
sub
aam
dec
fistpll
jecxz
cmp
je
fsubrs
sbb
mov
in
adc
fwait
mov
int
push
sub
stos
inc
cltd
lock
jecxz
ss
aaa
int3
push
lods
std
sbb
adcl
sbb
fwait
lret
pop
mov
cmp
mov
int
push
insl
lods
enter
int
ret
sbb
sbb
mov
cli
sub
jb
mov
dec
aad
repnz
addr16
push
inc
cld
xchg
jns
cmp
inc
imul
pushf
mov
cmp
andb
lds
mov
sub
mov
push
add
mov
cmpb
cmp
incb
xor
sbb
add
fbstp
adc
mov
repnz
push
sbb
aam
push
test
icebp
inc
adc
xchg
and
cli
jns
mov
mov
push
cmc
add
test
or
std
cltd
enter
mov
adc
sbb
mov
dec
jmp
inc
or
out
adcl
cmpsb
rol
jmp
int3
incl
jb
int
and
xchg
push
pusha
inc
sarl
push
faddl
push
sbb
fidivrl
ret
and
inc
mov
cmc
dec
dec
fistpll
or
and
mov
aas
push
lods
xor
pushf
cmc
pop
hlt
es
mov
mov
lods
insl
add
mov
mov
xor
test
inc
testl
gs
mov
or
stos
push
xor
jns
cvttps2pi
les
adc
ljmp
mov
mov
mov
je
mov
roll
and
ret
ret
je
inc
xor
mov
jne
jbe
jbe
aam
add
mov
enter
lret
data16
notl
fsubl
adc
mov
test
or
jbe
sbb
stos
repnz
push
sub
xchg
cmp
sbb
add
imul
dec
pop
int3
add
insb
add
bound
out
daa
or
jmp
loop
mov
in
cs
arpl
sub
aad
xor
loop
pmulhuw
popf
fs
rcrb
xor
rcrb
sets
ss
push
add
test
and
mov
push
push
mov
out
adc
inc
lods
mov
sbbb
pop
rcr
sub
ja
mov
mov
incb
das
dec
imull
fwait
mov
dec
insl
sub
push
ret
jl
mov
nop
mov
push
shl
repz
bound
fnstenv
lahf
pushf
mov
fisttps
imul
jo
mov
sub
sarl
xor
lock
inc
mov
cmp
cmc
out
lods
ljmp
xchg
lods
mov
push
mov
sbb
push
push
push
dec
push
sti
adc
loop
and
jmp
stos
pushf
jo
mov
jno
popf
andb
jb
out
insl
adc
mov
fidivrl
xor
inc
addr16
frstor
add
sub
insl
xchg
fldt
out
test
dec
or
sub
push
iret
adcb
addb
pop
lahf
sbb
xchg
sbb
outsl
push
in
pusha
add
in
loopne
and
ret
jb
in
dec
mov
sub
cmp
jne
xlat
jmp
testl
adc
sbb
sbb
sub
loope
cmp
les
ret
aad
xor
cs
call
incl
in
leave
xlat
shlb
sti
call
xchg
mov
pusha
ds
nop
jl
xor
sbb
add
movsb
cmp
jbe
addr16
sbb
inc
xchg
jnp
mov
mov
incl
xchg
dec
jmp
mov
mov
in
stc
inc
mov
push
lahf
cmp
es
lods
inc
dec
leave
rcrb
sub
xchg
loopne
jg
cmp
push
jo
test
xor
cmp
pop
mov
lahf
sarl
push
mov
scas
add
pop
jns
mov
push
orl
stc
icebp
jbe
test
sbb
dec
xor
xchg
bound
add
mov
stos
fildll
aas
xchg
jmp
sti
pop
pop
xchg
cmp
lea
mov
ds
int3
xchg
jge
les
pop
dec
hlt
mov
xchg
push
iret
mov
push
bound
insb
repz
jae
jge
loopne
mov
dec
into
cltd
mov
xchg
fsubl
add
in
jae
jmp
push
xor
rcrl
mov
movsl
ds
xlat
adc
cmp
int
xor
in
test
sbb
mov
or
xchg
ja
sub
fmull
lret
sahf
aaa
iret
fnsave
xor
adcl
lods
imul
add
test
out
or
loop
out
mov
cmp
jne
movsl
inc
add
jp
lds
lret
mov
loop
loopne
mov
aam
cmp
pusha
mov
cmc
aas
fsts
test
lods
ljmp
jnp
push
sbb
mov
jne
pop
hlt
push
mov
adc
cmc
aaa
stos
in
sbb
cltd
mov
in
adc
stos
cmp
add
scas
add
mov
inc
gs
out
psubsb
mov
mov
pop
mov
mov
pop
test
fnstsw
sbb
dec
ljmp
jno
mov
pop
cmp
lock
loopne
dec
pop
sbb
jne
cld
cmc
int3
and
bound
sbb
into
into
test
lret
data16
shrb
xchg
or
imull
sub
negl
rcll
or
movsb
stc
addr16
jp
and
mov
push
ljmp
cwtl
pop
into
shufps
lret
push
sbb
mov
movsb
sbb
add
scas
dec
cwtl
daa
gs
dec
and
ret
xor
adc
cli
jge
or
pop
mov
dec
pop
xlat
rcr
mov
or
pop
test
mov
clc
inc
ljmp
pop
cmp
lods
pop
pop
insb
push
lds
push
xchg
adc
es
loopne
inc
mov
add
call
adc
push
int
dec
ljmp
mov
fldl
lds
mov
pop
cld
rolb
jp
lahf
subb
or
mov
cmp
out
and
sub
jnp
xchg
inc
shrl
popf
clc
push
dec
cli
pushf
divb
test
int3
sahf
sbbb
addr16
jnp
shl
mov
dec
sti
mov
xchg
fsub
arpl
or
and
sbb
enter
imul
loop
insl
inc
shlb
addr16
push
and
jns
jmp
pop
mov
iret
pop
add
mov
rcrb
ja
out
test
mov
stos
mov
sub
push
hlt
cmc
out
mov
and
sbb
shl
fcoms
das
cmp
ret
xor
sub
inc
ficoml
adcb
sbb
arpl
jmp
sbb
cmp
add
push
fistps
xchg
push
xlat
jne
push
cwtl
mov
mov
jecxz
mov
out
aas
adc
mov
adc
xchg
pop
scas
add
pop
stos
add
mov
lret
mov
incb
subl
xchg
jmp
ret
add
mov
ret
enter
and
fiaddl
mov
shlb
mov
sub
fmulp
jp
cli
fidivs
popf
mov
mov
mov
adc
push
ds
mov
push
hlt
fxch
inc
adc
push
sahf
popf
xor
mov
leave
xor
fidivl
adc
ror
jle
add
pop
inc
mov
mov
lock
xchg
negl
add
jb
hlt
outsl
pop
dec
jo
inc
fdivp
pusha
iret
gs
imul
adc
or
cmpsl
push
sub
cmp
inc
jae
ljmp
outsl
cmp
aad
pop
rcrl
cmp
cs
ret
cmp
rcll
mov
xchg
sub
pop
out
jg
divb
cmp
jnp
cmp
loop
pop
daa
mov
popf
stos
push
pop
mov
test
xchg
test
xlat
sub
jnp
insb
scas
mov
hlt
adc
xor
and
jmp
dec
push
test
inc
in
orb
adc
sbb
hlt
gs
bnd
insb
out
ja
jp
dec
cltd
xlat
in
incb
adc
xchg
fwait
bound
push
stos
mov
add
mov
dec
and
adc
cmp
and
data16
lret
and
mov
jo
gs
push
or
loopne
loope
out
push
les
mov
imul
std
shll
pop
mov
repz
hlt
push
mov
fldenv
cltd
popa
cmp
out
cmc
dec
gs
lcall
jmp
cmp
fisubrs
mov
mov
jecxz
lret
inc
aas
iret
imul
jbe
addl
dec
or
sbb
sub
push
and
jl
adc
or
lods
lahf
xor
cmp
push
decb
fs
popa
inc
xor
bound
pop
adc
and
xchg
ss
adc
xor
xor
lds
mov
adc
enter
or
pusha
fistl
iret
mov
in
pop
add
fwait
sub
jne
mov
pop
or
push
mov
js
sbb
lcall
xor
dec
test
jnp
xchg
outsl
fwait
mov
roll
push
arpl
xor
push
push
or
mov
sub
push
in
gs
pop
in
xor
push
sbb
in
fbstp
jbe
fstpl
push
sbb
push
inc
jmp
sbb
mov
adc
add
cld
sbbl
or
fcmovb
pusha
or
fsubr
loop
pop
pop
lahf
incb
stos
dec
out
cmp
cld
xchg
sub
push
xchg
dec
movsl
cmp
push
pop
outsb
adc
and
add
lods
aas
in
inc
rcrb
sub
test
insl
cmp
pop
or
xchg
and
outsl
cmp
jne
rolb
incb
aad
xchg
mov
test
xchg
test
lcall
adc
movsbl
sub
mov
test
push
mov
gs
jb
mov
pop
into
fldenv
test
lcall
xchg
fcmovu
movsl
pop
call
mov
ret
loope
nop
das
das
shl
mov
mov
and
xchg
pusha
inc
imul
cmp
push
sub
mov
xor
daa
rclb
cmp
inc
frstor
jne
movsl
xchg
push
dec
fisubrl
hlt
dec
lea
push
mov
cmp
cs
pop
insl
xor
lock
xor
add
mov
in
xchg
mov
les
scas
cmc
or
scas
inc
ss
jmp
loop
or
lds
sbb
jg
aad
call
or
cmc
jne
pop
and
add
es
jno
xchg
pop
mov
push
inc
lret
pop
stos
push
inc
rcl
push
mov
jl
cmc
enter
push
sub
pop
pop
jecxz
cmp
mov
mov
dec
shrl
xchg
inc
push
fwait
xchg
shll
insb
sub
fiadds
inc
lret
xlat
pop
fwait
inc
fstl
ss
in
ret
or
psrld
pushf
icebp
scas
loopne
push
pop
insb
push
emms
add
out
pop
mov
mov
movsb
stos
sub
push
xor
or
or
sarb
jp
shlb
into
movsb
push
aas
and
rol
scas
jno
icebp
push
cmpsb
fcomps
stos
inc
inc
jle
imulb
call
lcall
insl
mov
push
cld
lret
outsl
mov
push
in
jnp
aaa
adc
push
xor
cmpsl
sti
imul
mov
pop
hlt
adc
das
mov
push
stc
fsubrp
stos
xchg
mov
sbb
pop
mov
sbb
dec
pop
movsb
mov
cmp
pop
ja
fisttpll
lret
inc
adc
in
and
adc
push
bound
adc
daa
mov
adc
in
xchg
nop
jns
dec
xchg
add
or
or
push
sarl
or
gs
cpuid
and
mov
loope
mov
sar
or
cmpsb
aam
mov
jecxz
inc
mov
sbb
mov
sahf
mov
ljmp
fnstenv
mov
xor
popf
loope
stos
mov
pop
movl
andl
or
xchg
or
jp
test
xor
pusha
xchg
sbbb
imul
pop
cmc
bound
push
in
cmpsb
ds
fadd
test
int3
hlt
dec
jns
pop
lds
adc
mov
jae
stos
cmp
pop
dec
enter
push
inc
pop
dec
in
add
mov
push
push
xor
xor
xchg
pop
cmp
sbb
mov
pop
mov
fucom
js
notb
xchg
cwtl
das
or
pop
pop
sahf
mov
iret
loop
loope
pop
xchg
shrb
stos
fcmovnu
jae
int
clc
daa
mov
in
dec
adc
sub
mov
iret
mov
mov
daa
mov
xchg
lret
mov
fisubrs
jns
loope
js
xchg
add
mov
sbb
test
xchg
sub
cli
and
loop
sub
stc
rolb
aas
aam
jns
pop
or
pop
ja
and
mov
or
add
lods
sub
int
and
jmp
ljmp
xchg
and
cmpsb
push
out
adc
cmp
and
sub
mov
loope
jo
es
inc
aam
notl
hlt
dec
inc
sub
je
or
push
popf
iret
lret
push
mov
lcall
adc
jge
push
icebp
sub
mov
aam
popf
pop
jge
shr
nop
dec
lret
inc
dec
adc
jae
sub
xchg
xchg
cmp
repnz
xor
inc
test
lds
inc
push
inc
cmpsb
xlat
icebp
aaa
sbb
lods
inc
fs
sbb
addr16
jo
loope
imul
sub
insl
int3
rcll
mov
xchg
push
lds
aaa
idivl
mov
mov
cwtl
adc
shl
inc
movsl
lds
in
jmp
jg
leave
out
les
ss
push
jmp
pop
cmp
mov
add
nop
shrb
inc
push
cmp
or
cmpsl
das
shll
jns
lahf
inc
test
pop
movsl
jmp
xchg
sub
cld
sub
xchg
mov
mov
mov
aas
adc
std
jbe
jmp
scas
cmpsb
cmp
aaa
into
cmpb
xchg
stc
aam
jne
out
cmp
xchg
push
dec
lret
sti
outsl
es
mov
xlat
jbe
dec
lods
xchg
sahf
pop
cmc
sub
mov
jnp
inc
scas
adc
pop
les
fbstp
lea
or
jl
push
mov
mov
inc
std
into
js
and
fwait
lods
xchg
mov
dec
pop
xor
sahf
scas
sahf
sarb
sub
dec
mov
repz
sahf
sbb
repnz
cli
mov
xor
and
push
jns
xchg
and
add
xchg
ret
mov
cltd
sbbl
in
mov
mov
xchg
sbb
jno
daa
addr16
aaa
lock
sub
mov
iret
rclb
cmp
jo
and
aam
xor
ljmp
rep
push
and
shl
sub
and
dec
push
int
xchg
push
and
inc
push
cmp
popa
mov
fisttps
push
jl
aad
jb
clc
inc
dec
dec
std
jo
xchg
mov
into
cmc
leave
in
and
je
aas
xor
pushf
or
into
bsf
mov
pop
mov
mov
or
xchg
inc
inc
mov
bswap
mov
lods
push
push
mov
inc
jo
ret
sti
xchg
addb
push
and
iret
xchg
and
push
loope
nop
or
cltd
imul
dec
mov
adcl
aas
aad
xchg
xor
sbb
push
xchg
mov
fdivrl
popa
outsb
imul
mov
js
ja
adc
mov
ffree
pop
cwtl
test
scas
fnstcw
lock
add
and
sar
add
movsb
test
cmp
cwtl
pusha
ljmp
xchg
mov
push
testb
sub
pushf
pop
add
mov
lret
push
cld
mov
imul
mov
lret
outsb
out
sub
fwait
adc
inc
mov
test
xlat
pushf
jl
ficomps
adc
add
es
pushf
and
jb
jle
popa
push
dec
sub
call
insl
xchg
ret
rol
in
and
add
add
in
cmc
sahf
xchg
and
push
mov
addl
or
mov
sub
xor
sbb
jmp
or
jns
or
call
sub
jg
mov
add
aas
jecxz
add
fisubrs
xor
jmp
aaa
sub
addl
mov
cli
xchg
add
mov
jns
or
ret
out
test
lret
lock
jo
neg
lret
mov
movsb
in
and
sbb
insl
mov
jno
sbb
xchg
cmpsb
mov
sub
jmp
fwait
shl
cmp
arpl
jmp
cltd
aam
jl
mov
jle
jmp
xchg
out
hlt
push
sub
out
nop
mov
mov
mov
xchg
add
mov
imul
xlat
push
ror
cld
push
sbb
mov
sbb
stos
arpl
or
adc
pop
sub
push
js
xchg
ds
lahf
clc
notb
sub
jp
jp
js
xchg
cs
add
lea
jmp
lds
ja
sbb
testl
push
or
mov
mov
or
daa
inc
mov
pop
in
fs
imul
mov
fmull
jns
xor
lcall
repnz
mov
aaa
imul
adc
and
out
sub
cli
dec
mov
aad
mov
insl
cmp
in
imul
in
or
ds
push
push
pushf
adc
int
push
mov
and
fsubrs
pop
sbb
xchg
rclb
mov
inc
in
inc
pop
fs
push
xchg
adc
cmp
mov
inc
xchg
push
mov
fwait
or
sub
pusha
xor
push
lea
mov
cli
or
arpl
or
or
lock
outsb
xor
loopne
out
les
add
xchg
aad
into
push
jmp
push
fldl2t
xor
ja
mov
call
scas
nop
or
and
jg
xor
enter
or
stos
mov
mov
mov
loopne
sahf
out
sub
testb
aam
js
inc
and
sti
dec
cmp
or
or
loopne
adc
inc
push
mov
cwtl
cmp
sub
lret
ret
lcall
jp
sbb
pop
push
mov
push
repnz
lds
testb
jl
fcomi
add
in
or
popa
clc
push
roll
fsubs
icebp
pop
out
arpl
pushf
dec
jmp
imull
inc
pop
add
xchg
andl
leave
and
cwtl
sbb
aad
call
mov
dec
into
cwtl
gs
mov
inc
aam
jmp
dec
out
in
pop
pop
es
jg
pop
sub
stos
scas
mov
sub
inc
in
popf
mov
inc
pop
xchg
in
add
into
fcoml
jno
sub
and
outsl
pop
adc
ds
xchg
sub
cmc
mov
fcmovbe
hlt
pushl
cmp
jp
sub
cmp
shrl
pop
push
outsl
mov
scas
mov
pusha
cmp
mov
rcrb
stc
nop
daa
sbb
cmp
adc
lods
jp
and
test
jp
lds
mov
rcr
adcl
xor
in
shl
mov
aas
mov
sub
test
inc
fisttpl
arpl
inc
push
roll
pop
push
and
jecxz
rol
sar
jns
sbb
dec
cmpsl
lds
mov
cmp
repz
out
or
xor
mov
inc
push
js
ficompl
cmp
or
stc
pop
std
mov
mov
sub
sbb
popa
dec
push
sub
scas
fnstsw
adc
mov
mov
push
jmp
cld
push
imul
iret
sbb
sub
mov
mov
and
push
adc
mov
xchg
jmp
test
shll
ret
mov
xlat
sbb
mov
or
sub
call
jne
jl
mov
pop
xor
movsl
addr16
loopne
iret
adc
call
in
out
int
js
adc
sbb
xchg
mov
fistpl
mov
cmp
cwtl
cmpsb
cs
negl
in
scas
sbb
mov
mov
in
idiv
sbb
dec
jecxz
in
out
test
daa
add
cmp
push
int3
jo
insb
lods
mov
aam
jb
int
mov
push
pop
xor
movsl
jne
mov
jl
or
mov
dec
loope
hlt
fdivs
jnp
cs
cmpsb
out
dec
pop
repz
minps
pushl
jmp
or
sub
mov
xchg
leave
and
cmp
shrb
loopne
inc
popf
jg
fdivrl
xor
out
out
pop
inc
enter
rcrb
fnstcw
mov
fnsave
lods
fprem
mov
iret
add
push
cmc
sbbb
mov
seto
mov
outsb
cmp
in
mov
mov
lahf
insb
xchg
pop
andb
mov
push
fildl
mov
rcll
subl
xlat
andb
or
push
imul
inc
fnstcw
insl
fwait
pushf
std
orb
jmp
imul
sarl
fisubrl
loopne
rcr
xlat
add
call
les
pop
add
andl
mov
mov
inc
jg
xor
mov
mov
fwait
clc
cld
das
adc
inc
mov
jge
fldt
mov
fnstcw
rolb
sbb
aam
xor
xor
inc
out
jns
rcrb
adc
std
add
icebp
lods
sub
test
push
jg
xorb
sub
push
ds
xor
push
adc
mov
scas
push
jbe
repz
fyl2x
mov
rorl
repnz
test
adc
xchg
xchg
aam
mov
cli
movsl
push
imul
pop
test
mov
rol
lods
xchg
icebp
jne
pop
and
mov
jmp
xor
mov
xchg
insb
lret
dec
notb
sbb
lds
fs
outsb
imul
cli
in
sub
dec
add
push
cmp
enter
xlat
push
mov
xchg
movsb
jecxz
or
jo
cli
sbb
cld
lcall
sahf
add
out
fsubs
sbb
mov
out
mov
mov
test
imul
pop
xchg
ds
test
inc
out
cmp
data16
dec
pop
jle
adc
icebp
in
rol
fwait
repnz
lret
les
mulb
pop
shl
into
dec
pop
aaa
jle
jg
adc
dec
mov
shlb
int3
push
mov
mov
loope
inc
pop
aaa
enter
arpl
mov
repz
fwait
std
xchg
xchg
mov
stos
and
lret
jp
jno
mov
jnp
mov
iret
repz
xchg
or
jno
mov
shll
roll
xchg
jb
adc
leave
loope
jbe
cmp
inc
stc
pop
js
iret
popa
cmp
adc
ja
sahf
inc
stos
pushf
mov
fcmovnb
notb
mov
insl
pop
icebp
sahf
icebp
xchg
push
icebp
sarb
fstps
in
pop
fadds
push
popa
or
and
cli
fwait
in
sti
int3
sbb
out
or
popf
jno
adc
bound
and
in
lock
repnz
call
lahf
mov
imul
xchg
jle
pushf
stos
or
jno
stc
lods
cmp
aad
stc
nop
cmp
xchg
add
inc
sub
std
lahf
cmc
xchg
repz
inc
cmp
xor
dec
and
aas
xchg
insl
pop
in
int3
push
cmp
mov
int3
mov
notb
xor
lock
mulb
cmpsl
adcl
popa
enter
cmp
hlt
and
cmc
scas
sub
fstps
adc
pusha
jp
or
sbb
clc
or
es
popa
scas
push
mov
sbb
mov
mov
cmp
pop
mov
mov
jge
push
mov
xor
cmp
and
adc
pop
mov
mov
mov
sbb
mov
out
push
sbb
add
aam
dec
pop
mov
cmp
leave
pop
jb
test
lea
jo
aad
adc
cli
pop
dec
fidivs
rol
inc
lret
fistl
xor
add
iret
sub
shl
cwtl
sub
jmp
nop
xchg
rol
cmp
pop
cmp
daa
aaa
push
popf
adc
pushf
arpl
push
xchg
sub
inc
mov
bound
adc
mov
cmp
mov
mov
test
jno
mov
loop
lret
xlat
pop
inc
fsubs
imul
fnstcw
lods
jmp
pop
xchg
jmp
aad
mov
lcall
sbb
icebp
xchg
cmp
xchg
repnz
movsb
or
rorl
loopne
sub
adc
dec
aam
daa
sub
mov
fistpll
test
call
push
cmc
push
stos
scas
jl
stos
arpl
fidivrs
stos
mov
mov
fdivs
loop
cli
fstp
push
jmp
adc
inc
cmp
aas
andl
inc
lea
xlat
insl
push
sub
pop
stc
addr16
stos
mov
push
mov
stc
cmpsl
pop
mov
pop
gs
pop
mov
fisubrs
dec
mov
add
jge
add
mov
sysret
loope
addr16
add
aam
xchg
xor
jnp
je
int
js
sub
dec
iret
test
shrb
aad
xorb
xchg
jge
mov
pop
dec
adc
movb
add
cltd
mov
jecxz
ficoms
insl
add
jbe
lahf
xorl
cmpsb
icebp
daa
pop
xor
lret
aad
jb
mov
sub
negl
test
push
mov
jbe
test
and
pop
imul
mov
daa
cli
hlt
clc
mov
scas
orl
cmp
test
sahf
pop
mov
sbb
mov
ret
push
and
jmp
or
in
daa
push
out
pop
push
or
dec
push
xor
iret
outsl
adc
pushf
fcomi
ret
subl
or
lret
mov
cmp
cmpsl
popa
mov
ljmp
cs
mov
add
push
enter
fisubrl
cmp
adc
mov
or
cli
mov
jg
jne
pop
out
push
fdiv
xor
div
xchg
mov
mov
mov
loope
xchg
lcall
inc
out
mov
out
xor
test
mov
fmull
stc
inc
mov
and
dec
std
in
cld
pusha
xlat
loope
mov
add
stc
sub
cmp
test
xor
cmc
cmpsb
rorl
lcall
inc
icebp
mov
dec
in
add
lock
insb
jle
insl
jge
sahf
mov
hlt
jo
xchg
lods
xchg
imul
xchg
in
jge
fnstsw
or
add
xor
cwtl
push
leave
push
rorb
jnp
out
outsl
std
inc
lods
test
enter
repz
dec
add
cmc
xchg
cmc
ja
aas
and
inc
pop
js
dec
fidivl
je
and
xor
iret
ficoms
test
lods
shl
in
inc
mov
jne
sub
adc
jnp
add
push
popa
push
outsl
jo
dec
add
dec
adc
pop
cmp
cwtl
dec
mov
fldt
cwtl
aas
orb
imul
cwtl
push
jb
dec
fwait
xor
popf
adc
aad
inc
add
and
fsubr
push
cmp
sar
insl
and
out
lea
pushf
xor
outsl
jge
test
or
xchg
mov
xchg
dec
mov
pop
in
sbb
fldl
out
cmp
jnp
dec
call
scas
scas
faddl
in
inc
xlat
push
xchg
inc
and
mov
xchg
ret
and
jno
in
adc
scas
roll
lock
fcmove
shl
jp
adc
cltd
add
lock
adc
or
repnz
out
sti
popa
cmpsl
jbe
push
sahf
or
pop
fcomi
xchg
div
dec
pushf
hlt
les
xchg
sub
pop
jmp
xchg
dec
adcb
adc
xlat
sbbb
xchg
dec
flds
std
jmp
adc
dec
js
fwait
mov
mov
fbstp
push
inc
dec
insl
inc
sti
imul
push
adc
mov
aaa
test
adc
loopne
push
ret
frstor
jne
mov
inc
bound
lret
cmp
inc
int
sbb
je
xchg
cmp
sbb
aam
xor
cld
cmp
mov
daa
test
mov
test
rcr
outsl
add
gs
push
imul
sahf
inc
push
scas
pop
mov
xchg
cmp
out
addr16
hlt
lea
add
xchg
xchg
sub
add
adc
dec
cmp
add
les
movsb
stos
dec
add
push
stc
mov
xchg
cmp
pop
outsb
scas
jns
and
mov
jge
out
in
xchg
pop
lahf
lods
clc
test
cwtl
pop
xchg
jmp
mov
in
pop
fdivrp
dec
insl
int3
ds
gs
mov
xor
push
in
mov
call
fstpt
dec
add
sbb
cmpsl
dec
mov
sti
inc
add
ljmp
mov
push
outsb
pop
or
jecxz
arpl
in
movsl
cmpsl
data16
xchg
mov
ss
or
loope
sbb
rclb
xor
lahf
ss
test
lcall
cltd
jbe
lret
mov
jns
pop
aad
shll
add
push
xor
or
aad
mov
jnp
or
xchg
inc
lods
lcall
bound
stos
ds
and
lods
push
mov
dec
adc
addr16
lods
cwtl
pop
cld
push
test
lods
push
lds
jge
loope
pop
outsl
adc
loopne
cld
stc
inc
imul
pop
add
xor
mov
mov
push
ss
mov
cwtl
jmp
enter
xchg
inc
inc
inc
jg
lock
idivl
rolb
movsb
push
sub
cmpsl
imul
cmp
ffreep
fcoms
loope
ss
xor
data16
jbe
jns
mov
out
pop
hlt
pop
icebp
lods
cmp
mov
int
sbb
ret
lods
xchg
xor
mov
add
cs
push
add
stos
inc
mov
ret
leave
in
mov
or
or
jp
adc
dec
and
cmp
call
das
dec
imul
mov
leave
jnp
mov
cmpsl
add
xchg
xor
movsl
and
mov
lods
jp
inc
cmp
xchg
cs
lahf
cmp
pop
loope
mov
int3
arpl
fistl
xor
scas
jp
sub
out
rorl
push
popf
mov
xchg
cld
push
outsl
cs
jae
clc
rorl
testb
sub
pop
xor
aad
pop
fs
adcl
sbb
dec
scas
cmp
loopne
cmpsl
inc
add
jne
xor
fwait
xchg
int
js
test
jge
in
inc
pop
aaa
testb
dec
mov
rcrb
mov
mov
sbb
es
and
mov
cmp
je
in
cwtl
das
pop
xlat
outsb
inc
inc
mov
pop
ret
inc
stos
jnp
scas
xor
jo
mov
jg
xor
cmp
out
push
and
inc
cwtl
sahf
pop
popf
inc
js
das
pop
add
mov
jns
push
jle
dec
dec
loopne
bnd
sub
repnz
push
xchg
pop
adc
nop
push
sbb
insb
lret
sub
fiaddl
mov
das
imull
pop
out
pop
inc
cwtl
lock
push
jo
push
mov
jne
cltd
sbb
mov
cmpsl
outsl
sbb
jo
mov
pop
mov
mov
and
sti
clc
test
movsb
fbstp
pop
push
xor
cld
jns
inc
dec
hlt
adc
adc
loopne
and
pop
jne
jno
shrl
mov
adc
mov
les
mov
outsb
push
ja
mov
aaa
leave
jae
and
les
mov
dec
fistpl
adc
mov
push
xchg
in
or
in
into
mov
ds
sbb
ljmp
es
adc
test
push
mov
ja
shll
xlat
popf
clc
enter
add
or
bound
enter
push
sahf
inc
push
mov
lcall
ljmp
jnp
xchg
ret
xor
cmp
jg
mov
pop
lods
and
iret
fdivs
xchg
adc
xor
fcmovne
mov
mov
hlt
push
sbb
mov
add
test
dec
aaa
sub
out
sub
outsb
cmpsl
ret
mov
daa
push
mov
adc
js
sub
enter
xor
or
pop
add
pop
mov
pop
jo
call
xchg
sub
or
lea
iret
mov
popf
shll
jbe
test
inc
push
pusha
jl
cmp
lcall
adc
mov
sbb
mov
or
add
in
pop
mov
out
sub
jp
push
enter
mov
mov
mov
repnz
rcrl
jle
sub
leave
pop
outsb
rcr
jp
out
mov
out
and
hlt
dec
mov
mov
jnp
mov
pop
in
pop
inc
sarl
mov
mov
ja
icebp
push
addr16
repz
pop
dec
mov
scas
inc
fs
mov
or
push
cmp
push
aaa
and
pop
pop
and
mov
push
xchg
std
mov
inc
repnz
or
cwtl
sub
add
mov
fs
sar
test
push
lods
jmp
int3
mov
inc
adc
test
fsubrl
sbb
ljmp
xchg
movsb
jno
shrb
xchg
sub
mov
and
out
jb
movl
dec
adc
jne
sbb
pop
loop
stc
sahf
add
and
adc
hlt
add
mov
mov
sub
adc
or
mov
shlb
mov
aaa
inc
aas
jecxz
clc
xor
arpl
dec
shll
adc
jbe
repnz
std
inc
pop
push
test
repz
sbb
outsb
xlat
repz
shl
mov
lods
inc
adc
loopne
shlb
stc
mov
mov
ljmp
imul
notl
ss
gs
adcl
std
cmc
or
gs
pop
inc
pop
sahf
jmp
push
mov
aad
sub
jns
imul
out
xlat
cmc
lret
ret
jns
aas
push
or
movsl
mov
add
pop
clc
mov
cmp
push
lcall
outsl
or
mov
xor
lcall
sub
jne
clc
popl
mov
adc
je
pop
into
insb
in
std
popf
out
shrb
cwtl
xchg
jb
xor
push
cli
shl
popf
fstpl
and
movsb
movsl
or
pop
sahf
lock
cmp
pop
push
in
andb
xchg
mov
shl
in
fsts
add
ret
fdivrs
and
mov
pop
ret
insb
sub
pop
adc
aas
push
cli
push
jbe
imul
jb
pop
jecxz
or
push
mov
mov
out
or
out
mov
mov
pop
dec
loop
orl
mov
imul
fisttps
loope
jne
mov
out
out
jg
iret
jp
add
xchg
mov
inc
sbb
repnz
or
jge
es
xchg
lret
lret
rcll
rcrl
and
or
push
loop
iret
test
jecxz
pop
lcall
mov
add
inc
loopne
out
jne
subb
mov
popf
sub
clc
pop
lock
hlt
inc
repz
cmpsl
outsl
leave
lahf
adc
ljmp
mov
jb
pop
aam
addl
das
pop
add
jmp
cmpsl
sbb
imul
jbe
sbbb
inc
outsb
add
jae
lea
sti
loopne
ret
push
lods
pop
sbb
outsb
daa
jle
dec
mov
in
pop
insl
aam
inc
mov
popa
and
insb
jb
cmc
ficompl
repz
bswap
pop
push
dec
loop
push
push
out
fwait
das
dec
and
stc
or
jle
cltd
notb
push
les
aam
jmp
push
or
jmp
pop
sub
repz
je
sbb
fisubs
mov
push
lahf
xor
jns
dec
lods
and
aad
enter
fistps
repz
mov
inc
rcrb
pusha
in
sbb
test
stc
cmpsl
mov
mov
test
sbb
iret
hlt
test
sub
pop
mov
cli
aaa
rcrl
xor
clc
mov
mov
rorl
in
test
push
outsb
sub
leave
pop
ss
cli
xchg
pop
ret
and
out
sub
or
lods
lahf
lods
cmp
mov
push
adc
bound
fsubrp
es
inc
sub
ds
adc
add
fs
repz
jg
cmp
or
test
inc
dec
out
jg
sahf
mov
jno
loopne
ja
pop
fisubl
rcll
mov
mov
jp
dec
jl
dec
mov
mov
pop
xorb
and
adc
push
push
cli
jg
pop
mov
inc
fadds
sub
push
fs
lds
pop
cmp
push
sub
lods
sbb
in
int
inc
jbe
cmc
xchg
scas
in
ficoms
sbb
adc
cmovb
fs
insl
push
aam
xchg
pushf
nop
in
lcall
les
push
push
scas
cli
out
pop
sbb
testb
xor
leave
xchg
aad
adc
pop
lds
outsb
imul
mov
jnp
and
push
and
jl
std
xor
cli
or
fs
pushf
mov
mov
inc
push
lret
cmp
push
pop
lret
xor
fbld
and
mov
arpl
icebp
xchg
mov
jne
int
push
fwait
psubd
push
cmp
in
pop
add
and
pop
sbb
in
repnz
adc
push
iret
pop
lret
jmp
mov
push
inc
fcmovbe
popa
aad
enter
xchg
into
mov
sub
mov
inc
shlb
lock
xor
inc
fcomps
mov
fs
xchg
xchg
mov
sbb
adc
fwait
call
push
sbbl
cmp
imul
sub
cltd
sub
xor
fs
and
sub
shrl
mov
mov
arpl
cmp
lock
into
movsb
jns
jecxz
enter
repz
mov
sbb
popa
push
or
or
mov
call
test
cld
ds
mov
add
mov
int
movsw
sbbl
dec
pop
mov
mov
ror
mov
mov
sbb
dec
mov
shlb
dec
data16
push
xchg
inc
cmpsl
in
mov
mov
mov
xor
fmull
pop
sbb
mov
out
add
hlt
inc
je
int3
jno
sbb
add
shlb
sub
in
shr
add
adc
bound
mov
sbb
cmpsl
int3
xor
push
push
jmp
ret
or
adcl
add
fs
aas
popf
negl
jnp
add
addl
dec
pop
cmp
insb
stos
mov
insl
push
clc
daa
iret
jecxz
xchg
inc
sbb
xor
mov
gs
cmp
push
shrb
mov
push
mov
add
dec
ret
pop
jecxz
sbb
iret
mov
out
inc
fstl
mov
icebp
mov
in
leave
and
daa
mov
pop
outsb
mov
xor
mov
and
cmp
push
jns
pop
sub
cmpsb
cmp
inc
sub
or
cwtl
clc
dec
lcall
lcall
and
sahf
and
idiv
fbstp
pushf
mov
movsb
sbb
mov
mov
std
ret
mov
and
sub
test
dec
gs
cmp
fs
sub
insb
mov
lret
and
cld
out
aad
cltd
cmp
pop
repz
cmp
add
pop
push
jns
push
pop
je
jo
pop
enter
stos
inc
into
push
sub
pop
push
jle
popl
and
sub
inc
jno
in
push
lock
lds
rcrl
shl
icebp
loope
rorl
sub
out
mov
jno
add
fdivl
ja
ret
ja
and
pusha
adc
loope
cmc
adc
cli
pop
dec
mov
int
fucom
jl
xchg
dec
in
sti
add
xchg
je
or
xchg
jo
xlat
sub
fld
pop
enter
shrb
xor
fisubrs
xchg
xchg
clc
mov
mov
dec
inc
fcoml
cmp
push
cltd
mov
hlt
ljmp
jg
in
xchg
lahf
xlat
mov
jmp
std
pop
out
inc
jb
fsubs
movsl
add
cmp
dec
cmc
mov
das
jbe,pn
mov
orl
fwait
cmpsl
dec
out
jmp
adc
ds
jge
and
xor
ljmp
loope
sahf
or
push
aam
xchg
daa
cld
hlt
adc
jnp
push
push
popf
adcl
stc
movsb
and
sbb
jo
roll
scas
cmp
lock
lods
cld
fdiv
jg
xor
pushf
repz
push
xchg
adc
in
outsl
add
sbbb
dec
ss
je
and
xor
push
idivl
outsb
std
loop
outsl
outsb
aad
push
add
add
dec
in
or
lds
jae
cwtl
out
repz
jp
or
icebp
dec
imul
repnz
or
aas
mov
js
aam
leave
adc
push
sbb
xlat
lret
mov
out
orb
or
andb
pop
push
int
loopne
sub
pop
sar
mov
pop
xchg
xor
roll
xor
jo
sbb
out
mov
das
mov
das
seta
jae
sub
mov
xchg
mov
mov
in
pushf
xor
mov
mov
mov
inc
vpminsw
mov
jg
inc
fildl
pop
in
sbb
cli
aam
jge
sub
sbb
mov
xchg
test
subb
cwtl
vfrczpd
mov
ficoml
mov
sbb
pop
sbb
mov
cld
adc
dec
clc
add
sub
dec
cltd
jmp
pop
jb
mov
inc
fildll
dec
dec
cmp
ss
mov
add
mov
xor
ds
mov
fcmovbe
scas
sub
mov
xor
ja
cmp
mov
xchg
fidivrs
jbe
je
rcl
or
pop
cmp
in
ror
jo
adc
enter
pop
scas
fiadds
cmp
pushl
mov
cmp
stos
lods
fldcw
test
clc
inc
out
cmc
negb
mov
or
stos
decb
dec
lcall
mov
subb
mov
dec
inc
enter
aam
nop
sti
jb
fldt
mov
xor
cli
sarb
lret
mov
cmpsb
gs
ljmp
pop
out
rolb
push
or
icebp
les
or
or
js
mov
push
ljmp
stos
loope
dec
es
fdiv
cmp
icebp
dec
xchg
xor
xchg
ljmp
call
fwait
or
sbb
adc
data16
insb
out
sbb
and
xchg
rcrl
mov
cmp
aas
jb
aam
stc
roll
stc
pop
and
repnz
jne
ja
jbe
stos
mov
jp
out
lds
shll
or
cltd
push
pop
xor
push
or
stos
dec
mov
das
stc
les
test
loope
sarl
mov
sbbb
out
push
sbb
jnp
add
adc
loop
or
jbe
outsb
lahf
and
scas
pop
jns
or
stos
jl
mov
pop
adc
ficomps
imull
stos
xor
int
add
fcompl
or
shl
pop
iret
push
movsl
inc
xchg
das
out
cmp
je
jo
notb
mov
pop
push
in
in
lahf
pop
mov
mov
mov
insl
mov
or
arpl
fmul
pop
add
pop
inc
sbb
ss
mov
pushf
jnp
lret
or
jnp
arpl
pop
sbb
xlat
mov
fs
xchg
push
mov
or
hlt
push
mov
jb
mov
cmp
mov
pop
cltd
jo
xchg
jmp
xchg
out
push
xchg
int3
lcall
sbb
pop
repnz
mov
outsl
leave
insl
add
jl
jb
lcall
jo
add
mov
sub
pop
pop
icebp
or
insb
add
fldt
decl
or
int
adc
repnz
mov
mov
mov
and
popa
xor
pop
mov
adc
mov
dec
jecxz
add
xor
sahf
add
mov
int3
loope
mov
fwait
movsb
movsb
out
pop
jmp
mov
push
or
and
leave
ds
pop
push
icebp
inc
mov
insb
jl
add
loop
mov
sub
outsb
xor
pop
fiadds
cs
test
xor
cld
fs
cmp
mov
xchg
aas
adc
test
and
jb
pop
mov
aam
outsl
or
mov
outsl
test
pop
movsl
jge
mov
rorb
gs
cmc
or
push
inc
stc
nop
jae
test
cmp
inc
iret
loop
in
push
push
mov
cwtl
in
jnp
jb
ds
aad
rolb
xchg
sti
mov
aam
mov
fidivs
or
mov
pop
sti
mov
fs
push
ja
insb
int3
and
jo
test
scas
mov
repz
bswap
sbb
jb
dec
or
je
in
xor
push
stc
mov
fidivrl
movsb
xor
adc
inc
arpl
rcll
dec
dec
sahf
cmp
clc
cmpb
cmp
mov
mov
insl
jnp
out
xor
push
adc
into
inc
aad
inc
leave
sub
or
shrl
setg
mov
mov
ss
mov
dec
inc
shl
cs
idiv
inc
pop
ss
sahf
outsb
arpl
xchg
xchg
and
cld
jmp
push
inc
and
sahf
repnz
xchg
mov
sbb
cmp
cmp
add
adc
fdivl
inc
and
rcr
adc
gs
lds
loop
cmpsl
and
pop
mov
cmp
sub
cmp
and
test
pop
or
test
add
std
cs
aad
push
push
xor
cmp
inc
mov
sbb
pop
dec
or
repnz
data16
add
inc
rorl
xchg
jns
roll
fcomp
int
imul
out
push
lret
dec
xchg
hlt
sbb
cmp
adc
das
cmp
mov
mov
shl
add
pop
hlt
mov
fldcw
out
push
mov
xchg
sub
sbb
adc
andl
fwait
xchg
cmp
hlt
mov
fidivs
dec
cmp
cmp
inc
ficoms
xor
pop
movsl
dec
repz
jmp
dec
rcl
mov
and
cmp
fnstenv
mov
xchg
and
sub
arpl
lds
cwtl
mov
leave
pusha
add
mov
cmpsb
arpl
mov
or
mov
es
pop
xchg
or
jns
outsb
add
loop
cmpsb
cmp
pusha
test
orl
testb
xchg
fwait
jnp
call
push
or
test
and
mov
xchg
js
incl
icebp
push
fisubrs
push
adc
inc
inc
fcomps
incl
sub
inc
inc
xor
loopne
fcomps
adc
lods
jmp
xor
jbe
js
out
stc
shlb
inc
pop
sub
imul
jno
push
iret
and
loop
into
dec
fwait
cmpsl
mov
aad
xor
mov
pop
mov
outsl
and
push
add
inc
mov
or
adc
pop
and
jae
std
sub
hlt
inc
fs
or
pop
aad
pop
sahf
cmp
sub
xchg
pushf
gs
pcmpeqd
jns
jno
jecxz
jle
iret
dec
sarl
adc
pop
sub
cwtl
mov
push
sbb
loop
xor
sub
es
inc
and
adc
std
movups
push
sub
pop
inc
fs
add
mov
push
decb
sarb
es
add
adc
add
outsb
loop
lahf
pop
push
mov
outsb
mov
sub
xchg
jl
cmp
in
das
and
xchg
sub
jo
loopne
pop
or
int
stc
jge
mov
push
leave
pop
pop
aad
jge
sub
mov
jmp
inc
pop
outsb
pop
pop
jp
jns
cmp
pop
ljmp
je
lret
movsb
xchg
sub
mov
mov
repz
xchg
and
insl
test
xor
xchg
xorb
mov
push
inc
push
push
fwait
xchg
addr16
not
aas
es
out
lds
outsb
imull
mov
mov
pop
scas
outsl
push
loopne
mov
repz
lea
sti
in
popf
imul
mov
mov
test
int3
xchg
out
adc
mov
enter
pop
loope
inc
adc
lods
mov
dec
hlt
lret
or
mov
or
cmp
jbe
xchg
sub
in
mov
mov
or
dec
xor
nop
daa
out
ret
jae
add
fwait
and
loope
imul
mov
sub
mov
lret
or
insl
js
sahf
inc
xchg
push
sbb
cwtl
inc
push
sub
into
mov
ficoms
negl
lods
pop
cmp
je
mov
adc
lahf
cmp
cmp
shl
pop
imul
mov
jns
fucomi
push
lods
xchg
hlt
ret
dec
into
sahf
inc
or
mov
cwtl
mov
mov
ljmp
movsl
aam
leave
lahf
mov
decb
clc
in
mov
mov
hlt
mov
es
jp
shrb
je
stos
out
imul
sub
xlat
push
dec
shrl
xchg
pop
xchg
clc
ss
ret
ficoml
bnd
jbe
push
insl
add
inc
jle
cld
decb
jnp
lods
jmp
ret
in
lret
sbb
xchg
dec
in
dec
dec
jmp
or
xchg
mov
pop
pop
xor
or
ret
adc
adc
je
or
xchg
adc
sar
xor
sub
aas
dec
in
iret
dec
aaa
inc
mov
inc
xchg
mov
push
add
jle
push
push
out
dec
add
adc
arpl
xor
ja
cmp
xlat
push
inc
mov
test
orb
js
mov
in
or
das
cld
adc
movsl
gs
pop
xor
adc
mov
sbb
inc
adc
cmp
sbb
arpl
sbbl
pop
hlt
hlt
mov
xor
les
dec
fadds
imul
pop
in
mov
icebp
scas
std
movsl
push
sbb
les
cmpsb
stc
jne
pop
xchg
int
sub
fstps
jno
pop
daa
sti
sahf
pusha
idivl
lcall
lea
in
or
lock
andl
mov
ffree
fcompl
not
ds
cmp
or
add
cmp
jnp
stos
dec
adc
mov
out
and
dec
xchg
test
insl
mov
and
popf
inc
inc
xor
nop
mov
push
push
mov
out
mov
dec
or
cmp
xor
pop
cs
inc
imul
push
lock
jbe
insb
push
push
add
mov
cld
push
pop
inc
out
jb
push
popa
stos
push
outsl
int3
mov
notl
scas
in
mov
xchg
sahf
mov
jb
mov
jge
jae
xor
mov
ret
outsb
ja
add
cwtl
cmc
mov
pop
dec
fbstp
push
sbb
jno
lcall
das
adc
addb
lret
sub
ljmp
add
mov
push
in
mov
push
fstp
in
and
test
icebp
dec
inc
xlat
ja
stos
xchg
nop
sbb
or
stos
insl
and
jp
or
adc
movl
and
xchg
pop
call
dec
cmpsl
cmp
mov
sbb
mov
call
add
jecxz
rcll
pushf
mov
adcb
sub
lret
xor
and
ja
mov
subl
push
and
pusha
daa
inc
push
test
icebp
mov
mov
push
sbb
mov
jne
fdiv
cmc
mov
stc
pop
out
int3
mov
inc
sahf
pop
call
xchg
and
push
push
shr
call
xor
sbb
hlt
ja
mov
mov
and
insl
ret
mov
scas
imul
jnp
lret
popf
faddl
xor
pop
fdivrl
sub
mov
mov
daa
mov
ficoms
cmp
push
fs
lea
sbb
jne
imul
ret
into
xor
pop
jl
jg
pop
sbb
push
cmp
jp
insb
cmc
mov
xor
jno
call
add
inc
les
int
clc
mov
fbstp
insl
shlb
pushf
cs
dec
iret
jo
aaa
out
lods
nop
mov
pop
mov
and
bound
pop
jno
dec
das
fucomi
mov
out
add
sahf
repnz
and
mov
mov
pop
leave
mov
sti
jle
push
push
mov
pop
pop
insl
dec
in
and
mov
out
test
pop
scas
les
js
cmp
adc
pop
xchg
sub
stos
aad
fisttpll
outsb
add
mov
push
and
leave
out
fwait
ja
pop
add
ss
pushf
pusha
add
add
and
dec
dec
dec
sub
jbe
loopne
add
xchg
stos
lds
mov
bound
mov
loop
push
lock
push
pop
ret
and
cmpsl
push
push
push
ljmp
adc
cmp
js
jne
aad
cmp
push
jne
pop
mov
repnz
add
subl
pop
mov
movsb
sub
iret
int3
maxps
pop
cmp
mov
loop
sbb
sub
pop
pop
je
lea
push
movsl
dec
insb
movsb
rcrb
dec
fsubrl
pop
repnz
fdivl
iret
jns
in
mov
fisubl
and
or
or
mov
xchg
sub
into
xchg
inc
push
mov
push
adc
xchg
movsl
cmp
sbb
out
inc
ret
pop
je
loop
in
cmpb
mov
pop
xchg
sub
je
sarb
xchg
movsb
repz
xor
test
std
xchg
sub
rcrl
sub
add
ret
js
and
mov
cmp
xlat
xlat
add
mov
popf
pop
jp
mov
dec
rcrb
cmpsl
mov
popf
adc
cmp
dec
popf
dec
icebp
fnsave
dec
xor
lcall
mov
fnstenv
call
gs
sbb
xchg
bound
call
out
xchg
sbbb
loop
das
popf
mov
dec
dec
adc
pop
dec
adc
sarl
imul
int3
xor
es
test
jl
out
aam
scas
inc
jl
jns
addr16
fs
mov
data16
mov
mov
das
xchg
pop
xchg
scas
filds
dec
mov
cmp
xor
add
jmp
sbb
pop
add
sub
mov
lret
shrl
or
rcrl
mov
loope
mov
push
jp
fsubrs
or
repnz
inc
sub
js
mov
daa
cmp
xor
ljmp
jp
ret
dec
fsubl
sti
mov
adcl
fcmovbe
imul
pushf
notl
cmp
dec
mov
dec
lret
fmull
cld
int
subl
in
rcrb
ss
sub
loop
mov
dec
mov
icebp
mov
lds
pushf
hlt
sub
pop
cmpsl
mov
jl
repnz
dec
imul
out
lret
jbe
sbb
stos
insb
push
js
mov
push
movsl
fcompl
sub
lahf
popa
dec
stos
jge
push
pushf
sub
in
xchg
pop
xchg
adc
ss
out
pushf
jns
jg
and
jb
sbb
sub
push
add
addr16
out
mov
and
rcrl
xchg
adc
cli
aam
outsb
add
xor
inc
bound
cmp
clc
call
pop
int3
inc
xchg
stos
cld
xlat
imul
jbe
fs
sbb
sub
mov
insb
shl
mov
loopne
nop
dec
pop
ret
iret
push
cmc
loopne
fildll
mov
insl
enter
xchg
mov
xchg
pop
add
ret
movb
dec
mov
and
or
adc
jne
pop
mov
je
xchg
fidivrs
stc
rclb
andb
mov
movsb
imul
push
cmp
loopne
xor
data16
scas
pusha
jo
jbe
adc
icebp
cmp
push
mov
addl
sub
sbb
push
jno
xchg
mov
mov
adc
xchg
pop
push
popf
jl
sub
and
sbb
xor
push
test
sbb
movsb
lock
sub
in
dec
and
inc
fnstcw
insl
cld
addr16
test
lret
aad
jbe
shrb
jmp
lods
pop
test
and
pop
xor
sarl
out
or
es
mov
dec
in
pusha
shr
push
dec
stos
cld
lea
ja
push
jmp
or
les
es
push
in
mov
leave
pusha
xchg
sbb
jo
out
mov
fisttps
mov
fimuls
pop
es
push
push
lds
int
pop
arpl
test
xchg
movsb
out
fisttpl
mov
cmp
movsb
add
aad
mov
dec
xchg
cld
fstpt
fsts
cmp
xlat
cmp
xor
rcll
jmp
mov
nop
xchg
mov
inc
int
stc
xchg
xchg
pop
in
aas
subb
fidivl
xor
rcrl
mov
sahf
pusha
pop
popa
sbb
sub
cld
icebp
mov
sub
xchg
sbb
les
xor
lods
sarb
and
out
push
sbb
std
sbbl
mov
and
mov
cmp
sti
adc
test
out
idivl
iret
cs
ljmp
mov
ret
ljmp
fldl2e
stc
and
icebp
ja
push
stc
sbb
adcl
dec
or
xchg
fimuls
sbb
ja
inc
test
mov
paddb
cmp
mov
jns
scas
ljmp
adc
cmpsb
les
int
int
adc
leave
addb
xor
add
adc
out
jb
mov
pop
nop
stos
mov
cmc
mov
dec
std
out
mov
movsb
mov
rorl
rol
adc
fsubs
out
in
or
enter
fstl
cmpsl
ret
test
mov
int
and
add
push
int3
mov
js
mov
mov
nop
out
cs
mov
mov
addr16
rcrb
cs
ret
push
fwait
gs
xchg
mov
cmp
idivb
sub
in
test
es
or
jb
shll
nop
lahf
insb
push
inc
xchg
xchg
pop
scas
mov
arpl
lock
sahf
ljmp
inc
mov
in
movsb
mov
test
jae
in
push
jnp
aaa
push
inc
pop
data16
jp
xor
test
leave
push
in
cli
pop
pop
jmp
das
fwait
push
xchg
jp
int
scas
push
lahf
sub
xchg
incb
fnstcw
inc
in
mov
repnz
shll
mov
dec
sti
sbb
aaa
push
repnz
cltd
sahf
xchg
adc
cs
adc
sbb
xor
dec
push
mov
add
lds
nop
scas
test
mov
xor
xchg
sahf
pop
mov
xchg
or
sbb
shl
add
sub
arpl
xchg
push
add
sub
adc
lds
fisubrl
lret
and
add
leave
inc
fwait
and
sbb
cmp
fdivs
inc
inc
jnp
fisubrs
addr16
or
pop
xor
add
push
cmp
imul
sbb
movsb
lahf
nop
jbe
mov
ja
mov
adc
stc
or
rcl
push
jg
mov
lret
fxch
inc
cmp
ret
sbb
sbb
lock
jge
sbb
or
cmp
jae
sbb
jo
adc
test
aas
incl
or
pop
clc
outsl
cmp
je
inc
loope
rcrl
add
mov
mov
adc
stc
and
inc
lret
jbe
cmc
stos
cld
rclb
bnd
shll
ret
add
bound
insb
push
sub
fidivrl
repz
cmp
stos
push
out
push
dec
adc
int3
pop
out
add
pushf
inc
clc
not
sub
xchg
mov
pop
cmp
fs
push
pop
inc
xchg
sbb
mov
mov
inc
jns
jl
bound
test
add
enter
daa
fbstp
dec
cmp
mov
aaa
std
dec
test
mov
sbb
mov
push
cmp
test
mov
mov
outsl
mov
adc
cmp
imul
lret
xlat
pop
adc
pusha
je
mov
and
push
ljmp
fimull
fldt
jns
sbbl
xchg
dec
pop
loope
sbb
pop
aam
inc
fdivrl
sahf
xor
sti
outsl
inc
fsubrl
arpl
xor
and
cmc
or
add
mov
or
sub
and
xor
mov
das
sub
int
push
shll
outsl
int3
adc
imull
enter
sub
int3
or
ljmp
inc
in
cmp
push
fbld
insb
sbb
mov
and
adc
pop
sbb
push
dec
mov
push
inc
add
fwait
in
adc
sahf
sub
and
dec
sarl
ror
stos
in
es
cld
andl
js
stc
test
add
dec
out
mov
pop
icebp
cltd
inc
ljmp
jno
icebp
mov
and
push
pop
repz
xor
pusha
adc
sbb
jle
cmp
cmp
imul
xor
xchg
mov
push
dec
call
cmp
xchg
test
push
xlat
ret
lret
stc
push
data16
or
stc
lret
mov
lea
mov
mov
adc
imul
push
decb
sub
adc
dec
clc
jge
mov
enter
loop
or
or
lcall
and
and
sub
pop
sub
aad
push
mov
out
mov
popa
xchg
sub
inc
scas
icebp
in
dec
hlt
and
push
repnz
in
xchg
mov
in
fsubr
mov
jnp
push
and
sub
inc
push
je
std
lock
and
std
add
gs
arpl
push
jmp
mov
jecxz
mov
rcrl
movsl
pushf
cmp
rolb
inc
shl
cmpsl
mov
sbb
loopne
add
pop
in
and
insb
test
ss
andb
add
inc
dec
lods
lret
sub
pop
cli
or
xor
sub
fwait
add
cmpsb
cmp
insb
push
cmp
mov
ds
aam
and
adc
ljmp
in
xchg
sti
test
sub
stos
sub
lds
sbb
imull
ret
and
out
sub
xor
jg
fwait
sub
dec
mov
aas
pop
push
movsb
shrb
cmpsb
cmp
jmp
mov
hlt
cmp
in
ficompl
sti
adc
and
enter
test
pop
jno
mov
dec
bound
fdivp
xchg
adc
scas
xchg
push
call
or
sbb
call
jo
and
xchg
mov
loopne
cmp
mov
shlb
clc
dec
mov
sub
inc
fldcw
push
fisubl
adc
sub
ljmp
push
das
mov
cmc
std
lods
mov
xor
mov
push
lret
push
mov
mov
outsl
cmpsb
gs
mov
js
sbb
xor
pop
sub
pop
pop
jo
sarb
fsubs
jle
int3
pop
in
mov
pop
jno,pt
adc
mov
nop
outsb
jle
jge
pop
or
inc
cmc
or
test
cmp
cmc
jl
lret
bound
ja
jmp
ret
popw
xchg
rcrb
push
jg
test
jmp
push
out
repz
xchg
test
mov
xchg
fidivs
je
jmp
aam
mov
roll
ret
xchg
out
push
in
lock
mov
shl
mov
cmpsb
cmp
ds
les
sbb
enter
ljmp
xchg
mov
int3
xor
push
xchg
mov
and
dec
data16
sahf
test
add
cltd
push
jmp
ja
mov
mov
lds
fsubrs
fiadds
inc
and
movsl
gs
fwait
aas
jbe
fwait
jl
xchg
int3
cmp
aam
sub
cmp
leave
les
push
lret
sahf
lret
xchg
fldenv
out
xchg
scas
out
out
in
jno
pop
mov
fldcw
cmp
test
sub
add
leave
adc
jns
movsb
mov
mov
mov
insb
add
xor
inc
fmull
add
push
gs
test
addr16
add
cmp
aam
jle
jbe
lea
xchg
add
jbe
lcall
sub
sti
adc
mov
lcall
ljmp
stos
xchg
or
gs
cld
hlt
push
sbb
and
shrb
in
lret
incb
xchg
lods
inc
jl
sti
fbstp
rclb
js
jl
add
int
mov
cmp
fistl
in
jb
push
lock
pop
cs
xchg
imul
loope
push
mov
sub
cmp
sbb
mov
adc
jno
stos
mov
hlt
jae
dec
xor
lock
gs
imul
lret
lret
or
adc
push
jne
loopne
fbstp
push
fidivl
xchg
das
fs
aam
shrb
negb
ja
cmp
mov
ret
sbb
adc
jnp
pop
push
sahf
mov
test
enter
push
ljmp
out
add
fistl
test
xchg
cmpsl
cmpsl
add
cli
gs
sbb
orl
and
or
xor
jne
jne
pop
jg
cmp
mov
or
sub
aas
push
shll
das
inc
fidivs
repz
pop
pushf
out
into
xorb
out
movsb
aaa
enter
out
ja
adc
mul
out
sahf
inc
cmp
jg
xchg
fidivrl
add
mov
cmp
xchg
add
jecxz
push
push
dec
xlat
enter
or
das
call
adc
aad
push
and
cmp
pop
scas
mov
cmp
inc
dec
mov
test
mov
xchg
push
and
jle
cmc
fsubrs
movl
insb
jns
aaa
cwtl
sbb
jo
and
adc
in
aaa
xor
xchg
or
pop
scas
fldcw
fidivl
lock
imul
sub
sub
aaa
pop
push
out
mov
pusha
adc
pusha
jne
loop
test
test
sar
repnz
xchg
inc
gs
dec
mov
dec
subb
imul
fdivrs
mov
or
nop
cmp
mov
mov
jle
shr
es
xchg
sub
push
push
ss
push
icebp
movsb
dec
pop
addl
mov
std
sbb
jp
fs
mov
mov
mov
in
mov
ljmp
pop
dec
xor
jle
xchg
sbb
sbb
fadd
and
sbb
shll
jne
and
fidivrl
mov
jo
pusha
ss
adc
mov
rcll
stos
push
push
fildl
movsl
stc
fistpll
sub
ds
pop
pop
xchg
jnp
pop
sbb
les
insl
loopne
adc
or
sub
daa
fdivrs
nop
daa
pop
mov
scas
scas
and
cmpsb
pushf
jb
loopne
outsl
xchg
mov
cmc
lahf
and
icebp
test
xchg
mov
fstps
lret
add
push
mov
repnz
cmp
enter
shrl
loop
imul
dec
pop
add
mov
xor
shr
mov
cmp
notl
xor
cmp
ret
js
jecxz
inc
inc
jnp
sbbb
loope
lock
mov
pop
fmul
outsl
lods
sbb
xchg
les
xorb
jle
or
sbb
dec
loop
sbb
imul
inc
fcmovb
test
mov
lods
ljmp
push
push
xchg
ret
test
lahf
mov
popa
or
vpaddq
lock
pop
xchg
test
fidivrs
dec
arpl
jnp
pop
test
mov
mov
and
xchg
pop
cld
in
test
pop
cmp
mov
clc
dec
in
mov
insl
or
cs
push
pop
popa
inc
xchg
jge
repnz
loope
fisubs
das
inc
out
inc
sbb
pop
mov
or
mov
fisubrl
or
sub
inc
sub
mov
mov
mov
add
inc
xor
ljmp
mov
xor
cmp
outsb
lahf
ret
mov
shll
sbb
icebp
ss
or
outsb
js
mov
or
outsb
cmp
push
lea
fcmovnbe
enter
jecxz
imulb
fnsetpm(287
sbb
insl
mov
into
push
cmp
jnp
iret
clc
iret
aaa
stc
jne
push
jle
xor
adc
dec
jecxz
pop
aam
int3
xchg
sub
inc
sbb
ret
cmp
call
and
cmp
testb
aad
in
push
adcl
lcall
xchg
push
shlb
or
cmp
es
lret
sbb
push
sub
mov
inc
insb
insl
lock
mov
popf
xor
mov
push
ror
pop
iret
inc
out
das
jns
mov
dec
leave
xor
or
or
xor
mov
sub
pop
clc
call
jae
je,pn
pusha
pusha
push
push
in
xchg
mov
dec
push
out
nop
fisubrl
or
jmp
fld1
jnp
repnz
mov
fs
repnz
sbb
cmpsb
sub
cmpsb
movsl
xchg
pop
pusha
movl
aas
and
cmp
cmp
loope
xchg
loope
xchg
test
xor
or
mov
in
shll
test
sbb
dec
ret
shll
test
add
jo
loop
movsl
sbb
push
dec
and
xchg
iret
lcall
frstor
mov
inc
out
lahf
pop
notl
loop
popf
popa
add
xor
jl
mov
scas
jo
push
dec
mov
push
test
jmp
or
dec
ret
pop
lods
enter
xor
add
push
cmc
test
mov
repnz
pop
rorl
pop
dec
ss
jp
jmp
mov
addl
in
pop
jecxz
js
nop
ret
push
push
pop
hlt
dec
jmp
or
insl
cmp
sbb
outsl
pop
hlt
mov
bound
into
xchg
repnz
jg
int3
dec
out
and
mov
mov
std
inc
cltd
stc
xchg
jne
rcll
pop
out
in
jl
stos
movsl
int3
jmp
lds
aaa
movsl
mov
outsb
mov
sbb
or
sbb
push
iret
outsb
xchg
mov
aad
lcall
idivl
in
int
mov
and
dec
imul
mov
push
aas
shlb
mov
xchg
cmp
testb
out
sbb
xor
mov
sub
in
mov
cmp
inc
int
movsl
ja
bound
sbb
pop
cmova
js
cmp
pop
adc
xchg
inc
jnp
push
je
adc
fisttpl
repz
fbstp
push
or
fidivl
sub
jle
or
popf
dec
sarl
adc
subl
insl
sbbb
test
mov
adc
in
cmp
notl
xchg
mov
sbb
cmp
pop
sub
out
out
nop
or
jae
cmp
rcll
neg
jb
bound
loopne
sti
add
subl
lcall
cld
jae
test
xchg
sub
decl
sbb
sub
stos
mov
cld
repnz
adc
int3
lret
sbb
repz
jno
sub
loopne
pop
mov
push
mov
jmp
sub
fildll
dec
lret
mov
push
adc
es
lods
test
into
iret
jnp
fwait
je
xchg
inc
mov
jl
xchg
mov
jp
jp
inc
pop
push
adc
popf
xor
pop
inc
test
aaa
in
add
mov
pop
xorb
add
xchg
adc
int3
sub
cld
je,pn
pop
pop
dec
div
mov
xor
inc
xchg
xchg
sbb
shr
add
es
daa
or
push
movsb
mov
pop
adc
es
dec
in
mov
jns
cltd
xor
dec
in
push
sub
ja
dec
rolb
jle
lock
movsb
cmp
add
loope
cmc
loope
jb
out
iret
arpl
pop
inc
test
dec
xor
loop
xor
and
or
lock
aaa
aam
push
jmp
andl
mov
inc
aas
adc
adc
jmp
adc
cmp
repz
push
xlat
xchg
sbb
popa
into
cmp
cmc
push
inc
test
sbb
in
xor
inc
pushl
mov
mov
or
mov
sti
sub
mov
jmp
xor
fs
jl
pop
std
repnz
xchg
xor
in
stc
popf
or
mov
sbb
cmp
sbb
xor
lret
xlat
shr
push
and
repz
scas
les
dec
mov
scas
nop
adc
out
mov
insb
rcll
mov
mov
jbe
sub
fwait
xchg
xchg
xor
bnd
call
push
xchg
mov
dec
ss
sub
sahf
testl
adc
or
mov
jno
xchg
nop
sub
shlb
pop
xor
mov
mov
pop
outsl
arpl
jo
mov
out
mov
pop
ljmp
insb
sub
pop
or
jbe
add
lods
arpl
jecxz
push
in
dec
cmp
scas
fists
xor
inc
pop
cmpsb
lock
outsl
lods
mov
out
add
fldenv
inc
mov
sub
pop
xor
cmp
sub
mov
imul
mov
pop
jb
push
sub
shlb
pushl
in
mov
scas
cli
cmp
lret
das
and
xor
and
cmpsl
add
testb
push
mov
jmp
dec
inc
jne
icebp
cmovnp
lcall
mov
sahf
push
outsb
test
sub
shrl
or
jle
xchg
repnz
xlat
mov
out
fs
sbb
adc
insb
cmp
pop
repz
insb
push
sbb
jge
xor
push
mov
nop
mull
adc
std
jns
and
adc
sub
add
push
jns
and
inc
xor
lock
repnz
ljmp
insb
jb
test
int
stc
or
ret
mov
mov
stos
rorb
push
push
adc
or
push
sahf
inc
push
in
or
mov
pop
inc
inc
int
jge
and
pusha
icebp
ss
les
enter
push
dec
dec
fdivp
imul
cs
or
out
aam
nop
push
scas
imul
push
aam
test
rcpps
mov
mov
lss
mov
fsubs
test
pusha
dec
lock
icebp
fs
xchg
dec
sbb
test
cmp
jno
pop
ja
xchg
pop
dec
pop
dec
or
aaa
mov
loope
mov
in
cmp
push
jecxz
call
pop
cmpsb
in
cmp
aas
std
or
cmpsl
inc
pop
mov
mov
inc
mov
mov
push
test
je
iret
test
insl
pop
xchg
inc
fimull
repz
mov
movsl
popa
clc
or
adcb
pusha
xor
xchg
dec
xchg
jl,pn
dec
out
popf
mov
clc
xor
push
mov
jne
popa
clc
fcoml
mov
sub
jae
dec
movsl
mov
and
test
ja
dec
stos
mov
and
jp
popa
clc
jo
mov
mov
cmp
fwait
lahf
pusha
xchg
test
mov
jle
mov
int3
outsb
enter
insb
ret
mov
ss
mov
mov
sbbl
and
call
adc
mov
jns
sarl
fiaddl
test
pop
clc
fstps
out
xor
push
cwtl
cs
mov
lahf
mov
scas
and
iret
xor
push
cmp
fcmovnbe
mov
push
and
mov
xlat
fdivp
dec
mov
cld
mov
cmpsl
pop
cli
sub
xchg
push
inc
jle
orl
stos
cltd
imul
cltd
inc
in
les
pop
shll
mov
or
repz
cmp
dec
dec
push
cmp
and
add
dec
mov
test
mov
lret
or
xorl
lahf
and
xchg
loope
xor
mov
rol
mov
outsb
insb
icebp
jns
test
adc
mov
add
subb
jnp
daa
inc
scas
push
push
mov
lret
or
inc
cmpsb
cmp
cmp
mov
push
cmpsl
adc
es
push
inc
cwtl
cmp
mov
xor
push
repnz
or
sub
sbb
mov
mov
pop
sti
xchg
mov
cmp
daa
shlb
int3
std
inc
mov
dec
out
push
sub
mov
sub
outsl
xor
cmp
ljmp
pusha
js
mov
mov
fucomi
roll
and
bound
push
mov
fisubl
sub
enter
subb
inc
push
movsb
repz
jl
cmc
loop
mov
ljmp
rcrb
call
ljmp
add
xor
lret
adc
pop
or
enter
fxch
pusha
pushf
out
sub
inc
fs
jns
out
ljmp
roll
push
call
in
outsl
inc
ficoms
jmp
push
sbb
test
xlat
push
inc
cmpsl
es
xor
cmp
adc
popa
insl
xor
push
arpl
fbld
mov
pop
test
cmp
lods
jbe
cmp
addr16
icebp
out
ret
sbb
add
lods
insl
mov
scas
cmp
xor
fistl
mov
pushf
or
lcall
pushf
not
push
repnz
push
mov
inc
xor
xchg
dec
mov
sti
mov
out
jle
aam
pop
pop
into
gs
jns
sub
cltd
scas
add
push
push
xchg
insl
fwait
adc
imul
add
mov
mov
mov
inc
mov
mov
data16
or
push
std
cmp
mov
and
lret
arpl
lret
js
pop
movsl
in
test
xor
in
inc
cmpb
in
xor
mov
repz
xchg
pop
fwait
mov
ljmp
mov
rcl
add
sbb
sbbb
cli
and
movsb
mov
test
dec
add
pop
cmp
out
loope
fstps
push
divl
mov
in
inc
ret
arpl
adc
adc
pop
sahf
mov
pusha
mov
dec
push
shlb
dec
les
sub
mov
in
and
lea
and
add
cmpb
jle
sub
out
pop
pop
inc
fisttpl
sbb
and
adc
xchg
push
loope
push
aad
mov
fnsave
hlt
inc
inc
inc
sahf
push
lret
mov
and
push
sub
or
inc
pop
cmp
pop
test
jnp
ffree
xor
xlat
ret
popf
les
xchg
mov
ret
arpl
insb
pop
push
scas
icebp
shll
jmp
mov
pop
pusha
adc
xchg
stc
nop
xchg
xor
insb
aad
sbb
leave
popa
sbb
mov
stos
mov
test
jle
insl
mov
pop
and
pop
jns
mov
cs
xchg
stos
hlt
jl
and
sbb
outsl
outsb
xor
and
mov
lds
mov
scas
inc
daa
adc
dec
movsb
cwtl
push
je
xor
icebp
push
push
addr16
inc
and
imul
inc
ds
cmp
mov
pop
push
ret
fwait
cld
inc
arpl
pop
sbb
mov
scas
inc
pop
subl
gs
rol
pop
ret
xlat
andl
add
jp
push
mov
in
and
adc
ss
out
cltd
subl
mulb
sub
jecxz
lea
dec
jbe
lcall
shl
adc
pop
mov
jae
in
xchg
clc
jae
adc
xchg
adc
into
mov
pop
in
pop
mov
jb
xor
dec
stc
pop
stos
jns
imul
inc
inc
cmpsb
shll
fadds
jp
in
faddl
sarb
insb
mov
pushf
pop
sets
repz
notl
mov
add
add
push
xchg
pushf
and
lods
lods
daa
test
outsb
mov
loope,pt
enter
stc
dec
lea
add
xor
push
icebp
clc
push
push
stos
jl
shll
sbb
shlb
jbe
pop
cmp
inc
imul
bound
add
fmull
and
test
outsl
in
or
out
sarb
sub
rcll
dec
divl
add
dec
mov
pushf
pop
jmp
adc
inc
sub
ss
out
push
in
pop
pop
adc
push
dec
jbe
jae
call
jo
mov
sbbb
lea
jnp
in
mov
fwait
repnz
inc
sbb
push
cwtl
pop
movsl
push
mov
push
fwait
stos
decl
mov
add
mov
test
stos
push
bound
into
cltd
adc
mov
cmp
adc
mov
sbb
pop
aaa
mov
rcrl
xor
push
lret
test
adc
sbb
data16
or
pushf
mov
out
in
pop
pop
mov
jl
shrl
lods
or
in
outsb
imul
jnp
inc
mov
call
or
lcall
jo
push
mull
mov
mov
sti
mov
pop
mov
out
daa
add
aas
cwtl
pop
out
fnsave
push
scas
sti
mov
mov
sahf
inc
scas
mov
iret
jnp
pushf
andl
fldenv
xchg
adc
jg
jle
push
push
shrl
mov
aam
fnsave
and
loopne
shlb
std
sbb
push
movsl
cmpsl
adc
jge
xchg
cmpsl
cmp
jg
stos
or
xor
pushf
pop
mov
call
add
mov
and
bound
cmp
cmp
xchg
jne
jp
push
sub
clc
or
jnp
cmpsl
jns
out
nop
int3
test
sbb
or
popa
insb
ss
push
dec
mov
test
fnstsw
mov
icebp
or
je
cli
lods
push
push
in
add
andl
inc
stos
xor
je
fstpl
gs
icebp
rol
sub
adc
mov
and
sub
cmp
mov
xchg
lret
test
push
mov
cmp
in
adcb
sahf
scas
je
mov
fcomp
adc
jo
jb
lods
mov
andb
mov
fildl
lock
in
adc
in
jmp
arpl
scas
xchg
and
or
jmp
mov
add
pop
xchg
mov
loopne
fsubl
sbb
add
bndstx
adc
daa
fiaddl
pop
dec
test
lods
aas
imul
xor
fsts
fnstcw
push
jno
andl
jge
sahf
sub
mov
xchg
sbb
test
fs
jg
aas
sti
xchg
jo
push
andl
nop
cmp
or
icebp
add
das
aad
shrl
divb
leave
and
or
nop
lret
cli
shlb
inc
cmp
mov
push
push
adc
ss
jmp
fwait
cmp
and
insb
fsubrp
jp
out
js
popf
lock
cmp
in
mov
fstps
shrl
test
cmp
fimull
mov
aam
mov
daa
sbb
mov
push
pop
das
loope
mov
mov
push
int
clc
mov
mov
inc
aam
shrb
aad
mov
les
cmp
and
rcr
ret
lea
pop
mov
call
inc
sbb
cli
mov
dec
arpl
push
outsb
ds
scas
mov
popf
in
shll
jae
add
pop
flds
pop
js
xchg
add
add
dec
pop
imul
sbbl
dec
loop
lret
push
xchg
lock
jmp
sbb
cli
pop
cmp
lock
out
dec
ljmp
inc
test
sub
inc
cltd
pop
nop
lret
imul
mov
xor
pop
out
cmp
cmp
pop
jbe
sbb
xchg
xchg
pop
push
imul
sub
mov
xchg
icebp
imul
inc
fcmovne
repnz
in
adc
test
add
movsl
dec
dec
mov
adc
fstpl
and
insb
xor
xlat
or
stc
mov
dec
pop
or
pop
scas
imul
adc
cmp
mov
and
jne
movsl
cmp
idivl
inc
cs
lods
mov
cld
jl
cmp
cmpsl
pop
clc
sahf
fdivrs
call
int
jo
movsb
dec
jno
xor
sub
or
mov
dec
push
xor
xchg
add
sub
das
xchg
mull
ljmp
out
cmpsl
movsl
out
mov
jno
cld
in
fidivs
push
test
lret
arpl
cld
cmp
mov
mov
mov
jmp
xchg
fsub
or
outsb
jge
shl
ja
push
push
sub
and
dec
std
sbb
idivb
dec
mov
dec
mov
or
push
jbe
push
stc
test
sub
xor
jp
push
mov
push
cld
xchg
test
lahf
popa
dec
add
clc
in
clc
xchg
les
pop
mov
mov
sub
shlb
dec
xchg
repnz
or
add
ds
push
dec
hlt
or
cmp
inc
movsl
jl
out
and
xor
in
outsb
mov
aas
xor
push
repz
mov
mov
addr16
sub
push
xor
cwtl
or
cmp
add
cmp
popa
push
push
sub
sbb
jno
lahf
jbe
xchg
cs
xor
mov
lods
shrl
outsb
pusha
inc
scas
aam
xchg
stos
jne
lods
cmc
and
sub
inc
out
dec
lret
cld
sub
or
orl
andl
cs
cs
aaa
or
mov
mov
sti
xchg
inc
push
pop
insb
fistpll
mov
das
jp
pop
xor
sub
mov
pop
stc
mov
mov
adc
aaa
daa
popa
aaa
add
push
and
sti
das
mov
sahf
cltd
es
mov
push
ljmp
test
sbb
out
jp
xor
adc
bound
mov
test
push
jne
xor
push
mov
jecxz
push
call
movsb
aas
fsubrp
pop
in
ret
aas
inc
popa
popa
mov
pushf
mov
jle
ret
cmp
loop
sbb
xor
inc
fstl
dec
or
xchg
xorb
jle
lret
into
adc
fcmovnbe
push
adc
lea
adc
dec
or
adc
xor
dec
and
dec
push
sbb
mov
xchg
bound
add
repnz
xchg
lods
nop
dec
adc
and
xchg
loope
in
sbb
stc
mov
xchg
test
mov
cmc
add
or
mov
jmp
cmp
jns
shll
lock
andl
insl
shl
decb
lret
sbb
push
pushf
inc
shlb
pop
dec
pop
jl
rol
mov
cmp
and
adc
test
inc
xchg
cmp
xlat
fcmovb
lea
insb
xor
addr16
dec
in
xor
lods
push
jbe
mov
jns
shrl
xor
cmc
pop
lods
lods
push
jmp
sti
mov
int
mov
sub
test
sub
int
jnp
cmp
stos
hlt
das
jge
in
sahf
fstpt
mov
andl
xchg
std
xor
movsl
cmpsl
stos
in
lret
sbbl
mov
sub
int
sbb
xor
mov
loopne
mov
cmpsl
inc
adc
pop
cld
scas
add
sub
cmpsb
lock
bound
into
in
xchg
pop
out
inc
test
stc
out
shll
mov
les
pop
aas
xchg
xor
cli
daa
dec
jb
add
cmp
cmp
nop
cmc
pop
xor
mov
andb
jbe
add
mov
push
xchg
sbb
pushf
icebp
scas
and
jle
sbb
out
jno
lahf
jno
test
add
mov
inc
pop
xor
jle
inc
scas
inc
out
inc
std
rorb
add
sub
jp
xchg
jno
js
data16
push
cmp
push
mov
mov
mov
in
cmc
mov
andb
xor
pop
cs
mov
add
packuswb
adc
push
jecxz
fucomi
pop
insb
xor
adcl
enter
icebp
adc
pop
addr16
mov
adc
inc
push
mov
sbb
mov
repnz
dec
fistpll
rcll
pop
data16
dec
cmp
jo
popa
in
adc
add
aas
fisttps
push
in
or
xchg
stos
mov
pop
xchg
jmp
xor
test
mov
or
push
in
push
jnp
sar
pop
cmpsl
insl
xor
stos
cs
adc
xchg
dec
xor
imul
insl
addr16
sarb
mov
inc
fidivs
mov
jmp
ss
inc
ds
clc
mov
dec
fucomp
loope
ja
rcr
mov
sahf
les
xor
js
mov
sbb
lahf
jnp
and
stos
ds
aad
scas
outsl
adc
xor
lock
and
dec
pop
outsl
mov
sbb
pop
mov
xchg
mov
jnp
dec
lahf
lods
jno
xor
dec
cmp
pop
xor
adc
inc
inc
in
stc
addb
jno
add
xchg
mov
stos
into
mov
jne
loopne
sarl
add
inc
inc
cld
xchg
pop
push
mov
insb
call
lods
repz
ret
add
mov
stos
pop
or
mov
enter
add
mov
push
jp
jp
lods
jmp
fidivs
mov
sbb
mov
je
pop
xor
cmpsb
les
xchg
adc
sub
adc
dec
jns
or
leave
cmp
pop
dec
mov
jbe
or
sbb
push
sbb
sub
in
jae
les
idivb
stc
push
in
add
sahf
push
clc
cmpsl
test
shlb
or
popf
sub
and
js
mov
add
mov
lret
or
stos
jae
sub
lcall
icebp
iret
imul
or
and
insl
xchg
popa
inc
insl
rolb
dec
cmp
or
cmp
adc
lret
and
inc
mov
mov
cld
sub
push
pop
mov
sahf
jno
cmp
data16
xchg
mov
xorl
outsl
and
inc
lret
mov
movsl
sbb
sbb
jl
xchg
push
test
js
or
iret
push
xor
sbb
call
jno
inc
xchg
ss
mov
mov
sbb
inc
aad
repnz
cld
push
dec
cmpsl
shll
cli
sbb
shlb
insl
clc
test
ja
push
cltd
add
imul
mov
sahf
and
and
mov
std
adc
xchg
jne
jl
js
in
or
clc
adc
push
aaa
rol
loope
jnp
sub
pop
js
jge
adc
mov
les
in
or
fs
jae
xor
dec
pop
stos
mov
pop
inc
pop
test
pop
xor
ret
jo
loop
jl
xorb
xchg
pop
add
cmpl
sbb
iret
leave
je
leave
dec
movsl
mov
add
popa
clc
adc
stc
outsb
nop
xchg
sub
addr16
ss
xchg
aas
jmp
dec
rcrb
cmp
lcall
rorl
rol
mov
bound
aam
or
add
jno
inc
jno
xchg
xor
loopne
out
xchg
mov
lret
sti
pop
addr16
cwtl
sbb
aas
lds
push
mov
sbb
ret
out
cmp
sbb
xor
in
jns
les
jb
jle
gs
push
lret
in
adc
ss
adc
std
jnp
ljmp
aad
mov
js
lret
jnp
push
leave
add
xor
xlat
and
stos
outsb
or
imul
into
adc
lds
mov
imul
cmpl
fstpt
inc
gs
mov
xor
fbstp
cltd
cmp
fwait
loope
mov
xchg
xor
pushf
movsl
jmp
pop
xor
mov
sbb
nop
xor
fmul
call
and
imul
adc
pop
lock
push
sub
data16
rcl
mov
dec
out
ret
gs
jb
scas
mov
sbb
adc
in
shll
arpl
xchg
call
cli
pop
subb
popa
mov
mov
aas
mov
mov
data16
push
dec
scas
push
in
push
dec
fidivs
popa
nop
pop
jbe
lcall
dec
cmpsb
rolb
dec
jecxz
xchg
lret
rol
mov
lods
jg
filds
fidivl
fbld
push
jb
mov
push
mov
leave
lock
adc
fimuls
repz
jne
cmpsl
aaa
jae
imul
mov
jae
xchg
jb
scas
cmpsl
jmp
iret
push
in
fnstenv
xor
ret
mov
rorl
mov
mov
repz
cli
sub
subl
aad
lock
cmp
scas
fistl
xor
arpl
stos
loop
mov
lods
mov
sub
adc
push
aaa
pop
andl
cli
adc
sub
xchg
arpl
dec
cld
push
jne
mov
jmp
rcll
mov
add
or
push
and
sbb
or
pusha
scas
cmp
sbb
cwtl
loopne
pop
std
testl
outsl
inc
dec
loop
mov
pushf
stc
or
dec
shl
dec
pop
loopne
ret
fbld
aaa
mov
pop
dec
sbb
push
lret
mov
out
jae
push
lcall
dec
loopne
movsl
sbb
xchg
cmpsb
add
push
cmp
dec
dec
sub
lock
mov
loope
inc
push
mov
repz
mov
xchg
lret
jmp
sbb
ret
xchg
js
cmp
pusha
aam
adc
pop
push
ficompl
addr16
lods
lods
mov
mov
fnstenv
and
test
mov
lock
fdivs
in
aam
testb
pop
mov
inc
sti
and
repnz
ljmp
lock
popa
sub
pop
pop
pop
shll
js
out
test
aas
loope
jno
ret
dec
mov
or
jg
jae
or
inc
mov
in
shlb
xchg
inc
cltd
mov
mov
cmp
add
aam
add
mov
push
clc
pop
int3
mov
shr
add
aam
xor
sub
cmc
cmp
dec
stc
in
sub
in
test
in
cmp
shlb
ret
inc
and
push
push
subl
sub
inc
pop
dec
das
inc
ret
add
sti
dec
je
lret
xchg
ja
insl
arpl
insl
adc
mov
and
jb
lcall
nop
in
push
xchg
inc
dec
aas
add
mov
lahf
leave
int
inc
mov
jmp
lret
inc
cmp
mov
jecxz
or
cmp
lock
mov
add
lea
and
aaa
adc
sbb
dec
in
sub
sbb
daa
outsl
test
xorb
sub
leave
pop
out
repz
xor
add
fstps
push
insl
enter
inc
and
mov
jbe
stos
push
and
push
out
out
adc
in
rclb
adc
sub
sub
out
inc
mov
iret
in
inc
xlat
push
push
pop
outsb
dec
dec
mov
subb
cli
test
repnz
push
das
xor
mov
jae
push
stos
ljmp
movsl
shrl
adc
scas
pop
dec
loope
test
test
inc
cmpsb
xchg
add
add
add
push
es
js
xchg
push
mov
mov
pop
fcmovbe
repz
stos
cmp
aad
fbstp
aad
dec
pop
in
stos
jne
or
and
pop
sbb
adc
mov
inc
adc
xchg
and
jno
out
repnz
dec
aas
aaa
insl
jbe
sti
push
jae
cld
popl
popa
xor
or
adc
aad
mov
fstpl
xor
sahf
xor
sbb
jne
inc
cmp
xor
aaa
repnz
adc
or
jle
fildll
jno
ds
shlb
and
push
fsubr
test
int
xor
cld
xchg
sub
jb
pop
mov
pop
or
dec
xchg
insb
shrl
pop
bound
push
sti
enter
xchg
mov
pop
mov
sbb
jb
mov
pop
pop
dec
fisttps
or
repnz
in
outsl
push
fs
sub
lods
pop
pop
dec
push
mov
gs
rcl
cld
and
insl
xchg
hlt
mov
mov
xchg
dec
pop
stc
nop
dec
icebp
mov
jg
std
aaa
into
in
jge
xlat
insl
xchg
mov
ret
mov
mov
pop
inc
fimull
cli
xchg
and
xor
out
jle
jg
xchg
pop
repnz
xchg
sub
rclb
mov
cmp
out
add
jno
xchg
lds
pop
out
dec
js
sub
aad
mov
mov
mov
mov
cmp
gs
fdivrs
daa
mov
mov
xchg
stos
repnz
mov
cmpsb
in
jbe
xchg
jbe
inc
nop
add
xchg
loop
mov
xchg
shrb
and
jnp
push
mov
xorb
movsb
mov
mov
mov
sub
stos
xor
fs
jo
add
mov
pop
test
stos
imul
loope
sub
in
lcall
lds
imull
aad
cmp
outsb
sbbl
outsb
xor
lahf
into
shlb
xchg
mov
lds
out
xchg
shlb
je
scas
movsl
and
add
je
inc
cmpsb
rorb
clc
pop
es
push
mov
xchg
int3
insl
add
roll
dec
ja
and
addr16
cltd
xor
andl
sub
xchg
cmp
movsl
pop
adc
rep
mov
stos
xor
cmpsb
mov
test
ret
pop
fldln2
addr16
pop
push
mov
sbb
movsl
xchg
lea
in
mov
inc
pop
mov
cmp
into
push
cmp
ret
imul
dec
in
orl
lcall
adc
pop
ss
addr16
fwait
xor
dec
in
xchg
mov
inc
xchg
pop
imul
mov
rclb
cmpsb
pop
dec
loop
xchg
addr16
xchg
dec
out
push
ja
mov
xor
xchg
xor
ret
lret
sub
mov
movsb
ret
sahf
mov
fimull
xchg
mov
les
test
cltd
ret
pop
int3
cwtl
mov
int
push
in
test
rorb
ret
imul
xchg
movsl
mov
sahf
mov
gs
test
adc
mov
call
add
test
loopne
inc
push
ja
inc
movsl
xor
aad
incb
inc
xlat
push
ficompl
mov
jae
insl
test
lret
add
insl
push
fistps
imul
repnz
xchg
cmpsl
push
imul
enter
mov
mov
imul
in
nop
mov
lds
mov
push
xchg
and
outsl
push
movsl
cmp
mov
ja
enter
pop
pop
jno
xchg
int3
rclb
xchg
sub
arpl
jo
mov
cmpb
jno
fdivrl
ret
push
jnp
aaa
pop
xchg
sub
fwait
sbbl
or
mov
push
pop
sbbb
inc
call
arpl
or
jns
mov
outsb
or
adc
add
xor
adc
adc
xchg
sub
ret
push
mov
sbb
xchg
pop
ret
jle
push
scas
inc
mov
jg
adc
sub
ss
ret
pop
jb
test
adc
daa
mov
cmp
mov
push
cmpsl
sbbl
or
jae
test
and
inc
xlat
sub
xor
fwait
xor
in
sbb
or
test
stos
cmc
mov
loop
test
inc
cmp
or
fldl2t
push
lods
sbb
mov
cmp
lahf
sbb
test
pop
repz
insl
sbb
jmp
mov
push
in
ds
xchg
sub
lock
xchg
negb
xchg
shrb
sbbl
jge
das
mov
xor
insl
gs
lahf
ljmp
cs
mov
fsubrs
dec
data16
cltd
adc
xor
out
test
xorb
mov
cmp
or
in
popa
clc
pop
lahf
ja
into
adc
or
push
add
cmp
cmp
repz
and
outsl
push
pxor
jns
adc
addl
pop
xor
xor
incb
leave
pusha
xor
sti
jmp
sub
fnsave
adc
inc
nop
lods
inc
mov
push
push
jns
dec
xor
punpckldq
push
mov
shll
movhps
inc
sub
adcb
mov
xor
rol
xlat
add
ret
and
or
cli
adc
jo
sbb
jo
loopne
mov
or
push
ds
les
into
gs
imul
or
enter
jp
in
ficoml
sarl
or
insl
cmp
cmp
pop
out
cmpsl
adc
or
sahf
cmp
dec
loopne
out
dec
push
ror
bound
mov
or
or
cmc
mov
movb
in
or
jno
or
lds
sahf
xor
xchg
xlat
mov
push
mov
dec
pop
fidivl
insb
shrl
mov
xor
out
xchg
jg
enter
jnp
jne
mov
jno
add
outsb
lods
inc
lahf
jle
cmp
js
aam
fdivl
jne
lcall
shrl
insb
mov
xchg
mov
ljmp
inc
inc
ja
ljmp
sbb
mov
dec
or
dec
popf
arpl
in
mov
cmp
inc
or
pop
cmp
sbbb
pop
push
icebp
stos
jns
fstl
nop
daa
dec
mov
das
push
aad
push
dec
data16
aad
icebp
or
scas
inc
and
xor
inc
mov
cld
jecxz
jns
leave
add
cmp
int
sbb
les
mov
loope
nop
xchg
movb
inc
push
push
insl
add
aas
aaa
into
insb
movsb
gs
rorl
dec
data16
cs
adc
mov
xor
jo
cwtl
mov
sahf
mov
fstl
loope
outsl
xor
xor
mov
mov
jge
aas
lods
inc
insl
sub
mov
faddl
xchg
or
mov
comiss
mov
scas
jle
jg
int3
insl
cli
leave
sbb
dec
xor
cmp
imull
pop
cmc
inc
push
and
xchg
popf
scas
inc
rorb
push
in
test
lahf
xchg
pushf
adc
rclb
xchg
in
adcl
repz
xor
addb
je
loope
mov
out
add
jmp
lock
add
in
lock
pop
mov
dec
sbb
scas
inc
in
hlt
iret
xor
iret
mov
inc
int
lea
sub
jg
xor
or
imul
push
sub
sub
js
cmpsl
inc
or
aas
movsb
dec
push
mov
enter
data16
fdivl
sub
ljmp
adc
test
data16
fucomip
stc
daa
rcr
xor
push
loopne
cmp
xor
in
rcl
push
fnstcw
sbb
fisttps
or
enter
pop
into
je
fmuls
cmp
test
imul
dec
aam
cmpl
popf
xchg
pop
int3
xor
arpl
loope
sub
imul
pop
adc
icebp
adc
cld
shl
push
xlat
fcmovb
pop
or
divl
enter
mov
fiadds
lods
pop
rorb
add
mov
loope
call
mov
outsb
cltd
repz
cltd
pop
fiadds
sbb
jb
and
cli
dec
enter
sbb
jge
add
jb
int3
inc
sbb
fwait
xor
sarb
lods
call
fldl
stos
lret
popa
jnp
mov
arpl
xchg
sub
stos
cwtl
xchg
sub
addr16
push
mov
cmpb
rorb
rcll
push
test
xchg
xchg
mov
ljmp
xchg
lods
inc
mov
or
test
adc
cltd
testb
in
jb
into
jbe
test
out
insb
mov
sti
dec
mov
into
pop
cmc
arpl
cmp
mov
inc
movb
cmp
in
jl
lea
pop
lret
shld
ss
lds
call
mov
in
test
popa
daa
fistps
shrb
ss
out
lds
arpl
leave
inc
jecxz
cmpl
mov
cmc
push
cwtl
xor
in
dec
ret
sub
mov
mov
jg
xchg
pushf
xor
push
fdivrs
jmp
cmp
inc
fstpt
aam
insb
fwait
out
xor
dec
aas
jb
cltd
or
mov
xor
pushf
xor
daa
fsts
fwait
cmpb
xor
nop
jnp
mov
sbb
mov
pop
jo
lods
dec
sub
adc
push
or
xchg
enter
test
iret
xchg
jl
cwtl
dec
loope
or
mov
fisubl
fcmovnbe
dec
mov
iret
push
iret
fcmovne
outsl
mov
test
fs
dec
and
fnstenv
inc
lret
sbb
push
xor
mov
cld
xor
repz
mov
sti
and
pop
scas
sbb
es
cmp
xor
jl
push
dec
icebp
fnsave
mov
lahf
inc
dec
aam
stc
mov
mov
sti
xchg
outsl
mov
xchg
or
jecxz
pop
lods
adc
hlt
sbb
pusha
idivl
sub
mov
out
in
add
dec
push
shlb
lods
dec
or
imul
aas
mov
ret
fisubs
add
movsl
xor
jp
adc
mov
loopne
and
or
dec
loope
aad
sbb
loop
or
repz
lret
loope
fiadds
mov
mov
fldl
in
lds
sarl
icebp
adc
cmpsb
addr16
inc
cmc
jmp
cld
pop
add
or
lock
inc
and
pusha
loopne
das
mov
loopne
jns
sub
jp
xchg
jne
xor
mov
sarl
xchg
mov
pop
aas
repz
stos
addl
jne
lods
arpl
pusha
pushf
push
arpl
xchg
push
jae
mov
dec
push
jp
pop
stos
cltd
xor
sbb
sub
lcall
push
mov
mul
sub
jle
cmp
rcll
imul
cmp
test
ret
jg
add
pop
stc
inc
pusha
inc
mov
es
addl
xchg
add
push
adc
inc
xor
cmp
ret
push
jp
mov
mov
jmp
popa
xchg
bound
outsb
add
pop
xorl
pop
push
pop
stc
push
cwtl
inc
fcmovne
pop
pop
adc
mov
mov
out
mov
fnstenv
mov
pop
and
scas
js
mov
mov
xor
dec
xchg
xchg
insl
push
add
pop
imul
push
pop
mov
js
jle
mov
fnstenv
sbb
sarb
pop
dec
inc
cltd
pop
xchg
jecxz
adc
sub
push
scas
cs
xchg
cmc
daa
adc
lods
mov
push
rclb
not
fisubrs
push
in
mov
inc
hlt
mov
mov
popf
outsb
imulb
aaa
pop
movsl
pop
mov
in
jne
orb
mov
or
jg
jmp
popf
push
pushl
push
adc
dec
mov
into
cmp
mov
add
pushf
xchg
mov
rcl
dec
sti
es
or
push
js
or
jo
std
adc
mov
std
adc
shr
popf
rol
icebp
mov
and
enter
dec
into
das
repz
idivb
pop
or
popf
insl
xchg
das
mov
outsb
mov
notl
fdivp
rolb
or
out
jmp
fwait
aam
mov
out
jne
fisubrs
stos
jb
sub
jp
mov
ret
pop
arpl
loope
pop
scas
nop
mov
and
ss
idivb
out
aas
jnp
and
cmp
and
scas
test
or
test
add
and
cld
pop
ljmp
cmp
js
out
xor
shll
popa
sub
aas
iret
xchg
mov
mov
jnp
jo
ret
aaa
lret
cmp
stc
sub
and
sbbl
in
frstor
push
xor
or
mov
xchg
xchg
dec
bnd
ja
dec
add
xchg
and
push
lods
popa
xchg
test
test
sbb
outsl
push
in
dec
fwait
insb
mov
dec
mov
enter
jns
mov
xchg
notl
iret
sbb
in
sbb
scas
jge
jecxz
or
mov
sub
sbb
add
fstpt
push
mov
jle
push
leave
pushf
sub
xor
stos
idivl
fsubp
testl
call
or
mov
pop
aam
insb
pop
push
xchg
jp
out
and
inc
addl
sbb
add
es
subl
push
adc
cmp
push
jno
stc
xor
jbe
push
pop
into
and
outsl
mov
xor
sbb
sbb
dec
mov
jbe
imul
xor
das
roll
loopne
cs
xor
into
arpl
mov
stos
gs
xchg
xor
orl
shrl
jecxz
cmp
pusha
mov
and
addr16
addl
cli
pop
dec
mov
lcall
pextrw
pop
xor
test
or
ss
imull
or
add
outsb
in
dec
pop
imulb
pop
ds
lods
pusha
aam
js
lret
xor
ds
jge
loop
add
nop
insl
xchg
sti
sub
imul
dec
add
imul
and
sbb
dec
mov
call
jmp
scas
cwtl
data16
sbb
and
iret
sub
jne
mov
imul
push
jns
loopne
jbe
in
dec
cs
adc
dec
daa
mov
add
test
js
push
inc
outsl
add
aas
xor
mov
fldl
add
cltd
jb
cs
into
jl
xchg
jle
mov
cltd
fs
mov
jge
bound
xor
jg
pop
imul
dec
push
pop
shll
pop
fidivl
push
stos
hlt
and
movsl
cmpsl
push
rclb
repz
lret
bound
std
cmp
pop
aam
jae
mov
mov
hlt
out
pop
int3
cmp
mov
loop
pop
repz
mov
cmc
mul
xchg
xchg
movsl
or
loope
sahf
push
or
addr16
sub
pop
lods
aam
push
mov
pushl
cmpsl
lock
lea
int3
daa
fcmovu
push
jno
aas
dec
mov
inc
push
jecxz
xor
jno
inc
dec
es
out
test
stos
jno
out
sub
push
xor
lods
in
jb
outsb
xor
mov
push
xchg
cmp
cmp
pop
mov
mov
test
das
sbb
mov
jp
xchg
pop
shlb
jne
mov
mov
pop
inc
in
fbstp
lret
ss
loopne
aam
out
inc
imull
das
andl
cmpsb
data16
pop
add
xchg
jl
xchg
push
jno
imul
and
pushf
push
inc
ficomps
sbb
adc
in
pushl
shll
mov
ljmp
cmp
push
fisttpll
sub
shrb
sub
sub
repnz
xor
xchg
push
scas
mov
in
dec
mov
adc
cmpl
divb
out
cmp
or
je
es
inc
jp
imul
adc
imul
push
cmpl
popa
fidivrl
xor
jnp
mov
into
fdivs
divl
int
or
xchg
test
cmp
imulb
xchg
inc
lret
sbb
fs
cld
cmp
mov
push
mov
movsb
sbb
test
sub
jg
or
dec
cs
sbbb
dec
les
and
jmp
xchg
cmpsb
jo
clc
add
push
xchg
mov
aad
cld
mov
and
std
and
jo
add
clc
and
dec
aam
pop
cmpsl
lret
jle
cmpsl
push
xchg
dec
std
pop
dec
ret
imul
mov
mov
pop
sub
cwtl
jp
daa
dec
lock
shrb
inc
jb
inc
mov
jnp
jle
xchg
xchg
xchg
stc
scas
fs
jecxz
xchg
mov
sbb
in
aam
imul
shlb
fadd
jno
data16
das
push
push
jnp
xor
into
add
xor
repnz
cli
push
rol
fdivs
out
shll
jecxz
scas
in
test
pop
xlat
cmpb
sub
shrl
push
loope
pop
mov
repnz
pop
xor
inc
out
int3
dec
adc
inc
fcoml
pusha
std
into
dec
lds
je
jne
mov
mov
jmp
pop
ljmp
cmp
pop
in
lods
jg
xchg
insb
mulb
mov
sbb
es
lahf
dec
iret
and
clc
inc
cwtl
xorb
inc
mov
pop
std
imul
add
mov
or
lret
xchg
lea
dec
movsb
test
and
popf
or
pushf
in
adc
jns
mov
mov
xor
arpl
mov
jle
sub
lahf
popf
fildl
cld
or
lret
scas
inc
or
leave
inc
mov
sbb
mov
out
mov
clc
popl
and
xor
sub
std
xor
mov
push
or
cmp
or
add
pop
movsl
pop
xlat
add
cmp
insl
mov
fnstsw
push
fisttpl
es
int3
ljmp
std
mov
mov
mov
fs
inc
fwait
xor
mov
loope
jnp
adc
xchg
repnz
or
cld
cmc
jbe
mov
out
and
jmp
test
cmp
push
sub
clc
lea
adc
enter
in
add
lock
xchg
dec
sub
or
jmp
fcompl
jne
iret
dec
out
cmp
ret
add
mov
addl
das
mov
adc
out
mov
fsubrs
lcall
add
fwait
dec
mov
push
sbb
push
pushf
mov
cmpb
jg
outsl
sbb
std
adc
add
ficoms
psrad
cmpb
adc
adc
pop
adcb
xor
in
xor
sbb
dec
movsb
push
movl
cmp
or
ss
jne
mov
in
pop
stc
test
add
or
xchg
lcall
ret
mov
adc
fsubs
repnz
les
and
loope
shr
ljmp
pop
add
add
jp
mov
sbb
xchg
push
pop
lret
stc
sub
or
jp
sub
jge
mov
clc
je
lcall
mov
js
cmp
dec
mov
lcall
les
mov
rolb
popf
cmp
mov
outsb
xchg
imul
aad
into
fadds
or
fsub
ds
scas
or
push
scas
lock
sar
mov
inc
mov
call
or
out
xlat
inc
int3
out
jecxz
lock
sub
testb
mov
mov
in
test
fisttpll
adc
sub
lock
in
test
shrl
subb
adc
mov
ret
rorl
xchg
pop
fidivs
stos
push
lret
xchg
dec
loopne
clc
jmp
ljmp
xor
and
loopne
loop
inc
shlb
xchg
and
adc
testb
stos
out
cmpsb
pop
sbb
nop
sub
daa
sbbb
add
mov
fdivrl
fxch
lea
fcmovu
je
or
inc
mov
lods
jns
enter
repz
adc
and
or
stc
popa
sub
or
hlt
sub
das
in
subl
nop
mov
enter
lds
xlat
mov
sbb
je
es
addr16
inc
inc
and
test
sbb
jnp
pop
in
test
inc
int3
stc
std
xor
dec
mov
sbb
cmp
push
jmp
or
mov
sti
ret
mov
shl
fsubrs
add
in
jmp
adc
in
push
std
push
enter
cmp
aaa
repz
clc
jbe
and
movsl
fsubs
xor
jmp
xchg
int
fldenv
fcmovnb
lods
pop
jecxz
int3
cmp
mov
test
aad
loope
jb
roll
mov
cmp
in
test
mov
cmc
mov
loope
repnz
or
xor
out
lcall
cmpsb
push
sbbl
test
pop
icebp
and
int
lea
mov
ficoms
xchg
add
aas
test
lret
cli
sub
cld
lret
dec
les
lods
jl
sub
jg
test
jb
sarb
pop
mov
mov
in
mov
roll
movsl
mov
mov
decl
cld
aas
sbb
xlat
outsb
scas
lahf
cltd
mov
iret
jecxz
aad
je
add
int3
arpl
and
mov
inc
loope
loopne
ss
in
out
xchg
sub
sub
jbe
daa
push
xor
leave
ja
lret
cmp
das
inc
sarl
fdivl
pushf
repz
mov
pop
inc
adc
out
cmp
xchg
lret
das
jns
jns
stos
pop
lcall
addr16
sbb
or
insb
dec
dec
mov
inc
leave
dec
xor
sub
pop
add
dec
jl
or
adc
arpl
adc
std
xchg
adc
pushf
pop
shll
daa
in
imul
loopne
mov
xor
imul
insl
lds
add
out
je
add
push
lcall
inc
xchg
cli
ss
mov
pop
lret
hlt
mov
aam
jle
enter
into
dec
mov
mov
repnz
nop
mov
repz
out
cmp
jnp
inc
dec
cld
filds
sub
leave
mov
call
dec
adc
aad
mov
imull
xor
jns
push
int
mov
push
pop
jnp
aam
jns
call
push
cmp
inc
mov
lret
arpl
xchg
loopne
jmp
hlt
adc
rcl
enter
mov
add
xchg
jo
add
fists
addb
loop
mov
aam
mov
mov
shlb
or
test
xor
push
mov
cld
cmp
scas
xchg
sub
push
dec
rcrl
cmp
ljmp
xor
jno
pop
cmp
cwtl
cmp
addr16
mov
cmc
and
jge
pop
aam
cs
mov
or
jno
pushf
dec
shrl
mov
pop
sub
dec
out
inc
and
fwait
xor
adc
jae
dec
rcll
or
aas
repnz
in
xor
push
pushf
jmp
int3
orl
xchg
adc
xor
jbe
cmp
je
cmp
incl
mov
inc
lret
mov
or
mov
push
pop
sbb
gs
outsb
orl
or
cld
xchg
pop
or
cli
dec
out
test
into
dec
movlps
lods
popa
fiadds
mov
mov
je
mov
add
ret
sti
dec
mov
fcoml
std
stos
pop
lret
data16
mov
adc
mov
cmp
clc
xchg
jle
pop
iret
inc
pop
enter
dec
test
ja
popf
call
orb
dec
mov
inc
or
lock
pop
inc
xlat
jbe
mov
adc
sbb
test
sub
adc
xor
ret
pop
ja
je
push
pop
call
cwtl
das
insb
pop
adc
dec
lea
sti
dec
mov
adc
xor
and
out
pop
adc
pop
cli
sub
mov
stc
inc
into
int
xor
mov
cltd
scas
jg
or
out
aas
test
nop
ja
loope
inc
sbb
fs
out
test
shrb
dec
pop
sbb
mov
imul
scas
and
and
mov
filds
cld
fsubrl
orl
pop
mov
adc
mov
cld
sub
out
shll
leave
pop
or
cmpsl
fmulp
popa
adc
sbb
xchg
and
xor
adc
and
add
xor
enter
leave
fisubrs
xchg
rol
xchg
xchg
mov
sti
addr16
jmp
test
pminub
or
lock
cmp
cmp
sbb
shlb
stc
test
mov
or
pop
leave
out
jns
nop
movsb
inc
mov
cmpsl
mov
pop
ljmp
jge
inc
into
pop
xor
call
push
jmp
or
fwait
in
fs
inc
test
shrb
das
das
testb
cmc
cmpsl
dec
jnp
cmp
or
xor
jmp
or
fldl
mov
inc
sbb
nop
stos
inc
pop
mov
xchg
push
cmp
inc
xchg
push
clc
adc
xor
and
adc
and
clc
xor
dec
pushf
push
add
push
ljmp
adc
and
add
sbb
push
xor
std
addb
push
enter
adc
jmp
arpl
divl
stos
cmp
imul
mov
pop
cmp
ds
xchg
xor
sbb
mov
cmp
jae
pop
xchg
add
add
jl
unpcklps
aas
mov
sbb
dec
dec
insl
push
push
dec
movsb
je
push
repnz
imul
inc
pop
pop
add
dec
jle
cmp
adc
jl
jecxz
popa
adc
xorb
sub
pop
mov
aad
xchg
dec
xor
dec
cld
dec
sbb
or
mov
jbe,pt
rcrl
ficoml
push
ret
pusha
addr16
ds
mov
ret
mov
mov
pop
repnz
cli
pop
cli
mov
cli
bt
cmp
pushf
xor
cmpl
jbe
mov
out
imul
sub
mov
mov
fdivrl
clc
cmp
add
xor
jns
lds
cs
mov
loop
push
or
lea
xor
sbb
into
jnp
xor
inc
lds
pop
sub
xchg
adc
jae
mov
lahf
icebp
arpl
cmp
repnz
out
push
mov
pushl
sahf
clc
or
ret
xor
in
pop
pop
mov
push
enter
cmc
pop
sub
xchg
mov
cli
or
adc
icebp
xor
fcoms
adc
mov
clc
pop
adc
in
add
aad
pop
les
mov
insb
xchg
and
push
xchg
cmp
je
mov
xchg
cmp
mov
mov
xor
jno
scas
cmp
loopne
clc
mov
ficoml
lods
or
xchg
lret
pop
cmpsl
xchg
sub
jle
jmp
sub
jo
add
data16
push
mov
lods
inc
test
lret
lret
inc
sub
ja
jmp
fmulp
jno
sahf
bound
pop
ja
aam
jb
leave
pusha
leave
xchg
jmp
add
imul
dec
jne
pop
hlt
in
xchg
lret
or
dec
mov
push
ljmp
jno
addb
cmp
insl
je
cmpsl
push
push
xchg
aam
les
jae
in
mov
divl
xchg
sub
scas
pop
push
cmp
dec
jle
ret
scas
jo
mov
int
pop
inc
mov
outsb
and
push
dec
in
jae
shld
dec
jecxz
testl
dec
out
pop
sbb
or
jbe
sub
leave
mov
repz
and
inc
lods
inc
xchg
sar
insl
add
hlt
push
mov
dec
mov
pop
insl
add
xchg
jmp
bound
sub
test
dec
mov
cmpsl
add
cmp
add
cltd
out
stc
enter
cmpl
jp
xor
sbb
mov
lret
push
mov
xchg
inc
inc
jg
push
and
mov
repz
jge
jg
adc
enter
lock
rorb
pop
in
dec
mov
aaa
xlat
push
test
fmul
and
dec
and
and
call
xchg
jae
clc
pop
mov
pop
dec
int3
mov
gs
outsl
mov
lcall
ret
imul
out
pushf
xor
insb
xor
lods
js
dec
xchg
xchg
add
ja
inc
sbb
fcomp
rcll
dec
mov
adcb
in
and
pop
lea
jmp
mov
push
jbe
push
sub
rcr
scas
add
mov
mov
jo
cmpsb
dec
push
pushf
addb
jno
and
mov
inc
xor
lods
je
or
mov
pop
int
dec
divb
int3
mov
push
leave
in
std
loope
jmp
sub
cmp
outsb
ret
mov
das
out
scas
rorb
jns
shll
push
aaa
lahf
out
lcall
dec
out
mov
movsb
popa
xchg
imul
xor
cmp
sahf
cmpsl
push
gs
lea
lret
push
pop
mov
and
or
jns
mov
sub
aaa
push
pop
call
fbstp
jno
push
push
imul
gs
aas
jb
lods
lahf
jo
adc
jbe
daa
subb
and
mov
dec
in
aaa
leave
les
push
jbe
mov
add
cmpsl
jecxz
lds
add
ret
push
aam
push
test
xchg
cltd
addl
jb
mov
enter
sub
into
dec
xchg
test
mov
fists
adc
inc
iret
jns
lcall
fwait
ljmp
pop
loop
cmp
add
mov
sub
int
les
stc
sarb
cmp
jb
xor
shl
lea
rol
pop
cmp
mov
jge
inc
xlat
in
pop
sub
dec
call
cmp
xchg
imulb
popa
or
jno
xchg
push
in
nop
sub
lcall
movsl
cmp
inc
test
ds
arpl
fucomip
adc
fnsave
mov
into
in
add
mov
test
sub
mov
ds
ds
pop
popf
xor
loop
add
push
ja
inc
lret
push
ljmp
rcrl
mov
sahf
mov
in
pushf
aad
iret
inc
int3
sti
xchg
mov
loope
adcb
das
sahf
xor
sahf
gs
dec
in
xchg
enter
push
and
xchg
fsubs
cmp
daa
xchg
cs
xchg
or
ret
jp
rcrl
cs
js
fs
mov
sub
sub
xor
mov
pop
iret
test
mov
call
das
mov
mov
push
dec
and
rcll
push
call
ret
movsl
dec
adc
adc
mov
xor
ret
loope
stos
jne
les
xchg
cmp
fwait
aaa
sahf
dec
ljmp
addr16
adc
sub
ds
repz
das
mov
jecxz
add
adc
scas
imul
and
cmc
js
dec
inc
in
mov
cwtl
mov
xchg
ds
test
sbb
in
ljmp
push
mov
sbb
movsb
push
jnp
mov
clc
jnp
hlt
dec
jmp
in
enter
dec
sbb
pop
mov
lods
test
jl
sbb
xchg
adc
dec
insl
in
ret
sahf
addr16
adc
pop
aas
adc
into
inc
jge
int3
bound
pop
ret
dec
in
fs
ret
movsb
inc
adc
pop
rclb
dec
fisubl
adc
adc
faddl
mov
inc
insb
xor
fisubl
pushf
pop
cmovs
test
popa
loope
in
jo
imulb
imul
rcl
jge
fmul
xchg
inc
lret
inc
or
mov
cmpsb
add
call
outsb
pop
push
std
xchg
jl
and
ret
inc
or
js
pop
inc
add
mov
dec
mov
adc
outsb
sub
roll
icebp
loopne
or
sub
mov
cmp
call
int3
xchg
inc
mov
in
sub
or
ss
ficompl
icebp
bound
or
sub
int3
xchg
ret
mov
push
cmpb
call
decl
aaa
shlb
int3
xchg
push
or
movsb
punpckhbw
pop
ds
jg
pop
daa
mov
aad
sub
fistpl
inc
repnz
inc
shl
push
cltd
test
scas
mov
mov
lods
cmp
imul
jno
dec
dec
imul
inc
cwtl
xor
insb
and
mov
mov
add
pop
aad
pop
adcb
rclb
pop
and
adc
ja
mov
or
push
dec
aad
rcl
cwtl
rcll
xchg
movsl
arpl
and
adc
add
push
icebp
lahf
rcll
sbb
adc
and
push
push
mov
aad
dec
rclb
call
lds
rcll
push
aam
test
inc
mov
movsb
imul
ds
xchg
sub
pop
sbb
inc
mov
clc
stos
sub
je
and
outsl
xchg
inc
fucomp
and
lds
jb
mov
and
movsl
and
jle
aaa
mov
push
jns
mov
nop
mov
test
and
and
pop
scas
sub
shlb
enter
movsb
push
in
push
icebp
dec
sbb
shll
mov
pop
mov
les
aad
pushf
pop
mov
repnz
dec
or
out
and
push
addr16
dec
add
into
or
push
sbb
nop
inc
sbb
adc
test
jp
xchg
inc
and
xor
pushf
mov
and
adc
loop
inc
adc
pushf
ljmp
mov
mov
adcl
inc
inc
xlat
jb
inc
xlat
scas
xor
fs
jge
jne
fistps
lret
adcb
ljmp
jp
mov
subb
and
cmp
pop
test
fistpll
mov
aas
or
xor
sub
sahf
call
cmc
rcll
das
icebp
gs
cmp
push
jae
js
js
add
pop
sbb
cmp
and
cmp
pop
shl
adcb
jns
cld
imul
xor
rclb
sub
mov
ja
cmpb
cmpsl
rcll
int3
push
mov
inc
lea
lcall
idivb
inc
mov
fwait
inc
pop
xchg
cwtl
aas
xchg
mov
fstps
mov
pusha
nop
mov
into
jb
daa
mov
mov
push
shlb
cmp
shl
test
sbb
repnz
mov
lods
push
xchg
mov
jle
ret
or
pusha
lret
and
mov
sub
ror
mov
adc
jp
cwtl
fimull
pop
jmp
cld
or
xchg
mov
repnz
stos
xchg
mov
mov
or
data16
imul
stos
jns
jo
mov
fstpt
push
lea
cmp
mov
lds
ljmp
sbbb
stos
das
mov
mov
fcomps
int
xchg
lods
xor
js
aad
add
das
ja
sub
xchg
jp
lret
inc
pop
jmp
inc
or
add
int
and
fs
pop
fdivs
inc
out
or
sbb
inc
push
iret
xchg
fstl
push
ret
mov
out
fnstenv
aas
jno
xor
cmp
orb
sbb
add
cld
leave
add
mov
rorl
pushf
or
push
ss
jmp
and
push
pop
fucomi
jae
mov
xchg
fsub
negb
or
repz
inc
jb
scas
imul
cmc
fsubp
imul
or
inc
cmpsb
and
in
mov
movsb
mov
xor
cmp
mov
aaa
movsb
cld
stos
pop
cld
enter
aam
inc
adc
int3
int3
ret
inc
sbb
into
or
sarb
testb
push
dec
or
je
cli
aad
dec
or
mov
clc
mov
dec
or
rorl
fcoms
xchg
jg
dec
push
add
rolb
inc
mov
sti
add
pop
sbb
adcl
test
fisubl
cmp
cmpsl
xor
jo
adc
jmp
test
xchg
xor
outsb
das
stos
cmpsl
and
xor
mov
xchg
xlat
dec
pop
xchg
int3
in
push
rclb
ret
jns
test
push
jge
aas
in
dec
or
and
xchg
pop
roll
ret
cld
cs
jle
test
pop
mov
mov
dec
or
lock
call
sub
add
das
mov
aad
rcrb
add
and
dec
js
inc
or
imul
mov
int
sahf
dec
push
add
fs
push
int
cmp
cmp
outsl
test
mov
mov
and
sbb
dec
rcrl
xor
push
popf
mov
fidivrl
repz
ret
iret
nop
negb
int
loope
int3
in
cmovp
fcomip
sub
mov
push
ret
mov
jae
inc
movzbl
in
stos
fbstp
fsubrl
push
pushl
inc
xchg
pop
out
jne
lea
jns
dec
data16
enter
cmp
mov
movswl
repz
negl
es
loop
dec
enter
pop
and
sub
jecxz
arpl
xchg
xchg
push
sahf
aaa
push
rcrb
mov
roll
adc
movsl
mov
dec
push
mov
rcrb
mov
push
fcomps
adc
adc
imul
mov
push
fwait
test
bound
xchg
jg
add
ss
sub
dec
out
sarb
repz
aam
dec
adc
add
jg
mov
cs
mov
int3
xchg
outsb
std
out
outsl
adc
xor
loope
es
jmp
push
out
fucomp
mov
or
jle
lock
mov
mov
fistpll
sub
test
fnsave
lahf
incl
or
cmpsb
ss
fsubrp
inc
adc
sub
sub
inc
adc
or
mov
pop
mov
xor
adcb
sbb
cmpsb
mov
mov
cli
cmpsl
push
or
into
pushf
cmp
dec
popf
aaa
or
int
mov
and
mul
je
mov
icebp
cmpsb
das
lea
mov
sub
xor
imul
sbb
mov
xchg
sub
mov
xor
pusha
lcall
xchg
sbb
fiaddl
fiaddl
pop
sbb
fwait
inc
jle
mov
sahf
imul
lret
lret
inc
or
and
test
mov
outsl
lock
sbb
js
push
cmp
cmp
mov
sub
pop
mov
cmp
sbb
and
fdivrl
incb
aaa
inc
mov
sbb
mov
addl
mov
popa
push
dec
mov
iret
jecxz
xchg
inc
sub
adc
xchg
xor
cmp
or
xchg
and
rcll
aad
std
movsb
pop
out
aad
jo
js
sarb
push
xlat
stc
inc
pop
add
adc
adc
jecxz
movsl
dec
mov
mov
jecxz
cmp
mov
mov
out
and
adcl
sub
insb
xchg
std
push
int
xchg
or
test
mov
mov
push
lods
mov
mov
adcb
mov
test
xlat
rol
xchg
imul
sbb
sub
lods
xor
xor
lcall
repnz
fnstcw
pop
push
sub
push
push
jbe
and
mov
mov
push
mov
push
sub
addr16
push
in
rcl
dec
adc
std
pop
cmp
roll
hlt
sub
jb
out
scas
sub
movsl
sub
inc
jnp
lahf
in
push
fimull
loopne
or
mov
push
lods
inc
sbbb
xchg
add
fldl
mov
int
rorl
jmp
inc
or
fiaddl
fidivrl
lret
pop
fs
test
inc
xchg
aaa
aad
test
cmpsb
xor
mov
lahf
fistpll
fmuls
fwait
sti
jno
sub
xchg
sub
dec
inc
or
leave
popl
dec
adc
lret
mov
daa
mov
xor
outsb
rorl
mov
loop
daa
data16
and
xchg
jecxz
push
cltd
leave
inc
adc
loopne
jno
in
in
jo
dec
adcb
push
add
cmp
jne
rcl
jg
movsl
js
push
ficoms
cmp
and
pop
scas
dec
or
xchg
jecxz
test
jecxz
jae
sar
push
iret
ret
int3
popf
sbb
rolb
dec
lret
ss
sti
pop
mov
rolb
es
jmp
cltd
cmp
lcall
fincstp
push
xsha1
cmpsb
dec
or
cmp
jl
sub
jle
mov
ret
jge
leave
inc
sub
out
jae
adc
js
negb
sarl
sbb
test
loop
test
sarb
rclb
arpl
mov
stos
push
mov
jo
ret
mov
mov
fstpt
xor
imul
sbb
pop
dec
xor
cmp
cmp
mov
imul
ror
mov
sarb
inc
test
mov
mov
add
icebp
ds
inc
in
jmp
mov
clc
push
add
mov
pop
mov
test
jns
mov
imul
movsb
cmpsl
out
add
pop
lcall
sahf
fdivrl
lock
adc
xor
and
cmc
les
cmp
imul
pop
push
push
in
orl
and
and
iret
pushf
aas
dec
gs
jp
lcall
loopne
and
jl
mov
and
lret
daa
mov
xor
enter
push
movsl
ljmp
sbb
inc
in
push
lea
mov
fbld
lds
or
ficoml
fs
xlat
or
sub
cmpsb
pop
ret
mov
scas
sbb
hlt
xchg
jb
inc
call
faddl
cmp
sarl
xor
imul
xlat
jb
fwait
jg
jg
jle
fs
loope
fadds
shrb
repz
xor
and
roll
in
lock
shll
dec
mov
fmuls
mov
int
lea
sub
cmp
das
or
adc
adc
jo
cmpsl
sub
jns
popf
xchg
bswap
sbb
pop
add
lahf
xlat
and
xchg
or
or
push
adc
jno
inc
jl
dec
mov
in
mov
test
jb
repz
std
xor
pop
decl
test
fstpl
lcall
mov
mov
mov
int
jae
add
rorb
daa
pop
call
int3
dec
test
rcrl
push
sti
imul
loopne
xorb
sub
adc
adc
cld
pop
or
mov
pop
fnstsw
insb
sbb
add
mov
xor
clc
gs
and
test
add
mov
xchg
popf
inc
mov
jg
adc
jns
pop
les
test
ljmp
out
stos
sub
mov
push
test
mov
pop
cld
psllw
loop
repnz
cld
push
enter
pusha
ljmp
loope
mov
lock
and
mov
lret
and
fstpt
gs
gs
xlat
ret
adc
dec
pop
js
loopne
add
lods
not
jl
mov
fiadds
outsb
pop
cmc
arpl
push
lcall
arpl
pop
test
mov
std
aaa
ret
nop
shr
fistpll
or
xchg
cwtl
cmp
sbb
pushf
fwait
push
or
jl
adc
andl
fucom
outsl
fs
loop
cs
jns
mov
push
ds
cmp
xor
repz
adc
mov
lahf
mov
lods
add
sbb
cwtl
daa
push
cmp
pop
scas
xor
in
jno
jle
test
lahf
jae
inc
mov
stc
pop
shrl
sbb
rcrl
add
push
in
imul
inc
push
test
cmpsl
adc
dec
leave
xchg
cmp
in
cs
insl
add
push
push
mov
mov
cmp
inc
or
sub
xor
lret
mov
daa
cmpsl
pushf
pop
inc
or
int
repnz
orb
inc
push
inc
sub
data16
lahf
aad
rorb
rcl
out
sbb
gs
popf
mov
or
lcall
push
xor
mov
out
imul
push
add
dec
in
ljmp
scas
or
dec
icebp
cltd
inc
push
mov
gs
lret
mov
xchg
lret
xor
outsl
sbb
inc
adc
sahf
jl
mov
mov
or
lock
sub
out
enter
aaa
mov
mov
mov
jge
test
jo
gs
jg
out
add
xor
sbb
loop
mov
or
mov
rorl
popw
adc
shll
xchg
mov
mov
mov
pop
fistpll
out
lret
bswap
dec
jae
icebp
and
pop
ljmp
pop
das
in
rolb
test
adc
push
dec
lret
lea
stos
sub
mov
addb
or
aad
mov
enter
jmp
cld
ss
mov
mov
ss
xlat
and
ret
add
repnz
mul
clc
arpl
jecxz
aas
mov
mov
xor
inc
xchg
xchg
cmp
cltd
or
imul
push
mov
jg
pop
shrl
imul
jb
andl
scas
sub
fnsave
scas
inc
daa
test
hlt
push
mov
lcall
filds
out
dec
adc
repnz
push
fcmovne
push
iret
lods
push
outsl
lock
mov
sahf
inc
hlt
fs
negl
cmp
and
push
mov
loop
mov
mov
mov
and
mov
insl
inc
in
inc
xor
leave
mov
cmp
shrb
aam
pop
jae
inc
movsb
call
cmpsb
sub
cmpsb
sub
xor
xchg
ds
mov
inc
mov
mov
subl
add
cmc
cmp
xor
cmp
mov
xchg
jle
cmc
fcomps
or
push
mov
cmp
shlb
cmp
or
push
adc
xor
mov
rorb
xchg
cmp
lods
add
sbb
lea
dec
fadds
push
test
lock
mov
dec
mov
jbe
xchg
enter
dec
pop
xchg
mov
adcb
pusha
lock
clc
mov
or
hlt
pusha
lods
or
xor
lock
loope
std
inc
fisubrs
fnstsw
std
xor
scas
ss
je
or
pop
jecxz
repnz
scas
imul
fwait
inc
loopne
dec
setbe
and
gs
pusha
js
fcompl
rorb
cs
jg
cmp
mov
mov
push
pop
jecxz
addb
xchg
aam
adc
inc
addl
jg
negb
and
mov
icebp
pop
xor
in
lret
push
or
pop
xchg
cmp
xchg
mov
daa
cmp
lock
pusha
icebp
adc
into
movsb
out
push
les
mov
shll
mov
push
push
sti
or
filds
shll
movsb
sbb
daa
test
popl
test
sub
loop
ret
and
add
pop
mov
push
mov
add
jne
movsb
js
mov
lret
rol
pop
push
stos
pop
and
pusha
pop
scas
xor
ja
out
hlt
inc
pop
xor
das
jecxz
pop
ds
shlb
push
lret
push
imul
mov
pop
cmp
sbb
and
int
lret
adc
and
roll
in
push
imul
repz
fimuls
jae
add
cmpl
xor
rorl
jnp
out
xor
mov
aam
pop
add
divb
fildll
cmp
test
add
push
fadds
mov
scas
mov
push
test
icebp
bound
stos
inc
lods
mov
enter
test
stos
pusha
lods
sub
mov
and
pushf
jne
rcrb
call
int3
fists
mov
xor
fwait
xor
push
out
xchg
mov
and
and
and
cmp
xor
pushf
xor
adc
inc
xchg
push
mov
mov
and
mov
negl
fidivrs
mov
stos
push
jecxz
mov
in
jno
or
pop
out
pop
add
std
popa
mov
mov
icebp
pop
fbstp
nop
ds
insb
icebp
add
cs
mov
xor
addr16
ds
dec
hlt
pop
sbb
and
push
in
mov
mov
mov
pop
xchg
cmp
into
hlt
arpl
cld
arpl
cli
lea
daa
mov
cmpsb
rorb
adcb
jle
pop
sti
jo
out
add
je
pop
pop
adc
dec
pop
enter
mov
dec
or
scas
lret
mov
mov
jge
and
cmp
pop
pusha
dec
or
ror
dec
or
daa
mov
push
fistpll
sub
pop
scas
sbbb
cmp
sbb
inc
mov
pop
mov
sub
cmp
add
in
loopne
add
movsl
inc
xor
xor
push
aad
fidivrl
add
lods
pop
icebp
pusha
push
andl
or
push
dec
or
in
imul
inc
ja
sbb
sahf
push
add
mov
mov
mov
imul
icebp
js
aam
out
icebp
fs
movswl
lcall
aaa
sbb
dec
pop
add
cmp
ret
sub
je
adc
mov
lahf
in
stc
data16
out
dec
bnd
call
add
mov
pop
daa
cmpsl
aad
push
add
nopl
lock
pop
std
and
xor
sbb
movb
rcrl
enter
leave
xchg
divb
jp
mov
mov
add
mov
jp
mov
stos
pop
add
sbb
mov
mov
lret
dec
jmp
cld
data16
nop
adc
scas
mov
aam
xor
pop
xor
sub
sub
push
fdivrp
in
mov
mov
dec
inc
pop
sti
data16
xchg
push
mov
xor
and
andl
push
jg
int
dec
std
pop
lret
push
and
sub
ja
and
insl
xor
mov
jnp
sti
iret
into
movsl
xor
sbb
shlb
push
add
cmpsl
adc
xchg
out
outsl
dec
int3
test
adc
push
xlat
test
jp
jg
ret
nop
enter
xchg
adc
pop
jo
ljmp
xlat
push
add
dec
push
add
xor
rclb
add
mov
mov
pop
jnp
filds
mov
int3
xchg
test
sbb
outsb
hlt
xchg
dec
psubb
inc
pop
jle
cld
data16
pop
mov
mov
jecxz
mov
stos
ja
mov
mov
jo
xchg
xchg
mov
in
jb
push
orb
loope
fildl
jle
push
or
mov
fnstenv
scas
sbb
mov
movsl
fidivs
test
addr16
add
test
iret
addr16
out
adc
mov
push
outsl
push
test
cmp
imul
sbb
aas
insb
or
dec
sub
imul
aam
call
in
push
out
sbb
mov
mov
mov
lods
scas
xor
add
and
scas
sub
sbb
sbb
jnp
in
mov
cmpsb
out
imul
cmp
cmp
mov
or
fnstsw
pop
mov
jmp
lea
scas
sub
and
mov
sub
inc
flds
fdivrs
cwtl
dec
adc
stos
xor
mov
dec
adc
cmpsl
stos
dec
adc
mov
cld
call
std
popa
jmp
adc
into
xchg
iret
inc
push
negb
icebp
mov
call
pop
pop
xor
push
push
inc
or
push
clc
dec
add
fdivl
stos
outsb
in
stos
mov
aas
mov
adcl
jmp
testb
xor
aam
mov
xchg
or
sbb
out
pop
cli
lea
aas
in
xor
and
mov
loope
cltd
aad
ret
dec
loopne
xchg
mov
lcall
fists
les
aam
mov
sbb
pop
aaa
fwait
xor
fiaddl
push
ja
pop
inc
pop
pop
add
xchg
xor
pop
sbb
add
cmp
lahf
mov
sub
cmp
and
pop
adc
push
cmp
and
xchg
ffreep
xchg
repnz
sbb
pushf
aad
lcall
mov
jno
mov
int3
dec
push
enter
cmp
mov
xchg
cmp
lods
push
notl
sbb
mov
jo
jp
mov
jno
push
mov
and
dec
pusha
gs
cwtl
xchg
loope
test
leave
pusha
and
sub
inc
pushf
jae
bound
xchg
cmp
js
gs
outsb
lahf
inc
xchg
dec
test
push
mov
mov
fnstcw
xchg
ljmp
inc
mov
xchg
pop
sti
add
cmc
fs
pop
push
mov
popa
push
lock
or
adc
les
mov
add
sbb
aaa
dec
or
lret
pop
cmp
addr16
lea
out
imul
pop
adc
faddl
lcall
push
sub
adc
ret
xchg
ja
into
mov
push
ss
jle
push
mov
xchg
cmp
int3
xchg
movsl
mov
jns
mov
sarl
sbb
pop
sarb
dec
and
dec
xor
push
sub
test
jno
ds
jecxz
add
jne
add
je
cltd
lods
nop
inc
iret
enter
pusha
int3
arpl
lds
mov
rorl
sub
cltd
jns
add
ret
in
icebp
and
jge
cwtl
or
mov
aam
mov
aaa
fcmovbe
lods
sub
out
and
inc
std
xchg
inc
imul
lret
rcll
inc
push
fwait
aaa
sbb
lods
sub
in
mov
xchg
inc
and
cmp
andb
or
pop
mov
cmpsl
fcomps
mov
mov
or
aaa
mov
shrb
xor
rcrb
lds
pushf
ficompl
movsb
pop
pop
je
lods
andl
mov
cli
ret
adc
insb
push
out
pop
jae
add
mov
mov
rcl
enter
rorb
push
mov
jecxz
jl
ret
jo
gs
cmc
divl
jno
jecxz
or
jns
adc
mov
das
lods
cmpsb
stos
push
add
dec
jl
mov
xchg
inc
adc
sti
sbb
test
movsb
outsl
test
shll
subl
scas
sub
test
outsl
dec
dec
sbb
into
cwtl
xor
fs
cmp
adc
jp
adc
mov
mov
cmpsb
cmp
adcl
loopne
cmpsb
fmulp
mov
ret
repz
sbb
adc
mov
hlt
mov
adc
sbb
mov
outsl
outsb
mov
push
sti
fs
fldl
fstp
fildl
xor
sub
xchg
lods
ljmp
xchg
mov
sbb
pop
mov
or
cld
out
inc
or
icebp
pop
jge
inc
push
loopne
and
in
hlt
dec
adc
ret
inc
sarb
sbb
test
into
dec
xchg
sbb
call
pop
mov
rcll
ljmp
cmpsb
daa
jp
inc
or
push
stc
dec
ja
insl
jae
jg
push
insl
mov
push
sbb
sub
clc
adc
dec
loop
and
lds
push
aam
push
mov
mov
enter
cmpsb
xor
imul
pop
and
cld
loop
xor
loope
jp
jecxz,pn
mov
je
and
mov
mov
pop
out
jne
add
rclb
add
xchg
push
dec
or
aam
out
or
xchg
leave
negb
movl
mov
push
out
loop
lock
xchg
std
repnz
push
les
push
xor
pop
add
mov
push
fucomp
outsl
repnz
mov
push
dec
jnp
icebp
rorl
lea
sarb
ja
mov
movsl
lods
sub
xlat
repz
xor
adc
sub
sbb
dec
push
loopne
adc
loopne
cmp
and
adc
dec
xchg
mov
cmp
rclb
or
jp
arpl
xor
jmp
xor
mull
sbb
jp
fstpt
inc
mov
pop
adcb
sti
shrl
lods
push
lds
mov
sahf
pushf
inc
lea
mov
lock
mov
lods
adc
sub
imul
pop
mov
popa
cmp
mov
fmull
jo
fildll
pop
adc
ds
push
das
movsb
mov
rcrb
jle
pop
dec
mov
fldl
fcomps
and
popa
jle
mov
shlb
sub
cmpsl
icebp
jns
and
push
add
inc
lret
bound
mov
ljmp
mov
cwtl
xchg
aaa
dec
push
jae
add
dec
mov
lds
mov
xchg
cmp
inc
or
jp
jge
inc
sub
adc
xchg
dec
xchg
dec
or
fwait
or
clc
jmp
clc
sti
xchg
sub
dec
adc
movsl
lret
mov
ss
iret
dec
sub
test
jge
dec
cmp
jl
scas
das
out
imul
mull
cmp
push
repnz
fadd
xchg
dec
inc
daa
mov
cwtl
push
add
test
es
gs
mull
mov
hlt
cwtl
inc
inc
adc
xchg
push
adc
cs
push
add
xor
aaa
movsb
pushf
cmpsb
pusha
icebp
lahf
out
dec
mov
push
xchg
daa
mov
mov
orl
xlat
addb
mov
fdivp
and
arpl
pop
cli
bnd
push
arpl
dec
pop
leave
jg
dec
and
push
lret
pop
and
mull
cmp
insb
lock
jle
pop
nop
xor
jne
test
bound
mov
aaa
repz
pop
and
inc
xchg
andl
cmp
frstor
clc
jo
roll
push
cmp
cmp
ret
lds
mov
mov
stc
jno
shlb
jmp
mov
cs
test
jle,pt
inc
inc
pop
add
aam
sub
push
jmp
xchg
cmc
testl
aas
sbb
dec
scas
xor
loop
push
mov
lods
loop
and
mov
jl
lea
mov
imul
push
daa
mov
mov
sti
sub
in
jbe
cmp
adc
xchg
sub
mov
ret
arpl
xorb
insl
cltd
adc
gs
mov
inc
cmpl
adc
inc
loopne
push
jecxz
insb
jne
js
adc
or
inc
loopne
movl
cmp
jbe
loope
test
xchg
je
clc
scas
mov
jb
pop
test
popf
loope
push
stc
repnz
mov
dec
adc
test
out
add
out
je
sbb
or
jbe
sub
jle
cmp
xchg
int
imul
loope
in
fdiv
push
les
add
jns
dec
fistpl
mov
daa
stos
sbb
jl
jo
sti
mov
ret
hlt
push
lds
movsb
dec
jecxz
push
push
sub
pop
jnp
cld
xchg
inc
pushf
cmpsb
cmp
xchg
out
les
mov
iret
out
loop
je
push
out
cmp
jne
mov
push
mov
lods
xchg
sub
cmp
push
mov
xor
shlb
fnstsw
xcrypt-ofb
cmpsl
out
test
xor
mov
mov
sub
jge
shrb
lahf
dec
sub
xchg
std
and
movsl
scas
inc
test
jne
sub
add
dec
loope
ljmp
cmpsb
cmp
xchg
ret
cmp
jecxz
mov
outsb
ret
pop
mov
shl
xrelease
mov
fnstenv
addr16
mov
sub
sub
cmp
ljmp
repnz
into
gs
jns
nop
and
xchg
jecxz,pn
or
ss
sti
push
aam
mov
fimuls
repnz
outsb
gs
lahf
std
adc
repz
lds
mov
rclb
push
and
inc
mov
js
std
xchg
inc
cltd
cmpsb
cmp
xchg
in
les
mov
shl
aas
loop
jno
pop
out
aaa
xchg
add
mov
push
mov
lods
xchg
sub
ss
pushl
mov
mov
fstpt
or
cs
sub
sub
sub
jl
shrb
sahf
dec
sub
xchg
data16
and
lods
inc
test
je
sub
call
dec
loop
call
imul
insl
movb
rcrb
cmp
adc
pop
lahf
xor
iret
fs
repnz
mov
add
or
mov
sub
aam
jge
inc
scas
or
ror
add
adc
mov
das
loop
or
xor
push
aad
mov
inc
fimuls
repz
insb
gs
popf
cld
adc
icebp
dec
das
jg
mov
in
rclb
imul
mov
mov
ja
std
xchg
ds
cmpsl
ds
mov
jmp
pop
sbb
jecxz,pt
jo
pop
out
xor
push
jbe
mov
pop
mov
stos
xchg
sub
xor
mov
das
mov
mov
fidivrl
or
out
test
sub
or
sub
sub
jp
shrl
pushf
dec
daa
icebp
mov
data16
pop
jnp
cmpsb
lods
inc
test
jb
sub
cmp
pop
dec
jecxz
out
push
sbb
add
mov
testl
mov
insb
lds
cmp
bound
push
in
mov
add
pop
and
pop
mov
aad
jnp
inc
lods
or
cmp
into
add
mov
in
adcl
xor
je
mov
xor
sub
xchg
inc
fimuls
hlt
mov
push
cld
fwait
sti
adc
out
dec
xor
jle
mov
in
arpl
push
xchg
icebp
insb
add
mov
jne
inc
mov
jbe
std
xchg
cmp
test
leave
pop
sbb
sbb
cmp
loope
in
outsl
add
xor
jbe
xchg
and
fidivl
aad
sti
mov
sub
dec
shlb
fnstcw
or
cwtl
das
pop
cmc
or
xorb
js
aam
add
repnz
data16
sbb
test
jo
cs
mov
in
in
push
push
jno
add
les
xchg
mov
fstpl
mov
imul
popf
das
cmp
pusha
mov
push
in
mov
add
add
es
sub
aas
out
mov
stos
or
cmp
into
gs
pop
jl
mov
in
test
lcall
add
shl
xlat
outsb
test
dec
filds
cmc
mov
push
adc
in
dec
xor
jl
mov
out
popa
rcrl
insl
add
mov
jbe
inc
mov
je
xchg
cmp
sbb
mov
pop
sbb
in
insl
add
xor
ja
test
and
fdivs
aas
arpl
mov
sub
shrl
xlat
jnp
or
cltd
xor
movsb
and
mov
mov
sub
jbe
aad
add
repz
addr16
sbb
test
cmp
sbb
lret
sti
mov
in
loop
pop
adc
insb
add
ret
hlt
mov
xchg
mov
fistpl
mov
imul
rcrb
in
out
jg
out
mov
add
inc
shll
add
mov
push
mov
xlat
in
mov
test
lret
cld
pop
jge
mov
fwait
xor
jo
mov
xor
sub
hlt
push
xlat
outsb
adcl
mov
addr16
cwtl
notl
stos
sub
xor
jp
movsb
cmp
fwait
dec
out
pusha
ret
in
insl
add
mov
ja
inc
mov
jb
call
lds
mov
out
pop
sbb
in
imul
lock
ja
sbb
mov
xlat
xor
clc
mov
sub
push
or
cltd
xor
or
dec
scas
inc
sub
jne
aad
add
repz
addr16
sbb
test
cmp
cli
mov
in
loope
pop
adc
add
rorl
mov
ficompl
mov
push
cmp
pop
mov
push
out
scas
push
add
aas
shlb
add
mov
push
mov
xlat
in
mov
test
pop
divb
leave
iret
data16
push
jge
mov
test
fwait
xor
outsl
or
mov
ret
repz
xlat
outsb
adcb
inc
mov
addr16
xchg
notb
stos
daa
mov
xor
jns
movsb
cmp
lcall
xchg
in
insl
add
mov
ja
aas
mov
jno
call
les
mov
in
pop
pop
lods
cmp
fnstsw
in
push
pop
lock
mov
lcall
and
xor
popa
divl
hlt
mov
shrl
aad
adc
sahf
out
xchg
sub
movsb
and
scas
inc
sub
je
aad
add
repz
sbb
test
cmp
stc
lea
in
loopne
pop
adc
add
rorb
mov
fstps
mov
addr16
pop
cltd
sub
rcrb
jl
jge
out
scas
or
jne
add
mov
push
mov
xlat
jecxz
mov
cmpsl
add
divb
push
jge
mov
out
test
fwait
xor
outsb
or
lahf
cld
mov
shl
xlat
outsb
adcl
cmc
mov
gs
xchg
cmc
adc
ljmp
cmp
pop
ret
jmp
add
mov
ja
mov
jo
call
ret
pop
sbb
pop
push
stos
cmp
fdivl
in
imul
add
sbb
xchg
sub
das
aas
pusha
divb
hlt
mov
shrl
aam
adc
popf
out
xchg
daa
cltd
xor
or
dec
lods
inc
sub
jae
aad
add
repz
addr16
sbb
test
cmp
xabort
mov
in
ffreep
pop
adc
sahf
xor
jbe
mov
std
xchg
mov
test
mov
data16
pop
cwtl
sub
rcrb
in
jmp
push
out
lods
or
fwait
cmp
pop
and
push
mov
xlat
loop
mov
cmpsb
add
xor
iret
data16
push
jge
xchg
out
test
xor
insl
or
sahf
sti
mov
shl
xlat
outsb
adcb
loopne
mov
addr16
xchg
hlt
adc
jmp
or
leave
pop
ret
ljmp
jecxz
mov
outsl
add
xchg
ss
test
mov
jecxz
pop
adc
ss
push
mov
lcall
and
aam
aas
pop
cmc
mov
daa
sbbl
jp
jnp
add
es
xor
or
dec
lods
inc
sub
jb
aad
call
hlt
mov
addr16
push
je
test
imul
mov
out
ffree
pop
packssdw
popf
xor
jbe
mov
std
xchg
mov
stos
inc
inc
sbb
xchg
sub
rcrb
out
ljmp
pushf
cmp
jne
pop
and
push
scas
inc
fsub
jb
dec
movsb
add
xor
shlb
push
jle
test
out
xchg
pushf
xor
imul
sub
fsubrs
adc
inc
lahf
testb
repnz
and
xor
jne
movsl
cmp
xchg
push
out
pop
ret
pop
call
loope
loope
mov
insl
add
xchg
xor
push
mov
loope
pop
adc
out
data16
pop
icebp
sub
js
jge
and
shrl
xlat
pop
repnz
and
pop
cmc
mov
shrb
sarl
cltd
lock
and
xor
push
movsl
sbb
ds
outsl
lret
insl
std
nop
dec
loope
push
cmc
mov
push
stos
mov
les
enter
cmp
fcmovb
pop
or
outsb
add
pop
mov
xchg
mov
stos
inc
inc
rcrl
add
leave
pusha
xchg
and
out
call
or
popf
cmp
jbe
sti
pop
and
mov
outsl
mov
mov
ret
shrl
push
jle
adcl
xchg
pushf
xor
imul
push
sub
outsl
jl
dec
loop
popf
testb
lock
and
leave
jae
cmpsb
cmp
lds
pop
mov
outsb
add
loopne
mov
imul
cwtl
xor
mov
pop
adc
out
fs
pop
repnz
jns
jl
and
shrb
inc
xlat
pop
icebp
mov
and
cmc
scas
inc
shrl
iret
jl
add
lcall
jbe
dec
test
sub
insl
sti
dec
loop
sbb
mov
imul
mov
ret
xrelease
out
fcmovb
pop
or
outsb
add
pop
mov
call
aas
rcrl
pusha
xchg
and
out
out
pop
lock
push
popf
cmp
ja
sti
pop
and
mov
sub
fsubrl
dec
mov
ret
shrb
dec
jle
adcl
pushf
xor
imul
push
daa
mov
fsubrs
push
dec
jecxz
fwait
testb
out
adc
pop
mov
pop
out
xor
jno
cmpsl
cmp
lds
outsb
add
loopne
mov
imul
stos
inc
mov
pop
ds
xor
jge
clc
pop
repz
adc
mov
shrb
inc
xlat
pop
icebp
mov
and
cmc
lods
inc
aam
jbe
jl
call
fwait
xor
adc
cmpsb
cmp
lds
xlat
outsb
stc
mov
sbb
lea
add
outsb
adc
lahf
xor
leave
icebp
xchg
call
or
push
xchg
sub
jns
mov
add
cmp
pop
lret
and
push
mov
jg
jne
icebp
cmpsb
add
js
stc
push
and
cs
test
mov
lahf
sti
popa
clc
sub
shrl
dec
jg
jg
repnz
popf
xor
adc
mov
fnstenv
or
in
cltd
testl
sbb
ds
outsl
add
push
call
mov
outsl
push
adc
in
fidivs
add
mov
fmul
pusha
push
movsb
ds
das
out
popa
negb
addl
jp
and
into
daa
inc
fcomps
mov
and
imulb
int3
jge
xchg
repnz
pop
pushf
xor
adc
movsl
cmp
lds
fsubrs
mov
sbb
mov
push
adc
lods
sahf
xor
lret
cmpsb
cmp
inc
xlat
les
fs
xchg
sub
jns
mov
and
scas
or
mov
pop
lret
bound
mov
and
pop
icebp
movsb
add
lahf
xor
push
es
dec
test
fcmovnu
imul
sub
adcb
adc
mov
xor
xchg
repnz
fidivl
or
cmp
imul
jmp
lods
sbb
mov
loop
xor
outsb
add
jmp
mov
jo
adc
mov
mov
sbb
popa
or
cs
repz
inc
jp
js
and
add
es
fsts
mov
pop
jns
imull
lret
jle
std
xchg
repnz
push
popf
xor
out
cmpsl
pop
jb
push
movsb
cmp
lds
fnstenv
mov
sbb
add
insb
push
lods
popf
das
mov
popa
mov
cmpsb
cmp
inc
aad
pop
pop
arpl
xchg
sub
jns
mov
es
or
mov
pop
int3
arpl
scas
ljmp
add
mov
cmc
push
daa
mov
dec
cmpsb
inc
imul
imul
sbbl
inc
popf
lahf
ss
arpl
test
lock
out
or
cmp
insb
add
mov
loopne
xor
inc
xor
pop
xchg
jno
adc
es
add
mov
fxch
bound
mov
jmp
hlt
and
jnp
jbe
and
xor
and
ficoml
mov
sbb
ds
jo
jg
sti
xchg
repz
sbb
xor
adc
ss
addr16
fidivl
mov
mov
fisubrl
or
pop
scas
fwait
sub
xor
ds
push
jmp
rol
pop
add
es
pop
mov
daa
out
add
cmp
pop
mov
pop
int
mov
jmp
fildll
repz
sarl
push
sub
inc
movsb
inc
fst
addr16
cltd
mulb
mov
sbbb
push
hlt
mov
mov
test
and
jae
push
dec
out
xchg
cli
xchg
pop
insl
add
out
scas
sbb
int
ljmp
jmp
push
pop
test
jb
adc
nop
daa
arpl
add
mov
and
or
ljmp
jg
lahf
mov
jnp
je
es
enter
push
jmp
stc
cmpsl
cmp
insb
outsb
enter
repz
sbb
test
outsl
mov
gs
hlt
xchg
mov
cli
xchg
inc
fsubrs
or
scas
lcall
int
jle
ds
push
in
ds
pop
add
or
mov
sub
ja
cwtl
test
mov
cmp
pop
mov
pop
into
mov
ds
lods
in
sbb
pop
repz
decl
mov
repnz
sub
inc
mov
mov
cwtl
cmc
fs
es
sbbb
or
mov
test
pop
mov
in
fdivl
add
cli
xchg
lds
add
out
scas
pop
stos
mov
fnstsw
ss
test
jmp
push
pop
sbb
or
movsl
in
xlat
xor
lcall
and
or
ljmp
jle
lahf
scas
inc
jnp
jae
es
and
call
stc
cmpsb
cmp
insb
insl
movl
ss
loope
test
outsb
mov
fs
repz
mov
cli
xchg
inc
xlat
imul
push
mov
pop
mov
cmpsl
ds
or
in
cmp
pop
jae
xchg
and
jp
mov
sub
jbe
cwtl
cmpsl
add
pop
mov
pop
into
mov
ds
stos
in
sbb
pop
repz
decb
mov
icebp
push
sub
inc
mov
mov
xchg
hlt
fs
and
inc
sbbb
or
mov
cltd
mov
test
push
mov
jecxz
fdivl
add
out
xchg
cli
xchg
les
add
in
scas
push
stos
mov
fdivl
ss
std
test
jmp
push
pop
sbb
or
movsb
in
das
nop
daa
popa
testl
inc
mov
and
or
sbbl
or
jb
es
and
out
dec
sbb
movsl
cmp
insb
insb
movb
mov
loopne
test
insl
mov
arpl
test
mov
cli
xchg
inc
imul
sbb
mov
pop
mov
cmpsl
ds
or
cmp
lds
jae
nop
and
jp
mov
sub
jne
cwtl
cmpsb
add
inc
ss
pop
mov
push
into
mov
ds
stos
in
sbb
pop
repz
std
or
lock
sub
push
insb
inc
fidivrl
sub
pop
xor
nop
insl
sbb
push
hlt
test
stc
fwait
sub
adc
or
push
out
adc
fmul
shlb
call
insl
cmpsl
es
or
gs
mov
or
xlat
mov
lea
cmpsl
inc
seta
jo
sbb
pop
cmpsb
test
sbb
js
fadd
in
out
dec
fucomip
push
dec
xor
ljmp
pusha
cmpsb
out
test
inc
inc
cld
push
incl
sbb
bound
jge
add
xlat
out
xchg
inc
mov
pop
ja
sbb
loop
push
sbbb
cmp
and
push
adc
mov
out
jl
shrl
mov
inc
addl
adcl
sbb
bound
shrl
mov
stc
add
xor
xchg
jle
sar
and
test
loopne
lock
jne
inc
xchg
pop
sub
mov
add
fisubs
dec
ljmp
roll
sub
arpl
dec
push
inc
outsb
or
xchg
nop
ss
sub
loope
shl
pop
pop
aam
loop
fwait
cmp
lods
aas
divb
gs
stc
lea
fisttpll
fs
xchg
xchg
icebp
push
xchg
imul
outsb
lea
mov
rorb
das
out
fstp
push
cmpsl
fsts
push
adc
out
aas
mov
ds
or
sbb
test
and
and
mov
mov
jne
cwtl
out
sub
xor
inc
in
enter
das
sub
mov
aaa
aam
push
dec
in
ret
fsub
mov
mov
fiaddl
jo
addl
pop
outsb
mov
sti
jb
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
inc
data16
sub
pop
push
and
lds
and
pop
push
shlb
out
sbbl
mov
push
outsb
mov
les
outsb
xchg
fadd
loope
adc
scas
mov
aas
pop
cmpsb
rcrb
scas
nop
out
dec
jb
push
xor
mov
mov
mov
lock
xor
inc
outsb
push
add
cwtl
mov
notl
mov
xor
mov
sbb
hlt
dec
orl
rclb
les
hlt
sub
xor
fstl
add
jmp
push
incb
cmp
cld
mov
sub
fsubrs
sbb
adc
xor
insl
jl
rcl
xor
inc
int
and
in
push
data16
int
and
jo
xor
pop
jl
sbb
or
cli
bnd
in
test
add
aas
data16
mov
shlb
test
push
push
scas
test
and
pop
push
cmpsb
imul
or
ss
mov
xchg
adc
mov
inc
dec
rclb
std
es
lods
out
fs
stos
xchg
cmpb
dec
jo
lret
jl
adc
pop
inc
daa
adc
cmpsb
imul
in
mov
bound
mov
outsl
out
pushf
cmp
sbb
test
pop
or
addr16
call
pop
add
cmp
nop
in
pop
jo
enter
int3
pop
pop
loope
push
push
movsl
shl
pop
loope
stos
xchg
lret
xor
rorb
pop
hlt
aas
push
loop
cmp
stos
loop
jb
jle
push
sbb
pop
fbstp
and
or
push
das
jo
in
pop
cltd
push
push
and
fsubs
add
jmp
push
add
dec
xor
mov
push
les
mov
pop
jg
jp
xchg
add
dec
ljmp
mov
adc
adc
cmp
adc
jp
sbb
stc
lret
ss
daa
sbb
push
data16
std
mov
add
inc
mov
sub
lods
sarb
and
sub
mov
dec
cmp
ret
or
push
test
sbb
jg
out
sahf
js
jae
mov
lret
mov
cmp
xchg
inc
scas
sahf
jae
pusha
cmpsl
rol
adc
cmp
sbb
jne
aam
jmp
xlat
push
insb
and
lds
xor
inc
and
xchg
out
cwtl
insl
dec
inc
fnstenv
cwtl
mov
sbb
subb
mov
fs
dec
mov
jmp
stos
push
inc
push
push
stos
mov
cld
push
mov
mov
lcall
icebp
jecxz
scas
outsb
or
inc
push
jg
sbb
lds
and
repnz
cmp
sbb
loopne
pop
inc
inc
lahf
mov
or
jle
shr
rol
cmp
insl
scas
cmp
imul
pop
adc
push
xchg
jmp
adc
shr
cwtl
cltd
sbb
test
in
ret
xor
xor
sahf
movsb
int3
add
dec
bound
testl
movsl
jno
jl
pop
push
add
mov
arpl
xor
lret
mov
adc
into
xor
orl
clc
sub
dec
xchg
pop
insl
jno
test
jno
aas
scas
xchg
sahf
arpl
rolb
push
mov
xor
mov
sub
push
stos
rorl
adc
rclb
cmp
jnp
xor
mov
fdivrl
mov
dec
push
or
sti
hlt
ljmp
adc
add
cwtl
lret
push
insl
sahf
inc
mov
outsl
sbb
cli
mov
cmp
and
cli
pop
xor
sti
push
js
idivb
inc
sbb
mov
stc
sbb
push
sub
pop
cmpsb
dec
adc
pop
mov
add
popf
fs
adc
mov
adc
pusha
stc
in
jne
cli
adc
fidivrs
adc
cmc
xchg
hlt
jge
or
pop
div
shrl
xor
repz
and
jle
dec
xor
push
cmp
shrb
inc
mov
lods
out
popa
sub
loopne
enter
sub
adcb
dec
xor
imul
movsb
cmp
int
pushf
rol
lods
push
cmp
mov
ja
jnp
mov
test
out
add
idiv
data16
shlb
movsb
inc
lret
sbb
add
push
popf
inc
add
int
mov
mov
sbb
mov
bound
arpl
jno
dec
nop
add
into
mov
pusha
adc
in
adc
dec
or
cmp
popa
subl
jb
sub
cmp
push
cmpsl
pop
ja
sub
scas
pop
sbb
cwtl
dec
xor
scas
add
pop
fisubl
popa
push
out
fwait
dec
movsb
jnp
lret
in
and
cmp
iret
mov
mov
inc
les
data16
inc
pinsrw
cs
dec
jl
sub
cmp
pop
sahf
sub
in
ss
xor
jb
shll
adc
mov
xchg
cmp
iret
inc
mov
and
cmp
es
cmp
jne
into
mov
dec
cmp
pop
hlt
jb
jl
or
nop
cmp
push
mov
rolb
mov
stos
inc
mov
hlt
mov
dec
popa
add
lea
jg
cmpsb
outsb
std
out
xchg
and
push
and
push
pop
adc
scas
ret
mov
lods
jmp
xchg
sarb
dec
das
jle
out
xor
jge
sbb
pop
cwtl
rolb
or
mov
mov
jae
inc
mov
or
and
dec
xor
aaa
arpl
add
pslld
insb
xchg
mov
outsl
push
sub
jne
jg
mov
dec
xchg
push
test
pop
pop
cmc
iret
adc
mov
inc
dec
mov
adc
pop
xorl
add
xor
arpl
lahf
daa
sbb
xor
and
movq
cmp
push
dec
aaa
add
out
cli
pop
les
mov
cmp
or
sbb
or
sbb
sbb
out
aaa
sbb
xorb
jge
lock
jne
xor
inc
push
lock
cld
add
inc
sahf
push
lret
push
repz
mov
mov
mov
cmc
jecxz
jae
rcll
andb
jl
jl
sbb
inc
or
inc
arpl
stc
insb
mov
mov
mov
dec
jno,pt
test
sub
fmull
scas
lret
xchg
cs
pop
mov
dec
test
std
fildll
and
out
push
push
arpl
fstps
scas
std
test
jl
push
mov
jmp
data16
or
xchg
ljmp
insl
jnp
dec
daa
adc
loop
fidivl
mov
std
repnz
movsl
mov
arpl
enter
faddl
sbb
mov
push
fcmovnu
cmp
fdivl
aad
xor
lret
aad
push
inc
sub
test
jge
cmp
dec
stos
mov
adc
fstps
adc
xchg
daa
sbb
test
xchg
hlt
cltd
jo
mov
pop
jg
fimull
loope
jo
cmc
movsb
imul
mov
aaa
mov
mov
push
incb
inc
pop
inc
pop
orl
inc
rorl
divl
mov
add
mov
add
mov
pushf
xor
addl
push
or
iret
jns
lret
popa
cmp
stos
sbbb
jmp
inc
aas
sub
xchg
adc
lcall
xor
je
or
aam
outsb
mov
les
xchg
cmp
lods
test
data16
repz
jg
pushf
cmp
xor
cmp
adc
jmp
addr16
sti
mov
out
das
xchg
jmp
sti
les
lods
push
sbb
xor
lret
cs
push
imul
mov
pop
sbb
cmp
cmp
daa
cmp
