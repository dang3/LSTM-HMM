push
mov
sub
mov
mov
xor
mov
mov
xor
mov
cmp
ja
cmp
jb
mov
movl
xor
mov
call
cmp
je
test
je
movl
call
mov
mov
mov
mov
mov
pop
ret
cmp
je
cmp
je
mov
mov
mov
mov
pop
ret
lea
cmp
jne
movl
xor
mov
call
cmp
je
test
je
movl
call
jmp
movl
mov
mov
call
test
je
call
mov
jmp
movl
mov
mov
mov
call
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
sub
lea
movl
call
sub
call
movl
mov
lea
mov
mov
mov
mov
mov
movl
call
mov
test
je
mov
mov
test
jne
cmp
je
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
mov
mov
mov
mov
call
call
mov
mov
call
and
call
mov
mov
mov
mov
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
call
mov
jmp
lea
lea
push
mov
sub
movl
call
call
nop
lea
push
mov
sub
movl
call
call
nop
lea
push
mov
mov
pop
jmp
lea
push
mov
mov
pop
jmp
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xchg
adc
push
push
push
xchg
adc
push
adc
jo
adc
je
push
xlat
mov
mov
adc
jo
mov
push
push
lea
mov
xor
pop
xor
adc
or
pop
push
and
sbb
mov
lods
dec
jge
fldl
xchg
jge
fstpl
pop
stos
pop
mov
je
push
push
push
push
push
xchg
push
push
inc
adc
call
test
leave
ret
push
mov
sub
nop
nop
call
xchg
adc
push
divl
fstl
adc
mov
xchg
push
jo
adc
je
push
xlat
mov
push
dec
adc
jo
inc
pop
push
push
divl
push
xchg
adc
push
push
push
push
xchg
adc
inc
add
push
xchg
push
jo
push
push
push
cmc
je
adc
xchg
push
push
push
push
push
xchg
push
adc
adc
adc
call
test
leave
ret
push
mov
sub
nop
nop
call
xchg
adc
mov
adc
jo
cwtl
dec
push
push
lea
mov
xor
pop
xor
adc
or
test
and
lods
fstl
movsb
filds
movsb
fldl
mov
sub
push
fists
mov
mov
filds
movsb
jge
fldl
test
pop
mov
add
test
mov
leave
ret
push
mov
mov
call
nop
nop
call
xchg
push
adc
adc
push
push
cmc
js
adc
mov
push
fstl
movsb
xchg
push
jo
je
push
mov
fstl
jo
xchg
adc
inc
je
push
int3
mov
jo
sbb
fists
mov
fists
movsb
fstl
jo
int3
mov
jo
push
dec
push
push
fists
movsb
fstl
mov
rcll
fstl
jo
xchg
push
jo
add
push
mov
call
test
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
xlat
lods
push
and
inc
xchg
push
jo
push
push
push
mov
xlat
mov
adc
adc
fists
inc
fstl
jo
fists
pop
fstl
jo
fists
pop
fstl
mov
xlat
mov
mov
add
test
movl
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
mov
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
mov
fmuls
xchg
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
push
dec
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
jae
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
out
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
inc
sub
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
dec
dec
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
sbb
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
inc
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
in
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
mov
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
mov
fmuls
xchg
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
push
inc
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
xchg
and
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
out
inc
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
and
add
mov
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xlat
sub
and
push
push
push
push
push
add
js
fnstenv
jo
mov
adc
xor
adc
sub
movsb
filds
mov
aad
jmp
mov
test
pop
fists
pop
cmp
push
jge
fstpl
pop
stos
pop
mov
add
test
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
test
adc
add
push
adc
adc
xor
adc
adc
mov
adc
adc
adc
adc
test
push
je
adc
push
push
push
xchg
adc
fists
mov
adc
sbb
rcll
push
filds
mov
adc
adc
fists
pop
fstl
mov
rcll
flds
fists
mov
jecxz
push
fstps
push
push
push
push
filds
mov
adc
adc
mov
add
test
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xchg
adc
xlat
sub
inc
fists
pop
aam
push
and
adc
pop
mov
add
test
mov
leave
ret
push
mov
sub
nop
nop
call
xchg
adc
fists
pop
fstl
mov
adc
adc
push
push
push
fists
lods
outsl
adc
pop
filds
lods
push
xchg
fists
pop
push
adc
fsts
lods
stos
push
mov
add
test
mov
leave
ret
push
mov
sub
nop
nop
call
fists
pop
fstl
mov
fstl
test
adc
adc
fists
pop
filds
lods
push
xchg
fists
pop
insb
push
and
adc
mov
lods
stos
push
mov
add
test
movl
mov
leave
ret
push
mov
sub
nop
nop
call
fists
pop
fstl
mov
adc
push
jo
xor
adc
and
adc
dec
fists
pop
fstl
jo
fists
test
push
jo
push
stos
stos
stos
call
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
xlat
sub
inc
filds
pop
fists
pop
fcoml
adc
inc
stos
pop
mov
add
test
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xchg
push
jo
insb
adc
pop
push
push
xlat
mov
stos
stos
stos
xchg
adc
cmp
add
jo
xor
and
jo
insb
adc
pop
push
push
xlat
mov
push
shrb
fstl
mov
fst
sub
jo
iret
insb
adc
add
jo
jo
stos
stos
fst
sub
stos
stos
xchg
adc
cli
insb
adc
add
jo
pop
test
and
stos
stos
xchg
adc
jmp
adc
add
jo
mov
sarl
stos
stos
stos
xchg
adc
test
add
jo
test
cmp
stos
stos
xchg
adc
mov
adc
add
jo
loopne
stos
stos
fst
xor
jo
mov
roll
stos
stos
stos
fstl
mov
fst
xor
stos
stos
xchg
adc
stos
insb
adc
add
jo
sub
or
jo
pop
insl
adc
add
jo
xor
stos
stos
fst
or
stos
stos
fists
pop
fstl
mov
aad
sbb
pop
rcll
push
push
push
filds
mov
push
push
adc
push
pop
sarl
push
push
xchg
adc
adc
xchg
adc
push
push
push
push
fsts
push
jo
bound
jo
inc
push
push
push
xchg
adc
push
push
push
push
fsts
mov
push
jo
dec
stos
stos
stos
fsts
mov
adc
fsts
adc
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fists
pop
fstl
and
xlat
mov
rol
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
inc
push
push
xchg
adc
push
push
push
push
xchg
push
jo
push
push
push
or
xlat
mov
fists
rclb
push
fists
rcr
adc
fists
mov
push
jo
shll
stos
stos
stos
test
mov
rclb
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
aam
adc
fists
rcr
aam
push
push
push
xlat
xchg
pop
fstl
jo
fists
mov
push
jo
sarl
stos
stos
stos
stos
test
mov
fists
aam
push
pusha
and
aam
adc
fists
mov
push
jo
shrl
stos
stos
stos
stos
test
mov
inc
adc
push
push
xchg
adc
push
fs
push
fists
movsb
fists
fstl
jo
fists
movsb
fists
fstl
jo
fists
mov
push
jo
shll
stos
stos
stos
test
mov
stos
stos
stos
xlat
jmp
push
pop
ror
push
push
push
xchg
adc
push
push
push
push
fists
movsb
fists
fstl
jo
fists
pop
fstl
jo
add
stos
stos
fstl
jo
fists
mov
push
jo
shrl
stos
stos
stos
test
mov
stos
stos
stos
push
push
push
push
fists
movsb
pop
jecxz
push
outsl
rcrl
stos
stos
stos
sub
add
push
push
sbb
xchg
mov
push
test
push
push
lods
push
push
push
fstl
mov
push
push
push
push
fists
mov
adc
filds
mov
push
inc
fstl
jo
filds
mov
stos
stos
push
push
pop
fstl
jo
fists
mov
push
jo
shrl
stos
stos
stos
test
mov
stos
stos
stos
stos
push
mov
inc
push
push
push
push
xchg
adc
push
push
push
push
fists
movsb
xlat
xchg
pusha
fstl
jo
fists
rcr
aam
push
push
push
xlat
xchg
pop
fstl
jo
fists
mov
push
jo
shrl
stos
stos
stos
test
mov
add
stos
stos
fst
in
push
push
xchg
rcrl
stos
stos
push
push
push
push
fists
movsb
fst
adc
adc
jae
rcll
stos
stos
stos
xlat
xchg
dec
fst
adc
stos
stos
xlat
jmp
push
and
rcll
stos
stos
fists
fst
sbb
stos
stos
xchg
rcll
stos
stos
push
push
push
push
adc
stos
stos
outsl
rcrl
stos
stos
and
rcll
stos
stos
stos
push
fists
shrb
push
mov
fstl
jo
fists
mov
push
jo
sarl
stos
stos
stos
test
mov
fstl
xor
xlat
mov
pop
push
aam
push
xchg
adc
push
push
push
push
fists
pop
fstl
or
stos
stos
stos
test
mov
add
test
leave
ret
nop
push
mov
sub
nop
nop
call
xchg
adc
xchg
adc
fists
mov
adc
pop
rcr
push
push
push
filds
lods
fists
mov
adc
jecxz
push
fstl
movsb
fists
test
jecxz
inc
push
adc
adc
adc
fldl
flds
push
push
push
push
fsts
mov
filds
movsb
fldl
xchg
mov
push
adc
adc
adc
adc
mov
pop
push
and
adc
add
inc
fists
mov
pop
call
test
movl
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
test
adc
push
and
test
adc
push
adc
push
and
adc
mov
add
test
movl
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
sub
nop
nop
call
fists
pop
jno
push
push
push
xor
adc
jl
fists
pop
jno
push
push
push
xor
adc
jl
fists
pop
jno
push
push
push
xor
adc
pop
fists
pop
jno
push
push
push
xor
adc
jecxz
scas
filds
pop
pop
jecxz
lods
sbb
push
push
push
adc
sbb
adc
adc
pop
push
push
fsts
movsb
gs
filds
pop
pop
jecxz
mov
pop
push
push
fsts
movsb
push
inc
call
test
mov
add
pop
pop
ret
push
mov
sub
nop
nop
call
fists
pop
fists
test
adc
fstl
lods
xor
xor
sub
add
adc
adc
test
adc
fists
pop
fstl
mov
fstl
inc
fists
test
adc
adc
adc
xor
adc
test
adc
adc
adc
adc
adc
filds
fsts
test
inc
filds
pop
fists
test
push
filds
inc
fists
lods
fstl
xor
add
test
leave
ret
push
mov
sub
nop
nop
call
fists
pop
fists
test
adc
fstl
lods
xor
xor
sub
add
adc
adc
test
adc
fists
pop
fstl
mov
fstl
inc
fists
test
adc
adc
adc
xor
adc
test
adc
adc
adc
push
fsts
lods
gs
fists
pop
filds
test
inc
filds
pop
fists
test
push
filds
inc
fists
lods
fstl
in
sbb
leave
ret
nop
push
mov
push
sub
nop
nop
call
xchg
adc
sub
mov
aad
mov
sub
add
lods
xchg
mov
fstl
adc
mov
insl
adc
ficomps
adc
fsts
lods
stos
push
mov
push
push
push
push
xchg
adc
sub
mov
xchg
adc
sub
mov
pop
fists
pop
push
adc
test
adc
push
fists
mov
push
xchg
adc
fsts
movsb
stos
push
mov
fisttps
lods
filds
lods
fists
mov
insl
adc
int
adc
adc
adc
xchg
adc
sub
mov
adc
fsts
mov
fists
pop
fstl
mov
fistps
pop
filds
lods
fists
mov
sbb
lods
fists
mov
adc
push
fsts
lods
xlat
push
push
mov
push
push
push
push
xlat
sub
mov
aad
mov
sub
fsts
mov
adc
fsts
mov
fists
pop
fstl
mov
fistps
pop
fists
lods
xchg
mov
fstl
adc
sbb
lods
xchg
mov
fstl
adc
fsts
mov
clc
fsts
lods
stos
push
mov
add
test
add
pop
pop
ret
push
mov
sub
nop
nop
call
call
test
nop
nop
call
xchg
adc
fists
inc
fstl
lods
xlat
sub
lods
push
fists
lods
xchg
lods
push
push
xchg
outsl
adc
test
mov
push
adc
xchg
push
fstl
jo
fists
test
mov
push
adc
adc
fists
pop
fstl
mov
fsts
test
push
push
mov
add
test
leave
ret
push
mov
sub
nop
nop
call
call
test
nop
nop
call
xchg
adc
fists
inc
fstl
lods
xlat
sub
lods
push
fists
lods
xchg
lods
push
push
xchg
outsl
adc
test
mov
push
adc
xchg
push
fstl
jo
fists
test
mov
push
adc
adc
fists
pop
fstl
mov
fsts
test
push
push
mov
add
test
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
jmp
nop
nop
push
mov
mov
push
sub
and
call
call
call
mov
lea
mov
call
sub
test
jne
jmp
inc
movzbl
cmp
sete
cmp
sete
or
test
jne
cmp
je
cmp
setne
xor
cmp
setne
test
je
lea
lea
test
je
inc
movzbl
cmp
setne
xor
cmp
setne
test
jne
jmp
lea
inc
movzbl
cmp
setne
xor
test
setne
test
jne
cmp
je
lea
cmp
sete
cmp
sete
jmp
mov
inc
movzbl
cmp
sete
cmp
sete
or
test
jne
movl
call
sub
testb
mov
je
movzwl
mov
xor
mov
mov
mov
call
sub
mov
leave
ret
inc
movzbl
jmp
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
jmp
lea
mov
mov
add
add
cmp
jb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
fninit
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
test
je
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
mov
lea
mov
test
jne
leave
ret
lea
push
mov
push
sub
mov
cmp
je
test
mov
je
mov
lea
call
dec
jne
movl
call
pop
pop
pop
ret
mov
xor
test
jmp
inc
mov
test
jne
jmp
lea
lea
push
mov
push
sub
mov
test
jne
mov
mov
mov
cmp
je
test
mov
je
nop
lea
call
dec
jne
movl
call
pop
pop
pop
ret
mov
xor
test
jmp
inc
mov
test
jne
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
cmp
jb
sub
orl
sub
jmp
sub
orl
mov
mov
mov
mov
jmp
nop
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
incl
add
add
incl
add
add
add
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
cmpsb
pop
mov
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jo
dec
nop
mov
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
pop
add
mov
leave
roll
test
popf
incl
push
shll
daa
daa
imulb
xchg
mov
stos
jp
dec
add
xchg
jge
jo
fidivrs
aas
and
in
add
imul
xor
pop
dec
jbe
aas
mov
ds
mov
out
push
sbb
fucomi
mov
leave
into
adc
mov
add
jnp
stc
js
xchg
sbb
lea
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jge
rcrb
dec
or
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
inc
loopne
jb
cmp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
mov
cmp
xchg
sti
pop
icebp
xor
notl
fstl
loopne
jnp
stc
js
xchg
mov
mull
xor
cli
fisttpl
xor
push
insl
cmp
lods
cmp
lea
pusha
mov
stc
js
xchg
pop
loopne
xor
push
mov
movsb
pop
mov
lahf
cld
test
test
incl
cwtl
out
data16
dec
jno
arpl
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
add
push
aam
mov
sub
push
dec
xchg
or
js
mov
push
cli
ret
pusha
ffreep
lcall
in
inc
mov
cmp
xor
jb
lods
mov
aas
sti
sbbb
das
push
out
or
popf
jo
loopne
pop
push
les
push
and
push
xlat
adc
jge
adc
xchg
lods
scas
repnz
sub
mov
lahf
and
stc
push
sub
push
or
clc
scas
stos
mov
fwait
pop
mov
roll
and
pop
mov
outsb
jae
ds
lds
sub
sahf
add
arpl
push
aas
mov
cltd
fidivl
dec
insl
mov
std
arpl
jge
jbe
pop
jmp
inc
xchg
imul
pop
lods
lock
adc
add
inc
sbb
scas
jns
lcall
lret
fwait
xor
sbb
add
gs
insb
inc
inc
inc
fisttpl
cmpsb
and
push
outsb
out
popf
sub
mov
in
xor
in
xchg
in
cli
mov
cmc
mov
jecxz
sub
in
cmp
mov
jne
push
push
addr16
mov
cld
pop
out
cmp
add
aas
mov
sbb
sub
rolb
dec
repz
jo
adcb
dec
mov
fwait
mov
xor
cld
lods
stos
psubsw
repz
scas
fldl
mov
fists
lcall
bound
inc
mov
into
add
or
push
push
add
xor
dec
sub
dec
jno
mov
mov
aam
in
mov
jb
sti
stos
jg
out
xchg
cltd
mov
test
xchg
pop
push
ret
fadd
sbb
ss
loopne
mov
xchg
push
xorl
fisubrs
adc
jns
sbb
xor
jl
pop
lret
je
call
pop
sub
mov
adc
xchg
xchg
mov
aam
inc
mov
mov
and
bound
xchg
roll
inc
sbb
or
xchg
data16
push
and
jne
stos
addr16
subb
outsl
dec
sub
pushf
jp
mov
jmp
lods
mov
jmp
stc
xlat
loop
jge
sub
mov
push
movsl
fistps
movsb
call
cmp
stos
fiaddl
in
cmc
movsl
push
jnp
mov
inc
push
in
inc
adc
leave
and
xchg
popf
in
js
xchg
inc
sbb
push
pop
jbe
add
sub
sbb
adc
add
mov
jl
faddl
cmp
jne
out
ja
paddw
push
pop
aad
out
fs
jns
insl
xlat
popa
jp
je
xlat
mov
or
stos
out
cld
push
pop
aaa
cmp
cmpsl
outsl
shr
and
mov
add
dec
xor
cli
or
inc
xchg
fstpt
pop
push
ja
cmp
subb
mov
push
mulb
push
inc
clc
rcrb
out
int3
flds
pop
xchg
cmp
pop
iret
mov
or
pop
scas
cli
outsb
mov
cmpsb
in
addr16
dec
adc
pop
mov
incb
in
jl
int
loopne
mov
clc
dec
xor
aam
cmp
add
arpl
ljmp
dec
sbb
mov
leave
pop
imul
jmp
xor
inc
xor
fistl
jg
xchg
xor
pusha
sbb
push
jnp
xchg
pop
inc
xchg
xchg
mov
rcl
dec
inc
push
sbb
jle
inc
adc
mov
cmp
insl
xor
enter
mov
popf
sbb
cmpsl
dec
es
or
cmp
add
cli
lea
repnz
cmp
stc
jo
in
pop
test
mov
mov
cs
push
lods
stos
sub
mov
fst
dec
cmp
imul
test
and
imul
mov
adc
es
adcb
popf
notb
push
movsb
stos
jmp
test
fs
lock
sub
jp
pusha
cli
popa
add
outsl
add
fisubl
add
sub
repz
ds
mov
arpl
ss
fst
jecxz
push
repz
mov
sbb
lods
pop
pop
sti
pop
pop
rorb
fnstsw
push
insb
mov
jmp
test
fdivrp
jns
push
aad
out
sbb
lods
imul
es
mov
xlat
outsb
jmp
pop
daa
fwait
xor
add
js
call
fidivrl
fs
or
mov
stos
rcrb
jbe
imull
mov
jne
pop
jno
mov
iret
lret
fwait
mov
test
shl
jne
into
inc
mov
lcall
dec
addr16
shrl
loope
ljmp
or
std
dec
jle
pop
lods
pop
dec
cld
cmp
jge
and
jp
dec
mov
test
fwait
imul
imul
inc
loopne
rorb
dec
fisubs
in
pop
sbb
imul
rcrb
into
add
pushf
ret
jne
mov
mov
clc
or
mov
sbb
mov
rclb
xorb
shlb
jp
leave
jle
pop
pop
jmp
rdtsc
fdivs
loope
scas
data16
mov
jo
addr16
pop
jp
mov
mov
inc
inc
pop
push
mov
scas
xor
mov
push
int3
adc
mov
les
das
xchg
in
push
push
adc
cmc
lahf
or
or
cltd
testb
add
adc
dec
and
lds
ljmp
or
inc
int
scas
adc
mov
mov
cmp
dec
ljmp
fistl
mov
sbb
mov
dec
push
jne
dec
mov
add
clc
call
jb
mov
pop
enter
dec
jmp
push
xchg
lret
sbb
inc
cmp
outsl
xchg
out
aad
pop
mov
push
cltd
sbb
jnp
stc
js
xchg
pop
mov
xchg
outsl
ret
mov
lods
int3
call
jecxz
inc
insl
jl
pushf
lods
cwtl
call
cmovno
inc
push
push
lods
pop
pushf
add
xor
mov
pop
xchg
jecxz
pop
add
sub
dec
sbb
pop
mov
jae
sbb
jae
mov
insl
ss
cld
add
xor
mov
insl
xor
add
popa
outsl
add
inc
push
mov
mov
jno
inc
adc
cmp
adc
jae
ss
push
out
sahf
push
cmc
sub
cmpsl
stos
lods
or
cmpl
mov
les
lock
lcall
xor
or
sti
sub
inc
mov
popa
mov
icebp
rorl
mov
mov
push
dec
aam
orl
cmpsl
pop
sbb
push
mov
mov
cmc
shl
in
in
frstor
lds
insl
or
pop
repnz
mov
dec
push
rcll
jns
push
dec
frstor
lds
fnstsw
pop
stc
ret
sti
push
ljmp
scas
movsb
cli
rcr
xchg
pop
insb
paddusw
lds
or
xchg
sub
cmpsb
mov
std
pushf
and
cld
mov
stos
test
lcall
movb
sbb
stos
push
jbe
sub
inc
mov
fadd
inc
in
mov
mov
add
mov
and
aam
dec
mov
out
and
out
jmp
sub
nop
inc
insb
xchg
mov
in
std
pop
mov
xor
adc
adc
out
in
daa
popa
iret
sbb
pop
ret
push
fmul
mov
inc
cld
mov
fwait
lret
into
ficoml
lds
scas
mov
xor
mov
mov
xchg
inc
sub
movsl
stos
bound
aaa
and
lcall
ret
add
repz
mov
in
jle
bound
mov
mov
push
test
dec
push
xchg
inc
inc
out
ret
andl
mov
xchg
xchg
roll
add
fcomi
inc
inc
push
enter
insb
xchg
bound
mov
mov
test
mov
loope
push
add
stos
pop
in
mov
jne
std
aaa
mov
mov
mov
pop
sub
mov
in
dec
xchg
arpl
xor
xchg
in
sub
stc
or
loopne
sub
add
jnp
stc
js
xchg
mov
fisttps
int
pop
aaa
into
cmpsl
sub
cmp
pop
inc
clc
mov
sbb
inc
sbb
jmp
lret
aaa
xor
xchg
testl
leave
aas
mov
jb
sub
mov
sub
mov
adc
inc
inc
inc
adc
repz
fsubrl
sub
ss
imul
rcrb
jp
mov
arpl
js
xchg
test
rolb
rclb
ret
daa
fcomp
xor
or
cmp
pop
adc
cmp
cli
loope
or
mov
hlt
popl
in
mov
cmc
mulb
mov
hlt
in
xlat
dec
test
add
test
in
call
fcmovnbe
cmpsl
out
fwait
aad
or
cmp
and
mov
ja
add
push
mov
or
pop
mov
push
imul
cmpsl
adc
cmp
andb
frstor
test
in
in
adc
inc
je
and
addl
add
mov
dec
imul
inc
rcrl
mov
test
pop
neg
xchg
mov
fisubs
push
fnsave
mov
cwtl
or
or
and
imul
aam
cltd
scas
pop
jno
xchg
inc
nop
cmp
ss
nop
in
mov
sahf
loop
inc
loop
pop
cmp
jno
mov
push
sbb
jle
cmp
out
les
jns
mov
xorl
gs
rcr
xchg
es
mov
js
push
mov
fsubs
xchg
pop
adc
mov
std
jp
outsb
xlat
leave
andl
adc
jo
dec
push
mov
mov
xchg
mov
enter
xchg
xor
lds
jp
push
negl
loop
mov
or
push
and
sbb
shl
mov
or
inc
aaa
mov
sahf
icebp
mov
push
mov
pop
push
cmp
out
imul
jb
sub
ret
imul
xchg
mov
mov
into
dec
push
inc
dec
or
std
das
inc
in
aaa
movsb
cmpsb
xchg
jecxz
sar
push
cwtl
dec
push
jmp
xor
jne
call
adc
jns
stc
sti
add
call
xchg
repz
or
cmpsl
push
mov
popf
loop
daa
pop
pop
aaa
and
dec
xor
in
test
pop
and
pop
push
aas
pop
jle
and
xchg
and
push
test
jl
mov
pop
push
scas
movsl
out
push
cmpsl
je
mov
fsts
push
push
fxam
js
xchg
cmc
in
pop
outsb
cmc
jecxz
xor
test
imul
cltd
fisttpl
mov
pop
out
repz
je
add
and
jae
repnz
insl
flds
dec
dec
dec
in
sbbl
icebp
or
fists
push
push
dec
lods
jp
pusha
imul
cld
pushl
jae
in
sbb
int3
cmp
add
insl
push
xchg
je
cwtl
fiaddl
lahf
jp
or
ja
fdivrl
fnstsw
arpl
lock
loop
xchg
in
pop
iret
and
add
iret
stos
lods
xchg
jle
pop
test
mov
ret
cmp
daa
loop
and
push
ret
and
xchg
cld
or
mov
xchg
add
lcall
popf
imul
gs
int
sarl
shlb
jo
xor
popf
div
push
sbb
jnp
mov
test
or
imul
int
popl
mov
repz
xchg
add
mov
sarb
cmp
mov
jl
or
bound
and
incl
in
push
xchg
and
mov
sbb
in
pop
cmp
hlt
mov
into
push
aas
or
and
test
rolb
rclb
ret
daa
fcomp
xor
or
xor
push
iret
cli
loope
adc
push
push
repnz
popl
in
mov
outsl
and
jmp
out
fidivrl
hlt
jg
shrb
call
mov
test
inc
fdivrl
inc
cmpsl
out
fwait
aad
or
dec
or
xor
mov
ja
iret
hlt
fs
cmc
pop
mov
push
imul
cmpsl
adc
cmp
andb
rorl
popf
fwait
jl
in
in
adc
out
mov
ret
inc
addl
add
mov
pop
out
dec
icebp
sbb
fmuls
mov
inc
into
or
push
fwait
leave
mov
outsb
adc
testl
es
push
xchg
ficoms
sbb
sbb
and
jg
dec
std
and
jno
xchg
inc
nop
cmp
ss
nop
in
mov
sahf
loop
inc
fcoml
pop
mov
push
sbb
and
lea
andl
out
les
fwait
pop
mov
and
dec
mov
aad
gs
sar
push
jge
inc
sub
mov
roll
dec
xor
pop
adc
sahf
dec
adc
mov
ja
jge
xchg
sub
cmp
daa
mov
mov
xchg
mov
enter
xchg
xor
lds
xchg
loop
mov
lahf
xor
cmp
sbb
shl
repz
and
fiaddl
std
inc
aaa
mov
sahf
in
sbb
cmp
movb
cmp
out
imul
adc
imul
xchg
mov
movd
pop
leave
das
dec
or
std
das
inc
in
aaa
mov
sub
push
int3
stos
sub
adc
idivl
stc
sti
add
jb
scas
mov
adc
lret
repz
or
cmpsl
and
ja
sub
sbb
and
xor
cmpsl
and
test
pop
xor
sub
test
xchg
and
movsl
out
push
cmpsl
je
ljmp
in
andl
in
push
and
in
pop
mov
cmc
jecxz
xor
test
imul
cltd
fisttpl
mov
jecxz
fadd
aam
or
mov
mov
insl
and
idiv
std
mov
insl
flds
sub
jbe
stos
sbb
or
out
xchg
jp
orb
mov
jle
in
dec
daa
call
int3
xlat
push
sbb
int3
cmp
add
insl
push
push
mov
jo
mov
jp
or
arpl
cmp
cmp
sbb
pop
rcr
stc
lock
loop
xchg
in
dec
orb
clc
clc
mov
std
add
iret
stos
sbb
xor
lods
mov
ret
cmp
or
daa
push
ret
and
xchg
cld
or
sbb
mov
aas
mov
add
xchg
testb
imul
pop
int3
push
test
ja
shlb
jo
xor
popf
lcall
lds
dec
jnp
mov
test
or
imul
out
popl
mov
insb
lcall
mov
inc
hlt
imul
js
daa
jl
or
ja
push
jnp
repz
xor
incl
in
jno
pop
xor
les
xor
fistps
and
dec
cmp
scas
lahf
pop
mov
or
jl
lret
das
pop
sbb
mov
call
sbbb
inc
xor
icebp
mov
xor
in
das
or
into
idivl
fcomps
int
stos
xor
in
sbb
sbb
in
sub
scas
mov
and
mov
gs
scas
sbb
xor
or
cmpb
mov
inc
sbb
stc
mov
adcb
xor
pop
and
push
or
outsb
mov
rcrl
and
cmpsb
jno
xchg
mov
xchg
dec
push
lret
inc
mov
ret
lea
popa
stos
loope
mov
sbb
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
pusha
sub
jge
sub
jge
dec
jo
movsb
lds
decl
jg
lds
cmc
dec
test
inc
jns
xchg
cmc
dec
test
inc
jns
xchg
loope
jle
mov
or
mov
cmp
and
push
pop
stos
test
push
pop
stos
ss
lods
jl
insl
inc
jg
clc
dec
stc
push
mov
nop
int3
scas
sbb
incl
stc
js
xchg
pusha
sub
jge
dec
jo
movsb
lds
cmc
dec
test
inc
jns
xchg
loope
jle
mov
or
and
push
pop
stos
mov
out
pop
sahf
outsl
sahf
sub
cltd
push
sbb
xchg
lret
adc
pop
pop
cmpsb
pop
add
pop
inc
xchg
lods
push
sub
fdivs
adc
test
xor
hlt
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
shll
mov
inc
adc
pusha
gs
pop
mov
mov
xchg
jb
in
leave
jb
xchg
mov
sbb
shlb
pop
stc
test
mov
inc
clc
imul
inc
pusha
pushl
dec
add
mov
movsb
xor
in
cmc
rcr
cs
aas
popl
in
jnp
mov
mov
push
inc
adc
bound
mov
mov
cmp
or
mov
inc
stos
sub
repz
fisubl
rorb
mov
adc
and
dec
add
cli
adc
or
mov
leave
ret
pushf
and
subl
sbb
in
jb
xor
jge
pop
test
cld
mov
push
test
outsl
sub
jge
pop
pop
ret
enter
aas
push
cltd
call
fucom
xor
mov
arpl
out
push
pop
sbb
sbb
mov
or
inc
sub
dec
cmc
add
movsl
sbb
mov
jbe
mov
push
inc
cwtl
movsb
dec
xorl
xchg
jg
imul
inc
cmpsl
jl
neg
gs
push
jp
shrd
xor
stos
test
nop
or
xor
sub
pop
bound
ss
icebp
mov
shrb
and
out
inc
dec
imul
sub
movd
pop
cltd
xchg
hlt
jmp
jne
xor
outsb
mov
int
loopne
dec
and
scas
lahf
mov
or
popa
dec
pop
std
xor
adcb
xor
xchg
cmpsl
lret
mov
in
add
add
inc
sub
mov
test
xchg
loop
lahf
mov
adc
adc
nop
mov
push
aam
ljmp
push
repnz
inc
popl
ds
aam
add
divl
es
cmc
pusha
jg
repnz
sbb
shr
fidivrl
out
pop
inc
push
in
icebp
mov
idiv
xor
cmp
inc
jne
test
into
loope
pop
paddusw
jecxz
xor
daa
test
mov
jg
mov
pop
inc
sub
mov
loop
inc
add
or
add
xchg
xor
mov
icebp
push
push
stc
popf
adc
bnd
push
adc
sbb
imul
add
jle
mov
loope
mov
fwait
arpl
mov
xlat
andb
cmpsl
or
repnz
aad
mov
mov
jp
sub
cli
push
pop
fimuls
add
pop
popa
xor
dec
shll
into
cmpb
add
andb
adc
push
sub
roll
out
xchg
popa
fcompl
sub
sub
enter
sbb
movsl
in
out
gs
push
mov
bound
xchg
inc
fsts
or
pop
loopne
in
sbb
adc
xchg
add
add
push
xchg
bound
jmp
dec
mov
call
jl
or
pop
mov
cltd
lds
ljmp
cmp
aaa
aad
hlt
aaa
mov
mov
in
sti
fs
inc
in
adc
dec
pop
fsubrs
or
notl
mov
mov
jno
push
test
sbb
clc
push
jnp
pop
and
nop
or
in
xchg
dec
movsb
cmp
ss
divb
loopne
pop
ss
enter
xor
add
sbb
and
jo
cwtl
decl
adc
movups
les
dec
add
dec
sbb
mov
pop
bound
push
sbb
popf
iret
movsb
cwtl
out
sub
ljmp
stc
adc
test
xlat
and
outsl
cmp
push
ja
test
in
gs
icebp
inc
leave
mov
mov
push
pop
push
scas
arpl
jge
bnd
insb
adc
dec
or
enter
xchg
fldt
imul
je
cwtl
fdiv
mov
popf
xchg
stc
iret
push
mov
push
mov
xor
mov
lock
xor
ljmp
push
mov
pop
nop
push
addr16
xchg
push
imul
jp
testl
mov
adc
stc
inc
jbe
mov
mov
push
push
dec
out
hlt
mov
fldt
int3
mov
sbb
push
mov
ret
mov
ljmp
xchg
or
cli
and
mov
jae
cmp
xor
loop
mov
fdivr
xchg
lret
popa
movsb
stos
fiadds
lret
popa
movsb
stos
fiadds
outsl
mov
je
outsl
mov
je
outsb
and
mov
and
mov
and
mov
and
mov
lock
mov
push
js
jle
ret
mov
push
js
jle
ret
mov
push
js
jle
ret
mov
push
js
pop
adc
nop
jge
clc
pop
pop
adc
nop
jge
clc
pop
pop
adc
nop
jge
clc
pop
pop
adc
nop
jge
clc
pop
pop
adc
nop
jge
clc
pop
pop
adc
nop
jge
clc
pop
pop
adc
nop
jge
clc
pop
pop
adc
nop
jge
clc
pop
or
lcall
rcrl
jnp
rcrl
jnp
rcrl
jnp
rcrl
jnp
rcrl
jnp
rcrl
jnp
rcrl
jnp
or
inc
in
faddl
lea
test
mov
pop
xchg
repnz
cmp
cwtl
adc
shll
adc
shll
loopne
mov
stos
loopne
mov
iret
mov
cmp
fxch
mov
cmp
fxch
mov
cmp
fxch
mov
cmp
and
or
jo
add
and
or
jo
add
and
or
jo
add
and
or
jo
add
frstpm(287
push
data16
jbe
xchg
frstpm(287
push
data16
jbe
xchg
frstpm(287
push
data16
jbe
xchg
frstpm(287
push
data16
jbe
xchg
frstpm(287
push
data16
jbe
xchg
frstpm(287
push
data16
jbe
xchg
frstpm(287
push
data16
jbe
xchg
frstpm(287
push
data16
jbe
xchg
or
mov
push
dec
mov
push
dec
mov
push
dec
mov
push
dec
mov
push
dec
mov
push
dec
mov
push
dec
mov
shr
xor
xor
mov
movsb
and
or
cmp
js
dec
cltd
lea
sbb
je
fldcw
pop
jl
pop
xchg
ret
and
lret
add
and
xchg
inc
test
in
test
xchg
inc
test
in
test
xchg
mov
dec
rcll
dec
mov
pop
xchg
repnz
mov
pop
xchg
repnz
cmp
movsb
dec
clc
dec
and
cmp
cwtl
adc
shll
adc
shll
adc
shll
adc
shll
loopne
mov
stos
loopne
mov
stos
loopne
mov
stos
loopne
mov
iret
mov
cmp
fxch
mov
cmp
fxch
mov
cmp
fxch
mov
cmp
and
or
jo
add
and
or
jo
add
and
or
jo
add
lahf
enter
fbstp
out
into
add
push
push
mov
mov
nop
popf
rolb
adc
add
ret
lds
pop
xchg
lea
pop
je
lcall
andl
push
dec
in
or
mov
arpl
sbb
gs
cwtl
cmp
mov
das
iret
fcmove
inc
xchg
out
sub
insl
mov
arpl
js
xchg
out
into
add
push
push
mov
mov
and
scas
mov
out
mov
std
shrb
xlat
fstl
fbld
imul
andb
xlat
lods
or
fistps
pop
fsqrt
sub
aaa
xchg
lea
or
addr16
add
mov
aad
cmpsl
jb
imul
aaa
lods
push
cmpsl
dec
hlt
jae
sbb
sti
and
int
lcall
pop
xchg
pop
pop
add
push
jl
add
and
inc
adc
aad
add
out
das
std
push
imul
insb
xorb
fimuls
sub
inc
stos
push
inc
fcompl
mov
nop
cmp
outsl
cmpsb
stos
add
and
je
push
and
push
inc
ficoms
jnp
add
xchg
aad
lahf
sub
fucomp
mov
or
or
test
stc
mov
dec
popa
sbb
dec
xorb
decb
lea
pushf
les
push
or
cmp
mov
push
adc
cmp
push
dec
mov
popa
into
ret
stos
xchg
push
lock
movsb
fbld
fwait
sti
hlt
dec
xor
pop
dec
xchg
cli
and
test
xchg
xchg
cwtl
aaa
dec
pop
pop
mov
dec
or
push
ds
loop
push
mov
jg
cmpsb
test
cwtl
into
nop
xchg
pop
xor
or
int3
sbb
jbe
popa
jg
insb
es
lods
sub
sbbl
xchg
or
pop
push
push
and
aad
loop,pn
mov
sahf
inc
ss
cmpb
mov
ret
cmpsb
sbb
jle
jb
sbbl
rcrb
and
push
sahf
cmp
repnz
pop
sub
loope
jmp
pushw
add
push
adc
or
outsb
or
push
in
aas
sbb
es
scas
and
xchg
fldt
dec
into
push
imul
xlat
int
pop
xor
pop
mov
adc
scas
lods
stos
mov
pop
lret
cld
in
pop
cmpb
lcall
sahf
push
push
rorb
sbbl
cld
test
scas
icebp
ss
and
and
jo
pop
cs
inc
mov
adc
xor
test
shrl
call
cmp
cmp
fcmovne
inc
sbb
mov
enter
push
xchg
push
sti
cmpsb
inc
out
fadds
fwait
push
jno
jmp
int3
jbe
fisttps
push
inc
stos
jmp
mov
insl
out
stc
push
imul
mov
xbegin
hlt
leave
jne,pt
xorb
inc
les
xor
push
xorl
loop
scas
cmp
push
icebp
ss
ret
cmp
enterw
mov
add
mov
push
dec
lock
and
xor
inc
stos
in
in
arpl
insb
insb
jb
into
data16
sbb
xor
cs
mov
andb
inc
fs
arpl
cmpsb
clc
push
sub
mov
std
mov
jo
arpl
push
jge
adc
dec
or
cmp
jae
push
jno
rorb
jge
push
jne
pushf
test
popa
mov
iret
sbb
cmp
push
pop
ds
inc
fisubrl
push
andl
fs
xchg
repz
out
outsb
dec
outsb
in
out
jb
mov
cltd
inc
mov
jns
adc
inc
mov
rcll
push
hlt
arpl
jns
cmp
fldenv
jne
cmpsb
in
subb
sbb
jle
jo
mov
movsl
pop
loop
mov
add
fistl
fwait
push
jno
fstl
pusha
outsb
sbb
cmp
orl
xorl
loope
jnp
nop
mov
push
jmp
jo
xchg
adc
dec
sub
mov
inc
movsl
sbb
cmp
mov
dec
add
and
inc
pop
mov
push
test
push
xchg
xchg
sbb
push
xchg
rclb
stc
pusha
cmp
dec
dec
add
cld
lret
test
or
jle,pt
mov
pop
cmpsl
sub
outsb
mov
cmp
or
int3
adc
jge
cmp
and
ret
cmp
aam
ss
outsl
jmp
pop
add
pop
sbb
xor
enter
data16
lcall
je
pusha
cwtl
out
int3
push
cwtl
movsb
test
in
adc
pop
mov
jecxz
mov
push
ror
xchg
mov
dec
cmp
and
sub
mov
adc
clc
in
dec
mov
fisubrl
sbb
fwait
jl
stos
das
imul
lret
cs
fisttpll
lea
hlt
repnz
jle
lea
jmp
jb
cwtl
cmp
xchg
arpl
sub
push
cmpsl
scas
inc
stc
paddusb
fdivs
push
sub
mov
out
add
dec
or
adc
jp
lret
ja
add
jbe
xchg
mov
mov
jp
adc
jno
mov
sbb
push
movsb
adc
fs
bound
dec
clc
les
mov
lods
jmp
rcll
repnz
xchg
rcrb
addr16
push
pop
mov
push
pop
loopne
ss
mov
mov
inc
or
xchg
ds
aam
addr16
leave
and
mov
mov
jnp
mulb
into
mov
cmpb
iret
xchg
jg
or
mull
xlat
insl
add
mov
jno
add
hlt
mov
push
xor
mulb
std
es
cmp
in
and
xchg
arpl
adc
push
push
adc
dec
lods
int3
in
in
mov
pusha
xchg
push
in
mov
cmpsl
push
dec
ret
gs
rorb
mov
add
int
rcrb
in
jae
orl
insl
inc
xchg
cs
xchg
pop
pushf
int3
mov
popf
dec
cmp
mov
rcrb
mov
push
outsl
add
sbb
or
insl
cmpb
sbb
arpl
add
data16
scas
int
mov
mov
stos
js
cmc
out
aas
jp
imul
add
pop
movsl
xor
aad
subl
jb
bound
pop
xor
mov
mov
repz
and
into
mov
lret
adcl
sub
repnz
mov
or
push
mov
xlat
adc
or
mov
xor
test
in
and
add
bound
fidivrl
sysret
xor
dec
mov
cltd
cmp
jnp
mov
mov
negb
mov
out
popa
test
and
cmp
inc
stos
mov
lcall
adc
sub
xor
shrl
mov
outsb
mov
std
xor
clc
out
fwait
subb
mov
inc
sub
gs
test
mov
pop
and
ss
push
xor
test
into
mov
sbb
mov
xor
inc
orb
and
cltd
pop
and
fwait
sbb
xchg
fsubs
sub
mov
pop
gs
jl
stos
shl
imul
or
sbb
pop
fs
push
sbb
or
xor
add
lret
xor
pop
sub
imul
push
lea
scas
out
daa
add
sub
dec
mov
pusha
stos
clc
and
or
call
mov
sti
test
jno
push
mov
dec
jo
mov
jno
aad
dec
mov
push
in
add
gs
inc
mov
mov
jns
or
out
cmpl
adc
out
push
stc
sbbb
jne,pt
jns
popf
pop
adc
dec
push
jbe
mov
movsb
pop
hlt
adc
inc
test
bts
ret
icebp
lds
pop
sbbl
lds
insl
divl
jns
cmp
adcl
pop
and
pusha
testb
les
adc
iret
adc
inc
jnp
push
mov
lcall
add
or
mov
insl
in
xlat
out
fnsave
rclb
and
lods
lcall
call
pop
pop
out
cli
jbe
adc
inc
ds
add
outsl
into
in
cmc
adc
push
flds
or
sub
lcall
push
lock
pushf
xchg
aas
push
test
and
popf
rcr
and
movsl
clc
loope
call
pop
pop
or
xlat
je
out
push
fwait
mov
inc
lock
pop
cmpsl
mov
add
js
loop
cmp
enter
jg
sub
aaa
sbb
ss
xor
gs
push
mov
subl
outsb
mov
fildll
inc
lret
mov
lret
push
pop
mov
pop
addr16
xor
mov
pushf
insb
in
icebp
lret
aam
cs
sub
adc
xor
xor
cmp
lods
lahf
pop
int
stos
loope
lods
ret
mov
dec
push
aam
in
fdiv
fisttpll
rcr
pushf
hlt
dec
enter
and
jp
pop
mov
cli
jp
adcb
mov
cmp
xor
cwtl
ret
mov
scas
pop
mov
mov
int3
outsb
stos
scas
mov
mov
pop
testl
sarl
outsl
sub
jae
sub
pop
int3
xchg
push
push
jle
aas
insb
sub
rcrb
fstpt
ja
pop
das
jl
and
mov
mov
xchg
imul
int
mov
out
jmp
inc
sbb
cmpsb
xor
aas
iret
add
xchg
jp
or
dec
outsl
jl
sti
mov
lods
sub
sbbb
add
sub
clc
fstl
call
jnp,pn
mov
ja
xchg
xchg
lods
test
or
jo
int3
lcall
sbb
ret
mov
push
mov
popa
sub
enter
data16
cmpsb
sub
dec
orl
pop
int
sub
pushf
dec
dec
movsb
gs
shrb
jo
add
pop
push
jno
xlat
mov
dec
adc
es
push
push
cwtl
push
movsb
lahf
inc
jne
mov
mov
test
push
jae
ss
xchg
hlt
and
aad
fdivl
out
sub
or
movb
jbe
dec
jp
adc
scas
inc
dec
mov
addr16
and
xchg
pusha
jp
dec
test
jb
fisttpll
and
xor
faddl
xchg
sti
ljmp
dec
add
push
mov
jmp
lods
mov
es
mov
mov
test
rcrl
cwtl
inc
cli
loop
loopne
outsb
aad
dec
pop
and
lahf
dec
lds
outsl
add
sub
int
outsl
out
xchg
pop
shr
js
repz
cmp
mov
dec
push
test
jae
cmp
movsl
stos
loop
pop
adc
outsl
or
mov
adc
push
add
es
rorb
or
add
fstps
cwtl
icebp
pop
add
pop
cs
xchg
daa
movsl
xchg
and
cltd
mov
jae
xor
xchg
jno
negl
mov
pop
pop
loopne
test
in
lock
enter
ja
lock
shrl
fstpl
dec
dec
push
in
int
xorl
push
xchg
inc
adc
loop
ja
add
lret
sti
repz
repnz
cmp
mov
cmp
daa
loop,pn
insl
and
ljmp
nop
xchg
mov
imul
adc
ss
imul
mov
ss
insl
jnp
adc
sub
orb
in
dec
faddl
dec
roll
mov
xor
ret
push
mov
jbe
dec
inc
push
gs
loop
loope
cmp
nop
sbb
jbe
in
sti
sti
inc
sub
xchg
jmp
dec
xchg
lret
dec
pop
popf
add
xchg
mov
xor
leave
xor
shl
add
addr16
imul
les
pop
testl
cmp
or
and
push
pop
sti
popf
roll
sbb
sti
adc
inc
sub
clc
or
pop
jbe
and
xchg
jge
test
sbb
push
leave
std
dec
push
lcall
mov
pushf
sbb
mov
enter
dec
dec
outsl
or
mov
cmpsl
dec
and
outsb
inc
xor
mov
inc
xor
adc
push
push
int3
or
push
xchg
fs
xchg
sub
cwtl
mov
adc
sbbb
mov
movlpd
inc
cmovp
adc
rcrb
dec
out
das
mov
inc
dec
ret
in
mov
shr
pop
xchg
jne
mov
or
dec
cld
adc
or
and
jae
sub
and
fdivrl
rorb
jo
jmp
sub
rcrl
xchg
and
pop
push
js
xchg
in
call
or
movsl
push
jmp
jg
xchg
sub
cmp
stos
fildl
or
xor
push
out
repz
int3
and
jle
lods
mov
lods
notl
ss
or
xor
lea
into
and
fbld
cmpsb
pop
adc
xchg
mov
pop
xor
push
add
sbb
fdivrs
jb
or
fsubr
sarl
ss
outsl
mov
push
arpl
scas
sbb
cli
aas
jne
cwtl
mov
mov
push
add
aas
cmpsl
je
mov
push
add
in
jne
xchg
cmp
cmp
sub
mov
jp
mov
dec
frstor
xlat
daa
pop
leave
test
loop
loop
inc
bound
xchg
mov
fbld
sbb
mov
shll
jle
movsb
scas
cmp
push
and
aaa
out
stos
repnz
sbb
push
data16
inc
jmp
add
push
mov
and
fs
dec
jecxz
sub
push
mov
mov
test
pop
int3
jb
out
bound
rorb
ja
adc
mov
cmpsb
mov
lret
add
fs
out
jo
js
fisubl
test
es
pop
pop
aam
sti
test
fldenv
push
out
loop
cmpsb
jbe
nop
repnz
cltd
out
outsl
pop
iret
sub
pop
push
mov
adc
scas
mov
rcl
jb
mov
xor
arpl
sub
ficompl
je
lock
sub
cmp
mov
jecxz
jmp
mov
std
pop
cmp
mov
xchg
jle
test
add
enter
jp
cmp
cwtl
mov
fdivs
xor
psubb
sub
push
fucomp
xor
repz
cmpsl
mov
lods
sbb
adc
mov
cli
jns
jne
scas
outsl
sub
imul
mov
sbb
sub
push
jp
dec
mov
call
adc
lahf
pushf
add
jae
enter
inc
pop
jmp
scas
in
push
std
dec
cmpsl
push
pop
mov
and
push
aad
or
mov
sub
push
test
pop
jge
or
xor
inc
adc
lods
iret
or
sahf
sub
push
sub
mov
scas
jl
sub
add
lret
sub
push
out
mov
xor
leave
test
push
out
sahf
sub
xchg
push
pop
pop
das
inc
jae
aad
imulb
mov
mov
push
cmc
mov
fidivs
mov
int
mov
sbb
repnz
das
movsl
imul
and
pop
push
and
icebp
sbb
mulb
and
xchg
mov
jg
ja
aas
je
insb
mov
out
pop
psubusb
int3
xchg
pop
test
and
stc
xlat
jmp
or
aas
fists
sbb
shll
fimull
sbb
add
jge
loop
jb
stos
pop
inc
sbb
push
push
jno
sub
pop
xor
add
in
mov
mov
insb
mov
fidivs
movsb
ja
insb
int
rcrb
fstpt
test
rol
daa
clc
pop
sub
inc
mov
or
xlat
js,pn
out
hlt
cmpsl
mov
push
mov
in
mov
stos
or
nop
mov
jbe
push
fsubrl
daa
push
lahf
mov
rcll
mov
adc
pop
dec
mov
dec
xor
mov
sahf
es
fnsave
jnp
mov
pop
mov
add
loope
rol
pop
pop
fdiv
dec
xlat
pop
jle
cmp
daa
jmp
sbb
add
dec
push
ljmp
pop
sahf
mov
stos
inc
push
adc
mov
xchg
lcall
dec
sub
mov
jae
outsb
pop
mov
sub
stos
fstl
lret
inc
jo
and
leave
fidivl
lods
xchg
jl
xlat
xor
mov
add
int3
cmpsl
xchg
dec
rcrb
ret
and
jl
push
insb
dec
push
cli
mov
xchg
cmp
mov
push
mov
int
rorb
pop
inc
jecxz
data16
sbb
mov
sub
movsl
or
dec
pop
addr16
push
push
imul
int3
lds
in
xchg
test
mov
mov
movsl
repz
in
rorb
aaa
adc
mov
rorb
test
xor
fdivr
cmpsb
xchg
push
xchg
into
cmpsl
jae
xor
in
jp
mov
jle
mov
cld
inc
int3
push
mov
ds
js
inc
pop
lea
outsl
mov
adc
imul
lock
ss
dec
push
xchg
pop
add
mov
add
pop
adc
sbb
lods
mov
popl
xchg
add
ret
je
and
aam
sarl
and
mov
leave
add
fmull
bound
mov
popa
test
arpl
jno
les
clc
pop
insl
rcr
test
rorb
pusha
push
dec
fstpl
pushf
adc
jae
enter
std
lret
xor
and
jg
dec
inc
jecxz
sbb
xchg
dec
lods
add
cs
push
mov
int
dec
cmp
vphaddbw
imul
jge
xor
xchg
pushf
movsl
mov
loop
fdivl
xor
mov
mov
push
pop
mov
jno
mov
ja
jns
mov
sub
sbb
aad
push
jecxz
cmp
lods
call
xor
or
adc
shl
mov
ss
xor
cs
outsb
movsl
pop
dec
jo
ss
lret
and
std
or
lods
scas
cmp
lahf
push
lods
pop
insb
mov
movsl
call
adc
imul
enter
movsl
sbb
test
sbb
cld
ss
xchg
and
pop
es
adc
fwait
leave
dec
jns
test
mov
ret
lcall
fwait
jne
mov
jo
mov
xlat
stos
arpl
jg
jnp
fs
adc
sub
and
das
mov
lea
mov
add
outsl
insb
ljmp
lret
in
mov
mov
push
mov
mov
mov
jb
mov
push
push
mov
ljmp
jecxz
gs
inc
ficompl
jbe
enter
dec
dec
mov
pop
sbb
stos
andl
cltd
sbb
sbb
fsubs
sbb
stc
jg
iret
pop
add
mov
mov
mov
jle
orb
mov
ja
popa
sbb
inc
xchg
and
mov
cs
pop
push
pop
movsl
fdivrl
xor
jbe
cmp
fmul
xchg
cmp
test
addr16
xchg
cmpb
int3
sub
ja
movsb
test
or
push
pop
loopne
pop
jp
ss
stos
mov
pop
xorb
dec
ret
insl
pop
fmulp
lods
pushf
pop
jne
sub
notb
mov
arpl
aas
xchg
out
lods
test
data16
mov
add
dec
mov
sbb
ret
lret
mov
rcl
outsl
f2xm1
nop
clc
out
xchg
int3
mov
xchg
adc
jno
imul
insb
out
mov
mov
push
mov
or
fists
push
testl
adc
mov
sbb
xor
mov
ret
inc
push
dec
aas
fcomps
mov
and
ret
pop
adc
or
lret
jle
jbe
in
outsl
dec
scas
int
pop
shl
and
ljmp
mov
out
xchg
fstps
mov
movsb
loop
je
mov
mov
subl
xor
mov
rclb
cmp
imul
cmp
mov
cmc
ss
lahf
fwait
lods
test
pop
or
sub
sahf
push
push
jae
mov
mov
add
sbb
push
jp
mov
push
in
mov
or
lods
aam
lock
push
call
in
imul
and
nop
lcall
out
mov
jle
lea
aam
mov
inc
inc
mov
loope
push
adc
cli
test
xor
imul
pop
cmpsb
push
push
push
icebp
pop
in
fdivrl
or
clc
mov
call
xor
shlb
mov
jp
rcll
data16
mov
jae
jnp
xchg
add
pop
or
mov
outsl
loope
mov
xchg
or
inc
add
xchg
dec
je
clc
mov
xchg
movsb
rclb
xchg
push
push
movl
inc
inc
inc
cmp
and
daa
pop
and
lock
xorb
sub
gs
dec
pop
xchg
cmpsb
ljmp
pop
cmc
push
xchg
mov
scas
cmp
lods
pop
lds
insb
dec
repnz
xlat
xor
fucom
xor
pop
fdivl
dec
add
or
dec
loop
outsb
mov
sub
es
sahf
push
and
enter
xor
mov
mov
rcll
pop
push
mov
sub
and
sbb
xlat
movsl
lret
in
pop
pusha
mov
mov
cmpsl
test
inc
adc
pop
inc
adc
adc
loop
icebp
dec
hlt
daa
dec
outsb
push
out
xor
fistps
dec
sub
mov
fildll
push
pop
test
cmp
popf
inc
cli
mov
or
push
xlat
ret
and
mov
lds
mov
sub
insb
mov
enter
scas
rorb
mov
daa
popf
lods
sbb
es
ja
push
shll
aas
shrl
pop
sahf
call
and
jno
jo
repz
hlt
mov
jp
in
mov
orl
pop
dec
mov
inc
cmpb
enter
cmp
jb
sbb
arpl
mov
adc
xchg
xlat
cwtl
jmp
outsl
mov
and
repz
dec
cltd
dec
ljmp
mov
adc
or
and
jne
sbb
jle
js
xchg
iret
bound
xchg
add
out
sub
lods
jge
loop
xor
imul
test
scas
and
jp
cmp
andb
aad
xor
mov
sbb
mov
mov
movsb
inc
or
out
add
push
imul
in
cmc
in
sbb
inc
mov
inc
jno
push
xchg
adc
cmp
xchg
push
scas
xor
cmp
in
test
imul
sbb
xlat
addr16
pusha
cltd
test
and
fldenv
pop
fdivl
pop
test
sahf
mov
push
shll
rcl
daa
jae
aas
stos
hlt
xchg
xor
push
shll
test
lret
sbb
clc
pop
call
shlb
adc
cli
xchg
ljmp
fldenv
test
cmp
push
dec
xchg
mov
jmp
fcom
sahf
je
insb
jnp
inc
xchg
pop
xor
pop
rcl
leave
shll
pop
or
push
test
inc
lret
rcrl
movsb
imul
mov
aaa
sbb
jno
xorl
push
fwait
jmp
mov
push
in
add
stc
out
rcl
inc
sti
lret
mov
dec
arpl
xchg
sahf
adc
pop
pop
repnz
or
dec
jmp
pop
cmp
or
sub
divb
enter
jns
ret
rorb
sbb
jbe
popa
cmpsl
xchg
mov
das
jecxz
mov
aam
out
adc
jecxz
es
adc
cmp
push
sbb
cmp
iret
pop
out
push
mov
out
out
jp
inc
mov
mov
repz
xor
cmp
js
movsb
jne
dec
rorl
sub
test
adc
aas
mov
lret
pop
mov
movsb
push
sub
or
jno
cmpsb
xor
ds
pop
cwtl
rcrb
arpl
jp
sti
mov
lret
ja
ss
and
cmc
out
out
mov
and
xor
loope
stos
push
pop
xlat
lea
and
pop
mov
test
negb
push
fs
xchg
mov
mov
mov
gs
test
std
int
fwait
mov
add
daa
or
rcr
out
cmp
nop
lods
out
mov
add
int
pusha
test
inc
hlt
sbb
sarb
push
out
jae
fildl
jbe
xchg
pop
pushw
sbb
jne
sbb
xchg
mov
xorl
push
cwtl
iret
mov
push
lods
dec
stos
push
jns
daa
and
cmpsl
mov
lods
ret
sub
fisttps
adc
and
sar
in
mov
in
sub
std
xor
cli
aad
andl
xor
push
lods
mov
lret
aad
outsb
aam
jbe
out
cmp
test
fcoms
jae
pop
mov
ss
add
fsubp
mov
loope
int3
movsl
xchg
pop
cmp
int3
out
inc
mov
mov
scas
fidivrl
out
sub
movsl
inc
push
les
jae
in
xchg
daa
pop
ficomps
aaa
sarb
pop
rcrb
inc
aam
test
push
inc
clc
mov
ret
lret
outsb
mov
mov
adc
push
fldenv
ja
in
pop
xchg
cwtl
jmp
mov
adc
scas
sub
inc
aaa
inc
cmp
arpl
inc
in
dec
jo
lods
pop
fdivs
jp
pop
sbb
jecxz
cmpsb
adcl
jb
testb
shl
mov
dec
push
jge
in
lods
lcall
mov
add
aam
inc
inc
jp
mov
sbb
sub
sbb
sarl
xchg
hlt
mov
fcmovb
dec
ds
fwait
jecxz
jo
test
testl
jo
dec
imul
push
shll
xor
popl
mov
xchg
and
fucomip
mov
add
ja
cwtl
cwtl
jns
mov
fs
mov
dec
xor
out
and
cmp
sbb
sysexit
lahf
cmpsb
test
popa
sbbl
sarb
data16
daa
es
ror
or
pop
ljmp
fst
insb
lret
lds
inc
sbb
push
lods
jne
jno
adc
mov
xchg
je
shlb
mov
adc
ret
or
cmpsl
scas
divb
adc
xchg
xor
das
insl
mov
pop
pop
popf
imul
push
addr16
fidivs
into
stc
scas
pop
or
movsb
adc
roll
cmp
xor
and
mov
rcl
jecxz
pop
jmp
test
mov
adc
jle
sub
cltd
or
jns
ret
loop
push
push
scas
add
rcr
mov
xchg
in
push
add
push
sub
mov
outsb
imul
xor
push
mov
pop
jbe
cmp
call
push
dec
adc
stc
dec
pushf
fcomi
mov
xor
mov
pop
inc
or
hlt
inc
mov
iret
push
dec
push
test
jg
jo
push
loop
mov
dec
xchg
xchg
mov
add
push
iret
xchg
cwtl
rolb
lret
in
fbstp
push
test
rol
negl
jmp
cmp
dec
push
inc
es
cmp
and
ds
dec
int
std
jb
pop
pop
lods
sub
int
push
push
incl
test
sub
popf
sbb
push
aam
dec
jle
add
imul
and
pop
xor
int
mov
mov
ss
daa
rol
loopne
pop
jg
rcrl
sub
push
lcall
jecxz
les
mov
pushf
mov
cmc
cmp
xchg
mov
ret
cmpsb
mov
cld
pop
in
mov
jae
xchg
sbb
jmp
mov
inc
xor
test
jns
das
lret
out
das
in
mov
jne
mov
dec
push
aaa
and
and
out
mov
or
lods
out
jge
sub
je
dec
sub
je
jno
movsl
mov
mov
jnp
aaa
push
sbb
xchg
jmp
add
sub
mov
jmp
outsl
sub
mov
cmp
es
daa
push
xor
jmp
popf
lahf
add
xchg
or
adc
push
pop
nop
lods
lock
cs
xchg
mov
mov
pop
cmc
xor
test
shrb
inc
mov
xlat
pop
mov
in
mov
jmp
mov
cltd
jne
sbb
cli
xchg
jmp
mov
mov
cld
and
xor
loop
push
enter
mov
pop
xor
jg
inc
add
dec
jp
in
aas
xchg
pop
sar
mov
jnp
addr16
aas
jnp
push
fmul
scas
imull
adc
les
lret
cmp
ljmp
jnp
cmp
fldt
push
mov
popa
cmp
xchg
dec
adc
jg
pop
sbb
jb
mov
jecxz
ret
pop
int3
pushf
rclb
repz
add
ja
pusha
mov
aas
repnz
adc
mov
inc
pusha
or
aam
sbb
inc
push
pop
xchg
xor
pop
push
cmpsl
sbb
pop
xchg
jns
mov
pop
test
in
sbb
xchg
in
xlat
cmp
ffree
or
sbb
mov
lea
fwait
scas
pop
es
movsl
dec
cmpb
and
jno
jno
pop
jnp
aad
and
mov
test
mov
aam
repz
sbb
and
rclb
je
fnstenv
sarb
daa
pop
cwtl
je
push
adc
ficompl
xchg
cmp
xor
xor
cmp
ljmp
movsl
outsb
mov
daa
aam
jg
sbb
ss
jle
fld
lods
mov
bound
push
dec
push
mov
pop
mov
inc
js
xor
sar
sbb
cld
add
loope
inc
loop
mov
repz
popa
dec
scas
imul
xor
popf
inc
clc
data16
sarb
out
sub
jnp
or
adc
pop
sti
mov
jbe
mov
dec
cwtl
int3
adc
xor
icebp
xor
pop
rcl
mov
inc
lea
out
add
dec
inc
stos
inc
repz
pop
inc
mov
clc
dec
scas
insb
rclb
inc
gs
jmp
aaa
push
clc
jns
xor
cltd
xchg
es
mov
test
xchg
pop
test
inc
dec
xchg
mov
mov
out
int3
rcl
mov
pop
dec
and
imul
aam
jns
test
fwait
jge
mov
jp
mov
lret
fldcw
insl
lds
or
dec
add
jnp
imull
mov
xor
sub
or
lea
daa
dec
insb
into
push
sbb
mov
aas
cmp
inc
add
iret
fwait
and
icebp
addb
lods
shl
sub
cmp
mov
test
and
push
cmpsl
cmpsl
cli
or
mov
lods
and
mov
cmp
lret
stos
enter
ja
add
cltd
lcall
es
aaa
call
sub
aaa
fs
jbe
add
hlt
pop
mov
imul
push
into
push
xchg
or
rcrb
repnz
mov
repz
dec
inc
rorl
inc
mov
data16
aaa
fcoml
inc
fcmovbe
out
testl
adc
lods
dec
inc
ss
jge
out
pop
and
in
jnp
scas
out
mov
or
mov
and
push
or
mov
cmp
xchg
mov
jp
lods
bound
cmp
and
stc
lret
cltd
push
outsb
dec
dec
xor
popf
mov
mov
mov
mov
cltd
out
add
out
xchg
mov
jnp
pusha
push
outsl
jmp
cmpl
dec
fwait
ja
push
iret
add
pop
jg
cld
inc
ror
adc
lds
mov
push
cld
mov
popf
pop
push
insb
push
inc
jmp
mov
pop
filds
dec
fnstsw
enter
mov
jno
inc
push
popf
ja
fldcw
mov
movsl
imul
cmp
mov
inc
push
sahf
cwtl
mov
insl
sub
mov
mov
inc
fcomps
ficoml
adc
or
mov
cli
cmc
int
int
lret
xchg
scas
sahf
sbb
mov
pop
jo
sub
cmp
add
dec
aas
ja
adc
repz
mov
inc
out
cmpsb
mov
subb
jge
push
in
test
repz
adc
lret
repnz
inc
push
sbb
shrb
cmc
leave
dec
lret
popa
xchg
outsl
sbb
lods
mov
rcrl
inc
push
mov
ror
sbb
popa
gs
jmp
or
aas
or
int
inc
adc
pextrw
scas
cld
sarl
cwtl
mov
push
push
xlat
sub
xor
xor
popa
movswl
das
jno
xor
mov
xchg
fdivs
jecxz
addr16
repz
add
in
mov
push
cmp
and
test
pop
push
shl
sbb
cmpsl
andb
fnop
mov
add
ror
pop
sahf
aas
jmp
dec
push
lock
in
push
push
and
add
dec
add
fldenv
leave
push
stos
sub
xor
pop
mov
add
push
pushf
and
or
icebp
jo
inc
test
mov
lcall
pop
mov
inc
xchg
jle
lock
mov
outsl
std
stc
adc
out
pop
fwait
fs
dec
or
or
int3
push
ret
pop
mov
mov
repz
dec
pop
dec
notb
adc
jecxz
cmp
sar
stos
fsubl
dec
mov
clc
aad
jo
mov
stos
xor
xchg
sbb
lret
add
jmp
xor
loope
add
inc
cmp
lea
scas
lods
push
lret
popf
push
mov
xor
inc
fmull
fstl
lock
test
adc
imul
dec
adc
pop
js
cltd
inc
or
cmp
dec
fs
out
adc
aas
lret
ficompl
fists
std
pop
and
roll
mov
insb
mov
sbb
adc
shrl
xor
sarb
loope
pop
test
sub
pop
loope
sti
sub
pushf
lea
imul
in
iret
ss
popf
mov
inc
loopne
or
or
popf
mov
mov
imul
pop
in
imul
les
sbb
mov
movsb
test
cmp
fwait
lods
scas
movsb
or
dec
ljmp
rorl
shll
push
push
scas
fiadds
inc
aas
jl
jns
pop
fnstsw
lea
xor
cmp
push
into
push
lcall
sbbb
push
dec
lahf
insb
jge
out
xor
or
lcall
icebp
nop
out
push
lahf
mov
xor
leave
jmp
insb
out
jmp
xor
cld
adc
sbb
movl
repnz
out
divl
pop
xor
pop
mov
in
in
out
aaa
and
xor
lods
dec
jns
ja
cmpsb
dec
or
and
notb
in
or
loop
into
loope
lret
icebp
sahf
ret
sbb
inc
icebp
mov
push
sbb
xor
out
jo
add
addr16
out
add
int
or
and
xchg
in
inc
cmp
daa
push
push
mulb
js
insl
shll
mov
movsb
dec
es
push
jmp
jecxz
jo
cld
push
xlat
mov
testl
fdivr
pxor
mov
or
cmp
sub
sbb
xor
fildl
int
or
jp
inc
mov
cmp
fisubrl
jge
xchg
or
jns
rcrl
sub
pop
inc
mov
aas
and
adc
ljmp
repz
adc
test
stc
subl
daa
dec
xchg
mov
dec
test
dec
inc
sbb
pop
pop
inc
loope
fbld
int3
pop
stos
hlt
xchg
daa
push
inc
xchg
jg
mov
sahf
push
fisttps
notl
dec
mov
pop
sbb
outsl
inc
dec
mov
jae
mov
popf
test
xchg
cmp
dec
or
push
test
xchg
pop
mov
add
cmp
repnz
enter
mov
stos
test
testb
and
sub
or
lcall
jmp
push
adc
outsb
jle
mov
das
sbb
push
mov
loope
and
cmp
in
push
popl
xor
pushf
mov
dec
lcall
lods
pop
dec
test
ljmp
stos
dec
push
popa
sbb
stos
sbb
ret
mov
inc
pop
add
cmpsl
std
cli
lcall
cmc
insl
insl
ss
rorl
and
sub
pop
adc
add
inc
mov
imull
xchg
in
inc
pop
ljmp
fidivs
and
enter
fsubrp
out
mov
data16
jbe
push
sub
cld
cli
jne
adc
dec
xchg
lods
adc
cmpsb
dec
shlb
pusha
adc
in
and
push
lret
sub
idivl
movsl
mov
dec
push
push
loopne
add
popf
dec
out
inc
sub
xchg
push
test
test
dec
jg
rclb
dec
mov
dec
pop
mov
jb
jle
fldcw
xlat
in
xorb
notb
adc
out
mov
mov
loope
shlb
cmpsb
cli
mov
out
push
xor
jae
cmp
lods
lods
xchg
pop
and
mov
dec
inc
xchg
in
dec
in
stc
jl
xor
mov
dec
add
xor
adc
xchg
pop
jno
cmp
jb
xchg
push
push
xor
insb
shlb
and
scas
arpl
das
pop
adc
dec
jo
cmpsl
xchg
lds
xor
loope
cltd
ljmp
adc
adc
loope
add
push
mov
ror
mov
mov
call
push
repnz
aad
pop
cli
pop
imul
pop
and
pop
or
push
xchg
lock
inc
popf
add
aad
imull
mov
popf
adc
adc
mov
das
mov
and
bound
cmp
das
in
jbe
hlt
mov
push
or
xchg
lret
bound
jb
sub
jne
adc
cmpsl
pop
adc
insb
jbe
push
loop
inc
ret
shr
std
mov
xchg
test
dec
inc
fmuls
lret
adc
int
loop
int3
shll
xor
cmp
inc
lcall
inc
sub
pop
shrb
pop
flds
in
or
lcall
daa
push
push
mov
dec
mov
pop
out
ret
lds
sbb
clc
cmp
add
add
movsb
pop
sub
rorl
pop
fldl
dec
cmp
and
enter
daa
pop
imul
xchg
ret
arpl
cmpsl
push
jns
adc
into
xchg
rorb
adc
mov
lcall
nop
push
pop
stos
addr16
inc
into
adc
push
aaa
es
push
or
jae
or
mov
lret
popf
loope
mov
enter
addr16
mov
lock
test
and
sti
mov
and
mov
cmp
outsb
pushf
lods
out
pop
addr16
mov
andl
arpl
or
stos
hlt
es
push
push
iret
clc
popf
fwait
sbb
jbe
notl
enter
repz
add
adc
ret
cmpl
jecxz
inc
jecxz
or
pop
imul
adc
cli
pushf
gs
rorl
repnz
push
cmpl
sub
fnsave
js
mov
das
xchg
ljmp
sub
mov
aad
pusha
mov
pusha
mov
cmp
mov
cmp
fdivl
ret
imul
call
fdivrl
mov
push
out
shlb
xchg
dec
sub
jnp
ficoml
into
xor
addl
sarb
icebp
jae
cli
add
mov
std
dec
sbb
je
lock
insb
lcall
gs
mov
aam
adc
pop
dec
pop
xor
out
cmc
fwait
and
pop
jle
das
in
mov
fwait
and
and
inc
sub
pop
dec
jle
dec
mov
dec
popf
lods
mov
mov
jae
pop
cli
pop
shrl
mov
adc
fidivs
mov
jge
push
lcall
pop
xchg
rcrl
xlat
enter
and
pop
mov
adc
sti
mov
test
xchg
inc
mov
stos
jg
mov
shll
mov
xchg
hlt
addb
ss
or
movsl
sub
sbb
mov
movsb
mov
or
mov
in
les
ljmp
repz
cmp
out
inc
orb
jge
jae
jo
cmp
mov
popa
sbb
mov
xor
add
test
fucomip
lea
sub
and
jp
imul
add
jb
cmp
or
fiadds
push
sub
push
cltd
sti
and
mov
sahf
ja
das
xlat
add
jg
dec
cmpsb
dec
mov
sub
pop
ret
add
push
shrb
mov
sub
shlb
arpl
scas
loopne
jge
out
adc
cmp
mov
icebp
push
out
pushf
mov
lds
in
ljmp
jg
jne
xlat
cmp
xor
jp
in
mov
enter
lret
bound
xchg
xor
mov
fiadds
adc
repz
cwtl
fbstp
mov
push
test
or
test
sbb
mull
jb
or
or
shrb
xchg
sbb
in
inc
adc
cmpsb
inc
addr16
popf
pushf
mov
xor
sbb
cmc
loopne
stos
sub
lods
sub
mov
dec
movsb
lret
vcvtdq2pd
lahf
cmp
or
pop
sub
imul
mov
enter
cld
in
hlt
clc
jb
sub
xchg
xor
ja
dec
inc
adc
pop
cwtl
pop
push
lea
mov
inc
fmul
push
pop
or
mov
sbb
or
aad
lods
xor
mov
leave
lea
dec
push
jb
ret
cltd
test
xor
xchg
add
loop
cltd
mov
dec
adc
xor
fdiv
pop
int
outsb
xchg
outsl
cld
sbb
jbe
sbb
nop
int
lcall
ja
cmp
sub
jle
mov
and
loop
fbstp
out
push
lcall
test
jg
push
inc
jbe
lret
in
fstpt
inc
pop
cli
push
xor
jmp
jae
mov
ds
popa
adc
adc
stc
mov
or
sbb
add
or
lcall
push
push
test
fwait
jge
insb
sbb
mov
inc
popa
sub
adc
in
and
leave
lret
mov
jg
mov
adc
jbe
mov
xlat
fstl
lret
sbb
ja
xchg
inc
pop
pop
cmc
sar
and
inc
dec
aam
dec
cmc
test
cmc
mov
jbe
mov
add
gs
mov
adc
cmp
push
sub
lds
dec
push
dec
es
stos
add
cmp
jle
test
cmp
mov
or
in
mov
adc
xor
or
iret
sub
mov
enter
in
mov
ljmp
repnz
push
and
faddp
push
out
mov
int
stos
pop
pop
mov
jne
insl
inc
mov
sbb
enter
lea
push
out
cmp
test
pop
xor
sub
push
sbb
push
arpl
loope
das
or
xchg
scas
enter
notb
jecxz
mov
and
mov
cmp
sub
fsubs
cmpb
sub
cmpsb
mov
pop
mov
jl
adc
leave
call
inc
mov
add
ficompl
in
cmc
ljmp
flds
pop
sub
inc
sarl
faddl
pop
mov
sub
jmp
jae
push
repz
jecxz
loope
daa
inc
test
leave
jnp
or
push
outsb
mov
shrd
dec
movsb
mov
incb
sbb
ja
loopne
push
dec
cld
test
incb
cmc
mov
add
mov
dec
inc
cmpl
jnp
rcr
loope
pop
mov
dec
cmp
or
insl
aas
mov
lcall
xor
int
pusha
mov
jl
sbb
sbbl
xlat
loopne
loope
cmp
lds
mov
test
push
testl
out
iret
and
sbb
dec
bound
pop
mov
std
mov
push
aam
jne
leave
jg
dec
in
adc
cmpsb
sub
insb
divb
andl
je
fwait
out
mov
inc
bound
or
xchg
jmp
loope
aas
jo
jl
testl
mov
adc
test
rcrb
pop
ret
add
pop
leave
pop
mov
movsl
mov
popl
jb
sub
cmp
das
xor
or
ja
dec
jp
mov
xchg
imulb
pop
shlb
dec
cltd
sbbl
pusha
add
test
mov
adc
push
aam
cmpsl
ja
jno
sub
ds
js
mov
shl
adc
jns
xchg
add
cltd
fs
mov
push
mov
mov
pop
jnp
inc
push
cli
test
inc
je
add
jnp
inc
add
mov
divb
xor
push
jbe
aas
stc
push
jns
out
or
push
rcrl
xchg
dec
mov
ljmp
cmp
sbb
into
icebp
jbe
mov
inc
or
enter
hlt
inc
or
loopne
loope
lods
pop
and
es
xor
arpl
mov
pop
inc
jmp
lret
or
test
test
sti
daa
adc
push
push
cmpsb
jle
cmp
insb
rcr
xorl
cmpsb
and
xchg
xor
lret
in
xor
lea
into
and
xor
sti
mov
jnp
mov
jo
popa
inc
adc
mov
mov
jle
sub
aad
nop
popa
add
jbe
sbb
popf
mov
pop
add
adc
repz
rolb
cli
adc
jb
aaa
jno
addr16
adc
jp
cltd
pushf
pop
xchg
bound
push
cmpsl
test
insb
jg
dec
lret
aas
or
xchg
cmp
jne
lahf
bound
sub
jmp
sbb
mov
sub
push
cli
pop
test
popf
iret
add
lcall
and
mov
sbb
outsl
sbb
mov
ret
mov
rorb
push
sbbl
andl
adc
add
stos
adc
mov
pop
cmp
imul
jnp
push
adc
push
mov
xchg
jl
xchg
int
xor
jle
inc
int
xchg
insb
je
out
sahf
and
fwait
je
dec
xor
xchg
popa
mov
adc
pop
or
fsubrs
aaa
in
arpl
sbb
out
pusha
push
xchg
mov
daa
mov
std
in
scas
shll
mov
das
test
mov
imul
and
and
idiv
or
das
push
or
cmpl
jns
pop
xchg
fmull
dec
push
mov
dec
jae
jecxz
mov
outsb
cld
xchg
outsl
fs
loop
xor
sub
lods
push
aas
clc
xor
push
dec
popf
pop
mov
xchg
pop
lea
inc
pop
sti
and
push
xchg
enter
add
dec
xor
sbbl
xor
loopne
cmp
nop
or
das
cmp
mov
add
inc
or
dec
adc
aaa
scas
cli
mov
adcl
add
dec
aas
dec
push
cmpsb
and
push
ja
pop
cmp
repnz
test
popa
loop
bound
fbld
stc
les
vxorps
imul
dec
sub
outsb
ja
sub
daa
and
or
lods
jle
popl
fsubl
or
sbb
aam
jmp
andl
jbe
jnp
mov
mov
mov
adc
or
nop
scas
les
mov
adc
mov
mov
repnz
js
int3
sub
mov
sar
fwait
rcrl
test
sub
das
imul
mov
test
inc
stos
fdivs
fadds
cmp
lret
iret
cmp
je
arpl
test
xor
add
mov
sub
cmp
sub
sbb
lahf
js
mov
in
inc
mov
bound
insl
sarl
incl
mov
pop
xlat
cmp
mov
nop
in
into
jo
lods
or
ret
dec
cmp
lret
xchg
cltd
mov
sub
rorb
cmp
scas
push
out
shl
mov
orl
ret
pop
fmull
loop
push
repnz
scas
push
mov
add
cmp
cmp
mov
push
gs
btcl
inc
jne
sbb
js
iret
and
jmp
jmp
jnp
insb
cmpl
lcall
int3
lods
xlat
or
cs
mov
adc
mov
push
push
lods
dec
ret
sbb
stos
in
and
xchg
xor
mov
enter
push
adc
loope
imul
loop
jno
outsb
mov
xchg
dec
pop
shrl
je
aad
stos
fstp
clc
fdivrs
je
sub
fnstenv
repnz
mov
mov
adc
adc
jb
adc
mov
lods
pop
xlat
and
mov
out
rolb
mull
cmpb
std
les
loopne
sarl
mov
jmp
mov
and
aad
hlt
lcall
into
dec
lock
cmpsl
xor
push
xor
jle
jne
dec
test
roll
jns
or
sub
lret
popl
imulb
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
push
jmp
insb
out
fdivrs
ret
icebp
push
mov
fwait
cmc
cmpl
xor
movsb
outsl
add
pusha
jl
push
inc
and
in
movsb
xchg
xchg
xchg
mov
adc
adc
movsl
aas
lock
xor
jbe
push
xchg
outsb
sbb
xchg
xchg
xchg
mov
adc
adc
clc
mov
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
mov
rorl
push
rorl
push
rorl
push
rorl
push
rorl
push
rorl
or
jmp
sub
addr16
xor
adc
mov
out
push
rorl
push
rorl
push
cs
xor
adc
mov
out
push
rorl
push
rorl
push
sarl
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
cld
les
leave
outsl
ss
push
sub
fnstenv
pop
fnstenv
punpckhbw
sub
fnstenv
pop
fnstenv
pop
fnstenv
pop
fnstenv
pop
fnstenv
pop
fnstenv
pop
fnstenv
punpckhbw
arpl
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
ljmp
int3
scas
cmp
rol
dec
sbb
ljmp
sti
push
pop
mov
mov
mov
cli
aaa
ds
fs
shll
pop
cmp
pop
xchg
jnp
fisubrs
and
aas
pop
bound
cmp
pop
test
dec
in
push
fxch
pushf
sar
push
mov
xor
jg
pop
inc
imulb
ret
pushf
xor
mov
jl
cmp
scas
mov
sub
fwait
sub
mov
and
test
out
inc
lret
add
xchg
outsb
insl
lea
ret
sarl
and
cmp
lahf
inc
lds
pop
mov
pop
xor
sub
fwait
push
in
push
cmpsb
push
test
xchg
int3
inc
lea
or
dec
pop
pop
ja
jecxz
test
mov
mov
fwait
lcall
push
sub
shlb
pop
imul
in
inc
test
dec
hlt
std
and
inc
dec
js
ret
xor
push
jae
icebp
clc
dec
pop
cmp
mov
mov
sbb
sbb
sub
rcl
xor
add
insb
ret
pop
pop
inc
sti
sbb
sub
lcall
popa
out
add
xchg
movl
jmp
dec
nop
mov
notb
adc
repnz
xchg
repnz
gs
pop
adc
xchg
sub
in
in
data16
mov
xor
movsb
xor
mov
sbb
fisttps
push
xchg
xchg
xchg
mov
adc
ds
sbb
inc
lret
cmp
dec
mov
outsb
sbb
xchg
xchg
xchg
mov
adc
adc
stos
adcb
push
xchg
sbb
popf
int3
xorb
dec
out
sbb
jp
xchg
lahf
pop
fs
sub
cmpsl
xchg
mov
mov
cli
push
add
push
push
int
sbb
or
mov
data16
out
stc
mov
mov
inc
and
repnz
add
sbb
add
pop
xchg
push
mov
cs
scas
jnp
fcomp
jle
imul
cltd
lret
mov
sti
push
mov
or
shr
xor
xor
shll
xchg
das
into
sub
adc
repnz
xchg
repnz
gs
pop
adc
xchg
sub
in
in
data16
mov
xor
movsb
xor
mov
sbb
fisttps
push
xchg
xchg
xchg
mov
adc
ds
sbb
inc
lret
cmp
dec
xlat
dec
into
aam
adc
dec
dec
std
jae
mov
jns
ficoms
cmp
inc
push
and
mov
xchg
sbb
popf
int3
xorb
dec
out
sbb
jp
xchg
lahf
pop
fs
sub
cmpsl
xchg
mov
mov
cli
push
add
push
push
int
sbb
or
mov
data16
out
stc
mov
mov
inc
and
repnz
add
sbb
add
pop
xchg
push
mov
cs
scas
jnp
fcomp
jle
imul
cltd
lret
mov
sti
push
mov
adc
cmp
arpl
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
shlb
mov
popf
dec
imul
incl
stc
js
xchg
shlb
mov
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
push
mov
psubq
mov
arpl
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
xchg
sbb
xor
jnp
stc
js
xchg
jnp
stc
js
xchg
shlb
mov
fwait
outsb
jae
pop
aas
push
jnp
stc
js
xchg
jnp
stc
js
xchg
ss
out
sub
popf
sahf
jnp
stc
js
xchg
jnp
stc
js
xchg
mov
sub
lods
test
sub
popf
sahf
jnp
stc
js
xchg
jnp
stc
js
xchg
stos
jg
sbb
loope
rcrb
dec
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
xchg
cmp
sub
shrb
nop
sub
arpl
js
xchg
jnp
stc
js
xchg
mov
lahf
inc
mov
pop
add
jnp
stc
js
xchg
jnp
stc
js
xchg
lcall
shlb
mov
sti
frstpm(287
push
data16
jbe
xchg
out
in
push
loope
push
mov
jo
shl
mov
sahf
in
xchg
ret
and
lret
ret
and
lret
jmp
mov
divb
ret
and
lret
ret
and
lret
xor
imul
arpl
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
ret
cmp
cmc
and
loope
sbb
xor
sub
mov
xchg
cmpsl
mov
fstpt
push
dec
mov
cmp
sbb
sbb
cli
rcrl
mov
cmc
jb
add
mov
movsl
and
gs
and
pop
imul
jl
lods
fwait
rcll
ds
mov
cld
push
je
or
scas
shrb
push
das
inc
int3
inc
fsubl
push
nop
cmp
popf
jae
flds
jne
stc
cmpb
mov
sti
insb
hlt
std
sbb
rcl
add
fcomi
mov
or
jg
pop
pop
mov
inc
into
inc
cwtl
pop
push
in
xchg
dec
test
enter
outsl
push
mov
ja
pop
add
fucom
cmp
xchg
call
jp
mov
jp
in
dec
iret
in
mov
dec
cld
aam
xchg
dec
add
dec
jnp
xchg
cmp
ret
or
inc
jns
dec
insl
out
fwait
jl
outsl
jb
xchg
cmp
pop
les
stc
or
repz
adcb
pop
jmp
outsb
mov
out
ffree
dec
insb
pop
daa
in
sub
mov
js
fisubl
movsl
ret
dec
jmp
popl
in
adc
pop
adc
data16
or
push
pop
stos
ja
je
push
sub
loope
popf
push
sbb
clc
jbe
in
stc
mov
jl
xchg
pushf
fnstenv
pop
pop
js
dec
inc
movl
jle
and
fwait
repnz
dec
popf
adcb
cmp
sub
mov
push
jecxz
dec
cmpsl
enter
ficompl
inc
int
lret
fidivrl
out
pop
mov
clc
cmp
scas
sub
outsl
in
cli
cmp
push
inc
inc
inc
decl
pop
xor
and
dec
sti
outsb
or
in
mov
jo
and
das
sub
mov
movsb
repnz
imul
cltd
clc
add
pop
loope
aad
scas
mov
ljmp
inc
lea
incl
sub
dec
push
jp
popa
clc
mov
iret
mov
testl
outsb
test
sub
out
pop
inc
xchg
shr
loope
sub
add
cltd
pop
leave
movsb
adc
sbb
fisubl
push
sbb
enter
dec
add
in
mov
xor
aaa
daa
inc
inc
mov
test
pop
ljmp
dec
add
std
test
pop
sbb
not
mov
jmp
fdivrl
icebp
dec
push
icebp
jbe
lret
lahf
aas
push
or
push
cltd
outsl
imul
out
divl
sbb
pushf
push
in
fisubrl
dec
lahf
xchg
pop
fistpll
cli
out
push
push
outsl
pop
orl
mov
lock
jecxz
adc
mov
sub
cmp
mov
not
mov
jecxz
xor
cmp
or
out
and
call
sbb
test
mov
mov
loope
insb
sahf
call
inc
iret
jge
mov
pushf
push
mov
incl
pop
repz
pop
scas
mov
xchg
or
sub
outsl
push
xchg
xchg
sbb
xor
pop
jle
arpl
adc
jge
jmp
fsubr
mov
xchg
sbb
xor
push
popa
daa
mov
shlb
bound
test
sbb
imul
adcb
mov
ds
dec
mov
adc
xchg
lea
xor
and
aaa
cmp
ja
insb
add
mov
sti
push
push
sub
imul
sub
and
mov
mov
xor
mov
jle
je
mov
mov
xchg
clc
push
fs
pop
and
mov
cmp
out
push
inc
sbb
arpl
or
xor
inc
cmpsb
outsl
mov
int
add
jns
xchg
mov
gs
shrb
push
add
adc
lods
dec
dec
negl
cs
out
mov
inc
lods
adc
cltd
jo
repz
jge
or
cmp
or
xchg
pop
mov
lea
daa
icebp
xchg
clc
dec
inc
adc
add
dec
test
loope
push
or
popf
sub
jg
icebp
mov
fstl
adc
int3
scas
sbb
sbb
cmc
lods
adc
je
addr16
push
in
outsl
push
into
lret
dec
nop
les
cli
imul
xor
inc
test
fbstp
cmpb
push
jp
adc
xchg
xor
fdivrl
push
push
jo
test
and
pop
dec
adc
mov
js
clc
xor
ja
sbb
pop
mov
and
leave
das
mov
sbb
mov
clc
adc
add
popa
lea
inc
aam
int
sub
inc
push
aam
inc
sarl
cmp
add
adcl
test
into
pushf
sub
xor
add
scas
dec
iret
xor
das
add
dec
aaa
aaa
xor
dec
iret
sbb
mov
add
and
sar
js
pop
mov
inc
jle
inc
adc
or
sub
fsubl
das
mov
loopne
jb
aas
inc
dec
ja
les
inc
sbb
pop
cmp
jmp
mov
stos
or
stc
add
ret
pop
gs
inc
mov
adc
mov
fmull
aaa
stos
divb
jge
xor
fidivrl
add
icebp
loopne
test
dec
mov
out
jbe
jns
enter
into
fld
es
jne
int3
sbb
rcr
mov
mov
incl
mov
push
or
add
inc
cld
adc
popf
xchg
cmp
pop
sti
push
idivl
add
mov
jg
cmpsb
jno
stc
cltd
inc
lods
out
sbb
or
pop
ret
lds
aam
fiadds
fucomp
shlb
cmc
xor
sar
dec
xchg
mov
pop
pop
rorl
dec
ja
rcrl
aas
mov
xchg
jbe
adc
insl
aam
insb
roll
xor
push
pop
pusha
sbb
jle
cltd
mov
aas
mov
mov
scas
pop
in
pop
fisttpl
inc
jp
dec
inc
pop
push
outsl
clc
or
mov
pop
inc
popa
or
repz
scas
fisubl
push
mov
in
lods
pop
push
cltd
cltd
and
or
inc
aad
xlat
mov
and
or
nop
lods
and
pop
or
pushf
sbb
mov
repnz
pop
jo
sub
movsb
inc
sbb
mov
fdivr
and
ret
imul
pop
pop
or
arpl
mov
cli
mov
inc
movsl
lret
adc
xor
cmp
push
sub
clc
arpl
orb
mov
sarb
sub
push
das
mov
and
dec
aad
push
mov
fnstcw
push
mov
mov
xchg
pop
sbb
in
or
pop
inc
sub
fst
hlt
xchg
xchg
dec
mov
das
push
lret
ror
movsl
cs
imul
xchg
loope
push
call
pop
cltd
shl
pop
cmp
mov
daa
fisttpl
scas
mov
std
adc
insl
jle
adc
mov
lret
cli
dec
std
add
inc
enter
or
add
in
jmp
add
ret
push
or
ljmp
rcll
mov
and
dec
adc
jge
mov
push
xor
scas
movsb
jns
and
call
jo
jbe
xchg
rcll
mov
cmpsb
sbbl
pop
cmpsl
mov
lds
mov
mov
pusha
ja
iret
imul
cld
cmpsl
rcl
dec
fdivr
mov
int3
cmp
fmuls
test
and
clc
popf
xor
negb
sub
and
sbb
sbb
stos
ret
cmp
mov
fdivrl
movsl
outsb
xor
add
hlt
nop
sahf
bound
decl
dec
sub
push
jbe
addr16
jb
adc
out
cmp
adc
xchg
and
push
xor
xlat
rclb
sbb
add
and
and
or
mov
mov
or
lahf
push
sti
push
fdivs
pop
mov
incl
push
dec
sbb
pop
adc
inc
stos
jecxz
push
inc
inc
lds
mov
cmp
mov
add
and
lret
fisttps
cmpsb
test
repz
pushf
push
push
mov
inc
stos
mov
pushf
push
push
mov
push
movsb
pop
in
mov
pushf
push
push
mov
insb
movsb
mov
dec
test
pop
dec
in
sbb
out
std
adc
xor
add
push
bound
add
sub
pop
dec
xor
and
enter
cwtl
inc
add
in
jge
xor
jl
popf
icebp
fs
dec
fdivrl
push
inc
js
xor
sar
mov
mov
ja
in
test
jns
dec
dec
pop
scas
or
test
mov
ljmp
jbe
dec
fnstenv
dec
sub
xlat
fnsave
cld
mov
fwait
rcrb
xor
push
popl
testb
fwait
scas
sub
sbb
movl
inc
xchg
xchg
fidivrl
popl
testb
fwait
scas
sub
or
and
push
cmpsl
push
fcmovu
xchg
call
mov
sti
mov
mov
lods
or
cmp
iret
xchg
mov
fstl
mov
sub
iret
idivb
fwait
cmpsl
xchg
inc
bound
incl
pusha
and
inc
f2xm1
mov
jbe
push
cmpsb
cld
fidivrl
and
jg
lcall
arpl
pop
fidivrl
and
jg
lcall
cwtl
adc
das
xlat
lahf
xchg
js
xchg
jg
jg
sbb
pop
adc
bound
inc
adc
ss
sbb
int
dec
dec
dec
cmp
fsubrl
bswap
cmp
mov
das
test
sub
adc
pop
ss
cmp
sbb
dec
xchg
mov
icebp
jnp
stc
js
xchg
push
dec
mov
xor
popa
gs
scas
dec
stos
push
cwtl
dec
inc
adc
xchg
in
ss
dec
hlt
and
std
and
xchg
int
cltd
sbb
addl
push
mov
and
lret
sbb
mov
jne
push
pushf
lret
int
xor
icebp
jg
mov
arpl
lcall
addr16
or
cmp
lret
scas
rol
lret
xor
cmpsb
pop
enter
out
cmpl
mov
sahf
loop
xchg
and
cmp
push
push
sub
mov
aam
test
mov
dec
pusha
and
in
xchg
das
and
rclb
jecxz
mov
cmpsb
or
mov
ret
xor
pop
fisubrl
adc
mov
pop
lds
leave
cltd
fldenv
mov
lods
addr16
mov
xchg
outsb
jo
lods
sbb
imul
mov
dec
les
daa
push
fisubrl
lods
push
push
pop
clc
cmp
lret
mov
jne
out
icebp
ds
test
loope
sti
out
fwait
dec
stos
roll
jle
mov
std
mov
cmp
fldt
or
xor
adc
cld
or
xor
sbb
xchg
cmp
out
out
mov
mov
scas
dec
outsl
xor
xor
pop
jp
aaa
jno
cmp
sti
and
xchg
lods
imul
loopne,pt
movsl
mov
pop
dec
mov
mov
int
xchg
mov
fnstsw
dec
mov
sar
push
adc
jo
lods
iret
pop
movsl
push
mov
mov
ss
lods
jle
movsl
in
fwait
inc
sahf
cmp
outsl
cli
mov
lds
mov
push
leave
fwait
push
nop
notb
pop
or
and
inc
jmp
nop
mov
lret
xchg
pop
cwtl
inc
scas
adc
fwait
pusha
nop
inc
inc
insl
mov
lret
out
aaa
out
adc
andb
jns
push
inc
pop
shll
push
stos
sbb
pop
lds
fsubrs
pop
pop
out
lods
mov
sbb
sbb
inc
or
and
xor
dec
or
mov
mov
or
mov
dec
mov
dec
shrb
insl
xorb
mov
sbb
push
fidivl
mov
push
aas
jns
enter
fcoms
jae
and
sbb
push
mov
out
sbb
loop
rolb
dec
popa
mov
daa
jmp
mov
cmp
ja
push
stc
xchg
xor
in
add
dec
aas
mov
push
adc
and
jne
nop
addl
xor
scas
and
stos
pop
inc
lods
cld
push
cs
dec
jae
mov
cli
cli
es
inc
aaa
push
loope
call
scas
leave
fwait
pop
inc
cmc
cmp
pop
addr16
mov
cmp
in
aad
and
cmpsl
mov
lret
fs
push
fcmovnb
jg
rorl
cmc
out
xchg
xlat
jge
jle
or
sbb
popf
cmpsb
mov
in
fildll
jl
sub
sub
lea
or
mov
jno
jno
push
leave
hlt
fs
jb
xchg
lock
xchg
adc
inc
in
push
idivl
push
out
shll
mov
es
sub
pop
dec
xor
daa
jo
inc
out
inc
inc
push
xchg
dec
push
push
sub
mov
jno
pop
lcall
sub
test
xor
roll
mov
xchg
push
or
xor
popf
sbb
cmp
sbb
mov
fdivrl
pop
popf
and
lret
insl
jae
jmp
mov
out
sbb
mov
and
ret
lods
mov
mov
loopne
outsb
mov
repnz
and
inc
out
into
mov
adc
jmp
ret
rcrb
shrl
jecxz
inc
test
adc
mulb
jnp
mov
lcall
mov
lods
xor
popf
mov
mov
lock
rolb
jp
or
pusha
stos
lock
shrl
into
inc
popa
pop
iret
sub
or
mov
outsl
xchg
mov
inc
fwait
push
shlb
clc
ljmp
xor
xor
notb
jg
xor
in
inc
pop
js
dec
mov
mov
mov
jecxz
iret
notb
dec
or
enter
nop
pop
mov
dec
sbb
rcll
pop
stos
pop
fstps
mov
add
int3
sbb
dec
test
xchg
int3
jo
movsl
cmp
inc
push
imul
jo
in
test
xchg
xor
push
cmpsb
movl
lcall
andl
mov
push
pushf
lret
xor
test
add
popf
push
in
mov
lods
add
in
sbb
das
mov
mov
lock
jo
js
cmpsb
cs
in
pop
xchg
xor
int3
repnz
sub
sub
and
sbbl
mov
cmpsb
test
inc
jb
orl
inc
aam
jnp
jo
mov
mov
dec
mov
aas
mov
push
or
adc
call
sbb
into
call
add
xor
pop
push
or
in
into
mov
pop
xor
push
jns
and
mov
filds
icebp
xchg
mov
push
cmpsl
push
into
leave
clc
jno
push
stos
push
sbb
pop
mov
mov
pop
jb
jmp
nop
cmp
jg
daa
jns
dec
leave
ja
dec
mov
xchg
movsl
or
ds
rorb
cmpsb
divl
or
int3
sar
scas
push
sbbl
jl
test
jmp
shrl
cmc
mov
int3
pop
mov
dec
popf
ficompl
xchg
jl
insb
push
dec
dec
ss
in
cmc
xchg
pop
cmpsb
xchg
fbstp
push
cmpsl
dec
imul
sub
pop
daa
push
scas
mov
aam
test
xchg
roll
cmp
adc
iret
insl
pop
add
sbb
cmpl
repnz
or
sub
enter
pop
add
add
sub
cmpsb
mov
and
sub
or
pusha
daa
sub
js
gs
push
sub
jne
rcrl
mov
pop
or
jge
ja
ss
mov
fldcw
bound
shl
movsb
push
xchg
icebp
into
inc
sahf
repz
add
rorl
repnz
dec
fwait
aam
sub
stos
cwtl
bnd
add
push
lods
push
and
and
test
mov
jno
xchg
cwtl
pop
je
sbb
xchg
xchg
mov
inc
cmpsl
or
std
push
xor
pop
adc
adc
inc
push
cmpb
aad
mov
pop
js
xchg
popf
int3
fwait
jno
mov
jne
jl
fsts
adc
xchg
ljmp
xchg
cmc
je
push
push
jno
pop
pop
mov
movsb
inc
ljmp
pop
iret
lea
push
enter
mov
ds
fsubl
packssdw
je
lods
mov
sbb
clc
ret
push
leave
push
xor
lcall
or
mov
test
sbb
movl
aam
imul
arpl
test
insb
cmpb
cs
dec
rolb
in
inc
ja
inc
ds
xlat
call
push
cld
mov
adc
jmp
out
testb
pop
cmp
cmc
or
dec
xor
push
mov
arpl
clc
lea
mov
sub
sbb
ss
mov
call
pushf
jge
and
imul
imul
nop
fidivl
jb
subl
sqrtps
xor
mov
rcrl
out
mov
or
mov
ja
repnz
mov
push
jb
jo
xchg
jl
into
fadds
xor
popa
in
cmp
pop
xor
clc
int
or
cmpl
in
adcl
rclb
push
xlat
cmp
jno
push
test
mov
jmp
or
ljmp
xor
cs
jmp
fwait
xchg
push
xchg
out
and
test
je
jo
out
pop
push
std
test
xor
xor
pop
jmp
push
mov
adc
cmp
shr
mov
or
cmpsl
fistpl
outsl
ss
mov
je
lret
rcrb
cmpsl
push
ljmp
cwtl
and
add
cmpsb
add
addr16
nop
iret
push
pushf
cld
sbb
xchg
push
int
fnstcw
loopne
cmp
dec
xlat
mov
sbb
mov
pop
es
repnz
push
cli
sbb
mov
xor
xchg
lret
dec
inc
inc
jecxz
sbb
daa
repz
std
faddl
in
inc
mov
pop
outsb
sbb
adc
or
pop
push
fidivs
ss
mov
js
cmp
das
test
push
pushf
sarl
and
bound
or
pop
sti
aad
dec
mull
test
test
movsl
mov
ja
mov
inc
aaa
adcl
stos
enter
xchg
imul
dec
andl
cmp
jo
or
xchg
sbb
ss
or
adc
shr
jmp
test
in
jb
outsl
push
sub
xchg
jno
nop
sbb
adc
bound
repnz
ss
xor
movl
std
or
inc
xor
aas
daa
in
gs
shlb
and
or
mov
sbb
outsb
mov
pop
cs
jl
xor
jecxz
add
add
in
xor
sbb
dec
adc
lcall
xchg
insl
add
in
mov
in
xchg
cltd
sbb
ds
loop
adc
adc
sbb
xchg
mov
and
daa
jnp
add
cmpsl
push
lret
push
adcl
lock
mov
push
test
mov
or
imul
inc
xchg
stos
lahf
insb
repnz
cmpb
mov
cmpsb
mov
ja
lret
xor
addr16
mov
nop
xchg
mov
roll
push
and
or
movsb
imul
pop
inc
rclb
mov
mov
gs
cltd
cmpsb
jo
adcb
jno
stc
sbb
push
ljmp
fwait
jp
sbb
loope
into
dec
mov
jbe
in
cmp
cmp
sub
pop
fisttpll
sahf
jle
mov
dec
cmp
adc
dec
fcomp
arpl
leave
clc
sbb
sbb
lods
ret
xchg
sub
xor
pusha
scas
sub
jl
adcb
dec
and
sub
test
daa
adc
jmp
in
and
xchg
inc
nop
testl
cmc
cmp
mov
stos
into
sti
shr
add
dec
push
jle
dec
xchg
sub
xchg
pop
add
dec
jne
cwtl
loop
xchg
fsubrp
iret
imul
in
cmpsl
ret
xchg
and
lods
jp
jno
lcall
in
testl
jb
sub
bound
movsb
shlb
jmp
sbb
xchg
adc
in
pop
mov
push
mov
in
push
dec
scas
cmp
xor
or
popf
pushf
sbb
push
jl
scas
es
sub
nop
add
fstpl
repz
mov
add
ja
and
arpl
fiaddl
in
adc
out
mov
cli
add
pop
ds
loope
mov
jecxz
cmp
test
mov
cmp
fldenv
mov
push
call
adc
fdivp
gs
daa
shll
fsubrl
addb
ret
push
pushf
inc
xchg
cmc
jno
push
xchg
add
out
aam
or
fs
jno
adc
inc
pop
sub
pushf
sbb
jl
sbb
shlb
adcb
fwait
aaa
mov
sbb
jae
pop
cwtl
mov
sbb
inc
pushf
das
add
ss
xchg
lods
addb
sbb
jge
call
inc
mov
daa
and
lods
ljmp
sub
adc
js
jl
clc
jne
push
imul
jne
ss
mov
mov
push
dec
int
aaa
jnp
iret
loope
testl
dec
testl
scas
add
mov
ficomps
fsubrp
sahf
add
mov
fbstp
or
testl
ds
loopne
dec
rorb
jp
xor
dec
movsb
out
cmp
call
int
leave
cltd
sarb
push
dec
cmp
hlt
in
iret
out
icebp
and
test
mov
inc
in
cmp
xchg
push
mov
add
es
std
popf
jge
dec
sub
stc
jge
bnd
daa
sbb
or
sub
fstpt
hlt
sbb
jne
add
movsb
add
jl
aad
movsl
hlt
xchg
inc
nop
loop
lds
sbb
int
in
jno
add
xor
pop
mov
sub
mov
or
popa
popf
sub
into
lret
mov
inc
std
lds
lcall
insl
stos
mov
pop
rcll
in
mov
and
mov
movb
xor
inc
dec
testl
cs
das
mov
rcl
inc
lret
add
imul
loope
add
push
mov
mov
jb
fs
out
outsl
and
out
or
lea
pusha
imul
lds
xor
imul
push
pop
adcl
in
and
and
aas
aam
add
sub
jns
jp
push
inc
out
xchg
pop
xchg
inc
out
dec
rep
and
inc
leave
bound
or
lods
iret
aad
cltd
push
or
or
pop
dec
outsl
rorl
outsl
dec
or
xchg
push
mov
dec
cmp
add
sub
mov
push
mov
nop
xor
xor
jno
add
lea
push
cmp
pop
outsl
popa
or
lahf
push
push
and
dec
bound
in
push
cli
int
push
cmc
cmp
sub
int
sub
lods
jno
addl
iret
push
ljmp
jbe
call
fiaddl
sahf
ja
scas
or
or
cs
lcall
mov
rcl
ljmp
insb
adc
call
or
push
dec
xor
pop
jno
popf
mov
ds
mov
push
stos
in
dec
mov
incl
xchg
mov
mov
ret
das
or
cmp
push
shr
nop
ror
or
stos
lret
dec
add
inc
rcrl
cmpsb
mov
xchg
dec
sub
lds
test
std
cwtl
jnp
mov
lahf
call
imul
sbb
out
inc
mov
push
testb
mov
clc
shll
aam
and
mov
dec
test
inc
imul
mov
mov
pop
mov
rcl
das
sbb
in
inc
push
fdivr
inc
popa
jb
mov
jnp
adc
add
ja
mov
and
sarl
jp
adc
pusha
mov
lods
idivb
mov
sub
movsl
pop
xchg
mov
mov
push
data16
int
xchg
lcall
mov
pushf
jge
mov
sbb
fwait
sbb
ja
sbb
mov
sub
or
mov
add
fsub
test
dec
loop
inc
sbb
add
and
filds
fldl
jnp
data16
leave
xorb
sbb
or
xlat
test
shll
fistpll
lea
subl
inc
std
das
arpl
cli
inc
rorl
sbb
lds
lcall
mov
cmpsb
shl
mov
ret
and
and
mov
adc
sti
jo
orb
push
incl
iret
fsub
test
mov
xor
mov
mov
push
xchg
xorl
addb
cli
push
leave
sti
dec
jae
cltd
sarb
xor
fmul
addr16
int3
andb
ds
shrb
iret
xchg
mov
and
outsb
cwtl
jo
popf
cwtl
dec
aad
lods
popa
jmp
xor
in
sbb
jno
inc
sbb
je
push
push
mov
jp
xchg
pushl
repz
mov
mov
jle
or
cs
lcall
mov
clc
push
cmp
mov
shlb
pushf
lds
mov
imul
daa
adc
stos
outsb
leave
fadds
data16
mov
adc
sbb
call
outsb
inc
sub
cltd
scas
inc
in
adc
sub
add
int
push
lods
movsb
inc
inc
pushf
lods
mov
jmp
rcrl
push
mov
jle
fmuls
jle
push
mov
xchg
cmc
jle
ss
subb
outsb
sub
jnp
shrb
mov
movsl
movsl
sub
mov
popl
mov
pop
lahf
lea
mov
ret
es
or
sub
je
inc
inc
mov
xor
je
xor
mov
pop
popf
adc
scas
mov
dec
push
dec
hlt
jmp
mov
push
jle
clc
int3
mov
lea
les
scas
outsb
ds
cmp
inc
aas
aaa
mov
jbe
xchg
jbe,pt
push
stos
cmpsb
inc
and
jge
xor
push
xor
mov
push
aam
dec
jg
and
add
jg
scas
outsl
rcrl
sbb
cmp
gs
dec
shrb
movsb
xchg
adcb
repz
insb
popa
cli
cmpsl
adc
mov
add
adc
inc
int3
in
cltd
jp
jmp
mov
push
es
push
imul
jg
fcomi
dec
aas
rcr
idivl
rcrl
xchg
jnp
mov
sahf
xchg
nop
adc
cmp
icebp
repz
mov
sbb
int
aam
mov
pop
ret
fs
pop
pop
pop
push
pop
js
roll
testb
fsts
xlat
data16
lahf
daa
mov
mov
adc
fsubl
cmp
adc
fisubs
add
sub
sbb
or
dec
shlb
test
sbb
jb
inc
push
jbe
pushf
pop
loope
xchg
push
movsl
sti
mov
test
push
into
mov
ret
and
ljmp
sub
or
outsl
movsl
ljmp
lods
sbb
push
out
jno
mov
out
sahf
xchg
leave
sarl
in
and
js
add
popf
xchg
shll
dec
and
cmp
pusha
mov
mov
adc
out
enter
pushf
add
fiaddl
movsl
mov
nop
xchg
mov
add
fs
xor
jae
fisttps
sahf
jae
shr
ficoml
xor
xchg
aad
fs
pop
repnz
shrb
and
xchg
mov
xor
pop
push
mov
or
or
insb
insb
aaa
lahf
lret
std
out
jmp
call
stc
js
xchg
jno
cmp
shll
dec
bound
jl
inc
popl
dec
mov
pop
mov
dec
std
jae
mov
jns
ficoms
cmp
jne
shl
pop
dec
add
arpl
sub
ljmp
outsl
mov
fucomp
or
addl
or
clc
in
fisubrl
sbb
pop
negl
jbe
flds
lods
cli
adc
push
popa
inc
cltd
lret
loopne
aas
sar
inc
push
es
std
in
pop
stc
push
mov
mov
ficomps
sub
sub
adc
cmp
jno
push
rcl
pop
shrl
pop
shll
imul
clc
cmp
adc
cmpsl
push
pop
mov
push
xor
je
inc
xchg
adcl
pop
and
adc
pop
adc
ss
outsl
insb
out
and
or
fisubs
fwait
push
lock
mov
mov
int3
rol
jge
and
add
mov
daa
push
dec
shlb
mov
js
subl
sahf
pushl
inc
lock
fimuls
mov
sub
sahf
xor
dec
and
mov
movsl
push
sbb
ret
popl
adc
loope
test
jmp
lahf
pusha
mov
cmp
daa
lret
sbb
incl
cwtl
add
neg
pop
push
mov
jg
xchg
test
arpl
dec
add
xchg
inc
sbb
mov
mov
gs
xchg
mov
pop
mov
jg
lea
gs
gs
daa
sub
loopne
rol
xchg
mov
out
dec
sub
aaa
xor
pop
and
loopne
push
jnp
stc
js
xchg
loope
pop
sarb
jb
aaa
push
push
sbb
bound
pop
or
clc
inc
add
mov
bound
sbb
das
test
add
loop
icebp
sahf
ret
insl
out
out
cmp
xor
sbb
or
mov
cmpl
je
pushf
test
lret
out
pop
jecxz
cmpsl
dec
call
or
or
stc
test
imul
sub
loopne
adc
jb
leave
aaa
dec
arpl
loope
into
stc
cld
insl
push
pop
jns
sbb
jnp
and
movsb
jns
cli
mov
and
ljmp
lcall
fldt
jnp
push
xchg
push
jecxz
mov
jae
xor
push
rorl
rcrl
inc
scas
testl
jg
cmpsl
fmul
dec
stc
insl
push
xchg
mov
xlat
arpl
mov
mov
or
jbe
je
sub
adcb
cld
call
scas
loopne
mov
push
and
push
in
clc
cmp
leave
dec
adc
popa
lcall
faddl
stos
jmp
and
loope
xor
add
pop
test
bound
inc
data16
incl
mov
jp
mov
jo
dec
movsb
ret
ljmp
das
loopne
jb
adc
pop
mov
sbb
ret
push
jl
pushf
mov
imul
lahf
int
arpl
pop
mov
push
pop
inc
shll
xchg
xor
push
insb
cmpsb
mov
lods
enter
pusha
cmp
ja
stos
cwtl
adc
mov
ds
adc
lds
ja
loope
mov
fwait
adc
push
shrb
icebp
setns
xchg
mov
jl
fstpl
int3
in
ret
jnp
pop
repz
xchg
inc
pusha
pop
fstl
cwtl
inc
sub
sbb
pop
clc
sti
jmp
mov
mov
dec
xor
push
cmp
cltd
sub
sbb
subl
xor
dec
mov
andb
popa
out
hlt
cmc
pushaw
push
xchg
xchg
and
xchg
mov
inc
cwtl
lock
xchg
jae
mov
adc
dec
cmp
emms
adc
cwtl
loopne
push
sbb
push
stc
rolb
inc
xchg
inc
and
pop
mov
and
adc
fcoms
loopne
popa
pushf
fwait
xor
mov
icebp
and
inc
mov
bound
fs
xor
dec
pop
mov
hlt
in
jge
ds
push
in
out
ljmp
jne
dec
add
lods
fistl
mov
dec
iret
mov
aas
imul
and
cs
dec
stos
in
or
cmc
cmp
mov
jae
movl
or
and
jle
cmpsb
out
jns
hlt
mov
movsb
mov
hlt
pop
stos
push
adcb
test
loopne
adc
or
push
test
cmp
adc
fs
jg
repnz
ret
xchg
push
call
jle
adc
testl
push
pushf
or
ljmp
cmp
sbb
cmp
pop
fistps
pop
jns
cmp
pop
xchg
lcall
roll
xchg
jmp
push
repz
mov
fdivs
out
movsl
enter
pusha
and
pop
scas
fisubrs
scas
in
xor
xchg
ret
push
sbb
in
movsb
push
mov
test
dec
mov
ret
sti
fs
push
icebp
push
shll
movsl
xchg
mov
fsub
bound
loopne
loop
jae
mov
and
icebp
pop
mov
imul
dec
mov
or
mov
xchg
jl
xor
test
mov
push
movsl
jmp
addr16
sti
mov
xchg
mov
jbe
ret
cmp
dec
lock
xchg
aas
ljmp
imul
fcoms
sbb
cmp
lcall
jne
jnp
inc
add
push
add
mov
hlt
mov
cmp
call
int3
cwtl
call
cld
scas
push
mov
xor
scas
pop
loop
pop
xchg
pop
sub
mov
adc
cs
cwtl
insl
cmp
ds
int
xchg
xchg
clc
and
adc
push
subb
mov
lahf
insl
nop
test
dec
mov
push
jne
ja
jnp
loopne
mov
and
mov
std
mov
outsl
mov
les
mov
sahf
dec
pusha
jge
cwtl
mov
ficomps
xchg
or
stc
jg
imul
mov
add
pusha
jecxz
cmp
push
xchg
xchg
sub
jmp
xchg
andl
stc
stc
jae
adc
aas
inc
sub
dec
xchg
mov
lahf
mov
cmp
repnz
mov
push
pushf
out
mov
push
push
into
jmp
lret
sub
scas
negl
or
les
mov
out
pop
adcb
jb
in
sub
stos
xchg
in
push
outsl
dec
aaa
out
push
push
cmp
outsl
mov
das
dec
fwait
push
dec
ret
jp
das
mov
loopne
outsb
ret
pop
jae
jp
pop
addb
mov
or
dec
loope
pop
mov
test
ss
lret
xchg
mov
std
fwait
push
sti
mov
shll
fsubp
fidivl
xchg
data16
aaa
push
es
dec
mov
mov
outsl
imul
pushf
dec
cltd
mov
inc
sub
push
int3
cmpsb
fwait
push
add
push
dec
movsl
mov
out
in
hlt
fistpll
push
push
cli
cwtl
jbe
sbb
shl
or
lcall
pop
cwtl
mov
pop
mov
cmp
dec
cli
xchg
mov
xchg
pusha
adc
mov
inc
test
rolb
leave
jbe
add
lock
aam
sbbl
mov
push
jp
inc
lods
pop
and
push
test
xchg
outsl
mov
hlt
aaa
mov
adc
xor
sarb
mov
es
jmp
out
pop
lods
inc
and
xchg
in
add
lret
dec
jo
xlat
pop
inc
sahf
inc
xor
jae
push
xchg
or
cld
mov
aaa
outsl
mov
xorb
shrb
clc
cmpsb
add
stc
insb
daa
add
aam
int3
mov
int3
jbe
leave
mov
pop
lds
fldl
sti
mov
add
sbb
pop
int
ret
fs
pushf
adc
push
sbb
lcall
inc
adc
push
rcrb
lahf
aam
sub
pop
lret
or
mov
xchg
rorl
mov
lods
cmc
inc
out
push
xchg
fisttpll
test
dec
jecxz
xchg
mov
in
pand
fstps
pop
int3
dec
mov
lret
cld
jle
fdiv
sub
aas
notb
rcrb
mov
lret
aas
cwtl
je
js
nop
repnz
or
js
out
adc
les
repnz
lret
sarb
mov
push
insl
mov
push
hlt
adc
inc
adc
mov
fimull
mov
pop
pop
lcall
xor
xor
test
inc
xor
jns
lods
test
roll
pop
pop
sub
mov
ss
add
hlt
stc
loop
ljmp
pop
clc
es
lret
jo
jge
nopl
jg
call
inc
dec
xchg
xor
cltd
push
mov
in
pop
push
scas
ss
fidivl
pop
mov
movsb
sbb
fcompl
test
pop
pop
mov
xor
xor
sbb
sub
lock
push
fs
ds
sub
mov
sbb
rorb
sbb
imul
int
mov
in
add
mov
or
in
dec
sbb
imul
push
fcoms
sbb
adcb
fistl
incb
sbb
ds
test
sub
dec
repz
xor
jae
lcall
jne
les
imul
sub
xchg
mov
pop
xchg
cmp
inc
sub
pop
mov
hlt
outsl
xchg
pop
repz
into
fdivl
pusha
pop
popa
fisubrl
add
inc
test
mov
sbb
mov
in
pop
push
hlt
inc
repz
add
imul
adc
shrl
xchg
mov
cwtl
out
mov
stos
fisttps
mov
mov
push
or
xchg
fsts
js
shrb
dec
and
and
outsb
xchg
push
push
mov
int3
cmpsb
outsb
cld
adc
jns
pop
lcall
inc
cmpsl
jb
loopne
add
test
out
js
sti
cs
inc
sbb
out
cs
imul
xor
xchg
std
aam
loop
lret
pushl
sub
loope
xorl
xor
mov
cmpsl
movsl
and
adc
les
pop
fsubr
repz
arpl
pop
sub
shlb
repnz
fisubl
xchg
or
jno
movsb
rcrb
test
test
lret
out
daa
icebp
xor
inc
ret
cmp
or
push
nop
out
xlat
and
lcall
mov
das
in
push
and
xor
add
jp
mov
subl
jg
inc
mov
cmc
xor
loope
jae
ret
data16
fsubrp
movsl
pop
test
popa
cld
push
jle
xchg
xchg
add
lods
ret
ljmp
cmpsb
in
jbe
movsl
cs
sti
push
push
filds
adc
dec
push
mov
icebp
shlb
vcmpunordps
cmpsl
cmp
mov
in
push
cmp
mov
push
push
push
ja
inc
arpl
cmpb
mov
popf
xchg
lds
push
mov
addr16
rcl
out
dec
mov
rep
mov
add
in
lcall
fdiv
popf
scas
add
mov
xchg
aaa
dec
push
mov
inc
xchg
pop
or
loop
pop
jp
inc
sti
leave
popf
scas
loopne
push
inc
enter
push
add
jmp
push
mov
cs
and
dec
pop
mov
xchg
das
fdivs
in
mov
mov
mov
xchg
push
movl
movsl
sti
cli
ds
ret
std
int
aaa
inc
aaa
sub
ficoml
jecxz
fnstenv
or
jmp
mov
iret
lea
iret
shrb
sub
iret
shl
cld
stc
aaa
mov
mov
stos
scas
adc
scas
int
fldl
inc
push
push
fmull
mov
rorl
outsl
fdivr
lcall
mov
xor
test
insb
xchg
stos
sti
cs
mov
add
out
and
or
shlb
pop
push
dec
mov
mov
cwtl
xchg
sbb
outsl
scas
popa
in
bound
adc
cmpsb
inc
mov
movsb
mov
jmp
lds
dec
shrb
mov
adc
xchg
cmc
xchg
jns
inc
xlat
xchg
rcll
or
repz
xor
dec
out
push
push
test
in
fidivl
sti
clc
pop
in
xchg
pop
xchg
and
sub
lods
jns
insl
in
fprem
push
loop
or
mov
sbb
fdivrs
mov
mov
inc
or
ss
inc
push
adc
mov
cmp
mov
xor
and
cmp
inc
frstor
pusha
mov
fcomps
or
sti
adc
jae
xor
rorb
fdivr
and
mov
push
cmp
adc
pop
mov
mov
clc
pop
and
sahf
mov
mov
cld
dec
sbb
pop
pop
shll
mov
add
lods
jae
shll
push
cli
ja
xchg
ljmp
cmpsb
and
scas
dec
and
jg
push
call
mov
and
xchg
in
sbb
cltd
int3
push
or
out
inc
mov
jecxz
hlt
test
sbb
arpl
inc
inc
sbbb
lret
popa
aam
inc
rcl
xor
ljmp
sar
nop
mov
mov
xchg
xorb
insl
scas
push
int3
shlb
loopne
lret
and
out
popf
jno
fisubl
enter
mov
fsubrl
pusha
in
mov
fsubrp
in
push
setle
push
pushf
cltd
addr16
cmp
jg
imul
clc
movsb
out
xor
pop
cmp
cmp
cmp
es
inc
mov
jb
push
sbb
jg
mov
ret
les
dec
lock
xchg
xchg
dec
je
stos
dec
data16
sub
pop
jo
aad
iret
xchg
data16
addr16
mov
fsts
add
test
add
and
mov
cmc
cmp
stc
fs
imul
mov
aad
jmp
inc
add
cs
ficoms
push
hlt
jo
pop
cmp
push
in
faddl
scas
inc
or
neg
int3
aas
add
or
mov
and
mov
mov
mov
inc
xor
mov
jne
add
enter
out
and
push
std
int3
push
gs
mov
push
jnp
cmc
ret
scas
jno
mov
sub
sub
loope
jns
lods
sbb
inc
nop
xor
or
push
xchg
negb
pop
pop
cmc
push
and
movsb
das
sti
adcb
xchg
add
aaa
das
adc
xchg
daa
dec
cmp
data16
jns
push
arpl
add
inc
iret
test
sbb
add
cs
and
push
data16
jp
jmp
popa
pop
sbb
sbb
push
xor
shl
push
inc
mov
xchg
mov
rcll
jmp
sub
sub
and
pop
mov
fcom
lret
jecxz
movsl
cmp
mov
repnz
jne
cmp
fnstenv
movsb
movsl
loop
shlb
pcmpgtb
cs
or
sbb
dec
fnsave
pop
test
cld
into
inc
jns
lret
and
sbb
add
mov
dec
imul
or
scas
jne
into
arpl
cmp
mov
daa
or
fsubrs
add
jecxz
mov
negb
out
repz
cmp
push
ret
loope
enter
jge
sahf
mov
test
das
sbbb
jecxz
mulb
sarb
movsb
push
psadbw
pop
xchg
or
jbe
or
cmpsl
jl
lahf
jle
mov
out
or
cmp
and
push
push
int3
cs
div
enter
aaa
fildll
daa
mov
or
or
loope
jg
lcall
jne
test
cmp
inc
mov
inc
int
shl
xlat
fildll
mov
sbb
shrb
nop
loop
icebp
jle
mov
frstor
and
fnstsw
imul
je
shl
insl
pop
std
mov
mov
es
push
jns
and
jle
mov
sbb
push
das
das
orl
lcall
fistl
mov
imul
aam
pop
push
shlb
enter
adc
ds
shl
jno
and
sbb
je
and
repz
jns
faddp
fnstsw
ret
dec
daa
popa
dec
pop
roll
inc
addr16
pushf
ja
arpl
mov
scas
cltd
test
insl
loopne
sbb
dec
push
ret
mov
es
sub
or
sbb
and
sbb
insb
stos
pop
lret
loop
sub
sbb
and
aam
les
mov
lahf
push
inc
mov
sbb
enter
push
insl
repz
divb
lock
xor
mov
ds
leave
mov
or
rolb
cmp
jle
in
mov
hlt
push
pop
std
mov
and
imul
sub
xorb
push
cld
aad
jno
xchg
xor
into
cmp
jp
xor
inc
sub
and
mov
aas
cs
cmpsb
aaa
mov
out
shr
or
pop
leave
jbe
ret
push
dec
xchg
insb
fsubs
add
push
push
cmp
inc
mov
xchg
mov
cmpl
fistps
dec
mov
dec
repnz
shl
lret
shll
jae
sub
fisttpl
bnd
in
lods
popa
and
mov
imul
aas
push
xchg
mov
in
sar
addr16
aas
add
adc
ss
lret
pop
adc
fwait
test
and
jns
pushf
inc
fwait
sbb
lahf
data16
push
fdivl
and
xchg
pop
pop
sbb
repnz
xor
adc
mov
in
fidivrl
in
dec
add
loope
cmp
dec
pushl
fisubs
ljmp
mov
outsb
cwtl
pop
sbb
add
jne
inc
loopne
leave
add
mov
sub
scas
lds
xchg
cli
out
andb
mov
fimuls
fadds
or
shr
mov
mov
popf
in
jg
mov
scas
pop
rorl
pusha
fisubrl
jmp
bound
mov
cmpsl
sub
mov
jbe
lcall
sbb
or
cmp
inc
outsl
dec
leave
cmp
ss
or
cmc
ds
rorb
mov
push
fisttpl
dec
pop
mov
xchg
insb
js
and
xlat
sub
pop
push
mov
out
outsl
push
ja
push
in
sti
push
dec
lcall
outsl
repz
js
stos
popa
push
add
sub
pop
pop
cltd
fwait
cmpsl
popf
mov
ljmp
cmp
sub
xor
mov
push
js
push
ret
jle
fidivs
in
mov
pusha
cmp
jns
cmp
test
mov
jnp
test
mov
aad
in
inc
pop
inc
inc
push
je
push
dec
jg
sarb
add
shr
stc
dec
cli
inc
add
test
out
add
jo
std
xchg
fistpl
inc
pop
xchg
rcl
jae
ret
mov
mov
mov
dec
iret
mov
pusha
sahf
sub
ret
test
popa
das
xchg
pop
imul
test
cmp
jg
jno
outsb
dec
dec
mov
insl
push
sbb
outsb
test
pusha
repz
out
add
inc
mov
add
bound
push
out
call
push
sar
add
test
push
mov
xor
repnz
nop
lcall
imul
shll
inc
sbb
insl
inc
adc
push
jle
aaa
jbe
dec
sub
stc
inc
stos
das
jo
pop
pop
cli
arpl
cmp
push
addr16
aad
pop
ds
gs
in
pop
cltd
rorb
stos
pop
push
mov
loopne
rorl
outsl
scas
add
and
and
loopne
cwtl
push
cmp
in
fcoml
sub
sahf
addr16
add
xorl
popa
lahf
xchg
icebp
sub
xchg
orb
insb
push
sub
adc
mov
mov
add
push
jle
pop
jmp
stc
dec
xor
stc
mov
mov
inc
add
fsubr
xchg
cmpsb
mov
aam
bound
subb
mov
dec
add
int3
rolb
xor
pop
push
aas
xor
xor
push
add
scas
or
xchg
imull
mov
rcrb
push
test
pop
adc
cmp
mov
xchg
mov
pop
popa
xchg
lret
icebp
sbb
sub
push
stos
lods
icebp
rol
jge
in
test
jne
push
jge
filds
xchg
jl
scas
clc
movsl
out
or
movsl
fidivrs
lods
mov
dec
sbb
movsl
mov
stos
or
mov
sbb
mov
ja
inc
inc
mov
mov
scas
dec
sbb
mov
in
mov
fs
sub
dec
test
mov
test
fwait
push
mov
push
lret
add
in
pop
movl
out
sbb
inc
popa
and
rcll
rdtsc
pop
roll
orl
or
push
arpl
pop
hlt
sub
aam
dec
rcrb
sarl
insl
pusha
mov
push
loopne
sub
nop
icebp
mov
adc
les
adc
sbb
movsl
ljmp
mov
cmp
mov
sbb
dec
std
dec
rclb
cmpsb
mov
sub
pop
push
mov
cmpsl
ja
jo
aam
cmp
scas
or
lock
je
scas
test
hlt
repnz
ret
xor
dec
push
cwtl
leave
add
and
sub
test
lcall
mov
loopne
mov
adcl
dec
pop
dec
push
xchg
addl
lea
repnz
mov
add
dec
scas
ja,pn
jge
popf
sbb
inc
adc
push
daa
xchg
push
dec
cltd
cmp
repz
pushf
outsb
scas
xor
das
ret
sbb
imul
hlt
nop
inc
popa
aad
push
outsl
add
cli
xlat
cmp
and
in
addb
repnz
jno
push
cmp
mov
mov
xlat
xchg
nop
inc
mov
sub
imul
aam
ja
sti
lcall
shlb
out
dec
sub
cmp
sub
sub
jmp
pop
xchg
es
add
pop
push
daa
add
sbb
jb
and
mov
jecxz
xchg
nop
jne
mov
dec
lock
mov
pop
dec
cmp
pop
imul
out
cmp
push
mull
xchg
cmp
lds
vpsrad
jge
inc
fidivs
ja
out
sti
pop
jnp
lret
ror
pop
and
out
xchg
mov
and
push
ljmp
inc
add
or
jle
jmp
adc
mov
hlt
mov
and
cld
sub
sub
and
mov
popa
data16
lret
dec
xchg
push
loop
into
ljmp
mov
rorb
cmpsl
jno
nop
and
mov
or
pushf
xlat
inc
ja
mov
rol
mov
cmp
xchg
mov
xchg
cltd
mov
ffree
push
mov
clc
push
cmp
enter
xchg
jecxz
bound
add
push
jne
push
gs
daa
mov
xchg
addr16
add
mov
sbb
fsts
mov
std
mov
or
pop
std
and
add
ret
sub
scas
pop
mov
xlat
jae
in
adc
cwtl
test
aaa
xor
bound
xchg
xchg
sbb
jbe
adc
clc
or
shll
orb
sub
add
test
adc
leave
mov
xor
outsl
cli
push
cmp
test
add
xchg
inc
push
inc
cmpl
ds
add
jp
sub
jge
lods
lcall
xlat
jnp
outsb
jmp
and
and
hlt
adc
mov
movsb
roll
pop
inc
jecxz
adc
add
jl
pop
push
ret
ss
mov
xchg
rcrb
into
stos
stos
movsbl
sub
cmp
sub
xor
pop
lock
dec
lret
inc
mov
das
pop
pop
ret
fimull
test
repnz
lret
imul
mov
xor
push
dec
je
mov
pop
data16
push
mov
cmpsb
pop
int
or
fisubl
jl
rcll
out
push
mov
jnp
andl
mov
xchg
cmp
loopne
out
lock
daa
dec
data16
mov
jmp
xor
cmp
add
arpl
and
dec
mov
test
mov
adc
imul
mov
js
addr16
out
call
mov
aad
xchg
test
sahf
in
es
pop
mov
and
outsl
test
shll
xchg
mov
xor
sub
push
pop
sub
cld
sbb
scas
cmc
loopne
es
or
pushf
jne
mov
fmull
push
fistpl
pop
sub
sahf
fwait
sub
inc
ret
sbb
pop
add
insl
ret
inc
cld
mov
pop
or
xor
ret
adc
pusha
jecxz
jg
sub
cmp
mov
pop
hlt
sbb
orb
or
mov
shlb
xchg
mov
jne
into
xchg
mov
movsl
mov
or
negl
into
adc
icebp
push
in
pop
dec
sti
into
pop
adc
adc
and
imul
xor
cmp
out
cld
xor
daa
mov
cld
test
jle
rcr
add
fwait
mov
iret
add
jo
mov
stos
push
inc
jae
mov
mov
xchg
imul
add
shlb
and
mov
call
xor
or
lret
push
push
in
pop
xor
movsl
xchg
call
mov
or
cmp
sbb
jg
dec
adc
pop
idivb
stos
ss
jns
je
dec
xor
jnp
and
stos
out
into
daa
hlt
jo
mov
adc
rol
mov
mov
pop
mov
jmp
mov
jge
xchg
jg
fistpl
fwait
ljmp
or
iret
and
push
pop
and
mov
fcoml
dec
int3
lock
adc
add
fidivs
dec
fwait
rorb
or
adc
inc
fistl
cld
sub
mull
cs
test
ret
jbe
dec
pop
daa
js
ror
dec
int
cli
dec
xor
jge
xor
std
out
iret
push
add
add
rcrl
push
mov
les
or
xchg
and
push
mov
cmp
jl
xchg
sahf
fldenv
out
add
inc
in
inc
scas
jb
mov
lock
add
inc
leave
stc
cmp
inc
xchg
xor
out
imul
push
xchg
jg
mov
pop
cmp
out
dec
or
daa
sbb
pushf
xchg
ret
pop
cld
arpl
cmc
bound
pop
xchg
incw
nop
outsb
and
cmp
pusha
xchg
test
sbb
pop
jl
push
add
adc
pop
jae
mov
cli
ljmp
mov
stos
movsb
mov
mov
aaa
in
add
jecxz
dec
js
jno
cli
in
mov
jge
psadbw
loope
lret
xor
lods
lret
sub
mov
jo
rdpmc
imul
std
sub
jmp
loop
jg
adc
repz
mov
and
cwtl
xchg
sbb
push
aaa
inc
cwtl
int
incb
outsl
outsb
adc
sub
and
in
inc
dec
mov
rcll
push
sbbb
test
or
or
xor
sub
fidivrs
andl
sub
and
add
int3
xor
imul
rcr
stos
mov
jns
sbb
mov
jg
pushf
into
cmp
inc
inc
leave
aam
xchg
inc
mov
popa
fcoml
lods
pop
out
mov
movsl
mov
icebp
ja
jns
clc
pop
data16
loop
movsl
test
aaa
mov
les
mov
and
jg
xchg
push
aaa
xor
pop
mov
les
in
imul
je
outsl
in
xchg
cwtl
mov
and
xchg
cli
outsb
es
in
movsb
int3
mov
sar
pop
test
xlat
jecxz
bound
mov
test
lahf
add
andb
add
out
negb
sub
sub
jno
das
adc
enter
xor
arpl
xor
pop
and
ds
data16
and
push
mov
cs
pop
mov
lcall
inc
jmp
push
fdivrs
cmpsl
fildll
rol
sbb
rclb
cmp
cs
fisttpl
mov
sarb
pop
div
mov
lods
je
push
xchg
and
pop
lods
push
xchg
push
dec
adc
in
pushl
xchg
fwait
inc
push
dec
cmpsb
imul
adc
pop
jmp
sub
jno
mov
pop
loop
sub
mov
jo
adc
mov
lods
out
mov
aas
sti
bound
aad
push
sub
inc
push
add
dec
les
aaa
iret
mov
xchg
cwtl
testl
mov
stc
filds
lods
mov
xchg
pop
call
sbb
mov
aam
cltd
lret
push
xor
dec
rorb
cmpsb
ret
mov
nop
adc
xor
pop
mov
xor
imul
scas
xor
and
movsl
rcrb
add
pop
or
jnp
cmp
mov
cmpb
clc
sar
pop
mov
lods
add
ret
ret
push
xchg
mov
rcrb
scas
daa
jmp
loopne
lock
in
mov
inc
ret
std
and
rol
test
nop
inc
mov
popf
in
pop
clc
stc
mov
xchg
cli
jns
hlt
cmp
xchg
inc
fldcw
int3
shlb
or
and
inc
call
cmpsl
inc
stos
mov
ja
mov
lods
push
mov
sahf
push
jbe
repz
test
sahf
insb
movsl
mov
push
jmp
push
mov
subl
sbb
push
fwait
in
comiss
mov
test
sbb
cmovns
insl
or
push
cs
adc
cli
push
pop
xor
xor
mov
int
mov
in
cltd
jecxz
sub
les
sti
push
stos
xor
pushf
adc
push
adc
popa
sbb
sbb
adc
test
mov
push
lahf
out
inc
xchg
mov
xor
and
std
scas
add
flds
lods
pop
xchg
jecxz
push
mov
lds
lret
jnp
iret
in
xchg
cmp
jge
xor
movsl
mov
mov
pop
fildll
jb
fbld
add
lds
pushf
cs
push
loope
cmp
dec
inc
sar
or
pop
outsb
inc
jmp
ret
and
push
and
lcall
out
jmp
lahf
xchg
cvtps2pi
out
dec
dec
rcll
xorb
mov
and
inc
adc
adc
cmp
lds
add
pop
push
shl
jo
cmp
mov
xor
mov
inc
je
adc
jmp
adcb
xchg
adc
and
push
pop
jp
mov
cmp
push
addr16
jb
cmp
mov
movsl
and
sub
pop
push
jo
imull
ja
sbb
sbb
aaa
cmp
outsl
pop
cld
cmp
dec
add
push
mov
fisttps
inc
cmpsl
shl
push
add
loope
hlt
hlt
mov
mov
inc
cwtl
pusha
cmp
bound
int3
in
inc
xchg
mov
xor
jbe
subb
sub
cmp
xor
or
inc
sbb
ret
mov
mov
jnp
stc
cmpsb
sub
pusha
pop
outsl
pop
scas
loopne
jg
push
in
xchg
push
mov
std
pop
sahf
xchg
jle
loopne
push
push
movsb
mov
pop
sub
subb
push
sbb
cmp
xor
sbb
mov
add
dec
in
ds
mov
nop
testl
push
push
test
sbb
xchg
inc
addr16
aam
ret
repz
cmp
jno
xchg
out
data16
imul
xchg
jbe
mov
mov
loope
pusha
cmc
jp
and
xchg
push
sbb
jmp
loop
mov
xor
leave
shl
sub
fnstcw
mov
cli
inc
test
jl
ja
out
mov
adcl
fisttpl
subl
shlb
icebp
adcl
rorb
xor
sbb
mov
fisttpll
adc
mov
dec
repz
cs
sub
pop
mov
sbb
inc
inc
xchg
inc
or
adc
insb
sub
sbb
xchg
jbe
sbb
mov
push
ja
rcrl
mov
mov
cld
mov
mov
sbb
add
mov
lcall
fadds
push
ret
loopne
and
jnp
add
jae
outsb
pop
xlat
aam
loopne
add
mov
inc
movsl
mov
cmp
inc
mov
pop
push
in
jmp
lds
fwait
mov
jb
push
push
repnz
add
sub
test
aas
push
sbb
mov
pop
cmp
div
jge
or
and
pusha
loop
je
push
or
push
push
sti
dec
int
cltd
push
push
sbb
ror
test
fadds
call
scas
mov
add
inc
push
stos
scas
cs
dec
sbb
int3
inc
push
mov
and
lret
movsb
xor
in
mov
dec
das
xor
cmp
pop
cwtl
call
cmp
in
shll
add
inc
pop
pop
pop
out
call
mov
pushf
and
pop
pop
xor
jle
cmp
add
enter
and
mov
xor
lret
bound
or
xor
imul
lods
cmpsb
fstpt
std
inc
cmpsl
into
insl
jnp
pusha
pop
movb
out
and
insb
mov
add
loop
out
movsl
mov
xor
xchg
jmp
jp
out
mov
test
and
mov
adc
test
mov
lret
and
sarb
or
outsl
imul
mov
iret
cmp
jnp
jne
jns
data16
push
fistps
lahf
push
int
sahf
push
push
lahf
mov
push
call
cmp
mov
shrb
scas
fdivs
mov
filds
loopne
sahf
scas
cmp
mov
pop
cmp
mov
incl
mov
mov
data16
imul
jg
push
xchg
xchg
jnp
add
push
dec
mov
pop
jns,pn
push
rorb
or
sub
mov
and
lahf
push
xchg
fdivl
and
call
sub
insb
das
call
jle
adc
mov
sub
movsl
cmp
aam
std
gs
mov
adc
int
inc
fwait
insb
fcoms
outsb
or
add
out
jae
sbb
dec
sbbb
or
sahf
outsl
gs
loope
cmp
cmp
xor
jno
insl
imul
inc
std
std
aas
test
in
inc
add
jae
out
pop
scas
out
pop
xchg
and
loope
insb
mov
pop
inc
ss
clc
jno
clc
adc
lret
idiv
test
jl
or
sub
push
jbe
or
mov
xchg
inc
and
shrb
inc
fwait
arpl
sub
clc
xor
movsb
and
jp
xor
xlat
fidivrl
add
xor
xchg
aam
leave
lds
push
jb
sub
outsb
add
mov
push
or
stos
dec
cltd
nop
pop
mov
mov
inc
sbb
test
push
loop
xchg
xor
pop
dec
cltd
repz
push
inc
dec
adc
faddl
fdivrp
lods
xchg
js
sbb
addr16
std
subl
int3
pusha
ds
ss
mov
in
push
fstl
dec
xchg
bound
jp
and
gs
outsb
out
push
xchg
lods
inc
sub
int
in
pop
lods
mov
push
add
push
fisttps
ja
stos
inc
popf
lds
test
subb
mov
xchg
ljmp
add
pop
test
mov
in
sbb
popa
jp
sbb
and
jp
mov
cltd
enter
adc
test
fmul
in
mov
leave
daa
sub
cmpsb
mov
mov
lcall
xchg
sbb
add
sbb
sub
pop
fistl
dec
bound
xor
adc
sbbb
xor
gs
bound
mov
dec
mov
mov
les
jns
aaa
daa
jnp
test
pop
dec
jge
mov
faddp
sbb
push
or
bound
int3
test
jb
movsl
add
inc
dec
pop
sub
gs
stc
cmpsl
sub
pop
mov
cmp
imul
inc
and
mov
out
aaa
push
lea
dec
cwtl
cmpsl
mov
rcrl
mov
ret
xor
das
inc
cvtps2pi
dec
pop
mov
imul
push
mov
rcll
sub
sub
orb
enter
inc
imul
test
xchg
outsb
mov
cmp
lret
sbb
scas
cwtl
aas
xchg
xchg
cmp
or
scas
pop
mov
jne
pop
push
imul
adc
jo
jmp
rorb
xchg
gs
ret
out
rolb
lcall
movsl
iret
repz
pop
repz
ret
xor
pop
fs
jg
xlat
out
dec
sbb
aas
scas
xchg
inc
fs
fnsave
and
outsb
ja
pop
adcl
call
xor
pop
push
xchg
daa
sub
mov
xchg
add
or
pop
fbld
lret
or
jae
mov
inc
dec
hlt
jle
push
xchg
xor
cltd
adc
loop
icebp
pop
loop
cmp
add
popf
sub
mov
jno
aad
sbb
ss
sub
imul
in
adc
inc
jbe
add
mov
push
xlat
inc
js
lret
loop
dec
or
in
test
test
les
push
mov
sahf
imul
sbb
filds
out
stos
or
scas
mov
jl,pn
cmp
xchg
mov
imul
mov
mov
sbb
push
mov
pop
imul
movsb
das
cltd
jl
lods
fadds
repnz
jg
or
mov
rclb
lcall
add
out
subl
cmpb
and
xchg
adc
stos
pop
add
add
xor
dec
sub
mov
pusha
icebp
inc
lds
rol
push
adc
aas
adc
shll
subb
fcmovnbe
mov
dec
jle
or
outsl
push
test
out
ret
fidivrl
pop
adc
aam
int
icebp
push
xor
xchg
mov
mov
in
push
call
sbbb
ret
pop
insl
xchg
mov
pusha
mov
shlb
lds
out
in
aam
test
add
ja
mov
xchg
adc
mov
xor
mov
push
in
add
ret
sub
clc
sbb
push
inc
hlt
and
lock
insl
mov
test
mul
cmp
mov
and
mov
xchg
rolb
test
pop
xchg
ret
in
out
pop
loop
mov
push
pop
and
adc
cmpsb
mov
cld
popf
mov
mov
loopne
popa
leave
aam
mov
jmp
loop
scas
adc
daa
clc
ss
adc
loopne
pop
mov
call
es
lods
fbstp
scas
in
mov
mov
sbb
cmp
mov
loop,pn
dec
push
mov
jo
add
in
int3
repnz
mov
push
sahf
orb
or
sub
adc
fcomip
push
jne
jg
pop
push
cwtl
movsl
outsb
mov
fsubrs
cld
push
stos
inc
xchg
popa
jl
jns
movsl
int
je
popa
cltd
es
inc
cmp
popf
and
lods
dec
ret
std
mov
push
xchg
loopne
idivb
je
sub
jnp
pop
cmp
gs
sbb
add
lret
adc
stos
push
cmp
test
push
idivb
and
xor
pusha
imul
hlt
test
mov
in
xchg
hlt
xchg
push
les
xchg
push
mov
add
cmpsb
fcoms
subl
pop
or
mov
push
movsl
adc
popf
xlat
dec
pushf
movsb
jns
cmpsl
lret
sub
push
cmp
and
int
sbb
mov
fcoml
insb
push
or
pushf
test
mov
movsl
xchg
out
std
inc
stos
push
insl
pop
sbb
push
xor
fisubrl
gs
outsl
in
lahf
mov
pop
popf
push
cld
nop
sub
js
mov
lods
pusha
pop
pop
movsb
mov
lcall
pop
test
dec
xor
orb
dec
cmp
jbe
loopne
dec
mov
inc
loop
cmp
cs
mov
stos
and
pop
mov
push
cmc
jo
inc
arpl
mov
in
and
jecxz
int
adc
or
inc
mov
push
and
mov
andl
test
cmp
pop
add
aas
xchg
arpl
out
xor
mov
jbe
push
xchg
cld
fildll
xchg
xor
iret
xor
xor
fwait
pusha
rcrl
jp
cmp
icebp
cmpsl
mulb
add
bound
in
test
inc
jg
popf
pop
jl
mov
push
jecxz
imul
fldl
std
push
mov
inc
pop
stc
lock
push
ds
xchg
mov
imul
xchg
xchg
jnp
je
push
inc
out
movl
push
cmpsl
mov
or
dec
sub
push
lods
stos
pop
pop
cltd
push
and
push
inc
push
cli
xchg
data16
jge
sbbb
gs
rclb
in
adc
cmp
mov
fs
or
cmp
rcrb
out
dec
cld
mov
lock
push
and
mov
cs
add
fpatan
cwtl
fsubrl
mov
repz
pop
cmpsb
mov
fcoms
xor
or
ljmp
out
add
mov
les
sbb
mov
mov
lcall
stc
lock
repnz
mov
jns
out
arpl
lret
pop
pop
shrl
add
xor
sbb
aas
sub
rorb
fdivl
aas
imull
cld
mov
push
ret
sbb
cli
sbb
sbb
je
jno
cmp
rclb
ror
sub
jo
jmp
cld
sub
cmpsl
mov
pop
outsb
cld
xchg
loop
jmp
out
aam
dec
jns
mov
dec
pop
arpl
mov
cmp
popa
jno
adc
lahf
xor
and
ds
adc
lret
add
pop
dec
jae
mov
jb
jge
push
les
sbb
jae
adc
cld
sbb
fsubrl
sub
repnz
adc
pushf
mov
in
cmp
outsl
add
pop
mov
aaa
cmpsb
imul
adc
xchg
jl
lds
out
out
mov
enter
sbb
sahf
xstore-rng
cmpsl
push
arpl
mov
outsb
insb
mov
cld
hlt
sub
sbb
mov
loopne
mov
cmpsl
xchg
push
jbe
jns
fnstenv
mov
lahf
inc
es
out
lret
ret
mov
std
and
dec
into
aam
mov
enter
les
imulb
fstpl
cwtl
iret
jp
lret
test
cmpsb
dec
jmp
and
ss
daa
push
scas
daa
push
xchg
sub
cmpsl
lock
push
add
sarb
xchg
into
fisttps
push
popa
push
test
mov
cmp
and
adc
inc
stc
xor
cltd
sbb
in
stos
or
inc
dec
fwait
sbb
in
icebp
int3
inc
js
pop
sub
repz
xchg
xchg
ds
mov
stc
xchg
and
dec
cwtl
mov
sub
sahf
out
mov
mov
test
pop
cli
movb
clc
pop
fstps
mov
pop
push
dec
test
inc
mov
cmp
std
rclb
mov
push
leave
inc
dec
fadds
loopne
pop
clc
push
inc
mov
add
cmp
xchg
xchg
inc
jb
loope
pop
sbb
pop
daa
int3
imul
bound
mov
mov
dec
lcall
cmc
xchg
push
faddl
xchg
jg
sbb
mov
out
adc
inc
dec
fwait
sbb
in
icebp
int3
ja
add
add
fs
loop
stc
xchg
and
dec
cwtl
mov
sub
sahf
out
dec
popa
bound
push
enter
test
pop
cli
movb
in
adc
rep
inc
pop
inc
test
lcall
pop
imul
xor
jne
jnp
sbb
or
hlt
subb
push
and
add
adc
mov
mov
jge
and
ret
mov
sbb
rorl
repz
xlat
rcrb
cli
ja
mov
stos
add
jb
dec
jle
cmpsl
mov
or
adc
add
cmp
mov
cli
jg
adc
imull
aam
mov
sbb
and
and
xchg
adc
mov
inc
stos
aad
push
xor
dec
testb
mov
addb
mov
cld
jae
shll
push
hlt
ret
mov
cld
dec
in
pusha
mov
sub
sti
rclb
xor
call
mov
icebp
call
jne
insl
imul
pushf
push
in
mov
sbb
mov
mov
mov
jo
dec
jns
mov
test
cmpsb
dec
push
loop
and
jo
mov
movsb
dec
fs
mov
add
push
pop
xchg
in
or
mov
js
push
cli
jo
mov
test
cld
ss
es
inc
lods
clc
aad
loopne
push
pop
test
movsl
cli
jns
mov
mov
mov
adc
jae
add
test
dec
js
mov
sbb
or
inc
lods
mov
mov
dec
pop
adc
mov
int3
loope
scas
jl
dec
push
lods
aaa
mov
xchg
sbb
jp
push
xchg
int3
inc
lods
and
ret
or
xchg
lret
jecxz
jmp
lds
mov
cmp
repz
pop
orb
jl
push
das
jecxz
fsubl
out
outsb
es
pop
jnp
fs
mov
and
popf
dec
lcall
outsl
mov
xchg
or
negl
mov
and
fisttpl
dec
pop
cmpsl
sbb
insl
std
mov
lock
loopne
fstps
bound
out
sbb
xchg
mov
push
or
xchg
add
pop
and
jl
push
mov
lret
shl
lock
lret
sub
mov
push
leave
mov
push
aad
push
dec
pop
pop
sub
out
xor
sbb
movsb
sti
movsl
mov
add
sub
lret
mov
mov
inc
xchg
test
mov
sub
sbb
mov
outsl
xchg
outsb
dec
testb
cmp
push
push
iret
inc
ljmp
adc
or
adc
mov
xor
mov
cmp
pushf
or
sbb
cmp
pop
cmc
lcall
adc
sub
ja
call
mov
or
cli
mov
inc
shlb
xorb
xor
and
cmpsb
stc
jbe
pop
subl
out
fldenv
sub
sub
mov
mov
lock
leave
pop
mov
sub
add
lcall
add
add
jns
ljmp
shrb
jae
and
sbb
mov
sarl
adc
in
test
mov
ss
aaa
mov
shll
xchg
decb
inc
xor
or
dec
push
test
jecxz
add
lods
lea
das
inc
pop
mov
icebp
cwtl
decb
jns
jae
mov
or
and
jg
xchg
jno
push
or
mov
mov
out
stos
pop
in
lcall
aas
mov
in
or
in
scas
cltd
scas
xchg
sarb
xchg
xorb
xchg
inc
roll
xor
mov
nop
lods
ss
inc
jmp
xor
mov
jle
adc
imull
test
xchg
or
in
addps
mov
sahf
int
cmpsb
sti
cmpsb
mov
xchg
fcmove
cltd
push
hlt
loop
je
push
sbb
test
sub
jnp
jo
movsl
jbe
aaa
cmc
inc
repnz
std
jns
pusha
xchg
int
inc
and
repz
std
lods
push
jp
leave
pop
mov
push
cltd
shl
xchg
sub
push
and
ss
pop
aad
subl
jns
mov
sub
push
in
ss
pop
clc
push
sarb
inc
enter
hlt
mov
fiadds
xor
dec
pop
lahf
outsb
cmp
dec
and
lcall
sarb
or
xchg
mov
stos
jns
stos
inc
cmp
mov
frstor
jg
cmp
lods
leave
jne
xor
jp
jo
pop
movsb
movsl
andb
fcom
cwtl
or
outsb
jmp
add
andl
add
dec
adc
cld
cmp
int
arpl
push
addb
insb
mov
enter
adc
fidivrs
mov
cmpsb
xchg
pop
sbb
fmull
pop
jmp
xchg
mov
cltd
mov
mov
mov
adc
mov
daa
sbb
std
dec
fimuls
adc
and
mov
or
rcr
adc
mov
hlt
into
pusha
out
cmp
sub
out
push
rolb
roll
xor
mov
and
aad
adc
xchg
pop
jns
xchg
fs
dec
sbb
int3
ljmp
jecxz
scas
mov
push
pusha
mov
outsb
adc
pop
sahf
adc
or
or
loop
out
pop
ficoml
cmc
mov
js,pn
addr16
cmp
adc
std
lcall
fcompl
sub
cld
mov
add
sub
les
pop
popf
dec
cltd
sub
mov
jb
or
cmp
dec
mov
lea
pop
or
push
mov
mov
lods
mov
xor
and
and
sub
lcall
mov
push
inc
mov
cmp
or
xchg
pop
ror
mov
xchg
jmp
mov
imull
cmc
stos
xchg
sbb
add
xor
push
dec
lods
rolb
stos
adc
call
xor
orb
movsb
in
mov
cli
jg
xor
loop
inc
jbe
lods
rol
aad
pop
pop
test
outsb
fwait
stos
push
and
in
cli
xchg
dec
xor
test
fstps
filds
insl
iret
jmp
mov
dec
scas
xchg
fists
int
sbb
js
cld
cmp
mov
mov
xabort
xchg
cmpsb
push
xchg
inc
add
js
or
jmp
xchg
imulb
sbb
inc
xor
cmp
repnz
ficomps
in
dec
leave
cmp
test
test
call
movsl
or
pop
jnp
dec
add
ljmp
jne
sbb
cmp
or
xchg
fwait
nop
cltd
iret
jb
dec
add
fsubl
fisttpll
in
mov
dec
inc
call
rcrl
enter
insb
xchg
sbb
mov
sbb
pushl
mov
stc
jmp
je
mov
les
jnp
test
add
std
btc
add
dec
clc
jb
aam
outsl
js
push
pop
xlat
cld
pop
push
cwtl
dec
int
stos
fdiv
sbb
sub
out
push
fimull
pusha
ja
jmp
add
xchg
mov
xor
cs
and
adc
inc
ret
xchg
scas
sub
fdiv
or
nop
add
dec
sub
test
repz
pop
xor
dec
test
scas
movsl
or
fwait
sbb
jge
sbb
imul
xchg
adcl
clc
push
push
jmp
ljmp
lods
sub
cmp
mov
scas
xchg
mov
push
outsb
les
mov
cwtl
lret
adc
inc
incb
in
add
test
loope
inc
mov
sbbb
and
mov
add
data16
lcall
rcrl
sahf
push
imul
sbb
inc
int
adc
mov
in
repz
pop
nop
and
and
fistpll
cmc
sti
stos
outsb
fcmovu
mov
push
mov
mov
xorl
jge
mov
repz
dec
loop
popf
adc
cmp
in
xor
and
sbb
dec
fisubrs
xchg
sbb
loop
stc
imul
loope
or
cmc
jb
inc
xor
xchg
nop
addr16
aam
jae
cs
mov
shl
cmpb
int3
ficoml
dec
lods
jl
dec
stos
pop
out
mov
add
sub
enter
fcmovb
add
mov
cmp
imul
not
shll
fadds
pop
dec
mov
mov
push
inc
dec
pop
add
ljmp
pop
lods
sbb
and
in
dec
das
sub
sbb
test
mov
aaa
mov
and
push
add
sub
xor
lods
jo
int3
fcoms
test
cmp
sub
ret
dec
loop
pop
push
sub
and
cs
ljmp
iret
cmc
mov
pop
xchg
push
loop
fistpl
scas
faddl
test
and
sarb
mov
cmp
add
adc
rorl
xlat
sub
cmp
cmpsl
mov
and
ficompl
push
xlat
lods
cmp
cmpsl
mov
nop
xor
or
repz
test
or
sbb
pop
cmp
push
pop
mov
out
sub
sbb
push
pop
scas
push
inc
and
lods
cmp
dec
pop
jnp
pop
mov
or
cmp
jns
dec
mov
pop
mov
and
fwait
jne
es
sbb
add
xchg
xchg
inc
call
fs
jo
xchg
aam
sub
fwait
jo
je
jle
fdivl
imul
add
or
cmp
loope
cmp
stos
pop
fistl
call
xchg
sbb
mov
push
std
aas
aam
cmp
outsl
dec
xorb
rcll
inc
cmp
xor
xlat
filds
mov
sub
or
insl
lret
outsb
mov
pop
inc
shll
cmpsb
mov
mov
mov
rol
sbb
or
cmpsl
out
cli
mov
bnd
cmp
jg
xlat
aaa
ficoms
idiv
xchg
xor
mov
mov
lods
push
jge
inc
imul
jmp
inc
adc
dec
test
adc
loop
mov
jmp
shlb
ret
fcoml
lret
xchg
sub
sub
dec
push
jg
out
jl
xchg
aam
in
sbb
mov
xchg
rclb
push
push
mov
inc
inc
out
dec
sub
inc
in
repz
xor
xlat
pop
out
loopne
lods
testb
inc
cmp
loope
leave
sbb
aam
or
and
shll
mov
gs
out
jmp
sub
sahf
xlat
dec
mov
test
cmp
jge
aad
lods
or
cli
cltd
push
dec
jmp
push
mov
pop
xor
hlt
lahf
jge
add
lea
repnz
ffree
adcl
int3
les
fsubrl
xor
or
cmpb
jb
xchg
mov
and
cmp
xchg
test
lret
xchg
fstp
pop
or
push
mov
out
jbe
mov
add
nop
xor
out
in
xchg
sub
ret
inc
inc
or
gs
jae
cwtl
and
aaa
add
xorl
fdivl
data16
adc
leave
outsb
mov
loope
add
and
nop
push
fldl
ror
aad
mov
in
adc
adc
mov
mov
scas
xchg
sub
fidivrl
sub
mov
cmpl
adc
add
push
in
pushl
jne
std
xchg
dec
sahf
adc
xchg
movb
xchg
jno
outsl
xor
shrb
pop
or
inc
xor
rolb
imul
adc
divl
push
std
jb
stos
or
pop
cmp
pop
mov
dec
xor
sbb
sbb
arpl
cmp
stos
rcrb
push
cmpsb
and
mov
loop
fimuls
lsl
add
into
sbbl
into
xor
imull
lcall
add
cmp
dec
arpl
xchg
pop
xchg
or
insl
cmc
adc
ja
pusha
push
jg
loopne
das
data16
andb
inc
rolb
aaa
inc
fcomip
pushf
sub
mov
pop
xchg
nop
cmp
mov
popf
shlb
sarb
das
jbe
fwait
jecxz
inc
jmp
outsb
cld
xchg
cmp
mov
or
ret
shll
push
dec
push
xchg
imul
in
xchg
mov
movsb
adc
xor
mov
loopne
mov
push
push
mov
pop
aad
sub
lret
mov
arpl
pop
mov
mov
out
fwait
push
mov
xchg
daa
xchg
mov
pop
out
fcomp
sub
mov
mov
sbb
inc
adc
inc
push
outsl
fists
jno
shrb
lret
fdivrl
loopne
neg
pop
cli
xor
inc
push
pop
adc
adc
and
adc
jne
das
cmp
and
dec
adc
jecxz
mov
xchg
cld
dec
push
cmp
cmc
lahf
jge
add
mov
mov
add
enter
xchg
mov
test
lahf
fidivrs
lahf
es
pop
jp
mov
pop
int
daa
test
push
pop
test
repnz
push
and
test
sub
lret
push
mov
shrl
stos
xchg
push
xchg
jb
jge
aam
add
mov
mov
adc
mov
inc
in
add
je
xchg
sbb
es
outsb
cmp
addr16
inc
xchg
cmc
fisttpll
or
sub
pusha
fs
fbld
mov
fcmovne
sub
mov
inc
pushf
jne
call
es
stc
cwtl
lcall
iret
jl
cmp
lcall
adc
ss
cld
mov
xchg
or
sar
add
push
pop
push
jne
adc
pop
daa
inc
push
outsb
push
sbb
loope
nop
mov
dec
xor
pop
testl
fnsetpm(287
clc
orl
aaa
add
into
jne
push
das
inc
lcall
sbb
mov
cmp
mov
add
pop
jecxz
int
test
pop
fidivrs
mov
cltd
xchg
sub
out
test
stc
lahf
pop
adc
xlat
sbb
stos
xchg
cwtl
jg
push
out
arpl
insb
sub
dec
or
jo
out
or
mov
dec
adc
fs
and
addr16
and
cmp
test
mov
mov
push
sbb
ja
inc
fbstp
dec
push
outsl
roll
cli
and
shrb
jno
push
add
push
stc
pop
std
lret
xchg
xchg
and
push
cmp
xchg
stos
jne
cwtl
jno
fisttpl
sbb
repz
pop
jno
mov
leave
mov
adc
loopne
push
daa
add
fcomip
shl
dec
mov
ja
shl
and
inc
adc
or
lahf
sbbl
notl
gs
sbb
test
lahf
aam
push
or
mov
mov
xlat
pop
in
push
ret
cmp
cmp
out
pushf
mov
xchg
ss
pusha
movsl
inc
add
icebp
or
das
lods
add
push
pop
call
pop
pop
rcll
mov
test
enter
clc
pop
popa
repz
bound
xor
mov
and
mov
xchg
call
push
into
ss
dec
lcall
imulb
mov
leave
jbe
out
aad
lods
dec
and
icebp
pusha
mov
pop
xor
cmc
addr16
call
sbb
jbe
and
cmp
xchg
popf
xor
lods
push
arpl
jecxz
cmpsb
jecxz
call
aas
jbe
dec
lret
cs
fwait
jno
xchg
outsb
jno
fchs
int3
or
inc
cltd
mov
add
loopne
imul
sbb
fistpl
mov
inc
mov
fidivl
mov
into
lods
adc
jne
pop
xlat
adc
adc
mov
jnp
push
jb
repz
xchg
adc
mov
ret
adc
mov
and
pop
pop
sbb
imul
cltd
aas
aad
lods
bound
pop
push
xchg
jne
arpl
sti
pop
fwait
lea
xor
fwait
mov
test
stos
mov
lahf
jb
mov
ficompl
pop
and
daa
arpl
pushf
iret
jbe
cmp
mov
mov
push
mov
cld
mov
mov
lret
das
pop
rdpmc
test
lods
xchg
jmp
jmp
pop
scas
push
jecxz
in
lret
cli
adcb
sahf
xor
in
mov
in
lods
cs
lret
sbb
mov
mov
scas
xchg
pop
int3
xor
movsl
mov
nop
xchg
pop
mov
negb
out
mov
adc
mov
fdivl
and
mov
pop
out
inc
push
adc
arpl
jb
adcb
addl
fildl
jecxz
xchg
adc
mov
arpl
lcall
mov
les
push
mov
cmp
cs
mov
jno
xor
mov
aad
add
mov
icebp
jne
push
int3
or
sub
xor
xorl
dec
add
lea
repz
jnp
add
out
mov
out
mov
fs
mov
mov
sbb
js
std
dec
insl
fs
clc
xlat
add
in
shrb
leave
js
sbb
popf
sbb
sub
pushf
xor
in
mov
or
mov
sub
in
pop
mov
mov
jg
dec
lret
push
or
scas
inc
push
lods
ss
popf
jl
fldcw
adc
mov
push
xor
jmp
aad
mov
sarl
dec
sub
mov
movsl
fnstenv
and
es
mov
sub
cltd
jl
or
pop
lods
test
call
test
mov
loope
jae
push
mov
cmp
pusha
dec
adc
mov
rclb
sahf
lret
inc
int3
inc
repz
pop
mov
lcall
pop
pushf
add
out
int
mov
lock
xchg
jb
or
lahf
cli
rorb
jae
dec
mov
into
data16
ljmp
mov
scas
push
mov
ficoml
mov
xchg
inc
xchg
jmp
push
pop
and
das
repnz
lea
ret
mov
lret
pop
outsb
dec
ds
pop
loope
or
ss
jecxz
cmp
jae
cmp
into
test
jmp
jmp
jbe
jecxz
movsl
outsl
pusha
out
inc
ljmp
lods
inc
jns
fstl
xchg
ja
or
add
in
push
js
repnz
rolb
add
fcmovnb
addl
pop
mov
dec
gs
scas
pop
mov
idivb
movhps
or
xchg
fsqrt
adc
jle
les
rclb
inc
das
inc
pop
mov
inc
pop
ret
push
lods
adc
enter
out
repz
int3
stos
inc
cmpsl
scas
xor
push
push
call
inc
mov
movsb
imul
ljmp
add
daa
aad
incb
mov
or
mov
jl
pop
mov
push
add
lahf
mov
push
mov
jae
out
xchg
cld
bound
loop
loop
mov
int3
leave
push
jns
xchg
cmp
shlb
xchg
sub
fisubrl
insb
mov
ret
shl
cmp
cli
pop
dec
jecxz
and
add
loope
cmc
pop
fwait
dec
adcb
lods
std
cmpsb
test
inc
jecxz
popf
xchg
aam
sbb
push
test
mov
mov
mov
inc
dec
mov
and
scas
adc
addr16
mov
std
imul
dec
pop
dec
push
pop
pop
loope
inc
xchg
pop
xchg
je
cmp
fdivr
xchg
mov
ror
test
aad
out
fsubl
inc
mov
ja
stos
aas
mov
adc
xor
es
sti
in
mov
cs
pop
push
insl
jp
or
loope
shr
inc
subb
pop
mov
and
test
cmp
fs
pop
inc
outsb
clc
push
adc
stos
xchg
ljmp
xchg
gs
insb
push
lret
mov
xlat
jge
jl
push
rorl
cmp
jmp
add
mov
stc
montmul
cmpsb
add
lods
ret
mov
adc
stos
rolb
scas
popa
rcll
addr16
int
inc
repnz
adc
push
sub
in
mov
insb
stc
xor
shrb
repnz
int3
addl
pusha
xchg
jmp
in
outsl
mov
add
out
dec
ljmp
daa
test
loopne
aas
jge
enter
aaa
and
arpl
repz
and
adc
popf
cmp
mov
and
test
jo
mov
mov
xor
mov
lcall
movsb
xchg
fcoms
out
pusha
jns
call
shll
aaa
and
fwait
lods
loopne
insb
incb
outsb
sbb
fwait
push
xor
das
mov
push
inc
adc
cmc
pop
mov
push
pop
add
lods
inc
lcall
imul
movsl
addr16
int3
shr
fwait
clc
push
jl
mov
xchg
mov
fcoml
faddl
lock
dec
sub
sub
cmp
pop
sbbl
scas
jmp
pushf
rcr
xor
mov
add
ret
pop
mov
pop
ss
mov
loop
sahf
nop
inc
in
sub
stc
push
clc
cmpsb
xor
mov
cmp
pop
repz
shl
imul
mov
cmp
ds
je
in
adc
dec
mov
xor
xchg
jo
mov
cmp
add
stos
add
sbb
sbb
xchg
rcll
into
cli
repz
inc
push
add
pop
jae
sub
iret
cwtl
mov
xlat
or
sbb
rol
ret
mov
or
insb
into
mov
aas
inc
inc
lds
mov
xor
rclb
scas
sar
mov
lcall
sti
test
mov
test
adc
jno
xchg
ljmp
cmp
adc
jmp
sbb
test
jae
insl
or
in
idivl
add
ds
xor
sub
and
push
xchg
sub
pop
outsb
scas
mov
das
add
push
jl
jl
pinsrw
into
push
fsubrp
jns
and
inc
call
mov
push
lods
push
notb
cmp
pop
pushf
imul
pop
mov
xor
fdivrs
subb
sbb
xchg
sti
mov
jnp
and
push
or
addr16
je
out
outsl
pop
jl
xchg
pusha
or
xchg
add
cmpsl
mov
pop
das
outsb
inc
ffreep
lcall
mov
insb
idiv
sub
mov
sbb
cmp
ret
pop
pop
repz
or
pop
pop
pushf
test
jmp
jnp
scas
insl
loop
cmpsl
movsb
sbb
ficoms
push
fcomp
jne
cmpsl
fwait
mov
ss
test
popa
mov
adc
adc
out
push
daa
jnp
pop
ds
call
sbb
adc
aas
mov
int3
in
mov
dec
add
pop
shrl
mov
mov
ror
aaa
xchg
xchg
dec
fcoms
xor
xchg
xchg
iret
pop
push
cs
mov
mov
cmp
and
in
outsl
stos
out
dec
sbb
pop
jo
xlat
int3
ljmp
cli
dec
filds
cmp
xchg
mov
push
stos
ficoms
pop
fsts
fadds
mov
out
test
xchg
sbb
xchg
jno
popf
mov
pop
aad
fmull
mov
cmp
pop
cmp
pop
cli
push
jb
cmp
dec
fisubrl
adc
stos
pop
stc
jle
lret
xchg
inc
sub
filds
jg
xor
in
mov
rcrl
push
stc
inc
xor
lcall
cmpsl
out
mov
movsl
mov
sti
sbb
out
jb,pt
and
rcrl
jnp
cmp
shrl
stos
clc
repnz
push
mov
outsl
pop
sub
jecxz
movsb
mov
xor
sub
mov
adc
push
iret
popa
jecxz
ret
mov
mov
sbb
mov
lret
and
lcall
leave
or
sub
les
notb
xchg
iret
push
cmp
xchg
dec
fsubrl
sub
fwait
dec
outsl
sbb
fmul
dec
loopne
out
pop
cmp
int
insl
ljmp
cwtl
frstor
orb
hlt
mov
xor
in
mov
xlat
sub
jbe
xor
sub
push
xchg
xchg
ret
loope
sub
push
inc
sbb
xchg
pushf
mov
movsl
fmull
mov
pop
xchg
push
int3
sub
mov
cld
sti
mov
mov
fsubl
dec
js
sbb
adc
ja
dec
jbe
cmp
or
pop
in
pop
rolb
popa
loop
push
and
add
icebp
lcall
cli
les
pop
loop
push
inc
lods
mov
xchg
mov
nop
rcrl
xchg
add
rorl
add
out
mov
cmpsl
insb
in
xor
jge
iret
ss
add
mov
popa
imul
sub
dec
sub
inc
adc
stos
loop
jae
aam
lret
cmp
jns
pop
incb
jmp
mov
bound
out
xchg
popf
inc
pop
and
std
jns
lea
xchg
ss
cltd
jo
test
sbb
mov
enter
outsl
pop
pop
dec
xor
leave
cmp
jno
cmp
pushf
jne
mov
jmp
xchg
scas
add
iret
inc
mov
add
push
jecxz
insl
sub
xchg
bound
sti
cld
lret
mov
jecxz
popa
out
cmc
fnstsw
xor
aam
pop
or
subb
sbb
pop
and
scas
int3
xchg
mov
nop
data16
mov
test
sub
loop
das
cmp
call
pop
sbb
inc
and
sbb
xor
push
jns
shlb
aas
xor
imul
popf
adc
cli
inc
out
in
clc
jl
jnp
xchg
lods
in
dec
xchg
jge
xchg
xor
aam
filds
mov
pusha
das
mov
addb
mov
nop
lret
sub
rcrl
or
insl
fndisi(8087
jecxz
xchg
in
mov
jnp
fcoms
add
orb
sahf
mov
inc
sbb
cmc
mov
sbbb
out
les
cmp
mov
cmp
aas
out
mov
bound
jle
jl
adc
pop
xor
dec
mov
xchg
inc
xor
xor
mov
idivb
xchg
inc
add
iret
cmp
mov
mov
popa
js
cmp
xor
push
push
jbe
cmp
mov
sahf
xchg
mov
adc
fdiv
scas
pop
ss
pop
pop
in
cmc
cli
shl
cmp
add
lods
movsb
adc
add
rcrb
jp
ret
cmc
std
adc
fldcw
sub
dec
mov
pop
jno
xchg
das
pop
add
adc
mov
jmp
jmp
or
pop
out
push
popf
imul
pop
adc
cmpsl
add
sub
mov
pusha
int3
add
jmp
sub
dec
jp
gs
leave
mov
neg
mov
test
cmp
nop
mov
test
jae
outsb
pop
xor
mov
cmp
insb
fcmovbe
lret
test
pushf
cli
fcompl
sub
mov
imul
sarb
call
mov
cltd
and
push
daa
push
xor
arpl
call
dec
xchg
std
aaa
sbb
cmpsl
ljmp
hlt
add
shll
jns
pop
jae
cmc
adc
jbe
test
in
cmp
inc
rcrb
push
xor
add
mov
ljmp
fsubrl
xor
or
sbbb
xor
or
mov
out
imul
leave
mov
arpl
mov
lret
sbb
lret
mov
imul
lea
push
sub
rcrl
clc
mov
sti
icebp
jp
pop
jns
and
xor
iret
and
push
aas
mul
xor
cli
cmp
out
stos
push
dec
add
insl
out
mov
cmp
cmpsb
sti
test
shll
je
fisubrs
sub
xchg
sub
fcoml
push
daa
inc
repnz
dec
mov
adc
lcall
divb
adc
sbb
jmp
jns
cwtl
jnp
in
stos
inc
enter
mov
or
jle
push
inc
push
cmp
push
cli
add
jmp
nop
iret
mov
cmpsl
arpl
and
pop
pop
dec
mov
aam
mov
lods
rcrl
and
outsl
test
adc
push
push
mov
xor
sbb
rol
rcrb
inc
pop
xlat
xchg
fistl
push
flds
stos
sub
call
push
shll
mov
popa
ja
je
pop
cvtps2pi
je
rdmsr
mov
cwtl
addl
and
cwtl
jno
jbe
inc
jl
and
jnp
clc
xor
add
es
and
mov
mov
xor
mov
pop
cmpsb
push
stos
jge
in
mov
js
adc
mov
stc
inc
stos
dec
push
or
xor
out
aam
push
and
pop
pop
xchg
inc
scas
mov
hlt
cltd
subb
daa
movb
lcall
out
jg
int
cmc
flds
adcb
push
push
xchg
pop
and
mov
jle
xchg
sub
std
mov
mov
adc
fldl
push
int3
xchg
jecxz
inc
sahf
jmp
test
push
inc
push
pop
mov
imul
push
and
jp,pn
ret
loopne
incl
fiadds
out
gs
jns
test
jl
out
lret
jg
fisubrl
aas
ss
push
or
sub
add
inc
xchg
pop
xchg
loopne
adc
out
popf
scas
into
insl
ljmp
in
pop
sahf
outsl
xorb
sar
mov
sub
popf
jecxz
mov
stc
shll
inc
push
mov
sub
mov
xor
das
ret
mov
and
push
mov
inc
lahf
imul
jg
insl
divl
pusha
sti
lds
cmp
jne
pop
shl
inc
js
pushf
mov
dec
mov
mov
mov
out
imul
xor
into
jae
lods
lret
mov
adc
or
cmpsb
and
movsb
mov
not
mov
mov
push
fcompl
jo
ja
dec
popa
pop
sbbb
mov
inc
jne
ljmp
lods
push
dec
iret
sub
jno
push
mov
push
sub
push
ja
and
loope
lods
sbb
in
jmp
push
repz
aaa
jmp
dec
ljmp
popf
pop
nop
test
cmc
dec
sub
fwait
sbb
call
xchg
xchg
jb
pop
pop
hlt
test
aas
xlat
ss
lret
inc
loop
push
jmp
cmpsl
push
cmp
lods
push
xchg
fldcw
sbb
out
push
sbb
nop
cmc
fistpl
xlat
clc
mov
jg
mov
fwait
stos
xchg
cltd
sub
jae
movb
sub
clc
aaa
mov
jno
loope
negb
sub
xchg
mov
pop
pop
fists
lret
pushl
cli
stos
and
notl
in
ret
sub
lock
shlb
mov
aaa
ds
xlat
pop
mov
into
pop
sbb
xchg
xchg
sub
push
cmp
dec
pop
test
cmpb
mov
add
stos
sbb
mov
ljmp
jae
mov
movsl
dec
enter
and
das
sbb
sbb
rcrb
je
dec
notb
pusha
mov
mov
jp
hlt
cmp
mov
mov
ds
and
pop
or
cmc
jo
inc
xchg
mov
sub
out
jl
test
jae
rcll
test
or
pop
fsub
or
mov
adc
push
dec
mov
jnp
mov
fisttps
int3
push
mov
inc
sti
out
jg
push
xor
out
shl
mov
mov
add
push
fisttpl
aad
push
mov
push
clc
mov
ret
xor
push
pop
jno
hlt
adc
movsb
xchg
and
mov
test
hlt
or
adc
in
or
into
sbb
xor
adc
mov
jne
or
push
lret
adc
add
jle
icebp
ficoms
cmp
or
xlat
pop
dec
push
mov
push
int3
mov
js
xor
movsb
popa
push
sub
xorb
mov
cs
mov
adc
jno
xchg
mov
cmp
or
dec
pop
jno
outsl
pop
xchg
jmp
mov
fwait
imul
inc
movsl
fistpl
dec
pop
or
filds
gs
dec
test
dec
jae
shll
rol
and
testl
pop
xor
and
insl
push
pop
mov
repnz
push
je
test
in
sub
daa
dec
jno,pn
pop
outsl
aad
dec
dec
mov
xor
and
push
sub
mov
and
sbb
repnz
mov
mov
jmp
movl
inc
jl
xchg
or
jmp
stos
mov
je
add
lret
in
dec
scas
fdivrl
and
repnz
ja
sahf
push
pop
xchg
fxch
pushf
and
pop
sub
pop
je
js
mov
das
adc
in
testl
mov
lret
push
lods
aad
out
sbb
cs
fwait
jnp
cmp
adc
push
xor
jge
dec
cmpsl
dec
push
scas
data16
or
xchg
jl
cmp
aaa
scas
inc
inc
jo
aaa
in
cmp
push
dec
clc
mov
dec
jno
cmp
jg
dec
mov
enter
loope
enter
xor
aad
push
sub
add
cmpsb
push
add
ficoms
or
dec
mov
je
pop
lea
or
in
mov
xchg
push
rolb
filds
xchg
insb
aam
sbb
sub
mov
jp
and
mov
es
xor
and
insb
mov
add
loop
aad
xchg
popf
addr16
aad
popl
dec
into
mov
push
lods
sub
and
popf
insl
cmpsb
movsl
inc
in
mov
dec
mov
jecxz
gs
ror
addl
sti
pop
mov
mov
shrb
pop
pop
push
pop
je
xchg
or
cli
jle
sbb
xchg
jmp
in
xchg
scas
daa
jmp
inc
mov
cmp
ficoms
cwtl
adc
lods
jp
testb
dec
jecxz
mov
fisubrs
xor
adcb
cmp
pop
cmp
jbe
sub
es
shl
orb
int3
jbe
icebp
sahf
jmp
xor
call
add
sub
pop
sbb
in
lahf
fwait
jb
xchg
xchg
mov
loopne
fbld
lods
ret
in
idiv
add
les
test
fnsave
jp
hlt
inc
mov
or
jae
mov
sub
pop
call
fs
add
lods
fdiv
mov
not
or
aam
add
xchg
test
sub
ljmp
in
movb
cmp
jae
into
mov
arpl
stc
add
inc
cli
mov
data16
shr
add
and
pop
jge
xchg
mov
stos
popf
lahf
push
xchg
or
fisttps
add
push
adc
sub
and
mov
inc
add
or
das
mov
sbb
xor
mov
mov
mov
cld
pushf
mov
pusha
xor
xor
inc
insl
pop
push
mov
negl
je
outsb
xchg
cmp
pop
push
cmp
sbb
dec
lahf
cmc
out
fwait
sbb
add
out
fimuls
mov
jno
movsl
cmove
xor
iret
ds
xor
dec
push
test
stc
sub
pusha
stos
inc
rclb
mov
mov
jle
insl
arpl
jle
movsb
das
push
cld
ja
xor
dec
xlat
loopne
out
jecxz
sar
push
sbb
ret
jecxz
outsb
xor
sbb
int
push
test
pushf
cs
sub
mov
popa
data16
mov
mov
andb
andb
push
loopne
call
shrl
dec
ret
stc
xchg
out
cmpsb
mov
add
mov
shlb
stos
pop
xchg
ljmp
and
das
pop
dec
in
push
adc
mov
cmpsl
dec
pushf
pop
sbb
lods
test
incl
push
add
jno
dec
dec
xor
mov
lret
std
or
dec
xchg
jmp
adc
sub
mov
push
cmp
leave
testl
sbb
sbb
ss
lret
aaa
push
xor
add
mov
fs
lret
xor
xor
mov
fstps
push
add
push
xor
idivl
aad
pop
orb
pop
cltd
xor
pop
js
and
jne
mov
cmp
xor
cld
pushf
pop
inc
add
sbb
dec
shll
and
sbb
or
cmc
loope
pop
popa
js
inc
push
pushf
fdivr
mov
push
cmpb
sub
cmp
dec
sub
push
cli
mov
movsl
call
repz
dec
xor
push
jge
out
push
adc
movsb
xor
loop
pop
and
inc
cmp
insb
dec
mov
int
fstpt
into
push
shr
out
dec
ds
mov
in
xchg
add
or
dec
or
imul
push
push
movsl
aas
lret
imul
cld
repz
rcrb
mov
adc
mov
into
jle
dec
adc
push
lea
andl
fisubl
pop
jnp
sbb
add
popf
sub
and
pusha
dec
or
sarb
loopne
cmp
inc
cmp
in
ret
jae
rcl
mov
les
pop
sbb
jnp
push
jmp
mov
xor
pop
dec
mov
mov
fldt
clc
xor
push
mov
push
lods
and
shll
mov
andl
dec
jmp
dec
pop
sub
sub
jl
mov
mov
mov
cmp
add
mov
shll
sbb
in
and
cmp
lods
dec
mov
icebp
in
pusha
xchg
push
int3
sahf
cltd
outsl
andl
cmc
mov
stos
sbb
push
sbb
fwait
iretw
cmp
movsl
mov
inc
ds
imul
and
shl
lcall
popf
push
mov
fnstcw
scas
je
jge
pop
clc
lret
adc
adc
sahf
sub
xchg
aas
push
lea
adc
and
inc
sub
jp
test
add
inc
or
push
pop
mov
rcll
dec
int3
push
xchg
sub
dec
rclb
jg
xor
push
xchg
ljmp
xlat
cli
add
in
add
dec
mov
icebp
jp
inc
ljmp
dec
test
add
sub
push
jp
pop
xor
mov
xchg
pushf
sbb
and
mov
movsl
ljmp
sub
mov
fildll
pop
xchg
gs
sarb
cli
shrl
inc
lcall
addr16
cmpsl
aaa
cmp
sub
inc
out
and
dec
insl
add
mov
dec
test
mov
xor
adc
add
add
jmp
dec
clc
fldln2
xchg
and
mov
test
push
outsl
es
mov
test
std
inc
ffreep
adc
insb
pop
fs
lock
push
dec
sub
and
adc
loopne
inc
gs
xchg
inc
pop
xor
jmp
iret
cmp
lret
push
subb
pop
inc
les
mov
enter
rol
xor
cmpl
add
insb
xor
push
pusha
xchg
js
in
addr16
adc
je
xor
cli
jb
lods
dec
into
aas
sub
test
sarl
xchg
icebp
mov
call
in
imul
bound
or
or
imul
out
push
shlb
popa
sub
ds
ljmp
and
je
adc
shl
cld
cld
bound
jns
aas
mov
outsl
pop
pop
lahf
push
sahf
or
sub
pusha
mov
movb
stos
pop
test
and
cmpsl
and
mov
fsubp
lods
and
fwait
mov
sbb
popa
mov
lds
ret
xchg
mov
fdivrl
jle
add
sbb
aam
mov
sbb
out
cwtl
movsb
pop
gs
lcall
and
lahf
jl
out
push
xor
mov
cs
mov
mov
nop
dec
push
jno
hlt
je
lret
sub
pop
xor
cs
andb
aad
cmp
stos
out
xchg
mov
adc
faddl
das
push
dec
insl
dec
jp
pushl
mov
pop
or
sub
mov
movsl
mov
cwtl
rclb
pop
int
push
popa
aad
mov
sbb
and
push
insl
scas
test
pabsb
mulb
xlat
addr16
bound
xchg
enter
sub
jno
inc
out
or
gs
adc
mov
xor
lret
push
dec
mov
ficoms
mov
sbb
mov
sbb
bnd
repnz
pop
xchg
call
xor
fcoml
mov
ja
pavgw
cmp
push
push
cmp
ljmp
cmp
ss
stos
jo
inc
mov
pop
mov
dec
push
lock
mov
imul
mov
sti
inc
addl
out
sub
dec
mov
ret
sub
sbb
or
test
call
lock
int3
pop
xchg
lock
mov
cli
mov
lods
jge
pop
outsl
lods
jb
mov
les
sbb
adc
cmc
pop
mov
push
out
loopne
adc
clc
popa
jge
int
jmp
mulb
jmp
rclb
jp
pop
lods
pop
mov
xor
popf
cltd
leave
ret
inc
push
sahf
mov
push
repz
xor
insl
cmp
inc
adc
pop
add
out
lea
mov
jle
out
or
cli
sti
push
imul
loopne
mov
cmp
movsb
push
push
sub
pop
popf
push
add
mov
sbb
cwtl
inc
test
dec
stos
add
sbb
and
outsl
mov
jle
test
sarb
lcall
dec
scas
add
lret
shrl
cmp
out
xchg
std
inc
lret
leave
pop
loopne
cmc
lock
lret
call
push
daa
cs
mov
aaa
sarb
int
push
sbb
out
mov
push
jle
jl
fucomip
test
cltd
je
cmpsl
adc
rclb
cmpsl
jo
popf
and
add
jno
sub
cmp
jl
icebp
enter
adcb
mov
test
aam
push
sbb
cmp
jp
fldenv
mov
xchg
sbbb
lahf
out
mov
cmc
push
lret
ja
xor
add
lods
cmp
pop
js
push
aam
push
xchg
xchg
or
or
inc
sbb
cmc
mov
mov
rcl
and
pop
mov
dec
in
stos
xor
daa
and
adc
xor
pop
loopne
jo
addr16
add
in
cmp
ljmp
mov
xchg
sub
jp
lds
ret
mov
dec
and
pop
pop
repnz
adc
imul
andl
sub
sub
das
and
out
cs
test
daa
mov
jnp
gs
jno
cld
add
mov
lcall
pop
cli
into
xchg
dec
lds
adc
fcomip
stos
or
and
cmp
gs
mov
fisubl
push
or
int
out
push
aad
xorb
inc
pop
mov
xorl
mov
pushf
popa
cld
sub
cwtl
fwait
ds
xor
and
in
sbb
imul
scas
addr16
lcall
sbb
shl
scas
jmp
push
mov
mov
pop
fldcw
je
addr16
or
xor
sub
sbb
push
data16
xchg
push
fiadds
jp
ljmp
jne
testb
test
xlat
sarl
adc
test
jl
leave
jo
mov
xor
xchg
or
test
inc
inc
pop
and
dec
lock
and
rorl
repnz
bound
or
cmpsb
adc
rorl
xchg
cmp
pop
ds
les
in
out
mov
addl
fs
dec
sbb
cmp
data16
sbb
and
xorb
mov
lahf
pop
adc
pop
dec
leavew
bound
jae
add
xchg
pop
out
cmp
sub
mov
enter
mov
test
push
daa
aam
sbb
mov
inc
push
push
das
sahf
or
xor
add
sub
and
dec
xchg
sbb
dec
push
call
and
pop
repz
sahf
movsb
add
out
fwait
dec
adc
adc
aad
enter
ret
fldcw
outsb
fs
cmp
cmpsb
jmp
ror
and
and
mov
fnsave
sub
lock
std
xchg
adc
mov
and
test
ss
mov
jg
faddl
lahf
gs
cs
or
adc
gs
ret
test
incb
dec
test
sarl
dec
loop
repnz
pushf
push
outsb
dec
dec
mov
pop
iret
inc
pop
fdivs
iret
nop
sub
jp
es
pop
ljmp
lds
and
or
shll
adc
sbb
push
and
std
in
stos
mov
jmp
xor
mov
stos
inc
jle
xor
sbb
cmp
cmp
add
mov
mov
push
in
jno
daa
insl
mov
sbb
xor
andl
jmp
in
dec
inc
push
inc
lods
pusha
fadds
in
pop
aaa
lock
push
inc
les
jno
je
cltd
stos
mov
call
icebp
in
leave
sbb
fidivs
xlat
in
mov
mov
cmpsb
addr16
out
aas
inc
adc
lods
mull
xchg
into
mov
loop
hlt
dec
rcrl
scas
ljmp
cmpsb
sub
inc
mov
fldenv
cmp
hlt
pop
imul
mov
out
xlat
and
icebp
jnp
js
sub
out
jns
nop
pushl
scas
jae
adc
and
sbb
xchg
xor
and
loop
adc
jbe
mov
jne
inc
shll
icebp
xchg
ja
inc
mov
fcmovbe
into
dec
pop
insb
sbb
xor
sti
mov
inc
in
js
in
jl
push
sub
adc
fnsave
out
repz
aaa
mov
test
pop
adc
lock
jle
dec
push
mov
clc
push
popf
movsl
aam
popa
cmp
pop
lcall
cmpsb
inc
loopne
inc
das
dec
sbb
sub
sbbl
inc
push
jno
ret
cmp
ljmp
test
jnp
add
aaa
dec
mov
or
scas
out
sub
fistps
les
xchg
push
cmp
cmp
sbb
movsb
lcall
hlt
outsb
insl
in
adcl
fidivrl
stos
xchg
pusha
std
sbb
jecxz
or
xor
sbbl
cmp
xorl
jg
daa
frstor
pop
loope
push
and
add
cmpsb
cmp
fidivl
xchg
int
cli
push
sbb
lock
xor
in
pop
xor
push
dec
mov
ja
mov
inc
xchg
push
dec
dec
push
push
js
push
mov
mov
jge
cmp
ret
inc
enter
fldl
cmp
hlt
mov
les
xchg
inc
ret
mov
inc
add
fimuls
in
stos
mov
les
xor
ret
fnstcw
cwtl
dec
push
fcomip
int3
pop
movsl
mov
mov
sbb
mov
xchg
ds
jg
inc
pop
orl
dec
push
dec
push
int
push
dec
movsb
adc
mov
push
or
xchg
das
out
lods
popf
repnz
inc
fbstp
movsl
stos
add
and
or
paddd
mov
jo
mov
into
xor
adc
push
inc
dec
sub
cmp
rol
lock
dec
cltd
into
cli
test
mov
int
jge
into
imul
push
into
cmp
xchg
cmc
stos
andl
xor
add
push
popf
jne
imul
mov
mov
stos
test
ror
xlat
inc
lcall
add
fs
fsubrl
jg
dec
sub
outsb
add
cmp
ljmp
mov
push
xchg
mov
mov
in
pop
cmp
addr16
mov
std
stc
xor
xor
jno
testl
jp
jns
mov
aas
add
jb
imul
lahf
and
call
sbb
fimull
lds
mov
in
push
sub
iret
xor
test
pop
push
gs
add
enter
mov
pop
mov
jnp
std
rcll
sub
aas
mov
call
ss
add
in
fwait
dec
mov
fldt
out
adc
das
cltd
inc
and
sub
test
inc
or
mov
popa
sub
adc
loope
int
leave
daa
icebp
lods
loop
lods
jb
cltd
jo
mov
xor
inc
mov
add
jne
cmc
cs
enter
insl
sub
test
or
add
imul
pop
dec
std
mov
aaa
inc
or
xchg
sub
inc
pop
and
loopne
fimull
repnz
push
in
sbb
pop
test
mov
mov
stos
add
or
sub
popf
fs
jmp
pop
jno
mov
dec
jns
adcb
filds
rcrl
cld
mov
jnp
call
test
mov
fidivs
repnz
mov
cmc
popa
cmpsb
add
ss
cmp
fisttpl
jmp
mov
pop
jno
insb
push
add
fnclex
jbe
insl
cmpsb
mov
push
out
cs
xchg
movsl
sbb
xor
imul
test
cmp
adc
and
test
idivl
pusha
pop
jg
jp
sub
test
and
xchg
push
cmpsb
and
xchg
adc
jl
jl
in
sbb
pop
push
cs
shl
add
arpl
sbb
aas
imul
sbb
int
cmp
xlat
ficomps
icebp
incb
lea
scas
jg
add
cmc
fmuls
test
xchg
hlt
mov
push
jmp
int
test
jne
loopne
push
xor
fisubs
scas
pop
sbb
mov
iret
sub
popf
or
add
sbb
loop
mov
inc
mov
xor
jne
xchg
mov
adc
ret
jle
cld
cmp
outsl
pop
pop
mov
insb
aad
inc
lahf
push
ficomps
sahf
stos
in
add
add
cli
push
mov
lret
flds
mov
call
or
push
inc
jge
in
cmpsb
xchg
mov
inc
adc
add
mov
icebp
dec
aam
mov
clc
sub
mov
jne
mov
push
push
sub
cmp
or
cmp
insl
lret
shll
pop
insb
xchg
xchg
push
outsb
xor
cmpsb
mov
arpl
pop
xlat
ficompl
ja
lock
fsubrs
mov
jmp
mov
cmp
mov
test
stos
sub
imul
pop
xor
mov
cmpsb
cmp
insb
fdivs
pop
lret
mov
divb
lock
insl
fdivrl
inc
shll
inc
loope
out
mov
mov
cmc
in
mov
adc
mov
mov
les
xchg
jae
sub
fildll
mov
xor
mov
dec
push
mov
ficoms
sub
xor
rcll
es
push
jo
mov
mov
stos
insl
jle
add
lods
or
or
popf
cltd
test
mov
mov
inc
aaa
imul
jmp
add
aam
mov
sarb
xlat
fldcw
dec
jp
mov
and
cmpsb
pop
dec
negl
rcr
aad
mov
clc
cmpsb
pop
cs
push
add
repz
fsubs
cmp
xor
out
inc
add
outsl
imul
add
mov
mov
jge
lcall
in
mov
jb
pop
aaa
jae
dec
sub
xchg
fsub
enter
push
adc
sub
jl
icebp
or
mov
filds
dec
sbb
fcmovne
push
cmp
pushl
mov
fwait
mov
outsl
jle
das
test
hlt
push
inc
push
push
mov
test
mov
scas
dec
repz
xchg
jo
jle
fidivrs
dec
jmp
and
rclb
cbtw
cmpsl
xor
mov
outsl
jle
das
test
daa
clc
mov
or
or
hlt
test
popf
sbb
jl
xor
call
outsb
js
pop
lahf
xor
aad
dec
jae
lret
pop
das
mov
les
insl
insb
lret
imul
mov
rorb
fstl
cmovo
inc
cmp
lret
into
sbb
cmp
jae
cwtl
movsl
cltd
adc
fisttpll
mov
pop
adc
jne
adc
enter
sbb
sahf
mov
mov
pop
icebp
cmp
mov
mov
pop
movsl
es
jmp
lds
das
mov
cmp
popa
sbb
push
mov
sti
ret
xor
out
in
dec
mov
test
das
sbb
jne
into
nop
loope
aas
fbstp
mov
mov
cltd
aad
hlt
mov
jp
fidivrs
xchg
or
sbb
and
jecxz
add
fnstenv
fldt
aad
xor
iret
sub
sbb
test
push
pop
adc
push
icebp
sbb
in
shlb
sub
dec
xchg
xchg
add
icebp
lods
xchg
sti
push
sbb
and
and
cmc
or
rcrb
adc
fmull
dec
push
mov
in
std
loope
mov
bound
add
sub
adc
fwait
outsl
test
cltd
dec
push
mov
bound
sahf
aaa
sbb
mov
pusha
fists
testb
test
sub
pop
mov
je
sbb
add
jne
pop
add
ffree
test
xor
and
sub
xor
or
sub
or
and
or
shl
xchg
adc
sbb
lret
sbb
push
ret
movsl
sub
xchg
mov
sub
pop
clc
add
mov
cmp
add
sbb
cmc
mov
imul
or
stos
jns
out
sbb
leave
cmpsl
repz
ret
xor
test
add
mov
stos
add
cmp
call
xchg
fildl
cs
mov
rolb
outsb
mov
jae
pop
out
or
lahf
push
inc
mov
leave
xor
test
rorl
sub
shrl
jnp
sti
repz
int3
lret
mov
ret
hlt
push
inc
push
sbb
loopne
sub
push
dec
imul
sbb
lods
jle
or
adc
mov
imul
mov
cmp
add
nop
insl
jo
bound
jne
mov
ror
mov
aas
sub
pusha
jmp
rorl
push
enter
xor
cmpsl
push
mov
mov
push
leave
mov
pop
xchg
sbbb
int3
aas
icebp
sub
push
imul
imul
fnstsw
lret
stos
clc
xor
mov
mov
aaa
fcom
or
out
stc
movsl
lret
jmp
popa
and
mov
jl
testl
mov
sub
fistps
pop
sbb
jecxz
in
stos
pop
push
into
ret
jl
or
xor
shll
scas
add
lds
push
jne
cmp
std
mov
xor
jp
ss
fldt
dec
icebp
dec
dec
stos
stos
fstps
xorl
sbb
and
ljmp
fistps
push
add
and
daa
fists
fs
and
mov
pusha
jle
aad
mulb
rorl
adcl
movsb
dec
enter
adc
pop
mov
xchg
ds
cltd
rolb
inc
out
push
mov
and
cmp
sarl
cltd
lds
imul
pop
cmp
cmp
sub
movzwl
mov
je
mov
js
add
lods
mov
test
into
and
stos
cmc
sbb
lods
xchg
stos
xor
xchg
xor
call
push
or
hlt
cs
pushf
sub
add
adc
pop
mov
and
sub
mov
jno
add
sbb
dec
loopne
sbb
cmp
sub
adc
pop
lea
stos
out
popa
cld
shlb
jmp
add
int
in
orb
mov
rol
stc
es
mov
pop
xchg
mov
sti
mov
sbb
mov
xor
push
in
pusha
std
dec
in
jns
inc
imul
or
daa
clc
fstp
push
mov
jge
dec
movsl
add
mov
lcall
lds
sub
in
mov
pop
mov
and
pop
arpl
and
adc
cli
cld
and
test
mov
cmp
mov
add
sub
xchg
lcall
repnz
divb
call
mov
jl
fbld
movsl
sbb
and
loop
dec
outsb
mov
sbb
sub
loop
lea
sbb
mov
icebp
aad
jmp
ret
lea
push
out
stc
push
aas
xlat
mov
pushf
in
add
in
adcb
test
or
sub
mov
cmp
add
ret
loopne
xchg
mov
pop
pop
mov
push
fnstsw
mov
ret
fisttps
lret
xor
jge
inc
sbb
iret
adc
jno
push
aad
icebp
mov
and
push
bound
sbb
ja
pop
inc
mov
imul
adc
xchg
xor
repz
push
ljmp
call
adc
fisubs
sub
mov
xor
xchg
pop
xchg
imull
xchg
rolb
and
fisubrs
les
loopne
cli
push
push
adc
fdiv
cmp
cmp
fistl
je
mov
inc
pop
xchg
popl
arpl
imul
mov
xlat
into
enter
cmp
sarb
leave
mov
lods
pop
cmp
cmpsl
dec
lods
loopne
dec
cmc
into
lods
sub
adc
add
gs
or
lcall
sbb
xor
aad
pop
call
stos
rolb
jmp
push
mov
dec
pop
push
ror
ret
in
and
cwtl
mov
add
jecxz
stos
call
jns
inc
imul
or
pop
push
mov
sub
mov
mov
xor
or
stos
mov
pop
cmc
sub
and
iret
push
scas
adc
repz
jle
mov
subb
pop
push
out
mov
push
insl
nop
imul
adc
xchg
int3
mov
pop
sti
es
sahf
pop
jns
lret
mov
int3
sbb
lcall
jge
push
push
mov
in
and
cmp
dec
sub
mov
pop
adc
arpl
ss
mov
push
adc
stc
ss
push
ror
cmp
xor
rcr
adc
xchg
push
out
loopne
xchg
pop
fsubl
sarb
mov
rolw
nop
adc
imul
call
pop
push
push
mov
add
shll
sub
or
or
sbb
insl
mov
mov
xor
cwtl
mov
xor
mov
mov
jae
mov
fdivl
cs
out
mov
adc
scas
stc
jle
add
push
rorl
cs
push
sub
icebp
ja
in
cmpsl
popf
mov
rcrb
push
arpl
mov
xchg
xor
lcall
jae
jno
hlt
push
push
add
sarl
xor
fadd
jbe
hlt
mov
in
fwait
mov
outsl
pop
adc
stc
cltd
mov
ret
iret
mov
xchg
sbb
test
in
sbb
inc
or
aam
dec
lock
sub
pop
push
jmp
pop
adc
test
xchg
jbe
mov
insb
pop
adc
lds
fwait
sbb
pop
lret
sub
pop
aaa
lcall
cmp
lcall
bound
or
mov
es
push
ret
push
div
negb
xchg
inc
repnz
loop
jae
lahf
mov
push
hlt
sbb
pushf
mov
jg
repnz
jmp
test
push
xchg
mov
lcall
mov
mov
and
dec
xchg
push
call
test
ljmp
push
cwtl
insl
lods
dec
into
test
leave
inc
mov
mov
andb
cmp
and
xchg
cld
pop
add
pop
or
sbb
inc
add
mov
xor
rorl
or
adc
stos
xor
pop
js
mov
adc
lret
mulb
in
and
mov
inc
mov
jle
dec
push
mov
xchg
sbb
mov
int
mov
sbb
inc
pushf
dec
inc
sub
call
lret
xor
xchg
jb
jbe
pop
shl
pop
jmp
test
test
rol
lahf
push
mov
push
int3
cmp
adc
test
mov
jne
fldl
sub
syscall
frstor
ljmp
aam
mov
jnp
aad
shr
aaa
cltd
inc
fdivrs
mov
sbb
int3
mov
cltd
aam
ds
push
lock
das
sbb
push
cmp
enter
inc
scas
lods
lock
shrl
je
fidivrl
sub
push
xor
adc
push
fldenvs
stc
loope
fs
pop
mov
hlt
sub
movsb
add
xchg
xor
or
fldt
lods
insl
dec
adcl
sub
dec
dec
xor
mov
aas
fisubs
leave
jbe
mov
movl
imul
fisttpl
push
loop
mov
clc
sub
and
cmp
cmpl
or
addr16
xchg
arpl
mov
pop
cmp
repnz
leave
mov
jnp
gs
mov
xchg
cmp
mov
push
and
xchg
push
aas
insl
or
mov
daa
rcrb
in
insb
lds
fdivl
rcr
cmp
xor
loopne
inc
dec
pop
mov
cld
pop
sub
mov
dec
xchg
cmpsb
int
and
insl
lahf
popa
gs
test
in
out
cmp
mov
popa
add
cmp
xchg
loop
mov
out
roll
fnstcw
pop
cwtl
mov
push
stos
inc
mov
mov
popl
pop
cmp
aad
jle
lahf
push
out
mov
add
inc
aad
cmpsl
lahf
mov
enter
cmp
jae
and
imul
and
icebp
xchg
sbbl
fmul
out
bound
inc
mov
fst
lods
cwtl
jle
jo
scas
pop
adc
mov
xchg
sub
push
inc
es
mov
xchg
pop
lds
mov
jmp
cli
into
fs
rorb
xor
insl
scas
popa
nop
lods
dec
or
pusha
mov
ret
pop
jg
sbb
movsl
out
dec
jae
stc
aam
pop
mov
out
js
mov
mov
lcall
pop
jl,pt
or
sbb
dec
adc
ljmp
loope
fdivrp
stc
into
xor
mov
push
adc
inc
xchg
push
push
int
jnp
test
js
inc
and
ret
enter
mov
insb
xchg
or
test
mov
mov
test
jnp
push
lahf
stc
push
xchg
cmp
mov
sub
in
add
inc
pop
mov
cwtl
dec
mov
sub
sti
int3
inc
jp
sbb
stos
mov
xchg
jb
adc
xchg
inc
out
mov
push
push
or
fnstcw
xchg
arpl
pandn
jg
cltd
std
dec
bnd
fwait
and
in
cli
jbe
jns
jmp
jae
dec
xor
jbe
les
push
fisubrl
xor
sbb
push
call
ds
adc
inc
aam
push
jne
dec
mov
incl
out
ja
stc
sbb
mov
daa
sbb
mov
cli
or
push
or
pop
dec
and
xchg
pusha
les
and
pop
sub
xlat
mov
lock
fidivl
gs
js
es
dec
mov
push
mov
fwait
movb
xchg
push
in
loopne
das
sbb
sbb
pop
scas
lods
sti
loope
cmpsb
int
lea
sub
pop
mov
movsl
scas
scas
dec
xor
cmp
add
xchg
adc
iret
shrl
outsb
aas
fsts
out
inc
or
pop
jp
mov
adc
jbe
in
imul
pop
aaa
jp
dec
cmp
hlt
loope
imul
push
mov
lahf
sbb
ret
dec
cmc
xor
popa
push
notb
or
push
stc
jns
aas
xchg
cmpb
push
add
addl
jle
stc
sub
adc
lds
jns
es
rolb
imul
and
movsl
pop
mov
push
adc
cmpsb
out
xchg
or
ja
cmpsb
flds
push
test
fcos
sbb
mov
or
lods
mov
out
adc
mov
out
les
aaa
push
ds
outsb
aas
fsts
out
shl
andb
pop
lods
adc
jbe
in
imul
shrb
cli
loope
sbb
push
fldenv
pusha
sti
popf
mov
roll
les
movb
lock
in
ljmp
push
xor
hlt
iretw
out
mov
cmp
out
add
pop
mov
lock
or
mov
xor
insb
dec
cmpsl
add
outsb
xor
sbb
enter
or
movsb
mov
insl
and
cmp
loopne
hlt
es
es
and
lahf
std
sub
mov
rcr
jecxz
inc
shlb
dec
imul
push
into
fs
mov
sub
cs
pop
insb
sbb
test
or
adc
sbb
and
out
jo
mov
aad
pop
xor
cmpsb
in
cld
or
lret
test
sbbb
out
add
xlat
lock
into
call
adc
scas
mov
je
mov
sbbl
jno
lods
js
aas
add
xor
aad
fmul
sahf
mov
mov
lahf
push
xchg
out
arpl
push
dec
iret
cmp
fisubs
daa
or
xchg
in
sub
dec
idivb
push
enter
cld
ror
cltd
movsb
ror
or
mov
ret
mov
sbb
lods
ss
push
add
iret
ror
outsb
pop
jecxz
add
test
lcall
imul
jb
inc
mov
or
mov
inc
imul
or
lds
adc
pop
jne
out
push
pop
push
loope
clc
iret
dec
and
icebp
into
cmp
mov
cmp
sbb
push
jnp
shl
mov
jne
jno
pusha
lcall
dec
fcmovne
lea
stos
mov
inc
mov
pop
pop
add
dec
xor
in
call
out
cltd
out
inc
mov
pop
stos
into
lahf
arpl
mov
test
repz
dec
out
pusha
rcpps
and
idiv
inc
fsubl
sub
aad
mull
sub
sbb
pop
cltd
scas
test
out
shlb
and
imul
push
mov
inc
add
into
add
adc
and
stc
ja
dec
call
mov
inc
imul
push
ror
sbb
movnti
inc
test
xor
mov
cwtl
lret
arpl
out
pop
scas
out
pop
xchg
rol
mov
inc
fbld
cmp
jbe
lods
inc
stos
loopne
add
lods
arpl
mov
popa
mov
xchg
mov
sbb
push
mov
jle
mov
test
out
addl
mov
cmpb
arpl
add
sub
mov
inc
leave
jne
and
adc
iret
outsl
dec
dec
stc
pop
loop
sbb
lods
call
adc
into
jns
mov
idivl
push
adc
mov
push
push
cmpsl
iret
fs
mov
scas
std
daa
sub
sbbl
or
lock
fdivr
inc
jl
xor
xchg
jno
aas
stos
lcall
roll
add
popa
xchg
mov
test
loop
js
in
aam
fstl
out
in
dec
push
in
lcall
mov
mov
push
lahf
sub
jns
lcall
or
sbb
ret
pop
inc
and
rcrb
addr16
sbb
cmp
jmp
arpl
in
jno
sbb
pushf
leave
pushf
jp
loopne
xchg
cmp
popf
ss
jb
inc
mov
sahf
icebp
mov
lcall
mov
adc
push
add
sarl
xor
imul
inc
sbb
jbe
iret
jns
pop
les
xor
fstpl
scas
jbe
mov
push
or
andl
sub
pop
lock
pop
fimuls
and
mov
add
pop
pop
fwait
or
push
and
pop
xor
push
sbb
sbbl
out
cmp
mov
fsubs
push
add
push
jo
enter
shl
sbb
xchg
push
jl
sarl
jge
and
arpl
mov
mov
sahf
ja
aad
test
icebp
cmp
sarl
xor
cli
ret
fcomps
sti
mov
adc
ja
jne
inc
xchg
mov
mov
vcvttsd2si
pop
adc
adc
push
or
popa
xchg
es
dec
or
pop
adc
mov
cmp
and
hlt
out
xor
les
das
inc
jbe
and
push
rol
jb
cmc
mov
mov
cmpsl
aas
ret
lret
xchg
mov
xchg
pop
aaa
adc
movsl
jmp
jge,pt
shll
sbb
lret
std
xchg
insl
clc
js
xchg
jle
jae
fildl
insl
push
rcl
cld
jo
cli
std
sbb
outsl
push
mov
pop
test
clc
daa
stos
pusha
fscale
test
ret
test
and
shl
jp
push
xchg
sti
jno
xlat
scas
mov
out
jb
testb
pop
frstor
cltd
fcomps
enter
pop
and
mov
ds
es
pop
xchg
fwait
cmp
jl
jbe
mov
xchg
sub
jno
aaa
in
push
xchg
cmp
pushf
dec
pusha
sub
push
push
ds
imul
fmuls
ret
pop
or
xchg
add
mov
sti
push
inc
ss
cmpsl
nop
mov
push
addr16
lret
jo
test
sub
xor
popa
rcrl
pop
adc
push
lea
dec
mov
mov
ret
mov
sarl
in
orl
lcall
xor
xchg
aaa
subb
fdivr
stc
sbb
mov
rolb
cs
repnz
push
enter
and
adc
sub
mov
test
movsl
jo
outsl
sti
lcall
je
aam
and
mov
jmp
push
fstpl
mov
mov
jle
in
push
dec
dec
or
movsb
xchg
pop
xor
inc
out
inc
lret
add
xchg
stos
mov
pushf
mov
mov
jbe
sub
dec
inc
sub
sbb
xor
shlb
mov
stos
pop
inc
mov
add
insl
cmp
xchg
cmp
sub
imul
mov
sbb
mov
add
mov
xor
push
bound
mov
les
dec
test
inc
shrb
jge
lods
and
fmul
and
aam
dec
sub
mov
mov
test
movl
push
pop
movsl
addb
les
jns
xor
and
cmp
add
and
xchg
jmp
lahf
push
and
aam
mov
cvtpi2ps
lahf
xchg
jne
inc
and
cmp
add
out
push
outsl
or
mov
mov
call
adc
sub
imul
daa
push
dec
mov
inc
xchg
repnz
mov
cld
imul
lret
inc
popf
push
mov
mov
add
pushf
pop
xchg
mov
addr16
xchg
pop
xlat
inc
sbb
xchg
dec
add
test
dec
mov
adc
push
clc
out
pusha
pop
fprem1
push
adc
dec
aas
inc
popf
mov
cmp
xchg
out
lods
adc
inc
adc
jnp
mov
xchg
sahf
dec
xlat
movsl
imul
xchg
test
ljmp
test
xlat
sahf
aas
mov
in
pop
int3
inc
xor
mov
test
scas
xor
jle
insl
xor
dec
sahf
lret
lock
into
sbb
sub
mov
repz
pushf
xchg
jb
imul
add
hlt
push
adc
outsl
mov
add
test
mov
cwtl
pop
push
sbb
cld
or
hlt
cltd
out
int
cmp
and
mov
rorb
xchg
popl
scas
or
pop
aad
pop
sbb
xor
cmp
imul
adc
jl,pt
sbb
scas
repz
subb
sbb
decl
fisubrl
adc
or
or
lret
xlat
lret
mov
xor
das
jg
lahf
mov
mov
in
ja
jne
test
xchg
sub
inc
rorl
cltd
add
pop
mov
sbb
inc
fwait
bound
leave
inc
shl
sbb
push
push
sbb
mov
inc
lret
inc
in
dec
fimuls
xor
mov
fidivl
pushl
outsb
inc
js
sbb
cmpb
pop
xchg
ret
dec
in
nop
lea
mov
mov
add
push
or
push
cli
test
out
fwait
mov
or
addb
iret
dec
or
sbb
sti
adc
pop
adc
cmp
in
pop
lods
xchg
popf
fsubrl
xor
or
xor
add
ds
bound
ss
push
lret
pop
cmp
mov
aam
lcall
subb
sbb
je
and
lods
ljmp
pop
push
adc
shl
push
or
mov
mov
out
dec
daa
jbe
mov
cmp
jnp
push
jne
call
and
fsub
and
cmp
sbb
sbb
mov
cwtl
testl
mov
loop
lds
enter
stc
mov
loop
jns
jle
stc
icebp
jmp
adc
insl
dec
sbb
jmp
sub
push
loope
or
lea
xchg
or
or
xor
push
mov
movsb
mov
fstpt
pop
inc
iret
pop
push
push
push
xchg
lods
inc
sub
push
mov
xchg
push
hlt
add
lret
pushw
iret
and
out
dec
dec
adc
gs
xor
daa
adc
pop
jo
xchg
pop
mov
dec
pop
xor
xchg
or
mov
adc
dec
xchg
fistpll
fldcw
jae
mov
arpl
ret
push
pop
cmp
xchg
add
cmpsb
cmp
fstps
adc
jg
sbb
pop
ljmp
rcrl
loopne
fs
mov
data16
ja
and
cmp
mov
pop
enter
in
lret
mov
xchg
popa
iret
daa
xor
mov
outsb
jle
nop
mov
sarb
sbb
daa
sub
inc
push
ret
loope,pt
test
fsubl
fstpl
adc
lds
call
aam
mov
dec
jle
cmp
aam
enter
lahf
push
mov
sbb
out
gs
mov
jge
lcall
loop
xchg
cmp
cld
dec
fdivrl
loopne
imul
enter
mov
fnstsw
in
hlt
lock
or
cmpsb
mov
mov
xchg
mov
stos
mov
aad
or
dec
cs
mov
movsb
xchg
ja
bnd
push
pop
and
jmp
loop
out
xor
sbb
out
rorl
shl
aad
cmp
xchg
pop
xchg
push
push
jo
xchg
push
std
clc
inc
cltd
scas
cli
stc
and
sbb
outsl
outsl
mov
dec
push
or
mov
fwait
mov
aam
sub
sbb
mov
outsl
mov
push
mov
in
cmp
and
repnz
cld
inc
test
adc
cmpsb
or
mov
sbb
enter
xor
jg
jle
xchg
dec
xor
int
into
or
test
or
mov
icebp
test
popa
aas
ds
fdiv
push
mov
addr16
scas
push
push
sbb
fstp
mov
mov
popf
cmp
jg
adc
add
cli
pop
sti
insb
sub
xchg
cmc
stc
adc
lods
aas
pop
xchg
popf
andb
shrl
inc
mov
mov
xchg
std
cltd
sub
imul
mov
or
mov
cmp
je
ret
pop
popl
jbe
cli
jl
lods
aad
outsl
pop
jg
pop
mov
enter
xchg
sbb
imul
push
int3
xorl
pushf
popf
gs
movsl
mov
jge
fcoms
insb
iret
xchg
sbb
adc
int3
les
sarl
inc
mov
popa
mov
dec
cs
stos
pushf
ljmp
push
mov
shrl
jb
pop
aam
ja
aad
cli
sub
jne
out
inc
dec
push
les
push
shlb
add
lods
sbb
add
repnz
cmpsb
out
push
fstpt
jp
pop
mov
mov
pushf
add
xchg
je
ret
and
inc
imul
inc
fadds
cltd
adc
pop
cmp
cmp
xchg
sub
imul
mov
dec
push
imul
or
mov
dec
rol
cwtl
or
jb
cmp
adc
hlt
cmp
and
jmp
pop
js
and
pop
sbb
or
hlt
es
popa
lods
lahf
js
sub
insb
sub
ret
loopne
add
outsl
mov
dec
mov
out
ljmp
jnp
aaa
dec
inc
pop
xchg
adc
movsl
leave
movl
mov
mov
fincstp
out
cwtl
leave
mov
cmpsl
rcll
ret
loopne
nop
sahf
push
mov
mov
fistl
stc
push
sub
sarb
add
dec
xlat
cmp
push
int3
adc
dec
int
cmp
cli
ret
mov
jecxz
and
das
mov
fstl
loop
int
ret
push
ds
dec
cmc
jnp
mov
ljmp
sbb
sbb
xchg
idivb
push
test
or
jmp
inc
imul
out
mov
repz
pop
adc
add
shll
dec
dec
gs
jne
add
or
out
sbb
stos
cmp
lret
roll
jae
shr
in
push
call
add
mov
push
insl
jns
cmp
mov
out
test
mov
stos
and
inc
rcl
scas
out
push
aad
test
loopne
movsb
inc
aas
fimull
pop
insl
jecxz
mov
and
xchg
dec
xchg
shll
nop
inc
cltd
ret
or
add
jl
icebp
pop
push
or
pop
jp
lcall
push
cld
addl
mov
sub
mov
push
xor
in
mov
in
lret
mov
push
repz
sbb
ret
clc
ljmp
adc
dec
jge
sti
jbe
jno
in
sub
dec
and
enter
in
cld
stos
mov
data16
lds
repnz
push
sbb
arpl
and
scas
push
aaa
test
lahf
fstl
push
in
push
and
into
adc
fisttpll
enter
or
loope
lods
pop
subl
imul
into
cwtl
xor
test
neg
adc
fs
mov
loope
adcl
aam
js
in
iret
hlt
scas
adc
lds
les
iret
out
cmp
loopne,pn
neg
mov
lods
dec
iret
jnp
inc
add
sub
in
mov
fs
sti
ficoml
lret
xchg
stc
mov
scas
and
mov
mov
mov
dec
je
out
scas
and
sub
sbb
ret
and
mov
mov
jae
dec
and
es
mov
pusha
fsubr
mov
jnp
or
xor
in
mov
and
and
call
mov
mov
xor
psubw
dec
addr16
and
fistpll
push
dec
nop
ds
jo
or
inc
std
jnp
xchg
scas
lock
xchg
aam
movb
and
jecxz
push
flds
push
pop
repnz
mov
add
mov
mov
fcmovnu
mov
mov
repz
out
inc
push
sbb
leave
mov
lds
dec
adc
out
iret
sbb
fldl
test
ja
shlb
cmc
cld
mov
mov
lcall
idivb
inc
fwait
mov
aam
adc
push
push
clc
mov
jmp
mov
xor
mov
cmp
bound
das
push
push
call
mov
or
sbb
loop
fistps
fiaddl
mov
mov
adc
pop
fucomp
or
fucom
std
sub
stc
push
and
adc
xchg
lods
mov
xor
mov
pop
sub
lret
mov
xchg
push
mov
pop
rcrb
dec
jbe
lret
icebp
fldl
stos
and
fnstsw
sbb
mov
jecxz
aad
sti
mov
sbb
jg
scas
test
outsb
xor
dec
xlat
cs
repz
adc
push
icebp
sbb
in
add
decb
scas
out
in
or
dec
mov
test
in
lret
in
cmovae
adc
or
add
pop
mov
outsl
fstps
inc
jl
sub
loope
jmp
daa
jp
lret
jmp
jge
inc
pop
mov
repnz
sti
repnz
mov
test
incl
imul
sbb
insl
jl
movsl
xchg
nop
mov
frstor
or
pop
pop
lcall
scas
cmpsl
push
add
cmp
lds
xchg
pop
dec
mov
pop
push
mov
ret
mov
lods
adc
ret
andn
imul
xchg
xor
add
or
jo
stos
aad
mov
mov
push
cmc
xchg
sub
mov
stc
int3
and
out
pushf
and
mov
in
cli
mov
mov
inc
sub
js
add
adc
sbb
jno
call
in
je
fisttps
enter
test
inc
addr16
and
out
loopne
mov
xchg
cltd
in
jb
inc
lock
daa
dec
add
xor
sbb
and
mov
std
and
sbb
xchg
push
push
xchg
mov
or
enter
xor
mov
jo
sbb
sub
mov
nop
sbb
xchg
mov
pop
test
add
mov
sub
into
xrelease
adc
mov
sub
mov
rolb
fldt
push
jg
fisttps
fistl
fildll
xchg
pop
mov
cld
sub
push
jo
and
jnp
mov
aam
adc
sbbl
jge
hlt
aas
mov
lods
push
xchg
push
nop
adc
jne
lcall
adc
inc
int
std
in
jecxz
adc
add
push
aaa
lret
mov
xchg
dec
xchg
xor
repnz
popa
xchg
sti
or
add
mov
mov
jmp
adcl
pop
sti
loop
sahf
pop
add
insb
inc
jmp
sbb
dec
ret
inc
pop
xor
loope
movsl
push
pop
cmp
cli
in
mov
rcrb
jo
xor
shrb
inc
sarl
dec
imul
repz
jb
dec
fcoml
shrl
xchg
movsb
cmpl
hlt
lahf
dec
pop
mov
daa
imul
inc
mov
data16
in
xor
fdivl
lcall
mov
mov
mov
arpl
fdivs
pop
xchg
xchg
inc
mov
ljmp
pushf
mov
je
iret
inc
cld
xchg
mov
lahf
jo
sti
in
roll
xchg
xor
mov
roll
in
ss
push
cli
in
sti
sub
push
mov
mov
in
jmp
jnp
adc
cld
sbb
aam
fnstsw
popa
mov
xlat
stc
jae
cli
test
fwait
sbb
cmpsb
jbe
cmpsb
fidivl
mov
xor
in
lret
int3
inc
push
sbb
ljmp
mov
adc
mov
hlt
ret
dec
pop
mov
add
push
fnstcw
mov
stos
push
xchg
mov
stos
in
subl
adc
push
in
and
sub
dec
jnp
sbb
mov
mov
push
sbb
jg
add
daa
sub
cli
mov
dec
popf
mov
lods
ds
inc
ret
inc
pusha
inc
bound
mov
xor
mov
cli
adc
push
icebp
sbb
in
std
out
sbb
mov
in
xchg
xchg
mov
jl
or
bt
add
loopne,pt
ret
inc
movsb
fisttpl
inc
mov
mov
mov
push
imull
inc
mov
dec
mov
ds
call
out
pusha
lods
jg
insl
in
and
mov
dec
mov
or
jno
out
mov
or
es
pop
fucom
pop
lahf
adc
repz
loop
or
cmc
adc
sarb
in
jnp
cld
outsb
inc
and
stc
mov
je
mov
add
cwtl
out
dec
push
pop
in
lret
repnz
test
mov
jmp
icebp
push
xchg
and
add
addb
ss
loopne
pop
xor
andl
jecxz
add
sub
push
icebp
imul
icebp
jae
ret
jno
hlt
xchg
sbb
mov
addb
cmp
cmp
lahf
dec
mov
and
pop
lret
call
or
lods
fisubl
stos
outsb
das
sbb
stos
adc
sysret
dec
sahf
popl
xlat
mov
sbb
popf
xchg
add
jge
cli
pop
ljmp
rcr
aam
dec
roll
data16
arpl
push
push
clc
aad
dec
jl
push
test
add
ja
mov
call
fnstcw
sub
ja
jle
shll
enter
movsb
xchg
cmc
xchg
push
mov
mov
mov
lods
out
insl
mov
lock
mov
pop
in
stos
xchg
hlt
mov
into
data16
push
and
iret
pop
cmp
push
mov
es
lods
call
mov
dec
mov
xor
aam
scas
jecxz
arpl
mov
dec
cmp
loope
cmc
icebp
popa
pinsrw
mov
or
in
sbb
repz
sbb
dec
mulb
frstor
lds
in
lcall
adc
xchg
fistpl
mov
or
lret
or
test
aam
aaa
dec
frndint
pushf
in
mov
das
pusha
mov
cs
addr16
cmpb
dec
rcrl
repnz
clc
or
inc
cli
mov
sbb
add
fiadds
test
mov
xchg
pop
in
mov
int3
xor
scas
mov
insl
push
imul
mov
repz
sub
loope
out
movsb
mov
or
push
pop
pop
adc
or
je
sbb
xchg
repnz
and
or
adc
lcall
push
ds
jl
mov
cmp
inc
xor
jecxz
lods
push
rol
xchg
xchg
notb
out
add
mov
mov
inc
movb
lret
or
pop
lods
xor
push
insl
or
aam
jp
pop
pop
fsts
es
sbb
inc
and
adc
fnsave
lret
repz
fdivs
xor
xor
and
test
jne
pop
pop
mov
and
cld
jno
out
mov
xchg
lret
xor
repnz
call
ret
xchg
loopne
xor
push
jbe
xchg
lods
inc
ret
jg
xchg
push
mov
and
sbb
add
cli
xchg
adc
jg
lock
mov
popf
mov
loop
aam
pop
ja
sub
adc
cltd
push
xor
fwait
dec
stos
add
dec
fwait
test
lcall
ljmp
push
pop
nop
xor
lods
xor
jle
popa
cltd
jno
mov
xor
imul
dec
stc
cmp
xorl
mov
sti
xchg
xchg
jp
xlat
dec
scas
inc
shl
adcl
das
xchg
jo
jl
and
mov
test
xor
nop
inc
loope
push
jbe
insl
sbb
mov
and
addl
insb
orl
sbb
lahf
adc
xchg
aas
and
roll
mov
xchg
push
shrb
cmpsl
scas
fidivrl
pmaxub
push
xchg
sub
push
cmpsb
mov
dec
add
and
pop
aas
ret
gs
and
ds
mov
xor
unpckhps
jb
and
jl
pop
jo,pn
jnp
enter
cmp
movsb
cmp
cli
std
dec
lret
bound
mov
in
xchg
int3
lds
sub
jb
push
ss
fisttpll
push
add
xchg
repz
test
mov
push
shll
jne
in
sub
sub
pop
add
or
inc
bswap
out
xchg
ja
cld
fadds
add
stos
adc
cld
jae
add
sub
andb
ret
add
jg
inc
xlat
shl
push
pop
or
mov
mov
nop
ja,pn
orb
es
ljmp
js
xchg
xchg
and
shl
adc
outsb
pop
xor
jl
in
inc
call
pop
adc
inc
sbb
pop
into
push
dec
shrb
pop
adc
cmc
or
and
jg
inc
inc
pop
pop
mov
sbb
xor
mov
cltd
lret
sub
sarl
jl
add
sbb
popa
cmp
dec
mov
and
repnz
enter
jne
pop
mov
aam
xorb
adc
in
call
in
xor
push
or
call
jmp
std
data16
call
add
pop
mov
scas
imul
dec
cmpsl
insl
data16
ret
jbe
cmp
adc
inc
icebp
or
xchg
cwtl
and
fidivrl
arpl
xor
shr
nop
popf
addl
mov
add
lret
daa
and
std
sub
push
imul
pop
mov
cmp
add
pop
test
lods
push
loopne
and
sub
adc
sbb
test
push
fadd
fsubs
leave
stc
cmp
sbb
cmp
pop
xchg
pop
bound
mov
mov
xchg
into
lahf
sbb
pop
mov
sbb
sub
hlt
mov
movl
gs
sarb
dec
sub
add
mov
test
adc
arpl
sbb
fwait
pop
or
adc
xchg
xor
mov
in
dec
cmp
dec
xchg
repnz
std
lock
cmp
jmp
xor
mov
sub
daa
jb
nop
cmc
pop
inc
jns
std
int
clc
daa
int3
mov
sub
imul
ret
cwtl
popf
pusha
adc
popf
scas
push
jge
hlt
push
dec
cmp
jge
add
mov
mov
cmp
adc
lods
insl
inc
inc
scas
add
shrb
js
cmp
push
xor
into
cmpsl
insb
fisubrl
and
jp
sub
inc
push
dec
ffree
jne
sbb
mov
ljmp
add
push
mov
or
mov
andb
mov
push
aas
xor
jbe
jl
sbb
push
mov
push
cmp
int3
lods
popf
sub
popa
out
pop
push
jns
pop
divb
cmp
jb
mov
xchg
inc
or
mov
mov
push
xchg
dec
adc
filds
lahf
sbb
xchg
inc
aaa
sbb
loope
rorb
stc
or
or
fsubp
or
sub
comiss
inc
lock
jb
push
sar
or
movsb
rcrl
es
dec
popa
das
xchg
sahf
jp
and
out
mov
es
pushf
jns
dec
add
or
pusha
jbe
arpl
outsb
test
lret
mov
mov
dec
and
dec
loop
in
sarl
mov
jmp
std
icebp
pop
loop
cmp
and
jno
dec
ret
push
and
lods
inc
aaa
mov
jnp
inc
daa
ret
inc
into
cmp
or
push
cmc
pusha
out
sub
mov
cwtl
popa
mov
orb
mov
in
cmc
add
hlt
and
pop
lret
push
mov
test
lret
mov
xchg
mov
jns
jno
aas
imul
bound
jl
jmp
add
int3
mov
sub
fistl
push
out
test
cmpsl
lret
dec
dec
sbb
mov
scas
test
and
xchg
out
mov
into
mov
sub
popf
daa
adc
repnz
insl
lcall
les
cmp
cltd
xlat
arpl
fdivl
inc
jno
mov
adc
mov
pop
jnp
or
in
xchg
xor
pop
jle
and
out
fisttps
enter
add
pop
fs
add
xchg
in
pusha
xor
mov
sarl
jb
daa
aas
sub
subl
pop
es
mov
pop
and
xchg
in
mov
fbstp
mov
insb
push
bound
and
jmp
mov
xor
test
mov
jg
dec
mov
pop
stc
in
fwait
rcrl
or
push
and
rorb
fcmovu
sub
push
rcll
xchg
push
jg
ds
cmp
jno
push
ret
inc
movsb
cmp
stos
dec
add
jno
rolb
mov
push
popa
repz
mov
xchg
mov
shlb
fmuls
xor
inc
cmc
sbb
sub
ss
dec
aad
adc
push
aaa
jmp
enter
and
pop
jno
dec
xchg
dec
pop
cmp
mov
sbb
insl
mov
gs
insb
enter
rorl
and
push
and
call
pop
in
clc
pop
cltd
lahf
push
bound
jne
pop
xor
adc
stos
jle
pop
and
xor
mov
or
icebp
out
in
out
adc
aas
push
lds
sub
stos
xor
xor
push
or
cmc
mov
rcll
sbb
mov
push
xchg
add
lcall
or
lahf
jg
stos
inc
pop
xchg
push
stc
pop
les
out
inc
xchg
mov
sbb
stos
and
out
xor
sub
cs
xlat
sbb
iret
sbb
call
ds
pop
lcall
in
or
cmpl
push
movsb
ffreep
ret
sub
lea
push
xor
adc
frstor
jnp
mov
insl
imul
jecxz
popa
dec
mov
mov
and
xor
push
add
sbb
cwtl
add
mov
aam
mov
and
scas
inc
dec
cwtl
out
mov
out
inc
push
jb
cs
pop
call
gs
gs
xchg
adc
std
scas
add
push
cld
outsb
cmp
stos
cmp
adc
ja
fdivl
std
nop
cmp
stc
cmp
mov
test
repnz
xchg
lods
jmp
test
or
lret
repnz
inc
stc
mov
pop
pcmpeqb
icebp
jno
dec
pop
stos
push
mov
scas
scas
adc
cmpsb
fdiv
dec
inc
cld
frstor
mov
out
mov
mov
mov
mov
fcompl
sub
leave
mov
push
pop
mov
xchg
sub
sbb
xor
mov
andl
mov
jnp
lods
pop
xchg
inc
orl
xchg
mov
cltd
add
dec
jnp
cld
push
test
sbb
fistpl
mov
movsl
pop
std
mov
hlt
inc
xchg
pop
mov
loopne
lods
lcall
mov
dec
dec
cwtl
in
das
lock
mov
test
pop
sub
shr
scas
dec
xchg
pusha
subb
outsl
cli
std
or
sbb
mov
dec
or
add
movsl
imul
in
push
push
rcll
sub
sahf
cmpb
scas
mov
mov
ss
xor
sbb
push
iret
loope
nop
and
dec
jb
movsl
push
popa
or
movl
sbb
pushf
adc
movsb
xor
jae
mov
jp
sbb
aaa
xchg
mov
push
cmp
sub
sbb
or
cmpsb
cld
pop
dec
scas
arpl
leave
scas
clc
sub
push
jmp
iret
sbb
mov
mov
mov
pop
xchg
pop
dec
push
sbb
or
andl
inc
andb
mov
scas
cmp
push
mov
icebp
sbbb
pop
push
jmp
or
popf
sub
fs
sbb
test
loop
adc
xrelease
jp
popf
mov
aas
push
popa
push
jl
mov
push
ret
jno
pop
and
cmc
add
jo
mov
push
decl
xchg
pop
shl
movsb
mov
mov
jmp
inc
scas
fsts
sub
dec
fstps
pop
mov
popa
xor
mov
jne
in
leave
negl
inc
jp
jbe
xchg
xchg
popf
xchg
xor
xor
mov
sub
rcr
out
fildl
daa
cmp
insb
in
ficoml
cmp
sub
push
jb
mov
xchg
xchg
jl
lcall
sbb
jbe
aam
outsl
ds
fstpl
movsl
ja
push
loopne
es
sub
mov
cmpsb
sub
lcall
or
jl
xchg
inc
jp
enter
clc
lret
jmp
inc
mov
inc
adc
mov
or
dec
mov
pop
sbb
jno
sub
lret
les
insb
loopne
push
sbb
sbb
mov
or
inc
js
sti
push
push
xchg
cli
scas
and
mov
push
push
mov
inc
xchg
mov
ficomps
fdivrl
ret
cmpsb
push
sahf
call
and
popf
aad
fnstcw
sub
mov
push
sti
das
and
je
ficomps
jl
push
sete
scas
mov
int
or
popa
xchg
pop
xchg
out
movsb
push
adc
mov
aaa
or
sbb
rclb
ja
xchg
push
insl
mov
repnz
pop
les
push
fneni(8087
stc
mov
ror
popa
add
fs
fsubrl
or
mov
daa
sub
aad
std
jno
mov
push
cld
and
inc
aas
pop
lock
loop
mov
clc
dec
or
inc
mov
insl
insl
fstpt
ret
pop
push
pop
rclb
xor
mov
push
adc
mov
push
popa
int
push
push
inc
mov
jae
dec
xchg
add
cmpsl
loopne
stc
mov
xchg
mov
dec
dec
pop
fildl
adc
pop
not
adc
mov
push
mov
stos
add
lahf
cli
repnz
sbb
pushf
inc
and
lcall
les
movsl
xchg
xchg
and
loopne
cmp
or
xor
test
iret
std
and
jns
and
or
fsubrs
orl
mov
jb
pop
iret
daa
lds
xchg
inc
add
addr16
pushf
pop
rcll
insb
jnp
mov
jns
out
jo
jne
add
jle
mov
cmpsb
bound
pop
test
fidivl
ret
call
aad
sbb
leave
rcl
sarl
test
pop
push
stos
mov
ljmp
pop
mov
pop
jne
push
xchg
mov
ja
add
jno
ret
mov
lods
pop
adc
jne
or
sub
int3
mov
and
int
push
cmp
fwait
fwait
sub
inc
pusha
sahf
sub
push
xor
cli
cmp
dec
scas
push
shrl
in
lock
mov
lods
jecxz
jmp
push
daa
clc
cwtl
lock
jo
pop
lods
xor
cmp
mov
pushf
enter
ret
push
mov
jne
cld
xor
jecxz
shrl
out
sub
or
das
xlat
mov
ljmp
in
pop
inc
cwtl
negl
jmp
clc
pop
divb
mov
and
sub
mov
movsl
pop
cmc
jge
and
jmp
xchg
nop
repnz
fsubrl
adc
in
add
repnz
push
mov
inc
xchg
hlt
ss
test
xor
sarl
sbb
cs
lret
clc
or
xor
xor
rep
dec
jecxz
push
mov
inc
shlb
inc
inc
mov
pushf
pop
fiadds
add
pop
xchg
mov
out
inc
cmp
or
pop
xchg
fwait
orb
imul
movsl
xchg
jo
push
xchg
cmp
cltd
dec
cmp
lret
push
or
aad
cmc
test
dec
addr16
out
jecxz
movl
jp
push
xchg
test
dec
mov
movsl
xor
mov
lea
dec
add
stc
nop
mov
pop
jg
ret
fnstsw
addr16
cmpl
push
sub
sub
push
shll
mov
aas
xchg
rcr
pop
leave
inc
shlb
pop
bnd
lret
pop
int
scas
fisubl
cli
lods
lret
fiadds
mov
outsl
mov
sahf
in
out
adc
or
cmpb
fs
fwait
icebp
andl
pop
sbb
lods
sub
stos
push
adc
mov
mov
mov
test
loopne
mov
jbe
loopne
inc
test
shll
arpl
jg
dec
bsf
lahf
clc
fdiv
mov
dec
test
scas
pop
loopne
sbb
dec
ret
dec
ds
fcom
dec
push
fdivl
lcall
jno
xor
or
or
and
mov
adc
movsb
pop
dec
imul
or
sbb
mov
adc
mov
fsub
or
rorb
pop
popa
dec
fiadds
lods
pop
jg
rolb
adc
adc
mov
fcoms
push
rolb
xor
rorb
pop
popa
dec
leave
inc
or
sub
repz
dec
adc
cmp
mov
rolb
lods
mov
mov
push
stos
cld
mov
mov
push
add
es
fisttpll
imul
push
xor
add
jbe
mov
fwait
mov
les
sarb
movsb
mov
push
dec
lret
lds
xchg
sahf
xor
dec
sub
push
mov
push
clc
loopne
mov
push
stos
adc
inc
inc
dec
pop
int
and
jo
sub
jmp
int
stos
sbb
lods
pop
or
les
adc
enter
push
scas
loope
add
stos
in
ret
out
jmp
mov
jne
and
push
testb
scas
mov
fyl2xp1
sub
sbb
sub
cmp
shll
and
xor
inc
jne
add
shrl
xor
and
loopne
jne
mov
pop
push
jo
mov
repnz
out
clc
lret
mov
jp
push
sbb
sahf
lods
or
lock
ljmp
sahf
xchg
xor
andb
lahf
adc
cmp
xchg
dec
sti
sub
psubsw
insb
adc
push
call
add
add
adc
popa
sbb
xor
rolb
pusha
mov
adc
test
mov
das
mov
sub
mov
or
cli
mov
xor
xchg
jbe
dec
cmpsb
gs
ja
popf
daa
nop
shlb
cli
pop
mov
sub
sub
out
jle
mov
xchg
inc
pop
scas
xchg
or
push
sti
add
sti
test
pop
scas
cmp
jg
ficoml
das
rolb
jb
icebp
repz
js
jge
sub
jo
addr16
in
les
cmpsl
pop
mov
mov
mov
push
scas
jl
leave
and
repz
out
rcll
shlb
lods
mov
sbb
jne
jle
mov
fdecstp
in
xor
dec
mov
ds
inc
insb
repnz
std
dec
add
int3
and
scas
jae
jnp
sbb
xchg
sbb
pop
ljmp
hlt
stos
adc
imul
cltd
sbb
mov
rorl
add
pop
adc
mov
cs
adc
std
lret
addr16
dec
jle
imul
adc
pop
mov
pop
ficoms
subb
jle
dec
mov
push
and
mov
flds
cld
jno
cmc
and
push
test
adc
pop
sub
add
cld
jno
test
aad
xchg
lds
push
lret
xor
pop
out
add
mov
jge
xchg
stos
cmp
dec
bound
xchg
pusha
cmp
adc
in
clc
pusha
jge
sbb
mov
sbb
pop
lcall
leave
sub
inc
sub
xor
data16
lods
dec
cmp
mov
push
sahf
push
jp
xor
mov
jecxz
xchg
repz
dec
out
pusha
sysenter
mov
bound
and
addr16
and
adc
mov
xchg
fucomip
and
mov
popf
or
cmpsl
enter
xor
jnp
and
aam
cmp
adc
mov
movl
lcall
adc
cli
inc
je
scas
push
pop
clc
mov
jb
out
xchg
lea
loopne
jecxz
dec
mov
inc
jo
sub
inc
testb
push
into
jmp
pop
cli
aad
mov
mov
dec
sbb
shlb
push
jecxz
leavew
sub
je
pusha
jnp
daa
out
addr16
mov
sbb
push
push
fs
add
cmp
notb
xor
sub
imul
jo
or
les
ljmp
ret
mov
pop
sub
sbbb
add
mov
jecxz
fwait
add
mov
cmpsb
jge
dec
test
adc
mov
lret
xlat
sahf
sub
ljmp
insl
data16
mov
gs
lds
inc
addr16
aaa
pop
jnp,pt
lret
repz
push
sbb
incb
fwait
aam
fidivl
sub
loope
cmpsb
xor
jo
arpl
add
inc
lods
je
sbb
add
stos
and
pop
sub
mov
or
out
and
cmp
xor
sti
push
fwait
in
add
pop
and
mov
jb
jnp
push
jo
fnstcw
lock
add
ja
cmp
inc
sahf
dec
ja
gs
adc
fisubrl
sub
adc
sub
stc
movsl
outsl
test
pop
jno
pop
jb
sti
pop
sub
fmul
test
jp
and
xlat
adc
jp
jnp
das
jmp
mov
mov
jae
mov
pop
das
frstor
mov
es
mov
iret
es
add
push
arpl
sbb
lret
jg
add
pop
dec
icebp
loopne
shrb
mov
adc
sub
push
adc
jmp
aas
jge
push
dec
in
in
xchg
push
scas
pop
repz
ja
sub
lods
or
in
xchg
movsl
cmp
out
and
cmp
xchg
mov
mov
shrl
inc
adc
inc
test
sbb
sahf
fisubs
notl
mov
mov
xor
inc
push
pop
aas
vmovd
mov
lods
pop
js
ss
popf
mov
inc
push
fdivp
imul
xchg
lcall
inc
mov
clc
stos
lahf
mov
mov
push
jmp
pop
rorb
xchg
mov
inc
dec
jge
mov
sbb
mov
push
adc
mov
pop
mov
fwait
mov
fsubrl
mov
or
imul
pop
dec
xchg
stos
mov
jl
mov
pop
rcrb
ss
push
push
mov
mov
sub
pop
mov
imul
jns
cs
xor
push
jnp
aam
dec
mov
divl
jb
fldl
out
add
jnp
pop
cmpsb
incb
mov
int
mull
pop
jbe
aaa
sub
stc
orl
mov
es
jbe
xlat
mov
stos
pop
call
lcall
decl
fbld
add
push
lock
jmp
adc
mov
data16
mov
cmp
inc
rclb
xor
call
insb
aad
cmpsl
mov
int
jo
push
outsb
popa
flds
std
cmpsl
fbld
jae
jne
ret
scas
cmp
jae
lods
outsb
in
sub
push
std
leave
cmpsb
mov
cli
xchg
mov
or
in
add
scas
pop
lea
std
loop
leave
sub
cmp
or
push
inc
dec
imul
stc
mov
sub
sub
and
xchg
dec
xchg
xchg
loope
popa
movsb
dec
out
shr
mov
cmp
mov
cmp
push
add
cmp
test
xchg
les
shll
sbb
pop
scas
jl
out
scas
sub
sti
ret
in
jns
mov
into
jp
xchg
mov
fldt
fsubr
or
xor
popl
in
inc
lahf
xchg
mov
imul
jecxz
or
stos
icebp
mov
ret
lods
jmp
push
icebp
out
imul
xor
loopne
lret
mov
xchg
or
cmp
xorl
cmc
xchg
js
enter
inc
push
inc
sti
adc
add
mov
pushf
push
pop
xlat
add
subb
or
xchg
jnp
cmpsb
adc
sbb
in
add
out
scas
test
or
push
sbb
mov
dec
pop
cmp
pop
cld
xlat
hlt
repnz
out
mov
cltd
pushaw
in
pushf
push
mov
into
clc
push
mov
les
outsl
js
ds
xor
push
data16
or
inc
sub
mov
inc
sbb
testb
xor
push
mov
pop
fldt
lock
ror
testl
push
aas
xchg
in
push
push
mov
or
pop
mov
dec
mov
sub
out
jbe
enter
nop
sahf
aam
or
cld
xor
pop
cmpsb
mov
ror
cmp
enter
push
addr16
adc
xchg
xchg
cmp
xorb
pop
lret
add
cmp
pop
test
icebp
push
xor
test
in
dec
testl
cmp
jp
inc
lret
mov
shl
xlat
out
push
sub
add
ljmp
rcl
jg
js
inc
sub
xchg
mov
and
mov
lods
sbb
leave
int
mov
bound
push
std
test
sbb
mov
add
das
or
es
int3
aaa
mov
jns
test
xchg
fcoms
rorl
pop
mov
int3
sbb
aas
xor
outsb
ret
sub
mov
jl
popa
push
gs
push
push
shl
add
xchg
xor
cmp
sub
out
fstpl
pop
pusha
xchg
mov
jno
out
movsb
andb
lods
lret
push
fsubl
jp
inc
xlat
dec
mov
lret
ds
dec
adc
push
xchg
clc
imul
scas
cmp
jb
xor
sub
inc
lods
or
in
es
enter
cmpsb
push
jnp
cmp
jmp
mov
aam
orb
imul
jns
sub
jne
rcl
inc
movsl
stc
mov
sbb
jbe
jnp
in
pop
mov
cmp
loope
add
mov
addr16
jo
movsb
mov
sbb
imulb
test
mov
insb
aad
push
out
imul
test
push
mov
mov
stos
sar
push
shlb
xor
insl
jl
and
test
xor
lahf
push
cmc
adc
test
and
sahf
addl
aas
mov
jno
mov
fucomi
enter
je
adc
es
pop
sub
mov
pop
sti
icebp
ss
es
lahf
lea
sbb
mov
popa
or
sahf
cld
stc
in
jnp
fdivl
test
flds
cmp
dec
dec
xchg
rolb
je
out
mov
imul
jae
or
cld
inc
fdivrl
dec
imul
test
ja
and
and
and
call
popa
imul
inc
xor
add
inc
cmp
inc
hlt
jge
fxch
dec
rorb
and
and
nop
fisubrs
imul
jge
stos
or
push
sbb
clc
fcompl
les
cmp
sub
or
sbb
push
lds
pop
sarl
hlt
jae
in
mov
push
pop
xor
idivb
mov
add
call
outsb
insb
jmp
mov
popf
popa
xchg
mov
pop
or
sub
push
mov
clc
popa
test
sbb
mov
je
lea
mov
and
ds
adc
call
xchg
jl
pusha
outsl
and
push
pop
and
mov
xchg
rol
xchg
xor
push
mov
les
cwtl
aam
ret
and
dec
pop
gs
mov
aam
xor
int3
enter
flds
mov
scas
popa
pusha
inc
mov
mov
add
mov
push
jne
leave
or
or
test
pop
mov
xchg
orb
loope
mov
sbb
int
iret
sahf
sti
loopne
xchg
repnz
test
inc
lods
mov
xchg
cld
pop
xor
insl
xlat
or
push
aam
sbbb
mov
jle
sbb
mov
stc
sub
push
push
pop
fbstp
pop
mov
push
std
inc
es
adc
ja
pop
xchg
and
mov
mov
or
and
inc
xlat
mov
test
pop
xlat
fwait
adc
in
daa
ds
mov
clc
mov
aaa
sub
push
add
outsb
lret
test
jmp
sahf
ret
mov
out
shlb
and
inc
scas
mov
imul
test
movsl
push
aad
xor
lock
inc
scas
jo
shlb
out
faddl
repz
or
xchg
xchg
xchg
call
pop
aas
push
sbbl
pop
jno
addr16
lahf
or
ss
mov
xor
scas
xor
adc
cmpsb
or
xor
ss
mov
add
ljmp
inc
pop
inc
add
daa
sahf
sub
clc
std
stc
push
lock
or
jl
mov
xorl
pop
push
scas
sub
pop
subl
add
mov
add
and
cli
subb
fistl
xor
loopne
je
jle
nop
or
stos
cli
sarl
push
jno
mov
push
hlt
push
aaa
push
inc
push
test
cwtl
push
sub
jne
lcall
lahf
int3
mov
outsb
mov
fdiv
sahf
bnd
adcl
xchg
dec
scas
in
rorb
jl
fstpt
inc
das
movsl
in
js
fisubrl
movsb
cmpsl
iret
mov
ret
cmp
cmp
pop
lods
mov
pop
push
jp
into
imul
neg
adc
loope
adc
adc
fsin
sahf
imul
cmp
enter
or
mov
mov
fsubr
mov
and
test
imul
lds
pop
dec
mov
push
push
lods
xor
pop
mov
out
movsl
mov
pop
mov
adc
pop
mov
xchg
dec
sub
stos
cmp
cmp
mov
sbb
mov
push
test
xchg
bound
jno
sbb
push
pop
cmp
adc
push
cmp
lcall
adc
aam
xchg
xchg
xchg
jb
shl
std
adc
xchg
popl
cmc
loope
repz
jle
mov
push
adc
ja
dec
xchg
mov
pop
shl
push
test
sahf
repz
push
out
inc
push
out
notb
dec
jecxz
bound
bound
mov
shlb
sub
add
lock
push
jecxz
inc
fsubp
add
jne
cmp
movsb
pop
movsl
fwait
rcl
jle
dec
jmp
js
mov
fstpt
sbb
add
test
adc
ds
out
out
sub
mov
sti
ljmp
in
gs
inc
test
mov
lds
sub
mov
jl
mov
and
cmp
cld
inc
pop
arpl
cmp
jns
aaa
push
xchg
jge
lods
push
push
push
jp
test
xor
sub
pop
push
xor
pop
data16
jnp
xor
lock
cmc
test
dec
xor
stos
push
pop
sahf
test
lea
enter
lahf
sbb
or
lea
jl
xchg
jle
push
sbb
sub
repnz
nop
aad
mulb
xchg
push
std
inc
test
pushf
movsl
in
mov
insl
mov
fdivrp
out
mov
xor
push
ja
jne
test
add
push
pop
sbb
mov
or
jno
lret
dec
ret
imul
adc
and
shlb
in
cmp
shll
les
sub
mov
out
dec
js
fsubrl
push
jg
std
xchg
mov
and
mov
rclb
mov
jae
bound
stos
xchg
xchg
into
xchg
dec
mov
inc
cmp
sub
mov
push
out
ret
adc
pop
scas
jle,pn
dec
jle
inc
fstps
repnz
sbb
addr16
xchg
add
pop
add
push
lcall
or
and
lret
jb
cmp
xchg
xchg
enter
shl
pop
fcomp
std
out
sarl
scas
push
push
shlb
jmp
xlat
iret
gs
arpl
movb
mov
dec
fidivrl
jl
loopne
cs
test
data16
sbb
cmpsl
lret
xchg
mov
jg
js
xlat
xchg
and
xchg
push
xor
sbb
add
and
roll
jmp
jg
xchg
jnp
add
les
in
jecxz
fistpll
jbe
cwtl
add
adc
shlb
cmc
cmp
xchg
mov
dec
aam
cmp
fnstsw
aad
pop
cmpsb
inc
xchg
and
xor
jecxz
fwait
mov
dec
sbb
fwait
in
test
repz
pop
push
mov
mov
cmpsb
rcrl
xor
cmp
cmpsb
jg
fsubl
std
dec
fwait
cltd
es
push
add
jae
aad
in
iret
gs
jmp
push
addr16
push
cld
inc
scas
mov
mov
xor
das
mov
es
dec
daa
add
mov
add
pop
or
dec
mov
dec
add
jmp
in
jno
or
insb
mov
and
add
xchg
js
sti
push
push
dec
mov
outsb
iret
stos
icebp
jp
fadd
sti
cli
jmp
or
cmp
sub
div
pop
jecxz
lea
cwtl
mov
testb
sbb
adc
popf
stc
inc
or
cs
movsl
push
in
or
jo
xchg
aaa
pop
lods
inc
jg
mov
pop
push
std
pop
inc
lea
es
push
fidivs
into
adc
sarb
pop
xor
or
es
mov
clc
sbb
fs
mov
cmp
jecxz
and
aas
dec
sub
js
int3
aaa
repnz
stos
fldl
add
les
adc
jle
mov
push
mov
pop
pop
inc
mov
mov
cmp
adc
mov
xchg
or
or
or
adc
fwait
shll
mov
iret
aas
mov
notb
ret
lcall
imul
xor
cli
or
aam
ljmp
insb
ja
pop
xor
out
xor
pop
jmp
inc
push
push
in
loop
lds
enter
mov
out
imul
push
aam
or
test
and
pusha
mov
push
add
or
ss
cli
int3
inc
loop
in
dec
xchg
push
push
xor
js
popa
mull
push
jae
and
push
xor
lret
movsl
subl
pop
dec
mov
stc
pop
mov
fistpll
loope
pop
sub
push
fdivrl
add
and
pop
xchg
xchg
lahf
and
bound
xor
jae
or
rorb
pop
out
jns
xchg
mov
add
movsb
loop
or
jle
ds
sti
loopne
clc
dec
mov
outsl
aaa
icebp
cld
cltd
sbbb
stc
sti
arpl
mov
daa
imul
cwtl
stc
push
ficompl
pop
int
jne
and
dec
push
call
inc
iret
test
mov
or
mov
es
lods
jne
mov
daa
jns
inc
push
int
push
lock
loope
mov
dec
fwait
cmpsb
jle
push
pop
cmp
mov
rorb
aam
ficomps
cmp
shlb
inc
xor
outsw
push
and
cltd
mov
inc
enter
ret
xchg
out
push
ja
mov
xchg
rcrb
ja
cmp
dec
les
ljmp
dec
dec
popl
inc
faddl
xor
cmpb
dec
mov
push
repz
loope
xor
xchg
test
jecxz
and
stc
lock
outsb
sbbl
ja
add
or
imul
outsl
mov
mov
push
pusha
xchg
inc
mov
rolb
rcr
rcl
cmp
test
std
mov
jecxz
inc
test
add
aam
daa
aaa
dec
je
scas
and
push
cmp
jg
dec
sub
push
mov
pop
mov
jecxz
popf
loop
jg
adc
mov
pop
rcll
aad
movsb
popf
lea
dec
push
pop
rclb
orb
xchg
test
stos
jo
jns
or
iret
dec
lods
pop
out
jmp
jge
sbb
ret
mov
daa
adc
xchg
lea
push
mov
insb
pop
mov
push
xor
hlt
js
icebp
loope
cmp
jae
pop
inc
cmp
jnp
xor
in
aaa
out
sbb
push
push
mov
mov
iret
pop
and
and
pop
out
sarb
mov
fwait
ret
fbstp
cli
cld
stc
inc
fimull
mov
mov
or
outsb
inc
fstps
int
cmp
jle
inc
stc
pop
shlb
psubsw
int
adc
inc
add
adc
jnp
or
fimull
mov
fsubrl
gs
push
xor
sti
xor
dec
xor
std
pop
push
push
or
jno
std
xor
xchg
addr16
mov
fists
ret
jmp
popa
mov
mov
mov
ja
inc
mov
push
push
and
fbld
cli
repnz
push
call
repz
adc
repz
pop
iret
xor
add
int3
xlat
mov
xchg
rolb
pop
sub
dec
scas
lods
pop
pop
inc
cld
xor
push
stos
sub
dec
iret
inc
mov
in
stos
pop
loopne
jp
sub
mov
sub
cmpsb
in
xor
sub
mov
repnz
test
sarl
add
enter
imul
orl
fstps
sti
add
and
jle
mov
mov
jo
add
sub
xor
cmp
movhps
lret
fwait
xor
pusha
xor
iret
jge
mov
xchg
mov
dec
in
jb
cltd
imul
lods
cmpsl
mov
or
int3
mov
push
mov
mov
icebp
loop
jle
inc
sub
or
xchg
bound
mov
or
jne
add
inc
fadds
add
idivb
push
cltd
cmc
sbb
aad
in
xor
adc
add
jmp
push
dec
and
mull
insb
cmp
shlb
ljmp
popl
pop
insl
test
mov
leave
adc
filds
jl
push
call
icebp
movhps
add
dec
lds
fildll
jg
lea
jl
inc
addr16
jge
inc
stc
call
subl
test
popf
adc
div
push
xor
js
test
fwait
cmpb
and
mov
adc
lcall
das
mov
hlt
lea
repz
in
pusha
das
xor
mov
mov
xor
outsb
ret
jp
dec
pop
fmulp
mov
lea
stc
fmul
push
ret
lret
mov
add
sbb
cmp
in
shlb
sub
ja
es
sbb
cwtl
xchg
mov
imul
scas
mov
push
lret
push
jle
or
testb
push
xchg
std
push
and
or
xchg
xor
lcall
add
mov
mov
pop
test
mov
jb,pn
mov
fs
xchg
mov
sbb
outsl
sbb
sbb
addr16
sub
pop
cmpsb
divl
shll
mov
jo
notb
fs
dec
pop
push
in
xchg
in
test
pop
popa
mov
add
lret
cmp
hlt
sub
fs
mov
cmp
cmp
sbb
nop
gs
sub
in
fs
sahf
xor
jg
popa
inc
mov
dec
outsb
adc
or
sub
jg
mov
pop
rcll
fnstcw
push
mov
jb
and
sbb
or
sbb
mov
push
push
xor
cmp
mov
push
cld
aad
adc
shll
popf
and
test
cld
cmp
mov
loopne
scas
aad
xchg
cmp
jl
outsb
leave
add
in
xchg
icebp
test
dec
and
rclb
cli
cli
test
mov
add
icebp
jl
hlt
sub
aam
test
cmp
ljmp
pop
orb
rolb
aaa
lret
dec
jb
rorl
push
in
inc
pop
cmp
out
lcall
pop
bound
out
je
mov
incl
daa
push
jae
leave
xor
scas
out
sbb
sbb
sub
pop
cmp
xchg
ficompl
mov
dec
xorl
lcall
pop
push
xchg
jle
xor
pop
stos
cmpsl
mov
aas
lret
pop
int
cmpsl
insl
mulb
jae
data16
popf
lds
sub
lret
mov
out
jno
mov
jnp
adc
dec
shlb
or
mov
cmp
mov
jb
sub
jae
mov
mov
adc
push
inc
mov
dec
mov
or
jnp
scas
add
fstps
and
sub
cmp
xor
and
mov
ret
aam
shr
std
aas
outsb
jb
divl
xchg
fnstsw
nop
or
jbe
js
push
mov
stos
mov
addr16
js
mov
cmp
pop
jns
xor
clc
pop
iret
addr16
push
add
add
call
js
sub
jbe
pop
lret
sub
fadds
sub
pop
in
sbb
mov
mov
or
orl
xor
sahf
nop
push
xchg
je
adc
fsubrs
imul
jecxz
mov
dec
mov
mov
inc
inc
push
sbb
fnstsw
mov
bound
push
pop
push
lds
adc
pop
fstps
leave
or
push
jo
jne
cmp
mov
mov
xchg
add
push
sar
dec
push
jmp
cltd
mov
loopne
jmp
jns
jg
push
jbe
sbb
rol
fdivrs
pusha
mov
add
jne
sub
adc
add
call
bound
aaa
inc
xchg
add
repnz
fstpt
add
ret
scas
cli
jno
xchg
mov
or
out
lds
adc
out
and
daa
mov
outsb
aad
sbb
inc
das
loope
xor
xor
insb
inc
mov
pop
gs
adc
test
add
push
pusha
decb
push
pop
nop
movsb
mov
sbb
imul
mov
jp
jb
add
cmp
push
inc
pop
mov
rcrl
mov
jp
out
dec
mov
call
push
fidivs
or
push
push
pushf
movsb
test
js
mov
sub
loope
pop
push
sub
dec
dec
ds
xor
imul
movsb
mov
mov
aas
icebp
andps
mov
or
mov
lods
dec
pop
aaa
into
mov
leave
mov
scas
pop
xchg
iret
test
ffreep
in
neg
pop
stc
data16
cltd
dec
push
add
rcll
out
scas
pop
or
inc
inc
xorl
mov
jle
mov
imul
xor
sbbb
mov
repnz
loopne
dec
pop
lea
or
sbb
test
jne
xor
xor
sahf
add
popf
cltd
int3
push
out
out
shrl
loope
xchg
jl
cld
xlat
xchg
ljmp
rolb
mov
inc
gs
lods
sub
clc
arpl
in
inc
inc
int3
cmp
adc
enter
lds
dec
or
fnstcw
notb
rorl
cwtl
insb
dec
pop
cli
loopne
push
mov
sbb
addr16
mov
push
adc
adc
jno
cwtl
mov
repnz
dec
xchg
stos
scas
stos
pop
repz
adc
mov
sar
mov
jnp
cmp
mov
aas
les
cmp
jae
mov
cmova
mov
push
cltd
fistps
xor
mov
jns
stos
jo
aaa
sbb
push
sub
pop
cld
loop
fidivrl
fidivl
jnp
or
divl
xor
icebp
out
add
pop
xchg
lods
inc
sub
inc
dec
push
pop
into
ljmp
in
push
push
test
jno
xchg
into
movsl
outsb
lods
leave
stos
roll
aaa
cmp
fsubp
xlat
dec
mov
clc
lret
jge
insl
xchg
ja
fistpll
sub
rcll
mov
popa
mov
ss
jl
insl
stos
xchg
int
jo
and
idivb
and
ljmp
xchg
sub
xchg
mov
push
cmp
adc
pusha
fs
ds
divb
lods
das
xchg
sub
jl
clc
adc
sbb
ret
cwtl
dec
mov
pop
or
mov
in
sbb
fiadds
lret
test
mov
cmp
jle
adc
pusha
loop
add
ljmp
orb
xor
add
jg
add
xchg
dec
in
xor
arpl
dec
inc
jmp
xchg
or
out
fwait
sbb
imul
pop
or
or
nop
insl
icebp
or
out
int
mov
xlat
daa
xor
sbb
cmp
pop
cld
push
icebp
das
mov
daa
mov
cmp
mov
cmpb
sti
push
sahf
hlt
stos
or
fmulp
jns
outsl
icebp
test
mov
adc
add
jecxz
stos
or
pop
jae
push
movsl
jg
xchg
aaa
pusha
out
insl
jge
xor
sbb
ss
test
ljmp
add
push
mov
cmp
mov
mov
xchg
mov
outsb
into
push
xor
push
mov
mov
leave
add
add
and
bound
bound
stc
out
jne
add
lahf
icebp
adc
push
xlat
cmp
dec
in
mov
push
add
mov
xchg
pop
mov
outsb
jae
mov
push
adc
sbb
test
inc
and
jb
dec
rorb
test
push
sub
clc
test
push
mov
xor
mov
push
ja
test
movsl
ret
mov
sbb
popa
cmpsb
mov
mov
push
pop
cmp
cmc
sahf
popa
insb
mov
inc
cmp
pop
xchg
std
xor
mov
jle
dec
ss
mov
inc
mov
aas
inc
sbb
lock
ret
adc
aas
mov
sub
ljmp
ret
repz
hlt
in
push
fwait
sbb
loope
das
and
imul
jl
pop
pop
pop
enter
pop
mov
aam
dec
jl
loope
or
xchg
cmpsl
popf
adc
sub
rcrb
adc
in
xchg
xchg
ja
dec
sahf
xchg
jle
sbb
shl
and
mov
bound
out
cmc
addr16
inc
jae
dec
lret
adc
mov
cwtl
pop
mov
dec
cmpsb
fdiv
outsl
test
and
push
cmp
sub
rcrl
scas
adc
fnstcw
daa
popf
sub
lds
imul
pop
cwtl
mov
add
inc
xor
stos
adc
out
sbb
and
mov
aaa
inc
push
dec
cmp
mov
lock
aas
leave
test
sub
push
add
int3
pop
sub
jbe
inc
scas
xor
ljmp
lahf
inc
fwait
lret
pop
mov
js
sub
dec
lds
and
test
or
pop
xchg
loop
sbb
xchg
jb
iret
imul
sub
negb
sbb
clc
push
inc
sahf
or
sbb
inc
or
testb
or
and
xchg
push
out
and
repz
outsb
or
mov
and
das
cmp
sarl
ds
outsl
xor
pushf
jae
mov
fdivl
dec
scas
mov
push
fistpl
stc
jle
inc
push
rol
in
aas
shl
gs
sub
cmc
popa
push
push
fcompl
xchg
pop
ja
or
mov
xchg
jmp
jmp
or
lahf
int3
aas
push
andb
xchg
movsl
pop
rol
or
clc
les
jle
insb
nop
jge
arpl
mov
mov
mov
xor
dec
ror
cmc
lahf
sub
inc
incl
ret
mov
jns
mov
push
or
aaa
push
enter
shl
dec
mov
or
test
dec
mov
cwtl
insb
test
lret
mov
push
xchg
imull
adc
pop
mov
mov
and
add
jmp
aas
pop
fnstenv
push
xchg
xor
mov
add
div
jecxz
jmp
repnz
push
das
outsl
push
mov
dec
cmpsb
out
jns
hlt
in
xor
mov
push
cmp
jmp
in
cmp
and
and
sub
adc
movsl
mov
cs
mov
jbe
fcomi
mov
mov
mov
pop
cmp
mov
jp
fcoml
adc
lahf
fstl
dec
js
nop
into
cld
hlt
mov
out
rcr
xchg
clc
adc
pop
pop
mov
lods
in
sub
or
ds
jns
cmp
stos
int
mov
mov
push
pushf
cwtl
aad
dec
stos
movsl
fidivs
dec
nop
dec
pop
push
rcrl
pop
add
or
das
xchg
xor
pop
pop
fisubrl
outsb
and
daa
add
lea
rorl
inc
cmpb
mov
clc
pop
mov
fimull
add
addl
mov
adc
ficoms
sub
add
jmp
mov
les
int
rcr
popf
lods
rep
pop
repnz
xlat
mov
pop
mov
pop
pop
movsb
es
mov
push
cld
sub
add
clc
push
mov
aas
test
jne
cld
or
loop
test
sub
fstpl
popa
dec
into
mov
sbb
mov
adc
xchg
adc
aaa
outsl
and
push
jle
movb
and
and
gs
add
hlt
push
lods
ljmp
xor
mov
ret
inc
incl
jmp
and
scas
mov
fbstp
bound
inc
cmp
clc
inc
push
mov
sbb
fistpll
jmp
pop
push
cld
cld
shll
push
fwait
hlt
jb
ret
sahf
into
sbbl
or
jno
xchg
add
addr16
lods
cmp
test
xor
loope
fsubrl
add
loopne
dec
sar
sub
jb
mov
cmp
imul
loopne
push
lock
xchg
push
mov
fs
fidivrl
inc
pop
sar
mov
movsb
pop
or
loopne
in
and
popf
inc
fwait
sub
or
sbb
in
lods
arpl
push
lock
jno
in
stc
xchg
pushf
mov
das
repnz
adc
sbb
mov
es
stc
push
xor
jmp
cmp
xchg
xchg
lahf
xor
popl
push
jno
and
add
dec
or
fsubl
push
sub
lock
sbb
and
enter
lea
mov
cmp
ret
xlat
ret
in
out
pop
cli
xchg
mov
shrb
cltd
stos
aaa
pop
jmp
les
jns
xchg
das
roll
fbstp
mov
insl
xchg
das
loopne
adc
jecxz
test
lret
inc
jl
sub
std
jb
out
push
fsubl
mov
adcb
jmp
fldt
scas
and
sahf
aaa
shll
gs
ret
std
inc
lret
push
rcrl
cmpsl
xor
inc
in
inc
or
and
arpl
push
je
sbb
push
mov
jne
out
mov
sub
adc
cltd
arpl
je
mov
dec
pop
add
in
sti
imul
sbb
sub
pusha
fsub
cmp
test
movzbl
sub
or
test
imul
rcll
pop
cmp
subl
sbb
daa
dec
mov
push
jmp
mov
push
pop
adc
rclb
xchg
fcompl
jmp
jecxz
jne
loop
add
mov
shl
outsl
push
pop
sbb
mov
js
xchg
sbb
push
test
add
gs
pop
fwait
mov
int3
out
adc
sbb
minps
add
push
fdiv
jmp
aas
out
push
jp
cmp
inc
lods
push
mov
sahf
shll
dec
lods
test
xor
inc
rcl
and
xchg
ljmp
dec
in
lret
insb
push
lcall
adc
ds
insb
dec
inc
xor
out
lods
push
lahf
sbb
rcrb
daa
pusha
add
pop
sbbl
sub
sbb
fidivl
xlat
mov
xchg
sahf
imul
out
xlat
bound
imul
lcall
scas
stos
arpl
add
imul
movsb
decl
out
nop
mov
insl
sbb
sbb
pop
sbb
add
mov
fstl
mov
mov
mov
imul
cmp
dec
push
int
out
scas
pushf
adc
mov
push
das
das
cmp
mov
inc
jb
scas
jecxz
shll
mov
movsl
sti
pop
rcl
aas
stc
add
rolb
sub
cmp
add
sub
sub
xchg
movb
or
popf
fs
jp
add
in
mov
daa
lahf
mov
les
cmp
test
divl
insb
mov
mov
push
pop
jle
cmpsl
fisttpll
mov
aaa
xor
sbb
outsb
sbb
add
hlt
inc
mov
fcoml
push
pusha
pop
lret
ret
push
xchg
and
mov
daa
rcrl
xor
mov
lret
pop
adc
inc
cmp
pop
popa
adcb
push
cmp
cmp
jge
inc
sub
push
imul
out
data16
jae
mov
pop
xorb
add
mov
push
xchg
lods
xor
jo
xchg
stc
test
xor
cmp
notb
sub
cmp
dec
psllq
and
popa
btrl
popa
sub
popa
add
insl
mov
and
ret
jbe
adc
cmp
ss
mov
imul
mov
adc
addb
cmp
jle
adc
pop
or
lahf
dec
arpl
cmp
sbb
mov
cmp
cmpb
shr
shlb
xor
js
test
and
je
mov
dec
pop
mov
cs
movsb
pop
test
fdivl
lds
pushf
insb
int3
mov
jbe
jge
push
testl
push
stos
adc
addr16
das
stos
sub
mov
lahf
loopne
pop
in
push
shlb
pop
les
pop
fsubl
cmp
inc
push
cld
mov
jae
cltd
add
cwtl
ss
xchg
in
cmp
ret
push
dec
dec
xchg
and
jo
jno
mov
mov
sub
mov
add
mov
aam
pusha
mov
sbb
xchg
aaa
sbb
les
pop
xchg
into
mov
stos
test
icebp
gs
sub
jecxz
call
lods
sub
ret
iret
dec
call
mov
sbb
xchg
mov
ret
xchg
push
call
arpl
add
dec
sbb
insl
jp
mov
lock
sub
shrb
test
icebp
cmp
or
cmp
dec
inc
push
push
cmp
cmp
push
cmp
std
insl
lret
shlb
test
cs
sub
xor
testb
sub
sub
aaa
or
xor
or
xor
or
rcll
adc
inc
dec
or
mov
push
test
femms
sbbb
cmp
jmp
mov
shlb
xchg
pop
mov
roll
movsb
ds
cmp
dec
and
rorl
ljmp
sbb
pop
punpcklwd
cmpsb
jg
aad
outsl
push
shlb
dec
in
sub
xor
push
into
inc
push
shl
xchg
in
mov
push
inc
xchg
jae
jne
scas
mov
iret
fimuls
xchg
pusha
out
sahf
imul
mov
fsubrs
subb
pop
mov
outsl
pop
inc
lret
icebp
pop
add
nop
mov
or
mov
push
pop
xorl
mov
out
fs
sbb
xchg
bound
or
adc
or
test
jmp
arpl
bound
aam
sbb
out
ds
inc
and
enter
push
sbb
scas
iret
addb
pop
jne
xchg
stos
mov
inc
pop
js
jns
jno
cmp
dec
xchg
imul
and
xchg
pop
xor
arpl
mov
cmp
cs
subb
mov
and
inc
mov
xlat
cs
insl
inc
into
inc
xchg
popf
inc
lods
pop
das
data16
lods
dec
cmp
je
lret
int
or
jb
out
jb,pt
loope
mov
popf
data16
cmp
pop
test
mov
hlt
inc
cli
pop
xor
mov
mov
mov
push
or
inc
cld
or
lds
ss
fadds
cmpsl
xchg
xchg
or
mov
ss
out
sub
test
dec
pop
and
idivb
push
jo
hlt
sbb
mov
pop
test
fs
or
outsl
outsl
arpl
jae
outsl
adc
dec
pop
xor
push
sbb
xlat
mov
jae
daa
push
and
push
jno
sbb
cmp
cmp
fadds
sar
or
nop
lods
filds
mov
mov
cs
dec
jle
dec
pushf
pop
mov
addr16
pop
iret
outsb
xchg
cmpb
add
fldl2e
adc
data16
test
sahf
inc
add
rcl
mov
dec
jge
mov
divb
lret
lahf
mov
and
dec
int3
add
mov
add
subb
fwait
in
vpmovzxbq
pop
mov
jnp
mov
fcoml
push
add
test
and
and
in
fisubl
addr16
fadd
and
test
add
pop
xor
sub
and
in
fisubl
addr16
or
hlt
push
push
pop
insl
cmp
out
dec
aad
cmp
cmp
int3
out
or
out
les
cmp
sbb
popa
cld
in
insb
add
jmp
repz
inc
jnp
jecxz
mov
adc
out
push
out
lcall
push
sbb
lret
mov
pop
xor
mov
sahf
pop
push
fucomi
adc
int
sbb
out
jle
xor
lcall
fistpll
push
lret
dec
xchg
sub
cmp
popa
call
int
das
ds
popa
xchg
lret
jle
leave
dec
call
fldt
jge
sbb
cli
sbb
popa
int
mov
jle
rcll
or
pushw
aam
mov
roll
stc
enter
jmp
or
out
int3
enter
mov
jg
xchg
mov
pop
sbb
jb
fwait
push
and
sub
xchg
sbb
sub
fs
sub
xlat
adcb
cmpl
xor
xchg
xor
loopne
out
mov
lcall
rcrl
push
adc
clc
pushf
std
aaa
lods
and
jne
test
adc
xchg
shrb
jo
loope
test
movsl
inc
or
ljmp
push
mov
sbb
or
call
push
lods
push
or
fnstenv
movsb
jno
in
arpl
lea
inc
push
sbb
int
movsl
imul
lret
jl
xchg
rclb
rorb
inc
sbb
jl
ror
idivb
scas
sti
pop
push
dec
jae
dec
dec
mov
and
inc
movsb
jp
loopne
mov
xchg
push
icebp
icebp
or
in
inc
pushf
adc
enter
mov
or
out
sbb
mov
mov
mov
pushf
adc
out
xor
testl
pop
xchg
mov
stc
cmp
popf
mov
testl
and
add
aam
and
or
lods
xor
or
addr16
and
les
int
call
jge
xlat
loopne
mov
lahf
int
mov
pop
xor
jl
pop
inc
cmpsb
out
fs
scas
fists
rcl
test
es
insb
jl
insl
lahf
push
pop
sbb
xchg
mov
push
dec
mov
push
adcb
push
xor
cmp
hlt
daa
sub
sbb
pop
hlt
add
xor
int3
cltd
lods
aam
aad
adc
or
pusha
xorl
mov
fs
pusha
sbbl
adc
xor
jmp
xchg
ja
xor
sti
iret
ljmp
inc
push
arpl
sub
jmp
sub
push
outsl
loop
add
cltd
sbb
jae
fcomip
pop
mov
and
push
ja
mov
push
cmp
ret
and
push
scas
repz
test
mov
push
jne
ret
mov
lahf
mov
int3
pop
inc
out
sub
out
pop
sti
and
cmpsl
out
fisubs
inc
imul
add
jmp
icebp
sub
pushf
cs
jbe
mov
sbb
fs
push
jbe
bound
jle
mov
lods
mov
add
jl
int
xchg
inc
out
xchg
int
ror
out
out
mulb
mov
add
aad
sub
stos
enter
loopne
sub
push
mov
pop
pop
fstps
mov
fbld
das
mov
rorl
ret
mov
movsb
out
sub
cmpsb
hlt
mov
test
cs
test
in
cmp
test
xchg
adc
inc
mov
cmpsb
in
pop
shlb
mov
inc
adc
loopne
out
mov
jne
shll
sub
cmpsl
ret
adc
add
cmpl
xchg
sbb
pop
ret
int
je
mull
sarl
mov
xorb
ret
mov
movsb
gs
xor
pop
das
jnp
cmp
pop
sub
test
repz
xor
not
push
popa
mov
adc
lea
std
pop
pop
jl
addb
jg
test
xor
cmp
cmpsl
inc
ret
xchg
out
adc
or
loop
mov
pop
std
dec
cmpsb
in
movsl
jo
pop
sbb
cmp
inc
mov
jne
push
loopne
pushf
aad
inc
mov
repz
push
in
cmpsb
cmpsl
sbbb
or
mov
repnz
iret
fistpl
jb
sbb
test
sbb
jne
dec
pop
dec
pop
push
add
pusha
xor
lret
lret
dec
fisubl
int3
stc
and
mov
clc
out
cmp
pop
pop
pushf
mov
xchg
mov
outsb
mov
push
push
inc
pop
dec
xor
or
mov
inc
push
sub
gs
mov
cwtl
mov
test
int
scas
jb
sbb
mov
adc
ljmp
mov
jecxz
imul
pop
mov
test
pop
push
imul
sub
andb
xorl
test
xor
mov
xchg
mov
sti
bound
xchg
sarb
cld
cmp
xlat
mov
mov
add
test
ret
dec
mov
leave
loop
les
dec
cs
inc
adc
jns
and
dec
pop
dec
lods
adc
sbb
mov
or
ret
xor
fimuls
rcrl
mov
jae
sbb
ds
daa
push
cld
in
fcmovu
mov
xor
in
adc
adc
jnp
je
sbb
seto
insb
jno
mov
popa
add
pop
jb
movsb
cli
push
add
sar
mov
in
out
insb
mov
imul
jge
rorl
mov
inc
or
add
mov
sub
in
mov
pop
and
test
or
imul
pushf
push
repz
xchg
out
jmp
add
es
fldenv
push
dec
popa
dec
mov
int
loop
push
sub
mov
loopne
dec
movsb
cmc
in
cwtl
cld
sub
mov
dec
into
pop
mov
ja
lock
adc
outsb
xlat
jae
push
aad
call
loopne
jb
dec
sahf
scas
sub
pop
into
add
daa
lcall
mov
mov
loop
lea
loopne
lods
mov
sbb
jno
mov
mov
test
daa
dec
fs
into
jge
call
mov
add
out
in
movsl
ret
ficomps
xor
sub
pop
lea
push
push
out
mov
xor
push
sbb
lea
dec
add
fidivl
es
outsb
xchg
mov
mov
or
push
sub
fisttps
cli
loope
inc
push
mov
xchg
mov
add
dec
movsb
fidivrl
or
in
push
jb
xchg
xchg
mov
or
mov
jmp
push
into
add
mov
mov
mov
push
jp
insb
xor
jne
adc
xchg
mov
jp
fidivs
pop
dec
xor
inc
clc
adc
add
mov
xlat
das
incb
push
popaw
push
sahf
jb
xor
imul
popf
mov
jp
ds
nop
iret
jo
icebp
or
shl
scas
js
out
out
xor
xchg
xor
sbb
popf
xor
sbb
cli
psubsw
shlb
cmp
or
pop
repz
push
and
dec
and
cltd
pop
pop
cmpsb
leave
pop
sbb
fcompl
push
aam
jbe
mov
ss
paddw
cwtl
dec
rcl
ret
jmp
int3
push
fadd
mov
call
out
rcrb
or
shrl
adc
jbe
mov
cmp
dec
sbb
ret
hlt
dec
mov
lret
push
push
xchg
jns
pop
roll
dec
push
mov
mov
inc
movsl
adc
std
cmpsb
cwtl
mov
xor
aad
mov
add
pop
test
outsl
pop
mov
rcr
loopne
jp
and
dec
popa
mov
stos
pop
push
mov
stos
sub
call
lods
rorl
mov
jbe
in
xchg
mov
push
inc
cmp
bound
xor
and
cltd
sub
jecxz
js
dec
xlat
stos
dec
jmp
adc
dec
push
jb
decb
roll
inc
fs
popa
rorl
jg
mov
sbb
sbbb
mov
mov
mov
lods
lock
or
sbb
iret
mov
loop
mov
cmp
xor
movsb
ret
pop
lcall
in
fnstenv
sub
ds
xchg
or
fiaddl
adc
xlat
dec
or
mov
fwait
call
notl
adc
fsubr
addl
pop
sub
mov
je
add
xor
xchg
mov
pop
add
and
mov
lock
or
fldl
imul
mov
push
ret
xor
imul
cmp
inc
dec
shlb
inc
in
call
pop
mov
icebp
adc
ss
push
pushf
in
xchg
add
lea
push
enter
and
pop
test
shll
sub
pop
xchg
mov
add
arpl
movsb
stos
insl
xlat
push
movsb
aam
test
jb
pop
or
sti
push
int3
das
push
mov
and
pop
cmp
mov
in
pop
xchg
mov
ret
sub
pop
xor
fsubs
sub
xchg
cmp
xchg
dec
or
cli
insl
jns
mov
bound
inc
jbe
inc
aad
lea
cli
add
sti
cwtl
cmpsl
idivb
fildl
imulb
mov
movl
dec
push
clc
pop
lret
js
inc
sub
push
cmp
cld
mov
je
or
and
ret
push
mov
shlb
icebp
fmulp
lock
pop
adc
cwtl
outsl
inc
aad
adc
add
ljmp
xor
cmp
push
jl
imul
and
mov
iret
pushf
stos
movsb
sarb
jo
jmp
jg
sbb
xor
xchg
mov
adc
adc
add
mov
push
push
xchg
sti
mov
cs
dec
xchg
inc
cmp
js
mov
and
mov
mov
jmp
mov
ret
aam
xor
sbb
ds
lods
sbbl
xor
mov
in
add
pop
out
jno
adcb
jbe
bound
js
shll
pop
jae
mov
xchg
sbb
ljmp
inc
pop
dec
sarl
adc
ds
xchg
fsubrs
pop
cli
gs
repnz
lds
mov
and
xchg
jmp
bound
mov
lock
xchg
push
repnz
cwtl
call
rorl
dec
aam
leave
pop
lret
xor
das
dec
fisttpll
lds
pop
cmp
rol
sub
add
jne
pop
mov
loope
sub
enter
dec
mov
addr16
sarl
dec
mov
lcall
pop
inc
pop
addb
aad
pop
add
cltd
scas
in
sub
out
mov
cmp
jo
sar
shr
dec
mov
lods
xchg
popf
and
cltd
dec
push
ficoms
shll
pop
mov
xor
bound
xchg
xchg
sbb
sub
outsl
lret
ds
pop
jae
imul
stos
jmp
rcrb
cwtl
cmp
pop
mov
push
xlat
outsl
cld
jecxz
into
pop
popl
mov
cmp
jp
mov
cmp
jno
lock
push
mov
mov
push
mov
out
xchg
ret
in
or
jbe
lret
mov
xor
adcl
cs
dec
jno
sub
sub
daa
mov
call
mov
jns
mov
inc
push
into
out
mov
mov
es
sub
pop
xor
rcl
pop
arpl
cmp
mov
mov
cwtl
leave
cmp
sbbb
xchg
int3
adc
aaa
jae
test
scas
cwtl
insl
dec
roll
stos
sbb
add
js
popa
data16
and
cmpsl
cltd
iret
inc
pop
and
fbld
xchg
sbb
cmp
and
xchg
shlb
dec
jmp
dec
push
inc
leave
lret
mov
icebp
fistpl
sbb
xchg
cmp
mov
jae
jecxz
hlt
add
decb
cmp
and
or
dec
enter
js
pop
mov
je
out
aam
add
jnp
adc
cmp
dec
pop
pop
dec
jle
and
fsubrs
mov
leave
sbb
sub
js
mov
icebp
push
cmpps
jp
jns
inc
cmpsl
pop
cs
sti
and
mov
shlb
adc
imul
xchg
dec
clc
mov
inc
mov
scas
out
jle
ljmp
sub
jmp
and
pop
adc
mov
or
ja
popf
sub
es
rcrb
test
push
mov
outsl
inc
mov
rorl
mov
jge
pop
cmp
daa
ljmp
movsl
nop
lahf
mov
clc
adc
shlb
push
adc
lret
jmp
inc
movsb
loop
adc
jp
fisttpl
push
push
jmp
jge
cmp
sarb
pop
mov
mov
jmp
add
das
fcmovnb
lods
add
dec
mov
movsl
insl
sub
movsl
cmpsb
stos
cwtl
lahf
jle
iret
fstp
cli
cmpsl
lods
xchg
cs
mov
les
mov
pop
cmp
mov
lcall
nop
pop
or
add
sbb
outsl
shl
push
inc
mov
je
push
xlat
mov
scas
leave
mov
add
lock
ret
xchg
mov
and
cmp
cmp
sbb
push
pushf
push
adc
cwtl
std
or
mov
or
jmp
int
inc
in
movsl
cmp
imul
int
cmpb
test
clc
nop
fucomip
cmc
addr16
icebp
int3
lret
mov
jns
adc
inc
push
cmpl
xchg
add
pusha
fucomi
mov
pop
fmull
pop
jmp
adc
mov
jl
inc
nop
dec
push
movsb
mov
jp
insl
fisubs
xchg
pop
cmp
stos
mov
loopne
arpl
pop
mov
jge
testb
mov
dec
addb
in
adc
and
pop
xchg
out
xor
leave
push
cmp
arpl
cmpsl
push
lock
hlt
push
inc
push
ret
outsb
push
mov
lret
jecxz
add
inc
fadds
pop
xchg
adc
cld
mov
icebp
mov
mov
sub
fnstenv
stos
dec
ficomps
and
jg
mov
out
mov
daa
gs
push
gs
add
xchg
push
out
das
imul
cs
cmpsb
aaa
mov
lahf
hlt
imul
fwait
push
pop
and
mov
xchg
addr16
pop
sbb
fdivrp
lds
outsb
mov
xchg
push
fwait
sbb
daa
gs
push
gs
add
xor
out
inc
aad
inc
je
lods
xchg
jmp
jmp
push
gs
fiadds
jne
sahf
cwtl
push
dec
loopne
xor
inc
int
fsubs
xchg
jp
int3
outsb
ja
xor
and
mov
je
pushf
add
pop
fstps
out
loopne
loop
jns
addr16
xchg
push
xchg
dec
ss
and
jb
lret
mov
movsl
dec
pop
fwait
mov
add
jb
or
xor
test
shrb
mov
xchg
fldenv
jo
xchg
inc
pop
jne
dec
and
or
push
sub
inc
inc
mov
mov
movsl
jge
ds
cmpl
mov
add
mov
cwtl
xor
inc
ja
adcb
cmp
jae
sub
xor
mov
add
adc
add
jbe
aaa
mov
shlb
push
mov
or
popa
test
pop
and
and
fwait
lcall
or
mov
mov
clc
lret
inc
nop
jo
lds
xchg
dec
inc
cmpsl
push
aad
sbb
enter
movsb
pushf
mov
pop
dec
lods
pop
cmc
inc
sbb
ss
mov
fnstcw
lcall
sbb
mov
add
sub
inc
add
push
or
cmp
mov
fsubrs
or
inc
out
or
rorb
xor
mov
mov
fcmovbe
mov
mov
into
cmp
dec
inc
fidivrs
add
jmp
call
jbe
jae
inc
nop
mov
movsl
mov
push
mov
dec
aam
icebp
imul
cld
adc
pop
push
dec
fdivl
or
mov
subb
sub
sbb
leave
out
pop
scas
out
pop
xchg
xor
bound
leave
pop
fistps
cmc
sbb
xchg
mov
xor
scas
push
push
inc
bnd
xchg
xor
loope
cmpsb
insl
sub
pusha
pop
rcll
in
out
sbb
ja
in
js
xor
daa
call
sahf
sub
repz
mov
bound
inc
and
sbb
sti
fldenv
int
stc
sub
push
call
sahf
lds
sub
xchg
jbe
mov
and
das
xor
cmp
lods
ret
dec
subb
jle
orb
or
pop
adc
mov
inc
je
xor
enter
ljmp
or
xchg
cmp
sub
stos
pop
call
add
cmp
loope
stos
sub
shl
data16
dec
outsl
dec
sub
or
mov
fstps
xchg
add
test
inc
or
insl
icebp
movsb
ret
pop
xchg
xchg
pop
aas
push
push
loopne
push
rcl
push
rolb
push
or
pop
adc
out
cld
sub
loopne
imul
push
xor
mov
ja
dec
jns
lret
rorb
xchg
push
ror
cmp
aaa
setno
ss
iret
incb
cmp
es
push
into
xchg
push
jae
adc
sti
adc
push
dec
or
mov
out
sub
lods
mov
invd
pop
call
fiadds
push
cmc
or
icebp
mov
jge,pt
jg
fs
sub
out
or
lahf
xchg
fiaddl
js
or
adc
adc
fsts
test
jecxz
mov
fbstp
pop
insb
dec
lret
mov
cmp
cmp
mov
pushf
add
data16
lret
dec
sub
cmpb
test
mov
jg
cli
leave
insb
and
jo
cmc
movsl
push
sub
sub
mov
pop
shrl
cmpb
iret
das
xchg
out
test
addl
mov
shll
fyl2xp1
inc
arpl
xchg
jle
add
sub
jne
adc
mov
xchg
rol
cmpsb
xor
mov
negb
mov
dec
loopne
push
rol
clc
and
dec
aad
loopne
shrl
dec
dec
sub
int
and
sub
sub
aaa
cmp
mov
jg
insb
clc
test
mov
mov
jl
push
jle
push
or
inc
inc
test
adc
jg
push
aaa
hlt
arpl
vpaddd
stos
in
out
jnp
or
fcmovnbe
fs
fisttpll
mov
loopne
mov
fwait
pop
cmp
cmpsb
mov
jmp
lcall
add
cs
and
mov
stos
sbb
dec
dec
jae
or
rcll
pop
cli
movsb
int3
pop
inc
push
icebp
push
iret
jns
jmp
nop
int
ss
iret
inc
add
dec
ficompl
inc
int
push
adc
lea
arpl
or
stos
adc
cwtl
push
push
xor
and
xchg
xchg
aad
pushf
xchg
out
lds
lods
jb
mov
push
mov
pop
icebp
add
xlat
sub
cmpsl
dec
sub
xor
push
movsl
cwtl
adc
clc
out
sub
mov
add
or
and
aaa
rcrb
insl
jnp
add
nop
and
test
jge
dec
fstl
mov
cmp
sbb
xchg
lcall
fstl
ljmp
repnz
ds
cwtl
inc
mov
mov
xchg
cli
dec
cld
loope
xlat
mov
out
test
sbb
shll
les
ret
test
inc
dec
sbb
enter
in
mov
movsl
dec
cmp
xchg
or
xor
jle
jae
dec
je
mov
push
rol
and
dec
mov
dec
lods
add
push
stc
jne
push
mov
subl
add
sar
xchg
scas
test
mov
jp
adc
ja
or
jae
int3
out
ds
arpl
mov
jp
sbb
adc
rcl
ficompl
scas
xchg
jns
icebp
ljmp
ljmp
and
int3
push
hlt
dec
sub
ljmp
ret
jns
outsl
xor
and
dec
shl
cwtl
aas
adc
popw
xchg
sti
mov
and
and
jge
add
shll
lock
stc
add
imul
inc
inc
divl
xchg
adc
sbb
test
mov
inc
dec
in
cld
cmp
cmp
sbb
aam
jno
repnz
pushw
dec
lods
and
test
dec
cwtl
jo
std
ror
sbb
push
mov
push
movsl
addr16
xchg
adc
aaa
movsl
fistps
jne
stos
imul
lret
cmp
fwait
dec
push
mov
mov
sbb
shlb
xor
insl
inc
lcall
push
sbb
popa
mov
adcb
jae
shlb
push
fsts
push
mov
popf
movsl
mov
jmp
sti
jb
and
jmp
push
mov
ja
cmp
or
lahf
scas
aam
jle
adc
xchg
lret
mov
dec
jbe
jbe
ds
pop
adc
mov
sar
out
inc
out
xor
push
je
sti
into
adc
mov
xlat
dec
cs
int3
push
cmp
sbb
out
sub
popl
lock
fimull
test
dec
clc
loope
mul
insb
push
loop
or
xchg
mov
mov
adc
xchg
jp
repnz
test
xchg
aad
inc
inc
sub
idivl
f2xm1
std
mov
adc
ljmp
nop
or
fildll
fnstenv
daa
testl
movsl
adc
daa
bound
movsb
push
out
test
rcl
xor
test
pop
and
sti
xor
call
icebp
pop
pop
addr16
mov
fadds
int3
sti
cld
and
xchg
inc
outsl
popf
fcoml
cmp
out
sub
xor
xlat
aaa
cmp
mov
lock
fnstcw
mov
call
xor
pop
push
xor
sbb
xor
sub
push
xchg
or
mov
pop
xchg
pushf
sub
inc
push
or
sub
fisubs
xor
jp
sub
addr16
mov
push
popa
sub
ret
jmp
adc
shll
pop
ss
lret
orb
out
cli
mov
fcmove
test
ljmp
out
cmp
or
stos
clc
and
lods
cmpsl
jae
cmpb
push
in
addb
mov
or
emms
insb
jo
sub
mov
aam
jmp
jne
push
imul
xor
add
adc
xchg
dec
push
sarb
mov
sub
lds
cs
sysenter
int3
pushf
rorb
pop
and
jne
inc
mov
test
rclb
in
out
lods
std
pop
out
pop
jmp
adc
dec
pop
push
cwtl
pop
mov
fisubs
pushf
repnz
jl
pusha
arpl
jne
in
lsl
popa
rclb
scas
icebp
aas
xchg
mov
jbe
sbb
sbb
xor
scas
pop
fimuls
fsubl
ljmp
xor
dec
push
jo
clc
mov
lret
jnp
into
es
out
outsb
mov
repz
ljmp
adc
or
pop
faddl
or
arpl
lcall
cwtl
dec
fiaddl
fistps
cmc
mov
ss
inc
ja
xchg
mov
fwait
movsb
add
jg
dec
mov
in
hlt
out
mov
pop
pop
cmpsl
test
inc
cli
pop
adc
xchg
stos
pop
aas
inc
daa
sub
in
inc
movl
aas
cmp
dec
pop
adc
jg
divb
xchg
mov
jae
out
add
xor
popf
ror
xchg
rcr
out
and
stos
fidivrs
dec
pop
dec
testl
insb
movsl
idivb
adc
mov
mov
adc
stos
pop
lret
scas
pop
xor
rorl
loopne
fwait
js
and
aaa
xchg
lock
in
repz
push
iret
mov
and
xchg
cmc
push
or
jecxz
sub
dec
loop
sbb
push
movsl
pop
cs
fs
loope
lahf
int3
stos
cmp
and
ds
cmp
insl
mov
and
add
mov
sbb
enter
cmp
mov
lret
ja
fildll
clc
xlat
xor
popf
sbb
out
cld
or
hlt
mov
push
jl
fsubl
add
or
push
jne
mov
ljmp
cltd
pop
lds
push
sub
dec
sbb
sub
and
push
rolb
inc
insb
in
mov
sub
xchg
adc
mov
movsb
inc
leave
add
test
shrl
jo
pop
sbb
lods
sbb
sbb
mov
sub
fwait
dec
cmovs
mov
popf
jmp
jno
or
sub
push
push
and
mov
jmp
popf
iret
mov
mov
sub
jl
xchg
in
jecxz
xchg
fs
mov
gs
movsb
pop
adc
inc
pop
jp
popa
xchg
dec
mov
fimuls
das
inc
xchg
fstpt
test
mov
incl
lcall
aaa
push
xor
sub
sub
inc
test
dec
shll
push
hlt
xchg
sub
js
in
into
jp
add
sbb
add
add
pop
push
gs
jle
fwait
out
jp
sub
xor
aad
insb
sti
xchg
mov
popa
cmp
outsl
pushw
popf
mov
bound
xchg
pop
mov
mov
cmp
or
hlt
mov
pop
inc
movsb
xlat
add
mov
mov
test
dec
push
pop
fistpl
jge
push
dec
sbb
push
add
sarl
xchg
idivl
cmp
add
repnz
addb
shl
jg
shl
sub
ss
aad
adc
mov
pop
push
cmpsb
insl
inc
push
das
es
jp
dec
mov
jge
inc
in
aas
les
jle
sbb
inc
jg
xchg
sub
pop
daa
imul
xchg
imul
pop
xchg
sub
lret
xor
xor
roll
lret
dec
dec
outsl
cwtl
loopne
jg
scas
lret
fsubrs
xchg
push
imull
int
or
sbb
out
cwtl
scas
rcrl
sbb
lcall
imul
loopne
gs
and
fsubl
pop
xlat
subb
sbb
add
test
push
dec
mov
scas
mov
stos
shrl
xchg
jbe
enter
lock
out
insl
shl
popf
inc
or
test
test
mov
imul
adc
pop
push
in
imul
push
jp
jg
and
aam
imul
sub
mov
jmp
xchg
icebp
rorl
enter
int3
fcoms
inc
sbb
clc
cmp
ret
cmp
push
rcrl
popf
and
mov
es
push
dec
xor
stos
mov
stc
jnp
jg
mov
sub
sbb
xchg
mov
scas
std
cmp
jns
xchg
add
mov
jne
fsub
in
ficompl
xor
mov
push
imul
and
dec
popf
mov
out
cmc
call
fists
adcl
daa
mov
xor
xor
pop
sbb
xchg
dec
test
lock
mov
ljmp
push
fidivl
pop
jnp
fldenv
dec
mov
cmp
scas
mov
in
mov
or
xchg
inc
mov
mov
jbe
lcall
adc
leave
lods
outsl
fsubrl
shll
sub
loopne
add
or
scas
adc
cmp
lock
inc
xchg
fmul
xchg
imul
or
insl
fsubl
aaa
push
push
mov
fdivs
pushf
xchg
in
les
cli
lahf
out
add
and
sub
dec
jno
stc
je
add
mov
mov
stos
test
jg
jg
call
mov
enter
mov
scas
sbb
sbb
leave
int3
mov
dec
fdiv
and
and
jg
or
cmp
pop
and
ljmp
or
fists
or
subl
sbb
data16
pop
nop
call
mov
xor
xchg
add
mov
inc
xchg
dec
adcl
pop
cli
push
jae
ljmp
cmp
cwtl
pushf
and
repz
pop
inc
xorb
pop
adc
inc
sbb
in
jo
cld
pop
adc
mov
cmp
dec
cmp
js
stos
push
sub
test
sahf
xchg
dec
fs
xchg
call
repnz
pop
adc
push
xchg
shlb
lret
pop
sbb
jmp
mov
add
pop
pop
out
push
mov
xchg
pop
loop
and
adc
adc
cmp
xor
rol
xor
bound
ja
mov
clc
scas
int3
jmp
dec
pop
repnz
mov
cmp
pop
mov
inc
pop
dec
movsb
xchg
pop
icebp
mov
jbe
or
imul
pop
jb
jno
movsb
xor
xor
das
les
into
jl
mov
cld
pop
aad
add
arpl
xchg
cwtl
mov
xor
shll
sbb
jge
xor
lret
sub
insb
sbb
fdivrp
ror
mov
jmp
dec
out
cmp
xchg
xor
fs
repz
fldt
cmp
stc
fdivr
lea
in
lret
xchg
sti
loope
inc
arpl
int3
testl
ret
push
mov
dec
sub
mov
out
popa
sarb
cmpsl
sbb
jl
add
pop
mov
gs
mov
lret
add
shll
add
aam
mov
pop
xor
dec
jecxz
xchg
insl
mov
cltd
xchg
adc
fwait
fwait
or
mov
adc
fbld
push
mov
insl
fcompl
sbb
jb
movsb
pop
adc
iret
nop
jbe
ret
popf
push
xor
mov
lods
inc
and
sub
fnstsw
out
cwtl
scas
dec
or
jb
test
add
idivb
and
pop
ret
mov
xor
call
sub
inc
adc
sbb
shl
pusha
pop
and
test
or
arpl
sbb
test
jo
jae
fwait
sbb
jns
inc
dec
jo
cmc
loopne
arpl
clc
and
mov
dec
dec
and
push
xor
lahf
xchg
out
orb
aaa
stos
push
arpl
add
inc
xlat
cwtl
out
adc
mov
repz
test
sbb
add
mov
jg
pop
subb
dec
sub
inc
jno
xorb
sub
arpl
ret
pop
rcrb
das
and
int3
repz
or
xlat
gs
cltd
jno
pop
imul
add
push
dec
fisubrs
pop
pop
lahf
sahf
pop
push
xlat
xchg
ja
lret
or
xor
sub
jno
cmp
mov
jmp
in
incb
sub
jmp
xchg
inc
pusha
adc
pop
jb
mov
sbb
rorl
and
cmpsl
sarb
inc
lds
out
out
add
adc
cmp
sub
pop
stos
pop
jno
sub
xchg
flds
add
mull
and
jge
mov
test
insb
jl
outsl
xor
adc
dec
stos
push
push
imul
sbb
pop
mov
fdivs
jp
jne
arpl
push
lcall
ljmp
popa
and
stc
imul
sahf
mov
push
daa
fisubrl
out
test
mov
in
jb
mov
jae
dec
adc
or
mov
loop
fisubrl
sub
or
stc
xchg
inc
cmpsl
lods
xchg
lcall
insl
dec
loope
test
insb
mov
xor
cltd
jl
pop
xor
mov
jp
push
out
mov
nop
fistl
adc
mov
push
mov
or
push
repz
add
jne
repnz
and
mov
add
ja
mov
pop
int
sahf
jns
jecxz
mov
pop
cmp
push
roll
in
mov
imul
ret
lcall
add
mov
popa
sahf
adc
push
add
xlat
bound
fchs
jo
pop
inc
mov
add
push
adc
mov
in
push
jmp
lock
push
adc
xchg
add
inc
mov
lods
mov
adc
out
sbb
pop
mov
lahf
inc
xor
fs
in
sub
jae
leave
adc
lock
stc
cmp
in
mov
push
and
shll
adc
pop
jne
cmp
shll
cmp
je
cli
sub
or
pop
test
fidivl
rclb
cmp
xor
loop
scas
pop
xor
cmc
test
jmp
xchg
mov
hlt
fdivrl
and
inc
adc
cmpsl
daa
jp
mov
push
dec
xchg
loope
xchg
insl
mov
push
push
call
clc
and
mov
dec
dec
and
push
xor
lahf
xchg
out
orb
aaa
stos
push
arpl
jae
ss
in
sbb
jle
dec
push
in
inc
test
xchg
in
push
stos
bndldx
mov
mov
mov
push
mov
inc
cmp
xor
je
jle
loop
sub
popa
pop
std
adc
adc
ffreep
scas
mov
cmp
nop
mov
xor
js
icebp
push
sbb
mov
loopne
or
lods
push
jb
pop
shrb
insl
test
push
aam
loope
or
out
push
mov
jg
xchg
leave
push
imul
mov
stos
jle,pt
sbb
ret
lock
lahf
push
mov
dec
mov
out
push
addr16
loop
lcall
dec
xchg
inc
pop
es
sub
xor
mov
loopne
or
lods
push
cmp
adc
mov
aas
push
cltd
jbe
or
insl
ja
pushf
pusha
ljmp
inc
dec
dec
stos
lock
and
in
rcrl
mov
push
and
into
fidivrl
push
add
popa
cmc
push
mov
mov
scas
enter
adc
mov
incb
add
cmp
sbb
or
pop
sbb
push
int3
repz
push
inc
repz
push
inc
repz
push
inc
mov
out
xchg
loop
ss
or
dec
in
mov
xchg
loop
mov
out
xchg
loop
ss
orl
jbe,pn
js
ret
inc
mov
cwtl
mov
pop
add
in
dec
or
clc
mov
imul
es
cwtl
cmp
andb
test
movb
jne
xchg
adc
lea
jno
psubsw
fcom
xchg
lods
cmpl
ljmp
std
xchg
dec
ss
dec
pop
repnz
inc
das
sub
add
int3
out
sub
cmpsl
push
cli
mov
loop
insb
dec
xchg
jmp
stos
addr16
add
insb
pop
or
add
mov
and
xor
outsb
cli
subl
push
pop
adc
cmc
adc
or
inc
jb
fnstenv
insb
pop
mov
insl
mov
lret
or
cltd
lcall
xchg
sub
pop
jbe
imul
jbe
imul
pop
nop
xlat
pop
nop
outsl
iret
call
insb
sub
push
pop
adc
fs
add
mov
mov
shll
fs
mov
dec
rcrb
mov
xchg
rcrb
push
sar
jecxz
push
enter
mov
outsb
pop
cmp
push
lea
add
xchg
call
and
push
clc
stc
stc
enter
ja
push
add
popf
sbb
mov
xor
xchg
mov
jo
insl
push
lret
xchg
fimuls
push
xchg
in
xchg
push
xor
loop
pop
jmp
repz
add
push
cmpsb
xor
push
popa
jbe
cmpsb
mov
adc
loope
imul
mov
fucomp
and
icebp
je
xor
ret
pop
call
dec
or
in
push
aad
mov
imul
dec
push
and
adc
fidivrl
push
push
xchg
loopne
call
std
lahf
fisubs
adc
sti
sbb
pop
dec
xchg
adc
cmp
ss
xchg
mov
xor
cmp
dec
mov
lock
loope
js
xlat
hlt
out
sbb
jge
inc
loope
xchg
add
or
in
stc
cmp
pop
xor
mov
rclb
jae
in
jp
or
mov
loopne
xlat
adc
lods
add
rclb
fcmovb
mov
repz
xchg
push
rcrl
ret
push
bnd
dec
loopne
sbb
or
dec
or
cmpsl
cmc
sarl
std
loop
xor
sbb
jnp
mov
jge
and
mulb
pusha
or
pop
xor
or
lea
pop
repz
or
pop
std
jecxz
xchg
pop
fnsave
aas
fs
jo
or
das
cmp
popa
push
xor
add
xchg
push
out
outsb
and
fcomps
fistps
dec
pop
add
cwtl
imul
out
push
bound
repz
dec
cli
pusha
cmp
jbe
test
push
push
pop
repz
fcompl
test
cmpsl
stos
xor
jp
xchg
das
lods
in
xchg
xor
push
inc
inc
out
xor
enter
inc
repz
adc
inc
xor
inc
xor
pop
xchg
fildll
in
test
call
lcall
mov
xchg
aaa
aas
stos
data16
mov
in
orb
push
jg
das
xchg
repnz
inc
pop
daa
ror
and
or
add
dec
push
clc
mov
ljmp
ja
xor
aam
iret
daa
mov
mov
xchg
push
or
lock
jbe
adc
test
fstl
out
pop
std
scas
inc
mov
imul
and
push
test
test
cmpsb
roll
clc
lea
insb
cli
cmpsb
inc
sbb
xor
xchg
adc
cmp
imul
cmpsb
xor
lcall
fcmove
in
mov
andb
inc
or
mov
or
adc
inc
dec
test
or
cwtl
fmuls
cld
test
roll
mov
shl
adcl
inc
xchg
pushf
xchg
leave
inc
loope
mov
pop
iret
xchg
andb
test
mov
and
int
jno
pop
jb
mov
scas
push
sbb
ds
pop
or
jmp
mov
cmpl
test
ja
insl
sub
or
loopne
push
ljmp
xchg
stos
pop
adc
cs
fxtract
daa
imul
jbe
test
gs
in
xchg
mov
sub
test
or
jo
ds
sub
xchg
sti
sub
lret
loop
pop
push
xorb
push
ljmp
mov
out
sub
dec
xor
jo
cld
mov
push
jbe
inc
lret
jmp
jb
pusha
xor
mov
lock
sub
stc
xchg
std
adc
clc
stc
push
mov
shrb
data16
dec
in
ljmp
xor
adc
xor
cmp
fistps
out
push
fidivl
clc
pop
push
pop
push
mov
mov
js
adc
cmc
inc
jl
ljmp
sti
cltd
insb
call
sub
imul
sbb
lcall
xor
dec
inc
push
sub
jo
stos
mov
shrl
in
pop
dec
std
loope
jecxz
jecxz
shrb
sbb
mov
sbb
inc
jbe
pop
fcoml
scas
loop
fcompl
lods
movsb
xchg
dec
mov
ss
scas
cli
mov
ja
incl
cs
fwait
outsb
jmp
sarb
push
cmpsl
repnz
scas
pop
xchg
stos
push
rorb
sub
fnstenv
jb
xchg
adc
daa
xchg
daa
cmc
mov
pop
adc
insl
pop
ficomps
aad
push
shll
xor
testl
es
fs
jo
jne
fwait
cmp
out
sbb
gs
xchg
cmpsl
in
add
push
in
cmp
inc
mov
insb
aaa
ja
lcall
push
and
jp
lea
outsb
iret
push
aas
in
cld
mov
push
sbb
and
pop
jns
std
adc
jo
pop
lock
sarb
mov
gs
mov
sbb
inc
into
push
cwtl
dec
fdivs
sbb
push
hlt
sub
and
andnps
cltd
xchg
adc
sub
sbb
test
push
xor
iret
sbb
add
add
ficoms
daa
push
pusha
cmp
mov
inc
pop
icebp
test
or
faddl
cmpsb
mov
jmp
mov
xor
outsb
int3
fstp
test
popf
adc
decb
daa
rclb
aad
dec
and
mov
fisubrl
das
jo
lds
jecxz
inc
daa
push
mov
cmp
inc
jecxz
int
mov
lret
lods
cmpb
ss
add
inc
and
jmp
and
enter
jle
arpl
out
lods
xchg
in
cmp
into
mov
and
push
sbb
push
adcl
jne
dec
sbb
or
mov
imul
xchg
lahf
push
fldt
mov
xor
in
or
jp
dec
mov
sub
in
test
loopne
lock
cmpb
cmp
pop
mov
in
pop
je
lret
jbe
fidivrs
aaa
cmp
cltd
mov
jno
imull
fs
pop
dec
cmc
dec
cmp
adc
sbb
xchg
popf
jle
mov
adc
ja
sti
mov
pop
push
mov
andb
subb
jp
cmp
test
rcr
aaa
jl
jg
dec
icebp
add
push
xor
push
scas
ds
add
mov
jge
or
lods
mov
std
bound
push
aad
jecxz
add
mov
xor
fmulp
mov
outsl
xor
repz
imul
je
rcl
xlat
or
aad
shrb
or
or
jo
or
daa
hlt
adcb
test
or
sub
lahf
mov
xchg
stos
out
xchg
jg
fiaddl
fs
fldenv
xchg
pushl
mov
mov
jecxz
loope
mov
mov
fs
jmp
push
fimuls
cmp
xchg
insl
push
jne
test
mov
orl
mov
gs
push
jecxz
popf
lcall
and
dec
lcall
inc
aaa
ficompl
fcmovu
jbe
or
dec
cs
cmp
xchg
stos
int
es
push
xchg
push
std
nop
add
cwtl
cmpsl
mov
cmp
aas
push
fistpll
cmp
cmp
in
ficoms
xor
test
jg
mov
mov
fnstsw
xor
arpl
jge
mov
add
mov
cmpsb
mov
test
negb
scas
mov
cli
cli
sbb
sbb
sub
or
cmp
adc
mov
cli
in
cli
das
sbb
jmp
jecxz
mov
pop
push
mov
popa
dec
xor
insb
push
rclb
ss
pop
mov
adc
mov
xchg
test
cmc
push
dec
dec
xlat
ja
sar
out
xor
sub
sub
adc
out
insb
aam
push
fnstsw
out
xchg
pop
in
lds
ss
add
scas
mov
aad
hlt
mov
paddusw
mov
jp
and
scas
popa
push
xor
mov
xor
fwait
mov
adc
cmpsb
in
mov
push
insb
gs
cmp
jmp
pop
test
mov
lea
push
jecxz
pop
adc
xor
fcomp
imul
iret
push
xchg
pop
mov
sub
jae
xchg
dec
mov
cmp
mov
lret
inc
sbb
std
in
cmc
sbb
dec
xchg
loopne
in
sub
sbb
dec
xchg
sub
outsl
lods
jmp
jnp
inc
and
xlat
jmp
frstor
test
cmp
xor
push
repnz
addr16
inc
or
popa
bound
cmp
iret
sti
lds
into
fimuls
mov
and
scas
ljmp
adc
or
sahf
pop
out
sbb
pusha
in
and
mov
lods
push
pop
call
pop
pop
scas
nop
push
pop
ljmp
push
add
mov
xor
aad
icebp
ja
scas
popa
jge
imul
and
test
fisttps
mov
cmpb
ss
add
fcomip
ss
pop
mov
sti
cmp
ljmp
clc
adc
test
ret
sarb
lret
push
jo
das
in
adc
add
adc
addl
cwtl
addr16
adc
adc
push
sub
pop
or
push
repz
push
sbb
ss
int3
xor
xchg
mov
push
inc
jmp
jb
pop
dec
cmpsl
xchg
in
jae
xchg
and
scas
popa
xorl
pop
les
mov
push
cmpsb
mov
mov
mov
imul
outsb
xlat
loop
mov
pop
or
and
int
leave
daa
icebp
lods
mov
adc
fdivs
sbb
loope
lret
inc
xor
ret
jmp
pop
or
cmpsl
sbb
stos
xor
es
in
arpl
popl
xor
nop
xor
xor
outsb
dec
cmp
sbb
xchg
sub
add
sbb
aam
mov
sub
movsl
sbb
dec
scas
adc
sahf
mov
ret
dec
cmp
sub
das
stos
jno
jbe
lcall
jae
in
sbb
push
add
hlt
cmpsl
pop
mov
out
jg
outsb
out
imul
sbb
xchg
gs
dec
cmp
push
jo
sar
push
ljmp
cmc
pop
fists
stc
push
mov
pop
imul
inc
loope
shlb
test
inc
push
xor
pop
ret
or
mov
push
adc
das
jl
and
ja
dec
fmuls
mov
and
mov
loop
push
or
flds
jge
push
xchg
jle
lret
xchg
test
divl
fwait
or
pop
and
xchg
push
mov
in
cmc
faddl
push
mov
mov
loope
cld
cmp
out
and
mov
mov
or
xchg
test
ja
out
dec
sub
pop
add
daa
outsl
dec
gs
arpl
clc
fadd
out
mulb
adc
sbb
adc
insb
lods
and
jb
mov
jmp
scas
cmp
nop
enter
mov
push
js
aas
bts
in
jne
outsl
jp
xchg
aaa
mov
mov
adc
cmp
jge
daa
mov
xchg
push
jg
into
pop
pusha
loop
jns
dec
adc
cld
jp
xchg
add
cmp
pop
fdivr
mov
xor
lds
andb
lods
pop
outsl
test
mov
inc
pop
loopne
dec
mov
pushl
mov
mov
adc
aas
xor
inc
and
and
xchg
dec
sbb
sbb
iret
mov
into
cmpsb
mov
das
xchg
mov
xchg
aas
sbb
outsb
adc
les
call
mov
fstl
divb
arpl
mov
xchg
mov
pop
xchg
test
inc
rorl
push
js
sub
jge
lret
ss
xor
or
inc
mov
and
repz
push
jmp
in
sub
lock
cmp
sub
leave
fnsave
mov
test
cwtl
ret
or
scas
orl
addr16
repz
lret
mov
xchg
inc
jno
jb
gs
ds
loopne
mov
jmp
dec
mov
ljmp
lret
sbb
dec
nop
sbb
das
inc
lods
std
jbe
in
or
sbb
je
lcall
fwait
lea
repz
adc
pop
rorb
shll
ljmp
stc
push
clc
icebp
popf
mov
adc
ret
mov
pop
fidivrl
ljmp
dec
mov
mov
lock
xchg
and
lea
shrb
pop
shll
testl
ficompl
and
add
lret
in
jo
jecxz
jns
pusha
push
and
sub
push
std
dec
fdivrs
ret
rcll
out
push
call
loopne
pop
mov
jbe
xchg
or
mov
jl
push
dec
jmp
dec
ret
mov
dec
in
adc
and
fimuls
aam
push
rorb
mov
mov
or
ss
inc
les
repnz
push
mov
das
aaa
mov
sbbl
xor
ss
mov
sub
cmp
sahf
cld
push
ljmp
ret
lock
movsb
lods
int
dec
dec
fsub
cmc
ret
insb
push
icebp
cwtl
add
or
add
movsb
sarb
ret
sub
imul
ret
push
int3
and
push
jae
fsubr
and
ljmp
add
jl
movsb
mov
push
push
or
mov
xchg
adc
aad
cwtl
sub
mov
cmpsb
sbb
movsb
xor
dec
ljmp
jle
and
mov
sbb
push
adc
lcall
ret
les
dec
aam
and
add
in
lret
dec
mov
cli
jbe
enter
fs
movl
xor
aas
cltd
dec
lcall
mov
add
add
les
xor
xchg
sahf
orb
js
and
jbe
mov
enter
bound
jno
loop
mov
lret
push
test
sbb
loop
les
xchg
pop
mov
or
dec
push
arpl
mov
ret
jnp
inc
inc
dec
js
push
cmp
add
jge
mov
mull
inc
pop
cltd
dec
je
xchg
push
pop
jge
pop
add
cmp
xchg
dec
sahf
push
jbe
repz
fmul
or
je
subl
mov
aaa
pop
jo
dec
xchg
pop
inc
sti
and
mov
sub
push
cmp
mov
mov
jne
pusha
push
test
pminub
out
or
jl
dec
adc
add
into
mov
cmp
movsl
push
int
movsb
pop
inc
push
rcr
push
inc
xlat
mov
stos
or
sbb
push
push
and
popf
and
or
mov
int
testb
xchg
add
sahf
test
popa
add
cs
stos
xchg
jnp
xchg
imul
xchg
add
jae
xchg
dec
mov
add
loopne
xlat
in
int
movsb
cmc
std
mov
xchg
lahf
bound
pop
les
movsl
pop
fldt
mov
ret
fisubs
subl
xchg
mov
popf
dec
lods
sub
negl
jecxz
je
adc
cmc
pop
mov
push
insl
adc
ret
imul
mov
imul
mov
lahf
push
xchg
push
popa
jo
imul
iret
inc
daa
das
int3
outsb
mov
xlat
lea
rol
jb
xchg
cmp
out
jle
push
sub
lfs
movsb
and
jmp
test
and
jbe
das
adc
push
stos
test
rorl
xor
pop
daa
push
or
cmp
popa
or
xchg
inc
inc
lods
fwait
ljmp
cmc
sbb
sahf
mov
mov
inc
test
dec
mov
addr16
jbe
stc
sub
ds
test
aam
push
pop
jbe
rorb
out
call
ss
mov
jmp
popf
mov
pop
in
mov
notb
cmp
daa
scas
dec
jle
mov
stos
lea
ljmp
xor
or
and
out
loop
push
add
cmp
test
in
aad
test
ret
sbb
bound
cwtl
aam
mov
aad
ret
inc
mov
ja
adc
and
decb
loop
dec
call
into
mov
icebp
or
cmp
jg
js
inc
fistpll
out
sbb
mov
lock
dec
or
out
and
adc
test
sbb
xlat
or
xlat
lcall
add
xchg
inc
jmp
mov
lock
fsubrl
ret
fisubl
xor
enter
or
test
jnp
xchg
cmpsb
cmp
pop
mov
xor
scas
inc
sbb
aas
push
mov
sbb
dec
orb
dec
test
lock
repnz
insb
jecxz
scas
mov
pusha
movsb
add
gs
mov
mov
out
imul
rcll
stos
hlt
jbe
cmp
or
inc
adc
xor
outsb
push
jb
and
enter
orb
sub
je
popa
out
mov
mov
icebp
aad
xor
push
incb
iret
icebp
notl
dec
loop
mov
nop
stos
cmc
dec
insl
lcall
ja
dec
imul
pop
adc
cwtl
xor
testl
sub
xchg
xlat
enter
mov
dec
scas
hlt
ds
popf
montmul
cmpsb
add
lods
lods
cmp
mov
cmp
mov
xor
clc
jg
fdivs
mov
les
jg
sbb
cmc
in
pop
and
pop
push
xchg
xlat
xor
cmc
out
orl
push
jl
in
fsubrs
inc
sbb
add
inc
xchg
icebp
push
jge
and
jne
daa
mov
test
fiaddl
add
in
cmp
push
out
je
xchg
push
sub
pop
mov
shll
outsb
mov
sahf
or
lcall
test
push
popa
test
mov
pop
inc
xchg
xor
aaa
xor
pop
jmp
xchg
jb
test
sub
cltd
or
and
mov
andb
mov
fsubl
popl
sahf
push
jno
loop,pt
cmp
sub
dec
rorb
jns
mov
sbb
cltd
adc
sbbl
jo
mov
and
xchg
sbb
ljmp
sbb
data16
int
sub
dec
xor
mulb
pop
repz
test
pop
test
cli
xor
cmp
iret
ss
add
xor
daa
xor
sub
sub
sbb
mov
adc
orl
add
and
sub
stc
add
mov
test
jmp
mov
in
sbb
movsb
stos
push
pop
inc
mov
sub
fisttpl
xchg
pop
xchg
iret
lret
stos
adc
sub
mov
js
stos
push
mov
adc
pop
cmp
in
lods
or
divb
popf
addr16
fiaddl
or
cmp
cmp
popa
fidivrl
dec
sbb
push
pop
mov
popf
addr16
fiaddl
jle
data16
mov
inc
fldt
mov
push
or
pop
and
aaa
outsl
das
add
sbb
jge
bound
cmp
sbb
and
mov
jno
ljmp
sub
jae
ret
out
repz
pop
ficompl
xor
into
inc
add
scas
pusha
or
shll
cld
sahf
arpl
mov
mov
shr
xchg
lods
stos
lcall
movsl
hlt
shrb
or
fmull
addb
fisubs
pop
jno
in
call
aaa
mov
fbld
pop
xchg
mov
lcall
aam
xchg
repnz
sub
hlt
adc
jae
xchg
dec
mov
dec
sbbb
cwtl
pop
pop
mov
insl
dec
inc
jl
xor
jge
sbb
push
repnz
push
add
jae
ffree
js
lret
stc
add
mov
aad
cmp
pop
push
adc
pop
mov
cmc
mov
add
pop
enter
scas
sbbb
or
ret
pushf
lods
sbb
addr16
imul
mov
rorb
pop
divb
sub
cmc
fnstsw
xor
mov
cmc
lods
lock
je
cmp
add
mov
dec
push
push
mov
sbb
fs
mov
sub
into
out
int
out
xchg
sub
lea
lods
and
push
xchg
nop
out
and
sub
xor
pop
sbb
inc
xchg
add
ret
add
pushf
or
les
test
loop
sahf
pop
mov
mov
in
test
les
xchg
data16
jne
xlat
sub
jecxz
jno
insl
mov
stc
cmp
mov
mov
lea
test
aaa
xlat
in
add
adc
or
xor
sub
jge
add
xchg
jno
mov
xchg
out
fistps
cwtl
dec
cmc
jnp
xor
out
bound
xchg
ljmp
sbbl
ror
hlt
ret
mov
lahf
sbb
div
push
popf
fsub
xchg
adc
and
mov
xchg
jg
dec
fstps
std
stc
cmp
insb
sub
sbb
je
jmp
loopne
shll
jne
rorl
jns
mov
cmp
sarl
dec
cmp
cmp
cmp
dec
pop
inc
loopne
push
sbb
sub
jmp
dec
nop
in
sbb
cmpl
sub
or
icebp
fidivl
mov
dec
repnz
sbb
inc
xor
popl
sbbl
dec
pop
sti
ret
ret
push
and
and
adc
xchg
pop
cltd
imul
sub
sbb
xchg
push
cltd
pop
mov
cld
imul
cwtl
jmp
cld
and
sbb
cmp
sub
imul
cmp
imul
in
faddl
lahf
push
pop
xchg
add
movsb
push
dec
adc
dec
inc
rclb
lds
jecxz
outsl
lcall
leave
xchg
inc
mov
and
sti
mov
pop
xchg
jge
dec
in
mov
andb
ljmp
sub
aaa
mov
or
shrb
jae
cld
aas
add
repz
movsb
xchg
and
stc
mov
or
cli
fstpl
mov
xlat
jo
cwtl
adc
mov
cmp
shrb
add
lret
mov
dec
mov
out
lds
popf
adc
pop
popf
insl
push
cmpsb
dec
pop
daa
jne
adc
xor
je
jno
std
orl
jl
mov
push
xlat
out
cmpsb
shll
or
leave
mov
data16
push
shlb
mov
mov
int3
add
aam
hlt
aad
adcb
pushf
dec
xchg
inc
hlt
vcvtpd2ps
shlb
pop
jns
xchg
test
out
loop
fwait
test
mov
adc
add
mov
ds
and
inc
mov
test
addr16
enter
shll
jmp
imul
in
fcomps
xchg
inc
hlt
loope
clc
sbb
mov
xchg
dec
movsl
xorb
cwtl
dec
add
jmp
ds
repnz
and
inc
std
arpl
or
cld
sub
ss
aad
jge,pn
out
popa
xor
das
lods
dec
pop
inc
loopne
rol
add
pop
push
stos
cli
mov
cmp
inc
paddusw
mov
jmp
push
pop
xchg
ud0
imull
xlat
or
ss
add
sub
xchg
jno
pop
pushf
popa
andl
cmp
jns
rcll
mov
adc
stc
push
clc
jmp
mov
mov
mov
inc
scas
or
fidivl
mov
loope
mov
andl
int3
xor
repnz
mov
push
mov
mov
fnstsw
rorb
pop
mov
dec
loope
mov
movsb
int
fdivs
nop
xchg
sub
popf
cmp
leave
lea
push
pop
mov
test
inc
notb
stc
loopne
xchg
lret
push
pusha
sahf
int3
enter
mov
in
in
stc
sub
cwtl
pop
mov
adc
test
stos
mov
xchg
xchg
push
rcrl
loop
test
add
lret
xchg
cmpb
nop
ss
push
mov
dec
outsb
mov
or
mov
xchg
push
xchg
movsb
push
cli
int3
sub
cwtl
cmc
addr16
clc
fstp
jmp
jmp
push
out
mov
push
movsb
pop
xchg
lea
fiaddl
push
pop
mov
mov
movsb
add
outsb
insl
xchg
xorb
mov
jbe
sub
leave
mov
adc
div
xor
pusha
mov
and
or
mov
pushf
pop
fstpt
mov
fsts
sbb
scas
mov
push
jns
pop
pop
loope
jl
push
fnstenv
outsl
mov
sub
pop
jl
test
pop
mov
mov
inc
sbbb
mov
repnz
jb
cmpsb
addr16
sub
repnz
lret
adc
imul
lahf
lods
dec
or
mov
loopne
nop
loope
jne
xchg
mov
data16
add
fwait
popf
or
pushf
inc
neg
fwait
mov
sti
adc
fimuls
test
out
cmp
push
fsubl
add
and
adc
adc
out
jg
xchg
adc
or
mov
adcl
inc
jnp
xor
push
icebp
or
xchg
lea
ja
pop
out
jp
xor
paddd
mov
hlt
sbb
loop
mov
adc
dec
adc
clc
mov
cs
ret
aad
dec
jle
mov
aad
or
mov
push
mov
push
imulb
push
mov
fcoml
loope
add
mov
mov
add
mov
cmp
sub
in
cmp
iret
pop
in
call
out
cmc
fnstsw
xor
test
or
ret
out
mov
adc
ds
cmc
loop
ja
addr16
stos
repz
cmp
iret
push
mov
jns
outsb
stc
cmpsb
lds
xor
fsub
movsb
xchg
pop
pop
sarl
imul
fiaddl
test
les
jge
or
xlat
add
xchg
iret
pop
int
or
dec
es
fs
mov
inc
cmp
test
hlt
dec
arpl
xchg
pop
adc
enter
jl
lea
icebp
daa
pop
or
pop
and
mov
rcrb
mov
pop
and
jecxz
pop
loop
fldpi
dec
xor
dec
in
stos
push
push
neg
imul
adc
jmp
imul
or
loop
iret
adc
stc
add
and
pop
mov
lods
mov
cmp
jne
mov
ret
lods
mov
adc
dec
stos
adc
xor
sbb
cmp
lock
or
mov
int
xchg
dec
lds
inc
sbb
xchg
cmc
fcomps
inc
aad
bound
pop
xchg
adc
xor
add
xchg
data16
xor
sbb
icebp
and
sarl
fnstenv
push
pop
add
mov
xchg
ja
pop
mov
adc
mov
andb
add
mov
dec
and
push
lret
mov
scas
std
xchg
inc
repz
pop
les
dec
cmpsb
push
jo
xor
bndldx
xchg
pop
jecxz
push
adc
xor
bound
imul
pop
cld
lds
pop
pop
inc
cmp
jl
mov
ret
pop
lret
std
ror
pop
movsl
lcall
jl
adc
loope
insl
dec
jns
mov
jno
or
xor
mov
push
cmp
push
add
pop
iret
jnp
or
jae
or
pop
test
movsb
or
ja
sub
in
jb
xchg
push
in
lds
in
dec
addr16
je
mov
cmpsl
push
cmc
insl
cs
fldcw
lret
scas
out
pop
jmp
sbb
hlt
mov
cld
orb
das
orb
xor
xorb
jbe
dec
imul
mov
dec
icebp
push
call
mov
sub
or
popf
mov
jb
ljmp
xchg
nop
cmp
hlt
pop
sbb
cmpsl
in
jge
cltd
and
stos
push
jbe
mulb
nop
xor
fs
loop
ror
inc
push
sbb
mov
test
aam
ja
dec
scas
sub
sbbl
and
pop
decl
cltd
push
pushf
movsl
out
pusha
sbb
dec
dec
mov
ret
andb
mov
repz
fidivrl
cmp
pop
jb
pop
std
inc
outsb
out
cmp
push
or
jns
or
sahf
mov
xchg
out
jo
out
inc
mov
pop
mov
dec
cwtl
pop
and
orl
xchg
daa
or
mov
mov
cmc
mov
int
add
xchg
jo
stos
imul
xor
aad
out
add
xlat
lea
pop
add
into
dec
sub
push
add
addr16
cmp
cmp
adc
push
mov
add
mov
aas
xchg
lods
and
push
mull
jp
sahf
dec
mov
jl
pop
fisubrl
call
call
dec
sbb
inc
pop
mov
mov
rolb
imul
xlat
test
cmp
mov
in
movsb
addr16
xchg
popf
mov
popf
add
mov
jecxz
fdivl
xchg
pop
fs
adc
sub
mov
dec
sub
pop
dec
jno
cmp
cmc
adc
jbe
pop
icebp
pop
scas
dec
sti
jge
cmc
out
loope
iret
push
das
mov
xchg
jmp
fsubrs
inc
outsb
rclb
mov
push
pop
sbb
shrb
mov
adc
xchg
pop
inc
data16
fidivrs
aam
add
sbbb
jo
in
sub
sbb
mov
outsb
jne
iret
adc
and
hlt
lea
cli
outsb
or
fidivrl
pop
ss
out
mov
mov
mov
mov
cmp
xorl
ljmp
aad
ret
pop
in
mov
xor
jmp
lahf
out
testb
and
fadds
add
jg
push
push
ret
out
mov
enter
sbb
pop
outsl
mov
inc
cltd
adc
jmp
cmp
dec
push
push
and
test
jno
sub
out
inc
add
add
jg
adc
push
in
or
mov
pop
aam
add
xchg
mov
sub
mov
push
jo
imul
jl
mov
cmp
add
mov
jmp
pop
and
lret
rolb
les
push
decl
in
or
gs
inc
adc
inc
and
cmp
outsb
jno
lret
pushf
adc
xchg
lret
in
xchg
sub
mov
enter
sub
add
adc
out
fisttpl
stos
subb
cmpl
inc
xchg
pop
and
lret
rolb
nop
mov
adc
cmp
das
sbb
cld
sub
iret
out
mov
and
push
sub
ja
sbbl
push
and
daa
aad
mov
mov
add
fists
jno
sub
shlb
std
sub
ja
jmp
sbb
fmull
add
ret
jnp
inc
sbb
sub
out
loope
mov
lods
jl
ja
fmul
mov
adc
montmul
cmpsb
add
lods
sbb
pop
sahf
shr
cmp
lods
jo
ljmp
push
mov
push
xchg
mov
add
jle
stc
pop
push
jae
bound
dec
das
jns
lahf
imul
mov
in
call
xor
ficomps
mov
sahf
out
adc
subl
lret
xor
ret
pop
sub
stos
sbb
lahf
test
push
repnz
adc
inc
cmc
inc
out
aas
pusha
jl
jo
nop
jbe
adc
test
xor
adc
adc
lret
mov
mov
repz
push
mov
sub
orb
daa
jg
adc
repz
mov
subb
or
call
inc
cwtl
mov
in
jge
daa
es
into
push
mov
in
dec
out
rolb
sbb
aas
push
push
push
js
loop
inc
adcb
mov
xchg
insb
and
pop
jp
adc
xor
and
out
inc
aad
dec
mov
jl
adc
xchg
test
rcrb
sbb
mov
ret
dec
add
fsubrl
inc
mov
sti
push
add
fs
out
rcl
movsb
filds
push
sbb
mov
xor
sbb
and
insl
stc
jo
cmp
cld
adc
gs
xlat
xlat
pop
cmp
ret
xor
adc
push
mov
ret
aad
cmp
es
lcall
fstps
cmp
aad
sbb
cmpsb
movsb
mov
adc
xor
adc
scas
lret
push
xchg
stc
ljmp
loope
enter
pop
push
mov
lret
mov
jl
sbb
push
sbb
stos
loopne
pushf
aaa
imul
std
out
cmp
adc
scas
cmp
add
movsb
pop
pushl
cmp
testl
flds
sub
or
push
inc
dec
or
cmp
out
cmp
sbb
fdivr
push
and
adc
cld
outsb
pushf
and
jecxz
rcrb
push
mov
clc
les
mov
orb
push
push
sub
or
push
xor
icebp
adc
scas
sub
out
cmp
cmp
pushf
push
pop
adc
add
mov
inc
cmp
xor
jg
add
scas
jne
inc
fisubrl
or
fwait
mov
lods
inc
sub
sbb
mov
mov
dec
insb
jmp
scas
or
fisubl
lcall
lcall
out
popa
jmp
fnstsw
push
jae
jecxz
gs
push
stc
mov
outsl
mov
add
lahf
sbb
sub
adc
cmp
cmp
cmp
repz
fsubrs
lahf
pop
push
xchg
das
and
out
stc
mov
sub
test
stc
push
adc
sbb
cmc
pop
xor
push
std
arpl
in
js
ljmp
adc
outsb
mov
js
mul
push
mov
daa
xor
into
pop
adc
push
stos
mov
nop
aad
xchg
fiaddl
loope
arpl
push
or
sbbl
xor
aad
imul
mov
fldpi
jnp
jne
jmp
jmp
push
xor
into
das
push
sbb
addr16
scas
movl
xchg
cmpsl
lods
mov
inc
into
xchg
dec
mov
jmp
xor
fidivl
jle
stos
sbbb
movsb
add
gs
test
lock
push
arpl
out
pushf
sub
das
into
push
sti
pop
dec
push
bound
push
aam
aam
sahf
outsl
push
subb
aaa
loop
out
dec
mov
pop
ss
add
inc
fucomp
xor
pop
das
data16
lods
dec
cmp
and
xchg
loop
jle
fldl
inc
sbb
mov
shl
repnz
outsl
mov
and
int
pop
std
scas
loop
loop
in
in
pop
mov
js
stc
add
mov
jmp
push
notb
les
decl
loope
rcll
mov
lods
movsb
ror
xchg
fsts
xor
dec
jg
mov
js
mov
cmp
inc
test
ret
sbb
xchg
into
ss
xor
add
sub
movsl
cmp
xchg
sbb
div
and
bound
sbb
repnz
xchg
mov
cwtl
punpckhdq
scas
call
mov
xor
xchg
and
sbb
push
mov
cld
int3
scas
fs
ss
arpl
test
or
lock
sub
inc
in
mov
pushf
lods
lret
jb
add
pushl
lcall
sbb
inc
sub
adc
fpatan
icebp
into
cmp
mov
aas
sbb
out
enter
sub
outsl
push
iret
inc
je
sarl
test
sbb
ljmp
mov
xchg
loop
fstpt
jl
inc
jle
jno
push
jns
packuswb
lods
rclb
jne
stos
fs
dec
pop
push
mov
inc
fisubrl
or
clc
sub
mov
loop
mov
pushf
lret
mov
pop
lods
shrl
imul
xchg
dec
inc
orl
add
test
cmp
push
lret
loopne
add
sahf
inc
fisttpll
leave
or
stos
jmp
push
scas
jo
mov
xchg
add
cmc
subl
outsb
gs
pushf
mov
push
fcmove
aaa
pusha
ss
repnz
cmp
xor
pop
add
jb
loop
jo
addl
cmc
mov
popa
xor
sti
sub
lahf
push
xchg
inc
add
insl
xchg
adc
push
leave
mov
push
add
xchg
loop
dec
add
xchg
fadds
insl
dec
sub
and
or
sbb
lods
imul
jg
lret
or
int3
aam
decl
cmp
daa
in
mov
fcmovu
add
cmp
xchg
movsb
dec
sub
popa
dec
add
int
xor
mov
ljmp
inc
pop
or
jb
loope
movsb
push
sahf
xchg
push
xorl
jmp
cmp
jnp
lods
rclb
xor
mov
mov
add
xlat
hlt
dec
loopne
fld
inc
sbb
fisttpl
cmpsl
jno
enter
push
xor
arpl
lret
lods
and
mov
sbb
xor
jmp
imul
loope
xor
testl
jp
mov
jno
fimuls
imul
test
mov
ja
sub
mov
jp
adc
fstpt
inc
sbbl
xor
cld
mov
inc
xorl
sahf
repnz
or
fsubrl
xchg
rorb
incb
in
jnp
imul
mov
mov
xchg
lret
mov
xor
rolb
push
cli
sahf
jle
sub
push
jae
pushf
mov
loope
js
arpl
inc
stos
das
or
data16
xor
jno
inc
dec
aaa
cwtl
testl
push
mov
adc
sub
xchg
cmc
xor
push
mov
jmp
mov
cmp
sbb
subb
enter
shrl
add
repz
xchg
jns
xchg
dec
fistpl
popf
sbb
xchg
inc
adc
jae
cmp
mov
jecxz
dec
out
daa
out
jne
inc
movsl
inc
jp
data16
outsb
ds
movsb
addr16
iret
and
shl
cmc
call
mov
xlat
and
fldt
lods
or
lock
add
xsha1
cmpsb
iret
test
xchg
jne
out
push
pusha
sti
pop
lods
xlat
xor
fs
ret
lods
xchg
in
add
rclb
fisttpl
decl
and
lcall
pop
cmp
dec
sub
fcomi
inc
fcoml
in
in
bnd
int3
cmp
xchg
shl
repz
and
ret
imul
aam
pushf
aad
sub
xor
mov
dec
cli
mov
mov
in
hlt
outsl
inc
pop
stos
insl
shlb
and
dec
mov
inc
pop
daa
mov
dec
imul
sub
into
lret
and
sarb
add
xchg
fidivrs
push
pop
xchg
dec
sbb
jb
testl
inc
insl
sbb
fiadds
push
stc
push
aam
mov
mov
icebp
cs
int3
xchg
lret
je
cmpsb
push
xchg
push
sub
out
es
mov
ret
inc
insb
test
and
ja
sti
lret
mov
outsb
repnz
dec
jb
dec
or
pushf
adc
sti
push
sbb
cs
fcmovnb
in
cwtl
xchg
mov
jmp
jge
scas
add
lahf
fnstenv
das
add
lcall
inc
fs
fldl
ficomps
rorb
mov
push
cwtl
cs
pop
xor
sub
mov
xchg
xchg
ss
test
sbbl
or
jb
imul
mov
int
loop
push
cmc
dec
leave
add
bound
mov
jle
orb
fs
cmpsl
fimull
iret
push
test
push
ds
pusha
cmp
jo
cmp
imul
shlb
icebp
cmp
mov
aaa
rcll
jno
sbb
jnp
dec
rcl
subb
rcrl
inc
scas
mov
or
cmp
sbb
jp
dec
sub
in
xor
push
stos
hlt
xor
iret
ret
outsb
test
dec
xchg
jnp
dec
popl
aas
aas
fs
shl
fs
nop
and
out
outsb
rcrl
or
and
stc
leave
in
jge
lret
in
xchg
icebp
inc
mov
test
test
xchg
jnp
xchg
push
cmp
ret
sbb
pushf
or
cmp
insl
inc
lods
inc
adc
dec
shrl
mov
daa
jae
sub
inc
xor
nop
push
jle
fcmovb
repnz
xor
icebp
cmp
ljmp
sbb
rcrb
lea
sarl
in
and
pmulhw
scas
pop
cmp
jge
and
push
fyl2x
lods
pop
xchg
jo
pop
pop
mov
loop
gs
bts
and
push
adc
shl
ljmp
or
dec
cmp
ds
test
inc
lahf
xlat
pop
ss
test
or
sbb
pop
and
jbe
mov
cli
fbstp
or
shlb
sub
dec
fs
push
fld
pop
mov
out
cmc
pop
push
mov
add
aaa
stc
adc
out
jecxz
inc
pop
mov
ljmp
push
xor
mov
push
xchg
jp
cmp
add
das
loope
popa
jns
movsb
mov
movsl
mov
inc
jecxz
fsubrl
aam
scas
leave
outsl
add
std
pushl
loopne
sub
hlt
dec
adc
pop
mov
nop
pop
pop
push
jb
xchg
push
push
andl
jns
cmp
add
jmp
lahf
dec
cmpsl
xchg
mov
jl
cmp
mov
dec
pusha
and
sub
idiv
jle
lods
add
dec
mov
cmpsl
out
mov
leave
push
je
cmpsb
int3
push
jmp
pop
addl
jge
fldl
loop
mov
inc
inc
out
sbbl
add
imul
and
pop
sub
and
test
out
xchg
std
jo
xor
cmp
shlb
mov
or
or
es
test
scas
sbb
xchg
push
sbb
shll
mov
push
xchg
cmpsl
xchg
inc
inc
mov
adc
and
jb
scas
jp
cmpsl
jecxz
rolb
nop
ds
popf
mov
jecxz
and
and
lret
mov
outsb
xchg
push
lea
lds
jns
lods
fcompl
xor
inc
lods
push
inc
lods
iret
cmpl
sub
into
push
es
add
dec
sub
ret
sub
or
xor
hlt
in
jno
push
ror
or
int
sub
dec
xor
lods
inc
xor
sub
stc
xchg
sbb
fnsave
add
pop
loop
pop
scas
pop
inc
cmp
bound
ja
in
mov
fcomps
aad
test
repz
cmc
insb
popa
jns
cmp
cli
cli
ret
add
in
lea
aad
push
xor
dec
mov
sub
rcrl
js
sub
and
cmp
jb
nop
push
mov
adc
fs
movsl
fildl
xor
pushf
arpl
in
and
repz
mov
add
movsl
pop
or
movsl
sub
mov
scas
cmpsl
inc
push
mov
fnstcw
pop
jo
enter
icebp
mov
mov
out
push
push
xor
scas
inc
push
arpl
lahf
clc
pop
or
scas
fwait
out
int
pop
xor
pop
xchg
aad
lahf
xorl
xchg
xorl
fmull
and
sbb
xor
or
sbb
lock
inc
xlat
ja
insb
sbb
out
cmpsb
cmpsb
pop
jb
xchg
test
pusha
gs
lcall
aaa
fwait
mov
paddsb
and
jge
int3
popf
bound
xor
dec
sbb
pop
loop
ret
shlb
cmpsb
mov
sub
scas
xchg
out
addr16
stc
lea
popf
ljmp
mov
push
inc
ret
or
pushf
or
ret
into
addr16
and
and
ret
sub
cmp
fwait
xchg
add
movsb
imul
maskmovq
divl
push
add
xchg
clc
lcall
dec
arpl
cmpsb
push
push
jo
rcr
mov
gs
inc
pop
or
jo
outsb
push
mov
loop
scas
out
add
dec
xor
out
jmp
das
jge
pop
xor
xchg
jne
xor
movsl
or
xor
sahf
xchg
cmp
outsl
mov
aad
mov
add
push
mov
mov
mov
pushf
loop
adc
loop
ret
jbe
jno
lret
jns
dec
sbb
cwtl
or
imul
insl
push
bound
dec
xchg
mov
inc
and
mov
stos
ss
imul
push
sbb
sub
add
cltd
xchg
lahf
cmpsl
adc
aas
js
jnp
mov
jae
fdivr
bound
sub
jmp
push
dec
jecxz
add
inc
add
test
das
pop
pop
pop
inc
and
loope
and
cmp
mov
inc
mov
stos
sub
xchg
jbe
aaa
enter
pusha
imul
sub
out
jo
loop
xlat
push
sub
in
dec
loop
aas
daa
addr16
dec
dec
dec
test
mov
mov
in
xchg
mov
jae
push
dec
ja
or
aad
std
inc
add
loop
cld
dec
and
jne
sub
xchg
add
push
aaa
pop
outsb
jbe
adcl
out
sbb
pop
and
adc
dec
or
shll
push
pop
loopne
lcall
jge
mov
mov
push
xchg
xlat
je
movsl
daa
adc
inc
cmp
sbb
mov
outsb
ret
fdivl
lahf
dec
jae
loop
sbb
lods
and
sub
mov
mov
mov
push
shll
or
mov
jo
push
adc
dec
dec
cmp
daa
xlat
aad
add
push
ror
dec
cmp
in
call
cmp
adc
loop
insl
dec
in
mov
xchg
popa
and
push
pop
repz
cmp
push
out
or
lds
add
fwait
jne
push
add
int3
xchg
fstpt
enter
daa
add
dec
xor
xor
lods
cld
lds
jae
fisttpll
testb
sub
jecxz
bound
cld
ret
stos
mov
daa
dec
aaa
cmp
lea
dec
fistps
mov
into
jo
stos
in
cmp
xorb
inc
shlb
jmp
fcomps
fsts
inc
lret
xor
subb
insb
lret
xchg
imul
xor
sub
fbld
mov
inc
push
jmp
mov
mov
mov
enter
mov
imul
sub
les
mov
fs
jg
push
test
arpl
lea
mov
push
lcall
fdivl
and
jns
test
mov
orl
dec
outsl
dec
js
outsl
push
std
lods
shll
inc
lret
inc
repnz
jp
dec
sub
xchg
sbb
cmp
jl
xor
dec
mov
in
inc
sti
and
push
out
dec
cmp
sub
repnz
cmp
rcll
nop
mov
cli
jl
movsl
lock
lods
jge
add
push
jno
ret
sbb
stos
lret
cmc
jno
std
daa
adcl
xor
lock
dec
adc
pop
sbb
sub
jne
ss
seta
jbe
pop
clc
int3
dec
frstor
test
and
data16
pop
jecxz
out
xchg
fiadds
ds
repz
dec
std
std
leave
add
fdivrp
xchg
and
jl
scas
lcall
sbb
pop
mov
mov
setne
sbb
jnp
std
rorb
scas
push
cmpsl
push
lods
negb
inc
ror
and
arpl
mov
jge
cmpsb
enter
sbb
mov
aaa
ss
mov
pusha
xor
shlb
cmc
dec
cs
in
mov
xorb
inc
xchg
in
pop
into
jns
mov
dec
pop
test
ret
push
in
int3
fdivrl
add
jnp
cmp
popf
jno
call
and
mov
mov
and
sbb
adc
sahf
xchg
bound
mov
pusha
imul
arpl
pop
mov
sbb
mov
xchg
rorb
out
jle
xor
lcall
out
into
jge
jb
inc
lock
mov
push
stc
push
aam
les
ss
pusha
test
inc
dec
out
fbstp
jecxz
adc
in
jg
jb
imull
mov
aas
mov
in
push
arpl
sub
test
and
es
repnz
sub
inc
mov
xorl
inc
mov
das
xchg
fmuls
push
sbb
mov
aaa
mov
iret
inc
aad
int
fldlg2
jbe
push
mov
rorl
sub
xchg
pushf
sahf
lahf
jbe
pop
mov
out
fsts
pop
repz
gs
jmp
leave
cmpsb
or
bound
inc
fcmovu
sub
or
mov
add
mov
mov
xchg
xor
xor
dec
lea
lods
sbbl
int3
mov
pop
test
jp
xchg
adc
sarb
arpl
fldt
cmc
ficompl
test
out
cmp
sub
or
push
insb
or
sub
movsl
cmp
subb
leave
out
mov
aad
jp
cmc
pop
enter
dec
push
sbb
cmp
jecxz
inc
addr16
icebp
rcrl
mov
shr
js
and
jmp
push
lea
jge
pop
xchg
jmp
test
sub
jecxz
enter
sbb
inc
and
jne
sahf
in
pop
mov
mov
mov
ficomps
fs
mov
outsl
lock
mov
in
inc
xor
inc
add
xchg
xchg
push
inc
push
stc
lcall
ljmp
testb
jnp
sbb
cwtl
fsubs
es
or
inc
push
je
out
sub
std
movsb
cwtl
arpl
mov
loop
cmp
pop
jo
roll
cli
add
xchg
in
fidivl
fcoml
les
in
jno
xor
inc
jl
inc
adc
push
inc
inc
decl
adc
mov
lret
fnstsw
jns
add
test
jno
js
mov
pop
jae
mov
cs
dec
sahf
add
pop
jmp
mov
es
inc
ret
push
jmp
jo
add
ljmp
xchg
cs
addl
xchg
pop
jo
lods
popf
outsl
cmp
mov
hlt
xor
test
push
add
mov
outsb
popa
mov
jbe
scas
sub
aad
repz
inc
das
loop
cmp
pop
fstp
repz
stos
repz
fidivs
sbb
lea
sbbl
add
adc
xor
inc
shrl
inc
popl
test
pop
fnstsw
fsubs
fsubr
cli
cmp
sbb
rcrl
push
xlat
pop
xchg
inc
cld
cwtl
fcmovnbe
movsl
mov
and
insb
inc
inc
pop
or
inc
shll
das
rcrl
lret
cmc
jmp
cmp
push
cmp
xor
cmp
daa
xorl
push
popf
adc
adc
jge
pop
out
pop
lea
mul
movsl
hlt
push
cmp
outsl
lahf
or
push
push
out
iret
test
jecxz
add
test
and
movsl
xchg
clc
imul
fisubl
das
push
mov
push
fists
fmuls
inc
push
lret
add
movsb
into
pop
mov
adc
testb
insl
adc
rcrl
rclb
std
and
sbb
dec
xor
popa
mov
mov
loopne
adc
outsb
mov
out
in
repnz
pop
mov
xchg
test
insl
adc
xchg
popf
dec
dec
mov
or
xchg
cli
inc
sub
repz
aas
xchg
xchg
test
xchg
mov
lret
xchg
es
inc
jns
add
xor
dec
mov
or
push
cmp
jo
stos
movsl
les
addr16
xor
loopne
jno
inc
stos
stos
ja
cmc
or
inc
icebp
addr16
ljmp
lret
mov
pop
sti
icebp
nop
es
arpl
inc
fwait
repnz
xchg
daa
mov
mov
cld
adc
mov
xchg
jns
jb
sbb
xchg
lds
call
lea
pminsw
rol
inc
loop
loope
push
jecxz
sub
cmpsb
aam
aaa
push
mov
pusha
ja
lds
jbe
imul
test
dec
push
outsl
roll
cli
and
jecxz
jmp
outsl
push
push
and
dec
int
push
cmp
push
repz
insl
fidivs
ret
jecxz
sub
fildl
xchg
push
jae
addr16
mov
aad
stos
gs
inc
add
mov
inc
adc
lods
jg
mov
lods
mov
jns
in
or
jbe
cmp
out
and
out
icebp
daa
pop
in
xchg
push
or
dec
jnp
shl
cwtl
into
imul
mov
jecxz
pop
in
lods
and
or
pop
lahf
and
add
jmp
xchg
cwtl
loope
push
mov
pop
scas
mov
outsl
sub
vandnps
and
scas
pop
cmp
test
js
push
push
subb
push
aas
xchg
inc
std
cmp
cmp
rcrl
lods
mov
jns
fwait
ret
mov
sbb
jb
in
sbb
pop
adc
xor
into
xchg
orb
jecxz
xchg
in
inc
and
or
paddd
stc
push
clc
jo
in
cltd
mov
dec
push
or
subb
ljmp
add
hlt
jns
shl
popf
pop
fnstenv
jnp
xchg
and
das
and
pop
adc
int3
dec
mov
mov
or
rcrb
frstor
jns
pop
inc
fisubrs
and
lret
daa
clc
inc
int
int
jae
fwait
nop
and
decl
sahf
stos
adc
sub
and
in
dec
xchg
mov
shrl
mov
or
pop
pop
sahf
pop
or
call
pushf
push
or
push
mull
push
out
mov
pop
and
push
mov
xchg
shrb
cli
jl
test
enter
sti
pop
adc
les
sub
pop
jne
mov
inc
xor
sbbl
sub
mov
dec
ja
push
cs
pop
repz
roll
and
loopne
xlat
hlt
std
sbb
pop
subb
inc
test
sarb
divl
jp
and
lret
js
cltd
cmp
xchg
pop
sub
cmp
mov
cwtl
insb
pop
in
int3
pop
test
jg
sub
ss
adc
data16
in
xor
out
xchg
repnz
jne
jg
and
cmpsb
sub
xchg
pop
fs
push
xchg
test
enter
dec
xchg
ljmp
scas
call
mov
mov
int
dec
into
cwtl
inc
pop
cwtl
inc
decb
adc
divb
sub
sub
aas
and
outsl
cs
addr16
leave
pop
movsb
ret
or
fdivrs
mov
and
adc
aam
dec
pcmpgtw
mov
fwait
sbb
ja
pop
cmp
adc
pop
pop
or
in
js
pop
nop
or
clc
xchg
sbb
push
sub
incl
mov
cmp
sahf
pop
popf
pop
xor
xor
aaa
outsb
inc
jle
add
cmp
inc
inc
cs
add
sarb
cmp
or
fcom
ljmp
test
mov
jbe
mov
mov
mov
ss
popa
mov
push
mov
add
and
jle
inc
lcall
push
jbe
out
push
cmp
pop
push
icebp
stos
sub
aaa
push
rcrl
repnz
dec
mov
mov
mov
idiv
das
mov
dec
and
call
adc
mov
call
stos
fdiv
adc
out
aas
adc
mov
js
xchg
cmp
and
inc
addr16
pop
test
push
iret
or
loopne
jp
iret
out
adc
mov
push
test
scas
dec
or
es
push
inc
fwait
sbb
sahf
sbb
jo
push
sahf
sbb
in
jb
pop
shl
addr16
mov
ja
push
xlat
inc
in
or
fnsave
mov
sub
popf
pusha
fisubrs
mull
fisttpl
sbb
cmp
mov
out
dec
jg
dec
in
inc
ja
cmp
repnz
mov
sbb
cmp
inc
pop
fdivrs
aam
cmp
cwtl
push
mov
test
cmp
and
mov
lcall
jle
push
cs
push
je
sub
test
mov
pop
testl
rcrl
dec
dec
in
dec
inc
cmc
push
sub
add
nop
fsubrl
stos
jns
mov
std
xchg
mov
std
imul
loope
xchg
or
mov
jle
cld
int3
mov
popf
mov
or
inc
xchg
or
cmp
mov
stc
int
pop
test
cmp
test
pop
gs
add
les
adc
pop
sub
stos
rclb
test
sub
jle
and
jo
push
icebp
loope
xor
mov
lds
imul
push
test
mov
scas
inc
sub
fwait
aas
scas
xchg
inc
lds
mov
or
sbb
add
jb
cmp
push
lret
inc
mov
xchg
sahf
adc
adcl
repz
add
push
push
or
pop
push
pushf
mull
outsl
in
lcall
push
call
sahf
cltd
xorb
ret
in
fisttpl
je
dec
mov
mov
xorl
inc
popf
mov
hlt
sbb
push
xlat
add
sbb
gs
into
jp
add
int
add
subl
xor
jecxz
sub
add
and
mov
inc
push
inc
xor
sub
sbb
push
stos
sub
pop
push
inc
inc
pop
rcll
jne
faddl
or
popf
add
frstor
incb
mov
aaa
sbb
add
xchg
sti
dec
xor
dec
jnp
mov
cmp
pusha
in
pusha
mov
and
jecxz
sub
lds
jge
inc
clc
push
in
mov
je
mov
push
adc
push
imul
jmp
gs
ror
pop
aaa
sbb
dec
pop
orl
push
mov
test
sub
sbb
mov
xor
push
lahf
cltd
xor
xchg
mov
jno
jae
pusha
das
pop
inc
fiadds
outsl
es
sub
jb
int
mov
mov
pop
arpl
andb
mov
push
mov
aad
mov
movq
rcrb
cmp
add
jb
cmp
out
and
jo
stos
xchg
cmp
insl
jno
subl
lock
imul
sbb
jp
mov
aaa
cmp
push
scas
es
xor
or
and
jbe
test
int3
cmc
inc
cmpsl
jmp
scas
fldl
sti
stc
jp
sub
mov
mov
cld
pop
testb
jmp
imul
pop
cwtl
enter
ljmp
add
pop
xchg
mov
dec
xchg
adc
lret
ret
int3
sbb
loope
jbe
mov
sbb
out
sbb
popa
out
and
insl
fmuls
jle
jp
push
insl
inc
cmp
mull
fmul
and
je
inc
in
lds
lahf
pushf
and
cmp
loop
cmp
jmp
adc
push
xchg
jne
push
cmp
dec
or
dec
test
push
inc
rcrl
js
in
dec
jo
xchg
adc
aad
aas
out
ret
lods
cmpsl
test
push
in
mov
sahf
sbb
push
mov
push
addr16
fisubrs
jle
pop
inc
inc
movsl
jmp
push
cmc
pop
mov
int
xchg
inc
pop
stc
or
mov
xchg
pop
inc
dec
dec
sbbl
dec
mov
dec
or
repnz
mov
inc
jge
fwait
shr
je
stos
outsb
fistps
fistl
mov
dec
mov
ljmp
repnz
jne
sahf
dec
stc
mov
test
aas
or
xlat
add
cmp
gs
out
sbb
pop
wrmsr
aam
loopne
dec
mov
pop
jbe
jecxz
or
jp
popf
sar
and
push
xchg
and
adc
dec
dec
sarl
stos
dec
aaa
and
dec
xchg
lds
sub
xchg
lods
mov
cmp
add
xchg
jns
mov
mov
cmp
dec
gs
dec
outsb
dec
xchg
jns
aaa
imul
pop
pop
pop
and
inc
mov
clc
pop
movsl
jge
in
int
xor
mov
jno
out
rcl
mov
dec
jle
mov
adc
mov
movsl
icebp
shrl
lock
jmp
aaa
into
ljmp
out
jmp
lock
mov
icebp
mov
fistps
inc
dec
add
enter
cmpsl
jae
mov
out
cmp
mov
xchg
dec
xlat
xor
addr16
mov
jbe
inc
call
idivb
mov
jge
xchg
rcrl
xchg
cmp
jg
ss
sbb
cmp
adc
fldenv
push
out
cwtl
mov
lahf
je
nop
xor
ds
sbb
adc
cmp
dec
lds
stc
mov
cmp
lret
and
in
lock
jo
mov
dec
mov
cwtl
shll
push
push
arpl
in
cld
jo
sbb
test
xlat
add
xor
ja
gs
xor
shl
mov
in
mov
scas
adc
insl
loop
movsl
fcompl
lods
xchg
xlat
and
out
inc
push
dec
in
pop
js
popl
mov
popa
add
arpl
outsb
iret
in
loopne
movsl
jbe
mov
andb
adc
mov
and
mov
test
xchg
movb
lods
and
daa
ja
outsb
out
and
mov
sbb
test
xor
sub
pop
les
std
call
mov
jge
mov
rcr
cmp
jg
inc
inc
or
push
inc
test
pop
mov
bnd
subl
jno
inc
xor
incl
push
ret
sbb
mov
pop
shl
aas
sub
mov
test
and
or
jg
adc
bound
mov
cmc
inc
sbb
rcrb
and
pop
lds
cmp
pop
sti
cmpb
inc
adc
or
add
adc
adc
fisttps
clc
mov
repnz
push
inc
pusha
xorl
fwait
dec
and
mov
sbbl
sbb
sub
out
loope
push
pop
xor
stos
movsl
jle
dec
add
shrd
fadd
mov
or
cs
jg
js
adc
imul
sbbb
jb
adc
fmuls
je
jge
call
push
fcmovne
xor
ljmp
outsl
sbbl
dec
push
cmp
mov
clc
std
es
dec
sbb
bswap
mov
movl
fimull
popa
shl
xchg
sub
fisubrl
fwait
test
ret
out
inc
shlb
js
adc
je
or
adc
pop
inc
addr16
gs
sbb
jne
xchg
insl
adc
loopne
mov
movsl
daa
aam
movl
push
xchg
inc
push
pop
xchg
cmpsb
int
imul
dec
test
cmp
mov
mov
adc
mov
fldt
dec
jo
xchg
jae
or
call
mov
sub
xchg
or
push
mov
mov
leave
lods
dec
sub
in
mov
mov
sub
pop
sbb
mov
pop
lods
rcrl
xor
rclb
push
or
insb
xchg
icebp
icebp
xchg
lods
xchg
ja
inc
adc
adc
ret
mov
push
cmc
fidivrs
arpl
mov
sub
or
and
sbbl
inc
cld
adc
ret
cwtl
ficompl
shll
imul
jmp
fcmovu
rclb
insb
lea
cmp
dec
inc
pop
sub
push
or
mov
xchg
xchg
jnp
xchg
call
stos
and
mov
outsl
inc
jne
add
inc
mov
push
loope
and
and
jb
mov
lods
orb
lods
pop
xchg
leave
push
sbb
icebp
mov
xor
push
mov
ds
push
cli
flds
jmp
jo
cmp
dec
daa
push
add
ss
aad
push
ss
repnz
out
xchg
push
mov
push
xor
rorb
lds
cli
xor
pop
mov
pusha
pop
adc
xor
inc
mov
out
insb
and
jl
js
pop
xchg
shlb
push
lahf
inc
inc
popa
mov
xor
stos
push
mov
cmp
stos
ss
jg
cltd
adc
push
mov
enter
dec
inc
pushf
jae
add
mov
insb
hlt
gs
and
add
mov
rorl
outsb
sub
clc
xor
jbe
cmp
sahf
mov
pop
rcrl
ret
in
leave
addr16
push
pop
or
add
in
xor
repz
and
jo
aad
pop
les
or
add
cld
add
xor
sahf
fs
mov
jg
test
adcb
int
leave
inc
in
jns
pushf
inc
sub
mov
and
mov
lea
imul
pop
sbb
out
into
or
mov
test
cmp
cmp
in
mov
fisubrs
aad
in
idivl
pushf
lods
push
mov
mov
test
mov
lret
add
outsb
ret
loope
pop
or
push
adcb
pushf
mov
sub
sub
lcall
dec
push
outsb
out
sbb
ja
aad
jl
add
iret
mov
or
add
mov
inc
mov
cmpsl
les
out
jmp
stos
xchg
cmpsl
daa
lds
out
sbb
ja
aad
jl
add
iret
or
or
mov
rcrl
nop
sub
pop
popf
sbb
lea
inc
pop
stos
andb
pop
push
icebp
pusha
mov
mov
sub
mull
ja
mov
jne
pop
test
dec
repnz
mov
ret
mov
out
add
arpl
push
jno
mov
sbb
dec
jp
lods
dec
js
xchg
mov
call
mov
inc
and
adc
fmul
mov
mov
push
or
bound
fmul
mov
sub
lds
mov
int
rcr
dec
or
ss
jl
xchg
popf
and
mov
ret
push
fnstcw
sub
adc
sub
pop
cli
movsl
push
cld
mov
mov
xchg
cld
add
mov
xlat
add
jo
or
pop
out
cld
jmp
xor
enter
jno
fisubs
fstp
xor
xor
clc
test
popa
addr16
cltd
mov
ret
pushl
jne
test
push
push
mov
and
and
adc
ret
inc
test
hlt
mov
fneni(8087
mov
push
jmp
dec
xchg
inc
fwait
in
in
push
loopne
out
mov
mov
les
testl
shlb
and
test
lods
aad
hlt
adc
nop
push
lcall
ljmp
cmp
cmpsb
ja
daa
repnz
outsl
or
jmp
or
out
imulb
mov
add
shll
push
popf
push
dec
test
sahf
pop
in
adc
inc
subl
jmp
addr16
imul
ud0
divl
mov
dec
fldcw
in
push
sbb
rclb
adc
cld
arpl
and
mov
ds
mov
xchg
out
iret
dec
pop
mov
add
pop
adc
fildll
dec
mov
inc
inc
popl
jno
out
ret
popf
cltd
add
mov
cltd
fisttps
mov
inc
mov
data16
sub
fstpt
xchg
dec
dec
outsb
adc
lahf
mov
jno
dec
inc
outsb
mov
mov
push
aam
cli
mov
dec
imul
outsb
jns
mov
dec
out
push
dec
cmp
xor
push
aas
sbb
or
add
jl
add
nop
fwait
push
je
andb
mov
xchg
orl
mov
sbb
pop
cmp
stc
std
mov
inc
push
sbb
and
or
xor
or
not
cmp
call
popa
out
xor
call
and
dec
inc
mov
push
sub
out
pop
mov
push
xlat
in
test
jb
in
lds
dec
adc
das
xchg
mov
jae
mov
fdivl
push
mov
fstl
jnp
mov
jbe
fmuls
and
aad
lods
popf
jmp
push
cwtl
adc
lock
inc
ret
push
inc
dec
das
aad
test
mov
lds
push
les
pop
mov
mov
cmp
dec
sbbb
ret
push
and
cli
pop
test
jbe
notl
pop
pop
loope
mov
mov
lods
sar
sbb
test
loope
push
fldt
les
xor
aaa
and
mov
mov
dec
mov
cmc
out
and
sarl
popf
lret
sub
mov
movsb
or
jg
mov
imul
test
adc
xor
mov
daa
lret
push
jle
xor
testb
mov
fbld
ret
cmp
cmp
inc
hlt
mov
adc
int3
pop
jo
jbe
sub
push
imul
nop
mov
mov
xor
aam
xor
sub
fs
mov
sbb
push
test
sub
and
dec
outsb
clc
jmp
jbe
cmp
lret
add
iret
test
outsb
aas
test
push
ret
fidivl
mov
lea
jb
rol
dec
pop
inc
adc
filds
pop
add
jo
or
lock
pusha
aaa
aad
jg
push
push
stos
test
mov
add
in
mov
xlat
inc
outsl
sub
mov
or
movsl
adc
xchg
insb
out
in
pop
or
hlt
test
dec
mov
cmc
mov
mov
imulb
dec
sbb
xor
stos
pushf
or
and
jnp
mov
pop
mov
lds
cmpl
xchg
scas
out
cmpsb
mov
test
sbb
ja
lret
inc
mov
or
sub
sahf
clc
popa
mov
adc
push
lods
xchg
stos
push
mov
in
lret
push
sbb
insl
mov
scas
fs
mov
into
and
loopne
inc
push
add
push
push
xlat
outsl
inc
or
xlat
fwait
jmp
rorb
sub
cli
sub
scas
popf
and
fwait
push
pop
mov
jge
flds
stos
jle
std
xchg
push
inc
pause
jle
pslld
sbb
in
adc
add
les
cmp
cmc
adc
jmp
pop
fs
cmp
add
cs
or
cli
dec
cmp
ror
pop
xchg
sahf
test
enter
jecxz
push
pop
int
jnp
popf
jne
inc
and
or
paddd
out
scas
adc
ffreep
mov
movsb
jnp
fcomip
mov
repnz
lds
inc
idivl
sbb
xor
ret
in
repnz
jl
stos
ficoml
icebp
xchg
dec
aad
fwait
ret
lret
push
adc
add
jmp
jl
and
test
or
fsubrs
orb
out
jle
cwtl
adc
mov
sti
loopne
sub
insb
sbb
xorb
mov
lret
mov
stos
loopne
pop
jecxz
xchg
mov
mov
push
cmp
sti
repz
aam
mov
push
outsl
cmp
or
push
ret
sahf
adc
xchg
mov
sahf
mov
xchg
clc
jnp
fisttpl
fisubl
adc
test
mov
xlat
jecxz
pusha
jnp
sbb
shrl
push
ret
pop
punpckhdq
cmp
pop
xor
xor
mov
add
xor
aaa
ror
fstpl
lahf
rorl
cmp
repz
lahf
jb
fmul
psrlq
jbe
add
mov
xchg
mov
jge
xor
and
stos
fwait
cmc
jnp
add
dec
ret
mov
push
jbe
pop
sub
jns
mov
aam
pop
cltd
add
jmp
test
add
ret
xchg
test
ret
sbb
cmp
jmp
sub
add
add
fdivl
rcll
cmp
sub
shll
jmp
push
daa
cmp
pop
cld
movl
jae
jno
push
mov
push
sti
stos
dec
lret
and
das
sbb
adc
pop
gs
xor
mov
outsl
ja
scas
add
dec
and
inc
mov
add
fwait
xchg
xlat
out
sahf
js
push
inc
and
or
paddd
mov
lods
insb
loopne
sub
push
mov
mov
test
fadd
sub
mov
sub
jg
or
sbb
aad
jge
pop
cwtl
inc
push
imul
pop
cmp
rol
imul
fs
or
xchg
mov
nop
pop
mov
mov
les
int3
lahf
pop
js
jno
xchg
push
imul
es
pop
inc
xchg
outsb
pop
paddd
and
pop
loope
jb
test
aas
nop
lret
data16
xchg
jmp
jb
lock
sbb
sub
xor
fs
mov
popf
inc
inc
pop
push
mov
pop
jmp
addl
pop
adc
adc
mov
shll
or
ret
out
test
stc
test
rcl
pop
out
push
jnp
imul
or
xchg
in
clc
and
scas
popa
pop
mov
lea
mov
cmc
aad
movsl
les
gs
mov
stc
loopne
jl
dec
jg
cli
pushf
mov
or
dec
push
xor
gs
push
ja
int
pop
cmp
xchg
pop
pop
ficompl
or
xlat
and
cmpsb
sbb
js
push
mov
fldenv
xchg
shl
push
cmp
pop
jns
mov
sbb
and
scas
sub
pop
dec
xor
fnstcw
lods
inc
sub
andl
scas
or
jl
jno
out
fimuls
mov
inc
and
push
mov
adc
subl
xor
add
mov
jp
cmp
push
and
xchg
rclb
dec
cltd
rcrb
jp
or
lods
shl
add
pop
and
sub
mov
push
sbb
std
jbe
xor
shll
and
mov
outsl
int3
sub
and
mov
and
mov
rorl
popf
jp
dec
push
mov
xchg
mov
sbb
rol
lea
hlt
mov
insl
sub
in
sbb
jecxz
and
gs
pop
fidivs
sbb
insl
or
test
dec
add
cmpsb
into
gs
jle
xchg
jae
jno
sub
outsl
lret
movsb
mov
lock
pop
out
jmp
loop
mov
sarb
jns
xor
ret
push
popa
incb
loopne
inc
int
out
mov
test
ds
fldenv
scas
addr16
mov
enter
or
testb
out
and
cmp
push
fwait
sub
mov
adc
orl
cmp
mov
popa
lcall
fchs
mov
jno
inc
aad
insl
scas
add
jne
adc
addl
scas
mov
sbb
fsubs
jmp
ljmp
decl
loope
cmp
mov
in
in
pop
sbb
xchg
xchg
jmp
fistl
arpl
and
inc
mov
mov
push
push
xchg
test
insb
pop
cmp
inc
fcomp
fldenv
imul
mov
xor
ds
dec
push
sahf
aas
sub
or
wbinvd
dec
xor
or
lods
sub
in
mov
inc
je
inc
int
cltd
mov
pop
daa
orl
and
pop
sub
pop
mov
pop
mov
leave
mov
ds
mov
out
mov
add
aas
ret
xacquire
scas
rcr
cli
jle
clc
inc
mov
mov
add
sahf
call
mov
outsl
xor
or
add
pop
adc
xchg
pushf
xor
bound
mov
xchg
test
mov
das
inc
sbb
or
sbb
inc
iret
jmp
jecxz
fyl2xp1
and
xor
pop
cmpsl
cmpsl
pop
aam
pop
into
inc
rcr
adc
out
push
fstp
jp
cmp
mov
jne
popf
out
xchg
sub
aaa
out
and
mov
fdivrl
mov
sahf
xor
and
inc
arpl
and
xor
out
add
xor
xor
scas
mov
mov
xlat
fcmovu
ss
sti
dec
and
enter
ja
adc
fsubrp
insl
mov
xchg
or
sub
nop
inc
mov
ja
pop
xchg
imul
lahf
pop
int
xor
out
xchg
mov
or
loope
pop
fidivrl
rol
mov
mov
adc
mov
data16
ja
ljmp
icebp
ja
movsl
inc
mov
leave
push
add
jle
adc
inc
adc
or
mov
mov
push
stc
shlb
push
pop
cmp
mov
lock
subb
inc
insb
xchg
jae
aaa
sub
filds
push
mov
mov
cmp
jmp
hlt
das
nop
das
aad
xchg
lcall
and
jno
adcb
mov
das
jmp
out
jl
into
mov
pop
adc
incl
or
mov
mov
clc
adc
std
jmp
out
imul
jge
fs
jmp
jge
insl
pushf
jo
or
inc
or
and
sahf
pop
cmp
add
pop
inc
leave
pop
imul
pop
andb
es
movsl
popl
mov
sub
mov
sbb
xchg
iret
ret
xchg
sbb
push
or
shlb
mov
cltd
pop
icebp
mov
xchg
bound
push
stc
movsb
incl
push
sub
fs
pop
pop
xor
movsl
mov
test
test
xor
dec
mov
pusha
sbb
dec
mov
fsubs
xchg
sub
push
jp
repz
dec
lret
rclb
daa
lgs
mov
aad
dec
cmp
jg
jbe
mov
jo
xchg
xchg
jle
cltd
ljmp
xorb
ret
shrb
sti
lea
lock
push
xchg
cmp
enter
cltd
scas
out
and
pushf
iret
or
or
mov
aad
cwtl
add
js
les
test
jge
aad
pop
xor
scas
lret
pusha
subb
fsubrl
xor
cmpsb
daa
int
das
stos
xchg
push
and
jl
jp
mov
inc
inc
mov
push
push
pop
mov
cmp
dec
aad
addr16
push
xor
mov
dec
mov
inc
sub
inc
pop
pop
mov
add
movb
xlat
add
ss
dec
add
outsb
cmc
dec
aas
imul
xor
xor
hlt
fsubr
outsb
jno
or
sbb
xchg
out
call
pop
mov
js
fwait
arpl
cmpsb
pop
scas
rorl
ret
int
xchg
mov
or
mov
ja
lea
and
add
cld
sub
mov
int
mov
lcall
mov
mov
xchg
add
pop
xchg
mov
gs
int3
lds
sti
inc
xor
bound
daa
cmc
mov
push
adc
imul
xor
js
mov
pop
jo
mov
cmp
inc
test
pop
stos
int3
xchg
repnz
cltd
jp
notl
mov
scas
stos
ljmp
inc
and
mov
sbb
mov
hlt
inc
jno
cmpsb
or
xchg
jl
les
stos
leave
or
out
adc
daa
cld
sbb
jmp
push
or
int
sahf
fcoml
scas
daa
test
leave
xlat
mov
leave
mov
shll
fdivr
sarl
cmp
outsl
sbb
rclb
mov
pop
fdivrs
and
push
push
aad
sub
or
dec
or
sti
inc
xor
dec
addl
cs
mov
jae
sahf
test
dec
push
sti
sub
in
mov
or
cmp
ret
inc
dec
mov
into
mov
loope
fidivs
cltd
rol
call
adc
sub
test
mov
jp
imul
repz
pop
dec
sub
push
test
hlt
es
sbb
insb
dec
jnp
push
add
push
daa
aam
pusha
jb
and
xlat
sub
add
aas
mov
int
lods
push
outsb
nop
pop
mov
cmp
ja
and
stos
loop
imul
adc
add
out
mov
bound
ftst
jno,pn
adc
bound
mov
shll
mov
and
or
or
cli
pusha
inc
cwtl
and
aaa
fcmovnu
decb
mov
dec
sbb
cs
dec
pop
dec
push
sbb
push
dec
mov
je
fsubr
push
sbb
sub
and
or
inc
int
and
push
mov
jae
loope
movsb
ss
out
imul
test
dec
repnz
dec
and
mov
leave
out
jmp
adc
lret
loope
xlat
mov
imul
lods
inc
mov
mov
cmp
stc
fwait
in
bound
clc
mov
sbb
pop
cmp
adc
stos
and
invd
lods
sub
mov
cwtl
mov
cmp
add
out
xchg
cmp
pop
push
pop
bswap
jnp
xchg
pushf
jg
xchg
aad
or
ja
rcrb
out
or
dec
test
mov
jae
mov
mov
jp
int3
push
jne
lock
sbb
mov
andb
jecxz
add
mov
dec
outsl
lock
mov
mov
out
ss
sub
pop
je
or
jge
sub
mov
pop
sarb
mov
iret
xlat
xchg
xchg
xchg
cmp
rcr
push
jp
adc
incl
lods
fldenv
xchg
aam
and
xor
mov
add
scas
orl
cltd
into
pop
dec
fmuls
jcxz
daa
lahf
out
dec
push
call
mov
inc
xor
test
xor
inc
test
sbb
xchg
jns
dec
aam
mov
mov
mov
cmp
mov
xchg
mov
aaa
or
out
jo
cs
aaa
sub
movsb
rcrb
dec
ss
stos
popf
lahf
mov
cmc
icebp
mov
push
inc
roll
mov
xchg
inc
loopne
jb
fidivrl
mov
popf
mov
sub
and
daa
gs
push
gs
add
in
xchg
sub
jbe
stos
pop
ret
ss
and
addr16
stos
orb
test
jle
mov
gs
cmp
push
test
test
and
xchg
xchg
test
into
sub
xor
ljmp
cmp
cli
mov
mov
pop
mov
shr
ret
push
push
push
fldl
ljmp
test
lds
jl
lcall
push
es
mov
fwait
sbb
test
adc
fidivrl
leave
push
aaa
aam
and
cmp
adc
push
and
pop
scas
addr16
ret
or
cmp
dec
cli
inc
add
sbb
ret
xor
lds
int3
pop
addr16
jbe
cmp
adc
push
or
insl
dec
fidivrs
iret
jp
pop
mov
jbe
xchg
inc
addb
mov
add
and
xchg
aaa
loop
lcall
movl
cmp
add
sti
les
xchg
popa
adc
sub
loopne
loopne
cmpsb
or
shrd
push
push
add
test
cmp
icebp
inc
in
pop
and
jg
imull
xchg
negl
daa
cld
bound
xchg
xlat
pop
out
xchg
mov
cwtl
pop
inc
mov
mov
ja
ret
movsl
inc
dec
xlat
ds
adcl
sahf
cmpsl
mov
insl
xor
je
jmp
xlat
out
mov
loope
es
sub
movsb
mov
popf
cld
int3
std
mov
addr16
jae
xorb
push
xchg
push
inc
test
xor
jno
push
pop
pop
add
dec
out
push
lock
adc
idivb
mov
jge
push
idivb
insl
aam
mov
loope
add
inc
cmp
sub
dec
lahf
pop
sub
insb
jns
jge
xchg
cli
inc
insb
mov
mov
push
es
sbb
push
sub
cmp
pushf
in
repz
push
mov
inc
push
pop
lret
daa
aad
mov
cmp
in
lock
and
jae
and
imul
and
outsl
xchg
addb
cmp
fisttpll
push
out
lds
shll
dec
sbb
xor
in
cmc
sub
pop
outsl
scas
cmp
lds
push
sti
mov
jb
loope
dec
and
lcall
fsubrs
lods
shlb
movsb
subb
ss
xor
orb
sub
rcr
aad
lret
sbb
pop
xor
lock
pushf
mov
fs
lret
adc
cmp
add
jb
cmp
in
cmp
cld
push
enter
scas
jp
push
popf
pop
push
and
pop
cmpsl
out
or
mov
out
stos
sbb
movsl
std
push
xor
lahf
sub
push
mov
xor
xor
test
out
out
dec
sub
ss
lods
arpl
cmpsl
mov
addl
mov
into
stos
fbld
mov
mov
jo
cmp
lcall
pop
jecxz
gs
inc
push
jg
not
lods
push
aas
or
pop
mov
inc
add
mov
lret
jle
push
repz
mov
push
repnz
jb
and
jae
aad
loope
jns
pop
cltd
push
movsl
add
inc
dec
xchg
scas
cmp
and
dec
lahf
inc
inc
or
test
cmp
lret
ja
andb
cmp
cmp
aas
sub
daa
in
ss
mov
aas
xor
fwait
jb
jbe
ficomps
xchg
adc
aaa
add
filds
inc
sahf
lods
out
jae
jbe
or
jo
sbbl
in
movsb
cli
ja
clc
cmc
pushf
mov
loopne
loope
xor
outsb
mov
and
xchg
mov
cwtl
fcmovnu
inc
sub
dec
xchg
stc
ret
inc
xchg
adc
jbe
push
aaa
or
jg
fiadds
xor
popa
or
fstpl
outsb
dec
loopne
inc
roll
lcall
rorb
test
imul
push
xor
add
xchg
add
add
pop
xchg
xchg
pop
call
cmp
fisubrs
cwtl
and
shll
adc
inc
rol
stc
sbb
and
and
outsl
data16
mov
ja
push
xchg
cmp
hlt
dec
sbb
xor
adc
aaa
arpl
leave
xlat
mov
or
icebp
or
jg
lret
add
or
mov
test
repnz
dec
xor
cmpsb
add
popf
mov
out
or
gs
xor
push
das
mov
dec
aad
popf
pop
jns
lea
popl
shlb
sub
push
xor
lcall
pop
push
lods
shrb
jb
jnp
mov
popa
addb
repnz
fstpt
fildll
inc
xchg
scas
lds
mov
data16
clc
bound
das
icebp
cli
xchg
push
and
push
xor
pushf
add
jno
stos
mov
call
mov
mov
or
jmp
inc
jnp
test
jb
adcb
pop
shlb
test
rcl
push
test
and
sarl
or
and
xchg
mov
mov
add
and
fnstsw
dec
stos
push
icebp
jl
sub
xchg
out
data16
jae
mov
jo
shlb
mov
int3
jae
and
movsl
insb
xchg
je
sbb
bound
arpl
or
lods
lea
test
jg
or
or
clc
xor
out
frstor
dec
ja
xchg
jne
pop
js
pop
sbb
cmpsb
mov
adc
loopne
adc
mov
xor
stos
adc
xor
xor
sbb
mov
add
je
loopne
ret
aad
sub
inc
dec
add
mov
inc
in
mov
jl,pn
xchg
inc
xchg
xchg
nop
imul
ja
mov
div
add
ret
nop
mov
push
out
xchg
imul
mov
insl
add
mov
lods
inc
xchg
and
loopne
inc
xchg
aas
cmpsl
aad
pop
sti
repnz
xchg
jecxz
roll
dec
dec
icebp
clc
adc
loope
outsl
mov
stc
rcll
ret
jae
in
gs
les
sbb
popa
jbe
inc
loope
fdivrl
inc
mov
cltd
mov
fnsave
push
in
lods
aas
fcoml
jne
xchg
imul
dec
mov
in
mov
inc
jne
loop
jb
sub
in
sarb
je
xor
push
fcoms
mov
mov
arpl
mov
jmp
incl
std
lea
and
adc
sbb
sub
cmpsl
sbb
push
xchg
cs
push
inc
and
xchg
or
cltd
andl
aaa
popa
leave
push
sub
mov
clc
into
mov
xchg
fdivrl
mov
addb
cmp
xchg
repz
jl
mov
push
inc
mov
loop
ret
sar
out
pop
pop
or
cwtl
movsb
imul
sbb
mov
pop
ds
pop
jg
lock
mov
pop
js,pn
xchg
mov
mov
or
cmpsl
xchg
add
les
push
add
inc
jo
pop
cmp
lds
lds
mov
mov
mov
mov
test
stc
push
clc
repz
cmc
in
lret
test
aaa
adc
mov
push
jns
push
sub
cmp
mov
mov
cwtl
bound
jnp
sbb
lods
cmpsb
jbe
sbb
jnp
xor
xor
or
idivb
mov
dec
cmc
mov
cltd
movsb
add
stos
test
pop
xorb
pop
add
addl
mov
int3
fucomip
inc
mov
leave
in
jno
and
in
mov
cli
imull
inc
aaa
pop
mov
test
in
sbb
stos
inc
dec
notl
pop
dec
imul
mov
fadds
adc
insl
pop
mov
mov
fdivrl
jno
pop
data16
and
out
sti
repz
out
out
addr16
push
inc
lret
jb
ret
mov
mov
arpl
sbb
in
out
xor
test
inc
filds
mov
or
jle
andl
xchg
jg
add
xor
out
cmp
xchg
add
xor
sti
in
pop
cld
xor
es
mov
or
in
push
xchg
movsb
cmp
data16
insb
call
jmp
scas
mov
addr16
mov
push
sbb
into
stos
mov
inc
ret
sbb
lods
push
jne
ljmp
pusha
outsl
ss
nop
test
out
sbb
mov
popa
and
data16
push
push
inc
and
inc
push
xor
add
mov
jb
push
and
xor
jbe
jl
sbb
outsb
inc
arpl
das
push
mov
stos
inc
push
pop
xorb
andl
inc
hlt
or
incb
push
pop
sahf
xchg
in
sbb
ss
and
fs
mov
xor
pop
pop
outsl
int3
fmull
mov
mov
movsb
lods
jne
mov
inc
faddp
lahf
pushf
adc
mov
mov
cli
push
movsl
dec
push
or
int
aas
enter
xchg
pop
into
xchg
popa
adc
mov
pop
clc
sbb
subl
popa
data16
repnz
leave
add
insb
jmp
push
adc
mov
scas
add
fnstsw
inc
repnz
stos
jp
sub
dec
push
pop
and
sbb
lret
jbe
outsb
mov
das
sub
xor
scas
movsl
lea
sub
push
pop
pushf
mov
xchg
mov
mov
add
push
adc
cld
lret
roll
push
xchg
test
xorb
xchg
inc
rol
jno
test
mov
mov
add
and
adc
shrb
mov
mov
mov
mov
lods
inc
testb
pop
push
mov
out
xchg
cmc
sbb
lret
dec
dec
add
fidivs
outsl
pusha
xchg
movsb
jl
jo
insl
adc
xchg
ror
and
aaa
rclb
in
mov
xchg
mov
jmp
pop
dec
xchg
xchg
adcb
out
jo
adc
nop
fidivl
lock
push
sub
ds
pop
xchg
mov
adc
mov
fmul
adc
cs
mov
and
negb
fnstenv
andb
lcall
mov
arpl
das
xchg
xchg
lods
repz
mov
loope
imul
lcall
jcxz
inc
cwtl
cmpsl
bound
shrl
push
push
jl
and
xor
outsb
dec
cmp
sbb
das
scas
outsl
int3
and
cmp
movsl
add
test
out
sbb
sbb
push
insl
sub
lock
dec
mov
xor
arpl
aaa
fiadds
lock
adc
sti
inc
ret
adc
les
popf
lret
out
push
mov
cli
les
mov
pop
adc
and
xor
fcomp
xor
shrl
jbe
inc
jns
stos
xchg
jae
pop
sbb
aaa
mov
dec
cli
mov
xor
xchg
fcos
lds
xor
push
ret
inc
jbe
sub
dec
xchg
cli
push
pop
push
ret
iret
fstpt
xchg
rcrb
xchg
pop
sahf
cld
daa
adc
notl
sub
cld
leave
or
or
insl
ret
adc
adc
fucom
lods
int3
jmp
inc
sbb
mov
pop
mov
cmp
mov
mov
dec
mov
mov
jns
punpcklbw
dec
movsl
or
test
jle
insb
dec
mov
pop
mov
or
test
mov
cmp
mov
sahf
pop
popa
lret
cmp
jle
hlt
add
data16
imul
pop
aaa
xchg
xchg
cwtl
cwtl
mov
loop
iret
jg
rcll
adc
shr
rclb
cmp
mov
and
aam
gs
mov
mov
ja
and
pop
mov
bound
mov
ja
mov
out
pushf
cwtl
cmp
push
out
mov
jg,pt
xchg
in
add
movsl
xlat
mov
mov
cld
cmp
mov
jbe
mov
sub
rorl
or
sub
dec
mov
or
push
fcompl
out
leave
jb
push
xor
push
sbb
daa
out
into
add
sbb
inc
or
or
lock
xor
mov
xor
mov
movsl
or
nop
push
data16
jge
inc
push
pop
and
jae
push
sti
push
ljmp
pop
rcrb
push
dec
jb
pop
cwtl
das
test
les
pop
pop
cmpsl
ret
or
mov
pop
mov
cmpsb
jl
or
sub
cmpl
jmp
jns
idiv
cmp
cltd
ret
sahf
adc
addr16
out
out
and
xlat
inc
jp
mov
insl
out
cwtl
mov
insl
lret
xor
cltd
fsubs
cli
test
mov
insl
lret
xchg
dec
in
repz
adc
aam
sub
dec
xor
rolb
lahf
rol
adcb
popa
movsb
sub
pop
xor
ja
in
add
xor
mov
sahf
into
dec
pop
insl
loop
pop
xchg
lret
js
stos
xlat
lea
mov
test
ret
mov
lods
push
push
or
sbb
icebp
mov
loopne
push
or
test
sub
in
xchg
jecxz
and
fidivrs
in
out
or
pop
jp
jmp
roll
or
or
jno
mov
imul
fildll
mov
divl
xor
ret
stos
cmpb
sub
hlt
push
add
call
and
scas
or
xor
inc
and
dec
roll
push
ss
sub
sbb
test
aas
sti
adc
scas
push
add
pop
mov
insb
aad
cmp
inc
xor
popa
push
shll
jb
aam
mull
aam
rcrl
or
test
push
sub
hlt
inc
pop
insb
cmc
pop
int
dec
push
cwtl
insl
mov
cwtl
jo
sbb
fstpl
test
xchg
in
ljmp
rcrb
add
fwait
cmpsl
fs
int
cs
leave
or
dec
mov
push
xor
popf
out
outsl
push
pop
sbb
dec
and
xor
push
rorl
inc
bound
lret
pop
stos
push
adc
jl
daa
int
jecxz
insb
jbe
push
cmp
xchg
mov
or
jle
pop
dec
std
mov
mov
fwait
jne
push
mov
sub
sahf
andl
outsl
sub
mov
test
pop
add
out
mov
sub
lret
sahf
adc
adc
jb
cmp
test
and
sub
and
lea
shlb
mov
mov
bound
and
mov
fists
xor
jp
and
js
push
cld
jno
jmp
lock
ret
popa
inc
xor
fisttpll
imul
test
dec
adc
or
inc
call
jp
add
sbb
scas
and
popf
sub
das
lcall
inc
adc
cltd
push
mov
dec
jae
add
ljmp
mov
push
or
cltd
push
mov
pop
mov
push
dec
cmpsl
jecxz
das
divb
mov
dec
aad
ds
mov
or
dec
out
jge
mov
sub
or
testl
mov
or
pop
mov
pop
sbb
out
or
pop
or
push
lods
push
push
rcrb
xor
mov
cmpsb
fldenv
pop
arpl
shrb
cli
or
sub
add
pop
cmp
pop
cld
xlat
pop
mov
pop
call
jl
pop
inc
repz
dec
cwtl
inc
cmp
sbb
in
jmp
mov
clc
push
pop
mov
sahf
mov
dec
pop
mov
jp
ficoms
insl
bound
adc
and
jnp
jp
mov
pusha
imul
or
aas
and
dec
fsubr
fdivs
add
cmp
jl
inc
and
lea
sub
inc
mov
xchg
or
arpl
xchg
xchg
push
inc
sub
dec
push
clc
dec
stos
jp
iret
mov
add
subb
mov
xchg
je
inc
out
sub
sarl
pop
cmp
pop
cld
xlat
cmp
popa
or
faddl
sahf
pop
imul
decb
xor
xor
clc
ja
arpl
sahf
xor
ret
xor
call
in
pop
mov
inc
lcall
pusha
addr16
and
or
push
jp
dec
daa
jb
fildl
icebp
dec
mov
inc
cmp
push
mov
sbb
fmull
test
jmp
pop
popf
in
push
data16
addr16
mov
lods
sbb
jl
jns
fucomp
mov
push
inc
repz
cltd
adc
mov
jo
xchg
out
push
sbb
lods
es
mov
lahf
adc
imul
mov
andl
mov
rcl
test
add
and
adc
jg
enter
arpl
mov
mov
repnz
stc
clc
fstl
repz
pop
xchg
fdivl
outsl
xor
lret
repnz
sbb
inc
and
aaa
mov
outsl
sbb
sahf
xchg
xlat
jnp
push
jbe
sub
jg
pop
xchg
mov
sub
or
insb
dec
gs
aas
arpl
jmp
inc
test
int3
sub
enter
xchg
add
adc
movsb
mov
cmp
sbb
cld
stos
sub
insl
shrb
repnz
aam
jns
test
push
test
fisttpll
loope
xchg
add
adc
movsb
mov
popa
push
mov
inc
mov
shrd
cld
stos
sub
xor
clc
sarl
push
cmp
hlt
push
xor
clc
or
es
cltd
loop
loopw
cmp
push
sub
stos
jae
mov
sbb
sub
mov
cmp
xor
movd
xor
mov
inc
pop
xor
out
adc
cmp
ss
jb
adc
scas
add
xchg
sarl
ret
xchg
push
pop
adc
and
jo
and
mov
ja
les
addr16
xor
out
mov
push
ret
or
sbb
push
cli
ficoms
jo
and
mov
cli
insb
jge
cwtl
ss
mov
gs
andl
fistpll
test
push
jno
stos
test
leave
adc
mov
pop
fadds
mov
jae
mov
es
call
mov
pop
adc
inc
pushf
xchg
add
add
scas
fimuls
pop
insb
inc
ret
ficoms
inc
adc
jp
cmp
jmp
scas
sbb
out
push
inc
xor
inc
fdivrs
inc
push
jno
stc
mov
clc
and
leave
pop
dec
subb
shll
fdivrl
sbb
xchg
mov
int
cmp
fidivl
or
pop
xor
adc
cmp
nop
inc
in
xchg
mov
push
sti
addr16
in
aas
fs
out
sbb
push
roll
shrb
stos
mov
in
cmp
aas
cmp
imul
in
xchg
shll
pop
mov
sub
add
or
lea
dec
pop
fiadds
push
mov
cmpsb
xchg
call
inc
orb
scas
sti
adc
es
js
adc
ret
inc
cs
shrl
push
sub
outsb
push
mulb
adc
inc
inc
je
mov
loopne
push
mov
lods
or
xor
adc
jb
ss
dec
pop
inc
repz
arpl
daa
adc
push
inc
sub
xlat
pushf
inc
in
jno
sbb
mov
fwait
and
dec
notl
pushf
xchg
or
mov
out
pushf
cwtl
or
jge
rclb
imul
clc
movsl
cmc
mov
out
push
out
sahf
or
mov
sub
cmpl
mov
xlat
sahf
push
xor
push
stos
imul
and
xlat
adcl
push
push
ds
shlb
es
into
pop
inc
adc
pop
and
arpl
fldl
add
les
xor
add
cmp
push
cmp
andl
push
mov
dec
mov
testb
sarl
inc
mov
leave
dec
pop
shl
cmpsl
mov
push
loop
inc
aam
add
lods
jecxz
lahf
ret
pusha
lods
insb
je
cld
jp
pop
cmp
sub
mov
adc
cmc
lret
cmp
inc
mull
jl
nop
jmp
push
push
aaa
dec
testb
adc
pop
cmp
das
jae
mov
mov
pop
pushf
mov
jae
mov
and
xchg
pusha
mov
mov
jns
inc
sub
inc
jle
cld
xor
enter
jno
andl
lock
faddl
pop
psubd
adc
dec
dec
cmp
imul
imulb
push
shl
lods
lock
adc
sbb
mov
test
jle
add
cmp
lods
sub
push
sub
je
lock
imul
int3
jae
xchg
pop
jmp
sbbb
sti
leave
out
jmp
mov
loope
in
pop
aad
fsubs
cmp
lcall
pushf
sub
fs
mov
inc
and
pop
mov
xchg
push
iret
mov
add
sub
lret
sub
ljmp
stos
pminsw
push
dec
loope
into
xor
call
sub
and
push
cs
mov
cmc
js
repnz
repnz
fwait
mov
sbb
jnp
outsb
cmpsb
cmp
jo
jb
or
push
jmp
pop
cmp
ret
and
sbb
jae
xor
jecxz
mov
sbb
loopne
cmp
addr16
jl
ret
fs
ljmp
sbb
push
or
xchg
xor
lret
addl
aam
cmpsb
sub
dec
dec
sbb
rorb
std
sub
cmpsb
pushf
dec
mov
in
push
repz
iret
push
cmp
jmp
int3
jno
mov
ret
insl
ffree
add
and
dec
jmp
xchg
pop
cmp
pop
mov
mov
xor
fdivrs
push
fldt
push
sbb
icebp
inc
pextrw
sbb
cltd
stc
xor
mov
jle
loop
dec
jae
sub
les
sbbb
push
push
leave
stos
das
sub
adc
push
data16
jge
loope
pop
lods
shlb
inc
notl
pop
mov
adc
push
inc
pop
sbb
add
mov
in
movb
mov
sbb
fldl
adc
xor
movsb
jmp
lods
fcmove
inc
fs
sbb
push
pop
xchg
or
pop
scas
xor
mov
and
jae
leave
pop
inc
aaa
mov
mov
lea
jnp
movaps
lock
or
cmp
mov
subw
adc
rol
mov
gs
loopne
mov
mov
add
btr
dec
and
jle
cmp
out
repnz
push
jp
and
pop
xchg
cmp
pop
cs
cmp
mov
jae
iret
rorb
pop
xchg
clc
arpl
adc
aam
mov
mov
mov
add
jmp
dec
sub
in
inc
sbb
add
sbb
das
aaa
pop
shll
pop
mov
and
cmpb
mov
or
call
pop
lods
leave
sbb
mov
std
addl
insb
lock
push
sbb
and
repz
jmp
cli
or
and
pop
mov
scas
test
lods
inc
mov
and
and
pushf
cmp
jns
insb
jmp
xor
mov
fistpl
xchg
pop
mov
dec
gs
imul
inc
divps
pop
int3
cltd
add
fldt
mov
mov
mov
jns
adc
lock
pop
jns
jnp
inc
or
imul
jno
and
and
jmp
stc
push
clc
adc
xchg
mov
cmc
xchg
popf
sub
repz
mov
rcll
sbb
sbb
out
mov
insb
into
mov
sub
enter
inc
rcr
lods
pop
adc
inc
push
inc
xchg
sarl
cmp
lret
ficomps
cs
in
clc
fwait
lods
sbb
mov
mov
outsb
xor
insl
and
mov
push
inc
adc
cmpb
xlat
sbb
push
sbb
push
jge
iret
cwtl
jnp
repz
mov
inc
adc
pop
sahf
and
xchg
jb
adc
test
mov
adc
ljmp
jle
scas
movsl
lods
clc
xor
xlat
sub
xchg
sahf
and
fcmovb
ffree
shlb
inc
dec
pop
jnp
sub
movsb
inc
sub
in
add
sbb
dec
rcl
inc
dec
xlat
push
mov
insb
mov
pop
shlb
insb
push
or
dec
dec
sbb
ficoml
xchg
stos
inc
sti
stos
fldcw
sti
aas
cmpsl
rorl
and
ret
test
inc
pop
mov
pop
jo
sti
push
mov
xor
jo
sahf
scas
or
notb
sub
sahf
loop
pop
mov
sbb
jne
faddp
sahf
cld
out
ret
or
cmpsl
sarb
lret
outsl
adc
int
pop
mov
inc
popa
faddl
mov
jge
idivb
cs
jb
rcrb
fstl
mulb
enter
xor
int
movb
mov
add
stos
lahf
xchg
negb
cmpb
jle
stc
pop
push
jae
bound
dec
das
jns
lahf
and
mov
fcompl
and
mov
negl
cs
mov
shlb
xchg
xchg
loopne
sahf
pusha
jecxz
fstl
sub
mov
pushf
push
stc
ror
inc
test
aam
movsl
cmpsl
lds
test
pusha
sahf
dec
xchg
in
sub
and
push
lods
inc
movsl
jae
cmpsl
and
pop
in
push
rorl
cmp
imul
mov
je
int3
mov
lds
sbb
xchg
aad
in
mov
ds
cwtl
push
popf
call
mov
sti
add
xchg
adc
cltd
cmp
movsb
pop
dec
and
xlat
in
or
xchg
xor
inc
cvtpd2ps
push
jecxz
std
ds
sub
pop
inc
test
cmp
lods
push
inc
push
or
ret
fwait
js
dec
cmp
mov
sub
xor
pop
or
lahf
outsb
es
daa
push
push
pop
js
sub
les
cmp
inc
mov
ss
lret
xchg
dec
dec
daa
cmpsl
sahf
mov
aas
xlat
jns
inc
jecxz
cwtl
pop
sub
andl
dec
mov
cs
and
aam
dec
cmpsl
sub
pop
imul
out
jmp
loopne
push
es
pop
idivb
sbb
cmp
dec
sbb
inc
loop
ret
das
insl
flds
dec
lds
out
push
pop
in
cmp
cmpb
sbbl
cwtl
jo
in
mov
ds
jmp
inc
xchg
mov
or
incl
push
mov
jnp
xchg
adc
pop
mov
and
stos
arpl
push
mov
mov
push
fs
jg
lds
insb
jns
dec
sbb
std
sbb
clc
lcall
cmp
sub
lret
imul
push
mov
pop
push
call
mov
xor
aad
push
cli
fists
lcall
cmp
les
ja
cmp
mov
jg
loop
repnz
jmp
mov
ror
mov
loope
or
mov
hlt
test
movsb
out
mov
test
in
inc
repnz
push
ret
sbb
cmpl
ss
cmp
ljmp
mov
sub
pop
shlb
dec
pop
pop
test
push
enter
pop
call
push
pop
lea
jge
fdivl
sahf
xlat
xor
add
jp
xor
loop
pop
lods
fwait
nop
in
jae
cmpsb
popf
rcr
push
lock
adc
mov
or
inc
mov
sbb
scas
push
mov
dec
jp
rcrl
push
jl
inc
push
clc
out
and
sub
and
loopne
jb
cld
repz
loop
std
loope
add
sbbl
xlat
jbe
stc
cltd
inc
fwait
js
aas
daa
movsb
daa
and
pop
add
lock
sub
mov
ss
adc
lock
push
fnstsw
gs
sahf
inc
jge
sub
mov
or
pop
sub
test
jo
iret
inc
sub
testb
stc
sub
jl
bound
inc
adc
ja
mov
fwait
jecxz
mov
mov
ljmp
outsl
push
adc
das
pushf
sbb
lahf
xorb
mov
inc
fbld
mov
jmp
pusha
imull
stos
stos
int3
in
add
test
add
clc
orb
xor
adcl
inc
mov
sbb
add
cmpsb
or
mov
cli
js
push
int
sbb
cld
popa
imul
lock
and
lcall
inc
enter
or
pop
pop
push
loopne
jl
push
imul
jb
sahf
xor
stos
pop
dec
xchg
aaa
jb
shlb
or
push
dec
dec
cmp
mov
sbb
ret
aaa
fmull
xchg
and
in
outsb
cmp
xor
jns
stos
je
cmp
adc
xchg
mov
call
mov
incb
stc
stos
repz
out
sbb
mov
bound
je
out
sbb
repnz
incl
push
je
inc
push
xchg
lods
inc
sub
mov
and
inc
pop
sti
mov
mov
lock
lret
dec
jno
push
orl
addb
fsub
das
cltd
push
fs
shlb
dec
adc
xlat
je
xchg
cmp
pop
sbb
xchg
pop
aaa
adc
sarl
cmp
xchg
lret
mov
jae
and
andb
sub
inc
imul
pop
repnz
xchg
cmp
dec
ret
rcll
pop
push
cmp
outsb
rcll
mov
or
dec
lret
popa
sbb
gs
pop
insl
mov
jae
sbb
cmpsl
call
pop
mov
push
adc
push
ljmp
push
pop
stos
lds
stos
adc
push
jmp
loopne
mov
mov
je
jmp
mov
cmp
sub
pop
mov
out
pop
push
call
push
or
mov
outsb
shrb
jg
bound
inc
push
add
push
js
fstp
sbb
out
aam
pop
jb
fmuls
ljmp
stos
cmpb
xchg
cmp
and
fwait
bnd
in
lea
cltd
in
cli
iret
pop
push
mov
jne
inc
mov
pop
add
mov
out
ljmp
sub
xchg
pop
test
add
jle
push
gs
mov
add
or
inc
int
push
cmp
popf
not
or
pushf
cmpsb
adc
out
dec
out
sbb
in
pop
push
stos
dec
xor
int3
pop
int
and
dec
push
adc
aas
jl
cmp
cs
xor
sbb
lret
xor
gs
sub
imul
jo
jecxz
or
mov
sbb
stos
sahf
mov
xor
sbb
jecxz
aas
pop
dec
add
mov
push
add
iret
sub
and
lods
sub
mov
push
bound
push
xchg
cmpsb
push
xchg
mov
push
push
dec
jmp
imul
outsb
sub
ror
std
loopne
insl
mov
xchg
mov
nop
pop
in
xor
jge
pop
rorb
lds
pop
ret
das
sti
cmpl
cs
jle
int
pop
stc
sbb
fldcw
mov
xor
lret
mov
jnp
pop
pop
loop
adc
cmp
hlt
pusha
push
xlat
movsl
jl
repnz
loop
jle
adc
clc
cmpb
ficompl
mov
ret
pop
jae
mov
loop
call
mov
fdivrs
je
mov
jb
stos
jno
fwait
push
cmp
lock
mov
loopne
jne
repnz
cmp
outsl
stos
cmp
fmull
cmp
xlat
cmp
push
fmuls
sub
pop
dec
int
sub
pushf
mov
xchg
pop
fwait
ljmp
popa
push
mov
movsb
push
insl
push
jle
mov
cmp
daa
push
int
subb
push
mov
arpl
mov
cmp
scas
shrb
push
rcll
jecxz
cmp
sarl
scas
lock
and
push
loop
jb
cs
adc
dec
sbb
or
pop
xorl
pop
dec
mov
pop
mov
cltd
cmc
pop
or
mov
mov
mov
dec
jmp
and
push
add
fwait
scas
sub
call
ja
gs
arpl
nop
sbb
clc
lds
push
ret
mov
addl
mov
add
rolb
jns
aaa
push
int3
sub
jns
ret
jmp
loope
cltd
stos
loopne
loope
inc
ret
lock
aas
std
testb
jo
xchg
pushf
or
dec
aaa
lds
arpl
pop
mov
sbbb
cli
test
push
pop
pop
sub
sub
sbb
bound
movsl
lods
icebp
jns
add
fsubrl
movsb
out
ret
cmp
cld
adc
adc
into
or
mov
ja
add
dec
test
loope
mov
inc
leave
in
push
or
rcrl
inc
imul
in
xchg
dec
mov
xlat
rolb
jo
inc
and
int3
lahf
iret
out
sbb
cs
adc
pop
mov
mov
js
push
imul
mov
cmp
fldcw
adc
xchg
fs
mov
xchg
fistpl
jo
jp
fisttpll
mov
ds
ror
xor
out
test
jg
add
addr16
sbb
sub
inc
adc
inc
call
adc
lret
enter
or
jmp
dec
jnp
into
and
in
sbb
push
ficompl
jno
sbb
fistps
push
in
ljmp
das
sbb
sbb
arpl
mov
mov
jmp
xchg
adc
mov
adc
sbb
xor
int
in
pop
xorl
sub
les
scas
mov
fs
xchg
test
outsb
mov
add
int3
xorb
cmp
insb
push
aas
sbb
add
mov
push
xchg
push
test
leave
sahf
jmp
mov
aaa
sbb
mov
pop
mov
push
inc
in
cmp
sbb
jne
adc
sbb
mov
mov
ds
loopne
mov
mov
xchg
cmp
stos
jge
sbb
ja
xchg
push
lcall
inc
std
iret
out
add
sbb
inc
adc
stos
imul
das
sub
jecxz
repnz
fnstcw
push
xor
notl
sub
out
mov
adc
push
push
movsl
repz
xlat
pop
sub
jg
scas
pop
sub
jle
lods
jb
jmp
fcmovnu
xchg
xor
mov
xchg
sbb
cwtl
push
imul
cwtl
xor
push
cmp
jbe
jle
add
sbb
and
xor
lods
aad
ja
pop
xor
mov
pop
lods
test
fldlg2
sar
scas
jno
dec
and
and
mov
mov
fs
lret
mov
gs
pop
push
pop
pop
sub
cs
iret
xchg
stc
ljmp
sahf
sub
cmpsb
pop
pop
mov
push
repz
sbb
sub
in
test
or
mov
bound
shl
in
fsts
or
or
jecxz
mov
divl
aad
xor
jl
push
dec
mov
dec
lret
fstpl
push
jecxz
xorl
leave
inc
push
or
adc
cli
sub
dec
outsb
push
ss
jmp
push
dec
testl
addr16
jo
sub
idivb
xchg
mov
test
cltd
bound
cmpsl
ja
iret
mov
jbe
test
loope
sbb
test
in
adc
dec
pop
aas
mov
cmp
sub
lcall
push
add
fs
call
jae
cmc
add
jbe
ss
mov
shlb
mov
mov
or
fsubrl
sti
fs
insb
frstor
test
cmc
imul
pop
add
jbe
addr16
sbbb
dec
fucom
xchg
test
rorl
mov
xchg
das
push
mov
cmpsl
repz
or
repnz
inc
pop
outsb
xchg
out
mov
out
popa
ret
and
mov
xchg
arpl
xchg
dec
pusha
adcb
adcb
sbb
shr
jle
sahf
mov
vpaddusw
movsb
ljmp
xor
rolb
sti
js
aam
xor
xor
add
pop
loop
inc
dec
and
or
inc
sti
add
faddp
adc
fdivrs
and
xor
xor
fs
daa
jle
mov
mov
sub
and
sbb
mov
pop
div
push
pop
adc
icebp
push
and
pop
lret
je
jmp
xchg
repz
ja
pop
xor
pop
mov
mov
jmp
dec
sarl
push
dec
aad
pop
push
mov
add
or
movsl
movsb
hlt
es
test
in
lret
int3
sub
outsb
aad
call
test
mov
sarl
js
inc
sbbb
ds
cmc
jp
mov
test
testl
jne
test
xchg
inc
scas
pop
xchg
addr16
mov
in
jg
in
or
nop
xchg
adc
pushf
push
in
lock
jge
lret
js
xlat
mov
inc
scas
and
cmp
iret
push
popa
aas
xor
xor
scas
popa
xor
mov
movsb
or
stos
repnz
fwait
test
cmpb
movsl
cmp
pop
loop
aas
jo
mov
cmp
cmpsb
jge
dec
std
push
arpl
out
push
xchg
xchg
insb
pop
add
movsl
pop
fnstcw
dec
fildll
pop
popf
jnp
in
into
out
addr16
es
inc
add
push
outsl
lcall
mov
jg
jbe
divb
or
cmc
rcl
enter
mov
test
aas
push
shl
cmp
pop
or
dec
jno
lahf
cmp
lcall
mov
outsl
and
xor
fcmovnu
scas
lods
lds
and
sbb
cmp
sub
or
xor
scas
mov
dec
xchg
pop
rorb
or
fcmovnb
dec
das
in
movsb
lret
mov
push
mov
mov
insb
inc
adc
jl
ss
insl
jnp
imul
cmpsl
iret
daa
bound
fdivrl
push
shlb
imul
sbb
std
punpckldq
sub
shlb
das
jo
lds
and
jecxz
cmp
fs
call
lods
or
fistps
push
in
scas
cli
jb
inc
movsb
aaa
in
jmp
dec
sub
loopne
xchg
test
mov
shll
fisubl
xchg
hlt
pop
test
pop
hlt
sbb
mov
call
xchg
hlt
cmp
add
mov
or
jg
pop
dec
shlb
xchg
xchg
lods
and
xchg
movsb
cld
pushf
fwait
cli
cmp
test
pop
pop
pop
cltd
xchg
mov
stos
sbb
sbb
idivl
adc
xchg
cld
shlb
cld
sti
add
fs
ljmp
dec
iret
lret
xchg
scas
xor
adc
pop
ss
call
sbb
aam
cmp
cmpl
bound
out
mov
dec
into
push
add
push
dec
mov
and
dec
pop
fistl
fdivp
outsl
bound
sarl
jecxz
mov
push
rol
pop
sbb
xor
scas
jnp,pn
dec
out
push
ljmp
movsl
add
xor
gs
inc
adc
jb
mov
nop
ja,pn
cmp
mov
leave
mov
jmp
std
leave
mov
ss
les
xchg
jns
in
dec
inc
jg
jne
fisubs
cli
fdivrp
insb
cs
out
cmpsb
stos
fcoml
adc
ds
and
or
sub
mov
inc
dec
cwtl
mov
loop
add
cmp
inc
push
dec
rol
test
xor
in
andl
out
lock
or
mov
cs
je
mov
push
ja
iret
imul
test
addl
sub
cltd
scas
les
xor
jecxz
gs
out
shr
scas
arpl
call
jl
hlt
inc
es
xchg
add
or
stos
repz
push
push
aad
push
ss
xlat
test
adc
test
mov
sub
sbb
jb
pop
push
ss
ds
and
and
push
clc
mov
cmp
sub
pop
xchg
ljmp
jp
clc
pusha
mov
es
cli
cmp
arpl
cltd
inc
out
add
insb
in
lea
gs
arpl
mov
ja
mov
cmpsl
outsl
dec
insb
es
imull
add
data16
loop
ljmp
lcall
push
cwtl
in
test
xor
xchg
mov
xor
sahf
aaa
loopne
call
jo
int
orb
inc
enter
cmpb
jno
add
test
add
cs
imul
rorb
stos
jbe
aam
arpl
xlat
push
repz
inc
pop
mov
jnp
and
inc
pop
sbb
jnp
mov
ret
pop
lock
add
dec
adcl
pop
fidivrl
mov
scas
and
jo
ss
xchg
in
std
dec
jecxz
adc
push
jae
xchg
aam
in
cmp
jge
aam
das
aas
jmp
sub
popf
test
mov
out
pop
pop
ss
ffree
sahf
or
jge
ljmp
outsb
test
cmc
jbe
or
mov
repz
cmc
int
push
ret
push
cmp
jne
adc
in
adc
fcomip
inc
neg
xor
add
jb
push
mov
mov
push
repnz
push
sahf
jmp
gs
pop
mov
bound
aaa
jae
mov
shlb
addr16
add
jnp
or
hlt
and
push
lret
fsubrs
fs
xchg
pop
jb
jmp
mov
xor
test
mov
loopne
mov
fcmovu
xchg
clc
mov
pop
cmp
decl
jns
mulb
pusha
ljmp
pop
sub
es
jge
inc
mov
xor
mov
dec
adc
jnp
punpcklbw
test
rolb
push
hlt
xchg
outsb
or
leave
fwait
push
negb
test
stos
dec
and
or
xchg
xor
cmp
jle
cmp
bound
outsl
push
jecxz
push
cmp
add
jnp
cs
mov
xchg
push
sbb
shlb
and
cwtl
test
jl
shl
xor
test
and
mov
stc
cmp
repz
dec
mov
jnp
das
in
shll
push
mov
adc
or
adc
dec
lcall
jg
or
xor
lahf
outsb
cmpsb
aas
and
jge
cmp
leave
and
ds
packuswb
mov
lea
call
mov
push
addb
xchg
push
cld
dec
mov
ret
inc
loope
sub
cltd
cmp
cmp
cmp
xchg
push
fwait
in
stos
add
push
gs
ret
dec
dec
loop
pop
inc
enter
subb
ds
mov
loopne
dec
fimuls
pop
cs
cltd
in
xchg
mov
mov
orb
jecxz
jl
push
fmull
movsl
daa
jecxz
cwtl
push
cld
mov
lods
jp,pn
addl
aam
in
and
out
popf
jge
scas
std
repnz
sbb
dec
xchg
clc
inc
sbb
sub
mov
mov
leave
test
sbb
bound
adc
cltd
jne
shlb
push
push
xor
mov
popa
leave
mov
outsb
push
data16
pop
sbb
scas
iret
jns
and
repnz
xor
cwtl
push
cld
mov
pop
bound
testl
iret
in
in
adcb
cmp
add
aad
adc
lcall
mov
jb
adc
mov
mov
cmp
lods
lea
shl
push
inc
mov
xchg
inc
cld
jmp
inc
add
sub
mov
mov
push
or
fistl
insb
mov
push
cwtl
aas
shl
addl
or
xor
sub
fnstcw
out
sbb
lds
stos
xor
loopne
cs
and
adc
aaa
out
jno
push
sub
jle
xchg
mov
mov
cld
sbb
aam
jp
adc
fnstsw
pop
or
dec
loop
inc
movsl
pop
ss
mov
push
dec
sub
mov
out
scas
jae
and
stos
mov
xchg
xchg
out
loope
mov
push
negb
push
sub
bnd
pop
mov
mov
cmp
or
sbb
and
cli
repnz
add
mov
mov
es
xchg
mov
sub
ljmp
adcb
add
xchg
mov
test
xchg
mov
jne
mov
aad
push
xor
push
adc
out
mov
push
dec
rcll
insb
sbb
lret
sbb
pop
insl
sti
push
in
jnp
cwtl
xor
out
push
shlb
push
lahf
fstpl
or
cmp
lods
mov
and
xchg
pop
test
sub
mov
mov
and
mov
add
sbb
pop
jae
xor
das
mov
mov
sub
or
inc
or
or
negl
in
jg
pop
lods
pop
push
and
sbb
sbb
push
shr
iret
cmp
iret
sub
cmpsl
sub
and
sub
pop
loop
repz
jb
mov
adc
pop
aad
sub
push
pop
and
jge
sbb
mov
jge
mov
mov
inc
xor
popa
jl
xor
xor
and
ss
pop
ja
int3
sbb
lcall
mov
es
daa
mov
stos
push
pop
and
push
cmp
repnz
stos
sahf
cmp
lahf
sub
push
mov
outsl
pop
stos
dec
xor
or
inc
cmp
into
inc
pop
mov
xor
int
jbe
mov
mov
cmp
pop
mov
fsts
jns
mov
orb
push
aam
call
push
or
pop
cmp
xor
inc
push
add
push
sbb
test
push
mov
leave
mov
mov
push
sbbl
dec
dec
xchg
rclb
aad
int
xchg
int
xor
push
scas
faddl
add
or
xchg
pop
push
push
add
in
ja
cs
xchg
scas
shll
stc
sti
mov
aad
jge
lret
pop
call
sahf
inc
daa
shrb
in
adc
out
ja
mov
fldenv
xor
shll
adcl
jge
movsb
ss
push
adc
add
push
mov
mov
lret
pop
sbb
xor
push
inc
pusha
jns
lock
cmp
ja
push
out
loop
fdivs
add
sub
xor
push
inc
dec
addr16
sti
add
cmpsl
cmpsl
and
pushf
fs
pushf
pop
hlt
xlat
or
pop
aaa
out
addr16
jg
in
push
lods
dec
cmp
fsubrs
data16
sbb
push
adc
ret
into
or
mov
mov
inc
jne
adc
or
pop
adc
jmp
push
lcall
ret
ds
stc
sub
sbb
mov
arpl
adc
lock
inc
fdivrs
sub
arpl
pop
shr
dec
jp
mov
in
rcr
and
inc
inc
adc
xor
out
fnstcw
jns
adc
subb
dec
mov
call
adc
push
push
cwtl
scas
xor
ljmp
mulb
call
lods
pop
xor
sub
nop
jp
test
push
roll
test
inc
dec
cmp
scas
repnz
les
bound
push
jo
adc
pop
push
xchg
mov
out
aad
adcb
rcl
fwait
out
jecxz
mov
push
mov
xor
xchg
lret
add
nop
loop
inc
xchg
sbb
xor
std
jge
out
mov
inc
shl
sub
jb
lret
cmp
sub
aad
pop
jne
test
aad
cwtl
xchg
clc
mov
mov
jecxz
fst
scas
mov
inc
stos
xchg
ror
pop
lea
mov
fidivs
mov
or
repnz
push
and
sbb
xchg
call
xor
push
mov
sbb
lahf
insb
mov
icebp
or
aad
out
dec
pop
test
xchg
mov
add
push
pop
shrb
inc
mov
fbld
jmp
aad
clc
or
out
js
push
cmpsl
in
mov
sub
xor
loop
int
inc
shl
or
fld
push
out
mov
mov
aaa
dec
jns
imul
pop
add
mov
mov
std
ret
in
inc
aaa
cmpsl
pop
mov
stc
test
jmp
mov
and
fdivl
pop
dec
adc
jb
dec
xchg
or
cs
cmpsb
out
mov
mov
sub
lcall
call
insb
jecxz
aad
sbb
cmc
mov
or
pop
mov
call
adc
mov
add
sbb
xchg
xchg
aaa
pop
cmp
xchg
popf
sub
jle
jae
pop
lahf
jecxz
pop
adc
sti
sbb
shll
hlt
movsb
mov
or
daa
mov
jmp
jp
pop
add
mov
ret
mov
in
fistps
xor
and
pop
cmp
add
sub
cmpsb
aam
adc
xor
mov
fmull
inc
jle
into
cltd
outsl
jns
and
xor
inc
sub
rolb
ret
push
add
movsb
cmp
loopew
inc
daa
jp
addl
arpl
gs
cli
sub
lds
test
pop
or
ja
mov
cs
fwait
push
pop
shrb
jg
and
repnz
out
test
hlt
jae
sub
es
and
adc
ffreep
jecxz
dec
push
sbb
sti
sbb
cmpsb
jmp
mov
scas
subl
popa
idivl
inc
rcrl
data16
adc
popa
fmul
mov
push
decb
adc
ret
add
lret
sub
xchg
iret
pop
ret
pop
inc
mov
cmp
xor
ss
pusha
xchg
sbb
in
testl
xchg
jns
lcall
repnz
dec
xlat
jns
outsl
mov
dec
mov
loopne
mov
mov
jp
pop
je
push
clc
pusha
adcb
incb
add
enter
fcompl
shll
push
jns
xchg
leave
adc
jecxz
pop
jo
rcll
enter
xor
ret
sahf
out
cmpsl
xchg
nop
divl
add
fistpll
pushf
or
jae
loope
jg
xchg
jmp
scas
fucom
rcr
or
hlt
jl
imul
ror
xor
inc
pushf
xchg
lods
lcall
mull
mov
test
rolb
jnp
pop
lods
mov
mov
or
jb
rclb
cmp
mov
and
ja
hlt
dec
fsub
push
dec
dec
gs
cwtl
mov
mov
mov
lret
out
scas
xor
push
add
and
clc
iret
popf
push
jno
inc
rcrl
data16
adc
xor
sahf
test
jno
movsb
sahf
ret
sar
push
jp
xchg
in
test
ljmp
pop
mov
push
push
push
sub
add
xchg
cmpsb
sub
stc
clc
call
cmp
sahf
cmpsb
out
dec
pop
stos
adc
jo
clc
cmc
fistl
mov
int
or
adc
xor
aas
jmp
ja
mov
sub
cli
cmp
inc
sub
xchg
adc
or
fidivrl
xchg
xor
inc
dec
loopne
dec
outsl
add
imul
test
or
lret
insl
or
out
push
cmp
sti
mov
lock
jmp
pop
push
lahf
leave
clc
mov
sbb
mov
push
fdivrl
mov
sbb
mov
adc
pusha
pushf
pop
fdiv
and
fs
out
pushf
mov
add
lds
xlat
inc
push
daa
leave
or
arpl
fistps
fcomip
pop
dec
or
gs
lahf
out
pop
mov
dec
jo
add
loopne
movsb
stos
loop
outsl
test
push
or
std
movsb
mov
sub
xchg
and
add
sbb
std
lahf
and
jne
mov
or
shrl
in
xor
fs
lcall
enter
sbb
pop
subb
and
pop
mov
mov
test
arpl
cmp
sbb
cmc
out
or
add
les
push
push
fwait
jae
mov
icebp
and
push
jge
leave
jbe
out
jp
test
leave
pop
adc
in
repnz
ljmp
lahf
mov
scas
roll
jns
je
jae
add
adc
pop
sahf
in
test
ret
pop
xchg
cli
and
stos
cmpsl
pop
imul
fsts
jbe
insb
and
ret
cltd
lret
sub
sti
loop
in
dec
mov
cmp
sub
inc
stos
and
add
or
loopne
ficompl
fs
mov
out
test
mov
cmp
les
mov
jl
fisttps
inc
pop
aaa
popf
adc
or
adc
cmp
xorl
sar
adc
dec
in
dec
movsb
nop
mov
mov
sub
dec
push
xor
dec
add
mull
push
and
xor
ret
fidivrl
aad
mov
adc
jecxz
add
rolb
mov
jno
xor
subl
cmpsl
ds
enter
sbb
inc
daa
sbb
or
lock
shr
mov
hlt
out
jecxz
loopne
adc
push
cli
daa
lahf
cwtl
xor
mov
bound
ret
sbb
cmpsl
bound
jb
inc
lods
in
jmp
fadds
inc
lcall
sahf
push
lret
sahf
and
popf
test
add
ss
mov
sti
cmp
fs
jp
sbb
lahf
pop
and
or
idivb
mov
fmulp
xor
adc
inc
and
imul
xchg
mov
add
lcall
nop
xor
push
sbb
shll
jns
mov
xchg
notl
and
int
xchg
jmp
push
lock
aaa
dec
dec
dec
sbb
and
adc
or
ret
aaa
lahf
mov
mov
xchg
imul
lret
outsl
pop
pop
test
sub
inc
loopne
mov
adc
push
lcall
adc
imul
mov
out
int3
pusha
pushf
test
mov
addl
es
push
movsl
sbb
inc
or
call
adc
xchg
pop
mov
shr
sahf
fsubl
sub
mov
push
adc
xor
out
pop
push
in
pop
xlat
popf
lcall
cmp
sti
mov
scas
lock
sbb
int3
cmp
mov
xor
cltd
addb
xor
outsl
jae
push
in
push
xor
movsb
fucom
test
clc
cmp
outsl
aaa
cmpl
cmp
rcrl
jnp
rcl
or
push
fcmovne
bound
adc
shlb
out
clc
out
mov
addb
data16
sti
lahf
scas
adc
les
popf
pop
push
jno
cld
cmp
jge
xor
shr
stc
dec
cli
inc
add
lock
lods
inc
loop
sbb
cltd
jno
int
jmpw
cmpsl
sahf
cmp
enter
cli
hlt
xor
push
fld
ret
ljmp
pop
jl
inc
pusha
push
stc
mov
jl
cmpsb
clc
mov
fmull
addr16
sahf
xchg
stos
mov
pop
jmp
or
movsb
aas
push
lds
sarb
xchg
jl
mov
shlb
popf
cltd
rorl
and
fucomip
gs
push
shrb
jg
mov
xor
mov
pandn
aam
adc
mov
jmp
jo
out
fdivl
into
cmpb
in
mov
int3
mov
ret
push
fnstcw
sub
cmc
shll
ret
test
cmc
jbe
inc
insb
insb
pop
xor
mov
jg
ljmp
lock
push
frstor
cltd
add
cli
mov
lods
mov
push
ss
push
or
and
push
cmpsl
add
test
jb
lcall
jnp
lcall
fidivl
xchg
into
cmp
sbb
adc
and
pop
stos
push
sub
dec
mov
pop
pop
xchg
int
sbb
mov
cwtl
inc
dec
sti
mov
data16
dec
arpl
inc
pop
mov
mov
push
fiaddl
lods
cmp
and
mov
gs
pop
mov
xchg
test
enter
jge
and
dec
ret
shlb
pushf
sbb
mov
popf
xchg
decl
dec
add
jo
pop
mov
adc
cmp
xor
mov
mov
stos
sub
es
mov
vsqrtsd
or
mov
xor
or
cmpsl
sbb
testb
leave
add
mov
enter
pop
mov
sbb
add
xchg
and
popa
push
push
bound
or
mov
push
movl
xor
mov
enter
out
xor
iret
xor
jg
insl
dec
sbbb
sbb
ret
add
fsubrp
jmp
loop
and
fbld
lea
mov
insl
repz
jno
sti
jbe
adc
les
dec
mov
adc
pushf
lods
test
hlt
pop
outsb
outsb
push
shlb
cmp
mov
inc
push
sarl
push
std
not
xchg
cld
in
add
xchg
cmp
cs
adc
rcr
sbb
dec
clc
sbb
ret
aaa
push
cltd
jle
push
or
push
push
cli
les
push
push
and
out
push
in
addb
xchg
jg
iret
pop
adc
mov
aad
cwtl
push
pop
adc
sub
pushf
out
pop
pushf
stc
dec
lcall
push
das
or
xchg
ror
dec
mov
leave
cmp
insb
push
adc
lahf
int
inc
mov
test
cmp
xchg
and
sbb
add
xchg
dec
pop
or
inc
push
mulb
pop
push
jl
pusha
lret
out
cmp
pop
aam
or
aaa
mov
or
out
stos
imul
data16
cli
push
scas
sahf
fstl
dec
insb
jmp
jb
daa
rorb
sub
cwtl
rep
push
clc
pop
dec
adc
mov
push
sarb
adc
xor
pop
sbb
xchg
pop
mov
push
scas
ss
std
inc
cmp
movsb
fisubrs
lahf
insb
pop
in
cmp
cs
popa
sub
sub
js
mov
in
mul
call
lods
icebp
test
jnp
push
ds
repnz
or
movsb
pop
das
psubusw
stos
aas
jl
xchg
mov
jle
fiadds
dec
mov
in
into
fidivl
out
fsubp
mov
insb
sub
out
push
imulb
ds
pop
push
call
mov
test
test
mov
je
pop
stos
pop
xchg
push
test
sub
ret
arpl
std
xor
frstor
jae
adc
stos
out
stc
pop
testl
sti
adcl
lds
push
xor
jecxz
sbb
insl
mov
jl
addl
rorb
js
push
negl
addr16
xchg
rorb
stc
add
pop
jo
test
xor
xorb
adc
jmp
add
pop
xchg
imul
add
inc
popa
iret
clc
or
and
cmc
mov
test
icebp
rolb
shr
notb
loopne
out
loope
pop
enter
iret
lcall
fstl
in
lea
pop
stos
pop
repnz
add
and
ss
sbb
leave
cmp
sub
jg
cmp
mov
xor
adc
scas
pop
repz
cmp
jle
xchg
lods
or
adc
cmpsl
push
ficoml
xor
leave
test
out
jns
push
mov
mov
sub
or
dec
xorl
and
shrl
pop
sbb
xchg
hlt
sub
xor
add
inc
cmp
out
lea
shll
jg
fwait
pop
xor
push
sbb
sarl
popa
mov
js
ret
xchg
adc
or
faddl
cli
ljmp
adc
jae
cltd
lcall
xorb
inc
ds
fisttps
rorb
jmp
sbb
ret
adc
xchg
jbe
dec
adcb
cmpsb
jecxz
sbb
add
dec
mov
dec
adc
mov
or
aam
lea
insb
xchg
adc
rcrb
cmc
sbb
mov
movsl
mov
and
xchg
lds
shrb
fwait
sbb
rclb
pop
xor
cwtl
sub
dec
lcall
sub
sbb
xchg
push
xor
and
jo
dec
movsl
inc
adc
mov
jnp
jmp
fimuls
fisttps
sbb
jecxz
cmp
lods
js
movl
jge
in
movsb
mov
inc
mull
decb
fstps
cli
mov
mov
sub
testb
and
mov
loope
test
cmp
sub
test
add
add
jne
mov
pop
push
push
mov
or
fistpl
mov
ret
test
mov
sub
xor
push
bound
aad
add
mov
jns
or
ljmp
jo
xchg
sti
pop
cwtl
aaa
sbb
push
fwait
sbb
sbb
mov
loop
cmp
xchg
shl
mov
sub
inc
ficoms
cs
enter
out
jecxz
sti
cli
enter
lcall
nop
addl
xor
xchg
daa
pop
mov
jae
or
pushl
mov
test
jg
bound
mov
ljmp
cwtl
aam
pushf
jns
mov
fdivp
fcmovnbe
js
pop
pop
and
and
inc
lret
push
popf
mov
or
jb
sub
inc
jecxz
dec
inc
push
or
std
iret
xchg
ja
mov
stc
outsb
jmp
cmp
cmp
xor
imul
add
pop
iret
mov
punpcklbw
stc
outsl
mov
aad
rcrl
pop
inc
xchg
mov
sbb
push
out
outsb
pop
adc
xchg
inc
pop
test
push
xor
sarb
sbb
aas
je
jae
sbbl
mov
in
data16
movsb
push
push
dec
cmp
imul
sbb
movsb
inc
xor
out
test
jns
sub
pop
mov
lahf
std
sub
lahf
iret
bswap
enter
dec
fisubs
pop
add
daa
mov
pop
fs
jle
and
iret
mov
adc
negl
roll
mov
mov
inc
into
negl
pop
imul
xor
test
in
mov
test
lret
aas
mov
inc
pusha
cmp
jnp
cs
bound
jns
xor
movsl
out
dec
push
outsl
dec
je
or
test
add
pop
add
aad
jg
out
dec
push
jo
and
inc
xchg
cwtl
out
xor
cmpsb
je
push
leave
jbe
das
lods
pop
bound
sub
test
jb
jnp
in
sbb
mov
andl
dec
ficoml
fdivrl
and
movsl
and
loop
jns
shrl
pop
jg
mov
ret
push
sbb
mov
int
xor
les
mov
xchg
imul
sub
adc
or
sbb
push
hlt
and
pusha
push
inc
cmp
and
xchg
mov
insl
xchg
sbb
adc
cmp
inc
sti
lcall
lods
cmp
push
cmpsl
push
shll
jno
cmp
add
sbb
pop
dec
std
mov
jl
mov
daa
pusha
sbb
inc
pop
push
mov
mov
je
jl
mov
loop
xchg
js
icebp
sbb
and
inc
std
push
lcall
out
push
jb
gs
cmp
inc
dec
push
dec
cli
xor
mov
imul
pop
icebp
mov
lahf
out
push
insb
nop
pop
push
inc
andl
cmpb
jae
jl
mov
adc
lods
out
push
aam
test
fiadds
in
sbb
fstpl
fistl
in
in
jmp
cmp
ja
jb
mov
in
inc
daa
push
mov
out
cmpb
jl
jo
mov
mov
aaa
mov
push
dec
cmp
out
mov
stos
rcll
jo
shll
jmp
les
icebp
sti
sub
out
sbb
jg
stos
mov
lahf
jno
sbb
push
outsb
aad
incl
xchg
dec
int
sbbb
cmp
lcall
clc
jno
in
jp
jae
push
inc
sbbb
cmp
push
pop
dec
dec
mov
popa
dec
sbb
push
nop
lret
add
dec
cmp
bound
pop
xlat
sub
xor
dec
add
and
jo
mov
inc
std
jbe
dec
test
sti
jecxz
pop
dec
push
aaa
imul
and
or
pop
popf
or
mov
loopne
les
adc
jns
mov
mov
push
cmp
inc
jg
aas
inc
mov
jp
int3
mov
subl
out
cld
negb
dec
xchg
sub
stos
loopne
popa
xor
add
jnp
into
lret
out
out
les
mov
into
add
movsb
push
ja
cmp
jno
inc
sahf
cmp
movaps
imul
scas
hlt
lods
or
scas
xchg
cs
leave
pop
fidivrl
xchg
in
sub
ds
sub
dec
out
xlat
pop
adc
aam
lods
ja
in
cmp
jmp
jae
pop
xor
push
or
ljmp
dec
adc
ds
pop
cmp
pop
xor
out
cmp
push
hlt
add
cmp
pop
mull
add
fidivrl
inc
dec
shlb
xchg
pop
out
cmp
push
hlt
insb
test
int3
repz
sub
mov
jbe
fistpl
xchg
pop
out
cmp
push
hlt
in
stos
push
push
push
pop
mov
lret
adc
fucomp
out
in
lds
mov
out
mov
or
cmp
into
std
push
jg
jmp
push
sbb
push
cld
adc
je
cmp
and
test
outsb
pop
std
mov
xchg
lahf
push
jns
mov
mov
andl
jg
fnstcw
insl
and
sbb
push
adc
push
mov
out
sbb
in
inc
mov
and
ret
pop
jg
pop
mov
repz
cld
mul
out
cmp
and
push
dec
rcr
in
sub
dec
push
jae
pop
fcoms
pop
xchg
mov
mov
push
adc
out
adc
mov
test
insb
sbb
xor
mov
push
lret
xor
lret
popa
repz
les
pop
mov
or
mov
leave
lods
xlat
inc
push
sti
and
push
pop
sub
jae
loopne
test
lea
pop
xchg
mov
aam
pop
push
ds
enter
dec
mov
jg
push
mov
and
push
ljmp
ret
repnz
fcompl
inc
lods
jmp
icebp
adc
mov
push
iret
outsl
mov
in
pop
fstpl
cmp
nop
pop
push
ret
inc
fistl
mov
xchg
dec
pop
jg
mov
jbe
jnp
sahf
jno
mov
fyl2x
add
xlat
dec
sub
out
jnp
loope
ret
sub
roll
gs
sbb
enter
sbb
push
js
add
sbb
pop
dec
std
mov
push
lcall
lea
cmpsl
lret
in
lret
dec
test
mov
es
xlat
out
lahf
mov
ljmp
or
xchg
sti
xchg
mov
shlb
in
out
xor
stos
cli
adc
push
rcll
push
fdiv
in
dec
out
pusha
dec
fsubs
adc
pop
orl
cld
xchg
call
and
aas
pop
js
pusha
xlat
xchg
iret
and
mov
add
imul
inc
xchg
popf
enter
adc
incb
sub
out
pop
scas
out
pop
xchg
mov
mov
xor
nop
or
dec
jb
rorl
cmp
int3
mov
cltd
and
aas
cmp
lods
mull
insl
fsubrl
ret
and
shl
cmp
or
cmp
xor
jnp
arpl
push
push
adc
pusha
outsl
test
data16
imul
inc
add
and
or
fisttpll
les
stos
inc
push
sub
aas
notb
mov
push
mov
into
mov
pop
dec
mov
dec
jle
cmp
jp
mov
aas
cwtl
push
sbb
bound
shrb
je
gs
stos
aad
push
adc
repnz
xor
inc
jp
mov
cld
inc
cltd
loop
popl
and
mov
xchg
call
xor
adc
cwtl
or
xor
sub
jp
clc
es
lret
mov
ljmp
lds
sub
pop
and
push
inc
xchg
lret
push
inc
cmp
xor
push
out
jae
loopnew
iret
invd
in
test
fldpi
xchg
cmp
jl
ret
fs
ljmp
loopne
mov
inc
js
stc
dec
or
and
sbb
mov
cmpsb
leave
mov
fldt
pop
scas
cmp
fs
cmp
movsb
mov
sub
sbb
or
fwait
mov
jb
mov
cmc
dec
adc
sub
cmpsb
daa
push
lcall
push
cltd
rcll
push
repz
or
jo
outsl
mov
sbb
add
hlt
jbe
pop
xor
jl
divb
push
or
in
pop
inc
dec
cmp
es
ret
loope
out
cmc
fstl
pop
add
aam
imul
jo
movl
shrb
ds
setae
enter
jg
xchg
pushf
pop
dec
std
dec
test
push
mov
rcrl
out
sbb
cmc
fs
movsl
xor
mov
or
cmpb
sahf
loope
popf
punpckldq
pop
add
rcll
xchg
sbb
lret
repnz
push
jp
shl
test
cmpsl
in
adc
mov
popa
cmp
sub
ret
pop
xorl
repz
ret
fnsave
pop
xchg
rcrl
add
hlt
xor
fistpl
pop
dec
popa
add
lret
inc
test
mov
pop
xor
mov
mov
pop
inc
push
and
test
arpl
subl
sbb
mov
in
pop
shll
add
pop
sbb
mov
loop
inc
fcoml
ret
std
jno
lds
adc
divb
pop
in
adc
mov
fnstenv
push
fmul
push
pop
cmp
xchg
testb
cmpsb
pusha
test
in
lock
movb
dec
ds
test
cmp
push
dec
icebp
mov
xor
cmc
in
data16
cmc
sti
std
sub
cmp
cmp
pop
subb
je
sti
xchg
fldl
mov
loop
cmp
pop
lea
lea
rolb
scas
lret
stc
cmc
push
daa
daa
gs
push
gs
add
inc
jno
jecxz
mov
and
out
lahf
daa
movsb
push
dec
inc
popf
and
daa
in
mov
push
enter
test
mov
adc
xchg
jp
cmc
inc
push
and
ds
mov
jb
jl
stos
pop
rcr
daa
mov
xor
push
in
mov
in
sbb
loop
or
je
aad
push
insb
cld
ljmp
fnsave
rcrl
push
and
out
push
mov
xor
dec
ja
pop
enter
sti
out
and
or
lahf
sub
cli
imul
sbb
nop
pop
jno
fidivrl
adc
dec
mov
dec
movsb
or
movsb
imul
dec
xchg
in
lods
cli
js
pusha
mov
push
popa
xchg
lahf
push
add
xor
sti
add
or
inc
sahf
xor
hlt
imul
add
fwait
cmp
lock
sub
in
pop
xchg
sti
add
or
inc
sahf
xor
hlt
imul
sbb
pop
inc
xchg
js
xchg
fsubrp
xchg
int3
adc
stos
imul
aaa
pushf
xor
add
shll
mov
lock
outsb
ret
iret
mov
mov
insl
and
mov
pop
adc
sub
fadds
dec
jle
pop
mov
jo
push
inc
in
pop
pop
fstpl
adc
mov
push
in
fnstcw
pop
jno
addr16
fldt
push
std
dec
gs
inc
push
pop
jnp
jge
leave
xchg
sar
rorb
jns
mov
popa
sbb
push
cmp
jge
cmp
dec
jp
pop
xorl
test
push
shrl
mov
sbb
outsl
or
ret
xchg
sbb
dec
movl
push
popa
push
cli
sub
xor
and
mov
ljmp
mov
in
cmp
in
pop
lods
outsb
jne
and
das
loopne
cmp
xchg
lea
sbb
arpl
in
test
imul
das
jmp
pop
inc
js
mov
pop
sub
inc
xchg
lds
fsubrl
dec
bound
push
pop
lea
mov
sysexit
lret
sbb
jle
mov
dec
icebp
jmp
ljmp
or
movsl
cmp
rorb
jmp
or
arpl
scas
cmp
mov
lods
add
or
sub
mov
push
nop
mov
loopne
jb
jbe
mov
jae
and
jmp
adc
aaa
cmp
xlat
push
or
ja
js
pop
and
clc
cmp
imul
dec
jno
mov
mov
pop
inc
push
jge
xchg
cmpsl
cmove
xchg
test
ja
dec
bound
lds
in
sti
ljmp
rcll
and
popa
stc
push
mov
jp
daa
negl
mov
stos
mov
bound
adc
out
jle
jg
and
clc
filds
mov
and
mov
jle
rolb
sub
popa
add
insl
mov
sbb
fidivs
cli
fcomps
movb
sub
push
loope
je
std
push
jg
jae
mov
push
mov
xchg
inc
xchg
in
sub
sub
fs
cmp
out
push
pop
call
out
cmc
mov
lods
stc
pop
test
lods
jnp
je
outsb
fwait
cwtl
cmc
clc
sbb
and
lret
xor
mov
mov
inc
inc
lret
mov
pop
pop
fnstsw
ret
fisttpl
inc
nop
inc
sub
sub
xor
xchg
fdivrl
lods
sbb
sbb
stc
sub
shrl
int
dec
cmp
mov
sub
jecxz
loope
and
pop
int3
jge
cmp
dec
dec
xlat
xor
shlb
jge
fcomps
popa
das
mov
pushf
dec
jle
aad
pop
fisttps
add
rcr
sub
adc
mov
adcb
cmp
mov
and
call
fisubs
les
mov
xchg
jnp
divb
ficompl
mov
xor
jo
js
iret
push
xchg
daa
scas
xlat
pusha
inc
cmp
out
in
insl
hlt
jge
loope
xchg
dec
iret
add
es
lahf
fcmovne
ret
arpl
pop
shll
xor
pop
hlt
mov
adc
arpl
jle
xor
outsb
mov
push
dec
dec
push
je
test
dec
mov
dec
popf
pop
in
pop
mov
lods
and
sub
adc
loop
je
adcb
xor
mov
push
ja
mov
in
lock
or
ja
inc
pusha
sbb
push
add
mov
xchg
push
std
jbe
arpl
mov
jp
jns
loopne
mov
add
or
sbb
push
int3
xchg
mov
adc
jnp
leave
ljmp
stos
xor
mov
or
icebp
stos
jg
outsb
sbb
pop
shrl
js
jecxz
pop
cmpb
cmpsl
test
repz
jmp
imul
fstpl
fwait
inc
cwtl
leave
cli
adc
sbb
or
push
dec
pusha
int
push
sub
xchg
outsb
mov
jl
stos
mov
test
xchg
stos
mov
xor
roll
mov
out
jnp
sbb
pop
mov
push
cmpsb
dec
push
mov
add
fcompl
dec
aam
es
or
sub
shll
mov
pop
dec
sti
int
iret
fidivl
daa
sub
inc
xlat
mov
clc
fyl2x
ljmp
inc
cmp
mov
jne
stos
mov
lahf
mov
daa
fmuls
push
sbb
mov
aaa
imul
sub
sub
mov
outsl
push
imul
outsb
mov
lods
pop
adc
mov
stc
sub
xor
mov
pop
jbe
stc
lret
xchg
stc
xchg
and
inc
subb
stos
mov
xor
divb
imul
mov
fisttps
int
and
nop
ret
adc
mov
je
mov
ljmp
fcompl
jmp
aam
lcall
arpl
and
fwait
popf
inc
adc
popa
or
es
fldenv
inc
out
fdivrs
lret
mov
lahf
fucom
mov
mov
sub
jno
int
adc
dec
push
iret
push
pop
xchg
aas
rolb
mov
xchg
xchg
mov
xor
add
leave
stos
ficoml
xor
mov
ret
jae
mov
addl
movsb
dec
es
pusha
xchg
mov
add
pop
and
xchg
pusha
jns
sbb
mov
dec
pushf
mov
test
outsl
out
mov
dec
sub
jp
ret
sub
pop
adc
push
pusha
sahf
sbb
adc
inc
xchg
and
cmc
xor
outsl
add
fdivl
divl
push
and
push
sbb
sti
pop
les
add
aaa
cmp
in
cld
lea
cmp
insb
inc
pop
mov
mov
cli
popf
xlat
mov
cli
mov
stc
stos
decb
or
fisttpll
imul
call
mov
movsl
movsb
or
inc
mov
sub
and
jb
dec
add
imul
stos
mov
xchg
out
jl
xchg
jle
dec
sbb
pop
cmp
addl
adc
pop
test
mov
mov
xchg
call
adc
pop
cmp
dec
out
xchg
push
imul
rorb
jmp
ja
imul
jp
out
xchg
fwait
or
xchg
pop
pop
dec
mov
jns
mov
xchg
mov
sbb
repz
add
int3
cmpsl
lret
adc
shlb
sub
sub
aam
pusha
cli
sub
push
pusha
lea
fwait
neg
xchg
stc
xor
or
xchg
jg
mov
icebp
loop
lcall
ljmp
mov
leave
pop
mov
pop
dec
popf
fadds
in
fidivl
mov
inc
sbb
leave
pop
pop
rclb
test
std
dec
lahf
popa
ss
pushf
cs
push
inc
xchg
dec
shl
mov
imul
push
les
imul
out
nop
scas
xor
outsb
add
nop
hlt
shl
mov
cli
and
cmp
ficomps
dec
xchg
inc
pop
xchg
pop
insb
jg
cmp
nop
stc
pop
jnp
sub
mov
xchg
mov
xor
jge
insl
inc
xor
push
cmp
bound
cmp
or
lea
jbe
mov
bound
or
loop
add
mov
fmulp
and
jge
scas
push
sti
into
roll
faddl
pop
in
stc
clc
rcll
mov
ss
sbb
sbb
add
xchg
xor
jne
pusha
stc
std
inc
sub
ret
xchg
ret
pop
cs
enter
and
xlat
pop
out
or
or
sbb
ret
xchg
push
adc
rclb
aad
or
add
xchg
pushf
add
sbb
lods
rclb
cld
shl
sbb
je
dec
sub
std
pop
jae
in
push
jnp
aaa
push
jmp
fistl
data16
daa
test
and
push
lods
loopne
or
std
insb
out
mov
mov
push
pop
push
out
sub
push
imul
pushf
testb
and
sarl
fs
arpl
and
mov
in
dec
mov
mov
cwtl
or
mov
ror
xor
jb
sahf
mov
mov
pop
sbb
cmp
ud1
decl
pop
inc
adc
and
mov
add
in
jns
xor
cld
test
mov
mov
ja
dec
pop
out
outsb
pop
sahf
dec
xchg
push
insb
push
mov
adc
and
test
dec
mov
in
mov
and
ret
scas
mov
idivb
push
adc
adc
mov
push
scas
sti
loope
dec
and
movsl
nop
int
mov
mov
pushf
or
hlt
test
dec
or
fdivl
adc
into
adc
mov
ret
es
fstpt
add
cltd
xchg
bound
and
rolb
xchg
push
cld
dec
sarb
inc
ret
cmpsb
loop
mov
shrb
int
jmp
xchg
xor
mov
inc
cmpsl
mov
pop
sbb
out
sbb
inc
xorl
xor
in
dec
mov
mov
inc
inc
pop
push
push
xor
xchg
mov
add
ljmp
mov
sbb
dec
mov
pop
leave
dec
int
js
cltd
sbb
arpl
mov
mov
cmpsb
int
cmp
in
addr16
xchg
outsl
cmp
repnz
ljmp
lds
scas
sub
xor
xchg
enter
js
mov
pop
or
lcall
out
dec
adc
int3
jb
xchg
xor
push
sub
sahf
jno
pop
push
popa
paddusw
push
lret
ret
mov
enter
mov
mov
mov
ucomiss
imul
pop
push
movsb
je
stos
sub
pop
imul
rcrb
or
jmp
sbb
insb
loop
loop
pop
add
jne
ret
test
pusha
lods
cmpsl
mov
in
test
sbb
lret
or
pop
inc
push
or
and
lret
mov
or
out
mov
add
jne
xlat
dec
sbb
jg
ficomps
and
stos
test
mov
fcoms
shrb
sub
lret
gs
in
loope
pop
rcrb
cmp
and
vsubpd
xchg
jecxz
add
jge
arpl
mov
sbb
loop
std
dec
repz
inc
test
sub
rolb
test
popa
scas
cmpsb
out
ja
inc
cmp
das
fwait
mov
cmp
mov
scas
ret
dec
xchg
or
test
mov
outsb
pop
xchg
nop
cmp
push
push
mov
dec
jno
jecxz
jp
hlt
cmpsb
dec
push
insl
shl
mov
cwtl
push
xlat
jbe
lea
shll
jge
mov
mov
mov
mov
loopne
test
mov
mov
jmp
mov
jecxz
mov
imul
scas
sbb
cmp
add
xchg
or
sti
pop
pop
dec
and
push
mov
and
sbb
pop
incl
jle
cmp
stos
mov
jge
arpl
sub
mov
js
xlat
ja
lahf
pushf
cmpsb
push
add
xchg
ss
pusha
movsl
inc
add
adc
mov
mov
xor
pop
stc
dec
jo
jno
dec
and
or
cmpsl
stos
adc
stos
rep
jl
jo
and
daa
pop
js
pop
mov
cs
out
push
cmp
push
ret
ss
mov
addr16
pop
loope
les
sbb
sbb
mov
mov
pushf
pop
fs
sbb
or
lahf
push
mov
mov
xchg
andl
out
sub
ja
jns
push
pop
popa
and
mov
inc
mov
push
push
cmp
cmp
ja
test
lcall
test
pop
rcll
das
xor
lahf
jle
sbb
fdivrs
mov
cmp
or
pop
div
mov
outsb
rolb
push
sub
aam
mov
mov
cmp
inc
push
sar
loope
shl
pop
push
in
mov
add
cmc
popa
adc
push
xchg
pop
fsubrl
hlt
mov
rcl
scas
leave
sbb
xor
push
hlt
cmpsb
fsubrs
hlt
fcmovne
test
js
in
call
sub
dec
xchg
mov
jo
or
sbb
cmp
pop
inc
jno
xor
fistpll
shll
das
jae
xor
push
fnsave
pop
or
movsl
fidivl
add
movsl
inc
push
dec
adc
or
push
mov
sub
sub
ret
ret
insb
testb
rorl
inc
jle
or
adc
mov
out
and
les
jb
bnd
dec
scas
in
into
jo
cltd
mov
imulb
jbe
xorb
data16
gs
ror
inc
or
lock
aas
mov
js
mov
mov
push
cld
mov
sbb
fldt
ss
cmpl
mov
xchg
add
and
enter
xchg
aaa
cmp
xorb
dec
and
popf
cmp
mov
mov
jmp
andl
sbb
lahf
dec
hlt
scas
je
addr16
cmpsl
daa
pop
lahf
shll
pop
outsl
xchg
popf
cmc
std
xor
jg
das
sbb
loop
test
dec
ss
push
out
pop
test
addl
jg
lahf
inc
push
in
xchg
fs
shlb
clc
js
xor
sub
add
xor
stos
in
xor
popa
gs
jg
mov
shl
jge
std
lods
adc
aaa
push
pop
jg
loopne
push
inc
lret
ds
ret
adc
insb
pop
xor
mov
inc
lods
or
in
and
ja
mov
movsl
inc
lods
mov
leave
lods
hlt
jbe
leave
ret
inc
enter
adc
adc
enter
and
adc
bnd
out
das
fdivrl
dec
pushf
mov
jecxz
and
cmp
out
cwtl
mov
aad
cwtl
push
pop
pop
gs
inc
mov
fs
mov
andl
mov
outsb
ja
push
jb
bound
xchg
loope
pop
pop
mov
cmpsb
popf
pop
pop
jnp
aas
out
push
inc
mov
mov
sahf
mov
and
xchg
push
int3
pop
push
dec
mov
xor
push
mov
scas
jge
pop
add
push
add
push
xchg
sub
out
in
fsubl
xchg
les
fs
cli
pop
out
insb
and
fsubr
add
sarb
cmpsb
hlt
jecxz
clc
jmp
adc
call
sub
lods
jnp
mov
adc
sub
enter
out
jbe
data16
sub
leave
cmc
dec
jbe
sbb
xchg
ret
sub
add
es
xor
mov
mov
mulb
xchg
sub
pop
push
push
lods
cli
or
fwait
mov
jae
add
and
je
push
dec
outsb
cmp
ljmp
imul
sbb
add
stos
xor
lahf
js
lods
and
xchg
das
jp
push
dec
sub
lcall
and
loopne
jns
addb
ret
adc
aam
dec
dec
mov
pop
fwait
xor
repnz
in
ret
out
or
mov
push
pop
or
lahf
or
sub
pop
shlb
pop
mov
push
test
push
pop
mov
clc
mov
inc
hlt
jnp
fildl
pop
mov
pushf
fdivrl
testb
push
mov
sub
enter
in
dec
mov
xor
jo
mov
mov
imul
cmpsl
pop
inc
jge
jnp
sti
fwait
popf
mov
arpl
and
mov
aaa
sahf
aas
lock
in
cwtl
inc
inc
jle
scas
pop
lret
xor
js
mov
aad
icebp
adc
rorb
mov
ret
ds
and
daa
push
ja
and
or
mov
ds
adc
stc
iret
pop
and
xlat
push
out
jb
sbb
sbb
mov
insb
pusha
xchg
xor
repz
mov
iret
push
movsl
xor
add
fistps
xchg
ret
add
pop
or
mov
mov
ds
push
enter
xchg
mov
js
push
mov
lock
out
in
push
fdivr
or
jb,pn
das
mov
notb
dec
out
call
xchg
cmp
jg
movsl
fcmovnu
dec
loopne
pop
xchg
xor
dec
push
sbb
out
arpl
je
jle
xchg
jp
arpl
push
cmp
popf
insb
lret
or
mov
xor
adc
cmc
sbb
andb
cmpsb
inc
add
nop
and
xchg
scas
in
bound
jbe
rcrl
adc
inc
mov
lods
test
out
out
subl
js
movsl
rolb
hlt
outsl
add
inc
mov
pop
inc
cmc
sbb
jg
mov
imul
test
mov
pop
jbe
ss
repz
jge
push
out
mov
jecxz
pop
outsb
scas
add
sbb
fmull
in
mov
imul
je
cmp
sti
ds
daa
and
scas
fsubp
cmp
mov
mov
lods
xor
sbb
in
pusha
or
ss
inc
aad
add
les
sub
js
mov
pop
pop
inc
and
mov
pusha
mov
cmp
cld
cmp
lea
ficoml
and
jbe
into
jns
pop
pop
ds
xor
loope
jae
les
out
inc
out
stos
shr
leave
mov
pcmpeqd
jle
pop
sub
sub
out
push
inc
mov
inc
loopne
das
or
inc
dec
jmp
cmp
mov
dec
dec
scas
pop
lcall
mov
test
mov
out
ja
adc
inc
mov
jne
test
movsl
hlt
repz
xchg
imul
test
xchg
inc
cli
xchg
sub
adc
cltd
push
divl
pushl
inc
orl
jp
imul
mov
dec
xor
inc
ret
popa
outsb
push
std
aam
sub
mov
mov
fs
cmpsl
cmp
mov
dec
inc
shll
and
jge
xchg
lret
out
xor
test
fnstenv
jp
imul
jl
lahf
jmp
subb
or
jbe
mov
xor
fdivs
imul
fnstsw
cmc
jecxz
movsb
movsb
cli
popa
leave
daa
gs
push
gs
add
leave
lock
xor
xlat
mov
pop
add
jmp
mov
or
clc
and
je
repnz
mov
pop
jae
stc
nop
mov
rcll
jp
cmc
pop
xchg
sbb
popf
and
xchg
xor
mov
clc
test
imul
lods
mov
xchg
ja
inc
lea
cmovb
rcrl
sbb
pop
and
jnp
mov
cli
in
cmp
les
xchg
cmp
outsb
out
nop
lock
jmp
sub
pop
outsl
fisubrl
inc
dec
push
sar
xchg
xchg
rorb
ret
ljmp
pop
fidivs
fcmove
daa
mov
push
je
jl
ljmp
outsl
incb
gs
adc
xor
cmpsb
sbb
xchg
mov
outsb
cmp
xchg
xchg
jb
push
fcoms
outsl
pop
jp
sub
cmc
js
ficoml
rolb
in
or
cltd
iret
sbb
jg
out
pop
sahf
xor
call
out
pop
sbb
lods
sahf
sbb
notb
sub
out
add
or
pop
loopne
gs
int3
jbe
ljmp
bound
std
push
jge
iret
and
inc
out
cmp
xchg
or
hlt
cwtl
xchg
mov
out
push
mov
gs
movsl
cmpsb
or
mov
or
adc
pop
fisttps
fsubl
mov
decl
test
pusha
mov
int3
lock
mov
mov
adc
out
jle
addr16
test
jae
daa
xor
icebp
and
add
mov
mov
lock
xchg
jae
push
sahf
pop
push
add
pop
inc
mov
pop
xor
arpl
sbb
imull
mov
cwtl
xchg
hlt
add
fwait
daa
add
adc
stos
lods
data16
int3
sub
cmp
test
repnz
stc
lods
dec
outsl
jb
fwait
dec
orb
mov
push
adc
xor
and
sbb
scas
ret
push
xor
push
inc
jns
xor
cmp
push
mov
xchg
out
int3
inc
xor
ss
test
jbe
loop
jno
lahf
imul
adc
imul
cwtl
pop
out
insl
jl
data16
popa
jmp
aam
movsl
lods
mov
jbe
test
insl
icebp
add
jp
lea
adcl
xor
stc
and
cmc
cmpsl
ret
sbb
add
push
cmp
imul
daa
test
rcr
sbb
shll
adc
pop
gs
push
rclb
pop
mov
jge
mov
icebp
jmp
xor
js
fdivrp
jge
xchg
mov
jbe
les
push
add
xor
dec
les
xchg
cmpsl
addb
jbe
mov
addr16
shlb
jl
xor
inc
in
ja
stos
xor
iret
fbld
das
mov
cmp
cwtl
pop
into
sahf
push
pop
sbb
jg
into
push
push
loop
xor
mov
imull
ss
push
or
outsb
push
std
aam
sub
maxps
cwtl
sbb
or
pop
mov
loope
dec
loop
pop
inc
cmp
loope
mov
push
lock
fxch
aad
mov
jbe
pop
rorb
and
fldcw
cmp
pop
sbb
jne
push
gs
xchg
mov
aad
daa
fisubrs
xchg
cmc
loop
outsl
mov
fs
jg
add
test
adcb
sti
dec
xor
sbb
inc
mov
je
mulb
cld
testl
dec
xor
mov
push
pusha
and
jns
add
shll
and
jae
enter
adc
pop
fdivrl
mov
aam
or
jg
test
es
adc
pop
xchg
xlat
test
out
add
adc
popf
dec
out
mov
pop
orb
cmp
inc
lock
daa
xchg
ja
les
ja
in
scas
mov
into
adc
or
mov
arpl
push
push
loope
movsl
or
ljmp
cltd
jmp
out
push
popa
rcrl
sti
cmc
and
test
scas
push
lds
sbb
mov
loop
sbb
popa
inc
sahf
xor
pop
jl
sub
and
test
sbb
mov
sbb
inc
dec
loope
lods
outsl
mov
mov
xchg
mov
shlb
or
rol
test
test
add
data16
lcall
jae
pop
les
xor
f2xm1
jnp
or
xchg
jp
loope
jne
pop
jl
repz
sti
xor
or
cmpsb
cmp
inc
ret
mov
fs
push
mov
jbe
arpl
lods
ds
repz
insb
jb
loopne
in
jle
pop
cwtl
fisttpll
rol
negl
into
push
int3
outsb
loop
adc
or
cmp
scas
test
in
daa
mov
jo
movsl
push
push
xor
das
add
xchg
mov
ds
negb
inc
push
scas
sub
gs
imul
add
or
jl
cmp
pop
orb
sahf
push
das
pop
js
lods
sbb
pop
xchg
movsl
inc
lcall
leave
out
dec
push
jp
stos
shl
std
lods
jno
xchg
cwtl
rorl
mov
push
cmp
in
xchg
pop
icebp
cmp
mov
xchg
fs
push
adc
dec
in
and
scas
sbb
ret
xchg
pop
push
aam
jmp
mov
pop
sub
or
mov
fadds
mov
sub
aam
add
out
push
cmp
add
je
or
dec
add
push
adc
pushf
add
iret
scas
rcl
movsb
push
loope
ljmp
loopne
mov
je
pop
pop
stos
movsb
mov
cli
outsl
ret
mov
mov
mov
stos
cmpsb
mov
jmp
cmc
mov
sbb
pop
or
pop
sahf
xchg
push
lahf
gs
mov
xchg
and
outsb
popf
loopne
popa
enter
ljmp
sbb
das
loopne
cli
mov
inc
loop
mov
mov
fisttpl
out
xchg
pop
out
fwait
jecxz
add
pop
stc
dec
adc
cmpsb
aaa
add
add
mov
rol
cmp
dec
idivl
adc
xchg
cld
push
jb
fwait
dec
push
jno
inc
push
loope
mov
jnp
call
lds
lret
pop
or
push
arpl
add
mov
pop
sbb
sbb
pop
dec
pop
lock
mov
adc
fld
enter
lock
jb
xchg
jl
ja
aad
loopne
cmp
out
les
mov
mov
int
push
aam
and
mov
inc
adc
ret
js
push
xchg
imul
or
pop
ficomps
in
mov
or
pop
mov
mov
aas
jnp
mov
aaa
pop
push
and
pop
inc
mov
mov
pushf
mov
pop
or
xor
into
sub
xchg
loop
mov
xlat
dec
mov
test
lock
cmp
scas
sub
adc
aad
push
scas
out
cmp
adc
add
pop
psraw
jecxz
aad
push
pop
into
xorl
push
push
dec
jp
push
sarb
stos
mov
and
sarl
cmpsl
dec
in
mov
inc
inc
cmp
into
adc
push
xchg
aad
mov
pop
shll
mov
mov
xor
fidivrl
aad
fisubrs
mov
repz
or
leave
jbe
fs
inc
shl
push
int
cmpsb
jnp
push
daa
fwait
and
inc
xchg
nop
loope
xor
jno
stc
pop
gs
stc
or
leave
sti
ficoms
jl
inc
ret
bound
pushf
sbb
sub
cmp
test
aas
mov
push
jno
push
cmpsb
mov
in
lds
das
and
cltd
mov
sbb
enter
sub
in
cmp
insl
iret
pop
fiaddl
xor
pop
rol
out
stos
fdivrs
xor
hlt
mov
leave
fwait
jne
popa
mov
pop
cld
pop
mov
xchg
outsl
or
in
sub
add
pop
mov
sub
xchg
out
or
imul
leave
add
jb
pop
decb
or
push
cmpsb
sub
inc
cwtl
adc
inc
mov
mov
ja
ret
sti
mov
int3
add
xor
or
pushf
cmpsl
push
xor
jle
xchg
cmc
ret
pop
imul
fcomps
mov
jne
in
imul
ds
sbb
in
push
xor
push
lret
test
push
pushf
fs
repz
lods
fmuls
dec
xchg
xchg
ret
dec
mov
cwtl
and
dec
pop
jmp
dec
ja
iret
mov
push
mov
notrack
je
mov
addr16
mov
add
dec
add
or
mov
mov
mov
inc
pop
push
sub
or
add
dec
mov
lods
scas
xor
push
ss
lcall
pop
lds
jo
and
jge
mov
xor
mov
scas
inc
popf
mov
push
ficoml
and
mov
mov
inc
fisubrl
adc
mov
push
cwtl
lahf
sarb
pop
sub
cld
out
or
mov
sbb
cld
scas
sbb
fs
xchg
popa
idivl
movsb
mov
lret
add
scas
rclw
xor
add
das
sub
mov
pop
and
push
jg
mov
inc
sbb
jns
int
jmp
adc
popa
mov
xchg
push
das
mov
orl
ret
iret
mov
or
pop
ljmp
sub
repz
inc
jg
push
call
and
stc
lret
jle
in
aas
jns
pop
ret
mov
decb
pop
push
lods
xchg
andl
sahf
daa
jmp
ret
rolb
shll
jns
push
jl
mov
push
sti
fmuls
in
imul
or
inc
sahf
fiaddl
push
inc
dec
loopne
adc
push
inc
test
mov
aam
pop
xor
cwtl
push
je
cmp
xchg
inc
insl
pushf
cli
icebp
into
outsl
or
pop
mov
outsl
sbb
mov
push
bnd
mov
out
inc
shr
out
dec
dec
jge
orl
fldenv
cmovb
js
push
in
cmp
out
pop
ffree
fxch
daa
pop
movsb
ret
jmp
mov
pop
cmp
in
sub
jnp
aaa
xor
je
es
xor
push
push
js
lods
xor
mov
packsswb
cmp
or
sub
into
lea
imul
sbb
ss
xchg
test
mov
dec
jns
out
sbb
mov
pop
inc
scas
in
mov
xor
daa
insb
test
dec
call
inc
out
dec
and
inc
imul
jnp
lock
into
and
ret
cld
sub
adc
sbb
pop
aas
pop
mov
daa
sbb
pop
icebp
pop
lea
divb
movsl
mul
mov
int3
cmp
sbb
lcall
addr16
fbld
xchg
push
and
push
cmpsl
adc
lcall
js
add
inc
jp
sub
pop
movb
fsubs
inc
loop
mov
inc
hlt
sbb
mov
and
or
sub
push
xor
rcrl
add
out
cmp
cmc
cltd
jne
sub
stos
add
test
sarb
ret
movsl
mov
xchg
cmp
lock
sbb
iret
sbb
dec
inc
ss
addl
or
testb
xlat
sbb
mov
sub
sbb
icebp
or
xchg
lret
cmpsb
sbb
adc
jnp
into
addr16
shrb
repnz
add
add
fbld
and
sti
aas
push
aam
mov
or
push
rcr
push
orb
out
subb
aam
push
cs
leave
in
shrb
sbbb
mov
cmp
imul
ret
leave
cltd
fcomps
cli
sbb
or
pop
es
jle
jb
mov
inc
or
cmp
xor
xor
pop
cmp
and
jno
add
adc
nop
pop
pop
push
adc
arpl
inc
out
or
popa
push
jge
mov
cmc
jle
test
mov
movsl
xor
dec
or
xchg
add
adc
mov
adc
xchg
xor
jne
jg
int3
mov
jns
cmp
mov
push
jg,pn
cmpsl
fsubrl
add
sbb
dec
mov
imul
inc
enter
mov
pop
and
aad
xor
jl
rorl
or
pop
jo
push
stos
adc
cmc
xor
dec
pushf
xchg
push
dec
jae
xorb
ret
shr
inc
and
jb
sahf
adc
xchg
mov
or
icebp
xor
ficomps
daa
push
add
out
bound
bnd
cmp
cmpsl
lock
xor
add
sbb
or
shll
scas
cli
cmp
mov
in
sbb
mov
fdivrl
fists
adc
and
arpl
js
mov
jae
jecxz
aaa
inc
fists
mov
fsubr
jo
jne
xor
xor
int3
test
cwtl
stc
dec
test
out
mov
scas
fisttpl
add
and
inc
inc
xchg
xchg
pop
arpl
mov
leave
cltd
ret
cltd
dec
inc
or
push
sahf
mov
sbb
test
jecxz
xlat
test
push
pop
int3
sub
sub
fistl
sub
inc
and
add
push
mov
out
imul
jg
mov
int
aas
jmp
push
in
jg
dec
lahf
es
out
imul
inc
iret
dec
in
mov
fucomp
xor
fwait
xchg
notl
arpl
fidivrl
in
inc
push
aad
fistpll
mov
xchg
mov
gs
fs
cmc
imul
mov
mov
mov
into
jge
jne
mov
jle
idiv
fdivl
shl
and
in
hlt
cmp
jae
push
xchg
dec
popa
sub
popf
push
jg
cmpsl
pop
stos
ds
fs
inc
test
mov
xor
pop
xchg
in
pop
push
icebp
cmp
jbe
jmp
cmp
cmp
daa
adc
jno
and
icebp
add
iret
dec
cmc
pusha
cmp
addb
int
and
xlat
test
lcall
cmpsl
std
rclb
stos
nop
dec
sub
xor
out
cmp
ss
xor
mov
sbb
xchg
repz
cmpsl
dec
or
adc
rcll
daa
sub
mov
or
sahf
xor
adc
jbe
or
mov
lret
mov
mov
ficoml
jbe
push
out
sub
scas
js
push
stos
mov
loope
xor
jbe
xchg
push
lahf
clc
mov
mov
mov
dec
mov
rclb
pop
dec
add
daa
pop
pop
fsubr
das
ficoms
insl
pusha
or
pop
dec
pop
call
inc
push
push
jae
ljmp
cs
aaa
or
mov
in
test
adc
adc
add
adc
adc
jg
ljmp
push
cs
mov
rorb
jae
mov
movsl
dec
aam
pop
add
nop
dec
xchg
imul
push
lds
xchg
mov
out
jg
imul
gs
imul
mov
pop
jg
negl
xchg
out
inc
pop
and
jle
mov
push
cmc
out
decl
pop
mov
out
fstpl
stc
fisubrl
push
dec
outsl
je,pt
mov
rclb
icebp
jb
xchg
stos
cmp
add
xchg
inc
pushf
xchg
das
jl
xchg
or
test
clc
jle
out
xchg
popa
in
lods
jbe
inc
mov
inc
in
push
sub
jg
or
push
push
into
icebp
fisubs
jl
repnz
push
jmp
adc
lahf
fwait
in
inc
inc
les
repz
cmpsl
jg
or
xor
jne
repz
jge
xchg
mov
sub
cmp
mov
movsl
fmulp
add
jecxz
test
dec
es
shlb
in
loop
mov
cmc
adc
idiv
adc
add
fst
xchg
test
jo
in
jno
xor
bound
sub
push
cmpsb
push
adc
insl
nop
test
iret
loope
mov
cltd
jo
xchg
and
sbb
push
jno
lret
push
jbe
inc
mov
cmc
xor
outsb
jp
sti
dec
bound
test
es
mov
sbb
pop
jae
mov
hlt
scas
mov
pop
and
adc
mov
and
mov
and
fnsave
idivb
mov
jae
sbb
pop
jecxz
add
and
es
aam
inc
pop
push
nop
mov
mov
cmpsl
inc
loop
push
xor
push
and
inc
cld
daa
in
loopne
jle
jp
xor
jle
lods
xchg
cmp
jne
test
ret
das
inc
popf
pusha
popf
rorl
pop
and
and
ljmp
sub
xchg
push
push
imul
adc
xchg
mov
mov
fiaddl
push
test
outsl
mov
and
out
ss
dec
pusha
mov
sub
lret
mov
mov
mov
mov
or
rclb
mov
pop
insl
sub
add
pop
adc
push
inc
adc
jno
push
jp
pusha
in
loopne
jle
jp
xor
jle
lods
xchg
cmp
jne
test
xor
pusha
popf
rorl
filds
jg
dec
add
bsr
inc
sbb
lods
and
stos
arpl
je
test
sahf
add
pusha
mov
jne
jp
and
loopne
pop
mov
scas
or
cmp
push
cmp
jnp
sbb
fsub
and
sahf
sub
sbb
add
fwait
mov
hlt
sti
inc
add
inc
inc
arpl
add
test
or
adc
inc
out
in
cmpsl
xchg
dec
dec
mov
in
subl
mov
mov
push
xchg
pop
mov
pop
jecxz
pusha
cltd
fdivs
jns
adc
jecxz
mov
push
mov
sub
icebp
or
jns
mov
shrb
inc
mov
sbb
jne
enter
add
dec
ret
jnp
jg
setae
and
or
repz
movsb
jmp
ret
dec
es
icebp
stc
xlat
jg
dec
dec
or
add
mov
push
or
jne
mov
enter
into
dec
adc
stos
push
insl
mov
lcall
and
cmpsb
lret
cwtl
mov
xchg
rclb
and
notb
and
out
mov
lret
or
lret
or
insl
data16
xchg
mov
lods
mov
notb
push
fisubrs
lret
mov
fldcw
lods
aad
sbb
repnz
rcrb
rcrl
ss
aad
adc
jno
mov
test
aad
shr
and
mov
or
ljmp
mov
inc
out
mov
addl
cmp
xlat
add
push
loope
mov
xchg
inc
xchg
les
push
pop
popf
adc
dec
shrb
xchg
pusha
movsl
sbb
repz
and
pop
jge
sub
icebp
loop
push
dec
cmp
icebp
xchg
ds
js
and
test
in
scas
in
jecxz
push
fwait
jno
jns
sti
movsl
push
dec
sbb
jle
mov
lahf
les
rcll
repz
jae
xlat
mov
add
les
cmp
sub
sbb
mov
mull
dec
or
or
add
repz
xchg
mov
mov
pop
inc
fsts
sbb
pop
jne
and
cmp
imul
std
in
push
mov
lret
cld
insl
std
shll
int3
jns
icebp
xchg
ret
mov
testl
mov
xchg
jnp
xor
add
xor
push
push
lods
dec
jecxz
mov
aaa
mov
adc
jl
lahf
xor
fisubrl
fwait
test
jb
scas
add
js
adc
jmp
add
and
adc
bnd
sbb
lods
jecxz
jns
insl
adc
loopne
das
cmp
jno
mov
cwtl
cltd
xor
inc
jg
push
loop
rcrl
stos
nop
scas
stos
mov
cmp
mov
pop
popf
mov
jecxz
or
jl
rorl
mov
and
frstor
leave
push
pop
out
orb
das
inc
jnp
loopne
sti
or
push
push
pusha
or
or
inc
xchg
inc
mov
dec
lret
push
add
lcall
sub
ljmp
pop
jmp
push
pop
dec
test
cmp
cmc
or
mov
jl
jo
jno
mov
mov
negl
push
dec
jbe
xchg
push
stc
adc
xchg
pop
and
pushf
inc
test
fldl
es
hlt
mov
notl
jns
cli
cmp
mov
fwait
dec
mov
add
in
and
mov
lea
dec
aaa
rcll
sbb
les
mov
xor
or
jl
rorl
mov
sbb
adc
daa
icebp
lods
sbb
add
into
mov
nop
dec
fld
rcrb
fisttps
scas
int
es
push
lahf
iret
dec
fwait
mov
cmp
mov
xor
lcall
xchg
dec
daa
sub
in
cli
cmp
aam
cmc
pop
or
fbld
fstpl
pop
adc
mov
or
aas
es
lcall
xchg
cltd
popa
cmpsb
xchg
sub
icebp
inc
inc
iret
lea
inc
ret
fisttpll
enter
mov
push
cmp
cmc
cmpsb
add
lods
or
add
adc
xchg
fnstcw
hlt
popf
and
jg
cmp
outsb
arpl
push
pop
dec
sbb
xor
adc
xchg
loope
dec
sbb
in
jo
ljmp
xchg
pushf
adc
pop
pop
mov
dec
sbb
lsl
sbb
push
std
dec
cmc
mov
pop
xor
mov
pop
in
in
iret
dec
dec
mov
in
cmpsb
stos
mov
call
mov
loop
cld
mov
in
xor
dec
add
jbe
push
pop
lahf
xor
sub
mov
cmp
aas
mov
jge
mov
icebp
dec
cmp
jae
ja
and
in
jecxz
mov
adc
push
scas
insl
sbb
outsl
adc
adc
rcll
enter
inc
add
sbb
add
loopne
mov
pop
xchg
pop
xor
cmp
mov
mov
or
push
cmp
sbb
fiaddl
in
mov
and
or
lock
add
cs
lcallw
sub
jae
psadbw
movsl
shll
dec
ss
push
push
cld
lcall
or
inc
xor
and
jae
iret
adc
lea
or
es
frstpm(287
bound
clc
lods
dec
push
shll
mov
les
cmp
psubusw
pop
mov
inc
mov
or
insl
push
or
enter
mov
mov
in
hlt
mov
fsub
sbb
cli
dec
push
call
popa
push
mov
insl
cmp
out
mov
ret
mov
popf
in
add
mov
lods
adc
jl
js
sbb
repnz
incl
lea
aad
jle
inc
mov
nop
dec
pop
jecxz
rclb
add
xor
mov
es
aas
adc
jg
cli
pop
xor
loopne
mov
or
test
rorl
cmp
adc
mov
je
mov
das
ret
movsb
cli
or
daa
pushf
inc
addr16
les
jne
cli
mov
loope
lock
dec
dec
sub
loope
xchg
ds
ret
pop
nop
gs
stos
cmpsb
mov
mov
les
hlt
adc
xor
gs
jge
push
push
loopne
inc
out
lods
or
ja
fs
data16
rcrl
decl
in
pop
xorl
or
mov
inc
dec
shlb
xor
inc
mov
scas
jnp
pushf
divl
push
pop
jns
inc
adc
or
mul
fdivrs
ret
push
pop
mov
out
and
mov
pusha
cld
cvtps2pi
lock
jns
je
sub
adc
mov
jmp
cltd
inc
shll
rorb
cmp
jb
call
cmp
stos
xchg
push
sarb
push
inc
cmpsl
into
sbb
jge
xchg
xor
mov
cmp
outsl
pushw
mov
out
data16
popa
add
mov
pop
mov
and
or
shrl
out
cmp
insb
mov
push
jge
int3
add
fdivrs
jb
dec
dec
jp
shlb
mov
jae
ror
cmp
lods
cld
daa
pop
insb
andl
xchg
icebp
test
mov
xchg
cmpsb
or
pop
out
mov
adc
mov
sub
push
mov
insb
pop
or
sbb
inc
ds
in
jle
mov
inc
jp
xor
hlt
imull
in
jecxz
cwtl
and
sarb
movsl
jbe
pushf
fidivl
or
fldcw
lea
fwait
dec
mov
cmpsl
mov
inc
lahf
jmp
cwtl
rcrb
inc
out
mov
sbbb
dec
outsl
in
mov
mov
inc
or
mov
xchg
xchg
shll
hlt
jae
test
adcb
or
aam
mov
push
ss
dec
fistl
clc
mov
frstor
add
push
mov
xor
rcrb
push
jp
push
stos
test
scas
mov
push
pop
xor
adc
ret
or
and
daa
movsb
xor
mov
and
ret
rclb
rcr
ljmp
pop
sbb
mov
repnz
cmpsb
mov
xor
shr
jo
or
aas
es
push
decl
scas
iret
arpl
jns
xlat
cmp
mov
dec
fisubs
mov
das
cmpsl
loopne
sbb
in
das
inc
sub
inc
mov
lcall
lds
pusha
xor
sahf
js
gs
pop
xor
arpl
jecxz
das
ja
rorl
mov
cs
lods
push
dec
pusha
mov
push
sti
cs
imul
xchg
inc
lret
or
ljmp
stos
repz
pop
jno
lahf
mov
jae
loop
pop
xor
lret
subl
mov
xchg
aas
aas
subl
mov
rclb
test
mov
cmp
jp
push
popf
invd
dec
fidivrs
mov
enter
fidivrs
shll
cs
stos
sub
mov
in
inc
push
sub
sub
addb
outsb
popa
mov
jbe
mov
dec
cld
loope
ret
sub
xchg
in
fimull
pop
and
and
shrl
xchg
jb
addr16
add
xchg
out
in
sub
mov
xchg
insb
out
lea
push
or
stos
sub
push
jae
sbb
fdivp
add
fstps
lret
int
ljmp
lods
sub
mov
je
or
and
out
xrelease
jae
push
shlb
arpl
aam
pop
icebp
ss
movsl
or
jg
cmp
fdivr
xlat
mov
jns
sti
dec
cmp
filds
ds
xor
or
xor
icebp
xor
inc
out
sbb
and
mov
popf
nop
ljmp
cli
or
push
call
or
inc
mov
pusha
fwait
addl
sbb
xor
and
insl
push
lods
jne
outsb
enter
mov
push
sti
push
or
and
pop
xor
and
stc
scas
mov
inc
fcmovnbe
mov
fcomi
mov
add
test
and
lcall
pop
xchg
inc
sbb
test
ds
push
adc
repz
sti
xchg
adcl
jo
outsb
mov
ds
or
adc
sub
push
mov
call
fisubs
incb
ja
mov
xor
inc
lret
push
adc
xorb
xchg
jno
aam
cmp
sub
stos
pop
divb
ljmp
dec
pop
ljmp
mov
lret
lods
call
ficompl
xchg
jl
fdiv
insl
ret
cld
mov
dec
cwtl
int3
mov
pop
jne
mov
sbb
xor
popf
add
movsl
mov
stos
mov
xor
in
mov
test
sub
daa
xchg
scas
popf
sbb
clc
cmp
stc
nop
loop
mov
push
push
push
pusha
mov
popf
dec
in
outsl
popf
mov
pop
inc
imul
mov
jmp
push
cmp
add
ljmp
popf
paddb
cmpsb
push
push
scas
pop
jns
mov
and
mov
cli
xchg
movntps
xor
mov
inc
nop
inc
push
xor
jmp
mov
cmc
call
sub
add
test
cs
iret
xadd
popa
icebp
jns
mov
xor
cltd
lret
cli
testb
ds
push
xor
mov
xchg
in
push
mov
push
mov
jo
mov
je
mov
loopne
push
and
cmp
imul
xchg
add
in
mov
stos
lret
or
mov
dec
pop
ljmp
pop
ss
push
jmp
pop
mov
sbb
or
decl
push
sti
les
sub
fisubl
adcl
insl
cmp
sbb
mov
test
adc
jmp
mov
in
jl
mov
shlb
sbb
cmpsb
or
or
insb
mov
mov
rorb
ret
jmp
inc
push
dec
xchg
cmpsb
popa
push
inc
adc
in
mov
cmc
mov
idiv
xchg
sub
cmpsl
lock
mov
jo
stos
pop
negb
add
enter
inc
mov
notl
sub
out
shll
sub
aam
call
jg
mov
push
loop
jg
insl
popa
sbb
xor
push
mov
xor
cmp
add
arpl
xchg
push
mov
fldcw
dec
mov
inc
ret
sbb
jo
rcll
enter
or
push
pop
movl
cltd
cwtl
dec
mov
jnp
dec
or
add
cltd
or
sbb
xor
lds
addl
sbb
fsubs
mov
and
stc
dec
andl
in
add
inc
sahf
lahf
test
lcall
pushf
and
bound
jl
jno
ds
mov
adc
bound
sub
pop
jae
xchg
addr16
or
cmp
popa
loop
flds
cmp
mov
adc
pusha
std
pop
lods
lret
pop
mov
mov
xor
cltd
incb
fbld
mov
outsl
bound
sub
aam
push
xchg
pop
mov
mov
clc
into
dec
sbb
ljmp
push
jno
repz
sahf
mov
int3
in
or
or
notb
add
and
ljmp
mov
mov
fmull
inc
jo
cmp
xor
add
loop
lock
stos
mov
pop
xor
xchg
jg
iret
mov
adc
jl
cmp
cld
pop
cmp
and
dec
mov
push
lcall
cld
xchg
addr16
or
divb
aas
lock
inc
jp
fcoml
mov
adc
pusha
std
sub
add
push
mov
xor
cltd
incb
sub
data16
notl
pop
outsl
bound
sub
aam
call
jg
mov
out
sub
xchg
sbb
xor
push
mov
xor
cmp
adc
mov
repnz
push
mov
sbb
ret
into
inc
ret
sbb
jo
rcll
enter
add
jbe
addr16
mov
cltd
cwtl
dec
mov
xchg
jno
test
adc
rolb
aam
sub
gs
add
adc
xor
aas
jmp
mov
xlat
mov
push
test
add
cmpsb
fimull
add
push
jmp
cs
jmp
adc
test
adc
ss
cmp
fs
xchg
aad
cli
push
mov
stc
adc
js
std
aas
sub
movsb
mov
xor
fisubl
loope
out
pop
test
jno
mov
mov
mov
lret
loop
push
pop
movsl
or
cmpsb
xchg
dec
mov
fidivs
clc
ja
shll
test
add
mov
xor
rorb
jo
cli
leave
addb
mov
push
and
addr16
dec
mov
inc
test
outsl
pop
mov
mov
add
xchg
scas
ret
mov
and
hlt
repz
jecxz
outsb
xor
xor
dec
mov
negl
int3
loope
xor
imul
bound
sahf
pop
or
cld
call
mov
sbb
jecxz
in
push
clc
jmp
and
cmp
or
sub
sbb
lds
fsubs
mov
sub
or
fsin
andb
push
adc
and
add
sub
pop
lods
mov
loopne
xor
xchg
dec
stos
ret
pop
push
and
push
mov
pop
jmp
mov
bsr
mov
fadds
popf
clc
stos
aas
lods
rcr
add
stc
adc
push
pop
subl
pop
mov
in
push
pop
shrb
loopne
push
jmp
divl
ret
arpl
push
cmpsl
fmul
mov
gs
repz
call
sub
lea
dec
aas
jno
cmp
or
xchg
adcb
jge
pop
inc
mov
popf
jae
fbld
xchg
ficomps
setge
int3
iret
inc
or
push
in
loope
pop
sbb
cs
adc
test
pop
rcr
xchg
pop
jo
xchg
sbb
sbb
pop
inc
add
push
test
lahf
and
mov
in
dec
jmp
adc
loop
in
jb
cltd
test
cmp
add
mov
or
dec
push
cmp
in
lea
dec
inc
imul
je
xor
outsb
push
mov
jb
mov
arpl
inc
nop
loop
icebp
jb
jg
faddl
outsb
sbb
sub
call
push
mov
scas
ja
push
pop
decl
xor
inc
testb
cmpsb
std
mov
ret
fs
cld
jbe
je
and
and
and
mov
push
mov
jno
icebp
jo
and
lock
mov
popa
xchg
call
xor
sub
push
mov
cli
push
pop
cltd
push
cmp
add
fs
pop
stos
xor
cmp
sbb
jecxz
sarl
push
mov
mov
push
or
and
stc
insb
add
not
mov
js
stos
xor
lods
inc
repnz
clc
pop
in
cmc
xor
inc
das
cmp
add
insb
pop
loopne
pop
ret
ss
and
or
es
int3
cs
push
lahf
jle
push
mov
sbb
std
add
mov
mov
adc
or
and
ret
decb
sub
add
orl
add
ss
in
fists
data16
fstps
mov
adc
das
inc
push
add
mov
in
fidivrl
pop
pop
in
sahf
sbb
repz
sbb
adc
scas
inc
adc
cli
push
or
out
test
dec
cmc
dec
xchg
dec
mov
sbb
paddsb
in
clc
fwait
jge
roll
testb
fmul
aad
out
fwait
leave
mov
mov
push
cmp
cmpsl
sub
xchg
xchg
and
insl
xchg
and
and
movl
scas
addr16
popf
pushl
fstp
jnp
xchg
dec
cltd
ret
fildl
das
in
addr16
fmuls
push
sbb
mov
aaa
fistps
icebp
sarb
inc
loop
lea
push
jo
fistpl
je
sub
inc
dec
push
sbb
xor
ljmp
push
insb
push
push
loopne
mov
jmp
outsb
mov
sub
cli
scas
idivb
mov
cmp
decl
push
mov
jmp
mov
jno
sbb
push
sub
jle
mov
lods
or
imul
xchg
add
xchg
push
and
xor
push
ja
adc
movsb
ljmp
pushf
movsl
js
pop
mov
out
xor
enter
push
sti
add
add
and
mov
lods
call
or
int3
fwait
mov
jp
fcoms
stos
add
mov
or
push
lea
dec
sahf
sahf
mov
stos
add
call
and
jmp
jg
pop
jp
mov
sub
jge
rcll
aaa
or
inc
push
dec
or
xor
ljmp
sbb
sub
mov
adc
in
pop
in
adc
icebp
idivb
mov
loopne
sub
nop
icebp
pop
push
or
lahf
sub
arpl
pop
xor
fistps
fwait
leave
push
xchg
mov
cmpsb
out
mov
push
out
or
fimuls
mov
jge
xor
pop
and
and
sub
xchg
out
dec
push
int
shll
leave
inc
jns
lods
jnp
ljmp
divl
dec
push
add
mov
movsl
and
fs
push
jnp
inc
faddl
lret
jne
cmp
js
jmp
pop
xor
pop
into
outsl
jbe
nop
cmpsb
mov
scas
xor
pop
cmc
fidivrs
mov
push
pop
cmp
sub
or
inc
loop
scas
out
shr
loopne
outsl
cld
sbb
mull
out
aad
aad
dec
cmp
out
bnd
pop
lret
into
cmp
test
cmc
pop
inc
gs
add
mov
sub
cmp
sbb
pop
int
jmp
sbb
inc
dec
iret
clc
mov
jl
pop
mov
sub
jecxz
movq
mov
ret
stos
or
jne
add
xchg
cli
ficoms
mov
jb
sbb
loop
push
pop
xchg
adc
lods
and
pop
into
jb
pop
stc
imul
xchg
je
arpl
mov
mov
scas
and
stos
outsb
das
sbb
xchg
cli
cmpsl
or
xchg
sub
out
imul
fildl
sbb
out
xchg
shll
xchg
xchg
dec
in
xor
pop
fisubrl
xor
test
in
fiadds
iret
mov
aas
mov
add
pop
xchg
jl
js
fimuls
sbb
push
adc
push
sub
mov
inc
or
jp
in
mov
xchg
cmp
jae
cmp
ss
popf
aaa
rorb
sub
mov
adc
jmp
jmp
pop
scas
push
jecxz
in
lret
xor
negb
sub
stos
sbb
cli
icebp
movsl
fs
cltd
enter
lea
adc
lret
daa
jmp
inc
jne
repz
inc
pop
int
test
mov
fld
mov
jp
aaa
dec
aam
add
lahf
dec
push
lret
mov
inc
outsb
sbb
dec
pop
enter
fstpt
aam
dec
pop
push
cwtl
movsl
outsb
mov
mov
push
clc
lahf
nop
movsl
mov
mov
mov
shll
mov
fistpll
or
fdiv
movb
popf
inc
jge
pop
loopne
fldl2e
pop
push
movsb
push
aad
add
addr16
fdivrp
push
les
mov
movsl
test
adc
addr16
push
xchg
add
cli
xchg
mov
rolb
in
or
or
push
jge
nop
jl
test
add
sbb
mov
jo
add
repnz
jne
sbbb
leave
pop
push
imul
imul
jge
insb
adc
cmp
aam
push
lret
out
and
or
in
xchg
cmp
xchg
mov
mov
xor
fdivs
or
in
les
push
xor
ret
pop
xlat
fnstcw
popa
sub
fcmovnu
add
dec
imul
fmull
cwtl
fwait
decl
mov
in
mov
xchg
ret
ds
fwait
ljmp
icebp
cmp
les
adc
sbb
inc
ss
lret
mov
ror
mov
jge
nop
jl
test
cmp
insl
fstpl
sbb
cmp
nop
inc
in
xchg
dec
ret
and
cmp
sub
push
rcll
cltd
adcl
adc
jb
ret
out
sub
mov
in
mov
pop
mov
dec
mov
or
adc
clc
rolb
fmul
add
mov
sbb
push
mov
rorb
inc
mov
insl
add
loope
pop
inc
test
lea
push
and
and
cwtl
xchg
jb
cli
lods
xor
pop
push
fisttps
xchg
jg
jge
xchg
jno
repz
or
arpl
sbbb
jo
outsl
ret
push
lea
popf
ljmp
stc
ss
mov
test
mov
imul
jge
outsw
dec
data16
jae
xchg
shlb
jl
cli
add
xchg
lahf
mov
mov
popf
out
inc
enter
cmpsl
popa
add
jae
lock
mov
hlt
clc
rorl
scas
mov
lods
lods
mov
jmp
sub
sub
stos
test
inc
movhps
leave
xchg
aas
mov
aaa
sbb
inc
or
scas
inc
or
dec
sub
lds
mov
dec
xchg
inc
cltd
mov
out
and
and
daa
pop
ljmp
mov
scas
call
leave
in
cmpsb
fisubs
add
pop
ljmp
fcoms
lods
push
subl
mov
add
pop
ljmp
sbb
cmpsl
push
sub
daa
sbb
movsl
fs
test
es
outsl
lret
jo
test
sub
test
jae
in
outsl
xor
stc
push
sbb
xor
decl
xchg
jo
sub
dec
jne
lea
cmpsl
jecxz
dec
adc
mov
jne
stos
pop
sbb
mov
xchg
clc
sbb
inc
xchg
roll
cmp
aaa
jb
out
sahf
sbb
addl
int3
mov
xchg
push
cmpl
scas
mov
movsl
mov
aam
pop
cltd
push
inc
cld
mov
addr16
popf
inc
fidivl
fidivrs
xor
adc
push
sbb
xor
mov
jae
sbb
push
daa
cmp
jge
and
stos
out
sbb
movsb
into
sbb
stc
and
in
outsb
aam
leave
arpl
rolb
sub
xor
insb
cmp
xchg
pop
mov
jae
sbb
xlat
pop
lock
gs
fst
mov
xor
ret
popa
adc
fdivrl
ss
push
mov
adc
ret
jle
mov
xchg
in
mov
stos
cmp
push
mov
nopl
xchg
mov
ja
cli
in
cmp
jmp
add
jle
pop
mov
xchg
lahf
xor
aad
rolb
jl
movsb
pushf
jge
repz
imul
push
nop
cmp
in
fsub
xchg
push
push
xchg
daa
lock
push
mov
mov
jno
cmp
sub
push
xchg
aad
out
bound
xchg
sbb
dec
xchg
rcrb
out
das
xor
adc
pushf
jb
dec
and
xor
sbb
fsubr
cli
add
dec
clc
movsl
fwait
jo
add
es
scas
rorb
stos
jg
movb
push
xor
std
mov
jb
and
popf
test
jne
lock
jnp
xchg
ud0
into
cmp
mov
lret
mov
movsb
in
sub
xchg
jno
pop
pushf
popa
andl
push
movsl
fwait
out
pop
xchg
push
popf
inc
xchg
dec
or
aas
fwait
or
xchg
addr16
outsl
cmc
xchg
call
xchg
mov
sub
mov
jne
fcoms
adc
pop
sub
add
inc
mov
jmp
push
je
sub
pop
lret
or
mov
mov
gs
pusha
dec
inc
sub
mov
inc
sub
mov
pop
imul
es
loope
mov
aam
mov
ds
pop
les
dec
mov
out
xchg
in
cwtl
sub
mov
inc
adc
in
sub
lret
imul
cmp
int3
lret
movsl
stos
sub
inc
jp
imul
stos
inc
mov
xor
mov
xor
sbb
jecxz
xchg
dec
inc
cmpsb
pop
int3
xor
movsl
mov
ret
sub
jnp
call
lods
mov
in
lcall
pop
adcl
cmp
mov
or
mov
jg
sub
movsb
das
sub
adc
jecxz
inc
jmp
sbb
popl
jl
pop
xor
ss
pop
call
daa
iret
dec
notb
gs
in
in
fwait
insl
xchg
cld
pop
ljmp
sbb
ficoms
inc
mov
pop
jne
mov
inc
out
out
cmc
jl
or
bound
inc
out
add
lods
out
mov
cmp
jo
xor
xchg
shl
lds
outsb
mov
out
movsb
push
cmp
cwtl
stos
sahf
lret
mov
scas
mov
push
adc
xchg
adc
mov
test
dec
adc
loope
add
pushf
sbb
lahf
rcr
lret
pushf
in
jns
jbe
daa
add
mov
jecxz
pop
mov
out
push
lahf
cmp
jmp
mov
adcl
mov
in
mov
dec
jns
jb
cmp
push
dec
rcrl
scas
dec
fs
dec
loopne
mov
stos
jb
and
xchg
repz
mov
xlat
xor
je
out
adc
mov
jmp
fbstp
testb
lock
dec
fnstenv
aad
adc
icebp
dec
ds
jns
ss
push
outsl
mov
mov
scas
push
push
and
jo
xchg
mov
popf
roll
fiaddl
mov
xchg
mov
xchg
aad
push
or
sub
and
fildl
negl
pop
jecxz
pop
add
xlat
fisubrl
jmp
push
ds
pop
mov
mov
insb
sti
dec
push
adc
jne
pop
inc
popf
daa
hlt
mov
sbb
call
fcomi
sbb
adc
imul
fisubrl
in
repz
mov
data16
adc
outsb
dec
pusha
stc
loope
jg
xchg
adc
xorb
adc
dec
mov
push
adc
and
test
mov
cmpsb
scas
or
and
ljmp
push
jb
or
push
dec
fneni(8087
adc
inc
test
inc
test
mov
adc
lds
lret
push
ret
lcall
test
push
aaa
fdivl
popf
fs
push
fstl
mov
int
popa
add
push
sub
loope
pop
and
mov
cmpsl
shlb
adc
push
mov
dec
mov
pop
xchg
pop
mov
fldcw
shll
add
stc
mov
addl
or
lret
lock
cmp
ja
aas
push
lea
aas
push
rol
mov
scas
out
adc
xchg
mov
lret
mov
pop
add
movsl
jb
and
adc
test
adc
mov
xchg
out
cmp
lods
pusha
enter
adc
out
lods
jge
loope
mov
arpl
push
push
loop
mov
das
sbb
ret
test
fs
and
sbbl
fwait
push
jge
inc
cmpl
stos
cmp
xchg
jo
sub
test
roll
popf
push
or
xchg
xor
mov
mov
xor
cmp
sub
movsb
cmp
jo
cwtl
mov
sub
lds
loope
jo
pop
xor
iret
lret
iret
fcomps
lcall
fistps
xor
jb
mov
test
or
outsb
pop
push
lock
add
cmpl
jl
cmp
scas
or
push
sub
cmp
mov
lock
cmc
or
mov
sti
lret
xchg
xchg
scas
mov
pop
xor
pop
sbb
xor
mov
mov
push
dec
push
hlt
mov
jg
xor
aas
pop
int
scas
pop
mov
call
inc
insb
cmp
adc
and
mov
mov
sbb
mov
sub
outsl
mov
in
xor
xlat
pop
arpl
xchg
mov
cli
push
mov
cmp
push
inc
testb
sar
mov
mov
jne
pop
adc
pusha
push
mov
jns
add
pop
fsubrl
mov
leave
or
ret
jbe
add
push
mov
test
fwait
bound
and
sub
sub
mov
push
lods
stos
lock
movsb
mov
call
loop
lods
std
inc
push
inc
and
rclb
xchg
in
sbb
mov
movsb
scas
dec
outsl
aam
fwait
pop
mov
test
ret
cld
lahf
cltd
xchg
dec
lods
imul
adc
inc
mov
dec
enter
xchg
dec
xlat
xchg
jl
outsb
push
add
lret
or
popf
push
xor
addr16
push
jp
dec
inc
out
addr16
mov
pop
in
int3
pop
outsb
mov
pop
pop
lock
adc
out
mov
mov
xor
pusha
notb
push
std
scas
push
xchg
aam
adc
data16
cwtl
and
negb
xchg
movsb
stos
bnd
arpl
push
pop
jnp
push
mov
mov
pop
adc
mov
fiaddl
push
mov
mov
fistpll
je
dec
popa
push
loopne
cs
or
shrb
jp
push
cltd
clc
test
out
rclb
lds
addl
insl
xchg
jbe
jg
ficomps
and
push
loopne
ljmp
call
subb
push
fdivrl
mov
xorl
mull
loopne
pusha
jno
test
pop
sbb
push
adc
dec
push
out
adc
stc
dec
incb
fcompl
cs
dec
test
insl
mov
jb
pop
sbb
push
sti
jo
push
bswap
sbb
dec
stos
xor
ret
sub
test
fxch
mov
jmp
jbe
pop
sub
fs
pop
xchg
xchg
pusha
fstpt
lods
jno
push
pop
pop
add
aas
mov
pusha
in
aam
or
lods
call
jg
add
jle
fidivrs
imul
push
leave
aam
sbb
push
test
cmp
cs
jnp
sub
ljmp
fimuls
insb
push
jecxz
pop
xor
pop
addr16
and
icebp
out
push
stos
jae
sti
sbb
mov
jns
sub
rclb
insb
pop
popa
cltd
scas
adcl
sub
xchg
xchg
pop
scas
inc
mov
or
rcll
cli
inc
popa
inc
pusha
fidivrs
xchg
jo
gs
xchg
pop
add
and
flds
xchg
fs
pop
add
outsl
dec
lcall
repz
daa
push
ss
push
out
xchg
fcom
add
xchg
gs
pusha
pushf
lret
loop
sbb
sti
cmp
mov
shrl
aas
xor
lret
push
sbb
in
sub
js
data16
pushf
dec
xchg
aaa
jae
jb
mov
push
add
fs
in
cmp
filds
iret
mov
mov
rolb
adc
cmp
sbb
mov
lret
cmp
scas
or
push
sub
cmp
mov
pop
and
jmp
xchg
daa
in
mov
lcall
mov
inc
or
jmp
xor
sub
leave
jg
adc
aaa
and
push
sbb
pop
mov
pop
rclb
movntq
out
add
xor
lret
dec
es
stos
mov
fucom
incb
cmp
rorb
repz
pop
mov
inc
dec
pop
nop
outsl
not
dec
ds
lods
lock
dec
push
jg
sbb
test
adc
ljmp
aam
jne
outsb
sub
push
dec
fsubrl
push
xchg
sub
insb
or
rcrb
adc
lret
inc
int
sub
ret
cmp
adc
xor
sub
decb
in
into
in
lret
inc
xor
popa
stos
fstpl
aaa
mov
push
xor
jns
test
enter
mov
inc
or
jecxz
push
push
fistpll
shr
sti
and
mov
loop
jo
aaa
pop
adc
mov
lahf
std
daa
dec
lods
inc
gs
ret
fildll
pop
adc
and
or
repnz
dec
test
adc
xor
es
hlt
jmp
xchg
js
xor
sbb
cmp
mov
jno
pop
sbb
adc
pop
mov
mov
xchg
in
push
or
movsl
test
ss
arpl
dec
in
mov
shrl
xor
lret
rcl
ret
mov
sub
inc
cmp
jle,pn
inc
rcrb
outsb
fs
popf
pop
adc
addr16
mov
fidivrs
in
stos
movsb
js
fnsave
inc
sahf
cmpsb
mov
idivb
adc
adc
mov
push
or
push
pop
int
jae
sub
mov
push
pop
pop
cmp
add
rcrb
and
fistl
int3
not
jae
lds
lret
inc
inc
mull
adc
repnz
cmp
mov
pop
and
adc
dec
stos
jp
std
nop
je
jno
adc
push
ds
std
imul
push
clc
popa
les
xlat
loopne
jb
stos
push
shr
mov
adcl
xor
scas
inc
inc
test
or
rorl
sub
xor
dec
inc
mov
jmp
fistps
push
out
or
mov
push
xchg
lds
xchg
mov
pop
int
cmpsl
pop
pop
dec
lods
dec
pusha
enter
sar
fsubrl
shrb
xor
cwtl
sarb
or
push
pop
push
outsb
imul
xchg
push
jno
and
mov
movsb
jnp
cmpsb
adc
ds
in
mov
sub
push
or
jnp
jne
adc
push
arpl
scas
fwait
aas
push
inc
fmuls
int
mov
inc
sbb
js
repz
xor
out
xchg
outsb
mov
in
loop
daa
add
inc
pop
push
dec
adc
outsl
xchg
mov
jp
or
das
push
jmp
lret
in
or
pop
or
out
inc
xchg
jecxz
jae
icebp
hlt
mov
cs
rcll
cwtl
mov
xor
xchg
shrl
ret
sbb
cmp
sub
xor
push
jle
addl
push
fcoms
cmpsl
xor
jbe,pn
je
loopne
pop
dec
add
cmp
and
jae
mov
sub
jmp
mov
inc
jb
cld
pop
out
imul
cmp
mov
add
popf
rcr
adc
fstpl
loop
and
and
scas
inc
jmp
ljmp
push
xchg
dec
pop
inc
mov
les
stos
cmp
xchg
push
mov
cmp
fnstenv
addr16
bound
xchg
sti
faddl
pop
ret
jl
addr16
xchg
sub
pop
jle
mov
sub
push
sub
pop
stos
lea
add
test
addr16
jp
bound
xchg
out
icebp
mov
push
xlat
cwtl
dec
ret
jbe
dec
test
inc
mov
pop
inc
leave
push
pop
insl
js
or
mov
mov
loop
mov
dec
pop
mov
aaa
enter
divl
mov
aam
inc
shlb
push
inc
or
and
dec
add
add
aam
jns
orl
sub
dec
fiaddl
les
ret
jae
fdivrp
shrb
lock
xchg
pop
popl
cmpsl
and
jnp
jg
lock
repz
lret
call
hlt
cmc
mov
pop
mov
insb
js
mov
inc
rcl
das
sub
ss
and
jge
imul
mov
inc
sbb
out
jp
mov
loop
inc
pop
mov
fcomps
fsubrl
push
daa
cltd
cmp
stos
add
and
jbe
rol
pop
mov
pop
stos
add
into
outsl
test
test
add
std
mov
mov
pop
sti
ret
je
stos
pop
xchg
mov
dec
enter
and
mov
in
xlat
repnz
sub
sub
movsb
pop
mov
mov
add
dec
fsubrs
sbb
je
xchg
and
fcompl
mov
pop
loop
sbb
mov
xchg
iret
pop
fwait
ret
sbb
loope
mov
out
push
loopne
add
inc
mov
xlat
mov
pop
pop
ret
mov
pop
pusha
pop
cltd
sbb
in
add
mov
mov
sbb
mov
in
ss
push
sub
jbe
inc
xchg
scas
mov
in
std
and
dec
movsl
cmpl
sub
sub
or
negl
inc
cmc
enter
imul
add
mov
mov
adc
pusha
fisttps
jbe
pop
mov
mov
pusha
shll
add
scas
xchg
or
shll
out
or
fdivl
aas
push
movsl
jmp
test
jbe
push
push
sbbl
mov
outsb
cmp
scas
pop
mov
mov
jno
push
dec
pop
dec
hlt
adc
test
xor
ljmp
cmp
mov
into
push
push
and
sub
jg
clc
jmp
in
inc
lret
negl
aaa
xchg
jge
xabort
xchg
pop
xor
add
and
int3
push
cmpsb
xor
int
xchg
sbb
mov
outsb
rorb
lods
adc
rorl
lea
out
dec
test
inc
lods
mov
or
std
pavgw
push
hlt
jecxz
push
inc
ds
cmp
clc
add
std
les
add
lock
ja
mov
loope
push
cli
lods
xchg
push
jbe
out
lahf
cmpsl
xchg
data16
lods
gs
imul
push
inc
fiaddl
push
ja
push
lret
xchg
sbb
add
mov
push
mov
mov
popf
sbb
call
adc
cli
inc
sbb
jmp
stos
cwtl
adc
or
icebp
inc
add
addr16
push
push
mov
sub
lret
mov
xchg
lods
xor
mov
add
into
aam
xor
xor
xchg
xchg
adc
movsb
xlat
hlt
aas
neg
push
mov
int3
lea
cwtl
mov
jb
enter
das
xor
es
lods
xchg
or
pusha
pop
mov
call
adcl
insl
push
repz
adc
cmpsb
push
pop
lods
repnz
jne
push
in
call
and
mov
dec
int
mov
rorb
mov
jne
movl
xlat
sbb
movsl
out
mov
pop
push
aas
mov
jmp
cmp
das
xor
inc
dec
dec
shl
mov
dec
fcompl
pop
lahf
jo
insb
aaa
add
pusha
or
fldcw
test
and
nop
scas
sahf
mov
cltd
scas
mov
xor
adc
push
cli
xor
call
pop
movsb
mov
xlat
lahf
inc
mov
into
repnz
lcall
mov
xchg
xorb
xchg
orb
scas
jae
inc
cmp
jg
push
scas
ja
lret
jmp
cmp
adc
adc
sbb
sub
mov
leave
icebp
mov
gs
dec
add
xchg
inc
into
out
adc
lock
xor
mov
loopne
pop
inc
mov
xor
shl
popf
arpl
mov
cld
fcmove
data16
cs
jmp
cmp
xchg
and
push
jle
in
fwait
sub
test
shll
out
sbb
repz
pop
pusha
xchg
leave
pop
aaa
jb
xchg
pop
dec
jl
lods
stos
xchg
ja
jo
dec
scas
jle
push
xchg
es
cmc
loop
sub
popa
xor
xor
jecxz
sbb
xor
push
shll
fldenv
cmp
movsb
js
mull
fldt
fs
inc
fldt
ja
cmp
add
mov
addr16
dec
test
fsin
loop
pop
movsl
inc
lret
rcl
jge
mov
or
mov
mov
inc
aas
adc
cmc
sub
into
cmc
pop
jne
lcall
mov
lock
sbb
jge
push
lock
push
push
fwait
lods
adc
xorl
test
push
fidivl
jecxz
std
dec
je
adcb
insb
cmpsb
loop
jae
movsl
andb
fmull
fisubrs
popf
imul
push
pop
mov
adc
mov
jno
pusha
cmp
cmp
test
jecxz
ja
xor
pop
adcb
shlb
mov
repz
cmc
sub
jmp
and
rorb
out
icebp
sbb
icebp
mov
mov
iret
adc
aad
addr16
adc
add
popl
pop
roll
int3
sub
les
mov
lods
lret
fcoml
rcrb
pop
sub
loope
sbb
dec
shrl
add
xchg
jg
sbb
sti
sub
sub
jl
fldt
cmp
jp
push
call
cmp
inc
shll
out
or
sub
adc
repz
pop
imul
adc
fs
in
ds
mov
jl
outsl
sub
not
pop
enter
ret
rcrb
ror
shll
loop
arpl
and
jp
loop
iret
stos
outsb
scas
push
mov
mov
insl
lahf
outsb
pop
pushf
test
lds
jmp
xchg
adc
dec
shlb
jmp
test
pop
add
cmpb
fildl
pop
dec
aas
cmp
inc
orb
mov
subl
imul
movsl
pop
andb
lret
popf
aam
shll
jne
mov
jmp
rcr
sahf
sarl
addl
test
mov
outsb
loop
outsb
test
sbb
divl
adc
scas
push
or
sbb
cmp
int
jno
xor
sub
fstpt
dec
js
outsb
cli
dec
insl
sbb
out
shlb
shl
in
nop
add
out
scas
adcb
aas
add
addr16
rcll
in
dec
mov
int3
loop
sbb
push
and
jle
jns
and
xor
mov
pmullw
xchg
popa
push
dec
dec
clc
push
popf
mov
mov
jle
js
jbe
xlat
lock
pop
jns
xchg
push
icebp
mov
jge
mov
jg
loope
lock
imul
cli
cmp
mov
cltd
or
lods
fbstp
mov
clc
pop
js
stc
lods
in
push
xchg
fbstp
cmp
mov
sar
mov
mov
repz
outsb
stos
enter
push
aaa
push
aam
inc
cmp
mov
xchg
in
repz
lds
lds
sbb
adc
rol
rcll
das
adc
sub
and
scas
jmp
jle
sub
mov
add
sub
jl
daa
pop
test
cmc
add
mov
sbb
fidivl
push
sbbb
fildl
daa
cld
jge
sahf
shrl
into
xor
jb
mov
daa
cmp
in
out
jo
dec
mov
fwait
insl
inc
sub
ret
inc
adc
add
or
inc
pop
pop
sbb
ljmp
js
pop
adc
mov
in
call
cld
pop
or
and
aam
fadds
xor
mov
push
push
aad
pop
repz
sbb
mov
xchg
aam
pushf
mov
lods
sub
clc
sbb
out
fildll
lret
xchg
icebp
cli
aad
or
mov
adc
out
sbb
nop
sub
enter
lret
in
inc
in
add
scas
loope
push
in
xchg
xchg
pop
stos
fnstsw
cmp
or
adc
and
adc
insb
jb,pt
xor
xchg
inc
pop
ds
addr16
xor
popf
ds
push
loope
cli
push
rorl
jne
rol
push
mov
xlat
std
push
gs
cmp
js
cmpsl
and
cmpsl
in
mov
dec
rorl
jno
stc
push
push
inc
js
mov
mov
sub
dec
fnstenv
or
push
cwtl
jo
cmpsl
mov
enter
pop
arpl
xor
cmpsb
lahf
pop
rorb
out
mov
shll
lds
and
cwtl
fstp
adc
in
mov
jnp
xchg
cltd
jmp
inc
jl
ljmp
test
inc
hlt
adc
rolb
jno
jnp
in
xchg
adc
lods
sbb
and
jbe
jp
xor
lret
js
push
add
enter
jbe
adc
rcrl
fwait
rolb
aad
data16
popf
mov
aaa
cmc
xor
leave
dec
cmc
jp
fs
mov
mov
mov
or
cmp
outsb
sbb
test
inc
xchg
push
inc
jl
imul
insl
jnp
xchg
cmp
or
mov
jns
icebp
mov
mov
idivb
mov
ret
xor
les
es
sbb
lcall
fwait
sbb
inc
sbb
push
mov
into
jae
and
sub
mul
mov
out
rcrl
adc
sbb
lcall
jge
outsl
pop
add
mov
les
pop
mov
mov
aam
shrl
out
jno
out
mov
cmpsl
pop
cmpsl
fcmovnb
enter
xchg
pop
or
call
repz
mov
test
add
pop
dec
scas
adc
adc
and
inc
loop
insl
pushf
rcr
jecxz
jg
xor
dec
mov
ret
test
jno
mov
lds
dec
rorl
dec
jbe
sbbl
int3
push
in
ss
jmp
push
les
hlt
mov
sub
outsb
std
cmp
and
inc
popl
test
stos
or
aad
jle
push
fdivrs
movsb
xchg
push
ss
add
mov
loope
inc
mov
fsts
orl
sub
cmp
xchg
inc
xor
dec
mov
mov
dec
cmpsl
stos
lds
jns
push
insl
nop
cmp
xchg
cld
pop
movsl
add
ret
sub
notb
sbb
mov
insl
shrl
lret
mov
push
fs
je
leave
pop
push
leave
mov
sub
xchg
cld
jmp
nop
push
psubusb
and
shld
pop
sbb
pop
ss
mov
scas
movsb
ss
push
xor
cltd
out
mov
add
push
insb
out
nop
xlat
dec
sbb
cmp
orl
insb
sbb
jns
imul
and
cs
sbb
xor
mov
in
cmp
push
lds
cmovne
into
or
inc
mov
cwtl
mov
push
ljmp
sbb
ret
popa
mov
ljmp
cmpsl
inc
dec
daa
pop
out
xchg
mov
loope
pop
and
data16
jg
imul
dec
in
popl
aam
dec
popa
nop
inc
jg
insb
mov
jo
or
jne
popa
stos
repz
lcall
mov
adc
xchg
sbb
mov
std
mov
xchg
arpl
cmp
lods
xor
sub
push
mov
sti
fld
rcll
stos
pop
imul
and
mov
mov
sbb
sbb
xorl
push
insb
out
in
mov
xor
jg
ret
test
xlat
sbb
or
jb
inc
adc
pop
cwtl
rorl
dec
xchg
xchg
sub
rolb
sub
pop
mov
jge
mov
into
inc
addr16
arpl
mov
push
loopne
dec
subl
cmp
mov
sub
out
inc
arpl
push
test
push
stc
mov
movsl
or
or
or
lods
mov
shl
mov
stos
pusha
mov
mov
ret
leave
repz
and
loope
es
imulb
push
jns
or
xchg
pop
mov
fsubl
shlb
mov
popf
jne
jmp
or
dec
sub
mov
repnz
cmp
mov
out
ja
cmp
movsb
fdivr
in
cmpsb
sahf
jns
mov
xchg
int3
xlat
mov
ljmp
ds
inc
mov
pushf
arpl
inc
xlat
lods
fdivs
jne
lahf
pop
lods
push
decb
inc
adc
push
and
dec
xchg
pusha
xor
fucomi
cmp
cmp
pop
rcrb
sahf
dec
pop
jo
test
pop
mov
xor
sub
xchg
or
inc
push
fiadds
inc
cld
xor
outsl
cmc
js
negl
mov
xor
lods
push
ret
dec
mov
cmc
mov
or
push
in
int3
out
scas
popa
ljmp
jne
pop
adc
pop
xchg
in
insb
pop
and
pop
fistps
cmp
sbb
lds
stos
fcom
sub
lret
addr16
in
ds
js
loopne
pop
out
dec
out
aam
icebp
sbb
adc
fsubl
jns
fisubs
idivb
jb
shrb
std
xchg
mov
cmp
movsl
lods
push
xrelease
xchg
inc
and
jg
gs
push
pop
dec
cltd
xchg
lods
into
mov
mov
das
sahf
inc
dec
mov
clc
rcrb
cmp
mov
jb
in
in
and
ljmp
xchg
xchg
xorl
movsl
enter
int3
adc
pop
xchg
nop
dec
aaa
xchg
repz
std
fisubrs
xlat
mov
mov
cmp
cs
mov
cltd
cmpsl
sub
repz
sub
adc
push
xchg
jg
jbe
shr
sub
pop
jl
adc
outsb
jle
mov
xchg
adc
sti
ds
adc
add
movsl
cmpsl
in
cmp
jg
hlt
mov
out
sub
ds
sbb
loopne
aad
mov
into
push
andl
jbe
cs
imul
out
rorb
dec
jns
mov
push
push
aam
lahf
ljmp
clc
mov
cmp
push
pop
add
hlt
push
aaa
pop
add
jp
lock
fldt
mov
in
adc
sub
scas
repnz
ret
add
push
inc
add
jns
mov
repz
inc
adc
jle
or
lea
enter
or
dec
inc
lcall
or
sarl
add
mov
jecxz
punpckldq
fs
popa
sub
iret
add
sub
leave
fdiv
jl
pop
pusha
int
inc
push
jnp
in
fimuls
in
inc
lret
xchg
insl
push
jg
push
add
mov
negl
stos
sub
xchg
mov
ss
inc
mov
gs
into
sbb
in
sbb
test
mov
jns
jg
xor
jecxz
push
pop
es
je
les
pop
sub
loop
lods
adc
and
jns
push
sbb
mov
test
popf
cltd
pop
and
sahf
hlt
out
mov
push
xchg
lcall
sub
xor
lods
dec
and
mov
ds
pop
push
ljmp
and
mov
push
aaa
or
or
add
dec
push
xchg
dec
pop
dec
xor
mov
orl
dec
arpl
cmp
shrl
aam
cmp
cmpsb
mov
adc
into
loopne
xlat
cmp
adc
cwtl
dec
adc
scas
sub
push
cmp
fwait
movsl
add
jmp
dec
sub
popf
out
adc
mov
xchg
call
andb
popf
imul
mov
dec
sbb
mov
dec
repnz
or
call
pop
mov
in
sub
jnp
subb
fwait
mov
movb
sti
cmpb
mov
in
cmp
test
pop
pusha
fwait
cli
mov
jnp
fwait
pusha
jmp
mov
scas
fistl
leave
inc
lock
cmp
mov
test
push
inc
mov
testb
test
jp
repnz
mov
ficompl
sbb
sbb
pop
cli
pop
mov
xor
pop
mov
push
in
loope
dec
ss
xor
repnz
push
pop
pushf
scas
gs
xchg
or
test
xchg
xor
fs
push
cmp
lds
into
pushf
ljmp
aad
mov
loopne
out
pop
pop
xchg
jp
jo
pop
dec
xorl
sbb
sub
ss
inc
mov
push
sub
lock
cmc
data16
mov
cld
inc
into
lods
xchg
mov
jecxz
pop
pop
and
fistps
inc
or
sub
clts
out
jnp
mov
xchg
out
jge
jecxz
rcrl
out
popa
mov
jmp
movsl
mov
push
adc
xchg
jns
pop
mov
add
aad
pop
push
rorl
and
call
fs
sub
mov
test
ror
gs
in
aaa
add
lcall
jl
in
inc
sub
jnp
jg
pop
js
je
out
clc
fmulp
cmp
or
mov
cwtl
inc
fsts
ja
fcoml
push
lods
fdivrl
pop
xchg
push
or
jle
xchg
mov
das
xchg
add
jmp
fwait
dec
in
adc
sub
dec
popf
lahf
cmp
cmp
in
gs
push
jmp
das
gs
clc
fisubl
push
lods
push
lock
js
fdivrs
in
clc
int
pop
out
je
lcall
inc
dec
pop
cmp
mov
sti
jne
and
or
imul
mov
fistpll
mov
fimull
mov
add
shl
mov
adc
jae
or
je
lret
mov
mov
ds
inc
aas
cmp
jle
adc
add
pop
dec
jle
xlat
sub
imull
aas
xor
fisttpll
jnp
test
inc
mov
hlt
adc
lahf
xor
push
into
push
imul
xchg
cmp
mov
push
xor
dec
xchg
pop
cmpl
push
fucomi
cwtl
push
adc
dec
popa
in
ds
js
loopne
push
dec
or
insl
jmp
inc
pusha
xchg
into
pop
or
ljmp
xchg
out
ss
dec
dec
clc
fmulp
cmp
or
inc
jo
dec
sub
daa
dec
mov
gs
cmpsb
fisttps
lcall
aas
push
inc
push
fsubl
dec
mov
inc
jp
fiadds
add
jo
stos
sub
repz
add
in
sub
fst
mov
es
stc
hlt
mov
xchg
out
inc
test
cmp
jno
mov
push
and
out
or
sub
scas
xor
lds
orl
mov
mov
sbb
aad
lea
test
jbe
mov
xchg
adc
xchg
mov
fdivrs
mov
inc
or
jp
mov
mov
popf
push
mov
clc
fmulp
cmp
or
cmp
adc
add
dec
rcl
adc
mov
std
add
add
adc
ljmp
lock
orb
mov
sub
push
movsb
dec
sbb
jno
cmp
mov
jp
fiadds
add
jo
enter
cmpsl
cltd
popl
clc
or
pop
cmp
mov
ss
jnp
push
adc
push
or
arpl
js
add
sbb
sti
cwtl
jmp
inc
jg
adcl
inc
cmp
pusha
inc
cmc
xor
mov
or
dec
ljmp
xor
dec
inc
repz
xor
add
in
leave
sbb
call
mov
adcl
add
mov
mov
je
xchg
pop
sbb
mov
sti
adc
mov
aaa
sbb
mov
repz
jno
iret
popf
ja
adc
in
pop
out
std
push
adc
dec
cmp
and
mov
dec
jbe
ficoml
jecxz
inc
pop
cmpsb
notb
sti
scas
mov
adc
mov
stos
mov
sbb
fwait
sbb
lods
pusha
aas
lcall
and
lcall
inc
cli
test
imul
push
ss
cmp
inc
sbb
ret
sub
cmpsb
xor
cmp
cmc
and
fs
repz
jbe
or
int
jnp
push
mov
mov
or
xor
sub
push
sub
push
mov
fbstp
sbb
xchg
push
push
imul
push
mov
mov
ljmp
movsb
movsb
xchg
aam
fwait
data16
and
mov
call
pop
xchg
outsb
adc
jmp
inc
ret
jbe
dec
fistl
cmc
and
sub
frstor
mulb
sbb
bound
xor
cmc
push
and
sbb
jae
into
xor
dec
in
fwait
push
xor
call
lods
addb
sbb
stc
in
test
jns
arpl
test
loope
sarl
and
add
fwait
sahf
shll
or
and
sbb
sbb
add
out
mov
fs
adc
jl
bound
loop
or
pop
call
cmp
sbb
push
jp
add
inc
lds
jmp
dec
movsl
dec
pop
mulb
mov
xchg
sbb
into
jp
cmp
mov
xor
aas
dec
push
popa
test
or
push
adc
jle
pop
neg
cmp
cmp
add
sbbb
mov
or
pop
jbe
dec
jns
cmp
or
sbb
cwtl
fstpl
fisubrs
rorl
push
jne
xchg
addr16
xor
sub
daa
inc
xchg
push
testl
cmc
sub
sub
jbe
loopne
mov
pop
xor
gs
push
lahf
or
or
wbinvd
inc
jle
mov
fiadds
cld
sahf
sub
inc
mov
sbb
popf
sub
jmp
mov
mov
cmc
xchg
aas
repnz
xchg
mov
jmp
lea
and
dec
and
addr16
insl
into
or
mov
pusha
sub
jae,pt
icebp
mov
push
push
jecxz
xchg
push
inc
jne
push
outsl
xor
loopne
loope
fstp
hlt
je
rolb
aad
push
pop
call
xor
insb
shll
xor
jnp
lret
push
icebp
and
push
inc
iret
push
mov
xchg
cmp
call
cs
mov
dec
add
mov
sub
ret
inc
xchg
mov
sbb
test
scas
or
cwtl
inc
test
pushl
pop
jl
or
adc
ret
inc
xor
cwtl
add
and
aad
rcrl
pop
aam
mov
push
lds
subl
aam
jae
add
int3
mov
in
mov
sbb
rclb
stos
push
cmp
pop
sub
push
ljmp
xchg
into
shrl
addr16
lcall
pop
pop
xlat
mov
adc
inc
mov
inc
inc
sub
jbe
mov
lret
inc
stc
mov
inc
xor
jmp
jle
vmwrite
mov
pop
mov
jmp
push
push
addr16
leave
push
aam
pushf
ret
adc
scas
mov
outsl
in
aas
shll
dec
add
push
sbb
pusha
ret
and
sub
in
in
loope
sub
or
push
add
jp
mov
push
sub
cmp
out
movl
push
add
aad
jns
mov
jnp
ja
inc
outsl
rorb
test
in
dec
mov
add
lods
dec
jg
aam
movsb
lods
push
test
xchg
or
lock
fdivrl
shrl
sub
lret
add
outsb
sbbl
repz
ja
push
push
sahf
and
sub
sub
aad
loope
inc
push
mov
ficompl
roll
outsb
popf
setne
xchg
push
and
in
mov
xor
aas
enter
lods
addr16
or
pop
mov
or
jb
pop
jp
fidivrl
bnd
daa
jp
or
jbe
pop
mov
pop
bound
addr16
adc
je
push
and
fidivl
xchg
pop
sbb
push
das
dec
mov
enter
lahf
cltd
mov
inc
in
movsb
shrl
movsl
popf
or
mov
dec
shrl
repz
sub
adc
fadds
xchg
loop
enter
rorb
test
pop
fdivl
push
imul
jnp
add
fsub
or
xchg
xor
xlat
cmp
scas
popf
mov
jle
mov
lret
dec
rcr
cs
jno
or
add
insl
fisttpl
loope
shrl
jo
call
popa
inc
and
mov
test
lret
mov
out
stos
xchg
out
or
xchg
push
inc
mov
imul
mov
adc
mov
test
add
testb
aad
popa
lods
jge
aaa
and
test
fcompl
jmp
xor
mov
insl
inc
loop
arpl
lret
ja
xchg
popf
xor
imul
pop
xchg
add
jge
int3
mov
push
jae
mov
push
mov
ja
mov
push
inc
fsts
push
jmp
cli
xlat
popf
mov
or
adc
test
jg
sbb
cmp
mov
mov
and
fsubl
in
xor
outsb
fdivrs
sub
sbb
in
and
inc
aaa
mov
xchg
and
and
ljmp
fisubrl
pushf
pusha
adc
inc
icebp
loope
xor
sub
mov
pop
orb
sbb
sub
xchg
adc
mov
mov
sub
xlat
or
out
pop
mov
pop
mov
adc
test
setae
xor
out
xlat
dec
stc
insb
adc
or
stc
clc
dec
bound
adc
stc
into
adcb
dec
sbb
sub
aas
call
push
jbe
dec
push
sahf
movsl
fsts
mov
leave
mov
and
mov
std
pop
push
jns
sbb
in
xor
loop
sub
cwtl
stos
pop
rorl
xchg
mov
fisttpl
int3
inc
imul
inc
int3
pop
sarb
or
push
push
jne
std
in
in
int3
fldenv
fnstcw
xor
jb
dec
jl
shrb
mov
sbbb
mov
dec
or
es
mov
xchg
nop
xchg
dec
cmc
aaa
je
xor
pusha
stos
push
mov
pop
and
inc
sub
mov
fcomip
cmp
push
fdiv
lods
ficomps
sbb
mov
shll
in
stc
fidivs
mov
push
mov
mov
shrl
mov
and
mov
sbb
dec
dec
jl
inc
shrl
jno
pop
std
jnp
push
add
sti
jbe
cmpsl
fwait
decl
std
lcall
sbb
clc
push
out
in
jmp
xor
inc
or
xchg
adc
iret
test
orb
xor
jmp
mov
and
subl
inc
in
adc
les
cmc
fld
pop
pop
enter
testb
sub
push
or
mov
dec
jmp
es
fsubrl
jne
dec
sub
mov
out
movsb
into
nop
lcall
or
pop
mov
ja
add
jbe
mov
pop
jle
inc
pop
mov
in
inc
jae
popa
in
add
mov
fadd
sub
cmp
pop
xchg
popf
jbe
outsl
pop
aad
or
pop
mov
addr16
aad
and
jne
iret
hlt
rcll
test
and
sub
dec
lret
in
dec
jp
add
imul
popf
inc
pop
sub
cmpsb
add
rcll
fisubs
jnp
or
jae
inc
sahf
pushf
out
rcrl
shlb
fidivrl
add
add
jnp
push
test
nop
loope
pop
mov
mov
jne
imul
loope
add
jmp
insl
outsl
out
mov
sti
adc
flds
mov
pop
rolb
and
aas
cli
insb
stos
das
lcall
leave
xor
inc
adc
sub
inc
aad
fdivl
sbb
sbb
es
mov
idivb
arpl
into
and
add
jge
pushf
xchg
push
lds
mov
adc
fcmovnbe
lods
aam
or
dec
push
repnz
in
insl
rolb
lock
mov
push
ds
fcmovu
mov
jne
pop
js
mov
cmpsb
ljmp
ss
sti
cmp
aaa
cmc
daa
es
jg
lock
shrl
xor
mov
mov
outsl
pop
mov
lcall
enter
dec
insb
lods
aas
addl
push
and
divb
push
pop
imul
mov
scas
push
mov
mov
inc
aaa
mov
shll
popf
sbb
cmpsl
adc
add
xchg
shlb
and
lods
dec
mov
and
and
insl
dec
jmp
push
lods
dec
in
adc
and
dec
cs
push
or
lret
add
jecxz
dec
shlb
imul
popf
dec
xchg
inc
sbb
gs
pop
xorl
mov
imul
sub
idivb
lds
xor
mov
pop
or
lea
cltd
jl
js
scas
dec
rcl
testb
inc
push
wrmsr
repnz
mov
hlt
loop
adc
ret
xor
in
pop
cmpb
cmpsl
je
pop
bound
in
sbb
push
in
pop
cmc
shlb
stos
out
mov
inc
fcompl
mov
xor
jb
mov
rorb
push
repz
js
mov
jb
fwait
dec
das
mov
ss
adc
add
add
subb
sub
push
pusha
adc
inc
add
mov
sub
mov
lcall
jecxz
push
cld
js
sbb
jl
xchg
repz
adc
xchg
jecxz
mov
and
stos
pop
jne
mov
add
int3
insb
lcall
or
lock
loopne
lods
sarl
and
cmp
cmp
mov
jmp
jns
pop
mov
inc
ljmp
xor
loopne
xor
orb
cltd
insb
lcall
jae
shld
xchg
mov
popa
pop
jle
cs
xchg
aaa
fldcw
add
dec
lock
add
mov
cmp
loop
test
cmp
push
fcmovu
push
push
aaa
fs
adc
mov
test
or
pushl
fwait
push
push
mov
dec
mov
inc
xchg
sub
adc
ss
mov
out
inc
xchg
mov
loope
shll
mov
xchg
pop
scas
scas
mov
cmp
sub
mov
clc
lods
enter
clc
fistpll
aas
push
stos
fstpt
inc
ljmp
mov
sti
call
and
addr16
in
in
leave
xor
xor
adc
push
sub
inc
aad
fdivl
sbb
sbb
es
mov
push
adc
sub
int
outsb
add
xchg
lds
mov
adc
fcmovnbe
lods
aam
or
dec
push
repnz
in
insl
rolb
lock
xchg
es
popa
jno
cmpsl
add
dec
hlt
pushf
outsb
or
mov
rcr
bound
sub
and
movsb
xor
mov
push
mov
sub
fnsave
lcall
xchg
pop
lock
pusha
dec
and
repz
bound
mov
inc
test
jns
cmp
sub
fdivp
stos
xchg
push
addr16
jmp
sub
addr16
or
add
jmp
sarb
mov
test
insb
and
mov
ds
jecxz
sbb
inc
into
aas
cmpsb
and
popf
mov
push
mov
dec
mov
iret
cmpsl
cli
add
sbb
pop
or
push
jne
inc
lock
addr16
lea
sarl
adc
loopne
dec
xchg
gs
js
int3
leave
ret
sub
in
cwtl
fs
ja
mov
sub
nop
push
out
mov
mov
sahf
mov
dec
dec
call
mov
je
push
adc
lret
sbb
jb
popa
pop
cli
fdivs
dec
sub
leave
out
pop
mov
outsl
sarb
mov
in
ja
ja
mov
jae
sbb
xor
fmull
sbb
adc
repnz
inc
and
cmp
mov
cmp
out
mov
adc
dec
dec
das
fnstenv
or
jbe
xor
scas
loopne
mov
sbb
test
leave
outsl
lods
mov
cli
or
lea
lods
rcrl
push
lea
sub
pop
fcmovnb
and
clc
xor
mov
sahf
pop
aas
sahf
stos
mov
sbb
aas
movlps
pushfw
dec
sar
adc
bnd
pop
gs
xchg
cltd
scas
sub
or
inc
fists
jle
push
ljmp
js
int
out
adc
cltd
xchg
inc
les
shl
sbb
aas
or
imul
lds
jbe
pop
gs
xchg
pop
out
lock
adc
xchg
in
xchg
fwait
cli
jp
outsl
jbe
lods
add
dec
or
mov
hlt
xchg
cmova
aas
cmovne
dec
mov
cmp
arpl
mov
cld
into
int3
dec
xchg
popa
out
adc
mov
jb
fchs
sub
ss
bound
fsts
jmp
enter
pop
and
scas
mov
das
xchg
rolb
scas
or
shl
xchg
insb
add
loope
movsl
xchg
mov
shrl
push
pop
mov
sub
jbe
imul
lods
add
mov
push
add
aad
push
inc
cmp
push
sbb
andb
pop
mov
or
rcl
imul
pop
or
mov
cmp
lcall
gs
push
cmp
lods
shll
sub
and
sbb
add
lods
andb
pop
mov
test
pop
adc
mov
lret
push
inc
sub
fwait
ss
xor
pop
int
test
aas
mov
icebp
ret
cwtl
jmp
popa
mov
in
mov
imul
pop
or
cmp
push
cmpsl
jno
jmp
je
negl
push
mov
lock
sub
mov
mov
lods
mov
mov
call
mov
test
sub
cmpl
pop
inc
dec
jb
loopne
ds
push
and
inc
mov
xorl
pusha
sahf
mov
xor
add
dec
xchg
mov
notl
dec
adc
mov
add
jmp
push
push
mov
outsl
ficoms
adc
cmp
xor
push
lret
sbb
or
jnp
sbb
outsl
or
outsb
inc
cmpsl
std
es
push
icebp
je
aam
xchg
imulb
sbb
insl
loope
adc
shll
cli
mov
rcrl
xchg
adc
cmovp
popa
cltd
pop
xchg
aas
jno
ja
in
mov
popa
xlat
add
aas
inc
xchg
jnp
pushf
movsl
mov
mov
shr
jg
push
outsb
cmp
adc
xor
push
adc
mov
push
add
sbb
mov
mov
inc
in
jmp
pop
sbb
mov
jne
lret
sub
out
push
leave
cmp
jecxz
mov
ficomps
scas
inc
add
mov
inc
clc
insl
pop
cld
cmp
in
fnstenv
pop
push
jns
les
subl
and
bound
call
dec
ds
jbe
mov
clc
and
inc
sub
les
jo
push
fadds
test
enter
cli
dec
rorb
insl
cmc
add
hlt
pop
xor
xchg
lods
mov
in
insb
pop
adc
pop
mov
dec
out
sti
pop
push
test
xchg
repz
sbb
inc
ss
cmp
jmp
addl
shll
in
shrb
jge
fwait
ljmp
sbb
sbb
jo
add
pop
aaa
ret
aad
test
loopne
dec
in
xchg
add
push
pop
ljmp
xor
cmp
loop
add
xor
shll
and
and
jle
push
fs
xchg
aaa
dec
mov
mov
loopne
inc
push
cmp
and
out
popa
push
add
aad
dec
fdiv
notl
push
fsts
mov
mov
cmp
sub
pop
fstpt
pop
in
std
mov
cwtl
dec
mov
pushf
jmp
pop
inc
cld
inc
mov
popf
clc
add
mov
inc
lds
shll
xchg
repz
lock
lahf
jmp
aas
jg
jbe
mov
xchg
out
sbbb
mov
ss
mov
push
add
pop
mov
mov
lret
pop
mov
mov
cmp
sbb
rorb
push
inc
mov
dec
mov
or
insb
ret
inc
jle
rcll
push
mov
mov
push
je
push
sub
adc
pop
test
shr
cli
insl
ds
and
fstpt
sti
dec
repnz
dec
pop
ret
rcrb
mov
int3
pop
mov
test
je
test
std
xor
xchg
sbb
inc
in
ret
xchg
add
mov
sbb
push
xor
js
push
mov
push
out
mov
xchg
mov
cli
pop
fs
xchg
out
sbbb
inc
out
jns
pop
daa
incb
movsl
sti
cmp
sahf
cmp
mov
lret
pop
mov
xchg
iret
cmpsb
sub
sbb
shlb
stos
xchg
cs
fstps
add
push
loope
insl
int
decl
loope
mov
test
in
insb
mov
aas
push
lods
fdivrl
andb
sbb
xchg
mov
pop
adc
data16
or
jecxz
and
test
mov
fidivs
jle
cwtl
ds
mov
and
mov
add
ss
movsl
or
dec
jbe
leave
fwait
push
movsb
jge
mov
xlat
inc
fs
push
cmp
lds
push
leave
rcrb
adc
rol
jns
call
mov
clc
fmulp
cmp
or
dec
lahf
or
addl
sti
push
cmc
xchg
shll
inc
or
xchg
outsb
cmpsb
xchg
stos
daa
mov
add
in
outsl
adc
pop
jp
insl
sbb
shl
js
loopne
mov
loop
repnz
aaa
mov
cmp
xchg
xor
loope
cwtl
push
push
outsl
push
add
add
cltd
push
push
adc
das
inc
xchg
sub
imul
inc
sbb
sub
cmp
daa
shll
mov
stc
sbb
pop
fbstp
pusha
dec
mov
add
mov
sbb
jbe
sbb
test
outsl
je
in
fs
push
dec
mov
cltd
enter
popf
ss
es
out
imul
push
rcrl
bound
aas
shr
mov
sahf
in
mov
add
dec
movsl
mov
gs
repz
inc
outsb
cmp
xlat
pop
xor
adc
mov
testl
insl
cmpsb
xor
jbe
or
jmp
pop
pop
repnz
push
inc
pop
mov
stc
out
add
lret
int
jecxz
or
dec
jle
int
test
pop
push
sbb
jg
adc
xchg
ss
int3
ds
stos
and
fldcw
fildl
data16
data16
inc
sub
xchg
mov
test
jmp
out
sahf
lds
mov
mov
ret
add
ss
mov
push
test
and
enter
xchg
lahf
rcrl
les
orl
out
aam
test
sub
mov
xor
push
daa
and
push
push
ret
es
sub
adc
jle
movsl
or
dec
jbe
leave
fwait
push
movsb
jge
mov
xlat
inc
fs
push
cmp
lds
sbb
repnz
sbb
xor
mov
xor
xchg
je
push
into
stos
leave
iret
mov
pop
add
cmp
clc
xchg
push
add
inc
loopne
jb
jae
sub
add
push
push
aas
repz
cmp
mov
jae
xchg
ret
ficompl
push
sbb
fists
pop
movsb
mov
iret
fisubrl
outsl
and
ret
cwtl
sbb
push
pop
add
lods
and
orl
sbb
mov
mov
jmp
or
out
stc
push
or
pushf
add
cmp
xchg
lea
insl
cmpsb
xor
inc
cmpb
mov
jne
cmp
cmp
pop
popa
sarb
out
repz
push
sti
inc
push
sub
pop
xor
int3
mov
flds
daa
push
xor
push
dec
xor
lahf
stos
push
iret
loop
jmp
jo
mov
aaa
ja
sbb
arpl
or
lods
subb
fcom
mov
dec
cmp
inc
es
push
jl
xchg
mov
jbe
push
imul
aas
sub
cmc
arpl
jmp
mov
lods
gs
loopne
sub
lds
imul
sub
mov
testl
mov
xlat
dec
cmpl
xor
scas
repnz
mov
pop
sub
and
inc
mov
sbb
rorl
adc
pop
cmp
daa
scas
adc
sahf
cmp
mov
mov
movsl
outsl
or
fstp
cmp
inc
mov
fildll
or
push
push
ret
es
sub
adc
jle
movsl
or
dec
jbe
leave
fwait
push
movsb
jge
mov
xlat
inc
fs
push
cmp
lds
dec
insl
inc
dec
xor
mov
xor
imul
pop
scas
pop
mov
dec
jle
adc
mov
out
cmp
mov
in
sti
je
fnstenv
xchg
lret
xor
mov
shll
data16
sub
sub
mov
pop
gs
inc
icebp
lea
insb
imul
xor
ret
imul
cmp
push
dec
or
bts
add
jns
mov
pop
int
jne
out
leave
divl
aam
fimuls
xor
jb
lcall
dec
xlat
enter
cmp
popa
or
aam
sbb
sbb
inc
pushf
stos
in
outsb
sbb
lahf
dec
arpl
push
mov
inc
fdivl
arpl
pop
mov
push
movb
fstps
push
inc
lret
push
xor
push
add
leave
push
out
mov
ret
ljmp
ret
mov
xchg
ss
adc
dec
xor
cmpsb
enter
sub
or
shll
movsb
and
stos
xchg
jbe
dec
sti
fwait
pop
shl
inc
fisttps
ljmp
or
sub
dec
and
aad
sub
push
dec
mov
loope
xchg
mov
ret
push
and
push
fcoml
inc
dec
inc
jno
sbb
and
jae
nop
movsb
and
lea
gs
push
mov
pushf
pop
push
daa
inc
gs
push
arpl
mov
jb
cltd
sub
cmc
jne
adc
xchg
test
and
aaa
add
aad
loopne
mov
js
in
push
add
vmread
xor
stos
xor
push
jp
jae
add
xchg
or
or
cs
aas
inc
push
repz
lods
icebp
cmp
jo
cmp
popf
test
jne
push
push
gs
and
sbb
and
jb
cmp
icebp
sub
jp
adc
push
jmp
sbb
fwait
data16
lock
xor
dec
loopne
andb
in
sub
and
xchg
ljmp
fcompp
int3
dec
jg
test
into
inc
ret
mov
aad
ficoms
outsb
stc
jb
xor
inc
mov
sub
add
lahf
jno
jbe
fs
jmp
mov
mov
lcall
jge
std
sarb
jg
outsl
mov
into
ret
xor
cmpsl
mov
ljmp
aad
and
adc
sub
jmp
adc
sub
dec
rorl
pop
add
xor
xor
shrl
ss
aad
in
add
imul
jl
push
mov
or
notb
pop
sarb
lods
in
icebp
shlb
pop
sub
fs
data16
xchg
xchg
push
movsb
jmp
xor
data16
dec
mov
mov
pop
add
jecxz
jb
add
xor
arpl
sti
test
leave
cmpsl
add
fnclex
push
and
cmp
adc
inc
fisubs
adc
ljmp
lock
in
std
jmp
adc
mov
je
jb
dec
sarl
mov
fisubl
dec
cmpsl
or
mov
cmp
xchg
aam
cwtl
adc
mov
je
jne
xor
or
mov
addl
cmp
add
mov
cmp
ret
sti
fnstsw
xor
subl
fnstenv
pop
push
jns
les
subl
xor
lods
mov
outsl
je
loopne
gs
outsl
jo
pushf
leave
and
push
enter
sbb
sbb
fiaddl
push
popf
daa
lcall
and
out
cli
mov
lods
mov
pop
out
xor
xchg
inc
in
mov
dec
lods
aam
pop
push
jo
xchg
xor
mov
cs
es
arpl
xchg
fbld
adc
jo
insl
mov
test
jp
sub
scas
andb
in
sub
mov
scas
mov
or
ret
pop
aaa
call
push
jle
test
cmp
jg
or
lret
outsb
imul
test
lea
leave
es
test
mulb
push
inc
inc
jno
repz
lahf
stos
add
and
and
mov
das
repnz
sub
lds
imul
xchg
std
cltd
test
mov
outsl
leave
push
mov
dec
lea
into
cli
aad
adc
into
into
pop
rcrb
sbb
sub
call
lock
inc
stos
scas
lock
mov
push
shlb
xchg
adc
and
xor
mov
adcl
insl
stc
std
jp
out
aam
sbb
rdpmc
imul
aad
sbb
xchg
jecxz
or
mov
push
daa
sub
inc
jmp
outsl
push
data16
stos
adc
das
inc
xchg
sub
ljmp
out
xchg
daa
xor
ret
sar
stos
in
out
pop
movsb
sbb
nop
std
insl
cmp
mov
xor
push
jno
jmp
mov
adc
pop
or
push
or
jnp
cld
ss
bound
movsl
es
mov
pop
aaa
mull
mov
add
or
jg
popa
call
cmp
icebp
dec
xchg
in
stc
adc
dec
aad
xor
push
mov
cld
adc
push
ljmp
mov
lds
iret
mov
aad
mov
mov
cld
out
mov
fdivl
mov
fwait
add
fbstp
jp
pop
inc
sub
adc
in
mov
fistpll
dec
jecxz
imul
rcll
mov
test
pop
outsb
mov
fsubl
mov
cmc
lods
inc
mov
test
rcr
and
sub
cmp
or
dec
aad
or
pop
add
mov
lods
fisubs
jmp
sub
cmp
leave
sub
popf
xchg
xcrypt-cbc
cmpsl
adc
test
insl
sbb
adc
imul
or
push
pop
xlat
xchg
mov
cmp
jle
adc
sti
hlt
dec
xor
jl
xor
mov
push
dec
movsl
push
cmp
mov
pusha
sbb
imul
insl
pop
add
pop
test
jo
ljmp
pop
mov
mov
push
push
imul
push
nop
rcrl
pop
imul
jle
rcr
or
les
insb
cmp
cli
cmp
pop
xor
cmp
lock
push
icebp
mov
fldl
stc
cwtl
imul
clc
pop
jecxz
int3
gs
jp
aad
adc
shll
jb
sbb
push
jae
xlat
sbb
sub
jne
int3
movsl
lea
adc
enter
aas
push
loope
test
ficompl
int
and
cmp
movb
outsl
jecxz
cmp
mov
ret
pushf
into
pop
dec
cmpsb
add
test
mov
stos
into
test
push
cmp
aas
push
xchg
xorl
dec
cmp
xorb
dec
lock
orl
divb
cmp
scas
jge
adcl
xor
add
sbb
xchg
pop
push
jecxz
push
add
pop
mov
jmp
cmp
in
gs
add
add
das
cmp
lret
jno
pusha
mov
lods
inc
popa
out
clc
aaa
jg
sub
insb
test
aam
aaa
cli
addr16
test
jl
aas
mov
mov
fidivrs
sbb
loope
xchg
dec
mov
js
jmp
enter
out
mov
pop
testl
mov
mov
cltd
cmc
or
out
xor
jo
outsl
jo
lret
push
sbb
cmp
call
adc
push
lcall
sbb
cmc
jecxz
xchg
daa
js
push
sub
fstpt
jbe
iret
lcall
enter
inc
add
in
in
xor
int3
ss
sbb
sbb
sarl
push
outsl
push
pminub
dec
jmp
adc
mov
push
lods
fistl
repnz
jo
mov
add
xchg
dec
pop
push
and
lock
fwait
cmp
push
adc
and
shll
je
js
or
imul
sbbl
ud2
dec
xchg
enter
insb
test
inc
mov
lahf
or
jl
mov
xor
add
lcall
and
jp
out
sbb
xchg
decl
shll
pop
fucompp
xchg
pop
jbe
jg
incb
jae
pop
repz
call
in
out
jg
or
mov
add
xchg
sub
pusha
jne
fadds
inc
mov
xchg
out
mov
pop
pushf
sub
jle
inc
lds
inc
mov
scas
repz
cwtl
and
inc
pusha
pop
jle
mov
repz
fs
add
es
icebp
lahf
xor
gs
andl
sbb
sub
and
mov
mov
xchg
and
outsl
sbb
mov
or
jl
out
jg
add
cmp
out
in
sub
out
xor
cmp
mov
adc
pop
pop
fisubrs
jnp
push
ffreep
mov
xchg
inc
cmp
sahf
stos
int
popf
xchg
stc
adc
fisttpl
push
inc
pop
dec
push
push
inc
mov
mov
leave
sbb
imul
dec
sbb
je
fists
sub
sbb
repz
sub
mov
pop
rcr
mov
push
cwtl
push
sarl
subb
xchg
stc
popa
out
stc
int
jecxz
ficoms
bound
test
adc
adc
xchg
add
xor
mov
or
sub
cmp
mov
sub
dec
lea
jmp
aam
cwtl
loop
mov
mov
ret
adc
push
inc
jle
inc
xor
jnp
sub
adc
inc
sbb
test
xlat
rcl
enter
rcll
hlt
jne
pop
xor
xchg
xlat
hlt
xor
rcl
cltd
fists
in
sbb
test
lret
mov
sub
bound
cltd
mov
inc
lcall
pusha
push
movsl
sti
jae
hlt
outsl
cmp
and
adc
xchg
test
icebp
fdivl
repz
pop
stos
fwait
push
mov
popa
and
outsl
push
mov
pop
mov
pop
mov
int
dec
push
data16
fnstenv
loop
mov
sahf
shrb
pop
push
aam
mov
cmpsb
jbe
mov
pop
inc
ljmp
je
jns
cwtl
jbe
jmp
xor
mov
out
push
aam
ror
pop
ja
xor
scas
or
or
addr16
dec
xchg
in
movsl
lods
adc
pop
and
pop
mov
sbbl
sbb
lods
repnz
mov
xchg
sbb
or
sahf
dec
sub
cwtl
pop
push
es
in
xchg
addr16
dec
test
dec
push
sbb
xor
sbb
xchg
dec
sbb
in
mov
jmp
fiadds
push
sub
sti
xchg
xor
push
leave
xchg
out
orb
outsb
imul
ret
fstpl
addb
mov
jae
mov
sbbb
cmp
jl
addl
fcoml
int3
jb
sub
adc
mov
sarl
fistpll
cwtl
jmp
movsl
pushf
mov
setne
shll
bndldx
xchg
mov
loopne
inc
cmp
lea
push
inc
shlb
cs
frstor
xor
and
bound
ret
gs
movl
dec
cld
mov
xchg
sub
sahf
xchg
fildl
adc
test
dec
lahf
stc
out
xor
adc
test
or
sub
inc
cmp
xchg
mov
sbb
adc
add
inc
in
dec
ljmp
nop
push
loope
push
std
add
lods
cmp
in
fdivl
mov
mov
daa
loopne
loop
inc
repnz
stc
push
loop
and
in
add
idiv
aam
cmp
jg
rclb
daa
and
addr16
imul
dec
aaa
push
aas
push
sub
mov
pop
cmp
pop
pop
lcall
shlb
rcrl
mov
rcrb
dec
cld
mov
hlt
imul
sub
sub
jbe
xor
mov
lods
cmpb
sbb
cmp
lret
js
push
push
add
fisubs
loope
sbb
cmpl
jmp
popf
pop
cld
jge
test
pop
pop
daa
test
cmp
or
sub
lcall
mov
ffreep
std
jge
inc
push
jae
or
subb
inc
cmp
sbbl
ret
sub
or
push
sub
sub
bound
aas
inc
cmp
pop
fildl
sub
stc
daa
add
int
xlat
inc
xor
movsb
test
pop
std
dec
and
das
xor
and
movsl
sarl
loop
fstl
fmuls
fyl2x
adc
jecxz
and
pop
mov
mov
sbb
xor
sub
mov
add
shlb
add
jbe
cmp
orl
push
dec
cli
mov
xchg
les
push
inc
adcl
and
loope
fistps
repz
and
adc
cwtl
lods
push
or
push
cmpb
pop
loope
out
rcr
xor
loop
dec
mov
cld
cld
xchg
adc
sar
mov
jns
cwtl
in
fidivrl
loop
clc
mov
sub
in
inc
out
sub
scas
adc
cwtl
jns
sbb
add
sub
das
mov
nop
mov
mov
lret
adc
xor
insb
push
sahf
int3
push
cltd
stc
cli
mov
sbb
adc
pushf
in
push
push
lret
cmp
dec
xor
push
mov
xchg
testb
out
cmp
mov
aaa
insl
lret
dec
addr16
repz
fdivrs
fwait
and
loopne
in
mov
mov
or
dec
add
mov
pop
add
scas
enter
xchg
and
jg
inc
sarb
les
mov
inc
jo
xchg
pop
mov
and
cmp
out
out
pop
sub
cli
mov
aam
movsb
or
xchg
jae
push
dec
adc
mov
jno
ret
cmpsb
stos
notl
mov
movsl
leave
cmp
xchg
and
sbb
jne
pusha
cld
imul
push
faddp
xchg
mov
daa
or
push
and
xchg
call
int3
call
xor
xor
gs
hlt
fsts
push
jae
insb
push
movsl
dec
push
mov
lahf
and
mov
jle
test
lret
out
mov
out
sti
in
sub
aam
lret
aad
mov
sarb
and
inc
push
add
mov
push
and
loop
int3
mov
sub
repnz
add
and
or
mov
mov
test
movsb
inc
test
fmuls
mov
add
cli
ds
ret
scas
out
lea
ljmp
sbb
arpl
pop
jmp
inc
jo
inc
imul
mov
push
cmpsl
stos
mov
xchg
mov
addr16
leave
mov
repnz
sub
lods
rolb
imul
insb
aam
in
sahf
mov
jnp
or
sub
xor
sub
push
in
xchg
xchg
xchg
inc
xchg
sub
loope
xor
xlat
enter
loope
jmp
rclb
add
or
jmp
cmp
xchg
xor
loop
cmp
push
mov
call
xor
test
lret
cmp
jb
cmpsl
or
adc
adc
mov
fwait
sbb
xor
test
test
add
push
jae
sbb
aaa
lret
dec
and
sub
int3
push
bswap
mov
bound
sub
sub
inc
push
call
push
inc
adc
in
or
mov
int
repnz
mov
call
daa
pop
enter
stc
jmp
jge
outsl
mov
leave
pop
cmp
mov
sahf
insb
hlt
mov
insl
push
lret
xchg
sarl
iret
fnstenv
js
in
xchg
adc
bnd
fisubrl
lds
fisttps
popf
addr16
pop
frstor
jae
hlt
js
sub
in
sub
pusha
fildll
cltd
iret
sarb
mov
andl
pusha
sub
dec
fsubr
add
ljmp
fisubrl
dec
scas
fnsetpm(287
or
or
or
int
push
dec
mov
ss
into
push
mov
cs
jb
popf
jecxz
test
pop
push
out
into
dec
mov
scas
and
pop
add
jp
cmpsb
jnp
lcall
test
mov
movl
push
std
popf
iret
xor
in
mov
sub
arpl
loop
addr16
je
mov
dec
cmc
test
aaa
fmuls
insb
push
xchg
outsl
jl
mov
ljmp
xchg
and
fnstcw
cld
jle
pop
imul
in
stc
jge
mov
out
mov
lods
mov
pop
sub
bswap
mov
shll
push
repz
mov
and
hlt
sti
loope
sub
xor
xor
sbb
and
lahf
xor
incb
mov
leave
push
mov
sub
ja
add
xchg
jmp
sbb
dec
das
mov
imul
aaa
jmp
xor
cmp
push
or
cmp
rorb
shl
decb
dec
insb
cmp
test
xor
in
jns
mov
mov
movl
xchg
divl
ss
aaa
mov
mov
scas
adc
subb
sbb
fnstsw
stos
dec
iret
or
clc
inc
push
mov
ljmp
xchg
push
xchg
push
cs
loope
lahf
aaa
bound
and
cmp
add
test
out
add
ss
mov
inc
xchg
mov
mov
sti
out
dec
mov
jge
mov
mov
or
jae
cmp
mov
add
repz
mov
sbb
lock
xchg
lcall
je
jno
insb
dec
jbe
mov
mov
mov
inc
adc
out
movsl
pop
test
xchg
es
mov
loope
int
xchg
imul
or
pop
sub
xchg
lahf
cmp
mov
or
lret
adc
testb
sub
cmp
sub
scas
pop
cli
inc
push
sub
es
dec
daa
ficomps
mov
inc
lds
dec
inc
out
and
add
inc
jno
fcomi
jae
enter
cmp
aas
jg
jne
xchg
inc
and
mov
fldcw
aam
test
pop
mov
pop
outsb
js
repnz
movsb
dec
stos
gs
mov
pop
dec
ljmp
jp
sub
push
jp
or
add
sbbl
cld
lret
pop
in
adcl
std
test
bnd
mov
xor
mov
arpl
mov
xorl
xchg
ret
es
jae
xor
xchg
or
lock
filds
and
ja
imul
sbb
xchg
add
jbe
fistpl
jge
push
stos
test
sub
dec
mov
lods
pop
rclb
add
push
clc
ljmp
inc
xchg
imul
cmp
fnstenv
add
jmp
rcll
dec
push
jmp
jl
jg
cmp
dec
lret
pop
add
mov
out
stos
daa
loop
jbe
mov
sbb
rcl
push
scas
push
xchg
mov
fistl
adc
jnp
pop
scas
imul
rclb
int3
dec
cmp
ljmp
data16
and
outsl
leave
xor
or
mov
test
sbb
push
and
je
cmp
pop
es
or
sbb
push
mov
imul
jl
xor
jl
into
sub
cltd
xor
sbb
es
push
mov
repz
sbb
in
mov
sbb
sub
sbb
inc
jnp
aam
and
lea
mov
push
fidivl
xchg
xchg
and
cmp
inc
test
or
into
push
mov
push
add
adc
out
xchg
or
insb
mov
ret
lretw
test
mov
mov
lret
call
push
ds
outsb
dec
fnstsw
adc
insb
andl
mov
jne
pop
xchg
cmp
add
mov
test
sub
in
or
sbb
cmc
in
or
cs
pop
jnp
sarb
adc
fbstp
mov
cli
adc
cmpsl
mov
xor
push
mov
sbb
imul
xchg
scas
addr16
mov
mov
mov
fst
icebp
mov
mov
jbe
test
inc
mov
cmp
fwait
shl
movsb
rcll
mov
xor
adcb
cltd
inc
add
or
cmp
inc
into
xor
incl
in
mov
js
jno
rcl
pop
xor
xor
adc
bound
lods
gs
bound
sbb
lret
sahf
inc
punpckhbw
loopne
out
inc
mov
clc
adc
dec
pusha
inc
div
insl
into
clc
add
adc
nop
mov
inc
aas
mov
into
pop
push
lret
mov
andl
out
jb
pop
xor
inc
ljmp
mov
out
insl
ficoml
or
xchg
loopne
dec
add
push
add
inc
push
into
or
mov
dec
aaa
mov
mov
ljmp
pop
sbb
sub
fimull
xor
or
fcompl
in
icebp
push
mov
sub
inc
cltd
inc
stos
xor
movsl
sbb
ret
jle
cmc
push
out
enter
mov
out
insl
adcb
pop
ud1
inc
push
jb
xor
hlt
icebp
mov
mov
push
push
enter
aas
dec
mov
es
mov
cwtl
sbbb
outsb
xor
ror
cmp
pushf
fildl
xor
jne
adc
repnz
aam
cltd
jle
sub
mov
dec
insl
fmulp
addps
or
dec
fsubr
fdivs
add
jae
xchg
sbb
sahf
testb
sub
jns
inc
js
add
push
push
push
xor
insl
add
in
push
rdmsr
lret
daa
pushaw
mov
or
dec
out
xchg
fistpl
fwait
mov
subb
mov
mov
pop
push
pop
push
mov
lock
lea
cmpsl
out
insl
repz
xchg
mov
mov
sub
and
or
into
push
cmp
rolb
insl
inc
lahf
loope
outsl
pushf
bswap
ja
mov
xor
bound
test
test
mov
out
stos
adc
or
xchg
insl
jp
lret
pop
push
fstps
imul
push
push
rcl
aam
xor
mov
mov
xchg
lret
les
mov
add
xchg
data16
fldl2t
xor
clc
lock
xchg
xlat
or
daa
test
aaa
cmp
sti
mov
sahf
ret
cwtl
push
cmp
xor
ret
xlat
push
inc
or
add
cltd
mov
fwait
push
fs
push
mov
mov
daa
pusha
in
push
sub
aaa
inc
dec
xor
ror
add
cmp
sysenter
adc
ffreep
dec
sahf
dec
push
cmpb
cmpsl
jae
loopne
outsl
lods
jp
dec
stc
pop
cmp
sbb
inc
xor
out
mov
push
pop
into
arpl
loopne
outsb
out
fdiv
pop
mov
dec
mov
jp
mov
mov
mov
xchg
bound
dec
jl
mov
leave
incb
push
cmp
rolb
add
pop
lods
push
addr16
sbb
mov
xlat
out
gs
icebp
add
dec
mov
and
fnsave
std
cltd
fucomip
lock
adc
dec
pushf
push
xorb
stos
pop
shll
cmp
movsl
add
fwait
or
fwait
std
mov
push
jne
aaa
shl
push
pop
and
mov
sub
fisttps
sbb
sbb
pusha
pop
or
subb
ret
js
sahf
insb
add
icebp
xchg
xchg
loope
xor
mov
pop
pushf
mov
pop
push
jl
dec
js
mov
lcall
shr
xor
lret
sbb
or
xor
mov
inc
push
jae
cmp
ljmp
lcall
imul
dec
add
mov
loop
into
out
les
sti
cmp
push
xor
iret
jns
stc
adc
in
leave
push
in
push
xor
ss
inc
out
lret
sti
mov
and
lds
push
outsl
pusha
push
ss
leave
into
gs
repz
les
repz
inc
leave
shl
aad
addr16
sarb
mov
mov
icebp
lahf
mov
lret
stc
or
jbe
sub
jbe
fldenv
cmp
xor
push
test
cs
out
xchg
nop
sub
fxam
ds
dec
cmp
jmp
lea
cmp
into
in
inc
xor
outsb
movsl
add
notb
negl
lods
jmp
xor
shlb
int3
daa
jge
sbb
out
ja
rorl
jns
fnstcw
popf
es
mov
frstor
lods
imul
int
cwtl
movsl
cmpsb
les
lods
mov
push
sbb
hlt
jne
add
sbb
jge
push
subl
pushf
jae
push
push
mov
jg
leave
data16
xchg
mov
call
into
jo
call
cmp
fildl
rolb
addr16
dec
loop
mov
cmp
push
mulb
loop
jne
bound
dec
bound
fadds
mov
sub
push
push
sbb
inc
fwait
pop
in
insl
into
sub
call
jle
jo
dec
mov
ret
in
dec
gs
push
leave
ja
dec
stos
mov
sbb
loopne
or
fimuls
sahf
mov
andl
test
xchg
test
imul
adc
mov
jg
mov
pop
out
xor
add
jecxz
cli
add
call
das
jecxz
pop
mov
jmp
lds
pushf
mov
mov
pusha
fwait
aad
cmpsl
int3
cltd
add
pop
imul
fdivl
loope
stos
adc
incl
es
and
dec
xor
mov
add
pop
out
sbb
cmp
inc
jge
hlt
push
stos
leave
push
jmp
test
mov
mov
and
adc
inc
rcr
dec
sbb
das
lcall
iret
cmpl
mov
jmp
outsl
das
mov
adc
jle
rcrl
scas
mov
int
xor
mov
add
mov
jmp
out
pop
movsb
push
je
sbb
repz
cltd
sbb
mov
and
mov
data16
dec
repz
or
sub
cmp
aam
into
dec
sbb
xor
ss
xor
xlat
mov
adc
adc
loopne
xchg
mov
ss
hlt
mov
xchg
idiv
cli
jle
xor
and
popl
jmp
icebp
or
adc
and
ret
jo
fwait
cmp
out
loope
int3
icebp
dec
xor
inc
mov
imul
out
jecxz
xlat
mov
and
dec
push
xchg
repz
test
xchg
call
push
andl
scas
stos
and
cld
pop
lods
mov
mov
inc
xchg
add
daa
in
xchg
dec
or
mov
movsb
dec
jbe
or
jmp
popf
cmp
mov
fmull
mov
push
scas
in
test
xchg
inc
dec
mov
mov
jecxz
inc
xor
outsb
sti
dec
add
ja
cmp
push
mov
jb
out
outsl
ret
xchg
sub
and
xor
pop
jns
iret
lods
dec
scas
mov
cmp
pop
or
sub
in
loop
lret
loopne
dec
mov
sub
dec
mov
repz
xchg
loope
pop
xor
cmp
and
push
in
lock
lcall
push
fmuls
stos
outsb
das
sbb
push
xchg
cmpb
mov
mov
iret
mov
ljmp
faddp
mov
and
add
cld
insb
les
and
stos
mov
cmpsl
jecxz
mov
cli
mov
in
inc
rcrl
movsl
cli
dec
push
pop
mov
xlat
scas
and
xchg
jmp
cli
or
add
add
mov
arpl
jl
js
sub
in
or
sbb
shrl
sahf
jecxz
mov
cmp
cmpsl
mov
cwtl
aad
incb
shlb
in
scas
mov
outsb
sbb
add
push
jl
or
shll
mov
xor
shll
movsb
mull
mov
push
cmp
jnp
in
or
out
mov
iret
stos
sahf
das
dec
out
push
sub
mov
insl
adc
movsb
jp
xchg
sub
in
pop
jmp
cmp
mov
repz
cmpsl
or
or
aaa
or
jmp
xor
xlat
sub
fdivl
pop
xchg
clc
bound
clc
xor
clc
lods
cmp
cmp
lahf
mov
sub
in
inc
pop
repnz
xorb
popa
dec
adc
inc
and
rorb
roll
popa
sarb
pushf
dec
mov
cwtl
ficoms
pop
xor
std
es
pop
out
inc
mov
or
shlb
xlat
test
or
xor
jle,pn
in
lock
lret
xchg
or
sahf
ja
movsb
ljmp
xchg
test
test
add
mov
cwtl
add
jge
out
lahf
pop
xchg
cmc
sbb
adc
nop
cli
leave
dec
mov
addr16
insl
xor
idivb
aam
xchg
mov
loopne
out
ret
lahf
add
popa
lea
xor
pop
inc
adc
pusha
cli
out
das
lods
jp
jp
mov
ljmp
or
inc
jmp
movsl
add
negb
lods
adc
mov
jmp
xorl
inc
daa
mov
lods
and
mov
imul
jbe
fs
sbb
jecxz
insb
cltd
add
or
sti
push
jp
fldenv
roll
aas
jecxz
loope
js
mov
imul
mov
stc
mov
mov
addb
out
stos
jecxz
aas
loope
fs
cltd
lahf
jo
lahf
movsl
pop
or
jbe
cld
outsl
jmp
and
mov
push
mov
mov
divl
push
xchg
pop
inc
stos
mov
add
gs
popf
in
hlt
test
xor
jmp
mov
adc
dec
mov
inc
enter
mov
inc
adc
mov
xlat
jp
sahf
inc
lahf
call
fimuls
sbb
repnz
jno
lret
and
mov
pop
bound
fcomi
push
jle
test
scas
jecxz
xor
sub
andl
and
pop
pop
xchg
notb
dec
inc
cmc
pop
push
daa
xchg
aam
pop
jle
mov
add
andb
bound
out
call
sbb
sbb
xor
and
push
sarl
imul
or
rorb
mov
outsl
sbb
out
push
out
adcb
mov
cli
cli
inc
mov
mov
jno
adc
fnsave
std
adc
push
std
mov
push
mov
sbb
pop
sti
das
out
lret
mov
add
int
mov
cmpsb
xchg
mov
mov
adc
nop
xchg
add
or
push
pop
repz
pop
scas
jge
fs
inc
shl
gs
sarb
gs
rcrb
dec
xchg
sub
xchg
ficompl
out
cmp
sub
insl
sahf
stc
mov
mov
subb
mov
mov
and
sub
test
and
lods
push
mov
out
je
xor
nop
das
shll
scas
nop
jb
mov
in
aaa
mov
adc
movsl
push
adc
lcall
ja
and
cmpsl
xchg
in
sub
mov
sarb
movsl
jle
jle
xor
subb
push
push
pop
sub
lret
xor
fwait
aas
filds
fcompl
leave
jbe
lea
jg
xor
pop
test
std
or
jp
lcall
add
lods
lods
imul
fisttpl
push
and
mov
fists
data16
cld
xchg
push
sti
xchg
sub
cltd
adc
cmc
xchg
and
mov
push
scas
ds
lods
sub
ja
dec
lcall
adc
imul
rorb
outsb
mov
sbbb
scas
in
repnz
js
lds
xchg
aas
or
mov
mov
sahf
jnp
or
add
nop
repnz
test
cld
into
adc
adc
xchg
ds
mov
jbe
insl
fdivrl
mov
lahf
inc
sub
adc
xchg
lret
cs
adc
movsb
push
xchg
push
fwait
leave
imull
mov
inc
shrb
scas
int
xchg
inc
pop
fcompl
aam
je
xor
insb
pop
movsl
test
jo
fsts
dec
mov
or
dec
decb
aam
push
inc
sub
sbb
ss
rolb
insl
inc
lahf
loope
push
movsl
in
dec
jl
jo
cmpsl
push
jne
cmp
xchg
in
imul
and
sub
lcall
lods
in
mov
cwtl
cmp
xor
rorb
cltd
fwait
sub
xor
add
xchg
negl
cmp
pushf
adc
lea
in
sbb
and
mov
mov
or
int
faddl
mov
jge
or
insl
pop
push
pop
call
inc
inc
jg
ja
lret
or
into
cs
xor
add
mov
iret
cwtl
mov
insb
xchg
test
sub
mov
mov
leave
into
mov
xchg
inc
imul
mov
jmp
mov
orl
fucom
sbb
gs
jnp
jle
lods
sarb
std
les
sub
push
or
pop
js
or
icebp
leave
lahf
enter
push
push
fmuls
adc
push
cmc
lahf
shrb
xlat
clc
lret
mov
mov
bswap
stc
jecxz
xor
lock
fistl
ret
stos
call
adc
push
aam
aam
jb
jg
cmp
add
aas
cmp
dec
mov
js
ret
sbb
ds
inc
dec
or
ds
test
push
test
xor
jle
stos
int
pop
xorl
lcall
shl
cmc
andb
hlt
adc
and
xor
pop
jl
leave
xlat
test
xlat
adc
sub
mov
xlat
add
xchg
push
out
lods
push
dec
xchg
jmp
and
das
movsb
jle
and
cs
aad
imul
dec
js
fistps
inc
inc
cli
mov
xchg
xor
leave
or
xor
sbb
subl
cld
out
jo
xchg
jmp
in
loop
and
cmpsl
ds
push
out
stc
sub
adc
pop
jl
or
mov
js
mov
push
jae
jns
or
js
mov
fildll
aas
mov
loopne
jbe
and
mov
imul
adc
ret
mov
outsb
pushf
out
push
sbb
and
shl
pop
flds
stc
sub
dec
xchg
add
mov
dec
sub
dec
add
push
sbb
push
in
fiaddl
inc
jne
and
dec
sub
cmp
int3
xor
sbb
pusha
xor
adc
mov
loope
cmpsb
loopne
aam
in
subb
and
adcb
xor
push
or
adc
inc
mov
or
fldt
and
mov
xchg
in
inc
mov
jae
pop
fimuls
popa
scas
test
hlt
push
jo
rorb
sbb
dec
xor
adc
add
sahf
aam
push
ror
movsl
repnz
xchg
mov
dec
fdivs
cmc
int3
das
outsb
jae
jmp
outsb
fninit
or
les
in
and
fimuls
cmc
leave
sbb
xor
cmpb
push
add
xlat
xchg
imul
loopne
push
mov
and
cmpb
clc
dec
jo
into
stos
xchg
mov
jo
ds
sub
sbb
inc
and
xchg
mov
push
dec
mov
inc
testb
daa
and
push
mov
add
and
mov
loop
fwait
iret
xor
outsl
pop
inc
lods
jmp
notb
inc
jne
in
lahf
pop
adc
in
test
push
xor
test
repnz
int
lahf
shr
arpl
push
fmull
xor
adc
repz
push
cmp
das
lret
dec
scas
jp
mov
sbb
lret
mov
xor
pushf
jmp
adc
dec
xchg
lret
lcall
mov
mov
ss
push
jge
iret
ret
pusha
dec
ret
mov
and
idivb
jae
mov
lds
fcomps
and
cltd
mov
scas
cltd
inc
pop
fcmovnbe
mov
aaa
mov
push
aas
out
mov
lcall
pop
dec
pop
js
test
mov
ret
cmpsb
adc
jne
dec
lret
ror
fstl
movsb
in
fcmovnb
and
call
jg
add
sub
mov
nop
mov
sub
push
push
push
inc
push
dec
push
ret
xchg
pop
xchg
cmpsl
call
xor
sub
xlat
or
fldenv
repnz
movsl
mov
mov
jp
jns
push
push
fcoms
adc
pushl
dec
ljmp
cld
data16
inc
loopne
notb
xchg
std
pop
lahf
dec
int
mov
inc
inc
xchg
mov
cltd
pop
jb
and
or
paddd
in
sub
dec
push
xlat
jl
fldcw
clc
pop
aam
pop
jecxz
stos
pop
pop
sti
lea
jge
push
sbb
push
das
xlat
or
mov
cmp
cmp
enter
jle
sbb
aam
add
xor
inc
add
rcpps
fs
inc
adc
scas
jno
mov
adc
shrl
add
jg
jae
push
mov
pushf
out
fisubrl
inc
stos
xchg
and
aaa
mov
int3
sbb
pop
push
mov
add
sub
stc
or
jmp
or
mov
or
ljmp
dec
cmp
test
adcl
nop
or
bound
push
dec
in
mov
lods
xchg
or
les
cmpb
arpl
jbe
fistpl
xor
fcom
lret
sti
mov
in
mov
sbb
pushf
push
mov
test
jecxz
popa
push
out
in
push
jl
and
mov
call
inc
arpl
dec
push
xchg
lods
inc
sub
inc
ror
hlt
lods
jl
xlat
jmp
mov
lahf
data16
stos
cmp
mov
mov
pslld
cmpsb
jg
jnp
orl
push
sahf
test
cmp
adc
or
mov
lods
jne
mov
ss
mov
add
ret
or
call
arpl
test
es
repnz
xor
inc
orb
sub
xlat
scas
fcompl
cmp
pop
out
mov
loopw
cmpsb
and
sub
add
jno
pushf
aaa
mov
test
pop
cmp
mov
pop
push
in
aam
sbb
inc
sbb
divl
mov
stc
cld
pop
inc
xor
pop
and
dec
jo
sbb
lock
pop
dec
pop
jmp
pop
or
jbe
dec
and
divb
sub
sub
push
je
ror
push
pop
ret
add
mov
push
xor
or
xor
fnsave
inc
pop
loopne
in
je
and
xchg
or
mov
in
sbb
mov
scas
mov
mov
pop
outsl
xchg
ss
or
aaa
lock
xchg
jns
dec
cmp
add
add
xlat
lds
jmp
jmp
xlat
or
rcrb
test
adc
mov
cld
mov
mov
dec
call
mov
mov
xchg
and
jbe
xchg
in
push
xchg
jae
std
adc
shll
dec
push
stos
push
mov
jns
xchg
repz
pusha
xor
jg
cmc
scas
ret
rol
dec
xchg
push
popa
or
jecxz
repz
sbb
loope
push
sahf
inc
pop
cld
imul
pop
stos
jmp
test
loope
fldenv
bound
xchg
cmp
jmp
pushf
mov
stc
dec
out
mull
call
xor
cmpb
xor
mov
jmp
sbb
inc
mov
sbb
or
xchg
aam
ret
loope
mov
mov
jo
mov
sbb
xor
inc
cwtl
jmp
lret
pop
out
pop
fisubrl
jle
sbb
aas
mov
repnz
cli
js
and
sbbb
stos
fs
push
pop
mov
pop
inc
lock
mov
shr
xchg
mov
nop
nop
into
jbe
adc
xor
mov
adc
xchg
loop
lea
adc
sbb
int
add
mov
push
in
push
imul
das
mov
aas
mov
stos
xchg
inc
mov
cmc
xchg
stos
jno
fs
pusha
xchg
and
add
or
xor
jnp
cmp
mov
jo
jg
out
outsl
fsubs
and
movsl
aad
cmpsb
add
out
jge
mov
pop
xchg
scas
sub
xchg
sbb
int3
xchg
mov
sar
sbb
mov
cmpsb
ja
inc
addr16
mov
fnsave
and
mov
jmp
int3
push
shlb
sti
cli
lahf
popf
ret
lcall
and
ret
stos
jns
cli
adc
pop
popf
push
nop
sub
jo
imul
mov
leave
gs
mov
inc
xchg
cli
xor
addb
adc
fisubrs
mov
lods
jbe
cmp
xor
xchg
popa
outsb
mov
repz
test
adc
loopne
and
fnstenv
call
pop
push
lea
out
loope
pusha
fdivrp
dec
stos
or
mov
aas
outsl
cld
adc
push
sub
sbb
jne
cld
outsb
jb
cmc
shl
arpl
adc
adc
or
loopne
mov
pop
or
mov
or
sbb
test
shlb
stc
subb
lahf
sub
data16
scas
jle
dec
mov
ljmp
stos
stos
repz
and
jo
rcr
xor
in
adc
push
pop
das
push
clc
jl
loopne
mov
and
fs
sbb
ss
xor
mov
pop
repnz
jbe
jo
xchg
mov
xorb
popf
mov
dec
scas
aam
pop
mov
sub
adc
pop
ret
inc
sti
movsb
push
das
std
repnz
test
add
cmp
mov
fstpl
pushf
adc
out
inc
sbb
xor
push
idivl
jmp
data16
jo
fcmove
inc
sub
jecxz
in
fwait
and
pushf
adc
and
sub
cli
mov
cmp
cmp
sub
in
popf
and
cs
outsl
jno,pt
sbbl
jg
cmpsl
lret
xor
test
xchg
mov
scas
cmp
push
push
scas
stc
lods
int3
xchg
jo
jmp
sub
sbb
sub
orl
mov
jmp
iret
gs
push
or
xchg
sub
js
cmp
jo
jae
andl
clc
inc
imul
xor
in
xlat
mov
xchg
xchg
sub
fbstp
adc
stos
xor
inc
mov
imul
cld
leave
icebp
inc
bound
inc
inc
add
ret
gs
xchg
mov
int3
or
pop
jp
jo
xlat
mov
rcr
cmp
inc
and
or
paddd
push
mov
loopne
mov
ja
jmp
pushf
int3
data16
sub
add
fsubrs
addr16
or
fcoms
jl
mov
pop
cli
lds
mov
push
fistpll
into
pop
out
jp
adc
and
push
add
adc
push
xor
and
jns
cwtl
or
cmpl
repnz
daa
fimuls
pop
es
pushl
mov
sti
imul
push
xchg
iret
outsl
or
repz
push
addr16
add
cmp
into
in
stos
hlt
inc
ljmp
decl
xchg
mov
adc
pusha
xchg
sbb
cmp
jne
xchg
rcl
jne
dec
push
mov
sbb
and
jecxz
push
std
xchg
fists
mov
sbb
xchg
gs
and
sub
sbb
cmp
aad
imul
or
jmp
cmpsl
js
cmpl
add
pushf
pop
movsb
push
mov
test
je
repnz
fnsetpm(287
rorb
mov
adc
and
xor
test
pop
inc
aam
xchg
push
jns
sbbl
dec
ss
fisttpl
sbb
data16
lret
jb
xchg
inc
jp
push
aad
test
push
xor
mov
int3
pop
mov
push
mov
sbb
cltd
push
hlt
mov
es
imul
xchg
lods
dec
cmp
push
ret
xor
cwtl
shrb
xor
sti
lods
xlat
int3
jge
push
pop
lcall
sub
xchg
pop
cmpb
mov
test
pop
and
jge
inc
pop
mov
ljmp
ds
hlt
int
xor
inc
idivl
jo
sub
clc
xchg
ljmp
mov
movsb
sti
mov
std
data16
cs
cmp
cltd
jle
in
pop
cs
arpl
cmc
dec
xor
int
lret
stos
dec
cmc
add
mov
ljmp
and
sbb
and
addr16
jge
dec
dec
jp
stos
sub
in
mov
popa
push
fst
lcall
cli
icebp
in
cs
pop
rorb
jb
lock
enter
roll
jp
stos
sbb
negb
mov
or
outsb
xchg
mov
jne
aas
dec
sub
push
or
std
mov
mov
dec
in
sub
ds
inc
movsl
mov
sbb
arpl
or
divb
mov
add
sahf
out
sbb
xor
movsb
mov
insl
push
inc
pop
mov
fistps
test
mov
and
push
fidivs
xor
dec
adc
sub
movsl
outsb
or
enter
and
insl
in
in
mov
pop
pop
xor
test
or
xor
fisubs
adc
dec
and
xchg
es
lea
int
sub
mov
adc
cltd
cmc
xchg
leave
and
fs
imul
insl
cmp
xlat
mov
out
mov
jae
scas
arpl
in
test
inc
js
loope
mov
pop
int3
pop
movsb
push
ss
in
dec
addl
filds
mov
std
xor
jnp
jle
sbb
nop
sub
sub
pop
mov
clc
das
ficomps
inc
fbstp
fimull
add
mov
in
test
repnz
xor
pop
or
or
mov
stos
andl
jb
jo
xor
pop
mov
cmpsl
cmpsb
cmp
sbb
ljmp
mov
iret
jmp
lock
fwait
gs
fldt
repz
xchg
inc
lods
movb
xchg
rcl
repnz
stos
int3
insl
push
and
fstpt
xorb
leave
push
lret
sbb
sbb
xchg
outsb
jecxz
lods
adc
cmpsb
push
ss
jg
inc
mov
mov
jae
mov
stc
fdivs
xor
sahf
jg
lea
push
sbb
adc
push
je
mov
xor
enter
mov
mov
pop
pop
dec
pop
xchg
fbld
xchg
clc
mov
jle
pop
cmp
sub
cmp
rcll
negl
dec
or
mov
cmp
dec
out
cmpsb
adc
xor
cld
push
repnz
int3
push
add
test
xchg
add
scas
dec
push
push
cld
test
loopne
jl
cli
popf
or
jl
addr16
dec
xchg
add
hlt
pop
inc
xor
mov
es
lcall
jae
xchg
ret
sub
stos
ret
pop
roll
in
and
mov
adc
popf
fstps
out
push
dec
jecxz
test
or
mov
scas
and
inc
and
pop
sahf
fstl
test
jns
jle
mov
dec
jnp
shlb
push
and
pop
cmp
xchg
push
xchg
pop
push
mov
cs
dec
cld
mov
gs
adc
or
mov
jns
fs
loope
dec
idivb
inc
adc
sbb
sbb
pop
mov
loop
sub
jge
push
adc
jns
xor
sub
ret
xor
cmp
pop
cmp
jo
shlb
push
lahf
dec
xor
test
fnstcw
es
sbb
leave
and
jl
sub
adc
sub
stc
push
addr16
fldl
ficomps
dec
fsubp
mov
cmp
push
sbb
lods
mov
push
fxch
aas
cs
aam
lahf
fisubrl
jmp
faddl
jle
ljmp
mov
aas
sub
inc
adc
cwtl
mov
pushl
gs
pushf
cmp
add
hlt
cmp
mov
scas
dec
out
in
jo
add
subb
mov
orl
dec
cmp
loope
push
fcoml
push
aad
repnz
sarl
test
cld
adc
mov
call
lods
inc
jbe
je
mov
jae
mov
inc
sub
dec
addr16
insl
aas
addr16
adc
mov
bound
mov
pop
push
dec
dec
xchg
out
lods
lds
lahf
xchg
dec
fs
shll
shrl
imul
add
xor
lahf
in
pushf
out
mov
jle
mov
push
pop
out
lahf
pop
int
outsb
enter
jp
push
push
mov
push
pop
out
jnp
cwtl
and
fdivs
jecxz
xchg
cmp
ffreep
rcr
mov
cltd
dec
daa
jae
pop
sbb
dec
sbb
inc
sub
movsl
xor
adc
adc
cli
stos
xchg
ss
xor
dec
lods
sarl
cmp
icebp
mov
dec
popa
call
ljmp
arpl
xchg
xor
pop
loop
ret
or
negl
mov
mov
add
popa
sub
mov
ret
mov
pop
add
or
and
fs
dec
mov
dec
jo
xor
inc
cmpsb
jecxz
lds
ret
sub
sub
ds
sbb
jmp
in
sti
mov
mov
push
push
rcrb
incb
scas
popa
ror
pop
cmp
jnp
xor
enter
int3
cmp
mov
or
enter
sbb
into
orl
daa
das
and
js
push
sahf
lahf
cmp
sarb
jge
jl
cmc
pop
cmc
xchg
add
mov
lea
xchg
rorb
push
repnz
sub
xchg
adc
fidivrs
mov
pusha
repnz
enter
cmp
fbstp
or
jbe
and
and
stc
dec
mov
lret
daa
cmp
movsl
pop
and
cmp
loop
jb
pop
xor
aam
sub
das
cmp
mov
adc
scas
rcrb
data16
mov
data16
test
in
insb
addr16
insl
push
fists
out
outsl
fstpt
add
push
cmp
xchg
test
sbb
inc
jp
push
loope
lahf
xchg
mov
and
adc
aad
mov
and
addb
cmp
das
and
pop
dec
xchg
mov
inc
mov
or
lds
mov
lret
adc
aam
push
sub
fcmovne
sbb
mov
shrl
cmp
xchg
sbb
mov
and
ret
fadd
xor
xchg
leave
or
js
jns
lods
mov
cmp
mov
js
mov
dec
aad
lret
sbb
in
movsb
pop
test
mov
fnstsw
cmp
sub
or
mov
inc
imul
mov
cmp
mov
mov
out
sarl
jns
std
imul
test
mov
add
pop
lahf
or
jl
inc
jns
mov
sub
sub
roll
es
fidivrs
in
in
sahf
and
cmp
pop
mov
aas
lods
add
testl
shlb
inc
shll
push
adc
cmc
push
enter
cmp
int
lock
cmp
cmpb
imul
or
push
les
pop
add
push
imul
xor
bound
or
cmpsl
daa
ljmp
push
bndldx
out
dec
and
out
cmpsl
mov
ret
push
mov
loopne
daa
push
popf
mov
sub
pushf
test
fs
mov
fs
jns
push
xor
test
jle
push
les
add
inc
push
ljmp
and
push
dec
enter
lock
push
mov
push
cmp
cmp
scas
fsubrs
sbbl
cmpsl
fisttpll
arpl
jl
je
out
dec
movsb
out
inc
pop
lea
lcall
out
in
mov
cmp
scas
mov
dec
inc
js
mov
push
mov
in
mov
xor
enter
ljmp
rorl
jecxz
es
xchg
test
sbb
cmc
or
sub
cmc
fwait
in
call
push
iret
pushf
and
cmp
rclb
jbe
lret
mov
int
jbe
xchg
or
loop
mov
sub
mov
pusha
test
cmp
push
mov
ljmp
arpl
les
adc
shlb
dec
dec
mov
cmpsl
repnz
mov
sub
pusha
jg
cmp
inc
push
mov
std
inc
ss
and
mov
xchg
loop
push
xchg
ficompl
or
push
inc
ret
mov
leave
xor
fwait
cmp
cmp
xchg
adc
inc
and
rcr
popf
dec
ljmp
cmp
out
fsubs
jecxz,pn
push
call
call
mov
or
or
stos
popf
pop
movsl
xor
push
pop
mov
mov
lea
pop
dec
push
subl
insb
lock
and
sub
std
arpl
adc
fstl
jmp
inc
xchg
movsl
inc
jge,pn
mov
sub
jnp
imul
insb
and
ret
cltd
lret
sub
sti
loop
in
out
pop
pushf
push
lret
jnp
cmp
mov
sbb
in
sub
ret
sbb
loopne
fidivrl
cmp
pop
fdivrl
movswl
leave
in
insb
xchg
add
vmovaps
mov
out
xchg
pop
xor
out
or
cmpsb
push
jne
hlt
mov
fnstcw
cmc
int
imul
pop
mov
cs
movsb
pop
test
jnp
filds
and
mov
add
xchg
push
fwait
push
shrl
sbb
adc
cs
call
insl
dec
or
ret
loop,pn
sub
pop
jbe
pop
loop
outsb
and
movl
jns
add
cmp
mov
push
popf
fsubrs
addl
bound
inc
scas
sub
lret
xor
dec
jmp
cwtl
or
icebp
mov
test
dec
cmp
add
ucomiss
data16
and
fwait
sub
cmp
stos
mov
mov
push
lock
outsl
fs
outsl
mov
orl
stc
xchg
mov
inc
insl
testl
push
push
or
insl
int3
or
sahf
ss
nop
pop
mov
std
pushf
mov
cmc
pop
lahf
and
leave
sbbl
jg
xchg
add
add
adc
mov
jne
sub
sub
xchg
stc
mov
pop
and
cmp
ds
fdivrl
cmpsb
jmp
cld
ret
js
ret
stos
jb
in
mov
es
push
add
daa
ss
adc
xor
sbbb
int
pushf
call
or
cmc
lods
repnz
mov
in
adc
inc
jmp
filds
push
fimull
cmc
dec
add
adc
rol
lock
mov
mov
push
jmp
int
push
in
cwtl
stc
adc
fnstcw
divb
and
ja
scas
fcomps
subb
in
and
cld
xchg
sbb
inc
adc
jne
pop
std
cltd
dec
mov
movsl
sub
mov
call
push
push
push
pop
push
xchg
movsl
sarb
and
jmp
subb
xor
scas
cld
pop
jmp
dec
scas
test
sbb
dec
jno
push
adcl
movsl
jecxz
adc
or
push
andl
mov
test
and
lahf
sub
flds
jnp
sub
sbb
repz
ds
xor
push
adc
cmpb
cmp
mov
decb
lahf
cwtl
xchg
adcb
mov
mov
cmp
fbstp
inc
test
lods
fadd
xor
add
cs
cmp
adc
pop
int
das
out
mov
sbb
js
xor
mov
xor
add
std
inc
pop
mov
xchg
jecxz
and
mov
loopne
push
daa
stc
scas
sub
fwait
and
loopne
and
or
sbb
das
stc
and
push
test
minps
xor
or
aam
xchg
cltd
pop
roll
xchg
int
xor
jge
cwtl
scas
clc
xchg
pushf
xchg
lret
add
test
jns
ds
popf
cmp
jp
xchg
into
push
data16
sub
pop
mov
outsb
lea
xchg
mov
inc
cmp
in
dec
aaa
pop
xchg
sub
and
fistps
and
aad
or
dec
enter
sarb
pop
insl
daa
pushl
lea
jo
in
xchg
add
inc
lahf
xor
repnz
icebp
mov
and
idivl
adcb
inc
lahf
xor
repnz
icebp
mov
mov
xor
stc
mov
mov
xchg
jo
shlb
mov
push
sub
adc
daa
xchg
xchg
jg
mov
and
jae
pop
lret
sti
jl
adc
push
inc
je
pop
cs
out
ds
and
fcmovnu
cmp
cmp
mov
add
sti
dec
pop
mov
jnp
or
add
pusha
dec
into
inc
add
adc
mov
mov
mov
mov
push
sti
pushw
int3
mov
fisubrs
pushf
pop
inc
adc
aaa
or
inc
jne
aad
inc
into
movsb
dec
dec
mov
shl
adc
add
outsl
pop
pop
and
jle
jne
fsubs
leave
pop
sub
mov
enter
sub
inc
sub
arpl
dec
ja
jmp
xor
mov
cmp
lahf
jnp
adc
mov
mov
pop
xchg
scas
inc
push
in
pop
mov
aad
inc
xor
xor
sbb
inc
stc
jnp
popf
inc
xchg
add
sub
sbb
test
pop
lret
mov
mov
popa
and
std
xchg
jp
out
mov
out
test
repnz
inc
faddl
out
je
arpl
push
test
inc
adc
ror
mov
sbb
xor
pop
test
push
adc
mov
or
add
dec
jecxz
aad
pop
or
mov
mov
int
pop
lret
push
aad
aas
lods
out
pop
fists
dec
inc
out
fnstsw
mov
push
xor
jp
and
add
xchg
xor
xorb
lcall
and
mov
lods
push
aad
repnz
je
jmp
push
adc
adc
cwtl
xchg
int3
insb
push
mov
fnstcw
ret
jp
repz
mov
xchg
das
test
adc
dec
xchg
dec
push
inc
xchg
jge
aam
pop
mov
mov
mov
out
mov
adc
les
mov
jb
sarb
pop
test
mov
inc
ret
lret
mov
cmc
ret
mov
mov
rcr
inc
ret
mov
adc
mov
or
repnz
sub
jmp
fldl
in
hlt
jmp
inc
lock
mov
inc
and
xchg
xchg
sahf
adc
pop
repz
add
enter
leave
add
xchg
lods
push
or
rcrl
pop
repnz
fildll
mov
outsb
leave
test
imul
popa
outsb
repz
pop
adc
pop
sub
mov
hlt
subb
pop
fisttpll
sbb
adc
add
and
mov
jle
push
out
int3
mov
add
add
sbb
imull
cmp
fisttpll
mov
pop
outsb
push
dec
push
cmp
nop
dec
xchg
sub
jg
imul
jl
hlt
and
lret
mov
roll
adc
mov
int3
lret
jo
stos
push
popa
dec
ds
push
mov
dec
mov
jnp
and
push
shll
gs
pop
insb
push
lcall
mov
pop
daa
arpl
mov
cmp
mov
sub
stos
stos
or
xchg
push
out
stos
ljmp
mov
jbe
cmpl
mov
pop
fistpl
push
push
movsb
sbb
test
mov
ss
sub
movsl
adc
outsb
inc
cmp
sbb
sub
icebp
mov
mov
cmp
int3
cli
mov
sbb
out
adc
cmp
rcll
jo
in
push
outsb
dec
cmp
aad
stc
jns
out
jbe
mov
xor
add
mov
adc
adc
repnz
imul
add
ret
add
addr16
mov
push
cmp
adc
cs
stos
rcrl
lahf
cld
stc
cli
sbb
in
mov
popl
int
dec
jb
dec
sub
js
aas
shl
divl
sub
mov
adc
or
jne
mov
inc
cmp
loopne
push
loope
mov
in
into
xlat
inc
jb
adc
daa
sarb
shr
call
or
add
push
stos
push
sahf
into
lahf
mov
push
dec
cmpb
pop
rcll
rcll
xchg
imul
mov
jae
lret
rclb
push
les
and
fisubl
sub
lea
pop
fdiv
adc
imul
cltd
mov
imul
jge
adc
ror
out
ss
jo
rcrl
call
shlb
mov
and
mov
call
mov
push
int
add
mov
push
jcxz
icebp
sub
mov
daa
pop
mov
add
jmp
push
lods
and
mov
jg
mov
push
lcall
inc
in
cmp
mov
push
mov
pop
ret
fmull
fdiv
pushf
mov
push
data16
sub
leave
add
xchg
lods
push
or
rcrl
pop
bnd
addr16
adc
aam
lcall
in
mov
jne
movb
int
jg
sbb
in
push
mov
mov
das
and
mov
push
lock
scas
lods
test
ficoms
pusha
je
jo
lods
jbe
pop
ds
dec
mov
in
sbb
push
orl
pop
ret
int3
lcall
out
push
xchg
sub
shll
cmovae
push
push
sbb
or
daa
lods
or
movsb
pusha
push
aaa
or
dec
jmp
iret
movsl
out
sbb
test
scas
or
test
push
iret
sub
mov
xlat
int3
loopne
in
mov
xchg
and
mov
in
mov
cmp
mov
cld
cmp
outsl
or
mov
std
push
mov
out
cmp
test
lahf
sbb
scas
jnp
cld
jge
out
lods
add
or
sbb
int3
xor
xlat
jg
js
call
xor
test
dec
imul
rolb
in
xor
pushl
pop
sbb
and
in
xchg
andb
jmp
dec
xchg
dec
sub
stos
stos
or
xchg
push
out
stos
ljmp
mov
jbe
cmpl
mov
pop
fistpl
push
push
movsb
sbb
mov
add
xlat
fwait
pushf
and
jle
push
adc
or
mov
out
push
imul
imul
sbb
sahf
das
sub
stos
lock
pop
dec
loope
js
pusha
inc
pop
sub
lock
test
xchg
in
int
shlb
fsubrs
adc
and
mov
fsubl
lcall
imul
add
dec
test
sub
filds
add
pop
xchg
rol
mov
pop
jae
addr16
mov
data16
or
loope
cmp
aas
sbb
aad
std
xchg
xorb
push
fldl
cltd
mov
jno,pt
xchg
enter
lahf
push
and
scas
test
xchg
jle
cmp
insb
mov
stos
jnp
dec
mov
nop
sbb
and
xchg
pop
ret
pop
daa
je
jne
sub
outsl
fwait
mov
inc
sub
adc
push
lret
and
xchg
aad
pop
int3
mov
lds
mov
sarl
insb
jbe
or
rcr
cli
out
je
jl
lods
sub
mov
aam
cmp
sbb
in
call
rcrl
mov
das
inc
ret
add
aaa
cld
cli
push
adc
add
pop
ficompl
scas
call
jecxz
sub
divb
out
mov
popa
push
mov
stos
out
lods
int
out
sbb
mov
jno
sub
push
sub
mov
hlt
pop
in
push
imul
pop
cmp
sub
in
sbb
xchg
or
daa
das
mov
mov
xchg
dec
lods
mov
or
cmpsl
push
jg
les
fisubs
bound
fisttpl
lods
lret
push
aad
out
add
add
frstor
cmp
icebp
push
adc
loopne
bound
stc
mov
dec
dec
xchg
sbb
xchg
stos
into
call
mov
push
int
frstor
roll
jg
add
rorl
jns
or
dec
mov
iret
pop
jno
std
cltd
dec
mov
data16
sub
shll
mov
mov
daa
xchg
xchg
sahf
pop
dec
pushl
or
mov
dec
adc
leave
dec
lret
sub
jp
mov
stos
insl
dec
mov
cld
push
xor
out
enter
mov
aas
adc
push
mov
jp
lret
cmc
or
and
push
lret
test
int3
and
popa
lock
fnstenv
imul
aam
mov
dec
dec
fs
adc
or
sbb
leave
jl
jne
popf
xor
add
mov
push
in
ficoms
sbb
fcmovb
test
ljmp
push
sbb
lahf
jg
mov
pushf
pop
pushf
cmp
xlat
mov
leave
mulb
std
pop
clc
xchg
sbbl
sub
add
pushf
adc
test
jmp
xchg
test
sub
cmp
orl
sarb
jo
sbb
adc
lahf
test
pushf
push
mov
fwait
sbb
jae
jmp
test
mov
adc
and
jmp
xchg
aam
pop
mov
dec
dec
cld
fidivrl
inc
int3
xchg
das
jne
mov
xorl
movq
cmpsl
cmp
gs
fnstsw
push
push
std
loope
dec
dec
dec
je
cltd
or
sbb
and
jmp
dec
jbe
and
fidivl
leave
sbb
std
jge
shld
push
mov
push
out
enter
push
cmp
inc
das
nop
push
arpl
dec
xchg
nop
xchg
dec
sub
shrl
ja
scas
and
daa
ret
lods
pushf
cmp
mov
jg
movsl
add
jle
add
ficoml
add
outsl
sub
cmc
mov
cmp
shll
outsb
popa
push
push
cld
mov
mov
lds
lods
cmp
lretw
fsubp
sub
movsb
sahf
fnstsw
ret
pop
mov
push
std
mov
cs
addr16
mov
dec
in
test
out
push
leave
dec
in
out
dec
stc
sub
xchg
xchg
das
daa
mov
movsl
mov
movsl
pop
iret
cmpl
mov
inc
sub
hlt
aas
jne
in
divl
dec
mov
iret
out
mov
lods
aas
andl
lods
mov
adc
mull
test
sbb
out
divb
or
dec
lcall
jmp
push
outsl
sahf
insl
add
dec
xchg
and
xor
jecxz
cli
lea
sbbl
daa
icebp
cs
add
add
cmp
aad
iret
xorb
cmp
pop
int3
movsb
push
lock
shl
outsl
mov
stc
mov
jp
inc
andl
repz
sub
lods
jmp
pop
lea
es
add
fnsave
mov
jno
aam
fwait
inc
loop
sti
sbbb
insl
mov
fdivrs
jne
hlt
sbb
and
testl
enter
add
clc
adc
jg
adc
sbb
lods
pop
cli
ja
sbb
aam
repz
into
xor
sbb
rep
sub
ljmp
push
dec
sti
lret
mov
xchg
das
dec
dec
mov
shll
not
xchg
repnz
xchg
pop
mov
js
add
loopne
fdivl
xchg
cli
insl
pop
sbb
in
cld
and
ja
push
testl
pop
xchg
inc
xor
jge
mov
inc
push
notl
test
jne
xchg
hlt
lea
pop
aam
test
shrl
je
sub
mov
pop
sbb
push
mull
or
das
cwtl
aam
fldl
ljmp
cld
pop
or
xchg
sub
insl
adc
pop
sbb
cwtl
out
mov
cmpsl
fdivr
adc
out
inc
and
les
pop
xor
mov
xorl
icebp
test
jmp
fsts
shrl
loope
jne
lret
mov
hlt
jmp
mov
cli
jl
sbb
inc
popa
fwait
jno
jae
push
xchg
mov
rorb
shlb
mov
cmp
nop
loopne
mov
iret
mov
loopne
cli
mov
mov
pop
icebp
divb
mov
imul
or
rcrl
push
or
gs
push
mov
int3
sbb
cmpsl
dec
inc
lret
xor
iret
pop
pusha
pop
pusha
push
xchg
cmpsl
xchg
sub
xchg
sbb
pop
and
jg
jl
nop
sub
lods
pop
les
jnp
ds
scas
cwtl
xor
hlt
shr
dec
lcall
jno
rolb
fmuls
push
bound
leave
dec
das
cmpsb
xchg
push
hlt
inc
ja
andl
mov
sti
enter
movsl
push
jbe
push
mov
nop
into
aad
mov
iret
imul
cmp
and
push
idivl
pop
mov
lret
test
pushf
cltd
mov
repz
pop
ret
push
loop
shrl
cmp
adc
ror
push
insb
in
adc
pop
inc
push
lds
icebp
or
ja
and
popf
xchg
shll
mov
mov
das
mov
jo
mov
adc
lret
aad
leave
mov
mov
stos
xchg
mov
ss
lret
and
je,pt
jmp
mov
xchg
dec
ficoml
mov
je
or
inc
mov
inc
mov
jecxz
push
cmp
pop
loope
in
int3
scas
mov
daa
int3
or
sbb
inc
ljmp
or
mov
imul
lods
jns
pop
jns
or
gs
push
mov
push
call
jb
arpl
popf
js
mov
add
mov
inc
iret
xor
cs
pusha
mov
es
xorl
imul
push
pop
dec
cwtl
or
inc
nop
jbe
dec
pop
and
add
cmp
arpl
jecxz
sti
andb
je
jl
mov
inc
xor
pop
jns
and
push
sub
insl
out
adcl
mov
imul
and
or
mov
xor
pop
stos
mul
xor
movsb
ds
sub
xor
pop
or
out
in
sbb
fidivl
dec
pushf
push
nop
and
jp
adc
sbb
xchg
insl
push
imul
in
or
pop
imul
mov
sti
xor
mov
pop
or
dec
or
mov
cmp
jg
add
jp
xor
loope
inc
fists
clc
jbe
push
adc
push
scas
fiaddl
add
dec
shlb
scas
ds
xor
or
insl
lcall
fbld
dec
shrb
jb
sbb
in
inc
jge
sub
repz
nop
dec
add
es
sahf
cmp
das
std
addl
addb
xchg
xor
pop
fmull
ret
push
in
pushf
movsb
iret
xchg
aaa
sbb
or
shrl
mov
sahf
sbb
test
mov
sahf
mov
add
in
xor
xchg
push
or
adc
cs
jg
xor
cmpsb
sbb
jge
adc
ret
inc
cmp
jns
dec
shlb
scas
ds
xor
rcll
lcall
fbld
into
add
add
jb
sbb
in
inc
jge
sub
repz
nop
dec
add
es
sahf
cmp
das
std
addl
cmpsb
sbb
aam
test
inc
inc
hlt
xchg
loopne
int
mov
movsb
iret
xchg
aaa
sbb
or
mov
add
sbb
test
cli
fdivl
adc
repnz
push
sub
mov
pop
push
cmp
sbb
jg
mov
imul
movsb
ss
add
testb
pop
imul
mov
inc
cmp
inc
stc
push
shrl
xchg
add
bnd
jl
sub
pop
outsb
xor
mov
ret
insb
pop
lret
inc
fwait
or
or
add
mov
test
pop
aas
cmpsb
call
popa
aad
iret
inc
gs
pop
push
insb
cmpsl
xor
cltd
cmpsb
daa
pop
pop
fnsave
adc
add
loopne
fdivl
xchg
cli
insl
pop
faddp
mov
sub
dec
jns
lock
pop
loopne
cs
fsubrl
outsl
mov
xor
js
neg
ja
hlt
add
test
mov
imul
sbb
and
push
or
push
stc
pop
out
jle
mov
or
push
pop
push
mov
adcl
add
push
pop
adc
test
stos
cmpsb
dec
les
and
xor
hlt
bound
or
mov
sbb
aaa
lock
jmp
sub
mov
inc
call
fists
mov
fnstcw
add
testb
pop
daa
lret
cmp
adc
mov
dec
push
data16
jecxz
enter
xlat
adc
shrb
sub
fistpll
pop
xor
dec
shll
or
lcall
pop
add
push
jbe
or
sarb
pop
cwtl
dec
pop
loope
add
sbb
xor
pop
addb
adc
rcrb
fsubs
add
or
jnp
mov
inc
cli
adc
push
fisubl
dec
jmp
mov
in
inc
loopne
fdivl
xchg
cli
insl
pop
faddp
mov
sub
shlb
sbb
sbb
mov
pop
mov
rcll
cltd
repnz
dec
jno
and
lods
movsb
popf
jp
aam
dec
or
jne
lret
add
xor
pop
sbb
xor
mov
daa
mov
and
mov
push
pop
push
mov
lods
test
mov
adc
dec
inc
and
popf
ljmp
add
lds
add
add
xor
sub
mov
dec
cltd
lods
inc
rolb
xor
jge
mov
inc
sbb
cmp
test
pop
mov
cmp
xor
data16
sub
mov
outsb
jmp
aam
addr16
mov
dec
inc
mov
lret
cmc
mov
cmp
push
sti
lea
lcall
cmpsb
adc
or
dec
cs
addr16
jb
scas
xchg
xor
dec
add
ljmp
adc
movsl
or
cs
fstpt
rolb
sbb
cmpsl
les
fisubrl
loopne
das
lret
aad
leave
mov
data16
aam
lods
dec
imul
lret
cmp
mov
push
add
sbb
pop
pushf
mov
dec
xchg
std
ret
jbe
adc
sbb
rolb
push
cld
outsb
sahf
popf
ret
das
pop
inc
mov
xlat
mov
sarb
repz
insb
vaddpd
and
test
lock
iret
inc
lods
popf
adc
pop
addr16
pop
and
mov
lahf
test
push
inc
out
xor
data16
push
pop
push
dec
addb
pushf
scas
mov
popa
ss
xchg
cmpsl
xchg
fs
jg
dec
sbb
mov
xor
jmp
inc
push
lret
in
lret
sbb
ljmp
js
mov
fsubrl
outsl
lods
mov
xor
add
sbb
mov
nop
adc
stc
inc
jp
and
xchg
shll
cmp
jae
sbb
pop
add
mov
rcll
stos
xchg
mov
and
sbb
das
inc
fmuls
movl
and
gs
out
xchg
pop
stos
sbb
vpmacsswd
jmp
xor
mov
es
push
sahf
mov
imul
test
rcrl
lds
rorb
mov
add
pop
cmp
scas
adc
sub
sub
pmullw
cmp
lret
mov
push
sbb
jg
stc
mov
fmul
ss
daa
lret
out
fwait
lods
adc
stos
repz
adc
mov
add
pop
outsl
adc
inc
mov
pop
imul
pop
pop
mov
ret
sub
fnstcw
add
movsb
cmp
je
push
cmpsl
or
loope
sub
leave
inc
mov
loope
mulb
dec
adc
xchg
test
loopne
mov
ss
cmpsb
dec
cmp
inc
push
out
inc
sub
out
sub
movsl
xor
fisubrl
loopne
sbb
es
sbb
push
mov
sub
mov
jns
outsb
jge
ss
shl
lock
or
outsb
ret
xor
dec
lahf
repz
popa
push
or
or
or
add
jbe
rorb
jbe
jmp
push
xor
leave
add
fwait
subb
cmp
pop
pop
cs
in
test
mov
sti
lea
pusha
mov
lds
dec
pushf
cmp
dec
mov
mov
cmp
or
push
push
push
ds
pop
and
pop
push
dec
fcmovnb
mov
addb
jo
or
pop
mov
call
push
pop
jnp
push
push
pop
out
xor
xchg
sub
fcomp
sub
cmp
lahf
test
popa
sbb
sbb
hlt
gs
mov
mov
nop
lods
movsl
rcl
sbb
adc
cmp
add
repz
xchg
aam
jl
arpl
sub
das
push
sbb
repz
orb
push
cld
sub
xchg
jnp
pop
pop
cmp
push
cmp
fcmovnb
cltd
push
fadds
in
or
push
test
jecxz
test
adc
stos
aaa
call
icebp
pop
enter
push
mov
sarb
mov
push
leave
sub
pop
imul
xchg
pop
ret
imul
sbb
js
sub
js
mov
fs
adc
call
mov
mov
bound
out
cmpsb
rcll
sti
jne
pop
out
adc
aam
mov
add
jb
shlb
shl
pop
sub
inc
in
jns
in
add
pop
inc
mov
jle
or
and
cli
push
ret
add
or
mov
mov
and
shll
outsb
cmc
js
lahf
aam
aas
hlt
stos
jnp
push
mov
add
and
orl
fisubrs
adc
cli
push
or
fisubrl
pop
xor
je
sti
mov
adc
lcall
loop
dec
cmp
inc
call
test
jp
leave
outsl
cmc
andl
mov
push
rcrb
mov
repz
insl
add
adc
push
leave
push
jnp
mov
in
and
and
cmpsb
add
push
inc
push
mov
mov
clc
in
cld
mov
int3
push
xchg
fnsave
xlat
xchg
outsl
leave
arpl
lret
mov
jo
pop
incl
divl
decl
dec
std
xor
xchg
scas
pop
adc
nop
xchg
mov
ja
adc
mov
mov
dec
icebp
and
scas
mov
push
xor
ret
in
mov
insl
lret
pushf
fldcw
mov
icebp
sbb
mov
jmp
mov
ss
add
testb
pop
mov
inc
repnz
pop
pop
std
insl
mov
jp
inc
mov
xor
mov
mov
out
daa
sub
mov
push
add
inc
lcall
and
mov
add
sbb
adcb
fs
and
cli
push
ret
aas
fwait
add
pop
or
cmp
mov
add
xchg
dec
cmp
fsubr
mov
out
inc
in
jns
mov
out
cmp
or
fldenv
cli
push
ret
ret
scas
lock
ja
sbb
sbb
pop
or
outsb
cmc
js
lahf
aam
aas
hlt
stos
jnp
push
mov
add
and
orl
fisubrs
adc
cli
push
or
fisubrl
dec
lar
adc
lcall
mov
lods
sbb
pop
jb
jp
leave
outsl
cmc
andl
mov
push
rcrb
mov
repz
insl
add
adc
push
leave
push
jnp
mov
in
and
and
pop
inc
fdivr
cmp
push
mov
mov
clc
in
cld
mov
int3
mov
repnz
leave
arpl
lret
mov
jo
lret
lahf
imul
push
dec
or
gs
fidivs
sub
mov
movsl
jecxz
jmp
add
mov
popa
leave
mov
fucomp
out
add
mov
xchg
mov
mov
aad
mov
push
cmpsb
ja
test
inc
xlat
or
popf
test
mov
push
push
sbb
imul
mov
cmpb
xor
out
push
fists
push
cmp
push
pop
push
movsl
or
pop
fwait
and
xchg
hlt
dec
movsl
mov
xchg
rolb
lods
lea
xchg
rcrl
ret
and
dec
inc
stos
popf
xchg
movd
jecxz
xor
pushf
xchg
add
and
std
sub
stc
mov
xlat
push
xchg
push
push
push
xlat
loop
add
push
mov
div
js
fsts
pop
adc
test
mov
mov
scas
mov
or
push
es
mov
mov
inc
pusha
test
jp
and
xor
add
jne
dec
jl
fwait
dec
push
insl
jbe
mov
and
and
rcll
mov
dec
jp
lret
mov
sbb
jnp
mov
ja
js
xlat
cmp
pop
loope
ja
scas
fnstcw
add
testb
pop
fucomi
sub
jns
std
mov
xchg
mov
cmp
push
cmp
inc
dec
ss
xchg
sub
test
inc
adc
imul
sub
jg
xchg
leave
adc
rcll
stc
cmp
adc
scas
mov
sbb
aas
dec
jmp
push
push
in
fldenv
ret
shld
mov
xchg
adc
scas
sbb
mov
mov
xchg
xchg
lock
xchg
add
push
clc
or
out
push
loop
cmpsl
xor
cltd
cmpsb
daa
inc
out
cld
cmp
mov
in
inc
loopne
fdivl
xchg
cli
insl
pop
faddp
mov
sub
mov
sbb
jl
push
test
adc
inc
enter
mov
movsb
dec
dec
jbe
sbb
out
mov
sub
xchg
dec
subl
jg
pop
sbb
aad
insb
loopne
cmp
xchg
popf
push
arpl
sahf
popa
clc
sub
dec
in
mov
add
push
mov
pop
insb
jle
mov
jb
push
add
ret
pop
dec
in
xchg
fsubrl
and
adc
and
scas
lret
mov
jmp
sahf
dec
repnz
push
pop
clc
inc
adc
mov
stc
or
mov
movsl
jo
or
es
mov
fldl
clc
mov
pushf
jmp
sub
hlt
sbb
insl
int
repz
mov
lock
fidivrs
sar
jp
mov
sarl
inc
push
pop
orb
scas
test
sbb
jmp
cmpsb
loopne
mov
aam
cmp
les
outsl
pop
pushf
out
mov
push
das
pop
adc
mov
and
mov
movsb
lods
adc
insl
je
xchg
jge
xlat
test
adc
jne
sbb
mov
lods
lods
cmp
test
scas
mov
push
dec
jecxz
push
jge
mov
nop
cs
sub
lret
das
lea
pop
mov
dec
sub
xor
lret
or
test
push
ljmp
dec
inc
loope
incl
cwtl
xchg
add
xchg
or
cmp
mov
xor
inc
in
fidivs
pop
leave
in
outsl
test
je
ret
insl
call
jns
inc
rol
aad
fwait
lret
js
inc
and
inc
movsl
shlb
out
sbbb
lahf
subl
or
pop
xchg
scas
bound
scas
ljmp
cmp
lods
inc
aaa
repnz
jl
notb
cvtpi2ps
jmp
push
data16
sub
and
jb
mov
jo
outsl
and
shrb
mov
movsl
fwait
and
or
shl
repnz
fildll
adcb
jae
mov
ficompl
mov
dec
add
mov
sbb
outsl
repz
data16
sub
repnz
ljmp
cmp
scas
and
jae
fadd
mov
inc
stc
idivb
sub
out
insl
mov
fistpll
mov
out
movsl
movb
inc
std
arpl
jmp
shrl
flds
xchg
cli
lds
cs
or
sub
popf
pop
sarb
loope
in
inc
mov
movsb
loopne
cmpsl
fidivrl
xchg
mov
pop
fsubrs
mov
jecxz
mov
jnp
mov
pop
xchg
sub
mov
aad
addr16
ss
cli
repnz
out
rolb
dec
mov
cmpsb
flds
xchg
cli
lds
movsl
xchg
mov
adc
sbb
sahf
mov
push
cs
add
sbb
jbe
xor
stos
ret
lods
les
xchg
cmp
cmp
add
aam
mov
stos
pop
lret
stc
pop
es
push
test
ljmp
push
es
dec
out
add
adc
inc
or
das
push
dec
fcmovnu
dec
cmpsl
ret
pop
sub
jbe
lret
cmp
cli
xchg
imull
mov
lods
insb
loopne
pop
fists
ss
aad
adcl
mov
mov
mov
fisubl
pop
sub
sub
dec
push
out
and
sarb
fisttps
daa
mov
dec
add
push
lret
dec
shl
push
pop
inc
and
aaa
inc
xchg
ja
lods
or
inc
add
lea
mov
sbb
loopne
or
add
int3
ret
lock
pop
mov
sbb
dec
dec
mov
fiaddl
xor
inc
sbbb
cwtl
cmpsb
push
pop
mov
sub
xchg
pop
or
push
inc
xlat
je
lcall
mov
xchg
mov
push
das
pop
sbb
mov
dec
and
jo
icebp
cmp
push
adc
adcb
xlat
das
cmp
fistl
adc
sbb
scas
cmpsl
push
or
jmp
push
or
lea
jne
pop
in
pusha
sub
arpl
and
lea
aaa
xchg
jno
out
xchg
jnp
das
and
jmp
das
sbb
mov
in
jge
lahf
jg
jmp
ljmp
cmpsb
sub
push
mul
sbb
inc
test
ja
dec
shrb
out
pushf
mov
stos
add
outsl
add
inc
inc
cmp
ficoms
icebp
in
sub
popf
dec
inc
loope
mov
mov
add
mov
push
inc
mov
shrd
dec
cmpl
inc
and
mov
test
jns
xchg
ret
pop
mov
ljmp
jl
or
outsl
mov
mov
or
ss
mov
mov
xor
je
xchg
jl
inc
mov
out
test
jnp
subb
stos
or
ret
movsl
in
sub
hlt
ret
lret
sar
jp
rcrl
sbb
fs
fiaddl
in
sub
mov
push
mov
inc
add
dec
out
iret
into
adc
add
xor
fs
arpl
and
mov
mov
test
jb
cmp
dec
popf
ss
xchg
sub
int3
lret
or
mov
aas
pop
iret
sbb
gs
push
mov
shl
lods
fimull
or
sub
fcomi
sub
loopne
lds
pushf
mov
adc
add
aad
mov
jb
sarl
inc
jecxz
ljmpw
adc
enter
lds
pop
pusha
rorb
lret
js
lods
adc
adc
cwtl
pop
jno
pusha
imul
popf
lahf
sub
orb
jno
cld
mov
enter
out
mov
mov
pop
mov
in
and
sub
ret
enter
inc
inc
cmp
bound
cmpb
mov
in
sub
inc
ficompl
insb
mov
fisubl
pop
into
scas
jmp
sub
aaa
in
mov
sub
movsb
mov
fidivl
cmp
popf
daa
xlat
outsb
lahf
call
sti
popl
mov
js
jle
inc
aam
popf
push
adc
fldenv
pop
push
jmp
test
ret
repz
stc
inc
cs
jbe
jnp
xor
arpl
icebp
fildl
cmp
or
sbb
enter
shrl
out
jo
sbb
adc
test
aad
adc
movsl
pop
jne
or
ret
inc
add
dec
out
iret
into
adc
add
xor
fs
arpl
and
mov
mov
test
jb
mov
mov
jae
xchg
sub
int3
lret
or
mov
aas
pop
iret
sbb
gs
push
mov
shl
lods
fimull
or
sub
fcomi
sub
fisttps
mov
daa
xchg
dec
dec
jns
jnp
jb
sarl
inc
jecxz
ljmpw
adc
enter
lds
pop
pusha
rorb
lret
js
lods
adc
adc
jecxz
inc
aaa
int
ret
cmp
inc
cmp
int
lret
pop
loopne
adc
addr16
xchg
sub
mov
mov
mov
in
inc
jmp
mov
add
call
xlat
jmp
test
scas
icebp
lock
pop
xor
stc
sar
cli
push
jne
dec
fcmove
push
ja
inc
or
push
psllq
xchg
dec
out
cmc
stc
lret
out
fdivr
mov
xchg
aas
dec
dec
cli
sub
mov
repz
or
lret
divb
jno
sub
sub
popa
cmp
gs
mov
ss
fs
cmp
mov
in
popa
ss
loopne
mov
loop
or
pushf
xor
cmp
mov
fcomps
jo
nop
ss
popf
jbe
sub
push
push
cwtd
xchg
dec
das
and
int3
xchg
mov
cli
push
jl
push
xor
test
lret
mov
mov
adc
pop
arpl
fildl
mov
imul
dec
div
scas
mov
jae
mov
sbbl
push
sbb
xor
inc
mov
sbb
aad
sbb
xor
sbb
arpl
fiaddl
ror
inc
fildl
xchg
xchg
daa
cmp
sti
in
cmp
push
data16
sub
and
lret
dec
dec
cli
sub
in
xlat
bnd
adc
sub
mov
icebp
mov
add
roll
inc
push
int3
mov
inc
mov
das
and
test
lods
mov
push
pop
loop
mov
mov
push
in
or
gs
or
fcomi
mov
jo
std
je
int3
add
adc
cmpsb
jo
jg
mov
sub
nop
sbb
mov
xchg
sbb
shlb
jl
inc
push
jbe
sbb
mov
xchg
mov
sarl
add
sbb
mov
xchg
idiv
and
mov
jmp
mov
xchg
add
inc
and
xor
sbb
mov
xchg
sub
cmpb
fldt
mov
lret
insb
lock
pop
adc
push
enter
xchg
ret
jno
int
dec
repz
jl
mov
xlat
inc
cmpsb
sub
jno
int
dec
repz
jl
sub
fbstp
call
ss
dec
insb
ret
pop
mov
int3
add
add
mov
jp
dec
pop
or
outsb
mulb
clc
sbb
cs
push
and
pop
sahf
bound
jmp
cwtl
bound
pop
sbb
or
sahf
bound
cwtl
mov
outsb
sbb
push
test
es
testl
bound
jp
xchg
or
fnstenv
loop
stc
push
fwait
mov
inc
pop
testl
bound
mov
and
pop
scas
sbb
xchg
adc
out
push
and
pop
sahf
bound
test
dec
and
sub
sbb
or
sahf
bound
rcrb
data16
insb
movsl
pop
es
testl
bound
pop
cmp
sub
push
ss
jno
pop
sahf
xchg
fldl
dec
ret
add
push
dec
popf
int3
dec
jns
cmc
push
add
add
mov
call
cwtl
pop
imul
adc
add
rcrb
sub
jbe
add
push
in
jno
add
inc
mov
cwtl
psubusb
push
imul
pushf
pop
cmp
mov
arpl
push
rorl
sbb
adc
insl
fcomp
mov
in
mov
aam
outsl
popf
jo,pt
dec
mov
mov
xor
ds
fnsave
insb
repnz
adc
cmp
mov
out
and
xchg
ret
inc
sbb
fimuls
icebp
scas
dec
fsubrl
lahf
mov
imul
adc
subl
insb
mov
cmpsb
pop
lods
loope
xor
int3
faddl
pop
xchg
outsb
shll
les
cmpsb
lods
jecxz
and
lods
mov
sbb
lea
pop
mov
or
lock
jnp
fdiv
jp
inc
or
jb
pop
decl
xor
iret
add
sbbb
icebp
push
gs
arpl
push
hlt
inc
lods
punpcklwd
jle
mov
sbb
or
inc
push
mov
push
mov
mov
arpl
mov
and
xor
testb
popf
jns
sbb
pop
les
mov
push
test
fwait
sbb
in
popa
fidivrs
mov
xor
or
pop
inc
xor
pop
add
lret
mov
xchg
xor
mov
stos
test
jge
dec
push
aas
cmp
popa
mov
ss
push
fsubr
repz
pop
out
adc
sub
pmulhw
add
jmp
insl
lret
lock
shl
nop
data16
and
addr16
int
cmc
jg
cli
or
cmp
fistpll
adc
inc
fcomps
jb
jb
push
jno,pn
mov
cld
loope
mov
adc
jmp
mov
daa
lret
xor
inc
or
push
ljmp
out
adc
jl
sub
xchg
mov
adc
int3
jnp
cmpsb
movsb
pop
popf
filds
mov
and
mov
addr16
mov
inc
mov
add
data16
fdivrl
dec
xor
push
fistps
call
test
jecxz
loope
in
jne
ljmp
jne
lahf
loop
or
or
mov
jae
adc
data16
jp
roll
inc
adc
scas
mov
rep
sbb
jb
mov
lods
push
cmp
out
jbe
movsb
jmp
out
fiaddl
rclb
imul
leave
lcall
insb
movsb
xlat
lahf
jmp
cs
loopne
xchg
cmp
mov
popf
cmpsl
insl
cmpsl
aas
icebp
pusha
sbb
and
mov
add
xchg
daa
fnstcw
or
pop
push
data16
sub
and
jb
mov
lods
push
cmp
xchg
bsr
test
mov
shlb
aaa
inc
imul
into
jns
stc
stos
jns
xlat
and
sahf
push
push
rcrb
xchg
sti
sahf
jns
push
mov
pop
jecxz
adc
or
push
mov
xchg
jg
jmp
pop
js
mov
lea
jmp
dec
nop
mov
mov
inc
adc
push
push
shll
jp
sbb
adc
nop
stc
add
inc
imul
cld
dec
jmp
data16
ds
fnstcw
or
pop
push
data16
sub
fs
adc
dec
subl
mov
xchg
ja
into
inc
nop
in
or
mov
iret
out
out
mov
test
dec
out
sub
mov
pcmpeqb
inc
shl
xor
and
or
add
test
sub
xchg
out
inc
enter
inc
aam
scas
rol
inc
pushf
pop
negb
or
je
shll
mov
sahf
shl
insb
insl
in
push
nop
mov
pop
jge
adc
lods
mov
mov
sahf
ss
push
sti
adc
pop
dec
fstpt
outsl
imul
test
cmpl
fstpt
cmp
repnz
xor
aaa
dec
int
fnstcw
sbb
mov
add
cli
and
scas
mov
jecxz
pop
or
in
jno
sub
cltd
in
add
xor
cld
mov
inc
and
sarb
lods
mov
es
sbb
popf
mov
dec
xchg
mov
sub
sub
in
and
push
lods
inc
cmpsl
mov
in
adc
outsl
ret
xor
add
inc
xor
dec
jle
dec
aad
sti
and
rorl
stos
cmp
out
mov
loopne
and
sbb
push
push
shl
mov
mov
in
xchg
mov
cli
mov
imul
mov
add
lret
cmp
shll
mov
fcompl
sbb
sbb
push
pop
test
testl
jbe
xchg
push
inc
jbe
sbbl
ret
pop
mov
inc
lret
pop
lods
ret
mov
inc
ss
addr16
out
jg
out
aaa
pop
int3
adc
mov
xchg
cs
jge
cmp
out
pushl
mov
mov
jbe
jae
jo
data16
pop
mov
xlat
mov
cmpsl
les
sub
inc
mov
fwait
sbb
pop
hlt
push
sub
repz
add
es
cwtl
inc
mov
es
insl
or
pop
push
and
push
icebp
mov
aad
hlt
adc
rcr
out
sub
push
js
shlb
push
out
sub
push
js
jo
lds
data16
push
mov
in
test
push
jns
and
sub
dec
pusha
scas
push
xchg
pop
fcoms
push
mov
repz
sbb
scas
cmpsl
ds
lock
scas
nop
stos
mov
jnp
xor
scas
xor
xchg
jmp
jmp
stos
fcompl
cmc
les
xchg
loope
xchg
mov
fwait
mov
jbe
in
fwait
pop
dec
xchg
pushf
fstpt
mov
or
mov
mov
push
inc
push
jbe
dec
shlb
es
adc
push
pop
push
jl
rorb
add
cmpl
dec
popa
xchg
ret
sahf
fistpll
test
daa
jecxz
testb
mov
int
or
jne
out
je
jle
push
pop
fsubs
sbb
fcomip
mov
add
xlat
mov
mov
orb
cwtl
push
xor
inc
cmp
in
cmc
lret
scas
cltd
inc
add
jne
int3
push
jnp
das
mov
mov
sub
fcomp
pop
push
lock
negb
stos
push
arpl
lock
loopne
in
mov
cli
mov
movsl
push
hlt
aam
lret
scas
sbb
xor
lcall
cmp
cwtl
lock
fnsave
push
or
stos
mov
xchg
jno
inc
lea
dec
imul
fisubrl
inc
xor
cmp
add
fwait
push
stos
jmp
xchg
jecxz
scas
daa
xor
mov
pop
gs
scas
inc
cmpsl
xor
mov
jne
in
inc
sti
adc
pop
cmp
iret
ret
sub
into
dec
out
int3
rorb
sbb
stos
inc
dec
cmp
jle
sbb
ror
push
cmp
adc
mov
pushf
push
std
and
cltd
cmp
es
jp
sbb
addb
sub
xor
dec
addb
add
add
cmp
jno
fwait
imul
pop
and
subl
movsb
or
fs
scas
adc
mov
ret
dec
mov
data16
out
in
dec
mov
mov
fildl
std
cmp
sub
pop
lea
mov
sub
xor
xchg
test
inc
adc
or
dec
decb
inc
cmp
in
xchg
and
mov
cmpsl
stc
jecxz
and
popf
push
lds
mov
adc
sub
cmpsl
dec
mov
pusha
imul
popf
lahf
sub
push
ja
add
pop
pop
mov
xor
mov
mov
nop
xchg
pop
jg
sub
adc
push
lahf
subb
shl
scas
insl
mov
imul
call
inc
xchg
adc
insb
shl
enter
push
data16
sub
dec
sub
aas
notb
mov
mov
aam
cmpsl
jge
repz
mov
dec
aaa
dec
cmc
inc
or
mov
adc
mov
mov
repz
imul
js
pop
int3
cwtl
fiadds
das
sbb
in
gs
pop
scas
adc
mov
mov
cltd
pop
cmc
and
sub
mov
lods
subl
nop
fs
incl
mov
loopne
mov
into
mov
mov
sahf
in
fiadds
mov
arpl
jmp
dec
cmpsl
sbb
imul
dec
add
mov
daa
ss
js
add
cmp
push
xor
dec
or
jo
hlt
adc
jno
fisttpl
aam
cmpsl
shrb
xchg
mov
mov
mov
sub
imul
into
sbb
es
movsl
push
sbb
mov
xchg
xlat
fcoms
movl
mov
lahf
xor
testl
bound
cmp
dec
adc
test
shl
adc
stos
dec
scas
int3
add
adc
jno
fisttpl
aam
jne
out
jbe
bound
dec
imul
lcall
add
fcoms
movl
dec
jl,pt
inc
push
pushf
push
adc
push
and
pop
sahf
bound
jo
pop
pusha
dec
pusha
iret
or
inc
fs
pop
jmp
adc
and
xlat
mov
inc
jp
hlt
pop
xchg
pop
pop
xchg
cmpl
fldt
mov
jno
add
or
push
mov
push
cmpsl
fbld
test
pop
scas
cwtl
or
push
sbb
mov
xchg
dec
orl
nop
int
jnp
sar
push
pop
rcr
into
dec
or
sbb
mov
and
xor
mov
cli
sbb
inc
call
fucom
push
out
and
push
fucomp
cwtl
xchg
out
sub
adc
lods
iret
cld
stos
stc
xor
lock
push
mov
mov
sub
nop
sti
dec
xor
jge
repnz
jne
lcall
push
cli
xor
test
and
add
jno
mov
ret
and
testl
bound
out
jno
stc
push
jne
adc
rcrb
data16
inc
xor
add
cmc
push
inc
nop
pop
lock
fnsave
push
dec
inc
insl
out
int
sbb
push
sahf
xchg
in
add
jp
xchg
es
test
sub
movsl
xor
xor
inc
lcall
xchg
scas
les
cwtl
lock
popf
xchg
inc
sub
or
cld
mov
add
mov
testl
bound
je
ret
lds
les
fisttpl
aam
mov
in
cmpsb
fstl
cmp
loopne
pop
xchg
mov
pop
dec
repz
jl
mov
out
cmp
test
dec
adc
push
adc
pop
sub
xor
xchg
cs
mov
add
ljmp
mov
leave
inc
sarl
sbb
add
pop
int3
push
add
sub
sub
in
aad
jmp
ds
push
cmp
sahf
aaa
repz
fstpt
and
mov
shll
dec
adc
adc
adc
pop
repz
movsl
cli
fdivr
xchg
sbbb
ret
mov
icebp
sbb
in
sbb
fidivrl
andl
dec
xchg
jg
incl
cmpsb
in
pop
adc
adc
fdivr
pop
stc
sub
pcmpeqw
stos
lods
rcll
loop
jns
stos
imul
rcrl
enter
jae
outsl
pop
mov
mov
orb
add
push
push
dec
sahf
jbe
lcall
arpl
jo
adc
clc
cmp
jge
pop
add
mov
jp
inc
push
jnp
rcl
arpl
mov
test
push
dec
push
data16
sub
and
jb
mov
lods
push
cmp
pop
sbb
movsl
scas
lods
outsl
mov
mov
xchg
push
ljmp
pop
mov
lods
mov
sub
sar
mov
lods
and
push
data16
sub
je
sarl
jmp
adc
cmp
push
popf
push
push
lcall
es
idivb
push
inc
pop
or
scas
stos
sbb
loop
in
jbe
mov
adc
adc
sbb
pop
mov
push
ljmp
js
sti
or
push
dec
imul
and
aad
mov
out
add
or
push
enter
push
aaa
cmpsl
pop
andb
cmp
mov
jmp
outsl
gs
movsb
jo
mov
sub
mov
mov
xor
jecxz
aam
popa
lock
inc
sub
or
std
pop
cmp
jb
mov
sbb
stc
inc
int3
sbb
sahf
bound
mov
xchg
cmp
cwtl
outsb
sbb
add
mov
or
mov
mov
mov
mov
stc
inc
mov
sbb
jns
mov
sub
adc
cmp
leave
lret
pop
cmp
sahf
in
sub
xchg
addl
int3
jmp
fnstcw
outsb
push
sub
js
push
mov
mov
dec
ja
mov
jb
fsubrl
push
out
add
inc
pusha
adc
xlat
pop
mov
sub
mov
fninit
inc
mov
mov
stc
mov
adc
pop
ss
das
jae
add
jge
lret
mov
inc
iret
imulb
inc
push
outsb
in
ret
sar
adc
xchg
je
das
into
or
push
repnz
or
pop
and
push
mov
and
scas
roll
icebp
sbb
or
es
shlb
sar
enter
ret
popf
push
add
orb
mov
stos
addl
test
das
xchg
sbb
mov
jb
ret
enter
pop
or
arpl
dec
stos
and
cwtl
sti
add
fildll
pusha
fldt
cmp
daa
addb
dec
sub
insl
inc
cmp
add
mov
push
push
data16
sub
add
into
cmp
mov
lods
and
adc
leave
mov
scas
jne
mov
jle
pop
lea
mov
xchg
jge
ficoms
insb
mov
movsl
xchg
jne
sbbb
insb
ror
fiadds
pusha
ficompl
cmp
push
push
cli
push
push
in
sarb
push
rcl
sbb
fsts
out
xchg
dec
popf
les
adc
test
add
sub
outsl
push
push
lcall
push
data16
sub
push
xor
dec
roll
ja
push
lock
sbb
decb
test
or
xchg
lock
in
push
data16
sub
les
mov
pop
sbb
ret
mov
inc
iret
sbb
test
xlat
sbb
test
jnp
es
fistpl
push
test
add
loop
xchg
xor
jnp
add
jle
ds
cmpsl
inc
in
call
sub
inc
adc
outsl
cmp
push
data16
sub
mov
inc
cwtl
jmp
cli
inc
or
fisubrl
outsl
cmp
and
xor
data16
xchg
gs
lods
es
cmpl
sub
pop
push
mov
data16
sub
mov
inc
cwtl
jmp
cli
inc
or
fisubrl
outsl
cmp
adc
pop
inc
cmp
ss
xchg
imul
push
jp
insl
dec
adc
pop
push
mov
data16
sub
lcall
aas
sti
dec
mov
xor
jne
in
lods
sbb
test
mov
jb
fwait
dec
fstp
hlt
gs
dec
xorl
mov
and
fcomps
adc
mov
push
stos
aas
adc
sub
cwtl
iret
hlt
out
hlt
cmp
add
or
jmp
ljmp
cmpsb
sub
inc
shll
dec
and
push
data16
and
leave
inc
cmp
test
lret
sub
ja
adc
xor
andnps
imul
insb
xchg
mov
out
je
and
fldenv
insb
fdivl
jg
mov
test
int
jge
in
or
flds
stc
imul
mov
adc
cmp
in
icebp
decb
inc
sbb
shll
mov
mov
mov
ss
adc
lds
sbb
bound
ret
js
repz
jb
les
hlt
jmp
ljmp
cmpsb
sub
ja
ret
xchg
adc
dec
test
aas
add
loope
pop
xchg
inc
xorb
pop
sahf
xor
pop
sti
les
loope
pop
xchg
out
rolb
js
mov
popf
mov
sbb
push
sub
and
aam
mov
dec
dec
push
data16
sub
jne
arpl
bound
pop
push
es
out
ret
push
push
xlat
aaa
adc
addr16
dec
lock
dec
call
add
sub
nop
das
popf
add
push
in
in
es
out
ret
push
push
loopne
popf
adc
roll
not
xchg
pusha
push
mov
pop
neg
fidivrs
inc
jge
cmp
loope
daa
imul
rcl
add
daa
sub
data16
sub
in
insl
imul
adc
pop
pop
push
dec
daa
out
ret
lcall
mov
inc
pop
out
push
jmp
inc
daa
hlt
cwtl
push
in
or
xor
je
repnz
fucomi
mov
pop
push
icebp
cwtl
xchg
adc
fdivp
cmp
pop
push
add
imul
stos
mov
add
fisubs
add
sub
xchg
loop
push
mov
cmp
aad
add
xchg
roll
fistps
or
das
in
cmp
mov
int3
adc
data16
xchg
insl
push
cmp
dec
xchg
xchg
inc
je
pop
mov
je
int3
ret
cmp
and
outsb
adc
bound
hlt
jmp
ljmp
cmpsb
sub
inc
rorl
sub
inc
add
cli
lret
jne
out
iret
jg
roll
andl
lret
and
sub
mov
inc
fucomp
cld
xchg
or
jne
addb
mov
or
inc
cmp
sub
adc
std
testb
or
jge
mov
stos
mov
js
pop
es
mov
adc
mov
pop
jae
fiaddl
push
xor
mov
sbbb
adc
clc
imul
pushf
int
xor
pushf
cmp
sbb
mov
and
adc
inc
push
sub
pop
xchg
jno
cmp
outsb
push
jbe
ret
jp
and
xchg
cmpsb
fs
filds
mov
dec
dec
xchg
inc
out
icebp
push
sbb
call
xchg
dec
popf
mov
lret
dec
jae
gs
dec
push
lds
test
jecxz
into
aad
xchg
outsl
out
cmp
xchg
push
movsb
pop
icebp
icebp
and
imul
push
test
xor
das
rolb
dec
addl
pop
mov
mov
fldl
xor
cmp
je
and
add
lea
movsb
testb
mov
imull
mov
push
scas
adc
popf
popa
fcomip
jl
add
adc
mov
jmp
add
adc
shlb
dec
dec
loopne
fstl
arpl
hlt
idivb
vpmaxub
or
adc
outsb
mov
mov
sbb
into
xor
mov
mov
movsl
je
add
cmc
push
sar
out
mov
mov
jo
sub
pop
enter
icebp
lret
sbbl
fldcw
push
and
test
push
data16
sub
out
shr
or
pop
add
pop
cmp
push
rcl
aas
jge
stos
popf
push
ret
and
sbb
dec
fs
ds
inc
popl
xchg
nop
mov
and
mov
or
mov
xchg
sbb
popa
cmp
jg
mov
inc
rorl
pop
or
imul
scas
lods
and
adc
push
mov
sbb
push
jnp
pop
mull
mov
sbb
mov
pop
xchg
outsl
sub
mov
push
dec
jge
jne
fistpl
movsb
fisubrl
loope
bound
mov
loopne
push
add
shll
mov
pop
pop
cmpsb
cmp
mov
pop
adc
pop
shlb
and
add
mov
in
mov
cld
add
pop
dec
inc
les
enter
icebp
mov
in
js
lret
and
cmpsb
dec
cmp
pop
mov
test
xor
jg
outsb
pop
cmp
out
movsb
clc
mov
test
fs
scas
and
js
rorb
lock
mov
dec
inc
sbb
mov
xor
and
jne
dec
add
dec
negb
mov
rorl
fs
int
stc
arpl
push
mov
loop
xor
mov
std
aam
jecxz
addr16
subl
mov
bound
aaa
mov
pop
xchg
hlt
sbbb
dec
cmc
dec
movsl
shrl
dec
pop
ss
das
mov
out
in
sahf
mov
es
orb
sub
stos
sub
xor
cs
clc
cltd
mov
std
int
mov
xchg
mov
jmp
sub
pop
sarl
add
or
xchg
or
mov
fistpll
mov
sbb
pop
inc
pop
mov
xlat
xor
inc
and
push
push
test
test
add
xchg
inc
int3
movsl
and
mov
ss
mov
mov
rclb
test
inc
or
loope
sbb
rol
xlat
imul
daa
shll
enter
xor
dec
popa
mov
xchg
and
mov
adc
xor
sub
loope
out
xor
xor
push
fisttpl
sbb
loopne
scas
lahf
push
int3
and
int3
andl
pop
outsl
and
push
pushf
pop
stos
outsb
mov
sub
sahf
inc
jecxz
or
lahf
xor
ja
xchg
subb
add
sahf
fs
clc
jnp
test
inc
pop
sbb
rcrl
rol
xlat
imul
daa
shll
enter
xor
dec
popa
mov
xchg
and
mov
adc
xor
sub
loope
out
xor
xor
push
fisttpl
sbb
loopne
scas
lahf
push
int3
and
int3
andl
pop
mov
inc
std
push
xlat
xchg
imul
ljmp
sti
mov
std
aad
pop
in
pop
dec
hlt
jl
arpl
lret
sbb
imul
daa
shll
enter
xor
dec
popa
mov
xchg
add
aaa
sbb
lcall
xor
sub
loope
out
xor
xor
jmp
pop
in
je
cmpsl
faddl
xchg
dec
ret
inc
inc
movsb
lret
mov
xchg
in
inc
mov
nop
push
jae
fistps
das
fcmovne
sti
mov
sub
mov
xlat
dec
xchg
pop
inc
dec
fisubrs
lret
out
push
fisttpll
lret
sbb
push
mov
iret
jno
and
test
mulb
repnz
adc
repz
dec
int3
out
cmp
pop
mov
outsl
cmpsl
jns
adc
sbb
xor
popw
nop
addr16
out
stos
mov
xchg
adc
mov
sbb
loop
add
adc
pop
stos
outsb
mov
sub
sahf
inc
jecxz
or
es
mov
pop
jmp
cmpsb
movb
push
test
and
leave
lods
fimuls
mov
mov
loopne
nop
mov
cmp
or
xchg
pop
add
mov
dec
iret
mov
test
inc
dec
cmp
inc
nop
cmp
int
mov
std
pop
dec
ja
mov
push
mov
sub
jnp
push
mov
call
mov
mull
mov
add
sbb
and
pop
lret
cmovo
popf
rorl
push
or
int
das
inc
inc
iret
and
mov
dec
pop
rorl
iret
cmpsl
scas
fldenv
adc
inc
mov
inc
xor
xor
dec
out
xor
in
sub
xchg
ja
shll
pop
sahf
pushf
loope
cltd
cs
cmp
fdivr
clc
inc
into
sub
xor
push
push
pop
mov
sub
jge
xchg
les
cmpsb
das
stos
jo
int
stos
imul
push
cs
jae
mov
imul
daa
shll
enter
xor
dec
popa
mov
xchg
add
aaa
sbb
lcall
xor
sub
loope
out
xor
xor
push
aas
or
add
jecxz
je
cmpsl
faddl
jae
and
repz
es
pop
daa
jbe
test
rcrl
inc
aad
lahf
push
enter
out
push
xchg
fcomps
fwait
mov
mov
das
add
aad
adc
dec
mov
icebp
movsb
bound
inc
sbb
stos
pop
or
into
vshufps
outsl
cmp
mov
fs
gs
into
lods
dec
cs
push
mov
mov
xor
pop
dec
into
add
jecxz
sub
dec
cli
xchg
hlt
scas
pop
lods
xor
cmp
int
add
imul
push
mov
nop
mov
inc
dec
stos
ljmp
je
in
mov
stos
test
jo
test
xchg
push
loop
pop
repnz
adc
mov
inc
dec
das
cmp
push
and
rclb
test
lods
dec
and
mov
xorl
adc
push
or
daa
jecxz
sub
dec
cli
xchg
hlt
scas
pop
lods
xor
cmp
int
add
imul
push
mov
nop
mov
inc
dec
stos
ljmp
je
in
mov
stos
test
jo
test
xchg
push
loop
pop
repnz
adc
mov
inc
dec
das
cmp
push
and
rclb
test
and
mov
pop
cli
push
pop
imul
xchg
adc
test
dec
and
sub
imul
enter
sbb
in
jne
outsb
ret
mov
inc
mov
cmpsb
jbe
rol
or
pop
sbb
into
mov
ds
fmul
jb
pop
push
fildll
jle
xor
ret
sub
dec
rcll
sub
shlb
inc
xchg
sub
cmc
fstpl
pop
or
fnstcw
out
jns
stc
fstpl
pop
test
cmpsl
or
mov
popf
ljmp
add
enter
sbb
popa
call
inc
xchg
mov
or
mov
fistpl
dec
dec
insb
out
movsb
aam
xchg
xchg
lret
aaa
push
icebp
xor
scas
dec
cmpl
lret
adc
or
dec
mov
or
cltd
cmp
dec
push
mov
mov
xor
add
mov
scas
mov
push
pop
repz
dec
jae
sti
popf
and
shlb
in
xchg
cltd
rcll
lcall
fstpl
and
hlt
jmp
ljmp
mov
inc
in
int
add
ret
mov
int
lcall
dec
insl
xor
pop
mov
push
lret
push
mov
iret
mov
inc
neg
lds
xor
js
inc
ficoms
mov
adc
push
bound
stos
dec
inc
mov
push
and
imul
sbb
cld
sub
in
jle
xor
mov
push
dec
xchg
adc
push
inc
psubw
aad
ret
out
lods
movsl
push
sub
fs
ror
and
arpl
push
out
lcall
stc
adc
std
test
push
enter
stc
push
xchg
stc
lahf
scas
push
out
cmp
aad
test
push
lret
jp
mov
sub
repnz
jnp
leave
add
adc
int
leave
lds
mov
and
imul
sbb
cld
sub
in
jle
xor
mov
push
dec
xchg
adc
push
inc
psubw
aad
ret
out
cmp
jbe
pop
inc
mov
repnz
push
inc
mov
cmp
add
sub
and
in
repz
loopne
or
push
and
add
ret
outsl
sub
iret
cs
jns
stc
mov
push
mov
cld
sub
in
jle
xor
mov
push
dec
xchg
adc
push
inc
psubw
dec
rorb
lret
mov
lahf
sti
push
popa
loope
es
es
enter
jp
xchg
adc
mov
add
push
fucom
inc
insl
mov
pop
ret
adc
or
or
jbe
jbe
dec
popf
jb
movsl
xcrypt-cfb
cmpsl
and
in
jg
adc
mov
xchg
jne
and
addr16
decl
mov
jmp
repnz
outsl
mov
outsb
jo
mov
or
aam
shlb
inc
sbb
inc
fcoms
stos
jg
fimull
xchg
mov
adc
xchg
or
int
js
in
inc
jl
xchg
movl
dec
cmc
pop
gs
fsubp
negl
jg
pop
stc
mov
imul
adc
int
out
sub
sub
lds
ss
mov
and
ja
jo
and
shll
mov
push
mov
mov
fs
testl
ret
add
cs
xchg
fwait
stos
pop
rolb
sti
mov
lods
pop
xor
jl
sbbb
pop
ja
fcomip
fs
clc
xchg
addl
out
and
dec
in
pop
xor
das
movsl
xchg
xor
cmpsb
and
pop
dec
pop
out
jge
mov
negb
xchg
adc
mov
sbb
loop
add
mov
jae
pop
push
andb
jae
push
cmpsl
rorb
mov
into
or
mov
adc
lret
xchg
sub
inc
fistpl
jp
outsb
jo
je
popf
aam
sti
sbb
rcl
inc
sbb
mov
add
test
jl
sbbb
lods
lock
pop
mov
inc
sbb
xchg
sub
cs
cmp
das
push
iret
mov
cwtl
imul
mov
call
sub
enter
push
aaa
negl
outsb
push
int3
out
mov
and
xor
call
bound
in
repz
add
enter
inc
jb
sub
stos
sub
sbb
inc
pop
push
mov
fstpt
xlat
dec
jecxz
cli
dec
sbb
or
mov
mov
jl
movsb
faddl
in
std
mov
xchg
lret
data16
xchg
adc
sub
fmull
mov
andl
call
shll
lcall
cs
push
jge
std
int3
push
in
push
and
xor
push
data16
sub
mov
icebp
dec
notl
or
xchg
in
xchg
adc
insb
and
or
hlt
in
leave
xor
imul
or
cltd
in
out
ljmp
test
push
sarl
xchg
mov
mov
loope
cmp
inc
enter
subl
std
cltd
dec
mov
data16
sub
mov
icebp
dec
notl
mov
daa
sbb
jmp
adc
sbb
xlat
jp
push
fldl
sub
cmc
jecxz
mov
push
imul
dec
lods
pop
ds
xor
hlt
sbb
aas
add
int3
test
sbb
data16
das
jecxz
data16
sub
insl
shrb
outsb
ljmp
push
cmp
test
pop
cmp
enter
fs
add
sub
test
shl
xchg
mov
xor
add
test
aas
popa
cmpsl
sbb
bound
ret
lods
mov
bound
mov
mov
jne
jnp
jg
mov
sub
pushf
ja
add
mov
lock
dec
jne
incb
test
sub
sub
icebp
inc
push
addr16
roll
sbb
xchg
sub
fsubl
xchg
push
pop
loopne
lods
push
icebp
orl
and
ret
push
inc
sub
stos
xor
sbb
cmc
dec
mov
mov
fcomip
pop
daa
shlb
mov
adc
int3
clc
fs
movups
movsl
push
cmp
in
mov
test
pop
push
dec
jnp
ret
lret
dec
xorl
or
mov
outsl
icebp
sahf
popa
jo
sub
lea
cmpsb
je
fstpt
mov
pop
lods
icebp
loopne
xor
mov
dec
lock
xor
xchg
nop
jbe
ljmp
push
inc
sub
leave
jl
xchg
dec
fcompl
adc
out
lahf
mov
pushf
xor
seto
jecxz
xor
pop
sub
shlb
std
test
lcall
aam
cmc
movsb
cmp
hlt
inc
inc
test
cmp
imull
mov
inc
pop
loope
cmc
sub
nop
or
addb
inc
cwtl
stos
mov
das
pop
inc
mov
xlat
mov
xchg
lods
mov
popf
sub
push
pop
adc
mov
mov
frstor
lods
mov
adc
imul
outsb
cli
inc
lret
popf
aas
aaa
mov
inc
adc
and
insl
jns
adcl
lds
add
pop
ljmp
xorb
push
pop
xlat
repnz
adc
mov
aaa
pop
dec
push
sub
mov
dec
xor
int3
ds
mov
mov
fnsave
sub
xchg
mov
dec
jb
cmpsb
cmp
cmpsl
rep
sbb
xchg
pop
inc
in
iret
mov
rcll
lock
lahf
xor
push
nop
mov
in
shlb
jg
daa
ljmp
lcall
pop
dec
pusha
pusha
cmc
mov
lret
cmp
cli
xchg
notl
data16
sub
cmp
jl
daa
mov
dec
aas
xchg
lds
dec
inc
and
add
jo
cmp
push
cmp
xchg
in
loope
push
lret
or
loope
mov
dec
xchg
push
pop
lahf
jge
cmp
xor
std
rol
filds
mov
stos
sub
xchg
dec
mov
test
cld
scas
stos
fdivrs
mov
cmc
mov
cmpsb
push
jg
jne
mov
ret
adc
sub
or
movsl
add
imul
cmp
push
lcall
pop
mov
int3
and
outsw
repz
cwtl
cmpsl
push
shr
mov
or
push
mov
adc
push
data16
sub
dec
into
push
je
fldcw
sbb
jmp
iret
or
xchg
adcl
repnz
mov
scas
pusha
pop
jl
xchg
inc
mov
bound
ljmp
sub
popf
cld
call
outsl
gs
jmp
arpl
sti
xchg
stos
fisttpll
test
daa
and
outsl
addr16
mov
jns
jp
jmp
fisubs
test
pusha
subb
fstpt
pop
jecxz
mov
jp
sbb
cmp
mov
dec
and
mov
arpl
sub
push
data16
sub
push
xchg
inc
ja
or
loop
jge
mov
jnp
fs
rolb
cmp
addl
and
sbb
and
popa
inc
les
xor
ljmp
gs
cmc
push
xor
in
ficompl
xchg
inc
popf
push
mov
xor
sbb
ljmp
popa
inc
mov
dec
mov
cmc
and
push
jecxz
xchg
and
out
pop
pop
inc
mulb
fnstenv
adc
pop
fbld
popa
roll
sahf
test
mov
mov
and
xor
fidivs
aaa
lea
push
gs
test
ja
sub
fsubrp
push
sub
sbb
lea
lcall
in
test
mov
xorl
pushf
outsb
add
rclb
inc
cltd
scas
test
aas
cmpsl
int3
mov
add
bound
lods
adc
pusha
jns
mov
cmpsb
push
outsl
cmpsb
push
jb
mov
xchg
pusha
rorl
dec
and
shl
mov
clc
cmp
dec
adcb
js
ds
int
and
movsl
cmp
push
sbb
pop
add
ds
sbb
cmp
sub
les
rolb
pop
mov
push
adc
sbb
and
hlt
test
daa
rcrl
inc
push
push
jo
sbb
sub
xchg
hlt
gs
scas
xor
aam
lods
adcb
jno
pop
lret
shrl
addr16
pop
push
xchg
push
loop
pop
repnz
adc
mov
inc
dec
das
cmp
popf
cmpsl
and
pusha
decb
test
lods
sub
faddl
push
stos
jne
aad
xor
mov
lds
fstpt
aad
mov
mov
shll
add
or
test
aaa
aam
and
and
hlt
inc
xchg
xlat
dec
sarb
imul
out
rolb
fisttps
aas
in
jl
push
mov
mov
push
xor
repz
push
xchg
jbe
daa
pop
inc
out
mov
mov
and
push
cmpsl
xchg
and
enter
lahf
syscall
ss
mov
lods
jmp
dec
int3
icebp
inc
or
adc
xchg
or
and
sti
mov
adc
xchg
jae
push
ret
jne
ja
lods
mov
mov
xchg
and
mov
loop
mov
pop
sti
and
and
or
cltd
punpcklbw
inc
cs
flds
xor
and
xlat
add
aad
faddl
lods
add
ja
pop
in
pop
add
adc
mov
int3
push
out
imul
sub
roll
addb
and
dec
jecxz
add
out
sub
negb
dec
xchg
push
mov
in
mov
lods
into
xor
notb
and
hlt
out
popa
xor
pop
fildll
pop
sbb
pop
lahf
dec
lret
xor
sub
or
les
cwtl
jg
xchg
push
cmp
mov
push
mov
sahf
aas
or
add
pop
fldt
vpshad
xor
lods
repnz
ja
orb
fs
pop
push
xchg
jns
es
sbb
icebp
sub
lds
adc
add
aad
faddl
lods
add
ja
pop
in
pop
add
adc
mov
int3
push
out
imul
sub
roll
addb
and
dec
jecxz
add
out
sub
negb
dec
xchg
push
mov
in
mov
lods
into
xor
notb
and
hlt
out
popa
xor
pop
fildll
pop
sbb
sub
fsubl
push
test
and
push
repz
mov
and
mov
scas
jne
or
call
xlat
js
out
jae
mov
fistps
push
sub
dec
cmpsl
jae
clc
repnz
mov
jne
cmp
repz
arpl
int
xor
dec
repz
xchg
notl
or
lcall
in
movsb
ja
cmp
jno
push
out
aaa
xchg
jnp
push
pop
ret
push
adc
cmp
clc
pop
dec
fmul
out
sbb
jle
icebp
mov
clc
jae
xchg
int3
pop
movsb
sub
add
das
sbb
xor
scas
pop
nop
pusha
repnz
cli
clc
ss
lea
lds
int3
xchg
lcall
adc
aaa
outsl
mov
gs
scas
mov
repnz
dec
cmpsl
js
mov
imul
xor
idivl
push
dec
in
sbb
stos
mov
insb
jge
sub
into
popa
mov
xchg
inc
gs
mov
stos
je
mov
std
pop
xor
adc
or
mov
ds
mov
jo
push
lret
frstor
cmp
rcrb
mov
orb
addr16
incl
dec
test
loope
shr
int
mov
ss
fstps
dec
push
test
xlat
mov
into
popa
mov
xchg
in
fldt
sbbb
adc
jmp
imul
dec
stos
jle
hlt
imul
rorl
xor
cmpsb
mov
int
or
lcall
test
xchg
mov
jnp
and
mov
aas
icebp
push
mov
push
jl
in
jb
inc
sbb
mov
popf
enter
and
stos
mov
pop
and
xor
shll
inc
call
aam
inc
aaa
js
insl
sub
add
das
sbb
xor
scas
pop
nop
pusha
repnz
cli
jmp
xchg
call
bswap
xchg
lcall
adc
aaa
outsl
mov
gs
scas
mov
repnz
dec
cmpsl
js
mov
imul
inc
add
xlat
pushf
push
pop
insb
fwait
xchg
jecxz
xchg
jb
jb
dec
enter
push
inc
lods
and
pop
inc
mov
lods
out
fdiv
adc
insl
cli
lock
clc
pop
dec
fmul
out
sbb
insl
pop
adc
std
cmp
pop
stos
dec
cmp
jmp
and
dec
ret
iret
shlb
cmp
insl
mov
adc
inc
xor
notb
mov
ja
test
sar
adc
loope
pop
push
mov
mov
xchg
cmpsl
inc
xor
popf
int
xor
cmpl
add
mov
or
sub
jp
xor
into
sub
dec
jno
stc
mov
push
lcall
mov
mov
cmpsl
inc
and
or
inc
clc
push
je
cltd
dec
mov
pop
in
shlb
pop
stos
aas
cmp
xchg
adc
add
insl
loope
and
cmc
cmpsl
sbb
or
outsl
and
jae
sbb
mov
fdivs
mov
mov
cmp
sbb
jecxz
dec
cltd
xor
js
jle
xchg
mov
xchg
inc
icebp
outsb
mov
xlat
dec
gs
popf
mov
inc
rol
push
adc
sbbb
dec
push
xchg
mov
jns
movsl
jb
adc
mov
ds
jp
and
and
pop
gs
inc
enter
pop
mov
daa
add
push
sub
and
data16
adc
ficoml
sub
rcrb
and
adc
inc
or
frstor
cmp
sub
cmp
pop
shll
adc
popf
lahf
and
sti
aad
dec
inc
cltd
push
cld
fcmovb
adc
inc
shll
aam
addb
fstpl
lcall
or
out
flds
fstl
lods
mov
push
lock
lock
push
cmp
push
or
sarb
cli
and
arpl
add
cld
inc
dec
adc
pop
ficoml
inc
ret
repz
jae
push
imul
stc
adc
pop
sti
sub
fdivs
lock
cwtl
cli
push
or
mov
adc
xchg
pop
cmpsb
in
adc
xchg
pop
cmpsb
out
into
add
push
push
mov
clc
daa
xchg
push
push
add
fwait
mov
ss
pop
scas
xchg
jb
jle
lods
and
pop
test
jb
fcomp
sub
addr16
divb
imul
aam
mov
bswap
scas
dec
mov
daa
jb
add
repnz
shl
bt
xchg
mov
sahf
pop
or
mov
pop
sbb
aam
mov
mov
ja
mov
pushw
adc
lahf
daa
std
xor
int
loop
push
mov
lock
adc
lret
sarb
sbb
adc
cmp
mov
cwtl
pop
push
inc
mov
ret
data16
aam
mov
push
mov
mov
fsts
ja
int3
mov
push
stc
subl
xor
push
mov
ds
sbb
xlat
inc
push
jbe
push
clc
cmpsl
cmp
push
movsb
sub
or
mov
push
movsl
push
mov
fcmovne
sub
sub
and
stos
shlb
sub
lret
mov
cld
sbb
xor
xchg
loop
jg
cmp
jmp
mov
sub
sbb
mov
sbb
push
jae
or
cld
cli
mov
int3
cmc
sti
popa
dec
jns
ret
xor
jp
fsubl
pusha
aam
daa
xchg
and
fisubrl
jecxz
je
pop
popa
pop
sbb
or
mov
push
sbb
out
push
dec
push
shrb
mov
push
clc
test
push
orb
sbb
mov
mov
adc
movsl
or
adc
mov
mov
loop
and
sbb
mov
mov
test
loope
or
inc
aas
outsb
pop
and
mov
sub
cld
fistps
movsb
imul
jl
stos
jmp
fcoms
inc
jae
ljmp
xchg
rcl
filds
xchg
call
sub
push
repnz
outsl
push
data16
mov
in
cwtl
push
mov
xchg
jno
add
in
ss
mov
into
sti
and
add
in
cwtl
push
leave
mul
push
je
pop
mov
ja
jnp
push
xchg
paddq
cli
mov
pop
dec
loope
sub
js
mov
adc
idivl
scas
fwait
shrb
xor
out
out
sbb
cmp
movsb
stc
push
pop
inc
decl
pop
xor
inc
xor
hlt
mov
hlt
mov
sub
mov
cltd
sub
jbe
xlat
pop
imul
je
mov
unpckhps
cld
arpl
stos
insl
sahf
adc
push
outsl
pop
rcrl
nop
lods
push
push
out
pop
or
loop
inc
lcall
das
and
ficoml
sbb
arpl
mov
push
pop
inc
decl
mov
dec
add
cmp
call
pop
stos
ja
incl
imul
mov
push
xchg
loopne
shr
in
push
and
outsl
pusha
inc
ljmp
push
dec
test
cmp
ror
ljmp
pop
rcr
ja
sbb
mov
shlb
xor
mov
ss
inc
mov
xor
sbb
cwtl
adc
mov
movsb
out
or
xor
inc
mov
pop
test
jge
and
testb
nop
aaa
jmp
push
jae
out
mov
cmp
mov
xchg
call
jge
jae
pop
cld
mov
mov
mov
adc
subl
aad
or
out
cmc
rclb
pop
jns
ret
cmp
lds
jnp
jb
mov
jg
mov
insb
sti
lret
test
inc
repnz
cmp
xor
jb
in
xchg
stc
ds
or
mov
mov
lcall
pop
enter
mov
lahf
notb
jbe
test
test
call
pop
shll
bnd
aad
sbb
incl
pusha
cwtl
pop
call
fimull
faddp
les
fwait
or
sub
add
add
lods
xor
dec
movsl
cmp
outsl
loop
mov
mov
shrb
pop
enter
repnz
into
push
stc
sbb
dec
jmp
das
pop
shll
bnd
aad
sbb
dec
icebp
cli
mov
hlt
in
jno
mov
lock
lret
int
mov
js
sub
test
xchg
inc
imul
call
pushf
jmp
mov
adc
jl
mov
dec
jp
xchg
jle
mov
into
data16
mov
xchg
lods
lock
cld
fstl
sahf
dec
dec
fisubrs
cmc
sub
cmp
dec
les
mov
mov
mov
sbb
inc
testl
or
mov
dec
mov
loopne
inc
mov
cmp
sbb
imul
shll
scas
pop
dec
and
ds
add
cmp
mov
or
cmp
fnsave
fwait
fwait
scas
cmpsl
in
pushl
call
push
mov
pop
xor
mov
daa
push
je
bound
adc
aam
mov
lahf
lock
insl
int3
cmp
dec
push
dec
cmc
in
adc
adc
cmp
ja
jmp
pop
xor
mov
push
jns
mov
stos
or
testl
or
pusha
xor
std
repz
push
ret
pop
stc
sub
jno
mov
sti
jp
in
cmpsl
pop
jae
fcmovnu
repnz
ds
sti
mov
outsb
xor
push
fcmovnu
repnz
ds
outsb
clc
and
bound
xchg
mov
ret
add
ret
fdivrs
jbe
in
test
stos
cld
int
fs
mov
outsb
and
sahf
jmp
xor
jmp
fwait
rcl
push
xchg
mov
sub
out
jnp
loop
enter
push
stos
dec
mov
test
pop
test
push
test
xchg
or
into
dec
pop
or
outsl
inc
dec
stos
and
les
jns
inc
xor
dec
popa
inc
ss
mov
data16
and
sub
int3
xchg
cltd
add
sbb
mov
mov
lcall
push
clc
in
and
nop
lock
xor
data16
sub
push
test
push
in
jno
mov
mov
xchg
push
fsubr
repz
or
rcrl
xchg
mov
sbb
xchg
cwtl
mov
test
jno
ja
scas
stos
xor
push
shl
fisubs
mov
sbb
mov
or
xor
mov
push
xlat
pop
out
mov
jno
jle
jae
incl
mov
jno
or
movl
mov
jno
imul
dec
in
xchg
or
insl
sti
pusha
push
adc
loopne
outsl
cmp
test
fstps
sahf
xor
mov
adc
and
jnp
sbb
je
inc
ja
lret
mov
push
shrb
je
popa
shlb
mov
je
jg
test
xor
cmp
ds
adc
pushf
mov
scas
push
mov
mov
and
test
icebp
mov
pusha
jo
adc
inc
xchg
pop
add
stc
add
adc
jne
mov
dec
popa
jno
arpl
sub
mov
jae
test
mov
cs
pop
loope
int3
negl
mov
cmpsl
inc
add
ljmp
dec
out
dec
aas
sbb
push
mov
sbb
clc
inc
pop
xor
push
jno
in
jno
ret
push
in
xor
stc
adc
int
dec
imul
leave
inc
and
loope
les
test
loop
xchg
mov
xchg
sub
push
jge
cmp
pusha
push
mov
filds
cmp
aas
scas
adc
add
rcl
adc
arpl
icebp
dec
push
adcb
mov
addr16
xchg
lock
mov
push
adc
jae
leave
jmp
push
out
jp
cmp
jp
xorb
es
pop
dec
push
push
and
and
push
insb
aas
arpl
mov
cmp
rorl
cmp
push
lea
jmp
pop
fmuls
inc
fcomi
adc
cmp
push
mov
jecxz
add
cmp
jge
mov
shlb
xor
pop
or
arpl
scas
pop
sbb
or
arpl
outsl
push
loopne
insb
adc
insb
jge
inc
shrl
loop
out
dec
mov
lds
rorb
outsb
jns
mov
in
int
inc
sub
in
loop
xchg
dec
push
pop
push
ficomps
mov
inc
leave
lea
push
xchg
xor
negl
shlb
mov
push
pusha
mov
lds
add
popa
jecxz
cli
cmp
js
xor
fnstsw
stc
hlt
xchg
xchg
or
scas
or
fidivrs
jb
inc
inc
push
adc
cltd
cltd
arpl
jge
jns
fs
jo
lahf
stos
ficompl
dec
rcrb
jecxz
xor
addl
dec
cmpsl
in
xchg
mov
pusha
add
out
je
sub
jne
mov
jbe,pt
scas
or
ljmp
dec
rcrl
and
pop
out
lret
jle
cmp
adc
add
xor
rol
sub
rcrb
clc
sbb
pop
das
aaa
dec
xchg
popf
imul
mov
dec
pusha
in
and
push
xchg
or
add
or
loop
mov
shrl
mov
jl
cmp
lea
call
pushf
lcall
lcall
pop
xchg
cmp
dec
lds
and
xor
scas
repnz
dec
loopne
inc
pop
std
and
cltd
inc
jmp
aad
imul
mov
add
enter
push
in
js
mov
dec
repnz
out
insl
loopne
cmp
adc
and
mov
mov
and
insb
mov
scas
mov
cmp
adc
cmpsl
xchg
lods
push
popa
daa
fs
inc
push
pop
pop
mov
lea
pop
sbbl
pop
adc
add
frstor
enter
ret
roll
add
loopne
sbb
xor
out
sub
xchg
ljmp
lret
push
sbb
cld
out
stos
clc
pop
outsl
sti
pop
icebp
bound
stc
xchg
pushf
test
and
sub
test
and
cmp
jns
inc
adc
push
jno
adc
jo
add
jne
mov
addr16
xor
mov
jno
add
dec
cmp
stos
in
mov
repnz
mov
cmp
ds
jbe
sbb
mov
ret
sbb
pusha
adc
sbb
pushf
in
dec
dec
or
push
pop
and
pop
mov
mov
daa
js
inc
repnz
iret
push
push
out
bound
push
data16
sub
out
inc
pop
in
test
and
and
scas
test
std
or
dec
leave
pop
lods
and
sti
or
insb
insb
pop
out
add
data16
sub
pushf
repz
cmp
xchg
push
rorb
out
or
call
ja
cmc
cmpsl
sbbl
pop
js
pop
sub
push
mov
lret
add
pop
shll
stos
inc
adc
arpl
jnp
into
sub
ret
jmp
cwtl
lds
mov
sub
or
mov
xor
leave
adc
movsl
and
push
sub
aad
enter
andb
xor
enter
xor
mov
je
mov
inc
mov
sbb
push
loop
je
aam
mov
dec
xor
daa
cltd
cmp
mov
sbb
and
pop
mov
out
dec
les
and
push
hlt
in
arpl
stos
out
fstps
mov
or
lret
inc
mov
fnsave
dec
mov
push
sti
cltd
push
in
pop
mov
int3
sti
jge
call
or
xchg
mov
push
mov
sahf
pop
xor
xchg
push
adc
in
lret
adc
mov
push
jp
rcrb
aad
sub
xchg
cs
mov
aam
pop
leave
jo
and
or
rcrb
icebp
shll
test
xor
xchg
adc
pop
cmpsb
mov
loop
cmp
sbb
test
xor
imul
dec
int
sub
inc
inc
in
movsl
loope
sbb
or
mov
sub
ja
mov
inc
aad
add
pop
nop
add
fmull
lds
fcomip
loop
adc
es
jecxz
loopne
push
test
mov
xchg
or
cmpsb
addr16
xlat
and
scas
mov
lret
mov
mov
or
inc
in
movsl
add
push
int
movsb
push
lcall
sti
scas
mov
jmp
iret
cwtl
stos
call
stos
push
adc
xchg
and
mov
rcrb
aad
inc
mov
loop
imul
fimuls
lods
adc
sbb
sbb
and
push
dec
cwtl
mov
xchg
xlat
jmp
jmp
mov
idivl
or
dec
adc
xchg
xor
movsl
mov
push
scas
popa
faddl
adc
pushf
adc
nop
pop
mov
fists
jo
push
inc
outsl
into
fcmovnbe
xor
pop
mov
dec
and
jns
imul
xchg
xchg
sbb
lods
aas
push
lea
xchg
je
aad
sahf
pusha
sub
add
jl
or
test
mov
addl
aaa
enter
push
sahf
adc
sahf
xorb
fbstp
push
mov
push
ffree
push
mov
dec
mov
cmp
inc
or
hlt
fs
fcompl
cmp
inc
xor
jmp
xchg
mov
pop
loope
mov
cltd
punpckldq
or
sub
jp
std
mov
test
and
jne
jp
rcll
sti
sbb
into
mov
arpl
xorl
push
decl
data16
push
push
dec
sub
out
cmpsl
mov
mov
and
clc
cli
push
andb
je
scas
cld
repz
int
mov
cli
pushf
jecxz
lds
je
leave
aas
leave
jnp
pop
shlb
xor
mov
xor
cmpsl
out
icebp
cld
xlat
sub
mov
loopne
rorl
stos
and
and
andl
bound
push
aad
jmp
jno
xor
lcall
fidivrl
mov
or
cmpsb
push
nop
push
daa
je
lods
mov
dec
dec
xor
ja
clc
fabs
mov
push
lahf
push
and
xchg
shlb
mov
fdivs
or
leave
in
or
leave
mov
xchg
cmpsb
mov
cmp
cmp
sub
sbb
xchg
add
les
into
mov
loopne
jbe
xchg
ret
cmpb
adc
push
aam
jae
and
mov
push
data16
sub
pop
cli
out
fldt
mov
scas
push
jae
cli
push
and
mov
popf
and
dec
movsl
data16
mov
sub
jl
jno
aad
repnz
ds
cmp
jge
int
push
mov
pop
ja
lods
shll
out
pop
and
stos
xor
inc
les
fisubs
mov
sbb
xchg
xchg
cwtl
add
fldl
sahf
jo
xor
xchg
and
inc
nop
arpl
iret
inc
hlt
rcrb
movd
repz
or
test
int3
clc
mov
in
sub
push
iret
rorl
in
in
ljmp
rcll
push
fwait
and
gs
ljmp
push
push
outsl
je
jb
mov
les
jo
mov
push
das
sahf
jge
xlat
inc
scas
ljmp
nop
cmp
xchg
imul
sbb
rol
push
cmp
pop
frstor
jne
lea
cmp
sahf
push
mov
mov
shlb
xor
loop
call
or
into
mov
mov
leave
inc
fsubrl
out
or
cmpsb
cmpsb
xor
std
mov
clc
inc
mov
test
lods
repnz
test
push
cmpsb
leave
pop
fistpll
lret
stos
jmp
push
inc
xchg
pusha
mov
sub
icebp
cli
jo
es
call
jb
adc
iret
out
adc
arpl
ss
cmp
sahf
add
pushl
pop
lcall
repz
roll
inc
xor
pop
test
sbb
mov
fldl
clc
arpl
movsb
cwtl
xchg
pop
subb
fwait
ret
mov
jns
push
mov
and
xchg
or
dec
xchg
or
bound
mov
or
xchg
adc
cmpsl
loop
cmpsl
mov
xor
ja
and
in
lahf
sub
jle
pop
mov
push
and
enter
add
lcall
divb
imul
hlt
mov
jo
ret
nopl
jmp
jl
icebp
mov
popf
push
or
test
cmpsl
dec
iret
mov
cmp
jp
mov
add
ds
negb
or
mov
dec
mov
fisttpl
inc
mov
lcall
out
sbb
fs
jle
mov
cmp
movsb
jbe
inc
imul
add
je
testb
into
dec
and
test
dec
popa
lea
and
and
insb
movsl
push
or
faddl
lock
dec
imull
jle
mov
jo
sub
idivl
sub
repnz
push
icebp
mov
das
call
ret
cmpl
fdivl
cmp
minps
mov
dec
xor
cmp
cmp
adc
mov
or
ficoms
dec
mov
cli
xchg
pop
loopne
dec
call
pop
mov
test
gs
jno
loopne
repnz
inc
out
les
scas
loopne
fstl
mov
cltd
inc
inc
fs
adc
sub
xchg
rcr
aaa
icebp
xor
inc
mov
mov
push
jecxz
je
cli
aaa
add
mov
mov
pop
scas
pop
int
dec
clc
jae
data16
lds
popa
xchg
cltd
cld
in
sbb
push
and
pop
rcl
push
data16
sub
clc
xchg
inc
mov
xchg
std
pop
add
arpl
and
nop
inc
in
push
mov
pop
push
repnz
mov
sub
push
gs
mov
gs
push
data16
sub
mov
pop
pop
cmp
jo
jle
nop
xchg
pusha
pop
lods
mov
leave
xor
scas
sbb
adc
cmpsb
jo
cmp
movsl
cld
lods
mov
inc
idivl
or
testb
in
rcl
xchg
out
inc
xlat
out
fwait
loopne
cmp
sub
lea
xchg
pop
in
jb
les
fidivrs
sub
int
dec
or
xor
fstl
fwait
cs
add
add
jecxz
fcoml
cmpsl
fldenv
stc
bound
xchg
sbbl
jae
rcrl
outsb
jecxz
pop
inc
mov
shl
jb
xor
cmpsl
sbb
mov
out
int3
inc
dec
int3
mov
jno
dec
call
das
dec
fmull
mov
test
push
push
dec
xchg
leave
xorl
popa
jge
daa
aaa
lods
aaa
out
xor
jmp
mov
adc
sbb
lods
jno
dec
mov
and
push
das
mov
mov
cmp
push
insb
inc
incb
mov
jbe
imul
cli
imul
sub
dec
pushw
ret
movsl
add
pop
pop
or
outsl
rclb
inc
mov
repz
xor
int
test
je
push
mov
dec
popf
call
jbe
dec
shlb
and
jmp
mov
fisubs
roll
jmp
mov
pusha
sub
outsb
push
insb
xchg
sbb
inc
push
dec
movsl
leave
or
aam
xchg
xor
pop
mov
call
pop
scas
xchg
sbb
xorb
stc
mov
cmc
sub
cmp
jbe
mov
aad
push
int3
push
push
imul
xchg
les
push
jp
ds
bound
fists
shlb
repnz
xor
xchg
xor
aas
pop
test
xor
jae
xor
cmp
into
adc
adc
cmc
sub
pop
out
aaa
popf
insl
test
gs
pop
enter
movsb
test
popa
iret
test
mov
je
ret
shrb
mov
push
repnz
je
cs
jns
jb
out
inc
jl
cs
dec
inc
sub
cmp
imul
push
into
pop
outsl
and
fsubl
test
imul
mov
icebp
pop
fwait
and
pop
mov
hlt
dec
loop
or
xchg
repnz
lea
mov
dec
bound
scas
fisubl
mov
subl
inc
rol
aam
pushf
fs
subl
jg
fnstsw
aam
mov
or
pop
into
jne
jne
jl
dec
roll
test
data16
jge,pn
push
inc
push
stos
or
test
repz
cld
lods
mov
stos
enter
jl
scas
lea
sbb
push
inc
jno
inc
jne
and
and
fsubrs
xchg
and
in
mov
mov
outsb
rcrb
jg
and
enter
stc
js
xchg
lret
fimuls
je
mov
mov
daa
movsl
xor
or
mov
std
dec
sbb
popa
sbb
stos
lock
in
pop
daa
loope
xor
cmp
aas
cmp
mov
mov
xor
dec
dec
cmp
and
fsub
xorb
loope
js
lret
mov
pop
xor
xchg
sbb
sbb
or
out
sbb
mov
orb
mov
aad
das
mov
pusha
stos
mov
jnp
mov
enter
jl
and
xchg
iret
xchg
enter
jl
jmp
and
inc
mov
cmp
pop
push
dec
adc
or
add
push
push
mov
int
push
xrstors
or
inc
call
jne
jo
adc
dec
ret
pusha
pushf
mov
pop
xchg
pop
movsl
or
or
sbb
xchg
aas
xchg
push
rcll
mov
mov
sbb
insb
mov
les
sbb
jecxz
lret
cs
mov
sub
mov
js
xchg
push
clc
mull
js
xchg
pop
fdivrs
testl
sbb
fisubl
jb
shrb
arpl
sub
jo
and
adc
leave
adc
stc
jbe
ss
cli
add
in
cmpsl
test
jp
lock
cmpsl
es
pop
sub
dec
idivb
repnz
sub
rcll
fucom
jp
and
add
mov
clc
xor
adc
pusha
mov
xchg
cs
pop
mov
mov
lods
popf
stc
pushf
aad
imul
cmc
dec
jmp
and
cmp
and
xchg
hlt
mov
pop
fistl
shrl
out
stc
pop
out
fidivl
aad
mov
in
stc
mov
jl
sbb
mov
pop
cld
sbb
les
mov
push
push
adc
or
loopne
lods
rorl
xchg
in
cmp
and
ljmp
sbb
je
addr16
roll
xchg
adc
scas
or
sbb
xchg
add
ljmp
cmp
jmp
add
jg
sbb
lret
sbb
scas
jo
es
cltd
inc
pusha
out
jmp
lret
xchg
fcoml
popa
stos
jne
hlt
cmp
adc
xor
mov
orl
xchg
fstl
push
pop
dec
add
shlb
and
jg
sahf
fimull
jnp
out
imul
stos
push
fldt
shll
pushf
fisubs
mov
out
scas
adc
in
inc
cld
mov
cmpsb
cli
adc
adc
mov
adc
out
sti
pop
add
test
les
insl
addr16
inc
jg
jne
es
pop
arpl
daa
xchg
jns
jne
sbbl
lret
scas
dec
xchg
enter
dec
or
outsl
imul
adc
xlat
movsb
shrl
and
sub
pop
lds
daa
dec
adc
jmp
lods
mov
rcr
jecxz
fsubr
jmp
and
mov
mov
push
sub
sub
insl
or
pop
cltd
sub
sub
ret
clc
repnz
mov
adc
push
movsb
into
and
cwtl
xchg
in
adc
sbb
fldl
ret
jg
dec
dec
int
call
inc
inc
and
test
xchg
mov
xchg
adc
repnz
xor
jmp
mov
jmp
cmp
stos
lods
lds
push
nop
mov
loope
xchg
es
fildl
sbb
shlb
add
push
aaa
fidivrs
dec
pop
push
jge
dec
pop
mov
sub
ljmp
dec
mov
in
xor
pop
dec
pop
jns
jmp
sahf
jbe
shlb
mov
xor
shlb
push
pop
mov
scas
dec
imul
mov
shll
lcall
cmc
mov
jne
out
mov
mov
inc
pop
es
fidivs
lock
jmp
ljmp
addl
push
in
sub
adcb
loopne
fxch
mov
push
push
mov
and
leave
das
call
push
stc
xor
cmp
mov
jmp
mov
and
pop
shll
add
cmp
inc
sub
pop
and
jo
or
inc
fcompl
and
faddl
adc
jns
cld
dec
out
hlt
addl
xchg
and
and
scas
scas
in
and
lcall
add
lret
inc
dec
rcrl
cmp
icebp
dec
dec
pushw
adc
scas
imul
out
shrl
and
test
inc
sti
stos
cmpsl
mov
mov
cmc
xchg
lods
scas
pop
mov
ret
aaa
jne
insb
out
test
repz
rol
aad
repz
movsl
fld
pop
test
jl
mov
push
call
mov
pop
sbb
xchg
ud1
jb
das
xor
mov
sbb
repnz
inc
cmp
inc
out
neg
mov
cmp
mov
fsubrl
jecxz
mov
xchg
hlt
mov
inc
mov
lea
xchg
sbb
std
push
mov
inc
aas
fsub
pop
add
add
jo
dec
lret
mov
je
aaa
lock
sub
leave
xchg
pop
xorb
cmp
cmc
aaa
fbstp
mov
lret
out
pop
inc
mov
icebp
mov
jmp
and
mov
inc
ficomps
add
pop
dec
jne
mov
sub
push
test
push
cmpsl
or
cmc
pushaw
movsl
movsl
jp
inc
pop
lret
test
sti
insl
outsb
jbe
pop
out
sub
dec
subb
xor
xchg
xor
and
js
out
movb
pop
add
dec
xlat
mov
imul
adc
sahf
clc
addl
and
mov
push
inc
pop
jle
or
lods
jne
xchg
xchg
mov
mov
popa
ret
cmp
test
loope
ret
pop
adc
pop
loop
insb
cmc
inc
call
pusha
rcrb
add
adc
int3
mov
jmp
dec
mov
cmpsb
xchg
loope
aam
je
test
cmp
mov
mov
inc
out
pop
test
add
jbe
fcmovu
andb
mov
mov
dec
jl
fcompl
cmp
ljmp
enter
cmp
test
inc
cmp
inc
push
mov
loop
adc
fmull
inc
dec
mov
mov
clc
xor
testb
mov
adc
jmp
inc
xchg
cmp
dec
shlb
or
or
or
jb
push
les
arpl
lret
xor
andl
add
add
ljmp
fucomp
cmp
leave
leave
mov
out
pop
mov
jnp
out
add
icebp
push
in
mov
int3
or
dec
in
lahf
sub
sub
arpl
cmpsl
xchg
ret
dec
leave
icebp
mov
inc
lcall
loop
cs
dec
add
rcr
xor
xlat
adc
xchg
bsr
icebp
sub
push
addl
arpl
jne
outsb
inc
xchg
and
fiaddl
enter
out
lds
inc
mov
call
lods
sti
sub
xchg
inc
xor
jl
in
xchg
lret
push
pushf
jg
jae
les
and
cmp
jmp
sbb
out
adc
cmp
int
mov
scas
jle
iret
aam
sub
loop
add
push
pop
adc
bound
imul
inc
je
pop
xchg
shrb
dec
jnp
js
dec
xchg
rcrb
sub
sti
adc
inc
popf
pop
stc
cmp
mov
test
fimuls
mov
and
aad
inc
repz
ret
jb
jp
mov
mov
mov
repz
xor
xlat
fldl
jns
jp
add
fidivrl
adc
or
jns
scas
sbb
mov
dec
pop
nop
sbb
pop
popf
lsl
xchg
je
adc
jo,pn
mov
pop
mov
push
pushaw
jns
mov
mov
add
rorb
movsb
sbb
les
sub
lds
lret
scas
out
add
xchg
sbb
pushf
mov
jnp
cltd
fwait
xor
pmaddwd
adc
testb
out
xchg
cmp
sub
test
loop
inc
test
hlt
pop
dec
or
movsb
mov
add
inc
in
lock
fdivrs
mov
dec
into
out
pop
pop
sbb
imul
lock
cmp
mov
stos
jne
addr16
pop
pusha
push
push
stos
lods
out
cmp
push
mov
adc
add
imul
mov
sbb
dec
in
jne
mov
shrl
mov
mov
mov
push
test
pop
hlt
pop
cmp
mov
adc
gs
test
jnp
add
sbb
stos
mov
mov
enter
fdivs
cwtl
pop
cmp
mov
add
adc
aaa
fldl
sti
fwait
fs
rorb
sub
data16
cmp
cmpl
pop
and
xchg
pop
pop
das
add
iret
add
inc
cwtl
xchg
int
cld
enterw
mov
popf
fiadds
shr
cmp
cmp
repz
push
arpl
outsb
clc
add
pop
lret
xor
dec
jmp
repz
jno
mov
cmp
cmp
dec
ficoms
sub
or
push
and
pop
pop
sbb
push
js
jno
dec
cmpsl
jg
push
aad
xor
icebp
inc
imul
pop
insb
sbb
lcall
adc
adc
enter
mov
inc
adc
or
dec
shrl
mov
stc
call
and
xchg
mov
fcmovu
xor
fwait
adc
pop
pop
das
add
lock
jnp
cmp
jo
sbb
add
sbb
test
test
rorl
dec
ficoml
lcall
cmpsl
aaa
push
cmp
imul
dec
push
test
psubd
sti
mov
cld
sub
mov
push
xor
test
mov
inc
leave
jl
adc
testl
ret
lahf
xor
fcoml
pop
orl
adc
adc
adc
imul
cmpsb
jmp
jae
mov
call
add
inc
neg
out
jecxz
stos
jmp
sub
int3
jp
sbb
cld
dec
test
xor
xchg
dec
adc
clc
dec
push
pop
fbld
jge
insb
dec
mov
adc
and
icebp
enter
nop
xor
mov
imul
rorb
into
push
inc
aam
sbb
push
add
roll
push
jnp
repnz
jo
dec
or
outsl
stc
loope
push
mov
adc
lock
lods
mov
jecxz
stos
mov
and
mov
mov
and
jecxz
dec
daa
lcall
ss
enter
arpl
fcomps
push
adc
jae
lret
cld
aaa
loop
xchg
loopne
aaa
pusha
loop
push
pop
or
pop
jp
jbe
lock
adc
jp
mov
mov
dec
sbb
mov
jbe
pop
sub
sbb
fadds
pop
push
lahf
adc
call
fwait
int3
lds
push
subb
jl
test
ja
lods
stos
in
ds
loope
cmp
ds
call
aam
sbb
push
sbb
sbb
mov
shll
lds
lcall
stc
jecxz
jg
lock
mov
outsl
jae
add
jmp
not
lods
cmp
xor
cld
mov
pop
cmp
icebp
push
ret
cltd
cld
add
notb
imul
les
lods
push
jmp
int
lahf
js
push
mov
shlb
add
pushf
fbld
dec
leave
sub
test
stos
cltd
nop
add
add
js
xchg
ja
and
test
inc
lcall
adc
jl
or
jo
fwait
push
in
or
fisttpl
cld
pop
push
xchg
mov
mov
mov
inc
adc
mov
test
add
adc
dec
fistpll
mov
fisttps
out
dec
fsubp
out
mov
jp
mov
ret
sub
fsubs
dec
xor
xchg
sbb
stos
adc
xchg
or
jae
test
or
or
xor
lods
or
dec
loopne
fwait
lret
push
cli
out
dec
shll
inc
sub
clc
les
add
xchg
aas
es
ffreep
xchg
dec
lods
xchg
push
leave
lahf
or
scas
sub
xchg
enter
aaa
cli
xchg
ret
aad
adc
orl
mov
fisubrs
pop
stos
dec
pop
pop
xchg
xchg
push
push
pop
stos
sbb
mov
inc
divb
xchg
jle
lods
mov
ds
sub
es
js
pop
or
loop
fdivr
sarb
das
repz
and
movsb
push
pop
xor
pop
dec
ret
mov
in
push
sub
repz
sub
aaa
push
lods
pop
cmpl
cmp
imul
mov
aad
push
add
cmp
rorb
xchg
test
sbb
jp
lcall
mov
pop
lods
mov
loope
adc
cli
outsb
pushf
or
add
ret
test
fsts
push
imul
mov
jnp
inc
fcomps
jo
jnp
mov
sar
scas
ljmpw
ret
cmp
popf
mov
hlt
data16
popf
inc
test
addr16
out
xchg
daa
ds
negb
mov
and
test
movsl
lret
test
push
fbld
pop
fwait
sahf
mov
stos
jge
scas
or
cmp
cmp
pop
loop
in
or
cmc
adc
dec
adc
push
xor
rorl
ja
sub
jno
rcrb
mov
out
andl
insl
lods
add
or
push
inc
ret
cmp
stc
repz
jae
js
mov
push
mov
stos
das
jl
aas
scas
mov
or
jae
pushf
jae
jg
fstp
std
pop
pusha
loope
pop
mov
jecxz
call
test
xor
inc
pop
ficomps
jno
xchg
aad
xor
pop
jne
sbb
pop
out
dec
jg
jle
dec
push
pusha
fdivrl
dec
mov
mov
sahf
popa
and
xchg
adc
aad
mov
dec
cs
fs
mov
dec
push
loopne
inc
mov
call
cmpsl
and
dec
jp
test
pop
out
mov
xchg
jae
jmp
pop
mov
int
mov
mov
inc
inc
pop
ljmp
and
xchg
xor
push
and
cmc
pop
scas
leave
or
ja
xor
icebp
or
fisubl
cmp
insb
push
jns
stos
pop
xor
inc
or
add
mov
jg
mov
daa
jg
xor
mov
movsl
inc
repz
les
pop
mov
aas
in
cmpsb
out
shrl
repz
fisttpl
rorl
clc
pop
jle
sub
mov
mov
insl
push
dec
inc
and
xchg
outsl
or
and
out
adc
xor
int
insb
scas
jnp
xchg
pcmpeqd
jns
push
mov
or
mov
cmp
stos
popa
pop
ja
repnz
scas
inc
mov
bound
incb
xor
pushl
and
jp
enter
es
mov
xor
adc
hlt
inc
sub
mov
jl
xor
and
adc
dec
dec
leave
mov
ds
jp
insl
hlt
or
or
mov
sbb
les
lahf
dec
mov
scas
xor
outsb
or
mov
inc
lahf
movsb
kmovb
pusha
xchg
adc
pusha
inc
std
mov
cmc
lret
adc
shll
cmp
push
sub
movsb
kmovb
xchg
dec
lock
fisttps
cmc
mov
cmc
lret
adc
shll
cmp
adc
outsb
in
clc
pop
mov
scas
inc
shll
nop
xor
decl
rcrl
insl
test
std
inc
cmpsb
mov
mov
mov
mov
xchg
jne
push
pop
or
test
cmp
mov
xor
and
jae
insb
push
rorl
push
inc
int
rclb
adc
and
and
inc
movsb
lcall
imul
cwtl
std
or
push
rorb
xchg
pushf
or
and
cmp
mov
and
cmp
or
adc
xchg
xchg
sbb
daa
orb
mov
inc
cs
push
lret
es
ret
imul
jne
cmp
cmc
sub
mov
push
xchg
lods
bound
xchg
out
inc
mov
dec
inc
fcoml
pop
ret
mov
fnstcw
inc
sbb
test
adc
mov
fsts
outsb
enter
jo
sub
pushf
adc
jbe
add
adcb
sub
jle
sbb
jp
sub
sub
push
movsl
in
fucomp
push
popa
add
add
into
cmp
movsl
ljmp
jns
jae
rolb
ds
popf
jge
push
add
sahf
stos
outsb
mov
cmp
push
stos
push
or
pushf
fmulp
ret
push
je
lcall
mov
daa
jo
pop
jne
mov
push
xlat
loope
cmp
push
int
push
jecxz
push
jmp
add
xchg
sbb
mov
aaa
cltd
lcall
fistpll
rorl
or
ret
fucom
xchg
addr16
mov
pusha
in
dec
lods
test
pop
loope
insl
inc
inc
xchg
mov
ret
xchg
je
pop
dec
add
outsl
cmp
dec
mov
or
bound
xor
sub
out
mov
xor
sbb
aas
or
cld
push
shrb
mov
sbb
nop
inc
mov
mov
out
out
pop
inc
cs
adc
xor
or
xor
addb
or
cld
ret
sbb
add
push
pop
aas
cmp
bnd
inc
jb
xchg
xor
or
lret
fwait
cmpps
lcall
mov
push
jo
test
push
mov
xchg
mov
test
pop
cs
sbb
lret
mov
addr16
scas
les
push
js
scas
and
out
or
and
stos
inc
in
mov
and
mov
addr16
ret
iret
rcrb
das
push
cmp
xchg
jnp
or
dec
add
lock
ds
sub
push
test
and
cwtl
rcrl
and
in
mov
insb
movsl
sub
dec
inc
div
arpl
dec
mov
int3
push
xor
sub
cltd
jecxz
stos
ret
cwtl
and
clc
stos
xor
insl
outsl
mov
clc
js
jmp
mov
add
clc
testl
jmp
mov
pop
andl
xchg
les
repz
iret
mov
sbb
test
mov
aas
lcall
push
mov
int
xor
insb
nop
dec
sbb
xlat
lds
sub
outsl
faddp
and
mov
in
movsl
in
fucomp
push
mov
scas
test
clc
adc
in
mov
sbb
jl
xor
xchg
dec
jle
push
frstor
cwtl
and
clc
clc
mov
rclb
cmp
mov
mov
insl
mulb
repz
cmp
idivl
push
addr16
in
fucomp
push
jmp
lock
push
dec
jl
and
cs
addb
sbb
dec
mov
fidivrs
popa
je
test
scas
push
jl
or
es
lock
lret
icebp
shll
movsl
subl
cmp
mov
in
sbb
insb
push
mov
pushf
mov
and
xchg
sbb
mov
or
outsl
faddp
and
cmpsb
mov
fs
cli
idivb
mov
mov
lcall
fnstenv
mov
pop
push
xor
pop
pop
xor
out
cmp
sahf
ljmp
or
mov
lock
lahf
dec
lock
cmpsl
jl
aaa
jle
movb
dec
xlat
dec
cmp
icebp
fsubrl
repz
push
enter
sbb
mov
fdivrs
fs
data16
addr16
cmp
mov
adc
xor
jle
shlb
fiaddl
lods
es
inc
add
inc
and
push
add
mov
push
adc
mov
push
cmp
pop
push
mov
loope
xchg
jp
data16
mov
dec
ds
jp
into
sbbb
cmpsb
roll
lods
jo
inc
xor
cmp
inc
jmp
mov
ret
cwtl
and
clc
in
xchg
and
fisttpll
jg
inc
sbb
int3
shl
lods
int
xor
rclb
fimull
cmpl
lods
in
pop
adc
ja
std
call
adc
inc
cmp
test
xchg
pop
push
xor
mov
in
imul
add
mov
and
or
enter
test
xlat
or
aad
mov
mov
dec
shl
pop
sbb
cmp
shrl
sub
es
mov
push
jbe
js
inc
cmc
shl
jb
shl
popf
lods
xchg
xchg
aaa
mov
mov
jns
xchg
inc
insl
pusha
cli
push
hlt
mov
jbe,pn
and
pop
adc
popa
push
or
popa
inc
lcall
repz
pop
jo
mov
add
sbb
aaa
pop
movl
inc
pop
stos
mov
bnd
cltd
jae
jae
mov
jnp
lock
mov
xchg
mov
lret
insl
xchg
inc
dec
sub
es
inc
add
adcl
or
scas
dec
cmpsl
adc
in
dec
pop
xor
jmp
loop
into
insb
ret
cmovno
out
enter
jnp
stc
pop
jge
fwait
xchg
roll
jmp
pusha
mov
add
sub
aad
int3
rcll
sahf
imul
dec
test
mov
cld
inc
jb
pshufw
xchg
or
sarl
scas
test
mov
pop
rcrl
jecxz
mov
cmp
xor
jg
aas
mov
cmpb
adc
mov
xchg
jae
or
fstpl
imul
jae
pop
insb
sub
mov
pop
daa
adcb
add
out
xchg
sub
icebp
jo
mov
fisubrl
or
imul
push
add
loope
loope
xorb
icebp
sbb
dec
add
pop
nop
push
je
and
sub
adc
test
outsb
mov
das
cli
fimuls
fbstp
xchg
inc
xlat
sti
cmpsb
mov
cmpsl
cs
lea
and
mov
dec
cmp
shll
add
jge
loopne
ret
mov
dec
repz
clc
imulb
fistpll
out
mov
add
shll
cmp
xor
mov
movsb
push
pop
lret
cld
movsl
xchg
xlat
scas
data16
jmp
sub
sub
and
dec
and
or
aas
fldl2e
jo
dec
and
xchg
mov
xchg
jmp
jl
mov
movsl
mov
fdivr
mov
mov
push
movsl
pop
lds
fisubs
leave
xlat
shlb
test
sub
inc
sub
mov
fstpt
loopne
and
arpl
inc
jb
scas
jecxz
aad
xlat
ret
or
mov
mov
test
xchg
jp
xor
ds
ret
pop
shlb
and
ret
or
xor
cwtl
or
lahf
mov
add
mov
xchg
jae
fwait
add
jnp
xor
fstps
mov
cwtl
fwait
shl
clc
test
jae
hlt
ret
scas
les
push
pop
sub
mov
mov
sarb
mov
dec
fidivrs
repz
ds
mov
pop
dec
mov
mov
lret
scas
jle
xchg
std
inc
or
add
mov
push
ss
add
push
pop
aas
cmp
cld
loopne
sahf
scas
test
push
and
in
cli
adc
or
je
imul
shll
mov
sahf
stos
dec
loop
or
push
out
sbb
fldcw
fmuls
sahf
push
jecxz
dec
jl
js
cmp
mov
mov
lahf
mov
mov
inc
and
pushf
movsb
aaa
sbb
mov
dec
out
push
test
les
ss
mov
and
pop
call
dec
jo
sub
sbb
inc
dec
int
popf
std
fidivl
outsl
test
push
addr16
loop
dec
adc
shlb
mov
push
sbb
or
div
cmpsb
hlt
mov
jge
cmc
cli
add
sub
ret
adc
ljmp
sub
or
mov
int
and
mov
jb
mov
fstpt
loopne
and
arpl
inc
sub
push
mov
mov
test
mov
and
int
jbe
push
mov
call
jne
cmpsb
rcll
mov
and
or
cwtl
scas
inc
xchg
in
ljmp
lcall
pop
jg
ret
testl
sahf
in
aad
in
ljmp
mov
repz
es
shlb
ljmp
sbb
push
xchg
lahf
push
shrb
sti
mov
cmp
scas
sub
in
jl
xchg
iret
inc
lods
stos
sbb
pusha
in
dec
cmpsl
ret
push
cmpsb
mov
xchg
pop
aas
mov
push
test
je
loope
push
dec
sub
jbe
in
inc
jl
popf
fnstcw
inc
loop
cmp
aas
jbe
adc
mov
icebp
clc
test
sub
imul
mov
and
mov
xor
adc
adc
movsl
xchg
lock
aas
int3
insb
sahf
mov
cmc
push
nop
xor
loop
lods
add
aas
daa
xor
ret
sub
adc
and
pop
call
jmp
cmp
ret
inc
int3
xor
fisttps
xor
inc
rcr
xor
addr16
mov
scas
iret
or
shrl
leave
ret
out
fs
hlt
pop
pushf
mov
mov
pop
inc
movsl
add
mov
cmp
pop
add
rcll
sahf
leave
xlat
stc
mov
sub
incl
pop
push
dec
adc
scas
push
inc
pop
rolb
push
pop
or
out
cltd
xchg
mov
jge
lods
fldt
xchg
jnp
stc
js
xchg
inc
dec
push
sub
pop
dec
xchg
inc
enter
into
push
js
jne
and
cmp
sbb
sbb
arpl
js
xchg
das
cs
sbb
jle
out
dec
pop
cmpsl
xor
and
push
jno
out
xor
pop
flds
arpl
js
xchg
imul
lret
sbb
lahf
sbb
adc
mov
cmpsl
mov
jmp
pop
jnp
stc
js
xchg
loopne
ljmp
lcall
mov
ja
mov
xor
pop
xor
stc
js
xchg
test
cmpsb
movsl
stc
lret
cli
ret
pop
fcmovu
pop
inc
xchg
cli
mov
push
push
xlat
xlat
or
shrl
jnp
stc
js
xchg
lods
xchg
clc
fbstp
jns
jb
adc
jg
sub
orb
enter
aaa
mov
insl
add
incl
inc
mov
sbb
loop
push
add
cmp
xchg
pop
or
cli
pop
jnp
stc
js
xchg
jnp
stc
js
xchg
add
push
aam
mov
sub
push
dec
xchg
or
js
mov
push
cli
ret
pusha
ffreep
lcall
in
inc
mov
cmp
xor
jb
lods
mov
aas
sti
sbbb
das
push
out
or
popf
jo
loopne
pop
push
les
push
and
push
xlat
adc
jge
adc
xchg
lods
scas
repnz
sub
mov
lahf
and
stc
push
sub
push
or
clc
scas
stos
mov
fwait
pop
mov
roll
and
pop
mov
outsb
jae
ds
lds
sub
sahf
add
arpl
push
aas
mov
cltd
fidivl
dec
insl
mov
std
arpl
jge
jbe
pop
jmp
inc
xchg
imul
pop
lods
lock
adc
add
inc
sbb
scas
jns
lcall
lret
fwait
xor
sbb
add
gs
insb
inc
inc
inc
fisttpl
cmpsb
and
push
outsb
out
popf
sub
mov
in
xor
in
xchg
in
cli
mov
cmc
mov
jecxz
sub
in
cmp
mov
jne
push
push
addr16
mov
cld
pop
out
cmp
add
aas
mov
sbb
sub
rolb
dec
repz
jo
adcb
dec
mov
fwait
mov
xor
cld
lods
stos
psubsw
repz
scas
fldl
mov
fists
lcall
bound
inc
mov
into
add
or
push
push
add
xor
dec
sub
dec
jno
mov
mov
aam
in
mov
jb
sti
stos
jg
out
xchg
cltd
mov
test
xchg
pop
push
ret
fadd
sbb
ss
loopne
mov
xchg
push
xorl
fisubrs
adc
jns
sbb
xor
jl
pop
lret
je
call
pop
sub
mov
adc
xchg
xchg
mov
aam
inc
mov
mov
and
bound
xchg
roll
inc
sbb
or
xchg
data16
push
and
jne
stos
addr16
subb
outsl
dec
sub
pushf
jp
mov
jmp
lods
mov
jmp
stc
xlat
loop
jge
sub
mov
push
movsl
fistps
movsb
call
cmp
stos
fiaddl
in
cmc
movsl
push
jnp
mov
inc
push
in
inc
adc
leave
and
xchg
popf
in
js
xchg
inc
sbb
push
pop
jbe
add
sub
sbb
adc
add
mov
jl
faddl
cmp
jne
out
ja
paddw
push
pop
aad
out
fs
jns
insl
xlat
popa
jp
je
xlat
mov
or
stos
out
cld
push
pop
aaa
cmp
cmpsl
outsl
shr
and
mov
add
dec
xor
cli
or
inc
xchg
fstpt
pop
push
ja
cmp
subb
mov
push
mulb
push
inc
clc
rcrb
out
int3
flds
pop
xchg
cmp
pop
iret
mov
or
pop
scas
cli
outsb
mov
cmpsb
in
addr16
dec
adc
pop
mov
incb
in
jl
int
loopne
mov
clc
dec
xor
aam
cmp
add
arpl
ljmp
dec
sbb
mov
leave
pop
imul
jmp
xor
inc
xor
fistl
jg
xchg
xor
pusha
sbb
push
jnp
xchg
pop
inc
xchg
xchg
mov
rcl
dec
inc
push
sbb
jle
inc
adc
mov
cmp
insl
xor
enter
mov
popf
sbb
cmpsl
dec
es
or
cmp
add
cli
lea
repnz
cmp
stc
jo
in
pop
test
mov
mov
cs
push
lods
stos
sub
mov
fst
dec
cmp
imul
test
and
imul
mov
adc
es
adcb
popf
notb
push
movsb
stos
jmp
test
fs
lock
sub
jp
pusha
cli
popa
add
outsl
add
fisubl
add
sub
repz
ds
mov
arpl
ss
fst
jecxz
push
repz
mov
sbb
lods
pop
pop
sti
pop
pop
rorb
fnstsw
push
insb
mov
jmp
test
fdivrp
jns
push
aad
out
sbb
lods
imul
es
mov
xlat
outsb
jmp
pop
daa
fwait
xor
add
js
call
fidivrl
fs
or
mov
stos
rcrb
jbe
imull
mov
jne
pop
jno
mov
iret
lret
fwait
mov
test
shl
jne
into
inc
mov
lcall
dec
addr16
shrl
loope
ljmp
or
std
dec
jle
pop
lods
pop
dec
cld
cmp
jge
and
jp
dec
mov
test
fwait
imul
imul
inc
loopne
rorb
dec
fisubs
in
pop
sbb
imul
rcrb
into
add
pushf
ret
jne
mov
mov
clc
or
mov
sbb
mov
rclb
xorb
shlb
jp
leave
jle
pop
pop
jmp
rdtsc
fdivs
loope
scas
data16
mov
jo
addr16
pop
jp
mov
mov
inc
inc
pop
push
mov
scas
xor
mov
push
int3
adc
mov
les
das
xchg
in
push
push
adc
cmc
lahf
or
or
cltd
testb
add
adc
dec
and
lds
ljmp
or
inc
int
scas
adc
mov
mov
cmp
dec
ljmp
fistl
mov
sbb
mov
dec
push
jne
dec
mov
add
clc
call
jb
mov
pop
enter
dec
jmp
push
xchg
lret
sbb
inc
cmp
outsl
xchg
out
aad
pop
mov
push
cltd
sbb
cmpsb
insl
fidivs
movsl
lret
out
push
adc
lret
mov
icebp
clc
jns
mov
shl
mov
jge
lahf
out
add
add
mov
jae
bound
push
jp
adcb
ret
jecxz
sti
stc
jge
push
out
in
lods
push
and
xor
inc
cmc
cmpsl
inc
push
leave
push
xchg
sub
imul
jmp
ucomiss
mov
push
xor
pushf
lods
mov
fistps
mov
fwait
xchg
loope
sub
out
xchg
orb
push
dec
push
cltd
ss
add
ja
pusha
mov
jmp
mov
daa
jne
mov
js
inc
iret
mov
imul
stos
mov
push
das
rclb
xor
aas
ljmp
inc
mov
mov
shrb
or
das
jmp
or
fsubrl
out
inc
mov
fstps
ljmp
loopne
sbb
in
loop
aas
stos
mov
dec
movsbl
lods
adc
mov
filds
pushf
cmp
jo
jge
je
jne
cli
js
pop
pop
iret
ret
lods
inc
cwtl
inc
jb
mov
testb
xor
pop
push
sbb
or
cwtl
andl
cld
test
jns
bound
int3
lods
jne
inc
or
or
jecxz
jp
mov
sbb
sbb
and
pop
movsb
mov
mov
sbb
popf
sbb
pop
ficompl
sti
ss
cli
outsb
fwait
mov
push
xchg
mov
mov
jbe
push
insb
jb
popa
fsin
dec
jle
mov
pop
jo
xchg
lcall
push
lods
push
fwait
mov
int3
add
xchg
icebp
mov
inc
lock
call
or
cmp
addb
mov
inc
lods
out
sbb
or
push
and
cs
stos
incl
and
imul
in
jbe
sub
lret
push
inc
mov
push
pop
fmull
mov
push
xor
xor
or
or
mov
std
push
xor
inc
inc
f2xm1
mov
mov
sbb
testl
xchg
pop
mov
pop
adc
adc
aad
into
les
loope
outsl
mov
inc
f2xm1
mov
mov
sub
aad
in
outsb
ss
adc
mov
mov
int
stc
cmp
test
mov
xor
and
cltd
push
stc
es
sbb
movsb
add
adc
cli
leave
stos
call
cmc
pop
stos
jnp
xchg
stc
pop
xchg
inc
add
mov
les
data16
popf
sarl
push
mov
mov
fldcw
jno
jnp
out
xor
cmp
xchg
gs
push
popf
ret
pushf
pop
jo
mov
or
inc
movsl
add
inc
int
mov
test
inc
js
outsb
imul
pop
shrb
rolb
adc
cltd
in
fsubp
sub
nop
add
pop
es
dec
std
add
jnp
sub
xchg
push
int3
jle
or
adc
sub
rcrb
je
sbbb
adc
int3
fldt
push
cmc
mov
loopne
xchg
in
les
adc
sahf
out
daa
fdivrs
scas
inc
mov
lcall
xchg
xor
les
push
mov
mov
aad
in
outsb
ss
or
jne
jns
popa
jae
daa
fldt
cld
mov
or
mov
lea
cltd
xchg
xchg
adc
and
add
cmc
aaa
imul
jl
and
in
mov
test
in
xor
lahf
ret
xchg
xor
stos
cld
arpl
fcomps
sarl
daa
inc
fdiv
lds
pop
outsl
in
pop
cli
cmc
fidivrs
insw
and
mov
adc
jle
into
lds
adc
movsb
xchg
xor
testl
xor
sub
inc
ret
xor
mov
and
cmp
pop
xchg
and
movsl
cmp
outsb
loopnew
inc
lea
cmp
lods
sub
push
out
dec
xchg
push
push
cmc
shll
test
ja
repz
add
ja
mov
lret
shlb
mov
dec
mov
mov
icebp
dec
mov
jge,pt
outsl
leave
aad
std
jecxz
dec
pop
jle
push
shr
and
dec
sbb
mov
or
in
jmp
mov
fsubr
test
sub
jge
jge
popf
inc
imul
jecxz
mov
push
xor
sbb
call
jb
xchg
dec
ja
test
in
test
jp
test
mov
sarb
loopne
test
mov
push
and
cld
mov
xchg
pop
faddl
data16
fcomps
test
push
mov
in
xchg
shlb
jne
fiadds
lds
loopne
cltd
loopne
stos
pop
mov
add
dec
push
xchg
lods
es
shrb
fcomps
fs
sub
in
call
in
dec
shrb
mov
leave
int3
pop
stc
sub
mov
sarw
mov
xchg
push
mov
arpl
inc
ror
stos
xlat
loop
fs
or
and
ret
sbb
jl
bound
movsl
pop
ljmp
sbb
icebp
mov
lea
addl
sbb
dec
lock
or
and
mov
fs
movsb
cltd
lds
mov
lea
repz
ds
and
mov
adc
jno
push
stc
sbb
mov
jge
mov
jp
adc
test
xchg
sti
mov
mov
outsb
cli
jecxz
xchg
xlat
add
scas
sub
jg
inc
push
test
dec
repnz
dec
push
and
dec
mov
test
cmc
inc
dec
addr16
fs
xor
adc
add
xor
mov
mov
and
sbb
stc
pop
cmc
sbb
add
pop
mov
or
push
adc
xchg
lret
xchg
cmpsb
xor
cmp
outsb
je
adc
cmp
test
jg
mov
and
dec
cmp
push
shl
int3
sbb
ds
out
daa
fdivrs
jmp
add
stos
cwtl
push
cmpsl
movsb
mov
loop
jp
fnstsw
test
scas
fsubr
push
adc
lock
jp
and
insl
cltd
xor
fidivrs
ss
ljmp
cs
cmpb
cmpsb
icebp
lret
and
pop
push
icebp
ss
xor
hlt
jb
inc
jne
lret
insb
clc
dec
mov
bound
cmp
jl
or
adc
pop
cmpsl
mov
cli
jmp
nop
mov
mov
jmp
jecxz
inc
inc
and
mov
fistpll
or
mov
or
or
push
sbb
add
cld
sti
fwait
clc
mov
test
dec
movsb
and
aaa
int
fst
test
es
test
rcll
sub
xchg
pop
out
add
lods
jns
andl
cld
test
lea
and
xchg
sbb
dec
xor
aas
mov
push
in
mov
push
pop
cli
fwait
add
mov
jg
inc
push
test
dec
cwtl
pop
dec
and
xchg
jb
out
push
or
insb
cmp
out
adc
mov
mov
andl
lock
add
scas
and
mov
into
cmp
xchg
mov
jno
je
cltd
mov
fisubl
mov
cmpsl
adc
pop
stos
xor
movsl
push
es
mov
jbe
jns
enter
and
sbb
pop
in
adc
and
pop
leave
jmp
test
shrl
push
mov
mov
arpl
adc
stos
sbb
stos
cwtl
sub
rcrb
test
mov
in
lds
scas
pop
jl
pop
int
xor
jb
xchg
mov
push
sbb
dec
cmpsb
sbb
enter
push
dec
pop
iret
mov
push
cld
aas
je
add
or
jbe
jnp
pop
mov
sub
ffree
out
idivb
lock
inc
div
dec
int3
mov
jge
aaa
lahf
mov
fimull
fucomi
push
pop
cmp
adc
ss
aaa
das
out
insb
push
insl
loopne
out
out
dec
add
lea
cmpsb
cs
jecxz
and
xorb
pushf
es
sti
dec
movsl
call
lods
gs
shlb
mov
bndldx
gs
int
xchg
shll
pop
xor
cli
ja
adc
mov
andl
mov
in
push
shl
call
add
mov
movsl
mov
test
out
inc
inc
xor
sub
fdivrs
mov
mov
enter
mov
xchg
addl
and
aas
inc
ja
and
das
or
jl
fwait
or
push
xchg
sub
in
insb
in
and
sbb
pop
cmp
inc
mov
out
in
lods
aam
or
insb
xor
das
mov
je
pop
xchg
or
mov
in
icebp
xchg
std
sub
xchg
pop
outsb
xor
adc
push
pop
sbb
sub
inc
aas
pushf
and
js
aaa
insb
out
cmp
adc
movl
sbb
icebp
cmp
loop
clc
mov
mov
or
pop
icebp
divl
notl
jp
notl
loop
rolb
lret
xor
nop
loop
push
test
or
cs
jl
in
lods
pop
inc
bound
and
popa
and
jo
out
popf
std
sub
xchg
pop
outsb
jo
es
mov
ds
fiadds
inc
mov
clc
dec
jbe
ljmp
cli
dec
out
xor
pop
xor
sub
xchg
sub
mov
fistl
leave
sbb
inc
je
jge
pop
iret
loope
jle
xor
jb
cmpsb
imul
scas
aas
enter
adc
popl
ret
push
out
dec
mov
inc
push
insb
mov
sub
test
test
test
push
pop
fnstenv
jne
in
lahf
pushf
push
dec
pop
mov
adc
mov
enter
lea
cld
repnz
jge
out
xor
push
xor
xchg
and
inc
sbbl
mov
stc
test
and
adc
cmpsb
mov
pop
inc
sub
jle
js
clc
xchg
repnz
lock
stos
test
popf
imul
mov
fwait
into
cmp
fstl
push
adc
add
mov
push
daa
xchg
mov
fdivl
scas
test
cmp
adc
inc
out
and
jmp
cwtl
fnsave
cld
mov
add
jne
push
inc
sub
pusha
loope
nop
popf
movsb
jle
lock
sub
repnz
cmp
push
call
test
sub
push
shll
sbb
adc
xchg
fiadds
xchg
jg
and
loope
push
outsb
mov
mov
and
out
lds
jb
in
jno
dec
inc
fidivl
sub
push
test
sub
out
xor
das
lods
mov
ds
jne
mov
fisttpl
repnz
sbb
pop
cmpsb
mov
outsb
clc
ret
test
arpl
daa
jbe
or
mov
insl
xchg
jl
imulb
cmp
in
psubb
testl
dec
lahf
dec
lods
mov
fldt
pop
add
in
or
sarl
into
cltd
lods
rcll
notl
jp
sbb
lock
das
xor
pop
clc
daa
sahf
mov
and
mov
fnstsw
inc
dec
fwait
in
int
push
lds
stc
add
clc
mov
cld
std
gs
xchg
pop
icebp
out
inc
push
jp
dec
test
xchg
bound
mov
add
and
aaa
das
jle
ficomps
adc
leave
push
into
imul
cmpsl
movsl
sbb
lahf
rcll
loope
xchg
pop
add
testl
fstps
dec
pop
jg
inc
push
test
dec
cwtl
push
insb
cli
fstp
sub
js
xchg
dec
je
and
dec
push
jg
cmpsl
popf
mov
dec
push
lods
ret
cmp
js
aad
cltd
dec
xchg
mov
adc
rorb
aam
xchg
es
mov
es
pusha
cmp
sarb
inc
xor
add
fsubl
mov
hlt
jecxz
and
andl
cmp
sbb
push
outsb
mov
fdivr
add
add
in
stc
mov
std
and
insb
sub
cmp
gs
xchg
loope
insl
repnz
cmp
dec
cmp
repnz
out
push
addr16
dec
pop
mov
cmpsb
insb
repnz
lcall
pop
cmp
sub
add
or
incb
inc
mov
in
mov
jge
sub
sub
cmpsb
mov
push
mov
dec
cmp
repnz
aaa
and
or
push
orl
dec
imull
test
xchg
or
adc
jg
lcall
sbb
outsb
mov
es
jge
add
mov
shl
andb
sbb
scas
push
ja
inc
fildll
call
imul
dec
pop
xor
subl
dec
inc
xor
ja
mul
or
inc
pop
enter
xchg
out
outsb
stos
mov
int3
xor
repnz
repnz
sbb
sar
lea
dec
pop
outsb
into
int
push
jne
leave
mov
mov
or
pop
dec
dec
loop
add
sbb
jns
pop
iret
leave
or
mov
push
aaa
movsb
popa
das
aam
pop
jne
add
mov
jmp
push
lea
and
outsb
iret
mov
mov
lahf
daa
nop
das
cmpsb
mov
ljmp
loop
xchg
stos
push
dec
nop
fcmovne
sarb
xchg
fpatan
sbb
sbb
jmp
or
sti
outsb
enter
dec
loop
out
sub
jns
sub
pusha
in
jmp
dec
inc
rcl
pop
or
movsl
sub
call
and
shrl
mov
lock
add
pop
or
cwtl
dec
lahf
lea
fneni(8087
ds
es
add
stos
test
jno
mov
sub
add
jecxz
je
push
pop
int3
cs
js
inc
xlat
lods
test
nop
das
cmpsb
mov
cmc
adc
pop
xlat
call
outsl
pop
or
clc
cmp
inc
and
int3
loopne
push
pop
insl
sbb
pop
les
in
rcrl
mov
sub
sub
or
sbb
shlb
add
and
pop
pop
aad
adc
lgs
out
cmp
sbb
cwtl
out
cmp
lret
jns
lods
inc
xor
inc
lahf
xlat
test
sub
cmp
mov
and
popa
pusha
jle
insl
subb
test
adc
xor
mov
and
ret
stos
mov
mov
scas
mov
and
push
fs
jg
clc
test
mov
add
lahf
adc
imul
dec
add
sbbl
ja
jmp
fistps
mov
sbb
add
lahf
adc
cwtl
cltd
xchg
push
int3
and
xchg
dec
sbb
xor
cmc
test
outsb
mov
push
xlat
or
and
adc
fstl
into
pop
cmp
loop
jmp
sub
or
xor
add
add
sahf
aam
popf
movsl
add
and
xor
fwait
lret
setae
jp
pop
into
cld
and
xor
xchg
mov
stos
test
cld
mov
and
xchg
shll
mov
mov
mov
pop
add
imul
outsb
cmc
mov
pusha
pop
pushf
popf
test
push
jb
es
xchg
shl
jl
sbb
loopne
pushf
and
pop
dec
fbld
xlat
jae
xchg
mov
imul
sbb
out
mov
nop
lods
pop
out
sbb
or
out
mov
mov
insb
outsl
sbb
std
fistps
sbb
cmp
leave
and
inc
ljmp
leave
test
mov
jecxz
xchg
adc
or
xchg
mov
push
sti
mov
ljmp
rcll
jae
xchg
mov
imul
sbb
push
les
clc
add
and
cmp
in
adc
xor
test
inc
or
and
pusha
out
push
int3
add
into
mov
in
xor
cmp
mov
sbbl
mov
out
xchg
std
adc
ds
push
bnd
xchg
aad
adc
push
inc
pusha
cmp
shll
es
icebp
jo
sbb
mov
inc
add
mov
ljmp
into
outsb
clc
int3
shll
decl
add
ret
repz
fcompl
inc
data16
sub
aas
mov
int
aad
adc
in
mov
or
adc
and
pushf
cmp
jmp
adc
loopne
in
negl
leave
insb
aam
cmp
jle
scas
cs
pop
cmpsl
mov
std
arpl
jae
sbb
and
add
daa
lahf
or
aaa
mov
mov
fs
in
sahf
mov
mov
mov
ret
imul
mov
mov
sti
and
stos
sbb
pop
std
clc
mov
aad
inc
push
daa
iret
pop
mov
icebp
les
cwtl
movsb
hlt
hlt
sbb
pop
sti
dec
or
mov
jnp
cmp
pop
adc
je
dec
out
xor
mov
inc
lods
pop
xchg
int
sahf
data16
pop
gs
stos
mov
jne,pt
mov
mov
enter
in
rcrl
pop
cld
aam
mov
bound
and
pop
cli
or
add
jmp
mov
xchg
repz
cld
insb
dec
mov
std
cmp
lcall
mov
test
mov
mov
mov
push
xchg
jge
jge
xchg
out
sahf
push
xchg
js
loop
je
mov
fidivrl
or
sub
sbb
sub
roll
cmp
mov
pop
jo
add
js
xor
aam
add
ret
out
jnp
xor
clc
mov
enter
lods
mov
jbe
or
jne
shll
cmpsb
ret
jge
mov
jb
sbb
jle
mov
loop
xor
xor
int
xchg
mov
fmull
iret
into
gs
mov
mull
rcl
fnstsw
mov
aaa
push
push
add
push
movb
scas
notl
push
pop
lds
lret
fmuls
or
or
inc
fwait
lods
or
mov
sub
insl
cwtl
mov
add
mov
sbb
pop
cmp
push
shl
insb
repnz
push
test
sbb
mov
sbb
mov
sbb
imul
call
popf
push
pop
cmp
or
jp
iret
ud0
addr16
test
sti
lcall
in
jle
repz
inc
mov
nop
loopne
test
movsb
dec
mov
fwait
ljmp
adc
adc
imul
loope
inc
andl
dec
pop
mov
xchg
pop
pop
shrl
pop
mov
xor
iret
pusha
pop
fistps
mov
or
mov
aaa
jl
cwtl
xlat
lods
in
leave
xchg
mov
jns
mov
xlat
lods
in
leave
push
pop
std
mov
sub
stos
pop
call
adc
jge
xor
call
pop
inc
das
faddl
int
jp
mov
mov
push
subl
mov
mov
fdivrs
mov
clc
push
sar
pop
int3
cld
mov
out
mov
or
inc
jmp
pop
fs
xchg
hlt
imul
jne
xchg
movb
push
cmp
addr16
fs
xor
hlt
lahf
jae
aaa
or
inc
iret
dec
sub
pop
call
shl
in
cmp
mov
out
fwait
push
mov
repz
pop
cld
dec
repz
dec
adc
xchg
dec
leave
std
int3
pop
inc
cmp
xchg
subl
pusha
outsb
in
mov
lods
mov
scas
inc
shll
movsl
lcall
out
lret
inc
std
sbb
stc
mov
insl
mov
outsb
out
cmp
or
pop
aaa
jo
or
movsb
and
pop
movsb
loop
popf
pop
arpl
inc
push
ss
aam
push
outsl
gs
mov
dec
daa
jecxz
add
xchg
in
push
lcall
sbb
jge
dec
enter
stc
and
sub
jmp
push
fwait
roll
or
push
push
bound
add
insb
mov
faddl
nop
pop
fnstenv
out
xchg
sbbl
insl
and
mov
fxch
icebp
mov
inc
lret
mov
ret
out
lret
push
inc
mov
pop
sbb
das
adc
xlat
xchg
ljmp
sbb
mov
rcl
nop
jmp
ja
mov
and
mov
dec
mov
pop
and
add
rcr
push
xchg
fnstenv
mov
or
jnp
mov
add
test
mov
mov
cs
xchg
addr16
pop
into
mov
js
leave
dec
test
imul
nop
or
lods
pop
jo
sub
js
pop
and
pop
les
xchg
loope
and
jns
divb
nop
stos
pop
or
inc
or
mov
cmp
aam
add
sub
mov
pushf
and
sub
faddl
jnp
fstpl
cwtl
jns
jmp
iret
jae
fadds
movsb
jno
pop
inc
mov
mov
orb
into
pushf
push
out
and
and
ljmp
iret
jg
xchg
cmp
filds
imul
jb
jle
dec
push
mov
push
push
daa
shl
inc
xchg
dec
jne
das
lcall
test
jge
xlat
add
mov
jmp
dec
and
jmp
fcmovb
mov
mov
in
pop
jns
xor
sbb
pop
jg
xor
stos
or
sbb
push
pop
xor
aas
inc
dec
cmp
cltd
stos
push
xchg
movsl
hlt
mov
popa
cltd
fisubrs
je
pusha
aas
mov
mov
int3
lcall
hlt
out
fxch
lods
jns
xchg
mov
inc
dec
insb
cmp
xor
ret
xchg
lods
push
and
xor
inc
cmc
mov
cmp
aad
int3
imul
pop
jg
xor
mov
jno
in
push
es
jbe
push
and
mov
cmp
push
pusha
aas
mov
rcrb
movsb
push
push
lods
mov
fs
lds
scas
cmp
xchg
insl
lret
push
jle
mov
fisubrl
add
jns
imul
push
sahf
push
inc
jp
jmp
imul
testb
daa
pop
pop
rcrl
lahf
lret
or
jl
jae
stos
cmp
pop
xchg
sbbb
inc
xchg
dec
jne
das
lcall
xor
inc
popf
icebp
mov
loope
push
sbb
cmp
sti
js
aas
gs
xchg
pop
dec
xchg
sub
jbe
mov
cli
mov
dec
hlt
xlat
mov
aad
cli
and
jb
scas
insb
jp
ds
cmpsl
ret
jns
and
pop
stos
je
jnp
enter
or
lock
loop
ficoms
movsb
aad
mov
aas
pop
mov
loope
push
push
rolb
mov
mov
xchg
push
sub
imulb
std
ljmp
clc
imul
mov
movsl
cmp
shlb
pop
leave
cmp
jns
sahf
hlt
cmp
pop
xor
xchg
mov
dec
nop
jae
mov
mov
js
sbb
aad
jbe
push
xchg
sub
xchg
stc
lret
ds
scas
push
movsl
jns
subb
pop
xchg
es
mov
aas
xor
mov
mov
dec
cmp
les
inc
mov
or
loop
mov
mov
or
pop
jp
mov
movsb
mov
out
pop
inc
push
mov
adc
ret
add
stos
mov
lcall
cltd
add
xor
or
dec
rol
outsl
loop
sbb
jo
mov
xor
inc
jle
fbstp
lret
adc
pop
add
enter
arpl
lds
shlb
mov
mov
fisttpl
pop
aas
in
xchg
test
mov
xor
int3
ljmp
pop
inc
hlt
mov
fisttpl
insl
or
sub
xor
xchg
lock
lds
mov
push
xor
jns
sub
les
cld
call
insb
mov
aaa
cmpsl
lods
mov
fstpl
lahf
xchg
pop
pop
enter
mov
sti
insb
mov
fwait
into
lcall
dec
std
inc
mov
cwtl
push
cmpsl
movsb
mov
loope
add
mov
sub
pop
push
push
cmpsb
aam
push
daa
cwtl
pop
sbb
sub
xchg
rcr
dec
lcall
sub
mov
lds
jge
sbb
dec
mov
xchg
pop
out
jne
push
repz
lock
scas
and
mov
test
add
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
int
js
dec
adc
inc
push
out
shr
fistpl
test
loopne
ljmp
ds
and
cli
xchg
cmp
sub
push
inc
adc
pusha
mov
jns
ret
jmp
xor
fiaddl
mov
divl
incl
cltd
das
rorb
pop
ret
sbb
mov
aad
push
xchg
lods
push
les
fidivrl
fstl
jnp
stc
js
xchg
iret
ss
out
cmpsl
mov
inc
mov
mov
jnp
stc
js
xchg
jg
add
shll
inc
mov
js
xchg
jle
cltd
test
enter
ss
popf
clc
sbb
sub
shrb
nop
sub
sub
lock
pop
rdpmc
int
or
cmpsb
add
adc
push
push
push
insl
jns
dec
and
leave
aad
fsubr
clc
add
adc
dec
ljmp
fisubrs
clc
scas
jmp
pop
adc
aas
pusha
jns
dec
ficoml
out
xchg
out
insb
jae
or
jl
lods
pop
fisttpl
xor
push
cs
pop
int
cli
repz
les
pop
test
lods
pushf
dec
add
iret
jmp
frstor
test
xor
dec
pop
dec
inc
scas
xor
jns
push
adc
cmp
pop
mov
es
inc
push
add
insl
push
das
mov
cltd
out
or
dec
aad
push
jp
xor
adc
lcall
fwait
and
fsts
push
adc
jl
push
inc
add
aam
fsubs
fsts
jge
lock
addr16
and
jge
inc
push
dec
repz
mov
xchg
dec
and
lods
or
mov
jb
mov
call
andl
add
mov
add
dec
movsb
adc
pop
mov
add
dec
ret
int
in
divl
enter
dec
adc
mov
jnp
cwtl
xor
jg
pop
pop
cmp
add
add
pop
inc
pop
movaps
arpl
stos
mov
mov
aam
imul
inc
rclb
int3
clc
push
or
sub
inc
stos
data16
lock
in
clc
push
insb
dec
int3
and
iret
push
fnstsw
or
cmc
fwait
and
push
fdivl
pop
cmp
sbb
mov
jmp
cmp
fdivrp
adc
enter
jmp
mulb
jnp
sahf
loope
inc
sub
in
pop
pop
ljmp
fcmovbe
js
pop
push
cmp
aaa
pop
mov
dec
mov
aas
jecxz
es
stc
ss
popf
sub
pop
ds
mov
jg
cmp
in
cli
jae
inc
leave
clc
mov
scas
lock
leave
dec
jl
repz
xor
int3
xor
pop
fisttpll
das
sbb
cmpb
std
lea
lock
mov
sub
mov
pop
inc
mull
arpl
js
xchg
jnp
stc
js
xchg
scas
sub
cmpsb
jnp
stc
js
xchg
imul
pop
xor
stc
js
xchg
loope
push
and
jnp
stc
js
xchg
push
sbb
mov
incl
jne
pop
ds
jnp
stc
js
xchg
mov
push
push
adc
push
jnp
stc
js
xchg
mov
mov
jnp
stc
js
xchg
ret
pop
je
jl
ja
jnp
stc
js
xchg
test
data16
stc
js
xchg
mov
cltd
ret
cmpl
js
xchg
subl
stc
js
xchg
and
adc
push
mov
stc
js
xchg
test
cmc
popa
xor
arpl
js
xchg
imul
jnp
stc
js
xchg
std
xchg
mov
imul
js
xchg
dec
aas
push
test
stc
js
xchg
sbb
fimuls
inc
arpl
js
xchg
push
sbb
imul
sti
adc
stc
js
xchg
mov
imul
ror
in
cmpsl
sbb
xchg
jnp
stc
js
xchg
sbb
dec
jle
inc
movsb
jnp
stc
js
xchg
xorl
jne
arpl
js
xchg
arpl
cmp
jnp
stc
js
xchg
pop
jb
dec
pminsw
js
xchg
cmp
push
dec
jnp
stc
js
xchg
inc
push
push
cmp
arpl
js
xchg
adc
dec
pushf
insb
jnp
stc
js
xchg
ljmp
mov
arpl
js
xchg
daa
jbe
fmull
arpl
js
xchg
pop
pop
scas
jb
into
xor
incl
inc
push
call
stc
js
xchg
mov
mov
jnp
stc
js
xchg
xor
dec
add
stc
js
xchg
xlat
icebp
out
fsubrs
push
mov
js
xchg
sbb
pushf
cltd
mov
incl
pushf
lods
ficoms
and
stc
js
xchg
mov
sub
stc
js
xchg
xor
repnz
jmp
arpl
js
xchg
ret
stos
mov
and
jnp
stc
js
xchg
daa
cli
int
ds
stc
js
xchg
add
or
pusha
dec
jnp
stc
js
xchg
iret
mov
pop
loopne
arpl
js
xchg
sub
xchg
int
arpl
js
xchg
out
jmp
call
jnp
stc
js
xchg
into
jg
roll
js
xchg
inc
jmp
sbb
jnp
stc
js
xchg
mov
push
pusha
int3
std
mov
incl
mov
mov
incl
dec
dec
mov
fbld
jnp
stc
js
xchg
andb
push
jp
in
jnp
stc
js
xchg
aaa
xor
lods
pop
jnp
stc
js
xchg
aad
shll
jnp
stc
js
xchg
cmp
loop
jnp
stc
js
xchg
xor
in
jnp
stc
js
xchg
ds
lods
jl
jnp
stc
js
xchg
sbb
inc
mov
js
xchg
cmp
std
inc
hlt
frstor
js
xchg
xor
dec
sbb
jnp
stc
js
xchg
adc
push
out
dec
xor
arpl
js
xchg
push
mov
jnp
stc
js
xchg
push
lret
jns
jnp
stc
js
xchg
roll
sbb
jnp
stc
js
xchg
enter
pop
mov
sbb
jecxz
test
mov
xchg
adc
imul
add
lret
in
pop
mull
inc
sbb
andl
orl
stos
push
iret
cwtl
inc
mov
popf
xchg
out
out
or
xchg
add
push
icebp
pop
adc
and
inc
out
fistps
les
jg
sahf
addl
inc
stc
or
pop
mov
xchg
dec
sbb
cmpsl
aad
ljmp
push
int
arpl
js
xchg
jnp
stc
js
xchg
callw
notb
xchg
fnstsw
in
insb
mov
dec
fimull
ss
xchg
cli
mov
lea
popf
insb
mov
test
dec
xor
and
mov
xchg
jge
aam
jmp
aas
mov
and
call
push
test
incl
adc
push
scas
lret
test
arpl
add
mov
rorb
stc
popf
adc
mov
mov
js
std
test
ja
orb
sub
in
dec
out
mov
test
and
fcom
push
add
xor
or
dec
pop
and
pop
xchg
mov
xchg
xchg
cld
ss
mov
mov
sub
negb
ret
sahf
sbb
and
and
or
rcll
aam
insb
xor
ret
inc
leave
push
cltd
pop
scas
decl
dec
enter
inc
in
ljmpw
fidivrs
rcrl
mov
enter
push
sti
pop
sbb
iret
lods
sbb
fisubs
dec
fwait
mov
mov
cmp
push
scas
lds
aam
aaa
pop
and
mov
loopne
daa
lods
dec
aas
scas
mov
lcall
adc
cmp
mov
jo
faddl
lahf
cmp
sbbb
and
push
jl
xchg
pushf
fnstenv
test
dec
pop
stos
loopne
pop
sbb
in
insb
shrl
popa
xchg
mov
or
lock
push
jecxz
ljmp
mov
jbe
pop
sbb
ret
aam
push
cmp
daa
sbb
fnop
outsl
in
cli
cmp
push
inc
inc
inc
decl
xor
lods
jmp
dec
mov
cwtl
rcrb
ror
xchg
lahf
clc
gs
loope
add
fcmovnu
das
sub
mov
movsb
repnz
imul
xchg
push
mov
or
pop
and
jns
jmp
ret
mov
pop
inc
test
dec
cmp
insb
loopne
push
jp
popa
clc
mov
cmp
dec
mov
seta
pop
sarb
mov
mov
loopne
pop
cltd
xor
xchg
shrl
test
sti
icebp
add
cltd
pop
leave
movsb
adc
sbb
fisubl
aaa
jl
test
divb
or
fdiv
mov
jb
shl
movsb
lret
push
mov
ljmp
aaa
daa
shlb
sbb
fisubrs
adcb
push
iret
push
lcall
jo
mov
icebp
dec
rcrb
jge
sub
sub
imul
ret
and
xor
mov
push
in
fisubrl
dec
lahf
xchg
pop
fistpll
cs
jle
pop
mov
in
mov
mov
inc
imul
cmp
mov
ret
inc
adc
push
lds
push
movsb
xor
stc
stc
lds
shl
jl
sahf
call
dec
mov
jmp
and
movsb
jno
out
cli
cmp
sub
or
sbb
sub
outsl
push
xchg
xchg
sbb
xor
pop
lock
pop
stos
fdivrl
adc
cs
push
push
xor
mov
icebp
sbb
out
je
imul
inc
call
xlat
jp
lret
jo
xor
cltd
mov
sub
inc
sub
lock
mov
adc
xchg
lea
xor
jmp
ret
mov
push
stos
mov
mov
cmpsb
outsl
cmp
jmp
lret
sub
and
mov
sbb
jge
mov
sarb
inc
or
pop
mov
clc
fisubs
stos
fildll
in
out
push
nop
hlt
mov
push
inc
sbb
shll
and
pop
sub
inc
ficoms
jnp
xor
aas
rcrb
xchg
pop
mov
iret
cmc
push
add
adc
lods
dec
dec
negl
pop
aaa
cs
add
adc
pop
in
js
mov
scas
adc
loop
or
xchg
pop
mov
lea
cmp
mov
push
add
icebp
nop
mov
dec
loope
in
dec
xor
xor
mov
push
mov
fstl
adc
das
fdivrs
xchg
mov
cwtl
inc
pop
shlb
and
cmpsl
sub
fistl
jge
imul
xor
into
es
cmp
jno
mov
sahf
jmp
aad
repz
mulb
push
ss
lret
mov
mov
arpl
mov
test
dec
add
sbb
data16
inc
push
xlat
lret
fstl
mov
sbb
aam
inc
mov
pop
std
mov
mov
fsubrs
movsl
xchg
scas
add
std
or
xchg
lods
xor
cmp
divl
lods
inc
dec
jge
mov
packsswb
int3
shrb
outsb
sbb
mov
cwtl
and
repz
subb
ljmp
inc
mov
inc
dec
jbe
rolb
add
add
in
imul
adc
jnp
xchg
dec
and
int
cmpsl
dec
je
mov
cld
in
cmp
ds
jmp
pop
iret
rolb
loop
push
push
push
fstpl
ret
and
scas
mov
pop
pop
lahf
sub
xor
sahf
int3
cmpsb
or
insb
jmp
lcall
aad
xchg
orb
xchg
mov
divl
fcomp
and
shlb
inc
popf
mov
lret
lcall
or
sahf
hlt
loop
mov
mov
xor
data16
out
push
or
orl
dec
fwait
adc
sahf
cltd
dec
popf
jp
loop
mov
xchg
test
push
xchg
and
mov
mov
cmpl
mov
movsl
lcall
call
cltd
adc
hlt
inc
jp
insl
int
dec
fdivs
inc
aaa
mov
push
jae
ljmp
int3
inc
stos
xchg
mov
or
dec
imul
mov
xor
sbb
xchg
cmp
ficomps
fs
std
xor
cmc
lahf
lcall
in
call
xchg
mov
push
or
push
cmpsl
not
outsb
xchg
mov
lock
leave
jo
and
lret
int
push
xchg
mov
mov
lahf
pop
aaa
push
jmp
into
imul
arpl
inc
out
int
pop
xor
jp
push
loopne
les
out
dec
fs
sbb
js
shll
icebp
mov
sbb
stc
repnz
sub
and
sub
out
pop
scas
push
xchg
ret
test
loopne
xchg
pop
in
jmp
cwtl
add
mov
mov
jge
xor
sti
imul
dec
inc
enter
cli
lret
pop
rclb
xchg
push
mov
pushf
scas
jnp
shll
mov
jg
cwtl
and
pusha
sbb
mov
shll
mov
pushf
in
adc
lret
and
and
inc
pop
jb
lea
xchg
sbb
mov
jnp
cmpsb
fisubl
inc
cmp
test
loopne
or
sbb
lahf
jle
sub
cmp
sbb
cld
out
push
lock
mov
pusha
testl
sub
jo
icebp
jne
sbb
fidivrl
adc
jns
mov
testl
testb
scas
mov
test
jbe
push
lcall
call
push
jb
lds
repz
fadds
ljmp
in
mov
sbb
mov
je
xor
mov
or
aas
loope
push
pushw
nop
clc
adc
cmp
stos
mov
jge
pop
pushf
cmpsb
aad
xor
xchg
lds
loop
adc
shrl
lret
int
nop
inc
inc
mov
int
mov
into
dec
adc
dec
xlat
fsts
inc
cmpsb
inc
adcb
jae
sub
imul
cmpsb
nop
sub
sub
aaa
lds
fs
insb
ds
pop
cmpsl
sbb
cmpb
shlb
sub
mov
into
or
push
out
rcr
xchg
pop
ds
leave
or
ja
data16
dec
xor
mov
fcomps
lcall
mov
shr
jns
subb
or
shrl
js
in
or
hlt
jle
xchg
in
jmp
xor
mov
pushf
mov
sbb
jmp
mov
sbb
or
cmp
out
pop
test
fwait
mov
or
adc
pop
sbb
jne
sub
icebp
bound
xchg
test
lcall
imul
or
notl
lock
fs
inc
sbb
push
xchg
dec
loope
imul
mov
insl
ljmp
add
sti
jmp
sbb
add
or
ror
jp
in
dec
adc
sub
out
jnp
cmpsb
xor
clc
call
and
mov
inc
and
xchg
jmp
jg
xor
mov
push
js
rorl
mov
repnz
test
stos
mov
mov
xchg
imul
pop
cmp
imul
int3
jecxz
imul
pop
in
inc
or
pop
mov
mov
cmp
lods
dec
lock
es
lahf
in
inc
lret
addl
pop
lcall
mov
pop
sar
xchg
mov
cmp
sahf
mov
rcl
loopne
sbb
or
out
mov
movsl
loopne
rcll
int
mov
add
sub
mov
mov
cmp
les
push
in
stc
jl
inc
and
jp
repnz
mov
pop
sbb
ret
dec
mov
xorb
dec
jle
sub
sub
adc
insb
cmpsl
mov
mov
mov
dec
add
xor
dec
sbb
shll
xchg
in
sub
sahf
pop
rcrl
popf
push
push
xchg
scas
pop
cmpsb
in
sar
push
stos
cmc
cltd
cmp
mov
or
jle
scas
add
loop
imul
test
push
add
sub
testb
or
enter
pop
add
movsb
inc
adc
loope
dec
imul
addr16
push
mov
or
sar
ret
mov
xchg
cmp
xlat
pop
in
xchg
ljmp
aad
lea
jae
add
rcll
je
mov
mov
mov
xor
in
in
mov
sbb
lret
cmp
xchg
push
mov
sbb
push
inc
pop
xchg
popf
add
jnp
loop
pop
shl
add
outsb
xchg
jecxz
add
loopne
in
mov
or
mov
push
pop
cmpsl
rcrl
jmp
lcall
lret
adc
out
xor
cs
push
cmp
outsb
cli
lods
inc
jne
mov
xchg
loope
jmp
out
fisubrl
jmp
ficompl
shrl
adc
inc
les
les
sub
or
rcl
jo
dec
lcall
push
js
pop
mov
bound
sub
adc
fldt
cltd
sbb
jns
scas
adcl
dec
addr16
leave
je
inc
ljmp
xchg
loopne
adc
jecxz
mov
rcrb
stos
jnp
mov
push
pop
push
inc
or
pop
das
mov
mov
call
loopne
mov
cmpsb
xchg
add
mov
sbb
sub
push
inc
mov
fists
add
xchg
and
jmp
or
pop
movsb
dec
fstpl
mov
lds
sub
je
test
out
jne
push
repz
adc
popf
insb
pushf
xlat
xchg
cmp
int3
shl
dec
add
push
mov
or
insb
jno
test
xchg
jno
movsl
lret
adc
push
and
push
shrl
js
sbb
lock
sub
jmp
dec
aam
mov
rcrb
xor
mov
sub
adc
in
xlat
xor
lahf
ror
and
mov
cmc
dec
int3
mov
mov
inc
cmp
jecxz
iret
arpl
movsl
stos
loop
sbb
je
std
jo
fcmove
dec
cmp
aas
add
push
outsl
es
jl
jbe
into
xchg
das
jmp
inc
lahf
repnz
rol
sbb
cmpb
jle
sbb
lahf
cmpsl
mov
mov
add
push
mov
mov
inc
xchg
icebp
fistpl
jne
dec
add
mov
xor
aas
rolb
push
aad
jle
cmp
push
insb
xchg
inc
scas
lock
popa
jmp
push
mov
xor
cwtl
aas
xchg
sub
ds
popf
adc
cmp
loopne
mov
or
call
aam
and
cmp
add
shll
cld
adc
cs
jbe
movsl
and
imul
pop
cmp
in
or
cs
jecxz
add
imul
sahf
fimull
xchg
or
unpckhps
cmpl
imull
adc
outsl
in
cmp
jmp
rol
mov
int
sahf
xor
mov
jmp
stos
pop
xorl
push
out
pop
scas
fwait
insl
cmc
int3
test
push
push
outsb
imul
pop
mov
call
mov
jmp
jbe
movsb
cmc
sbb
fnstsw
mov
adc
sub
clc
adc
jecxz
imul
outsb
lods
lcall
cmp
sbbb
cmp
add
xchg
xchg
pop
cld
and
mov
jg
and
xor
lahf
sub
sete
fisttpll
pop
push
out
mov
jecxz
sbb
test
lods
sub
add
sub
inc
push
jno
or
lods
push
cmpsl
fstpl
inc
dec
add
cmpl
ret
mov
pop
pushf
xlat
jmp
shll
xchg
xor
nop
lock
repz
pusha
push
mov
mov
cmp
iret
sti
pop
test
cltd
fsubl
imul
or
fstpt
insb
push
pop
pop
int3
leave
nop
dec
sbb
loope
lea
data16
pop
mov
pop
pusha
cs
insl
inc
lods
mov
sub
loop
into
lahf
sub
pop
dec
mov
jae
cmp
jbe
pop
xchg
inc
out
pop
add
mov
mov
xchg
iret
xor
xorb
dec
ret
xchg
pop
mov
mov
adc
ljmp
sub
shrb
imul
je
adc
mov
leave
adc
in
mov
div
mov
lods
movups
daa
xor
cmp
es
jmp
mov
mov
pusha
sub
jmp
push
out
cmp
fdivrs
add
mov
mov
lds
xchg
mov
jae
adc
cli
and
mov
inc
dec
testl
aas
ret
push
sbb
dec
xchg
negb
adc
jnp
out
and
mov
xor
sub
lock
mov
loop
adc
sti
xchg
inc
daa
test
stos
inc
cmp
add
sbb
lock
sarb
outsb
sub
sub
and
push
or
out
cli
jp
aas
xchg
aas
cmp
mov
xchg
push
fldenv
xchg
jo
xchg
inc
pushf
les
mov
sub
addr16
mov
or
add
push
mov
sarb
sbb
adc
rolb
aad
sub
loopne
sbb
or
xchg
aam
adc
pop
dec
jnp
lods
mov
mov
or
movsb
xchg
sub
mov
and
sti
adc
sub
pop
ret
sub
push
sbbl
jbe
mov
adc
sahf
insb
sarl
stos
xor
pop
inc
imul
imul
or
mov
xor
sbb
sub
mov
ds
sub
xor
fucomi
sahf
add
cld
cmp
outsb
in
mov
pop
js
leave
sub
mov
sub
dec
push
sti
sarl
add
dec
and
fisttpll
mov
lret
add
cmp
push
cmp
push
mov
bound
pop
enter
pop
cltd
insb
xchg
movsl
pop
fidivrs
push
xchg
stos
pop
enter
xchg
xor
int3
jno
ret
sbb
mov
mov
inc
popf
xor
shlb
or
inc
sub
pushf
aaa
mov
add
mov
pusha
test
mov
aas
jmp
test
inc
sub
movsl
sub
xchg
xor
clc
dec
cmove
jle
push
lret
lret
mov
ret
push
ffree
mull
pop
arpl
sbb
js
fiadds
and
mov
mov
out
pop
repz
push
imul
cli
sbb
cmp
lret
das
mov
push
loopne
jnp
or
xchg
sbb
xchg
jb
inc
loop
dec
push
sbb
jle
push
sub
out
xchg
inc
cmpl
adc
mov
dec
and
xchg
das
sbb
cwtl
aas
aaa
jb
xchg
mov
in
negl
mov
lret
xchg
jb
adc
scas
lock
insb
aaa
adc
inc
mov
mov
cmp
repz
dec
sub
push
push
imul
jno
call
xlat
ja
adc
out
adc
or
imul
jb
scas
pop
sahf
jno
inc
push
sub
addr16
xor
addl
dec
lods
mov
cmc
inc
xchg
push
in
cmpsb
cmp
out
shl
pop
sbb
dec
jnp
bound
nop
test
pop
xor
cmp
inc
jg
fistl
and
into
xchg
cmpsl
and
cmp
xchg
push
arpl
sub
lret
imul
jno
mov
inc
test
divl
outsl
adc
or
mov
or
push
mov
mov
aas
dec
sbb
add
lahf
out
xchg
movsl
mov
inc
xor
pop
jnp
jecxz
mov
outsb
mov
pop
jne
insl
inc
insb
stc
out
mov
sbb
mov
jp
lahf
dec
and
imul
add
clc
icebp
or
rorl
cltd
sub
mov
sahf
jle
cli
jno
ja
aam
or
pop
pop
dec
enter
inc
int
push
lcall
or
mov
xor
adc
and
xchg
jnp
jb
fs
and
mov
lret
sub
leave
inc
lock
push
lds
xchg
cmp
mov
pop
arpl
outsb
sub
loope
xor
imul
jmp
pop
cmp
xchg
mov
insl
cmp
mov
decb
sbb
sbb
scas
xor
mov
icebp
inc
push
inc
mov
jo
outsb
test
imul
cli
xor
pop
pop
mov
adc
cmc
push
adc
push
daa
sbb
stos
xor
push
xchg
scas
mov
movsb
movsb
in
and
pusha
adc
pushf
dec
popa
arpl
stos
add
sbbb
add
lahf
popf
jb
jns
sub
dec
out
int3
lcall
xchg
daa
aaa
in
xchg
outsb
mov
into
adc
or
push
sub
jnp
sbb
shufps
lcall
ds
mov
aas
mov
les
xchg
push
mov
dec
inc
out
xor
and
push
push
cmp
sub
paddw
lcall
fwait
mov
addb
mov
jnp
scas
mov
mov
mov
dec
bound
out
in
call
add
imul
mov
dec
rorl
cwtl
jmp
mov
push
jecxz
cmp
xor
push
sbb
add
out
and
push
pop
xlat
outsb
inc
lret
dec
xlat
and
iret
xchg
add
mov
out
jmp
and
imul
inc
insb
push
dec
addr16
xor
inc
jcxz
cmpsb
mov
xor
jmp
ds
add
repnz
jg
lods
mov
sbb
pop
sti
mov
int
and
mov
jl
or
stc
lea
mov
cwtl
jecxz
cmp
jns
sub
adc
test
stos
add
and
cmp
add
sbbl
push
xchg
mov
xor
adc
adc
adcb
push
subl
jnp
adc
aaa
jne
and
les
sub
jnp
jns
mov
or
out
or
inc
inc
je
and
mov
repnz
negl
jmp
xchg
cltd
out
push
inc
cld
add
sbb
xchg
or
mov
dec
inc
fstl
xor
popf
fmul
jg
fcmovnbe
sti
push
aas
mov
xor
xchg
gs
mov
sahf
repnz
leave
push
pop
mov
pop
cltd
mov
mov
pop
pop
jae
dec
repz
fwait
xchg
and
add
shlb
rclb
ljmp
jbe
cwtl
inc
adc
mov
in
shrl
mov
mov
movsb
cli
fldcw
push
add
cltd
mov
aas
push
mov
stc
sub
jns
pusha
sbbl
ja
dec
lret
cmp
fprem1
jno
xchg
enter
repz
repnz
xchg
ljmp
mov
or
rcrb
mov
insb
mov
xchg
dec
gs
xchg
add
fistps
inc
inc
pusha
pop
sub
add
bound
imul
and
inc
mov
out
cltd
xchg
ret
cmp
clc
mov
or
test
add
xchg
pop
insb
mov
bound
inc
adc
ror
or
jecxz
or
into
pop
pop
outsb
cmp
push
push
sbb
aaa
mov
iret
out
testl
or
inc
mov
xchg
gs
icebp
cmp
cld
push
sbb
subl
movsb
jge
scas
rcl
jg
xor
pop
rclb
sub
mov
adc
adc
leave
pop
outsl
cmp
xor
inc
jno
xchg
ss
outsb
lcall
inc
popa
mov
inc
xchg
sbb
dec
js
xorb
inc
cmp
jb
dec
notb
nop
dec
mov
lret
dec
imul
mov
xorl
faddp
int3
and
movsb
push
xlat
sbb
xor
or
push
mov
xor
test
cmp
push
lret
loope
fdivs
pop
sbb
sbb
cmp
in
ret
push
movsb
mov
js
dec
mov
push
adc
sarl
daa
cmp
push
pop
pop
mov
xchg
adc
inc
and
xlat
mov
and
sub
inc
pusha
clc
add
sarb
movsb
pushf
jmp
mov
adc
mov
xor
outsb
dec
out
sub
movsl
fdivr
xor
push
xlat
imul
test
fs
pop
lods
repz
xchg
xchg
lea
lahf
andl
xor
or
clc
sahf
jo
es
jge
push
rcr
loope
dec
daa
pop
dec
mov
mov
cmpsb
sub
xor
sbb
mov
lea
das
sti
mov
mov
lods
lods
sbb
cmpsl
cmpsb
push
insb
fisubrs
ja
pop
pop
in
xchg
jmp
or
cmp
push
sbb
fstpl
lods
fldenv
fwait
push
test
dec
fcomip
xor
cmp
sbb
out
mov
jns
pusha
sbb
cld
cmpb
ja
inc
rorl
cli
push
in
sbb
test
or
addr16
pop
jle
out
sub
hlt
out
call
mov
imul
jo
aam
pusha
mov
int
loop
fisubs
ja
and
push
jecxz
xor
js
nop
jle
push
leave
pop
lea
adc
icebp
mov
int3
cmp
xor
mov
xor
xor
data16
jne
add
jmp
cmpsb
adc
pop
add
mov
out
or
or
pop
dec
rcrl
scas
sahf
jno
imul
and
and
push
sbb
lock
movsl
iret
dec
xorb
add
ret
jp
imul
lock
addl
jmp
add
inc
cmpb
cmp
pop
add
or
xor
xchg
clc
push
xchg
jmp
aam
dec
jp
loope
push
decl
mov
loope
xorl
cltd
mov
mov
or
push
in
mov
jb
jo
clc
lods
jno
out
mov
pop
mov
jge
sbb
pop
cmp
adc
aam
cmp
mov
jae
add
outsl
dec
xor
inc
hlt
das
push
jno
jl
push
jno
sbb
int
es
fcomps
loopne
in
sbb
fs
and
stos
test
fcomps
pop
mov
idivl
in
mov
xorb
adc
negl
in
sbb
fdiv
stc
inc
adc
inc
mov
add
popf
es
dec
mov
push
xorl
push
pusha
out
pop
and
adc
loop,pn
add
cwtl
jnp
mov
jmp
ror
jbe
pop
xor
sub
jno
aaa
ljmpw
mov
sti
xlat
adc
das
xor
ret
add
aad
mov
in
sbb
jo
test
or
xchg
lcall
add
decl
xchg
adc
adc
lahf
rorl
add
sbb
add
std
add
daa
inc
movsb
mov
and
pop
rcrl
ljmp
movsb
popa
sub
jae
push
out
xchg
or
cmove
lock
dec
icebp
test
fnsave
sbb
adc
mov
nop
adc
addr16
dec
sbb
imul
mov
inc
notl
and
mov
hlt
lret
div
sub
mov
pop
andl
fisttpll
pop
lds
leave
inc
cmpsb
sbb
out
sbb
loope
or
out
in
lcall
sub
inc
jbe
and
nop
fcomi
lret
xchg
int
mov
push
xchg
pop
addr16
sbbb
ss
fldenv
std
jmp
cmp
mov
pop
fcmovne
sbb
test
shll
fwait
lahf
adc
ficompl
aaa
cmp
cmp
push
push
movsl
jae
das
sub
std
pop
or
or
aaa
out
add
in
sbb
xchg
xlat
sub
icebp
cmp
sub
xchg
pusha
sbb
xchg
int3
inc
clc
aaa
lds
sbb
nop
push
notl
es
js
lods
mov
cli
lea
mov
dec
call
test
sub
fldt
cwtl
mull
pusha
aaa
cmp
jo
or
and
insl
aaa
push
xchg
jb
call
stos
xor
xor
inc
mov
and
popf
js
sbb
dec
mov
divl
shll
idivl
repnz
or
mov
xchg
push
popa
ja
xchg
mov
inc
loopne
insb
pushf
pusha
lods
xchg
sub
cwtl
dec
js
addr16
aad
inc
pop
or
push
jge
stc
testl
stos
mov
dec
test
clc
notb
cmp
loope
pop
sbb
adc
movsl
inc
popa
out
add
push
dec
test
add
or
shrl
pop
mov
xor
jbe
mov
push
dec
pusha
sbb
lods
sahf
add
lret
sub
xchg
jae
sub
adc
push
push
jnp
and
das
pop
mov
ja
je
cmp
sub
push
push
ljmp
xor
mov
cltd
sbb
jmp
jns
fs
stos
cmpsb
ss
outsl
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
jnp
stc
js
xchg
add
dec
cmp
inc
sub
pop
push
push
xor
and
insb
pop
cmp
cli
dec
inc
add
cld
add
adcb
add
add
add
inc
add
and
incl
inc
add
fdivl
inc
and
add
add
jb
dec
inc
push
dec
inc
dec
xor
cs
insb
add
je
outsl
fs
gs
imul
add
add
add
shlb
add
add
jb
gs
xor
cs
insb
add
gs
je
push
jb
arpl
jae
add
fs
insb
cs
insb
add
push
outsb
insl
popa
jo
imul
arpl
outsb
add
imul
jae
dec
gs
outsl
jb
add
je
push
inc
outsl
outsb
je
js
add
popa
fs
jb
arpl
jae
gs
outsl
jb
add
je
push
inc
outsl
outsb
je
js
add
jae
insl
gs
push
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
imul
jb
add
mov
and
or
adc
add
cmp
movsb
shlb
lahf
sub
insb
dec
in
out
sub
adc
cmp
push
mov
mov
lods
rcr
jl
mov
test
pop
or
push
xchg
sbb
jns
cmpsb
or
shrl
std
das
mov
sbb
in
scas
loope
xchg
jle
push
nop
jl
cltd
jg
icebp
inc
cltd
mov
mov
repnz
push
cld
mov
imul
movsb
jle
xchg
hlt
je
or
pop
int
jno
dec
adc
jnp
pop
pop
ret
xor
mov
pusha
sub
jns
lret
fstpt
push
sbb
pusha
mov
sahf
insb
mov
mov
ja
xlat
daa
dec
xor
pusha
pop
pusha
push
repz
push
stos
bound
call
push
mov
stos
sub
int3
mov
call
push
mov
adc
mov
mov
test
je
ds
into
push
xchg
xchg
pop
iret
and
adcl
sub
mov
mov
data16
or
popa
xchg
test
jl
xor
test
mov
test
add
fmull
mov
lds
inc
hlt
addl
test
fwait
pop
sahf
inc
push
jmp
addr16
stos
shlb
push
fsubrs
cmpsl
setbe
or
outsb
in
jp
push
lock
sbb
add
data16
inc
sbbb
out
mov
test
pop
mov
fdivs
loopne
and
test
push
push
bound
aas
ss
sbb
xlat
shlb
dec
adc
rcl
ljmp
leave
jb
pop
jnp
cltd
sbb
aam
neg
call
jecxz
dec
jns
mov
push
rolb
test
inc
ret
pop
arpl
sbb
push
insb
ds
cmp
outsl
in
push
cmp
push
cld
insl
sub
xor
or
jecxz
std
dec
xor
pop
sub
data16
sbb
lret
rorb
enter
or
sarl
or
pusha
sbb
add
inc
and
pop
sti
clc
jmp
xor
fists
jne
adc
push
push
das
stos
push
add
xor
and
dec
jnp
push
sbb
ds
mov
cs
xchg
fldt
fcomip
test
aad
jle
xor
jae
dec
mov
pop
lret
mov
lock
mov
mov
dec
pop
rcl
sub
gs
clc
mov
dec
mov
nop
xchg
sti
dec
fucom
xor
movsb
inc
adc
call
lret
add
sahf
jle
mov
icebp
sub
fistl
jno
lods
ljmp
mov
loopne
scas
das
pop
cmp
mov
jne
sti
loop
sub
repnz
or
dec
sbb
iret
shrl
and
das
ja
push
mov
mov
int3
mov
mov
rep
sbb
dec
test
mov
adc
cmpl
lods
shlb
pop
push
add
jae
xchg
ja
sbb
and
ja
inc
push
iret
xor
int
mov
sbb
dec
jle
scas
sub
mov
and
loopne
push
fwait
ss
mov
arpl
cmpsb
fistps
inc
sarl
pop
fldenv
mov
subl
enter
jae
lret
mov
test
push
sbb
push
in
fwait
mov
add
mov
mov
push
imul
repnz
arpl
cs
test
pop
sub
lahf
test
push
test
jo
dec
inc
sub
es
mov
outsb
lods
jge
cmpsl
dec
mov
mov
jno
stos
in
call
lcall
sahf
mov
movsl
add
sbb
dec
or
adc
cmp
in
cwtl
push
aas
gs
inc
pop
in
imul
negl
cmc
xor
out
out
sub
lock
fisttpll
jo
jmp
push
add
imul
out
mov
cmp
jo
imul
push
add
pop
push
stos
sbb
pop
ds
scas
fidivrs
inc
jge
mov
fidivrl
mov
or
lock
sbb
pushl
or
mov
mov
pop
jp
and
stc
adc
jl
inc
xor
in
cmp
fcmovb
aaa
xor
mov
cmpsl
lcall
rorb
ds
enter
jne
cltd
int
loop
push
ljmp
mov
sbb
mov
mov
inc
outsl
mov
adc
and
mov
push
scas
mov
ficoms
or
mov
aas
iret
fcompl
jb
push
and
imul
fstpl
push
xchg
test
pop
fimull
je
lcall
cmp
jp
cli
sbb
or
ret
les
sbb
or
adc
fstl
mov
mov
sub
add
sahf
clc
fbstp
dec
xor
ja
sbbl
mov
cmp
movsl
and
in
out
repnz
sti
icebp
xchg
sub
mov
push
jo
jecxz
mov
jmp
xchg
out
ja
push
cmp
sub
sbb
andb
dec
cs
adc
ljmp
hlt
sub
div
cmp
cmp
pusha
jns
sbb
cmpsl
and
adc
imull
lods
jmp
pop
ret
ljmp
jnp
shll
jg
sub
mov
out
fnsave
ret
movsl
pop
insb
mov
add
into
out
cmp
out
sub
and
jne
fucomp
adc
int3
adc
xor
iret
arpl
stos
nop
pop
jae
cmp
sahf
aad
fisubrs
out
cmpsl
sub
pusha
stos
pop
stos
pushf
outsb
test
mov
push
mov
mov
mov
xor
inc
mov
sub
mov
push
fwait
cltd
mov
notl
lcall
xchg
pop
xchg
in
adc
mov
mov
mov
cmc
push
arpl
sbb
ret
sbbl
or
push
in
out
bnd
ljmp
jae
jl
fsts
pop
jecxz
fs
loopne
and
stos
stos
mov
rorb
cli
inc
hlt
inc
mov
push
sbb
and
inc
sahf
jns
fadd
dec
test
push
bound
iret
inc
lea
orl
ret
and
jg
je
imul
mov
push
add
sbb
add
andb
lea
ljmp
sbb
xchg
lock
inc
jle
icebp
in
pop
fstpt
and
fidivrs
out
lret
cmpsl
repnz
xor
test
clc
sbb
out
call
stos
cmpsl
imul
fmul
or
test
std
leave
sahf
push
push
rcr
jae
int
push
adc
pop
addr16
inc
jcxz
xor
jno,pt
clc
sub
out
ds
sub
sbb
pop
cmp
xchg
sbb
dec
divb
imul
imul
push
and
aam
hlt
and
mov
mov
scas
popa
add
idivb
push
inc
inc
and
je
and
mov
dec
scas
xchg
mov
rcr
hlt
jo
das
mov
mov
shrb
jg
test
xor
cmp
push
out
and
stos
and
sub
fiaddl
mov
bound
push
movsb
rorb
out
lea
dec
mov
mov
jl
into
stos
in
pop
aaa
rcrl
sub
xor
test
fldcw
dec
adc
idiv
leave
sbb
xor
es
jecxz
je
outsb
cmp
inc
pop
out
push
dec
cmc
or
xchg
mov
fsubrs
dec
mov
xchg
imul
xchg
xchg
sarb
adc
int3
xor
loope
push
dec
sub
sbb
hlt
pop
jl
sub
jo
daa
add
adc
sub
and
in
adc
dec
faddl
stc
pop
nopl
movsb
jns
inc
pop
outsb
mov
push
pop
xor
rcrb
fs
jnp
pusha
pushf
sub
call
arpl
ret
push
sahf
xor
add
dec
scas
adc
xchg
and
xchg
xor
and
and
mov
cltd
or
jb
sub
mov
sar
xchg
mov
bound
jge
lock
int3
out
mov
jge
daa
std
popf
ret
push
lea
repz
arpl
je
cs
stos
outsb
outsl
cmp
std
clc
hlt
pusha
fcoml
test
fucomp
mov
or
push
jnp
aaa
sub
insl
cmp
gs
add
rcr
or
add
xchg
mov
in
punpckhwd
lahf
jnp
pushf
jge
into
or
xchg
mov
mov
adc
mov
cmp
cmp
jns
adc
xchg
loop
subb
inc
push
int3
dec
jne
sbb
js,pn
inc
adc
push
xchg
mov
mov
sti
dec
sbb
imul
in
lret
mov
loope
pop
push
inc
inc
xchg
adc
outsb
in
or
sub
stos
aad
scas
fs
test
fimull
ret
in
push
cmpb
jnp
pusha
dec
pusha
add
cmp
mov
cmp
add
inc
ja
cld
xlat
xor
xorl
lock
mov
pop
add
push
mov
mov
popa
cs
mov
mov
out
je
ret
xchg
stc
push
je
mov
push
bnd
mov
es
test
sbb
test
xchg
pop
xchg
mov
inc
jo
mov
xchg
push
aad
dec
fiadds
leave
loope
or
dec
bound
jne
sbb
or
test
xor
les
pop
pop
call
and
outsb
sbb
fbld
mov
sbb
fdivr
push
cmp
into
loop
push
jg
dec
add
push
cli
addl
les
out
daa
mov
lcall
pusha
ret
mov
test
sub
lock
cmc
shrb
fdivl
xlat
sahf
out
arpl
cmp
xchg
ffree
push
xor
ret
out
lret
mov
mov
sbb
add
dec
cmp
jl
jl
jb
xchg
pop
rcrl
mov
push
in
mov
cld
or
jl
fadd
shrd
out
push
push
clc
out
mov
adc
mov
out
aad
les
push
into
mov
fnsave
lcall
cli
push
loopnew
pusha
inc
aaa
into
cmp
iret
cmc
cli
shll
ja
stos
sbb
mov
inc
aaa
mov
sarl
mov
aad
jae
mov
jnp
add
imul
mov
nop
mov
mov
outsb
ss
stos
dec
push
jns
xchg
mov
enter
out
clc
rcpps
lea
or
dec
rorb
cmp
push
inc
mov
lods
add
pop
mov
lcall
arpl
out
xchg
imulb
and
stos
add
movsl
movsb
shl
pushf
mov
push
fwait
push
adc
fs
loope
cmp
jmp
out
das
push
imull
add
pop
or
ja
test
mov
lods
out
fwait
xchg
in
cmp
nop
jmp
fnstenv
sub
cmp
add
ds
shrl
sub
lahf
pop
fwait
mov
pop
dec
cmc
mov
lods
sub
out
sbb
std
lods
mov
fwait
cli
xchg
in
shr
int3
push
cmp
sub
clc
sub
adc
add
push
pusha
jne
inc
push
xchg
testl
hlt
mov
lock
mov
sbb
xchg
sub
cmp
cmc
and
sti
pushfw
cmc
sbb
fsubl
sub
xor
std
push
mov
xor
add
ja
sub
ret
int3
stos
pop
xchg
lods
int3
push
pop
call
cmp
popf
aaa
xchg
stc
and
into
jnp
sti
fs
and
mov
mov
inc
cmp
fimuls
out
adc
scas
mov
std
sub
pop
or
inc
lcall
fisubrs
enter
idivl
sbb
ror
mov
push
fldl
pop
cmp
ds
mov
test
ljmp
adc
inc
outsl
cmp
arpl
fwait
rcrb
ja
scas
jo
dec
testb
pop
out
push
jb
pop
jge
scas
or
inc
inc
int3
loop
dec
push
shlb
scas
adc
loope
cmp
push
dec
mov
aas
outsl
subb
add
daa
jb
mov
adc
out
jns
mov
loope
mov
mov
xor
leave
mov
sbb
not
mov
stos
call
sbb
sarb
fimull
aad
ret
cmp
addr16
jl
stc
lea
mov
mov
sahf
idivl
mov
aad
pushf
inc
fldenv
sub
xchg
mov
jno
xchg
adc
in
jmp
mov
pop
fs
shrl
shll
push
rclb
inc
movsb
add
push
outsb
in
loopne
fistpl
dec
fs
pop
lahf
fists
mov
mov
or
mov
dec
and
jbe
lea
cltd
fwait
inc
outsl
or
sbb
fimull
fcomp
push
iret
jns
into
outsl
jle
int
mov
push
add
rorb
notb
and
and
cmpsb
xor
int3
push
bound
jne
xchg
ss
outsb
int3
jae
mov
dec
mov
dec
adc
jno
mov
xor
shl
inc
lcall
leave
add
test
loop
and
xor
and
add
jl
lret
mov
pushf
jbe
sarb
push
shl
inc
push
pusha
mov
inc
and
jbe
inc
test
pusha
jne
dec
dec
test
call
jp
stos
stc
dec
pop
ret
mov
ret
add
loope
imul
pop
cmpsb
sub
out
ret
dec
mov
loop
into
jecxz
push
out
ret
.byte
js
add
add
add
add
arpl
add
add
add
add
sbb
xor
add
add
add
add
popa
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
add
bound
add
bound
add
add
add
arpl
add
add
add
add
add
add
shlb
shlb
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
add
bound
add
bound
add
add
add
arpl
add
add
add
add
add
add
add
add
fwait
add
imul
jae
add
in
add
je
outsl
insl
insl
popa
outsb
fs
imul
dec
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
addb
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
add
je
outsb
push
gs
js
gs
imul
gs
add
daa
add
addr16
popa
imul
cmp
pop
pop
jo
pop
outsb
jbe
jb
outsb
add
add
jo
pop
insw
outsl
fs
add
push
add
jae
je
popa
jo
pop
je
jo
add
add
jns
pop
arpl
imul
pop
imul
pop
outsl
outsb
gs
je
add
test
pop
jae
je
outsl
fs
sbb
popa
je
js
je
add
add
add
add
insl
popa
insb
insb
outsl
arpl
add
add
outsb
popa
insb
add
add
cltd
add
jb
insl
jo
add
add
add
add
inc
jb
popa
je
push
imul
inc
add
add
push
imul
outsl
arpl
add
add
popa
je
push
popa
addr16
add
roll
inc
imul
outsl
ja
add
add
inc
gs
gs
popa
addr16
add
add
fs
jne
jae
jb
add
add
fs
arpl
inc
add
add
jae
push
jne
je
gs
popa
add
add
add
imul
popa
jae
inc
js
add
inc
add
outsl
ja
imul
add
pop
add
outsb
jae
popa
je
dec
gs
popa
add
add
add
pusha
add
add
add
add
add
add
add
dec
inc
dec
xor
cs
insb
add
add
sub
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
arpl
cs
insb
add
cmp
add
add
add
add
add
add
add
add
add
add
add
push
xor
cs
insb
add
add
inc
mov
add
add
add
add
add
sub
add
pop
add
adcb
add
mov
add
inc
mov
add
add
add
add
add
inc
add
addb
add
inc
mov
add
add
add
or
add
add
inc
mov
add
add
add
mov
add
addb
add
inc
mov
add
add
add
or
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
in
jo
add
add
add
jae
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
pop
ja
ja
ja
ja
jo
add
add
add
ja
ja
ja
ja
add
pop
jo
add
add
or
jo
or
jo
add
add
mov
jo
or
jo
add
add
mov
jo
ja
mov
pop
jo
add
add
mov
jo
or
jo
add
or
ja
jo
or
jo
add
mov
add
add
or
jo
add
orb
mov
add
mov
mov
jo
or
add
add
add
or
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
addb
lock
decl
pop
jo
xor
lock
decl
pop
jo
xor
lock
decl
add
add
add
add
decl
pop
jo
add
xor
decl
pop
jo
add
xor
decl
add
add
add
add
add
decl
pop
jo
add
add
cmp
decl
pop
jo
add
add
cmp
decl
add
clc
add
push
add
jmp
add
inc
add
incl
add
incb
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
addb
pop
addb
pop
addb
pop
addb
jg
add
jg
add
incl
add
inc
add
incl
add
add
add
and
add
add
call
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
pushf
add
add
add
add
xor
aaa
add
add
inc
add
add
and
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
and
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
add
add
add
add
js
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
outsb
add
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
pop
add
.byte
